call
in
add
lea
push
push
push
add
lea
push
clc
push
push
add
add
leave
ret
inc
rclb
mov
cmpl
push
push
push
push
push
jno
es
push
push
mov
and
push
adc
in
and
or
jno
decb
daa
push
sahf
push
cmp
insl
scas
adc
das
pop
push
and
push
and
scas
mov
aaa
or
inc
or
mov
fistpl
cwtl
push
decb
push
and
mov
fimull
inc
push
js
and
insl
pop
push
pop
test
sahf
es
or
push
and
inc
sahf
push
jnp
pop
imul
cwtl
arpl
push
cwtl
add
pop
imul
inc
push
sahf
pop
mov
push
mov
insl
imul
push
je
mov
imul
pop
mov
es
push
add
sub
repnz
mov
add
mov
icebp
orl
imul
lret
adcl
es
movsb
push
mov
mov
inc
and
aas
imul
sub
inc
imul
add
and
cmp
mov
jno
fistpl
lods
pop
pop
lcall
loopne
fwait
loop
lret
dec
push
lea
scas
rorb
pop
in
aas
ficompl
push
pop
clc
incl
rorb
xor
ljmp
sti
jo
xor
add
movl
mov
mov
mov
or
repz
adc
icebp
adc
inc
mov
adc
mov
or
mov
fimull
or
and
xchg
mov
fistpll
aam
pushl
cmp
lock
loope
cmp
add
sub
add
mov
and
dec
rcrb
cmpl
mov
sub
mov
xor
sbb
fsub
inc
or
mov
push
or
lret
jno
add
mov
cwtl
jne
in
sub
or
push
add
add
andb
dec
and
mov
addb
js
pop
sbb
mov
mov
adcl
dec
jl
jb
sbb
test
bswap
and
pop
imul
and
and
or
or
imul
imul
mov
stc
lea
inc
imul
mov
hlt
jno
out
xor
mov
jmp
idivb
sbb
sub
je
inc
fnstenv
sbb
mov
jmp
xor
dec
cmp
aaa
pop
mov
and
cwtl
pusha
push
lods
loopne
jae
add
lods
xor
adc
idivb
pop
imul
shll
cltd
xchg
lcall
jge
push
xor
add
push
xor
or
pop
mov
sbb
or
into
std
or
iret
imul
mov
aas
ljmp
rol
and
dec
inc
jno
cmp
in
lea
jl
mov
mov
imul
and
mov
sub
cli
push
addb
add
dec
popa
adc
mov
rorl
inc
jl
jno
jecxz
push
push
adc
adc
pop
push
push
push
inc
pop
jmp
insl
movl
adc
add
mov
imul
bound
leave
jo
mov
mov
fs
and
inc
mov
adc
es
test
int3
inc
push
add
sbb
xchg
pushf
and
aaa
mov
out
cwtl
adc
or
insl
lcall
lea
jg
xor
xchg
lret
ss
or
lret
ficoml
sbb
mov
std
lahf
add
in
mov
xchg
lret
mov
or
sbb
rolb
inc
sbb
cmc
cmp
cwtl
push
shrb
push
sub
mov
or
push
movsb
shll
insb
scas
jne
push
add
xor
xchg
repz
cmp
mov
xlat
in
and
sub
mov
inc
cmp
adcb
popa
jne
jb
mov
sahf
loopne
cli
inc
push
xchg
subl
mov
sahf
push
cmp
sbb
adc
sub
aad
pop
or
cwtl
jne
jns
mov
rol
sbb
add
aad
ds
lcall
push
loope
pop
cwtl
push
add
push
sub
xchg
loopne
cmp
lods
sbb
or
sbb
pop
mov
test
out
mov
jmp
sahf
inc
fdivs
add
inc
rcrl
ficoml
cmp
popa
pushf
mov
mov
repnz
cmp
lods
cmp
imul
mov
mov
add
xchg
imul
xor
add
xorl
mov
mov
jno
ss
in
roll
and
lcall
mov
or
aas
ds
mov
into
in
lods
or
test
ja
add
jg
pop
test
or
xchg
ljmp
call
movsl
popa
cmpb
sbbl
sub
push
push
mov
adc
test
mov
stos
mov
adc
aam
lods
mov
push
leave
in
int
lds
mov
mov
and
push
mov
push
enter
pop
leave
cmp
fdivrl
movsb
or
push
mov
xor
ret
aad
sbb
pop
or
ds
pop
sbb
mov
orl
lea
xor
andl
mov
fwait
mov
aam
sbb
jo
add
xchg
out
dec
into
mov
jbe
es
fistpl
xor
movsb
int3
inc
es
mov
mov
fs
int
cmpsl
mov
pop
leave
jbe
inc
rclb
pop
mov
cmp
xor
leave
imul
mov
push
pusha
dec
insb
mulb
jg
jne
mov
push
test
push
and
out
ret
dec
rclb
push
rcr
mov
inc
mov
cmp
push
sub
int3
jnp
push
data16
mov
pop
mov
imul
dec
mov
test
mov
imul
rcll
mov
mov
cs
push
push
jae
mov
sahf
int3
pop
add
push
inc
xchg
int
ret
mov
pop
push
popa
fstps
or
lcall
or
cmpl
andl
movl
sbb
jp
or
scas
mov
jno
mov
cmp
insb
pop
push
mov
fcomps
orl
mov
imul
sub
push
loope,pn
inc
mov
jns
aam
ret
inc
test
dec
mov
fisubl
mov
rcrl
dec
jbe
notl
outsl
cmpl
xor
jge
lcall
aas
js
sbb
icebp
cwtl
and
dec
lods
push
lods
mov
test
sub
shlb
add
pop
mov
lods
xchg
sub
ret
dec
mov
inc
mov
mov
fimuls
repz
sbbl
arpl
xor
repnz
bound
mov
pop
in
bound
xchg
mov
jae
sbbb
movsl
popl
lcall
xchg
ret
sarb
ljmp
test
pop
lcall
andl
lock
cmp
outsl
cmp
xor
or
adc
mov
dec
sahf
or
imul
inc
xlat
push
xor
sbb
xor
dec
scas
out
sbb
lcall
subb
out
dec
jno
sub
or
xor
es
movsl
inc
push
ss
orl
xchg
push
mov
push
xor
cmp
leave
sub
cwtl
mov
test
ret
add
jge
fisubrl
jns
push
lods
filds
cmp
inc
imul
imul
lret
insl
cmp
gs
add
sub
lods
push
es
xchg
xchg
test
pop
jae
in
jmp
push
dec
cmp
sti
aaa
inc
xor
loope
rolb
add
add
nop
out
dec
add
in
or
aaa
adc
mov
lock
ret
adc
fimull
pop
jle
loope
and
pop
stc
and
push
insl
aas
out
pop
clc
push
adc
cmc
mov
popf
add
push
push
push
push
mov
insl
fnop
clc
sbb
pop
incb
lret
ret
leave
ret
incl
adc
pop
jne
sbb
push
adc
mov
xchg
jae
fbstp
call
push
jbe
mov
adc
decl
jg
and
mov
dec
sub
add
xchg
in
mov
cs
jp
loope
shlb
cs
sti
pop
sti
jg
cmp
cltd
test
test
mov
or
lods
pushf
jns
xor
test
cmp
stos
insl
sub
lods
mov
push
mov
adc
fdivrl
popa
mov
jne
leave
sbb
or
inc
mov
xchg
push
sbb
pusha
mov
mov
into
mov
jg
mov
cmp
repz
pop
and
popa
out
or
sahf
loope
adc
scas
std
popf
aas
cmp
mov
dec
lcall
push
pushl
in
dec
addr16
in
decl
xchg
jle
out
mov
mov
jmp
outsl
jo
shlb
xor
mov
aam
lea
sti
cmp
ja
es
mov
fisubs
jbe
add
mov
cmp
popf
and
lret
mov
mov
into
sub
std
pop
test
bound
cmp
dec
stos
mov
outsl
adc
pop
adc
fisubrs
mov
pop
mov
sti
and
popa
sbb
leave
push
mov
fldcw
pop
cmc
xor
inc
loop
fistpll
xchg
mov
call
cmp
jb
insb
jge
insl
adc
call
xchg
decl
ret
inc
hlt
pop
loopne
mov
lea
adc
inc
fnsave
sbb
pop
jmp
repnz
mul
lds
jae
test
lods
adc
ja
das
xor
mov
pop
mov
and
mov
das
mov
nop
cmp
call
sbb
out
out
int3
inc
inc
sbb
jo
bound
cmp
test
jge
jecxz
testl
jp
icebp
aas
cmp
inc
jl
outsl
push
sbb
in
push
add
push
mov
mov
cs
mov
stos
fidivrs
xor
mov
insb
hlt
incb
fistps
jecxz
mov
imul
pop
jle
lret
xchg
jae
std
imull
mov
imul
fidivrs
or
inc
or
daa
mov
das
mov
sbb
xchg
decl
bound
cmp
ljmp
push
pushf
jecxz
cmp
pop
in
pop
or
mov
xchg
cmp
push
jnp
mov
jmp
jmp
hlt
fisubrs
adc
inc
sub
cmp
cmp
movsl
repz
lock
mov
fistpll
sub
cmp
jnp
imul
jmp
inc
std
ss
aad
iret
mov
iret
rcrb
mov
negb
xchg
dec
testl
in
mov
jge
inc
push
cmpsl
jmp
arpl
pop
push
mov
sub
jp
and
hlt
cmc
mov
pushl
mov
pop
pop
loopne
scas
xor
loope
inc
lea
pop
dec
stos
xor
adc
or
sti
sub
shlb
sub
and
pop
addb
jae
loopne
inc
sbb
lret
icebp
or
mov
aas
stc
xchg
jb
dec
sahf
sub
push
dec
icebp
adc
jg
ret
mov
flds
in
or
mov
inc
ret
aad
and
mov
data16
cmpsl
adc
or
mov
push
out
dec
scas
mov
push
in
cmp
call
pop
movhps
lock
sarl
or
add
dec
subl
pop
stc
arpl
js
out
daa
mov
aas
imul
cmc
pop
add
stc
adc
neg
and
int3
leave
mov
out
iret
std
mov
faddl
hlt
adc
push
mov
and
sahf
iret
std
mov
cmp
jbe
mov
or
mov
or
jb
push
fwait
pop
aas
jns
mov
jecxz
mov
aaa
fdivl
cmc
je,pt
dec
and
fistpll
adc
xor
pop
loopne
mov
mov
ficoms
mov
add
mov
mov
iret
sub
hlt
decb
inc
ljmp
mov
outsl
out
mov
pop
adc
out
or
dec
mov
pop
sti
mov
lret
inc
shrl
mov
mov
repz
stos
scas
add
jns
fdivs
xor
shr
push
mov
cli
fwait
cmp
and
add
shrb
sub
pusha
or
out
mov
xchg
xor
push
mov
lcall
out
sti
mov
cmc
ds
scas
cmp
repnz
shlb
xor
mov
jmp
aad
arpl
mov
adc
pop
fs
int
add
cmp
mov
adc
jl
loopne
dec
sbb
out
xor
pop
jl
add
bound
mov
int
pop
cmp
jge
aas
iret
xchg
cmp
popa
ret
mov
or
mov
jo
frstor
ret
outsl
sbb
xor
mov
pop
sbb
and
adc
adc
mov
and
mov
mov
sar
out
flds
aam
lock
aas
sub
popf
xchg
imul
inc
jecxz
sub
fdivl
mov
inc
push
cmpsl
or
popa
std
inc
sbb
in
std
pop
fisubl
aas
mov
dec
das
pop
aas
dec
popa
jg
push
dec
aam
imul
bnd
scas
xor
pop
xor
xchg
jl
jg
fnstcw
cmp
mov
jg
jle
xlat
cmc
out
data16
out
push
stos
xchg
int3
add
xor
insl
fisubrs
mov
ja
clc
sbb
fidivrs
jnp
jns
test
mov
jns
aad
mov
icebp
daa
pop
jl
pop
fs
inc
jg
cli
lahf
push
insl
xor
imul
jg
ret
mov
cmp
mov
cmpsb
aad
mov
pushf
mov
loope
and
xchg
push
out
xchg
lcall
ret
cmp
mov
fidivl
xchg
adc
das
mov
lds
dec
mov
sahf
mov
cld
fistps
mov
push
xor
les
fdivr
cmp
pop
out
ja
inc
pop
jmp
adc
daa
icebp
lret
sbb
pop
jae
pop
push
jle
out
mov
cld
or
clc
test
fwait
and
sti
cmp
sub
in
mov
fs
cmpsl
dec
addr16
xchg
xchg
popa
cmp
xchg
pop
out
mov
sbb
roll
and
inc
loopne
pop
push
add
test
mov
jg
cmc
inc
or
nop
cmpsb
inc
sahf
subl
mov
mov
push
mov
cmpsl
jl
inc
xor
hlt
pop
jne
xorb
rorb
lahf
js
push
rolb
xchg
or
add
xchg
pop
mov
mov
aam
pop
in
insl
movsb
lock
out
icebp
pop
sbb
push
push
push
pop
sub
xor
add
lock
addr16
sub
mov
sbb
shll
jnp
jecxz
pop
xchg
inc
mov
cs
jo
stos
pop
test
orl
adc
mov
and
lods
sbb
arpl
jecxz
mov
fimuls
negl
cmp
lret
sub
add
mov
xchg
icebp
lods
pushl
jne
ret
jnp
out
adc
icebp
call
stos
scas
mov
test
mov
and
mov
dec
scas
cmp
push
out
xchg
mov
in
aam
xor
dec
cld
testb
push
mov
and
lret
fucom
fistpll
pop
cmp
test
mov
jg
neg
dec
stos
xchg
popa
mov
jne
movsl
out
mov
and
xor
and
dec
xchg
xor
sbb
push
fldt
stos
xchg
sub
cmp
daa
mov
subl
loope
mov
xchg
fs
iret
std
and
mov
xchg
xchg
cwtl
mov
mov
adc
jae
mov
jno
daa
int
xchg
push
pop
clc
shl
imul
std
stc
inc
jg
jg
js
xor
adc
pop
cld
not
or
mov
jp
sub
outsb
repz
push
sti
mov
movsb
jb
pop
ja
jg
outsl
fwait
dec
sub
pop
xchg
dec
mov
push
inc
shll
and
mov
out
es
xlat
mov
mov
repz
push
js
cli
jg
fistpll
mov
pop
and
lcall
inc
jno
in
sub
add
shl
lahf
testl
jg
loope
sar
jp
mov
jecxz
mov
xchg
scas
push
and
sub
insl
dec
outsb
push
movsl
push
and
aas
cmp
sub
mov
pop
jecxz
lahf
sti
push
mov
xor
bnd
push
cmp
mov
mov
gs
loopne
sti
push
xchg
test
dec
mov
in
cmp
inc
in
incl
ljmp
and
push
add
or
push
add
rolb
sub
mov
push
enter
ret
out
jno
pop
push
idiv
jecxz
and
and
call
lret
lahf
push
mov
inc
insb
xchg
pop
mov
pop
push
add
fisttps
lcall
mov
jnp
mov
shrl
mov
or
je
lcall
pop
scas
and
pop
jno
mov
xor
sbb
xor
sahf
sub
loop
mov
addr16
into
push
mov
les
pop
xchg
test
jns
lcall
cmp
sbb
mov
push
movsl
jg
loope
inc
subl
in
jnp
inc
std
dec
test
mov
pop
jmp
addr16
test
and
fnstcw
or
ficomps
jbe
incl
or
ljmp
out
push
andb
fcoms
cli
mov
outsb
daa
and
lds
cmp
and
adc
lods
pop
js
les
jne
adc
xchg
add
pop
ss
jmp
jae
push
and
or
and
or
into
std
push
mov
cld
mov
bound
pxor
jecxz
adc
cmp
add
pop
jge
xchg
adc
insl
and
lock
js
mov
add
lret
inc
mov
and
test
ret
std
aas
push
fbstp
filds
jge
mov
jbe
inc
sbb
jle
lret
nop
dec
ljmp
mov
pop
pop
jmp
imul
jg
mov
pop
scas
add
push
xor
loop
bound
xor
mov
loope
loope
cmp
and
outsb
cmp
imul
add
fildl
inc
sub
inc
outsl
mov
clc
lahf
or
mov
cmpsl
xor
inc
xchg
mov
cmp
lock
dec
or
jg
adc
push
clc
test
pop
ja
push
adc
cltd
lock
fcoms
hlt
or
pop
sarl
adc
iret
std
ja
clc
pop
xchg
rcr
mov
lds
adc
adc
insl
mov
popa
jge
movsl
push
jp
dec
jg
rcll
sbb
adc
mov
shr
sub
incl
fimuls
in
sbb
push
push
or
push
cmc
cltd
dec
sbb
mull
subl
fisttpl
adc
jle
movsl
dec
xor
iret
ds
cmc
push
xchg
push
mov
mov
mov
sub
movsl
sub
ret
mulb
dec
sbb
out
mov
inc
nop
lret
arpl
inc
lcall
xchg
sub
dec
mov
sti
pop
mov
mov
or
adc
in
pop
push
lcall
or
add
mov
mov
pop
incb
mov
decb
jae
arpl
and
mov
lock
mov
rolb
outsb
mov
aas
shl
ss
lret
xchg
xchg
aad
inc
in
icebp
pop
repnz
das
sarl
xor
jns
or
adcb
fmull
pop
movl
and
out
mov
pop
jmp
dec
sarl
idivb
idivl
inc
xlat
cmc
dec
aaa
xorl
neg
mov
test
cmp
es
pop
xchg
ss
out
mov
dec
int
sub
and
mov
xchg
stos
dec
mov
lret
ljmp
fyl2x
xchg
mov
sub
je
mov
stos
test
idiv
out
ss
add
outsb
stos
rorl
aam
fnsave
push
jnp
mov
loop
loope
or
and
pop
pop
imul
out
add
adc
fnstenv
fstl
rclb
xchg
jae
mov
fstpl
cli
and
fistpll
mov
dec
iret
and
fildll
mov
mov
and
fwait
cltd
shlb
jne
pop
dec
orb
sti
into
adc
xchg
pop
leave
sarl
aas
stos
aam
mov
xor
ret
lcall
sub
cvtps2pi
es
inc
jb
popl
call
stc
xlat
shl
and
shll
push
dec
cmc
aas
mov
jno
jl,pt
sbb
mov
and
imul
and
push
dec
repnz
mov
loopne
fistpl
pusha
jb
or
and
mov
mov
lahf
icebp
aas
stos
inc
repz
lret
fisubrs
dec
jg
push
arpl
jb
std
aas
inc
jmp
dec
lcall
inc
in
fs
dec
movsl
emms
shr
add
into
aas
and
repz
jo
xchg
mov
clc
in
lret
push
sti
sbb
jne
bound
jnp
jg
jns
mov
jae
aam
and
dec
fwait
sbb
out
xchg
xchg
mov
fcompl
dec
aam
jns
fmul
and
inc
push
jp
sahf
push
or
mov
mov
cltd
idivl
jbe
mov
cli
pop
in
sbb
xorl
ret
clc
mov
xchg
pop
data16
add
aaa
cli
aaa
inc
mov
xchg
mov
orb
jmp
hlt
cmp
inc
sti
dec
adc
inc
pop
fwait
dec
loopne
in
jg
push
daa
fisubrs
mov
sbb
cltd
and
popa
ljmp
sarb
psrld
popf
leave
inc
cld
stos
xchg
ljmp
mov
mov
outsl
pop
adc
dec
mov
xlat
sub
idivb
mov
dec
inc
out
cmp
lods
nop
pushl
pushf
into
mov
mov
or
push
xchg
sub
inc
jg
hlt
pop
imul
inc
xchg
sahf
inc
add
mov
ds
sub
je
aas
inc
call
and
repnz
pop
dec
aaa
push
jbe
fimuls
mov
int3
mov
jnp
fistpll
mov
xor
push
aaa
or
ss
cmp
mov
pop
or
ljmp
movsl
dec
decl
push
jmp
adc
jle
loop
and
lret
push
mov
sbb
cmp
push
icebp
mov
add
mov
cld
loope,pn
fdivr
jne
out
push
jg
xor
xor
cmpsb
or
roll
push
inc
push
insl
jnp
mov
scas
out
push
jge
int3
call
sbb
add
push
icebp
ja
mov
add
and
fstpt
fistpll
sahf
inc
sub
es
cmp
cmc
ret
stc
daa
push
iret
xor
jg
and
out
push
in
sub
push
jo
test
fistps
loopne
call
andl
lds
mov
ds
dec
sti
call
shlb
lahf
mov
mov
dec
mov
push
pop
clc
decl
pop
std
leave
xchg
sarb
push
inc
loop
and
clc
mov
cwtl
mov
xor
mov
cmp
mov
out
push
sbb
loopne
fbstp
jno
in
dec
divl
xor
in
fucomi
xlat
push
mov
mov
sahf
mov
jg
aas
mov
test
mov
mov
mov
repnz
mov
std
into
mov
scas
mov
stc
js
fwait
pushl
mov
inc
jmp
sarb
dec
std
dec
hlt
mov
mov
xor
inc
lret
subb
ret
ds
test
rcrl
pop
push
test
sub
add
sbb
mov
pop
inc
add
das
mov
mov
or
rolb
fidivrs
push
das
mov
jne
jmp
jmp
xchg
std
aas
sti
push
sti
scas
and
sti
repnz
das
push
mov
loop
lcall
adc
and
into
push
dec
mov
inc
xchg
add
inc
jne
xor
and
cld
aas
stc
pop
cmp
testl
adc
jecxz
sbb
and
pop
repnz
out
lahf
pop
imul
icebp
fisttps
xor
lea
push
mov
push
pop
sbb
div
xor
sub
js
mov
movsl
cmpb
loop
and
mov
xor
jne
add
xorl
pop
xchg
adc
pop
dec
lock
add
or
in
inc
in
mov
out
subl
in
pushl
insb
pop
int
or
ror
stos
adc
cmpb
stc
jg
cmc
cmp
insb
push
test
pop
jge
fistps
fildl
or
and
int
jle
push
btc
es
pop
or
lods
std
adc
pop
dec
and
sbb
movsl
mov
sbb
das
mov
sarl
xchg
les
negl
cmpsl
test
sti
sbb
mov
or
and
sub
cld
pop
outsl
enter
mov
nop
and
push
scas
cmp
add
dec
add
imull
or
or
dec
in
inc
mov
aas
vcmpss
xchg
add
jnp
add
sub
sbb
je
inc
inc
push
and
mov
ret
sti
xchg
loop
out
push
int
jbe
sbb
mov
jb
rcrb
pop
mov
jge
dec
xchg
push
jmp
addr16
lea
std
dec
mov
repnz
pop
scas
and
push
sub
sub
jp
mov
imul
in
mov
xchg
add
pop
mov
mov
test
pop
sub
mov
outsl
std
mov
sbb
decb
aad
int3
lock
std
xchg
sti
fisttps
xchg
call
mov
int
pop
and
dec
test
in
sbb
xchg
nop
sti
les
push
jge
mov
sbb
jge
cli
xor
data16
cli
dec
xchg
xchg
pop
jg
int
pop
aam
sbb
iret
std
lea
mov
dec
push
xchg
decl
out
lock
sub
jne
cmp
jns
push
aas
aad
mov
xchg
add
jbe
cld
dec
mov
push
das
in
fcoml
dec
call
cli
or
push
push
es
sarb
inc
out
icebp
cmpxchg
cmp
dec
xchg
mov
icebp
pop
jmp
push
insl
mov
sti
std
add
adc
sbb
cld
fbld
outsb
cwtl
stos
das
xlat
adc
divl
and
lahf
movsl
pop
sub
mov
addl
pop
enter
xor
aad
lock
jge
mov
and
fwait
push
cmp
jg
out
mov
mov
sahf
mul
inc
in
fst
cmp
decb
cmc
mov
cmpsl
ds
pop
mov
dec
out
int3
lock
cmp
addr16
into
loop
sub
xchg
jmp
icebp
and
push
jge
pushf
xchg
add
ljmp
mov
inc
inc
cld
jp
into
xlat
mov
xchg
scas
jns
icebp
out
std
inc
and
dec
fdivl
xor
or
loop
pop
icebp
jmp
inc
cmp
js
and
sbbl
imulb
ret
clc
out
movsl
cmp
in
std
xchg
hlt
dec
outsl
lret
shlb
movsl
cltd
or
lods
mov
jo
adc
jbe
test
xor
aas
testl
or
and
out
mov
decb
les
jmp
dec
mov
in
ret
insl
outsl
in
jg
clc
arpl
insl
dec
psrlq
pop
cld
mov
imul
mov
pop
in
mov
xlat
movsl
xchg
loope
idiv
dec
jns,pt
mov
fistpll
icebp
xchg
dec
push
test
into
adc
fdivr
out
dec
sbb
arpl
mov
sub
sti
sub
lock
iret
addb
aam
repnz
js
clc
hlt
dec
iret
insb
adc
mov
cmpsb
jle
xchg
or
inc
imul
scas
xchg
sbb
xor
push
push
add
scas
lret
mov
rcrl
pop
bound
cmp
arpl
lahf
dec
mov
rorl
pop
lret
loopne
jg
scas
mov
push
outsb
outsb
out
stos
inc
add
pop
cld
pop
es
cmp
or
insb
ja
out
cmp
jl
xor
mov
stc
mov
enter
or
les
popf
and
fs
out
sarb
cs
shlb
clc
jg
jecxz
mov
push
xchg
data16
inc
jne
test
out
fisubs
add
cmp
ljmp
or
cld
lock
fimull
cmpsl
pusha
jo
or
add
jne
shll
idiv
clc
xchg
mov
cmc
or
sbb
psllw
dec
arpl
mov
sbb
sub
dec
xlat
icebp
or
pop
sbb
add
add
inc
mov
adc
out
lcall
mul
push
loope
dec
jmp
xchg
das
jae
pop
roll
dec
out
sar
hlt
sub
inc
out
mov
mov
std
pop
xor
push
mov
enter
cmp
mov
push
pop
gs
lea
clc
lretw
mov
arpl
shlb
cltd
add
push
fcmovnbe
aas
push
loope
inc
xor
imul
sti
shlb
in
js
push
adc
push
pop
and
das
test
sbb
in
out
jno
rcr
jmp
lods
pushf
insb
out
jae
gs
sarb
out
jecxz
mov
aam
ret
pop
ret
les
fldcw
lret
popf
sub
inc
data16
int3
data16
fcos
dec
mov
adc
mov
push
shrb
ja
test
push
mov
inc
std
aad
je
lods
subb
push
fistpll
daa
cmp
arpl
fldl
and
test
idivl
jmp
test
movsb
fs
add
pop
mov
sti
adc
stos
cmp
mov
mov
mov
jg
push
pusha
mov
idiv
push
jbe
inc
and
push
test
and
pop
hlt
pop
add
in
xor
lahf
or
sub
std
and
in
mov
pop
jb
inc
es
adc
insb
jno
jne
mov
in
mov
push
cmc
ja
jle
pop
mov
mov
sbb
movsb
call
idiv
loope
jl
roll
push
pop
inc
stc
pop
jnp
aas
fdivrp
js
mov
lret
cmpsb
xor
sbb
ret
outsl
out
xorl
xor
aad
add
hlt
fucom
in
pop
pop
mov
mov
movsl
xorl
sbb
cmp
sub
mov
push
ret
imul
andl
int3
repnz
or
sbb
or
cmp
add
adc
outsl
ret
es
mov
mov
mov
out
sbb
or
jmp
mov
push
inc
ja
sbb
aas
sti
mov
mov
lods
and
outsb
fisubrl
and
inc
fwait
dec
add
dec
mov
std
sbb
push
shll
dec
lock
faddl
outsl
xchg
mov
pop
pop
jg
shlb
add
adc
xchg
clc
out
shl
lret
push
dec
mov
jmp
inc
mov
mov
inc
jbe
xchg
xor
sub
cmpsl
xor
lock
sub
je
out
jae
nop
pop
testl
dec
mov
jge
mov
imul
pushl
jmp
mov
int3
clc
cmp
sub
in
idivb
mov
sub
mov
fidivrs
es
in
pop
or
push
jmp
and
push
mov
pop
dec
or
aaa
mov
outsl
arpl
test
mov
scas
and
popf
push
inc
mov
es
jge
outsb
clc
mov
aam
int
lret
aad
push
pop
int3
push
enter
out
inc
jp
adc
and
or
bsr
fiadds
mov
mov
sbb
inc
inc
in
popf
xor
sbb
and
fdivrl
jecxz
shll
adc
xchg
mov
add
adc
adc
daa
cmp
jbe
aad
jge
jle
mov
call
aaa
cmp
mov
cmp
xor
inc
cmp
mov
sti
rcrl
dec
lret
cmp
sbb
test
sub
sbb
inc
add
adc
mov
je
dec
xchg
jecxz
or
std
push
mov
sub
arpl
fdivrs
mov
rolb
in
cltd
push
xchg
jae
popl
mov
and
push
jnp
mov
mov
push
xchg
inc
or
jge
addr16
xor
push
in
sub
stos
es
mov
jl
out
pop
jb
fwait
shrb
xchg
in
cmp
lods
aas
push
jmp
daa
ljmp
inc
loop
out
sti
jg
jecxz
jbe
push
ljmp
pop
out
mov
xchg
stos
xor
adc
inc
jbe
lds
sbb
push
fidivrl
loopne
inc
mov
xchg
lret
int
cmp
mov
xchg
sub
mov
fmul
push
or
sbb
mov
mov
daa
cld
lahf
pop
leave
popa
adc
test
call
pop
and
rorb
lock
pop
add
rcl
pop
out
out
jg
lahf
arpl
test
iret
scas
xorb
je
sub
or
orb
pushf
push
add
out
outsw
les
pop
adcb
push
cld
lcall
in
push
push
dec
stos
xchg
out
incl
xor
push
fistpl
add
jg
dec
xchg
cmp
lods
adc
shl
clc
push
xor
xor
andb
aas
lds
sahf
inc
enter
popf
inc
adcb
xchg
add
out
push
jbe,pn
out
adc
mov
lahf
dec
jg
fdivrp
push
stos
repnz
arpl
pusha
das
jge
push
jno
mov
xcrypt-ctr
mov
mov
dec
push
mov
inc
adc
xor
xor
shll
test
dec
adc
idivl
sbb
cmp
mov
push
les
sub
test
loope
adc
inc
lea
movsl
cwtl
or
pop
adc
adc
lcall
jecxz
mov
lods
add
push
xchg
pop
inc
push
in
push
cli
fisttpll
out
out
dec
xchg
imul
call
cmp
dec
aas
sub
pop
sub
cld
lahf
fimull
std
jmp
push
xchg
and
cmp
pop
pop
adc
aam
idivl
pop
cmp
pop
sub
adc
shl
push
outsb
negb
pop
mov
test
sub
sbb
test
jmp
push
cli
aas
call
push
mov
lock
pop
adc
mov
pop
mov
outsb
mov
jle
and
cmpsb
and
inc
enter
fcompl
orb
adc
mov
lods
imul
sbb
pop
stos
aas
test
sbb
push
jecxz
iret
xor
setnp
mov
mov
or
mov
scas
js
mov
fistps
sahf
mov
je
cmc
adc
and
fbld
sti
fildll
inc
outsl
jne
repnz
std
movsl
stos
fsubrs
into
or
jo
divl
cmp
mov
jecxz
fidivrs
enter
and
pop
fcom
or
cmp
inc
dec
leave
in
jbe
pusha
mov
int3
pop
xchg
mov
xchg
sti
out
rolb
sub
pushl
or
xor
imul
pop
jmp
int3
jg
inc
push
dec
jle
es
push
cltd
jno
adcl
cmp
jo
pop
jnp
andl
jnp
fwait
mov
or
or
pop
xchg
jne
in
sbb
mov
outsl
push
mov
jge
cmp
sbb
adc
cmpsb
icebp
mov
push
in
sbb
jecxz
loope
xchg
jns
jle
dec
jle
cmc
ret
adc
loopne
mov
lea
das
pop
add
mov
inc
das
cmp
xchg
push
jmp
std
aas
loop
jmp
cld
or
jns
jg
incl
dec
lret
rcrb
lea
lahf
push
pop
cmpb
les
pop
fdivl
mov
popa
xchg
inc
stc
into
or
sbb
outsl
out
mov
mov
outsb
adc
cwtl
fdivrl
inc
adc
insl
pop
sahf
lds
daa
cli
add
hlt
pop
sub
repz
jbe
mov
incl
xor
aaa
fwait
enter
push
outsb
pop
dec
push
mov
fdivr
test
bound
xor
sbb
mov
negl
fidivs
jb
lret
mov
filds
ds
or
xchg
sbb
and
jne
lods
lret
cmp
xchg
std
mul
ret
rcr
jecxz
out
mov
cwtl
jnp
jg
add
je
aam
mov
xchg
pop
dec
xlat
jl
and
pop
mov
cmp
or
or
or
mov
fistps
mov
aam
push
fwait
push
aad
shlb
js
call
push
test
aad
or
fbld
or
insl
mov
mov
pop
scas
jo
mov
xor
pop
cmp
push
adc
popf
add
hlt
and
pusha
mov
xchg
dec
xor
adc
loop
aam
sub
adc
mov
testl
ljmp
jg
dec
scas
hlt
ja
repz
and
movsl
and
xor
jmp
movsl
lods
pop
xor
xchg
cli
ja
push
xor
push
decl
lods
or
mov
cmpsb
std
or
pushl
imul
imul
les
sbb
loop
rolb
jp
or
xchg
xchg
fst
std
or
nop
sub
cmpsb
inc
rorb
jmp
scas
fucom
inc
sub
inc
out
inc
inc
in
fnstsw
aas
inc
inc
pop
ret
leave
jae
ja
jo
jecxz
fstps
push
decl
lock
aas
adc
push
fildll
xchg
lea
lods
loopne
fdivrs
and
xlat
insb
or
push
in
out
mov
xchg
pusha
xor
or
and
mov
pop
or
push
iret
inc
popf
mov
enter
cmp
pop
jg
adcb
repz
and
popf
and
jg
mov
mov
aam
dec
sbb
mov
inc
ret
pop
rcl
cs
inc
clc
mov
fimuls
push
xchg
inc
adc
dec
push
dec
jge
cmp
imul
cs
xor
push
in
mov
sti
inc
and
loopne
js
ljmp
mov
dec
dec
scas
mov
pop
mov
cld
xor
adc
jecxz
and
std
stos
jg
mov
icebp
lds
sub
mov
push
jns
nop
aaa
in
iret
adc
insl
lcall
pop
test
sahf
mov
ja
jle
mov
sbb
adc
std
pop
enter
pop
out
lret
aas
loope
fldcw
sbb
lea
mov
ds
sbb
push
clc
and
jne
or
add
outsl
add
sub
lcall
loopne
add
arpl
mov
ljmp
andl
clc
leave
xlat
mov
sbb
push
enter
daa
les
push
testb
mov
mov
mov
adc
sbbl
mov
xchg
push
hlt
push
int
add
testb
cmp
in
xor
inc
pop
dec
mov
fdivr
sub
add
sub
or
dec
inc
cmp
sti
push
or
sarl
pop
mov
rorl
loop
aas
adc
pushl
add
pop
jb
sar
idivb
adc
popf
loop
lcall
push
rorl
and
or
xchg
cmp
xorl
inc
push
dec
or
notl
mov
xchg
out
inc
mov
loopne
inc
repnz
lret
mov
shrl
mov
mov
cmc
ficoms
lret
ret
jo
stc
rcrl
jmp
pop
fidivrl
xor
jae
icebp
cltd
fiaddl
mov
mov
cmp
mov
loope
negl
mov
jne
cli
push
pop
cs
out
std
dec
rcrl
add
add
mov
ret
sbb
sbb
jg
pushl
cmp
adc
mov
push
ljmp
jne
xor
mov
xor
daa
or
inc
arpl
jl
dec
adc
push
sub
push
xchg
pop
rcrb
cltd
lret
pushfw
in
ljmp
jecxz
xor
std
sub
ficomps
xchg
push
outsb
std
mov
shll
sbb
fdivrs
fucomi
push
fisubrs
ret
or
mov
fwait
push
out
mov
or
jg
jg
rcll
add
scas
cmpsl
aam
mov
mov
rolb
ja
test
lahf
out
xlat
jg
shll
mov
fldcw
into
ret
dec
inc
sti
das
mulb
aaa
pop
les
fdivrl
push
testl
mulb
hlt
incb
icebp
popa
fmull
inc
adc
sbb
inc
sbb
add
in
add
mov
inc
loopne
outsb
jnp
pushf
pop
les
dec
movsl
inc
or
sub
jmp
xchg
call
xor
jle
aam
dec
andl
iret
arpl
lahf
aam
cmc
arpl
sbb
in
jmp
mov
aaa
test
add
jecxz
ja
imul
data16
xor
aas
shlb
lods
loopne
jbe
or
sti
out
push
fbstp
clc
xchg
test
ljmp
lcall
fcomip
push
js
and
hlt
add
jae
repnz
mov
sub
lahf
sub
sti
out
cld
in
and
adc
inc
push
lea
cmp
lahf
xchg
xchg
aaa
js
and
lock
mov
ret
and
loop
cmpsb
xor
stos
mov
je
pop
and
sbb
jecxz
mov
jg
lods
mov
jbe
add
sub
aas
lret
jmp
ret
xor
std
test
dec
div
jp
pop
sti
ja
fstpl
push
xchg
jnp
mov
adc
mov
jecxz
mov
cmp
ret
loopne
mov
and
adcb
gs
and
jg
mov
or
cs
pop
mov
das
leave
in
rorb
mov
idiv
outsb
sbb
adc
jo
mov
or
cmp
incl
sbb
or
add
jge
into
and
xchg
sub
dec
ljmp
out
gs
mov
pop
js
stc
sbb
addr16
data16
mov
aaa
int
jns
pop
int3
fwait
or
sub
mov
test
sbb
clc
testl
inc
pushf
cmp
sbb
mov
movsl
std
jno
fdivp
adc
dec
std
sbb
push
sbb
or
fwait
jnp
push
fadds
push
stos
pop
mov
cmpsb
xor
xor
outsl
jo
rcrl
notb
test
sub
sub
pop
cmp
loopne
cld
iret
and
sbb
inc
dec
les
mov
test
and
fsubl
mov
mov
das
add
ljmp
cld
bound
push
test
clc
test
cmc
sub
adc
out
cmp
popa
jp
arpl
out
xchg
inc
jae
xchg
xor
xor
in
push
inc
mov
decl
lock
jle
mov
aas
push
cmp
jge
dec
adc
mov
cmp
idivl
in
mov
mov
cmp
not
dec
idivb
cmp
mov
clc
ja
push
sar
out
and
adc
clc
scas
in
adc
push
mov
lods
xchg
out
and
out
sub
shll
xchg
dec
icebp
mov
pop
mov
test
lret
cmp
idiv
xchg
hlt
test
das
add
and
mov
pop
cmp
fldenv
stc
push
icebp
mov
mov
cld
imul
out
push
enter
pop
or
mov
cmp
adc
ljmp
hlt
and
js
cmp
stos
hlt
and
test
sub
cmp
ss
jo
std
inc
in
aas
xor
call
inc
test
out
lock
scas
sbb
mov
ret
call
xor
int
and
sbb
popf
pop
sub
pop
mov
ljmp
iret
dec
sarl
dec
jae
in
aaa
jno
xor
in
sbb
idiv
mov
das
outsb
sub
mov
mov
dec
fsub
adc
cli
pop
pop
pop
jmp
and
leave
pop
lret
pop
or
push
lret
push
fs
idiv
mov
push
mov
mov
outsl
adcl
mov
jle
scas
ds
popf
ja
cld
sbb
pop
pop
pop
aad
aas
icebp
cmpb
dec
jae
cmp
es
cmp
push
inc
ljmp
outsl
in
mov
pop
xor
xlat
test
test
loop
div
shrb
inc
xor
and
arpl
call
sbb
ret
cmp
mov
sub
mov
call
in
push
mov
sbb
movsb
push
idivl
sar
sub
ja
fs
out
inc
mul
in
inc
movsb
lods
incl
dec
cli
iret
mov
aaa
cmpl
addr16
out
data16
mov
rorb
xor
ljmp
adcb
lds
shrl
adc
test
jnp
neg
jecxz
push
sub
jge
out
sbbb
out
push
cltd
push
jp
loop
popa
jbe
jp
mov
fcomp
add
adcl
sub
ja
movsb
cmp
lcall
jmp
sub
xor
or
jmp
stos
lea
decl
xor
stos
sbb
sub
sbb
mov
incl
push
jmp
add
lods
dec
std
xchg
sti
cwtl
sbb
and
aam
bswap
adc
lea
lret
loope
or
dec
mov
orb
xchg
imul
fisubrl
idiv
mov
les
sub
pop
jmp
sbb
mov
aas
mov
ret
xor
mov
pop
push
rcrl
push
jmp
cmc
in
cwtl
les
sub
sbb
mov
orl
enter
mov
jp
mov
and
xchg
mov
fs
enter
xchg
mov
arpl
inc
outsl
inc
hlt
jecxz
push
mov
loopne
ja
popf
push
fcmovne
adcb
daa
push
push
ljmp
jmp
lcall
std
ljmp
xor
ds
fildll
out
jge
ljmp
loopne
sbb
xor
cmp
mov
inc
popa
cmp
push
std
inc
mull
adc
or
mov
cmp
in
subb
shlb
es
std
adc
das
or
jecxz
pop
mov
ficoms
pop
mov
and
sub
pop
int3
inc
in
xchg
adc
jg
jg
cwtl
xchg
and
pop
outsl
stos
insb
inc
mov
clc
xor
sub
and
jg
mov
aas
mov
aad
sbb
sahf
out
push
pop
std
jnp
daa
jo
push
stos
aas
mov
push
movsb
inc
xor
and
mov
shl
sub
fs
iret
cmpsb
inc
gs
pop
sti
pushl
imul
adc
cmp
inc
movsb
jg
ret
and
sub
push
sbb
addr16
cmp
jae
pop
scas
pop
push
dec
pop
sbb
addr16
jg
inc
mov
jl
fstpl
scas
jmp
pop
xor
pop
lcall
push
cli
cmpsl
xlat
ja
inc
jle
jmp
rcrb
xlat
lcall
fsubrs
adc
inc
jg
lock
and
adc
jg
push
adc
xchg
pop
dec
inc
mov
jg
cld
mov
adc
pop
xlat
pop
jge
je
jnp
mov
icebp
xchg
jae
ret
lcall
inc
jno
and
or
mov
sbb
aaa
jg
adc
push
imul
add
sti
test
iret
daa
popa
sub
fadds
pop
lahf
rorb
mov
sti
ffreep
mov
jg
inc
rorl
add
lock
pop
sbb
stos
lods
add
adc
add
pop
cmpsb
scas
and
jg
or
jae
imul
fcompl
and
int3
repz
sbb
or
jg
out
sub
add
lods
daa
repz
int
in
movsbl
xchg
ret
mov
mov
ja
lea
rolb
mov
mov
pop
dec
inc
jmp
jge
das
pop
sbb
mov
mov
jne
or
call
mov
lret
leave
call
sub
add
hlt
call
icebp
or
dec
jnp
push
cmc
cmpsb
lods
lret
xchg
adc
xlat
setp
out
cmc
lahf
loope
mov
xor
pop
in
jl
orl
lock
into
std
subl
loop
sti
aad
out
or
jno
mov
lcall
into
inc
cmp
dec
push
out
cs
stos
or
sbb
lahf
fdivrl
and
mov
mov
fisubrs
mov
pusha
leave
adc
popf
pavgb
push
hlt
push
icebp
push
adc
sbb
idiv
mov
pop
test
xor
repnz
sbb
stos
outsb
daa
out
lea
cs
jne
cmc
cmc
and
pop
fistps
xor
and
jg
incl
aad
cmpsl
lcall
ljmp
cwtl
pop
cmp
cmp
lods
test
push
jbe
and
sub
jmp
popa
or
int
xchg
call
dec
loop
xchg
sbb
mov
fisttps
fs
push
sbb
xchg
and
xchg
test
sbb
lock
xchg
mov
jmp
push
jecxz
arpl
mov
jae
jle
loope
cmp
cs
popf
in
outsl
lds
inc
lahf
sti
push
cmp
add
and
test
into
in
fcos
lods
jmp
int
xor
cmp
outsb
pop
loop
mov
jmp
icebp
jmp
pusha
xchg
adcl
and
pop
popa
arpl
adc
out
mov
inc
adc
jne
in
mov
xor
jbe
or
push
or
popa
cmp
add
adc
in
jns
gs
popa
outsb
mov
dec
lahf
lret
jbe
iret
sub
test
xor
cmpsl
pop
sbb
sub
cli
leave
pop
pop
xor
jb
adc
loopne
fidivrs
and
lods
mov
incl
decb
aas
and
repnz
sub
divb
call
test
adc
popf
mov
rorb
or
lods
in
call
sarl
jg,pn
fisttps
int
roll
jp
int
or
fmuls
pminub
jns
pop
jg
notl
jae
pop
repnz
inc
test
mov
aas
pop
jl
stos
stos
cmp
daa
rcl
mov
add
lds
fistl
out
addr16
cli
fbstp
jle
fwait
movsl
pop
and
pop
push
pushl
sti
fcoms
leave
mov
dec
lea
adc
ficomps
pop
sbb
inc
jecxz
or
and
mov
subl
xchg
mov
ret
mov
dec
fwait
add
adc
movsb
movsl
dec
test
adc
dec
jge
mov
insb
dec
or
cmpsl
cmp
in
jecxz
pop
icebp
mov
sbb
push
sub
push
inc
mov
or
in
lds
xchg
jg
mov
cmp
out
rorb
dec
pop
xor
cmp
xchg
cli
jp
idiv
add
xchg
adc
jae
cmpsl
shlb
cwtl
mov
cmpsb
adc
int3
int
pushf
cmc
gs
xor
ja
mov
not
dec
pop
mov
out
cmp
sub
mov
fbstp
popf
push
sbb
arpl
mov
fs
jle
shrb
mov
aam
loope,pt
test
jmp
les
or
xchg
jg
aam
movsl
and
test
test
in
sbb
iret
std
or
aad
mov
or
xchg
es
mov
jmp
xor
or
cmp
clc
cmp
mov
pop
ficoms
jno
cmp
pop
xchg
jno
mov
inc
out
idivl
fstps
std
ret
into
pop
addb
push
lock
pop
mov
inc
mov
shrl
mov
pushf
push
mov
cmp
xchg
loopne
fdivl
clc
sahf
je
ret
subl
popf
nop
jmp
std
fmuls
xchg
mov
ljmp
lock
or
pop
cld
cld
js
pop
hlt
adc
outsl
pushf
or
pop
scas
inc
xchg
pop
test
push
je,pn
add
stos
insl
call
lock
mov
push
sbb
fistps
add
push
sbb
xchg
ss
cmpsb
cs
incl
cmp
aaa
out
andb
xchg
mov
hlt
cli
rcrl
sbb
mov
imul
cli
or
and
and
nop
cmp
je
in
and
insl
mov
icebp
jg
cmc
push
cli
dec
and
jmp
dec
ljmp
or
call
adc
jg
push
adc
dec
repnz
lret
out
popf
lods
xor
out
aam
scas
pop
mov
imul
add
cmp
insb
filds
jmp
loope
inc
outsl
pop
cmc
pop
clc
out
std
xchg
movsb
aaa
lods
mov
sub
inc
xchg
sbb
rcr
sub
jle
jle
scas
pop
mov
cmp
imul
setbe
aas
dec
adc
addr16
inc
aas
bound
add
fwait
mov
fsubrs
in
jle
scas
movsl
loop,pt
dec
scas
in
loopne
sbb
js
lcall
shll
cli
jmp
dec
add
mov
loope
cmp
mov
cmp
dec
jge
in
xor
or
or
in
dec
les
sub
mov
std
js
mov
decl
out
sub
adc
sbb
fidivs
stos
pop
aad
dec
push
push
sub
pop
push
mov
or
cld
movsl
jnp
xchg
jnp
or
push
dec
fiaddl
aad
mov
mov
roll
fildl
add
inc
mov
icebp
ja
clc
insb
inc
dec
mov
inc
mov
mov
fwait
or
ljmp
sub
cs
fdivrp
fimuls
jp
cmp
in
lds
aaa
mov
and
adc
push
std
or
cli
fsubrs
xor
loope
add
int
pop
ret
test
xchg
stos
cmpsb
setno
fdivrp
sub
fadd
ss
and
jg
sarl
dec
adc
jo
loope
ret
adc
js
ret
out
ja
out
cmpsl
xor
xor
and
int3
jnp
push
fwait
jp
jg
xor
jo
lds
add
lcall
push
int
leave
push
bound
dec
pop
mov
aas
mov
jp
ret
sahf
jb
mov
xchg
xchg
fidivrl
ret
pop
xor
frstor
sbb
sub
sbb
add
pop
cmpsb
xchg
xor
out
cmc
push
mov
std
xchg
cmp
jl
cmp
cmp
sti
iret
std
jg
mov
decb
cwtl
mov
outsb
mov
mov
inc
pushf
daa
cwtl
xor
decb
push
cltd
icebp
or
std
rorl
jg
bound
not
lahf
pop
mov
mov
pop
pop
sbb
insb
cmp
int
mov
sub
mov
pop
or
aam
pushf
adcb
addr16
pop
jle
out
and
push
in
mov
inc
xor
test
mov
call
cmc
aas
mov
sbb
mov
les
adc
lcall
inc
pop
ljmp
mov
outsl
ret
and
sbbb
and
pop
fdivrl
or
call
mov
add
cld
push
pop
stos
call
imul
sti
pop
sub
mov
pop
lret
add
pop
andb
imul
movsb
xor
call
mov
icebp
and
mov
cmpsl
fsts
std
xchg
addr16
jmp
mov
xor
shr
push
pusha
icebp
pop
lret
rorb
leave
popf
das
inc
inc
lock
std
pop
cmp
es
jbe
cmp
iret
xchg
out
rcrb
dec
inc
cmp
ret
sub
mov
add
lods
mov
ja
jno
ja
movsl
mov
clc
and
adc
aaa
inc
stc
les
mov
pop
sub
inc
int
or
sbb
es
jbe
inc
adc
shl
decl
xor
outsb
inc
repz
dec
adc
mov
lea
sbb
xorb
test
ja
repz
jge
jae
jecxz
cmpsb
lock
in
lock
loope
test
inc
add
dec
cli
push
dec
mov
lret
cmp
xchg
clc
outsb
outsb
enter
jg
imul
sub
ss
enter
fiadds
fisttps
es
fdivr
xchg
out
lret
fisttpl
lods
push
sbb
or
jno
daa
shll
subl
stos
aam
jmp
or
test
in
xchg
adc
dec
xchg
xchg
push
cmp
push
push
iret
dec
leave
inc
lock
iret
loopne
dec
jns
mov
fistl
in
push
cmp
rorl
lret
dec
cli
hlt
xchg
add
cmpsl
arpl
inc
mov
push
sub
in
jg
or
add
in
cli
lahf
inc
std
outsb
dec
sbbb
xchg
dec
mov
pusha
cmp
fnstenv
mov
fmuls
fistpll
inc
bound
fisttpll
cmpsb
in
mov
aad
lcall
cmc
daa
out
pushf
cmpsl
mov
mov
pop
and
ljmp
addr16
insl
push
mov
lea
xchg
aad
test
insl
out
add
mov
inc
mov
mov
push
or
pop
xchg
jp
movsb
push
sbb
or
popf
cltd
or
jg
int
hlt
mov
jg
out
pop
getsec
mov
pop
loop
dec
pop
sti
inc
loopne
aas
icebp
and
dec
ja
jg
pusha
xor
mov
daa
dec
not
xchg
es
cli
jg
testl
fists
call
inc
mov
sbb
xor
test
dec
fisttps
inc
cmp
jne
push
stc
ja
mov
push
pop
and
lock
or
add
out
push
cmp
mov
cld
ja
in
shrl
xchg
enter
scas
pop
out
jbe
jns
sarl
mov
hlt
pop
add
mov
scas
pop
and
pop
jmp
xchg
in
mov
out
cltd
mov
push
mov
and
sub
test
xor
stc
xchg
je
or
inc
jae
sbb
sub
inc
incl
jp
jge
jl
aad
ret
pop
sti
jmp
outsl
mov
xchg
ss
fmuls
xchg
jno
jle
std
jbe
mov
fwait
xor
xchg
push
das
mov
mov
loopne
bound
and
cmc
dec
push
les
test
jmp
lea
fidivs
sub
lcall
das
pop
add
cmp
fsub
mov
xor
pusha
movsb
dec
fsincos
dec
out
pushl
in
fcoms
jp
sub
lods
cmp
fistpl
aas
xor
push
push
shlb
dec
pushl
xlat
std
cmpsl
xchg
cmp
lods
and
fsubrs
icebp
mov
dec
add
fcoms
mov
aas
xchg
jnp
fld
sti
clc
jmp
out
cmp
dec
or
aas
out
inc
rcl
in
testb
jle
cmp
lcall
in
leave
in
jno
in
ljmp
aaa
sbb
lock
loope
frstor
pop
inc
mov
fs
test
or
inc
icebp
ret
mov
ja
aas
filds
insb
rorl
in
sub
in
cmp
lahf
shlb
call
xchg
add
fcoml
dec
mov
enter
sti
pushl
sub
xchg
mov
mov
jbe
jmp
mov
and
sub
iret
pusha
hlt
fucomp
inc
adc
popl
jae
or
stos
mov
xor
mov
jg
popf
and
and
loopne
push
sarl
fistps
stos
loopne
sbb
pushf
dec
cmp
test
xchg
and
fucomp
or
lcall
data16
or
mov
jno
or
sbb
pop
push
jecxz
aas
js
pop
in
or
fs
addr16
insl
les
xchg
arpl
ljmp
pop
dec
incl
into
push
jb
pop
or
clc
sub
mov
incb
gs
fdivr
lock
fcmovb
mov
movsb
in
fistpll
sbb
jge
insl
int3
adc
xor
cmpsb
negl
cltd
pop
xchg
mov
das
jo
sbb
dec
movsb
es
rcrb
cwtl
xlat
lret
leave
inc
in
cmc
popf
sti
call
push
cltd
je
orl
cwtl
pop
or
mov
outsb
lcall
lahf
lock
cltd
push
adc
lods
mov
inc
push
movsl
jne
cmp
xor
or
loope
cmp
scas
add
pop
std
mov
std
popl
std
fwait
int
push
sbb
add
mov
lahf
les
sub
stc
cmp
sbb
lahf
sti
adc
test
std
int
xor
pop
mov
mov
push
outsl
stc
or
ja
mov
or
ss
fidivl
mov
push
repnz
push
addr16
sbb
lods
ljmp
clc
adc
shlb
sub
jg
iret
test
iret
lret
inc
imul
in
pop
jne
push
test
ja
and
mov
xor
fdivl
icebp
xchg
pop
icebp
jno
mov
fcom
jo
icebp
adc
add
repz
fisttpll
jae
popa
clc
xor
scas
mov
sbb
inc
push
cs
adc
fucomip
leave
mov
cmc
push
mov
ss
popf
adc
xor
fsts
cmp
clc
mov
enter
jg
mov
loope
lret
les
xchg
sub
js
dec
ljmp
push
shl
or
xor
inc
or
cli
pxor
inc
mov
clc
mov
cmp
pushl
ret
aas
or
ja
mov
cmp
mov
lahf
mov
call
out
sahf
jno
leave
sbb
adc
xchg
ja
sub
xor
stos
daa
out
bound
mov
les
jno
mov
jmp
loope
xor
pop
loopne
mov
inc
clc
jp
sub
sahf
xor
loope
aad
icebp
in
mov
gs
inc
cmp
dec
push
movb
fcom
bound
push
cmpsl
cli
pushl
push
data16
daa
inc
arpl
decb
push
dec
cmc
dec
shll
mov
andb
popf
add
out
std
or
addr16
and
scas
sbb
mov
stos
jmp
daa
fwait
pop
fsts
test
mov
push
idiv
aam
shl
pop
adc
loope
in
stos
bsf
and
hlt
or
sbb
pop
push
jle
lods
lret
out
mov
mul
and
mov
jmp
bound
sbb
jb
xchg
mov
aas
and
hlt
xor
jmp
std
ret
notb
cld
mov
insb
dec
out
mov
cmp
adc
adc
or
adc
rolb
pop
int
out
mov
aad
daa
sbb
ja,pn
loope
jg
jle
and
adc
or
pushl
or
cwtl
cwtl
rcrb
cld
pop
out
and
mov
popa
or
fdivrp
arpl
sti
sub
dec
pop
jb
ljmp
mov
jno
lods
adc
sti
pusha
les
jg
lds
pop
loop
mov
jmp
fstpl
fdivrs
ja
xor
push
sti
into
push
and
pop
mov
adc
movsl
sub
pop
cld
mov
cmp
mov
mov
test
xor
shl
adc
bound
stos
sbb
inc
icebp
insl
mov
sbb
jle
xor
cld
cli
push
ror
test
mov
decl
and
dec
out
imul
repnz
xor
sub
call
sete
in
cmc
adc
sahf
ljmp
jge
mull
or
and
es
mov
lcall
test
das
jmp
out
pop
push
push
dec
and
cld
push
std
stos
inc
in
sbb
push
cs
jmp
mov
and
jl
mov
push
or
mov
insb
dec
push
insb
in
mov
adc
in
jnp
adc
test
loop
or
cmpl
cmpsb
popa
push
repz
decl
aaa
mov
mul
xor
adc
int
xchg
rolb
mov
cwtl
add
aaa
add
das
testb
out
loop
pop
cld
fidivl
sub
cld
mov
bound
ss
push
jno
xor
out
stc
mov
mov
insb
mov
inc
lcall
adc
sarb
fcomp
inc
jno
out
sahf
jbe
add
mov
jbe,pn
mov
lods
repz
sti
mov
in
add
test
sti
jno
les
call
adc
je
addr16
pop
fisubl
jnp
mov
decb
dec
push
jo
sbb
push
mov
decl
inc
je
jge
mov
decb
sbb
add
int
pop
movsl
ret
dec
lea
fistps
xor
cli
addr16
xor
mov
in
dec
ljmp
andl
out
adc
out
in
mov
ret
sahf
dec
outsb
pop
js
push
test
stos
loopne
xor
std
push
test
notl
xchg
mov
push
rcl
and
decl
sbb
xchg
mov
mov
push
push
or
or
dec
rcll
incb
outsl
or
ltr
addr16
xchg
xor
lock
jo
mov
pop
lcall
ret
hlt
ja
xchg
sub
mov
ljmp
testb
pop
ret
imul
or
sti
sarb
rcl
stos
addb
push
imul
add
ret
jae
jmp
lock
gs
mov
bound
mov
pushl
xchg
mov
mov
dec
loop
out
inc
ret
out
lea
rclb
xchg
jb
xchg
sbb
cli
jb
sar
mov
lock
adc
call
adc
pop
inc
out
mov
xchg
mov
repnz
out
aas
mov
lds
jo
imul
mov
notl
loop
adc
leave
xchg
lret
mov
or
ja
adc
or
add
add
subl
call
adc
sar
inc
loop
add
stos
lahf
sti
dec
mov
cmp
cmp
and
sbb
xchg
repnz
ljmp
inc
ret
scas
add
xchg
jecxz
nop
cmp
scas
dec
pop
mov
inc
cmp
bound
lds
cmp
insb
cmp
pop
shll
sub
pushf
inc
divb
jle
xchg
std
pop
jmp
xchg
ret
arpl
inc
jmp
out
pop
cmp
push
pop
shrl
out
lock
pop
ret
outsl
xchg
fsubrs
gs
out
std
lahf
mov
sub
push
push
into
and
jp
add
push
cld
nop
push
add
xorb
std
pop
push
or
and
inc
inc
jnp
ret
sti
xor
mov
push
and
cmc
cwtl
aam
mov
popa
test
mov
mov
push
mov
div
lahf
fdivr
xchg
add
pop
out
sbb
loope
add
mov
jge
push
sub
out
cmpsl
outsb
jg
jl
sahf
mov
push
insb
xor
jp
dec
mov
fs
repz
addl
adcl
repz
or
and
jns
outsl
rolb
ds
mov
mov
dec
adc
sub
adc
mov
dec
xor
loope
out
dec
jbe
xchg
sbb
mov
aas
inc
adc
and
jne
push
inc
fyl2x
jg
pop
jo
mov
inc
ror
add
sub
xchg
mov
fcomp
shll
roll
inc
loope
cli
pop
cmc
ja
cld
or
cmp
pop
psubq
mov
divb
or
push
jg
out
fsubrl
lods
or
mov
addr16
pop
sti
and
mov
lahf
bound
mov
pop
xor
fisttpll
cmpsl
inc
pop
out
jno
neg
roll
fnstsw
sti
out
cmp
out
sbb
lahf
movsb
ljmp
cmc
movsl
inc
jns
sbb
andb
mov
adc
orb
hlt
out
outsb
pop
push
repz
icebp
or
and
mov
add
xor
ret
ret
dec
push
cmp
shrl
sbb
clc
and
mov
jecxz
int3
call
jnp
sbbb
repz
push
mov
insl
addr16
imul
adc
sub
dec
pop
add
icebp
test
ficoml
lea
std
iret
cld
mov
jne
sbb
xchg
mov
into
push
iret
jns
out
dec
mov
icebp
rcrl
sbb
add
mov
call
push
jns
out
mov
mov
mov
adc
dec
negl
jle
lret
xchg
pop
sub
call
xor
out
sub
enter
xchg
mov
pop
jbe
xchg
mov
xchg
xor
je
js
lock
xlat
clc
out
sti
incb
and
fdivrs
add
push
aas
and
cmpsl
mov
pop
fidivl
and
aas
push
subl
outsl
mov
inc
mov
lds
sbb
or
jmp
arpl
incl
std
mov
rorl
popa
stos
fidivrs
jge
fistpll
popf
pop
push
int
sarl
sbb
mov
addr16
lret
jnp
pop
push
repnz
inc
mov
cmp
mov
int
push
mov
daa
out
and
sub
sub
jo
xchg
pop
inc
cmp
sti
adc
add
mov
cmp
dec
cmpsb
testb
sub
xchg
aaa
pop
push
cmp
outsl
jno
and
mov
cmp
imul
mov
xchg
ljmp
or
adc
adc
jmp
fwait
xchg
icebp
mov
popa
and
pop
mov
fbld
add
rclb
mov
lods
mov
stos
jnp
mov
inc
pop
insl
int
clc
sbb
fbld
mov
int3
jle
in
mov
ljmp
add
sarb
xor
data16
fwait
loope
pop
and
gs
jmp
ljmp
cmp
mov
test
repz
in
pusha
orl
or
shll
pop
cmpsl
out
fimull
ret
fstl
aas
xorl
arpl
out
into
rorl
fdivrp
sbb
xchg
imul
loop
adc
sti
inc
lock
ret
add
mov
ja
test
fs
dec
iret
add
sbb
or
aaa
pop
aaa
cmp
xchg
mulb
movsb
call
daa
and
popf
jle
les
lds
daa
aad
pop
adc
les
mov
xchg
xchg
bound
daa
inc
scas
out
sarb
cwtl
add
std
pop
gs
dec
icebp
jnp
lahf
jae
out
lds
jbe
fstpt
into
dec
pop
popa
idivb
inc
jmp
and
sbb
or
jl
addr16
push
mov
dec
xchg
dec
inc
mov
in
xor
pop
loop
fdivs
dec
ds
lahf
add
fdiv
dec
lcall
sbb
lret
push
mov
hlt
pushf
in
cmp
lds
mov
rclb
inc
aaa
cmpb
pop
jnp
std
ja
jg
and
inc
hlt
jp
sub
jmp
add
nop
jl
repnz
adc
dec
mov
jle
stos
lods
jle
mov
lods
mov
push
jge
clc
xor
push
mov
adc
sbb
pop
add
add
pushf
xlat
cmp
inc
or
lahf
icebp
mov
cmp
cmp
mov
cmpsb
mov
fnsave
lcall
icebp
dec
cld
mov
sub
push
add
pop
sbb
inc
jg
push
mov
cwtl
fstpl
mov
or
movsl
sahf
jb
nop
cmp
sbbb
mov
pop
lea
cmp
jmp
push
outsb
mov
mov
jmp
sub
mov
insb
dec
imul
cmc
out
pop
stc
out
sbb
push
in
cmp
pop
or
loopne
in
pop
and
jmp
out
lock
xor
sbb
cmp
dec
clc
scas
rcll
fistpll
pop
aam
or
and
and
roll
hlt
dec
cmpsl
adc
je
jg
sbb
lahf
sbb
jl
ss
push
stos
mov
mov
xchg
mov
std
daa
in
and
lcall
ljmp
inc
and
or
outsl
hlt
lret
stos
cli
push
aas
sbb
jmp
cmpsl
jg
decl
pop
mov
push
call
mov
inc
add
clc
push
cmc
fbld
dec
std
cmpsl
pop
jae
push
stc
cmp
hlt
daa
lock
push
xor
popf
and
and
rcr
xor
pop
outsb
or
push
pop
mov
out
ficomps
data16
push
ja
in
out
std
idiv
lea
stc
push
popa
push
inc
faddl
mov
aam
ljmp
std
mov
xchg
cmp
cli
aas
mov
lret
cmp
shll
fstpt
adc
in
sbb
xor
jl
jg
mov
mov
inc
orb
ret
aas
adc
cltd
lock
add
push
aaa
mov
add
outsl
loop
cmp
ret
imul
cmp
cmp
jbe
mov
add
cmp
sbb
sbb
incl
data16
out
jge
push
ljmp
mov
xor
test
jp
adc
sub
inc
xchg
rol
jmp
call
adc
cmpsb
dec
adc
adc
inc
outsl
push
inc
mov
ret
and
js
aam
clc
inc
pop
cs
push
or
adc
mov
les
hlt
cmp
and
fiaddl
push
push
cld
xchg
out
andl
and
sub
lock
rclb
mov
pop
ficoms
lahf
cltd
jge
repz
bound
xchg
pushf
orl
jg
aam
jo
int
dec
and
or
aam
lds
subl
aaa
mov
fdivr
push
test
dec
leave
in
jge
add
hlt
pop
imulb
mov
out
sti
decl
push
loopne
into
and
js
and
stos
xor
cmpb
sub
std
inc
mov
inc
jl
insb
xor
in
cli
or
pop
imul
fidivrs
and
sub
jle
cmpsl
pushf
adc
ljmp
test
dec
add
inc
add
pop
test
lock
std
ret
and
jg
outsl
stos
imull
xchg
popf
out
jg
pop
add
insb
in
cmp
sbb
fiadds
xor
adc
popl
jg
or
int
enter
add
mov
pusha
mov
out
ret
sub
lret
pop
cmpsl
lret
outsb
mov
hlt
fucom
loope
int3
push
xor
out
lret
add
and
adc
cltd
cmp
iret
inc
stos
jp
pop
jg
lea
movsb
cmp
jg
cmc
lcall
rclb
jbe
xchg
das
dec
dec
cli
int3
jnp
icebp
test
aam
aad
pop
loope
js
xor
pop
mov
sub
jg
jbe
repz
add
repz
loop
testb
push
push
mov
hlt
pop
sub
and
cmp
mov
test
addr16
lcall
test
lock
adcl
mov
lcall
xchg
mov
aas
push
cmpsl
loop
push
pop
sub
je
adcb
test
fmuls
frstor
mov
das
dec
rclb
decl
loope
sub
inc
lods
sti
push
out
daa
ss
cmpsl
jge
pop
jg
xchg
mov
jae
or
pop
jecxz
clc
xor
inc
inc
cmp
jg
sub
jmp
mov
xchg
fnsave
popa
mov
hlt
mov
mov
sti
push
adc
mov
adc
mov
js
inc
ret
jl
jl
les
mov
inc
std
das
adc
mov
outsb
jnp
or
nop
es
inc
clc
xchg
cwtl
nop
add
push
push
jge
jg
push
mov
dec
fs
sub
iret
push
dec
outsb
mov
cmp
loopne
mov
stos
sbb
inc
pop
mov
movsb
fsts
int
fs
jmp
call
scas
xor
scas
adc
imul
mov
inc
addb
push
loope
push
sbb
insl
jp
sbb
decl
mov
lds
jnp
mov
rcrl
dec
xadd
adc
rcrl
stc
cmp
xor
insl
jnp
mov
pop
jo
jmp
lds
xchg
jecxz
adc
aad
xor
mov
jnp
fdivrs
roll
aas
idiv
loope
adc
xor
sub
push
jns
pushl
pop
pushf
fdivrl
pop
or
hlt
fidivl
lods
sti
out
hlt
frstor
push
inc
or
xchg
test
mov
std
out
lock
xlat
outsb
mov
inc
insl
sub
sahf
xor
lahf
adcb
mov
cs
jp
add
xchg
cmpb
insl
call
jno
js
mov
in
push
sub
std
idiv
and
and
sbb
adc
dec
hlt
cmp
arpl
cmp
sbb
rclb
out
scas
dec
push
jle
scas
xchg
cmp
outsl
out
jmp
inc
ss
shll
loopne
enter
popf
sbb
cld
sbb
pop
stos
pop
das
cwtl
pushf
or
pop
out
jg
cli
push
mov
jmp
mov
xchg
adc
push
jg
add
mov
cmpb
pop
ljmp
or
decl
push
sub
mov
std
iret
cld
decl
sbb
jns
mov
fistps
mov
icebp
cs
cmc
sub
scas
push
push
cmpsl
test
cs
push
aas
mov
push
icebp
mov
enter
out
add
in
sarl
mov
mov
fdivrl
and
jae
repz
pop
adc
mov
cmpsb
sub
imull
lar
mov
popf
xchg
std
ja
and
jbe
push
pop
dec
push
stos
or
push
and
dec
std
incl
out
ljmp
sub
mov
jmp
sbb
mov
mov
adc
sbb
jbe
push
pop
sub
push
mov
out
icebp
pop
out
push
lret
sbb
sbb
cmp
leave
flds
mov
notl
test
hlt
jns
pop
cli
mov
cmp
into
inc
inc
fists
aaa
cwtl
jg
jmp
loopne
pop
ret
jnp
pop
shr
adc
ja
ret
mov
mov
add
rclb
es
mov
lods
fs
cmp
add
cmc
lcall
sub
or
lods
dec
scas
or
push
jns
adc
stos
repnz
sub
sbb
cmp
cmpsl
jbe
subl
cmp
aas
in
stos
test
aad
arpl
ret
loope
push
jg
inc
fdivp
xor
jecxz
mov
jb
push
out
xor
filds
test
dec
fdivr
sbb
jo
insl
dec
scas
clc
out
push
mov
mov
jmp
pop
dec
mov
rcl
jo
cmp
clc
push
add
pop
aas
mov
mov
pop
mov
mov
xchg
dec
aaa
fsubr
mov
mov
std
mov
xor
incl
push
xor
arpl
test
fdivl
mov
mov
sbb
jmp
in
inc
mov
add
test
ljmp
pop
mov
dec
leave
test
lock
push
in
pop
jmp
inc
mov
cmp
cmpsb
xchg
imull
mov
aas
idiv
pop
inc
out
lcall
sbb
or
xchg
insb
jbe
fsubr
push
cmp
jo
jl
adc
rorl
sahf
and
cmp
in
cmpsb
adc
adc
ret
ss
aam
push
pop
mov
loope
test
jo
pop
into
in
insb
mov
insl
out
outsb
adc
lret
adc
inc
jb
lahf
cmp
dec
add
sar
movsb
mov
inc
sub
jl
in
and
sub
daa
push
mov
push
rolb
cmp
js
add
jg
rorl
or
lds
dec
popf
out
push
std
or
and
fbld
jb
sub
dec
dec
pop
sbb
insl
stos
clc
push
sbb
ja
push
aam
das
xlat
inc
lcall
decl
clc
and
cld
fld
ljmp
inc
movsb
into
scas
test
inc
push
incl
loope
andb
adc
jecxz
dec
das
pop
bound
sbbb
loopne
fldt
dec
imull
inc
aaa
int
mov
mov
jl
adc
jp
into
xchg
cmpl
mov
or
insb
adc
cmpsl
fsubs
adc
loopne
mov
mov
jge
scas
cmpsb
sarb
jg
clc
fstp
xlat
jbe
push
adc
js
xchg
pop
gs
inc
pop
insl
and
dec
movsb
dec
mov
mov
add
aam
mov
xchg
jmp
movsb
jnp
aas
sbb
adc
ja
or
and
inc
sub
imul
mov
stc
repnz
sub
jmp
bound
adc
jnp
xor
dec
lret
clc
lcall
push
dec
lock
fs
xor
and
mov
repnz
adc
jecxz
sub
dec
mov
addr16
jg
sub
and
xchg
cld
popa
cld
add
mov
test
clc
pop
fnstsw
jmp
lock
gs
mov
sub
jl
data16
xchg
mov
push
push
imul
adc
jae
js
mov
outsl
pop
icebp
dec
cltd
lahf
or
push
ljmp
xchg
jbe
fiaddl
push
xlat
cmp
pop
add
cld
les
loope
aas
cmp
push
jle
stos
mov
pop
scas
push
jo
inc
xchg
mov
mov
dec
nop
adc
jnp
js
sbb
loop
std
jp
out
xchg
mov
insb
sahf
ret
faddp
pop
jnp
cs
daa
daa
out
pop
sbb
pop
iret
mov
lahf
sarb
xor
fwait
xor
fisttpl
cmp
push
push
add
stos
jle
mov
push
test
xchg
sbb
fisttpl
cld
lahf
sbb
jg
mov
push
das
mov
rolb
clc
and
and
push
xchg
std
es
jb
lahf
lret
std
and
daa
mov
movsb
insb
cmpl
mov
jno
mov
xchg
xchg
repz
jg
push
push
mov
fiadds
outsl
test
cmp
pop
loopne
jno
cmp
daa
sub
jns
pushf
cmpsb
incl
jge
mov
add
or
lea
mull
les
pushf
mov
dec
jns
adc
stos
push
in
cmp
mov
jns
pop
push
dec
push
add
std
fnsave
dec
or
xor
ljmp
int3
dec
pop
add
and
test
push
dec
jnp
cli
push
or
test
repnz
and
addl
push
push
mov
in
add
jle
add
hlt
mov
pop
std
jg
sub
loopne,pn
push
cmp
mov
sub
push
lahf
negb
scas
cmp
outsl
out
mov
sbbl
rorb
out
add
jg
jle
push
daa
push
sbb
mov
lret
stc
insb
outsl
out
mov
dec
fwait
pop
dec
add
pushf
int3
shrl
or
ds
out
insb
aaa
scas
fdivrp
xor
mov
fisubrs
mov
xor
lret
and
mov
lahf
adc
xor
cmp
push
mov
mov
js
jle
xchg
out
int
fmul
rcll
dec
and
in
xor
out
je
cli
popl
lock
xchg
xchg
add
adc
fwait
aas
je
movsb
lahf
aam
fistps
test
out
sbb
cltd
repz
js
loopne
pop
loopne
ljmp
inc
shl
xchg
fcoml
inc
outsb
dec
mov
mov
ljmp
sbb
movsl
stos
xchg
mov
xor
test
inc
jne
inc
push
aaa
mov
jle
aas
jmp
outsb
icebp
das
mov
gs
add
lods
aas
lock
push
or
daa
fcomip
jle
loopne
push
rorl
fdivrp
fcoml
test
xor
std
jno
xor
insb
repz
xchg
cmp
dec
mov
loop
sahf
into
sub
sahf
das
inc
or
mov
lcall
fdivp
mov
mov
jns
jo
mov
lock
xchg
mov
jo
in
mov
test
cmc
movsb
sub
lock
cmp
push
loopne
mov
addr16
sbb
rol
cmp
lds
pushl
aad
mov
loop
cld
idiv
cmp
lahf
mov
andl
out
sar
and
mov
xlat
lea
js
cmp
or
call
or
aad
lock
adc
push
pop
push
sbb
inc
inc
cld
jg
std
pop
out
incl
fwait
sbb
imul
rcrl
imul
in
xchg
and
cltd
and
adc
cmp
inc
cld
ret
out
mov
jmp
xchg
cmp
jmp
test
fistpll
jl
divl
dec
out
mov
xor
add
xlat
cwtl
call
adc
icebp
mov
dec
jp
adcb
add
cwtl
jo
dec
add
movsb
mov
push
adcb
sub
arpl
push
add
pop
sahf
ss
fiadds
lock
sbb
mov
sub
cld
sbb
cli
mov
sub
jns
dec
inc
rclb
xchg
loop
scas
mov
std
pop
push
and
loopne
ret
sbb
jbe
aas
fisttps
pop
xchg
stos
popf
lret
out
xchg
add
idiv
pop
loope
inc
cli
cltd
adc
arpl
aas
push
pusha
js
push
mov
test
add
inc
lahf
push
or
add
fucomp
sbb
rorb
adc
pop
sub
shll
xchg
out
add
jnp
addb
insl
cmp
xor
ja
incb
into
jge
xlat
outsl
pop
or
mov
add
jecxz
sbb
jo
jmp
out
mov
inc
je
sbb
cmp
jle
cmpsb
int
jp
inc
das
dec
and
sub
ja
jle
ret
mov
push
icebp
jne
jecxz
js
push
xchg
cli
ja
cltd
ss
fists
fsubrl
std
jp
dec
push
push
jnp
lods
insl
xor
sub
mov
dec
loop
les
inc
sub
in
imul
push
and
sbb
jmp
imul
test
xchg
stc
es
arpl
decb
or
xchg
adc
cmp
fiadds
testb
aas
push
cmc
jae
subb
pop
outsl
inc
or
push
pusha
and
inc
jb
aas
loope
notb
mov
and
adc
stc
add
pop
push
sub
jnp
or
fistpll
sub
outsb
and
pop
in
imul
out
addr16
inc
mov
das
gs
push
lret
into
loop
push
mov
mov
mov
or
out
pop
and
push
fmull
into
mov
jmp
mov
stos
xor
mov
xchg
mov
jge
fs
sbb
les
cmpsl
adc
adc
cltd
jmp
popa
inc
in
xchg
nop
popa
aas
test
sub
jmp
jl
mov
out
popf
and
imul
pop
push
call
adc
je
mov
sub
orb
push
cmc
pop
pop
sbb
lahf
lock
mov
outsl
mov
inc
add
xor
scas
dec
jae
lret
ja
inc
stos
xor
mov
sub
adc
inc
fisttpl
jle
add
sbb
pop
test
aaa
scas
fdivl
sub
ficomps
cmp
adc
push
loop
adc
inc
jp
mov
xchg
mov
and
ja
rolb
inc
dec
cmpsl
ret
adc
clc
cmpsl
divl
add
and
jp
cld
sbb
xor
daa
sub
xchg
xchg
and
out
mov
xchg
cltd
inc
sarb
aaa
mov
faddl
pop
aaa
outsb
fdivr
dec
add
mov
loope
jo
cmc
aam
ja
inc
add
mov
clc
insb
int3
mov
push
movsl
daa
add
rorb
jge
fwait
lret
inc
push
mov
mov
push
enter
ret
xor
mov
out
stos
pop
fistpll
lea
push
sbb
cmp
xchg
mov
xor
or
or
std
mov
pop
lret
xchg
outsb
ret
leave
fst
jmp
test
sti
pop
jb
bound
lock
sub
aas
mov
adc
cmp
clc
jmp
popa
jae
rcrl
xchg
mov
daa
or
mov
push
mov
pop
sarl
lods
pop
sar
subb
ret
pushf
aaa
mov
fistps
aas
xchg
cmpsl
xorb
cmp
add
fimuls
bound
add
mov
subl
fstpl
ret
pop
push
sub
call
es
adc
out
add
ret
adc
xchg
stc
ja
ja
sub
jnp
adc
sbb
dec
pushl
pop
mov
addl
out
icebp
mov
xor
pop
push
out
inc
icebp
pmaxsw
mov
cmp
mov
adc
out
sbb
insl
sbbl
xlat
jmp
mov
mov
inc
add
jl
aas
push
cltd
cli
ja
inc
sbb
push
aam
xor
or
in
mov
fisttpll
icebp
in
es
cltd
or
out
cmc
fldl
push
fisttps
inc
lret
fdivs
nop
inc
dec
cli
and
cltd
pushl
sbbb
pop
mov
movntps
jb
jg
ljmp
outsl
int3
js
stc
cmpsb
ret
test
mov
fmul
sbb
mov
clc
xchg
cmp
test
call
and
adc
lods
add
mov
inc
aad
mov
hlt
jg
test
push
aam
add
pop
js
cmp
imul
aas
and
sub
jbe
jmp
sbb
jb
ljmp
int
push
push
in
xor
fwait
stc
or
jae
inc
adc
lret
loop
shl
cmp
adcb
inc
jecxz
or
pusha
mov
stc
mov
dec
in
xchg
or
pop
adc
jg
clc
aaa
cmp
lret
test
enter
cmp
test
xchg
mov
dec
inc
ret
imul
or
addr16
pop
adcl
cmp
adc
and
aas
inc
test
fistpll
xorb
ja
outsb
push
mov
sti
es
hlt
loopne
cmpb
pop
jl
push
sarb
out
jb
shrb
icebp
shl
jg
test
out
jnp
dec
clc
cwtl
cmc
std
sub
mov
in
mov
mov
out
hlt
mov
aas
jb
inc
out
and
lock
mov
inc
push
or
mov
or
add
lods
or
dec
sahf
push
and
push
adc
outsl
or
addl
movsl
add
mov
notl
and
push
rcrb
and
mov
adc
or
push
lods
jge
push
adc
sub
jae
push
or
lret
dec
inc
aas
jno
fcmovnu
pop
insb
es
jae
sub
mov
sub
push
lods
imul
popa
mov
inc
push
jb
cwtl
jle
inc
jmp
xor
outsb
insl
fistpl
xor
or
mov
dec
add
mov
or
mov
outsb
lods
and
sub
xchg
sbbb
hlt
pop
mov
pop
mov
inc
sub
xor
out
adcl
lret
lret
jno
push
pop
add
or
push
xchg
xchg
mov
push
and
mov
int
pop
push
add
movl
adc
inc
xor
test
xchg
sub
insl
imul
push
and
and
ficompl
rol
add
or
cmc
mov
dec
mov
mov
push
lea
jmp
cld
lea
push
xchg
sarb
leave
ret
inc
stos
adc
mov
iret
jl
test
jb
mov
fbstp
add
mov
adc
push
test
pop
push
lret
mov
pop
jae
enter
xlat
inc
sub
add
adc
add
adc
test
xor
sbb
loope
push
mov
push
push
mov
mov
jno,pt
sahf
sub
mov
mov
ds
fs
outsb
jno
xor
pop
mov
mov
lods
add
outsb
push
or
out
pop
imul
jae
push
cmp
inc
sub
sub
divl
or
inc
lods
lret
sahf
int
push
ds
cmp
pop
mov
lods
sbb
add
jge
arpl
lods
mov
fcoml
mov
xchg
mov
sbb
sub
sti
or
xlat
or
pop
ss
int
jae
xchg
daa
xchg
pop
or
faddl
cwtl
push
jne
add
jnp
jl
jno
sub
inc
jae
sub
mov
into
push
mov
jmp
or
and
outsl
or
jle
arpl
fwait
lock
cmp
les
mov
cmp
push
mov
pop
or
lahf
add
adc
mov
push
cmp
inc
rcr
addr16
adc
call
in
ss
pop
mov
daa
adc
dec
shl
dec
and
sbbl
mov
mov
enter
testb
sub
ss
add
inc
sarb
jl
ret
mov
jbe
add
adc
jmp
jl
daa
sbbb
sub
imul
inc
or
stos
andl
inc
push
push
inc
scas
xchg
dec
test
dec
mov
mov
or
stos
jbe
sahf
xor
in
dec
out
inc
sub
mov
push
sbb
ret
mov
push
or
shll
stos
pop
push
add
pop
imul
jae
dec
and
inc
mov
mov
mov
and
adc
fstps
sahf
and
xlat
lcall
push
adc
imul
mov
int
push
rclb
mov
lods
xor
push
dec
push
or
rorl
fs
pop
inc
ret
cltd
cmp
es
xor
in
in
dec
fidivl
sbb
aad
lret
das
xor
pop
push
sub
mov
rcrl
lods
push
or
jb
ss
mov
orl
push
scas
jb
lret
pop
insl
gs
imul
push
mov
outsl
notb
inc
fnstenv
loopne
push
cmp
mov
or
lret
cli
add
rolb
pop
cld
imulb
sti
push
shlb
add
in
inc
jnp
inc
out
cmc
orb
xor
dec
jp
dec
int
pop
xlat
jg
sti
pop
mov
fisttpll
sbb
push
pop
jae
adc
xor
rclb
pusha
push
leave
repnz
mov
test
test
sbb
cld
push
xlat
test
ret
fst
pop
int
adc
mov
aas
mov
mov
xor
in
hlt
jbe
loope
dec
fwait
sub
mov
in
pop
jae
roll
push
inc
mov
cmp
and
and
push
sub
scas
push
xor
xchg
mov
scas
sub
daa
cmpsb
mov
sbb
aaa
mov
test
add
sub
mov
mov
add
add
jae
mov
out
pop
and
fwait
push
xorl
push
jae
sbb
adc
xchg
aad
pop
stos
stos
and
loopne
rcll
mov
nop
jae
scas
int
in
push
push
lahf
or
xchg
outsb
hlt
shlb
test
xchg
insb
mov
dec
call
or
cmp
mov
or
sub
cmpsl
or
imul
mov
sub
stos
add
mov
ja
pop
cli
sbb
in
cmpsl
or
jmp
les
fld
and
or
stc
aad
adcb
xor
jno
outsl
inc
fistpl
leave
std
adc
sti
jl
xchg
add
sbb
insb
shlb
mov
mov
aam
or
xchg
cmc
loopne
rolb
xor
bound
cmpsl
lret
sub
insl
cmp
cmp
pop
xor
movsl
pushw
lcall
dec
mov
sub
mov
cmp
xchg
sub
cs
push
lret
test
pop
test
dec
mov
mov
ja
and
push
push
mov
xchg
cwtl
test
xor
js
add
or
mov
mov
imul
mov
pop
shll
mov
pop
lods
aas
jno
je
sbb
xlat
pusha
jo
lret
adc
sbb
shll
clc
addl
bound
push
cmp
push
add
ja
or
rorb
pop
inc
jns
push
leave
inc
test
lods
sbb
sub
jno
jg
or
mov
pop
add
ljmp
rcll
mov
jae
imul
push
jnp
jb
mov
in
rcrl
icebp
ljmp
gs
pop
cmpl
inc
sub
scas
pop
daa
xor
leave
cmp
es
mov
pop
add
push
fcoml
push
xchg
mov
xchg
es
outsb
adc
in
and
inc
pop
pusha
ret
pop
push
scas
cs
jnp
stc
cwtl
push
xchg
data16
sti
popf
xchg
jns
test
push
mov
iret
mov
call
jns
push
and
test
ret
dec
adcl
cmp
pop
sbb
mov
sbb
pop
lods
insl
popf
cmc
cmp
nop
mov
add
cwtl
push
popa
pop
jne
mov
mov
mov
lock
xchg
adc
leave
mov
pushf
push
mov
cwtl
or
xor
xchg
push
inc
add
push
xlat
cmp
push
jns
jno
cwtl
mov
mov
adc
mov
and
rcrb
add
and
xor
dec
sub
mov
push
push
cld
adc
das
adc
clc
push
sbb
and
cmp
les
adc
pop
pop
sub
adc
addl
js
lds
je
mov
rorl
mov
inc
sbb
mov
and
ret
mov
dec
cmp
xchg
adc
lock
push
inc
add
dec
addb
insl
dec
add
adc
dec
add
pop
pusha
iret
sub
xchg
nop
outsb
sbb
push
cmp
fbstp
dec
or
adc
dec
add
mov
movsb
adc
add
lock
lret
pop
sbb
cld
mov
or
and
cmp
push
adc
sbb
inc
jae
push
bound
rorl
push
and
cmpsb
sbb
add
mov
test
xor
roll
cmpsb
pop
inc
push
out
push
push
sub
mov
ss
insb
cmp
push
sub
cmp
pop
mov
jo
shr
mov
or
inc
add
dec
les
mov
rcrb
xchg
pop
push
not
mov
dec
xor
sahf
mov
mov
lcall
pop
pop
cs
test
lea
or
jno
ficompl
xchg
jne,pt
push
lcall
into
es
xchg
push
sub
jo
popf
push
mov
out
mov
pop
xchg
and
mov
mov
lods
mov
push
call
jnp
mov
add
lds
stos
lret
jne
bswap
inc
aas
rclb
mov
icebp
ss
fs
decl
xor
push
ret
mov
xor
test
push
addl
inc
insl
push
jecxz
out
test
push
lock
sbb
or
mov
cmp
or
clc
lock
mov
scas
inc
add
cld
inc
js
xchg
pop
pop
push
push
add
cmc
pop
adc
or
outsl
mov
or
push
mov
sarb
es
xchg
pop
xor
push
fadds
and
das
or
add
int3
mov
and
mov
sub
jo
push
cwtl
fmull
push
fidivrs
inc
dec
sbb
cwtl
push
push
daa
mov
push
inc
aaa
mov
imul
int
sub
or
inc
xor
stos
mov
shl
cli
sub
sbb
mov
cmpb
jmp
mov
add
int
push
es
ror
cmp
cmp
rcrb
in
daa
andl
rcl
or
daa
ss
pop
jae
push
and
fmull
pop
mov
scas
pop
cli
cld
dec
pusha
incl
mov
mov
pop
stos
mov
int
or
inc
pop
push
sarl
ljmp
popa
sub
jne
xor
inc
adc
inc
rcrb
test
jo
cmp
arpl
aaa
adc
shlb
sahf
add
fisttpll
int3
int
fsubrs
inc
sbb
jmp
clc
in
stos
add
and
and
ret
adc
ret
mov
test
add
cmp
mov
lods
add
in
out
add
mov
sbb
add
add
daa
xlat
mov
push
xchg
mov
xchg
add
jo
dec
int
and
and
cmp
dec
int
jp
stos
sub
lods
add
xor
out
xor
xor
cmp
adcb
add
lcall
out
pop
shr
cwtl
add
std
decl
shlb
push
movb
lret
mov
add
fwait
mov
mov
cld
sbb
scas
cmp
sahf
jae
pushf
imul
xor
out
adc
mov
imul
in
addb
push
dec
repnz
cltd
push
outsb
jmp
pop
lods
cmp
movsl
int
and
fwait
mov
iret
xor
cmpl
scas
fldl
jo
inc
and
ds
outsl
pushf
adc
adc
call
sub
add
mov
push
push
and
or
push
fdivp
callw
xchg
lods
sbb
inc
xchg
mov
scas
add
lret
sub
mov
ds
dec
insl
scas
add
push
xor
andb
fdivrp
daa
jo
push
jg
sbb
xor
imul
shlb
sbbl
xchg
or
jb
adc
mov
mov
je
sub
push
jb
mov
push
jns
inc
and
sbb
jp
push
mov
push
adc
push
nop
lea
push
jae
faddl
push
mov
pop
addl
das
push
movsl
popa
in
add
mov
js
push
mov
pop
rcrl
lock
add
push
shlb
cld
hlt
jo
cmp
pop
into
fs
mov
fdivrs
xor
es
sahf
mov
icebp
mov
push
or
mov
mov
out
popa
push
lahf
es
ret
push
jmp
mov
sbb
inc
jp
push
clc
pushl
rcl
aad
jb
adc
inc
mov
mov
add
xor
dec
jle
inc
cs
ret
das
jno
cmpsl
mov
xchg
scas
das
dec
sub
stc
xor
movsl
jo
dec
jge
aaa
mov
rcrl
pop
sahf
cmpb
push
xlat
cltd
sub
pop
cmp
dec
pop
lods
push
mov
lret
push
dec
or
out
clc
cwtl
daa
orl
je
push
mov
xor
ret
push
mov
cmpsl
dec
add
pusha
js
mov
jae
shlb
add
mov
pushf
imul
pop
jae
popf
lods
dec
sub
enter
andb
ss
push
sbb
lcall
mov
out
push
xchg
mov
imul
adc
push
inc
push
faddl
or
sub
shl
pop
mov
mov
fimull
jnp
fninit
daa
or
sub
movsb
adc
cmp
pop
sub
push
add
mov
cld
mov
add
sub
cmp
dec
cld
adc
mov
dec
outsb
push
hlt
movups
mov
ret
roll
sahf
add
pusha
lds
icebp
inc
fldenvs
push
inc
clc
push
imul
dec
dec
loopne
call
cltd
add
lret
and
arpl
shl
xchg
sbb
or
orb
popf
pop
and
fisttpll
sti
mov
or
or
mov
inc
xor
or
test
or
inc
push
sbb
in
dec
cmp
cmp
cmp
xor
mov
jmp
scas
sbb
inc
cmp
inc
push
lret
bound
push
cwtl
sub
inc
xor
xlat
es
imulb
iret
mov
test
stc
leave
pop
or
mov
push
and
or
les
push
ret
scas
ss
sbb
adc
adc
aam
inc
mov
pop
aad
sub
xchg
int
orb
adc
jae
pushf
and
mov
jo
movsl
xchg
mov
rcl
popf
pop
mov
in
mov
jb
sbb
mov
pop
lret
adc
add
pop
add
movsb
pop
push
aam
leave
mov
adc
inc
adc
dec
push
add
add
mov
add
sti
outsl
and
dec
decl
ffreep
xor
dec
cli
push
push
jmp
clc
movsl
push
push
push
std
add
das
mov
fsts
pop
shlb
pop
jb
jp
and
les
adc
add
insb
rorb
fldt
push
mov
mov
push
mov
mov
pop
pop
sub
inc
and
jo
xlat
lods
xor
mov
adc
sub
leave
ljmp
add
push
out
add
pop
in
pop
xor
xor
out
addr16
adc
add
adc
test
enter
cmp
fiaddl
int3
out
inc
hlt
push
inc
pop
lock
jae
movsb
mov
mov
stos
adc
jo
adc
fwait
lock
je
sub
mov
push
sbb
inc
icebp
cmp
add
inc
and
adc
push
sub
std
add
mov
mov
pop
dec
sub
arpl
xchg
adc
adc
pusha
aaa
add
frstor
cmp
testl
mov
outsl
add
jle
enter
sbb
lock
mov
idiv
push
aam
fildll
add
jecxz
inc
xor
dec
jbe
sbb
mov
loopne
imul
insb
mov
jle
enter
rcrl
inc
into
add
dec
xchg
push
fldl
mov
adc
add
rolb
data16
push
jp
sahf
dec
inc
sub
scas
testb
mov
je
mov
or
or
add
jb
jno
addb
fiaddl
mov
push
push
mov
jae
dec
test
lds
or
cmp
lods
add
and
mov
popf
mov
out
and
pop
and
test
rorl
mov
jb
jecxz
outsl
push
int
adc
es
xchg
mov
gs
xchg
pop
and
inc
xor
jb
inc
lea
pop
into
in
jl
outsl
sub
xor
sbb
inc
lods
xor
push
out
icebp
adc
mov
or
pop
jmp
addl
xchg
push
jg
mov
stos
shr
insb
push
addl
pop
push
repz
sub
fsubl
cmp
stos
stos
add
sar
mov
xor
mov
push
pop
inc
aaa
filds
out
sbb
ja
cwtl
push
std
popl
sub
xchg
inc
and
pop
xor
scas
or
icebp
aam
sub
mov
dec
rcrb
and
adc
or
dec
mov
push
dec
inc
add
cmp
inc
cmpl
cmc
dec
sbb
and
sbb
and
xchg
xchg
imul
sbb
add
arpl
mov
mov
callw
jecxz
push
lret
sub
rcrb
push
add
jno
popa
in
sub
fs
mov
sbb
sub
mov
fmuls
push
out
dec
nop
rcl
cmpb
out
sbb
push
or
push
xor
xchg
mov
cmpl
cmp
or
adc
test
ljmp
fadds
clc
jo
cmp
out
and
and
sub
inc
sahf
pop
xor
cmpsb
push
and
mov
mov
push
dec
jbe
push
inc
mov
sti
dec
push
roll
or
pop
pop
mov
pop
mov
jge
push
xor
mov
push
stos
sub
lea
mov
ret
test
inc
xlat
mov
inc
sbb
into
mov
jae
fadds
xor
mov
adcb
mov
dec
movsb
sarl
xor
push
or
push
or
sbb
mov
call
jne
or
push
xor
addr16
xor
lea
xor
or
outsb
outsb
mov
cltd
mov
xchg
mov
hlt
inc
xlat
lcall
jl
jo
inc
or
pop
aam
dec
mov
es
pusha
ret
and
cli
xlat
push
cmp
arpl
data16
push
add
mov
inc
jns
lret
adcb
or
js
inc
mov
adc
cwtl
icebp
sbb
clc
test
adc
leave
cltd
pushf
and
xchg
sbb
in
xchg
cwtl
sub
mov
push
loopne
fwait
sub
mov
sahf
or
push
mov
insb
jge
in
or
push
inc
and
movsl
mov
mov
dec
ljmp
push
mov
push
sub
gs
mov
mov
mov
sbb
sarb
loope
sbb
cmp
cs
test
repnz
jecxz
mov
imul
imul
adc
aas
push
idivl
push
ret
scas
mov
mov
mov
sbb
mov
stos
sarb
ja
jb
rcll
sbb
test
pop
push
sahf
movsb
es
lds
imul
and
pop
dec
or
mov
mov
shrb
mov
outsb
jl
jle
push
adcl
push
test
repz
fs
shlb
iret
lock
inc
lahf
aam
jbe
test
gs
jne
lahf
cwtl
in
mov
or
cmc
push
push
pop
add
lahf
or
mov
add
lret
in
shlb
inc
sbb
mov
or
cmpsl
addl
std
leave
shl
rcrl
pop
add
aad
ret
xchg
out
xor
pop
jne
and
jno
add
jb
popa
sbb
push
push
inc
lahf
pushw
scas
and
mov
out
ja
jne
inc
jae
xchg
and
sbb
sbb
rcrb
data16
ljmp
test
mov
pusha
sub
lret
adcl
sbb
lcall
mov
fcomip
push
or
cmp
push
jno
imul
out
push
mov
shr
gs
mov
xchg
in
imul
cs
ret
in
xor
pop
and
push
cmpsb
inc
push
bound
adc
subl
cs
mov
shlb
add
mov
push
popf
int
mov
ret
aas
div
sub
fistl
push
or
push
mov
fildl
ljmp
into
xor
adc
shl
add
add
add
addr16
add
push
xor
mov
jae
add
or
dec
cmp
mov
sub
add
iret
or
xchg
sbb
or
mov
and
rolb
or
lea
sbb
push
push
xor
rolb
je
jo
mov
push
call
xor
xor
add
inc
jo,pn
pop
pop
adcl
pushf
add
rorb
push
addr16
inc
sub
sub
rcl
push
ljmp
sub
add
mov
xchg
arpl
daa
sbb
daa
jo
imul
sub
inc
dec
or
jbe
inc
shlb
xchg
in
and
cwtl
lock
or
sub
dec
sub
in
push
pop
out
and
add
xchg
or
aad
and
dec
sbb
add
ret
out
ret
mov
jo
mov
cs
orb
out
pop
xor
call
out
lock
adc
ror
dec
cmp
mov
shl
adc
jl
adc
das
cmp
xchg
and
cmpb
push
mov
enter
dec
or
or
mov
inc
sbb
nop
out
mov
cltd
and
mov
or
mov
rcrb
test
xabort
sbb
cs
and
repnz
add
adc
cmp
add
and
xor
push
jnp
pop
push
rcrl
cmp
xlat
jno
jo
loopne
push
and
xor
adc
testl
imul
mov
or
xchg
mov
insl
rol
es
pop
gs
push
and
addb
cmp
sbb
pop
xchg
lea
mov
in
and
mov
in
repnz
lods
jb
shll
xor
mov
nop
xor
push
xor
xchg
cmp
movsl
out
jno
clc
daa
pusha
sub
xor
inc
push
push
adc
lcall
ret
xchg
test
sub
inc
xor
lcall
inc
push
xchg
lcall
adc
sahf
adc
cmp
inc
into
popa
enter
sub
adc
outsl
fcoml
push
subl
loopne
repz
pop
add
inc
xor
adc
push
cmp
push
jge
in
adc
or
mov
xor
sub
adc
ret
test
cmp
xchg
leave
aam
and
sbb
in
insb
push
in
rolb
cmp
mov
mov
arpl
lret
mov
loopne
pop
mov
leave
mov
es
jae
xchg
add
pop
enter
fdivs
in
pop
dec
fs
test
xor
xor
xchg
jo
dec
loop
mov
lret
sub
mov
xchg
dec
or
cltd
jb
out
sub
sbb
push
sbb
rorb
push
cmpsb
js
fimull
sahf
or
sbb
mov
shlb
lcall
jnp
repnz
and
sbb
int
mov
mov
pop
xor
pusha
add
sbb
pop
add
jo
mov
dec
cwtl
or
sbb
test
sbb
jnp
jne
pushf
jb
sbb
test
cmp
or
jl
xor
out
xor
and
dec
mov
lods
das
inc
adc
ret
lcall
repz
mov
mov
jne
rcrl
cmp
and
push
jae
push
addr16
xchg
es
adc
or
hlt
sahf
xor
sub
and
inc
cmc
fmuls
jle
xor
and
shlb
xchg
xor
loop
xor
push
jae
enter
xor
add
cmp
mov
cmp
sub
bound
leave
inc
or
negb
xchg
push
sbb
data16
rcll
insl
loope
or
ljmp
sub
mov
jno
pop
popf
insb
add
cmpsl
stos
call
js
daa
hlt
adc
or
sub
mov
and
and
or
or
adc
adc
rolb
scas
fisttpll
out
add
fstps
jnp
outsb
or
add
lds
cld
mov
subb
push
jb
sarl
xchg
cmpsb
pop
js
loop
mov
push
and
push
cmp
add
xor
dec
jmp
jno
lcall
mov
adc
inc
push
mov
sbb
lcall
push
addr16
inc
mov
sbb
xor
and
ret
xorl
add
in
push
or
mov
out
shl
jbe
xor
dec
cmp
and
in
sbb
fld
jmp
or
test
dec
addb
movsl
and
in
inc
cwtl
dec
xor
push
sub
xor
push
aaa
addr16
mov
pushf
popf
in
cmp
int
int3
out
add
sbb
or
push
scas
inc
fs
test
int
or
sbb
ret
sub
iret
mov
test
and
dec
int
aaa
mov
dec
mov
dec
pop
dec
mov
pop
xchg
adc
cmp
int
add
cld
mov
fldt
or
cmp
xchg
mov
fmul
xchg
int
sar
sbb
pop
inc
daa
push
mov
pusha
ret
push
add
test
xchg
test
aam
mov
push
xorps
sbbl
lcall
pushf
push
adc
mov
stc
jb
lret
mov
xchg
lahf
push
dec
rorl
adc
and
rcrb
call
adc
js
jns
lret
sub
testl
or
out
push
int3
imul
cmp
popa
push
subl
fs
push
lea
lret
pop
xchg
mov
pusha
push
cmp
mov
aam
int
xlat
dec
cmpsb
shl
push
sahf
add
mov
push
xchg
inc
push
out
add
addl
lds
push
sbbl
fcoml
test
shlb
testl
in
fbld
add
inc
insl
push
orb
or
dec
scas
ret
jno
rcrl
scas
subl
movsl
loop
ja
dec
push
dec
rorb
ret
jne
mov
mov
ret
stc
subb
cs
sbb
loop
sbbb
xchg
jb
xchg
mov
scas
icebp
stos
mov
js
outsb
sub
cmpsl
scas
and
jbe
xor
in
cld
subl
fcoms
sbb
push
test
inc
xor
test
inc
pop
arpl
push
push
jo,pn
icebp
ficoml
cmp
pop
popa
push
addr16
lods
int
xor
adc
data16
sbb
int
addl
or
sub
inc
push
sub
rclb
aam
sahf
and
stos
inc
sbb
ljmp
ret
xchg
scas
and
jle
lret
or
jg
rorl
test
ljmp
adc
adc
or
xor
enter
xor
sbb
mov
sub
jle
ss
push
add
sub
inc
mov
adc
imul
xor
mov
push
loop
daa
pop
add
inc
sbb
int3
imul
ds
cli
sub
outsb
push
cld
jle
cmp
cmp
mov
push
es
fcoms
or
add
xor
add
lock
xor
test
mov
jmp
aas
call
push
sbb
push
out
jne
push
and
lcall
push
add
leave
cmpsl
or
andl
loope
pusha
loopne
xlat
mov
inc
lds
push
push
xchg
stos
pop
mov
rclb
and
mov
in
or
ret
inc
cmp
add
scas
push
lcall
popa
fcompl
sub
push
mov
lret
and
es
xchg
aad
add
test
adc
mov
daa
cwtl
add
test
cwtl
dec
lods
push
das
xor
lcall
or
add
fsts
in
cmp
ljmp
push
adc
repnz
mov
aas
popa
xchg
or
sbb
push
int
add
push
pop
sahf
cmp
mov
fisubl
enter
push
add
std
rclb
pop
push
xor
dec
and
push
cmpsb
inc
mov
stos
xor
fcmovb
cli
fistpll
jg
fiaddl
xchg
xorb
jb
push
push
cmp
aam
fimuls
sarl
mov
push
loopne
xor
xchg
mov
lcall
or
test
and
adc
in
dec
es
lcall
or
add
pop
int
jl
push
into
test
decl
sbb
dec
push
push
cmp
out
stc
add
loop
loopne
pop
inc
xchg
fnsave
xor
cwtl
lret
mov
test
cmp
aaa
mov
jne
or
test
xchg
add
xor
sbb
enter
mov
or
sahf
mov
loop
sub
pop
pop
xchg
xlat
dec
std
in
xchg
push
loope
push
jae
icebp
mov
out
or
lods
push
cmc
sti
je
sbb
lret
lret
loope
rcrb
addr16
jo
cmp
add
lock
push
and
in
mov
lods
sbb
inc
aaa
mov
int
fmull
sahf
rclb
scas
pop
xchg
in
pushf
dec
inc
leave
add
loop
jp
mov
rcrl
stos
push
sbb
aam
mov
jp
fcoml
andl
add
subb
adcb
loope
into
movsb
push
sbbb
aaa
int
dec
fisubrl
in
xchg
pop
xor
sub
rol
inc
add
lds
push
cwtl
xor
jo
test
fmuls
lods
push
push
and
add
pop
jp
call
pop
pop
dec
sbb
push
xor
sbb
das
scas
aaa
xlat
xor
rclb
popa
mov
dec
int
or
sub
jle
mov
cmp
inc
and
mov
in
or
rclb
nop
andl
lret
cmc
outsl
or
sub
cmp
loopne
and
repnz
ficoms
xchg
mov
lret
xor
lock
xor
test
sbb
inc
bound
test
add
out
push
dec
mov
adc
fwait
push
or
loope
stos
adc
ljmp
cs
adc
cmpb
add
push
push
sbb
test
dec
iret
or
cmp
add
dec
adc
je
je
or
push
popa
cmp
icebp
mov
or
sbb
adc
xchg
leave
add
push
imul
sub
and
cmp
mov
xlat
dec
hlt
mov
sbb
cmp
adc
rcrb
or
cmp
lret
xor
xchg
push
out
loope
adc
push
inc
sbb
push
jmp
sbb
mov
mov
jo
pop
cmpsl
and
adc
je
lock
push
jae
jb
loop
out
test
or
and
mov
sub
sub
push
mov
inc
aas
adc
jo
loopne
lret
and
loopne
int
mov
enter
or
mov
add
inc
push
mov
lea
lea
xchg
add
mov
cmp
cmp
test
jle
cmpsb
or
test
mov
into
ljmp
mov
xchg
out
enter
mov
stos
xor
inc
addr16
addb
jmp
add
xor
dec
cmp
sub
scas
jne
add
push
fdivl
cmp
shll
or
xchg
insl
mov
lret
daa
dec
or
movl
pop
lret
mov
and
inc
xlat
push
enter
pop
out
pusha
push
add
dec
mov
je
mov
mov
xchg
pop
mov
adcb
mov
adc
js
xchg
mov
push
xor
mov
and
pop
jb
daa
xorb
pop
ds
movsl
add
in
sbb
pop
fs
stos
or
xlat
sahf
test
sbb
xor
cmp
lcall
xchg
lock
sbb
hlt
jo
jg
sub
mov
dec
aaa
add
mov
jge
lret
cmp
out
gs
cmp
push
or
mov
sub
call
icebp
jns
aas
call
sbb
andb
add
es
inc
sub
jno
jl
jle
xlat
push
inc
inc
mov
in
push
loope
xchg
and
push
xchg
and
adc
addl
add
push
or
adc
push
push
lcall
dec
push
xor
xor
add
push
push
sbbl
sub
mov
push
stos
cmp
and
xchg
or
and
sbb
pop
cmpsb
es
aaa
push
loopne
int
orl
fcoml
sahf
jmp
stos
pop
leave
cwtl
aaa
enter
xchg
xor
lods
add
mov
xor
and
out
lcall
and
mov
sbb
insb
mov
xchg
out
scas
loopne
ror
cltd
inc
pop
push
mov
hlt
rclb
in
into
in
jg
pop
mov
daa
adc
add
adc
aas
shl
adcb
push
xor
sub
pop
push
xlat
mov
or
jo
pop
jae
mov
addb
sbb
jnp
xor
xchg
and
scas
pop
push
or
cmp
push
jp
test
insb
push
sub
cmc
inc
sbb
mov
je
jecxz
enter
ds
mov
xor
cwtl
sbb
push
push
out
mov
fucompp
aam
int
mov
sub
or
pop
and
xchg
repnz
adc
mov
push
mov
sub
or
push
jb
inc
pop
sbb
test
add
or
mov
add
mov
lcall
adc
xor
cmp
mov
popa
adcb
inc
inc
sbb
int3
or
push
pushf
push
lret
rcrl
jp
or
stos
xchg
dec
cltd
sub
add
lods
test
xchg
movsl
adc
dec
scas
dec
jmp
js
repnz
jns
clc
adc
sub
push
mov
push
sbb
icebp
push
les
testb
xor
cmpl
and
or
push
add
ret
jle
inc
ss
sbb
movsb
cwtl
test
or
jmp
jb
pop
sub
pop
idivb
lcall
and
cmp
cmpsb
lcall
mov
or
xor
lcall
hlt
rcrb
sbb
jo
gs
jp
and
xor
ret
and
orb
adc
inc
cmp
add
cs
mov
repz
aam
subl
dec
xchg
xchg
into
mov
dec
fsubr
push
je
push
xor
sahf
adc
xchg
add
or
pop
lods
repz
pop
xchg
push
dec
loopne
and
mov
pop
jae
cs
add
iret
cs
xchg
imul
ds
fldcw
ja
cmp
outsb
bound
add
pop
fs
popa
xor
int3
ret
sbb
scas
inc
cmp
mov
pop
je
or
or
sub
adc
fwait
or
cmpsb
pop
sub
mov
inc
push
inc
pop
xor
cltd
sarl
pop
aad
or
rclb
add
movsl
movsb
sub
inc
sub
inc
es
cmpb
mov
adc
push
jge
add
jnp
sahf
inc
mov
and
mov
xchg
in
mov
loop
cmpsl
push
sub
inc
dec
inc
flds
sbb
sub
sub
addr16
stos
add
popa
dec
xchg
mov
popf
test
push
addr16
mov
lods
pop
scas
push
adc
loop
mov
pop
and
xor
xor
clc
es
sbb
mov
pushf
push
jb
fs
add
cmpsb
test
test
pop
push
inc
push
in
pcmpeqb
dec
lret
mov
adc
sbb
popf
imul
push
sub
jg
cs
cs
mov
dec
rorb
xor
fs
sahf
mov
pop
fists
push
lret
es
daa
push
xchg
stos
fimuls
push
test
pop
cli
sbb
pop
das
or
adc
push
xchg
cwtl
xchg
out
ret
xor
xchg
stos
xor
faddl
leave
sbb
in
mov
out
or
mov
xchg
lret
shll
xadd
pop
push
add
xchg
mov
leave
sub
and
pop
cld
cmp
cld
dec
shrb
adc
sbb
insb
loop
mov
push
jae
insb
aas
add
and
pop
fsubs
loopne
out
push
hlt
leave
add
in
and
pop
test
cmc
xor
push
add
xor
je
sbb
sub
es
push
push
push
in
aam
mov
ret
pusha
sub
inc
adc
faddl
xchg
outsb
stos
pop
aam
mov
cwtl
ret
addl
popf
push
ret
fistpl
sub
adc
inc
mov
movsb
loop
push
cmp
hlt
mov
sbbl
sbb
or
jecxz
addl
mov
xor
inc
xor
cwtl
dec
inc
or
scas
mov
loope
cli
rep
nop
jnp
push
sahf
xor
sbb
lock
xor
lods
xor
pop
rolb
test
lock
jb
sub
pop
sbb
lret
xchg
adc
push
popa
xchg
shr
dec
adc
fs
cs
call
inc
jo
cs
add
jb
andl
out
cmp
xor
adc
aaa
cltd
shlb
loopne
ret
inc
or
mull
mov
rolb
mov
jns
jmp
int3
sbb
pop
push
imul
add
std
stos
pop
inc
xor
sub
sbb
xor
sbb
test
xor
icebp
dec
fwait
and
push
sbb
loopne
stos
pushl
inc
fdivrs
push
cmpb
push
and
or
mov
push
push
adc
mov
or
lods
fists
mov
ljmp
outsb
mov
sub
add
dec
inc
je
cmp
sbbb
sbb
xor
jnp
push
rcrb
add
xor
jno
push
adc
push
push
mov
enter
loop
into
adc
adc
add
push
mov
cmp
leave
jae
sbb
mov
ljmp
rorl
pop
or
stos
mull
adc
mov
sbb
fsubs
mov
add
les
sbb
lcall
sbb
push
test
dec
sub
add
pop
stos
mov
or
sbb
mov
cmp
sub
jb
lret
scas
push
mov
jno
mov
mov
ja
sbb
or
push
or
dec
sub
pusha
adc
fdivr
aas
sbb
adc
dec
jne
push
push
sbb
inc
fstpl
sbb
and
push
cld
mov
adc
les
sub
inc
sub
dec
ljmp
xchg
or
data16
aaa
ljmp
sbb
repnz
lret
popa
fldcw
or
add
fs
add
outsl
inc
push
mov
inc
mov
push
push
js
inc
movsb
fld
xchg
sub
dec
mov
mov
mov
or
mov
subl
sbbb
insb
jno
mov
add
add
stos
add
push
mov
sbb
imul
dec
std
push
cs
xchg
test
clc
add
pushf
cmp
faddl
fsubrs
sbb
lds
imull
add
pop
inc
sahf
cli
push
xchg
inc
test
sbb
push
jns
lds
push
adc
cmc
dec
aam
enter
testl
fiadds
pop
pop
jmp
ljmp
call
mov
push
add
lret
add
jb
push
add
es
and
xor
jp
adc
push
std
test
loopne
dec
inc
out
fldl2e
sub
es
test
loopne
sub
xor
sbb
enter
adc
push
pop
sub
test
mov
imull
popa
rcr
lds
inc
add
loopne
push
push
or
rcl
in
jno
sbb
mov
cmp
int
adc
adc
leave
and
cmp
jbe
mov
mov
inc
cmp
cltd
aad
mov
das
sbb
inc
inc
cmp
dec
add
inc
sub
dec
dec
xor
in
scas
mov
fnstsw
cmp
xor
lcall
xor
jo
loopne
test
dec
rclb
mov
or
andb
push
fstpl
mov
mov
add
push
inc
mov
insl
adc
mov
xor
subb
or
xor
add
outsb
push
adc
or
arpl
pushf
jge
clc
popf
xor
push
in
in
cmp
xor
push
inc
or
sub
sub
jo
sub
inc
jecxz
mov
mov
and
fidivl
or
cmp
notl
and
push
mov
ss
xor
push
gs
sbb
push
cmp
adc
insl
add
adc
leave
cmp
arpl
cltd
into
push
dec
push
sub
pushf
push
adc
fcmovnu
pop
in
subb
xor
fucomip
xor
xor
rcll
clc
pop
inc
call
addr16
insb
lock
rcrb
je
xchg
sbb
mov
add
int
push
sbbb
mov
sbb
cwtl
mov
je
sbb
mov
push
adc
mov
testb
ret
adc
add
or
add
shrb
push
pop
push
lock
pop
xchg
and
and
outsl
add
shlb
pop
push
add
and
xchg
inc
push
stc
push
xor
inc
mov
jbe
push
adc
inc
fimuls
inc
lea
loopne
lcall
cltd
dec
out
xor
lods
add
imul
and
or
cwtl
ds
xor
xchg
xor
xor
pop
clc
imul
xor
ffree
xchg
subl
mov
or
lcall
stos
cmp
stos
and
pop
pop
pop
xor
push
mov
push
xchg
scas
imull
xor
mov
pusha
inc
push
mov
mov
insl
les
adc
xor
xor
mov
mov
xchg
ljmp
loope
lods
xchg
push
mov
sub
sti
adc
dec
mov
add
add
mov
lea
subb
and
outsl
xchg
popa
push
adc
scas
or
mov
loop
cltd
sbb
sahf
fldt
jp
insb
sub
push
test
fsubrl
mov
mulb
jge
pop
loope
add
orl
mov
adc
rorl
test
xorb
scas
jb
aam
lret
rcl
rcll
pop
imul
insl
pop
push
push
movsl
rclb
stos
sbb
and
movsb
or
push
add
mov
cmp
nop
test
lret
in
lods
inc
add
inc
test
test
aad
aam
fistps
cmpsl
and
loope
lret
imul
add
enter
mov
sbb
fsubl
fcmove
inc
mov
xchg
int3
addr16
sub
mov
adc
cmp
scas
pusha
mov
divl
ss
lods
mov
insb
sub
push
sbb
jg
push
es
sbb
mov
push
sbb
inc
inc
lret
sbb
or
and
ds
add
lahf
arpl
movsb
jno
aam
sub
dec
andl
das
or
aad
movsb
sub
lock
call
test
call
pusha
mov
xor
adc
fwait
stos
ret
adc
push
stos
cmp
int3
movsb
jl
pop
sbb
jp
mov
push
mov
in
push
jbe
mov
ja
xchg
in
decl
mov
or
push
pop
ljmp
pushf
inc
push
xchg
test
xchg
cltd
insb
ljmp
nop
jno
sbb
into
gs
mov
push
push
cmpsb
ret
loop
cmp
cmp
mov
or
sub
push
adc
lret
lods
and
mov
rcl
mov
in
xor
inc
imul
inc
xor
test
movsb
jno
loopne
sbb
fwait
sarb
xchg
pop
mov
or
add
lods
sahf
mov
xor
jl
pop
add
lock
cwtl
ror
pop
add
out
cmp
and
jne
lcall
aam
sub
or
mov
xchg
adc
popa
test
pop
jns
rcll
and
xor
cmp
inc
inc
shrb
imul
ret
and
aam
dec
in
push
rorl
stos
mov
loope
add
add
icebp
and
nop
and
mov
mov
cmpsl
daa
pop
rol
mov
dec
in
cmp
rol
scas
ljmpw
push
stos
sbb
push
into
pop
scas
jne
pop
cmpsb
ja
out
or
or
push
add
in
icebp
adc
jg
imul
mov
dec
adc
jg
mov
mov
cmp
clc
incl
pop
sarb
inc
imul
push
xchg
add
cmp
test
sub
push
pop
popa
push
icebp
push
loop
jge
mov
daa
inc
ret
jo
les
xor
scas
adc
out
push
xchg
push
push
dec
jmp
push
ret
pop
in
xlat
or
xorl
pop
cli
dec
movsb
push
scas
stos
push
mov
mov
cwtl
push
or
mov
pop
adc
adcb
sub
andl
addl
fisubrl
jo
inc
test
pop
out
push
pusha
inc
mov
hlt
add
inc
stos
aas
cwtl
cmp
clc
sub
jp
push
dec
fs
push
repnz
es
inc
pop
add
cmp
aas
and
rcrl
mov
mov
mov
add
add
adc
push
and
xchg
jnp
xor
xor
and
stos
sub
inc
cwtl
sahf
scas
mov
shll
or
xchg
mov
push
or
jle
jmp
jo
sub
test
push
arpl
loop
mov
ret
push
sahf
xchg
sbb
mov
inc
add
pop
mov
pop
jl
inc
sahf
xorb
loopne
aad
idivl
xor
add
sub
push
pop
or
adc
loope
rcr
and
lock
or
orl
ficomps
out
jo
sub
lcall
ret
pop
lahf
sarl
lcall
xchg
jb
dec
cmp
push
adc
lret
addl
push
inc
je
mov
and
pop
scas
jb
cmp
xchg
dec
aad
fs
popa
xchg
lahf
push
push
xor
sub
mov
push
sub
dec
jo
push
cmp
sbb
fnstenv
loopne
push
iret
xor
mov
mov
push
mov
jne
mov
roll
cmp
es
in
mov
add
inc
jae
gs
pop
sbb
cmp
mov
addl
mov
jle
ror
jg
push
or
pop
adc
sbb
sub
add
or
aam
sbb
xor
jbe
dec
out
mov
lods
loope
jo
lds
pop
jae
dec
inc
fstpt
scas
xchg
cmp
jbe
fsubrl
inc
movsl
jb
cmp
into
loopne
fstl
ds
shl
pop
jae
push
dec
or
xor
push
int
mov
rcrb
or
mov
add
mov
push
sbb
test
sbb
push
and
shl
add
imul
inc
stc
popl
push
adc
push
adc
in
mov
sbb
pop
ds
call
sar
in
pop
andb
test
cmp
sbb
loope
icebp
adc
inc
inc
push
inc
add
insl
dec
in
shl
loope
movsb
es
mov
mov
dec
out
loopne
push
xor
push
int3
xor
ret
popa
push
jb
movl
mov
cmpsb
in
clc
sbbl
jne
lods
pop
in
pushl
push
cs
shr
hlt
add
push
lcall
pop
scas
cmp
push
push
pop
mov
push
shll
out
xor
push
call
xchg
outsb
insl
rorl
cmp
adc
out
jo
sbbl
push
push
mov
xlat
push
jb
cmpsb
or
test
dec
sbbl
push
pop
add
js
popf
adc
rcl
push
loop
mov
cs
lcall
cmp
fnsave
xchg
jmp
add
xchg
add
mov
or
lea
adc
sub
mov
divb
cmp
icebp
jae
xlat
inc
dec
imul
or
test
lret
xchg
mov
jae
pop
or
sub
mov
and
ljmp
push
sahf
pop
adc
icebp
xor
ljmp
sbb
push
aad
nop
push
test
lahf
cmp
jg
mov
mov
mov
ja
mov
ljmp
orb
mov
dec
push
xor
ljmp
adc
cwtl
jg
cmpsb
subb
ret
shll
or
push
xlat
jb
ss
jae
cld
mov
sbb
aas
or
xchg
in
out
lret
jnp
mov
and
or
xor
cmc
rcl
mov
leave
cmp
lret
aad
sahf
pop
pusha
test
jns
mov
out
mov
cmp
cmp
add
int3
mov
rcl
lret
loop
lcall
rclb
pusha
xor
add
sbb
jae
xchg
xor
add
dec
mov
imul
xchg
push
or
ss
mov
lret
dec
in
jae
adc
mov
xchg
loope
push
xor
xchg
stos
fadd
xor
stos
call
addr16
pushf
stos
daa
addr16
mov
push
testb
fs
adcb
lods
test
or
vprotw
fisubs
movsb
dec
sbbl
es
sub
pop
adcb
mov
ljmp
stos
adc
add
push
cs
sahf
xchg
rolb
add
aaa
aam
in
pusha
enter
enter
cmp
pop
cwtl
push
jne
xchg
jae
add
or
in
popf
cmpl
adc
cmp
push
adc
push
sbb
xchg
dec
out
daa
or
push
andb
hlt
rclb
push
xchg
sub
lock
loop
sbb
or
jp
xor
push
inc
ret
push
cwtl
js
cmp
loop
lcall
xchg
or
xorb
lcall
stos
jo
jb
jbe
in
or
movsl
mov
mov
add
jmp
cmp
das
shr
leave
add
pop
sar
add
inc
fsubrl
cmc
test
xor
mov
inc
loope
xchg
mov
xchg
mov
mov
inc
push
push
lcall
sti
jne
jno
add
mov
int3
testl
lahf
ds
xor
push
push
pop
test
mov
adc
jne
push
adc
mov
dec
loopne
xorb
add
inc
push
or
and
xchg
mov
orb
scas
and
aas
xchg
cs
pop
xor
sub
lods
popa
and
orl
mov
xchg
aas
mov
ljmp
add
aam
add
inc
pusha
lret
jecxz
outsl
repnz
xor
fnstsw
cmp
faddl
inc
scas
inc
push
enter
outsl
sbb
movsl
jb
rcll
pop
ret
mov
jb
mov
aad
lds
adc
xor
xor
jno
roll
pop
add
xchg
rclb
lcall
pop
testl
iret
sub
mov
cli
inc
test
leave
andb
ds
shlb
cld
insl
mull
add
pusha
mov
loopne
push
xor
add
jae
adc
pop
mov
add
lods
mov
addr16
int
das
mov
sbb
in
fmull
lcall
xlat
push
scas
pusha
cmp
xorl
data16
or
push
or
cmpsl
pop
or
and
lret
cmp
push
loope
add
xor
inc
push
xor
es
aad
cmp
addr16
sbb
ret
push
jno
push
jae
and
pop
push
mov
pop
lods
push
xor
loope
jo
mov
inc
mov
pop
inc
cmp
enter
out
cld
add
jmp
rcll
addr16
dec
stos
hlt
cmpsb
mov
sbb
cmp
cli
loopne
mov
push
in
enter
add
jbe
pop
jp
out
orl
inc
add
stc
xchg
fwait
imul
fsubs
lret
lods
addr16
sahf
pusha
sahf
xor
repz
dec
loopne
cmpsl
sbb
icebp
lret
mov
fwait
dec
cltd
push
addl
sub
xor
ljmp
and
mov
pusha
ret
pop
push
add
shlb
adc
rorb
push
push
mov
popa
pusha
jecxz
loopne
push
pop
daa
cltd
and
xchg
cmp
mov
sbb
pop
push
inc
xor
rcrb
cmpsb
dec
loope
test
sti
lret
sub
and
adcl
in
mov
jne
cmp
push
and
xchg
xchg
pop
loope
adc
or
addr16
cs
mov
fwait
pop
xchg
xor
addl
sub
xchg
dec
lock
sti
push
cltd
cmp
sbb
jo
pushf
push
mov
and
push
xchg
cmpsl
clc
nop
jg
scas
sbb
and
fs
hlt
mov
inc
aas
jmp
or
jo
jb
jns
sarb
nop/reserved
push
mov
xchg
and
add
das
pop
add
inc
xor
cltd
addl
loopne
sub
mov
out
es
push
cs
pop
int
or
pop
xchg
and
les
jns
ljmp
push
push
xchg
call
sbb
jne
push
lret
mov
adc
push
xchg
jne
lret
sahf
or
rol
push
push
lock
pop
push
inc
mov
push
or
dec
aas
sub
and
hlt
mov
out
cs
in
roll
jbe
movsl
xlat
mov
mov
jne
and
es
pushf
mov
loop
stos
xor
movsl
jno
pop
mov
jecxz
xor
pop
and
decl
shl
add
adc
adcb
aad
pop
add
outsb
xor
jbe
arpl
cmp
popa
add
mov
mov
sbb
shll
dec
lret
out
dec
xor
xchg
sub
je
and
mov
inc
jnp
test
scas
add
sahf
cmp
or
data16
dec
rolb
movsl
ret
pop
pop
push
in
loopne
daa
mulb
inc
imul
aas
inc
fimull
push
and
lret
aam
aad
fcmovu
pop
outsl
inc
cltd
jp
adc
adc
pop
pop
lods
pusha
push
mov
push
push
push
cwtl
dec
push
add
mov
mov
cwtl
testl
loop
mov
test
jne
mov
nop
jecxz
inc
mov
mov
mov
lret
mov
pop
pop
sub
mov
push
cltd
cmp
dec
js
stos
lcall
sbb
xor
cmpsl
add
out
iret
cmp
mov
std
push
fidivs
inc
outsb
sbb
adc
or
mov
inc
ret
push
xchg
adc
sbb
adc
pop
in
stos
sub
fldt
and
add
adc
outsb
xchg
and
cltd
das
loop
add
or
xchg
es
jnp
aam
ret
lret
or
cwtl
out
movsb
jne
push
push
push
adc
pop
sub
orl
enter
jmp
leave
push
sub
test
loop
push
mov
addl
or
inc
add
test
stos
loop
or
cmpsb
ret
xor
push
dec
aaa
add
pop
rcrl
add
cwtl
fs
dec
or
mov
sahf
loopne
sbb
mov
add
cwtl
into
out
pusha
test
lods
rorl
addr16
jl
lret
and
gs
adc
inc
scas
mov
and
xchg
loopne
in
or
loope
or
icebp
push
xor
xchg
mov
jle
cmp
gs
mov
add
addr16
scas
push
jb
mov
fwait
mov
pop
call
add
dec
into
rorb
mov
pop
and
fnstsw
push
xorb
and
cltd
aas
sar
adc
xor
xor
sub
lock
ficoml
and
loopne
pop
movl
sbb
incb
cltd
and
inc
rcll
loopne
inc
mov
lcall
fs
es
xor
jo
adcb
push
aam
sub
lea
xchg
push
das
sarb
pop
sbb
pusha
inc
mov
dec
mov
xchg
xor
dec
mov
and
addl
mov
pop
nop
leave
mov
sbbb
subb
mov
push
imul
or
enter
inc
mov
test
push
sbb
insb
aad
sub
or
stos
jo
add
dec
in
jne
ret
push
xor
cmpsb
push
cwtl
sub
pop
in
ss
fsts
xor
inc
push
push
sbb
rorl
add
jbe
mov
or
aas
sub
stos
jbe
icebp
sub
or
adc
add
stos
jle
adc
dec
scas
jg
iret
std
or
jb
xor
or
mov
push
push
imul
stos
cmpsl
repnz
sub
jg
roll
cmp
push
ret
inc
cld
negb
xchg
lcall
push
add
inc
pop
loopne
push
mov
sbb
jno
pushf
and
inc
cld
cmp
sti
push
cmp
into
dec
push
ds
and
push
mov
mov
lock
lret
push
sbb
cmp
xchg
mov
mov
dec
mov
cmp
jno
addl
imul
xchg
ret
aam
add
and
orb
js
cwtl
inc
pop
test
cld
rorb
pop
andb
stc
jno
add
and
mov
dec
mov
add
in
xor
pop
and
xchg
xchg
jecxz
xor
sbb
sbb
sbb
sbb
sar
loopne
inc
in
or
xchg
loop
xorl
xor
adc
fcomps
add
inc
sti
filds
xor
mov
adc
jo
xor
adc
scas
mov
stos
jecxz
add
clc
mov
cmovne
mov
add
ljmp
insb
or
dec
lods
in
push
aad
call
dec
mov
inc
dec
mov
adc
inc
rcll
mov
lods
push
mov
adc
sahf
sbb
jecxz
das
testb
push
mov
mov
movsb
xchg
cmc
cltd
js
inc
add
das
rclb
cmp
xchg
mov
inc
sahf
sbb
test
lret
loopne
xor
push
inc
add
pop
pushf
daa
push
out
popa
ljmp
add
adc
add
int
lods
pop
cmp
cmp
and
ret
and
movsl
mov
add
inc
into
cltd
mov
daa
or
xor
es
or
mov
shll
outsb
dec
int
in
das
sarl
out
rcrl
pop
adc
xor
adcb
out
pop
lock
pop
xor
fs
jo
sbbb
adc
cmp
sub
gs
jb
test
jb
rcrb
xchg
adc
rolb
or
subb
stos
rolb
add
jno
sbb
xor
pop
sub
mov
sbb
int3
sub
sub
pop
shll
mov
imul
int3
mov
adc
cltd
bound
test
push
lock
sbb
mov
inc
aas
pop
testl
pop
shrl
or
mull
pop
add
jnp
stos
pop
pop
add
leave
xorb
inc
lock
dec
call
cmc
fistps
lcall
adc
xor
pop
fistl
pushf
inc
xor
pop
ret
xor
xor
push
subl
sbb
repz
je
stc
mov
pop
repnz
lret
sub
ret
push
out
jb
dec
xor
mov
ss
inc
es
cs
dec
inc
and
xor
mov
xchg
movsl
enter
cs
aaa
xchg
xor
push
jl
jno
inc
add
loopne
mov
jae
sbb
ret
test
stos
fs
loope
dec
inc
push
or
out
jo
mov
fcoml
mov
jno
sbb
push
dec
sub
je
xor
mov
pop
nop
mov
push
loope
xor
outsl
sub
scas
push
ret
add
xchg
mov
inc
inc
scas
push
xchg
pop
and
dec
mov
xorl
or
sarl
inc
scas
mov
inc
add
enter
mov
lcall
xor
add
dec
xchg
add
push
rolb
push
dec
add
mov
mov
addr16
jg
fsubl
in
lret
jle
inc
orl
ret
push
das
cmc
ljmp
and
insl
push
or
sbb
es
jae
mov
es
mov
fildll
xor
jecxz
in
gs
roll
js
xchg
or
mov
adc
mov
push
popa
test
inc
cmp
adc
repz
sub
mov
shrb
or
subb
rclb
insb
orl
ret
ficoml
or
add
in
xchg
iret
pop
inc
jae
nop
add
repnz
or
and
push
add
adc
inc
roll
mov
jmp
mov
mov
inc
sbb
sub
jo
jecxz
mov
ja
pop
push
mov
into
adc
mov
mov
pop
les
add
sub
movsl
adc
add
orl
jecxz
inc
testb
lds
mov
sbb
sbb
push
sbb
xchg
lahf
inc
mov
clc
push
mov
or
add
inc
mov
add
lahf
ret
outsl
add
add
rcrb
and
mov
push
mov
add
lret
ss
popl
gs
lods
add
rclb
incl
loopne
or
push
sub
cmp
mov
mov
inc
mov
mov
lahf
adcb
mov
rolb
add
jae
push
std
decb
popa
push
add
jae
jp
cld
mov
push
andl
push
sub
push
sbb
cmpl
test
or
xor
cwtl
pop
jns
jns
sub
mov
sub
insb
ja
ret
jb
repz
test
sbb
mov
cmp
or
jb
pop
rorl
xorb
pusha
lret
push
add
adc
inc
add
mov
dec
lea
xchg
lret
add
add
dec
mov
sbb
mov
add
push
mov
inc
scas
push
or
shlb
inc
scas
sbb
or
and
cmp
sub
sarb
push
movsb
cmp
push
into
adc
xor
inc
repnz
xor
pop
mov
inc
mov
pushf
mov
outsl
rol
sbb
sub
dec
add
lea
inc
les
sub
xchg
pop
inc
and
dec
mov
movsb
inc
cwtl
dec
test
loope
inc
int3
mov
cmpl
sahf
sub
mov
and
inc
in
adcb
repz
mov
xorb
pushf
xor
cwtl
fcoms
inc
add
mov
inc
out
pop
scas
push
mov
es
push
push
stos
push
test
shl
out
jno
sbb
xchg
outsb
insl
inc
cwtl
add
jns
fldenv
pop
add
push
inc
xchg
jg
into
inc
mov
or
and
sub
cmc
mov
or
push
int3
push
and
push
lret
mov
lfs
push
mov
into
cmpl
and
fiaddl
jae
mov
push
push
pusha
test
or
stos
ljmp
jae
insb
mov
jb
test
test
pop
in
inc
sub
lcall
push
fwait
mov
or
ja
rclb
fucom
mov
jp
leave
inc
xchg
andb
test
stos
icebp
sbb
ljmp
shl
dec
shl
cmpsl
jno
test
test
sbb
sbb
push
cwtl
or
jnp
sbb
pop
lcall
dec
sbb
xchg
andl
add
inc
inc
cmp
orb
add
rcl
or
or
xchg
or
adc
cli
pop
in
push
adc
sub
and
dec
int
out
arpl
cmp
inc
imul
mov
push
push
xor
addr16
sub
mov
aad
and
push
dec
push
pop
scas
adc
mov
or
push
mov
ret
pop
mov
test
push
sbb
fistpl
sahf
rcll
lahf
sub
test
dec
xor
jp
and
lds
mov
dec
push
push
mov
pusha
inc
xor
pop
sysexit
pop
or
stos
mov
sarb
ret
add
js
rorb
clc
lret
inc
mov
adc
sti
fs
mov
imul
mov
push
push
push
adc
or
jp
xchg
sbb
add
add
push
shll
dec
sbb
sbb
pop
roll
aaa
loopne
add
icebp
add
mov
cmpl
lods
xchg
jmp
imul
push
mov
nop
xor
repnz
stos
pop
sub
test
out
xchg
andl
rolb
cltd
jecxz
sub
test
pop
adc
mov
push
cmp
adc
xchg
mov
mov
ret
mov
inc
cmp
dec
ret
xor
test
test
adc
rolb
popa
add
push
lds
enter
jg
call
mov
push
out
test
push
or
sbb
add
jbe
inc
inc
jae
daa
movups
jo
inc
mov
mov
xor
filds
mov
mov
sbb
adcl
or
sbb
stos
xchg
leave
or
xchg
push
pushf
jmp
mov
mov
jae
jno
push
out
push
push
xor
adc
fildll
xchg
rorb
add
push
call
aaa
add
push
push
out
or
add
dec
and
cmc
sub
sub
movsb
je
clc
push
jo
aas
fucomp
cmp
stos
icebp
subb
pop
lods
push
xchg
mov
shll
push
inc
insb
nop
ret
adc
stc
or
push
push
pop
popa
sub
sbb
cmc
xor
shrb
call
hlt
rcl
cwtl
mov
mov
add
sbb
push
pop
test
mov
sbb
scas
mov
inc
int
jp
subb
inc
adc
es
je
test
push
dec
rcll
push
push
push
test
mov
sub
xchg
inc
popf
insb
push
push
nop
mov
jne
rclb
mov
inc
inc
test
add
inc
lock
cmp
ret
xor
push
xchg
lods
test
mov
or
add
inc
inc
sbb
sub
mov
inc
sbb
cmp
cwtl
sbb
sbb
in
lcall
jae
lods
negb
scas
pop
sbb
enter
push
xchg
cmp
and
mov
movb
sub
inc
pop
dec
sbb
pop
aad
ret
pop
adc
dec
insl
mov
call
or
jbe
jb
cs
push
unpckhps
fldl
shrb
pop
loopne
or
lahf
pop
push
push
inc
cmp
out
push
adcb
in
pop
scas
fs
in
adc
adc
push
mov
mov
sbb
es
inc
ret
mov
or
add
cmp
adc
jb
add
adc
add
pop
pop
mov
repnz
push
rclb
fsubrl
call
mov
addl
mov
les
push
orb
dec
idivl
subb
test
xor
inc
cmpsb
dec
xchg
sbb
into
rcrb
aaa
push
mov
stos
inc
jnp
sbb
aam
xchg
fstl
adc
andl
jle
jns
loopne
pop
je
out
sbb
ret
js
mov
xchg
inc
adc
xor
mov
das
lods
push
xlat
and
dec
mov
push
mov
jge
rclb
push
add
add
lods
js
rcll
mov
rcrb
repz
rolb
or
out
sbb
pop
inc
dec
push
fnstsw
inc
inc
mov
cld
push
ret
enter
add
cld
in
mov
imul
rolb
mov
lock
push
fcomip
ljmp
notl
iret
pop
cmp
iret
sbb
mov
mov
sbb
je
xor
inc
fs
xor
pop
andb
push
dec
mov
es
and
inc
mov
fcmovnu
and
xorl
test
hlt
jno
jp
pop
cmpsl
dec
pop
xchg
add
sub
cltd
addb
fdivs
pop
push
roll
clc
cmpsb
add
or
or
outsb
add
push
inc
sub
scas
imul
cmpsl
sarl
arpl
add
mov
out
andl
xor
lret
incb
xchg
push
mov
xlat
stos
inc
popfw
cmp
and
push
cmp
jae
movsb
xor
push
cwtl
or
out
data16
jnp
mov
mov
pop
push
orl
insl
sub
rorb
or
sbb
push
aas
rorb
in
pop
subl
add
imul
aas
jo
jmp
pusha
stos
fisttpl
bnd
inc
push
add
sbb
hlt
lret
mov
xor
pop
mov
repz
add
pushf
sub
xor
push
cmp
add
in
pop
cld
aaa
ret
mov
mov
xlat
push
xchg
mov
inc
aas
or
clc
dec
inc
sub
mov
idivb
jg
add
xchg
mov
mov
enter
test
in
shrb
test
push
push
aad
fistl
jecxz
cli
push
pushf
adcb
add
cmpsl
sub
xor
push
aam
adc
inc
jae
imull
or
mov
loope
fdivp
mov
lahf
sub
lods
push
mov
in
jle
pop
push
scas
inc
mov
sub
jne
push
out
cs
scas
xor
adc
popa
sub
inc
in
shl
pop
ja
sub
sahf
addr16
pop
jae
jg
mov
mov
sub
jp
mov
test
imul
cmp
add
mov
test
cmpps
inc
addb
mov
pushf
sub
and
mov
add
sbb
es
or
flds
enter
xor
mov
xchg
stos
jbe
adc
or
pop
lds
xlat
enter
outsl
gs
push
decb
cmp
js
cmp
adcb
das
gs
shrl
subl
mov
xor
pop
fsubrl
push
imul
jne
push
cmpl
scas
movsl
xor
aaa
lcall
push
add
pop
out
test
xor
and
out
or
sti
jno
cltd
sbb
cltd
frstor
adc
push
aad
int
leave
adc
sbb
shll
sub
xchg
mov
aas
cmp
lret
push
sub
pop
scas
sti
mov
loope
sbb
mov
pusha
xor
or
push
inc
xchg
jmp
insl
leave
push
sbb
lret
iret
add
mov
jo
test
mov
xchg
popf
in
jae
sub
cmp
lret
adc
sub
mov
pop
dec
insl
into
popa
stos
lcall
and
ds
inc
loopne
push
lahf
insb
dec
lret
xchg
scas
cmpsl
push
or
xor
cli
aas
push
xor
icebp
test
push
lea
call
rcr
mov
and
andb
and
or
cmp
mov
mov
lcall
push
rolb
push
inc
push
adc
add
cmp
stos
jecxz
sub
shll
or
push
divps
mov
inc
adc
test
xchg
xor
mov
cmpl
enter
cmpsb
xor
push
mov
sub
fs
pushf
xor
adc
dec
add
lret
rcr
xor
cmpsb
push
out
xorl
in
mov
lock
popf
push
xor
lcall
loope
cmp
sbb
dec
push
sbb
adc
fs
into
xchg
stos
and
mov
xchg
loope
xchg
fcoml
push
adc
enter
movsl
xchg
adc
sbb
into
fidivrl
repz
push
cmp
jg
aam
dec
mov
rol
mov
pop
adc
push
lock
out
pushf
repz
aam
sub
icebp
or
rcrb
lret
pop
push
jne
in
add
xor
loopne
sbb
test
gs
enter
aam
mov
aad
cmpsb
or
sbb
mull
jae
cmp
dec
xor
mov
fwait
adc
loop
cmp
mov
push
jecxz
rolb
adc
xor
push
sbbb
imul
xor
or
icebp
sbb
jne
mov
psignb
push
cmpsb
lret
dec
or
push
jae
sahf
sub
out
insb
mov
repnz
xchg
das
scas
ret
sub
mov
outsl
and
dec
push
rorl
mov
fiadds
out
inc
xor
fisttps
jne
xor
push
icebp
push
das
mov
fwait
or
and
mov
and
push
sub
dec
decl
push
aad
add
jmp
add
cmpsl
sub
insb
iret
add
lock
js
stos
xor
or
xchg
call
inc
aam
mov
push
andb
pop
push
xor
mov
in
add
xchg
jmp
scas
add
mov
jmp
push
into
in
pop
mov
cwtl
stc
inc
mov
ljmp
push
imul
adc
in
loopne
cmp
js
push
cltd
js
xchg
xor
in
rolb
jno
push
lea
xor
leave
stos
lcall
cwtl
cmc
ret
push
js
ljmp
and
sarl
and
lcall
std
dec
inc
inc
popa
mov
divb
test
pusha
push
cwtl
test
faddp
loop
inc
xor
pop
sahf
rclb
das
add
jae
or
sti
dec
sub
or
sub
mov
sahf
mov
and
lret
lock
int
xchg
jg
add
xchg
repnz
aad
adc
nop
xchg
out
inc
hlt
cmp
decl
pushf
add
add
mov
fs
pushl
sbb
inc
sbbb
add
bound
popa
xor
add
or
mov
mov
push
movsb
adc
adc
loop
dec
setno
inc
loope
and
decb
xorb
dec
adcl
add
inc
scas
rorl
nop
bswap
pushf
add
inc
das
fidivrl
stos
mov
add
adc
cs
add
popa
xor
push
fimull
in
mov
xchg
das
or
rclb
addb
push
push
addl
lds
jno
dec
iret
sub
sub
and
jb
test
loopne
inc
shll
cmc
rclb
ficoms
lahf
stos
jno
push
jmp
fistpl
enter
adc
cmpsb
push
test
test
push
pop
test
or
sub
out
pop
outsb
mov
jae
scas
inc
or
sub
xor
cld
add
cmp
out
sti
loopne
dec
cmpsb
push
ja
and
fisubrs
adc
cmp
jp
dec
xor
cmp
lahf
jp
sbb
sbbb
aad
xor
lcall
dec
adc
push
or
cs
pop
dec
cld
pop
jmp
dec
arpl
in
dec
xor
push
sahf
data16
int
scas
push
pop
pop
push
test
sbb
push
into
mov
mov
fstpt
xchg
shlb
mov
lret
add
and
and
xor
xchg
inc
dec
push
push
clc
rcll
into
fs
or
mov
push
xor
push
mov
js
mov
out
pop
xchg
enter
cltd
popa
push
or
cltd
lret
mov
mov
adc
rclb
pop
xchg
cmp
hlt
or
and
test
xchg
xor
sub
cmp
dec
jg
inc
out
mov
lcall
rolb
and
xor
cmp
loope
add
xor
test
inc
mov
mov
dec
aam
test
add
iret
fnsave
adc
sbb
and
mov
jo
outsl
ja
jno
pop
push
xorb
or
jo
sahf
nop
pop
addb
mov
inc
inc
jae
sub
adc
out
push
and
and
cmp
in
adc
push
into
in
dec
xor
push
roll
lcall
call
jo
or
mov
sub
jle
adc
add
add
es
aam
cs
imul
xor
mov
or
test
pop
fmuls
mov
xchg
addl
sbb
push
cs
mov
inc
xorl
xor
xor
rcrl
mov
push
inc
roll
jno
cwtl
dec
cwtl
or
ret
mov
push
in
es
out
or
test
dec
xor
popf
mov
pop
jb
enter
add
pop
imul
es
sub
clc
fldcw
pop
cmp
cli
or
ljmp
pop
aad
xor
sbb
xchg
adc
dec
push
add
popa
jo
and
sbb
add
popl
push
jmp
xor
lods
push
adc
add
pop
pop
jecxz
jle
addb
push
sub
inc
cltd
cmp
mulb
pop
xor
add
stos
leave
inc
aaa
adc
xor
dec
push
push
push
xor
add
jb
push
sbb
sbb
xlat
loope
xchg
push
jno
mov
jo
push
xor
adc
jb
aam
jbe
rcll
pop
xchg
cmp
jno
jb
test
sbb
sub
movsl
lret
lcall
adc
jbe
int
ret
dec
shll
xor
mov
pop
push
sub
cmp
push
cs
pushl
lret
push
notb
xor
push
and
insb
xchg
in
lds
out
mov
int
es
pushf
in
jae
jb
out
xchg
lcall
adc
jl
push
inc
xchg
repnz
sub
pop
add
inc
clc
outsl
adcl
loopne
in
dec
jo
cmp
rorl
test
xor
pop
mov
push
push
adc
mov
and
dec
mov
test
fisttpl
inc
bound
push
push
sbb
out
out
pop
mov
mov
push
rolb
imul
das
dec
mov
and
fstps
ja
mov
iret
in
jno
and
sbb
add
xor
cmp
insl
mov
lcall
test
pop
pop
mov
lret
jbe
xor
xor
cmp
sbb
push
and
push
lret
adc
and
fwait
lahf
lahf
xchg
cs
movzwl
sbb
jge
imul
and
xchg
or
xor
lret
add
stos
dec
sub
inc
lock
aam
or
cmp
inc
cmp
pop
into
ljmp
dec
lea
mov
inc
mov
push
or
dec
mov
addb
or
mov
ljmp
push
dec
test
pop
loopne
push
jge
scas
les
movsb
aam
push
dec
movsl
push
pushf
orb
or
sbb
or
pop
loop
mov
adc
cmp
cli
inc
mov
or
clc
in
mov
xor
jno
add
pop
add
push
sbb
add
pop
and
pop
mov
mov
and
lret
outsb
std
loop
mov
and
adc
add
dec
xor
inc
xchg
jg
and
add
repz
cmp
push
push
test
inc
mov
loope
push
cltd
cld
adc
add
adc
dec
jo
lret
dec
int3
cmp
and
mov
sbb
or
test
int3
sub
subl
or
popf
jb
jb
stos
push
es
arpl
dec
mov
outsb
mov
in
add
xchg
adc
test
xorb
pop
xor
aas
push
cmp
pushf
ret
push
xchg
dec
push
cmp
push
daa
mov
or
gs
rclb
dec
pushf
xor
lods
mov
inc
roll
int3
xchg
cmp
xor
mov
pop
fs
and
insb
pop
mov
push
cmp
jb
push
sub
dec
iret
mov
xchg
sbb
dec
jae
in
jg
sarb
add
sahf
inc
int
sahf
subb
inc
out
and
dec
loope
xchg
pop
push
andb
into
aam
addr16
mov
inc
xchg
lret
push
add
sahf
mov
cltd
or
lahf
xchg
mov
xor
and
shll
xchg
xor
mov
es
mov
push
add
stos
inc
mov
mov
aam
lret
or
rclb
push
adc
add
subl
test
movsl
lret
pop
mov
xor
ja
sub
loop
adcl
test
outsl
in
or
les
sti
popa
adc
add
cmpl
mov
xor
mov
cmp
idivl
dec
xchg
adc
xlat
and
loopne,pt
leave
lock
nop
mov
lea
pop
mov
xor
push
ljmp
mov
sbb
adc
push
ja
vpsrlw
inc
std
push
pop
rolb
xor
and
es
aaa
into
jbe
pop
in
sbb
iret
cmpsb
cwtl
xor
sub
pop
int3
aad
int
mull
or
xchg
and
sub
add
jo
cmp
xor
cwtl
lret
inc
xchg
jo
es
push
bound
adc
xchg
or
push
xchg
fs
js
jnp
mov
and
inc
pop
ss
cmp
pop
dec
cwtl
push
lahf
int
xchg
sub
push
push
gs
lcall
push
into
or
lcall
xchg
mov
xchg
xchg
mov
cld
out
mov
orl
xchg
ljmp
push
loopne
bound
sahf
push
cmp
xor
and
xor
pop
pop
pop
cwtl
xor
inc
mov
aam
jno
push
inc
xor
fs
push
imul
xor
cmp
mov
mov
jnp
hlt
inc
mov
xor
or
mov
mov
or
xchg
test
addl
inc
and
pushf
adc
mov
and
mov
in
sbb
and
mov
or
rcrl
xchg
imul
loopne
roll
sub
mov
enter
xchg
test
lahf
stos
sub
test
out
xchg
adc
es
jae
push
popa
jmp
or
pop
push
push
pop
add
call
es
vprotw
fxch
lds
mov
push
shl
hlt
xchg
sbb
or
jae
into
int
scas
mov
jecxz
push
push
jo
aas
aad
shll
push
mov
negl
push
inc
cwtl
mov
xlat
lcall
push
pop
mov
mov
scas
jne
or
imull
jb
adc
dec
push
inc
in
sar
jge
stc
sbbb
out
call
test
lods
jo
or
ret
inc
adc
in
inc
dec
dec
test
xchg
xorl
push
push
rclb
mov
adc
sbb
add
mov
cs
pop
mov
stos
inc
cmp
sub
loopne
mov
scas
add
or
jo
push
mov
test
dec
loope
icebp
lret
fwait
dec
cwtl
adc
stos
cmp
jb
out
add
push
xchg
stos
sbb
xor
xor
push
lods
orl
int
ret
sbb
jno
scas
lret
lods
sub
adc
lahf
dec
and
popf
jo
mov
jno
jbe
lcall
push
cmpsb
inc
mov
xchg
out
js
push
std
or
add
ja
push
xor
js
insb
loope
pushf
mov
lret
mov
pop
push
dec
outsl
shlb
incl
push
mov
push
addb
mov
nop
push
aam
push
dec
xor
add
mov
test
xor
jno
and
lahf
lret
dec
movhps
lods
lods
add
sti
cmpl
mov
xchg
mov
add
in
sub
in
nop
dec
out
adc
test
and
pusha
mov
cmp
lods
cmp
and
negl
into
inc
hlt
aas
es
scas
enter
jno,pn
jae
xor
cs
xor
mov
test
cmc
mov
out
inc
inc
pop
insb
outsb
or
rcl
and
sbbb
push
stos
pop
inc
xor
xchg
dec
jne
cmp
pop
rclb
imul
dec
cmp
sbb
lcall
das
ja
jb
push
inc
fmuls
add
ljmp
mov
orl
push
ja
pop
adc
lea
lds
call
add
rol
sbb
das
and
ljmp
aaa
sbb
push
cmp
pop
add
incl
jge
fs
cmp
pop
mov
sbb
pop
sbb
outsb
fs
cmpsb
adc
sub
hlt
sub
inc
add
lret
loop
stos
adc
and
push
stos
imul
add
orb
enter
push
sbbl
cwtl
jno
lods
fadds
pop
inc
sub
sbb
and
pushf
and
add
xchg
imul
cmc
jnp
int
xchg
stos
in
ljmp
stc
mov
xchg
mov
add
jp
cmpb
adc
mov
pop
in
callw
dec
mov
lret
add
addl
imul
gs
cs
nop
add
mov
xchg
test
fwait
subb
xor
or
sbb
pop
xor
or
and
sbb
xchg
andb
int
dec
mov
push
add
pushf
rcll
push
mov
push
inc
push
ja
add
xchg
imul
xor
adc
pop
mov
movsb
je
mov
xchg
cld
ds
andl
or
and
lock
cld
and
add
pop
or
add
lret
sub
dec
xlat
inc
mov
repnz
xor
add
sub
rclb
idiv
cmpb
rorl
cmp
cltd
fcomi
inc
sub
sbb
cs
and
in
xchg
loope
stos
adc
push
xchg
push
int
push
mov
jo
mov
inc
and
into
push
xor
sti
inc
arpl
cmpl
add
rcrb
adc
push
test
in
sbb
push
stc
daa
pop
xchg
or
mov
dec
mov
sahf
aad
cmp
fstps
jp
mov
xorb
mov
in
or
orb
pop
sar
js
xor
loop
lret
add
mov
mov
subl
loopne
lahf
push
push
dec
cmp
jae
cmp
and
stc
pop
push
andl
popa
or
push
call
add
push
aam
shl
push
test
jne
cmp
loope
dec
cmp
or
es
and
sub
and
scas
inc
xchg
mov
mov
test
add
push
subl
xchg
mov
das
stos
push
push
adc
test
pop
cmp
leave
ds
dec
mov
and
dec
add
cltd
sub
jge
sub
pop
add
inc
jl
popa
jp
inc
test
adc
sub
arpl
rol
or
enter
fnstcw
mov
cltd
test
adc
push
scas
adc
stc
es
cmp
cmp
pop
in
lret
adc
jge
mov
int
jae
and
lock
push
insl
push
push
test
pop
jge
cmp
subb
sbb
loopne
addr16
add
ds
adc
mov
ret
inc
lock
push
les
add
push
sbb
dec
sbb
add
cmp
mov
push
inc
mov
push
pop
inc
pop
in
cmp
loop
scas
cmpsl
jo
jb
arpl
cs
cmp
add
enter
xchg
mov
jecxz
into
inc
leave
push
sub
movntq
stos
and
ret
mov
mov
or
aam
push
push
in
addl
in
int
jp
test
out
add
cs
adc
mov
push
mov
add
in
xchg
lahf
movsb
inc
loopne
es
add
jp
sub
fs
rcrb
mov
push
sbb
in
test
mov
mov
add
jb
jle
xchg
or
xchg
repz
mov
int
dec
xor
mov
fsubl
inc
cs
les
cwtl
ret
hlt
jo
cmpb
mov
int
aas
popf
sub
loope
movsb
adc
adc
enter
add
jbe
sbbb
cmp
icebp
push
xchg
fstps
adc
and
pusha
sub
shrb
cmp
lock
adc
repnz
push
inc
mov
test
xchg
shl
sub
clc
into
les
mulb
mov
mov
pop
jae
pushf
mov
push
add
inc
rcr
add
xor
sbb
mov
pop
fmull
or
test
addl
mov
andl
sbb
adcl
test
add
xchg
push
hlt
push
jae
andb
lock
dec
fildll
push
push
push
addl
nop
mov
andl
pushw
dec
xchg
or
mov
sahf
mov
sub
pop
add
add
stc
cmpsb
sbb
add
cs
and
inc
sub
mov
xorl
orl
aad
ror
pusha
mov
dec
into
lret
push
das
testl
add
cmp
test
into
push
xorb
mov
dec
and
xchg
inc
mov
mov
jo
test
add
into
repnz
pop
xchg
fcoms
add
xor
inc
cmp
dec
cmp
xor
inc
cmp
loope
fdivrs
xlat
or
mov
adc
push
cmp
fs
shrl
jo
pusha
jno
push
inc
xor
cmpsl
mov
dec
add
cmpsb
popl
push
inc
jae
bnd
mov
adc
cs
loope
add
fisubrl
leave
jne
aaa
loopne
inc
mov
shr
push
ret
mov
jmp
inc
dec
inc
rcrl
xchg
scas
lcall
jns
xor
sbbl
mov
push
scas
pop
sub
or
out
push
inc
add
imul
or
push
dec
jno
pushf
jae
movsl
in
push
push
es
popf
ljmp
bound
cmp
pushl
add
bound
sub
dec
dec
sbb
mov
xor
or
inc
int3
push
inc
cs
push
mov
gs
das
bound
push
pop
stos
push
add
ljmp
cmc
push
jmp
jnp
or
adc
inc
or
sub
mov
adc
sub
mov
sahf
mov
push
sbb
flds
push
push
pop
lock
or
or
adc
dec
pushl
test
cs
xor
and
lods
mov
mov
and
iret
loop
rclb
stos
jp
sub
xor
ret
cld
and
push
xor
adc
sub
pop
orl
sub
testb
test
and
push
jo
mov
or
ret
div
sti
jp
xchg
inc
scas
pop
popa
mov
cltd
mov
xor
popa
push
scas
pushf
or
sub
xor
test
into
repnz
int
pop
push
xchg
push
push
mov
das
in
push
shll
or
mov
jmp
push
xor
fs
fsubrs
cmp
inc
loopne
stos
das
jo
xchg
mov
add
enter
mov
test
mov
inc
adc
into
push
jo
push
stos
inc
mov
mov
mov
inc
roll
sbbb
cmp
adc
mov
in
scas
jns
outsb
imul
sub
add
add
jo
pop
daa
mov
repz
aad
sbb
dec
je
push
cmp
fldcw
dec
push
test
ret
and
sbb
lahf
clc
imul
jbe
push
pop
mov
loopne
loope
jno
adc
push
lea
ds
call
mov
mov
adc
push
xchg
fildl
inc
push
sbb
pop
test
xchg
addl
enter
js
dec
in
xchg
and
or
or
fists
push
cmp
or
sub
sbb
ss
movl
popa
cmp
xor
cld
pop
test
sub
fnstsw
rolb
dec
icebp
rcl
cmp
rolb
push
pop
fldcw
jb
sarb
cmc
inc
or
mov
hlt
jg
into
mov
mov
stc
adc
add
sbb
aad
insb
cmp
insb
popa
mov
jmp
arpl
push
xor
jb
or
cmp
sti
lahf
mov
sub
mov
pusha
push
inc
jnp
or
adc
xor
aam
repz
jb
sub
out
int
ds
or
ss
push
inc
push
jae
add
int3
cmp
pusha
es
rorl
and
xor
int
dec
xlat
xlat
pop
cmp
cmp
mov
cwtl
adc
xchg
test
cltd
call
pop
adc
push
lcall
sbb
or
sbbb
loopne
push
jl
jl
xor
pop
push
cmp
dec
push
jb
lret
popa
loopne
imul
test
stos
jecxz
lret
add
or
push
push
inc
cwtl
es
xor
cmpsb
orb
xlat
mov
push
sbbb
cmpsb
data16
or
sbb
add
scas
add
push
insl
int
mov
lods
es
mov
cmp
bound
inc
mov
andb
mov
jo
sbb
ret
pop
xor
mov
or
inc
addb
shrb
ds
mov
scas
stos
out
inc
imul
pop
pop
test
int3
pop
lds
push
sahf
push
mov
add
aam
sub
movhps
push
xorb
xor
xor
orb
push
or
rcr
shlb
push
or
sbb
inc
scas
cltd
cmp
into
out
add
in
jno
dec
push
adc
pop
and
jmp
int
add
clc
or
lods
mov
push
shrl
or
xorb
shlb
xor
sarb
add
fstl
adc
inc
add
data16
rolb
out
mov
mov
pop
icebp
xor
or
cmp
jbe
movsl
movsb
mov
sub
pushf
sub
icebp
incl
sbb
mov
add
jp
add
jbe
insl
add
push
add
cmove
mov
rep
fadds
add
mov
or
cmp
aad
xchg
cmp
movsb
ljmp
les
mov
push
push
iret
je
or
lock
aas
inc
mov
add
cmpsb
xchg
lret
shl
ret
out
and
inc
scas
mov
lock
xlat
les
jb
xor
lcall
rclb
inc
inc
ret
xchg
and
stos
add
scas
push
cmpsl
nop
fisttpll
outsl
cmp
jno
shll
push
test
std
out
add
mov
les
and
gs
ret
inc
stos
jo
cmp
jecxz
jb
dec
mov
cmpsb
mov
call
repnz
add
dec
mov
jns
lods
jo
dec
sub
daa
jg
cmp
inc
daa
scas
mov
push
dec
test
out
cmp
arpl
sub
push
push
push
push
inc
sub
jmp
xor
and
push
push
jb
mov
popa
outsb
pop
orl
push
mov
test
xchg
adc
into
loope
lcallw
push
cmp
add
lret
andl
lcall
enter
add
mov
xchg
inc
incl
xlat
adc
sahf
and
sbb
enter
clc
adc
data16
mov
mov
lea
xchg
or
and
add
add
mov
scas
lret
rorb
cltd
pusha
stos
inc
xlat
dec
dec
cmpsb
mov
shll
jecxz
add
in
aam
add
pop
gs
sahf
add
nop
add
add
shrb
push
jae
pop
mov
inc
mov
or
cwtl
lret
das
cmpsl
pop
shll
push
and
stos
push
mov
test
add
mov
push
xchg
cmp
ss
pop
aam
jge
jle
mov
and
push
js
loope
xchg
daa
xor
and
cmpsb
mov
push
addl
icebp
jg
xchg
lret
lret
add
pop
pop
lock
jno
inc
or
pop
inc
adc
lods
xchg
stos
inc
xchg
fistl
add
test
cld
pop
or
loop
loope
xchg
add
rolb
xor
sbb
adc
lahf
lcall
cli
inc
sti
stos
add
fadds
push
mov
popf
push
icebp
lea
xor
jg
xchg
add
xorb
push
push
fs
stos
xor
xor
push
loopne
pop
push
or
mov
sbb
es
into
adc
stos
jb
sbb
pop
xor
xchg
loope
mov
sbb
lcall
int
jo
or
lds
loope
loop
jbe
ss
and
in
add
in
sbb
xor
leave
cmp
lods
xchg
and
jl
out
andl
scas
mov
xchg
popa
gs
mov
push
lret
dec
jmp
xor
xchg
pushf
pusha
xor
mull
inc
xchg
jae
cmp
stos
or
inc
mov
lcall
aam
scas
stos
mov
scas
push
lret
jnp
mov
cmp
xor
push
xor
mov
xchg
jne
cmp
xor
cmp
lea
lea
jl
scas
aas
push
mov
fildll
push
in
adc
inc
push
cmp
push
pop
mov
call
jo
or
dec
inc
mov
inc
pusha
add
stos
cltd
jo
in
sahf
je
popf
pop
jge
cmpsb
sub
pop
xor
mov
inc
aas
jnp
adcb
daa
pop
pusha
loopne
or
cmp
out
pusha
insb
mov
pop
push
loopne
adc
push
add
add
jle
sbb
and
mov
stc
lret
rolb
sbb
js
stos
popa
mov
jne
movsl
fwait
cwtl
push
inc
es
mov
ret
jl
rcr
jo
jb
push
std
rclb
cmp
scas
mov
adc
rorb
xor
jbe
rcrl
xchg
lret
inc
aaa
jg
ds
sub
fwait
or
in
loopne
cmp
stos
xorl
sbb
add
add
filds
cmpsl
enter
rcrl
ret
ss
rcrb
roll
lcall
popf
stos
fldenv
jp
fidivs
mov
adc
xchg
inc
add
dec
out
and
pop
ljmp
dec
adc
dec
sub
cmp
mov
mov
cmp
js
cmp
mov
ret
imul
cs
mov
sbb
mov
xor
jb,pn
and
push
cmpsb
add
push
push
add
mov
or
int
push
and
fcomps
cmp
or
mov
out
inc
in
mov
cmp
es
push
pop
hlt
add
jge
lahf
push
fbstp
push
into
add
iret
pop
add
lods
pushl
test
lret
sub
push
loopne
adcb
push
in
jno
or
mov
mov
dec
insl
pop
test
sbb
push
mov
ljmp
aam
sub
outsb
into
and
mov
inc
out
in
or
int
hlt
or
mov
sbb
test
into
mov
fdivr
pop
add
xor
sbb
loope
cwtl
enter
out
or
stos
add
mov
pop
mov
xor
push
les
push
hlt
push
push
jecxz
loope
ja
inc
adc
dec
jnp
stc
sbb
in
pop
mov
push
add
lcall
push
mov
adc
mul
sub
pop
inc
sub
mov
or
and
jno
dec
clc
icebp
inc
inc
imul
jno
shll
pop
sti
push
loopne
fs
into
jl
cmp
mov
add
xchg
dec
or
pusha
cli
stos
or
mov
stos
xor
sbb
cmp
mov
ret
mov
add
xor
lret
jae
dec
jmp
push
adc
mov
push
mov
xorl
inc
cmp
pop
or
add
jb
clc
mov
xor
dec
jno
xchg
mov
xor
xchg
mov
inc
mov
loopne
push
outsl
movsb
sarb
add
push
pop
out
outsl
lock
xchg
jp
push
ret
xor
add
xlat
leave
daa
xor
mov
jo
lret
push
je
ret
mov
dec
or
insl
mov
sti
mov
cmp
insb
mov
and
rcrb
sbb
cs
mov
fdivr
scas
sub
cltd
lods
xchg
mov
push
scas
or
addr16
lods
xchg
ret
push
xor
std
inc
cmp
divb
fcmovne
dec
nop
sub
xor
lds
sahf
add
adc
aas
cmp
es
pop
test
lahf
xlat
push
subl
mov
xor
icebp
not
push
rorb
je
mov
or
inc
jae
or
fwait
into
push
sub
add
mov
mov
jno
or
add
xchg
cmpsb
or
push
jl
leave
and
cmp
int
cmp
sbbl
push
rclb
sbb
xchg
test
xorb
sahf
mov
xor
int
jae
daa
push
and
cmpsb
and
xchg
jno
loope
cmpsb
mov
mov
outsl
pushf
add
fwait
adc
sbb
int
fisubrl
ss
rclb
test
jns
adc
loop
mov
loopne
aad
push
mov
cltd
push
adc
adc
jne
sahf
shrl
movsb
xor
inc
xchg
mov
xchg
lock
adc
xchg
mov
add
inc
mov
push
xlat
sbb
mov
data16
cltd
imul
mov
mov
add
mov
mov
xor
gs
xchg
lret
adc
leave
xor
imull
inc
add
xor
rolb
loop
mov
mov
inc
sub
dec
mov
cmp
cmp
subb
dec
push
mov
gs
sub
pop
xor
nop
cmp
ja
xchg
mov
add
outsb
mov
sub
data16
push
mov
mov
sub
mov
fsubl
pop
sub
pop
lahf
inc
imul
add
push
jnp
cmp
bound
mov
jns
test
addr16
jae
adc
sub
cmp
pop
loopne
fcomp
mov
mov
add
cmp
mov
sbb
add
dec
add
cmp
test
rcrb
add
int
jg
push
dec
xchg
add
aad
inc
push
fisttps
xchg
stos
cmp
addl
in
xchg
rcrb
inc
enter
and
leave
xlat
push
or
cmp
xchg
and
xlat
xchg
rcrl
xorl
push
add
xor
adcb
out
and
jp
jecxz,pn
xor
push
pusha
sbb
rclb
add
rcrb
call
movsl
enter
subl
aas
loope
iret
mov
fsubrs
push
push
sbb
pop
nop
or
mov
adc
aam
jnp
inc
cmp
andb
sahf
jne
andb
cmp
push
sbb
pop
pop
jle
mov
ret
loope
mov
pop
add
sub
inc
cmc
in
inc
inc
mov
bound
sbb
and
repz
nop
stos
xor
push
scas
pop
mov
mov
jo
test
pop
ja
jbe
xorl
cmpsb
pop
out
scas
cmp
sub
and
pushf
cwtl
icebp
das
je
daa
sub
or
movsl
cld
dec
xchg
or
fldenv
push
mov
test
sub
dec
mov
arpl
leave
and
sbb
push
sarb
dec
test
and
sub
aam
pop
pop
js
inc
sbb
adc
pop
push
ss
or
fistpl
xorb
adcb
xor
xor
cwtl
mov
mov
mov
mov
inc
nop
mov
dec
fs
fisubl
cltd
sbb
lahf
mov
mov
push
mov
loopw
stos
xor
pop
inc
push
jge
addr16
inc
mov
das
ja
mov
scas
int
xor
mov
scas
je
cwtl
lods
icebp
aad
sub
and
loop
outsl
inc
inc
push
loope
sub
pop
sub
cmp
gs
cmpsb
data16
push
mov
nop
cmp
scas
shlb
fldl
sahf
call
adc
inc
jae
mov
test
dec
mov
mov
rolb
jge
inc
scas
and
aad
or
mov
int
cwtl
mov
sub
xor
and
subb
inc
push
mov
xor
adc
or
test
out
mov
add
ds
inc
push
fildl
dec
es
cltd
inc
pop
int
stos
or
dec
and
popa
mov
cmpsb
lahf
nop
xlat
xor
sbb
jb
sarb
sub
addb
repz
daa
add
ljmp
mov
push
and
stos
inc
and
jb
dec
hlt
sub
adc
jo
cld
daa
imul
push
mov
hlt
subb
enter
test
pop
loopne
cltd
negb
cmp
or
pop
xor
xlat
cltd
push
lret
xlat
pushf
pop
sub
loope
stos
jns
mov
mov
sbb
mov
pop
lcall
mov
mov
jb
leave
das
mov
jo
adc
sbb
or
or
mov
cmp
lods
jns
adc
mov
push
push
inc
mov
jl
data16
call
sbb
sbb
mov
movsl
das
xchg
mov
shlb
pop
jns
mov
adc
mov
pop
inc
lods
int3
and
in
or
insb
and
stos
in
jne
popa
nop
jle
jb
mov
jbe
scas
inc
xchg
push
pop
fadds
sub
call
cmp
xchg
mov
outsl
and
inc
cs
je
ja
aaa
mov
push
fldcw
add
adc
fcmovnb
xor
loope
inc
popl
cltd
pushf
inc
iret
scas
pusha
mov
cmp
imul
daa
pusha
cmpl
push
add
or
les
test
ds
sbb
jno
aaa
cvtps2pd
in
ret
insl
sbb
scas
sbb
inc
mov
pop
cwtl
mov
sub
and
scas
jbe
jno
xor
jp
jae
sbb
fldt
addr16
cmp
mov
andb
jb
sub
adc
push
je
mov
xchg
sti
and
lcall
push
rcll
sahf
adc
xchg
mull
into
and
add
mov
inc
inc
mov
int
or
leave
rolb
mov
andb
xchg
and
or
push
aas
and
xor
add
enter
sub
push
and
xchg
or
lods
into
mov
sub
out
xor
and
adc
sub
in
mov
sbb
cmpsl
adc
mov
inc
sub
cmp
js
daa
and
fdivr
adc
lret
or
or
dec
add
jns
je
jg
inc
loopne
pop
mov
sbb
lret
loope
subb
jge
and
in
sbb
mov
loopne
fs
xlat
popf
ljmp
xor
jb
cmp
mov
or
or
push
inc
inc
xchg
enter
xor
add
movsb
or
ret
push
nop
and
cmpsb
mov
pop
int
or
sahf
xchg
cmp
sbb
loope
xor
mov
cwtl
arpl
lcall
cmpl
enter
xchg
mov
xor
mov
sti
pop
inc
imul
inc
and
rorb
es
loopne
or
in
or
xor
sub
enterw
dec
xor
pop
arpl
or
jbe
in
cs
aas
cmp
aad
js
ret
mulb
mov
sbb
sub
imul
mov
adc
rol
jae
loopne
stc
loopne
and
test
fnsave
sbb
aaa
cmp
push
and
je
xchg
cld
or
xor
addl
xchg
je
fs
add
dec
aad
out
es
mov
xor
shlb
inc
es
sbb
jb
xchg
xor
mov
pop
push
imul
iret
adc
rolb
fldl
lret
inc
or
xchg
mov
mov
adc
loope
mov
mov
popf
sub
jb
mov
lcall
sbb
adc
lcall
out
and
push
add
mov
je
push
cltd
xchg
sub
pop
or
cmp
mov
jno
lods
sbbb
push
je
int3
incl
movsb
cwtl
or
jo
leave
and
pop
mov
or
add
adc
pop
inc
aam
dec
push
dec
inc
dec
adc
pop
sbb
sbbl
dec
mov
test
jmp
les
dec
cs
insl
adc
push
rol
loopne
cmp
popa
call
jno
enter
dec
adc
xor
cltd
rclb
sbb
out
xchg
push
in
or
subl
cmpsl
mov
jb
scas
test
pop
xchg
int
adc
out
test
out
cmpsl
pushf
and
cs
jo
inc
aam
push
ret
loope
inc
cwtl
add
shlb
mov
cmp
push
adc
add
aad
or
popf
jo
sbb
into
in
adc
into
mov
xor
dec
call
sbb
push
sbb
push
inc
movsl
jb
xchg
add
test
add
push
outsl
into
clc
mov
cmpsw
and
aam
sbb
and
push
cmp
arpl
or
xlat
gs
test
pop
add
cld
jmp
add
adc
loopne
adc
sbbl
or
push
insb
push
iret
iret
or
push
sub
cmpsb
mov
inc
leave
pusha
push
or
loop
test
dec
push
cmp
pop
push
icebp
mov
dec
decb
inc
ret
pop
addl
dec
push
cmpsb
push
int
das
pusha
sub
or
ret
inc
cmp
adc
add
jb
mov
push
adc
rorl
test
stc
jp
push
xchg
mov
sbb
adc
dec
imul
int
gs
and
mov
add
test
lods
loop
leave
pop
add
test
icebp
or
jo
insb
xchg
scas
push
cwtl
cmp
aad
les
out
aad
stos
subl
xchg
xor
dec
cmp
jae
or
test
adc
loop
push
je
sub
add
call
push
enter
sbb
orl
sub
xchg
add
xor
push
sub
adc
adc
inc
adc
or
or
add
mov
insb
cmp
or
mov
cltd
add
fistl
pushl
shll
clc
outsb
jns
cmc
rolb
into
pop
mov
push
xor
lahf
jle
push
cwtl
add
add
dec
pop
jae
std
testl
add
xchg
push
mov
mov
enter
jmp
dec
je
inc
rcll
and
add
push
dec
mov
repz
mov
push
inc
popa
outsl
jnp
or
hlt
cmp
mov
mov
daa
insl
out
movsl
cmp
stc
pushf
xor
in
in
add
mov
mov
rol
xor
cs
jo
lcall
pop
cwtl
mov
in
jae
test
adc
in
push
xor
mov
cmp
test
add
inc
jecxz
and
pop
scas
mov
stos
push
mov
cmpsb
lret
fs
sbbb
pop
mov
sub
jo
push
inc
push
sbb
ret
jnp
inc
scas
add
add
addb
sbb
stos
shll
xor
xor
or
cmp
push
adcb
cmpsl
pop
push
add
and
xor
inc
loopne
leave
fsts
xchg
mov
or
pop
and
pop
scas
dec
aad
push
jo
enter
pop
cwtl
add
push
enter
adcb
mov
hlt
jecxz
iret
mov
aam
aas
mov
adc
mov
cmp
push
arpl
jne
pop
fimull
inc
sbb
and
and
iret
and
adc
jne
cltd
adc
adc
enter
ret
xor
test
icebp
mov
mov
pop
mov
jnp
jb
mov
inc
add
dec
mov
hlt
pop
les
sbb
pop
push
jp
mov
push
jg
imul
andl
aad
lret
je
add
cltd
mov
xchg
pop
jae
mov
or
sub
pushf
dec
lock
and
mov
mov
shl
insb
xor
inc
cwtl
mov
push
stos
mov
shll
inc
iret
push
in
rorb
add
pop
inc
add
push
push
loop
fnstsw
out
and
mov
fcoms
xor
or
ret
adc
dec
fwait
test
loopne
mov
add
out
dec
pushf
mov
or
mov
xor
sbb
out
jne
adc
push
incl
rclb
pop
sub
cmpsl
inc
mov
es
mov
and
inc
inc
movl
add
cwtl
aad
dec
cli
cmp
icebp
insl
xor
loop
cmp
dec
cld
pop
push
jp
popf
adcb
pop
es
stos
sub
mov
pusha
popf
jae
lods
jae
xor
cld
lds
stc
mov
xchg
cli
mov
inc
adc
xor
push
adc
pusha
mov
add
and
scas
sub
push
mov
dec
push
imull
scas
or
mov
lds
jne
push
push
divb
push
mov
in
fs
inc
pop
sub
xor
roll
adc
xorl
pop
es
es
lret
and
nop
sarl
inc
mov
lcall
add
mov
mov
fs
pushf
add
sbb
int
adc
push
mov
mov
cmp
push
dec
rorb
inc
test
aad
lret
push
push
adc
push
inc
mov
out
sbb
xor
imul
adc
cltd
cltd
sbb
dec
lret
popa
jbe
or
pop
inc
jmp
sbb
dec
test
mov
and
sti
mov
add
mov
sub
add
movl
adcl
cmp
adcb
lcall
aam
add
push
push
sbb
repnz
mov
movsb
adc
inc
sub
push
push
push
cs
mov
add
test
pop
cwtl
movl
cmp
xchg
ret
ficompl
loopne
cmp
adc
adc
cmpsl
add
pop
js
cwtl
pop
push
sbb
pop
in
cli
cmp
movsl
fs
and
popf
or
or
and
cmp
inc
jmp
gs
dec
loop
sub
pop
cmc
sub
gs
fwait
xor
popa
mov
mov
jno
push
add
push
es
stos
mov
test
mov
inc
mov
jo
aam
cwtl
jmp
cmp
pop
xchg
outsl
mov
ds
xor
shlb
sub
daa
mov
and
scas
mov
jnp
cmp
dec
cld
mov
mov
flds
enter
icebp
pop
pushf
sub
pushf
inc
outsb
inc
mov
mov
adc
xchg
clc
xor
pushl
das
idivb
xchg
rcll
adc
or
or
inc
and
fs
push
mov
sub
xlat
or
push
stos
es
orl
cmpsl
test
mov
mov
pop
inc
lock
pop
test
sub
dec
cmp
lret
jmp
cmp
gs
inc
mov
xchg
and
push
jnp
shl
ret
subb
inc
fisttpl
loopne
jb
xchg
pushf
or
jbe
and
mov
cmp
adc
lods
shrb
pushf
sbb
sbb
push
adc
add
jb
stos
jp
inc
jnp
or
mov
ljmp
loope
mov
push
xor
xor
add
xchg
in
push
cmpb
scas
xchg
test
orl
add
mov
fs
data16
outsl
lret
shrb
add
das
sub
out
push
mov
xchg
ljmp
roll
and
call
les
les
mov
test
pop
inc
inc
insb
lret
and
and
and
outsb
mov
push
dec
dec
enter
popl
and
jg
pop
ds
rolb
cmc
in
cld
sub
pusha
mov
sahf
test
push
push
and
mov
adc
in
add
loopne
adc
sahf
pop
loope
xor
mov
sbb
lea
jg
xchg
test
sbb
mov
sub
add
jb
sbb
addl
es
push
imul
xor
lods
xorl
pop
icebp
jecxz
inc
cmp
mov
hlt
test
push
push
cmpsl
push
jne
mov
sbb
outsl
or
stos
pop
adc
loope
push
sti
xchg
adc
or
rcll
sub
mov
movsb
sahf
rolb
dec
push
add
loope
cwtl
clc
in
fwait
or
pusha
es
jo
sbb
cli
xchg
sbb
jae
lahf
mov
add
je
cmp
ret
add
iret
inc
mov
pop
sub
xchg
enter
jp
push
pop
into
add
sub
jmp
stos
jbe
adc
lds
scas
testl
stc
ja
add
mov
add
shll
push
loope
das
insl
add
addb
mov
shl
out
mov
data16
add
or
es
pushf
fdivl
jge
cmpsb
ret
dec
loope
push
jae
pop
das
cld
adc
adc
scas
and
hlt
test
lock
or
or
and
xchg
adc
jb
lods
repz
and
adc
stos
mov
sbb
pop
push
push
sub
mov
pop
cmp
movsb
push
adcb
dec
jb
frstor
decb
popa
nop
push
out
cld
loopne
adc
jne
test
xchg
jmp
sbb
push
cmp
inc
and
mov
pop
push
pushf
mov
push
xlat
cmp
es
leave
adc
into
popf
and
mov
sbb
and
jb
mov
adc
pop
std
dec
xor
stos
push
lds
push
push
nop
fistpll
shl
add
adc
xorb
lds
sbbb
test
inc
hlt
xor
stc
pop
sbb
push
scas
lret
push
and
je
cwtl
jge
add
and
sbb
out
add
pushf
sub
daa
je
sbb
jge
add
mov
mov
push
and
push
sub
add
and
xchg
mov
stos
enter
inc
es
dec
js
or
xor
addr16
shrl
or
or
jmp
sbb
sub
lock
mov
jp
out
inc
jo
dec
sub
cmp
sti
add
test
and
sub
sub
push
mov
xchg
leave
jl
sbb
xor
xchg
rolb
loopne
inc
dec
leave
lret
jp
mov
negb
jne
jne
push
adc
sbb
xor
inc
imul
imul
clc
dec
adcl
jg
ret
jmp
or
call
sarb
es
inc
mov
mov
inc
cmp
dec
aad
loope
or
jne
sub
pop
mov
and
scas
sub
das
sbb
adc
xchg
je
dec
inc
arpl
add
fnstenv
loopne
in
in
test
pop
mov
andl
int3
xadd
mov
sub
sbb
in
test
mov
sub
ret
add
add
cmp
icebp
test
lcall
rcrb
sahf
pushf
or
out
push
mov
xchg
add
in
adc
js
push
fxch
mov
lret
sbb
sbbb
xorb
loopne
inc
test
rcll
push
cltd
dec
push
shrb
mov
or
rorb
orb
rorl
and
push
pushf
cmp
sbb
pop
daa
pop
pop
cmp
sahf
insb
incl
iret
icebp
add
dec
mov
fisubrs
add
xor
repz
ret
sbb
jle
incb
jmp
inc
fiaddl
adc
es
jno
dec
jl
push
add
mov
and
cmpb
add
mov
sbb
inc
adc
data16
rcrb
mov
out
.byte
.byte
push
call
in
add
lea
push
push
push
add
lea
push
clc
push
push
add
add
leave
ret
inc
rclb
mov
cmpl
push
push
push
push
push
jno
es
push
push
mov
and
push
adc
in
and
or
jno
decb
daa
push
sahf
push
cmp
insl
scas
adc
das
pop
push
and
push
and
scas
mov
aaa
or
inc
or
mov
fistpl
cwtl
push
decb
push
and
mov
fimull
inc
push
js
and
insl
pop
push
pop
test
sahf
es
or
push
and
inc
sahf
push
jnp
pop
imul
cwtl
arpl
push
cwtl
add
pop
imul
inc
push
sahf
pop
mov
push
mov
insl
imul
push
je
mov
imul
pop
mov
es
push
add
sub
repnz
mov
add
mov
icebp
orl
imul
lret
adcl
es
movsb
push
mov
mov
inc
and
aas
imul
sub
inc
imul
add
and
cmp
mov
jno
fistpl
lods
pop
pop
lcall
loopne
fwait
loop
lret
dec
push
lea
scas
rorb
pop
in
aas
ficompl
push
pop
clc
incl
rorb
xor
ljmp
sti
jo
xor
add
movl
mov
mov
mov
or
repz
adc
icebp
adc
inc
mov
adc
mov
or
mov
fimull
or
and
xchg
mov
fistpll
aam
pushl
cmp
lock
loope
cmp
add
sub
add
mov
and
dec
rcrb
cmpl
mov
sub
mov
xor
sbb
fsub
inc
or
mov
push
or
lret
jno
add
mov
cwtl
jne
in
sub
or
push
add
add
andb
dec
and
mov
addb
js
pop
sbb
mov
mov
adcl
dec
jl
jb
sbb
test
bswap
and
pop
imul
and
and
or
or
imul
imul
mov
stc
lea
inc
imul
mov
hlt
jno
out
xor
mov
jmp
idivb
sbb
sub
je
inc
fnstenv
sbb
mov
jmp
xor
dec
cmp
aaa
pop
mov
and
cwtl
pusha
push
lods
loopne
jae
add
lods
xor
adc
idivb
pop
imul
shll
cltd
xchg
lcall
jge
push
xor
add
push
xor
or
pop
mov
sbb
or
into
std
or
iret
imul
mov
aas
ljmp
rol
and
dec
inc
jno
cmp
in
lea
jl
mov
mov
imul
and
mov
sub
cli
push
addb
add
dec
popa
adc
mov
rorl
inc
jl
jno
jecxz
push
push
adc
adc
pop
push
push
push
inc
pop
jmp
insl
movl
adc
add
mov
imul
bound
leave
jo
mov
mov
fs
and
inc
mov
adc
es
test
int3
inc
push
add
sbb
xchg
pushf
and
aaa
mov
out
cwtl
adc
or
insl
lcall
lea
jg
xor
xchg
lret
ss
or
lret
ficoml
sbb
mov
std
lahf
add
in
mov
xchg
lret
mov
or
sbb
rolb
inc
sbb
cmc
cmp
cwtl
push
shrb
push
sub
mov
or
push
movsb
shll
insb
scas
jne
push
add
xor
xchg
repz
cmp
mov
xlat
in
and
sub
mov
inc
cmp
adcb
popa
jne
jb
mov
sahf
loopne
cli
inc
push
xchg
subl
mov
sahf
push
cmp
sbb
adc
sub
aad
pop
or
cwtl
jne
jns
mov
rol
sbb
add
aad
ds
lcall
push
loope
pop
cwtl
push
add
push
sub
xchg
loopne
cmp
lods
sbb
or
sbb
pop
mov
test
out
mov
jmp
sahf
inc
fdivs
add
inc
rcrl
ficoml
cmp
popa
pushf
mov
mov
repnz
cmp
lods
cmp
imul
mov
mov
add
xchg
imul
xor
add
xorl
mov
mov
jno
ss
in
roll
and
lcall
mov
or
aas
ds
mov
into
in
lods
or
test
ja
add
jg
pop
test
or
xchg
ljmp
call
movsl
popa
cmpb
sbbl
sub
push
push
mov
adc
test
mov
stos
mov
adc
aam
lods
mov
push
leave
in
int
lds
mov
mov
and
push
mov
push
enter
pop
leave
cmp
fdivrl
movsb
or
push
mov
xor
ret
aad
sbb
pop
or
ds
pop
sbb
mov
orl
lea
xor
andl
mov
fwait
mov
aam
sbb
jo
add
xchg
out
dec
into
mov
jbe
es
fistpl
xor
movsb
int3
inc
es
mov
mov
fs
int
cmpsl
mov
pop
leave
jbe
inc
rclb
pop
mov
cmp
xor
leave
imul
mov
push
pusha
dec
insb
mulb
jg
jne
mov
push
test
push
and
out
ret
dec
rclb
push
rcr
mov
inc
mov
cmp
push
sub
int3
jnp
push
data16
mov
pop
mov
imul
dec
mov
test
mov
imul
rcll
mov
mov
cs
push
push
jae
mov
sahf
int3
pop
add
push
inc
xchg
int
ret
mov
pop
push
popa
fstps
or
lcall
or
cmpl
andl
movl
sbb
jp
or
scas
mov
jno
mov
cmp
insb
pop
push
mov
fcomps
orl
mov
imul
sub
push
loope,pn
inc
mov
jns
aam
ret
inc
test
dec
mov
fisubl
mov
rcrl
dec
jbe
notl
outsl
cmpl
xor
jge
lcall
aas
js
sbb
icebp
cwtl
and
dec
lods
push
lods
mov
test
sub
shlb
add
pop
mov
lods
xchg
sub
ret
dec
mov
inc
mov
mov
fimuls
repz
sbbl
arpl
xor
repnz
bound
mov
pop
in
bound
xchg
mov
jae
sbbb
movsl
popl
lcall
xchg
ret
sarb
ljmp
test
pop
lcall
andl
lock
cmp
outsl
cmp
xor
or
adc
mov
dec
sahf
or
imul
inc
xlat
push
xor
sbb
xor
dec
scas
out
sbb
lcall
subb
out
dec
jno
sub
or
xor
es
movsl
inc
push
ss
orl
xchg
push
mov
push
xor
cmp
leave
sub
cwtl
mov
test
ret
add
jge
fisubrl
jns
push
lods
filds
cmp
inc
imul
imul
lret
insl
cmp
gs
add
sub
lods
push
es
xchg
xchg
test
pop
jae
in
jmp
push
dec
cmp
sti
aaa
inc
xor
loope
rolb
add
add
nop
out
dec
add
in
or
aaa
adc
mov
lock
ret
adc
fimull
pop
jle
loope
and
pop
stc
and
push
insl
aas
out
pop
clc
push
adc
cmc
mov
popf
add
push
push
push
push
mov
insl
fnop
clc
sbb
pop
incb
lret
ret
leave
ret
incl
adc
pop
jne
sbb
push
adc
mov
xchg
jae
fbstp
call
push
jbe
mov
adc
decl
jg
and
mov
dec
sub
add
xchg
in
mov
cs
jp
loope
shlb
cs
sti
pop
sti
jg
cmp
cltd
test
test
mov
or
lods
pushf
jns
xor
test
cmp
stos
insl
sub
lods
mov
push
mov
adc
fdivrl
popa
mov
jne
leave
sbb
or
inc
mov
xchg
push
sbb
pusha
mov
mov
into
mov
jg
mov
cmp
repz
pop
and
popa
out
or
sahf
loope
adc
scas
std
popf
aas
cmp
mov
dec
lcall
push
pushl
in
dec
addr16
in
decl
xchg
jle
out
mov
mov
jmp
outsl
jo
shlb
xor
mov
aam
lea
sti
cmp
ja
es
mov
fisubs
jbe
add
mov
cmp
popf
and
lret
mov
mov
into
sub
std
pop
test
bound
cmp
dec
stos
mov
outsl
adc
pop
adc
fisubrs
mov
pop
mov
sti
and
popa
sbb
leave
push
mov
fldcw
pop
cmc
xor
inc
loop
fistpll
xchg
mov
call
cmp
jb
insb
jge
insl
adc
call
xchg
decl
ret
inc
hlt
pop
loopne
mov
lea
adc
inc
fnsave
sbb
pop
jmp
repnz
mul
lds
jae
test
lods
adc
ja
das
xor
mov
pop
mov
and
mov
das
mov
nop
cmp
call
sbb
out
out
int3
inc
inc
sbb
jo
bound
cmp
test
jge
jecxz
testl
jp
icebp
aas
cmp
inc
jl
outsl
push
sbb
in
push
add
push
mov
mov
cs
mov
stos
fidivrs
xor
mov
insb
hlt
incb
fistps
jecxz
mov
imul
pop
jle
lret
xchg
jae
std
imull
mov
imul
fidivrs
or
inc
or
daa
mov
das
mov
sbb
xchg
decl
bound
cmp
ljmp
push
pushf
jecxz
cmp
pop
in
pop
or
mov
xchg
cmp
push
jnp
mov
jmp
jmp
hlt
fisubrs
adc
inc
sub
cmp
cmp
movsl
repz
lock
mov
fistpll
sub
cmp
jnp
imul
jmp
inc
std
ss
aad
iret
mov
iret
rcrb
mov
negb
xchg
dec
testl
in
mov
jge
inc
push
cmpsl
jmp
arpl
pop
push
mov
sub
jp
and
hlt
cmc
mov
pushl
mov
pop
pop
loopne
scas
xor
loope
inc
lea
pop
dec
stos
xor
adc
or
sti
sub
shlb
sub
and
pop
addb
jae
loopne
inc
sbb
lret
icebp
or
mov
aas
stc
xchg
jb
dec
sahf
sub
push
dec
icebp
adc
jg
ret
mov
flds
in
or
mov
inc
ret
aad
and
mov
data16
cmpsl
adc
or
mov
push
out
dec
scas
mov
push
in
cmp
call
pop
movhps
lock
sarl
or
add
dec
subl
pop
stc
arpl
js
out
daa
mov
aas
imul
cmc
pop
add
stc
adc
neg
and
int3
leave
mov
out
iret
std
mov
faddl
hlt
adc
push
mov
and
sahf
iret
std
mov
cmp
jbe
mov
or
mov
or
jb
push
fwait
pop
aas
jns
mov
jecxz
mov
aaa
fdivl
cmc
je,pt
dec
and
fistpll
adc
xor
pop
loopne
mov
mov
ficoms
mov
add
mov
mov
iret
sub
hlt
decb
inc
ljmp
mov
outsl
out
mov
pop
adc
out
or
dec
mov
pop
sti
mov
lret
inc
shrl
mov
mov
repz
stos
scas
add
jns
fdivs
xor
shr
push
mov
cli
fwait
cmp
and
add
shrb
sub
pusha
or
out
mov
xchg
xor
push
mov
lcall
out
sti
mov
cmc
ds
scas
cmp
repnz
shlb
xor
mov
jmp
aad
arpl
mov
adc
pop
fs
int
add
cmp
mov
adc
jl
loopne
dec
sbb
out
xor
pop
jl
add
bound
mov
int
pop
cmp
jge
aas
iret
xchg
cmp
popa
ret
mov
or
mov
jo
frstor
ret
outsl
sbb
xor
mov
pop
sbb
and
adc
adc
mov
and
mov
mov
sar
out
flds
aam
lock
aas
sub
popf
xchg
imul
inc
jecxz
sub
fdivl
mov
inc
push
cmpsl
or
popa
std
inc
sbb
in
std
pop
fisubl
aas
mov
dec
das
pop
aas
dec
popa
jg
push
dec
aam
imul
bnd
scas
xor
pop
xor
xchg
jl
jg
fnstcw
cmp
mov
jg
jle
xlat
cmc
out
data16
out
push
stos
xchg
int3
add
xor
insl
fisubrs
mov
ja
clc
sbb
fidivrs
jnp
jns
test
mov
jns
aad
mov
icebp
daa
pop
jl
pop
fs
inc
jg
cli
lahf
push
insl
xor
imul
jg
ret
mov
cmp
mov
cmpsb
aad
mov
pushf
mov
loope
and
xchg
push
out
xchg
lcall
ret
cmp
mov
fidivl
xchg
adc
das
mov
lds
dec
mov
sahf
mov
cld
fistps
mov
push
xor
les
fdivr
cmp
pop
out
ja
inc
pop
jmp
adc
daa
icebp
lret
sbb
pop
jae
pop
push
jle
out
mov
cld
or
clc
test
fwait
and
sti
cmp
sub
in
mov
fs
cmpsl
dec
addr16
xchg
xchg
popa
cmp
xchg
pop
out
mov
sbb
roll
and
inc
loopne
pop
push
add
test
mov
jg
cmc
inc
or
nop
cmpsb
inc
sahf
subl
mov
mov
push
mov
cmpsl
jl
inc
xor
hlt
pop
jne
xorb
rorb
lahf
js
push
rolb
xchg
or
add
xchg
pop
mov
mov
aam
pop
in
insl
movsb
lock
out
icebp
pop
sbb
push
push
push
pop
sub
xor
add
lock
addr16
sub
mov
sbb
shll
jnp
jecxz
pop
xchg
inc
mov
cs
jo
stos
pop
test
orl
adc
mov
and
lods
sbb
arpl
jecxz
mov
fimuls
negl
cmp
lret
sub
add
mov
xchg
icebp
lods
pushl
jne
ret
jnp
out
adc
icebp
call
stos
scas
mov
test
mov
and
mov
dec
scas
cmp
push
out
xchg
mov
in
aam
xor
dec
cld
testb
push
mov
and
lret
fucom
fistpll
pop
cmp
test
mov
jg
neg
dec
stos
xchg
popa
mov
jne
movsl
out
mov
and
xor
and
dec
xchg
xor
sbb
push
fldt
stos
xchg
sub
cmp
daa
mov
subl
loope
mov
xchg
fs
iret
std
and
mov
xchg
xchg
cwtl
mov
mov
adc
jae
mov
jno
daa
int
xchg
push
pop
clc
shl
imul
std
stc
inc
jg
jg
js
xor
adc
pop
cld
not
or
mov
jp
sub
outsb
repz
push
sti
mov
movsb
jb
pop
ja
jg
outsl
fwait
dec
sub
pop
xchg
dec
mov
push
inc
shll
and
mov
out
es
xlat
mov
mov
repz
push
js
cli
jg
fistpll
mov
pop
and
lcall
inc
jno
in
sub
add
shl
lahf
testl
jg
loope
sar
jp
mov
jecxz
mov
xchg
scas
push
and
sub
insl
dec
outsb
push
movsl
push
and
aas
cmp
sub
mov
pop
jecxz
lahf
sti
push
mov
xor
bnd
push
cmp
mov
mov
gs
loopne
sti
push
xchg
test
dec
mov
in
cmp
inc
in
incl
ljmp
and
push
add
or
push
add
rolb
sub
mov
push
enter
ret
out
jno
pop
push
idiv
jecxz
and
and
call
lret
lahf
push
mov
inc
insb
xchg
pop
mov
pop
push
add
fisttps
lcall
mov
jnp
mov
shrl
mov
or
je
lcall
pop
scas
and
pop
jno
mov
xor
sbb
xor
sahf
sub
loop
mov
addr16
into
push
mov
les
pop
xchg
test
jns
lcall
cmp
sbb
mov
push
movsl
jg
loope
inc
subl
in
jnp
inc
std
dec
test
mov
pop
jmp
addr16
test
and
fnstcw
or
ficomps
jbe
incl
or
ljmp
out
push
andb
fcoms
cli
mov
outsb
daa
and
lds
cmp
and
adc
lods
pop
js
les
jne
adc
xchg
add
pop
ss
jmp
jae
push
and
or
and
or
into
std
push
mov
cld
mov
bound
pxor
jecxz
adc
cmp
add
pop
jge
xchg
adc
insl
and
lock
js
mov
add
lret
inc
mov
and
test
ret
std
aas
push
fbstp
filds
jge
mov
jbe
inc
sbb
jle
lret
nop
dec
ljmp
mov
pop
pop
jmp
imul
jg
mov
pop
scas
add
push
xor
loop
bound
xor
mov
loope
loope
cmp
and
outsb
cmp
imul
add
fildl
inc
sub
inc
outsl
mov
clc
lahf
or
mov
cmpsl
xor
inc
xchg
mov
cmp
lock
dec
or
jg
adc
push
clc
test
pop
ja
push
adc
cltd
lock
fcoms
hlt
or
pop
sarl
adc
iret
std
ja
clc
pop
xchg
rcr
mov
lds
adc
adc
insl
mov
popa
jge
movsl
push
jp
dec
jg
rcll
sbb
adc
mov
shr
sub
incl
fimuls
in
sbb
push
push
or
push
cmc
cltd
dec
sbb
mull
subl
fisttpl
adc
jle
movsl
dec
xor
iret
ds
cmc
push
xchg
push
mov
mov
mov
sub
movsl
sub
ret
mulb
dec
sbb
out
mov
inc
nop
lret
arpl
inc
lcall
xchg
sub
dec
mov
sti
pop
mov
mov
or
adc
in
pop
push
lcall
or
add
mov
mov
pop
incb
mov
decb
jae
arpl
and
mov
lock
mov
rolb
outsb
mov
aas
shl
ss
lret
xchg
xchg
aad
inc
in
icebp
pop
repnz
das
sarl
xor
jns
or
adcb
fmull
pop
movl
and
out
mov
pop
jmp
dec
sarl
idivb
idivl
inc
xlat
cmc
dec
aaa
xorl
neg
mov
test
cmp
es
pop
xchg
ss
out
mov
dec
int
sub
and
mov
xchg
stos
dec
mov
lret
ljmp
fyl2x
xchg
mov
sub
je
mov
stos
test
idiv
out
ss
add
outsb
stos
rorl
aam
fnsave
push
jnp
mov
loop
loope
or
and
pop
pop
imul
out
add
adc
fnstenv
fstl
rclb
xchg
jae
mov
fstpl
cli
and
fistpll
mov
dec
iret
and
fildll
mov
mov
and
fwait
cltd
shlb
jne
pop
dec
orb
sti
into
adc
xchg
pop
leave
sarl
aas
stos
aam
mov
xor
ret
lcall
sub
cvtps2pi
es
inc
jb
popl
call
stc
xlat
shl
and
shll
push
dec
cmc
aas
mov
jno
jl,pt
sbb
mov
and
imul
and
push
dec
repnz
mov
loopne
fistpl
pusha
jb
or
and
mov
mov
lahf
icebp
aas
stos
inc
repz
lret
fisubrs
dec
jg
push
arpl
jb
std
aas
inc
jmp
dec
lcall
inc
in
fs
dec
movsl
emms
shr
add
into
aas
and
repz
jo
xchg
mov
clc
in
lret
push
sti
sbb
jne
bound
jnp
jg
jns
mov
jae
aam
and
dec
fwait
sbb
out
xchg
xchg
mov
fcompl
dec
aam
jns
fmul
and
inc
push
jp
sahf
push
or
mov
mov
cltd
idivl
jbe
mov
cli
pop
in
sbb
xorl
ret
clc
mov
xchg
pop
data16
add
aaa
cli
aaa
inc
mov
xchg
mov
orb
jmp
hlt
cmp
inc
sti
dec
adc
inc
pop
fwait
dec
loopne
in
jg
push
daa
fisubrs
mov
sbb
cltd
and
popa
ljmp
sarb
psrld
popf
leave
inc
cld
stos
xchg
ljmp
mov
mov
outsl
pop
adc
dec
mov
xlat
sub
idivb
mov
dec
inc
out
cmp
lods
nop
pushl
pushf
into
mov
mov
or
push
xchg
sub
inc
jg
hlt
pop
imul
inc
xchg
sahf
inc
add
mov
ds
sub
je
aas
inc
call
and
repnz
pop
dec
aaa
push
jbe
fimuls
mov
int3
mov
jnp
fistpll
mov
xor
push
aaa
or
ss
cmp
mov
pop
or
ljmp
movsl
dec
decl
push
jmp
adc
jle
loop
and
lret
push
mov
sbb
cmp
push
icebp
mov
add
mov
cld
loope,pn
fdivr
jne
out
push
jg
xor
xor
cmpsb
or
roll
push
inc
push
insl
jnp
mov
scas
out
push
jge
int3
call
sbb
add
push
icebp
ja
mov
add
and
fstpt
fistpll
sahf
inc
sub
es
cmp
cmc
ret
stc
daa
push
iret
xor
jg
and
out
push
in
sub
push
jo
test
fistps
loopne
call
andl
lds
mov
ds
dec
sti
call
shlb
lahf
mov
mov
dec
mov
push
pop
clc
decl
pop
std
leave
xchg
sarb
push
inc
loop
and
clc
mov
cwtl
mov
xor
mov
cmp
mov
out
push
sbb
loopne
fbstp
jno
in
dec
divl
xor
in
fucomi
xlat
push
mov
mov
sahf
mov
jg
aas
mov
test
mov
mov
mov
repnz
mov
std
into
mov
scas
mov
stc
js
fwait
pushl
mov
inc
jmp
sarb
dec
std
dec
hlt
mov
mov
xor
inc
lret
subb
ret
ds
test
rcrl
pop
push
test
sub
add
sbb
mov
pop
inc
add
das
mov
mov
or
rolb
fidivrs
push
das
mov
jne
jmp
jmp
xchg
std
aas
sti
push
sti
scas
and
sti
repnz
das
push
mov
loop
lcall
adc
and
into
push
dec
mov
inc
xchg
add
inc
jne
xor
and
cld
aas
stc
pop
cmp
testl
adc
jecxz
sbb
and
pop
repnz
out
lahf
pop
imul
icebp
fisttps
xor
lea
push
mov
push
pop
sbb
div
xor
sub
js
mov
movsl
cmpb
loop
and
mov
xor
jne
add
xorl
pop
xchg
adc
pop
dec
lock
add
or
in
inc
in
mov
out
subl
in
pushl
insb
pop
int
or
ror
stos
adc
cmpb
stc
jg
cmc
cmp
insb
push
test
pop
jge
fistps
fildl
or
and
int
jle
push
btc
es
pop
or
lods
std
adc
pop
dec
and
sbb
movsl
mov
sbb
das
mov
sarl
xchg
les
negl
cmpsl
test
sti
sbb
mov
or
and
sub
cld
pop
outsl
enter
mov
nop
and
push
scas
cmp
add
dec
add
imull
or
or
dec
in
inc
mov
aas
vcmpss
xchg
add
jnp
add
sub
sbb
je
inc
inc
push
and
mov
ret
sti
xchg
loop
out
push
int
jbe
sbb
mov
jb
rcrb
pop
mov
jge
dec
xchg
push
jmp
addr16
lea
std
dec
mov
repnz
pop
scas
and
push
sub
sub
jp
mov
imul
in
mov
xchg
add
pop
mov
mov
test
pop
sub
mov
outsl
std
mov
sbb
decb
aad
int3
lock
std
xchg
sti
fisttps
xchg
call
mov
int
pop
and
dec
test
in
sbb
xchg
nop
sti
les
push
jge
mov
sbb
jge
cli
xor
data16
cli
dec
xchg
xchg
pop
jg
int
pop
aam
sbb
iret
std
lea
mov
dec
push
xchg
decl
out
lock
sub
jne
cmp
jns
push
aas
aad
mov
xchg
add
jbe
cld
dec
mov
push
das
in
fcoml
dec
call
cli
or
push
push
es
sarb
inc
out
icebp
cmpxchg
cmp
dec
xchg
mov
icebp
pop
jmp
push
insl
mov
sti
std
add
adc
sbb
cld
fbld
outsb
cwtl
stos
das
xlat
adc
divl
and
lahf
movsl
pop
sub
mov
addl
pop
enter
xor
aad
lock
jge
mov
and
fwait
push
cmp
jg
out
mov
mov
sahf
mul
inc
in
fst
cmp
decb
cmc
mov
cmpsl
ds
pop
mov
dec
out
int3
lock
cmp
addr16
into
loop
sub
xchg
jmp
icebp
and
push
jge
pushf
xchg
add
ljmp
mov
inc
inc
cld
jp
into
xlat
mov
xchg
scas
jns
icebp
out
std
inc
and
dec
fdivl
xor
or
loop
pop
icebp
jmp
inc
cmp
js
and
sbbl
imulb
ret
clc
out
movsl
cmp
in
std
xchg
hlt
dec
outsl
lret
shlb
movsl
cltd
or
lods
mov
jo
adc
jbe
test
xor
aas
testl
or
and
out
mov
decb
les
jmp
dec
mov
in
ret
insl
outsl
in
jg
clc
arpl
insl
dec
psrlq
pop
cld
mov
imul
mov
pop
in
mov
xlat
movsl
xchg
loope
idiv
dec
jns,pt
mov
fistpll
icebp
xchg
dec
push
test
into
adc
fdivr
out
dec
sbb
arpl
mov
sub
sti
sub
lock
iret
addb
aam
repnz
js
clc
hlt
dec
iret
insb
adc
mov
cmpsb
jle
xchg
or
inc
imul
scas
xchg
sbb
xor
push
push
add
scas
lret
mov
rcrl
pop
bound
cmp
arpl
lahf
dec
mov
rorl
pop
lret
loopne
jg
scas
mov
push
outsb
outsb
out
stos
inc
add
pop
cld
pop
es
cmp
or
insb
ja
out
cmp
jl
xor
mov
stc
mov
enter
or
les
popf
and
fs
out
sarb
cs
shlb
clc
jg
jecxz
mov
push
xchg
data16
inc
jne
test
out
fisubs
add
cmp
ljmp
or
cld
lock
fimull
cmpsl
pusha
jo
or
add
jne
shll
idiv
clc
xchg
mov
cmc
or
sbb
psllw
dec
arpl
mov
sbb
sub
dec
xlat
icebp
or
pop
sbb
add
add
inc
mov
adc
out
lcall
mul
push
loope
dec
jmp
xchg
das
jae
pop
roll
dec
out
sar
hlt
sub
inc
out
mov
mov
std
pop
xor
push
mov
enter
cmp
mov
push
pop
gs
lea
clc
lretw
mov
arpl
shlb
cltd
add
push
fcmovnbe
aas
push
loope
inc
xor
imul
sti
shlb
in
js
push
adc
push
pop
and
das
test
sbb
in
out
jno
rcr
jmp
lods
pushf
insb
out
jae
gs
sarb
out
jecxz
mov
aam
ret
pop
ret
les
fldcw
lret
popf
sub
inc
data16
int3
data16
fcos
dec
mov
adc
mov
push
shrb
ja
test
push
mov
inc
std
aad
je
lods
subb
push
fistpll
daa
cmp
arpl
fldl
and
test
idivl
jmp
test
movsb
fs
add
pop
mov
sti
adc
stos
cmp
mov
mov
mov
jg
push
pusha
mov
idiv
push
jbe
inc
and
push
test
and
pop
hlt
pop
add
in
xor
lahf
or
sub
std
and
in
mov
pop
jb
inc
es
adc
insb
jno
jne
mov
in
mov
push
cmc
ja
jle
pop
mov
mov
sbb
movsb
call
idiv
loope
jl
roll
push
pop
inc
stc
pop
jnp
aas
fdivrp
js
mov
lret
cmpsb
xor
sbb
ret
outsl
out
xorl
xor
aad
add
hlt
fucom
in
pop
pop
mov
mov
movsl
xorl
sbb
cmp
sub
mov
push
ret
imul
andl
int3
repnz
or
sbb
or
cmp
add
adc
outsl
ret
es
mov
mov
mov
out
sbb
or
jmp
mov
push
inc
ja
sbb
aas
sti
mov
mov
lods
and
outsb
fisubrl
and
inc
fwait
dec
add
dec
mov
std
sbb
push
shll
dec
lock
faddl
outsl
xchg
mov
pop
pop
jg
shlb
add
adc
xchg
clc
out
shl
lret
push
dec
mov
jmp
inc
mov
mov
inc
jbe
xchg
xor
sub
cmpsl
xor
lock
sub
je
out
jae
nop
pop
testl
dec
mov
jge
mov
imul
pushl
jmp
mov
int3
clc
cmp
sub
in
idivb
mov
sub
mov
fidivrs
es
in
pop
or
push
jmp
and
push
mov
pop
dec
or
aaa
mov
outsl
arpl
test
mov
scas
and
popf
push
inc
mov
es
jge
outsb
clc
mov
aam
int
lret
aad
push
pop
int3
push
enter
out
inc
jp
adc
and
or
bsr
fiadds
mov
mov
sbb
inc
inc
in
popf
xor
sbb
and
fdivrl
jecxz
shll
adc
xchg
mov
add
adc
adc
daa
cmp
jbe
aad
jge
jle
mov
call
aaa
cmp
mov
cmp
xor
inc
cmp
mov
sti
rcrl
dec
lret
cmp
sbb
test
sub
sbb
inc
add
adc
mov
je
dec
xchg
jecxz
or
std
push
mov
sub
arpl
fdivrs
mov
rolb
in
cltd
push
xchg
jae
popl
mov
and
push
jnp
mov
mov
push
xchg
inc
or
jge
addr16
xor
push
in
sub
stos
es
mov
jl
out
pop
jb
fwait
shrb
xchg
in
cmp
lods
aas
push
jmp
daa
ljmp
inc
loop
out
sti
jg
jecxz
jbe
push
ljmp
pop
out
mov
xchg
stos
xor
adc
inc
jbe
lds
sbb
push
fidivrl
loopne
inc
mov
xchg
lret
int
cmp
mov
xchg
sub
mov
fmul
push
or
sbb
mov
mov
daa
cld
lahf
pop
leave
popa
adc
test
call
pop
and
rorb
lock
pop
add
rcl
pop
out
out
jg
lahf
arpl
test
iret
scas
xorb
je
sub
or
orb
pushf
push
add
out
outsw
les
pop
adcb
push
cld
lcall
in
push
push
dec
stos
xchg
out
incl
xor
push
fistpl
add
jg
dec
xchg
cmp
lods
adc
shl
clc
push
xor
xor
andb
aas
lds
sahf
inc
enter
popf
inc
adcb
xchg
add
out
push
jbe,pn
out
adc
mov
lahf
dec
jg
fdivrp
push
stos
repnz
arpl
pusha
das
jge
push
jno
mov
xcrypt-ctr
mov
mov
dec
push
mov
inc
adc
xor
xor
shll
test
dec
adc
idivl
sbb
cmp
mov
push
les
sub
test
loope
adc
inc
lea
movsl
cwtl
or
pop
adc
adc
lcall
jecxz
mov
lods
add
push
xchg
pop
inc
push
in
push
cli
fisttpll
out
out
dec
xchg
imul
call
cmp
dec
aas
sub
pop
sub
cld
lahf
fimull
std
jmp
push
xchg
and
cmp
pop
pop
adc
aam
idivl
pop
cmp
pop
sub
adc
shl
push
outsb
negb
pop
mov
test
sub
sbb
test
jmp
push
cli
aas
call
push
mov
lock
pop
adc
mov
pop
mov
outsb
mov
jle
and
cmpsb
and
inc
enter
fcompl
orb
adc
mov
lods
imul
sbb
pop
stos
aas
test
sbb
push
jecxz
iret
xor
setnp
mov
mov
or
mov
scas
js
mov
fistps
sahf
mov
je
cmc
adc
and
fbld
sti
fildll
inc
outsl
jne
repnz
std
movsl
stos
fsubrs
into
or
jo
divl
cmp
mov
jecxz
fidivrs
enter
and
pop
fcom
or
cmp
inc
dec
leave
in
jbe
pusha
mov
int3
pop
xchg
mov
xchg
sti
out
rolb
sub
pushl
or
xor
imul
pop
jmp
int3
jg
inc
push
dec
jle
es
push
cltd
jno
adcl
cmp
jo
pop
jnp
andl
jnp
fwait
mov
or
or
pop
xchg
jne
in
sbb
mov
outsl
push
mov
jge
cmp
sbb
adc
cmpsb
icebp
mov
push
in
sbb
jecxz
loope
xchg
jns
jle
dec
jle
cmc
ret
adc
loopne
mov
lea
das
pop
add
mov
inc
das
cmp
xchg
push
jmp
std
aas
loop
jmp
cld
or
jns
jg
incl
dec
lret
rcrb
lea
lahf
push
pop
cmpb
les
pop
fdivl
mov
popa
xchg
inc
stc
into
or
sbb
outsl
out
mov
mov
outsb
adc
cwtl
fdivrl
inc
adc
insl
pop
sahf
lds
daa
cli
add
hlt
pop
sub
repz
jbe
mov
incl
xor
aaa
fwait
enter
push
outsb
pop
dec
push
mov
fdivr
test
bound
xor
sbb
mov
negl
fidivs
jb
lret
mov
filds
ds
or
xchg
sbb
and
jne
lods
lret
cmp
xchg
std
mul
ret
rcr
jecxz
out
mov
cwtl
jnp
jg
add
je
aam
mov
xchg
pop
dec
xlat
jl
and
pop
mov
cmp
or
or
or
mov
fistps
mov
aam
push
fwait
push
aad
shlb
js
call
push
test
aad
or
fbld
or
insl
mov
mov
pop
scas
jo
mov
xor
pop
cmp
push
adc
popf
add
hlt
and
pusha
mov
xchg
dec
xor
adc
loop
aam
sub
adc
mov
testl
ljmp
jg
dec
scas
hlt
ja
repz
and
movsl
and
xor
jmp
movsl
lods
pop
xor
xchg
cli
ja
push
xor
push
decl
lods
or
mov
cmpsb
std
or
pushl
imul
imul
les
sbb
loop
rolb
jp
or
xchg
xchg
fst
std
or
nop
sub
cmpsb
inc
rorb
jmp
scas
fucom
inc
sub
inc
out
inc
inc
in
fnstsw
aas
inc
inc
pop
ret
leave
jae
ja
jo
jecxz
fstps
push
decl
lock
aas
adc
push
fildll
xchg
lea
lods
loopne
fdivrs
and
xlat
insb
or
push
in
out
mov
xchg
pusha
xor
or
and
mov
pop
or
push
iret
inc
popf
mov
enter
cmp
pop
jg
adcb
repz
and
popf
and
jg
mov
mov
aam
dec
sbb
mov
inc
ret
pop
rcl
cs
inc
clc
mov
fimuls
push
xchg
inc
adc
dec
push
dec
jge
cmp
imul
cs
xor
push
in
mov
sti
inc
and
loopne
js
ljmp
mov
dec
dec
scas
mov
pop
mov
cld
xor
adc
jecxz
and
std
stos
jg
mov
icebp
lds
sub
mov
push
jns
nop
aaa
in
iret
adc
insl
lcall
pop
test
sahf
mov
ja
jle
mov
sbb
adc
std
pop
enter
pop
out
lret
aas
loope
fldcw
sbb
lea
mov
ds
sbb
push
clc
and
jne
or
add
outsl
add
sub
lcall
loopne
add
arpl
mov
ljmp
andl
clc
leave
xlat
mov
sbb
push
enter
daa
les
push
testb
mov
mov
mov
adc
sbbl
mov
xchg
push
hlt
push
int
add
testb
cmp
in
xor
inc
pop
dec
mov
fdivr
sub
add
sub
or
dec
inc
cmp
sti
push
or
sarl
pop
mov
rorl
loop
aas
adc
pushl
add
pop
jb
sar
idivb
adc
popf
loop
lcall
push
rorl
and
or
xchg
cmp
xorl
inc
push
dec
or
notl
mov
xchg
out
inc
mov
loopne
inc
repnz
lret
mov
shrl
mov
mov
cmc
ficoms
lret
ret
jo
stc
rcrl
jmp
pop
fidivrl
xor
jae
icebp
cltd
fiaddl
mov
mov
cmp
mov
loope
negl
mov
jne
cli
push
pop
cs
out
std
dec
rcrl
add
add
mov
ret
sbb
sbb
jg
pushl
cmp
adc
mov
push
ljmp
jne
xor
mov
xor
daa
or
inc
arpl
jl
dec
adc
push
sub
push
xchg
pop
rcrb
cltd
lret
pushfw
in
ljmp
jecxz
xor
std
sub
ficomps
xchg
push
outsb
std
mov
shll
sbb
fdivrs
fucomi
push
fisubrs
ret
or
mov
fwait
push
out
mov
or
jg
jg
rcll
add
scas
cmpsl
aam
mov
mov
rolb
ja
test
lahf
out
xlat
jg
shll
mov
fldcw
into
ret
dec
inc
sti
das
mulb
aaa
pop
les
fdivrl
push
testl
mulb
hlt
incb
icebp
popa
fmull
inc
adc
sbb
inc
sbb
add
in
add
mov
inc
loopne
outsb
jnp
pushf
pop
les
dec
movsl
inc
or
sub
jmp
xchg
call
xor
jle
aam
dec
andl
iret
arpl
lahf
aam
cmc
arpl
sbb
in
jmp
mov
aaa
test
add
jecxz
ja
imul
data16
xor
aas
shlb
lods
loopne
jbe
or
sti
out
push
fbstp
clc
xchg
test
ljmp
lcall
fcomip
push
js
and
hlt
add
jae
repnz
mov
sub
lahf
sub
sti
out
cld
in
and
adc
inc
push
lea
cmp
lahf
xchg
xchg
aaa
js
and
lock
mov
ret
and
loop
cmpsb
xor
stos
mov
je
pop
and
sbb
jecxz
mov
jg
lods
mov
jbe
add
sub
aas
lret
jmp
ret
xor
std
test
dec
div
jp
pop
sti
ja
fstpl
push
xchg
jnp
mov
adc
mov
jecxz
mov
cmp
ret
loopne
mov
and
adcb
gs
and
jg
mov
or
cs
pop
mov
das
leave
in
rorb
mov
idiv
outsb
sbb
adc
jo
mov
or
cmp
incl
sbb
or
add
jge
into
and
xchg
sub
dec
ljmp
out
gs
mov
pop
js
stc
sbb
addr16
data16
mov
aaa
int
jns
pop
int3
fwait
or
sub
mov
test
sbb
clc
testl
inc
pushf
cmp
sbb
mov
movsl
std
jno
fdivp
adc
dec
std
sbb
push
sbb
or
fwait
jnp
push
fadds
push
stos
pop
mov
cmpsb
xor
xor
outsl
jo
rcrl
notb
test
sub
sub
pop
cmp
loopne
cld
iret
and
sbb
inc
dec
les
mov
test
and
fsubl
mov
mov
das
add
ljmp
cld
bound
push
test
clc
test
cmc
sub
adc
out
cmp
popa
jp
arpl
out
xchg
inc
jae
xchg
xor
xor
in
push
inc
mov
decl
lock
jle
mov
aas
push
cmp
jge
dec
adc
mov
cmp
idivl
in
mov
mov
cmp
not
dec
idivb
cmp
mov
clc
ja
push
sar
out
and
adc
clc
scas
in
adc
push
mov
lods
xchg
out
and
out
sub
shll
xchg
dec
icebp
mov
pop
mov
test
lret
cmp
idiv
xchg
hlt
test
das
add
and
mov
pop
cmp
fldenv
stc
push
icebp
mov
mov
cld
imul
out
push
enter
pop
or
mov
cmp
adc
ljmp
hlt
and
js
cmp
stos
hlt
and
test
sub
cmp
ss
jo
std
inc
in
aas
xor
call
inc
test
out
lock
scas
sbb
mov
ret
call
xor
int
and
sbb
popf
pop
sub
pop
mov
ljmp
iret
dec
sarl
dec
jae
in
aaa
jno
xor
in
sbb
idiv
mov
das
outsb
sub
mov
mov
dec
fsub
adc
cli
pop
pop
pop
jmp
and
leave
pop
lret
pop
or
push
lret
push
fs
idiv
mov
push
mov
mov
outsl
adcl
mov
jle
scas
ds
popf
ja
cld
sbb
pop
pop
pop
aad
aas
icebp
cmpb
dec
jae
cmp
es
cmp
push
inc
ljmp
outsl
in
mov
pop
xor
xlat
test
test
loop
div
shrb
inc
xor
and
arpl
call
sbb
ret
cmp
mov
sub
mov
call
in
push
mov
sbb
movsb
push
idivl
sar
sub
ja
fs
out
inc
mul
in
inc
movsb
lods
incl
dec
cli
iret
mov
aaa
cmpl
addr16
out
data16
mov
rorb
xor
ljmp
adcb
lds
shrl
adc
test
jnp
neg
jecxz
push
sub
jge
out
sbbb
out
push
cltd
push
jp
loop
popa
jbe
jp
mov
fcomp
add
adcl
sub
ja
movsb
cmp
lcall
jmp
sub
xor
or
jmp
stos
lea
decl
xor
stos
sbb
sub
sbb
mov
incl
push
jmp
add
lods
dec
std
xchg
sti
cwtl
sbb
and
aam
bswap
adc
lea
lret
loope
or
dec
mov
orb
xchg
imul
fisubrl
idiv
mov
les
sub
pop
jmp
sbb
mov
aas
mov
ret
xor
mov
pop
push
rcrl
push
jmp
cmc
in
cwtl
les
sub
sbb
mov
orl
enter
mov
jp
mov
and
xchg
mov
fs
enter
xchg
mov
arpl
inc
outsl
inc
hlt
jecxz
push
mov
loopne
ja
popf
push
fcmovne
adcb
daa
push
push
ljmp
jmp
lcall
std
ljmp
xor
ds
fildll
out
jge
ljmp
loopne
sbb
xor
cmp
mov
inc
popa
cmp
push
std
inc
mull
adc
or
mov
cmp
in
subb
shlb
es
std
adc
das
or
jecxz
pop
mov
ficoms
pop
mov
and
sub
pop
int3
inc
in
xchg
adc
jg
jg
cwtl
xchg
and
pop
outsl
stos
insb
inc
mov
clc
xor
sub
and
jg
mov
aas
mov
aad
sbb
sahf
out
push
pop
std
jnp
daa
jo
push
stos
aas
mov
push
movsb
inc
xor
and
mov
shl
sub
fs
iret
cmpsb
inc
gs
pop
sti
pushl
imul
adc
cmp
inc
movsb
jg
ret
and
sub
push
sbb
addr16
cmp
jae
pop
scas
pop
push
dec
pop
sbb
addr16
jg
inc
mov
jl
fstpl
scas
jmp
pop
xor
pop
lcall
push
cli
cmpsl
xlat
ja
inc
jle
jmp
rcrb
xlat
lcall
fsubrs
adc
inc
jg
lock
and
adc
jg
push
adc
xchg
pop
dec
inc
mov
jg
cld
mov
adc
pop
xlat
pop
jge
je
jnp
mov
icebp
xchg
jae
ret
lcall
inc
jno
and
or
mov
sbb
aaa
jg
adc
push
imul
add
sti
test
iret
daa
popa
sub
fadds
pop
lahf
rorb
mov
sti
ffreep
mov
jg
inc
rorl
add
lock
pop
sbb
stos
lods
add
adc
add
pop
cmpsb
scas
and
jg
or
jae
imul
fcompl
and
int3
repz
sbb
or
jg
out
sub
add
lods
daa
repz
int
in
movsbl
xchg
ret
mov
mov
ja
lea
rolb
mov
mov
pop
dec
inc
jmp
jge
das
pop
sbb
mov
mov
jne
or
call
mov
lret
leave
call
sub
add
hlt
call
icebp
or
dec
jnp
push
cmc
cmpsb
lods
lret
xchg
adc
xlat
setp
out
cmc
lahf
loope
mov
xor
pop
in
jl
orl
lock
into
std
subl
loop
sti
aad
out
or
jno
mov
lcall
into
inc
cmp
dec
push
out
cs
stos
or
sbb
lahf
fdivrl
and
mov
mov
fisubrs
mov
pusha
leave
adc
popf
pavgb
push
hlt
push
icebp
push
adc
sbb
idiv
mov
pop
test
xor
repnz
sbb
stos
outsb
daa
out
lea
cs
jne
cmc
cmc
and
pop
fistps
xor
and
jg
incl
aad
cmpsl
lcall
ljmp
cwtl
pop
cmp
cmp
lods
test
push
jbe
and
sub
jmp
popa
or
int
xchg
call
dec
loop
xchg
sbb
mov
fisttps
fs
push
sbb
xchg
and
xchg
test
sbb
lock
xchg
mov
jmp
push
jecxz
arpl
mov
jae
jle
loope
cmp
cs
popf
in
outsl
lds
inc
lahf
sti
push
cmp
add
and
test
into
in
fcos
lods
jmp
int
xor
cmp
outsb
pop
loop
mov
jmp
icebp
jmp
pusha
xchg
adcl
and
pop
popa
arpl
adc
out
mov
inc
adc
jne
in
mov
xor
jbe
or
push
or
popa
cmp
add
adc
in
jns
gs
popa
outsb
mov
dec
lahf
lret
jbe
iret
sub
test
xor
cmpsl
pop
sbb
sub
cli
leave
pop
pop
xor
jb
adc
loopne
fidivrs
and
lods
mov
incl
decb
aas
and
repnz
sub
divb
call
test
adc
popf
mov
rorb
or
lods
in
call
sarl
jg,pn
fisttps
int
roll
jp
int
or
fmuls
pminub
jns
pop
jg
notl
jae
pop
repnz
inc
test
mov
aas
pop
jl
stos
stos
cmp
daa
rcl
mov
add
lds
fistl
out
addr16
cli
fbstp
jle
fwait
movsl
pop
and
pop
push
pushl
sti
fcoms
leave
mov
dec
lea
adc
ficomps
pop
sbb
inc
jecxz
or
and
mov
subl
xchg
mov
ret
mov
dec
fwait
add
adc
movsb
movsl
dec
test
adc
dec
jge
mov
insb
dec
or
cmpsl
cmp
in
jecxz
pop
icebp
mov
sbb
push
sub
push
inc
mov
or
in
lds
xchg
jg
mov
cmp
out
rorb
dec
pop
xor
cmp
xchg
cli
jp
idiv
add
xchg
adc
jae
cmpsl
shlb
cwtl
mov
cmpsb
adc
int3
int
pushf
cmc
gs
xor
ja
mov
not
dec
pop
mov
out
cmp
sub
mov
fbstp
popf
push
sbb
arpl
mov
fs
jle
shrb
mov
aam
loope,pt
test
jmp
les
or
xchg
jg
aam
movsl
and
test
test
in
sbb
iret
std
or
aad
mov
or
xchg
es
mov
jmp
xor
or
cmp
clc
cmp
mov
pop
ficoms
jno
cmp
pop
xchg
jno
mov
inc
out
idivl
fstps
std
ret
into
pop
addb
push
lock
pop
mov
inc
mov
shrl
mov
pushf
push
mov
cmp
xchg
loopne
fdivl
clc
sahf
je
ret
subl
popf
nop
jmp
std
fmuls
xchg
mov
ljmp
lock
or
pop
cld
cld
js
pop
hlt
adc
outsl
pushf
or
pop
scas
inc
xchg
pop
test
push
je,pn
add
stos
insl
call
lock
mov
push
sbb
fistps
add
push
sbb
xchg
ss
cmpsb
cs
incl
cmp
aaa
out
andb
xchg
mov
hlt
cli
rcrl
sbb
mov
imul
cli
or
and
and
nop
cmp
je
in
and
insl
mov
icebp
jg
cmc
push
cli
dec
and
jmp
dec
ljmp
or
call
adc
jg
push
adc
dec
repnz
lret
out
popf
lods
xor
out
aam
scas
pop
mov
imul
add
cmp
insb
filds
jmp
loope
inc
outsl
pop
cmc
pop
clc
out
std
xchg
movsb
aaa
lods
mov
sub
inc
xchg
sbb
rcr
sub
jle
jle
scas
pop
mov
cmp
imul
setbe
aas
dec
adc
addr16
inc
aas
bound
add
fwait
mov
fsubrs
in
jle
scas
movsl
loop,pt
dec
scas
in
loopne
sbb
js
lcall
shll
cli
jmp
dec
add
mov
loope
cmp
mov
cmp
dec
jge
in
xor
or
or
in
dec
les
sub
mov
std
js
mov
decl
out
sub
adc
sbb
fidivs
stos
pop
aad
dec
push
push
sub
pop
push
mov
or
cld
movsl
jnp
xchg
jnp
or
push
dec
fiaddl
aad
mov
mov
roll
fildl
add
inc
mov
icebp
ja
clc
insb
inc
dec
mov
inc
mov
mov
fwait
or
ljmp
sub
cs
fdivrp
fimuls
jp
cmp
in
lds
aaa
mov
and
adc
push
std
or
cli
fsubrs
xor
loope
add
int
pop
ret
test
xchg
stos
cmpsb
setno
fdivrp
sub
fadd
ss
and
jg
sarl
dec
adc
jo
loope
ret
adc
js
ret
out
ja
out
cmpsl
xor
xor
and
int3
jnp
push
fwait
jp
jg
xor
jo
lds
add
lcall
push
int
leave
push
bound
dec
pop
mov
aas
mov
jp
ret
sahf
jb
mov
xchg
xchg
fidivrl
ret
pop
xor
frstor
sbb
sub
sbb
add
pop
cmpsb
xchg
xor
out
cmc
push
mov
std
xchg
cmp
jl
cmp
cmp
sti
iret
std
jg
mov
decb
cwtl
mov
outsb
mov
mov
inc
pushf
daa
cwtl
xor
decb
push
cltd
icebp
or
std
rorl
jg
bound
not
lahf
pop
mov
mov
pop
pop
sbb
insb
cmp
int
mov
sub
mov
pop
or
aam
pushf
adcb
addr16
pop
jle
out
and
push
in
mov
inc
xor
test
mov
call
cmc
aas
mov
sbb
mov
les
adc
lcall
inc
pop
ljmp
mov
outsl
ret
and
sbbb
and
pop
fdivrl
or
call
mov
add
cld
push
pop
stos
call
imul
sti
pop
sub
mov
pop
lret
add
pop
andb
imul
movsb
xor
call
mov
icebp
and
mov
cmpsl
fsts
std
xchg
addr16
jmp
mov
xor
shr
push
pusha
icebp
pop
lret
rorb
leave
popf
das
inc
inc
lock
std
pop
cmp
es
jbe
cmp
iret
xchg
out
rcrb
dec
inc
cmp
ret
sub
mov
add
lods
mov
ja
jno
ja
movsl
mov
clc
and
adc
aaa
inc
stc
les
mov
pop
sub
inc
int
or
sbb
es
jbe
inc
adc
shl
decl
xor
outsb
inc
repz
dec
adc
mov
lea
sbb
xorb
test
ja
repz
jge
jae
jecxz
cmpsb
lock
in
lock
loope
test
inc
add
dec
cli
push
dec
mov
lret
cmp
xchg
clc
outsb
outsb
enter
jg
imul
sub
ss
enter
fiadds
fisttps
es
fdivr
xchg
out
lret
fisttpl
lods
push
sbb
or
jno
daa
shll
subl
stos
aam
jmp
or
test
in
xchg
adc
dec
xchg
xchg
push
cmp
push
push
iret
dec
leave
inc
lock
iret
loopne
dec
jns
mov
fistl
in
push
cmp
rorl
lret
dec
cli
hlt
xchg
add
cmpsl
arpl
inc
mov
push
sub
in
jg
or
add
in
cli
lahf
inc
std
outsb
dec
sbbb
xchg
dec
mov
pusha
cmp
fnstenv
mov
fmuls
fistpll
inc
bound
fisttpll
cmpsb
in
mov
aad
lcall
cmc
daa
out
pushf
cmpsl
mov
mov
pop
and
ljmp
addr16
insl
push
mov
lea
xchg
aad
test
insl
out
add
mov
inc
mov
mov
push
or
pop
xchg
jp
movsb
push
sbb
or
popf
cltd
or
jg
int
hlt
mov
jg
out
pop
getsec
mov
pop
loop
dec
pop
sti
inc
loopne
aas
icebp
and
dec
ja
jg
pusha
xor
mov
daa
dec
not
xchg
es
cli
jg
testl
fists
call
inc
mov
sbb
xor
test
dec
fisttps
inc
cmp
jne
push
stc
ja
mov
push
pop
and
lock
or
add
out
push
cmp
mov
cld
ja
in
shrl
xchg
enter
scas
pop
out
jbe
jns
sarl
mov
hlt
pop
add
mov
scas
pop
and
pop
jmp
xchg
in
mov
out
cltd
mov
push
mov
and
sub
test
xor
stc
xchg
je
or
inc
jae
sbb
sub
inc
incl
jp
jge
jl
aad
ret
pop
sti
jmp
outsl
mov
xchg
ss
fmuls
xchg
jno
jle
std
jbe
mov
fwait
xor
xchg
push
das
mov
mov
loopne
bound
and
cmc
dec
push
les
test
jmp
lea
fidivs
sub
lcall
das
pop
add
cmp
fsub
mov
xor
pusha
movsb
dec
fsincos
dec
out
pushl
in
fcoms
jp
sub
lods
cmp
fistpl
aas
xor
push
push
shlb
dec
pushl
xlat
std
cmpsl
xchg
cmp
lods
and
fsubrs
icebp
mov
dec
add
fcoms
mov
aas
xchg
jnp
fld
sti
clc
jmp
out
cmp
dec
or
aas
out
inc
rcl
in
testb
jle
cmp
lcall
in
leave
in
jno
in
ljmp
aaa
sbb
lock
loope
frstor
pop
inc
mov
fs
test
or
inc
icebp
ret
mov
ja
aas
filds
insb
rorl
in
sub
in
cmp
lahf
shlb
call
xchg
add
fcoml
dec
mov
enter
sti
pushl
sub
xchg
mov
mov
jbe
jmp
mov
and
sub
iret
pusha
hlt
fucomp
inc
adc
popl
jae
or
stos
mov
xor
mov
jg
popf
and
and
loopne
push
sarl
fistps
stos
loopne
sbb
pushf
dec
cmp
test
xchg
and
fucomp
or
lcall
data16
or
mov
jno
or
sbb
pop
push
jecxz
aas
js
pop
in
or
fs
addr16
insl
les
xchg
arpl
ljmp
pop
dec
incl
into
push
jb
pop
or
clc
sub
mov
incb
gs
fdivr
lock
fcmovb
mov
movsb
in
fistpll
sbb
jge
insl
int3
adc
xor
cmpsb
negl
cltd
pop
xchg
mov
das
jo
sbb
dec
movsb
es
rcrb
cwtl
xlat
lret
leave
inc
in
cmc
popf
sti
call
push
cltd
je
orl
cwtl
pop
or
mov
outsb
lcall
lahf
lock
cltd
push
adc
lods
mov
inc
push
movsl
jne
cmp
xor
or
loope
cmp
scas
add
pop
std
mov
std
popl
std
fwait
int
push
sbb
add
mov
lahf
les
sub
stc
cmp
sbb
lahf
sti
adc
test
std
int
xor
pop
mov
mov
push
outsl
stc
or
ja
mov
or
ss
fidivl
mov
push
repnz
push
addr16
sbb
lods
ljmp
clc
adc
shlb
sub
jg
iret
test
iret
lret
inc
imul
in
pop
jne
push
test
ja
and
mov
xor
fdivl
icebp
xchg
pop
icebp
jno
mov
fcom
jo
icebp
adc
add
repz
fisttpll
jae
popa
clc
xor
scas
mov
sbb
inc
push
cs
adc
fucomip
leave
mov
cmc
push
mov
ss
popf
adc
xor
fsts
cmp
clc
mov
enter
jg
mov
loope
lret
les
xchg
sub
js
dec
ljmp
push
shl
or
xor
inc
or
cli
pxor
inc
mov
clc
mov
cmp
pushl
ret
aas
or
ja
mov
cmp
mov
lahf
mov
call
out
sahf
jno
leave
sbb
adc
xchg
ja
sub
xor
stos
daa
out
bound
mov
les
jno
mov
jmp
loope
xor
pop
loopne
mov
inc
clc
jp
sub
sahf
xor
loope
aad
icebp
in
mov
gs
inc
cmp
dec
push
movb
fcom
bound
push
cmpsl
cli
pushl
push
data16
daa
inc
arpl
decb
push
dec
cmc
dec
shll
mov
andb
popf
add
out
std
or
addr16
and
scas
sbb
mov
stos
jmp
daa
fwait
pop
fsts
test
mov
push
idiv
aam
shl
pop
adc
loope
in
stos
bsf
and
hlt
or
sbb
pop
push
jle
lods
lret
out
mov
mul
and
mov
jmp
bound
sbb
jb
xchg
mov
aas
and
hlt
xor
jmp
std
ret
notb
cld
mov
insb
dec
out
mov
cmp
adc
adc
or
adc
rolb
pop
int
out
mov
aad
daa
sbb
ja,pn
loope
jg
jle
and
adc
or
pushl
or
cwtl
cwtl
rcrb
cld
pop
out
and
mov
popa
or
fdivrp
arpl
sti
sub
dec
pop
jb
ljmp
mov
jno
lods
adc
sti
pusha
les
jg
lds
pop
loop
mov
jmp
fstpl
fdivrs
ja
xor
push
sti
into
push
and
pop
mov
adc
movsl
sub
pop
cld
mov
cmp
mov
mov
test
xor
shl
adc
bound
stos
sbb
inc
icebp
insl
mov
sbb
jle
xor
cld
cli
push
ror
test
mov
decl
and
dec
out
imul
repnz
xor
sub
call
sete
in
cmc
adc
sahf
ljmp
jge
mull
or
and
es
mov
lcall
test
das
jmp
out
pop
push
push
dec
and
cld
push
std
stos
inc
in
sbb
push
cs
jmp
mov
and
jl
mov
push
or
mov
insb
dec
push
insb
in
mov
adc
in
jnp
adc
test
loop
or
cmpl
cmpsb
popa
push
repz
decl
aaa
mov
mul
xor
adc
int
xchg
rolb
mov
cwtl
add
aaa
add
das
testb
out
loop
pop
cld
fidivl
sub
cld
mov
bound
ss
push
jno
xor
out
stc
mov
mov
insb
mov
inc
lcall
adc
sarb
fcomp
inc
jno
out
sahf
jbe
add
mov
jbe,pn
mov
lods
repz
sti
mov
in
add
test
sti
jno
les
call
adc
je
addr16
pop
fisubl
jnp
mov
decb
dec
push
jo
sbb
push
mov
decl
inc
je
jge
mov
decb
sbb
add
int
pop
movsl
ret
dec
lea
fistps
xor
cli
addr16
xor
mov
in
dec
ljmp
andl
out
adc
out
in
mov
ret
sahf
dec
outsb
pop
js
push
test
stos
loopne
xor
std
push
test
notl
xchg
mov
push
rcl
and
decl
sbb
xchg
mov
mov
push
push
or
or
dec
rcll
incb
outsl
or
ltr
addr16
xchg
xor
lock
jo
mov
pop
lcall
ret
hlt
ja
xchg
sub
mov
ljmp
testb
pop
ret
imul
or
sti
sarb
rcl
stos
addb
push
imul
add
ret
jae
jmp
lock
gs
mov
bound
mov
pushl
xchg
mov
mov
dec
loop
out
inc
ret
out
lea
rclb
xchg
jb
xchg
sbb
cli
jb
sar
mov
lock
adc
call
adc
pop
inc
out
mov
xchg
mov
repnz
out
aas
mov
lds
jo
imul
mov
notl
loop
adc
leave
xchg
lret
mov
or
ja
adc
or
add
add
subl
call
adc
sar
inc
loop
add
stos
lahf
sti
dec
mov
cmp
cmp
and
sbb
xchg
repnz
ljmp
inc
ret
scas
add
xchg
jecxz
nop
cmp
scas
dec
pop
mov
inc
cmp
bound
lds
cmp
insb
cmp
pop
shll
sub
pushf
inc
divb
jle
xchg
std
pop
jmp
xchg
ret
arpl
inc
jmp
out
pop
cmp
push
pop
shrl
out
lock
pop
ret
outsl
xchg
fsubrs
gs
out
std
lahf
mov
sub
push
push
into
and
jp
add
push
cld
nop
push
add
xorb
std
pop
push
or
and
inc
inc
jnp
ret
sti
xor
mov
push
and
cmc
cwtl
aam
mov
popa
test
mov
mov
push
mov
div
lahf
fdivr
xchg
add
pop
out
sbb
loope
add
mov
jge
push
sub
out
cmpsl
outsb
jg
jl
sahf
mov
push
insb
xor
jp
dec
mov
fs
repz
addl
adcl
repz
or
and
jns
outsl
rolb
ds
mov
mov
dec
adc
sub
adc
mov
dec
xor
loope
out
dec
jbe
xchg
sbb
mov
aas
inc
adc
and
jne
push
inc
fyl2x
jg
pop
jo
mov
inc
ror
add
sub
xchg
mov
fcomp
shll
roll
inc
loope
cli
pop
cmc
ja
cld
or
cmp
pop
psubq
mov
divb
or
push
jg
out
fsubrl
lods
or
mov
addr16
pop
sti
and
mov
lahf
bound
mov
pop
xor
fisttpll
cmpsl
inc
pop
out
jno
neg
roll
fnstsw
sti
out
cmp
out
sbb
lahf
movsb
ljmp
cmc
movsl
inc
jns
sbb
andb
mov
adc
orb
hlt
out
outsb
pop
push
repz
icebp
or
and
mov
add
xor
ret
ret
dec
push
cmp
shrl
sbb
clc
and
mov
jecxz
int3
call
jnp
sbbb
repz
push
mov
insl
addr16
imul
adc
sub
dec
pop
add
icebp
test
ficoml
lea
std
iret
cld
mov
jne
sbb
xchg
mov
into
push
iret
jns
out
dec
mov
icebp
rcrl
sbb
add
mov
call
push
jns
out
mov
mov
mov
adc
dec
negl
jle
lret
xchg
pop
sub
call
xor
out
sub
enter
xchg
mov
pop
jbe
xchg
mov
xchg
xor
je
js
lock
xlat
clc
out
sti
incb
and
fdivrs
add
push
aas
and
cmpsl
mov
pop
fidivl
and
aas
push
subl
outsl
mov
inc
mov
lds
sbb
or
jmp
arpl
incl
std
mov
rorl
popa
stos
fidivrs
jge
fistpll
popf
pop
push
int
sarl
sbb
mov
addr16
lret
jnp
pop
push
repnz
inc
mov
cmp
mov
int
push
mov
daa
out
and
sub
sub
jo
xchg
pop
inc
cmp
sti
adc
add
mov
cmp
dec
cmpsb
testb
sub
xchg
aaa
pop
push
cmp
outsl
jno
and
mov
cmp
imul
mov
xchg
ljmp
or
adc
adc
jmp
fwait
xchg
icebp
mov
popa
and
pop
mov
fbld
add
rclb
mov
lods
mov
stos
jnp
mov
inc
pop
insl
int
clc
sbb
fbld
mov
int3
jle
in
mov
ljmp
add
sarb
xor
data16
fwait
loope
pop
and
gs
jmp
ljmp
cmp
mov
test
repz
in
pusha
orl
or
shll
pop
cmpsl
out
fimull
ret
fstl
aas
xorl
arpl
out
into
rorl
fdivrp
sbb
xchg
imul
loop
adc
sti
inc
lock
ret
add
mov
ja
test
fs
dec
iret
add
sbb
or
aaa
pop
aaa
cmp
xchg
mulb
movsb
call
daa
and
popf
jle
les
lds
daa
aad
pop
adc
les
mov
xchg
xchg
bound
daa
inc
scas
out
sarb
cwtl
add
std
pop
gs
dec
icebp
jnp
lahf
jae
out
lds
jbe
fstpt
into
dec
pop
popa
idivb
inc
jmp
and
sbb
or
jl
addr16
push
mov
dec
xchg
dec
inc
mov
in
xor
pop
loop
fdivs
dec
ds
lahf
add
fdiv
dec
lcall
sbb
lret
push
mov
hlt
pushf
in
cmp
lds
mov
rclb
inc
aaa
cmpb
pop
jnp
std
ja
jg
and
inc
hlt
jp
sub
jmp
add
nop
jl
repnz
adc
dec
mov
jle
stos
lods
jle
mov
lods
mov
push
jge
clc
xor
push
mov
adc
sbb
pop
add
add
pushf
xlat
cmp
inc
or
lahf
icebp
mov
cmp
cmp
mov
cmpsb
mov
fnsave
lcall
icebp
dec
cld
mov
sub
push
add
pop
sbb
inc
jg
push
mov
cwtl
fstpl
mov
or
movsl
sahf
jb
nop
cmp
sbbb
mov
pop
lea
cmp
jmp
push
outsb
mov
mov
jmp
sub
mov
insb
dec
imul
cmc
out
pop
stc
out
sbb
push
in
cmp
pop
or
loopne
in
pop
and
jmp
out
lock
xor
sbb
cmp
dec
clc
scas
rcll
fistpll
pop
aam
or
and
and
roll
hlt
dec
cmpsl
adc
je
jg
sbb
lahf
sbb
jl
ss
push
stos
mov
mov
xchg
mov
std
daa
in
and
lcall
ljmp
inc
and
or
outsl
hlt
lret
stos
cli
push
aas
sbb
jmp
cmpsl
jg
decl
pop
mov
push
call
mov
inc
add
clc
push
cmc
fbld
dec
std
cmpsl
pop
jae
push
stc
cmp
hlt
daa
lock
push
xor
popf
and
and
rcr
xor
pop
outsb
or
push
pop
mov
out
ficomps
data16
push
ja
in
out
std
idiv
lea
stc
push
popa
push
inc
faddl
mov
aam
ljmp
std
mov
xchg
cmp
cli
aas
mov
lret
cmp
shll
fstpt
adc
in
sbb
xor
jl
jg
mov
mov
inc
orb
ret
aas
adc
cltd
lock
add
push
aaa
mov
add
outsl
loop
cmp
ret
imul
cmp
cmp
jbe
mov
add
cmp
sbb
sbb
incl
data16
out
jge
push
ljmp
mov
xor
test
jp
adc
sub
inc
xchg
rol
jmp
call
adc
cmpsb
dec
adc
adc
inc
outsl
push
inc
mov
ret
and
js
aam
clc
inc
pop
cs
push
or
adc
mov
les
hlt
cmp
and
fiaddl
push
push
cld
xchg
out
andl
and
sub
lock
rclb
mov
pop
ficoms
lahf
cltd
jge
repz
bound
xchg
pushf
orl
jg
aam
jo
int
dec
and
or
aam
lds
subl
aaa
mov
fdivr
push
test
dec
leave
in
jge
add
hlt
pop
imulb
mov
out
sti
decl
push
loopne
into
and
js
and
stos
xor
cmpb
sub
std
inc
mov
inc
jl
insb
xor
in
cli
or
pop
imul
fidivrs
and
sub
jle
cmpsl
pushf
adc
ljmp
test
dec
add
inc
add
pop
test
lock
std
ret
and
jg
outsl
stos
imull
xchg
popf
out
jg
pop
add
insb
in
cmp
sbb
fiadds
xor
adc
popl
jg
or
int
enter
add
mov
pusha
mov
out
ret
sub
lret
pop
cmpsl
lret
outsb
mov
hlt
fucom
loope
int3
push
xor
out
lret
add
and
adc
cltd
cmp
iret
inc
stos
jp
pop
jg
lea
movsb
cmp
jg
cmc
lcall
rclb
jbe
xchg
das
dec
dec
cli
int3
jnp
icebp
test
aam
aad
pop
loope
js
xor
pop
mov
sub
jg
jbe
repz
add
repz
loop
testb
push
push
mov
hlt
pop
sub
and
cmp
mov
test
addr16
lcall
test
lock
adcl
mov
lcall
xchg
mov
aas
push
cmpsl
loop
push
pop
sub
je
adcb
test
fmuls
frstor
mov
das
dec
rclb
decl
loope
sub
inc
lods
sti
push
out
daa
ss
cmpsl
jge
pop
jg
xchg
mov
jae
or
pop
jecxz
clc
xor
inc
inc
cmp
jg
sub
jmp
mov
xchg
fnsave
popa
mov
hlt
mov
mov
sti
push
adc
mov
adc
mov
js
inc
ret
jl
jl
les
mov
inc
std
das
adc
mov
outsb
jnp
or
nop
es
inc
clc
xchg
cwtl
nop
add
push
push
jge
jg
push
mov
dec
fs
sub
iret
push
dec
outsb
mov
cmp
loopne
mov
stos
sbb
inc
pop
mov
movsb
fsts
int
fs
jmp
call
scas
xor
scas
adc
imul
mov
inc
addb
push
loope
push
sbb
insl
jp
sbb
decl
mov
lds
jnp
mov
rcrl
dec
xadd
adc
rcrl
stc
cmp
xor
insl
jnp
mov
pop
jo
jmp
lds
xchg
jecxz
adc
aad
xor
mov
jnp
fdivrs
roll
aas
idiv
loope
adc
xor
sub
push
jns
pushl
pop
pushf
fdivrl
pop
or
hlt
fidivl
lods
sti
out
hlt
frstor
push
inc
or
xchg
test
mov
std
out
lock
xlat
outsb
mov
inc
insl
sub
sahf
xor
lahf
adcb
mov
cs
jp
add
xchg
cmpb
insl
call
jno
js
mov
in
push
sub
std
idiv
and
and
sbb
adc
dec
hlt
cmp
arpl
cmp
sbb
rclb
out
scas
dec
push
jle
scas
xchg
cmp
outsl
out
jmp
inc
ss
shll
loopne
enter
popf
sbb
cld
sbb
pop
stos
pop
das
cwtl
pushf
or
pop
out
jg
cli
push
mov
jmp
mov
xchg
adc
push
jg
add
mov
cmpb
pop
ljmp
or
decl
push
sub
mov
std
iret
cld
decl
sbb
jns
mov
fistps
mov
icebp
cs
cmc
sub
scas
push
push
cmpsl
test
cs
push
aas
mov
push
icebp
mov
enter
out
add
in
sarl
mov
mov
fdivrl
and
jae
repz
pop
adc
mov
cmpsb
sub
imull
lar
mov
popf
xchg
std
ja
and
jbe
push
pop
dec
push
stos
or
push
and
dec
std
incl
out
ljmp
sub
mov
jmp
sbb
mov
mov
adc
sbb
jbe
push
pop
sub
push
mov
out
icebp
pop
out
push
lret
sbb
sbb
cmp
leave
flds
mov
notl
test
hlt
jns
pop
cli
mov
cmp
into
inc
inc
fists
aaa
cwtl
jg
jmp
loopne
pop
ret
jnp
pop
shr
adc
ja
ret
mov
mov
add
rclb
es
mov
lods
fs
cmp
add
cmc
lcall
sub
or
lods
dec
scas
or
push
jns
adc
stos
repnz
sub
sbb
cmp
cmpsl
jbe
subl
cmp
aas
in
stos
test
aad
arpl
ret
loope
push
jg
inc
fdivp
xor
jecxz
mov
jb
push
out
xor
filds
test
dec
fdivr
sbb
jo
insl
dec
scas
clc
out
push
mov
mov
jmp
pop
dec
mov
rcl
jo
cmp
clc
push
add
pop
aas
mov
mov
pop
mov
mov
xchg
dec
aaa
fsubr
mov
mov
std
mov
xor
incl
push
xor
arpl
test
fdivl
mov
mov
sbb
jmp
in
inc
mov
add
test
ljmp
pop
mov
dec
leave
test
lock
push
in
pop
jmp
inc
mov
cmp
cmpsb
xchg
imull
mov
aas
idiv
pop
inc
out
lcall
sbb
or
xchg
insb
jbe
fsubr
push
cmp
jo
jl
adc
rorl
sahf
and
cmp
in
cmpsb
adc
adc
ret
ss
aam
push
pop
mov
loope
test
jo
pop
into
in
insb
mov
insl
out
outsb
adc
lret
adc
inc
jb
lahf
cmp
dec
add
sar
movsb
mov
inc
sub
jl
in
and
sub
daa
push
mov
push
rolb
cmp
js
add
jg
rorl
or
lds
dec
popf
out
push
std
or
and
fbld
jb
sub
dec
dec
pop
sbb
insl
stos
clc
push
sbb
ja
push
aam
das
xlat
inc
lcall
decl
clc
and
cld
fld
ljmp
inc
movsb
into
scas
test
inc
push
incl
loope
andb
adc
jecxz
dec
das
pop
bound
sbbb
loopne
fldt
dec
imull
inc
aaa
int
mov
mov
jl
adc
jp
into
xchg
cmpl
mov
or
insb
adc
cmpsl
fsubs
adc
loopne
mov
mov
jge
scas
cmpsb
sarb
jg
clc
fstp
xlat
jbe
push
adc
js
xchg
pop
gs
inc
pop
insl
and
dec
movsb
dec
mov
mov
add
aam
mov
xchg
jmp
movsb
jnp
aas
sbb
adc
ja
or
and
inc
sub
imul
mov
stc
repnz
sub
jmp
bound
adc
jnp
xor
dec
lret
clc
lcall
push
dec
lock
fs
xor
and
mov
repnz
adc
jecxz
sub
dec
mov
addr16
jg
sub
and
xchg
cld
popa
cld
add
mov
test
clc
pop
fnstsw
jmp
lock
gs
mov
sub
jl
data16
xchg
mov
push
push
imul
adc
jae
js
mov
outsl
pop
icebp
dec
cltd
lahf
or
push
ljmp
xchg
jbe
fiaddl
push
xlat
cmp
pop
add
cld
les
loope
aas
cmp
push
jle
stos
mov
pop
scas
push
jo
inc
xchg
mov
mov
dec
nop
adc
jnp
js
sbb
loop
std
jp
out
xchg
mov
insb
sahf
ret
faddp
pop
jnp
cs
daa
daa
out
pop
sbb
pop
iret
mov
lahf
sarb
xor
fwait
xor
fisttpl
cmp
push
push
add
stos
jle
mov
push
test
xchg
sbb
fisttpl
cld
lahf
sbb
jg
mov
push
das
mov
rolb
clc
and
and
push
xchg
std
es
jb
lahf
lret
std
and
daa
mov
movsb
insb
cmpl
mov
jno
mov
xchg
xchg
repz
jg
push
push
mov
fiadds
outsl
test
cmp
pop
loopne
jno
cmp
daa
sub
jns
pushf
cmpsb
incl
jge
mov
add
or
lea
mull
les
pushf
mov
dec
jns
adc
stos
push
in
cmp
mov
jns
pop
push
dec
push
add
std
fnsave
dec
or
xor
ljmp
int3
dec
pop
add
and
test
push
dec
jnp
cli
push
or
test
repnz
and
addl
push
push
mov
in
add
jle
add
hlt
mov
pop
std
jg
sub
loopne,pn
push
cmp
mov
sub
push
lahf
negb
scas
cmp
outsl
out
mov
sbbl
rorb
out
add
jg
jle
push
daa
push
sbb
mov
lret
stc
insb
outsl
out
mov
dec
fwait
pop
dec
add
pushf
int3
shrl
or
ds
out
insb
aaa
scas
fdivrp
xor
mov
fisubrs
mov
xor
lret
and
mov
lahf
adc
xor
cmp
push
mov
mov
js
jle
xchg
out
int
fmul
rcll
dec
and
in
xor
out
je
cli
popl
lock
xchg
xchg
add
adc
fwait
aas
je
movsb
lahf
aam
fistps
test
out
sbb
cltd
repz
js
loopne
pop
loopne
ljmp
inc
shl
xchg
fcoml
inc
outsb
dec
mov
mov
ljmp
sbb
movsl
stos
xchg
mov
xor
test
inc
jne
inc
push
aaa
mov
jle
aas
jmp
outsb
icebp
das
mov
gs
add
lods
aas
lock
push
or
daa
fcomip
jle
loopne
push
rorl
fdivrp
fcoml
test
xor
std
jno
xor
insb
repz
xchg
cmp
dec
mov
loop
sahf
into
sub
sahf
das
inc
or
mov
lcall
fdivp
mov
mov
jns
jo
mov
lock
xchg
mov
jo
in
mov
test
cmc
movsb
sub
lock
cmp
push
loopne
mov
addr16
sbb
rol
cmp
lds
pushl
aad
mov
loop
cld
idiv
cmp
lahf
mov
andl
out
sar
and
mov
xlat
lea
js
cmp
or
call
or
aad
lock
adc
push
pop
push
sbb
inc
inc
cld
jg
std
pop
out
incl
fwait
sbb
imul
rcrl
imul
in
xchg
and
cltd
and
adc
cmp
inc
cld
ret
out
mov
jmp
xchg
cmp
jmp
test
fistpll
jl
divl
dec
out
mov
xor
add
xlat
cwtl
call
adc
icebp
mov
dec
jp
adcb
add
cwtl
jo
dec
add
movsb
mov
push
adcb
sub
arpl
push
add
pop
sahf
ss
fiadds
lock
sbb
mov
sub
cld
sbb
cli
mov
sub
jns
dec
inc
rclb
xchg
loop
scas
mov
std
pop
push
and
loopne
ret
sbb
jbe
aas
fisttps
pop
xchg
stos
popf
lret
out
xchg
add
idiv
pop
loope
inc
cli
cltd
adc
arpl
aas
push
pusha
js
push
mov
test
add
inc
lahf
push
or
add
fucomp
sbb
rorb
adc
pop
sub
shll
xchg
out
add
jnp
addb
insl
cmp
xor
ja
incb
into
jge
xlat
outsl
pop
or
mov
add
jecxz
sbb
jo
jmp
out
mov
inc
je
sbb
cmp
jle
cmpsb
int
jp
inc
das
dec
and
sub
ja
jle
ret
mov
push
icebp
jne
jecxz
js
push
xchg
cli
ja
cltd
ss
fists
fsubrl
std
jp
dec
push
push
jnp
lods
insl
xor
sub
mov
dec
loop
les
inc
sub
in
imul
push
and
sbb
jmp
imul
test
xchg
stc
es
arpl
decb
or
xchg
adc
cmp
fiadds
testb
aas
push
cmc
jae
subb
pop
outsl
inc
or
push
pusha
and
inc
jb
aas
loope
notb
mov
and
adc
stc
add
pop
push
sub
jnp
or
fistpll
sub
outsb
and
pop
in
imul
out
addr16
inc
mov
das
gs
push
lret
into
loop
push
mov
mov
mov
or
out
pop
and
push
fmull
into
mov
jmp
mov
stos
xor
mov
xchg
mov
jge
fs
sbb
les
cmpsl
adc
adc
cltd
jmp
popa
inc
in
xchg
nop
popa
aas
test
sub
jmp
jl
mov
out
popf
and
imul
pop
push
call
adc
je
mov
sub
orb
push
cmc
pop
pop
sbb
lahf
lock
mov
outsl
mov
inc
add
xor
scas
dec
jae
lret
ja
inc
stos
xor
mov
sub
adc
inc
fisttpl
jle
add
sbb
pop
test
aaa
scas
fdivl
sub
ficomps
cmp
adc
push
loop
adc
inc
jp
mov
xchg
mov
and
ja
rolb
inc
dec
cmpsl
ret
adc
clc
cmpsl
divl
add
and
jp
cld
sbb
xor
daa
sub
xchg
xchg
and
out
mov
xchg
cltd
inc
sarb
aaa
mov
faddl
pop
aaa
outsb
fdivr
dec
add
mov
loope
jo
cmc
aam
ja
inc
add
mov
clc
insb
int3
mov
push
movsl
daa
add
rorb
jge
fwait
lret
inc
push
mov
mov
push
enter
ret
xor
mov
out
stos
pop
fistpll
lea
push
sbb
cmp
xchg
mov
xor
or
or
std
mov
pop
lret
xchg
outsb
ret
leave
fst
jmp
test
sti
pop
jb
bound
lock
sub
aas
mov
adc
cmp
clc
jmp
popa
jae
rcrl
xchg
mov
daa
or
mov
push
mov
pop
sarl
lods
pop
sar
subb
ret
pushf
aaa
mov
fistps
aas
xchg
cmpsl
xorb
cmp
add
fimuls
bound
add
mov
subl
fstpl
ret
pop
push
sub
call
es
adc
out
add
ret
adc
xchg
stc
ja
ja
sub
jnp
adc
sbb
dec
pushl
pop
mov
addl
out
icebp
mov
xor
pop
push
out
inc
icebp
pmaxsw
mov
cmp
mov
adc
out
sbb
insl
sbbl
xlat
jmp
mov
mov
inc
add
jl
aas
push
cltd
cli
ja
inc
sbb
push
aam
xor
or
in
mov
fisttpll
icebp
in
es
cltd
or
out
cmc
fldl
push
fisttps
inc
lret
fdivs
nop
inc
dec
cli
and
cltd
pushl
sbbb
pop
mov
movntps
jb
jg
ljmp
outsl
int3
js
stc
cmpsb
ret
test
mov
fmul
sbb
mov
clc
xchg
cmp
test
call
and
adc
lods
add
mov
inc
aad
mov
hlt
jg
test
push
aam
add
pop
js
cmp
imul
aas
and
sub
jbe
jmp
sbb
jb
ljmp
int
push
push
in
xor
fwait
stc
or
jae
inc
adc
lret
loop
shl
cmp
adcb
inc
jecxz
or
pusha
mov
stc
mov
dec
in
xchg
or
pop
adc
jg
clc
aaa
cmp
lret
test
enter
cmp
test
xchg
mov
dec
inc
ret
imul
or
addr16
pop
adcl
cmp
adc
and
aas
inc
test
fistpll
xorb
ja
outsb
push
mov
sti
es
hlt
loopne
cmpb
pop
jl
push
sarb
out
jb
shrb
icebp
shl
jg
test
out
jnp
dec
clc
cwtl
cmc
std
sub
mov
in
mov
mov
out
hlt
mov
aas
jb
inc
out
and
lock
mov
inc
push
or
mov
or
add
lods
or
dec
sahf
push
and
push
adc
outsl
or
addl
movsl
add
mov
notl
and
push
rcrb
and
mov
adc
or
push
lods
jge
push
adc
sub
jae
push
or
lret
dec
inc
aas
jno
fcmovnu
pop
insb
es
jae
sub
mov
sub
push
lods
imul
popa
mov
inc
push
jb
cwtl
jle
inc
jmp
xor
outsb
insl
fistpl
xor
or
mov
dec
add
mov
or
mov
outsb
lods
and
sub
xchg
sbbb
hlt
pop
mov
pop
mov
inc
sub
xor
out
adcl
lret
lret
jno
push
pop
add
or
push
xchg
xchg
mov
push
and
mov
int
pop
push
add
movl
adc
inc
xor
test
xchg
sub
insl
imul
push
and
and
ficompl
rol
add
or
cmc
mov
dec
mov
mov
push
lea
jmp
cld
lea
push
xchg
sarb
leave
ret
inc
stos
adc
mov
iret
jl
test
jb
mov
fbstp
add
mov
adc
push
test
pop
push
lret
mov
pop
jae
enter
xlat
inc
sub
add
adc
add
adc
test
xor
sbb
loope
push
mov
push
push
mov
mov
jno,pt
sahf
sub
mov
mov
ds
fs
outsb
jno
xor
pop
mov
mov
lods
add
outsb
push
or
out
pop
imul
jae
push
cmp
inc
sub
sub
divl
or
inc
lods
lret
sahf
int
push
ds
cmp
pop
mov
lods
sbb
add
jge
arpl
lods
mov
fcoml
mov
xchg
mov
sbb
sub
sti
or
xlat
or
pop
ss
int
jae
xchg
daa
xchg
pop
or
faddl
cwtl
push
jne
add
jnp
jl
jno
sub
inc
jae
sub
mov
into
push
mov
jmp
or
and
outsl
or
jle
arpl
fwait
lock
cmp
les
mov
cmp
push
mov
pop
or
lahf
add
adc
mov
push
cmp
inc
rcr
addr16
adc
call
in
ss
pop
mov
daa
adc
dec
shl
dec
and
sbbl
mov
mov
enter
testb
sub
ss
add
inc
sarb
jl
ret
mov
jbe
add
adc
jmp
jl
daa
sbbb
sub
imul
inc
or
stos
andl
inc
push
push
inc
scas
xchg
dec
test
dec
mov
mov
or
stos
jbe
sahf
xor
in
dec
out
inc
sub
mov
push
sbb
ret
mov
push
or
shll
stos
pop
push
add
pop
imul
jae
dec
and
inc
mov
mov
mov
and
adc
fstps
sahf
and
xlat
lcall
push
adc
imul
mov
int
push
rclb
mov
lods
xor
push
dec
push
or
rorl
fs
pop
inc
ret
cltd
cmp
es
xor
in
in
dec
fidivl
sbb
aad
lret
das
xor
pop
push
sub
mov
rcrl
lods
push
or
jb
ss
mov
orl
push
scas
jb
lret
pop
insl
gs
imul
push
mov
outsl
notb
inc
fnstenv
loopne
push
cmp
mov
or
lret
cli
add
rolb
pop
cld
imulb
sti
push
shlb
add
in
inc
jnp
inc
out
cmc
orb
xor
dec
jp
dec
int
pop
xlat
jg
sti
pop
mov
fisttpll
sbb
push
pop
jae
adc
xor
rclb
pusha
push
leave
repnz
mov
test
test
sbb
cld
push
xlat
test
ret
fst
pop
int
adc
mov
aas
mov
mov
xor
in
hlt
jbe
loope
dec
fwait
sub
mov
in
pop
jae
roll
push
inc
mov
cmp
and
and
push
sub
scas
push
xor
xchg
mov
scas
sub
daa
cmpsb
mov
sbb
aaa
mov
test
add
sub
mov
mov
add
add
jae
mov
out
pop
and
fwait
push
xorl
push
jae
sbb
adc
xchg
aad
pop
stos
stos
and
loopne
rcll
mov
nop
jae
scas
int
in
push
push
lahf
or
xchg
outsb
hlt
shlb
test
xchg
insb
mov
dec
call
or
cmp
mov
or
sub
cmpsl
or
imul
mov
sub
stos
add
mov
ja
pop
cli
sbb
in
cmpsl
or
jmp
les
fld
and
or
stc
aad
adcb
xor
jno
outsl
inc
fistpl
leave
std
adc
sti
jl
xchg
add
sbb
insb
shlb
mov
mov
aam
or
xchg
cmc
loopne
rolb
xor
bound
cmpsl
lret
sub
insl
cmp
cmp
pop
xor
movsl
pushw
lcall
dec
mov
sub
mov
cmp
xchg
sub
cs
push
lret
test
pop
test
dec
mov
mov
ja
and
push
push
mov
xchg
cwtl
test
xor
js
add
or
mov
mov
imul
mov
pop
shll
mov
pop
lods
aas
jno
je
sbb
xlat
pusha
jo
lret
adc
sbb
shll
clc
addl
bound
push
cmp
push
add
ja
or
rorb
pop
inc
jns
push
leave
inc
test
lods
sbb
sub
jno
jg
or
mov
pop
add
ljmp
rcll
mov
jae
imul
push
jnp
jb
mov
in
rcrl
icebp
ljmp
gs
pop
cmpl
inc
sub
scas
pop
daa
xor
leave
cmp
es
mov
pop
add
push
fcoml
push
xchg
mov
xchg
es
outsb
adc
in
and
inc
pop
pusha
ret
pop
push
scas
cs
jnp
stc
cwtl
push
xchg
data16
sti
popf
xchg
jns
test
push
mov
iret
mov
call
jns
push
and
test
ret
dec
adcl
cmp
pop
sbb
mov
sbb
pop
lods
insl
popf
cmc
cmp
nop
mov
add
cwtl
push
popa
pop
jne
mov
mov
mov
lock
xchg
adc
leave
mov
pushf
push
mov
cwtl
or
xor
xchg
push
inc
add
push
xlat
cmp
push
jns
jno
cwtl
mov
mov
adc
mov
and
rcrb
add
and
xor
dec
sub
mov
push
push
cld
adc
das
adc
clc
push
sbb
and
cmp
les
adc
pop
pop
sub
adc
addl
js
lds
je
mov
rorl
mov
inc
sbb
mov
and
ret
mov
dec
cmp
xchg
adc
lock
push
inc
add
dec
addb
insl
dec
add
adc
dec
add
pop
pusha
iret
sub
xchg
nop
outsb
sbb
push
cmp
fbstp
dec
or
adc
dec
add
mov
movsb
adc
add
lock
lret
pop
sbb
cld
mov
or
and
cmp
push
adc
sbb
inc
jae
push
bound
rorl
push
and
cmpsb
sbb
add
mov
test
xor
roll
cmpsb
pop
inc
push
out
push
push
sub
mov
ss
insb
cmp
push
sub
cmp
pop
mov
jo
shr
mov
or
inc
add
dec
les
mov
rcrb
xchg
pop
push
not
mov
dec
xor
sahf
mov
mov
lcall
pop
pop
cs
test
lea
or
jno
ficompl
xchg
jne,pt
push
lcall
into
es
xchg
push
sub
jo
popf
push
mov
out
mov
pop
xchg
and
mov
mov
lods
mov
push
call
jnp
mov
add
lds
stos
lret
jne
bswap
inc
aas
rclb
mov
icebp
ss
fs
decl
xor
push
ret
mov
xor
test
push
addl
inc
insl
push
jecxz
out
test
push
lock
sbb
or
mov
cmp
or
clc
lock
mov
scas
inc
add
cld
inc
js
xchg
pop
pop
push
push
add
cmc
pop
adc
or
outsl
mov
or
push
mov
sarb
es
xchg
pop
xor
push
fadds
and
das
or
add
int3
mov
and
mov
sub
jo
push
cwtl
fmull
push
fidivrs
inc
dec
sbb
cwtl
push
push
daa
mov
push
inc
aaa
mov
imul
int
sub
or
inc
xor
stos
mov
shl
cli
sub
sbb
mov
cmpb
jmp
mov
add
int
push
es
ror
cmp
cmp
rcrb
in
daa
andl
rcl
or
daa
ss
pop
jae
push
and
fmull
pop
mov
scas
pop
cli
cld
dec
pusha
incl
mov
mov
pop
stos
mov
int
or
inc
pop
push
sarl
ljmp
popa
sub
jne
xor
inc
adc
inc
rcrb
test
jo
cmp
arpl
aaa
adc
shlb
sahf
add
fisttpll
int3
int
fsubrs
inc
sbb
jmp
clc
in
stos
add
and
and
ret
adc
ret
mov
test
add
cmp
mov
lods
add
in
out
add
mov
sbb
add
add
daa
xlat
mov
push
xchg
mov
xchg
add
jo
dec
int
and
and
cmp
dec
int
jp
stos
sub
lods
add
xor
out
xor
xor
cmp
adcb
add
lcall
out
pop
shr
cwtl
add
std
decl
shlb
push
movb
lret
mov
add
fwait
mov
mov
cld
sbb
scas
cmp
sahf
jae
pushf
imul
xor
out
adc
mov
imul
in
addb
push
dec
repnz
cltd
push
outsb
jmp
pop
lods
cmp
movsl
int
and
fwait
mov
iret
xor
cmpl
scas
fldl
jo
inc
and
ds
outsl
pushf
adc
adc
call
sub
add
mov
push
push
and
or
push
fdivp
callw
xchg
lods
sbb
inc
xchg
mov
scas
add
lret
sub
mov
ds
dec
insl
scas
add
push
xor
andb
fdivrp
daa
jo
push
jg
sbb
xor
imul
shlb
sbbl
xchg
or
jb
adc
mov
mov
je
sub
push
jb
mov
push
jns
inc
and
sbb
jp
push
mov
push
adc
push
nop
lea
push
jae
faddl
push
mov
pop
addl
das
push
movsl
popa
in
add
mov
js
push
mov
pop
rcrl
lock
add
push
shlb
cld
hlt
jo
cmp
pop
into
fs
mov
fdivrs
xor
es
sahf
mov
icebp
mov
push
or
mov
mov
out
popa
push
lahf
es
ret
push
jmp
mov
sbb
inc
jp
push
clc
pushl
rcl
aad
jb
adc
inc
mov
mov
add
xor
dec
jle
inc
cs
ret
das
jno
cmpsl
mov
xchg
scas
das
dec
sub
stc
xor
movsl
jo
dec
jge
aaa
mov
rcrl
pop
sahf
cmpb
push
xlat
cltd
sub
pop
cmp
dec
pop
lods
push
mov
lret
push
dec
or
out
clc
cwtl
daa
orl
je
push
mov
xor
ret
push
mov
cmpsl
dec
add
pusha
js
mov
jae
shlb
add
mov
pushf
imul
pop
jae
popf
lods
dec
sub
enter
andb
ss
push
sbb
lcall
mov
out
push
xchg
mov
imul
adc
push
inc
push
faddl
or
sub
shl
pop
mov
mov
fimull
jnp
fninit
daa
or
sub
movsb
adc
cmp
pop
sub
push
add
mov
cld
mov
add
sub
cmp
dec
cld
adc
mov
dec
outsb
push
hlt
movups
mov
ret
roll
sahf
add
pusha
lds
icebp
inc
fldenvs
push
inc
clc
push
imul
dec
dec
loopne
call
cltd
add
lret
and
arpl
shl
xchg
sbb
or
orb
popf
pop
and
fisttpll
sti
mov
or
or
mov
inc
xor
or
test
or
inc
push
sbb
in
dec
cmp
cmp
cmp
xor
mov
jmp
scas
sbb
inc
cmp
inc
push
lret
bound
push
cwtl
sub
inc
xor
xlat
es
imulb
iret
mov
test
stc
leave
pop
or
mov
push
and
or
les
push
ret
scas
ss
sbb
adc
adc
aam
inc
mov
pop
aad
sub
xchg
int
orb
adc
jae
pushf
and
mov
jo
movsl
xchg
mov
rcl
popf
pop
mov
in
mov
jb
sbb
mov
pop
lret
adc
add
pop
add
movsb
pop
push
aam
leave
mov
adc
inc
adc
dec
push
add
add
mov
add
sti
outsl
and
dec
decl
ffreep
xor
dec
cli
push
push
jmp
clc
movsl
push
push
push
std
add
das
mov
fsts
pop
shlb
pop
jb
jp
and
les
adc
add
insb
rorb
fldt
push
mov
mov
push
mov
mov
pop
pop
sub
inc
and
jo
xlat
lods
xor
mov
adc
sub
leave
ljmp
add
push
out
add
pop
in
pop
xor
xor
out
addr16
adc
add
adc
test
enter
cmp
fiaddl
int3
out
inc
hlt
push
inc
pop
lock
jae
movsb
mov
mov
stos
adc
jo
adc
fwait
lock
je
sub
mov
push
sbb
inc
icebp
cmp
add
inc
and
adc
push
sub
std
add
mov
mov
pop
dec
sub
arpl
xchg
adc
adc
pusha
aaa
add
frstor
cmp
testl
mov
outsl
add
jle
enter
sbb
lock
mov
idiv
push
aam
fildll
add
jecxz
inc
xor
dec
jbe
sbb
mov
loopne
imul
insb
mov
jle
enter
rcrl
inc
into
add
dec
xchg
push
fldl
mov
adc
add
rolb
data16
push
jp
sahf
dec
inc
sub
scas
testb
mov
je
mov
or
or
add
jb
jno
addb
fiaddl
mov
push
push
mov
jae
dec
test
lds
or
cmp
lods
add
and
mov
popf
mov
out
and
pop
and
test
rorl
mov
jb
jecxz
outsl
push
int
adc
es
xchg
mov
gs
xchg
pop
and
inc
xor
jb
inc
lea
pop
into
in
jl
outsl
sub
xor
sbb
inc
lods
xor
push
out
icebp
adc
mov
or
pop
jmp
addl
xchg
push
jg
mov
stos
shr
insb
push
addl
pop
push
repz
sub
fsubl
cmp
stos
stos
add
sar
mov
xor
mov
push
pop
inc
aaa
filds
out
sbb
ja
cwtl
push
std
popl
sub
xchg
inc
and
pop
xor
scas
or
icebp
aam
sub
mov
dec
rcrb
and
adc
or
dec
mov
push
dec
inc
add
cmp
inc
cmpl
cmc
dec
sbb
and
sbb
and
xchg
xchg
imul
sbb
add
arpl
mov
mov
callw
jecxz
push
lret
sub
rcrb
push
add
jno
popa
in
sub
fs
mov
sbb
sub
mov
fmuls
push
out
dec
nop
rcl
cmpb
out
sbb
push
or
push
xor
xchg
mov
cmpl
cmp
or
adc
test
ljmp
fadds
clc
jo
cmp
out
and
and
sub
inc
sahf
pop
xor
cmpsb
push
and
mov
mov
push
dec
jbe
push
inc
mov
sti
dec
push
roll
or
pop
pop
mov
pop
mov
jge
push
xor
mov
push
stos
sub
lea
mov
ret
test
inc
xlat
mov
inc
sbb
into
mov
jae
fadds
xor
mov
adcb
mov
dec
movsb
sarl
xor
push
or
push
or
sbb
mov
call
jne
or
push
xor
addr16
xor
lea
xor
or
outsb
outsb
mov
cltd
mov
xchg
mov
hlt
inc
xlat
lcall
jl
jo
inc
or
pop
aam
dec
mov
es
pusha
ret
and
cli
xlat
push
cmp
arpl
data16
push
add
mov
inc
jns
lret
adcb
or
js
inc
mov
adc
cwtl
icebp
sbb
clc
test
adc
leave
cltd
pushf
and
xchg
sbb
in
xchg
cwtl
sub
mov
push
loopne
fwait
sub
mov
sahf
or
push
mov
insb
jge
in
or
push
inc
and
movsl
mov
mov
dec
ljmp
push
mov
push
sub
gs
mov
mov
mov
sbb
sarb
loope
sbb
cmp
cs
test
repnz
jecxz
mov
imul
imul
adc
aas
push
idivl
push
ret
scas
mov
mov
mov
sbb
mov
stos
sarb
ja
jb
rcll
sbb
test
pop
push
sahf
movsb
es
lds
imul
and
pop
dec
or
mov
mov
shrb
mov
outsb
jl
jle
push
adcl
push
test
repz
fs
shlb
iret
lock
inc
lahf
aam
jbe
test
gs
jne
lahf
cwtl
in
mov
or
cmc
push
push
pop
add
lahf
or
mov
add
lret
in
shlb
inc
sbb
mov
or
cmpsl
addl
std
leave
shl
rcrl
pop
add
aad
ret
xchg
out
xor
pop
jne
and
jno
add
jb
popa
sbb
push
push
inc
lahf
pushw
scas
and
mov
out
ja
jne
inc
jae
xchg
and
sbb
sbb
rcrb
data16
ljmp
test
mov
pusha
sub
lret
adcl
sbb
lcall
mov
fcomip
push
or
cmp
push
jno
imul
out
push
mov
shr
gs
mov
xchg
in
imul
cs
ret
in
xor
pop
and
push
cmpsb
inc
push
bound
adc
subl
cs
mov
shlb
add
mov
push
popf
int
mov
ret
aas
div
sub
fistl
push
or
push
mov
fildl
ljmp
into
xor
adc
shl
add
add
add
addr16
add
push
xor
mov
jae
add
or
dec
cmp
mov
sub
add
iret
or
xchg
sbb
or
mov
and
rolb
or
lea
sbb
push
push
xor
rolb
je
jo
mov
push
call
xor
xor
add
inc
jo,pn
pop
pop
adcl
pushf
add
rorb
push
addr16
inc
sub
sub
rcl
push
ljmp
sub
add
mov
xchg
arpl
daa
sbb
daa
jo
imul
sub
inc
dec
or
jbe
inc
shlb
xchg
in
and
cwtl
lock
or
sub
dec
sub
in
push
pop
out
and
add
xchg
or
aad
and
dec
sbb
add
ret
out
ret
mov
jo
mov
cs
orb
out
pop
xor
call
out
lock
adc
ror
dec
cmp
mov
shl
adc
jl
adc
das
cmp
xchg
and
cmpb
push
mov
enter
dec
or
or
mov
inc
sbb
nop
out
mov
cltd
and
mov
or
mov
rcrb
test
xabort
sbb
cs
and
repnz
add
adc
cmp
add
and
xor
push
jnp
pop
push
rcrl
cmp
xlat
jno
jo
loopne
push
and
xor
adc
testl
imul
mov
or
xchg
mov
insl
rol
es
pop
gs
push
and
addb
cmp
sbb
pop
xchg
lea
mov
in
and
mov
in
repnz
lods
jb
shll
xor
mov
nop
xor
push
xor
xchg
cmp
movsl
out
jno
clc
daa
pusha
sub
xor
inc
push
push
adc
lcall
ret
xchg
test
sub
inc
xor
lcall
inc
push
xchg
lcall
adc
sahf
adc
cmp
inc
into
popa
enter
sub
adc
outsl
fcoml
push
subl
loopne
repz
pop
add
inc
xor
adc
push
cmp
push
jge
in
adc
or
mov
xor
sub
adc
ret
test
cmp
xchg
leave
aam
and
sbb
in
insb
push
in
rolb
cmp
mov
mov
arpl
lret
mov
loopne
pop
mov
leave
mov
es
jae
xchg
add
pop
enter
fdivs
in
pop
dec
fs
test
xor
xor
xchg
jo
dec
loop
mov
lret
sub
mov
xchg
dec
or
cltd
jb
out
sub
sbb
push
sbb
rorb
push
cmpsb
js
fimull
sahf
or
sbb
mov
shlb
lcall
jnp
repnz
and
sbb
int
mov
mov
pop
xor
pusha
add
sbb
pop
add
jo
mov
dec
cwtl
or
sbb
test
sbb
jnp
jne
pushf
jb
sbb
test
cmp
or
jl
xor
out
xor
and
dec
mov
lods
das
inc
adc
ret
lcall
repz
mov
mov
jne
rcrl
cmp
and
push
jae
push
addr16
xchg
es
adc
or
hlt
sahf
xor
sub
and
inc
cmc
fmuls
jle
xor
and
shlb
xchg
xor
loop
xor
push
jae
enter
xor
add
cmp
mov
cmp
sub
bound
leave
inc
or
negb
xchg
push
sbb
data16
rcll
insl
loope
or
ljmp
sub
mov
jno
pop
popf
insb
add
cmpsl
stos
call
js
daa
hlt
adc
or
sub
mov
and
and
or
or
adc
adc
rolb
scas
fisttpll
out
add
fstps
jnp
outsb
or
add
lds
cld
mov
subb
push
jb
sarl
xchg
cmpsb
pop
js
loop
mov
push
and
push
cmp
add
xor
dec
jmp
jno
lcall
mov
adc
inc
push
mov
sbb
lcall
push
addr16
inc
mov
sbb
xor
and
ret
xorl
add
in
push
or
mov
out
shl
jbe
xor
dec
cmp
and
in
sbb
fld
jmp
or
test
dec
addb
movsl
and
in
inc
cwtl
dec
xor
push
sub
xor
push
aaa
addr16
mov
pushf
popf
in
cmp
int
int3
out
add
sbb
or
push
scas
inc
fs
test
int
or
sbb
ret
sub
iret
mov
test
and
dec
int
aaa
mov
dec
mov
dec
pop
dec
mov
pop
xchg
adc
cmp
int
add
cld
mov
fldt
or
cmp
xchg
mov
fmul
xchg
int
sar
sbb
pop
inc
daa
push
mov
pusha
ret
push
add
test
xchg
test
aam
mov
push
xorps
sbbl
lcall
pushf
push
adc
mov
stc
jb
lret
mov
xchg
lahf
push
dec
rorl
adc
and
rcrb
call
adc
js
jns
lret
sub
testl
or
out
push
int3
imul
cmp
popa
push
subl
fs
push
lea
lret
pop
xchg
mov
pusha
push
cmp
mov
aam
int
xlat
dec
cmpsb
shl
push
sahf
add
mov
push
xchg
inc
push
out
add
addl
lds
push
sbbl
fcoml
test
shlb
testl
in
fbld
add
inc
insl
push
orb
or
dec
scas
ret
jno
rcrl
scas
subl
movsl
loop
ja
dec
push
dec
rorb
ret
jne
mov
mov
ret
stc
subb
cs
sbb
loop
sbbb
xchg
jb
xchg
mov
scas
icebp
stos
mov
js
outsb
sub
cmpsl
scas
and
jbe
xor
in
cld
subl
fcoms
sbb
push
test
inc
xor
test
inc
pop
arpl
push
push
jo,pn
icebp
ficoml
cmp
pop
popa
push
addr16
lods
int
xor
adc
data16
sbb
int
addl
or
sub
inc
push
sub
rclb
aam
sahf
and
stos
inc
sbb
ljmp
ret
xchg
scas
and
jle
lret
or
jg
rorl
test
ljmp
adc
adc
or
xor
enter
xor
sbb
mov
sub
jle
ss
push
add
sub
inc
mov
adc
imul
xor
mov
push
loop
daa
pop
add
inc
sbb
int3
imul
ds
cli
sub
outsb
push
cld
jle
cmp
cmp
mov
push
es
fcoms
or
add
xor
add
lock
xor
test
mov
jmp
aas
call
push
sbb
push
out
jne
push
and
lcall
push
add
leave
cmpsl
or
andl
loope
pusha
loopne
xlat
mov
inc
lds
push
push
xchg
stos
pop
mov
rclb
and
mov
in
or
ret
inc
cmp
add
scas
push
lcall
popa
fcompl
sub
push
mov
lret
and
es
xchg
aad
add
test
adc
mov
daa
cwtl
add
test
cwtl
dec
lods
push
das
xor
lcall
or
add
fsts
in
cmp
ljmp
push
adc
repnz
mov
aas
popa
xchg
or
sbb
push
int
add
push
pop
sahf
cmp
mov
fisubl
enter
push
add
std
rclb
pop
push
xor
dec
and
push
cmpsb
inc
mov
stos
xor
fcmovb
cli
fistpll
jg
fiaddl
xchg
xorb
jb
push
push
cmp
aam
fimuls
sarl
mov
push
loopne
xor
xchg
mov
lcall
or
test
and
adc
in
dec
es
lcall
or
add
pop
int
jl
push
into
test
decl
sbb
dec
push
push
cmp
out
stc
add
loop
loopne
pop
inc
xchg
fnsave
xor
cwtl
lret
mov
test
cmp
aaa
mov
jne
or
test
xchg
add
xor
sbb
enter
mov
or
sahf
mov
loop
sub
pop
pop
xchg
xlat
dec
std
in
xchg
push
loope
push
jae
icebp
mov
out
or
lods
push
cmc
sti
je
sbb
lret
lret
loope
rcrb
addr16
jo
cmp
add
lock
push
and
in
mov
lods
sbb
inc
aaa
mov
int
fmull
sahf
rclb
scas
pop
xchg
in
pushf
dec
inc
leave
add
loop
jp
mov
rcrl
stos
push
sbb
aam
mov
jp
fcoml
andl
add
subb
adcb
loope
into
movsb
push
sbbb
aaa
int
dec
fisubrl
in
xchg
pop
xor
sub
rol
inc
add
lds
push
cwtl
xor
jo
test
fmuls
lods
push
push
and
add
pop
jp
call
pop
pop
dec
sbb
push
xor
sbb
das
scas
aaa
xlat
xor
rclb
popa
mov
dec
int
or
sub
jle
mov
cmp
inc
and
mov
in
or
rclb
nop
andl
lret
cmc
outsl
or
sub
cmp
loopne
and
repnz
ficoms
xchg
mov
lret
xor
lock
xor
test
sbb
inc
bound
test
add
out
push
dec
mov
adc
fwait
push
or
loope
stos
adc
ljmp
cs
adc
cmpb
add
push
push
sbb
test
dec
iret
or
cmp
add
dec
adc
je
je
or
push
popa
cmp
icebp
mov
or
sbb
adc
xchg
leave
add
push
imul
sub
and
cmp
mov
xlat
dec
hlt
mov
sbb
cmp
adc
rcrb
or
cmp
lret
xor
xchg
push
out
loope
adc
push
inc
sbb
push
jmp
sbb
mov
mov
jo
pop
cmpsl
and
adc
je
lock
push
jae
jb
loop
out
test
or
and
mov
sub
sub
push
mov
inc
aas
adc
jo
loopne
lret
and
loopne
int
mov
enter
or
mov
add
inc
push
mov
lea
lea
xchg
add
mov
cmp
cmp
test
jle
cmpsb
or
test
mov
into
ljmp
mov
xchg
out
enter
mov
stos
xor
inc
addr16
addb
jmp
add
xor
dec
cmp
sub
scas
jne
add
push
fdivl
cmp
shll
or
xchg
insl
mov
lret
daa
dec
or
movl
pop
lret
mov
and
inc
xlat
push
enter
pop
out
pusha
push
add
dec
mov
je
mov
mov
xchg
pop
mov
adcb
mov
adc
js
xchg
mov
push
xor
mov
and
pop
jb
daa
xorb
pop
ds
movsl
add
in
sbb
pop
fs
stos
or
xlat
sahf
test
sbb
xor
cmp
lcall
xchg
lock
sbb
hlt
jo
jg
sub
mov
dec
aaa
add
mov
jge
lret
cmp
out
gs
cmp
push
or
mov
sub
call
icebp
jns
aas
call
sbb
andb
add
es
inc
sub
jno
jl
jle
xlat
push
inc
inc
mov
in
push
loope
xchg
and
push
xchg
and
adc
addl
add
push
or
adc
push
push
lcall
dec
push
xor
xor
add
push
push
sbbl
sub
mov
push
stos
cmp
and
xchg
or
and
sbb
pop
cmpsb
es
aaa
push
loopne
int
orl
fcoml
sahf
jmp
stos
pop
leave
cwtl
aaa
enter
xchg
xor
lods
add
mov
xor
and
out
lcall
and
mov
sbb
insb
mov
xchg
out
scas
loopne
ror
cltd
inc
pop
push
mov
hlt
rclb
in
into
in
jg
pop
mov
daa
adc
add
adc
aas
shl
adcb
push
xor
sub
pop
push
xlat
mov
or
jo
pop
jae
mov
addb
sbb
jnp
xor
xchg
and
scas
pop
push
or
cmp
push
jp
test
insb
push
sub
cmc
inc
sbb
mov
je
jecxz
enter
ds
mov
xor
cwtl
sbb
push
push
out
mov
fucompp
aam
int
mov
sub
or
pop
and
xchg
repnz
adc
mov
push
mov
sub
or
push
jb
inc
pop
sbb
test
add
or
mov
add
mov
lcall
adc
xor
cmp
mov
popa
adcb
inc
inc
sbb
int3
or
push
pushf
push
lret
rcrl
jp
or
stos
xchg
dec
cltd
sub
add
lods
test
xchg
movsl
adc
dec
scas
dec
jmp
js
repnz
jns
clc
adc
sub
push
mov
push
sbb
icebp
push
les
testb
xor
cmpl
and
or
push
add
ret
jle
inc
ss
sbb
movsb
cwtl
test
or
jmp
jb
pop
sub
pop
idivb
lcall
and
cmp
cmpsb
lcall
mov
or
xor
lcall
hlt
rcrb
sbb
jo
gs
jp
and
xor
ret
and
orb
adc
inc
cmp
add
cs
mov
repz
aam
subl
dec
xchg
xchg
into
mov
dec
fsubr
push
je
push
xor
sahf
adc
xchg
add
or
pop
lods
repz
pop
xchg
push
dec
loopne
and
mov
pop
jae
cs
add
iret
cs
xchg
imul
ds
fldcw
ja
cmp
outsb
bound
add
pop
fs
popa
xor
int3
ret
sbb
scas
inc
cmp
mov
pop
je
or
or
sub
adc
fwait
or
cmpsb
pop
sub
mov
inc
push
inc
pop
xor
cltd
sarl
pop
aad
or
rclb
add
movsl
movsb
sub
inc
sub
inc
es
cmpb
mov
adc
push
jge
add
jnp
sahf
inc
mov
and
mov
xchg
in
mov
loop
cmpsl
push
sub
inc
dec
inc
flds
sbb
sub
sub
addr16
stos
add
popa
dec
xchg
mov
popf
test
push
addr16
mov
lods
pop
scas
push
adc
loop
mov
pop
and
xor
xor
clc
es
sbb
mov
pushf
push
jb
fs
add
cmpsb
test
test
pop
push
inc
push
in
pcmpeqb
dec
lret
mov
adc
sbb
popf
imul
push
sub
jg
cs
cs
mov
dec
rorb
xor
fs
sahf
mov
pop
fists
push
lret
es
daa
push
xchg
stos
fimuls
push
test
pop
cli
sbb
pop
das
or
adc
push
xchg
cwtl
xchg
out
ret
xor
xchg
stos
xor
faddl
leave
sbb
in
mov
out
or
mov
xchg
lret
shll
xadd
pop
push
add
xchg
mov
leave
sub
and
pop
cld
cmp
cld
dec
shrb
adc
sbb
insb
loop
mov
push
jae
insb
aas
add
and
pop
fsubs
loopne
out
push
hlt
leave
add
in
and
pop
test
cmc
xor
push
add
xor
je
sbb
sub
es
push
push
push
in
aam
mov
ret
pusha
sub
inc
adc
faddl
xchg
outsb
stos
pop
aam
mov
cwtl
ret
addl
popf
push
ret
fistpl
sub
adc
inc
mov
movsb
loop
push
cmp
hlt
mov
sbbl
sbb
or
jecxz
addl
mov
xor
inc
xor
cwtl
dec
inc
or
scas
mov
loope
cli
rep
nop
jnp
push
sahf
xor
sbb
lock
xor
lods
xor
pop
rolb
test
lock
jb
sub
pop
sbb
lret
xchg
adc
push
popa
xchg
shr
dec
adc
fs
cs
call
inc
jo
cs
add
jb
andl
out
cmp
xor
adc
aaa
cltd
shlb
loopne
ret
inc
or
mull
mov
rolb
mov
jns
jmp
int3
sbb
pop
push
imul
add
std
stos
pop
inc
xor
sub
sbb
xor
sbb
test
xor
icebp
dec
fwait
and
push
sbb
loopne
stos
pushl
inc
fdivrs
push
cmpb
push
and
or
mov
push
push
adc
mov
or
lods
fists
mov
ljmp
outsb
mov
sub
add
dec
inc
je
cmp
sbbb
sbb
xor
jnp
push
rcrb
add
xor
jno
push
adc
push
push
mov
enter
loop
into
adc
adc
add
push
mov
cmp
leave
jae
sbb
mov
ljmp
rorl
pop
or
stos
mull
adc
mov
sbb
fsubs
mov
add
les
sbb
lcall
sbb
push
test
dec
sub
add
pop
stos
mov
or
sbb
mov
cmp
sub
jb
lret
scas
push
mov
jno
mov
mov
ja
sbb
or
push
or
dec
sub
pusha
adc
fdivr
aas
sbb
adc
dec
jne
push
push
sbb
inc
fstpl
sbb
and
push
cld
mov
adc
les
sub
inc
sub
dec
ljmp
xchg
or
data16
aaa
ljmp
sbb
repnz
lret
popa
fldcw
or
add
fs
add
outsl
inc
push
mov
inc
mov
push
push
js
inc
movsb
fld
xchg
sub
dec
mov
mov
mov
or
mov
subl
sbbb
insb
jno
mov
add
add
stos
add
push
mov
sbb
imul
dec
std
push
cs
xchg
test
clc
add
pushf
cmp
faddl
fsubrs
sbb
lds
imull
add
pop
inc
sahf
cli
push
xchg
inc
test
sbb
push
jns
lds
push
adc
cmc
dec
aam
enter
testl
fiadds
pop
pop
jmp
ljmp
call
mov
push
add
lret
add
jb
push
add
es
and
xor
jp
adc
push
std
test
loopne
dec
inc
out
fldl2e
sub
es
test
loopne
sub
xor
sbb
enter
adc
push
pop
sub
test
mov
imull
popa
rcr
lds
inc
add
loopne
push
push
or
rcl
in
jno
sbb
mov
cmp
int
adc
adc
leave
and
cmp
jbe
mov
mov
inc
cmp
cltd
aad
mov
das
sbb
inc
inc
cmp
dec
add
inc
sub
dec
dec
xor
in
scas
mov
fnstsw
cmp
xor
lcall
xor
jo
loopne
test
dec
rclb
mov
or
andb
push
fstpl
mov
mov
add
push
inc
mov
insl
adc
mov
xor
subb
or
xor
add
outsb
push
adc
or
arpl
pushf
jge
clc
popf
xor
push
in
in
cmp
xor
push
inc
or
sub
sub
jo
sub
inc
jecxz
mov
mov
and
fidivl
or
cmp
notl
and
push
mov
ss
xor
push
gs
sbb
push
cmp
adc
insl
add
adc
leave
cmp
arpl
cltd
into
push
dec
push
sub
pushf
push
adc
fcmovnu
pop
in
subb
xor
fucomip
xor
xor
rcll
clc
pop
inc
call
addr16
insb
lock
rcrb
je
xchg
sbb
mov
add
int
push
sbbb
mov
sbb
cwtl
mov
je
sbb
mov
push
adc
mov
testb
ret
adc
add
or
add
shrb
push
pop
push
lock
pop
xchg
and
and
outsl
add
shlb
pop
push
add
and
xchg
inc
push
stc
push
xor
inc
mov
jbe
push
adc
inc
fimuls
inc
lea
loopne
lcall
cltd
dec
out
xor
lods
add
imul
and
or
cwtl
ds
xor
xchg
xor
xor
pop
clc
imul
xor
ffree
xchg
subl
mov
or
lcall
stos
cmp
stos
and
pop
pop
pop
xor
push
mov
push
xchg
scas
imull
xor
mov
pusha
inc
push
mov
mov
insl
les
adc
xor
xor
mov
mov
xchg
ljmp
loope
lods
xchg
push
mov
sub
sti
adc
dec
mov
add
add
mov
lea
subb
and
outsl
xchg
popa
push
adc
scas
or
mov
loop
cltd
sbb
sahf
fldt
jp
insb
sub
push
test
fsubrl
mov
mulb
jge
pop
loope
add
orl
mov
adc
rorl
test
xorb
scas
jb
aam
lret
rcl
rcll
pop
imul
insl
pop
push
push
movsl
rclb
stos
sbb
and
movsb
or
push
add
mov
cmp
nop
test
lret
in
lods
inc
add
inc
test
test
aad
aam
fistps
cmpsl
and
loope
lret
imul
add
enter
mov
sbb
fsubl
fcmove
inc
mov
xchg
int3
addr16
sub
mov
adc
cmp
scas
pusha
mov
divl
ss
lods
mov
insb
sub
push
sbb
jg
push
es
sbb
mov
push
sbb
inc
inc
lret
sbb
or
and
ds
add
lahf
arpl
movsb
jno
aam
sub
dec
andl
das
or
aad
movsb
sub
lock
call
test
call
pusha
mov
xor
adc
fwait
stos
ret
adc
push
stos
cmp
int3
movsb
jl
pop
sbb
jp
mov
push
mov
in
push
jbe
mov
ja
xchg
in
decl
mov
or
push
pop
ljmp
pushf
inc
push
xchg
test
xchg
cltd
insb
ljmp
nop
jno
sbb
into
gs
mov
push
push
cmpsb
ret
loop
cmp
cmp
mov
or
sub
push
adc
lret
lods
and
mov
rcl
mov
in
xor
inc
imul
inc
xor
test
movsb
jno
loopne
sbb
fwait
sarb
xchg
pop
mov
or
add
lods
sahf
mov
xor
jl
pop
add
lock
cwtl
ror
pop
add
out
cmp
and
jne
lcall
aam
sub
or
mov
xchg
adc
popa
test
pop
jns
rcll
and
xor
cmp
inc
inc
shrb
imul
ret
and
aam
dec
in
push
rorl
stos
mov
loope
add
add
icebp
and
nop
and
mov
mov
cmpsl
daa
pop
rol
mov
dec
in
cmp
rol
scas
ljmpw
push
stos
sbb
push
into
pop
scas
jne
pop
cmpsb
ja
out
or
or
push
add
in
icebp
adc
jg
imul
mov
dec
adc
jg
mov
mov
cmp
clc
incl
pop
sarb
inc
imul
push
xchg
add
cmp
test
sub
push
pop
popa
push
icebp
push
loop
jge
mov
daa
inc
ret
jo
les
xor
scas
adc
out
push
xchg
push
push
dec
jmp
push
ret
pop
in
xlat
or
xorl
pop
cli
dec
movsb
push
scas
stos
push
mov
mov
cwtl
push
or
mov
pop
adc
adcb
sub
andl
addl
fisubrl
jo
inc
test
pop
out
push
pusha
inc
mov
hlt
add
inc
stos
aas
cwtl
cmp
clc
sub
jp
push
dec
fs
push
repnz
es
inc
pop
add
cmp
aas
and
rcrl
mov
mov
mov
add
add
adc
push
and
xchg
jnp
xor
xor
and
stos
sub
inc
cwtl
sahf
scas
mov
shll
or
xchg
mov
push
or
jle
jmp
jo
sub
test
push
arpl
loop
mov
ret
push
sahf
xchg
sbb
mov
inc
add
pop
mov
pop
jl
inc
sahf
xorb
loopne
aad
idivl
xor
add
sub
push
pop
or
adc
loope
rcr
and
lock
or
orl
ficomps
out
jo
sub
lcall
ret
pop
lahf
sarl
lcall
xchg
jb
dec
cmp
push
adc
lret
addl
push
inc
je
mov
and
pop
scas
jb
cmp
xchg
dec
aad
fs
popa
xchg
lahf
push
push
xor
sub
mov
push
sub
dec
jo
push
cmp
sbb
fnstenv
loopne
push
iret
xor
mov
mov
push
mov
jne
mov
roll
cmp
es
in
mov
add
inc
jae
gs
pop
sbb
cmp
mov
addl
mov
jle
ror
jg
push
or
pop
adc
sbb
sub
add
or
aam
sbb
xor
jbe
dec
out
mov
lods
loope
jo
lds
pop
jae
dec
inc
fstpt
scas
xchg
cmp
jbe
fsubrl
inc
movsl
jb
cmp
into
loopne
fstl
ds
shl
pop
jae
push
dec
or
xor
push
int
mov
rcrb
or
mov
add
mov
push
sbb
test
sbb
push
and
shl
add
imul
inc
stc
popl
push
adc
push
adc
in
mov
sbb
pop
ds
call
sar
in
pop
andb
test
cmp
sbb
loope
icebp
adc
inc
inc
push
inc
add
insl
dec
in
shl
loope
movsb
es
mov
mov
dec
out
loopne
push
xor
push
int3
xor
ret
popa
push
jb
movl
mov
cmpsb
in
clc
sbbl
jne
lods
pop
in
pushl
push
cs
shr
hlt
add
push
lcall
pop
scas
cmp
push
push
pop
mov
push
shll
out
xor
push
call
xchg
outsb
insl
rorl
cmp
adc
out
jo
sbbl
push
push
mov
xlat
push
jb
cmpsb
or
test
dec
sbbl
push
pop
add
js
popf
adc
rcl
push
loop
mov
cs
lcall
cmp
fnsave
xchg
jmp
add
xchg
add
mov
or
lea
adc
sub
mov
divb
cmp
icebp
jae
xlat
inc
dec
imul
or
test
lret
xchg
mov
jae
pop
or
sub
mov
and
ljmp
push
sahf
pop
adc
icebp
xor
ljmp
sbb
push
aad
nop
push
test
lahf
cmp
jg
mov
mov
mov
ja
mov
ljmp
orb
mov
dec
push
xor
ljmp
adc
cwtl
jg
cmpsb
subb
ret
shll
or
push
xlat
jb
ss
jae
cld
mov
sbb
aas
or
xchg
in
out
lret
jnp
mov
and
or
xor
cmc
rcl
mov
leave
cmp
lret
aad
sahf
pop
pusha
test
jns
mov
out
mov
cmp
cmp
add
int3
mov
rcl
lret
loop
lcall
rclb
pusha
xor
add
sbb
jae
xchg
xor
add
dec
mov
imul
xchg
push
or
ss
mov
lret
dec
in
jae
adc
mov
xchg
loope
push
xor
xchg
stos
fadd
xor
stos
call
addr16
pushf
stos
daa
addr16
mov
push
testb
fs
adcb
lods
test
or
vprotw
fisubs
movsb
dec
sbbl
es
sub
pop
adcb
mov
ljmp
stos
adc
add
push
cs
sahf
xchg
rolb
add
aaa
aam
in
pusha
enter
enter
cmp
pop
cwtl
push
jne
xchg
jae
add
or
in
popf
cmpl
adc
cmp
push
adc
push
sbb
xchg
dec
out
daa
or
push
andb
hlt
rclb
push
xchg
sub
lock
loop
sbb
or
jp
xor
push
inc
ret
push
cwtl
js
cmp
loop
lcall
xchg
or
xorb
lcall
stos
jo
jb
jbe
in
or
movsl
mov
mov
add
jmp
cmp
das
shr
leave
add
pop
sar
add
inc
fsubrl
cmc
test
xor
mov
inc
loope
xchg
mov
xchg
mov
mov
inc
push
push
lcall
sti
jne
jno
add
mov
int3
testl
lahf
ds
xor
push
push
pop
test
mov
adc
jne
push
adc
mov
dec
loopne
xorb
add
inc
push
or
and
xchg
mov
orb
scas
and
aas
xchg
cs
pop
xor
sub
lods
popa
and
orl
mov
xchg
aas
mov
ljmp
add
aam
add
inc
pusha
lret
jecxz
outsl
repnz
xor
fnstsw
cmp
faddl
inc
scas
inc
push
enter
outsl
sbb
movsl
jb
rcll
pop
ret
mov
jb
mov
aad
lds
adc
xor
xor
jno
roll
pop
add
xchg
rclb
lcall
pop
testl
iret
sub
mov
cli
inc
test
leave
andb
ds
shlb
cld
insl
mull
add
pusha
mov
loopne
push
xor
add
jae
adc
pop
mov
add
lods
mov
addr16
int
das
mov
sbb
in
fmull
lcall
xlat
push
scas
pusha
cmp
xorl
data16
or
push
or
cmpsl
pop
or
and
lret
cmp
push
loope
add
xor
inc
push
xor
es
aad
cmp
addr16
sbb
ret
push
jno
push
jae
and
pop
push
mov
pop
lods
push
xor
loope
jo
mov
inc
mov
pop
inc
cmp
enter
out
cld
add
jmp
rcll
addr16
dec
stos
hlt
cmpsb
mov
sbb
cmp
cli
loopne
mov
push
in
enter
add
jbe
pop
jp
out
orl
inc
add
stc
xchg
fwait
imul
fsubs
lret
lods
addr16
sahf
pusha
sahf
xor
repz
dec
loopne
cmpsl
sbb
icebp
lret
mov
fwait
dec
cltd
push
addl
sub
xor
ljmp
and
mov
pusha
ret
pop
push
add
shlb
adc
rorb
push
push
mov
popa
pusha
jecxz
loopne
push
pop
daa
cltd
and
xchg
cmp
mov
sbb
pop
push
inc
xor
rcrb
cmpsb
dec
loope
test
sti
lret
sub
and
adcl
in
mov
jne
cmp
push
and
xchg
xchg
pop
loope
adc
or
addr16
cs
mov
fwait
pop
xchg
xor
addl
sub
xchg
dec
lock
sti
push
cltd
cmp
sbb
jo
pushf
push
mov
and
push
xchg
cmpsl
clc
nop
jg
scas
sbb
and
fs
hlt
mov
inc
aas
jmp
or
jo
jb
jns
sarb
nop/reserved
push
mov
xchg
and
add
das
pop
add
inc
xor
cltd
addl
loopne
sub
mov
out
es
push
cs
pop
int
or
pop
xchg
and
les
jns
ljmp
push
push
xchg
call
sbb
jne
push
lret
mov
adc
push
xchg
jne
lret
sahf
or
rol
push
push
lock
pop
push
inc
mov
push
or
dec
aas
sub
and
hlt
mov
out
cs
in
roll
jbe
movsl
xlat
mov
mov
jne
and
es
pushf
mov
loop
stos
xor
movsl
jno
pop
mov
jecxz
xor
pop
and
decl
shl
add
adc
adcb
aad
pop
add
outsb
xor
jbe
arpl
cmp
popa
add
mov
mov
sbb
shll
dec
lret
out
dec
xor
xchg
sub
je
and
mov
inc
jnp
test
scas
add
sahf
cmp
or
data16
dec
rolb
movsl
ret
pop
pop
push
in
loopne
daa
mulb
inc
imul
aas
inc
fimull
push
and
lret
aam
aad
fcmovu
pop
outsl
inc
cltd
jp
adc
adc
pop
pop
lods
pusha
push
mov
push
push
push
cwtl
dec
push
add
mov
mov
cwtl
testl
loop
mov
test
jne
mov
nop
jecxz
inc
mov
mov
mov
lret
mov
pop
pop
sub
mov
push
cltd
cmp
dec
js
stos
lcall
sbb
xor
cmpsl
add
out
iret
cmp
mov
std
push
fidivs
inc
outsb
sbb
adc
or
mov
inc
ret
push
xchg
adc
sbb
adc
pop
in
stos
sub
fldt
and
add
adc
outsb
xchg
and
cltd
das
loop
add
or
xchg
es
jnp
aam
ret
lret
or
cwtl
out
movsb
jne
push
push
push
adc
pop
sub
orl
enter
jmp
leave
push
sub
test
loop
push
mov
addl
or
inc
add
test
stos
loop
or
cmpsb
ret
xor
push
dec
aaa
add
pop
rcrl
add
cwtl
fs
dec
or
mov
sahf
loopne
sbb
mov
add
cwtl
into
out
pusha
test
lods
rorl
addr16
jl
lret
and
gs
adc
inc
scas
mov
and
xchg
loopne
in
or
loope
or
icebp
push
xor
xchg
mov
jle
cmp
gs
mov
add
addr16
scas
push
jb
mov
fwait
mov
pop
call
add
dec
into
rorb
mov
pop
and
fnstsw
push
xorb
and
cltd
aas
sar
adc
xor
xor
sub
lock
ficoml
and
loopne
pop
movl
sbb
incb
cltd
and
inc
rcll
loopne
inc
mov
lcall
fs
es
xor
jo
adcb
push
aam
sub
lea
xchg
push
das
sarb
pop
sbb
pusha
inc
mov
dec
mov
xchg
xor
dec
mov
and
addl
mov
pop
nop
leave
mov
sbbb
subb
mov
push
imul
or
enter
inc
mov
test
push
sbb
insb
aad
sub
or
stos
jo
add
dec
in
jne
ret
push
xor
cmpsb
push
cwtl
sub
pop
in
ss
fsts
xor
inc
push
push
sbb
rorl
add
jbe
mov
or
aas
sub
stos
jbe
icebp
sub
or
adc
add
stos
jle
adc
dec
scas
jg
iret
std
or
jb
xor
or
mov
push
push
imul
stos
cmpsl
repnz
sub
jg
roll
cmp
push
ret
inc
cld
negb
xchg
lcall
push
add
inc
pop
loopne
push
mov
sbb
jno
pushf
and
inc
cld
cmp
sti
push
cmp
into
dec
push
ds
and
push
mov
mov
lock
lret
push
sbb
cmp
xchg
mov
mov
dec
mov
cmp
jno
addl
imul
xchg
ret
aam
add
and
orb
js
cwtl
inc
pop
test
cld
rorb
pop
andb
stc
jno
add
and
mov
dec
mov
add
in
xor
pop
and
xchg
xchg
jecxz
xor
sbb
sbb
sbb
sbb
sar
loopne
inc
in
or
xchg
loop
xorl
xor
adc
fcomps
add
inc
sti
filds
xor
mov
adc
jo
xor
adc
scas
mov
stos
jecxz
add
clc
mov
cmovne
mov
add
ljmp
insb
or
dec
lods
in
push
aad
call
dec
mov
inc
dec
mov
adc
inc
rcll
mov
lods
push
mov
adc
sahf
sbb
jecxz
das
testb
push
mov
mov
movsb
xchg
cmc
cltd
js
inc
add
das
rclb
cmp
xchg
mov
inc
sahf
sbb
test
lret
loopne
xor
push
inc
add
pop
pushf
daa
push
out
popa
ljmp
add
adc
add
int
lods
pop
cmp
cmp
and
ret
and
movsl
mov
add
inc
into
cltd
mov
daa
or
xor
es
or
mov
shll
outsb
dec
int
in
das
sarl
out
rcrl
pop
adc
xor
adcb
out
pop
lock
pop
xor
fs
jo
sbbb
adc
cmp
sub
gs
jb
test
jb
rcrb
xchg
adc
rolb
or
subb
stos
rolb
add
jno
sbb
xor
pop
sub
mov
sbb
int3
sub
sub
pop
shll
mov
imul
int3
mov
adc
cltd
bound
test
push
lock
sbb
mov
inc
aas
pop
testl
pop
shrl
or
mull
pop
add
jnp
stos
pop
pop
add
leave
xorb
inc
lock
dec
call
cmc
fistps
lcall
adc
xor
pop
fistl
pushf
inc
xor
pop
ret
xor
xor
push
subl
sbb
repz
je
stc
mov
pop
repnz
lret
sub
ret
push
out
jb
dec
xor
mov
ss
inc
es
cs
dec
inc
and
xor
mov
xchg
movsl
enter
cs
aaa
xchg
xor
push
jl
jno
inc
add
loopne
mov
jae
sbb
ret
test
stos
fs
loope
dec
inc
push
or
out
jo
mov
fcoml
mov
jno
sbb
push
dec
sub
je
xor
mov
pop
nop
mov
push
loope
xor
outsl
sub
scas
push
ret
add
xchg
mov
inc
inc
scas
push
xchg
pop
and
dec
mov
xorl
or
sarl
inc
scas
mov
inc
add
enter
mov
lcall
xor
add
dec
xchg
add
push
rolb
push
dec
add
mov
mov
addr16
jg
fsubl
in
lret
jle
inc
orl
ret
push
das
cmc
ljmp
and
insl
push
or
sbb
es
jae
mov
es
mov
fildll
xor
jecxz
in
gs
roll
js
xchg
or
mov
adc
mov
push
popa
test
inc
cmp
adc
repz
sub
mov
shrb
or
subb
rclb
insb
orl
ret
ficoml
or
add
in
xchg
iret
pop
inc
jae
nop
add
repnz
or
and
push
add
adc
inc
roll
mov
jmp
mov
mov
inc
sbb
sub
jo
jecxz
mov
ja
pop
push
mov
into
adc
mov
mov
pop
les
add
sub
movsl
adc
add
orl
jecxz
inc
testb
lds
mov
sbb
sbb
push
sbb
xchg
lahf
inc
mov
clc
push
mov
or
add
inc
mov
add
lahf
ret
outsl
add
add
rcrb
and
mov
push
mov
add
lret
ss
popl
gs
lods
add
rclb
incl
loopne
or
push
sub
cmp
mov
mov
inc
mov
mov
lahf
adcb
mov
rolb
add
jae
push
std
decb
popa
push
add
jae
jp
cld
mov
push
andl
push
sub
push
sbb
cmpl
test
or
xor
cwtl
pop
jns
jns
sub
mov
sub
insb
ja
ret
jb
repz
test
sbb
mov
cmp
or
jb
pop
rorl
xorb
pusha
lret
push
add
adc
inc
add
mov
dec
lea
xchg
lret
add
add
dec
mov
sbb
mov
add
push
mov
inc
scas
push
or
shlb
inc
scas
sbb
or
and
cmp
sub
sarb
push
movsb
cmp
push
into
adc
xor
inc
repnz
xor
pop
mov
inc
mov
pushf
mov
outsl
rol
sbb
sub
dec
add
lea
inc
les
sub
xchg
pop
inc
and
dec
mov
movsb
inc
cwtl
dec
test
loope
inc
int3
mov
cmpl
sahf
sub
mov
and
inc
in
adcb
repz
mov
xorb
pushf
xor
cwtl
fcoms
inc
add
mov
inc
out
pop
scas
push
mov
es
push
push
stos
push
test
shl
out
jno
sbb
xchg
outsb
insl
inc
cwtl
add
jns
fldenv
pop
add
push
inc
xchg
jg
into
inc
mov
or
and
sub
cmc
mov
or
push
int3
push
and
push
lret
mov
lfs
push
mov
into
cmpl
and
fiaddl
jae
mov
push
push
pusha
test
or
stos
ljmp
jae
insb
mov
jb
test
test
pop
in
inc
sub
lcall
push
fwait
mov
or
ja
rclb
fucom
mov
jp
leave
inc
xchg
andb
test
stos
icebp
sbb
ljmp
shl
dec
shl
cmpsl
jno
test
test
sbb
sbb
push
cwtl
or
jnp
sbb
pop
lcall
dec
sbb
xchg
andl
add
inc
inc
cmp
orb
add
rcl
or
or
xchg
or
adc
cli
pop
in
push
adc
sub
and
dec
int
out
arpl
cmp
inc
imul
mov
push
push
xor
addr16
sub
mov
aad
and
push
dec
push
pop
scas
adc
mov
or
push
mov
ret
pop
mov
test
push
sbb
fistpl
sahf
rcll
lahf
sub
test
dec
xor
jp
and
lds
mov
dec
push
push
mov
pusha
inc
xor
pop
sysexit
pop
or
stos
mov
sarb
ret
add
js
rorb
clc
lret
inc
mov
adc
sti
fs
mov
imul
mov
push
push
push
adc
or
jp
xchg
sbb
add
add
push
shll
dec
sbb
sbb
pop
roll
aaa
loopne
add
icebp
add
mov
cmpl
lods
xchg
jmp
imul
push
mov
nop
xor
repnz
stos
pop
sub
test
out
xchg
andl
rolb
cltd
jecxz
sub
test
pop
adc
mov
push
cmp
adc
xchg
mov
mov
ret
mov
inc
cmp
dec
ret
xor
test
test
adc
rolb
popa
add
push
lds
enter
jg
call
mov
push
out
test
push
or
sbb
add
jbe
inc
inc
jae
daa
movups
jo
inc
mov
mov
xor
filds
mov
mov
sbb
adcl
or
sbb
stos
xchg
leave
or
xchg
push
pushf
jmp
mov
mov
jae
jno
push
out
push
push
xor
adc
fildll
xchg
rorb
add
push
call
aaa
add
push
push
out
or
add
dec
and
cmc
sub
sub
movsb
je
clc
push
jo
aas
fucomp
cmp
stos
icebp
subb
pop
lods
push
xchg
mov
shll
push
inc
insb
nop
ret
adc
stc
or
push
push
pop
popa
sub
sbb
cmc
xor
shrb
call
hlt
rcl
cwtl
mov
mov
add
sbb
push
pop
test
mov
sbb
scas
mov
inc
int
jp
subb
inc
adc
es
je
test
push
dec
rcll
push
push
push
test
mov
sub
xchg
inc
popf
insb
push
push
nop
mov
jne
rclb
mov
inc
inc
test
add
inc
lock
cmp
ret
xor
push
xchg
lods
test
mov
or
add
inc
inc
sbb
sub
mov
inc
sbb
cmp
cwtl
sbb
sbb
in
lcall
jae
lods
negb
scas
pop
sbb
enter
push
xchg
cmp
and
mov
movb
sub
inc
pop
dec
sbb
pop
aad
ret
pop
adc
dec
insl
mov
call
or
jbe
jb
cs
push
unpckhps
fldl
shrb
pop
loopne
or
lahf
pop
push
push
inc
cmp
out
push
adcb
in
pop
scas
fs
in
adc
adc
push
mov
mov
sbb
es
inc
ret
mov
or
add
cmp
adc
jb
add
adc
add
pop
pop
mov
repnz
push
rclb
fsubrl
call
mov
addl
mov
les
push
orb
dec
idivl
subb
test
xor
inc
cmpsb
dec
xchg
sbb
into
rcrb
aaa
push
mov
stos
inc
jnp
sbb
aam
xchg
fstl
adc
andl
jle
jns
loopne
pop
je
out
sbb
ret
js
mov
xchg
inc
adc
xor
mov
das
lods
push
xlat
and
dec
mov
push
mov
jge
rclb
push
add
add
lods
js
rcll
mov
rcrb
repz
rolb
or
out
sbb
pop
inc
dec
push
fnstsw
inc
inc
mov
cld
push
ret
enter
add
cld
in
mov
imul
rolb
mov
lock
push
fcomip
ljmp
notl
iret
pop
cmp
iret
sbb
mov
mov
sbb
je
xor
inc
fs
xor
pop
andb
push
dec
mov
es
and
inc
mov
fcmovnu
and
xorl
test
hlt
jno
jp
pop
cmpsl
dec
pop
xchg
add
sub
cltd
addb
fdivs
pop
push
roll
clc
cmpsb
add
or
or
outsb
add
push
inc
sub
scas
imul
cmpsl
sarl
arpl
add
mov
out
andl
xor
lret
incb
xchg
push
mov
xlat
stos
inc
popfw
cmp
and
push
cmp
jae
movsb
xor
push
cwtl
or
out
data16
jnp
mov
mov
pop
push
orl
insl
sub
rorb
or
sbb
push
aas
rorb
in
pop
subl
add
imul
aas
jo
jmp
pusha
stos
fisttpl
bnd
inc
push
add
sbb
hlt
lret
mov
xor
pop
mov
repz
add
pushf
sub
xor
push
cmp
add
in
pop
cld
aaa
ret
mov
mov
xlat
push
xchg
mov
inc
aas
or
clc
dec
inc
sub
mov
idivb
jg
add
xchg
mov
mov
enter
test
in
shrb
test
push
push
aad
fistl
jecxz
cli
push
pushf
adcb
add
cmpsl
sub
xor
push
aam
adc
inc
jae
imull
or
mov
loope
fdivp
mov
lahf
sub
lods
push
mov
in
jle
pop
push
scas
inc
mov
sub
jne
push
out
cs
scas
xor
adc
popa
sub
inc
in
shl
pop
ja
sub
sahf
addr16
pop
jae
jg
mov
mov
sub
jp
mov
test
imul
cmp
add
mov
test
cmpps
inc
addb
mov
pushf
sub
and
mov
add
sbb
es
or
flds
enter
xor
mov
xchg
stos
jbe
adc
or
pop
lds
xlat
enter
outsl
gs
push
decb
cmp
js
cmp
adcb
das
gs
shrl
subl
mov
xor
pop
fsubrl
push
imul
jne
push
cmpl
scas
movsl
xor
aaa
lcall
push
add
pop
out
test
xor
and
out
or
sti
jno
cltd
sbb
cltd
frstor
adc
push
aad
int
leave
adc
sbb
shll
sub
xchg
mov
aas
cmp
lret
push
sub
pop
scas
sti
mov
loope
sbb
mov
pusha
xor
or
push
inc
xchg
jmp
insl
leave
push
sbb
lret
iret
add
mov
jo
test
mov
xchg
popf
in
jae
sub
cmp
lret
adc
sub
mov
pop
dec
insl
into
popa
stos
lcall
and
ds
inc
loopne
push
lahf
insb
dec
lret
xchg
scas
cmpsl
push
or
xor
cli
aas
push
xor
icebp
test
push
lea
call
rcr
mov
and
andb
and
or
cmp
mov
mov
lcall
push
rolb
push
inc
push
adc
add
cmp
stos
jecxz
sub
shll
or
push
divps
mov
inc
adc
test
xchg
xor
mov
cmpl
enter
cmpsb
xor
push
mov
sub
fs
pushf
xor
adc
dec
add
lret
rcr
xor
cmpsb
push
out
xorl
in
mov
lock
popf
push
xor
lcall
loope
cmp
sbb
dec
push
sbb
adc
fs
into
xchg
stos
and
mov
xchg
loope
xchg
fcoml
push
adc
enter
movsl
xchg
adc
sbb
into
fidivrl
repz
push
cmp
jg
aam
dec
mov
rol
mov
pop
adc
push
lock
out
pushf
repz
aam
sub
icebp
or
rcrb
lret
pop
push
jne
in
add
xor
loopne
sbb
test
gs
enter
aam
mov
aad
cmpsb
or
sbb
mull
jae
cmp
dec
xor
mov
fwait
adc
loop
cmp
mov
push
jecxz
rolb
adc
xor
push
sbbb
imul
xor
or
icebp
sbb
jne
mov
psignb
push
cmpsb
lret
dec
or
push
jae
sahf
sub
out
insb
mov
repnz
xchg
das
scas
ret
sub
mov
outsl
and
dec
push
rorl
mov
fiadds
out
inc
xor
fisttps
jne
xor
push
icebp
push
das
mov
fwait
or
and
mov
and
push
sub
dec
decl
push
aad
add
jmp
add
cmpsl
sub
insb
iret
add
lock
js
stos
xor
or
xchg
call
inc
aam
mov
push
andb
pop
push
xor
mov
in
add
xchg
jmp
scas
add
mov
jmp
push
into
in
pop
mov
cwtl
stc
inc
mov
ljmp
push
imul
adc
in
loopne
cmp
js
push
cltd
js
xchg
xor
in
rolb
jno
push
lea
xor
leave
stos
lcall
cwtl
cmc
ret
push
js
ljmp
and
sarl
and
lcall
std
dec
inc
inc
popa
mov
divb
test
pusha
push
cwtl
test
faddp
loop
inc
xor
pop
sahf
rclb
das
add
jae
or
sti
dec
sub
or
sub
mov
sahf
mov
and
lret
lock
int
xchg
jg
add
xchg
repnz
aad
adc
nop
xchg
out
inc
hlt
cmp
decl
pushf
add
add
mov
fs
pushl
sbb
inc
sbbb
add
bound
popa
xor
add
or
mov
mov
push
movsb
adc
adc
loop
dec
setno
inc
loope
and
decb
xorb
dec
adcl
add
inc
scas
rorl
nop
bswap
pushf
add
inc
das
fidivrl
stos
mov
add
adc
cs
add
popa
xor
push
fimull
in
mov
xchg
das
or
rclb
addb
push
push
addl
lds
jno
dec
iret
sub
sub
and
jb
test
loopne
inc
shll
cmc
rclb
ficoms
lahf
stos
jno
push
jmp
fistpl
enter
adc
cmpsb
push
test
test
push
pop
test
or
sub
out
pop
outsb
mov
jae
scas
inc
or
sub
xor
cld
add
cmp
out
sti
loopne
dec
cmpsb
push
ja
and
fisubrs
adc
cmp
jp
dec
xor
cmp
lahf
jp
sbb
sbbb
aad
xor
lcall
dec
adc
push
or
cs
pop
dec
cld
pop
jmp
dec
arpl
in
dec
xor
push
sahf
data16
int
scas
push
pop
pop
push
test
sbb
push
into
mov
mov
fstpt
xchg
shlb
mov
lret
add
and
and
xor
xchg
inc
dec
push
push
clc
rcll
into
fs
or
mov
push
xor
push
mov
js
mov
out
pop
xchg
enter
cltd
popa
push
or
cltd
lret
mov
mov
adc
rclb
pop
xchg
cmp
hlt
or
and
test
xchg
xor
sub
cmp
dec
jg
inc
out
mov
lcall
rolb
and
xor
cmp
loope
add
xor
test
inc
mov
mov
dec
aam
test
add
iret
fnsave
adc
sbb
and
mov
jo
outsl
ja
jno
pop
push
xorb
or
jo
sahf
nop
pop
addb
mov
inc
inc
jae
sub
adc
out
push
and
and
cmp
in
adc
push
into
in
dec
xor
push
roll
lcall
call
jo
or
mov
sub
jle
adc
add
add
es
aam
cs
imul
xor
mov
or
test
pop
fmuls
mov
xchg
addl
sbb
push
cs
mov
inc
xorl
xor
xor
rcrl
mov
push
inc
roll
jno
cwtl
dec
cwtl
or
ret
mov
push
in
es
out
or
test
dec
xor
popf
mov
pop
jb
enter
add
pop
imul
es
sub
clc
fldcw
pop
cmp
cli
or
ljmp
pop
aad
xor
sbb
xchg
adc
dec
push
add
popa
jo
and
sbb
add
popl
push
jmp
xor
lods
push
adc
add
pop
pop
jecxz
jle
addb
push
sub
inc
cltd
cmp
mulb
pop
xor
add
stos
leave
inc
aaa
adc
xor
dec
push
push
push
xor
add
jb
push
sbb
sbb
xlat
loope
xchg
push
jno
mov
jo
push
xor
adc
jb
aam
jbe
rcll
pop
xchg
cmp
jno
jb
test
sbb
sub
movsl
lret
lcall
adc
jbe
int
ret
dec
shll
xor
mov
pop
push
sub
cmp
push
cs
pushl
lret
push
notb
xor
push
and
insb
xchg
in
lds
out
mov
int
es
pushf
in
jae
jb
out
xchg
lcall
adc
jl
push
inc
xchg
repnz
sub
pop
add
inc
clc
outsl
adcl
loopne
in
dec
jo
cmp
rorl
test
xor
pop
mov
push
push
adc
mov
and
dec
mov
test
fisttpl
inc
bound
push
push
sbb
out
out
pop
mov
mov
push
rolb
imul
das
dec
mov
and
fstps
ja
mov
iret
in
jno
and
sbb
add
xor
cmp
insl
mov
lcall
test
pop
pop
mov
lret
jbe
xor
xor
cmp
sbb
push
and
push
lret
adc
and
fwait
lahf
lahf
xchg
cs
movzwl
sbb
jge
imul
and
xchg
or
xor
lret
add
stos
dec
sub
inc
lock
aam
or
cmp
inc
cmp
pop
into
ljmp
dec
lea
mov
inc
mov
push
or
dec
mov
addb
or
mov
ljmp
push
dec
test
pop
loopne
push
jge
scas
les
movsb
aam
push
dec
movsl
push
pushf
orb
or
sbb
or
pop
loop
mov
adc
cmp
cli
inc
mov
or
clc
in
mov
xor
jno
add
pop
add
push
sbb
add
pop
and
pop
mov
mov
and
lret
outsb
std
loop
mov
and
adc
add
dec
xor
inc
xchg
jg
and
add
repz
cmp
push
push
test
inc
mov
loope
push
cltd
cld
adc
add
adc
dec
jo
lret
dec
int3
cmp
and
mov
sbb
or
test
int3
sub
subl
or
popf
jb
jb
stos
push
es
arpl
dec
mov
outsb
mov
in
add
xchg
adc
test
xorb
pop
xor
aas
push
cmp
pushf
ret
push
xchg
dec
push
cmp
push
daa
mov
or
gs
rclb
dec
pushf
xor
lods
mov
inc
roll
int3
xchg
cmp
xor
mov
pop
fs
and
insb
pop
mov
push
cmp
jb
push
sub
dec
iret
mov
xchg
sbb
dec
jae
in
jg
sarb
add
sahf
inc
int
sahf
subb
inc
out
and
dec
loope
xchg
pop
push
andb
into
aam
addr16
mov
inc
xchg
lret
push
add
sahf
mov
cltd
or
lahf
xchg
mov
xor
and
shll
xchg
xor
mov
es
mov
push
add
stos
inc
mov
mov
aam
lret
or
rclb
push
adc
add
subl
test
movsl
lret
pop
mov
xor
ja
sub
loop
adcl
test
outsl
in
or
les
sti
popa
adc
add
cmpl
mov
xor
mov
cmp
idivl
dec
xchg
adc
xlat
and
loopne,pt
leave
lock
nop
mov
lea
pop
mov
xor
push
ljmp
mov
sbb
adc
push
ja
vpsrlw
inc
std
push
pop
rolb
xor
and
es
aaa
into
jbe
pop
in
sbb
iret
cmpsb
cwtl
xor
sub
pop
int3
aad
int
mull
or
xchg
and
sub
add
jo
cmp
xor
cwtl
lret
inc
xchg
jo
es
push
bound
adc
xchg
or
push
xchg
fs
js
jnp
mov
and
inc
pop
ss
cmp
pop
dec
cwtl
push
lahf
int
xchg
sub
push
push
gs
lcall
push
into
or
lcall
xchg
mov
xchg
xchg
mov
cld
out
mov
orl
xchg
ljmp
push
loopne
bound
sahf
push
cmp
xor
and
xor
pop
pop
pop
cwtl
xor
inc
mov
aam
jno
push
inc
xor
fs
push
imul
xor
cmp
mov
mov
jnp
hlt
inc
mov
xor
or
mov
mov
or
xchg
test
addl
inc
and
pushf
adc
mov
and
mov
in
sbb
and
mov
or
rcrl
xchg
imul
loopne
roll
sub
mov
enter
xchg
test
lahf
stos
sub
test
out
xchg
adc
es
jae
push
popa
jmp
or
pop
push
push
pop
add
call
es
vprotw
fxch
lds
mov
push
shl
hlt
xchg
sbb
or
jae
into
int
scas
mov
jecxz
push
push
jo
aas
aad
shll
push
mov
negl
push
inc
cwtl
mov
xlat
lcall
push
pop
mov
mov
scas
jne
or
imull
jb
adc
dec
push
inc
in
sar
jge
stc
sbbb
out
call
test
lods
jo
or
ret
inc
adc
in
inc
dec
dec
test
xchg
xorl
push
push
rclb
mov
adc
sbb
add
mov
cs
pop
mov
stos
inc
cmp
sub
loopne
mov
scas
add
or
jo
push
mov
test
dec
loope
icebp
lret
fwait
dec
cwtl
adc
stos
cmp
jb
out
add
push
xchg
stos
sbb
xor
xor
push
lods
orl
int
ret
sbb
jno
scas
lret
lods
sub
adc
lahf
dec
and
popf
jo
mov
jno
jbe
lcall
push
cmpsb
inc
mov
xchg
out
js
push
std
or
add
ja
push
xor
js
insb
loope
pushf
mov
lret
mov
pop
push
dec
outsl
shlb
incl
push
mov
push
addb
mov
nop
push
aam
push
dec
xor
add
mov
test
xor
jno
and
lahf
lret
dec
movhps
lods
lods
add
sti
cmpl
mov
xchg
mov
add
in
sub
in
nop
dec
out
adc
test
and
pusha
mov
cmp
lods
cmp
and
negl
into
inc
hlt
aas
es
scas
enter
jno,pn
jae
xor
cs
xor
mov
test
cmc
mov
out
inc
inc
pop
insb
outsb
or
rcl
and
sbbb
push
stos
pop
inc
xor
xchg
dec
jne
cmp
pop
rclb
imul
dec
cmp
sbb
lcall
das
ja
jb
push
inc
fmuls
add
ljmp
mov
orl
push
ja
pop
adc
lea
lds
call
add
rol
sbb
das
and
ljmp
aaa
sbb
push
cmp
pop
add
incl
jge
fs
cmp
pop
mov
sbb
pop
sbb
outsb
fs
cmpsb
adc
sub
hlt
sub
inc
add
lret
loop
stos
adc
and
push
stos
imul
add
orb
enter
push
sbbl
cwtl
jno
lods
fadds
pop
inc
sub
sbb
and
pushf
and
add
xchg
imul
cmc
jnp
int
xchg
stos
in
ljmp
stc
mov
xchg
mov
add
jp
cmpb
adc
mov
pop
in
callw
dec
mov
lret
add
addl
imul
gs
cs
nop
add
mov
xchg
test
fwait
subb
xor
or
sbb
pop
xor
or
and
sbb
xchg
andb
int
dec
mov
push
add
pushf
rcll
push
mov
push
inc
push
ja
add
xchg
imul
xor
adc
pop
mov
movsb
je
mov
xchg
cld
ds
andl
or
and
lock
cld
and
add
pop
or
add
lret
sub
dec
xlat
inc
mov
repnz
xor
add
sub
rclb
idiv
cmpb
rorl
cmp
cltd
fcomi
inc
sub
sbb
cs
and
in
xchg
loope
stos
adc
push
xchg
push
int
push
mov
jo
mov
inc
and
into
push
xor
sti
inc
arpl
cmpl
add
rcrb
adc
push
test
in
sbb
push
stc
daa
pop
xchg
or
mov
dec
mov
sahf
aad
cmp
fstps
jp
mov
xorb
mov
in
or
orb
pop
sar
js
xor
loop
lret
add
mov
mov
subl
loopne
lahf
push
push
dec
cmp
jae
cmp
and
stc
pop
push
andl
popa
or
push
call
add
push
aam
shl
push
test
jne
cmp
loope
dec
cmp
or
es
and
sub
and
scas
inc
xchg
mov
mov
test
add
push
subl
xchg
mov
das
stos
push
push
adc
test
pop
cmp
leave
ds
dec
mov
and
dec
add
cltd
sub
jge
sub
pop
add
inc
jl
popa
jp
inc
test
adc
sub
arpl
rol
or
enter
fnstcw
mov
cltd
test
adc
push
scas
adc
stc
es
cmp
cmp
pop
in
lret
adc
jge
mov
int
jae
and
lock
push
insl
push
push
test
pop
jge
cmp
subb
sbb
loopne
addr16
add
ds
adc
mov
ret
inc
lock
push
les
add
push
sbb
dec
sbb
add
cmp
mov
push
inc
mov
push
pop
inc
pop
in
cmp
loop
scas
cmpsl
jo
jb
arpl
cs
cmp
add
enter
xchg
mov
jecxz
into
inc
leave
push
sub
movntq
stos
and
ret
mov
mov
or
aam
push
push
in
addl
in
int
jp
test
out
add
cs
adc
mov
push
mov
add
in
xchg
lahf
movsb
inc
loopne
es
add
jp
sub
fs
rcrb
mov
push
sbb
in
test
mov
mov
add
jb
jle
xchg
or
xchg
repz
mov
int
dec
xor
mov
fsubl
inc
cs
les
cwtl
ret
hlt
jo
cmpb
mov
int
aas
popf
sub
loope
movsb
adc
adc
enter
add
jbe
sbbb
cmp
icebp
push
xchg
fstps
adc
and
pusha
sub
shrb
cmp
lock
adc
repnz
push
inc
mov
test
xchg
shl
sub
clc
into
les
mulb
mov
mov
pop
jae
pushf
mov
push
add
inc
rcr
add
xor
sbb
mov
pop
fmull
or
test
addl
mov
andl
sbb
adcl
test
add
xchg
push
hlt
push
jae
andb
lock
dec
fildll
push
push
push
addl
nop
mov
andl
pushw
dec
xchg
or
mov
sahf
mov
sub
pop
add
add
stc
cmpsb
sbb
add
cs
and
inc
sub
mov
xorl
orl
aad
ror
pusha
mov
dec
into
lret
push
das
testl
add
cmp
test
into
push
xorb
mov
dec
and
xchg
inc
mov
mov
jo
test
add
into
repnz
pop
xchg
fcoms
add
xor
inc
cmp
dec
cmp
xor
inc
cmp
loope
fdivrs
xlat
or
mov
adc
push
cmp
fs
shrl
jo
pusha
jno
push
inc
xor
cmpsl
mov
dec
add
cmpsb
popl
push
inc
jae
bnd
mov
adc
cs
loope
add
fisubrl
leave
jne
aaa
loopne
inc
mov
shr
push
ret
mov
jmp
inc
dec
inc
rcrl
xchg
scas
lcall
jns
xor
sbbl
mov
push
scas
pop
sub
or
out
push
inc
add
imul
or
push
dec
jno
pushf
jae
movsl
in
push
push
es
popf
ljmp
bound
cmp
pushl
add
bound
sub
dec
dec
sbb
mov
xor
or
inc
int3
push
inc
cs
push
mov
gs
das
bound
push
pop
stos
push
add
ljmp
cmc
push
jmp
jnp
or
adc
inc
or
sub
mov
adc
sub
mov
sahf
mov
push
sbb
flds
push
push
pop
lock
or
or
adc
dec
pushl
test
cs
xor
and
lods
mov
mov
and
iret
loop
rclb
stos
jp
sub
xor
ret
cld
and
push
xor
adc
sub
pop
orl
sub
testb
test
and
push
jo
mov
or
ret
div
sti
jp
xchg
inc
scas
pop
popa
mov
cltd
mov
xor
popa
push
scas
pushf
or
sub
xor
test
into
repnz
int
pop
push
xchg
push
push
mov
das
in
push
shll
or
mov
jmp
push
xor
fs
fsubrs
cmp
inc
loopne
stos
das
jo
xchg
mov
add
enter
mov
test
mov
inc
adc
into
push
jo
push
stos
inc
mov
mov
mov
inc
roll
sbbb
cmp
adc
mov
in
scas
jns
outsb
imul
sub
add
add
jo
pop
daa
mov
repz
aad
sbb
dec
je
push
cmp
fldcw
dec
push
test
ret
and
sbb
lahf
clc
imul
jbe
push
pop
mov
loopne
loope
jno
adc
push
lea
ds
call
mov
mov
adc
push
xchg
fildl
inc
push
sbb
pop
test
xchg
addl
enter
js
dec
in
xchg
and
or
or
fists
push
cmp
or
sub
sbb
ss
movl
popa
cmp
xor
cld
pop
test
sub
fnstsw
rolb
dec
icebp
rcl
cmp
rolb
push
pop
fldcw
jb
sarb
cmc
inc
or
mov
hlt
jg
into
mov
mov
stc
adc
add
sbb
aad
insb
cmp
insb
popa
mov
jmp
arpl
push
xor
jb
or
cmp
sti
lahf
mov
sub
mov
pusha
push
inc
jnp
or
adc
xor
aam
repz
jb
sub
out
int
ds
or
ss
push
inc
push
jae
add
int3
cmp
pusha
es
rorl
and
xor
int
dec
xlat
xlat
pop
cmp
cmp
mov
cwtl
adc
xchg
test
cltd
call
pop
adc
push
lcall
sbb
or
sbbb
loopne
push
jl
jl
xor
pop
push
cmp
dec
push
jb
lret
popa
loopne
imul
test
stos
jecxz
lret
add
or
push
push
inc
cwtl
es
xor
cmpsb
orb
xlat
mov
push
sbbb
cmpsb
data16
or
sbb
add
scas
add
push
insl
int
mov
lods
es
mov
cmp
bound
inc
mov
andb
mov
jo
sbb
ret
pop
xor
mov
or
inc
addb
shrb
ds
mov
scas
stos
out
inc
imul
pop
pop
test
int3
pop
lds
push
sahf
push
mov
add
aam
sub
movhps
push
xorb
xor
xor
orb
push
or
rcr
shlb
push
or
sbb
inc
scas
cltd
cmp
into
out
add
in
jno
dec
push
adc
pop
and
jmp
int
add
clc
or
lods
mov
push
shrl
or
xorb
shlb
xor
sarb
add
fstl
adc
inc
add
data16
rolb
out
mov
mov
pop
icebp
xor
or
cmp
jbe
movsl
movsb
mov
sub
pushf
sub
icebp
incl
sbb
mov
add
jp
add
jbe
insl
add
push
add
cmove
mov
rep
fadds
add
mov
or
cmp
aad
xchg
cmp
movsb
ljmp
les
mov
push
push
iret
je
or
lock
aas
inc
mov
add
cmpsb
xchg
lret
shl
ret
out
and
inc
scas
mov
lock
xlat
les
jb
xor
lcall
rclb
inc
inc
ret
xchg
and
stos
add
scas
push
cmpsl
nop
fisttpll
outsl
cmp
jno
shll
push
test
std
out
add
mov
les
and
gs
ret
inc
stos
jo
cmp
jecxz
jb
dec
mov
cmpsb
mov
call
repnz
add
dec
mov
jns
lods
jo
dec
sub
daa
jg
cmp
inc
daa
scas
mov
push
dec
test
out
cmp
arpl
sub
push
push
push
push
inc
sub
jmp
xor
and
push
push
jb
mov
popa
outsb
pop
orl
push
mov
test
xchg
adc
into
loope
lcallw
push
cmp
add
lret
andl
lcall
enter
add
mov
xchg
inc
incl
xlat
adc
sahf
and
sbb
enter
clc
adc
data16
mov
mov
lea
xchg
or
and
add
add
mov
scas
lret
rorb
cltd
pusha
stos
inc
xlat
dec
dec
cmpsb
mov
shll
jecxz
add
in
aam
add
pop
gs
sahf
add
nop
add
add
shrb
push
jae
pop
mov
inc
mov
or
cwtl
lret
das
cmpsl
pop
shll
push
and
stos
push
mov
test
add
mov
push
xchg
cmp
ss
pop
aam
jge
jle
mov
and
push
js
loope
xchg
daa
xor
and
cmpsb
mov
push
addl
icebp
jg
xchg
lret
lret
add
pop
pop
lock
jno
inc
or
pop
inc
adc
lods
xchg
stos
inc
xchg
fistl
add
test
cld
pop
or
loop
loope
xchg
add
rolb
xor
sbb
adc
lahf
lcall
cli
inc
sti
stos
add
fadds
push
mov
popf
push
icebp
lea
xor
jg
xchg
add
xorb
push
push
fs
stos
xor
xor
push
loopne
pop
push
or
mov
sbb
es
into
adc
stos
jb
sbb
pop
xor
xchg
loope
mov
sbb
lcall
int
jo
or
lds
loope
loop
jbe
ss
and
in
add
in
sbb
xor
leave
cmp
lods
xchg
and
jl
out
andl
scas
mov
xchg
popa
gs
mov
push
lret
dec
jmp
xor
xchg
pushf
pusha
xor
mull
inc
xchg
jae
cmp
stos
or
inc
mov
lcall
aam
scas
stos
mov
scas
push
lret
jnp
mov
cmp
xor
push
xor
mov
xchg
jne
cmp
xor
cmp
lea
lea
jl
scas
aas
push
mov
fildll
push
in
adc
inc
push
cmp
push
pop
mov
call
jo
or
dec
inc
mov
inc
pusha
add
stos
cltd
jo
in
sahf
je
popf
pop
jge
cmpsb
sub
pop
xor
mov
inc
aas
jnp
adcb
daa
pop
pusha
loopne
or
cmp
out
pusha
insb
mov
pop
push
loopne
adc
push
add
add
jle
sbb
and
mov
stc
lret
rolb
sbb
js
stos
popa
mov
jne
movsl
fwait
cwtl
push
inc
es
mov
ret
jl
rcr
jo
jb
push
std
rclb
cmp
scas
mov
adc
rorb
xor
jbe
rcrl
xchg
lret
inc
aaa
jg
ds
sub
fwait
or
in
loopne
cmp
stos
xorl
sbb
add
add
filds
cmpsl
enter
rcrl
ret
ss
rcrb
roll
lcall
popf
stos
fldenv
jp
fidivs
mov
adc
xchg
inc
add
dec
out
and
pop
ljmp
dec
adc
dec
sub
cmp
mov
mov
cmp
js
cmp
mov
ret
imul
cs
mov
sbb
mov
xor
jb,pn
and
push
cmpsb
add
push
push
add
mov
or
int
push
and
fcomps
cmp
or
mov
out
inc
in
mov
cmp
es
push
pop
hlt
add
jge
lahf
push
fbstp
push
into
add
iret
pop
add
lods
pushl
test
lret
sub
push
loopne
adcb
push
in
jno
or
mov
mov
dec
insl
pop
test
sbb
push
mov
ljmp
aam
sub
outsb
into
and
mov
inc
out
in
or
int
hlt
or
mov
sbb
test
into
mov
fdivr
pop
add
xor
sbb
loope
cwtl
enter
out
or
stos
add
mov
pop
mov
xor
push
les
push
hlt
push
push
jecxz
loope
ja
inc
adc
dec
jnp
stc
sbb
in
pop
mov
push
add
lcall
push
mov
adc
mul
sub
pop
inc
sub
mov
or
and
jno
dec
clc
icebp
inc
inc
imul
jno
shll
pop
sti
push
loopne
fs
into
jl
cmp
mov
add
xchg
dec
or
pusha
cli
stos
or
mov
stos
xor
sbb
cmp
mov
ret
mov
add
xor
lret
jae
dec
jmp
push
adc
mov
push
mov
xorl
inc
cmp
pop
or
add
jb
clc
mov
xor
dec
jno
xchg
mov
xor
xchg
mov
inc
mov
loopne
push
outsl
movsb
sarb
add
push
pop
out
outsl
lock
xchg
jp
push
ret
xor
add
xlat
leave
daa
xor
mov
jo
lret
push
je
ret
mov
dec
or
insl
mov
sti
mov
cmp
insb
mov
and
rcrb
sbb
cs
mov
fdivr
scas
sub
cltd
lods
xchg
mov
push
scas
or
addr16
lods
xchg
ret
push
xor
std
inc
cmp
divb
fcmovne
dec
nop
sub
xor
lds
sahf
add
adc
aas
cmp
es
pop
test
lahf
xlat
push
subl
mov
xor
icebp
not
push
rorb
je
mov
or
inc
jae
or
fwait
into
push
sub
add
mov
mov
jno
or
add
xchg
cmpsb
or
push
jl
leave
and
cmp
int
cmp
sbbl
push
rclb
sbb
xchg
test
xorb
sahf
mov
xor
int
jae
daa
push
and
cmpsb
and
xchg
jno
loope
cmpsb
mov
mov
outsl
pushf
add
fwait
adc
sbb
int
fisubrl
ss
rclb
test
jns
adc
loop
mov
loopne
aad
push
mov
cltd
push
adc
adc
jne
sahf
shrl
movsb
xor
inc
xchg
mov
xchg
lock
adc
xchg
mov
add
inc
mov
push
xlat
sbb
mov
data16
cltd
imul
mov
mov
add
mov
mov
xor
gs
xchg
lret
adc
leave
xor
imull
inc
add
xor
rolb
loop
mov
mov
inc
sub
dec
mov
cmp
cmp
subb
dec
push
mov
gs
sub
pop
xor
nop
cmp
ja
xchg
mov
add
outsb
mov
sub
data16
push
mov
mov
sub
mov
fsubl
pop
sub
pop
lahf
inc
imul
add
push
jnp
cmp
bound
mov
jns
test
addr16
jae
adc
sub
cmp
pop
loopne
fcomp
mov
mov
add
cmp
mov
sbb
add
dec
add
cmp
test
rcrb
add
int
jg
push
dec
xchg
add
aad
inc
push
fisttps
xchg
stos
cmp
addl
in
xchg
rcrb
inc
enter
and
leave
xlat
push
or
cmp
xchg
and
xlat
xchg
rcrl
xorl
push
add
xor
adcb
out
and
jp
jecxz,pn
xor
push
pusha
sbb
rclb
add
rcrb
call
movsl
enter
subl
aas
loope
iret
mov
fsubrs
push
push
sbb
pop
nop
or
mov
adc
aam
jnp
inc
cmp
andb
sahf
jne
andb
cmp
push
sbb
pop
pop
jle
mov
ret
loope
mov
pop
add
sub
inc
cmc
in
inc
inc
mov
bound
sbb
and
repz
nop
stos
xor
push
scas
pop
mov
mov
jo
test
pop
ja
jbe
xorl
cmpsb
pop
out
scas
cmp
sub
and
pushf
cwtl
icebp
das
je
daa
sub
or
movsl
cld
dec
xchg
or
fldenv
push
mov
test
sub
dec
mov
arpl
leave
and
sbb
push
sarb
dec
test
and
sub
aam
pop
pop
js
inc
sbb
adc
pop
push
ss
or
fistpl
xorb
adcb
xor
xor
cwtl
mov
mov
mov
mov
inc
nop
mov
dec
fs
fisubl
cltd
sbb
lahf
mov
mov
push
mov
loopw
stos
xor
pop
inc
push
jge
addr16
inc
mov
das
ja
mov
scas
int
xor
mov
scas
je
cwtl
lods
icebp
aad
sub
and
loop
outsl
inc
inc
push
loope
sub
pop
sub
cmp
gs
cmpsb
data16
push
mov
nop
cmp
scas
shlb
fldl
sahf
call
adc
inc
jae
mov
test
dec
mov
mov
rolb
jge
inc
scas
and
aad
or
mov
int
cwtl
mov
sub
xor
and
subb
inc
push
mov
xor
adc
or
test
out
mov
add
ds
inc
push
fildl
dec
es
cltd
inc
pop
int
stos
or
dec
and
popa
mov
cmpsb
lahf
nop
xlat
xor
sbb
jb
sarb
sub
addb
repz
daa
add
ljmp
mov
push
and
stos
inc
and
jb
dec
hlt
sub
adc
jo
cld
daa
imul
push
mov
hlt
subb
enter
test
pop
loopne
cltd
negb
cmp
or
pop
xor
xlat
cltd
push
lret
xlat
pushf
pop
sub
loope
stos
jns
mov
mov
sbb
mov
pop
lcall
mov
mov
jb
leave
das
mov
jo
adc
sbb
or
or
mov
cmp
lods
jns
adc
mov
push
push
inc
mov
jl
data16
call
sbb
sbb
mov
movsl
das
xchg
mov
shlb
pop
jns
mov
adc
mov
pop
inc
lods
int3
and
in
or
insb
and
stos
in
jne
popa
nop
jle
jb
mov
jbe
scas
inc
xchg
push
pop
fadds
sub
call
cmp
xchg
mov
outsl
and
inc
cs
je
ja
aaa
mov
push
fldcw
add
adc
fcmovnb
xor
loope
inc
popl
cltd
pushf
inc
iret
scas
pusha
mov
cmp
imul
daa
pusha
cmpl
push
add
or
les
test
ds
sbb
jno
aaa
cvtps2pd
in
ret
insl
sbb
scas
sbb
inc
mov
pop
cwtl
mov
sub
and
scas
jbe
jno
xor
jp
jae
sbb
fldt
addr16
cmp
mov
andb
jb
sub
adc
push
je
mov
xchg
sti
and
lcall
push
rcll
sahf
adc
xchg
mull
into
and
add
mov
inc
inc
mov
int
or
leave
rolb
mov
andb
xchg
and
or
push
aas
and
xor
add
enter
sub
push
and
xchg
or
lods
into
mov
sub
out
xor
and
adc
sub
in
mov
sbb
cmpsl
adc
mov
inc
sub
cmp
js
daa
and
fdivr
adc
lret
or
or
dec
add
jns
je
jg
inc
loopne
pop
mov
sbb
lret
loope
subb
jge
and
in
sbb
mov
loopne
fs
xlat
popf
ljmp
xor
jb
cmp
mov
or
or
push
inc
inc
xchg
enter
xor
add
movsb
or
ret
push
nop
and
cmpsb
mov
pop
int
or
sahf
xchg
cmp
sbb
loope
xor
mov
cwtl
arpl
lcall
cmpl
enter
xchg
mov
xor
mov
sti
pop
inc
imul
inc
and
rorb
es
loopne
or
in
or
xor
sub
enterw
dec
xor
pop
arpl
or
jbe
in
cs
aas
cmp
aad
js
ret
mulb
mov
sbb
sub
imul
mov
adc
rol
jae
loopne
stc
loopne
and
test
fnsave
sbb
aaa
cmp
push
and
je
xchg
cld
or
xor
addl
xchg
je
fs
add
dec
aad
out
es
mov
xor
shlb
inc
es
sbb
jb
xchg
xor
mov
pop
push
imul
iret
adc
rolb
fldl
lret
inc
or
xchg
mov
mov
adc
loope
mov
mov
popf
sub
jb
mov
lcall
sbb
adc
lcall
out
and
push
add
mov
je
push
cltd
xchg
sub
pop
or
cmp
mov
jno
lods
sbbb
push
je
int3
incl
movsb
cwtl
or
jo
leave
and
pop
mov
or
add
adc
pop
inc
aam
dec
push
dec
inc
dec
adc
pop
sbb
sbbl
dec
mov
test
jmp
les
dec
cs
insl
adc
push
rol
loopne
cmp
popa
call
jno
enter
dec
adc
xor
cltd
rclb
sbb
out
xchg
push
in
or
subl
cmpsl
mov
jb
scas
test
pop
xchg
int
adc
out
test
out
cmpsl
pushf
and
cs
jo
inc
aam
push
ret
loope
inc
cwtl
add
shlb
mov
cmp
push
adc
add
aad
or
popf
jo
sbb
into
in
adc
into
mov
xor
dec
call
sbb
push
sbb
push
inc
movsl
jb
xchg
add
test
add
push
outsl
into
clc
mov
cmpsw
and
aam
sbb
and
push
cmp
arpl
or
xlat
gs
test
pop
add
cld
jmp
add
adc
loopne
adc
sbbl
or
push
insb
push
iret
iret
or
push
sub
cmpsb
mov
inc
leave
pusha
push
or
loop
test
dec
push
cmp
pop
push
icebp
mov
dec
decb
inc
ret
pop
addl
dec
push
cmpsb
push
int
das
pusha
sub
or
ret
inc
cmp
adc
add
jb
mov
push
adc
rorl
test
stc
jp
push
xchg
mov
sbb
adc
dec
imul
int
gs
and
mov
add
test
lods
loop
leave
pop
add
test
icebp
or
jo
insb
xchg
scas
push
cwtl
cmp
aad
les
out
aad
stos
subl
xchg
xor
dec
cmp
jae
or
test
adc
loop
push
je
sub
add
call
push
enter
sbb
orl
sub
xchg
add
xor
push
sub
adc
adc
inc
adc
or
or
add
mov
insb
cmp
or
mov
cltd
add
fistl
pushl
shll
clc
outsb
jns
cmc
rolb
into
pop
mov
push
xor
lahf
jle
push
cwtl
add
add
dec
pop
jae
std
testl
add
xchg
push
mov
mov
enter
jmp
dec
je
inc
rcll
and
add
push
dec
mov
repz
mov
push
inc
popa
outsl
jnp
or
hlt
cmp
mov
mov
daa
insl
out
movsl
cmp
stc
pushf
xor
in
in
add
mov
mov
rol
xor
cs
jo
lcall
pop
cwtl
mov
in
jae
test
adc
in
push
xor
mov
cmp
test
add
inc
jecxz
and
pop
scas
mov
stos
push
mov
cmpsb
lret
fs
sbbb
pop
mov
sub
jo
push
inc
push
sbb
ret
jnp
inc
scas
add
add
addb
sbb
stos
shll
xor
xor
or
cmp
push
adcb
cmpsl
pop
push
add
and
xor
inc
loopne
leave
fsts
xchg
mov
or
pop
and
pop
scas
dec
aad
push
jo
enter
pop
cwtl
add
push
enter
adcb
mov
hlt
jecxz
iret
mov
aam
aas
mov
adc
mov
cmp
push
arpl
jne
pop
fimull
inc
sbb
and
and
iret
and
adc
jne
cltd
adc
adc
enter
ret
xor
test
icebp
mov
mov
pop
mov
jnp
jb
mov
inc
add
dec
mov
hlt
pop
les
sbb
pop
push
jp
mov
push
jg
imul
andl
aad
lret
je
add
cltd
mov
xchg
pop
jae
mov
or
sub
pushf
dec
lock
and
mov
mov
shl
insb
xor
inc
cwtl
mov
push
stos
mov
shll
inc
iret
push
in
rorb
add
pop
inc
add
push
push
loop
fnstsw
out
and
mov
fcoms
xor
or
ret
adc
dec
fwait
test
loopne
mov
add
out
dec
pushf
mov
or
mov
xor
sbb
out
jne
adc
push
incl
rclb
pop
sub
cmpsl
inc
mov
es
mov
and
inc
inc
movl
add
cwtl
aad
dec
cli
cmp
icebp
insl
xor
loop
cmp
dec
cld
pop
push
jp
popf
adcb
pop
es
stos
sub
mov
pusha
popf
jae
lods
jae
xor
cld
lds
stc
mov
xchg
cli
mov
inc
adc
xor
push
adc
pusha
mov
add
and
scas
sub
push
mov
dec
push
imull
scas
or
mov
lds
jne
push
push
divb
push
mov
in
fs
inc
pop
sub
xor
roll
adc
xorl
pop
es
es
lret
and
nop
sarl
inc
mov
lcall
add
mov
mov
fs
pushf
add
sbb
int
adc
push
mov
mov
cmp
push
dec
rorb
inc
test
aad
lret
push
push
adc
push
inc
mov
out
sbb
xor
imul
adc
cltd
cltd
sbb
dec
lret
popa
jbe
or
pop
inc
jmp
sbb
dec
test
mov
and
sti
mov
add
mov
sub
add
movl
adcl
cmp
adcb
lcall
aam
add
push
push
sbb
repnz
mov
movsb
adc
inc
sub
push
push
push
cs
mov
add
test
pop
cwtl
movl
cmp
xchg
ret
ficompl
loopne
cmp
adc
adc
cmpsl
add
pop
js
cwtl
pop
push
sbb
pop
in
cli
cmp
movsl
fs
and
popf
or
or
and
cmp
inc
jmp
gs
dec
loop
sub
pop
cmc
sub
gs
fwait
xor
popa
mov
mov
jno
push
add
push
es
stos
mov
test
mov
inc
mov
jo
aam
cwtl
jmp
cmp
pop
xchg
outsl
mov
ds
xor
shlb
sub
daa
mov
and
scas
mov
jnp
cmp
dec
cld
mov
mov
flds
enter
icebp
pop
pushf
sub
pushf
inc
outsb
inc
mov
mov
adc
xchg
clc
xor
pushl
das
idivb
xchg
rcll
adc
or
or
inc
and
fs
push
mov
sub
xlat
or
push
stos
es
orl
cmpsl
test
mov
mov
pop
inc
lock
pop
test
sub
dec
cmp
lret
jmp
cmp
gs
inc
mov
xchg
and
push
jnp
shl
ret
subb
inc
fisttpl
loopne
jb
xchg
pushf
or
jbe
and
mov
cmp
adc
lods
shrb
pushf
sbb
sbb
push
adc
add
jb
stos
jp
inc
jnp
or
mov
ljmp
loope
mov
push
xor
xor
add
xchg
in
push
cmpb
scas
xchg
test
orl
add
mov
fs
data16
outsl
lret
shrb
add
das
sub
out
push
mov
xchg
ljmp
roll
and
call
les
les
mov
test
pop
inc
inc
insb
lret
and
and
and
outsb
mov
push
dec
dec
enter
popl
and
jg
pop
ds
rolb
cmc
in
cld
sub
pusha
mov
sahf
test
push
push
and
mov
adc
in
add
loopne
adc
sahf
pop
loope
xor
mov
sbb
lea
jg
xchg
test
sbb
mov
sub
add
jb
sbb
addl
es
push
imul
xor
lods
xorl
pop
icebp
jecxz
inc
cmp
mov
hlt
test
push
push
cmpsl
push
jne
mov
sbb
outsl
or
stos
pop
adc
loope
push
sti
xchg
adc
or
rcll
sub
mov
movsb
sahf
rolb
dec
push
add
loope
cwtl
clc
in
fwait
or
pusha
es
jo
sbb
cli
xchg
sbb
jae
lahf
mov
add
je
cmp
ret
add
iret
inc
mov
pop
sub
xchg
enter
jp
push
pop
into
add
sub
jmp
stos
jbe
adc
lds
scas
testl
stc
ja
add
mov
add
shll
push
loope
das
insl
add
addb
mov
shl
out
mov
data16
add
or
es
pushf
fdivl
jge
cmpsb
ret
dec
loope
push
jae
pop
das
cld
adc
adc
scas
and
hlt
test
lock
or
or
and
xchg
adc
jb
lods
repz
and
adc
stos
mov
sbb
pop
push
push
sub
mov
pop
cmp
movsb
push
adcb
dec
jb
frstor
decb
popa
nop
push
out
cld
loopne
adc
jne
test
xchg
jmp
sbb
push
cmp
inc
and
mov
pop
push
pushf
mov
push
xlat
cmp
es
leave
adc
into
popf
and
mov
sbb
and
jb
mov
adc
pop
std
dec
xor
stos
push
lds
push
push
nop
fistpll
shl
add
adc
xorb
lds
sbbb
test
inc
hlt
xor
stc
pop
sbb
push
scas
lret
push
and
je
cwtl
jge
add
and
sbb
out
add
pushf
sub
daa
je
sbb
jge
add
mov
mov
push
and
push
sub
add
and
xchg
mov
stos
enter
inc
es
dec
js
or
xor
addr16
shrl
or
or
jmp
sbb
sub
lock
mov
jp
out
inc
jo
dec
sub
cmp
sti
add
test
and
sub
sub
push
mov
xchg
leave
jl
sbb
xor
xchg
rolb
loopne
inc
dec
leave
lret
jp
mov
negb
jne
jne
push
adc
sbb
xor
inc
imul
imul
clc
dec
adcl
jg
ret
jmp
or
call
sarb
es
inc
mov
mov
inc
cmp
dec
aad
loope
or
jne
sub
pop
mov
and
scas
sub
das
sbb
adc
xchg
je
dec
inc
arpl
add
fnstenv
loopne
in
in
test
pop
mov
andl
int3
xadd
mov
sub
sbb
in
test
mov
sub
ret
add
add
cmp
icebp
test
lcall
rcrb
sahf
pushf
or
out
push
mov
xchg
add
in
adc
js
push
fxch
mov
lret
sbb
sbbb
xorb
loopne
inc
test
rcll
push
cltd
dec
push
shrb
mov
or
rorb
orb
rorl
and
push
pushf
cmp
sbb
pop
daa
pop
pop
cmp
sahf
insb
incl
iret
icebp
add
dec
mov
fisubrs
add
xor
repz
ret
sbb
jle
incb
jmp
inc
fiaddl
adc
es
jno
dec
jl
push
add
mov
and
cmpb
add
mov
sbb
inc
adc
data16
rcrb
mov
out
mov
cmpsl
ds
loopne
loopne
das
or
add
add
leave
addl
push
inc
sub
mov
and
inc
jae
into
pop
cwtl
push
xor
imul
push
cmp
add
and
bound
shrb
push
mov
xchg
mov
cmpsb
mov
cmpsb
push
sub
jle
pusha
orl
sahf
push
lahf
insl
add
inc
into
popa
icebp
xchg
adc
outsl
lea
scas
add
push
mov
xchg
inc
cmp
push
mov
popa
sub
jge
add
adc
or
push
sub
adc
adc
lods
inc
mov
inc
insl
es
xchg
ret
xchg
ret
lods
xchg
add
sbb
push
int
lock
lcall
jb
dec
pop
rcr
jg
jo
mov
incb
nop
stos
sbbb
or
and
sub
lret
cltd
push
icebp
sbb
sub
dec
mov
or
pusha
ret
and
adc
gs
mov
add
popa
push
pop
jae
mov
movsb
js
inc
into
loopne
xchg
sub
lds
test
leave
adc
sbb
xor
jb
sub
sub
mov
in
test
dec
ret
adc
push
cmpsb
jmp
and
out
push
aam
mov
inc
mov
loopne
and
cmp
push
ljmp
shl
orb
dec
push
add
xlat
pop
mov
lea
xlat
inc
das
incb
es
cmp
pop
pushf
push
imul
and
pop
xchg
imul
or
repz
and
lods
pop
adc
in
mov
xor
js
arpl
and
enter
sbb
loop
pop
cmc
idiv
outsl
subb
add
push
add
add
push
bound
jae
mov
ret
jge
outsb
pop
pop
cwtl
ja
iret
jnp
adc
sub
fmulp
adc
or
cmpsl
nop
ret
adc
sbb
mov
mov
cmp
add
dec
nop
push
dec
add
fisubl
pusha
add
push
pop
inc
sbb
lods
clc
sbb
adc
add
sub
outsl
jb
mov
add
mov
pop
ljmp
insb
mov
sub
push
dec
and
test
and
in
inc
sub
andl
rcr
subl
sbb
stos
or
add
mov
or
sub
not
pushf
or
ss
jl
mov
sbbb
or
dec
xor
mov
lea
test
jae
jb
jecxz
xchg
xor
push
mov
mov
add
lcall
sbb
rcl
fistps
stos
mov
fidivrl
adc
std
andb
mov
jge
loopne
push
lods
jnp
adc
mov
imulb
dec
inc
mov
hlt
pop
sub
add
add
addr16
xor
insb
sub
sbbb
rorb
orb
call
pop
xchg
lods
lcall
aam
mov
push
scas
xor
roll
out
inc
push
mov
push
jo
mov
rolb
dec
out
push
push
xchg
cltd
pop
mov
cmp
or
cld
cwtl
aam
test
sub
or
pop
cmp
dec
in
aad
not
shl
adc
lea
es
push
mov
jl
enter
mov
mov
sbb
stos
pusha
out
repz
test
jle
and
jne
mov
pop
dec
subl
jb
jns
scas
lcall
mov
cmp
pop
addb
push
xchg
xchg
rclb
ret
rcll
inc
cmp
pop
mov
xchg
ret
add
push
mov
in
loope
push
push
xchg
jge
pop
std
inc
xor
int
xchg
cmp
sbb
rclb
movsl
pop
add
jl
enter
sub
fcmovne
dec
gs
add
aam
gs
popf
adc
shr
shlb
jg
jb
pop
in
inc
popa
and
and
dec
push
test
jae
stos
popa
bound
cmp
add
ret
imul
les
js
cltd
ret
lret
lods
incl
xchg
sub
fcmove
cs
cs
and
add
adc
inc
pop
insb
sub
jnp
pushf
test
out
test
shlb
pop
mov
dec
cmp
sbb
and
sub
push
adc
or
xchg
mov
out
xchg
sbb
shrl
lods
pop
aam
test
stc
loop
ret
mov
jno
xor
adc
or
loope
inc
imul
mov
lods
push
orb
in
popa
or
inc
mov
lock
cmp
mov
mov
rolb
int3
inc
dec
in
add
fisttpl
js
cmp
js
aam
sbb
inc
jg
lock
call
inc
jns
ja
inc
adcb
add
int
dec
jnp
lock
xor
lds
ret
lahf
mov
insl
xchg
xchg
mov
fcoml
xchg
data16
mov
jle
popa
mov
add
fmull
adc
call
inc
jae
enter
movsb
sbbb
push
in
sub
mov
and
jl
out
adc
lret
xchg
sub
jae
fildll
inc
mov
dec
pusha
or
lea
aad
lods
sarb
sub
push
or
jo
inc
es
adc
and
cmp
adc
rol
fs
jns
js
out
popa
add
or
jo
dec
cmpsb
in
xchg
mov
cmp
mov
jne
lret
shrb
sub
mov
call
das
pushf
aas
add
lahf
mov
push
add
and
xor
push
inc
pop
pop
push
sbb
mov
mov
gs
mov
sbb
ja
mov
aam
jb
xor
scas
mov
xchg
rorl
jmp
loope
jno
sti
scas
xchg
sahf
loope
mov
and
add
sub
addr16
inc
cmp
mov
ljmp
push
push
sub
cs
jns
test
sbb
pop
push
mov
jnp
inc
rorb
sub
push
repnz
orb
mov
jg
jae
les
push
enter
mov
popa
call
push
adc
pushf
jae
xlat
or
mov
fcmovnbe
xchg
andl
scas
pop
inc
scas
les
dec
push
mov
mov
stos
add
fists
push
pop
dec
mov
dec
or
enter
jnp
in
filds
scas
add
in
inc
into
xchg
jo
push
scas
cmp
xchg
mov
icebp
jb
xchg
movsb
mov
add
xchg
jecxz
shr
sahf
pop
push
adc
mov
jp
cmp
sbb
xor
push
jnp
mov
scas
cmp
push
push
inc
jecxz
cs
xor
sti
imul
lods
push
or
push
mov
xchg
push
jle
push
pop
adc
cs
inc
mov
enter
inc
mov
jno
sbb
sbb
scas
stos
cltd
dec
xchg
int3
jne
fsub
push
int
mov
pop
xor
xchg
jp
subl
xchg
stos
sbb
mov
int
mov
add
lds
addl
or
inc
rclb
adc
cmp
adc
jb
stos
mov
test
mov
lret
sub
and
popa
jg
in
add
mov
pop
adc
ja
mov
cmp
mov
out
add
test
int3
push
mov
pop
jb
call
aaa
adcb
inc
or
or
adc
adc
dec
push
sbb
and
or
or
into
iret
inc
sbb
test
icebp
fistps
inc
outsl
test
loop
aam
movsl
push
mov
jno
in
mov
pop
sbb
pop
pmuludq
xchg
add
cs
push
inc
xchg
mov
push
lahf
inc
test
add
and
push
movsl
cs
leave
push
sti
xor
cmp
inc
mov
pop
sbb
jnp
mov
pop
push
push
data16
mov
mov
jb
sbb
adc
mov
push
mov
cmp
es
cmpsb
inc
add
jmp
mov
jo
mov
cmp
cs
and
sub
mov
cltd
sub
jle
pop
pop
add
stos
pop
push
xorl
push
mov
push
mov
imul
pushf
mov
and
mov
aad
push
sbb
cli
outsl
mov
daa
nop
xor
mov
les
shll
aam
sbb
pop
inc
cld
mov
je
mov
cmp
cmp
sub
inc
sub
adc
adc
or
rorl
pop
push
jmp
inc
in
call
xchg
test
test
xchg
cwtl
push
xchg
imul
adc
add
inc
cld
and
xor
mov
push
enter
push
pop
lods
divb
addb
in
stos
add
add
rorb
test
dec
xor
call
vsqrtps
aas
push
mov
dec
test
ud2
xor
loope
mov
dec
adcl
jno
add
insb
lret
jecxz
jnp
xor
outsl
stos
cmp
cmp
cmp
daa
pusha
jb
popa
in
fldl
jo
test
pop
imul
inc
sbb
ljmp
mov
sbb
pop
pusha
jo
addl
xor
pop
shl
nop
cmp
add
fcoms
add
rolb
inc
int
add
mov
std
push
lock
addb
sahf
cltd
lret
sbb
mov
mov
mov
or
icebp
jmp
sub
or
add
dec
add
fdivs
add
mov
mov
lds
es
add
loop
sarb
cmp
dec
test
adc
shlb
sbb
adc
into
arpl
adc
dec
jne
add
sbb
sbb
push
push
adc
aad
inc
xor
add
xchg
aaa
int3
into
or
out
imul
sbb
inc
ret
pop
mov
inc
sbb
mov
adc
call
add
mov
orl
andb
mov
or
lret
daa
call
pop
lods
in
icebp
mov
inc
in
adc
push
add
pusha
and
xor
clc
sbb
lock
xorl
push
jbe
xchg
jmp
mov
add
push
push
in
xor
icebp
push
roll
mov
push
add
int3
inc
adc
jb
xorb
push
push
aad
and
sub
shl
mov
and
dec
adc
xor
das
mov
lret
lret
push
mov
jecxz
out
rorl
push
insb
adc
jb
mov
int3
les
inc
lods
and
stos
js
andb
out
xor
loopne
subb
pushf
sub
in
js
in
inc
jae
subl
pusha
jb
cltd
fidivrl
mov
jne
add
roll
push
jns
aam
mov
int
pop
or
push
ja
out
add
add
and
or
mov
mov
dec
jno
in
dec
es
push
shll
loopne
push
cmpsl
cmp
scas
pusha
js
fiadds
jae
jno
xor
push
sub
add
rorl
in
je
call
inc
cmp
add
lds
es
mov
cld
mov
into
push
lea
pop
hlt
mov
sahf
xor
mov
cmpsl
pop
xchg
add
aad
pushf
xchg
adc
and
mov
jbe
add
pop
xor
dec
push
jo
push
mov
pop
ljmp
or
sbb
xor
push
outsb
xchg
or
lods
mov
jae
in
in
inc
es
dec
rorl
mov
jmp
push
sub
push
push
andl
cmpsl
loope
gs
xchg
imul
jo
scas
in
mov
jb
lahf
and
incl
rcl
mov
push
stos
mov
movsl
mov
push
popl
push
or
mov
adc
mov
je
sbb
and
stos
cwtl
pusha
fstps
int3
stos
imul
sbb
push
pop
cmp
push
mov
push
shlb
inc
ret
loopne
dec
sub
sbb
dec
aad
push
insl
pop
jnp
loopne
mov
rolb
out
and
or
pop
mov
cli
xchg
dec
aad
xor
stos
imul
aad
pop
aad
push
iret
or
inc
aad
jl
daa
add
fcoml
loop
mov
pop
push
xchg
jo
jns
jnp
push
add
jae
cmp
insl
pusha
sahf
push
pushf
push
adc
mov
adc
leave
pusha
loope
xchg
xor
test
xchg
push
cmp
stos
les
cmpsl
sbb
mov
mov
add
add
fs
push
push
ret
push
gs
sbbl
inc
sbb
hlt
jecxz
or
inc
push
fsts
in
add
mov
stos
loopne
mov
push
xor
sub
or
push
pop
xchg
pop
xchg
lcall
mov
out
and
inc
push
lret
sbb
mov
mov
inc
and
inc
push
push
xor
cs
pop
gs
mov
pusha
ds
push
jmp
mov
lds
push
sbbb
add
xchg
pusha
popa
and
out
pop
mov
in
inc
imul
sbb
cmpl
stc
xor
jne
cmpsl
jne
lods
add
mov
enter
pushf
or
push
or
sub
mov
fs
push
sub
push
push
push
jnp
jo
jl
dec
inc
mov
cmp
subl
decb
hlt
jecxz
int3
ljmp
add
push
or
inc
xor
dec
mov
pop
daa
xlat
pop
sti
pushl
rorb
add
inc
push
adcb
inc
push
jnp
leave
inc
add
ror
movsl
jb
jae
push
daa
xchg
push
push
and
sarb
push
pop
icebp
push
jns
std
push
sarb
das
or
push
movsb
cltd
sub
fistl
inc
mov
idivb
push
in
push
sbb
jnp
jo
incl
jmp
push
xchg
cli
fcomp
mov
lret
sbb
out
xchg
rolb
es
in
aad
adc
lahf
out
cmp
adc
xor
xchg
outsb
enter
add
push
cs
mov
stc
bsr
or
sub
mov
hlt
fs
or
aad
add
xor
inc
subl
push
xchg
xor
shrl
ret
enter
mov
or
mov
xchg
call
jb
inc
cmp
int3
or
lcall
mov
lods
pop
test
leave
pusha
ret
popf
stos
aaa
daa
out
cmp
stc
ret
call
adc
sub
mull
push
std
lret
stos
jno
add
add
iret
push
push
add
mov
pop
pop
add
mov
mov
or
push
sbb
sub
xor
and
and
ljmp
cmpsl
sbb
cmpsb
push
fnstcw
or
inc
sbb
mov
xor
xor
imul
pop
xor
adc
nop
add
xor
sahf
test
mov
pop
adc
test
adc
adc
lds
pushf
add
jle
sbb
mov
add
dec
and
xor
addb
push
push
or
cmpsb
mov
rcrb
loopne
push
xchg
ret
add
sbb
cli
and
out
push
addr16
inc
sbb
cmpsb
push
cltd
pop
sbb
int
mov
mov
andl
xchg
adcl
push
or
push
mov
push
imul
mov
adc
test
or
test
xor
pop
loope
cltd
xchg
jg
mov
cmp
shlb
leave
inc
or
cmp
and
jle
cltd
mov
add
xor
mov
ret
ja
push
sub
cmp
sub
notb
inc
sbb
sbbb
sahf
inc
inc
add
pop
sub
rolb
arpl
pop
inc
dec
jns
repz
loopne
pop
loopne
and
jo
ja
jno
adc
or
pop
jae
mov
ja
out
inc
test
push
mov
add
lock
rolb
imul
pop
push
pop
mov
rcrb
and
dec
int
lcall
in
or
push
or
dec
push
mov
loop
cmp
adc
push
gs
enter
in
jp
loope
scas
jo,pn
lock
jo
xor
clc
das
test
push
sbb
test
push
test
ret
rclb
xor
jnp
and
or
testl
insb
adc
xchg
ret
inc
push
jno
pop
nop
mov
and
adc
pop
popa
outsl
imul
cmp
and
lcall
fistps
inc
inc
roll
mov
mov
inc
inc
sarb
mov
cmc
mov
xor
stos
arpl
imul
adc
testb
fadds
mov
xchg
push
je
xchg
mov
in
xor
fadds
pop
aaa
lods
pop
inc
std
xchg
dec
add
inc
mov
xor
aad
sub
inc
in
js
jns
mov
lods
dec
add
inc
inc
push
or
pop
add
jo
ss
mov
jmp
daa
call
fsubrs
test
inc
das
mov
imul
imul
jge
push
cmp
and
clc
mov
loope
adc
add
push
adc
lock
cmp
insb
jle
orb
subb
cmpsl
inc
cmp
in
xorb
lret
push
push
sahf
stos
push
xchg
adc
pop
andl
xchg
xor
fiadds
ret
gs
repz
pop
and
cmpb
popa
ss
rolb
push
ret
loopne
xchg
cwtl
dec
cmpsl
sahf
add
sbb
push
test
fsubrp
pop
jne
xor
mov
push
jae
popf
loope
loop
dec
push
adc
or
test
pushf
cmp
mov
inc
scas
push
imul
or
jo
fs
jle
sub
mov
iret
add
lret
sub
lcall
mov
xchg
shlb
addr16
pop
add
and
add
sbb
push
and
pop
xchg
fisttpll
add
ret
movsl
int
aad
ja
push
push
popa
pop
pop
push
jo
dec
fwait
inc
xor
out
or
inc
xchg
and
adc
push
xor
lds
cwtl
mov
fsts
insb
les
pop
dec
push
adc
inc
inc
out
rolb
add
pushf
iret
push
test
push
sbb
data16
in
mov
cmc
dec
outsl
sahf
outsl
adc
or
mov
add
pop
pop
aad
sub
inc
mov
push
int
dec
sub
push
jecxz
out
xor
push
push
sbb
ss
push
push
lret
enter
pop
or
in
sbb
into
sbb
andl
nop
or
adc
int
adc
jo
adc
push
shrl
arpl
adc
sbb
pop
subl
adc
cmp
or
inc
rol
sbb
and
mov
adc
in
pushf
js
rcrb
mov
and
gs
lods
xor
loopne
jbe
clc
mov
out
addl
pop
cmp
icebp
je
adc
scas
and
push
and
rsm
lods
jg
rol
sahf
inc
mov
mov
das
rolb
jg
mov
sbb
stos
out
rolb
push
adc
icebp
aaa
lret
xor
mov
mov
add
adc
inc
sbb
imul
enter
add
cmp
sbb
xchg
add
call
pop
mov
cmpsl
or
mov
or
dec
cmpsl
les
mov
jmp
and
filds
or
cmp
pusha
mov
inc
cmp
sbb
shll
inc
scas
sbb
cmp
mov
xor
lods
leave
xor
inc
mov
fdivr
push
xchg
jp
into
jne
es
push
popa
mov
or
sub
mov
xor
push
or
or
out
cmp
adc
jb
inc
stos
or
add
mov
inc
inc
fs
push
sbb
push
xchg
and
pop
push
clc
mov
loop
cltd
sbb
jb
test
jo
dec
add
mov
aaa
shlb
add
dec
sahf
jne
adc
push
adc
or
xchg
push
test
insl
push
inc
shll
mov
push
shl
loopne
lock
cmp
cmp
pop
sbb
adc
ficomps
cmpb
sub
xchg
dec
and
mov
cwtl
adc
dec
jne
ja
mov
xor
sub
mov
inc
in
stc
and
mov
push
sbb
inc
call
sub
mov
push
imul
push
and
add
push
push
mov
mov
xchg
flds
outsb
adc
outsb
fsubrs
loop
mov
roll
xchg
cwtl
pop
je
subl
jb
lahf
sbb
adc
mov
or
ret
jle
cmp
xor
inc
xor
scas
sub
gs
cmp
fisubl
push
inc
xchg
add
sub
ds
pop
add
sarl
inc
or
das
dec
jb
add
test
or
inc
add
stos
push
cmp
pop
imul
or
push
inc
loopne
cmp
mov
call
imul
inc
fs
mov
stos
inc
loopne
js
in
adcb
fcmovnu
sub
clc
push
xchg
add
in
fisubrs
lret
lret
jno
adc
test
sbb
jmp
xor
push
lock
xor
stos
xchg
or
push
cwtl
add
aad
sbb
nop
imul
inc
out
xor
lds
icebp
mov
sar
mov
loope
std
iret
insb
pop
mov
es
xchg
push
ss
adcb
dec
cmp
stos
jnp
sbb
mov
add
out
push
andl
pop
daa
ficoml
jno
sbb
sbb
addl
push
testl
adc
or
xchg
test
lret
sub
stos
mov
lcall
je
stos
adc
movsl
push
rclb
and
pop
jnp
in
pop
clc
mov
push
add
push
pop
es
popa
rclb
xchg
xor
mov
sub
outsb
inc
cmp
push
cmpsb
or
cs
adc
adc
xor
sbb
js
mov
jp
xor
lret
jne
pusha
lret
lret
add
or
cmp
scas
xchg
adc
stos
lcall
and
ret
adc
out
or
or
cmp
sub
stc
test
pushf
mov
in
mov
inc
jae
mov
cmp
pop
movsl
sbb
adc
out
jno
add
jp
or
and
lret
fdiv
rcrb
cmp
dec
aam
adc
ret
push
xor
cmpsb
hlt
push
stos
hlt
movb
ss
movsb
fsts
xor
inc
xor
cmp
inc
ja
sub
test
jecxz
cwtl
sti
add
ljmp
push
dec
aam
push
nop
or
push
sub
mov
cli
push
pushf
add
add
dec
jb
jo
mov
mov
sbb
inc
push
lea
cmp
in
cwtl
mov
movsb
lods
std
mov
in
stos
ss
test
dec
xchg
and
add
add
sbb
inc
leave
cmp
testb
dec
dec
sbb
jl
add
test
add
stos
je
add
add
sbb
das
aad
xor
ret
inc
test
inc
hlt
lea
mov
ds
stos
cmp
jne
sub
push
fcomps
sub
cld
mov
cs
push
mov
in
xchg
aas
stc
ret
rclb
adc
sbb
adc
add
pusha
cwtl
sub
sub
sub
or
lret
sbb
jno
int3
fisubrl
sbb
pop
cltd
ja
jo
xor
dec
cmp
xor
roll
pop
mov
sub
test
mov
mov
sbb
or
or
enter
test
lods
push
sbbb
add
cmp
push
sub
stos
daa
rcrb
or
add
or
xlat
push
rclb
add
push
mov
sahf
push
adcb
fdivrl
add
lret
dec
sahf
xchg
dec
add
lods
dec
aaa
add
cmpsb
pop
sarl
in
nop
inc
push
cmp
nop
ficoml
pop
push
sbb
loopne
adc
xchg
jno
ss
repnz
out
call
lods
scas
and
movsb
sbb
rclb
out
inc
sbb
lods
cmpb
jb
test
pop
xor
lret
and
push
sbb
enter
mov
jb
leave
scas
mov
nop
mov
fadds
in
push
jp
inc
lock
mov
or
xor
outsl
cmp
cmp
in
adc
push
sub
and
fbstp
lret
inc
nop
jmp
jge
pop
fisttpll
sbb
xor
xchg
xor
add
sbb
mov
and
icebp
adc
cmp
xor
fs
cmpsb
mov
cld
stos
mov
sahf
mov
test
out
push
xor
ljmp
push
ljmp
test
push
popa
pop
xor
fcomip
shlb
fldt
inc
sub
sub
cmp
mov
mov
push
and
data16
fnstsw
int3
jmp
aam
sub
jno
into
dec
lret
stos
imul
adc
lods
stos
mov
iret
jno
js
cwtl
cmp
leave
adc
adc
sub
fmulp
adc
add
fisttpll
add
sub
push
lcall
cmp
sub
repnz
push
leave
cmp
inc
roll
and
and
scas
arpl
mov
mov
out
pop
out
out
stos
xor
stos
mov
add
fldenv
in
mov
adc
pop
in
cmp
movl
lods
cwtl
and
pusha
xor
jp
push
mov
inc
xchg
mov
icebp
add
ja
test
adc
pop
push
outsb
outsl
lahf
loope
mov
push
test
mov
out
outsl
pop
in
sbb
adc
or
add
push
cmpsb
out
adc
dec
test
mov
mov
leave
rcrl
cld
push
rcrb
push
jmp
inc
data16
cmp
xor
mov
wbinvd
or
ds
sbb
or
add
cli
sbb
lret
sbb
lea
gs
inc
xchg
jbe
inc
cmpsl
pop
pop
loopne
mov
push
mov
xchg
mov
adc
enter
add
stos
jb
add
rcl
mov
andb
sbb
fwait
lods
imul
ja
adc
push
shrb
cmp
stos
sbb
dec
cmp
add
jmp
hlt
sub
jb
xor
push
shll
mov
push
and
xor
add
stos
fs
mull
dec
mov
xor
pop
add
sbb
shll
js,pt
test
sub
andl
mov
lock
adc
push
mov
mov
jb
ret
xchg
sbb
lret
inc
sarb
xor
jno
adc
push
adc
mov
scas
mov
inc
xor
xchg
sub
mov
loope
jbe
xchg
xorb
stos
pop
xchg
mov
mov
mov
ret
add
movsl
sub
pop
inc
mov
sub
xor
cld
push
andb
push
xor
decl
lret
rolb
add
sbbl
inc
add
and
cmpb
pushf
test
add
cmpsb
test
sbb
pop
inc
mov
push
cwtl
push
sub
mov
pop
sarl
data16
sahf
insb
add
cmp
mov
test
mov
dec
es
and
ds
in
sbb
testl
mov
mov
and
dec
sbb
data16
aam
out
cmp
daa
rcrb
add
out
loope
in
mov
and
cwtl
enter
out
enter
push
ficoms
movsl
cmp
pop
jae
lcall
loopne
mov
in
push
add
inc
xorl
xchg
pop
add
or
xchg
inc
lea
jge
inc
xor
in
xchg
nop
addl
fists
push
mov
adc
cmp
xor
add
jp
xorb
mov
or
fcomps
add
jo
cmp
aas
addr16
or
out
adc
add
dec
add
andb
lock
cltd
adc
pop
mov
or
and
adc
or
adc
or
add
hlt
ja
into
and
filds
or
push
push
push
or
push
test
cld
aaa
sbb
xchg
or
adcb
adc
and
xchg
loope
mov
inc
int
add
or
push
push
loop
out
fs
loop
outsb
cmp
add
push
xchg
ret
das
push
xchg
xor
dec
add
mov
push
call
inc
pushf
push
bound
inc
add
inc
cwtl
xor
add
dec
inc
mov
adc
push
scas
aam
push
push
adc
jge
or
pop
cmpsl
lret
out
push
or
ss
xchg
gs
enter
in
add
pop
sbb
push
add
scas
cltd
add
xchg
aaa
push
sti
lods
xchg
js
gs
add
fnsave
sub
cmp
dec
shlb
adcb
mov
lret
les
add
jg
push
push
push
push
jne
jmp
sarb
adc
add
addr16
fcmovnbe
stos
gs
sbb
decl
jg
imul
es
repnz
inc
mov
mov
iret
sub
out
lea
fwait
aad
or
loopne
out
pop
jbe
ret
popa
pop
push
jb
jp
clc
jge
fs
stos
negb
and
sarb
dec
adc
jae
sub
ss
sbb
lret
inc
sbb
int
or
aas
lds
push
sub
daa
mov
and
or
sbb
out
xchg
inc
add
mov
dec
xor
addr16
jle
insl
cmp
inc
adc
inc
scas
data16
push
xchg
inc
int
inc
mov
push
fs
cs
arpl
jecxz
loopne
nop
xor
push
daa
lcall
jmp
mov
xor
sub
jecxz
stc
cmp
or
push
jmp
test
lret
sub
dec
cmp
pop
lock
mov
cmp
test
jmp
cltd
push
jb
shr
test
ljmp
imul
add
int
sub
mov
sub
lock
andl
jns
jno
enter
pop
cmpsb
or
jle
shr
test
push
nop
sub
out
stos
out
imul
xor
loop
test
xchg
lret
mov
xchg
addb
sub
decb
xlat
shll
leave
push
cmp
dec
lea
cmp
cmpsl
adc
inc
mov
xor
icebp
pop
sub
push
adcb
aas
or
push
mov
sbbb
and
mov
cmp
pop
popf
in
mov
dec
adc
pop
xchg
or
pop
dec
xor
popa
xor
xlat
rclb
cmp
push
psubusb
push
sbb
push
mov
daa
jns
pop
inc
jnp
popa
mov
cmp
mov
xchg
sbb
test
add
ja
in
adc
xchg
das
adc
mov
loop
cmpsl
loop
cmpsb
scas
decl
lahf
outsb
inc
int3
adc
xor
or
jge
rcl
lods
jb
sahf
das
fldl
lds
ret
pushf
adcb
push
je
sub
std
jb
lahf
add
andl
flds
cli
fstpt
adc
arpl
push
or
dec
jnp
loopne
fsubs
sub
adc
sub
in
nop
stos
stc
push
xlat
das
lcall
dec
inc
dec
xchg
sbb
pop
cmp
add
dec
pop
mov
sbb
dec
mov
ljmp
pop
mov
push
enter
lods
pop
push
sbb
and
inc
filds
fiaddl
fldenv
cmp
push
jae
xor
dec
fimull
jo
sahf
push
or
push
icebp
fdivl
gs
nop
pminsw
mov
pop
loopne
adc
into
add
add
int
outsl
add
push
jle
fsts
das
lret
rolb
add
push
cld
mov
inc
mov
sbb
out
xchg
push
decb
scas
out
cli
jo
popf
push
and
es
add
add
pop
mov
pop
scas
out
into
mov
in
test
or
es
stos
insl
sarl
or
ds
addl
loope
add
shlb
lock
or
push
lcall
mov
nop
xchg
or
test
loop
push
imul
inc
sahf
into
xor
dec
nop
mov
jne
mov
push
mov
jns
pop
mov
sbb
cltd
or
mov
nop
mov
cwtl
add
jl
inc
cmp
xchg
push
cmp
cmp
stos
or
rolb
or
inc
xchg
lcall
xchg
sub
imul
out
jo
addb
imul
inc
sub
stos
or
mov
rcr
xchg
push
push
addb
popf
lahf
aas
inc
add
fists
rcrb
add
sub
add
dec
ds
mov
sbb
mov
shll
adcb
add
nop
cmp
xor
jg
jb
jmp
mov
es
pop
imul
in
inc
test
xor
es
rolb
les
add
inc
sbb
pop
or
fisubrl
add
mov
pop
sub
cs
add
shll
xchg
jmp
mov
jb
sbb
subb
test
or
mov
push
pop
pop
mov
xor
add
or
mov
data16
add
mov
rcrl
mov
ljmp
xor
jo
push
into
add
pop
lods
push
push
lods
mov
das
or
int
iret
out
pop
test
pop
arpl
lret
mov
ljmp
jb
roll
inc
and
dec
loope
and
inc
aam
dec
fidivl
add
inc
inc
gs
jg
xchg
mov
or
inc
sbb
push
add
movsl
les
dec
shlb
push
pushf
push
cmp
or
and
iret
lret
sarl
movsb
sbbb
jecxz
inc
mov
push
aad
adc
and
xchg
mov
xor
test
shlb
xor
stos
push
insb
iret
es
mov
inc
jae
loop
loopne
push
xor
enter
jmp
cmpsb
data16
ds
or
adc
xor
inc
or
push
lcall
or
jecxz
mov
dec
dec
adc
gs
movsb
mov
stc
test
aaa
or
rcl
mov
roll
mov
stos
pushf
addl
ja
subl
inc
sbb
or
lcall
andl
out
andl
stos
js
pop
in
out
push
js
stos
out
scas
sbb
icebp
sub
jmp
movsl
out
push
sub
xchg
cmpsb
ret
and
sbb
jo
andb
sahf
or
sbb
ljmp
and
mov
popa
inc
xor
jge
push
call
xor
mov
inc
mov
testl
xor
pop
xlat
mov
stos
sbb
xor
icebp
xor
sub
int
imul
xchg
pop
test
push
hlt
int
pop
adc
dec
cmp
mov
pop
loope
push
push
adc
or
jo
xor
adc
jmp
es
mov
lret
mov
aas
jo
inc
sub
orb
and
in
subl
lret
add
imul
add
cmp
xor
and
xor
mov
jmp
sub
repnz
and
mov
cmp
push
adcl
js
add
xor
outsb
testl
ds
sbb
or
mov
adc
sub
das
dec
fmuls
push
test
mov
shr
sti
add
sti
cmp
and
orb
xor
lea
pop
fisubs
sarb
or
out
addr16
xchg
fadd
jg
cli
mov
push
sbb
dec
add
or
add
inc
mov
push
sub
pop
fdiv
call
fisubrl
adc
fiaddl
iret
sub
dec
gs
sub
filds
stc
dec
add
jo
xchg
adc
mov
add
orb
or
popf
adc
push
sbb
or
arpl
add
jns
push
fsubl
push
lock
shll
in
stos
js
ja
adc
inc
add
pop
adc
into
cmp
lods
cmpb
pop
sub
pushf
xor
and
push
pop
add
cmp
sub
mov
pop
inc
cmpsb
push
es
jns
subb
mov
lods
adc
or
mov
rorb
sub
inc
shlb
sub
testl
outsb
add
add
rclb
push
push
aas
icebp
ss
push
lods
in
ljmp
gs
xor
jo
mov
xor
push
xchg
ret
aam
inc
adc
xorb
mov
or
pop
scas
aam
loopne
jb
adc
addb
xor
iret
cmp
nop
and
aam
add
mov
lret
mov
stc
push
xchg
sub
mov
xchg
mov
pop
or
inc
jae
cmp
jp
mov
xorl
shlb
and
inc
inc
in
xchg
adc
xor
jb
push
mov
insb
dec
cld
rorb
jecxz
cmp
push
add
pop
adc
adc
sbbb
mov
xchg
ret
in
xchg
lret
jg
js
jp
aaa
mov
std
xor
add
ret
notb
jbe
mov
dec
push
mov
inc
xor
cmp
mov
mov
int
bound
xor
popf
cli
cmp
xor
adc
ficoms
in
cwtl
sbb
int
add
ja
sub
pop
and
in
loopne
ja
adc
lcall
jnp
mull
pop
movsb
das
or
and
add
outsl
cli
jnp
xor
or
dec
jne
addr16
jns
push
scas
xor
lcall
xchg
addr16
dec
pop
andl
pop
xor
cmp
push
loopne
or
add
notl
ret
cmp
xchg
test
push
mov
enter
cmp
jno
dec
std
sarb
lods
pop
ss
iret
pop
jp
xor
or
data16
mov
xchg
test
pushf
inc
hlt
add
mov
pushf
push
sub
xchg
test
popa
insb
push
mov
outsl
stos
lock
or
adc
aaa
cmc
outsl
cmpsl
incb
bound
adc
adc
add
add
mov
push
push
je
xchg
or
push
push
xor
test
inc
jmp
cmp
push
mov
mov
pop
sub
inc
in
lret
adc
push
inc
ret
xor
adcl
mov
fisubl
pop
adc
or
in
jb
adc
lret
jecxz
xor
enter
and
lret
inc
fwait
test
addl
cltd
jae
clc
cmp
jo
push
sarl
sbb
insb
imul
adc
mov
or
adc
pop
cwtl
and
adc
scas
cwtl
mov
add
ja
dec
bnd
cltd
and
push
mov
enter
adc
sub
adc
cmp
or
cmp
pop
or
xor
and
inc
push
hlt
push
pop
int
decl
cltd
imul
das
jns
inc
add
jg
out
xor
and
inc
mov
loopne
sahf
sub
repnz
sbb
out
adc
mov
loopne
aam
and
push
mov
imul
or
faddp
sarb
int
rorl
push
xchg
lea
add
adc
orb
push
leave
movsl
mov
addr16
clc
mov
ds
pop
sub
mov
inc
xor
orb
and
cwtl
icebp
lcall
es
push
and
jo
pop
mov
mov
adc
bound
mov
popl
inc
popa
add
jmp
cmc
or
xor
jnp
inc
mov
enter
aaa
mov
lds
push
sbb
dec
add
push
mov
add
push
and
insl
dec
cltd
xor
cltd
sbb
mov
add
sub
into
adc
ret
mov
adc
or
int
inc
add
xchg
dec
and
rclb
jno
and
gs
xor
loopne
adc
or
cs
jo
push
mov
add
mov
loop
xchg
xor
in
testl
jae
push
sub
cs
mov
mov
push
dec
push
sub
adc
scas
cmpsb
jo
int
rclb
push
in
xor
xor
pop
popf
mov
sahf
push
shr
jo
and
js
sti
fisttps
and
out
jp
ret
mov
mov
shrb
rcrl
jmp
out
mov
cmp
in
pop
mov
cmp
sbb
xchg
mov
test
adc
scas
xor
inc
pop
mov
out
mov
mov
jp
fnstenv
hlt
test
jb
outsb
or
add
mov
cmp
filds
mov
xchg
inc
cmp
shlb
loopne
and
scas
sub
or
sub
add
repz
andl
test
test
loop
add
xor
inc
bound
negl
push
xchg
pop
test
lret
mov
daa
mov
lret
je
out
push
cwtl
lds
inc
call
daa
cld
fdivrl
add
stos
cmp
pop
push
push
int
das
dec
xchg
xor
adcb
sub
out
rcrl
lret
in
scas
ljmp
fstps
add
cmp
jbe
xor
or
repz
xchg
in
or
sub
add
rcrb
or
test
cltd
add
push
mov
adc
addr16
mov
xchg
inc
dec
xor
orb
mov
fidivl
add
in
jne
cmp
push
sbbl
sbb
lods
add
sbb
sub
push
mov
and
lods
push
inc
popf
inc
mov
cmp
loopne
cs
adc
or
pop
add
add
rorb
sahf
ss
cmp
jo
cmp
mov
daa
cmpsl
sbb
mov
jmp
pop
int
pop
ss
loop
or
mul
or
loop
mov
rorl
test
add
in
push
scas
sbb
ret
push
jae
push
push
dec
or
rcll
fistl
adc
addb
rol
sbb
xchg
adc
call
xchg
adc
xor
outsb
inc
jae
rclb
push
cmc
xlat
shr
sub
push
push
les
mov
xchg
mov
adc
ljmp
sahf
rclb
jge
dec
int
inc
cmc
and
mov
add
sbb
dec
jb
in
pop
int
add
fistl
add
test
mov
push
scas
lret
cmpb
inc
stos
test
repz
adc
jg
xchg
push
lods
inc
jg
dec
sbbb
out
in
jne
mov
xchg
cmp
sbb
movsb
daa
xchg
or
int3
dec
mov
ret
adc
jo
sub
les
outsb
mov
xchg
cmpsb
adc
movb
xor
pop
mov
inc
and
aas
popf
mov
lcall
xchg
loop
inc
sub
push
pop
aam
das
cmpb
xchg
loopne
sub
test
loop
lahf
xchg
xchg
lret
jne
pop
xor
and
rsm
pop
xchg
dec
cmp
addl
adc
loope
xchg
es
cli
ret
xchg
or
js
sbb
xor
push
inc
xor
xchg
and
leave
cmpsl
ret
add
scas
subl
rclb
push
gs
sti
inc
iret
inc
cmp
jb
ret
mov
shrl
incl
enter
divb
loopne
dec
xchg
push
push
add
cs
sub
cmp
mov
mov
sarb
int
dec
mov
lea
inc
int
push
adc
jo
sub
adc
sarb
fistl
mov
add
add
sbb
mov
aam
inc
lock
or
addl
jge
inc
popf
sbb
mov
jo
iret
xor
xor
mov
and
sbb
das
subl
movsb
or
adc
lods
xor
adc
ja
push
in
adc
and
test
fstpl
arpl
sbb
and
xor
aad
mov
jp
jo
jae
xor
nop
jae
subb
cmpsl
xor
ljmp
mov
add
fadds
dec
mov
push
shrl
es
lret
or
lock
lret
sub
out
inc
scas
inc
mov
xchg
mov
push
mov
fs
mov
dec
mov
sub
ror
ret
fcompl
mov
push
mov
dec
lret
adc
cmp
loope
mov
test
fsubs
xlat
jb
lods
mov
cltd
xor
insl
je
jb
es
and
mov
jae
xchg
add
push
xadd
aas
mov
push
cs
das
jp
ljmp
adc
push
punpckhwd
push
xadd
xor
mov
dec
movsl
xor
mov
dec
pop
cmpb
or
push
les
ss
mov
xchg
lods
test
xor
andl
jb
or
lea
add
in
inc
testb
jb
or
ljmp
push
popf
add
fwait
std
adc
call
adc
fs
mov
pop
les
inc
repz
cmpsl
orb
out
fidivrs
lods
xor
sub
inc
add
sbb
jo
sub
push
mov
cli
mov
push
or
adc
fmull
aam
test
push
mov
mov
loopne
test
sbb
mov
cltd
jb
stc
inc
aad
scas
lcall
mov
fs
test
add
push
cmp
cmp
aas
lcall
cs
pushf
mov
jo
dec
pop
cs
mov
dec
out
sbb
cmp
push
fs
push
sbb
add
or
xchg
or
pop
lcall
arpl
pop
shrb
and
inc
adc
pusha
xchg
cltd
jb
mov
push
cmp
jbe
cmp
pushf
or
ffree
xchg
sbbl
add
mov
xor
jge
add
pop
icebp
and
outsl
clc
outsb
and
stos
lret
rcr
inc
xlat
sbb
xorb
stos
xchg
mov
mov
fistpl
add
and
add
jo
jge
cld
inc
mov
inc
add
add
sbb
mov
cmc
or
jp
mov
out
mov
ja
ss
push
add
inc
add
cmpsb
pop
jle
sbb
or
mov
add
movsb
cld
mov
pushf
mulb
add
call
fisubrl
or
sub
cmp
test
pop
mov
push
leave
and
stos
pop
test
subl
xchg
dec
test
and
mov
jo
stos
mov
out
push
jno
rolb
jb
xchg
in
cmp
mov
cmpsb
ret
push
ret
bound
dec
push
jo
xchg
or
push
enter
ficompl
jbe
pop
jno
rcrl
les
mov
inc
das
mov
cmp
adc
popa
ret
pop
push
xor
or
push
push
decl
cmp
sbb
adc
and
push
dec
popa
push
popf
inc
shlb
shlb
ja
jo
xchg
mov
mov
filds
pop
ss
mov
adc
dec
xrelease
cmp
daa
xor
mov
sbb
incb
mov
cmpsb
xchg
int
dec
cmp
jae
sub
rcl
push
adc
jge
cmp
js
hlt
ret
push
inc
sub
cmp
jg
adcb
fwait
xchg
cwtl
cmpsb
lret
ljmp
adc
jae
add
push
cmp
xorl
inc
push
mov
cmp
ret
mov
push
imul
int
cld
rcll
pop
sbb
movsb
and
mov
jnp
inc
aam
pushf
imul
sbb
and
mov
push
ret
je
xchg
cli
mov
dec
cwtl
lret
fcompl
loop
push
mov
fbstp
push
xor
mov
mov
or
push
add
loop
sbb
sub
and
cmp
test
push
jb
fyl2xp1
sub
cmp
mov
xchg
inc
add
inc
fwait
xchg
xorb
pop
adc
xor
cltd
or
sub
aam
gs
pop
lea
and
xchg
cmpsl
fsts
jb
enter
push
fidivl
cwtl
sbb
fs
aad
xor
fisttps
cmc
sbb
dec
lret
int
and
add
or
out
add
out
push
pop
sub
data16
dec
xor
inc
or
adc
sbb
imul
pop
shll
mov
ljmp
add
mov
cmpl
aad
lret
aam
cmc
cwtl
xchg
lret
pop
mov
mov
add
pop
push
movsl
sub
mov
mov
shr
mov
icebp
and
loopne
popa
mov
mov
add
xor
enter
imul
popf
mov
out
cmp
pop
add
fwait
popf
inc
dec
rcll
lret
inc
jae
mov
pop
add
add
test
mov
cmpsb
pop
sub
inc
cwtl
and
dec
aad
lock
adc
or
into
xor
and
pop
adc
fstpt
xchg
jmp
add
adc
cld
pop
mov
xor
sub
cmp
or
push
scas
shlb
scas
popa
sbbb
pop
loop
roll
xor
loopne
xchg
or
aad
ret
cwtl
sbb
and
ret
ror
fnstenv
out
cmpsb
push
test
or
adc
mov
dec
add
sbb
cltd
or
loope
sbb
mov
fisttpll
jae
push
adcb
push
sub
sub
add
cltd
pop
test
fstpt
adc
lods
dec
int
sarl
mov
adcb
sbb
adc
add
aam
lahf
out
mov
nop
add
mov
sub
pop
dec
cld
aaa
xor
inc
cld
fdivrs
sbbb
jp
jno
loopne
push
xchg
cwtl
lahf
fwait
pop
xchg
xchg
mov
jne
movsb
adc
les
pop
sbb
dec
mov
out
fdivrs
mov
sub
aaa
jbe
sbb
sbb
mov
cmp
mov
leave
xlat
mov
aas
cld
ljmp
sbb
inc
in
dec
cwtl
xor
push
push
movsb
pop
mov
pop
and
shrl
pop
cmp
gs
sahf
adc
movsl
push
addl
arpl
push
aad
rcrb
sahf
scas
daa
push
mov
xchg
cmp
cmp
sti
and
push
into
pop
shl
cs
xor
movsl
ss
scas
mov
sub
popa
jo
push
out
bswap
adc
mov
xchg
loopne
or
cltd
cmp
mov
inc
cmp
aaa
push
lcall
rorl
mov
pop
int
push
pusha
fs
cmp
lock
cli
pop
cmp
mov
mov
or
adc
dec
mov
loope
enter
rolb
shrb
adc
inc
mov
lcall
add
dec
mov
rorb
shr
int
inc
mov
sbb
jne,pn
and
push
cs
and
fcoml
xchg
sub
aas
sub
outsl
orb
xchg
xchg
sbb
test
pmaxsw
jo
insb
roll
xlat
add
and
mov
test
lcall
mov
pusha
sub
push
inc
cmp
sbb
mov
push
orl
push
shll
lds
iret
loopne
test
add
mov
jae
mov
sbb
adc
dec
push
mov
loope
xchg
aam
push
into
test
mov
push
xor
xchg
lock
mov
stc
ret
fs
sbbb
inc
int
mov
and
adc
add
aam
jmp
icebp
dec
test
push
orb
push
or
push
jns
loopne
push
pop
jns
je
and
mov
lret
pop
xor
sub
xor
xor
dec
push
push
pop
cmp
or
cmp
cmp
in
in
das
cmp
lahf
in
inc
popa
xor
addb
call
push
pop
push
in
ret
shrb
sahf
daa
xchg
mov
sub
cltd
test
mull
outsb
xchg
inc
les
sbb
and
sub
mov
mov
push
mov
push
loope
shrb
push
int
hlt
mov
inc
push
sub
cwtl
sub
lods
inc
mov
sbb
popf
dec
cmp
adc
inc
cwtl
int
and
ret
or
in
add
add
and
adc
daa
clc
mov
sbbb
int3
mov
pop
subl
add
xlat
or
push
sub
pop
add
lock
dec
or
inc
ljmp
push
mov
and
rol
inc
lods
cltd
mov
xchg
dec
scas
push
aaa
adc
popa
rolb
cmpsl
daa
aad
and
adc
push
push
mov
sahf
dec
adc
xor
jbe
jo
push
scas
push
xlat
maxps
lcall
fisttpl
rcrb
fistps
and
clc
mov
testl
aad
aaa
test
ret
adc
sub
cld
add
mov
xorl
mov
test
xchg
fstpl
popf
aas
and
sbbl
xor
add
dec
pop
xchg
sbb
into
sbb
sub
iret
data16
adcb
push
lret
sbb
pop
test
dec
incl
lret
adc
push
and
pop
in
out
test
or
inc
rcr
xor
dec
inc
jo
add
and
sbb
pop
xchg
addb
movsl
mov
dec
jge
push
cmp
sub
xchg
sahf
aaa
sbb
sub
jge
mov
mov
sub
mov
adc
or
dec
inc
adc
scas
dec
ja
jbe
inc
sbb
xchg
mov
dec
mov
or
xchg
push
into
adc
adc
add
push
add
ljmp
add
adc
sub
rolb
test
loope
xor
xor
pusha
mov
mov
or
xor
mov
rorl
or
daa
test
das
lcall
popa
add
les
push
jnp
inc
adc
push
add
mov
inc
cmp
push
nop
add
mov
and
adc
enter
pop
mov
orl
andl
push
loopne
add
or
sbb
sbb
push
jb
adc
jp
add
inc
pop
pop
gs
dec
in
push
cmp
mov
add
lods
pop
rorb
test
insl
cwtl
mov
mov
dec
push
push
dec
insl
ret
lea
xor
es
mov
and
xchg
or
imul
cmp
lret
xorl
adcl
adc
les
hlt
or
xor
into
mov
mov
pop
inc
xchg
scas
or
sub
test
cld
sub
xor
mov
pop
jge
pushf
cmp
into
repnz
sbb
inc
xchg
or
loopne
adc
stos
inc
add
lret
sbb
rorb
rorb
add
into
mov
jae
jmp
sbb
lret
mov
pop
jae
stos
gs
and
xchg
cmp
pop
xchg
sbbb
es
inc
xor
push
dec
daa
add
mov
jno,pn
adc
popf
adc
sbb
cwtl
lret
sbb
add
pop
or
jns
inc
jae
push
outsl
mov
in
jmp
paddusb
dec
mov
mov
out
pop
push
aad
cmp
jb
jae
jae
sub
ljmp
sub
sbb
push
je
or
sbb
add
pop
aad
in
jb
push
and
cmpb
add
mov
loop
call
dec
popa
mov
push
inc
jae
cmp
dec
cmp
cmc
fisttps
push
mov
jl
push
add
rol
and
xchg
jge
scas
and
lcall
test
leave
mov
arpl
mov
and
cwtl
ret
jbe
pop
lahf
xchg
orb
cwtl
add
aad
negb
cmpsb
aaa
xchg
mov
sub
incb
subl
jb
add
or
dec
push
xchg
add
cwtl
mov
xor
sub
xchg
jno
mov
sbb
adc
mov
pop
mov
daa
cs
add
mov
push
dec
cmp
aad
sub
or
dec
iret
sub
cmpsl
xchg
and
adc
push
xchg
je
ja
sub
cltd
jb
lea
mov
dec
inc
or
push
xlat
jo
ret
mov
add
arpl
sbb
call
jmp
mov
add
xor
stos
sub
lret
inc
fbld
subl
addr16
or
rcl
mov
or
and
add
push
and
popf
sarl
push
pop
xorl
jb
sbb
lret
nop
pusha
outsb
xor
ret
hlt
pop
clc
lods
addl
add
in
or
and
test
pop
add
into
in
scas
pop
pushf
mov
mov
or
cwtl
movsb
lcall
sbbb
fxch
adc
jl
mov
cmpb
fs
lcall
mov
fisttps
sti
ret
test
adc
addl
test
adc
add
scas
in
movsb
ret
aam
pop
adc
clc
push
fcoml
cmp
testl
std
adc
repnz
push
sub
add
scas
pop
aad
add
hlt
fisubrs
or
jle
inc
pop
sbb
sbb
sbb
mov
adc
sbb
mov
fs
inc
sub
adc
mov
dec
or
xor
mov
lret
cmpsl
dec
out
adc
xchg
or
jo
jb
test
lods
loopne
pop
pop
and
cmp
mov
dec
rol
shlb
fstps
push
lret
das
mov
jecxz
add
xchg
inc
add
push
add
ret
add
les
jl
lods
or
inc
jns
cmp
dec
inc
lock
add
jno
push
jl
xchg
xor
adc
insl
subb
push
pop
add
call
adc
les
push
xor
mov
into
sahf
dec
adc
popa
sbbb
lcall
adc
xor
xchg
dec
inc
pop
mov
cmpsb
popl
cmp
sub
lods
ret
mov
cmp
adc
fwait
push
cli
push
jo
test
push
inc
rolb
push
movsl
add
shlb
stos
into
inc
andnps
inc
cmp
ror
jo
push
pushf
mov
xor
adc
fisubl
pop
xor
mov
mov
xchg
pushf
mov
and
adc
es
adc
jp
movsl
jo
sbb
cmp
mov
into
inc
iret
shld
ljmp
addl
mov
inc
adc
mov
je
push
mov
jo
aas
jo
pushf
ror
jmp
addr16
sub
hlt
pusha
sbbb
cmpsb
add
adc
push
ret
and
inc
test
mov
nop
jmp
gs
or
dec
sbb
push
sub
cmp
rcrb
xchg
mov
add
lret
test
into
mov
mov
nop
xor
ror
nop
jae
xchg
notl
sub
cmp
jp
mov
mov
lret
push
loope
in
push
or
js
sub
mov
movsb
and
stc
sbb
jb
sub
les
ficomps
rorb
das
and
mov
mov
rcrb
inc
cmp
pop
cwtl
test
stc
pop
or
push
pop
mov
xchg
and
mov
mov
sbb
adc
pop
or
jno
cmp
int3
mov
mov
adc
pop
mov
pop
mov
test
or
gs
pop
dec
push
inc
adc
ljmp
or
xchg
add
orl
scas
sub
les
add
mov
inc
cs
mov
mov
mov
out
shrl
cmpsl
xchg
or
pushf
mov
xor
loope
pop
mov
sbb
addr16
lcall
xor
push
adc
out
in
mov
fsubs
push
pop
push
sbb
sarl
sub
pusha
mov
mov
push
inc
xchg
aam
cltd
faddl
and
push
sub
jmp
loope
and
or
xchg
outsl
mov
inc
jnp
into
cmpsl
jge
orb
ja
add
rorb
adc
cmp
jge
test
movsl
xchg
cli
dec
mov
fstl
dec
xchg
jno
sbb
xchg
pushf
or
lcall
not
xchg
mov
xor
jle
pusha
rolb
outsl
sub
rclb
ret
mov
lock
cwtl
or
out
jnp
in
out
sbb
adcl
push
inc
sbb
and
jns
shlb
pusha
aam
jbe
xchg
fbld
add
nop
adc
push
into
mov
and
sub
add
mov
push
fstps
es
jae
add
cwtl
test
push
cli
in
orl
daa
lods
loopne
push
popl
dec
test
cs
jae
sti
jno
out
push
loopne
xor
test
sbb
icebp
push
mov
mov
inc
aam
or
add
divl
sbb
jmp
imul
dec
es
mov
cmp
and
lcall
pop
das
add
add
push
nop
jae
adc
jbe
out
out
or
and
iret
incb
sbb
loope
addl
test
dec
xor
test
and
add
sbb
ret
lret
push
add
js
add
inc
lcall
sbb
add
into
pop
aad
xchg
mov
pop
mov
inc
scas
sub
test
adc
ds
push
outsb
mov
lods
ljmp
rcl
mov
out
inc
sub
movl
add
ja
or
mov
dec
push
lock
repnz
fs
xchg
or
dec
dec
aaa
mov
cwtl
inc
add
mov
add
sbbb
icebp
ret
shll
ljmp
mov
andb
mov
cwtl
mov
sub
neg
pop
mov
lret
imul
lret
push
fs
loopne
ret
dec
scas
and
push
inc
mov
xchg
cmp
imul
push
cmp
sub
push
pop
cmpsb
inc
lds
shll
aaa
push
inc
mov
pop
mov
mov
cmp
adcb
pop
xorb
mov
push
movsb
xor
mov
loope
add
aad
push
sub
push
mov
shll
ds
test
and
into
add
cmpsb
inc
pop
sub
imul
inc
int
mov
cmp
call
adc
add
lcall
and
adc
pop
inc
inc
lea
popf
cmpsb
rcrl
out
xchg
xor
testl
jno
in
cltd
mov
push
xlat
in
repnz
ds
jp
lcall
jo
jne
std
adc
add
and
dec
mov
cmp
mov
shrb
inc
stos
xchg
roll
fisubl
mov
adcb
fsubrl
adc
test
mov
add
cmp
jb
sbb
lcall
push
cwtl
pop
scas
mov
mov
add
icebp
cs
sub
add
add
cmp
mov
xor
icebp
loop
sbb
push
mov
lods
es
mov
add
outsb
add
xchg
ljmp
nop
mov
insb
push
mov
push
dec
cli
cltd
sahf
or
sbb
mov
dec
jae
add
xchg
insb
pusha
shll
jo
push
sub
xor
cmc
pop
sbb
or
test
mov
mov
inc
add
and
lret
push
test
addl
mov
push
inc
push
addr16
ljmp
push
nop
jae
loope
sub
leave
jo
es
ljmp
fld
bound
inc
cmp
cmpsl
adcb
and
enter
or
or
inc
or
jbe
cmp
pop
fldt
sbb
lret
jmp
cltd
adc
and
add
cmpsb
or
ret
jo
jbe
and
into
mov
mov
ss
aam
mov
in
inc
test
pop
add
add
loopne
mov
adc
push
or
outsl
vpaddq
sarb
sub
add
fiaddl
inc
lcall
add
test
out
pop
daa
test
cmp
sahf
or
inc
push
jno
daa
mov
je
xchg
xchg
rcl
mov
lcall
mov
inc
scas
cltd
sbbl
inc
cmp
cmp
inc
mov
inc
xchg
aam
inc
push
push
inc
xchg
int
leave
shrl
mov
repnz
add
adc
mov
add
or
popa
xor
add
cmp
push
push
fstl
js
adc
scas
push
das
xchg
idivb
add
hlt
jnp
shrl
xchg
roll
xor
lcall
data16
mov
push
add
int
push
and
or
sub
mov
push
xor
mov
mov
add
mov
mov
jno
or
scas
xor
stos
sbb
push
add
add
xor
cmp
jb
insb
add
and
push
std
aaa
mov
rclb
imul
jle
ret
push
sar
push
mov
mov
add
stos
or
test
jb
xchg
sub
cs
aam
test
jp
mov
loopne
rcrb
add
inc
aam
sub
daa
in
inc
jbe
sbb
push
fnstenv
stos
adc
imul
or
imul
push
add
js
add
es
sub
add
cltd
or
int3
mov
cmp
push
stc
popf
xchg
lret
mov
sub
dec
jecxz
cwtl
xorb
shl
jb
mov
cmp
cwtl
and
aas
add
cmp
std
shl
nop
add
icebp
mov
popa
xor
lods
mov
dec
sbb
add
inc
jg
clc
aaa
add
push
and
jl
mov
sbb
xorb
jo
push
add
adc
shlb
ljmp
mov
scas
inc
inc
scas
shll
orl
pop
or
iret
push
xor
pusha
add
shrl
xor
sbb
adc
jo
jo
sbb
hlt
cmp
mov
pushf
fwait
sbb
test
pop
jmp
stc
and
add
neg
es
pop
mov
inc
xchg
imul
subl
lods
push
mov
push
es
and
int
in
ret
or
or
push
xor
cmpsl
add
icebp
xor
pop
jmp
sbb
call
popf
pop
pop
jae
sub
int
mov
rclb
shl
jge
adc
pop
mov
mov
add
dec
test
xor
pop
loope
lcall
push
mov
loopne
insl
sbb
or
inc
rclb
add
bound
adc
sbb
mov
pop
sahf
leave
add
jo
add
push
mov
jo
xchg
rclb
adc
lret
rclb
sbb
jo
out
mov
stos
sub
jo
jo
ret
pop
stos
ret
loop
and
cli
push
lret
daa
loope
mov
stc
push
add
push
dec
push
sub
andl
in
mov
or
fiaddl
dec
pop
xchg
sub
xchg
andb
popa
mov
cmp
or
hlt
or
push
push
jne
enter
jno
out
inc
adc
dec
aam
sarl
add
push
mov
es
jns
push
mov
jge
jne
adc
and
sti
mov
es
jno
adc
sbb
and
in
add
push
cmp
mov
mov
les
pusha
jnp
sahf
jg
sbb
stc
or
shlb
add
xor
adc
out
andb
sub
push
ret
push
lds
sbb
adc
xchg
gs
add
lret
or
pop
dec
out
out
or
dec
cmp
aad
sbb
addr16
adc
add
lcall
loope
inc
adc
adc
jp
inc
jne
je
mov
push
scas
mov
or
cmp
push
or
scas
xor
popf
mov
in
scas
adc
jo
sub
lret
loope
pop
loopne
imul
imulb
cmp
push
jnp
out
loop,pt
nop
mov
xchg
add
xchg
leave
adc
mov
inc
mov
push
cmp
sub
dec
cmp
movsb
in
scas
pop
subl
push
mov
push
xor
pop
das
xor
loope
subb
adc
cli
enter
std
hlt
dec
inc
xor
or
inc
icebp
dec
add
sti
lea
incl
out
clc
cmp
aaa
scas
sbb
out
and
cwtl
push
int
mov
inc
popa
ret
pop
inc
mov
xor
cmpsl
into
popf
cwtl
jo
sbb
leave
pusha
roll
sbb
loope
mov
ficoms
mov
sbb
stos
or
stos
xor
shlb
loope
xor
pop
fmuls
add
sub
rclb
jnp
cmpsb
lret
dec
sub
in
test
in
push
rorb
or
adc
test
pop
loope
push
sbb
xlat
pop
push
stos
sub
mov
popa
mov
push
imul
je
in
pop
pusha
jb
xchg
lret
inc
subps
fnstsw
xchg
lret
rorl
dec
inc
xor
lods
push
push
sub
xchg
xchg
incl
scas
sahf
clc
and
sbb
jbe
mov
popl
inc
and
or
mov
mov
mov
sbb
jmp
loop
lds
or
or
lock
adc
sub
adc
xor
mov
inc
cltd
pop
arpl
adc
jae
int3
lret
inc
push
mov
cwtl
js
xchg
or
sub
dec
jnp
nop
loope
adc
icebp
add
or
add
out
or
pusha
push
sahf
loope
je
jmp
xor
movsl
roll
jo
push
sub
call
mov
add
push
leave
cmp
cs
rclb
cltd
jb
mov
dec
add
stos
and
mov
sbb
sub
mov
shrb
cmp
xchg
insb
pop
out
cmpsb
sub
mov
mov
pop
stos
jo
xor
fwait
cli
dec
add
push
andl
icebp
and
test
push
xchg
jmp
pop
xchg
push
dec
cmp
xchg
xchg
stc
roll
icebp
xchg
mov
rorb
pop
jmp
push
push
out
mov
add
sbb
inc
sbb
ret
cwtl
push
rclb
add
and
std
pushf
push
inc
arpl
mull
jl
cltd
xor
sbb
and
adc
pop
adc
movsb
xor
inc
sti
hlt
push
lods
mov
orb
das
and
xor
popf
jae
sbbb
or
add
push
loope
ds
ret
mov
mov
or
idivb
sbb
scas
mov
push
enter
xor
push
hlt
in
sub
insl
in
js
out
popl
add
pop
in
je
add
jbe
push
pop
push
sarl
or
jns
jo
orl
ret
xor
push
cmpsb
dec
mov
stos
add
adcb
jo
xchg
inc
mov
and
xor
cmc
ret
popf
jecxz
sbb
rcrb
ss
adc
es
popa
xor
dec
xchg
or
pop
push
mov
adc
ror
push
xchg
push
inc
add
sub
sbb
aad
cmp
in
push
add
xchg
push
sub
scas
push
call
in
outsb
fld
fwait
xor
xor
mov
or
lcall
out
fs
sbb
mov
aaa
lret
cmc
enter
mov
inc
loope
sub
movsb
or
lods
add
xchg
adc
lock
in
adc
or
call
sub
cmp
xor
jmp
scas
add
sbb
outsl
mov
int
jecxz
fcompl
sbb
subb
dec
push
jae
mov
cltd
pop
es
push
add
mov
pop
fistl
sub
push
push
push
push
cmp
insb
repnz
add
movsb
lods
push
in
cmpsb
jp
mov
add
test
add
inc
sbb
push
push
cmpl
mov
pop
cmp
pushf
xor
aas
push
xor
or
and
lret
hlt
dec
or
jmp
or
xor
lcall
sbb
rolb
subl
adc
lcall
loopne
in
shlb
aaa
sbb
and
xor
cmp
les
adc
inc
and
fstpl
loop
add
adc
mov
adc
loopne
mov
adc
aaa
shlb
mov
loopne
sbb
add
sub
test
test
inc
xor
aaa
sahf
xor
push
shlb
jae
icebp
lcall
ljmp
adc
and
loope
stos
popf
cmp
mov
sub
imull
lret
dec
and
or
pop
inc
aas
rclb
jb
out
adc
icebp
push
pop
stos
stos
add
dec
xchg
adc
xlat
or
dec
sbb
pop
sbb
push
sbb
jl
out
sub
test
push
inc
xchg
inc
mov
inc
popf
stos
or
es
sbb
adc
mov
xchg
add
loopne
dec
mov
mov
dec
movsl
loope
in
adc
or
sub
clc
and
sub
aaa
adc
addl
je
insb
mov
cmp
mov
or
cltd
addb
push
addr16
aam
cwtl
inc
ficoms
sbb
js
push
pop
or
inc
test
mov
rorl
es
cmpsb
out
hlt
jo
shlb
orl
rcrb
mov
push
int
in
test
scas
bound
and
jo
mov
pushf
lret
add
inc
pop
mov
or
sbb
xchg
je
mov
pop
lahf
xchg
rcl
push
or
in
push
incb
sub
mov
add
cmpb
xorb
sub
dec
sbb
xor
xchg
and
lods
sub
loop
push
jecxz
aam
pop
add
inc
lods
push
imul
ret
push
aad
push
adc
sbb
dec
fmuls
popf
ret
in
xchg
ret
cmpsb
inc
cs
scas
in
push
adcb
ja
cmp
sarb
jle
push
mov
mov
outsb
mov
pop
push
test
push
dec
cmp
pushf
pop
push
movsb
xchg
ret
sahf
lods
mov
inc
sbb
inc
xor
push
add
push
push
scas
sbb
ret
sub
xor
adc
add
test
and
mov
xor
icebp
pushf
sbb
adc
jae
inc
push
rcl
and
lea
add
scas
mov
adc
or
push
in
sbb
cmp
jp
add
xor
pop
mov
adc
or
inc
add
add
sbb
add
and
hlt
and
or
sbb
xchg
lret
dec
data16
mov
inc
mov
daa
mov
jo
mov
xor
pop
xchg
push
adc
lcall
xorb
xor
push
mov
fcmovnbe
outsb
hlt
fistpll
lock
aaa
add
add
sub
out
call
dec
push
outsl
ret
gs
mov
mov
out
outsl
daa
add
insl
dec
add
imul
repz
or
daa
bound
sub
insl
lods
subb
faddl
cmpsl
or
add
sbbb
ss
add
fsub
mov
sub
add
and
adc
adc
cld
and
adc
xor
stc
xor
ret
or
xchg
aad
mov
cmc
or
sbb
push
or
scas
loopne
les
daa
and
jmp
xchg
inc
push
in
dec
sbb
stos
mov
and
je
jmp
push
dec
or
adc
jle
sub
adc
mov
xchg
cltd
add
ja
test
sub
mov
data16
out
ss
sub
std
add
ljmp
add
sbb
sbb
stos
dec
inc
adc
dec
add
ja
call
jbe
inc
jl
es
push
push
add
mov
mov
enter
jae
fisttpll
aam
in
pop
add
call
add
sbb
adc
inc
sbb
add
ret
add
inc
enter
fs
stos
sbb
inc
loope
pop
in
loope
aam
ss
or
or
insl
outsb
lcall
or
dec
push
mov
lock
xchg
push
test
scas
mov
mov
add
push
lret
lret
dec
mov
pop
addl
push
out
inc
cmp
mov
pop
mov
add
or
testb
dec
jp
loop
mov
push
sbb
sbb
push
stos
lea
dec
cmp
cmp
mov
out
sahf
jp
test
das
jae
xchg
and
rclb
push
and
inc
scas
xorb
mov
mov
cmpsb
mov
and
into
and
out
aad
adc
jo
add
stos
je
cmc
pop
cmpsb
in
adc
mov
faddp
subb
daa
or
rclb
push
mov
stos
mov
sbb
daa
mov
push
mov
add
orb
sbb
adc
cld
dec
loop
roll
in
sbb
pop
mov
pop
inc
dec
push
adc
sbb
cmc
or
fs
add
inc
aam
mov
or
push
and
mov
cmpb
pop
mov
sub
push
push
pusha
loope
or
push
cmp
cwtl
mov
adc
xchg
dec
sbb
sbb
sbbl
data16
mov
sahf
andl
mov
pop
popa
push
push
push
ret
xchg
inc
es
inc
in
xor
shrb
sub
subb
gs
arpl
mov
push
addl
cmp
sub
inc
xor
push
sub
cmpsl
mov
inc
xchg
sub
test
mov
test
lcall
adcl
or
dec
dec
je
inc
push
add
add
hlt
cmpsl
ds
add
movl
sub
cltd
push
push
in
cltd
mov
push
cltd
sub
movsb
inc
dec
sub
cmp
or
and
nop
mov
lretw
dec
xchg
push
rcr
addl
call
test
out
xor
jne
test
xor
out
pushl
dec
add
xchg
inc
dec
and
es
aam
mov
fwait
int
cs
call
stos
rolb
jecxz
pop
inc
and
sbb
xchg
mov
scas
mov
or
scas
pushf
test
loopne
or
ret
push
inc
test
add
lds
xlat
jp
mov
add
pushf
sub
sub
lret
push
inc
pusha
push
add
xor
and
andl
and
mov
insb
imul
jae
arpl
sbb
ret
bound
bound
jb
pop
orb
popaw
xchg
cmpsl
lcall
loope
loopne
mov
inc
and
xchg
je
xor
dec
loope
fstpt
adcb
cmpsl
fcoml
cmpl
xchg
pop
repz
mov
pop
call
mov
pushf
and
mov
add
push
push
push
into
icebp
lcall
fwait
in
inc
cmpsl
mov
add
xor
sbb
or
outsl
xchg
rcll
es
pop
gs
fs
pop
adc
test
jb
sub
add
loopne
pop
dec
push
mov
mov
jb
push
es
cmpsl
mov
inc
faddp
push
cmp
dec
sbb
push
inc
es
rcll
inc
scas
mov
pop
in
test
push
lods
sub
test
mov
jnp
shrb
push
pop
xor
popa
fnclex
daa
scas
loopne
push
adcb
xchg
mov
pop
cmp
jg
sub
mov
mov
pusha
jo
and
and
lcall
cmp
xor
jo
insb
aaa
jmp
loop
add
or
clc
enter
sbb
es
xor
js
or
and
sub
js
stos
mov
out
cmp
and
decl
pop
push
seta
add
mov
cmp
inc
pop
in
icebp
cmp
xor
or
push
lret
push
dec
inc
mov
xor
xor
sbb
fimull
rorb
sub
xchg
cs
sub
mov
shrl
lret
lock
loope
cmpsl
pushf
mov
xlat
cmp
add
mov
xchg
test
cmp
push
and
xor
pop
jae
sbb
data16
stos
adc
xchg
fstpl
loop
xor
and
sub
mov
adc
or
add
in
push
and
js
jb
add
mov
and
mov
daa
mov
mov
inc
out
xor
inc
add
test
sbb
push
and
add
inc
jnp
or
mov
test
pusha
xor
xchg
adc
jo
cmp
jmp
xor
sub
pop
xchg
mov
pop
popf
sub
sub
sbb
pop
dec
test
movsl
fidivrs
pop
add
ljmp
lods
add
subb
add
adc
mov
jecxz
mov
lret
ret
lret
pusha
xor
into
shl
pop
or
and
push
enter
pop
arpl
fadds
aam
add
addb
bound
test
dec
subl
cmp
mov
popa
enter
jbe
or
push
jg
add
mov
imull
data16
mov
adc
jbe
add
pop
pop
or
inc
sub
adcl
rolb
push
lcall
mov
stos
push
or
xor
mov
popa
xor
leave
addl
cwtl
push
adc
dec
scas
fcompl
das
iret
test
cmp
scas
pop
add
xlat
in
xchg
notb
push
popa
cmpsl
lcall
mov
test
add
jg
or
pop
frstor
mov
test
shrd
addr16
insb
inc
sbb
dec
lret
push
ljmp
dec
jecxz
cmp
jg
adc
inc
mov
loope
adc
or
push
aam
adcl
pop
add
pusha
stos
pushf
les
inc
ret
dec
xor
or
or
jb
imul
xor
repnz
mov
push
push
xchg
mov
ljmp
push
pop
xor
pop
in
push
inc
loope
mov
pop
dec
stos
cwtl
push
sbbl
rcrl
pop
adc
mov
aad
and
jecxz
or
mov
rcr
mov
clc
pop
push
lea
or
cmp
mov
loop
loope
xchg
lret
in
inc
push
mov
loopne
popa
sub
xchg
xlat
or
sarb
mov
mov
and
dec
xchg
and
cld
mov
sti
add
xor
mov
out
rcrl
mov
mov
into
ss
in
adc
jnp
push
inc
push
or
mov
aaa
pop
js
int
stos
push
push
xlat
mov
adcb
and
loopne
fcmovnbe
repnz
cmpb
sub
ret
iret
cmpb
mov
addb
popa
in
sub
mov
cmpl
or
dec
subb
cmp
in
sbb
inc
pusha
ret
lods
xorb
das
sahf
inc
inc
imul
repnz
jo
cmpsb
ja
push
cmpsl
or
jno
mov
leave
or
and
lds
adc
or
inc
and
stos
xor
or
xchg
inc
mov
adc
xor
pusha
in
cmpsb
adc
je
inc
addr16
cmp
pop
adc
sub
mov
push
xor
ljmp
popa
push
jo
push
cmp
rcr
jae
mov
std
sbbb
lods
jle
xor
adc
sbb
add
mov
push
mov
pop
cs
sbb
push
ljmp
or
js
in
jp
add
orl
test
or
push
adc
sbb
push
sub
add
mov
in
sbb
add
sbb
push
mov
sbb
adc
push
insb
fmull
mov
cli
jno
cmp
ret
push
adc
cmp
cmpsb
cmp
or
inc
fldcw
and
add
ljmp
cmp
jb
add
cs
xor
stos
sbb
or
mov
fisttpl
mov
out
bswap
inc
jae
cmp
es
add
dec
mov
cmp
pop
pop
outsb
xor
ret
push
stos
lcall
cmp
arpl
xor
push
sarl
mov
add
and
mov
cltd
lcall
fcmove
inc
lods
out
push
cmp
addb
dec
lock
or
mov
je
enter
cwtl
cmp
dec
lret
outsl
fmull
movsb
cmp
stos
xor
and
fstpl
inc
fs
xor
rcr
cmpsl
jbe
xor
fcompl
inc
pop
testl
out
add
and
inc
cmp
jl
cmp
jae
rol
sub
xchg
pop
mov
cmp
pop
rorl
inc
cltd
add
mov
lret
pusha
mov
xchg
push
push
insb
das
mov
rcll
in
add
mov
nop
jae
xor
push
add
outsl
inc
in
xchg
sub
and
data16
cmp
inc
inc
adc
pop
cmpsb
stos
sarb
pop
push
test
movsl
test
xor
aad
ret
mov
adc
mov
rolb
push
sbb
sbb
lretw
and
xlat
les
add
rol
add
cmp
mov
sbb
inc
scas
stc
dec
fwait
or
rcrb
inc
cmp
cwtl
jne
adc
pushf
add
repz
push
xorb
pop
xor
sti
pop
push
sbb
inc
xchg
insb
xor
scas
and
jmp
inc
cmc
xchg
adc
add
sbb
add
dec
add
inc
icebp
adc
sub
dec
cmp
push
int
sub
xor
inc
or
cmpb
add
push
jb
mov
push
enter
int
xchg
mov
xor
push
adc
cmp
aas
adc
js
std
jns
les
xorb
adc
ret
add
pop
push
xor
mov
adc
inc
inc
and
mov
rcrb
out
add
pushf
subb
aam
sbb
xlat
orb
mov
subl
add
test
sub
lahf
into
fiaddl
ror
mov
test
inc
mov
inc
xchg
jae
mov
lods
fstpl
enter
sbb
in
jecxz
mov
pop
xor
stos
inc
insl
int
pusha
shlb
or
loop
push
pop
xor
cmp
xor
jo
pop
mov
jo
adc
mov
gs
jmp
add
pop
out
lret
and
mov
aam
orl
rol
test
mov
push
pop
cmp
test
ret
sub
fsubrl
mov
push
cs
mov
orb
or
mov
pop
cwtl
call
push
shll
xchg
mov
add
cmc
in
cmp
xchg
call
inc
xor
icebp
jp
lock
dec
mov
shll
loopne
pop
cs
xor
jb
lret
sub
or
mov
and
xchg
std
sahf
jno
loop
popa
bound
xchg
andl
fldcw
xchg
lcall
and
mov
aad
add
or
mov
pop
mov
mov
scas
xor
mov
push
shlb
ret
out
fdivrs
xor
jno
cltd
adcb
cmpsb
add
adc
jb
sti
add
fwait
jg
loope
and
pushf
xchg
add
movsl
roll
scas
adc
loope
dec
dec
xchg
inc
das
dec
jno
cmp
test
cs
inc
xlat
xchg
mov
enter
daa
pop
shll
pop
sbb
adc
lret
adc
stos
test
sub
push
mov
xor
pop
jnp
xlat
push
pop
cwtl
jmp
out
imul
pop
divl
fidivl
scas
push
andl
xlat
jo
orb
mov
jge
push
sbb
xor
fs
add
or
mov
or
or
sbb
and
loop
inc
mov
xchg
mov
jne
ret
in
push
and
push
sbb
sub
pushf
xchg
enter
xchg
dec
js
into
rorl
adc
cmp
sbb
ss
push
in
sti
pop
cwtl
mov
lcall
es
mov
ret
add
xchg
call
cmp
lcall
dec
ja
or
es
inc
shrb
je
mov
int3
int
xor
pop
mov
xorb
inc
andb
cwtl
cmp
pop
push
pop
xchg
mov
sbb
adc
mov
sbb
mov
mov
and
testl
mov
js
or
jp
cmp
xor
dec
in
jo
outsl
ss
loopne
add
clc
jmp
sub
inc
es
add
xchg
shll
pop
nop
shlb
and
push
dec
out
sbb
push
aaa
mov
int
add
sbb
es
inc
scas
out
xchg
xor
and
cld
out
popa
cmp
sbb
cwtl
adc
cmpsl
les
sbb
fcmove
sbb
inc
mov
mov
xor
push
orb
out
mov
loopne
inc
xchg
enter
jo
xor
sbb
sbb
aaa
int
pop
adc
shl
cmc
cltd
fisubs
cmovno
ror
inc
add
push
les
push
adc
std
sti
dec
sub
mov
pushf
push
xchg
or
stos
mov
push
arpl
sti
icebp
add
es
sub
xor
adc
or
mov
sbb
mov
jecxz
push
xor
aad
decl
test
push
jno
cmpsl
pop
nop
stos
adc
add
jmp
jp
lds
pusha
sub
std
mov
push
divb
cwtl
lcall
add
in
adc
stos
add
loope
adc
push
je
jb
add
push
js
enter
ret
mov
and
dec
adc
or
test
or
xlat
xchg
mov
mov
add
ljmp
push
mov
add
dec
cs
push
pop
xlat
push
push
sub
mov
xor
mov
push
jae
cmp
call
ret
pop
subb
fs
mov
jne
cld
lahf
leave
push
mov
data16
pop
in
push
and
fistps
lods
or
shl
xchg
mov
sahf
lcall
lock
jo
mov
sub
push
mov
dec
adc
clc
fs
pop
js
mov
jo
xchg
mov
je
imul
xchg
addb
rcr
mov
push
in
pop
push
fdivr
in
loope
sub
fimull
cltd
mov
sti
ret
or
sbb
ret
outsb
inc
sbb
sbb
cmp
or
daa
jbe
pop
jb
xchg
lock
in
and
in
shr
push
sub
loopne
fsub
add
icebp
lock
into
mov
pop
lret
mov
mov
out
xor
push
adc
xor
jo
or
dec
jns
loopne
cwtl
cmpsl
fldenv
lret
inc
jae
es
sahf
stos
addb
pop
test
sub
insb
add
movsl
mov
push
push
test
clc
or
pushf
leave
add
js
in
push
addr16
push
pop
shll
loopne
pop
in
sbb
iret
aam
xor
add
add
in
push
nop
jae
mov
xor
adc
imul
add
dec
xor
dec
dec
cs
incl
call
ds
inc
sbb
lcall
or
mov
push
sahf
inc
add
in
cmp
aad
lods
and
pop
mov
stos
andl
aas
nop
or
add
adc
adc
sbb
rorb
out
and
cmp
sbb
out
adc
push
jge
xorl
lret
adc
dec
sub
mov
and
int
addb
les
cmpsb
jo
sub
mov
mov
cltd
or
lcall
xchg
lea
pop
je
mov
push
enter
xor
stos
cmp
push
jb
jo
and
add
inc
push
add
lcall
subb
push
or
pop
add
inc
mov
jl
push
add
mov
icebp
test
add
adc
mov
subl
and
adc
insb
add
rcrb
jge
mov
mov
and
ljmp
shll
pop
cwtl
mov
sbb
sub
adc
pop
cmp
sub
jns
out
jo
xchg
and
mov
js
movsl
or
xor
jmp
xor
ret
sarb
sbb
push
xor
push
loope
mov
adc
sbb
fcomps
cmp
push
jb
cmp
loope
rorb
shll
scas
push
sbb
pop
xor
or
cmpsl
push
adc
ret
mov
jp
mov
ljmp
and
sbb
pop
dec
cltd
dec
push
push
jb
pop
jb
in
pushf
mov
cmpsl
loop
mov
cs
push
jp
std
xchg
pop
xor
pop
or
test
adc
cmp
xor
pop
cltd
push
stos
mov
inc
jb
inc
cmc
ret
mov
xchg
jmp
mov
add
sub
sahf
out
push
inc
loopne
mov
outsb
mov
or
scas
push
lock
jecxz
or
scas
cltd
clc
sub
pusha
fwait
jae
dec
xchg
ret
mov
ret
test
in
push
int
bound
or
push
cs
jns
push
push
adc
xlat
add
or
push
xor
rorb
lods
or
fs
ret
xchg
dec
push
mov
add
repz
add
or
push
push
das
adc
pop
xchg
in
push
sub
or
pop
push
pushf
mov
rcrl
ret
in
mov
sbb
movsb
loopne
inc
icebp
push
test
stos
cmp
jno
adc
xchg
inc
pop
jo
enter
stos
mov
out
dec
mov
add
mov
sbb
incb
scas
adc
inc
mov
mov
pusha
pushf
and
sti
push
jp
out
push
inc
mov
mov
xor
fisttpll
fidivrs
push
in
call
ds
mov
inc
mov
ljmp
leave
ret
inc
xor
cmpb
dec
lea
incl
lret
xor
xchg
or
mov
jmp
test
sub
jmp
xchg
lret
adc
mov
fdivs
mov
add
and
addl
jno
mov
mov
je
lds
incb
push
inc
push
mov
or
cmp
int3
pop
loopne
xor
roll
push
jbe
add
mov
push
cmp
loopne
add
push
cmpsl
push
push
enter
jo
dec
adc
sub
add
jbe
cmp
sbb
repnz
mov
add
or
sbb
pop
mov
nop
add
gs
scas
inc
scas
sbb
inc
jae
mov
es
insb
and
addb
notl
mov
pop
dec
xorl
lret
add
icebp
lods
out
mov
fisttpl
lret
xchg
rcl
cmpsl
data16
incl
jae
out
add
faddl
imul
loop
es
adc
pushf
dec
pusha
testl
xor
push
addr16
cmpsl
or
sbb
cwtl
rorl
cmp
or
pop
mov
sub
push
cltd
jo
jo
call
xor
and
fmull
int
cmp
lret
mov
daa
sarl
sbbl
stos
or
sub
adc
pusha
mov
cmpsb
ljmp
adc
loop
sahf
mov
push
sbb
xchg
adc
or
sahf
rorl
mov
shrl
or
or
inc
xchg
test
test
andps
pop
cmp
dec
cmp
pop
cs
sub
loopne
cmpsl
inc
xchg
addb
cmp
data16
lods
jg
push
dec
scas
xor
dec
hlt
mov
decb
sbbb
pop
rcrl
or
jmp
ret
jg
std
aaa
adc
mov
clc
out
pop
roll
repnz
sbbb
sbb
push
xor
scas
dec
mov
mov
out
ja
test
pop
loop
je
test
sbb
cltd
or
adc
mov
add
movsb
sub
adc
es
js
ljmp
and
icebp
cmp
nopl
push
call
mov
xchg
sub
orl
test
test
jo
insb
dec
orb
push
xor
arpl
imul
sub
js
push
push
fldcw
addr16
sbb
cli
hlt
lcall
hlt
and
xorl
subb
mov
std
inc
add
pop
cmp
sub
out
cwtl
and
lret
stos
xor
cmp
jbe
inc
cmp
sbb
loopne
xor
mov
bound
sub
pop
push
push
jge
add
jnp
test
pop
push
push
sub
xchg
dec
fsubrs
cs
lock
or
or
add
lret
fadds
ss
outsb
or
gs
xchg
jno
loopne
lds
mov
sahf
pop
xor
or
sub
push
cltd
stos
push
lcall
fimuls
repnz
and
jo
xor
push
cwtl
dec
rcrb
shll
loope
add
add
test
sub
or
and
mov
add
push
adc
int3
xchg
roll
lret
sub
pop
shlb
aaa
shlb
inc
into
jne
dec
add
je
push
push
fmuls
sahf
lret
inc
cs
mov
test
out
lcall
sbb
loop
inc
cmp
xchg
jae
push
mov
loop
add
add
lret
xchg
adcl
dec
xor
mov
cs
or
call
pusha
sub
clc
mov
lock
jmp
lods
shrb
xchg
in
aam
mov
pop
lcall
pushf
xor
fisttpl
mov
dec
xor
sbb
mov
xor
xchg
cmpsl
test
icebp
mov
push
pop
test
push
adc
or
cli
imul
dec
add
daa
adc
push
shll
jb
and
add
xchg
xor
aas
adc
shlb
xchg
jmp
not
jae
sbb
pop
je
xor
sbb
mov
nop
daa
sbb
mov
dec
lods
adc
outsl
xchg
cwtl
iret
or
or
or
push
add
sub
push
andb
sub
push
inc
addr16
mov
dec
out
or
pop
test
or
mov
js
adc
ss
int
or
mov
int3
in
mov
aas
test
or
adc
cmp
mov
lret
rclb
sbb
lods
clc
pop
or
jno
mov
push
and
inc
add
sbb
add
loopne
or
sti
mov
mov
stos
jp
adc
adc
popf
movsb
pop
data16
aam
sbb
fmuls
adc
or
jo
xor
insb
push
or
cmp
test
das
mov
jbe
lods
jecxz
test
mov
cwtl
orb
scas
dec
push
add
jnp
andb
mov
je
push
xor
mov
mov
push
loopne
cmpsb
testb
mov
mov
adc
xchg
es
out
les
fs
xchg
orl
sarl
in
lret
mov
push
adc
mov
jae
xor
addr16
not
sub
test
in
xchg
sbb
repz
or
or
hlt
xchg
mov
imul
push
jo
loopne
rcr
or
jo
and
cmp
add
aad
in
pop
add
jp
lahf
push
push
sahf
rcrb
push
add
test
sub
cs
push
inc
jle
jae
lret
pop
ds
lfs
jmp
sbbb
cmpsl
shlb
cmpsl
test
jo
push
mov
ljmp
lret
pop
es
jb
cmc
inc
add
int
xlat
jno
dec
sub
inc
das
or
push
test
ss
mov
jb
enter
xlat
and
mov
lcall
rol
cmp
xor
popf
adc
test
xor
sbb
xchg
push
xor
adc
add
push
scas
dec
dec
rolb
out
adc
dec
adc
out
cmc
or
lcall
in
lods
fadds
jno
mov
sbb
and
adc
or
or
rorl
adc
out
movsl
lock
inc
rcrb
or
fwait
rol
lahf
lcall
xchg
enter
jnp
add
lea
push
das
data16
or
xchg
mov
rol
dec
cmpsb
mov
fs
mov
cmc
sub
loopne
in
sub
daa
sahf
decb
std
call
mov
xchg
rcll
dec
dec
fstl
mov
add
add
jae
push
push
mov
adc
sub
inc
stos
xchg
es
push
sub
test
mov
cs
lock
jno
push
sahf
js
push
jae
ss
mov
inc
inc
out
orb
ja
pushf
add
into
mov
scas
cmpb
push
std
dec
enter
scas
jbe
bound
pop
testl
xor
addb
xchg
jae
and
stos
ds
and
imul
push
cli
xchg
popa
pusha
inc
les
add
and
rol
dec
inc
or
xchg
cmp
sbbb
mov
cmp
dec
mov
pusha
inc
mov
inc
leave
pop
sub
sub
aaa
call
and
and
mov
xor
jne
ret
push
or
arpl
lret
pop
add
or
mov
push
les
adc
push
push
mov
rclb
cwtl
push
add
or
xorb
decl
push
push
scas
push
sub
or
stos
jbe
jmp
or
and
loopne
or
push
xchg
or
xorl
js
add
nop
or
mov
mov
pop
sahf
xchg
scas
push
push
into
mov
cmp
lret
sub
or
jo
xor
cmpsb
ficompl
mov
jo
add
hlt
xor
stos
loopne
xchg
or
enter
test
push
testb
inc
loope
int
sub
aad
cld
push
cmp
lock
stos
xor
inc
push
xchg
sub
or
sub
lea
cmp
or
xlat
pop
fiaddl
cmp
movsb
xchg
test
sub
insl
jne
xchg
or
sbb
push
repz
mov
inc
cwtl
fiaddl
enter
xchg
push
jge
cwtl
lret
pusha
sub
adc
inc
add
push
fimuls
push
subb
fxch
add
xchg
les
mov
incl
pop
ret
mov
adcb
leave
xor
fsubs
add
cmpsb
jp
es
and
rcrb
popa
outsl
pop
push
sub
xor
aas
push
mov
das
add
pop
imul
stos
out
aam
pop
lods
cmp
cmp
push
outsl
movsb
push
mov
adc
popa
rolb
mov
push
fisubrs
xchg
push
cwtl
mov
pop
xchg
andl
and
mov
xor
sub
scas
sbb
and
stos
adc
xchg
xor
subb
ficompl
add
cmc
addl
bswap
or
mov
add
dec
jmp
sub
inc
outsb
push
out
cwtl
sub
outsb
sbb
and
or
cmp
out
jb
stos
inc
sbb
push
sarb
push
adc
xlat
push
mov
addb
nop
xchg
ljmp
hlt
ljmp
filds
fisttps
add
loope
orb
mov
inc
scas
or
add
les
lods
add
cld
cmp
or
mov
push
mov
ss
mov
add
aaa
jge
pop
dec
dec
add
imul
addb
push
pop
inc
mov
xchg
jno
popa
xor
sbb
add
mov
inc
insl
and
mov
mov
pusha
or
push
int
les
inc
cmp
or
fwait
out
inc
test
daa
cmpsl
es
cmp
movsl
movsb
sub
inc
mov
inc
lock
adc
or
or
cmp
mov
adc
push
inc
jne
push
inc
enter
loopne
adc
xchg
shl
mull
lret
ret
adc
das
test
dec
mov
ret
push
pop
daa
cwtl
cmpsb
loop
inc
scas
sahf
push
mov
sbb
pop
push
mov
es
cmp
sbb
sub
adc
jae
inc
loopne
pushf
or
mov
sub
je
push
enter
push
or
imul
or
pop
push
popf
fisubrl
or
sub
xchg
rol
cmp
pushw
xchg
and
rcrb
adc
aas
dec
out
cmp
sub
cmp
dec
sbb
or
push
cmp
mov
out
sbb
jae
sub
add
sub
push
jl
jb
sbb
xchg
cmp
or
mov
orl
xchg
in
ds
sub
fidivl
ret
inc
adc
adc
add
bound
fucomi
mov
push
mov
mov
stos
jle
jns
cmp
cmp
addr16
subb
xchg
hlt
mov
xchg
fs
xchg
sub
mov
popf
sbb
mov
mov
sub
inc
loop
push
adc
and
test
xchg
or
rcr
sbb
andl
sub
mov
xor
push
xchg
lret
inc
into
jne
stos
push
sub
ret
stos
pushf
pop
or
aad
adcb
xchg
cltd
enter
push
mov
xor
xchg
or
mov
mov
push
aas
rcrb
aad
test
es
cmp
fcomps
push
mov
insl
or
ret
in
stos
xor
sahf
in
sub
inc
int
ljmp
stos
xor
mov
pop
insb
pop
mov
scas
or
push
int
mov
push
loopne
ss
clc
ret
mov
sub
in
imul
or
movsl
scas
test
inc
jb
xorb
roll
jecxz
adc
roll
aaa
jns
pop
sub
jo
pop
clc
rorb
inc
adc
subb
dec
mov
cmp
je
or
out
inc
test
adc
push
iret
jo
push
iret
es
jo
dec
out
mov
je
popa
adcb
mov
sbb
es
cwtl
jne
or
push
popa
orb
add
out
inc
jl
call
push
test
rcrl
mov
jb
loopne
aas
incb
lret
and
dec
fstps
push
sub
mov
aam
divl
addb
push
push
and
mov
xchg
gs
push
or
or
push
imul
jg
cmp
fbld
mov
es
lret
pop
mov
mov
push
aaa
cmp
flds
test
idivb
push
imul
xchg
and
mov
add
jb
repz
jo
inc
fcmovnbe
jb
or
jg
mov
sahf
cltd
add
fadds
cmpl
xchg
xchg
xchg
fildl
mov
shlb
push
push
stos
iret
sbb
or
sub
cmp
ljmp
xor
or
dec
or
inc
mov
or
sub
cmp
xlat
mov
jb
sub
mov
or
add
mov
push
cmp
fistps
ljmp
enter
jge
add
push
add
mov
cmp
mov
xor
in
push
inc
cmpsl
or
les
xchg
or
sbb
push
inc
cmp
lea
jp
and
or
in
cwtl
sbb
add
cwtl
jle
sub
imul
fmull
inc
inc
mov
and
push
add
dec
lret
sbb
jo
out
insb
mov
inc
push
pushf
test
xor
loope
cmpsb
aas
xchg
push
ret
xchg
jecxz
dec
pop
outsl
or
jp
shll
adc
xor
jmp
mov
or
or
mov
mov
ret
inc
loopne
add
lret
or
aam
mov
adc
sub
cltd
ljmp
popl
add
inc
adc
sbb
dec
jns
cwtl
hlt
jno
push
xchg
sbb
fs
sbb
add
test
jb
jp
sub
xchg
xchg
sub
add
cli
mov
roll
sub
mov
adc
sbb
adc
or
aaa
lret
les
out
or
mulb
inc
loopne
or
mov
push
push
out
loopne
pusha
mov
not
inc
cmp
dec
mov
test
add
jge
or
test
mov
push
mov
push
shlb
out
ret
adc
mov
call
or
inc
and
jb
jno
cltd
in
xchg
add
adc
lcall
jb
mov
sub
inc
push
rolb
icebp
ficompl
or
xor
mov
push
sahf
inc
fs
int3
add
mov
and
popa
mov
movsl
xchg
lcall
dec
cmp
test
add
or
mov
jge
aam
push
fs
xchg
inc
scas
sbb
fwait
jae
xor
inc
add
mov
mov
xor
test
mov
jo
ret
mov
mov
and
rcll
aad
or
fucom
xor
cltd
sub
push
loope
inc
adc
loope
es
push
cwtl
into
add
sub
xchg
insb
jp
xlat
sbb
movsb
mov
ret
idivl
pop
jae
enter
jae
sbb
pushf
test
mov
stos
pushw
enter
out
fisttpl
push
inc
jge
loopne
loope
test
sbb
je
jle
adc
push
or
scas
mov
add
jecxz
add
scas
incl
jge
xorb
lret
daa
add
inc
in
pop
sbb
mov
dec
inc
mov
sub
insl
into
mov
inc
rcll
lret
push
call
cmp
into
xchg
pop
push
mov
inc
cmp
fnsave
cmp
in
andb
adc
stos
adc
or
int3
jno
or
call
fsubl
ret
rcrl
popf
nop
ljmp
cwtl
add
scas
fisttpl
mov
movsl
js
push
icebp
cwtl
pop
scas
or
rorb
adc
adc
les
jmp
add
rolb
iret
add
daa
jmp
inc
cmpsb
jbe
xchg
push
push
jne
mov
cmp
lcall
sbb
jnp
hlt
xor
inc
shrl
aas
cmp
ljmp
mov
cmp
cltd
mov
mov
into
ret
push
dec
das
ljmp
dec
mov
add
xchg
dec
inc
mov
subb
cmp
je
jne
mov
mov
cmp
mov
popf
sbbb
popa
add
add
push
push
in
push
sbb
add
aam
sbb
jo
fs
cld
mov
mov
ret
jnp
sar
lds
popa
sub
jecxz
outsb
mov
xchg
rcll
dec
dec
ljmp
dec
and
nop
adc
pop
daa
sbb
sbb
sbb
xor
dec
jmp
sahf
and
cwtl
jne
push
rolb
and
scas
ret
into
adc
jo
testb
add
inc
icebp
lret
mov
mov
add
or
sub
dec
adc
push
add
push
fs
pusha
ret
cli
cmp
out
testl
and
neg
or
sti
loope
pop
adc
ljmp
push
test
inc
mov
loope
mov
pop
mov
out
cld
pop
inc
sbb
add
add
add
ja
add
jne
insl
jo
rol
mov
push
push
aam
loopne
ret
imul
pusha
mov
repz
ret
adc
inc
gs
sar
les
andb
sahf
and
push
js
stos
and
inc
mov
inc
and
adc
addr16
adc
jp
aam
xor
pop
pop
cmovl
adc
push
shrl
inc
or
es
push
mov
test
lret
inc
sbb
dec
mov
sbb
xchg
mov
jb
jb
sbb
loopne
cmp
xchg
xor
fcmovbe
sbb
and
sub
pop
mov
movsl
jno
hlt
adc
push
sbb
jo
ds
xor
mov
mov
push
dec
iret
jnp
add
push
es
sub
add
orl
es
add
inc
inc
cmp
xor
lds
or
pop
popa
ret
call
jo
cmp
or
out
fwait
push
lcall
loop
sub
sar
mov
mov
inc
call
sbbb
mov
push
cmp
cs
adc
rclb
or
lret
mov
and
int
lock
aas
outsl
mov
lods
or
mov
mov
dec
aad
add
push
xchg
cmpl
or
gs
mov
loope
ret
mov
adc
sbb
push
ret
push
shrl
stos
pop
cli
mov
jo
int3
and
push
jb
jnp
sarl
cwtl
mov
ljmp
addb
cmpsb
cmc
enter
rol
dec
es
test
ja
call
inc
push
data16
cmp
push
movsb
push
cmp
cli
xchg
mov
mov
out
and
pop
xchg
lods
pop
push
fnstenv
push
jge
fiaddl
push
js
cmp
push
dec
xchg
iret
scas
sub
mov
push
test
ret
loopne
in
push
jl
pop
loopne
cwtl
call
roll
pop
inc
in
filds
mov
loopne
int3
imul
push
push
cmp
repz
jnp
mov
pop
push
dec
or
pop
xchg
push
in
inc
cwtl
cmp
mov
inc
push
push
shl
push
adcb
push
loop
cmp
add
subl
in
push
test
xor
rclb
lcall
orb
rcl
xchg
call
or
pop
cmp
into
in
jl
xchg
loope
push
imul
dec
in
pushf
ja
mov
adc
xchg
adc
sub
and
pop
xchg
les
rcrl
jle
sbb
stos
es
mov
cmp
cwtl
lret
sub
jno
dec
loopne
pop
sbb
pop
pop
or
lcall
sub
adc
inc
cmp
xor
pop
adc
sub
mov
jp
jge
dec
jmp
mov
int
rorb
mov
loop
je
mov
sub
mov
mov
jo
xchg
mov
jge
push
add
incl
inc
repnz
data16
gs
int3
sub
xchg
and
xor
xchg
dec
in
sbb
lcall
into
gs
lock
lret
adc
xchg
pusha
inc
push
inc
add
into
adc
sub
shlb
shrb
pop
popf
rcrb
sbb
push
test
scas
pusha
ss
inc
mov
jno
lcall
dec
rcr
sbbl
add
inc
push
cltd
or
xchg
push
aad
cltd
or
dec
adc
orb
gs
xor
enter
push
ret
inc
out
jne
cwtl
ds
and
mov
add
xor
in
or
inc
pop
mov
sub
test
test
pop
imul
loope
lret
jb
sub
loope
pop
cwtl
pop
movsb
dec
pop
into
inc
xor
mov
adc
add
mov
sbbb
rcrb
movsb
mov
jnp
mov
pop
lods
xor
add
add
inc
or
add
xchg
push
call
in
insl
cmpl
xchg
add
add
xchg
sub
fwait
xchg
or
cmp
adcb
xor
or
subb
adc
mov
adc
and
mov
nop
mov
add
and
pop
fs
adc
pop
loopne
fadd
dec
and
mov
mov
mov
lock
shll
in
in
push
push
add
hlt
push
mov
sub
pop
jb
rclb
nop
imul
mov
mov
pop
push
add
loope
mov
loopne
loopne
jb
into
or
xchg
jo
pop
gs
call
pusha
or
cwtl
std
adc
or
subl
test
lret
lock
or
mov
and
push
adc
add
xor
add
sub
sub
inc
fwait
popf
outsl
gs
jno
mov
push
sti
fcomip
add
xor
inc
popf
add
cmp
test
add
push
mov
push
imul
loopne
pop
test
mov
push
xchg
jb
pop
subb
jo
stos
xor
push
int3
sahf
dec
add
ret
mov
and
cltd
xchg
lret
mov
shrl
andl
or
dec
dec
nop
sub
cltd
cmp
in
fisubs
fstps
sbb
int
cwtl
pop
negb
sub
std
imul
add
fisubrs
xor
xchg
repz
jnp
jb
pop
xor
test
jp
pop
inc
jne
jg
lock
add
xor
lods
xchg
mov
add
mov
push
scas
sbb
les
push
jg
rcll
xor
daa
add
dec
lock
aam
int
add
mov
cwtl
jo
mov
mov
out
loope
pop
inc
lcall
outsb
fidivrl
fcmove
jge
jge
sbb
add
es
inc
and
jo
insb
orb
pop
mov
das
push
xor
sub
loopne
push
xor
addr16
xor
and
mov
or
popa
jp
cmc
cmpsb
or
dec
push
xchg
mov
cmp
push
jae
lcall
xor
inc
int
sbb
and
insl
mov
aam
dec
xchg
sbb
test
popf
lods
xchg
or
push
test
stos
sbb
orb
sbb
or
or
out
jae
or
maxps
mov
into
rcll
xchg
push
or
xor
pusha
popf
in
cmp
pop
outsb
mov
gs
push
loop
in
adcb
add
addl
adc
imul
add
mov
pop
push
subb
or
cltd
jmp
jae
sbb
pop
sbbb
fistps
shrb
ljmp
rorl
lahf
mov
add
repz
les
jmp
ret
mov
adc
sub
mov
cwtl
xlat
movsl
and
aad
adc
push
push
inc
cwtl
rcrb
mov
in
sub
add
mov
sub
in
xor
and
mov
adc
and
sbb
ficoml
add
hlt
and
jp,pn
cmp
push
je
and
insl
fsubs
xor
cld
jb
movsl
sub
lret
sub
sbb
pop
push
out
dec
pop
lret
in
sbb
push
insb
fwait
add
fisttpll
daa
pop
test
push
push
push
test
and
jb
jo
ja
lods
aam
mov
cs
dec
loopne
hlt
jns
mov
push
test
jo
xor
lods
add
scas
push
inc
das
loope
add
dec
add
add
pop
es
in
lret
lcall
sub
in
mov
fdivrs
adc
push
loopne
adc
and
push
rorl
adc
outsl
cmp
sbb
mov
inc
jae
xchg
movsb
repnz
mov
in
inc
mov
push
pop
stc
daa
js
fisubrl
mov
add
into
rorb
ret
push
cmp
push
cmp
dec
mov
and
cld
fstp
pusha
mov
xchg
xchg
rorb
add
or
add
je
incl
pop
test
sbb
dec
into
add
fldl
shrl
lcall
aad
sub
mov
stos
inc
pop
xor
aam
mov
inc
mov
cltd
mov
xchg
pop
push
mov
movsb
sbb
call
xchg
inc
or
adc
aas
jp
push
stos
jp
mov
add
push
sbb
jge
or
imul
rolb
pop
xchg
and
and
jb
iret
or
mov
sub
loope
push
movsl
in
data16
test
cs
out
add
or
test
xor
cmp
mov
pop
add
inc
mov
push
add
aaa
add
loope
and
imul
cltd
aaa
mov
sbbb
jae
and
push
sbb
mov
and
bound
mov
cmc
pop
jno
ja
out
and
or
sub
add
and
adc
xor
rclb
incl
sub
lcall
std
pop
lcall
jb
jae
rclb
mov
push
and
hlt
pusha
or
sbb
xchg
or
enter
mov
or
cmp
xor
sub
lods
das
ret
sbb
addr16
lret
fiadds
lcall
in
mov
imul
vdivss
push
popf
xor
sub
lret
mov
pop
add
xor
xlat
and
movsl
push
es
inc
inc
jnp
gs
push
subl
pop
sbb
pop
adc
sbb
shrb
xchg
int
lret
test
jae
push
dec
jne
rcrb
push
scas
mov
push
mov
mov
sbb
dec
sub
dec
push
cs
out
jne
cmp
push
ficomps
ret
adc
add
popa
pop
inc
test
and
push
sarb
ret
jle
inc
rclb
cli
subb
inc
aam
fs
fsubrp
dec
cmpsb
dec
es
inc
mov
inc
cmp
loopne
das
stos
jne
aam
sub
sub
ss
imul
adc
jge
cmp
call
mov
cmpsb
pop
lret
adc
enter
call
sbb
push
cld
push
lods
add
mov
fidivrl
sbb
sub
addr16
dec
adc
xchg
xchg
nop
je
ret
cmp
jae
aas
push
inc
xchg
sarl
xchg
pop
rolb
add
jno
andl
iret
sbb
mov
or
pushf
inc
cmp
push
pop
add
xchg
mov
jl
cltd
cmp
in
aas
push
adc
mov
add
push
or
daa
popf
sbb
xor
xor
push
pop
add
mov
ds
and
and
push
mov
adc
xor
movups
mov
sbb
pop
sub
xchg
push
subb
test
adc
sub
mov
lock
jb
xchg
mov
adc
sub
push
xchg
add
popa
or
js
stos
pop
push
mov
xchg
subb
push
inc
and
add
pop
cltd
mov
mov
inc
inc
loopne
test
mov
xchg
mov
inc
popl
lret
in
adc
add
jae
pop
pop
sbb
mov
xchg
push
cmp
jno
push
inc
notb
mov
and
pusha
mov
or
mov
jb
stos
and
imul
ja
mov
add
push
fisttpll
adc
divl
sbb
xor
or
ret
popa
test
cltd
push
in
ret
xor
call
leave
sar
pop
mov
rolb
std
jg
push
adc
aas
sbbb
push
cmp
adc
test
mov
rclb
xchg
imul
cmpsl
cmp
inc
dec
cwtl
sub
push
mov
insb
xchg
dec
es
fwait
scas
inc
cmp
dec
push
sub
push
jo
insl
lds
outsl
in
or
sbb
push
pusha
and
jmp
cmp
adc
scas
scas
pop
push
mov
inc
mov
popa
adc
push
inc
repnz
sub
cmp
cmp
cmp
enter
pop
cmp
imul
push
push
data16
scas
pop
ror
in
fistpl
icebp
sbb
inc
push
int
mov
pop
adc
test
mov
xchg
push
sub
in
push
jns
dec
int
out
mov
pop
push
jge
ret
cmp
and
xlat
xor
es
and
jno
jno
jp
out
mov
xchg
mov
cmpsb
sbb
icebp
push
xchg
sbb
push
aad
sbb
and
lds
inc
add
shl
out
jge
and
or
or
mov
sbbl
xchg
out
loopne
orb
mov
in
mov
push
ud2
sub
mov
jbe
push
inc
cmp
pop
popf
and
cmp
or
dec
pusha
pop
push
push
dec
xchg
adcl
pop
cmp
add
sub
popf
and
rcrb
adc
jle
repnz
adc
push
shll
and
push
imul
sti
sub
mov
ljmp
add
test
ret
and
jmp
fisubl
sbb
in
adc
sub
jb
loopne
dec
pop
inc
add
and
repz
hlt
and
mov
and
enter
dec
sub
push
dec
loopne
enter
mov
mov
js
idiv
ds
sub
dec
and
adc
cmp
roll
sub
push
push
or
pop
mov
ja
shrb
lds
sbb
add
push
sub
or
popa
jae
fadd
loop
imul
addb
push
xchg
setle
lahf
js
inc
es
sub
and
shlb
icebp
jb
cmp
sbb
or
jae
adc
aad
gs
sbbb
scas
addr16
sahf
sub
push
js
sbb
and
jl
push
adcb
add
ror
ret
xor
pop
push
or
dec
mov
cmp
sbb
aad
movsl
sbb
aam
pop
es
xor
or
test
sub
icebp
rolb
test
enter
sahf
xorl
jge
lock
or
mov
lahf
xchg
sbb
sbb
scas
mov
pop
inc
xor
pop
aad
or
sbb
test
mov
lods
sub
cmp
cmc
add
xchg
addl
loop
cmc
add
inc
add
push
ret
jmp
and
inc
cmovb
add
add
fsubrs
test
sub
or
pop
push
adc
out
fcmovb
sub
add
push
push
push
add
sbb
sbb
mov
sub
adc
lret
inc
xchg
mov
xchg
or
sbb
adc
or
int
stos
adc
sub
cmp
outsb
add
jmp
xor
cs
insb
add
mov
dec
cwtl
push
push
add
add
imul
jae
jmp
lret
dec
outsb
imul
jb
arpl
push
arpl
fcomi
pushl
outsb
sbb
gs
jb
outsl
insl
insl
inc
jb
imul
mov
idiv
insb
jne
push
dec
inc
imul
fwait
jae
jg
jne
gs
popa
insl
gs
inc
xor
xor
fistl
dec
outsb
cmovb
fs
inc
inc
inc
int
out
push
inc
insb
outsl
bound
sub
insl
sti
xlat
fimuls
xor
push
outsl
jb
pop
push
cwtl
fstp
mov
outsb
or
push
jns
and
fdivrl
jae
imul
ja
mov
push
cmp
jns
outsl
outsl
jae
push
jb
jnp
jg
outsb
jae
es
fs
imul
out
inc
lods
test
inc
mov
fs
add
outsl
mov
mov
imul
jne
cmpb
outsl
fs
mov
adc
fstpt
imul
or
dec
fnsave
fcmovnbe
lea
jns
inc
in
inc
cmpsb
insl
push
inc
std
pop
mov
sti
int
mov
insb
mov
jb
push
popa
jo
imul
mov
xor
ss
out
pop
dec
bound
fistpll
push
mov
jne
addr16
cmp
inc
dec
ret
testl
je
outsl
shrl
pop
jae
and
insl
cs
fs
xchg
inc
fs
fmuls
ret
lcall
mov
cmp
mov
sub
dec
lahf
imul
mov
and
fs
and
mov
fcmovnb
test
fnstenv
jns
adc
xor
stos
insl
xor
add
push
or
mov
push
mov
movsb
fs
or
adc
dec
jne
iret
fimuls
insb
iret
jo
lods
xor
gs
or
jae
je
xor
pop
cmp
sbb
insb
mov
imul
in
inc
xor
jo
inc
mov
xor
inc
push
lods
outsl
in
adc
sub
outsb
arpl
push
sbb
outsl
cmp
xlat
mov
aas
lds
xchg
xor
je
jmp
enter
fs
push
push
jbe
in
mov
das
inc
inc
mov
in
push
jo
mov
pop
sbb
ja
lret
or
xchg
popf
mov
lret
xor
dec
push
add
cmp
pop
push
jo
test
fs
fsubs
mov
jb
lds
inc
or
inc
imul
fsubs
in
adc
xchg
jmp
push
inc
test
loope
jae
dec
movsl
push
sbb
mov
mov
jne
fcmovne
ss
xor
push
imul
mov
jno
ss
jns
test
test
jno
push
arpl
mov
imul
push
outsb
insl
xor
sub
mov
jnp
jp
ret
pusha
pop
jae
push
xorl
sbb
xchg
inc
cs
leave
sbb
in
lcall
ds
outsb
bound
sub
js
out
fsubrs
mov
jns
in
test
inc
imul
mov
mov
pushf
adc
and
mov
jno
adc
or
ret
jo
es
xor
mov
inc
push
xchg
push
inc
addb
das
xlat
push
jns
mov
inc
shll
scas
mov
arpl
mov
inc
mov
int
lcall
mov
push
jnp
xlat
insb
dec
mov
dec
dec
mov
inc
xchg
loop
mov
mov
les
sbb
imul
push
inc
cmpb
and
push
in
popf
bound
ljmp
push
int
mov
mov
mov
es
insl
mov
or
xlat
arpl
lods
in
push
push
repnz
lods
adc
sbb
shlb
mov
imul
jb
push
xor
popf
pop
imul
push
mov
mov
iret
mov
adc
sbb
push
or
xor
gs
pop
imul
mov
jo
and
in
in
lods
sti
lock
ret
jns
push
outsl
mov
dec
adc
arpl
cwtl
jbe
adc
jo
outsl
mov
mov
lods
inc
sbb
sub
bound
bound
and
add
lret
std
xchg
mov
push
xchg
dec
lahf
arpl
mov
dec
insl
cmp
aad
inc
ret
add
and
ss
fnstcw
push
call
and
mov
push
xor
mov
jno
inc
cmp
test
outsl
shl
subb
jbe
fwait
outsb
mov
sahf
les
dec
push
mov
jo
or
inc
out
sbb
je
repnz
jns
test
test
push
push
inc
and
or
sbb
bound
arpl
sbb
inc
cmp
ret
xor
fsubs
lds
inc
sahf
roll
push
pop
loope
push
inc
or
push
and
sbb
jg
push
pushf
mov
xorps
repz
fdivs
in
push
ja
bound
inc
mov
insl
fwait
fwait
jge
andb
cmp
xchg
insb
sbb
or
jo
int3
sbb
jae
adc
mov
sbb
pop
and
shrb
out
mov
xor
inc
fdivs
jbe
xchg
insl
push
push
insl
daa
xlat
mov
das
adc
push
sbb
sbb
nop
insb
xor
in
jo
mov
cmpsl
mov
or
and
jno
shlb
push
inc
sbb
add
clc
lar
jp
jge
and
add
std
inc
add
adc
pusha
add
lods
inc
or
cmp
add
in
jge
mov
push
xor
pop
jg
pop
mov
adc
add
add
cmpsl
mov
add
cs
subl
nop
jmp
sarb
xchg
aad
add
add
add
add
and
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
