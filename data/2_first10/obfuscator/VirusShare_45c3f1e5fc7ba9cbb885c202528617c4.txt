push
call
ret
ret
dec
cmp
incb
stos
pusha
outsb
xchg
jl
xchg
cmc
pop
sub
sub
sub
in
push
jo
push
push
push
dec
ljmp
popf
sub
sbb
inc
push
leave
or
dec
add
sbb
mov
jge
mov
xchg
lods
out
push
or
sub
sahf
push
xlat
xlat
shr
int3
das
loop
loop
sub
mov
mov
je
popf
in
push
jbe
pop
pop
nop
push
inc
inc
xchg
cwtl
mov
cld
arpl
jle
sub
jecxz
jns
daa
call
mov
add
mov
cmc
ljmp
ljmp
test
inc
stos
rcll
repz
sahf
mov
or
dec
mov
mov
mov
pusha
jns
xchg
std
decb
shlb
mov
movsb
movsb
rolb
add
or
jno
lods
test
adc
out
jb
jne
iret
push
xchg
vxorpd
es
sub
sub
out
mov
leave
mov
mulb
pop
push
gs
push
ja
addl
inc
sub
lahf
movsl
mov
mov
adc
xchg
movsl
dec
xchg
mov
bound
sti
sub
lret
and
insb
pop
test
inc
lock
mov
ret
stos
inc
outsb
notl
xchg
popa
jmp
xor
push
cmpsl
jb
jnp
mov
loopne
push
cli
sub
pop
jns
jo
aas
inc
xor
add
inc
adc
mov
or
xor
jno
clc
add
sub
neg
cwtl
fsubp
aas
mov
fs
xchg
mov
adc
mov
out
out
xor
out
dec
mov
push
repz
cmp
push
dec
andb
shrb
out
test
push
cltd
mov
test
test
cs
leave
or
into
cli
add
dec
sbb
push
mov
ret
and
xchg
mov
pop
les
xchg
push
pop
mov
cmp
adc
and
sub
pushf
popa
out
jnp
add
push
test
inc
xchg
movsb
inc
clc
aad
lock
push
mov
xchg
ds
cmpsb
pop
fwait
jb
shlb
push
enter
in
lret
mov
jo
push
lcall
lock
xor
movsb
mov
sub
mov
sbb
add
or
lret
ss
sub
sub
mov
inc
add
pop
sbb
mov
cmpsb
ja
movsb
and
lret
aad
sahf
add
mov
dec
mov
sahf
mov
arpl
jno
dec
in
dec
mov
cs
iret
xor
shlb
sbb
add
jne
jnp
or
aaa
addl
fstl
xchg
inc
in
out
adc
jecxz
icebp
roll
stos
push
sub
xor
inc
popf
mov
pop
add
insl
pop
jno
repz
imul
xor
pusha
inc
mov
inc
jbe
jl
nop
inc
pop
pop
stos
sub
xchg
fnstenv
mov
lds
add
shl
adc
daa
inc
pushf
mov
int
jnp
jp
inc
clc
jmp
in
xchg
lret
jecxz
ret
mov
jl
dec
xor
lds
adc
std
aad
fldcw
xchg
mov
jp
adc
pop
test
mov
sub
jecxz
mov
dec
mov
aaa
lods
cmc
xchg
jb
dec
mov
fwait
dec
test
adc
shlb
push
into
fstpl
sbb
push
popa
adcb
xor
fadds
sub
aaa
sahf
into
lock
test
ja
or
inc
inc
stos
fsts
pop
mov
xorl
xchg
and
mov
sub
fdivrp
pop
movsl
adc
cmc
outsl
adc
xor
or
mov
mov
jb
pop
lahf
jns
scas
mulb
repz
push
imul
scas
shrb
inc
jo
mov
loop
xchg
repnz
mov
sahf
hlt
outsl
pop
fidivrl
out
sbb
insb
pop
icebp
jnp
insl
lcall
call
fwait
lods
das
jmp
aad
mov
cmp
outsb
add
jae,pn
imull
scas
ja
jae
xor
outsl
int3
jmp
jnp
sub
xor
dec
add
and
xor
push
fwait
rcrb
adc
jl
insl
or
ljmp
bnd
andb
addr16
mov
push
cmp
xchg
frstor
or
xchg
jle
adc
mov
icebp
mov
shl
mov
addr16
mov
sbb
push
mov
stos
mov
imul
mov
jbe
xchg
push
sarb
insl
imul
int3
lahf
push
shlb
xchg
inc
mov
shl
xchg
cmp
jecxz
enter
adc
fxam
add
push
cli
xchg
dec
sbb
jnp
aaa
loope
imul
xchg
mov
xor
arpl
jbe
mov
pop
das
sbb
ret
rcrb
sbb
sub
pop
inc
iret
imul
lret
mov
sub
dec
pushl
jnp
ss
scas
or
loop
push
fiadds
cmp
jp
push
cmpsb
pop
or
cmp
or
inc
daa
notl
sbb
mov
rolb
gs
sahf
mov
cli
xchg
or
data16
and
xor
test
and
lock
xchg
pop
lret
mov
in
out
adc
add
xchg
cmc
bound
mov
jge
rcr
mov
cmpb
vmwrite
add
sbb
push
sub
xchg
inc
mov
cmpsb
ret
inc
addr16
mov
or
int3
mov
xchg
mov
dec
cs
mov
adc
jge
cmpsb
sahf
mov
outsl
call
cmp
sahf
sbb
popa
xlat
xchg
push
cwtl
enter
xchg
inc
and
mov
or
mov
cmp
xchg
incl
in
sbb
mov
dec
fcoms
xorb
lahf
jns
xor
mov
inc
add
mov
push
stc
ret
sbb
pop
and
xchg
jnp
push
repnz
dec
es
sub
adc
aad
cwtl
out
add
and
push
push
bound
jns
lret
sub
adc
cmp
jmp
add
pop
daa
sbbl
and
test
or
aad
sub
in
jmp
sbb
or
cmpsb
loop
mov
lods
fadds
popf
and
scas
dec
movsl
popf
jmp
adc
lcall
or
arpl
mov
or
fimull
sub
sbb
mov
ljmp
mov
das
and
jne
insb
jge
or
push
mov
mov
mov
mov
add
dec
loop
dec
movb
outsl
cs
pop
xor
mov
ss
add
xchg
mov
or
popf
add
in
and
rcrb
xor
jns
jnp
mov
dec
sbb
out
mov
imul
push
or
jns
int3
cmpsl
scas
jne
add
inc
mov
fwait
lock
or
cmpsb
cs
pop
push
inc
pop
or
sbb
sahf
lahf
lds
fucom
ret
xchg
test
addr16
cli
rcrl
dec
dec
xor
dec
pop
neg
pop
dec
push
loope
jecxz
pop
xor
stos
sahf
enter
out
and
bound
mov
lods
scas
hlt
call
scas
test
xor
dec
addb
dec
pop
dec
cld
daa
push
inc
imul
fwait
mov
push
das
xor
bound
jo
jmp
mov
dec
jb
mov
loope
xorb
dec
out
aas
and
inc
aaa
cli
fs
int
mov
push
pushf
imul
aas
add
enter
sub
shld
mov
sub
jge
test
cmpsb
cmpsl
out
out
movsb
out
arpl
pop
xchg
pop
sbb
xor
or
dec
lcall
int3
lds
fisttpll
bound
push
rcr
pop
mov
or
mov
pop
or
add
lods
dec
xor
push
das
sbb
mov
iret
jmp
or
fbstp
mov
aas
inc
xchg
or
mov
leave
pop
movl
out
mov
push
adc
nop
push
sub
xor
mov
lcall
insl
add
or
push
sub
dec
sbb
mov
test
dec
add
push
add
mov
loopne
out
dec
je
cmc
scas
jle
ret
inc
not
fs
mov
movsb
jb
out
out
inc
dec
dec
mov
icebp
mov
clts
and
aaa
out
cmpl
xor
dec
or
or
dec
cs
dec
and
imul
jge
jbe
sub
xlat
popf
shl
stos
xchg
fimuls
push
cmp
push
subb
mov
jo
adc
lret
mov
and
inc
mov
ror
sbb
popa
sub
cmp
and
popf
jmp
test
pop
push
mov
js
sub
xlat
jae
ror
scas
push
std
jae
pop
neg
sub
test
aam
inc
imul
push
push
arpl
mov
test
jecxz
fisubrs
xor
or
inc
imul
pop
sub
hlt
inc
aaa
clc
jmp
jmp
test
andl
add
xlat
xchg
popf
addb
cmp
fwait
adc
mov
jp
scas
fstpt
pop
push
loopne
mov
fidivs
mov
hlt
xor
cs
fbstp
xor
mov
sub
shrb
outsl
push
or
in
cmp
mov
jg
xchg
jno
pop
cwtl
es
loope
mov
push
sub
aad
mov
pusha
jo
push
dec
cs
std
jno
adc
xchg
or
xchg
fidivrl
xchg
mov
inc
dec
dec
dec
sbb
int
push
lods
mov
mov
imul
xchg
ja
ja
insl
stc
pusha
lahf
dec
cld
loopne
les
in
sbb
mov
ret
int3
out
xor
mov
aam
test
outsb
mov
xlat
pop
cmp
fsubr
pushf
aad
and
fnstcw
sarb
divl
test
psubsb
mov
ret
lea
mov
gs
fildl
loope
sbb
cmp
dec
sub
dec
aad
mov
or
push
dec
ret
or
jno
dec
pop
incb
scas
inc
hlt
add
pop
or
push
jl
movsl
test
fcomps
scas
sub
push
add
and
movsl
sbb
mov
sbbl
lret
cli
jge
cmp
mov
hlt
xor
shl
lret
adc
stc
cmp
hlt
sub
movsb
sahf
push
into
jle
rcr
rorb
ret
ficomps
ss
vlddqu
fsubrs
call
aad
in
jecxz
xchg
mov
loope
push
xchg
cmp
scas
push
cmc
loope
push
movsb
sbb
add
fdivr
in
pop
xorb
cltd
ljmp
mov
inc
dec
imul
inc
jae
mov
or
cli
jp
imul
gs
sbb
popf
ret
push
push
pop
cmp
cmp
mov
arpl
xor
lods
fidivrl
ret
andb
xchg
xor
sub
in
mov
mov
ljmp
es
test
stos
andl
ja
scas
and
ss
ds
ds
xchg
dec
cmp
loopne
xor
jg
pop
int3
nop
in
hlt
jmp
and
mov
push
data16
cmp
xorb
xchg
jge
cs
mov
lret
test
jmp
mov
adc
cwtl
mov
mov
add
jg
xor
push
cmpsl
cwtl
test
cmpsl
repnz
jns
mov
mov
push
pop
adc
incl
add
call
aaa
pop
add
adc
push
push
hlt
mov
dec
fisubrs
xchg
mov
jno
orb
pop
aad
xchg
or
insl
mov
addr16
mov
cmp
in
data16
pcmpgtd
addr16
lock
stos
xorb
xor
jg
test
repnz
mov
hlt
inc
testl
jo
mov
xchg
iret
dec
dec
sbb
adc
inc
jge
lods
fwait
push
jmp
pop
idivl
mov
setnp
jmp
push
cmp
icebp
call
cmpsl
cwtl
fwait
pop
jle
xor
cwtl
test
fs
xchg
shrb
dec
lcall
mov
cmpb
xchg
popa
js
inc
xchg
pop
shlb
xchg
rcrl
inc
aad
and
jns
sub
iret
insb
xor
sub
xchg
fucomi
in
adc
scas
adc
pop
pop
dec
xchg
or
fmuls
ja
lods
xchg
jbe
adc
fwait
sbb
pop
adc
arpl
stc
pop
js
loopne
mov
xchg
outsl
xchg
popf
mov
daa
push
mov
out
jmp
movsl
movsb
jecxz
js
jnp
in
divb
sub
pop
sub
mov
ds
jnp
fst
ucomiss
or
xchg
mov
push
ret
test
ffreep
bound
filds
inc
popa
cmp
arpl
fisttpl
xor
push
lds
call
imul
in
fwait
ds
mov
dec
loop
outsb
mov
sbb
gs
push
lret
std
daa
push
mov
xor
jge
sahf
inc
adc
jo
cmpsb
xor
xor
mov
movsl
out
xor
jnp
js
pushf
add
in
dec
mov
inc
cld
push
jecxz
dec
mov
ja
mov
mov
jnp
or
xor
jnp
dec
cmovs
mov
and
jns
and
jp
xchg
mov
imulb
adc
lcall
in
pushf
inc
xor
ss
movb
cmp
mov
cmpb
imul
cmp
and
xor
in
ja
ret
ja
or
out
inc
xchg
test
or
and
pop
out
push
jmp
cld
cmp
jg
inc
in
and
das
ret
addr16
pop
daa
jmp
cmc
jb
dec
xchg
xchg
adc
jg
adc
xchg
push
cmpsb
fstpl
xor
insb
lock
add
cmp
sub
shrb
sahf
test
iret
or
insl
and
add
int
fistps
clc
sub
mov
clc
aas
inc
hlt
and
in
sti
cli
add
jne
aaa
xchg
cld
mov
jbe
inc
ret
jno
xchg
popf
xor
cmp
ret
xor
orl
add
cs
cld
mov
inc
cmpsl
mov
out
popa
pop
in
sub
test
ds
icebp
int
icebp
mov
push
lret
faddl
mov
call
jae
jg
mov
es
sti
inc
cmpsb
cmp
mov
xchg
divb
sbb
stos
lcall
rcr
xchg
dec
mov
sahf
roll
mov
enter
dec
inc
pop
sbb
jnp
cmp
cli
dec
es
je
push
jae
or
pop
insl
or
test
cmp
and
in
out
jno
pop
daa
and
sub
mov
adc
mov
sub
aas
insl
dec
add
jb
xchg
test
js
mov
jb
scas
in
aaa
xlat
lods
or
cltd
cmp
jl
push
mov
xor
cwtl
xor
push
lods
inc
das
js
jecxz
enter
jge
fdivr
loopne
pop
sub
sbb
loopne
push
mov
subl
ss
ss
pop
mov
or
push
shll
aad
mov
fnsave
mov
jecxz
pop
hlt
addr16
inc
icebp
mov
test
stos
jl
inc
jno
nop
ljmp
and
ss
ljmp
push
aad
ds
jae
xchg
sbb
jecxz
inc
lret
ljmp
xor
rolb
test
loope
imul
ja
jge
inc
adc
mov
popa
xor
pop
stos
enter
pop
mov
dec
cmc
adc
lds
call
push
cmp
add
jae
jmp
push
ss
mov
jb
nop
lea
iret
rcrl
psrld
shrb
mov
xor
lock
outsb
loopne
sbb
mov
jae
leave
xor
jl
shl
sbb
mov
cmpsl
xor
out
fidivs
imul
aas
ja
xchg
jno
push
jge
adc
in
pop
pusha
sbb
icebp
lock
push
jge
test
pop
sub
inc
pushl
push
dec
mov
movntq
mov
jne
sub
xchg
xchg
aaa
inc
icebp
or
hlt
push
mov
nop
add
inc
mov
pop
push
push
mov
mov
scas
push
mov
or
loopne
loopne
fistpll
jle
lret
mov
js
push
xchg
push
js
mov
loopne
ljmp
or
add
and
or
mov
mov
pop
dec
lods
js
inc
xchg
fiadds
mov
test
jb
pop
dec
jb
pop
out
std
jp
inc
or
jae
loope
sub
js
lret
inc
aad
roll
gs
or
xchg
push
clc
inc
or
add
pop
sub
subb
jns
gs
mov
or
rcr
jecxz
xchg
shrl
scas
xor
adc
push
cmp
or
loopne
loopne
lahf
jb
addl
pop
xchg
mov
fcoml
cltd
or
xor
mov
jge
sbb
push
or
mov
lret
adc
adc
ret
je
rorl
jno
loopne
jae
inc
test
or
sub
insl
sbb
jmp
push
fdiv
jl
xlat
imul
idiv
xchg
and
mov
repz
mov
pop
popa
mov
orl
movsl
push
mov
or
loope
xlat
mov
sbb
cmpb
xor
ret
lcall
adc
push
sbb
inc
in
add
inc
nop
loopne
xor
fstl
adc
lret
xchg
add
into
lcall
nop
int
xchg
out
loop
or
cmpsl
in
stos
sarl
xor
jmp
rcll
fs
pop
adc
pop
push
sbb
test
ds
pop
andl
lods
push
ss
lea
inc
stc
jae
adc
aad
mov
xchg
add
jae
adc
mov
dec
sbb
pop
sub
and
jmp
int3
inc
pop
xor
es
inc
stc
je
popl
in
lock
push
aam
sub
mov
cmp
or
dec
fs
sub
mov
mov
cmpsb
fdivl
pop
xchg
jge
mov
jbe
jge
jecxz
push
repz
xlat
xchg
pop
push
out
imul
insl
mov
pop
and
sub
mov
pop
aam
mov
push
dec
daa
xchg
scas
movsl
push
dec
push
ror
mov
cmp
std
xor
out
mov
ss
int3
mov
add
pop
repz
mov
jmp
icebp
mov
add
jbe
jl
pop
mov
call
in
sub
or
and
inc
stos
cmp
das
dec
mov
ds
sub
dec
dec
fcmove
mov
and
pop
push
out
js
clc
mov
jmp
shll
std
inc
dec
sub
jl
adc
mov
int3
sbb
cmp
pop
mov
pop
test
push
into
pushf
popf
sbb
pop
lcall
mov
pop
popf
or
cmp
xchg
dec
sbb
mov
out
js
mov
mov
jg
xor
xorl
pop
and
rolb
cmp
stos
mov
repz
xchg
pushl
addr16
or
adc
mov
pusha
movsl
inc
out
ret
and
lahf
fildl
mov
push
outsl
nop
fldenv
mov
lcall
pop
inc
test
jge
cmp
iret
je
and
repnz
mov
xchg
xor
inc
lahf
mov
imul
js
shll
jge
enter
sub
or
mov
sub
cmp
subb
lods
dec
out
fistpl
sub
mov
mov
push
mov
stos
jns
mull
mov
dec
cli
xchg
test
insb
push
daa
mov
daa
popa
sub
cmpsb
xor
scas
test
mov
adc
das
pop
inc
stc
mov
inc
cld
cmp
jno
loopne
xor
sbb
and
push
mov
paddd
xchg
repz
push
out
sbb
mov
mov
das
xor
jge
int3
iret
add
xor
test
jecxz,pn
leave
cmp
loop
popa
cmp
inc
ss
leave
sub
push
loope
pop
out
jmp
add
scas
test
or
jecxz
jg
dec
arpl
mov
and
aad
push
jnp
roll
fidivs
test
fsubl
inc
out
push
mov
push
fsubrl
mov
inc
pop
in
mov
jno
mov
jg
xchg
jno
push
xchg
popf
les
cmp
lods
repnz
sub
iret
or
jo
mov
fldt
xlat
mov
adc
enter
rol
loope
or
mov
out
dec
mov
cmp
xor
das
xor
push
negb
jg
adc
pop
mov
inc
leave
mov
add
jmp
sbb
fmulp
or
leave
mov
jno
in
xor
mov
mov
xor
aas
jbe
xchg
stos
fsubl
mov
or
lahf
jmp
xor
lret
insl
inc
mov
enter
sbb
push
xchg
addr16
push
lahf
icebp
decb
pop
adc
js
add
loopne
aad
mov
pop
jg
push
js
push
mov
idiv
jge
orb
outsb
aam
sbb
pop
add
dec
lea
adc
adc
cmp
fwait
leave
sbb
in
out
xchg
pop
fwait
xchg
mov
insb
ret
jo
cld
adc
xchg
comiss
ss
popa
sbb
mov
shrb
aad
lret
adc
mov
icebp
and
pushf
jp
pop
incl
cld
clc
pop
mov
inc
xor
out
jecxz
mov
xchg
push
pop
std
inc
test
jno
or
je
xor
fdivr
xor
out
ret
push
or
sbb
into
out
mov
cmp
int3
sub
shlb
incl
aad
arpl
out
cmp
sub
mov
fiadds
cltd
decb
insl
out
es
enter
pushf
sub
fimull
stc
mov
mov
es
pop
lods
dec
xor
test
add
mov
and
mov
pop
outsl
and
das
js
aaa
es
or
lret
iret
jmp
or
push
sbb
add
mov
lahf
ret
call
fldlg2
add
xchg
jae
jbe
mov
inc
gs
fstps
xchg
jge
add
adc
mov
jp
sub
push
xchg
test
dec
push
out
push
gs
sbb
loope
sub
data16
xchg
jecxz
xchg
imul
test
mov
adc
rol
push
daa
test
jg
push
fwait
xor
xchg
jnp
addr16
fsubs
fildll
and
cli
insl
xor
test
pop
stos
and
jno
stos
mov
lret
sahf
push
into
lret
cwtl
lock
xchg
in
repnz
xchg
sahf
sub
mov
inc
cmpsl
mov
sahf
pop
push
push
in
inc
xchg
mov
imul
test
leave
iret
adc
ret
ja
dec
fmul
xchg
push
or
out
jne
inc
aam
mov
jecxz
jle
fldl
cmc
js
pop
lea
jbe
loop
outsb
dec
neg
jl
test
sub
cmp
or
cmp
pop
aam
cmp
jnp
movsb
aaa
loop
std
ret
sti
cmp
mov
mov
mov
sub
jb
mov
xor
idivb
xchg
ljmp
or
or
push
push
out
xchg
jno
dec
inc
push
push
xchg
jl
jne
call
adcb
fdivrl
cmc
xor
imul
daa
push
jle
int3
andb
dec
mov
cmpsb
adc
leave
ret
cs
xchg
cltd
adc
adc
xlat
repz
mov
gs
aam
cmpsb
mov
mov
adc
jl
jmp
mov
pop
stos
push
mov
inc
jbe
cmp
add
mov
popa
mov
in
add
push
mov
mov
pop
pop
push
testl
in
and
jns
stos
mov
mov
add
stos
adc
xchg
test
cmp
aam
add
aas
cmp
arpl
mov
jmp
adc
xor
cmpsb
sub
fisttps
mov
fildl
pop
in
repz
inc
or
imul
mov
pushf
adc
aaa
pop
mov
out
cmp
mov
inc
out
aaa
cltd
popa
pop
imul
les
jmp
inc
push
mov
mov
lret
mov
mov
add
fists
and
mov
cli
daa
sti
dec
mov
adc
xchg
loop
xchg
mov
sbb
decb
mov
mov
jg
pop
aam
lret
xor
inc
ja
jns
push
lds
ljmp
pop
jbe
test
jle
mov
adc
adc
mov
mov
vstmxcsr
cmp
and
rcll
sub
fs
push
xor
repnz
cmp
cmpsl
push
ds
mov
mov
test
ja
mov
xchg
xchg
test
out
gs
loopne
and
sbb
ja
sbb
inc
scas
fcmovbe
outsb
adc
push
inc
sub
repnz
xor
dec
ljmp
hlt
xlat
leave
mov
jg
jmp
shll
test
stos
dec
ss
dec
push
std
dec
addr16
xchg
mov
pop
adc
lret
rcll
jno
scas
sbb
sub
add
arpl
js
es
shrl
mov
das
inc
imul
cmp
mov
cmp
sub
fisttpl
ss
cli
cmp
addl
sub
sbb
in
xchg
aas
cld
mov
add
mov
xchg
fidivl
adc
push
mov
sbb
or
sub
popf
push
rclb
xchg
push
loope
xchg
xchg
mov
push
pop
sbb
cld
frstor
lds
inc
sub
dec
pusha
xor
ficoms
in
xchg
testl
dec
pusha
inc
ljmp
lods
add
addr16
adc
fmull
jge
jns
dec
stos
push
insl
jne
pop
test
sarl
dec
in
js,pt
sub
insb
movsb
mov
jl
int3
jo
add
nop
mov
adc
lea
xchg
ret
insb
and
inc
dec
cli
dec
mov
je
pop
pop
shlb
dec
jns
cltd
and
adc
stc
mov
jne
bound
mov
jmp
lret
xchg
adc
rolb
mov
cld
add
xor
cmp
loop
in
out
cli
push
dec
mov
inc
cmp
leave
daa
xchg
mov
pop
jo
ja
xor
iret
sub
inc
loopne
scas
add
pusha
adc
or
out
mov
int
bound
cmp
jnp
jae
inc
inc
mov
sbb
std
cmpsb
das
cmp
int
push
mov
adc
scas
js
adc
cmp
pop
xchg
pop
inc
sbb
testb
add
dec
xor
cli
jge
rcrl
cwtl
orl
loopne
cmp
mov
xchg
leavew
or
int3
stos
pop
mov
aaa
adc
shll
inc
imul
js
loope
es
imul
mov
mov
sub
ret
mov
inc
adc
jmp
mov
ss
nop
adc
pusha
lods
xor
adc
loop
sahf
pusha
push
mov
hlt
adc
push
xchg
inc
loopne
and
fisttps
int3
clc
pushf
inc
sub
es
jmp
in
mov
lea
xchg
push
jg
enter
inc
std
push
xor
dec
rclb
or
push
mov
test
test
out
cmp
loope
and
push
rcrl
das
cmpl
mov
sbbb
adc
test
and
xor
jbe
inc
mov
xor
divl
xchg
xlat
mov
out
fwait
push
shlb
adc
jmp
sub
fisttpll
jge
testb
jns
adc
add
outsb
orb
stos
das
call
jmp
js
je
pop
fisubrl
scas
mov
les
or
mov
movsl
les
xchg
std
lds
push
gs
mov
in
test
sbb
mov
imull
mov
jb
xchg
sub
rcll
xor
pop
es
jo
daa
mov
lods
jb
cmpsb
and
sub
sub
in
and
insl
idivb
jb
pushf
or
int3
sub
dec
imul
in
lret
dec
or
and
mov
cmp
aaa
and
jp
mov
cmp
icebp
jg
add
or
push
add
out
fstpt
movsl
adc
adc
dec
gs
jnp
adc
push
cmp
mov
mov
jge
and
xchg
xchg
in
cmp
rcrb
push
aam
test
cld
clc
sub
daa
mov
lods
pop
addr16
ret
insb
hlt
sub
fsubl
lret
imul
ljmp
adc
inc
mov
in
insl
xchg
dec
shr
and
or
dec
pop
sub
fsubrs
jmp
repnz
jle
and
js
dec
fisubrl
ss
test
xchg
popa
xor
cmc
xchg
dec
fwait
jns
lret
nop
adc
loope
pop
leave
into
xchg
shr
fiadds
push
mov
pop
xchg
cmp
cmpsl
pusha
jo
scas
ss
clc
jb
mov
imulb
jl
aas
xchg
icebp
cmp
jecxz
dec
or
push
imul
ljmp
loop
lds
inc
add
jl
lods
sarl
mov
mov
push
pop
jo
mov
jbe
outsl
cmpsl
and
inc
inc
mulb
je
in
mov
inc
mov
xchg
inc
push
dec
pop
js
dec
xchg
out
repnz
ret
pop
cwtl
insl
and
lcall
xor
or
nop
push
rcrb
jne
icebp
mov
mov
xchg
out
jns
outsb
clc
rorb
cmpsl
xor
pop
in
shl
enter
sbb
rcll
dec
sub
cmp
adc
push
or
and
cmpsb
daa
mov
out
icebp
std
sahf
in
jg
pop
addr16
enter
jmp
test
leave
sarb
scas
mov
imulb
sbb
jecxz
mov
call
sbb
sbb
mov
lret
cli
push
test
dec
cmp
test
fs
ljmp
outsl
jb
xchg
cltd
sarl
ret
sub
out
mov
mov
pusha
into
mov
loopne
sti
dec
xchg
je
pop
xor
pop
lock
sahf
mov
andb
not
and
and
inc
cmpsl
aas
jne
sbb
dec
pop
pop
jne
and
adc
inc
mov
pop
sbb
fistl
call
cmp
cmp
outsl
push
jmp
int3
cmc
mov
sarb
repz
add
xchg
add
jl
dec
cmpsl
loope
je
rcrl
xor
addr16
decl
and
into
jmp
jg
pop
movl
inc
cmp
sbb
in
std
adc
lahf
out
mov
fwait
mov
outsl
mov
add
popf
inc
push
ljmp
push
or
xor
dec
sbb
adc
mov
popa
loopne
shlb
lret
dec
loop
cmc
pop
cmc
cmp
push
push
cmp
in
inc
lret
dec
jl
roll
cs
imul
xchg
daa
std
sbb
or
stc
fwait
dec
cmc
sahf
lock
push
dec
jmp
lahf
lds
fdivs
fmuls
daa
inc
in
mov
jg
jge
adc
jle
lahf
pop
xor
sbb
mov
dec
mov
fmull
dec
in
rcl
scas
xchg
and
inc
pushf
and
add
add
je
push
push
inc
push
jl
fwait
xchg
jae
xor
xor
sahf
bound
pop
sbb
insl
inc
stos
enter
xchg
std
add
fimuls
fs
cmpsl
xchg
and
and
cwtl
shr
sbb
jo
add
jnp
or
mov
cmpsl
jle
test
int
mov
pushf
mov
insb
sahf
mov
xchg
je
fwait
xlat
clc
popa
stos
ret
ja
scas
and
fisubs
rcrl
mov
mov
xor
adc
xor
add
xchg
cmp
pop
icebp
mov
xchg
int
jl
mov
mov
ja
jmp
fstps
icebp
and
loop
mov
enter
movsl
aaa
ss
add
dec
ret
notb
imul
push
fnstcw
jb
jb,pn
mov
sbb
pusha
out
mov
ds
sbb
sarb
inc
fwait
pop
or
adc
adc
lods
subl
cmp
out
jmp
ret
dec
ret
fiaddl
sub
mov
fs
cmp
push
rolb
xchg
mov
pop
aaa
imul
in
jle
rol
roll
popf
fisttpll
andb
mov
cmp
cmp
cmp
mov
lods
sbb
push
ja
imul
xchg
nop
bsr
leave
in
pop
adc
out
jnp
jno
je
movsl
pop
xlat
dec
or
into
jle,pn
sub
or
aas
sti
into
out
out
push
adc
cmpl
inc
ja
das
push
popf
in
push
in
xchg
sbb
and
jl
push
dec
mov
stos
mov
dec
shlb
mov
sbb
jbe
xor
and
in
mov
xor
sub
mov
popf
imul
jecxz
frstor
xor
test
mov
pop
sub
cmp
add
push
cli
aas
in
mov
fstl
xchg
jle
adc
cltd
mov
mov
test
scas
mov
push
lods
cwtl
and
adc
push
repz
imul
adc
shll
rcrl
push
pop
in
test
mov
sub
xlat
xor
sub
sbb
cltd
push
cmpsl
push
push
shrb
adc
xlat
hlt
pop
xchg
add
sarl
std
enter
inc
aaa
and
mov
je
or
add
sub
scas
std
sti
add
aad
push
mov
dec
jae
inc
scas
stos
xchg
fsub
jo
data16
sarl
mov
mov
sub
push
out
bound
mov
fs
dec
inc
mov
jb
or
dec
lcall
mov
mov
icebp
into
push
out
fdivrp
sbbl
data16
icebp
adc
inc
sub
dec
mov
adc
mov
shll
imul
ja
inc
pop
pop
dec
out
sbb
mov
jle
enter
push
push
icebp
scas
jge
add
fadds
leave
push
mov
sbb
in
jne
or
push
mov
mov
push
fwait
jecxz
testb
pop
pshufw
in
xor
js
out
fwait
scas
xor
movsb
pop
or
pop
scas
mov
lret
push
mov
repz
cmp
mov
dec
pop
nop
xor
stos
cld
xchg
add
mov
xchg
testl
fcmovu
cli
mov
enter
cmp
dec
stc
inc
xchg
mov
sub
lds
vcvtps2dq
rcrb
mov
push
jb
in
lret
dec
cmpl
and
push
data16
cmp
mov
or
jecxz
in
pusha
xchg
cmpsl
inc
jae
push
jp
fcoml
test
inc
or
xchg
cmpsb
inc
sub
cmpsl
adc
cltd
pop
mov
mov
call
sub
jp
add
xchg
pop
xor
xlat
mov
xor
push
add
adc
in
mov
and
mov
rcll
fwait
test
pop
fstl
mov
mov
icebp
aaa
add
lret
cs
aam
inc
sub
cs
scas
pop
scas
cmp
stc
jno
or
lods
jg
dec
fnstsw
jp
ret
and
andb
je
mov
adc
adc
push
sahf
push
pop
xor
rclb
cmp
push
sti
jmp
fisubrl
inc
mov
pop
dec
and
mov
dec
sahf
mov
out
cli
sbb
push
iret
mov
jge
adc
outsl
adc
in
xchg
jmp
xor
cmpsl
and
xor
out
dec
adc
cmpsl
rdtsc
cmp
lea
cmp
leave
dec
leave
xchg
xchg
mov
mulb
test
xchg
jno
rcrl
int3
or
push
mov
inc
sbb
ja
fs
cmpsl
nop
sbb
pusha
andnps
xor
mov
or
repz
push
jb
les
push
mov
dec
loop
jl
scas
xchg
pusha
add
and
ss
ficoms
add
test
dec
jmp
je
cmpsl
mov
or
mov
out
scas
shrb
daa
popf
lods
lods
mov
ret
cmpsb
inc
jg
in
movsl
pusha
xor
ret
mov
stc
aas
adc
sbb
pop
cmp
shll
pop
mov
xchg
lea
jns
push
shll
pop
pop
adc
adc
je
arpl
ljmp
cmp
mov
lret
mov
adc
insb
ret
mov
sub
pop
pop
insl
lock
sbb
enter
shlb
mov
pop
outsb
dec
in
cmp
in
mov
mov
mov
lds
out
cld
or
xor
dec
xor
lcall
push
pop
inc
scas
mov
pop
add
orb
xchg
loopne
rorb
pop
fsubrl
push
jo
mov
inc
xor
cmp
mov
pop
inc
mulb
addr16
cmp
in
cmp
aaa
inc
push
push
and
mov
outsl
loope
dec
lods
in
bnd
in
ficoms
lods
xlat
dec
inc
data16
cmp
setg
negl
adc
leave
inc
stos
inc
pop
aam
js
je
aaa
mov
jo
rol
or
sub
push
les
and
cmpsl
push
lods
jb
decl
lods
sub
pop
cmp
fsubr
or
sbb
fldl
mov
add
scas
cmp
ljmp
add
aas
mov
adc
insb
nop
jp
fwait
or
rolb
in
test
sbb
test
in
das
fdivl
frstor
jle
movsl
aaa
sub
icebp
pusha
pop
icebp
xlat
mov
add
or
mov
outsl
gs
inc
shrb
lcall
push
mov
add
hlt
shrb
stc
fnstcw
pushf
aad
popa
test
mov
and
and
dec
cmp
js
outsb
mov
sbb
mov
imul
repnz
mov
push
ljmp
pop
popa
inc
cmp
test
js
clc
lods
popf
gs
in
ss
mov
cmp
faddp
inc
lods
outsb
sahf
xchg
aaa
inc
sub
xchg
outsl
pop
adc
add
out
sub
xor
fs
mov
call
cmpsl
jle
xlat
subl
outsb
lods
jmp
daa
push
outsl
sub
test
jl
fs
insb
xor
inc
andb
out
enter
or
sbb
xor
push
and
xchg
and
xchg
push
cmp
mov
rorl
int
push
push
mov
fldcw
les
push
cmp
mov
mov
push
out
mov
rcr
sub
mov
aad
inc
ja
ret
cmpsb
lfs
popa
pop
add
push
out
hlt
adc
popa
pop
or
inc
ficomps
loope
inc
cmpsb
mov
and
popf
dec
inc
push
pop
jmp
mov
add
add
loop
fcomps
xchg
jle
inc
aam
pop
repnz
jnp
xchg
pop
xchg
scas
sbb
daa
add
shrb
xor
xor
push
mov
adc
in
aas
int3
pop
mov
push
jge
dec
cmp
mov
stos
xchg
adc
sbb
bound
and
adc
int3
adc
jbe
stos
in
sbb
pop
cmpsb
mov
lret
xlat
push
sbb
adc
inc
add
cwtl
sbb
lods
hlt
lock
xchg
mov
loop
cmp
test
ljmp
and
mov
loopne
cmp
add
movsb
or
jno
es
shl
ja
popf
mov
out
mov
add
outsl
adc
xlat
daa
mov
fbld
shlb
fdivr
call
call
mov
lcall
xchg
sti
cltd
test
pop
push
adc
pop
loope
shll
sti
sti
adc
and
and
negl
jl
and
dec
inc
aam
das
cmp
push
sub
mov
sbb
mov
sbb
stos
push
lret
rorb
lock
loopne
nop
cmp
inc
sub
jmp
and
or
mov
adc
iret
mov
clc
stc
and
dec
insb
xor
lret
mov
je
mov
adc
and
dec
sti
mov
push
mov
cmp
push
sub
test
push
lahf
lcall
sbb
lcall
add
push
xchg
fdivrl
pop
lcall
xchg
jae
stos
pop
das
cld
int3
test
xchg
xchg
mov
icebp
sub
xchg
ret
xor
cmp
adc
rorl
cmpsb
pop
inc
mov
testb
add
xchg
shlb
xor
xor
rcrl
in
dec
pushf
add
outsl
pop
test
lods
xor
sub
or
lcall
mov
xlat
not
notl
addr16
jp
xlat
and
jne
add
std
push
push
gs
jge
lret
dec
mov
jl
jmp
xchg
addr16
cmpsb
xor
fwait
in
jae
fwait
jb
inc
jns
push
mov
aas
andb
mov
mov
lcall
stc
aaa
xor
or
add
and
fcoms
hlt
mov
ret
pop
xchg
mov
mov
fadds
shll
or
xor
pop
push
sarl
insl
je
sub
lock
cltd
je
push
push
xchg
mov
sqrtps
lret
xchg
or
hlt
xchg
dec
lret
add
inc
out
addr16
mov
cmp
or
cmp
inc
sbb
insl
or
mov
mov
lods
sbb
out
mov
scas
push
lods
lock
mov
fs
inc
xchg
cmp
popa
mov
xor
je
mov
sbb
pop
pushf
xchg
push
xor
adc
pusha
jne
cli
andl
cmp
test
pusha
aas
push
jnp
mov
add
jne
ret
or
lock
imul
xchg
pop
lods
sbb
pop
lahf
adc
ss
sbb
sbb
sbb
xchg
iret
pop
scas
mull
lahf
sbb
in
cmpsb
xor
insl
data16
jae
pop
cli
adc
push
loope
and
fcoml
shll
jg
cmp
sub
hlt
jle
pushf
rcrb
jo
sub
mov
aam
xor
movsb
inc
xchg
push
in
xor
enter
mov
jae
jecxz,pt
test
mov
and
std
sbb
in
push
xor
pop
cmc
mov
cmp
negl
daa
add
add
mov
xchg
dec
sar
ljmp
pop
hlt
fstps
fcmovbe
cltd
sub
lods
sub
ds
mov
fcomps
cmp
loope
call
scas
cmpsb
push
mov
test
test
sbb
dec
daa
shll
leave
adc
inc
int
dec
adc
pusha
lret
xlat
into
leave
jle
mov
add
lods
fimull
fidivrs
test
jno
sbb
mov
and
clc
mov
insb
push
xor
scas
xlat
jne
in
popa
les
lahf
xor
mov
sbb
mov
lds
outsl
jnp
dec
int3
hlt
popa
outsb
jo
pop
lock
scas
mov
aas
test
push
xchg
add
mov
cmc
dec
ss
jl
mov
xor
leave
xor
imul
out
imul
outsb
lds
pop
lods
mov
mov
push
sahf
lods
dec
pop
push
push
mov
and
iret
loop
stos
icebp
xchg
in
inc
or
lcall
pop
mov
jbe
sbb
lds
push
insb
jnp
jp
movsb
pushf
lcall
xchg
sub
dec
mov
gs
ret
push
lods
addr16
sub
and
mov
jne
pop
push
aaa
fwait
mov
jns
add
adc
bound
mov
dec
cmova
cmpsl
push
cltd
pop
mov
jo
xor
dec
push
das
xchg
mov
int3
xchg
mov
aam
out
ret
sbb
aas
imul
mov
sub
pop
mov
xchg
not
fimuls
rcll
stc
xor
jo
and
add
test
repnz
popa
stos
movsl
inc
shlb
loop
dec
std
stc
inc
out
dec
test
es
pop
inc
lret
pop
lock
loop
add
mov
xchg
stos
into
aaa
cmp
popa
pushf
mov
sbb
add
jmp
call
pop
or
stc
or
cmc
mov
shlb
mov
and
popa
jmp
pop
xchg
loop
cld
jg
cmp
mulb
pop
lret
ss
xlat
sub
inc
mov
call
sti
cmp
dec
ljmp
fwait
stos
inc
mul
pop
jl
pop
fadd
aaa
int3
jmp
mov
jmp
adc
sub
or
enter
testl
mov
add
pushf
cmp
jg
aaa
repnz
movsb
enter
jmp
fstpl
jo
cmp
mov
mov
movsb
pop
inc
lahf
sub
test
mov
pop
js
jb
sbb
fimull
pushf
xchg
scas
jmp
insb
sbb
and
mov
xor
add
inc
pop
jle
addr16
and
cmpsl
in
jbe
int
and
out
xor
clc
repnz
pusha
pop
lcall
sub
push
sbb
push
cmpsl
fwait
lret
mov
cmc
inc
insb
pop
outsl
lret
mov
adc
mov
mov
add
mov
jp
test
test
aaa
inc
test
outsl
mov
out
mov
cmp
lret
xchg
lds
jno
adc
icebp
test
adc
es
xlat
leave
cmp
pop
cmp
hlt
out
rcrl
mov
dec
adc
xor
inc
std
push
jbe
sahf
sub
es
aad
push
stos
fwait
cld
mov
lcall
adc
fneni(8087
pop
adc
in
or
sub
add
sub
or
popf
sarl
dec
mov
ja
imull
sbb
push
popa
jb
add
push
je
imul
xor
xchg
outsb
gs
out
out
mov
imul
pop
mov
insb
ja
mov
imul
pop
push
pusha
push
mov
mov
or
push
xorl
xor
sahf
cld
insl
fwait
imulb
imul
jge
insl
jns
sbb
addb
pop
jo
sub
mov
push
pop
and
xor
push
je
push
sbb
sahf
aas
mov
xchg
add
dec
mov
pop
in
pop
movsl
insl
dec
in
dec
push
lcall
and
shll
stos
sahf
in
arpl
insl
lea
test
dec
jnp
mov
les
shll
cmp
push
or
nop
fwait
jg
inc
xchg
pop
xor
cmp
dec
cmpsb
xchg
and
add
cmpsb
aad
ds
iret
arpl
pop
mov
ljmp
lret
and
cs
pop
cmp
sub
dec
mov
aad
addb
xor
jnp
jne
mov
pop
mov
int3
cmp
mov
lock
jmp
cmp
popf
sub
in
jmp
and
pop
push
xchg
pop
loope
jns
mov
out
lret
dec
inc
xor
out
push
xchg
or
and
clc
insl
dec
pop
scas
and
dec
or
lea
call
mov
sub
push
push
mov
push
inc
xchg
scas
sti
les
add
adc
out
or
or
xor
loope
push
add
push
movl
aas
orl
imul
bound
sub
ds
hlt
les
push
xor
push
js
ss
dec
scas
jb
out
sbb
cmpsb
outsb
add
je
push
inc
lcall
jl
repnz
adc
out
adc
or
sahf
xor
rcrb
test
adc
mov
cmpsb
sub
shrl
testl
mov
in
cmpsb
dec
sub
aaa
test
and
adc
shlb
shrb
push
xor
push
sbb
sbb
xchg
aaa
xchg
sti
les
aam
aam
push
mov
incl
push
int
mov
dec
sbb
and
and
nop
in
inc
jo
mov
in
popa
fcoml
pop
lret
sbb
mov
adc
test
fsts
imul
pop
xchg
mov
nop
out
dec
jmp
enter
pop
movsb
push
rcr
dec
mov
push
es
inc
sub
sub
daa
aas
adc
xor
test
jb
cmpsl
fildll
and
ficomps
outsl
mov
fs
push
jg
adcl
testb
gs
popf
add
dec
in
bound
out
testl
and
jo
ret
or
cs
aaa
mov
stos
ret
int3
std
ficomps
scas
sub
jle
and
fs
rcrl
aad
push
stc
fwait
jge
jl
lret
cltd
mov
push
jg
and
sbb
int3
js
cmpsl
lods
mov
add
ret
loope
roll
mov
mov
adc
aad
lods
jge
cmpsb
add
adc
cmp
int3
push
push
clc
dec
jl
aas
ja
adc
dec
into
insl
pop
testl
adc
movsl
outsl
fldl
pop
ljmp
jecxz
mov
movsl
jns
push
dec
test
pop
ret
sub
mov
mov
xor
xor
scas
dec
movsb
mov
sbb
sbb
mov
inc
pop
lahf
dec
aad
jle
cld
push
in
jo
lods
adc
shll
clc
or
sbb
cmp
jae
add
cmp
and
imul
je
sbb
mov
idivb
js
or
inc
jne
es
addr16
cwtl
test
mov
stos
cwtl
adcl
lret
fildll
aad
mov
mov
mov
leave
jge
lret
inc
cltd
bound
out
and
and
mov
sarl
jb
fstp
inc
adc
in
or
inc
fildl
fcomip
imul
mov
mov
and
into
les
xor
xorb
fildl
iret
rcll
in
ret
dec
popf
das
and
cmp
test
cmp
cmovp
fs
sbb
inc
arpl
loopne
dec
loop
jmp
stc
jmp
pop
or
pop
out
jp
add
push
std
mov
mov
stc
int
jecxz
loopne
cmp
aad
xchg
mov
les
pushf
leave
dec
jne
xchg
push
or
orl
and
aam
lock
xchg
mov
sbb
into
rcr
and
lret
dec
iret
and
leave
in
lock
stos
xor
cwtl
stc
faddp
push
mov
lahf
enter
cmc
decl
cmp
adc
int
adc
add
add
cmp
cmp
push
push
fnstenv
ficomps
adc
adc
inc
adc
out
push
in
dec
nop
into
push
sub
jno
push
enter
rclb
xchg
add
mov
mov
pop
decl
or
fucomp
or
push
lahf
pusha
push
jg
in
dec
adc
adc
es
into
sti
stos
fbld
jnp
fsubl
scas
icebp
fisubrl
pushf
inc
push
cmp
add
add
inc
mov
dec
mov
sub
jnp
pop
sbb
sbb
fucomp
and
mov
rol
out
xchg
lea
and
mov
inc
nop
inc
pop
add
sbb
xor
outsb
repnz
cld
inc
cmp
roll
notb
nop
into
mov
inc
mov
adc
notb
pop
or
jo
add
stos
shrb
fstps
into
lret
lcall
add
pop
pop
imul
push
int
test
stos
das
dec
in
push
cli
push
push
lret
cmp
hlt
jb
cmp
or
fistl
bound
insb
mov
out
lds
lods
jge
add
cmp
mov
repz
push
cwtl
mov
lret
sbb
cmp
pop
nop
add
nop
xor
pop
ret
bound
mov
xchg
lock
lods
ret
adc
xlat
testl
ror
arpl
ret
inc
out
lock
imul
fstps
sbb
outsb
xchg
xchg
and
lcall
fcomip
push
movsb
mov
and
push
mov
fucomi
jecxz
sub
sub
or
shlb
loope
adc
adc
inc
pop
dec
jo
jnp
push
lea
xchg
push
push
inc
popf
inc
jle
imul
sarl
loopne
cmp
cltd
jmp
jecxz
test
xchg
fs
sub
inc
int3
scas
inc
ds
andb
and
adc
mov
fstpl
mov
inc
cli
sub
cmpsl
cmp
push
cmp
pop
js
leave
pop
rcrl
popf
arpl
les
jo
mov
jnp
mov
cmp
or
repnz
hlt
das
test
stc
lock
mov
lcall
push
dec
nop
inc
popf
das
pusha
les
xor
push
mov
ljmp
cmpl
lea
repz
xchg
pop
inc
pop
sub
adc
int3
jbe
imul
xor
mov
cmp
je
das
jge
xchg
jnp
adc
je
decl
add
xor
xlat
test
fstl
xchg
in
subb
mov
repnz
xor
jno
mov
adc
push
xchg
imul
adc
pusha
add
xchg
jmp
xchg
lods
fcmovb
fiadds
mov
insb
adc
fsubp
push
andl
std
mov
jg
enter
aaa
mov
jg
mov
push
popf
mov
dec
daa
and
mov
imul
sbb
and
pop
inc
cli
pop
pop
mov
sti
cmp
into
clc
in
sbb
in
pop
xchg
mov
mov
xor
jle
lea
sbb
jmp
sysenter
pop
cld
fstl
cmp
fcmovbe
hlt
xchg
xchg
std
icebp
lea
aam
mov
and
je
out
or
jno
addl
sbb
pop
add
or
lods
fs
push
js
adc
mov
inc
mov
out
inc
pushf
notb
mov
adc
popf
jnp
rorl
fisubrs
rcrb
xor
aaa
aam
pop
push
cld
adc
xchg
cmp
clc
cmp
clc
sar
orb
push
lahf
sahf
aad
sbb
mov
adc
pushf
add
mov
xor
dec
or
push
ret
xchg
xchg
mov
mov
pop
mov
xlat
dec
clc
jno
xchg
mov
mov
movsb
test
movsb
and
pop
inc
pop
sub
ret
scas
sub
ds
mov
xor
inc
frstor
fucom
mov
push
pop
insb
adc
pop
xchg
sub
push
pop
jle
cmc
adc
clc
pop
pop
lock
dec
xor
xor
iret
mov
movsl
or
cmp
mov
push
clc
out
jns
insb
fs
pop
and
xchg
popf
xorl
jg
cmp
jl
fs
add
sar
out
fwait
shrl
adcb
in
pop
push
pop
push
ss
dec
or
adc
dec
sbb
mov
jb
and
mov
xor
or
push
push
pusha
dec
in
shl
shll
inc
fldenv
xchg
and
pushf
xchg
adc
mov
test
jnp
xchg
popa
pop
jo
xchg
jmp
popf
popa
pop
es
test
cmpsl
sbb
add
loopne
sbbb
mov
push
sarl
popa
nop
int3
xor
mov
leave
sub
mov
arpl
jg
fldcw
std
sbb
dec
ljmp
jecxz
pop
push
je
pop
data16
hlt
mov
dec
xorl
xor
push
mov
lcall
inc
sbb
push
xor
push
psraw
std
inc
lret
lock
pop
ss
rorl
adc
jae
adc
outsb
popa
sbb
jmp
scas
stos
or
dec
popa
sbb
and
int3
push
icebp
clc
pop
iret
int3
mov
adc
add
pushf
add
sbb
cmp
cmp
aad
xor
mov
out
or
imul
xchg
dec
xchg
and
sbb
repz
pop
mov
repz
or
pop
mov
clc
jp
fwait
jmp
rcll
pop
xor
xlat
inc
ret
bound
es
inc
mov
sti
loope
xchg
lret
add
xchg
or
loop
or
stc
push
adc
cltd
and
cli
jge
js
pop
mov
es
pop
mov
jbe
cmc
cld
outsl
adc
inc
xor
push
stc
mov
cmp
std
push
lret
pop
mov
scas
adc
hlt
dec
cltd
xor
sbb
fadd
jle
mov
or
fldcw
xchg
pop
jns
test
clc
ret
sahf
test
and
fists
dec
fyl2x
adc
pop
jno
push
pop
pop
mov
mov
mov
mov
call
push
add
repz
insb
sti
mov
das
and
movsl
sbb
jmp
repnz
xchg
pop
mov
push
in
movnti
cmp
sub
lea
sbb
dec
push
imul
push
jmp
es
popf
xchg
rolb
jne
sbb
rcrl
lret
inc
aas
clc
ret
loop
cmp
imull
cli
sbb
es
lods
adc
in
push
ret
into
push
mov
xor
pop
pop
and
and
xchg
lods
ret
icebp
mov
bound
mov
sbb
fnstsw
aam
pop
inc
mov
add
jno
jno
ja
imul
leave
imul
cwtl
int3
ret
or
stos
test
push
cmc
sbb
cmp
andl
test
dec
inc
mov
daa
xchg
pop
push
sbb
mov
mov
mov
in
adc
stos
fwait
mov
ds
adc
cmpsb
lds
pusha
or
lret
ja
mov
sti
dec
popf
pushf
add
jg
push
in
and
cs
in
pop
int
aaa
adc
pop
mov
outsb
rcrl
cmp
mov
pop
xor
mov
cmp
pop
push
loopne
adc
pop
push
xor
xchg
lret
jae
cmpsl
hlt
xchg
inc
shll
sahf
cld
int3
popf
out
rcrl
dec
push
aas
aad
xor
popa
mov
dec
loop
imul
dec
push
fistps
stc
repnz
adc
fwait
mov
loopne
add
inc
pop
pop
outsb
jl
insb
xchg
lods
mov
adc
or
lahf
lea
sub
pop
inc
fsts
adc
xchg
dec
lahf
int3
addb
pop
cs
test
ds
cmp
fwait
push
pop
xchg
shl
hlt
fistps
and
insb
inc
sub
xchg
ljmp
ds
lds
movsl
nop
adc
or
test
sbbb
adc
lods
jge
sti
popf
push
js
pop
clc
sbb
jbe
int3
jge
cmp
sbb
hlt
cmp
lods
test
jg
sub
fwait
loop
or
cltd
stos
pushf
out
fdivrs
jg
mov
test
xchg
aam
adc
pushf
clc
les
ret
es
div
aas
mov
mov
pop
sarl
dec
sub
pop
icebp
stos
test
scas
xor
push
fimull
push
or
insl
lods
cwtl
push
xchg
fldcw
adc
and
adc
xor
insb
mov
loope
repz
and
dec
and
int3
int3
nop
xor
shrl
and
jmp
sub
jnp
and
loop
xrelease
and
pop
sbb
mov
fs
ja
or
sbb
inc
fs
xchg
mov
ret
cmp
into
adcl
cmp
test
sub
xchg
lods
mov
repz
lods
in
cld
cld
push
pop
int
xchg
aad
fmul
cmp
aas
scas
cmp
ljmp
mov
sub
dec
addr16
cmp
lret
sub
cld
add
movsb
push
insl
mov
dec
cmp
jmp
aaa
add
ret
aam
ja
insb
stos
add
cmp
adc
popf
stos
fsqrt
insb
sub
mov
mov
add
cmpl
mov
xchg
add
aam
imul
imul
jbe
ror
lds
cmc
dec
fimuls
stos
std
xchg
in
sbb
popf
out
roll
adc
and
pop
lock
mov
outsb
dec
xor
jb
xchg
lea
mov
lds
or
arpl
mov
shll
mov
jl
sbb
pop
cli
jns
jg
sub
lds
dec
fsubp
xchg
enter
mov
sub
or
and
jb
cli
xor
jbe
ret
fwait
xor
ret
or
dec
loope
push
xchg
sub
jne
adc
inc
mov
mov
pop
cmp
jge
sbbb
and
mov
jge
adc
xchg
in
addr16
out
mov
stos
pop
inc
inc
push
js
lret
push
out
in
or
mov
mov
inc
roll
or
mov
shlb
sbb
pop
push
sub
xor
scas
mov
movsb
and
pop
std
adc
mov
inc
movhps
pusha
test
dec
in
sarl
call
fxch
pop
mov
adc
or
inc
jg
ds
and
or
push
xchg
pusha
xor
xlat
mull
imull
add
lds
repz
mov
dec
repz
repnz
push
xchg
outsb
leave
jno
nop
jle
pop
xlat
andw
cmp
mov
lcall
lock
out
dec
jg
jg
int3
movsl
mov
xchg
das
jno
mov
shlb
jne
mov
andl
sub
inc
push
pop
leave
xor
stc
jge
out
xor
out
xchg
mov
out
cmpsb
sub
jle
shll
push
jnp
adc
mov
mov
xchg
call
std
mov
jmp
add
fdivr
and
jecxz
push
push
push
fwait
outsl
xchg
jne
movsb
inc
xchg
stos
lcall
sub
aas
xchg
dec
das
pop
sub
ja
xor
sub
adc
leave
cmp
adc
stc
ljmp
fisubs
cmpsl
ret
xor
sub
repnz
aaa
sbb
push
mov
adc
mov
outsb
aam
pop
adc
xchg
sbb
insl
fiadds
pop
mov
pop
arpl
inc
rcll
xor
or
push
fsts
outsb
or
test
mov
popf
pop
push
cmpsb
cmp
aas
mov
cld
bound
jo
mov
enter
stc
fsubp
gs
mov
test
mov
arpl
mov
dec
sbb
dec
add
pop
sbb
repz
push
ljmp
pop
loope
insb
xlat
imulb
xor
inc
loop
lret
insl
cmp
sbb
jle
cmp
into
inc
divl
addl
inc
cmpsb
xchg
mov
hlt
pop
mov
outsb
dec
andb
pop
mov
dec
lea
jp
mov
lret
int
pushf
ss
hlt
icebp
adc
sahf
enter
jecxz
sbb
mov
xchg
rcrb
js
add
cwtl
div
xor
test
loopne
jg
loopne
es
mov
mov
mov
ljmp
or
sub
int
dec
mov
sbb
xor
loop
xchg
mov
push
pop
cmpsb
push
add
jle
cs
mov
popf
loop
sbbl
out
lea
sub
pop
pop
test
add
sub
adc
movsl
cmpsb
xlat
pop
adc
pop
gs
loopne
in
push
sub
cli
cmpsl
jno
aas
das
dec
inc
jge
xor
sbb
clc
push
xchg
rolb
pop
fstpt
clc
into
mov
sbb
addr16
fs
cmc
repz
xchg
lock
adc
mov
cmp
pushl
mov
cmp
push
test
test
sti
dec
lret
xchg
or
js
lcall
push
jns
test
out
inc
add
outsl
cld
bound
iret
jge
loopne
sar
jnp
push
ja
xchg
push
xlat
mov
mov
ss
mov
addr16
push
inc
in
repz
mov
mov
rcll
xor
addr16
scas
stos
push
insl
xchg
mov
pop
addr16
xor
xchg
icebp
or
mov
xor
les
mov
cmp
jb
pop
aad
addr16
dec
rol
sub
pop
arpl
dec
adc
cmpsl
or
mov
fnsave
fs
mov
loope
mov
xlat
push
loop
lcall
jb
sub
xchg
add
out
pop
addr16
pushf
adc
int
sbb
flds
push
ror
xchg
mov
jge
aas
jo
push
fnstsw
sbb
adcl
into
sbb
inc
cmp
xchg
mov
dec
mov
dec
enter
das
jbe
push
pop
and
imul
and
mov
sub
and
mov
mov
pop
lods
out
xor
stc
push
push
pop
lods
mov
mov
push
mov
add
or
pop
push
hlt
inc
lret
clc
hlt
movl
add
mov
add
aad
mov
xorb
mov
xchg
ror
push
cmp
lods
fmul
sub
push
push
xor
xor
stc
cwtl
jo
fs
ja
out
mov
nop
sub
not
xchg
sub
dec
xchg
add
dec
in
stos
pop
imul
mov
xchg
cmc
mov
xchg
xchg
jle
stc
xchg
dec
fadds
sbb
out
add
mov
and
sub
arpl
cltd
add
imul
inc
dec
testb
sub
test
fidivs
cmp
jg
test
popw
jno
cmpsb
cmc
jo
mov
pop
adc
dec
mov
pop
inc
repz
dec
mov
fwait
lds
cwtl
mov
adc
aad
pushf
mov
cld
push
xor
dec
popa
xchg
aad
rclb
sbb
mov
push
lods
and
aam
xor
test
das
dec
pop
push
movups
rclb
paddq
lds
dec
mov
sbb
stos
enter
lret
mov
test
xor
test
lods
and
or
xchg
jg
cmp
cpuid
jae
sbb
mov
mov
das
mov
rorl
pop
iret
inc
fsts
daa
mov
inc
push
mov
pusha
pop
pop
je
pop
or
jne
jo
cltd
xor
mov
jnp
jge
pop
dec
aas
es
inc
cmp
adcb
mov
mov
push
mov
scas
lcall
sub
ss
scas
mov
aam
cs
ja
jle
lea
sbb
das
fwait
xor
lret
fs
iret
cmc
in
gs
cld
xor
jns
in
js
xchg
sbb
xchg
or
shl
pop
dec
insl
cmpsb
and
bnd
xlat
mov
jnp
sbb
cmp
std
xchg
ja
js
mov
pop
jns
loop
pop
sub
movsl
call
clc
gs
xor
adc
dec
lock
add
out
test
sti
test
test
movsl
adc
and
mov
sbb
jge
mov
push
mov
sub
ljmp
xchg
mov
jae
pop
pop
jmp
aam
bound
jbe
or
mov
mov
sarl
jecxz
stos
sbb
mov
sbb
add
sub
jno
ret
mov
into
icebp
sbb
dec
ror
xor
inc
fsubr
fldenv
stos
stos
jns
pop
call
dec
jge
mov
or
pop
jecxz
sti
cmp
and
pushf
and
outsl
sbb
adc
addr16
and
push
enter
push
call
push
push
sbb
loopne
enter
andb
push
mov
stos
and
push
sti
pop
rorb
sub
dec
mov
xor
jno
insb
mov
dec
imul
sbb
jae
jno
xchg
push
daa
scas
stos
pusha
and
mov
or
and
cli
je
sub
mov
inc
scas
push
add
pop
sub
test
add
pushf
aaa
aaa
enter
or
jecxz
mov
pusha
jle
cmp
lret
adcb
lods
and
cmp
inc
cld
lahf
leave
jo
cmpsb
test
xor
dec
dec
push
cmp
xor
into
jbe
adc
stc
inc
daa
adc
int
sbb
or
pushf
shl
popa
sti
aas
outsl
jno
and
jns
repz
in
jmp
or
dec
imul
je
bound
leave
mov
inc
cli
xor
pop
adc
or
cmp
push
mov
sbb
mov
mov
fists
jmp
and
lods
std
cmp
sub
cs
sub
xor
pop
mov
mov
and
out
push
cli
aam
scas
testl
pop
push
sahf
ljmp
sub
mov
xor
cs
or
je
push
fdivrp
sbb
jge
in
xchg
pop
mov
lret
dec
fs
dec
outsl
push
mov
push
enter
cmp
xchg
cmp
aam
push
rorb
push
mov
sbb
mov
sbb
loop
rcrl
mov
lahf
adc
xchg
mov
pop
cmp
push
mov
into
lods
aad
mov
cli
fidivs
push
mov
add
into
cmp
mov
or
stos
lods
adc
cmp
dec
mov
xchg
ja
loopne
cmc
es
sarb
dec
scas
loop
cwtl
mov
add
jb
cmp
das
or
lahf
fmul
mov
dec
adc
outsb
sbb
mov
mov
and
scas
inc
cmpsl
pop
mov
and
mov
dec
sub
add
mov
pop
test
or
push
jg
push
hlt
xlat
cmp
out
pop
push
dec
daa
jmp
loope
cli
push
or
add
into
hlt
testb
aaa
jne
add
pusha
js
scas
mov
shrb
adc
mov
imul
adc
cmp
xchg
mov
ja
or
mov
mov
or
sbb
add
push
adc
fcoml
pop
sbbl
gs
or
std
pop
rorb
cmp
faddl
loopne
js
mov
movsb
xchg
dec
ss
outsb
jcxz
dec
mov
mov
mov
dec
mull
jb
popa
add
mov
inc
and
or
into
pop
icebp
sub
dec
dec
inc
pop
loopne
movsb
fstl
stos
lea
push
xor
hlt
lret
jmp
and
ds
pop
icebp
imul
mov
imul
mov
jmp
push
imul
sahf
cli
mov
addl
popa
xchg
mov
ffree
sub
shlb
or
xchg
mov
mov
rcl
push
shr
mov
jae
and
mov
std
pop
in
ja
pop
int
xchg
jecxz
dec
arpl
fcomps
sti
idivl
inc
in
imul
fistl
std
xor
sbb
sub
call
test
add
or
sub
fbld
dec
repnz
and
jge
fiaddl
enter
rcr
rcll
jp
pop
stos
xor
add
push
and
push
in
in
jge
or
int3
int3
fnstcw
push
loopne
pop
pop
jo
insl
call
push
outsl
pushf
or
adc
roll
xchg
icebp
inc
jle
pop
pop
enter
cmp
mov
push
ja
rcrb
and
push
fisttpll
jle
test
pop
cmp
cmp
mov
mov
loop
and
mov
jge
xorl
insb
je
ret
rolb
mov
xor
ret
cmp
push
scas
mov
and
xchg
pop
dec
ds
pop
and
xchg
repnz
pop
psllq
daa
.byte
pop
and
.byte
adc
cmp
nop
add
add
cmpsl
dec
hlt
adc
pushf
mov
push
loope
jge
lock
test
add
js
gs
jo
out
stos
inc
and
in
cld
insb
popa
push
fwait
mov
and
mov
inc
mov
imul
aaa
rorl
dec
pop
leave
inc
les
push
jg
mov
std
ds
add
into
scas
pop
sahf
pop
cltd
mov
fdivs
cmpb
push
fs
add
mov
pop
aad
jae
or
outsb
mov
rclb
lret
test
ret
cld
ds
push
adc
dec
lahf
dec
cmp
outsb
add
inc
sbb
push
arpl
movsb
into
pop
aad
data16
adc
inc
dec
dec
or
mov
dec
addr16
enter
cwtl
stc
ds
call
push
mov
mov
mov
push
pop
cmpsb
out
cmp
mov
mov
ficompl
iret
sbb
mov
xor
jg
and
xor
push
lods
pop
out
out
mov
push
std
inc
iret
or
loop
fyl2x
xlat
clc
fnsave
scas
ds
xlat
jl,pt
in
dec
idivl
mov
out
push
in
frndint
xor
orl
fnstcw
cmp
leave
adc
sbb
neg
xchg
xchg
aas
arpl
push
pop
scas
xlat
ss
movsl
cwtl
or
xchg
js
notl
pop
or
inc
jle
add
movsb
icebp
les
stos
movsl
jbe
call
stos
push
insl
push
xor
arpl
adc
jle
jl
insb
mov
cltd
fsubr
cli
push
xor
jecxz
xchg
sbb
push
or
xchg
add
xor
das
mov
aad
pop
jb
cmp
fdivl
inc
loop
or
.byte
add
add
out
nop
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
out
nop
add
add
add
add
mov
add
addb
add
out
nop
add
add
add
add
add
add
enter
add
add
loopne
add
out
nop
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
out
nop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
out
nop
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
out
nop
add
add
add
add
mov
add
addb
add
out
nop
add
add
add
add
add
add
addb
add
add
out
nop
add
add
add
add
add
add
cwtl
add
add
add
add
fcoml
add
add
add
add
test
add
add
add
out
nop
add
add
add
add
add
add
mov
add
add
fcoml
add
add
add
add
enter
add
add
out
nop
add
add
add
add
add
add
fadds
add
add
add
fcoml
add
add
add
add
call
add
add
fcoml
add
add
add
add
clc
add
add
add
add
fcoml
add
add
add
add
or
add
out
nop
add
add
add
add
add
add
sbb
add
out
nop
add
add
add
add
add
add
sub
add
out
nop
add
add
add
add
add
add
cmp
add
out
nop
add
add
add
add
add
add
dec
add
add
out
nop
add
add
add
add
add
add
pop
add
add
out
nop
add
add
add
add
add
add
push
add
add
fcoml
add
add
add
add
js
add
add
add
out
nop
add
add
add
add
or
add
add
add
fcoml
add
add
add
add
add
add
add
fcoml
add
add
add
add
add
add
add
fcoml
add
add
add
add
add
add
add
fcoml
add
add
add
add
add
add
add
out
nop
add
add
add
add
or
add
add
add
out
nop
add
add
add
add
or
add
add
add
out
nop
add
add
add
add
or
add
add
add
out
nop
add
add
add
add
or
add
push
add
add
add
out
nop
add
add
add
add
or
add
push
add
add
add
out
nop
add
add
add
add
or
add
push
add
add
add
out
nop
add
add
add
add
or
add
push
add
add
add
out
nop
add
add
add
add
or
add
add
add
add
out
nop
add
add
add
add
or
add
add
add
add
out
nop
add
add
add
add
add
add
push
add
add
fcoml
add
add
add
add
js
add
mov
add
in
add
add
add
jo
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
jle
add
add
add
add
push
push
add
add
in
add
add
add
int3
push
push
add
add
in
add
add
add
lock
push
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
push
push
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
adc
add
add
add
add
add
add
add
push
push
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
and
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
popf
push
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
mov
sub
enter
mov
ljmp
push
dec
ss
lahf
test
jle
and
movsl
mov
orb
mov
sbb
repnz
std
mov
pop
aaa
imul
in
cmp
push
outsb
call
add
fdivr
imul
insl
clc
sub
outsl
xorb
arpl
mov
nop
sub
jecxz
in
adc
xor
xchg
insb
mov
sub
je
mov
outsl
aam
jecxz
or
mov
push
imulb
ja
xchg
test
jl
bound
inc
lods
xchg
rcrb
lahf
mov
fimuls
xor
and
sbb
cmp
mov
in
cld
cmp
sub
push
jno
jecxz
loop
imul
stos
out
bound
inc
xor
dec
sbb
jnp
adc
clc
xchg
mov
mov
nop
es
jbe
fdivrl
sbb
sbb
adc
jo
dec
lea
dec
xor
adc
dec
push
adc
xchg
hlt
fwait
fs
aad
ss
leave
xchg
xlat
inc
or
cmp
jno
xchg
shr
out
addr16
or
in
pop
stos
adc
in
mov
aam
sbbl
daa
push
stos
adc
hlt
cmp
cmp
mov
ljmp
mov
icebp
insl
popa
pop
stos
orl
shll
test
inc
movsl
jns
push
pop
jp
fiaddl
cs
sbb
pop
cmp
addr16
into
mov
push
jge
pop
sub
dec
pop
mov
fcmovbe
les
hlt
xchg
int
mov
dec
jmp
mov
inc
movsb
pop
dec
fldenv
lods
imul
and
mov
sbb
jnp
hlt
mov
push
jnp
xor
and
ret
lret
and
cmp
fldl
in
orb
mov
pop
lcall
inc
dec
add
scas
daa
icebp
jle
in
mov
das
fmul
shrl
or
pop
mov
xchg
mov
mov
push
or
aas
leave
mov
push
mov
aam
nop
pop
sti
push
psubusw
dec
pop
mov
mov
dec
fbld
pop
dec
cmp
ja
into
pop
insb
mov
adc
mov
daa
sub
adc
popl
lods
arpl
outsl
xor
jl
shrd
mov
push
adc
xor
rcl
jne
int3
adc
test
mov
jge
cmp
insb
loope
jl
xchg
gs
mov
daa
sbb
xor
inc
test
ret
test
and
aam
js
ds
pop
imul
dec
mov
pushf
pop
pop
push
mov
adc
ss
inc
inc
pop
int
xlat
int3
in
cmp
js
shlb
adc
mov
fisttpll
and
pusha
mov
les
dec
dec
dec
rcl
or
aad
push
xchg
jne
imul
in
pop
sbb
adc
sti
imul
sbb
stc
and
les
insl
mov
inc
leave
jg
test
ds
inc
sbb
ffree
inc
cmpsl
jge
push
jl
bound
stos
fwait
std
and
cmpsl
cmp
ficompl
out
scas
push
daa
test
add
popf
push
imul
aaa
xchg
adc
out
int
scas
push
dec
mov
lock
addr16
and
or
std
pop
and
adc
nop
ljmp
aad
arpl
inc
scas
lret
xchg
mov
inc
pop
sahf
sbb
lret
jle
mov
mov
sbb
lods
lcall
jmp
adc
add
in
movsb
movsl
pop
fisttpl
int
mov
adc
mov
fistpl
sbb
xchg
pushf
rclb
push
lds
loop
shr
ret
push
rclb
negl
sar
cmp
jne
pop
fisttps
js
fidivl
cmp
ror
mov
add
popf
enter
sbb
xor
ljmp
jecxz
js
mov
push
xor
bound
aad
cmp
cli
sbb
cmpsb
repz
pop
int
add
inc
fucom
jnp
jbe
iret
mov
fdivrs
fcomps
push
jp
jne
imul
pop
dec
stc
add
stos
sub
push
cmc
dec
mov
push
loopne
or
jno
imulb
sbb
fcmove
repz
xchg
add
xor
jl
hlt
mov
lcall
cmpsb
cmp
cmc
push
push
add
cmc
in
sub
scas
adc
mov
popl
loop
mov
mov
xor
mov
in
lcall
jb
sbb
and
rolb
mov
imul
push
ficoml
sub
push
pop
lea
lahf
jbe
mov
mov
cmp
adc
addr16
jmp
mov
insl
xchg
nop
add
ret
ftst
je
mov
mov
and
stos
inc
loopne
cmp
lea
jo
mov
hlt
loopne
xor
jnp
cs
repz
push
jle
jo
sbb
adc
xor
nop
and
movb
test
sub
and
movsb
enter
mov
in
mov
xor
lahf
andb
insb
shl
sqrtps
out
daa
sbb
rorb
and
xchg
sub
fldenv
ret
aad
stos
push
in
sarl
add
int3
leave
decb
jnp
test
xlat
popl
and
push
xor
sub
mov
dec
sbb
shrl
andl
push
ljmp
mov
push
stos
xchg
adc
cmp
xchg
lahf
int
mov
pop
push
movsl
sub
cmp
out
adc
fs
jmp
mov
add
je
movsb
rorl
jno
push
and
sbb
sbb
dec
daa
mov
jb
into
inc
mov
out
add
pushw
lods
into
and
jne
mov
push
addb
cmc
int3
inc
sbb
cwtl
mov
js
jb
gs
add
or
xchg
mov
testl
mov
out
popa
outsb
outsb
imul
js
jp
push
stos
lods
mov
add
enter
das
into
fmul
xor
sbb
mov
cmp
sti
add
dec
push
int
shrb
in
adc
test
das
pop
sub
mov
jo
pop
js
or
sbb
das
push
mov
xchg
jl
in
es
xor
mov
sub
push
jo
std
repnz
imul
leave
movsb
add
nop
mov
jbe
jg
out
imul
and
sbb
imul
test
push
pop
push
test
and
push
clc
xor
jbe
mov
dec
repnz
pop
xchg
sbb
mov
jno
fwait
mov
shlb
dec
fstps
out
dec
sbb
jecxz
insb
add
mov
jmp
sar
xchg
mov
mov
in
sbb
clc
sub
xchg
fidivrl
mov
imul
inc
mov
fbstp
test
cmpl
cmpsl
aam
movsl
xchg
inc
incl
adc
popl
in
js
dec
and
dec
sbb
sbb
mov
xchg
mov
jae
dec
mov
jl
add
iret
lea
and
jae
pop
ret
cmp
lods
jge
out
mov
loope
loopne
sbb
in
xchg
adc
jmp
movsl
cmp
or
orb
fdivrl
imul
out
pop
cmp
iret
in
int3
mov
clc
add
jecxz
xor
stos
jp
add
xchg
push
add
push
sbb
mov
out
jge
mov
loope
cmp
jge
js
xchg
push
fs
repz
scas
mov
mov
adc
or
push
orb
addl
inc
jp
popa
scas
inc
ret
lret
outsb
test
popa
leave
mov
aam
xchg
ljmp
xchg
pop
xchg
dec
shl
xchg
adc
lea
xchg
jbe
and
mov
jae
jmp
sbb
push
push
out
add
jns
mov
icebp
inc
pop
enter
into
cmp
jmp
and
aaa
mov
dec
fdivr
inc
sub
jg
sbb
popf
adc
lods
xor
insl
inc
sbb
loopne
push
cmp
lods
mov
mov
sub
jne
jae
mov
test
loope
cmp
sarl
xor
mov
inc
or
push
adc
jl
or
dec
dec
cmp
loop
dec
and
sbb
cmp
out
jns
add
mov
call
adc
dec
jl
pop
fldlg2
push
adc
add
fldenv
xchg
lcall
pop
and
mov
push
or
sbb
stc
cmp
lods
outsl
jecxz
repz
push
pop
fcmove
sbb
popa
mov
adc
sbb
out
xor
jns
mov
call
xlat
fistpll
pop
pop
shrb
xchg
shrd
psubq
ss
mov
add
mov
aam
insb
inc
jbe
fisubrs
or
daa
cmp
daa
xor
and
sbb
cmc
rolb
sti
dec
insb
enter
int3
xor
rorb
push
sub
push
mov
lock
or
xchg
stc
scas
push
dec
incl
mov
fadd
movsl
imul
mov
bound
xchg
fstps
jns
or
mov
mov
push
mov
xor
cmpsb
rcl
xchg
imul
inc
enter
rorb
mov
dec
mov
mov
mov
inc
pop
dec
dec
and
adcl
sub
push
lea
mov
clc
inc
aam
xor
mov
pop
sub
sbb
mov
sahf
adc
pop
sbb
xor
into
les
dec
pushf
in
xor
repnz
ljmp
push
add
aaa
adc
xchg
adc
push
add
pop
jp
or
loop
pop
lcall
jl
add
movsl
dec
adc
gs
lret
and
push
or
ret
adc
test
popf
jae
pcmpeqb
mov
lods
push
mov
js
sti
lret
jge
cmp
mov
cmp
rclb
inc
pop
sti
adc
and
int3
mov
adc
in
std
lcall
je
dec
mov
into
mov
fs
mov
test
mov
cld
xchg
mov
xor
fbstp
mov
roll
xor
fs
stc
mov
dec
std
pop
call
push
mov
push
sub
jmp
aad
inc
adc
and
ss
mov
xor
or
pop
enter
jo
jl
and
sub
popa
test
ds
push
jl
sub
gs
fsubrl
std
frstor
iret
and
ljmp
cmp
cmp
add
cmc
mov
imul
repnz
sbb
out
in
cwtl
ds
dec
ja
inc
pushf
loope
cmp
dec
fwait
jne
outsl
in
pop
jns
jns
xchg
or
flds
push
xor
and
mov
xor
sbb
or
mov
movd
sub
popf
push
cmp
sub
inc
andb
iret
xor
add
data16
loope
push
xchg
xchg
out
and
sbb
sarb
lods
xchg
andb
pop
cltd
mov
repnz
dec
jmp
pushf
pusha
dec
or
sub
pop
pop
sbb
cmp
test
repz
nop
mov
arpl
dec
mov
or
adcb
scas
call
cli
adc
loopne
aaa
fwait
push
push
jmp
and
in
iret
mov
push
ss
xor
mov
in
addr16
xchg
xchg
push
and
mov
jb
push
xchg
inc
push
inc
pop
pop
ret
lret
xchg
dec
js
xchg
jo
in
push
jno
mov
cmpsl
xchg
mulb
bound
movsl
push
loope
jecxz
cwtl
scas
or
sub
add
scas
sbb
leave
mov
jmp
test
out
sbb
sub
in
mov
out
fistpll
jg,pt
daa
xor
jb
mov
mov
movsb
std
pop
mov
sbb
lods
test
inc
shl
daa
jbe
and
jae
mov
loopne
or
mov
ret
add
mov
in
rcll
push
in
sbb
lahf
lds
inc
push
fadds
js
rorb
loopne
xchg
and
cltd
dec
sbbb
ret
dec
or
std
push
int3
ja
mov
fimuls
sbb
repz
jno
pop
lret
dec
mov
dec
lret
mov
cmp
inc
adcl
cmpsb
test
add
int3
lret
jl
das
mov
lcall
mov
xchg
push
mov
rcl
es
icebp
lock
jmp
xor
cmpsl
stc
push
outsb
test
jecxz
cmp
inc
jle
push
scas
mov
hlt
pop
xorb
mov
or
sbb
dec
sbb
outsl
test
xchg
jbe,pt
in
popf
pop
sahf
add
inc
out
pusha
call
push
addr16
pop
inc
cwtl
in
shrb
mov
pop
xchg
inc
add
cmpl
aam
std
lods
fwait
outsb
and
sub
insb
or
js
scas
dec
push
pop
cmp
sarl
jne
mov
lahf
lcall
pushl
sbb
xlat
gs
and
lret
pop
mov
jne,pt
lret
out
pop
outsb
push
scas
movsb
fwait
pop
add
ljmp
jge
test
push
jg
pop
ljmp
mov
inc
inc
cld
mov
jge
xor
movsl
aad
js
imulb
movsb
xchg
ret
jl
sbb
out
mov
enter
xchg
push
inc
jne
jg
aam
loop
mov
sbb
incl
or
sub
cmpsl
push
incb
inc
aaa
jp
and
pminub
sbb
push
or
lea
push
push
push
daa
ficoms
fistl
push
sti
xor
and
je
lcall
xor
push
repz
lea
or
addr16
pop
cmp
ja
xor
int3
and
or
jae
lds
mov
test
daa
pop
sbb
sbb
ljmp
sbb
imul
sbb
push
mov
outsb
mov
mov
insb
ret
adc
mov
mov
sbb
lods
xlat
or
fnsave
sbb
leave
hlt
lcall
cmpsb
in
sub
outsb
pop
pop
push
push
into
hlt
ret
mov
lcall
inc
xchg
std
fimull
add
mov
pop
fidivrs
jmp
cmp
push
lret
or
out
xchg
or
xor
out
mov
pop
testl
repz
xlat
outsb
push
lcall
in
sahf
pop
inc
cwtl
in
out
dec
jae
mov
add
inc
lods
scas
xor
leave
sbb
adc
loop
into
mov
mov
dec
popf
in
test
push
lds
out
pop
loop
xorl
mov
cmc
stc
fmull
movsb
sbbl
cmp
insb
or
ss
sub
inc
in
cmp
call
loope
iret
push
stc
mov
lret
mov
iret
imul
ds
dec
sti
or
jbe
pop
js
add
jns
jl
sbb
cs
test
and
sbb
inc
mov
pop
jno
xor
hlt
test
pop
dec
or
outsl
out
mov
sarl
inc
cwtl
pop
cli
rcll
ja
mov
shl
movsl
push
sub
push
xchg
mov
pop
sti
es
mov
std
push
arpl
clc
add
dec
loope
pop
xchg
mov
xorb
loop
popa
push
xor
imul
push
push
adc
aam
in
ret
and
xor
pop
test
mov
add
cmp
add
cld
imul
popa
addl
push
in
mov
pop
popf
test
popf
pop
in
dec
lcall
inc
stos
push
inc
mov
mov
out
orb
add
lahf
movb
psrlq
stos
into
adc
lods
fisubrl
mov
sbb
inc
cmc
adc
adc
add
pop
sbb
mov
shrl
or
xlat
xor
inc
popf
cwtl
pop
rcr
or
jmp
jne
js
fldcw
cltd
sub
mov
icebp
popf
addr16
cmp
cmp
dec
rorl
andb
das
mov
in
jne
mov
adc
sbb
xor
jg
aaa
out
jne
popa
shlb
push
mov
sub
jns
adc
mov
add
cmp
mov
arpl
or
pop
or
inc
ss
sarl
sbb
cmpsl
xchg
aad
pop
ret
rcr
push
cmp
sbb
xchg
fsubr
jno
shrl
dec
lea
imul
add
inc
xchg
rolb
js
sti
pop
cmc
loope
lea
cltd
fcoml
out
dec
push
js
clc
aaa
mov
adc
lret
or
push
iret
mov
arpl
add
or
sarb
pop
add
mov
sub
fwait
xchg
xor
sub
jg,pn
out
inc
pop
cmp
jge
call
jae
lds
jne
dec
push
leave
cmpsb
stos
xor
mov
lahf
mov
push
data16
mov
cmc
dec
daa
and
fisttpl
cmp
enter
push
mov
inc
js
sub
jo
xor
out
shlb
inc
xchg
add
and
push
mov
xchg
fistpll
and
pop
jbe
jbe
arpl
cmp
push
movsl
mov
pushf
aas
test
jb
pop
inc
xchg
lock
aam
pop
inc
xor
out
test
sub
fcomps
jecxz
das
sub
jl
mov
idiv
mov
sbb
inc
in
inc
inc
mov
cltd
ret
lcall
outsb
or
nop
gs
xchg
test
rorl
call
test
sub
mov
pop
mov
push
add
cmp
sbb
scas
xlat
lods
cs
mov
je
aaa
xor
shl
lcall
aas
notl
mov
sub
xchg
push
push
mov
out
jnp
jne
cmpsb
xor
js
mov
mov
es
jp
fldcw
sub
out
dec
insl
xor
mov
test
dec
mov
fdivl
cwtl
mov
fbstp
inc
pushf
cwtl
xor
pop
ret
inc
repz
sub
mov
add
inc
pop
jg
aas
xlat
jo
mov
negl
push
jno
cld
and
loop
decb
or
subl
jae
jge
sbb
addr16
push
ret
jno
jae
sub
xchg
loop
and
cmp
inc
daa
mov
push
xor
dec
in
push
stos
adc
fcompl
jl
jg
mov
mov
jle
sbb
push
test
popa
notb
out
xor
addb
orb
mov
mov
std
js
jae
js
out
cwtl
pop
out
and
fistl
in
pop
push
sbb
mov
in
xchg
mov
outsb
loope
mov
jnp
js
ret
mov
int3
sar
lret
mov
mov
stc
push
lods
gs
sbb
dec
mov
pop
inc
sbb
push
sbb
iret
and
imul
mov
jb
sbb
mov
sbb
add
inc
xor
push
lret
inc
cs
ljmp
push
lds
repz
sub
pop
sti
add
mov
push
idivl
clc
std
in
xchg
and
push
push
jnp
shll
fildll
mov
pop
pop
std
push
add
add
dec
bnd
ss
adcl
pusha
cmp
je
addb
daa
leave
or
sbb
push
lds
icebp
dec
insl
push
int
cwtl
loop
inc
push
movsl
pop
or
fsubrp
inc
push
fnstcw
and
and
test
jl
fisubrl
dec
pop
cmpsl
lods
add
add
or
sbb
add
mov
stos
out
sub
shll
xchg
and
add
out
sub
aaa
xor
cmp
ljmp
sbb
cltd
and
adc
jae
fmul
lcall
adc
xchg
mov
in
push
inc
mov
push
aaa
sbb
mov
aam
js
pusha
xor
cltd
sarb
shll
cwtl
jo
cli
rclb
stos
and
shlb
push
loopne
fisubs
scas
je
mov
jp
push
int
adc
mov
push
int3
ret
or
std
pop
scas
xor
sahf
cmp
add
pop
out
stos
fsubrs
enter
and
adc
mov
pop
sub
inc
adc
lea
mov
inc
push
mov
mov
int3
inc
sbb
aam
imul
out
out
sbb
lods
xorl
pop
sub
add
jne
out
and
lret
xchg
mov
sbb
les
popa
dec
into
fcomip
cmp
jg
inc
push
lcall
inc
mov
fnstsw
cmp
les
jbe
sub
jne
cmpsb
lret
fisubl
shl
sbb
jb
adc
jge
adc
shrd
cmp
mov
cld
out
pop
out
lea
dec
pop
rcrb
push
imul
jecxz
pop
ss
lock
mov
inc
or
push
xor
jmp
lret
mov
stos
iret
mov
ljmp
jne
int
jno
sub
xchg
and
sub
cmp
fs
out
add
xor
cmpb
subl
inc
rcll
test
cld
repz
mov
into
addr16
pop
inc
shl
pusha
test
xchg
clc
inc
and
mov
adc
in
push
inc
mov
and
imul
mov
and
mov
jl
xchg
jge
push
mov
repz
rolb
iret
adc
movsb
pop
enter
enter
xor
call
movl
jp
push
jg
fs
out
adc
sti
sti
lcall
jbe
sub
fistl
insb
pop
nop
or
cld
call
fiadds
in
icebp
xchg
jo
pop
push
cmpb
dec
notb
xlat
pop
fsubs
daa
out
test
imul
mov
sub
incb
cmpsb
and
push
shr
push
stc
orb
loopne
adc
and
ret
lods
mov
mov
adc
pop
leave
push
lods
add
pop
push
sbb
inc
stos
jnp
mov
sub
popa
jge
adc
mov
outsl
dec
inc
nop
lods
ja,pt
jecxz
pop
push
mov
cmpsb
out
hlt
cld
mov
or
fistl
xor
outsb
or
push
aas
daa
xchg
cld
ds
dec
loope
and
mov
ja
adc
push
jno
cli
push
cmp
pop
addr16
insb
fstpt
add
pop
push
cmp
and
dec
adc
dec
lcall
mov
add
fcmovne
dec
cmp
aaa
jp
fstps
aaa
add
xchg
mov
int3
loopne
mov
dec
pusha
es
mov
aam
xlat
add
cmp
dec
sahf
out
out
jmp
cli
adc
aas
xor
subl
adc
icebp
mov
ds
cmp
stos
lods
js
inc
cld
mov
xor
mov
ret
fdivl
and
icebp
cmpsb
std
insb
pushf
add
es
adc
add
out
dec
aam
xlat
hlt
cmpsl
ret
push
out
lcall
push
je
xchg
pop
mov
pusha
ljmp
test
out
loop
enter
mov
or
rcr
inc
repz
decb
fstl
dec
jb
fdivs
adc
dec
mov
add
aaa
add
xor
jp
rcll
mov
sub
int3
loopne
or
adc
jg
pushf
icebp
cmpl
jo
add
mov
cwtl
add
shrb
cltd
xor
popf
addr16
mov
out
stos
mov
jecxz
sbb
data16
iret
outsb
jno
xor
or
enter
push
push
or
xchg
cmp
mov
fnstsw
push
adc
lds
hlt
jno
push
or
sbb
mov
aad
enter
pop
mov
out
jb
test
lahf
dec
out
pop
cmp
mov
loope
xchg
imul
pop
clc
dec
les
xor
jbe
pop
pop
test
rcl
cltd
cmp
pusha
aam
xchg
movsl
cmpsl
addr16
std
fdivrp
daa
jne
js
xchg
pushf
mov
cmp
cltd
ja
mov
inc
add
pop
in
clc
jbe
shlb
push
aad
push
adc
daa
mov
pop
and
sbb
out
sub
inc
fidivl
int3
xchg
aam
xor
fwait
pop
dec
js
lcall
ds
sbb
jne
scas
jg
add
movsl
mov
stc
sbb
das
xchg
xor
and
push
xor
pop
add
inc
add
pop
fsubrl
iret
mov
fdivr
mov
inc
iret
nop
cltd
mov
inc
cwtl
push
lcall
not
add
fdivrl
cmp
xchg
cmp
es
mov
cld
scas
mov
and
pop
inc
loopne
jl
fistps
out
dec
out
pop
lds
or
push
mov
ja
rorl
dec
add
bound
roll
lods
or
es
es
aas
jbe
in
sarb
cmp
xchg
cmp
into
in
aam
mov
dec
clc
pop
xor
adc
mov
jge
and
mov
enter
aaa
lods
dec
mov
mov
xor
ss
inc
xor
jp
popf
pop
jbe
test
sub
jno
inc
lcall
sbb
insb
arpl
xchg
push
stos
xchg
jge
leave
js
lcall
jns
push
addr16
lcall
xchg
enter
inc
ror
mov
mov
les
mov
mov
pop
push
movsb
sub
loopne
js
add
test
adc
dec
mov
lret
loope
dec
stos
cmpsl
rcl
jl
cmp
jmp
in
lret
mov
mov
jns
add
lret
mov
xchg
mov
hlt
daa
sub
repnz
lock
mov
int
lcall
or
shrb
push
dec
pop
dec
flds
fdivrl
jp
aaa
cmp
sar
lahf
adc
mov
cmp
test
sbb
sub
repnz
jae
fildl
sub
fs
cld
push
in
jp
and
push
dec
adc
cmpsb
scas
loopne
xor
xor
xor
sub
or
hlt
fisubl
mov
cli
add
xor
push
aaa
rol
mov
pop
xor
lahf
data16
sti
movsl
pop
push
out
out
mov
std
lods
sub
andb
stos
sbb
cmc
popf
hlt
pushf
xor
sbb
mov
sbb
xchg
hlt
jl
hlt
mov
push
data16
and
jae
xchg
jmp
mov
ret
test
lods
movsl
jmp
loope
test
adc
cmp
inc
add
lret
xchg
cli
imul
jne
sbb
outsl
call
idiv
testl
in
jp
andb
xchg
sbb
aas
roll
adc
andl
loope
jecxz
jge
xchg
cmp
pop
xor
sub
shrb
bound
add
movsb
mov
add
addr16
dec
mov
rorl
aam
mov
or
cmp
push
mov
pusha
adc
in
jp
stos
call
jno
int3
dec
xchg
jb
lods
mov
cmp
inc
ss
cmc
mov
ficoms
add
jns
mov
loopne
cmp
xor
sti
fs
into
mov
dec
cmp
adc
ljmp
sub
ja
addl
imul
xor
scas
outsl
dec
rol
pop
cmp
sub
pop
lea
mov
sarb
mov
and
fwait
fnsave
fistpl
add
jle
nop
scas
nop
les
mov
sti
dec
mov
loopne
mov
sbb
xchg
push
dec
xchg
xchg
xor
add
adc
movsb
clc
ret
mov
dec
into
movsl
rclb
add
movsb
int
pop
popa
xchg
sub
or
adc
inc
jne
jge
inc
dec
sbb
and
xchg
clc
out
xor
test
loop
cmp
adc
pop
mov
in
xor
cmp
out
mov
push
adc
test
jae
mov
cld
ljmp
adc
and
push
sub
or
lret
stos
leave
sarl
mov
mov
lcall
popf
not
xor
mov
enter
mov
sarl
mov
repz
mov
pop
cmp
popf
dec
xchg
adc
mov
pop
jecxz
insb
sahf
xorb
inc
imul
notb
mov
out
dec
or
cmp
mov
fisubl
lcall
loopw
xor
and
cwtl
push
int
mov
loope
dec
stos
add
add
lahf
and
push
xchg
in
sahf
push
mov
das
sti
mov
cld
cmp
or
cld
cltd
cmp
jecxz
pop
call
pushl
inc
adc
dec
jle
mov
and
mov
or
hlt
mov
je
mov
lds
xlat
cmp
lret
jnp,pt
cmpsb
adc
inc
adc
sbb
ja
repz
jb
mov
jne
in
lret
in
loop
jns
stc
and
or
movsb
add
rcrl
fisubl
jae
mov
ds
adc
jle
add
or
mov
push
mov
stos
mov
and
fldt
fwait
outsb
cmp
mov
test
push
scas
imul
mov
cmp
addr16
incb
mov
out
jp
cltd
push
lcall
and
push
outsb
lahf
push
push
sub
lea
scas
sbb
mov
mov
pop
test
imul
mov
inc
pop
jg
lods
movb
scas
sub
movsb
fs
xor
leave
into
jo
push
and
rorb
enter
adc
lret
xchg
call
je
repz
testl
xchg
test
mov
into
mov
mov
sarl
xchg
arpl
rcrl
ds
or
ja
ret
fnstcw
adc
lret
ljmp
stos
jae
fwait
xchg
insb
jge
fmulp
push
push
push
cmpsb
movsb
cmp
xchg
sub
ds
insb
sbb
sbb
arpl
push
scas
test
mov
jb
pop
mov
and
inc
adc
pop
stos
mov
xchg
and
iret
or
cmp
sbb
push
aad
aas
add
mov
idivl
sub
mov
movsb
dec
call
in
mov
std
sar
fisttpl
mov
jle
mov
imull
sti
or
inc
pop
lea
cli
add
xor
inc
ss
mov
cmpsb
sahf
bound
in
aaa
cltd
xchg
into
fdivp
loop
xor
sub
xchg
push
push
insb
cs
addr16
fs
jb
pop
pop
call
cmp
or
das
inc
mov
push
and
aam
daa
out
mov
lods
xor
cmp
shl
jne
mov
int3
test
sub
xor
mov
stc
mov
data16
xlat
rcl
push
jg
sbb
xor
sub
sahf
mov
test
jp
mov
stos
push
add
sub
xor
je
and
jmp
and
outsl
cld
loopne
notb
js
add
mov
push
into
xchg
imul
and
push
nop
adc
xor
mov
jnp
cmp
xor
stc
ds
add
jge
test
pop
fsubrl
jmp
lds
dec
xchg
inc
popf
sbb
and
imul
cmp
or
add
imul
lret
jecxz
leave
add
sti
mov
add
push
xor
scas
popf
xor
movsl
or
xchg
imul
out
lock
fdivs
mov
test
dec
js
andl
xchg
pop
cmp
addr16
shll
xlat
push
rcrl
rolb
rcrl
jge
outsb
gs
sbb
sbb
xchg
insb
pop
into
fimull
xchg
int3
xor
rorb
out
dec
nop
insl
shrb
insb
iret
mov
mov
push
add
in
mov
xor
jecxz
test
sbb
xor
push
pop
sub
or
pop
jecxz
cmp
fnsave
adc
or
jb
push
ja
divl
add
lahf
mov
dec
cmp
inc
inc
sbb
dec
jp
cmp
mov
pop
daa
xor
and
shlb
dec
push
xchg
xor
bound
inc
rol
mov
cmpsb
andl
aaa
adc
sti
pop
pop
vunpcklpd
aas
icebp
xor
cmp
xchg
inc
call
cltd
faddl
pop
add
hlt
data16
pop
or
leave
pushf
pop
inc
jae
sbb
jmp
and
mov
lea
rcrl
das
or
flds
dec
add
sbb
sub
jle
mov
lret
insb
jl
out
inc
scas
add
adc
pop
push
imul
mov
sub
push
dec
sbb
das
xor
rcr
push
cs
aad
outsl
mov
cmp
lock
pop
sbb
scas
dec
mov
mov
mov
and
ljmp
repnz
pop
insb
pushf
lahf
js,pn
sub
push
adcb
jp
sbb
bound
xor
jl
sbb
cmc
and
mov
lahf
mov
pop
pop
testb
push
outsl
jecxz
in
js
mov
mov
push
mov
mov
scas
xorb
adc
mov
insl
pop
sahf
fwait
inc
loop
js
pop
mov
fldcw
mov
sub
xchg
lea
add
sar
cmc
push
jb
mov
xor
mov
adc
xchg
fsubs
std
and
ret
adc
movsb
test
xchg
dec
lret
orl
pop
aam
mov
fildl
data16
nop
std
mov
mov
jno
movsl
fdivrl
sub
in
dec
loope
add
cmpsl
sub
cmc
dec
mov
imul
das
push
scas
aas
mov
dec
xor
cmc
xor
loope
rclb
push
mov
int
ljmp
cmp
mov
outsl
xchg
fwait
aad
std
jnp
fsubr
jne
push
sub
ds
jo
mov
cmp
aas
cld
mov
mov
and
test
cmc
rolw
in
lock
dec
popf
sahf
cmp
test
jmp
jb
ja
and
sub
and
in
adc
repz
pop
int3
lock
adc
sahf
sti
movsb
add
xlat
lcall
inc
xor
and
pop
mov
push
je
daa
out
push
jle
cltd
and
cmpsl
lret
insb
fwait
jne
and
jg
sbb
dec
das
mov
hlt
adc
into
mov
clc
insb
arpl
movsl
out
xor
xchg
xchg
mov
dec
cli
ds
lods
xchg
cmp
dec
andb
cmpsb
add
addr16
or
adc
mov
insl
mov
adc
jae
pushf
cmp
inc
mov
test
jae
orl
sbb
out
loopne
loope
int
mov
lea
mov
xchg
dec
push
push
mov
adc
push
pushf
fyl2xp1
dec
mov
leave
lock
int
xor
or
cmc
sbb
cmp
jo
xorl
enter
fwait
leave
out
sbb
rcrl
jbe
cs
addb
dec
sub
stos
je
loope
aam
add
xor
pop
and
in
adc
pop
iret
sbb
data16
add
jmp
add
cmp
aam
mov
es
in
mov
cltd
or
add
outsb
or
sub
dec
xchg
mov
es
rcrl
or
xlat
inc
jno
hlt
fiadds
adc
or
jle
and
arpl
arpl
adc
jmp
int3
ret
jle
add
jo,pn
in
jg
sbb
xor
sahf
push
fdivrs
into
loop
cmpb
pushf
pop
jae
xchg
sti
and
push
mov
js
cwtl
dec
std
push
call
fstps
jg
insb
mov
xchg
mov
es
xchg
test
stos
out
cltd
stc
add
sub
icebp
loope
mov
mov
mov
imul
xor
pop
icebp
xlat
pop
iret
repnz
pusha
mov
cmp
lahf
sub
sbb
test
cmp
call
jnp
fcoml
sahf
out
sbb
sti
cli
xchg
stc
loop
cmpsb
leave
jmp
movsl
int
cmp
test
sbb
repnz
mov
movsl
sar
inc
hlt
sub
repnz
es
jmp
fs
jp
xlat
cmp
insl
inc
shrb
mov
data16
sarl
movsl
rcrl
jns
sti
gs
stc
mov
mov
test
jecxz
inc
push
pop
cmp
mov
add
dec
cmp
pop
aas
and
dec
pusha
push
mov
adc
cmp
push
lret
cld
jl
adc
adc
or
imul
mov
jae
nop
imul
fucomi
jns
pop
or
insl
pop
mov
or
sbb
in
loopne
sub
daa
fsub
daa
cmpsb
daa
arpl
dec
fisubl
sub
insl
xchg
mov
jns
imul
jbe
fsubl
or
nop
unpckhps
jg
cli
jecxz
in
mov
sbb
ss
jmp
adc
cmp
sarl
xor
imul
hlt
dec
call
sahf
mov
sub
lods
cmpps
mov
mov
loop
mov
mov
mov
push
jmp
fs
inc
pop
xchg
sub
loopne
cmpsl
dec
dec
mov
xor
out
pop
ljmp
mov
xchg
addr16
push
je
cmpsl
addb
scas
leave
mov
add
dec
cmpb
mov
push
pop
mov
sub
mov
fadds
xchg
push
stos
test
mov
in
gs
sbb
pushf
data16
into
test
mov
repz
mov
dec
add
sbb
cmp
shll
andb
sub
jl
lcall
leave
aas
and
dec
xor
shr
cmp
adc
loop
movsl
loop
inc
rep
cs
inc
mov
popf
push
xchg
xchg
sub
sub
lret
rorb
xor
shrb
cli
xor
fwait
ss
xchg
inc
lds
out
mov
add
mov
ja
pop
push
ljmp
mov
inc
push
cmp
ljmp
scas
pop
repz
sbb
dec
pop
push
inc
sub
pusha
loope
dec
mov
imul
fisttps
cmp
popa
int
cltd
scas
jnp
hlt
push
in
dec
cmp
dec
mov
sub
cmpsb
outsb
adcb
andb
es
adc
outsl
test
xchg
leave
cli
sbb
xor
mulb
fwait
xor
sti
or
nop
fidivl
cmp
jl
mov
mov
cmp
adc
out
fadds
sahf
pop
mov
in
fbstp
dec
shrl
push
aam
inc
pop
sarl
outsl
aaa
xchg
xchg
adc
test
push
mov
cmc
dec
daa
out
mov
mov
addl
xor
movsb
or
push
mov
aad
inc
arpl
sbb
cli
adc
ret
adc
icebp
lods
adc
out
cmp
dec
pop
lahf
sbb
fcmovnu
add
data16
int3
rolb
push
inc
push
test
cmpb
mov
popa
pop
jne
inc
jle
adcb
mov
sarb
sub
xchg
in
lret
mov
rcrl
fptan
lds
cmp
icebp
pop
jecxz
and
daa
aad
dec
pop
or
pop
xchg
into
push
jl
and
cmc
adc
lahf
mov
sub
outsb
adc
dec
cmp
xchg
dec
jb
out
mov
je
and
or
xor
cmp
inc
pop
test
ljmp
adc
xchg
das
test
xchg
inc
sbb
adc
and
dec
push
call
rcl
cld
sbb
pop
cmpsb
adc
jns
xor
iret
and
int3
push
add
adc
push
cmp
jmp
xor
fndisi(8087
adc
jp
outsl
mov
push
adc
jnp
sub
cmp
outsl
sub
add
pushf
cmp
pop
or
hlt
int3
enter
std
jmp
cmp
fcompl
fcoml
jecxz
lods
cmp
mov
and
out
add
mov
out
jbe
mov
inc
inc
inc
inc
test
and
in
stos
jae
roll
xor
xchg
js
lea
xchg
xchg
jle
out
cmp
repz
loope
mov
jo
sbb
push
and
push
add
stc
shr
lods
in
cmp
pop
mov
xor
push
shrl
mov
ss
rorb
in
or
gs
ss
scas
lahf
xor
fimull
mov
arpl
loopne
insl
cmp
movsl
dec
jae
ret
push
adc
cltd
imul
inc
and
or
pop
pop
push
inc
std
push
jbe
jne
dec
mov
mov
mov
int
inc
imul
inc
shll
push
cmp
adc
insl
adc
cmpsb
add
aam
dec
aad
ds
cltd
adc
cmp
cwtl
dec
lock
inc
or
push
dec
test
jnp
fists
sbb
mov
jbe
sti
movsb
xchg
and
test
xor
inc
lret
sbb
fisttpl
pop
jnp
je
aas
cmp
inc
sbb
rol
fs
insl
cltd
sbb
mov
sbb
sub
aad
cmpsb
xchg
stos
outsb
outsb
adc
inc
dec
adc
daa
or
sub
mov
scas
jmp
add
dec
je
mov
repz
rolb
mov
not
pop
mov
dec
shrl
jo
int3
imul
adcb
push
out
loopne
shrb
mov
jne
cmc
test
aam
pop
or
je
lods
in
xor
daa
ljmp
add
xchg
lds
int
enter
jmp
jp
shlb
cmc
lret
cmp
jae
cs
push
rcl
sub
mov
addr16
das
pop
mov
cmp
loopne
and
mov
gs
addr16
enter
xor
sahf
jno
add
fs
push
dec
adc
mov
jno
push
in
cs
pop
push
cmp
sbbb
add
mov
pop
addr16
cmp
shl
fstpl
std
or
loopne
jae
mov
outsb
sub
add
mov
repnz
fstpl
xchg
pusha
jbe
mov
popf
sub
push
es
jp
sub
insl
adc
leave
mov
and
testl
in
jnp
movl
cmp
cmp
aad
lret
inc
mov
pop
lcall
sbb
fwait
mov
call
hlt
add
pop
sbb
fwait
ret
push
sbb
push
movsb
or
pop
xchg
ljmp
js
inc
stos
hlt
mov
mov
push
movsl
push
xchg
scas
jecxz
jnp
out
ja
into
std
cmpb
xchg
test
mov
repnz
push
inc
cmpsb
jbe
pusha
add
jns
xchg
adc
div
inc
or
outsb
popf
inc
stos
lds
inc
repnz
scas
dec
movsb
cmp
movsb
lds
vmwrite
xor
and
pop
sti
out
jp
or
loopne
fsub
push
lcall
out
cmc
loopne
dec
xor
and
mov
inc
sar
xor
lds
jnp
mov
fisubl
ljmp
rcr
hlt
xor
pop
dec
jmp
jmp
mov
pop
ret
sub
dec
push
mov
stos
sbb
iret
data16
push
jmp
push
pushf
xlat
leave
mov
jecxz
cmp
fldcw
mov
adc
mov
std
jle
lods
jmp
movsb
adc
sub
mov
xchg
pop
mov
leave
mov
rclb
push
jae
and
sub
and
add
push
push
sbb
mulb
adc
push
dec
sbb
adc
dec
in
jb
mov
push
movsl
xchg
mov
dec
imull
mov
mov
rorb
xlat
cs
or
shl
std
and
pop
xor
mov
pop
ret
js
pop
cmpsl
pop
sarl
imul
and
inc
and
test
mov
mov
fst
push
insb
push
dec
sti
scas
imul
mov
lcall
pop
dec
cltd
call
sbb
xchg
inc
gs
dec
mov
inc
das
imul
mov
push
pop
popf
pop
shl
lods
das
sbb
xchg
mov
jle
xchg
sub
or
out
pop
sub
mov
push
pusha
mov
iret
cmp
xchg
lds
test
cwtl
stos
pop
dec
out
push
fisubrs
aam
push
in
sbb
test
jae
mov
call
fnstenv
enter
fs
out
push
scas
repnz
pop
mov
push
sti
pop
or
stos
xchg
dec
mov
lods
mov
lret
cmpsl
jmp
xor
subb
ficoml
aas
js
jns
or
lea
add
lret
sarb
jns
cmp
mov
ljmp
jg
dec
dec
sub
sub
subl
int3
pop
adc
enter
cmp
pop
add
ljmp
sub
pop
inc
mov
mov
out
and
adc
xor
pop
xchg
repz
lret
fstpt
lahf
mov
lea
pop
mov
cmp
cmpsb
outsb
addl
fucompp
mov
mov
loopne
xchg
mov
js
jmp
push
sub
add
push
addb
rolb
jle
adc
test
int
inc
pop
lods
cwtl
push
outsl
jp
mov
cmpsb
ficomps
or
popa
jo
jnp
pushf
dec
mov
mov
in
add
in
sub
mov
lahf
mov
loop
mov
cmp
sbb
inc
idivb
movsl
adc
cld
jns
push
mov
pop
out
fcoml
xchg
nop
xlat
arpl
gs
cmp
test
cltd
in
repnz
mov
jo
xor
test
loopne
fcomps
gs
fisttps
sbb
ret
clc
das
jb
mov
or
adc
pop
jnp
inc
push
rorb
dec
jno
in
mov
jb
fcoms
or
stc
std
jne
daa
mov
cwtl
bound
repz
gs
lds
jnp
cmp
pop
bound
xchg
sbb
movl
mov
pop
cmpsl
pop
leave
jp
call
test
std
insl
mov
mov
inc
aam
xorb
push
cmp
mov
mov
xor
pop
cmp
addl
jmp
divb
xor
pusha
lret
notl
cmpl
cmp
popf
and
cmc
imul
mov
fists
jmp
cmp
sbb
pop
incb
cs
mov
or
lret
icebp
pop
in
mov
data16
mov
dec
mov
sbbb
add
add
int3
fs
adc
push
cmp
cmpb
dec
jecxz
xchg
and
jno
ds
test
add
lcall
mov
repz
test
std
dec
or
cmp
scas
mov
xchg
shll
repz
push
jo
jp
jmp
fldcw
mov
iret
shl
lahf
into
cmpsl
popf
jmp
fadds
inc
cld
shr
test
cmpsb
push
pop
xchg
jp
jl
shll
subb
les
inc
xor
gs
mov
hlt
es
dec
sub
add
dec
sbb
test
sub
push
mov
scas
adc
jecxz
and
add
cmp
mov
push
cmpsb
out
fdivl
outsl
sub
mov
jb
insl
jge
add
sub
or
push
insl
scas
xchg
nop
adc
push
in
xor
loope
jae
jns
outsb
jo
add
roll
dec
sar
or
push
adc
icebp
dec
mov
mov
mov
cmp
mov
test
out
or
push
sbb
cltd
jne
mov
addr16
ljmp
ljmp
movq
add
dec
xor
jae
fs
loopne
dec
cmpl
xchg
jge
cmc
mov
cmp
in
pop
push
adc
lret
add
pop
sub
mov
aas
sbb
ret
mov
out
addr16
xchg
pop
and
sti
fwait
pushf
ss
xchg
into
push
xor
mov
insl
xor
aad
cmp
out
movsl
xor
fisubl
add
pop
dec
sahf
push
jae
cmc
popf
xchg
mov
pop
js
lock
psubsb
out
outsb
push
pop
dec
add
sub
jae
jbe
dec
test
pop
jge
push
or
jo
aam
inc
jo
imul
mov
and
test
hlt
add
icebp
xor
jo
and
addl
jbe
push
rorb
jl
lds
or
pop
and
rcll
mov
inc
inc
push
jp
inc
in
sub
jns
aas
stos
into
xchg
xchg
fcomps
lcall
shl
cld
in
cmp
flds
nop
nop
push
mov
xor
jle
das
adc
mov
inc
les
loope
test
lds
fnstsw
leave
push
rcr
cmp
cmpl
and
cmp
sub
sahf
sbb
sbb
shrl
ja
in
xor
push
pop
jnp
leave
out
into
bswap
sbb
pop
movsl
hlt
ss
ret
rcrl
pop
cli
nop
imul
in
adc
adc
mov
gs
sahf
loope
pop
sub
jno
push
push
int3
mov
lea
xchg
xchg
pop
loopne
fdivrl
adc
jo
push
or
imul
mov
dec
sub
xchg
pop
cli
add
sub
mov
mov
jecxz
and
sub
pusha
push
push
and
jle
shll
mov
in
inc
imul
movhps
mov
out
pop
into
xchg
and
xor
mov
xor
mov
jno
bound
dec
fstl
adc
int3
pop
nop
testb
sbb
jno
jmp
punpckldq
in
in
push
popl
aaa
and
adc
les
xchg
stos
jg
imul
pop
jnp
fwait
add
sub
adc
movsb
inc
in
pop
push
popa
mov
lret
cmp
bound
aaa
sarb
xlat
pop
fmul
pop
add
dec
adc
pushf
cltd
mov
dec
cmp
and
sbb
lret
js
mov
pop
and
stos
lahf
addr16
pop
adc
in
cmpsb
and
lret
lret
fwait
pushl
pmuludq
pusha
push
test
repnz
bound
aam
gs
cmp
lods
mov
adc
into
cltd
loop
mov
sarl
cmp
sarb
outsl
and
jns
loop
cmp
cli
scas
mov
or
aaa
or
push
jbe
and
xchg
mov
scas
push
dec
push
sub
data16
shrb
clc
and
mov
sbb
pop
je
call
jg
sub
shl
and
dec
jae
fldt
sbb
mov
sub
loopne
mov
jnp
sub
ss
mov
mov
mov
push
inc
xlat
movsl
scas
lods
aaa
mov
push
ja
enter
mov
fs
inc
inc
cltd
mov
lock
mov
add
xor
sbb
or
cmp
jnp
not
ja
movsb
cmpsl
lcall
divl
mov
aas
aad
push
dec
xchg
stos
aas
mov
mov
push
dec
cwtl
push
mov
sub
cld
dec
sbb
push
cmpsb
and
scas
out
lock
push
push
mov
lcall
test
frstor
es
mov
clc
adc
jl
stc
cmpsb
inc
clc
cmp
je
inc
and
pusha
pop
jp
and
and
in
sbb
mov
ret
dec
xor
push
xor
mov
out
sbb
stos
outsb
out
gs
pop
push
movsl
mov
jno
test
mov
push
dec
sbb
jl
nop
adc
out
pusha
xchg
mov
aad
pop
push
jne
pop
mov
inc
insl
inc
push
mov
hlt
inc
push
inc
in
or
dec
adc
movsb
imul
adc
push
popa
fcompp
fucomi
jle
cli
adc
dec
dec
jecxz
jle
loop
sub
sbb
icebp
mov
orl
ja
scas
cmp
insl
xor
loope
jb
cs
orb
repz
jae
mov
and
sbb
mov
jle
lea
inc
push
std
adc
mov
sub
sbb
jl
insb
mov
adc
ja
gs
ss
int
mov
push
mov
ljmp
movsb
or
pop
xchg
push
cmc
imul
outsl
xor
stc
push
lret
fildl
sub
jbe
pop
rolb
sbb
inc
sahf
inc
and
ds
test
xchg
stos
lcall
xor
outsl
aas
adc
popl
pop
sarl
ficompl
inc
mov
insb
jg
and
sub
movsb
imul
iret
jl
in
cmpb
ret
repnz
out
xchg
scas
mov
push
mov
ss
scas
fnsave
mov
add
repz
xchg
arpl
mov
inc
fs
scas
stc
sti
push
test
int
inc
lret
jp
aaa
icebp
cs
pop
leave
les
cld
lcall
leave
mov
cmp
mov
sahf
xchg
xchg
add
in
mov
fsub
jne
fbld
sbb
jae
sub
pop
inc
shlb
pop
jae
jge
xor
and
decl
xchg
xchg
outsb
mov
xor
popa
dec
sti
inc
lock
cmp
add
sbb
sbb
lret
dec
das
inc
mov
jp
mov
data16
xor
addb
or
movsb
dec
enter
pop
or
sub
push
and
jl
std
push
cmp
in
and
adc
xor
mov
xchg
and
jno
add
out
dec
adc
and
adc
cltd
xchg
loope
adc
out
fs
inc
xchg
fwait
lahf
push
mov
jl
add
mov
jecxz
cwtl
dec
or
or
xchg
fadds
fdivr
jecxz
into
bound
sti
cmp
mov
fsubs
ja
cltd
add
xchg
hlt
xchg
jge
aad
iret
lret
fs
dec
sarl
popf
mov
das
or
cltd
push
es
ror
shll
sub
lcall
test
adc
jno
rol
jle
jb
in
popf
outsb
add
lret
js
lret
ja
lcall
push
inc
mov
xlat
rorl
adc
stos
das
rcrl
nop
into
shrb
jge
and
inc
arpl
sbb
xchg
push
dec
xlat
inc
mov
les
inc
cmpsl
mov
mov
push
lods
rcr
or
aam
aam
scas
sub
jmp
lds
jns
mov
je
and
xchg
inc
sub
gs
fimuls
dec
lret
sub
scas
clc
or
int
neg
pop
cmp
sbb
sbb
mov
out
dec
fstpl
ret
xchg
jmp
cltd
in
adc
subb
inc
add
inc
aaa
dec
imul
add
imul
gs
push
push
das
jmp
inc
push
insl
or
insl
mov
inc
push
push
add
push
loope
popa
mov
push
icebp
xchg
movsb
ficoms
idivb
mov
in
pop
ret
sub
lea
int
inc
dec
mov
dec
push
mov
cld
mov
and
stos
adc
cwtl
jns
mov
lret
sub
jns
xor
mov
inc
les
popf
mov
jecxz
cmp
mov
cmp
cli
sbb
cmc
idivb
pop
or
mov
add
popf
sub
xor
cltd
pop
mov
push
xchg
in
fcompl
sub
arpl
xor
out
out
jns
inc
scas
push
sub
out
xchg
pop
enter
negb
std
or
xchg
jbe
cmp
pusha
enter
roll
les
jno
pop
int
imull
inc
mov
pop
adc
data16
push
rolb
inc
or
pop
xchg
loopne
mov
pushf
push
xor
mov
loop
cmpl
jle
nop
add
lret
cld
stos
jmp
enter
pop
inc
test
xchg
xor
mov
adc
or
shl
shl
cmc
mov
shrb
mov
push
add
jo
mov
jg
shll
xchg
inc
popa
xor
repz
jmp
loop
jl
sub
imul
pop
jecxz
cwtl
movsb
jle
leave
jecxz
and
jmp
call
sarl
sub
push
popf
fwait
test
dec
push
fdivrl
test
mov
test
shl
cmp
mov
adc
jp
movsb
aas
ds
add
out
lret
mov
ja
idivb
push
xor
aam
jmp
and
inc
pop
push
js
out
add
in
mov
add
in
ret
out
inc
xor
adc
sub
mov
push
ja
sub
sub
push
stc
movsl
pushf
push
inc
inc
lret
xor
lea
rolb
pop
bound
cwtl
adc
int3
rcl
stos
rcr
pop
ffreep
push
in
fiadds
dec
pop
ja
popa
enter
movsb
mov
cli
lret
outsb
and
jne
jle
icebp
sub
sarl
mov
push
mov
add
inc
sbb
sub
mov
mov
popa
insb
mov
cmc
lahf
mov
add
movsb
mov
adc
inc
inc
mov
aaa
test
inc
inc
gs
cwtl
push
jge
int
xorb
ss
dec
pop
push
fnstsw
imul
sub
cmp
lds
xchg
fistps
lods
jle
lret
jle
xor
inc
lds
imul
nop
adc
sti
inc
or
push
frstor
fwait
adc
adc
std
js
mov
sti
scas
xlat
ljmp
cmp
xor
cmpsb
jle
jp
mov
pop
test
jmp
inc
fsubrp
ror
ror
outsl
jecxz
fsubrl
push
add
mov
outsl
xchg
mov
aas
sub
cmp
dec
push
arpl
fmuls
xchg
ret
icebp
data16
mov
dec
inc
cmp
xchg
loope
pop
ficomps
test
pusha
mov
vmovdqa
insl
pop
fldt
cmpsb
mov
xor
adc
jge
inc
fcoml
mov
vmovups
addr16
jno
out
mov
adc
into
sub
repnz
and
loop
fiaddl
cmp
sub
pusha
push
add
insb
xor
or
stos
int3
or
std
lret
lret
push
pop
cltd
and
loope
mov
cmpsl
push
adc
xor
add
shll
enter
jge
jnp
dec
xor
inc
sbb
inc
rcl
in
xor
pushf
mov
and
inc
cmp
lds
adc
mov
xchg
inc
xorb
and
pop
in
std
pop
fsubrl
shrb
fs
out
or
rorl
movsb
mov
mov
lods
push
inc
jp
cmp
ds
and
jp
popf
ljmp
mov
scas
cmpsl
mov
sbb
scas
into
fsubrs
fwait
mov
mov
jp
mov
pop
jmp
pop
inc
dec
mov
fsubl
fists
dec
addb
popl
mov
sti
or
pop
aad
mov
cmpsb
xor
notl
or
cli
notb
or
or
das
test
inc
dec
jl
jge
inc
stc
xor
xor
adcl
fs
push
pop
les
mov
fimull
mov
sahf
cltd
pop
out
xor
add
fldcw
aam
je
fsts
mov
dec
shlb
jno
test
jmp
cli
mov
lods
mov
and
xor
dec
dec
mov
pushf
jbe
jge
out
fmulp
xchg
adc
jnp
les
pop
ret
or
cmc
mov
mov
test
xchg
adc
daa
gs
or
inc
push
stc
cld
insl
sbb
jo
addl
and
movsl
adc
int
mov
jmp
xor
mov
sub
xor
pop
xor
mov
arpl
fst
lahf
jmp
outsb
push
dec
test
mov
imul
loope
sbb
cmp
mov
out
xchg
insb
adcl
xchg
pop
or
cmp
push
nop
test
xchg
inc
insl
cmp
pop
sbb
test
mov
inc
shlb
or
psrlw
sub
add
push
inc
inc
or
push
jg
push
xor
nop
jmp
data16
sahf
shl
sub
cmpsb
pop
mov
pop
mov
mov
dec
mov
loope
outsl
pop
sbb
dec
mov
jb
out
data16
or
mov
inc
jle
mov
das
sbb
jnp
and
stc
and
push
flds
in
lods
push
and
inc
test
or
inc
jl
pusha
push
dec
das
adcl
mulb
sahf
and
sub
mov
outsl
in
dec
pushf
jno
rolb
mov
xor
outsl
sti
pop
dec
into
push
and
sbb
add
xchg
push
ljmp
not
jno
and
lods
xor
pop
lods
mov
cwtl
xchg
cmp
adc
mov
ret
push
je
jns
mov
popa
jno
in
dec
jnp
unpckhps
and
adc
dec
leave
in
mov
xchg
shrl
mov
cltd
arpl
or
in
fstpt
adc
pop
pop
std
fstps
fwait
push
shr
mul
in
lahf
hlt
and
sbb
repnz
jge
imul
push
ret
jne
push
mov
iret
sub
mov
inc
and
movsl
cmc
out
orb
xlat
lret
mov
adc
in
mov
aam
repz
clc
cmpps
ret
dec
mov
int
mov
mov
scas
cltd
add
sti
jl
popf
cwtl
scas
mov
cmp
cmp
jnp
mov
fnsave
mov
push
push
aaa
test
into
xchg
push
jo
fucomi
mov
sub
or
mov
fptan
sbb
pop
xchg
inc
ja
mov
rol
xchg
rcll
call
call
clc
lret
mov
mov
sub
les
jne
mov
insb
xor
mov
fwait
arpl
or
popf
adc
insl
call
shll
dec
pushf
pop
rcr
jns
aam
incb
sbb
or
mov
pop
addl
or
loop
mov
mov
jl
cmp
cmc
int3
push
imul
ret
or
jbe
adc
xlat
sbb
movsb
in
movsl
adc
inc
xor
frstor
mov
test
mov
adcl
xchg
test
push
mov
repz
sbb
movsb
insl
push
outsl
es
addl
xchg
stc
dec
jo
mov
push
call
and
icebp
sub
cltd
xor
stos
mov
idivl
adc
mov
es
inc
and
jnp
and
popf
insl
lds
out
negl
lret
out
lock
jl
mov
mov
push
gs
add
dec
push
loope
mov
gs
scas
movsb
rcr
xchg
outsl
jnp
les
ds
push
rcrl
mov
push
in
jg
test
fidivl
je
fnstsw
dec
inc
jp
add
popf
into
mov
mov
sti
pushf
shl
in
dec
pop
fxch
lret
push
test
sub
adc
pop
cmp
cld
out
push
mov
mov
cmp
mov
pop
jecxz
out
jmp
xchg
jmp
adc
cmc
cmp
shl
push
sti
mov
fwait
out
sub
sub
fisttpll
or
into
inc
lret
pusha
and
dec
in
subl
cmp
mov
es
mov
stos
test
or
in
or
jle
idivl
xor
arpl
ret
push
sub
xchg
mov
mov
push
test
xor
add
ss
and
jmp
xor
lds
call
pushf
sbb
add
int
subb
mov
inc
mov
lea
fcomp
aaa
sub
xchg
hlt
lahf
scas
fsubrp
cld
je
mov
lret
adc
cli
adc
and
or
je
jbe
ret
mov
nop
and
inc
cmp
insb
lcall
xor
cli
mov
push
insb
push
dec
and
arpl
mov
mov
bound
and
lahf
ret
cltd
in
adc
cmpsb
in
sub
push
or
scas
add
push
loopne
bound
jmp
mov
leave
xchg
jl
pop
data16
and
scas
or
leave
jl
inc
out
inc
xchg
out
xchg
fs
pop
dec
sub
outsl
repz
fmulp
outsl
xchg
pop
rcll
fcom
lock
movl
aad
insl
mov
mov
mov
popf
ret
fistpl
adc
hlt
clc
enter
cmp
mov
adc
into
cmp
dec
dec
inc
ljmp
arpl
mov
pop
repz
cmpsb
mov
ss
loope
and
adc
iret
pop
dec
mov
stos
pop
sbb
sub
jnp
jns
lea
rcrl
jno
insl
or
xor
sbb
push
loop
insb
not
iret
fcomi
sti
mov
repz
xchg
in
pop
lahf
data16
jl
sub
push
push
popa
lcall
enter
sbb
rcrl
enter
gs
cli
push
cmpsb
sbb
data16
das
xor
mov
aam
mov
mov
mov
add
inc
clc
mov
sub
mov
lods
inc
rep
jae
adc
sub
into
cmpsl
push
mov
push
cli
lods
push
int
data16
insl
lret
gs
push
hlt
out
or
jno
cmp
imul
scas
cmp
xor
sbb
add
test
aam
pop
and
out
adc
ds
jns
lcall
mov
insl
mov
xor
add
lock
popl
add
or
repnz
aas
sbb
sub
orb
ja
inc
jp
push
or
push
jb
push
mov
lret
xchg
dec
lock
push
jp
mov
xchg
jg
je
mov
daa
or
mov
xchg
sbb
sub
mov
push
jnp
mov
sbbb
jl
xchg
cmp
out
repz
mov
or
std
arpl
jno
or
leave
mov
xor
cmp
jae
sarb
dec
sub
jne
addr16
mov
push
pop
pop
inc
jns
add
cmp
inc
xor
dec
mov
and
dec
cmc
ret
inc
dec
incb
out
push
inc
and
fnstsw
pop
jge
lret
jns
cmp
or
into
cltd
add
fcoml
cmpsb
sarl
pop
sbb
sub
xchg
dec
sbb
and
fcomps
shr
mov
test
call
pop
sbb
mov
sbbl
shlb
ret
lods
ljmp
lock
mov
sub
add
cmpsl
sarl
popf
pop
mov
or
fidivl
push
lea
test
es
mov
push
outsl
js
out
es
jl
rolb
dec
jns
dec
or
xor
imul
not
xor
test
mov
stos
mov
int3
lods
inc
outsb
call
push
or
rorb
pop
sahf
mov
add
daa
push
or
xchg
out
sbb
push
mov
jb
sbb
xchg
je
sbb
loope
mov
mov
xor
shrl
or
hlt
arpl
iret
mov
sub
pop
jns
xchg
mov
int
push
mov
lods
xor
jno
out
fwait
push
xor
and
xchg
fcmovu
repnz
inc
add
ret
mov
in
mov
push
mov
repnz
scas
mov
xchg
sbb
or
push
addr16
in
outsb
sub
cs
in
jbe
fcoml
pop
in
repnz
out
push
jg
jp
mov
lock
or
bound
shl
push
fnstsw
insb
pop
push
ds
loop
call
call
mov
cli
xor
insb
and
pop
xor
pop
xchg
in
pop
pop
imul
jae
bound
pop
or
lea
xchg
xchg
es
pop
adc
pop
test
jb
xor
cmpsb
mov
pop
cmp
iret
arpl
mov
pop
push
cli
outsl
in
xor
stc
leave
stos
xchg
sub
cli
ja
push
inc
stos
sub
adc
loop
dec
adc
pop
aas
adc
ret
sti
sbb
scas
sub
lock
mov
push
inc
out
or
mov
pop
mov
sbb
lock
adc
push
js
dec
ret
out
sbb
dec
addr16
mov
lea
fsubs
and
aas
jb
mov
pop
pop
pop
ja
dec
arpl
or
fidivrl
sub
movsl
pop
call
mov
inc
pop
cmpsb
dec
stc
je
in
jae
cs
sbb
inc
shlb
dec
dec
scas
jnp
ss
mov
lock
orl
cmpb
loop
addr16
jl
insl
and
cld
repz
scas
ds
dec
dec
adc
stos
sti
jo
iret
adc
outsl
flds
adc
mov
jp
aaa
mov
mov
maskmovq
mull
pusha
ret
cmpsb
and
ja
sti
dec
jl
pop
add
shrb
popa
icebp
repz
ficoml
cmp
push
lods
cli
or
arpl
add
scas
add
jns
jae
inc
movsb
jb
out
push
lds
xchg
call
ja
pusha
scas
mov
lods
mov
addr16
cwtl
fidivrl
rcrb
data16
fs
fnstsw
jnp
cmp
cltd
xor
xor
mov
cmp
lcall
sub
mov
jp
addr16
and
pop
dec
jo
lock
xchg
dec
cmp
in
sub
sub
sti
dec
das
testb
jg
imul
add
pop
adc
jg
popf
mov
add
daa
stos
jo
sbb
dec
mov
in
popf
lret
jne
cmp
or
sub
cmp
outsb
sahf
icebp
pop
leave
loop
and
shlb
lret
ss
inc
out
cmp
js
inc
mov
test
push
mov
test
sbb
dec
mov
out
cmpsb
jle
xchg
adc
inc
dec
flds
in
cmp
push
cmp
shll
sub
in
add
das
xor
mov
mov
pushf
xor
fsts
jg
fildl
jns
pop
pop
jbe
cwtl
leave
mov
adc
shr
cmp
nop
jno
push
xchg
rcrb
ss
shlb
dec
fidivrs
std
je
or
mov
leave
mov
lret
pop
mov
movsl
cld
and
add
insl
jmp
stc
push
mov
pusha
pop
leave
addr16
cmp
xchg
test
into
sahf
cltd
xchg
fwait
mov
test
sbb
cltd
fsubrs
ret
out
into
lret
lock
mov
mov
ss
adc
cmpsb
push
lds
insb
repz
push
push
jae
mov
dec
cmp
ffreep
fdivs
mov
jne
mov
lret
scas
pop
push
xor
jns
mov
lret
inc
lret
cmp
nop
pop
mov
dec
add
lock
call
sbb
jp
shlb
mov
add
in
adc
xchg
xlat
mov
sub
rorb
or
sahf
mov
push
ret
xor
clc
push
adc
scas
int3
jbe
pop
xchg
sbbb
push
jmp
ret
out
mov
xchg
adc
mov
xchg
insl
xchg
and
cld
lret
rcll
push
inc
cs
jnp
and
pop
clc
pop
cltd
es
sub
jmp
jg
test
ss
and
loop
fimuls
xor
push
and
add
or
cltd
iret
aas
pop
dec
stos
fildll
mov
shlb
mov
mov
lret
fdivrl
testb
sbb
ret
sbb
mov
popa
fs
outsb
mov
adc
lcall
imulb
testl
jnp
pusha
ss
cs
cwtl
in
les
mov
lock
and
lcall
add
ja
lret
add
xor
je
in
jle
notl
jns
add
pushf
xchg
cld
or
xor
fistl
xchg
inc
jmp
pop
aad
shlb
fidivrs
stc
imul
or
bound
nop
arpl
push
jl
mov
inc
leave
xor
pop
aas
mov
mov
cmc
mov
imul
sahf
push
loope
nop
sub
cmc
les
or
fsubr
sbb
cmpsb
testb
lcall
push
cmp
popf
clc
xchg
xor
mov
jl
mov
nop
jne
ret
imul
jns
lods
dec
mov
shlb
xchg
and
pop
testl
mov
test
inc
sbb
mov
pop
and
fisubs
imul
movsb
int3
add
std
pop
push
popf
out
aaa
and
adc
les
inc
cmp
rcrl
push
ror
pop
dec
sub
mov
mov
mov
jge
dec
inc
out
xchg
mov
cmp
inc
jnp
sbb
pop
or
test
iret
lds
icebp
xchg
bound
jbe
hlt
mov
and
bound
mov
or
clc
push
aad
mov
fisubrl
or
jnp
shl
push
aam
xor
ss
clc
mov
inc
pop
cmp
lea
dec
bound
and
push
or
or
bound
or
xchg
and
mov
xor
jmp
cwtl
xchg
cmp
jg
jmp
mov
dec
sub
adc
inc
rclb
inc
mov
add
mov
push
adc
scas
call
insl
int
jo
jne
arpl
fsubl
int
out
jno
dec
popa
sub
dec
xor
out
fstpl
int
sbb
ds
lret
jb
lds
jne
jmp
push
lret
popl
fisubrl
sbb
mov
or
jns
jbe
jmp
out
enter
lods
xchg
test
cmp
adc
mov
sub
gs
and
test
ja
lret
fcomp
xchg
fdivr
pop
xchg
jnp
pop
enter
mov
pop
fcoml
aam
mov
push
xor
xchg
stc
add
mov
ljmp
loop
mov
pop
inc
pop
shll
iret
daa
movsl
fbld
cli
xor
ljmp
sub
call
lret
inc
loope
sub
loop
cld
lock
imul
es
lcall
lods
or
out
sahf
inc
adc
sbb
sub
iret
adc
in
enter
mov
mov
xchg
fnsave
lret
mov
inc
sub
insb
sbb
lods
add
adc
inc
mov
stos
mov
and
test
ja
xor
or
push
xor
mov
sub
sti
cltd
fdivs
jo
dec
loop
and
cmp
pop
daa
shrl
popa
icebp
xor
mov
sbb
xchg
dec
in
lods
or
push
or
xchg
lods
mov
nop
push
clc
jb
mov
filds
lea
outsb
mov
jno
and
mov
or
aas
push
dec
mov
jo
and
shll
mov
pop
int3
test
stos
push
sub
mov
dec
test
clc
pop
mov
mov
in
adc
ljmp
dec
pop
mov
cmpsl
mov
lods
or
aas
sbb
scas
lock
mov
pop
mov
push
fs
loopne
sbb
xchg
lods
inc
push
push
imul
dec
xor
test
push
imul
xor
jg
mov
out
cmc
inc
inc
pusha
inc
mov
imulb
daa
pop
test
xchg
lcall
and
mov
mov
dec
jge
pusha
sub
pop
sub
xchg
push
dec
inc
push
repz
mov
into
push
sahf
sbb
lea
push
jns
daa
adc
movsl
aas
ja
fldl
lock
mov
mov
and
xchg
pop
pop
pop
add
mov
movsb
arpl
mov
push
lcall
mov
pusha
mov
rclb
mov
fisubrs
fmull
jg
shll
adc
mov
xchg
push
pusha
xlat
sbb
push
cmc
xchg
imulb
out
cmp
out
xchg
popf
or
or
test
push
jmp
push
push
adc
and
jnp
outsl
inc
add
in
push
in
sbb
cmp
mov
xchg
es
push
arpl
ret
jns
jecxz
mov
xor
mov
test
sbb
mov
out
inc
mov
cld
mov
addr16
inc
sub
mov
or
jp
pop
cmp
outsl
enter
lods
cmp
xchg
mov
mov
sti
iret
out
add
int
cmp
fisubrs
lret
inc
scas
loopne
out
data16
sub
adc
push
das
aaa
xchg
ret
jae
pop
les
adc
mov
rcrl
pop
fildl
les
inc
rcrb
jecxz
sahf
filds
adc
test
xor
mov
xchg
das
pop
jp
roll
ljmp
cmpsb
cmp
push
mov
push
pop
std
push
sahf
jmpw
push
sahf
or
mov
fbstp
and
std
cmp
xchg
push
mov
out
xchg
popf
shr
dec
out
pop
or
jnp
sbb
bound
mov
out
enter
cmp
clc
repnz
add
mov
insb
mov
mov
push
mov
sub
arpl
into
sti
andb
xchg
xchg
cmpsl
xor
pop
in
or
jle
cmp
scas
imul
mov
sub
pop
rclb
sub
or
stc
sub
xor
sti
inc
inc
enter
out
pop
mov
mov
leave
jmp
pushf
fidivs
pop
push
shrb
fisttps
sub
in
cmc
sbb
daa
lcall
push
and
jae
arpl
call
jg,pt
dec
cmp
xor
arpl
xor
mov
add
cwtl
push
cmpsl
push
jmp
pop
movsl
cmp
lret
adc
leave
and
es
jmp
aad
xor
jl
xchg
push
movsb
loop
pop
and
inc
jp
fs
jg
out
dec
std
or
int3
pop
inc
dec
js
js
enter
sbb
xchg
aam
sahf
ljmp
insb
push
into
cld
xchg
jns
sub
xchg
aaa
rcr
push
dec
loopne
int
adc
mov
and
pop
fwait
bound
popf
lret
xlat
jp
mov
loopne
mov
sar
in
xor
out
jns
pop
dec
repnz
adc
rclb
jns
pop
jno
or
into
loope
dec
call
jnp
pop
test
xchg
mov
mov
inc
jecxz,pn
cld
test
sub
js
pop
and
pop
add
ret
push
iret
mov
mov
add
ret
adc
adc
push
ror
mov
outsl
mov
sbb
xor
int
jmp
icebp
pushw
repz
jne
and
mov
pop
pop
push
cmp
call
mov
pop
js,pn
xor
cwtl
inc
dec
loopne
pop
cltd
fnstenv
sub
mov
repz
or
or
scas
fs
jge
mov
mov
cwtl
test
jbe
rclb
jmp
push
testl
les
push
fdivl
dec
ds
movsl
and
add
aaa
dec
dec
ds
inc
lcall
push
dec
pop
mov
call
scas
enter
and
lods
xchg
std
push
mov
cmp
test
dec
jno
sub
and
sub
dec
push
push
fiaddl
ja
leave
into
sbb
into
data16
push
popa
je
xchg
xchg
sub
fwait
cli
movsl
dec
fucomi
lret
repz
pop
push
sbb
dec
jnp
xor
sbb
cmp
sub
jle
pop
cmp
mov
mov
js
fimuls
jg
push
or
repz
mov
adc
xor
dec
loope
or
mov
jp
and
sub
pop
cltd
xchg
scas
pop
sub
data16
dec
aad
xorl
out
push
mov
sub
mov
rorl
xlat
cwtl
jmp
or
sbb
ss
mov
adc
mov
inc
jg
jg
clc
leave
cmp
mov
in
jp
cmp
loop
push
sub
fsub
in
pop
jmp
out
adc
fwait
or
ljmp
iret
enter
mov
mov
in
adc
push
aad
lods
data16
jmp
ret
dec
pusha
xor
push
insb
aad
push
mov
int3
xchg
add
dec
jbe
push
in
repz
rorl
es
ret
loopne
rcr
sbb
mov
add
orb
or
in
add
fcomps
fdivrs
fisubrs
jo
push
dec
movsb
mov
fildll
sbb
out
mov
xchg
cltd
fucomi
cli
sub
adc
xor
mov
lcall
mov
pop
arpl
lock
and
xchg
xor
loopne
xlat
jae
xlat
ficompl
jmp
push
push
inc
xchg
pandn
fists
scas
sahf
inc
dec
mov
push
addr16
adc
dec
push
cmp
add
mov
aam
shlb
add
xchg
xchg
xchg
cmp
outsb
jo
or
sbb
sub
imul
sub
movsb
pushf
add
fprem1
mov
stos
stc
cmp
xchg
imul
out
cmp
dec
int
cltd
cmc
insl
or
and
movsb
push
cmp
mov
cli
sub
sbb
push
dec
cmp
out
add
dec
scas
out
dec
mov
sbb
mov
ljmp
sub
sysenter
insl
mov
mov
clc
adc
sbb
notl
cmpsl
add
mov
call
das
movsb
sbb
mov
add
inc
lds
out
mov
or
ret
mov
icebp
lret
or
cmp
mov
mov
inc
inc
cmp
jg
xchg
pop
xchg
mov
fadd
repz
pop
pusha
mov
ss
movsl
xorl
mov
xchg
sbb
into
movsb
pop
filds
jb
je
push
fdivrp
sub
scas
sbb
jle
dec
sarl
xchg
nop
or
jo
ja
pop
add
and
bswap
andl
into
and
cmp
mov
or
je
xor
xchg
nop
adc
sub
cmp
lods
lds
movsb
adcl
jg
jbe
push
mov
or
inc
and
inc
adc
loope
inc
cltd
arpl
std
adc
jno
dec
and
cmpl
pop
arpl
jge
xlat
sub
sub
popf
adc
lea
adc
aas
mov
test
inc
fbstp
push
in
pusha
movsb
repz
dec
cmp
dec
mov
fsubrl
jge
insl
pop
pusha
dec
not
mov
mov
popf
in
mov
rorb
sub
pop
pop
push
cmp
inc
push
cmp
jae
popa
or
mov
add
lret
push
movsl
sti
pop
dec
insl
pop
mov
adc
pushf
inc
xlat
push
test
mov
pop
fistpll
inc
mov
lods
mov
mov
daa
adcl
mov
sti
mov
pop
pop
out
sti
orb
pop
jne
mov
aas
pop
xchg
dec
insl
sti
fadd
mov
jno
mov
ss
xchg
sbb
xchg
in
xor
mov
cmp
fldcw
subb
aam
ja
inc
xchg
mov
mov
insb
cmp
xor
test
sub
dec
sbb
add
ja
adc
sub
xchg
fwait
jbe
loope
pop
mov
pop
negb
shll
cwtl
jge
mov
into
ljmp
out
shrl
fisubrl
push
repnz
and
push
dec
hlt
pop
ret
mov
pop
inc
fidivrl
imul
int
cwtl
jae
jo
jns,pn
cld
mov
loopne
pop
mov
test
insb
stos
sub
imul
popf
cli
mov
jbe
mov
push
mov
mov
popf
sub
syscall
pop
mov
mov
popf
add
inc
mov
aad
iret
xlat
jne
rclb
fisttpll
sahf
or
insl
in
ret
sub
dec
and
fimull
xchg
pop
outsb
push
dec
cltd
ret
inc
mov
sub
dec
push
mov
xlat
test
xor
cli
inc
adc
cmpsl
sbb
or
in
mov
pop
stc
and
hlt
scas
ficompl
popa
inc
adc
ja
fwait
movsb
aas
cmp
add
xor
pushf
nop
lahf
lcall
dec
dec
das
sarb
sbb
push
in
xchg
jnp
pop
jbe
pop
test
mov
and
into
addr16
sbb
cmpsb
mov
xchg
scas
adc
lcall
fisubrl
sbb
fiadds
ja
sbb
push
mov
xor
sub
mov
and
into
inc
add
jecxz
es
pop
popf
test
int3
xor
jns
aad
pushf
pop
xlat
push
jbe
les
in
fcoml
sub
in
roll
in
lea
ljmp
arpl
imul
shlb
xor
mov
push
ljmp
inc
jmp
fadd
mov
push
loope
dec
out
or
sbb
mov
cwtl
shll
pop
xchg
mov
xchg
jmp
and
adc
xlat
mov
sti
out
out
xchg
cmp
icebp
fs
lcall
int3
aam
loop
sti
xchg
push
add
roll
dec
push
gs
cmp
in
cmpl
or
hlt
mov
jecxz
inc
cs
jle
add
xchg
and
or
lret
xchg
xor
xchg
pop
stc
mov
out
fimuls
fcomp
cmc
mov
lret
jg
push
pusha
push
pop
ljmp
movsl
cmp
inc
jle
dec
roll
jnp
jne
test
sub
je
sahf
sbb
ss
push
stos
shl
or
push
shl
aad
fldl
sub
in
popf
fdivrs
lret
jecxz
cmp
inc
fistl
jle
add
push
lock
or
dec
jae
mov
xor
inc
cwtl
in
insb
call
jge
mull
add
js
cli
jno
inc
lret
mov
lods
sub
mov
pop
push
test
test
cmp
lods
insb
jge
adc
lock
mov
test
out
pop
dec
arpl
idivb
data16
sbb
jo
fstp
imul
jmp
fs
xor
mov
shl
sbbl
adc
movsb
add
push
rol
and
imul
xor
fsubl
lods
and
inc
or
fstps
bound
xchg
dec
orb
gs
mov
fsubs
mov
stc
out
xlat
lea
imul
lcall
jle
andl
adc
jl
cmp
inc
outsl
clc
mov
adc
cmp
and
icebp
scas
sub
std
add
mov
push
cmpsb
cmp
lcall
je
addr16
or
adc
aam
mov
out
fwait
mov
in
mov
cld
fiaddl
int3
adc
pop
push
fiadds
adc
cwtl
mov
adc
fcoml
jge
ss
xchg
pop
jbe
or
incl
lds
ss
xchg
sbb
in
sarb
xchg
push
sbbb
sbb
lods
and
mull
inc
aad
insl
xchg
inc
jbe
out
fsubrs
fiaddl
rcll
aaa
shl
mov
shlb
mov
cli
sbb
mov
push
dec
cli
add
inc
push
icebp
rcr
dec
loop
jle
lret
pushf
mov
sub
cmp
push
sarb
xlat
push
es
cmpsb
jne
jle
rcrl
mov
bound
out
jl
lods
pop
cmp
in
pop
adc
ss
adc
les
push
imul
inc
fnstcw
adc
xorb
inc
ss
mov
jb
dec
sti
push
adc
add
cs
inc
in
dec
aas
cmp
hlt
stos
xor
xchg
popf
inc
sbb
sub
std
cmp
dec
add
cmpsb
hlt
cmp
xor
pop
sbb
mov
xor
xchg
sub
movsb
iret
mov
pop
dec
lods
sub
loop
mov
adc
dec
mov
fistpll
mov
mov
mov
jecxz
mull
jmp
popa
fsub
inc
mov
push
xchg
lret
leave
xor
adc
fmulp
es
decl
jo
lret
dec
mov
adc
imul
ljmp
or
fwait
xchg
lock
mov
add
testl
add
xchg
imul
mov
nop
out
ljmp
mov
push
loopne
cwtl
cmp
insb
cs
out
imul
xor
dec
outsl
mov
scas
femms
add
mov
out
mov
lock
jl
mov
out
mov
adc
adc
dec
xchg
pushf
shl
xchg
xchg
lret
mov
and
addl
adc
ss
out
and
jge
in
and
popa
int
loopne
mov
mov
cmp
insb
xchg
inc
dec
xchg
and
sbb
not
mov
xor
cltd
les
js
mov
sbb
inc
mov
and
xchg
out
into
leave
sahf
lods
sbb
cmovnp
test
aaa
aaa
ss
dec
dec
call
inc
lods
or
test
and
mov
imul
insl
mov
das
adc
fcmovb
sbb
xchg
mov
and
dec
pop
idiv
sbb
hlt
insl
xor
xchg
cld
or
cmp
inc
jbe
push
xor
mov
push
or
jnp
rorl
mov
lea
lods
scas
and
cmp
fidivl
add
lock
fnsave
shlb
push
shr
mov
push
fwait
xchg
add
mov
daa
out
mov
or
add
clc
std
xchg
push
sub
call
sub
je
xchg
rclb
mov
mov
neg
inc
psubusw
mov
lret
sub
pop
jae
lock
mov
jo
lds
in
push
sub
nop
call
add
jb
mov
pusha
inc
inc
mov
lods
mov
adc
push
mov
aam
in
clc
cld
sbb
pop
imul
dec
dec
push
cmp
mov
mov
dec
mov
fiadds
mov
and
lret
dec
or
orl
in
pop
das
data16
cltd
adc
xlat
ret
mov
sar
cmp
into
cmc
xchg
mov
fsub
data16
int
push
push
add
pop
xor
aad
imul
inc
dec
or
pusha
pop
inc
xlat
loop
pushf
mov
insl
addr16
iret
aad
loop
dec
sbb
lea
mov
add
adc
nop
mov
in
andl
sbb
mov
inc
shl
lods
push
xchg
out
das
jo
jp
negl
pop
cmpsl
cs
and
xchg
or
inc
push
mov
or
jecxz
inc
jle
or
mov
inc
flds
lcall
decl
dec
cmp
test
inc
outsb
mov
nop
fstpl
scas
cld
lock
pop
out
cmp
mov
fwait
cmc
mov
pusha
jne
dec
andl
movsb
inc
ror
xor
adc
or
aas
pop
loop
and
cld
cmp
roll
jb
mov
mov
mov
push
enter
or
push
rol
push
xchg
imul
lret
push
loop
ja
mov
int
add
sarb
xchg
jnp
es
cmp
adc
mov
lret
loope
repz
mov
dec
cs
mov
loopne
test
lahf
or
insl
loopne
adc
lcall
xor
sbb
lods
adc
jp
jae
dec
scas
int
js
dec
jns
aam
jbe
icebp
or
adc
mov
mov
leave
inc
inc
out
popf
lock
jbe
sbb
xlat
cmp
push
repnz
daa
insb
jno
pop
daa
pop
pop
add
mov
inc
or
jb
in
adc
sub
jg
mov
jb
mov
fs
mov
mov
mov
and
cli
xor
test
scas
cmp
add
nop
mov
jmp
jge
in
imul
leave
iret
out
or
aaa
mov
decb
inc
stc
add
jp
jb
mov
dec
hlt
insb
inc
mov
mov
std
shrb
cs
clc
adc
aam
mov
jno
popa
int
in
jnp
jle
and
push
rorl
xor
shl
mov
andl
les
addb
inc
loopne
mov
jnp
test
xchg
xor
add
scas
pushf
add
cmp
or
push
mov
mov
jnp
sbbb
rcrl
jns
int
xchg
mov
and
hlt
mov
xchg
lock
insb
dec
lcall
lret
mov
mov
lahf
js
daa
jne
sub
sbb
xchg
sub
cmpl
adc
mov
jb
add
or
pop
leave
fsubl
jo
dec
pop
dec
insb
adc
push
imul
push
add
cmpsl
mov
leave
mov
aad
sbbl
aaa
dec
cmp
pop
stc
pop
inc
jecxz
shl
fdivl
aad
dec
out
mov
cmpsb
pop
adcl
and
inc
pop
lods
dec
int
lahf
pop
in
ja
fsubrp
dec
ja
jae
inc
sub
pop
jmp
mov
push
aaa
pop
popa
sbb
jns
xchg
mov
in
mov
or
add
addr16
jnp
in
adc
mov
test
cmp
fiadds
mov
cld
add
mov
dec
xchg
js
fwait
mov
jb
xor
dec
nop
leave
jg
push
orl
and
jg
sbb
rcrl
out
cmpl
mov
jg
gs
mov
sahf
mov
cmp
sti
mov
cli
push
pop
push
pop
jge
adc
lret
ret
lahf
rclb
dec
mov
xchg
xchg
stos
jl
jg
mov
and
outsb
mov
ja
mov
inc
jle
aas
and
sub
dec
cmc
lods
sahf
in
subb
adc
js
movsl
inc
stos
iret
nop
in
cmpsb
repz
add
leave
inc
sbb
inc
sbb
mov
pusha
sbb
in
or
repnz
scas
jb
les
mov
scas
inc
mov
test
or
cmp
fwait
cmp
enter
fldl
aaa
int
into
shll
test
loope
clc
cmpsb
in
movsl
mov
add
pop
jnp
dec
in
inc
mov
xchg
jmp
sub
stc
stc
jbe
xor
rolb
call
and
jl
imul
icebp
mov
jmp
scas
fldt
lret
icebp
cld
add
inc
test
jl
aam
adc
in
mov
cli
in
daa
xor
jne
or
cmp
test
xor
test
shlb
rol
pop
mov
and
sarb
outsl
les
and
imul
loop
jmp
push
int
pop
mov
mov
fcoml
jns
xor
xchg
decb
and
mov
shlb
int3
test
lods
pusha
jp
es
loopne
inc
push
fldcw
repnz
jecxz
push
xchg
into
or
jno
test
push
fdivrl
rcll
xor
inc
lcall
js
sub
adc
out
sub
push
jge
push
xchg
mov
out
mov
xor
jecxz
daa
mov
mov
adc
and
ss
sbb
sub
mov
inc
pop
xor
adc
mov
cld
pop
cltd
push
pop
sub
movsb
push
mov
cli
cld
dec
cwtl
call
data16
stc
popa
or
cld
inc
and
cs
xor
ds
fisttpll
dec
mov
mov
push
ret
xchg
test
and
movsl
fadd
aas
pop
lods
sbb
and
dec
mov
pop
mov
push
cmc
jecxz
cwtl
movsl
mov
hlt
push
jmp
in
fisttps
dec
mov
in
jnp
loop
adc
mov
int
call
add
cld
cld
add
out
popf
arpl
add
add
xor
lcall
mulb
lcall
adc
dec
iret
gs
inc
ret
jns
add
mov
push
sbb
loopne
dec
mov
pusha
pop
pop
pop
mov
jo
out
jbe
cmc
cli
pusha
shrl
add
adcl
pop
mov
scas
xchg
mov
pushf
push
jecxz
push
mov
push
inc
stos
sbb
sub
popf
pop
jnp
cli
sbb
enter
mov
fs
mov
xor
sub
or
loopne
in
int3
or
push
fimuls
jbe
push
mov
dec
xor
int3
cmpsl
paddq
add
in
inc
stos
scas
testl
inc
pop
sub
aad
shrb
mov
xrelease
push
jmp
icebp
daa
scas
fsubrp
mov
popa
dec
mov
adc
mov
rcrb
inc
push
in
xrelease
loope
xchg
and
fmuls
shrl
xchg
sub
daa
dec
loope
out
in
aad
sti
and
je
clc
inc
add
mov
stos
scas
adc
mov
push
mov
xchg
add
or
sbb
push
jl
mov
out
and
cmp
push
or
jmp
mov
and
stos
arpl
addr16
push
and
jecxz
cwtl
cmp
insb
xchg
into
pop
addb
adc
xorb
add
ja
or
inc
les
dec
leave
ds
out
mov
add
clc
adc
ljmp
dec
pop
daa
repnz
xchg
loopne
push
and
sub
mov
xlat
sbb
call
xchg
mov
add
cmp
fists
dec
dec
xorl
or
jb
shll
shrl
and
hlt
ret
aam
shrd
xor
les
rcr
mov
invd
and
imul
sarb
or
ret
inc
cmp
stc
pop
lret
push
cmc
pop
clc
push
imul
neg
je
xchg
nop
movlps
loop
add
cmpsb
cmpsb
add
ljmp
pop
mov
roll
dec
fcomps
jl
ljmp
mov
cmp
push
cmp
or
lret
fisubs
mov
repnz
mov
add
pusha
mov
jg
adc
push
popa
adc
outsb
sub
iret
mov
sub
sbb
pop
sti
and
clc
adc
in
imul
stos
repz
insl
or
jle
aas
nop
add
xchg
jl
popf
data16
sub
lock
mov
inc
push
jns
sarb
xchg
imul
sub
cmpsl
sarl
dec
nop
push
outsb
cld
je
insl
mov
mov
into
test
in
loope
adc
cmp
aam
addb
fwait
inc
sbb
mov
pop
xlat
dec
rolb
xor
idiv
insb
scas
cs
mov
imul
inc
xor
mov
loope
arpl
pop
movsl
cmpsb
lret
gs
xchg
and
test
inc
jg
test
add
and
ja
ss
adc
mov
mov
lret
adc
pop
adc
stos
mov
cli
xchg
mov
test
je
ja
lds
nop
out
daa
test
out
pushl
cmpsb
daa
xor
lods
sub
pop
jl
adc
cmpsb
xchg
add
mov
mov
je
add
dec
aad
or
aad
push
pop
in
ret
enter
cmp
loope
scas
test
rorl
mov
adc
leave
sbb
cmp
addl
popa
adc
mov
cld
mov
mov
or
rorl
dec
scas
out
sub
xor
xchg
shr
ljmp
push
jae
lods
divb
jnp
fcomps
pop
jns
mov
dec
or
lock
push
or
pop
int
stos
jmp
sub
jmp
adc
roll
ds
push
xor
ds
mov
dec
inc
lret
push
mov
mov
mov
popf
xchg
inc
insl
push
and
push
iretw
lock
push
jg
int3
hlt
fstps
outsl
push
mov
daa
add
stos
sahf
lretw
loop
aad
mov
icebp
cs
bound
xor
pop
ret
repnz
insb
loope
cmp
ret
xor
outsl
fsts
adc
xchg
stos
push
mov
dec
jo
mov
inc
cltd
scas
push
out
pushf
rorb
jb
push
xchg
in
bound
sbb
jge
icebp
data16
movsb
sbb
stos
or
xchg
std
xchg
cwtl
stos
adcl
xchg
mov
pop
jmp
push
push
mov
das
add
dec
retw
jp
test
mov
dec
mov
shlb
mov
jmp
cmp
inc
daa
xchg
dec
addr16
xor
in
adc
gs
insl
and
ds
mov
outsb
shlb
lcall
jge
fs
xchg
cwtl
aad
sbb
int
mov
add
add
pop
cmp
daa
int3
daa
jo
xchg
push
lahf
pop
dec
sbb
xchg
fwait
cwtl
xor
jo
ljmp
es
add
jo
inc
dec
cmc
sub
cmpsl
xchg
adc
cli
mov
cli
leave
cmp
fiadds
jne
pop
hlt
add
xchg
pop
icebp
sbb
xor
sbb
mov
mov
in
adc
mov
fsubp
scas
ret
add
stos
je
fadd
ljmp
enter
es
inc
push
out
cmp
add
and
sarb
mov
inc
ret
mov
add
scas
popa
pop
sti
jp
ja
inc
fbld
adc
cwtl
push
cltd
mov
pop
js
stos
dec
mov
adc
adc
sbb
mov
pushf
dec
pop
xchg
repnz
sub
jp
inc
xor
daa
insl
mov
jbe
jae
jmp
ret
dec
dec
mov
push
pop
and
pushf
or
sbb
pop
stc
popa
jle
push
mov
and
loope
cld
fistps
ja
adc
repz
rorb
movsb
adc
mov
in
cmp
add
out
mov
xor
out
or
add
pop
sbb
mov
je
and
gs
mov
negb
fyl2xp1
cwtl
stos
sub
sub
inc
push
push
pop
scas
pop
add
ret
add
xor
lods
lods
pop
push
xchg
outsl
lahf
xchg
repz
inc
mov
stc
clc
xlat
repz
stos
rorl
shll
xchg
jle
mov
ret
lcall
add
inc
sbb
sbb
add
mov
jl
xorl
jne
lahf
xlat
iret
pop
mov
roll
cmp
inc
stc
aaa
mov
lret
cmp
stos
scas
icebp
and
adc
add
sub
mov
mov
add
frstor
pop
mov
mov
test
aaa
push
iret
lcall
imul
rcr
and
cld
lea
mov
mov
cmpsl
xchg
je
clc
fimull
mov
xor
pop
in
cli
pop
iret
cmp
bound
es
xchg
test
xor
rorl
push
in
dec
in
mov
iret
in
xchg
pop
mov
jno
mov
popa
hlt
fisubs
loope
xchg
mov
rorl
mov
hlt
mov
mov
push
lea
cmp
aam
mov
mov
mov
jne
push
outsb
nop
or
maskmovq
divl
dec
jle
cmp
mov
fimull
lds
aaa
enter
jae
inc
sarb
mov
cmpsl
add
mov
add
dec
xchg
jb
js
adc
sub
add
jmp
mov
inc
fnclex
out
lods
sub
loopnew
jns
aad
fdivrl
clc
in
cltd
js
lret
das
js
pushf
mov
fsts
mov
add
mov
adc
inc
negl
shll
sbb
adc
adc
mov
push
adc
jecxz
dec
jle
cmp
push
aam
repz
adc
lret
jno
test
cmp
and
lods
xchg
jae
cli
movsb
push
mov
stos
mov
mov
or
mov
add
in
sahf
push
mov
cli
mov
data16
sub
pop
or
sub
push
xlat
loope
pop
pop
push
push
cld
fldt
ljmp
add
dec
out
loop
dec
cmp
movsb
subl
or
rcrb
clc
insl
sub
adc
dec
scas
mov
pop
inc
sbb
sub
xchg
jge
repz
xor
xchg
mov
and
or
mov
push
dec
ljmp
scas
out
clc
loopne
xor
por
xchg
mov
hlt
cmp
push
adc
fistpll
je
mov
sbb
flds
fsubl
fdiv
mov
roll
loop
insb
bound
dec
movb
add
ljmp
or
push
push
and
xchg
repz
pop
js
jle
push
enter
jg
jle
adcl
mov
ret
outsl
xor
icebp
xor
pop
cwtl
cmp
inc
test
or
test
mov
inc
adc
sbb
jno
js
cmp
or
mov
scas
pushf
sub
add
jmp
pusha
xchg
xor
cmpsl
and
ret
aaa
sub
mov
out
add
dec
jnp
add
aas
xacquire
push
jb
push
mov
int3
bound
andb
out
and
inc
dec
xchg
out
out
cmp
push
jnp
subb
rcrb
outsb
cmpl
add
ret
repz
jo
lcall
cmp
nop
dec
pop
mov
adc
cs
mov
or
mov
data16
cmp
mov
cmpsl
adc
stc
sub
movsb
arpl
xor
inc
ret
lahf
sub
sahf
pop
out
loop
fwait
test
adc
xor
daa
mov
cmpsb
test
dec
int3
and
lahf
imul
ret
addb
or
sbb
ret
pop
loop
mov
xchg
scas
adc
pop
dec
mov
sarl
inc
mov
fstl
dec
push
xchg
fwait
pop
adc
adc
adc
mov
std
in
js
dec
mov
jp
aaa
cmp
sarl
mov
mov
jge
inc
or
in
fldt
aaa
mov
fs
testl
negl
and
in
xor
iret
loope
ss
ja
mov
addb
mov
xchg
dec
xchg
pop
popf
das
adc
sbb
into
and
pop
mov
or
xchg
xchg
dec
push
addr16
insl
push
shll
xlat
mov
cmp
fadds
out
adc
jge
pop
call
and
xchg
inc
mov
mov
pop
xchg
dec
mov
stos
mov
mov
mov
mov
push
bound
push
add
test
push
fsubs
pushf
xchg
sti
xor
movb
popf
add
xchg
fisttpll
jp
mov
pop
movsl
rclb
pop
or
mov
add
cmpsl
pop
push
push
inc
adc
cli
lcall
inc
and
jnp
cmc
inc
daa
pop
mov
or
dec
xchg
loop
sti
mov
cmpsb
jne
cld
mov
js
sbb
sbb
xor
lret
aaa
lahf
pop
xchg
iret
sub
inc
lods
in
and
jo
fcomi
negb
inc
jecxz
scas
cmp
mov
mov
shlb
pop
inc
jle
je
xor
xchg
shrl
std
mov
arpl
mov
mov
mov
fidivrs
int3
je
mov
cmp
add
call
jno
in
rcl
mov
sti
in
xchg
inc
outsl
adc
cs
jg
aad
aas
and
cmp
add
int3
sbb
sti
loope
and
sbb
sub
mov
rcrb
dec
xchg
fcmovb
or
mov
dec
loopne
gs
xchg
and
push
inc
sti
mov
jp
and
bound
jmp
je
les
mov
in
repz
push
aam
mov
adc
inc
add
ret
xor
sti
imul
add
dec
ss
cmp
and
mov
inc
mov
jecxz
xchg
push
andb
xchg
and
or
ret
xchg
outsl
shll
addr16
mov
fpatan
fdivrp
stos
pop
cmp
hlt
test
xchg
imulb
das
cmp
stos
adc
pop
sbb
or
jb
fnsave
in
push
mov
scas
xor
cmp
popf
ds
pushf
xchg
jae
fnsave
or
insb
js
lds
movsb
mov
dec
cld
jmp
xchg
push
mov
xchg
push
xchg
mov
sbb
inc
mov
mov
cs
dec
jb
jmp
gs
pushf
insb
mov
inc
pusha
ficomps
inc
imul
xor
add
test
mov
nop
lcall
inc
ljmp
jno
inc
fwait
repz
sbb
dec
je
jo
mov
cs
adc
test
jo
add
jg
push
scas
daa
pushl
inc
lock
cltd
in
in
cs
scas
in
sbb
mov
stos
out
loope
aam
lahf
adc
inc
addr16
mov
and
or
daa
aaa
sub
mov
push
jmp
out
cmp
push
add
and
daa
sub
cmp
int3
fbld
movsb
cmpsb
jle
xchg
xchg
test
dec
mov
test
out
sbb
in
pop
nop
xchg
add
mov
pop
out
std
dec
out
das
popa
adc
push
testl
adc
mov
sub
push
addr16
mov
or
pop
inc
fucom
cwtl
stc
loope
sti
scas
inc
ljmp
aaa
add
and
mov
mov
xchg
inc
sbb
pop
arpl
test
add
rclb
mov
mov
fcmovb
jle
jb
push
dec
inc
push
dec
fstpt
push
adc
pop
pop
mov
sub
rorl
inc
jnp
arpl
cwtl
test
ret
pop
sub
mulb
stos
icebp
pop
or
repz
cmp
adc
stos
sahf
pusha
cmpl
mov
rorb
jb
pop
inc
mov
mov
add
mov
dec
arpl
das
and
and
enter
xor
addb
ret
dec
sub
stos
pop
leave
cmp
out
dec
mov
xor
fcmove
outsb
sub
cmp
mov
jbe
mov
jle
fimuls
in
das
cmp
xchg
aaa
arpl
cmc
xchg
mov
push
arpl
bnd
pusha
out
inc
fdivs
jl
cmpsl
sarl
mov
movsl
fnstcw
icebp
jbe
push
jo
scas
sub
imul
ja
jbe
das
in
add
lods
xor
jno
jl
inc
les
mov
lret
js
adc
add
ror
rolb
xor
push
jecxz
cmp
imul
je
fdiv
cs
cli
popl
sbb
pusha
mov
mov
mov
xchg
scas
xchg
movsl
ror
mov
mov
xchg
fadd
push
or
rcrb
lea
jns
add
xor
pop
xchg
fnstenv
pop
fidivs
inc
jo
outsb
fidivl
cmc
addr16
inc
out
lret
push
mov
or
jns
cmc
sbbb
idiv
cmp
pop
xchg
mov
xchg
outsb
and
leave
cld
cmp
push
mov
loopne
sbb
inc
sar
jae
xor
outsb
daa
mov
pop
xchg
outsl
push
js
sub
jg
scas
push
cmp
in
test
jb
push
pop
hlt
lea
jmp
cs
jnp
loope
lods
imul
inc
rorb
cmpsb
or
in
cmp
out
xchg
pop
xchg
mov
enter
add
mov
stc
mov
in
les
out
andl
dec
fwait
cmp
ja
enter
bswap
fcomps
out
pop
loopne
std
add
out
push
outsb
mov
lcall
add
sti
lahf
xor
imulb
arpl
ja
xor
stos
dec
rclb
iret
jbe
mov
popa
push
jns
enter
rorl
sarb
divl
xchg
mov
loopne
sub
shld
jge
jo
fistpl
xor
xlat
lock
test
fs
mov
sub
sbb
and
push
movb
repnz
sahf
je
mov
jne
loop
sbb
mov
mov
pop
cmpb
mov
cmp
xchg
jle
into
es
push
js
jb
cmp
data16
mov
test
or
and
mov
repz
push
adc
xor
push
or
pop
imul
mov
jbe
xchg
mov
loop
pop
imulb
and
fimuls
hlt
ljmp
and
in
pushf
sub
sbbl
shl
inc
jle
pop
icebp
xchg
cmp
rorb
dec
ret
add
out
in
mov
jnp
cmp
lret
loope
xchg
push
mov
jno
nop
sahf
stc
rolb
mov
bound
mov
lret
push
clc
cmp
xlat
push
push
pop
hlt
gs
aad
movsb
or
pop
aad
mov
mov
lods
mov
sbb
mov
xor
inc
cmc
or
int3
std
mov
call
xchg
dec
jae
jne
das
ret
ret
test
xor
jo
xchg
scas
sub
call
loop
fbstp
jecxz
xlat
rcrb
push
xor
mov
sub
js
dec
std
pop
insb
or
sti
lahf
aas
aam
sbb
jb
bsr
jecxz
in
fidivs
inc
shlb
add
mov
add
fiadds
test
pop
out
or
mov
add
fstpt
adc
push
lahf
ficoms
jno
aaa
cmc
and
daa
out
out
movsl
les
sbb
add
xor
or
dec
int3
and
sub
adc
lods
push
cmp
shlb
in
mov
out
jo
icebp
lods
insl
sub
pop
fists
insl
xor
mov
movsb
stc
sub
add
popf
sahf
sub
das
pop
cld
push
push
push
adc
pop
cmp
loopne
push
mov
cs
outsb
mov
mov
sbb
cmp
ret
fnstenv
jae
ss
into
scas
mov
dec
test
jne,pt
stos
add
loope
and
popa
mov
add
in
jb
xor
pop
add
xor
inc
divl
and
jbe
inc
cwtl
inc
cmp
and
xchg
arpl
pop
imul
loopne
adc
add
jg
ret
inc
lcall
mov
pop
adc
xor
dec
mov
push
xchg
ds
sbb
fwait
mov
dec
jo
bt
jp
sarb
outsb
inc
cmp
cmp
popa
mov
insb
repz
scas
xor
out
pop
rorb
ljmp
ret
sub
mov
clc
gs
sbb
sbb
outsl
rcl
sbb
cmp
sbb
ret
push
xlat
scas
xorb
jmp
sbb
dec
in
dec
adc
into
push
pushf
lods
dec
lods
mov
mov
dec
out
aas
ljmp
jb
sub
repnz
push
add
aam
jae
xor
lahf
xchg
adc
sub
cli
loope
lea
lods
cmpsb
rclb
mov
mov
repz
mov
fmulp
add
sub
jp
lock
dec
lahf
loop
scas
xchg
push
neg
scas
ds
in
into
sbb
inc
xor
mov
in
out
fcmovnb
in
dec
inc
mov
xchg
dec
sbbb
mov
loopne
jmp
mov
sbbl
ss
jae
mov
mov
jno
aas
dec
xchg
cmp
sbbb
in
mov
adc
ret
jne
cmpsl
test
es
push
push
and
jo
rcll
adc
loop
imul
jbe
and
dec
inc
dec
jecxz
mov
lahf
add
mov
jl
nop
jg
mov
inc
cmp
in
mov
or
push
hlt
mov
cmp
or
insb
add
mov
mov
cmpsb
mov
cld
mov
sub
jae
xor
and
sbb
int
rcl
jae
jecxz
cmpb
and
stos
fidivs
adc
imul
jbe
or
mov
xor
mov
out
aam
jp
pop
movsl
dec
add
pop
xchg
dec
xor
adc
push
inc
jne
movsl
mov
and
xchg
scas
and
addr16
xchg
call
lock
testl
add
andl
cmpsb
mov
testb
mov
sub
stc
xor
enter
and
dec
or
cmp
jne
mov
push
inc
adc
sbb
inc
mov
and
xor
pop
mov
sub
pop
xor
stc
xlat
xchg
mov
gs
ljmp
mov
xchg
cli
fucom
xchg
xchg
les
fidivl
mov
sub
dec
xchg
inc
in
cwtl
sti
cmc
int
fcomps
inc
dec
mov
adc
cmp
es
adc
pop
and
imul
pop
mov
pop
lea
mov
ficompl
sbb
xchg
out
jg
cltd
cmp
sub
push
aas
lret
cmp
pop
out
inc
test
xor
cmp
dec
ja
xchg
sbb
out
sbb
sub
leave
push
sahf
push
pop
data16
mov
ret
mov
fstps
lods
ds
hlt
inc
arpl
xchg
cltd
sti
push
stos
je
add
addr16
sub
inc
adc
rolb
ja
xor
sbb
outsb
pop
mov
jecxz
dec
inc
cmpl
popf
mov
iret
add
scas
pop
inc
mov
push
cvtdq2ps
adc
stos
pop
xchg
fs
cmp
sub
lret
mov
mov
sti
mov
or
add
dec
hlt
call
xor
pop
pop
or
add
jmp
cld
xchg
cmp
lock
hlt
fmuls
pusha
dec
into
add
jbe
dec
sbb
stc
cmp
sub
lds
cli
cltd
inc
popf
filds
adc
pusha
std
test
xor
xor
cmp
popf
mov
push
je
cmp
sahf
or
pop
inc
repnz
add
jmp
cld
pop
mov
cmp
xor
clc
dec
mov
jbe
loop
xchg
dec
jmp
popf
outsl
scas
xchg
loope,pt
xchg
lret
loop
cmpsl
in
ret
dec
fisttpll
sbb
imul
lea
inc
outsb
sbb
dec
jae
cmc
scas
or
sub
mov
data16
jnp
cmc
mov
jne
jmp
out
aaa
mov
pop
jl
fistpl
mul
sbb
les
dec
scas
fstpt
fucomp
rcrb
and
out
mov
or
out
push
xor
lods
jle
pop
roll
mov
repz
dec
jno
inc
xor
sahf
sbb
pop
inc
neg
lret
out
mov
insl
fst
cli
sbb
lds
jmp
inc
imul
xchg
pop
scas
cmp
in
jle
pushl
mov
mov
into
mov
rcrl
sbb
mov
sbbb
mov
mov
xchg
push
adc
insb
icebp
mov
pusha
jb
xchg
clc
xor
dec
xchg
rorl
inc
cmp
inc
sbb
sbb
add
lret
lcall
inc
inc
arpl
jb
cmp
mov
mov
in
outsb
daa
orl
inc
inc
add
cmp
and
leave
inc
std
gs
stos
add
lret
ret
out
and
shll
cld
pop
mov
push
inc
loope
dec
cmp
cld
lahf
in
outsb
rorb
data16
mov
push
fcompl
pop
cwtl
dec
mov
inc
mov
test
xchg
dec
dec
mov
enter
pushf
scas
fstps
xchg
notb
push
add
mov
ja
aaa
xor
pop
push
add
in
mov
xor
adc
pop
sbb
mov
sub
repz
ljmp
or
subl
hlt
aam
lock
and
insb
loop
xor
ja
movups
cmpsb
andnps
cmp
test
fwait
mov
lret
dec
jg
in
cmp
mov
cmp
stc
in
cmc
push
sbbb
cmpsl
jg
jno
outsl
aam
fwait
cmpsl
jmp
jbe
js
mov
mov
cltd
lret
sarb
cmp
push
sbb
scas
cmpsb
sbb
jbe
adc
nop
mov
mov
inc
fdivp
das
xchg
mov
lds
xlat
je
jmp
and
imul
jo
xrelease
mov
pop
pop
push
adcb
inc
scas
dec
xor
insb
push
adc
jno
mov
clc
repz
pop
stos
mov
jne
clc
or
pop
in
filds
add
pop
fcomps
addr16
lcall
inc
mov
out
mov
rcrb
push
aaa
mov
jg
lds
jmp
fimull
pop
lods
pop
outsb
ror
pop
mov
lret
xorb
sbb
stc
inc
push
push
dec
xor
lret
mov
outsl
xchg
xchg
fs
xchg
mov
mov
rcrb
adc
xor
and
adc
sti
or
aaa
popf
lret
sub
inc
dec
cmp
xor
in
cmp
mov
bound
xlat
or
add
ds
out
stc
mov
lods
dec
adc
or
ret
cli
and
repz
xchg
mov
dec
filds
hlt
insb
repz
cmpsl
jmp
inc
sbb
dec
imul
pop
push
adc
mov
int
add
xchg
enter
mov
fisubs
fists
dec
cmpsb
add
fisttpl
push
xor
mov
pop
and
jmp
sbb
dec
push
add
xchg
or
lcall
sbb
in
xorl
and
sbb
push
and
das
and
lahf
testb
sbb
add
int3
add
out
pop
jns
cmp
mov
mov
cmp
pop
aam
test
imul
push
shlb
push
xchg
repz
push
add
sbb
sbb
jnp
or
ss
repz
and
xor
mov
pop
xchg
repz
leave
mov
in
mov
xchg
lret
mov
in
mov
add
inc
lods
sahf
xchg
dec
inc
sub
into
pop
cmp
xlat
subb
push
rolb
int3
xchg
pop
mov
lods
sub
push
dec
adc
dec
push
rcrb
sbb
lret
test
dec
add
push
jno
enter
xor
ret
dec
int
stos
cmpsl
adc
jl
fistpll
cwtl
addl
dec
add
lcall
test
and
adc
cld
loopne
mov
out
mov
in
sbb
cmc
insb
cmp
shlb
shlb
loopne
inc
ret
add
pop
xor
xor
lods
xor
pop
mov
icebp
add
shr
mov
mov
or
out
lcall
adc
outsb
push
lods
sbb
aad
xor
inc
insl
repz
mov
adc
jns
dec
daa
jne
pop
cli
add
repz
mov
js
fistpll
ret
into
sub
mov
push
sub
xor
js
pop
mov
scas
jmp
into
int3
adc
mov
fsubrs
lods
jno
dec
ljmp
sahf
lods
das
jecxz
in
ss
pop
dec
imul
outsb
push
mov
iret
cmc
arpl
mov
or
sub
gs
lcall
js
lret
out
cmpl
push
push
fcmovb
dec
test
in
lods
fldt
mov
out
testb
jmp
sti
lea
testb
sti
fsubs
sub
pop
fs
outsl
mov
sahf
xchg
sar
in
mov
jne
arpl
cmpb
or
pop
inc
ja
adcb
int3
cwtl
mov
movsl
mov
mov
aad
rcrl
scas
cmp
cwtl
or
in
pop
in
push
inc
jecxz
fstpl
inc
lock
sahf
pusha
xchg
or
sub
loope
and
in
fwait
ds
fildl
inc
cltd
mov
inc
fstp
mov
mov
in
dec
out
es
pop
outsl
lds
inc
inc
push
cmpsb
pop
xor
pop
mov
cld
lcall
outsb
jmp
and
jg
and
or
and
test
mov
lods
clc
sub
sbb
push
leave
arpl
xchg
pop
scas
imul
mov
enter
repz
enter
pusha
mov
add
pop
mov
jecxz
inc
jbe
dec
add
mov
std
adcb
in
test
push
lcall
xchg
loop
sti
or
mov
push
insl
inc
pop
std
push
hlt
dec
mov
mov
out
xchg
aaa
fisubs
fsubl
sahf
lds
sahf
imull
xor
pop
clc
add
fcmovne
ja
gs
jae
jp
roll
ret
in
shrb
push
mov
jle
sub
add
getsec
fwait
aas
jb
icebp
inc
inc
subb
js
popf
movsb
popf
mov
push
cmp
fsubrl
dec
dec
stc
adc
or
lahf
lock
mov
pop
or
dec
xchg
or
lcall
push
pop
or
mov
jo
aas
rcll
mov
stos
push
iret
and
lret
cmp
dec
lock
push
fs
adc
inc
push
fiaddl
dec
pop
mov
xchg
and
or
cmp
mov
popf
cmp
sub
imul
jp
cmp
sbb
jno
push
shlb
push
xor
push
rcrb
adc
in
scas
sub
jns
bound
sti
outsb
repnz
and
xor
sbb
jae
shlb
fcmove
daa
or
cmp
in
push
in
add
push
mov
and
iret
pop
push
jno
fmuls
enter
jo
jl
dec
and
fldl2t
jae
and
inc
pop
arpl
push
xchg
stc
fildl
dec
iret
cmp
icebp
push
clc
dec
ret
lods
sbb
inc
imul
jbe
adc
or
xchg
push
cmp
les
aaa
repz
outsl
inc
sbbl
push
sti
fcmovb
movsb
lods
stos
out
sub
pop
loop
cmpsl
pop
bound
fs
div
daa
inc
mov
cmp
pop
dec
std
notl
das
jnp
ss
iret
and
xor
push
mov
jmp
add
out
or
or
adc
and
cmp
ret
jne
cmpsb
cmp
cmp
in
test
adc
add
sbbb
jo
rcll
push
lods
imul
sbb
nop
xchg
add
dec
dec
outsb
test
jo
adc
xor
xchg
iret
jge
ds
xorb
mov
sarb
sbb
into
cmp
fiadds
aam
or
in
push
lcall
xchg
faddl
or
sub
test
push
push
sub
add
outsb
cmp
stc
nop
test
mov
sarb
xchg
cmp
push
lret
dec
inc
pop
icebp
dec
jle
ds
data16
cmp
pop
or
sub
sahf
bound
add
cmpsb
sti
clc
mov
cmp
add
pop
movsb
cld
and
out
cltd
ss
aad
dec
cmp
push
or
mov
lea
mov
arpl
ja
sbb
ss
inc
mov
mov
xchg
std
xchg
inc
push
movsl
xchg
push
decb
jae
xchg
mov
xor
mov
mov
pop
sbb
push
push
cld
jge
push
repz
and
or
mov
xchg
fdivs
fildll
jmp
adc
lret
cmp
adc
sub
sub
ss
rcrl
ss
ja
cld
sub
mov
sub
mov
or
aam
out
fldcw
push
lret
filds
mov
clc
xchg
push
test
faddl
pop
shrl
and
scas
stos
hlt
loopne
cmp
repz
das
mov
pop
xlat
sbb
or
roll
mov
push
push
out
repnz
lea
aad
lahf
ret
nop
cltd
pop
bound
fcomip
sbb
in
loope,pn
mov
orl
pop
inc
cmc
jl
sub
push
mov
test
bound
mov
add
je
fisttpll
ret
pushf
int3
hlt
add
add
in
nop
inc
out
xor
xchg
jne,pn
fidivl
sti
fwait
inc
fnstsw
xchg
jp
aas
pop
adc
movsb
pop
jns
nop
cld
mov
lahf
mov
push
jg
out
popf
jb
push
jmp
push
mov
les
mov
mov
cmp
loope
add
dec
data16
dec
add
je
mov
mov
xor
push
sbb
cltd
cmc
xchg
dec
cmpsl
lret
mov
jmp
mov
pop
pop
pop
lea
es
mov
push
mov
sub
mov
jne,pt
int
nop
test
shll
push
jg
imul
stc
xchg
dec
dec
fistpll
stos
and
cs
pusha
inc
lea
repz
jmp
aam
mov
lds
out
inc
xchg
call
movsb
fldt
sbb
xor
cmc
dec
dec
cmc
xchg
movsl
sub
sbb
push
inc
pop
daa
ret
sbb
stos
push
push
xchg
mov
mov
je
loop
aam
lret
out
movaps
pop
inc
jno
xor
shr
dec
mov
and
push
pushf
cli
stos
iret
sahf
push
in
or
adc
cmp
loope
popf
and
fcomp
pop
jb
insb
jno
int3
sahf
fs
push
mov
dec
out
mov
sub
lahf
push
add
test
xchg
addr16
adc
xor
insb
cmp
xchg
out
cld
movsb
and
outsb
adc
dec
fistpl
or
sbb
popf
mov
ret
clc
mov
mov
and
frstor
andl
and
cmp
in
gs
gs
inc
push
fisubrl
loope
shrb
sbb
fdiv
xor
jecxz
dec
out
testb
mov
dec
arpl
dec
out
mov
push
and
push
int3
pop
shll
pop
into
lods
into
inc
sbb
add
mov
adc
lret
cmpsb
and
add
sub
mov
imul
mov
in
dec
or
push
js
scas
lret
inc
jg
mov
mov
sub
jne
pop
jnp
mov
clc
inc
mov
jmp
testb
imul
push
rclb
dec
lret
mov
add
sub
sub
xor
xchg
jmp
loop
mov
dec
out
cli
sbb
loopne
add
or
outsl
fistpll
mov
bound
jnp
mov
mov
mov
xchg
dec
lret
xchg
scas
mov
jecxz
sbb
add
inc
and
adc
in
sub
xchg
inc
nop
das
jbe
mov
jns
adc
int
stc
cmp
xchg
cli
pushf
in
stc
jle
push
lret
push
sbb
aam
dec
cwtl
dec
cmpsl
gs
sarb
dec
sahf
xchg
mov
out
cli
pushf
mov
mov
jmp
sub
xor
cli
je
mov
jnp
cmp
fisubrl
int3
stos
dec
test
jae
sbbl
hlt
es
mov
repnz
xor
mov
mov
shrl
add
cmpsl
mov
ja
sahf
mov
dec
push
mov
cld
arpl
enter
mov
cmp
scas
or
jne
adc
out
or
or
aaa
inc
and
adc
cmp
mov
inc
xor
es
rorl
divl
arpl
cmpsb
sti
cwtl
dec
cmp
ss
loope
jmp
dec
push
mov
rorl
es
jl
dec
ss
lcall
repz
sti
movsl
xor
popa
sbb
or
pop
pusha
xchg
outsb
inc
cmc
mov
cmp
jmp
mov
cmpsb
push
inc
ret
fisubl
xchg
pop
lods
dec
mov
mov
xchg
lret
call
xchg
pop
cmp
lret
fstpt
push
mov
jmp
aam
pop
jno
out
fldt
icebp
or
pop
outsl
aas
push
es
popf
dec
dec
pop
ja
push
daa
mov
mov
inc
lea
xor
jge
int
push
inc
cmp
sbb
cmpsb
pop
jle
mov
inc
push
loopne
mov
imull
loop
or
xor
xchg
and
dec
stos
iret
fwait
xor
push
ds
hlt
inc
aaa
bound
mov
mov
lahf
hlt
push
addl
add
pop
xor
cwtl
cmp
push
lea
sub
imul
xchg
mov
lahf
rcl
int
mov
add
leave
mov
dec
mov
jnp
jae
xor
bnd
push
xchg
add
inc
pop
rclb
or
mov
lds
or
stos
cmp
pop
lret
test
std
or
push
jae
rolb
mov
cs
xchg
lock
cs
lea
sub
dec
pop
pusha
or
and
dec
cmp
in
jns
std
outsb
xchg
out
pop
cmpsb
sub
xchg
notb
push
xchg
inc
das
xor
sub
xchg
cs
or
push
adc
ss
js
or
lods
or
insl
adc
les
jae
fs
andl
add
pop
and
sahf
in
arpl
es
pop
aam
in
andl
cmp
and
call
test
les
cmp
in
jecxz
sbb
enter
push
addr16
scas
jnp
int3
xor
js
fisttps
pop
sub
lock
js
xor
movsl
dec
pop
inc
negb
out
xchg
stc
imul
push
fadds
fmul
sbb
arpl
aad
sub
push
out
cmp
outsb
int
insb
xchg
out
sbb
xchg
negl
adc
data16
fdivrs
mov
inc
or
cmp
push
and
in
loopne
divl
stc
adc
test
cs
ds
push
xchg
call
stos
jl
mov
mov
cmpsl
test
mov
mov
stc
ficoml
jp
push
mov
daa
mov
sub
dec
stos
pop
and
cmp
pop
out
mov
test
ja
pop
in
mov
aaa
jle
push
jo
jae
nop
shl
mov
jne
outsb
arpl
repnz
pop
outsl
dec
icebp
jmp
jb
movl
fs
gs
dec
mov
jno
sti
adc
cwtl
jp
popf
cmp
xchg
aam
dec
inc
ret
loope
js
xorb
scas
dec
pusha
test
notb
aaa
or
and
push
and
std
pushf
adc
das
add
xor
notl
in
mov
push
insl
rcll
icebp
test
rolb
cmc
add
xlat
add
repz
adc
test
repnz
xlat
xchg
mov
mov
sbb
push
fisttpll
mov
std
add
fstps
movsb
adc
inc
imul
xorl
pop
adc
push
loopne
push
aad
icebp
mov
repnz
faddl
or
pop
mov
decl
mov
cmc
loope
inc
or
jbe
outsl
out
lea
ds
mov
fimull
pushf
and
popa
shlb
or
push
popf
fcoms
mov
dec
mov
pop
pop
stos
es
ja
out
adc
imulb
xlat
and
loope
mov
or
mov
push
popf
pop
dec
xchg
out
stc
dec
sub
jb
and
in
ss
adc
movsl
and
add
repnz
fildl
out
in
sub
dec
nop
mov
jb
add
je
cmp
mov
mov
mov
jns
push
aaa
jg
aad
pop
sbb
clc
cmpsl
mov
pop
in
hlt
push
lahf
nop
push
push
mov
out
jb
pop
pop
stos
js
bnd
outsb
mov
cmp
sbb
sub
popa
cmpb
mov
cmc
pop
mov
xchg
sbb
add
lahf
hlt
dec
in
arpl
mov
adc
pop
cs
mov
adc
popf
decl
xor
pop
push
adc
mov
fldl
leave
clc
jne
loop
aad
adc
jnp
xor
or
mov
mov
cmpsb
test
dec
xchg
push
pop
mov
je
jge
loope
fdiv
jmp
mov
mov
out
out
mov
cmpsl
scas
push
mov
sub
out
inc
fchs
jle
dec
fisubs
inc
cmp
jg
jecxz
mov
or
jmp
jmp
mov
add
dec
xchg
subl
xor
loop
cli
fildl
imul
ret
das
ret
add
and
push
les
mov
dec
adc
pop
add
mov
cmp
out
rcl
insb
ror
ret
sti
sub
dec
inc
push
pusha
xchg
dec
sub
into
sbb
pop
loop
in
or
push
mov
test
push
push
scas
fwait
mov
jo
push
sbb
lds
adc
xor
push
jnp
fnstenv
push
or
data16
and
stos
mov
pop
addr16
nop
aad
or
push
sub
outsl
xlat
sub
xor
jle
xor
xchg
adc
jb
das
je
movsb
mov
das
push
sbb
add
push
pop
das
mov
xor
insl
jle
nop
adc
cmp
mov
leave
sub
sti
stos
imul
inc
fsubrl
jecxz
lea
add
xor
push
xchg
mov
mov
sarb
bound
in
movsb
dec
push
pop
pop
pop
jle
std
cwtl
insb
sub
out
xor
and
dec
pop
leave
sub
and
mov
dec
adcl
push
jecxz
mov
clc
mov
jp
shrl
sub
mov
mov
xchg
pusha
xchg
fisttpll
push
mov
xchg
pop
or
adc
aad
aad
fsubrs
or
scas
popa
pop
out
sbb
xor
mov
push
inc
les
aas
dec
add
adc
xchg
ljmp
jp
cmp
je
loop
fwait
add
lds
push
jns
or
dec
add
jns
loope
mov
movsb
negb
test
inc
rcrl
ds
mov
lods
test
sub
adc
ror
aad
inc
cmpsb
or
cmpsb
lcall
pop
gs
pusha
mov
xor
jmp
call
mov
cmp
je
into
inc
fcoms
jo
mov
xchg
mov
clc
pop
lret
std
push
adc
cmp
xor
cmp
dec
idivl
outsl
lods
aad
addr16
xor
adc
aad
outsl
aas
adc
imul
daa
xor
orl
les
sub
and
push
mov
jne
ja
or
or
and
mov
or
in
pop
adc
mov
ret
cmp
fldcw
jno
insb
or
mov
data16
test
mov
inc
pop
mov
jecxz
mov
cmpl
xor
lahf
sti
inc
lcall
jo
mov
cwtl
mov
mov
sub
ss
outsb
in
push
stc
push
and
inc
aam
jns
cs
es
sbb
sub
push
pop
dec
xor
jmp
into
sub
outsb
or
mov
pushf
aad
push
jno
xchg
sbbl
mov
dec
push
or
das
sbbb
scas
popl
pop
xchg
xlat
add
cld
sbb
js
sub
push
xor
ljmp
mov
lods
mov
fwait
test
or
les
cmp
or
mov
add
sbb
sub
fwait
mov
mov
mov
jp
pushl
push
xlat
sbb
xchg
xchg
lcall
jbe
loopne
add
cmc
stos
mov
aas
sbb
outsl
jmp
or
dec
enter
dec
pop
push
xchg
fsub
and
clc
and
das
mov
or
aas
fs
lods
push
pop
and
cmpsl
mov
jnp
aas
pop
outsl
xchg
ja
lahf
aam
xchg
mov
jno
cmp
pop
mov
into
shll
push
outsb
xlat
mov
shll
addr16
cmp
xchg
rcrb
jmp
scas
inc
mov
xchg
bound
addr16
rcll
adc
pop
dec
fcomps
ret
mov
stos
das
lea
std
adc
inc
sbb
and
jae,pn
xor
rcl
push
adc
and
hlt
clc
xchg
cwtl
je
mov
jnp
cli
rorb
pop
and
and
ss
xchg
in
mov
adc
xchg
movsl
dec
shrb
mov
add
push
sbb
pop
push
test
imul
fxch
pop
push
adc
in
mov
add
into
out
into
inc
popa
xor
adc
and
sub
cmpsl
mov
push
add
mov
jp
cmp
rcrb
fsubs
mov
inc
stc
jmp
rorl
mov
add
jnp
repnz
jp
push
and
pop
xlat
aas
mov
cmp
aam
test
cs
jl
fmuls
adc
idivl
and
adc
out
add
jg
outsb
cmp
sbb
cmpb
lds
xchg
fucom
je
adc
push
mov
or
xchg
orb
rcll
sahf
push
adc
bnd
icebp
lret
pushf
inc
push
cltd
adc
adc
inc
jmp
push
sbb
sub
push
fsts
push
sbb
mov
in
and
outsl
mov
imul
je
fdivl
dec
jl
movsb
leave
scas
add
icebp
and
inc
ljmp
sub
mov
addl
jl
mov
in
sbb
mov
imul
push
cmpsl
sub
imul
int3
sub
sbb
clc
je
push
xchg
in
cmp
popf
aam
pop
daa
add
inc
rorb
dec
mov
jecxz
xor
scas
push
jb
rorl
xor
jmp
testl
dec
and
shrl
mov
in
loope
xchg
pusha
pop
mov
sub
xchg
daa
imul
xor
xchg
rcr
jg
or
xor
xchg
dec
hlt
inc
lods
cmp
hlt
push
negl
cmc
lds
jb
adc
in
decb
sbb
jo
adc
mov
idivb
jnp
icebp
push
adc
mov
sbb
repnz
sub
test
mulb
nop
mov
lock
jge
add
in
push
divb
jle
lods
aad
cld
or
jo
add
out
pop
add
repz
lret
push
out
outsl
dec
add
xchg
fnstenv
add
mov
in
sbb
or
inc
push
rcpps
imull
lea
push
jg
sbb
jae
into
mov
out
popa
pop
into
xchg
jbe
mov
adc
or
ret
adc
add
scas
rol
push
sti
jp
aam
rorl
sub
movsl
loop
cmp
and
or
inc
hlt
push
test
cwtl
add
mov
xchg
jmp
mov
xchg
je
jp
fldcw
jns
cltd
data16
xor
and
cmp
jmp
repnz
jg
ret
orl
cs
add
or
js
mov
jnp
popa
adcl
or
mov
or
fcoms
sbb
clc
stos
and
inc
sbb
mov
cli
sbb
pop
outsb
jo
rcrb
dec
sti
popa
movsb
aam
push
iret
mov
mov
xlat
shr
cmp
mov
mov
mov
cmp
jae
jb
adc
inc
cmp
and
fcmovne
test
clc
xchg
ret
test
pusha
rolb
or
sub
lods
and
add
or
push
aad
fwait
dec
mov
arpl
stos
sub
lcall
sub
add
sub
add
sub
test
or
hlt
mov
jnp
test
psubusb
daa
sahf
jmp
add
push
mov
movsl
lods
and
out
stc
mov
pop
bound
add
arpl
cmc
cmc
sub
inc
cmp
rcrl
adc
test
cwtl
call
cmp
add
out
scas
cwtl
or
xchg
shll
rorb
push
stc
add
mov
fimull
inc
dec
dec
xor
cltd
stc
pusha
xor
nop
jl
cmp
pop
and
movsb
dec
leave
arpl
adc
shlb
into
orl
xchg
stc
push
mov
mov
sbb
cmp
loope
and
cld
inc
arpl
mulb
outsl
rorl
push
rcll
test
in
fldl
dec
cmp
cmpsl
push
push
mov
jle
fcompl
sbbl
sub
clc
inc
jbe
daa
aaa
mov
cltd
and
fsts
lret
mov
add
cmp
in
mov
lds
shrb
pop
es
ljmp
std
fs
mov
lret
pop
incl
aam
cwtl
movsl
lods
into
jmp
flds
adc
enter
dec
push
adc
push
enter
or
gs
mov
push
pop
jae
divl
call
mov
clc
cmp
mov
add
add
or
inc
stc
and
vandpd
sub
loop
mov
call
lds
sti
ret
push
lea
lods
add
adc
aam
out
bound
sbb
pop
dec
stos
test
dec
scas
in
dec
les
andb
in
cmp
mov
or
sbb
aam
mov
pop
mov
xor
inc
iret
mov
test
shrb
scas
push
mov
in
mov
cs
cmpb
subl
aas
sub
test
jae
xlat
mov
sbb
jp
push
inc
inc
filds
xor
dec
iret
enter
sub
pop
pop
into
cli
popa
mov
ss
cmp
and
xor
bound
or
dec
pop
arpl
mov
dec
pop
enter
sub
aas
cli
div
scas
les
lock
mov
or
gs
dec
cmp
xor
mov
push
add
cmp
ficoms
mov
adc
ss
insl
ljmp
pop
enter
insb
jb
test
popa
jno
cmpsw
push
fidivs
mov
clc
lea
jl
hlt
fnsave
incl
js
jno
sbb
or
or
xor
jge
out
bnd
xchg
inc
mov
jmp
sub
push
push
dec
sbb
inc
sub
or
inc
insl
fisubs
mov
dec
xor
jl
mov
data16
and
fsubs
cwtl
icebp
repnz
repnz
pop
or
cmp
mov
insb
or
sub
in
nop
cs
cmpb
push
mov
mov
ja
nop
dec
in
dec
and
pop
sarb
xor
repnz
pushf
or
mov
add
pop
and
pop
mov
stos
in
ror
add
aaa
addr16
testl
pop
pop
aam
mov
dec
rorb
jns
test
shrl
daa
hlt
xchg
or
jnp
pop
mov
int
cs
sub
nop
movsb
inc
call
adc
insb
xor
movsb
inc
fldenv
jb
test
insl
pop
lret
jp
mov
mov
sub
mov
cmp
inc
ffree
xchg
mov
aam
sub
aas
iret
ret
rcll
dec
insb
jae
mov
in
out
nop
mov
mov
xor
jge
adc
sbb
pop
adc
add
lods
jae
pop
xor
inc
aas
push
cli
push
or
pop
dec
cli
add
mull
nop
stos
in
ds
mov
popf
in
mov
insb
sub
outsb
cmp
icebp
jbe,pn
jecxz
xor
sbb
pop
or
lock
call
mov
inc
push
jmp
inc
mov
fwait
inc
je
jno
subb
xchg
mov
pop
or
mov
xor
out
mov
mov
mov
faddl
dec
mov
inc
int
sahf
loop
hlt
add
inc
add
push
sti
mov
jmp
jp
mulb
loope
movsb
pop
fisubl
mov
mov
test
bound
xchg
cmp
jge
pop
dec
dec
push
bound
jecxz
and
mov
ja
xorl
shlb
adc
imul
mov
push
or
jp
es
lods
push
cltd
sub
int3
jns
mov
xchg
popa
call
xor
sbb
lret
cmpsl
mov
sbb
icebp
lret
out
cmpsl
sahf
mov
insl
int
mov
cld
and
jmp
jmp
jnp
aaa
out
fnsave
sub
sub
pop
cmp
push
fisttps
cmp
jne
push
inc
dec
fdiv
cli
pushf
lahf
jmp
and
xchg
fwait
mov
pop
mov
lods
fildl
add
cmp
inc
maskmovq
mull
cmp
icebp
aam
push
sbb
lock
aam
call
movsb
dec
cwtl
js
insl
adc
sahf
mov
xor
in
xor
xlat
packssdw
or
lea
fwait
xchg
mov
aas
dec
xchg
pop
mov
pop
loopne
pop
inc
adc
clc
fimull
ds
push
xchg
sub
int
call
mov
enter
push
xchg
je
fs
lahf
imul
fs
imul
in
js
ja
ret
lods
lods
xchg
in
mov
cmp
xchg
cmpsl
push
imul
and
icebp
adc
into
jo
leave
scas
sti
repnz
into
push
xlat
jne
cld
es
dec
push
jp
idivb
mov
mov
nop
inc
out
or
cwtl
push
mulb
xor
mov
je
push
and
pop
in
mov
movsl
lock
push
stos
lcall
pop
fwait
sbb
scas
arpl
add
push
and
sub
popa
mov
shrl
mov
sub
es
push
add
adc
or
pop
sarl
or
into
rdpmc
push
std
hlt
inc
pop
mov
push
adc
gs
es
clc
movb
movsb
mov
push
add
lahf
pop
mov
jns
xor
add
adc
xlat
jle
xchg
pushf
out
dec
frstpm(287
sub
sbb
ss
jno
ljmp
adc
xchg
xchg
dec
ret
pop
lea
out
mov
loopne
cltd
jmp
daa
sar
dec
fwait
out
scas
imul
ds
cltd
ja
fistpll
mov
push
fsubs
sbb
lahf
test
push
jae
mov
xlat
adcb
mov
jns
mov
cmp
lods
xchg
sbb
xchg
nop
test
add
push
add
into
sbb
mov
iret
hlt
and
sub
mov
push
mov
xchg
test
movsl
imul
add
pop
clc
mov
and
mov
mov
sbb
cmp
or
add
test
outsl
sti
ds
out
mov
cs
xchg
mov
xchg
pushf
adc
popf
and
mov
addr16
test
xchg
mov
inc
cmp
out
cwtl
insl
cli
call
dec
mov
ficompl
nop
in
shlb
arpl
pop
call
mov
rclb
mov
ret
cld
shrl
push
je
mov
sub
es
stos
xor
add
adc
fwait
push
int3
imul
mov
cmpsb
mov
lret
jns
test
pop
cli
mov
mov
lret
or
jle
lahf
addr16
inc
sub
aad
aas
sub
inc
clc
inc
sahf
shr
mull
xchg
jne
adc
outsb
addr16
out
jno
push
and
sbb
mov
hlt
in
xor
jmp
sbb
adc
xchg
pop
jmp
dec
cmc
iret
cmp
movl
sbb
inc
pusha
push
lret
inc
pop
aad
out
jecxz
add
sub
in
push
xorl
jns
aas
cmp
jno
or
lods
mov
hlt
iret
adc
cltd
mov
les
pop
sti
je
inc
dec
xor
mov
inc
mov
push
ret
push
xor
shll
movsb
les
enter
in
mov
xlat
push
ficompl
mov
xlat
xchg
data16
out
lods
rcr
cld
jge
fcoms
in
lods
and
movsb
mov
jo
aaa
dec
push
jae
gs
dec
out
das
adc
pop
add
xchg
dec
sub
icebp
cwtl
test
fwait
jne
jle
enter
ja
scas
pop
inc
dec
std
pusha
dec
rorl
test
pushf
out
out
decl
cmp
pop
xlat
jo
dec
aad
pop
xor
es
addr16
mov
call
adc
out
mov
lock
shl
xchg
icebp
imul
mov
xorl
int
sarl
or
in
cmpsl
pop
ss
cli
pop
rcrb
mov
out
loopne
mov
cmpl
dec
leave
fldenv
mov
jg
mov
iret
addl
fcmovb
push
popf
xor
scas
pop
jle
sbb
jnp
cmpsb
xor
fstp
xchg
mov
jns
jmp
inc
adc
dec
fsubs
les
stc
nop
cmpsl
out
push
xchg
lock
adc
xchg
adc
xchg
ret
dec
pusha
push
pushf
in
movsb
fnstcw
stc
outsl
cmp
fprem1
pop
push
cmp
out
jge
and
add
mov
push
inc
cmp
add
or
dec
cwtl
push
leave
test
sbb
cli
jne
es
or
xlat
inc
rcr
out
cmc
cmp
add
aas
decb
lret
sbb
out
push
xorl
lret
ja
push
aaa
jbe
daa
inc
fsubs
dec
pop
icebp
andl
mov
pushf
cmp
popa
rcll
mov
mov
adc
stos
cmpsb
adc
xor
push
lods
ror
shl
mov
add
subl
cmp
push
or
cmp
fsubp
mov
pop
sbb
gs
stos
sbb
jnp
mov
mov
fisubl
cli
ja
cmpsl
sbb
push
jle
cmp
push
and
ret
aas
mov
mov
jle
xor
push
iret
hlt
imulb
ret
roll
stos
mov
nop
movsl
xor
pop
rorl
mov
lods
mov
xor
and
mov
fidivrs
sub
int3
jle
das
movsb
pushf
jo
sti
pusha
push
shrl
sbb
shlb
and
jg
jp
xchg
pop
or
push
out
in
cmpsl
mov
push
adc
mov
xor
lock
cmp
dec
and
mov
fiadds
xchg
scas
in
push
cmc
subl
and
xchg
sub
int3
fsts
insl
and
ja
jg
cmp
clc
das
xchg
ret
inc
sub
lods
and
jge
pusha
cmp
int
insb
je
int3
repnz
insl
sub
mov
mov
push
andl
inc
das
into
gs
rep
fmull
lods
out
idivb
in
mov
mov
and
into
inc
sbb
cmp
jnp
push
pop
xor
jns
sbb
jne
roll
push
fdivrs
movsl
sub
je
cmc
mov
cmc
add
popf
pusha
aam
mov
push
add
and
lahf
test
out
mov
mov
stos
sbb
mov
pop
sub
and
stc
push
imul
xlat
lds
add
inc
out
and
push
stos
mov
sarl
enter
push
je
or
xor
dec
mov
mov
out
pop
adc
pop
sbb
and
mov
cmp
test
ret
ss
and
inc
xchg
ljmp
jnp
add
in
push
cli
stos
push
fidivrs
inc
add
jmp
and
fisttpl
in
in
or
clc
adc
gs
mov
and
flds
fdiv
lret
xor
cmp
mov
inc
out
add
roll
pop
lds
or
loopne
sub
ret
sbb
mov
loope
and
or
or
ret
ffreep
xlat
ds
dec
pop
and
ljmp
les
or
ficompl
sub
and
pushl
and
push
bsf
fadd
jae
or
adc
push
pop
cli
adc
into
push
bound
mov
ja
addb
lea
pop
lds
jp
test
popf
add
dec
pop
ja
cmc
dec
in
mov
pop
xor
std
sub
xor
mov
sahf
fisubs
sbb
xor
popa
lret
out
ficoml
push
mov
push
xchg
test
push
rcrl
mov
jl
mov
xchg
or
dec
movsb
jle
int
push
mov
ja
aas
addr16
lods
push
mov
gs
fwait
sti
push
cli
push
push
test
ljmp
mov
sub
pop
push
das
cld
icebp
fsubl
push
gs
sub
imull
inc
aam
loop
xchg
xchg
inc
sbb
sub
sar
mov
popf
sub
mov
icebp
dec
sub
ja
out
cs
fisubrs
fwait
nop
push
dec
cld
dec
aam
or
mov
sub
and
jge
lret
xor
data16
jge
in
cltd
xor
in
mov
sbb
xor
lds
int3
ja
and
add
jnp
dec
jmp
xchg
je
inc
cli
sahf
imul
leave
push
cmc
pop
cwtl
aam
pop
sahf
sbb
cmp
sti
dec
xor
pop
pushf
icebp
fcomip
pop
xchg
ss
inc
dec
mov
and
xchg
cltd
cmpsl
sub
cs
xor
movsl
inc
dec
sub
scas
fldl
pop
int3
mov
cmpsb
addr16
or
lea
xchg
imul
xor
push
mov
jo
inc
fsts
repnz
xor
dec
jmp
pusha
adc
dec
fistpll
sbb
leave
jae
icebp
dec
sbb
inc
loop
jo
or
cmp
int
mov
shlb
out
mov
push
pop
nop
aad
dec
call
jnp
pop
mov
and
or
push
popa
scas
sbbb
mov
xor
pop
dec
cltd
mov
inc
jecxz
adc
lods
call
ja
sbb
mov
pop
jns
xor
dec
or
fdivl
mov
inc
jns
xchg
mov
sti
mov
jecxz
push
cmp
cmp
sbb
xor
icebp
loope
mov
out
sbb
push
testl
xchg
push
fimull
inc
std
in
mov
movsb
xchg
jo
repz
adcl
mov
cs
scas
xchg
inc
stos
cmpxchg
pop
inc
mov
fcoml
cmp
push
add
sbb
fisubl
imull
lds
mov
aaa
lds
pop
loopne
test
push
cli
dec
out
push
shrl
mov
scas
arpl
sub
dec
js
jbe
cmpsb
push
cs
aas
int3
push
push
out
stos
and
or
push
fstps
inc
cmp
jmp
test
aaa
dec
mov
jle
leave
or
jle
lock
inc
sbb
data16
loop
daa
das
dec
jbe
insb
pop
les
ja
fiadds
xchg
dec
mov
pop
pop
xchg
js
inc
lods
stc
inc
lcall
jo
dec
push
std
arpl
xchg
adc
addr16
dec
inc
mov
int3
mov
add
sbb
push
xchg
jae
sbb
sarl
add
sahf
lcall
mov
push
push
push
jmp
cmp
imul
cmp
inc
and
dec
aaa
in
cmpsb
dec
ja
push
add
sbb
pop
ss
dec
mov
sub
sbb
pop
popf
mov
out
xor
and
add
mov
cmp
jne
loop
xchg
add
jno
lock
add
fstl
mov
mov
es
imul
sbb
in
int3
add
sbb
cmp
push
sbb
pop
or
mov
popf
testl
insb
add
repnz
mov
or
fsubrs
repnz
cmp
push
aam
frstor
roll
insl
pop
in
movsl
and
cwtl
pop
inc
nop
pop
popf
hlt
xlat
insb
add
jle
mov
xor
aam
jecxz
test
das
and
rcrl
cmp
lods
sahf
or
xchg
inc
mov
pop
fiadds
sub
pop
fnsave
cmp
out
cmpsl
flds
lea
pop
dec
lea
add
adc
push
mov
sub
popf
aad
mov
sub
mov
jp
push
icebp
popf
push
sub
stc
iret
inc
lods
jne
xchg
jmp
pop
xor
dec
loopne
mov
cmp
jl
vpsraw
pop
jecxz
push
sbb
push
jne
ret
daa
sub
scas
int3
adc
stc
mov
fidivrl
imull
movsl
jae
loopne
cmovbe
dec
cwtl
lahf
sbb
in
movsb
arpl
bnd
or
je
fbstp
mov
pop
subb
cmp
push
or
std
mov
inc
add
push
cli
sub
jge
test
jmp
sahf
stc
sbb
add
push
shlb
push
jno
mov
push
pop
outsl
iret
jo
mov
fsts
or
push
orb
xor
leave
adc
scas
std
dec
mov
stos
mov
jle
xor
push
xor
pop
fimuls
hlt
inc
xchg
enter
aas
jae
dec
cs
shlb
cmc
mov
xchg
xchg
aaa
daa
jo
shlb
andb
cmp
outsl
js
gs
cltd
aas
stos
push
testl
pop
loope
pop
mov
stos
out
xchg
sbb
and
mov
xor
cmp
adc
and
gs
ljmp
or
clc
adc
test
mov
pop
rol
fisubrs
mov
ds
je
xor
cmp
out
out
inc
in
shr
mov
ja
popf
data16
sub
inc
and
or
stc
sbb
push
or
insb
inc
cs
lods
dec
or
sbb
in
out
dec
ljmp
push
pop
je
xchg
xchg
int
stc
xchg
pop
push
sbb
push
loopne
mov
pop
sub
orb
in
aam
push
mov
xchg
mov
data16
or
sub
into
pop
ljmp
bswap
sub
pop
and
mov
shr
les
testl
sbb
gs
decb
cltd
fmul
lds
int
adc
mov
cmpsl
faddl
cmp
sub
adc
cmpsb
sub
push
cmp
movsl
mov
std
xchg
xchg
popf
dec
popf
push
sub
stos
in
adcl
shll
shrb
mov
or
inc
outsl
cli
imul
pop
shrb
ficompl
pop
lock
out
mov
push
pop
adc
or
and
shrb
or
sarl
or
in
loope
icebp
jmp
mov
push
fwait
push
mov
push
xchg
and
sub
cmpsb
xor
cld
jbe
pop
pop
ficompl
jg
push
gs
arpl
sahf
mov
test
xchg
xchg
clc
pop
sub
mov
hlt
push
out
test
imul
mov
pushf
adc
dec
pop
add
dec
scas
jno
push
loope
mov
inc
inc
xchg
in
mov
sub
or
fmull
xchg
mov
jbe
jp
xorb
insl
lcall
jmp
and
mov
adc
mov
enter
mov
push
xor
pop
jl
adc
aas
jg
jo
jmp
outsl
cmp
add
int3
pop
rcrl
pop
inc
jne
jecxz
shlb
jmp
and
leave
adc
fcmovu
dec
fldz
cmp
in
and
fimuls
cwtl
jne
fistl
cld
dec
dec
imul
jo
divb
inc
lcall
jbe
fcmovnb
mov
add
mov
mov
sar
insb
dec
adc
hlt
pop
pusha
in
lret
popf
daa
add
sar
imul
push
stos
mov
fnstsw
ret
sahf
gs
mov
adc
cld
lods
outsl
mov
out
push
jmp
and
and
es
mov
in
and
push
or
mov
sbb
mov
jmp
mov
imul
test
flds
jnp
inc
push
icebp
cltd
cld
ds
dec
mov
and
ret
or
mov
repz
jmp
jle
add
vmwrite
js
mov
aad
into
cmp
inc
sub
or
push
mov
xchg
xor
imul
mov
dec
sub
iret
repnz
mov
pop
bound
into
lcall
sbb
mov
adc
add
adc
imul
repnz
fadd
lock
insb
fdivl
lock
cld
loopne
or
mov
mov
enter
sub
outsb
pushf
mov
pop
xorb
stos
sub
testb
aad
add
adc
cwtl
pop
sub
sbb
fisubl
std
xchg
int3
iret
cwtl
pusha
pop
and
jecxz
mov
inc
mov
push
and
mov
arpl
out
xchg
sub
in
dec
negb
pop
mov
lock
pop
pop
int3
mov
sti
loopne
rorb
jl
repnz
mov
xchg
dec
jnp
cli
xchg
lret
aad
lds
outsb
jnp
jge
shlb
cmp
fs
cld
pop
ljmp
or
adc
stos
int3
xor
sbb
leave
rcll
mov
test
int3
xchg
filds
dec
or
pop
lds
cld
adc
faddl
mov
scas
lea
adc
push
fcoms
orb
lods
ret
ss
mov
cmp
cs
mov
and
insl
lret
dec
test
outsb
xchg
xor
adc
jl
mov
sarl
fldenv
popa
jo
dec
lea
or
filds
and
mov
cld
dec
jb
movsl
mov
xchg
jge
mov
cwtl
push
mov
mov
int
push
or
icebp
inc
test
test
xchg
jnp
adcl
stos
and
mov
xor
and
push
cwtl
push
xchg
pop
icebp
push
xchg
es
cmp
cmp
test
pop
dec
jl
xchg
adc
inc
into
pop
pop
jmp
popf
xor
shrl
loope
mov
add
mov
add
cs
sub
pop
mov
pop
mov
xchg
in
inc
shrl
outsb
insl
shl
js
es
imul
pop
orl
or
dec
xor
jge
inc
icebp
xchg
cmp
fiadds
ja
inc
or
push
out
and
rcrl
out
xchg
in
or
lret
ljmp
mov
lret
bound
pop
call
sub
rorb
jl
or
std
jb
push
cmp
jl
add
inc
in
cmp
in
push
cmp
sti
jmp
xchg
xor
cwtl
sub
xchg
mov
inc
outsb
cmp
mov
fdivp
cwtl
cmpsl
lea
mov
mov
push
lret
les
call
cmp
inc
jns
pop
outsl
and
sbb
adc
movsb
mov
adc
in
arpl
jmp
push
pusha
mov
scas
mov
adc
sahf
sbb
sbb
push
sub
and
push
lods
jbe
nop
inc
adc
fsubl
test
scas
int3
call
divb
jnp
aas
adc
mov
xchg
test
pop
sbbb
mov
jns
or
test
mov
not
leave
ss
or
sbb
pop
push
int3
daa
scas
mov
or
outsb
jne
sub
mov
cmp
dec
js
mov
mov
push
rcrl
push
xor
cmpsb
cmpsl
and
pushl
sub
adc
js
pushf
mov
inc
add
adc
orl
aad
shl
push
fdivrl
add
outsb
jge
in
mov
pusha
adc
inc
mov
adc
shr
scas
in
sub
rol
bound
lcall
dec
xchg
pop
or
cmp
sbb
stos
ror
push
jne
xor
fsubs
cmp
scas
ss
sahf
push
and
ja
and
fiaddl
clc
jne
sub
push
jo
sbb
push
mov
add
xor
xorl
pop
jnp
into
arpl
cwtl
sar
lock
jle
mov
sub
lods
pop
cmp
mov
mov
inc
or
pop
movsb
in
mov
pmaddwd
clc
stos
insb
pusha
lea
xchg
test
sarl
sbb
pop
and
out
or
movsl
dec
adc
lahf
sahf
push
mov
xor
mov
shll
xor
sub
mov
push
pop
shlb
enter
sub
arpl
imul
push
std
mov
fistpll
adc
loopne
pop
cltd
and
mov
pop
jo
cmp
int
repz
cmp
mov
xor
xchg
movsl
jno
cmp
nop
xorl
dec
push
mov
adc
dec
roll
daa
arpl
jge
test
out
mov
int
pop
arpl
aad
mov
sti
xor
lcall
jno
push
roll
aaa
xor
lods
xor
imul
negb
das
xor
imul
sub
mov
push
repnz
xor
mov
and
sar
aaa
sbb
jns
daa
sbb
in
in
push
lds
std
insl
in
pop
inc
and
adc
pop
std
and
movsl
pop
jne
push
sti
incb
add
or
aam
sub
icebp
pop
dec
in
stos
or
imul
mov
xchg
xor
fwait
into
push
ss
dec
rorb
xor
mov
loopne
sub
mov
shlb
xor
lahf
jge
jns
sahf
xchg
out
fwait
mov
fdivl
sbb
clc
dec
adc
dec
pop
mov
outsl
jns
push
lods
lods
xor
andl
ret
cltd
xchg
ficompl
mov
stc
adc
test
test
dec
insl
jmp
push
nop
add
jl
jle
sbbb
xchg
andb
aad
mov
mov
test
fistl
cmp
cmp
cmp
lahf
jmp
pause
divb
bound
sti
dec
in
jmp
jb
xchg
out
jg
xor
ret
add
sbb
mov
pushl
or
addb
push
cmp
adc
icebp
rep
sub
sbb
mov
sahf
rol
mov
adc
cs
inc
jmp
mov
nop
repz
mov
shl
les
jb
ret
out
cmp
jl
lods
pop
inc
int3
xor
or
adc
sbb
cmpsb
dec
and
cmp
push
jp
dec
int3
lods
and
mov
pop
mov
pop
jae
xchg
out
insb
xchg
sbb
adc
movsl
nop
ss
adc
clc
rcrl
outsb
inc
push
xor
inc
pop
add
insb
clc
and
xchg
inc
lret
xchg
dec
sbb
mov
sub
cld
mov
push
sbb
mov
ret
rorb
xchg
mov
lods
daa
outsb
pop
lods
mov
xchg
mov
or
xor
jle
addr16
enter
shrb
cwtl
pop
test
pop
std
xor
leave
daa
sub
jbe
mov
or
daa
xchg
orb
jno
test
sub
cmp
call
push
add
pop
icebp
scas
insb
int
jge
pop
call
dec
inc
pop
ret
inc
mov
jns
sbb
out
and
push
ja
jno
mov
aaa
dec
mov
imul
ljmp
mov
push
in
xchg
pop
jle
rcrl
loop
inc
jns
xorb
stos
adc
jg
xchg
pop
mov
xlat
int3
pushf
divb
jno
add
lds
mov
pop
movsl
mov
jbe
jb
lock
xchg
movsl
andb
nop
cmpsl
dec
jns
les
push
jmp
es
mov
nop
push
mov
inc
ja
mov
dec
nop
ret
xchg
test
jecxz
add
add
rcl
mov
in
cli
xor
vmovsd
fcomps
adcb
adc
jne
pop
mov
inc
push
add
mov
lret
lea
or
sbb
mov
add
arpl
pop
jmp
rclb
fs
xor
dec
sub
sbb
cmp
cs
loope
mov
push
push
inc
push
xchg
xor
subl
pop
pop
jmp
inc
clc
lods
cwtl
sub
sarl
repz
add
cwtl
mov
mov
mov
xchg
das
addr16
pop
sub
aaa
aad
lock
mov
dec
mov
dec
es
mov
jl
pop
pop
add
push
andb
cmp
ja
shl
mov
adc
adc
ss
lea
daa
cmp
jecxz
jmp
dec
mov
push
or
scas
inc
push
fsts
clc
dec
lods
inc
loopne
xor
xor
insl
int3
imul
test
pop
mov
mov
cmpsl
push
shl
xor
fwait
mov
or
xor
cs
add
and
pop
cwtl
inc
add
out
xchg
adc
xchg
mov
popf
sbb
divl
jns
cmpsb
shrb
pop
pop
aad
aas
jmp
and
mov
int
lods
fwait
and
add
jbe
push
jmp
js
mov
int
iret
inc
jne
dec
iret
jne
test
fdivrp
into
mov
ljmp
mov
ljmp
sub
fs
call
push
push
inc
adc
dec
test
mov
addr16
add
int
sbb
jmp
test
fisubrs
mov
sbb
js
fisubrl
mov
icebp
pop
sub
leave
xor
push
jbe
cmovle
fistpl
mov
cltd
adc
scas
repnz
ss
add
cmpsl
sbb
clc
loopne
sti
shr
movsb
lds
leave
test
cld
lea
je
dec
icebp
lahf
out
or
jge
add
test
dec
jl
les
mov
std
repz
lods
fs
sbbb
cld
dec
lods
lcall
jbe
mov
dec
mov
insb
xchg
cmpsb
movsb
arpl
gs
repz
cltd
leave
mov
cwtl
adc
lock
xlat
push
mov
xchg
adcl
adc
fcompl
or
jns
mov
cmpsb
insb
or
adcb
dec
cmp
push
push
add
jns
cmc
ljmp
sub
cmp
mov
add
lret
fsubr
mov
outsb
adc
int
dec
add
fildl
sbbl
popa
cmp
pushw
sbb
loope
test
mov
in
int
jbe
fimull
int
sbb
sub
inc
push
pop
repz
mov
xchg
das
daa
cmp
push
xor
out
mov
cld
push
or
pop
repz
jle
sbb
pop
repnz
das
cwtl
pop
inc
pmaxsw
adc
js
xor
push
dec
popa
test
add
test
add
fisubrl
inc
outsl
jno
idivl
cli
sub
fisubl
fiadds
and
shll
sub
cmp
fistpl
pop
test
pop
pop
cmpsl
loopne
jp
fsubrs
lods
jle
sbb
out
flds
in
jle
or
js
insb
xchg
jg
int3
jnp
push
jecxz
enter
push
mov
lock
movsl
fdivrs
pop
xchg
icebp
gs
lods
xor
adc
imul
test
add
stos
mov
or
sahf
sbbb
push
hlt
mov
adc
pop
pusha
xchg
in
mov
test
xchg
cmp
or
cld
add
je
arpl
fstpt
stc
dec
jmp
cmp
adc
fmuls
add
lods
out
cmp
leave
mov
cs
mov
adc
jg
and
xor
or
test
inc
and
and
insb
cmpsb
nop
stc
imul
sbb
sub
sub
data16
cmp
out
imul
or
les
out
xchg
fwait
bound
pop
pop
cmc
fcmovne
add
push
sbb
xchg
icebp
lcall
jge
push
mov
push
into
popa
inc
mov
ja
and
cmp
int
icebp
lods
lret
in
and
inc
or
pop
nop
add
imul
adc
dec
pop
add
scas
xchg
fisttps
sub
push
xor
mov
and
mov
jne
pop
dec
es
call
scas
sub
adc
lods
inc
fucomip
push
and
xchg
dec
nop
mov
pop
mov
imul
lods
mov
jno
jle
push
lahf
dec
inc
mov
mov
or
paddsb
push
hlt
dec
shlb
mov
sbb
aam
sub
xchg
sbb
inc
jge
mov
int3
js
adc
enter
js
push
jmp
loope
cs
sbb
mov
js
push
jo
pop
pop
and
mov
jg
in
sub
imul
sbb
lods
outsl
out
sub
outsb
dec
imul
test
aam
jecxz
sbb
mov
cmp
adc
jo
iret
and
and
divl
out
add
mov
decb
insb
nopl
xchg
into
pushf
ja
repnz
mov
sub
pop
arpl
push
mov
mov
mov
xor
je
push
repz
jecxz
inc
ss
pushf
mov
gs
sarl
leave
adc
scas
inc
xchg
out
and
jp
mov
lds
lret
call
jo
mov
pop
pop
sub
jle
add
inc
and
pop
xor
test
icebp
pop
repz
sbb
adcb
xchg
sbb
test
cld
xor
sahf
mov
xor
les
ljmp
sub
ret
push
and
xor
mov
push
lock
gs
int
popf
cld
xchg
mov
cmp
pop
and
cmpsb
sub
cmp
push
insb
push
lret
rclb
cmp
cmp
cwtl
pop
adcl
dec
test
in
clc
insb
lahf
push
push
iret
push
leave
insb
fadd
jno
push
pop
jnp
sub
cmp
xchg
in
push
insl
mov
pop
cmp
insb
push
sti
rolb
bound
dec
sbb
cmpl
int
icebp
and
or
xchg
adc
cmp
xor
or
aad
sub
negb
in
stos
adc
rcr
lahf
push
and
lret
fidivrl
jp
and
stc
dec
push
cmp
sub
sbb
or
insb
bound
lea
add
inc
xchg
hlt
aam
dec
fildl
pop
das
je
xor
cmp
cli
imul
fldenv
mov
cmc
pop
mov
fs
in
ret
pop
adc
cmp
mulb
jbe
and
cmpsl
mov
mov
push
vpackuswb
adcl
or
stos
add
das
adc
aam
mov
dec
cltd
les
popf
sbb
addb
rorl
lcall
ja
jno
lods
enter
jp
xchg
and
sub
fcoms
mov
or
inc
add
mov
and
push
mov
sub
inc
aas
inc
sti
cmp
cmp
and
arpl
and
xor
sub
mov
rcrb
out
test
pusha
cmp
inc
xor
dec
negb
mov
sub
jns
fdivrs
std
leave
stos
lods
fs
or
cli
jecxz
out
sbb
sahf
in
add
jae
mov
inc
jge
icebp
cmp
dec
mov
inc
adc
mov
mov
add
mov
jns
adc
lods
xchg
enter
sar
dec
cmp
int3
cmp
ud2
pop
dec
jne
jo
insl
xchg
js
bound
js
xchg
cmp
pop
inc
mov
pop
aas
push
sarb
xor
inc
mov
sti
sbb
repz
scas
push
aad
out
dec
mov
aad
mov
cld
pop
and
xorl
jb
inc
jg
xchg
dec
rcr
lcall
hlt
and
sub
jecxz
push
mov
outsb
sahf
inc
mov
cmp
cmpsb
push
adc
lret
mov
mov
pop
sar
push
mov
outsl
dec
xchg
les
out
sbb
cmp
add
int
fldcw
cmc
xchg
jle
jae
or
lods
sbb
push
rol
int
sbb
xchg
jne
push
sbb
cmp
cmc
inc
pop
mov
pushf
movsb
aaa
jmp
xchg
xchg
add
or
std
ds
jae
jne
mov
addl
orb
mov
mov
call
movsl
xchg
sub
xor
mov
loop
jae
mov
push
aam
test
or
ffree
mov
cmp
add
and
loope
stc
add
pop
mov
mov
mov
add
scas
sub
enter
fldenv
test
sub
push
cmc
add
sbb
sub
inc
loope
cmpsl
int3
mov
insl
xor
inc
scas
xchg
push
adc
repnz
cmpb
mov
jbe
insl
dec
rcrb
mov
les
loop
push
sub
push
xchg
cmp
out
les
subb
adc
insb
cwtl
popf
jnp
push
cltd
jp
mov
push
aam
sub
fldl
das
pop
jl
pop
fldcw
cmp
std
mov
and
or
or
add
sub
mov
pop
movsl
jbe
cmp
and
adc
imul
fidivrl
loope
test
mov
leave
inc
xor
fsub
imul
xor
jmp
jns
popf
mov
lcall
mull
inc
ret
ja
in
cwtl
lock
cmp
mov
ljmp
jge
mov
cld
hlt
sahf
jne
ret
int
sub
mov
xor
addb
dec
mov
popa
jns
scas
xchg
loop
lret
inc
sarl
jns
jb
lahf
rcr
fcompl
scas
cltd
or
mov
outsb
rolb
mov
fmulp
and
and
popf
push
decb
dec
pushf
les
hlt
mov
sbb
or
pop
push
lock
push
cmpsl
jno
lods
hlt
xchg
aad
lods
in
add
in
xchg
int3
sbb
and
dec
sub
xchg
jae
adc
push
mov
in
inc
mov
xor
cmc
fimull
into
add
stos
popa
lds
lcall
xchg
subl
mov
outsl
fsubrs
fs
sbb
mov
ja
imul
inc
inc
in
mov
repz
push
insl
pop
cmp
insb
rcr
ret
dec
and
and
lock
sbb
dec
dec
insb
xchg
lds
xchg
ret
sti
test
push
test
ja
aaa
sti
in
mov
daa
insb
xchg
and
mov
jecxz
xor
xor
mov
insb
inc
sub
aas
lods
cmpsl
lret
adc
push
popa
jne
jne
movsb
mov
and
imul
pop
aam
cltd
inc
sti
mov
fwait
jns
lret
cltd
jp
xchg
xchg
jbe
cmp
jmp
loopne
in
cwtl
loope
push
xorl
add
pop
andl
in
mov
dec
cli
fwait
out
lcall
mov
dec
int3
mov
mov
sbb
add
lea
iret
fwait
lea
xchg
mov
test
fcmovnu
loope
mov
mov
jb
movsb
cwtl
sbb
insl
lods
jns
lret
mov
mov
cmp
vpsubusb
mov
mov
sahf
aas
lods
and
push
ficoml
test
mov
dec
cmp
out
or
std
sbb
cmp
fwait
shll
push
xchg
movsb
xchg
in
lds
enter
inc
sahf
popa
outsl
mulb
push
andb
jb
pushf
inc
and
enter
fs
leave
inc
imul
pop
cmp
mov
jae
xchg
rcl
fcomp
cmpsb
xchg
call
cmp
scas
adc
cmp
fists
inc
mov
testb
dec
mov
pop
mov
adc
pop
test
movsl
sub
dec
scas
push
fldcw
xor
and
mov
jno
ss
pop
mov
lret
jbe
pop
fimull
xchg
int3
les
inc
cmp
mov
ljmp
adc
loope
sbb
adc
cmpsb
sub
mov
insl
pushf
mov
lret
cmpsl
xor
mov
dec
aad
mov
and
sbb
decb
push
xor
sub
cmp
sti
popa
cmpb
add
adc
int3
pop
testb
fcoml
ret
xlat
andl
pop
xchg
or
sbb
add
sub
mov
mov
jl
mov
loope
movsb
inc
xchg
aas
dec
jo
push
adc
faddl
addb
mov
pop
cltd
jno
popf
data16
cs
jno
cld
ret
scas
out
cmc
sarl
xlat
icebp
push
mov
in
inc
jge
or
stos
hlt
mov
jge
mov
xor
pushf
arpl
cmc
cld
in
add
jnp
rcrl
popa
xchg
fbstp
add
aas
mov
xlat
xchg
push
xchg
pop
fsubrl
test
cmp
sahf
xchg
sbb
xchg
pop
int3
pop
jl
fldcw
imul
pop
sub
jg
cltd
addb
jne
fsubrs
pop
test
pop
dec
icebp
loope
int3
and
pop
pop
dec
xchg
sub
and
inc
jns
stc
mov
cmc
cli
mov
outsl
int
pop
adc
cmp
out
add
mov
xor
or
cmp
mov
cmp
xchg
bnd
and
test
cld
cmpl
jl
inc
shl
sbb
xchg
aad
dec
repnz
out
xor
loopne
sbb
xchg
in
cmp
lret
and
or
lds
add
outsl
dec
or
lahf
sbb
mov
out
mov
mov
inc
clc
out
loopne
adc
inc
dec
pop
add
xlat
dec
xchg
dec
push
cltd
and
mov
pushf
cmpsl
shrl
xor
adc
add
cmp
or
push
dec
or
int3
dec
cld
add
inc
or
inc
dec
cmpsb
adc
sub
push
gs
dec
movsb
loopne
inc
push
in
fwait
push
test
pop
stc
addr16
fadds
hlt
je
mov
insb
mov
imul
out
shlb
or
mov
jecxz
and
lret
mov
pop
aaa
cmp
pop
push
arpl
lds
in
fildl
push
fisttps
lods
out
iret
bound
nop
inc
push
xchg
xlat
add
mov
push
adc
enter
test
push
and
test
stos
clc
ret
adc
mov
loope
outsb
loop
cmp
stos
add
pop
and
push
dec
and
loop
daa
stos
mov
or
inc
or
ficoms
cwtl
test
shlb
pop
popf
dec
sbb
xchg
in
stos
aas
and
sub
mov
cmp
mov
jae
push
jbe
aad
inc
hlt
pop
fs
inc
lcall
test
clc
mov
push
and
inc
xchg
cmp
dec
fidivrl
xchg
loope
ror
mov
in
mov
jp
rcrb
pop
and
mov
es
pop
repnz
xchg
inc
in
pop
in
adcb
jno
xchg
into
pop
fiaddl
pop
mov
jmp
mov
mov
pop
movsl
daa
adc
shl
out
hlt
sbb
sbb
fyl2x
inc
imul
sbb
pop
fidivl
fcoml
sub
xchg
xorb
movntq
out
push
fwait
mov
sar
mov
dec
adc
add
ret
test
cld
ret
mov
je
jns
imul
test
mov
push
and
in
cmpsl
sarl
push
mov
test
pusha
shlb
or
push
cmp
fucomp
sub
ret
push
repz
scas
pusha
js
or
dec
add
dec
test
and
loop
das
inc
imul
pop
jne
int3
pop
adc
outsb
mov
lds
or
mov
dec
adc
jge
aaa
mov
inc
adc
in
pop
pop
cmp
aam
xchg
pop
test
inc
cmpsl
movsl
mov
and
push
mov
dec
into
mov
sbb
dec
mov
test
out
aam
push
push
xor
js
inc
inc
or
mov
fsubrp
xchg
fs
lds
pop
pop
sub
fwait
push
mov
rcll
xchg
xchg
jae
mov
ret
int3
leave
mov
test
ficompl
popf
sub
xchg
xchg
gs
xchg
pop
xchg
into
ss
les
fcompl
push
mov
pop
das
adc
push
pop
jo
lcall
arpl
fs
sub
in
adc
push
push
int3
jb
rolb
lods
cmp
mov
adc
push
and
negb
scas
inc
mov
icebp
insb
or
inc
or
adc
adc
jle
pop
fstl
rorb
mov
enter
sub
jecxz
shl
xchg
sbb
push
pop
pop
adc
xchg
jle
repz
dec
xor
ljmp
xchg
xor
push
jnp
push
call
xor
adc
xorb
jecxz
xchg
xchg
push
lods
jmp
scas
xchg
add
cmc
sbb
mov
cld
cwtl
cmpsb
push
scas
push
movsl
and
cld
push
push
out
xchg
roll
add
faddl
repnz
nop
dec
ja
ss
int
add
mov
out
out
sarb
inc
pop
cmp
inc
jns
push
aam
dec
shrb
mov
scas
sbb
mov
arpl
popf
xchg
inc
testl
out
adc
cli
imul
fs
jne
add
or
iret
inc
scas
cmp
frstpm(287
or
mov
imul
lahf
sbb
lods
cltd
faddl
out
in
ljmp
pop
nop
sbbb
int3
mov
mov
pushf
jle
push
scas
adc
stos
pop
push
sub
inc
shlb
mov
aaa
scas
test
mov
dec
fiadds
sbb
lds
cld
pop
inc
aam
mov
sar
movsl
sbb
nop
fisttps
cmc
add
inc
dec
adc
push
test
imul
aaa
dec
and
cwtl
inc
mov
cwtl
nop
scas
test
mov
loop
cmp
out
or
clc
xchg
inc
test
pop
lods
ret
stc
aas
sbb
test
or
in
shlb
mov
pop
mov
sbb
call
pop
je
mov
pop
mov
cmpsl
mov
pusha
scas
test
sahf
ja
sbb
mov
fwait
lods
lock
js
addr16
sbb
sahf
push
insb
mov
lods
add
pop
sbb
jno
dec
popa
dec
jbe
sar
rol
fisubrs
pop
dec
scas
mov
lods
lret
das
fidivs
pop
and
xor
icebp
fisubrs
cmp
add
inc
clc
xchg
nop
outsb
cli
cwtl
mov
sub
insl
fwait
xchg
mov
mov
xchg
and
ret
push
and
int
insb
sarb
cmp
dec
aad
jmp
lock
and
xchg
jl
test
dec
jl
mov
jo
js
mov
dec
mov
cli
push
test
or
push
push
fidivrl
insl
push
mov
add
movsl
cmpsb
jno
daa
je
and
pusha
and
adc
add
ljmp
fidivrl
add
in
cmp
sub
popf
adc
in
jle
repnz
push
ja
lods
out
jg
movsb
xchg
je
xchg
lret
mov
xor
out
inc
xor
fisubl
inc
je
lock
loop
shl
push
xorb
into
shrb
insl
stc
mov
testl
adc
stc
outsl
cld
mov
aas
test
clc
jb
les
jl
aad
add
lds
test
movb
pop
sub
test
jmp
popa
mov
and
pop
push
bound
loopne
xchg
icebp
fildll
out
adc
pop
mov
jo
mov
inc
inc
cmpsl
loop
push
enter
xlat
jo
adc
xchg
adc
pop
lods
sbb
addr16
mov
dec
rcrb
insb
or
or
inc
mov
jmp
lret
xchg
fadds
cmpb
sahf
in
pushf
mov
inc
jnp
aaa
pop
cmp
sub
js
fs
xchg
push
pop
push
dec
lds
add
rorl
out
clc
mov
fcoms
jmp
pop
cwtl
pop
testb
add
dec
in
inc
mov
add
push
jo
sbb
add
pop
xchg
movb
rcrl
sub
mov
jl
cmp
mov
jp
ljmp
loopne
push
insb
adc
inc
push
mov
dec
shll
leave
pop
aad
mov
dec
mov
mov
push
or
scas
pop
sbb
jb
js
enter
add
push
je
ret
inc
xchg
orl
hlt
dec
adc
mov
dec
xlat
cmc
pop
dec
pop
xchg
xor
dec
cmc
jmp
mov
sub
ret
jmp
loope
pusha
imul
cmp
pop
xor
push
dec
cmp
popl
in
xchg
pusha
fidivl
icebp
push
addb
lods
xor
jo
mov
xchg
gs
pushf
sub
loope
or
fdivrp
stos
mov
repnz
mov
xchg
mov
lds
mov
test
popf
test
sbb
insl
decb
dec
or
and
aam
xchg
fptan
pop
push
aas
push
mov
into
cmpsl
fs
sbb
cwtl
jns
mov
pop
int
movsb
aas
lea
out
or
shlb
mov
mov
jo
jbe
shlb
push
insl
stc
push
mov
dec
rorb
jbe
push
arpl
sbb
loop,pt
filds
in
mov
and
mov
popf
out
xor
popf
dec
jecxz
sar
mov
sbb
jp
add
xor
add
cmp
fnstcw
daa
dec
inc
pop
sbb
das
aam
leave
pop
out
into
mov
mov
data16
pushf
sub
sar
cmp
pusha
jb
shll
cltd
lods
sbb
es
jns
xchg
pop
in
cs
icebp
push
and
movsl
aaa
popa
push
jbe
sti
es
push
lcall
loopne
dec
mov
cmp
out
sub
test
sbb
push
sbb
xor
outsb
outsl
mov
inc
cmp
mov
and
popa
mov
adc
dec
mov
sahf
mov
in
dec
mov
add
mov
ret
xchg
mov
addl
sbb
or
pop
and
push
sti
imul
std
ret
lods
idiv
rcll
dec
mov
fiadds
jo
loope
ror
xchg
dec
dec
pop
mov
push
adc
icebp
sbb
js
fisttpl
jg
xchg
jl
dec
hlt
nop
stos
rol
adc
sub
pop
and
ror
stc
mov
insb
dec
jnp
inc
pop
mov
cmp
xchg
inc
out
adc
and
xchg
dec
jg
xchg
mov
dec
pop
jmp
pop
fcomps
imul
jmp
mov
dec
push
in
iret
insl
fwait
sub
lds
in
pop
js
orb
jae
out
je
je
xchg
fcoms
cmpsl
sub
xchg
aad
aas
es
mov
cmc
mov
popa
icebp
lret
test
movsb
icebp
mov
sbbl
sbb
dec
inc
and
fucomp
jno
jno
scas
repnz
mov
cmpsb
test
jecxz
adc
outsl
mov
mov
iret
push
mov
inc
mov
rcrl
mov
enter
cmpsb
pop
sub
sahf
leave
dec
js
push
les
mov
std
scas
xchg
mov
decb
jns
pop
or
scas
mov
popf
lret
add
std
ljmp
fildl
adc
xor
cmp
ffree
lock
push
andb
add
inc
dec
fnsave
xor
neg
xchg
stos
into
adc
sbb
mov
and
sbb
out
add
sub
and
call
notl
lret
jl
lea
jb
rcll
ljmp
ljmp
or
ss
dec
outsb
mov
mov
and
adc
jl
ljmp
jbe
test
push
or
mov
fsubrl
loopne
fcoml
cmpsl
enter
adc
xchg
add
mov
or
lret
clc
imul
mov
dec
vpunpckldq
nop
inc
xchg
sbb
ret
stos
test
lock
iret
mov
out
lock
and
mov
outsb
lods
jg
cmp
mov
je
lea
insb
fisttpll
gs
inc
in
add
jb
out
or
mov
inc
mov
jg
ljmp
punpckhbw
jg
or
imul
movsl
into
add
mov
push
test
std
jp
pop
xor
inc
pusha
cmp
subl
push
cmp
in
and
roll
ja
push
jmp
les
call
clc
popf
enter
sub
pop
rcl
pandn
fildl
sbb
adc
incb
xor
push
enter
popf
jns
sub
jne
inc
movsb
cmp
and
xor
xchg
xor
push
int
testb
cmp
stos
out
add
inc
jae
jecxz
sub
and
jg
das
outsb
add
xchg
ss
stos
add
lret
sub
or
xchg
pusha
gs
sbb
push
mov
xchg
pop
shl
push
add
jne
adc
mov
fnstcw
test
fnsave
jbe
sub
pop
cmp
push
jo
mov
in
stos
and
fcomps
pushf
cmc
push
aaa
xor
adc
movsb
inc
int
ja
or
movsl
lcall
mov
lret
adc
jbe
jnp
jp
push
adc
xor
pop
fcompl
std
outsb
sbb
jns
cmp
fisubrl
or
jle
out
or
inc
jnp
push
ret
cmp
add
mov
outsl
mov
nop
mov
ds
lcall
cli
push
ja
sbb
xlat
cmp
pop
sbb
inc
push
add
mov
mov
decl
imul
jb
pop
testb
cmp
add
xor
sub
add
sbb
test
sbb
xor
jne
cmpsb
rcrl
out
adc
push
js
pop
adc
loop
cmp
sub
insl
jl
ret
sub
mov
push
mov
aad
mov
ret
jp
cmpsb
repz
clc
out
ljmp
sub
xchg
xchg
scas
mov
xchg
xor
icebp
outsb
push
clc
sarl
jg
adc
insb
xchg
es
in
pop
std
pop
das
dec
mov
lret
ror
push
inc
repz
shll
push
movl
adc
arpl
mov
adc
inc
xchg
ljmp
mov
syscall
sub
rcrl
push
push
sub
femms
xchg
and
and
jno
mov
mov
push
dec
insb
js
mov
bnd
clc
lds
jb
dec
add
push
jmp
repz
push
js
mov
mov
cmp
mov
xor
iret
nop
or
sti
mov
sbb
mov
mov
js
loope
fisubrl
add
stos
mov
pop
push
pop
and
nop
rorl
or
push
andl
dec
add
int
xchg
ret
push
aas
loop
pop
les
insb
jns
scas
jo
dec
lods
cmpsb
call
shrl
inc
aam
scas
sbb
roll
sahf
into
mov
mov
or
fwait
daa
jg
inc
test
xor
dec
jmp
daa
loop
mov
cmp
aas
arpl
arpl
mov
adc
or
sub
jp
mov
push
cmp
jge
test
popf
add
pop
and
ss
cmp
sahf
dec
jle
dec
xor
loop
outsb
test
cmp
fcoms
mov
pop
pop
or
movsl
out
fwait
pop
es
cmp
mov
andl
push
divl
fisubrs
and
int
pushf
enter
mov
fnsave
fwait
repnz
movsb
dec
xor
or
rcll
adc
pop
mov
andb
jmp
lret
loope
sbb
mov
push
inc
or
push
leave
ss
sub
sbb
sti
fildll
mov
inc
inc
add
shrb
lock
mov
adc
or
sbb
inc
fimuls
dec
cld
xor
scas
imul
dec
lods
push
inc
insl
lea
fistpll
fwait
mov
inc
outsb
cmp
inc
sub
and
inc
fs
push
add
outsb
in
cmc
leave
test
xchg
loopne
push
stos
dec
jnp
push
push
pop
push
test
clc
sti
dec
repnz
icebp
add
lock
cmp
mov
in
popa
movsb
xchg
sbb
decl
daa
insl
or
push
xchg
sbb
inc
xchg
popf
fisttpll
fistl
je
fisubl
xchg
fs
out
test
xor
mov
inc
aad
cli
jo
mov
ds
fiaddl
outsb
cmp
dec
or
sub
rorb
push
shrl
popa
int3
sarb
jbe
add
lret
dec
ret
xchg
sub
pop
enter
popf
sbb
pop
jnp
cmp
sub
fwait
dec
in
pop
add
adc
outsl
outsb
fwait
push
movsb
cltd
mov
movl
es
ficoml
test
in
aad
adc
push
les
sub
or
stos
jae
in
jl
or
sarb
cmp
sub
pop
lock
mov
mov
jmp
cmpsl
add
in
push
out
into
mov
sbbb
out
xor
fwait
iret
jne
xchg
out
mov
mov
push
xchg
lods
mov
enter
lds
xchg
mov
sub
out
xchg
sbb
arpl
jo
xor
xor
popa
fcmove
xchg
stos
ljmp
dec
dec
fistpll
orb
shl
in
popl
push
mov
rolb
jle
nop
jecxz
cmpsl
fs
std
cwtl
mov
inc
push
icebp
ss
mov
jnp
cmpsb
push
dec
testl
jne
and
mov
jno
cmp
repnz
in
xchg
cmp
push
cmp
popf
mov
repnz
scas
lret
add
fidivl
mov
mov
leave
mov
mov
je
arpl
stos
and
adc
mov
mov
jecxz
iret
js
cltd
xor
xchg
push
cld
test
das
hlt
push
push
jle
mov
and
cmp
inc
test
hlt
addb
push
fimull
mov
rcr
loopne
jg
cmp
push
jg
sub
aas
and
jg
dec
ljmp
lret
sbbl
rcll
mov
imul
jne
gs
pop
cmpsl
mov
ljmp
and
dec
add
in
in
repz
int
xchg
push
cwtl
or
rorb
mov
or
xchg
mov
mov
call
push
pop
rolb
stos
and
stos
jp
pop
mov
out
mov
push
lea
jbe
xchg
lods
dec
pop
mov
or
dec
insb
iret
out
data16
mov
fsubp
jne
lahf
iret
les
dec
jns
cltd
ljmp
xchg
fdivs
mov
fnstenv
mov
int3
mov
push
int3
pop
push
cmc
jge
loope
pmaxsw
fidivrl
pop
adc
dec
pop
jno
pop
shrl
das
mull
mov
mov
lods
hlt
inc
ret
or
pusha
pop
pop
push
ret
fcmovnb
pushf
cmp
ja
movsl
aas
popa
inc
sub
xchg
mov
das
test
idivl
cs
imul
jns
add
inc
enter
add
outsb
mov
stc
add
lcall
jle
addr16
jmp
shll
mov
movsl
in
test
dec
fwait
dec
int3
cmp
cmpsb
mov
pop
fs
clc
and
int
das
pop
sub
in
outsb
pushf
dec
bound
pop
pop
add
mov
into
jge
fs
xchg
int
xchg
insl
mov
add
outsl
ret
push
xor
dec
mov
addr16
xor
jo
dec
lret
sbb
lret
test
inc
mov
dec
cmp
stos
imul
movsl
fldcw
adc
push
sti
cmc
inc
cld
dec
aas
inc
test
inc
in
int
addr16
addr16
arpl
inc
pusha
in
int3
mov
or
or
mov
xor
fldcw
ret
aam
aaa
or
popa
in
mull
push
pop
rcrl
es
in
add
fldl
jmp
adc
test
jbe
lret
je
cmp
popf
fstl
push
stos
int
adc
es
jnp
loope
cmp
xchg
mov
lock
xor
jno
and
mov
pop
enter
cmp
inc
jge
pop
mov
mov
mov
mov
cmpsb
inc
aam
xchg
lds
lcall
adc
mov
jno
inc
lds
cld
outsb
fldenv
jb
and
insl
jns
jg
arpl
in
lds
jne
test
test
dec
fsubl
nop
movsb
clc
out
add
je
dec
sbb
cmp
xlat
rcl
movsl
pop
popa
cld
std
pop
jbe
xchg
loopne
mov
shrl
mov
nop
in
scas
scas
mov
call
shrl
xchg
mov
push
sub
addr16
push
test
jge
add
lock
neg
loop
or
sub
pop
inc
cmc
dec
gs
fdivrs
adc
pop
test
xor
stos
les
les
sbb
mov
ret
or
lcall
adc
jae
out
cmp
leave
xor
mov
lahf
jno
rorb
sub
icebp
or
lods
ficoms
sbb
xchg
xor
cmp
sahf
sbb
push
jae
into
jl
mov
rorb
jecxz
adc
imulb
xchg
ss
gs
idivl
inc
cwtl
ftst
int
add
jecxz
xchg
inc
mov
mov
stos
ss
fiaddl
cmp
xor
outsl
pop
add
dec
aas
and
shlb
sbb
sahf
mov
imul
xor
ja
ret
or
and
or
pop
hlt
xlat
pop
out
aas
and
mov
cmp
push
push
sbb
xor
add
push
and
stos
sbb
mov
imul
mov
imul
mov
and
jge
xchg
call
test
cwtl
pop
xchg
sub
mov
pusha
fdivrs
inc
jb
sbb
insb
outsl
lret
cltd
mov
dec
enter
mov
fistps
lds
add
loop
fildl
aaa
dec
sbb
xor
mov
call
fidivrl
insl
das
or
insl
or
loopne
je
xchg
roll
in
jmp
mov
add
push
mov
jno
mov
jg
xor
outsl
icebp
jge
pop
mov
xor
in
das
fnstsw
aad
and
shrl
jb
and
xchg
lcall
push
js
add
rcrb
mov
xor
adc
mov
lret
jns
imul
aaa
adc
push
data16
cmpb
mov
push
ret
sub
ret
mov
test
sub
sbb
lahf
ret
pop
jb
pop
gs
test
gs
jmp
call
jmp
mov
cmp
pushf
daa
lods
sahf
aad
icebp
popf
or
les
pop
pop
pop
loop
call
addr16
das
push
jno
add
xor
pop
jns
sbb
adc
dec
shlb
out
stos
xor
fstps
loopne
rorb
in
out
into
push
js
daa
imul
inc
push
sub
pop
dec
shll
ret
dec
and
pusha
leave
adcl
cmpsl
loope
les
dec
sbb
adc
mov
xor
mov
scas
into
popf
out
dec
mov
mov
add
arpl
or
xlat
cmpl
sti
loopne
mov
xor
jne
scas
repz
pop
jnp
lds
mov
cltd
sub
lret
jne
add
push
push
adcl
and
enter
pop
pop
or
sbb
sub
add
cmp
xchg
popa
xchg
stc
xchg
adc
jno
or
jne
pop
out
mov
sahf
stos
push
outsb
or
jl
xchg
lods
std
pop
mov
insl
inc
negb
lods
das
pop
mov
int
push
pop
cld
sarl
adc
stc
stc
addl
mov
lods
rorl
mov
movsb
addr16
int3
shrl
outsl
lcall
mov
xor
cmp
je
shr
jmp
data16
lods
rcl
mov
jle
or
cmpb
push
lcall
inc
iret
in
push
movsl
adc
outsb
ljmp
ds
sbb
lock
mov
or
sbb
xchg
sbb
outsb
mov
mov
adc
gs
sbb
addr16
and
jle
jne
adc
insl
add
mov
rolb
in
xor
arpl
pop
popf
in
negb
adc
in
push
or
mov
sub
mov
stc
mov
mov
pop
ja
dec
and
shll
xchg
js
xor
fs
aas
daa
stos
mov
mov
das
sub
int
mov
jge
pop
jno
je
jbe
mov
sbb
mov
loope
clc
fstps
push
push
mov
push
push
stos
add
out
push
pop
mov
fmull
cwtl
dec
sbb
mov
push
pop
stc
addr16
fwait
adc
insl
sti
sbb
jl
jg
sub
je
inc
and
inc
jge
popa
loop
mov
lret
mov
nop
addr16
jnp
das
pop
pop
push
jl
movsb
scas
ss
cmpsb
out
addb
pop
sbb
sbb
add
pusha
fdivrs
ret
push
xchg
notb
push
pop
mov
adc
jp
adc
and
cmovp
or
stos
and
jne
fiaddl
mov
das
and
fs
icebp
out
adc
mov
pop
mov
int
sub
addr16
lds
xor
and
std
insb
pop
dec
mulb
out
pop
fists
fimull
push
mov
xchg
rcrl
imul
dec
pop
in
popf
clc
adc
lea
fsubs
sbb
sub
mov
xlat
repnz
or
shlb
cmp
push
rcrb
test
lods
dec
push
mov
mov
das
jl
clc
repz
mov
mov
scas
jo
adc
call
sub
int3
scas
es
xchg
dec
clc
fs
mov
sbb
movsb
insb
mov
sbb
or
jno
xchg
ret
insl
cwtl
pushf
jmp
pop
pop
ret
stc
inc
cld
xchg
cmp
or
xchg
xor
shll
push
pop
incl
and
mov
pushf
ss
pop
jbe
out
aaa
popf
jecxz
jae
dec
dec
addr16
out
int
out
test
shll
sbb
adc
shrb
filds
loope
mov
clc
movsl
jnp
clc
xor
mov
pop
pop
sub
xlat
das
addb
js
cmpsb
cmp
xchg
sti
adc
shlb
icebp
rcll
add
dec
test
jne
sbb
ud2
data16
sbb
jle
inc
pop
sbb
cmp
jns
out
add
or
jnp
fisubrl
mov
orl
mov
add
or
dec
cmc
xchg
mov
cmpsb
test
mov
hlt
shlb
xlat
mov
mov
icebp
ss
out
inc
and
and
imul
cmp
cwtl
sub
je
pop
dec
scas
mov
lock
sbb
lret
into
adc
adc
lock
mov
outsl
sar
or
test
jnp
pop
jmp
cmp
sbb
jb
push
and
and
jns
ds
mov
pop
lret
xchg
js
cmpl
shlb
or
sbb
and
inc
filds
lret
nop
and
stos
clc
cmp
das
sub
cmp
adc
dec
push
mov
sub
pop
xchg
xchg
jg
add
mov
mov
outsb
sbb
or
es
loopne
jmp
mov
lds
mov
lds
xor
and
pop
mov
xchg
outsb
andl
jo
xchg
cltd
xchg
sbb
nop
inc
aad
stc
mov
push
dec
xchg
arpl
xchg
or
shrl
inc
add
or
imull
daa
sahf
rcr
mov
psrad
cmp
and
inc
aam
jmp
movsl
or
mov
jecxz
loope
xchg
fs
dec
mov
inc
std
lcall
inc
dec
stos
shll
or
push
lahf
mov
inc
push
mov
outsb
xstore-rng
cmpsl
inc
mov
insl
mov
test
les
in
ljmp
ljmp
sub
arpl
pop
or
icebp
xchg
insl
mov
popf
int3
sub
sti
pushf
sbb
add
cli
jecxz
mov
jns
adc
sub
dec
dec
fnstsw
adc
sbb
mov
loop
cwtl
cvtdq2ps
adc
out
adc
push
sti
push
mov
pusha
cmp
test
and
sbb
jno
lret
cmc
xchg
jp
daa
pop
cs
xlat
icebp
dec
scas
rol
jmp
inc
jmp
popf
add
push
xor
sub
push
test
push
jp
sub
aas
pop
or
scas
mov
cmovp
pusha
loopne
xor
pop
and
loopne
fidivrs
mov
pop
mov
and
mov
mov
pushl
sub
cmp
push
mov
out
inc
fmuls
pushf
cmp
mov
jle
jae
out
test
sbb
stos
push
bound
test
or
pop
inc
bound
xor
or
imul
scas
imul
iret
push
push
lret
mov
sbb
je
and
std
mov
aam
fdivrl
jl
add
pop
mov
xchg
cmpsl
pop
and
stc
divb
pop
fnstsw
popa
jnp
sub
push
push
cmpsb
push
popf
add
jbe
cli
and
or
push
sub
add
or
ror
fldt
subb
lods
sbb
jle
mov
daa
or
add
fisttps
or
cmp
mov
pop
fisubl
push
add
sbbb
sub
popf
outsb
imul
pusha
or
icebp
jg
push
mov
add
cmpb
enter
push
mov
test
and
das
inc
xor
cmp
in
out
mov
or
mov
cmp
in
out
push
mov
and
cmpsb
push
mov
call
mov
mov
ret
jmp
enter
stos
ret
mov
sbb
pop
roll
inc
jp
mov
test
out
out
mov
dec
sbb
lea
mov
mov
sub
push
jnp
pop
dec
mov
push
loope
lea
adc
xor
repz
push
pop
mov
pusha
pop
out
iret
sti
je
cli
inc
int3
cmp
jns
jg
pop
sbb
addl
gs
mov
shlb
push
fcmove
pop
or
cmp
testl
nop
into
scas
stc
adc
dec
test
inc
in
jmp
jbe
mov
ja
pop
jmp
rorl
sub
jmp
icebp
imul
lods
mov
pop
push
stos
mov
in
mov
mov
mov
and
add
sub
mov
lahf
mov
aad
inc
loope
test
cltd
loope
mov
inc
push
mov
mov
cwtl
pop
fisubrl
cwtl
mov
dec
sarl
jne
cmp
scas
sub
es
mov
outsl
pop
fdivrs
push
xor
repz
mov
xchg
push
enter
xchg
push
sti
add
jg
xor
mov
pop
push
je
adc
sub
sub
pop
outsb
cmpsb
cmpsb
xchg
jns,pn
mov
sub
or
fidivrl
mov
dec
sbb
dec
add
ss
cmp
xchg
mov
adc
xor
imul
xor
jl
xchg
lods
sub
pop
mov
popa
or
dec
pushl
push
shll
popf
in
mov
mov
xor
push
push
jp
mov
dec
sub
adc
rclb
inc
inc
in
jge
stos
ret
push
cmp
cmpsb
pop
repz
scas
xor
addb
mov
call
adc
mov
push
in
in
scas
sub
stc
push
or
adc
inc
inc
pop
pusha
mov
or
in
xchg
popa
fwait
mov
sub
dec
pop
int
add
aaa
cmp
pop
popa
test
push
add
xchg
aam
cwtl
pop
fcomip
stos
pop
call
or
insl
lea
mov
iret
repz
test
jge
clc
int3
out
lods
cmp
push
mov
inc
jno
xlat
test
mov
icebp
xor
and
bound
mov
jb
negl
push
imul
fs
js
mov
jge
jo
test
xchg
pop
mov
cli
mov
lret
repnz
cmp
pushf
cwtl
xchg
fwait
pop
sub
mov
sub
adc
shrb
add
pop
outsb
or
cli
push
xchg
push
nop
push
nop
jne
pop
int
xchg
xor
ljmp
mov
dec
dec
mov
add
inc
sub
or
pop
xchg
mov
push
call
mov
cld
lods
jmp
inc
cmpsb
rorl
pop
test
iret
push
and
pop
jbe
xchg
mov
xchg
jnp
jmp
and
lahf
scas
out
dec
mov
jnp
cmpb
push
mov
jmp
lret
sbb
xor
testb
sub
aam
jno
cmp
ror
addr16
aam
fiadds
jbe
add
daa
fwait
mov
sub
sbb
repz
dec
pop
sbb
scas
xor
or
xchg
xlat
jae
lods
sub
and
movsl
lods
fcompl
lds
or
xor
inc
shrl
lahf
mov
out
out
dec
push
jno
pusha
mov
rep
scas
les
cmp
and
popa
stc
xor
aaa
stos
adc
xor
aam
stos
dec
ret
push
jne
adc
pop
jnp
xchg
sub
mov
jecxz
test
mov
add
dec
lcall
pushf
adc
dec
inc
sub
fdivrs
cmpsb
nop
int3
add
adc
subl
mov
js
or
xor
jge
lea
dec
jo
inc
xchg
xchg
pop
mov
movsb
clc
lods
and
xchg
or
jle
and
in
fidivrl
xor
movsl
cwtl
mov
cwtl
xor
xchg
dec
daa
cld
insl
out
sbb
mov
lods
dec
mov
and
jle
scas
ficomps
mov
push
imul
aam
and
lahf
rolb
or
scas
ret
inc
call
ret
leave
and
push
mov
outsl
out
pushf
lret
fs
mov
add
cmp
lods
cmp
aas
jg
sar
adc
andb
mov
jecxz
sub
cmp
imul
pop
test
dec
sub
or
int3
js
faddl
insb
jno
sbb
enter
push
fcomi
xchg
lea
mov
iret
inc
xchg
idivb
imul
into
sbb
fstps
incl
pop
mov
mov
fs
mov
outsb
sahf
push
fcmovbe
push
pop
or
sbb
out
cmp
mov
push
icebp
std
push
jae
lock
rcll
pop
sub
test
aam
sti
ret
xchg
and
lock
lock
out
xorb
je
jp
ljmp
imul
sbb
dec
and
int3
fwait
in
aam
dec
cmp
test
jno
out
js
mov
test
xchg
pop
jnp
push
mov
push
mov
mov
sub
out
sbb
imul
fsubs
subb
aas
sub
mov
mov
test
sti
adc
insl
rclb
inc
jb
jbe
sub
mov
cmpsl
insb
cli
out
test
lds
push
loop
std
jecxz
pop
dec
cmp
mov
cltd
cmp
ljmp
ret
inc
adc
rol
ret
outsl
rclb
inc
repnz
sbb
stos
cli
xchg
mov
dec
adc
stos
call
ret
es
icebp
or
mov
je
cltd
stc
outsb
pop
imul
sub
pop
mov
dec
roll
nop
test
ret
add
dec
jae
xchg
outsb
fmuls
data16
lea
icebp
mov
mov
lahf
stc
jbe
stc
jmp
jns
sbbl
inc
pop
and
lret
loop
fs
xchg
xchg
dec
ret
pop
stos
adc
or
push
test
adcb
ffreep
xchg
cld
jb
scas
aas
sahf
xlat
inc
xchg
and
inc
icebp
sahf
inc
imul
inc
inc
ret
es
subps
insl
adc
sbb
in
shl
adc
jg
inc
hlt
ror
and
pop
mov
stc
or
or
xor
xchg
pop
dec
sahf
aam
mov
loope
int
mov
dec
shr
adc
divl
sbb
cmpsl
lods
push
xchg
push
xor
dec
fdiv
ret
push
mov
xor
xor
sbb
sub
mov
je
sarb
fisttps
mov
lea
mov
out
shrl
pop
fsts
inc
rolb
cmpsl
sub
jle
pop
ret
pop
aam
hlt
aas
mov
int
push
test
stos
cmp
shl
mov
stos
push
cmpsl
shrb
fs
sbb
fsubrs
insl
shl
test
cli
ret
and
xor
sub
ss
in
aad
cwtl
xchg
lock
adc
test
daa
mov
ljmp
inc
hlt
pop
jb
out
pop
mov
out
adc
sbb
pop
movsl
test
jle
add
adc
xchg
push
pop
pop
jge
nop
lcall
in
mov
pop
dec
cmpsb
xor
sbb
hlt
xlat
inc
in
adc
fsubrs
or
xor
xchg
sbb
push
mov
not
aaa
in
mov
cmp
imul
fmuls
arpl
mov
les
xchg
jo
mov
cmpsl
jae
lret
lahf
fisubrl
jl
jbe
addb
lods
sbb
fistpl
or
repz
push
in
les
mov
loop
push
cltd
sub
ret
or
adc
mov
or
fsubrl
xchg
add
mov
inc
adc
dec
cmp
loope
aam
js
sub
cmp
aad
or
fcmovu
sahf
pop
and
jo,pt
jne
push
dec
sbb
je
and
imul
xor
and
hlt
sbb
xchg
aaa
pop
jecxz
clc
lock
aad
mov
lds
shl
test
xchg
pop
push
loop
cmp
shll
gs
sbb
arpl
cmpsl
dec
mov
test
xchg
addl
movsb
popf
stos
inc
jns
mov
mov
cmp
ljmp
aaa
sbb
xor
lret
push
inc
jo
ja
push
pop
xchg
sahf
add
or
sbb
shll
jg
pushf
jecxz
add
stos
call
fldl
jl
push
mov
or
and
stos
fldl
dec
aam
test
mov
mov
mull
leave
or
cmp
jbe
ror
pop
sub
jnp
adc
or
ret
decl
rcll
fistl
mov
popa
or
out
sbb
xchg
push
nop
pushf
or
inc
loop
pop
sarb
inc
mov
outsl
inc
sbb
in
test
or
jns
addl
mov
cmp
or
push
xor
xor
aaa
movsl
adc
loop
mov
es
pop
xor
pop
cmove
arpl
idiv
movsb
ljmp
leave
pmaddwd
in
pop
fisubrs
push
in
jge
shlb
inc
call
add
mov
jmp
cmp
in
arpl
cmpsl
pop
mov
adcl
lahf
test
dec
xor
cs
fs
sub
mov
fst
xchg
aad
mov
push
xlat
push
loopne
fcmovne
outsl
mov
out
ret
inc
ficompl
dec
leave
add
cld
popa
test
cmp
insb
ret
cmp
inc
cwtl
cmp
int3
push
jecxz
pop
loope
push
cmp
mov
std
or
outsb
or
negl
jecxz
or
cs
sub
sbb
push
jnp
inc
mov
mov
mov
mov
lea
loope
ja
test
adc
lret
movsb
mov
xchg
out
sahf
add
sbb
iret
stos
js
rcl
push
nop
repnz
lods
push
sub
ja
inc
ljmp
inc
jne
lods
mov
mov
out
push
mov
xlat
pop
stos
dec
sub
incl
repz
lds
sbb
scas
mov
rclb
mov
xor
jl
shll
cmpsl
std
inc
sbb
or
pop
out
pusha
bnd
pop
fiadds
das
push
loope,pn
aam
xlat
or
stc
popa
sbb
mov
add
inc
mov
clc
sbb
ret
dec
lahf
orl
inc
cltd
mov
push
imul
push
pushf
rolw
xchg
into
movsl
mov
sub
sub
test
lahf
dec
sub
repnz
push
daa
jg
mov
mov
rorl
loope
lahf
popl
insl
inc
les
fistpl
gs
mov
dec
test
xor
rorl
mov
ret
fstps
lret
xchg
push
mov
test
sub
fimuls
or
mov
in
lods
xchg
xor
jno
jl
movsl
test
mov
arpl
stc
pop
test
xchg
jl
mov
pusha
fwait
sbb
movzbl
test
outsb
pop
fadd
mov
jb,pn
addl
andb
divl
bound
xor
bnd
cmp
mov
sarb
out
mov
cltd
xlat
fs
sbb
scas
push
lret
dec
push
or
and
cmp
sbb
push
cmp
imul
xchg
push
arpl
clc
or
std
jge
inc
and
sub
stos
push
or
lea
jo
lods
pop
cmpsb
xchg
fistpll
push
add
push
fsubr
divl
adc
xchg
dec
mov
mov
out
pop
insb
lods
adc
int3
cltd
push
test
pop
dec
jmp
or
mov
shll
popa
ja
idivb
adc
xlat
cmp
repz
enter
andl
pand
aad
ss
lods
mov
cmpsl
mov
sbb
insl
shrb
stc
mov
std
pop
xchg
dec
xor
xorl
imul
adc
add
loope
shl
mov
jno
je
fbstp
adc
mov
cmpl
addr16
cltd
movsl
mov
into
jno
and
int
mov
mov
pusha
sub
testb
repz
jb
jmp
push
jecxz
fimuls
in
pop
out
xchg
cld
jnp
sbb
push
rorl
rorb
sbbl
sub
pop
rolb
add
cmp
mov
pop
mov
adc
mov
fldl2t
pop
or
es
add
adc
js
std
pop
pop
jmp
adc
or
pop
add
repz
cmp
or
pusha
or
push
fisttps
repz
push
ljmp
sub
xchg
jo
xor
ret
or
or
orb
pop
jbe
xor
sub
call
jl
mov
cltd
pop
fmull
lea
mov
fnsave
xchg
insl
cmpsl
pop
cltd
lcall
loope
mov
add
iret
and
repnz
mov
jo
xchg
pop
mov
fsub
nop
scas
xor
paddusw
mov
stos
jge
inc
call
and
stos
sbb
ja
inc
adcl
scas
jecxz
mov
xlat
movsl
lock
mov
cmp
cmpb
js
movsl
in
cs
jns
adc
xor
mov
add
push
fldcw
push
aad
popf
clc
rep
into
xor
add
ret
rol
lods
push
xchg
insb
movsl
sub
xchg
xchg
jno
ret
xor
fsubrs
cmp
in
mov
jnp
or
jecxz
xchg
lret
push
jno
pop
outsb
or
inc
fidivs
push
mov
movsl
shlb
cmpsl
divl
push
aad
jno
pop
aas
xchg
lock
imul
or
add
push
inc
pop
frstors
push
movsb
or
mov
gs
sbb
shl
pop
es
insl
in
pop
sti
mov
das
in
loopne
cwtl
bound
xor
or
jp
into
adc
bound
lret
pop
repnz
cld
testb
cwtl
sub
mov
cli
fdivp
cmp
push
int3
pop
mov
seta
add
loope
mov
lock
sub
test
sub
movsl
add
cld
into
cmp
sbb
cmp
xor
icebp
xchg
sub
mov
pop
ret
popf
fwait
sbb
mov
imul
fcoms
jns
sub
mov
idivl
iret
add
jle
cmpsl
dec
dec
in
xchg
push
mov
mov
or
xchg
pop
lds
test
movsl
push
mov
icebp
pop
rclb
sbb
in
or
shrb
or
test
dec
dec
adc
mov
arpl
cmpsb
xchg
je
adc
rorb
aas
dec
sub
inc
imul
sub
jecxz
inc
inc
jecxz
lret
mov
icebp
push
mov
xchg
fwait
inc
iret
jg
add
rorl
aam
inc
mov
ret
lret
iret
xchg
mov
ret
xor
ret
dec
mov
mov
enter
lret
mov
into
shlb
dec
testb
push
pop
mov
mov
dec
mov
mov
or
adc
arpl
add
adc
xchg
and
jo
adc
lods
aam
dec
ss
sub
scas
mov
ret
mov
ficoms
push
and
xchg
add
lcall
das
loop
xchg
stos
fs
mov
icebp
sbb
icebp
adc
sbb
int
pop
out
sub
cmpsb
imul
lods
rclb
jbe
call
xchg
icebp
roll
cmpsb
add
aas
jae
sub
dec
xor
mov
jl
fildl
xchg
xchg
add
sti
cmp
pushf
jbe
cld
stc
xor
mov
cmpsb
dec
das
ljmp
pop
in
sbb
push
pop
adc
movsb
test
xchg
sub
pop
or
loop
dec
lcall
mov
and
insb
enter
cmc
cmp
test
jle
decl
in
into
sbb
mov
cmp
ret
adc
rolb
push
gs
add
arpl
aad
xor
fisubl
xor
dec
in
out
jb
sbb
movsl
nop
xor
mov
faddl
call
imul
pop
pusha
jbe
data16
push
dec
jg
std
dec
sarb
fildl
ljmp
les
push
xchg
adc
xchg
sub
andb
sbb
cmp
leave
jne
push
leave
mov
pop
into
into
or
jne
sub
inc
enter
das
mov
icebp
pop
cltd
inc
adc
aam
jae
push
iretw
mov
mov
sub
mov
push
mov
popa
xchg
andb
mov
jo
jle
inc
fstl
in
dec
and
insb
ret
pop
inc
nop
sahf
dec
cmp
fxch
icebp
push
adc
lds
loopne
adc
fnstcw
mov
pop
aad
lret
inc
xchg
in
popa
std
sbb
stc
fs
dec
jne
mov
mov
dec
pop
dec
push
aam
or
inc
jmp
shlb
jo
cmp
xlat
repnz
inc
test
xchg
jmp
jge
xor
popa
mov
mov
icebp
stos
pop
mov
and
mov
test
jne
pusha
pop
lret
sub
imul
idiv
insb
ficoms
and
or
push
clc
cld
gs
fdivs
xchg
imul
pop
loope
push
and
xchg
push
add
sti
lcall
pushf
iret
sbb
addps
xchg
sub
pop
ljmp
lret
bound
jge
stc
fstp
inc
sti
stc
loop
adc
into
inc
jnp
inc
rclb
xor
je
push
cmp
stc
mov
sub
sbb
mov
adc
fldl
or
fistps
pusha
out
lds
dec
cmp
imul
test
sbb
jae
ret
repnz
out
xchg
inc
lods
and
lret
movsl
stc
cmp
dec
pop
xchg
sub
fcoml
std
push
repz
int
mov
xchg
shl
cmp
pop
imull
mov
data16
jns
mov
pop
mov
mov
lcall
or
cli
out
jnp
mov
dec
sub
xorb
push
pop
mov
and
in
inc
ss
add
inc
push
push
mov
aad
mov
inc
mov
test
push
adcb
push
movsb
cmp
xacquire
cmp
sbb
sub
push
imul
fbstp
das
leave
movsl
stc
pop
aad
fsub
adc
adc
dec
mov
lret
pop
leave
int
pop
leave
icebp
sbb
filds
cmp
sub
addr16
xchg
pop
insb
and
or
arpl
sbb
es
push
rorb
cmc
sbb
mov
and
push
and
jns
bound
push
push
mov
sbbb
dec
dec
add
sbb
fnsave
push
sti
testl
and
rclb
mov
pop
popf
idivl
push
inc
mov
mov
xor
fbld
dec
shrl
out
ret
mov
sub
in
std
inc
lods
xchg
push
inc
cmpsb
test
mov
and
xor
sahf
dec
jl
push
and
sbb
sub
das
aas
cmp
imul
jg
adc
insb
sbb
lock
ret
aaa
push
inc
iret
push
xchg
into
or
add
pop
lods
lds
ja
jg
lock
adcl
insl
xor
mov
sub
mov
in
fbstp
push
jmp
rcl
dec
sti
cmpsb
or
lea
cs
lahf
push
lret
xor
stos
pop
mov
aas
std
xchg
in
and
push
scas
sub
jno
pop
jo
int
dec
outsb
push
push
jne
scas
sub
fildl
xorl
cli
movsb
fnstsw
jl
xlat
in
test
in
lods
mov
ljmp
jg
mov
loop
movsb
and
popf
jb
xchg
stos
sbbl
jmp
addl
arpl
jns
sub
cmp
lods
call
and
push
ja
gs
or
add
mov
mov
ss
cmp
jecxz
jnp
inc
pop
adc
dec
cmc
sbb
mov
dec
mov
add
js
shll
sub
negb
jp
xor
stos
loope
pop
stos
xchg
adc
cld
iret
imul
jns
in
std
cmp
js
popf
in
insl
out
or
outsb
mov
loopne
test
push
cmp
add
sti
lods
pusha
lock
dec
push
xor
push
fisubs
adcb
cwtl
das
adc
sub
pop
dec
in
push
or
mov
inc
pop
or
popf
and
sub
push
pop
dec
rorl
enter
cwtl
add
xchg
out
iret
int3
nop
pushl
aas
push
lods
sub
loopne
jle
jne
push
aas
scas
mov
lods
mov
sbb
pushf
xor
pop
je
xor
scas
pop
rorl
in
dec
pop
scas
add
sub
sti
call
pop
push
dec
add
mov
pop
inc
pop
inc
orl
inc
xor
dec
mov
fs
ja
and
cmp
mov
jl
stos
arpl
pop
pop
dec
push
sub
jl
mov
fidivl
lret
push
imul
insl
mov
movsw
jno
jg
cmc
and
cli
es
jae
stos
mov
lcall
and
clc
loope
fwait
adc
mov
aas
or
sub
jg
mov
sub
and
xor
js
jno
mov
sbb
je
jle
es
or
insl
add
adc
shll
nop
xor
push
sarl
stc
inc
in
jmp
test
ds
sbb
pop
mov
sub
in
aam
xchg
push
dec
xchg
or
jmp
adc
inc
fs
add
sbb
sub
cs
mov
adc
add
gs
subb
dec
jnp
xchg
xor
ret
inc
daa
cmp
and
cmp
ss
shll
fisttps
add
xchg
outsl
lret
mov
aas
jbe
mov
dec
and
popf
mov
lock
sbb
push
clc
into
icebp
mov
pop
iret
les
orl
pop
ja,pn
add
mov
call
cmp
xchg
cld
arpl
clc
add
fwait
pop
fstps
add
mov
scas
stos
outsb
mov
sbb
and
adc
ret
clc
cld
sbb
loopne
add
fildll
sbb
fs
scas
shl
roll
lret
mov
dec
mov
cmp
imul
pop
in
or
xor
imul
mov
push
scas
shll
pop
out
shll
push
test
xchg
inc
cmp
loop
add
gs
cmpsb
mov
cwtl
push
inc
imul
scas
add
or
adc
in
mov
loope
shlb
popf
cwtl
mov
or
xchg
lea
scas
movsb
outsl
sbb
mov
lea
sub
jno
outsb
xchg
push
sbb
fdiv
xchg
inc
fcomps
jo
insb
in
pushf
and
dec
add
insb
stc
data16
test
push
xchg
loop
jo
sbb
clc
sbb
dec
dec
mov
and
ret
jbe
or
subl
push
or
aas
nop
fimuls
pusha
imul
cli
lcall
mov
addr16
vcmpsd
mulb
cmp
and
ret
mov
dec
sarl
adc
sahf
scas
pop
sub
dec
int3
in
jb
or
mov
aad
enter
shll
sub
scas
scas
cmp
inc
xchg
xlat
xchg
arpl
insb
pop
mov
push
enter
mov
repz
pop
push
push
inc
je
sub
cmp
cmpl
xchg
fstps
add
xor
dec
stos
add
mov
dec
scas
inc
sbb
push
adc
test
popa
je
fwait
daa
sbb
dec
lcall
mov
mov
rolb
sub
decb
push
test
add
push
push
and
mov
lods
inc
sub
scas
subb
call
rcrl
jne
test
jg
repz
les
inc
push
adc
int
ret
enter
mov
inc
jp
cmp
mov
sbb
lret
mov
hlt
int3
mov
stos
js
push
mov
add
ds
or
xor
iret
adc
jns
mov
leave
jmp
aad
mov
andl
in
outsl
mov
rcrl
or
pop
push
pop
mov
inc
sub
inc
xchg
push
cmp
pop
shlb
gs
xchg
imul
mov
cmp
loop
nop
pop
sbb
stos
gs
cmp
ror
jnp
jns
xchg
add
andl
into
mov
in
pop
push
adc
pushl
sub
rcl
test
mov
in
outsl
cmp
sub
jns
mov
mov
cs
mov
jmp
sub
mov
or
mov
dec
cmpsl
mov
insl
adc
jnp
cmp
dec
and
dec
mov
inc
stos
loope
xlat
pop
mov
ds
pop
add
jmp
mov
popa
xchg
sbb
mov
loop
repnz
lea
dec
idivb
in
clc
jb
pop
cmp
mov
decl
dec
cli
mov
mov
pushf
add
xchg
adc
popf
push
xchg
and
push
pop
and
into
data16
dec
or
adc
cmp
xchg
mov
lret
or
xor
mov
addr16
shlb
mov
adc
movsl
inc
lods
jle
mov
inc
mov
fstp
xor
and
aam
lods
and
mov
insl
xor
jle
pop
cmp
pop
test
orl
insl
xor
movsl
cmp
rcrl
es
addr16
lea
or
repnz
leave
loopne
int
or
cltd
ret
xchg
adc
push
rcll
jecxz
js
repnz
xchg
inc
mov
sub
sbb
adc
pop
inc
sub
daa
nop
mov
int3
repnz
test
rorb
xor
mov
jg
cmpl
pusha
sbb
rcrb
mov
pop
iret
sub
outsl
inc
int
lahf
add
inc
stc
rcrb
int3
rcll
das
mov
or
addr16
cmp
cwtl
push
aam
scas
lods
inc
mov
loop
push
jg
mov
in
push
push
xchg
cmp
lahf
scas
or
fwait
jmp
dec
jp
or
ficoms
adc
testb
xor
and
cmpsl
loopne
mulb
push
stc
pusha
cli
insl
fcomi
cmc
popf
sti
clc
sub
jecxz
add
cli
push
lea
cmp
mov
dec
popa
pop
and
dec
mov
and
jae
fldt
loope
mov
pushl
dec
scas
xchg
push
xchg
fimuls
scas
fs
bound
iret
cmpsl
push
cmp
mulb
cltd
mov
in
enter
mov
lods
xchg
jae
xor
outsl
sub
shl
pop
adc
repz
adc
adc
jg
sub
mov
dec
rol
inc
test
ret
shll
sti
sbb
mov
pop
mulb
add
xor
lahf
call
int
dec
imull
js
adc
inc
sbb
scas
incl
scas
arpl
mov
call
jb
outsb
ljmp
push
sbb
in
mov
or
cmp
fs
sbb
insl
sub
pop
fsubl
push
shl
mov
cmp
aad
pop
cmp
flds
sub
cmp
dec
rcrl
inc
lods
scas
pop
xchg
add
pop
mov
stc
out
inc
push
mov
xor
mov
ja
mov
shlb
inc
and
mov
hlt
mov
sbb
sbb
test
xchg
mov
fs
dec
dec
or
pop
cmpsb
lds
sbb
xor
fnstenv
loop
mov
push
jecxz
or
xchg
loop
fistps
push
dec
fs
and
mov
arpl
fistpl
shlb
fisubs
push
dec
sub
lcall
ret
mov
push
sbb
dec
clc
hlt
ret
divb
jb
popf
stos
pop
lret
inc
orl
aad
push
inc
insb
add
and
fs
inc
rcrb
in
push
cmc
or
ss
es
out
jg
mov
mov
mov
int3
inc
xor
mov
push
dec
ljmp
cmp
fimull
popa
cmp
push
sbb
lahf
pop
aas
xchg
les
and
pop
insb
pop
cmpsl
fisubl
loope
test
fs
jne
mov
pop
test
popf
testl
mov
scas
mov
cs
dec
push
shrb
xchg
js
fdivrl
stc
mov
push
adc
faddl
daa
push
hlt
ret
mov
movsl
push
data16
mov
stos
jecxz
push
call
daa
sub
aas
add
jmp
icebp
jmp
pop
dec
popa
push
iret
jnp
mov
ss
pop
outsb
ja
inc
fwait
fs
xlat
stc
pop
out
adc
dec
ds
pop
fisttpl
int3
mov
lret
jno
mov
les
das
add
xchg
stos
aas
cmpsb
sti
out
xlat
cwtl
out
push
sbb
xchg
lret
enter
add
cmp
enter
jae
mov
das
mov
xbegin
jae
push
pop
xchg
mov
fadds
in
push
dec
cmp
push
clc
flds
fnstsw
test
mov
fidivrl
xor
testb
cmp
nop
adc
addr16
icebp
jb
push
int
push
push
and
pop
mov
push
xchg
dec
mull
ret
outsb
sub
and
xchg
pusha
out
ja
cmpsb
iret
aad
cltd
adc
movsl
rclb
jae
sbb
fdivl
add
adc
ja
add
push
dec
push
rclb
nop
dec
pop
mov
cmpsb
dec
push
dec
inc
mov
add
dec
loop
test
cmp
xchg
lods
out
scas
xlat
adc
jae
cmpsb
aad
and
xchg
jne
and
xor
inc
pop
dec
lret
mov
xor
int3
mov
cli
mov
mov
jmp
mov
sbb
adcl
add
and
ja
rol
or
enter
insl
or
mov
scas
xchg
add
lcall
cmp
repz
mov
call
cmpsb
pop
xchg
les
mov
es
jmp
aad
mov
mov
xchg
dec
cli
fldt
xchg
sub
or
cs
jl
push
les
xlat
mov
mov
int
push
inc
and
fldlg2
mov
stos
std
addb
emms
xchg
xorl
pop
outsl
and
sbb
stos
or
push
cmp
cltd
insl
fsubs
das
pop
lret
push
dec
stc
idivl
subb
and
insb
jecxz
push
cmpsl
imul
jb
shlb
fs
movsl
xor
rclb
ret
es
outsb
stc
pop
rcr
enter
out
cmpsb
aam
push
insb
mov
push
inc
push
test
stc
push
mov
push
xchg
cmp
fdivl
add
push
cmpsb
aas
jmp
lret
add
jns
sbb
pushf
inc
into
jg
mov
pop
loopne
jo
je
push
mov
movsb
aaa
xchg
sub
insl
lods
push
dec
xchg
fdivrl
adc
int
push
cmc
push
jbe
cltd
mov
mov
add
enter
push
xor
push
pop
mulb
and
movsb
inc
leave
std
mov
or
dec
loop
scas
dec
jae
mov
or
lahf
adc
std
mov
scas
jo
test
mov
or
push
outsb
sbb
mov
dec
pop
in
mulb
mov
ss
pop
mov
xor
xchg
dec
xor
inc
mov
negl
nop
jp
pop
lods
hlt
cmpsb
mov
loope
xlat
icebp
repz
js
lea
mov
mov
sahf
push
jmp
jb
or
xlat
add
xor
sbb
stos
leave
add
pop
ljmp
lods
rcrl
push
inc
into
xchg
pop
ret
loop
cmp
movsl
gs
dec
mov
call
ss
cmp
insl
xchg
sub
add
adc
pop
loop
sahf
adc
notb
mov
push
mov
lds
push
push
adc
ds
fcompl
xchg
cmp
add
jb
fnstenv
fisttpll
movsl
mov
sti
scas
sbb
xorl
dec
adc
in
sbb
mov
fimuls
sub
negb
xor
int
sub
clc
mov
pop
js
repnz
loopne
arpl
or
add
aas
mov
jns
xchg
or
xor
xchg
stos
inc
mov
das
test
adcb
sub
mov
repz
mov
cmc
pop
ss
mov
hlt
cmc
fcmovbe
out
sbb
popf
aam
aas
sub
jge
cwtl
mov
test
cld
add
push
imul
xchg
mov
jns
xchg
pop
call
stos
sbb
mov
out
inc
aaa
pop
pop
sbb
ss
movsb
xchg
rep
stos
push
jne
lods
cltd
jae
das
punpcklwd
push
in
cwtl
fisubs
repnz
push
je
dec
dec
mov
inc
xchg
movsb
add
insl
pop
dec
sbb
cmp
int
jp
sub
add
lret
sbb
movsl
xchg
imul
push
pop
lcall
sub
mov
inc
frstor
mov
inc
stos
cmp
into
setnp
jg
ja
cmp
mov
stos
mov
leave
and
shrl
dec
mov
cmp
sub
daa
push
rcl
jl
insl
roll
jmp
add
add
inc
out
push
xlat
or
pop
push
out
aaa
jbe
mov
adc
sbb
cld
cmp
in
cmp
mov
cmp
pop
xor
ret
dec
mov
mov
push
mov
icebp
jg
test
pop
push
sub
out
stos
lods
or
outsl
sarb
leave
xor
insb
lret
js
int
lret
xchg
out
fwait
cmp
arpl
jge
adc
lret
lds
adc
push
jp
int
pop
fst
jne
pop
clc
mov
divb
dec
cmc
popf
push
lea
in
cmpsl
xchg
fdivr
dec
and
cltd
and
rorb
sbb
test
fisttpll
xchg
and
subb
push
jb
scas
pop
imul
adc
mov
iret
sub
nop
test
aaa
ss
in
push
dec
into
push
sahf
js
mov
push
or
and
push
sub
mov
movhlps
call
push
arpl
popa
decb
push
push
lret
push
sti
adc
clc
mov
push
jne
orb
shr
adc
das
das
popa
int3
push
xchg
mov
push
not
mov
adc
pcmpeqw
sbb
dec
mov
push
sbb
xchg
fistpll
aas
sbb
stos
push
cmpsb
add
and
int
std
sbb
ret
mov
mov
test
pop
push
mov
push
cmp
mov
ficomps
nop
sbb
dec
pop
add
mov
cmp
rorb
mov
or
fisttps
or
inc
ret
lcall
popl
mov
in
stos
xchg
jbe
jae
into
add
cs
mov
cltd
fistpl
scas
sbb
or
rclb
ljmp
push
xchg
mov
push
sbb
or
jno
sbb
mov
sub
push
loope
and
pusha
and
fistpl
test
xor
dec
cmpsw
xchg
in
test
fisubrl
out
dec
fwait
mov
mov
mov
call
std
or
je
cmp
or
lods
sbb
rcr
add
pop
enter
mov
push
leave
fs
add
pop
mov
ror
push
push
ja
mov
push
xchg
or
cmpsb
mov
test
test
push
and
sub
popa
jno
sub
arpl
mov
pop
pop
mov
mov
cmp
stos
jo
mov
xchg
push
pop
iret
sub
jmp
inc
lods
sbb
pusha
nop
lods
scas
xchg
sbb
mov
pop
mov
rol
pop
sti
data16
mov
out
and
push
jne
orb
push
adc
notl
or
push
add
push
mov
mov
jge
rcr
fdivr
test
aam
xor
pop
mov
jecxz
cltd
xchg
jecxz
in
push
into
pop
movsb
jnp
aam
lahf
mov
dec
dec
ret
mov
loop
movsb
jo
sbb
dec
xor
imul
cld
lods
xor
cmp
lock
int
push
icebp
push
leave
shll
fcompl
pop
shr
das
test
ss
or
fsubs
mov
mov
lret
cmp
dec
jbe
out
add
shll
mov
inc
xchg
ret
cmp
and
sti
mov
rcrl
js
xor
mul
dec
repz
mov
cwtl
cmp
xor
cmpsl
stc
or
mov
das
inc
subb
cmp
imul
pop
mov
lods
adc
insb
inc
test
mov
mov
add
aad
gs
sbb
cmp
out
sub
mov
loope
loopne
ss
jb
lret
addr16
mov
ds
dec
adc
xor
in
dec
push
push
mov
push
inc
push
lods
movsl
nop
out
cmp
repz
pop
enter
push
ds
inc
xchg
lcall
jbe
lret
mov
pop
cs
adc
lock
in
mov
test
scas
adc
add
sbb
stos
mov
xor
repz
shl
pop
push
or
mov
sub
stos
push
imul
mov
adc
adc
push
jmp
mov
mov
out
lock
mov
or
lahf
test
repnz
shlb
or
negb
in
jb
mov
lds
and
outsb
add
ljmp
fst
mov
outsb
ja
xor
mov
scas
xchg
push
jb
cmp
push
mov
add
fstpt
loope
test
xchg
inc
adc
sbb
push
scas
jecxz
hlt
xor
cwtl
mov
inc
cmp
xchg
fwait
mov
int
xchg
xchg
outsl
insl
and
push
cli
sbb
mov
aas
hlt
mov
xchg
xchg
sarl
xor
jbe
pop
cmpl
iret
mov
xor
sub
xchg
cmp
test
cmpb
into
ret
ror
adcb
inc
loopne
and
not
xchg
mov
insb
adc
subb
xchg
cmpl
ret
dec
lds
out
inc
orb
xor
mov
jno
or
roll
ror
scas
mov
inc
data16
int
inc
ja
in
mov
imull
mov
fwait
sub
stos
dec
imul
mov
pop
fdiv
dec
push
mov
inc
xchg
cmp
pop
dec
adc
dec
dec
mov
cmp
insb
clc
les
mov
ret
imul
inc
mov
adc
cltd
jns
push
mov
repz
sbb
xor
out
call
leave
pusha
cld
sub
xlat
jns
adc
lds
or
scas
pop
jo
hlt
xor
call
jne
cmpsl
cs
pusha
add
mov
call
jp
mov
fwait
insl
or
jl
and
cld
jns
dec
adc
xchg
adc
iret
add
test
adc
push
sbb
cld
cmp
pop
sbb
jnp
notl
mov
stos
push
and
push
jns
fsubrl
lcall
cld
mov
mov
push
cmpsb
or
fstl
push
negl
fwait
push
push
mov
pop
push
testl
movsb
adcb
ljmp
pop
dec
xlat
aad
xor
inc
and
adc
mov
lods
call
cmp
jle
fidivrl
xor
in
repnz
push
fldcw
stc
mov
xchg
dec
out
jae
repnz
xchg
mov
sahf
int3
mov
imul
repz
je
mov
mov
outsb
cmp
xchg
and
rcrl
in
cmp
jb
out
and
jnp
pop
cmp
jb
inc
or
push
xor
or
filds
xor
ss
cmp
mov
jb
dec
cltd
sbb
dec
insb
out
out
dec
add
sbb
fisttpll
pop
fcoml
adc
push
js
and
aaa
ret
xchg
mov
jno
ret
out
pop
add
push
add
dec
push
out
xor
stos
cmp
jl
mov
pop
outsl
add
pushf
push
mov
outsl
pop
jo
inc
and
jge
cmc
clc
and
inc
jno
hlt
sub
mov
jmp
pop
cmp
out
outsb
test
fisubrl
pop
and
and
fcomp
fwait
adc
ljmp
aam
les
not
sbb
xor
push
jl
inc
mov
sahf
imul
std
lret
fisubrs
sbb
jns
mulb
lret
daa
cld
dec
movsb
jecxz
sbb
jg
add
adc
mov
xchg
dec
into
into
lods
and
xor
pop
in
and
loop
imul
rcrb
push
lds
mov
mov
lahf
sub
inc
mov
loop
call
mov
icebp
ds
in
jnp
repnz
mov
aad
jae
cmp
jecxz
ror
jmp
pop
mov
cmp
das
and
adc
out
sub
mov
push
sbb
je
and
into
xor
lods
rcl
sbb
std
imulb
in
hlt
mov
inc
xchg
or
xor
xchg
clc
out
js
repz
and
in
fsts
mov
out
mov
call
push
sbbl
enter
aad
push
mov
adc
push
in
jne
arpl
dec
jbe
addr16
cld
repnz
andb
sbb
lahf
xor
pop
int
out
fldl
test
les
sub
adc
in
out
cmp
aad
into
shll
add
cmpsl
inc
addl
sub
mov
jns
inc
or
pop
or
inc
js,pn
scas
out
ja,pt
daa
in
mov
jle
into
pusha
lock
cmp
test
pop
divb
in
push
sub
sub
dec
pop
or
lcall
push
pop
mov
pop
popa
mull
sub
pop
dec
test
cli
ja
dec
jnp
xlat
aad
push
adc
inc
cmpsb
add
scas
mov
mov
fwait
cld
aaa
fs
out
shl
lret
out
add
dec
scas
loop
sub
clc
js
movsl
cmpsl
ljmp
sbb
add
flds
loope
js
aam
loope
xor
int3
rclb
outsl
movsb
aam
inc
ds
ds
ljmp
cmp
mov
dec
ds
test
cmpsl
cli
cld
pop
rorb
mov
push
inc
jge
push
mov
shl
je
fcmovnu
iret
jmp
jne
or
xor
and
mov
test
cmp
mov
or
pop
fistpl
adc
shlb
outsl
mov
mov
lret
repnz
mov
shlb
loopne
mov
sbb
mov
xchg
pusha
mov
pop
jns
inc
test
sub
scas
flds
out
lea
in
pxor
sbb
int3
jg
add
mov
jp
js
out
insl
dec
cli
imul
rcrb
or
mov
into
loope
stc
xor
jb
out
test
cmp
not
inc
rcr
icebp
xor
loop
xor
lcall
imul
pop
ret
ror
jmp
mov
sub
outsb
jmp
stos
std
add
sarl
xlat
out
ja
mov
sbb
jae
sub
pop
xchg
add
mov
ljmp
aad
adc
sti
paddusb
add
cltd
push
adc
jae
test
test
xor
fwait
adc
das
push
adc
nop
and
inc
mov
sbb
adc
mov
cli
xor
mov
pop
xor
mov
mov
xlat
sub
inc
in
scas
mov
or
mov
and
andb
mov
xchg
and
leave
adc
xchg
xlat
adc
addb
insl
ret
cli
xchg
test
push
mov
xchg
add
fbstp
xor
or
xchg
adcl
daa
push
fscale
or
dec
cmpsl
mov
cmp
imulb
pop
imul
cmpb
cmp
stos
call
ljmp
cmp
cmpsl
pop
mov
fs
jl
push
xchg
movl
gs
xchg
scas
mov
lret
or
mul
cwtl
cmp
mov
lds
je
aas
cmp
aam
pushf
mov
jne
shll
xchg
imul
sub
jae
adc
mov
mov
inc
call
shll
scas
cmp
pushf
pop
gs
jae
adc
jge
mov
adc
mov
add
push
insb
ret
in
out
dec
cwtl
clc
enter
or
and
sbb
das
cmpl
inc
mov
addb
into
cmp
mov
or
arpl
push
clc
jl
popa
and
dec
xchg
fistps
icebp
xor
and
popf
imul
and
push
scas
dec
jmp
dec
bound
fisubrl
shr
ret
sbb
aam
scas
jae
and
daa
sbb
nop
add
pop
je
int3
les
out
xlat
sbb
es
dec
imulb
daa
and
cmp
sbb
insl
mov
inc
in
xorb
es
loop
mov
cmp
jne
std
xchg
lret
push
orl
cmp
cmpsb
mov
pop
jno
xchg
je
cmp
pop
push
pop
sahf
fisubs
pop
or
push
add
xchg
stos
aad
xlat
xchg
les
mov
ds
mov
daa
out
lods
testl
xchg
cmpsb
movsb
flds
xchg
cmpsl
mov
xor
popa
cmpsb
mov
cmp
pusha
mov
mov
mov
js
cmp
sahf
sub
pop
sbb
cmp
dec
shl
mov
mov
xchg
in
sub
xchg
test
stc
push
or
pop
pop
mov
jle
cmc
iret
ret
into
mov
push
div
aaa
lock
addl
das
into
add
xchg
lock
fwait
iret
mov
inc
jmp
fwait
outsl
mov
aad
pop
iret
aas
mov
cmp
sub
aam
xor
test
fimull
outsb
cld
cmp
lods
das
push
into
dec
push
test
mov
ret
mov
pushf
push
push
xor
mov
filds
jno
repz
adc
xlat
movsl
adc
mov
pop
pop
push
dec
xor
jg
sub
xchg
icebp
stc
jno
mov
add
and
mov
mov
mov
test
int3
jno
and
mov
stos
or
xor
cmc
dec
add
outsb
xchg
cmpb
adc
jg
jmp
cmp
dec
ja
mov
jo
dec
add
jge
outsb
and
inc
push
sbb
adc
je
fadds
mov
dec
imul
outsb
mov
mov
pop
jge
or
push
cmpsl
xlat
sbb
mov
scas
pop
test
sbb
loopne
push
sahf
cmp
fiadds
repz
xorb
ret
push
inc
mov
and
inc
xorl
fsubl
movsl
je
daa
inc
mov
sbb
dec
jp
fcoms
mov
imull
pop
push
lock
and
pop
mov
add
mov
inc
xchg
or
mov
inc
add
addr16
mov
int
mov
hlt
icebp
add
push
cmp
mov
shll
mov
cmp
test
mov
stos
int3
inc
push
xor
cmpl
rcll
imul
jbe
ljmp
sti
and
mov
dec
enter
movsb
dec
les
sub
push
push
inc
xorb
popa
add
xor
je
lds
dec
jne
jl
pop
push
cmp
or
cmp
and
jno
lock
imul
mov
inc
pushf
add
test
jp
pop
sbb
data16
loope
add
sbb
mov
jne
mov
sarl
cld
mov
push
inc
push
cmp
rcl
dec
in
jle
fstp
jp
push
or
push
fwait
add
xchg
movsl
sahf
daa
cmp
or
fcoml
cmp
add
xchg
testb
pop
xchg
std
cmp
movsb
push
fs
push
cmp
cmp
movsb
jns
outsl
jno
xchg
jne
jg
cmp
push
leave
mov
repz
jno
insl
pop
iret
scas
cmp
outsb
fwait
or
mov
movsl
cli
les
dec
mov
repnz
ja
aaa
adc
daa
and
pop
popf
sahf
cmp
js
out
pop
mov
mov
or
sbb
lret
js
pusha
dec
in
popa
cld
push
inc
inc
sbbb
out
mov
cmp
jne
xor
sub
fistps
cs
or
push
pusha
dec
cltd
test
xlat
in
jmp
pop
cmp
jg
test
or
mov
dec
push
aas
ja
aad
push
into
mov
loope
inc
inc
addr16
mov
xor
or
add
adcb
or
leave
ljmp
cmpsl
mov
add
das
sbb
add
clc
dec
andb
lret
dec
pop
jae
sbb
subl
sahf
push
cmp
mov
rorb
lea
fisttps
jmp
in
cmp
dec
aaa
pop
aas
out
fisttpll
add
outsb
iret
pop
sar
movsb
pop
call
or
into
mov
js
mov
sub
popf
ja
outsl
mov
in
xchg
popf
add
hlt
mulb
adc
add
aaa
push
sub
push
repz
adc
sbbl
aad
js
ja
cld
jno
pushf
or
or
sbb
inc
ljmp
sahf
sbb
out
mov
test
lea
adc
dec
arpl
lcall
stos
lcall
loopne
jecxz
jecxz
cwtl
xor
gs
rorb
in
cmpsl
insl
or
aam
or
xlat
out
dec
into
mov
cmpsb
fwait
enter
sbb
add
cmpsl
pop
fs
xor
push
mov
add
sbb
or
out
rol
dec
mov
cmpsb
inc
inc
push
inc
xor
add
dec
int3
or
push
fwait
int
repnz
clc
xor
stos
loopne
and
dec
sbb
fstp
cmpsb
pop
sub
daa
testl
push
fisttps
push
push
lahf
lret
mov
xchg
push
les
cmp
rcrb
add
push
push
mov
sarb
inc
jl
sbb
scas
push
jnp
xor
jnp
cld
movsl
mov
cli
insb
mull
add
push
pop
ret
push
in
adc
and
cld
arpl
ss
mov
ret
adc
pop
cmp
andb
pop
cltd
int3
mov
xchg
mov
add
mov
lret
scas
adc
aam
cmp
mov
inc
mov
cmp
out
mov
imul
push
pushf
sub
lds
jg
arpl
aas
icebp
rcrb
test
sti
cmc
jecxz
dec
jbe
jl
push
loop
xor
inc
xchg
inc
sti
call
adc
push
jns
out
nop
imul
jg
fmull
ds
and
jecxz
dec
lds
imull
adc
aam
or
adc
push
sbb
pop
call
ficoms
xchg
fninit
ret
fdivr
pop
call
mov
lret
imul
lret
addb
rorl
les
mov
pop
push
dec
stc
js
sub
push
mov
jmp
dec
pop
pusha
adc
push
movsl
or
and
ficompl
xchg
xor
aam
in
fimuls
fidivrs
sub
lock
sahf
xor
pushf
inc
inc
lock
outsw
icebp
cmp
ret
xor
cs
rorl
enter
xor
sbb
jle
adc
xchg
cmp
cmc
test
popl
fmuls
jmp
pusha
ds
in
movsb
aas
push
adc
mov
fdivrs
les
pop
push
push
and
pop
lret
cmp
mov
in
cmp
adc
sbb
mov
cmp
xchg
jl
fcompl
inc
add
jb
jg
push
imul
mov
push
push
mov
xchg
sub
cs
sub
cmpsb
mov
or
adc
sub
pushf
sti
std
xor
imul
xchg
sahf
xchg
mov
popa
js
ucomiss
sub
cwtl
scas
fstpt
sub
push
out
inc
inc
and
and
lcall
adc
jg
fnstcw
cmc
sbbl
xor
push
mov
fcoms
sub
rclw
mov
and
jg
jl
stos
inc
jbe
lods
push
sbb
add
addb
mov
mov
cmpsl
add
cmpsl
test
xor
imul
fisttps
mov
subl
jae
into
sbb
fldenv
mov
pop
xor
sbb
or
out
gs
sbb
xor
or
inc
mov
test
pop
xor
cmpb
cltd
mov
movsl
or
adc
mov
icebp
or
push
add
cmp
sahf
mov
scas
sub
clc
push
mov
in
add
gs
enter
sub
dec
jno
ljmp
insb
inc
or
mov
es
or
rorb
adc
cmp
es
inc
sub
aad
sub
mov
ljmp
push
repz
jbe
xor
push
lds
cmp
cmp
and
into
sbb
repz
sbb
imul
adc
lret
ja
test
push
mov
rclb
jg
stos
push
inc
mov
pop
ds
add
push
cmp
dec
lret
adc
pushf
lret
mov
push
sahf
jo
insb
mov
xlat
das
sub
jmp
sub
xchg
cltd
inc
sqrtps
add
pusha
or
inc
sahf
sbb
aam
leave
or
xchg
xor
xor
negb
sub
mov
popa
sub
into
enter
jge
sbb
je
xorb
jae
ficoms
pop
push
je
adc
sbb
lds
popa
push
xor
loop
icebp
xchg
shll
nop
cmp
out
je
dec
int3
ja
and
aas
push
gs
dec
cmp
xchg
push
mov
push
and
cld
and
mov
adc
sub
fmull
aas
pop
ljmp
xchg
jg
and
jg
mov
icebp
or
and
inc
pop
or
testl
ljmp
std
dec
mov
lods
push
cmp
xlat
pop
jle
adc
je
inc
push
pop
scas
mov
clc
cli
inc
xlat
jmp
arpl
jno
bound
jo
xchg
inc
lahf
enter
in
fldt
icebp
dec
add
dec
test
out
lods
cmp
popf
or
dec
push
cwtl
sbb
movsl
adc
mov
bound
sbb
cli
leave
lret
testl
in
out
xor
leave
shl
push
mov
mov
lods
call
and
enter
mov
or
mov
dec
sarb
or
int
xor
popf
imul
ret
dec
jg
push
pushf
mov
mov
pop
jno
jae
cmp
sbb
data16
sub
ret
mov
mov
inc
lret
lret
mov
push
sbb
mov
rcll
jge
cmp
fidivs
ljmp
cld
enter
jecxz
xor
stos
daa
or
mov
lret
movl
imul
xchg
add
sti
adc
cmp
adc
hlt
outsl
dec
insb
pop
fnstcw
push
jp
xor
fwait
insl
repnz
ret
mov
cmp
pop
arpl
xchg
xor
std
es
pop
sbb
daa
mov
rcrl
adc
mov
jbe
jbe
adc
cmp
icebp
adc
pop
test
loop
mov
imul
push
and
lea
xchg
jl
mov
sub
dec
cs
push
xchg
test
stc
insl
xor
xor
dec
xorl
sub
enter
push
jecxz
sub
aaa
bound
mov
pusha
mov
cmpsb
dec
mov
push
lds
ret
aam
dec
loope
inc
xchg
movsb
nop
mov
cmpb
mov
orl
ss
push
sub
in
mov
xor
mov
test
dec
sbb
test
add
ja
push
mov
sahf
sti
mov
test
xor
add
add
pop
lods
call
pop
jne
lcall
int3
dec
jmp
xchg
adc
out
mov
cmpsl
jbe
xlat
inc
ljmp
mov
pop
push
sbb
shlb
xchg
pop
xor
pop
xor
dec
inc
add
jne
cwtl
jecxz
outsb
adc
and
stos
andl
scas
in
mov
ss
outsb
or
rolb
mov
xor
movsl
fidivrs
fiaddl
cmp
int
loopne
xor
or
pusha
cmp
jmp
in
filds
std
stos
dec
lods
adc
sbb
and
lods
jg
mov
sbb
ret
rorl
test
fsubl
mov
xchg
jp
mov
xchg
cwtl
xchg
fstpl
cmp
push
and
xchg
arpl
dec
fsincos
mov
pop
lret
cmp
mov
lret
out
jp
mov
add
mov
lods
pop
push
aaa
xor
sub
pop
inc
sti
add
inc
and
jmp
loopne
sbb
dec
popf
jg
inc
xchg
inc
mov
inc
xchg
push
jbe
sahf
or
je
lret
pop
sub
add
mov
int3
pop
jmp
push
and
push
xchg
mov
test
inc
sbb
fnstenv
sarb
out
insl
adc
jecxz
push
pop
lcall
cmp
std
test
in
hlt
rolb
fs
lods
dec
jge
cmc
mov
pop
out
movsb
cmpsl
mov
pop
dec
in
mov
jne
jns
jl
mov
ss
shl
shlb
and
pop
jo
bound
stos
mov
push
dec
lods
test
add
mov
idivl
into
cmp
sbb
pop
addb
out
sbb
call
cmp
sti
call
imul
adc
lret
stc
mov
repnz
aad
fisubl
daa
in
mov
sbb
mov
orl
jno
movsb
and
pushf
dec
add
cmpsb
push
lods
stos
push
gs
cmpsb
in
sbb
sub
or
aad
sub
push
std
jg
pop
pusha
pop
mov
or
push
stos
stos
je
cs
dec
ret
into
sbb
les
js
loope
insb
cli
push
jl
mov
jecxz
inc
cltd
out
xchg
out
inc
and
mov
inc
push
mov
pop
add
frstor
hlt
sub
icebp
lret
mov
or
pop
cmp
mov
dec
push
pop
lahf
stc
xchg
lahf
in
mov
cld
add
lret
popf
inc
sub
ret
push
or
adc
je
inc
fsubs
sub
jbe
pop
jae
cmp
idivb
inc
lahf
xchg
jo
scas
cmpsb
and
mov
or
xor
popfw
pop
dec
mov
dec
inc
xor
jg
lods
lea
xor
repnz
xchg
int
adc
add
lret
mov
pop
cld
lret
aas
add
leave
adc
incb
add
push
inc
xchg
or
cs
orb
bound
inc
xchg
scas
push
sub
mov
cmc
lods
into
fst
push
in
xor
or
mov
leave
jp
mov
fwait
or
push
shl
pop
daa
loopne
fsubs
in
imulb
pop
out
jmp
sahf
jne
cmc
or
dec
or
iret
or
cmp
sbb
outsl
jae
xchg
insb
dec
xchg
mov
jg
add
icebp
push
lcall
in
xchg
in
mov
dec
jp
sbbb
aaa
mov
or
fdivrl
sbb
insl
aaa
cmp
or
mov
pusha
jecxz
mov
push
je
lret
stos
je
insl
mov
shrl
inc
cmpsl
call
mov
xchg
sub
iret
test
test
add
jne
mov
hlt
inc
cmp
push
lret
xchg
pop
lahf
and
xor
insb
dec
inc
sub
sahf
push
test
or
shrb
cmp
scas
push
adc
pop
add
into
lcall
jg
jae
jo
xor
addr16
cmc
mov
stc
movb
mov
xchg
inc
scas
jae
push
int3
push
arpl
addr16
dec
add
outsb
lcall
std
xchg
cltd
movsl
fdivrs
push
mov
lea
js
sub
mov
leave
pop
je
insb
pop
aad
data16
mov
addr16
popf
inc
mov
aam
fldpi
jno
cmc
sbb
int
addr16
push
jmp
ja
dec
push
int
xchg
stc
fisttps
lahf
push
dec
mov
mov
xor
cltd
add
cmp
xor
inc
scas
mov
out
popl
outsl
mov
mov
sbb
cli
mov
pop
xchg
push
stc
mov
push
lret
push
mov
inc
sub
gs
lds
addr16
or
jns
int
divb
popa
xchg
jo
ss
std
aas
xchg
hlt
lret
jp
in
pop
cltd
popf
xor
scas
je
ss
cmpl
inc
sbb
sub
mov
dec
dec
dec
imul
xchg
jns
and
jns
mov
pop
mov
mov
lret
sti
outsb
jne
pop
iret
ja
imul
cmpsl
jnp
out
test
outsl
push
fimuls
ljmp
mov
mov
push
push
cmp
pop
sub
xor
push
out
pop
mov
or
hlt
es
fnsave
cmc
repnz
insl
jg
dec
xchg
xor
push
jge
jbe
xchg
int3
push
add
cmp
xor
inc
shll
adc
in
adc
mov
sbb
cmp
shrl
int
push
pop
jne
and
fcompl
clc
mov
pop
cmp
fsubs
add
lcall
cltd
subb
idivb
stc
mov
es
dec
fwait
in
push
jmp
out
lret
ficomps
pop
push
xchg
in
insl
fisubrs
data16
jne
in
push
jno
xor
scas
nop
out
sti
cmp
cli
or
popf
add
add
mov
shll
cmpsl
icebp
iret
loope
inc
std
mov
out
mov
mov
shlb
test
shrl
inc
push
xchg
loopne
stc
frstor
jbe
scas
push
outsl
sub
pop
loop
cmp
outsl
in
dec
or
int3
adc
sub
push
dec
hlt
ljmp
in
test
es
xor
add
shll
insb
add
in
push
mov
add
pop
cwtl
hlt
test
mov
xor
xchg
sbb
inc
loop
xchg
add
aas
push
xchg
test
jbe
rcrb
lcall
ss
push
cmp
push
stos
adc
cmp
xor
mov
mov
mov
in
push
movsb
int3
inc
and
xchg
je
iret
pop
out
push
sub
daa
push
clc
insl
stc
cmp
subb
sbb
jmp
fldcw
cmp
mov
mov
dec
sub
mov
xchg
out
sbb
pop
sub
out
cwtl
test
push
sahf
cmpsb
jno
mov
add
pop
fisubrs
mov
ja
outsl
scas
cmpsl
xchg
icebp
and
and
add
or
sbb
iret
inc
into
mov
leave
ljmp
push
jle
jl
adc
clc
cmp
cld
lahf
daa
cmp
mov
imul
popf
cmc
jns
clc
ret
incl
icebp
js
icebp
test
pop
mov
ret
cmpsl
mov
jns
mov
test
repnz
movsl
addr16
mul
shll
loop
fnsave
fwait
pop
mov
pushw
xchg
add
lret
jge
pop
nop
xor
pop
in
shlb
add
mov
imul
push
insb
jl
jae
pusha
or
or
push
mov
pushf
or
pcmpeqw
ss
in
int
dec
nop
push
mov
aaa
xchg
fneni(8087
in
cmp
mov
cmp
es
jb
fldenv
inc
mov
jne
jl
pushl
dec
pop
inc
cmpsl
inc
xchg
insl
shrl
stos
jg
dec
push
and
push
je
shll
and
pop
xor
std
sbb
pushf
lea
add
lods
jecxz
sahf
mov
sub
stos
outsb
andb
stc
das
sbb
sub
cmpsl
or
adc
test
jne
outsl
lds
cmp
dec
jecxz
mov
int
inc
rcrb
pop
lcall
cmp
loope
push
cmpsb
and
mov
mov
push
xor
inc
cltd
leave
or
jo
jae
inc
push
sub
out
jecxz
clc
xchg
mov
adc
das
cmpsl
lds
jb
fcmovnu
xor
jmp
mov
mov
out
pop
mov
or
push
inc
sbb
dec
scas
sbb
aad
sar
scas
jp
roll
int
call
push
xor
jno
mov
xchg
dec
push
subl
ret
add
in
and
ret
cmp
sbb
lahf
push
xor
push
fimull
es
mov
pop
pop
mov
mov
mov
or
jp
mov
icebp
xchg
sahf
push
push
pop
clc
xchg
pop
jbe
cmp
in
mov
sahf
popf
aad
mov
addr16
or
xor
mov
jo
inc
inc
jg
cmc
icebp
add
pop
dec
enter
test
adc
or
out
mov
pop
stc
add
shrl
fisttpll
jne
mov
in
aad
movsb
push
dec
inc
aas
mov
pop
sub
add
xchg
sbb
dec
cwtl
je
lods
mov
iret
stos
push
jmp
mov
jb
push
out
into
add
inc
mov
or
mov
sub
mov
dec
clc
loop
add
addl
jae
sbb
dec
in
je
adc
push
cmc
fcmovb
adc
movhps
bound
xchg
sbb
in
mov
ljmp
cld
mov
jb
imul
outsb
cltd
or
movsl
push
adc
dec
xchg
cmp
insl
mov
test
movlps
cmp
adc
push
fildl
adc
push
or
mov
out
dec
scas
or
xchg
add
insw
push
push
xchg
test
imul
jle
cmpsl
fcmove
sti
dec
mov
sarl
mov
xchg
cmpsl
call
mov
and
adc
sub
dec
push
in
and
pushl
push
or
or
lods
and
push
mov
aad
push
mov
push
fwait
xor
adc
and
lods
gs
push
mov
cld
jnp
mov
inc
lds
sbb
rcll
jbe
inc
scas
fnsave
xchg
or
or
push
mov
xor
test
pop
clc
add
outsl
push
or
xchg
mov
dec
leave
cmp
cmpsl
xchg
inc
push
mov
pop
mov
sub
xchg
testb
push
pusha
ret
cld
shrb
sbb
mov
sub
mov
add
xor
dec
cld
push
repnz
mov
jae
cmpsl
shrl
cmp
loop
test
jecxz
dec
ror
jnp
popa
lea
jg
mov
adc
mov
mov
jae
faddl
and
cld
mov
adc
jecxz
cli
test
mov
lods
aam
xchg
mov
adc
or
sub
insl
mov
mov
pop
adc
fnstsw
fwait
xchg
and
mov
push
and
fsubrs
icebp
jne
out
orl
push
sub
scas
gs
lea
cmp
push
popa
mov
gs
js
or
shrl
es
loope
loope
gs
stos
mov
insb
fldcw
aas
lret
decb
jecxz
aad
inc
fisttps
inc
js
scas
arpl
das
int
adc
xchg
xchg
mov
mov
add
sbb
jp
push
mov
and
in
inc
rcrb
mov
lea
addr16
pop
jno
adcb
std
push
pushf
fwait
leave
xchg
fistpl
data16
arpl
mov
xor
jp
xorb
data16
fsubs
or
test
ljmp
lret
adc
mov
mov
jnp
bound
xor
pop
cmpsb
fsubs
push
xor
popf
xchg
mov
mov
adc
rorb
sbb
push
or
push
mov
add
les
jmp
ds
xchg
sub
scas
lods
lods
sub
rclb
rcrb
rcrl
pop
mov
jbe
dec
add
sarl
sbb
push
or
shl
jns
cmc
out
aad
iret
insl
mov
out
rolb
adc
push
jo
imul
imul
or
fstps
jns
push
cmp
xchg
inc
test
cmpsb
iret
jns
mov
push
mov
out
popa
xchg
addr16
ja
int3
xchg
vrcpps
cmpl
js
mov
dec
pop
pushf
xchg
lods
pop
mov
mov
xlat
xor
and
enter
stos
adc
jmp
sti
sbb
inc
dec
clc
dec
cmpsb
out
int3
pop
lahf
scas
rorb
pop
sahf
arpl
clc
or
jbe
cmp
push
nop
adc
fildl
cld
sbb
hlt
cmpsl
sbb
mov
jecxz
adcb
cmp
jno
pop
push
pop
gs
push
jnp
mov
outsl
jp
and
hlt
into
or
and
sub
cmc
xchg
mov
in
cmpsb
lods
enter
les
xchg
xlat
jo
leave
cwtl
pusha
pop
mov
adc
fidivs
jbe
test
push
jl
dec
mov
xchg
loop
inc
cmc
stos
fadd
push
subl
xchg
xlat
lea
les
mov
les
jnp
mov
cmp
push
cmpsb
ljmp
push
sbb
dec
inc
iret
inc
divb
dec
mov
imul
jle
push
sub
mov
into
adc
jbe
pop
pop
mov
mov
xchg
mov
xchg
ja
stos
inc
xor
push
mov
stos
sub
add
sbb
sbb
insl
fdivl
loopne
insb
pop
add
mov
lods
dec
out
pushl
ret
mov
mov
push
xchg
cld
mov
icebp
aaa
jg
mov
repnz
mov
mov
push
jg
mov
xor
add
cs
push
fs
fwait
ret
sub
cmp
int3
push
push
popf
imul
pop
iret
das
data16
xchg
mov
mov
add
aaa
push
sahf
int3
add
or
and
or
cmp
inc
dec
in
test
adc
imul
ss
jmp
filds
lods
loopne
scas
jp
mov
cmpsl
xor
jle
mov
dec
jae
test
mov
andb
cwtl
aas
sbb
mov
xor
aas
xchg
lahf
mov
add
int3
test
jmp
pop
push
add
push
or
push
call
enter
shrl
inc
or
test
xor
cmp
fwait
arpl
das
cltd
or
mov
xchg
mov
add
sub
loopne
call
inc
adc
inc
cld
int3
xor
dec
xor
hlt
faddl
add
add
xchg
add
add
mov
push
cmp
fistl
jbe
pop
pusha
and
xor
movsb
cmp
pop
inc
imul
cmp
pop
shrl
or
fs
xor
inc
mov
out
mov
pop
sub
cmp
mov
inc
call
nop
nop
push
stos
in
sub
and
lods
sbb
pop
pop
lock
cltd
in
fdivs
stc
and
imul
cmp
sbb
lock
mov
inc
paddd
mov
push
mov
sbb
xchg
dec
jle
cmp
jl
xchg
mov
stos
inc
bound
addr16
lds
jb
movsb
mov
xchg
push
cmp
dec
loop
xor
loop
lss
fsubs
xlat
add
fistpl
jnp
mov
pop
pusha
aad
dec
adcb
cmp
inc
stos
push
pop
add
mov
cmp
cmp
test
jne
pop
sahf
xor
mov
cld
insl
inc
mov
out
adc
test
inc
lods
pop
inc
dec
incl
add
addr16
sti
jmp
fadds
mov
inc
adc
cmp
cmc
enter
inc
mov
mov
mov
orb
sbb
sbb
scas
stos
dec
dec
imul
xchg
pop
in
sub
fdivp
js
icebp
aad
mov
jno
imul
arpl
mov
std
inc
lods
int
fildl
or
mov
add
dec
mov
jle
dec
xor
shrl
and
andb
push
outsl
pop
pop
int3
xor
les
pop
int3
jnp
rcrb
aas
push
mov
popf
adc
adc
or
sub
sub
push
sbb
aas
jle
xor
shlb
jae
lcall
shlb
mov
cltd
aam
pop
in
das
mov
dec
jns
out
shll
fisttps
adc
movsb
sub
jg
shll
rolb
sti
lahf
addb
or
test
gs
fadd
sub
dec
xchg
sub
pop
fcomp
adcb
cwtl
add
sbb
sbb
test
out
shrb
cmp
jns
loop
imul
hlt
add
scas
int3
nop
xor
in
sbb
adc
mov
xorl
jne
mov
cmpsb
sub
sahf
scas
xor
fisttps
mov
mov
enter
icebp
jbe
jp
xchg
xchg
in
mov
lods
iret
cmpb
in
inc
lock
movsb
inc
add
cwtl
jg
packsswb
or
jl
ss
daa
sub
outsb
movsb
push
sub
cltd
out
imul
pop
mov
sbb
into
inc
mov
hlt
mov
adc
jbe
sbb
dec
cmp
sbb
sbb
cmpsl
push
adc
mov
mov
popf
sub
cmp
sub
lea
mov
sub
mov
add
mov
push
xor
pop
mov
pop
lds
push
inc
pusha
sbb
xor
aas
aad
dec
hlt
sahf
pop
jge
mov
pop
xchg
roll
mov
scas
rcll
mov
fsubl
or
inc
lcall
cmp
cltd
pop
cwtl
out
cmpsb
inc
push
leave
lock
mov
fsubr
and
out
push
mov
push
pusha
dec
filds
mov
pop
fld
in
and
sub
cmp
or
imul
mov
xchg
xor
ret
jle
xor
push
cmp
mov
jg
xor
mov
add
fisubs
push
push
adc
inc
jbe
sub
es
mov
test
sub
mov
in
or
mov
and
mov
data16
jg
cld
cmc
xchg
mov
xor
fbld
dec
int3
sbb
scas
xor
call
imul
jb
adc
out
xchg
or
lock
push
cmpsl
push
or
ret
push
jns
pop
lcall
fwait
stos
lahf
jg
push
inc
xchg
sbb
stc
jno
or
dec
sub
das
or
adc
fnstcw
mov
in
adc
into
inc
or
js
add
and
mov
inc
xchg
xchg
loope
jg
jecxz
lods
clc
mov
inc
cwtl
jbe
push
hlt
nopl
nop
add
ljmp
sub
insl
loop
dec
icebp
outsl
sub
sub
movsb
fcoms
inc
lock
inc
mov
sbb
clc
rolb
push
xorl
subl
add
daa
cmp
out
mov
fdivrs
loope
shll
xlat
jns
repz
and
jg
nop
shrl
or
in
outsl
lcall
or
push
sub
xchg
dec
add
idivl
scas
shrb
daa
ja
fimuls
fstps
jne
ljmp
popa
xor
sbb
lret
aam
xorb
sub
rclb
xchg
or
sbb
dec
inc
add
lock
mov
jb
or
pop
xor
dec
mov
nop
and
call
fcmovne
cs
and
loope
dec
lods
imul
call
add
xchg
push
xchg
mov
mov
pop
cmp
push
out
test
xorb
cmp
dec
fldt
sub
jmp
adc
imulb
push
jmp
cli
imul
mov
push
add
xchg
dec
mov
ss
xchg
insl
scas
xor
push
xchg
das
jno
testb
int
pop
mov
ret
insb
sub
leave
sti
sub
es
rcrl
les
int3
insb
mov
or
and
jae
call
cli
call
sarb
ret
insb
jmp
fnstcw
xchg
loope
loopne
loopne
imul
push
mov
addb
test
mov
aaa
sbb
dec
clc
xor
test
ret
sbbl
mov
and
out
lcall
cvtps2pi
push
lret
pop
adc
das
andb
mov
movsb
pushf
cmp
das
call
mov
aas
cmp
mov
pop
pop
xlat
in
pop
test
dec
leave
std
push
or
outsl
fistpl
jl
pop
jb
shr
xchg
cmp
scas
enter
loopne
and
cmp
inc
mov
roll
and
mov
add
les
clc
mov
jg
sbbb
popf
cs
sti
mov
jbe
pop
push
lea
sbb
scas
in
inc
adc
cmp
mov
jmp
mov
jo
dec
mov
loopne
sub
ds
das
ret
in
xchg
insb
into
test
outsb
mov
test
mov
push
jns
mov
xor
xchg
int
or
mov
mov
out
lahf
and
jbe
jne
or
fcoms
lds
fstl
and
sub
es
movsb
adc
cmp
push
int3
jo
inc
xchg
lcall
mov
adc
xchg
push
sti
mov
xchg
xchg
in
cs
sbb
cmpsb
sti
or
mov
add
and
out
add
inc
stc
sub
mov
mov
jle
idivb
nop
inc
cmp
add
insl
mov
mov
jge
pushf
ds
out
jmp
ja
jg
inc
das
mov
imul
mov
cmpsl
cmp
fdivl
cli
mov
hlt
cmp
pop
sbb
xchg
int
xchg
frstor
cwtl
stos
dec
cli
xchg
pop
pop
inc
nop
add
jo
sbb
nop
aad
loopne
dec
sub
or
cmp
les
inc
xor
repz
pop
pop
lock
nop
fwait
hlt
ss
aad
andl
fiadds
dec
cmp
mov
fimuls
jp
inc
pop
ret
ja
cmp
xchg
push
daa
cltd
not
xlat
iret
cmp
add
lock
lcall
aas
outsl
xor
mov
mov
mov
call
xchg
imul
cmp
insb
fildl
bound
movsl
mov
filds
imul
dec
fisttpl
sub
and
arpl
addr16
stos
xchg
repnz
sbb
or
add
mov
jp
push
mov
pusha
jns
xcrypt-ofb
cmpsl
out
clc
or
sub
bound
jmp
and
incl
aas
adc
sahf
push
in
shll
shrl
pop
jne
mov
sub
stos
cmp
mov
or
sti
sub
mov
je
call
jge
fisttpll
sbb
jg
repz
js
adc
jge
mov
mulb
xor
inc
movsl
lock
mov
cli
lahf
add
jmp
mov
inc
sbb
mov
sbb
add
add
sub
out
xchg
jns
pop
pushf
jbe
sbb
cwtl
dec
mov
ds
and
sbb
add
mov
inc
mov
add
adc
and
sub
scas
aas
insl
push
mov
jg
sbb
fcomps
pop
insl
hlt
and
mov
mov
icebp
jecxz
inc
push
imul
rcl
ja
mov
loop
cmp
mov
dec
or
dec
dec
notb
jnp
sub
xchg
cli
iret
out
shll
insl
cmp
dec
lcall
aad
sbb
sub
push
xor
adc
lret
das
shl
paddw
push
push
mov
mov
rcrl
lods
out
fnstcw
shll
lcall
and
adc
int3
cmp
sbb
dec
cld
leave
and
dec
adc
lods
scas
xchg
push
repz
les
mov
jmp
xchg
xor
and
cli
mov
pop
shl
stos
mov
pop
pushf
cs
cwtl
sbb
adc
mov
jle
jp
cld
hlt
repnz
lahf
adc
test
aas
sub
mov
cmpl
lods
push
test
pop
popa
shll
pop
adc
inc
out
js
imul
jno
popf
rorb
cmpsb
in
mov
scas
ret
and
shl
sub
call
mov
and
lret
mov
cmp
cld
mov
cltd
roll
or
pop
and
cmp
dec
sub
mov
enter
mov
cmp
ficompl
fdivr
hlt
ja
jecxz
add
push
jecxz
repnz
imul
sbb
sar
nop
rdtsc
lret
sub
cs
mov
mov
or
pushf
in
mov
fs
mov
push
cmp
sbb
int
inc
int3
add
mov
test
xchg
lret
adc
mov
ffreep
out
std
arpl
sbb
and
mov
cs
out
jo
mov
rcrb
pminub
inc
arpl
imull
div
es
mov
repnz
js
pop
push
les
pop
adc
xchg
sbb
daa
add
jbe
insl
push
jl
sbb
ljmp
pop
dec
pop
and
daa
cmp
pop
out
pop
cmp
mov
mov
lods
les
mov
and
pop
dec
jne
das
movntq
pusha
pop
mov
xor
es
cmp
fistpll
pushf
adc
pop
inc
push
jecxz
xlat
and
stc
imul
fs
cmp
inc
cmpl
xchg
mov
jns
sub
popa
daa
and
aad
xchg
xor
push
out
mov
cmp
sub
addr16
jge
sub
mov
jl
scas
adc
or
pop
cmp
and
mov
add
push
or
mov
pop
sbb
roll
nop
nopl
stos
push
pop
repz
mov
cwtl
pushl
sbb
dec
sbb
dec
out
test
and
test
rorb
cld
ret
seto
pop
push
fistpl
out
sub
push
sbb
mov
push
jo
sbb
aam
jno
cmc
outsb
push
int3
inc
xor
fdivr
test
imul
mov
jb
lret
stc
cmp
cs
sub
mov
lea
pop
rcrb
xor
jmp
push
pop
scas
int3
push
push
jb,pt
loopne
jle
jg
add
push
inc
mov
pusha
and
pop
ss
pop
xor
fs
xor
loope
push
lock
test
scas
mov
ds
mov
mov
incb
or
in
cmp
std
mov
xor
mov
jmp
movsl
in
nop
icebp
cmpsl
mov
jns
push
mov
scas
sub
fdivr
add
or
jp
out
repz
sbb
adc
mov
mov
push
cmp
loope
xchg
scas
push
insl
scas
mov
stos
jae
sahf
cmp
cmp
xchg
jecxz
sbb
xor
add
fisubs
push
xor
add
push
add
sbb
add
bnd
pop
xchg
dec
testl
call
or
mulb
enter
notb
roll
pop
movsb
sarl
pop
adc
scas
push
dec
fdivrp
mov
repz
adc
xchg
int3
push
add
and
fsubl
cmp
out
pop
and
outsb
push
push
adc
aaa
mov
mov
or
push
pushf
add
cwtl
lock
out
or
jae
ss
push
dec
test
xchg
sbb
jp
adc
rclb
repz
movsb
pushf
negb
or
mov
dec
jg
fsubs
adc
push
in
addr16
stc
rcrb
dec
push
cmpsb
push
lods
lret
jns
add
lret
cmp
push
mov
aas
sbb
push
jae
mov
stc
mov
cmpsl
cmp
dec
mov
add
mov
mov
or
cld
psubsb
xchg
cwtl
jo
inc
xor
mov
xchg
dec
daa
mov
fldl
mov
popf
repnz
loop
test
adc
ja
cmp
clc
sub
inc
sahf
xchg
sbb
rol
jg
enter
rclb
push
gs
xchg
cmp
stc
mov
out
stos
fdivrl
std
out
sahf
sub
adcl
fsubl
mov
pop
push
sub
dec
mov
inc
xchg
and
inc
mov
dec
push
xchg
xor
data16
mov
sbb
clc
lods
mov
gs
pop
xorl
inc
out
cmp
xor
stc
hlt
lea
xor
dec
ss
les
stc
rcrl
pop
fnstenv
test
dec
mov
out
inc
add
adc
fdivp
mov
loopne
push
lea
insl
mov
pop
or
or
xor
lods
or
xor
lds
mov
sbb
jae
movsb
orl
mov
mov
push
repnz
inc
sbb
add
xor
push
jl
lods
icebp
scas
vmread
push
pusha
push
mov
dec
daa
sub
test
pop
or
ficompl
xchg
xor
mov
lea
xchg
fs
jp
popa
adc
test
movl
sar
aad
leave
cmp
mov
push
rcr
sbb
mov
sti
sub
aaa
test
mov
pop
xchg
cmp
adc
lret
inc
inc
add
xchg
repz
xchg
cwtl
adcl
nop
loop
fs
adc
jo
mov
loopne
dec
and
out
and
int3
push
adcl
and
fwait
xor
jl
imul
movsl
add
call
pop
int3
imul
or
or
rolb
hlt
repz
or
movsl
lods
mov
xchg
mov
cmpsb
xchg
xchg
arpl
incb
push
sti
into
add
int3
insb
mov
and
sti
jnp
xchg
call
stc
cmp
jae
push
mov
lock
xor
jg
xor
push
mov
ja
pop
mov
rorb
push
aas
xchg
and
push
sub
fcomi
xlat
push
pusha
idivb
in
mov
push
fcoms
inc
mov
mul
mov
in
out
addb
push
hlt
lods
push
cmpsb
push
xor
enter
fisubrs
shl
adc
inc
ret
lods
xchg
nop
mov
lret
dec
vmwrite
mov
enter
dec
and
add
aad
std
bound
inc
sbb
cmp
fsubr
negl
mov
sub
sti
sub
movsb
push
adc
js
mov
ret
adc
shll
in
js
test
sub
stos
movsl
mov
adc
mov
repnz
xor
xlat
mov
mov
popf
pop
ret
fidivs
cmp
andnps
aam
data16
mov
pop
inc
in
jg
push
cmp
pop
icebp
dec
cld
outsl
roll
jecxz
fucomp
adc
xor
adc
jle
loopne
xor
mov
es
bound
jge
add
aad
push
nop
enter
das
pop
int3
or
adc
add
mov
jb
sub
fcoms
aam
mov
dec
mov
cmpsb
sub
out
jnp
mov
mov
stos
add
lea
xchg
xor
push
ret
stc
test
sbb
mov
mov
gs
sarb
ja
pcmpeqd
fs
cmp
aaa
addb
add
movsl
mov
js
cmp
or
jg
add
push
fimull
jmp
ja
sub
mov
xchg
push
xchg
xor
push
lret
nop
or
flds
jne
fildl
xor
sahf
xchg
inc
xchg
mov
jbe
out
sbb
sbb
sub
mov
and
ss
sub
nop
jl
inc
je
fwait
aaa
imul
xchg
enter
hlt
out
adc
aas
loop
pop
push
cmp
add
cli
inc
pushf
je
xor
pop
mov
mov
mov
push
fs
pop
lea
incl
lret
pop
add
inc
mov
insl
shr
repnz
sbb
xchg
xor
pop
push
push
stos
dec
inc
xor
insl
stos
rcrb
lret
mov
mulb
aam
lds
mov
push
cmp
ret
or
out
lea
add
rcll
xor
cli
add
sub
sbb
or
es
fimull
xor
pop
shrb
sti
mov
inc
mov
jb
ror
inc
ljmp
insl
inc
fisubrl
inc
push
insb
mov
or
fsub
stos
arpl
clc
into
adc
xor
dec
ret
sub
shll
leave
xchg
xor
push
jbe
aas
imulb
jge
repnz
pushf
adc
icebp
push
call
lods
cmp
iret
ja
sbb
adc
insl
popf
sbb
fisttpl
cmp
stos
sbb
mov
jecxz
cld
xor
inc
cli
je
fcompl
mov
xchg
inc
pop
sbb
test
pop
sarl
sub
jg
mov
insb
std
lock
fstl
jns
add
test
fldt
push
es
out
fistps
lahf
add
ja
pop
adc
movsb
out
add
in
call
lretw
and
arpl
rclb
and
rcrl
notl
sub
sbb
adc
or
in
popf
sbbl
movsb
roll
ror
sub
pop
push
inc
jns
cmc
sarb
sbb
mov
sub
sub
mov
leave
mov
sbb
jae
fdivs
jmp
sbbb
dec
mov
popa
fs
pop
xor
cwtl
push
jns
icebp
notl
cld
adc
mov
sbb
divb
xrelease
int
adcb
adc
jecxz
push
fstpt
cmp
popf
repz
testl
in
adc
in
mov
pop
repz
ds
mov
and
lcall
dec
popf
stos
movsl
cltd
out
adc
mov
jmp
mov
fs
pop
add
jbe
mov
add
xchg
lret
nop
cli
lds
and
add
jle
xlat
repz
outsb
ja
adc
push
enter
daa
push
imul
or
push
xchg
mov
es
sbb
cmpsl
clc
scas
jg
scas
aaa
cmp
nop
mov
fiadds
jle
or
adc
or
rclb
dec
hlt
stc
jecxz
push
rol
push
pop
pop
add
scas
push
stos
add
nop
sub
fldl
cmp
pusha
out
xchg
jb
imul
arpl
fidivrs
fdiv
ja
mov
adc
push
dec
ss
push
pop
test
in
mov
rcrb
fs
cmp
mov
push
xchg
nop
fwait
add
xor
lock
sub
cmp
pop
or
or
mov
pop
fadds
dec
or
addl
mov
jl
adc
sbb
inc
fsub
cwtl
cmp
movsl
lods
data16
sbb
lret
mov
aaa
imul
mov
or
adc
repz
fcompl
pop
pop
in
pushf
iret
pop
cmp
cmp
pop
ljmp
sub
cli
jb
or
roll
or
dec
mov
jg
or
out
shll
dec
inc
jnp
loope
mov
pop
mov
not
cli
push
mov
in
xlat
push
mov
cmp
insl
jne
popf
sub
jnp
out
loopne
daa
add
mov
sbb
sub
xchg
mov
out
loop
adc
stos
xchg
pop
imul
push
lret
sbb
je
jnp
call
jno
jo
and
mov
iret
inc
ds
in
adc
inc
sub
jne
pop
sahf
and
ds
add
or
mov
mov
jno
fs
fwait
mov
outsb
xor
mov
inc
nop
lods
scas
or
sbb
cmp
leave
testb
mov
and
aad
sbb
int3
push
add
xchg
arpl
out
pop
in
and
arpl
dec
cmp
mov
sbb
mov
dec
fiadds
mov
icebp
repz
lcall
int
dec
aad
pop
and
mov
addr16
or
mov
outsb
cmp
negl
or
xchg
movsb
adc
jo
repnz
dec
shrl
xor
xor
push
xlat
cmc
jecxz
icebp
mov
xor
xor
dec
sarl
bswap
xor
pop
cmp
in
push
jbe
cmp
lcall
cmpsl
decb
and
pop
xor
pop
push
adc
addb
iret
mov
stc
and
xchg
popa
lret
add
mov
sub
nop
cmp
adc
jg
push
push
out
test
and
jle
pop
clc
aad
gs
sbb
jne
xchg
js
pop
xchg
aaa
je
je
add
cld
pop
sub
push
movlps
and
push
dec
movsl
pop
shl
jnp
movsl
mov
dec
xchg
mov
cli
repnz
jl
rolb
loopne
inc
test
out
lcall
es
icebp
lcall
push
sub
jns
push
incb
mulb
out
mov
pop
ljmp
xlat
int
sub
cwtl
add
inc
mov
scas
mov
sub
incl
jns
pop
jl
xlat
cmpsb
push
insb
fwait
inc
mov
pushf
adc
lods
push
mov
push
mov
movsb
js
mov
sbb
les
sbb
aam
into
daa
out
je
jno
inc
mov
js
inc
aaa
fsubl
mov
cmp
fldenv
int3
dec
mov
jl
push
arpl
sub
mull
ljmp
ja
jne
or
fisttpll
push
mov
loopne
dec
mov
xchg
sub
or
adc
mov
jns
divl
mov
ds
or
test
icebp
mov
xchg
jg
jg
mov
lret
bound
and
push
fwait
outsb
inc
pusha
arpl
lea
cmp
mov
lock
xchg
lods
xor
dec
cs
cmp
lret
rcll
mov
jg
mov
addr16
inc
jp
pop
dec
jge
sahf
jp
xor
loopne
jno
sarl
ljmp
popa
inc
inc
jle
and
in
sti
push
push
stos
mov
in
jnp
in
enter
loop
cltd
pop
loop
push
cmp
roll
sub
jecxz
aaa
imul
rorb
or
fsubp
stos
das
add
xor
dec
movsb
fists
or
push
or
mov
std
or
cmc
pop
in
imul
push
insb
sub
scas
dec
repnz
add
sar
pop
shrb
stos
mov
cmpsl
and
push
out
cltd
loope
cmp
xorl
idiv
sahf
shlb
jmp
dec
out
pushf
add
test
lods
stc
pop
dec
loop
inc
scas
dec
or
mov
cltd
fwait
xor
xchg
mov
push
mov
or
loope
xor
xchg
into
sti
mov
and
pop
sub
cltd
mov
dec
push
mov
push
cmc
test
add
daa
push
adc
mov
add
cltd
xor
xor
popf
sbbl
mov
jmp
fdivrs
loope
mov
insl
popl
sbb
pop
ja
adc
cmp
test
insb
rolb
add
push
imulb
xor
movsb
and
cld
cmp
jle
jl
lods
add
stc
push
jb
jmp
pop
sarb
lock
fwait
repnz
xchg
push
adc
pushf
loopne
and
iret
xchg
shlb
fstps
jge
cmp
dec
scas
loop
push
and
push
movsb
dec
mov
inc
fisubrl
mov
test
iret
jo
fisubs
fdivs
nop
test
inc
cmc
clc
dec
aaa
es
mov
test
out
rcrl
jmp
arpl
jecxz
testl
jo
mov
sti
xchg
fildll
sub
dec
mov
int
sbb
push
sub
fcomi
add
imul
adc
fmuls
rorl
popf
scas
push
call
push
dec
push
out
inc
adc
dec
mov
push
adc
lods
bound
icebp
daa
pop
je
decb
jmp
cmp
movupd
lahf
int
and
les
sbb
lcall
add
push
arpl
mov
dec
dec
push
jbe
xchg
ret
lods
jmp
xor
push
pop
sti
leave
lock
adc
sbb
xor
mov
inc
jg
aad
xor
adc
scas
pop
mov
adc
jge,pn
or
mov
sub
in
mov
sbb
cmp
imul
out
cli
lahf
gs
and
sbb
aad
rorb
or
aas
sbb
xchg
fnstenv
insl
repz
sub
mov
icebp
int
mov
js
hlt
insb
popa
sub
xor
in
jbe
aad
sar
xor
cmpsb
mull
call
iret
sti
xchg
xlat
sbb
cmpsb
fistpl
sub
push
cltd
test
inc
aam
mov
or
lcall
jns
insl
push
mov
dec
mov
out
sbb
dec
mov
xor
cltd
sbb
iret
leave
in
addr16
dec
mov
adc
or
cwtl
sub
lret
les
rcrb
loopne
gs
cs
cmp
clc
or
or
push
jno
fnsave
mov
iret
arpl
or
sub
and
repz
or
mov
sub
jns
xchg
mov
sbb
adc
mov
add
push
inc
pop
icebp
mov
sbb
dec
lods
pop
mov
lds
mov
or
test
mov
jbe
or
imul
movsl
pusha
mov
mov
adc
and
gs
aaa
notl
xchg
mov
sub
rolb
xor
cmc
xchg
jns
inc
and
dec
int
out
and
dec
jb
mov
jge
sub
xlat
mov
mov
push
outsb
cmpsb
fiaddl
sahf
rorl
and
sub
out
cmp
push
mov
out
and
mov
jne
sbb
xchg
mov
xchg
cmp
pop
inc
ljmp
or
jle
or
cli
or
inc
loopne
repnz
push
addb
dec
jbe
insl
sub
dec
push
mov
push
jge
sub
dec
cmc
sub
add
jle
enter
jmp
hlt
sbb
jae
inc
add
jb
push
push
ss
pop
inc
cs
add
mov
aaa
ja
cltd
aas
cmp
fisubrs
jnp
fwait
inc
mov
push
jno
mov
cltd
jecxz
test
cmc
mov
mov
jmp
push
lcall
iret
test
or
jp
inc
mov
add
jno
decb
lret
loopne
ss
dec
rcll
insb
cmc
jbe
xor
dec
cltd
iret
iret
cmpsb
adc
sub
adc
inc
adc
into
adc
cld
adcb
or
lods
jecxz
scas
add
mov
jo
das
negb
lahf
enter
adc
sub
xor
inc
mov
orb
mov
and
sub
sbb
push
or
pop
fcomi
cld
fldenv
jmp
cmc
push
stos
jp
xor
ljmp
sub
sbb
cmp
dec
clc
jmp
xchg
mov
aam
fdivr
hlt
aad
jmp
add
and
mov
jmp
sbb
pop
cmp
sbb
aaa
or
mov
rcll
fwait
mov
in
add
inc
cwtl
sbb
sbb
addr16
mov
adc
xchg
mov
js
mov
add
jnp
add
enter
shrb
leave
pop
sbb
nop
je
inc
lcall
shll
bextr
push
mov
cmpb
cli
lret
lods
pop
fnstcw
and
or
sti
sbb
addl
pop
cmp
lahf
test
imul
adc
mov
sahf
inc
cmp
mov
test
stc
add
out
push
sbb
inc
in
dec
mov
jns
jge
aaa
hlt
pop
pop
mov
pushf
out
stos
mov
iret
cmpl
mov
sub
or
xchg
jae
xor
or
jo
xor
mov
mov
mov
jns
sbb
out
inc
mov
xchg
loope
clc
inc
pop
or
and
les
mov
cmp
js
std
mov
push
sub
and
jmp
sbb
nop
popa
and
nop
cld
and
scas
or
dec
xchg
lods
jns
or
push
pop
clc
or
inc
push
into
js
roll
addr16
xor
and
out
scas
mov
lret
xchg
data16
icebp
rcrb
add
lret
loopne
sbb
add
gs
sti
mov
rcrb
cs
add
add
lock
push
sub
cwtl
daa
add
arpl
int3
fsts
nop
rorl
scas
fprem
lock
lret
jp
adc
jle
inc
pop
sub
imul
xor
or
xlat
pop
ljmp
jo
repz
mov
cmp
xchg
inc
adc
mov
sub
cmp
sbb
ja
pushf
mov
mov
pop
repnz
lods
in
push
ss
lock
inc
outsl
das
arpl
out
enter
mov
adcl
fmull
lods
add
pop
out
in
negb
repnz
movsl
lahf
loopne
inc
sti
aad
test
scas
ljmp
lcall
mov
mov
pop
jne
popa
in
mov
fmul
jno
data16
fadd
sarl
shlb
push
add
enter
push
jno
adc
outsb
insb
ffree
cmp
jmp
fstpl
push
jecxz
loop
xchg
adc
ret
std
jns
inc
mov
mov
or
fcompl
mov
mov
out
lahf
pop
inc
cmp
scas
fwait
in
out
lods
addr16
push
mov
and
push
inc
mov
sub
and
fmul
xlat
ja
ret
mov
in
test
stos
ret
cmp
or
cmp
aad
pop
mov
mov
xchg
fiadds
adc
jl
shlb
ja
out
sbb
lock
arpl
popa
ret
sbb
testl
call
mov
xchg
add
aas
cmp
test
inc
xchg
fsts
out
fwait
inc
adc
mov
aad
gs
ljmp
adc
jnp
popa
mov
jle
fcoms
cld
jnp
ret
iret
dec
xchg
pop
and
sbb
sbb
dec
inc
scas
insb
outsb
and
mov
in
cmpsb
and
lds
hlt
inc
sbb
mov
pop
dec
lods
mov
push
out
aam
lock
rcll
mov
jmp
nop
push
popa
mov
daa
clc
xor
dec
xchg
add
stos
cmc
add
inc
xor
stos
push
mov
jns
pop
pop
pop
insb
mov
imul
inc
fsubrl
int
jmp
mov
adc
popa
push
jp
or
jle
inc
adc
loop
or
xchg
scas
inc
icebp
mov
fisttpl
and
sbb
jmp
ret
fidivrs
loope
jo
adc
mov
in
xchg
inc
pop
in
out
jns
xchg
fisttps
lds
dec
add
gs
mov
testl
cmp
push
push
outsl
cmp
les
push
mov
xor
loop
bound
adc
push
jns
sahf
int3
cltd
and
dec
fs
imul
jae
fidivl
call
shll
mov
add
mov
add
pop
mov
iret
nop
shrb
das
xlat
jo
aam
fs
cld
das
jo
inc
pop
mov
sbb
stc
ja
dec
jp
mov
sbb
dec
stos
dec
lcall
jge
mov
or
ret
popf
lcall
icebp
imul
or
aas
insl
or
test
add
push
mov
or
cmpsl
inc
dec
hlt
adc
pushf
adc
mov
clc
out
dec
ljmp
mov
pop
rclb
cmp
aad
xor
jle
add
sub
and
in
cld
jle
jae
jb
push
cmp
jg
fmul
pop
xchg
cli
fisttpl
clc
sti
pop
push
add
pop
xor
xchg
aaa
popa
adc
xor
rorb
movsb
dec
pop
imul
push
fmull
rorl
fs
add
ret
jo
jp
lods
mov
adc
hlt
sub
and
dec
jp
repnz
daa
cmpsl
fsqrt
mov
add
cli
out
xchg
push
add
mov
xor
scas
hlt
cmp
rorb
mov
in
test
inc
push
push
fcmove
lret
mov
lods
pop
fiadds
pop
or
loop
pusha
dec
pop
stos
sbb
xchg
mov
and
adc
ror
rcr
xor
xor
inc
pop
cmp
in
push
jae
xor
inc
dec
sti
ljmp
cld
dec
xchg
hlt
out
jecxz
js
push
lods
hlt
pop
push
cmpsl
jmp
insb
js
pop
dec
push
rorb
cld
mov
jnp
pop
ret
or
loop
xchg
push
nop
mov
data16
mov
push
dec
in
ss
movsl
mov
test
data16
icebp
cld
mov
test
jb
out
sti
xor
inc
cmp
xor
clc
mov
orb
data16
adc
je
lds
or
xchg
inc
ds
pusha
mov
mov
cmp
add
xchg
out
pop
dec
pop
inc
dec
push
push
mov
inc
movsb
arpl
sti
mov
jne
pop
and
cwtl
push
adc
ljmp
xor
mov
sbb
mov
es
cmp
and
in
nop
insb
and
xchg
sbbl
and
loop
or
sub
xchg
clc
lret
mov
ljmpw
stos
xor
stos
int
or
inc
fcompl
cmc
pop
test
ljmp
leave
pop
push
jecxz
push
push
fldl
ficompl
je
xor
imul
mov
jne
jbe
xor
adc
popf
inc
arpl
in
iret
dec
push
ja
xor
pop
inc
repz
and
sahf
addps
pop
andl
ja
or
mov
or
popf
fwait
cmp
imul
loopne
mov
das
add
or
xor
push
adc
sarl
ret
outsb
add
sbb
push
nop
mov
divb
jle
jp
adcb
clc
jle
push
mov
pop
pop
inc
push
push
mov
aad
shll
sub
test
xor
testb
fistpll
fwait
cmp
test
das
imul
rcr
push
xor
into
jl
cli
data16
int
sarb
test
int3
ret
jle
testb
rolb
add
xchg
cmp
mov
inc
rorl
fdivs
pop
lods
push
data16
call
ljmp
jbe
mov
dec
clc
cmpsl
sub
outsl
inc
cmp
rcrb
jp
sbb
ret
sbb
mov
and
or
mov
insl
add
adc
sbb
and
inc
sub
sti
out
test
cmpsl
mov
dec
push
xchg
adc
xchg
lea
inc
push
jle
sbb
shll
sarb
push
add
ljmp
sti
mov
call
push
xchg
pop
adc
loop
pop
loopne
les
jge
cmp
nop
sub
push
xchg
add
pop
push
shll
inc
hlt
js
or
shll
inc
mov
pop
std
std
movsl
mov
sub
pop
jo
jmp
mov
outsb
mov
xchg
mov
cmpsl
leave
xlat
mov
push
add
mov
xchg
mov
filds
push
out
popf
and
jo
xchg
inc
jo
cmp
outsl
sub
cli
ret
push
scas
sti
dec
mov
ja
fmuls
push
mov
or
sub
inc
in
insl
add
test
adc
push
push
fldenv
negb
sbb
dec
clc
aaa
jb
mull
inc
cmp
cmp
sarl
aad
mov
xor
divb
mov
and
rol
push
inc
enter
add
call
aam
xor
cli
push
mov
insl
test
out
sbb
iret
xchg
mov
lret
sub
push
cli
ja
popa
ss
mov
insl
lods
adc
dec
sbb
ss
es
adc
inc
ljmp
std
cmp
shll
stos
or
jae
pop
pop
ljmp
pmaddwd
shrl
clc
cmp
jbe
pop
push
jbe
adc
fisttpll
adc
gs
loop
aam
imul
inc
stos
inc
mov
sub
mov
test
mov
adc
rcrb
sbb
jo
jbe
arpl
xor
pop
arpl
pop
jno
lock
mov
leave
xor
out
cs
push
mov
call
aas
aaa
dec
shlb
outsb
sbb
int
xor
ss
dec
mov
push
cmp
mov
mov
jnp
inc
pop
aad
dec
shlw
idivb
push
or
pop
xor
imul
pmuludq
pop
xchg
test
sbb
daa
mov
jle
mov
out
jae
add
or
pop
lahf
aaa
or
push
ds
iret
sbb
pop
out
fsubs
mov
pushf
leave
pop
dec
nop
in
clc
sbb
and
js
fstpt
mov
insl
mov
mov
outsl
add
cmc
or
xchg
out
push
sub
ficompl
inc
xchg
fsubrl
add
xlat
in
pop
pop
lds
nop
enter
and
mov
xor
out
pop
loope
pop
jae
lahf
cli
pop
xor
lock
lods
jl
sub
pop
push
shrb
gs
fwait
je
mov
movsb
lods
and
ljmp
cld
add
add
mov
les
and
push
add
adc
cld
mov
addr16
insb
stos
mov
lods
sbb
push
xchg
or
pushf
insl
outsb
jno
mov
test
stos
cmpsb
pop
xchg
inc
mov
mul
cli
loopne
test
cmc
push
xchg
rcr
adc
xchg
push
push
push
mov
push
out
imul
jb
not
loope
aas
mov
sbb
jecxz
jmp
sub
icebp
push
jg
out
shrb
push
mov
adc
add
mov
inc
or
xchg
ss
and
cwtl
push
aas
jmp
das
jbe
out
inc
cmp
popa
push
movhps
imul
movsl
mov
aam
rcrb
xlat
in
xchg
arpl
mov
int
dec
pop
sbb
mov
sub
loop
dec
aam
aam
je
es
push
into
shll
aad
mov
das
jge
adcb
and
fsubl
jmp
sahf
adc
xor
roll
imul
cwtl
adc
jmp
jns
movsb
push
sarl
jno
inc
fisubl
xchg
mov
fld
push
jg
and
ljmp
and
pop
iret
idivl
pusha
fistl
ja
jb
adc
outsb
and
xor
fmul
ret
scas
stos
out
add
mov
sbb
loope
loopne
fsubl
inc
add
popaw
dec
mov
mov
subb
pop
mov
aaa
rcll
cmp
sub
fisubs
int
add
add
mov
adc
aad
add
xor
adc
xchg
mov
sbb
pop
xchg
xchg
dec
sbb
movsb
addb
mov
push
bound
mov
pop
popa
in
idiv
outsl
das
dec
xor
xor
and
inc
fcomps
iret
out
test
xchg
jp
jecxz
adc
xchg
push
repnz
shrl
mov
jo
jo
xor
cmc
insl
add
mov
fldcw
mov
mov
lret
in
mov
leave
add
mov
sbb
aad
scas
fisubrs
rcll
and
cld
repnz
xchg
fsubrl
mov
icebp
popa
push
pop
loop
ret
xchg
decb
sub
out
inc
cmp
xor
je
out
loope
push
scas
je
push
js
in
pop
mov
or
push
lahf
inc
or
cwtl
xor
in
sbb
adc
mov
outsl
jecxz
das
mov
aas
sub
mov
ds
adcl
pop
or
adc
ds
sub
sub
push
cmp
insl
xchg
lret
in
loopne
or
sub
ficompl
negl
cmp
bound
test
pop
xor
movsb
sub
mov
aam
or
add
jmp
mov
adc
gs
jp
and
fs
jge
mov
jbe
mov
into
pop
xor
out
sub
into
outsl
out
rorl
dec
pusha
hlt
mov
out
cmp
and
dec
shlb
dec
orl
popa
sub
push
int
xchg
into
dec
mov
rclb
push
std
fcoms
dec
prefetchwt1
in
movsb
divl
sub
inc
lods
pop
daa
pop
sub
or
das
lret
adc
inc
es
push
mov
jl
cmc
iret
push
sbb
jb
ret
jg
sbb
lds
pusha
jg
lods
jns
mov
aaa
in
test
nop
cs
or
mov
es
mov
jbe
pop
or
fisttpl
shr
data16
cmp
sub
cwtl
or
repz
mov
jo
jp
push
int3
imul
push
xor
cmpsl
loopne
mov
out
jp
xchg
orb
or
xchg
push
nop
mov
sub
loop
mov
mov
add
xchg
jge
iret
xchg
mov
jns
xchg
ret
cli
stc
dec
out
fnstenv
push
imul
pop
xchg
pop
push
pop
fiaddl
pushl
in
jbe
bound
push
and
push
sbb
test
dec
cmc
into
stc
jne
pop
jmp
adc
ret
inc
mov
pop
jno
mov
mov
inc
jge
inc
cli
mov
ds
cmp
push
lcall
pop
sbbl
add
clc
pop
jp
adc
or
push
movsl
mov
test
neg
sub
cmpsb
xor
and
push
movsb
lods
or
lahf
pop
mov
push
jne
adc
and
xchg
sbb
out
mov
lret
cmp
inc
ss
mov
and
xor
movsb
je
sub
cltd
lret
and
popf
sbb
dec
mov
pop
roll
and
dec
mov
push
ljmp
lds
aam
adc
and
xchg
sub
in
nop
notl
dec
inc
jp
daa
outsb
loop
sbb
jmp
loopne
gs
mov
and
loope
jnp
clc
sbb
jle
jae
push
test
mov
daa
and
bnd
sbb
cmp
dec
cmpsl
test
mov
rorl
sbb
mov
pop
sub
dec
imul
mov
inc
stc
enter
inc
xor
pusha
pop
adc
inc
cltd
jne
sahf
ds
dec
push
test
outsb
sub
dec
cmp
inc
in
and
mov
push
and
and
sbb
cwtl
or
je
xchg
pop
xor
sub
xchg
loopne
hlt
call
push
shlb
dec
or
push
into
xchg
inc
lea
xchg
xchg
lahf
xor
js
rcrl
movsb
movsl
mov
out
inc
mov
aad
lret
xchg
and
sbb
mov
aad
dec
xchg
popa
mov
push
mov
sub
mov
xchg
pop
shlb
addr16
xchg
inc
lea
cmp
dec
or
adcl
repz
xchg
in
sarb
mov
insb
cmpl
out
test
cs
dec
mov
jo
cmp
sub
sub
jge
data16
mov
sub
ljmp
sbb
jg
es
daa
push
das
jle
iret
mov
adc
and
outsl
cmpsb
lret
imul
inc
fbstp
cmpsb
cmp
ljmp
or
and
cmc
xchg
inc
lret
not
add
adc
xor
dec
mov
ficomps
insl
outsl
pop
xor
cltd
jns
pop
cmp
decl
and
sub
jb
jno
mov
lahf
fsubrl
lea
cmp
and
inc
mov
in
push
fcompl
cld
inc
or
adc
loope
stos
dec
rol
xor
cmpsb
vpunpcklbw
int
enter
xchg
inc
and
push
pop
xor
mov
mov
and
movsb
sub
ds
push
push
cmp
sbb
or
leave
dec
xor
mov
or
xor
int
sti
movl
adc
sahf
out
stos
fstps
adc
xorl
imul
shlb
data16
mov
sub
aaa
xor
test
hlt
push
mov
movsl
push
pop
push
cli
into
mov
cs
inc
xchg
or
push
mov
pop
ds
scas
cmp
xchg
and
pop
cmp
test
push
and
fstl
call
inc
lcall
xchg
xor
lods
call
xchg
pop
dec
gs
shlb
mov
mov
cmp
outsl
sub
inc
fisttps
scas
enter
xor
adc
pop
outsl
cmp
mov
leave
std
fmull
xor
mov
flds
jnp
jle
push
adc
repz
cmc
mov
or
cmp
sbb
ljmp
imul
rcll
ja
in
pop
aas
icebp
cmpsl
fisubs
scas
jp
int
jmp
rcrb
ss
add
clc
and
imul
or
and
sbb
dec
sti
fwait
mov
adc
notb
loope
and
icebp
in
mov
aaa
nop
scas
adc
inc
pusha
stos
cmpsb
das
add
out
mov
sbb
in
lret
mov
push
inc
xor
cmp
fs
call
add
nop
movsb
lods
push
stc
cmp
xor
xchg
push
jb
js
and
sbb
pop
test
xor
mov
ficomps
out
pop
aad
es
hlt
es
dec
daa
sub
int
jge
in
mov
push
mov
pusha
add
in
ss
ss
movsb
sub
xor
push
jmp
cmp
mov
sbbb
rorl
int3
xor
mov
xchg
jp
pop
nop
jno
xlat
cmp
fimull
ja
pop
divb
in
hlt
xchg
jle
scas
cmp
loopne
pop
jg
and
adc
test
int3
mov
mov
icebp
loopne
stc
stos
subl
sbb
pop
and
rcrb
cmpsl
in
xchg
cmpsl
pop
push
sbb
mov
call
loopne
pushf
cmp
inc
add
rorl
pop
lcall
fisubrl
push
lds
cmp
mov
jp
repnz
aad
fiadds
aaa
hlt
xchg
aam
lea
and
mov
fbld
adc
loopne
jne
xor
mov
mov
dec
xor
jmp
jl
push
rorb
aad
inc
jo
mov
test
push
dec
loop
mov
sub
leave
xor
push
in
jae
nop
cmc
push
movsl
adc
movsl
daa
add
push
lock
cld
rorb
lret
jecxz
gs
jo
rcrb
and
and
pop
fcmovne
ljmp
es
imul
and
lret
xchg
push
mov
jo
or
jo
iret
bnd
pop
subl
stos
filds
cmpsb
sub
call
cmpsl
addr16
mov
jle
xor
loopne
lds
adc
add
mov
shr
xchg
icebp
sbb
js
xor
pop
lock
and
pop
outsl
lahf
jge
and
rclb
test
mov
jmp
testl
sub
jb
inc
inc
pop
jne
dec
mov
cmp
sub
shl
ja
jne
cltd
pop
mov
inc
push
test
mov
cmp
adc
cmpsb
push
and
int
sarb
cmp
xchg
arpl
push
imul
xchg
cld
cwtl
xor
add
and
push
push
jmp
xor
loop
xchg
fstps
push
hlt
inc
clc
lret
fiadds
add
jo
repz
sbb
cmpsb
iret
sub
push
push
scas
rcl
outsb
inc
dec
lret
cmp
xchg
or
and
cli
cld
cld
mov
jns
push
jb
test
cmp
adc
ds
sub
sub
cmp
je
mov
fwait
inc
fimuls
aas
pop
dec
js
mov
mov
mov
push
dec
or
in
xchg
jbe
loop
jle
and
pushf
in
adc
scas
jmp
cmpsl
mov
data16
add
mov
aam
mov
fildll
insl
aad
adc
decl
mov
mov
mov
pop
cmp
push
insb
in
cmp
loope
lds
xor
fists
dec
sarb
xor
push
cmp
push
or
cmp
fstpt
adc
ret
dec
sbbb
dec
jmp
mov
jle
sub
sarb
xchg
aas
push
test
loopne
add
ss
and
gs
xor
lods
adc
loope
or
mov
xchg
sbb
mov
fwait
ss
push
pop
push
mov
lea
rorb
or
out
cltd
sub
ret
inc
pop
inc
jbe
mov
jge
mov
mov
outsl
fmull
orl
push
je
push
jo
in
leave
push
mov
js
in
iret
in
sti
inc
inc
adc
jnp
jbe,pt
pop
mov
push
sbb
mov
push
sbb
cmc
add
mov
sbb
notb
push
or
cmp
cmc
cmpsb
add
sbb
inc
add
push
and
jno
pop
lock
cli
xor
xor
js
add
dec
push
out
jmp
xor
sti
lods
sbb
shrb
les
cmpsb
and
pop
push
xchg
lcall
xchg
js
xchg
movsb
xchg
pop
out
add
xchg
mov
icebp
and
cmpsb
jg
pop
pop
mov
les
dec
insl
pop
jo
test
ss
loop
or
and
ficoms
pusha
xchg
mov
mov
repnz
and
scas
rclb
cmp
imul
jo
jmp
out
int
pop
pop
test
push
aam
and
inc
mov
pop
pop
mov
test
sbb
adc
and
mov
lock
mov
mov
jp
sahf
shrb
mov
outsl
and
sarb
inc
popf
adc
sub
mov
mov
ja
cmovno
mov
out
and
orl
bound
dec
mov
leave
xchg
pop
push
add
pop
in
int3
aaa
mov
mov
mov
add
icebp
dec
jo
sub
out
xlat
sbb
jne,pn
ljmp
xchg
popa
test
adc
stc
lods
jmp
push
sub
pop
aam
bound
sub
sti
int
sub
fstl
lods
popf
sbb
pop
push
mov
gs
mov
cmp
scas
xor
jge
adc
add
idivb
mov
add
push
sbbl
cmpsb
cs
mov
adc
aad
insb
jl
movl
push
jnp
mov
pop
sub
cwtl
bound
iret
clc
rdpmc
add
adc
rcll
dec
cmc
sub
pop
clc
std
xlat
in
cmc
adc
fadds
ret
lock
mov
mov
dec
stc
jecxz
or
xchg
popa
xlat
cmp
xlat
testb
pop
push
push
jecxz
fsub
jmp
jb
mov
push
push
jo
xchg
inc
mov
stos
mov
ret
arpl
mov
or
fildl
arpl
pop
jmp
sub
pop
dec
push
aad
pusha
loopne
cmp
mov
xor
ret
mov
and
faddp
xchg
in
lahf
pop
jns
sbb
adc
cld
decl
sub
and
jmp
dec
loopne
fildl
dec
pusha
sbb
pop
aad
rclb
and
cmp
dec
mov
out
lods
adc
lret
dec
jnp
lret
pop
scas
xchg
shlb
inc
mov
dec
rcr
int3
jns
push
filds
lcall
add
inc
aaa
mov
repz
jg
add
test
loop
lret
cmp
lds
inc
movb
xchg
push
mov
je
test
mov
sbb
fnstenv
pop
cli
pop
mov
xchg
inc
stos
xor
sti
ret
gs
stos
pop
jle
add
push
jecxz
dec
push
fisubl
xchg
iret
repz
out
pop
push
adc
int
arpl
mov
jle
inc
and
jp
add
push
lahf
mov
cli
pop
sbb
add
cltd
jnp
mov
ret
movsb
fs
rorb
iret
dec
das
ja
inc
lea
add
fistl
les
pushf
xor
inc
movsb
jb
call
cli
test
xchg
mov
cmp
jne
lock
cmp
jl
pop
mov
and
xchg
lret
ss
pushf
imul
das
or
scas
sbb
dec
mov
pushf
adc
fimull
inc
outsb
jno
jmp
subl
stos
outsb
hlt
xchg
push
aaa
ja
negl
mov
mov
add
iret
inc
mov
push
inc
mov
xor
insb
fisttpl
adc
cmp
xchg
jb
ss
imul
jne
sti
lock
iret
lea
mov
out
adc
or
push
ret
insl
lcall
jge
mov
xor
cmp
or
js
pop
aam
add
push
adcb
add
ja
push
or
ljmp
ss
jecxz
in
or
sub
in
jno
movsb
push
jge
in
cmpsb
mov
insb
ret
mov
dec
fsubrl
popa
push
and
jo
xchg
movsb
pop
add
mov
insl
repnz
stos
xchg
iret
xor
adc
pop
pop
lods
rclb
push
cmp
call
jne
push
das
add
lcall
xchg
rorl
push
enter
push
js
cmovns
xor
lret
enter
rcl
jl
push
clc
and
cs
adc
shrl
or
out
jle
and
jae
loopne
sbb
pop
stos
int
sbb
pushf
sahf
add
cwtl
xchg
ja
shll
push
add
sahf
popf
and
or
cmc
movsl
jge
push
fwait
sets
jecxz
mov
push
push
cltd
dec
mov
push
lods
pop
inc
pop
add
sbb
icebp
imul
and
clc
xchg
cmpsb
jo
bound
inc
add
retw
es
aaa
mov
mov
push
cld
mov
scas
out
push
dec
adc
outsb
cmp
cltd
cmc
push
js
mov
jno
ret
ja
mov
push
lret
int
lods
scas
inc
jp
inc
cld
sub
and
cwtl
adc
fists
out
dec
push
push
xchg
pop
aam
cs
push
shl
mov
sub
lcall
fsts
les
sub
leave
sub
xor
push
inc
inc
popf
shrb
pop
xlat
lods
and
cmp
fdivl
mov
pop
dec
inc
es
cmp
dec
xor
fimuls
dec
sbb
cmpsb
add
mov
jl
push
movsl
pushf
push
mov
add
js
push
cmp
repz
push
cli
push
popf
aaa
xor
and
in
fmuls
aas
stos
std
sbb
push
js
sub
pop
pop
stos
movsb
test
cmpsl
push
int
daa
mov
push
stc
mov
and
push
lret
shrl
cmp
xchg
iret
pop
sbb
in
adc
xor
sbb
and
es
sub
pop
bound
out
test
fs
cmp
push
aad
cmp
adc
mov
sahf
xor
lahf
mov
xchg
stos
lahf
fistpl
sti
repz
sub
daa
mov
lahf
fs
or
mov
push
mov
jmp
lret
les
or
pop
out
mov
arpl
and
sbb
xchg
adc
loopne
and
adc
gs
dec
pop
xor
mov
data16
add
or
pop
add
xchg
bound
xor
push
xor
cmp
js
mov
mov
pusha
js
xor
nop
nop
lds
or
pop
cmc
adc
sbb
push
inc
and
or
mov
sub
test
sub
push
inc
repz
les
pusha
or
cli
dec
js
cli
leave
xor
sub
cmpsb
push
ficoms
xchg
sbb
cltd
or
nop
into
sbb
adc
lea
roll
inc
jbe
inc
dec
test
outsb
fwait
adc
and
movhps
xor
dec
repnz
mov
jnp
js
push
or
rclb
loop
outsb
inc
push
out
popa
cmp
xchg
cltd
shl
mov
in
pop
mov
fdivr
sub
pop
cltd
in
mov
iret
sbbl
push
inc
push
int
sub
mov
jb
xchg
cmpsl
loop
mov
clc
lahf
sub
mov
fucomip
mov
add
int
js
mov
hlt
xchg
mov
mov
mov
pop
mov
in
std
outsl
divl
loop
clc
jecxz
sbb
jmp
sub
push
cmc
push
mov
arpl
mov
mov
pop
cmp
loop
mov
dec
cwtl
stos
pause
xchg
push
call
push
or
lret
lods
add
rcr
or
mov
mov
push
test
lods
popf
sbb
inc
dec
or
stos
out
ljmp
jnp
and
out
add
pop
subb
inc
hlt
popa
push
insb
jp
sub
popa
rclb
jp
filds
add
adc
sbbb
sbbl
stos
in
xchg
push
fcmovne
push
popa
imul
mov
out
push
push
insl
aam
fisubs
mov
sub
push
mov
pusha
cmp
mov
cltd
sub
mov
stos
lea
clc
repnz
fnstsw
mov
sarb
stc
sub
fs
adc
jge
mov
inc
mov
dec
fdivr
and
dec
cmp
push
arpl
or
test
test
xor
into
repnz
rcll
push
sahf
aas
ret
movsb
push
ja
cmp
stc
pop
mov
orb
insl
daa
sarl
mov
icebp
cmp
imul
lock
inc
inc
xlat
cli
mov
or
push
push
adc
aam
jo
jmp
ja
lcall
sahf
mov
mov
inc
repz
nop
inc
inc
movsl
call
fcomps
aaa
fdivl
push
jne
cmp
divl
lcall
pop
push
xchg
adc
and
lahf
pop
pop
cmp
or
pop
jg
dec
imul
mov
shlb
mov
cli
pop
leave
scas
sub
imul
ss
setb
mov
ffree
fisttpll
mov
dec
repz
mov
shr
push
ret
shlb
sti
lcall
inc
cmp
xchg
sete
add
ficomps
sti
rclb
jnp
subl
testb
in
cmp
push
mov
push
xchg
pop
xor
bound
fimull
imul
cmp
dec
jne
in
lods
sbb
ljmp
aas
fstpl
cmc
or
adcl
out
push
mov
lods
mov
pop
sub
repz
mov
mov
fistpll
push
push
frstor
ljmp
fnstenv
push
shl
and
lret
and
inc
mov
int3
test
jne
gs
or
mov
mov
fcoml
pushf
jmp
lock
clc
dec
jg
adc
popa
scas
dec
lods
jb
adc
iret
test
push
scas
cmp
jne
sub
mov
sub
mov
sahf
jbe
jge
pop
stos
das
lods
xchg
cmp
jge
sbb
or
loop
lock
incb
mov
mov
sub
pop
movb
and
in
movsl
incb
pop
push
mov
and
pop
insl
push
sarl
aas
pop
mov
pusha
fadds
cli
sbbb
mov
enter
mov
pop
xchg
mov
fistl
std
out
cmpsb
int3
scas
jle
xor
pop
scas
ljmp
leave
bnd
scas
dec
es
outsb
jne
lahf
dec
loop
dec
movzwl
test
ret
pop
pop
cltd
add
pop
jbe
mov
int3
ret
pop
dec
pop
and
mov
pop
popa
and
not
out
mov
cli
sti
dec
mov
add
xchg
jo
push
lcall
leave
xor
movsb
les
fmull
cmp
mov
sub
stos
hlt
push
in
xchg
testb
mov
pop
enter
add
lret
adc
out
mov
adc
dec
repnz
mov
cmc
lods
out
push
repz
lret
adc
testl
imul
mov
cmp
test
fmuls
mov
or
je
jge
sbb
shlb
mov
ret
mov
bswap
add
push
fldt
pop
aad
cld
cmp
mov
add
inc
jp
shll
shll
shlb
pop
fmul
mov
std
sbb
sbb
enter
ja
sub
mov
mov
cli
mov
roll
dec
adc
jne
js
pop
out
mov
adc
mov
fwait
test
mov
outsb
or
pushf
mov
rcl
arpl
mov
cmp
fcompl
std
inc
pop
push
xchg
mov
mov
loop
addr16
int3
std
xchg
jne
sub
mov
cmp
cli
pop
data16
lods
and
xchg
sahf
lcall
adc
xor
cltd
mov
loope
mov
cmp
cmp
cmp
cmp
sbb
cmpsb
loop
fcmovu
jg
faddp
jnp
int3
adc
cmp
test
inc
test
jae
mov
mov
notb
adc
push
and
or
test
push
inc
jnp
xchg
mov
dec
push
push
push
add
loop
push
push
mov
inc
sub
cmc
hlt
pop
mov
mov
xor
sbbl
and
jb
ret
sub
cmc
inc
dec
fsubl
pop
mov
xor
lret
sub
cmp
inc
mov
insb
js
movsl
icebp
or
adc
sub
xor
mov
jmp
mov
ss
sub
xor
push
sub
sbb
mov
in
dec
sub
fmuls
pop
dec
cmp
or
pop
nop
inc
ja
or
jns
add
xor
pop
adc
dec
mov
mov
push
aad
divb
std
pop
in
jge
test
mov
ret
rolb
out
ja
sbbl
lahf
call
pop
pop
xchg
test
xchg
push
addr16
pop
add
lods
mov
jne
sub
mov
dec
das
imul
jae
mov
cmpsl
mov
dec
inc
pop
lock
sbb
push
or
scas
int
clc
icebp
arpl
test
mov
sub
jmp
dec
fisubrs
std
cs
lcall
std
neg
xchg
mov
shlb
pop
js
xchg
xor
xorl
xor
cmp
mov
stos
push
dec
sbb
push
sbb
mov
lret
addr16
cli
hlt
inc
insb
sub
pop
sub
mov
jb
push
inc
adc
cmp
sub
loope
cmp
dec
xchg
inc
mov
cmp
cmp
icebp
push
insb
ljmp
scas
hlt
insb
stos
sub
mov
adc
repz
or
jge
test
jle
dec
xchg
xchg
int3
es
jg
and
jae
push
jb
ja
pusha
mov
push
cmc
push
cmp
sub
sub
stos
cld
xor
data16
inc
xchg
mov
enter
pushfw
clc
pop
out
and
movsl
and
and
shlb
sbb
ja
pop
loope
mov
outsb
sahf
mov
sub
in
xchg
pop
in
pop
lahf
idivb
adc
or
mov
ss
cli
test
enter
fisttpll
outsl
pop
adc
jns
leave
ljmp
repz
ljmp
in
mov
out
cmp
test
push
or
les
inc
jp
outsl
jle
sub
js
lahf
cs
sbb
scas
nop
sahf
mov
sbbw
xchg
push
fldt
inc
xchg
and
gs
cmp
xor
xchg
and
ret
call
cmp
pop
sbb
cwtl
push
sahf
pop
pop
lds
test
stc
lods
lahf
xchg
cli
fisttpll
xchg
or
cmc
in
hlt
jle
or
push
cli
pop
arpl
out
bound
mov
out
inc
ljmp
xor
pop
lods
sti
in
adc
lret
popf
xchg
add
sbb
mov
lds
shll
jae
fbstp
push
clc
cli
popa
aas
cmp
repnz
int3
mov
adc
int
dec
cmc
and
int3
mov
push
and
xor
cmp
shll
scas
sbb
cmpsb
insb
mov
pop
push
pop
aad
loop
mov
lcall
or
jb
cld
fcoms
or
inc
inc
mov
lock
roll
or
sahf
mov
test
xchg
mov
pushf
push
xor
mov
add
rcrb
jge
fisubl
jle
mov
dec
xor
shrb
aaa
jl
jl
lea
push
addr16
imul
add
push
xor
sbb
stos
or
inc
gs
or
ret
dec
jmp
insb
sbb
inc
cmp
out
fadds
ss
ret
scas
adc
sub
sbb
and
jno
push
loop
mov
cmp
insl
psrlw
dec
ljmp
in
xor
push
sahf
sub
pop
mov
push
cmpsb
dec
add
aad
add
insb
and
lahf
cli
push
lods
bound
sarl
stos
lret
mov
jae
rcr
jno
in
sub
xor
mov
rorl
dec
leave
ljmp
cmpsl
testb
outsb
jbe
push
jle
cmp
mov
pop
xchg
mov
cmp
cltd
sbb
fwait
rcrb
loope
je
sahf
popl
scas
inc
jnp
sti
jle
cli
pop
sub
out
adc
mov
inc
mov
in
sti
and
mov
push
gs
aas
fucom
jae
scas
stos
pop
jge
mov
dec
bnd
in
imul
sti
and
fdivs
mov
jbe
fwait
imul
adc
adc
xlat
das
inc
cmp
loop
lods
imul
insb
insl
enter
jg
in
addl
xor
sbb
jne
testl
int3
add
aaa
sbb
arpl
lods
adc
xchg
mov
pop
dec
out
or
lret
xor
call
adc
mov
repnz
xorl
pop
xchg
pop
adc
and
adc
lods
insl
fmul
sahf
or
mov
or
jb
sbb
in
cltd
lods
sbb
lods
cmp
shl
negb
js
nop
aaa
add
sbb
inc
adc
cmp
mov
ja
std
or
pop
je
push
adc
jns
outsl
imul
jg
cmp
hlt
cwtl
cmpsb
pop
gs
jnp
movsb
inc
ficoms
and
rorb
ret
cltd
mov
cld
bnd
mov
xchg
adc
inc
adc
ja
mov
int
add
xlat
mov
insb
in
pusha
scas
aas
mov
push
inc
sub
popf
in
sbb
cld
insl
addb
test
jne
scas
int
loopne
pop
and
jbe
mov
add
and
sbb
pop
mov
and
lret
push
cmp
lret
loop
inc
in
adc
mov
pop
push
stc
sbb
and
push
mov
cli
jbe
dec
push
insb
xchg
adc
xchg
push
jmp
sahf
push
add
scas
ss
outsl
stos
xor
pop
mov
movb
or
dec
inc
xor
popf
sub
inc
shlb
push
jg
cs
jle
ss
movsl
int3
cmovb
hlt
push
mov
fsubrs
push
adc
les
sub
or
inc
cmp
lret
nop
mov
rcrb
ljmp
xchg
fdivrl
dec
jg
cmpsl
loop
or
cmc
testl
fcomps
lcall
mov
cmc
mov
push
int3
cld
and
fnstenv
sbb
arpl
pop
in
daa
loope
fnsave
or
sub
out
mov
test
in
fdivp
lcall
inc
xchg
and
xor
out
int
push
fadd
mov
jl
jo
clc
lea
mov
mov
fdiv
xchg
out
out
ss
ret
bound
mov
cmp
mov
dec
clc
cmpsb
inc
pop
pop
xchg
inc
scas
xor
test
sbb
gs
xor
ss
sub
inc
jmp
jne
or
xchg
inc
and
sahf
xchg
mov
pop
in
insb
mov
mov
inc
inc
and
sbb
xchg
pop
inc
repz
enter
rcll
pop
outsl
mov
pop
mov
cmp
jnp
stos
dec
sbb
loopne
fiaddl
xchg
xor
in
sbb
negb
jp
mov
inc
adc
out
lahf
sbb
jae
nop
stos
push
adc
or
pushf
push
sbb
pop
ret
xor
lret
or
add
sbb
shll
cmp
jo
hlt
inc
push
je
clc
cmp
pop
test
add
and
fwait
scas
repnz
jo
cmc
push
cld
mov
xor
cltd
add
pop
shrl
cmp
inc
inc
test
mov
fstl
mov
and
repnz
cmp
cmc
xor
add
inc
lahf
push
mov
dec
jne
ja
lret
orb
repnz
imul
sbb
inc
test
jle
xchg
test
push
pop
nop
mov
subb
xor
pushf
xchg
mov
push
and
cmp
fldenv
mov
repnz
stos
jnp
add
stos
jecxz
or
cmp
jle
stos
sub
mov
js
pop
pusha
jp
or
loopne
push
fiaddl
mov
mov
pop
std
mov
call
sarb
xchg
es
pop
cltd
lea
aad
sub
push
mov
mov
sbb
fstpl
mov
stos
incl
sub
inc
push
jno
outsb
cmp
add
es
sbb
and
cltd
or
sbb
imulb
repz
inc
dec
loope
in
lret
les
gs
in
xlat
outsl
insb
inc
mov
pop
add
xchg
pushf
out
leave
inc
xchg
add
mov
pop
adc
sbb
cmp
inc
sub
xor
sbb
dec
arpl
cmpsl
and
dec
mov
cmp
js
jne
dec
ficoms
cmpsl
aam
add
rcr
fs
out
xchg
and
mov
js
xchg
sub
rclb
pop
mov
or
or
inc
push
test
scas
sub
sub
sub
add
xor
cmp
in
inc
dec
mov
pop
ja
out
xchg
jno
ja
ficomps
jmp
ss
or
in
mulb
sub
cmp
stc
jge
lea
cmp
out
jmp
xchg
xchg
mov
mov
mov
lods
dec
jnp
push
aas
test
daa
jge
inc
mov
aad
push
les
sbb
imul
add
add
inc
inc
push
cmp
dec
mov
in
fldt
mov
mov
ss
pop
sub
dec
insb
addr16
dec
rcl
xchg
in
fcoms
adc
dec
adc
repz
inc
jnp
xchg
aaa
mov
or
popa
aaa
or
das
out
pusha
push
aas
or
inc
jecxz
nop
pop
int
imul
cmp
iret
aaa
xchg
push
mov
sbb
cmp
outsl
sub
jnp
xor
std
sti
mov
movsb
pop
popa
and
pop
pop
mov
shl
or
xchg
shlb
sahf
popa
jne
enter
sub
pushf
bound
jle
push
and
xchg
adc
ljmp
js
cltd
insb
or
in
cmp
mov
xchg
push
adc
cmc
mov
outsl
adc
cs
add
aad
ss
or
dec
daa
inc
mov
mov
mov
mov
cltd
rcrb
int
iret
aaa
cmpsb
in
cmpsl
mov
int
xchg
jbe
test
push
xor
mov
mov
push
push
sbb
mov
aas
pop
mov
mov
and
xchg
pushf
jbe
mov
inc
xor
cs
xchg
aad
fsubrp
mov
cmp
fists
adc
dec
jle
add
mov
lods
add
mov
inc
dec
and
inc
dec
fistpl
cltd
jecxz
nop
aas
stos
clc
adc
je
ss
fwait
mov
jle
test
dec
adc
std
fldl
pop
das
ljmp
cmp
xor
cmpsl
inc
pop
mov
out
insb
inc
scas
hlt
int3
cltd
mov
nop
fs
test
daa
std
fisubrl
jo
sub
popf
or
jle
roll
and
inc
icebp
sub
dec
fdivl
repnz
mov
mov
mov
adc
loopne
iret
loop
jp
and
cmp
jmp
xchg
push
dec
xorb
xchg
movsl
into
loope
imul
mov
inc
test
test
dec
mov
pushf
pushf
fstpl
int
jge
jge
lds
sti
stos
pop
mov
push
shr
pop
subb
mov
rcl
adc
lret
ret
push
xor
cmp
or
or
int3
shlb
rcrb
fdivl
sbb
lcall
jge
inc
xor
iret
aam
out
ficompl
fwait
imul
repnz
jb
std
movsb
sarl
inc
dec
jge
add
inc
out
xchg
loop
mov
lcall
jecxz
mov
inc
dec
jmp
lret
aam
sbb
adcl
cmpsb
dec
sbb
pushf
outsb
nop
or
test
xor
outsl
dec
ret
aas
je
out
repnz
stos
insl
enter
sti
clc
jl
jle
push
stos
inc
or
adc
popa
xchg
pop
pop
mov
push
test
popa
cmp
lods
in
inc
sub
dec
movsb
addr16
xchg
dec
push
or
cmp
push
out
insb
pop
jae
rorl
xor
nop
in
pop
clc
jg
add
cli
out
mov
sbb
ret
sbb
push
and
cwtl
push
data16
enter
ds
call
fdivrp
cmp
daa
add
push
ljmp
dec
shlb
mov
clc
daa
pop
dec
add
ficompl
out
push
or
dec
push
cmp
push
andps
imul
testb
cmp
pop
rcrb
mov
loope
dec
lods
mov
lcall
nop
pop
pop
in
push
xchg
pop
dec
cmp
push
int
pop
inc
in
xor
and
test
cmc
inc
cmpsb
push
sarb
jge
imul
shrl
and
cs
popf
dec
mov
sbb
lahf
cmp
or
xchg
cs
aaa
shl
popf
dec
mov
mov
cmp
rcr
mov
test
loop
add
repz
dec
test
lods
ret
add
cltd
loope
cmp
movhps
sbb
adc
pop
or
push
dec
daa
dec
addr16
mov
or
jae
pop
jbe
out
and
inc
in
dec
cli
outsl
js
mov
clc
bound
push
nop
and
inc
lcall
or
icebp
rorb
in
das
iret
sub
bswap
pmulhw
enter
test
sbb
adc
or
fwait
mov
cli
sub
cmp
jo
sbb
jg
push
scas
and
stos
mov
fscale
jne
mov
mov
arpl
mov
div
mov
fcmovne
jnp
pushf
jmp
push
dec
ret
mov
cmp
repz
sub
or
push
mov
mov
mov
insb
pusha
lds
mov
icebp
lods
xor
cmpsb
decl
pop
sbb
test
aas
pop
cmc
lret
cs
out
sbb
cmpsl
adc
pop
lds
in
daa
sub
xor
and
xchg
jge
insl
xchg
mov
jecxz
push
sahf
cmp
pop
inc
insl
pop
and
insl
mov
mov
outsl
je
push
xchg
sti
es
cmp
aas
rclb
fisubrl
js
ds
push
add
jecxz
dec
xchg
sub
lcall
scas
test
mov
dec
xor
ret
nop
test
sub
pop
pushf
fs
repz
adc
es
inc
push
push
arpl
and
xchg
mov
lock
adc
loope
mov
push
out
jnp
mov
rorl
lods
hlt
test
imul
fnstenv
rorb
movsl
int
int3
adc
push
push
dec
lret
push
fwait
adcl
jno
or
bound
push
fwait
push
xor
jmp
mov
sbb
in
test
pushf
sti
fisttps
pop
call
cmc
sti
or
mov
push
mov
mov
test
jecxz
test
test
sub
dec
lcall
mov
insl
sbb
paddsw
jno
lcall
xor
push
call
and
stos
outsl
aas
das
jns
aad
mov
adc
gs
aaa
arpl
sub
xchg
cmp
lret
lds
and
mov
data16
insl
aaa
mov
adc
and
or
inc
xchg
dec
rdtsc
cltd
or
jmp
les
mov
mov
stc
add
aad
lock
mov
mov
clc
cmp
into
add
sbb
pop
push
and
push
adc
push
imul
xchg
add
adc
jno
insl
popa
adc
push
in
mulb
cmp
fwait
insl
rcpps
push
ja
cmc
pop
adc
jo
mulps
daa
xor
mov
sub
js
shll
push
xor
pushf
push
and
push
hlt
mov
jo
idiv
insb
push
test
xchg
mov
push
icebp
ret
and
push
std
data16
xchg
sbb
mov
pop
enter
adc
adc
cmpsb
dec
ljmp
mov
aas
and
cmp
aad
jmp
and
sarl
into
imul
icebp
shlb
xor
pop
mov
push
sub
sbb
sub
shrl
movsb
or
xor
and
cmp
adc
lds
out
mov
inc
mov
xchg
cmp
jmp
sub
lods
adc
ss
enter
inc
xchg
mov
clc
ja
in
mov
or
xchg
add
enter
test
adc
xchg
int
jo
mov
loope
inc
xor
aam
mov
xor
aam
sti
pop
push
adc
sbb
je
and
inc
pop
in
push
jge
sbb
xorb
mov
sarl
xchg
dec
cmp
inc
cli
aam
jne
inc
in
pop
fnclex
daa
add
dec
loopne
mov
les
pop
adc
xorl
add
fidivs
ret
sbb
mov
cmpsl
add
lret
and
ret
cmp
sub
daa
mov
and
pop
push
outsb
test
push
stc
sub
lods
outsl
pusha
icebp
leave
cwtl
and
xor
cs
jle
xchg
loope
sbbl
push
or
push
aas
add
filds
mov
cs
data16
insl
scas
shlb
rorb
cli
xor
mov
andb
lock
aas
lods
out
popa
idivl
es
inc
jb
lret
out
jge
xchg
jg
loopne
lcall
lods
adc
xchg
orb
into
and
jmp
mov
dec
adc
sbb
jns
sti
mov
les
imul
and
loope
jg
sbb
scas
in
or
xchg
out
incb
lods
pop
cmpsb
leave
jl
add
jns
nop
shlb
mov
call
lods
mov
sub
aam
or
push
orb
push
cmp
out
lods
pop
fsub
fnstenv
xchg
push
push
cs
int3
in
pop
ror
mov
enter
mov
jno
push
jb
sahf
int3
cmp
xchg
pusha
test
xchg
jae
stc
mov
pop
inc
or
ljmp
divl
xor
test
jp
jnp
hlt
push
mov
pop
clc
pop
rcll
fs
xor
imul
dec
addb
lea
or
in
in
data16
ja
pop
jmp
cmpsb
xor
jmp
push
jge
xchg
aam
nop
rol
cltd
and
int3
ss
loope
and
and
cmp
xorl
cld
jle
out
push
mov
mov
filds
icebp
lret
xor
int3
pop
std
pop
repz
adc
push
shrl
ljmp
add
jmp
into
mov
stos
mov
imul
dec
shlb
adc
inc
int
jbe
aas
test
in
mov
negl
dec
cmp
add
std
dec
gs
outsb
and
rcrb
mov
leave
outsb
movsb
dec
push
cmp
aas
call
pusha
mov
cmc
test
or
xor
shrb
leave
out
mov
ss
sub
and
jecxz
mov
inc
mov
xchg
movsb
jbe
fmuls
in
pop
xchg
pop
push
inc
and
push
pop
pushf
mov
and
gs
imul
jne
pop
push
or
jno
jns
pop
lock
addb
push
mov
mov
mov
daa
imul
add
sti
imulb
aas
xchg
cwtl
mov
sub
test
add
ja
add
inc
mov
cmp
cmp
inc
notb
rol
outsb
mov
out
shr
mov
es
jle
sub
cmp
or
dec
xor
and
int3
xor
fs
dec
pusha
pop
push
and
dec
out
ja
adc
lock
in
out
jo
fsubrs
sub
pop
push
mov
and
mov
xor
lret
imul
mov
cs
repnz
es
push
jb
cmp
out
adcb
pop
nop
inc
mov
xor
cmpsl
add
jecxz
sub
cltd
xchg
mov
pop
pop
ret
adc
inc
push
hlt
jle
pop
mov
dec
push
sbb
push
jmp
jge
sbb
lret
dec
inc
and
xlat
outsb
scas
pop
mov
mov
stos
mov
sti
sub
pop
popf
gs
int
dec
fs
out
mov
push
mov
std
orl
push
cmpl
cltd
stos
out
mov
push
dec
cmp
jge
add
aam
and
mov
mov
cmpsl
fs
mov
in
insl
cmpl
dec
icebp
xchg
loopne
lea
cltd
stos
sub
mov
mov
xchg
rorb
adc
outsb
add
call
nop
pop
test
inc
mov
push
pop
or
daa
dec
aaa
sti
lock
popa
xchg
pop
outsb
frstor
aad
cmp
xchg
rolb
xchg
cwtl
rclb
aad
jne
inc
out
dec
nop
clc
inc
adcb
jne
adc
add
adc
arpl
xchg
lret
out
rcll
sub
pop
inc
xor
pop
or
es
sbb
pop
scas
push
pop
jge
jp
sbb
inc
fstl
push
clc
hlt
dec
jnp
or
clc
arpl
push
jne
sub
inc
mov
push
fnstenv
adc
sbb
mov
xchg
sub
lds
mov
jp
test
hlt
pop
xchg
lds
outsb
mov
cmpb
shl
insl
inc
xor
es
push
nop
subb
xor
fsubl
js
push
xchg
movl
add
scas
aam
mov
faddl
stos
xor
pop
push
dec
mov
cmp
stos
push
dec
loope
loopne
sbb
aam
mov
notb
and
add
jmp
cmpsl
bsf
sbb
imul
add
dec
in
testb
shl
mov
fldl
push
out
sbb
in
xor
push
jecxz
pop
or
add
or
dec
mov
pop
pop
jnp
mov
jbe
lea
pushf
xor
clc
xor
in
or
testl
fidivl
popa
lods
stos
rolb
inc
mov
icebp
int3
jne
and
cmp
dec
lods
sbb
sub
xchg
push
lds
mov
add
or
mov
cltd
and
mov
out
and
add
test
and
hlt
insl
xor
mov
sahf
std
test
jno
push
and
pushf
fisttpl
mov
out
mov
mov
in
xchg
or
out
or
rcl
xor
dec
cmp
cli
mov
dec
xor
sub
pop
orl
test
jge
popa
fldenv
lahf
dec
subps
rcl
mov
xchg
inc
sub
fs
add
test
sti
sarb
unpcklps
cli
bound
movsl
pop
leave
fsubrl
mov
and
outsb
aas
fidivl
and
repz
mov
jecxz
or
loopne
add
shll
je
or
test
int
sub
negl
notl
cmp
arpl
ds
loopne
test
push
lock
loope
int
mov
jno
ds
add
sarb
jno
lods
out
bound
cmp
pop
jp
mov
pop
mov
out
push
mov
sbb
fsubl
sub
pop
cltd
sub
adc
fadds
jb
test
arpl
mov
xor
je
push
xlat
pop
mull
push
push
mov
std
andl
hlt
iret
out
fimull
mov
add
pop
xchg
cmp
pop
clc
add
sub
push
int3
or
xchg
push
xor
popf
int3
push
jns
push
jmp
sbb
sub
aad
xor
inc
jl
mov
adc
inc
enter
adc
mov
cmc
in
mov
and
and
rorl
outsl
mov
movsl
xor
fwait
shr
jmp
push
out
push
and
mov
mov
ret
lahf
lds
mov
or
jnp
sub
je
inc
ret
rol
push
sbb
cmp
push
push
mov
cs
sahf
cwtl
mov
and
adc
jo
pop
stos
rclb
repz
imul
fstl
test
sub
js
sbb
push
push
push
in
xor
mov
mov
adc
push
mov
ret
cmp
add
les
enter
inc
fsubp
and
inc
fisubrl
das
add
inc
loope
xchg
sub
xchg
mov
mov
mov
sbb
jns
sub
inc
push
insl
and
pop
adc
push
imul
leave
cmp
lret
lret
sub
stc
push
or
inc
icebp
das
lock
enter
les
nop
or
idivb
ret
inc
jns
add
xor
push
inc
sbb
dec
pop
dec
popf
pushf
add
scas
fstps
or
je
in
fs
sub
dec
jmp
add
jo
sub
lret
stos
add
cwtl
and
insl
xchg
and
outsl
jne
mov
pop
pop
push
mov
pop
jb
stos
pop
adcb
movsb
bound
add
popa
shrb
jb
fsubrl
ja
sbb
mov
nop
push
outsb
arpl
in
cmpb
ljmp
push
lods
aad
and
add
insl
push
popa
xlat
fldenv
sbb
cmp
mov
cmpl
ljmp
mov
mov
cmpl
or
xchg
in
in
out
testb
jmp
cli
ja
sbb
rcll
test
mov
inc
out
imul
mov
cmc
fs
jno
insl
fisubrl
mov
ret
sub
jns
mov
push
cmp
sahf
rcrl
sub
mov
daa
adc
stc
insl
dec
loope
shrl
jl
loop
jb
enter
cmpb
jne
sub
inc
add
mov
popf
inc
jge
jo
jbe
pop
adc
out
push
das
dec
add
xlat
push
fistps
xchg
sbbb
add
add
fildl
aad
jne
lods
arpl
call
popf
lahf
add
push
adc
nop
dec
lea
pusha
ds
sub
mov
shl
mov
enter
pop
dec
popf
pop
jl
ret
lods
xor
cmp
bound
loopw
mov
pop
out
test
inc
mov
cltd
sarb
xchg
jae
testb
cmp
lahf
push
cmp
ds
outsb
in
gs
imul
ljmp
cmp
or
and
sub
mov
sub
dec
fistps
jae
bound
mov
pop
ja
mov
insl
sarb
repnz
push
or
and
cmp
das
cmp
cli
insb
cmp
jg
add
adc
cmp
jg
cwtl
pusha
cs
sbb
testl
je
add
and
jle
jno
lods
mov
divl
nop
das
or
sbb
mov
fnsave
mov
lret
push
jo
push
test
pop
add
cltd
sahf
cvtdq2ps
dec
repnz
xchg
std
aas
in
enter
push
test
mov
cmp
dec
call
enter
fnsave
push
and
lds
iret
mov
push
clc
cmp
cltd
aas
push
xor
icebp
sbb
jno
pop
add
or
jl
gs
enter
xlat
repz
scas
mov
inc
les
inc
enter
cltd
nop
loop
data16
lock
loop
dec
cld
mov
mov
or
hlt
push
addr16
sbb
adc
fldl
jae
jmp
add
test
addr16
in
in
das
sub
inc
daa
incl
sbb
pusha
jge
aaa
int
xlat
rcll
mov
pusha
ret
mov
aam
inc
pop
es
dec
or
scas
sbb
push
arpl
mov
jo
lock
cmp
mov
pushf
shll
jnp
lods
pop
pop
xlat
rcrl
add
lcall
xchg
lea
adc
sub
inc
pop
scas
sbb
mov
xor
nop
pop
or
das
cltd
mov
mov
xchg
loop
repz
repz
repnz
stc
into
ja
es
in
jle
and
aam
fiadds
mov
movsb
loop
lcall
add
sub
adc
cmp
add
jle
popa
lods
leave
dec
xor
outsb
lret
xchg
ret
add
addr16
jae
cli
stos
adc
push
lods
fsubl
and
xor
lret
fdivrl
inc
pusha
fstl
or
stos
fcoms
out
not
mov
enter
jmp
ret
data16
add
inc
popf
xchg
jecxz
mov
insl
in
fcoml
jecxz
clc
or
mov
and
sbb
jmp
test
jmp
inc
in
pop
mov
or
pop
mov
cmp
adc
add
ret
lods
cmp
roll
mov
lret
mov
push
cmc
cmc
pop
sbb
or
sbb
and
mov
sub
inc
xlat
pop
adc
add
mov
call
stc
ret
mov
or
mov
fwait
mov
gs
out
adc
test
rorb
push
addr16
dec
add
cli
int
jl
lret
mov
loope
ljmp
mov
xor
sarl
lea
sahf
dec
test
icebp
xor
cwtl
addb
sub
xchg
and
cmp
jp
sub
bound
notl
mov
xchg
push
cmp
add
jp
mov
adc
xor
sub
cmp
xchg
add
nop
mov
pop
xchg
and
add
dec
int3
push
push
je
xchg
cmpsb
jb
inc
inc
and
jnp
xchg
push
adc
ret
aad
je
inc
cmpsl
push
stos
jo
and
pop
lods
sbbb
inc
jnp
cli
jg,pt
mov
dec
and
push
aam
test
cltd
xchg
mov
adc
jo
in
aaa
xor
in
or
ss
imul
jae
mov
or
sub
push
xchg
mov
add
std
fnstenv
out
jnp
push
outsl
xor
addr16
add
cwtl
loop
mov
loopne
inc
xchg
cmp
pop
sub
cmp
xchg
sahf
add
jbe
mov
lds
pop
loop
sub
clc
jbe
xor
inc
xchg
ljmp
fnstenv
mov
inc
sbb
and
outsl
jp
xor
pushf
sbb
jmp
jle
mov
insl
mov
sbb
mov
enter
scas
decb
lea
test
mov
ds
push
push
mov
mov
pop
cmp
mov
mulb
mulb
adc
imul
inc
jge
test
pushf
stos
fdivs
push
adc
sub
mov
stc
cld
fildll
sub
jl
roll
xchg
insb
daa
inc
and
add
mov
sub
xor
mov
inc
mov
inc
hlt
mov
mov
jns
in
adc
loope
xchg
clc
push
sbb
jne
mov
iret
sbb
ds
popf
sbb
jbe
subl
daa
movsl
repnz
es
inc
pop
out
push
mov
aaa
mulb
adc
add
add
fcoml
decb
fidivs
mov
sbb
and
iret
pop
mov
xchg
std
lods
mov
rolb
test
ljmp
jg
xchg
push
inc
shll
cmpsb
popl
cmpsl
add
and
or
lret
sub
or
sub
mov
dec
cmpb
loopne
mov
mov
mov
pushw
andb
shll
mov
imul
and
adc
push
jae
dec
sarb
jmp
loope
mov
lea
dec
popa
je
scas
stos
aam
aaa
xchg
mov
push
lret
cmc
inc
sub
dec
lahf
adc
loopne
fcmovne
fstpt
repnz
inc
cmp
sbb
aas
rorl
jnp
adc
inc
add
pop
cmp
hlt
and
mov
dec
aas
sbb
or
pop
aas
in
and
mov
lea
add
jle
out
aad
ret
xchg
std
mov
ret
mov
lret
jbe
or
lcall
ret
jmp
pop
push
hlt
and
movsb
cmp
jle
sbb
adc
stc
ss
adc
ja
push
cmp
hlt
mov
mov
orb
cmpsb
out
insl
lds
iret
fwait
mov
pusha
test
into
push
cli
lret
ret
into
jno
cmp
sub
mov
xchg
cmp
dec
xchg
lret
add
and
inc
jg
adc
fstl
imul
and
stc
adc
out
pop
shrb
pop
clc
add
mov
loop
jo
add
pop
or
pushf
mov
xchg
pop
movsl
jcxz
test
sbb
notrack
mov
aam
nop
dec
mov
into
outsl
or
pop
adc
int
sti
inc
cltd
sbb
push
sbb
mov
negl
xor
repnz
sbb
repnz
sub
sahf
sbb
inc
dec
sbb
xchg
movsb
jno
mov
mov
add
shl
stos
adc
aam
es
jge
fsubrl
pop
jne
dec
mov
push
lcall
and
imul
leave
xor
add
add
adc
pop
add
mov
add
and
and
cmp
cmp
inc
pop
scas
xchg
popa
jg
add
dec
lds
inc
jns
lahf
out
andb
das
pusha
jnp
mov
sub
dec
mov
inc
pop
int3
push
sti
lahf
mov
mov
jge
jle
xchg
int3
pop
jg
pushl
adc
jecxz
fldl
jno
std
out
xchg
sahf
pop
jnp
cltd
jge
inc
sbb
and
lods
or
aas
or
mov
into
nop
push
xlat
or
push
ror
scas
inc
push
jmp
imul
jl
pop
lock
pusha
mov
mov
mov
jmp
ficompl
push
decl
ljmp
movsl
xor
cli
xchg
mov
mov
dec
sub
cmp
aad
or
and
fisubrl
sub
mov
je
jno
jp
hlt
loopne
imul
gs
outsl
nop
rorb
or
adc
add
xor
gs
cli
pushl
sbb
icebp
adc
mov
fnstenv
or
lock
mov
or
cmc
aad
fnsave
or
les
jnp
or
inc
jle
adc
pop
xchg
cmpsl
pushf
push
divb
es
dec
push
stos
call
sahf
push
mov
and
mov
inc
imul
adc
mov
pop
cmp
scas
and
hlt
jns
xor
inc
dec
inc
sub
ss
push
cmpl
mov
imulb
xor
dec
push
mov
enter
cmp
inc
ret
out
scas
fcoml
mov
stos
int
shl
clc
inc
inc
xor
inc
jge
adc
jmp
andb
arpl
xor
repnz
xchg
add
divl
pop
adc
into
repnz
add
arpl
pop
inc
pop
mov
adc
mov
cmp
lds
sbbl
and
dec
cmp
arpl
cmp
inc
movsb
rcrl
jecxz
cli
pop
xchg
lret
inc
dec
test
lahf
jns
lods
or
in
xchg
inc
mov
mov
rolb
fsubp
jl
pop
fdivl
aas
out
outsl
xchg
cmp
subl
aad
pop
lahf
xor
sbb
mov
leave
cmpsb
inc
ljmp
mov
dec
fsts
rcl
sub
sbb
rol
fs
cmpsl
mov
mov
out
sbb
cwtl
sub
adc
cld
inc
or
daa
cmc
enter
sbb
jb
xchg
insl
cmpsl
lret
nop
push
cmp
xchg
insb
pop
sbb
mov
cld
xchg
push
jle
test
inc
scas
fistpl
ljmp
js
push
sbb
sahf
pop
das
inc
jge
push
adc
addr16
hlt
clc
mov
js
xor
or
out
jae
mov
mov
fstp
cmc
fcmovnbe
mov
pop
adcl
push
pushf
addl
adc
push
cmp
or
cmc
cmp
fmul
xchg
dec
dec
into
jp
pop
fndisi(8087
sbb
inc
mov
adc
repnz
ss
cwtl
cmp
and
rcr
inc
dec
and
pop
mov
or
imul
or
cmc
or
mov
mov
sbbl
pop
add
pop
jae
jg
jo
in
xchg
jne
push
in
adcl
sub
inc
rolb
aad
and
ficoms
addr16
rorl
dec
fbstp
stos
cmp
shlb
aaa
mov
dec
rorl
outsl
lods
std
enter
pop
and
push
mov
aam
xchg
outsl
sar
adc
adcl
jge
adc
jne
shrl
xchg
outsb
aas
mov
mov
cs
lcall
inc
xchg
mov
add
sub
sbb
inc
lahf
jge
mov
out
in
mov
les
xchg
bound
loope
dec
out
xchg
push
lock
cmp
fcmovb
mov
mov
clc
fstps
and
insl
clc
out
insl
add
adc
mov
cmp
xchg
jg
adc
repnz
jge
fists
mov
cmp
shl
je
mov
pushf
cmp
daa
xor
insl
cmp
mov
pop
pusha
aas
addr16
push
js
inc
out
clc
data16
test
add
cld
dec
sub
adc
scas
jno
pushf
dec
xchg
adc
lahf
lea
cli
fisubrs
std
subb
dec
sbb
aas
bound
push
gs
sar
and
addl
fdivrs
shlb
outsb
cmpsl
cmpsl
jae
test
pop
pop
xor
jbe
xlat
xor
push
inc
movsb
xabort
lods
xchg
les
cwtl
icebp
xor
iret
mov
inc
mov
pop
and
aas
fwait
jmp
dec
imul
xchg
pop
pusha
mov
and
sub
mov
sti
inc
cs
mov
and
ja
rcll
sarl
jl
dec
pop
sti
push
fs
inc
test
inc
sub
sbb
in
pop
cmpsb
out
scas
stos
sbb
and
rcll
imul
xor
mov
adc
incl
out
pop
out
jmp
les
cmp
lret
and
mov
mov
and
sbb
fimull
scas
pop
sti
dec
xchg
cmpsb
fbld
dec
inc
int
outsl
sahf
and
mov
add
pop
mov
xchg
jg
fdivl
enter
insl
mov
andb
inc
sti
fsubrp
sub
mov
or
push
mov
pop
jmp
test
lods
sbb
push
mov
inc
cmc
arpl
add
adc
fidivrl
stos
out
mov
dec
pop
lea
and
pop
push
sub
push
add
shlb
pusha
sbb
sbb
xlat
push
push
cmp
xchg
gs
lahf
add
shlb
add
ja
fs
inc
sub
jmp
xchg
movsl
and
mov
mov
adc
dec
xor
mov
cmp
aas
and
jmp
pop
pushf
insb
dec
inc
sbb
negb
cltd
pop
je
or
xchg
dec
sti
adc
aad
push
mov
adc
loope
pop
xorl
add
sub
mov
enter
mov
sub
sub
ds
in
lret
push
mov
outsl
outsl
mov
int
in
lret
ljmp
dec
dec
pop
pop
jmp
nop
pusha
sbb
add
outsl
mov
or
fwait
divl
dec
imul
push
jb
xor
test
add
pop
insb
push
jle
les
out
in
mov
ret
jb
or
lcall
cmpb
adc
cmp
addb
call
mov
sbb
pop
xor
jmp
pop
shll
sub
cmpsl
testl
icebp
pop
cmp
mov
xor
adc
insb
shrb
das
mov
cmc
and
fmull
xor
popa
push
add
push
sbb
sahf
push
mov
subb
lds
or
int
push
outsb
cmc
psubusb
jns
stos
push
lahf
mov
inc
xor
adc
xchg
cmp
sub
adc
inc
jo
cmp
fs
outsb
mov
lock
popa
std
or
inc
mov
xor
cwtl
sbb
add
icebp
push
into
mov
int
inc
leave
in
out
pop
int
xchg
push
xor
ja
vmovdqa
mov
cmpl
sahf
push
mov
into
cmp
and
stos
mov
or
sub
inc
jnp
lods
pop
rcrl
add
cmpsb
xchg
dec
daa
leave
sub
pop
push
cmp
jno
mov
cmpl
mov
xor
loopne
xchg
mov
in
inc
adcl
outsb
add
mov
mov
xorb
mov
aaa
gs
pop
lcall
mov
es
lret
pushf
lcall
mov
fwait
jo
adc
cmp
cmp
push
gs
fwait
std
sbb
mov
lcall
int
lods
test
xchg
out
mov
fnstcw
frstpm(287
in
inc
jnp,pn
pusha
iret
mov
jl
flds
call
push
pusha
pop
sub
sbb
inc
pop
jg
xchg
push
cmpxchg
fs
adc
jp
clc
in
outsb
fs
xchg
sub
das
or
sbb
repz
jns
pop
xchg
mov
cld
pop
out
fdivs
sub
in
jp
xor
sbb
lahf
orl
pop
mov
imul
shrl
ret
mov
es
inc
ja
imulb
sbb
add
or
mov
in
mov
data16
in
xchg
mov
adc
mov
mov
outsl
cmp
adc
ficomps
cltd
jecxz
dec
sub
push
or
mov
dec
lods
or
cltd
jl
jecxz
add
loop,pn
mov
pop
mov
sbb
mov
pop
jl
lods
leave
lret
ret
movsb
or
mov
adc
adc
sbb
pop
jne
add
jl
inc
sub
ret
jb
jle
lods
sub
xchg
ret
and
inc
addb
lods
push
pop
push
mov
jnp
mov
push
pop
jns
insl
int
stos
scas
or
sub
cmp
je
shr
daa
or
lds
inc
sub
fsubr
jb
mov
mov
push
fmull
ja
insb
jl
dec
leave
or
xor
pop
in
pop
imul
gs
jns
mov
xor
mov
mov
jle
mov
scas
pop
jnp
mov
jge
cmp
jnp
fsts
pushf
and
jae
fwait
loope
pop
icebp
js
pusha
icebp
lcall
dec
and
es
push
das
mov
clc
inc
or
inc
lods
push
mov
or
push
xchg
inc
test
sbb
aas
mov
enter
cmp
movsb
sub
push
cmp
sub
loope
nop
sbb
xor
sub
jae
sti
mov
adcl
daa
std
es
and
sahf
inc
lret
loope
add
jge
cmp
cmpsb
push
into
and
xor
inc
ja
popf
dec
and
bound
stos
mov
divb
xchg
out
loop
rcll
repnz
sub
xchg
xchg
cli
addr16
mov
xchg
outsb
cmp
mov
lea
out
cmp
das
sub
dec
ficomps
hlt
and
fwait
push
jo
adc
push
iret
cmp
mov
or
jne
xchg
mov
pop
adc
xor
fldt
inc
fs
xor
mov
loopne
xchg
outsb
inc
push
rorl
loop
fisttpll
or
adc
sub
sub
cmp
pop
cmp
stos
jmp
jb
in
fmuls
clc
aaa
nop
aas
jmp
jle
mov
scas
movsb
aas
adc
mov
and
jno
aad
loopne
test
fisubl
imull
insb
and
lret
pop
cmp
mov
out
or
aad
jg
lods
adc
shll
pop
loop
movsl
ljmp
xor
or
mov
test
movsl
ljmp
popf
clc
inc
inc
dec
jae
cmpl
inc
or
ret
addr16
int
inc
dec
push
mov
xchg
add
jp
lcall
int3
inc
in
mov
out
mov
outsb
xchg
xchg
mov
mov
iret
js
nop
and
add
sub
jnp
add
cs
loopne
dec
mov
or
loope
xchg
jle
jmp
pop
data16
adc
out
psubq
insb
inc
inc
pop
hlt
test
loop
pop
jbe
pop
rcl
push
sub
dec
movsb
imul
stos
xchg
jl
loopne
mov
insl
mov
in
rcll
insb
xorl
sub
push
cmpsb
sahf
jmp
aaa
xor
adc
mov
pop
inc
mov
adc
fs
and
sub
enter
jecxz
add
mov
sahf
pushf
pop
fcomi
and
insb
enter
jbe
jnp
sub
loop
xchg
add
test
lock
js
xor
ljmp
inc
cmp
ljmp
and
lea
iret
add
ret
xor
mov
cmp
iret
xor
repnz
jbe
sbb
mov
es
lods
int3
jmp
test
lret
sti
xchg
add
fs
cmp
add
mov
pop
rolb
jb
push
mov
xchg
mov
in
scas
adc
jnp
rclb
xchg
push
in
xchg
add
fwait
jge
pop
test
std
push
and
pushf
xchg
inc
jmp
popa
inc
rcll
inc
inc
arpl
xor
adc
ret
push
adc
je
cli
xor
mov
pop
jmp
sub
mov
stos
add
jecxz
ja
ja
xor
cltd
lahf
add
mov
mov
pop
in
aaa
jno
xchg
add
pop
or
cmpsl
js
xchg
inc
fnop
lods
xchg
rcr
fsubrl
outsl
push
inc
jns
stos
add
fisubs
les
xchg
aaa
sbb
arpl
or
imul
mov
inc
adc
inc
cld
jp
jnp
mov
sbb
cmp
inc
mov
adc
rcl
test
stos
and
andb
dec
aaa
fwait
idivl
in
inc
sahf
jle
push
sbb
push
imul
int
int
jle
stos
jno
mov
adc
aaa
inc
setp
mov
subb
mov
inc
xchg
fistpll
pop
mov
scas
fsubrl
mov
cltd
sbb
cmpb
sbb
xor
lret
jbe
jae
js
sub
xor
in
stc
inc
insb
mov
roll
dec
mov
es
push
rcr
out
neg
movsl
loop
mov
aaa
movsl
inc
push
and
adc
push
jecxz
jnp
cltd
xchg
push
ret
arpl
inc
sub
xchg
push
imul
in
negb
or
cmp
or
lahf
int
test
cmc
and
inc
or
mov
mov
mov
mov
mov
push
lahf
lcall
dec
or
mov
and
mov
insl
outsb
inc
xchg
inc
std
mov
push
pop
cltd
aas
mov
inc
mov
mov
movsb
pop
xorl
cmp
js
sbb
imul
lret
popa
xorb
pop
scas
cwtl
push
ss
adc
sahf
or
std
aad
cli
mov
jmp
jmp
and
stos
push
enter
add
push
lock
incb
push
repz
test
lret
jge
sbb
sub
cmp
sub
jg
xchg
or
jb
xor
cmp
push
jg
sub
test
cwtl
mov
jno
jg
ljmp
lds
xchg
out
pop
mov
insb
aaa
pop
pusha
lds
bound
gs
negb
ss
and
lock
sub
pop
cli
pop
mov
stos
int3
mov
sub
das
jno
jp
ret
inc
mov
ja
dec
sub
mov
mov
arpl
jge
fdivl
xor
movsl
pushf
push
inc
gs
hlt
int3
movsb
stc
pop
popa
xchg
xchg
out
jo
lds
mov
pop
sbb
aad
je
movsb
mov
pop
adc
jl
inc
add
and
out
cmp
push
lret
mov
push
pop
int3
inc
jmp
js
add
mov
mov
mov
and
imul
shll
aam
push
pushf
les
rorb
shrl
inc
imul
jb
out
fldenv
pop
lea
cmpsl
popf
pop
pop
jo
sub
sub
lds
dec
sub
push
adc
mov
popf
inc
mov
sbb
jno
sub
jg
imul
cmp
loop
mov
into
aad
mov
sbb
add
pop
cltd
iret
sbb
in
popf
in
or
cwtl
pop
aas
nop
mov
dec
or
mov
mov
out
fldl
icebp
inc
gs
add
lcall
dec
lods
sbb
rcr
adc
sub
and
out
mulb
lea
push
xchg
aas
lret
pop
adc
incb
push
xchg
je
xchg
in
lcall
xchg
pop
jae
test
repnz
xor
test
test
fnstsw
mov
aad
inc
aas
xchg
mov
cld
xor
imul
notb
mov
sbb
sbb
out
or
cwtl
and
stc
mov
adc
jg
mov
leave
addr16
cltd
shlb
inc
icebp
inc
cmp
mov
ds
jne,pt
dec
cwtl
in
dec
and
mov
cmp
in
push
pop
clc
pop
sar
jnp
cld
and
cmp
mov
xor
pop
cmp
mov
clc
mov
mov
insl
rcrl
stc
aaa
lea
mov
sbb
mov
je
mov
dec
leave
sbb
int3
hlt
and
cltd
ret
outsl
xchg
xor
fldt
jge
push
scas
repz
or
mov
ds
in
push
jo
adc
out
test
imul
adc
mov
sub
fdivp
dec
lock
stos
xchg
and
push
xchg
jecxz
or
pop
mov
aad
xor
das
fldl
cwtl
out
mulb
mov
pop
cmp
jecxz
loope,pn
ret
adc
out
hlt
loope
cmp
arpl
daa
sub
sub
xchg
nopl
ljmp
arpl
lods
xor
sub
cwtl
sub
sbb
xor
imul
mov
cmpsb
shlb
mov
dec
or
xor
or
sub
mov
push
test
mov
lcall
mov
data16
ficomps
rdtsc
xor
cltd
int
movsb
jp
out
lds
scas
js
pop
aaa
mov
lods
bound
test
mov
out
push
push
int3
jnp
inc
nop
pop
push
adc
aad
inc
pop
lods
and
mov
jmp
add
or
std
mov
fistpll
stos
jno
dec
jne
scas
js
in
adc
mov
sub
xchg
rolb
in
rorl
mov
shrl
test
cld
mov
xchg
and
pop
mov
in
pop
mov
js
pushf
sti
cmc
js
mov
xchg
push
push
sbb
jle
dec
mulps
inc
je
stos
mov
iret
xchg
mulb
ljmp
fistps
mov
jp
shr
stos
aas
mov
jp
jmp
shlb
push
imull
cs
shrb
xlat
out
sarl
fucomi
nop
enter
push
push
scas
roll
xchg
mov
push
fwait
mov
incb
sub
es
repz
repz
pop
cmpsb
mov
sbb
cld
adc
jl
pop
aam
les
lods
push
in
sbb
xor
sarb
shrb
cmpl
gs
jo
sub
add
fsts
mov
imul
xor
sub
inc
imul
pop
inc
jno
cmpsl
aad
sbb
sub
push
rcrb
sbb
and
pop
movsb
outsb
repnz
push
shlb
mov
sbb
idivb
push
repz
push
and
cmpsb
loopne
sbb
pop
stc
mov
mov
and
xchg
pop
cmp
ret
cmp
ds
pop
stos
sti
xchg
imulb
subl
int3
and
sbb
mov
mov
loop
pop
xchg
xchg
enter
aas
mov
add
cltd
or
cmp
ja
jne
test
daa
add
in
mov
mov
adc
mov
xlat
or
clc
clc
mov
popa
lahf
mov
invd
outsl
xchg
push
jg
shlb
gs
mov
pop
mov
loop
xchg
gs
jb
or
cmpsl
and
dec
pop
adc
les
dec
jb
pop
cmp
std
and
lds
mov
loop
inc
sti
xchg
pusha
push
and
add
sbb
ja
clc
pop
mov
sahf
push
movsb
pusha
dec
pop
fwait
test
cli
add
test
mov
sub
adc
mov
and
cmc
out
iret
sbb
jmp
das
pushw
jmp
xor
cli
pop
stos
vrsqrtss
jp
out
lds
push
sub
jo
mov
mov
popa
adc
xchg
push
cld
pop
fstp
dec
pusha
cs
in
ror
xchg
add
addl
dec
push
cmp
pop
cs
sub
mov
fidivs
mov
mov
jg
pop
pusha
adc
dec
ret
les
mov
out
stc
push
int
sub
sbbb
in
cs
or
jno
scas
loop
clc
mov
sbb
ret
ss
jo
gs
cld
popf
icebp
mov
jg
adc
jae
xchg
mov
shlb
mov
sbb
jmp
sbb
xor
xchg
data16
scas
push
xor
dec
mov
inc
mov
outsb
xchg
xor
xlat
call
nop
clc
fwait
sbb
cmpsb
xlat
ret
jmp
nop
and
mov
add
mov
inc
adc
push
and
push
repnz
push
loopne
add
popa
adc
xchg
mov
loope
xchg
std
clc
movsb
fprem
pusha
pop
dec
sub
ljmp
arpl
movsb
add
stos
push
xchg
orb
mov
loope
adc
fcoml
jmp
or
je
mul
xor
xchg
push
dec
lds
fwait
out
and
push
inc
aam
or
pop
mov
sub
pop
cmpsl
mov
imul
imul
fidivrs
xchg
jae
inc
xorb
and
mov
dec
stc
xlat
jmp
jge
test
orl
mov
lea
mov
sbbl
and
sub
lea
pop
xchg
adc
and
mov
jmp
fiaddl
xchg
adc
arpl
daa
push
pushf
ret
fistpll
sti
stc
adc
inc
mov
aas
xchg
add
ret
outsb
pop
call
xorb
xor
jae
xor
mov
aaa
ret
adc
jns
outsl
icebp
xchg
pop
in
shl
bound
rol
and
inc
aaa
xchg
mov
adc
cmp
cltd
push
test
movsb
xor
loopne
sbb
imul
repz
push
test
hlt
inc
fs
idivb
and
popa
mov
push
cmp
mov
leave
lcall
and
lahf
cs
mov
popa
lret
or
data16
sub
pushf
mov
push
inc
jp
adc
pop
push
out
iret
rcr
nop
cmp
push
sub
movsl
pop
pop
pop
nop
iret
das
stc
shr
mov
jecxz
hlt
fidivrl
pop
adc
cltd
push
sbb
loopne
mov
mov
in
push
pop
and
fldenv
verw
or
and
xchg
cmp
cmp
shl
stos
or
xor
pop
mov
inc
insb
jl
push
daa
jae
dec
pop
cmp
push
int3
pusha
addr16
pop
ljmp
adcb
andl
mov
xchg
cmp
sbb
jp
mulb
cs
in
fiaddl
pop
roll
clc
and
shr
leave
mov
push
rcl
scas
and
cmp
sbb
inc
mov
sbb
pop
cmp
push
and
mov
push
cwtl
add
dec
adc
mov
je
push
movsl
je
insb
nop
hlt
xchg
and
mov
das
call
xor
roll
sub
ljmp
inc
gs
jb
or
lret
sub
das
adc
push
mov
divb
adc
mov
pop
sarl
outsl
daa
or
jns
shlb
int3
out
pop
ljmp
or
in
xchg
mov
enter
aas
adc
cmp
data16
add
das
pushl
add
lock
in
mov
cld
ror
push
dec
dec
mov
bound
jno
jnp
push
pop
jle
and
repnz
push
sbb
push
mov
adc
addr16
pop
mov
in
movsb
pop
movsb
cmp
cld
out
pop
inc
mov
movsl
cmp
into
lock
mov
ret
jno
push
push
inc
popa
push
sbb
sti
enter
jle
sbb
movsb
adc
or
call
fidivs
lds
or
and
adc
stos
outsb
fs
ret
and
sbb
cli
or
inc
loopne
pushw
out
repz
rclb
outsb
mov
shrl
mov
xchg
lcall
pop
or
mov
or
and
fisubl
popa
and
in
ret
insl
loopne
cwtl
roll
add
mov
gs
bound
pop
ficomps
add
jecxz
adc
xchg
shlb
ss
scas
and
push
mov
mov
push
fcom
repz
xorl
adc
push
cmpsl
out
shr
imul
mov
pusha
sarl
pop
call
ficomps
and
fstpt
jae
popa
comiss
sarl
add
aad
mov
arpl
mov
ds
inc
xchg
jae
aas
cs
mov
pop
adc
out
fimuls
push
pop
out
mov
setne
insb
dec
cmpsl
xor
pop
xor
or
push
fimuls
jnp
add
push
xchg
inc
xchg
addr16
rcrl
xchg
pop
icebp
divb
xchg
sub
shll
es
or
inc
sti
rorl
pop
mov
cmp
testb
mov
call
push
or
mov
dec
jl
imul
jmp
adc
sbb
lahf
or
int
mov
adc
add
xor
mov
repnz
enter
pusha
shr
mov
lock
out
xchg
gs
test
inc
mov
jns
ja
or
lret
jmp
rolb
loopne
loopne
or
mov
mov
inc
push
aam
dec
outsl
and
pop
and
cmc
adc
in
mov
sbb
sbb
int
inc
lods
lods
sub
add
aad
fs
mov
cmpsl
adc
addr16
adc
das
mov
xchg
nop
pop
xor
outsb
shlb
nop
pop
cmp
mov
cwtl
jns
wrmsr
inc
jae
jp
loopne
out
test
je
adc
jnp
les
push
sbb
loop
inc
mov
out
inc
and
rolb
adc
lds
fimuls
arpl
pop
and
leave
hlt
mov
aad
xchg
aad
mov
stos
stos
jp
mov
clc
dec
loop
xlat
xchg
arpl
mov
inc
add
pop
adc
mov
mov
cmp
ljmp
into
lret
inc
mov
lock
xor
lsl
enter
inc
cmpsb
mov
imul
jns
inc
lods
pop
pop
push
lahf
cmpsl
inc
or
mov
add
jl
leave
add
pusha
movsb
xor
arpl
xor
gs
mov
or
cwtl
movsb
add
pop
int
lods
inc
cli
ret
cwtl
negb
sbb
popf
rcll
in
xor
push
out
sbb
jmp
pop
adcb
fnstsw
daa
lret
ficompl
inc
repnz
xchg
mov
rcrl
jbe
add
notl
in
je
mov
jns
cmp
push
adc
fcoml
loop
leave
gs
mov
ffree
ja
ss
xchg
pop
jo
insl
insl
decl
xchg
jne
dec
push
xchg
mov
xor
mov
inc
hlt
adcl
push
push
sbb
and
out
gs
bound
lods
lea
pop
aad
into
dec
push
aad
pop
adc
sbb
fidivrs
jp
std
sbb
mov
or
sub
test
mov
mov
jno
adc
ss
adc
std
xchg
loop
xchg
aam
lods
sub
or
dec
pop
inc
and
xor
in
cwtl
or
or
sbb
xor
mov
jns
clc
pop
lds
push
inc
dec
bnd
sbb
fwait
mov
xchg
mov
iret
les
aas
mov
test
inc
cs
cmp
movsb
pop
out
dec
mov
cmpsl
and
int3
xor
clc
test
jmp
cwtl
lahf
std
pushf
neg
shl
pop
sub
int3
xor
jnp
rorb
stos
negb
out
inc
cmp
jo
lcall
lcall
ss
lret
adc
cmp
adc
sbb
pop
sbb
xchg
pop
lock
push
popa
cmpsl
pop
insl
es
dec
fistpl
fwait
lods
gs
xchg
rorb
aad
hlt
sub
pop
mov
adc
xchg
push
scas
cmp
sbbb
and
xchg
mov
jne
mov
inc
rol
sbb
or
push
pusha
sbb
pop
loope
add
cmp
movsl
ss
xor
insl
pop
mov
ret
rcrb
rcl
enter
push
cmp
jbe
leave
gs
mov
jmp
shl
insl
xor
mov
notb
mov
pop
pop
cli
sbbb
inc
jb
jne
cmpsb
mov
out
pop
cs
mov
shll
mov
into
in
xchg
cmpsb
in
and
xor
fiadds
loope
add
imull
push
pop
shlb
shll
jo
shll
in
sti
or
adc
rcrl
adc
fs
lods
aam
sub
add
xchg
pop
mov
enter
subl
lcall
lock
push
fwait
or
clc
loopne
dec
mov
cltd
xor
enter
aam
mov
mov
pop
in
repz
insb
or
popa
jle
push
fwait
jbe
inc
in
sbb
mov
in
ret
sbb
js
aaa
add
push
pop
addl
mov
pop
jecxz
xchg
jg
shrl
div
subl
imul
inc
adc
sbb
inc
test
xor
aas
xchg
mov
xchg
mov
add
test
int3
mov
sahf
repnz
add
add
push
push
stc
movsb
leave
lret
xchg
or
or
iret
std
mov
gs
call
add
add
addr16
mov
dec
stos
pop
lds
jp
jo
sti
adc
mov
adc
leave
stos
pusha
push
mov
xchg
push
outsb
insb
scas
pushf
adc
repz
repnz
imul
xchg
pusha
sub
imul
mov
fsts
inc
cwtl
lcall
push
inc
mov
adc
call
mov
mov
mov
in
xchg
sbb
in
mov
ret
jb
cmpsl
add
push
dec
popf
pop
lods
push
aam
nop
cmp
imul
xchg
mov
adc
test
pop
nop
out
adc
adc
jl
pop
leave
inc
or
mov
in
in
bound
inc
pushf
or
mov
iret
cld
xchg
xor
lcall
inc
lods
insl
gs
mov
dec
inc
push
xor
cli
jp
arpl
andl
rolb
push
rorb
mov
jno
mov
pop
lds
gs
adc
and
push
pop
js
movsl
loopne
push
xor
jecxz
std
sahf
or
sarb
inc
fisttps
cmpsb
jo
mov
inc
aas
jae
mov
aam
dec
lret
lds
sbb
or
ljmp
scas
mov
jnp
pop
rorl
ret
je
jb
arpl
adcb
dec
or
ja
lods
repnz
mov
mov
cmp
stos
sub
and
mov
dec
pop
es
and
std
mov
repz
sub
subl
repnz
mov
mov
dec
add
shl
bound
ds
sbbl
cmp
inc
gs
lcall
inc
inc
sti
adc
sub
sar
pop
lea
mov
mov
jl
movl
dec
idivb
sbb
sub
sub
js
ret
adc
mov
mov
roll
push
and
sbb
jne
lock
cmp
out
sub
cmp
push
aam
andb
mov
xor
or
mov
cmp
arpl
xchg
xchg
outsb
icebp
mov
and
cmpsl
mov
enter
jmp
mov
sahf
push
dec
push
sbb
mov
pusha
cmc
or
cld
test
stos
push
in
in
in
xor
aaa
shll
jp
jecxz
lods
jmp
pop
push
ror
mov
pop
cmp
fdivrp
pop
ljmp
movsb
aaa
adc
dec
mov
xchg
and
adc
dec
add
leave
fs
popf
pop
inc
subl
mov
cmp
add
arpl
icebp
cmpsb
and
lods
pop
and
aas
lods
jmp
das
xchg
add
decb
test
addr16
jge
cmp
mov
loopne
movsb
mov
mov
jb
xchg
adc
cmpsb
imul
stos
cmp
jne
cli
xchg
push
xor
arpl
sbb
dec
call
ljmp
push
inc
jne
je
scas
jl
adc
stc
pop
dec
mov
insl
lret
xchg
mov
lea
xadd
loopne
add
mov
xor
out
mov
cld
cmp
mov
or
xlat
pop
aam
and
out
cmpsl
mov
and
decl
hlt
xor
or
adc
sub
outsb
fists
fcomps
and
mov
sahf
pop
pop
cmpsl
inc
repz
mov
mov
xor
fs
outsl
std
fidivl
arpl
insl
cmp
sbb
jnp
outsl
movsl
sub
cmp
in
imul
pop
outsb
sub
inc
push
push
aaa
loop
or
mov
xlat
mov
inc
push
sub
jbe
movsb
ja
mov
xchg
fcmovb
push
push
scas
pushf
aad
jmp
xchg
dec
popa
pop
adc
jmp
sbb
xchg
iret
int
jne
jne
mov
sub
cmp
fdivs
lds
dec
adc
dec
mov
jge
int3
mov
mov
mov
jns
clc
nop
sub
dec
sbb
and
rcll
add
add
dec
ljmp
dec
jns
jge
or
push
sub
popa
xchg
inc
mov
sbb
aad
dec
xchg
in
lods
pop
inc
test
std
push
fcompl
adc
add
cmpsl
test
sahf
mov
orl
bound
or
inc
cld
test
dec
faddl
aas
xchg
imul
rcrb
xchg
dec
pop
int3
sbb
sub
fidivs
loop
sbb
sti
xchg
fs
push
push
xor
xchg
cmc
mov
test
sub
xchg
das
sub
sub
push
jns
push
add
or
in
dec
ja
sbb
xchg
push
stos
cli
inc
das
lret
repnz
or
test
fldpi
int
insl
xor
nop
xchg
lcall
fldcw
and
movsl
jne
sub
jno
cmp
mov
icebp
cwtl
aam
inc
mov
pop
shrb
and
fwait
lret
repz
or
lods
cwtl
loopne
fdecstp
out
stc
repnz
test
outsb
lcall
push
sub
xchg
stc
hlt
ljmp
add
cmpsb
jg
imul
push
xor
adc
mov
int
rolb
test
sub
sbb
sub
sar
mov
cmpsl
xchg
mov
mov
loop
or
xchg
popf
rol
mov
popa
aas
stos
jo
mov
push
adc
add
or
cmp
popa
xchg
push
xchg
cmc
sbb
add
xchg
js
cwtl
jl
push
lods
sbb
fwait
enter
or
cs
xor
pop
jnp
jnp
int3
aas
aam
popf
jge
push
sub
pop
inc
mov
mov
adc
xor
lret
dec
loope
jnp
fwait
cmp
pop
xchg
adc
aad
mov
mov
ss
and
pop
mov
jecxz
xchg
push
loopne
adc
leave
orl
dec
mov
decb
fisubl
outsl
jns
clc
mov
stos
arpl
mov
adc
rcl
and
xor
jne
ljmp
aaa
xlat
cmp
inc
and
cmpsb
adc
ficoml
subb
fcmovnu
faddl
test
rcrl
ds
roll
sub
inc
adc
fsts
and
out
sahf
fbld
pop
cmp
push
out
pop
inc
outsl
loope
in
repz
and
cli
or
cmp
pop
xor
add
fcmovbe
and
xchg
inc
cli
push
sbb
enter
into
pop
out
scas
mov
scas
or
dec
pusha
out
sbbb
or
mov
pop
aad
test
add
adc
icebp
jge
mov
pop
pop
xor
cld
pop
mov
lahf
fadds
sbbb
andl
mov
adc
fwait
jg
mov
sbb
lock
mov
mov
stos
cwtl
leave
ljmp
hlt
ja
scas
sarb
ja
sbb
pop
or
or
nop
ljmp
test
cmpsl
fcmovnb
mov
pop
or
jecxz
faddl
pop
mov
icebp
out
scas
leave
xchg
xor
mov
jne
mov
mov
outsl
sbb
aam
and
mov
sub
adc
mov
inc
sbb
hlt
orb
roll
dec
cmp
int
pop
fnsave
shl
mov
mov
fidivrs
out
ds
or
ljmp
fidivrs
pop
cmpsb
sub
mov
mov
roll
shl
adc
call
lods
and
les
sbb
sub
bound
aad
push
fs
or
xchg
xchg
add
and
jecxz
mov
dec
addr16
xchg
sbb
xor
pop
jp
shrl
fistpl
loop
add
push
xchg
sarl
mov
xchg
aad
lahf
fcomps
stos
dec
and
push
push
jno
xchg
jmp
xor
movsl
imul
and
mov
js
jo
mov
xchg
fwait
in
xorb
jmp
mov
dec
in
ret
rcr
stos
out
add
jmp
fidivrl
call
mov
sbb
rclb
out
pop
test
mov
out
fists
hlt
fidivrs
subl
lcall
xchg
add
or
popa
fsubrs
imul
push
shlb
mov
xchg
outsl
xchg
mov
jmp
cmc
aas
or
outsb
add
adc
mov
or
pop
cmp
mov
xor
cmpb
or
out
fldlg2
push
fistpl
repnz
pop
and
test
push
ja
adc
shl
cmp
push
push
dec
inc
xchg
add
pop
dec
mov
ljmp
outsl
sbb
xor
jmp
mov
sbb
mov
lcall
adcl
iret
filds
inc
xor
mov
bound
dec
mov
sbb
jbe
test
jne
or
jns
ret
sbb
call
push
mov
xlat
pop
inc
xor
popa
push
add
clc
xor
xor
arpl
push
add
fbstp
pop
into
mov
sub
fwait
mov
out
dec
lcall
or
jecxz
push
es
sbb
xor
sub
cmpsb
sub
fcoms
sbb
ret
cmpsl
pop
sbb
pop
movsl
rolb
loope
pop
clc
shr
xor
xchg
sbb
and
jmp
fimuls
loop
push
ljmp
insb
sbb
pop
call
sub
imul
xorb
ds
jge
sbb
cltd
jne
push
add
addl
loopne
in
stos
fwait
mov
fldcw
mov
clc
aad
enter
mov
xchg
pusha
imul
nop
jno
inc
out
push
add
cmpsl
cli
clc
insl
cli
jnp
sbb
adc
das
outsl
sti
inc
sbb
mov
fstpt
imul
push
jp
incb
adc
push
rcrb
jno
cltd
cmp
fsubrs
push
jg
xchg
bound
leave
lret
xchg
adc
dec
popa
flds
cmp
int3
mov
mov
insb
sub
out
jnp
ret
mov
or
mov
pop
sub
xsha1
cmpsb
leave
je
and
shrb
jmp
add
inc
xchg
std
dec
inc
addl
push
push
gs
gs
push
rcrb
and
sbb
push
xor
and
scas
sub
imul
cmpsb
push
rep
ljmp
or
and
in
jne
mov
imul
inc
jnp
test
cld
jge
mull
jp
aas
fisttpl
andl
jb
inc
inc
ret
jl
jle
xlat
cmc
jno
cwtl
test
xchg
push
addr16
pop
cld
outsl
jge
pop
jbe
cmp
xor
popf
fiadds
or
outsl
xorl
in
sub
sbb
mov
xchg
movsl
movsl
out
in
adc
gs
int3
out
push
push
push
adc
rcll
mov
jno
push
pop
pop
out
jg
cs
rclb
jno
std
test
test
xor
fwait
daa
xchg
pusha
jns
or
test
js
clc
sbb
imul
cwtl
xchg
outsb
dec
bound
pop
and
jp
fsubrs
cmp
xlat
dec
sbb
imul
in
scas
push
push
scas
into
js
jmp
dec
add
clc
or
ficoml
insb
and
xor
mov
movb
test
mov
push
jg
mov
arpl
scas
stos
add
pop
pop
cmp
stc
dec
sub
push
xchg
xor
dec
ret
mov
nop
or
outsb
fs
repnz
mulb
sbb
mov
pop
insl
pop
adc
mov
cmp
into
adc
lock
sbb
shll
hlt
mov
je
cmpsb
divl
mov
jl
xor
ss
in
stos
mov
sbb
dec
std
cwtl
sub
insl
mov
xlat
in
mov
push
js
xor
pop
ret
pusha
mov
rorl
filds
xchg
pop
insb
jns
rcll
mov
fcmovb
jl
jmp
outsl
sarl
pop
xor
jns
das
jmp
lods
mov
es
or
jo
lcall
sarl
imul
jne
sahf
insb
cltd
fildll
insb
out
mov
hlt
aaa
add
notb
sti
xchg
in
imul
mov
clc
xchg
cmpsl
add
test
outsb
pop
aad
fstps
mov
mov
lds
xchg
mov
pop
lds
bound
xchg
mov
mov
and
cmp
stos
lock
cmc
call
fwait
pushf
leave
push
inc
jae
pushf
fwait
sub
adc
xor
in
cli
addr16
dec
mov
shrl
push
fcoms
pop
int
push
inc
add
jbe
or
inc
bnd
bound
xchg
xor
push
popf
mov
imul
into
mov
jb
fcmovnu
aam
es
xlat
jl
out
scas
mov
fcoml
scas
mov
mov
mov
and
xor
cli
icebp
inc
pop
jg
adc
fs
je
mov
sbb
adc
mov
jmp
push
cwtl
xor
imul
mov
fs
mov
cmp
mov
sti
iret
out
mov
sbb
popa
cmp
inc
inc
andl
stc
out
bound
mov
pop
mov
dec
dec
cwtl
test
or
loop
outsb
push
sbb
je
dec
jmp
or
sti
sub
cli
xchg
add
mov
test
in
outsl
sti
notl
in
pop
arpl
jae
cmp
das
aad
sub
fstp
mov
cmpl
push
les
or
pop
dec
dec
sub
fisttpll
stos
sbb
aam
mov
iret
ljmp
gs
sbb
xchg
dec
sbb
ja
pop
loope
data16
loop
mov
lret
push
cmp
sbb
mov
push
jg
or
cmp
fldt
mov
and
imul
mov
rcrl
add
imul
movsb
add
inc
ror
ljmp
divb
data16
pop
push
dec
lods
aas
fdivl
sti
fstpt
mov
aad
inc
pop
lods
jno
and
nop
sbb
shl
addr16
out
adc
into
bound
fsubs
inc
jae
insb
push
fisttps
rorl
add
bound
je
mov
dec
sbb
pop
add
xchg
mov
daa
pop
es
or
jp
ds
sbb
fsubrs
jae
push
lds
mov
out
test
aad
mov
push
add
mov
imul
dec
mov
adc
push
pop
repnz
inc
loop
mov
xchg
push
jb
inc
fstpl
loope
mov
pop
pop
or
fbstp
add
xor
sub
push
or
sbb
inc
xorb
shr
lahf
outsb
and
test
into
outsl
lods
cmp
push
sub
imul
cwtl
mov
ret
or
cmp
repnz
cmp
in
sbbb
cmp
outsb
xchg
fldt
mov
sub
pop
push
push
ds
xor
mov
mov
imul
push
jl
mov
xchg
jbe
popf
lea
cwtl
jno
jo
sbb
jmp
add
and
push
lahf
pop
xchg
mov
pop
push
dec
les
add
aad
mov
daa
cmpsb
jg
or
cltd
xor
loope
jo
enter
fimuls
sub
ds
insl
push
jbe
xchg
sbb
inc
sarl
icebp
imul
rclb
scas
cmp
out
jae
mov
lods
scas
and
inc
pop
pop
jbe
test
movsl
notl
into
mov
call
sbb
jns
lret
fimuls
pop
sbb
sbb
xchg
mov
mov
mov
sub
movsl
mov
stos
mull
mov
dec
cmp
adcl
cmp
dec
inc
xor
lods
and
cmpsb
fidivl
lods
add
lret
xchg
pop
mov
mov
ljmp
push
sub
sub
jle
imul
mov
cld
fstpt
test
insb
ljmp
loopne
xor
mov
dec
inc
sub
mov
jge
or
xchg
adc
sbb
aas
in
loop
cmp
sub
fimuls
sbb
dec
xor
dec
movsl
xchg
in
fstl
loopne
cmp
mov
xchg
mov
mov
stos
movsl
aam
xchg
inc
mov
repz
and
cmpps
fwait
sti
imull
aad
je
lea
mov
loope
xchg
sarb
adc
mov
dec
xchg
fcoml
repz
loope
sbb
adc
ja
rclb
sti
sbb
jnp
push
out
add
test
pop
adc
mov
loopne
stos
xchg
push
inc
xchg
loope
das
pop
fimuls
xchg
inc
add
popf
lds
xchg
push
dec
push
and
push
pop
fistps
pop
sti
pop
in
pop
xchg
pusha
pop
jmp
jno
xor
inc
inc
or
int
cmp
das
inc
ret
jle
mov
jno
xchg
pushf
cmp
inc
inc
add
mov
lcall
sbb
mov
push
fwait
sbbb
lods
jmp
mov
bound
mov
scas
or
mov
sub
fwait
pop
add
dec
test
pop
outsb
add
adc
add
inc
scas
mov
xlat
ja
out
ljmp
enter
stos
pop
dec
test
and
jno
dec
pop
aas
stc
dec
or
mov
lahf
ljmp
ljmp
bound
sub
jmp
cmc
jle
push
mov
and
rclb
mov
dec
lods
lods
push
in
pushf
mov
push
dec
inc
ljmp
fidivs
and
adc
add
loop
data16
or
sbb
or
daa
xor
rcll
ficoml
xchg
popa
daa
pop
inc
xor
mov
repnz
leave
xor
aaa
fstl
fdivrs
add
pop
xor
push
test
jo
pop
call
ret
fidivrs
jo
aad
xor
test
pop
dec
lock
pop
js
sub
loope
sub
fdivrp
xchg
jg
dec
xchg
push
lods
ljmp
push
mov
movsb
add
dec
jno
jecxz
int3
lret
push
dec
nop
out
jo
je
and
lcall
call
pop
or
cwtl
outsl
loop
xor
mov
popa
xor
decb
jb
je
call
mov
push
sub
js
enter
add
mov
es
mov
xorb
popf
pusha
sbb
fwait
je
mov
test
pop
popf
xor
sarl
pop
inc
in
leave
xchg
mov
repnz
add
psubsw
dec
es
dec
inc
lcall
inc
lods
xchg
arpl
pop
rcll
and
leave
add
and
push
adc
iret
jnp
test
ja
les
enter
xchg
jle
xor
adc
data16
mov
into
pop
adc
xor
enter
or
push
cwtl
faddl
decl
dec
ret
paddq
js
xor
add
jmp
inc
lock
mull
rolb
popf
popa
nop
xchg
xchg
add
test
adc
aas
jno
mov
xor
mov
scas
in
stos
jp
repz
std
rolb
call
scas
mov
and
dec
xchg
xchg
sub
sbb
xor
sbb
imul
xor
xlat
mov
hlt
sbb
loopne
aam
cmp
test
cmp
or
ss
mov
mov
rcl
push
sub
ret
call
sub
pop
enter
dec
dec
push
movsb
and
jns
pop
movsb
fidivrl
dec
mov
bsr
sbb
xlat
pop
add
dec
mov
gs
scas
stos
pop
outsl
lods
xchg
stc
pop
jmp
mov
inc
loope
out
int
dec
sahf
cs
iret
dec
xorl
scas
in
and
push
scas
add
sbb
outsb
dec
xchg
dec
cmp
xorl
mov
sub
cmp
and
insb
cmpsb
sub
shrb
cwtl
sub
lock
mov
mov
and
pop
mov
xchg
testb
int3
cmp
add
idivb
cltd
push
mov
mov
mov
popf
pop
mov
cmpsl
push
xlat
lcall
ret
imul
pop
sbb
out
loope
cmp
mov
stc
test
xchg
jp
cwtl
mov
or
filds
cmp
enter
mov
adc
fsubrs
xchg
add
mov
aaa
enter
sahf
jge
std
jle
push
imul
cld
xor
mov
xchg
pushf
mov
enter
lretw
pop
push
outsl
insl
xchg
cmp
lock
inc
scas
or
lea
int3
and
dec
popa
dec
in
iret
ret
mov
push
fnclex
mov
aaa
cmpsl
push
jg
lods
xlat
xor
sub
mov
mov
sub
jnp
dec
and
mov
ja
les
mov
gs
loop
stos
cld
andb
lock
repz
call
mov
cli
sub
pop
add
mov
jbe
leave
xchg
lahf
xorb
loope
pandn
push
dec
or
add
loop
iret
mov
les
enter
ja
scas
jnp
push
int3
insb
mov
mov
add
add
or
testb
dec
jae
call
cld
adc
add
xor
sahf
and
aad
jo
inc
pop
sbb
scas
xor
cmc
and
inc
mov
lret
mov
push
dec
push
and
std
icebp
lea
ret
insl
jbe
add
lret
orb
insl
mov
sbb
mov
insb
shl
or
jne
jno
stos
dec
and
cs
mov
mov
lret
cmpsb
mov
dec
inc
dec
cli
std
xchg
lret
adc
movsl
repnz
in
mov
inc
sbb
sbb
mov
repz
insb
mov
jecxz
int3
sar
xchg
mov
js
bswap
mov
sbb
push
push
mov
loopne
loope
and
ss
lods
push
or
dec
mov
mov
test
leave
xor
cmpsl
fdivl
aad
filds
ja
fwait
pop
leave
push
push
pop
shll
and
add
xor
mov
xchg
xchg
fs
pop
sbb
and
aaa
pop
sub
cwtl
fidivl
inc
pop
inc
ljmp
pop
or
das
jl
cmp
mov
pop
jmp
repnz
adc
jns
lcall
jl
jo
ret
mov
push
fwait
test
or
xchg
push
jle
hlt
pop
mov
pop
stos
arpl
fcompl
or
sbb
test
jmp
lock
ja
jae
imul
pop
js
or
ret
dec
sbb
out
add
fnstsw
inc
mov
sub
xchg
adc
pop
mov
xchg
fadds
mov
mov
or
aas
sarb
sbb
cmp
push
xlat
out
js
mov
cmp
jo
in
leave
push
fimull
test
push
fldenv
dec
imul
es
adc
imul
aaa
jmp
and
xor
dec
add
push
jae
fwait
xchg
xchg
pop
push
stos
aas
sahf
pusha
out
lods
loopne
jmp
in
sub
js
cli
xchg
push
movsl
jg
or
test
leave
imul
cs
push
push
mov
shlb
loop
pop
xchg
push
subb
or
mov
sbb
out
mov
inc
mov
test
mov
std
xchg
push
jg
rorl
ljmp
jno
xor
xchg
ret
loopne
mov
subb
push
fwait
adc
add
jg
xlat
push
jne
pusha
andl
xor
fldenv
fcmovbe
cwtl
lods
lods
lret
insl
mov
jmp
inc
push
les
dec
sahf
icebp
out
and
jmp
mov
cmp
imul
jle
jmp
sbb
inc
cmc
nop
nop
pop
dec
jg
sarl
aaa
mov
inc
pop
push
ja
inc
add
sub
addr16
aad
cli
insb
push
pop
pop
in
mov
roll
lahf
cmp
mov
sub
outsb
sbb
hlt
xor
ja
mov
pop
xorb
sub
test
sbb
cmpsb
pop
push
ror
insl
pop
es
push
sbb
jmp
insl
mov
int3
sub
shl
inc
cmp
out
jno
lret
scas
cmpsl
dec
or
mov
xchg
mov
mov
aad
cli
jl
xchg
mov
push
shrb
xor
or
outsb
addl
fsub
cmpsb
adc
mov
xor
ja
adc
pop
pop
xorl
sbb
add
ja
int3
xchg
mov
outsb
sbb
gs
sub
jecxz
pop
aas
adc
ljmp
popf
xchg
imul
mov
rorb
mov
add
mov
push
mov
cmpsb
int3
mov
sarl
cmc
pop
mov
lahf
pop
les
loop
ss
lds
or
movsb
push
mov
sbb
clc
sbb
add
jmp
push
pop
dec
cli
jg
in
jg
pushl
xor
test
xchg
jae
rcl
test
xor
cltd
inc
pushf
push
jl
out
mov
mov
adc
mov
ror
sti
icebp
jg
push
jmp
addb
mov
jbe
fdivs
insb
das
lods
sbb
jle
and
and
jne
jg
jp
add
adc
jl
dec
movsl
add
push
adc
scas
sub
jno
lcall
cmp
mov
mov
in
push
hlt
iret
je
lcall
rol
out
rorb
enter
imul
xor
or
and
pop
inc
or
adc
sbb
or
std
pop
jno
sarb
loope
dec
lock
xor
mov
sub
shlb
jecxz
sbb
shll
mov
stos
mov
cmpsl
pop
mov
jmp
sbb
in
xchg
pop
jle
dec
cmc
cmp
dec
pop
stc
cmp
push
push
js
hlt
and
fisubrs
xchg
sbb
push
adc
jp
sub
add
cmpsl
cmp
enter
lods
xor
jo
out
push
pop
loope
mov
ficomps
loopne
inc
out
imul
and
pop
lods
fsubrl
push
dec
push
add
imull
dec
inc
ds
mov
psubusw
stc
repnz
cmp
dec
ret
or
xor
add
adc
mov
lcall
add
in
mov
fmuls
push
and
movsl
ss
lods
sbb
scas
mov
sub
pop
loopne
rcrb
xchg
leave
clc
dec
cmp
jno
cwtl
imul
mov
mov
adc
ja
push
popf
xchg
stc
icebp
mov
push
xchg
jmp
pop
inc
movsb
pop
xchg
out
outsl
xchg
insl
mov
mov
movsb
lcall
loop
mov
mov
daa
cli
and
dec
pop
mov
pop
cld
jns
sbb
ja
mov
div
jne
rcr
cmc
inc
dec
cmp
imul
mov
hlt
add
sub
inc
ja,pn
nop
mov
mov
int3
les
push
fstpl
fiaddl
mov
addl
pop
push
arpl
cmp
rcrb
dec
shlb
imul
movsl
das
out
cmp
cmp
adc
bound
push
rclb
scas
dec
mov
cmp
int
mov
lcall
xor
push
js
jns
adc
lea
pop
mov
xor
rol
adc
leave
sub
std
fsubrl
fdivrp
nop
inc
lods
hlt
mov
loopne
xchg
roll
pop
jae
movsl
lock
shl
loope
stos
jecxz
call
jbe
neg
bnd
mov
sub
lret
mov
pop
mov
push
xchg
in
xchg
add
outsl
cmp
jmp
dec
dec
jmp
cld
jp
xchg
dec
loopne
mov
hlt
jno
cli
mov
out
inc
sarl
dec
mov
es
sub
je
stos
add
sub
sub
aam
adc
sub
jge
sbb
mov
std
mov
fildll
pop
stos
jno
cmc
cmp
iret
test
inc
lret
and
and
jl
push
xorl
inc
testb
rcll
fcmovb
popa
inc
test
or
ret
push
call
ja
pushf
xchg
dec
push
cwtl
cmp
clc
xchg
add
sbb
and
dec
jmp
andl
sbb
push
inc
shl
push
insl
lock
bound
icebp
enter
sti
int3
add
dec
add
insl
repz
dec
fildll
test
stc
sub
add
leave
add
dec
mov
pop
pop
cmp
movsl
push
fisubs
pop
std
mov
mov
cmpsl
inc
and
jl
loop
fisubrl
divb
or
jge
cmc
xchg
pop
cmp
in
mov
mov
addr16
xchg
fcmovnu
mov
fs
pop
mov
data16
jge
push
pop
loopne
sbb
mov
or
sub
dec
push
sbb
out
pop
pushl
sub
divl
inc
sbb
push
push
jbe
mov
orl
sub
mov
xor
scas
cmp
stos
xor
mov
mov
jae
data16
dec
lahf
inc
or
ret
mov
mov
clc
dec
and
orb
sbb
push
je
into
stos
inc
imul
jb
rcll
mov
loop
push
repnz
jmp
jno
or
rol
push
stos
leave
jb,pt
sub
mov
mov
dec
xchg
sub
addb
aam
fs
sbb
mov
push
jmp
cmpsl
xor
out
mov
xor
lret
cmp
fdivs
push
dec
and
cmp
inc
pop
ss
cs
sbb
lock
sbb
loope
imul
aaa
inc
shll
popf
in
pop
mov
jne
popa
es
add
addr16
pusha
cmc
and
jb
cmp
repz
std
shll
negl
cmpsl
data16
imul
inc
fiaddl
jp
imul
jmp
sahf
fs
in
push
cmp
rcll
int3
stc
and
push
es
add
andb
push
sbb
and
lea
push
nop
xlat
adc
push
fwait
push
lock
inc
mov
pop
psubq
push
loope
or
pop
repnz
adc
insl
cmpsb
popf
fisubl
push
cmp
out
mov
inc
push
mov
mov
jle
mov
adc
inc
js
inc
testl
je
movsl
cli
mov
inc
cmp
jo
loopne
jle
xchg
add
push
in
adc
inc
lret
imul
test
fs
loopne
aad
push
cli
push
sti
push
inc
add
pusha
xlat
mov
jns
dec
push
adc
sub
cwtl
mov
add
sbb
sbb
scas
pop
cmp
arpl
xchg
xlat
daa
cli
jbe
jmp
dec
inc
xchg
sbb
push
into
adc
clc
cmp
out
push
das
arpl
clc
and
jl
jnp
jbe
outsl
in
std
or
das
mov
mov
mov
jnp
add
xchg
push
xchg
sub
in
cmp
mov
mov
aaa
or
subb
xchg
mov
dec
mov
jne
sub
mov
ja
xorl
mov
fisubrs
aad
pop
pop
cwtl
sar
inc
hlt
mov
lock
push
cmp
and
int3
adc
xchg
xor
leave
jg
in
fmuls
sub
pop
push
lea
sub
clc
and
sti
mov
pusha
add
xor
dec
push
mov
pop
andl
shlb
int
insl
iret
mov
outsl
rolb
sbbb
pusha
inc
aas
jecxz
mov
or
lret
and
mov
push
cmp
test
int
imull
and
mov
scas
dec
push
push
lahf
daa
popa
test
adc
sbb
sbb
or
jns
cmp
test
adc
xchg
xor
imull
daa
push
das
fwait
inc
inc
ror
std
les
idivb
shlb
call
jnp
ja
xor
ret
sahf
jmp
stos
push
jmp
arpl
and
xor
comiss
pop
pop
mov
pop
daa
xor
mov
jge
ja
fimuls
jne
gs
pop
push
sub
outsb
inc
icebp
jg
dec
mov
repz
dec
subb
pop
inc
stos
addr16
jecxz
jne
xorl
scas
cltd
out
lds
in
cmp
sbb
insb
scas
dec
add
call
outsl
stos
icebp
sti
sub
and
daa
mov
js
sbb
sbb
xchg
push
jl
xor
add
sti
jnp
sub
push
scas
cmp
pop
xor
push
push
xchg
repnz
mov
je,pt
call
cmp
fnstsw
lret
jge
mov
pushl
lcall
mov
out
xchg
cmp
cltd
mov
stos
fcmovbe
arpl
pop
repnz
and
sbb
pushf
fdivp
das
js
outsb
pushf
popa
lods
repnz
jbe
mov
mov
fisubrs
pop
jp
xlat
ds
xor
mov
xor
jae
jb
jno
push
dec
in
pop
cmpsb
add
jb
pop
push
insl
aaa
dec
mov
cmp
dec
push
cltd
les
jmp
mov
push
fsubrl
pop
fiadds
dec
stos
push
pop
in
js
sbb
inc
shlb
mov
ror
mov
mov
xchg
sbb
out
pop
mov
pushf
rclb
jne
mov
add
and
sub
into
sbb
inc
pop
insb
jge
lret
outsl
inc
inc
xchg
cmpsb
dec
add
sbb
cli
sub
lds
jbe
ss
jne
jle
jg
lods
xor
imul
js
shll
shrb
mov
scas
std
mov
sbb
fdivr
push
ss
stos
lret
fwait
cli
scas
or
sbb
mov
scas
icebp
adc
add
push
adc
lahf
not
xchg
test
lea
xor
daa
cmp
lods
ror
popf
fdivl
imul
cmp
inc
jg
sbb
adc
push
int
cmp
inc
movl
ret
sti
fwait
imul
push
jb
xchg
imul
pop
out
stos
xchg
cmp
inc
inc
sbb
inc
int
adc
adc
das
out
cmpsl
cmp
xor
rorl
sbb
cmp
or
sub
pushf
lahf
les
push
push
mov
jno
out
inc
mov
pop
fmull
mov
sahf
das
xchg
dec
dec
jmp
push
es
test
divb
loop
adc
insl
mov
mov
fdivrs
scas
loopne
sub
lret
mov
hlt
jo
lret
mov
mov
push
in
imul
mov
popa
test
scas
loop
mov
insb
fnstcw
test
sbb
imull
addr16
sbb
ljmp
aam
lods
xor
sub
loopne
sub
daa
mov
pusha
insl
mov
das
rol
scas
daa
adc
sbb
pop
cmpsl
dec
call
scas
sub
push
ret
scas
pop
jns
cltd
movsb
pop
repnz
stos
stos
stc
xchg
jbe
jecxz
inc
fs
out
mov
daa
inc
fdivr
adc
in
pop
insb
out
movsl
dec
cwtl
push
pop
xchg
xor
das
rcll
pop
into
adc
test
in
or
or
mov
and
jns
out
movsb
add
stos
xor
clc
mov
mov
xorl
in
cli
hlt
and
add
rcrl
pop
adc
lods
aad
dec
or
movsb
add
fisttpl
xor
mov
adc
out
inc
bndstx
das
rcll
cmp
mov
cmpsb
jg
push
sar
cmc
mov
fmull
sub
das
sub
std
ror
mov
imul
mov
mov
xchg
cmpsb
fs
fcoms
push
pop
mov
hlt
sbb
ror
jge
mov
lret
movsl
in
mov
xor
fnstenv
stos
movzbw
jbe
mov
sub
mov
cld
push
loope
and
cltd
arpl
stos
bound
wrmsr
dec
jno
fildll
dec
movsb
sub
jmp
adc
inc
sub
mov
in
push
xchg
mov
rorb
pop
cmp
xorb
push
ss
mov
jmp
push
pop
add
pop
and
add
inc
pushl
cmc
pop
test
or
dec
adc
and
in
cmc
adc
jbe
inc
sub
xor
frstor
mov
ficoms
push
lahf
cmp
test
cmp
mov
jl
push
dec
leave
inc
out
xchg
add
adc
inc
mulb
sub
aas
push
je
out
adc
repz
jge
mov
enter
lea
jecxz
push
mov
mov
or
in
addr16
adc
inc
adc
xchg
cmpsl
xchg
and
hlt
les
cmp
sar
or
lds
jle
pop
inc
jns
inc
mov
cmp
int
cltd
sub
dec
aam
lahf
int
mov
jecxz
sbb
leave
arpl
xchg
fwait
aam
iret
ret
mov
ret
and
orl
mov
sbb
out
shlb
lock
out
testb
fsubs
clc
mov
sbb
inc
in
inc
jbe
stc
insl
jns
movsl
clc
lock
fildl
cwtl
xor
pop
into
xor
sbb
mov
jno
xor
push
loop
into
push
lret
addr16
inc
cmp
push
in
add
in
and
int3
dec
out
mov
push
inc
mov
adc
flds
adc
push
data16
daa
mov
and
jno
stc
mov
push
cwtl
mov
pop
ja
fadd
popf
sbb
enter
push
cmpsl
outsl
or
out
mov
pop
in
cmp
jp
add
outsb
mov
dec
dec
scas
dec
xor
xor
xchg
ret
adc
xlat
subl
sub
mov
jbe
sbb
loopne
fwait
scas
dec
and
out
adc
mov
xchg
movsl
jbe
and
pop
sbbb
mov
sbbl
xchg
cmp
mov
cld
add
jae
dec
or
push
adc
xor
add
inc
hlt
inc
jge
and
xor
or
loop
cltd
fmull
push
xchg
mov
sbb
pop
gs
aam
add
jae
pop
out
popf
fdivs
nop
add
jle
iret
sub
mov
movaps
push
cmp
mov
xor
ljmp
sahf
inc
ss
repz
xor
in
ja
addr16
mov
stc
js
scas
inc
inc
insb
mov
adc
scas
scas
mov
mulb
das
insl
dec
lds
dec
mov
fnsave
adc
cld
jecxz
add
call
xchg
dec
jmp
mov
add
cli
aam
out
push
pop
data16
push
cltd
out
pop
fmuls
shlb
sbb
std
std
fists
or
mov
jge
jl
subb
xor
and
mov
dec
pop
xchg
add
into
cmp
mov
pop
fldcw
pop
push
sub
push
lret
hlt
inc
sbb
leave
push
mov
jmp
mov
xchg
fs
add
jnp
arpl
aaa
sbb
out
cmp
sbb
cli
addr16
inc
dec
pop
pushf
cs
imull
icebp
xchg
and
es
insb
push
sbb
sbb
stc
jp
sbb
push
dec
imul
shl
addr16
leave
pop
enter
inc
sub
pop
sbb
mov
cltd
aas
ss
es
add
int
gs
cwtl
adcl
sbb
dec
mov
dec
test
cwtl
adc
mov
jge
and
pop
mov
pop
mov
sub
mov
test
add
jg
cli
lods
idivb
or
pop
sbb
mov
mov
rcrb
dec
jnp
jbe
jecxz
sbb
sbb
cltd
imul
push
pop
push
bound
push
out
mov
xchg
mov
dec
dec
lods
in
xlat
add
sbb
xor
aad
jb
cmp
fstpl
inc
inc
xor
shr
mov
fldl
mov
cmc
mov
nop
leave
sti
dec
mov
dec
xor
movsb
jle
mov
emms
sub
or
stos
jge
ret
or
enter
icebp
pop
stc
sub
jle
mov
and
sarl
fwait
dec
ds
mov
mov
mov
out
iret
add
sub
out
pop
fcmovne
int
pop
mov
test
lock
fucom
push
xchg
sbb
pop
or
xor
xchg
xlat
or
popf
mov
loope
stos
jp
gs
enter
jne
jge
jge
cmpsl
aad
adc
push
xchg
mov
xchg
orl
adc
test
xchg
cmc
mov
xchg
push
fs
xchg
sbb
dec
adc
jecxz
add
mov
push
shrl
sti
mov
and
or
dec
rcr
add
adc
aad
sbb
pop
sub
and
mov
pop
test
aad
pushf
call
ds
sar
js
mov
pop
adc
lret
int
xchg
inc
mov
mov
cmp
lods
adc
sbb
push
mov
cmp
jbe
scas
inc
lret
fisttpl
sbb
cmp
les
jbe
sahf
aaa
hlt
pop
jl
cmp
jne
addr16
xchg
ds
xchg
aaa
subb
jno
ss
sbb
mov
test
pushf
jmp
stos
in
cmpsb
fists
nop
inc
cltd
or
outsb
mov
andl
cli
pop
jl
pop
sbb
fstl
xchg
and
xor
ret
fldenv
xchg
xchg
pushf
rcr
push
jnp
dec
icebp
fildll
in
or
lods
xchg
jg
mov
or
in
fisttps
loopne
dec
lret
lret
mov
jmp
dec
pop
pop
push
daa
add
clc
in
adc
gs
stc
int
jns
push
push
inc
ficompl
imul
repz
inc
shlb
push
jle
sahf
in
popf
jnp
push
add
ds
cmp
es
loope
dec
xchg
push
or
inc
sbb
js
in
mov
rcll
or
jmp
jmp
idivl
dec
andl
divb
adc
pop
andb
in
inc
lret
jnp
push
sbb
sbb
pop
jb
jns
cmp
mov
mov
stos
lods
testb
loopne
pop
movsb
sarb
insb
mov
clc
cmpsb
pop
jb
les
outsb
xchg
out
mov
adc
int3
out
test
imull
jge
fldenv
mov
rcl
push
imul
lock
loope
push
xlat
in
add
jle
or
dec
imul
orl
push
xchg
test
pop
je
imul
movl
mov
pop
gs
repz
cmpb
cmp
bound
mov
sti
mov
ljmp
lahf
inc
gs
sbb
sub
jo
mov
out
dec
shlb
jo
inc
test
mov
loopne
mov
js
insb
ret
imul
repnz
ljmp
mov
xor
not
stc
adc
cmp
je
mov
push
sarb
xor
pusha
dec
sbb
push
and
cmp
aad
pop
arpl
mov
pop
repnz
xor
or
mov
add
adc
and
sbb
scas
repnz
movsb
aaa
ficompl
mov
adc
cwtl
pop
rcll
mov
popf
mov
shll
jnp
fsubrs
mov
add
subb
sub
sub
subl
dec
push
mov
mov
and
or
repnz
movsb
pop
stc
aad
or
stos
repz
add
xchg
inc
inc
movsb
xchg
ret
or
mov
test
filds
out
push
sbb
lret
xchg
cld
pop
dec
add
ret
repnz
mov
xchg
jle
xor
jge
aad
add
pusha
xchg
xchg
mov
xor
aas
xchg
lret
xor
fistpll
daa
cmp
cmp
fisttpll
or
ljmp
pop
add
ss
cltd
fldt
jmp
das
sti
dec
inc
iret
cli
int
fimull
dec
mov
in
stos
cmp
xor
mov
loope
cltd
dec
and
test
push
sub
mov
cmpsb
mov
mov
adc
mov
adc
xchg
pop
adc
andb
mov
cmp
lea
and
jge
xor
xchg
inc
and
xlat
cmp
lcall
xchg
xor
fsts
push
jl
cmp
xor
or
jmp
imul
mov
cmp
shll
jecxz
and
xchg
dec
xor
push
lods
aas
hlt
mov
inc
add
repz
push
sub
and
js
sub
inc
push
sbb
jbe
mov
mov
mov
ret
les
adc
rcll
shl
mov
jo
add
jl
jne
mov
mov
adcb
stos
xor
push
iret
insb
jge
dec
and
add
push
or
sub
or
add
fs
sub
cmp
cmp
in
pushf
mov
subb
negl
adc
mov
push
cmp
addr16
outsb
inc
aas
fwait
or
stc
test
pop
sub
push
push
jno
dec
es
mov
mov
sbb
icebp
mov
jnp
or
ds
dec
push
clc
pushl
push
movsl
into
cld
imul
outsl
lahf
inc
mov
push
negb
addr16
jp
cltd
cmp
pop
lock
sub
mul
add
xchg
mov
jns
sbb
sub
das
inc
ljmp
popa
lret
int3
or
jge
mov
pusha
aas
pop
fwait
push
push
jmp
dec
aas
in
mov
push
lods
pop
iret
and
lock
dec
inc
cwtl
xchg
mov
mov
xchg
mov
sub
jle
imul
popf
popa
mov
test
ds
and
lahf
cld
inc
mov
pop
out
loope
push
enter
jnp
mov
fisubrs
mov
add
jecxz
in
stc
add
sarl
repz
cmp
mov
mov
and
stos
mov
imul
sbb
xorb
mov
pop
adc
pop
test
pusha
rolb
sbbb
movsl
sub
repnz
mov
push
ret
pop
mov
pop
jl
imul
xchg
adc
fwait
ds
aam
jbe
out
add
mov
or
mov
test
sbb
cmc
movb
hlt
dec
add
shl
sub
add
push
daa
lock
mov
out
jmp
outsb
fmul
mov
cltd
mov
icebp
pop
daa
and
aad
pop
add
add
shll
das
mov
leave
xor
pop
outsl
inc
fwait
les
sbb
cld
adc
int
xchg
fs
repz
out
stos
ret
inc
jle
adc
jl
sub
sarl
sub
pop
lds
andb
sub
int3
aam
pop
test
leave
dec
jg
cmpsl
stos
popf
imul
xlat
fsts
jns
arpl
lcall
shlb
lret
aam
mov
shlb
ss
imul
and
fs
pop
pop
push
jbe
scas
add
xchg
sub
icebp
jmp
push
cmp
adc
in
push
scas
xor
imul
pause
sub
mov
loopne
adc
xchg
nop
fisubrs
pop
and
lcall
sbbb
out
inc
xchg
xlat
jb
fisttps
lahf
test
or
idivl
sub
hlt
push
ljmp
jnp
pop
adc
adc
neg
cwtl
sahf
adc
js
sahf
testl
in
xlat
add
stos
jmp
divl
lods
aas
cmp
outsb
cli
xchg
inc
imul
out
adc
add
or
pop
nop
add
stos
add
inc
scas
nop
mov
rcrl
and
call
stc
jmp
out
xor
mov
jns
pop
mov
xor
scas
hlt
jle
enter
arpl
out
jle
int
push
mov
push
mov
int3
lahf
pushf
or
fnstsw
pusha
and
rcrl
push
inc
sahf
cltd
add
ja
fsub
imul
leave
dec
dec
sbb
fidivs
test
sbb
pop
jae
sub
out
xor
enter
out
stc
push
sub
dec
adc
clc
xchg
xor
popf
iret
xchg
cld
das
cmp
stos
ficoms
aad
call
popf
push
mov
test
sub
inc
sbb
dec
xorb
sub
cmp
mov
mov
outsb
aad
das
and
sbb
fsts
push
outsb
cmpsl
mov
adc
push
mov
mov
sbb
sub
loopne
es
inc
jbe
or
enter
xchg
clc
pushf
inc
sbb
aaa
push
leave
cmp
cmp
mov
aad
or
dec
or
jns
mov
lods
adc
es
inc
lods
sub
mov
and
add
push
inc
subb
cwtl
jle
or
pop
movsb
mov
mov
cmp
enter
push
mov
movsb
cwtl
popa
in
push
in
shrl
sbb
sub
adc
mov
into
sbb
mov
xchg
in
adc
int3
nopl
jbe
adc
inc
testl
dec
push
cmp
jmp
or
jno
adc
notl
movsb
inc
lret
xchg
cmpsb
jecxz
call
inc
ljmp
pop
cmp
or
pushf
add
cld
push
push
cwtl
sbb
mov
sub
aad
xchg
stc
or
xchg
std
cld
xor
loopne
lea
arpl
dec
xor
imul
shll
xchg
push
jmp
outsl
sti
fxch
fwait
enter
mov
add
into
enter
adc
mov
inc
test
bound
jne
ja
js
loopne
dec
sbb
addr16
into
iret
push
mov
jnp
cltd
jmp
mov
nop
aaa
in
jle
iret
adc
sub
ja
or
push
push
jo
or
arpl
mul
pop
cmp
aam
dec
stos
inc
xchg
jle
jmp
fwait
lea
or
test
loope
inc
sbb
arpl
out
addl
int3
sub
lock
lea
push
lods
jb
in
pop
mov
scas
mov
push
jbe
pop
test
and
add
fwait
scas
jbe
jecxz
or
repz
sbb
jae
fmull
popa
or
xchg
repnz
push
cmc
cmp
mov
push
inc
mov
cmp
pusha
fstps
and
test
je
mov
push
popf
push
jmp
jl
orb
and
cmp
push
push
jmp
push
inc
ret
dec
jp
sbb
repnz
xlat
add
xchg
inc
inc
push
dec
je
fwait
or
xor
adc
lea
inc
into
mov
and
sbb
jb
mov
mov
adc
adc
mov
xchg
sub
inc
test
pop
dec
cmp
or
push
addr16
enter
jns
out
sbb
outsb
mov
mov
es
xchg
pop
mov
lock
insl
andl
and
pop
pop
dec
and
jmp
sbb
push
xor
jns
and
orl
mov
leave
insb
shrb
mov
and
int
mov
xchg
insl
dec
das
loop
out
mov
arpl
dec
jae
jns
inc
push
mov
sbb
mov
mov
std
loopne
rcr
mov
inc
cmpl
idivb
mov
mov
dec
xorb
cmpsl
ja
pmulhuw
and
dec
int
adc
clc
shl
pop
movsb
and
jnp
mov
jmp
in
sub
pop
imul
pushf
bound
mov
es
pop
aaa
pop
xchg
out
mov
push
or
pop
mov
fstpt
into
incl
jg
mov
push
js
ja
test
int3
jp
jbe
xchg
loopne
int3
sub
xchg
nop
neg
pop
mov
mov
jmp
iret
push
aas
adc
outsb
cmp
add
pusha
fadds
rclb
imul
andb
mov
pop
enter
cmp
adc
sarb
adc
or
mov
sbbl
nop
jmp
insb
add
dec
insl
xor
sub
les
mov
add
pop
sub
stos
pushf
jmp
aaa
das
call
add
mov
call
sub
mov
push
out
inc
jl
push
out
xor
pop
leave
pusha
jge
test
enter
push
stos
shlb
push
xchg
cmp
insb
bound
sahf
loop
imul
hlt
scas
mov
imul
xorl
es
push
add
jo
call
loope
pop
insb
outsl
mov
inc
popa
pop
nop
scas
mov
hlt
cmp
rcr
inc
test
stos
push
sbb
stos
xor
fists
leave
addr16
lahf
xchg
int
pop
std
xorl
cmp
test
mov
dec
mov
outsb
std
aaa
inc
push
push
test
lds
int
xchg
lret
pop
xchg
rcrl
cmp
cmc
xor
out
icebp
mov
hlt
lcall
mov
adc
fiaddl
mov
sti
sbb
sbb
icebp
and
mov
cmp
xor
sahf
sub
insl
push
and
iret
into
jb
adc
cld
xchg
loop
ret
cs
scas
pop
sbb
sahf
negb
xor
inc
iret
jbe
fsubr
sub
fdivrl
aaa
xchg
lret
lret
cli
cmp
icebp
jno
cmc
mov
push
shrl
xor
jb
js
aas
mov
int3
push
jp
out
sbb
mov
dec
lea
push
ret
mov
lahf
sti
orb
pusha
mov
mov
sbb
inc
sub
insb
ret
inc
in
int
push
inc
call
fs
mov
mov
mov
mov
mov
gs
cmp
jb
inc
and
xor
or
jno
sub
mov
imul
movsb
mov
call
mov
sbb
cmc
into
loope
sti
or
dec
pop
loop
push
dec
or
dec
std
jge
cmpsl
add
add
xchg
pusha
in
mov
stc
test
mov
ss
mov
imul
lods
inc
fbld
test
add
adc
xchg
cmp
inc
rcrb
jle
fstl
mov
add
ja
cmpsb
mov
and
cmpsb
mov
popf
cwtl
inc
sarl
ret
mov
xchg
fwait
adc
sbb
jne
repz
stos
mull
xchg
jge
js
sbb
lcall
in
insl
xor
fwait
insb
push
jae
scas
jp
fdivs
cmp
outsb
pop
cmpsb
jns
ret
out
jecxz
mov
pop
jbe
pop
xchg
aam
fidivs
sub
stos
ja
das
jle
xchg
fsubl
xchg
pop
push
clc
and
data16
sarb
cwtl
mov
fiaddl
inc
xor
inc
in
insl
push
adc
icebp
push
xchg
inc
cmp
jg
rorb
xchg
sub
pop
and
insb
ja
xor
push
test
push
push
das
and
or
cs
jbe
adc
ds
sbb
out
cmp
cli
movsl
jecxz
sub
ret
or
fcomp
push
cmp
ja
pushf
js
test
lock
and
pop
mov
jb
mov
out
mov
xchg
int3
aaa
insb
push
push
or
repz
gs
in
and
xor
pop
push
jo
jle
or
jmp
cmp
dec
pop
mov
push
cmpsl
mov
mov
lods
das
popf
dec
out
fwait
push
dec
int
mov
mov
pop
jecxz
stos
clc
hlt
mov
js
jp
and
adc
mov
pop
jmp
outsl
adc
ror
mov
inc
push
mov
loop
add
push
sub
push
insb
mov
lahf
fisttpll
fwait
sbb
leave
lea
lock
jnp
mov
sub
lock
sbb
dec
add
jbe
andl
mov
stos
pop
loopne
cltd
sbb
fiaddl
or
push
cmp
push
jl
sbb
jmp
sub
mov
sbb
std
out
jecxz
xchg
xchg
cmp
gs
xor
sbb
pop
test
inc
out
sbb
std
fwait
adc
insl
mov
int3
addr16
mov
shlb
lcall
bnd
mov
into
lahf
dec
push
ret
stc
sbb
mov
sub
jmp
mov
sub
cmp
rcr
popf
dec
mov
lcall
or
adc
leave
ss
pop
xor
cmp
xor
xor
insb
push
mov
loope
adcl
mov
push
movsl
cmp
or
push
fs
mov
in
call
adc
mov
jmp
push
push
jbe
cmp
xchg
mov
es
jg
cwtl
pusha
incl
or
and
push
in
insl
movsb
sub
mov
sbb
mov
mov
mov
mov
repz
fmuls
mov
mov
fcompl
sub
mov
daa
xchg
mov
mov
mov
in
fsubs
jg
push
scas
ret
mov
ljmp
inc
idivb
push
lret
inc
push
dec
cmc
and
outsl
je
xor
inc
cmp
rolb
ss
in
fwait
roll
push
mov
aad
outsb
fs
sbb
adc
in
in
mov
xchg
mov
push
mov
push
cli
jl
test
jl
adc
aas
shrl
shlb
adc
imul
pop
cmp
hlt
arpl
cmc
sarb
xchg
xchg
inc
or
subl
jg
mov
push
xchg
push
or
in
in
mov
shlb
hlt
stc
push
push
test
lea
lcall
fisttpl
push
pop
add
sbb
mov
mov
pop
sti
fwait
adc
in
mov
fxch
inc
and
orb
lds
adc
cmpb
ljmp
rcr
sub
fidivs
icebp
arpl
mov
fisubl
imul
fwait
push
frstor
jecxz
jle
icebp
popa
jl
scas
push
cmp
and
mov
jl
xchg
testb
pop
bound
adc
in
and
test
out
cmp
and
lret
sub
add
popa
loop
aas
cwtl
xchg
push
pop
sbb
fildll
jecxz
xchg
add
gs
inc
cmpsl
fstp
adc
sbb
out
sub
outsb
and
stos
movsl
int3
push
dec
aad
test
in
daa
cmp
out
mov
add
aad
shll
xchg
dec
add
add
jg
add
cs
enter
and
arpl
popa
mov
aaa
xchg
jecxz
dec
cmpb
dec
push
out
mov
mov
je
jno
js
xor
sbb
push
outsl
xchg
push
dec
mov
das
bound
push
xchg
push
xchg
push
or
aaa
sbb
cmp
hlt
popf
pop
scas
out
mov
jne
test
popf
push
clc
and
dec
push
je
repnz
pop
popa
xor
popa
dec
mov
push
jae
ja
stos
test
push
xchg
out
fimull
cwtl
stos
loopne
dec
xchg
popa
mov
mov
inc
rcrl
pop
mov
into
and
lret
cltd
push
mov
ljmp
dec
sub
sarl
cld
sbb
mov
shrl
push
movsl
add
aad
sub
mov
mov
xlat
int3
mov
leave
out
mov
cltd
xchg
imul
inc
inc
arpl
push
out
rorl
pop
push
test
movsb
pop
ds
shlb
movsl
iret
fimuls
stc
orl
jmp
aad
pusha
pop
es
loop
lcall
insb
nop
dec
dec
sahf
pop
mov
jle
sbb
ds
pusha
push
push
hlt
push
mov
jp
inc
mov
sub
mov
aaa
inc
std
sub
lds
adc
enter
mov
xor
inc
cmp
pop
mov
shlb
or
push
xor
inc
xchg
mov
divl
push
or
rcll
fnstsw
lret
mov
pop
xlat
cltd
mov
jns
mov
mov
push
in
aaa
and
sub
ja
xchg
cmpsl
aaa
imul
mov
jp
push
popa
fsubr
cmpsb
test
mov
xor
mov
jmp
push
xchg
pop
std
sarl
cmp
sarl
jge
pop
and
pop
xor
jge
adc
cmc
jg
push
inc
dec
jne
jns
mov
cld
inc
adc
addb
push
dec
pop
sbb
icebp
stos
sahf
icebp
sub
sub
aad
xchg
shrb
clc
sbb
or
test
outsb
es
mov
xchg
sub
dec
sub
outsl
xor
push
xchg
mov
jl
mov
stos
fstps
cld
cmp
jp
shlb
cmp
add
sbb
push
call
pop
and
jo
bswap
fildl
sti
das
aam
mov
cmp
pop
popa
jg
stos
and
movsl
cltd
dec
adc
cmp
pusha
or
and
push
mov
cwtl
jl
ljmp
ja
jecxz
mov
hlt
shlb
pop
cltd
data16
lret
sbb
insl
int
scas
xchg
adc
mov
lods
rorb
aas
push
negl
sub
sub
jo
daa
jecxz
cmpsl
jnp
sub
cltd
fdivl
jbe
sbb
sbb
movsl
sbb
xor
cld
nop
call
fs
repnz
dec
inc
mov
mov
jmp
cmp
add
jno
push
push
mov
lods
std
subb
fidivl
fidivrl
in
mov
inc
repnz
adc
js
add
adc
out
movsb
lods
call
push
pop
pop
cld
lret
and
push
arpl
mov
inc
push
mov
jno
dec
mov
and
xchg
lods
add
mov
lds
mov
js
push
std
and
or
xor
movsl
push
insl
dec
jnp
mov
cmp
fdivrl
push
js
out
in
push
repz
mov
ss
xchg
mov
sti
adc
mov
add
aam
jnp
pop
lret
push
or
xorl
sti
into
aad
cld
shrl
jbe
sar
and
cmc
jne,pt
jp
mov
fimull
push
or
sub
push
in
out
pop
push
cmpsl
mov
cmp
xor
mov
in
addr16
adc
lret
xor
mov
adc
dec
daa
insl
and
insb
out
push
mov
out
jp
pop
xchg
push
inc
cltd
push
xchg
add
jno
fs
outsb
loopne
nop
cmp
pop
scas
pusha
sub
add
inc
cltd
mov
pop
mov
loopne
sahf
add
cmp
out
cwtl
arpl
mov
xchg
daa
or
jae
out
xor
dec
pop
add
xchg
ret
mov
mov
inc
push
cmp
adc
cmp
nop
push
test
jae
add
or
lock
adc
sub
mov
push
imul
daa
or
ss
mov
inc
sub
lahf
ret
xor
mov
xor
mov
filds
rol
scas
out
sub
nop
sbb
push
scas
test
nop
fwait
and
mov
cmp
lods
dec
add
cmc
adc
in
in
sbb
pop
jne
mov
lods
lods
loop
movsb
test
aam
lods
out
sub
inc
adc
imul
push
les
pop
push
xchg
xor
pop
sbb
sarb
inc
inc
test
jmp
jbe
lods
dec
out
push
lock
leave
push
adc
stos
push
lock
jns
xchg
repnz
int
in
add
int3
call
mov
pop
scas
dec
leave
lds
cmp
and
push
fbstp
push
icebp
add
inc
fld
daa
cli
les
xchg
push
loope
ret
mov
cmc
stos
push
xchg
mov
daa
sub
sub
lods
rcl
js
aam
sub
clc
add
subl
popf
les
es
xor
iret
nop
push
dec
sbb
cwtl
insl
clc
cmpsl
loop
inc
aaa
jecxz
adc
stos
pop
or
sub
or
ss
dec
loop
xchg
and
jg
out
pop
xorb
pop
fisubl
int3
loop
xchg
orb
adc
outsl
push
inc
lcall
mov
insb
mov
or
pop
cld
insl
push
es
cmp
mov
fnsave
mov
js
push
cld
adc
je
push
movsl
and
cmp
and
hlt
rcrl
in
cltd
insl
pop
ja
aaa
mov
fbstp
mov
stc
xchg
mov
xchg
mov
rorb
cmp
arpl
jecxz
dec
popa
nop
jmp
insl
mov
mov
dec
mov
popf
insb
into
push
lahf
in
jmp
je
mov
div
xchg
lahf
adc
sbb
in
subl
dec
jl
icebp
scas
out
cld
sbb
loop
adc
mov
dec
in
push
and
inc
aad
jne
mov
xchg
xchg
push
cmp
dec
pushf
sub
cld
std
mov
shr
adc
stc
daa
add
jne
jl
sub
mov
mov
push
mov
sbb
rorb
mov
jecxz
pop
cwtl
and
mov
jo
fs
mov
adc
jl
cmp
push
loope
pop
pop
mov
mov
sub
pop
inc
push
repnz
jecxz
fists
or
imul
or
cmp
in
rcrl
aad
fldenv
sbb
push
push
jo
xor
push
rcrb
inc
cmp
rcrl
lds
xor
pop
jecxz
in
imul
sahf
pop
xor
cmp
iret
pop
pop
sub
cmp
ds
iret
dec
cmp
xor
mov
mov
cmp
fnstcw
loop
or
icebp
arpl
fsts
push
inc
out
shrl
flds
dec
jo
icebp
fistpl
push
nop
outsl
sbb
xchg
cli
lss
gs
mov
enter
das
adcl
rorb
inc
pop
stos
fsubrs
insb
repz
outsb
xor
add
inc
cli
xor
and
push
pop
xor
cmpsb
stos
push
arpl
inc
add
mov
lea
es
scas
fs
lahf
call
pop
rcrl
stos
push
sub
shl
lahf
fsub
cmp
lahf
jle
sub
dec
cmp
jmp
inc
pop
ficomps
inc
test
cmp
or
mov
pop
pop
xchg
xor
test
rcl
rcrl
repz
les
call
jno
negb
les
dec
daa
js
dec
addr16
mul
inc
sub
sbb
sbb
sub
out
push
xchg
fmuls
stos
add
jae
ret
lea
loop
xchg
clc
out
mov
sub
outsl
jg
pop
in
xor
jae
mov
or
dec
xor
insb
add
or
xor
push
mov
test
das
pushf
mull
push
pop
pop
and
dec
bound
pop
or
push
jl
gs
pop
lods
cmc
and
data16
ds
mov
rol
lods
fimull
mov
and
and
jecxz
lahf
xchg
mov
ret
adc
lret
mov
xchg
jge
hlt
xor
ret
leave
xor
lods
pop
pop
xchg
stos
and
stos
xchg
inc
mov
insb
xchg
xor
xor
jp
hlt
es
xor
pop
ror
mov
stos
or
les
fnstsw
push
push
stos
mov
jle
mov
jecxz
dec
cltd
mov
mov
sbb
scas
adc
pushf
pushf
mov
stos
xchg
push
cmp
leave
mov
adc
and
mov
add
lock
repnz
jns
clc
fists
sbb
inc
or
adc
mov
leave
mov
sarb
jecxz
das
mov
ljmp
mov
xor
push
mov
fcomps
jp
je
mov
jno
xchg
xchg
xor
sub
sub
lcall
inc
jo
push
out
enter
out
dec
sub
stos
push
lods
gs
dec
fcomps
jecxz
xchg
enter
or
push
ret
push
xchg
jb
sub
icebp
jbe
lods
mov
mov
dec
jnp
fcoms
mov
shlb
push
rorb
sbb
aam
jle
xchg
jb
cmp
mov
mov
mov
add
scas
push
push
xchg
clc
dec
mov
xor
into
xor
inc
or
repz
data16
cmpsb
movsb
sbb
popa
cmc
pop
outsl
leave
add
pop
movsl
loop
pusha
pop
push
in
fsubs
push
add
pop
dec
add
sbb
inc
addr16
mov
ret
ja
sbb
or
adc
and
cmp
out
sti
std
sarl
ss
mov
push
adc
adc
pop
pavgb
nop
sbb
add
nop
outsb
xor
push
mov
loop
mov
out
mov
and
dec
jge
mov
stc
xchg
lods
push
push
mov
jnp
jg
fld
orl
je
out
mov
pop
mov
inc
cmpsb
sbb
jmp
mov
test
mov
or
pop
lods
out
xor
push
lea
lret
jmp
lahf
cmp
or
inc
cld
fcompl
sub
mov
mov
xor
stc
or
out
mov
in
mov
lods
mov
scas
mov
gs
pop
aad
out
xchg
nop
add
pop
mov
pop
adc
cli
mov
lahf
push
leave
cmpsb
inc
dec
mov
inc
gs
sub
pushf
sti
mov
xchg
or
fiaddl
pop
push
nop
xchg
jns
out
dec
pop
adc
iret
lds
aam
mov
sbb
dec
mov
sub
and
dec
xchg
sahf
and
aas
cmp
sbb
mov
inc
dec
mov
inc
fcoml
in
iret
cwtl
or
mov
mov
or
gs
sbb
pop
sub
pop
fsubrp
xchg
icebp
jns
repz
rclb
adc
fwait
out
shufps
push
imul
incl
pop
jg
pop
in
popa
pop
clc
into
inc
mov
icebp
in
gs
mov
jno
add
xlat
fstpl
int
adcl
sub
mov
loop
dec
add
les
test
dec
dec
cmp
sub
loope
cli
out
mov
cmovno
adc
add
imul
aaa
loopne
mov
cmpsl
popl
pop
cmp
rclb
hlt
lcall
shlb
sub
ja
enter
scas
push
jae
lret
mov
into
cmp
jl
notl
sti
shlb
dec
fidivl
push
sub
addl
sub
clc
inc
ret
mov
cmp
fsubrp
cmp
push
inc
sub
enter
add
lret
cmpsl
daa
shrb
ss
and
or
lret
jne
xor
and
and
pop
aaa
cld
or
pop
jl
xor
push
xlat
jmp
cwtl
pop
fiadds
dec
dec
in
daa
cltd
cmp
int
adc
sub
ds
addr16
roll
rcrl
iret
aaa
push
or
sub
cwtl
push
adc
pop
dec
xchg
push
loopne
loopne
or
inc
cmc
es
test
rclb
add
xchg
out
lods
fadd
mov
aad
add
repz
sub
mov
jae
out
pop
mov
sbb
into
push
dec
call
aam
dec
lahf
mov
insb
icebp
xor
or
xor
cmp
cmp
cmp
cwtl
xchg
mov
mov
mov
out
mov
movsl
fmull
add
xor
clc
xor
data16
dec
sub
pop
lds
mov
sub
xchg
jo
test
loop
lea
sbb
sbb
sahf
leave
and
in
jmp
add
and
aas
movsl
dec
xchg
scas
loope
xchg
or
cmpsl
pop
leave
addr16
adc
dec
ja
loop
stos
insb
inc
pop
repz
cmpl
cmp
pop
pop
cs
inc
lock
fidivrl
scas
fcomp
aam
xlat
inc
pushf
cwtl
fs
enter
iret
or
fucomip
dec
mov
add
push
push
stc
xchg
pop
mov
or
add
cld
mov
xchg
ljmp
mov
and
rorb
pop
test
pop
fsubrs
inc
sti
sbb
adc
int
dec
push
push
cmp
and
rorb
cmpsw
addr16
enter
dec
add
or
jns
sbb
cld
cmp
mov
lds
in
jne
addb
pop
imul
inc
dec
cmp
clc
xchg
imul
test
inc
pop
sub
test
hlt
inc
sub
int
inc
std
lea
nop
push
push
sbb
cmp
dec
cmp
scas
sub
add
cmpsl
mov
cmp
leave
mov
arpl
mov
sub
xor
add
mov
inc
iret
add
fisttps
sarl
call
mov
mov
out
mov
dec
mov
xor
test
ficoml
lret
cmpsb
push
jecxz
jns
iret
out
mov
pop
mov
loope
pop
jne
shll
pop
mov
gs
clc
shufps
mov
push
loope
shr
push
lock
int
sarl
inc
jge
ret
or
sub
mov
xor
repz
adc
push
nop
push
stos
push
mov
push
or
sub
pop
jl
lea
addr16
cmp
enter
aaa
lret
in
sbb
out
cmpsb
aad
jb
addr16
cmp
pushf
repz
xchg
pop
xchg
fdivs
mov
cmp
mov
or
into
hlt
ljmp
hlt
mov
data16
andb
jl
xor
notb
push
pop
decl
fstpl
fld
cmc
pop
sbb
push
cmp
shll
add
mov
insl
and
outsb
out
or
mov
adc
rcl
enter
je
sbb
xlat
push
jne
mov
jo
into
mov
cmp
sbb
rclb
stos
pop
xor
cmp
jnp
jmp
jb
ja
jg
inc
lret
fisubrs
cld
jl
dec
outsl
scas
or
mov
pushf
imul
adc
dec
xor
sbb
inc
or
sub
shl
push
xchg
mov
je
dec
cmc
inc
push
adc
mov
scas
dec
dec
jnp
mov
pop
sbb
fs
push
aad
aas
cli
inc
out
roll
xor
xchg
mov
js
sub
aam
insb
push
ja
adc
and
xchg
sub
xorb
jle
popl
xchg
cmp
or
loop
jecxz
xchg
mov
les
sbbb
je
bound
or
mov
mov
and
mov
dec
stos
data16
pop
xor
xchg
xchg
inc
out
rclb
push
shl
inc
xchg
dec
rcll
mov
sbb
or
scas
in
arpl
insl
xor
mov
cmp
cmp
insb
fdivl
in
imul
lahf
aaa
cmc
mov
mov
icebp
insb
cmp
mov
icebp
cmp
shlb
rclb
dec
jmp
shlb
mov
mov
fisubl
and
push
dec
inc
push
ljmp
add
lret
push
or
xchg
mov
xchg
cwtl
xchg
add
mov
xchg
sub
insb
jnp
mov
ror
into
repnz
jmp
xchg
mov
outsl
jge
call
cmpsl
jno
pop
xlat
push
je
sarl
pop
and
jae
aam
dec
dec
and
jns
mov
lea
or
testb
in
aas
gs
cmc
call
pop
and
loopne
dec
push
inc
lods
inc
dec
xchg
add
fwait
shll
xor
ret
stc
pop
sbb
cmp
adc
pop
xchg
xchg
outsl
pop
aaa
mov
aaa
fisubs
stc
cwtl
mov
cmp
int3
and
lock
or
fcmovnb
fidivrl
cmp
sbb
adc
xor
idivb
popl
mov
test
loopne
adc
jg
jmp
cs
inc
iret
xchg
pop
mov
or
jecxz
pushf
mov
addr16
shll
stc
rcrb
dec
add
icebp
xchg
iret
add
or
add
pop
dec
repz
adcb
mov
push
jbe
mov
fisttpl
push
cmp
rcll
jge
imul
mov
push
pop
mov
adc
repnz
cld
rol
dec
push
cmp
ret
outsl
aaa
xor
sub
push
int3
adc
sbb
imul
mov
cli
push
and
push
adc
jns
push
incl
xchg
xlat
loop
mov
das
mov
or
aad
sbb
dec
adc
sub
adc
jge
outsb
imul
daa
pusha
fs
out
pop
and
fcoms
push
inc
xchg
mov
push
inc
jno
clc
jno
aaa
mov
jns
pop
sub
jl
iret
fldl
adc
mov
mov
andb
inc
repnz
pop
cmp
inc
push
pop
push
stos
das
dec
push
ret
and
loopne
call
dec
jb
stos
jb
xor
mov
nop
loope
or
or
or
hlt
mov
std
mov
adc
enter
iret
adc
fadds
and
mov
test
lods
ficoms
test
cld
popf
jp
mov
lret
cmp
mov
add
cmpb
je
pop
mov
nop
adc
inc
outsl
pop
inc
adc
dec
xor
enter
push
xchg
sub
xor
and
les
fcoms
push
sub
dec
jg
dec
rorb
outsb
dec
lea
inc
jns
mov
push
std
xchg
popa
mov
cmp
xchg
shrb
leave
bound
shrl
sub
je
jecxz
push
xor
ljmp
lods
repz
sti
pop
mov
inc
call
add
aad
xor
aam
ja
pop
outsl
int3
sbb
in
sub
cmovns
cmp
rcrb
mov
iret
push
and
mov
adc
aam
push
rol
add
push
sbb
adcb
or
daa
packuswb
pop
jnp
std
pop
push
je
lea
incb
mov
add
adc
outsl
dec
ljmp
mov
xor
sub
mov
and
and
push
dec
jbe
je
fidivrs
adc
cmpsb
xchg
ret
stos
arpl
jo
loope
sbb
xchg
lret
xchg
lock
dec
inc
in
jno
and
int
xor
mul
test
xchg
cmp
mov
mov
jbe
add
stos
xchg
xchg
lcall
push
pushw
nop
je
fs
test
dec
sub
jg
lods
je
dec
test
jmp
push
sub
in
xor
test
jno
mov
pushf
adc
push
push
push
pop
add
into
sbb
sub
mov
sub
inc
push
sub
dec
inc
cmp
jge
ljmp
lods
mov
jge
xor
popf
ss
leave
mov
dec
ret
jno
stos
xchg
repz
inc
lret
out
and
arpl
mov
daa
xlat
ds
sub
and
or
sbb
imul
jns
sub
xor
iret
out
in
lret
push
popf
jbe
and
lea
sbb
repz
sbb
popl
mov
add
pop
cli
and
sbb
sarl
adc
jecxz
mov
jle
iret
in
jns
push
outsb
pop
pop
fsts
dec
lret
jb
or
pop
inc
orl
pop
jmp
stos
push
sbb
jnp
sub
xchg
into
cmc
xchg
aaa
cltd
clc
xchg
cld
stos
scas
mov
add
stc
out
test
adc
in
or
hlt
dec
int3
cwtl
mov
out
mov
cmp
xlat
fucomi
or
xchg
pop
mov
lcall
pop
sub
xchg
inc
in
push
lcall
mov
jae
jl
int3
pop
mov
inc
ret
mov
fldl
add
mov
push
sub
pop
enter
sbb
mov
inc
jl
mov
jno
loope
test
ret
addl
push
jae
js
or
das
fsub
sbb
or
mov
andl
out
cmp
or
mov
push
lds
mov
sti
imul
mull
pop
mov
frstor
mov
and
inc
movsb
or
mov
push
dec
pop
stos
call
sbb
push
mov
ds
xor
imul
jp
fimuls
dec
js
pop
lods
add
inc
rorl
sub
push
ret
inc
loop
dec
cmp
insb
adc
mov
inc
cmovno
into
mov
stc
test
jbe
add
aaa
mov
dec
mov
sti
lcall
or
push
dec
and
popf
push
adc
mov
sub
in
mov
pusha
idivl
cli
insb
sub
inc
int3
mov
pop
out
stos
add
mov
into
out
lods
in
add
loop
fidivrs
rcr
jnp
push
les
sti
sub
in
cmpsl
popa
out
aam
in
lock
xchg
cmp
rorl
lock
pop
adc
mov
inc
insl
sbb
and
out
addr16
adc
rcr
dec
outsl
loop
add
movsb
add
mov
adc
stos
test
push
push
add
push
mov
ret
pop
mov
dec
leave
jmp
or
arpl
loop
mov
int
xchg
mov
dec
aad
fistl
out
ljmp
add
leave
or
cld
adc
test
fsubrp
rclb
insl
pop
std
jmp
add
adc
popf
les
adc
mov
fisubs
push
mov
or
movsl
lret
outsb
sarl
mov
js
adc
fstl
insl
mov
repnz
addl
or
loop
jno
data16
into
mov
dec
cmpsl
jmp
jno
add
jnp
mov
aaa
cmp
or
jne
push
sti
les
and
sub
jle
lret
and
addr16
and
add
xchg
or
pop
mov
push
cmp
or
fcmovnb
out
int3
hlt
xchg
lcall
pop
mov
loope
das
jno
or
xchg
loopne
fdivl
jecxz
mov
rcrl
jl
jecxz
dec
xchg
mov
imul
push
aad
rcrl
sub
inc
dec
out
push
rcl
inc
rcrb
cmp
incl
rcr
mov
sub
xchg
mov
popf
mov
rcrl
or
ljmp
inc
sbb
xchg
adcl
jg
leave
mov
lcall
jbe
xchg
push
xchg
cmpsb
and
test
lahf
std
addb
jb
scas
and
je
pop
jo
fcmovbe
xchg
psubusw
addr16
jb
sbb
stos
add
or
and
push
nop
pop
pop
mov
pop
push
cmp
cmp
daa
mov
fcomps
mov
cmpb
push
jp
out
and
fsubl
out
and
jecxz
scas
std
mov
mov
clc
inc
shl
or
in
stos
pusha
mov
jg
inc
or
aam
jle
jnp
add
jmp
outsb
int3
nop
add
scas
lcall
aad
mov
mov
outsb
out
out
lds
dec
lock
out
dec
ja
jle
loopne
dec
div
inc
or
out
popf
in
or
ss
pop
xor
push
bound
popa
mov
cmp
iret
cwtl
add
jmp
in
insb
sub
xor
xor
mov
adc
push
pop
repnz
mov
lcall
sbb
pop
stos
out
mov
inc
lock
daa
andb
fldlg2
xchg
outsb
push
lods
lea
shl
mov
jno
in
xchg
jmp
iret
test
pop
movb
xor
mov
test
pop
mov
imul
loope
sub
add
cmp
dec
pop
jmp
gs
adc
push
push
mov
push
out
mov
fwait
out
into
mov
lods
pop
adc
sub
js
fdivrp
rclb
jno
aaa
pop
shll
sahf
cmc
mov
sbb
inc
imulb
dec
clc
lds
aaa
dec
das
inc
sub
cmp
add
adc
jg
inc
adc
or
push
out
aam
mov
adc
js
adc
cmp
loop
scas
or
divb
ret
fsubs
ss
dec
or
leave
data16
std
out
add
push
xor
sbbb
loop
and
mov
jnp
push
push
sahf
lea
nop
inc
clc
mov
aad
xor
pop
add
outsl
jmp
cmc
mov
icebp
jmp
cmp
jmp
imul
pushl
aas
add
xchg
insl
shrl
jle
dec
cmp
add
pop
adc
jo
mov
lods
popa
outsb
or
xor
test
gs
popa
inc
xor
add
pop
stc
xchg
faddl
xchg
sub
iret
cmpsb
cli
mov
movsb
mov
les
scas
pop
pusha
push
jecxz
dec
sub
xor
out
pop
pop
mov
inc
cmp
sbb
jle
mov
scas
and
shl
xchg
fptan
in
or
jge
decl
dec
mov
mov
pop
push
das
mov
aad
dec
arpl
nop
and
cmp
sub
loope
testb
and
jnp
sub
mov
jp
mov
jl
xor
push
lret
push
shl
push
jecxz
rclb
lds
sti
mov
lea
or
jno
or
jbe
daa
stos
xchg
push
addb
outsb
or
mov
and
pop
or
fisttps
pop
sahf
dec
repnz
xor
mov
jae
lds
push
xchg
std
mov
iret
mov
inc
mov
sub
jmp
mov
dec
cmc
dec
add
mov
movsb
or
xor
idivb
and
enter
pop
xchg
xchg
pop
imul
push
cs
jge
outsb
dec
push
fmul
inc
xlat
mov
jb
nop
xchg
dec
in
xor
push
sti
es
cld
mov
stc
std
cmpsl
and
and
mov
int
cwtl
or
out
cltd
push
and
or
popf
add
mov
inc
push
aaa
std
dec
sbb
and
sahf
shrl
add
pop
add
int3
pop
xor
lretw
in
sbb
stc
andl
cmpsb
in
jne
mov
test
into
xor
xchg
jge
stos
call
push
jne
adc
test
bound
out
fadd
push
out
xchg
movsl
ja
loop
mov
xchg
mov
std
bound
ljmp
pop
rclb
sbb
mov
loop
push
xchg
or
jns
divl
rcrl
sub
jge
xchg
aad
lret
sbb
ret
leave
ja
fimull
lock
rcl
cmp
test
sbb
mov
dec
lahf
dec
mov
pop
add
fdiv
sub
mov
dec
inc
jbe
lret
inc
hlt
cmp
je
ds
sub
lods
cltd
push
mov
jae
push
cld
movsl
mov
mov
push
jp
je
ljmp
call
push
adc
packssdw
test
ss
push
mov
inc
sub
int3
mov
mov
lea
rorl
cmp
sbb
sub
inc
out
jnp
ds
gs
dec
sub
aad
xor
in
loop
addb
dec
adc
and
xchg
xor
mov
sub
xchg
inc
rcrb
mov
into
add
jb
mov
fdivp
repnz
test
sub
leave
js
adc
std
sub
pop
inc
cmp
in
jbe
sbb
push
lds
adc
adc
addr16
pop
je,pn
inc
imul
mov
rcrb
mov
ret
ficompl
cli
mov
mov
ljmp
aam
imul
mov
jp
add
sbb
push
movsb
sbb
and
fistps
and
xchg
xlat
push
iret
add
std
xchg
mov
popf
mov
loope
or
pop
jle
push
sbb
cld
jb
pop
mov
mov
mov
loope
int
adc
popa
cmpb
push
jecxz
mov
xchg
dec
nop
jmp
xchg
into
cld
fbstp
push
add
xlat
out
js
enter
leave
mov
test
sbb
sub
lods
stos
pop
push
jecxz
js
popa
mov
hlt
pop
out
pusha
cmp
xchg
sbb
mov
ss
xorl
cmpsl
add
add
inc
pop
add
repz
clc
mov
add
sub
mov
mov
sbb
jecxz
inc
adc
shlb
pop
dec
and
lcall
inc
dec
jno
lock
push
cmpsb
sar
pop
in
imul
push
sub
dec
push
sub
imul
xchg
jp
ja
mov
into
dec
mov
lods
and
xchg
xchg
jge
rol
nop
dec
mov
out
push
jmp
data16
mov
nop
cltd
iret
notl
adc
dec
ucomiss
mov
xchg
xchg
ror
push
jg
dec
mov
mov
notb
sub
or
jle
js
pop
cmp
pop
iret
sbb
icebp
in
xchg
jl
daa
inc
adc
jmp
mov
add
adc
out
mov
sahf
aad
lods
cmp
movsl
push
jbe
testl
mov
mov
call
inc
xor
push
mov
pop
xor
sbb
add
mov
push
mov
dec
mov
ja
inc
std
test
push
jp
inc
sub
xchg
sahf
mov
dec
mov
mov
dec
and
ret
or
push
cmpsb
into
incb
push
add
cli
les
repz
or
push
fidivrl
out
adc
movsb
and
inc
insb
push
lock
sbb
test
mov
cld
in
push
loope
ret
sbb
sub
xor
mov
push
lea
xor
das
jmp
dec
pop
scas
aam
add
clc
sub
mov
dec
ja
ljmp
pop
lahf
aaa
xor
mov
aaa
mov
jnp
into
in
jb
pop
add
jmp
push
outsl
cmp
insl
mov
cwtl
jg
fstpl
loopne
mov
hlt
sub
push
fidivrl
lods
mov
mov
rcrl
cmp
ds
jb
jne
and
push
test
or
jmp
push
inc
xchg
and
xor
inc
out
add
and
push
icebp
mov
and
cmp
sbb
push
jge
jb
ds
in
sub
inc
push
lahf
imulb
jae
mov
mov
jle
les
negb
pop
dec
xlat
mov
lcall
insb
sbb
daa
or
jo
cmp
sbbb
setge
xor
out
stc
push
icebp
in
shll
xchg
pushf
inc
mov
mov
adc
mov
cmpsl
xor
stc
push
jae
pop
lret
xchg
xchg
dec
sbb
out
ja
mov
rcll
jno
into
adc
xchg
pop
loop
inc
ja
gs
mov
pusha
das
inc
mov
cmpsl
mov
cmp
inc
repnz
jb
loope
dec
fucomi
or
jg
jmp
fists
mov
out
gs
pop
or
loop
test
loop
adcb
or
and
cmp
ficompl
push
adc
loope
mov
out
filds
int
add
inc
mov
lock
psubusb
lock
mov
mov
iret
lods
dec
test
ret
inc
popa
or
scas
enter
insl
inc
push
ficoms
stos
dec
xor
xchg
popa
popa
sub
push
imul
sub
pop
pop
jmp
repnz
push
inc
cmp
mov
cwtl
cmp
or
stc
push
xlat
pop
mov
mov
in
movsb
fldt
repz
adc
imul
cli
adc
leave
cmp
inc
outsl
jl
jmp
pop
lcall
fisubs
sarl
or
das
pop
scas
mov
adc
and
add
mov
adc
sarb
lock
sbb
mov
fisttpl
sahf
or
xchg
out
sub
mov
cmc
pop
iret
mov
ret
aaa
push
jge
lret
daa
jg
ficoms
je
and
add
mov
les
mov
mov
cmp
xor
xchg
adc
pop
cwtl
cmp
imul
test
rcrb
mov
cmpsb
push
sub
in
inc
das
mov
cs
jnp
test
jno
xchg
iret
mov
inc
sub
clc
lea
inc
lahf
xor
xorb
jns
das
repnz
sldt
std
fsubs
jp
push
lods
dec
fs
es
rcll
test
push
push
lods
push
or
mov
dec
pop
push
out
rol
sahf
or
fisubs
les
xor
add
jbe
repnz
and
lods
push
lret
add
and
mov
xor
or
leave
js
inc
xchg
jmp
stc
xchg
cmpsb
xor
shrb
test
jmp
das
cmp
jb
inc
pusha
jmp
pop
push
lcall
mov
mov
fidivrl
cmp
jns
test
lock
push
xchg
sbb
lods
hlt
inc
xor
dec
jle
adc
sbb
adc
push
shlb
pop
add
jns
dec
cmp
xchg
cld
push
fiadds
int3
mov
ss
and
pop
sahf
or
mov
dec
and
mov
dec
nop
ljmp
push
imul
arpl
lahf
fldcw
clc
or
sub
push
lods
enter
cmc
in
jno
xchg
loope
sub
test
dec
adc
test
cli
xchg
xchg
cmc
fs
sub
es
lods
daa
lcall
mov
pop
mov
sub
fisttpll
cmp
xlat
xchg
lods
clc
add
test
cmpsb
dec
mov
lea
mov
lock
mov
in
leave
idivl
stos
std
mov
push
dec
call
rcrl
sbb
into
cmp
xchg
and
sarl
add
adc
cmp
jmp
fdiv
xchg
mov
mov
push
rorl
lahf
sub
dec
sbb
int3
dec
or
xchg
popa
cmpsl
js
ret
test
lea
cmp
fcoml
imul
jae
ds
enter
mov
bound
hlt
lods
cmp
ss
shl
pop
cwtl
test
inc
cmpsb
and
stos
dec
loope
sbb
cld
push
testb
pusha
data16
xlat
movsl
mov
sub
not
nop
mov
lock
enter
int3
lcall
rorl
push
das
or
iret
cli
xor
push
xor
or
fstps
rcrl
dec
in
rcll
stc
lds
divb
ret
cwtl
stos
adc
xchg
dec
xor
cmp
shll
xchg
rcrb
dec
push
movsb
or
ljmp
jnp
nop
add
test
xor
or
push
sub
lret
mov
jo
add
or
add
test
leave
jo
cmp
mov
inc
adc
rcll
fdivs
call
out
stc
jno
stc
fdivp
xor
pop
xor
aas
ret
dec
mov
xorl
lea
jns
cwtl
inc
lahf
int
pop
inc
imul
int3
sahf
clc
sbb
std
leave
and
imull
imul
rorl
pop
xor
dec
cli
rol
enter
sub
pop
push
xor
xor
push
es
imul
jo
cmp
ror
or
xor
sub
ret
dec
pusha
jnp
or
test
or
pop
negl
inc
aam
daa
test
sti
dec
hlt
daa
jle
cltd
and
sti
std
mov
jmp
xor
cmp
xlat
sti
mov
in
jne
sbb
in
test
xchg
fbstp
cs
cld
rorb
arpl
les
fnstsw
insl
insl
inc
scas
or
mov
sbb
test
fs
scas
cltd
mov
mov
iret
push
xchg
fs
repz
mov
ljmp
pop
loopne
daa
push
jmp
icebp
shl
pop
daa
ja
jmp
les
outsb
pop
out
inc
ret
cltd
xor
jnp
sbb
pop
mov
rcl
cli
adc
cwtl
push
or
add
lock
sbb
lds
inc
add
inc
shrl
push
mov
popa
push
push
sahf
mov
mov
push
in
add
imul
push
rclw
lahf
or
cmpsl
ljmp
in
mov
sbb
jae
data16
cmp
out
push
out
aad
cli
int3
orb
mov
ret
insl
xchg
jg
jmp
sbbb
insb
xchg
and
hlt
loope
scas
addl
pushf
or
dec
aas
ds
mov
mov
sub
add
inc
addl
xchg
pop
les
sbb
fchs
test
es
mov
cmpsl
sbb
or
jnp
fldt
sub
cli
sub
xchg
jge
lods
cmc
sub
sbb
adc
add
mov
rorb
adc
xchg
fcmovne
mov
pop
sub
xchg
jae
fbld
lret
jge
gs
inc
mov
xchg
icebp
add
xor
mov
jmp
int
sbb
mov
mov
dec
mov
outsl
mov
push
outsw
mov
cltd
imul
mov
mov
pop
pop
adc
out
mov
insl
and
mov
shll
cli
enter
icebp
xchg
lods
cwtl
pop
das
mov
imul
pop
xchg
fstpt
in
mov
cmp
inc
movb
adc
mov
fstpt
outsl
stos
jo
pop
jmp
xchg
lea
sub
cmp
jp
jmp
pop
pop
lods
xor
lods
fs
ss
add
adc
lahf
dec
dec
or
xchg
mov
sub
push
xchg
xchg
xchg
clc
les
gs
cmp
movsb
dec
pusha
jbe
sub
pusha
insl
popf
incl
inc
loopne
out
incb
outsl
mov
mov
mov
mov
std
dec
testb
xchg
cmc
loopne
pop
lcall
loopne
xchg
sahf
jo
sbb
stc
xor
scas
xchg
lahf
das
mov
sub
inc
or
in
out
push
adc
cwtl
data16
sahf
push
in
pop
dec
jae
icebp
inc
push
das
test
xorl
orb
cmp
mov
jno
mov
xchg
push
stc
testl
insl
and
pop
outsl
into
xlat
xchg
cmpsb
icebp
sbb
insl
icebp
mov
leave
les
fs
dec
sahf
fcoms
and
enter
or
int
in
xchg
iret
pushf
jno
jge
outsb
insl
js
sub
cmc
and
mov
dec
ss
jo
shrl
lds
call
cmp
pop
ret
sub
ja
mov
add
nop
repz
lods
push
rcr
mov
sbb
add
cmp
xchg
push
sar
cli
or
add
sti
inc
mov
mov
mov
pop
mov
pop
ret
imul
neg
mov
bound
shrl
out
dec
int3
and
pop
loop
gs
jnp
push
lods
imul
addr16
fwait
ret
aaa
fistps
dec
lcall
pop
cmpl
add
inc
push
popa
mov
cmp
xor
lahf
pusha
rcl
xchg
sub
shrl
imul
sub
adc
js
sahf
dec
dec
mov
ret
adc
sub
arpl
mov
or
fidivrl
shr
sbb
xchg
repz
xchg
out
adc
adc
stc
jl
add
pause
cwtl
push
dec
push
jo
lahf
mov
dec
fdivp
out
xor
mov
out
daa
in
iret
pcmpeqw
lret
or
add
stc
mov
fstpl
pushl
daa
flds
test
jno
rolb
repz
mov
test
popf
push
iret
nop
movsl
xchg
push
push
mov
sub
xor
push
sub
mov
jl
pushf
pushf
xchg
add
mov
js
push
push
scas
inc
cmp
or
jo
xchg
pop
and
cmp
negl
in
scas
cmp
sub
rol
shrb
movsl
pusha
pop
andb
or
cmp
fucomi
icebp
roll
aad
push
or
mov
divb
out
and
lds
repz
sub
cmpsl
xchg
loop
imulb
adc
mov
fbld
dec
in
in
pop
nop
mov
lea
ja
mov
lea
mov
popa
xor
ljmp
xor
sbb
cmp
iret
andb
push
cmp
fcoms
das
dec
mov
sbb
aam
sub
sti
mov
stc
cmp
imul
movsb
jmp
pop
mov
inc
sbb
pop
mov
lcall
lea
add
popa
and
sbb
fwait
loope
jo,pt
bound
cmp
repz
inc
mov
or
ret
mov
push
pop
js
or
in
and
jo
fsubrp
inc
mov
inc
sub
mov
fsub
fwait
xchg
je
jb
or
aad
out
pop
push
mov
popf
rcrb
stos
add
xchg
add
stos
fistps
stc
test
and
cmc
outsl
sub
daa
or
ljmp
imul
jge
cmp
lret
sbb
xchg
push
rclb
add
push
dec
sti
mov
dec
aam
push
pop
or
jp
stc
dec
arpl
jbe
call
inc
cli
pop
add
xchg
mov
mov
pop
loop
ja
add
jmp
scas
jnp
popf
jle
xor
mov
xor
inc
mov
femms
lods
xchg
js
insl
insl
xor
leave
scas
fdivrs
jns
ljmp
out
push
adc
loope
lret
stos
jo
shll
adc
loopne
test
or
cwtl
xchg
hlt
dec
or
or
in
ds
popf
mov
lahf
sbb
cwtl
mov
inc
pop
xchg
test
aad
cld
call
lahf
mov
jbe
mulb
xchg
dec
cltd
aam
xchg
call
sbb
push
push
addr16
or
gs
cmp
imul
enter
xor
mov
sub
test
mov
push
inc
push
add
cmp
cli
inc
scas
fnstcw
sbb
iret
dec
push
pop
ds
rorl
idivb
loopne
sbb
fstl
mov
xchg
mov
les
arpl
das
lds
push
popa
sbb
cmpsl
hlt
sbb
es
jbe
movsb
lea
imul
push
iret
pop
cmp
pop
stos
mov
xor
dec
pop
xchg
fsubs
repz
inc
add
mov
cmp
ficoms
cli
mov
aas
sub
push
js
xor
popa
stos
xor
sahf
mov
popf
xor
sbb
rorb
enter
mov
push
ret
outsl
dec
sbb
hlt
push
jmp
mov
cmp
outsl
mov
outsl
xchg
out
int3
loopne
xor
lods
out
jnp
push
push
ret
push
xor
sub
popf
or
xlat
xchg
daa
add
fwait
pop
push
inc
inc
sarb
inc
jl
xor
mov
adc
outsl
out
cmpsb
incb
xchg
cmp
mov
dec
cmp
xor
add
or
lea
xlat
insl
subb
clc
sahf
adcb
stos
cmp
sbbl
mov
ret
push
lds
call
cli
mov
push
fldl
mov
jne
add
jl
cld
add
pop
call
test
hlt
adcl
or
mov
insl
xchg
jp
sbb
mov
dec
sbb
pop
jno
sbb
mov
mov
fildll
in
dec
inc
and
mov
ret
fisubrl
xchg
dec
outsb
pop
cli
push
and
jg
pop
mov
jecxz
out
add
fiaddl
xchg
mov
xchg
pop
fadd
das
sub
jne
clc
outsb
add
pop
push
pushf
dec
mov
cmc
mov
mov
lock
mov
mov
cld
push
push
push
enter
inc
sbb
idivl
addb
sub
pop
xor
xlat
lret
inc
pop
push
or
jbe
sbb
xor
sbb
cltd
fcoml
and
orl
fsubl
mov
mov
mov
push
push
out
push
popf
or
add
mov
shr
xchg
xor
pop
lods
leave
add
mov
int
les
shll
dec
xlat
stos
sub
imul
jge
faddl
cwtl
pushf
stc
mov
lock
ret
mov
sbb
cmp
mov
cld
pop
popa
pop
lea
jecxz
and
or
xchg
je
jecxz
repnz
push
pop
insb
adc
inc
popa
pop
pushf
data16
lea
adc
loopne
jo
mov
xchg
shr
repnz
mov
aas
int3
pusha
and
sti
add
test
jno
or
dec
loopne
cmp
xchg
enter
frstor
pop
xlat
inc
dec
popf
dec
out
mov
sub
pushf
push
aad
mov
lds
ss
adc
scas
adc
push
cld
shlb
xchg
and
add
mov
fwait
inc
mov
leave
push
mov
sub
mov
sbb
jns
jb
and
push
lret
adc
push
lds
jp
jp
pop
test
push
movsl
mov
push
sub
xchg
xor
insl
add
pusha
add
ret
divl
adc
mov
xor
daa
pop
insb
daa
dec
xchg
fcmovu
ret
xor
movsb
sub
fs
fiadds
shlb
xchg
xchg
xor
dec
out
or
rolb
enter
es
cmp
xchg
daa
jno
stc
or
shlb
aam
push
mov
inc
pop
pop
cmc
push
mov
scas
mov
je
es
dec
arpl
lods
les
adc
push
mov
enter
jle
loope
fwait
lods
outsb
mov
imul
sbb
inc
add
int
push
out
stc
imul
mov
out
loope
leave
pop
incl
inc
fwait
mov
scas
sub
mov
insl
jno
sbb
push
pop
sahf
inc
or
mov
and
pop
stos
mov
in
enter
add
cmp
or
lds
mov
lods
push
jle
cmp
int3
notl
jge
test
inc
js
xchg
adc
fists
jns
insl
das
ja
ss
push
cmp
jns
and
idivl
dec
lea
adc
lea
inc
pop
xchg
sbb
mov
mov
fmull
movsb
popa
dec
cmpl
adc
mov
movl
inc
add
xor
mov
jb
clc
and
std
mov
js
fwait
pop
cs
inc
std
jecxz
ret
lahf
insl
stc
cmp
jg
jge
movsb
into
lea
andl
in
in
orl
jp
mov
loop
cltd
and
gs
aam
push
push
ret
xchg
negl
adc
jne
cmp
outsb
cmp
fadd
cmp
test
into
and
jle
push
test
and
pop
scas
mov
sbb
inc
and
or
imul
inc
stos
add
test
dec
xor
call
pop
adc
lods
aam
add
jbe
xor
insl
push
dec
in
fidivrs
inc
call
dec
sbb
jnp
roll
pop
aam
out
mov
or
jns
fiadds
xchg
in
mov
inc
or
fcomps
jns
insb
mov
gs
arpl
xchg
lock
imul
xchg
xchg
cwtl
inc
push
xor
jb
xchg
fcoml
cs
jns
jg
add
push
pop
mov
lds
nop
mov
out
pop
add
jle
pop
or
dec
cmp
inc
mov
jne
cmp
insb
pop
sbb
xchg
mov
test
mov
sub
gs
add
negb
push
xchg
iret
cmp
mov
lret
push
pushf
dec
inc
sahf
push
fcmovb
push
jb
mov
enter
push
mov
xchg
jmp
add
nop
pop
adc
rcll
mov
sarl
pop
push
pusha
int
jl
sub
je
push
mov
cli
sub
push
addr16
jge
xchg
sub
jae
in
daa
dec
cmp
inc
cmp
popa
inc
mov
xchg
jns
roll
inc
cmp
and
insb
xor
mov
sbb
fxch
mov
movsl
lret
pop
pop
xor
mov
push
sub
sysexit
iret
push
sbbb
adc
xor
movsl
jo
mov
mov
pop
xor
push
filds
sahf
adc
prefetchwt1
or
inc
mov
mov
loopne
push
add
add
movsl
aad
mov
mov
inc
inc
mov
test
mov
addr16
adc
jp
xchg
mov
out
ljmp
adc
inc
das
xchg
je
jb
jle
mov
ret
cmp
es
pop
outsl
cmpxchg
xchg
dec
outsb
cltd
xor
xchg
icebp
xor
ss
ljmp
rcrb
cmp
add
jl
adc
cmp
mov
and
insb
fldl
xor
xchg
test
ror
sub
outsl
jmp
xchg
movsl
cmp
dec
jnp
es
adc
pop
shll
jae
movsb
sub
sbb
mov
popf
cwtl
je
mov
pop
packuswb
push
and
mov
mov
das
outsl
sahf
int3
lret
xor
call
xchg
xchg
jns
or
dec
xor
sbb
push
sub
push
stos
jns
or
cmc
mov
js
std
adc
mov
add
mov
sbb
ds
jbe
jecxz
cmp
mov
cmp
inc
mov
mov
pop
lcall
int3
lahf
ja
xchg
or
mov
inc
outsl
push
or
rcrb
sahf
das
pop
xchg
loopne
sub
sbb
push
jb
push
addr16
out
push
fs
sbb
add
and
lea
lret
pop
jne
mov
leave
mov
cwtl
push
push
loop
fiaddl
add
movsl
clc
in
pop
adc
movsb
xchg
xchg
xchg
jns
divb
sbb
cmpxchg
mov
ss
movsb
movsb
stos
lret
and
pop
les
arpl
inc
push
cltd
and
insb
popa
sub
stos
fimull
jae
add
rorl
lea
stos
out
mov
inc
enter
push
adc
out
sub
in
lret
mov
aam
pop
popf
shrb
out
movntps
out
add
pinsrw
mov
insb
subb
shll
es
repnz
addr16
shll
jbe
adc
aaa
je
repz
dec
inc
mov
mov
xor
hlt
ret
lret
insl
and
lret
idivl
push
and
push
lcall
inc
in
sub
adc
fisttpl
loope
pop
mov
loopne
add
jbe
add
xlat
sub
pop
jmp
pop
push
daa
add
dec
add
jle
cmp
popf
mov
adc
adc
das
jb
cmp
jae
dec
shrl
cmpsb
mov
push
addr16
jns
xlat
fidivl
jbe
jns
into
mov
repnz
imul
inc
outsl
jge
and
hlt
mov
aas
mov
inc
dec
and
mulb
cltd
dec
fprem
aam
bnd
xor
leave
mov
jbe
jle
xor
mov
decb
test
mov
pusha
pop
addr16
xchg
hlt
cwtl
repnz
inc
repnz
push
subb
loopne
jle
pop
jl
inc
ds
inc
add
test
or
es
dec
movsb
in
xchg
jg
loop
adc
outsb
aaa
mov
cmpsb
jb
cld
dec
pop
movsl
clc
in
ss
vpmacsswd
pop
ja
ss
movsl
cmp
push
stc
xchg
cli
popf
dec
inc
fmuls
outsb
lcall
xchg
pop
jno
push
pop
push
inc
push
sbb
rcl
push
movsb
js
sbb
outsb
pushf
inc
xchg
addr16
dec
daa
insl
add
subl
inc
std
inc
adc
cmpsl
mov
sahf
imul
sbb
neg
test
sub
fcomip
imul
insl
outsb
lret
rcll
cmp
lock
xchg
push
push
mov
mov
out
hlt
negl
fmul
in
jns
mov
hlt
out
xor
sub
ljmp
fwait
jns
pop
pusha
stc
arpl
cmp
mov
mov
idivl
add
cmp
cmpsb
pop
mov
es
rcrb
das
dec
data16
dec
movsl
shrl
sub
fwait
movd
les
lcall
loope
adc
or
xchg
inc
sbb
xor
mov
cmpsb
push
mov
dec
dec
sub
and
xchg
sub
clc
les
ja
int
push
test
jno
cmpsb
shrl
cmp
jo
mov
into
push
mov
je
popa
push
ret
inc
mov
cltd
frstor
and
jl
movsl
sti
mov
vpmulhw
inc
cmp
icebp
cwtl
mov
call
dec
xchg
cmpsb
xor
or
cmp
cmp
loope
aaa
out
mov
inc
inc
mov
movsl
fisubs
pop
in
inc
repnz
sub
sub
lret
pop
aas
adc
sahf
neg
cltd
xchg
inc
fsts
mov
fs
stc
scas
xor
loop
sbb
cld
xchg
add
add
mov
push
pusha
mov
jl
call
or
sbb
cwtl
sahf
mov
ud0
ljmp
testb
sti
arpl
and
cld
cmc
cmp
and
loop
adc
out
pop
xor
icebp
call
xor
inc
andps
mov
adc
testb
nop
cmp
inc
jb
mov
add
cmpsb
lods
sbb
movsl
out
data16
sbb
test
test
sahf
mulb
push
mov
add
xor
mov
ss
sbb
push
sbb
xor
add
jns
cmp
xchg
subl
repnz
mov
xchg
mov
popa
push
push
pop
arpl
fdivs
or
pop
repnz
sbb
cmc
add
popf
ficoml
in
jns
ljmp
and
sbb
cmp
and
addr16
or
icebp
shl
and
push
push
sbb
pop
repz
sub
pushf
dec
cmp
and
hlt
popa
jmp
lcall
xlat
outsl
fnstenv
and
cli
insl
sub
in
jne
pop
repz
mov
loop
and
push
lahf
into
repz
cmc
push
mov
jp
push
shr
loop
test
push
xlat
or
mov
mov
rcll
adc
and
or
jge
data16
push
push
adc
repz
dec
clc
dec
mov
insl
shlb
xor
xchg
sub
or
das
cld
add
push
jns
xchg
lret
into
inc
xor
mov
loop
dec
and
dec
fs
mov
xor
xor
pop
and
insl
or
adc
sahf
cmp
ja
xchg
dec
ds
pushl
inc
and
repnz
aas
mov
xor
adc
mov
xchg
rcr
add
xor
xor
dec
xor
dec
call
ret
std
ja
sub
mov
or
push
mov
cld
test
imul
adc
and
sub
data16
pop
dec
popa
sti
cmp
shrb
imull
in
ret
incb
sub
scas
mov
ss
sub
inc
iret
sti
rcrl
dec
xchg
stos
clc
in
sahf
idiv
jge
loope
lods
lods
scas
jmp
push
aad
ja
sahf
cmp
sbb
ds
xor
fiaddl
aaa
fiaddl
rol
dec
jg
or
adc
or
mov
stc
pop
add
and
call
repz
dec
shrb
bound
test
push
mov
mov
sbb
inc
push
scas
adc
dec
xchg
les
popf
or
lock
rorb
jg
subl
sub
insl
addr16
push
loopne
lods
inc
mov
lret
and
int3
enter
testb
and
pop
in
aad
pop
mov
cmp
call
jmp
xchg
loopne
ficoms
ret
mov
sub
call
addr16
sbb
pop
pushf
ficompl
lods
outsl
sahf
aam
out
jb
cmpsb
in
push
pop
ljmp
fsubrl
add
xor
push
fs
add
pop
ret
xorb
rcrl
lods
push
notb
mov
cltd
xor
dec
iret
jg
divl
pop
sub
and
push
mov
fwait
sub
lahf
jg
test
dec
sbb
sub
xlat
xchg
mov
push
popf
and
movsb
fiadds
xchg
daa
out
loopew
jne
mov
mov
lret
repz
cwtl
dec
inc
mov
dec
mov
rclb
push
jbe
xchg
pmaddwd
filds
mov
jecxz
enter
cli
xchg
jo
lea
or
nop
ds
idivb
rcrl
mov
push
sbb
outsb
dec
jns
cmpsl
cltd
in
in
fdivrl
cli
add
ss
aas
mov
dec
std
add
sbbb
cmpsb
imul
cwtl
inc
stos
dec
cmp
cmp
ret
mov
push
js
sbb
sub
dec
sbb
add
xor
jno
push
inc
mov
push
lret
in
push
out
xchg
add
icebp
test
dec
pop
jle
cmpsl
sub
jle
fcomi
add
stos
push
push
mov
test
rolb
mov
fstl
mov
lret
je
or
imul
xchg
push
daa
cmc
jo
stos
lret
sub
in
xor
fldl2e
add
mov
cwtl
mov
nop
ljmp
mov
hlt
nop
and
sub
icebp
ret
inc
cmpsb
in
or
fwait
outsb
aaa
lds
xor
jbe
sub
loopne
scas
divb
push
lahf
aas
inc
jmp
lcall
xor
subb
dec
inc
and
jecxz
sub
in
sub
or
repnz
or
and
cltd
hlt
pop
mov
jnp
xlat
lods
decb
pop
xchg
xor
mov
push
push
xchg
outsl
dec
loopne
jb
inc
cmc
imul
jmp
xchg
and
add
mov
jbe
test
int3
cmp
into
sbb
dec
push
mov
or
test
push
ss
mov
in
jae
inc
shl
arpl
int
xlat
loope
xchg
adc
test
fsubrl
sbb
mov
jge
hlt
test
scas
ss
repnz
push
push
push
rorb
and
sbb
push
stc
push
jno
mov
stc
sbb
in
fstpl
sarl
les
cmpsb
cmp
sbb
adc
inc
ljmp
sub
sub
pushf
mov
inc
mov
or
sub
adc
loop,pn
es
dec
sbb
or
mov
add
sbb
push
jb
shrb
add
jp
aam
jnp
sahf
or
or
pushf
je
cmp
mov
insb
sbb
fadds
aas
out
inc
sbb
ss
or
xor
insl
cmpsb
mov
cmp
loop
adc
clc
or
mov
loope
aad
mov
inc
por
jnp
iret
ret
push
fimull
cmpl
rep
mov
add
jnp
int
lret
sub
mov
mov
fs
adc
and
sahf
out
arpl
mov
imul
push
add
in
sbb
push
cli
inc
sahf
xlat
xchg
lds
push
push
cmp
aas
movsb
mov
arpl
dec
xchg
and
es
cli
dec
mov
xchg
xor
mov
xchg
cmpsl
gs
mov
and
mov
sub
clc
in
jno
leave
out
scas
fcmovne
lea
fidivs
test
inc
cwtl
data16
test
mov
jl
in
sbb
jmp
sub
push
int3
call
mov
outsb
insl
ficoms
mov
push
pop
fiaddl
dec
mov
movsb
insl
in
cmp
add
sub
dec
dec
mov
rol
mov
push
mov
loope
jae
sub
pusha
inc
in
and
arpl
movaps
jl
pop
cld
aas
ljmp
repz
insb
shlb
jae
xor
ljmp
xchg
mov
push
flds
fs
or
push
fcomps
jae
test
and
rol
cmpb
int
loop
sahf
and
xchg
nop
sub
repz
sti
loop
and
shrl
xchg
mov
pop
scas
scas
push
push
cmp
dec
push
push
and
sub
pushf
cmc
scas
lods
rol
push
repnz
mov
cmp
mov
insb
fimuls
fidivs
std
mov
stos
inc
mov
dec
pop
rcll
xchg
aad
jnp
and
xor
mov
xor
xchg
sbb
outsl
sub
cmpsl
cmp
and
or
pop
mov
sbb
xchg
mov
xchg
push
dec
test
cmpsb
arpl
or
fld
pusha
test
and
aaa
hlt
ja
cmc
push
outsl
jg
clc
dec
xchg
fs
mov
pop
iret
les
int
push
lock
adc
movsl
in
and
jg
push
sub
je
mov
bound
fnstcw
add
call
ljmp
pop
cmp
in
inc
aad
add
shll
ljmp
scas
mov
data16
shrl
mov
aaa
jo
addr16
test
dec
popa
fsubrl
or
lea
loopne
adc
popa
into
loop
rcr
pop
movsl
push
mov
je
cmp
sbb
xorb
inc
jge
pop
enter
push
mov
pop
or
mov
lcall
add
xor
cli
jb
cltd
mov
les
jo
and
shrb
lods
jbe
jb
sti
cmp
je
repnz
sbb
repz
cmp
adc
les
push
mov
les
cmp
push
fisubrs
cmp
lods
cmpsb
pop
movsl
scas
cmpsb
xchg
scas
mov
outsb
push
mov
jbe
or
cmc
or
icebp
xorb
or
push
adc
loopne
loope
mov
ret
pop
cmp
in
mov
mov
cmpsl
xlat
scas
xchg
loope
push
mov
adc
les
je
cld
daa
sti
cwtl
mov
test
mov
sbb
mov
icebp
mov
mov
mov
pop
loop
push
repnz
sbb
cltd
mov
pop
jl
imul
mov
dec
or
push
cmpsl
add
addb
sbb
scas
scas
out
mov
push
es
and
lahf
cmp
aas
inc
cmpl
cmp
push
and
pop
fistpl
jo
mov
push
ds
mov
stos
ss
push
les
shrb
cltd
lock
pop
lods
mov
dec
xor
imul
mov
push
jecxz
add
dec
xor
sbbb
sub
jne
sbb
sub
daa
fmull
shll
push
ffreep
mov
std
arpl
lea
out
int3
leave
fs
aam
pop
mov
clc
mov
inc
in
jae
and
mov
sub
ret
pop
cmp
aam
je
outsl
jle
sahf
jne
stos
sub
mov
adc
out
roll
ja
daa
mov
inc
call
mov
inc
outsl
pop
lods
pop
cltd
push
pushf
dec
addb
lret
fnsave
mov
xchg
ret
mov
mov
fnsave
out
adc
and
jp
and
mov
ss
sahf
mov
aam
rclb
sub
fisttps
data16
xchg
addr16
sbb
pop
cmpb
adc
icebp
call
clc
sub
or
fstpt
sti
push
mov
cli
cmp
jmp
or
scas
rolb
mov
je
in
mov
test
mov
xchg
pop
pop
and
int3
push
and
xchg
mov
adc
or
adc
add
jge
loope
call
mov
call
sbb
mov
push
in
test
mov
jne
mov
mov
fildll
rcl
push
sbb
push
stos
lds
xchg
adc
mov
out
push
adc
in
cmc
inc
rorb
push
test
insl
pusha
int3
andb
hlt
adc
pop
scas
test
out
mov
push
aas
les
dec
stos
std
into
cmp
stos
push
ds
inc
out
pop
fiadds
xor
xor
sbb
test
mov
cs
imul
and
cmpsl
and
ret
xchg
scas
dec
xor
dec
mov
xchg
dec
fdivrs
lea
movsl
mov
sbb
dec
cmp
adc
cmp
es
cli
or
std
sub
adc
jnp
sbb
mov
sbb
xchg
sub
and
ja
mov
roll
push
cmp
cmc
ficomps
cmp
inc
insl
ljmp
clc
pop
loopne
stos
sub
je
xchg
shlb
aam
pop
pushf
xchg
lods
aas
or
imul
mov
jo
mov
icebp
mov
mov
lret
or
out
subb
sub
jae
push
lods
test
fwait
push
enter
and
sub
pop
lods
pop
xor
repz
mov
inc
shlb
push
or
cld
rcr
push
cli
nop
mov
les
jp
mov
loope
dec
jnp
push
push
pop
adc
adc
jle
lret
mov
push
inc
loope
and
mov
call
push
mov
pop
sbb
cld
mov
mov
adc
add
call
int3
aas
inc
lock
mov
das
xchg
push
inc
lds
inc
mov
rclb
icebp
mov
scas
push
je
addl
mov
jno
sub
int
leave
inc
int
xor
jnp
ds
mov
dec
movb
hlt
fsubrs
imul
out
imul
mov
add
es
rorl
jecxz
pusha
push
xlat
lret
mov
pop
mov
pushf
jp
push
xchg
pop
mov
iret
repz
mov
cmp
mov
or
cs
in
dec
inc
ret
push
jbe
push
loope
and
sbb
jnp
stos
repz
jmp
out
loopne
and
es
xchg
and
sbb
fsubrs
stc
in
mov
cmp
push
adc
mov
adc
mov
icebp
notl
out
stos
adc
xorb
sbb
rorl
in
jg
inc
sbb
jmp
mov
and
dec
out
xor
addr16
jno
sub
jbe
pop
daa
hlt
xor
xchg
imul
jbe
fisubl
push
out
push
push
orb
mov
mov
push
in
xchg
cmp
mov
push
popf
add
mov
xchg
dec
jp
xchg
or
xchg
xchg
fwait
jne
hlt
cmpsl
int3
aad
cli
stos
mov
add
sub
inc
mov
js
push
pop
and
jp
adc
movb
and
push
cmpb
push
adc
push
jnp
mov
pushf
mov
fcmovnu
notl
loopne
sbb
or
out
sti
mov
aaa
iret
popf
out
mov
out
pushf
int3
push
test
out
jnp
aaa
or
mov
femms
outsl
lret
std
addr16
lcall
pushf
mov
cmp
das
push
dec
add
rol
xor
add
fs
cmpsb
fwait
cmpsl
dec
imul
sbbb
testl
rcll
mov
jmp
sub
mov
mov
xchg
pop
sarb
ret
dec
fnstcw
ret
ds
adc
adc
es
jnp
ret
mov
cmp
xchg
int3
cwtl
or
cmpb
jmp
push
or
add
les
fcomps
push
outsl
pop
add
add
cwtl
insl
ret
cwtl
test
stos
shll
push
push
xchg
cmp
or
repz
dec
lret
cmp
ror
sub
arpl
out
jecxz
mov
mov
test
cmp
sbb
ds
dec
rcll
cmp
jo
imul
sarl
mov
rorl
push
mov
gs
rolb
pop
lods
loopne
lahf
mov
and
inc
lock
aaa
imul
add
xchg
shll
pop
inc
call
cmp
cmp
iret
sbb
fiadds
pop
add
jo
leave
jns
fidivl
jecxz
andb
inc
pop
pop
adc
jno
out
adc
mov
outsl
mov
cmpsb
sub
dec
dec
xchg
or
mov
outsb
in
adc
pop
jb
xorl
addr16
ljmp
sbb
loop
lret
fsin
and
cmp
and
mov
imul
bound
aad
insl
push
cmc
add
pop
gs
mov
cmp
in
std
mov
add
add
dec
xor
pop
pop
das
mov
sahf
stc
imul
add
std
push
notb
mov
xchg
std
adc
mov
lcall
jno
lods
insb
clc
cmc
push
mov
repz
xor
loop
pop
daa
pop
cli
xchg
cmpsb
mov
ljmp
inc
sbb
inc
stos
push
lods
push
out
aas
inc
cli
mov
sub
leave
jno
push
mov
cwtl
xchg
adc
mov
sarb
lahf
shlb
outsl
enter
sub
mov
nop
or
jmp
testl
mov
mov
xchg
andl
loope
fldz
fildl
push
je
leave
sbb
dec
cmp
lea
loop
cmp
jecxz
iret
jo
add
andl
push
or
and
jo
divl
push
and
sti
adc
outsb
arpl
dec
adc
push
sbb
cmpl
xchg
xor
dec
fadds
stos
test
lahf
mov
jno
add
fnstenv
iret
dec
or
sahf
lock
xchg
inc
mov
fucomi
imul
clc
test
xor
pop
call
mov
lds
repnz
loopne
mov
aaa
cmp
sub
or
or
push
jge
in
and
pop
aam
sarl
lea
xchg
lahf
dec
lock
and
jge
js
pop
stos
or
mov
cli
jae
leave
into
fldenv
in
repnz
ja
loop
push
sbb
sub
call
jae
daa
loop
lahf
scas
outsb
add
pop
test
mov
rcrl
das
mov
xlat
mov
add
jp
cmp
fldl2e
divb
test
fisubrs
jno
dec
adc
mov
or
pop
xchg
fsubrs
pop
cmp
and
in
lcall
imul
insl
and
out
sarb
mov
into
mov
xor
arpl
jo
cmp
bound
scas
pop
xor
dec
hlt
call
jne
insb
push
mov
cli
jbe
shrb
test
jmp
out
shrl
push
repz
int3
push
daa
loope
jg
push
or
lret
pop
mov
lahf
test
and
dec
xor
test
dec
xchg
nop
pop
adc
testl
xor
cmc
sub
int3
xlat
push
dec
sbb
rclb
lcall
jmp
aad
mov
push
ds
cltd
xor
or
ss
fdivs
mov
aas
or
in
repnz
jbe
xchg
cmc
jns
sbb
or
dec
ds
mov
int
les
iret
popf
cmp
pop
push
leave
clts
js
test
and
xchg
sarb
repz
xchg
mov
sarb
sub
sbb
jns
add
push
cmpsl
dec
and
xchg
jmp
or
mov
xchg
jle
mov
repz
xchg
mov
xchg
pop
icebp
jo
stos
lret
das
fcmove
push
cs
mov
out
mov
and
icebp
scas
mov
xchg
ficompl
pop
jnp
mov
pop
stos
and
mov
or
incl
rclb
cld
iret
xchg
cmpsb
xlat
or
fistps
cli
pop
add
pop
loope
std
mov
jnp
pop
add
lret
mov
lea
sbb
push
sbb
adc
arpl
xor
repz
hlt
pop
daa
sti
sbb
jo,pn
sarb
stos
lcall
dec
sub
cmp
lcall
xchg
mov
xchg
dec
sbbb
jge
push
out
dec
out
jg
jnp
or
sbb
sub
in
and
pop
xor
jbe
pop
inc
push
imul
rol
mov
push
inc
mov
jp
cs
cwtl
push
adc
movsb
nop
add
popf
popa
xchg
mov
and
gs
push
mov
sub
outsl
pop
sub
sub
sub
xor
cld
in
push
push
sbb
fcoms
xor
or
adc
jp
and
and
cmpsb
cmp
mov
cltd
inc
cmp
xchg
sahf
jge
or
xorl
ljmp
fisubl
mov
adcl
cmp
sub
jmp
mov
fstps
add
mov
mov
popf
aaa
xchg
adc
push
lds
jnp
adc
xchg
mov
inc
je
push
in
ds
stc
lcall
dec
mov
adc
mov
shr
xor
lock
mov
stos
and
xorl
jnp
js
decb
push
ljmp
jp
jle
cli
fcoml
daa
xchg
leave
sub
mov
lods
negb
fs
sbb
movsl
leave
test
sbb
xchg
popf
sbbl
inc
outsl
test
cld
inc
jmp
mov
js
test
out
jae
inc
push
mov
and
repnz
lcall
sbb
mov
inc
cmpsl
adc
cltd
fistpll
pop
cmp
sbb
dec
insb
push
addb
popf
jbe
cmp
adc
pop
mov
pop
int3
jecxz
loop
jnp
pushf
xchg
jle
add
decb
stos
fisttpll
inc
push
mov
aas
cmp
in
or
mov
inc
cs
jle
fs
sqrtps
sti
mov
popf
cmp
in
sub
xchg
nop
test
call
push
jp
inc
pop
xor
add
enter
mov
adc
push
dec
adc
xor
or
jle
push
fstpl
mov
push
cmp
rcr
xor
push
pop
out
dec
push
gs
hlt
sub
mov
fadd
das
int3
mov
mov
aam
call
xor
into
arpl
push
pop
int3
sub
xor
mov
int
fisttps
bound
xchg
test
fildll
lcall
ss
mov
lods
lock
cltd
xchg
test
sbb
sbb
rcrl
test
test
adc
or
pop
ljmp
mov
rorb
lods
pop
fdivr
dec
ret
orb
sbb
clc
mov
pop
and
or
mov
or
pop
pop
and
sub
jae
test
out
icebp
push
pop
xchg
xor
push
xor
cld
rcrb
push
out
jecxz
xchg
lcall
loop
js
int3
mov
insl
int
xorb
and
mov
mov
sub
jg
out
sub
cmpsl
mov
mov
inc
outsl
add
dec
or
rol
dec
movsb
repz
testb
imul
popf
ss
lds
add
mov
or
push
dec
mov
clc
dec
jecxz
sub
pop
bound
xor
cmp
jno
into
leave
leave
xor
and
popa
lock
cmp
mov
in
and
arpl
jnp
sbb
mov
pop
popf
or
loopne
std
in
cmp
inc
imul
inc
sbb
dec
scas
out
shll
cltd
out
mov
cmp
clc
jp
hlt
mov
dec
mov
mov
ss
jae
cmc
fbstp
and
mov
and
lahf
and
fldt
mov
popa
mov
mov
pop
mov
jp
xor
std
pusha
xchg
imul
lahf
cwtl
pop
lahf
js
dec
push
stos
adc
pop
pop
dec
pop
mov
and
mov
gs
push
mov
lret
add
out
cld
push
je
repz
xor
sub
adc
or
mov
inc
sbb
dec
testl
jge
push
insb
hlt
icebp
xlat
fidivrl
daa
add
idiv
popa
mov
fmull
push
adc
mov
push
sahf
mov
out
je
iret
orl
ja
push
ret
xchg
xchg
inc
mov
jnp
mov
in
push
inc
roll
and
pop
mov
negb
inc
negl
lcall
jo
mov
call
lock
or
adc
and
mov
mov
lahf
cli
iret
nop
ss
ret
mov
in
out
out
or
test
je
sbb
adc
lods
lret
jmp
es
xchg
or
add
or
xchg
jae
jns
adc
loop
push
int
loop
dec
xor
ljmp
xchg
lcall
mov
jo
xchg
mov
ljmp
mov
jo
mov
dec
jo
out
mov
dec
jg
jg
pushf
popf
pop
mov
inc
call
mov
mov
jecxz
movsb
pop
mov
xlat
dec
inc
out
xchg
mov
xor
or
add
sbbl
vmread
sub
loop
movsl
fld
sbb
not
inc
bound
ja
clc
outsl
shrl
in
andl
shrb
jo
addr16
dec
push
sahf
push
mov
in
int
cmp
cmpsl
adc
and
cmpsl
add
jae
jno
dec
ljmp
notb
lahf
jge
adc
xchg
add
mov
inc
dec
pop
sar
stos
mov
mov
push
push
fdivrl
mov
fdiv
cwtl
out
jns
add
push
movsb
inc
lock
es
fs
lock
movb
mov
movsb
jo
lods
mov
sub
dec
ror
lods
dec
mov
leave
adc
xor
cmp
outsl
push
sub
xchg
add
sbb
sbb
stc
xor
insb
loopne
inc
cwtl
mov
or
out
fnstsw
imul
mov
popa
add
je
pop
add
test
and
in
cmpsl
mov
mov
mov
clc
pop
rolb
xor
dec
jge
mov
adc
mov
dec
stc
stos
ret
shrl
test
cli
roll
cmp
mov
xor
and
cmp
mov
mov
mov
cmp
jno
jae
leave
sahf
lcall
movsl
filds
scas
repnz
cltd
hlt
adc
cmp
repz
lea
mov
out
jl
and
js
xchg
jl
dec
lret
or
xor
sbb
mov
into
jno
shll
sub
inc
lock
nop
mov
mov
mov
add
cltd
push
fsubr
repz
adc
roll
xor
ss
push
xor
sub
test
jle
scas
cmp
cmp
xchg
cmp
test
cltd
pop
and
xor
push
ljmp
stos
iret
push
sub
mov
mov
dec
sbb
pop
shlb
mov
pop
and
roll
mov
cmpsl
leave
cmp
fldcw
sti
ds
shl
mov
fsubrl
sbb
mov
andb
pushf
cmp
xchg
idivb
add
mov
ja
ja
pop
or
or
cmp
mov
inc
mov
dec
xor
jge
add
mov
mov
loopne
popf
mov
push
test
cs
lret
mov
push
nop
jmp
cs
les
or
mov
mul
inc
ja
mov
adc
push
dec
std
mov
stos
cld
clc
push
clc
pop
add
jmp
jge
rolb
xchg
sub
jge,pt
jno
out
sub
add
scas
scas
sbb
mov
jbe
mov
into
inc
in
mov
mov
mov
cmpl
mov
jb
adc
lret
jne
rorl
popa
xchg
jmp
mov
fistpl
movsl
sbb
sbb
mov
add
inc
cmp
shrb
mov
loope
sbb
cmp
mov
in
xor
nop
cmp
xchg
jo
mov
sub
mov
or
dec
dec
and
xchg
cmp
outsl
leave
sahf
push
mov
jno
xor
mov
punpckldq
xor
icebp
xchg
cmpsl
test
fsub
loopne
or
bound
jns
or
stc
fnstcw
jbe
movq
std
pop
jne
stos
repz
jecxz
int
and
add
fsubl
cltd
out
jle
jo
cmp
orb
repnz
mov
mov
jnp
sub
or
dec
inc
loope
xchg
push
mov
jo
xor
mov
mov
enter
push
lock
ljmp
in
sub
sbb
add
bound
mov
stc
jb
mov
or
fs
push
and
or
shrl
jbe
je
lea
lret
fstl
push
mov
push
mov
jno
jnp
pop
jmp
adc
ret
ss
dec
roll
jl
fucomip
fsubrs
jb
inc
xchg
xor
mov
or
outsb
jno
and
lds
and
imul
mov
outsl
add
jp
lcall
nop
mov
push
adc
call
xchg
std
loopne
sbb
xchg
mov
aas
out
jmp
inc
aad
push
add
and
bound
punpckldq
movsb
xchg
jae
stc
push
popa
fildll
jb
mov
cmp
data16
cmp
or
cmp
cltd
jecxz
cmp
jno
adc
sbb
and
xchg
mov
dec
mov
lds
lahf
ljmp
call
lods
sbb
push
insb
inc
sahf
enter
inc
push
push
adc
je
or
adc
mov
leave
cmp
stc
and
cmp
jo
inc
xor
insl
shll
and
mov
mov
rclb
fisttpll
pop
in
pop
push
pop
rcll
out
add
imul
xchg
inc
cmp
mov
or
push
add
pop
pop
pop
inc
jle
iret
inc
jge
cli
or
dec
movsl
ficoml
pop
sub
xlat
idiv
cld
clc
push
xor
mov
hlt
nop
clc
mov
movsb
xchg
push
fcom
bound
fs
orb
decl
and
xlat
scas
jge
inc
jg
jp
adc
std
test
adc
rcrl
sub
popa
rcrb
mov
out
cmpsl
sub
popf
jae
push
sub
adc
mov
mov
dec
das
and
shll
mov
scas
mov
mov
xor
or
jg
ja
add
outsl
mov
pop
xor
lret
movb
insl
das
sub
shr
fcoms
jns
dec
xor
mov
add
fs
popl
inc
cmpsl
icebp
sub
sbb
rorb
inc
or
mov
into
enter
sti
pop
aad
cld
fsubs
jne
cmp
repnz
adc
push
jl
bnd
lods
and
fwait
dec
outsl
or
ffreep
xor
push
fiaddl
pushf
mov
inc
rcrb
fadds
cmp
scas
adc
xorb
int
insb
jnp
adc
push
bound
pop
ficompl
pop
sbb
inc
sbb
mov
call
push
dec
inc
xor
xchg
je
shlb
mov
mov
mov
jns
les
adc
cwtl
movsb
and
sub
jle
mov
stos
imul
mov
mov
and
sub
and
mov
call
or
jg
push
shl
xchg
inc
hlt
mov
int3
xchg
sahf
movsb
pop
mov
jbe
jle
xor
or
jmp
adc
xchg
lret
arpl
arpl
and
sub
pop
jnp
pop
push
mov
aaa
shlb
xchg
xchg
ss
jno
pop
outsl
sbb
out
push
mov
xor
jb
inc
movsb
jmp
lods
leave
xchg
dec
in
pop
inc
test
mul
call
clc
dec
negl
jne
test
mov
scas
cmp
sub
subb
lea
adc
xchg
dec
js
into
inc
mov
mov
dec
mov
pop
pop
jl
aam
jp
scas
subb
mov
rolb
mov
loope
xchg
push
xor
lods
adc
lods
inc
push
fs
repz
imulb
outsl
ljmp
push
lods
leave
jg
fmull
faddp
pop
lds
stos
xor
stc
loopne
inc
push
and
inc
scas
ds
mov
jnp
aam
jne
pushf
xchg
inc
mov
jecxz
cmp
mov
dec
jge
push
call
and
or
sbb
outsb
jp
adc
pop
iret
dec
mov
xchg
push
push
jne
jb
jnp
mov
aas
fcom
fstpt
dec
and
test
lds
aas
xor
ret
out
xor
daa
outsb
mov
inc
popa
sahf
shlb
sub
sub
cmpsb
pop
aas
or
xchg
and
dec
frstor
add
jp
pusha
xchg
xor
movsb
mov
xor
es
adc
fbstp
out
or
movsl
mov
scas
cmp
xor
add
xor
popf
pop
pop
test
cli
pop
loope
imul
mull
pop
rcr
push
adc
sbb
push
fbstp
sbb
dec
icebp
test
sbbb
mov
inc
sbb
push
stc
sti
jg
movsb
out
sbb
loopne
xor
shld
ljmp
xchg
mov
cwtl
movsl
sbb
in
or
fs
fwait
lahf
pop
dec
add
leave
jge
xchg
xchg
inc
subl
aas
push
nop
hlt
movb
and
clc
aad
popa
mov
adc
pop
stc
inc
cmp
je
xchg
inc
and
sbbl
ret
inc
and
leave
cmp
lret
or
addr16
ljmp
lds
rorb
ljmp
icebp
bound
jg
dec
dec
in
mov
insl
pop
int3
add
stos
lea
mov
dec
push
xchg
sbb
in
sahf
shrl
mov
pop
jb
mov
mov
add
pop
lcall
js
jmp
das
xchg
jecxz
shrl
pop
mov
insb
mov
push
dec
mov
and
rcrb
stos
rcr
sub
sbb
int3
or
mov
add
icebp
push
cmpps
jae
dec
int
add
mulb
jle
or
mov
gs
adc
lods
daa
sbb
cld
cmpsb
es
iret
int
push
mov
in
jnp
fwait
adc
add
jno
aaa
jg
ss
pop
jge
xor
push
sahf
lret
jle
pop
adc
loop
movsl
mov
add
pop
arpl
dec
add
int
mov
push
popa
mov
xor
testl
hlt
fdiv
flds
ss
xor
rcrb
adc
pop
dec
dec
jae
mov
xchg
insl
cs
cmp
sub
and
xor
xchg
shll
jl
loop
sub
mov
cmpsb
add
orl
push
rcrl
out
fstpl
lret
rcll
cs
mov
jmp
movb
xor
cmpsb
mov
or
push
pop
aam
push
cmpsb
clc
inc
pop
xor
jns
xchg
adc
roll
stos
xor
ret
ds
aaa
rcr
xchg
push
cmp
dec
dec
sbbl
mov
jb
repnz
push
lea
jne
ret
dec
data16
mov
mov
push
out
rorl
das
subl
jmp
out
jnp
jg
mov
sub
insl
mov
add
mov
loope
mov
in
scas
inc
xor
jl
and
mov
xchg
pop
push
pop
fidivrl
cmp
or
jl
adc
ret
scas
mov
outsb
inc
sbb
stc
or
add
jl
fldcw
mov
in
movd
into
jbe
jo
pop
jle
push
cmp
dec
ja
push
sbb
iret
dec
pushf
push
insl
mov
mov
and
adc
and
inc
fdivrs
push
xchg
jns
jecxz
add
aaa
lods
in
adc
push
mov
mov
xchg
jno
out
adc
inc
aaa
das
push
and
jmp
add
pop
mov
ret
les
sti
test
pushf
rcrb
sti
outsl
imul
imul
test
cmc
push
call
dec
leave
aas
and
std
push
xchg
into
push
and
in
adc
push
stos
xchg
jnp
jp
shll
jg
out
mov
into
sbb
mov
xchg
enter
and
mov
jp
imul
fcoms
ja
into
jle
and
cmp
mov
fsubrl
nop
popf
and
cld
jl
inc
lret
push
mov
scas
lret
xchg
clc
ljmp
js
mov
mov
sbb
out
sahf
fstpl
shl
test
push
dec
xchg
ficoml
cmp
outsl
push
xor
inc
jg
jle
fidivl
xor
divl
addr16
lods
push
xchg
pop
mov
in
mov
xor
fadds
mov
adc
dec
stos
sbb
pop
enter
jle
cwtl
testb
fsubrl
push
lods
jle
aam
xor
jle
sbb
or
mov
ss
adc
xor
out
xchg
push
mov
xchg
dec
dec
arpl
incb
xchg
call
inc
mov
pop
push
addr16
ds
push
adc
mov
dec
pop
or
out
repnz
inc
fimull
inc
xlat
insb
pop
int
mov
pop
xchg
ret
test
movsl
inc
cmp
sub
dec
gs
push
push
mov
inc
push
dec
mov
pop
scas
xor
idivb
lcall
sbb
jl
push
or
mov
inc
pusha
mov
cmp
fldcw
pop
sbb
pop
idivb
jl
shrb
sbb
xor
xchg
test
jne
and
dec
jns
xchg
les
das
jae
mov
shrb
mov
insb
mov
into
push
mov
call
in
and
aas
mov
pop
lods
mov
clc
fs
ja
lret
xchg
jmp
cmc
into
aam
and
fsubl
dec
or
xor
mov
jle
ret
dec
cmpsl
sbb
scas
sti
lret
adc
cmp
test
xlat
mov
sub
repnz
adc
stc
and
adc
mov
outsb
daa
daa
mov
push
mov
add
push
in
sub
fisubrl
pop
pop
mov
cmp
mov
dec
mov
xchg
fcomps
arpl
pcmpgtd
or
xchg
add
iret
xor
xchg
mov
pop
or
insb
sbb
iret
add
in
lret
insb
aad
or
dec
pop
sbb
lret
iret
xchg
pop
push
lcall
cmpsb
push
jle
loope
sbb
lods
sbb
jg
adc
sub
pop
cmp
ljmp
cli
add
cmpsl
adc
rcl
adc
sbb
dec
mov
ja
mov
push
cmp
jno
jae
js
imul
push
lds
fs
pop
out
lods
and
sahf
loop
xchg
mov
inc
inc
stos
push
popa
xchg
data16
lret
sbb
mov
fs
pushf
mull
repnz
jle
jne
pop
jb
jp
data16
in
dec
lcall
in
ja
inc
add
cmp
cmp
pop
or
icebp
inc
xchg
movsb
mov
lock
fadd
popf
sbb
movsl
pop
rorb
fwait
mov
adc
push
dec
pop
and
cmp
dec
pop
mov
xor
lret
jmp
mov
std
ljmp
inc
lock
add
add
pop
dec
iret
jl
inc
imul
mov
push
dec
clc
adc
fstl
movsb
xchg
daa
sahf
negl
mov
push
cmp
pushf
cmc
fbstp
minps
sbb
inc
rcr
push
nop
lcall
enter
sub
pusha
fdivrl
cltd
add
sbb
sub
inc
xchg
adc
sub
xchg
popa
and
fisubl
cmpsb
cmpsb
pop
jl
jbe
pop
incb
fnstcw
jbe
stos
xchg
cmp
adc
rorl
int3
add
jmp
into
sbb
scas
adc
in
mov
fiadds
mov
in
mov
pop
imul
int3
dec
and
fwait
sbbl
movsl
dec
push
jne
out
push
mov
push
adc
ficomps
dec
pop
in
dec
adc
iret
aad
fisubs
iret
mov
and
leave
push
inc
cwtl
xlat
loope
lahf
push
mov
or
adc
mov
jb
jne
aam
push
cs
fimuls
xchg
pop
aad
sub
mov
mov
mov
dec
or
mov
push
sbb
inc
mov
inc
outsb
stc
ljmp
rol
add
xchg
jnp
or
in
xchg
jae
sub
mov
sets
push
stos
sbb
fistps
arpl
pop
stos
push
cli
int
aaa
sbb
movsl
add
lods
shrb
cltd
cmp
or
sub
add
and
subl
jnp
pop
xor
in
adc
rorl
xor
rolb
inc
outsl
inc
sbb
add
and
jns
dec
rcrl
jecxz
sub
push
arpl
push
orb
rcrb
int3
mov
jecxz
inc
pop
fxch
push
mov
mov
cmp
push
sti
aas
fldt
sahf
xchg
repnz
push
cmp
bound
add
jmp
sub
pop
mov
js
enter
hlt
dec
popf
lock
shll
and
xor
xor
dec
sbb
xor
jecxz
sbb
adc
into
adc
sub
cld
jbe
ss
adc
or
fyl2xp1
sbb
shrl
and
pop
stos
adc
fisubrl
xchg
xor
in
sahf
cmpsl
adc
subb
xor
mov
pop
cmp
jbe
lea
xchg
and
push
fisubrl
stc
sbb
mov
jno
pop
out
xor
mov
repz
std
sahf
cs
les
stos
stos
inc
dec
jae
stc
add
sub
lcall
pop
jecxz
adc
jbe
decb
xlat
xor
je
cmpl
cmp
add
test
inc
mov
inc
push
pop
shll
repnz
fwait
pop
stc
sub
xchg
add
pushf
dec
rclb
icebp
nop
pop
mov
and
push
js
cmp
mov
jecxz
pop
popf
sbb
fadd
push
mov
lods
stos
test
jnp
xchg
cmp
lret
push
addb
into
lahf
push
xor
shll
int
aaa
roll
gs
mov
ss
add
popa
leave
mov
adc
fwait
xor
icebp
mov
jne
add
cmp
fsubrl
decl
xchg
test
lock
adc
and
lret
je
mov
addr16
sbb
shl
cmc
cmp
lods
test
xor
lcall
dec
inc
jns
jne
cmpl
shlb
test
scas
adcl
mov
pop
call
cmp
sub
je
xchg
inc
stos
sbb
xor
sub
mov
lds
iret
jb
jge
push
jo
repz
xchg
push
mov
xchg
jg
add
sbb
xchg
mov
push
mov
call
fstpt
xor
dec
pop
add
push
insl
lret
push
gs
inc
xchg
or
and
fsub
mov
push
xchg
inc
into
pusha
insl
aad
cwtl
les
jo
fst
clc
cmovnp
or
jmp
sub
aam
daa
rclb
icebp
jbe
adc
int3
jmp
jno
dec
adcb
jge
xchg
jp
pop
or
pop
adc
mov
xchg
scas
incl
mov
es
adc
adc
mov
ljmp
push
leave
and
ret
shrb
and
dec
scas
push
lret
cmp
inc
mov
not
testl
call
inc
or
adc
pop
sub
imul
mov
dec
inc
jne
in
push
mov
pop
dec
std
mov
mov
and
push
scas
jnp
mov
in
cmp
sbb
cmpsb
lds
xchg
jno
loopne
xchg
lret
push
or
sbb
mov
sbbb
clc
cmpl
inc
and
add
imul
arpl
inc
pop
xor
lcall
test
push
sbb
ljmp
add
cs
addl
and
cmp
push
movb
pop
icebp
mov
out
dec
lret
xchg
mov
xchg
pop
and
pop
xchg
sbb
ds
mov
shll
xchg
jl
arpl
jns
inc
call
mov
fwait
jg
mov
or
jecxz
lods
xchg
pop
adc
cmc
push
call
push
shrb
rcrl
inc
sbb
loop
mov
xor
xor
cmpsb
inc
loope
outsl
inc
je
insl
cld
and
scas
lret
repz
sbb
xor
leave
mov
jg
cmc
push
mov
pop
mov
loop
sahf
mov
loope
fnstsw
push
adc
cmp
aas
mov
stc
addr16
cmp
leave
insb
sub
pusha
inc
jae
or
add
sbb
jnp
rcll
orl
add
add
aam
lds
fs
rorl
add
out
aad
pushf
mov
leave
stc
pop
orl
clc
arpl
pop
or
pop
pop
and
ljmp
jno
out
ret
hlt
stos
ret
inc
adc
push
adc
ljmp
nop
pop
ds
push
loop
movsl
mov
pop
mov
jp
stos
adc
inc
pop
pop
or
dec
rep
decb
les
in
fsubrs
xor
inc
dec
jbe
pop
mov
stos
out
and
je
fmuls
cld
mov
shll
movsb
enter
addl
ret
and
icebp
lea
inc
add
jb
push
cmpb
dec
orl
rolb
pop
mov
xor
mov
push
add
jb
fsubs
rcl
add
enter
mov
jge
hlt
xchg
outsl
rcrb
aas
dec
push
ficoml
xor
loopne
or
cmp
jo
jns
jb
lret
arpl
mov
xor
sahf
sub
inc
insl
mov
test
and
push
fucomip
jmp
mov
fwait
xchg
sub
scas
sub
loopne
call
mov
mov
cs
imulb
mov
into
pusha
cld
push
sbb
lret
inc
repz
jecxz
cwtl
divl
inc
mov
adc
xor
xchg
push
repnz
jp
fwait
in
jne
dec
cli
jnp
adc
stos
add
dec
lods
mov
bound
inc
or
push
cmp
loop
inc
loop
fmul
jno
imul
loope
xchg
into
mov
movq
or
shlb
mov
sbb
pop
jbe
scas
lret
in
stos
jl
dec
add
push
je
lds
add
cltd
es
lret
rcrl
jae
pushf
pop
pop
add
outsl
inc
dec
adc
fcompl
faddl
nop
and
xchg
inc
jmp
xchg
cmp
add
or
mov
lods
decb
jecxz
adc
dec
sub
jno
negb
movsl
xor
xchg
mov
ficomps
les
cmc
push
jmp
aad
inc
les
mov
into
sub
xor
xchg
addr16
inc
ret
and
mov
push
sti
negl
inc
inc
outsl
and
jecxz
test
and
mull
arpl
or
xchg
lcall
stos
shlb
clc
negl
data16
sarb
jae
popa
and
sbb
sub
push
mov
push
pop
xchg
xchg
xchg
aad
jl
ret
add
or
aas
inc
push
cmp
inc
outsb
mov
pushf
mov
iret
daa
scas
push
or
in
in
ds
or
or
xchg
sbb
js
mov
xchg
add
push
ds
push
cwtl
jg
stc
cmc
mov
test
jno
aad
push
cltd
inc
add
adc
ja
dec
xlat
cld
popa
and
imul
iret
lcall
in
movsl
pop
aam
shll
jno
stc
out
in
ja
clc
jnp
cmpsb
lods
inc
loop
or
mov
mov
push
dec
mov
js
and
dec
dec
jno
mov
in
stos
inc
mov
lahf
and
xchg
dec
dec
push
pop
sarl
mov
mov
adc
ficomps
push
es
sarb
mov
cmp
xor
adc
lds
jo
lds
leave
adc
jae
repz
lahf
jnp
adc
mov
jle
bound
sbb
in
call
add
sbb
push
xchg
cld
pop
add
adc
add
popf
std
push
inc
add
pop
shl
pop
dec
std
jge
add
inc
and
sub
push
sti
popf
aam
test
xor
jg
push
push
out
sbb
cmpsl
hlt
daa
xchg
xchg
ljmp
xchg
ja
xor
sub
push
sub
test
cwtl
mov
push
mov
call
adc
bound
sub
jp
shl
jb
jo
dec
pop
adc
adc
and
add
add
mov
ds
push
in
dec
sub
adc
popa
loope
out
sbb
movsb
fcomps
mov
pushf
call
je
stc
jecxz
sbb
loop
and
daa
test
popf
cmp
fiaddl
xchg
ret
mov
hlt
dec
mov
clc
mov
jae
mov
xor
addb
cwtl
outsl
sbb
addr16
stos
mov
shll
dec
sbb
ss
outsl
and
das
leave
loop
loop
cmp
repnz
ret
jle
fadd
cmp
mov
dec
leave
stos
outsb
mov
cmp
and
out
add
push
popa
in
jno
rorl
ljmp
add
pop
dec
es
lcall
sbb
jae
inc
push
push
lcall
sub
ss
cld
inc
icebp
sbb
sti
cmp
arpl
sub
imul
cmp
clc
jmp
sbb
push
inc
loopne
in
jle
test
dec
testb
jo
mov
push
fnsave
out
rcll
popf
jae
sub
cmp
pop
insb
push
das
movsl
inc
add
jg
in
xchg
mov
gs
in
aas
dec
aas
repnz
scas
sub
fs
inc
xor
repnz
jmp
out
jmp
and
mov
xchg
push
into
in
pop
leave
mov
inc
test
fisubrs
scas
dec
jp
test
adc
test
inc
mov
jp
iret
ss
inc
xor
inc
mov
xor
mov
mul
mov
imul
adc
rcrl
nop
lcall
mov
sbb
test
jecxz
xchg
mov
hlt
mov
movsl
dec
pop
cmp
icebp
or
je
ret
sbb
xlat
jmp
incl
inc
ds
inc
push
insl
inc
inc
xchg
mov
adc
movsb
mov
mov
pusha
or
push
inc
sbb
sub
int3
je
aad
test
sahf
into
xchg
dec
or
cmpps
xchg
icebp
cmp
outsb
popf
sub
popf
cs
notl
pop
mov
xor
test
push
lods
sbb
mov
dec
push
dec
cmc
cwtl
bound
xor
inc
lahf
add
cld
loope
push
mov
mov
xchg
in
push
cmp
rorb
cmp
mov
gs
fdivrl
dec
adc
dec
imul
pop
cmp
sahf
ds
dec
and
push
mov
and
lods
cltd
ret
pushf
les
fistps
and
imul
xlat
add
add
lcall
jns
in
loopne
fdivl
dec
jo
out
mov
test
pop
mov
lahf
mov
mov
mov
pop
scas
mov
adc
pop
inc
mov
or
pop
test
cmpsl
xchg
sbb
sahf
sbb
ds
mov
or
dec
movsl
fcoml
jl
cmc
sahf
sub
ds
in
and
xor
sbb
scas
push
test
cmp
jo
jge
pop
subl
dec
pop
dec
enter
sti
arpl
inc
ds
add
test
or
inc
lods
loopne
jecxz
sbb
cli
sbb
jge
push
das
inc
xchg
mov
stos
xlat
incb
push
mov
sbb
sbb
icebp
push
mov
testb
sub
or
ret
std
inc
int
mov
ret
mov
arpl
add
inc
sti
fistps
push
test
sbb
movsl
stos
sahf
outsl
outsb
fs
ljmp
lock
xor
movb
xchg
jl
bndstx
pop
inc
add
fidivrs
jecxz
das
jge
jbe
inc
add
mov
xor
mov
dec
out
mov
in
cs
jnp
jle
cmpsb
pop
cmp
imul
sub
std
dec
inc
repz
push
jae
push
loope
cld
push
imul
adc
pop
xchg
jno
mov
add
sti
pop
push
xor
cld
je
cmp
sbb
mov
sub
stos
mov
into
mov
scas
sbbb
jne
lods
push
xchg
test
mov
arpl
inc
icebp
jl
fwait
jecxz
mov
xor
dec
outsl
bound
pop
cmp
cwtl
adc
and
scas
in
pop
rcll
cs
jp
mov
push
js
push
pop
push
mov
sbb
mov
pop
mov
addr16
xor
or
cltd
js
out
cld
sbb
andl
xor
clc
nop
mov
mov
inc
mov
subl
push
aas
ja
add
sti
enter
int
sub
out
sbb
adc
loop
je
iret
mov
das
sbb
fstpt
mov
icebp
inc
pop
mov
push
cwtl
sahf
enter
hlt
cmp
inc
jg
test
or
into
or
mov
cld
sub
fimuls
xor
jne
in
or
addl
loope
mov
sub
mov
xchg
jp
mov
sub
xchg
dec
jge
xlat
fistpl
scas
sti
lods
cld
adc
lds
sahf
ss
and
xor
sti
jmp
gs
in
push
negl
sub
fimull
mov
loop
fucomi
and
lods
lret
mov
scas
stos
cmp
push
sbb
dec
xchg
push
lahf
scas
mov
addr16
repnz
ss
cmpl
cmc
pushf
inc
lret
test
stos
stc
dec
or
inc
inc
adc
adc
nop
pop
xchg
adc
flds
inc
cwtl
xchg
in
mov
out
dec
lea
pop
push
cmp
xchg
pop
add
les
mov
cli
popf
lahf
pop
sti
and
fisubrl
cmpsb
mov
adc
push
xchg
movsl
test
add
sahf
pusha
pop
in
mov
popf
in
sub
outsb
adc
push
fstpt
fwait
xchg
pop
fsub
testl
mov
js
pop
pop
dec
jne
dec
cmp
rorb
push
lcall
jmp
push
shrl
or
out
or
cmp
fidivl
cmp
clc
les
push
jne
addl
fisttpll
in
mov
or
cmp
inc
cmc
add
adc
xchg
jnp
and
ds
ljmp
sar
xchg
push
push
int3
pop
std
lret
adc
sahf
lret
inc
sub
scas
pop
pushf
xor
and
add
mov
jmp
ja
int
mov
xor
or
push
jbe
mov
das
mull
call
sub
cmp
adc
insl
out
aad
xor
xchg
ret
push
in
std
into
xchg
mov
add
or
out
push
rol
and
cmp
sub
adc
inc
xchg
mov
push
pop
add
cmp
dec
push
xchg
cmp
jb
fwait
stc
in
lock
scas
mov
lcall
ljmp
adc
gs
inc
ja
sub
shlb
adc
and
inc
pop
sbb
xchg
inc
aaa
test
jecxz
dec
pop
xor
add
fwait
jae
mov
out
pusha
push
inc
insb
rcr
dec
sbb
lods
add
dec
add
xlat
xchg
shl
inc
push
pop
dec
loopne
test
iret
aaa
ret
push
fdivl
jecxz
ret
jns
xchg
lret
sbb
stos
push
imull
or
dec
pop
mov
sub
xchg
or
pop
mov
fildll
lea
cli
xchg
jmp
stos
enter
gs
jge
dec
sub
int
cld
in
ss
shr
jge
jp
std
scas
sarl
imul
cld
add
pushf
mov
ret
stc
std
cmpsl
sbbl
xor
mov
pop
out
mov
or
cs
jo
imul
cmp
cmp
gs
scas
pop
fstp
jge
mov
arpl
dec
sbb
xchg
aad
adc
cmpsl
cmpsb
adc
pop
pop
or
dec
xor
lret
shrb
jne
lods
push
add
js
push
fs
xchg
xchg
ficompl
loope
loop
subb
roll
into
int
push
pop
dec
cmovnp
inc
scas
aad
icebp
pop
fdivrl
aad
sbbb
add
xor
fimuls
cmp
sub
adc
mov
pop
xor
mov
aam
mov
insl
fldt
mov
mov
add
fwait
testb
pop
mov
sub
shlb
dec
inc
shrb
clc
fwait
lret
xchg
xor
push
mov
or
stos
sbb
adc
lcall
sti
pop
push
or
arpl
push
sub
sarb
mov
fildll
xchg
sbb
push
and
fimull
shl
push
pop
and
and
rclb
imul
insl
rcll
cmp
cltd
xor
mov
mov
shl
lcall
aaa
cmpsl
add
lret
cmpsb
repz
scas
push
pop
push
loop
jae
add
scas
sti
sbb
lods
adc
adc
pop
fs
push
shlb
mov
cmp
dec
hlt
lcall
lahf
ss
add
push
int3
push
std
call
inc
cli
test
mov
les
shll
xchg
pop
in
call
inc
popf
notb
imul
cmpsl
ret
pop
xlat
add
dec
rorl
stos
je
pop
stos
inc
repz
data16
lret
enter
and
mov
or
scas
jle
ljmp
jmp
gs
adc
mov
xor
sti
sub
out
push
sbb
mov
pop
pop
icebp
jbe
xchg
repnz
aas
aas
mov
dec
push
iret
cmp
xlat
daa
es
fildl
and
mov
jl
cmp
jo
stos
add
icebp
gs
ret
inc
xchg
add
in
or
adc
adc
inc
xchg
insl
inc
out
cmp
fs
in
aas
or
jl
mov
mov
mov
push
fwait
rcl
loopne
leave
jp
jno
rorl
in
sbb
adc
push
adcb
int3
sub
pop
mov
dec
cmp
xchg
jno
out
and
push
pop
rolb
jle
mov
inc
movsb
or
cmp
add
ljmp
xor
pop
sbb
movsb
sbb
mov
orb
push
and
push
hlt
xchg
sbb
xor
cmp
shl
add
cmp
mov
lcall
shl
jnp
popf
lds
ja
pop
icebp
adc
clc
cmp
or
outsl
jo
mov
jmp
cmpsl
or
fadds
or
cmp
adc
push
test
inc
lcall
pop
fstl
jae
das
xorb
mov
cmp
or
or
cmp
out
xchg
inc
ds
dec
fmuls
xor
rcl
sbb
push
inc
inc
jnp,pt
subl
mov
mov
dec
jae
lret
adc
xchg
in
popa
sbb
sub
lcall
pop
jg
and
test
xchg
mov
test
cwtl
sub
dec
movsl
mov
outsl
mov
mov
or
outsl
xor
mov
cmp
outsb
xor
cmpl
es
je
loop
pusha
or
ret
push
and
pushf
or
or
daa
gs
inc
xor
mov
pop
add
repz
insl
cli
movsb
mov
inc
fsubl
sbb
scas
sbbb
std
sub
cmp
test
and
in
imulb
dec
jg
pop
mov
adc
out
arpl
insl
imul
mov
out
fmull
xor
jecxz
jmp
adc
sub
mulb
xchg
data16
cmp
xchg
mov
into
out
dec
add
dec
repz
ficompl
inc
mov
xor
cli
je
cmc
xchg
push
sbb
add
cmp
test
jp
ret
andb
jl
add
mov
in
mov
mov
cmp
and
rcll
ja
stos
loope
xchg
test
push
mov
cmpsb
arpl
mov
sbb
or
adc
adcb
mov
scas
mov
sbb
jne
lods
icebp
pop
aad
xchg
lock
icebp
mov
daa
rol
dec
pop
movl
push
mov
dec
out
fsubrp
mov
lret
aam
fs
sbb
push
cmp
mov
js
lea
inc
mov
and
cmpsb
fbld
mov
sub
cmpsl
je
std
sbb
add
pop
in
in
aam
mov
adcb
gs
sbb
inc
fucom
add
xchg
std
sub
sub
shll
inc
icebp
and
lods
pop
inc
mov
cmpsl
shrb
pop
pop
out
addr16
cmp
push
pop
rcll
loop
push
sbbb
std
mov
push
out
sub
sbbb
push
adc
sbb
mov
xchg
jl
popa
arpl
xchg
adc
andl
and
in
mov
cmpsb
xor
jno
adc
dec
and
sbb
test
jg
mov
fadds
in
lods
iret
mov
aam
sub
shr
xlat
and
mov
xor
cmc
cmp
shlb
sbb
cmp
jp
sub
jg,pt
xchg
push
enter
mov
into
jb
sbb
jecxz
xchg
ret
mov
mov
sub
stc
push
adc
pop
xor
shll
test
mov
adc
push
or
and
mov
push
daa
or
rclb
jne
into
xchg
xor
inc
mov
movsb
ret
mov
fcomp
rcl
rcrl
repz
xchg
mov
in
and
inc
inc
lods
inc
mov
jge
stos
lds
sub
jnp
dec
les
pusha
daa
clc
lcall
jl
xor
push
sarb
aas
mov
repnz
fwait
loop
iret
xor
push
mov
lock
aam
sbb
leave
test
adc
pop
mov
mov
insb
repnz
cmc
sub
int
push
mov
inc
fwait
outsb
xchg
mov
rcr
mov
mov
out
and
add
or
fcmovbe
xlat
dec
push
movsl
repz
shlb
popf
push
std
daa
stos
lock
pop
xorb
cmpsb
pushf
mov
repz
xchg
fimull
dec
mov
in
lods
jno
sbb
mov
cmp
pop
jne
xor
mov
test
jo
cmc
shll
pop
in
inc
push
ja
imul
testb
xchg
pop
adc
inc
outsl
and
push
jns
ja
xor
sarb
repnz
push
in
mov
xadd
mov
sub
pusha
cmp
lods
cmp
movsl
cs
rcr
push
bound
dec
leave
jmp
xchg
sti
aam
stos
loope
rorl
popf
in
shlb
inc
nop
neg
lret
stos
dec
std
cmp
pop
leave
adc
mov
cmp
push
mov
jb
cs
sbbb
aas
or
jp
fs
jmp
xlat
bound
dec
mov
lcall
lahf
or
test
adc
adc
sbb
fldenv
inc
outsl
dec
xchg
jns
mov
arpl
and
fs
nop
mov
repnz
aad
cmp
dec
pop
loope
outsl
pop
push
dec
fs
and
sti
bound
mov
push
inc
popa
ret
test
fwait
jl
shl
inc
fistpl
into
les
or
adc
icebp
xor
push
jl
mull
in
ljmp
rcr
inc
mov
fs
sbb
shlb
dec
pop
mov
sbb
push
and
jmp
cld
push
test
inc
ds
repnz
push
or
mov
adc
jnp
rep
icebp
iret
and
lock
and
or
mov
mov
pop
js
fistl
mov
xchg
xor
sub
adc
inc
xor
arpl
les
sbb
test
sbbb
lods
mov
inc
repnz
sbb
mov
fidivs
mov
addb
and
ja
jbe
nopl
mov
das
inc
scas
pop
fwait
ret
mov
xor
popf
dec
cmp
mov
int
xor
push
jo
cli
and
pop
add
popa
lock
scas
out
movsl
xor
push
mov
push
ja
fimull
popa
stc
fbstp
lds
and
insb
out
popf
sub
call
mov
test
jo
cs
mov
xchg
add
rorl
out
mov
adc
dec
cmp
clc
xchg
jne
mov
cmpsl
xor
aad
sbbb
pop
shrb
or
cmp
mov
repnz
pusha
add
lock
lods
loope
inc
lahf
adc
aad
repz
push
sbb
push
inc
and
sarl
pop
imul
pop
mov
loopne
pop
out
dec
jle
mov
add
ljmp
rcr
mov
repz
xor
sbb
pushf
push
enter
lds
jns
and
in
cwtl
and
inc
jb
push
pop
jo
in
js
adc
mov
clc
mov
jp
inc
dec
cs
cld
test
mov
inc
sub
sub
mov
and
cmp
imul
sub
mov
pusha
or
cwtl
jmp
pop
cltd
jo
xchg
out
dec
data16
in
repz
sahf
rclb
repz
dec
repz
rorl
int
jno
daa
insl
xor
iret
xchg
in
pop
jbe
mov
cmpsb
scas
pushf
xor
fucom
fs
test
and
sub
jb
filds
pop
das
enter
mov
push
dec
add
leave
or
inc
call
into
mov
mov
rcll
in
or
pop
mov
mov
or
jg
or
fstp
xor
pop
enter
hlt
jmp
push
in
cli
push
js
repnz
mov
mov
stos
adc
pop
push
insl
mov
call
sbb
xchg
push
lods
xchg
and
sti
iret
fwait
push
fstps
mov
inc
add
sbb
scas
push
adc
pop
popf
cmp
arpl
dec
jno
inc
add
dec
sub
fidivs
pop
lods
or
pushf
mov
inc
xchg
mov
call
pop
cmc
or
xchg
lea
pop
lcall
outsb
addr16
mov
xchg
or
add
test
jl
or
and
out
pop
adc
int3
jne
adc
adc
lret
and
cld
sbb
pop
sub
push
aaa
inc
or
ret
leave
call
xchg
push
out
jge
enter
push
shrl
pop
push
xchg
std
cmp
pop
jnp
push
lock
mov
jle
mov
push
jle
arpl
fisttpl
xor
popa
out
mov
lret
lret
leave
fs
sub
dec
push
insb
cltd
pop
adc
gs
in
stos
negl
and
dec
in
scas
mov
andb
add
sub
or
mov
rcrb
dec
in
xchg
testb
sub
sub
cmp
std
int3
mov
shll
shrl
jo
cmp
lock
fstl
test
sub
cmp
icebp
lret
pop
sbb
cli
fildll
fwait
inc
xchg
push
into
mov
insb
stos
lcall
in
mov
pop
dec
mov
and
test
movsl
enter
or
mov
jl
in
jmp
dec
pushf
insw
dec
push
test
mov
add
push
mov
das
sbb
mov
adc
xor
movsl
subb
mull
or
je
inc
lods
mov
lods
push
stc
decl
movb
pop
pushf
mov
xor
sub
fldl
mov
jo
sti
scas
mov
jb
xchg
call
sub
and
imul
pop
inc
push
push
push
loop
call
jne
ds
repz
sub
in
cmp
pop
cmp
mov
call
lods
or
inc
or
enter
jg
daa
add
leave
cmpsb
loope
push
stc
mov
dec
mov
movsl
out
mov
in
cmp
cmp
push
mov
cwtl
mov
clc
lcall
in
ja
sub
push
xchg
pusha
std
and
mov
mov
pop
outsl
arpl
movsb
es
dec
xor
ret
cmc
mov
sbb
repnz
insl
arpl
jo
jnp
pop
push
std
sbb
fisubs
out
push
push
push
movsb
scas
cld
and
mov
enter
push
test
fsubs
inc
push
mov
fildll
lods
mov
call
es
sbb
sub
or
xchg
mov
pop
push
pop
fnstenv
mov
dec
mov
xchg
negl
dec
pop
ret
movsb
cmp
push
mov
loope
dec
decl
addr16
cmp
inc
sahf
mov
popf
lock
mov
in
dec
mov
js
xchg
scas
jle
mov
fs
stc
pop
adc
aad
adc
jae
cwtl
ljmp
leave
pop
pushf
xlat
jae
cs
ret
ret
in
push
mov
mov
adcl
cmpl
add
adc
pop
sbb
or
cld
pop
push
stos
leave
shlb
jmp
xor
divl
inc
nop
pop
icebp
testl
mov
jmp
pushf
pop
push
xchg
dec
cli
shlb
xlat
ja
lahf
mov
jb
adc
cwtl
pop
lods
scas
jl
lock
div
popa
je
and
cmp
popa
cmp
test
mov
les
xchg
lret
xchg
insl
insb
in
loope
mov
nop
aas
xchg
cmp
cwtl
jl
cmp
pop
int
mov
xor
scas
sub
xor
push
daa
jno
andb
xor
popl
xchg
jg
xchg
out
shlb
pop
inc
int3
lret
outsb
scas
sub
scas
out
lret
cmpsl
sbb
vpshaq
xor
adc
jbe
mov
rol
jno
jns
pop
fsts
push
pushf
fs
insl
insl
jnp
cld
lret
shll
xchg
loopne
dec
movsl
inc
mov
out
xor
lea
ret
lret
lret
iret
adc
shrl
mov
or
xchg
push
xchg
dec
daa
test
jbe
imul
jecxz
arpl
into
int
inc
sub
mov
lods
push
sbb
lods
lcall
and
rcrb
insl
xchg
mov
xor
inc
out
test
ljmp
push
jge
cmpsb
xchg
rclb
loop
adc
mov
and
mov
mov
xchg
lods
inc
lods
daa
sub
xlat
jecxz
rol
int3
arpl
sbb
movsb
clc
xor
lret
adc
fstpt
cmp
xchg
xchg
xchg
mov
lea
xchg
or
mov
popf
jbe
xchg
pop
cli
push
ljmp
hlt
jne
ja
popf
addl
mov
or
repnz
sub
cmp
movaps
imul
and
or
les
das
fisubl
xchg
push
loope
aas
fisubl
xchg
push
add
or
test
sbb
out
inc
mov
lods
add
int3
lods
cmp
ret
xchg
cwtl
ljmp
js
sbb
js
mov
xchg
loop
dec
flds
vpsubd
testl
bound
pop
movl
mov
int
pop
push
dec
mov
xchg
mov
fldl
ljmp
iret
push
popa
mov
ljmp
js
pusha
adc
ret
jp
xchg
add
psubd
cmp
out
cwtl
leave
popa
mov
insb
dec
or
adc
pop
mov
cmp
dec
xchg
movsl
jae
lock
loope
pop
jnp
or
bound
mov
adc
push
pop
mov
push
pop
push
inc
adc
adc
mov
cmc
aaa
addb
aam
ss
mov
mov
ds
cmp
or
aad
repz
cmp
push
cmpsb
mov
mov
insl
cmc
icebp
sub
std
xchg
xor
mov
xchg
and
or
mov
jae
cmc
jne
dec
fwait
mov
call
jne
cwtl
js
insl
sbb
iret
sbb
xor
or
adc
xlat
add
jl
icebp
lds
jmp
pop
xchg
test
jl
das
pop
frstor
mov
jnp
pop
movsl
nop
outsl
cmc
in
fimull
pop
dec
mov
sbb
test
ret
imul
fadd
push
xchg
dec
lds
leave
mov
aaa
in
call
dec
aad
inc
and
shr
int
sub
or
repz
cmp
sub
mull
andb
jp
inc
push
cli
out
jo
fistpl
cld
std
rcrb
lcall
es
mov
out
jnp
ret
imul
stos
arpl
inc
jo
sbb
jns
dec
or
ljmp
loope
ja
lods
cmp
test
xor
adc
insb
outsb
mov
sub
fdiv
popa
loop
pop
xchg
into
jne
cmp
scas
mov
pop
inc
and
imul
enter
xor
insl
sub
inc
in
or
sub
mov
shll
sbb
sbb
or
mov
sub
mov
xchg
sub
xlat
push
cltd
inc
ret
jg
sub
sahf
mov
pop
sbbl
pop
call
push
and
adc
add
fwait
and
push
add
cmp
fcmovnu
in
mov
ja
lods
iret
pop
push
ret
mov
push
lods
push
xorl
imul
dec
mov
xor
aaa
out
rorb
lret
cmp
push
adc
insb
pop
cmc
add
loopne
sub
test
push
xchg
fmuls
pop
sbb
and
mov
pop
dec
or
sub
jo
shll
lock
and
xchg
test
inc
push
rcr
add
inc
int3
jg
test
hlt
enter
nop
jo
mov
sub
sbb
fnsave
xchg
and
movsb
cmp
or
invd
ljmp
mov
and
fistpl
xchg
xchg
mov
es
add
jnp
sahf
ja
sub
bound
pop
hlt
lods
push
outsl
cmp
loopne
pop
push
cltd
int
jne
sti
xchg
into
xchg
arpl
dec
ret
das
stos
push
jp
sbb
inc
in
clc
pop
sqrtps
insb
ja
daa
insb
stos
popf
in
cmp
sbb
mov
shr
push
dec
adc
dec
xchg
push
adcl
jge
or
xchg
fcmovbe
mov
ret
mov
add
cmp
sbb
test
test
push
out
jmp
adc
rcrl
or
jnp
inc
cli
xchg
stc
in
push
xchg
cmpsb
sub
jmp
push
jl
rcrb
into
ja
enter
ss
ret
sahf
xor
cwtl
loope
cwtl
push
dec
int3
sbb
mov
jg
filds
clc
mov
cli
test
shll
dec
es
es
into
movsb
aam
pop
sti
mov
inc
addb
fistl
nop
xchg
add
gs
das
inc
push
jecxz
rorl
lds
dec
cmp
pushf
inc
shr
pop
adc
push
cmp
ss
mov
jle
mov
jp
xor
js
std
insl
mov
leave
out
jl
loop
mov
lret
push
mov
repnz
pop
popa
jae
push
inc
xor
inc
std
out
popa
mov
leave
xchg
jne
jae
addl
inc
cmp
stos
lret
sub
std
enter
push
mov
push
repz
into
mov
jmp
loope
shrb
sbb
inc
pop
jnp
loopne
ja
imul
adc
push
js
lret
push
mov
addr16
jp
adc
pop
sub
jnp
rcll
cli
or
sbb
aas
jbe
mov
test
xor
pusha
xchg
dec
mov
in
shlb
jp
xor
pushf
mov
in
push
mov
jg
dec
cmpsl
pop
pop
test
sbb
cld
std
push
loopne
and
iret
cs
inc
cmp
jae
mov
fsub
xchg
add
pop
mov
pop
dec
pop
adcl
inc
mov
addl
push
add
call
inc
jmp
je
inc
sub
test
in
and
sbb
mov
xchg
xor
mov
jne
cwtl
lods
int3
add
inc
cmpsb
out
pop
adc
mov
xchg
push
mov
or
pop
ss
cmpsb
sti
xchg
arpl
imul
mov
scas
adc
mov
sahf
sub
movsl
cwtl
xchg
mov
in
insl
rorb
sbb
and
sahf
pusha
loope
stc
mov
mov
cmpsl
dec
push
fnsave
pop
movsl
stos
fs
test
enter
in
inc
je
bound
scas
or
divb
add
daa
loope
cltd
mov
jbe
jecxz
push
xor
xchg
adc
xor
dec
fdiv
loopw
repnz
arpl
sub
xor
sahf
lahf
outsl
dec
test
dec
mov
push
xchg
mov
add
push
inc
inc
push
fwait
into
push
fmuls
cmp
push
add
mov
pop
push
cmp
or
xchg
cltd
xorl
or
roll
mov
push
cwtl
cmp
mov
pop
mov
faddp
jae
jne
arpl
jae
pop
xorl
dec
in
xor
sti
jmp
fcomip
jmp
adc
in
push
jle
scas
pop
dec
jne
and
cmp
ret
lcall
rolb
jb
xor
fstps
test
bound
stos
mov
in
inc
push
or
pop
xchg
pop
test
repz
imul
add
sub
cmp
push
rorl
xor
dec
into
loopne
rcrb
lods
inc
push
xchg
incl
dec
ret
out
ret
dec
in
xchg
mov
mov
shrb
jl
mov
out
roll
mov
negb
cli
es
xchg
inc
fbld
test
or
mov
mov
ljmp
mov
mov
test
dec
cli
pop
jo
inc
push
lods
xchg
xor
outsb
mov
ljmp
pop
xor
or
lds
pop
insl
pop
adc
pop
mov
cmpsb
and
test
aas
mov
cs
test
cmp
dec
xchg
hlt
push
add
clc
sub
sub
jge
stc
sbb
lods
in
xchg
xor
cltd
mov
lock
int3
test
idivb
pushf
test
push
lds
out
push
add
mov
mov
jo
subb
je
pop
fisubrs
jns
push
jns
sub
xor
jmp
jo
inc
pop
sub
inc
orb
fdivs
adc
sbb
mov
outsb
test
sti
test
cmp
insb
jmp
mov
jnp
cmc
sbb
xchg
and
push
pop
loope
jae
aaa
imul
fs
adc
addb
mov
fstl
or
push
fdiv
pop
jno
sbb
rol
ljmp
pop
cmp
mov
andl
push
mov
imul
inc
inc
push
mov
inc
movsb
shlb
jle
in
cli
pushl
and
cmp
sub
inc
popl
mov
pop
xchg
stc
ret
push
lea
rsm
jns
cmp
pop
fstpt
pop
and
add
daa
cmpsl
mov
lds
add
inc
mov
or
inc
xchg
push
addr16
sbb
ljmp
push
lods
mov
add
shrb
das
pop
test
aad
push
and
jns
xor
into
test
stos
push
lret
mov
mov
in
push
mov
cmp
fwait
sahf
mov
dec
out
xchg
cmpsl
in
gs
mov
push
cmp
popf
add
jmp
out
cmp
mov
test
ja
popf
and
in
push
test
mov
mov
jp
xchg
add
enter
testl
sbb
mov
lods
out
mov
push
mov
out
inc
push
and
loopne
xor
push
inc
pop
lock
in
pusha
pushf
aam
sarb
cmpsb
les
sub
leave
lea
lret
imul
fdivrp
int
lds
and
jle
sbb
repz
mov
mov
test
mov
jge
pop
cmp
sub
test
jp
rol
xchg
inc
js
add
jb
cmp
ljmp
in
mov
cmp
cmp
adc
stos
mov
jae
add
sbb
test
test
or
sub
pop
mov
pop
out
sbb
addb
loope
or
push
fdivrl
arpl
sbbb
inc
gs
inc
pop
cmpsb
mov
arpl
fnstcw
xchg
setle
mov
cmp
imul
push
dec
bound
fs
sbb
and
adc
cmp
out
js
jmp
lcall
scas
int3
mov
pop
inc
popa
aad
xchg
nop
mov
xor
pop
imul
lret
clc
ror
fsubl
lret
fwait
pop
cmp
mov
in
sub
xchg
jle
push
sub
test
gs
sbb
stc
call
push
lds
or
mov
out
cmpsl
adc
xchg
cs
fsubs
fsub
lods
inc
lods
repz
test
pushf
lods
or
fwait
mov
jge
adc
gs
fstpt
cmpsl
adc
sbb
fs
push
imul
cmp
lods
aad
inc
xchg
scas
adc
test
nop
cld
fimull
xor
mov
mov
aam
pop
fs
pop
in
xchg
addr16
push
xor
rcll
xor
dec
arpl
outsl
imul
cs
mov
jo
dec
jg
cmp
loop
ds
sahf
sbb
mov
jo
pop
add
popf
rol
sub
data16
imul
out
outsb
jnp
cmpsb
pop
add
and
aad
shr
dec
dec
les
mov
inc
cld
enter
cli
test
test
and
mov
clc
xor
jle
push
clc
loopne
push
out
mov
movsb
lahf
sbb
loope
pop
lcall
and
inc
xor
sti
xchg
jg
mov
or
les
movsl
insl
sarb
addr16
and
mov
or
mov
sub
push
into
inc
push
testl
cld
dec
dec
push
out
mov
mov
loope
mov
jb
or
pop
add
mov
push
cmp
xchg
adc
stos
inc
adc
and
stos
xchg
xchg
inc
aam
fstpt
cmpsl
push
ja
jne
leave
fisubrs
daa
jl
xor
jae
push
inc
out
cmp
mov
sub
jns
aas
loope
adc
lret
arpl
insb
scas
sbb
mov
in
fisttps
aam
add
filds
and
andb
fbld
sbb
test
push
cmp
js
add
pop
lods
push
xchg
dec
je
iret
lea
jnp
arpl
mov
cwtl
cmp
lahf
popf
les
cwtl
rol
les
cli
inc
flds
mov
call
negl
jb
adc
xchg
idiv
rclb
shrd
or
lods
fdivrp
test
sub
pop
dec
daa
enter
sahf
movb
ljmp
lods
daa
mov
inc
mov
add
sbb
or
push
mov
filds
jp
mov
imul
js
inc
lret
sub
add
aad
les
jp
ret
repnz
mov
push
sub
add
lock
shlb
jb
mov
dec
test
sbb
pop
stos
sbb
jmp
xchg
nop
pop
leave
mov
lock
sbbl
test
out
lock
lds
out
mov
lret
das
lock
pop
push
dec
rorb
jecxz
cmp
cmpsb
clc
mov
jno
dec
xor
lods
dec
scas
loopne
mov
xchg
push
cwtl
stos
or
pop
pop
xchg
andb
cld
sbb
jno
shl
add
imul
mov
push
push
xlat
mov
xchg
mov
mov
mov
loop
pop
inc
or
es
fdivs
push
stos
dec
out
adcb
add
mov
ffree
push
adc
mov
sbb
clc
mov
daa
aam
xchg
lcall
xchg
dec
addr16
pop
sbb
aad
mov
es
leave
testb
mov
enter
mov
mov
xor
and
adc
fistpl
and
add
xchg
mov
mov
sbb
ror
call
ret
scas
out
fistpl
xor
pop
xor
fisubrl
and
andl
push
pop
push
inc
aam
js
repnz
sub
fcmovb
icebp
adc
pop
mov
int
push
fwait
mov
sti
inc
imul
add
lahf
mov
push
push
fnstcw
xlat
xchg
jne
and
sub
mov
cmpsb
mov
cli
fs
push
test
add
scas
lret
ss
in
jg
ja
pop
aad
mov
testb
faddp
push
scas
aad
aam
and
mov
mov
shll
lods
xor
mov
inc
mov
test
int
das
push
adc
inc
jns
xorl
test
sahf
cmpsb
daa
test
xlat
pop
mov
sahf
fbld
adc
iret
dec
push
mov
lds
sub
sub
movsl
iret
push
pushf
pop
mov
cmc
test
mov
ljmp
fwait
cmpsl
inc
out
dec
inc
out
shlb
fs
fcmovnbe
add
and
push
and
repnz
adc
sbb
and
and
and
lret
xor
xor
and
cwtl
arpl
shll
mov
pop
loope
push
ja
add
push
push
xlat
pop
push
dec
sar
loop
and
and
push
insl
jmp
adc
sbb
mov
stc
xor
pop
loope
scas
jg
lret
dec
aas
dec
dec
dec
es
pop
dec
mov
jp
mov
in
add
cmpsl
sahf
add
adc
js
mov
or
hlt
data16
aas
aas
into
addr16
aas
ret
sar
out
cmpsb
in
loope
mov
mov
imul
sahf
pop
nop
push
test
test
mov
cs
insl
add
pushf
mov
jne,pt
ss
iret
xchg
pop
or
push
test
sbb
or
enter
ja
xchg
jle
lret
adc
adc
xor
jnp
ror
scas
sub
cli
test
inc
jns
dec
push
loope
jae
pop
jbe
dec
stos
mov
je
xlat
xchg
outsl
in
pop
fsubrs
in
jmp
bnd
movsb
inc
pop
dec
mov
mov
xorl
jnp
pop
inc
sub
aaa
pop
bound
das
out
daa
cmp
lds
sbb
mov
in
push
xchg
add
jmp
inc
mov
mov
clc
mov
and
mov
sbb
sbb
cmpl
popa
outsl
test
pop
dec
mov
push
xchg
test
gs
sti
cmp
adc
push
sahf
aaa
adc
sub
pop
xor
xchg
push
cmc
and
sbb
xchg
mov
mov
jg
inc
sbb
jo
mov
frstor
scas
or
jno
loopne
int3
or
mov
sbb
out
dec
sub
mov
cmpsl
rolb
ret
sti
xchg
lret
enter
push
adc
cmp
adc
adc
jb
mov
dec
jb
hlt
arpl
in
dec
xor
mov
xchg
fbstp
in
xchg
andl
dec
mov
subb
mov
push
shll
dec
iret
jle
jns
jne
fisubrs
adc
jns
mov
cmp
lret
or
sub
and
mov
cmp
mov
or
hlt
enter
mov
into
rcrl
add
mov
rorb
daa
cmc
mov
hlt
sub
pop
test
shlb
xor
es
add
xchg
out
push
cmp
je
and
push
out
aaa
jle
popa
icebp
rcl
inc
mov
test
arpl
ss
shrl
inc
cwtl
and
sbb
clc
sbb
adc
int3
andl
mov
add
fldl
sbbb
cmc
adc
mov
rcrl
sbb
push
mov
loopne
fs
push
dec
fstpt
pop
ret
cld
add
sahf
outsb
adc
mov
test
dec
in
test
push
jo
ja
and
testb
pop
dec
sbb
mov
out
sub
cmp
jns
mov
jo
ret
loope
pusha
pop
mov
push
push
xlat
aam
xchg
pop
fwait
clc
mov
in
jg
cmp
cmpsb
mov
dec
push
xchg
and
andb
xor
push
xchg
jns
lcall
pop
call
addr16
cmp
xchg
int3
imul
daa
inc
inc
ljmp
sbb
inc
inc
out
addr16
mov
out
push
mov
loop
and
xor
mov
lods
sbb
mov
cmp
test
pop
rcrl
mov
cwtl
mov
jle
pop
pop
and
mov
jecxz
mov
mov
pop
mov
dec
push
in
sub
push
repz
sbb
outsl
sbb
mov
jno
nop
sti
les
insl
hlt
xlat
mov
popf
mov
push
dec
daa
out
or
daa
repnz
in
and
mov
pop
in
aas
shl
inc
or
notl
add
mov
paddq
out
test
pushf
mov
or
push
cwtl
jno
in
inc
jnp
loop
and
lods
leave
int3
pusha
dec
dec
js
xor
add
and
xorb
cwtl
test
cmp
pop
push
adc
mov
jns
mov
test
sbbl
mov
cwtl
ret
mov
xchg
insl
lock
dec
fbld
sbb
ret
xchg
test
push
and
ds
sub
in
adcb
push
mov
and
xor
add
xchg
repz
ret
js
sbb
xor
shrb
gs
dec
call
mov
or
rolb
or
inc
xchg
mov
pop
push
mov
test
mov
xchg
dec
fs
pop
jle
xor
push
gs
adcl
aaa
sbb
jns
xor
leave
mov
jmp
cmp
insl
bound
cmp
in
xchg
sbb
sbb
pusha
fdivrl
sub
push
jne
mov
aaa
rorl
clc
jnp
and
fcmovb
in
or
add
cli
sbb
into
ret
pop
mov
adc
inc
xchg
sahf
mov
aaa
or
ss
fcomi
push
ret
mov
mov
pop
popa
fstps
inc
pop
das
enter
or
fs
out
shrb
rorb
jns
andb
sub
xor
loop
mov
xlat
lahf
loopne
mov
adc
sbb
mov
insl
sub
xor
or
popf
aaa
stc
test
lret
pop
daa
xchg
sbb
adc
adc
mov
cs
fidivrs
jl
dec
out
ret
pop
jb
xchg
adc
je
cmp
mov
mov
scas
mov
jge
pop
imul
pop
clc
pop
add
addr16
pop
out
scas
xor
jnp
mov
cmp
jno
lds
ret
iret
das
pusha
fnsave
cmp
jg
cmc
pop
rorb
aas
bound
int3
dec
int
fs
ss
push
push
ljmp
jmp
jb
jno
fsubl
add
andl
add
dec
adc
nop
data16
xor
adc
xchg
in
out
dec
xor
addb
leave
push
imul
mov
adc
cmc
xor
and
testb
push
gs
loope
and
shll
adc
xchg
icebp
repnz
loopne
lods
or
and
repz
xchg
mov
mov
bound
sbb
inc
push
add
xlat
dec
jb
lods
aad
les
xchg
mov
out
fstl
bound
mov
adc
and
test
clc
cmc
cmpb
cmp
dec
cmp
xchg
dec
push
sub
in
pop
aaa
add
dec
push
or
xlat
fimull
sub
mov
cwtl
jge
pop
jbe
sub
dec
fincstp
mov
in
xor
xor
cmpsb
xor
mov
add
sub
jnp
insl
add
std
sub
testb
inc
sub
and
test
sbb
cmpsl
hlt
xor
scas
jne
mov
cmp
inc
ljmp
sbb
movsl
out
adcl
or
adcl
pop
movsl
sbb
pop
inc
lret
clc
sub
pusha
or
jl
mov
sarb
lods
arpl
mov
sbb
cmpsl
pop
mov
ds
sbb
add
jnp
jo
jne
iret
push
inc
inc
outsb
xor
xchg
test
mov
push
insl
scas
pop
mov
out
fwait
mov
inc
mov
es
rcl
fisubrs
pop
jmp
ss
rolb
out
mov
lcall
inc
outsb
or
push
push
mov
pusha
dec
xchg
mov
rcrb
arpl
js
push
inc
xchg
adc
push
push
gs
sahf
xor
sbb
or
push
jmp
outsl
add
in
cli
lahf
push
mov
xchg
inc
icebp
mov
and
arpl
cmpsl
sbb
jne
mov
xor
jg
adc
or
inc
cmp
iret
sbb
imul
inc
hlt
mov
adc
insl
sub
pop
out
jae
xor
and
or
lcall
cmpsb
mov
mov
sarb
cmc
sub
out
adc
mov
pop
sub
push
xlat
sbb
movsl
arpl
popl
and
movsl
iret
dec
jp
xchg
sub
repz
mov
adc
inc
dec
test
movsb
mov
push
mov
pop
mov
mov
jg
outsl
fcom
or
cltd
and
decl
or
sub
mov
mov
pop
imul
rolb
xlat
shll
and
je
push
rcrb
icebp
leave
pushf
push
cmc
mov
notl
jbe
or
push
lret
sahf
fs
insl
gs
leave
inc
sti
repnz
shlb
movb
test
rorl
sub
scas
cmp
adc
cmpsb
xor
ret
cli
les
mov
adcb
xchg
test
outsl
test
sub
sub
add
xorl
mov
pop
aaa
or
xlat
ficompl
mov
cmc
xchg
push
andb
sti
in
or
popa
test
mov
and
pop
xor
ja
push
mov
aam
aam
jg
mov
stc
shll
cmp
xchg
sub
adc
dec
push
lahf
push
inc
inc
leave
push
scas
pop
inc
in
in
jmp
mov
jns
xchg
cld
mov
dec
sti
xchg
xor
jmp
jne
daa
mov
or
je
test
or
mov
sub
or
popf
jns
cmp
pop
add
rclb
test
ja
mov
ja
hlt
cltd
add
inc
or
inc
mov
les
js
jp
inc
arpl
add
xchg
leave
fwait
inc
mov
stos
add
test
sti
pop
inc
xor
inc
mov
cli
fwait
pop
lea
pop
sbb
subl
add
enter
adc
sti
testb
ret
in
imul
cltd
ret
lods
mov
cmpsl
dec
sti
pop
popa
mov
in
loope
jmp
sbb
imul
bound
or
xorl
cmp
fistl
cmpsb
int
aad
mov
and
xor
sbb
pop
fists
xchg
mov
addb
lea
jbe
inc
cmc
fisubrl
mov
int3
and
fnsave
pop
lahf
cmp
int3
and
xchg
popa
jne
fidivrs
popf
in
dec
jp
cwtl
inc
xchg
dec
daa
out
je
mov
ss
test
sub
mov
ljmp
mov
fcompl
in
in
dec
icebp
sahf
cmpsl
fidivrl
out
mov
pushf
jmp
scas
scas
das
mov
enter
rcrb
aaa
add
bound
jl
mov
out
daa
pop
fisubrs
loope
call
and
mov
xchg
call
ja
movsb
sub
lods
daa
rcl
enter
add
cltd
mov
mov
aad
xchg
fsubs
pop
xor
pop
jne
int3
inc
fsubrl
mov
mov
ljmp
gs
stos
and
aaa
pop
movsb
sbb
andb
out
sub
popf
sub
addl
sub
fwait
jne
repnz
das
push
faddp
push
testl
mov
mov
jmp
out
cmp
pop
stc
shlb
test
sbb
fbstp
testl
or
arpl
test
movsb
jb
subl
xchg
adc
dec
sub
shlb
pop
lahf
pop
int3
sbb
loop
mov
xchg
sub
lret
sub
sub
inc
jb
cmp
subl
inc
addb
lods
mov
push
cmp
xchg
jmp
pop
int3
je
jecxz
jns
popf
lock
pop
icebp
ret
sub
sbb
mov
sarl
insb
push
loope
aas
adc
test
outsb
mov
in
out
fldcw
in
mov
or
and
mov
test
cmpsb
push
cmpsb
cmp
sbb
push
into
sub
outsb
xchg
dec
fildl
imul
inc
int3
dec
mov
shlb
dec
pop
dec
adc
mov
inc
and
mov
lock
jle
jae
sahf
cwtl
pop
mov
cmp
mov
push
inc
ja
or
mov
ret
loopne
mov
nop
cwtl
fisubrs
mov
aas
cmp
das
testb
adc
sub
mov
pop
sahf
inc
fldt
out
pop
icebp
inc
jp
scas
mov
in
mov
sbb
jne
push
sbb
jg
add
test
add
pop
push
mov
movl
pop
adc
mov
andl
jmp
xchg
leave
pop
or
out
lods
xor
cmp
xor
dec
loopne
lcall
sbb
push
mov
loopne
rorl
add
mov
divb
std
repz
cmp
mov
dec
push
pop
jno
dec
ret
fdivr
mov
scas
xchg
test
xlat
pop
enter
mov
lods
addb
fnstenv
mov
xor
cmp
jp
lahf
jb
nop
dec
cmpsl
cwtl
enter
imul
std
out
xchg
mov
cmpsb
outsl
mov
fsub
push
ljmp
pop
inc
cli
inc
notb
pop
ret
fs
add
pop
testl
pop
push
mov
hlt
movsb
lahf
shl
push
outsl
out
insl
ljmp
pop
pushf
loopne
ret
aad
inc
mov
fadd
pushf
dec
icebp
movsb
mov
mov
sahf
sub
dec
leave
movb
add
and
lock
jbe
mov
adc
lret
sbb
inc
outsl
loop
mov
outsl
leave
shlb
xchg
aas
into
imul
push
cmp
cmp
sahf
les
mov
fst
insb
and
popa
dec
test
cmp
bswap
pop
xor
lret
mov
mov
pop
ja
insb
inc
push
xor
lods
mov
inc
lods
adcl
imul
inc
mov
inc
sub
jmp
sbb
xchg
ds
loop
sub
mov
out
shrb
and
dec
cmc
jns
sahf
pop
in
mov
popa
lods
and
orps
sub
and
outsl
std
mov
loopne
push
aaa
scas
push
fistl
in
fwait
clc
test
bound
xor
add
jno
mov
cli
test
cs
test
fidivrl
ret
xchg
shrb
aad
lret
shll
fbstp
dec
xor
push
pop
mov
xchg
jne
or
pop
subb
shlb
mov
dec
call
in
ret
xchg
dec
add
sub
out
fildl
xchg
lds
andl
push
fucomip
pop
cmp
out
inc
dec
iret
ds
in
loop
movsl
pop
orl
sbb
ret
push
idiv
nop
cs
mov
and
jle
add
cmp
ds
es
push
cltd
ret
pop
pop
ret
ja
mov
push
sbb
fwait
dec
rep
int3
out
test
loop
iret
aam
enter
mov
or
mov
or
push
rcrb
sbb
xchg
insl
mov
ss
sub
outsb
popl
jmp
and
mul
das
mov
fldt
cld
xchg
sti
loopne
out
inc
lcall
leave
cmp
movsb
push
ret
sbbb
dec
loop
and
jl
scas
mov
scas
faddl
and
pop
cmp
out
shr
sbb
ret
lds
enter
out
xchg
not
xchg
ret
fsubrl
cmpsl
add
xchg
push
sbb
and
adc
xchg
sarl
xlat
stc
lods
sub
dec
adc
inc
fsts
push
mov
push
jecxz
cli
loope
das
repnz
inc
push
sub
inc
and
cmp
sub
stc
xchg
insb
cmc
loopne
stc
or
dec
jno
movsb
lods
cmpsl
jns
mov
sub
pop
jp
shrl
in
pop
pop
shl
xchg
add
je
int
cld
sbb
adc
jb
sbb
imul
cld
cmp
dec
sub
sbb
arpl
sbb
cmc
jle
mov
sahf
in
fs
test
or
sub
fdiv
stos
shl
xchg
cmp
lahf
mov
inc
mov
xchg
dec
add
push
pop
push
xchg
movsb
inc
jae
sti
sbb
cltd
jb
push
sahf
pop
inc
mov
pop
mov
in
jecxz
cmpb
mov
mov
push
and
fwait
cmp
jle
inc
sbbl
xor
test
jnp
mov
test
mov
gs
push
sub
sahf
sti
push
sbb
pop
aad
pop
lret
orl
sub
out
data16
add
fiaddl
popa
cwtl
add
clc
cltd
push
push
mov
mov
cmp
ss
push
lods
mov
push
mov
fsubs
fbld
inc
aaa
es
dec
mov
or
add
popl
scas
popf
mov
cmp
pop
data16
scas
push
xchg
pop
sahf
mov
jle
fucom
lock
insb
je
shlb
jne
jbe
iret
stos
int
lahf
sbb
adc
dec
pop
ja
in
inc
stos
data16
push
pop
mov
clc
movsl
add
mov
push
ja
lds
push
xchg
xchg
in
loop
fnstenv
test
data16
icebp
insl
lahf
pop
inc
sti
pop
and
add
xchg
dec
aam
xchg
test
xlat
dec
in
stos
ss
pop
sub
lock
inc
mov
out
mov
and
xchg
sub
sbb
mov
cwtl
imulb
out
enter
adc
jns
les
movsb
cmp
mov
fs
mov
cld
lahf
push
adc
lds
dec
into
in
and
jl
xchg
xorl
or
push
dec
push
mov
int
and
leave
call
js
lock
mov
movsl
and
mov
add
xchg
das
fcoms
aas
or
xchg
test
sti
dec
inc
mov
push
mov
pusha
out
mov
pop
xchg
std
or
outsl
mov
mov
pop
jns
bound
sbb
cmpsl
lcall
xor
mov
cld
jns
push
xor
ret
mov
jp
in
int
popf
jae
pop
cltd
fsubrl
dec
jl
mov
stos
les
jl
imul
xchg
push
dec
clc
adc
lods
in
into
or
hlt
dec
cmpsl
or
push
pop
or
cltd
inc
into
sub
and
loope
mov
and
insl
and
jmp
data16
pop
mov
and
aad
push
sbb
dec
testl
or
pop
out
repz
add
fisubl
xlat
adc
adc
mov
mov
jmp
sbb
test
jnp
push
pop
sub
fdivs
ljmp
push
out
ret
inc
sbb
insb
ficomps
and
xchg
movsb
fistl
and
cmp
xor
sbb
lock
es
out
mov
dec
icebp
ss
fwait
subb
mov
dec
push
lods
mov
mov
out
hlt
int
jns
sub
cmp
xor
and
loopne
addb
pushf
into
mov
fs
dec
dec
jmp
add
dec
mov
into
add
cld
shrl
pop
dec
hlt
ret
int3
inc
loopne
cmp
add
rcr
push
jb
mov
sub
mov
outsl
jmp
test
or
lds
iret
jmp
loopne
insb
pushf
enter
data16
cmp
jge
mov
hlt
mov
pop
jp
test
push
adc
sbb
test
in
or
rcll
scas
in
jno
dec
jo
xor
lods
mov
pushf
insb
repnz
and
inc
pusha
movsl
js
out
out
repnz
mov
inc
shlb
leave
push
mov
test
cmp
scas
imul
subb
jns
push
push
cmpsb
xchg
xor
pusha
mov
jecxz
inc
push
repz
pop
pushf
iret
sti
inc
ds
xor
lret
repz
push
fildl
add
jae
add
in
jmp
ja
fwait
mov
mov
bound
inc
pop
and
pop
inc
je
push
scas
leave
xor
jno
or
or
jge
movsb
mov
or
adc
ficompl
push
mov
lcall
fs
dec
insl
mov
push
mov
mov
mov
jns
xor
icebp
gs
out
mov
add
xor
jp
pop
xlat
jo
movsl
lea
imul
cmp
xor
dec
pusha
ljmp
enter
call
push
inc
pop
filds
push
imul
sbb
and
pop
cs
cs
push
adc
fcmovb
sub
imul
inc
orb
jne
es
shlb
cmp
into
mov
fs
xor
adc
in
push
push
inc
scas
and
adc
lods
push
repnz
in
mov
dec
jmp
repnz
xchg
pop
iret
jb
stos
lea
dec
mov
movsl
adc
ja
clc
sarl
dec
mov
stc
push
es
mov
cmpsl
clc
out
cs
mov
dec
fwait
dec
adc
loop
pushf
push
stc
add
inc
mov
pop
icebp
les
pop
repz
pop
pop
cltd
pop
adcb
sbb
scas
loop
or
add
pop
arpl
sar
sub
push
sbb
test
loop
jecxz
ror
out
test
repnz
sub
ret
loop
adc
jne
orb
sar
outsb
xor
push
das
xchg
cmc
push
es
and
xlat
clc
inc
adc
or
jp
fsubr
in
jl
in
sbb
icebp
mov
dec
push
pop
cmpsb
iret
lds
jp
xchg
pushf
pop
outsb
jns
cmp
add
sub
and
jecxz
adc
loope
popf
xor
sub
lret
xchg
cmp
data16
aaa
sub
jne
cmpsb
pushf
pop
aam
lock
data16
cltd
je
push
fldl
jne
js
mov
fs
mov
adc
movsb
dec
push
ds
cwtl
mov
pop
loope
in
in
sbb
mov
fdiv
xor
cmp
dec
sbb
mov
loope
ss
mov
shlb
push
mov
or
push
xchg
push
mov
adc
pop
inc
stc
fdivr
mov
mov
xor
pop
jae
adc
aas
xchg
cmc
stos
jp
or
pop
lods
pop
mov
adc
push
xchg
mov
ljmp
out
inc
jae
inc
adc
jno
scas
fnop
fwait
imul
mov
sub
sbb
jecxz
xor
sub
push
iret
fdivs
push
aam
notb
mov
push
arpl
movsl
jecxz
xchg
aaa
not
cmp
neg
xor
mov
adc
leave
out
mov
push
push
fmuls
aad
gs
adc
adc
add
xor
aaa
aas
add
sub
xchg
lods
out
sbb
pop
jb
repnz
dec
pop
pop
fcoms
or
fcompl
mov
add
push
jnp
je
dec
push
cmp
loopne
cs
es
insl
enter
adc
and
sub
mov
cli
and
mov
xchg
sahf
dec
mov
or
ja
add
fimuls
fnstenv
xchg
fiaddl
es
fisubs
jb
inc
pop
imul
dec
xor
sbb
jbe
sub
or
push
popa
inc
addr16
rcr
imul
out
jp
sbb
mov
push
nop
js
loope
mov
xchg
cmpsb
push
sbb
push
cwtl
leave
mov
frstor
adc
sub
and
push
inc
add
call
inc
dec
lcall
mov
aaa
cmp
or
pop
arpl
inc
jg
cmp
xorl
sar
xor
out
adc
xchg
push
xchg
push
incb
sbb
xchg
das
adc
xchg
push
jo
mulb
mov
jae
fsubrl
pusha
and
mov
insb
mull
xor
jle
or
mov
pop
jbe
adcl
fisttpll
add
scas
xchg
pop
jge
outsb
sbb
add
pusha
mov
shrb
mov
jne
push
jnp
imul
sbb
testl
jo
mov
xchg
lret
pop
add
movsb
js
imul
and
sub
xchg
mov
xor
push
in
sbbl
fisttps
pop
jbe
mov
lods
lods
repnz
pop
cld
imul
outsb
lret
lahf
inc
ret
inc
or
rcll
outsb
mov
push
xchg
les
call
inc
out
adc
mov
stos
mov
and
mov
dec
jecxz
cld
aam
fistl
cmp
and
loop
push
iret
lcall
adc
jnp
jge
or
subb
sub
gs
jns
das
test
mov
adc
test
cs
jg
ror
sbb
xchg
repz
or
stc
cli
sbb
xchg
sbb
pusha
mov
movsb
push
push
lcall
pop
popf
mov
sbb
movsb
in
iret
lock
iret
mov
push
loopne
mov
out
movsb
push
aas
mov
dec
mov
or
test
jae
mov
sub
adc
out
jmp
out
enter
mov
mov
pushf
cmp
dec
out
xor
cmp
clc
sbb
mov
sub
or
rcl
add
adc
jns
roll
jmp
mov
inc
test
mov
add
jb
jbe
xchg
xor
add
aas
and
std
test
mov
adc
stc
pusha
cmpsl
enter
imulb
adc
enter
shlb
xor
sbb
sub
jne
mov
aad
std
ficoms
cs
mov
sbb
loop
push
push
sbb
pop
pop
xchg
sub
loop
pop
xor
fwait
cli
or
subl
and
xor
mov
jb
push
mov
sbb
lahf
mov
bound
push
push
jb
dec
fs
dec
add
iret
xor
mov
xor
jae
inc
movsl
orb
sti
jb
xchg
jo
ja
xor
loopne
add
sbb
or
ds
pop
sarb
add
bnd
pop
dec
cmp
insb
and
les
pushf
cmc
fwait
pop
test
aaa
sbb
addr16
movsl
add
push
pop
pop
loopne
std
fidivs
shlb
dec
or
aas
cmp
fucom
pop
dec
sub
insl
into
rolb
xchg
enter
mov
js
jb
sahf
adc
and
jp
mov
negb
mov
mov
mov
add
jae
push
xchg
out
jl,pt
movsl
mov
jecxz
or
jne
jge
mov
in
stos
push
push
in
mov
sbb
push
cmp
int
pop
fwait
lea
pop
cld
punpckldq
gs
insl
popf
or
in
stos
shrb
in
lret
sbb
mov
mov
orb
dec
stc
in
push
or
cli
or
adcl
loopne,pt
xor
add
xabort
xorb
xlat
dec
int
sarb
pop
test
pop
jne
dec
or
mov
sbb
push
call
pop
testl
aam
pushf
sti
xlat
test
loop
adcb
jle
notb
dec
sbb
loop
sbb
push
xor
scas
std
sbb
cmp
fsubrl
inc
lock
cs
ds
mov
pushl
lods
adc
mov
mov
cli
cmpl
adc
mov
pop
fst
pusha
jmp
xor
aam
xor
dec
enter
popf
pop
sbb
mov
xchg
iret
addr16
xlat
inc
mov
push
add
push
push
jmp
pop
fstps
jne
add
jo
cmc
add
pop
inc
xor
lcall
mov
in
mov
out
mov
lock
xchg
loop
cmp
lcall
dec
pop
mov
stc
data16
iret
and
jb
inc
in
jp
mov
shll
xor
pushl
xchg
decl
aaa
scas
xchg
mov
bound
jl
das
add
cmp
dec
xlat
lret
and
sub
push
fwait
push
sbb
and
pop
outsb
sbb
jecxz
aas
dec
xlat
inc
inc
pushf
imul
mov
jne
xor
loop
xor
fildll
fsubs
cmpsb
cmc
mov
cld
loop
js
cwtl
bnd
mov
ret
mov
mov
sahf
add
mov
daa
loope
out
push
cs
inc
jge
js
les
pop
push
mov
or
mov
pop
cmp
popa
xchg
pop
push
ret
inc
pop
inc
xor
push
fs
jge
add
fnstsw
fs
call
inc
dec
ljmp
sbb
mov
repnz
mov
dec
sbb
rcrb
mov
aam
mov
jb
lret
cltd
outsb
pop
ror
pop
jge
push
pushf
add
cmp
scas
add
jp
cmp
mov
inc
push
mov
dec
adc
jp
cmp
fimuls
push
sbb
mov
fsubl
sub
fsubp
sub
enter
imul
das
sub
pushf
cld
sub
jne
fcompl
call
jbe
int3
cmpsb
out
cmp
jmp
jnp
ljmp
and
cld
add
mov
or
rol
arpl
sbb
dec
js
mov
flds
addr16
push
inc
fwait
mov
cmp
sub
or
hlt
cmpsl
push
mov
inc
adc
nop
sbb
mov
xor
sarb
arpl
sbb
fistl
adc
jnp
data16
mov
xchg
shll
mov
dec
jmp
rclb
mov
xchg
xchg
jecxz
cmp
daa
pop
dec
out
push
jno
sub
cltd
xlat
cmp
xchg
jo
int
mov
ror
sbb
out
pop
or
xlat
push
adc
jo
stos
jecxz
add
pop
and
std
inc
pop
mov
pop
and
cmovg
rolb
mov
mov
loope
sarl
cmpsb
sub
bound
push
out
sub
inc
or
testb
fwait
cmpl
pop
mov
lods
into
dec
and
stos
loop
jle
fs
lret
mov
je
repz
xchg
lods
lock
push
scas
insl
int
sub
pop
lret
or
lret
inc
xchg
into
cmpsl
into
mov
std
sbb
jg
ror
jne
sbb
int3
push
and
inc
jecxz
adc
or
iret
aad
inc
push
aam
test
xor
fabs
cmp
fcompl
lcall
adc
jb
mov
sarb
inc
cltd
test
mov
mov
int
push
and
mov
repz
cmp
into
or
mov
add
divb
bound
jmp
xor
std
lea
imul
sub
pop
loopne
cmp
arpl
movsl
mov
adcl
lcall
mov
and
push
xchg
or
jo
dec
into
dec
sbb
outsb
or
mov
xchg
clc
out
iret
cld
mov
jbe
mov
dec
dec
sbb
jb
mov
cmp
xor
mov
repnz
xchg
rcr
icebp
and
cmp
sbb
mov
adc
hlt
lods
les
mov
add
into
xor
jae
xchg
lods
jmp
push
add
inc
loope
dec
push
arpl
jecxz
rcl
and
rol
sub
mov
inc
cmc
mov
jbe
ja
leave
jl
imul
push
jg
pop
fstl
movsb
add
xchg
xor
or
sbb
push
test
xor
jnp
push
adc
mov
cmp
gs
pop
lret
mov
add
pop
mov
mov
sub
in
push
ficomps
dec
fdivrl
push
js
cmp
ret
filds
int
or
loop
inc
pop
add
sti
outsl
lcall
mov
ss
cmp
fsubl
int
rorb
sti
enter
cs
jb
adc
aaa
data16
sub
ret
test
ja
pop
lea
jns
lock
push
lahf
xor
xchg
cmpsb
dec
mov
mov
daa
daa
cmc
imul
inc
jno
mov
sti
pop
xchg
adc
repnz
notl
ljmp
push
or
out
jg
push
ljmp
mov
push
lock
dec
pop
pushf
out
lods
dec
mov
jg
pushf
push
cmc
xor
and
xor
push
repz
sub
jmp
mov
dec
popl
je
xor
push
data16
test
scas
xchg
scas
push
xor
fistpll
fdivs
and
jo
imul
add
mov
jno
add
fadds
mull
xor
jp
lret
negl
xchg
test
ljmp
pushf
jmp
cmp
hlt
dec
das
sbb
rcll
aaa
pop
adc
add
pop
sub
repnz
pusha
mov
push
imul
inc
mov
jbe
andl
jae
fiaddl
cltd
mov
push
shl
pop
out
outsb
aam
and
out
jmp
xchg
mov
aaa
stos
test
mov
xchg
or
icebp
mov
pop
arpl
xchg
push
enter
mov
js
or
dec
mov
nop
das
movsb
shlb
test
out
nop
xchg
xchg
es
sbb
test
xor
les
mov
mov
pop
adc
cmpsl
call
xor
and
push
xchg
mov
push
inc
sti
inc
ss
add
adc
filds
ffreep
lea
daa
or
rclb
or
test
test
pop
shll
out
jno
push
ja
add
dec
push
xor
pop
inc
xor
pop
cld
mov
pop
aas
lods
imul
in
dec
ds
pop
jl
ljmp
jnp
mov
fwait
push
mov
xor
cltd
push
add
int
jae
frstor
test
clc
dec
js
pop
jns
in
std
adc
imul
jae
scas
mov
test
cmpsl
sbb
int3
fsubl
jecxz
jb
xchg
jmp
jle
sbb
adc
cmp
push
mov
arpl
jle
popf
stos
mov
sbb
xor
adc
mov
mov
mov
out
or
aaa
mov
xlat
call
jmp
pop
push
sub
lahf
xor
adc
repz
jnp
out
cmpsl
sub
insb
dec
mov
mov
inc
mov
sub
dec
cs
cmp
xchg
mov
pop
and
loop,pn
xchg
cwtl
add
or
adc
sahf
or
sahf
notl
cs
mov
inc
es
out
push
cs
insl
jp
cmc
fidivrs
decl
sub
xchg
in
pop
ljmp
outsb
ret
xchg
cmp
mov
cli
cmp
dec
test
out
gs
jae
insl
mov
lcall
je
push
xchg
aam
data16
push
decb
mov
andl
sahf
enter
dec
mov
outsb
and
imul
sbb
xchg
mov
mov
dec
dec
mov
xor
out
popa
pop
mov
fwait
in
jp
jbe
outsl
or
das
add
push
lea
into
sub
movsb
mov
and
dec
cmp
add
ljmp
insl
stc
inc
and
repnz
push
sbb
mov
les
cld
and
push
sbb
stos
lret
mov
jns
int
mov
movsl
xor
loopne
fisubl
adc
stc
inc
in
push
sti
out
cmp
lret
adc
fdivrs
dec
sti
jmp
push
jbe
call
jp
pop
mov
mov
in
adc
loop
movsl
dec
push
ss
lock
mov
inc
mov
cltd
or
mov
or
adc
sub
scas
push
cltd
or
pop
stc
jg
dec
js
dec
sbb
sub
inc
stc
push
inc
sbb
leave
stc
xchg
je
cmpsl
rol
dec
jge
test
cmp
dec
scas
inc
jl
pop
cmpsl
stc
stc
fldt
aad
dec
stos
push
sbb
out
dec
cld
pop
jne
mov
test
jnp
loope
pop
ret
cmp
sbb
aas
lds
sub
inc
lods
jle
cltd
bound
adc
inc
dec
arpl
add
repz
outsb
inc
jns
ljmp
dec
in
lret
sub
dec
adc
stos
test
pop
push
jge
hlt
push
pop
lahf
and
push
mov
add
xchg
jbe
lcall
sbb
inc
dec
mov
and
mov
and
inc
repnz
ret
mov
out
xlat
out
stos
out
sub
sti
or
mov
push
sar
pop
xchg
pushf
inc
fsubr
jmp
cltd
je
fwait
dec
sub
pop
sbb
in
xor
pop
cltd
sbb
add
in
fwait
add
xchg
add
xchg
mov
inc
pop
push
test
cmp
outsl
mov
xor
mov
sbb
inc
add
ret
add
mov
lock
roll
mov
mov
inc
mov
jno
notb
dec
fdivs
mov
cmp
push
sbb
popf
lods
ficoms
lods
jp
or
mov
dec
jge
and
sub
das
cmp
adc
dec
pop
mov
push
add
dec
jns
or
mov
pop
lock
push
adc
and
cmc
rcl
fbld
cs
sbb
mov
adc
clc
repnz
in
std
arpl
add
or
int3
xchg
mov
shl
movsb
mov
cltd
jae
or
loop
out
loopne
pop
in
mov
jmp
mov
sub
enter
movsb
test
xor
push
pop
in
andl
fmuls
push
scas
pop
jge
repz
sbb
mov
subb
mov
cmpsb
cwtl
xchg
scas
mov
fstl
aas
jns
cmpsb
arpl
adcl
insb
push
ret
arpl
jge
mov
jns
js
in
cmp
loopne
test
enter
jbe
jge
and
gs
ljmp
xor
sub
sub
lds
mov
adcb
andl
mov
scas
lcall
jmp
jge
mov
ret
sub
sbb
loope
and
or
fildl
mov
sub
fnstsw
mov
and
inc
xchg
xchg
pop
push
dec
in
xchg
jge
cmp
jmp
test
out
ds
xchg
popf
sub
aas
int3
repz
pop
xchg
xchg
int3
movsl
mov
dec
lods
push
push
imul
inc
fwait
adc
lret
call
pop
xchg
jl
mov
out
xor
test
push
fisubs
hlt
cs
shlb
inc
lahf
dec
add
cmp
aad
mov
push
mov
adc
pop
cli
xchg
mov
cmp
roll
sbb
sub
ljmp
loop
push
negb
repnz
push
push
xchg
pop
add
pop
jle
cmp
cwtl
jno
out
push
and
pop
cld
cmpsb
adc
lods
lods
jne
adc
pusha
daa
jae
cmc
jle
inc
dec
imul
mov
xchg
sbb
rorb
pop
ljmp
test
popl
fxch
inc
cli
arpl
xor
push
cmovae
mov
xor
mov
daa
into
rcrl
or
dec
addr16
cmp
lcall
jbe
sub
mov
push
addl
popa
stc
or
push
cmpsl
add
dec
pop
push
and
mov
sarl
push
jmp
aad
push
mov
out
dec
jae
repz
mov
lret
sbb
xchg
sub
jmp
inc
stos
pop
hlt
pushf
in
enter
mov
jecxz
sahf
call
in
mov
out
and
jmp
arpl
push
insl
loopne
imulb
add
lods
lods
cwtl
popl
inc
lds
lods
adc
icebp
enter
pop
or
repnz
in
into
lods
xchg
or
cmpsb
dec
pop
fldl
js
loop
sbb
repz
insl
gs
xchg
test
aaa
repnz
out
fisubs
cli
inc
lret
mov
and
inc
dec
outsb
fwait
enter
cmpsb
dec
aas
push
sbb
adc
aad
lds
and
movsb
and
sti
mov
xchg
mov
cmpsl
pop
shll
lock
addr16
add
pop
enter
out
inc
mov
sub
subb
lcall
sarb
xchg
fisubs
mov
lea
push
and
clc
inc
add
lods
sbb
outsl
pop
in
test
push
loope
mov
sbb
gs
push
xor
leave
insb
sub
mov
pop
jle
xor
add
inc
pusha
sbb
addr16
aad
add
sub
mov
mov
cli
stos
jmp
aam
scas
push
cmp
ret
clc
jp
jmp
test
out
inc
aas
cmp
xchg
add
pop
stc
iret
adc
icebp
dec
mov
cmp
stc
xor
std
out
dec
hlt
xchg
xor
xchg
mov
popf
and
pop
popf
or
push
cmp
mov
dec
fstpt
cmpsl
jno
sbb
insb
push
inc
cmp
sbb
scas
std
inc
inc
jno
in
rorl
popf
jecxz
pop
popa
mov
inc
sti
insb
inc
je
ja
mov
sbb
xchg
mov
mov
int
dec
fisttpll
in
mov
pushf
jbe
mov
cld
and
add
leave
mov
repz
cwtl
ret
pop
ret
cltd
outsb
dec
push
xchg
call
or
ja
sarb
pushf
cld
dec
push
lret
pop
shl
pushf
mov
xlat
fisubrs
add
mov
jno
add
sub
shrl
and
mov
sbb
xor
mov
xor
mov
jns
out
test
jmp
pop
xlat
jbe
xchg
jecxz
mov
xchg
dec
into
xchg
mov
sub
jle
and
xchg
mov
icebp
loope
mov
es
loopne
xchg
shl
imul
lods
test
cmpsl
mov
adc
mov
add
sti
fbstp
or
fucomi
sbb
xchg
in
ljmp
ror
xchg
call
and
mov
movsb
cmc
repz
and
lcall
sti
shlb
adc
xor
mov
repnz
mov
add
cmpsb
data16
jp
jle
ss
or
scas
mov
or
idiv
les
jno
xchg
ss
and
cmp
mov
jne
ret
imul
mov
pop
push
data16
js
xchg
dec
or
cli
xchg
loopne
lods
and
lods
pop
or
cmp
iret
out
sysenter
adc
sub
popa
lea
jmp
sub
jmp
cld
mov
ret
add
jg
scas
cld
pop
xchg
mov
jbe
sub
dec
jg
incb
add
dec
lock
sub
dec
inc
daa
xor
xchg
lock
or
cmp
ljmp
test
mulb
sbb
pusha
sub
cltd
nop
xor
push
mov
xchg
in
xchg
inc
addr16
or
jecxz
std
test
push
cmp
add
das
push
adc
es
cs
xor
cmp
into
xlat
jg
in
mov
out
or
not
stos
adc
dec
lret
lret
mov
and
sar
inc
aad
in
into
jo
jbe
or
mov
push
arpl
mov
lock
jmp
jp
nop
cmc
sti
loop
test
add
push
jb
jno
xchg
aad
sahf
add
outsl
test
movsb
cmpb
lcall
sbb
test
cmp
pusha
jae
xchg
into
into
xchg
cmp
mov
in
jb
movsl
and
mov
pop
inc
inc
cmc
push
lock
je
pop
and
mov
push
inc
cmp
int
jne
movsl
sbb
aam
lods
cld
push
icebp
fwait
nop
inc
je
lock
jle
leave
test
push
push
add
cmp
xchg
inc
nop
push
mov
push
jmp
xor
adc
out
ret
shrl
clc
cwtl
seta
push
rorl
add
fs
or
sahf
shll
jecxz,pn
add
push
pop
cmc
jecxz
cmp
cli
cld
cmp
mov
addr16
add
cmp
rol
dec
iret
sbb
out
inc
lcall
imul
xlat
sub
bound
dec
scas
dec
insb
out
jne
cmp
inc
movsb
mov
testb
adc
push
cmp
adc
push
lds
es
inc
das
lahf
inc
mov
dec
mov
outsl
mov
inc
imul
cmp
mull
in
mov
ds
inc
pop
and
iret
jmp
inc
in
clc
aad
and
in
subb
push
mov
cmp
enter
and
lea
int3
mov
pop
mov
mov
and
fcmove
cli
icebp
neg
fwait
jne
push
xor
pop
lret
aas
roll
lret
imul
cltd
jbe
cmp
mov
nop
gs
xchg
sbb
or
ss
push
lret
pushf
iret
aaa
ret
ret
movsb
inc
mov
cli
fwait
call
jno,pt
and
fs
rclb
inc
and
enter
ffree
xchg
push
rcll
jp
test
jmp
jmp
dec
xor
xchg
enter
outsb
sbb
mov
or
jg
roll
popa
lahf
pop
arpl
dec
mov
out
jl
push
xor
pop
inc
stos
mov
iret
push
aas
out
add
sahf
int3
xlat
mov
and
dec
sti
mov
aam
lcall
jmp
mov
add
das
imul
lcall
mov
lds
or
gs
aam
out
push
or
pop
pop
dec
icebp
lret
js
adc
shr
pop
lods
mov
in
popa
inc
xor
sbb
xchg
ljmp
push
mov
icebp
xor
fidivl
push
clc
mov
rcrb
dec
adc
insb
xchg
add
push
iret
out
or
adc
mov
cmp
es
sahf
push
in
repz
aaa
in
sbb
xorl
adc
dec
imul
mov
movsb
ror
loopne
lahf
jo
mov
out
inc
mov
push
out
mov
outsb
cwtl
push
loopne
dec
jg
push
cwtl
sarb
scas
cs
sbb
outsb
cmp
outsl
psrlq
and
push
sbb
push
jbe
fimull
out
std
jne
rcrl
sub
sbb
shr
xlat
pop
cmp
cmp
pop
adcb
or
push
sub
sarb
mov
mov
xchg
pushf
add
ja
lods
test
cmp
dec
inc
daa
lods
xor
mov
stc
icebp
push
sbb
shrb
fwait
adc
je
adc
adc
loope
call
cmp
adc
out
mov
mov
jmp
mov
jl
push
repz
mov
sbb
mov
movb
das
push
cmc
cmp
adc
xchg
jb
push
and
lea
fstp
sahf
add
out
test
xor
int
xor
or
mull
loop
mov
aas
inc
aaa
pop
lods
scas
jl
cmc
enter
rcl
pop
and
leave
in
fistl
lds
arpl
sar
sahf
insl
sbb
pop
or
xchg
clc
dec
push
lret
and
scas
sub
and
cmp
lret
nop
mov
cwtl
push
add
mov
jae
add
rolb
xlat
push
xor
mov
jmp
dec
scas
loop
cmc
mov
test
call
mulb
xor
lods
xchg
lods
mov
fsubp
cmp
pop
xor
cmp
ret
jmp
dec
pusha
sbb
ror
pop
sub
or
fnstcw
shl
xor
xlat
mov
movsb
fsubp
mov
neg
test
pop
pop
push
dec
mov
in
fstpt
xchg
sub
repz
push
mov
mov
adcb
inc
call
adc
ds
pusha
jno
ss
andl
mov
sti
aad
pop
loope
mov
jge
pop
das
test
mov
gs
jl
or
adc
cld
or
inc
xchg
push
lock
lret
int3
dec
or
xchg
mov
mov
xor
shrl
repz
sahf
push
leave
inc
rcll
rclb
inc
sarl
inc
aad
stos
fadds
xor
add
mov
or
jno
pop
orl
orb
xchg
jb
inc
push
add
fisubs
cmp
repz
sbb
jbe
aaa
int
and
into
dec
ficoml
mov
xor
dec
mov
in
mov
sti
sub
inc
lods
sti
xor
xchg
xchg
lahf
mov
enter
cmpsb
clc
js
test
rorb
pop
dec
rcr
mulb
mov
out
sub
sub
pop
mov
das
addl
mov
jae
mov
outsl
ret
aas
push
xor
push
sbb
mov
mov
es
pop
or
mov
in
in
ror
mov
cmc
icebp
fidivl
aam
xor
push
push
test
lods
jecxz
jmp
in
leave
sahf
or
add
jl
or
xchg
insb
sub
leave
cmpsl
or
scas
push
sbb
lds
adc
call
pop
dec
xor
xor
shrl
adc
ret
enter
stos
mov
ss
in
mov
or
inc
dec
gs
and
sub
fiadds
xchg
imul
add
add
out
nop
add
pop
mov
mov
mov
cmp
inc
add
les
sbb
ffreep
dec
mov
xor
cmp
cmp
mov
inc
or
adc
insl
xor
lods
jne
dec
jnp
jne
jge
add
mov
pop
add
push
ret
mov
bound
push
aam
jo
and
ljmp
je
dec
mov
enter
xchg
fwait
adc
cmp
pop
lret
inc
imul
out
aad
or
jge
repz
js
mov
mov
push
sahf
jne
mov
cmp
into
mov
xchg
dec
mov
lods
mov
push
dec
popa
out
out
clc
cmpl
xchg
mov
mov
test
jle
lock
add
adc
cvtdq2ps
int
and
fistpll
xchg
cmp
ret
adc
lea
rcrb
jp
jp
mov
pop
mov
movsb
ret
aad
mov
inc
sub
out
test
test
push
sar
jns
jb
xchg
mov
cmc
subb
pop
shll
ficompl
in
into
imul
lahf
sub
flds
lds
cmpsl
jg
mov
cmp
push
aam
push
aaa
arpl
in
enter
jnp
mov
je
in
mov
and
sbb
enter
mov
shrb
cmpsb
js
rolb
es
addb
pop
jo
pop
cs
cmc
loop
out
xchg
pop
add
xchg
gs
or
imull
xor
aas
mov
mov
jmp
jno
push
lret
xor
daa
add
fcmovu
cmp
arpl
hlt
mov
pop
jb
xlat
nop
fcoml
rcrl
iret
push
jmp
xlat
int3
arpl
jnp
cld
out
movsl
xchg
iret
sbb
sbbl
pop
cld
cmp
nop
stc
mull
mov
add
xor
fldcw
mov
lock
inc
lahf
mov
fcos
aad
cmp
mov
or
mov
jecxz
insb
loope
jno
pushf
push
shll
or
xlat
pop
mov
ljmp
jge
or
fimuls
sbb
and
sub
cs
into
jg
aam
int
jge
pusha
lahf
inc
dec
xchg
sub
pop
pop
cmpsb
sub
pop
ret
push
hlt
sbb
add
les
movsb
or
popf
cld
shrb
scas
ret
mov
into
push
xchg
js
shll
adc
mov
mov
xlat
pop
repz
aas
mov
inc
push
cltd
xchg
sbb
pushf
movsl
cli
pop
and
push
xchg
lea
aaa
cmc
mov
push
dec
fisubs
movb
xor
jbe
pop
lods
repz
mov
fwait
cmp
dec
push
lods
mov
cmp
icebp
cmp
push
push
inc
rol
sbb
fistps
mov
ljmp
inc
jnp
repz
or
mulb
jae
jns
rorb
inc
xchg
into
rorl
movsl
es
jmp
sbb
and
popf
dec
pop
fiadds
add
insb
xchg
mov
pop
nop
or
mov
mov
mov
xchg
push
and
cltd
aad
int
or
in
ret
or
mov
push
mov
pop
add
pusha
popa
test
jp
stos
sub
sbb
push
fildll
jp
scas
xor
sbb
scas
popf
ljmp
leave
js
es
mov
and
test
add
mov
jge
mov
int
js
rolb
and
fadds
test
sbb
xor
notb
sbb
inc
aas
lahf
cmp
mov
inc
jle
das
fsubrl
cmc
lahf
dec
pop
mov
dec
and
add
sub
pop
movsb
cmp
das
adc
call
cmp
sub
mov
dec
or
mov
add
xchg
inc
movsb
jbe
inc
and
push
dec
mov
je
jg
mov
push
fistps
imul
mov
jne
popf
lcall
lds
or
scas
xchg
sub
adc
les
cmc
dec
sbb
push
loop
push
and
sub
dec
push
push
lods
or
imul
xchg
rclb
dec
leave
les
inc
cmp
xor
adc
in
test
jae
lea
mov
mov
fwait
std
jne
data16
inc
cld
rorl
mov
pop
inc
test
aam
stc
repz
iret
dec
sbb
xorb
inc
icebp
outsl
adc
in
out
mov
in
inc
pop
add
cmp
test
sub
inc
fiaddl
add
pushf
outsl
push
ss
sti
lcall
loopne
outsb
jmp
pop
mov
stos
movd
or
mov
xor
inc
in
loopne
in
pop
pusha
imul
stos
xchg
inc
fnsave
cmp
dec
dec
xchg
repnz
mov
adc
pop
loope
clc
sbb
mov
jmp
imul
pop
mov
js
push
sbb
sub
mov
ss
or
xchg
lods
and
pop
jmp
push
inc
adc
dec
lods
outsb
mov
in
mov
mov
ja
sarl
sub
push
outsb
push
pop
arpl
mov
ds
adc
inc
dec
out
sub
xchg
lcall
scas
rcrl
jmp
xchg
jmp
add
ror
ds
frstor
popf
sub
dec
daa
jae
dec
pop
movsl
add
ffreep
inc
cs
fwait
jno
and
or
stos
popf
cmc
lret
xor
iret
mov
mov
loopne
lret
inc
dec
sub
lods
xor
ds
cmpb
fwait
jns
mov
jbe
daa
adc
xor
cwtl
idivb
js
xchg
aaa
cmpb
lcall
cmpsl
jp
cmp
cmp
jae
ljmp
inc
push
add
pop
xlat
xchg
inc
aaa
adc
jg
cmp
xchg
cmpsl
push
xchg
in
mov
xchg
xchg
add
xor
jnp
loope
test
insb
fs
mov
aam
cmpsb
scas
lds
cmp
xchg
les
out
das
jmp
movsl
adc
pop
inc
fs
sub
dec
dec
fldt
ja
jo
xor
mov
sub
sbb
sbb
and
divl
shrl
imul
repz
std
shlb
ret
out
call
jb
out
scas
iret
push
loop
cltd
in
add
cld
mov
in
aam
ficompl
push
stc
sbb
fists
ds
movsl
stos
cmp
adc
xchg
mov
loopne
sub
xor
repz
xchg
lcall
mov
push
cmp
sbb
repz
jp
dec
out
call
dec
ret
dec
sbb
das
aad
mov
xor
mov
or
pop
mov
imul
in
pop
ficoml
fsubr
ds
nop
out
inc
shrl
pop
jb
mov
adc
inc
sbb
dec
sbb
sub
in
sahf
into
mov
roll
mov
mov
mov
push
xchg
sub
xor
sahf
movsb
rcr
cmovg
pop
test
pusha
mov
rcrl
sub
sbb
xchg
inc
imulb
add
sbb
xchg
fs
dec
jp
clc
push
sub
mov
movsb
icebp
les
xchg
fmul
and
cmp
jmp
push
fdivs
adc
lds
xchg
call
imul
mov
xchg
mov
pop
mov
or
xchg
cmpsl
pop
cli
xor
gs
mov
push
adc
sbb
adc
cs
sarl
mov
mov
scas
sti
jle
orb
adc
ljmp
inc
pop
cmp
dec
popa
orl
rol
jo
dec
or
push
sub
xor
mov
int3
imull
xlat
dec
cltd
and
sahf
pop
fld
stos
test
xchg
enter
jbe
pop
inc
mov
mov
fyl2xp1
mov
fstps
int3
mov
outsb
and
out
push
push
sub
sarl
push
fstpt
add
popa
inc
hlt
xchg
and
mov
sbb
xchg
mov
or
shll
mov
dec
pop
enter
xchg
inc
sub
in
cmp
cli
mov
pop
scas
bound
mov
lahf
bound
sub
std
xor
push
adc
arpl
out
in
mov
scas
xor
cvtdq2ps
mov
lcall
jae
jmp
aas
fsubrp
pushf
push
inc
dec
sub
iret
es
lods
sbb
mov
movsl
sbb
cwtl
cmp
cmovbe
sub
testb
sbb
cmp
sbb
push
sti
mov
stos
dec
pop
lods
jne
xchg
xorb
divl
in
sub
dec
movsl
fldenv
bnd
repz
jmp
xchg
mov
popf
stos
test
roll
pop
rol
in
push
jmp
push
mov
ss
in
dec
cmp
jle
es
mov
mov
push
xlat
jno
std
cmp
push
imulb
xchg
mov
loopne
pop
pop
or
in
pop
xchg
test
test
insb
not
test
add
fidivrl
icebp
loop
mov
addr16
push
lea
sahf
mov
xchg
add
sub
sub
and
xchg
in
lds
lahf
sbb
mov
xor
call
adc
stos
jecxz
sbbl
daa
jmp
mov
and
shl
jns
mov
mov
ds
insb
jnp
loope
cmp
add
sub
adc
pop
lret
or
fmulp
add
jl
outsb
xor
cli
sub
inc
idiv
sbb
lea
test
in
icebp
inc
scas
inc
je
out
xor
mov
jbe
inc
jl
pop
fisubl
sar
jae
mov
fistpll
insl
nop
adc
imul
mov
xchg
cmp
add
fcomp
negb
jl
into
sti
clc
sbb
pop
inc
fcomps
lods
out
imul
lcall
insb
or
out
push
dec
rcll
mov
add
sub
lods
push
or
repz
mov
in
jno
ret
mov
pop
in
jo
cmpsl
mov
or
xor
inc
or
xchg
xlat
sub
or
addr16
loop
in
pop
jecxz
mov
dec
lret
mov
push
xor
lahf
adc
fucom
pop
shll
pop
gs
and
roll
loope
xor
lds
loop
or
shll
leave
imul
test
jecxz
popf
sbb
and
sbb
data16
mov
or
push
push
pop
adc
es
std
test
aam
loopne
insl
stos
or
mov
mov
and
cmp
and
cld
test
outsl
out
out
xor
shll
adc
clc
out
pop
mov
mov
cltd
xor
push
fs
cli
add
popl
and
cmp
pop
les
jnp
pop
or
push
ret
pop
int3
jp
inc
std
shrl
pmaxsw
mov
leave
shl
ret
lahf
rolb
cmpb
xor
rcrb
pop
ja
inc
pop
jb
pop
in
cmp
cmpsb
mov
insb
mov
xor
sti
in
mov
lods
icebp
xor
adc
jne
jne
sbb
sbb
dec
lods
sbb
sbb
inc
sub
and
dec
sbb
sub
xchg
mov
mov
push
push
jbe
jne
pop
shr
xchg
adc
and
or
mov
inc
pop
jae
stc
ss
aas
cmp
jo
mov
pop
fsub
or
stc
arpl
lret
rolb
hlt
mov
pop
bnd
sub
pop
cltd
js
xor
xorb
sahf
sub
lahf
mov
lret
dec
dec
xchg
ret
jbe
or
insl
data16
mov
fmull
xor
mov
jae
in
arpl
leave
adc
daa
cwtl
xchg
xor
fisubrs
mov
call
mov
dec
clc
testl
fsts
xchg
inc
int
out
pushf
push
xor
outsb
pusha
xor
sub
mov
mov
sbb
xorl
jb
mov
jge
pop
ret
fidivrl
mov
dec
aad
enter
inc
imul
push
outsb
stos
das
int
pop
push
sub
mov
xchg
lock
jl
jb
aas
imul
mov
sub
popa
push
pop
cld
leave
mov
jnp
xor
mov
out
fs
jmp
negb
cltd
mov
inc
xor
clc
add
test
adc
test
inc
out
adc
loope
fsub
push
testb
int3
sbb
cmpsb
xchg
mov
pusha
cmpsl
test
sbb
movsl
out
repnz
xor
cmp
push
iret
mov
mov
stos
fcmovbe
aaa
mov
loopne
ret
jne
pop
xchg
xchg
push
iret
sbb
icebp
xorb
lock
pop
add
ljmp
add
mov
jecxz
pop
xor
insb
testl
sbb
mov
es
mov
sbb
leave
sbb
shll
mov
rcrb
loopne
pushl
outsb
adc
pop
data16
jl
mov
roll
fimull
xor
or
ljmp
push
inc
sarb
test
or
aam
iret
jno
jo
or
sti
addb
xlat
ret
gs
pop
mov
divl
mov
fstp
push
cmp
dec
lods
cmp
mov
cmp
mov
mov
iret
test
fisubrl
repnz
js
sbb
scas
lods
or
lcall
not
adc
imul
lahf
in
jecxz
jnp
xchg
or
loope
test
leave
mov
sub
xchg
mov
push
popf
push
cmp
mov
in
xchg
repnz
in
outsl
cli
cmc
arpl
mov
dec
fcoms
in
gs
mov
cmpsb
pop
xchg
lds
jmp
inc
mov
pushf
add
sub
lcall
mov
or
subb
xchg
push
fidivl
pop
adc
push
leave
out
cli
xchg
out
popa
sub
jns
sbb
nop
iret
rorl
rorl
or
jne
jge
pop
filds
adc
xchg
enter
fsubl
movsb
mov
sbb
adc
iret
add
pop
fnstenv
lods
lret
sub
inc
dec
js
and
out
xor
test
sub
inc
push
in
jecxz
test
std
dec
sahf
ficompl
cmp
mov
cld
xchg
inc
mov
loop
es
xchg
mov
les
inc
xchg
push
pop
scas
dec
stos
jbe
cmpsb
stos
or
lock
lret
mov
push
int3
test
divb
into
loopne
inc
push
psubw
pushf
call
fwait
nop
or
shrb
mov
push
adc
sbb
pop
mov
pop
hlt
or
call
enter
dec
fs
ret
dec
ds
sbb
mov
ret
mov
in
mov
cmpsl
pop
gs
aam
adc
testl
out
xor
sub
scas
dec
xchg
mov
cltd
xchg
sbbb
add
jo
push
push
scas
out
mov
xchg
adc
fistpll
dec
jo
es
sbb
push
sbb
adc
ret
js
dec
inc
mov
push
inc
mov
shl
sub
lock
jle
mov
lahf
outsb
push
jno
mov
orl
push
pop
inc
fnstenv
js
lret
mov
test
adc
incb
icebp
lahf
and
sar
icebp
lcall
jne
jnp
pop
or
fildll
jge
ficompl
stos
dec
jp
xchg
les
adc
sub
jns
nop
adc
addr16
push
stc
pop
sbb
adc
inc
sub
inc
enter
mov
pop
stc
pop
xor
inc
mov
xchg
lcall
pusha
sub
popf
push
push
repz
or
imul
iret
dec
fldenv
stc
jae
sub
iret
xorb
in
add
adcb
jl
push
out
sub
shr
lcall
insb
jno
test
push
nop
push
mov
jmp
jmp
sub
pop
pop
cmp
icebp
mov
or
pop
in
mov
inc
inc
cmp
mov
mov
lcall
cmp
in
xchg
mov
test
test
jne
inc
and
lods
push
mov
pop
cmp
and
cld
jno
cmc
sub
jecxz
nop
xor
cmp
callw
or
and
pop
mov
orb
std
dec
gs
inc
add
pop
out
pop
xchg
adcl
ja
adc
lods
out
cmp
dec
arpl
jo
xor
push
pusha
or
adc
in
push
adc
mov
sbb
popa
mov
xor
pop
in
mov
jecxz
inc
jae
xchg
jp
loopne
fnstenv
mov
fsubs
jmp
add
sarb
lock
pop
jne
ljmp
or
pusha
jl
lods
sbb
gs
cli
ja
push
adc
xchg
pushf
and
adc
je
les
in
mulb
mov
push
stos
pop
and
in
stos
mov
or
fchs
repnz
add
xor
mov
shrl
mov
add
ljmp
lock
out
pop
xor
push
aad
shl
cltd
scas
jp
push
dec
ljmp
cmp
cmpb
loop
insb
adc
bound
sbb
push
push
mov
mov
mov
nop
movb
nop
insb
and
inc
push
add
xor
push
pop
mov
add
inc
daa
add
push
mov
fsubl
adc
cmp
aam
dec
cmpl
jecxz
ja
and
dec
aas
fcompl
ljmp
mov
out
push
push
hlt
sbb
sub
lret
mov
shr
mov
popf
into
fs
or
cli
aaa
jl
fisttpll
pop
xor
or
ret
pop
repnz
cld
sbb
outsb
cmp
movsl
jbe
popf
cmp
pusha
iret
jno
ds
cmp
jne
sub
movsb
shrb
das
fdiv
mov
js
sub
xor
lahf
fmuls
or
sbb
xlat
sub
sub
adc
mov
adcl
and
cmp
or
movsb
aaa
xlat
dec
jmp
sub
xor
pusha
adcl
or
outsl
push
ss
addr16
fistps
jge
jmp
mov
mov
xchg
fs
xchg
outsb
cmp
incl
sub
adc
ucomiss
push
mov
sti
cmp
xor
ret
sbb
in
sub
dec
mov
push
cmc
shlb
jecxz
jp
insb
inc
sbb
xchg
rcr
push
xor
mov
pop
cmp
out
fs
test
leave
cmp
cmp
and
jmp
cmp
jmp
arpl
out
aam
imul
sbb
mulb
je
pop
cli
jbe
sbb
adc
fs
mov
sbb
pushf
cmc
dec
inc
pop
mov
mov
mov
pop
lock
inc
fs
xchg
mov
adc
jmp
mov
fidivs
test
mov
cmpsl
adc
and
lock
mov
xor
mov
sub
mov
add
sbb
int3
xchg
addr16
jns
hlt
pop
jecxz
dec
cld
iret
loop
mov
das
addr16
mov
pop
mov
dec
jle
into
in
xchg
pop
mov
mov
cld
movsl
pop
pop
ja
leave
dec
stos
cmp
push
fldt
sti
test
adc
sbb
xor
cmc
data16
push
sub
shl
sub
lods
cltd
sbb
jae
inc
xchg
fmuls
mov
add
mov
leave
lea
sbb
hlt
int
out
daa
cmpsb
out
call
push
dec
cmp
pusha
ja
scas
ljmp
sahf
shlb
fadds
inc
jge
fs
jne
popa
aaa
call
test
xor
aam
xchg
pop
jne,pn
fisubrl
idiv
in
xor
outsl
movaps
shl
or
sub
jnp
jbe
icebp
sbb
mov
int
aam
pop
insb
fcomps
pop
adc
int
mov
and
xor
std
xchg
in
or
inc
test
js
push
mov
movsb
dec
sti
mov
popa
inc
enter
fwait
mov
sbb
jne
lds
xorl
ret
push
lods
jo
mov
sbb
and
push
mov
and
addr16
inc
jp
pop
push
aam
sbb
lea
dec
adc
gs
xor
push
fidivrs
dec
or
lods
mov
pop
jbe
std
out
orl
dec
stos
in
in
sub
mov
adc
int
xor
fs
sub
mov
push
repnz
nop
push
rcrb
cmpl
xchg
cwtl
adcb
adc
sbb
inc
cmp
inc
lret
hlt
scas
pop
test
sbb
and
ret
in
cmpsl
sub
push
movsb
aam
cmpsb
call
gs
scas
push
outsl
cmc
or
andl
jo
sahf
lret
fistpll
sub
adc
fidivrl
jg
sub
pop
or
add
dec
sahf
or
jecxz
push
into
lret
rcrl
out
mov
xor
int3
les
push
addr16
xchg
push
dec
jne
xor
imul
out
push
fnstenv
mov
pop
aas
pop
dec
mov
ljmp
inc
pop
outsl
lds
adc
movsb
movsb
push
mov
jae
and
std
sub
mov
not
lods
leave
addb
fucomip
xchg
js
cmpsl
jmp
aas
arpl
aaa
data16
in
jge
push
ret
sub
rcl
mov
lock
mov
cwtl
std
loop
mov
add
scas
jle
jecxz
stc
inc
jmp
push
testb
mov
mov
xchg
jne
dec
xchg
enter
fnstenv
mov
jae
sbb
ret
mov
adc
mov
and
sub
leave
subl
sbb
adc
dec
loopne
sub
lods
jecxz
in
mov
mov
lea
in
add
add
mov
push
arpl
xor
mov
dec
jno
addr16
add
or
imul
mov
or
cmc
es
mov
xacquire
out
cs
inc
scas
test
inc
adc
inc
test
push
add
ret
cmp
fisubs
test
test
mov
pop
push
cmpsb
cmp
xchg
jecxz
xor
push
ja
cmp
mov
mov
cmpsl
push
adc
jle
cmp
and
add
out
js
cld
stos
dec
fcmovnu
and
mov
push
movsb
dec
cli
mov
mov
pop
rorl
or
cmpsb
mov
xor
outsl
int3
cmpsl
adc
sub
sub
pushw
repz
mov
je
pop
add
adc
xchg
pop
in
dec
dec
stos
inc
std
xlat
fwait
in
movsl
mov
and
push
loope
je
mov
roll
xchg
mov
and
testl
or
jbe
js
mov
and
dec
lcall
mov
or
out
insb
and
lcall
lods
inc
test
in
add
and
xchg
mov
adc
fsubl
movups
shll
sbb
sub
sub
push
xlat
or
fstps
lahf
push
test
inc
cld
jno
or
adc
xor
dec
cmp
icebp
mov
cmc
or
dec
lret
clc
dec
out
loopne
and
imul
push
out
movsl
push
adc
popa
cld
je
dec
and
adc
stos
push
cli
sarb
aam
sub
or
sub
pop
add
fwait
aad
cmp
jo
push
dec
dec
enter
mov
push
mov
cwtl
test
push
add
ret
add
dec
sbb
add
xchg
test
addr16
jae
lea
popf
shll
enter
dec
mov
rorb
mov
je
rclb
gs
mov
mov
pop
mov
movsl
xor
inc
aad
mov
jecxz
mov
aad
inc
dec
and
jg
jl
cwtl
les
std
xchg
sub
sti
cmp
cmp
adc
adc
pop
bound
add
add
push
jle
lret
sub
and
sbb
pop
into
aam
and
xchg
jo
arpl
adc
shrl
jge
movsl
repnz
loope
and
lret
out
or
jb
inc
pop
fadds
mov
cli
cmpsb
popf
jb
ja
mov
mov
jne
int3
push
lods
dec
push
in
jnp
xchg
mov
or
lcall
jle
fnstcw
add
xor
sbb
addb
mov
xchg
jecxz
aas
andl
mov
xchg
xchg
cmp
xchg
out
dec
int
jl
in
mov
in
sub
add
arpl
mov
sbb
add
orb
inc
test
pop
fwait
btc
cmp
loop
cli
test
or
cmp
cmp
pusha
ret
mov
xchg
lds
jae
pop
add
gs
lret
out
aas
dec
in
push
jp
sbb
sbb
fldcw
dec
cmp
lcall
ds
cld
jno
mov
cmp
mov
lret
divb
jmp
pop
leave
mov
adc
xor
xor
push
popf
cmpsl
dec
adc
scas
pop
and
pop
mov
mov
sti
loop
ficoml
sbb
mov
or
pop
jb
jge
mov
insb
insl
out
into
ljmp
xchg
pop
push
pop
cwtl
add
dec
mov
jge
mov
shll
arpl
stos
ljmp
fldenv
cmp
push
jb
mov
add
lock
sbb
mov
das
mov
sub
add
scas
inc
ja
std
xchg
add
dec
sub
test
xlat
hlt
mov
dec
adc
xor
xor
lret
adc
cwtl
push
adc
mov
pop
fadd
ljmp
or
xchg
mov
pop
cmpsl
pop
jbe
mov
sub
arpl
aaa
hlt
addr16
pop
aad
pop
sub
xchg
sbb
ss
xor
ja
ds
cmp
mov
inc
jp
push
push
stos
and
cmp
test
mov
jge
imull
mov
jmp
mov
mov
lock
mov
and
or
out
repz
mov
in
mov
ljmp
or
mov
das
push
push
aas
or
stos
dec
jg
shlb
outsl
lret
push
and
enter
sub
loope
adc
stos
aaa
ja
les
push
sbb
icebp
les
dec
addl
popa
jne
sti
inc
xor
or
or
xor
xchg
mov
mov
xor
es
addr16
cld
mov
push
in
ljmpw
xor
sbbb
cltd
scas
ret
sub
repz
add
sub
stos
add
insl
mov
and
xchg
mov
sarl
sub
out
lahf
mov
xchg
push
xchg
in
fidivrl
add
inc
or
dec
loope
push
mov
adc
ss
es
inc
push
jno
loope
lahf
out
push
shll
mov
dec
jns
inc
pop
cmp
fsubl
aam
hlt
cmp
or
cmp
adc
xchg
xchg
sub
xchg
clc
mov
inc
push
imul
fstps
dec
inc
stc
inc
jge
jmp
rorl
jge
and
hlt
xchg
pop
push
and
aad
fcmovnu
lcall
fst
and
cs
js
iret
cmp
ss
jnp
dec
xor
mov
ss
rorb
outsl
lods
sahf
jbe
movsb
jmp
cmp
push
sub
idiv
inc
cmp
and
jl
imull
jb
mov
rcr
sub
fdivs
fchs
sub
nop
sti
dec
in
fdivrl
fdivs
scas
sub
mov
mov
lock
aam
xor
xchg
shlb
inc
xchg
mov
sar
mov
inc
pop
ja
adc
ss
pop
xchg
in
xor
movsb
adc
jecxz
sub
adc
push
sub
dec
bts
push
push
fwait
mov
pop
pusha
add
cmp
ret
push
ret
cmp
popa
adc
jmp
rolb
fistps
sahf
push
out
cmp
or
xchg
mov
cmp
mov
jge,pt
ret
repnz
cmp
jae
cwtl
dec
push
cmp
or
in
mov
lock
shlb
shlb
fisttps
mov
lahf
xchg
out
mov
dec
mov
lea
add
popa
mov
lea
jbe
cmp
xchg
pop
ret
mov
dec
xor
mov
or
stc
int3
adc
loopne
insl
les
lret
andl
sbb
jb
ss
xor
push
sbb
jl
inc
movsl
pop
aas
lcall
jmp
dec
iret
sub
addr16
fnstenv
cmp
ds
dec
sub
inc
popa
mov
inc
dec
lea
fistpll
jne
jo
insl
stos
cmc
in
jae
insl
out
pusha
daa
ja
mov
cmp
cwtl
add
pop
add
pop
dec
mov
out
imul
cltd
cmp
lds
ljmp
je
or
cld
lret
repnz
notl
rol
sub
shll
sub
andl
pusha
or
addb
gs
test
inc
pop
xor
bound
cmp
sub
jl
add
pop
rcl
jmp
mull
cmp
dec
mov
push
adc
cmp
ret
mov
hlt
xor
or
lods
mov
shl
sbb
int3
sbb
addr16
mov
mov
rolb
and
jmp
or
icebp
std
dec
sbb
mov
or
icebp
test
push
jnp
sub
mov
into
fildl
xor
mov
mov
sbb
in
fs
adc
imul
leave
xlat
and
cmp
and
dec
loope
popa
dec
mov
sahf
jmp
outsl
pushf
sahf
out
inc
fs
mov
push
dec
divb
int
push
push
pop
scas
xorb
adc
aaa
rcrl
fnstcw
loopne
aad
adc
dec
les
das
int3
mov
push
pop
imul
daa
mov
mov
adc
jbe
lret
mov
push
xchg
mov
mov
jns
fnstenv
jl
mov
adc
data16
js
ja
jno
inc
sub
pop
fisttpl
pop
out
scas
mov
in
imul
push
mov
outsb
out
mov
cwtl
sbb
ja
in
mov
lret
loopne
popa
sbb
sti
mov
or
cwtl
xlat
and
adc
ss
pushf
or
stos
jbe
lret
aaa
test
jbe
or
lods
mov
sar
fidivs
inc
inc
cltd
mov
lret
sbb
dec
jg
dec
mov
and
jne
dec
call
iret
pop
and
in
mov
insb
inc
ljmp
xchg
inc
jae
repnz
stos
inc
pop
push
ret
jns
test
and
pop
pop
add
dec
jg
inc
cs
jle
inc
jl
inc
mov
insb
xor
xorb
das
orb
mov
jne
push
fwait
ja
loopne
add
sub
and
inc
clc
mov
xor
push
push
mov
xchg
ljmp
push
enter
inc
mov
inc
mov
hlt
stos
inc
sbb
test
es
out
inc
or
mov
jne
arpl
orb
mov
movsb
jl
aam
das
push
mov
xor
and
pop
cmp
fmuls
pusha
xchg
pop
mov
iret
loope
outsb
aas
cmp
cmpsl
iret
jnp
aam
cmp
lods
push
lods
ficompl
rcll
mov
pop
push
test
sbb
shrb
in
out
out
sti
es
push
sbb
and
movsb
fdivr
mov
sub
sbb
xchg
mov
addl
sub
rcl
mov
dec
arpl
into
stos
les
mov
lods
push
dec
xor
clc
lds
lahf
lcall
inc
xchg
jg
in
pop
inc
test
add
cmp
and
inc
fmuls
movsb
pop
dec
xor
fwait
and
loopne
aad
cmp
mov
sbb
test
lea
iret
fstpt
sti
imul
mov
lods
inc
int
lea
pusha
lods
jge
shll
xchg
pop
out
test
lods
xchg
or
adc
and
incb
rcrw
cli
mov
mov
icebp
ret
sub
or
insb
mov
push
push
sbb
cmp
mov
adc
mov
push
xor
cs
push
mov
daa
inc
sub
int
outsl
pushf
sub
fs
inc
cmp
aam
outsl
pop
push
sbb
lret
es
push
fcos
jb
je
xor
sub
push
std
dec
push
sbb
scas
ret
mov
pop
mov
pop
sub
pop
mov
test
out
test
fidivrl
mov
dec
andb
rolb
inc
fwait
cmp
dec
lea
cmc
inc
xchg
out
lock
icebp
mov
xchg
lock
das
inc
in
fistpll
and
sbb
dec
adc
bswap
out
add
jnp
shll
sub
in
jbe
sub
xchg
mov
insb
cmc
dec
and
sahf
fstp
push
jbe
popa
mov
jno
es
pusha
cmp
adc
push
out
addr16
and
mov
les
lock
fidivrs
das
push
inc
dec
inc
and
outsb
cmp
imul
or
mov
jl
push
fucompp
arpl
daa
jne
push
xor
int
mov
lcall
jmp
lea
add
mov
push
push
mov
stos
mov
out
mov
sub
pop
dec
cmpsl
push
fmull
aaa
mov
mov
lcall
mov
aam
pop
sub
adcl
jg
sbb
cmp
push
or
push
mov
sub
imul
nop
sbb
jmp
pop
sbb
into
lods
sub
ljmp
and
pop
or
ljmp
push
push
mov
scas
das
imul
push
pop
bnd
data16
insb
sbbl
adc
jns
push
jo
add
and
jae
jo
sub
sub
imul
lahf
mov
fcmovu
xchg
mov
data16
sub
dec
xchg
xchg
sarb
in
adc
pop
mov
cwtl
xor
jl
aam
fwait
pop
adc
pop
mov
jecxz
ljmp
ds
bound
test
inc
dec
mov
stos
into
mov
outsb
push
cmp
testl
cwtl
enter
dec
mov
sub
adc
sub
adc
jae
js
call
push
repz
sbb
repnz
add
xchg
mov
nop
test
adc
stos
cmp
lahf
stos
jae
or
idiv
jne,pn
pop
test
movsb
xchg
ret
add
dec
and
das
or
sub
movsb
loop
int3
jbe
enter
mov
push
jge
inc
sbb
push
xorb
scas
xorl
push
fildl
and
or
dec
adc
pop
inc
outsb
lea
adc
sub
lds
stos
inc
ja
test
jbe
pop
mov
lock
push
push
lcall
cmp
es
test
xor
xor
xor
cmpsl
jne
ja
pop
aad
fldl
xchg
pop
mov
or
es
lret
subl
inc
dec
adc
in
cmp
lock
rcl
int
cmp
jecxz
jne
jecxz
inc
push
ss
xor
imul
mov
mov
loop
idivb
outsl
scas
dec
pop
jb
sbb
rolb
in
xchg
inc
fisubrl
jg
inc
adc
or
mov
xchg
roll
std
adc
pop
or
or
add
jmp
imul
xlat
mov
imul
stc
stos
loopne
gs
repnz
dec
mov
push
test
dec
in
repnz
inc
xchg
sub
inc
lcall
jnp
sbb
dec
push
mov
enter
nop
mov
jle
mov
aas
xchg
jnp
inc
in
pusha
push
and
and
pop
sub
outsb
rcll
push
or
sub
int
jbe
leave
pop
and
push
sbb
loop
enter
xchg
xchg
mov
jge
shrb
mov
mov
shlb
es
and
pop
mov
and
stos
dec
rcl
outsb
push
jbe
ljmp
fdivrs
mov
rcrb
add
xchg
and
pop
out
jmp
add
and
mov
cmp
jmp
xchg
pop
push
or
adc
mov
popf
repnz
or
jno
orl
add
adc
dec
add
cltd
jge
ret
jnp
push
jne
shl
aaa
aaa
test
addb
popa
mov
mov
frstor
mov
sahf
and
xor
add
mov
jp
dec
popa
mov
je
jl
jo
popa
xchg
dec
daa
out
lea
lds
xor
add
aad
or
mov
xchg
jbe
test
aam
pushf
shrl
inc
repnz
add
movsl
ret
sub
cmp
negl
jecxz
jp
fwait
out
adc
mov
les
stos
push
adc
xor
aaa
push
jge
fstl
aad
ret
out
addl
leave
incl
rcrb
cmpsl
int3
icebp
loopne
push
or
dec
push
sbb
mov
divb
inc
loopne
cmp
in
or
xchg
dec
jge
adc
xacquire
ret
iret
clc
vandps
mov
inc
dec
mov
cmp
cmpsb
mov
mov
sbb
jno
xchg
dec
insb
enter
adc
repz
clc
daa
xorb
arpl
dec
addr16
test
paddsw
mov
jo
jo
cmc
adc
rorb
adc
add
mov
and
rolb
xor
or
hlt
and
push
xor
mov
test
stc
cmc
sahf
cmc
or
jmp
xor
dec
dec
ss
adc
pop
das
in
aaa
sbb
fisttps
jle
out
add
icebp
je
scas
ss
xorl
sub
inc
outsl
dec
mov
jmp
and
mov
test
mov
sub
or
es
gs
dec
jno
pusha
jg
out
mov
or
xor
or
iret
jecxz
mov
or
or
sbb
xchg
or
imul
add
mov
pop
fcmovbe
adcb
cmp
mov
inc
adc
mov
test
and
push
jg
jg
enter
jns
push
sbb
sub
aaa
mov
lock
add
sbb
pop
xor
pusha
adc
ss
outsl
xchg
popf
adc
adc
std
cmpsb
cmp
lcall
ret
call
inc
pop
mov
push
adc
cmpl
loope
jecxz
mov
mov
scas
xchg
xor
cmp
dec
sub
pop
or
out
push
neg
inc
push
xor
sub
pop
push
lock
bnd
daa
sub
inc
cmp
pusha
lahf
xchg
pop
adc
imul
repz
pushf
jl
daa
sbb
jb
leave
xchg
ljmp
sti
adc
std
pop
cmp
pop
xchg
push
test
shr
dec
jnp
rcl
xchg
mov
rcrl
push
jmp
cmp
es
inc
dec
fdivs
aam
icebp
sbb
ljmp
cmp
cmp
stc
sbb
jb
adc
or
mov
adc
add
out
outsb
jg
outsl
into
inc
je
add
jne
lret
iret
and
xor
fwait
jmp
into
mov
fadds
push
jmp
nop
in
xor
pop
testl
rcrl
xlat
cmp
cmpl
fimuls
jno
in
je
std
pop
shll
cmp
push
jle
sub
or
sar
push
xchg
mov
fwait
lods
andb
arpl
lods
dec
popa
fnstcw
test
ret
cmpsl
pop
fisttpl
mov
leave
decl
mov
and
mov
dec
in
mov
leave
dec
sub
fdivrs
stos
inc
mov
jnp
mov
mov
xchg
ds
sub
dec
mov
xor
push
xchg
inc
iret
sub
xor
arpl
arpl
xchg
dec
jae
in
ljmp
das
ret
jbe
sbb
divb
aad
cld
mov
jle
jae
stc
pushf
repz
sarl
imul
push
xadd
xchg
push
inc
iret
or
cmp
mov
fstps
lret
xor
mov
nop
add
mov
xor
or
pop
pop
ja
icebp
push
jnp
pop
mov
andb
sub
inc
enter
lds
icebp
jle
adc
into
popf
aas
fistpll
mov
pop
xor
mov
out
add
and
xchg
mov
cwtl
sub
test
and
orl
into
xchg
lds
mov
mov
sti
pop
jp
es
pop
icebp
repnz
mov
loope
gs
push
pop
mov
jbe
pop
fsubp
sbb
fcompl
addr16
insl
fsubrs
shlb
mov
push
negl
cld
sahf
jge
pusha
dec
push
mov
or
adc
and
and
outsb
shl
jge
test
in
xchg
aam
cs
jge
daa
je
adc
dec
mov
in
xor
xchg
inc
jbe
daa
outsb
loopne
jno
sbb
xchg
dec
js
out
mov
dec
fdivp
or
pusha
test
nop
mov
push
and
jl
stos
mov
jmp
lcall
xchg
xchg
mov
repnz
test
jmp
jno
pop
cmp
sbb
movsb
xorl
mov
inc
cmp
mov
mov
cltd
aad
mov
lcall
lea
inc
and
dec
dec
push
jle,pn
shr
gs
call
test
les
dec
movsb
lcall
bound
mov
pop
mov
popa
and
sahf
outsb
out
jle
jp
lods
sbb
and
nop
xorl
sub
lds
subb
pusha
push
push
sbbl
xor
cmpsb
lcall
mov
xchg
xchg
mov
push
mov
dec
jne
pop
cmpsl
ljmp
das
pop
cs
dec
push
xor
aad
xor
lds
xor
cmp
sub
sub
test
jo
push
lods
outsl
negl
jo
mov
insb
and
sub
xor
inc
aam
std
bound
popf
loopne
xchg
xchg
mov
stos
push
pop
addl
inc
and
shrb
sbb
loopne
shl
ret
into
int
jle
mov
inc
push
mov
cmp
pop
dec
loope
pop
mov
ljmp
cs
out
xlat
dec
je
fmull
sbb
dec
movsl
out
jnp
add
xchg
cmpsl
jle
push
jge
jb
dec
pop
sbb
outsb
cmp
cmp
mov
leave
push
aad
andl
ret
sbb
sub
aam
mov
dec
repz
call
add
lods
int3
hlt
fidivl
cmp
adc
repz
xchg
mov
jle
das
adc
aas
mov
movsb
ds
adcl
jno
pushf
dec
pop
jne
ret
push
sar
xchg
mov
mov
xchg
inc
stos
cmp
inc
addr16
and
xor
cli
addr16
aad
dec
out
orb
leave
dec
rcll
xchg
add
mov
addb
js
sub
rorb
jae
stc
inc
mov
repnz
mov
add
and
jl
sbb
cltd
notl
outsb
aas
xchg
mov
aam
mov
andb
repz
and
dec
fcomip
xchg
push
pop
xchg
in
nop
xchg
mov
std
sbb
lds
fnstsw
shrl
and
test
sbb
pushw
mov
sbb
cmpsl
out
or
insb
negl
push
mov
lret
in
rcr
ljmp
dec
ret
addr16
js
mov
daa
sbb
or
lcall
fcoml
or
push
rorb
stc
inc
sbb
lds
dec
into
and
push
fsub
inc
and
data16
int3
test
pop
jge
dec
xor
les
insl
mov
sbb
shlb
jo
clc
mov
mov
add
pushf
and
jno
mov
nop
dec
mov
orl
test
stos
mov
xorl
adc
shlb
adc
xchg
adc
clc
sub
mov
mov
sahf
cmpsb
inc
jp
dec
aaa
jae
xor
push
rcrl
adc
jge
stc
adc
xor
xchg
inc
mov
push
cmp
mov
insb
cmp
mov
rorb
xchg
and
xor
into
lods
dec
add
ja
xchg
loope
mov
jg
push
push
inc
into
pop
jns
cmp
and
std
push
inc
sub
lea
xchg
jno
sbb
adc
test
clc
dec
les
sub
sahf
xchg
mov
mov
movsl
mov
iret
xchg
cmp
sbb
testl
popf
push
jns
fwait
or
inc
mov
mov
mov
inc
jnp
jge
stos
out
xchg
dec
lret
ja
xchg
shr
mov
mov
les
lcall
push
leave
sub
notb
ret
frstor
cmp
xchg
mov
lahf
in
cmp
xor
pop
lods
mov
dec
das
test
xor
xlat
add
xor
repz
popa
mov
jns
test
movsb
adc
add
add
mov
mov
lds
ss
sub
ljmp
adcl
call
insb
mov
cs
aas
testl
call
adc
add
insl
mov
lcall
stc
push
push
xchg
inc
ss
je
mov
lds
lret
cs
idivl
sub
lret
dec
inc
lock
iret
cmp
mov
dec
mov
fsts
mov
dec
rep
xor
inc
test
lret
lea
mov
xlat
adc
loopne
pop
and
jne
out
inc
mov
xchg
sub
or
sarb
jbe
sbb
mov
insl
aad
add
leave
and
pushl
and
mov
pusha
aad
movsl
xchg
jo
fcmovb
adc
xor
adc
lods
lea
fwait
jecxz
inc
xchg
jl
icebp
nop
push
ret
xor
xor
gs
add
jo
push
cmpsl
add
add
pop
movl
xchg
repz
sahf
loop
out
xorl
add
xchg
sub
sbb
addr16
mov
dec
mov
pop
push
js
test
daa
cmp
and
fbstp
fxch
adc
xorb
xchg
inc
sahf
leave
cmp
mov
test
out
call
jnp
fs
jge
adcb
fidivrl
loopne
rorb
in
subl
mov
call
pop
jp
ficompl
pop
pop
fldcw
add
pop
add
rclb
fisubs
outsb
push
add
js
or
mov
pop
dec
pushf
push
out
or
fs
fidivs
mov
stos
cmpsl
test
lods
out
inc
adc
push
push
mov
les
inc
shrb
sarl
fimuls
das
mov
sbb
xlat
fsubl
cmpsb
inc
adc
dec
lret
xchg
xchg
jge
cltd
out
lret
jp
sbb
sub
and
or
mov
mov
add
call
shrb
cltd
adc
push
dec
pop
and
clc
xchg
in
daa
stc
cmp
or
dec
daa
leave
inc
les
std
es
jne
mov
adcl
fadd
outsb
in
or
js
lret
ficoms
or
int3
gs
fst
call
or
loop
inc
dec
sub
and
movsb
incb
mov
ds
popa
popa
pop
add
and
xor
fbld
dec
and
daa
loope
loope
add
push
mov
cmp
aaa
jne
ljmp
and
mov
int3
hlt
mov
cmp
lea
mov
add
mov
or
sub
jp
mov
mov
es
es
inc
pop
cmpl
pop
mov
aas
inc
inc
jno
cmc
pop
cmc
push
pop
imul
push
int3
cmpsb
iret
mov
wrmsr
xor
outsb
stos
xlat
daa
jno
lahf
add
adc
adc
fstps
ficompl
adc
ret
sbbb
std
jno
sub
jmp
push
shrb
leave
or
movsl
xchg
mov
sbb
clc
ss
mov
mov
fdivr
fstp
repz
mov
pop
mov
jge
xor
sub
and
stc
sar
jle
sbbb
mulb
jmp
adc
dec
das
fstpl
jecxz
cmp
in
ret
jg
adc
mov
xlat
inc
jnp
sbb
push
mov
jl
outsb
insb
cmp
in
adc
jae
mov
popf
cli
inc
imul
xchg
xchg
add
data16
adc
cmp
xor
in
mov
test
xchg
shrl
dec
cs
outsl
mov
sbb
pop
pop
fs
pop
or
and
add
jecxz
push
fisttpll
or
push
shll
loopne
jae
out
test
insl
mov
out
inc
insb
scas
lods
push
push
shll
xor
or
pop
and
pop
push
mov
ret
push
and
lea
push
jl
cwtl
loop
jae
lret
push
pop
add
fcmovnu
arpl
lcall
pop
push
xchg
inc
outsl
clc
xlat
roll
out
inc
in
dec
insb
dec
mov
loopne
dec
shlb
pushaw
int3
into
cmp
mov
or
adcl
icebp
nop
psrad
gs
cli
into
adc
dec
jge
stc
jns
rorb
pop
call
jae
int
mov
imul
hlt
push
enter
jecxz
push
dec
fnstcw
subl
add
nop
out
xchg
sbb
decb
dec
push
mov
dec
ret
xorl
int3
inc
insb
stos
inc
jno
xor
int3
scas
sub
jl
or
fildll
ljmp
or
sub
push
or
adc
in
inc
and
loop
xcrypt-ofb
cmpsl
sub
dec
lcall
arpl
mov
sub
lahf
cmpsl
pop
dec
icebp
fmul
jge
push
mov
xchg
cmp
cwtl
lcall
add
push
cmc
add
es
pminub
cmp
and
mov
pop
lock
nop
jb
fs
outsl
and
cmc
dec
push
xchg
insl
lea
and
ljmp
xchg
sbb
jle
adc
lahf
mov
push
xor
pop
gs
xor
pop
inc
iret
leave
mov
lret
or
inc
out
es
mov
test
push
push
dec
push
movsb
cld
inc
and
stos
adc
in
add
out
ss
movsb
adc
jne
sub
xor
cld
push
addb
scas
stos
xchg
cld
mov
mov
pusha
xchg
adc
addb
mov
hlt
out
jmp
insl
jecxz
cmp
fxch
inc
xlat
insb
pop
addb
lods
mov
sbb
lea
inc
and
mov
sub
scas
adc
and
sbb
cwtl
adc
addr16
fcompl
sub
sbb
push
or
adc
int3
cwtl
mov
jmp
in
mov
aas
shlb
pop
fldt
cmc
sub
cs
ret
popa
adc
inc
add
out
cli
sbb
pop
out
and
sarb
leave
fiadds
add
push
adc
sub
push
cmp
sub
fadd
movsb
gs
add
iret
ficompl
jge
orb
push
and
shl
aas
insl
out
mov
mov
out
and
mov
adc
int
cli
xor
ret
sub
fstpl
test
outsl
inc
in
jl
pop
mov
pop
add
pop
inc
test
loope
add
lods
aam
loope
ficomps
mov
repnz
pop
dec
add
sbb
fiaddl
or
lds
cmp
xchg
cmp
xor
cmp
or
aad
imul
jmp
aad
pop
ljmp
mov
cwtl
repnz
sbb
xor
mov
mov
stos
mov
jp
leave
jb
sbb
daa
mov
inc
push
xchg
xorps
jle
in
push
repnz
mov
loope
cmpsl
mov
int3
testl
pop
xor
pop
sbb
and
mov
jo
les
xchg
dec
push
fnstenv
pop
push
test
add
in
add
xchg
mov
xorl
loopne
in
lods
movsb
fistpl
add
or
push
sbb
xchg
xchg
mov
jo
roll
adc
imul
js
inc
outsb
lcall
popa
jns
decl
repz
or
adc
or
mov
pop
mov
mov
es
frstor
mov
call
pushf
popa
test
loope
jns
inc
out
mov
pop
jno,pt
popf
sub
ret
xor
xchg
push
dec
shr
jae
xlat
xchg
sub
stc
neg
testb
repnz
jns
cmpsb
push
into
sahf
sarl
int3
and
add
imul
inc
jnp,pt
insb
jno
test
mov
jmp
mov
addb
lds
sti
lcall
lock
or
adc
int3
push
fcoml
jl
jbe
fnstenv
scas
mov
dec
pop
cltd
test
jg
sahf
ds
fldcw
movsb
lods
push
out
je
repz
or
jle
jae
rclb
test
inc
inc
jne
and
pop
xor
xor
mov
ret
rcr
or
mov
into
je
push
and
outsb
mov
xchg
dec
lcall
flds
test
cmp
push
inc
mov
jae
fnsave
testl
lcall
jbe
mov
jne
lahf
hlt
sub
lea
lods
mov
hlt
pusha
call
data16
les
int
call
sub
add
push
cmp
sub
mov
iret
adc
in
cltd
pop
mov
jg
sub
pop
mov
sub
int
sbb
jb
mov
cs
out
in
imul
pop
hlt
nop
cmp
lret
pop
add
aam
js
or
mov
dec
and
sahf
add
dec
dec
mov
cmpl
stc
xor
ljmp
push
decb
mov
push
or
inc
pop
add
notrack
repnz
xchg
sub
cwtl
fsub
adc
add
cmp
in
sbb
inc
pop
dec
mov
pusha
test
loopne
pusha
jmp
in
xor
mov
cmp
into
hlt
out
jb
movsl
std
in
sbb
outsl
sbb
in
lret
or
pop
cmp
shlb
sbb
shl
jnp
mov
xor
shll
cmpl
out
inc
aam
push
ret
or
jae
mov
add
lods
dec
cmc
dec
jbe
aam
jg
lahf
lds
xor
shll
mov
and
fiadds
xor
movsb
imul
mov
loope
xchg
adcb
jnp
push
xchg
sbb
mov
inc
addr16
out
subb
sbbb
repz
andl
imul
pop
push
lods
bsf
aam
jge
push
push
xor
push
mov
jg
dec
dec
mov
cmp
add
popf
loop
mov
scas
nop
fstl
xor
cs
fwait
jo
cld
xchg
jae
mov
test
mov
insb
xchg
xchg
sbb
push
scas
cs
jl
cmp
je
adc
stos
movsb
out
test
and
fadds
out
daa
xor
lret
pop
bound
les
lea
push
addr16
orl
sub
jnp
mov
outsb
and
dec
dec
pop
pop
and
stos
out
xchg
js
dec
and
mov
push
adc
push
and
into
aaa
cmp
pop
mov
or
xlat
fiadds
pop
sub
xor
repnz
and
and
pop
push
mov
xchg
and
add
push
dec
dec
lahf
incl
pusha
in
push
ljmp
xchg
mov
push
jbe
in
fidivl
mov
pop
enter
or
cmpsb
test
push
sbb
hlt
push
pop
mov
fwait
cmp
jnp
jg
fstps
mov
loope
arpl
push
aas
test
jecxz
fwait
pushf
int
adc
out
lods
hlt
leave
subl
dec
xchg
call
movsb
and
inc
push
lock
inc
cmp
mov
sub
movsl
push
outsb
cmpsb
mov
test
ret
repz
mov
pop
rorl
daa
mov
popa
rclb
jnp
xchg
add
mov
addb
and
cmpb
cmp
push
adc
xor
aaa
mov
ret
in
jae
sbb
repz
adc
pxor
sub
les
inc
lea
lods
test
pop
xchg
xchg
fwait
cs
and
or
inc
aam
push
clc
sbb
mov
cmp
sub
xorb
dec
mov
jl
push
adc
pop
fnclex
pop
add
push
xor
call
mov
and
in
lcall
js
and
push
inc
sbb
cmp
pop
jne
pop
xlat
cmp
xor
repnz
loope
jno
loop
pop
xchg
add
and
and
pop
push
jecxz
aam
aam
or
into
ret
cmp
mov
lcall
push
sub
lds
dec
test
mov
loope
inc
arpl
cli
or
and
xor
sti
jmp
dec
rol
pushf
mov
int3
jbe
add
sahf
cli
aas
push
adc
mov
cmp
loopne
mov
shrb
fldenv
cmp
pop
sub
pop
sub
dec
into
xchg
ret
xchg
pop
pop
inc
lea
pop
mov
mov
push
add
fsubrp
jo
xchg
xchg
dec
xor
test
mov
ljmp
cmp
fdivr
xor
cmp
hlt
subl
ret
sbb
or
ljmp
loope
movhps
jp
mov
xchg
aad
mov
push
call
xchg
adc
add
rcrb
and
push
inc
adc
outsb
movsl
pushf
push
cmp
cwtl
adc
dec
xchg
sahf
mov
dec
repnz
fadds
pusha
call
cmp
and
mov
inc
movsl
fists
icebp
clc
in
js
cmp
xchg
fdivl
hlt
aaa
mov
int3
ljmp
imull
mov
cld
arpl
iret
jge
imul
out
push
in
cld
dec
jne
xchg
stos
lock
jmp
sub
in
or
int
adc
xor
adc
fistpll
and
push
xor
sbb
mov
lds
xor
out
test
xchg
cmp
ret
xchg
add
cld
iret
push
add
loopne
sbbl
shll
movb
enter
call
adc
or
outsb
dec
ret
adc
scas
cmp
imul
adc
nop
cmovle
cmovb
sub
fs
imul
pop
adc
sbb
repz
or
mov
push
sbb
fisubl
add
pushf
mov
popf
jae
and
mov
cli
insb
push
push
or
gs
inc
incl
popf
sbb
dec
shl
int
lods
jecxz
mov
into
mov
or
in
orb
cmpsl
rorb
cs
insl
hlt
jno
pop
mov
scas
xor
js
xchg
inc
leave
mov
push
cmp
xor
out
imul
push
inc
xchg
mov
or
iret
inc
cmpsb
adc
leave
int3
imul
add
push
sub
adc
lea
mov
xor
ds
dec
loop
add
fmull
shlb
mov
mov
inc
jne
xlat
mov
mov
sub
push
mov
and
mov
pop
imul
in
clc
adc
mov
adc
addl
jo
fldenv
jne
push
sub
pop
les
sbb
jno
test
icebp
mov
repnz
dec
jp
in
into
stc
dec
mov
je
inc
pushf
sub
cltd
pusha
inc
jg
hlt
push
std
cmc
jns
and
pushf
mov
xchg
jno
cltd
cmp
push
inc
mov
xchg
adc
pop
mov
jno
jge
psubsb
aaa
cmp
or
pop
xor
jle
fisttpll
adc
leave
icebp
xchg
pop
repnz
adcb
fcompl
es
push
inc
add
ficoml
bound
dec
add
inc
adc
mov
cmp
mov
insb
xchg
push
sbb
in
imulb
and
or
sbb
push
mov
adc
call
call
fcoms
int3
xchg
in
cmpsl
dec
xchg
outsb
inc
dec
fistpll
mov
je
pop
cmp
lcall
push
rorl
rcll
divl
and
loopne
fisttpll
inc
adc
gs
or
pop
cmp
loopne
mov
test
and
insl
xchg
aaa
lret
loopne
dec
ds
lods
push
xor
mov
adc
push
sbb
jle
cmp
in
xchg
mov
mov
stc
mov
sarb
mov
push
scas
out
cmp
xchg
imul
ss
and
jae
xchg
and
inc
idiv
xor
fstps
jno
adc
aas
xlat
gs
mov
and
inc
mov
std
mov
adc
push
mov
repz
cmp
outsb
jmp
mov
jb
scas
cwtl
insb
shll
cli
dec
in
xchg
insb
ja
add
sub
data16
mov
out
negb
ret
push
jle
icebp
lret
in
loopne
fistpl
gs
mov
sbb
int
repz
daa
cmp
mulb
sbb
loope
inc
fadds
ljmp
into
neg
in
jp
xchg
int
loop
push
sarb
fcoms
jmp
adc
subl
cld
mov
out
ljmp
sbb
pop
push
sub
fldt
sbb
es
test
adc
cmp
jle
fldcw
outsl
scas
xchg
push
mov
pop
loop
add
cld
daa
inc
fcoms
fbld
add
lcall
outsl
loope
jecxz
outsb
loope
pop
jne
xchg
cmpsl
inc
mov
ja
cltd
lahf
cmp
cmp
mov
fidivs
inc
hlt
ret
mov
dec
and
adc
mov
adc
lods
mov
mov
pop
jl
mov
adc
out
sbb
push
mov
pop
sub
mov
rcr
fwait
jo
subl
jno
cmpsb
xchg
cmpsb
push
repz
adc
inc
andb
jecxz
push
imul
pop
popa
lds
fisubrs
movsl
popf
and
add
cwtl
daa
out
mov
and
ficomps
daa
sbbl
dec
jl
lds
scas
lock
mov
rcrl
lret
cmpsb
sbb
mov
cmp
int3
pop
mov
sbb
push
mov
cltd
leave
js
out
imul
jbe
pop
sarb
jp
push
mov
sbb
mov
pushf
repz
or
sbb
mov
lret
jbe
sub
movsl
cmp
out
test
push
in
test
test
push
mov
mov
rcll
bound
pop
iret
jmp
cmpsb
sub
add
adc
push
call
gs
inc
xchg
jbe
das
inc
pop
dec
frstor
mov
push
or
push
dec
hlt
mov
clc
jo
sub
mov
push
shll
cmp
xor
jg
pop
mov
aam
fldcw
xchg
mov
pusha
mov
in
lock
xchg
shlb
in
and
jmp
mov
popa
imul
mov
test
inc
add
push
mov
pop
subl
rolb
inc
movsb
inc
xchg
mov
fistps
add
xchg
pushw
pop
or
pop
cs
ds
dec
leave
sbb
jne
mov
rol
fimull
jb
cmp
imul
into
outsl
in
aas
or
jg
iret
pusha
mov
outsl
cmp
daa
into
idivl
out
mov
mov
or
xadd
clc
pop
int3
xchg
sti
jb
and
lahf
pop
int
and
fdivl
lock
ja
ja
push
test
xchg
xchg
in
sti
push
addb
jae
mov
xor
ja
stos
xchg
sub
and
xorb
inc
add
push
rorb
out
outsl
cmp
mov
jbe
adc
testb
out
push
and
cmp
mov
repnz
sbb
mov
mov
inc
icebp
pop
sti
pop
movb
dec
pop
popf
ds
rclb
pop
sbb
pop
cltd
jbe
fldcw
add
adc
and
xor
cwtl
das
cmp
cmp
xchg
icebp
gs
mov
addr16
sub
sti
push
xchg
sahf
outsb
push
and
fldenv
mov
stos
cwtl
push
stc
repnz
or
out
xlat
out
cld
cmp
sub
stos
or
or
sarb
inc
mov
mov
movsb
mov
enter
andb
add
cmp
ja
push
inc
icebp
push
out
je
call
fidivrl
outsb
pusha
enter
pop
jne
inc
inc
inc
popf
sub
pop
mov
or
lock
jmp
xor
popf
adc
lea
lds
lods
movsb
jecxz
cmp
ja
cld
mov
jo
xchg
mov
pop
xchg
dec
vpsadbw
sub
fwait
mov
and
jg
pop
insb
adc
dec
jmp
xchg
mov
sbb
fbstp
cmp
xchg
or
and
aaa
div
inc
out
stos
cmp
aaa
lret
fdivs
bound
adc
popa
adc
dec
loope
and
jl
pop
push
mov
outsb
sub
mov
dec
loopne
dec
jle
js
adc
je
cmp
jne
pusha
fistl
testl
inc
sub
sahf
sbb
pop
imul
andb
add
jmp
test
cmp
scas
mov
stos
hlt
jno
add
push
pop
les
fbld
in
xlat
mov
out
push
xchg
inc
mov
clc
mov
fs
fisttpll
dec
mov
inc
sub
dec
xor
out
add
mov
dec
fsubr
sahf
sub
sbb
stos
add
icebp
or
js
out
xor
xor
jns
sub
jae
ret
lahf
jno
mov
test
sbb
adc
int
scas
mov
ja
dec
sahf
and
das
arpl
movsl
ljmp
sbb
sbb
jnp
lock
mov
in
enter
outsb
aas
push
jae
gs
jl
xor
cwtl
enter
or
sbb
xchg
push
jmp
xchg
jns
cmp
test
xchg
cmpsl
jb
out
loopne
dec
enter
xchg
data16
jmp
mov
cmp
fdivrl
jbe
dec
cmpsl
mov
cmpsb
add
adc
test
testl
rolb
lret
push
cmc
push
or
sub
dec
mov
pop
sbbl
adc
out
mov
pusha
or
clc
bnd
cmp
or
leave
adc
xchg
cmp
loope
sub
dec
xchg
jbe
sub
in
mov
mov
dec
cmp
loope
inc
fs
push
int3
cmp
inc
adc
aaa
scas
cmpsb
icebp
cmp
sub
xchg
xor
jp
sbbb
cmpsl
add
fiadds
in
jmp
scas
inc
aam
repz
fbld
fldt
jg
jb
mov
test
push
xchg
out
lcall
je
int
vcvtsd2ss
sbb
daa
mov
out
shl
in
lcall
test
repz
jnp
dec
in
jb
imul
and
sub
in
lods
jle
add
out
mov
insb
inc
dec
hlt
inc
test
daa
sarl
mov
mov
and
pop
hlt
dec
fwait
push
add
fidivrs
adcb
enter
jbe
pushf
xchg
sbb
jecxz
cmpsl
sbb
xor
enter
ss
jno
mov
js
mov
push
cld
cld
cwtl
push
mov
sub
incl
sbb
lock
jno
inc
jne
dec
lods
fnstcw
lock
xor
ror
cld
nop
push
outsl
test
test
repnz
jle
stos
add
je
push
push
rclb
xor
push
or
outsl
fcom
aad
aas
lea
jns
lcall
mov
mov
push
loopne
jns
xchg
pop
inc
mov
cmp
cmpsl
scas
mov
or
iret
add
jae
add
inc
test
es
sub
add
push
test
ds
sbb
shrb
movsl
je
dec
pop
cmp
xor
int
mov
jge
jae
xchg
enter
xchg
pop
call
pop
mov
pop
push
arpl
lock
bound
jae
aas
xor
push
dec
xchg
mov
xchg
popl
fdivrp
jp
outsb
movsb
js
sub
aaa
push
scas
cmp
xchg
cmpsb
cmp
imulb
in
das
popf
imul
je
push
decb
and
orb
sub
sbb
push
xchg
mov
push
out
test
and
dec
leave
imul
cmp
ss
fisttpl
cmp
jg
fwait
jle
sbb
jnp
jle
dec
imul
ret
imul
sti
add
mov
lret
pop
sbb
xlat
testl
xchg
nop
sbb
fadds
stos
gs
mov
dec
pop
popa
ror
dec
daa
test
adc
pop
adc
mov
aam
mov
stos
rclb
aam
mov
in
mov
mov
or
movl
adc
xchg
xor
mov
ss
decb
dec
aad
mov
push
mov
sub
dec
popa
arpl
inc
xor
cltd
jecxz
jp
arpl
shl
sbb
sub
mov
mov
js
sub
ds
incb
aaa
aaa
pop
data16
mov
xchg
call
andl
mov
leave
jge
pop
jmp
push
xchg
test
push
dec
and
sbb
push
pushw
jle
arpl
xchg
fldl
insb
ljmp
push
add
dec
das
jmp
cmc
popa
mov
mov
xchg
sbb
mov
test
orb
xor
adc
jns
inc
xchg
dec
mov
push
enter
add
adc
fsqrt
or
inc
stos
cli
inc
popa
rorl
cmp
fwait
out
filds
pop
fldenv
mov
push
jge
imul
test
mov
adc
out
push
xchg
mov
adc
lret
and
mov
jge
jp
add
out
and
jmp
inc
xor
jo
lods
cli
xchg
mov
jp
inc
lods
sub
gs
lret
fwait
out
testb
mov
mov
xor
sbb
neg
out
stos
and
std
push
pop
add
jae
insb
or
add
sub
les
std
jo
lcall
push
pop
push
outsl
mov
sbb
mov
fstl
aas
sub
faddl
mov
rclb
sbb
xchg
inc
fnsave
jnp
adc
sub
xchg
adc
cmc
sbb
bound
jmp
icebp
daa
inc
mov
mov
push
xor
gs
insl
xchg
mov
je
test
lods
pop
int
das
jl
mov
call
mov
xchg
shr
jl
fwait
lahf
xchg
cmp
dec
inc
ja
pop
cmp
lret
mov
aam
xor
dec
loopne
scas
mov
cmp
adc
mov
in
push
rcrb
xor
or
scas
dec
out
jg
lcall
cmpsl
inc
add
sub
in
sub
movsl
aad
icebp
test
dec
pop
pusha
ds
mov
sti
jp
and
and
in
in
jge
notl
pop
sbb
imul
jb
mov
jno
incl
push
dec
inc
adc
xor
mov
aad
xor
dec
pop
in
mov
jb
mov
push
mov
ljmp
lock
jae
jo
ret
sub
sub
add
add
ret
fimull
popf
pop
int
jae
xor
scas
ficompl
dec
push
out
push
mov
jl
out
out
jne
jbe
sahf
das
popf
mov
xchg
jmp
gs
push
jb
daa
es
dec
push
jae
mov
mov
call
fs
outsb
pop
cmp
ja
jecxz
mov
sub
test
inc
xchg
lods
xor
outsl
dec
sub
push
push
adc
push
mov
and
incb
sub
ja
jge
aas
mov
fwait
dec
xchg
outsl
lcall
xor
pop
mov
xchg
mov
xor
cli
pop
cld
adc
scas
or
cmpsb
jns
cmp
sub
sbb
xor
inc
in
cwtl
repnz
pop
mov
mov
sub
insb
dec
sarb
and
xchg
push
sahf
arpl
dec
pop
lret
outsb
mov
push
fwait
mov
xor
mov
xchg
stos
fimull
in
mov
test
imul
mov
pushf
inc
out
dec
xlat
xchg
jae
fildl
or
xchg
push
mov
sub
loope
push
cmp
popf
jno
cmpsb
adc
lahf
stc
mov
pop
xchg
addr16
repz
enter
lahf
jb
lcall
push
push
rol
in
jo
outsb
repz
mov
mov
mov
inc
dec
shr
adc
adc
orl
leave
repnz
jp
xor
test
pop
outsl
int3
fistl
mov
jecxz
or
dec
pop
lret
hlt
aam
dec
test
mov
dec
sbb
test
dec
ficomps
or
incb
ret
xor
or
sbb
nop
inc
sbb
sbb
cmp
call
lret
adc
mov
iret
push
inc
repz
mov
outsl
movsb
ret
adc
xor
stos
mov
and
lea
sbb
add
movsl
pop
addr16
es
nop
mov
minps
outsl
mov
test
daa
pop
xor
shll
mov
sbbb
push
push
xchg
mov
sub
xchg
fwait
mov
mov
pushl
xchg
cmpsl
jo
inc
popf
mov
stc
arpl
and
push
xor
xchg
mov
mov
in
and
leave
in
dec
leave
or
pop
dec
addl
xor
ficoml
inc
add
add
ret
jmp
aad
mov
mov
out
xchg
fcmovnb
inc
out
add
mov
mov
xchg
xor
shll
rol
js,pn
adc
leave
popa
nop
mov
les
cli
mov
movsl
imul
jnp
ror
push
and
mov
push
dec
jae
and
hlt
dec
cmpsb
mov
aaa
cmp
and
lds
movsl
nop
sti
cmp
pop
and
jp
adc
inc
sbb
in
ljmp
aam
xor
stc
pusha
pop
cltd
fcoms
mov
jle
pushf
out
rcrl
int3
jbe
xchg
mov
lods
pop
mov
test
jns
and
fiaddl
out
test
es
ret
mov
jecxz
mov
cmp
mov
mov
pop
es
jb
les
sub
ds
xchg
inc
hlt
xor
sbb
add
test
cmc
mov
dec
outsb
stc
clc
jns
jle
pop
jge
xchg
sarl
test
daa
les
into
dec
clc
inc
mov
pop
and
imul
push
adc
in
ljmp
xchg
or
mov
cmp
push
aam
jg
mov
sub
xor
cmp
cmpsl
xchg
dec
xor
repz
lock
inc
lret
cltd
sub
daa
into
add
hlt
aaa
lret
xchg
dec
das
pop
mov
gs
pop
outsb
add
sub
out
push
inc
cmc
jbe
stc
cmp
je
xchg
mov
jns
fdivr
imulb
popf
adc
std
pop
sub
aas
out
iret
shll
ss
dec
stos
lock
outsl
jecxz
cmp
scas
inc
add
pop
cli
mov
mov
dec
imul
enter
fadd
jg
xchg
or
jle
or
jp
rcrl
imul
pushf
inc
fcmovbe
or
push
jb
cwtl
inc
ljmp
push
mov
scas
pop
mov
mov
test
repz
in
pushf
mov
xchg
push
xchg
fs
or
daa
imul
xchg
int
in
arpl
fbstp
jmp
movsl
sbb
fidivrs
xor
insl
ret
mov
adc
mov
jne
push
push
sbb
cmp
mov
mov
jp
outsl
ret
push
lea
imul
std
ret
js
jecxz
xchg
push
dec
mov
pop
jl
push
dec
imul
sub
cltd
push
pop
sbb
pop
sub
out
cmp
cmc
pop
fmull
jae
fistps
pusha
fidivl
and
mov
into
pusha
push
jle
cmpb
xchg
pop
dec
push
mov
insb
je
aas
xor
jo
iret
mov
and
adcb
cltd
sti
mov
bound
push
adc
xor
jo
popf
mov
push
cmpl
mov
loope
mov
in
or
loope
sub
dec
pop
sbb
call
mov
push
mov
cmpsb
jl
rcll
hlt
shll
adc
push
xor
subl
and
stos
je
ds
stos
push
mov
fistpll
cmp
repz
mov
sbb
push
insl
xor
mov
dec
ret
fdivrs
das
sub
push
int3
add
pop
push
sbb
push
mov
pop
xor
sar
lods
push
push
mov
or
mov
jae
cmp
sar
sarl
aaa
loope
mov
jbe
inc
cmp
inc
mov
push
add
and
ficoms
divb
mov
lcall
xchg
xchg
outsb
sub
arpl
test
aas
stc
pop
cs
jb
pop
mov
into
xchg
neg
jmp
stos
sub
arpl
insb
lock
sub
fwait
inc
loop
or
test
call
lahf
sub
inc
sbb
lcall
test
aaa
in
cmp
jl
nop
popf
daa
cmc
xor
out
adc
jb
repnz
or
fwait
push
jl
mov
push
cmpsl
sbb
adc
pop
mov
xchg
outsl
and
sub
jb
lods
mov
out
imul
push
xor
cmc
mov
and
nop
loopne
lret
sub
inc
sahf
push
mov
hlt
sahf
test
mov
rcrb
sub
cld
push
imul
jno
xor
call
inc
movsl
adc
rolb
adc
sub
push
enter
cmc
jge
in
sbb
aad
clc
cvtps2pi
xchg
and
loop
addr16
pop
xchg
loop
into
out
cmp
fwait
aad
pop
fiadds
adc
sub
mov
cmp
push
cmpsb
sub
je
das
orb
jne
imul
lds
nop
ret
in
stos
pop
jp
cvtdq2ps
pop
vpmacsswd
xor
jb
push
push
jmp
mov
sbb
push
popa
test
jg
and
sbb
mov
popf
push
dec
mov
push
cmp
test
fmulp
jg
lret
pop
push
outsb
test
dec
dec
in
inc
shlb
push
xor
add
xchg
jno
sbb
lods
or
js
jo
jl
pop
call
aaa
imul
jns
or
push
adc
notb
or
adc
pop
mov
and
roll
mov
mov
cmpsl
add
or
in
pop
and
gs
push
out
shrb
or
int
dec
cli
adc
ja
sahf
adc
dec
mov
decb
xchg
les
xor
imul
mov
shl
cld
push
adc
je
ret
sub
mov
and
xor
jbe
sub
addr16
into
push
xor
scas
stos
or
sbb
les
cmpsl
sahf
outsl
push
or
mov
push
fsts
repz
repnz
push
jmp
flds
jle
pop
repz
dec
push
sti
push
stc
push
imul
test
loop
mov
jns
and
push
leave
and
jo
pop
pop
insb
out
push
sti
lcall
dec
mov
aam
adc
in
mov
or
js
imul
daa
fiaddl
mov
adc
push
mov
shl
in
ds
cmpsl
xchg
jecxz
scas
jge
scas
outsl
sub
sub
jb
scas
addr16
rclb
xchg
and
inc
sbb
fisttpll
popf
lea
jnp
sub
jl
aas
xlat
add
and
pop
cmpsb
cmp
cmp
xor
daa
xor
pop
push
insb
jmp
pop
sub
arpl
add
incb
jbe
dec
loop
xor
cmp
mov
shrl
mov
fldcw
add
xchg
in
push
mov
scas
pop
repnz
and
xor
loop
lret
push
pop
adcl
imulb
pusha
divl
cwtl
out
mov
inc
adc
sub
inc
popf
lds
sbb
subl
jp
inc
aas
aas
mov
or
cmpsl
xor
int3
pop
cs
test
ret
mov
push
xlat
xchg
mov
cmp
fidivl
movsb
and
xchg
adc
hlt
jg
mov
sbb
stos
outsb
inc
clc
mov
xchg
lods
call
and
mov
cltd
mov
movsl
out
int
pop
cmc
pop
cmp
xor
xcrypt-ctr
cmpsl
pop
cli
push
arpl
gs
fcomps
les
inc
sub
add
stos
mov
cmpsl
gs
rcll
iret
in
call
andl
hlt
mov
cs
fisttps
daa
stos
test
sub
insl
popf
pop
mov
cmp
xchg
outsb
jg
or
sub
lcall
pop
mov
clc
cmc
and
ljmp
push
mov
xchg
sbb
mov
jnp
js
stc
xchg
mov
jle
adc
sub
jle
ret
inc
in
sub
ror
pop
mov
ficomps
in
fucomip
sbb
push
sub
pop
pop
pop
push
add
arpl
in
test
cmp
lea
xchg
imul
scas
xor
mov
ret
inc
pop
je
sbb
cs
in
xor
lea
pop
dec
add
rcrb
int3
das
fldt
cmp
xchg
in
fst
ja
hlt
repnz
imul
xchg
ret
into
xchg
cli
xchg
add
and
aad
cwtl
outsb
daa
jmp
cmpsb
jns
xchg
cld
js
jmp
inc
xchg
andb
push
sbb
call
inc
js
movsl
push
dec
lea
popl
cmp
mov
insl
mov
jb
mov
cwtl
scas
sub
add
call
jecxz
pushf
jb
mov
mov
jmp
mov
push
cmp
dec
popa
lock
mov
push
pop
shrb
push
pop
sbb
cld
imul
add
iret
mov
pop
and
xchg
dec
push
in
push
outsl
adc
pushf
aaa
pop
data16
insb
in
lock
cmp
pop
pop
add
js
bnd
fs
adc
scas
andl
mov
je
xchg
jno
cmpsl
mov
xchg
mov
in
mov
fidivs
mov
adc
mov
xor
stos
xchg
lods
call
das
and
mov
add
es
mov
cmpsb
inc
pusha
push
jmp
pop
inc
and
push
adc
lds
ss
test
jmp
lods
pop
loop
adcl
jg
mov
sbb
icebp
psubq
push
add
jns
xchg
inc
inc
jle
mov
cmp
or
out
mov
fs
xor
xor
mov
adc
icebp
or
xchg
fildl
mov
in
dec
cmp
and
cmp
sub
aas
jb
aaa
je
mov
imul
add
push
mov
ljmp
pop
test
notb
pop
je
dec
ljmp
cs
adc
mov
nop
loope
xchg
sub
cltd
dec
pop
xchg
add
pop
and
push
cmc
adc
cmp
push
lret
dec
xor
pop
push
cmp
imul
dec
mov
mov
data16
mov
cmpl
mov
cmp
fsub
xchg
jmp
enter
dec
imul
lahf
idivb
push
ss
xor
xchg
xlat
mov
cmc
out
nop
mov
mov
decb
mov
insl
pop
add
test
jns
push
in
shlb
fsubrl
sti
sarb
mov
and
push
idiv
lret
jp
cmc
mov
jge
cmp
ds
push
mov
add
popf
inc
sub
scas
into
fcomi
fsts
push
mov
jp
jb
inc
sub
mov
std
cli
mov
mov
pop
sbb
int
dec
jns
add
inc
gs
pop
out
mov
sar
loopne
and
lcall
gs
xchg
ja
fidivrs
mov
out
int3
pop
jmp
mov
and
mov
and
dec
aas
or
mov
lret
in
mov
jp
jge
pop
pop
sbb
mov
sub
xchg
push
mov
arpl
lods
adc
pushf
mov
or
cmp
daa
ljmp
lret
sbb
jno
dec
add
insl
mov
fs
test
enter
popa
mov
lcall
dec
test
in
or
sarb
and
push
mov
inc
arpl
es
pop
hlt
stc
sbb
cwtl
in
pop
stos
mov
add
xchg
fidivs
mov
jge
sbb
inc
popf
mov
jns
out
outsb
dec
cwtl
mov
jnp
movsb
push
fildll
mov
cltd
out
inc
out
stos
nop
arpl
fldt
push
lret
pop
sahf
pop
xchg
mov
and
mov
inc
adc
sbb
ret
mov
jnp
inc
or
mov
clc
scas
out
cmpsl
lahf
adc
xor
sarl
sti
outsl
jno
xchg
mov
stos
sub
rclb
sbbb
movsb
inc
notl
jne
insb
aam
jg
mov
inc
dec
sub
out
popa
mov
and
xor
fwait
pop
inc
mov
sbb
push
push
fistpl
adc
repz
lret
aas
in
sarb
testb
push
outsl
in
xor
xchg
pop
jae
and
shrb
add
fstps
mov
das
rolb
sub
and
add
sub
cmc
and
lea
jg
and
int
cmp
stc
cwtl
mov
xor
aad
loopne
inc
call
adc
fistpll
out
dec
or
roll
dec
mov
insl
jmp
hlt
jl
sbb
rcr
inc
cli
xchg
adc
push
mov
mov
stos
jl
xchg
sub
lods
inc
andl
insl
pop
xlat
int3
pop
and
pop
pushf
push
xor
aas
and
adc
roll
sub
jp
lods
jl
ffree
movsl
and
loop
xor
lret
outsl
nop
push
shrb
push
adc
xchg
lahf
and
or
cld
addr16
dec
adc
pop
push
lods
rcrl
cmp
xor
and
call
aad
fsubrp
push
jmp
lock
and
movsl
pop
mov
adc
add
lock
dec
pop
cmp
loop
test
gs
jg
pop
lahf
pop
pop
out
call
cmp
pop
sub
cmp
mov
cs
add
rol
test
pop
cld
fnstcw
push
cmpsb
xchg
les
lods
inc
mov
jmp
push
jb
pop
leave
xor
imul
jmp
lret
repz
pop
dec
or
mov
jo
jb
push
test
call
mov
cld
cmp
mov
jb
jbe
sub
mov
add
pop
xchg
inc
cmp
sarb
lcall
xchg
cld
inc
jbe
int
std
cld
fwait
mov
rcll
cmpsb
mov
js
iret
mov
into
xchg
mov
sub
mov
cmp
repz
test
popa
insb
inc
add
fwait
cs
mov
pushf
sbb
enter
rol
pop
int3
dec
pop
dec
push
in
les
data16
ret
fisubrl
push
sub
xchg
outsb
xor
push
adc
inc
shrl
pop
add
mov
inc
loopne
cmpsl
xchg
pop
scas
sahf
fs
mov
insb
mov
push
stos
xchg
cmp
ficompl
and
pop
push
shlb
dec
aad
mov
pop
mov
dec
add
cmpsb
out
rolb
sbb
xchg
loope
inc
mov
negb
cmpsl
mov
cmpl
xor
jge
lea
mov
loope
and
mov
push
push
lcall
movsl
cmp
dec
mov
sub
and
push
xchg
shl
clc
pop
add
push
mov
adc
inc
fsubs
bound
mov
add
push
fcompl
jl
test
pop
xlat
sbb
cmp
pop
xor
in
mov
fisttpl
cmp
ret
add
xchg
jbe
imul
shll
add
lcall
hlt
inc
cld
push
test
xor
pop
lret
inc
rorl
scas
jne
std
sbbl
sub
add
sbb
inc
pop
gs
cmp
pop
clc
add
add
arpl
dec
loope
das
stc
add
sbb
hlt
push
ret
rol
gs
stos
jbe
xor
stc
mov
mov
roll
cmpsb
pop
sahf
sub
repz
fwait
adc
push
sub
ja
mov
push
inc
cmp
mov
mov
and
cli
mov
xchg
dec
mov
sti
sbb
adc
shr
pop
scas
out
xchg
stos
mov
xor
cld
fidivl
lahf
loopne,pt
add
ret
mov
outsl
sbb
mov
repnz
jb
movsl
adc
jno
push
out
jb
fbld
lds
loope
test
sbb
xor
sub
bound
sbb
sahf
push
imul
mov
sub
adc
xchg
iret
daa
xor
aam
sub
out
jle
mov
mov
dec
mov
jecxz
or
in
xchg
xchg
dec
or
jb
sahf
and
das
subb
addr16
jne
sub
xchg
pop
mov
xor
adc
sub
cmp
mulb
stos
data16
lahf
out
ret
xor
dec
xchg
jne
sarb
sbb
and
jno
add
fisttpl
mov
mov
lret
jge
xchg
xchg
and
hlt
enter
sub
inc
push
mov
es
mov
push
cld
inc
jnp
inc
inc
aad
cmp
xlat
jnp
mov
sub
and
dec
add
icebp
and
nop
mov
cmp
ljmp
mov
ret
and
mov
test
and
sub
imul
imul
mov
jb
jb
mov
cmp
pop
xor
mov
inc
xchg
sub
inc
gs
fbld
repz
not
xor
enter
mov
xchg
xor
mov
xchg
push
pop
dec
cmp
mov
push
pop
cwtl
mov
jnp
mov
dec
out
sbb
push
sub
not
jo
adcl
xchg
push
mov
push
add
jnp
icebp
ret
push
shll
mov
mov
fstpt
sub
daa
xchg
dec
add
fisttpl
popa
cmp
fnstenv
jg
xor
inc
jne
dec
or
in
loop
cld
testl
and
out
mov
pushf
mov
adc
popa
aam
adc
mov
lcall
dec
stos
sbb
mov
fldcw
or
pop
fld
inc
sbb
fs
inc
or
mov
cltd
push
imul
cli
addr16
jecxz
push
mov
aam
iret
sti
stos
rorb
inc
daa
add
mov
aaa
ret
loope
inc
rclb
cli
fndisi(8087
xchg
push
xchg
mov
mov
arpl
subl
cmp
push
mov
lods
repz
add
jae
popa
xchg
call
push
ja
inc
popf
fsubs
dec
cwtl
pop
push
cmp
dec
imul
insb
aam
pop
mov
frstor
or
std
out
jnp
test
or
std
push
fcmovnu
inc
inc
jp
jbe
mov
mov
mov
orl
sbbl
mov
jmp
mov
cmc
dec
xchg
push
stc
les
in
mov
inc
inc
lods
sub
test
sub
sub
cmp
or
jg
ret
fs
xlat
push
push
and
jp
xchg
dec
popa
fidivl
xchg
stc
loopne
test
enter
shlb
jo
icebp
and
test
cmpsb
insl
xchg
xor
rcrb
inc
xor
inc
push
xor
mov
cmp
ficompl
xchg
mov
cmp
lcall
rcrb
xchg
clc
dec
adc
jae
xchg
mov
or
add
sbb
pop
or
push
mov
pop
insb
addr16
adc
xlat
lods
movsb
repz
inc
ljmp
test
into
adc
pop
enter
divb
and
push
repz
repz
std
hlt
or
outsl
jmp
popa
and
or
lods
dec
mov
nop
or
jmp
mov
push
mov
sub
cli
xor
lds
add
jge
jecxz
test
pop
lock
dec
sahf
lret
push
ret
lods
sbb
fwait
push
dec
push
out
test
in
lret
dec
xchg
push
xchg
or
divb
or
rcll
mov
mov
dec
cmp
push
jl
and
movsb
adc
or
fists
jl
push
xchg
lret
cmpsb
sub
nop
sbb
das
cmp
fs
jns
push
outsb
inc
cld
sti
xchg
test
push
lods
dec
jl
or
loopne
adc
ret
ror
pushf
fmuls
jnp
testl
sbb
cmove
pop
and
jl
call
aam
lahf
nop
xchg
pop
clc
mov
cmpsl
lahf
add
or
xchg
sub
scas
mov
sbb
pop
das
adc
movsl
cmc
xchg
pop
xor
dec
cmpsb
add
xchg
cmp
cmp
aas
push
nop
push
ret
in
fadd
je
jl
inc
nop
orb
fisubs
push
sbb
cmc
dec
repnz
push
and
jl
out
ret
sub
push
dec
mov
inc
push
push
in
clc
rorb
imul
pop
add
add
fcmovnu
xlat
test
aaa
mov
xchg
or
ret
and
incl
add
out
xchg
ss
push
mov
jl
mov
daa
cmc
jo
repz
stos
sbb
pop
pop
insb
testl
adc
sbb
mov
out
ds
jecxz
int3
fistpll
fidivrs
adc
pop
repnz
mov
cltd
jmp
lret
inc
imul
lods
scas
lods
test
dec
dec
rcrl
arpl
mov
mov
mov
jbe
add
mov
jbe
daa
aad
dec
subl
xchg
xchg
cltd
pop
and
mov
jns
mov
add
movsb
rorl
inc
andb
or
inc
mov
pop
fcoml
dec
inc
stos
xchg
add
mov
fbstp
aad
sub
leave
movsl
jno
cmp
cltd
push
cmpsl
sub
inc
js
repz
xor
in
bound
stos
arpl
push
js
add
or
adc
mov
sub
and
stos
cmp
sti
sbb
push
dec
pusha
push
loope
fs
mov
sbb
movnti
sub
jecxz
push
std
rorb
jmp
push
cmp
sti
adc
mov
fsubr
jnp
out
aam
enter
xor
imul
mov
cmp
lds
pop
aad
add
out
pop
sbb
cmp
sub
jns
loope
lods
sbb
pusha
cmpsb
push
aaa
mov
mov
xor
loopne
popf
lcall
mov
adc
cmp
test
sub
jge
push
lcall
je
and
jmp
pop
add
xor
sub
incb
cwtl
repnz
mov
notb
xchg
fwait
daa
mov
stos
shlb
sbb
and
xchg
mov
jecxz
daa
pop
addr16
jns
adc
push
fwait
and
cmp
inc
inc
pushf
sub
add
insl
ja
or
and
movsb
adc
stos
ss
packuswb
pop
mov
mov
pusha
stos
pop
ds
into
pop
sbbb
dec
arpl
leave
or
mov
loop
aad
and
sbb
je
out
dec
pop
imul
insb
ret
movsl
js
mov
and
rorl
fistpll
add
movsb
add
fwait
nop
add
andnps
sub
out
adc
mov
mov
push
push
pushl
ret
inc
dec
push
roll
test
cmpsl
cmc
fisubl
lret
jecxz
xorl
mov
pop
xor
add
jp
mov
mov
sbb
xchg
push
in
pop
add
repnz
rol
std
aas
jno
pushf
hlt
pop
jae
ret
std
pushf
shl
push
adc
mov
enter
arpl
mov
push
xor
fildll
repz
and
int
ficoms
pop
xchg
mov
in
test
xor
stos
cmp
mov
stos
dec
adcb
nop
std
sub
sub
mov
inc
sbb
xchg
fldenv
push
adc
imul
inc
pop
jmp
pop
or
xor
pushf
nop
inc
nop
mov
rclw
jle
pop
mov
subb
mov
xor
movsb
outsl
fwait
sbb
aad
mov
sbb
push
out
mov
roll
jo
ja
adc
aam
icebp
lret
xor
inc
and
clc
lahf
scas
leave
mul
fsubl
and
push
aam
jae
lcall
pop
fimull
inc
lahf
dec
mov
cltd
clc
in
or
movsl
stos
les
and
add
sbbl
sarb
les
mov
ds
xchg
push
cs
subb
push
rcll
adc
inc
popf
enter
pop
insb
test
mov
scas
movsl
pop
xchg
stc
sbb
or
cmpb
dec
fcmovne
mov
or
icebp
sbb
fidivrl
repnz
sub
fnstenv
iret
sbb
cli
mov
or
loopne
js
sbb
out
push
fcoms
ss
cmp
dec
data16
dec
decb
xchg
add
pop
pop
adc
arpl
rcrb
inc
fdivl
test
jl
sub
jnp
cmpsb
xor
xchg
adcl
pop
orb
icebp
and
pop
mov
and
mov
insl
sbb
fildl
fmul
stc
ds
dec
push
lret
mov
clc
dec
or
aaa
call
jmp
mov
jo
jle
mov
test
push
cmp
dec
in
sub
and
mov
stos
xchg
js
inc
and
xchg
mov
inc
pop
xlat
sahf
imul
add
lods
or
pop
mov
aam
aas
loope
addr16
adc
xor
mov
ds
enter
sbb
leave
cmp
hlt
pop
idivl
inc
std
pop
orb
xchg
es
popa
add
push
fmuls
sbbb
mov
lods
push
xchg
stos
push
adc
int3
and
rorb
xchg
jmp
mov
jg
and
adc
adc
loop
fwait
pop
mov
notb
pop
mov
das
idivl
adc
sbb
rol
and
sub
jnp
xchg
cmpsb
cmp
xor
inc
nop
mov
idivb
loope
outsl
ficoms
cmp
fs
add
aam
hlt
aas
xor
xchg
aas
cmc
or
lret
scas
cmp
dec
push
mov
ret
pop
aad
into
adc
xchg
push
dec
adc
xchg
inc
inc
adc
iret
jp
lahf
adc
das
sarb
fldenv
clc
push
jno
xchg
xor
enter
scas
ret
scas
ljmp
popf
push
aaa
movsb
sbb
lcall
sub
fsubrs
xlat
xchg
stos
ja
xlat
jno
adcb
sbb
or
sti
divb
loopne
ss
mov
fstpt
divl
dec
jge
aas
cmpsl
aad
es
mov
pop
into
ret
and
fldl
xchg
jb
jmp
jo
pushf
push
inc
cmc
cmp
fcmove
stos
insl
sub
cld
cmpsl
cltd
mov
pop
lret
and
out
fs
mov
mov
push
mov
in
inc
stos
inc
push
push
roll
push
scas
arpl
adc
out
ja
sbb
jge
and
sbb
pop
repz
leave
fnstenv
sub
dec
nop
lock
test
rorb
test
sbb
or
in
xor
jo
mov
lcall
adcb
jnp
mov
test
mov
aad
lds
dec
mov
or
out
xchg
push
mov
jp
enter
adc
xor
or
pop
stos
inc
sub
adc
add
mov
lcall
sbbb
pop
inc
xor
dec
adc
adc
test
jno
cltd
andl
cmp
adc
xor
pop
pop
pop
add
inc
mov
jmp
sbb
enter
rolb
je,pt
sbb
add
arpl
mov
rorl
subl
jle
sti
insl
je
or
bound
in
sub
mov
aad
add
mov
adc
fs
sub
mov
pop
inc
pop
or
repnz
push
insl
push
out
cmp
in
inc
test
sarl
lock
das
xor
scas
mov
pop
lock
or
mov
sbb
add
add
pusha
xchg
fldcw
jbe
pop
cmp
mov
fistpl
sahf
dec
cs
aam
fildll
inc
dec
ret
mov
scas
shlb
mov
popa
mov
push
aam
push
daa
mov
mov
dec
out
push
js
cld
jge
orl
ss
xor
imul
aas
sti
and
imulb
or
pop
mov
or
insb
aad
enter
test
ja
push
xchg
lahf
xor
pop
shlb
cwtl
shll
insl
pushf
jp
push
pop
inc
adc
out
mov
and
ljmp
call
outsb
test
cltd
jne
push
inc
jo
dec
scas
inc
and
mov
add
cmpsl
xor
mov
dec
xor
and
jae
out
repnz
or
and
lock
jg
pop
sbb
or
xor
cmpl
xchg
icebp
sar
sbb
xlat
mov
inc
sbb
jb
add
ss
fsubrl
test
hlt
fs
mov
dec
testb
in
adc
shll
ja
jne
lcall
push
sbb
and
dec
mov
pop
mov
adc
pop
mov
add
movb
jnp
ljmp
add
sbb
aas
push
bnd
sbb
in
lds
dec
cmp
fcompl
cmp
lahf
sarb
incb
test
mov
hlt
stos
dec
imul
std
call
jecxz
ficoms
cld
mov
mov
rclb
pusha
xchg
dec
das
arpl
ficompl
aaa
cmp
inc
and
loopne
out
and
inc
add
fcmovnu
ret
movsl
test
gs
data16
pop
sub
pop
add
ss
test
outsb
call
adc
lcall
mov
pop
cmpsb
cmpsb
add
cmp
out
lods
jle
test
mov
aad
cmp
into
pop
pushf
outsl
rorl
cs
in
in
inc
repz
lock
add
pop
xchg
jp
xchg
sti
adc
das
out
shlb
pop
lods
dec
lods
or
cmc
sub
addb
imulb
daa
push
lret
sub
lret
adcb
mov
fildl
fistl
cmp
xor
mov
testb
dec
pop
cmpb
addl
or
in
xor
mov
aas
inc
push
bound
or
add
in
shrl
jmp
xor
inc
clc
push
dec
sub
pop
cmpsl
sbb
in
pop
jl
stos
add
jp
insb
mov
cmc
mov
sub
mov
cmp
inc
in
sub
dec
fs
push
fisubrs
sbb
rclb
dec
fmull
push
imul
scas
mov
clc
int
mov
or
sbb
repnz
jl
jb
push
out
adc
mov
dec
pusha
imul
xchg
stos
jge
dec
lret
jae
inc
ds
int
loope
add
pop
add
sub
lcall
in
lods
mov
lds
rcrl
cmp
push
xor
sarb
cld
pop
dec
daa
adc
lret
dec
fcoml
dec
xlat
push
adcl
mov
cmp
mov
arpl
fisubrl
add
in
xchg
mov
xor
sub
fucomp
test
adc
push
mov
xor
push
ret
cld
cmc
inc
pop
inc
cmp
out
add
mov
xor
jno
push
and
loope
mov
lods
mov
add
add
mov
out
rorl
cmpb
in
xor
dec
int3
stc
lds
mov
or
inc
shrl
inc
xor
fstpt
mov
aam
int
out
adc
pop
fiadds
push
adc
fidivl
outsb
fmull
pop
sbb
hlt
jp
pop
lds
daa
sub
imul
mov
int3
cli
jns
ret
pop
sbbl
insl
clc
ja
jg
sub
cmc
scas
lods
mov
neg
adc
mov
and
aam
and
push
push
mov
jl
and
push
and
sub
lcall
inc
jg
mov
pop
ret
int
pop
lahf
mov
out
out
xor
mov
gs
cmpsl
nopl
scas
add
push
or
push
int
fwait
dec
inc
sbb
lods
cmpsb
cltd
pop
ja
push
ss
pop
je
jae
xor
popa
mov
mov
cltd
lret
pop
adc
xchg
outsb
jns
add
repnz
mov
jb
out
mov
rclb
fwait
mov
into
push
pop
shlb
fsubrl
loopne
lods
fwait
lock
mov
adc
icebp
mov
rcr
pop
gs
loope
shr
xchg
push
stos
fsts
mov
push
das
pop
xorl
inc
ljmp
sbbl
popa
subl
sbbl
outsb
hlt
loop
ret
lds
jno
pushf
pop
fidivs
hlt
cmp
xlat
jo
in
cvtdq2ps
int
int
lcall
std
outsl
adc
push
xor
inc
cmp
pop
loope
mov
mov
xor
jb
xor
jb
jle
mov
jae
xor
dec
adc
lea
push
pop
mov
mov
test
je
cld
and
daa
and
pusha
lods
dec
push
push
mov
jae
xchg
movsb
andb
in
dec
imul
add
testb
lret
test
mov
popf
cmp
add
imul
jno
push
pushf
je
fisubrs
cmpsb
push
popa
bswap
pop
jp
sub
or
data16
sub
int
fidivs
sbbb
call
dec
add
outsb
jne
xor
cmpsb
dec
jne
mov
push
mov
mov
ja
jle
pop
dec
insl
fwait
jae
ds
xchg
inc
pop
xor
pop
jl
lods
pop
cmp
popf
mov
xor
cli
pop
mov
lret
clc
fdivrl
cmp
cwtl
pop
inc
jle
sub
and
mov
movsl
jne
jne
and
lds
ret
cmc
mov
jl
loope
mov
and
pop
xchg
clc
sub
out
pusha
into
js
gs
rcrb
arpl
or
das
push
pop
mov
pusha
enter
inc
jbe
mov
sub
mov
jecxz
jecxz
movsb
mov
jae
in
std
popa
and
xlat
loope
mov
repz
adc
dec
cmp
aam
jecxz
mov
dec
dec
sbb
imul
dec
xchg
pop
fists
xchg
pop
out
mov
enter
movsb
sbb
nop
test
jge
mov
aaa
loope
insl
es
mov
xchg
add
mov
dec
mov
sbb
xchg
xor
mov
xor
ret
adc
enter
in
or
or
push
mov
xchg
outsb
lods
cmpsb
mov
sub
xchg
jl
xchg
cwtl
fs
adc
pop
test
insb
dec
push
pop
dec
mov
ret
inc
mov
das
push
repz
cmpsb
mov
jne
inc
cli
loope
and
sub
testl
cmp
xor
inc
xor
add
mov
into
call
imul
es
test
inc
clc
gs
insb
shlb
pop
xchg
dec
cmp
adc
scas
movsl
jb
inc
movsl
jne
dec
adc
jae
pop
loope
idivl
stos
in
push
adc
std
mov
gs
xchg
cmp
lret
sbb
xlat
ljmp
xor
inc
das
cmp
int
aad
iret
scas
dec
mov
pop
lods
int
fbld
push
shlb
lret
fwait
inc
and
mov
inc
test
fnsetpm(287
jnp
and
mov
and
mov
sbb
mov
push
sbb
jl
mov
jno
adc
cltd
aad
fcompl
in
xchg
xchg
or
inc
dec
out
mov
push
ja
cltd
dec
and
pushf
mov
ret
inc
add
sub
xlat
rolb
mov
add
das
add
jae
and
and
shlb
aad
ss
cmpsb
add
clc
pushf
push
adc
sub
jbe
pop
xchg
aam
xor
je
xchg
or
mov
sbb
pop
fcmove
mov
add
imul
fcoms
push
shlb
jo
sub
push
js
add
push
loop
notb
movsb
jl
notb
sub
cwtl
jae
mov
rolb
pop
mov
int3
and
sbb
mov
xchg
lret
mov
int
jle
fisubl
ret
addr16
leave
cli
inc
pop
jecxz
filds
sahf
pop
sbbb
jecxz
xchg
fsubrp
pop
pusha
mov
fsubl
out
ret
aas
divb
add
inc
into
mov
sub
push
pop
call
daa
cmpsl
add
pop
je
cmp
cmp
and
xchg
gs
push
mov
sub
mov
ja
add
ds
imul
scas
xchg
jle
adcb
fwait
sub
std
mov
fimull
icebp
dec
jp
sbb
dec
cmp
or
mulb
movsb
inc
repz
mov
enter
fs
inc
shrb
adc
mov
cmc
pop
stos
andb
and
mov
inc
nop
rcrl
lods
push
xchg
dec
shl
inc
adc
pusha
leave
inc
xchg
outsl
jnp
sbb
ds
push
mov
sub
lds
faddl
xchg
or
and
mov
fistl
cmp
imul
adc
pop
push
test
jo
stos
popf
dec
mov
sbb
call
lods
int
lods
or
add
push
test
or
stc
mov
int
push
ss
dec
lcall
lret
fistps
mov
sbb
insl
jns
sub
pop
lock
dec
mov
arpl
jb
mov
mov
pop
decl
loop
mov
fcmove
sub
and
inc
sbb
es
insl
pop
push
repnz
push
xor
in
cmpsl
pop
jno
sbb
add
push
mov
or
pop
pop
test
cmp
inc
es
push
ret
push
les
idiv
int3
lds
int
xchg
add
push
dec
cmpsb
es
inc
xchg
cmp
mov
negb
sub
jge
push
popf
mov
out
call
sub
pop
push
or
call
cld
lret
dec
cmp
sbb
or
les
mov
addr16
pop
jnp
fcmovne
mov
in
or
fsubrs
pop
movups
xor
gs
lea
dec
mov
add
sub
add
xchg
js
adc
mov
mov
stos
and
jge
cltd
sub
data16
cmpsb
cmp
in
inc
mov
rcrl
rclb
mov
push
add
inc
cltd
lock
cmp
mov
movsb
fadd
test
jecxz
pop
pusha
std
mov
jb
or
test
sbb
cmc
imul
in
fcomip
clc
dec
les
cmp
mov
gs
inc
pop
jbe
lcall
mov
lods
inc
dec
call
pop
or
fstl
xchg
frstor
outsl
inc
xor
imul
add
out
mov
shl
mov
pop
call
cmp
in
add
cli
mov
fs
int
xchg
adc
std
dec
loopne
add
sub
lret
sub
sub
out
lret
into
mov
mov
cmp
cs
repnz
int
fidivl
idivb
dec
pop
cli
popf
xlat
into
add
ds
addr16
mov
push
imul
jl
sbb
mov
arpl
rol
add
push
or
or
roll
mov
xlat
mov
arpl
or
aaa
in
dec
enter
and
jge
inc
mov
lods
dec
ja
cld
pop
bound
ss
jne
sub
pusha
ljmp
sub
sbb
sarl
sahf
mov
fcoms
inc
pop
in
fyl2x
jae
or
and
push
leave
xchg
jp
in
and
popf
movsb
push
jecxz
sbb
mov
mov
lock
das
aas
mov
xchg
dec
and
xchg
pop
mov
xchg
xchg
jae
cld
test
pushaw
push
outsl
cmp
outsb
sub
sbbl
cs
mov
sub
insl
int
lods
fistpll
sub
pop
or
sub
loop
sub
inc
fs
xor
inc
ljmp
pop
in
test
loopne
cltd
insb
cmpsl
mov
and
in
xchg
add
push
mov
lods
dec
mov
adc
aad
dec
shlb
inc
push
arpl
mov
sbb
lods
test
cli
add
mov
sbb
pop
mov
inc
in
push
mov
sub
cmp
movsl
xor
stos
icebp
stos
fisttpl
add
jl
mov
push
mov
scas
fs
jns
cmp
jge
mov
jle
out
add
fiadds
xor
adc
ret
lods
ljmp
dec
sub
pop
pop
dec
fldenv
aaa
lea
push
fnstcw
or
inc
loopne
add
jbe
inc
jp
stos
fistpll
fcom
mov
scas
dec
leave
insb
dec
add
push
xor
leave
ss
loope
adc
dec
and
frstor
pop
cmpsb
mov
popa
sti
jle
xchg
rolb
jae
dec
pop
push
cmpsl
xchg
bts
jp
pop
sub
push
outsl
sbb
mov
int3
fistpl
lret
outsl
mov
jg
mov
lret
xor
sarl
gs
inc
shrl
ret
add
pop
mov
mov
pop
lds
inc
pop
fiadds
cmpsb
or
inc
outsl
mov
and
test
mov
jne
test
scas
add
inc
test
or
push
mov
int3
pop
adc
cmp
xor
push
adcb
fsts
add
mov
and
mov
repnz
mov
push
leave
pop
add
scas
add
out
cmp
das
cli
popa
orl
inc
lahf
xor
jb
mov
xor
jb
adc
stc
xchg
cmp
loopne
js
outsb
push
jmp
adc
jle
sti
xchg
fyl2xp1
repz
movsb
adc
pop
out
push
lcall
out
enter
push
sbb
gs
jne
pop
lret
dec
fisubs
ret
cmpsl
loop
icebp
or
mov
xchg
ret
sahf
mov
loopne
and
and
cli
cli
sbb
dec
incl
lret
jg
push
push
inc
stos
push
jl
ret
rclb
sbb
cwtl
fstps
int
mov
insl
mov
repz
lds
test
leave
add
add
loop
mov
lock
jle
dec
push
jmp
ficoms
inc
mov
jecxz
nop
cmovb
mov
inc
outsl
sbb
sbb
jae
outsb
lea
dec
push
inc
aad
or
leave
and
rorl
xchg
sub
fimull
and
mov
inc
jle
mov
lds
mov
pop
xor
jo
cmp
dec
aam
cld
inc
jns
and
push
or
xchg
bound
jle
ror
mov
mov
mov
es
jae
scas
cmp
out
pop
int3
lock
xchg
ficoml
xlat
sub
rcll
and
ss
inc
push
jecxz
sti
sub
fistpll
pop
sbb
or
mov
aaa
dec
ja
xchg
cmpsl
fxch
mov
cmp
ds
pop
mov
or
mov
xchg
lea
subl
loope
xchg
cwtl
xor
push
test
lock
dec
dec
pushf
lock
push
pusha
or
aas
out
mov
out
push
repnz
pop
inc
sahf
fwait
sub
jl
sub
mov
fbld
js
inc
pushf
movsl
movb
mov
push
cld
mov
mov
lods
mov
fisttpl
les
imul
fs
cwtl
pop
push
aaa
dec
in
cmp
leavew
cmc
enter
pop
adc
push
aam
sbb
jp
or
mov
stos
shlb
arpl
pop
jle
imul
fcmovnu
ret
test
les
sub
aaa
push
sahf
mov
mov
mov
lcall
push
add
cmp
pop
ret
mov
or
daa
pusha
xor
sbb
orl
cmp
enter
sbb
and
adc
addr16
btc
icebp
scas
mov
mov
adc
sub
ret
fisubrl
das
push
dec
out
shll
or
xchg
lcall
lods
cmp
sub
ss
ret
adc
push
js
insl
jecxz
xor
xchg
jo
pop
inc
mov
cmp
pop
inc
dec
xor
sub
ficompl
lea
scas
xchg
inc
out
daa
lods
hlt
dec
fcompl
aad
xchg
cmpb
jge
sub
and
mov
rcll
push
mov
ret
loope
jge
dec
in
mov
sbb
xchg
jge
and
xchg
out
mov
in
xchg
outsw
sarb
shrl
fistps
dec
mov
xchg
xchg
xchg
in
xchg
sbb
xchg
addr16
or
fstpt
cmovnp
inc
daa
adc
mov
and
dec
dec
add
push
dec
mov
out
in
aas
repz
js
mov
aam
adc
aad
cmpb
xor
cmp
mov
cld
fistpll
push
cmpsb
sbb
mov
pop
outsb
pop
imul
mov
out
xor
ss
clc
loop
and
push
insb
movsb
xor
or
rcrb
jno
add
cld
inc
pop
pusha
cli
fwait
adcl
dec
lret
mov
cmp
ret
inc
pop
lock
push
lea
movsb
inc
and
pop
lret
cmp
rcrb
xor
xchg
mov
adc
jecxz
ret
pop
inc
dec
xchg
add
xchg
dec
bound
fisubrs
pop
cwtl
lods
int
push
cmp
push
xchg
rcll
jae
mov
fldt
sbb
dec
outsl
jmp
addl
xor
push
xchg
add
mov
imul
jbe
popf
mov
in
jl
sahf
dec
dec
cmpsl
cs
fwait
sbb
and
mov
jnp
sbb
fs
inc
ss
cmp
pop
mov
sub
mov
mov
and
mov
mov
les
ljmp
jle
mov
filds
stc
out
outsl
bndstx
mov
xlat
pop
mov
mov
cmp
cmp
outsl
into
ss
pop
mov
lahf
int3
jno
pop
mov
dec
jno
xchg
std
gs
push
fwait
and
lcall
add
shrb
lds
fiadds
dec
xchg
mov
adc
push
sbb
test
push
les
jae
sbb
inc
push
fldenv
sbb
xchg
scas
jae
sbb
fstps
dec
jb
push
cld
cmp
pop
clc
outsl
test
cwtl
outsl
or
sbb
lea
sub
jo
das
inc
push
adc
jecxz
xor
jnp
mov
aaa
fildll
clc
ret
mov
pop
fldt
xorl
xor
cs
mov
push
mov
xor
add
rcrl
cmpb
pusha
imul
mov
jle
out
xlat
pushf
jp
int3
push
mov
outsl
arpl
imul
sbb
je
and
add
cmp
pop
xor
mov
mov
jnp
mov
add
rcrl
dec
cmp
sahf
insb
or
inc
loope
out
or
mov
stc
movsl
in
test
lret
ljmp
mov
sbb
sarl
test
mov
repnz
sbb
or
and
das
test
inc
mov
test
pop
inc
jae
in
pop
jle
sbb
inc
mov
push
jecxz
addl
jge
xchg
push
cs
repz
icebp
jle
dec
pop
enter
jo
inc
call
push
hlt
mov
js
aam
xchg
test
loop
outsl
ror
lret
aas
gs
ja
xor
scas
fdivl
jo
fiaddl
sbb
in
dec
mov
stos
popf
enter
pop
lock
lods
jmp
mov
adcl
adc
inc
or
push
push
xor
dec
lret
push
insb
cmp
jg
push
mov
push
out
fs
mov
mov
ficoml
sbb
fs
faddl
mov
cld
cmp
ds
orl
mov
loopne
sbb
mov
das
daa
push
xchg
movsl
mov
addl
xor
fnstcw
lods
orb
jbe
mov
inc
and
jecxz
mov
sbb
leave
enter
sbb
and
jno
cli
push
out
jle
test
xchg
cmpsb
into
ja
cmp
pop
mov
and
subps
pop
push
cmpsb
orl
sti
leave
or
jp
cmp
aam
lods
push
push
out
rclb
lcall
xor
mov
mov
gs
xor
xchg
out
ss
jl
xchg
push
push
sbb
dec
dec
arpl
aam
mov
stc
push
sarb
push
mov
add
test
xchg
cmpb
push
fidivrl
out
je
mov
test
ja
int
loope
pop
clc
iret
pusha
in
xchg
sub
outsb
loope
icebp
xor
lods
pop
mov
dec
aam
ret
mov
jo
out
nop
push
mov
jmp
jle
sbb
jnp
jno
inc
int3
pop
js
arpl
and
mov
pushf
xor
xchg
xor
fisttpll
lods
ficompl
inc
fwait
push
ret
fucom
shrl
cld
mulb
aad
jae
jg
jbe
out
hlt
dec
add
jnp
out
jno
cs
sarl
loop
and
in
sti
xchg
leave
in
mov
pop
out
jge
repnz
xchg
xchg
lods
arpl
ret
mov
sub
imul
cmp
sbb
sar
mov
test
bound
cli
xchg
cltd
add
adc
test
jl
test
cli
sub
cmp
aaa
stc
or
mov
orb
add
fwait
and
out
push
dec
outsl
imul
div
xor
daa
cmpsb
and
cmp
pop
push
push
mov
or
mov
jno
cmp
pop
sbb
leave
fcoml
imull
ss
lret
cltd
mov
jmp
ja
test
fstp
mov
jbe
stc
movsl
inc
adc
popl
sub
xchg
sbb
cs
rcrl
loopne
mov
bound
cld
cwtl
inc
jmp
js
cmpsb
cmpsb
cli
imul
mov
pop
sub
lret
mov
sbb
cmp
lods
sub
xor
pop
stc
dec
jbe
les
in
lcall
fisttpll
lods
ss
in
mov
sbb
mov
cs
xor
test
lahf
xchg
lea
dec
lret
adc
test
push
fcmovne
jmp
insb
adc
xchg
xor
dec
fsub
into
sbb
cmp
jae
adc
cmp
addl
sti
pop
daa
aaa
dec
repz
pop
push
insl
cmc
mov
and
add
sbb
scas
pop
xor
push
ret
enter
por
push
jns
stc
repz
inc
inc
xorl
dec
nop
sahf
out
lods
aam
shrb
xchg
mov
sahf
mov
add
xor
push
in
xchg
mov
cli
lret
ss
dec
popa
aaa
mov
adc
mov
out
lret
push
push
loope
addb
int
push
xchg
movsl
mov
mov
push
jno
mov
lods
shlb
insb
movsb
cmp
loopne
push
jle
push
stos
mov
das
add
cmp
shll
scas
shl
mov
mov
ret
push
imul
lock
or
enter
rcr
cld
xorb
xor
add
mov
sub
int3
add
push
dec
jne
jp
cmp
inc
push
popf
ljmp
xor
and
cs
repnz
mov
mov
pop
mov
out
mov
outsl
test
in
mov
pop
ja
inc
testb
push
add
xor
push
mov
sub
xor
cltd
fildl
add
or
jge
clc
cwtl
adc
jmp
test
mov
sbb
ficompl
mov
rorl
fmul
jle
cli
icebp
popf
adc
test
cmp
lods
adc
les
pushf
cmpsb
out
sbb
jle
mov
lret
fwait
dec
cld
sahf
push
in
or
sub
push
out
xchg
push
icebp
leave
mov
xchg
enter
pop
in
lods
inc
clc
cmp
and
xchg
jmp
push
dec
xchg
mov
jecxz
cld
mov
pop
shll
std
pushf
repnz
sub
into
movsl
push
xor
ss
dec
cmpsl
add
testb
pop
pop
push
jb
adc
in
stc
dec
jg
lock
or
mov
push
sbb
jae
mov
fwait
add
mov
xchg
int
inc
jmp
fcmovb
inc
mov
pop
mov
mov
int
push
pop
mov
repz
add
iret
push
jg
stc
mov
xor
jg
ja
aad
sub
mov
inc
jecxz
adc
fisttpll
fcom
sarl
mov
add
cltd
adc
ljmp
nop
sarl
adc
pop
mov
arpl
sbb
sub
hlt
pop
sub
mov
cli
insb
mov
jmp
mov
insb
stos
mov
aam
cs
nop
rcll
xor
sahf
test
cli
fildll
icebp
pop
jg
in
pop
inc
and
fdivrs
xchg
adc
jns
dec
mov
fcomp
dec
fbstp
xchg
pop
out
pop
jmp
mov
repnz
into
push
ja
cmc
mov
or
mull
test
movsl
jnp
out
or
push
pop
pop
arpl
shlb
push
mov
aas
dec
lret
vphaddwq
mov
fsubrl
pusha
jae
rorl
stc
jae
stc
test
cmp
jecxz
in
cmp
push
jno
adc
cmp
sbb
mov
aaa
add
push
cwtl
test
sub
shl
subb
and
jns
adc
aaa
cmp
fiadds
mov
test
adc
push
push
and
mov
pop
xor
dec
in
aaa
xchg
out
lods
mov
cli
sub
jae
inc
mov
movups
add
cmp
test
cli
jae
outsb
in
sbb
cmp
divl
or
sar
adc
sahf
cmp
mov
xacquire
mov
pop
or
dec
popa
inc
sub
ret
push
xchg
push
mov
adc
fisttpl
xchg
or
push
push
test
in
sub
lret
stos
mov
scas
call
sbb
loope
sbb
or
cmp
cli
jge
addr16
fisubrs
lret
or
mov
out
xor
xchg
subb
push
test
lods
inc
loop
and
in
enter
mov
add
sub
das
jae
pop
inc
sbb
int
lret
loope
gs
pop
into
mov
adc
and
jae
aas
dec
pop
jg
add
out
mov
mov
xor
test
dec
sub
inc
shlb
cs
inc
das
call
dec
sub
das
lods
aas
iret
xlat
mov
dec
ret
cmp
inc
push
ljmp
fwait
dec
outsb
sbb
mov
xor
xor
sbbb
jp
xchg
lods
mov
adc
pop
aaa
lock
repnz
ds
dec
ret
fucomi
popf
mov
inc
clc
xor
adc
jnp
test
repz
and
insb
imul
xchg
into
mov
nop
js
and
push
xor
sub
mov
cli
imul
pop
jge
or
adc
xchg
paddsb
repnz
jne
cmpsl
pop
test
cmpsl
out
popa
clc
inc
aam
movsb
hlt
pop
fbstp
divb
jb
xchg
jns
shrb
idivb
sbb
mov
fwait
mov
mulb
xchg
push
push
ret
cmp
mov
mov
out
inc
sub
jae
sub
dec
dec
cmp
cwtl
loope
movsl
test
sbb
and
inc
subl
jl
cmp
leave
xchg
dec
mov
mov
insl
stos
je
addb
enter
lock
in
xchg
cli
push
pop
xlat
lea
or
inc
addr16
das
cltd
aas
push
adc
test
push
insl
dec
outsl
cmp
push
mov
lret
test
es
mov
cmp
pop
xchg
cmpb
inc
dec
cmp
pop
lea
aad
fcmovnu
or
sbb
mov
dec
add
mov
imul
out
ss
lock
lcall
jp
push
aas
lock
adc
jae
xchg
xchg
fwait
in
icebp
mov
int3
push
sbb
sub
add
jl
lock
xor
mov
sbb
mov
sbbb
add
out
test
fsubrp
and
mov
sbb
aad
addr16
sarb
or
mov
jge
dec
adc
inc
mov
xorl
xlat
cmp
int
jae
mov
inc
push
pop
xchg
cmp
out
negl
cmpsl
inc
mov
jg
out
and
pop
out
xchg
pop
mov
dec
jge
mov
out
xor
add
rorl
xchg
jns
pop
repnz
lcall
lahf
jl
push
icebp
mov
push
stc
mov
xchg
lds
ror
inc
sysret
lret
out
cli
add
shr
cmp
fs
les
mov
mov
mov
in
iret
and
gs
add
push
mov
ret
aas
mov
out
daa
arpl
mov
pop
add
fwait
or
jb
mov
push
cld
jg
add
loope
loope
loope
mov
mov
dec
cwtl
insb
jb
and
sbb
inc
mov
cmpsb
xor
gs
data16
in
in
scas
dec
add
xchg
pop
fs
insl
mov
xor
inc
cmc
jl
lcall
movsl
ds
jo
fdivrs
imul
sub
push
and
pop
das
add
fsubl
push
push
nop
pushf
adc
in
mov
lods
stos
int
lock
push
shrb
mov
push
incb
xchg
inc
pop
mov
push
or
test
jge
nop
mov
out
shlb
mov
out
sarb
xorb
es
pop
je
jmp
jg
je
cmp
add
mov
aad
adc
push
popl
and
test
fldt
jno
scas
cs
popf
pop
sub
rcll
jo
fsubrp
inc
mov
shlb
dec
mov
divb
movsl
mov
cmp
outsl
dec
test
mov
divl
mov
xchg
and
jnp
shl
mov
scas
cmp
mov
lcall
rorb
insl
add
hlt
int
int3
mov
jbe
adcb
jle
addr16
imul
and
sub
and
out
and
cmc
das
jo
repnz
or
mov
jo
mov
fcoml
into
pop
js
pop
dec
or
sti
or
mov
jne
sbb
enter
int3
mov
lcall
inc
mov
jg
mov
shll
mov
test
fmuls
sbb
stos
mov
and
leave
cltd
sbb
cmc
mov
add
orl
rclb
divb
lret
cld
or
and
lahf
loopne
sbb
xchg
xchg
fadds
dec
pop
mov
sub
cmp
dec
lock
icebp
xchg
push
sbb
mov
cmp
mov
decb
xchg
cmpsb
inc
lea
sub
push
jle
push
stc
mov
sbb
xchg
push
dec
fsub
push
push
stos
xchg
cltd
scas
mov
fnstenv
sub
fistpl
lret
sbb
xor
fucomip
mov
cmp
pop
sti
xchg
sbb
jns
outsl
jecxz
sub
jge
mov
mov
gs
mov
add
out
movsb
dec
fmuls
addr16
inc
test
aas
jp
push
mov
arpl
outsb
fsub
cmpsl
cmp
lcall
pop
out
cwtl
mov
test
int
or
cmp
xchg
dec
nop
adc
push
mov
nop
and
xchg
lahf
int
es
fs
xor
imul
push
xchg
pop
lret
out
mov
inc
xchg
out
cmc
mov
mov
jmp
jne,pt
adc
inc
push
shll
add
mov
cmp
call
std
jae
inc
js
in
faddl
cs
pop
mov
and
mov
les
test
scas
mov
cmp
sbb
inc
imul
popa
dec
das
arpl
jl
in
call
iret
pop
jg
mov
jmp
xor
lahf
mov
jo
dec
mov
jp
xchg
movsl
inc
mov
dec
sub
xchg
push
ja
sbb
sbb
fdiv
cmp
jnp
repz
xchg
fdivl
stos
idivl
in
insl
xchg
cltd
test
xchg
push
pop
push
sbb
orl
jg
mov
xor
add
jno
mov
jnp
and
mov
xchg
scas
dec
lret
loope
loopne
das
adc
jg
stos
sahf
push
xchg
out
sbb
xor
out
cmp
imul
fcomps
cs
sub
fs
mov
jle
es
adc
sub
pop
adc
mov
sub
sub
movsl
sti
dec
rorl
lods
scas
sub
negb
adc
jmp
xor
pop
sbb
mov
mov
sbb
mov
add
test
out
sub
mov
data16
pop
pop
daa
add
inc
rcll
and
push
pop
mov
iret
mov
pop
addr16
jl
mov
fisubl
mov
scas
add
xchg
inc
xor
stos
mov
jmp
sti
cmp
xchg
xchg
dec
fdivr
mov
mov
test
hlt
sub
out
aad
dec
testb
mov
mov
mov
test
ljmp
dec
scas
add
xchg
jecxz
aad
movsb
adc
xchg
loope
rcll
shlb
xor
mov
and
imul
and
push
jmp
dec
arpl
pop
dec
das
loop
push
sbb
or
push
cmpsb
in
cld
add
test
call
xchg
sub
and
daa
xchg
push
fs
sbb
add
push
in
jno
mov
rcrb
or
je
leave
cmpl
repnz
mov
sub
or
lret
push
in
cli
mov
mov
rorl
inc
out
jnp
je
mov
ret
and
int3
rcrb
aad
adc
addr16
mov
cmpsb
ficoml
mov
mov
aas
ljmp
arpl
pop
mov
pop
push
out
jmp
hlt
inc
jge
sbb
fwait
int3
fdivs
xor
pop
jg
divl
add
mov
dec
in
addr16
test
adc
test
cmpl
icebp
pushf
fstps
push
loope
mov
lcall
inc
hlt
data16
xchg
mov
jbe
test
mov
clc
inc
mov
mov
xchg
in
in
std
jp
andb
pop
subl
bnd
and
xor
inc
xchg
shll
and
add
sbb
stos
je
adcb
xchg
shl
push
inc
push
xor
adc
std
insl
pop
mov
aaa
adc
jnp
iret
es
arpl
cmc
pop
mov
inc
xchg
and
inc
jecxz
loop
test
xor
cmp
lcall
and
leave
imul
xbegin
in
aam
cmp
add
aas
dec
push
push
test
cmp
inc
adc
test
lods
ret
pop
inc
in
gs
fnsave
es
insb
mov
mov
test
mov
push
fucom
sbb
and
sub
pop
mov
xor
pop
jne
iret
and
shr
jb
sub
and
std
icebp
pop
cld
cltd
jne
mov
loopne
lods
push
push
arpl
lret
mov
pop
mov
addr16
enter
cmp
pushl
mov
out
inc
adc
adc
outsb
mov
adc
cwtl
in
mov
arpl
pop
sbb
cs
ja
jge
and
lahf
pushw
daa
sub
icebp
jp
shlb
dec
ds
add
or
enter
into
sbb
inc
jo
and
xchg
mov
push
daa
clc
out
mov
push
mov
cmp
dec
mov
rcll
push
les
push
ds
jge
mov
lock
cvtps2pi
out
mov
sbb
mov
adc
dec
jne
xor
push
and
outsl
add
icebp
pop
cltd
adcl
xor
aas
adc
xor
xlat
out
xchg
jae
fbstp
push
out
dec
repz
jmp
popa
push
push
lods
es
adc
cmpsb
fs
js
clc
lahf
cmp
adc
and
ret
aaa
test
jl
in
iret
inc
inc
imul
cmpsl
or
lods
inc
mov
imul
rorb
pushf
pusha
jns
mov
cmp
xor
cmp
ror
inc
adc
or
cmp
lods
scas
movsl
cmp
in
cmp
sbb
stos
xor
jl
sub
jno
iret
jns
jnp
sub
xorb
into
aaa
cmp
cltd
sti
xor
jnp
xchg
test
sbb
mov
dec
add
out
push
repz
outsb
push
mov
mov
add
inc
pop
dec
push
movsb
cmp
jge
repnz
pop
into
daa
push
std
cmc
or
outsb
push
add
xchg
inc
in
cmc
mov
cli
cmc
cwtl
bound
add
and
sahf
ds
rolb
mov
push
cmp
xchg
jnp
insl
dec
aaa
jb
jb
sub
gs
repnz
jnp
sbb
dec
popa
adc
pop
int3
je
outsl
fnsave
push
scas
ret
dec
out
je
dec
sub
movb
call
push
adc
inc
fmul
repnz
and
ljmp
cld
xchg
in
rolb
call
movsb
lahf
repnz
iret
adc
inc
sbb
nop
ja
repz
sub
js
adc
ja
xchg
jecxz
gs
xchg
pop
cmp
push
sub
pop
cmp
lods
cld
jge
inc
inc
lret
xor
jmp
insl
gs
cmp
jae
jmp
xor
aad
outsl
add
ja
cmpsb
adc
aam
jb
les
fdivs
mov
popa
and
outsl
popf
or
and
mov
add
jecxz
notb
adc
pop
push
imul
shr
push
add
mov
ja
adc
and
fistpl
mov
outsb
jne
xor
push
ret
out
sub
push
jmp
push
bound
shrl
jg
pop
and
cld
ds
sbb
sbb
xchg
sbb
sub
mov
mov
xor
jb,pn
pop
and
addr16
ds
stos
sbb
push
cmc
dec
mov
pop
hlt
out
ds
ljmp
loope
sarb
dec
fs
sarl
xchg
mov
shl
lret
push
shl
int3
sub
pop
mov
mov
mov
jl
cltd
push
mov
mov
into
or
pushf
xlat
pop
xor
mov
mov
in
cmp
and
and
ss
nop
sbb
cmp
cmpsl
lahf
arpl
mov
lods
lahf
int
jp
and
imul
push
mov
mov
popf
iret
in
mov
xorb
cs
push
inc
dec
jg
jb
and
jge
insb
cmc
aad
cmp
rcrl
stc
jge
cmp
ss
inc
rorl
lods
pop
mov
leave
insl
or
int
lods
add
jne
fnstsw
sarl
orb
xchg
mov
icebp
sub
cmc
int
out
js
xor
mov
loope
xchg
mov
pop
sub
lea
testb
mov
and
arpl
movsb
f2xm1
loope
cltd
mov
call
mov
push
stos
inc
mov
mov
lock
nop
ljmp
mov
fcmovnbe
movsb
and
shrb
inc
imul
dec
sbb
sahf
jno
mov
mov
jae
loopne
or
test
pop
loope
fs
mov
shlb
cld
les
adc
cli
imul
jmp
adc
ja
xor
fucomi
sub
mov
and
lret
cmpsl
add
jnp
scas
out
push
decl
out
dec
inc
loopne
scas
cmp
out
test
sbb
pop
sbb
shlb
xor
jns
vpsubusw
out
popf
inc
jle
inc
mov
pop
inc
stos
mov
mov
mov
or
and
push
in
sbb
or
mov
pop
fnsave
cmp
mov
insl
xchg
sub
or
inc
fnsave
clc
mov
mov
pop
cltd
sarl
ret
mov
sbb
add
mov
and
fstpt
mov
dec
xchg
out
cmp
dec
and
outsl
push
fisttpl
dec
mov
aas
sub
jae
jnp
sbb
out
nop
pop
fldenv
pop
lods
ss
adc
mov
push
jg
arpl
orl
dec
pop
jo
addr16
inc
jno
inc
pop
inc
test
lcall
xor
in
mov
push
out
cmpsl
aad
fisttpl
xor
outsb
pusha
in
inc
popf
fdivrl
jno
add
xchg
push
xchg
inc
in
jg
fldt
rcl
cmp
lahf
in
sbb
outsl
xchg
rcrb
xchg
add
sbb
sbb
testl
sub
in
rcll
cmp
ss
and
lock
cmp
jbe
add
inc
or
or
cwtl
repnz
mov
fistpl
pop
push
mov
scas
xchg
mov
arpl
sbb
xor
xor
and
movsb
lds
cmp
lea
and
mov
and
inc
mov
and
fisubrs
or
mov
js
xchg
ss
outsl
jp
jnp
or
in
js
mov
stos
push
xor
mov
push
adc
inc
roll
xor
imul
xchg
pop
mov
jbe
jg
loopne
pusha
add
and
inc
cmpsb
insb
inc
pop
or
push
jg
or
xchg
and
mov
rcrb
test
out
inc
fsubrp
push
icebp
pop
cltd
jge
xor
inc
cmpsb
aam
dec
sbb
sub
dec
mov
testl
pushf
mov
js
scas
in
icebp
push
jmp
mov
push
in
lcall
fwait
mov
mov
ret
nop
in
xchg
loopne
movsl
dec
push
cmp
imul
outsl
pusha
xchg
rep
pusha
mov
dec
jg
push
inc
sub
or
mull
push
pop
rcrl
xor
int3
xor
loope
pusha
popw
enter
aas
mov
lret
adc
das
test
inc
psllw
dec
adc
push
lea
call
ss
cmpsl
mov
addb
jno
jge
sub
mov
fisttpl
and
scas
aaa
and
mov
jbe
or
inc
pop
push
push
sub
fwait
in
icebp
lds
nop
enter
enter
jno
outsl
mov
push
mov
repz
fistpl
in
add
lret
in
arpl
popl
fs
pop
jne
ret
xor
cltd
adc
in
das
shrl
scas
pop
cmp
or
jnp
popa
push
lret
enter
or
lds
fisttpll
sub
lods
or
cmp
mov
call
popf
test
lcall
ja
pop
and
lea
out
adc
mov
cmp
and
out
sbb
std
fistl
mov
adc
cmp
xchg
pusha
js
pop
or
rcl
cmp
adc
add
out
inc
jmp
loop
fmul
pop
dec
xlat
out
cmpl
movsb
faddl
std
dec
ja
xor
popa
xchg
xor
mov
icebp
push
sbb
add
inc
into
cwtl
mov
loopne
lea
and
dec
sbb
xor
adc
xchg
cmp
sti
aam
aam
sub
jb
into
push
jns
mov
sub
jp
and
aaa
fsubl
daa
push
fsub
fwait
xor
fs
cs
arpl
push
lret
pop
inc
scas
lret
dec
add
popf
push
jmp
test
pusha
dec
out
xchg
mov
adc
jp
loope
mov
icebp
push
jnp
adc
cwtl
jo
push
divl
inc
imul
aaa
bound
pop
or
pop
das
jo
mov
cmp
stos
cmp
je
cmpb
out
dec
in
push
lock
xor
adc
jnp
cmpsl
stos
and
mov
loop
into
fstl
mov
xor
sbb
jae
xor
popa
fcmovb
jne
lods
movsl
insb
mov
push
sbb
add
nop
fsubrs
push
les
faddl
push
pop
inc
xchg
pushf
andb
daa
mov
cld
cwtl
scas
fstps
xchg
pop
push
mov
xor
dec
sbb
cltd
dec
sub
push
dec
scas
ret
test
pop
ss
fs
add
int
xchg
cmp
mov
test
mov
das
xor
test
sbb
lret
adc
add
int
popa
loop
rol
dec
cwtl
lcall
out
frstor
cmp
mov
cmp
pusha
scas
jo
and
fwait
jge
clc
jne
mov
pop
or
jmp
adc
mov
dec
xor
inc
mov
push
pushf
jmp
lahf
std
adc
mov
lcall
out
inc
call
mov
cmpsb
mov
lods
loope
scas
adc
popf
icebp
lret
mov
add
inc
mov
movsl
xlat
sub
clc
push
inc
std
mov
fld
xchg
rcll
ja
icebp
dec
or
in
dec
dec
pop
and
mov
xchg
and
mov
iret
lods
fcompl
test
std
cs
adc
mov
dec
or
jmp
mov
mov
xchg
sub
jb
mov
mov
gs
cld
pop
lcall
loopne
shll
cmp
xchg
sub
aad
dec
cwtl
imul
push
or
and
fcmovbe
or
les
std
addl
adc
mov
pop
mov
mov
repnz
aaa
inc
icebp
dec
nop
aad
sub
int
adc
push
imul
stos
pop
push
cmp
adcl
push
repnz
adc
push
xor
cmp
xor
shll
xor
adc
iret
repnz
roll
add
pushf
xacquire
test
cmp
cmp
in
add
sahf
dec
insb
lods
mov
fidivs
jae
jo
add
mov
lret
xor
inc
mov
adc
xchg
popl
xchg
jecxz
scas
add
mov
in
bound
mov
mov
xchg
lcall
mov
mov
fisubs
out
push
inc
xchg
xchg
sbbl
int3
aam
xchg
out
lds
dec
push
mov
aas
scas
ret
icebp
adc
inc
xchg
or
xchg
mov
sbb
or
mov
jnp
jge
mov
lcall
lods
cs
or
f2xm1
lock
insb
repz
orb
outsb
iret
cmc
and
idiv
xchg
popa
inc
inc
push
pop
dec
shl
inc
or
mov
mov
jo
xlat
decl
xchg
je
ficompl
xor
mov
xchg
scas
fwait
push
add
stc
pop
imul
fisubs
jg
inc
repnz
and
mov
xor
push
arpl
adc
loop
push
pop
add
popf
push
inc
lock
cmp
push
mov
adc
sub
mov
and
and
adcb
xchg
ja
jecxz
sub
jno
pop
stc
pop
movsb
push
rclb
out
mov
mov
repnz
mov
sub
shll
inc
std
push
mov
std
and
pushf
xchg
int
mov
mov
dec
xchg
in
inc
pop
and
orb
mov
jne
sti
mov
mov
ret
mov
cwtl
cmp
pusha
movsb
scas
arpl
add
adc
rcll
test
adc
cmpsb
mov
rcll
test
adc
cs
mov
jnp
push
push
cmp
fsubrl
jp
sub
popf
stos
imul
outsb
call
cltd
mov
test
popa
xor
sarb
hlt
sbb
sub
cmp
leave
xchg
popf
mov
fwait
lret
outsb
xor
add
pushf
lahf
loop
lea
mov
call
adc
fimull
test
xchg
cmpsb
ss
push
xchg
mov
cmp
enter
addr16
aad
jmp
mov
out
popa
or
and
add
lcall
push
add
repz
out
out
testb
lahf
cmp
sub
sbb
push
sahf
rcr
sarl
inc
xor
aam
xchg
gs
js
dec
out
or
jo
fdivp
push
xor
fldt
in
fs
mov
mov
ja
pusha
dec
mov
cmpb
push
sub
popf
sub
xor
sub
jl
icebp
in
xchg
mov
out
inc
mov
icebp
xchg
clc
sti
jmp
leave
inc
adc
lods
pusha
jl
adc
and
pop
add
sbb
dec
xchg
mov
inc
outsl
cmp
push
call
jg
sub
or
movsl
jmp
mov
scas
out
fsubrs
jae
shrb
inc
jo
fdivrp
iret
fcomps
fdivrs
cmpsb
cmp
out
push
pop
jns
or
push
rcll
fs
shrl
aad
inc
add
xor
loope
dec
ja
dec
jl
push
sub
stc
jne
mov
movsl
pop
cmp
dec
or
or
loope
add
cmp
leave
mov
add
cmp
pop
lock
xchg
je
int3
lock
sbb
mov
gs
pop
aad
pop
xor
decl
jle
xor
mov
shr
sti
mov
mov
cmc
xor
orl
cmp
out
mov
add
mov
sti
rcrl
int3
add
jp
adc
daa
and
add
pop
mov
sbb
xchg
pusha
insb
inc
sub
sub
pop
daa
adc
cmp
inc
rolb
repz
call
stc
mov
negl
mov
xchg
xor
sti
xchg
pop
int
xor
add
add
jmp
stos
xor
jbe
out
sub
jle
xor
pusha
ljmp
imul
pop
dec
mov
mov
mov
inc
movsb
cs
icebp
push
into
fs
ret
insb
out
aas
dec
daa
push
jnp
imulb
in
aas
outsl
cltd
mov
lods
inc
mov
mov
mov
xchg
mov
mov
out
filds
ficomps
sub
xchg
mov
les
shll
add
cs
test
sub
jns
insb
fsubl
rcll
pusha
enter
bswap
dec
sub
jmp
mov
es
and
mov
pop
cs
lods
xor
push
ljmp
and
add
in
imul
lods
popa
push
popa
stos
lods
dec
iret
movsb
push
mov
out
xchg
xchg
ret
ret
inc
push
jo
mov
push
jmp
rolb
in
loope
mov
test
jmp
sti
outsl
dec
push
in
in
mov
into
cmpsb
cltd
pushl
mov
adc
pop
orl
xlat
push
mov
lds
int
test
jl
add
cmp
inc
or
repz
cli
std
fadds
aaa
repnz
das
jl
cmc
pop
les
scas
jmp
flds
push
and
fidivrs
lock
lea
aas
and
je
push
insb
pop
xchg
xor
faddl
mov
or
sbb
mov
adc
add
or
jg
adc
fadd
lock
or
mov
pop
jbe
xchg
mov
popa
test
xchg
mov
scas
sub
data16
int3
push
jp
lahf
cld
sbb
negl
mov
fcoms
aam
push
xor
cmp
repnz
inc
mov
dec
pop
clc
cmpsb
data16
push
pusha
popf
test
icebp
jo
push
sbb
mov
repz
mov
or
jb
push
mov
adc
xchg
xchg
stc
es
push
cmp
dec
cmp
and
loope
add
jne
cltd
and
nop
daa
loopew
push
mov
fistl
test
mov
push
mov
add
sub
stos
aad
ud2
orb
fldcw
push
mov
dec
outsb
mov
aam
inc
add
xor
repz
xchg
sub
xchg
testl
sub
dec
mov
inc
loop
mov
ja
push
addb
xchg
je
das
popa
in
cld
pop
xchg
call
lock
cmpsl
rcr
xlat
pop
loop
cltd
loopne
repnz
mov
stc
xchg
pop
in
jmp
jl
pushf
stos
push
fstps
xchg
repnz
mov
aas
cld
fdivrl
lret
cmp
jp
push
ficompl
mov
adc
scas
lods
mov
jns
mov
adc
pop
and
cmpsb
popf
push
sti
cmp
outsl
out
dec
add
xlat
mov
insl
stc
cli
pop
xchg
rclb
adc
pop
xchg
jb
sbb
pop
mov
pop
add
sahf
xchg
mov
outsl
jle
mov
pop
lods
jae
mov
sub
cmp
jne
arpl
gs
es
fstpl
mov
sbb
push
fdivl
clc
in
shll
mov
hlt
mov
test
dec
xor
fisubrl
xchg
out
adcl
push
out
jecxz
push
pop
sarb
cmpsl
mov
out
mov
fwait
aad
mov
inc
jle
scas
push
cmp
bound
int3
outsl
adc
test
cmp
mov
mov
cs
cs
std
pop
mov
inc
outsl
stos
call
add
js
cmp
jns
pop
sbb
xchg
ljmp
out
pop
xchg
dec
jae
mov
mov
in
dec
in
jae
fiadds
and
push
push
jo
mulb
sub
cmp
hlt
push
add
pop
incb
jae
xor
fnstenv
aam
sysret
arpl
push
fdiv
mov
adc
cmp
inc
lahf
jo
pusha
jne
inc
inc
adc
mov
leave
scas
cmpsb
jbe
rol
lods
inc
lds
jge
lret
test
and
pop
gs
mov
jae
cmp
rcl
sbb
cmpsl
in
movsb
jnp
pop
in
or
xchg
sbb
aas
adc
adc
jge
mov
push
js
xor
fisttps
call
xchg
lods
or
leave
xlat
addr16
mov
out
ret
mov
ss
adc
shrb
sub
mov
lds
inc
stos
mov
inc
dec
mov
or
jp
inc
insl
push
inc
xorps
imul
outsb
ds
loop
std
inc
and
lds
inc
daa
loopne
popa
pop
lret
imulb
inc
xchg
mov
ds
adcb
pop
out
add
fadds
push
mov
fcomp
into
lods
dec
mov
out
inc
out
das
popf
cmpsb
dec
movsb
enter
rorb
push
insl
into
mov
stc
pop
mov
and
into
mov
mov
xchg
shrl
aad
js
xorb
ret
ljmp
iret
test
sbb
test
mov
int3
loop
lret
fcmovnb
and
lret
nop
and
sti
xor
mov
mov
add
sahf
testb
push
dec
pop
jg
jp
cwtl
jb
mov
mov
mov
cmp
popa
or
mov
xchg
mov
xor
addr16
incl
lahf
data16
jle
std
mov
sarb
sbb
fidivrl
jno
mov
fidivl
xchg
inc
dec
xor
jecxz
cmp
aaa
clc
cwtl
mov
pop
rol
sbb
daa
push
fwait
and
aas
jns
mov
fwait
mov
fcmovne
sub
cmp
mov
fs
mov
aas
cwtl
stos
ss
insl
dec
aad
xor
cltd
les
sbb
ds
gs
and
adc
inc
jb
in
les
push
pop
loopne
popf
ret
sub
push
mov
inc
inc
xor
movsb
mulb
xor
shlb
dec
mov
cltd
push
ror
ja
sbb
pusha
cmpl
and
fstpl
loopne
xor
test
mov
popa
mov
cmp
call
cmp
mov
pop
popf
cltd
push
xchg
adc
mov
movsb
lahf
popw
testl
call
fnstenv
cwtl
out
lahf
xor
xchg
testb
or
jne
pop
mov
jbe
jbe
inc
inc
test
push
or
mov
popf
inc
outsl
scas
fistl
ror
cmpsb
jl
enter
out
stos
mov
iret
dec
aaa
jnp
jnp
js
inc
pop
es
bound
out
test
add
xor
or
dec
repnz
out
inc
in
imul
mov
xchg
sub
popa
mov
mov
mov
cltd
xor
mov
lret
ficomps
inc
out
push
sub
loope
shlb
aam
inc
popf
js
aaa
popa
das
push
mov
mov
and
mov
cmpsb
push
sub
jl
jle
inc
or
je
dec
cmp
sbb
sub
iret
mov
or
mov
js
pop
jnp
js
jne
jge
scas
shlb
mov
and
loope
xor
insb
mov
loopne
cltd
mov
scas
out
clc
adc
sub
lea
int3
sbb
mov
loop
lret
mov
xor
jns
nop
and
repnz
lcall
pop
push
cmp
and
dec
jns
push
jne
das
dec
push
push
clc
add
mov
das
sti
fwait
cli
in
wbinvd
repnz
ret
test
sbb
jno
add
push
sub
addb
insl
dec
jns
test
sub
sub
insl
xorb
and
ljmp
xchg
and
test
jecxz
ficoms
stc
push
xor
jnp
and
arpl
pop
mov
sbb
test
fcmovne
jle
jo
mov
mov
mov
mov
ss
repz
in
mov
sti
mov
sub
cmp
fistps
adc
inc
dec
in
lock
ja
xchg
nop
cwtl
push
cmc
testb
inc
adc
fcompl
loop
jns
stos
fdivs
mov
cmp
jae
repnz
jns
lahf
lock
xchg
dec
xchg
lods
lods
jo
push
les
pop
pop
or
jns
add
aaa
xor
ljmp
jmp
sbb
cmc
push
ret
rcl
push
sub
jno
mov
lcall
mov
jecxz
xchg
mov
xchg
jp
fdivs
fs
sub
cmp
lret
movsb
cmp
mov
pop
out
cmpsl
xchg
lcall
jne
cwtl
sbb
mov
testl
enter
pop
dec
outsb
cmpsl
dec
aaa
inc
addr16
out
adc
mov
cmc
pushf
or
push
movsl
cmpsb
repz
pop
mov
cmpsl
test
pop
loopne
or
sbbb
mov
sub
mov
nop
dec
daa
and
ljmp
lahf
jbe
addl
notb
jl
xchg
out
push
shlb
call
xchg
dec
hlt
xor
mov
or
insb
jbe
jmp
pop
not
mov
aam
sti
sub
gs
shrb
mov
add
jp
cmp
and
icebp
inc
lds
lahf
ret
jne
sti
js
je
das
add
mov
pushf
leave
es
mov
jmp
inc
mov
and
inc
sub
jmp
mov
repnz
call
mov
jecxz
adc
push
cmpsb
aas
mov
push
rcl
fdivp
lds
outsl
sbb
popa
loopne
test
rcrl
jns
add
in
inc
sub
xchg
sti
sbb
mov
cmpsl
and
leave
pop
mov
popf
bound
fisubs
inc
fsubrs
xor
adc
adc
mov
mov
outsb
push
push
cmpsl
mov
les
gs
jne
sub
add
cmc
sahf
insl
inc
fsubrl
and
lods
mov
dec
pop
push
gs
into
lcall
aam
nop
mov
adc
push
sbb
pop
push
mov
mov
push
scas
dec
fsubs
mov
add
xchg
jge
lods
and
ljmp
cmp
xchg
jno
sahf
mov
push
mov
mov
sub
and
daa
mov
lret
pop
sbb
test
stc
les
addb
movsl
sub
jmp
dec
push
mov
leave
push
xchg
mov
lock
fsub
mov
mov
and
ror
inc
imul
loopne
imul
popa
insb
in
and
call
xor
leave
dec
cmp
fsubs
repz
call
data16
mov
out
jne
jge
pop
test
cld
roll
lret
lea
mov
dec
ja
mov
adcl
add
and
test
mov
pop
lock
int3
sbb
fisubs
jae
jl
sahf
jmp
dec
addr16
test
rol
mov
repnz
imull
mov
iret
in
cmp
mov
fs
gs
mov
js
mov
jl
lods
cld
sti
jmp
push
dec
jbe
mov
sbb
adc
pop
cld
cmc
cltd
test
ret
insl
adc
sbbb
aas
jmp
out
outsl
mov
xchg
cmp
hlt
or
dec
push
mov
fwait
inc
fs
stos
loope
out
pop
stc
jae
and
outsb
lds
mov
jle
mov
adc
jge
push
adc
outsl
adc
js
scas
push
or
mov
xchg
cmp
jnp
gs
adc
cmp
andl
jne
jge
rcrb
cwtl
hlt
cmp
and
jnp
test
test
mov
leave
pop
adc
xorl
and
or
push
fwait
xchg
mov
jae
test
sbb
lahf
jne
lret
in
mov
movzwl
stc
pop
sbb
or
in
pop
in
hlt
jb
xlat
and
leave
and
cwtl
dec
lods
cmp
dec
push
iret
fstl
add
movsb
inc
loop
dec
or
dec
pop
xchg
out
aas
or
rorl
jge
adc
lret
mov
movlps
sbb
adc
out
dec
mov
sti
shrb
fdivl
fisttpll
pop
mov
jle
xchg
push
andl
pop
cld
sbb
add
lock
hlt
adc
push
mov
sub
or
roll
shlb
adc
cli
mov
cli
sub
xchg
cmp
adc
pop
xorb
cmp
leave
adc
sbb
fistl
dec
xchg
xor
or
pop
xchg
mov
mov
pop
je
mov
test
fistl
dec
addl
push
div
jns
int3
enter
addr16
test
movsb
out
aas
xchg
or
mov
push
jle
sbb
mov
lret
adc
cmp
mov
sub
ss
adc
cmp
mov
pop
ret
adc
adc
pop
pop
and
jg
sarb
nop
mov
add
sub
das
or
sahf
popf
lock
push
xor
punpckhdq
cmp
sub
lret
sahf
pusha
clc
pop
les
dec
pop
repz
push
mov
inc
andb
xchg
cmpsb
out
xchg
daa
mov
sub
dec
and
ja
stos
mov
mov
loopne
in
mov
mov
cmc
push
or
cmpsb
cmp
popa
and
jae
sbb
mulb
cmp
in
cld
cmp
dec
xchg
aas
pop
sub
lods
test
scas
or
xchg
lahf
bound
jae
iret
sub
lock
nop
stc
fisttpl
xchg
orb
je
aaa
mov
ljmp
or
scas
adc
mov
dec
fdiv
cltd
addr16
adcl
repz
es
int3
pusha
dec
repnz
aad
jo
out
sub
enter
inc
jnp
inc
sti
cli
int
and
mov
jl
cmc
pop
dec
leave
rcrb
lock
mov
outsl
push
jno
push
or
stc
int
sub
sub
test
dec
lret
xchg
mov
js
idiv
aam
notl
lahf
popa
mov
test
clc
insl
scas
add
push
imul
jae
push
icebp
dec
mov
jl
ljmp
sbb
push
loope
jge
ds
add
adc
sbb
enter
inc
pushf
pop
or
addr16
pmuludq
xchg
lock
mov
jmp
jmp
mov
xor
cltd
add
int
cmp
sub
clc
je
mov
add
mov
nop
pop
jb
cmpb
lahf
inc
pushf
std
add
sbb
iret
mov
cmp
mov
and
xor
pop
adc
addb
testl
hlt
and
xchg
adc
jno
pop
add
mov
xor
mov
data16
mov
add
mov
out
jg
aam
add
sbb
pop
lahf
adc
jg
adc
xchg
xchg
mov
scas
lcall
and
call
jnp
pop
popa
pop
insb
sbb
xchg
adc
cmp
andl
xor
mov
mov
mov
shl
adc
pop
ja
into
sti
nop
jns
arpl
push
mov
divb
xchg
iret
xchg
loopne
pop
xchg
sbb
loope
inc
das
pop
or
insb
faddp
cld
sbb
dec
fcoms
mov
daa
push
frstor
out
jnp
mov
call
xor
xchg
in
cs
push
gs
sbb
cmpsb
jo
mov
fwait
add
outsb
lock
fbstp
mov
rcrb
xchg
out
xchg
bound
push
aam
xor
xor
xchg
ja
popf
cmpsl
pop
xchg
scas
flds
in
fildl
stos
outsl
popf
mov
addr16
lds
sahf
dec
out
sub
xchg
mov
inc
push
add
jp
lea
dec
cld
dec
das
test
rclb
pop
add
dec
mov
sbb
int
xor
cltd
lock
push
ss
int3
push
insl
call
inc
fistpll
pop
sbb
in
mov
imul
ja
or
or
clc
push
jmp
mov
and
add
test
pusha
popa
lock
and
sbb
jb
fisubrs
cmp
and
ljmp
shrl
sbb
push
ljmp
inc
rcrl
mov
fwait
mov
push
in
push
mov
mov
sub
push
lret
icebp
pop
lret
fiadds
lcall
enter
rcrb
pop
movd
mov
mov
jmp
arpl
ret
nop
add
cmp
xchg
jle
sti
das
inc
out
js
dec
jmp
popl
loope
inc
mov
rep
fdiv
pusha
repz
add
sbb
pop
lock
je
aaa
call
loop
sub
sbb
jno
sbb
aaa
into
jecxz
int
nop
xor
subb
cmp
xchg
test
xchg
lcall
ds
ljmp
clc
out
xor
dec
in
add
loope
pop
dec
js
aaa
xor
or
mov
xlat
popf
rol
sbb
das
jmp
add
data16
stos
mov
sahf
pop
push
mov
jecxz
fimuls
or
out
aad
pop
sub
jae
notl
dec
shlb
dec
inc
imul
aaa
push
out
cmp
pop
xchg
cmp
ret
fildll
lahf
fwait
pop
cli
jae
data16
mull
ret
xchg
mov
loopne
sbb
inc
in
ljmp
scas
or
sarb
in
enter
icebp
sub
in
jmp
insl
pop
push
sbb
push
push
xorb
push
cltd
push
dec
inc
mov
test
hlt
fcomp
mov
sbb
and
jmp
cmc
jmp
or
inc
xchg
or
cmp
mov
sub
jne
fmull
push
cmp
sbb
dec
mov
icebp
or
aaa
mov
lret
adc
add
sbb
add
outsl
sub
mov
leave
xlat
cmpsl
mov
ds
gs
or
cmp
push
jo
out
pop
iret
or
xor
sbb
enter
push
shr
jl
push
mov
pop
dec
aaa
pop
nop
adc
push
out
aam
out
repnz
jb
pop
jno
fcmovnb
add
dec
mov
inc
mov
frstor
push
jp
lods
xchg
xchg
pushf
mov
mov
dec
icebp
enter
jbe
in
or
nop
cwtl
scas
test
xor
adc
jmp
out
inc
test
nop
mov
mov
inc
fmuls
jns
xchg
insb
lds
mov
inc
xchg
das
cmp
xchg
dec
pop
xor
fwait
call
mov
das
js
les
pop
loopne
push
fcoms
cmp
adc
xor
mov
pop
adc
cmpl
mov
fisubrs
xlat
pop
jl,pn
jmp
add
pop
mov
testl
sub
pop
in
dec
jmp
cmp
scas
imul
mov
dec
daa
lret
jle
adc
adc
outsb
and
push
outsl
xor
and
mov
clc
dec
sbb
icebp
rcll
pop
and
adc
lea
push
out
jg
or
xchg
jbe
sbb
lcall
cltd
jl
shl
sbb
sbb
jge
andl
cli
fwait
push
ds
mov
cs
scas
sub
jl
stc
inc
sbbb
lods
scas
mov
fcoml
pusha
call
add
pop
sti
sbb
dec
imul
jno
inc
insl
lds
out
iret
dec
sti
push
test
inc
loope
push
cmp
out
jge
lods
sub
inc
mov
enter
aad
push
out
adc
fisttpll
loope
mov
retw
xor
jae
xor
in
inc
jnp
lahf
stc
lds
rcrb
mov
mov
mov
pushf
push
jp
xchg
fdivrs
nop
inc
lods
out
jns
aaa
fldl
mov
test
xchg
add
enter
loope
and
mov
dec
adc
stc
mov
les
push
negl
lods
pop
or
in
xor
shlb
cli
pushl
hlt
or
xor
lods
inc
ss
test
sahf
jb
mov
aas
loopne
mov
dec
push
add
xchg
loope
fidivs
mov
push
jb
cmp
add
cmp
mov
idivl
dec
outsb
sbb
sti
push
jnp
mov
mov
cmp
pop
adc
pop
cmp
xor
mov
movsl
pop
sub
cmp
cmc
arpl
mov
cld
pop
and
and
push
fisubrl
imul
loope
daa
cmp
cmc
fistps
inc
adc
rcl
push
xor
sub
add
xchg
call
jg
ret
pop
inc
and
mov
inc
adc
dec
pusha
ss
dec
iret
call
xchg
leave
add
add
dec
daa
rcl
scas
out
xchg
add
lods
mov
push
mov
sbb
aad
lock
push
in
jnp
fisubrs
cmp
movsl
mov
cmp
mov
xor
or
fldenv
jmp
imul
mov
sti
rclb
xorl
sbb
cmp
inc
push
xor
das
gs
push
fbstp
jae
fidivrl
js
cli
pop
xorb
xchg
lods
dec
imulb
ds
aad
in
aad
pop
call
sbb
scas
inc
cmc
adc
cmp
inc
lds
out
js
mov
mov
adc
mov
xlat
jge
jnp
mov
push
sub
inc
inc
mov
pop
out
push
in
mov
xchg
jmp
shlb
arpl
js
dec
push
fs
imul
and
pop
mov
xchg
add
jbe
mov
mov
inc
jmp
imul
aas
rcll
out
push
jle
fnstcw
push
leave
xchg
arpl
icebp
repnz
sbb
jg
add
inc
cld
mov
sub
sti
or
fcoms
sbb
dec
cld
lahf
xchg
insb
xor
int
push
pop
sti
jae
in
add
aaa
movsb
jne
outsb
or
lock
bound
xlat
sub
sbb
push
cs
pop
mov
jmp
add
dec
and
mov
ret
test
jmp
or
imul
pop
cld
test
mov
xchg
dec
adc
roll
cmpsb
mov
push
adc
das
out
je
popa
daa
je
mov
inc
lret
arpl
insl
push
fnstsw
shlb
xor
or
xchg
inc
mov
inc
push
stos
and
mov
pop
fidivrl
test
inc
lea
mov
sbb
nop
xchg
and
add
sub
fwait
andb
test
sub
leave
xchg
filds
aas
push
cwtl
lods
add
dec
mov
or
cmp
mov
mov
cmpsl
je
fiaddl
cwtl
push
daa
faddl
out
mov
popa
scas
cmp
jae
out
sti
xor
jb
push
es
mov
jno
pop
stc
add
adcb
shll
push
and
push
dec
fs
mov
push
popf
arpl
jb
mov
lods
jg,pt
sbb
dec
js
push
cmp
jns
scas
insb
loope
xor
aas
fadd
inc
jl
inc
push
xchg
lods
jb
popf
and
jne
popf
aas
test
outsl
jbe
and
push
shl
stc
or
sti
cmp
xlat
repz
fbld
pop
and
mov
jecxz
test
cmp
inc
xor
jle
dec
lahf
test
xchg
fldenv
mov
call
add
fcoms
jmp
cltd
inc
mov
jo
sub
sahf
add
xchg
cmp
cmc
push
jbe
or
adc
cmp
push
pop
sbb
ja
jb
lods
jp
pop
into
mov
daa
arpl
dec
or
sahf
call
les
andb
repnz
sub
push
fcmovne
pop
pop
ja
ficoms
adc
ja
loop
aam
add
or
outsb
mov
js
and
mov
movsl
lock
dec
jno
sbb
inc
xor
enter
sub
popf
jp
sbb
pusha
test
xor
lods
movsl
xchg
and
inc
mov
fists
jbe
push
pusha
repnz
xchg
call
adc
mov
out
inc
in
lods
in
jbe
andb
mov
jb
cmp
pop
ret
dec
in
notl
cmp
cmp
in
and
sbb
int
shlb
pop
sbb
sti
mov
push
adc
mull
loope
frstor
roll
out
test
stos
adc
sbb
arpl
call
mov
les
cmp
pop
sahf
lods
mov
aad
leave
je
jb
faddl
push
mov
divl
into
je
xchg
xor
leave
inc
jmp
ret
fwait
jo
inc
mov
mov
push
inc
sbb
out
imul
mov
cmp
ret
pop
push
int3
xor
cmp
cmp
mov
jo
mov
leave
repnz
pop
add
mov
iret
xchg
insl
mov
cli
dec
pop
icebp
fcmovnbe
jns
sub
nop
out
cmp
xchg
gs
inc
daa
mov
ss
leave
in
in
loope
stos
push
popf
fidivrs
inc
cmpsl
imul
into
enter
bound
mov
pop
pop
jae
out
mov
rorb
xchg
add
and
fstps
lret
xor
cltd
push
ret
jg
in
in
scas
pop
and
test
ljmp
xchg
lret
inc
lcall
lahf
and
lods
sahf
xor
inc
clc
ds
or
aaa
insl
lds
xchg
adcl
fadds
mov
mov
pmaddwd
sti
mov
sbb
mov
or
xchg
mov
jle
sub
or
mov
dec
adc
andl
iret
imul
jecxz
xchg
jne
and
pop
sub
rcll
dec
sbb
mov
sbb
push
leave
pop
inc
push
or
mov
call
xchg
shrl
fcom
inc
scas
movsl
mov
jge
cmc
xchg
adc
jge
addr16
push
jl
sub
xchg
clc
call
in
jle
xchg
icebp
cli
xchg
or
fcomps
into
jno
fadds
sbb
cmp
sub
adc
testb
mov
xchg
data16
pop
arpl
pusha
and
mov
mov
and
push
ret
outsl
cmpsb
sti
jb
stc
jo
andl
dec
mov
sti
psadbw
adc
out
int
dec
sub
xchg
add
inc
push
ljmp
cmp
jg
sub
push
dec
jns
pop
movsl
and
repnz
mov
sub
enter
cmc
in
pop
frstor
jle
lods
sub
hlt
subl
lret
loopne
mov
push
jmp
or
push
push
out
mov
mov
inc
ficompl
dec
sbb
out
cli
adc
ss
fmulp
rorb
test
cmc
mov
inc
les
stc
adc
test
or
shl
movsb
mov
pop
adc
add
call
enter
test
daa
ficompl
movsl
decl
and
sahf
cmc
hlt
mov
rcl
test
add
test
rclb
pop
fldl
mov
sub
mov
pop
or
lods
ret
je
bnd
xchg
mov
xchg
cs
add
adc
insb
or
mov
ljmp
divb
dec
cltd
push
enter
push
push
stos
js
aam
int
cmpsb
ds
sub
sbb
je
dec
push
in
mov
xlat
and
je
pusha
jns
push
adc
fs
stc
jmp
mov
jg
mul
push
add
and
xchg
jnp
mov
stc
mov
sbb
or
xor
xor
enter
jge
push
pushf
imul
add
lret
sti
mov
in
mov
call
movsl
and
mov
repz
mulb
stc
mov
mov
addr16
lret
mov
mov
sub
add
or
adc
pop
in
stc
sub
and
push
mov
jg
xchg
adcl
es
movsl
test
xlat
mov
movsb
push
outsb
xchg
es
fldt
adc
in
imul
xchg
out
mov
out
test
sub
movsb
or
addb
paddsb
nop
ja
lahf
xchg
cli
adc
mov
push
xor
notb
xor
push
push
or
jno
ja
sarl
push
pop
sub
cmp
in
out
mov
loope
jle
stos
lods
popl
and
mov
bound
lods
sbb
loopne
xor
repnz
and
mov
push
inc
push
jl
mov
js
jnp
push
loopne
mov
cli
cmc
mov
fnstcw
test
and
inc
xchg
fs
js
jnp
push
mov
and
jnp
mov
out
dec
out
fsubrl
repz
add
mov
stos
and
push
aam
fsubl
push
sub
jmp
mov
adc
loope
loopne
mov
mov
imul
cltd
lds
mov
mov
fs
xchg
sahf
push
mov
lds
sti
arpl
les
int3
xor
pop
lcall
popf
cmc
pop
fildll
std
cwtl
testl
push
nop
xor
sbb
test
sbb
shrb
rcll
daa
xor
das
and
add
adc
inc
movsl
jmp
je
es
push
push
pushf
ret
cmc
pusha
ss
and
xchg
out
rcll
faddp
dec
popa
jns
xchg
jnp
xchg
gs
xchg
sub
decl
xchg
in
mov
outsb
add
sub
push
push
pop
mov
sub
pop
cmp
push
push
push
ret
not
inc
addl
mov
in
inc
cwtl
sahf
out
jp
push
mov
inc
sub
sbb
add
adc
or
jl
jnp
rolb
xor
cmp
dec
das
loop
shll
aad
ret
mov
iret
inc
cmp
rol
adc
mov
mov
lds
xchg
aas
xor
push
xor
cmp
adc
mov
int3
nop
dec
xchg
arpl
or
call
call
xchg
adc
insb
fldcw
adc
xor
adc
pop
pop
adc
mov
jae
cld
push
add
out
ret
lret
negl
add
push
pop
das
dec
ss
push
fs
fistl
dec
insl
int3
stc
xchg
pop
test
std
or
inc
sarl
pop
data16
inc
sub
sti
jp
pop
ss
pop
adc
push
push
jg
lret
lretw
sub
cmp
push
test
mov
pushf
or
cmp
ret
test
xchg
outsb
mov
clc
cmp
xchg
lods
pop
int
adc
aam
sbb
push
stos
inc
add
cli
add
xor
psubb
sub
jne
or
sarb
add
jle
and
outsb
dec
test
aas
aad
push
sbb
insb
sub
or
cmp
ret
pushf
and
in
test
mov
xchg
mov
out
adc
or
adc
out
lds
cmp
out
std
xchg
sbb
inc
sbb
push
jno
gs
lret
adc
stos
leave
iret
jno
gs
ret
shlb
sub
mov
cmpl
or
and
adc
pop
bound
mov
inc
or
divl
cmpsl
add
mov
mov
xor
mov
jno
or
xor
outsl
lcall
jle
int
sub
rcll
mov
xlat
sub
aaa
ja
cmp
mov
jecxz
sarb
jns
mov
adc
jge
pop
jl
adc
xchg
ljmp
ljmp
iret
iret
push
jl
subl
addr16
fcomi
push
mov
lahf
lret
xor
rcrl
adc
mov
sbb
sahf
ret
inc
cmp
xchg
xor
sarb
push
inc
fildl
test
sbb
lock
xor
sbb
dec
mov
je
idivb
shrb
cltd
ret
mov
dec
dec
test
xchg
or
xor
popf
or
movsl
insb
or
add
jne
sbb
pop
or
pop
jg
das
cltd
lea
cmp
test
mov
jp
stos
sbb
sub
sub
cmc
mov
cmpsl
cmp
es
test
dec
hlt
mov
add
movsb
mov
lcall
mov
inc
jns
das
mov
sarl
sbb
jmp
mov
dec
mov
adc
loopne
pop
fildl
pop
inc
call
xchg
mov
out
shlb
aaa
mov
or
hlt
dec
outsb
movsb
loop
adc
dec
shll
cmp
and
iret
add
and
iret
fcoms
int3
arpl
ret
cmp
les
test
hlt
rcrb
fiaddl
lock
push
in
sti
iret
int3
add
pop
cwtl
mov
enter
add
mov
push
rcrb
mov
stc
aaa
mov
xchg
dec
push
sub
push
fwait
out
adc
push
pop
add
mov
sub
mov
fists
add
rcrb
and
in
ja
dec
add
ss
imul
lcall
inc
mov
mov
fbstp
fadds
les
dec
push
xchg
push
filds
sbb
fimull
jns
jl
cmove
xchg
frstor
xchg
add
xor
jecxz
jge
lret
mov
ret
push
xor
mov
sbb
loope
jp
push
sarb
mov
nop
bound
pop
fisttpl
push
in
pop
mov
fs
jno
stos
pop
or
enter
push
sub
mov
movsb
and
pop
cmpsl
iret
clc
fbld
push
add
movsb
loope
xlat
inc
inc
lds
aam
daa
in
jne
xchg
jmp
jo
mov
inc
filds
orb
popa
fdivp
ret
outsb
jnp
dec
jb
out
xor
stos
jecxz
inc
orb
mull
xchg
inc
cwtl
hlt
and
push
loope
sbb
mov
sbb
push
aam
clc
gs
repz
mov
dec
lret
and
scas
pop
addr16
ljmp
out
push
or
aad
arpl
cmpb
jno
sbb
out
dec
sbb
out
out
and
mov
ret
pop
pop
mov
bound
pop
inc
dec
push
aad
cwtl
out
ret
test
je
mov
dec
gs
repz
xorb
ret
dec
add
push
cmp
add
sub
or
pop
fs
mov
jnp
mov
call
xlat
dec
mov
mov
testb
lock
ret
test
push
sbb
add
sub
push
inc
push
insl
push
mov
and
or
in
sub
loope
mov
cli
out
sub
dec
jmp
push
mov
invd
ss
je
push
dec
daa
pop
cmp
pushf
cmp
add
mov
movsb
add
es
pop
xchg
das
pop
data16
push
int3
sbb
imul
xor
push
cmp
inc
in
pop
jb
popa
sahf
mov
adc
mov
ss
or
and
adc
negl
cmpsb
pop
shr
ljmp
pusha
fisubs
push
fnstcw
sub
fistps
pcmpeqw
mov
loopne
xor
cmp
cmp
or
mov
and
nop
shrb
outsl
mov
pop
cmpb
push
jle
jbe
pop
mov
xchg
insb
dec
and
or
int3
shll
push
jne
or
mov
pop
fcoms
sbb
xor
pop
lods
mov
mov
pop
dec
ds
or
sahf
sub
push
ss
or
jl
pop
in
fwait
push
cmpsl
jo
aam
pop
mov
lahf
pop
in
mov
stos
imul
xchg
shrl
outsl
cmp
shrb
cmp
scas
in
pop
sti
sub
je
jcxz
add
and
mov
mov
xchg
nop
gs
xchg
jae
cmpsb
cmpsb
fildll
push
add
loopne
cli
lret
jns
aaa
push
outsl
ja
fs
pop
shll
fiaddl
adc
cwtl
jl
rcrb
shlb
push
sti
data16
lods
push
out
outsl
adc
xor
leavew
jnp
xchg
in
dec
inc
les
push
push
jge
rcrl
jp
push
adc
cltd
mov
push
out
push
mov
inc
mov
ret
adc
mov
sbb
push
mov
rclb
jp
call
test
or
stos
mov
add
aaa
or
fwait
cltd
cmp
inc
stos
lock
cld
xchg
jo
shrl
push
icebp
push
lahf
sbb
xchg
xor
std
and
jb
mov
mov
inc
int3
xchg
int
push
push
jle
mov
lahf
ljmp
dec
adc
or
rorl
jo
inc
and
xor
loope
fnstsw
lret
cmp
or
outsl
cli
xor
mov
cmc
insl
test
sbb
cli
cmpsb
jmp
dec
dec
mov
add
xlat
push
jbe
mov
jb
lahf
xchg
lock
lea
mov
inc
test
setge
aam
fprem1
add
inc
or
mov
in
scas
dec
aaa
js
adc
pop
lret
adc
outsb
out
pushf
mov
mov
cmpsl
orb
movsl
sub
xor
and
fidivrs
jl,pn
data16
cmp
pushf
fnstcw
leave
pop
insb
out
jmp
daa
sbb
jg
push
dec
movsb
jge
aad
outsb
movsl
sub
push
stos
dec
repz
sub
inc
or
gs
mov
or
mov
xor
dec
inc
mov
sbb
add
jmp
jbe
insl
les
dec
pop
and
jne
cwtl
aas
icebp
sbb
or
loopne
jp
mov
mov
mov
inc
jle
test
xchg
lds
and
negl
lcall
push
xor
and
mov
adc
push
pop
movsl
adc
mov
stc
xchg
gs
inc
sbb
lret
add
adc
sub
idivl
xchg
fwait
cmp
mov
dec
sarb
lods
mov
mov
sub
jg
je
sub
stos
leave
adc
sahf
sub
cmp
out
std
fnstenv
rclb
xor
push
push
in
mov
jno
pop
sbb
xchg
adc
call
lods
xor
movq
in
lret
inc
inc
daa
push
mov
test
imul
aaa
cmpsb
lods
data16
call
sbb
sub
or
aas
test
jg
lods
push
test
and
ror
imul
call
imul
popa
idivb
sub
jne
or
xchg
out
aas
out
mov
sub
and
adc
addr16
jmp
mov
dec
and
test
jmp
out
mov
dec
sbb
mov
lret
sbb
fstpl
add
jae
mov
frstor
imul
cmp
mulb
mov
or
add
sbb
inc
jnp
dec
outsw
adc
aad
cmp
cmp
cwtl
jo
jl
jl
mov
pop
xor
push
andl
mov
mov
jb
imul
pop
outsb
gs
dec
popa
pop
dec
out
push
retw
cltd
stos
xchg
inc
xchg
fwait
sub
push
test
pop
dec
test
or
pushf
scas
int
aad
sbb
xchg
xor
pop
jb
jns
dec
jmp
xor
mov
cs
sub
mov
lret
pusha
out
ljmp
scas
pop
or
and
rorl
fmuls
icebp
mov
aam
leave
jecxz
xor
cmp
loop
repz
mov
sub
cmp
dec
add
imul
test
in
cmc
add
movsl
lret
dec
cmpsb
out
adc
lea
or
in
js
pushl
imul
xchg
lods
or
pop
shl
bound
rcr
pop
in
sub
repnz
cmpsb
and
dec
mov
mov
aaa
scas
jmp
or
std
lock
dec
cmp
jge
inc
pop
shrd
cmp
xchg
stc
jg
test
mov
sub
mov
adc
inc
test
and
dec
js
jne
and
repnz
sub
add
imul
shlb
call
pop
xchg
pop
shll
rorl
shlb
call
push
les
mov
sub
jmp
pop
lret
scas
xor
dec
test
pusha
mov
mov
das
xchg
nop
xor
or
cmp
shl
push
mov
or
xor
or
inc
ja
jl
push
sbb
sub
xchg
cmp
pop
aaa
dec
daa
cmpsb
xchg
sbb
xor
adc
mov
jns
pop
pop
cmp
cmp
cmpsb
adc
xchg
cltd
or
or
mov
mov
xchg
xor
jle
testb
jge
adc
dec
fwait
aaa
cmp
sti
cltd
out
lret
pop
xor
mov
xchg
daa
mov
pop
popf
push
ljmp
mov
sbb
les
stc
shufps
xchg
cmpsb
push
lds
addl
aam
and
pop
xchg
popl
adc
push
outsb
sub
dec
lcall
movsb
mov
out
out
int
jg
in
cs
adc
jmp
call
push
push
fsts
insl
stos
dec
push
mov
push
sbb
rorl
sbb
mov
jge
mov
scas
dec
imul
incb
jp
cs
sbb
jmp
hlt
jne
in
cmc
mov
jmp
inc
inc
sbb
adc
enter
das
push
shrb
jno
cltd
sbb
xor
addr16
and
inc
adc
xchg
add
inc
lcall
jle
cmp
arpl
lcall
jp
outsl
cmpl
out
xchg
sub
mov
test
mov
sub
mov
movsb
xor
notl
pop
jmp
addr16
sub
push
hlt
jae
daa
lods
pop
mov
mov
lahf
outsl
in
jnp
gs
sahf
push
insb
mov
fs
or
fsubrl
mov
std
mov
mov
sbb
jo
mov
outsb
mov
xchg
jp
clc
mov
xor
stos
mov
sbb
arpl
push
repnz
imul
call
or
cs
aad
sub
ljmp
cwtl
popa
inc
mov
shl
and
push
ss
fists
out
lret
decb
sbb
cmp
mov
xor
xor
lds
push
pop
int3
mov
pop
or
sbb
sub
popf
icebp
insb
hlt
fbstp
icebp
pop
mov
xchg
jle
sub
xor
or
adc
cltd
sbb
cmpsl
cltd
adc
mov
xor
das
stos
mov
cwtl
xor
int
icebp
mov
idiv
pop
jmp
xchg
xor
mov
int3
clc
je
inc
out
repnz
popa
xchg
arpl
cmpsb
ja
test
sbb
or
daa
mov
pop
jns
sbb
add
mov
bound
mov
xor
xchg
push
loope
test
xor
push
jle
and
mov
mov
push
addr16
in
mov
dec
shl
ret
repnz
push
push
mov
negl
insl
lahf
jb
mov
xchg
lret
into
test
int
or
cwtl
in
imul
xor
jb
mov
sub
in
pop
lods
decb
xchg
insl
stos
pop
popf
and
or
test
mov
inc
and
adc
movsb
stos
ds
xor
bound
fiadds
jge
mov
push
pop
pop
dec
dec
out
jnp
fisttpll
pop
mov
add
gs
pop
xchg
pop
mov
loopne
movsb
lea
mov
inc
pushf
adc
jne
adc
fdiv
cmp
inc
lods
scas
in
lods
xchg
fwait
sbb
push
aaa
or
jno
xor
lods
mov
push
sbb
mov
pop
cltd
mov
fs
lea
sahf
shl
cmp
lret
inc
cmp
inc
sub
into
sti
pop
cmpsb
lcall
mov
fwait
outsb
pop
nop
je
sbb
jl
fsubl
mov
dec
aam
mov
bnd
fwait
adc
hlt
dec
cmpsb
lahf
out
ret
mov
lcall
xor
pusha
jno
inc
pop
outsb
xlat
fldl
dec
pop
out
popa
shlb
push
pop
aad
loope
outsl
bound
testb
out
dec
xor
pop
jl
iret
jae
dec
lea
jg
xor
repnz
out
lret
lds
imul
mov
aas
pusha
inc
xor
sti
mov
ds
xor
xchg
dec
movsb
and
insl
jcxz
inc
test
addb
pop
or
and
adc
popa
or
nop
fwait
pop
lock
mov
arpl
in
cmp
or
jmp
adc
dec
in
xchg
cmp
xlat
and
mov
lahf
xor
xorb
rorb
fcoml
daa
mov
xchg
roll
dec
jb
addb
jmp
or
jae
push
inc
mov
call
in
pop
pop
repz
test
mov
lods
push
add
xchg
cmpsl
inc
mov
adcl
lcall
and
lock
nop
or
inc
incb
ror
imul
outsl
neg
sbb
test
lahf
std
fs
mov
repz
xor
sbb
in
js
xchg
push
das
sub
and
mov
xorb
and
pop
or
sbb
push
nop
aad
outsl
sarb
jge
pop
lea
add
clts
mov
cmp
ror
inc
jbe
in
shll
shlb
adc
sbb
ficoml
xchg
inc
push
movsb
mov
aaa
stos
fisubl
lret
jae
fwait
xor
lret
jbe
test
jbe
mov
orb
sbb
insb
loopne
fwait
scas
mov
mov
add
mov
inc
sbb
dec
scas
adc
loopne
xor
mov
dec
sbb
push
add
mov
test
and
mov
pop
fbstp
sarl
imul
cmp
int
outsl
mov
aaa
loope
xchg
dec
das
push
ucomiss
push
fcoml
xor
shll
and
inc
test
adc
stos
sub
pop
jbe
sbb
testb
ret
lods
repz
into
jmp
push
icebp
adc
push
lcall
mov
inc
add
icebp
xor
shll
in
dec
add
and
pushf
bound
pusha
xchg
fistpll
adc
test
pop
pop
and
sbb
imul
adc
addr16
cmp
mov
jns
push
inc
stos
daa
add
jmp
test
pushf
xchg
xchg
test
sub
psllq
movsl
cwtl
lret
les
cmpsl
mov
fistpl
adc
cld
in
sbb
ret
inc
xor
pusha
add
xchg
or
movsb
mov
ds
push
push
daa
xchg
xor
inc
push
loope
gs
rol
inc
or
sub
mov
iret
aas
das
cmpb
enter
outsb
xor
and
inc
shrl
fcoms
xchg
jp
cmp
cli
fdiv
mov
pushf
inc
or
add
lret
add
jge
jb
sbb
ljmp
push
add
arpl
sub
mov
mov
lds
clc
sbb
leave
arpl
clc
imul
clc
ljmp
jmp
dec
mov
les
sub
roll
dec
out
sub
lcall
add
xlat
lds
test
jg
push
pop
sarb
mov
test
movsl
xchg
push
lcall
and
jnp
xchg
popa
mov
lods
and
das
adc
idivl
lret
cmp
jmp
jg
fwait
add
addl
ret
movsl
out
push
or
pop
sahf
rcrb
and
mov
xchg
adc
dec
lret
bound
push
sub
mov
add
iret
or
movsl
cmp
addl
fcmovbe
cltd
aad
mov
jle
pushf
inc
and
mov
jmp
push
inc
dec
fcmovbe
lock
rcll
out
iret
call
aam
addb
in
sarb
pop
inc
in
in
xor
sub
repnz
lcall
add
xchg
ficomps
xor
add
sub
lea
and
mov
imul
inc
pop
xor
ss
imul
push
orb
mov
pop
or
or
or
inc
dec
xor
adc
lock
ja
push
sbb
mov
rcl
lds
xchg
xchg
inc
movntps
dec
pop
rcrb
movsb
bound
inc
vmread
jbe
pop
test
ja
aad
fwait
nop
cmp
test
in
stc
xchg
mov
jmp
imul
mov
adc
clc
pusha
xchg
cwtl
dec
adc
cmp
in
push
sbb
lret
imul
enter
dec
insl
jmp
and
xor
stos
mov
xchg
xlat
mov
insl
sub
fwait
inc
sti
sub
rcrl
test
sub
shll
mov
imul
adc
fwait
xor
inc
mov
mov
cmpl
sub
xchg
xor
push
int
and
or
sbb
jge
insl
loopne
sti
ja
pop
mov
sbb
lds
loopne
out
pop
xchg
stos
arpl
imul
fdecstp
leave
add
or
sub
jp
dec
nop
mov
ja
sub
jg
mov
jecxz
in
lods
loope
jmp
push
fistps
hlt
leave
dec
ss
iret
push
sbb
aas
cmpsl
nop
mov
ret
mov
adc
jns
or
ja
or
call
mov
outsb
push
mov
out
xchg
sub
push
cmpsl
pop
cmpsl
cmpsb
cmc
add
pop
dec
pop
jne
pop
inc
mov
xchg
adc
and
jbe
jb
pusha
out
cld
hlt
cmp
adc
pop
xchg
sub
out
test
add
aas
or
dec
insl
fimull
outsl
push
mov
mov
mov
cmp
push
je
scas
lret
jl
cltd
mov
ja
push
out
mov
push
push
pusha
push
iret
mov
jp
in
mov
aas
mov
jno
and
lret
or
fisttps
sbb
jp
clc
pop
xchg
jbe
test
ret
mov
push
sbb
leave
xchg
js
notb
sarb
sub
out
sbb
ret
xor
xor
aad
mov
mov
lret
push
std
mulb
pushf
insb
les
push
xor
je
ret
sbb
jge
in
mov
lret
adc
in
xchg
stos
stos
mov
imul
mov
xchg
jl
mov
sbb
jp
stos
inc
xchg
outsl
insb
lea
inc
jne
insl
jl
xchg
daa
or
sub
stos
cltd
cmp
mov
mov
or
ljmp
pop
imul
adc
push
inc
sbb
pushf
mov
push
stos
pop
jg
adc
movsl
pushf
daa
test
and
dec
push
mov
shl
in
rolb
lods
or
pop
decl
es
mov
pop
sub
mov
mov
out
push
jp
aaa
add
imul
dec
push
push
xchg
jp
adc
insl
mov
pop
adc
jg
pusha
pop
xchg
roll
je
das
jns
shrl
clc
inc
or
xlat
sbb
xchg
mov
adc
and
mov
pop
jl
push
mov
mov
in
push
push
xchg
and
cmpsb
adc
into
jp
adc
pop
and
fisubs
xor
cltd
jns
push
push
xor
cmp
pushf
jmp
inc
aaa
imul
mov
or
pop
dec
ficomps
mov
negb
iret
frstor
scas
fsubrl
cmp
mov
pushf
test
fs
push
mov
movsb
std
or
movsl
stos
adc
aam
popa
lods
lods
sahf
clc
mov
sbb
leave
sbb
jg
mov
arpl
pop
mov
push
adc
mov
pop
mov
rolb
sbbb
lahf
xor
fsts
test
scas
mov
adc
scas
mov
ja
push
out
sub
imulb
inc
jae
testl
ret
loopne
out
sub
sbb
mov
add
sbb
js
push
and
mov
mov
cmp
sahf
mov
ret
imul
jb
outsl
aaa
inc
scas
inc
cmp
aad
in
lock
imul
imul
sbb
mov
int
cmpsl
sub
xor
push
ret
mov
out
test
aad
inc
mov
sbb
bound
movsb
xchg
sbb
sbbb
mov
inc
sbb
jns
xor
sub
mov
cmpsl
cmc
cmp
push
mov
adc
cmpsb
jp
dec
imul
add
stos
stc
stc
mov
or
jnp
pop
movsl
pop
mov
sarb
mov
and
scas
mov
mov
pop
addr16
xchg
outsl
pop
mov
mov
add
pop
test
push
pop
repz
pop
inc
fldenv
pusha
aas
push
fs
mov
sbb
es
push
push
xchg
shll
in
mov
fdivs
sarl
stos
mov
cmpsl
mov
add
jo
and
push
jno
data16
ret
mov
mov
adc
out
loop
dec
mov
sub
and
cld
inc
sahf
jae
frstor
pop
data16
mov
mov
clc
sbb
push
xor
mov
movsl
adc
pop
push
fwait
fildl
cmpsl
sahf
inc
dec
enter
cld
lcall
mov
xchg
or
cmp
loope
stos
add
mov
add
cmpsb
jge
scas
testl
pop
mov
mov
es
push
inc
sbb
push
sar
or
lods
cli
addb
test
outsb
rorl
icebp
xlat
cmpsl
fs
dec
mov
fisttpll
push
out
pop
adc
data16
xor
je
and
pop
add
jno
push
add
sub
adc
rcr
mov
insl
add
loopne
imul
or
arpl
jae
add
aas
filds
add
pop
lods
pop
jge
or
out
sub
icebp
xor
or
test
add
pop
sbb
fs
cmpsb
add
xchg
mov
cwtl
into
loop
fsubrp
ret
dec
in
sar
repnz
pop
xor
ret
adc
mov
test
outsl
mov
add
repz
out
inc
popf
mov
cmpsl
pusha
and
out
inc
kmovw
sub
addr16
sub
inc
sti
or
test
mov
add
jno
fisubrs
into
cmp
jno
mov
jecxz
pop
xchg
int3
daa
aas
int
sbb
jle
pop
fmull
or
mov
aaa
hlt
jno
pop
test
pop
xor
sbb
clc
push
pop
in
push
int
stos
cmpsl
add
add
insl
ja
out
pop
mov
mov
repnz
inc
bound
pop
shll
into
jmp
fsts
sbb
scas
cmp
xor
or
dec
aam
mov
inc
enter
mov
cmpsb
fldl
mov
ss
push
mov
in
shrb
jns
sbb
xchg
inc
xchg
mov
or
cmpsb
xor
push
rorb
pop
insb
dec
jecxz
leave
in
shl
xor
mov
adc
xchg
dec
cmp
mov
fcomps
test
std
sbb
in
adcb
jbe
lcall
leave
mov
int3
test
mov
arpl
or
inc
xor
jl
dec
nop
add
repz
mov
int
push
ljmp
mulb
and
nop
shr
mov
cmpsl
add
es
xlat
jo
or
sub
sub
lods
or
enter
sbb
mov
sub
inc
lea
test
jecxz
shll
mov
dec
mov
hlt
push
push
lods
or
pop
movsb
dec
jmp
stc
xlat
add
push
andl
ss
fistpl
outsb
lcall
orb
addr16
push
pop
sub
adc
es
adc
cmpsb
sub
test
jp
dec
sub
cmpsl
imul
test
xor
daa
lock
mov
push
jmp
lret
shrb
xchg
std
jno
sub
dec
stos
mov
popa
sub
movsl
xor
jecxz
gs
xchg
incb
sub
loope
jae
adc
roll
cmp
or
insl
test
mov
es
or
xchg
xor
jnp
aam
aad
lods
mov
stos
push
stc
cmpsl
mov
push
into
jecxz
jl
add
movsl
xor
iret
push
lea
enter
mov
into
sbb
adc
bound
push
iret
in
ret
insb
inc
inc
mov
xor
xchg
ja
lock
jp
mov
inc
int3
sub
in
xor
pop
dec
jmp
orl
aas
and
out
lods
pop
inc
roll
xor
cld
dec
adcb
and
sbb
pop
imul
dec
cmp
cmp
mov
cltd
dec
xchg
dec
push
hlt
mov
fwait
ret
pop
cltd
or
clc
movsl
inc
mov
lock
jmp
pop
gs
sbb
and
push
fnstsw
inc
xor
scas
jns
inc
or
addr16
and
cmpsb
loopne
das
sub
jl
ja
mov
xor
pop
pop
cwtl
daa
lds
mov
xchg
daa
xor
neg
dec
pusha
sub
pusha
addr16
test
cmp
call
cmp
or
stc
cmpsb
push
adc
ret
nop
add
xchg
jmp
imul
dec
jge
lea
dec
outsl
sbb
inc
std
cmc
jecxz
repz
mov
inc
mov
fwait
xchg
sbb
fimuls
loope
fcoml
ja
cmp
adcl
rcll
icebp
insl
mov
pop
xchg
aam
scas
pusha
ss
insl
fstpl
mov
pop
addb
and
mov
jmp
inc
movl
aas
jge
mov
js
rcrl
das
xor
shlb
push
ret
push
inc
pop
idivl
dec
adc
fidivs
and
pop
add
inc
scas
mov
jl
mov
mov
xchg
mov
arpl
data16
gs
add
inc
inc
call
lret
add
faddl
jno
dec
cmpsb
mov
cmp
mov
push
aad
in
std
add
mov
stc
jo
lods
adc
cltd
cmp
clc
xchg
push
pushf
inc
pop
call
xchg
xor
leave
sub
fsubs
dec
mov
pop
inc
pop
ss
pop
pop
nop
rclb
out
lea
pop
xchg
xor
lret
xchg
mov
adc
out
fiaddl
daa
popa
jecxz
stos
dec
xchg
add
and
pop
ss
aas
js
lret
fwait
dec
mov
daa
jge
out
and
jns
cwtl
bound
add
sahf
mov
pop
pop
adc
std
xchg
inc
gs
out
mov
dec
leave
mov
inc
xor
jmp
aam
jg
sub
imul
enter
or
cmpl
adc
jl
sub
js
and
xor
lock
hlt
test
xchg
pushf
xchg
adc
insl
sub
and
push
dec
stos
in
add
jo
adc
into
das
sbb
mov
or
lahf
push
aas
cld
mov
lret
std
mov
out
stos
sub
loop
ljmp
das
mov
mov
sbb
sbb
int3
sahf
scas
icebp
or
cltd
das
in
fdivl
fmull
mov
and
enter
enter
fwait
aaa
push
and
cld
and
and
mov
ljmp
jecxz
or
scas
insb
stos
mov
out
bound
sub
or
mov
jle
mov
jns
push
inc
jl
mov
stc
lret
adc
dec
push
and
jmp
loopne
push
repnz
mov
loop
cmpps
lock
xor
mov
mov
and
cmp
mov
pusha
js
adc
dec
imull
lahf
fistpl
inc
push
sbb
leave
int
or
nop
cmpsb
jno
frstor
insl
add
sub
movsl
call
mov
jg
jmp
enter
addr16
or
es
mov
mov
divb
jecxz
icebp
int3
add
xadd
adc
test
pop
notb
arpl
jle
xor
rorb
add
inc
jecxz
and
dec
jmp
divl
dec
and
or
adc
adc
es
xchg
xchg
mov
bound
cmpsb
les
mov
sbb
shll
std
ret
cs
lea
and
jmp
es
cmp
rclb
inc
outsl
pop
jae
dec
bndstx
push
test
test
lock
scas
lahf
lock
lods
lods
pop
inc
jle
inc
adc
out
bound
mov
fwait
add
jmp
enter
sub
mov
fwait
lods
push
and
xor
fwait
and
push
ja
sbb
mov
movsb
mov
dec
int3
xor
xchg
mov
clc
fwait
shlb
clc
mov
cmp
ljmp
or
sbb
dec
adc
pop
cld
adc
inc
cmp
call
testb
outsl
jmp
push
lock
data16
pop
outsl
or
add
daa
inc
cmp
xor
xchg
jl
xchg
adc
mov
and
fstps
fdivl
xchg
xor
ret
dec
dec
stos
ficomps
xlat
in
pop
xchg
ss
in
fcmovnu
push
out
jge
pop
stos
out
enter
ljmp
test
std
incb
cmpsb
or
dec
or
notl
and
mov
mov
sbb
cwtl
mov
sti
jle
repz
inc
pushf
jmp
outsl
mov
sbb
push
sbb
insl
xchg
cmp
pusha
sub
scas
xchg
mov
push
push
aam
int
lds
jge
movsb
std
and
or
lret
push
iret
pop
clc
test
cli
lods
mov
lea
mov
inc
adc
and
sbb
mov
jae
lret
xchg
pop
stos
add
pop
sahf
int
enter
subb
outsb
test
jmp
inc
xchg
mov
sbb
xor
mov
test
mov
ss
xchg
add
push
push
pop
in
into
sahf
xchg
imul
fs
sti
shl
int3
jns
in
sti
loop
push
lahf
mov
aaa
and
cmpsl
push
xor
cmp
cmp
cs
pushf
mov
das
faddp
add
lea
rcl
add
mov
mov
imul
mov
lahf
mov
pop
stc
into
mov
or
xor
mov
scas
fcompl
and
subb
push
push
add
push
xchg
adc
pop
arpl
roll
bsr
aam
movsl
jbe
aas
ret
fistl
sub
pop
shll
fdivrl
add
cmp
cmp
pop
ret
dec
pop
sub
cmp
inc
rcrl
push
aas
in
ficompl
jmp
mov
rcll
xchg
ret
mov
mov
roll
cmc
cmpsl
jge
sbb
dec
xor
out
cmp
repz
aaa
mov
jg
cmp
shrb
dec
push
sbb
pop
rolb
les
lods
aas
mov
stos
sub
in
xor
fisttpl
xchg
addb
int
sub
ljmp
cmp
push
pushf
pop
pop
iret
cmp
sbb
sub
ret
sbb
aam
adc
mov
out
sub
sbb
or
sbb
popf
dec
bound
shlb
sbb
jmp
movsl
xor
cmpsb
test
pop
mov
lea
mov
jns
cltd
popf
sti
jl
addr16
fwait
push
xchg
mov
pop
dec
data16
decl
jmp
jns
jge
sbb
jno
dec
call
les
subl
in
fldcw
jnp
pop
jnp
push
test
inc
mov
and
aad
out
out
push
adc
cltd
jbe,pt
or
test
push
jmp
adc
bound
mov
xchg
cmp
outsl
stos
insl
mov
mov
add
xor
in
test
cltd
andl
cld
xor
ret
adc
clc
fdivs
sbb
shll
mov
jno
add
dec
mov
out
mov
add
mov
cmp
ja
enter
out
mov
push
jbe
adc
call
fcoms
and
out
and
lods
push
push
xchg
mov
and
push
adc
push
lret
aaa
mov
or
lret
xlat
data16
lds
cmp
xchg
ret
mov
jno
xor
nop
xchg
jmp
push
mov
mov
jmp
pop
mov
mov
fwait
cmp
xlat
pop
idivl
roll
inc
mov
test
fs
push
push
xchg
scas
mov
ss
aad
cmp
sahf
fdivrl
loopne
inc
aam
mov
cli
insl
add
add
pop
stos
inc
inc
push
jl
mov
adc
iret
and
out
movb
pop
push
push
fisttps
and
sti
test
push
ss
in
xorl
sbb
stos
or
nop
int
lret
pop
pop
stc
push
jg
outsb
jnp
pop
aaa
xlat
sbb
push
jb
sub
rcll
push
xchg
in
add
test
out
int3
sbb
pop
std
in
popf
call
pop
les
adc
add
bound
js
pushf
add
shlb
icebp
lcall
int3
jle
pop
imul
pop
push
dec
push
xchg
dec
mov
stc
xchg
pop
inc
and
outsb
sub
adc
pusha
sub
dec
inc
mov
mov
popa
cmpl
inc
scas
lods
sbb
xchg
push
cwtl
addb
out
add
cmpsb
sub
cmc
push
insl
xchg
not
sbbl
sti
jae
ljmp
jl
push
pop
mov
dec
push
sbb
xor
jne
shrl
mov
mov
xor
xchg
incb
fs
nop
pop
aas
xchg
mov
icebp
mov
and
imul
in
fsub
xchg
mov
inc
cmp
mov
stos
incb
das
lahf
data16
push
mov
sbb
sub
addl
push
xor
jnp
cmp
sarl
inc
dec
mov
dec
outsl
xchg
aam
into
xchg
inc
int3
jns
pusha
push
mov
inc
in
inc
inc
int3
pop
int3
cmp
pop
pushf
cmp
inc
out
xor
loopne
mov
push
out
sbb
adc
cld
cmc
pop
xlat
loope
lea
cmp
xor
les
mov
sub
mov
outsl
out
ljmp
out
out
xchg
push
data16
addr16
xlat
fwait
addr16
mov
mov
loopne
pop
adc
mov
imul
movsb
push
or
aaa
jb
cmpsb
leave
jl
jns
aaa
jno
add
into
cmpsl
loop
add
push
js
push
inc
stos
dec
cmc
aam
sbb
inc
out
pop
sub
jp
inc
inc
cmp
xchg
cmp
sub
icebp
leave
mov
mov
xchg
test
cld
inc
sub
xor
xor
mov
repnz
mov
test
int3
data16
push
mov
mov
mov
cmpsb
in
xlat
sub
test
int3
push
sbb
cltd
adc
cmpsl
sub
cmpb
loope
mov
sahf
fcomps
aaa
jbe
or
bound
cwtl
daa
sbb
scas
sub
adc
and
inc
icebp
xchg
je
leave
mov
push
arpl
inc
testl
div
cltd
cmpsb
jo
filds
scas
mov
loopne
insl
jp
fxch
test
add
inc
inc
pushf
arpl
mov
mov
sbb
scas
js
mov
mov
arpl
inc
add
es
or
cmc
inc
fcompl
dec
pop
loopne
cmpsl
icebp
pop
adc
out
cli
jp
test
cs
fwait
jne
lcall
ret
mov
pop
mov
imul
mov
pop
rcrb
mov
add
lds
daa
cmc
aaa
addr16
scas
movsb
sbb
lds
xchg
xchg
shrb
sti
stos
loope
inc
fdivl
mov
rorb
adc
nop
push
dec
xlat
lret
xor
stc
insb
fcomip
xchg
mov
or
add
cli
jne
ljmp
repz
popa
pop
sub
lea
mov
test
mov
jne
push
fadds
push
loop
into
cltd
dec
std
lea
mov
xor
and
mov
aaa
and
outsb
cmpsb
mov
mov
dec
xchg
and
push
xor
cltd
dec
xor
test
dec
scas
shlb
rolb
add
icebp
jmp
fdivrl
lret
leave
dec
in
roll
push
inc
fs
jae
add
mov
inc
adcb
cmp
jecxz
dec
cmpl
int
mov
rorl
sub
and
in
pop
cmpsl
negb
xor
jmp
lret
roll
xchg
int3
out
mov
fidivs
mov
mov
jno
nop
push
test
lods
cltd
call
or
fiaddl
lret
roll
jae
stos
push
pop
mov
mov
jbe
sbb
pop
cmpsl
add
in
cltd
pop
xchg
mov
jge
pop
sbb
jno
in
jp
mov
and
ret
push
mov
rclb
sahf
sub
scas
daa
inc
push
cmpsl
daa
pop
xchg
pop
cmc
imulb
push
movsb
loop
jbe
ret
jmp
popf
xchg
pop
stos
loopne
rorl
mov
push
inc
cmp
divl
rorb
mov
cmp
ds
add
lret
repnz
rcrb
cmpsb
mov
xchg
test
jmp
popf
stc
push
sbb
mov
pop
and
push
lds
aaa
push
cmp
andb
push
aaa
jns
in
push
mov
repnz
ljmp
xor
das
push
out
push
loop
test
push
mov
xor
in
mov
xchg
insb
xor
das
or
sbb
cwtl
sub
je
mov
mov
es
repz
jne
jg
or
mov
sub
scas
fisttpl
lock
push
mov
mov
or
clc
mov
pop
xor
push
cmc
add
into
dec
clc
sahf
imulb
pusha
andl
adc
lcall
icebp
movsb
adc
enter
cltd
arpl
pop
xchg
cmp
adc
and
mov
in
sbb
iret
negb
lahf
mov
push
push
add
inc
dec
call
imul
insb
cwtl
or
inc
xchg
repz
mov
je
jo
or
das
mov
xchg
add
pop
mov
pusha
mov
dec
pop
or
xchg
gs
jns
hlt
sarb
in
testl
add
ret
adcl
pop
nop
cmp
inc
sbb
xchg
out
into
outsl
dec
push
mov
or
repz
and
inc
jp
and
add
inc
fs
int3
xchg
mull
bnd
push
std
out
mov
test
andl
cmp
js
or
mov
dec
and
popf
subl
mov
sbb
pusha
add
sub
and
rcr
push
push
arpl
pop
adc
in
call
aas
loop
fisubs
sbb
xor
pop
xlat
cmp
add
mov
outsl
adc
lds
xor
push
imul
roll
mov
stc
sbb
pushf
shll
mov
mov
andb
jb
pop
add
lahf
and
test
mov
ljmp
mov
cs
lret
xor
inc
jge
movsl
in
cmpxchg
andps
out
add
out
popa
cmp
push
sbb
data16
sarb
add
mov
out
cli
stc
je
push
test
loope
insb
pushf
push
mov
cmp
movsl
cmp
leave
mov
mov
jbe
add
pusha
subl
dec
fadd
jge
inc
add
push
push
in
fcom
inc
push
lods
add
imul
scas
add
fisubl
or
cli
mov
cmpsb
and
cmp
lods
add
sbb
jecxz
stc
push
mov
jns
cmp
icebp
jno
call
aad
adc
enterw
int
loope
mov
lret
xchg
out
inc
popf
xchg
push
dec
imul
scas
cmovnp
dec
addb
jmp
cli
and
iret
lcall
mov
fstpt
and
stc
cmp
sti
aaa
test
aam
ss
dec
rcll
mov
xor
sahf
inc
clc
out
arpl
sub
das
and
mov
ret
out
jo
push
jmp
mov
sub
stos
and
jecxz
and
jle
cmp
je
dec
xchg
pop
pop
push
mov
xlat
add
outsb
pop
icebp
or
shll
lds
cmc
jo
mov
pusha
push
xchg
add
push
pop
sub
pop
lock
je
icebp
andl
jmp
fwait
arpl
sti
pop
cmp
jne
outsb
in
sbb
vpunpckhwd
ds
lahf
or
dec
lcall
movsb
outsb
pushl
xor
xchg
inc
ret
out
cmp
cmp
aam
fsubrl
repz
pop
cld
push
pop
pop
in
xor
shll
divb
and
insl
roll
xor
insb
repz
push
mov
ret
int
ret
inc
dec
aad
dec
ss
arpl
lds
sbb
fs
mov
idivl
jp
aad
xchg
mov
cmpsb
out
sub
inc
jb
mov
negl
jnp
mov
inc
pop
loop
mov
mov
mov
loop
cltd
pop
mov
cmp
and
and
inc
push
loopne
xchg
pop
pop
add
ljmp
lret
add
mov
inc
ret
and
xchg
lret
push
aas
testl
bound
xchg
data16
aad
iret
jl
xchg
das
xchg
ret
cmp
arpl
xor
test
insl
aas
xor
jp
push
das
push
inc
mov
cmp
into
fbstp
stc
dec
lea
add
insb
test
ffreep
imul
xor
cmp
pop
inc
popf
je
and
cmp
in
stos
inc
add
jmp
fwait
push
mov
cmpsb
ljmp
les
int3
sbb
xchg
jp
ficomps
pop
xor
push
mov
jo
cmpsl
mov
rcrb
hlt
jge
jge
mov
lock
inc
mov
in
les
jp
jbe
sub
jae
xor
shll
mov
jle
mov
and
dec
and
nop
jno
sbb
adc
push
testb
ds
lcall
dec
sub
inc
add
outsl
xchg
ss
mov
or
fistps
das
mov
jns
jle
sbb
sub
out
push
xchg
push
mov
mov
jp
stos
xorl
mov
push
lea
mov
and
in
ret
sbb
fcomi
push
iret
je
xacquire
outsb
xor
pop
pop
lret
ss
pop
jns
out
push
sub
cmp
sbb
mov
icebp
loop
push
stos
frstor
add
push
scas
idivb
xchg
push
adc
pop
pop
aam
pop
push
mov
out
je
stos
fcompl
cmpsl
dec
add
lret
addb
test
pop
add
add
in
adc
jl
aad
notrack
and
es
mov
pop
push
mov
fsts
cmp
mov
fsubrp
notb
xchg
lds
mov
xor
or
or
pop
xchg
jecxz
cli
xor
pop
cmc
in
xchg
xchg
cmp
push
add
push
inc
fs
out
xchg
mov
stos
jns
out
and
cs
imull
sub
push
aad
imul
lock
lock
jecxz
icebp
mov
cltd
inc
pop
push
jbe
stos
cwtl
push
cmp
push
cltd
mov
scas
sahf
clc
xor
shrl
test
push
addr16
cmpsb
pop
lods
push
pop
pop
push
ret
test
push
sub
stos
cwtl
mov
pop
popa
xor
popa
sub
out
in
pop
loop
lock
sbbb
sbb
scas
or
mov
sbb
subb
pop
sub
push
dec
push
es
pushf
adc
xchg
bnd
pushf
mov
cli
sbb
sub
adc
push
mov
push
xacquire
mov
xchg
popa
mov
lock
loopne
loopne
mov
jmp
aas
pop
push
xchg
push
outsl
push
xor
mov
mov
fstpt
dec
loope
sub
inc
loop
mov
push
mov
push
cltd
pop
subb
dec
adc
dec
dec
cmp
lcall
pop
fstpt
mov
lcall
je
lods
ret
pmaddwd
cmp
push
sub
rorl
mov
pop
lods
lods
pop
sub
movsl
out
push
fwait
int3
dec
aaa
xchg
push
aaa
stos
daa
icebp
sbb
shl
adc
loop
pop
push
shl
sbb
idivl
xor
cs
lret
fs
pop
iret
out
nop
repnz
push
outsl
sub
or
stos
movsl
pop
lret
add
pop
xchg
jns
out
inc
inc
scas
xchg
nop
sub
fisubl
sub
and
mov
fsts
hlt
xor
cwtl
mov
sub
movsl
clc
andl
jb,pn
les
lret
adc
dec
es
les
je
out
sub
fwait
adc
ror
mov
lahf
loop
jns
jecxz
out
lcall
pop
jbe
sub
test
dec
in
dec
pop
mov
out
shl
sarb
outsb
jae
scas
ja
lahf
mov
stc
jmp
imul
into
jns
shl
add
push
icebp
lods
mov
sbb
das
mov
mov
jmp
adc
popa
shrl
imul
dec
xor
mov
mov
xchg
popa
repz
inc
push
or
pop
cmp
cld
jne
js
inc
adc
xlat
testb
lcall
cmp
pop
xor
sub
jmp
insb
xor
sbb
dec
arpl
inc
adc
repz
movsb
cli
dec
add
loop
pop
and
fisttpll
pop
sub
aaa
lea
mov
pushf
xchg
mov
sub
sarb
mov
push
adc
cs
sti
sub
sub
shlb
lret
pushf
es
arpl
push
cmpsl
je
out
mov
imul
movsb
pop
outsl
add
mov
test
sbb
mov
cmp
stos
hlt
cmp
xchg
pop
mov
xorb
cmpsb
lcall
frstor
cmp
out
lods
inc
and
inc
dec
sub
mov
xchg
xor
cmp
icebp
jl
rolb
jo
out
scas
pop
sbb
pop
mov
aam
in
popf
inc
push
mov
cmpsb
clc
or
outsb
cmp
push
insl
mov
and
sti
rol
pushf
adc
fs
mov
repnz
int3
scas
addr16
adc
sub
leave
and
pop
jnp
hlt
addr16
push
icebp
insl
test
push
data16
sub
mov
out
sbb
and
sbb
push
adcb
jp
test
dec
and
push
jmp
jg
add
dec
out
jge
daa
sub
mov
fists
movsl
push
pop
rcrl
cmc
mov
push
jecxz
sbb
loope
cmp
mov
adc
mov
mov
aaa
addb
mov
sbb
and
stc
mov
sbb
mov
cltd
mov
je
loopne
or
mov
add
mov
ret
add
xchg
sahf
add
add
mov
test
cmp
pop
pusha
mov
jo
pop
lods
add
or
and
sbb
jp
lahf
lea
adc
xlat
pop
rcl
sti
out
imul
aad
insb
aad
sub
inc
jmp
add
ds
xchg
sar
sub
xor
mov
pop
pop
es
stos
inc
imul
pop
pop
or
dec
jge
mov
fisubrs
xchg
pop
cmp
or
les
rep
inc
data16
popa
mov
fwait
dec
fisubrl
mov
ljmp
and
push
adc
lahf
mov
xchg
std
dec
hlt
in
cld
dec
and
test
mov
xchg
sti
xor
mov
mov
shlb
push
lods
sub
mov
or
xor
push
jne
mov
mov
nop
js
fcompl
repz
lahf
inc
lret
arpl
push
faddl
push
test
ja
in
or
or
bound
std
cmp
movq
mov
mov
xchg
push
or
dec
icebp
movsb
aad
mov
aaa
jno
jno
std
mov
inc
add
iret
insb
fwait
daa
jecxz
imul
jno
pop
xchg
sbb
push
lcall
or
sbb
outsb
inc
arpl
ja
imul
sbb
in
fiadds
add
nop
mov
mov
outsl
cwtl
insb
mov
fucom
or
nop
xor
imul
shll
loopne
pop
mov
inc
xor
rolb
fstpl
mov
xchg
outsb
or
xor
and
pushf
popa
pop
ret
push
test
xchg
hlt
movsl
andl
jmp
or
sub
push
and
add
and
subl
jecxz
inc
push
or
and
gs
mov
mov
stc
xchg
mov
push
ret
mov
cli
mov
mov
inc
push
out
cmp
fldenv
movntps
and
pusha
inc
insb
xchg
push
inc
shrb
roll
lods
or
and
movsb
adc
pop
dec
pop
adc
or
push
mov
pop
xchg
dec
imul
xchg
mov
leave
or
and
xchg
loop
mov
or
fs
imul
mov
test
push
fistl
imul
mov
or
rol
or
and
xor
xchg
dec
fadd
test
stos
push
add
insl
xchg
inc
xchg
ljmp
mul
jmp
mov
mov
je
or
jmp
sbb
fsts
bnd
xor
bound
mov
int3
pop
push
sahf
or
enter
mov
xchg
inc
bound
fwait
dec
mov
or
jns
fmull
mov
subl
out
dec
or
xchg
out
aam
and
jns
xchg
bound
ljmp
mov
pop
sbb
adc
adc
xchg
lret
popa
pop
in
mov
cs
movsl
repz
push
jbe
add
pop
ljmp
xchg
inc
mov
jbe
mov
cmp
cwtl
imul
jecxz
mov
stos
xor
lret
imul
hlt
loop
lahf
dec
fdivrl
clc
shrl
inc
stos
out
ret
jne
lret
add
mov
mov
mov
dec
out
ds
mov
pushf
pop
imul
push
sub
aad
fmull
push
cmpl
add
scas
sub
mov
sub
scas
test
jg
inc
sub
inc
ds
in
lock
loop
test
dec
xchg
and
jns
cmp
mov
icebp
push
int
adc
xor
push
and
icebp
daa
mov
or
cltd
test
sub
and
xlat
loopne
jmp
cwtl
mov
cmp
mov
mov
sarl
cltd
je
add
sub
idivl
jno
mov
sub
mov
push
pop
dec
js
cs
jp
dec
ret
scas
push
cwtl
movsb
fcomps
sbb
add
frstor
mov
les
aam
jbe
add
scas
test
subl
sarl
mov
out
pusha
and
mov
es
or
fisttpl
inc
jo
loope
ss
mov
xor
adc
and
inc
mov
lret
push
dec
movsl
fbstp
cmp
inc
repnz
xor
pop
xor
loope
xchg
int3
test
mov
pop
sarb
add
dec
and
rorb
fidivl
xor
and
es
adc
xchg
and
and
movsl
je
sub
pushf
aam
mov
cmp
xor
adc
scas
jp
mov
les
mov
push
loopne
outsb
cmp
xchg
push
std
adc
faddl
xor
fstpl
fs
mov
mov
idiv
js
decl
arpl
dec
sub
push
andl
mov
movsl
movsb
in
repnz
pop
pmaxub
imul
mov
mov
pop
mov
sub
and
mov
xchg
mov
mov
xchg
mov
cs
aas
jmp
push
sbb
pop
add
sub
cltd
sub
in
sahf
loopne
push
movsl
in
mov
int
add
mov
cld
dec
push
int3
stc
or
jnp
test
subl
xchg
mov
std
dec
aaa
mov
jbe
repnz
pop
dec
xor
in
pop
daa
mov
jl
call
add
xchg
add
mov
mov
sub
rorl
sbb
divl
shlb
mov
arpl
sbb
addb
push
cmc
aad
pop
xchg
test
cltd
mov
sarb
hlt
ret
xor
push
into
aad
xchg
test
cmovs
and
iret
test
sar
sub
pop
lret
pusha
sbb
dec
cmp
inc
mov
int
jp
jl
pop
imul
pop
cli
fwait
cmp
cmp
hlt
cmp
imul
dec
push
mov
cmpsl
jecxz
notl
loope
sbb
les
adc
sbb
lods
or
shrb
adc
mov
subl
push
iret
xchg
xchg
xchg
lret
rclb
je
lret
pop
xor
cmp
cmpsb
leave
scas
lcall
xlat
ja
pop
test
pushf
and
xchg
ret
sbb
adc
mov
scas
adc
add
dec
mov
pop
fdivrs
dec
std
nop
mov
add
xor
sahf
pushf
sbb
fmull
inc
push
inc
das
test
cmp
mov
adc
dec
and
repz
movsb
lods
xchg
or
and
push
imul
pop
inc
add
shll
lods
int
mov
mov
xor
dec
adc
sub
jae
xor
enter
cmpsb
ret
push
push
add
jle
shlb
daa
aaa
sub
sbb
cmp
xlat
or
jbe
push
xor
call
ja
push
js
mov
dec
or
and
or
in
push
notb
push
loop
add
or
hlt
push
lock
std
fistpll
lods
xor
mov
mov
xchg
popa
je
test
pop
push
sub
cmp
fadds
jne
fs
int
dec
xor
pop
xchg
and
int
ds
mov
cmp
and
push
xchg
xchg
or
pop
push
mov
fstl
ret
dec
fidivrs
or
std
les
iret
adc
test
in
jecxz
adc
mov
mov
lods
sub
mov
es
leave
imul
jecxz
shr
cli
dec
inc
fbld
mov
xchg
fbstp
repz
cmp
testl
and
push
or
add
fcompl
popa
leave
jnp
ficoml
and
add
fmuls
inc
and
insl
ljmp
sbb
sbb
sub
cli
jecxz
mov
or
or
mov
ret
or
arpl
jg
test
clc
movsl
loopne
addr16
outsb
stc
add
test
mov
cmpsl
mov
dec
pop
fwait
jb
sbb
cmc
pop
inc
or
mov
ja
jb
mov
imul
insl
jbe
inc
mov
pop
imul
test
stos
dec
call
sub
dec
adc
sbb
andb
xchg
sbb
xor
sub
inc
shlb
lods
mov
pop
inc
sbb
mov
lods
mov
mov
and
lcall
out
das
stc
movb
dec
mov
call
pushf
orb
lea
enter
jmp
sbb
test
roll
xchg
jne
aas
loop
cltd
icebp
es
jbe
sub
fimuls
dec
fiaddl
adc
add
jns
inc
cmpsb
aad
ja
sub
dec
mov
nop
aaa
movsl
sahf
dec
jp
int3
sbb
push
push
mov
push
xor
ret
xchg
dec
dec
and
pushf
fdivrl
mov
repz
xchg
sarb
dec
xchg
shrl
negb
add
jl
popa
nop
dec
lock
xchg
shl
xor
mov
in
pop
cmp
xchg
stc
fsubl
in
fucom
pop
push
arpl
xor
hlt
arpl
mov
dec
xchg
cmp
and
les
dec
sub
out
cli
mov
inc
ficompl
add
shll
hlt
jle
in
roll
cmpsl
mov
scas
inc
xchg
dec
into
repz
stos
pop
push
mov
sbb
lcall
xor
mov
insl
mov
jbe
jb
test
call
jns,pt
sbb
sub
mov
in
rorl
push
out
pop
jl
sbb
inc
xchg
jmp
mov
mov
mov
mov
xchg
jnp
ja
loop
xor
shl
popf
mov
mov
arpl
in
mov
sbb
pop
loopne
daa
push
xchg
push
aam
popa
rcll
rcrl
out
gs
sub
enter
jle
cs
lods
fsubr
rcll
shrb
cltd
push
loopne
pusha
orb
jb
out
cmpsb
cld
sub
insl
scas
je
push
popa
cmp
jne
cmp
mov
jb
shlb
add
fucomp
mov
lods
mov
sbb
mov
pop
into
xchg
cwtl
cmp
add
cmp
ret
sbb
insl
cld
cli
nop
es
and
cmp
ds
dec
cmp
mov
cmp
aas
sub
mov
mov
hlt
lret
cmp
sbb
cmp
daa
roll
ret
leave
cmp
lret
mov
adc
pop
ja
xor
sub
sub
fbstp
pushf
sub
es
jge
push
inc
and
out
pop
jle
jge
push
push
adc
xchg
lcall
ja
cmp
inc
or
fdivl
icebp
push
xor
pop
add
mov
add
int
jcxz
dec
pop
jnp
imul
fsts
dec
shl
lret
jno
jb
push
xchg
cmp
inc
push
mov
out
inc
mov
inc
aam
dec
mov
cmpsb
mov
cmpsb
jmp
in
std
push
adc
clc
test
in
lret
addb
xchg
mov
xlat
pushf
sub
and
fldcw
es
mov
popa
xor
loope
cmc
lea
mov
pop
dec
pop
sbb
ja
mov
les
cmp
inc
sub
sub
imul
lret
clc
lret
jns
jg
cmpsb
xchg
gs
cmp
cltd
jle
xchg
out
popa
notb
xor
sub
arpl
ret
les
xchg
jns
lock
loop
jecxz
mov
inc
repnz
xchg
inc
fmull
pop
xchg
cmpsl
gs
mov
mov
rcrb
jno
inc
pop
iret
jmp
nop
shll
test
enter
pop
xchg
xchg
sub
int
jle
or
push
cmpsl
adc
test
ds
mov
push
pop
std
sbb
loope
fcomps
in
daa
hlt
inc
jg
std
push
mov
jge
fbld
mov
adc
in
insb
nop
es
adc
les
mov
pop
pop
or
dec
jns
cltd
dec
push
jns
and
jecxz
add
jo
hlt
inc
sbb
scas
pop
push
shlb
mov
pushl
fs
mov
mov
imul
mov
and
out
in
andb
hlt
mov
add
or
dec
pushf
sbb
xlat
xor
mov
gs
shl
arpl
test
leave
lock
sbb
in
insl
mov
shl
lds
mov
sbb
push
push
adc
mov
and
stc
jne
pusha
xchg
aas
nop
mov
repz
pop
xchg
cmp
inc
popa
and
repz
fdiv
jno
divb
mov
lcall
leave
fld
es
sbb
dec
xchg
stos
fsubrl
loop
test
or
mulb
sbb
push
roll
cs
adc
push
dec
mov
mov
jl
in
pop
test
cmpsb
fistl
mov
mov
jae
ja
push
cmp
inc
addb
push
bound
je
sbb
sbb
xchg
call
lods
add
adc
mov
out
push
lret
jae
popf
pop
repz
push
mov
fwait
lret
fisubl
cmp
sbb
dec
repnz
leave
inc
in
insl
pop
push
fs
mov
lods
in
mov
add
xor
jno
ret
mov
daa
cltd
mov
gs
push
xchg
stos
inc
cmp
addr16
aaa
lods
mov
jns
mov
sub
adcl
arpl
fnstenv
mov
fwait
sub
sub
mov
jae
sub
adc
pop
pop
push
xor
xlat
and
mov
pop
imul
jmp
out
in
hlt
adc
or
mov
lret
out
dec
ljmp
das
cmp
jno
add
fistpll
sub
sbbb
aaa
sub
mov
movsl
mov
arpl
ret
cmp
xchg
xchg
ficomps
arpl
in
movsl
in
ds
xor
sub
test
lods
popf
xchg
mov
popa
xor
mov
inc
daa
push
in
movsb
jbe
lods
cmp
out
mov
lock
outsb
cmp
adc
and
popa
out
sti
aaa
cld
out
adc
mov
xchg
incb
push
mov
inc
arpl
or
mov
in
fpatan
mov
int
fisubl
repz
out
adc
inc
inc
fmul
push
lcall
mov
push
mov
push
mov
loope
lret
inc
push
mov
add
orl
push
stc
in
inc
or
cmp
rorb
pop
pop
lcall
mov
incl
mov
aad
rol
dec
in
xchg
gs
pusha
sbb
xchg
scas
mov
jnp
arpl
addr16
adc
pop
mov
scas
mov
mov
stos
pop
add
pop
sbb
test
movsb
pop
pop
sbb
and
das
or
sbb
inc
pop
in
test
lods
scas
or
mov
in
push
inc
sbb
test
push
sbbb
mov
push
or
xlat
and
xchg
stc
sbb
jge
xor
mov
aaa
jo
imul
cs
or
leave
mov
push
adc
sub
js
push
cmpsb
repnz
sub
lret
sub
inc
xchg
sbbb
sbb
sbb
mov
js
rcll
cmpsb
fstl
cmp
rcrl
xchg
xchg
arpl
aas
mov
pop
inc
adc
add
xor
test
dec
bound
inc
or
add
andl
or
pop
fidivs
sub
cmpsb
fnstcw
stc
mov
mov
mov
int3
dec
inc
pop
inc
sbb
mov
fadd
lcall
mov
hlt
and
mov
rol
adc
jne
mov
les
sbbl
leave
ret
or
and
add
andb
test
xchg
insb
nop
inc
inc
push
mov
popf
push
pushf
inc
push
sbb
jle
sbb
psubsw
cld
xchg
inc
loop
push
ljmp
test
imul
push
call
inc
stc
adc
stc
jnp
lret
and
insb
sbb
sahf
inc
out
xchg
add
int
lock
pusha
stc
and
sarb
in
pop
mov
inc
mov
push
mov
out
repz
daa
dec
mov
insl
ljmp
addr16
pop
or
mov
jle
cmp
pop
mov
xchg
sub
stc
jb
fmull
push
xchg
hlt
sbb
sbb
mov
lcall
subl
fucomip
cmp
xchg
fcomps
mov
push
outsb
sub
nop
sbb
shl
popf
mov
test
enter
cmp
xor
mov
daa
lcall
jne
mov
jecxz
fisubl
pop
xchg
push
adcl
xchg
in
pop
add
cld
dec
mov
testl
push
jne
inc
mov
push
jnp
addl
cmp
jmp
mov
das
adc
das
cwtl
mov
int
andb
shlb
aaa
insb
fildl
xchg
aad
das
ret
pop
cmc
das
test
inc
inc
sbb
ja
lret
xor
mov
jle
mov
mov
push
push
cli
mov
mov
mov
inc
das
jo
push
in
fidivl
jge
mov
cltd
cmpsl
pushl
jns
xchg
jp
sahf
les
jbe
inc
push
or
test
data16
test
mov
or
sbb
aam
fmuls
push
in
or
fbld
mov
adc
insl
and
push
xor
jbe
push
cmp
xchg
ds
jmp
imul
lahf
cmpl
adc
xchg
adc
inc
ja
pop
test
fisubl
inc
dec
mov
pop
sub
xchg
mov
cmovns
xchg
lds
adcb
stc
push
sar
dec
xchg
ds
push
pop
and
mov
cmc
xchg
addr16
pop
push
ja
cmp
adc
pop
popf
xor
sbb
pop
xchg
das
mov
or
ja
test
xchg
sub
mov
xchg
inc
shll
emms
and
xchg
popf
fmull
inc
push
cmp
cld
and
enterw
cmc
fsubrs
adc
call
cltd
jno
pop
xchg
out
sbb
std
xchg
pop
bound
mov
in
jno
scas
inc
sbb
std
std
cmp
sub
cwtl
inc
pop
dec
movsb
push
cld
stos
push
mov
jp
add
xor
std
mov
dec
mov
mov
call
es
stos
das
jg
mov
je
lret
aad
paddw
push
aad
test
xor
xor
push
loopne
mov
push
xor
pop
cwtl
insb
mov
jb
repz
add
mov
cmp
xchg
jns
std
jns
movsb
adc
push
jb
sbb
pop
ljmp
leave
jae
mov
loop
aaa
ds
cwtl
jl
mov
das
adcl
add
and
jo
sbb
jg
fs
call
pop
movsb
inc
out
jno
lahf
cmpsb
dec
int3
pop
sub
xchg
movb
std
dec
test
cld
test
cmc
ret
jge
idiv
shll
leave
sbb
jp
data16
mov
fnstsw
jbe
add
inc
cmp
jno
stc
aas
dec
jne
jo
hlt
shlb
jnp
fldt
insl
stos
dec
push
jge
pop
std
push
divb
loop
pop
cld
mov
mov
push
cld
add
repnz
mov
stos
fldt
in
jb
sub
test
test
int3
ret
rorl
icebp
mov
sub
mov
in
and
lcall
xchg
or
sub
jnp
dec
clc
jae
sbb
insl
mov
ja
jnp
jnp
xchg
out
popa
inc
pop
xor
cmp
pop
pop
stc
push
push
add
xorl
in
or
insb
jl
mov
push
sbb
cmp
or
and
dec
div
in
jne
dec
fcomps
call
sub
cmpsl
stos
pop
push
lods
push
lods
push
xchg
fcoms
into
and
mov
pop
repz
enter
dec
sbb
xor
mov
push
add
in
out
bnd
les
sub
jno
xlat
or
ljmp
push
icebp
lds
adc
mov
mov
sub
jle
jp
xlat
push
lret
mov
repnz
test
pop
push
dec
pop
dec
mov
xchg
call
mov
xor
js
fistl
aad
push
mov
cli
subb
sub
sub
test
inc
decb
fstpl
leave
mov
outsb
inc
pop
lahf
mov
mov
add
fisubs
push
andl
mov
pop
jbe
mov
aam
or
adc
addb
rclb
sub
xor
mov
push
push
jge
lds
inc
leave
mov
mov
sub
dec
jbe
movsl
xchg
sbb
stc
mov
fst
sub
fnstcw
fiadds
lret
cli
jle
sarl
mov
inc
je
adc
bswap
les
out
xchg
pop
jp
xor
sbb
push
outsl
clc
mov
adc
aaa
pop
dec
in
inc
and
jae
andb
add
clc
mov
and
jb
ja
sub
adcb
test
call
rorb
sahf
mov
out
call
push
rcll
xor
lds
std
mov
or
push
push
fcompl
jmp
dec
cmp
xor
dec
in
xchg
test
lea
jns
push
scas
insl
ss
mov
push
jle
out
mov
data16
inc
and
mov
xchg
cmp
cmpsb
int3
iret
lea
notb
ficompl
out
jge
adc
outsl
ds
out
adc
mov
and
add
into
jp
test
inc
mov
das
inc
lock
cwtl
aaa
push
mov
scas
xchg
sub
sbb
fdivr
add
push
xchg
lcall
jne
mov
pop
addr16
sbb
or
insl
gs
jb
mov
shll
cs
repnz
jge
pop
hlt
arpl
dec
test
push
xor
shlb
and
mov
popa
inc
das
mov
jo
test
pop
test
inc
jbe
mov
cltd
jns
aaa
movsb
mov
add
stos
scas
insl
or
inc
frstor
jecxz
aaa
add
and
jbe
mov
repnz
lods
orl
imul
std
cmp
xchg
inc
test
aam
mov
pop
in
mov
and
xlat
add
or
jae
pop
pop
push
std
dec
jge
cmp
mov
mov
loope
cmp
mov
dec
and
cmp
in
sub
add
pop
mov
xorb
stos
test
sahf
pop
fwait
inc
xchg
jl
push
or
cs
lret
sbb
stos
inc
divb
or
jb
cmc
call
sbb
dec
gs
div
adc
dec
xor
xchg
push
and
shll
mov
ljmp
shll
rolb
stc
mov
rol
dec
mov
mov
jb
data16
fidivrs
imul
icebp
jns
hlt
cwtl
sbb
jle
pop
sub
adc
push
insb
sub
push
push
mov
inc
lea
mov
push
ss
or
repz
daa
and
or
xchg
aaa
in
dec
pusha
nop
adc
gs
jnp
ds
je
leave
out
sub
lods
sbb
int3
xchg
xor
xor
xchg
sbb
mov
add
pop
sbb
std
movsb
cld
xchg
lods
xchg
push
icebp
jmp
loopne
pop
outsb
push
sti
sahf
jle
add
and
dec
movsl
sub
mov
xor
xor
rolb
enter
fadds
push
pusha
cmp
out
push
int
adc
sbb
dec
and
lcall
dec
push
int
rcl
adc
mov
jl
lahf
es
push
jo
mov
or
ret
sub
rorl
add
mov
xchg
pop
fmul
mov
xchg
fidivrs
aam
cmp
leave
jecxz
xchg
xchg
pushf
mov
cmc
xchg
adc
enter
adc
outsl
sub
jle
cmpsl
int3
inc
mov
xlat
dec
lock
mov
pop
lret
rol
pop
fsubs
adc
adc
inc
bound
leave
add
pusha
mov
jns
movsb
jecxz
pop
jb
shlb
adc
fadds
mov
pop
rclb
pop
or
push
jo
aam
icebp
imul
stos
lods
inc
shlb
dec
sbbl
xchg
xchg
push
std
sub
adc
test
fistps
sbb
push
jmp
push
or
icebp
and
fildll
je
imul
rorb
jl
push
sub
pop
jns
div
stos
das
push
leave
sbb
push
out
jl
add
popf
xchg
push
addb
or
lea
mov
stc
pop
fucomip
mov
sbb
stos
jne
les
inc
rorb
lcall
lds
cs
jp
stos
push
and
test
jnp
jbe
nop
pop
mov
in
movsl
cld
push
xchg
insb
jo
xor
mov
int3
sub
enter
arpl
push
aas
add
int
push
dec
lds
push
iret
sub
inc
iret
adc
push
dec
inc
dec
push
fwait
xchg
insl
rorl
mov
fldenv
lock
or
jecxz
imul
ret
ja
imul
mov
sub
sarb
int
push
and
testb
jl
stos
mov
loop
inc
sbb
sbb
xor
xchg
mov
sub
jnp
jae
add
mov
xor
or
inc
icebp
in
xor
jno
jno
mov
orb
cmp
or
add
sub
xchg
xor
loopne
leave
push
pop
add
stc
in
xchg
mov
daa
xchg
sub
test
jmp
test
hlt
out
mov
stos
xchg
or
repnz
lds
pop
fwait
xor
insb
fs
das
sti
adc
xchg
sarl
popf
xchg
fiaddl
lock
aad
xchg
cmp
adc
mov
lcall
mov
pop
mov
stos
rcrb
lds
sbb
and
mov
orl
les
mov
repnz
xor
cmp
pop
inc
out
test
negl
inc
repnz
inc
xchg
ret
add
pop
adc
cmp
aas
fldl
xor
push
cmc
sub
cwtl
jecxz
or
in
mov
and
test
jecxz
out
push
pop
jmp
push
and
cld
pop
mov
loopne
or
add
test
sbb
out
lods
adc
mov
outsl
jmp
jns
push
negb
int
cmc
test
rorl
sub
cltd
sbb
push
sbb
mov
inc
cmp
mov
insl
int3
mov
cmc
scas
fwait
pusha
xchg
sub
fcoms
and
push
das
push
daa
mov
cld
loopne
js
inc
out
test
repz
inc
push
push
stos
jge
scas
xor
sbb
or
sbb
pop
pop
xchg
dec
cwtl
ljmp
cmp
jp
fildll
in
cmpsl
mov
push
jno
out
or
mov
bswap
inc
xchg
mov
sahf
aad
mov
jns
mov
mov
cmc
sbb
push
dec
bound
push
pop
and
ret
xchg
mov
aam
ret
adc
mov
inc
andb
jb
ja
popa
inc
push
mov
data16
enter
cmp
das
and
xchg
rcr
mov
and
clc
pop
jmp
pop
xchg
daa
mov
xchg
mov
int3
adc
out
cli
pop
into
stos
stos
int3
xchg
js
xor
adc
pop
or
dec
fsubrl
aas
jne
push
stos
pop
outsl
jbe
pusha
int
or
dec
jecxz
push
cld
lret
sbb
adcb
push
push
pop
xor
loopne
sti
pusha
fdivs
cwtd
mov
dec
or
outsb
inc
xor
adc
fnsave
scas
lss
or
pop
scas
fwait
cs
and
jae
add
mov
out
paddusw
mov
test
mov
adc
push
mov
dec
aas
sbb
aaa
pop
xchg
cld
bound
push
fmull
mov
xor
mov
mov
mov
imulb
ret
sahf
stos
push
cmp
xchg
jne
push
or
repnz
mov
inc
mov
or
call
mov
xlat
adc
pushf
cmpb
xor
mov
std
lods
xchg
outsb
push
sbb
aam
fcoml
add
or
jns
cmpsl
mov
aaa
mov
pop
scas
lret
push
push
mov
and
lcall
stc
fimuls
stc
rcl
or
or
es
cmpsb
xchg
addr16
push
pushf
jl
cmp
push
sub
cmp
mov
xlat
sub
int
pop
push
lret
daa
testb
data16
push
and
shrb
cmp
and
push
pop
stos
test
mov
sbb
in
call
cli
mov
mov
movsb
dec
mov
inc
dec
imul
pop
add
aaa
xlat
lret
fnstsw
mov
xchg
inc
xchg
sub
sbb
movsl
push
roll
movsb
loop
sub
data16
in
aad
pop
push
jbe
mov
adc
inc
jne
into
loope
mov
dec
jo
in
sti
stos
fdivl
jp
push
mov
mov
mov
mov
into
jb
sub
imulb
sub
jnp
dec
dec
fldcw
test
aad
mov
fisubl
mov
nop
ret
hlt
mov
add
cld
ret
push
jbe
push
dec
xchg
sbb
scas
cmp
movsb
enter
and
and
mov
and
daa
or
divb
pop
dec
push
mov
imul
les
test
xchg
mov
jne
clc
das
sbb
inc
stos
iret
mov
push
add
pop
sbb
and
jl
xchg
dec
rcrb
adc
loope
orb
lds
rcr
gs
mov
sbb
jne
ja
test
inc
ljmp
out
pop
ret
fbstp
sbb
ljmp
inc
dec
add
push
mov
ret
cmp
jbe
or
mov
or
push
mov
and
dec
out
adc
mov
cmp
or
jb
jns
cmp
loop
cmp
pusha
mov
in
sahf
stos
mov
add
dec
mov
outsl
dec
mov
adc
push
mov
and
arpl
popl
nop
xor
int
fsub
cli
incl
mov
loope
call
in
jnp
sub
call
bsf
push
xor
cld
mov
fsubl
test
dec
jle
mov
xchg
or
or
inc
mov
shl
mov
clc
mov
cmp
push
lcall
lods
xlat
daa
addl
mov
jae
push
stc
in
mov
or
fildl
push
lods
xchg
push
add
movsb
mov
add
jg
cmpsl
mov
es
les
add
jle
out
ret
insl
lahf
xchg
les
and
fimuls
pop
mov
adc
or
pop
repz
sbb
cmp
mov
jae
mov
jno
jbe
jg
rorb
in
in
sbb
orb
xor
cmp
scas
pop
add
xor
xlat
xchg
decb
adcb
in
sub
xchg
mov
fsubrp
push
add
sub
cmpsl
push
addb
insl
int
sub
cmp
adc
mov
sub
loope
jg
jle,pn
sbb
mov
jmp
aam
or
fidivs
push
jae
ja
hlt
cmpsl
loopne
pop
int
hlt
xor
and
pop
fnsave
outsb
sti
shll
cmp
sbb
xchg
jg
addl
xchg
insb
ffreep
stos
icebp
out
hlt
dec
adc
ds
dec
or
xchg
sub
sbb
out
dec
jp
jmp
mov
inc
sbb
std
pop
xor
int3
mov
addb
push
lods
repz
and
in
stc
xorps
fst
or
push
jo
jae
stc
mov
mov
insb
nop
mov
roll
xchg
add
mov
lods
jb
addr16
imul
mov
jmp
shll
dec
icebp
rclb
pop
daa
in
add
xlat
sub
ja
shlb
mov
and
push
xlat
mov
popa
jne
fmull
fnstenv
inc
insb
shrb
out
adc
push
push
test
lret
and
aas
inc
push
sbb
stos
adc
mov
xchg
xchg
pusha
test
mov
cmpb
cmpsl
cld
outsl
pop
jnp
arpl
push
loop
cmovns
pop
pop
fsts
inc
xchg
xor
push
cli
in
cmp
and
cltd
xchg
fldcw
jo
fidivrl
fldl2e
mov
andl
mov
lds
sbb
mov
pop
xor
jbe
push
push
xor
pushf
mov
jge
clc
lret
jb
ljmp
mov
xchg
imul
cmpsb
sbb
lcall
enter
movb
aad
pop
mov
push
out
or
ret
jle
cmpsb
addl
xchg
aad
jno
cmp
push
repnz
ja
mov
add
fldl
push
jmp
cmpsb
mov
rclb
jno
adc
cmc
jmp
das
pop
pop
pushf
lds
sarb
rclb
dec
sbb
out
mov
sub
jl
sbb
xchg
cld
popf
adc
in
jns
lock
adc
sbb
cmpsb
mov
xchg
lret
mov
aaa
push
sub
shl
pop
gs
xchg
cmpsb
dec
popa
cmp
and
add
popa
out
jle
mov
iret
insl
xlat
and
outsl
nop
mov
mov
int3
or
mov
sub
pop
pop
cmp
dec
and
in
arpl
adc
aas
lds
mov
lods
insb
adc
adc
nop
les
fmulp
xchg
jle
fdivr
xchg
mov
in
dec
mov
shll
push
mov
push
mov
loope
out
stos
aad
cld
jge
cld
in
inc
add
push
xor
jle
jge
xor
mov
pop
repnz
and
dec
js
loopne
lcall
push
xor
cmp
mov
je
add
pop
inc
push
add
pushf
popa
aas
ret
adc
cs
test
cmp
mov
jmp
pop
xchg
push
scas
inc
mov
out
or
pop
shll
sbb
cwtl
mov
imul
mov
fsubs
leave
out
test
lods
leave
and
inc
cmc
add
pushf
push
mov
add
cmp
or
xlat
cmp
mov
out
adcb
mov
andnps
fadds
inc
push
sbb
dec
fwait
stos
xchg
stos
mov
js
pop
mov
mov
push
pop
xor
jnp
dec
stos
inc
cld
sbbb
push
ss
xor
pop
adc
xor
and
popl
arpl
nop
cmp
int
mov
xor
xchg
mov
fiaddl
fnstsw
lret
mov
sbb
std
outsl
adc
jbe
pop
xlat
xchg
out
ret
mov
add
orl
fildl
or
les
leave
mov
jmp
mov
mov
ret
pop
ficompl
ss
mov
movsb
xchg
inc
jle
lret
nop
mov
stc
push
aaa
pusha
xchg
jno
jmp
rcll
mov
je
push
out
and
inc
ret
ret
cmp
mov
loopne
jo
icebp
sahf
rep
mov
into
jle
aam
adc
aaa
cmp
push
cltd
dec
fldl
xor
or
mov
sbb
sahf
sbb
cltd
hlt
sub
jmp
rol
pop
and
push
mov
lcall
add
push
mov
ss
add
fwait
daa
dec
push
loopne,pt
nop
jb
cmp
int3
add
std
mov
mov
cwtl
jmp
lret
mov
mov
cmpsb
add
cmpsb
xchg
and
or
imul
xchg
iret
popl
and
stc
mov
imul
sub
hlt
ss
cmp
or
in
add
pop
inc
repnz
jp
lods
cmp
mov
daa
xlat
mov
jo
jo
push
sbb
loop
out
in
inc
rorb
add
ret
sti
lds
mov
filds
push
jp
shr
adc
inc
inc
sub
dec
call
test
in
or
push
cli
int3
inc
push
jae
cmp
jo
orl
sbb
mov
sub
mov
fldl
push
sbbb
aas
push
ret
jne
hlt
and
cltd
xchg
push
fistps
add
sub
lret
sahf
cmp
cld
fcoms
ss
mov
icebp
add
jl
mov
jb
movsl
in
int
push
aas
sub
add
mov
sbb
mov
lock
push
lcall
out
push
int
mov
loopne
mov
cwtl
jbe
cmc
inc
or
xchg
enter
lea
lds
fstpl
mov
lret
mov
dec
xor
rcrl
imul
leave
clc
dec
aaa
lret
xchg
scas
xor
movsl
in
mov
and
notb
jo
pop
popf
xor
jecxz
add
cs
adc
insb
pushf
enter
repnz
inc
sub
pushf
aaa
inc
xorl
test
dec
dec
out
jmp
lock
jle
cmp
dec
repnz
cmp
mov
jmp
ficoml
in
pop
cmp
cmp
in
aaa
cmp
addr16
inc
pop
addb
lret
imul
mov
mov
fldenv
insb
ja
int
repz
inc
xlat
pop
cwtl
mov
push
cmp
cmp
pusha
mov
dec
fldt
daa
dec
cmp
int3
xorb
test
mov
mov
sarb
jl
push
ret
fistps
or
sti
push
add
dec
pop
mov
mov
jae
dec
mov
iret
mov
sbb
jnp
lods
orb
mov
fs
and
outsl
mov
ficoms
or
in
mov
pusha
std
imul
ljmp
dec
cmpsl
dec
sub
lret
sti
lods
out
out
enter
pop
jo
pop
xchg
push
jb
cli
pop
popl
sbbl
mov
loopne
data16
pop
js
jle
addr16
into
pop
decb
jae
out
add
repnz
int
movsl
out
xchg
lret
mov
or
dec
push
lea
imul
add
jbe
xor
cmc
mov
push
xor
sahf
jbe
mov
xor
into
lea
stos
mov
sti
adc
sahf
xor
jo
js
mov
aas
xchg
pop
daa
sub
inc
dec
xchg
add
cmc
repnz
stos
bound
rorl
jae
sub
sub
sbb
lret
push
add
test
xchg
add
insl
xor
popa
lods
loop
lret
jmp
ljmp
jl
xchg
pusha
xor
dec
jns
push
hlt
jl
xor
data16
popf
pusha
jbe
hlt
lret
negl
cwtl
mov
pop
pop
test
cmp
xor
imul
add
adc
mov
sub
dec
addr16
add
pop
les
movb
sub
sar
test
fisubs
and
cli
push
andl
adc
xchg
roll
cwtl
push
pop
lods
sub
clc
mov
popa
xchg
and
inc
xchg
add
dec
addr16
cli
dec
cmp
cs
pop
ret
in
pop
xchg
and
sbb
xchg
mov
aad
call
lcall
lcall
dec
cmp
lret
cmp
and
and
cmp
cmp
aad
inc
fsubrl
lods
lret
mov
scas
xchg
ret
xor
negb
cmp
inc
or
or
pusha
inc
cmovp
mov
lahf
add
imul
adc
add
cli
xchg
cmp
xlat
adc
lret
cmpl
adc
stos
cmp
push
mov
inc
add
data16
clc
sbb
xchg
call
and
lods
addr16
cmpsb
sbb
loop
mov
sbb
and
lret
popa
subb
mov
jns
push
add
out
test
mov
jmp
lret
mov
mov
sbb
lcall
repnz
mov
mov
sub
das
clc
incb
jne
inc
mov
jno
hlt
cmc
aam
int
inc
es
push
or
nop
sbb
sbb
jecxz
inc
mov
das
das
lock
lret
mov
inc
leave
jmp
iret
xchg
xchg
cmp
jl
insb
and
cmpsb
arpl
and
add
xor
mov
sub
fdivrl
inc
shrl
sub
clc
cmp
packssdw
cmp
dec
inc
adc
loopne
push
test
aaa
jle
stos
aam
ds
push
or
ds
and
scas
dec
adc
and
xchg
sub
add
insb
mov
jmp
loope
mov
cmp
inc
call
dec
jae
xchg
jns
dec
fbstp
mov
lock
out
xor
adc
mov
repz
add
pop
or
adc
xchg
xor
out
mov
dec
mov
cmp
jge,pn
cmp
data16
adc
xor
add
push
dec
mov
adc
nop
imul
pop
lock
jg
adc
adc
cs
cmpsb
and
lret
and
or
out
mov
add
sahf
push
mov
inc
push
aam
dec
lods
enter
cs
pusha
xchg
mov
inc
nop
cmpsl
push
loope
mov
aas
mov
push
negl
nop
scas
mull
mov
shl
push
adc
mov
fistl
cmpsl
add
mov
or
jge
xor
sub
clc
fwait
inc
mov
test
pop
mov
adc
xor
cmc
adc
int
and
mov
push
ret
jns
stc
push
sti
jecxz
xor
xchg
lahf
shrb
sbb
jns
lods
xchg
mov
pop
pop
pop
push
cwtl
push
daa
nop
xor
inc
xchg
push
and
jmp
inc
and
fidivrs
mov
daa
imulb
scas
push
xlat
push
mov
mov
sbb
in
sub
push
or
outsl
stos
jecxz
mov
and
xor
fs
push
jbe
js
js
imul
add
mov
xchg
push
inc
sbb
jmp
and
pop
xor
mov
or
mov
push
lds
pop
dec
leave
pop
pop
mov
mov
test
xchg
xor
cld
rcr
lds
int
or
gs
dec
or
mov
sub
cli
push
mov
xor
mov
mov
adc
or
out
sti
loopne
cs
lcall
shll
dec
popf
mov
push
dec
testb
insb
jl
push
in
mov
jbe
xchg
sub
cmc
lahf
push
in
insl
mov
les
daa
out
push
cwtl
add
or
insb
pop
shlb
mov
jmp
or
xchg
dec
xchg
xchg
in
push
lahf
sbb
out
dec
sub
sub
popf
ror
xchg
imul
lcall
push
and
mov
push
in
xor
ja
add
mov
pop
pusha
fs
fdivrl
push
cmp
adc
sub
and
push
sbb
je
cli
stc
aaa
mov
lds
loopne
bound
jb
in
out
xchg
stos
out
lret
pop
dec
repnz
cmc
enter
pop
filds
sbb
xchg
rcl
xor
jmp
jne
mov
pop
jge
inc
xchg
sub
lret
and
pop
jo
pop
inc
aas
aad
and
test
sahf
lahf
aaa
call
mov
enter
fucomp
scas
and
jecxz
pop
imul
imul
jb
out
loope
fdivr
add
scas
mov
aas
scas
mov
dec
je
test
pushf
in
je
xlat
push
inc
outsb
nop
and
shll
dec
add
aam
and
outsl
mov
jne
pop
dec
mov
xchg
jmp
push
push
fstps
add
or
shrb
das
clc
xor
mov
clc
jecxz
dec
mov
iret
xor
jle
mov
mov
xchg
mov
popa
pop
xchg
orl
sahf
stos
not
xor
mov
in
mov
inc
loop
fidivrl
imul
jae
jecxz
cmpb
jmp
sbb
xchg
jne
add
xchg
gs
jge
clc
mov
xchg
imul
cmpl
lods
adc
push
sahf
mov
lcall
mov
sub
lcall
pop
sbb
jae
jle
mov
dec
gs
sarl
inc
pop
push
pop
lret
or
faddl
pop
adc
or
in
inc
and
sub
nop
dec
push
push
dec
shll
pusha
add
mov
jge
popf
xchg
cmp
sahf
and
enter
mov
fdivrs
orb
mov
icebp
pusha
mov
out
sbb
scas
xchg
xor
mov
inc
xchg
das
mov
and
push
out
push
add
into
inc
jb
push
lret
sahf
jl
fstl
scas
imul
cmpsl
jbe
pop
cmc
xchg
iret
mov
dec
fwait
es
jge
push
dec
xlat
aad
jle
push
int
incl
fptan
dec
dec
imul
xchg
adc
dec
lahf
imul
mov
push
fwait
xchg
xor
sub
popf
shll
iret
in
adc
push
icebp
jne
adc
mov
pop
rorl
cmp
repz
leave
cmp
push
xchg
scas
ds
bound
sbb
xchg
sahf
xchg
lcall
and
xor
sub
ffree
hlt
js
js
dec
cwtl
jmp
mov
push
adc
cld
xchg
jno
data16
cwtl
rolb
sbb
push
dec
xchg
or
ret
xor
lret
repz
sarb
dec
push
pop
xlat
scas
repz
pop
sbb
mov
mov
repnz
push
lods
cwtl
adc
mov
xlat
sub
push
mov
xlat
mov
mov
mov
inc
insl
stc
jo
daa
sti
lea
lds
fimuls
jns
iret
jecxz
fwait
ret
daa
sbb
in
pop
pop
mov
repz
mov
cltd
xor
mov
sub
cli
imul
dec
sub
mov
mov
lea
icebp
xchg
addr16
clc
mov
rcrb
or
lea
aad
pop
test
push
sub
push
icebp
std
adcl
xchg
jmp
xchg
mov
hlt
cmp
inc
arpl
push
int
or
sbb
not
or
xor
mov
nop
shlb
test
push
fwait
clc
jne
decb
or
ficoms
inc
push
nop
ss
jge
mov
leave
xchg
pop
popa
shll
adc
fnstsw
inc
rclb
inc
jnp
cmp
push
sbb
cmp
ret
sbb
fdivs
mov
jns
lret
pusha
aas
or
jmp
xor
hlt
push
test
dec
fildl
pop
ret
or
test
push
cmp
cmp
test
jecxz
aam
pop
mov
das
inc
mov
sti
test
adcb
xor
push
xorl
adc
xchg
bound
sti
inc
sti
push
or
cmp
mov
inc
and
lret
lret
lock
cli
leave
add
call
insl
sbb
dec
dec
and
roll
movsb
fdivrs
add
or
mov
sbb
lahf
imul
iret
jno
out
xor
pop
mov
movsl
dec
ja
cmp
lea
jge
test
stos
leave
jns
mov
popf
mov
or
sbb
jb
ss
or
xor
cltd
iret
xorl
out
and
mov
fdivl
cltd
clc
sbb
cmpsl
inc
lods
arpl
and
pop
lret
xchg
or
loope
xchg
mov
ficoms
dec
testl
sbb
push
mov
push
stos
push
xchg
divl
jge
fimull
lods
xor
inc
fcomps
dec
out
les
dec
mov
push
push
sub
lods
test
mov
mov
xchg
sub
lcall
cmp
loop
mov
and
jno
add
ds
xor
je
pop
lock
mov
xor
fwait
or
cmp
jno
inc
adc
insb
movsl
dec
mov
pop
push
aaa
fsubl
cmpsl
aam
aas
gs
fnstenv
in
mov
sbb
daa
sti
xchg
jge
xchg
pushf
leave
push
cmp
cltd
int3
stos
in
scas
add
xchg
cmpsb
cmove
push
loopne
inc
adc
leave
lock
mov
xor
or
cmp
movsl
jmp
add
xchg
jg
imul
aas
jmp
mov
or
or
xchg
or
repnz
je
fnstcw
cwtl
xchg
dec
and
pop
pop
adc
inc
and
add
outsb
andl
dec
adc
loope
ja
dec
inc
jne
add
aaa
push
pushf
ljmp
fsubrl
test
imul
mov
jno
mov
mov
sti
mov
xor
out
movsl
loop
insl
stos
mov
add
pop
test
mov
add
xor
fcomps
jg
jg
or
mov
stos
mov
xor
sbb
jecxz
pop
int
notb
in
mov
ret
dec
mov
adc
xchg
mov
sub
in
lret
js
lock
or
mov
fwait
inc
sbb
dec
pop
movl
or
cmpsl
cwtl
mov
cmp
je
mov
scas
jecxz
and
pop
or
push
imul
icebp
std
pop
or
cwtl
popf
and
fisubrl
in
ss
pop
aam
nop
xor
pop
push
cmc
sahf
jecxz
sub
ficoml
xor
pop
addr16
ret
icebp
shll
cmpsb
fs
xchg
sbb
inc
sahf
cmp
mov
cltd
adc
idivl
jle
cmc
pop
xlat
fistps
std
mov
push
pop
aaa
push
outsb
sbb
outsb
dec
mov
int3
xor
pop
add
dec
mov
jmp
scas
jge
data16
data16
and
jle
lods
xchg
inc
mov
pushf
mov
orb
arpl
out
pop
mov
xchg
xchg
pop
popa
lahf
in
jg
push
push
clc
jecxz
cmpsb
repnz
mov
push
push
jmp
or
arpl
add
pusha
loope
push
jno
sbb
mov
fnsave
scas
xlat
in
adc
push
push
adc
arpl
rorb
cmp
cmp
dec
aaa
out
aas
cli
mov
and
add
aaa
cmpl
xor
dec
ljmp
push
divl
cmp
xor
aas
stos
clc
ss
arpl
xor
jnp
sub
je
cmp
dec
loope
or
add
push
enter
mov
add
xor
sub
fisubrl
mov
dec
xorl
xor
leave
push
pop
les
xchg
jbe
adc
adc
push
xor
sbb
cmp
pop
movsl
imul
mov
mov
mov
xchg
in
push
xlat
cltd
sbb
adc
push
les
dec
pop
jecxz
push
std
pop
and
inc
mov
iret
int
push
adc
es
mov
data16
lcall
and
fstpt
in
adc
ss
jae
push
pop
outsl
lods
xchg
mov
mov
fwait
push
pop
les
addl
push
jp
sbb
in
xchg
lret
int3
outsl
imul
leave
sbb
adc
inc
dec
adc
push
shrb
cli
movsl
jns
lods
shrl
push
jnp
push
add
xor
sbb
test
in
and
les
pusha
cmp
out
or
mov
ja
imul
loopne
sub
inc
stos
xchg
aas
decb
into
stc
fstps
ja
xchg
imul
out
pop
jecxz
fst
inc
je
or
loopne
or
push
imul
fcomip
jle
mov
lock
ret
cs
loopne
gs
xlat
pushf
popf
mov
xchg
ds
jno
push
rcll
push
sbb
inc
mov
insb
inc
dec
cld
sub
dec
lcall
jnp
aas
rcl
sbb
aaa
cmp
mov
pop
daa
aas
lods
mov
imul
or
cmp
lea
lcall
pop
sub
insb
mov
lret
cwtl
sbb
imul
movsl
and
lods
add
shll
mov
mov
mov
dec
xchg
into
sub
or
in
fldenv
in
mov
lea
mov
push
out
cmp
sub
addr16
iret
sbb
mov
jmp
push
mov
cmp
add
das
xchg
cmp
cmp
mov
std
fcoml
dec
jae
bswap
mov
mov
push
loop
ljmp
bound
jecxz
sub
dec
ficoml
cwtl
cmpsb
or
ljmp
test
leave
xor
inc
adcb
sbb
push
ljmp
add
movsl
sahf
cmp
shl
gs
scas
stos
or
rcrl
add
cs
xor
cmp
push
cmp
xorl
or
arpl
ljmp
loop
negb
cmpb
shlb
nop
sub
stos
jns
add
repz
lret
xchg
hlt
or
and
dec
js
mov
sub
xchg
jae
mov
push
cmpl
movsb
imul
sarl
sbb
lea
enter
and
idivb
aad
paddusb
repnz
mov
cmpsl
jb
and
dec
push
pushl
inc
leave
pop
lret
dec
scas
enter
inc
shrl
sub
push
outsb
push
test
int
xorl
dec
mov
negl
flds
push
fwait
push
test
test
jne
jmp
pop
je
and
mov
add
ljmp
inc
mov
or
mov
push
shlb
pop
je
xor
xor
xor
popf
in
dec
faddl
pop
cmp
sbb
lcall
fcoms
repz
lock
adc
scas
mov
pop
fmull
push
xchg
test
int3
cld
ret
or
mov
sbb
out
insb
insl
lds
adc
and
xchg
adc
scas
jecxz
insb
xchg
add
inc
bound
loopne
jg
push
popf
stos
sahf
pop
mov
movsb
pop
cmpsl
adc
stos
cmp
lock
lock
addr16
mov
rorb
mov
pop
add
cli
loopne
bound
fistpl
shlb
call
movsl
movl
cli
pop
clc
or
pop
insb
push
sub
movsb
mov
jge
enter
loopne
flds
or
into
push
jge
je
addr16
inc
insl
int
xorb
push
cmpl
dec
shrl
fwait
cmp
mov
out
dec
lods
jp
shrb
jle
mov
std
jecxz
jae
movsb
xor
fistl
sub
or
jmp
inc
rorl
fistl
mov
xchg
mov
jmp
mov
sub
les
in
mov
notb
mov
jecxz
pusha
or
dec
cmp
sub
cmp
mov
or
sbb
lahf
rolb
int
or
fstpl
dec
dec
dec
outsl
pop
xor
inc
jns
inc
nop
jmp
jo
add
cld
pop
dec
push
out
mov
stos
pushf
push
jl
dec
mov
gs
outsl
xchg
popf
ss
int3
xor
add
push
pushf
jmp
lods
dec
jne
cmp
hlt
dec
mov
enter
out
mov
dec
push
jp
lcall
add
in
inc
pop
fbstp
shll
sbb
inc
ja
xor
leave
stos
lahf
addr16
xor
ret
sar
sti
jecxz
nop
push
add
in
pusha
mov
mov
xor
ljmp
lret
jmp
sarl
inc
aad
cmp
nop
push
das
inc
push
mov
stos
jbe
stos
sbb
cmp
es
sbb
shlb
movsb
jp
adc
clc
dec
sub
inc
mov
out
and
mov
xlat
xchg
xor
int
test
ja
sbb
ja
sub
cld
xchg
xchg
add
jne
movsl
repnz
pusha
mov
subl
fdivrl
push
outsl
in
or
xor
pop
xorl
jl
jb
jns
cmp
sbb
cmpsb
and
aad
inc
scas
aam
inc
jae
adc
mov
adc
mov
mov
mov
iret
jb
insl
pop
xor
xchg
dec
fs
inc
adcb
into
xchg
enter
jbe
push
mov
movsb
sti
cmp
push
mov
lahf
dec
add
shrb
pop
pop
mov
icebp
xor
push
pop
aas
repz
xor
jo
iret
push
cmp
pusha
loop
cmpsl
repnz
lahf
pop
rcrl
jnp
push
mov
pop
mov
je
pop
fwait
das
mov
cmpb
cltd
inc
jl
push
shrb
jge
xor
mov
mov
adc
inc
mov
sub
jle
or
mov
daa
arpl
and
jns
aas
push
inc
aas
ss
or
in
shll
pop
imul
push
jmp
inc
push
test
jbe,pn
daa
cmp
pop
adc
mov
pop
add
es
ret
mov
adc
je
mov
cmp
dec
push
sti
cli
call
xor
mov
dec
loopne,pt
xchg
add
lds
test
xor
sub
mov
add
mov
incl
jbe
aas
jnp
xchg
cld
sbb
push
sub
adc
and
addr16
dec
rol
dec
adcl
jecxz
hlt
jle
loop
in
adc
cltd
cmp
jmp
adc
add
ret
getsec
scas
mov
and
aaa
clc
push
lods
add
mov
std
jmp
popf
pop
dec
repnz
xchg
fsubp
scas
xchg
iret
pushl
add
ljmp
sbb
ljmp
mov
xlat
rol
xchg
mov
inc
dec
jp
dec
sbb
cwtl
ret
mov
negb
jb
dec
shll
int3
in
mov
roll
mov
imul
lds
push
mov
in
outsb
repnz
test
dec
ret
pop
inc
cmp
cmp
jb
pop
sbb
inc
imul
sbb
gs
dec
jg
insb
js
in
or
test
filds
fldenv
jp
or
add
mov
lods
out
out
daa
mov
jmp
xchg
jns
das
pop
jb
xchg
lret
loop
shll
mov
lea
adc
inc
addb
cmp
adc
shlb
xchg
loopne
shlb
in
cmpsb
es
movb
fdivs
cltd
pop
xor
xchg
dec
push
mov
lock
xlat
ja
arpl
lret
fxch
in
out
sbb
cmp
xor
mov
dec
mov
push
mov
pushf
sub
aas
outsb
xlat
xchg
or
inc
pusha
dec
mov
iret
pop
sbb
rorb
ret
pop
add
jne
iret
sbb
negb
inc
fwait
das
imul
xlat
in
xor
lret
and
imull
cmp
xchg
outsl
or
js
int
idivl
mov
jnp
and
fistl
cs
pop
xchg
insb
bound
lret
and
lea
mov
mov
sti
jl
loopne
arpl
mov
sub
shlb
aas
mov
cmp
das
xchg
inc
inc
jb
sbb
cmp
out
mov
in
add
mov
js
rorl
dec
or
inc
fwait
mov
dec
imul
mov
test
fldcw
loopne
sub
fcomps
lock
pop
test
xchg
jo
arpl
sub
xchg
push
jnp
mov
jno
test
xchg
andl
insl
push
sub
icebp
pop
popa
daa
cmpsb
fdiv
and
mov
out
mov
pop
sar
rcl
movl
mov
dec
cs
int3
xchg
int
mov
push
add
inc
xchg
jo
jne
xchg
jns
cmpsl
mov
xor
jo
cmp
push
xchg
mov
lock
jecxz
cmc
sub
mov
fimuls
sahf
push
or
popf
inc
mov
stc
add
scas
or
pop
jnp
jge
out
cmp
std
fimull
imul
inc
jg
pusha
dec
or
ds
movsl
sbb
int3
push
ss
xchg
mov
loopne
cmp
dec
push
lock
mov
addl
subb
and
out
test
adc
rcrb
lret
pop
add
jl
cmp
cmp
int3
pushf
lret
cmpsb
loop
lds
lds
adc
sbb
aas
and
out
push
aaa
jb
mov
clc
xchg
or
popf
pop
test
in
movsb
aad
cmpsb
xchg
inc
test
mov
fwait
out
test
jle
add
outsl
jle
loope
repnz
jo
enter
xchg
jp
aam
fildl
jbe
movsb
movb
andl
push
test
inc
mov
jbe
jle
bound
jno
push
out
inc
add
xchg
mov
mov
leave
push
mov
daa
shlb
fnstsw
dec
ss
cmpsl
push
push
mov
add
enter
bound
dec
clc
call
insb
arpl
sahf
jo
sbb
mov
and
stc
add
nop
pop
in
pop
loopne
loopne
pop
cltd
cmp
add
fldcw
lea
mov
jo
mov
fwait
sbb
jae
xor
or
jo
cmp
lcall
mov
jno
addl
or
jp
out
lods
test
outsb
dec
inc
sti
data16
daa
aam
mov
gs
push
outsl
cltd
xchg
jns
shrl
sarl
pop
ffree
add
or
lods
les
fldt
lahf
cmpb
mov
or
pop
das
stos
call
into
in
and
push
cmp
hlt
push
mov
mov
movb
pop
jge
aas
lock
outsb
xor
ss
sti
mov
je
mov
mov
adc
sub
pop
pop
jecxz
sub
arpl
nopl
dec
ss
hlt
lahf
cli
ret
mov
add
and
mov
into
pop
scas
jp
mov
sti
cmpsb
ret
popa
adc
push
out
or
test
gs
fistl
je
repnz
jno
out
mov
cmp
adc
mov
cmp
rcr
movsb
scas
mov
inc
loop
imul
xchg
gs
stos
inc
out
dec
notb
and
jnp
jae
mov
or
cltd
cmp
imul
mov
fsubrl
mov
push
fadd
test
dec
push
dec
int
dec
in
test
cmp
inc
lret
dec
dec
gs
lcall
dec
insb
or
sbb
adc
xchg
into
jns
mov
lods
sbb
out
adc
and
insl
dec
popa
and
push
setg
add
push
inc
jp
hlt
xlat
pusha
sbb
mov
adc
mov
inc
lds
push
mov
movsl
rolb
in
cltd
rcr
loopne
ja
inc
pusha
or
sub
imull
popa
sbb
popf
mov
mov
call
int
fninit
and
stos
es
decl
into
sarb
stc
mov
xor
out
push
pop
adc
pop
ss
in
sbb
outsl
sbb
jecxz
jmp
inc
adc
cltd
addr16
int
or
js
and
adc
ds
pop
loope
jo
jl
imul
in
dec
mov
pop
cwtl
repz
mov
popf
outsl
cmp
std
lock
jae
cmp
ss
arpl
xor
jbe
insb
lret
xor
or
or
lds
lods
outsb
xchg
test
cmc
cmpsb
std
inc
inc
mov
shll
cmp
inc
push
sub
add
mov
dec
int3
cmp
dec
call
jae
cmc
sbb
loope
jecxz
push
arpl
fadds
xchg
mov
insb
push
orl
push
jns
xor
xor
bound
out
sub
fdivrs
inc
sti
sub
mov
sbb
rcrb
faddl
insb
and
pop
std
jmp
jne
cmpsb
movsb
inc
jp
add
outsl
fs
jecxz
sub
lea
cwtl
movsl
xchg
nop
xchg
sbb
inc
push
insb
xor
clc
mov
ret
mov
and
test
icebp
mov
fdivrp
fwait
mov
test
and
adc
or
push
mov
mov
push
and
fs
dec
mov
arpl
inc
inc
aam
cmpsb
lret
add
out
icebp
outsl
fisttps
push
test
mov
shl
fmuls
mov
test
addb
es
fcom
std
and
xchg
sub
scas
mov
mov
test
xlat
cmpb
pop
les
push
cmpsb
xlat
mov
addr16
mov
xchg
fldcw
jns
inc
pop
test
pop
loopne
daa
sbb
sbb
js
and
mov
adc
out
pop
and
clc
xchg
nop
call
mov
cs
lahf
lods
xor
in
xchg
out
je
push
cld
shrb
mov
and
lock
gs
mov
sbb
jb
push
xor
cmp
or
push
push
cmc
pop
out
aaa
dec
pop
rclb
pop
push
loope,pt
cld
daa
pusha
push
in
arpl
jg
add
xchg
std
sbb
jge
daa
aas
pop
jl
test
pop
pop
pop
adc
lcall
in
lds
pop
ja
sub
add
pop
popf
pop
aam
mov
mov
in
mov
fiaddl
jo
sti
test
sbb
push
mov
xor
aas
cmp
add
rorb
mov
xlat
xchg
shlb
mov
inc
lret
pusha
push
lods
dec
stos
repz
jb
xchg
loope
fsub
xlat
inc
outsb
sti
inc
xor
addb
pop
data16
mov
aas
ja
lods
enter
fsubrs
cmp
lock
mov
enter
sbb
jmp
es
cmpsb
push
stos
pop
imul
movsbl
dec
or
orb
xorl
movsb
inc
mov
fiadds
inc
fldcw
inc
push
jns
xchg
fidivrl
xchg
fcompl
xchg
adcl
orb
adc
or
jne
xchg
jmp
mov
mov
std
int
sbb
mov
xor
adc
popa
out
jno
xor
cwtl
sbb
add
inc
pop
pop
fdivrs
sbb
mov
xor
inc
pop
mov
jle
rcr
mov
shrl
inc
loope
cwtl
insb
push
xor
sub
sub
lea
mov
push
scas
nop
test
es
mov
jbe
sub
shl
push
sti
push
orl
inc
mov
cmovl
jae
mov
push
fwait
retw
and
es
pop
ret
cmpsb
idivb
lret
jae
jno
jae
shll
sbbb
bound
ljmp
jns
mov
xor
inc
jecxz
cmp
into
mov
push
fsubp
adc
mov
es
add
and
popf
ficoms
mov
pushf
sub
mull
sbb
xor
add
test
xchg
or
test
cld
fcmovb
sub
mov
mov
je
adc
xchg
cmp
test
das
les
in
mov
xchg
lods
fistpll
bound
xchg
mov
out
push
mov
mov
lds
push
into
lea
mov
fwait
and
into
cmp
jl
movsl
lahf
push
pusha
stos
pop
cmp
je
add
je
push
pop
or
dec
mov
rclb
push
les
add
sub
divb
dec
leave
mov
fstps
inc
add
testl
pop
subb
xlat
ficoml
inc
loopw
push
mov
jb
mov
orb
cmpsl
cmpsl
sub
in
jp
imul
or
jmp
xchg
mov
xchg
mov
mov
push
pop
lods
pop
pusha
sbb
shrl
mov
and
movsl
popa
jg
jo
movsl
stos
push
dec
clc
bound
mov
frstor
and
and
pop
in
or
sub
jb
pusha
loope
mov
ljmp
cmp
orb
leave
in
pop
js
call
cmpsl
pop
mov
cli
mov
mov
jmp
xchg
aad
cmp
and
inc
push
dec
mov
aad
btsl
lea
in
dec
test
into
pop
or
xor
dec
loop
pop
decl
xchg
test
jl
sbb
dec
jecxz
stc
cli
shrb
repnz
and
into
andb
dec
inc
in
test
add
xchg
xchg
jle
jp
sti
rcl
dec
inc
scas
adc
hlt
dec
pop
stos
out
mov
pop
and
andb
test
cmpsl
fisubs
clc
mov
sub
ljmp
fwait
sub
xlat
xchg
cs
orb
pop
icebp
fcom
flds
pop
mov
inc
cmpsl
xchg
icebp
ret
bound
frstor
fidivrs
mov
adc
xlat
lcall
mov
pop
mov
loop
adc
ret
add
or
movsl
fcompl
dec
xorl
stos
insl
cld
jne
cmp
inc
mov
inc
adc
sahf
jns
dec
cwtl
arpl
mov
mov
insl
add
shll
jp
out
hlt
cmp
fucomip
adc
cmp
test
inc
fimull
lock
xor
cmp
inc
rcll
clc
cmpsb
mov
jae
out
pop
je
dec
ds
jp
dec
inc
in
out
sub
popa
lock
pop
inc
cmp
subb
outsl
test
call
sar
lock
adc
or
fs
cmp
psubb
dec
out
outsl
mov
sub
push
xchg
arpl
jge
daa
and
jb
jle
ljmp
adc
adc
addl
out
shll
sub
and
adc
sub
xchg
cmp
icebp
xorl
add
pop
cltd
or
nop
js
idivl
and
pop
data16
adc
sbb
test
adc
adc
or
mov
mov
inc
jmp
js
inc
push
sub
out
cmp
dec
rcl
xor
cmp
sub
and
mov
mov
test
and
mov
mov
jp
out
std
mov
adc
aad
push
shrl
fidivs
push
mov
or
inc
cltd
push
pop
cmpsb
out
inc
out
dec
adc
cmp
mov
mov
shlb
inc
mov
mov
cmc
and
mov
faddl
gs
dec
pop
adc
push
add
lahf
pop
mov
push
adc
add
out
ret
icebp
xchg
test
cmpsb
xor
rol
and
push
push
fs
adc
lods
sub
pop
stos
aad
mov
or
cmp
outsb
push
ret
jae
xor
or
hlt
xchg
push
gs
mov
adc
and
ljmp
sub
dec
xlat
decl
xor
xlat
pop
cmp
mov
ret
xchg
shlb
push
out
jbe
leave
fimull
lahf
scas
mov
in
and
fdivrl
clc
mov
loope
mov
mov
outsl
divb
mov
mov
andl
sbb
int3
or
insl
add
mov
out
mov
dec
aaa
inc
sar
outsb
repz
cmp
movsb
adc
pop
movsb
xor
lods
sub
rcrb
xchg
xchg
sbb
daa
push
movsb
shl
xchg
inc
sbb
jmp
jbe
sbb
xchg
movsl
mov
aad
test
lahf
clc
inc
cmp
and
cld
xchg
lret
mov
pop
dec
adc
add
push
dec
popf
les
je
sub
mov
pop
fisttpl
mov
mov
xor
cld
movsl
add
push
push
jb
fbld
and
pushf
and
pop
cmp
inc
and
out
xor
lods
jmp
dec
cli
daa
frstor
pop
daa
add
jns
test
lock
jbe
imul
decl
pop
mov
out
push
ret
add
loop
adc
pop
test
adc
dec
movsb
jecxz
adc
popa
lds
enter
cmp
ret
pop
push
inc
jo
lret
pop
aaa
ret
pop
lea
ds
xchg
sub
fistpll
outsb
sbb
movsb
idiv
movsb
cltd
mov
mov
insl
dec
sbb
int
pop
or
js
xlat
sbb
mov
dec
je
mov
jno
add
and
xchg
mov
cmc
xor
fnstcw
imul
cmpsb
clc
dec
fisttpl
cltd
adc
add
inc
mov
aad
mov
xor
xchg
pop
jle
mov
sub
ja
adc
push
inc
cs
stos
push
pop
fcmovbe
dec
and
add
dec
adc
dec
dec
cmpsl
mov
mov
or
jmp
mov
lds
push
in
dec
add
sbb
sahf
gs
xchg
ds
ror
outsb
shrl
sbb
pop
sbb
jae
test
sub
pop
scas
cmpsl
add
fnstenv
fimull
xchg
xor
cld
repnz
push
mov
push
lea
mov
pop
adc
mov
pushf
dec
jg
mov
daa
xchg
hlt
popf
sarb
sbb
fstp
adc
andb
jle
jo
push
push
xchg
sbb
dec
mov
jns
push
nop
xchg
sbb
xchg
aad
outsl
xor
xor
ja
or
test
inc
jbe
fidivl
inc
hlt
jno
and
mov
ja
push
jbe
sub
fwait
loope
rorb
flds
repnz
mov
jmp
mov
test
das
fsubr
in
shll
movsb
ss
loop
add
outsb
in
in
ret
cmpsb
in
out
imull
xorb
adc
sarb
je
inc
cltd
mov
aaa
jmp
sub
scas
jecxz
adc
je
lret
push
push
add
icebp
or
inc
jne
iret
pop
test
sub
inc
arpl
das
pop
sbb
aaa
mov
imul
sub
add
cmp
pop
stos
data16
sarl
repz
xor
adc
push
movsb
aad
adcl
ret
pushf
popf
leave
pop
dec
or
lret
mov
in
cmpsl
mov
push
jle
cmp
jp
movl
outsb
enter
fdivl
or
popa
pop
mov
out
repz
add
fadd
ds
shld
xchg
in
loop
dec
aaa
cmc
fs
call
or
or
aam
jo
mov
lahf
in
inc
out
add
or
pop
int3
js
out
inc
push
push
mov
sahf
and
mov
add
fnstenv
xchg
cli
test
out
mov
pop
xchg
xchg
dec
scas
pusha
mov
pop
push
push
lcall
les
mov
push
shl
data16
popa
adcl
adc
sbb
lock
sub
mov
data16
int3
push
inc
and
test
xorl
dec
jp
mov
add
loope
xor
adc
inc
push
lcall
sbb
push
pop
std
mov
repnz
push
sahf
or
dec
rol
inc
add
je
sbb
mov
add
lods
pop
loop
adc
jnp
jle
push
push
or
xor
dec
out
sahf
dec
cwtl
and
xchg
lret
xchg
mov
imul
mov
xchg
mov
dec
mov
mov
sbb
out
add
or
loop
ja
cltd
inc
lea
mov
imul
lahf
mov
outsb
push
stc
jl
shlb
jl
in
xchg
xor
movsb
insb
pop
push
adc
cltd
inc
out
nop
and
xor
sarl
stos
push
add
testl
mov
nop
insb
mov
pushl
cs
fs
and
cld
fiadds
pop
push
mov
mov
sub
test
aas
testl
or
jecxz
pop
mov
or
popfw
sbb
mov
mov
lods
test
xchg
aaa
inc
inc
loopne
and
lret
mov
loopne
imul
test
add
stos
test
sahf
pop
jno
stc
fsts
jne
int
nop
push
mov
fmuls
push
in
inc
pop
les
movsl
mov
insb
stc
xchg
das
ljmp
repz
pop
sbb
push
jmp
enter
or
fwait
dec
cwtl
lods
add
push
fcmovne
nop
mov
out
mov
mov
mov
aas
xor
imul
mov
or
push
arpl
sub
test
cmp
cwtl
adc
dec
test
dec
dec
and
out
cmp
mov
jle
ss
inc
loopne
sahf
mov
mov
mov
adc
jl
jb
aam
fildll
popa
sub
stos
jge
mov
iret
daa
add
or
sub
pop
pusha
jp
shrb
and
jg
mov
xor
sbb
jae
test
mov
pop
loope
leave
sub
xchg
sbb
adc
jp
movl
push
pop
and
adc
shrl
bound
inc
je
aaa
into
dec
in
jno
js
mov
lret
dec
and
std
divb
xchg
mov
and
rorl
jnp
test
inc
wrmsr
ljmp
xchg
dec
mov
ja
xor
jg
vcmpss
pop
fmull
out
inc
dec
std
mov
add
and
sub
cmpsb
decb
gs
cltd
call
movsl
cmc
das
xor
lea
test
cmpsl
test
in
sahf
pop
mov
xlat
fcmove
dec
xor
das
je
mov
rcl
or
aad
cmp
shrl
sbb
sti
lods
in
sbb
jmp
push
pusha
jno
stos
xor
sub
adc
jbe
push
xchg
in
jno
dec
filds
fiaddl
cs
mov
negb
cwtl
je
in
int3
inc
pop
or
sub
call
rcr
xlat
push
or
sbb
xor
imul
aad
pop
adc
xchg
pushf
push
jne
sub
les
jecxz
dec
mov
dec
inc
outsl
cmp
jo
mov
xchg
cmpl
subb
stc
jge
daa
dec
cmp
lret
test
inc
adc
jmp
mov
jns
cld
cli
daa
loope
xor
scas
sti
cmpsb
in
jae
inc
push
nop
and
je
push
inc
test
cmc
mov
fldt
fstl
lret
insl
or
loopne
inc
mov
inc
repnz
sub
movsb
stos
cmp
pop
lcall
outsb
sub
repnz
lahf
xor
decl
hlt
rdmsr
out
mov
adcb
pusha
xchg
in
out
mov
iret
mov
shrb
divl
mov
imul
xor
outsb
ret
push
mov
aam
and
mov
push
rorl
iret
mov
lcall
outsb
mov
inc
push
push
outsb
pop
mov
cltd
bound
push
lcall
xor
iret
mov
push
cmp
sbb
xor
pop
jns
sub
js
push
scas
ja
pushf
into
in
ss
mov
inc
push
dec
out
inc
lea
jmp
inc
lds
mov
cwtl
mov
mov
mov
xchg
xchg
mov
ja
das
ret
std
cli
loopne
sbb
inc
add
iret
in
cmp
loopne
xchg
inc
test
aad
push
mov
mov
pop
and
scas
cld
mov
adc
cmp
int
jne
push
add
subb
add
jge
loope
inc
ljmp
xchg
test
sar
dec
mov
xchg
pop
pushf
mov
cmpsl
aaa
inc
je
mov
push
int
popl
sbb
jae
xchg
test
pop
push
cmp
mov
xor
add
arpl
sub
icebp
lea
decl
inc
rclb
fisttpl
pop
mov
adc
ljmp
pop
sti
dec
stos
setnp
sbb
xor
or
lock
clc
mov
out
fisttps
rcrb
xor
gs
push
xchg
pop
xchg
adc
add
test
mov
cmpsl
repz
and
jnp
push
add
and
in
hlt
repnz
pop
jns
in
dec
push
in
sub
xorb
sub
mov
jno
mov
add
popf
push
cwtl
mov
jge
push
roll
orb
mov
xor
call
movsl
repnz
or
pusha
in
mov
xorb
add
pop
ret
leave
scas
popl
push
and
sbb
mov
push
rcrb
xor
scas
mov
pusha
hlt
jmp
pushf
xchg
sbb
jbe
out
lret
cmp
add
push
in
cli
add
fadd
or
jge
hlt
testl
pusha
rorb
imul
pop
out
xor
push
pusha
xchg
jae
loope
rcrl
lcall
fmulp
inc
in
dec
mov
mov
inc
in
xchg
dec
mov
call
inc
dec
movsl
push
stos
dec
lods
iret
mov
mov
mov
ret
fdivs
cmp
loopne
xlat
les
add
stos
push
mov
xchg
mov
sub
push
cs
lret
lcall
mov
lret
idivl
out
or
ficoml
movsb
jno,pn
addr16
shr
insl
repnz
mov
arpl
pop
fldenv
or
mov
pop
jne
in
rorb
fstl
mov
sbb
xchg
dec
fs
enter
lret
popf
dec
inc
orb
pop
pop
scas
add
ficoml
jmp
andb
mov
orb
xor
and
adc
adc
sbb
mov
adc
sub
dec
or
sub
shll
inc
popa
cmpsl
subb
ds
push
pop
xchg
lods
lcall
adc
or
popf
dec
in
sbb
addr16
out
rcl
subl
mov
adc
sub
add
adc
mov
pop
jae
addb
mov
lea
into
stc
xchg
add
xchg
adcl
ret
inc
dec
sub
xor
xchg
lcall
sti
adc
mov
lds
cmp
jge
in
cmp
xchg
sub
cmp
or
push
pop
aaa
outsl
daa
pop
or
inc
fisttps
stos
jno
mov
pop
test
test
xchg
dec
jg
push
pop
dec
mov
arpl
cld
and
push
xchg
je
mov
pop
sub
push
push
fiadds
sbb
pop
test
sbb
push
adc
mov
mov
jle
lahf
imul
notb
lahf
int3
fidivrs
xchg
or
and
mov
lahf
test
sbb
jmp
insl
mov
test
int3
sub
inc
dec
sbb
test
push
repnz
inc
add
rcll
add
and
popa
pop
cmpsb
pop
pop
jnp
xchg
sub
or
std
pop
dec
lea
jmp
pop
mov
and
push
daa
inc
into
das
sub
xor
dec
sahf
jne
sar
push
push
mov
inc
das
inc
test
and
ret
out
add
ja
xchg
divb
adc
les
pop
adc
pop
sbb
cmp
adcb
addl
test
and
pop
inc
pop
xchg
shlb
adc
inc
sbb
in
inc
roll
push
or
cs
cmp
ficoml
mov
and
in
ror
inc
jne
sarl
pop
jecxz
outsl
push
mov
mov
data16
and
lret
jno
add
inc
jle
inc
inc
jnp
fcomp
sbb
dec
xchg
or
loope
adc
test
sbb
outsb
nop
andl
mov
push
inc
int
pop
sub
xchg
cmp
loop
out
shlb
inc
inc
pop
sub
sbb
push
popa
inc
xchg
lds
insl
cmp
jl
ss
push
bound
xor
imul
jo
dec
jmp
fnstenv
jae
cld
and
bound
or
icebp
push
mov
ficoms
mov
mov
hlt
add
test
jbe
push
repnz
imul
fs
stos
cmpsl
mov
out
in
push
xchg
dec
cwtl
scas
aas
jle
xchg
xchg
lret
movsl
pop
shll
into
aad
mov
test
jae
jae
xchg
jmp
popa
push
call
mov
push
add
sub
mov
mov
sahf
iret
out
shl
cmp
push
xchg
sbbb
popa
sub
xor
out
jno
leave
push
out
mov
sbb
mov
iret
xor
dec
loopne
sbb
push
xchg
fcomps
and
fisttps
ss
pushl
or
inc
or
add
push
inc
inc
repz
fcompl
data16
dec
push
adc
pop
or
lods
mov
and
push
or
jmp
test
out
pop
xlat
sbb
out
movsb
sarb
lods
outsl
jns
cmp
fcmovnbe
pop
repz
call
es
cwtl
or
lcall
pop
out
or
mov
or
and
mov
jle
xchg
pop
lcall
js
or
xor
mov
push
push
mov
fdivs
jp
je
mov
sti
cs
std
jp
jbe
mov
testb
add
lret
inc
pop
rcrl
pop
push
mov
es
je
fsubrl
mov
dec
gs
xorb
rol
movsb
sbb
out
loop
lock
xchg
iret
add
imull
lea
and
stos
imul
test
jne
rclb
dec
xchg
dec
inc
dec
add
les
add
pop
cmp
and
push
inc
push
insb
add
mov
in
sbb
or
xchg
nop
repnz
xchg
mov
lock
dec
cmp
and
cmp
inc
stos
movsl
js
clc
aaa
pop
daa
sbb
sbb
xchg
popa
mov
pop
js
push
pop
cmp
mov
aaa
and
jno
ja
xor
pop
std
dec
push
mov
xlat
adc
adcb
loope
push
hlt
fdiv
pusha
fcmovbe
enter
cmp
pop
roll
add
aaa
ret
dec
adc
xor
or
push
mov
dec
pushf
adc
sub
jl
add
ret
in
popf
sub
aam
sahf
or
sbb
and
repz
loop
test
into
pop
cltd
insb
fsts
xchg
outsb
mov
dec
hlt
test
stos
ds
in
jecxz
pushl
mov
fistl
jae
testb
int
xchg
xchg
or
cltd
stc
pop
in
add
stos
xor
mov
stos
xchg
jnp
mov
nop
push
fildll
jo
int3
and
cld
rcll
add
jl
mov
movsb
aad
inc
xchg
adc
adc
montmul
cmpsb
push
mov
jmp
fidivrl
xchg
outsb
clc
push
cs
and
mov
sub
pop
arpl
or
xchg
mov
cmp
pop
push
fst
fisubl
subl
pusha
es
loopne
js
or
push
dec
faddl
jmp
aaa
jp
mov
bound
inc
add
mov
aad
mov
clc
mov
fisubs
add
dec
sub
lods
dec
mull
std
sbb
xchg
push
mov
adc
in
mov
push
and
jp
outsb
add
or
cltd
popa
int
pop
adc
push
mov
cwtl
inc
incl
lods
les
sbb
mov
mov
push
hlt
hlt
vshufps
mov
adc
xchg
xchg
jmp
pop
sbb
and
pop
dec
lahf
mov
adc
dec
subb
fiadds
adc
xchg
ljmp
cs
mov
fwait
jp
xchg
xor
mov
pushf
ljmp
arpl
add
fmul
jns
add
popa
jne
and
jnp
add
jle
je
dec
fst
push
mov
cli
mov
jecxz
push
xchg
jge
cmp
sub
push
clc
mov
repnz
fcomps
test
inc
iret
fdiv
popf
loop
push
mov
out
icebp
ja
stos
push
ss
cmp
push
stc
out
test
mov
and
das
stos
sbb
int3
sbb
cwtl
mov
loope
mov
mov
fwait
sub
mov
dec
sbb
int
ret
into
cmp
push
data16
jo
add
mov
xchg
push
out
lock
aas
add
or
leave
or
pop
clc
outsl
push
push
inc
mov
lods
int
test
jbe
sbb
jmp
arpl
jnp
sub
mov
mov
cmp
es
pop
xchg
cmpsb
push
mov
fimull
sub
out
jle
fdivs
cld
je
jbe
loope
mov
fsts
adc
inc
pop
add
push
call
push
dec
sti
adc
dec
int
lcall
push
ror
inc
dec
xchg
mov
inc
mov
int3
mov
ljmp
add
repz
stos
push
cmp
pop
sarl
ret
nop
in
xor
add
mov
addr16
xchg
enter
jae
sti
push
or
xchg
scas
xor
iret
out
xchg
subb
cmpsb
lds
nop
fldln2
mov
dec
xor
mov
xchg
repz
cmpsb
xchg
lea
add
and
aad
out
cmc
push
sbb
insb
stc
pop
addr16
sub
cmpsb
call
cld
sub
ret
pop
dec
cmpl
mov
mov
lods
jle
test
xchg
mov
cwtl
sub
dec
or
fs
mov
ret
sub
cmpsb
and
sti
ret
sarl
inc
cmp
movsb
test
xor
das
dec
mov
lahf
loope
stc
push
addb
or
cmp
gs
ljmp
movsb
ret
cmp
pop
mov
jb
jle
and
xor
in
ja
cs
jo
insb
push
inc
data16
sub
cmpsb
les
jmp
jbe
addr16
jns
rorl
mov
dec
xchg
mov
scas
ret
data16
ffree
fstpt
in
mov
sahf
test
shll
xchg
pop
cld
popf
pop
cmpsl
sbb
testb
jg
fs
cwtl
pushf
in
shlb
cmp
es
add
iret
cmpsl
cmp
hlt
lea
imul
outsb
sbb
lds
push
xchg
dec
sbb
daa
mov
push
shll
jne
mov
lret
shrb
fcmove
mov
or
mov
pop
dec
pop
push
sbb
xor
pop
cs
fwait
jecxz
dec
dec
rol
jno
add
xchg
push
pop
shl
inc
xor
adc
add
cld
adc
xchg
xor
cmp
or
out
sub
xchg
dec
inc
adc
jp
jo
fwait
icebp
icebp
xchg
fildll
fistpll
cmp
inc
mov
inc
lock
inc
out
inc
hlt
mov
in
imul
iret
out
sbb
mov
addr16
leave
adc
fimull
andb
push
mov
nop
stos
sahf
in
stc
fstpt
fwait
cmpl
adc
sbb
mov
jge
mov
repnz
push
adc
shll
aad
test
xor
cmp
loopne
sub
jecxz
lods
enter
xchg
jae
adc
in
push
inc
jp
lahf
jecxz
hlt
les
loopne
jp
mov
mov
jmp
loopne
jmp
in
imul
adc
int3
sti
or
jecxz
mov
mov
adc
icebp
out
negb
js
aaa
pop
in
arpl
sbb
ret
imul
dec
aam
das
mov
lods
ss
jae
aad
or
ss
enter
adc
outsb
aam
fdivrl
shll
orb
xor
iret
andb
mov
in
or
test
pop
mov
out
loop
ror
les
mov
shl
out
fmulp
stos
adc
es
or
inc
jnp
sbb
sbb
outsl
xchg
xchg
sub
jmp
adc
xor
inc
test
push
dec
stos
jno
xchg
jmp
out
push
dec
shll
xchg
daa
cwtl
sub
pop
fcmovu
push
push
dec
mov
jecxz
stos
and
cmpsb
pusha
pop
pop
fs
mov
cld
cmpsb
sub
dec
fiadds
fsubrs
pusha
cmp
outsb
add
popa
ss
jnp
mov
xor
mov
roll
ficomps
mov
addl
cs
mov
pusha
stos
jns
sbb
sbb
bswap
mov
fisubrl
push
ja
aaa
cmpsl
xor
mov
dec
push
push
dec
jnp
out
adc
roll
push
or
repnz
xchg
dec
enter
jp
out
cmp
sub
lods
add
sbb
fdivrl
ficoml
ljmp
mov
adc
rcrl
cmc
dec
or
jb
xor
add
in
scas
icebp
push
test
sti
push
fwait
mov
movsb
ret
enter
dec
jnp
dec
mov
std
and
imul
jnp
mov
push
inc
mov
movb
add
push
cmpsb
adc
std
add
lds
push
addr16
mov
inc
sub
sbb
dec
dec
ja
or
addl
ret
lcall
outsl
lahf
out
xchg
cmovo
test
mov
fs
orl
loopne
mov
xor
mov
cmpsb
xor
lock
cmc
icebp
pop
stos
dec
xor
push
cmp
outsl
cmp
lods
inc
mov
in
vmaxsd
push
push
dec
push
jecxz
fstpt
pop
sbb
fnstenv
int3
adc
test
into
jb
out
repnz
xor
addr16
cmp
cmp
fistl
mov
repz
mov
repnz
push
push
fistpll
addb
loop
rolb
xor
pop
movsl
mov
sbb
movsb
xchg
mov
and
loopne
aas
dec
push
cmpsb
daa
mov
dec
std
add
sub
xor
lcall
or
push
adc
jmp
popf
cmp
pop
mov
pop
and
and
xor
pop
imul
push
imul
lahf
int
add
push
aaa
pop
mov
push
aad
xchg
bound
into
cld
in
test
xor
test
xchg
mov
shlb
mov
adc
pop
daa
out
lahf
fistpl
push
xlat
adc
movaps
sub
inc
push
psubb
jg
popa
std
pop
pop
rorl
push
call
mov
jnp
fst
dec
adc
aas
clc
push
push
bound
clc
sahf
cmp
cmp
fs
and
test
sub
push
dec
cltd
pop
inc
ja
push
leave
pop
movsb
rorl
lcall
jbe
mov
inc
cmp
hlt
jne
daa
insl
mov
or
push
test
mov
fsts
lret
imul
data16
ret
int3
add
aam
mov
lcall
in
add
in
ret
dec
pusha
jnp
call
pusha
lods
cld
faddl
jnp
fwait
and
add
mov
pop
addr16
pop
pushf
mov
lock
pop
or
push
or
cmp
fcompl
fwait
outsl
loop
loope
das
lock
mov
sub
lds
mov
sub
cmp
cmp
sbb
push
adcb
out
jp
cmp
cltd
jnp
popf
jmp
imul
pop
scas
pop
clc
dec
or
bound
popl
add
jo
inc
or
inc
pmullw
ljmp
pusha
lock
push
cmp
cwtl
fdivrp
scas
pop
rorl
outsb
aad
jb
fptan
test
push
repz
shrb
mov
popa
mov
jnp
sar
pop
data16
aad
mov
aaa
psadbw
je
jmp
jle
xchg
push
xlat
inc
add
xchg
inc
sub
sub
pushf
push
mov
cs
xchg
in
push
xor
repz
call
bound
daa
xor
dec
daa
or
sbb
test
loop
jno
xchg
nop
scas
loop
or
nop
cmp
dec
iret
mov
orl
fldl
xor
rcll
mov
out
or
ret
dec
aas
das
push
in
mov
and
icebp
mov
xchg
fsubrl
aaa
lods
mov
out
adc
lock
or
fs
sub
and
gs
mov
adc
xchg
add
mov
ds
les
je
cmp
fdivrp
ss
push
rorl
mov
movsl
leave
fists
or
dec
xor
lods
pop
cld
mov
fistpl
icebp
inc
push
out
cmp
push
js
mov
xor
xor
imul
and
mov
fldenv
f2xm1
hlt
xor
lods
rcl
xor
jp
xor
scas
inc
daa
int
or
sbb
adc
dec
inc
idivb
stc
and
call
mov
lcall
mov
loope
xchg
orl
outsb
into
mov
hlt
shll
fstps
aad
and
testl
pop
fldlg2
and
das
out
repnz
mov
xor
ss
or
int
inc
int3
js
add
sti
inc
sub
sarl
ret
cmp
lret
test
les
out
insb
fistpl
xchg
xor
jp
and
out
and
imull
call
push
or
sbb
cmp
aam
mov
inc
fidivl
push
test
dec
mov
leave
je
mov
shl
or
cmp
push
or
imull
sbb
mov
loop
vmaxpd
in
rolb
mov
mov
mov
in
dec
lock
aaa
pusha
mov
xor
hlt
jecxz
cld
or
out
add
xor
in
pop
insb
inc
mov
loop
jp
pop
mov
outsl
popa
mov
adc
mov
in
cmpsl
jg
mov
dec
xor
and
jnp
push
xchg
out
pop
ljmp
ss
or
push
stos
and
dec
mov
sub
dec
xlat
imul
or
adc
movsb
hlt
adc
pop
int
mov
inc
ficoms
inc
pop
xchg
paddq
outsb
mov
mov
subb
inc
xchg
scas
ficomps
sbb
dec
les
pop
cmp
bnd
aas
dec
arpl
and
adc
shlb
subb
decb
lea
adc
movsb
lods
in
or
dec
add
push
pop
pop
pop
jne
aaa
mov
cs
inc
jg
add
sbb
test
adc
loop
sub
scas
pop
rclb
sub
ja
fcomps
clc
mov
jle
repnz
addb
cmp
out
adc
fmull
out
out
popf
popf
fwait
rcll
pop
dec
cmp
ljmp
adc
or
mov
rclb
sub
popf
stos
sub
mov
xchg
xchg
imul
inc
and
pop
xchg
inc
es
mov
outsl
jae
and
pop
cltd
sub
les
xchg
jne
decl
fldenv
push
xor
idivb
fucomip
push
clc
shrl
push
ret
cltd
pop
adc
imul
into
cmp
xchg
clc
mov
ret
mov
dec
and
scas
sbb
push
test
jo
adc
dec
jnp
rorb
pop
lcall
pop
lret
mov
inc
stos
mov
test
test
jle
pop
lock
mov
mov
adc
dec
inc
outsl
push
cmp
fsubrp
mov
stos
sbb
inc
mov
pop
add
stos
sbb
mov
or
or
and
xchg
inc
cmpb
data16
movsl
outsb
dec
mov
fs
and
mov
aaa
sbb
stos
add
dec
mov
cmp
push
xchg
sarb
or
lret
mov
mov
jno
push
xor
sub
xchg
xchg
cmc
sub
shlb
ret
insl
push
cmp
mov
repnz
ror
rorl
and
cld
leave
fsub
je
imul
sub
sbb
andl
sub
pop
mov
push
or
jb
mov
into
mov
sti
addr16
or
and
ffreep
xchg
leave
lods
sub
pop
test
out
jbe
mov
cmpsl
iret
test
ret
aaa
icebp
ds
jbe
loopne
arpl
insb
sub
xchg
test
out
daa
mov
pop
loope
inc
inc
je
fstpt
fcoml
pop
pushf
xchg
xchg
test
sbb
or
or
stos
nop
push
lcall
mov
mov
and
sahf
sbb
sub
data16
or
vphadduwq
lock
and
jno
lret
cmp
addb
rcrl
test
lock
loop
aad
inc
rcll
leave
nop
and
cli
daa
mov
xor
mov
and
jnp
push
push
or
popf
jp
ss
and
jmp
mov
ljmp
mov
stc
push
push
fistps
sbb
cmp
adc
pop
mov
stc
add
mov
out
add
int3
xchg
ds
out
sbb
fcomip
imul
jge
mov
xchg
shlb
movsb
in
jno
lret
mov
mov
mov
lock
out
jb
sbb
loop
leave
adcl
xchg
fildl
lea
addr16
lock
leave
or
dec
pop
lret
mov
xor
arpl
sbb
enter
xor
push
xchg
push
sbb
testb
xor
add
cltd
jo
dec
jge
ja
lret
mov
lods
xchg
inc
pop
arpl
pop
sbbl
js
mov
inc
xlat
push
sbb
xor
pop
push
addr16
adc
cs
jno
arpl
push
pop
sahf
or
scas
or
rcl
or
rdpmc
dec
adc
or
xchg
cmc
sub
movsb
xor
mov
inc
iret
lods
mov
jl
mov
andb
or
into
inc
push
out
pusha
push
int
popf
pop
dec
stos
cmp
ds
pop
bound
leave
ljmp
pmaxsw
adc
cs
test
rolb
lret
xor
into
adc
sub
aam
shll
cmp
xchg
call
sub
dec
add
shr
inc
inc
adc
jns
pusha
mov
dec
xchg
sub
std
in
xchg
notb
out
add
into
cmc
bound
sbb
sub
lods
dec
aaa
push
jmp
or
dec
test
xor
xor
inc
roll
mov
inc
mov
imul
jl
out
mov
repz
lods
bound
xor
jb
pop
lahf
mov
cmp
inc
add
ret
imul
out
cmp
out
jb
or
push
cwtl
cltd
xor
dec
xchg
cs
mov
repnz
inc
popf
repz
cmp
xor
jecxz
mov
mov
fs
enter
loop
jp
mov
jl
cmpb
push
repnz
lret
sub
js
in
daa
addr16
adc
enter
imul
pusha
mov
ja
push
fwait
enter
aad
cmp
adc
mov
or
cltd
pop
idivl
scas
aad
fidivl
in
push
in
xor
imul
push
inc
mov
push
fldt
push
inc
shlb
rcrb
push
int
xchg
adc
pusha
les
jmp
pop
fildll
mov
aaa
cmpsl
mov
je
xchg
pop
and
sbb
sarb
or
ror
lret
rcrb
das
inc
mov
push
mov
aas
push
push
movsb
cltd
dec
mov
std
scas
popf
inc
imul
add
jae
jecxz
push
adc
adc
jb
clc
notl
xor
mov
and
inc
das
xchg
or
pop
pop
lret
out
lods
xor
notl
stos
mov
sub
fimuls
adc
mov
and
cmp
sarb
sarb
mov
or
pop
xor
call
inc
mov
ljmp
mov
popa
or
sbb
imul
xchg
and
add
shl
scas
fs
pop
xchg
and
data16
pop
mov
cmp
cltd
fsubrs
cmpsl
fsubrs
xor
hlt
mov
pushf
jecxz
jecxz
cld
cmpsb
mov
add
aaa
mov
cmp
dec
and
insl
in
orb
in
or
out
push
ret
test
lret
xchg
push
push
push
jmp
jmp
int3
pop
out
data16
mov
xor
int3
pop
adc
div
pop
scas
adc
test
pusha
popa
inc
aaa
pushf
mov
ja
mov
jge
sub
es
cwtl
nop
je
fadds
pop
xchg
jge
cwtl
cmp
stos
add
fs
cmpsl
push
pusha
stos
loopne
mov
sbbl
movb
push
outsb
and
jnp
xor
loopne
or
fsts
xor
pop
daa
in
xlat
int
arpl
mov
sahf
jle
push
xchg
cmp
loop
push
inc
aas
pop
jp
loope
add
aaa
push
sub
lock
sbb
sbb
mov
pop
outsl
xlat
push
rclb
mov
lret
push
ficomps
stc
movsl
sbb
adc
insb
test
aas
loope
mov
adc
adc
sahf
xor
sbb
enter
sub
pop
lock
cmp
test
inc
enter
fwait
call
aad
sub
or
push
orb
dec
or
lret
sti
enter
pop
aad
xchg
jp
mov
cmp
shlb
push
popa
inc
aaa
mov
in
sub
mov
adc
out
clc
mov
jnp
fistl
or
push
data16
push
cmp
lret
adcb
stos
fsubp
shr
cmp
subb
imul
stos
push
rolb
incl
inc
lock
mov
pop
xchg
cmp
mov
insl
popl
and
inc
int3
jbe
mov
das
nop
and
inc
inc
sub
dec
lahf
js
popf
jnp
out
imul
jo
fstps
and
orb
loope
and
aaa
mov
mov
xchg
loope
imulb
cmovns
push
loop
daa
xor
xor
cwtl
subb
mov
outsl
jae
or
sbb
jl
jle
sub
data16
aas
addr16
or
add
adc
adc
rcrl
pop
aam
pop
push
cmp
aas
mov
jg
mov
popa
mov
pop
add
mov
xchg
scas
test
icebp
lock
jmp
push
or
mov
mov
adc
inc
mov
jp
lods
add
xor
mov
int3
add
mov
mov
sti
fisttpll
stos
mov
sbb
sbb
jb
sub
inc
mov
jmp
inc
cmp
lea
jl
jbe
fdivrl
js,pt
adc
shll
sub
and
mov
mov
test
adc
aas
sbb
fldt
dec
enter
test
fs
icebp
ja
or
mov
xor
andb
es
push
sahf
pop
xor
xchg
sub
pushf
mov
and
ds
imul
loopne
iret
sbb
in
ss
xchg
cmp
in
jg
add
jmp
pop
pop
jl
test
ljmp
or
fidivrs
push
clc
jge
mov
mov
adc
jb
mov
gs
loop
pushf
stc
jl
cwtl
mov
insl
bnd
or
push
inc
adc
pop
pop
stos
imul
fisubs
sahf
sbb
and
scas
int3
inc
and
adc
sbb
jnp
xchg
sub
rep
or
adc
into
xchg
pop
aam
popl
je
aaa
push
fisubl
fwait
cmp
sub
pop
dec
adc
ss
jo
inc
out
push
push
xchg
enter
stos
cmp
cmp
movsl
push
push
insl
pop
xchg
fdivrl
std
mov
xchg
cmpsb
aas
dec
insl
mov
xchg
cmp
xchg
cwtl
les
mov
cltd
and
cmp
and
xor
lods
push
xchg
cmp
repnz
cld
push
or
shr
stos
jae
mov
imul
js
sub
xchg
arpl
insl
sub
notl
mov
loope
sar
mov
jbe
push
jb
pusha
xor
push
sub
shlb
stos
push
push
popa
jae
ret
cmp
xchg
mov
mov
loope
adc
sbbl
dec
shlb
fdivl
pop
out
sti
std
jg
lret
jne
dec
mov
push
inc
js
and
mov
test
cmp
cmp
shll
bound
repz
lock
jnp
lea
sub
jecxz
loop
les
pop
push
ljmp
sbb
cmp
pop
popa
jp,pt
sahf
cmp
jp
mov
push
cmpsl
mov
nop
cmp
leave
mulb
pushf
adc
push
and
inc
and
insl
outsb
cmp
mov
movsl
mov
rorl
addr16
jge
sub
or
out
fstps
mov
lret
cltd
cmpsl
dec
js
ljmp
repz
add
mov
sbb
data16
and
xchg
leave
ss
cmpsl
pop
pop
lea
mov
dec
aad
fidivl
mov
inc
mov
push
and
dec
cmp
and
jb
scas
enter
push
nop
inc
clc
jb
inc
xor
call
adc
enter
push
mov
lods
incb
and
cltd
mov
or
push
jb
mov
mov
add
or
nop
pop
leave
cmc
push
sbb
xlat
nop
aaa
insl
leave
pushf
clc
sub
add
ljmp
jae
fnstenv
xchg
and
jo
orb
imul
pop
mov
pop
sahf
rorl
rcrb
out
loopne
bound
imul
dec
shl
add
pop
sbb
ret
push
cmp
lea
dec
leave
sub
add
out
jae
or
dec
jecxz
sti
out
adc
loop
jo
and
xchg
xchg
aam
icebp
pop
in
lret
dec
shll
mov
test
mov
mov
ret
mov
pop
push
repz
sbb
mov
in
mov
inc
mov
out
das
dec
xor
dec
es
cli
mov
xchg
out
inc
pop
cmp
jmp
mov
push
push
sbb
js
and
and
inc
mov
push
jge
lea
jecxz
stc
leave
es
and
aaa
jae
inc
jp
or
jno
push
loope
mov
hlt
add
idiv
lahf
xor
cmpsl
lret
ljmp
jo
push
fs
outsb
out
mov
gs
in
add
shrl
nop
iret
stos
or
inc
mov
cmp
jl
insl
add
loopne
les
cmp
lock
mov
mov
jecxz
shrl
test
insb
mov
cmpb
adc
add
hlt
cs
mov
mov
mov
or
xchg
add
aam
sbb
mov
dec
in
sbb
cmp
cmovne
jo
push
fstpl
popf
xor
loop
sbb
arpl
mov
mov
sub
out
fstl
fsub
xchg
xchg
dec
outsb
sub
inc
push
dec
sbb
mov
mov
push
test
dec
cmp
push
mov
or
into
or
mov
dec
icebp
xchg
inc
aaa
cmp
pop
lret
imul
push
sub
sub
in
xorb
inc
mov
sbb
mov
jmp
cmpb
mov
xchg
mov
mov
push
test
mov
call
in
imull
std
dec
ror
xchg
adc
ret
fadd
je
xchg
jl
or
enter
xchg
ljmp
sub
inc
jp
outsb
movsl
movsb
iret
xchg
dec
aaa
lcall
jb
cmp
dec
sbb
dec
mov
gs
push
out
out
push
or
lret
mov
xchg
fsubrl
enter
loopne
mov
fwait
gs
jecxz
out
xchg
stos
test
cmp
test
xchg
rcrb
je
mov
lock
jecxz
repz
rcll
sub
roll
and
push
fwait
repnz
dec
les
or
mov
into
shll
mov
sbb
jmp
imul
jle
mov
stos
cmp
push
or
std
lahf
mov
mov
and
pop
sbb
pop
into
pop
cltd
leave
and
jnp
mov
in
in
jne
jp
mov
push
rcrb
or
lods
dec
jnp
fildll
push
cmpsb
add
fsubrs
rcrl
movsl
lahf
nop
imul
out
sbbl
fdiv
aad
mov
aam
dec
add
and
mov
je
std
mov
je
cmp
xchg
jp
iret
xor
push
xchg
out
push
mov
jb
inc
inc
enter
xor
cmc
pop
ret
mov
push
cli
outsb
sbb
out
jb
and
xorl
or
and
adc
lret
enter
sbb
out
xchg
or
sub
push
pop
pusha
loope
xchg
lock
cmp
cld
add
inc
jp
cwtl
jecxz
cmp
or
pusha
and
ja
mov
and
enter
movsl
test
popa
insb
jmp
test
aas
sub
pop
insl
inc
xor
aad
std
out
add
addb
push
rcr
fidivl
mov
sbb
out
ljmp
test
inc
dec
mov
gs
stc
pop
push
in
in
sbb
imul
mov
jecxz
fldenv
or
movsl
lahf
lods
and
push
pop
and
sub
enter
test
les
adc
mov
stos
inc
inc
fcoms
mov
xchg
std
loopne
fmull
insb
xor
pop
jnp
dec
dec
out
aaa
sub
test
out
shll
in
shlb
lods
jmp
popf
sbb
mov
out
push
pop
insl
fdivrs
add
mov
mov
or
mov
mov
repz
add
pop
inc
push
inc
popa
lods
imul
dec
push
sbb
xor
call
iret
out
int
jg
out
fcompl
push
xor
pop
push
jno
xchg
in
add
or
lcall
xor
mov
or
and
xlat
in
mov
sub
cmc
xlat
mov
out
mov
loopne
sahf
inc
xor
sub
and
cmp
hlt
jmp
ja
and
jnp
scas
cmpsl
xchg
sub
and
hlt
mov
pop
cltd
insl
mov
xlat
in
sbb
hlt
fildl
clc
add
popa
test
jo
xor
xor
mov
cmpsl
in
add
push
mov
int
ret
dec
jp
ret
sbb
js
push
mov
fs
sbb
out
cmp
pop
test
jno
sub
push
xor
loopne
mov
fistps
inc
pop
mov
jo
and
fpatan
out
insl
inc
fwait
mov
out
mov
fwait
clc
andb
fsincos
lret
test
jno
dec
dec
fimull
test
icebp
ljmp
mov
fiadds
mov
outsb
add
mov
cmp
or
into
jb
pop
mov
mov
mov
fwait
xor
out
shl
xor
jbe
aad
cmp
cli
jmp
testl
mov
scas
push
into
sbb
loope
add
pop
popf
sarl
iret
pusha
and
xchg
mov
in
adc
push
push
jo
xchg
je
push
pop
dec
push
faddl
lahf
push
xchg
negl
xlat
fwait
mov
dec
ret
jnp
daa
xchg
xchg
pop
add
mov
movsl
in
xor
push
dec
push
repz
paddusb
outsl
sub
xor
dec
xor
push
cmpb
xlat
bound
xor
js
leave
sbb
mov
cmp
dec
cmp
js
shl
insb
dec
lea
jmp
cltd
pop
xor
push
mov
sub
out
cmp
stos
test
push
lahf
movsb
pop
das
nop
cmpsl
jns
jmp
fmuls
pop
cs
inc
fwait
pop
cltd
shll
inc
inc
jnp
add
clc
inc
test
push
lea
xchg
or
inc
ss
jo
jp
or
ljmp
enter
and
cwtl
sbb
data16
jge
push
mov
push
pop
push
ljmp
in
rcll
ss
adc
scas
lods
pop
push
push
inc
sbb
adc
cmp
jl
scas
push
or
shr
rcrb
dec
and
xchg
push
std
inc
push
pusha
sub
inc
and
addr16
sbb
push
popa
clc
jp
cmp
call
fisubrl
add
idiv
stos
stos
mov
add
push
pop
adcl
jg
fwait
dec
sbb
shl
cli
arpl
jnp
rcll
mov
std
mov
lds
shll
out
gs
cmp
xor
test
xchg
test
cmc
fwait
dec
sub
enter
dec
sub
pop
push
rclb
and
push
adc
bound
outsb
push
and
dec
ss
jp
mov
sub
push
add
sub
mov
and
push
je
mov
cmpsb
jmp
data16
andl
cltd
divb
dec
lcall
push
xchg
dec
and
xchg
loopne
sbb
or
je
rcrb
xor
insb
jne
sbb
iret
jno
divb
push
into
popf
lret
lds
inc
cwtl
mov
mov
shlb
pop
xor
cmpsl
xor
or
fcoml
es
ja
pop
movsl
mov
xor
bound
lds
jg
cmp
movsl
inc
dec
sbb
xchg
movsb
cs
mov
pop
sub
push
imul
jae
imul
addb
or
push
iret
pushf
sti
jle
jmp
xlat
cmpsl
cmp
dec
pushf
fiadds
test
push
xor
push
mov
or
ds
jnp
jl
in
sahf
jmp
icebp
xchg
lock
cltd
jmp
mov
js
mov
jg
ja
movsl
ret
scas
das
es
inc
xchg
ret
sbb
roll
mov
popf
jne
fiadds
fldcw
inc
imul
insl
in
xor
xchg
lods
insl
inc
xor
xor
inc
test
gs
mov
int
lret
loopne
aaa
push
mov
ljmp
dec
subps
lods
mov
mov
sub
push
jbe
loope
mov
add
movsl
mov
mov
xchg
push
pop
sub
jb
xchg
shlb
xchg
pushf
cmp
shrl
loope
pop
div
xchg
push
mov
sbb
cmpsb
cmp
jl
mov
lahf
adc
mov
pop
inc
adc
xlat
xchg
lods
xchg
jae
cmc
call
fs
movsb
fildl
push
xchg
or
dec
xor
int3
js
and
mov
jp
sub
sub
push
mov
mov
inc
jecxz
or
nop
or
inc
mov
and
les
add
out
ja
push
inc
loop
mov
inc
repz
into
aam
cs
aam
mov
nop
mov
jmp
daa
pushf
push
int3
std
cmp
int3
movsb
enter
out
inc
jle
inc
lods
aam
or
je
repz
sub
pusha
aas
adc
roll
push
sti
aad
inc
jbe
cmpb
aam
scas
fldt
jbe
push
leave
ss
out
cmpsl
nop
add
add
push
mov
and
imul
jge
and
sbb
push
nop
shld
jae
pop
lahf
cmp
sbb
add
mov
pushf
js
nop
test
repz
sarb
xchg
inc
dec
ljmp
jno
adc
cmpsb
rcll
addl
mov
and
mov
rcrb
lcall
jns
sbb
push
sub
out
push
push
test
jp
add
sub
dec
adc
sub
and
fimull
pushf
test
movsb
jp
mov
lcall
cmpsb
jb
jnp
fs
xchg
xor
bound
leave
dec
ror
mov
roll
push
out
sbb
pop
xchg
je
int3
and
shl
mov
push
xchg
pop
sub
xchg
outsl
test
lcall
dec
mov
push
and
loope
fnstsw
and
lahf
shrb
mov
cs
hlt
xchg
ret
jg
push
test
stos
jmp
pop
mov
cwtl
in
mov
or
in
pusha
aam
nop
adc
xor
inc
mov
fbld
push
popa
cmp
pop
and
lcall
into
push
push
add
push
loope
pop
inc
mov
fcmovu
xchg
jle
inc
or
jp
adcl
xchg
mov
push
subl
jge
cwtl
cli
cmpsb
cmpl
sbb
add
in
push
mov
sub
push
cs
jg
sub
xor
xchg
ljmp
test
mov
je
xchg
test
cmp
subb
push
cli
jmp
in
add
loopne
xchg
movsb
push
iret
xorl
sarb
adc
mov
gs
test
jecxz
mov
dec
push
addr16
add
xor
mov
push
push
xchg
sub
xchg
aaa
ja
sub
cmp
ret
xchg
enter
and
aam
lcall
arpl
outsl
mov
arpl
sub
jle
hlt
aad
repnz
test
push
mov
lcall
aaa
jns
adc
shr
push
add
mov
or
out
jmp
jb
daa
mov
push
sub
aaa
incl
xchg
mov
fisubs
out
int3
iret
xor
out
dec
out
add
push
stc
test
out
jmp
jns
add
ljmp
rclb
repz
lock
mov
ja
fmulp
nop
repz
sbb
ljmp
push
cmp
lods
and
out
sub
pusha
into
jne
xor
std
mov
and
ds
cmp
ds
cmpsb
xchg
sub
adc
neg
mov
push
loope
add
fwait
lret
aad
xchg
add
dec
psllq
and
add
sbb
in
pop
pop
jae
and
hlt
int
lret
faddl
jb
push
sub
mov
xchg
adc
xchg
add
adc
cmpsb
repnz
sub
addr16
mov
js
jmp
inc
jecxz
int
and
and
mov
push
xor
out
out
mov
orl
repz
inc
pop
icebp
rcl
and
cwtl
add
mov
lcall
subb
lods
or
push
dec
dec
dec
jmp
jno
adc
lret
push
scas
stos
inc
xchg
cmovs
xor
out
andb
cmpsb
push
lahf
hlt
cs
xchg
popf
xchg
jnp
cmp
in
sub
pop
test
dec
sub
ret
shrl
jno
sbb
test
pop
hlt
cmpl
mov
shlb
out
mov
mov
dec
shrl
es
push
xchg
xchg
call
addr16
sbb
dec
loop
xor
popl
lret
cld
jmp
mov
adc
mov
push
fistl
jg
test
nop
roll
popa
stc
push
push
pop
jl
mov
rorl
xchg
movsl
outsl
inc
add
or
in
enter
aad
add
pop
add
xchg
lret
hlt
push
in
push
mov
push
std
out
sbb
ja
je
bound
negb
xor
push
outsl
mov
scas
ds
cmp
cltd
sbb
cmp
iret
jo
aad
dec
insl
adc
outsb
out
xlat
jae
stos
ss
out
push
xchg
xchg
mov
ss
imul
sbbb
ds
mov
xchg
pop
shr
jmp
push
jo
xchg
pop
aaa
cmp
enter
sub
ror
xor
test
test
push
pop
cmp
icebp
inc
mov
fs
or
inc
dec
jl
adc
rolb
fbld
imul
pop
and
popa
stos
inc
fdivrl
aaa
testl
gs
mov
xchg
jmp
out
mov
add
push
push
sub
dec
dec
mov
mov
sub
jnp
ljmp
inc
sub
pop
sbb
das
cmpl
xor
outsb
push
jg
cmp
pop
sbb
stos
imul
cmp
loop
test
xchg
enter
movsl
sbb
lods
lret
outsl
ss
bound
push
jge
jge
mov
rorb
xor
enter
in
jg
mov
xchg
pop
test
xchg
das
jp
ret
shll
pop
mov
cmp
sahf
inc
out
lock
push
dec
enter
pop
jnp
mov
inc
cmpsl
sbb
xchg
insl
loope
push
jne
dec
and
mov
test
sbb
sbb
inc
fadds
pushf
fs
sbb
sub
jnp
ds
sbb
cmp
int3
lret
dec
sti
jnp
sbb
call
psrlq
lahf
and
add
repnz
add
cmp
imul
ljmp
dec
xchg
cmp
sbb
ret
cli
jns
subl
xchg
push
in
fidivl
cld
out
mov
movsb
fwait
cmp
lea
pop
in
mov
cltd
sahf
out
pop
mov
jb
into
rcll
push
sub
or
imul
push
out
add
adc
jne
lret
pop
cmp
xor
jne
cmp
leave
jge
xchg
faddp
daa
xor
test
outsl
mov
or
adc
ror
xor
fstpt
push
movsb
cmp
inc
and
add
mov
popa
scas
rcl
mov
mov
ja
jp
clc
pop
outsb
pop
les
push
lods
cli
adc
inc
xchg
xor
dec
maskmovq
notl
out
xchg
mov
push
divl
iret
jecxz
mov
pusha
fildll
outsb
leave
mov
and
dec
es
cmp
xor
fsubr
pop
xor
stos
xchg
gs
sbb
add
mov
imul
push
enter
or
inc
mov
seto
jnp
into
insb
cltd
cltd
retw
in
push
and
cmp
pop
mov
cld
icebp
test
out
push
mov
lock
adc
les
sbb
adc
push
mov
mov
imul
mov
or
and
enter
into
rcr
sbb
popa
popa
jae
push
lods
sub
jg
jmp
add
sub
cmp
insl
test
xchg
repnz
stc
scas
fistps
mov
in
jbe
nop
dec
ror
cs
or
fstl
repz
dec
and
les
cli
cmp
jmp
cld
inc
push
inc
dec
jecxz
negb
sti
jns
dec
add
xor
sub
addr16
mov
push
add
inc
xchg
lea
cltd
in
pop
mov
dec
inc
pop
add
jb
rcr
jl
and
cmp
pop
mov
cmpsl
or
add
jb
ret
clc
aas
bound
ret
jno
xor
push
jo
dec
imull
xorl
xchg
idiv
or
lret
or
mov
scas
pop
dec
dec
and
popa
scas
stos
jnp
pop
rcrl
lea
sub
inc
clc
inc
jmp
subb
cmp
arpl
fnsave
and
ljmp
test
jmp
inc
jle
ss
test
pop
mov
mov
cmp
mov
mov
jno
nop
imul
add
mov
push
dec
and
push
jecxz
sbb
dec
mov
xor
lods
addr16
jno
mov
cmp
cmpsl
in
inc
mov
or
fdivrl
xorl
shll
dec
cmpsb
sbbb
push
sbb
cld
jns
cli
cld
push
push
adc
pop
jnp
mov
adc
mov
xchg
sbb
xchg
cmp
xor
inc
je
sbb
scas
mov
clc
jle
insl
jmp
arpl
mov
xor
sub
xchg
hlt
cmp
inc
fdivs
imul
aas
fcomp
stos
pop
jge
fcomip
mov
sub
adc
inc
jbe
mov
sti
movsb
out
pop
cmpsb
cmp
jmp
cmp
popa
inc
sub
test
mov
in
add
scas
dec
sbb
or
out
dec
popf
loope
xchg
ds
and
sbb
mov
mov
scas
imul
push
scas
arpl
sub
mov
mov
cmp
lret
js
out
int3
xchg
jge
and
mov
lods
testl
lcall
jnp
imul
cs
cmpsl
dec
test
mov
sub
out
daa
or
pop
pop
lahf
mov
push
cmp
jb
jle
fiadds
fwait
jne
imul
jo
les
dec
lret
fidivl
cltd
pop
xor
xor
xchg
outsb
gs
jns
jae
inc
in
icebp
and
insb
ret
push
adc
add
xor
lea
xchg
sub
pop
adc
rcll
push
xchg
fs
jle
cmpsl
stos
mov
mov
pusha
sbb
push
jnp
push
loopne
ficompl
decb
mov
mov
into
xchg
movsl
cs
adc
cmp
sbb
sti
pop
in
mov
push
popf
sub
push
jno
xor
or
in
enter
xor
out
data16
push
ficoml
movsb
xor
repz
loop
and
xchg
popf
mov
es
jns
imul
fdivrl
aaa
and
jecxz
enter
addr16
add
adc
fwait
jno
mov
adc
inc
movsl
jae
mov
push
dec
mov
enter
push
xor
addr16
jns
or
rcrl
out
fs
scas
insb
pop
imul
dec
imul
mov
imul
xor
iret
mov
daa
outsl
xor
in
lret
jge
and
sbb
jp
xchg
pop
xchg
imul
lea
push
xchg
add
dec
pop
shl
pop
sbb
in
xorl
xchg
fnsave
xor
mov
aaa
lock
cmc
in
lock
mov
pop
imul
pop
imul
or
fnstsw
mov
dec
push
mov
xor
in
jl
movsl
or
inc
cld
add
or
ret
outsl
scas
jg
mov
push
mov
ja
pop
dec
aad
dec
mov
dec
push
xlat
sbb
adc
in
pop
test
bound
sub
xchg
xor
imull
lods
mov
jp
sbb
mov
add
mov
mov
lock
mov
or
sbb
cmpl
pop
adc
adc
push
leave
mov
jg
loope
bnd
sti
mov
or
outsl
push
ljmp
xchg
jecxz
jb
pop
mov
in
cmp
and
push
mov
inc
add
mov
or
or
bound
jb
jmp
inc
inc
das
sub
dec
xor
stos
dec
outsb
shrb
and
inc
xlat
in
in
test
jbe
loopne
movsl
std
lock
data16
mov
jnp
sbb
pause
popf
adc
aam
or
ljmp
mov
jge
mov
pop
fildll
adc
aad
mov
or
or
sub
add
test
mov
push
gs
and
inc
das
fwait
aas
arpl
lock
dec
push
xchg
jmp
cmp
lcall
cli
rol
push
ds
pop
mov
cmp
xor
cmp
mov
mov
add
int3
lods
xlat
aaa
int
inc
mov
push
adc
xor
mov
lock
sub
lods
fdivl
xor
cwtl
dec
inc
inc
dec
inc
inc
add
int
std
push
dec
and
inc
sbb
enter
rorb
arpl
call
jmp
loopne
stc
cmp
inc
inc
xor
xchg
dec
rorb
xor
cltd
fcoml
inc
mov
inc
movsb
mov
xchg
js
stc
bnd
jl
mov
out
or
mov
dec
fs
adc
aas
pop
out
mov
xor
pop
or
xorl
sbb
aas
fdivp
scas
mov
and
ret
stos
sbb
out
scas
popf
jb
xchg
mov
les
pop
loope
pop
or
movsb
sub
or
scas
pop
daa
cmp
dec
aaa
cmp
xor
mov
sub
sbb
add
xlat
pop
arpl
sub
clc
imul
fwait
adc
std
lea
push
std
enter
mov
stos
test
lret
sbb
xchg
fistps
push
push
push
mov
push
mov
jl
out
xor
insb
jae
sub
insl
push
mov
incl
cltd
cmc
mov
and
jmp
dec
lret
dec
popa
ss
adc
in
mov
cld
clc
test
xchg
push
in
lea
icebp
ficoml
dec
sub
mov
stos
ret
std
into
dec
test
dec
pusha
pop
add
xor
dec
inc
dec
lods
fiadds
and
cs
add
sub
test
insl
shlb
mulb
jne
sbb
dec
mov
dec
out
stos
into
sti
rorl
fs
psubsb
dec
lcall
inc
inc
cmp
pop
lret
jmp
mov
and
sbb
cld
xor
out
stos
movsl
mov
pop
sub
jmp
fs
sbb
sbb
sub
nop
jp
push
mov
arpl
mov
push
scas
jae
repz
mov
xorl
lret
cmp
lods
sbb
out
adc
std
jno
cs
xor
ljmp
jg
jp
test
rcrl
mov
pushf
pop
stc
ja
inc
mov
orb
testl
pop
inc
and
ret
add
imul
xchg
adc
inc
sbb
in
or
loopne
cmp
sub
adc
dec
and
in
loope
out
cltd
inc
fnstsw
xchg
jne
lcall
push
je
adc
scas
cmpl
scas
insb
pop
jbe
add
lret
out
popa
stc
xchg
filds
sub
cmpsl
test
xchg
stc
dec
pop
stos
dec
fbstp
hlt
sub
and
les
int3
and
outsl
mov
int
mov
mov
inc
jae
adc
lea
lea
ret
mov
f2xm1
mov
loope
jne
or
jnp
loope
jp
push
xor
add
xor
dec
jmp
jl
popa
push
mov
dec
sbb
lea
sub
fstpl
pop
xchg
scas
pop
shll
mov
dec
aas
pop
sub
stos
cmc
adc
and
int
sub
pop
inc
xchg
loop
add
adc
xchg
cmp
out
out
and
addr16
test
ljmp
out
xchg
push
lcall
lods
push
pop
ss
mov
pop
les
aaa
add
pop
nop
rolb
pop
mov
cmp
call
lea
jae
outsl
stos
xchg
or
fs
jne
aam
sarl
mov
vunpckhps
outsl
fldenv
insl
leave
mov
bound
loope
jecxz
rcrb
inc
je
lods
aad
lock
xchg
repnz
push
pop
add
lahf
std
jecxz
dec
movsl
pop
sbb
loop
sub
push
xchg
outsb
mov
sbb
ss
add
popa
xlat
and
pop
test
pop
xchg
rolb
imul
add
lahf
push
lret
mov
hlt
jecxz
call
xor
jnp
pop
pop
les
xor
xchg
jbe
pop
jge
lods
roll
push
call
imul
jo
hlt
xchg
popa
js
repz
dec
popf
jmp
mov
xacquire
add
cmp
pop
push
and
scas
in
loope
push
stos
data16
inc
mov
sahf
pushf
jg
or
pop
xchg
dec
cmp
psubusw
dec
imull
or
xchg
add
adc
mov
insl
not
push
int3
lahf
cmpsb
rorl
mov
fsubs
sti
or
adc
fimull
fidivrs
mov
xchg
out
fistl
mov
pop
xor
popa
sub
hlt
sbb
mov
js
movsb
fdivl
mul
adc
jg
test
in
jno
orl
adc
test
sub
dec
test
out
aam
sub
les
mov
es
push
pop
repnz
sub
imul
adc
cwtl
xor
fwait
sahf
push
push
xchg
dec
repnz
pop
insb
or
jo
test
push
loopne
pop
daa
pop
sti
mov
sbb
sub
mov
das
je
std
cld
inc
and
daa
pop
dec
mov
les
notb
pop
adcb
cmp
aas
mov
sbb
popf
xchg
outsb
push
cmp
sub
sub
aas
lahf
or
in
imul
pop
stos
inc
out
ljmp
dec
mov
test
int3
or
das
xor
or
loope
fstl
fnsave
cltd
in
test
mov
xor
dec
or
in
imul
xchg
aam
dec
mov
push
push
bound
add
push
aad
mov
pop
lea
data16
clc
cmp
test
in
push
into
lret
popf
enter
and
xchg
adc
adc
mov
or
fcmovne
clts
bound
in
adc
or
jge
cld
mov
imul
mov
cwtl
mov
dec
add
or
loopne
and
mov
lcall
xlat
sbb
xchg
out
in
sbb
fst
insl
cmp
movsl
push
jle
mov
or
loopne
push
cs
cmp
jge
adc
ret
xor
inc
cmp
sub
test
popa
imul
push
fidivs
adc
into
shll
dec
rclb
ljmp
dec
rclb
loop
inc
cli
adc
push
push
lock
cmc
sbb
addr16
loop
icebp
jns
mov
popf
add
cmp
xor
testb
jbe
mov
push
jg
aad
enter
daa
or
sbbl
xchg
push
mov
mov
das
aas
gs
jno
push
scas
mov
mov
movsl
xchg
push
jno
pop
fisttpll
and
inc
pop
iret
daa
in
mov
and
jae
jno
mov
shrl
aas
lock
or
sti
mov
in
add
cmp
in
adc
sub
push
adc
dec
setbe
out
lea
adc
push
cmp
in
pop
xor
das
loopne
leave
lock
movl
xor
mov
inc
lahf
cmpsb
add
ja
adc
loop
cltd
or
jg
sub
clc
sub
pop
xor
mov
mov
sub
enter
ds
sbb
out
jecxz
sbb
lds
sbb
mov
push
addr16
lahf
inc
outsb
and
notb
dec
jecxz
fcom
mov
sub
mov
inc
inc
sbb
mov
out
sbb
mov
es
test
jb
jecxz
lret
dec
adc
int3
sarb
push
mov
ljmp
out
ds
dec
negl
mov
cmp
jmp
add
mov
faddl
xor
sbb
pop
sub
test
sbb
fists
inc
mov
stos
xlat
xorb
scas
cwtl
pushf
xor
insb
or
jmp
add
and
in
pop
mov
sbb
sub
cs
adc
push
cltd
ficomps
loopne
clc
lcall
pop
je
inc
sahf
loop
push
jns
dec
ss
ret
adc
sti
lcall
pop
addb
jle
lods
sbb
mov
push
inc
xchg
jecxz,pn
mov
mov
push
sahf
adc
jp
adc
push
pop
pop
xor
rcl
pop
pop
xchg
popa
jmp
inc
mov
xor
lret
les
inc
xchg
pop
aas
fdivrs
lret
push
scas
arpl
xchg
xchg
ja
subl
leave
sbb
mov
fidivrl
inc
pop
sbb
push
into
bound
inc
std
in
adc
mov
lret
insb
cmpsb
mov
mov
daa
repz
mov
sarb
mov
mov
lret
stos
sub
test
testl
out
mov
cmp
jle
cmp
shlb
dec
and
push
inc
popf
dec
insl
cmp
mov
les
mov
sbb
mov
wbinvd
xor
in
clc
imul
add
mov
iret
idivl
and
jl
into
repnz
push
notl
and
add
aas
in
mov
or
in
sbbb
out
in
or
dec
and
out
adc
sbb
shlb
or
xchg
push
ja
daa
bound
not
and
jp
xchg
leave
and
sub
arpl
popf
adc
mov
adc
fcompl
dec
mov
popa
scas
mov
cmp
aas
pop
xchg
scas
xchg
negl
fcmove
or
mov
lcall
cli
loopne
pop
or
mov
sbb
mov
push
outsb
jp
in
popf
cltd
xlat
std
mov
sub
je
cwtl
icebp
ljmp
jne
sub
mov
lcall
jge
or
mov
es
leave
je
inc
add
ja
test
repnz
cmp
xchg
jmp
ret
faddp
movsb
or
in
movsl
jno
push
push
mov
repz
cmc
fimull
scas
ja
sbb
in
hlt
aam
mov
adc
dec
ret
dec
cmp
mov
fdivl
lock
xchg
xor
pop
ret
push
jmp
dec
pop
mov
cmp
jmp
and
xchg
lock
and
push
xor
dec
ret
add
ljmp
inc
inc
aas
xchg
xchg
xchg
lret
push
mov
cmp
push
imull
add
pop
push
inc
sub
sbb
mov
shlb
fbld
jae
adc
ja
jg
popa
dec
shrl
mov
mov
fwait
iret
or
lds
je
and
xor
or
mov
xchg
xchg
lods
ret
xchg
call
mov
lods
in
mov
jb
xchg
and
xchg
int3
fildl
ljmp
mov
test
mov
pop
cmp
repnz
xchg
aas
sbb
xor
xor
iret
ljmp
jp
xor
add
pop
roll
filds
cmp
stc
testb
add
cmpsb
inc
adc
out
mov
rclb
mov
mov
ret
jnp
icebp
ret
jo
mov
xchg
push
jecxz
sub
ja
or
push
sub
xor
inc
jns
mov
in
lods
sub
in
jp
mov
addr16
or
add
xor
jne
push
test
addb
pop
jge
sub
push
aad
repnz
out
inc
data16
aam
sub
pop
sbb
or
adc
or
aad
sub
fwait
jbe
enter
jp
mov
and
ret
movsl
jge
scas
mov
es
dec
sarl
cmpsl
fstl
cs
psubsw
adc
xchg
xchg
mov
ret
mov
push
mov
cmp
xlat
ss
outsb
outsb
add
push
or
arpl
notb
xor
pop
in
test
jo
ficoml
stos
inc
mov
sahf
lods
test
fistpll
mov
mov
shr
das
jmp
xor
dec
cmp
int3
push
int3
nop
inc
les
jne
sub
sti
xlat
jge
xchg
jmp
push
lods
push
lods
push
lret
pushf
sti
mov
mov
hlt
sbb
insb
pushf
das
sahf
loope
add
js
mov
fdivrl
lds
mov
push
fdivr
and
xchg
xor
test
sub
gs
inc
lds
mov
bound
bound
sub
jno
mov
sarl
inc
ds
mov
loope
js
mov
adc
jns
ljmp
inc
pminsw
jno
movsb
inc
mov
mov
fs
sbb
imul
scas
leave
cltd
xlat
and
lock
pushf
xchg
fistpl
sbb
clc
arpl
out
push
mov
iret
scas
cmp
sbb
divl
and
fdivrl
divl
dec
loope
cmp
clc
idivl
jo
pop
cmp
aas
rcl
xchg
push
stos
jne
sub
movsb
cmpsl
imul
cli
jp
hlt
and
push
dec
mov
dec
jp
xchg
inc
addr16
and
xchg
outsl
jno
push
xchg
inc
mov
popa
adc
dec
xor
nop
inc
xchg
vmwrite
push
adc
mov
loopne
test
push
stos
lods
add
test
inc
inc
movsb
ret
mov
imul
adc
pop
lcall
loope
and
xchg
lock
test
mov
les
dec
inc
insl
mov
jo
imul
pop
push
fs
lods
pop
ret
iret
pop
push
ret
std
cmpsb
je
xchg
hlt
mov
adc
adc
pop
js
fildl
push
mov
pop
subb
jo
cmp
ret
push
or
or
mov
xchg
gs
mov
movsl
sbb
adc
ss
add
loopne
jle
cmp
cmc
std
pop
cltd
jnp
sbb
push
and
sub
rcl
inc
pop
inc
pop
pushf
js
xor
and
push
int
inc
aas
orb
sbb
sbb
stos
aaa
das
icebp
add
mov
mov
cmp
sub
push
pop
fsubrl
inc
pop
icebp
xchg
inc
cmpsl
imul
jo
ret
out
jno
push
mov
xchg
jbe
xor
sbb
push
dec
in
mov
xchg
mov
cmpsl
jnp
cmp
insb
imull
out
dec
xor
sbb
xor
lahf
push
shll
pop
add
sbb
jle
das
mov
cmp
push
cwtl
jb
aam
jle
pmullw
out
leave
jbe
mov
inc
xchg
ficoms
je
jp,pn
ret
cmp
inc
cmp
or
mov
pushl
rol
ljmp
push
jae
popa
jo
xchg
inc
xchg
rcr
add
push
push
fsub
inc
popa
adc
pushf
sub
push
cmp
movsb
add
xchg
pop
inc
movsl
ret
xchg
xor
pushf
sbb
jns
in
aaa
decb
lods
imul
aad
sti
add
insl
sub
inc
mov
sbb
stos
cmp
jne
sub
xor
out
dec
nop
inc
push
iret
jnp
leave
fiaddl
lret
sbb
aas
xchg
icebp
xchg
scas
cs
adc
xlat
addl
int
jbe
lret
aas
jle
mov
push
dec
out
adc
cwtl
call
outsb
out
ss
lea
mov
mov
outsl
dec
and
cmp
sti
in
add
mov
mov
aam
and
lret
adc
cmp
fdivr
and
push
jge
stos
sbb
stc
stos
fs
jmp
pop
adc
sbb
shrl
push
cmp
lods
adc
pop
mov
push
push
adc
dec
rolb
loope
sbb
mov
and
rcrb
inc
mov
ret
nop
add
add
pop
mov
fcomip
xchg
inc
sub
nop
adc
mov
lret
sbb
push
mov
add
out
cwtl
xlat
pop
mov
push
fcmovu
push
sub
xor
jl
pop
pop
orb
ret
data16
repnz
int3
pop
int3
and
out
and
push
push
lea
mov
push
es
mov
lock
xchg
arpl
aam
ja
xor
jmp
insb
xchg
dec
push
mov
ds
xlat
sahf
adc
pop
mov
insb
xchg
cmpsb
fdiv
pop
jo
pop
pop
xchg
jne
jne
add
out
shll
sbb
sub
outsb
mov
xor
adc
loopne
xchg
rclb
cmc
leave
mov
cmp
inc
jns
bound
jl
clc
int
arpl
xchg
and
outsb
jle
lret
adc
or
std
mov
inc
in
pop
mov
lods
jg
ret
cmp
in
out
out
pop
inc
icebp
add
movsl
inc
ds
xor
sub
push
xor
scas
inc
test
cs
dec
in
push
sub
mov
xor
mov
adc
adc
ds
int
sbb
jp
push
and
ss
mov
outsb
push
sahf
out
in
adc
ja
dec
ljmp
jp
xor
dec
inc
adc
lods
cwtl
lret
scas
hlt
fwait
jnp
shlb
mov
stos
test
roll
fcompl
stos
cmpsb
sbb
mov
shrl
jl
pop
add
mov
jg
lea
inc
sbb
mov
pop
leave
push
cmp
jmp
or
imul
push
jl
pop
jl
jne
cmp
mov
pop
sub
sbb
add
lock
push
jmp
ljmp
push
jbe
xor
cli
into
push
adc
mov
inc
and
imul
in
fisubl
shrb
bound
lods
shr
or
cld
aas
jp
test
dec
sub
imul
pop
in
inc
jp
pop
dec
mov
into
leave
faddl
mov
int
push
orb
dec
in
cmc
insl
and
add
pushf
lods
jb
xor
fnstsw
mov
cmovo
pop
repz
test
dec
in
dec
mov
push
push
popf
push
enter
cli
inc
sahf
sub
xlat
pop
repnz
fs
sub
cmp
pop
mov
ret
mov
or
sbb
add
or
adc
xchg
iret
push
mov
push
sti
aas
out
stos
adc
mov
mov
xchg
fidivs
nop
ret
cs
stos
stos
cmp
out
dec
movsl
push
cmp
pop
clc
fldl
adc
mov
mov
sbb
pop
push
and
test
or
pushf
xchg
cmp
fwait
out
repz
enter
fucomip
cli
loope
jl
or
xchg
mov
pop
or
pop
cmp
push
aam
cmp
popa
sub
mov
insb
pusha
dec
ret
ja
xchg
jne
add
mov
xor
sbb
push
addb
sub
incb
sbb
pop
xchg
mov
mov
push
mov
ror
push
xor
out
leave
ret
popa
adcb
loop
inc
push
iret
mov
push
insb
sbb
cs
je
dec
cmp
fadd
push
adc
les
insb
xlat
hlt
sbb
in
mov
xchg
fnstcw
ds
pop
mov
push
orl
xlat
xor
mov
mov
jl
dec
lds
add
jb
xchg
hlt
sub
and
scas
les
pop
sbb
loopne
icebp
or
xor
in
jecxz
pop
les
fldt
jae
sub
mov
adc
aad
pop
jmp
add
fstps
shl
dec
mov
sub
lea
add
push
push
ret
dec
divps
fwait
sbb
or
inc
fisubs
xchg
rcrb
inc
xor
push
inc
push
sbb
dec
inc
data16
cs
push
imul
ds
adc
push
mov
jge
gs
ja
add
cmpsl
mov
das
mov
loope
adcl
sti
shrl
mov
sbb
dec
pop
mov
inc
add
dec
daa
mov
adc
jge
icebp
aam
push
sbb
dec
xchg
js
pushf
xor
push
in
dec
or
les
call
bound
inc
inc
lcall
push
jno
je
or
movsb
movsl
xlat
fsts
shlb
mov
jecxz
stc
movl
rorb
pop
sub
push
ljmp
push
pop
out
mov
or
sub
loop
xchg
sbb
and
lcall
add
xchg
daa
mov
and
jns
fldt
jae
xor
inc
popf
jl
notl
shl
or
cmpsb
adc
push
jnp
mov
lea
pop
je
outsb
adc
cmp
sub
jmp
sbb
js
int
and
leave
and
insl
std
pusha
add
arpl
mov
insb
repnz
jae
or
sahf
les
xor
lock
mov
sbb
xor
test
push
mov
dec
les
add
pop
xor
ret
stc
sub
lds
clc
enter
xchg
xchg
xorl
mov
je
pop
sbb
cmp
sub
fstpt
pop
arpl
fwait
lock
and
push
push
inc
test
adc
lods
xorl
idivl
and
in
scas
sbb
jg
cmp
ret
or
pushf
stos
jge
xlat
cmp
ret
pop
mov
mov
cmp
inc
add
jp
xchg
ficompl
xchg
pop
fiaddl
pop
push
leave
arpl
push
dec
adc
cmp
inc
push
pop
or
ja
mov
pop
push
mov
popf
push
lcall
cwtl
orb
xchg
inc
sbb
mov
pop
mov
test
pusha
and
inc
sar
nop
xchg
call
dec
lret
repz
jge
or
jb
stos
mov
popa
pop
rorl
fcoms
sub
inc
rcrl
es
xor
and
lds
push
cmp
lods
mov
in
fs
mov
xchg
cmp
repnz
mov
inc
adc
pusha
and
add
push
sbb
pushw
mov
test
sub
imul
mov
lods
cmpsl
lds
cmp
test
jno
and
cld
jae
push
flds
mov
fdivl
or
sub
repnz
icebp
scas
adc
sub
shlb
xchg
inc
int
or
call
mov
xchg
mov
cmpsl
fdivrl
lods
aad
inc
shll
lods
lret
jge
out
ljmp
mov
call
pop
outsl
in
push
inc
out
decl
add
jb
pop
pusha
inc
aaa
xor
sub
sub
adc
jns
popa
sbb
mov
xor
xchg
push
sbb
mov
mov
roll
cmp
sub
lock
lea
jecxz
xchg
popa
lock
mov
andl
sub
insb
out
mov
mov
test
jge
sbb
sarl
push
xchg
mov
sahf
ret
sub
into
icebp
xchg
adc
bound
icebp
test
push
sbb
adc
testb
xchg
adc
dec
sbb
ljmp
sbbl
push
or
fists
out
sub
xor
lds
lahf
out
rcrb
roll
pop
test
mov
fwait
int
frstor
sub
ljmp
cmp
push
add
pop
sub
and
mov
mov
cltd
mov
dec
leave
mov
and
outsb
rep
add
lcall
mov
sub
mov
jno
adcb
cli
lock
inc
shl
enter
cmp
push
mov
mov
or
mov
lahf
bound
imul
test
mov
push
push
jb
mov
iret
jbe
mov
jecxz
clc
ret
test
movsb
sbb
mov
rclb
ds
insl
sub
sahf
jle
out
adc
push
lock
jb
incb
outsb
lods
jge
lret
subb
loop
or
aad
push
loop
ds
jecxz
insl
movsb
adc
cmp
movsb
xchg
stc
cmp
pop
or
jo
push
xor
push
pop
and
leave
aam
daa
xchg
insl
popf
lahf
aaa
jp
pusha
sahf
lret
shll
xchg
push
sarb
jnp
call
dec
cmp
adc
shrl
mov
pushf
daa
pop
or
shr
lds
jae
mov
mov
loopne
lret
addb
scas
aam
sbb
iret
adc
cmp
xchg
xchg
out
lods
push
adc
inc
mov
into
sti
adc
cld
insb
lods
sub
sub
sbb
insb
lds
jge
and
sbbl
inc
scas
pop
mov
movsl
aam
ret
push
hlt
mov
aas
cli
sub
jecxz
and
nop
xor
and
jb
push
sub
mov
mov
dec
stos
push
xor
and
fnstenv
xchg
icebp
jp
dec
test
sub
jne
ss
fldcw
int3
push
mov
inc
ss
lret
cmp
fsubrl
dec
scas
inc
fs
add
divl
or
shlb
pop
mov
xchg
or
jo
push
fs
aaa
push
leave
rcrb
stos
push
movsl
or
xchg
and
int3
aad
jecxz
testb
jl
std
add
mov
insl
pusha
adc
test
xor
mov
sbb
jbe
orl
pushf
mov
out
mov
sahf
mov
add
add
leave
pop
and
outsl
xor
inc
loop
std
xor
mov
push
js
sbb
push
inc
arpl
mov
adc
test
cmp
fsubl
js
pop
ja
cmp
push
sbb
mov
dec
jne
in
lret
mov
cmp
addl
lret
lds
mov
popa
outsb
in
mov
and
add
push
imul
cmc
mov
cmp
push
mov
push
jmp
fimull
aaa
mov
dec
jbe
jecxz
mov
adc
fisttpl
std
out
dec
rcrl
jecxz
mov
xchg
xchg
sub
xlat
xchg
fnstsw
lahf
sub
cmp
pushw
mov
movsl
push
test
dec
mov
shrb
loop
lods
and
out
jno
ljmp
jmp
cli
repz
or
loopne
shl
pop
fs
clc
es
jmp
popf
fdivrp
es
repnz
nop
call
mov
scas
pop
xchg
add
int
xchg
push
pushf
push
imulb
dec
sbb
lret
mov
cmp
sti
lret
fisubl
mov
lret
out
add
negb
incl
ret
mov
call
aad
sub
cmp
xlat
test
std
es
fs
mov
shrb
in
repz
test
or
mov
or
lock
test
lods
push
xchg
stos
loopne
rolb
sbb
leave
je
cmpsb
adc
sbb
sbb
dec
fwait
inc
leave
cwtl
not
fnstsw
cltd
dec
or
jp
clc
dec
and
cmp
cmp
sarl
andl
pop
int3
loop
lret
ja
jne
mov
add
roll
loopne
cmpsb
fstpt
or
push
aam
repnz
jbe
mov
inc
into
enter
in
jl
fimuls
jno
in
ds
ja
push
jne
cmp
push
jns
addr16
ljmp
dec
hlt
iret
cmp
add
into
jle
mov
xorl
xor
xchg
scas
sub
mov
test
das
icebp
cmc
in
pop
repnz
insl
mov
and
scas
stos
les
mov
or
mov
sahf
testl
inc
and
loopne
push
aaa
mov
mov
xor
lahf
mov
cli
imul
lret
or
mov
lods
cld
dec
fistpll
ljmp
xchg
out
sti
scas
out
scas
mulb
add
insb
cmpsb
pop
imul
sub
mov
mov
adc
mov
loop
aas
movl
jge
sub
out
in
sbb
bnd
scas
xchg
push
sbb
pop
mov
xor
pop
fs
arpl
push
repnz
rcll
dec
jo
lds
mov
add
push
and
aas
xor
nop
mov
add
pusha
mov
inc
fldl
maskmovq
idivl
stos
jno
pop
mov
jne
int3
dec
fadds
adc
int
aad
jge
adc
push
pop
lahf
aas
or
push
mov
lock
pop
nop
stos
inc
inc
loop
and
into
sub
cmc
ss
test
es
or
hlt
pop
shll
mov
roll
cmpsl
loopne,pn
movsb
mov
iret
xlat
jge
popf
sbb
jmp
imulb
and
pop
jl
pushf
inc
sbb
loope
rcr
fldcw
loop
ret
sub
and
mov
xchg
fs
fistps
mov
mov
ret
mov
jb
fwait
outsb
inc
pop
jnp
and
mov
xor
bound
push
das
lds
lock
ja
js
cmp
push
inc
push
push
mov
std
lcall
xor
pop
incl
leave
and
movsb
arpl
pop
cli
mov
mov
push
sub
jno
sbb
add
pop
fcoms
mov
sub
pop
pop
xlat
insl
mov
adc
mov
mov
iret
push
mov
insl
fisttpl
outsb
dec
sub
jne
mov
xor
xchg
dec
cmp
scas
sub
cld
sbb
call
mov
in
test
lods
pop
btr
push
ja
in
loopne
das
pop
rorb
mov
lods
popa
fldenv
pop
adc
sarb
icebp
loopne
icebp
ljmp
scas
mov
lahf
dec
xchg
sub
xor
mov
mov
arpl
cmp
push
push
addr16
jno
mov
xchg
push
ret
movsb
cltd
loop
loope
test
mov
mov
cwtl
add
add
in
out
nop
jbe
pusha
cmpl
test
loope
sarb
insl
inc
ror
sub
leave
lock
sbb
nop
or
mov
arpl
outsl
test
mov
fwait
or
lcall
nop
mov
cmp
out
out
lahf
xor
pop
mov
and
mov
in
and
xor
daa
xchg
std
xchg
aaa
aas
cmp
jge
psllw
push
pop
inc
fs
js
cmp
lea
adc
dec
mov
into
clc
repz
dec
cltd
arpl
jge
add
out
enter
mov
andl
std
cmp
mov
mov
int
cmpsl
sbb
cltd
cmp
lods
outsl
jb
sub
fwait
mulb
sahf
or
inc
movsb
and
shll
xchg
rcrb
cmc
push
arpl
adc
enter
add
movsb
xchg
and
and
into
mov
add
add
cld
test
cs
aad
push
das
mov
mov
sbb
sub
imul
and
mov
mov
mov
jns
pop
mov
test
jecxz
dec
scas
mov
jno
ret
jecxz
jnp
ja
js
pop
xchg
stos
popf
mov
cltd
mov
jbe
dec
jno
xchg
icebp
add
repnz
nop
push
pop
cs
mov
dec
xchg
jae
adc
mov
jne
movsl
cmp
ja
sbb
bound
pop
lea
ds
dec
sbb
push
jae
jecxz
xor
add
ret
adc
mov
or
lods
xor
sbb
es
out
cmpsl
aam
cmp
negb
adc
je
test
mov
push
and
ficoms
or
mov
ucomiss
into
push
pop
mov
sub
hlt
jne
or
and
add
xchg
sbb
shlb
out
mov
push
sub
pusha
push
pop
into
fidivl
dec
xchg
sti
and
lds
or
negb
aaa
pop
inc
idivl
sbb
mov
push
and
push
stc
mov
stos
scas
push
and
inc
add
cmpsl
arpl
aad
aaa
daa
sub
mov
popa
mov
icebp
imul
push
pop
jae
pop
insb
fstpt
lods
sbb
ficoml
xor
dec
push
mov
dec
inc
bound
addl
ret
pop
adc
jnp
fdivl
out
int
pusha
fcomps
insb
rol
repz
inc
mov
sub
xor
imul
out
and
jb
fdivrl
dec
in
push
scas
pop
call
lods
ret
adc
mov
dec
push
push
cmp
clc
addl
add
out
jno
push
daa
mov
sub
dec
mov
jl
cmp
mov
or
jb
dec
and
lods
sbb
ljmp
iret
les
lods
sub
fcoml
je
das
scas
pop
cmpsl
push
lcall
dec
popa
std
adc
lock
cmpsl
add
fdivl
or
outsb
dec
movsl
xchg
lcall
pushf
sarb
in
repz
jg
mov
into
sub
cmpsb
inc
out
js
push
dec
and
sub
sbb
sub
xchg
lret
jne
loopne
xchg
cmpsl
cmp
sub
pop
xchg
or
loop
sub
cmc
aas
push
pushf
jae
inc
sub
mov
out
jnp
fs
push
pop
aas
in
outsb
push
and
pop
negb
aam
jns
sbb
inc
lods
xor
push
push
xchg
or
add
ret
sbb
mov
ljmp
adc
xchg
js
test
stos
test
mov
dec
int3
sub
adc
inc
xor
xchg
add
call
inc
sbb
ljmp
push
dec
ret
add
scas
leave
test
and
pop
jne
fstp
mov
xchg
cmp
inc
pop
mov
or
cld
in
mov
xor
ja
inc
shll
push
jp
aad
pop
rcrl
mov
aam
sahf
jp
std
aad
add
or
mov
jo
jne
pop
in
lret
mov
stc
cltd
in
flds
adc
cmp
jp
scas
cltd
cmp
movsb
adc
add
ret
cmp
mov
mov
pop
lret
sbbl
xchg
lods
leave
outsb
jle
xor
data16
into
push
lahf
decl
xchg
xchg
cmp
dec
in
pop
push
mov
add
stc
jmp
sbb
or
ds
adc
cmp
dec
mov
test
neg
inc
push
xor
push
push
fimull
loope
pop
in
mov
xchg
mov
mov
outsb
sbb
test
xorb
sub
push
jns
jge
mov
pushl
jae
repnz
repnz
ret
xchg
out
cmp
imul
pop
sbb
xchg
aad
sub
xor
pop
mov
outsl
pop
sarb
aaa
lret
and
lret
cwtl
int
cmp
out
addr16
aad
js
xor
popf
dec
mov
imul
adc
jae
test
jl
sbb
pop
fwait
adc
or
mov
xlat
jge
push
dec
test
aas
dec
or
or
and
push
or
into
mov
rcrl
or
rorb
rorl
push
mov
int3
push
movsl
jbe
push
and
mov
ud1
xchg
in
dec
jae
sbb
fstp
dec
add
xchg
mov
out
pusha
mov
in
sti
pop
cmp
scas
cltd
sarl
push
std
mov
and
cmp
leave
cmpsb
xchg
inc
mov
out
negl
mov
xor
xchg
movsl
out
fildl
mov
scas
inc
cmpsl
sbb
pop
cli
lock
mov
enter
cwtl
inc
add
xchg
sub
sbb
gs
pop
mov
rol
cmp
shl
popf
jne
mov
sub
test
add
aam
ss
add
jnp
stos
xchg
jo
and
shlb
push
cmp
fisttpl
and
clc
sub
sub
push
and
inc
insb
jge
cwtl
add
or
xor
daa
push
dec
cltd
mov
inc
sbb
or
enter
xor
nop
stc
mov
xor
push
stc
rep
pop
out
sub
xor
mov
rorl
lahf
mov
push
lahf
test
repnz
sti
push
add
push
jg
shl
jbe
add
into
loopne
aas
dec
aaa
jmp
ja
bound
nop
iret
adc
sub
add
into
arpl
mov
aas
mov
push
sub
jg
gs
push
lret
lret
imulb
pop
cmpsl
and
xchg
loopne
fbld
into
mov
lahf
add
outsl
push
push
arpl
dec
les
ror
xchg
push
out
jne
sub
ficoms
ss
stos
incl
adc
mov
mov
es
movsl
lds
iret
ljmp
push
inc
imulb
pop
repz
xor
addb
inc
mov
pop
out
ljmp
dec
nop
std
pop
mov
and
popf
cld
aam
cmp
cld
add
lcall
jns
cmp
sbb
pop
icebp
push
add
pop
out
fcmovb
imul
lock
mov
xchg
sbb
subl
rorb
cmp
cli
adc
add
jno
test
xchg
je
out
orl
shr
aam
mov
mov
in
push
orl
repz
mov
and
xchg
das
enter
dec
je
push
cmp
icebp
or
cmpb
or
pop
shll
fstl
loop
bound
popf
dec
sti
pushf
sub
bound
push
mov
and
cmovae
hlt
scas
movsb
outsb
les
mov
loop
jp
xor
sub
lret
icebp
lret
std
sub
dec
fs
mov
dec
fcomps
dec
sbb
cmp
out
mov
int
xlat
lds
jns
cmp
adc
cmpsb
jns
xchg
mov
jmp
push
cwtl
test
push
test
cli
inc
mov
mov
xchg
jle
inc
jecxz
mov
cmp
xchg
test
imul
and
xchg
gs
push
xchg
xor
and
pusha
adc
ljmp
lea
scas
sbb
movsb
loopne
or
push
lds
jns
lds
cltd
insl
pop
aam
mov
cli
ficoms
cmpsb
jge
cmp
jb
sub
scas
rcrb
dec
push
and
sub
cmp
xorl
ss
xchg
xchg
sub
gs
movsb
out
jns
pop
push
out
enter
mov
xor
xchg
aaa
or
pushf
jp
ja
jp
push
in
aaa
mov
in
aam
push
lds
pop
mull
clc
in
nop
xchg
shll
pop
imul
fs
and
or
leave
push
xchg
incl
pop
cltd
ja
pushf
cli
js
stc
dec
nop
popa
push
movsb
imul
mov
add
push
outsb
daa
inc
pop
cli
and
stos
cmp
popf
mov
addr16
popa
lea
jo
outsb
into
or
xor
sbb
adc
push
push
fistpl
cli
lcall
aas
out
lret
das
inc
fildl
push
inc
push
adc
cmp
xor
cmp
push
inc
jp
out
adc
pop
adc
mov
mull
mov
lock
jae
push
and
rcll
adc
outsl
jo
es
repnz
sbb
cmpb
cmp
aas
jmp
mov
cli
enter
insb
push
fsubrs
mov
jge
jbe
push
dec
daa
pop
fnstenv
mov
adc
push
jne
mov
gs
hlt
call
dec
xchg
scas
daa
and
cmpsl
call
scas
jae
sub
outsb
and
ja
clc
sub
lcall
nop
lret
xchg
cwtl
mov
loopne
mov
orb
pop
les
pushf
roll
js
mov
cmp
test
xchg
rolb
stos
sar
xchg
cmc
mov
ret
xlat
sbb
push
test
iret
adc
jb,pn
dec
insl
or
jle
mov
dec
test
cs
add
cmp
mov
insl
or
mov
sbb
and
xchg
test
push
arpl
out
iret
mov
push
test
push
andl
in
mov
or
jae
mov
adc
les
lret
fcompl
or
shl
pop
sbb
inc
mov
jo
or
pop
mov
cmpb
mov
mov
mov
into
cmp
pop
scas
push
dec
les
rolb
jge
pop
mov
jl
insl
push
pop
add
jae
int3
cmp
insb
adc
jle
test
mov
sbb
jg
xchg
mov
jns
gs
pop
cmpsb
xchg
xchg
jmp
push
xchg
lds
inc
lea
ror
test
mov
xor
and
sbb
clc
ds
pop
jle
out
test
xorb
stc
aaa
or
frstor
adc
jp
and
cmpsb
mov
add
or
jbe
and
shl
nop
mov
push
rcll
je
cmp
dec
das
push
push
push
mov
out
iret
fcmovnb
mov
pop
jb
sbb
ds
out
xchg
scas
jne
inc
cmp
popf
lods
add
icebp
mov
mov
rorl
bound
jo
pop
aam
in
test
mov
sub
jecxz
fidivrl
in
pop
mov
sub
sub
mov
fiaddl
arpl
push
sarl
imul
aad
xlat
jge
sbb
cmpsl
xchg
add
sti
lcall
pop
push
shll
call
pop
out
out
dec
scas
push
rcrl
dec
and
mov
adc
std
pop
dec
dec
sub
add
jns
jmp
adc
loop
xlat
inc
icebp
pop
cmp
aad
jge
shrl
cld
sbbb
mov
dec
sti
test
jp
out
scas
push
sbb
pop
lret
mov
push
xor
sub
sbb
lds
fsubrs
mov
push
test
loop
xchg
test
xor
jle
test
lret
or
xor
jns
pushf
cmpsb
push
and
sub
pop
roll
xlat
xchg
sarb
add
lods
mov
daa
dec
adc
dec
fists
out
mov
arpl
dec
jmp
adcl
jbe
cmp
xor
inc
movsl
jo
mov
push
fldl
jae
test
sub
in
jnp
es
stos
scas
mov
dec
negl
mov
jmp
push
pop
cwtl
xor
pop
push
jo
jb
je
pop
cmp
pushf
clc
les
xchg
push
inc
lock
sbb
ret
inc
lcall
test
sbb
jns
sub
test
roll
scas
xchg
jg
outsb
mov
and
add
push
jnp
bound
test
in
bound
outsb
std
fs
js
jecxz
add
insl
adc
iret
pop
outsl
xchg
cmpsl
push
movsb
ret
repz
sbb
out
xchg
mov
lea
mov
mov
mov
and
mov
push
hlt
inc
cmpsl
pusha
les
xchg
rolb
daa
jno
sarb
sbb
test
js
icebp
push
scas
fs
push
and
dec
scas
jne
fldcw
lret
loop
sbb
xor
in
cmp
sub
rolb
pop
jns
mov
adc
pop
mov
jae
pop
testb
pop
neg
jnp
add
jp
sbb
das
jmp
not
sbb
xor
andl
call
jo
push
imul
in
xchg
mov
fnstsw
enter
mov
push
dec
xchg
jbe
loope
out
jmp
test
scas
divl
ljmp
pusha
dec
cmp
test
insl
fsubrl
test
or
das
lcall
pop
adc
movsl
cmp
popa
test
xchg
out
xchg
lods
jo
sub
sti
repnz
fbld
add
push
imull
stos
insb
imul
cmp
cmp
stos
inc
lahf
adc
sub
fisttps
mov
out
or
or
mov
out
cmpl
xchg
xor
mov
and
scas
xchg
sub
out
mov
xor
xchg
arpl
xor
inc
enter
dec
push
inc
sbb
mov
mov
hlt
ret
stc
mov
mov
daa
test
lock
loope
add
mov
dec
pop
and
pusha
lahf
jne
xor
repz
push
mov
icebp
sbb
add
push
adc
jb
stc
xchg
mov
mov
push
stos
jecxz
jo
fwait
cmp
rolb
push
adc
repnz
adc
jno
out
push
or
xchg
mov
sub
adc
add
jno
mov
fnclex
xchg
mov
xchg
das
enter
mov
sub
test
sbb
outsl
sbb
or
inc
xchg
mov
enter
mov
sbb
jecxz
movsb
cmp
fdivr
sbb
push
orb
inc
pop
xorl
or
out
ss
jmp
lods
leave
push
nop
movsb
insl
inc
js
sub
cmp
jg
out
cmp
pop
fldcw
lahf
jmp
addl
sub
or
lret
mov
or
mov
mov
pop
pop
push
xchg
mov
addl
orb
clc
mov
ja
add
and
popa
aas
aad
incb
ss
and
adc
jmp
insb
popa
out
fidivrl
lods
mov
shrb
lods
jno
aad
insl
mov
rcrl
sbb
pop
int3
pop
cmp
cmp
xor
add
jmp
inc
add
jmp
mov
insb
sbb
sub
loopne
popf
jns
bound
loopne
mov
push
ds
lcall
cltd
pop
cmp
mov
into
inc
das
xchg
add
sbb
loope
push
shlb
xor
movsl
or
daa
dec
es
sbb
inc
xchg
jle
jp
dec
pop
test
cmp
mov
dec
test
mov
inc
lret
scas
xchg
mov
sub
inc
and
adc
cmp
mov
inc
cmc
rorb
test
adc
out
scas
xor
dec
cmc
out
lea
stc
int3
sub
dec
sbb
fstps
stos
push
lock
aaa
ja
inc
or
addb
out
out
or
xchg
aaa
aam
int
mov
cmpsl
wrmsr
ret
outsl
clc
daa
dec
test
mov
or
jns
lods
push
movsl
lods
call
jns
xchg
cmc
sub
sbb
mov
sub
xchg
sbb
xchg
out
mov
dec
push
dec
ds
outsl
xchg
loop
fimull
out
push
push
dec
dec
lret
mov
inc
sbb
in
inc
shr
mov
sahf
and
leave
in
call
dec
pop
sub
xchg
out
or
cltd
hlt
icebp
and
mov
mov
into
mov
sbb
mov
mov
dec
xlat
bound
cmp
jg
jns
lds
mov
sahf
mov
sbb
sbb
jae
sbb
ror
in
mov
push
scas
scas
in
adc
pop
cmp
jmp
mov
add
test
dec
pop
subl
add
cli
cmpsl
adc
dec
sub
nop
fs
into
movsb
aas
lds
into
lea
ficomps
add
inc
pop
lods
lods
sbb
test
mov
push
pavgb
pop
iret
mov
adc
push
ret
data16
mov
nop
ja
or
or
repz
enter
popf
xchg
xchg
addr16
dec
test
add
inc
sti
adc
fisubs
or
cli
int3
jl
hlt
in
je
in
push
ss
call
or
cs
mov
pop
mov
sbb
mov
sub
sub
fcomps
fldenv
into
cmpb
add
das
je
lahf
out
jae
sbb
std
inc
cmpl
int
sahf
jb
push
pop
push
dec
xor
push
sti
test
push
fmul
loop
cmp
mov
pop
in
add
push
add
or
and
mov
sub
mulb
scas
xchg
mov
push
pusha
mov
mov
dec
push
adc
aam
cmp
cmp
and
stc
adc
out
push
sub
inc
push
js
pusha
push
jns
push
jecxz
jmp
pop
scas
out
xchg
test
ret
mov
mov
outsb
xor
insb
fildll
lcall
and
pop
dec
push
xchg
and
add
xchg
icebp
sbb
ljmp
iret
adc
cwtl
enter
push
inc
dec
negb
imul
in
stos
jae
jns
out
or
mov
jge
pop
addr16
add
test
mov
lea
aad
or
int
lret
pop
mov
sub
ret
out
sbb
inc
out
jne
loop
ds
aad
jp
adc
xchg
jbe
pop
pop
orb
inc
mov
sbb
notl
mov
loopne
xchg
outsl
sub
dec
cmp
mov
je
push
inc
pop
ja
loop
movsb
add
ficomps
scas
aas
repz
mov
or
sub
push
xchg
pop
pinsrw
sub
cwtl
adc
pop
cmp
lss
add
jne
adc
dec
adc
xchg
cmp
or
xchg
lret
dec
pop
push
pushf
xor
test
decb
lods
pop
pop
adc
adc
jo
bnd
xchg
hlt
add
push
pop
test
jae
cmp
adc
orl
sbb
hlt
mov
mov
xchg
sub
dec
cmp
add
push
push
pop
std
mov
push
adc
mov
loope
push
cld
outsb
add
push
cmc
cli
xor
aad
push
ret
mov
xchg
mov
add
push
dec
lret
cs
divb
and
fisttpl
inc
pop
into
dec
loopne
add
imul
nop
jmp
aad
out
outsl
sub
jl
sbb
mov
imulb
scas
push
stc
xchg
mov
add
sub
sbb
inc
cmpsb
xchg
xchg
xchg
jb
xor
mov
out
xor
fidivrs
loope
jne
xor
rcll
lods
or
cmp
cmpsb
push
iret
test
mov
out
pop
sbbl
mov
xor
adc
popa
sbb
add
lret
ficomps
rcrb
sbb
test
fsubs
xorl
push
inc
adc
xchg
fs
in
adc
xchg
mov
adc
sbbl
push
fldln2
pusha
xchg
cmp
xchg
jmp
incb
fisubl
movsl
pop
daa
outsb
mov
nop
arpl
data16
stos
cmc
fs
sub
lods
inc
jge
int
fsubr
xor
cmp
jecxz
xchg
mov
add
inc
adc
push
push
jl
lea
mov
pop
dec
ss
imul
pop
jg
adc
ds
pop
fs
and
pop
sbbl
shrb
push
pop
imul
xorl
adc
and
fdivl
push
test
xlat
popa
fwait
push
mov
out
addr16
outsb
loopne
push
mov
test
jo
mov
sbb
outsl
sbb
stos
inc
rorl
and
daa
mov
aam
push
repnz
xchg
mov
jl
jne
cltd
sbb
shll
xor
add
ljmp
pop
xor
fiaddl
push
mov
fidivl
jmp
or
mov
mov
inc
inc
mov
aam
cltd
int
mov
aas
jns
jecxz
inc
push
test
dec
push
fcomps
sbb
adc
aad
push
rorb
xchg
jmp
daa
xchg
mov
lock
out
movsl
pop
inc
mov
popa
sub
jbe
test
jne
mov
lods
jnp
shl
sbb
adc
inc
int
push
aas
and
jecxz
cli
data16
outsl
data16
mov
push
sahf
cmp
jns
lods
pop
jmp
cld
mov
mov
push
inc
cwtl
mov
pop
push
aad
aaa
or
fxch
leave
dec
lcall
jecxz
test
test
adc
inc
fldt
jmp
aam
sahf
or
mov
mov
out
mov
fmulp
je
in
pop
icebp
push
dec
lock
xor
cmp
mov
sti
xor
scas
push
mov
push
or
dec
cmp
mov
sar
push
pop
pop
insl
pop
lret
cmp
test
push
outsl
or
lds
and
pop
rolb
hlt
inc
test
xor
or
iret
in
lcall
cwtl
mov
lahf
in
in
jmp
adc
sub
jb
push
adc
sbb
or
pop
movsb
testb
or
lock
aas
pusha
inc
mov
cmp
mov
jnp
ret
push
jae
dec
imul
sbb
sbb
inc
nop
clc
mov
inc
mov
or
out
add
xor
jmp
sbb
pop
test
lods
or
call
incl
into
stc
stos
scas
fdiv
imull
jne
jno
test
les
sbb
pop
testl
sub
je
ret
sarl
pop
sub
bound
push
ret
inc
push
dec
outsb
lret
inc
push
lret
jmp
mov
cltd
adc
mov
cmc
push
mov
jne
loope
jnp
or
fs
int
sub
xor
out
add
xor
leave
pop
orb
adc
enter
rolb
xor
cmp
mov
push
pop
mov
cmp
lret
push
icebp
aad
dec
mov
cmp
and
subb
mov
gs
sbb
xchg
inc
sbb
outsb
loop
add
aad
aaa
lahf
pop
arpl
addr16
sti
adc
jno
mov
push
jne
push
movsb
rorb
or
mov
lret
pop
je
add
movsl
xchg
add
call
idiv
shlb
push
sbb
jg
inc
rcrb
and
out
mov
push
imul
jp
les
lret
repz
outsl
ljmp
jnp
stc
adc
out
cli
xor
lcall
fwait
xor
lret
bound
imul
add
add
jmp
xchg
int3
dec
jbe
inc
enter
jle,pn
cmp
push
pop
test
shlb
imul
mov
aam
mov
push
xor
jle
mov
outsb
add
cmp
and
aam
adc
shll
stos
lret
lret
lret
sbb
in
push
stos
int3
xor
imul
gs
add
mov
imul
icebp
ja
jo
lahf
rolb
andl
push
mov
stc
xor
into
es
push
data16
jno
rorl
pop
mov
lret
je
mov
mov
or
inc
jno
cmpsl
sub
mov
cwtl
lock
movsl
add
xor
out
jo
dec
or
sbb
movsb
xchg
movsl
out
mov
mov
dec
jb
mov
push
popa
cmc
cs
ret
sub
sti
in
sahf
add
or
pop
sti
mov
add
mov
xchg
push
in
push
mov
push
push
daa
stc
and
out
les
mov
rcr
adc
inc
xchg
pop
arpl
and
xchg
and
out
adc
mov
and
ds
sbb
test
sbb
dec
sti
and
subl
lds
das
jne
jnp
lods
sub
add
inc
or
sub
scas
and
bound
jne
shll
adc
jle
arpl
test
cltd
test
mov
icebp
adc
movsl
jo
fistpl
scas
pop
push
sbb
adc
add
scas
sub
call
push
rolb
jmp
fwait
push
in
sbb
mov
inc
in
dec
ljmp
scas
push
pop
dec
push
and
xchg
inc
or
pop
mov
dec
lea
movsb
rcrb
or
xor
jl
sarb
ljmp
sbb
and
or
ljmp
sub
inc
xor
enter
mov
jecxz
decl
adc
aad
mov
lahf
lret
in
je
sbb
addl
mov
and
fs
scas
imul
lods
outsb
xor
mov
ss
mov
pop
push
xchg
insl
popl
inc
ja
mov
outsb
adc
loope
sub
fists
jl
cmp
incb
sbb
int3
mov
mov
dec
cmpl
pop
cmpsb
pop
lcall
xchg
adc
gs
in
mov
push
ffreep
idiv
lock
push
jnp
bound
sub
jns
int3
mov
rcrl
jg
add
jo
mov
fcoms
sbb
leave
sarl
mov
ror
or
in
adc
xchg
mov
lret
lea
inc
int3
addb
lods
lret
sbb
xlat
mov
or
push
ret
outsl
fcmovnb
bound
mov
jmp
sub
stos
dec
into
adc
into
jae
and
dec
xor
mov
push
xchg
cmp
aaa
in
inc
jb
or
push
mov
xchg
push
cmp
sarl
out
test
jle
cmp
icebp
lret
sbb
js
outsl
test
xor
mov
icebp
dec
js
sub
pop
out
push
cmc
jno
pop
insb
cs
sbb
out
adc
push
movsb
jl
in
pop
jne
gs
mov
psrad
lds
push
xor
mov
add
and
xor
sub
jns
ljmp
xor
data16
int3
push
fiaddl
or
shrl
in
nop
xor
jo
mov
sbb
push
bound
jmp
out
movsl
adc
ss
mov
out
flds
cmp
sub
dec
shrb
and
pusha
push
bnd
outsl
ja
pop
fcmovnb
lods
lahf
loop
jns
int
pop
in
mov
or
flds
jl
subb
mov
movsl
sbb
dec
xor
add
fs
mov
cs
jp
jg
cltd
ss
mov
pop
mov
stc
ja
fcomp
in
mov
add
test
cmp
sub
imul
xchg
roll
xor
in
aaa
mov
inc
xor
dec
pop
jno
mov
cmp
std
sbb
and
push
outsl
lea
aad
sub
cmp
notb
mov
outsb
sbb
out
xor
sbb
rcrl
and
add
dec
aad
lret
enter
add
mov
or
lret
out
in
sub
and
popf
mov
ja
ficoms
adc
iret
pop
stc
sub
cwtl
ds
out
loop
add
dec
loopne
ret
mov
cmpsb
popf
popa
mov
cmp
push
das
xor
leave
sub
jmp
shlb
xchg
ja
xchg
and
mov
sbb
dec
stos
add
mov
aad
imul
pop
add
mov
xchg
inc
inc
scas
fnstcw
fsubrs
lods
out
mov
and
mov
pusha
addr16
xchg
push
mov
loopne
aam
aad
int
pop
aas
jns
cmpsl
xchg
dec
push
fdivp
and
fistps
jbe
ja
lahf
in
lret
push
mov
and
arpl
mov
add
xor
cmpsb
pusha
cs
push
or
fwait
aad
and
outsb
mov
scas
in
pop
lcall
add
or
xorl
rcrl
xor
add
ret
jg
sbb
jnp
subl
and
mov
inc
hlt
jge
addr16
loopne
lcall
mov
adc
xor
xor
sub
push
popa
andps
out
push
scas
call
jo
js
cltd
sub
mov
push
in
pop
push
fimull
out
fsubs
cs
jg
fwait
movsl
pop
mov
add
pop
cmp
pusha
mov
push
addr16
xchg
ret
dec
mov
int
inc
test
das
pusha
inc
pop
cmp
mov
aas
loope
fcmovnbe
sbb
push
and
out
nop
adc
popa
or
adc
addl
int
cmpsl
cld
addr16
jb
repz
loopne
sub
daa
sub
and
rorl
enter
jb
sub
std
push
add
hlt
lcall
adc
negl
lahf
pop
xchg
adc
push
rol
mov
sbb
outsl
pandn
gs
xor
jbe
mov
or
add
sub
xor
mov
fstpt
pop
jno
inc
pop
jg
pop
xor
adc
movsl
mov
jne
add
dec
int3
inc
js
sarb
cld
popa
cmp
daa
sahf
cs
scas
xchg
jbe
cld
xchg
aam
dec
out
mov
xchg
daa
lods
adc
hlt
test
jmp
mov
in
xor
and
stos
ljmp
jl
mov
imul
jnp
movsb
pop
mov
sbbl
clts
rorb
cld
push
mov
fcmovb
mov
mov
mov
fucom
cmp
imul
imul
mov
adc
and
orb
stc
jne
adc
dec
jo
sbb
cmp
insw
popa
scas
stc
mov
jae
pushf
ss
stc
das
lcall
pop
ja
or
pushf
mov
ljmp
mov
pop
xor
or
dec
into
pop
rolb
ss
or
or
mov
mov
imul
lcall
jle
aad
in
sub
cmp
sti
or
in
out
test
lret
repz
shl
enter
hlt
insb
fstps
mov
mov
popf
pop
sub
jne
stos
addl
fxch
xor
xor
nop
mov
fwait
scas
jbe
pusha
cld
jg
xor
sbb
popa
in
lods
mov
push
add
loope
jb
mov
idiv
and
mov
jmp
inc
dec
ret
fcomp
call
fimuls
adc
sub
test
bound
daa
test
sub
xchg
je
gs
outsb
mov
mov
aam
xor
and
xor
test
imul
or
xchg
das
and
jg
stc
mov
sbb
cmp
sub
pop
xor
repz
ja
icebp
or
add
and
and
cmp
cwtl
push
fwait
mov
scas
decb
add
aad
mov
jmp
xchg
outsl
in
sub
push
aad
subl
das
or
cmp
mov
add
lret
leave
mov
fstsw
jecxz
pop
xor
sub
stos
mov
sbb
lahf
clc
out
lea
test
mov
cmp
jae
dec
mov
pushf
mov
test
rclb
sti
pop
rcl
mov
xchg
dec
xor
xchg
setnp
dec
mov
sub
mov
leave
fiadds
mov
stos
sub
daa
xchg
cltd
and
enter
lret
dec
or
inc
test
test
popf
insl
pop
enter
dec
aad
out
dec
repz
adc
dec
shll
mov
add
mov
add
mov
inc
and
add
sti
bound
frstor
mov
lahf
jp
in
test
jle
je
lods
std
mov
dec
je
cli
dec
adc
popa
or
and
cmp
adc
cltd
inc
les
lret
pusha
add
or
adc
and
inc
mov
cmpsb
mov
mov
gs
push
mov
pop
sbb
leave
stos
pop
mov
xor
andl
or
sbbl
add
shrb
sub
xor
mov
ds
pop
aas
xor
pop
sub
jle
push
int
gs
filds
push
push
das
xor
jle
sub
push
sbb
sbb
or
and
rorl
movl
mov
xchg
mulb
sbb
and
out
and
ret
fldl
fidivs
mov
mov
mov
inc
ret
int
sahf
sbb
sti
stc
lds
sbb
mov
lock
and
mov
or
ja,pt
pop
repz
insb
xchg
iret
ficompl
dec
scas
jb
clc
push
xor
jmp
stc
ja
pop
ror
shrl
xor
mov
xor
mov
lods
nop
jg
jnp
cwtl
cmp
push
sbb
sub
dec
popa
iret
sbb
xchg
xor
sub
jne
cmp
cmpb
cmpsb
pop
das
rolb
hlt
shll
incl
jb
scas
pop
jg
out
xor
in
and
call
testl
mulb
in
xchg
jp
insb
mov
fsubrl
ret
mov
repnz
in
insl
cmp
sub
jl
fadds
movsb
jge
pop
inc
stos
mov
mov
std
pusha
mov
adc
sarl
into
xchg
fstpt
lods
stos
dec
pop
icebp
addl
xorb
arpl
ljmp
incb
das
adc
in
xchg
mov
clc
xor
or
sub
lock
mov
push
bound
or
sahf
xchg
ficompl
mov
inc
push
push
lret
inc
outsl
sbb
jge
dec
leave
divb
lea
xchg
les
mov
xchg
call
xorl
inc
into
jb
adc
lds
cmc
push
popa
aaa
cld
lock
mov
shlb
mov
or
dec
sub
test
fwait
push
push
pusha
cmp
push
push
stos
xchg
push
jbe
paddsw
sbb
adc
pop
out
xchg
ja
xchg
mov
pushf
sbb
sub
xchg
add
cmp
es
cmp
clc
inc
scas
sbbl
cmp
inc
cmp
and
lds
mov
xor
rcr
mov
jle
mov
lods
lea
sbb
mov
inc
pop
lret
inc
cld
jne
mov
push
add
jae
push
xlat
dec
shll
bound
mov
pop
loop
cmp
mov
outsb
and
test
xchg
das
lahf
add
jmp
xchg
or
popf
or
dec
mov
add
jno
mov
inc
jne
aaa
sahf
adc
xchg
outsl
andl
mov
outsl
jecxz
sbb
lea
mov
shll
scas
sub
push
and
sub
inc
icebp
cmp
cmp
mov
xchg
cmp
testl
adcl
adc
mov
insb
dec
dec
mov
and
shrb
test
stc
scas
lret
or
jmp
or
jge
ror
lods
sbb
lods
xchg
push
shrb
into
and
shr
jb
pop
cli
mul
sub
ficompl
call
and
and
push
out
pop
mov
jo
fbstp
push
mov
inc
push
lahf
pop
sub
jp
pop
pop
xchg
pop
or
jge
fisubs
mov
lahf
lea
pop
mov
lods
ret
jo
test
call
jo
cmpsb
and
or
sub
jge
mov
dec
add
daa
push
pop
jae
dec
jle
dec
out
fisubrs
xor
stos
pop
popf
outsb
cmp
test
sbb
lods
incb
xorl
add
in
jecxz
lods
xchg
daa
lret
icebp
lock
ret
leave
js
cmpsl
scas
xchg
sub
sbb
fisttps
stc
sub
mov
pop
aaa
mov
adc
insb
jp
xchg
sahf
cli
or
pop
cmp
sti
jbe
loope
andb
lods
imul
add
dec
dec
js
imul
xchg
mov
cltd
xor
insb
mov
dec
and
xor
js
orb
push
sub
mov
cwtl
push
in
mov
or
cmp
shrl
mov
adc
pop
mov
lea
inc
in
push
movsl
aad
mov
xchg
loope
cmc
negl
call
jno
xor
sub
cmp
daa
sub
cltd
pop
movsl
pop
out
mov
xchg
ljmp
jp
lret
add
popa
pop
push
divl
mov
cmpsl
aas
cmp
iret
push
sbb
stos
pop
sbb
xchg
push
jp
xor
inc
icebp
inc
popf
lahf
fsts
xchg
mov
mov
mov
daa
adc
jae
jns
mov
sub
aam
aam
repnz
rclb
xchg
iret
xor
orb
push
lret
sbb
or
mov
pop
cmpb
inc
jecxz
clc
je
lea
clc
addb
lods
mov
incb
xchg
adc
push
add
push
dec
ret
aas
es
jg
out
rorl
jbe
out
mull
in
dec
das
into
mov
sarl
xorb
insb
fildll
sub
xchg
dec
push
xchg
inc
pop
jl
or
mov
hlt
push
mov
push
push
mov
loope
xor
je
stc
icebp
xchg
inc
mov
in
out
jg
xlat
pop
sarb
xor
divl
mov
jg
jmp
jne
sbb
repnz
jb
inc
mov
scas
fs
imul
std
pop
in
pop
test
loope
xor
pushf
pop
pop
pusha
rcl
mov
add
ds
adcb
orps
and
aaa
dec
pusha
imul
inc
ret
mov
fs
adc
mov
fiaddl
jg
cmc
pop
adc
dec
outsb
movsl
and
push
xchg
sar
inc
popa
mov
dec
test
jb
jae
lret
jmp
pop
pop
mov
testl
lret
test
inc
stos
pop
push
sbb
pop
and
dec
out
shll
fs
clc
inc
insb
mov
pop
pushf
xor
mov
test
addb
and
int3
out
dec
xchg
lret
leave
mov
aad
push
add
and
and
cmp
jns
xchg
sbb
cmp
mov
or
lock
cmc
cmp
fidivrl
andl
jb
sti
orl
lcall
push
jne
jl
dec
arpl
mov
fistpll
push
inc
adcl
push
jp
scas
popa
bound
or
mov
cwtl
cmp
pop
dec
or
out
in
cmp
dec
push
in
add
insb
cs
cltd
fwait
xor
sbb
loope
je
cwtl
filds
shrb
pop
scas
dec
repz
mov
aad
insl
cli
push
stos
bound
sbb
popa
mov
inc
fcoml
addr16
adc
sbb
push
and
js
cmp
sub
push
cmp
sti
jl
das
insl
adc
adc
sub
mov
movsb
push
pop
mov
cltd
mov
fadds
and
mov
jno
push
push
mov
scas
sub
sub
fildll
shl
xor
adc
mov
add
sub
cmp
bound
loopne
hlt
faddl
in
rorb
add
mov
jae
fcmovbe
pushf
subl
dec
sub
mov
and
or
outsl
push
jmp
lock
popf
outsl
sbb
sub
mov
sarl
xchg
push
sahf
sbb
jl
xchg
aaa
push
mov
adc
pop
call
jecxz
out
popa
enter
loopne
enter
je
enter
add
lods
xchg
pop
adc
outsb
cli
daa
mov
adc
xor
insl
or
stos
aas
jb
jae
pop
mov
mov
jmp
lods
loopne
jns
into
fwait
cmp
call
mov
inc
add
push
adc
push
add
sbb
stos
clc
add
ror
mov
add
jp
add
stos
jl
clc
and
test
mov
stos
int
lret
jo
xor
repz
jp
mov
add
jecxz
arpl
pop
xor
call
jmp
fcmovu
lods
divl
imul
xor
jnp
cmpsb
and
mov
and
pop
mov
add
add
xor
mov
movb
arpl
mov
jl
sub
dec
sbb
call
cld
jo
stos
into
cltd
arpl
mov
movsb
mov
test
xchg
mov
add
arpl
lret
jo
mov
mov
sbb
push
jno
mov
sbb
pop
js
lahf
cltd
in
mov
aad
les
mov
adc
pushf
cmpsl
sahf
mov
test
mov
incl
cwtl
pop
jnp
aad
push
lds
push
aas
lock
test
int
mul
ret
jge
xor
dec
test
fs
push
ljmp
aam
xchg
sbb
imul
jbe
data16
lods
push
aad
stos
mov
push
outsb
xchg
push
movsb
cs
or
pop
push
mov
xchg
dec
mov
mov
rolb
stc
into
inc
fcoml
scas
aam
inc
dec
sti
inc
sti
sub
nop
subb
mov
repnz
cltd
je
mov
dec
dec
sbb
sub
ror
je
push
xchg
fucomi
ret
shrb
fs
cmp
mov
lods
xchg
xor
adc
mov
or
sub
stos
pop
xor
sub
and
and
mov
xor
push
pop
and
xor
dec
mov
mov
pop
mov
and
sub
hlt
out
adc
xor
js
enter
mov
cmp
push
add
cmpb
gs
dec
cltd
jmp
mov
cmp
and
add
mov
outsb
add
dec
popa
test
neg
fcmovb
movsl
or
cmpsl
jae
mov
and
push
repnz
mov
sahf
nop
adc
jmp
mov
shll
xchg
fildl
inc
adc
or
mov
cltd
xorl
adc
mov
cmp
sahf
decl
cmp
lcall
mov
push
es
js
daa
mov
xchg
cmpb
cmpsl
xchg
out
aaa
cwtl
ja
sbb
mov
hlt
pop
push
jo
pop
mov
jle
pop
fnsave
inc
push
addr16
push
mov
bound
repz
and
and
xor
aas
xchg
adc
xchg
ljmp
and
dec
inc
lahf
adc
pop
int3
out
cmp
das
jge
lods
or
insb
sub
inc
roll
or
cmp
sti
int
scas
in
pop
lods
rorl
in
loopne
xor
or
mov
cs
adc
xchg
imul
push
jle
into
arpl
and
jne
inc
cmp
xchg
jecxz
mov
add
xchg
add
movsb
dec
xor
call
adc
popa
lret
dec
dec
out
js
mov
ror
loopne
or
nop
jno
insb
mov
dec
cmp
jl
jo
adc
dec
repnz
jb
ret
imul
icebp
jl
mov
call
adc
cmove
sarb
nop
pop
jns
push
test
pop
mov
hlt
mov
and
popa
icebp
icebp
sbbb
call
jle
cmc
push
lds
mov
cs
movsl
out
out
dec
scas
adcb
cmpl
ret
cmpsl
push
lret
mov
pop
mov
stos
adc
insb
inc
aaa
jl
nop
mov
xchg
jo
out
add
xchg
out
mov
mov
outsb
cmp
mov
stos
cmp
mov
dec
out
add
lds
adc
inc
das
push
jge
cs
fimuls
jns
outsl
movsl
movsb
sub
cmpsl
fisubrl
add
cmp
jp
out
cmc
mov
sub
adc
negl
push
push
jnp
hlt
cs
xlat
adc
jne
les
sub
sub
pop
pop
push
xchg
inc
stos
in
mov
adc
sbb
xchg
fadd
popa
sahf
sbb
out
pushf
bound
lods
cli
sbb
test
cmpsl
es
xor
rcrb
push
cwtl
sub
cmp
fists
fldcw
jb
mov
fbstp
xchg
test
mov
mov
ret
xor
jns
or
inc
xor
out
pop
out
xchg
negb
aaa
call
inc
addr16
js
pushf
xchg
ret
out
in
mov
inc
jnp
insb
push
sbb
cmp
test
repz
cmp
bound
fsubs
sbb
lods
arpl
popf
or
mov
rorb
dec
and
xchg
loopne
pop
dec
jno
sub
aas
pop
cmpsb
and
arpl
pop
imul
mov
es
es
xor
loope
test
push
jo
movl
fwait
adc
loop
es
or
pop
cli
mov
mull
loop
imull
pop
insl
mov
or
out
sbb
push
scas
inc
sub
insl
mull
bound
dec
lcall
aaa
fisubrl
cmpsb
jle
in
adc
push
cmp
cmp
ds
ds
lock
xchg
pop
fnstcw
jae
cmpsl
imull
push
test
orl
pop
dec
repz
rorb
loop
sub
js
cmc
add
push
dec
jmp
sub
xorl
cmp
stos
aad
mov
jmp
mov
loopne
imul
test
cld
repz
dec
push
xchg
push
xor
inc
and
push
mov
mov
clc
test
iret
jl
jo
js
and
clc
inc
scas
jnp
das
pusha
inc
xor
dec
cmpsb
xor
insb
rorl
ret
jg
sbb
xor
sbb
mov
cwtl
pushf
mov
dec
and
push
push
mov
dec
mov
scas
and
and
dec
mov
stc
pushf
aam
inc
jge
xor
cmp
and
xorl
repnz
popf
icebp
cmp
imul
inc
adc
pop
in
add
ret
pop
repnz
adc
and
repnz
mov
sub
jo
xchg
mov
push
jno
adc
repz
and
push
lds
pop
mov
adc
add
cwtl
test
or
pop
test
or
dec
xchg
mov
sbbb
sbb
add
lcall
pop
shr
stc
xchg
arpl
mov
add
xchg
inc
or
and
xor
mov
imul
jg
cmpsl
jb
hlt
mov
xor
mov
mov
xchg
xchg
xor
and
xchg
push
jno
jnp
daa
pop
gs
cld
dec
dec
shlb
mov
pop
push
cltd
or
jns
push
add
rorl
fnstenv
mov
repz
ds
hlt
push
push
pop
lar
dec
and
xor
pop
ljmp
fcoms
repz
lea
cmp
inc
xor
stos
sub
cs
in
clc
bound
imul
cmpsl
inc
ror
loopne
mov
mov
cltd
nop
dec
cld
mov
sub
stc
inc
pop
adc
adc
push
cmp
add
aaa
xchg
push
pushf
jle
inc
push
fldt
push
popf
or
mov
fisubrs
pop
sbb
sar
and
outsl
sub
aaa
inc
cmp
and
mov
push
sahf
adc
mov
sbb
mov
test
idivl
pop
imulb
xor
aaa
sbb
sbb
sub
mov
jo
sub
ljmp
scas
jge
cmp
dec
jg
dec
mov
xchg
cmp
in
cmp
and
mov
xchg
xchg
cmp
cld
cs
xchg
inc
dec
lret
push
push
mov
jne
xchg
data16
in
cs
or
mov
inc
loope
xor
dec
dec
inc
mov
jl
push
aas
ret
adc
sub
pop
out
dec
lods
push
repnz
dec
fdivrs
xchg
pusha
aad
adc
mov
jp
push
pop
and
rorl
sbb
inc
ljmp
outsb
mov
mov
ss
cmp
xchg
and
mov
inc
push
shll
pop
xchg
ljmp
adc
xchg
repz
adc
loop
out
add
mov
jbe
adc
adc
mov
repnz
loope
sahf
sbb
shll
mov
lods
lret
insl
mov
ficoms
icebp
outsb
je
mov
andl
or
mov
jle
or
xor
scas
icebp
mov
push
cmp
ret
cmc
hlt
jp
gs
mov
xchg
sahf
ljmp
insb
sbb
or
mov
out
data16
mov
decb
ret
lock
testl
xor
out
fstl
push
xor
xchg
xchg
or
loop
mov
js
in
mov
inc
inc
int3
fcompl
inc
aad
sahf
sarb
xchg
and
mov
imul
ret
inc
push
dec
dec
fcmovnbe
loopne
sahf
lret
mov
cmc
int
in
push
and
into
push
ficoms
in
dec
cmp
inc
ficomps
or
repnz
add
xor
xlat
sar
hlt
fsubrs
or
cmp
push
add
dec
push
addr16
fidivs
enter
jl
push
lods
test
add
paddq
adc
in
mov
inc
jmp
sub
je
xchg
mov
pushf
jnp
cmpl
out
lcall
fidivl
inc
pop
inc
mov
jnp
mov
repz
ret
out
not
and
jb
out
jle
push
jle
sbb
mov
mov
sbb
hlt
dec
shlb
sbb
or
sbb
dec
adc
xor
pushf
out
clc
jbe
jge
cwtl
mov
dec
sub
pop
lods
xchg
mov
fmuls
push
xor
prefetcht0
cli
xor
nop
pop
push
or
add
out
pusha
dec
jno
dec
scas
pop
adc
ds
xchg
pop
sarl
aam
mov
jmp
mov
jecxz
sbb
imul
int3
dec
inc
push
cltd
fsts
sub
bound
fs
icebp
add
fucomip
outsl
push
sub
test
out
ds
shrb
pusha
mov
les
mov
mov
addr16
push
push
jle
push
adc
push
dec
test
test
lods
bnd
std
push
scas
bound
stos
cwtl
not
pushf
rcrb
pop
fucomi
push
pop
iret
pop
inc
daa
in
push
sub
add
jno
cmpsl
push
inc
or
mov
out
add
add
int
hlt
lret
dec
inc
outsb
pop
shl
jge
cmc
add
ja
addr16
jge
lea
out
xor
inc
xor
sar
dec
jge
jle
pop
sub
sub
push
iret
cmpsb
or
aas
adc
std
lcall
xchg
ds
xchg
dec
jo
clc
jae
mov
mov
ljmp
arpl
fwait
out
or
pop
insb
jo
data16
cs
sti
or
lods
fwait
popa
inc
int
scas
popa
loop
lods
cmc
loop
inc
jno
ljmp
mov
sub
adc
pop
sbb
aaa
jbe
sar
mov
jnp
in
pop
push
xor
scas
mov
mov
lds
pop
cmc
pushf
xor
icebp
mov
jo
cs
fists
es
push
out
xchg
stc
pop
das
inc
mov
test
aam
inc
mov
ret
mov
ret
es
jae
ret
xchg
push
test
jecxz
push
aas
repz
sti
sub
sbb
cmp
int3
mov
fcoms
mov
dec
and
and
jp
xchg
and
cmpb
enter
shll
punpcklwd
cmc
into
mov
insb
push
sbb
and
jno
inc
sysexit
daa
mov
sub
mov
aam
sub
daa
mov
out
mov
aas
push
cmpsl
fnstsw
or
lret
push
mov
pop
push
out
jg
rclb
push
mov
mov
push
stc
cmp
pop
xchg
out
jne
sub
leave
or
mov
xor
mov
push
lret
mov
not
daa
lods
scas
pushf
add
nop
sub
add
add
jge
cmp
push
add
mov
shr
push
sub
cmc
fadd
fisubl
add
push
pop
mov
adc
jg
jno
test
dec
and
cmc
lods
loop
ds
inc
das
rcrl
leave
ss
jmp
insb
xor
jge
or
pushf
shl
movsb
int
cmp
mov
nop
adc
xor
adc
in
or
dec
roll
scas
outsl
out
ret
int
dec
pop
push
jae
fldl
loope
cmc
pavgw
mov
jmp
add
test
mov
inc
mov
imul
ret
shlb
pop
ljmp
push
adc
aam
gs
or
push
aaa
lret
hlt
sub
and
jns
mov
aas
inc
mov
cmpsl
sbb
or
sbb
dec
sbb
adc
add
mov
imul
adc
test
pushf
pop
mov
pop
jae
dec
mov
aas
ret
gs
fisubl
xor
lret
xchg
mov
repz
fs
push
inc
aaa
inc
cwtl
cmp
incl
ret
ficomps
push
cwtl
pop
sarb
lahf
lcall
shl
inc
adc
sbb
push
lret
lods
imul
mov
jg
add
xor
inc
jo
stos
jb
sbb
xor
cmp
fs
pop
dec
add
and
xor
sub
dec
mul
es
xchg
mov
sub
out
mov
pushw
inc
push
test
loop
sarb
adc
sti
or
push
xlat
xchg
enter
and
xchg
pop
repnz
mov
pop
lret
xchg
pop
or
pop
and
jo
mov
mov
inc
popf
add
fistpll
cmp
dec
mov
add
insb
nop
cli
cmp
mov
and
cmp
inc
mov
mov
fcompl
icebp
mov
sti
dec
arpl
lods
imul
push
pop
cli
sbb
cmp
loopne
imul
xchg
call
mov
xor
daa
jmp
xchg
push
mov
pop
jecxz
xchg
or
mov
mov
inc
push
lahf
mov
aaa
push
add
lea
stos
jle
sub
jmp
mov
jl
leave
notb
xchg
loope
rolb
fdivr
xor
cwtl
sub
out
cmp
mov
stos
imul
daa
inc
jns
mov
sbb
dec
rolb
sub
sbb
cmp
pop
xchg
add
cmp
iret
icebp
and
add
mov
xchg
or
cmpsl
and
pop
into
sub
add
scas
repnz
insb
sub
test
add
jge
std
mov
out
pop
dec
add
std
pop
jo
sbb
dec
cmp
sub
lds
sbb
jmp
inc
fnsave
dec
mov
fisttps
aam
pusha
addr16
add
notb
cmp
xchg
in
push
mov
sub
jns
mov
jp
cwtl
mov
and
and
das
pop
mov
xchg
int
xor
push
jne
nop
jne
ds
sahf
cmp
and
or
mov
or
scas
lcall
mov
or
daa
les
dec
test
and
in
aaa
addr16
cmp
inc
in
jge
adc
push
jb
inc
inc
mov
and
dec
mov
push
push
pop
enter
xor
push
jo
or
iret
add
or
out
cli
int3
gs
addr16
mov
leave
idivl
ja
and
icebp
fstps
pop
mov
mov
pop
dec
loop
push
lcall
clc
fs
std
adc
dec
test
push
sub
xchg
sbb
sbb
or
dec
cpuid
push
scas
dec
and
test
lock
push
xchg
fcoml
adc
outsb
inc
xor
adc
sti
clc
imul
loope
xchg
push
mov
add
loopne
fwait
mov
inc
mov
sbbb
push
push
inc
in
leave
and
xor
adc
jg
mov
push
xor
in
pusha
mov
add
jnp
and
test
popf
push
imul
mov
and
in
jecxz
xlat
mov
inc
jg
daa
jae
pushf
jl
sbb
add
inc
orb
and
add
sti
adc
jmp
imul
pop
lahf
cmpsb
call
into
in
fwait
xchg
cmp
sahf
roll
and
xchg
in
mov
pop
clc
dec
jl
lcall
inc
dec
mov
mov
loopne
test
pop
test
std
icebp
mov
jne
cltd
push
inc
loop
xchg
push
je
movsb
js
mov
push
ljmp
out
xchg
divl
cmp
out
loopne
or
push
inc
or
pop
jae
sub
dec
xor
dec
mov
jp
cmp
mov
jmp
ja
mov
sbb
pusha
push
jmp
push
mov
and
pop
xor
sbb
icebp
sbb
ret
and
xchg
mov
inc
lret
mov
mov
mov
inc
jmp
mov
push
mov
push
aaa
xchg
loopne
add
and
rcrl
imul
pop
test
idivl
mov
pop
mulb
pushl
pop
adc
insb
roll
pop
push
test
pop
sahf
test
adc
sub
and
pop
add
mov
or
jne
lret
dec
daa
fsubl
pushf
mov
inc
xor
push
lods
fdivp
pop
scas
mov
pop
pusha
pop
or
aaa
fcomps
negl
jno
push
pop
inc
into
fmuls
dec
test
loop
insb
pop
push
sub
push
mov
mov
mov
pop
cs
loop
adc
push
outsl
pop
inc
jle
pop
imul
mov
pop
lret
imul
xor
mov
mov
dec
pop
cli
in
bound
and
leave
pop
cmp
stos
sarl
or
jbe
popl
sbbb
mov
pop
push
dec
lcall
inc
inc
dec
pop
xor
push
aad
cmpsl
sbb
sub
out
fsubrs
and
or
or
roll
inc
je
inc
sbb
jns
out
inc
xchg
pop
push
add
add
xor
scas
sahf
ljmp
xchg
mov
stos
adc
scas
add
mov
xchg
test
js
movsb
into
xor
cmc
dec
jmp
mov
sbbb
test
scas
mov
mov
loope
fldcw
sub
test
xchg
mov
sahf
push
dec
ja
jle
mov
and
mov
cltd
jg
cli
insl
sub
not
sub
outsb
roll
test
pop
test
aam
mov
jg
xchg
dec
int
push
push
jae
clc
dec
or
cmc
lret
rcr
jg
andl
aad
andb
mov
cmovnp
mov
and
mov
cld
jmp
push
out
xchg
call
es
mov
mov
imul
aas
sti
lods
sahf
lcall
push
in
dec
subl
leave
jmp
pop
aaa
outsl
imul
cli
insb
and
mov
cmp
pop
imul
cmp
cmpsb
les
push
xchg
outsb
pop
inc
mov
push
xor
inc
pop
sti
aad
arpl
xor
jnp
xchg
mov
add
pop
dec
lret
push
fistpll
leave
push
push
pop
or
and
sbb
cmp
xchg
nop
jnp
pop
pusha
cmp
lods
and
inc
js
inc
xchg
push
testb
push
dec
int3
pop
push
test
shll
outsb
pop
dec
dec
out
fs
shl
arpl
sahf
ja
xchg
std
std
mov
mov
jl
in
out
jno
xor
push
sub
adc
cltd
xchg
inc
sbb
inc
add
dec
inc
pop
sbb
sub
fisttps
inc
push
in
push
arpl
outsl
rcrb
xor
aad
adcb
ffreep
sahf
or
push
jo
movsl
ljmp
jne
mov
fbstp
cmp
inc
lods
jae
addr16
mov
and
icebp
mov
pushf
adc
dec
dec
out
test
cmpsb
pop
sbb
aas
lret
mov
shl
jb
mov
jns
movsb
and
sub
or
inc
or
jno
and
add
push
outsb
push
out
xchg
in
pushf
sbb
xchg
fdivrs
cs
xor
xchg
jecxz
inc
call
lea
sbb
imull
outsl
mov
scas
iret
rcl
jae
les
sub
mov
pusha
xchg
mov
call
pop
push
mov
pop
xchg
or
mov
mov
inc
xchg
jo
sbb
shll
xchg
into
mov
loopne
adc
mov
mov
xchg
outsl
andb
mul
push
addr16
stos
sbb
rorb
fbld
or
test
loope
in
dec
inc
pop
out
imulb
pushf
aam
lahf
stos
pop
mov
enter
mov
lcall
jmp
shlb
mov
lods
xchg
iret
sbb
pop
jbe
xor
jnp
cmp
inc
pop
add
aad
sbb
mov
cli
cltd
not
pop
push
and
cmp
or
xchg
into
mov
movsb
cmp
mov
pop
pop
mov
ret
subl
stos
fstl
fcoml
fcompl
into
movsl
jg
inc
add
es
into
clc
inc
mov
nop
movsl
popa
out
sub
push
push
push
ret
sub
in
xchg
pop
loope
icebp
cli
push
inc
ret
pusha
aas
imul
pop
hlt
es
pop
mov
loopne
addr16
adc
outsl
push
push
movsl
loope
shlb
and
mov
fwait
dec
pop
jns
addr16
es
push
cmp
sub
ja
jmp
pop
mov
pop
pop
in
xor
fadd
push
les
pop
fwait
mov
repnz
mov
add
push
cli
push
push
jns
mov
and
xor
mov
cltd
pop
xchg
push
fnsave
lret
mov
xchg
lea
test
jecxz
cli
xchg
mov
sbb
scas
sahf
inc
aam
jnp
add
stos
outsb
stos
cmp
ret
push
ficoms
out
ret
in
fists
mov
xchg
add
xor
shlb
jo
mov
xchg
int3
or
adc
rcl
and
push
push
and
pop
adc
repz
leave
jmp
popa
int
aas
adc
hlt
ja
in
fstl
ret
sti
mov
pop
mov
lret
outsb
sbbb
loope
dec
dec
mov
mov
ret
mov
dec
cmpsl
inc
xchg
popa
mov
stc
lea
mov
and
test
jg
mov
mov
pusha
inc
and
add
rcrl
or
out
shlb
daa
js
mov
dec
push
scas
mov
test
movsl
out
mov
add
xor
lahf
bnd
insl
cmpsl
ja
shlb
push
add
cltd
ja
add
imull
xchg
mov
data16
leave
and
loop
inc
fs
xchg
or
inc
insb
xchg
inc
jp
mov
sub
ficomps
or
cmc
les
adc
mov
dec
hlt
testl
cmpsl
test
push
sbb
mov
or
in
ja
arpl
adcb
fbstp
adc
push
sti
jmp
test
lods
dec
sbb
push
mov
mov
pop
jl
das
lods
cmpsb
push
mov
out
lcall
rclb
les
movsl
sub
pop
loope
push
lcall
cmp
lea
ja
sub
gs
or
mov
add
out
and
lahf
aad
jno
insb
outsl
xchg
sti
mov
mov
movsb
push
xor
inc
inc
cli
xor
cwtl
or
test
in
adc
jle
sti
jns
popf
pop
in
daa
add
push
and
pop
ljmp
arpl
test
in
pop
push
push
ret
repnz
inc
and
arpl
stos
dec
loope
jb
cli
or
sub
mov
ret
nop
mov
movsl
test
imul
cmpl
je
xchg
ret
mov
add
mov
mov
inc
cmc
insl
lahf
fwait
mov
adc
bound
add
and
cli
cmp
pop
clc
out
sub
outsl
aas
sti
lea
jno
test
push
pop
push
rclb
sub
inc
dec
xor
xchg
add
lret
sub
xlat
ja
icebp
mov
mov
mov
cmp
jp
fadds
push
insl
lret
or
or
repnz
add
cmpsl
stos
data16
cmp
daa
les
in
mov
bound
cs
rcr
fyl2xp1
sbb
inc
jne
sbb
mov
mov
xchg
jbe
sbb
sarb
dec
jnp
jb
mov
or
xchg
shl
sub
sahf
ret
xor
popa
fimull
stos
mov
arpl
cmp
pop
pop
arpl
pop
mov
push
pushf
xlat
jbe
or
mov
mov
pop
lods
lret
loope
dec
test
arpl
mov
out
lods
adc
mov
pop
pop
sar
pop
xchg
lds
or
and
andl
loopne
cmp
mov
add
aaa
jnp
jp
cmp
push
popa
sbb
xor
mov
dec
xchg
pop
hlt
pop
jle
xorb
mov
dec
rorb
and
push
cmpsl
xchg
pop
xchg
adc
repnz
mov
fdivs
hlt
stos
sahf
and
psrld
jle
ds
testb
mov
dec
arpl
jg
rcrb
jmp
xchg
popa
inc
pusha
xor
xor
faddp
or
pop
mov
adc
stos
sbbb
cmpsl
test
sub
mov
shlb
stos
push
aas
dec
rolb
dec
cmp
lds
lods
je
lods
arpl
mov
sbb
xchg
cmp
mov
and
mov
sbbb
ljmp
mov
gs
loopne
in
es
or
insl
mov
cli
aaa
mov
mov
sub
mov
dec
in
xchg
dec
cmp
setb
out
xor
dec
cmpsb
inc
push
insl
xchg
ret
sti
rorb
and
inc
daa
mov
imul
push
xor
insb
cmp
mov
pop
cmpsl
pop
repz
jmp
ret
xchg
pop
sahf
adc
xchg
and
add
mov
mov
fcomps
out
adc
inc
mov
ja
inc
mov
inc
mov
or
loope
aad
jne
sub
ss
dec
outsb
in
inc
jp
jl
inc
sbb
inc
mov
icebp
enter
dec
and
add
inc
mov
sahf
inc
lds
inc
das
inc
add
test
aam
imul
sub
and
pop
xor
cmp
sub
or
cmpsl
lods
or
push
dec
jo
add
popf
sub
cmp
and
cmpsl
lods
and
loopne
mov
cmp
jg
js
cmp
mov
int3
imul
dec
std
ljmp
arpl
xchg
xchg
mov
cmpl
dec
lret
js
cld
scas
pop
dec
repnz
mov
fnstcw
aad
sub
nop
jnp
lock
push
mov
arpl
sbb
dec
popa
push
pop
sbb
mov
adc
in
fs
sbb
mov
imul
add
movsl
pop
push
je
movsb
dec
scas
stos
arpl
in
addr16
arpl
lods
xor
mov
fistpl
mov
sbb
inc
add
jge
add
fidivrs
push
mov
outsb
je
mov
cli
aaa
cmp
sbb
sub
jge
scas
popf
daa
das
dec
cmpsb
jbe
lock
xlat
repnz
in
sti
push
loopne
dec
dec
pop
dec
test
sbb
xchg
mov
outsb
adc
pop
shrl
cmp
mov
and
add
test
test
sti
in
mov
cmc
stc
sub
pop
out
mov
push
adc
lods
mov
or
sub
outsb
mov
pop
push
inc
xor
sbb
in
mov
sub
jno
xor
jge
cmpsb
dec
inc
inc
rorl
pop
sti
adc
into
cmp
pusha
fwait
jbe
shlb
add
sahf
cmp
sbb
xchg
inc
xchg
mov
xchg
popa
and
mov
jge
stc
xor
lahf
inc
adc
in
push
add
mov
push
xchg
in
cmp
aam
jmp
cli
add
xor
mov
lods
xchg
xor
jp
aad
addb
xchg
push
push
aad
dec
pop
testb
mov
inc
test
fildll
cwtl
xchg
fwait
mov
lret
lret
dec
mov
sub
divl
es
jp
fs
mov
pop
loop
sub
jae
mov
fs
popf
loope
pop
or
push
shrb
sub
repz
sbb
mov
in
mov
xor
push
stc
mov
outsl
dec
sbb
jo
xchg
jge
xchg
push
cmp
inc
pop
adc
out
enter
hlt
mov
and
mov
stos
loop
jp
mov
push
lret
mov
push
xchg
mov
lcall
imul
loop
adc
xchg
dec
int3
loopne
rorl
cmp
dec
int
sbb
mov
mov
mov
shrb
ret
adcl
lods
aaa
sub
ss
dec
add
xor
xchg
dec
and
bound
jl
xchg
sub
push
mov
test
loop
cmp
inc
insb
add
js
sub
sub
inc
test
dec
lods
insb
add
arpl
andb
xchg
mov
aaa
dec
popa
cmpsb
jnp
movsl
popa
jb
outsl
enter
sub
add
xor
stos
cmc
adc
pop
leave
out
aad
iret
pusha
sti
jnp
inc
call
outsb
aam
or
inc
aaa
mov
lds
aad
and
fsubl
in
fs
cmp
sarb
cmc
jl
jecxz
cli
loope
add
or
cmpsb
arpl
cmp
push
inc
push
loop
clc
cmp
jp
xor
or
pusha
scas
aaa
shlb
or
xor
idivl
adc
xchg
daa
int3
pop
push
mov
pop
ss
jmp
addr16
bound
mov
add
lock
and
jmp
mov
dec
xor
pop
or
adc
rcll
or
sub
mov
xchg
aas
lret
dec
add
cwtl
in
je
xchg
push
push
rorb
pop
add
mov
lcall
cmpsl
js
sahf
adc
lahf
js
icebp
push
pop
jecxz
cmpsl
shlb
add
xchg
dec
mov
dec
int
sbb
sub
jne
or
in
dec
dec
test
ret
jbe
xchg
mov
icebp
jge
xchg
cmc
cli
mov
enter
pop
movsl
icebp
xlat
imul
adc
xor
xchg
pop
sbb
mov
pop
inc
pushf
loopne
pop
jp
imul
xchg
jle
notb
jle
push
and
add
or
repnz
dec
mov
xchg
mov
inc
fisttpll
jns
fcom
movsl
out
lods
pop
push
sub
push
pop
mov
addb
sub
rclb
push
mov
lock
jne
push
push
les
or
fwait
inc
and
cmp
test
repnz
add
into
test
or
or
cmp
clc
arpl
inc
mov
pop
mov
lea
repnz
data16
pop
adc
xor
fwait
mov
jo
mov
sub
loope
pop
stc
ret
adc
sbb
aam
mov
xchg
aad
xchg
cwtl
sti
jne
jb
mov
lock
pusha
jae
test
or
inc
ret
or
pop
mov
js
xor
add
push
imul
fs
pop
fstpt
xorl
xor
scas
mov
pushf
jbe
sti
out
sub
dec
aas
add
sti
das
insl
jns
mov
out
xor
pop
xor
out
cs
jle
out
aaa
add
adc
and
insl
loop
lret
sbb
sbb
ljmp
sti
mov
dec
mov
lahf
xchg
icebp
test
or
adc
aad
xchg
mov
xor
out
mov
sahf
imul
loope
jp
scas
inc
adc
mov
and
jp
fwait
pop
push
xchg
lcall
jmp
xor
mov
sbb
push
jb
pop
sbbl
adc
addr16
popf
inc
adc
shlb
jbe
dec
and
jo
dec
jmp
mov
imul
aaa
sub
mov
test
mov
jnp
xchg
pop
icebp
js
xchg
cmpsl
loope
add
in
or
js
js
inc
mov
adc
jl
dec
and
sarb
inc
pop
daa
pushf
cwtl
incb
adc
call
push
mov
cmp
bound
and
adc
in
pop
lret
xchg
testb
pop
into
fiaddl
mov
lods
cmp
add
les
subb
xchg
inc
sub
std
movsl
ds
adcb
mov
xor
mov
xchg
dec
insb
paddq
sarl
imul
daa
push
mov
mov
leave
jge
pop
sbb
inc
mov
mov
test
adc
es
rcll
in
jmp
leave
xchg
inc
ret
call
nop
in
outsl
adc
inc
inc
js
cmp
jno
adc
in
and
mov
les
sbb
ss
loop
into
js
mov
mov
xchg
ret
jmp
loope
pop
or
dec
pop
roll
cs
xor
mulb
test
in
jns
dec
popa
jns
xlat
loopne
ret
or
jge
gs
fldl
inc
lret
loopne
or
js
fmull
pop
fsubr
inc
mov
sbb
andl
clc
ss
negb
out
sar
movsl
jno
lcall
or
mov
xor
push
lock
or
dec
mov
out
test
push
aam
push
imulb
lea
decb
jl
cld
adc
adc
scas
push
pop
push
dec
mov
dec
xchg
out
std
pop
sahf
int
pop
and
cld
and
shrb
jmp
adc
jo
sub
je
arpl
sbb
dec
test
ficomps
popa
mov
inc
cmc
adc
inc
iret
mov
mov
or
repnz
add
and
subb
inc
addr16
jmp
adc
js
jo
jno
xchg
mov
loop
popf
push
push
xor
or
insb
loope
cmp
push
xchg
sbb
inc
adc
adc
xchg
add
mov
lock
and
sub
jne
cli
scas
pop
or
sub
jp
cmp
cmc
xchg
jae
outsb
lock
jle
and
in
mov
jecxz
aaa
shll
pop
int
icebp
gs
xor
cmc
lahf
aaa
mov
lret
dec
mov
jb
jbe
mov
jo
aam
nop
adc
push
dec
xchg
das
push
mov
dec
adc
and
fs
stos
ds
push
fcomp
fsubrs
repnz
and
icebp
mov
dec
outsb
jg
pushf
cs
mov
or
stc
ss
lret
xor
rol
xchg
mov
orb
xor
fiadds
js
lea
mov
xor
js
mov
cs
jae
add
inc
push
cmp
mov
je
lds
lods
outsb
sahf
lea
jb
dec
adc
imul
in
xorb
pop
xchg
int
rcrb
imul
lret
out
arpl
mov
jge
dec
iret
ret
cmp
cld
js
outsb
imul
cmpsb
and
cs
mov
decb
jl
ror
xchg
jl
push
and
insl
daa
pop
fcomps
rorl
sub
sbb
add
bound
fdivl
mov
adc
lea
inc
inc
pop
inc
mov
in
cld
lcall
cmp
adc
and
test
jb
fldt
pop
jno
cmc
mov
mov
rorb
clc
and
jne,pn
xchg
lods
outsb
fwait
and
daa
cwtl
inc
imul
daa
fdivs
popf
scas
and
cs
pop
lret
popf
add
inc
pop
or
cmp
into
sti
lods
jns,pt
xchg
movsb
push
xor
and
dec
cmp
ljmp
js
inc
test
sub
stos
fs
imull
sbbl
sub
adc
sbb
jle
jl
out
mov
sub
lock
sub
arpl
xchg
imul
js
js
scas
fcomip
leavew
jle
pop
pop
mov
clc
add
les
aaa
push
in
inc
xlat
loopne
in
xchg
jbe
outsl
sub
sbb
pushf
cs
cmp
sbb
jnp
aad
inc
push
lock
xor
pushf
xchg
xchg
mov
lock
loope
fucom
sub
stos
push
mov
rclb
in
into
mov
xchg
mov
popa
push
aaa
dec
xchg
mov
cmp
icebp
mov
adc
ja
push
repz
ljmp
es
lcall
inc
out
push
sbb
inc
bound
push
das
push
mov
mov
pop
push
lcall
ss
pop
sub
scas
add
sbb
mov
dec
xchg
dec
shrl
clc
push
xor
stos
icebp
mov
mov
xor
aam
xlat
cmp
mov
inc
xchg
mov
stos
pop
sub
out
push
cs
in
inc
sub
leave
sbbl
mov
mov
jbe
push
or
lock
pop
and
dec
mov
lret
mov
mov
pop
or
adc
pop
inc
jp
imul
and
dec
fs
sub
cs
pop
std
cmpsl
mov
push
fsubl
add
and
mov
jmp
adc
imul
mov
inc
mov
or
adc
cmp
rcrb
pushf
in
pushf
fstps
inc
sub
test
nop
and
mov
dec
fisttps
jne
imul
test
dec
adc
movsl
ror
inc
xor
lods
out
jae
add
aas
jge
cld
in
adc
ficomps
mov
dec
cmc
shrb
pop
mov
fnstsw
push
xor
cmc
outsb
fdivs
movsl
push
jle
fwait
orl
fiaddl
mov
mov
push
mov
dec
fstl
dec
mov
jl
cmpsl
adc
mov
mov
insb
add
cmp
xlat
inc
fldcw
in
gs
ret
dec
add
sub
clc
mov
clc
sbb
mov
pop
popa
pop
dec
fldl
or
add
sub
imul
mov
pop
push
dec
call
sbb
sub
inc
jae
pop
loopne
cmp
mov
int
xorb
adc
sti
dec
or
js
dec
cmp
and
aas
mov
add
pop
xor
sar
pusha
sbb
mov
ja
fdivrs
xor
icebp
xor
icebp
popf
test
mov
xor
pop
mov
ret
aaa
add
negl
scas
dec
pop
adc
repnz
mov
inc
or
cmc
cmp
ds
shlb
aam
shl
shrl
sbbb
cmpsl
xor
fs
jb
dec
xor
cmp
clc
nop
aaa
aas
scas
or
lret
negl
int
cmpsl
xor
jns
sub
jae
rcl
testb
sbb
int
inc
or
call
dec
inc
sbb
add
sbb
test
in
mov
ja
sbb
clc
mov
adc
mov
sub
mov
mov
dec
movsb
or
dec
lods
out
adc
push
mov
ret
outsl
leave
int3
pop
clc
ljmp
stc
lods
pusha
icebp
stc
shlb
inc
push
pushf
cltd
cmc
add
in
scas
arpl
sbb
aam
jne
or
rorl
inc
out
lret
les
in
inc
test
or
xor
sti
push
inc
push
aam
xchg
int
idivb
add
sbb
jmp
mov
aam
fmuls
leave
lret
hlt
mov
lods
mov
sbb
inc
cmc
in
xchg
lcall
xlat
mov
sarb
call
stos
jl
mov
mov
scas
push
iret
popf
sub
xchg
adc
insl
sahf
gs
xor
mull
mov
inc
push
call
adc
sbb
pop
push
jb
shl
sub
insl
mov
dec
sub
cmpb
movb
mov
fcomps
xchg
adc
cmpsl
scas
mov
pusha
cmc
inc
add
sbb
pop
inc
stc
inc
fwait
inc
repnz
shll
sbb
nop
leave
xchg
fidivrl
bnd
push
and
dec
push
pop
lret
dec
dec
adc
or
cmpsb
push
mov
popf
stos
icebp
pop
push
repnz
repz
lea
andl
cmp
mov
dec
in
pop
js
cs
inc
add
fstp
jne
dec
outsb
test
ljmp
sbb
test
and
mov
ds
push
sbb
xchg
pop
push
movsl
in
adc
rcll
cld
rcr
push
and
sahf
jp
hlt
jp
mov
xchg
or
cltd
push
push
mov
sahf
mov
adc
jmp
fcomps
cmpsl
push
popa
sbb
insl
pop
add
add
out
out
test
adc
out
cmp
imul
in
push
add
cmc
and
nopl
mov
xlat
cltd
dec
lahf
jge
pop
add
loop
pop
jle
loope
mov
leave
mov
mov
add
loop
daa
popa
ret
adc
mov
and
sbb
cs
std
mov
out
addr16
ss
pop
jle
lret
sahf
testl
testb
call
mov
lahf
test
and
enter
sbb
sti
fcmovu
push
or
orb
jecxz
lcall
stos
out
in
mov
cmc
cmc
pop
mov
push
lret
dec
xchg
sub
out
inc
cmpb
xchg
pusha
out
and
cmpsl
ret
fnsave
adc
icebp
subb
xlat
xlat
outsl
lea
cltd
mov
and
outsb
and
cli
icebp
push
sti
shl
add
xchg
xlat
xchg
adc
add
adcb
add
cli
mov
jecxz
cltd
nop
mov
call
pop
js
pusha
dec
xor
loop
out
imul
xor
jne
dec
xchg
sahf
enter
push
pop
or
lods
mov
repnz
lcall
in
sbb
aad
sbb
inc
inc
fldcw
mov
or
les
aas
not
push
orb
mov
cltd
adc
push
fstpt
adc
or
xlat
xlat
push
mov
dec
fdivrl
or
mov
mov
push
jg
xchg
fmul
push
pop
testb
aad
xor
jl
popa
test
push
push
xor
dec
adc
pop
test
stos
arpl
sahf
sti
scas
pop
mov
ret
mov
cmp
mov
mov
mov
loope
mulb
dec
test
jo
dec
nop
fldt
dec
jle
mov
push
xchg
int3
sub
mov
and
sub
cli
dec
pop
repz
push
incb
shrl
dec
adc
pop
push
sti
fisttpll
xor
inc
pop
mov
call
xchg
push
inc
and
sbb
packsswb
add
cltd
negb
lods
data16
scas
jmp
cmpsl
out
push
sub
jle
adc
push
test
mov
jb
push
push
cmp
adc
cmpsb
xchg
add
insb
cld
out
aaa
mov
lcall
pushf
popf
jge
mov
fcomps
xchg
es
mov
sub
fstpl
lds
xor
mov
dec
push
mov
insb
aam
push
pop
jnp
cld
sbb
inc
cld
cmp
mov
outsb
out
in
sub
add
faddl
mov
pop
mov
push
andl
mov
sbb
sub
test
dec
call
xlat
insb
adc
sbb
and
js
fsts
das
add
inc
sub
je
je
pop
out
stos
xchg
pop
push
lods
or
ficoms
test
or
rclb
ds
stc
sub
lret
sahf
scas
ja
xchg
clc
mov
sub
adc
js
ljmp
ljmp
mov
mov
sub
adc
dec
dec
dec
push
sub
aad
das
pop
stos
xchg
clc
xor
movsl
loope
jg
test
shrl
xor
sbb
dec
orl
add
loope
xor
loop
add
push
test
jg
emms
call
cmpsb
arpl
stos
jae
and
inc
push
adc
popa
mov
out
std
dec
mov
inc
out
or
or
xchg
sub
fcoml
xchg
xchg
add
rclb
out
mov
outsl
insl
or
imul
push
jno
add
movsb
mov
mov
fisttpl
lods
push
sub
std
adc
fsubs
jp
dec
mov
mov
and
push
pop
std
push
clc
cwtl
add
add
rcl
data16
js
loopne
mov
div
sbb
add
and
sbb
xchg
push
sti
push
cld
stc
clc
lea
mov
mov
lods
jnp
dec
sahf
fldt
dec
mov
shrb
xchg
cmp
decl
test
mov
es
cli
lods
mov
dec
ds
xor
repz
cmpl
mov
out
cmp
lahf
adc
jne
mov
scas
pop
mov
xchg
popf
fs
mov
inc
cmc
cmpsl
pop
stos
aaa
popa
or
add
aam
lret
mov
mov
sti
les
push
jp
fsubs
sahf
jl
test
mov
mov
inc
data16
insl
mov
and
out
jae
adc
cmp
mov
mov
add
stos
mov
addl
mov
push
shl
outsb
xlat
inc
roll
in
pushw
sub
jmp
xchg
and
stos
iret
fcmovne
loopne
xchg
out
sub
and
add
mov
xchg
cmp
aas
fpatan
divb
lcall
push
push
data16
push
inc
ja
dec
sbb
push
sub
clc
lea
mov
ljmp
adc
fabs
xchg
mov
push
push
push
mov
sbb
ljmp
cs
js
push
pop
or
test
push
js
int3
clc
jae
jbe
rcll
adc
outsl
inc
sub
jbe
push
xchg
mov
dec
xor
xchg
test
xor
dec
imul
lods
xchg
and
xor
jo
adc
jne,pn
cltd
push
add
push
jb
adc
dec
ret
xor
mov
les
rorl
mov
ss
push
gs
pop
popa
jno
xlat
sub
adc
out
pop
popa
lret
mov
pop
int3
mov
sub
add
imul
in
movsb
and
add
imul
mov
lret
add
mov
cmp
fcomps
mov
ror
es
and
cmpb
push
push
jecxz
xor
push
mov
mull
out
inc
sub
shlb
xchg
sarb
and
jns
jno
sub
aam
cmp
lock
lahf
mov
popa
adc
add
xchg
enter
sti
mov
cltd
pop
and
cmc
and
mov
stos
pop
or
in
mov
dec
jle
int3
and
int
out
nop
jo
inc
rolb
fsubs
jo
movsl
xchg
cmc
sahf
in
mov
addl
push
xor
lods
xchg
out
inc
sub
pop
lret
lret
sub
aaa
cmp
int
ret
test
mov
nop
xchg
outsb
scas
lahf
ficoms
xlat
jecxz
ror
loopne
mov
push
xor
mov
jbe
cli
test
sbb
xchg
or
arpl
lcall
xor
add
fisubrl
mov
imul
out
inc
and
in
incl
sti
sbbl
xor
into
push
test
rclb
aaa
cmc
shl
xor
andb
xlat
mov
call
dec
mov
sub
pop
add
mov
cltd
cmp
cmp
inc
add
pop
pop
fadds
or
and
lahf
ss
in
rcl
mov
fisubrs
xchg
xlat
pop
insl
pop
fisubs
dec
xor
test
lret
and
inc
adc
mov
xchg
fsubs
lret
loope
inc
fnstenv
stc
sub
shll
sbb
and
ljmp
xchg
mov
mov
xchg
xor
dec
outsl
ret
into
inc
sbb
sbb
sbb
std
xlat
jne
jb
mov
push
ja
fcomi
pop
add
pop
gs
or
scas
adc
iret
je
fwait
stc
cmp
xchg
jne
sub
push
push
test
push
sbb
mov
lcall
push
xor
add
daa
testl
mov
aas
test
daa
movsb
insb
addl
test
std
bound
push
mov
pop
movsb
jge
fnop
sbbl
adc
inc
add
lock
pop
push
mov
sub
or
mov
mov
push
sbb
addr16
jg
in
in
mov
mov
sub
mov
sbb
xchg
or
sarl
adc
push
add
sub
and
aas
push
faddl
mov
jne
outsb
inc
pop
cltd
into
sbb
jnp
pop
mov
ja
out
lea
inc
jnp
add
clc
pop
and
addr16
outsb
add
dec
scas
movsl
fnstcw
cld
lods
and
mov
ljmp
lock
out
repz
cmp
arpl
and
sub
retw
mov
test
loope
cltd
lods
push
mov
movsb
lods
or
movb
loope
mov
jp
mov
add
lret
push
dec
xorb
outsb
insb
dec
mov
dec
mov
or
clc
loopne
push
jle
fmul
sub
xchg
push
repnz
les
les
daa
xchg
daa
gs
stos
jbe
pop
cwtl
inc
xchg
fcmovnbe
xlat
movsb
lock
jl
sbb
jle
aam
out
mov
out
mov
lock
cmc
popa
sub
lret
mov
hlt
adc
xor
sbb
cmpsl
inc
icebp
iret
xchg
out
lds
or
or
mov
sub
sub
mov
mov
mov
leave
lds
jmp
loop
inc
pop
mov
jge
xchg
sbb
inc
inc
mov
mov
inc
push
lret
aam
test
rcrb
xlat
jp
leave
cmpsb
and
push
test
xor
mov
mov
sub
in
and
dec
adc
mov
dec
out
pop
fsubl
ret
cmp
xchg
xchg
scas
out
jb
lcall
loopne
aad
jbe
mov
xchg
es
inc
out
test
cmpsl
push
fdivl
mov
jp
dec
mov
lods
mov
push
cmpb
push
movnti
fmuls
jns
jecxz
jns
sub
xchg
insb
addr16
loop
and
jns
push
jne
nop
test
ljmp
add
xchg
aam
sahf
jb
dec
rcl
fcmovbe
faddp
push
enter
pop
lods
dec
or
fs
imul
push
daa
test
sbb
xor
inc
add
xchg
sbb
mov
cmp
sbb
inc
daa
cmp
popa
ja
ret
jmp
cmc
pop
inc
lret
mov
pop
lret
clc
sub
mov
dec
stos
repz
and
lret
daa
dec
push
xor
out
call
fwait
and
adc
mov
stc
hlt
stos
sahf
push
xchg
dec
dec
fldt
and
push
jno
mov
rclb
jp
sub
mov
inc
in
lret
popa
or
xchg
hlt
js
bt
loope
dec
sbb
repnz
cmpsb
adc
test
das
cltd
dec
js
pop
lds
dec
popa
lock
aas
mov
inc
adc
cmp
aas
push
outsl
outsb
mov
sub
lea
push
imulb
adc
aam
adc
int3
mov
or
outsb
addr16
outsb
and
sbb
insl
inc
xchg
movsl
jo
movsl
sub
sahf
fwait
push
cmp
jns
aaa
or
xchg
je
dec
loopne
adc
jle
stos
or
mov
loop
out
inc
dec
or
mul
std
cli
pop
es
leave
sahf
pop
sub
cld
jl
pushf
xchg
xlat
add
ljmp
loopne
inc
xchg
in
movsb
and
pop
scas
and
icebp
mov
or
jle
ret
fmulp
or
mov
pop
jb
in
sbb
pop
inc
adc
lahf
in
daa
and
je
aaa
stos
outsl
lcall
outsl
and
in
mov
pop
sub
sub
sbb
std
jl
dec
pop
mov
pusha
pop
and
xchg
push
push
repnz
int
pop
jge
or
dec
dec
adc
xchg
in
sub
sub
xor
outsb
testb
or
xchg
les
mov
jl
pop
sbb
mov
push
cmp
mov
or
dec
push
cmpsl
aaa
pop
mov
sub
cmp
cld
andl
jle
or
daa
push
ss
ds
je
add
ss
pushf
pop
js
orl
push
arpl
mov
add
cmp
into
ja
std
cmp
lret
mov
flds
daa
push
int
mov
jne
pop
out
jmp
loope
mov
lock
jg
and
xchg
adc
xchg
das
mov
movsb
cmp
xor
fchs
dec
arpl
or
loop
inc
sti
mov
sbb
rolb
das
scas
fs
adcb
cli
or
cmc
mov
sbb
out
cwtl
cmpsl
xchg
inc
xor
pop
pop
lcall
jb
mov
stc
repnz
pop
mov
imul
stos
mov
jle
sbb
pop
sbb
xlat
mov
mov
shr
ljmp
mov
add
repnz
jecxz
push
jp
rorl
push
int
mov
fptan
sub
mov
xor
loope
sbb
cmp
jns
es
sbb
push
and
xor
xor
xlat
sbb
iret
mov
out
int3
ror
rolb
and
inc
cmc
stos
sti
in
ret
pop
subw
xor
push
cwtl
mov
push
dec
and
sub
imul
out
jmp
pop
and
aad
leave
cld
rcll
out
mov
or
lods
ret
in
out
fdiv
les
inc
push
pop
push
int
push
cmp
push
sub
cli
sarb
test
add
mov
fnsave
inc
dec
dec
mov
cld
xchg
pop
and
scas
pop
inc
add
sub
cmpsb
imul
fwait
cmp
mov
mov
jecxz
fst
jbe
mov
mov
xor
sbb
xor
push
int
mov
pushf
cmc
insb
or
into
inc
loopne
push
test
shll
rep
pushf
es
cmc
xchg
inc
add
push
out
cmovb
push
cmpsl
and
cmp
jns
xchg
rcl
mov
mov
iret
cmpsb
and
loope
mov
dec
out
mov
js
leave
movsl
jmp
sub
pop
movsb
and
daa
add
or
mov
adc
decb
rcll
stc
add
mov
push
and
call
mov
mov
ret
push
pop
sbb
rcr
pop
add
nop
mov
or
movsb
aad
mov
push
mov
mov
adc
xchg
lahf
ret
xor
and
int
fwait
leave
iret
cltd
sti
lods
outsb
jge
xchg
or
dec
sahf
das
aas
pop
mov
jo
mov
pop
adc
xchg
mov
add
stc
fwait
mov
cld
add
divl
mov
roll
int
lea
xchg
out
pop
jae
pop
out
sbb
in
stos
add
and
jge
jg
imul
xchg
jb
mov
inc
sbb
insl
aaa
cwtl
in
xchg
call
push
stos
jge
mov
xchg
or
mov
inc
mov
test
mov
repz
push
mov
jns
inc
in
push
xchg
flds
popl
hlt
test
cwtl
push
xor
sub
mov
add
dec
or
sbb
in
or
popf
pop
sbb
mov
dec
nop
in
lock
movsl
push
fldcw
clc
mov
push
cld
ret
xchg
and
jbe
pop
mov
loopne
or
push
or
dec
jmp
pushl
mul
cmp
mov
fstps
and
mov
outsl
sub
jmp
jmp
push
jb
xchg
mov
clts
dec
and
popf
ffree
pop
and
push
xchg
xor
xchg
inc
inc
out
mov
dec
mov
test
push
fisttpll
add
lods
shll
jp
cmp
push
in
es
sub
xlat
jnp
jne
bound
cwtl
inc
cli
xor
je
lock
cmpsb
mov
xchg
pop
mov
pop
repz
push
test
jg
pop
and
jno
popf
fisubl
adcl
sbb
jg
rolb
jo
leave
or
shll
out
push
aaa
rorl
push
inc
fstpt
js
push
repz
std
stos
je
ret
lods
inc
rcrl
daa
dec
mov
insl
aam
mov
adc
mov
clc
cmp
fisubl
out
enter
jg
cmpsb
inc
arpl
adc
adc
jl
out
jge
fcomip
mov
push
jne
lahf
sbb
mov
adc
or
push
mov
testb
mov
jns
add
cmc
jns
pop
pop
dec
inc
lock
ret
cmc
xchg
arpl
push
fisubs
sbb
iret
sub
xchg
cmp
sahf
xor
cld
xlat
and
test
int
out
inc
dec
xchg
shlb
xlat
loope
arpl
dec
leave
aad
ret
mov
inc
sub
orl
ljmp
lcall
mov
jge
adc
push
testb
clc
mov
cmpsl
lods
mov
inc
jge
mov
stc
ds
mov
sbb
cmp
sbb
scas
jbe
data16
or
js
xor
lret
mov
jbe
mov
push
sbb
xchg
ret
cli
and
popa
mov
test
mov
loopne
ljmp
je
loopne
lods
mov
push
sub
xchg
mov
scas
sbb
jecxz
push
clc
dec
xchg
mov
jg
mov
jno
imul
pushf
aam
shl
inc
add
xchg
out
xor
push
pop
push
daa
add
movsb
push
or
iret
out
xchg
mov
inc
ror
push
cmpsl
mov
jmp
adc
cmp
adc
xchg
mov
dec
mov
pop
add
or
inc
inc
out
pop
cmp
push
mov
xlat
push
dec
out
or
sbb
push
aaa
popf
mov
clc
sahf
xchg
test
lret
mov
jp
inc
adc
hlt
push
and
mov
insb
or
xor
dec
mov
push
pop
xlat
pop
jne
xorb
adc
pop
mov
jmp
cmc
out
xor
neg
push
xchg
mov
xchg
movsl
inc
xor
loope
cs
test
outsb
pop
push
pushf
call
pop
xor
lea
out
test
pop
test
out
loope
dec
aas
sub
fwait
dec
jne
sti
pop
mov
cmpsl
ss
scas
jmp
cld
mov
insl
cmp
jmp
xor
outsb
aaa
out
out
pop
mov
xor
popf
inc
leave
nop
xor
sub
adc
icebp
jl
dec
sbb
scas
push
popa
or
into
add
mov
add
bound
adc
insb
sub
out
es
sub
loope
push
pop
ja
lock
dec
or
fisubl
mov
push
adc
inc
pushf
jae
popf
push
daa
fcomp
xchg
pop
in
add
dec
fs
push
enter
lds
fnstcw
into
push
pusha
xor
and
movsb
and
ds
lahf
dec
inc
inc
xor
xchg
scas
fidivrl
inc
cwtl
or
mov
sbb
xor
jno
mov
loope
cmp
sub
inc
inc
jbe
out
fnstcw
mov
mov
lods
add
je
fs
lahf
or
je
fwait
dec
out
cmp
ja
cmp
call
pop
mov
or
sub
cmp
aas
xor
and
mov
dec
bound
sub
dec
xchg
nop
pop
adcb
dec
test
pop
cmc
pop
loopne
dec
mov
ljmp
rolb
das
sub
nop
inc
mov
sbb
push
call
notb
cmp
test
push
jle
xchg
hlt
push
inc
popa
mov
or
mov
inc
mov
sbb
mov
lock
shrl
sbb
sub
fs
fdiv
fbstp
das
jne
lret
xor
decb
xchg
dec
sbb
jne
sarb
inc
inc
adc
mov
adcl
ret
fs
cmpsl
adc
pushf
mov
xchg
inc
pop
mov
lret
pop
das
sub
xchg
xor
inc
sbb
insl
cli
gs
lea
add
inc
dec
aas
mov
mov
mov
xor
mov
sub
jecxz
das
sbbb
mov
gs
xlat
and
push
push
fcmovbe
inc
xchg
mov
mov
jb
add
pop
push
fcmovnu
ljmp
daa
adc
inc
lea
xor
cmpsb
push
sbb
stc
sbb
leave
add
call
xchg
mov
jle
cli
das
and
adc
mov
jl
aad
xchg
mov
rcrl
mov
dec
or
cmp
ret
jecxz
cmp
dec
pop
or
jmp
jg
pop
jmp
inc
pusha
ret
neg
pop
pop
mov
loop
outsl
stos
mov
out
pop
cmp
clc
fcmovnbe
cltd
repnz
mov
push
sbb
cwtl
test
cmpsb
inc
adc
push
xor
int3
sub
add
xchg
lret
lret
fdivr
call
dec
dec
enter
add
sub
insl
aad
je
rorl
jbe
dec
popf
sahf
add
loope
xchg
mov
add
fldl
out
aas
fwait
push
adc
imul
sub
stos
cmp
je
or
inc
out
lods
push
ljmp
xor
xlat
or
cmp
sbb
mov
jo
xlat
std
pop
push
inc
fldl
stos
in
fdivrp
jp
and
xchg
mov
jg
pop
mov
sub
ja
add
subl
fmul
sub
sarb
ret
lcall
fldl
enter
jp
popf
cmpsl
push
inc
lea
sbb
int
call
sbb
fldenv
sbb
ds
mov
js
ret
jns
imull
lea
movsb
cmp
loope
cmpsl
dec
pop
push
sub
push
sub
pop
sub
ficomps
repz
jne
lret
inc
hlt
insl
popa
shr
js
and
mov
push
push
outsl
ret
xor
cmp
clc
fwait
pop
jecxz
in
add
iret
mov
xor
mov
xor
pop
je
cli
adc
inc
adc
sub
cmpsl
dec
push
bound
mov
scas
cwtl
lds
sbb
call
xchg
dec
add
and
or
iret
imul
sub
and
or
fstp
xchg
jno
xchg
lods
arpl
and
insl
ret
enter
decl
icebp
mov
fcoms
shrb
sub
jne
or
add
pop
jmp
mull
adc
jg
sahf
lahf
mov
sub
cltd
and
cltd
je
clc
idivl
pop
ret
sbb
loope
pop
or
sub
jle
sahf
aad
popa
mov
pop
jb
fstpt
jle
shlb
sbbl
or
icebp
xchg
adc
enter
aas
xor
push
roll
js
ljmp
insb
pusha
out
xchg
sub
int
cs
insb
xchg
cmp
dec
mov
adc
das
in
inc
dec
jg
mov
sbbl
add
cli
mov
mov
ret
rorl
or
pop
pusha
fisttps
cmp
xorl
mov
fists
lcall
xor
push
into
and
lea
sbbb
adc
add
adc
daa
and
aaa
sarb
push
push
add
aam
jmp
fsubrs
or
and
cmpsb
or
dec
sar
mov
mov
xchg
mov
jg
add
lock
imul
xor
cld
xchg
mov
aas
fsts
lods
xchg
lds
pop
mov
lea
test
cmp
xor
push
hlt
xchg
inc
rcll
repnz
mov
sbb
pop
call
mov
pop
add
cltd
and
mov
inc
jnp
adc
mov
ret
mov
mov
cld
push
or
jmp
cld
mov
mov
dec
or
xor
loopne
js
cmpsl
insl
popa
jns
jl
mov
cmc
lahf
jns
je
dec
aas
sub
pusha
cmp
dec
mov
lods
cmp
jne
mov
jno,pt
or
pop
xchg
push
mov
aaa
cmp
or
paddd
mov
mov
popw
sbb
xchg
xor
ja
hlt
dec
mov
iret
into
cltd
dec
loopne
cmpsl
enter
sbbl
mov
ret
fs
and
pop
and
fisubs
mov
mov
xchg
call
pop
dec
xor
push
lea
bound
pusha
fwait
out
add
andb
fucomi
mov
jno
inc
shll
adc
orb
iret
fsubrl
jmp
or
loop
mov
sbb
mov
cmpb
fmull
stos
call
les
mov
out
jne
out
inc
cwtl
rcr
cld
insl
inc
sub
test
addr16
xor
xorl
xor
arpl
add
out
incb
pusha
mov
in
xchg
lock
inc
fwait
loope
es
jecxz
aas
aaa
xchg
addr16
repz
scas
nop
xchg
push
mov
sbb
xchg
pop
push
es
dec
stc
mov
sub
pop
lret
dec
adc
jmp
cltd
lahf
movsb
bnd
hlt
jp
inc
xor
mov
test
fnsave
push
ds
sbb
shlb
dec
sbb
mov
sub
pop
iret
push
cmp
aam
cmp
insb
orb
inc
sbb
rcl
mov
push
xor
cmp
xchg
add
sub
lret
or
xchg
push
add
cmp
cmc
fbstp
xor
inc
loope
push
les
out
leave
jle
inc
incl
out
xchg
out
lret
popa
loope
repnz
outsb
sbb
fisubrl
dec
cmp
outsb
inc
adc
nop
cmp
fdivrs
dec
cmp
lods
addr16
les
arpl
mov
jnp
xchg
call
movsl
aaa
sahf
lcall
pusha
adc
lods
dec
repz
sub
mov
mov
mov
push
mov
mov
pop
pop
adc
inc
cmpl
adc
cld
add
insb
xchg
enter
sbb
test
xchg
or
pop
dec
cmpsb
jno
mov
inc
negb
shrb
adc
xor
pop
mov
pop
mov
xchg
int
lret
or
sbb
mov
fs
outsl
or
jo
stc
xchg
jge
mov
imul
movsb
inc
pop
jp
lret
out
jb
lret
rcll
lahf
rcr
adc
dec
push
cltd
cmp
stc
sahf
fcomps
mov
repnz
push
pop
or
fmull
jns
pop
sbb
sti
stos
repz
lea
and
pop
jb
dec
imul
lods
lock
jmp
or
ja
decl
xor
lods
push
adc
rorb
gs
jge
sarb
add
addr16
xor
lods
mov
sub
mov
push
std
xchg
mov
or
in
insl
jb
pop
dec
or
pop
mov
dec
xor
dec
lods
adc
popa
jb
int3
das
adc
cld
and
xor
test
clc
mov
mov
rolb
out
jg
fildll
pop
sub
push
fadd
add
sub
mov
fdivs
jbe
ljmp
push
mov
pop
data16
sahf
mov
dec
data16
pushf
jns
cmc
daa
testl
adc
inc
out
push
loopne
cmpsb
imul
test
icebp
orl
cli
ret
cmpsl
in
mov
cltd
mov
daa
sbb
ret
stos
test
adc
repz
sbb
xor
sbb
xchg
mov
inc
arpl
mov
mov
pop
ja
fdiv
into
out
int
les
xchg
lret
mov
dec
mov
mov
inc
gs
and
xorb
gs
jae
inc
jbe
ljmp
adc
sti
mov
dec
or
movsb
mov
pusha
lret
pusha
jae
xchg
pop
daa
sbb
inc
movsl
aaa
mov
and
loop
std
es
outsl
into
xchg
outsb
fbstp
sbb
daa
nop
je
or
xlat
sub
add
repnz
xlat
lcall
pop
jmp
cmp
mov
bound
popf
push
fstl
test
into
jge
ljmp
sbb
jle
repz
insb
aad
cmp
inc
iret
shrb
das
sub
pcmpgtb
pop
pusha
popa
loope
cmp
loope
lret
iret
fcomip
jno
adc
sbb
mov
cmp
incb
push
mov
pop
adc
jp
cmp
lret
sbb
fdivrs
or
scas
movsb
xchg
mov
xchg
inc
mov
enter
addl
or
imul
xchg
mov
adc
adc
push
mov
aam
adc
push
xchg
xor
adc
das
pop
sahf
mov
fimuls
sbb
dec
out
xor
push
sbb
lahf
dec
fmull
lret
and
inc
inc
sbb
loope
xor
mov
pop
call
data16
or
dec
xchg
fs
cs
dec
lahf
addr16
addb
ss
dec
add
cltd
inc
cmpsl
add
cltd
add
outsl
rclb
adc
mov
sarl
lods
dec
pop
pop
lret
sub
mov
xlat
pop
leave
jnp
push
adc
push
mov
out
sub
jg
xchg
mov
jae
mov
inc
add
dec
into
leave
add
pop
xorl
int
mov
test
add
popf
mov
jbe
xchg
fwait
mov
out
cmp
cmpb
mov
jle
pop
pop
xchg
xchg
push
mov
jbe
aam
pop
scas
mov
xchg
xchg
pop
add
loope
imul
mov
lock
mov
xchg
add
add
test
clc
cmp
sbb
sarl
sub
roll
inc
push
mov
mov
scas
icebp
bound
andl
pop
imul
jle
addl
add
loop
fisubrs
jp
test
mov
cmp
mov
jp
push
arpl
std
mov
cmp
stos
xor
test
and
cmpsl
negb
ljmp
pop
fisttpll
mov
push
cmpsl
in
add
jl
push
add
push
mov
dec
mov
shll
arpl
sub
push
in
cmpsl
jg
test
in
push
fidivl
sti
jge
mov
mov
pop
cmp
dec
cmp
jae
in
sbb
pop
dec
icebp
scas
pop
fidivs
fwait
or
mov
scas
xor
xor
add
xor
dec
arpl
fsubr
mov
push
adc
fwait
orl
jmp
adc
or
adc
inc
or
fstpl
pop
lods
fbld
pop
sub
jg
mov
test
or
stos
jns
mov
push
cmp
xchg
pop
ret
mov
movsb
pop
push
out
push
movsl
mov
repnz
jne
xor
mull
ljmp
push
sbb
inc
out
aas
iret
and
cmp
mulb
push
lds
fstps
loopne
aad
jno
cmc
sub
inc
les
jge
pop
in
xlat
cmp
rclb
push
sbb
mov
dec
dec
add
xor
sbb
in
adc
cmp
mov
mov
out
in
insb
int
mov
add
cmp
mov
and
jge
arpl
mov
xlat
cwtl
cmp
adc
cmp
ret
cmp
clc
ljmp
loop
push
sarl
dec
call
in
lock
fisttps
in
pop
add
or
call
sbb
fwait
insb
pop
push
inc
jg
call
aaa
adc
or
lret
lcall
or
cs
mov
sub
nop
sub
xor
shlb
addr16
mov
jge
jns
push
adc
sti
ljmp
push
rcrb
pop
adc
dec
jg
jp
cmp
add
dec
xchg
loope
pop
icebp
cwtl
lock
mov
icebp
add
lcall
out
lds
mov
mov
leave
enter
stos
js
in
adc
decl
test
std
push
leave
inc
jae
mov
sub
int
push
dec
cmpsl
fnstcw
inc
hlt
sbb
loopne
xlat
pop
imul
pop
mov
imul
in
int3
cmp
mov
repz
sub
shlb
mov
push
push
aad
out
rorl
and
cmp
popf
dec
lcall
das
xchg
mov
lcall
test
inc
cs
sbbb
ret
dec
push
push
lcall
mov
out
in
pushf
in
lret
mov
movsb
jnp
mov
popa
xchg
jmp
pop
add
adc
or
pop
inc
mov
sub
stos
inc
inc
pop
xor
jle
rol
clc
adc
int3
insl
jae
test
sbb
js
push
aaa
mov
add
xchg
pop
dec
movsb
sub
and
iret
sarl
rcl
dec
nop
cwtl
sub
dec
in
adc
adc
out
pop
sarb
cmpsb
gs
sub
mov
fstpt
push
movl
adc
addl
stc
add
xchg
dec
add
jge
sti
adc
and
repnz
xchg
loop
mov
or
lret
test
mov
dec
sbb
mov
out
xor
jmp
pop
mov
cmp
scas
lgs
mov
ret
dec
pop
pop
outsl
lcall
or
inc
ljmp
add
ret
or
repnz
xlat
loope
out
das
scas
or
popa
and
mov
fdivrs
push
outsl
pop
xchg
mov
popl
popa
jl
test
or
pusha
cmp
test
or
imul
adc
push
mov
push
add
sarb
es
pop
je
test
inc
cmc
or
fdivrl
test
pop
pop
stos
sbb
add
jle
and
aam
jns
adc
mov
ret
adc
cmp
repz
movsl
data16
pop
or
dec
fmull
sbb
inc
xor
ss
test
mov
in
xlat
cmpsl
adc
adc
dec
es
sub
in
in
dec
push
pop
dec
ret
cmpsb
in
xchg
in
fsubs
lret
jnp
mov
sbb
loope
shlb
pop
mov
aam
push
jbe
jno
push
enter
pop
and
out
push
add
rorl
mov
cmpsl
or
push
sub
lea
pop
pop
test
iret
mov
cmp
aas
inc
icebp
scas
int3
adc
clc
testl
mov
int
mov
cs
test
imul
pop
lds
das
add
and
shll
xchg
bound
mov
mov
subb
or
ret
call
mov
cmpsl
cmpsb
xchg
lret
sti
sub
pop
shlb
pusha
bound
mov
sbb
dec
imul
xor
jmp
adc
sti
mov
mov
sahf
add
ss
aaa
jecxz
mov
shrl
xchg
out
in
imul
daa
stc
or
dec
jp
fstl
in
inc
and
das
jo
cltd
cmp
push
hlt
mov
out
sbb
add
dec
add
std
std
stc
jge
cmp
cmp
dec
test
insb
divb
xchg
or
xor
cwtl
aas
fwait
pop
cltd
sbb
jp
adc
dec
iret
inc
xor
jae
push
pop
jae
psrld
jb
inc
push
pushf
fnsave
jns
insl
das
lcall
fdivl
test
movsb
test
in
sub
ljmp
or
push
iret
mov
cmc
sbbl
ds
mov
cmpsb
adc
lods
pusha
cmpsl
xor
popl
pop
push
cli
inc
movl
push
xchg
loopne
les
loop
dec
xchg
sbb
adc
mov
lock
ds
jp
out
daa
insb
test
inc
fnsave
sarl
mov
test
push
cmp
pusha
adc
in
adc
mov
aas
or
subb
xlat
insl
pop
repz
mov
push
stos
pushf
in
call
jmp
or
jp
bound
sub
stos
sbb
bound
push
push
lods
sbb
xor
lahf
jnp
push
fidivrs
cmp
je
test
addr16
mov
pop
or
in
mov
inc
adc
das
filds
jae
or
xchg
sub
push
enter
dec
in
test
or
adc
les
fdivrs
mov
pop
lahf
mov
xor
jmp
adc
jnp
pop
push
popf
test
lds
sub
daa
jmp
insl
mov
push
or
jne
add
add
and
sub
andl
es
add
mov
mov
adc
iret
inc
mov
jp
mov
push
lock
add
and
test
pop
lea
push
out
jg
jne
fisubl
push
sbb
mov
mov
and
dec
dec
push
and
xchg
lock
cmp
push
xor
ja
popa
dec
mov
shl
repz
fsubs
jecxz
adc
push
xor
cmc
dec
popf
sub
sub
mov
lds
addr16
sbb
adc
sbb
and
pop
cltd
mov
xchg
add
stc
mov
dec
push
add
sbb
xor
subb
popa
iret
sbb
nop
.byte
test
sbb
mov
and
cwtl
add
cmpsl
mov
or
aaa
xchg
xchg
cli
or
cld
aam
ret
pop
add
jecxz
sbb
popf
add
test
subb
repnz
push
inc
loop
and
std
bound
fs
jle
pushf
and
addr16
mov
dec
lea
jbe
jns
fwait
add
dec
sbb
adc
xor
fisttpl
idivb
xor
jp
push
mov
scas
lahf
repnz
dec
stc
jbe
pop
mov
test
sub
mov
rcrb
mul
rcll
dec
push
test
push
aam
cmp
arpl
jmp
test
mov
popa
cmp
cmp
std
mov
lods
inc
push
push
lahf
movsl
fistps
push
ret
adc
out
push
sub
and
lock
aaa
push
test
rorb
nop
sbb
lcall
mov
scas
fwait
insb
mov
aad
mov
and
lahf
inc
out
dec
push
add
mov
pop
jle
ds
outsb
mov
rcl
xorb
mov
leave
out
pop
shrb
leave
add
mov
aaa
sbb
jno
mov
call
call
mov
push
xchg
insb
rol
ror
mov
in
push
ret
cli
stc
mov
lea
daa
gs
aaa
add
ljmp
sub
and
push
insb
push
test
sub
xlat
or
stc
out
ss
cld
bnd
inc
out
fldz
addr16
cmc
orb
or
push
in
mov
jnp
stos
dec
aaa
aaa
loope
test
add
xchg
mov
insb
xchg
fmull
adc
sbb
inc
cltd
mov
or
ja
in
sub
jg
lods
pop
and
fadds
repnz
xor
add
imul
mov
in
mov
pop
xchg
std
or
sbb
les
pop
inc
inc
push
cmpsb
pop
fwait
mov
aad
inc
clc
and
sub
xor
dec
lock
daa
dec
add
and
int
inc
inc
lret
aad
push
pushl
incb
int
mov
sub
insb
dec
int3
jno
daa
stos
sbb
hlt
testl
sub
pop
dec
mov
ds
jge
push
shl
fbstp
xchg
xchg
aas
cs
add
mov
ret
cmpb
repnz
inc
cmpb
xor
insb
jne
bt
jp
dec
xlat
mov
sahf
loop
out
stos
mov
iret
adc
rcrb
sub
mov
inc
aas
fstpl
jns
lea
mov
shlb
in
sub
dec
mov
push
outsb
pop
cmp
popf
xor
fstpl
push
mov
xchg
outsl
pop
sub
fimuls
es
mov
repnz
sbb
dec
sbb
inc
out
lcall
or
in
stos
iret
xlat
scas
dec
adc
push
cltd
mov
push
pop
pop
in
add
fildl
stos
in
jge
je
pop
xor
sbb
mov
stc
dec
mov
adc
inc
in
mov
jg
sahf
mov
or
jge
popa
inc
sub
xor
dec
pop
add
ds
push
mov
lret
or
sahf
add
in
jns
mov
jmp
lahf
outsl
les
xchg
inc
add
inc
rep
adc
or
jns
stc
aam
inc
rcrl
jg
or
scas
sub
insl
push
cmc
push
cmpl
jmp
push
enter
test
stos
dec
fmulp
jo
push
arpl
int3
push
sub
call
lret
pop
mov
std
dec
shrb
mov
jbe
jno
or
jno
or
into
adc
cmp
frstor
sbb
cmp
mov
es
neg
cmc
mov
enter
sub
js
dec
pop
add
add
out
in
xor
xchg
add
ljmp
xchg
sub
gs
inc
mov
lret
jl
add
dec
fadds
jb
sbb
ret
mov
dec
iret
imul
lret
sub
mov
imul
sbbb
enter
mov
and
fdivrs
pop
adc
jge
pop
xchg
insb
dec
fcom
cld
lods
mov
cmp
lcall
adc
mov
jle
push
call
icebp
push
ljmp
out
in
and
and
xchg
fbld
jb
in
hlt
test
xor
mov
xchg
ss
les
in
stos
mov
es
cli
cmp
xchg
hlt
out
mov
mov
pop
and
aas
adc
in
out
push
imul
add
sbb
adc
mov
shr
mov
sub
hlt
scas
and
dec
rcrl
gs
push
mov
lds
push
imul
in
cmp
imul
xchg
les
or
insb
int3
push
add
push
add
aam
xchg
cmp
js
cmp
fs
out
popf
inc
pop
xchg
xor
cmpsb
and
aas
xchg
jns
rolb
test
inc
enter
adc
pop
adc
nop
mov
dec
sahf
cli
ss
or
dec
outsb
mov
dec
test
mov
das
jge
fildll
cld
popf
scas
jmp
or
xchg
mov
rol
std
test
fmull
cmpsb
pop
negb
sahf
push
adc
cld
sbb
test
gs
testb
sbbl
xor
daa
sbb
arpl
adc
movsb
repz
sbb
lods
mov
or
in
cmp
or
imul
jl
push
test
clc
jno
loopne
mov
lds
das
out
lcall
cwtl
sub
fucomip
or
sti
enter
pusha
js
sbb
std
mov
push
sbbb
loope
cltd
mov
push
jbe
cs
dec
add
imul
mov
cli
hlt
insl
mov
jae
inc
mov
inc
mov
add
jp
pop
jae
jnp
imull
scas
movsl
push
mov
xchg
imul
push
and
push
xor
je
aas
xlat
stos
push
xor
inc
fidivs
mov
shlb
xlat
or
pop
scas
add
mov
pop
loope
push
inc
push
pop
jl
idiv
emms
add
push
sahf
stos
ljmp
mov
aad
mov
add
sarl
aas
and
stos
add
stos
jp
addr16
movsb
cmp
jg
and
mov
xor
fwait
inc
dec
rcll
xchg
movsb
sbb
js
in
sub
and
push
pop
xor
inc
cmpl
pop
push
into
adc
arpl
push
cmpl
cs
popa
cmc
mov
push
xor
inc
add
cmp
inc
push
push
arpl
fmull
in
jg
stc
xor
mov
pop
jp
loop
fmull
sbb
jae
fsubl
ror
inc
scas
xchg
pop
pop
adc
pop
notl
xchg
or
push
notb
jnp
push
sbb
jae
or
xor
lcall
jecxz
lcall
lds
shll
jmp
push
mov
mov
fwait
jns
repnz
outsb
adc
push
pop
cmp
xchg
push
jne
inc
fcompl
jb
popa
xchg
int3
nop
out
push
adcb
out
xchg
xchg
hlt
popa
or
aas
adc
sbb
add
add
std
mov
stos
mov
adc
pop
rorb
xchg
sbb
lret
mov
int
idivb
sub
push
inc
mov
test
fists
xchg
adc
stos
decb
std
mov
sbb
push
js
xor
sub
dec
dec
sahf
mov
push
inc
ja
inc
or
inc
test
mov
push
nop
sarb
xor
push
js
mov
loope
cmp
dec
insb
test
aas
repz
xor
data16
lret
and
scas
fdiv
jae
sub
into
out
jge
subb
ret
imul
sbb
mov
test
pop
adc
cmp
jg
dec
mov
imul
fwait
inc
add
outsl
adc
popf
lds
xchg
push
in
inc
pop
testl
popf
aad
adc
mov
sbb
popf
cwtl
cmpsl
push
push
lahf
fwait
adc
jecxz
mov
jge
and
dec
mov
pusha
cltd
clc
es
hlt
jl
cwtl
jno
xchg
jle,pn
xchg
enter
dec
test
fmul
cmp
sti
int3
and
mov
mov
arpl
inc
pop
sub
mov
jl
push
cmp
shl
fwait
push
push
adc
sub
pop
cmp
dec
adc
xchg
xchg
cld
repz
xchg
sbb
shlb
std
cmp
je
lock
aaa
mov
jae
ficoml
xor
xchg
stos
outsl
icebp
add
jmp
fildll
inc
cmp
add
repnz
repnz
aam
pop
mov
cmpsl
mov
xchg
out
mov
push
pop
rcll
and
addr16
fcomi
push
push
pop
vpmulhuw
lahf
outsb
test
push
sbb
and
daa
fmuls
je
dec
and
lcall
mov
std
mov
orb
scas
add
pop
lcall
inc
adc
outsl
aad
out
movsl
or
hlt
and
cwtl
cmp
or
cmp
insl
mov
inc
dec
cmp
repnz
sub
addr16
cmp
test
test
sbb
enter
sub
xchg
mov
push
sub
fildll
fidivs
fnstcw
in
push
adc
cltd
adc
int
popl
add
add
ret
dec
je
add
pmullw
push
and
mov
movsb
lret
jle
mov
pop
imul
mov
push
adc
xor
xchg
xor
pop
xchg
cmp
repz
into
pop
pop
push
pop
or
or
cmp
xchg
fs
fsubrl
adc
jp
int3
ret
mov
fwait
lcall
cmp
mov
dec
mov
mov
pop
add
daa
or
sub
rcl
push
imulb
stc
ret
data16
or
repz
nop
push
jle
jbe
dec
sub
mov
cmp
loope
mov
enter
sbb
fmul
pop
out
pop
adc
arpl
mov
push
sub
stc
es
or
push
js
cld
in
pushf
jne
inc
lcall
in
mov
add
inc
fldl
cmp
cmp
add
push
hlt
adc
mov
daa
shlb
loop
test
enter
cwtl
cltd
add
xchg
xchg
xchg
cmp
andb
cmc
and
mov
sub
aad
inc
loopne
js
dec
iret
xor
adc
or
les
and
ja
sbb
in
jg
andl
ss
scas
aam
mov
push
dec
test
movsb
mov
xchg
aam
jle
inc
cli
pop
cmp
xchg
mov
pop
les
mov
dec
sbb
iret
lahf
dec
mov
dec
adc
cmpsl
push
sub
aaa
pop
pop
sahf
jno
outsl
mov
test
mov
mov
call
out
loopw
xchg
xor
aam
add
jl
xchg
int
push
xlat
mov
sbb
or
neg
and
inc
insb
pusha
imul
adc
jb
mov
jnp
cwtl
enter
in
xchg
dec
out
sbb
jnp
daa
imul
ss
loopne
mov
loop
lods
leave
or
aas
cmp
add
les
inc
cmp
daa
sbb
jg
dec
aad
cmpsb
addr16
test
stos
pop
or
daa
sub
in
js
push
shr
sbb
sbb
jle
push
stos
mov
push
push
mov
shr
jecxz
popa
pop
js
stos
mov
sahf
pop
cmp
cmp
fists
cli
rcl
xchg
xor
inc
popf
dec
or
sahf
sub
les
scas
mov
addr16
pop
test
stos
cmp
mov
hlt
repnz
pop
xorl
mov
andl
scas
out
out
jnp
das
push
mov
nop
sub
mov
in
les
add
in
clc
mov
and
rol
add
mov
int3
je
std
aaa
das
iret
cmp
cmp
mov
pop
xchg
mov
cmovle
shll
push
divb
aaa
aam
mov
xchg
inc
mov
iret
push
testl
lret
aas
push
sub
pop
dec
out
ja
out
cmp
aam
mov
or
mulb
loop
out
pop
test
adc
pushf
jmp
pusha
add
xor
test
insb
and
and
xchg
into
jnp
fs
pop
out
and
or
loope
push
dec
outsl
in
aam
pop
xor
add
shrl
push
push
sub
lret
popa
loop
and
or
shlb
add
cli
adc
test
pop
push
sub
out
mov
icebp
cmp
jns
xor
xchg
outsl
nop
adc
enter
mov
pop
mov
addl
add
movsb
and
cltd
pop
inc
jecxz
mov
jae
ljmp
mov
fs
fdivr
xor
jge
insl
clc
in
lret
sub
es
shrb
mov
enter
lods
xor
and
pop
mov
les
xchg
test
test
out
cmc
notb
or
popf
fadds
in
fcompl
cmp
mov
xchg
adc
rclb
lcall
arpl
sub
mov
in
jg
out
sub
mov
pop
sarb
outsb
jo
cmp
mov
sub
or
fbld
jne
inc
xchg
pop
out
loope
xorb
divl
test
fidivrs
sbb
bt
push
cmp
mov
aas
lock
pop
stc
dec
jecxz
test
mov
xchg
pushf
fwait
mov
inc
ficomps
inc
.byte
.byte
and
add
scas
ljmp
popa
adc
xchg
lcall
aad
out
or
mov
dec
inc
jno
aaa
rcll
cld
aaa
jb
push
push
mov
mov
leave
fistpll
pop
icebp
xor
orl
rclb
add
outsl
js
mov
push
ret
in
lock
loop
cld
movsb
mov
test
std
add
out
addb
mov
hlt
inc
int3
or
arpl
pop
add
test
xchg
int
pop
rcrl
in
sbb
adc
jns
lret
mov
stc
push
je
add
mov
icebp
cld
xor
or
jp
movsb
nop
add
pop
xor
test
sbb
jge
test
rolb
aad
add
sbb
sbbl
verr
adc
dec
lahf
and
jl
push
lds
icebp
dec
cmpsb
xchg
pop
aas
push
hlt
loope
jge
fidivl
movsb
mov
inc
pop
ja
cld
add
fs
ret
or
mov
push
std
cmp
pop
scas
shlb
ficoms
add
mov
add
xchg
xor
mov
lcall
cli
lret
add
insb
daa
addl
movsl
nop
cmp
in
jmp
loop
insb
in
lahf
xchg
add
sub
loop
scas
fwait
addr16
xor
xor
jp
sbb
push
sbb
inc
mov
or
test
dec
inc
enter
or
pop
inc
and
fdivrs
xchg
leave
notb
add
int3
push
jl
fnstsw
cmp
icebp
pop
xchg
or
sub
cwtl
xorl
sbb
inc
jmp
shlb
nop
enter
adc
in
cs
sub
cwtl
xchg
repnz
insb
push
jmp
mov
dec
cli
inc
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
xor
call
test
or
pop
mov
add
movswl
mov
sub
pushl
pop
xor
call
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
add
mov
pop
sub
call
and
movb
fstps
shlb
pop
sub
rorl
add
add
mov
mov
push
call
mov
pop
lods
jne
cmp
push
pop
pop
mov
sub
mov
add
cmp
jne
push
call
push
clc
shll
aaa
movsb
or
add
add
pop
pop
jmp
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
incl
outsb
setl
sub
jo
mov
jp
jmp
test
jae
rclb
sub
test
jmp
xor
dec
outsb
cli
in
aad
test
pop
aam
scas
daa
pop
inc
xchg
xor
subl
je
xchg
frstor
jecxz
imul
stos
mov
dec
pop
and
jge
clc
aaa
cltd
jg
scas
dec
mov
lods
cmp
out
movsb
out
inc
dec
mov
rorb
fcomps
sbb
inc
and
in
jne
mov
and
xchg
addr16
fsts
push
test
pop
inc
and
clc
jnp
std
dec
xor
mov
pop
aam
ljmp
ljmp
sbb
inc
dec
movsb
es
jo
shll
and
mov
dec
clc
jnp
mov
jp
inc
nop
or
inc
clc
xchg
jge
rol
cwtl
sub
arpl
out
sbb
mov
xor
cmpsl
jb
pop
or
mov
stos
pusha
sub
push
clc
jle
das
mov
clc
jnp
bound
lds
rorl
jge
mov
lds
and
clc
inc
clc
jnp
repnz
pop
fdivrs
popa
lock
int3
imul
push
scas
frstor
hlt
mov
stos
dec
leave
les
mov
inc
clc
or
jnp
popf
fs
rcll
adc
cmp
int
aad
jno
mov
jnp
inc
adc
aaa
pop
adc
push
push
and
loope
ret
mov
xor
or
sub
push
sar
mov
push
push
mov
push
enter
int3
dec
jns
pusha
aaa
pop
jmp
outsl
sub
mov
rcll
call
pop
int3
popa
adc
pop
inc
add
xchg
jmp
push
and
adc
out
add
xchg
mov
push
jmp
arpl
pop
and
sbb
daa
sbb
cmc
push
shrl
xchg
pop
push
push
mov
xor
andl
in
pop
call
ds
mov
lods
ds
mov
xor
cmp
jns
out
pop
cmp
pop
pop
push
mov
cs
repz
pop
lret
outsb
cwtl
push
scas
cli
insl
pop
push
mov
mov
fwait
sahf
sub
stos
std
push
out
imull
and
push
add
cld
lods
xorb
push
enter
enter
cmp
xorb
adc
cld
fisttpl
gs
test
mov
rclb
xorb
dec
or
imul
cld
test
inc
and
pop
inc
and
xor
xlat
fistl
jae
test
jae
sub
xorb
xorb
andb
mov
and
bnd
jo
lock
xorb
shlb
es
clc
lods
xorb
test
dec
sbb
xor
or
jns
jns
jg
cld
lods
sub
scas
lock
jno
or
lods
andb
lods
addb
jae
loopne
orb
mov
pusha
sub
scas
xorb
aas
dec
or
xorb
add
jae
daa
or
addb
and
cld
lods
pop
sbbb
cmp
cld
daa
repnz
jae
daa
mov
jge
or
xor
and
or
lods
pop
leave
repz
addb
xorb
xchg
and
lods
aaa
fsubl
fbstp
rep
roll
lods
addb
outsb
scas
or
sub
adc
mov
jae
fmull
nop
int3
scas
xorb
mov
lret
daa
out
addb
addb
xorb
lahf
sbb
dec
push
cmpb
cmp
cld
daa
mov
jge
addl
lods
popa
mov
cld
cmp
aad
lods
int
pop
scas
add
add
or
lods
cmp
orb
xorb
xorb
mov
add
repnz
das
or
and
sbb
jp
inc
sbb
fimull
pop
push
in
mov
mov
inc
sbb
lods
orb
fimull
pop
imull
push
mov
sbb
mov
and
or
loop
sbb
jp
inc
sbb
cmp
jp
dec
mov
leave
test
movsb
scas
xorb
loop
out
testb
mov
inc
sbb
lods
sbb
movsb
scas
xorb
loop
out
testb
mov
inc
sbb
pop
push
and
jb
mov
push
inc
adc
xchg
lods
repnz
push
mov
sbb
mov
and
or
lods
lods
adc
jns
jecxz
xorb
inc
fnstsw
push
and
jb
mov
ja
aas
loope
or
es
loop
jl
aad
lods
lods
mov
and
sub
fsubs
sub
es
loop
jl
aad
push
push
sub
xor
cld
lods
xorb
inc
out
mov
jae
jo
jae
scas
sbb
lods
xchg
cs
xchg
je
test
cld
lods
or
push
lock
adc
mov
xor
jns
sub
cld
lods
mov
bound
mov
inc
insb
daa
orl
dec
shl
bound
jl
pop
mov
mulb
sbb
outsb
mov
fld
dec
rcrl
arpl
and
in
or
mov
or
xchg
icebp
inc
jg
icebp
inc
jns
imul
insb
popa
icebp
jle
pop
cwtl
movsl
shlb
lcall
hlt
das
ret
sub
mov
fcmovb
and
sbb
push
in
mov
scas
dec
mov
aaa
int3
fcmovb
jae
lods
xorb
xorb
xorb
xorb
xorb
xorb
mov
aaa
xchg
aam
jae
in
mov
lods
xorb
xorb
xorb
xorb
add
loopne
dec
cld
lods
xorb
xorb
xorb
xorb
xlat
int
mov
lahf
std
lea
dec
jae
xchg
daa
or
pop
dec
and
les
jmp
popf
jno
mov
xchg
jecxz
adc
dec
js
and
sti
push
loop
es
xchg
js
into
repz
sub
out
popf
mov
mov
sbb
xor
mov
mov
or
mov
pop
adc
mov
and
cmpsl
and
imul
lea
int
cltd
sbb
addb
enter
nop
push
stos
and
inc
xchg
jp
adc
pop
shlb
cmp
rcrb
xor
test
fsubrl
mov
cmp
adc
adc
test
jne
xlat
jge
es
mov
ucomiss
imul
ljmp
jo,pt
addb
pop
inc
loopne
into
jns
push
fs
pushl
xchg
push
jno
out
jnp
dec
jle
in
cmc
mov
jg
lds
out
pop
jb
sub
stos
rorb
add
ja
andb
mov
cmpsb
mov
test
and
insl
xchg
mov
lods
outsb
test
cmp
xor
dec
aam
cmp
jmp
fmul
lock
test
insb
pop
popa
testb
cmp
addr16
lods
sub
mov
idiv
pop
stc
jbe
test
pop
insb
stc
imul
sbb
xor
pop
ja
pop
mov
pop
cmc
jl
add
mov
lds
pop
movsb
rclb
imul
jle
jb
out
dec
shrl
out
in
and
jmp
test
push
jg
aam
xor
jo
cld
and
arpl
ret
outsb
pop
repnz
sbb
and
and
icebp
mov
and
cmp
cld
cli
mov
mov
stc
fs
or
into
inc
repz
jae
and
sub
scas
jg
dec
test
cmp
mov
ja
xchg
out
jo
in
adc
inc
push
add
mov
jae
ss
scas
or
movsb
cmp
add
sub
mov
cmc
std
mov
sbb
loopne
aas
cld
mov
lods
mov
sub
add
xchg
push
inc
pop
cmpsb
or
mov
cmpsb
jg
hlt
out
add
push
popf
int
leave
mov
or
cmp
inc
jmp
popa
in
adc
mov
jbe
push
dec
aam
adc
add
cmp
lock
out
ds
mov
and
add
add
add
pushf
push
add
pushf
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pushf
push
add
fwait
push
add
pushf
push
add
push
add
popf
push
add
push
add
popf
push
add
push
add
popf
push
add
push
add
popf
push
add
push
add
popf
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
popf
push
add
add
add
popf
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
lods
sub
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
inc
scas
aaa
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
fs
stos
jno
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
sar
push
sub
pop
pop
mov
push
push
es
cmpsl
or
int3
rcrl
jmp
mov
pop
cmpsl
mov
dec
out
jl
shll
mov
movsb
idiv
add
pop
mov
mov
mov
ret
sub
arpl
xorl
pusha
leave
or
test
jae
mov
out
fsubl
lea
mov
lods
add
gs
push
popa
jne
sub
lea
pop
das
sub
into
lret
lret
outsl
pop
in
sub
fwait
inc
mov
dec
mov
cli
scas
mov
add
cmp
mov
fistps
pop
insb
or
sbb
adc
in
es
imul
mov
inc
mov
mov
push
out
mov
lock
out
inc
jle
stc
xchg
adc
mov
ljmp
lods
imul
insb
int
lods
jo
jecxz
adc
sbbb
adc
lock
test
mov
cmovb
imul
mov
sbb
or
jmp
mov
pop
rclb
ficoms
mov
sub
pop
push
dec
inc
stos
rcrb
inc
aam
insb
push
add
stc
add
push
xor
push
pushf
mov
rorl
in
sahf
imul
push
push
icebp
sar
and
dec
adc
call
pop
jecxz
xor
inc
mov
mov
into
icebp
inc
inc
insb
into
lds
inc
xchg
cld
push
mov
inc
jle
adc
js
sahf
sub
xchg
ret
mov
xchg
std
add
shlb
pusha
out
cmovbe
clc
dec
xlat
outsb
sbb
in
test
or
std
js
dec
cmpsl
in
or
sarb
ret
mov
mov
mov
jno
popl
adc
mov
xor
mov
or
mov
inc
lret
push
push
mov
sbb
xorb
sub
mov
pop
orl
imul
mov
jno
dec
or
pop
lahf
and
adc
xchg
loopne
cli
mov
negl
add
mov
leave
pop
fadd
sahf
adc
cmpsb
in
pop
push
xor
add
lods
jb
inc
fistps
in
sbb
sti
test
mov
and
ret
jae
and
jecxz
jmp
test
fs
in
jg
dec
mov
add
jo
outsl
mov
outsb
enter
adc
lcall
or
ds
lds
jmp
mov
xor
add
shr
mull
loopne
mov
pop
push
push
fwait
inc
icebp
jmp
inc
aaa
sbb
aam
popa
push
xor
mov
inc
test
mov
xor
test
loop
mov
or
jg
cmpsb
div
mov
sbb
jle
imul
pop
pop
orb
or
leave
andb
cmpsl
pushf
daa
xor
xchg
mov
pop
scas
mov
cmc
push
clc
pop
repnz
xchg
aaa
imul
pop
sub
lret
lods
movsb
xchg
sarb
movsb
adc
pop
dec
mov
daa
xchg
xor
cmp
mov
push
jnp
and
movb
pop
jb
lds
sbb
bound
jmp
in
pushf
sbb
ljmp
cmp
cli
dec
mov
sbb
lds
push
fistl
mov
dec
roll
and
mov
js
adc
pop
jp
xor
add
mov
notb
sbb
enter
int
cltd
mov
mov
mov
test
mov
hlt
mov
lea
out
mov
push
hlt
pushl
mov
loopne
je
pop
imul
pusha
lahf
inc
mov
jle
cli
movsl
push
cld
lods
mov
dec
push
test
iret
inc
call
ja
pushf
push
jg
mov
mov
pop
dec
and
pop
into
cmp
sub
mov
push
mov
fnsave
pop
cltd
pop
aad
xor
lea
jbe
in
pop
inc
xor
or
xor
std
into
shll
mov
imulb
xchg
jecxz
jl
xor
inc
testb
inc
addr16
push
and
sbb
mov
mov
imul
das
cmpsl
std
mov
mov
add
xor
idiv
stos
negb
adc
push
dec
xor
cmp
mov
bound
popf
add
hlt
xchg
imul
mov
repz
in
sarl
out
sub
int3
andl
outsl
insb
sbb
scas
dec
xor
xor
stos
mov
fisttps
shll
mov
xchg
mov
test
push
lock
lods
ret
lds
sbb
dec
xor
leave
jb
lcall
movsb
push
mov
clc
mov
add
xor
sahf
repz
and
pop
es
adc
mov
jp
xorl
mov
lods
xor
lds
andl
pop
dec
sub
loop,pn
jg
int3
push
or
enter
int3
outsb
xchg
inc
pop
add
jl
push
loopne
dec
sbb
movsl
cmpsb
dec
or
lcall
into
xchg
stos
loop
jne
cmc
fstp
mov
mov
out
popf
jecxz
jno
jnp
enter
jge
pop
nop
decl
stc
mov
test
sbb
loope
loop
and
or
inc
mov
pop
add
aaa
dec
aam
and
sbb
stos
into
jg
jmp
leave
mov
inc
sbb
lahf
call
cld
mov
shlb
mov
xchg
pop
jmp
adc
icebp
ret
push
les
sub
repz
stos
incb
push
popf
dec
jbe
ljmp
jne
jl
or
addl
fucomi
mov
or
or
jg
lock
into
add
pop
pop
imul
lcall
leave
mov
sbb
mov
jmp
jle
out
dec
enter
push
jmp
dec
sbbb
addr16
ret
movsb
sub
mov
lds
fdivs
insl
sbb
jmp
gs
test
jbe
ljmp
jp
int
int
cltd
cmpsb
pop
inc
aad
or
iret
rcrl
cmp
out
imul
cli
pushf
xchg
dec
mov
push
pop
adc
cmp
mov
xchg
nop
cltd
ds
arpl
js
scas
aaa
stos
js
test
push
pop
repnz
xchg
into
push
inc
push
push
jb
xor
loope
js
call
xor
pop
adc
sti
outsb
mov
sub
and
imul
loope
fcomps
lcall
adc
push
xlat
outsb
cmp
xchg
lahf
adc
lods
pushf
mov
adc
add
inc
popf
xchg
mov
fmul
dec
push
cmpl
mov
xlat
pop
lahf
iret
test
gs
xchg
push
andl
mov
xor
loop
ds
in
inc
insb
loop
fisttpll
loope
mov
scas
mov
je
test
sbb
in
push
out
fstpl
lods
cld
inc
mov
bound
xchg
inc
xor
pop
jns
cmpsl
xor
sarb
pop
loope
cmc
add
sbb
add
cmpsb
sbb
jns
pop
and
loope
lea
xchg
mov
int3
xlat
sub
lea
les
and
jae
push
mov
push
mov
inc
insb
push
pop
cmpsl
loope
push
or
fldcw
fsubs
pop
call
test
dec
add
mov
mov
fs
jle
push
pop
mov
dec
sub
scas
xchg
mov
test
mov
movnti
pushf
and
sbbb
test
cwtl
mov
imul
adc
loope
mov
dec
push
jae
jecxz
xchg
mov
xchg
fwait
jns
mov
int3
push
clc
xor
xor
rol
ret
fmul
mov
sub
out
fisttpl
cltd
aaa
pushf
in
inc
inc
in
dec
mov
xor
or
cltd
dec
call
test
lods
adc
sbb
aaa
test
outsb
cltd
inc
pop
leave
lds
ds
sub
insl
dec
or
pusha
mov
dec
test
pop
in
mov
stos
test
pop
sbb
out
cli
shr
sub
in
pop
and
cli
ret
bnd
sbb
adc
and
lahf
scas
invlpg
pushf
xchg
or
xor
andb
mov
je
sti
pop
mov
cmp
add
mov
add
xor
mov
fs
mov
inc
les
xchg
xchg
hlt
shll
fildll
lock
into
cmc
mov
fs
and
sub
fs
xchg
jge
xchg
iret
or
push
cmp
outsb
and
push
test
add
dec
jl
enter
mov
mov
xor
push
pusha
fcoms
jecxz
adc
scas
cmc
push
xchg
inc
addr16
jle
fwait
lds
pop
fadds
mov
mov
and
sbb
jo
pop
mov
nop
jle
lahf
jg
inc
cwtl
sub
stos
sub
xchg
cmp
in
roll
lock
sub
or
xchg
lcall
cwtl
cwtl
insl
pushf
loop
rolb
shrb
xchg
xor
xchg
mov
sub
pushf
scas
sub
adc
fdivs
lods
pop
add
jmp
mov
sub
clc
shrl
push
jge
jnp
and
jmp
lret
hlt
in
out
shll
shl
rorb
testl
fnsave
into
loop
jnp
lds
jp
push
outsb
lahf
mov
sbb
cmp
dec
mov
or
ret
push
in
add
stos
lds
and
cmp
hlt
add
fsubrl
push
sbb
les
and
iret
adc
pusha
adc
into
xorl
aad
sti
sbb
add
mov
push
into
ljmp
mov
push
lds
insl
add
cmp
aas
mov
lahf
cmpb
xchg
pop
jae
sbb
rol
xlat
mov
fidivl
dec
rorl
mov
mov
pop
push
jo
xchg
dec
ja
push
sbb
fs
ret
fdivrs
jno
jne
fldl
jle
mov
pop
insl
mov
adc
ret
mov
jbe
cmp
int3
cwtl
andb
and
mov
fwait
dec
addr16
test
mov
inc
dec
xlat
repnz
popa
gs
insb
cmc
ss
xchg
in
inc
dec
ja
nop
mov
je
add
mov
push
mov
mov
in
and
pop
js
imul
call
mov
adcb
jge
xchg
or
adc
data16
push
add
gs
repz
add
lock
insb
cltd
jno
jae
dec
mov
cmc
enter
dec
hlt
add
movsl
ljmp
in
mov
mov
scas
xor
stc
fcoms
sub
dec
test
push
xor
imul
into
jl
mov
scas
add
xchg
popf
lret
push
push
xor
in
lret
aam
or
push
rclb
inc
pop
sub
mov
out
arpl
fistpll
adc
jae
mov
lcall
push
and
xor
dec
xchg
cmp
nop
mov
cmp
out
pop
mov
cli
sub
repnz
cld
cld
mov
lods
fmuls
jno
inc
sub
xchg
xor
mov
xchg
repnz
jo
pop
fnsave
jp
cmp
daa
push
mov
or
pop
lea
pop
sbb
aad
and
pushf
rcrb
jl
xor
jae
jmp
scas
adc
lock
jno
iret
and
int
mov
pop
mov
jnp
xchg
popa
popf
push
pop
mov
je
je
xlat
pop
test
incb
mov
subl
lea
sti
dec
in
push
or
lods
orb
push
shl
and
and
dec
dec
jecxz
cmp
inc
ret
inc
fwait
clc
dec
int
sbb
mov
rcr
cmc
sti
mov
mov
scas
scas
mov
das
int3
add
xor
out
insl
out
aam
cmpb
loopne
lock
xor
test
pop
dec
filds
cvttps2pi
cmp
jecxz
mov
movsb
sarl
scas
outsb
lahf
bound
mov
add
and
addr16
jne
pushf
adc
dec
fsubrl
div
or
mov
shll
in
int
mov
xor
retw
fldl
iret
sub
iret
addr16
hlt
clc
icebp
and
push
xor
ja
cmp
dec
dec
push
mov
pop
imulb
mov
jns
cmp
out
loop
stos
cmp
sbb
rcll
push
pop
mov
fistl
jg
xchg
movsl
or
insb
std
push
sbb
ja
dec
fucomi
inc
inc
jg
sub
test
scas
subl
lahf
add
cmp
ret
pop
dec
cmp
dec
jmp
mov
sub
adc
or
jo
rolb
pop
shlb
push
xor
push
loope
inc
into
xchg
orl
dec
pop
and
pop
scas
fmuls
and
add
xchg
push
insl
add
pop
mov
mov
or
jg
cmp
push
inc
loopne
rcrb
fistl
mov
int
jmp
lret
dec
fwait
or
or
lock
lods
in
icebp
dec
cltd
or
cmpsb
int
xor
inc
pop
fwait
dec
add
and
jb
adc
xlat
jno
xchg
shlb
gs
loop
scas
cli
cmp
jae
xor
xor
add
push
lods
pop
dec
rcrb
jae
push
fimuls
jmp
lret
cmp
orb
insb
add
lret
les
repnz
cwtl
dec
cs
fmuls
xchg
adc
testl
jl
int
pop
inc
stos
cs
fs
dec
imul
dec
and
test
cmp
xchg
cltd
call
rcll
mov
mov
lahf
push
pop
adc
addr16
and
push
push
or
mov
out
lret
cmp
popf
std
mov
mov
or
inc
mov
fnstsw
stos
ds
inc
mov
add
pop
or
leave
js
mov
xor
popf
fsubrp
inc
jecxz
icebp
xor
adc
aad
inc
or
pop
jns
or
sub
loope
mov
cmpb
pop
scas
mov
fistpl
cli
les
mov
xor
xchg
mov
fdivl
mov
add
jns
xlat
lods
aad
jae
sbb
pop
xor
add
data16
push
ds
shr
dec
pushf
pop
dec
adc
adcb
into
sbb
rolb
std
xorb
inc
out
hlt
dec
cld
mov
cmp
mov
mov
pop
or
jl
pop
pop
clc
sahf
aas
rcr
mov
mov
test
sub
xor
mov
sbb
adc
repnz
lcall
adc
daa
int3
imul
or
jp
pop
and
jbe
cmp
dec
mov
xor
ret
cli
xchg
add
jmp
bound
sahf
sub
lods
mov
inc
ljmp
inc
pusha
movsl
mov
mov
cld
imul
mov
lret
scas
lock
nop
push
mov
mov
stc
pop
cmp
lock
sbb
aas
data16
xor
fcompl
ljmp
pop
leave
popa
fistpl
mov
lock
gs
test
cmpsb
sub
sub
dec
pop
imul
bound
jbe
push
aad
je
fdivrl
jle
cmp
dec
aaa
negl
sub
in
push
push
xlat
into
dec
adc
aad
xchg
fs
lds
addr16
mov
mov
and
sbb
lcall
mov
cmpsl
push
pusha
psrad
lods
xor
lahf
outsl
pop
in
jle
push
lahf
mov
out
jmp
fstl
fidivrs
aas
shlb
dec
jo
daa
orb
push
orl
les
add
in
cli
push
popa
std
mov
pop
or
cmp
inc
push
pop
inc
adc
aas
sbb
add
push
xor
sub
repnz
loope
jo
cmp
inc
fwait
rcll
and
jl
icebp
cmp
inc
in
mov
xlat
test
leave
xor
sarb
mov
divb
sub
push
adc
mov
inc
cmc
sub
test
jmp
fidivl
mov
das
lret
jne
stc
xor
and
stos
dec
stos
pop
dec
mov
in
adcb
cld
xchg
clc
push
sbbl
fbld
mov
sub
sbb
notl
xchg
popl
xchg
cmpsl
pop
inc
push
adc
push
ret
pcmpeqd
xchg
iret
das
xchg
push
mov
fdivrl
psubb
jp
into
divl
pop
pop
dec
vpaddw
sbb
out
das
movsl
jmp
xlat
jno
stos
cltd
adc
cmp
pop
mov
push
cmp
int3
jae
push
std
notb
test
add
out
mov
daa
ret
enter
je
es
shll
aas
or
push
inc
mov
sti
movzbl
iret
mov
sub
jne
sub
mov
mov
fmuls
dec
or
dec
fistps
loop
mov
test
jb
mov
outsl
repnz
xor
push
cwtl
loop
inc
hlt
pop
fdiv
cmp
push
movl
jbe
fs
call
call
cmp
sti
stos
lret
repz
movsb
mov
mov
push
push
lahf
or
sbb
add
cmp
or
mov
sub
aaa
push
sub
adc
int3
shlb
shrl
push
in
inc
push
or
fs
in
pop
xor
xor
push
sbb
stc
arpl
lock
push
fcomp
test
and
adc
xorb
std
lahf
out
cmp
je
jg
mov
inc
dec
les
test
ficoml
clc
mov
icebp
arpl
outsl
xor
dec
cmp
jno
fnsave
xchg
jno
test
mov
pop
push
lcall
inc
xchg
pop
call
mov
jns
in
lock
fldt
fnsave
inc
adc
aad
pop
sbbb
jle
es
or
mov
lfs
sbb
rcll
and
sbb
or
sbb
ljmp
stc
test
adc
dec
inc
push
leave
sub
ret
int
mov
outsb
cmp
mov
into
les
sahf
call
leave
lret
dec
imul
pop
rorb
lea
dec
mov
test
and
push
std
mov
xchg
sub
mov
add
pushf
push
lods
fcoml
hlt
repz
fmuls
bound
nop
and
rolb
mov
mov
repnz
xchg
cld
pop
cwtl
int3
jg
inc
stc
gs
mov
push
pop
sub
test
lahf
mov
xchg
push
and
test
mov
enter
xchg
stc
lods
mov
bound
push
xor
insb
sub
hlt
dec
xor
xchg
sub
imul
adc
xchg
rcll
pusha
inc
lods
mov
sub
push
jg
adc
xor
sub
or
ss
jge
sub
out
repz
jg
xchg
sti
mov
cmp
cmp
int
inc
fs
cmpsb
mov
shrb
das
push
xchg
aas
jno
imul
test
sbb
pop
mov
jns
fidivs
dec
mov
mov
jns
cmp
out
mov
fcoms
xor
mov
or
mov
les
jg
mov
or
out
insb
mov
and
mov
into
jno
cmpsl
cwtl
in
cmp
pop
add
cld
mov
ss
jp
rcrb
push
jbe
out
outsl
jo
push
and
adc
mov
inc
movl
add
xor
push
mov
das
fxch
mov
push
jle
pop
lds
movsb
cmp
test
jb
pushf
xchg
cmp
je
xchg
fdiv
sub
into
mov
push
dec
jmp
leave
lods
and
mov
rcll
sub
nop
das
inc
jle
dec
adc
jbe
xlat
or
loopne
adc
mov
xlat
cld
push
mov
pop
push
mov
clc
sub
ja
jno
popf
movsb
idivb
push
xor
pop
orl
in
inc
dec
or
xor
push
sbb
dec
pop
out
mov
andb
jecxz
mov
fadd
loop
jle
mov
or
iret
cmp
stos
imul
ja
mov
inc
push
jmp
imul
pusha
pop
mov
add
sbb
sub
pop
jbe
test
arpl
out
out
jp
dec
test
rcll
mov
hlt
jge
sub
add
xchg
insb
add
in
fcmovne
dec
scas
aad
ds
xchg
cmp
mov
push
jnp
int3
cmpsb
insl
mov
adc
out
mov
sbb
test
int3
xor
sti
jne
adc
imul
jge
sbb
add
into
ds
fcompl
xor
shll
sub
mov
jecxz
xchg
lods
out
pop
ljmp
and
ret
ret
call
loope
xchg
cmp
ja
pop
mov
add
stos
aaa
jecxz
les
adc
fwait
sub
fs
xchg
jb
repz
popa
mov
mov
cli
pop
mov
mov
popa
sar
pop
push
sub
mov
dec
add
dec
cmpsb
jae
mov
fdivrl
pusha
outsl
test
mov
push
leave
fwait
pushf
inc
loop
cmp
and
sub
jp
insl
jle
mov
movsb
gs
or
pop
int3
xchg
push
ret
cmpsl
cmp
cmc
mov
xchg
mov
fs
and
jecxz
jbe
frstor
dec
ljmp
jne
in
imul
negl
popa
int
jno
sub
mov
sub
fadd
cmp
ror
mov
add
lds
js
loope
adc
popa
fsubl
mov
jne
xor
out
sbb
lock
or
mov
into
jge
sar
loop
add
push
clc
jo
add
cmp
cmpsl
ja
mov
stc
jbe
xchg
xor
cs
lea
sub
adc
mov
or
loopne
ret
cmp
loopne
fs
imul
in
daa
loopne
mov
ret
sub
stos
pop
mov
jo
inc
pop
mov
add
add
leave
cmpsl
xchg
bound
ret
out
mov
in
or
bound
mov
jo
mov
cli
in
adc
mov
adc
push
repz
sub
inc
push
popf
das
push
mov
lods
clc
pop
dec
push
push
cli
test
pop
adc
sbb
jl
add
in
lods
mov
stc
in
xchg
or
mov
aad
cmp
or
ja
jnp
orps
sti
jge
push
shl
roll
mov
hlt
das
xorl
roll
cs
shrl
cmp
shrl
or
shll
push
ss
mov
fwait
xchg
or
fwait
mov
xchg
ret
popa
sbb
loop
mov
gs
loopnew
mov
push
dec
in
mov
imul
insl
adc
jg
in
add
aas
sub
pop
adc
jmp
jmp
push
je
or
sahf
imul
inc
fidivl
or
fs
cld
mov
stos
shrl
mov
xor
pop
ret
xchg
pop
xchg
mov
nop
mov
ret
add
cmc
pop
rep
add
ds
test
stos
popf
sbb
pushf
loope
mov
push
jnp
ret
hlt
stos
das
mov
cmp
inc
and
adc
dec
cmp
pop
add
leave
push
mov
jae
push
mov
mov
jo
mov
mov
jne
addb
dec
dec
pop
stos
push
aad
ret
nop
xor
cmp
sbb
mov
jns
push
lds
out
mov
xor
pop
lods
cmp
std
push
or
in
jbe
mov
decb
shll
xchg
add
mov
movsl
and
addr16
add
add
sbb
std
out
fmull
sub
test
cmp
inc
xor
cmc
jo
adc
std
pusha
mov
ret
lods
sub
loop
es
mov
adc
test
ret
aad
outsb
add
pop
push
andb
xchg
mov
call
push
push
aas
inc
inc
mov
inc
inc
add
movsb
bound
inc
outsl
push
js
daa
stos
aam
inc
enter
rol
mov
push
test
push
inc
addl
addr16
push
add
or
mov
test
lret
push
ret
outsl
xor
arpl
inc
push
mov
arpl
test
adc
scas
sub
and
lret
mov
mov
push
jp
xor
and
adc
or
cltd
imul
loopne
mov
arpl
xchg
je
in
stos
test
addr16
mov
xor
pop
xor
dec
test
lea
sbb
jne
out
xchg
adc
xabort
rorb
or
inc
and
adc
in
ffree
data16
mov
movb
cmp
sbb
pop
push
test
pop
loop
enter
int
push
loopne
cmp
mov
std
dec
jae
test
lret
js
rcrl
pop
push
lcall
fisubrs
pop
cltd
cmpsb
jne
dec
add
sub
out
movsb
cmpb
in
sub
and
adc
arpl
mov
int3
divl
js
lds
test
jle
dec
pop
mov
lods
sub
lahf
cmp
int
shll
int
orb
push
xchg
cmp
rclb
nop
xor
xchg
mov
stos
xor
jae
pop
cwtl
dec
filds
pop
stos
test
pusha
cltd
xor
push
fsub
or
fcmovu
je
std
pop
cwtl
and
push
ret
dec
shrb
jno
add
icebp
adcl
jmp
push
jle
mov
cli
fiaddl
add
jle
icebp
popa
sbb
xchg
xchg
loopne
mov
call
in
notl
pop
in
dec
sti
stos
cmp
mov
jp
int3
out
and
rorl
int3
lret
cmp
cmp
cmpl
mov
sbb
cmp
cmc
xchg
shlb
scas
std
rcrl
scas
and
jbe
push
xchg
cs
xchg
sbb
popa
inc
ficompl
outsb
mov
outsl
repnz
loopne
cmp
addb
mov
and
and
xchg
dec
rcrb
inc
push
push
cld
lods
inc
or
lds
ljmp
add
sbb
mul
enter
ret
and
push
out
stc
test
movsb
jle
or
xor
jmp
out
fidivrl
jae
lcall
in
push
dec
mov
jecxz
fwait
ja
or
inc
test
incl
mov
inc
jle
hlt
inc
stos
cltd
lods
adc
ret
jae
pop
cmpsb
inc
xchg
jg
and
outsb
es
sbb
rol
jmp
nop
cmpsl
sbb
jb
ffree
sbb
pop
dec
push
shll
imul
jbe
cmpsl
xor
mov
repnz
push
jge
cld
cmp
ret
std
sbb
inc
pop
jmp
out
mov
fimuls
add
fcomps
mov
fldt
mov
inc
mov
sbb
adc
insb
adc
test
jb
push
insb
cmc
jp
pusha
pushf
out
mov
in
jnp
lods
sub
lahf
cmp
jl
ror
and
loop
insb
cli
jmp
pop
add
push
push
in
movb
fistpll
leave
jl
xchg
adc
cmc
bound
mov
sbb
es
lds
mov
sar
mov
add
jb,pn
sub
mov
arpl
jbe
dec
or
mov
xchg
ja
hlt
push
loopne
inc
lods
and
jg
or
addl
dec
mov
mov
adc
mov
mov
cmp
shll
fldcw
mov
cmp
pop
sarl
mov
xchg
inc
cltd
mov
mov
cmp
mov
mov
mov
mov
or
push
push
stc
rcl
sub
jae
pop
aas
addr16
mov
popl
ss
insl
and
aaa
pop
mov
cmpsb
int
decl
arpl
mov
mov
pop
cwtl
in
and
sub
test
sbbb
mov
jo
sbb
and
and
lock
mov
fwait
xchg
stc
push
mov
pop
cld
or
adc
scas
mov
jne
xor
cmpsl
loope
xchg
pop
jp
cmpsb
mulb
lret
pusha
and
into
out
in
sbb
fadds
push
mov
scas
push
dec
cmpsl
mov
pop
jmp
pop
add
std
ja
mov
mov
lods
hlt
push
aam
scas
mov
dec
aam
mov
dec
cmp
jnp
subl
cmp
loop
xchg
sub
lods
mov
ljmp
nop
cmc
sbb
pop
sarb
push
jae
sub
es
jmp
lock
jg
ja
js
call
push
testl
cltd
ljmp
push
das
popa
jb
sub
or
cmp
pop
mov
repz
fstl
jbe
sarl
in
insl
or
jbe
jno
clc
mov
push
repz
les
or
ror
jg
fdivp
out
hlt
cmp
add
outsb
cld
cltd
adc
stc
out
or
das
mov
pop
push
das
sbb
fwait
sbb
sub
inc
rclb
xchg
aas
insb
ja
dec
aas
sbb
adc
or
jg
fimull
aaa
rcr
push
or
ljmp
xchg
xorl
mov
cmp
enter
and
pop
orl
sbb
cmp
pusha
cmp
lds
jae
test
mov
xchg
sbb
out
xchg
mov
testl
mov
xor
jecxz
mov
cmp
shll
test
sbbl
add
mov
lods
rol
loope
adcb
mov
cmc
out
in
dec
xor
mov
adc
ret
sub
loope
cmp
inc
cs
enter
sti
leave
cld
ss
repnz
push
addr16
push
dec
sub
jge
shlb
push
push
mov
push
inc
andb
pushf
xor
mov
cld
jo
cwtl
lods
aad
jae
mov
test
and
push
in
fsubs
cwtl
pop
and
dec
in
pop
cmpsl
jl
in
cli
push
ret
cmp
outsl
pop
repz
rorl
outsl
jb
leave
ret
cs
xorb
addr16
add
aaa
stos
mov
xor
sahf
bound
ficompl
push
lcall
lahf
js
mov
inc
or
jb
imul
fstps
xchg
and
xor
push
sub
xchg
xlat
cmp
repz
add
sarb
push
cmc
push
gs
dec
xchg
pop
loope
mov
mov
aad
ret
mov
jae
mov
cmpsb
jae
dec
inc
cwtl
xchg
jb
push
inc
int3
shl
nop
jge
sbb
js
aam
sbb
jbe
mov
je
lods
push
inc
cmp
inc
push
dec
ss
enter
and
dec
call
jno
inc
into
mov
pusha
mov
add
and
lret
xchg
aam
shlb
aas
mov
jne
sbb
inc
jg
and
mov
lret
icebp
add
insl
and
ror
movsl
lcall
xchg
mov
xor
out
lcall
test
cmp
push
mov
leave
popf
clc
stc
outsl
xorb
test
mov
sarl
and
inc
sbb
nop
sbb
push
pop
test
daa
sub
pop
jmp
dec
or
mov
js
es
xor
pop
sbb
sbb
movb
ud0
sbb
lods
shll
sub
dec
inc
scas
or
fwait
push
aaa
insb
int3
fidivs
dec
loope
test
jbe
add
and
aad
xor
ret
outsl
in
scas
out
inc
loopne
mov
mov
sbb
inc
les
fidivs
movsb
push
mov
sbb
jne
mov
xor
mov
mov
add
fadds
mov
fisubrs
fimuls
mov
in
nop
push
xchg
dec
xor
sbb
clts
rclb
ret
adc
jl
pop
insl
fimull
and
push
and
dec
leave
aaa
mov
ss
and
push
test
cmp
shrl
sbb
jmp
iret
lret
jns
push
mov
call
pop
lcall
pop
cwtl
inc
pop
ds
sbb
out
add
clc
mov
pop
std
insb
je
jbe
jno
call
mov
pop
pop
xchg
adc
repnz
rcr
icebp
mov
xor
cltd
and
xor
sbb
insb
xor
clc
and
inc
in
sahf
pop
cmpsl
jae,pn
push
push
xor
xchg
adc
xchg
int3
in
test
into
or
mov
sbb
push
and
adc
pop
adc
pop
bound
movsl
enter
mov
push
fstpl
faddl
and
les
sub
fimuls
jge
mov
fwait
and
sbb
repz
outsl
sbb
mov
pop
mov
sub
nop
xlat
mov
inc
add
push
mov
sti
dec
mov
add
adc
pop
cmp
sbb
gs
lods
stos
mov
cmp
push
mov
lret
mov
sbb
cmp
sub
stos
push
ret
xchg
cwtl
sbb
arpl
mov
push
pushf
xchg
test
sub
add
cmp
test
out
clc
xchg
sbb
dec
jno
add
push
mov
pop
aaa
push
xor
push
adc
out
scas
js
sahf
scas
sbb
daa
rcrb
push
cmpsb
enter
mov
pop
fbld
mov
jmp
outsb
aad
fnstsw
xchg
fstps
dec
xor
insl
cmp
rcrb
jle
xchg
fbstp
pop
cmpsl
dec
scas
or
sbb
inc
cwtl
pop
dec
fs
movsb
stos
cmp
imul
and
push
mov
jp
fisubs
cltd
mov
mul
mov
sbb
in
push
mov
inc
pop
imul
mov
stos
nop
pop
mov
pop
mov
jns
or
inc
jp
sbb
sub
loopne
daa
movsl
mov
scas
ret
fisttps
mov
mov
je
mov
insl
shl
mov
push
gs
xchg
js
sbb
mov
mov
cs
orl
pop
push
lock
fnsave
sub
mov
adc
mov
inc
movsl
stc
ss
js
cmp
rorb
sub
lret
out
fcmovnu
jmp
push
mov
sub
int
dec
xor
into
dec
in
les
adc
xchg
dec
icebp
adc
in
pop
jle
jl
inc
mov
pop
bound
insb
lret
jmp
popf
cli
jl
lcall
ret
xlat
xor
popf
or
lock
cmp
test
imul
jb
mov
out
sub
insb
dec
cmp
mov
adc
cmp
insb
imul
xor
xchg
sub
inc
mov
cltd
xorl
repz
inc
xor
xor
not
mov
dec
flds
adcb
inc
sarb
mov
nop
xchg
scas
jns
xchg
movsl
shr
stc
jne
push
mov
jnp
xor
cs
xchg
dec
and
incb
in
fmuls
add
repz
in
jnp
add
hlt
pop
add
fbld
into
adc
sti
jno
lods
mov
scas
nop
mov
cmp
jnp
and
movsb
jbe
sbb
stc
shr
adc
in
mov
add
enter
add
inc
sbb
pop
sbb
ret
jno
ds
les
dec
xor
test
xchg
dec
add
fbstp
add
loope
pop
popf
inc
dec
cmpsb
adc
ss
mov
mov
adc
pop
cmp
jecxz
fwait
adcb
movsl
pop
inc
or
push
xor
xor
pop
fnstenv
stos
inc
or
cmpsl
adc
fdivrl
fisttpl
ja
in
pushf
add
dec
rorb
test
jmp
pop
adc
pop
cmp
mov
dec
aad
xchg
cmpsb
in
push
loope
xor
mov
arpl
js
cmp
scas
test
adc
jno
mov
sub
fcomps
adc
pop
push
call
sub
sub
ss
imull
dec
ficoml
push
push
addr16
aaa
mov
sbb
mov
push
mov
ds
xor
inc
andl
mov
or
pop
add
popa
push
fiaddl
mov
mov
lret
add
inc
pushf
inc
in
and
fiadds
movsb
lods
cmc
jmp
sbb
jne
mov
negl
cmpsb
push
fsin
and
inc
or
cmpsl
ret
test
adc
outsb
mov
idivl
pop
jl
add
sbb
add
inc
jmp
idivb
pcmpgtd
mov
fisubs
sbb
cmp
sub
xchg
mov
xchg
xor
mov
test
push
std
mov
aad
scas
xchg
sbb
jl
xor
sub
sub
insb
rclb
lret
sbb
xchg
and
pop
call
nop
ds
addr16
push
mov
sub
lods
inc
fbld
imul
xlat
sbb
dec
jbe
in
rol
es
lret
adc
and
fildl
aad
lock
sbb
push
jbe
enter
int
pop
xor
mov
adcb
dec
inc
rcr
pop
loop,pn
inc
and
sub
out
cmp
xor
pop
jno
fcomps
clc
add
pop
or
ret
mov
rcrb
aad
mov
scas
lods
repnz
mov
cmpb
leave
mov
jg
push
js
mov
enter
pop
cld
pop
hlt
pop
xor
js
add
lret
jl
xchg
jl
push
push
ljmp
sahf
push
push
lret
mov
ret
mov
sub
cmp
xchg
xchg
stc
outsl
fwait
out
clc
cmc
mov
xlat
pop
pop
and
xlat
xchg
test
xor
aaa
jnp
push
sbb
lea
inc
lods
bound
inc
pop
mov
xchg
mov
push
pop
out
hlt
das
sahf
int3
xchg
pop
out
test
aam
xchg
ret
xor
out
les
push
jbe
pop
call
cs
fidivrs
xchg
adc
mov
out
lcall
jle
loope
out
mov
xchg
inc
scas
test
test
mov
push
and
js
or
mov
xchg
imul
mov
in
stc
adc
push
sub
jo
mov
dec
cs
push
sub
jge
scas
ds
xchg
cld
inc
mov
mul
divl
mov
adc
jp
in
add
push
arpl
lock
pop
mov
and
imul
adc
movsl
jg
push
jae
in
fsubrs
subl
xchg
adc
cmc
ja
dec
xor
outsb
dec
sbb
inc
mov
pop
hlt
in
push
jp
scas
xor
push
mov
xchg
test
imulb
mov
jge
sbb
int
adc
mov
push
imul
and
cmp
sbb
bound
mov
sbb
inc
in
mov
aam
pop
pop
pop
push
xor
outsl
add
rorl
mov
and
fcmovne
dec
aaa
cmp
lsl
mov
inc
imul
xor
and
int3
jge
in
pop
les
lret
lock
pop
enter
add
in
and
pop
cltd
fpatan
push
test
test
add
or
dec
mov
cld
push
push
lret
lea
es
sbb
int3
cld
cli
push
imul
lcall
or
xlat
sarl
inc
adc
xlat
nop
sbbb
cmp
lods
lods
repz
repz
fstl
inc
fwait
adc
mov
test
lock
dec
push
outsl
xor
scas
sub
test
fadd
inc
pslld
adc
in
cs
pop
call
jns
sbb
sub
mov
sahf
jb
cmp
scas
icebp
leave
outsb
sub
push
in
inc
call
and
repnz
xor
and
inc
inc
mov
mov
pop
loop
stos
sub
dec
sarl
push
xchg
jbe
or
out
shr
test
mov
xchg
cld
cwtl
loopne
push
mov
popf
daa
xor
imul
lods
test
xor
popa
int
or
cli
addl
ret
in
cli
cmc
jnp
push
or
adc
pop
sahf
popf
jl
xor
test
or
jge
push
or
fucomip
inc
xchg
mov
push
mov
shrl
mov
int3
mov
sbb
sar
sub
js
xlat
loope
imul
push
jg
bound
out
mov
and
movsl
fs
adc
and
mov
sbb
iret
or
int3
rorl
das
ret
mov
push
fsubrl
andb
stos
imul
mov
int3
inc
mov
jecxz
imul
fildl
cli
cmp
dec
cwtl
fwait
mov
in
xchg
outsl
pop
pop
and
int3
mov
inc
xor
adc
roll
and
fisttps
rorl
fwait
xchg
test
pop
adc
fiaddl
jecxz
dec
outsl
cld
rcll
mov
push
pop
orl
push
sub
mov
dec
dec
iret
orl
in
sti
push
adc
or
cli
pop
cld
sub
jg
mov
or
fs
testl
pop
les
insl
sti
lahf
xchg
mov
push
inc
xor
mov
adc
or
dec
fdivl
arpl
pop
jl
push
add
lret
int
xchg
fldenv
cli
in
mov
js
mov
hlt
xor
sub
in
cmp
int3
test
jl
inc
aam
loopne
cmpsl
outsb
jle
lret
adc
lock
inc
xchg
imul
xchg
icebp
mov
mov
std
xchg
pushf
xchg
sbb
xor
cmpps
jb
mov
cwtl
push
xchg
mov
mov
push
or
mov
jecxz
dec
ret
inc
out
int3
pushf
imul
inc
sub
sbb
push
std
add
sahf
lret
lds
sub
outsl
sbb
mov
scas
aad
sbb
std
movsl
or
nop
jnp
xlat
xlat
lock
and
rcll
out
push
dec
mov
jbe
pop
push
and
xchg
mov
ret
fistpll
mov
dec
sbbl
push
mov
loope
stos
js
dec
daa
mov
jl
push
imull
or
lods
mov
testb
rorb
shrb
aas
lret
jle
das
mov
pushf
sub
subl
mov
sub
cli
inc
dec
popf
fs
hlt
pop
mov
aam
mov
pop
adc
test
sub
scas
and
xchg
ret
xchg
shlb
subb
inc
addl
and
inc
cmpsl
test
xchg
xor
orl
hlt
es
jmp
inc
cltd
in
inc
imul
aas
sbb
cmp
xchg
movsl
fsub
push
xchg
stos
mov
filds
jne
js
jbe
cmp
notb
sbb
loope
fiaddl
das
mov
pusha
gs
jge
sub
in
leave
orl
fiadds
cmc
aad
and
out
inc
xor
mov
jge
push
cwtl
mov
inc
popa
adc
push
mov
sub
das
fsts
cmp
xor
hlt
adc
addr16
jnp
loope
pop
sbb
pop
jbe
add
dec
dec
les
nop
decl
data16
mov
and
or
pop
lds
verw
sbb
cmpsl
je
lea
or
cmp
and
push
jnp
pop
jp
mov
cltd
or
xor
xchg
call
cmp
ss
sti
mov
lea
or
adc
add
cmp
sub
or
inc
mov
and
aaa
fldt
inc
jmp
test
jmp
dec
loopne
ljmp
stos
aaa
add
xchg
ljmp
dec
jae
mov
dec
rclb
pop
xor
mov
imul
and
cli
out
adc
lock
fcompl
xlat
sahf
xlat
adc
fwait
cmp
lock
inc
xor
shrl
jo
cltd
push
push
add
pop
roll
pop
stos
inc
shlb
cmp
lds
pushf
xor
push
sbb
clc
adc
lea
add
popa
loop
adc
cli
pop
push
fnstcw
mov
mov
jge
ljmp
push
rclb
imull
xor
repz
lds
stc
mov
mov
icebp
pop
push
adc
cmpsl
sbb
push
pop
sti
sub
dec
push
or
sbb
jbe
pop
or
inc
aaa
inc
fistl
outsl
and
jb
cmp
fsubs
gs
mov
imul
and
ss
xor
psubw
mov
push
mov
scas
adc
lahf
rorl
pop
push
lea
and
fwait
pop
in
in
or
shrb
push
fs
jge
jl
hlt
jnp
pop
mov
stos
cs
mov
push
shrb
and
movsb
push
fcmovnbe
js
test
add
lock
mov
add
adc
xchg
sahf
cmp
xrelease
xchg
dec
int
adc
imul
mov
sarl
int3
lret
in
pop
xor
imul
pop
mov
pop
jmp
test
mov
add
add
pop
into
mov
enter
mov
inc
mov
les
adc
xor
mov
pusha
icebp
push
and
notb
out
daa
sub
mov
outsb
xor
dec
dec
gs
pushf
lahf
in
inc
push
push
jmp
in
push
pushf
js
out
sbb
mov
mov
mov
hlt
cli
decl
jnp
sbb
sub
inc
dec
imul
cmp
scas
ds
insb
or
cltd
pop
ret
jl
scas
shlb
dec
stc
je
in
rclb
insl
push
push
sub
daa
or
rcr
cmp
subl
jns
adc
jmp
add
mov
mov
test
add
jb
test
inc
xor
sub
jp
pop
pushf
dec
inc
pop
pop
inc
mov
sub
jo,pn
in
rolb
add
andl
pop
xchg
je
jecxz
lods
dec
outsl
mov
arpl
and
repz
rcrb
pop
add
shl
or
mov
aad
xchg
fidivrs
orl
das
clc
lret
mov
and
addr16
fsts
push
mov
out
insl
push
mov
adc
in
aad
lret
jb
adc
dec
icebp
jb
test
js
in
enter
or
imul
xchg
mov
je
sbb
pop
je
repz
push
ljmp
inc
sbb
out
xorb
in
fwait
daa
loopne
mul
cwtl
lock
loop
and
and
rcrb
imul
addr16
jp
pop
jne
imul
loope
xchg
mov
mov
neg
mov
xor
or
mov
cli
cmp
mov
cld
loopne
shrb
mov
loopne
pop
jg
scas
sbb
cmp
popf
cmpsl
sub
inc
lds
jns
loopne
es
ret
gs
jo
inc
add
shrl
in
mov
popa
xchg
cltd
push
js
pop
xchg
repz
mov
js
inc
sbb
xor
mov
mov
sub
test
outsl
leave
push
fists
cmp
adc
pop
pop
mov
mov
adc
aaa
inc
dec
xchg
xchg
lods
roll
mov
daa
jnp
lock
mov
ja
rcrl
mov
aad
or
add
xor
adc
cmp
int3
ds
dec
ror
adc
adcb
loop
int3
fnsave
les
or
test
aad
loop
enter
and
or
xor
push
sbb
inc
cmpb
mov
mov
or
lock
or
sti
pop
xor
jle
push
pop
jg
or
adc
mov
adc
push
mov
mov
sbb
stos
push
stos
xor
cwtl
cmp
inc
xchg
ds
sub
mov
leave
imul
bound
push
pop
pop
sbb
lods
xchg
addl
sub
or
jecxz
pop
or
subb
sub
or
popa
xchg
roll
popf
sarl
imulb
pop
add
push
jo
outsb
inc
add
movsb
or
lock
adc
movsl
dec
test
enter
data16
or
add
lret
cmp
dec
and
xchg
jne
and
fwait
divb
cltd
scas
arpl
sub
push
mov
adc
fs
sbb
ja
scas
dec
int3
lods
xchg
lds
repz
fmulp
pop
cwtl
cmc
or
adc
dec
sbb
sbb
lods
xchg
mov
mov
test
mov
push
mov
xchg
lret
stos
adc
cwtl
mov
add
mov
repz
sub
sbb
lods
das
jg
fidivrl
xor
mov
and
add
test
outsl
sbb
mov
es
push
enter
ret
rol
push
ss
xor
std
mov
jnp
in
lods
jo
pop
adc
pop
mov
sbb
mov
test
in
cmp
xorl
call
fdivs
in
push
lret
xor
cmp
dec
sbb
ret
jb
repnz
push
sti
ja
movsb
push
out
xor
jno
loopne
js
mov
adc
imul
nop
js
leave
mov
sahf
mov
fsubrp
jne
stos
push
stos
jbe
stos
jae
call
pop
lret
and
mov
cwtl
jle
xchg
movsl
adc
das
pop
sub
andl
sbb
pop
sub
loopne
or
push
mov
fdivrs
out
mulb
sub
xlat
cmp
mov
in
jecxz
jg
xlat
and
data16
push
cmp
mov
or
dec
iret
lods
ja
ja
xchg
or
jp
add
fs
xor
outsb
imul
in
mov
mov
xchg
call
repnz
mov
mov
inc
repz
les
inc
ret
in
xchg
subb
adc
inc
int
and
sahf
imul
dec
frstor
es
pop
cli
inc
push
mov
xchg
aam
call
cmp
pop
cmp
in
fcomps
cmp
adc
mov
jg
mov
pushf
xor
mov
pop
push
add
or
jmp
pop
cmp
imul
cmp
test
sub
and
sbb
push
arpl
stos
jns
or
or
push
outsl
out
sub
inc
inc
xor
xlat
fstpt
loop
mov
mov
lds
sub
xor
xchg
int3
xor
pop
push
xchg
lods
push
sbb
xor
call
daa
push
push
inc
dec
mov
js
push
notl
in
std
or
leave
pop
jbe
fnsave
xor
lea
and
lea
outsl
sti
in
cmp
sbb
fcmove
adc
jmp
in
aas
push
push
loop
into
xor
adc
into
fistpl
adc
xchg
rcrl
jecxz
push
pop
pusha
xchg
jno
xchg
mov
push
xchg
mov
scas
lret
xchg
mov
push
shll
dec
sub
and
xchg
mov
leave
daa
adc
jo
and
sub
outsl
add
lds
xchg
js
dec
andl
test
dec
fwait
dec
jmp
out
push
cwtl
ds
jns
push
mulb
in
jbe
xor
sub
push
in
daa
cli
pop
pop
cwtl
jmp
inc
popf
cmpsb
rolb
xchg
loop
push
adc
loop
rcl
das
arpl
out
clc
lret
mov
lahf
aaa
inc
lret
xchg
dec
in
incb
adc
xor
mov
cld
stos
sbb
sbb
repz
dec
rcll
imul
cmp
or
sbb
shll
mov
lds
mov
inc
movsl
outsl
cmp
cmp
data16
call
fnsave
filds
ret
test
ret
stc
dec
dec
xchg
inc
or
shlb
sub
sbb
adc
mov
movsl
outsb
mov
pop
inc
addr16
sbb
mov
out
movhlps
inc
cli
leave
jl
lea
cmp
dec
and
cli
and
mov
shll
call
mov
mov
test
shll
iret
mov
cli
inc
push
scas
addr16
mov
jle
or
inc
mov
aad
cmp
stos
orl
icebp
xor
popa
mov
pminub
out
sbb
dec
xchg
sbb
mov
fidivrl
xchg
jae
dec
mov
scas
and
rcll
xor
cs
gs
inc
ret
es
cli
hlt
stos
mov
rcr
mov
and
ficomps
sub
popf
push
push
es
or
filds
inc
lods
xlat
rcll
xchg
pop
push
jle
clc
jo
outsl
inc
cmp
xchg
mov
xor
mov
fcom
lds
fiaddl
fisubrs
pop
aaa
int
call
fnstcw
cli
shll
ret
nop
pop
stos
dec
inc
xlat
push
mov
pushf
xchg
mov
inc
mov
dec
fbstp
outsb
and
push
popa
outsl
xchg
lret
addr16
insb
dec
xor
xchg
sbb
jp
stos
aam
aas
movsb
aas
in
aam
xchg
mov
push
xlat
lods
mov
stos
clc
mov
adc
call
push
xchg
test
imul
mov
das
mov
sbb
out
xchg
shl
mov
sti
imul
sub
arpl
adc
fsubrl
push
rdtsc
cs
sbb
lret
movsb
lock
mov
mov
out
icebp
cld
push
xchg
ja
lods
enter
jmp
sub
insb
and
repz
call
xor
inc
cmpsb
sbb
dec
test
or
push
jge
aas
popf
cltd
cs
jmp
out
push
jae
std
inc
and
push
js
je
loopne
dec
popf
imul
fbstp
icebp
cmp
ret
mov
fwait
addr16
in
es
jne
mov
xchg
and
add
aad
or
iret
or
mov
xchg
sub
push
lods
daa
je
cmpsl
xor
test
insb
add
push
dec
mov
push
imul
cmp
dec
test
push
movsl
adc
popf
pop
in
shlw
and
sbb
loopne
fsub
cwtl
addr16
lcall
jnp
adc
scas
pop
or
ffree
rorl
mov
add
and
pop
out
mov
xor
in
stos
lock
idivl
insl
sub
dec
stos
sub
and
jne
movl
gs
out
aam
roll
aas
cltd
pushf
pusha
xor
cmc
adc
cli
pop
cmc
dec
in
sarl
stos
xchg
mov
and
pusha
jo
mov
xchg
adc
add
mov
or
push
cld
pop
iret
enter
sbb
pop
and
test
mull
out
lods
les
and
into
clc
jg
sub
or
mov
loop
cmpsl
add
aaa
and
dec
icebp
push
daa
sbb
fisubrl
sbb
mov
sub
jo
sub
push
xorl
jl
mov
jp
test
mov
mov
mov
addb
jg
lret
imul
sbb
dec
mov
rorl
and
jle
xchg
xor
and
inc
call
mov
adc
int3
jbe
sarb
add
jg
test
das
adc
mov
mov
dec
std
stos
mov
stos
ret
ret
mov
clc
scas
lock
mov
lcall
mov
flds
add
jp
push
and
rol
subl
xor
sbb
and
push
jp
idiv
cmpsl
adc
or
pop
adc
inc
aam
pop
cld
clc
sbb
xchg
rclb
shr
inc
je
in
rcr
xorb
cltd
or
popf
mov
lret
dec
push
out
inc
in
add
lods
lret
addr16
out
inc
popf
mov
insb
cmpb
cmpsl
int3
inc
ds
push
pop
lds
push
lret
adc
lea
out
in
sbb
xchg
push
inc
je
shl
adc
imul
adc
xchg
cmc
out
mov
fisubs
xlat
incb
pusha
out
loopne
fidivl
push
outsb
insl
subl
xor
incl
ret
js
xchg
mov
push
repnz
push
cmpsl
xor
sub
test
mov
pop
icebp
mov
inc
out
cmp
dec
je
lea
push
cmp
lods
dec
sbb
mov
rorb
daa
adc
shll
xchg
sub
or
pop
jbe
imul
cmpsl
sbb
or
lods
aam
bnd
push
jecxz
adc
cld
cmp
enter
sbb
pop
pusha
add
neg
in
push
lahf
sbb
jbe
jb
sti
ret
xchg
ret
jnp
or
jle
scas
lea
nop
scas
scas
insl
in
sub
es
adc
mov
fiadds
push
pop
xorb
scas
sbb
mov
insl
xor
ret
xchg
xor
int
mov
bound
and
sti
fimuls
lods
cmp
fwait
mov
sub
scas
add
fcompl
icebp
test
shlb
mov
xlat
xchg
lcall
je
xor
clc
aad
sub
sbb
xor
clc
adc
aaa
push
test
repz
aam
bound
ljmp
push
mov
loope
mov
into
inc
push
bound
dec
push
xor
jl
fbld
ror
cmpsl
test
popa
ds
fmulp
jbe
imul
adc
mov
iret
push
or
and
sub
mov
adc
mov
icebp
fldenv
dec
dec
arpl
xor
sldt
push
popf
push
hlt
add
sub
push
notb
pop
lahf
sbb
mov
pop
insl
xor
jmp
aad
sarb
cmpb
and
lret
inc
sbb
or
adc
es
std
outsb
fmull
dec
inc
jmp
pop
outsb
cmp
cmc
in
jbe
std
aas
ds
pop
clc
and
dec
notl
push
jne
or
and
lods
and
cltd
or
es
scas
push
adc
loope
jnp
inc
jp
popf
dec
xorb
xor
pushw
xchg
and
subb
adc
cmp
pop
ficoml
jo
add
int
iret
out
or
mov
push
lds
cmp
jbe
popf
vpunpckhqdq
xchg
jmp
and
adc
and
pop
lret
into
push
pop
mov
test
cmpsb
xor
rcrl
lcall
mov
pop
fucomi
nop
out
ror
es
fistpll
cmc
mov
lret
enter
or
mov
xchg
lock
push
addb
daa
sti
ret
sbb
dec
push
out
xchg
or
push
dec
and
inc
push
icebp
inc
cmpsl
dec
push
xor
xor
cwtl
fnsave
cmpsb
pop
mov
sbb
adc
adc
push
jo
xor
lahf
inc
cli
inc
inc
dec
pop
aas
dec
inc
mov
loope
outsb
push
sub
xchg
cmp
mov
cwtl
insb
ret
xchg
bound
and
mov
iret
pusha
sub
sub
ret
pop
add
jge
out
fistpll
arpl
movsl
dec
mov
pusha
mov
inc
lods
ret
inc
push
loope
fldcw
dec
lea
ljmp
sub
pop
cwtl
jbe
mov
lret
push
or
test
xor
mov
test
pop
xchg
cmp
rorl
mov
ds
mov
add
fbstp
nop
push
fistl
shlb
mov
subl
cltd
mov
sbb
sub
scas
std
ret
xlat
fnstenv
mov
nop
popf
cltd
mov
cmpsb
pop
jecxz
outsl
mov
nop
imul
mov
mov
gs
push
movsb
push
push
lret
xlat
cltd
cmp
add
xchg
imul
incl
hlt
notb
push
aam
sbb
mov
int3
in
repnz
scas
outsb
xchg
je
jl
inc
int3
pop
mov
adc
test
jo
mov
mov
sbb
mov
and
imul
xchg
add
out
mov
scas
pusha
outsb
cmp
dec
mov
sbb
cmp
in
and
xchg
popa
mov
lcall
push
in
in
xchg
cltd
pusha
ljmp
xor
cs
jp
push
movsl
lret
loope
std
mov
cwtl
fdiv
pushf
fwait
mov
xor
lds
notb
sub
xchg
pop
xchg
scas
cmp
xchg
insl
out
sub
out
or
lcall
push
cmp
inc
fmull
push
aam
cld
sub
inc
push
mov
inc
aaa
add
mov
in
inc
in
insb
stc
mov
sbb
xchg
jne
dec
inc
int3
int
add
hlt
dec
xor
rolb
fistpl
dec
dec
xchg
xchg
sti
sarb
aas
push
mov
adc
mov
pop
out
xor
sub
fwait
xor
outsb
pop
xchg
adc
sti
mov
add
fadd
int
popa
in
add
out
push
aaa
ficompl
insb
daa
insb
in
stc
cld
xchg
or
in
mov
add
xchg
xchg
sarl
call
imul
icebp
pop
inc
stos
mov
or
pinsrw
in
mov
inc
iret
pop
inc
push
movsb
test
sub
mov
and
fcoml
xchg
xchg
jo
or
jne
int
mov
mov
popl
xchg
pop
int3
dec
sbb
pop
rcrb
cmp
test
cmpsl
add
and
shrb
ja
cmp
dec
cwtl
jge
sbb
jmp
mov
inc
push
dec
ret
and
data16
lahf
rcrl
mov
jmp
js
mov
mov
jae
int3
dec
pop
and
jp
push
rolb
pop
xor
mov
xor
cmp
adc
pop
cmp
xchg
or
xor
std
daa
inc
xor
leave
cmp
scas
cmp
pop
add
or
lock
lret
xchg
sti
lahf
lock
adc
int3
mov
cwtl
or
out
pop
cmp
jns
loope
xlat
or
cmp
xor
insl
inc
ljmp
sbb
jge
or
or
mov
test
or
mov
mov
xchg
movsb
repz
adc
mov
loop
setle
and
pop
jbe
adc
xchg
cmp
loop
mov
sub
xchg
fadds
fwait
mov
fldt
mov
xor
out
out
fcmovnb
movsb
les
icebp
js
and
fcomp
xor
xor
inc
or
jl
mov
gs
movsl
xchg
cmp
std
mov
fistps
and
cmp
xchg
jl
push
cmp
xchg
lods
add
inc
mov
scas
fwait
jmp
jecxz
dec
jns
in
mov
aad
mov
imul
jnp
or
xchg
loope
xchg
aas
pushf
add
mov
cld
xor
push
sbb
cmc
xor
rcrl
stos
xlat
shll
inc
ret
mov
sub
mov
cmp
adc
mov
jge
adc
mov
lcall
pop
shrb
cmp
mov
pop
std
push
or
call
add
orl
xchg
stc
mov
ret
xchg
pop
scas
inc
jmp
mov
pop
pop
fs
outsl
das
cld
adc
fstp
add
mov
push
shufps
iret
xchg
sub
test
inc
mov
addr16
testb
xor
bound
test
add
test
mov
stos
cmp
push
fbstp
cmp
fstp
adc
fimuls
pop
lahf
sub
or
rorb
adc
div
jns
mov
mov
jbe
xor
sbb
cmpl
mov
jns
mov
sbb
cld
outsb
inc
and
sub
cmp
inc
cmp
aam
ja
out
rcrl
push
mov
ss
jns
out
rcrb
outsl
add
subb
stc
insb
dec
dec
lods
scas
dec
add
xchg
mov
pop
dec
mov
pop
mov
lahf
stos
xlat
or
fstpl
dec
mov
jno
adc
jp
xlat
test
repz
stos
push
fidivrs
sbb
mov
adc
dec
in
add
push
ss
inc
loop
sub
or
leave
test
jg
enter
cmp
mov
sbb
inc
add
sbb
cmp
arpl
aaa
rorb
xchg
jbe
xor
xor
sub
out
xlat
loop
cmp
mov
cmpsl
mov
add
repz
push
addr16
sub
mov
rorb
frstor
lcall
nop
xlat
ficoml
sahf
inc
enter
fistl
jecxz
out
mov
pop
mov
pop
clc
cmp
lods
mov
call
pop
or
xchg
fwait
xor
rorb
scas
mov
cld
ret
dec
jbe
lea
arpl
pop
aaa
out
addr16
daa
scas
xchg
iret
mov
fidivrl
adc
popf
shl
pop
lret
pop
sub
test
add
and
divl
jmp
icebp
jg
push
outsl
rolb
into
in
aad
push
cmp
or
clc
aam
shl
dec
push
out
jg
rolb
and
sbb
push
xchg
cmp
mov
mov
out
xor
cs
mov
outsb
mov
rorb
and
push
inc
xor
sbbl
sbb
ret
gs
out
mov
jmp
xchg
bound
mov
pop
in
push
fwait
cmpsl
ds
push
outsl
cmp
arpl
sarb
dec
pop
push
xchg
sub
sbb
shlb
in
and
outsb
int
arpl
pop
and
outsl
xor
sti
mov
scas
inc
fsubrs
clc
add
mulb
ror
and
dec
fsubrl
xor
adc
xor
clc
mov
inc
fs
enter
mov
movsl
dec
jp
pop
cmpsb
out
and
jae
mov
stos
dec
repz
pop
adc
outsl
faddp
call
adc
test
fs
out
ljmp
or
mov
aam
pop
jns
ret
and
mov
insb
es
sbb
insb
pop
mov
inc
loope
and
cmpb
imul
and
sarl
xor
xlat
test
jl
jl
stos
movb
mov
test
pushf
rcll
cmpsb
mov
pop
dec
sub
das
shrb
xor
cmp
pop
push
cld
fwait
push
in
shll
jmp
adc
mov
xor
sub
xchg
dec
xchg
lods
leave
subb
sbb
adc
rcrb
mov
cmp
mov
mov
mov
jb
ret
dec
xorb
add
push
fidivrs
jl
and
insb
inc
aad
rcll
cmp
dec
xor
and
lcall
pavgb
pop
inc
cli
sahf
pop
rorl
lret
mov
mov
clc
loope
in
adc
xchg
ss
inc
ljmp
lea
or
pop
in
sub
add
stos
ljmp
daa
je
add
cmc
in
lock
pop
add
out
adc
lods
jmp
js
loop
cmp
mov
pop
fwait
mov
or
das
je
lds
mov
xchg
iret
xchg
test
xor
sbb
adc
int3
jae
hlt
dec
pusha
or
inc
push
je
lock
and
push
jb
xor
dec
shrl
sbb
mov
jbe
aaa
imul
ss
movl
in
inc
lea
ficoml
mulb
lcall
int3
push
pop
cmp
ljmp
pop
mov
push
les
pop
mov
movhps
cmp
sub
shll
fistl
mov
movsl
add
pop
xorl
ds
ja
aam
js
scas
jo
xchg
cmp
jo
xor
sub
mov
pop
dec
jo
mov
pop
cmp
push
cmpsl
mov
data16
inc
aaa
push
mov
sbb
xchg
mov
add
or
ljmp
mov
jo
into
ljmp
xchg
hlt
movb
es
lahf
xor
pop
lahf
jb
std
sarb
mov
jne
imul
repz
push
adcl
sar
jb
mov
and
mov
stos
xchg
lds
mov
jge
push
cld
les
xor
push
nop
or
jle
outsb
jl
shrl
popf
sarb
cmp
pop
push
cmpsl
dec
and
mov
insl
iret
pushl
cli
mov
scas
mov
mov
xchg
dec
xchg
lods
ds
xor
push
push
aad
xchg
outsl
cmpsb
xor
das
sahf
jmp
sarl
mov
mov
adc
pop
out
lahf
xor
fisubl
xlat
pop
lea
daa
inc
pop
rclb
movsb
fs
mov
in
or
sub
jne
dec
sahf
lcall
mov
imul
pop
adc
pop
xor
insb
push
in
cmp
mov
clc
lea
fdiv
push
add
push
cltd
pop
aam
sti
lds
add
push
lret
outsl
jb
fistps
iret
inc
pop
mov
xor
cmpsl
inc
jae
mov
push
cmp
sarb
sub
mov
subl
andl
pop
xor
aam
scas
fucomi
loope
stc
cmp
push
pop
push
cmpsl
jae
scas
arpl
dec
add
sub
jnp
ret
xchg
inc
cld
add
jbe
cld
movsb
inc
jle
ret
cmpsb
sbb
pop
icebp
xlat
out
add
data16
jp
push
push
stc
andl
push
insb
cli
cwtl
or
or
pushf
lods
sbb
sbb
adc
test
clc
roll
int
fcoms
or
stos
out
arpl
cmc
or
loopne
cmp
fsts
xor
mov
insl
fs
loop
adc
mov
gs
mov
or
pop
mov
cs
cmp
push
lcall
shr
cs
loope
mov
xchg
and
test
cmp
pop
stos
sahf
sbbb
fwait
adcl
jae
pop
loopne
push
lret
out
xchg
dec
enter
xchg
lea
xchg
jl
pop
sahf
mov
mov
lods
dec
xchg
push
or
jmp
out
scas
cmpsb
xlat
shlb
push
js
xor
pop
lret
jle
push
sub
sub
lds
mov
roll
and
dec
mov
cmc
les
cmp
sti
jne
dec
lods
jmp
jno
dec
cld
pop
cmpsl
orb
dec
ss
pushf
dec
bound
pop
pop
into
jmp
scas
jge
sbb
in
add
pop
pop
arpl
or
negb
out
inc
xchg
dec
mov
call
and
call
lods
cmpsl
rcll
pusha
xchg
in
add
jb
cmp
dec
pop
sti
leave
add
lods
xchg
fdivl
inc
mov
outsl
inc
push
sbb
push
sbbb
push
pop
pop
fnstenv
lret
pop
popf
mov
fdivrs
mov
jnp
inc
dec
lods
mov
rclb
scas
jbe
repnz
mov
addb
int3
push
xor
das
xchg
leave
sub
insb
daa
or
push
xchg
jo
scas
or
adc
imul
xlat
ret
or
aaa
mov
je
xchg
lods
cs
xlat
lea
xorb
imul
cmp
adc
out
std
pop
push
mov
movsb
mov
xor
ret
loope
push
dec
orl
cmp
rolb
xchg
rcll
scas
pop
pop
inc
fs
aaa
pop
lds
mov
push
ficoml
pusha
fisttpll
jae
pop
dec
sti
cwtl
inc
push
enter
ljmp
les
call
dec
push
divl
into
or
lock
xchg
dec
mov
icebp
movsb
inc
mov
mov
jl
push
icebp
jg
mov
lcall
jge
inc
adc
and
cmpsb
outsb
mov
int
dec
dec
sahf
push
or
orl
popa
pop
add
mov
jecxz
add
mov
push
mov
cmp
mov
pop
push
xchg
mov
insb
in
xchg
cmpsb
mov
repnz
jl
push
push
jae
or
pop
xor
call
jl
and
loop
mov
mov
xchg
je
push
fimull
test
pusha
xchg
mov
pop
pop
mov
sarl
inc
cmp
data16
lods
fs
lods
cs
mov
cmp
jb
dec
push
out
loopne
rep
fidivs
enter
and
inc
sbb
loopne
inc
lods
pop
repz
push
mov
sbb
imul
mov
flds
add
dec
mov
mov
inc
out
ss
and
dec
in
mov
jmp
add
xchg
pop
sar
sub
das
out
ss
cld
adc
xor
popa
adc
inc
sbb
fldl
cmpsl
cmc
hlt
inc
cmpsb
sbb
cli
loopne
jb
je
xchg
lock
and
cs
mov
jno
add
stos
jmp
fs
jno
loope
lods
dec
inc
adc
mov
clc
es
aas
lcall
call
enter
push
mov
pop
push
sub
xlat
roll
fucomi
inc
rclb
sub
int
stc
or
add
jne
aas
adc
cmp
xchg
cmp
shlb
cmp
mov
xor
int3
iret
mov
mov
int3
test
inc
dec
xchg
add
mov
push
and
xchg
gs
icebp
jnp
les
test
stos
mov
aas
sub
sub
cltd
mov
jmp
subb
jl
fildl
sub
out
and
adc
jl
aam
movsb
test
mov
xor
fnstsw
cmp
lock
out
inc
push
cwtl
mov
push
shll
jo
fidivrs
inc
dec
mov
mov
out
call
mov
mov
jnp
sbb
repnz
inc
mov
leave
sbb
mov
mov
mov
sbb
es
and
xor
mov
push
gs
ds
rorl
and
fsincos
or
icebp
inc
cmp
sbb
into
cli
sbb
fistps
in
and
jae
std
jne
jae
gs
push
je
call
repnz
int3
mov
cmp
mov
sub
shl
push
or
xor
std
sub
pop
rorb
jae
mov
inc
lret
cltd
jmp
and
push
or
jecxz
mov
int3
fsubl
stos
mov
sarl
fisubrs
mov
test
lea
sbb
fadds
xor
pop
addr16
xchg
aam
pop
loopne
stos
pop
and
sbb
add
lods
sbb
jnp
and
cmp
pop
cmpsb
cmp
sti
adc
or
es
push
mov
mov
mov
shll
cmp
xor
test
push
dec
stos
call
mov
xor
lods
push
sbb
andl
test
lds
add
mov
mov
inc
test
loopne
dec
out
sub
pop
jno
sub
mov
pop
sar
sbb
loop
xchg
in
xor
cmp
pop
jns
loop
mov
fisttpl
push
sahf
leave
lret
insb
imul
jge
int
jmp
sbb
ja
cmpsl
push
xchg
pop
out
jo
pop
sbb
sbb
loope
out
shrl
mov
or
inc
mov
pop
and
test
jecxz
jae
sub
sbb
push
adc
flds
stos
pop
cld
adc
jmp
lock
aad
arpl
scas
pop
mov
aaa
dec
lea
pop
pop
sbb
ljmp
scas
into
inc
adc
repnz
fdiv
mov
mov
xchg
add
pop
loope
fldcw
and
iret
pop
idiv
xchg
push
stc
xchg
inc
loope
mov
ds
or
lret
mov
bound
pop
ret
push
rorb
xor
cmpsb
mov
hlt
in
pusha
rcr
pop
lret
lea
imul
daa
int
pop
xchg
lcall
scas
push
push
mov
dec
jmp
dec
push
dec
hlt
jle
outsl
popa
jle
je
and
push
movb
and
stos
cmp
inc
inc
jge
sbb
out
pusha
sbb
int
out
movsb
inc
mov
fld
add
pop
mov
lock
push
sbb
ficoml
mov
jo
bound
push
out
frstor
lret
lea
lret
cmp
mov
xchg
movsb
mov
or
gs
imul
cmp
out
jg
loope
push
adc
jle
push
mov
adc
rorb
and
lahf
roll
sbb
sahf
mov
push
sbb
repz
test
std
pop
pop
mov
add
sub
cmc
sbb
mov
aad
stos
nop
aas
loope
mov
pop
repnz
jbe
test
jecxz
jae
sub
es
les
repnz
cmp
sbb
sub
pop
sub
iret
inc
imul
cmpsb
jne
out
dec
mov
mov
pop
call
lea
pop
dec
pop
pop
inc
pusha
jmp
mov
add
mov
not
inc
stos
sbb
xor
sub
add
int3
push
sbb
movsl
popa
movsb
cmp
jp
mov
ds
fisubrl
push
test
ret
cmp
cmp
push
push
aam
fisubl
bound
or
hlt
dec
pop
jg
aam
mov
mov
shr
clc
mov
mov
pop
je
fsubrs
dec
cmp
mov
pop
dec
bnd
or
repz
and
sub
xchg
jno
in
mov
jp
mov
addr16
mov
lods
cltd
adc
lea
cld
jnp
sbb
test
fimuls
mov
iret
outsb
mov
nop
lcall
call
pop
mov
fdivrl
out
or
enter
or
jmp
aam
in
jl
int
mov
dec
push
lret
push
dec
test
jge
repnz
inc
mov
ljmp
std
sbb
push
xchg
xor
jle
xlat
andb
outsb
jae
pop
jmp
in
add
movsl
cltd
imul
sub
out
repz
js
aad
cmp
mov
pop
stos
inc
dec
mov
cli
pop
fnstenv
cmp
jle
fdivl
out
sub
adc
das
push
mov
enter
xchg
add
idivl
mov
jno
popf
movsl
aaa
scas
cld
sbb
mov
insb
outsl
mov
jge
or
pop
add
clc
cmp
push
cmp
adc
dec
pop
decb
sub
pop
lods
mov
cmp
out
push
out
std
or
repz
mov
pop
lret
jnp
or
mov
lcall
cmp
add
push
mov
jae
push
out
bound
push
dec
pop
lahf
std
clc
fwait
incb
sub
sti
pop
leave
out
xor
add
add
dec
test
mulb
pop
call
xor
das
test
sbb
pop
xor
mov
pop
movsl
pusha
mov
mov
mov
xor
fwait
and
lcall
jno
mov
nop
sub
imul
pop
adc
mov
xchg
nop
xchg
push
nop
fisubl
xor
packuswb
mov
cmp
cmc
dec
mov
cmc
mov
pushf
ret
clc
jge
aas
and
sbb
lahf
dec
popf
js
jmp
pusha
mov
data16
mov
repnz
xor
shrb
sbb
adc
imul
call
mov
xor
xchg
addr16
neg
inc
dec
in
push
xor
pop
popa
xchg
push
or
pop
sub
xor
test
stos
popf
sub
push
xchg
sub
and
xor
adc
inc
sbb
inc
ss
jg
out
leave
or
inc
bound
test
out
adc
int
cmpsb
lea
or
clc
or
adc
mov
jle
sub
aam
subl
aaa
push
adc
xchg
shrl
mov
jb
and
je
scas
inc
scas
js
lea
lretw
out
cld
push
enter
or
hlt
lidtl
fwait
sbb
repz
mov
cmp
mov
fidivrs
out
mov
cmp
cmpsb
jg
fildll
dec
dec
int
not
mov
jno
shl
popf
cmp
dec
adc
lock
leave
stos
mov
jo
xchg
push
pop
jb
push
jns
xchg
push
jecxz
mov
sub
mov
cmpsb
out
scas
out
popa
dec
mov
gs
or
icebp
pop
jp
dec
or
inc
xchg
and
xlat
in
pop
outsl
cmc
scas
ss
imul
lds
mov
movsl
sub
jmp
shlb
add
push
pop
jbe
add
in
add
lea
hlt
fcoml
dec
es
mov
imul
cmpsb
mov
add
out
fwait
gs
sbb
aad
pop
and
out
fisubrl
mov
xchg
sub
nop
mov
pop
mov
lods
or
stos
mov
es
mov
push
and
dec
ret
les
imul
popl
mov
sub
lea
pop
and
add
push
stos
add
mov
lcall
test
pop
dec
imul
mov
sbb
push
add
imul
push
fnstsw
sbb
inc
adc
cmpsl
in
xor
pop
es
es
in
pop
int
add
test
pop
insl
add
mov
mov
mov
jp
pop
mov
push
dec
test
jp
add
cmp
inc
jb
cmp
dec
int3
jb
dec
mov
adc
shlb
and
and
ficompl
cmpsb
sub
mov
sub
int
aas
jecxz
imul
iret
mov
fbld
push
mov
out
mov
jl
ss
push
lods
imul
dec
push
inc
cmpb
pop
and
out
pushf
mov
ret
in
adc
fwait
incb
mov
iret
out
push
arpl
or
xchg
sarl
pop
jmp
fs
xor
push
pop
shll
pusha
lea
std
adc
push
push
mov
xor
jp
lock
sub
enter
out
cs
push
shrb
sub
jmp
aaa
add
xor
mov
xchg
into
or
aas
xlat
cmp
mov
xchg
cmp
push
pushf
fistps
sub
and
mov
add
shl
stc
push
hlt
and
mov
ss
mov
pop
pop
push
adc
jnp
pop
rclb
fdivr
fs
aad
jecxz
sbb
or
ret
sub
arpl
inc
sub
adc
jne
stos
dec
fcomip
pop
add
sbb
inc
xchg
cmp
push
in
adc
adc
lods
out
or
ja
xchg
jg
inc
ja
cld
push
icebp
in
out
xorb
cmp
jl
and
aad
jbe
sahf
xor
cs
shll
sub
fadd
inc
lret
mov
push
mov
jnp
push
xchg
and
xlat
and
or
popf
pusha
test
mov
jno
daa
mov
pop
cmp
xchg
jae
imul
push
cmp
icebp
xchg
sbb
add
cmp
inc
sbb
shl
jno
and
sub
cmc
insl
lods
or
je
jmp
arpl
lds
push
sbb
aaa
nop
jns
insl
das
orl
push
cwtl
pop
loope
add
loopne
add
pop
add
mov
scas
mov
cmp
dec
bswap
fildll
and
rcrl
pop
ds
push
jl
xor
push
mov
faddl
push
int3
push
adc
fucomp
dec
pop
mov
sub
jge
ljmp
dec
mov
dec
xor
and
mov
mov
jne
or
mov
divl
and
in
aam
stos
leave
xor
lret
js
sbb
and
mov
adc
mov
mov
inc
dec
clc
in
xor
mov
cwtl
mov
xor
mov
jne
xor
inc
int3
nop
cmp
sti
test
cmpsb
pop
mov
inc
xor
mov
dec
sbb
jae
or
movsl
xchg
subb
sbb
dec
mov
outsb
ficoms
popf
cmp
inc
mov
pushf
fs
cs
push
dec
cmp
cmp
or
loop
sub
inc
fs
or
ljmp
divl
xchg
scas
push
jne
subl
iret
mov
lret
test
aam
push
xchg
inc
adc
daa
and
stos
push
mov
popf
xlat
adc
mov
xchg
addl
dec
sub
pusha
bsf
mov
sub
and
push
cmp
divl
js
pushfw
aam
fstpt
fwait
clc
sbb
pop
and
popf
stos
test
bnd
push
xor
cltd
out
aas
js
dec
mov
gs
mov
insb
aaa
ret
dec
lcall
popa
fldt
adc
jg
data16
push
sti
andb
bound
fisubrs
jne
add
pop
pusha
subl
loope
inc
clc
out
inc
inc
push
in
jbe
inc
mov
sbb
ror
sub
push
stos
xchg
and
mov
push
pop
xlat
xchg
sbbb
cwtl
outsb
pop
sbb
xor
and
add
mov
loopne
lods
lcall
addl
aad
adc
rol
xor
adc
mov
pop
mov
jae
jg
iret
gs
mov
sub
je
icebp
xlat
xor
dec
mov
jge
lock
insb
cmpsb
sahf
pop
mov
add
and
cmc
lds
nop
cmpl
jnp
dec
shr
mov
mov
pusha
pop
rcrb
jb
add
pop
test
mov
out
pop
dec
cwtl
or
int3
outsl
outsl
orb
sub
dec
xchg
fwait
pop
cmp
pop
jns
rolb
rclb
inc
mov
push
sub
jmp
ret
insb
movups
insl
jo
aad
popf
stos
mov
out
imul
jnp
gs
xor
jae
xchg
push
pop
shrb
sub
sahf
lahf
push
andl
jle
or
and
lods
iret
orb
pop
in
dec
xor
xor
and
fstpt
nop
jb
pusha
jo
and
shlb
sti
sub
adc
lock
ret
ss
sahf
jp
sub
dec
aad
mulb
ficomps
dec
mov
cmp
movsl
add
mov
jp
imul
scas
ret
add
xchg
lods
inc
xchg
cmp
xor
mov
out
insl
and
sub
aaa
dec
and
sub
hlt
sbb
xchg
ret
jno
fsubrp
aam
or
neg
out
aad
lds
cmp
enter
push
dec
push
fwait
jne
add
and
xor
out
xor
int3
adc
call
pushf
jl
sti
movl
std
loopne
mov
lea
sar
mov
es
mov
out
sub
cmp
test
sub
adc
push
xor
nop
xor
loopne
pusha
roll
decb
push
jmp
and
test
mov
je
push
xlat
fsubs
data16
imull
mov
inc
push
push
mov
int
or
xchg
and
jb
leavew
push
scas
push
and
mov
sahf
and
imul
cmp
pop
push
cmp
mov
adc
push
insb
lods
das
mov
test
test
out
and
gs
lahf
lcall
and
lods
pusha
dec
imul
test
sub
repnz
dec
dec
lcall
xchg
ss
inc
outsl
addb
mov
jge
pop
cmp
cmpsb
sub
data16
lods
shl
xor
out
cmp
pop
repnz
jl
add
mov
repnz
push
sub
adc
lock
cli
insb
mov
inc
and
mov
mov
inc
or
jecxz
pusha
add
std
mov
pop
sub
roll
sub
psubw
xlat
movb
jae
dec
in
aaa
pop
aam
sbb
fsubrl
jmp
ss
jb
or
fnstsw
lods
or
jle
mov
shlb
scas
mov
mov
adc
or
xchg
scas
scas
adc
dec
mov
es
xchg
stos
cmpsl
add
add
frstor
adc
pop
xorl
popf
push
nop
out
cmp
pusha
loope
cmpsl
add
arpl
fstpl
addr16
jle
mov
mov
pop
jo
ret
aas
movsb
fiaddl
or
jns
xor
pushw
or
adc
jmp
xor
ss
sbb
adc
dec
pop
xor
outsb
mov
xchg
in
cmp
push
and
mov
ja
clc
loopne
cmp
adc
mov
lea
call
fwait
bound
call
rcl
xchg
insl
arpl
ret
push
mov
xor
sub
cs
data16
ja
scas
scas
ficoml
pop
in
inc
imul
enter
xchg
sbb
insb
xchg
push
cmp
rorl
mov
push
or
test
in
out
jo
xchg
push
lahf
ja
push
ret
mov
fisttpll
cltd
xlat
push
int
sub
enter
sbbb
push
fsubrl
mov
pop
adc
xchg
loopne
pop
push
xor
cmp
xchg
insl
or
xchg
lea
cmp
jne
jmp
jmp
leave
lret
rcrb
out
lds
ja
dec
fucomip
mov
pusha
sarb
clc
jnp
mov
xchg
sbb
sbb
popf
jecxz
or
mov
adc
fs
out
inc
loope
xor
xor
adc
adc
mov
mov
sti
pop
loop
dec
xlat
das
pop
pop
mov
jb
xchg
and
loopne
lds
adc
outsb
jle
in
mov
sbb
mov
insl
jno
inc
and
pop
dec
dec
xor
sahf
cmp
out
movsb
shll
andb
push
push
lods
jne
mov
popa
mov
fimuls
inc
jb
lcall
popa
test
cmp
cmpsb
test
add
das
aad
or
mov
inc
popf
in
xchg
cmpsl
das
sbb
das
inc
outsb
push
movsl
push
fidivrs
mov
movsl
idivl
mov
push
cmpl
mov
inc
and
push
outsl
jb
sub
lcall
sarb
js
jle
mov
mov
lret
out
mov
cmp
cld
leavew
sahf
jg
loopne
es
es
cmp
in
int
add
xchg
psubq
push
add
and
int3
jp
test
in
inc
int3
popa
xchg
xor
dec
clc
jmp
lret
jecxz
cs
sbb
jo
in
nop
sub
push
stos
cmp
dec
int
clc
cmpsl
orb
sbb
repnz
cmp
rorl
loope
icebp
sbb
cmp
lods
js
add
sub
jae
dec
out
push
pusha
gs
add
rorb
je
nop
test
jle
fwait
mov
xchg
sbbl
sbb
hlt
outsl
push
push
idivl
jae
ds
sbb
inc
adc
mov
and
xchg
data16
out
je
sub
shrb
mov
std
ret
adc
mov
call
loop
bound
stos
addr16
call
jecxz
add
shrl
adc
insb
mov
es
int
test
fs
push
insb
fiaddl
xlat
add
test
xchg
and
sbb
xchg
mov
push
out
inc
xor
sbb
inc
or
rcrl
xor
int
mov
mov
fdivrp
adc
mov
sub
mov
pop
mov
jns
in
cli
xor
inc
mov
add
add
stos
cli
mov
and
add
and
sub
rcl
jne
push
ss
xor
cmpsl
mov
fistl
push
xor
add
push
lcall
sub
inc
cmp
scas
and
je
inc
gs
inc
idivb
sub
cmp
fisubs
mov
jmp
xlat
sub
testb
lret
inc
mov
sub
les
lock
add
lods
cld
iret
shll
jno
xchg
popa
fidivs
xor
push
rclb
push
adc
jmp
enter
pop
mov
jl
lret
cld
sbb
lock
jbe
rorb
cld
scas
lret
mov
sub
pop
xor
int
pop
add
stos
jns
push
outsb
popf
bound
rcr
fwait
mull
daa
repnz
jmp
lahf
xchg
add
roll
enter
addb
mov
mov
push
adc
inc
jge
sub
mov
jnp
jne
mulb
int3
jmp
sbb
push
lods
sub
sub
mov
fadds
scas
test
pop
inc
inc
data16
cmp
xor
mov
jp
mov
sar
dec
ss
dec
sbb
sub
push
icebp
arpl
fwait
cmp
mov
rcrb
aas
movsb
stos
sub
popa
jg
jns
ss
mull
aaa
mov
les
and
movsb
push
mov
adc
mov
cs
lret
shrl
test
mov
or
mov
mov
lds
xchg
mov
cmp
jge
cmp
adc
loop
popf
aam
jmp
aas
add
popf
test
aam
cmp
push
cmp
inc
test
cmp
inc
dec
cmp
xchg
and
loopne
lahf
push
cltd
xadd
or
mov
int
fistpll
pop
xchg
sub
jne
or
dec
sti
adc
adc
jge
popf
test
aas
fwait
sub
and
hlt
pop
jle
or
jmp
add
call
shr
sahf
xchg
das
or
push
pop
lods
icebp
movsb
pop
int3
pop
sbb
leave
push
mov
mov
les
stc
pop
push
arpl
push
iret
mov
loope
les
adc
mov
call
xor
cmp
push
xor
and
or
push
sub
inc
cmp
movsb
negb
push
add
jbe
sti
je
lahf
xchg
in
pop
cwtl
stos
cmp
xchg
popf
xchg
mov
cmp
loop
add
aam
fld
push
cmp
push
add
push
xor
gs
leave
daa
xchg
int
ret
test
lahf
add
xchg
and
add
out
cmp
push
retw
stos
and
loop
cmc
in
imull
daa
aaa
xchg
sub
sub
out
pop
mov
mov
jbe
aas
das
lods
sbb
loop
mov
aam
test
push
xchg
sub
insl
lods
fldcw
cmp
insb
out
mov
cmpsl
sbb
pop
data16
cli
inc
mov
cmc
daa
je
imul
xchg
dec
fneni(8087
call
outsl
jecxz
mov
sbb
popa
xchg
aad
cmp
aas
push
cmc
push
out
outsl
fwait
repz
and
cmc
jg
incb
cmp
in
lret
popf
jge
enter
sbb
test
sub
aas
mov
ret
xchg
mov
sbb
hlt
inc
das
aas
push
cmpb
loope
cmpsl
ret
lea
rclb
xor
pop
outsb
in
sub
xchg
xor
lcall
adc
pusha
add
mov
repz
or
xchg
stos
mov
adc
pop
and
fbld
fdivrs
test
aad
sbb
xor
adc
pop
cmp
jecxz
dec
daa
arpl
test
mov
test
dec
sarb
jle
push
dec
ljmp
mov
mov
aam
adc
sub
std
sahf
add
mov
jmp
nop
shrb
stc
mov
fcomi
cmp
add
aam
bound
pop
or
dec
lret
push
jns
jno
fisttpll
loope
in
xchg
cmp
aas
in
jns
pop
mov
sbb
mov
push
mov
sbb
dec
sub
and
sti
jecxz
adc
rcrb
addr16
mov
dec
lcall
and
inc
cld
adc
rclb
add
add
jnp
fiaddl
inc
pop
add
mov
pop
xor
out
jecxz
jmp
or
lret
nop
dec
and
pushf
aad
cmp
bound
inc
dec
xchg
stc
aad
out
imul
jecxz
pop
pop
dec
mov
mov
pop
xchg
jb
mov
sbb
pop
pushf
adc
cmp
rep
pop
pop
bound
ds
jge
clc
adc
mov
jns
and
xchg
cmpsb
sub
cmp
mov
adc
push
pop
xor
sub
pop
loop
jmp
test
sub
push
fld1
outsl
test
add
movsl
lret
das
mov
clc
jl
mov
in
and
je
divb
xlat
ljmp
push
loop
xchg
fdivrp
mov
cmpsl
dec
push
fcoms
dec
repz
sub
arpl
dec
or
fistps
inc
lahf
cmp
dec
insl
cmc
pop
jb
repz
add
or
mov
sbb
negl
mov
push
test
call
test
mov
add
mov
outsb
mov
adc
enter
scas
xor
xchg
iret
cld
repnz
movsl
lods
and
fcoms
call
mov
adc
ret
fists
push
xor
int3
sbb
mov
cli
loope
mov
adc
mov
fimuls
sahf
es
sbb
jle
stos
shll
inc
ja
xor
sub
or
mov
in
cmp
bsr
cmp
and
pop
sub
pop
mov
enter
add
sub
sbb
mov
cmpsb
push
add
cli
clc
xor
mov
decl
call
fstps
mov
lcall
in
fisttpll
sbb
cwtl
cmp
xor
xlat
xor
pushf
dec
loop
mov
lods
das
dec
and
adc
push
rep
xchg
ret
jmp
cmp
push
and
jmp
inc
dec
cli
dec
xchg
out
lret
xchg
jp
sbb
pop
xchg
test
js
dec
xor
rorb
or
inc
add
sub
shlb
ficoml
push
adc
into
sti
call
dec
lret
ljmp
push
lcall
orb
pushf
mov
jns
shrb
ja
scas
xor
cli
fimuls
sub
subl
dec
mov
insb
push
dec
mov
out
or
dec
lods
scas
pop
cmp
cmp
mov
add
jle
aaa
add
add
dec
push
clc
lcall
aas
adc
hlt
or
cmp
das
testl
mov
loopne
cli
int3
or
ds
repz
add
jecxz
xchg
sahf
imul
push
insl
dec
or
out
dec
xchg
xchg
pushl
sbb
mov
jbe
ljmp
pavgw
jp
aad
test
into
mov
popa
sbb
cmpsb
xor
scas
pushf
hlt
sbb
sarb
in
dec
jbe
and
inc
and
mov
dec
loopne
stc
mov
icebp
out
push
aad
mov
mov
enter
mov
jle
lods
fcomps
push
adcl
mul
sbb
out
sti
imul
sbb
cmp
into
or
add
jl
lods
int3
cld
dec
add
inc
cmp
or
fdivl
jae
push
and
pop
pop
pop
or
fwait
ss
scas
test
sub
sub
or
and
sub
jg
ret
lcall
call
jnp
ds
xorb
cmpb
jmp
loop
adc
sub
sub
or
lock
pop
and
pop
test
fmull
add
test
sahf
aad
mov
and
mov
out
and
in
fwait
dec
and
out
push
scas
les
test
js,pn
and
ror
xor
das
dec
sahf
out
and
out
stos
loope
repz
hlt
mov
call
sub
lds
push
or
fs
mov
mov
xchg
repz
data16
dec
sbb
fisubrl
dec
jae
push
xlat
or
loop
lock
in
outsb
inc
cmpsl
loope
sbb
je
push
push
aas
lods
push
out
ret
add
ds
mov
or
push
sbb
dec
sub
cmp
cmc
adc
lcall
addr16
enter
scas
push
addr16
add
loope
xor
fistpll
pop
in
es
sub
imul
adc
or
jae
popf
bt
lahf
fidivrl
int
shll
stos
mov
fidivs
jae
sub
int
sbb
dec
mov
mov
mov
add
popf
aas
push
loop
xchg
bndstx
negl
adcl
xchg
jmp
aas
cmp
cmc
cmp
rorb
ficoml
adc
idivb
push
scas
mov
fs
out
cmp
lahf
les
inc
in
cld
jl
or
stc
jno
test
push
pop
or
dec
pop
sub
insl
push
push
popa
fistl
lret
pop
jns
sbb
dec
loopne
fs
int3
insb
and
lods
adc
or
sub
movsb
in
cmpsb
leave
in
push
and
dec
nop
pop
clc
sub
out
push
inc
loope
xorl
stos
fstps
cmp
push
cmpsl
xor
xchg
inc
cltd
test
push
xor
clc
ficoml
xchg
ret
pop
dec
dec
hlt
and
data16
push
sbb
pop
mov
shr
addl
loope
xor
cmp
sbb
dec
jp
std
ss
dec
sahf
popa
pop
lret
sub
or
daa
test
xcrypt-cfb
cmpsl
and
jno
imul
shlb
bound
hlt
cmpsl
mov
ret
loopne
loopne
das
pop
inc
ds
jbe
xchg
sbb
mov
rcrb
cmpsb
mov
xlat
or
or
addl
jp
popa
sub
pop
test
push
aad
mov
xchg
dec
push
cmpsb
xor
jbe
ljmp
mov
test
push
inc
and
test
dec
or
stc
adc
sbb
movsb
nop
cmp
mov
clc
and
lret
int
pop
cmp
out
sti
movswl
mov
or
pop
aad
aam
sahf
insb
mov
out
mov
scas
push
sub
cmp
popf
dec
jne
xor
adc
das
popa
fwait
or
repz
cmpsb
dec
icebp
enter
lret
mov
shrb
dec
inc
addl
jmp
xor
and
sti
mov
push
aaa
mov
aad
aas
add
je
inc
jns
xor
and
xchg
movsl
in
int3
repz
pop
push
mov
sbb
mov
pusha
add
mul
mov
add
sbb
pop
xchg
les
mov
adc
push
dec
mov
mov
repz
adc
xchg
outsl
fs
mov
mov
stos
sbb
sahf
stos
bound
jecxz
sti
sti
xor
inc
pop
add
pushf
xchg
rcll
pop
push
test
cmc
cmpsl
jo
lods
or
mov
xor
je
mov
xor
scas
dec
divb
insl
test
clc
xchg
ret
aad
push
repnz
arpl
xlat
or
cmp
jae
mov
pop
adc
mov
mov
and
aad
out
push
icebp
jge
aad
movsb
jne
and
sbb
adc
jo
aam
sarb
out
fucom
sti
cmpsl
add
sbb
repnz
dec
popf
lock
pop
paddusw
lahf
popl
aas
pop
ljmp
cltd
cmp
push
test
mov
jo
and
fmulp
loop
jae
mov
push
leave
movsb
outsl
or
mov
lods
jae
xchg
leave
test
xchg
sahf
test
fistpll
movsb
and
fcompl
jmp
dec
fsubrs
pop
out
repz
imull
sbb
mov
pop
push
sbb
cmp
cmc
mov
mov
xchg
add
mov
fsub
shlb
sub
push
movsl
dec
scas
jle
ljmp
cmp
xor
stc
imul
adc
and
cs
cmp
addb
std
xchg
jle
pusha
xlat
add
mov
fs
ljmp
inc
cltd
addr16
adc
leave
sub
ret
ljmp
mov
pop
cld
imul
push
mov
addr16
adc
push
cmc
add
push
inc
out
cmpsb
jmp
sti
xchg
fwait
hlt
popf
sbb
ja
adc
and
xor
push
xlat
xlat
repz
mov
mov
outsb
xor
imul
gs
pop
popf
out
xchg
xchg
je
ljmp
ja
or
or
inc
pop
imul
out
call
xchg
ficoms
and
not
cwtl
jecxz
stc
mov
aad
sbb
mov
scas
mov
sub
push
pusha
bound
xchg
mov
std
cmp
cmp
fs
ljmp
push
movb
popf
js
push
cmp
ret
mov
xorb
add
les
mov
and
bound
cli
test
jecxz
out
lcall
mov
scas
lret
or
adc
hlt
out
lret
add
push
aad
fistps
lcall
cmp
dec
sub
cltd
or
and
pop
adc
ret
mov
inc
div
imul
push
xor
cli
cwtl
enter
ret
loop
mov
jb
jb
jae
imul
sub
pop
push
pop
lret
jmp
xchg
xchg
mul
xchg
push
das
aad
subb
sbb
insb
push
call
ds
xchg
or
out
push
loopne,pt
jne
insb
push
mov
xchg
sbb
or
sbb
jae
mov
hlt
pop
fsubrs
popa
es
lods
inc
leave
xor
cmp
ljmp
cmpb
dec
mov
jb
inc
into
jb
repnz
addb
push
jae
fimuls
std
sti
adc
xlat
bsf
jge
in
cltd
mov
inc
subl
and
mov
repz
imull
sbb
clc
mov
stos
cmpsb
pop
jl
pop
sub
inc
lcall
push
push
xchg
pop
xchg
cmp
xchg
adc
js,pt
pop
inc
jg
dec
fsubrp
inc
loope
mov
and
div
jnp
ljmp
imul
lcall
jl
dec
shll
mov
dec
into
xor
adc
push
xchg
dec
pushl
pop
mov
outsl
mov
cltd
dec
adc
mov
sbb
punpckhbw
jne
jmp
int
mov
lahf
sub
add
test
and
cmp
lea
pop
loopne
loope
bound
popa
add
and
dec
pop
gs
jl
jno
cltd
mov
add
mov
bound
xor
repz
rcrl
test
push
mov
call
dec
push
push
push
and
sbb
jmp
mov
in
dec
gs
repnz
fsts
cmp
aam
fwait
mov
outsl
rol
lret
jbe
cmpsl
repz
fiaddl
push
arpl
iret
popa
mov
or
sar
add
aas
pop
mov
inc
mov
test
xchg
in
stc
bound
cmp
cmp
and
rclb
dec
push
cltd
iret
mov
sti
lret
sub
in
add
je
mov
pop
xor
push
repz
ljmp
jmp
dec
adc
mov
xchg
mov
mov
add
scas
nopl
into
xchg
outsl
jnp
jge
dec
lods
iret
inc
add
pop
jle
imul
cmpsl
je
fwait
jne
rol
les
bound
rolb
adc
aad
shrl
mov
pushf
scas
in
dec
sub
jg
in
inc
arpl
mov
negl
std
ret
lea
lock
and
or
enter
jmp
rep
and
lret
ficompl
xor
cmpsl
and
fisttpl
lock
push
je
mov
cli
jne
fdivp
adc
cmp
pusha
pop
insb
xchg
and
mov
push
pushf
push
jle
adc
pop
or
sbb
push
les
jbe
test
jns
out
es
cltd
loope
push
dec
lock
sarl
push
test
andb
call
shll
jg
mov
dec
cltd
shl
loopne
or
sub
adc
mov
push
push
mov
jne
cltd
mov
push
pop
inc
dec
outsb
outsb
icebp
ja
dec
pop
sub
dec
unpcklps
push
call
std
push
repnz
adc
xchg
pusha
or
pop
add
xchg
notl
mov
lret
test
sub
mov
ret
cmpsb
xchg
pop
adc
outsb
pop
pop
filds
cmp
test
ret
adc
or
popf
call
lods
push
xor
add
andl
inc
leave
lds
sub
mov
adc
adc
sbb
push
rcrl
mov
xor
adc
cmpsb
out
mov
sahf
mov
data16
and
mov
loopne
movsl
fcoms
xor
aas
adc
add
call
jg
out
fisttpll
sub
mov
pmaddwd
dec
sahf
in
push
pop
and
jbe
popl
rcll
and
fwait
cmp
outsl
inc
push
xchg
ds
add
out
xchg
inc
xchg
jno
mov
out
xor
mov
mov
es
xchg
cld
orl
ret
inc
sbb
addr16
insb
dec
pop
or
cltd
je
adc
xor
sub
xchg
scas
cld
xchg
in
jg
push
add
cli
mov
mov
push
shll
lods
fldl
cltd
sub
cmpsl
mov
call
movhlps
jp
flds
loope
stc
push
pop
mov
mov
in
mov
push
sbb
push
cmp
rcrb
sbb
je
mov
mov
mov
out
in
inc
lds
ds
movsl
rsqrtps
push
xor
mov
sub
mov
idiv
adc
je
stos
inc
jns
sbb
insb
dec
cmp
lahf
push
fstpl
mov
insb
or
adc
mov
cmp
push
sub
call
out
arpl
push
push
lcall
std
arpl
rorb
addr16
adc
or
data16
lcall
adc
clc
xorl
rclb
mov
cmp
lcall
and
push
mov
scas
fcmovne
and
fmulp
or
sub
fldl
adc
pop
mov
in
cmc
lret
aas
sbb
push
div
xchg
call
pop
and
shr
xchg
jg
scas
sub
push
and
jmp
in
repnz
jle
push
dec
xchg
movsl
xchg
ljmp
ljmp
jle
lcall
gs
cmpl
cmc
mov
mov
push
mov
enter
jg
and
sbb
mov
xchg
test
or
enter
mov
push
mov
xchg
icebp
mov
arpl
imul
or
push
lret
sti
out
imul
fimuls
int
insb
pop
clc
lds
lods
data16
xchg
imul
pop
pop
lret
pop
pop
fidivl
cmp
and
loope
dec
test
and
cs
lds
das
dec
xchg
jo
xor
cmp
jmp
push
popa
xchg
aaa
mov
dec
roll
pushf
outsl
pop
pop
pop
inc
pop
jg
dec
sub
ljmp
in
inc
mov
pop
cmp
mov
ds
push
ss
jno
es
push
nop
into
sbb
outsb
sub
jmp
adc
aas
repz
movsl
ds
or
aad
in
sahf
and
in
xchg
subb
loopne
add
dec
dec
mov
push
aam
inc
or
or
jns
lret
je
js
fs
aad
fucom
xchg
mov
sub
add
lret
ret
and
movsl
imul
in
aad
xchg
loope
dec
data16
mov
add
mov
push
xor
out
cmp
xor
in
icebp
xchg
incl
dec
movsb
mov
xor
enter
push
dec
fwait
dec
lock
rolb
lock
inc
mov
xchg
test
jne
ret
es
mov
out
mov
test
push
je
xchg
sub
pop
mov
inc
xchg
mov
push
movsl
movsb
sahf
cs
add
aad
mov
repnz
stos
push
mov
sub
lret
or
lcall
jle
int3
out
mov
out
cmp
mov
mov
xor
add
fcoms
dec
xchg
dec
dec
xchg
pop
dec
xchg
addb
cltd
jp
bound
ja
mov
in
jge
iret
or
pop
popa
jae
or
xchg
ds
enter
adc
and
stc
out
fwait
mov
mov
dec
sarb
out
lods
sbb
fldcw
xchg
jne
pop
rcrl
jae
adc
lds
repz
out
jp
mov
mov
and
xchg
mov
push
cs
inc
bound
out
arpl
subb
mov
cmpsb
push
vorps
lods
dec
xchg
or
jp
adc
shl
scas
cs
jnp
es
mov
aaa
int
sbb
dec
mov
sbb
adc
inc
add
and
sub
cmpsl
lock
mov
xor
decl
or
outsb
ja
cmpb
dec
fst
xor
add
xor
cli
push
mov
push
lds
cmp
jge
or
and
rclb
stos
movsb
push
in
aam
push
mov
and
out
mov
mov
mov
insb
sti
pop
jl
adc
rcl
cmp
int
outsl
outsl
pusha
int
and
or
and
or
repnz
loop
add
fstl
lahf
jecxz
test
test
mov
lcall
push
xchg
out
shll
pop
les
cmpsl
or
xchg
stc
aaa
addr16
loope
jg
fistps
mov
mov
mov
xor
subb
lods
mov
aam
sbb
jo
inc
pop
lds
xchg
adc
aas
sbb
int
es
sub
add
in
mov
mov
orb
push
int3
cmp
xchg
xor
je
xchg
push
add
add
inc
pop
and
stc
add
js
movsb
or
dec
jl
xor
adc
test
sbb
stos
cli
nop
stc
fidivl
mov
fdivrp
cmpsb
out
loope
pop
push
shll
sbb
and
sbb
icebp
mov
mov
pop
push
push
and
push
lret
push
mov
mov
movsl
bound
push
shlb
adc
mov
out
insl
jl
les
pop
fdivrl
mov
fistpll
jle
pushf
mov
sub
adc
in
mov
mov
aad
test
stos
dec
repz
pop
xor
stos
das
cmp
push
xchg
xchg
rorb
ljmp
aas
repz
jae
filds
xor
es
loop
stc
and
lods
sbb
and
sbb
add
mov
call
jne
mov
ret
lods
and
mov
or
jo
mov
lret
xor
mov
loope
mov
cld
shl
daa
lea
loope
jne
add
sbb
mov
fucomip
andl
out
inc
adc
enter
fwait
jae
xlat
xchg
and
shlb
add
lea
dec
pop
daa
push
and
inc
loope
lock
mov
clc
fistpl
mov
flds
lods
fdivs
push
leave
out
lea
inc
xor
mov
into
dec
out
mov
cmpsl
sub
add
ret
aaa
imulb
add
inc
and
and
pop
loope
mov
and
mov
dec
daa
cmc
mov
or
fsubrp
pusha
repnz
xchg
and
mov
or
stos
cltd
dec
xor
adc
cmpsl
das
sub
xchg
and
mov
out
ret
lahf
orl
outsl
stos
or
aas
fldl
jno
add
leave
xrelease
xchg
jge
jle
jge
ror
outsl
adc
cli
cmp
mov
push
je
xchg
push
jns
inc
rol
outsb
or
jo
mov
shl
mov
cld
rcrb
gs
jge
xchg
add
or
leave
or
les
mov
enter
sarb
xlat
and
pop
jl
mov
jno
xor
hlt
sbb
repz
out
cmp
out
jl
imul
mov
fists
out
jnp
in
sbb
test
test
nop
je
fists
scas
std
jbe
mov
or
movb
adc
insb
mov
cltd
mov
xchg
xor
push
sub
addr16
or
and
out
std
or
mov
mov
ds
mov
lahf
fstpl
add
pop
jle
jno
shrb
ret
mov
ret
out
lret
inc
jp
out
push
enter
cmpsb
or
shlb
pop
sbb
in
lds
iret
aaa
mov
prefetchwt1
or
enter
addl
dec
cmp
xchg
nop
enter
in
or
in
mov
stc
insl
mov
nop
add
les
mov
xchg
add
xchg
xor
lcall
inc
pop
fldt
sub
loop
add
les
or
aas
jge
into
mov
pop
inc
xchg
mov
mov
mov
addr16
push
xchg
adc
inc
ja
add
cmp
jns
into
lock
cltd
push
cwtl
imul
outsl
mov
inc
loopne
pop
out
push
arpl
gs
or
adc
in
mov
and
add
nop
push
jg
xor
and
jmp
icebp
xor
add
jae
sbb
push
mov
test
dec
cmp
sarl
leave
loope
int3
fstl
fldt
cmp
lret
ret
shlb
jle
xchg
dec
test
adc
loope
scas
jl
push
jns
adc
xor
or
pop
jle
mov
cmpsb
cmp
lds
pop
inc
jnp
das
xor
dec
stos
loop
mov
mov
mov
lock
xor
push
bound
add
addr16
cmp
sbb
dec
lock
inc
mov
cmpsb
scas
push
inc
dec
and
subl
adc
add
inc
mov
outsb
and
inc
lret
movzbl
in
mov
jno
js
clc
mov
add
inc
xchg
inc
mov
aad
out
js
dec
int
enter
lret
inc
aas
loop
or
jmp
call
insl
arpl
mov
push
jno
popf
rclb
daa
mov
mov
int3
mov
dec
cmpsl
lods
add
outsl
jb
or
movsb
adc
lea
ljmp
sbbb
mov
add
mov
dec
lcall
enter
mov
cmp
or
fldz
mov
test
gs
inc
pushl
xchg
movsb
or
lahf
sub
mov
in
push
jl
xchg
mov
pop
push
xor
in
and
push
flds
jno
xor
loop
jnp
lcall
std
ret
jmp
push
mov
arpl
addb
and
loopne
sub
xchg
fcoml
jo
jne
clc
pop
jecxz
pop
or
dec
sbb
mov
into
mov
hlt
stc
sub
mov
popf
sub
push
aam
movsl
pop
push
cmp
inc
lock
in
loop
xchg
dec
rorl
js
jecxz
jnp
ret
bound
push
pop
enter
xchg
scas
xchg
xchg
test
in
pop
test
sbb
xchg
test
dec
pop
sbb
push
mov
pop
jno
repnz
cli
and
adc
imul
repz
std
in
cmp
mov
ss
int
enter
and
push
bound
cmpsb
xor
push
sahf
cmp
push
inc
xchg
nop
insb
cltd
inc
sbb
std
data16
lcall
sbb
lcall
insb
in
adc
cltd
jecxz
sub
sbb
xor
and
inc
std
inc
jno
xlat
aad
in
inc
and
outsb
xchg
jno
icebp
jnp
int3
jmp
push
enter
cltd
out
xor
stos
pop
xor
inc
lahf
jns
ds
add
rorl
decb
lods
out
xchg
jl
fisubs
xchg
in
insl
ret
cmp
sub
stc
lahf
aam
sbb
cmp
inc
pop
sbb
pushf
repz
push
int3
stos
adc
mov
mov
movsb
pop
dec
scas
dec
enter
sbb
push
sbb
out
jbe
push
ret
out
ret
mov
imul
add
mov
ffreep
inc
adc
incb
dec
hlt
pop
mov
pop
xor
pusha
inc
inc
push
pop
pop
gs
mov
mov
sub
sub
ljmp
push
lret
sub
cmp
fcoms
rorl
sbb
je
adc
test
outsl
loopne
iret
inc
push
dec
mov
pop
sbb
sbb
testb
jmp
xchg
jb
adc
mov
outsl
pop
shr
lea
aaa
mov
test
mov
stos
mov
push
cli
cmpsl
arpl
scas
loopne
cmpsb
and
fmuls
je
cmp
adc
lock
rclb
insl
ljmp
xor
push
xor
mov
test
fisubs
inc
jp
or
and
sub
pop
arpl
mov
out
push
push
cld
sbb
pop
in
into
cmp
movsb
add
mov
outsb
cmpsl
lds
negl
test
push
enter
iret
jnp
clc
jmp
js
andb
lea
dec
mov
sbb
lret
rcll
test
and
test
mov
jmp
scas
mov
xchg
sbb
push
pop
jecxz
in
cmpl
and
jno
loop
pop
push
scas
xchg
inc
push
dec
bound
or
nop
cwtl
fs
aas
cmpsl
repz
push
jl
cs
push
clc
lret
sub
push
imulb
xlat
pop
ret
mov
clc
imul
push
jl
dec
mov
les
arpl
lock
insl
adc
iret
inc
adc
or
clc
popa
sbb
sbb
xchg
push
std
pop
hlt
hlt
xlat
fwait
and
sub
inc
repnz
mov
adc
xor
mov
enter
bound
in
sub
std
adc
ljmp
lret
mov
daa
push
cmpl
icebp
jbe
cmp
scas
xchg
cmpsl
cmp
cs
jg
add
mov
popf
dec
or
jns
pop
ljmp
mov
jmp
mov
fsubr
and
cmp
pop
and
jb
test
cmpsl
cltd
mov
xlat
insl
fwait
cmpsl
mov
adc
sti
std
scas
in
out
aam
adc
nop
les
jecxz
xchg
push
std
outsb
dec
pop
xchg
icebp
ss
mov
inc
mov
xchg
jno
add
enter
loop
shrb
and
jge
push
xor
test
xor
and
sbb
cmp
fldt
mov
arpl
adc
lds
jne
mov
mov
testl
lods
icebp
fwait
add
std
call
inc
lock
movsl
loop
xor
mov
pop
pop
mov
mov
xor
inc
adc
dec
push
int3
push
push
aas
jnp
cmp
sbb
mov
dec
add
mov
in
popf
in
inc
xor
rcrb
lds
pop
jnp
adc
rolb
sahf
mov
add
aaa
idivl
mov
scas
ljmpw
lock
xchg
mov
nop
loope
mov
inc
cmp
mov
ljmp
aas
push
push
cmp
or
mov
pop
sti
adc
mov
cltd
popa
sbb
sahf
or
dec
inc
xor
mov
lret
orl
cmc
push
popf
adc
bound
push
movsb
lock
sbb
mov
pop
lds
imul
enter
scas
add
js
addr16
adc
sub
les
sbb
or
pop
arpl
fidivrl
aad
sub
ds
push
mov
jg
mov
idivb
ss
xor
jg
mov
add
jp
fbld
mov
dec
popf
mov
lea
xchg
addr16
sub
dec
sub
adc
outsl
pop
fstl
jl
int
sub
insb
lret
lds
rorl
nop
jmp
int3
sti
cmpsb
fsts
and
mov
ds
inc
aad
add
inc
int
bound
inc
test
mov
jo
bound
xchg
xor
xchg
add
mov
mov
and
aam
stos
adc
and
jnp
stos
xchg
pop
je
das
aad
icebp
jg
pushf
pop
jae
xor
cwtl
sub
inc
jno
cmc
jmp
or
push
nop
jno
lret
stos
fnstcw
aas
outsl
out
mov
in
sbb
fwait
pop
and
loop
xchg
pop
insb
or
push
add
lea
fsubl
jo
adc
sahf
add
dec
push
loope
cli
xchg
shrl
mov
add
lods
xchg
cli
jmp
jl
xchg
or
xchg
les
jno
stos
aam
nop
pushf
cmp
lea
das
shrl
fistps
aam
in
mov
cld
jmp
data16
and
out
into
lock
push
inc
cltd
jno
test
call
pop
inc
jns
stos
xor
in
scas
add
adc
adc
insb
ss
cmp
imul
aam
and
pop
sub
mov
pop
and
pop
jmp
loop
fistl
jge
cmp
pop
mov
jno
out
mov
jg
mov
ficoms
inc
inc
daa
or
pop
mov
sbb
xor
and
subl
jae
leave
jns
jae
dec
mov
lret
push
nop
cmp
pop
lret
mov
js
sub
fisttpll
sub
jmp
testb
or
jae
jnp
jle
inc
adc
mov
pop
xor
loopne
sti
adcb
das
mov
andb
test
mov
add
ficoms
sahf
faddp
cmp
aaa
repnz
nop
cmpsb
mov
mov
mov
xchg
adc
mov
das
mov
fisubrl
cmp
ja
mov
mov
jl
mov
cmp
cltd
pop
test
loopne
daa
cld
inc
mov
loope
imul
cwtl
icebp
mov
or
push
push
add
test
aam
push
movsb
test
sbb
dec
addl
push
xchg
push
cmp
push
hlt
faddp
pop
cmp
out
mov
xchg
fs
cmpsl
xor
and
mov
mov
pop
loopne
and
mov
add
xchg
pop
xchg
clc
rcrb
fdivrl
sbb
cmpl
mov
and
test
xchg
fs
int
xchg
ja
movsb
jl
ret
sub
shlb
push
jnp
xor
pushf
syscall
dec
dec
aaa
lahf
out
arpl
dec
test
stos
iret
lds
xchg
jl
pushf
jmp
loope
loop
ljmp
cmp
outsb
cmp
cli
and
movsl
mov
shl
pop
pop
cmp
dec
adc
jo
out
test
dec
shlb
push
mov
insb
pop
fcomip
cltd
mov
or
ret
mov
pop
mov
xor
push
xchg
push
in
mov
push
stos
inc
push
fs
enter
jge
cmp
pop
jl
cmp
adc
clc
cmpsb
rolb
and
mov
sbb
jg
jmp
add
out
adc
and
add
sub
pop
les
sti
cmpsb
dec
cmp
pusha
jmp
mov
ds
xor
lcall
mov
push
or
xlat
sti
push
push
pop
add
pop
push
repz
jnp
stos
nop
sar
pop
sti
ficoml
cmpsb
inc
loope
pop
xchg
xor
cltd
mov
mov
pop
lret
sbb
mov
ds
gs
jmp
dec
xor
outsl
test
pop
pop
jecxz
jb
pop
xor
ja
jno
pop
icebp
insl
in
imul
lea
pop
pop
je
sbb
test
dec
xlat
push
sti
inc
push
fwait
push
pop
lret
scas
mov
add
fiadds
jns
in
mov
sub
movl
mov
sbb
ss
xchg
adcl
push
push
push
lods
pop
cmc
adc
or
xchg
pop
dec
and
xchg
pushl
sti
push
adc
jno
int
adc
fcoms
cmc
arpl
out
jbe
xor
jle
jg
call
lcall
and
jns
cmpsl
movsl
addb
pop
add
xor
fisttps
test
in
and
ja
or
mov
mov
std
leave
loopne
sub
pushf
dec
pop
js
std
xchg
jno
xor
cwtl
adc
movsl
push
stos
and
nop
push
mov
jns
push
iret
in
pop
decb
bound
jnp
sub
movb
std
lret
aad
insl
jne
aaa
cmp
mov
xchg
push
outsb
sub
push
push
dec
shl
scas
jne
inc
roll
xchg
or
push
aas
sub
cwtl
jg
xchg
jl
xchg
mov
adc
and
xchg
loopne
or
sub
outsl
ss
xor
int
push
inc
inc
add
adc
dec
stos
scas
jmp
mov
dec
stos
popa
je
and
rclb
test
xchg
cmp
arpl
jle
xor
cltd
ljmp
subl
push
fldt
add
rclb
out
mov
loopne
cld
xchg
dec
std
mov
or
outsb
xchg
mov
shr
mov
je
mov
out
js
add
mov
mov
out
insl
ret
repnz
and
jne
movsl
mov
mov
mov
xchg
insb
mov
mov
inc
arpl
in
and
cmp
jae
test
ds
bound
stc
xchg
and
outsb
adc
add
mov
fcompl
add
repz
sbb
fs
pop
pop
out
push
adc
jno
pushf
inc
add
sbb
sbb
pop
add
pop
sbb
jnp
mov
jbe
fisubl
std
xchg
add
xor
dec
jmp
mov
mov
or
or
jle
xor
scas
andb
in
fdiv
adc
pop
mov
dec
into
das
cmc
mov
mov
xchg
adc
mov
and
sbb
test
rclb
adcb
int3
aas
pusha
xchg
xchg
and
dec
std
cli
or
testb
pop
dec
fdivrl
cmp
xchg
or
mov
cwtl
cmp
shl
es
aaa
out
stc
scas
xorl
mov
rcl
dec
jmp
scas
push
cmp
push
cmp
popf
in
gs
aas
leave
pop
mov
push
or
sub
sbb
xor
inc
push
pextrw
cmp
bound
sub
hlt
mov
insl
repz
mov
mov
or
in
push
lret
xor
fldl
cmpsl
lods
mov
mov
xchg
fs
push
mov
pop
jo
pop
loopne
les
adc
shl
mov
test
push
sub
lods
int
lods
pop
sbb
sbb
pop
dec
sub
sbb
dec
pop
xor
test
sbb
std
sub
fdiv
mov
cli
insl
ja
push
insl
imul
push
xor
cld
adc
rcrl
push
lcall
cmc
test
inc
mov
mov
cmpsl
imul
mov
lret
sub
push
pop
lock
mov
ds
mov
hlt
test
jle
push
push
push
push
pushf
and
dec
pop
mov
bswap
xor
popa
clc
insb
mov
enter
dec
adc
jp
ret
mov
cmp
test
mov
push
sub
jnp
cmp
sbb
mov
les
dec
fiaddl
fs
xchg
sbb
int
mov
xchg
ds
pop
test
sub
cwtl
divl
les
inc
or
fsubs
xorb
sbb
addb
jle
xchg
dec
push
xor
cli
jg
push
add
or
popf
or
mov
mov
sub
push
xchg
lret
scas
cmp
sbb
incb
out
push
mov
cmpsb
adc
push
ds
and
sbb
popa
jns
sub
add
inc
stos
addr16
jle
adc
jl
jle
mov
mov
mov
pop
jb
ss
scas
add
or
outsl
mov
add
hlt
push
or
lcall
dec
push
bound
jl
mov
out
into
pop
in
outsb
adcl
jge
les
push
test
scas
mov
out
sbb
cwtl
xchg
push
lahf
adc
ret
pop
lret
xlat
lods
lret
xor
jns
sbbb
stos
rolb
les
lock
push
dec
rolb
jo
pop
push
int
inc
add
lcall
fidivrs
lods
cltd
jnp
sbb
mov
push
rclb
xorl
rorb
lock
mov
xor
mov
mov
sub
mov
pushf
dec
je
mov
push
jmp
sub
mov
or
popf
rorb
xor
and
fs
out
adcl
push
and
je
jp
mov
xchg
adc
pusha
rcl
shrb
ja
add
jnp
pushf
into
pop
cmc
sbbb
jg
mov
data16
fsubl
pop
in
mov
push
cwtl
mov
xchg
jno
fbstp
sub
add
enter
dec
data16
daa
sbb
cmpsb
lds
cmp
fdivrl
xchg
shll
inc
pop
pop
scas
subb
repnz
mov
lcall
inc
aad
push
jbe
xlat
and
scas
xchg
frstor
inc
add
sub
lds
or
xorl
pop
mov
fdiv
jp
cmp
insl
jb
rcll
sbb
out
add
loopne
shl
loop
mov
lea
mov
xchg
aad
lock
in
mov
lahf
pop
mov
pop
xchg
lock
mov
xor
mov
stos
xor
std
pusha
jg
jns
and
popf
jae
mov
push
inc
push
leave
cmp
jmp
xchg
push
jbe
cmpsl
mov
movsl
xor
add
pushf
std
push
test
mov
loope
jo
inc
cmp
mov
nop
cmc
insl
rol
jge
xlat
repnz
lods
movsl
outsb
sti
push
out
mov
or
xor
sbb
push
clc
mov
sub
dec
xchg
add
dec
mov
mov
and
mov
repz
xchg
outsl
loop
imul
sub
arpl
pusha
and
mov
sbb
lret
push
dec
popf
push
xchg
stos
sub
outsl
push
inc
mov
in
testl
and
cltd
in
xor
ljmp
mov
mov
or
cmp
add
ss
xor
dec
lock
les
fcmovbe
jp
arpl
sbb
into
xlat
cmp
loope
xor
daa
xor
or
xor
sti
rolb
imul
push
mov
push
scas
pop
jns
add
cmp
mov
lods
addr16
mov
testl
push
fiaddl
mov
add
fs
push
in
pusha
mov
pusha
outsb
push
mov
outsl
repz
xchg
pop
popf
sub
and
push
push
sub
cmp
add
sbb
xchg
xor
mov
cmpsl
or
mov
cld
push
aas
scas
fisubrs
insl
fisubrl
pushf
mov
arpl
enter
jge
test
fbstp
shll
mov
push
mov
xchg
fldcw
mov
stc
ljmp
sub
lea
lcall
push
sub
push
add
mov
in
negb
sub
jno
fisttps
aaa
inc
pop
fsts
mov
adc
adc
push
insl
fcoms
flds
rolb
faddp
lock
sahf
mov
inc
pushf
sub
lods
sub
in
mov
addr16
cmp
mov
jle
lret
mov
pop
pop
lods
xchg
push
push
das
sbb
movsb
mov
mov
lret
sbb
inc
out
jecxz
and
mov
sti
inc
or
dec
cmpsb
enter
xchg
jae
sbb
xchg
or
push
xor
jmp
jo
mov
imul
adc
xor
out
aad
and
push
ja
lahf
dec
rclb
shr
mov
dec
jp
mov
gs
mov
fistpll
cmp
xor
xor
shl
aas
mov
lret
cmpsb
sarb
mov
dec
out
lea
stc
enter
outsb
inc
clc
nop
jl
lds
das
outsb
cltd
cld
or
addr16
inc
push
xchg
lods
loopne
add
or
sahf
push
fistpl
jge
movsl
int3
ret
inc
mov
pop
idiv
push
adc
and
jge
sub
mov
xchg
test
lods
xchg
out
or
mov
inc
out
cmp
lahf
adc
jmp
jb
mov
insb
or
fdivrl
jne
sbb
sti
or
lods
int3
jns
ss
aam
rcr
fists
adc
sbb
movsb
ret
out
cld
xlat
fldt
mov
loope
mov
test
dec
adc
and
popf
icebp
xor
iret
cmpsl
push
das
lret
cmp
js
fcomi
mov
adc
sahf
test
lods
xchg
xor
inc
out
movsb
sub
xor
mov
loopne
dec
lock
in
ret
gs
dec
test
outsb
aam
rcrb
test
sub
cmpsl
mov
pop
pop
mov
cli
aas
sub
daa
jns
xchg
pop
xchg
pop
imul
dec
arpl
in
jb
mov
hlt
cmp
mov
enter
dec
bound
mov
xchg
jecxz
push
out
jno
mov
xor
insb
push
cmpsb
andb
movsl
xchg
shrb
jns
mov
xlat
faddl
loopne
dec
jge
push
sarl
push
cmc
dec
xchg
pop
xor
pop
popa
pop
pop
andb
lods
jne
pop
push
lods
data16
andl
les
data16
test
ret
cltd
mov
lahf
xchg
push
adc
loope
sbb
into
fcomps
jp
out
mov
or
in
call
jp
xor
mov
mov
fbld
xor
movsb
xchg
xor
imul
ret
mov
dec
push
fwait
sbb
xorl
cmp
stos
test
adc
mov
test
lods
shlb
inc
sub
push
ficompl
sar
jg
adc
xchg
lret
pop
sti
fdivrs
pushf
and
rorl
xchg
xor
push
repz
sbb
filds
dec
xchg
cs
sbb
sbb
std
mov
cs
sub
add
or
rcll
in
or
stos
cld
lock
in
sbb
xlat
fsubrs
into
mov
out
orb
ja
cmp
aam
add
push
mov
cmp
sub
and
in
lea
sbb
adc
imul
xchg
pop
xchg
rorl
xchg
aad
sbb
outsl
les
xchg
rcll
cmp
loop
popf
sbb
enter
xorb
out
ljmp
dec
js
arpl
mov
push
push
sbb
das
das
shr
jle
dec
cmp
mov
leavew
mov
mov
jae
mull
xchg
push
xchg
leave
push
push
jp
loop
clc
mov
sar
aad
pop
cmpsl
xchg
inc
stc
into
repz
sub
mov
ja
movd
out
mov
andl
push
or
std
enter
mov
push
dec
ret
cmp
jge
scas
addb
daa
lret
rolb
mov
cmp
mov
inc
int3
mov
xchg
pushf
cmp
mov
jp
pop
dec
lods
pusha
sub
inc
pop
fsubr
addb
xchg
fwait
xor
imul
xor
xlat
cmp
cmc
or
popa
push
test
das
jno
jle
scas
lock
adc
mov
mov
decb
pop
cwtl
and
adc
jmp
in
xor
loope
lret
inc
dec
call
cmpsb
fistpll
pushf
ss
iret
pop
fildl
cmp
xchg
inc
or
mov
ret
xchg
mov
or
push
insl
hlt
xchg
adc
icebp
cli
hlt
mov
mov
shlb
xor
add
mov
dec
in
jmp
test
les
sti
je
cltd
cmp
daa
stc
mov
cmpsl
shlb
add
sub
mov
mov
insl
nop
push
movsb
out
inc
cwtl
pop
shrl
push
jo
cli
sbb
enter
cmc
jae
add
adc
mov
pop
add
pop
test
scas
cmc
xor
cmc
add
mov
and
scas
push
push
in
dec
mov
shll
mov
pop
sbb
push
scas
test
sub
stc
pop
arpl
mov
pop
cmpsb
icebp
add
std
adc
in
xor
dec
cmp
sahf
daa
push
cli
dec
jae
jo
jle
lods
mov
in
ret
fwait
cmpsl
imul
enter
jnp
outsb
xchg
jnp
stc
pop
scas
pop
xchg
inc
sti
lods
sub
mov
rcl
jecxz
outsb
std
sub
js,pt
imul
mov
push
ret
hlt
adc
sbb
lds
push
push
pop
jo
fs
mov
out
popa
sbb
or
shrl
jno
jle
push
pop
ja
xchg
in
mov
arpl
mov
stos
call
ja
shr
sti
sbb
adc
push
fcoml
mov
cs
pop
jne
fwait
or
test
add
or
mov
sbb
dec
xchg
push
fucomp
adc
pusha
not
iret
les
scas
scas
in
cs
fwait
push
popf
pop
sbb
popa
inc
sub
dec
jb
adc
jp
jg
outsl
sbb
dec
pop
sub
data16
sarl
jmp
and
dec
sub
sbb
or
movsl
lds
dec
cltd
jbe
hlt
and
dec
cmp
inc
daa
mov
outsl
and
jge
lds
dec
jns
mov
and
pushf
inc
repnz
repz
fnsave
aad
pop
cmp
xor
fnstsw
sub
mov
and
cmp
add
mov
adc
or
popa
push
fdivrl
dec
inc
cmpsb
mov
pop
dec
xor
adcl
jp
insb
inc
sbb
lret
arpl
mov
pop
mov
jge
mov
daa
sbb
jecxz
pop
test
jge
dec
add
dec
lods
xchg
aad
cmc
lods
into
aas
xchg
mov
xchg
mov
adc
push
pop
bound
pop
cmpsb
mov
scas
adc
mov
and
insb
nop
add
push
cmc
sbb
sbb
dec
imul
add
cwtl
cmp
clc
repz
dec
jo
lcall
int
or
mov
pop
mov
rcl
dec
xchg
inc
repnz
test
jbe
lods
and
movsb
mov
dec
pop
xchg
repz
cwtl
push
lret
int3
pop
shl
fmull
mov
add
test
repnz
repz
pop
in
sbbb
int3
dec
push
cmp
xchg
xor
daa
mov
inc
rorl
push
dec
push
enter
nop
cli
les
cmp
sub
aam
or
in
sbb
adc
les
adc
int
sbb
shll
adc
call
inc
scas
cmp
jmp
sub
mov
gs
out
nop
adcl
dec
push
shll
mov
push
sub
jp
cltd
cmp
mov
xchg
push
fnstsw
push
jno
push
push
imul
je
pop
inc
repz
xchg
lcall
lret
shlb
sarl
fists
movsl
inc
cmp
out
jae
cltd
or
sub
adc
adc
ficoms
fnstenv
imul
imul
push
stc
rcll
cwtl
pop
addl
sbb
movsl
xchg
ret
mov
gs
xlat
add
mov
inc
daa
mov
inc
inc
cmp
jmp
add
pop
mov
imul
out
mov
leave
adc
shll
out
in
jg
push
aam
mov
test
scas
add
mov
or
ficoml
test
scas
stos
nop
jmp
mov
cmp
jge
dec
sub
mov
roll
sbb
mov
mov
jno
stc
into
sbb
push
sub
fs
adc
mov
lret
add
scas
je
scas
dec
pop
or
out
js
sbbb
outsb
gs
out
add
pushf
inc
stos
cmp
push
lret
dec
xchg
nop
xchg
int3
jns
test
push
mov
inc
cmpl
dec
mov
in
push
xor
loope
jb
mov
enter
icebp
es
mov
pushf
push
nop
sbb
fcoml
and
adc
add
test
lret
jo
test
imul
pop
add
or
loopne
arpl
or
outsb
xor
and
pop
inc
sbb
push
data16
cltd
jb
in
outsb
adc
or
or
inc
mov
mov
xchg
clc
dec
pop
and
mov
cltd
outsb
mov
jae
stos
pop
dec
add
cs
mov
jge
pusha
xchg
push
xchg
jae
pop
jae
mov
orl
jns
xor
je
insl
ja
jmp
jb
pop
cmp
add
fistpll
mov
xchg
sub
cmc
xor
movsl
dec
inc
sbb
roll
cmpsb
out
in
jecxz
mov
inc
xor
es
fs
or
out
out
cmp
mov
pop
xchg
mov
mov
pushl
jge
cmp
mov
add
repz
adc
sub
push
add
insl
pushf
sub
xchg
sti
shr
fimuls
rol
jo
xor
inc
repnz
jo
outsl
dec
and
cmp
or
sbb
push
into
call
fistps
rol
xchg
lret
decb
jns
sbb
movsl
add
mov
in
push
mov
movsb
xchg
mov
cmp
dec
xchg
xor
push
inc
jae
adc
xchg
mov
adc
xor
arpl
mov
sub
ja
mov
jmp
scas
cmpsl
lret
iret
clc
bswap
stos
hlt
scas
cwtl
inc
cmpsl
scas
xor
jns
push
cmp
test
dec
jnp
xor
push
je
test
inc
pop
cs
xchg
sub
jae
popa
filds
fidivrs
outsb
mov
xlat
stos
jne
or
sbb
xchg
loop
sub
sbb
in
gs
xchg
not
cmpsb
cmp
outsb
cmc
mov
push
xchg
jg
pop
clc
sarb
enter
xchg
icebp
fbld
outsl
add
and
imul
and
add
lea
and
int
aaa
les
inc
xor
or
push
inc
mov
les
mov
inc
daa
js
leave
push
pop
es
js
dec
and
sbb
ss
repz
xchg
pushl
and
cmp
inc
cltd
daa
mov
loopne
inc
add
xchg
arpl
dec
fwait
sahf
daa
cli
mov
jle
test
scas
mov
js
test
inc
cltd
sub
pop
push
or
popa
leave
cmp
sub
inc
cltd
push
mov
fsubs
xchg
pop
adc
mov
call
mov
sbb
push
cmpsl
pop
jns
mov
rcrb
lahf
pop
loop
jno
jo
xor
aaa
pop
push
ljmp
push
or
shl
ret
aad
adc
dec
pushf
dec
push
mul
pop
ss
fiaddl
mov
int
xchg
pop
pop
aaa
jecxz
test
shll
test
rol
xchg
sbb
cmpsb
lods
dec
xchg
jo
cltd
leave
mov
cmp
mov
sahf
pop
lea
loopne
bound
mov
mov
add
fisubrs
int
mov
mov
aas
pop
or
popf
push
stc
test
movsl
jns
mov
dec
lods
xor
xor
mov
sub
jae
adc
mov
or
jbe
push
lds
xor
mov
dec
out
push
movsb
jg
xchg
mov
adc
out
jo
aas
ja
lcall
inc
sbb
nop
rep
push
loop
data16
mov
ja
aaa
pop
es
jae
dec
repnz
lret
inc
xor
jns
lret
mov
push
and
dec
jne
push
xor
sbb
out
loop
inc
pop
scas
iret
cmpsl
insb
sbbb
in
pop
loope
jno
sbb
test
loope
repz
je
divl
or
rorb
sub
mov
or
push
pop
aad
inc
push
daa
sbb
or
dec
jno
icebp
push
pop
pop
stos
cmp
clc
sarb
test
push
xor
adc
and
adc
pop
stos
cmp
ljmp
pushf
inc
es
aas
js
or
jl
adc
mov
repnz
xor
xchg
cmp
dec
icebp
xchg
fs
push
dec
xchg
pusha
jne
add
ror
mov
ret
xchg
pop
iret
inc
mov
mov
cmp
lea
mov
aam
pusha
or
push
outsb
add
mov
and
push
sbb
xor
cltd
inc
test
mov
pushf
addb
addb
arpl
mov
adc
mov
int
inc
mov
mov
dec
inc
lcall
dec
gs
into
fs
js
aam
nop
xor
dec
iret
xchg
dec
stos
fldenv
pop
gs
mov
adc
mov
lahf
hlt
cmp
xchg
dec
jo
sbb
cs
cmp
xchg
pusha
cld
jne
push
scas
add
sub
dec
xchg
adc
roll
movsl
push
fildll
mov
or
pop
xor
fs
add
push
into
adc
mov
arpl
adc
ds
jo
cmp
mov
xor
mov
insl
or
dec
outsb
icebp
adc
jmp
jo
push
sub
fildll
cltd
inc
mov
in
and
adc
lahf
pop
rorl
sti
cmp
ja
std
int3
ficomps
les
push
jmp
inc
jmp
das
cmpsl
xchg
pop
enter
jne
fwait
decb
cltd
xchg
dec
leave
fwait
add
and
bound
fdivrp
or
mov
push
add
sub
dec
fnstsw
cmp
push
adc
cld
sbb
xor
in
std
lods
stos
jb
jae
inc
xor
test
ja
ljmp
shrl
scas
add
stc
push
fwait
outsb
pop
out
dec
xchg
ljmp
icebp
add
popf
add
add
decb
sbb
icebp
lds
or
lret
lea
lods
dec
mov
sub
xor
or
repnz
inc
pop
or
lods
ljmp
push
sbb
cs
je
into
mov
fsubrs
scas
and
jb
nop
and
inc
mov
pop
or
bound
in
scas
mov
ja
cli
test
jns
xchg
cltd
push
push
mov
xor
loop
and
loope
popa
jge
fstpt
aaa
lahf
push
jae
mov
divl
pop
sub
xchg
in
mov
and
inc
fisttpll
mov
or
mov
jbe
sub
jns
xchg
mov
lods
jmp
lmsw
add
sub
ret
jl
push
or
sub
mov
stos
add
adc
xchg
mov
js
call
es
cmp
jns
cmp
notl
cld
iret
mov
sbb
pop
pop
xchg
xchg
in
shrb
js
and
cs
xchg
outsl
lods
and
insl
fwait
sbbb
mov
push
lods
pop
fwait
pushf
jmp
push
xchg
insb
adc
adc
rcll
pop
mov
sub
and
loop
clc
cld
aas
scas
dec
test
or
pop
mov
pop
call
push
into
sub
xchg
xor
movb
lods
sub
mov
push
push
test
fcmovnb
dec
pop
xlat
sbb
lcall
imul
mov
mov
loope
pop
je
pop
lcall
or
jmp
jo
xor
sbb
fs
mov
jecxz
sbb
push
mov
test
mov
pop
jmp
mov
add
lods
jns
inc
adc
inc
mov
outsl
pop
mov
and
jge
in
ret
sub
movsb
adc
jg
inc
adc
test
dec
arpl
iret
les
mulb
scas
jmp
or
popf
fstps
lret
cmc
push
jnp
push
mov
fsts
inc
lahf
mov
xchg
scas
int3
xor
cmp
iret
pop
sbbb
adc
outsl
mov
addr16
out
test
pop
xor
push
das
xor
xchg
jl
pushf
xchg
xchg
xchg
sbb
xchg
xchg
push
adc
xchg
dec
cltd
aaa
outsl
rcr
jp
push
sub
sub
imul
pop
gs
repnz
mov
mov
or
loopne
push
int
bound
icebp
stc
dec
enter
add
bound
inc
das
mov
dec
negl
push
add
movsbl
dec
inc
loopne
out
xor
xchg
adc
xchg
jge
lret
mov
cmp
imul
xor
je
and
mov
pop
sub
jle
shll
mov
pop
xlat
ss
cmp
or
jecxz
gs
mov
xor
inc
xchg
cmp
and
jo
out
scas
stc
neg
lock
mov
fcompl
jmp
imul
or
popa
jge
xchg
adc
imul
adc
cld
add
add
lret
inc
daa
aam
dec
pop
fidivrs
repnz
xchg
sbb
out
dec
arpl
inc
add
lcall
push
adc
call
movsb
push
cwtl
rclb
push
imull
and
sub
xor
sbb
out
cwtl
out
dec
cmp
cmp
xchg
or
movsl
ret
out
out
mov
mov
cbtw
jmp
ds
add
dec
ljmp
lea
xchg
pop
pop
pop
mov
inc
rolb
cmpb
add
sub
sbb
es
cmpsl
sbbl
mov
mov
add
sti
xchg
call
stc
jg
dec
bound
cltd
push
push
sub
or
jno
push
cld
enter
mov
test
inc
push
and
cmp
out
and
and
mov
xor
and
sbb
xor
inc
call
sbb
add
mov
cwtl
out
or
sub
cmp
cmp
xlat
xor
enter
or
mov
dec
shll
test
cwtl
dec
fwait
cmp
inc
xchg
pop
cmpsb
pop
gs
jl
int3
ds
pop
rcl
dec
mov
lods
fsts
lea
sbb
pop
lock
clc
or
lock
loope
adc
ret
sbb
mov
pop
push
pushf
gs
cmp
adc
int
shlb
aad
mov
add
sbb
mov
mov
dec
sbb
fcompl
mov
out
addb
fmuls
sbb
sub
mov
add
and
pusha
sub
lods
push
xor
jp
or
cmovno
pop
lret
cltd
lcall
push
das
cmc
pop
outsb
jo
stc
mov
sub
cli
and
fdivrp
imul
in
vcvttsd2si
lods
xchg
fs
xchg
xor
cs
push
std
lret
sbb
xor
and
dec
cmpsb
test
iret
outsl
je
aam
data16
out
dec
fsubrp
leave
mov
addb
xchg
data16
fidivrl
mov
and
jmp
add
push
lods
push
lds
dec
mov
hlt
jmp
inc
mov
mov
and
leave
cli
inc
clc
inc
test
mov
outsl
je
in
scas
popa
dec
outsb
xor
cmp
xor
xchg
or
enter
push
cmp
cmp
or
ret
pop
in
jmp
mov
xchg
in
ja
push
das
je
mov
xchg
fwait
or
cmp
adc
cs
out
xor
inc
fxch
mov
mov
insb
inc
test
lahf
ss
or
out
mov
movsl
aad
cmp
popl
adc
jnp
inc
imul
inc
inc
xor
mov
shll
xor
lret
mulb
xor
ret
cmp
jnp
jae
mov
pushl
dec
xor
je
sbb
xor
mov
mov
fistps
das
xchg
and
sbb
xchg
jl
pop
add
out
jbe
jp
dec
or
pmaxub
pusha
push
pop
push
inc
add
dec
stos
dec
jle
jae
cwtl
pop
pop
mov
mov
jmp
pop
xor
lock
or
inc
das
and
xchg
repnz
pop
adc
xor
sbb
or
out
dec
bound
out
cld
cmp
sub
inc
test
das
pop
mov
inc
cmpsl
cmpsl
gs
aam
push
xchg
cmpl
lock
pushf
mov
xor
stos
lret
xchg
insl
inc
jg
test
nop
mov
jecxz
push
sbb
sbb
call
cmp
and
movsl
outsb
and
push
in
outsl
loopne
push
lods
std
cmpsb
jmp
pop
and
push
ljmp
adc
das
nop
orl
sbb
addl
mov
lea
leave
loop
mov
xchg
adc
push
inc
adc
sti
xor
out
xchg
hlt
dec
xchg
sbb
inc
add
inc
push
inc
inc
push
xor
in
mov
jp
arpl
fs
fimuls
mov
sarb
jne
test
insl
call
into
mov
imul
jmp
aad
mov
pop
jmp
xchg
adcb
jbe
popf
lods
sub
idivl
push
xchg
lret
inc
add
pop
test
jge
fdivl
xor
js
mov
outsl
dec
les
xchg
lcall
in
jo
or
adcb
inc
push
test
mov
and
subl
inc
push
pop
cmc
sub
sub
xchg
jp
shrl
ret
and
pop
push
shll
dec
jl
mov
cmp
dec
ss
dec
mov
fisubrs
cmpb
outsb
jbe
sbb
mov
aaa
xchg
dec
jae
pushl
pop
sbb
das
std
mov
mov
pop
push
add
lock
imul
les
xor
dec
jmp
push
and
lea
mov
jns
dec
std
ficoms
lea
dec
xor
out
xor
ds
mov
into
fistl
aas
pop
dec
sahf
call
pop
cs
lahf
or
packsswb
mov
push
shlb
es
xchg
pop
aas
mov
or
aaa
and
cmp
mov
mov
shrl
cwtl
test
pop
ret
jo
sub
pop
into
ljmp
fistl
xchg
mov
pushf
fldcw
fistps
mov
icebp
pop
lds
jmp
push
mov
cld
add
data16
pop
incb
inc
adc
loop
xor
sbb
out
xchg
adc
jb
in
and
repnz
fildl
popf
xchg
mov
popf
stos
les
mov
lahf
lea
mov
addb
fwait
xchg
js
ret
xor
popa
and
out
scas
push
xor
ror
loope
dec
lock
mov
xchg
cmp
inc
loope
into
pop
movsb
shll
cs
dec
xchg
test
repz
cli
xchg
pop
iret
or
push
sbb
enter
pop
mov
jl
mov
mov
sub
sbb
push
xor
fwait
cld
popa
pushf
test
fwait
insl
pop
stc
addr16
stos
cli
and
out
stos
aam
orb
sahf
int
out
pop
dec
adc
pushf
mov
fildl
jns
mov
lods
fsubr
and
dec
adc
pop
mov
pusha
lahf
xor
lock
ss
gs
pop
xchg
std
dec
pop
insl
xor
cmc
xor
test
push
pop
fldl
ds
sbb
data16
aad
out
in
add
adc
lock
or
push
add
loope
cmpsl
aaa
popf
lret
ljmp
mov
push
ret
repnz
fcompl
sarl
test
shlb
test
mov
mov
shll
lcall
xchg
fs
or
and
inc
jecxz
push
les
pop
mov
xchg
movsb
push
jne
mov
cmpxchg
jb
test
push
jl
mov
xor
push
sub
sub
sub
fisubrs
inc
lahf
cmp
push
sbb
fnsave
cltd
pop
sbb
test
xor
mov
mov
in
push
fptan
fistps
and
cld
push
or
cltd
and
sar
fcoml
sub
mov
pop
pop
inc
pusha
push
into
ds
pop
sbb
stos
repz
dec
scas
mov
push
add
sbb
adc
add
test
mov
out
jp
test
adc
pushf
cwtl
cmp
inc
xchg
in
inc
decl
cmp
push
divl
mov
mov
mov
jae
sub
xchg
ljmp
in
pop
pop
mov
adc
or
pop
notl
jne
lret
out
adcw
es
lods
mov
push
jbe
js
daa
daa
loopne
dec
mov
mov
adc
dec
int
pop
dec
cmpb
imul
or
and
dec
jae
mov
sub
xchg
nop
jo
rcll
pop
mov
mov
fs
enter
dec
cld
push
rolb
cmp
iret
in
mov
aaa
mov
mull
push
push
xor
adc
repz
xlat
sbb
scas
lods
mov
gs
add
mov
jnp
nop
sub
dec
push
ljmp
and
fwait
pop
jb
xchg
rcr
or
push
jmp
pop
jno
or
inc
and
mov
imul
xlat
jne
mov
std
mov
out
leave
ds
mov
decl
into
pushf
jecxz
adc
stc
mov
sub
pop
mov
mov
pop
fldt
aaa
push
adc
fdivr
add
test
in
cltd
std
sub
xor
popf
mov
ror
and
data16
enter
loopne
shl
ja
data16
mov
add
mov
loope
or
mov
jl
mov
and
jbe
call
sub
test
shrl
dec
loopne
mov
stos
pop
adc
jno
jmp
push
in
pop
fnstenv
adc
std
mov
sbb
ss
jle
dec
les
insl
jecxz
xor
in
push
adc
lcall
les
aas
scas
push
out
out
icebp
stc
jno
cmp
xor
push
test
sub
std
mov
popa
pop
xchg
sub
loop
push
lods
mov
movsb
push
push
loope
pop
loop
mov
repnz
mov
mov
call
leave
jne
sbb
xchg
movsl
outsb
ja
loop
add
mov
mov
fucomip
sbb
loopne
xor
int
jns
xor
sbb
bound
mov
or
aam
out
data16
mov
dec
mov
rclb
and
addb
popf
dec
push
ret
mov
and
jl
add
in
inc
xchg
in
jb
xor
jae
push
and
jecxz
mov
inc
and
les
xchg
pop
imul
cmp
jo
stos
push
jecxz
push
mov
pop
push
cmp
scas
jecxz
jmp
lret
cmp
push
pmaddwd
add
xchg
stos
test
push
adc
in
notl
aad
je
std
pusha
scas
jp
or
cld
push
add
ss
mov
test
push
mov
mov
jno
lods
dec
jl
stc
outsb
aas
arpl
mov
outsb
test
icebp
jmp
xchg
in
ja
jecxz
xor
pop
sbb
mov
aaa
pop
dec
mov
jae
fcoms
data16
mov
int3
in
mov
sbbl
shll
enter
out
scas
cmpsl
andl
cmp
addr16
jge
popa
addr16
sub
dec
daa
adc
or
add
sbb
cs
lea
xchg
aaa
int
adc
ds
jge
jo
icebp
out
mov
adc
nop
aas
adc
iret
xor
add
cwtl
iret
int
sbb
scas
mov
movsl
sbbl
hlt
call
lahf
mov
push
lcall
mov
das
scas
dec
push
push
insb
mov
add
adc
sarl
xchg
dec
ja
subl
jne
or
sbb
mov
iret
inc
in
push
push
xchg
out
jbe
xlat
and
mov
jmp
inc
adc
ljmp
test
scas
cmp
xor
fxch
in
jbe
adc
imul
mov
adc
mov
lret
les
fnstsw
and
dec
int3
testb
jge
jecxz
cltd
mov
and
mov
xor
dec
lahf
or
lock
pop
dec
or
pop
adc
add
jae
push
mov
arpl
mov
fcmovnu
inc
pop
and
ror
cmc
rcrl
leave
mov
dec
inc
test
push
sti
in
lds
jo
dec
aad
je
dec
test
test
mov
int
jmp
xchg
cmp
push
cmp
js
mov
push
jge
xor
mov
mov
push
pop
out
ja
sub
scas
push
fwait
lds
inc
insl
es
pushf
out
add
push
cld
shrb
jecxz
andb
push
fwait
and
or
xchg
repnz
ret
cmp
cld
sub
inc
loop
cli
popf
outsl
xor
scas
and
mov
or
ret
sub
jp
ljmp
jle
test
hlt
out
outsb
xchg
or
mov
lock
jne
mov
mov
fs
in
xchg
cmpl
lds
insb
push
cmp
js
fmull
int3
scas
inc
enter
jb
cli
jbe
push
outsb
hlt
in
xor
loope
aas
mov
sbb
in
xorb
shr
mov
rcrl
ja
cmp
ss
gs
cli
fcos
sub
aaa
cmp
scas
mov
cmp
lods
or
cmp
int3
data16
stos
lods
test
sub
xor
cs
sub
inc
out
ljmp
pusha
push
pop
int3
ret
leave
rorb
scas
push
push
negb
jns,pn
sub
pop
jb
data16
mov
dec
or
loope
aad
stos
lock
jno
gs
in
or
xchg
movsb
jno
pop
sbb
cwtl
aaa
lods
and
cld
dec
out
sarb
fsub
xchg
jge
jp
sti
lret
mov
in
xchg
mov
sahf
jge
jmp
negl
sub
push
scas
test
cmpsb
xchg
es
leave
cmpsb
xor
add
xchg
je
addr16
push
sbb
ja
hlt
cs
pop
dec
and
dec
xor
jl
test
shlb
xchg
addr16
loopne
jp
push
ljmp
int3
cltd
sub
push
aad
and
dec
mov
xchg
pusha
insb
mov
in
jne
pop
mov
push
xlat
mov
fsubrl
push
loopne
mov
popa
or
fimull
or
shlb
loope
push
dec
mov
rcll
inc
and
rclb
mov
shl
int3
outsb
jb
ret
das
pop
lds
mov
cld
sub
leave
scas
and
and
movsb
psubw
aam
jo
in
arpl
inc
popa
adc
lcall
out
hlt
mov
push
out
xchg
push
scas
sbb
mov
imul
add
dec
or
leave
inc
cld
sbb
sub
xor
shll
cmp
cmp
in
add
sbb
testb
test
das
mov
fwait
gs
sti
jbe
add
gs
data16
test
xchg
pop
ficompl
adc
jle
cmpsb
cmp
fsubp
gs
adc
loop
push
shrl
dec
inc
stc
test
or
adc
arpl
mov
std
loop
push
bound
or
in
sbb
repz
sub
add
iret
lret
adc
ret
cmp
sbb
mov
jbe
mov
adc
mov
sub
and
mov
sub
movsl
sbb
cld
mull
scas
sbb
stos
jle
je
in
mul
test
arpl
xchg
cmp
pushf
sti
cmpsb
lret
mov
ds
mov
scas
or
outsl
inc
mov
and
push
push
insl
fsubr
lcall
adc
lret
cmp
lcall
sbb
ret
lock
int3
sub
mov
pop
movsl
pop
cmp
shrl
cmpsb
imul
pop
push
es
mov
repz
add
cwtl
cmp
jae
mov
jb
test
xor
and
fwait
and
out
mov
iret
pop
gs
push
and
stc
ljmp
xor
aas
jne
adc
int
lret
mov
leave
fistps
mov
sub
sub
stos
mov
xchg
cld
lock
and
mov
xchg
sub
shr
outsl
push
inc
xchg
out
jmp
add
popf
aas
sub
ret
insl
cmp
outsb
pop
jecxz
aaa
xchg
pop
mov
scas
mov
repnz
xchg
and
and
jmp
pusha
and
fstpt
mov
andb
sub
cmpsl
mov
stos
mov
pop
lret
jo
push
nop
pop
movsl
mov
mov
mov
and
cmp
push
sbb
fdivrs
pop
cmp
shl
mov
mov
mov
mov
into
dec
cli
mov
push
push
and
and
repz
mov
xor
negl
hlt
testl
pop
mov
and
cli
leave
cmp
sbb
mov
mov
repnz
stc
hlt
mov
dec
jp
mov
xchg
fwait
lea
lahf
roll
inc
push
imull
std
lcall
pop
sub
loop
repz
je
dec
lea
cs
xchg
xchg
aaa
cmpsl
inc
mul
mov
dec
loopne
xor
adc
xor
xor
push
jp
mov
movsb
test
sbb
inc
push
cmpsl
add
xchg
sub
sti
jmp
fisubl
popa
cmp
sarb
mov
cmp
repz
sub
xlat
pop
icebp
arpl
jmp
adc
iret
or
test
add
test
stos
mov
cmp
cmp
arpl
dec
push
lds
lea
and
xchg
int3
in
jl
jle
in
add
pop
pop
xor
push
sbb
dec
idivb
mov
lahf
andb
lret
aad
xor
mov
adc
les
int
jns
cmc
adc
pop
popl
mov
mov
xor
daa
scas
lock
pushf
cmp
inc
test
push
leave
shll
jp
jo
aaa
rcrb
add
call
and
push
mov
pop
fisubl
adc
cmp
mov
test
negl
pop
lock
dec
xchg
pop
sar
into
aad
or
std
frstor
fiadds
mov
arpl
cwtl
inc
or
andb
mov
les
add
imul
xor
mov
add
jae
add
xchg
jmp
and
cmp
mul
sub
lock
lds
and
mov
fsub
mov
pushw
scas
cmc
cmp
mov
gs
in
add
xchg
das
insb
xor
jb
mov
ss
sub
leave
sbb
jge
inc
fmul
mov
push
pop
test
mov
insl
pop
icebp
js
push
mov
cmpsl
ljmp
sub
sub
hlt
fisubrl
icebp
xchg
push
push
xor
addl
mov
ret
lcall
pop
mov
movsl
ret
incb
dec
push
mov
jge
add
push
inc
pusha
movsl
xchg
cmpb
mov
ss
add
cmp
cld
jge
test
pop
add
pop
mov
subl
std
adc
out
push
or
push
shll
sar
dec
jo
add
push
push
mov
mov
xor
mov
sbb
or
fistpll
imul
mov
ret
xchg
fnstcw
mov
adc
divl
or
mov
leave
mov
scas
pusha
cmp
jg
jmp
cmp
rorl
adc
jns
cltd
xor
jle
and
add
lods
jno
add
or
adc
sbb
mov
mov
mov
xchg
sbb
jmp
cmp
repnz
xchg
leave
adc
insb
aam
aaa
imul
insl
dec
adcl
and
xchg
lods
mov
cltd
rcr
mov
insb
inc
clc
pushf
pop
sub
ficomps
fmulp
in
or
xor
xchg
sarb
loopne
push
test
xor
sub
adc
push
mov
das
lea
lea
outsb
out
daa
cmpsb
fwait
lods
cmp
jp
arpl
stc
adcl
fldt
mov
push
imul
repnz
dec
faddl
sarl
sti
push
xor
pop
jmp
daa
inc
or
subb
leave
into
adc
call
sbb
cltd
push
and
fs
fstps
push
cmpsl
or
pop
and
sbb
andl
adc
inc
push
lcall
or
out
mov
jns
cmpl
loopne
test
xchg
pop
jle
bound
cmp
call
mov
fidivrl
lds
aaa
cmpsb
mov
shr
push
mov
sbb
pop
mov
fs
cli
out
orb
iret
out
mov
push
sub
sub
inc
mov
pop
and
pop
rsqrtps
dec
dec
jo
test
sbb
pop
pushf
push
adc
mov
or
mov
ret
xchg
add
imul
repnz
daa
leave
daa
or
ja
fsubrl
call
lret
mov
rcll
mov
sbb
test
cli
es
nop
pushf
mov
iret
jnp
or
mov
in
inc
inc
les
daa
xchg
aam
sbb
movsb
sub
scas
fiadds
jnp
bound
ror
stos
ds
sbb
cwtl
and
mov
int
cmp
subl
aam
sarl
pop
push
jae
pushf
inc
test
stos
test
adc
fs
decl
imul
js
test
or
stos
mov
jmp
lret
mov
xchg
js
aam
test
jge
dec
leave
mov
rorb
pop
lret
inc
cmp
fimuls
fnstcw
sub
cmc
test
rcll
movsl
pusha
inc
rcrl
ljmp
sub
pushf
xor
out
sahf
add
outsl
out
adc
pop
mov
outsb
ficoml
xchg
scas
call
jle
pop
scas
outsb
popl
subl
out
adc
add
andl
dec
and
xor
jno
xor
mov
movsb
xorl
test
xlat
movsb
dec
add
inc
dec
jecxz
sbb
xor
shlb
aad
repz
repnz
scas
fcmovnu
mov
xor
sub
repnz
push
jbe
inc
leave
dec
in
cmpl
push
and
negb
xor
iret
cli
jmp
sub
and
test
lods
or
test
mov
clc
out
push
shl
test
sub
add
repz
mov
inc
sub
leave
and
cmpsl
insl
addb
cld
push
xchg
add
push
es
sub
imul
imul
es
mov
arpl
add
adc
cwtl
adc
push
pop
sbb
add
shl
stc
es
mov
iret
pop
icebp
jle
loopne
and
orl
jge
pusha
add
add
repnz
mov
and
inc
pop
or
dec
add
dec
push
stos
push
mov
sbb
adc
shl
out
pop
bound
cmc
lds
mov
lcall
jo
outsb
insb
pop
sub
push
das
sbb
aam
leave
jnp
inc
cld
mov
inc
pop
gs
out
push
stos
lds
out
or
push
sbb
push
push
iret
shll
scas
and
push
shl
lahf
pop
les
inc
jl
adc
popa
in
sub
stc
lret
sub
inc
pop
mov
stos
mov
xchg
jno
push
popf
mov
ja
sarl
or
fisubs
sbb
cmp
push
jmp
movsb
loop
xchg
fdivrs
cmc
out
mov
mov
jns
jnp
vunpcklpd
fsub
test
movsb
cld
push
sbb
dec
and
sub
jnp
mov
dec
int3
shrb
into
jmp
sbb
lock
mov
out
cmc
cmp
sub
dec
mov
incl
push
fimull
cmpsb
jae
fldl
outsl
mov
mov
dec
arpl
addr16
inc
cmp
int
in
inc
mov
adc
sbb
fdivs
shr
negb
pop
sbb
xchg
jmp
cmp
xor
cli
jns
sub
sbbb
adc
mov
leave
enter
dec
mov
dec
addr16
mov
adc
negl
inc
sbb
add
or
jns
fwait
lcall
scas
cs
shrl
cmc
push
xchg
sti
inc
rcr
xchg
xor
add
xor
les
lret
inc
xor
push
push
es
jecxz
insb
pushf
push
inc
lock
loope
in
jp
and
sbb
js
js
adc
jo
xor
popa
sub
fidivl
lahf
enter
or
xchg
icebp
call
leave
mov
cld
fwait
enter
popf
mov
inc
sub
into
ds
or
pop
test
or
cmp
xchg
outsb
sti
mov
cmpsl
push
sbb
adc
push
mov
out
dec
xchg
dec
pusha
scas
int3
mov
mov
jp
outsb
pop
cmpl
clc
adc
jb
jmp
gs
aam
test
lea
push
and
aad
cmp
push
pop
mov
out
and
pop
test
pushf
sbb
psubusb
cmpsl
pop
dec
dec
sub
lret
mov
or
shl
jle
loope
mov
or
arpl
push
es
fldcw
and
cmpsl
dec
jmp
or
out
hlt
repnz
repnz
negb
pop
loop
push
mov
bound
shl
inc
sub
sub
xchg
bound
mov
std
mov
jecxz
adc
call
mov
loope
ljmp
adc
imul
loopne
jae
inc
aaa
push
shld
jns
cwtl
adc
jp
aas
pop
or
mov
jg
sbb
inc
jle
and
lea
adc
lret
dec
notb
cmp
cmpsb
jp
or
xchg
loopne
les
push
bound
pushf
add
sub
test
or
cmp
mov
imul
das
xchg
jge
pop
jp
gs
in
outsl
sbb
vphaddubq
aam
sub
lret
imul
and
ret
sbb
xor
and
mov
jge
test
insb
xchg
lods
ja
cwtl
sbb
and
jb
in
adc
aaa
xchg
mov
add
iret
or
mov
dec
leave
out
dec
sahf
sub
push
and
mov
xchg
add
jno
add
int
inc
mov
jmp
mov
xchg
aad
push
mov
out
xorl
cmp
jne
and
pop
imul
mov
lds
add
dec
stc
mov
icebp
push
sub
jo
jp
call
mov
pop
xchg
xor
cltd
loopne
std
in
cmpsl
xchg
sub
inc
dec
test
cmpsl
lret
mov
xchg
cmp
jno
fistpl
imul
icebp
imul
hlt
sbb
mov
sti
mov
inc
int
pop
lret
imul
xchg
dec
loope
mov
xchg
jb
pop
pushf
imul
xor
ljmp
pop
jle
leave
test
inc
jl
or
cmpsl
adc
sub
xlat
cltd
mov
cli
xor
cmpsb
cmp
jmp
sbbl
andl
rcll
hlt
inc
cltd
sbbb
addr16
mov
or
sbb
inc
scas
aas
inc
mov
inc
mov
push
flds
ss
in
xor
mov
das
popa
jp
je
aad
insb
sbb
cmc
adc
and
jl
aaa
sbb
xchg
lret
lret
push
out
lret
mov
fbstp
out
aad
pop
testl
mov
xor
fs
and
mov
in
add
loope
mov
insb
xchg
sarl
lretw
shll
fwait
out
cmp
jae
popf
sbb
xlat
add
inc
js
ljmp
adc
dec
or
fmull
push
add
lock
pop
ja
hlt
out
test
push
movl
repnz
xor
inc
jp
ja
test
mov
or
mov
test
inc
fildl
mov
mov
stc
mov
adc
stos
xchg
mov
adcb
lea
mov
sub
pop
mov
test
insl
inc
sub
inc
add
mov
mov
add
dec
out
or
insl
loope
jae
xor
pop
mov
fsubr
paddusb
int3
jecxz
add
or
mov
inc
push
imul
add
out
fsubl
push
xchg
loope
push
out
sbb
mov
out
std
jmp
fidivs
sub
jg
add
xor
out
jecxz
cmpsl
xchg
jecxz
xchg
inc
jl
pop
dec
lret
iret
cmp
loopne
enter
pushl
push
push
push
adc
and
or
mov
mov
and
sbb
jmp
cwtl
sub
xchg
jp
inc
pusha
add
loopne
test
or
movsl
mov
sub
dec
cltd
loop
fwait
mov
mov
nop
jne
xchg
rcrb
ja
lock
inc
ret
subb
pusha
cld
fiaddl
xor
sbb
jmp
add
enter
les
jo
pop
sbb
mov
dec
dec
add
push
sub
clc
xchg
sbb
xchg
sub
fcmovu
test
inc
or
sub
cmp
lods
inc
jle
cmp
mov
jns
sahf
mov
xor
push
rcll
mov
sub
mov
pop
dec
xor
sbb
in
scas
out
lret
inc
mov
inc
dec
fwait
mov
pop
and
fidivrs
js
out
icebp
jp
inc
or
ret
pop
or
imulb
dec
fnstenv
sbb
xchg
in
pop
sbb
mov
jge
data16
js
or
fisttpl
clc
mov
ja
mov
mov
andb
lret
jecxz
add
mov
xor
sub
loopne
sub
mov
faddl
fisubs
ljmp
daa
jb
cmpsb
scas
test
lods
inc
mov
pop
pop
jo
mov
push
out
sub
add
cmp
mov
push
icebp
mov
or
mov
enter
xchg
cld
ja
mov
std
sti
xchg
adc
mov
inc
in
inc
stos
and
xor
pop
cmpsb
in
xor
movsl
testl
jg
fisubs
in
rorl
and
xor
sahf
adc
jge
and
push
out
mov
movsb
popf
or
or
jle
mov
push
leave
sbb
cmc
mov
jg
pusha
and
or
jmp
mov
out
mov
sar
repz
ret
sub
out
mov
xor
push
mov
xlat
jno
pusha
push
dec
add
pop
nop
push
cmp
mov
lahf
jl
inc
inc
inc
or
fsub
adc
mov
aas
adc
sub
cmp
mov
sbb
aad
xor
mov
cmpsb
jnp
sub
fadd
stos
out
and
addl
mov
mov
inc
mov
clc
aas
xor
push
stc
sbb
dec
jecxz
or
add
jb
int
negb
out
decl
bound
dec
cmpsb
mov
insb
or
mov
std
in
jmp
jbe
aad
das
sub
cld
lret
dec
inc
adc
je
daa
shlb
cs
clc
or
shr
mov
jmp
mov
pop
fs
daa
call
mov
iret
adc
and
rclb
cmpsb
cwtl
jbe
out
and
or
jnp
mov
adc
inc
dec
pusha
hlt
sub
imul
shlb
pop
adc
push
jle
push
aad
stos
mov
jl
cwtl
addl
jp
fidivrl
xchg
pop
xchg
sub
xor
daa
mov
and
push
mov
call
adc
ja
or
loop
cld
arpl
addr16
mov
cmpsb
and
stc
xchg
cmpsb
mov
ljmp
xor
jp
sbb
call
rorb
cmp
iret
pop
scas
aad
push
jno
xor
aas
sahf
les
push
or
outsb
cmc
or
cmc
aas
lods
xor
inc
sarl
dec
or
fnstenv
fscale
cmp
stos
sbb
sahf
das
shlb
mov
shrl
test
or
lret
scas
leave
push
mov
jecxz
push
push
lcall
mov
dec
daa
add
fwait
cld
out
rorb
and
adc
outsl
and
fst
or
sub
dec
nop
or
sub
das
pop
cmp
sub
cs
dec
scas
repz
push
push
movsb
mov
or
cmp
jl
iret
scas
movb
or
fistpl
in
sub
icebp
inc
ja
sub
cmpsb
loop
enter
shrb
mov
out
data16
jecxz
cld
lea
add
sbb
jns
mov
pop
outsb
inc
dec
jl
sarl
mov
roll
test
and
ds
cmp
mov
cmpsl
shrl
push
add
fmuls
movsl
sbb
in
inc
addl
cmp
fsubr
loope
cmp
cld
xchg
fdivs
lahf
xchg
cs
mov
pop
shl
pop
leave
mov
cs
lret
in
dec
adc
in
mov
fbstp
inc
out
add
cld
fistps
in
shll
andb
insb
daa
xchg
pusha
sbb
lock
pushf
and
repnz
lahf
or
and
cmc
in
push
mov
adc
dec
fnstsw
cmp
mov
das
aad
mov
fidivrl
cltd
jl
and
xchg
cli
mov
loopne
push
sbb
push
push
sub
pop
call
lock
pop
sbb
push
xor
pop
daa
xor
mov
pop
fstl
jecxz
pushf
xor
test
in
rorl
addl
jbe
scas
arpl
inc
jp
mov
inc
xchg
ret
xchg
loope
lahf
scas
int
push
paddd
add
int3
jns
aaa
xchg
test
add
jns
pop
adcb
ja
sbb
dec
mov
lds
shrb
xchg
cmp
push
fwait
imul
or
pop
repnz
insl
fwait
dec
add
jne
loope
xchg
cmp
sahf
jecxz
push
in
push
jns
lahf
adc
add
addr16
xchg
push
iret
mov
or
out
lea
iret
insl
loopne
bound
mov
aam
mov
cmpsl
imul
movsb
mov
mov
andb
in
adc
lret
lods
shl
aam
cmp
cmp
dec
sub
ret
mov
aas
js
fsubrs
mov
cmp
ret
add
lahf
scas
ret
cmp
push
out
jbe
leave
lock
jnp
push
daa
dec
imul
sub
outsb
das
dec
mov
xchg
mov
cmpsb
aam
inc
cli
rcll
lds
push
jmp
add
call
rorb
shr
mov
mov
push
mov
mov
shlb
jo
cltd
add
jmp
push
pop
test
insl
jp
cmp
test
inc
leave
mov
push
jae
ja
xchg
movsl
pop
pop
lret
ss
inc
int3
cmpb
lret
lahf
mov
add
stos
push
arpl
mov
or
ret
jg
cld
insl
jg
or
shlb
ljmp
addl
cmpsb
jle
test
mov
cli
pop
mov
rorb
dec
xchg
movsl
or
and
notl
add
mov
test
lret
xchg
loopne
nop
adc
movsl
mov
rorl
jne
xor
jmp
sbbl
ds
mov
adc
lods
es
scas
int
pop
lahf
pop
xchg
jle
adc
mov
rclb
addl
cmpsb
data16
leave
cmp
cltd
out
cmp
enter
mov
lods
movsb
cltd
xchg
or
jg
fmuls
sbb
rclb
scas
es
dec
xchg
jns
popa
fldenv
inc
mov
mov
pushf
mov
pop
test
enter
mov
cmp
mov
pop
xlat
cld
dec
jns
push
fisubs
int3
jo
andl
xchg
addr16
test
pop
mull
iret
pop
insb
push
lret
sub
xchg
mov
lods
mov
mov
push
dec
jae
ret
les
add
test
xchg
inc
mov
pop
inc
or
mov
repz
push
sbb
test
ss
cltd
mov
inc
add
push
mov
jns
jmp
in
inc
gs
aas
filds
testl
repz
int3
mov
pop
mov
mov
out
das
xchg
lret
rcr
out
lock
mov
adc
mov
iret
add
mov
jge
std
scas
aas
cmp
jo
pop
mov
adc
add
out
ret
loope
aaa
push
push
rorl
xor
or
clc
xchg
leave
shl
outsl
adcb
push
mov
xchg
es
sub
mov
fs
adc
push
mov
push
cltd
imulb
shrb
and
xchg
pushf
xchg
cmc
orb
mov
cmpsl
mov
andb
pusha
lcall
std
pop
xchg
nop
sti
jmp
push
mov
movsb
nop
ja
pop
out
mov
in
jae
stos
fiadds
cmpsb
sub
pop
stos
cmpsb
rol
sbb
aaa
jne
or
pop
or
aas
mov
fnstcw
xor
adc
jns
sbb
test
cwtl
daa
add
neg
push
dec
pop
jno
push
push
ret
mov
push
ja
dec
enter
push
push
iret
or
test
push
movsl
aam
pop
insb
xor
mov
fnsetpm(287
cmp
dec
es
outsl
filds
fistpll
data16
bound
outsl
pop
movsb
repnz
popf
ds
ja
xchg
pop
jge
arpl
ret
xor
das
mov
xor
add
or
xchg
adc
mov
sub
repnz
dec
jo
ret
jecxz
icebp
mov
mov
aas
xor
pop
ja
js
or
lods
xor
push
push
fwait
dec
or
out
add
dec
xor
imul
xchg
or
cmpb
subb
and
lods
or
or
popf
mov
pop
leave
pop
jg
lods
push
addr16
repz
push
xchg
cmp
loop
pop
mov
rcll
lea
lcall
shll
mov
push
xor
enter
stos
cmp
jne
rcll
popa
clc
and
ljmp
xor
dec
and
lds
xor
int3
mov
fsubl
adc
repz
xchg
outsb
or
or
in
ret
add
int3
popf
outsl
dec
ljmp
push
fisubrl
pop
cmp
jge
nop
push
clc
pop
movsl
mov
out
sub
in
test
jmp
je
pop
insb
in
xor
xchg
push
std
outsl
in
push
lods
push
push
gs
fcompl
sub
inc
xchg
je
pop
imul
push
or
fmull
xor
xor
pushf
or
mov
pop
inc
movsl
fidivrl
insl
mov
mov
call
adc
lods
push
mov
xchg
pop
loope
clc
test
adc
xchg
dec
sbb
ret
mov
cmp
test
mov
mov
xor
push
xchg
imul
js
cli
aam
push
fwait
das
jge
inc
jae
adc
in
pop
out
lods
inc
out
push
xor
lret
int
ljmp
data16
into
jne
frstor
lret
in
inc
cmp
jp
fists
push
cmc
cld
out
dec
xorl
push
shl
in
sbb
pop
push
mov
sbb
push
add
sarl
mov
mov
les
or
add
mov
outsl
xor
lret
ret
push
fst
cld
mov
test
sub
dec
ror
push
daa
repnz
dec
lock
xchg
cmp
divb
je
imul
daa
je
pop
mov
shll
dec
lret
cld
add
popf
pop
cmc
flds
xor
fstpt
dec
out
dec
das
sti
sub
xchg
sbb
adc
and
fnstcw
push
push
ret
test
pop
cmpsl
dec
jmp
filds
rcr
cmpsl
ret
ljmp
xchg
out
push
std
adc
inc
in
jae
xchg
call
cmp
and
or
sbb
mov
fsub
idiv
xchg
cmc
or
test
bound
scas
lods
push
jns
push
inc
sbb
iret
push
mov
mov
xorl
fsubs
jle
xchg
movsl
hlt
pop
inc
xor
add
xchg
inc
jg
lds
test
mov
bound
and
int
mov
pop
mov
xchg
ficoms
inc
cmp
mov
sarb
jo
mov
stos
cmp
pop
data16
dec
scas
jb
dec
int
add
repnz
jl
lret
inc
or
pop
mov
enter
ljmp
adc
add
add
adc
xchg
mov
mov
add
dec
mov
jmp
test
mov
jne
movsb
stos
dec
mov
andb
pop
rol
test
ljmp
ja
push
mov
jae
inc
and
mov
std
shll
les
icebp
push
aad
xor
pop
xor
adc
push
in
addr16
movsl
sti
fisttpll
xchg
sub
dec
adc
cwtl
je
mov
into
cld
outsb
mov
jne
jnp
nop
mov
sarl
sbb
inc
sahf
loopne
mov
dec
xor
je
jno
jecxz
outsb
xor
jmp
pop
cmpl
mov
mov
pop
mov
mov
out
ficomps
cli
sub
cmp
adc
mov
mov
xor
or
cltd
mov
cwtl
add
bound
lods
add
int3
dec
lahf
push
sbb
xor
and
aam
sub
or
in
enter
pop
dec
je
adc
xor
int
or
push
adc
mov
or
mov
into
das
sub
loop
scas
or
cmpsl
loopne
jg
jnp
xchg
mov
gs
inc
dec
imul
pop
je
mov
pop
xor
sub
mov
xchg
cmpb
hlt
dec
imul
mov
ret
or
out
ja
lods
test
fcomi
pop
outsl
dec
xchg
in
out
shrl
sub
lock
notl
sub
ret
roll
pop
ret
pushf
push
popa
mov
push
int
xor
sti
daa
pop
or
jg
dec
arpl
pop
cmpb
pop
loop
es
out
stc
dec
pop
les
arpl
lret
sub
xchg
sub
out
jae
mov
int3
mov
lods
lcall
mov
shr
jo
cli
popw
in
clc
mov
mov
cmp
jne
xor
inc
lret
in
cmpsb
test
test
lret
les
in
into
nop
repz
xlat
imul
xor
jg
jp
rcrl
sub
mov
fbstp
jbe
xchg
pop
cmp
daa
push
adc
xchg
sub
inc
jae
lcall
loop
cmpl
les
leave
jb
fdivs
js
mov
xchg
stos
fwait
lret
xchg
or
cmp
add
xchg
fcoml
hlt
or
ret
xor
add
inc
pop
sbb
lea
xchg
sahf
pop
mov
popa
pop
je
sahf
push
ds
in
and
jmp
mov
xchg
sti
cmp
into
pop
push
cmp
lret
pop
mov
lret
notb
aad
mov
lret
xor
pop
lret
pop
pop
fwait
jmp
push
sub
pop
and
or
popf
sub
cwtl
mov
xor
lea
dec
xchg
mov
mov
mov
lcall
inc
jns
mov
or
push
push
call
xor
aaa
mov
adc
add
jmp
lods
shrb
mov
int
mov
and
ljmp
and
sbb
fildll
xchg
jbe
cwtl
and
orl
dec
cmc
cmpsl
out
out
pop
push
push
xchg
or
inc
aad
xlat
xlat
test
movl
xor
lahf
fwait
ljmp
sti
movsl
cmpb
jecxz
add
popa
cltd
push
sbb
mov
icebp
jge
mov
mov
add
repz
mov
xchg
pop
add
or
mov
adc
idivb
pop
ret
adc
push
js
jo
push
mov
addr16
sub
in
dec
or
inc
cmp
jae
cmp
add
and
loopne
push
shlb
ljmp
mov
xchg
test
iret
pop
fisubrs
mov
std
pop
je
sbb
cmp
ds
into
mov
das
pop
fcmovu
out
adc
xchg
jae
rcll
shlb
pop
jmp
jne
xor
and
data16
and
inc
add
mov
jmp
xchg
pop
xchg
mov
std
aam
imul
lods
iret
mov
dec
insl
insl
ret
jmp
push
notl
enter
ss
bound
xchg
jle
push
inc
push
pop
push
aas
adc
inc
mov
enter
in
outsb
adc
gs
fmull
test
sbb
pushf
mov
pop
out
stos
frstor
sti
push
in
arpl
call
lahf
ds
insl
and
aam
sarl
cmc
movl
dec
aaa
loope
or
out
lock
cli
rcl
out
mov
dec
push
into
lods
outsl
mov
outsb
sbb
stos
fcmovnu
aas
es
ja
sbb
push
fsubrs
push
or
adc
xor
cltd
mov
jae
dec
dec
inc
insb
jno
sbb
mov
push
clc
insb
and
mov
flds
and
cmp
add
mov
mov
push
push
dec
icebp
clc
ds
mov
call
mov
imulb
sbbb
inc
cmp
xor
test
xchg
mov
xchg
or
incl
fmull
push
fwait
mov
add
fmuls
cli
add
adc
cmp
add
sahf
movsb
or
cld
lret
sub
mov
and
int
adc
xchg
xchg
xor
cmp
cmp
aam
jne
cli
or
push
fucom
or
cltd
ljmp
rcrl
mov
xorl
out
mov
mov
out
push
arpl
sbb
ret
ss
mov
or
ss
xor
pop
inc
test
pop
pop
cmpsl
popa
imulb
pop
jge
sbb
scas
loop
loopne
mov
adc
rclb
in
cmpsb
rorb
lcall
adc
pushf
pop
inc
cmp
sbb
dec
and
test
popa
xor
insb
sub
mov
xchg
testb
dec
jmp
stos
in
mov
test
in
xlat
pop
leave
lret
ret
stos
out
fldenv
or
inc
fcoms
rorl
mov
xchg
pop
push
fisubs
mov
adc
and
insb
outsb
stos
daa
sub
ficoms
sbb
imul
inc
fnsave
mov
imul
and
gs
push
in
xor
dec
xchg
out
adc
mov
or
addl
push
ljmp
fcomip
hlt
daa
out
jecxz
iret
jp
loop
idivb
daa
or
inc
push
dec
in
sub
repz
shl
in
jno
xchg
stc
lcall
mov
js
clc
jbe
and
out
adc
pushf
sbbl
jl
addr16
arpl
ret
or
clc
add
test
stc
lahf
notl
lock
icebp
pop
adcl
adc
ficomps
xor
xchg
dec
ljmp
or
mov
mov
jl
sub
call
test
inc
xchg
mov
in
sbb
inc
sti
add
cmp
ret
sahf
mov
dec
outsl
mov
push
add
mov
xchg
sub
movsb
in
out
push
or
mov
sbb
daa
scas
mov
clc
cltd
imul
insb
jl
orl
out
adc
dec
dec
leave
inc
in
nopl
cs
into
sarl
mov
mov
aam
ficompl
mov
mov
mov
or
test
xor
jge
in
pop
push
bnd
mov
movsb
mov
cmc
adc
pusha
jo
mov
out
mov
dec
or
inc
daa
sub
mov
das
popa
mov
adc
mov
push
push
mov
ds
inc
or
je
pop
xor
lret
mov
add
stc
into
pop
cmp
in
mov
push
sub
dec
or
jecxz
leave
sub
jmp
in
jp
addl
fmulp
outsl
mov
ret
gs
and
xchg
mov
int3
repz
loop
mov
mov
pop
scas
mov
xor
lock
lds
movsb
ficoml
movups
xor
push
ss
hlt
mov
loop
lahf
sbb
jb
sub
roll
push
sbb
pusha
push
hlt
je
push
inc
sub
cld
cmp
mov
addr16
fsubl
add
mov
adc
adc
pop
pushf
das
push
je
or
fdivr
scas
xor
int3
sti
loopne
idivl
fcoml
add
xchg
adc
pop
push
jle
notb
mov
sbb
push
insb
imul
inc
jnp
inc
mov
movl
nop
bound
jl
cwtl
test
aad
in
and
fisttps
lret
icebp
or
cmpsb
add
cmpl
or
xchg
and
mov
pop
pop
and
daa
daa
mov
lcall
inc
stos
ss
loop
sahf
mov
xlat
sub
mov
test
add
mov
lret
xlat
lret
lock
sub
dec
aam
subl
sbb
inc
sbb
push
roll
cmpsb
cld
push
jbe
call
cmp
push
xchg
mov
test
fistpl
mov
sub
movsl
push
mov
mov
enter
mov
mov
pop
pop
inc
int3
stos
xchg
icebp
inc
mov
mov
js
push
adcb
cli
in
adc
xchg
orl
leave
cs
mov
pop
or
sub
dec
ss
imull
lods
push
test
pop
dec
outsl
add
inc
mov
int3
jmp
cmp
hlt
sbb
fsubrl
not
gs
dec
sbb
fcoml
xor
pop
dec
xor
test
pop
mov
pop
inc
jno
call
out
out
mov
mov
push
mov
xor
js
je
outsl
aaa
icebp
sbb
rorb
fs
inc
cmc
mov
das
xor
mov
jmp
jo,pn
mov
stos
repz
inc
and
les
out
std
in
pop
popf
jae
mov
jb
cmc
popf
add
aad
cmpsl
and
pop
or
je
mov
adc
and
mov
sbb
insb
aad
mov
test
add
pushf
imul
jp
repnz
jns
imul
test
aas
dec
push
andl
in
sbb
add
jge
xor
add
shll
call
out
ljmp
dec
sub
cmpsl
bound
shlb
adc
js
jp
daa
fnsave
aad
lods
in
js
inc
mov
pop
dec
enter
dec
js
mov
mov
ret
lcall
xlat
pop
test
cmp
es
add
ds
movsb
push
xorb
testl
jle
pop
cmp
mov
in
sti
fs
mov
add
xchg
sbb
cmp
mov
push
imul
push
push
jmp
int
jmp
clc
repz
mov
stos
mov
xor
sub
mov
mov
mov
jne
mov
mov
sahf
call
lock
dec
enter
imul
jb,pn
pop
push
adcb
push
lods
mov
push
dec
std
mov
dec
test
orl
cltd
stos
sbb
bound
into
repnz
aaa
stos
pushf
imul
or
das
leave
lods
adc
popa
aaa
push
inc
stos
mov
fildl
cmpsl
mov
sub
push
daa
pop
mov
jbe
mov
sarl
inc
js
ss
xlat
pop
xchg
mov
jg
pop
xlat
pop
repnz
jo
jge
gs
arpl
mov
loope
call
pop
push
xchg
push
jg
insb
sbb
mov
lock
cmpsl
jecxz
cs
mov
mov
pop
stos
xchg
test
push
adc
ret
sub
mov
pop
in
jnp
or
sarb
lock
lock
jmp
sbb
sbb
xor
jmp
push
popf
js
test
lea
adc
dec
imul
jge
cmp
pop
sbb
mov
ds
jecxz
xchg
and
icebp
xlat
push
repz
jmp
in
ss
in
cmp
xor
pop
mov
or
and
pop
adc
push
cmpsl
fisubs
ljmp
sub
push
jb
loopne
arpl
fbstp
xchg
mov
xchg
pop
and
cmp
les
hlt
adc
rclb
xchg
jne
adc
or
aam
pop
mov
daa
sub
add
or
pusha
rcll
sbb
aam
xchg
mul
imulb
movsb
cmp
pop
call
dec
iret
add
push
xchg
inc
jecxz
inc
xorl
ljmp
adc
lret
sbb
loope
xchg
pop
pop
jecxz
cmc
push
into
test
iret
inc
ret
out
inc
sbb
leave
add
stc
rolb
jae
push
filds
mov
fiaddl
jns
mov
adc
fmuls
outsb
and
mov
sbb
or
cli
incb
sbb
das
mov
xchg
xchg
rcrl
jno
mov
add
or
mov
bnd
sahf
mov
aad
out
inc
fcomp
fldenv
sbb
sub
addb
push
lods
inc
pop
cld
dec
xor
push
aam
and
clc
mov
js
mov
mov
loopne
dec
pushf
mov
fdivp
mov
pop
ficompl
jle
mov
lock
loop
xor
inc
lea
lcall
insl
ret
mov
in
call
mov
jp
cltd
cs
sbb
cmp
adc
popa
dec
in
mov
fisttps
ds
pop
xchg
rolb
jbe
xchg
in
xor
arpl
mov
inc
adc
fmuls
ss
insl
jl
xor
sahf
out
scas
test
push
mov
mov
movsb
incl
jp
mov
mov
push
push
ljmp
sbb
popa
lea
sub
pushf
stc
fsub
or
jbe
movsb
or
and
add
jb
stos
es
hlt
in
loope
repz
sub
js
insl
add
leave
mov
fists
jmp
cmp
sbb
jmp
popf
loopne
jno
and
xor
scas
or
leave
gs
aam
jl
jecxz
push
jle
jl
fs
mov
cwtl
ret
ljmp
cld
sub
pop
ja
addl
sub
int3
pop
cmp
sub
cmp
ss
mov
pop
int
sbb
jnp
or
adc
cmp
xchg
sbb
scas
push
lret
clc
dec
jbe
push
jae
sahf
jb
inc
sub
and
dec
push
ret
pop
mov
movups
scas
insl
push
push
cmc
push
daa
cld
mov
les
aaa
arpl
mov
test
sbb
or
push
adc
imul
enter
std
jne
scas
sbb
imul
lret
mov
stos
adc
pop
sub
adc
sub
mov
xlat
outsl
pop
jb
ljmp
cmp
jge
lahf
add
sar
movb
stc
mov
in
push
fcompl
imul
push
jns
add
test
insl
inc
mov
dec
inc
add
add
adc
repz
out
out
inc
cli
pop
mov
ret
inc
mov
inc
pop
xchg
aas
mov
push
pop
xchg
loopne
sarl
addr16
jmp
cli
push
push
ror
jns
mov
push
jo
stos
mov
jbe
and
sti
pop
adc
movb
adc
xor
xchg
and
jnp
fldcw
pop
nop
sbb
or
out
mov
and
lods
cmpsb
test
or
lahf
push
dec
pop
out
rol
cltd
sub
pop
mov
sub
pop
rorb
int3
xchg
xchg
out
add
inc
out
cmpsl
popf
sbb
int3
shlb
push
add
push
xchg
pop
mov
test
mov
dec
daa
iret
pop
lds
xor
jo
idivl
pop
add
inc
pop
popf
dec
add
jbe
and
or
out
sbb
and
mov
mov
sbbb
mov
cmp
fbstp
jmp
out
push
xchg
mov
xchg
mov
cmp
xor
bound
dec
jns
addb
xchg
sbb
dec
sbb
std
push
dec
push
test
out
jp
pop
in
mov
mov
mov
in
arpl
push
or
lea
shrl
inc
push
add
mov
jle
scas
xchg
inc
sub
popa
mov
pop
adc
mov
mov
jge
pop
sbb
fwait
pop
in
mov
stos
jge
jl
mov
push
pop
dec
adc
or
int
jmp
rclb
test
or
outsb
and
cmp
aaa
mov
xchg
xchg
xchg
arpl
and
add
imul
pop
in
scas
adc
frstor
ljmp
mov
and
in
mov
jg
repnz
fcomi
pop
pusha
pop
mov
sarb
int3
addl
mov
into
add
addr16
jne
test
mov
ror
mov
xor
inc
ffreep
xchg
outsl
inc
and
dec
dec
fisubs
out
sbb
popf
pusha
jo
in
insb
insb
jmp
mov
and
outsl
cld
lea
mov
arpl
and
mov
pop
push
sbb
imul
lret
adcl
mov
jne
out
jp
push
pop
ret
cltd
stos
clc
cmp
xchg
popa
ja
sbb
push
mov
out
bound
xlat
jo
sbb
pusha
arpl
fisubrs
imul
lret
scas
pop
adc
sub
addr16
mov
adc
jecxz
outsl
mov
jnp
or
adc
dec
dec
cmp
mov
scas
pop
aam
dec
addb
loope
pop
mov
cmp
lds
dec
jno
mov
pop
inc
mov
add
bound
and
in
int3
shrl
lret
push
cmp
sar
das
inc
xchg
jp
pop
shlb
jne
mov
in
mov
in
inc
das
pop
test
xor
push
dec
popf
xchg
sub
mov
je
sub
loop
sbb
mov
pop
inc
mov
in
out
adc
lods
cmp
inc
and
pop
lea
loopne
fnstsw
add
mov
xor
std
adc
jns
mov
mov
ja
dec
lea
test
xchg
out
arpl
das
pop
jge
xorb
cs
loope
movsl
bnd
xchg
dec
cmp
es
clc
jno
pop
test
popf
outsb
fcomp
loope
jne
repz
in
jl
test
or
imul
pop
shrl
sbb
cmpsb
sahf
subl
call
lcall
and
lret
cmp
or
xor
in
adcl
or
xchg
pop
insb
sbb
add
and
imul
lods
fistpl
adc
mov
outsb
mov
xor
or
pop
inc
int
sbb
mov
ret
icebp
push
cli
mov
fildll
sbb
sahf
divl
pop
mov
sbb
sub
out
cmpsl
xlat
push
out
sbb
push
push
test
mov
xor
test
jno
dec
lock
xchg
into
leave
das
mov
pusha
stos
push
cs
pop
lea
pop
fstpl
push
jmp
cmp
inc
inc
pop
pop
ret
add
clc
sub
xchg
ljmp
pop
cmp
cmp
movsl
pusha
push
int3
mov
test
push
loop
pusha
inc
pop
js
xchg
shlb
int
cmp
or
bswap
test
movsb
testb
cmp
or
outsl
std
pop
mov
cmpb
gs
hlt
mov
ja
pop
shl
pop
pusha
shlb
pop
pop
pop
push
adc
bound
scas
lods
loopne
es
xor
mov
cli
push
hlt
mov
lcall
in
lods
lret
inc
arpl
je
cs
pushf
jne
sbb
jnp
popf
jb
cli
mov
movsl
test
insb
mov
xor
push
push
pop
add
sbb
mov
sub
outsl
jl
stos
leave
or
and
ja
ret
pop
popf
bnd
and
roll
lcall
xchg
or
mov
cltd
jae
push
fldt
test
push
cli
rcrl
jmp
push
inc
cmpsl
mov
or
stos
stc
sbb
mov
or
jae
cltd
in
enter
mov
lahf
js
xor
cmp
pop
adc
aas
adc
push
xor
inc
test
insb
pushl
cwtl
loop
lret
dec
iret
scas
pop
and
fwait
mov
xchg
or
in
and
xchg
lock
cmc
jno
enter
mov
jae
call
imul
lods
jmp
dec
jle
aaa
test
shlb
pop
sbb
jns
hlt
jecxz
or
jl
add
mov
cmp
push
flds
frstor
sbb
pop
mov
loope
add
mov
iret
jne
lret
inc
repnz
xor
push
xor
xorl
add
pop
imul
mov
jb
cmpsb
out
push
or
mov
nop
and
ret
mov
mov
mov
xchg
insb
cltd
in
out
dec
xchg
dec
push
ja
adc
pop
call
pushf
mov
nop
subb
mov
jne
popa
cmp
jns
fisttps
daa
inc
test
push
xor
mov
data16
push
push
cwtl
outsl
jae
lds
pop
jae
add
and
daa
iret
adc
out
aas
pcmpeqb
loope
xchg
fwait
lahf
jae
xor
fnsave
stos
arpl
pusha
fbstp
jb
daa
clc
push
out
ret
mov
xchg
add
add
lret
add
mov
sbb
xlat
push
add
mov
imul
adc
pop
ds
jg
pop
insl
jne
mov
cmp
popa
mov
jecxz
repnz
shr
xchg
pusha
popa
test
cmp
lea
insb
sbb
sbb
push
test
jmp
loope
xor
mov
cmpsb
adc
and
or
push
call
into
daa
jmp
mov
in
ss
scas
movsb
lods
fcom
js
mov
pop
cmpsb
mov
inc
pusha
orb
mov
add
add
lock
shl
mov
int
lcall
sub
jno
stos
lret
loopne
in
mov
or
jmp
sbb
data16
aaa
outsb
cmp
andl
adc
aam
and
or
out
dec
nop
jns
xchg
jns
addr16
gs
dec
hlt
dec
in
ja
dec
shrb
adc
nop
cmp
adcb
mov
aam
and
jnp
imul
ret
aam
dec
icebp
aas
jno
sbb
jle
ret
mov
jge
inc
ficompl
lahf
mov
xor
and
js
pop
xchg
sub
dec
or
repz
scas
add
xor
cmp
shlb
push
jb
sub
out
and
pop
dec
adc
mov
idivl
or
outsl
mov
pusha
or
sub
fsubrl
dec
orb
stos
js
out
mov
test
mov
sbb
imul
dec
icebp
popf
mov
pop
jne
movsb
add
cltd
out
xor
int3
push
xchg
arpl
les
xchg
lods
dec
ljmp
xor
aas
int
add
js
xchg
arpl
popf
out
add
or
leave
dec
sti
pop
ficoms
faddl
cmp
pop
xchg
das
jmp
jno
mull
out
insb
mov
enter
mov
repz
push
jo
mov
test
icebp
mov
mov
aas
mov
mov
addr16
jmp
xchg
xorl
pop
cmpl
cli
daa
mov
js
mov
mov
daa
out
adc
outsl
std
or
cmpb
xchg
daa
call
and
scas
or
mov
dec
add
ficoms
adc
ss
add
aaa
sub
ljmp
mov
push
jl
stc
mov
nop
pop
fisttpll
mov
sub
push
dec
loopne
loopne
jmp
inc
mov
pusha
sbb
push
xor
pop
gs
fnstsw
jmp
scas
jle
int3
xchg
push
in
lahf
arpl
inc
fs
xor
cli
sub
je
lods
mov
mov
loop
push
and
lods
rcrb
call
fidivrs
es
ss
pop
mov
das
sahf
shr
jge
jecxz
outsb
out
shrb
inc
xchg
aaa
xchg
xor
imul
imul
and
cltd
jae
xor
arpl
aas
push
mov
repnz
inc
xchg
adc
or
imul
daa
inc
notb
jo
mov
dec
adc
jg
cltd
dec
mov
jo
fistpl
fildl
sbb
jno
lcall
mov
pusha
xchg
mov
pop
lret
cltd
fcmovne
insl
pop
fs
push
sbb
jp
pop
out
out
inc
xchg
dec
push
inc
dec
jo
jg
cmp
lds
movsl
or
mov
adc
or
mov
jnp
enter
lea
sbb
push
int3
jo
adc
mov
andb
jbe
sbb
push
or
popf
iret
aam
sbb
xchg
fsubl
adc
icebp
aas
mov
sbb
test
jl
arpl
mull
adc
add
mov
inc
aam
or
aam
rcll
mov
insb
loope
jns
mov
adc
jb
adc
icebp
int
dec
std
iret
adc
pop
mov
lea
fildll
pushf
push
lods
cmp
xchg
mov
adc
add
notb
mov
dec
nop
jg
lret
inc
popf
or
bound
sbb
loopne
sub
cmp
mov
xchg
mov
cmc
sub
push
dec
std
mov
xchg
inc
leave
adc
rcrl
pop
jne
lcall
std
sbb
jno
pusha
cltd
std
pop
nop
aad
pop
lods
xor
shlb
testb
and
sub
cli
sar
ds
or
mov
pop
sub
xor
jae
lret
out
or
add
ret
sub
or
iret
mov
pusha
push
insl
mov
sbb
push
cmp
push
sub
shll
out
out
pop
in
jle
mov
popf
pop
mov
xchg
movsl
jg
std
lods
inc
jle
sti
call
leave
cltd
xchg
or
adc
imul
leave
add
jb
cwtl
or
add
or
xchg
hlt
ss
scas
jne
push
lds
fsts
popf
cli
je
add
jo
mov
adc
xchg
jmp
xor
fs
xchg
cmpb
fisubrs
sub
mov
lcall
jbe
xchg
das
lods
dec
xchg
jecxz
push
icebp
ljmp
test
ljmp
and
push
xlat
inc
and
xor
cmp
jo
mov
sbb
mov
arpl
stc
stos
imul
int
adc
ljmp
and
mov
sbb
cltd
out
sub
adc
pop
data16
gs
or
loopne
xor
pop
mov
in
popf
jo
stos
xchg
cld
cmpsb
lcall
push
mov
sub
stc
int3
xchg
div
scas
adc
sbb
imul
pushf
mov
stc
outsl
pop
jb
mov
fsubrs
test
je
xchg
hlt
mov
adcb
arpl
sbbl
mov
dec
or
decb
in
sti
jo
lock
mov
inc
das
add
jmp
adc
rcrl
std
faddp
mov
ret
pop
imul
pop
cmp
ljmp
movsb
jnp
repnz
mov
jbe
loop
pop
cmp
jno
or
sbb
mov
rsm
test
adc
das
lods
mov
loopne
inc
mov
push
push
dec
sti
mov
jg
xor
ret
scas
hlt
cmp
xor
adc
outsl
jnp
in
inc
push
dec
lods
sbbb
pop
pop
pop
push
cmc
pusha
sbb
pop
dec
mov
push
cmp
pop
icebp
xor
dec
mov
les
add
ds
mov
push
in
insb
inc
inc
add
pop
inc
dec
daa
inc
push
or
ljmp
xor
stos
add
xchg
stc
xor
daa
push
push
jmp
dec
jo
es
daa
lea
repnz
sbb
and
xchg
dec
pop
push
push
out
dec
xchg
sbb
into
shrb
xorl
hlt
jle
push
stos
add
jmp
push
lret
stos
fwait
mov
mov
mov
add
sbb
mov
jbe
inc
sarb
rdmsr
mov
xchg
jle
fsub
ljmp
shrl
outsl
in
fstl
jno
inc
dec
inc
mov
mov
and
and
test
add
pop
xchg
adcb
push
jmp
cmpl
ret
je
or
jns
pop
sbb
ja
aam
ret
fucomi
jne
and
dec
lcall
and
ret
fsub
loopne
adc
pop
lds
sub
out
clc
fcmovnb
cmc
test
stos
bound
dec
icebp
mov
int
add
push
dec
leave
add
shrl
and
or
mov
mov
popa
mov
mov
ss
and
out
jnp
outsl
stos
xor
fsts
mov
mov
lahf
mov
inc
cltd
sbb
dec
sbb
das
pushf
xchg
aad
sbb
push
sub
mov
inc
mov
push
mov
aad
cltd
sbbb
ja
push
les
mov
sub
scas
push
sub
mov
lcall
add
pop
out
xor
sbb
xchg
adc
inc
mov
fcomps
das
iret
mov
jmp
fs
sbb
enter
orb
xor
mov
ds
mov
cmpsb
mov
jle
imul
inc
push
cmpsl
pop
mov
es
ja
cmp
inc
mov
or
rorb
push
int3
les
mov
incb
lret
add
dec
cwtl
dec
cmp
das
ss
cltd
xchg
enter
int
out
cmp
cld
test
inc
outsl
ljmp
jecxz
inc
push
test
rcrl
pop
mov
test
mov
loope
in
inc
dec
add
cmp
out
sub
and
imul
out
sub
push
std
jae
or
xchg
mov
xor
out
cli
inc
mov
subb
push
cmpsl
pop
test
sub
jns
pusha
jbe
mov
jnp
popa
lea
sub
cmp
loope
mov
bound
mov
dec
repz
add
lods
push
push
rcrb
loopne
pop
jg
cmp
lea
repz
mov
pusha
cmp
popa
mov
fidivrl
enter
test
xchg
fmull
mov
aaa
das
jl
pop
push
pop
es
or
jo
sbb
lret
pop
js
imul
imul
nop
rcrl
mov
aad
or
insl
jp
loop
ficompl
cli
adc
movhps
jnp
stos
and
std
xchg
adc
fwait
push
sbb
mov
sub
dec
dec
mov
in
cmpsb
pop
cli
mov
lods
cmp
movsl
inc
push
daa
lret
jge
push
sbb
or
cs
xchg
mov
loop
movsb
gs
push
jb
ljmp
fld
loop
xchg
lods
adc
out
adc
xchg
shl
pushf
adc
daa
lahf
xor
arpl
jle
mov
gs
xor
jae
cmovne
xchg
sbb
rclb
jae
xor
dec
xchg
in
mov
and
xchg
push
jnp
mov
and
aas
out
ss
pop
out
dec
int3
push
call
pop
jae
insl
mov
push
sub
adc
scas
xchg
iret
xor
outsb
mov
rol
leave
gs
mov
xchg
and
or
pop
repnz
popfw
dec
pop
movsl
cmpsl
jl
dec
adc
enter
pop
fs
inc
subb
xchg
or
and
jnp
push
pop
icebp
fmuls
cmp
lds
lahf
dec
insb
mov
insb
jbe
out
scas
jecxz
jb
pop
lods
icebp
xchg
hlt
fwait
jae
jb
je
je
sub
push
mov
mov
fstl
sar
iret
cmpsl
lods
pusha
xlat
sub
ss
push
sar
jge
xchg
mov
jl
mov
adc
jle
and
and
or
mov
lods
popa
pushl
xor
divb
mov
mov
into
sub
inc
repz
mov
xor
out
push
pop
out
mov
test
inc
es
push
lods
ret
outsb
sbb
mov
inc
mov
xorb
dec
pop
cli
adc
sub
add
xchg
lea
lea
imul
call
insl
mov
mov
jns
adc
cmp
subb
in
call
insl
ret
ret
pop
sbb
testl
or
push
int
cmp
mov
mov
stos
orl
jnp
insb
sarb
lret
push
inc
lret
cmp
push
pop
pop
shrb
or
xor
fisubrl
int3
dec
sub
push
sub
push
dec
test
seta
sbb
mov
and
jg
pop
cmp
mov
stc
cmp
ljmp
mov
add
push
and
or
icebp
dec
out
or
jns
adc
jg
test
lret
dec
div
test
lods
push
cwtd
pop
pop
call
push
mov
movsl
out
ret
adcl
mov
cltd
lcall
cs
sahf
mov
push
stos
in
lret
push
roll
jecxz
jo
pop
pop
fs
mov
push
fistl
mov
push
push
enter
push
dec
mov
test
ljmp
mov
insb
inc
jp
popa
inc
mov
insl
mov
sub
out
outsl
or
xor
cltd
adc
jb
add
inc
fldcw
sahf
push
shrl
loope
cli
sbb
les
shl
pop
mov
pop
gs
sub
dec
out
lea
decb
adc
dec
sahf
dec
ds
adcb
cmc
aad
incb
push
pop
mov
jno
and
jge
sbb
and
cmpsl
into
push
inc
cmp
idivb
inc
pop
es
xor
xchg
mov
mov
lods
sbb
in
mov
mov
mov
int
movsb
scas
jae
out
inc
xchg
pop
mov
jl
push
pop
add
inc
fistpl
fimull
cwtl
mov
int
dec
or
dec
addr16
mov
pop
popf
xchg
fidivl
inc
xor
and
pushf
imul
stos
stc
in
lea
mov
sub
stc
in
and
cmpsl
jbe
xor
out
and
sbb
mov
mov
fiadds
das
icebp
and
in
mov
jbe
imul
test
lock
lcall
mov
fnstenv
hlt
push
jl
fwait
lcall
test
jg
cmp
inc
jg
cmp
mov
push
insl
dec
sub
pop
ret
loope
push
jmp
dec
pop
and
fs
shll
xor
inc
jo
ret
push
xor
incl
popa
xor
mov
dec
jno
jecxz
lock
or
sarl
mov
loope
idivl
inc
push
xor
sbb
mov
std
cltd
out
fsubs
mov
or
addb
insb
sub
aad
push
mov
shr
cmp
int3
mov
in
jecxz
cld
leave
dec
jle
sahf
jno
ss
mov
inc
lea
jbe
fsubs
nop
push
test
sub
sti
loope
mov
dec
int
xchg
ret
dec
icebp
dec
inc
sarb
xchg
in
xchg
ds
movsb
hlt
out
mov
aad
jnp
gs
cwtl
flds
sbb
lea
mov
mov
xchg
es
imul
imul
adc
stc
mov
les
cmp
je
and
adc
xchg
inc
std
push
mov
ljmp
push
pop
pusha
shl
ret
push
stc
sbb
xor
pop
popa
jmp
cltd
xchg
std
rcll
mov
add
ljmp
test
rcll
std
arpl
xor
insb
mov
push
loop
and
in
pop
out
std
in
mov
movsb
mull
insb
pop
aaa
lret
fsts
xchg
mov
jno
jne
fldt
jns
push
shll
lret
push
jle
enter
mov
push
xor
or
mov
push
jbe
xchg
inc
pop
testl
dec
in
std
notl
inc
cmp
lods
ret
lret
cmpsl
cmpsb
and
mov
clc
xchg
stos
cltd
mov
sbb
mov
cmp
jo
mov
push
jle
jl
xor
sub
pop
hlt
stos
cmp
out
aaa
lods
xor
popa
mov
andl
das
test
imul
inc
xchg
es
mov
lds
xchg
cmp
jp
adc
out
sub
fisubl
lret
lahf
out
vpunpcklbw
inc
dec
mov
sbb
hlt
fsts
mov
mov
adc
pop
dec
mov
cmpsb
pop
sbb
push
testb
and
jmp
in
shr
icebp
lds
mov
dec
push
cld
fdivrs
nop
nop
shlb
jns
push
xchg
popa
push
aam
mov
fs
lret
inc
test
insl
cld
mov
push
cltd
aad
mov
aam
cmp
lods
mov
push
push
inc
xor
add
out
cmpsl
dec
idivb
int3
subl
fmuls
xor
or
mov
in
sbb
fwait
push
pop
outsb
cmpsb
push
shrl
add
shr
pop
dec
mov
cmp
and
out
mov
and
hlt
cld
mov
jb
mov
loope
mov
cmpsl
ret
push
popa
or
dec
xor
add
outsb
push
insb
int3
mov
and
dec
stc
sub
lock
gs
adc
push
mov
ret
sahf
mov
test
test
repz
out
push
push
jne
js
outsb
or
das
ds
lock
xor
mov
pop
stos
push
mov
fwait
test
jb
sub
xchg
push
and
add
mov
std
mov
aam
sbb
mov
adc
int3
inc
int
arpl
loopne
pop
ja
fldcw
in
sub
shl
aad
add
mov
nop
xor
fisttpll
or
cmp
sub
insb
popa
loopne
or
mov
push
push
movsb
repnz
mov
pop
scas
mov
jne
scas
jle
les
jge
cld
fwait
jmp
xlat
mov
mov
insl
cld
test
rolb
push
adc
out
roll
or
enter
bound
xchg
std
fistpl
and
mov
es
cmp
push
out
addl
xlat
ja
shll
imul
scas
pusha
cmp
arpl
push
addr16
sahf
and
jl
insb
leave
movsl
into
dec
add
adc
je
rorb
push
mov
gs
add
in
scas
cld
sub
clc
aam
dec
pop
sub
mov
cli
aaa
pushf
je
cmp
lret
aaa
xor
adcl
add
add
cltd
cwtl
mov
dec
iret
dec
cmp
and
fstps
aam
xchg
add
fwait
cli
imulb
stos
aam
aaa
dec
es
mov
mov
pop
lods
lahf
xor
ret
pop
mov
rolb
xchg
test
cmpsb
cmp
push
xchg
xchg
push
loopne
arpl
mov
fs
sbb
mov
mov
jmp
adc
int
push
or
test
adc
xlat
clc
ret
and
mov
jbe
ficompl
xor
pop
mov
das
pushf
fmull
and
cmp
das
repz
jne
jl
fdivr
sbb
mov
sub
loope
insl
jnp
nop
in
or
push
out
cmpsb
fs
insb
xchg
xchg
dec
aam
jbe
pushf
mov
rorl
inc
repz
sbb
aas
pop
fnstenv
mov
or
filds
mov
inc
push
test
fldl2e
sbb
xor
sbb
mov
mov
popa
js
std
addb
rolb
dec
mov
lret
out
dec
add
enter
in
xor
std
subl
mov
sub
jg
lods
jmp
iret
mov
jb
adc
cmp
popa
fisubrs
bound
adc
xchg
mov
repz
cld
adc
fistpl
mov
stc
repnz
stos
push
clc
mov
popa
mov
popa
adc
mov
xchg
sti
push
mov
pusha
inc
add
test
fidivs
imul
sub
dec
ja
lahf
ljmp
les
hlt
mov
push
pop
out
iret
ds
push
fs
add
add
lock
gs
add
and
rcrb
mov
mov
mov
dec
xchg
xchg
jnp
addr16
je
xchg
or
push
jecxz
scas
shrl
jns
sti
pop
mov
lock
and
jp
repz
shr
orb
int3
push
lret
mov
pushf
outsl
pop
dec
sub
sbb
fprem
mov
test
cmp
out
push
sub
sub
int3
jge
fstps
mov
sbb
jecxz
cmp
push
imul
push
mov
dec
mov
ss
in
notl
add
pop
mov
or
mov
lods
xorb
popf
jge
sarl
jecxz
aas
push
fimuls
push
and
icebp
inc
test
mov
add
int
cmp
mov
popf
mov
push
push
add
dec
into
ss
repnz
inc
mov
xor
stos
pop
add
cmp
xchg
dec
imul
cmpsb
mov
push
adc
sub
push
lahf
into
inc
and
add
pop
loope
dec
add
or
pop
cmpsl
jo
stc
insb
jns
cld
divl
fnsave
mov
aaa
cmp
fcompl
sub
cmp
cmp
push
fldcw
mov
adc
or
dec
fiaddl
jle
int
fwait
push
daa
push
test
fcoms
rorl
ret
mov
sbb
repz
adc
mov
pop
popa
out
test
lret
jmp
or
and
out
jge
xor
cmp
sbb
aas
xor
jb
jae
fisubrs
or
sbb
adc
and
xor
pop
or
lcall
daa
stos
mov
pop
pop
lret
fldt
xchg
loope
add
je
mov
movsl
cltd
in
fsubl
or
je
fcoms
int
xchg
hlt
out
mov
stos
adc
push
das
sub
push
push
push
sarb
push
adc
lret
mov
jge
and
add
js
add
jmp
pop
repz
xchg
add
lea
loopne
mov
in
iret
out
jp
lds
cs
outsb
mov
andb
stos
addr16
mov
lahf
and
in
sahf
test
out
daa
jecxz
ljmp
rcll
xchg
in
fimuls
or
xor
jnp
jnp
pop
sti
outsl
hlt
cmp
dec
xchg
jnp
and
aad
fs
pushf
movsl
lret
dec
jl
cld
adc
inc
loop
mov
lcall
push
push
enter
push
cmp
stos
outsb
sub
loop
outsb
loopne
sbb
insb
int
push
das
pop
sbb
cmp
imul
orl
adc
sub
pop
outsl
xchg
jp
std
add
les
sub
and
sbb
sahf
in
push
hlt
sbb
faddl
jbe
aas
mov
iret
sub
jge
inc
test
and
mov
push
loop
rcrb
call
jl
push
cmp
pop
mov
or
lret
or
rcll
cmc
and
jl
js
jne
cmp
jp
nop
xor
add
out
sbbb
rcrb
aaa
jecxz
inc
pop
out
into
jle
andb
nop
fwait
cmp
adc
xchg
ds
out
or
sarb
arpl
ss
inc
mov
aas
mov
ljmp
push
scas
lods
rolb
inc
jbe
or
sbb
push
dec
push
mov
lcall
aam
sub
outsb
push
mov
fdivrp
imul
mov
dec
push
inc
jmp
pop
jge
out
scas
roll
add
xchg
call
mov
fisubs
jmp
inc
jb
subl
push
jge
sbb
dec
je
xor
lcall
cmpsl
mov
dec
push
test
adc
scas
sbb
sahf
jle
scas
xchg
test
fwait
xor
jae
jns
push
mov
fcompp
xor
mov
pop
push
pop
or
pop
movsb
pop
cmpsb
test
pop
pop
rolb
pop
jecxz
fsubs
adc
xor
add
jbe
in
inc
int3
inc
push
dec
pop
pushl
cs
lcall
xchg
and
jbe
mov
cmp
sarl
lcall
add
dec
mov
push
pop
sub
das
lock
cmpsb
jne
sbb
push
jae
or
gs
push
das
scas
jo
imul
dec
or
sbb
lods
inc
inc
jl
jmp
dec
jle
cmp
push
call
shrb
pusha
dec
stos
mov
dec
sbb
outsl
test
or
test
pop
pushf
sbbl
mov
pop
mov
hlt
push
mov
mov
stos
stos
xor
adc
sbb
push
inc
dec
jbe
data16
ss
stc
adc
int
xchg
sbb
aad
cmp
jecxz
lcall
add
or
shrb
shlb
stos
aam
inc
test
mov
sub
jb
fwait
and
xchg
add
fdivrl
int
fwait
icebp
push
rorl
sbb
stc
add
fidivs
dec
test
fimuls
and
dec
jecxz
scas
out
push
and
sbb
mov
jo
movsb
js
loopne
xchg
dec
clc
jbe
sub
sbb
fstl
lret
rcl
pop
push
cmp
ret
shr
jbe
mov
ds
iret
sbb
imul
sub
jge
lahf
add
jle
sub
divl
dec
orl
pop
pop
jecxz
jns
sub
mov
mov
and
mov
jg
mov
out
cmp
xchg
dec
in
das
icebp
jnp
inc
push
and
inc
xor
out
mov
xor
popf
loope
xor
aad
and
push
push
cmp
dec
xchg
add
mov
aad
cld
jg
push
push
je
mov
jns
push
adc
pop
into
sub
jae
and
xor
and
and
adc
cmp
daa
cwtl
outsb
cmpsl
les
push
add
xchg
je
jne
cmp
inc
xlat
aad
fisttpl
mov
icebp
push
shr
push
pop
mov
mov
inc
pushf
pop
fmul
jbe
stos
inc
sub
imull
or
aaa
int3
pop
jmp
ds
xchg
sub
lods
adc
mov
lds
push
ret
fcoml
push
jno
stos
mov
js
out
outsl
iret
aam
xchg
xchg
shrb
sub
cltd
testb
std
cmp
push
std
pushf
push
jle
xchg
rcll
mov
or
pop
inc
hlt
dec
mov
das
xchg
jge
jg
addl
sahf
push
or
dec
jbe
dec
es
sub
arpl
js
addr16
addb
adcl
or
int3
cmpsl
mov
out
xchg
lret
or
push
mov
jmp
mov
inc
dec
out
mov
jne
adc
fcom
push
cmp
aam
test
dec
roll
lret
cmp
mov
pop
push
mov
ja
jge
mov
arpl
cmp
mov
or
add
add
pop
mov
and
pop
fistps
jo
jns
xlat
repz
scas
inc
mov
fcoms
xchg
jl
lock
scas
popa
repz
das
call
push
adc
rcrl
inc
dec
fldt
stc
xchg
inc
adc
test
dec
addr16
add
imul
das
lret
int
sahf
frstor
lods
jl
addr16
aaa
sarb
cmp
lret
dec
and
dec
mov
sbb
std
inc
xchg
push
mov
push
add
adc
sub
add
pop
adc
or
rcl
mov
aam
int
mov
aam
dec
dec
fs
push
mov
push
xchg
pop
daa
sbb
mov
jb
dec
cmpsl
jmp
cmp
adc
mov
dec
insl
dec
sbb
ret
xor
pop
imul
mov
inc
xchg
stos
insl
xlat
xchg
lods
out
or
pop
dec
js
hlt
push
adc
scas
xor
sub
mov
pop
shlb
lods
ret
in
fildl
in
jno
mov
and
ja
fsubrl
popa
rcrb
shlb
cli
test
xor
jmp
pop
xchg
jmp
jp
test
cmp
in
push
incb
inc
mov
inc
mov
adc
and
int3
mov
jo
adc
mov
mov
xchg
cld
repnz
or
repnz
mov
das
mov
enter
test
push
and
mov
cwtl
add
push
jno
add
sbb
push
test
cmp
xchg
das
sub
std
and
outsb
in
out
adc
adc
mov
mov
nop
iret
or
dec
inc
mov
clc
adc
mov
jmp
int
lcall
and
adc
test
outsb
ljmp
xchg
mov
add
mov
sbb
push
test
adc
dec
push
ret
test
jnp
inc
in
sbb
in
movsb
callw
mov
xchg
in
and
inc
orl
jge
mov
ret
push
ficomps
lcall
nop
cmpsl
cmpsb
ja
pop
mov
cs
mov
mov
sub
jo
sub
cmp
push
inc
xor
add
sbb
pusha
repz
fwait
and
test
imul
mov
mov
sub
mov
mov
pop
xchg
iret
imulb
fsubl
push
imulb
and
mov
popf
sbb
out
and
push
and
mov
fldenv
test
cmpsb
cmp
aad
imul
lcall
mov
out
ret
je
les
xchg
mov
repnz
stos
insb
inc
mov
jecxz
adc
popa
icebp
mov
sbbl
ffreep
data16
xchg
repnz
insl
pop
push
bound
adc
clc
aam
loop
notb
mov
jnp
xchg
cmpsl
xlat
add
adc
mov
sbb
inc
push
cmp
mov
cmpsb
int
pop
lock
ret
popa
xor
popa
movsb
out
mov
fwait
arpl
cmpsl
mov
cwtl
push
addr16
popf
ficompl
mov
pop
jl,pn
ja
cmpsl
insl
xchg
cld
and
das
add
inc
cmp
xchg
add
lret
push
adc
adc
push
in
xor
push
adc
inc
ret
push
loope
adc
insl
jmp
xor
cld
jne
ds
add
lcall
aaa
lock
into
out
outsb
fbld
mov
inc
adc
rol
mov
and
sbb
mov
shl
jne
jno
adc
test
pop
cmp
add
jbe
mov
jmp
cmpsl
sar
outsl
mov
mov
xor
jge
je
lods
test
xor
jp
or
sbb
add
jnp
loopne
mov
pop
inc
ss
push
cmp
xchg
rorb
or
xor
pop
pop
dec
mov
and
aas
sub
ss
out
dec
push
jb
push
cmc
mov
pop
xor
adc
out
dec
sub
insl
mov
sarb
insb
cmp
mov
stc
stc
movsb
sahf
and
outsl
sbb
mov
push
jne
adc
addl
mov
dec
dec
insl
xchg
out
push
push
dec
jecxz
cmp
cmp
cwtl
jne
mov
mov
mov
xchg
dec
mov
data16
iret
cwtl
add
lods
jmp
out
int
lret
xchg
out
xchg
or
nop
leave
shlb
js
fadds
pop
mov
xor
mov
and
pop
cltd
xchg
fisubl
and
mov
xchg
xor
dec
jbe
jo
lret
cmp
lea
push
movb
add
add
call
scas
mov
jo
or
stc
stos
test
jmp
in
push
sbbl
add
mov
or
sarl
sbb
push
rcrb
jl
xor
add
pop
lock
outsb
lret
dec
mov
loopne
cs
movsb
or
and
and
push
testl
lods
cmp
sub
jnp
sbb
inc
sub
rolb
jge
out
jg
or
vaddpd
mov
testl
xor
cmc
cwtl
xor
shrb
add
rcr
xor
sub
ja
dec
pop
mov
in
mov
addr16
or
ret
shrl
push
jns
add
cmpsl
xorl
pop
stos
nop
pop
sub
sub
fcoml
sub
pop
pop
loop
enter
orl
mov
jge
stc
ljmp
and
aaa
xchg
push
cmp
sub
mov
fwait
inc
dec
loopne
rclb
or
jmp
sbb
pop
jmp
and
ds
sbb
add
adc
or
stc
mov
nop
ret
mov
cmpsl
sub
sub
sub
cs
and
scas
or
ss
inc
sub
pop
jo
xor
out
aaa
and
rolb
out
or
inc
xchg
movsb
inc
dec
ljmp
cmc
jmp
dec
xor
mov
scas
insb
clc
push
dec
push
sbb
pop
dec
sbb
popf
pop
stc
int3
lods
jne
push
cmpsb
fwait
inc
cmp
jb
mov
push
fdivrs
cwtl
pushf
jnp
fs
idivb
xchg
nop
sbb
iret
frstor
xor
test
hlt
insb
int3
xor
push
or
adc
cmp
jb
xchg
xchg
inc
mov
xchg
stc
mov
xlat
jle
mov
test
sbb
mov
int
mov
je
hlt
mov
daa
cmp
and
fs
loopne
xor
sbb
inc
dec
pop
aam
leave
je
mov
mov
jns
pop
aam
ret
ficoml
sbb
xchg
rcll
lret
jne
ret
fildl
shlb
xchg
cmp
lcall
outsl
cmc
mov
dec
jno
cli
or
mov
lret
sub
adc
out
out
pop
sub
sbb
jp,pt
loopne
jmp
or
dec
add
pop
jnp
movsl
push
mov
pop
pop
mov
xchg
jecxz
fwait
jg
jge
xchg
push
cmp
adc
ficoml
aaa
shrl
sub
mov
jmp
addr16
adc
pop
stos
mov
push
jne
lea
bnd
bound
fists
les
inc
pop
cs
push
mov
sbb
mov
bound
or
pop
mov
sbb
push
mov
mov
jmp
stos
aas
xor
fs
call
stos
cmp
adc
xlat
mov
dec
xchg
lret
popa
das
stc
mov
xchg
leave
mov
lret
fdivp
in
push
pusha
xorl
mov
adc
movsl
fidivrs
icebp
jle
push
lret
lahf
xchg
adc
fiaddl
mov
mov
ret
shrb
test
xor
cmp
xor
sbb
fdivrs
pusha
mov
mov
andnps
jb
loop
adc
cs
in
adc
xchg
mov
lods
dec
imul
dec
std
xchg
iret
mov
xor
pushf
adc
in
into
mov
incb
ret
mov
pop
jne
cmp
sbbl
les
dec
shll
push
into
scas
fwait
sub
xchg
dec
fisttpll
mov
test
inc
aad
orb
pop
in
cltd
inc
movsb
pusha
sub
lock
hlt
inc
sahf
cwtl
sub
fnclex
jne
jns
cwtl
dec
mov
out
fisttpll
jg
or
and
push
js
and
cltd
iret
mov
push
mov
xor
clc
shll
inc
icebp
sbb
lock
push
dec
mov
or
arpl
in
test
rcll
mov
fiaddl
inc
mov
lret
lods
cmp
test
jno
pop
or
cmp
and
icebp
and
popa
aad
aaa
jb
lea
mov
jne
movsl
jp
sub
cmpsb
mov
das
inc
ret
fcoms
xlat
mov
jmp
pop
rcll
inc
pop
or
jno
and
mov
xchg
loop
cwtl
ljmp
pop
fcoml
pop
outsl
leave
cmpsl
mov
mov
dec
pop
out
mov
push
fwait
jns
loop
loop
outsb
push
repz
insb
or
xchg
mov
adc
rolb
inc
pop
lret
out
pop
and
or
mov
je
data16
in
mov
imul
insb
mov
repnz
xchg
stc
xor
leave
pop
sub
mov
pop
js
push
jbe
pushf
cmp
dec
mov
mov
ja
cmpsb
and
mov
mov
add
sub
dec
jno
cmp
cmpsl
push
dec
mov
and
lds
mov
rclb
push
xchg
jae
es
and
les
in
shrl
adc
les
js
scas
ja
pop
mov
sarl
test
jnp
out
mov
and
arpl
sbb
jo
inc
and
enter
mov
or
cmpsl
ret
cmp
push
push
les
xchg
hlt
ficoms
cwtl
adc
or
loop
stos
sub
popa
loop
fbstp
adc
mov
movsb
inc
std
xchg
imul
xor
lods
popf
adc
jmp
adc
out
cmp
and
stc
daa
test
sbb
cld
ret
clc
arpl
jmp
mov
inc
push
push
clc
pop
adc
arpl
stc
xor
pop
jno
shlb
rclb
mov
clc
jo
sub
cs
push
mov
pmaddwd
outsl
cmp
xchg
fcoml
jp
int
sbb
nop
lds
push
shlb
push
pop
aad
mov
inc
pop
ja
out
or
mov
icebp
decb
in
sub
or
loop
jnp
sbb
cmp
add
adc
ret
orl
fidivl
daa
or
mov
shrl
pop
int
ret
mov
or
jne
es
xchg
add
test
mov
push
mov
xor
jecxz
out
xlat
dec
push
shl
cmp
jno
and
test
lcall
lds
enter
int
test
aam
sbb
pushw
enter
mov
xchg
jmp
popf
iret
cmp
add
out
xor
pop
aas
xchg
jne
jge
lods
dec
enter
std
mov
rorl
in
je
and
loope
mov
mov
jp
lcall
jb
push
inc
aad
pop
insl
pop
pop
outsb
pushf
sbb
pusha
iret
dec
adc
inc
enter
adc
cmpl
test
mov
adc
push
mov
jge
dec
xor
gs
sbb
pop
adc
loop
push
mov
popw
mov
out
xchg
test
and
xor
test
outsl
loope
adc
test
xchg
das
subb
stc
test
les
stc
aas
mov
sub
jp
and
push
xchg
xchg
pop
call
and
int
clc
adc
xchg
xchg
mov
pop
push
insl
adc
rorl
jo
jne
mov
adc
pop
aam
xchg
dec
inc
out
pushl
decl
and
stc
jne
xchg
cmp
es
push
scas
shlb
sbb
cmc
or
add
mov
test
xchg
mov
rcll
scas
or
jmp
sbb
movsb
cltd
test
adc
cmp
lret
mov
fnclex
lock
jecxz
and
pop
sbb
int
jne
sbbb
cwtl
mov
dec
dec
into
stc
pop
xor
std
pop
xchg
sbb
test
sti
lret
push
pop
pop
jns
sub
sti
sub
lahf
push
pop
scas
dec
mov
inc
lods
loop
and
cli
mov
pushf
aad
jo
xlat
or
push
sets
dec
dec
push
xchg
jo
sbb
mov
push
or
orl
xor
mov
push
cld
shl
inc
rolb
pop
xor
jb
mov
in
mov
push
mov
mov
mov
xchg
std
push
aaa
add
adc
adc
xor
in
push
es
add
dec
es
fdivrl
mov
adc
mulb
iret
push
xor
daa
jle
mov
mov
pop
test
pop
in
sub
pop
ja
iret
cmp
xchg
addr16
inc
jns
out
fnsave
xchg
mov
jnp
mov
pop
aaa
adc
insl
cmp
rcrl
cmpsl
out
ja
add
cmc
mov
lret
jb
pop
jae
pop
mov
daa
fcmovbe
aam
dec
xlat
shl
jno
addr16
push
repnz
pop
jnp
cmp
pop
in
out
lods
cs
sub
push
and
fnstcw
rorb
movsb
popa
sub
or
fidivl
imulb
lret
xchg
pop
std
xchg
fmuls
popf
cli
mov
incb
jns
mov
xor
flds
push
test
push
out
pop
and
test
lods
shlb
dec
cmp
jbe
aad
icebp
mov
xor
pop
adc
mov
das
insl
int3
push
into
sbb
adc
sub
scas
add
popa
das
xor
and
adc
aas
and
lret
into
cmp
cmp
sub
in
cwtl
mov
inc
push
mov
add
inc
ljmp
cld
mov
cmc
jne
add
adc
inc
dec
inc
and
fiadds
pop
mov
pop
es
pusha
popa
mov
aaa
xor
mov
xor
ds
fisubrl
inc
mov
xchg
outsl
subl
insb
movsb
lods
lret
loopne
movsb
pop
inc
mov
movsl
push
add
in
outsb
loope
xor
or
cs
fs
addl
shll
and
adc
arpl
outsl
lock
or
iret
push
sub
lock
in
xchg
adc
enter
lahf
cmp
es
sbb
daa
mov
cmp
pushf
pop
xchg
addr16
int
mov
test
push
aam
pop
mov
repz
ret
inc
icebp
mov
imull
mov
xchg
push
leave
stos
lock
test
jle
std
fdivrl
or
xor
jno
mov
add
popf
fstpt
pushf
fcoml
int3
sbbl
fstl
daa
fstpl
dec
pop
adc
rcl
test
add
pop
adc
push
fs
cmpsl
cmp
cmpsl
rorl
fisttpl
adc
shl
fldl
jne
add
mov
jge
mov
or
mov
sub
inc
inc
stc
imul
push
les
pop
mov
xor
rol
std
popa
or
mov
pop
cmp
daa
and
jbe
int
jl
cwtl
in
cmpsb
lods
pop
in
pushf
xchg
adc
adc
test
mov
popa
sbb
pushw
dec
sub
add
icebp
mov
icebp
cmp
int
adc
inc
cmp
loope
fisubrl
jmp
ret
push
lock
push
cmp
xor
or
inc
pop
push
dec
and
stos
cmp
dec
rol
jle
test
mov
jno
push
addr16
scas
cmpsl
dec
and
inc
pop
fninit
push
aad
pop
mov
dec
lock
les
mul
dec
in
mov
mov
jmp
pop
sub
loop
sbb
fsts
adc
movd
shrb
outsb
and
sub
es
push
lock
sub
pop
cmp
or
gs
xchg
pop
or
sti
js
jae
cmp
test
fidivrl
mov
jo
cmp
sub
jle
sahf
das
shl
and
or
mov
std
mov
addr16
shrl
push
jne
pop
sbb
dec
aad
dec
pop
nop
pop
ljmp
fisttpll
pop
jmp
int
sbb
iret
xchg
lods
sti
lahf
or
or
jno
jecxz
add
test
mov
clc
push
mov
call
sub
aam
lock
pop
inc
out
sti
cmp
jno
xor
dec
adc
dec
jge
cwtl
jg
inc
sbb
movsb
add
cmp
das
jle
xor
out
mov
cmp
ficompl
sub
mov
in
ljmp
jge
sub
add
sti
aam
test
aas
and
ret
or
popa
fdiv
mov
mov
mov
popf
lret
fstl
add
dec
dec
sub
add
sti
push
mov
daa
add
jnp
test
out
sbb
inc
mov
xchg
shl
push
ret
xchg
xchg
insl
frstor
sub
inc
stc
in
inc
xchg
push
adcl
lods
adc
ret
cli
ss
aaa
fisubs
or
cmc
cmp
and
inc
sub
mov
cmp
jl
cmpsb
xor
aam
out
movsb
xchg
pop
fcomps
daa
pusha
je
jge
clc
pop
fwait
xor
xchg
dec
cmpsl
repnz
adc
lock
dec
stos
and
adc
sub
enter
rcr
lock
inc
xlat
imul
mov
stos
inc
jns
es
in
mov
cld
sub
mov
mov
adc
cmp
push
cld
decl
cmpsb
into
adc
cld
repz
pop
dec
mov
lods
fldenv
inc
ret
leave
in
add
add
adc
cs
sub
into
sub
lahf
movsl
adcb
push
mov
add
inc
clc
aad
mov
adc
out
cmp
push
fists
inc
mov
fs
std
pusha
push
mov
fpatan
inc
sti
bound
push
cmc
jno
divl
mov
cmp
js
mov
jae
pop
pushf
xor
fldt
jns
mov
jl
pop
push
ds
sbb
adc
pop
jb
rcl
cmp
add
cmp
inc
rorl
push
push
or
push
imul
rolb
mov
imul
fmul
sub
and
bound
popa
sub
jns
lcall
dec
cwtl
insb
jp
es
lods
sbb
pop
mov
sbbl
pusha
inc
dec
jl
inc
inc
push
adc
jmp
cmp
sbb
dec
xchg
adc
xchg
test
dec
jg
test
push
xchg
push
push
in
scas
cmpsb
inc
daa
cmp
sbb
das
fisubs
lahf
fsubs
mov
ljmp
test
or
aam
ljmp
ss
xlat
movsb
shrl
mov
push
jge
mov
out
and
fidivl
icebp
imul
pop
sbb
push
loop
inc
addb
mov
cmp
sub
mov
cwtl
push
adc
scas
loopne
in
jg
out
inc
cli
into
in
mov
stc
pop
sarl
outsl
les
pop
push
and
push
dec
pop
mov
pusha
adc
pop
cmp
mov
out
cmp
es
add
insb
not
rcl
xchg
or
mulb
jae
dec
push
sub
loope
push
fisubl
and
sahf
push
xor
aam
xor
popf
cwtl
mov
outsl
jo
mov
jnp
jecxz
inc
mov
lds
jmp
jp
andl
xor
int
jae
lods
cld
xchg
scas
stos
add
xchg
mov
inc
and
sbb
clc
jl
sub
mov
adc
inc
out
push
nop
pop
cmpsl
out
add
pop
out
scas
shld
shrb
xchg
in
mov
ljmp
dec
sbb
or
xor
dec
pop
mov
inc
scas
je
dec
mov
cwtl
clc
jmp
add
mov
xchg
adc
sbb
repnz
out
adc
lods
int3
sub
mov
xchg
int3
mov
daa
pop
loop
cmpsb
push
fisubs
mov
les
dec
jecxz
and
hlt
pop
jp
test
les
stc
push
imul
stos
inc
adc
mov
leave
fsubrs
mov
sbb
pop
pop
shll
icebp
in
sarb
cmpsl
testb
mov
imul
movzbl
dec
rcrl
add
lods
loopne
mov
lcall
data16
cltd
xor
lock
xchg
jbe
addb
clc
mov
xchg
test
jo
cmp
cmc
dec
sti
pop
fidivrl
sub
dec
cltd
add
std
or
inc
mov
cmpsb
mov
shlb
mov
in
test
lret
or
aaa
dec
ds
cmp
fnstsw
insb
outsl
in
dec
sbb
xlat
rcrb
and
push
dec
inc
xor
pop
stc
xchg
dec
mov
in
fcompl
ja
pop
repnz
jecxz
dec
out
push
adc
fsubrp
xchg
out
xor
add
int
add
inc
ja
test
sub
je
daa
and
push
testb
and
daa
push
add
push
cmp
adc
negb
dec
insb
int3
sbb
rol
xchg
test
jo
fmuls
sbb
pushf
xchg
sub
sbb
or
dec
mov
rcl
push
mov
jmp
aam
jae
or
push
mov
or
sbb
aaa
sti
jno
loope
sbb
sub
lea
and
insb
dec
push
sbb
in
and
addr16
push
jne
inc
pop
xchg
test
or
fistpl
mov
je
rorl
loopne
lret
sbb
mov
clc
sbb
mov
lahf
sub
pusha
sub
decb
pop
lods
rcr
aad
cld
jmp
aad
repnz
mov
shl
or
testb
or
out
lret
repnz
cmp
rcll
push
push
rorb
xor
mov
push
pop
xor
add
sub
xorb
mov
out
dec
movsl
shlb
push
test
mov
pusha
popf
ljmp
xor
mov
mov
lret
jo
sub
dec
fisubl
mov
xchg
adc
push
in
xchg
xchg
data16
repz
outsb
mov
push
pop
push
xlat
mov
and
lds
iret
mov
inc
mov
lods
sub
mov
sbb
js
cmp
pop
mov
jne
stos
mov
adc
push
sub
or
sahf
add
cli
scas
sub
cmp
ljmp
aaa
mov
sbb
adc
mov
mov
int
mov
and
ss
in
sahf
outsl
aaa
jl
lahf
mov
pcmpgtd
fwait
lods
out
xchg
scas
call
xchg
cs
sbb
inc
cmpsb
fldl
xor
pop
lock
jbe
xchg
arpl
insl
repnz
pop
dec
loop
or
xor
rcl
popl
adc
jg
sti
jl
bound
sbb
jo
jg
clc
adc
fsubl
cmpsb
mov
sbb
jg
add
mov
xor
xor
aaa
dec
sarb
push
mov
inc
xor
push
scas
sub
cmp
push
icebp
jge
out
jne
rorb
inc
push
cmp
push
cmc
outsl
or
xor
mov
or
mov
cmpsl
icebp
dec
stos
bound
rcrb
out
cmpl
push
adc
rorl
inc
insl
addl
faddl
xchg
jle
jne
push
mov
in
push
fxch
lahf
repz
mov
dec
inc
lock
dec
sub
xor
mov
sub
js
ljmp
mov
mov
xchg
xor
xchg
add
push
dec
inc
pop
pop
and
inc
cmp
fistpl
and
sub
add
xor
push
xlat
jne
mov
xchg
js
push
xchg
pop
jle
aad
sub
sbb
sbb
pop
es
dec
or
lcall
mov
fidivrs
dec
lcall
pop
shll
dec
cmp
outsb
fbstp
sbb
cmpsb
ss
sbb
out
xchg
adc
push
dec
and
push
cmc
popa
pushf
xchg
push
cwtl
inc
mov
rorb
lret
and
jae
cli
mov
in
cltd
cmpsb
scas
push
imul
jno
lods
push
mov
popf
push
cmp
push
imul
in
repz
jne
cltd
sub
repz
fsubs
and
jecxz
lret
dec
out
jbe
adc
or
mov
jg
js
fiadds
jbe
push
outsb
mov
xchg
push
lahf
adc
sub
cwtl
xlat
jae
les
into
pand
jl
push
lods
jnp
inc
mov
mov
mov
dec
dec
inc
es
fdivrs
cmpsl
pop
mov
popa
and
out
loopne
mov
test
dec
movsl
mov
inc
insb
int3
lret
xchg
xchg
sbb
push
mov
jecxz
arpl
xor
lods
arpl
mov
mov
stc
xor
pusha
lahf
or
cmpsl
inc
aas
subb
pop
ja
adc
cmp
adc
cltd
scas
cmp
cmpsb
ja
mov
mov
dec
push
aam
mov
sbb
loopne
shr
jle
mov
dec
adcb
jge
call
into
pop
movsl
mov
lea
sub
push
mov
sahf
xor
mov
mov
pushf
dec
frstor
inc
pop
mov
jge
movsb
xor
add
mov
shll
push
ljmp
mov
mov
adc
lret
cwtl
pop
repz
fnstsw
add
lods
fnsave
out
sub
pop
test
test
pop
push
pushf
lock
jecxz
mov
mov
xchg
int
test
cmp
mov
shrl
in
in
rcrb
in
insb
xor
jb
jnp
sbbl
sbb
mov
outsl
mov
add
dec
pusha
sub
testb
je
and
mov
subl
sahf
inc
subl
mov
jecxz
stc
mov
movsl
lret
mull
outsl
lret
cmp
or
repnz
xchg
ljmp
aad
outsl
pop
roll
sub
or
std
pop
sbbl
loop
ss
mov
sbb
adc
inc
cmp
and
sbbb
js
or
popl
pop
out
push
xchg
mov
push
push
cmp
jae
test
sub
scas
fcoml
or
push
or
mov
lods
ret
push
addr16
sbb
cmp
movsl
jge
fs
add
add
or
in
and
cli
and
popa
add
rcrl
lods
jmp
insl
in
cltd
and
jb
nop
test
xlat
hlt
pop
fwait
cmc
dec
dec
jecxz
mov
mov
scas
inc
dec
jae
ret
fmulp
adc
and
test
dec
dec
sbb
jnp
push
rclb
sbb
lods
jne
add
inc
fs
jg
das
cs
out
inc
stc
push
scas
test
js
cmpsl
int
shrb
js
mov
lret
out
cmp
scas
fisubl
stos
insl
inc
hlt
sbb
orb
mov
adc
mov
out
jnp
xchg
push
ret
js
dec
fimuls
xor
lahf
nop
xor
mov
ljmp
inc
movsl
ret
add
jnp
jo
mov
add
sub
xchg
xor
pushf
sha256msg2
xchg
es
jg
pusha
push
sub
dec
push
xchg
cli
xchg
cmp
xor
push
push
shll
aam
imul
repz
jp
into
push
adc
mov
push
or
xlat
push
pop
lret
out
clc
sbb
fdivs
bound
mov
rcr
frstor
mov
mov
rclb
dec
mov
stos
sbb
push
xor
cmp
or
add
imul
or
cmp
out
arpl
out
sbb
jb
pop
sbb
sbb
mov
cmp
bound
adc
mov
aas
dec
lcall
data16
jnp
imull
xor
mov
addb
xchg
ss
data16
aas
leave
and
jae
cmp
or
cld
gs
les
movsl
les
cmp
dec
pop
jns
in
movsl
mov
bound
lcallw
dec
mov
or
sarb
pusha
push
xchg
xchg
or
mov
dec
fmulp
inc
scas
mov
sar
out
cmp
pop
in
cmp
dec
sub
cmp
sti
pop
or
mov
push
fwait
jl
fs
or
xlat
adc
ret
fidivs
cld
and
fsts
inc
xchg
setbe
jbe
xchg
jge
jno
or
xlat
pop
leave
bound
sbb
sarl
push
repnz
gs
add
call
in
mov
aaa
or
mov
out
test
cmpsw
jns
int
cltd
sbb
xor
fsub
iret
leave
or
pop
pop
pop
cli
cmpsl
xchg
push
jmp
fildll
xchg
sarb
push
push
shll
faddl
cmp
popf
adc
xchg
popf
lcall
scas
daa
aam
cltd
test
push
fildl
pushf
sbb
ss
into
cmp
cmc
dec
scas
test
pop
in
mov
xor
fwait
mov
aaa
test
lods
ds
lcall
movsl
adc
mov
pop
mov
mov
mov
push
mov
sub
and
fldenv
and
les
daa
data16
pop
cmp
cmp
jmp
jge
xchg
mov
iret
dec
stos
pusha
fcmovnbe
push
xor
push
sbb
pop
pop
cmp
test
fadds
dec
xor
fcoml
adc
mov
dec
add
lds
sti
or
mov
mov
fsubs
icebp
sbb
pop
imul
ds
xchg
dec
cmp
jl
dec
adc
or
inc
jecxz
shl
jmp
push
cmp
in
aad
jb
loop
add
into
pop
enter
pop
stc
sbb
sbb
pop
push
in
dec
pop
popa
inc
stos
add
outsl
adc
dec
cmp
jg
sbb
sub
jbe
cltd
mov
adc
inc
push
lods
mov
sub
lahf
into
sbb
pop
test
mov
mov
int3
bound
js
ds
pop
cmp
and
dec
rorl
sbb
and
pop
sub
sub
xchg
int
fwait
rcrl
aad
sbb
imul
cmp
sbb
scas
imul
fsub
fsubrs
or
dec
dec
cwtl
sub
insb
jae
mov
addl
loopne
or
mov
movsl
loope
rcl
push
mov
in
aas
sbb
fimull
xlat
jnp
or
xchg
cmpsl
cmp
pushf
dec
push
and
mov
imul
pop
sti
lods
repnz
xor
insl
xchg
js
inc
test
sub
jmp
sahf
pusha
popf
rolb
pop
test
jecxz
xor
pop
idivl
imull
out
or
and
aas
lock
pusha
fisttps
mov
or
sbb
into
fldlg2
jg
push
scas
leave
outsl
push
out
push
jecxz
xchg
in
xor
and
mov
sub
jg
xor
mov
movl
in
and
add
int3
mov
fldl2t
repz
cld
ja
inc
fisubl
in
adc
cmp
fisubl
push
andl
sbb
ret
pop
aaa
into
in
call
insb
ss
ds
xor
sbb
dec
mov
xlat
jl
dec
rcrl
out
fcmovnb
imul
or
mov
out
into
les
jne
cs
mov
jmp
xor
mov
add
out
mov
mov
rolb
xor
adc
pop
ret
dec
iret
mov
fcmovnbe
es
addr16
or
pop
lods
cltd
cmpsl
xor
or
test
mov
xchg
xchg
repnz
addr16
dec
or
push
push
dec
add
dec
add
adc
jge
mov
and
ja
in
sti
clc
cld
dec
lcall
lods
dec
add
adc
adc
and
scas
lcall
jnp
cmp
icebp
sbb
cs
pop
stc
inc
in
mov
sbb
push
xor
and
push
aam
sahf
push
cltd
loope
mov
pop
mov
pop
cmp
inc
ds
mov
cltd
pop
iret
scas
lret
dec
dec
addb
mov
cmpsl
xchg
sbb
shlb
out
cmpb
xor
movsl
mov
or
add
adc
mov
insb
scas
nop
andl
mov
mov
fbstp
repz
loopne
mov
cmp
pusha
cmp
ja
pop
dec
xor
mov
push
xchg
or
and
outsl
aad
cmp
popf
sbb
xlat
sti
jbe
add
subl
xchg
xchg
imul
jp
sahf
imul
fisubs
loopne
jnp
shll
adcb
jg
lahf
or
inc
pop
and
add
jns
arpl
xor
aam
test
mov
adc
push
dec
jb
mov
insl
lock
stc
rol
xchg
dec
jbe
iret
sub
popf
xchg
mov
aam
mov
pop
dec
int
mov
sbb
popa
cmp
xchg
jns
sub
cli
jmp
fisttpl
inc
pop
sub
add
push
xor
mov
xchg
cli
and
cmp
loopne
mov
inc
idivb
mov
xchg
jb
das
cmp
ja
cmpsb
das
lret
enter
jecxz
daa
push
in
dec
sub
cli
or
inc
movsb
mov
loop
aaa
ja
jne
test
jle
loope
ss
arpl
push
push
test
mov
jge
mov
push
pusha
pop
xchg
mov
xor
lcall
xor
iret
lcall
ret
into
sbb
mov
or
pop
mov
and
xor
pop
dec
push
jmp
xchg
cmpsb
in
fiadds
pop
in
repnz
sub
loop
dec
mov
pop
or
pop
sub
push
cmp
jno
scas
adc
test
fwait
shl
sub
cmpsl
jbe
sbb
fdivs
ds
mov
sarl
adc
inc
or
add
inc
cmpsb
fdivrl
push
rcll
sbbl
data16
das
sbb
and
mov
popa
jbe
or
xchg
mov
inc
in
sbb
jno
jns
aad
xor
sub
xchg
cltd
mov
ljmp
sub
aas
lods
sub
fcomip
imul
sbb
pop
mov
jle
xor
mov
xchg
cmpsb
daa
nop
mov
mov
dec
popa
sub
push
pop
adcb
clc
xor
inc
cmp
and
pop
hlt
mov
push
mov
cmp
cwtl
cvtpi2ps
js
or
ss
movsl
mov
sarl
mov
in
sbb
icebp
adc
adc
mov
inc
daa
cmc
adc
mov
xchg
jg
movsl
xor
pusha
cmp
jne
fs
xchg
iret
pop
mov
jp
cld
jne
mov
add
scas
sahf
and
scas
sub
sti
aas
sbb
int3
xlat
std
popa
adc
jo
fs
dec
dec
insb
push
movsb
mov
repz
pop
push
adc
add
push
jge
or
scas
jl
imul
inc
add
add
faddl
fcoml
sbb
aaa
loopne
xchg
bound
test
popf
or
add
mov
sahf
push
adc
out
pop
sbb
rorl
mov
jmp
pushf
scas
xorl
or
sbb
jae
sub
and
jb
pushf
push
cmp
int
pop
ret
sub
xchg
xchg
mov
jecxz
stc
lcall
xchg
mov
mov
jne
xchg
mov
sub
ds
pop
xchg
mov
add
adc
sbb
lods
ljmp
shlb
aaa
cmp
out
sbb
jns
pop
subl
cmpxchg
mov
pop
insl
test
xor
xor
pop
test
out
stc
cmp
mov
pop
pop
pop
int
test
fistps
mov
icebp
mov
sbb
jo
xchg
jb
mov
int
pop
jp
cwtl
xchg
pop
mov
dec
cmp
jl
cmpsl
push
or
mov
pop
fsin
push
into
jbe
pop
rcll
jo
rorb
sbb
adc
mov
out
leave
sbb
popf
sub
in
dec
jmp
jo
clc
lock
pop
sub
mov
inc
mov
mov
adc
lret
mov
movsl
rcrb
and
push
fsts
dec
add
xor
lds
inc
outsl
xchg
mov
adc
cmp
cmpsl
in
mov
faddl
aaa
out
cli
insb
lahf
push
call
ja
pop
push
pushf
lret
sub
pusha
mov
push
mov
xchg
arpl
out
ljmp
aam
push
dec
out
lods
lret
in
mov
ds
daa
in
dec
xor
inc
and
fs
clc
in
push
xchg
and
aad
lcall
scas
inc
push
ss
xchg
inc
mov
adc
je
subl
cmpsb
jmp
push
sbb
jmp
pop
js
ret
xchg
dec
mov
lahf
jl
lret
and
pop
shll
add
pop
iret
addr16
adcb
and
leave
aaa
dec
mov
call
test
or
popa
fmuls
lcall
inc
mov
ret
pushf
push
xor
repnz
adc
sub
out
jecxz
xlat
jge
push
or
repnz
das
pop
adc
inc
pop
cmpsb
mov
sbb
aam
cmp
push
mov
ljmp
xacquire
sbbb
sbb
ret
test
mov
push
cmpsl
xor
shll
insb
int3
shrl
aad
imul
les
cmpsl
push
lock
outsb
cmp
cmp
mov
data16
loopne
mov
cmc
inc
sti
mov
push
insb
aaa
es
push
cltd
or
rorb
cli
sbb
fistl
incl
pushf
sbb
fstpl
fisubrl
add
cmpsb
mov
xchg
push
rorb
pop
outsl
lds
pop
incl
push
xchg
js
xchg
imul
and
mov
ljmp
and
adc
sub
pop
insb
add
inc
outsl
lret
aam
cmp
cmp
icebp
inc
xor
iret
xchg
and
std
cltd
and
pop
into
mov
jbe
xor
push
mov
xor
sahf
push
cmpsb
fidivrl
imul
into
mov
sbb
movsb
mov
rclb
add
push
orl
push
inc
addr16
jl
sahf
out
sub
lods
ret
lcall
or
fwait
cmp
out
mov
iret
scas
push
add
int
adc
xchg
push
scas
add
inc
iret
add
adc
xchg
jg
fldcw
movsl
push
mov
aam
push
pop
cmp
adc
in
adc
adcb
outsl
mov
paddusw
sbb
push
hlt
pop
pop
daa
mov
pop
ret
jmp
jbe
jp
ret
cmpsb
cmp
jns
push
daa
insb
push
jae
popa
out
adc
pop
inc
adc
int3
inc
adc
cli
xchg
cmpsb
inc
jns
inc
fdivrl
inc
stos
mov
leave
sub
xor
inc
jecxz
xor
xchg
cld
repnz
dec
ss
ds
clc
pop
scas
leave
or
and
adc
outsl
sub
pop
or
adc
mov
mov
test
loop
or
mov
sub
mov
mov
dec
or
jle
lds
fcompp
in
push
fcmovu
adc
sbb
outsb
push
mov
sahf
xchg
ss
push
adc
xor
and
sub
mov
adc
test
vpshlb
inc
notb
bound
leave
dec
repz
lret
mov
cmp
fwait
mov
add
movsl
jne
mov
sbb
icebp
aad
mov
in
int
adc
xor
jo
popa
and
and
add
cmp
dec
and
dec
dec
pop
mov
lret
nop
dec
adc
xchg
adc
hlt
pop
and
dec
pusha
mov
or
sub
aad
add
es
lods
sbb
fisubrs
inc
aam
push
in
mov
int
insl
cli
iret
dec
loopne
cmpsb
jg
and
out
call
sub
fdivs
add
xor
and
cmc
mov
xor
lds
mov
fs
popf
aam
mov
or
andb
ja
rcr
add
pushf
or
pushf
push
and
sti
or
mov
movsl
fidivrl
jno
out
and
pop
imul
sub
mov
xor
lret
dec
icebp
sub
mov
jnp
and
and
nop
cmc
and
jl
das
popa
push
pop
inc
or
scas
imul
in
sarb
les
clc
pop
nop
popf
dec
pop
out
adc
clts
mov
dec
mov
mov
repz
and
jg
sub
xchg
rorl
pop
cld
in
iret
imul
scas
js
inc
int3
orl
mov
shll
das
push
ret
arpl
and
ljmp
mov
shlb
pushf
out
mov
or
mov
xorl
adc
cli
popa
js
cwtl
dec
popa
lahf
pop
mov
dec
push
lods
sub
xor
mov
fcmovbe
pop
xchg
xor
sbb
rcll
daa
nop
lahf
push
movsl
iret
fsubs
and
or
stos
jecxz
rcl
cmc
add
test
sarl
mov
les
pusha
xchg
aaa
and
mov
rorb
aaa
sbb
insl
inc
jmp
xor
cmpb
xchg
xor
mov
movsl
mov
ss
pop
fiadds
cwtl
and
mov
ljmp
arpl
adc
cltd
push
fiadds
clc
mov
xlat
pop
and
and
or
jno
add
lock
cmpsl
and
xor
popf
fiadds
lcall
add
lcall
outsl
fidivrl
cmpsl
or
push
lret
mov
mov
fmul
pop
mov
sbb
jb
push
mov
sarb
or
xchg
lret
lret
adc
add
jno
pop
push
or
or
mov
sub
mov
inc
cmpsb
mov
mov
popa
fwait
inc
sahf
mov
addb
and
cmpsl
leave
stos
pop
fidivl
sub
lcall
movsb
outsb
xchg
xchg
ljmp
mov
and
jnp
mov
fimull
es
push
pop
mov
popl
enter
jnp
push
cwtl
xchg
lgs
mov
ss
lcall
dec
or
jo
add
push
mov
mov
xchg
pop
std
mov
into
jns
js
sti
push
aad
repz
sahf
in
int
movsb
mov
bound
mov
xor
in
sub
xor
pop
xor
pop
movsb
in
mov
xchg
mov
pop
dec
add
int
mov
or
mov
xchg
mov
popf
xorl
std
push
mov
jnp
pop
imul
loope
enter
cmp
enter
push
add
and
jg
push
lock
xorl
push
into
cmp
testb
jae
out
cmp
mov
scas
pop
rorb
rcll
mov
add
ret
jae
ret
mov
jp
cmc
andb
cmp
dec
push
push
mov
mov
dec
push
cmpsb
add
aas
xor
push
ror
mov
mov
add
or
and
dec
sbb
mov
subl
xor
arpl
fsubr
jno
xor
sbbl
cwtl
mov
daa
and
pop
fwait
xchg
mov
jno
cmp
rol
bnd
lods
mov
fiaddl
aam
into
or
cmp
iret
daa
xchg
outsl
lods
arpl
loopne
mov
aaa
jne
ror
lea
enter
and
imul
enter
and
iret
mov
sbbl
fistpl
in
push
dec
out
sbb
mov
xlat
or
nop
mov
dec
es
jmp
lds
push
and
push
popf
ret
dec
loope
cmp
sub
adc
dec
pop
lds
adc
sbb
arpl
pop
in
xchg
stos
xor
fisttpl
iret
jo
call
xchg
ss
adc
loopne
std
pop
jmp
imul
pusha
lahf
mov
inc
sub
xlat
rorb
sub
push
movsb
popa
pusha
or
dec
jo
mov
xor
mov
lods
add
xchg
lea
add
cli
adc
std
je
inc
xor
pusha
test
adc
inc
rorb
pop
pop
xchg
fisttpl
iret
cmp
rclb
fdivl
sbb
push
xor
add
push
aaa
aam
cwtl
leave
push
dec
popf
in
ficompl
and
mov
cmp
cmc
mov
les
adc
imul
sti
cmp
add
cmp
movsb
stos
icebp
and
mov
dec
mov
xchg
fiadds
mov
sub
shrb
gs
push
outsb
push
push
jp
adc
mov
pop
mov
push
dec
fisubl
aas
xchg
mov
xchg
jb
repz
mov
fs
xor
jno
stos
dec
cmpsl
and
out
mov
cmpsb
cmp
dec
jnp
fadd
insl
xchg
add
mov
mov
pop
mov
scas
mov
pop
call
add
cli
into
rorl
mov
out
mov
mov
ja
ret
sbb
out
xchg
outsl
adc
mov
mov
push
lahf
push
into
or
outsb
sbb
mov
mov
rol
lret
and
and
leave
rorl
sub
sahf
inc
sbb
fistps
jl
xchg
dec
rcll
cmp
gs
ror
mov
test
xchg
xchg
add
push
andb
inc
mov
jp
int3
jle
imul
fbstp
dec
dec
gs
int
sbb
adc
xor
stc
lcall
mov
jnp
jmp
sub
adc
xchg
shrb
mov
jl
dec
daa
and
lds
sub
ja,pt
mov
rcll
jmp
fadds
test
out
movsb
aam
xor
icebp
inc
push
sub
js
cmp
adc
xchg
fs
xor
fisubrl
and
add
ficomps
pop
push
sub
mov
add
xchg
pop
aad
mov
pop
leave
xchg
outsl
lods
add
das
sub
adc
jecxz
xchg
addr16
mov
fstl
jg
sbb
jl
pop
out
sbb
cli
test
pop
push
inc
cli
call
add
mov
or
cmovno
jge
push
add
pusha
adc
cmpl
cmpsb
sbb
sbb
les
test
pushf
xor
push
pop
scas
mov
pop
imul
ret
sbb
fs
test
jns
cld
mov
mov
mov
testl
das
stc
test
fnstsw
push
jmp
mov
xor
mov
dec
push
xchg
xor
mov
lds
xor
mov
es
cmp
mov
jnp
sub
sub
and
sub
cmp
js
sub
fisubrl
jns
nop
leave
mov
pop
sub
push
arpl
mov
fbld
jle
add
dec
js
xchg
push
jl
stos
xor
push
nop
jg
es
testl
and
jno
adc
dec
stos
leave
out
adc
dec
repz
dec
jle
jb
pop
out
sub
cmp
sti
sub
ljmp
adc
mov
mov
pop
leave
subb
push
loope
out
into
fprem1
test
ljmp
ja
mov
fldcw
mov
inc
or
sbb
xor
cld
ja
sub
push
cmc
pop
stos
rcrb
fwait
scas
in
mov
jge
pop
insb
jns
or
int3
xor
fdivrl
add
xor
sub
imul
lods
sbb
jo
in
enter
lcall
stos
hlt
inc
ficompl
mov
and
push
pop
sub
cs
xor
ja
fwait
mov
add
xchg
push
lret
out
push
adc
pop
jp
mov
cmp
add
adc
jecxz
jnp
into
lea
ljmp
cmpsb
sbb
outsb
jbe
jb
sbb
cli
dec
sbb
xchg
mov
dec
sub
lret
enter
pop
das
xchg
les
xor
push
std
pop
dec
fcmovnbe
add
adc
and
movsb
popf
repnz
clc
xor
push
jnp
or
mov
xchg
fisubrl
pop
sub
sub
popf
mov
pop
inc
pop
xchg
jae
repz
fmul
or
lods
dec
test
xor
pop
mov
jmp
sbb
rorb
fwait
lret
in
test
adc
dec
push
adcl
pop
jae
adc
lods
push
jge
push
lock
push
lahf
jns
aas
xor
or
and
sub
pop
mov
mov
xchg
push
ja
shl
jns
rol
fucom
mov
icebp
sbb
out
dec
adc
mov
push
ret
fnsave
sbb
jmp
dec
jmp
mov
repz
ss
xchg
xchg
push
mov
fcmovu
iret
xor
push
test
icebp
xchg
sbb
pop
sahf
loope
xchg
int3
cmpsb
add
icebp
mov
sahf
sahf
or
xor
mov
adc
sbb
mov
adc
into
out
aam
and
cltd
lret
pop
lock
cltd
repz
pop
lcall
mov
daa
imull
push
testb
ljmp
repz
ljmp
stos
inc
xor
lret
lock
mov
test
add
sub
clc
in
pop
fs
jbe
push
loop
xchg
inc
fists
das
aad
pop
jno
cmpsl
stos
cmp
cli
sti
xchg
mov
mov
pop
lods
iret
scas
pop
adcl
cwtl
out
sbb
daa
dec
sti
mov
and
cmp
mov
dec
xchg
cmp
cmp
rolb
imul
jl
mov
test
adc
xor
aas
sbb
push
xor
ficompl
leave
adc
test
xor
jle
mov
sbb
loop
and
and
and
pop
cmp
add
and
repz
jecxz
sbb
and
jnp
pop
clc
cld
out
mov
das
lcall
sub
sahf
pusha
fwait
jge
dec
push
popa
fidivs
ffree
add
xchg
lcall
mov
ljmp
mull
jl
jo
jo
jl
xchg
decl
adc
mov
adc
inc
fldl
ja
jl
sub
stos
add
mov
xor
xchg
decb
movsl
push
jl
stos
jp
mov
mov
cwtl
in
jmp
aaa
lock
mov
inc
adc
xchg
cs
push
outsl
fimull
or
jl
push
lret
lods
aad
mov
push
mov
int3
dec
pusha
mov
loopne
stos
aaa
mov
jno
jb
ss
dec
and
imul
dec
and
mov
cmp
rorb
icebp
ja
mov
ds
pushf
cmpb
add
out
sbb
or
enter
stos
mov
xchg
mov
lea
leave
cmpsb
pusha
imul
es
inc
xor
add
lds
xchg
xor
push
pop
ljmp
mov
call
test
pusha
or
xorl
int3
xlat
dec
jg
dec
stos
ret
imul
push
hlt
repnz
bound
inc
fsubrs
rcll
jl
mov
and
js
pop
dec
filds
or
xchg
std
jecxz
cwtl
jmp
mov
inc
xchg
mov
jge
mov
stc
adc
iret
and
shll
test
icebp
hlt
lds
out
movsb
add
or
stos
mov
fldcw
fistpl
jecxz
fwait
outsb
pop
dec
fidivrl
pusha
xlat
shrb
test
call
scas
jmp
add
lcall
push
fsub
sbb
pop
mov
jbe
xchg
push
inc
das
scas
movsl
push
out
adc
inc
mov
xchg
xor
fsubl
dec
sbb
nop
sbb
mov
xor
inc
xchg
es
xor
ret
icebp
mov
adc
or
jge
loope
mov
cmp
add
fwait
dec
test
movb
lock
cwtl
jmp
mov
ret
mov
push
cmp
and
inc
fs
iret
inc
shll
cli
fnsave
lret
mov
inc
cmp
dec
sbb
and
pusha
cs
or
mov
xchg
fs
cld
cs
cmc
pop
repnz
loop
mov
xchg
push
repz
scas
leave
jbe
sbb
lcall
pop
sbb
inc
ret
and
push
outsl
xchg
dec
gs
fwait
dec
adc
pop
dec
adc
ret
jbe
mov
mov
into
cmp
jmp
add
fildl
lahf
loopne
jo
and
sub
jmp
sbb
pusha
shll
mov
adc
and
test
lahf
leave
push
cmp
xchg
cmp
mov
jnp
add
xor
call
fwait
pushf
je
daa
inc
cmp
xor
jbe
icebp
or
or
and
inc
call
pop
das
and
sub
push
je
mov
pushf
mov
mov
mov
jg
sub
or
fldt
mov
je
dec
mov
dec
inc
xor
sub
popf
mov
xchg
testb
insl
aam
push
fwait
adc
mov
jg
sub
inc
aad
jp
jle
push
xchg
mov
jae
lret
pop
ljmp
aad
leave
int
std
jl
jbe
test
shlb
pusha
jae
pop
jp
add
into
xor
addr16
sbb
jo
mov
push
jae
inc
nop
xchg
xchg
hlt
idivb
pop
push
out
inc
scas
pop
xchg
jne
arpl
int
ficompl
cltd
push
or
shr
es
std
ret
cld
jp
in
sub
fwait
mov
sub
mov
adc
por
push
push
sub
pop
pop
clc
hlt
jle
or
mov
in
outsl
cld
jge
inc
imul
xor
lods
seta
ret
loope
mov
lock
add
pop
lock
and
cli
inc
movl
add
out
aad
cld
adcb
mov
mov
stos
mov
pop
int3
dec
lods
sub
pop
mov
mov
movsb
popf
mov
sbb
lods
loope
ret
inc
mov
pop
and
inc
ds
sti
mul
test
inc
aam
cmpsb
pop
adc
repz
pop
scas
shll
xchg
sbb
outsl
cs
jae
in
inc
and
xor
addr16
or
je
mov
ja
and
int
mov
add
dec
fsts
cmp
andl
movsb
ret
ret
mov
pushf
jns
jle
jnp
js
push
je
adc
push
push
push
cli
adc
jno
lea
mov
clc
stos
in
aad
jns
lret
loop
jb
ja
mov
mov
rcrb
es
pop
icebp
dec
test
subb
xor
adc
dec
mov
dec
dec
sub
mov
sub
adc
cmp
aas
mov
jnp
dec
push
jnp
ret
or
jmp
mov
shlb
mov
push
dec
mov
jle
out
fs
ret
xchg
cmp
int
xorb
mov
mov
fwait
cmp
das
mov
jp
add
les
push
mov
jb
aas
adc
sbb
es
or
pusha
xchg
loopne
frstor
std
or
sti
push
fdivl
aaa
lret
sub
sbb
out
sbb
jbe
out
pop
lret
out
pop
sbb
sbb
inc
rorb
and
pusha
fisttpll
jae
xor
lret
jae
out
dec
cmp
xor
mov
mov
leave
sub
cli
mov
pop
mov
rol
xchg
jecxz
dec
gs
negb
push
inc
clc
sbb
sbb
push
mov
xor
jl
mov
in
or
or
hlt
ss
je
fsubrs
or
outsl
nop
pop
jbe
int
lds
cmp
jg
fdivrs
xor
add
loopne
lcall
mov
mov
es
xchg
mov
lods
jg
in
jmp
push
nop
or
cwtl
bound
adc
and
cwtl
inc
push
fcmovb
movsl
je
xor
pop
ljmp
ss
rol
xor
inc
out
cmpsb
xchg
hlt
push
out
jp
push
pop
cmc
sbb
ret
push
push
xchg
and
xchg
push
sub
xchg
or
ficoml
fbstp
repz
push
and
rcrb
in
in
pop
sahf
jmp
test
cmc
xlat
sub
and
bound
in
cltd
shl
mov
mov
jmp
daa
cli
mov
and
pop
cs
sub
sar
inc
and
xor
test
data16
js
int3
test
pop
mov
mov
jecxz
pop
pop
pushf
imul
cmp
jb
das
cmp
push
cltd
je
in
adc
or
cwtl
cld
outsb
cs
lds
xlat
popl
dec
xor
mov
fwait
and
and
adc
xor
mov
inc
lock
xor
adc
xor
dec
sti
cmp
in
inc
cltd
or
imul
mov
shlb
mov
mov
mov
sbb
bound
test
push
pop
mov
mov
sub
mov
arpl
cmp
call
mov
mov
ret
ret
mov
movsl
add
mov
sub
int
test
in
popa
pop
xchg
insl
lds
call
cs
jae
xchg
cmp
pop
mov
mov
sbb
xor
jecxz
push
lock
aad
add
jp
mov
mov
fdivr
jnp
push
sbb
pop
out
mov
call
movsb
inc
cmp
bound
or
push
push
or
jb
ret
push
repz
cmpsl
fwait
ret
bound
xlat
fisttpl
popa
sub
sar
pop
rorb
mov
inc
hlt
jbe
rorl
inc
insb
mov
movsl
mov
mov
aas
fsubl
pop
ret
insl
mov
jmp
lods
push
sahf
stos
dec
push
dec
adc
aad
pushf
adc
les
pushf
dec
cmpsb
adc
adc
pop
popf
mov
cmp
das
add
into
or
push
lret
xlat
pop
mov
into
jno
in
jmp
test
mov
pop
jmp
sbb
add
add
andb
rcrb
xchg
mov
mov
adc
inc
ja
cwtl
xlat
mov
inc
add
aas
lcall
imul
jg
inc
push
insl
cmpsl
or
hlt
jnp
dec
xchg
divl
xor
pop
xchg
dec
stc
inc
mov
bound
xor
jne
mov
cld
xchg
js
int3
pop
shlb
dec
in
sub
push
enter
je
and
notb
xor
xor
cmp
or
inc
stos
out
mov
dec
mov
and
movsl
leave
xor
pop
xor
jecxz
mov
push
sahf
jno
outsl
lods
and
dec
xchg
push
adc
jno
into
lahf
rep
aad
add
bound
movsl
scas
aas
and
adcb
sahf
mov
mov
shll
mov
loopne
jb
xchg
sbbl
ret
adc
jns
test
inc
daa
jae
and
int
repz
daa
add
pusha
in
sbb
jg
test
es
aas
sbb
push
dec
xchg
dec
std
cwtl
push
add
adc
mov
fwait
lahf
imul
arpl
adcl
flds
push
insl
jmp
call
adc
cwtl
mov
push
inc
mov
aas
shlb
loopne
xchg
movsb
and
mov
mov
sbb
mov
imul
nop
mov
mov
ret
push
cmp
clc
test
sub
jbe
add
sbb
fidivl
test
repnz
lret
loop
and
xor
mov
or
popa
nop
push
repnz
es
cld
jno
loope
sub
jg
xchg
je
dec
js
mov
dec
mov
adc
push
xchg
imul
or
mov
mov
adc
outsw
aad
outsl
fistpl
out
scas
xchg
imul
mov
stos
push
jns
dec
hlt
nop
mov
mov
loopne
jge
es
adc
sub
xchg
lea
xchg
xor
enter
inc
arpl
sahf
jae
js
cmp
jne
test
mov
out
mov
cltd
bound
lret
xchg
std
subb
or
adc
movsl
jno
cmp
jecxz
or
mov
fbld
clc
sub
push
into
xor
or
cmp
cld
cmp
xchg
mov
imul
add
mov
stc
iret
cld
pop
repz
xchg
and
je
popa
sbb
repz
xlat
mov
lods
pop
mov
repnz
cmp
dec
fcoms
repnz
bound
xchg
jmp
cmp
or
add
pop
outsb
sub
iret
and
pop
and
cmp
in
decb
int
and
int3
mov
pop
xor
fs
lods
insb
inc
cmp
jge
jb
push
es
inc
adc
cltd
std
ds
add
adc
sbb
mov
popf
arpl
ja
sbb
xlat
out
rcrl
cmp
add
dec
mov
notl
sub
aas
mov
int
pop
outsb
or
xor
out
inc
xorb
std
cld
pop
pop
ror
push
mov
stos
stos
push
int
add
ficomps
data16
and
and
adc
cltd
outsb
add
mov
push
pop
insb
cmp
adc
inc
cmp
add
insl
pop
fucomip
sbb
adc
or
mov
sbb
push
stc
mov
pop
pop
insb
and
mov
xchg
mov
movsl
mov
mov
ljmp
jno
mov
cli
out
xor
push
popa
test
ds
xchg
mov
add
aas
push
push
xchg
outsl
ljmp
dec
sbb
mov
mov
and
inc
push
sub
xadd
repnz
scas
push
mov
sub
sti
aam
cmp
push
out
popf
sbb
lret
in
arpl
cmpsl
pop
xor
clc
mov
sbb
icebp
cmpsl
inc
cmpsb
sub
bound
stc
mov
and
sub
test
jl
std
inc
mov
pop
lods
lahf
mov
inc
inc
pop
push
add
push
daa
std
clc
cmp
add
add
xor
movsb
jle
js
xchg
bound
push
jle
xor
cmpsb
test
inc
mov
sub
sub
rcrb
sbb
inc
pop
pop
pop
cltd
xor
xorb
add
mov
inc
adc
imul
mov
xor
pop
popf
xor
push
sub
jl,pn
cmpsb
mov
adc
aam
inc
outsl
pushf
enter
or
rcl
and
mov
sti
enter
clc
xor
push
inc
cmp
adc
pop
jg
dec
pusha
int3
insl
cmpsb
orb
jae
mov
cli
aaa
cmc
add
adc
jl
enter
mov
or
iret
enter
cli
sbb
into
push
loope
frstor
inc
negb
stc
cmpsb
xchg
lahf
xor
test
mov
xchg
xchg
int3
repz
testb
xchg
xor
or
lcall
jbe
fildll
cmp
sbb
cmp
inc
xchg
cltd
mov
mov
adcb
gs
int3
push
outsl
scas
stc
push
xlat
out
xlat
test
xor
adc
ret
jecxz
cltd
cmp
mov
test
jp
mov
addb
movsl
pop
outsb
cmp
stc
imul
rcrl
push
addb
dec
and
pop
arpl
repz
pop
popa
sub
rclb
xor
pop
sbb
cmpb
ds
mov
lcall
xchg
or
add
mov
push
mov
xchg
insb
xchg
mov
test
pop
xchg
lret
jae
mov
push
repnz
in
push
in
mov
dec
jl
adc
pop
jne
in
mov
test
test
jg
les
shl
lcall
scas
pop
xor
inc
pusha
cmp
push
sar
jmp
int3
inc
xor
sbb
repnz
mov
imul
hlt
shlb
inc
pop
out
adc
lds
jmp
mov
push
mov
dec
test
or
stc
shrb
je
or
sbb
jns
mov
pop
mov
pop
xchg
pop
mov
testl
inc
out
sti
inc
mov
or
pop
add
pop
adc
lret
stos
stc
jae
in
lcall
or
sbb
in
sbb
je
and
xchg
and
or
xchg
xchg
repnz
mov
push
xor
inc
pop
ss
sub
hlt
fadd
cld
scas
outsb
adc
push
andb
das
shlb
jp
cmpsl
jb
std
sbb
nop
loop
mov
fisubrs
mov
sub
adc
xchg
movsl
lods
dec
xchg
adc
sbb
lods
push
push
lret
push
inc
lock
movsb
int3
fstpl
dec
lock
call
pop
push
stos
cmp
inc
cmp
aas
inc
loopne
push
and
xchg
inc
int
lret
inc
mov
or
lret
inc
test
out
push
push
outsb
lahf
hlt
out
hlt
mov
fimuls
fbstp
popf
je
js
out
pop
xlat
lret
add
inc
push
pop
and
push
xchg
mov
mov
sub
sahf
pushf
mov
mov
mov
pop
fs
adc
adc
jbe
sub
push
xor
dec
push
stc
sbb
or
outsl
ss
imul
push
loope
fs
popf
jp
or
add
jo
test
mov
shr
mov
dec
sbb
ret
sub
je
enter
ret
pop
pop
or
sub
sub
dec
ja
rcrl
ds
iret
xor
mov
mov
test
mov
pop
jae
push
jo
xchg
ficomps
push
push
das
fnsave
push
xor
les
arpl
jo
in
out
push
dec
or
mov
sub
es
leave
pusha
jno
adc
clc
sub
mov
repz
cmp
push
mov
xorl
bound
xchg
ja
cvtps2pd
clc
js
jno
sbb
inc
in
test
fbld
mov
xor
cwtl
lock
gs
pop
insl
outsb
mov
scas
in
xchg
pop
repz
loop
repz
add
lret
pop
xchg
stc
shl
jo
lods
aad
push
add
in
fcmovb
xchg
add
pop
adc
and
call
dec
cmpsb
cli
ds
scas
clc
incb
lcall
pop
arpl
push
insl
in
popf
out
inc
clc
and
xchg
pop
cmp
lret
out
in
ret
jbe
jecxz
lods
xor
or
cmp
mov
pop
daa
cwtl
jae
icebp
push
movsb
fcoml
cmpsl
cmp
lret
add
cs
adc
pop
inc
mov
mov
enter
out
cmp
outsb
mov
push
mov
loope
sahf
es
repnz
vcvttss2si
xor
idivl
aad
je
pop
rorb
mov
clc
ja
rorl
test
lods
sub
jle
mov
mov
jmp
mov
mov
jno
loope
push
pushf
xchg
hlt
out
push
sahf
lahf
sub
mov
shlb
cmp
inc
mov
dec
push
lahf
pop
sahf
xchg
sbb
jl
add
sbb
inc
pop
pop
pop
imul
or
mov
movsl
xchg
lods
xor
ds
push
sub
loopne
jb
xchg
jmp
repz
sti
inc
add
mov
stc
xor
mov
cmpsl
xchg
outsb
in
sbb
das
push
pop
pop
mov
sti
mov
mov
or
sbb
mov
sbb
jg
ds
dec
jg
cmp
ret
mov
cmc
mov
cmp
fnstsw
pop
push
xor
shrb
mov
das
inc
sbb
or
icebp
jecxz
test
lock
xchg
decb
jns
in
mov
sar
push
cs
adc
cwtl
sbb
push
pop
icebp
sbb
cmpsl
jp
aad
loopne
dec
jnp
and
cmp
dec
idivb
cs
imul
sub
fwait
icebp
lds
add
mov
mov
mov
dec
sbb
loopnew
mov
push
addl
fs
fbld
stc
jbe
xchg
iret
scas
inc
push
mov
push
int3
dec
add
push
popa
dec
inc
push
dec
pop
or
sub
test
mov
enter
ljmp
aam
jge
nop
imul
lret
pop
fistl
pop
push
adc
dec
cmp
xor
adc
xchg
adcb
lea
out
rolb
loope
pop
adc
sti
adc
ja
popf
sbb
pop
fsubp
fndisi(8087
in
cmc
cmpsl
xchg
mov
add
outsb
aam
push
dec
in
pop
mov
insl
adc
pop
mov
std
lea
mov
push
repz
push
ret
mov
inc
pop
mov
mov
das
das
or
out
sub
out
rcll
add
insb
mov
push
test
ficoml
add
pop
mov
jno
pop
push
pop
in
xor
popf
jle
push
std
lea
lock
mov
cwtl
into
pop
pusha
push
hlt
or
cmp
cmc
xchg
inc
sti
xchg
cli
xorl
sbb
mov
xchg
loope
clc
jp
call
mov
shlb
mov
fadd
mov
in
ret
test
dec
or
cs
fnstenv
lea
lock
cmp
mov
int
dec
cld
out
outsl
jae
arpl
inc
les
push
insl
sub
mov
mov
and
adc
xor
leave
mov
push
pushf
and
scas
aas
jle
popa
and
repnz
adc
mov
pop
pop
fwait
lcall
or
lods
rol
inc
add
inc
xor
sarb
inc
insl
inc
int
mov
add
push
pop
inc
les
test
xchg
lcall
pop
adc
xlat
cltd
ja
roll
aam
fnstsw
mov
xchg
jmp
ja
insl
fnsave
stc
outsl
aas
mov
addr16
scas
adc
test
cli
inc
jp
hlt
flds
mov
or
adc
sub
xchg
subl
xchg
add
stos
adc
push
sbb
jo
add
fwait
cld
xor
cli
leave
addr16
mov
fwait
pop
ror
push
stc
mov
clc
sub
push
push
gs
lea
lret
mov
cmpsl
xchg
fwait
hlt
jp
and
icebp
rolb
mov
jp
loop
pop
lahf
stos
addb
aas
mov
ljmp
sbb
jns
es
jne
dec
and
inc
or
jmp
mov
es
adc
es
dec
xchg
or
fs
jnp
mov
std
mov
mov
lock
addr16
cmc
jne
lcall
adc
sarb
das
mov
stc
mov
iret
ret
dec
les
and
push
ret
jmp
jb
xlat
cli
and
stc
xchg
inc
aam
jae
pop
xor
repnz
mov
bound
xchg
xor
rclb
in
cmp
dec
je
fs
xchg
scas
mov
fdivrl
test
imul
imul
sbb
cmp
sub
enter
jle
adc
hlt
xchg
ret
cmpsl
mov
ja
push
les
xor
movsl
cli
int3
cld
pop
sbb
mov
mov
and
icebp
sub
in
mov
popa
ja
adc
lea
cmpsl
arpl
jle
xor
dec
lret
jecxz
mov
pop
enter
mov
aad
aas
push
aad
xchg
call
add
inc
jmp
push
pop
xor
aaa
test
mov
push
fcmovu
pop
mov
sub
and
into
sbb
mov
mov
std
or
xchg
add
mov
or
movsl
loope
sub
std
fwait
inc
scas
push
mov
dec
orl
negb
pop
xchg
imul
notb
adc
stc
daa
pushf
inc
aad
fistps
mov
dec
mov
xor
call
or
add
pop
push
inc
jmp
lock
lods
loope
repnz
pop
aaa
cmpsl
cmp
repz
jns
inc
or
or
pushf
ljmp
inc
adc
or
sbb
mov
xchg
divb
sub
fstps
pop
lret
pop
cmp
loope
les
inc
clc
xor
sub
cmp
push
fld
or
xorps
mov
xchg
insb
mov
bound
repnz
inc
rclb
clc
jns
xor
jmp
adc
in
bound
cld
adc
mov
push
push
out
pop
and
ficoml
sbb
add
fimuls
mov
aas
cld
jns
into
jno
out
lahf
sarb
gs
inc
lretw
pop
cmpsl
hlt
cltd
jg
stc
pop
aaa
fadds
or
push
sti
andl
sbb
dec
add
daa
imul
stc
xchg
push
mov
out
shlb
stos
add
jo
cmc
das
filds
repz
insl
jge
mov
cmp
xchg
cmc
push
push
jb
xchg
sub
test
loope
jl
mov
lock
push
mov
cs
pop
loop
rclb
fimull
push
inc
outsb
xchg
ja
lock
cmpsb
sub
out
and
inc
inc
int
inc
fadds
ficomps
cld
inc
or
lods
mov
cld
out
sub
xchg
pop
in
mov
push
push
les
sbb
cmp
jle
sti
push
dec
shlb
xor
ljmp
rorb
insl
inc
dec
sbb
push
ret
rclb
sub
decb
sub
inc
loop
jmp
mov
xorb
int3
int3
fldcw
sbb
ret
xor
ret
lahf
mov
push
mov
or
mov
stos
or
fiaddl
mov
adc
out
inc
xlat
pop
xor
cld
sbb
cs
jno
addl
out
sbb
xchg
mov
push
inc
dec
push
js
nopl
lret
stos
bound
pusha
dec
mov
fimull
jle
inc
sub
mov
pop
test
sub
jno
xchg
fidivrl
fxch
sti
stc
scas
neg
jnp
push
add
cli
dec
push
xchg
cmp
roll
movsb
cmp
incb
fmuls
cwtl
mov
mov
addr16
inc
dec
pmaxub
cmp
imul
ljmp
push
mov
ret
jecxz
mov
and
dec
aaa
stc
sub
xor
adc
mov
ret
lds
outsb
cmp
test
insl
jns
je
fwait
js
adc
shll
pop
jne
add
pop
and
mov
flds
cmp
aam
jo,pn
stos
dec
stos
gs
scas
and
sub
push
cld
cmp
mov
xor
ja
pop
dec
push
push
cmp
xchg
mov
addr16
mov
orb
sbb
ja
cmp
sbbb
cs
repz
ficoml
fimuls
dec
dec
paddusw
outsb
pop
ja
inc
mov
dec
xlat
clc
pop
outsl
test
outsl
mov
sti
icebp
adc
mov
cmp
pushf
dec
into
les
jae
add
outsl
repnz
mov
xor
stos
fwait
in
jl
in
fcomps
stc
xor
fsubl
jle
fs
movsl
scas
int
call
and
jge
add
es
imul
inc
push
inc
les
xor
cli
push
adc
inc
std
nop
out
mov
lcall
adc
push
in
inc
clc
rcrb
xlat
mov
movsl
outsl
pop
push
pop
mov
lods
jae
fs
cli
xor
lds
aad
sub
jb
mov
adc
hlt
sub
lods
dec
addr16
xor
xchg
hlt
cld
cld
push
shrl
xchg
jg
clc
jecxz
pop
mov
je
or
mov
stos
je
jle
lahf
xor
jecxz
pop
cmc
int
bound
mov
repnz
fmulp
in
dec
and
neg
xchg
ja
test
and
pop
ja
call
arpl
pop
std
cmpsl
sub
out
or
pop
aas
popa
adc
xchg
inc
jno
mov
sbb
xor
imul
fsubs
loope
fcoms
xor
fdivl
push
movsb
nop
add
mov
loop
scas
icebp
mov
xchg
stos
adc
mov
and
stc
aam
mov
adc
out
add
pop
lahf
mov
test
pop
cmp
push
inc
sub
push
sbb
adc
jmp
inc
movsb
or
sbb
sbb
mov
sbb
ds
add
mov
pop
push
out
push
sub
stos
aaa
xchg
jecxz
pop
es
sub
loope
push
mov
divl
pop
inc
test
sub
popa
push
sbb
dec
lret
aaa
icebp
idivl
sub
push
mov
and
cmpsb
cmp
inc
lcall
imul
pcmpgtd
adcb
inc
adc
xor
xor
outsl
xchg
cmc
pop
cmpsb
in
push
int
mov
add
mov
pop
mov
bound
push
xchg
cmpsl
lds
push
jae
lock
mov
cld
inc
cmp
ds
pop
insb
lods
inc
test
loope
mov
je
jecxz,pt
out
or
sarb
add
mov
lock
xlat
jo
fbld
inc
push
fdivl
lahf
dec
mov
jl
pop
pop
or
insb
sub
sti
sub
add
mov
cmpsl
and
cmp
leave
xor
mov
frstor
das
mov
ret
cmp
mov
add
push
faddp
ja
lahf
sbb
sub
push
in
dec
jecxz
xchg
roll
dec
pop
jb
pop
ror
or
xchg
mov
push
mov
adc
movsl
repnz
mov
cmp
xchg
scas
inc
in
or
lods
imul
push
daa
inc
out
mov
dec
imul
in
sahf
pop
std
mov
add
cld
add
cmp
test
inc
add
mov
jecxz
mov
mov
sub
push
and
shll
mov
and
mov
test
adc
pop
int
lds
stos
dec
ret
out
push
addr16
sub
movl
loop
jmp
cli
mov
fcomi
cmpsl
gs
pop
pop
and
dec
push
aaa
or
hlt
scas
mov
dec
out
into
jecxz
push
xlat
loop
adc
les
shll
sub
cmp
jns
cmp
scas
mov
xchg
sti
int3
mov
shrb
pop
fcompl
push
std
add
xor
sbb
stos
aaa
fnstenv
repz
xor
shll
fisubs
mov
xchg
pushf
les
outsb
movsl
jg
in
dec
cmp
pop
sub
push
inc
enter
cmpsl
cmp
adc
mov
inc
jmp
xor
test
and
fstl
push
pop
in
cmp
or
mov
xor
ja
jno
push
insl
xchg
pop
lcall
cs
cli
jae
mov
xchg
dec
rol
call
mov
and
pusha
push
jge
mov
sub
and
sbb
sub
mov
inc
aaa
stc
mov
sbb
jp
xchg
ss
sbb
mov
sbb
jo
out
mov
push
test
sbb
and
out
mov
mov
fwait
jns
das
pop
cmp
scas
cltd
xor
push
xchg
pop
idiv
add
lds
push
mov
jge
xchg
push
jnp
mov
aas
or
xchg
sbb
mov
mov
dec
addb
mov
xor
sub
cmp
bound
clc
add
dec
or
ss
imul
lock
es
adc
sahf
inc
pop
into
nop
repnz
or
cs
testb
pop
and
pusha
lods
sbb
sarl
int
or
movsl
outsb
std
pushf
adc
and
mov
int
test
adc
cld
outsb
pop
xor
xchg
xchg
jb
sbb
int
xchg
xlat
push
out
push
sub
adc
ret
dec
mov
and
and
stc
cmp
mov
xchg
jbe
loope
aas
outsb
inc
test
pop
inc
ds
push
das
jl
xor
mov
fnstenv
cmp
adc
aam
mov
xchg
mov
cmp
sbb
push
stos
mov
divb
aad
and
mov
imul
xchg
imul
sbb
and
cmpsb
mov
xchg
popf
xor
push
aam
lods
cltd
leave
sub
mov
jg
ret
rcr
incb
aas
rorl
test
fidivs
add
lds
sbb
fbld
pop
cs
testb
and
aam
adcl
or
sub
mov
testl
mov
mov
bound
adc
aaa
adc
add
lret
ljmp
pop
cmp
movsl
push
cmp
sbb
popa
shl
fwait
insl
lock
mov
pop
jns
clc
sarl
pop
std
push
imul
push
adc
rcrl
addb
aam
jl
cmc
mov
sub
jmp
insb
out
xchg
mov
cli
stos
and
cmp
lock
ss
negb
push
xlat
sub
add
lcall
sar
fistpl
jge
roll
jle
or
push
cmp
inc
in
rcrl
daa
dec
hlt
fs
mov
jmp
xchg
fs
out
xor
mov
ret
mov
xor
push
divb
adc
pop
mov
push
add
fadds
inc
mov
xor
in
out
jg
push
jbe
mov
jnp
wbinvd
loop
pop
adc
adc
xchg
int3
sarb
int3
lahf
cwtl
dec
xlat
outsb
or
mov
push
adc
mov
icebp
dec
xor
imul
xor
xchg
jg
push
xor
push
je
inc
sarl
cli
dec
sub
imul
fwait
inc
popf
addr16
arpl
adc
cmpl
aam
xor
or
push
lds
shlb
fisttps
test
cmp
ret
sub
mov
add
xchg
repz
pop
mov
insl
pop
mov
les
sub
pop
mov
xor
repnz
fisttpll
sub
inc
iret
repz
cmp
sub
mov
adc
repnz
adc
adc
dec
inc
loopne
fdiv
mov
cmp
push
sbb
mov
rcr
data16
nop
pop
idiv
outsb
leave
les
sbbl
std
lret
loope
fs
arpl
ljmp
pop
call
and
out
fdivr
shll
push
rorl
mov
data16
adc
mov
leave
fcos
ret
jecxz
mov
mov
int3
fsubrp
mov
sub
dec
dec
fnsave
loope
jno
or
adc
mov
daa
mov
jno
jne
repnz
lods
add
fnstenv
cmp
push
fnsave
add
inc
icebp
cmpsl
add
icebp
loop
mov
outsb
outsl
fdivr
mov
fsts
cli
jle
or
add
std
bound
or
movsl
fstps
add
imul
aaa
or
jmp
mov
xchg
nop
mov
leave
adc
jo
sbb
add
lods
push
hlt
jbe
arpl
pop
mov
push
mov
xor
sbb
push
dec
arpl
ja
adc
jl
pop
add
aam
cmp
xor
cmc
push
repz
push
in
jge
add
cld
and
out
mov
movsl
mov
xchg
into
and
sub
add
insl
stos
enter
cmc
addr16
dec
out
sbb
icebp
adc
mov
add
loop
enter
in
aam
dec
imul
xchg
mov
rcl
loop
jecxz
or
outsb
inc
push
mov
shll
out
mov
sub
pop
repnz
cmp
lods
or
outsb
dec
popa
push
daa
sbb
ja
jp
push
shll
stos
roll
adc
xchg
arpl
sbb
insl
pop
sbb
bound
jnp
pop
es
out
dec
incl
arpl
xchg
mov
lret
fdivrl
jl
push
pop
pop
and
lret
cmp
jne
mov
pop
and
shlb
cmp
pop
jle
push
mov
jmp
loopne
xchg
xchg
stc
push
cli
mov
cmpsb
xchg
adc
loopne
mov
cwtl
push
lods
cli
dec
dec
test
pop
iret
sub
hlt
cmp
xchg
or
out
lods
mov
sbb
cmpsb
fistl
mov
or
in
and
insl
xchg
enter
bound
nop
jnp
popa
aaa
sti
ret
mov
adc
xor
xor
xchg
cltd
cs
cmp
jo,pn
push
mov
jnp
mov
push
roll
data16
notl
jecxz
inc
add
and
ds
rcrb
and
push
data16
cli
push
lods
cwtl
or
mov
loop
pop
push
pop
out
fwait
loopne
lock
not
pop
push
daa
inc
adc
andl
stos
pop
test
sbb
adc
jno
aas
mov
adc
les
inc
mov
push
outsl
fbstp
orb
mov
add
jo
pop
enter
loope
pop
push
movsl
outsb
jle
cwtl
and
jmp
mov
in
testb
mull
cmc
inc
adc
popa
cmp
ljmp
jg
les
and
push
or
jmp
sub
out
mov
inc
fcomp
push
inc
sub
mov
fwait
push
fsubl
mov
adc
and
sub
outsl
pop
cmp
jo
adc
adc
add
cmp
push
test
insb
nop
int3
xchg
les
std
fildl
cs
stos
popa
shrb
out
push
mov
mov
and
ds
jb
mov
jl
subb
or
cmp
in
cmc
jecxz
pusha
imul
cmc
xchg
out
fadd
add
mov
jnp
sbb
xor
cmp
hlt
pop
inc
out
jo
gs
lods
push
dec
cmp
sub
and
icebp
xor
shll
imul
test
std
sbb
fcoml
sub
clc
mov
insb
out
pop
dec
push
push
ljmp
xlat
pop
mov
adcb
sbb
push
dec
std
aam
loopne
jecxz
pop
pop
repz
testb
bound
sub
adc
lods
cmp
les
jnp
add
lock
cmp
mov
dec
mov
or
pop
enter
lcall
xor
fdivrl
pop
ror
mov
add
dec
dec
out
mov
scas
lods
daa
cs
mov
push
push
jb
das
dec
jg
and
mov
xchg
mov
xchg
lea
push
add
iret
dec
pushf
arpl
mov
inc
mov
ficomps
clc
andl
add
xchg
fbld
adc
call
mov
adcb
fcmovne
int
into
or
movsb
test
das
xchg
loop
js
sub
test
roll
sbbl
frstor
mov
jbe
outsb
xor
sbb
lods
int3
mov
pop
icebp
out
mov
ret
pop
mov
les
pop
mov
xor
insl
xorl
and
movsb
lcall
rorb
subps
xchg
pop
push
push
mov
cmpsb
adc
test
lcall
pushf
loope
dec
mov
or
jmp
cmp
addr16
push
xor
add
out
xchg
nop
dec
ljmp
js
sbb
inc
cmp
mov
lret
test
mov
dec
cltd
or
cmpsb
dec
aam
loop
inc
adc
dec
pop
push
and
push
sub
sub
addr16
dec
and
nop
or
popa
gs
stc
xor
fildll
mov
add
popa
or
cld
xchg
faddl
sbb
insb
loopne
pop
out
lret
lret
pop
cmp
lret
mov
mov
dec
mov
cmp
or
cmpsl
sahf
in
test
xchg
dec
ret
lods
jne
shlb
push
xchg
dec
fidivrl
push
cli
mov
cld
fidivl
sbb
jmp
pop
jae
or
xchg
jg
add
mov
mov
adc
adc
mov
dec
pop
push
cmpsl
xor
sbb
mov
aas
mov
adc
inc
ret
mov
jp
mov
inc
push
ljmp
sbb
push
das
adc
pop
mov
lret
mov
pop
sub
xchg
sbb
jmp
dec
sahf
adc
sub
fnsave
lahf
into
test
jae
loop
es
lods
cld
mov
mov
cmpsl
popa
pop
mov
cmp
or
stc
dec
int3
mov
outsl
adc
and
mov
sub
mov
push
repz
or
ret
xchg
imul
sub
cmpsb
adc
push
cmp
jmp
push
and
test
sbb
push
fwait
lods
out
into
mov
bound
mov
inc
stos
add
jns
mov
in
push
fwait
push
jg
inc
and
inc
int3
pop
push
pusha
imul
adc
mov
push
jp
inc
sub
test
inc
das
dec
int3
cmp
mov
andb
out
pop
pop
or
adc
xor
dec
push
clc
ja
sarb
adc
mov
addl
add
int3
das
es
sub
and
jp
iret
jno
push
adc
dec
cli
fisttpll
sbb
inc
pop
inc
fwait
test
in
and
xor
ja
divb
daa
in
cmp
mov
lret
mov
push
js
adc
mul
xchg
jns
js
pop
sahf
mov
mov
popa
xor
ret
mov
jmp
mov
cmp
sahf
fisubs
cmpl
out
fwait
loop
cmp
dec
sahf
shlw
test
cmp
out
push
les
xor
fwait
add
push
call
sub
fs
mov
or
in
sar
pop
jne
pop
mov
lcall
cmpsl
jmp
cld
rol
adc
shlb
mov
aam
mov
lds
or
loopne
dec
sub
or
push
in
mov
inc
stc
lret
xor
push
pusha
jg
js
test
cmp
mov
aad
aaa
cmc
add
dec
stc
adc
dec
test
arpl
sub
lea
mov
sub
ja
mov
bound
inc
push
outsl
ds
dec
pop
cli
mov
inc
fistl
pop
sbb
sbb
add
sti
jp
or
repz
xchg
mov
ljmp
mov
push
or
pop
cld
mov
xchg
push
dec
push
loopne,pn
pushf
mov
mov
mov
dec
or
or
repz
pop
cmpsl
int
mov
jge
add
sbb
jg
lock
lret
fstpl
mov
ror
add
mov
dec
push
pushf
and
scas
ret
push
rolb
jae
pop
xchg
inc
sbb
inc
scas
sub
jp
jge
test
bound
inc
and
or
inc
mov
mov
add
std
insb
sbb
mov
inc
adc
icebp
into
cli
test
divb
fsubl
sub
mov
mov
dec
lea
adc
into
xchg
fprem1
cmp
xor
mov
sbbl
lret
and
lahf
push
out
xor
adcl
sbb
jecxz
xchg
jb
jbe
pop
psraw
imul
push
loop
sbb
jge
xor
call
test
scas
cmp
call
fcmove
pop
lds
dec
call
push
add
xlat
jl
iret
in
movsl
add
lea
ret
lods
cltd
and
jmp
push
push
sbbb
sahf
lahf
nop
scas
enter
test
jl
push
inc
mov
in
sbb
jmp
fwait
enter
xchg
adc
cltd
dec
push
or
arpl
test
sub
mov
int3
outsb
clc
add
movb
sub
jg
das
push
sbb
cmc
dec
add
ss
xchg
or
stos
adc
xchg
mov
push
xorl
ja
mov
xor
dec
fimuls
or
xor
sbb
jo
push
mov
mov
adc
stos
pop
cmpb
addr16
fwait
out
scas
jmp
daa
pop
sbb
xchg
daa
movsb
and
addr16
jp
loope
add
sbbl
sahf
lock
jecxz
add
mov
lret
sbbl
xor
inc
jb
dec
mov
mov
lahf
pop
adc
popa
jmp
int3
xchg
loopne
loopne
mov
mov
cmp
fwait
push
jne
push
imul
fldl
xor
imul
adc
jbe
test
orl
cmc
test
fcoml
push
iret
xor
pop
je
mov
sub
fs
jb
sbb
push
enter
out
je
push
rcll
jnp
adc
cltd
push
fsubl
outsb
mov
sbb
inc
dec
ror
xor
fsubs
es
ds
push
stos
fdivrp
mov
out
inc
mov
fs
mov
int3
jns
push
mov
mov
pop
lret
bound
push
mov
subl
mov
or
fs
divl
addb
mov
dec
push
mov
ret
cmp
outsl
fdivrl
mov
addr16
stc
sub
mov
loopne
aad
and
xor
xchg
lods
dec
mov
lds
push
lea
xchg
push
andb
xchg
xor
jns
mov
popa
xlat
sub
int3
loopne
fisubl
dec
push
push
mov
push
mov
mov
and
dec
dec
stos
jns
mov
test
fldln2
stc
push
mov
add
ret
jg
lahf
lret
jb
cmc
sbb
cmpsl
int
adc
addl
dec
pop
scas
cmpsl
shrb
mov
ja
pop
pop
push
add
and
mov
cmp
cs
rolb
pop
shlb
add
xchg
sti
loop
leave
mov
jnp
popf
dec
jle
sbb
dec
sub
fistps
dec
out
adc
sbb
adc
lcall
aad
or
push
fstpl
xchg
fwait
dec
lods
jecxz
mov
aad
mov
ret
jns
roll
push
xor
inc
sarl
mov
incl
inc
pop
shrb
int3
or
fsts
xchg
push
mov
dec
cmp
pop
insb
xchg
dec
pop
cmpl
mov
mov
add
arpl
dec
adcl
sub
sbb
sbb
ja
es
out
stos
ret
pop
push
stos
push
sti
lahf
xor
loopne,pn
pop
lock
add
or
mov
stc
lea
icebp
rol
cwtl
lods
xor
push
aam
rcr
mov
jne
test
mov
fildl
sub
inc
stos
add
mov
mov
xchg
sbb
aam
loop
iret
push
test
test
loop,pn
fwait
xor
and
pop
add
repz
bound
cwtl
xor
or
mov
cmp
daa
das
aas
test
je
divb
xchg
push
cmp
inc
sbbb
xchg
cmp
jbe
mov
mov
lret
mov
leave
and
fstps
mov
jb
ret
and
movsb
in
sub
push
add
je
cmpb
mov
cmc
push
aas
imul
dec
cmp
xor
stc
push
leave
inc
daa
add
push
je
notl
mov
mov
jnp
or
sub
pop
test
lock
ret
repnz
mov
mov
mov
cs
mov
fidivrl
jp
int3
mov
pusha
xor
popa
xor
fimuls
das
push
aas
push
sbb
rcll
cmp
imul
xor
pop
push
movsl
test
push
push
adc
std
xor
inc
ja
out
cmp
inc
mov
and
ret
jp
jmp
or
pushf
js
cmp
add
cli
das
xor
jmp
or
roll
cwtl
dec
fdivs
cwtl
adc
add
scas
xor
rcll
push
mov
lret
xchg
dec
insl
test
fbld
mov
inc
dec
stc
inc
inc
das
mov
pop
lock
add
shl
adc
aam
pop
dec
and
mov
cmpsl
es
xchg
xchg
push
scas
and
data16
mov
add
addl
loop
aas
loopne
lods
or
jecxz
fistpl
sbb
in
into
rcrl
lret
xchg
jmp
call
jmp
sub
pop
loope
dec
adc
inc
cld
or
xorb
fcom
jle
pop
test
add
push
fucom
or
stos
shll
sub
loopne
data16
popa
pop
std
inc
sbb
js
je
or
jae
loop
or
push
aaa
hlt
mov
lret
movsb
xchg
and
adc
addl
xchg
dec
sub
or
movsl
mov
inc
pop
adc
jmp
imul
sbb
in
push
xchg
xor
aam
mov
rorb
xor
lea
jns
jge
push
dec
push
outsb
push
gs
pop
test
loop
std
out
mov
jno
cmp
loop
leave
jg
xor
and
add
mov
add
mov
sub
push
pop
arpl
jmp
aam
push
add
pop
ret
gs
ret
cmpsl
sti
in
cmp
sahf
dec
repnz
cmc
xchg
or
mov
test
or
bound
lcall
test
enter
inc
dec
jno
pop
icebp
repnz
data16
je
and
xchg
mov
je
outsl
insl
or
mov
pop
jns
sub
fistl
movsb
movsb
repnz
pushf
pushf
jb
negb
cwtl
subb
nop
xor
mov
scas
sarl
pop
xor
lahf
out
sbbl
nop
mov
add
inc
xlat
xchg
adc
leave
sbb
xor
xchg
xchg
push
xchg
mov
mov
sub
mov
xchg
inc
mov
movsb
mov
adc
cld
sbb
cmp
test
xchg
fists
lahf
push
jecxz
adc
push
subb
cmpsl
adc
sub
out
xor
je
mov
mov
rcrl
jmp
cmp
inc
dec
jg
dec
mov
pop
or
mov
mov
hlt
aad
mov
lock
negb
add
fnstcw
dec
out
push
mov
sbb
jmp
push
add
cmpl
jne
cltd
mov
push
rorb
js
add
je
stc
rep
jb
in
push
mov
sub
jae
and
fstpl
in
push
mov
fcompl
add
pop
cmp
lret
xchg
fdivp
xchg
aaa
cmpsb
and
adc
xchg
lods
lahf
dec
ss
xlat
xor
add
or
aas
enter
imul
mov
fs
and
xchg
mov
push
adc
xchg
push
sub
mov
mov
mov
loope
sahf
cmp
sub
xor
lods
cltd
and
pushf
lahf
shlb
repz
mov
push
sbb
jns
mov
ret
test
sub
sahf
imul
pop
push
iret
popf
rorl
sub
jge
mov
add
dec
outsl
sub
mov
ja
push
bound
imulb
inc
inc
sti
xchg
sub
jmp
adc
mov
cld
sub
cmp
xor
ss
lods
in
cmp
das
push
lds
enter
test
repnz
imul
iret
ret
jns
cmp
enter
xchg
pop
adc
dec
int3
test
dec
ja
insl
add
xor
push
fisubl
sbb
js
sub
and
out
xor
xor
loopne
sbb
pop
push
dec
add
push
addr16
test
cltd
dec
xlat
jnp
cmp
dec
mov
xchg
test
xchg
pop
stc
add
psubsw
je
mov
lods
in
daa
xchg
iret
ss
add
lds
add
mov
rol
mov
push
xor
pop
clc
aas
fs
adc
sbb
or
sub
enter
repz
ja
rolb
call
stos
adc
cli
fdivrl
cmp
loopne
scas
jge
cmp
test
cwtl
push
and
aaa
push
mov
sub
xchg
jg
sarl
add
clc
fildl
movsb
ss
pusha
mov
test
imul
subl
aaa
loopne
xchg
sbb
fmuls
hlt
xor
cmp
jae
leave
cmp
inc
dec
and
push
cld
stos
nop
mov
imul
inc
call
test
hlt
test
inc
cmc
rcr
sub
dec
or
add
movsl
popa
int
mov
sbb
daa
and
daa
jle
scas
scas
xchg
sbb
lcall
push
hlt
cmp
dec
cwtl
mov
aad
inc
fildll
inc
xor
dec
pop
in
xor
insb
inc
dec
sahf
clc
test
or
xchg
dec
dec
push
pop
push
sub
inc
pop
add
int
test
decb
inc
mul
stos
sub
div
popf
ffree
test
cmp
xchg
std
jns
icebp
addb
push
mov
cli
fcmovu
jne
cmp
mov
mov
mov
inc
imul
xor
add
xorb
dec
and
popf
cmp
sub
inc
stc
dec
cmp
cmc
lea
pop
pop
aas
inc
xor
out
sub
data16
sbb
jbe
jmp
add
xor
cltd
iret
mov
lods
fwait
mov
in
outsl
xor
jg
daa
test
add
in
popa
cmp
sub
xchg
dec
mov
fwait
fmul
pop
dec
addl
repz
movsl
pop
push
push
xchg
inc
jmp
ja
lcall
and
aam
sbb
jecxz
or
fsubrl
and
push
and
bound
mov
pop
jle
bound
test
sub
push
nop
dec
cwtl
call
shrl
mov
dec
push
sub
cmp
imul
or
lods
adc
or
ljmp
push
dec
push
out
inc
add
add
test
loop
mov
xor
inc
inc
add
push
mov
jp
xchg
mov
out
push
rolb
and
mov
orl
sar
jnp
inc
sahf
cltd
fcompl
lods
movsb
mov
insl
pop
or
jne
movsl
inc
and
mov
jge
jne
pushf
push
sbb
fwait
orl
pushf
div
mov
xor
dec
mov
xor
lret
xlat
mov
dec
sbb
ret
fists
hlt
leave
inc
rcrl
cmp
mov
movsl
push
inc
testl
test
push
cmp
ss
jo
int3
outsl
push
jbe
call
mov
mov
add
outsl
xchg
sub
sahf
popa
pop
cmp
inc
inc
pop
pop
inc
mov
dec
loopne
adc
popf
xor
xchg
rorl
imul
adc
lcall
popa
test
mov
idivb
cmp
jae
push
dec
or
xlat
int3
test
hlt
pop
cwtl
mov
pop
shll
js
add
or
outsb
and
popf
std
rclb
xchg
xor
dec
push
pop
pop
arpl
mov
addb
push
out
push
adc
out
cmpsl
cs
xchg
cmc
push
push
stos
mov
mov
lahf
mov
loopne
cmp
pop
sbb
sbb
icebp
out
or
jmp
out
mov
adc
dec
clc
fnstenv
lcall
pop
mov
cmpsb
imul
cmp
lods
mov
sbb
adc
clc
jae
xchg
and
imul
jo
add
mov
cs
scas
aaa
dec
cmp
rcrl
mov
mov
mov
jmp
mov
xchg
xor
jns
or
sti
adcb
std
lcall
outsl
mov
lcall
je
orl
mov
ror
sbb
push
rcrb
mov
notb
inc
out
mov
test
pop
bound
int
and
enter
ljmp
fadds
pop
js
arpl
mov
and
xor
mov
mov
aas
pop
add
dec
test
jecxz
mov
mov
arpl
sub
add
inc
jecxz
fnstsw
jns,pt
test
mov
lcall
add
daa
pop
faddl
pop
jl
cmp
adc
inc
mov
or
adc
aas
dec
shr
cmp
pop
and
xchg
in
pushl
js
sbb
pop
cmp
sahf
dec
scas
enter
mov
cmpsb
sbb
movsl
pop
push
movb
push
xor
sahf
test
push
andl
divl
mov
xor
fldt
loope
mov
sbbb
lahf
inc
add
cltd
dec
sbb
mov
mov
sbb
insl
stos
cmp
mov
lods
loope
fs
insb
notb
adc
pushf
xchg
mov
inc
adc
mov
xchg
xchg
or
sub
lock
aad
fucom
cltd
add
push
mov
test
push
xor
int3
or
pop
pop
pop
test
test
sub
mov
cmp
rcrl
jl
xor
cmc
cmc
js
add
mov
mov
xor
mov
mov
int
imul
push
jb
ja
psubd
push
inc
mov
cmp
rcll
xor
sahf
sub
inc
add
fadds
mov
iret
sub
in
cmpsb
mov
xchg
fstl
sbb
jmp
mov
idivb
sub
sarl
fldl
mov
cld
je,pn
or
lret
cwtl
out
jo
jnp
sbb
cmp
jnp
cmc
push
push
sub
push
dec
add
aas
push
sbb
pushl
or
xor
cmp
cmp
cld
jne
es
xor
or
mov
cli
add
push
dec
xchg
push
pop
inc
xlat
lods
lcall
xchg
ds
and
dec
sbb
cvtps2pi
nop
cmp
pop
movsb
jmp
jl
lret
repz
sub
push
stos
call
dec
loope
push
in
pop
jae
cmpsb
mov
adc
pusha
and
mov
sbb
loopne
dec
xchg
mov
dec
cmp
jno
push
inc
xor
cmp
xchg
jmp
jmp
push
ljmp
idiv
ret
inc
xor
xchg
pusha
push
iret
arpl
stos
mov
icebp
mov
mov
lock
xor
sar
es
pushf
mov
xchg
jl
lcall
addb
push
in
cmc
jge
in
loope
add
dec
daa
cld
lea
jmp
test
xchg
inc
ror
adc
push
test
xor
jl
xchg
mov
test
cwtl
mov
pop
push
and
or
jmp
test
lock
mov
xlat
pop
dec
jns
cmp
shlb
mov
out
xchg
fwait
sbb
mov
mov
lret
push
mov
jbe
push
push
mov
ficompl
adc
and
push
jbe
int3
and
das
jg
sub
sahf
inc
jb
movsb
sahf
dec
jmp
jb
mov
loopne
dec
jno
xor
fld
or
inc
mov
fwait
cwtl
adc
mov
stc
in
push
insb
jp
out
pop
aas
or
movsl
or
addr16
out
mov
test
pop
int
in
imul
push
aas
mov
repnz
sahf
jno
inc
lahf
adc
shlb
jns
or
or
or
outsb
adc
stc
js
ss
lahf
cltd
jecxz
decl
mov
sbb
jp
popa
mov
adc
pop
sbb
popf
or
jl
mov
or
dec
sub
and
xor
insb
aad
fdivl
mov
aas
test
in
adc
aam
out
inc
popf
pop
push
ret
push
pop
mov
push
int3
nop
out
pop
int3
add
fimull
jecxz
add
sbb
fcmovb
insb
push
inc
pop
mov
dec
adc
gs
scas
dec
movsl
icebp
cld
je
cmp
mov
repnz
subb
rolb
test
inc
bswap
push
mov
out
xchg
jp
pop
push
adc
adc
sub
or
sub
scas
inc
arpl
inc
or
lods
adc
lcall
and
imul
mov
call
xchg
or
fstp
push
rorb
out
lret
repnz
and
call
inc
inc
dec
or
xchg
jne
movsb
icebp
jne
pop
cltd
and
jne
movsl
cmc
mov
xor
fisubrl
xchg
mov
cmpsb
shl
adc
pop
imul
test
dec
jns
test
jle
cmp
xor
and
fcmovnu
and
sub
es
outsb
xor
fsubr
rcr
xchg
addr16
push
xor
pop
fiadds
jo
add
dec
divl
ficompl
nop
xor
lods
je
insl
xcrypt-cbc
cmpsl
push
nop
add
push
pop
or
loope
lock
sbb
mov
add
sahf
mov
pop
mov
cmp
call
adc
rcll
jge
inc
xchg
das
mov
inc
mov
or
dec
sub
push
negb
push
outsl
xor
pop
xchg
out
pop
call
or
jle
pop
mov
lds
sub
pop
jecxz
movsl
sbb
je
pop
les
push
repz
lds
fisubrs
mov
ret
stc
xchg
daa
mov
sti
jbe
dec
por
or
dec
sar
cmp
jp
pop
cld
fcoml
vunpckhpd
int3
mov
mov
lcall
imul
and
inc
std
leave
mov
sub
pop
dec
inc
mov
subb
mov
jmp
loop
mov
lahf
pop
and
push
aaa
push
inc
lock
pop
jmp
jnp
popf
sahf
pushf
cmp
sub
push
pusha
icebp
stos
xchg
lret
inc
inc
lret
mov
popa
aam
or
js
push
xor
dec
xchg
and
fstpt
data16
sarl
outsl
ja
xor
pop
jle
divb
ret
cli
sar
mov
outsb
jg
test
mov
aam
aam
dec
fisubrs
jae
or
push
xor
push
push
es
adc
fdivrl
jl
inc
in
mov
sub
mov
add
sub
push
add
test
xchg
push
xchg
mov
cmp
in
sti
inc
dec
dec
mov
add
loop
push
dec
es
cld
xchg
je
ljmp
sub
sti
push
fidivrs
jae
ret
aad
inc
fildll
lahf
dec
orb
insl
sbb
cmp
sbb
cmovg
pop
sarl
push
fsubs
cmp
inc
mov
cwtl
addr16
negb
cmp
pop
lcall
insl
imul
xor
jne
xor
cmpsl
pop
jns
jne
cmpsl
xor
out
pop
pop
add
mov
cld
adc
mov
fldcw
clc
jmp
mov
mov
idivl
xchg
jmp
je
out
dec
pushf
insb
or
dec
data16
ret
loopne
in
jno
pop
mov
push
xchg
pop
push
lds
repz
push
jmp
mov
mov
pushf
sub
int
leave
ss
aaa
sbbl
scas
ljmp
cmp
rclb
sarl
inc
lcall
ss
mov
aad
fucomi
sub
sbb
leave
fisubrs
lret
cmp
add
sub
xchg
xchg
jge
jecxz
push
ja
or
scas
xor
jne
mov
fsubrl
cltd
rcll
lret
dec
xchg
aad
pop
mov
hlt
sbb
cmpsl
aaa
test
enter
cs
sub
or
or
into
sbb
cmp
fcmovnb
push
jns
mov
aam
mov
insb
xor
push
inc
jg
mov
adc
sub
dec
xor
jge
or
add
inc
orb
add
scas
sbb
pop
test
add
cmp
cld
mov
jno
cs
mov
push
xchg
imul
push
in
pusha
cmpsb
cmp
inc
out
mov
bound
or
xchg
sti
or
repnz
dec
gs
jmp
jo
dec
or
cs
inc
jno
xor
mov
pop
or
addr16
das
into
mov
sub
push
mov
sub
push
out
pop
cmp
xor
mov
pushf
insb
or
mul
jmp
rcll
adc
add
jmp
inc
loope
and
dec
jae
sbb
mov
mov
cmp
mov
dec
clc
push
pop
or
pop
mov
cmp
scas
cmp
mov
test
decb
in
mov
scas
ja
je
inc
or
adc
ljmp
and
jo
add
test
sbb
insb
inc
add
mov
cmp
pop
popf
push
aaa
pop
fcmovnu
fstpl
cmp
jo
arpl
ficoms
in
sub
cmc
mov
and
hlt
test
test
scas
push
test
fidivrs
mov
fdivp
cs
push
imul
or
mov
movsl
clc
jl
les
lds
bound
inc
bswap
in
insl
lahf
push
cmc
cmp
addb
pop
movsb
push
insl
addr16
fdivrs
outsb
or
ret
loope
sub
ss
jo
xchg
rclb
iret
hlt
adc
mov
add
es
mov
xchg
cmpl
add
shl
punpckldq
cmpsl
shl
mov
cmp
mov
mov
dec
pop
fldt
mov
call
dec
dec
mov
rdmsr
xchg
int
fstps
leave
mov
out
es
aaa
xchg
gs
jns
scas
jmp
sbb
sbb
leave
adc
sub
add
scas
ja
in
push
jns
dec
sbb
push
lods
adc
ja
push
xchg
mov
out
movsl
pop
sbb
dec
loopne
lret
mov
popf
lock
adc
jns
mov
iret
dec
dec
inc
pop
or
pop
push
or
adc
fcmovnbe
jo
mov
pop
cmp
mov
jb
fwait
nop
lods
or
rorl
ret
arpl
rolb
iret
addl
rcrb
lods
mov
test
insl
scas
jmp
sbb
scas
out
pmullw
inc
ljmp
out
sbb
pop
shlb
dec
hlt
mov
fbld
repz
mov
cltd
dec
mov
aad
and
dec
outsl
jmp
sbb
imul
test
add
and
popf
cmpsb
and
sbb
imul
stos
frstor
mov
xorl
bnd
fimull
pop
push
push
aam
subl
pop
aas
in
outsl
movsl
bound
aad
mov
aaa
sub
into
mov
outsb
or
in
mov
mov
or
mov
or
cli
outsl
jp
push
and
in
nop
xchg
sbb
gs
ret
movsb
and
gs
stos
insb
lret
lds
popf
fstl
and
cltd
mov
inc
and
xchg
pushf
not
mov
fldcw
out
add
mov
ds
movsb
sub
push
xor
mov
sti
mov
mov
xchg
call
push
mull
mov
pop
das
pop
or
sub
fdivr
add
xchg
ret
xchg
cltd
mov
xlat
mov
jg
dec
pop
fdivr
into
and
mov
dec
fisubs
pop
fldl
popf
shr
push
xor
popl
mov
mov
outsl
arpl
aad
push
add
test
mov
movsl
and
ret
lods
movsl
addr16
mov
pushf
push
aam
in
leave
lock
xchg
mov
je
xor
push
adc
jmp
pop
dec
ss
imul
pop
pop
loopne
sbb
sub
mov
sub
cmpsb
cmc
inc
sbb
loopne
pop
xor
in
cli
mov
inc
adc
adc
xor
jecxz
dec
mov
jmp
mov
fwait
stos
inc
aas
add
push
in
ss
aaa
jle
lahf
inc
push
dec
push
pop
dec
dec
xor
popf
aad
jbe
mov
pop
pop
data16
subl
mov
cmp
js
imul
mov
xchg
int3
dec
rcl
cld
mov
xor
inc
and
add
or
cmpsl
pop
jbe
add
inc
pop
mov
scas
dec
jecxz
push
int3
lea
lcall
bound
subb
fs
int
inc
mov
testl
cld
push
xor
sbb
pop
adc
pop
pop
lods
cmpsl
inc
cmp
xor
jmp
lahf
fmuls
rcrb
xor
adc
jge
xor
inc
jecxz
aaa
add
nop
cmp
pop
and
inc
dec
subb
outsl
sbb
test
mov
testb
lcall
dec
sub
sbb
sbb
push
lods
roll
xchg
push
jnp
hlt
enter
int
test
scas
ds
dec
imul
pop
mov
bound
mov
idivl
adc
ljmp
jne
ja
mov
fs
insl
or
sub
sbb
call
cmpsb
pop
lea
enter
loopne
or
adc
cltd
je
inc
insb
or
mov
orb
fstpt
popl
xchg
jp
sbb
fstpl
jbe
add
sub
adc
icebp
adc
stos
out
das
lcall
add
add
call
pop
push
imul
dec
subb
sub
mov
fldenv
and
cltd
mov
push
das
jnp
mov
inc
jmp
push
sbb
sbb
jo
fdivrl
jne
in
and
pusha
pop
xor
icebp
scas
cwtl
insl
gs
lahf
pop
inc
jns
testb
rcl
lret
jge
mov
mov
enter
xchg
int3
mov
lcall
js
mov
les
lcall
mov
inc
mov
sub
shl
test
lret
imull
popa
mov
adc
push
ror
outsl
insb
leave
repnz
call
or
cltd
xor
pop
cmpsb
pushf
ljmp
dec
sbb
lods
outsb
jns
cwtl
xchg
loopne
pop
out
fistps
inc
insl
mov
sub
adc
dec
push
cmpsb
sbbb
addr16
cmp
adcl
push
jbe
pop
jmp
jb
mov
mov
mov
sub
inc
jnp
test
pop
leave
movsb
mov
in
mov
out
dec
in
ljmp
push
mov
mov
jle
xor
mov
inc
mov
movd
rcr
popf
jge
gs
jno
xchg
add
mov
fcomps
cmp
imul
jbe
mov
loope
adc
xchg
sbb
arpl
jne
pop
adc
xchg
cmp
jns
loop
pop
data16
shl
xchg
repnz
inc
jmp
jae
xor
add
cmp
inc
pop
lock
ds
mov
loopne
sahf
movsl
gs
jbe
inc
mov
insl
stos
fidivrs
xor
pusha
sti
gs
imul
mov
jnp
test
pushf
addl
lret
imul
stc
fstp
xor
jg
lcall
jle
movsb
mov
mov
cltd
in
cmc
cltd
je
fdivl
push
ret
jl
std
cmp
jp
sub
repnz
jmp
negb
ja
inc
les
movsb
jg
xchg
bound
test
stos
jl
fwait
xchg
jbe
or
inc
xchg
mov
pop
or
xor
pop
imul
mov
dec
stos
aam
pop
arpl
jb
push
pop
rorl
scas
pop
sub
jbe
adc
mov
insl
nop
jmp
add
lcall
int3
dec
inc
dec
adc
xor
stc
jg
pop
xchg
push
ja
sub
jbe
jae
sbb
mov
jmp
imul
lods
adcl
xchg
sarl
jp
sbb
daa
pushf
xchg
xchg
fadds
pop
push
icebp
inc
shll
sbb
or
jb
adc
pop
js
nop
mov
push
enter
jg
add
mov
dec
jbe
jmp
aas
lret
jbe
hlt
jge
adcb
mov
arpl
xchg
xchg
lods
pop
adc
inc
pop
push
add
xor
repz
mov
cmp
and
mov
sbbb
scas
ljmp
sub
insb
and
into
testl
in
pop
in
shr
insl
mov
jle
fdivs
and
push
dec
jnp
xorl
and
loop
dec
and
lret
xchg
and
adc
mov
je
movsb
inc
scas
mov
push
imul
flds
add
jmp
mov
movsl
push
push
add
push
icebp
add
sub
sbb
fsubrs
mov
fimuls
push
loope
es
addl
add
popa
add
arpl
pop
mov
mov
lcall
add
sbb
int3
or
lds
sub
in
push
jmp
in
pop
outsl
in
adc
push
jo
pop
and
cli
subl
out
cmp
scas
pushf
xor
test
sub
mov
and
testl
sarb
xchg
mov
pushf
mov
jecxz
sub
cltd
ss
lods
leave
inc
push
inc
cmc
mov
cld
imul
cmove
xchg
inc
mov
mov
adc
pop
clc
xchg
ret
lcall
movsl
xor
mov
mov
sbb
lcall
dec
xchg
enter
push
fistpll
daa
xor
jns
and
mov
adc
push
jge
xchg
shll
add
cltd
into
jge
fbld
sbb
add
insl
aam
push
daa
jl
daa
int
mov
and
or
push
icebp
lcall
xchg
bound
push
xchg
arpl
popf
popl
lea
inc
sub
push
insl
mov
xchg
ret
std
adc
dec
shr
xor
inc
mov
sbb
popa
pop
ja
dec
lods
adcl
lcall
stc
popa
test
outsl
jb
xchg
xor
mov
add
rorb
mov
out
lea
mov
out
sub
mov
sarb
bound
fs
add
xchg
loopne
aad
in
sbb
ss
lret
mov
daa
lea
add
mov
mov
xchg
pop
in
loop
andb
ret
popa
cwtl
flds
cmc
hlt
jge
jp
dec
sub
jns
fistpl
fistl
push
add
xchg
or
scas
movsb
dec
les
out
mov
cmpxchg
sub
nop
arpl
outsl
jp
inc
pop
sub
sub
xor
mov
out
or
rorl
add
mov
mov
inc
sti
lret
cmp
sbb
test
daa
test
cmpsb
or
test
inc
sub
sub
insb
inc
mov
stos
mov
in
mov
outsb
int
push
and
test
mov
lock
loope
pushf
sbb
mov
mov
mov
lods
mov
leave
movsl
lods
add
jo
cmp
aas
mov
jnp
ja
cmc
xor
test
js
inc
pop
roll
sbb
inc
scas
ja
jo
mov
int3
addr16
aaa
mov
mov
fwait
jns
inc
aad
cmc
cld
bswap
sbb
jmp
dec
jle
cmp
add
cmpsb
xchg
out
dec
mov
mov
cld
pop
out
dec
sar
adc
xor
jmp
aas
dec
neg
imul
and
push
add
mov
and
add
jns
sbb
xchg
shrb
xchg
sub
cwtl
pop
inc
inc
cmp
imul
push
orps
xor
les
je
cmp
cmp
fisubs
sbb
xor
popf
inc
adc
sti
adc
mov
out
clc
scas
jb
mov
lahf
or
jle
out
jp
dec
adcb
andl
mov
sub
mov
add
out
loopne
cmpsb
jle
out
pop
loopne
mov
in
and
lea
mov
push
in
fidivrl
aad
rcll
cltd
jg
popf
ja
dec
loop
and
andb
divb
out
sub
pushf
outsb
test
adc
loopne
dec
in
push
jecxz
xchg
cmp
out
leave
outsb
js
mov
cmp
push
mov
test
push
and
adc
lret
push
adc
inc
cs
dec
jp
inc
add
sub
push
roll
jae
push
xchg
jmp
sub
pusha
push
es
cmp
xor
pop
lods
push
addb
fs
jp
fwait
dec
mov
shrb
push
mov
xlat
mov
fiaddl
dec
sti
test
outsl
xor
and
xor
sub
lods
sbb
jecxz
test
ss
mov
repz
and
mov
xchg
les
jg
sub
xor
mov
arpl
cmp
jae
inc
mov
mov
pop
mov
cmc
call
add
fcoms
subb
scas
aaa
jne
icebp
jecxz
std
xchg
xchg
ljmp
imul
xchg
dec
loope
jno
push
int
xor
or
nop
adc
pop
jb
fs
mov
xor
mov
pop
xor
adc
adc
fsubrl
gs
in
fnstsw
test
call
pop
inc
inc
movsl
add
fistps
sbb
and
adc
sbb
cmp
pusha
ret
add
push
mov
cmp
sbb
xchg
pop
pop
jbe
das
mov
fnstcw
mov
rorl
in
lds
push
sub
negb
pop
clc
shlb
pop
test
cltd
popa
mov
clc
stos
jo
cli
mov
jecxz
mov
fcomi
fdivrs
mov
sbb
out
add
popf
iret
lods
movsb
push
dec
jmp
dec
sbb
inc
dec
jae
fcmovu
mov
sti
nop
inc
push
outsl
add
bound
fsubl
shrl
loope
stc
lcall
insl
pop
push
push
or
int
inc
add
sub
mov
aaa
addr16
xor
test
sbb
lahf
pushf
rol
cmp
push
dec
repz
ja
push
pop
mov
push
subb
outsb
xchg
icebp
repz
nop
jns
adc
or
decb
and
inc
outsl
enter
adc
pop
adc
add
cmovg
adc
lahf
lcall
xor
into
int
stos
mov
push
xor
sbb
jmp
pop
fcompl
fstps
inc
aam
adc
dec
nop
repnz
addb
mov
mov
ret
fistpll
out
rcrl
and
fnsetpm(287
fildl
adc
jge
pop
xorb
sub
mov
push
add
sti
pop
cmp
ror
inc
push
ret
ljmp
lret
sar
lret
lcall
cmp
popf
xchg
sub
fdiv
pop
pop
mov
xchg
inc
pop
xor
mov
mov
jmp
pop
cmp
and
mov
mov
xchg
fwait
and
mov
jae
stos
rolb
rcrb
daa
sbb
push
push
cmovbe
pusha
mov
push
out
sbb
push
lods
addl
popa
sarl
jl
mov
pop
hlt
inc
add
std
inc
xorl
fldt
mov
aas
addr16
int3
je
stc
lret
inc
test
and
add
mov
push
clc
xor
repz
sub
daa
dec
jl
mov
pop
test
jae
pop
and
fsubrp
gs
mov
lock
cltd
mov
lock
out
push
or
jbe
mov
and
mov
in
push
loop
int3
mov
into
out
addr16
das
push
push
and
insb
dec
push
clc
test
ret
ss
gs
mov
outsb
lods
cwtl
outsb
in
mov
int3
add
data16
ret
stc
adc
movsb
int3
xchg
push
scas
inc
pop
les
faddl
and
loope
ss
push
cmp
movsl
mov
sti
or
or
cmp
roll
stos
or
xchg
xor
xchg
lods
push
popw
inc
mov
stos
fsubrs
es
setge
and
inc
and
mov
pop
mull
clc
dec
add
lods
jecxz
call
js
pop
inc
addr16
jp
pop
iret
scas
push
cmp
pushf
dec
mov
jmp
and
mov
adc
add
pushf
mov
leave
jbe
das
les
dec
cltd
mov
shll
dec
jo
call
push
sti
je
cmp
xchg
call
das
mov
adc
fsubp
fmuls
ret
test
cmpb
rol
adc
divl
sbb
das
in
mov
sbb
cmp
fdivs
fidivs
push
insb
aaa
mov
inc
jp
fistpll
add
loop
les
insb
jmp
sub
mov
jp
call
mov
dec
or
cmp
or
mov
sti
cmp
in
mov
imul
and
gs
jns
jo
icebp
add
addr16
jno
inc
jmp
and
dec
mov
mov
loop
arpl
inc
repz
sub
xchg
and
mov
push
stos
int
pop
push
ficompl
pushf
shrb
movsb
jge
idivb
stos
add
ljmp
loop
inc
arpl
fnstsw
lret
loope
adc
xchg
jle
jle
in
in
faddl
xor
push
push
loopne
xlat
fwait
add
xchg
push
adc
ss
sub
inc
push
cmpsb
lcall
pop
xchg
out
xchg
sbb
mov
ljmp
int
or
lds
insb
out
jae
es
pushf
ss
out
cmp
sarb
cmp
inc
adc
lea
in
call
pop
dec
cs
pushf
ja
push
les
int
decl
cmp
cmp
dec
jle
adc
filds
push
cmp
cmpb
lods
js
push
ret
add
adc
sbbl
cmp
xor
pop
ficomps
pop
mov
in
jbe
sti
xchg
jmp
mov
fsincos
into
testb
lea
jl
sbb
xchg
outsl
repz
xor
mov
fstl
cli
cmp
dec
lcall
test
ja
or
sbb
cmc
nop
mov
jno
incl
mov
hlt
fiadds
jge
cld
fistpll
sarl
lcallw
cltd
xor
mov
loop
sbb
ja
xor
or
adc
inc
xchg
dec
lock
xchg
fnstcw
lods
cltd
xor
and
ficompl
test
jnp
xchg
xchg
es
cltd
cmp
loopne
mov
xor
sti
cmp
test
fists
dec
and
cmp
mov
fwait
imul
ljmp
add
cld
lcall
mov
mov
xor
ljmp
push
faddl
cmpsl
cld
cli
jecxz
inc
adcb
hlt
inc
cs
test
dec
cwtl
push
cmpsb
lcall
xchg
popa
xorl
cmp
pop
movsl
jbe
aaa
jnp
test
mov
dec
pop
or
rcll
and
je
lods
push
ja
xchg
push
out
test
mov
push
push
push
xlat
repz
pop
out
push
aad
sub
cmp
sub
movsb
test
adc
cmp
lcall
add
sbb
sbb
stos
aam
mov
mov
mov
int
fdivs
jg
mov
incl
and
lock
mov
dec
jae
fwait
push
lods
lcall
add
out
fcomp
dec
mov
or
dec
sbb
movb
push
inc
cmp
aad
cmpsl
jmp
fldt
or
les
out
scas
iret
imul
jns
das
enter
mov
add
mov
cmp
in
imull
loope
lcall
push
pop
sti
mov
cmc
sub
cmp
push
shlb
dec
movsl
cltd
or
mov
xlat
inc
mov
ljmp
inc
inc
pop
sahf
mov
mov
shr
out
pusha
dec
aaa
shll
add
inc
icebp
outsb
repnz
int
jbe
data16
popl
cltd
hlt
adc
inc
fisttps
call
ljmp
lock
scas
or
nop
sub
outsb
add
and
fsubrl
iret
jp
cmp
daa
mov
in
mov
js
jp
cs
mov
xor
mov
lock
outsl
ds
jle
inc
and
mov
andl
jmp
fwait
sbb
test
sub
ljmp
jle
movsb
mov
aad
loop
pop
add
aaa
mov
pop
adc
or
sbb
or
fcmovne
orl
jae
sbb
jno
dec
mov
pop
mov
adc
sti
jge
dec
fwait
divl
and
sbb
jl
orl
push
iret
jae
shr
or
push
sarl
cmp
adc
xchg
mov
jo
ficompl
push
mov
icebp
cli
loop
arpl
mov
sbb
xchg
and
scas
cli
outsb
pop
mov
clc
int
mov
lret
add
sahf
xchg
xchg
stos
sahf
sbb
xchg
cmpps
add
pop
shr
mov
sbb
jge
push
ret
cli
jmp
shrl
lods
clc
test
xchg
imul
pusha
xchg
xor
jg
imul
inc
dec
add
dec
xchg
inc
inc
aaa
jp
push
push
cltd
fdivrp
mov
je
add
call
in
push
dec
or
repnz
es
mov
mov
xchg
adc
jp
and
shlb
add
loopne
cmp
mov
mov
mov
push
outsb
cmp
mov
push
lcall
ficoms
lods
iret
loop
pusha
daa
stc
in
cmp
jae
repnz
fwait
scas
sub
push
sub
mov
inc
inc
ja
ljmp
mov
fdivl
test
pop
push
into
std
incl
lock
ror
or
push
shrl
aaa
pop
cmp
pop
in
aam
adc
cld
jle
jne
out
cmpsl
mov
out
js
mov
cli
xchg
mov
mov
pop
sub
jge
shlb
mov
xchg
jp
jbe
movsb
arpl
nop
mov
cmc
outsl
mov
add
fisubrs
add
fcompl
jecxz
fwait
enter
xor
int3
test
loopne
lods
push
xchg
imul
into
sub
jp
or
repz
inc
ljmp
cmpsb
jae
mov
stc
lcall
loopne
and
add
and
ljmp
aam
popf
aaa
ret
int3
mov
es
dec
ja
or
outsl
push
push
adc
in
cmpb
jp
dec
out
lds
mov
mov
ljmp
sub
sbb
repz
ljmp
jle
jnp
gs
sbb
mov
cmpsl
xchg
jmp
cwtl
mov
adc
inc
add
or
jg
stos
into
dec
lods
mov
sub
add
ret
mov
test
rolb
stos
pop
jne
inc
in
xor
lret
imul
arpl
jnp
jge
int
loope
cmp
ret
dec
xchg
arpl
and
movsb
cmpsl
jecxz
xor
pop
addl
call
out
push
cmp
jns
mov
jmp
jl
and
aam
das
mov
das
xor
clc
shl
inc
addr16
jge
sbb
sti
inc
cld
popa
fisttpll
add
clc
popf
ss
add
xlat
sub
pop
out
jbe
into
out
sbb
dec
sbb
mov
mov
stos
test
jb
lcall
mov
dec
jg
fstpl
cmpsb
insb
pop
loopne
jl
in
sbb
leave
mov
clc
mov
inc
pop
xor
mov
add
xor
xchg
jbe
and
mov
dec
adc
sub
les
jl
imul
pop
mov
mov
add
stc
sbb
fildl
xlat
leave
sub
inc
xchg
leave
imul
pop
push
popf
int
xchg
out
mov
dec
mov
rcr
cmp
mov
jno
jo
cmp
cmpsb
cli
sub
popf
and
test
shlb
ret
cmpsb
jb
test
push
int3
push
inc
test
pusha
test
or
mov
push
inc
outsl
mov
xchg
mov
dec
jns
xchg
fidivrs
out
mov
sbbb
mov
push
mov
xlat
xchg
mov
push
dec
xchg
xchg
dec
stos
mov
and
add
loope
lahf
ret
iret
cmovno
out
push
lret
out
add
cmpsb
aaa
inc
or
jecxz
aad
push
xchg
popa
sbb
popa
and
mov
add
iret
loopne
or
cmpsl
out
nop
scas
cmp
in
imul
mov
or
sbb
jbe
fildl
movsl
pop
xchg
jle
pop
nop
movsl
iret
add
imul
dec
cmp
push
push
pop
xchg
orl
mov
inc
pop
xor
int3
xor
lods
cmp
and
aam
adc
xchg
cmp
imul
loopne
adc
inc
jle
adc
push
xor
dec
xchg
xorb
shlb
mov
or
nop
insl
mov
std
mov
iret
push
pop
in
faddl
dec
mov
cli
dec
aad
arpl
iret
in
std
sub
stos
and
mov
aam
xlat
fistpl
mov
nop
mov
shrb
frstor
roll
ret
nop
fs
rorb
sbb
in
add
mov
dec
scas
pop
stos
push
in
inc
sub
in
jg
add
loopne
insl
pop
adc
icebp
lods
xchg
fsubl
jo
hlt
inc
std
loope
and
test
lret
jp
or
and
rorl
cmpsl
and
or
dec
jb
adcl
sub
jbe
cld
push
scas
or
subl
or
inc
push
enter
icebp
dec
push
iret
mov
xchg
xchg
add
sub
pop
leave
cwtd
iret
mov
notb
subl
sub
and
pop
push
fcoms
xor
push
cli
jne
std
mov
imul
and
jmp
jecxz
test
lods
ds
cltd
xchg
mov
sbb
adc
sti
xchg
jns
loopne
fdivrl
rorl
pop
xchg
je
imul
sub
mov
dec
movl
pop
pushf
mov
sbb
fstps
cmpl
pushw
mov
insl
mov
arpl
imul
pop
push
mov
adc
ljmp
sbb
sbb
lcall
popa
jae
jge
add
lcall
mov
aaa
inc
and
push
test
xor
das
repz
pop
xchg
in
test
sub
or
into
adc
xchg
mov
pop
fldln2
mov
push
pop
aaa
scas
fsubs
clc
sub
cmp
add
shl
inc
bound
testb
div
or
pop
and
push
push
jnp
fstps
clc
mov
lret
ret
cmp
and
sub
cld
inc
jne
lcall
mov
push
push
xor
lods
ja
or
fs
lock
inc
pop
test
test
adc
aam
int
cli
dec
sub
aad
cld
pop
xor
loopne
jnp
cs
inc
sub
jmp
jge
dec
adc
test
dec
aad
cltd
jmp
mov
andl
inc
push
sub
mov
leave
or
push
lods
mov
fldl
ret
mov
insl
mov
dec
insl
xor
leave
push
adc
inc
loopne
mov
cli
xchg
jne
jge
lds
imul
and
inc
test
jl
frstpm(287
dec
les
fsubs
aaa
fsts
fisttpl
ds
lods
cmp
arpl
add
jno
test
bound
xlat
sub
in
and
in
cltd
push
or
popf
enter
or
test
in
fcoml
leave
aaa
jne
jbe
in
push
sub
add
cmp
and
pop
shll
push
imul
pop
push
ret
nop
pop
cmp
add
lret
jmp
lock
jne
div
test
inc
mov
or
into
sub
cmp
hlt
jno
cmp
mov
mov
neg
ja
jge
xor
call
popf
nop
iret
lds
shll
out
fisubrs
adc
into
sbbb
es
mov
popa
ljmp
mov
pusha
mov
lods
or
mov
push
mov
jnp
mov
dec
push
test
jae
jl
aam
xchg
icebp
jge
xor
adc
jo
inc
jno
mov
or
dec
sbb
push
jae
ret
das
mov
addb
bound
lret
int3
xor
cld
out
dec
adc
into
dec
cmp
push
push
sti
mov
xor
enter
jo
xlat
push
inc
mov
je
nop
sbb
xchg
mov
sub
push
jge
dec
sbb
cld
mov
or
xchg
cmp
gs
fisubrs
push
test
and
xchg
jno
addr16
adc
inc
fstl
cmp
cmc
mov
sarb
and
ret
int3
pusha
xor
cmp
clc
dec
mov
repnz
mov
jb
mov
xor
sahf
nop
ret
mov
or
cmp
or
or
sub
outsb
xor
inc
fs
pushf
mov
sbbb
push
cmp
sub
mov
test
cmp
xchg
or
jle
imul
xor
in
addr16
push
test
jmp
jae
ds
lcall
and
lds
inc
pop
or
pop
sbb
mov
call
and
xor
sti
stc
enter
add
cli
jp
cld
xchg
mov
leave
ss
xlat
movsb
arpl
ja
cmpsl
or
and
cmp
adc
xchg
and
pop
xor
inc
lock
jecxz
fisubrl
sbb
add
or
fs
cs
dec
test
test
push
outsl
jb
xor
mov
clc
inc
bound
pop
idiv
xchg
add
mov
xor
test
mov
mov
into
pop
cmp
imul
xchg
xlat
fsubl
repz
cmp
and
divl
iret
imul
cmpb
lahf
cli
ret
fs
movsl
jae
mov
inc
jle
xor
int3
mov
pop
ret
xchg
cld
xchg
pop
sti
daa
sbb
or
sbbb
jl
shrl
into
xchg
je
sbb
xlat
sti
sahf
sti
push
dec
int
or
aaa
shlb
mov
mov
or
mov
repz
out
pop
imul
jns
hlt
popa
fisttps
and
dec
fimuls
and
push
add
pop
jp
fisubrs
and
sub
inc
sbb
mov
jmp
enter
gs
lock
cltd
mov
adc
rcll
sbb
mov
xor
and
mov
add
iret
iret
jmp
sbb
push
loopne
in
adc
or
pop
adc
lods
repnz
cmp
stos
ret
add
mov
cmpl
imulb
jb
movl
mov
pop
int
xor
sub
adc
adc
jbe
dec
stos
sti
mov
cmp
aad
std
leave
pop
mov
mov
shlb
push
push
aam
out
cmp
out
daa
mov
and
xchg
jle
movsb
dec
inc
daa
cmp
pop
lods
push
xchg
cltd
xchg
hlt
sarl
and
negl
push
push
testl
adc
cmp
adc
pop
shl
push
stos
cld
arpl
or
pop
inc
push
das
cmp
mov
jmp
adc
mulb
outsl
inc
xor
pop
ret
outsb
je
nop
inc
xor
mov
jl
mov
mov
cld
push
pushf
pop
push
xchg
jb
cwtl
inc
aam
inc
rclb
add
mov
rorb
xchg
mov
ljmp
out
lea
and
sub
inc
enter
imul
sahf
fstpl
fidivs
jno
mov
addl
jle
add
pop
inc
dec
mov
dec
clc
popf
inc
incl
adc
xchg
dec
cmp
jbe
loope
jp
sbb
outsb
imul
addr16
insl
aas
int3
xor
push
mov
mov
outsl
repnz
loopne
push
into
int
outsb
mov
das
pop
mov
or
mov
xor
hlt
jnp
out
into
pop
mov
inc
cmp
jo
lret
notb
out
add
pusha
out
aad
iret
imul
ljmp
lret
ret
mov
mov
cltd
sub
xchg
or
sub
adc
ficoms
xor
stc
ljmp
or
mov
ljmp
call
and
aaa
pop
das
sbb
push
xchg
push
jns
adc
mov
xor
or
mov
mov
sahf
jb
adc
out
mov
test
jns
jecxz
push
pop
dec
xchg
pop
outsb
fnstsw
fsubl
enter
inc
xchg
lea
inc
mov
repz
clc
ret
mov
lret
in
pop
lret
jmp
shlb
sbb
inc
sub
mov
cmp
mov
ss
fdivrl
int
push
mov
mov
push
stos
mov
fadds
into
dec
rolb
inc
loop
out
adc
dec
push
add
mov
or
dec
sub
les
adc
cmp
cmp
mov
scas
jmp
ret
call
scas
mov
adc
cli
pop
jp
lcall
add
sti
repnz
ret
in
pop
and
mov
jb
mov
adc
pusha
movsb
or
push
shr
pushf
cmpsb
out
dec
push
dec
rorl
cmpsb
cmp
push
push
ja
adc
push
lods
dec
jns
roll
mov
cmp
xor
fsubrl
outsl
sbb
in
cmp
xor
adc
sbb
lods
dec
dec
notl
sub
cmp
sbb
sub
xor
sbb
jp
pop
inc
orb
in
dec
jae
lret
xchg
mov
out
arpl
cmpsb
xchg
push
aam
xchg
xchg
cs
fstps
push
loopne
leave
bound
xor
ficompl
leave
add
das
push
mov
sub
nop
fmuls
popa
cmc
lahf
add
inc
or
ror
gs
data16
adc
pop
out
pop
push
xchg
mov
mov
inc
pop
lret
mov
std
xor
and
jne
mov
mov
mov
hlt
fistpl
dec
mov
ss
inc
xchg
js
xchg
jmp
adcl
pop
and
push
ficoms
jno
les
jbe
dec
lcall
xor
jecxz
cmp
xchg
adc
popa
sub
xchg
call
outsb
sub
jo
stc
sbb
sbb
lcall
mov
sbb
mov
aam
outsl
add
or
sar
xchg
roll
insb
adc
xchg
mov
sub
popf
cltd
insb
pop
push
jp
add
push
jge
stos
sbb
leave
or
orb
pusha
pop
cli
decl
xor
sub
imul
dec
mov
fbld
test
xor
bound
or
orb
sahf
in
cmp
lahf
xchg
mov
xlat
sahf
sub
adc
daa
and
arpl
out
jo
mov
loope
add
adc
sbb
sub
int
js
lock
cmp
hlt
cwtl
mov
and
adc
push
push
ljmp
xchg
lahf
imul
call
xchg
xchg
lea
jns
xchg
adc
jae
inc
xchg
mov
sar
cmp
add
mov
cmpsb
push
das
add
icebp
popa
jae
sbb
lret
popf
cmpsb
test
dec
cmp
popa
jne
xchg
sti
cs
pop
push
lds
inc
stos
jp
mov
imul
jl
mov
dec
stc
sub
filds
push
gs
push
inc
out
push
or
add
iret
scas
mov
xlat
xchg
cmp
ret
sbb
jp
jno
pop
pop
xchg
or
mov
xchg
loope
and
divb
jmp
fwait
push
inc
pushf
stos
add
jmp
movsb
mov
cmpsb
popf
mov
pusha
testl
stc
mov
imul
data16
fcompl
push
push
sbb
and
stos
mov
pop
repnz
add
jle
loopne
mov
push
xor
pop
adc
add
mov
sub
cmp
push
dec
mov
pop
mov
cli
push
push
outsb
fiadds
aad
aam
clc
in
adc
ja
andl
es
inc
mov
fidivl
mov
xchg
ret
leave
adcl
je
repz
cmpsl
pop
mov
aad
dec
add
mov
cvtpi2ps
push
push
mov
xchg
jl
cs
sbb
push
cmp
push
or
in
cmp
fsubrs
nop
in
jl
pop
dec
repz
cmpsl
lods
jae
push
jp
clc
jl
jb
pop
adc
in
test
mov
stos
movb
fincstp
mov
dec
mov
lret
push
fcmovnu
in
pop
mov
lods
push
loopne
loopne
enter
in
fstpt
pusha
or
lods
and
mov
shrl
jmp
out
lahf
xchg
mov
out
xor
lods
inc
rcrl
fld
sti
sub
mov
daa
or
faddl
lret
mov
add
into
fwait
mov
adc
addr16
fiaddl
pop
xchg
sbb
fwait
pop
xchg
out
or
sbb
xchg
push
sbb
fwait
inc
mov
xor
adc
mov
hlt
mov
mov
mov
dec
push
pop
inc
icebp
loope
jmp
mov
xchg
or
lcall
cmpb
push
mov
cmp
xchg
pop
das
dec
dec
dec
xchg
rorb
jge
stos
push
roll
add
insl
push
shlb
xor
ss
adc
push
fidivs
push
adc
clc
mov
push
stos
jne
mov
in
xchg
xor
out
ret
cmp
out
mov
in
int3
or
or
lcall
xchg
out
push
insl
push
das
test
push
push
jp
xor
lret
adc
loope
push
ret
mov
enter
nop
fchs
sbb
ljmp
cmp
mov
push
or
push
jmp
push
adc
sahf
repnz
dec
clc
adc
loopne
jmp
inc
push
push
mov
cltd
sub
mov
inc
sub
dec
out
mov
popf
jle
lock
or
or
in
fsubs
enter
sub
movsb
insl
push
mov
jae
sbb
pop
cmp
ljmp
xor
or
push
lea
daa
jns
sub
mov
pop
inc
and
xor
aaa
mov
mov
cmp
xchg
adc
imul
fs
aam
ror
aad
enter
rolb
movsb
or
popf
inc
clc
test
or
int
cli
imulb
into
test
fwait
sub
fldcw
xchg
ja
cmp
mov
mov
insb
fsubrs
cmp
jecxz
in
lods
and
cmp
int
in
cs
cmpl
pusha
or
ss
mov
mov
cld
sub
es
pop
dec
dec
dec
addl
addb
mov
xor
rcr
rcrl
sub
movsl
loopne
mov
cld
dec
out
mov
mov
mov
das
add
or
jmp
dec
push
xor
fs
sub
xchg
leave
jno
rcrb
int
xchg
mov
and
in
pop
sbb
add
lcall
sbb
mov
sbb
cmp
or
push
cmp
mov
xor
jne
jle
pop
mov
adc
outsl
pop
ds
pop
ficoml
popa
dec
fstpl
jecxz
inc
cmp
mov
push
pop
aaa
push
outsl
jb
ret
dec
mov
lahf
popa
in
sub
and
jecxz
lock
jbe
repnz
cmpsb
sub
pop
cwtl
pop
rcr
movsl
pop
xor
push
cmp
cld
dec
and
sbb
fmulp
sarl
jnp
add
push
movsb
aas
dec
pop
jmp
aad
in
dec
dec
pop
pop
push
pop
jne
or
mov
lods
cmp
movsb
push
push
add
insb
enter
mov
or
inc
imul
xchg
pop
mov
mov
test
popf
lods
and
lods
jmp
jns
xor
call
insl
int3
add
scas
pop
mov
jecxz
dec
sti
jecxz
sbb
sbb
dec
fnstenv
cmp
inc
add
ror
adc
xchg
daa
sub
pop
cld
sbb
cs
jl
cli
mov
gs
xchg
pop
bound
in
fistpl
inc
test
movsl
or
idivb
mov
out
sub
aad
les
bswap
pusha
out
jecxz
daa
es
insb
in
push
pop
sub
fdivl
inc
outsb
rcrl
mov
popa
pop
iret
scas
or
mov
inc
xchg
incb
add
xor
cmp
icebp
dec
cmpsl
gs
insl
pop
fimull
mov
decl
iret
mul
jb
sti
stc
mov
sbb
cmc
in
xor
sbb
cs
nop
add
push
push
cs
jne
mov
movsl
fdivl
mov
test
mov
adc
xchg
push
out
jne
jno
lret
xor
jb
dec
jecxz
xor
and
or
pop
out
xchg
jmp
clc
pushf
popfw
cwtl
lcall
gs
enter
in
mov
inc
cwtl
ret
sub
idivl
cmc
inc
push
iret
ror
fldenv
outsb
clc
es
ja
adc
shr
nop
or
inc
or
push
cltd
sub
jl
lcall
or
ds
jmp
testl
pavgb
xchg
xor
das
cmp
lds
dec
mov
rorb
and
jae,pt
fwait
mov
lret
inc
mov
inc
jg
outsb
cwtl
mov
popf
lock
lahf
int3
xor
stos
aas
mov
and
and
int
or
jecxz
cmp
jecxz
mov
mov
pushw
inc
pop
xor
and
stos
popa
rolb
out
adc
push
in
shll
and
push
push
inc
pop
idivl
flds
dec
xchg
sbbb
push
cmp
pop
xor
mov
push
cmpsb
stos
jae
fildll
rcll
bound
sub
rcr
xor
mov
push
nop
mov
rcll
scas
pop
jmp
lods
outsl
fucomp
sarl
xor
dec
dec
ret
daa
jl
mov
clc
pop
pushf
cmpsb
jo
aaa
les
or
or
cmp
or
imul
jae
mov
fs
xor
inc
lret
aaa
jp
incb
fimull
shrb
dec
outsl
lcall
cmp
sbb
jmp
adc
inc
mov
ret
lods
outsl
pushf
adc
lcall
mov
mulb
mov
fwait
js
xor
mov
ja
and
popa
not
repz
mov
arpl
adc
int3
jle
je
mov
mov
jg
push
xor
xchg
adc
scas
sub
and
jne
loope
faddp
mov
pop
scas
test
ds
sbbl
jbe
nop
in
mov
clc
xlat
cltd
shl
popa
pop
rcrb
add
lahf
loop
aaa
jbe
test
insb
popf
stc
daa
popf
testl
jo
out
stos
mov
daa
add
std
pop
stos
decb
fs
xchg
jg
or
cvtpi2ps
or
ret
fdivs
xchg
jne
shrl
or
push
mov
or
push
insl
pop
out
bnd
flds
sub
fisubl
leave
or
shll
cvtdq2ps
fstpt
mov
adc
mov
add
add
jl
scas
xchg
push
testl
mov
mov
int
ret
fistl
mov
mov
addl
mov
test
mov
into
push
scas
and
fs
mov
nop
rclb
sti
cmpsb
mov
sub
push
cs
mov
xlat
fs
inc
arpl
lds
adc
shlb
in
ja
add
popl
subb
ds
fisttps
enter
mov
xchg
add
cmp
aaa
loop
imul
lahf
popf
rcll
jl
push
lret
idivb
push
ucomiss
sbb
mov
out
cmc
movsl
cwtl
js
loopne
pop
repz
cmpsl
fildl
aas
pop
cmc
adc
les
push
cmp
ja
mov
or
testl
popa
xor
popf
xlat
aas
xchg
sahf
mov
dec
sub
push
nop
inc
nop
and
pop
nop
push
and
mov
std
sarb
in
popf
xor
xchg
int
dec
cmpsb
addr16
cli
jp
xor
push
test
pop
cmpsb
jns
int
ret
mov
pop
add
faddl
cmp
popf
outsl
mov
std
test
jne
xchg
fs
jle
cli
mov
mov
or
inc
enter
jecxz
cwtl
stos
mov
cmc
mov
mov
mov
cmc
addr16
sub
mov
cwtl
sub
xchg
cltd
popa
mov
cld
leave
and
or
pop
cmp
clc
sub
ror
mov
mov
fisubs
xchg
call
mov
push
mov
cmp
repz
lods
xchg
dec
sbb
add
xchg
js
cmp
inc
ret
mov
and
lcall
sub
movsb
xchg
scas
out
cmp
jae
sahf
jno
sbb
insl
loope
mov
ret
xor
out
xor
mov
aam
fmuls
cmp
mov
cmp
repnz
pop
jecxz
jl
xchg
mov
movsl
xchg
shlb
pop
jbe
push
inc
inc
addr16
push
es
repz
adc
nop
clc
das
cld
ret
je
mov
lret
or
out
adc
test
xor
add
aas
cltd
insl
jns
sub
lds
dec
fdivrl
dec
out
cmp
push
inc
mov
lods
test
push
icebp
jle
xchg
sbb
jmp
das
lcall
daa
mov
adc
in
xlat
pop
adcl
add
sub
xor
mov
dec
lods
mov
mov
sbb
sahf
mov
adc
pop
rol
int3
aad
xorb
ja
test
push
adc
es
inc
mov
fsubs
mov
pop
rorb
loope
inc
ss
xchg
xchg
inc
in
leave
or
into
aas
fsubr
mov
adc
fwait
pop
xor
fiadds
out
scas
fnstcw
sahf
push
andb
jae
mov
inc
mov
es
fmuls
lcall
fcmovnbe
out
jne
cmp
filds
loop
cmp
or
xor
inc
dec
push
xor
dec
mov
push
sub
scas
das
push
bound
and
out
fildll
adc
pop
stos
inc
mov
sbb
fdivl
pop
in
pop
outsl
cld
pop
sarb
gs
or
sub
data16
jl
jno
stos
sbb
mov
test
and
xchg
in
insl
push
jae
adc
inc
popf
add
movsb
add
shlb
fyl2xp1
shll
xchg
xchg
cmp
ret
cmp
sub
push
scas
div
dec
add
mov
mov
dec
ja
shr
jmp
repnz
xor
push
je
adc
adc
mov
mov
adc
aad
mov
jge
inc
adc
push
or
xlat
dec
fcmovb
addb
mov
inc
mov
add
fisubrs
cmpl
ret
repz
test
xchg
cmp
idivl
jae
ficomps
mov
inc
cmpsb
aam
out
fdiv
repnz
mov
fidivs
jp
jmp
into
and
jle
push
insb
lods
icebp
lods
repz
sarl
mov
sub
bound
push
or
cld
cmp
xor
clc
rcrl
out
add
stc
aam
mov
add
lret
fdivr
inc
jbe
add
test
push
insl
jmp
xchg
xchg
xor
pop
test
pop
dec
xor
sbb
fmuls
decl
scas
mov
cmpsb
mov
push
js
insl
ret
out
lock
fchs
xchg
and
loopne
dec
pop
addl
fmul
and
add
dec
ret
push
pop
dec
sbb
andl
xor
push
dec
in
xchg
cmp
or
dec
add
ja
lods
or
adc
lcall
xor
jno
js
adc
pop
and
inc
cmpl
pushf
cmpsl
mov
add
sbb
or
mov
out
rcl
cmc
test
mov
lcall
xchg
in
add
xchg
ret
mov
aaa
cmp
add
ds
dec
lds
inc
cld
shl
mov
sub
negb
push
popf
push
jp
or
mov
or
dec
adc
lods
or
cli
dec
ljmp
dec
cld
sub
mov
arpl
mov
nop
outsb
add
pop
sub
push
xor
add
aas
jnp
test
sub
lods
lret
ljmp
clc
inc
adc
ljmp
jge
ds
in
and
inc
clc
in
sbb
push
es
mov
cltd
loopne
jmp
shll
leave
popa
in
int3
adc
pop
xchg
in
clc
js
mov
sbb
loopne
out
and
fmull
xorl
fsubr
jle
int
test
shlb
mov
pushf
xor
inc
repz
shl
mov
daa
pop
inc
and
pop
adcb
xor
fidivs
xorb
xor
js
and
enter
movsl
push
arpl
addr16
in
and
xorl
mov
push
stos
add
insb
jno
xchg
hlt
sub
inc
and
nop
pushf
loop
push
jno
inc
sbb
outsb
test
xlat
sarl
icebp
ljmp
or
fmull
in
mov
es
out
pushl
hlt
in
push
jae
shlb
loope
pop
lock
xchg
fwait
scas
test
shl
mov
jne
loope
jl
fwait
cmp
ret
mov
js
add
or
sbbl
mov
test
push
das
popa
dec
sbb
into
mov
sub
stos
add
dec
vprotb
inc
cmpsl
xor
icebp
fnstcw
and
pusha
fisttps
ret
subb
push
mov
push
leave
inc
rolb
fstpt
pop
xchg
xchg
and
push
xlat
in
dec
lahf
jg
pop
int
scas
mov
inc
jbe
hlt
xor
sub
outsb
mov
sub
stc
into
push
pop
sbb
add
pop
int
fistl
cmp
subl
inc
scas
add
mov
ret
dec
fimuls
test
mov
nop
test
mov
aam
stos
jl
cld
adc
or
in
jbe
sub
sahf
sbb
fdivl
lcall
inc
fcmovb
jno
push
push
ss
jp
repz
or
adc
xor
and
punpcklbw
jp
xchg
inc
das
outsb
ja
imul
push
jmp
sub
cltd
sub
das
js
jge
mov
in
dec
adc
mov
add
lods
mov
add
xor
fs
sub
aad
iret
mov
outsb
idivb
ss
mov
or
arpl
mov
enter
imul
push
imul
and
int
pop
lcall
leave
das
xchg
mull
imul
call
insb
outsb
or
cmp
fisttpl
sub
xor
test
add
shll
mov
outsb
fs
je
jle
push
scas
scas
imull
sub
xor
mov
ds
lods
notl
lret
xor
pop
jo
push
cmc
inc
les
sub
sub
cmc
or
sbb
push
sub
or
cmp
test
repz
xchg
es
cmp
lds
movsb
push
dec
and
decl
lahf
ret
push
in
ljmp
jnp
and
lds
jbe
add
fwait
movsl
jo
aaa
pop
addr16
sbb
mov
dec
cmp
mov
icebp
add
scas
push
mov
and
aaa
inc
cs
add
jbe
inc
movsb
scas
mov
lret
shll
lret
lret
mov
pop
jmp
xor
and
jp
jo
xchg
fstpl
push
inc
cmp
or
outsb
xchg
cmpsb
xchg
and
lods
sbb
push
mov
mov
mov
mov
bound
pop
mov
ja
and
push
icebp
or
out
ret
int3
push
xchg
inc
cmp
pop
jbe
lds
in
sbbl
or
cmp
mov
sub
std
add
sbb
imul
inc
push
xor
adc
cwtl
cmpsb
bound
nop
call
es
jae
sub
stos
nop
dec
push
mov
mov
jl
sarl
pop
nop
loopne
pop
outsb
cwtl
xor
adc
xchg
repnz
lods
lea
or
ljmp
adc
in
mov
shlb
mov
jbe
xchg
or
xchg
xchg
inc
push
jmp
pop
leave
cmpsl
jecxz
cltd
xchg
mov
and
or
imul
push
aam
and
fstp
test
jp
mov
xchg
movb
sbb
mov
push
stos
mov
pop
sti
jns
push
and
clc
lods
and
in
push
pop
dec
std
xchg
mov
add
inc
sahf
testb
xor
faddp
cmp
pop
xchg
inc
aam
in
ret
ret
push
es
in
mov
and
adcl
xchg
add
addr16
jl
shlb
call
jg
test
push
inc
imul
lods
ljmp
lcall
jp
adc
rorl
adc
inc
sti
ja
lods
and
lret
outsl
or
sbb
popf
jge
jge
movsl
jns
jbe
stos
imul
cmp
push
sbb
fbstp
dec
cli
je
testl
adc
mov
int
cmp
cmp
sbb
in
push
scas
jl
fimull
lock
js
faddl
jb
push
sub
mov
mov
mov
imul
outsl
sti
and
aaa
shl
ud0
lods
fldz
adc
push
lea
jmp
adc
icebp
out
scas
mov
mov
and
outsl
lret
ds
es
jno
dec
push
dec
fistpll
nop
insb
jle
negl
in
push
fwait
arpl
dec
out
xchg
int3
insl
int3
inc
xrelease
sub
and
pop
mov
inc
jo
sti
mov
sahf
xor
imull
bound
push
sar
xlat
dec
pop
popl
js
mov
sbb
addr16
or
lds
and
xlat
mov
xchg
movsl
dec
xchg
pop
sbb
popa
movsl
inc
mov
dec
mov
xchg
push
xor
xor
or
daa
sbb
in
jl
add
cli
div
insb
cltd
int3
pop
push
fs
sbb
sbb
sub
push
in
fnstsw
bound
int3
pop
jmp
inc
or
pop
xlat
sahf
mov
cmp
jp
inc
xor
lock
sub
sldt
add
cmp
out
sub
adc
lods
cwtl
aaa
sbb
rcll
inc
push
into
inc
pop
lock
mov
sbb
mov
inc
ljmp
call
adc
xchg
packssdw
and
psubsw
and
arpl
movsb
nop
js
push
jmp
or
leave
cs
add
test
adcl
into
aam
sbb
popf
cwtl
faddl
lods
hlt
dec
push
fucom
sub
or
lods
mov
loop
jl
in
jg
jno
pop
lods
out
mov
cmp
sbb
dec
jbe
adc
lahf
cld
sub
inc
push
pusha
lods
pop
push
popf
adc
or
or
add
daa
xlat
mov
sahf
dec
mov
mov
movb
test
push
jl
sub
xchg
mov
dec
shlb
lds
mov
das
xlat
shrl
insl
pop
out
pop
or
aam
push
jp
ret
push
ds
cmp
or
inc
pop
clc
mov
pop
fnstsw
lret
cmp
bound
ds
mov
hlt
jns
idivl
repz
inc
xor
cmp
mov
push
ds
inc
push
mov
inc
cmp
insl
xchg
xchg
sub
jne
jnp
leave
sbb
test
or
bound
sub
xor
andb
mov
fmul
stc
mov
stos
sub
add
sbb
mov
mov
pop
mov
mov
dec
inc
sub
flds
push
and
scas
sub
jne
mov
repnz
aas
push
xor
pusha
push
dec
add
inc
insb
test
mov
out
xor
ret
xor
cmpsl
ljmp
not
enter
lods
test
add
jecxz
out
push
scas
pop
add
test
and
mov
pop
mov
int3
pop
mov
sbb
jae
xlat
pop
movsb
cld
fbld
jecxz
insl
shrb
and
nop
and
aaa
cmp
cmp
push
cmp
and
cmc
cmp
pop
arpl
jno
imul
sbb
push
dec
test
dec
fbstp
shlb
xchg
inc
mov
mov
pop
add
xchg
andb
orb
cmp
outsb
mov
aas
and
add
push
sub
xor
lock
push
arpl
es
shl
pop
ss
mov
sub
outsb
add
nop
or
stos
xchg
inc
cmpsl
push
jecxz
and
std
test
and
adc
push
xchg
or
jbe
cs
cmp
mov
mov
sub
sti
mov
xor
imul
jo
int
loop
and
aas
aad
pop
call
les
inc
ljmp
lods
mov
sbb
idivb
fnstcw
add
sub
popf
aam
xor
jle
lea
rep
inc
imul
mov
insl
je
int3
sahf
xchg
cwtl
jecxz
movsl
aaa
and
repz
sbb
push
sbb
dec
adc
popf
lds
push
dec
xorb
sti
xchg
pop
scas
hlt
mov
mov
aaa
rorl
mov
fs
cmc
push
pop
incl
test
out
push
sub
mov
or
mov
les
sbb
hlt
inc
push
dec
test
ss
loop
icebp
call
pop
mov
inc
pushf
cli
pop
cmpsb
and
movsb
lcall
mov
jmp
push
inc
popf
jp
xor
jge
repz
mov
sbb
fldl
mov
mov
sbb
outsl
add
and
pop
sar
or
inc
into
pop
aas
into
sub
inc
daa
and
dec
xchg
cmp
sbb
dec
shlb
lock
std
sbb
adc
mov
sub
inc
mov
xchg
orb
ficoml
push
call
sub
xchg
inc
mov
sub
sbb
sti
inc
loop
popw
filds
add
outsl
testl
rcl
loop
fldl
jne
add
pop
pop
mov
testl
xchg
xchg
addl
rcrl
je
xor
scas
add
out
push
ret
dec
je
sbb
mov
ds
cmpb
test
in
sti
and
ss
sbb
adc
outsl
pop
or
addr16
lods
mov
lret
aad
popl
push
mov
push
mov
notb
fs
imul
dec
or
push
movsl
dec
div
adc
ss
pop
and
and
pop
cmpsl
jae
xchg
cltd
xor
hlt
fldcw
pop
jle
imul
sub
xchg
sub
pop
pop
pop
outsl
xchg
out
jg
jg
shr
out
scas
cwtl
xor
lret
fmull
loopne
jo
add
or
mov
lods
lods
sbb
int3
mov
sbb
mov
in
xor
jl
mov
rolb
cmp
xchg
scas
sarb
inc
fildl
jecxz
or
mov
ja
cltd
stos
stc
leave
push
daa
dec
es
push
scas
push
dec
xorb
in
test
outsb
xchg
ljmp
call
cltd
loop
mov
das
add
lds
pop
movsb
ds
fmull
pop
insb
mov
in
sbb
dec
lret
jle
int3
adc
mov
dec
aaa
mov
ds
push
push
in
xchg
cmpb
mov
dec
aas
or
mov
fimull
or
pop
xchg
mov
push
shl
ss
jbe
push
std
push
jmp
push
jno
jecxz
popf
adc
cli
xor
adc
dec
hlt
int3
mov
addr16
aad
pusha
out
in
push
pop
sbb
mov
shlb
mov
mov
andb
lahf
and
inc
mov
andb
pop
push
pop
and
jl
aam
stos
fisubrl
pop
notb
cltd
cmpsb
mov
sar
dec
dec
into
lsl
scas
dec
jns
adc
adc
inc
aas
stc
nop
js
adc
xor
out
xchg
cmp
adc
hlt
cmp
fildll
xchg
xor
test
arpl
xchg
mov
lea
pop
pavgb
xlat
push
ret
jge
aam
in
pop
std
sahf
int3
and
add
fstp
jbe
xlat
jb
lcall
fdivr
dec
rcl
jae
shlb
nop
inc
mov
adc
insl
pop
sub
in
stos
call
pop
jl
sbb
jns
fstpl
lret
negl
adc
add
sub
jb
mov
push
mov
push
les
push
jno
es
jnp
js
mov
loopne
ljmp
push
loopne
mov
sub
lods
jne
fmuls
mov
orb
xchg
into
outsl
push
lods
call
stos
jecxz
dec
dec
xlat
in
mov
gs
leave
dec
and
sub
and
add
arpl
add
cmp
pop
test
lea
pop
je
insb
out
lahf
pop
aam
sbb
sbb
add
inc
out
add
add
fwait
ror
testl
repnz
sub
lret
shrl
mov
pop
stos
fdivrs
repnz
sbb
cmp
loope
into
sub
enter
or
push
in
pop
scas
xchg
pop
adc
mov
std
out
and
push
ljmp
imul
lret
jmp
dec
test
cmp
xlat
and
leave
push
test
pop
das
xor
xor
in
or
test
jns
repnz
jno
inc
adc
outsb
jmp
push
int3
and
dec
aad
lret
icebp
rcrl
sub
push
xchg
cmc
adc
cmp
inc
pop
insl
dec
mov
jnp
out
jmp
push
jmp
mov
fs
mov
xchg
xchg
lret
int
adc
pop
andl
mov
and
mov
push
mov
pop
inc
jns
ljmp
xor
push
pop
arpl
test
outsl
add
jo
cmp
lret
decl
lcall
mov
and
enter
cmpsl
xchg
dec
fsubl
pop
xor
push
je
mov
fdivrs
mov
popf
imul
loopne
imul
mov
bound
mov
mov
imul
mov
or
cmc
dec
insl
jne
or
and
cmpsb
adc
push
jo
add
outsb
mov
icebp
dec
sbb
or
shr
in
outsl
sbb
inc
idivl
xor
push
xchg
sbb
out
adc
jo,pn
inc
pop
jp
mov
ja
clc
pop
xchg
aam
movsl
pusha
mov
push
cmp
inc
lods
cmp
pusha
jg
jmp
xchg
cli
add
mov
add
mov
jp,pn
fcoms
add
enter
and
add
fs
jo
mulb
std
insl
xor
dec
or
ja
aaa
sbb
dec
lahf
mov
dec
pop
push
mov
push
stc
inc
out
cmp
jg
or
mov
sbb
pop
shl
sub
or
inc
aas
repnz
fcoms
lahf
ds
cs
sbb
setl
xchg
out
jbe
movsl
ss
xchg
les
lea
or
outsl
outsb
int3
test
xor
sbb
adc
jns
push
push
and
shrb
movsl
xchg
add
mov
aas
xchg
pop
shrl
xor
inc
nop
jno
cltd
jge
sbb
outsb
dec
roll
ret
sahf
dec
mov
adc
imul
cmpsl
scas
mov
add
mov
xlat
dec
leave
inc
push
jg
test
iret
lahf
sti
js
add
pop
mov
xor
js
aad
in
outsl
push
lcall
sub
jecxz
jecxz
adc
mov
mov
in
push
rcrl
pop
cld
sbb
fsubrp
push
je
push
es
into
shr
outsb
cli
sarl
jnp
cmp
pop
mov
out
jns
sbb
hlt
lret
test
push
aaa
lcall
fwait
aas
dec
loope
adc
add
dec
xchg
xorl
inc
shll
add
shlb
in
pop
lret
push
int
adc
inc
sbb
xor
mov
daa
imul
test
pop
ss
push
enter
cld
mov
jg
test
cmp
push
in
xor
mov
and
outsl
aas
mov
sbb
pop
sub
sub
xlat
insb
sub
mov
xor
fnstcw
push
aaa
into
dec
outsb
dec
jg
adc
xor
ficoms
stos
jnp
cmp
movsb
cli
add
in
pop
mov
lds
popa
dec
xorb
jmp
popa
jbe
xor
fbld
and
sbb
push
xchg
fidivl
and
pop
adc
xchg
insl
call
mov
or
pop
xchg
fisttpll
dec
es
aaa
push
das
gs
pop
int
cmpsl
int
je
fwait
scas
or
mov
ret
dec
jp
push
loop
adc
jb
jnp
dec
push
push
fcompl
jae
add
negb
cs
lds
jb
mov
jns
pusha
mov
fnstsw
jb
pop
mov
mov
aam
or
or
xor
dec
sbb
clc
cmp
pop
out
xchg
dec
xor
mov
adc
sub
call
mov
push
jmp
das
jns
xchg
roll
bound
cmpl
or
ror
mov
divb
dec
outsb
jne
jo
js
into
ljmp
jbe
or
add
daa
push
mov
iret
test
jno
adc
stos
jl
add
sbb
in
cmp
mov
pop
pusha
mov
mov
aad
iret
int3
add
mov
clc
cmp
adc
hlt
fists
mov
cmp
into
xchg
xlat
stc
ja
fcomps
movsb
and
sti
cmpsb
in
je
mov
inc
jno
push
adc
jns
dec
cmp
je
scas
lods
inc
sti
bound
in
jp
lds
xlat
and
push
mov
adc
xlat
adc
mov
sti
adcl
out
sbb
cmp
pop
outsl
or
pop
cmp
daa
pop
sbbl
mov
out
push
xor
mov
xchg
scas
fdivr
sbb
std
imul
mov
mov
mov
cmc
mov
add
pop
cld
rcrl
jo
mov
xor
cmpb
push
or
mov
add
fiaddl
pop
jle
jae
pop
out
pop
jmp
testb
pop
mov
xorl
mov
seta
push
popa
nop
fstps
sbb
push
ret
sbb
or
sub
or
sbb
mov
sub
aas
into
dec
cmpsb
scas
jo
and
push
jle
adc
xor
lods
mov
rol
mov
push
add
gs
jne
push
lea
push
push
or
pop
cmp
jmp
mov
or
sub
push
sbb
lcall
pop
scas
rol
adc
pop
dec
enter
jmp
dec
aas
into
scas
and
xor
dec
aas
aaa
xlat
data16
repz
out
push
sub
clc
cwtl
cmp
xchg
jecxz
loop
xchg
or
movsb
xor
push
push
stc
and
popf
hlt
jmp
cmp
mov
adc
cmc
in
dec
cmc
call
test
mov
sbb
dec
popf
imul
shrb
or
fstl
add
dec
lods
and
sarb
cmp
je
aas
inc
and
add
pop
dec
push
ss
mov
pop
pop
inc
scas
mov
fs
jmp
pop
cwtl
jmp
pop
imul
aad
repz
cli
mov
push
or
scas
test
rcll
pop
push
shll
mov
lret
sbb
jns
outsb
xorb
orb
imul
pop
testl
jne
jne
test
cmp
push
cs
or
or
cmp
int3
out
push
pop
cmp
xchg
pop
mov
xchg
add
jns
pop
ror
aam
lea
xlat
inc
and
jle
xrelease
out
bound
xchg
jg
mov
mov
push
xchg
pop
ja
ljmp
test
aam
mov
mov
data16
pop
mov
push
mov
or
nop
inc
je
mov
rorb
xor
fldcw
and
rcll
ret
dec
mov
jbe
xchg
mov
clc
fisttpll
xorl
adc
aam
cs
test
or
pop
pop
jo
sbb
fnstenv
inc
fwait
pop
mov
jp
cmpsb
inc
and
xchg
adc
lods
cmp
push
cli
and
out
rep
sbb
stos
cmp
ljmp
push
sub
push
daa
clc
inc
sbb
xor
jg
loopne
mov
sub
out
sub
mov
insb
pop
mov
mov
xchg
mov
fdiv
xchg
push
jmp
mov
dec
xchg
pop
movsb
rep
pop
mov
lret
xchg
mov
xchg
out
jnp
notb
mov
out
sub
inc
nop
push
es
and
fisubrl
das
inc
sbb
rcr
mov
ss
out
push
in
mov
sbb
fwait
ret
xchg
shl
sbb
sub
fildll
xchg
fisubs
mov
outsl
in
js
dec
mov
outsb
loop
dec
pop
repnz
add
ja
int
and
sbb
xchg
push
dec
dec
push
in
aam
push
jnp
adc
jne
adc
adc
jg
das
gs
out
stos
pop
bound
pushf
or
lret
ljmp
cltd
xchg
and
and
sbb
inc
insl
fcmovb
sahf
imul
pop
int
aaa
es
lods
cld
jmp
int3
fs
cld
outsl
push
jp
or
ja
inc
pop
mov
ficoml
jbe
adc
cmpsl
addr16
add
sbb
mov
mov
test
cmovbe
js
xor
repnz
xchg
and
lock
sti
cs
sub
repnz
dec
nop
jmp
ret
lds
xchg
pushf
push
sbb
xchg
inc
outsb
decl
test
xchg
aaa
test
xor
insl
iret
mov
enter
lahf
lcall
pop
sub
aaa
mov
jg
push
cmp
in
lods
sbb
cltd
std
lods
or
loop
adc
and
fiaddl
cmp
mov
mov
enter
ss
sub
add
inc
aaa
call
jmp
and
in
ss
ja
roll
cltd
call
fwait
jno
pop
sysret
sbb
pop
andb
aad
cltd
and
sub
adc
add
ss
or
fadds
dec
sub
cmpsl
fwait
add
into
jecxz
lret
xor
and
popa
sbb
adc
ret
out
insl
aad
xor
movsb
dec
or
cmc
mov
pop
inc
pop
lds
js
sti
push
mov
mov
mov
bound
xchg
cld
and
mov
iret
inc
mov
stc
shrb
rol
inc
ds
dec
lahf
push
jle
adc
pop
sub
loopne
sbb
and
sbb
xchg
imul
adc
fs
pop
and
int3
jge
sarb
out
push
and
repnz
out
sub
test
xchg
andl
cmp
loope
inc
xor
and
push
fildll
push
or
ljmp
pop
dec
sub
fildl
or
mov
fidivrl
add
jmp
mov
pushf
xchg
and
jns,pt
push
cmc
xchg
mov
and
jbe
notl
outsb
fisttps
or
adc
int3
xchg
add
mov
pusha
testl
insl
dec
or
int3
imul
xchg
out
push
and
xor
xlat
pusha
sarb
jae
mov
xor
inc
push
ss
xchg
mov
insl
xor
cmpsb
mov
dec
clc
adc
inc
jge
lcall
xchg
in
xor
rcr
add
adc
pop
mov
add
cmp
inc
pop
scas
and
pop
sbb
out
jle
inc
test
jge
jo
xchg
aaa
push
inc
lods
pop
outsl
gs
xchg
jle
in
div
cltd
cs
mov
jbe
test
sub
clc
push
cmp
arpl
jo
mov
push
aam
add
sub
sub
mov
pop
sub
insl
leave
mov
and
fildll
sarb
adc
pop
lret
test
notb
hlt
inc
adc
outsb
mov
cmp
jno
xchg
push
push
rcrl
mov
out
push
sbbl
sahf
daa
aas
mov
inc
or
sub
mov
inc
push
dec
sbb
push
dec
shlb
mov
sub
mov
sbb
fwait
std
arpl
ss
jo
inc
xchg
or
inc
scas
fildl
adc
push
xchg
aam
mov
mulb
cmp
sub
sub
movb
sub
dec
es
inc
adc
and
in
ljmp
sbb
inc
jne
and
imul
out
insl
xchg
pop
mov
dec
outsl
cmp
enter
sbbb
jmp
popa
sub
testb
std
xor
dec
sbb
cwtl
xor
lods
out
scas
mov
ss
es
rcrl
ss
shll
test
and
enter
push
testb
das
add
popf
sub
mov
xchg
inc
dec
and
jne
push
mov
mov
jl
dec
sub
add
sub
mov
or
cmp
in
push
mov
popf
push
test
cmpsl
aad
jg
outsl
dec
lret
push
clc
fsubs
inc
in
mov
cmpsl
cmp
shr
mov
test
cmp
les
jp
adc
mov
jmp
ret
test
loop
gs
mov
repnz
gs
push
daa
xchg
sub
imul
jne
iretw
push
jbe
add
rcrb
inc
pop
cmpsl
out
enter
icebp
jno
mov
out
mov
fwait
cmc
mov
or
or
jp
je
ja,pn
mov
and
arpl
data16
loopne
cwtl
and
stc
lds
adc
fnstsw
dec
fisubrl
out
inc
adc
out
adc
push
pushf
aam
mov
iret
mov
ror
outsl
aaa
jecxz
movb
jne
sub
push
pop
and
out
pop
push
mov
movsb
add
mov
dec
cmp
and
add
rclb
stos
adc
cmp
xchg
test
movsl
push
add
sbb
das
xor
sub
cmp
or
cld
sbb
xlat
pop
or
mov
enter
ret
dec
xchg
inc
lods
in
xor
shrb
icebp
sub
sbb
mov
push
in
bound
and
or
sub
sbb
sbb
fnstsw
clc
add
es
inc
into
pop
popa
std
cwtl
enter
xchg
into
push
nop
ret
jb
and
aaa
popa
loop
mov
add
ss
sub
add
jne
es
sahf
aad
addr16
xorb
loopne
push
add
mov
pop
icebp
aam
push
je
cltd
xchg
jl
pop
dec
aas
inc
outsl
jl
mov
sbb
push
jp
mov
or
dec
notb
shr
int
fnsave
fldcw
xchg
movsb
cli
dec
cs
sbb
fsubrl
out
aas
add
push
rcll
mov
jb
pop
roll
mov
bound
dec
cmpsb
adc
movsb
test
dec
cmp
or
push
xor
xor
fptan
insl
xor
and
dec
les
xchg
push
out
xchg
push
sbb
or
pop
cmp
xor
lahf
les
mov
cmpsb
jge
sub
xlat
pop
push
inc
jl
adc
sahf
sbb
jno
sbb
xchg
push
mov
loop
add
push
pop
jno
cmp
xchg
adc
repz
rorb
stos
mov
dec
mov
repnz
aam
sbb
xchg
andl
jl
ja
mov
test
pop
jns
sub
pop
in
addb
push
out
push
mov
or
jns
xorl
sbb
adc
push
sbb
add
dec
movsl
mov
sub
arpl
jge
mov
loop
in
mov
mov
pop
jo
and
sti
sbb
inc
imul
inc
xor
mov
and
pop
imul
sbbb
cmp
into
cmp
lods
loop
xlat
xor
cmp
imul
aam
pop
dec
xor
lcall
imul
pop
cmc
jecxz
or
mov
popa
xchg
or
xchg
xor
shrb
cmp
cltd
add
jp
test
cmpsl
inc
cmpb
cmovg
mov
pop
sub
or
mov
jl
push
dec
jmp
jbe
cmpsb
lret
jo
popa
cmc
sti
hlt
in
mov
fdivl
mov
pusha
push
jae
loope
inc
mov
pop
push
movsl
sbb
pop
push
in
and
in
and
fcompl
pop
pop
mov
test
cltd
dec
int3
movl
js
jnp
xor
shlb
fisttpl
mov
mov
sahf
cmp
adc
jecxz
push
iret
aaa
add
inc
ja
out
and
enter
int3
outsb
cld
push
out
in
arpl
cld
icebp
sbb
mov
sbb
mov
loop
adc
divl
outsl
adc
or
subl
out
or
push
subl
mov
mov
in
inc
sub
dec
inc
das
adc
pop
int
or
inc
imul
xor
mov
cs
or
xchg
sub
leave
les
xchg
das
mov
push
dec
xorb
stos
adc
aas
pop
dec
xchg
in
and
cmp
rolb
nop
or
cmp
hlt
xor
push
mov
cmp
and
shrb
mov
add
leave
or
dec
cmp
enter
fbld
jne
jge
adc
test
pop
mov
js
pop
jo
sti
es
mov
mov
insb
outsb
testl
fadds
ret
fadds
aad
pop
pop
inc
add
in
mov
xchg
xchg
in
iret
popa
mov
out
xor
fisttpll
cmp
pop
jl
out
insl
lret
les
test
loopne
into
sbb
int3
mov
cmp
push
es
das
sbb
pop
clc
loop
shl
jo
fdivrs
je
xor
dec
leave
mov
js
or
pop
cmp
orb
mov
inc
pushf
pop
test
xchg
das
cmp
pop
sahf
pop
sub
dec
fcoml
fadds
sbb
sub
pop
inc
frstor
les
adc
aaa
notb
movsb
inc
rol
push
mov
mov
or
or
jmp
push
cmpsl
and
mov
cmp
stos
or
jns
xor
cmp
and
jge
icebp
mov
mov
popa
scas
dec
lret
mov
mov
sub
push
lret
cmp
add
cwtl
sti
test
mov
push
loop
cmp
test
lcall
inc
pop
pop
jg
or
dec
in
lock
jb
adc
xlat
dec
mov
mov
stos
shlb
cli
paddusb
outsb
outsl
dec
aad
mov
mov
xchg
movsl
lods
sbbl
jge
or
and
mov
inc
pop
out
mov
dec
add
scas
push
sbb
aas
lcall
xchg
sbb
inc
mov
fistps
mov
cli
shll
xchg
nop
scas
cmpsl
or
in
jmp
pop
push
lss
cwtl
lcall
out
movsb
xchg
imul
xor
inc
add
cmpb
xor
mov
dec
fldl2e
lcall
lods
scas
hlt
jbe
lods
in
push
jbe
xor
imul
popa
inc
decl
jb
outsb
fisubs
dec
sbb
stos
xchg
sub
or
stos
xchg
rcl
cmpsb
leave
jo
pop
and
sarb
nop
sti
sub
movsl
push
hlt
sti
or
xor
lret
cmp
cbtw
loope
negl
std
lcall
inc
and
cld
ffreep
enter
fnsave
push
cmp
fsubs
mov
addr16
lea
mov
and
sbbl
cmp
arpl
xor
inc
push
jg
and
data16
push
test
pop
pop
movsb
shlb
dec
clc
sub
sub
cmpsl
fdivr
shrb
loop
cmp
out
paddq
push
push
js
fstps
imul
fbstp
sbb
and
sahf
fcmovne
jno
sbb
xlat
jecxz
xlat
push
addr16
fbld
sbb
aad
pop
pushf
bound
add
mov
pop
shrb
or
addb
mov
es
jbe
mov
ret
mov
mov
std
iret
adc
mov
pop
jge
inc
callw
std
mov
inc
xchg
sbb
test
cmp
lret
jb
in
jge
int
pop
push
popf
mov
bnd
repnz
insb
ljmp
test
sbbb
jnp
xor
arpl
gs
hlt
sbb
andb
aaa
pushf
adc
in
out
imul
je
andl
sahf
sar
pusha
in
mov
or
lea
lahf
and
sti
mov
rclb
xchg
and
and
lea
xor
adc
sbb
adc
cld
aaa
cmpsl
jns
ds
fisubrs
pop
out
jge
dec
push
cmp
lods
push
cmp
sub
dec
xchg
aad
dec
inc
pop
mov
sahf
mov
sti
dec
xchg
shrb
ds
rorb
mov
mov
xor
jmp
scas
dec
cmp
push
inc
fnstsw
repz
in
orl
fdivs
mov
sbbb
jnp
sub
dec
xor
int
add
jmp
sti
xchg
pop
das
pop
add
test
out
divb
stos
scas
push
sbbl
xchg
mov
rorl
xchg
cli
fsts
out
xor
jecxz
sbb
lea
js
xchg
xchg
xchg
fstpl
fmulp
xor
rcrl
rcl
cmp
call
add
into
mov
xchg
adc
dec
lock
ficoms
adc
and
push
imul
jnp
test
mov
repz
push
push
pop
mov
test
jmp
hlt
aas
push
push
sahf
sub
loop
and
mov
lret
pop
and
pop
mov
gs
stos
xor
mov
aas
out
mov
fwait
adc
add
inc
sub
lret
cmpsl
cmpl
outsl
lds
mov
and
xor
sbb
xchg
add
cmpsb
mov
add
test
shll
addr16
test
aaa
shlb
out
xchg
jp
jbe
sbb
add
cmpb
stos
in
out
xchg
add
jmp
or
mov
sub
pop
test
fwait
je
jmp
es
bound
fwait
xor
pop
pop
stos
daa
jnp
dec
jp
insl
nop
jo
mov
mov
sbb
inc
mov
repz
scas
clc
nop
out
stos
icebp
push
sbb
aam
int3
cli
sub
rol
xor
push
dec
ja
fiaddl
dec
cs
imul
cmp
push
inc
cmc
push
push
cld
pop
or
movsl
rcl
xor
cmpsl
dec
movsb
jp
jae
cwtl
imul
loope
dec
lret
pop
pusha
out
mov
pop
cmp
in
data16
popa
pop
rolb
xor
xchg
outsl
scas
adc
pop
outsl
ja
icebp
fwait
imul
or
subb
out
iret
mov
xchg
out
sbb
xor
cmpsl
cld
gs
sub
dec
stos
xor
popa
pusha
loopne
out
out
push
xchg
movsb
insl
push
dec
jle
xchg
test
push
and
out
shr
adc
call
lds
js
jbe
jbe
in
sub
push
or
xchg
fwait
sub
inc
mov
jp
bound
and
add
pop
inc
je
sahf
or
jg
fsubrp
repz
in
inc
movsb
fidivs
pushf
xchg
push
and
pop
lods
inc
nop
jecxz
xchg
or
or
xor
aaa
int3
sbb
stos
sti
mov
add
fxam
cwtl
mov
in
lcall
xor
xchg
lods
or
add
jmp
jg
cmp
outsb
mov
in
notb
fmull
push
or
mov
lea
cmp
pop
add
rclb
xchg
mov
and
insb
cwtl
mov
orl
mov
xor
sbb
clc
bound
insl
repz
scas
xchg
pop
enter
inc
or
mov
xor
enter
out
ljmp
movsb
fdivrp
out
std
sbb
lods
clc
xor
pop
repz
cmp
sbb
mov
xchg
iret
and
pop
push
movb
imul
cmp
xor
ret
cmpsl
or
jg
cmpl
and
sahf
mov
mov
addl
mov
test
cmc
rolb
sbb
lcall
aaa
ret
push
jnp
jae
cmp
pop
jne
ds
cwtl
aaa
jae
and
sub
cli
in
in
aam
inc
sbb
push
add
xor
std
sub
inc
mov
sbb
mov
ror
cmc
mov
pusha
cld
mov
fcompl
pop
jl
lea
or
mov
cmp
les
or
inc
inc
cld
rcrl
pop
jb
shlb
xor
cltd
fsubrs
scas
std
ja
push
adc
and
idivb
inc
push
clc
inc
pop
dec
or
sti
cwtl
out
into
out
pop
xor
pop
test
push
popf
xchg
xlat
mov
int
ror
sub
cld
mov
adc
aam
mov
push
push
into
mov
aam
mov
cli
push
test
and
in
leave
out
or
pop
int
dec
pop
out
inc
shlb
scas
out
pop
mov
scas
lcall
adc
or
stos
sbb
mov
push
xchg
inc
stos
rcrb
and
loop
inc
mov
repnz
fiadds
xor
sbb
xacquire
xor
lret
push
cmpsl
pop
and
leave
mov
pop
imul
push
or
dec
sub
daa
xchg
icebp
pushf
add
ja
insl
cmp
clc
lock
int3
dec
push
cmpsl
jo
addr16
pop
out
push
jle
out
jo
add
pop
notl
lods
leave
loop
aam
xchg
sbb
push
mov
pushf
adc
aam
mov
adc
ss
inc
hlt
shlb
push
cmpsl
mov
pop
inc
inc
mov
push
mov
lcall
fwait
repz
stos
and
arpl
scas
xor
xchg
pop
es
push
test
mov
je
popa
sub
push
mov
push
mov
mov
push
xchg
lret
jge
adc
aaa
fwait
ret
leave
xchg
and
xchg
cmp
or
stc
ljmp
jl
jecxz
xlat
mov
pop
out
sub
xchg
push
and
pop
repz
mov
cmp
cld
es
roll
xchg
fwait
popa
cld
sbb
push
pushw
in
cld
sbbl
lret
pop
jge
and
nop
pop
sbbb
and
mov
and
call
aas
mov
addb
xchg
fstpl
jmp
out
cmpsb
cmc
push
jmp
and
push
cmp
pop
sbb
dec
xor
shll
xor
stc
lcall
inc
int
sahf
js
mov
mov
stos
mov
dec
and
mov
and
jns
loopne
orb
pop
xchg
dec
test
inc
scas
pop
mov
dec
sbb
int3
test
js
arpl
aas
icebp
and
jns
pusha
or
imul
fmuls
scas
pop
adc
js
jnp
dec
xchg
or
jmp
xchg
xor
int3
xor
mov
inc
lods
and
jge
dec
mov
add
hlt
mov
shrl
lods
bound
inc
inc
xorb
pop
and
jmp
nop
popa
jno
bound
and
dec
jge
pop
cmp
mov
fwait
xorl
movsb
std
popa
shll
xor
jge
pop
enter
popa
push
mov
and
push
and
mov
or
cmp
and
mov
mov
and
leave
xor
nop
je
mov
pusha
enter
pop
ret
pop
lods
mov
dec
mov
fdivrl
mov
jb
sub
sbb
sbb
aad
ljmp
sub
inc
mov
inc
test
cltd
rcrl
movsb
push
test
out
or
or
inc
pop
dec
jecxz
inc
mov
out
push
sbb
push
dec
dec
inc
test
xchg
repz
or
push
lahf
repnz
jo
add
out
xchg
sbb
scas
lods
lods
add
int3
popa
xchg
in
loope
rcl
push
pop
mov
movsb
out
sbb
out
push
sub
aas
stos
pop
icebp
xchg
std
setp
xchg
and
sahf
mov
xchg
div
inc
ficoms
inc
lea
or
outsl
cmpsl
fcmovu
adc
xor
or
outsb
bound
mov
call
aam
repz
mov
push
lret
add
mov
jbe
daa
decl
mov
pop
cli
push
mov
divb
pop
adc
mov
mov
sub
push
push
mov
cli
xor
popa
push
mov
imul
add
sub
add
out
nop
adc
sbb
test
mov
stos
shr
cmpsb
cmp
mov
jno
lods
cmp
pop
mov
inc
mov
push
lret
stos
mov
xor
dec
push
enter
push
mov
jge
mov
jbe
or
fnstcw
and
mov
and
fdivs
int3
adc
mov
adc
ss
nop
sub
inc
xadd
fs
das
add
cmc
jecxz
aad
xchg
jnp
in
add
dec
push
push
sub
mov
call
and
aas
or
out
loop
scas
outsb
fcom
cmp
clc
ljmp
push
lret
ja
xor
sub
lcall
call
add
call
aam
push
shlb
xor
out
push
mov
or
ljmp
cmpsb
aaa
dec
add
xchg
es
dec
mov
sub
add
mov
cmp
inc
ljmp
xor
mov
mov
iret
pop
lret
jle
aaa
add
ret
xor
loope
cltd
aad
sub
mov
mov
push
inc
mov
sbb
cmp
hlt
push
push
lea
mov
test
loop
inc
daa
out
iret
xor
inc
call
or
push
sbb
sbb
jl
inc
push
imul
arpl
inc
dec
and
ret
js
adc
aam
hlt
movsl
subb
xchg
imul
inc
dec
ds
repz
aaa
in
lods
jecxz
out
in
shrb
test
add
jb
cmp
dec
call
push
dec
or
and
mov
pusha
orb
es
mov
rolb
add
sbb
pop
mov
and
int
push
lods
cmpsb
subb
lock
out
es
pushf
inc
leave
and
aaa
mov
push
fnsave
xor
out
fsubs
sahf
push
push
xor
and
lea
lcall
dec
xchg
xchg
loop
fsubrl
pop
aad
push
ret
jae
xchg
mov
push
xor
fsubrs
sbb
shll
jmp
jge
dec
test
fisubl
add
cltd
adc
mov
cmp
mov
cmp
outsb
or
sub
add
int3
in
or
bound
pop
std
leave
or
in
lock
adc
add
enter
xor
adc
add
sbb
mov
pop
lods
xchg
or
push
push
inc
sarb
xchg
jns
iret
lcall
mov
push
sbb
mov
and
arpl
add
add
adc
adc
repz
lock
lock
in
adc
sub
loopne
mov
roll
lret
jecxz
les
loope
adcl
mov
cmp
push
jnp
aam
das
mov
xor
fildl
adc
cmpsl
jl
aam
gs
jnp
jns
mov
pop
sub
les
lea
xor
je
in
and
ds
imul
jecxz
sbb
xor
mov
xlat
outsl
arpl
and
shll
je
mov
or
xchg
sub
inc
sub
push
xchg
fstpt
mov
add
jmp
mov
fwait
cmp
ljmp
test
push
sbb
js
arpl
mov
lods
sahf
call
sbb
inc
push
das
mov
cs
inc
notl
popa
jmp
xchg
jp
pop
push
jae
jnp
ficompl
test
lret
dec
lock
sub
arpl
test
ds
sahf
test
out
cs
or
xor
pop
rcr
ja
in
xchg
ja
imul
mov
icebp
push
call
push
xchg
pop
pop
cmp
pop
cmp
sti
ja
popa
adc
mov
ljmp
inc
shl
fiaddl
subl
jecxz
int3
push
enter
jbe
in
xlat
cmc
adc
push
mov
roll
pop
imul
pop
les
ret
or
enter
out
std
jmp
dec
xchg
adc
pop
inc
ja
pop
cmpl
mov
add
aas
or
pop
sub
push
mov
xchg
xor
dec
jle
mov
sub
scas
aad
mov
sub
sti
lods
sub
lock
enter
scas
fadds
imul
leave
jle
jmp
scas
lods
ret
mov
inc
push
sti
mov
movsb
cmp
dec
out
bound
mov
rcll
fs
cs
or
mov
lahf
push
xchg
push
test
xor
stos
test
mov
push
jmp
xchg
nop
mov
cwtl
imul
jns
int
test
movsl
xchg
mov
and
sarb
sbb
adc
or
mov
mov
mov
into
add
jmp
lods
mov
fs
aam
adc
xchg
mov
test
daa
mov
pusha
inc
jae
aas
aad
add
pop
shrb
sbb
cmpsl
into
adc
aaa
xchg
call
pop
dec
lret
fs
movsl
dec
sbb
shll
fs
cwtl
sub
push
in
mov
test
sub
sub
test
in
sub
mov
sbbb
mov
add
pop
enter
push
lods
leave
das
push
adc
sar
int
xor
in
fs
in
test
or
push
gs
into
in
lea
lahf
lock
fs
and
mov
and
push
pop
out
jb
xchg
and
cli
push
sbb
rcr
jno
jae
mov
cs
movsb
mov
in
and
lock
test
xor
jp
pop
sub
adc
clc
push
cmp
test
mov
pop
imul
cmp
insl
push
test
out
add
or
push
fidivl
xor
push
inc
shll
lcall
shlb
lret
outsb
xor
test
leave
fs
lcall
mov
mov
xchg
sbb
jmp
lcall
jbe
lea
dec
out
pop
arpl
push
ror
push
pop
fildl
mov
fwait
mov
ret
jnp
call
or
pusha
inc
sti
mov
pop
xchg
out
js
gs
sbb
jne
repz
imul
ljmp
mov
jp
adc
stc
or
hlt
clc
imul
jmp
ds
add
dec
cld
dec
subb
ret
scas
lret
icebp
inc
test
mov
cmc
mov
int3
ficompl
dec
pop
sub
lcall
push
jno
inc
push
dec
data16
xchg
loop
sub
or
inc
xor
sbb
fistps
repz
inc
and
outsl
pop
push
addr16
roll
ficoms
sarl
pop
cmpsb
imul
fcom
test
mov
push
cli
or
decl
pop
add
je
inc
rol
lret
mov
inc
pop
outsb
jns
lret
add
icebp
sbb
lcall
cmp
adc
mov
out
mov
les
repnz
adc
push
out
in
in
or
mov
jnp
out
popa
sub
icebp
mull
enter
mov
fildll
mov
lcall
aad
and
push
ss
pusha
push
stc
or
sbb
and
xchg
sub
inc
pop
mov
imul
fists
mov
dec
cmp
jno
test
push
movups
adc
lret
add
add
rorb
je
enter
or
inc
fs
aam
xchg
xchg
mov
inc
ret
pop
lret
adc
mov
fmulp
push
add
sbb
mov
cmpsl
addr16
movsb
jge
repnz
in
push
movsl
mov
mov
mov
iret
and
daa
cld
ds
xchg
ret
stos
xchg
or
fwait
mov
jae
les
lock
mov
dec
push
bnd
adc
aam
test
inc
sbb
push
test
inc
sub
lahf
movsb
or
mov
adc
scas
mov
sub
shlb
je
pop
lock
add
mov
ljmp
add
sbb
xchg
or
xchg
mov
push
in
es
clc
testl
addr16
jo
inc
divl
cmp
pop
xchg
jmp
pop
outsl
jle
jb
in
and
sub
jl
xchg
sbb
mov
inc
xchg
pop
mov
dec
mov
sti
fidivrs
mov
fcoms
xor
push
or
sbb
enter
idivl
adc
insb
int3
mulb
push
xchg
test
pop
movsl
jne
ja
mov
and
sbb
inc
jg
mov
or
dec
inc
popf
sbb
imul
lods
repnz
imul
pop
sub
jecxz
jecxz
in
sub
nop
ds
jle
push
sbb
mov
imul
push
cld
imul
inc
loopne
dec
ljmp
std
lret
out
dec
sub
dec
push
gs
xor
lret
aaa
imul
push
mov
es
cmp
or
mov
popf
jle
cltd
fs
shrl
sbb
lds
or
dec
orl
sub
sbb
pop
repnz
and
inc
inc
hlt
in
dec
ror
xchg
push
jge
sub
push
dec
ljmp
push
and
xor
lds
stos
pop
cmp
dec
fists
movsb
imul
imul
xchg
jne
cmpsl
sbb
in
call
fs
dec
test
pop
mov
pop
sbb
jecxz
adc
scas
xchg
sub
cwtl
stos
sub
cld
mov
loope
inc
insl
mov
sbbl
stos
mov
pop
jle
xchg
lcall
repz
leave
imul
insb
xchg
shrl
je
or
or
rcll
rorl
fidivrs
mov
cmp
push
addr16
or
mov
mov
inc
in
xchg
inc
lea
inc
jecxz
pop
mov
cmpsl
push
ja
inc
mov
into
mov
fisttps
loopne
mov
jb
or
mov
cmp
push
cmp
pop
xor
popf
sbb
mov
int3
inc
clc
leave
jo
jno
adc
jne
sub
icebp
or
aam
xchg
repz
mov
int3
out
jp
cwtl
mov
dec
sub
pop
scas
scas
push
das
movsb
cmp
pop
leave
jg
inc
cmc
insl
loope
lods
std
out
jne
pop
sub
es
fldl2e
push
jnp
cmpsl
test
xor
rolb
mov
inc
in
int3
pop
fdiv
cmp
lret
arpl
les
jg
sub
adc
cmc
mov
mov
cmp
sub
or
int
orl
xor
xor
flds
fidivrs
pop
and
fiadds
push
xor
fsub
push
jb
dec
les
sub
push
mov
sbbb
mov
daa
loope
or
mov
sub
lods
loope
popf
ret
lock
cwtl
push
jne
mov
or
das
insb
data16
insb
fs
hlt
inc
aas
mov
repnz
or
ljmp
pop
sbb
sbb
lods
inc
lret
xor
adc
add
sbb
cld
dec
loopne
cmc
dec
adc
xchg
mov
xchg
out
lret
inc
shrl
inc
lds
mov
or
fldl
xchg
je
sub
push
nopl
xchg
test
stos
mov
imul
mov
mov
jnp
ja
add
int3
in
pop
subb
mov
mov
push
pop
adc
jo
jbe
insb
pop
sbb
mov
jae
adcb
cmp
sbb
push
jp
mov
in
iret
xor
imul
aam
adc
jp
mov
cli
jecxz
xor
ss
cmc
dec
inc
cmp
cld
or
push
test
ja
sti
jb
adc
xor
add
adcl
mov
out
lret
mov
sub
cmpsb
sti
test
leave
stos
xchg
pop
or
aas
xor
in
sub
mov
loope
cwtl
inc
ljmp
wbinvd
mov
mov
mov
or
nop
ret
mov
fistpl
dec
sti
xchg
mov
out
adc
xchg
sub
pusha
dec
push
cmp
push
daa
mov
or
enter
pushf
fwait
cs
jnp
jle
and
fcoml
ficoml
inc
mov
fldt
sbb
mov
xchg
pop
popf
pop
xor
shl
shrb
fildl
xor
test
ds
sbb
insb
shrb
inc
push
push
cwtl
sti
sub
test
out
imul
cmp
les
cmc
xor
push
test
sahf
nop
dec
stos
cmp
ds
sbb
mov
cwtl
add
dec
loop
mov
mov
add
cli
dec
xchg
pop
in
jl
std
notb
pushf
cltd
loope
mov
cmp
mov
or
imul
inc
cwtl
aam
outsb
int3
mov
mov
or
push
dec
jns
jns
aad
adc
adc
xor
xchg
adc
inc
mov
jmp
es
adc
xchg
dec
loop
loopne
data16
das
xor
in
adcb
lods
gs
test
xor
pop
cmp
cmp
mov
add
inc
dec
stos
inc
lods
push
dec
into
jg
push
push
and
je
lods
mov
mov
sarb
iret
daa
inc
test
aaa
cmpsl
push
push
adc
add
cwtl
aam
scas
jle
out
cli
sub
jge
aam
enter
test
and
fbstp
out
lcall
call
je
rolb
cld
enter
dec
aad
xlat
test
inc
mov
adc
cmpl
addr16
lock
jns
rol
cli
xchg
push
add
jle
inc
scas
lret
cmp
jmp
adc
dec
xchg
in
ja
aad
lods
adc
sbb
sahf
push
repnz
pop
scas
rcll
push
and
nop
fwait
mov
adc
mov
iret
mov
or
mov
sbbl
add
lret
jo,pt
add
jge
pop
xchg
test
inc
push
sub
mov
ljmp
sub
gs
nop
xlat
cmp
shlb
out
in
cvtps2pi
sbb
outsl
inc
push
adc
lahf
pop
pop
or
cwtl
sub
ljmp
lods
mov
jno
cmpsl
jmp
inc
arpl
push
xchg
popf
out
push
dec
out
arpl
bound
jmp
pop
icebp
xor
mov
lcall
out
adc
push
xchg
rorb
xchg
mov
dec
pushf
and
cwtl
pop
in
mov
mov
movsb
rcrl
pusha
enter
and
decb
loopne
mov
mov
jmp
mov
lods
push
mov
imul
cmp
jno
loope
in
push
fstpl
pop
adc
mov
push
ret
inc
jae
xor
sbbl
iret
lock
pop
sbb
stos
je
xor
sub
pop
out
push
notb
lds
rorb
out
imul
xchg
aam
mov
jp
and
jns
pop
mov
pusha
cmc
hlt
adc
ljmp
testb
aad
cmp
loopne
pop
into
scas
and
cmp
mov
pusha
outsl
mov
dec
xor
xor
and
bound
mov
xchg
mov
cwtl
mov
fildll
pop
fadds
xor
pop
rorl
jg
or
sub
mov
cli
bound
lret
adc
push
jmp
dec
xlat
ret
jne
xchg
jp
iret
push
pcmpgtd
ljmp
mov
sti
and
mov
cmpsb
sbb
jo
push
mov
dec
xor
push
loop
test
les
add
and
push
sbb
mov
jne
mov
clc
jne
test
lret
sarb
jecxz
pop
out
nop
mov
jne
xchg
movsl
movsl
sbb
pop
or
pop
ret
push
xchg
cltd
insl
mov
and
fistpll
mov
jecxz
adc
sbb
mov
lds
dec
lods
xchg
fnstcw
fiadds
stos
adc
lea
xorb
xor
xor
icebp
sub
push
sbb
int
or
push
call
outsb
int3
lahf
inc
leave
or
stos
test
mov
xchg
xchg
push
sub
mov
in
cmp
loope
xor
test
ljmp
fidivs
clc
cmp
cmp
in
enter
dec
push
mov
sub
popa
mov
mov
test
into
cs
mov
and
out
loopne
rep
rorb
imul
clc
pop
sub
test
dec
cmp
fldl
stos
cmp
fucomi
jle
mov
and
mov
int
sbb
btc
rcrl
cwtl
sub
mov
lods
scas
scas
pop
clc
icebp
xor
shrl
and
add
lea
mov
jmp
mov
cmp
repnz
mov
bound
mov
mov
push
adc
outsl
adc
inc
push
daa
mov
jmp
dec
in
pop
mov
insb
push
dec
es
inc
mov
imul
stc
in
cmc
int
push
dec
mov
jecxz
jg
sbb
mov
mov
bound
or
jo
fnsave
mov
add
pop
test
sahf
xlat
sbb
cwtl
add
inc
push
aam
jecxz
mov
je
push
and
bnd
pop
iret
mov
stc
fmuls
ret
add
dec
push
add
xor
stos
push
daa
pushf
sbb
xchg
ret
or
xor
xchg
clc
sahf
mov
enter
out
jecxz
add
cmpsb
push
or
fs
jp
les
insl
mov
sub
pop
mov
mov
lea
orl
or
cmp
mov
and
test
in
insb
dec
enter
cmpsl
sub
mov
mov
ret
or
inc
push
lods
sarb
std
lods
fldl
pop
rcrl
lock
ja
and
mov
mov
aaa
dec
mov
hlt
loop
jecxz
dec
dec
iret
fiaddl
jecxz
mov
push
jns
movsl
aaa
fcomps
test
pop
mov
cmp
xor
push
xchg
and
into
daa
cmc
aam
adc
adc
xchg
les
mov
sbb
xor
pop
cld
inc
pop
test
not
xchg
sbb
fcomip
loopne
dec
fsub
inc
pop
jae
mov
lret
or
sbb
incl
xor
fsubr
xchg
dec
mov
xor
sbb
sbb
cmp
jo
push
test
loope
clc
push
jns
xchg
add
jge
rorb
test
lock
insl
inc
push
xor
fcoms
insb
jne
out
scas
push
pusha
call
or
dec
adc
fcoml
mov
pop
ret
int3
fwait
test
int3
sbbb
int
dec
xchg
inc
or
sub
cmp
addr16
push
mov
test
dec
popa
cmp
jnp
dec
ss
pop
pushf
out
fcmovnbe
xchg
xor
in
inc
imul
push
cmp
outsb
sarb
jle
mov
rcrb
inc
movsl
sbb
loopne
adc
lea
xor
xor
dec
add
push
cmpsl
jne
jns
add
inc
pop
xchg
test
and
pop
mov
lcall
cmp
dec
pusha
and
adc
sbb
lret
sbb
mov
andb
xchg
jns
popa
jns
push
pop
pop
icebp
mov
inc
cli
dec
cmp
sbb
into
shrb
popf
dec
jns
leave
lret
cld
stos
mov
jne
and
push
inc
inc
int3
mov
mov
frstor
repz
mov
aad
rorl
lret
push
out
pop
out
pop
cmpsb
and
mov
stc
movsb
or
pop
movsb
stc
cwtl
xchg
xchg
cs
loope
mov
jo
xchg
add
cmp
push
scas
fstps
int3
subl
inc
push
mov
hlt
pop
mov
sub
mov
and
mov
dec
xchg
mov
lahf
outsl
ja
jo
pop
out
fwait
pop
or
sub
les
aas
and
lahf
adc
addr16
mov
enter
and
xchg
pushf
mov
pop
lret
push
rorb
stc
pop
lret
loope
xchg
xorb
dec
cmp
aaa
loopne
imul
sbb
call
test
inc
and
push
jmp
inc
pop
jle
jbe
mov
lods
or
xor
jp
pop
aam
or
push
addr16
js
cmc
mov
lcall
sub
aad
pop
aam
scas
nop
scas
xchg
xor
pusha
adc
cmp
mov
std
jp
pop
pop
cmpb
daa
cltd
jno
out
inc
psrlq
mov
stc
or
cld
sub
mov
test
sub
pop
scas
outsl
xlat
negb
xchg
loop
mov
xor
movsb
out
stos
and
cs
fildl
or
aam
push
outsb
jae
adc
test
hlt
sbb
push
or
mov
jno
pushf
fsubs
adc
hlt
push
jle
or
repnz
mov
iret
insl
fwait
xlat
fiaddl
sbb
fisubrl
xor
enter
mov
lahf
fcomps
fmull
xchg
imul
cmp
inc
fimuls
movsl
lcall
scas
jl
cltd
loopne
pop
repnz
xchg
mov
and
xor
insb
or
jecxz
sbb
dec
pushl
push
mov
js
insl
mov
in
dec
insb
xor
mov
or
or
cmp
jae
jg
mov
push
scas
jmp
mov
push
and
imul
loop
in
pushf
lds
jno
incl
jno
push
xchg
imul
mov
xor
and
xor
mov
jle
inc
ja
mov
clc
push
pop
sbbb
jne
xchg
inc
pandn
test
add
jb
sahf
cmp
dec
fiaddl
add
daa
inc
fdiv
test
pop
adc
mov
cltd
shlb
ds
test
pop
ret
pushf
xchg
adcb
cmp
leave
sbb
int
pop
rcll
arpl
dec
cmpsl
int
je
std
push
and
cmpb
cli
cltd
mov
sub
mov
fwait
gs
mov
dec
pop
xor
clc
fs
push
std
sbb
mov
js
cs
mov
push
xor
call
in
inc
mov
jle
sti
dec
adc
and
shrl
mov
inc
loope
call
inc
jmp
and
lods
pop
cmpsl
xor
stos
add
dec
xor
int3
push
mov
sti
pop
sbb
sarl
fidivl
jns
jle
enter
cltd
jne
pop
call
call
imulb
shll
pop
mov
and
sbb
test
fbld
and
lret
jbe
bound
pusha
stc
cmp
mov
movaps
rcrl
rol
lock
fisttpl
xchg
outsb
push
xor
nop
sbb
mov
fldt
inc
ffreep
cld
imul
xchg
jge
cld
mov
aas
jmp
loope
fsts
push
daa
ja
out
js
push
inc
pop
and
insl
xor
sahf
push
cmp
fisubs
insl
mull
mov
jae
pop
ret
loope
lock
inc
sub
in
lds
inc
scas
std
stos
outsl
ljmp
icebp
dec
jns
cmp
test
frstor
mov
add
std
lret
mov
and
dec
iret
shll
repz
addl
sbb
fiadds
bound
dec
fdivl
xor
and
outsb
fcmovnbe
pop
addb
outsl
mov
rolb
loopne
mov
sub
add
push
sahf
in
adc
shll
test
pop
xor
sub
jmp
mov
fdivrp
pushf
into
imul
push
sub
jl
and
mov
ja
jne
decl
std
fcmovne
push
imulb
and
shll
std
lods
add
stc
inc
and
scas
fs
cmpsb
mov
jl
in
mov
lea
xchg
sbb
xchg
sbb
hlt
xlat
dec
jne
mov
jbe
jno
lods
push
push
lret
clc
dec
in
std
and
shlb
cmp
xlat
jp
mov
cmp
rorb
sbb
cmp
inc
xchg
mov
pop
cmp
inc
fisttps
in
out
testl
sub
out
das
push
and
inc
dec
es
lahf
test
test
cmpsl
inc
loopne
add
sub
test
test
jle
mov
and
mov
mov
xor
mov
rorl
cmpl
fs
xor
mov
repnz
xorb
mov
outsb
sub
aaa
inc
mov
gs
pop
ror
sub
loop
mov
cmp
and
repz
and
and
fidivrs
test
adc
aas
inc
loopne
cltd
ror
jle
or
ret
adc
sub
and
stc
outsl
rolb
out
je
push
cli
push
test
adc
mov
nop
lea
andl
push
in
add
mov
test
in
cmp
popf
inc
dec
rclb
and
jno
out
pop
pop
dec
aam
stos
sbb
pop
or
inc
outsl
pop
pop
int3
push
pushf
jae
andl
int
jmp
lods
clc
inc
loope
add
push
mov
test
fistpl
lea
lock
adc
jbe
out
imulb
cltd
xchg
pop
mov
pop
repnz
aad
mov
ficoms
in
jbe
sbb
xchg
mov
add
ret
pop
arpl
enter
sarb
out
lods
imul
adc
xchg
xchg
pop
mov
dec
mov
inc
push
and
xchg
jle
pop
mov
scas
push
sub
sub
or
mov
es
clc
inc
fstps
jp
aam
add
sub
gs
gs
ss
sub
xchg
scas
mov
insb
jno
jno
shlb
dec
mov
pop
mov
es
xchg
enter
mov
or
mov
mov
sahf
cmp
sbb
and
push
mov
cld
mov
leave
jp
pop
cli
cmp
shr
int3
movsl
addr16
pusha
out
stc
ljmp
mov
sub
sub
add
pusha
cmpsl
xchg
pop
cld
cmc
adc
pusha
pop
sbb
adc
push
daa
xchg
mov
xchg
xor
ficoml
dec
add
sub
scas
pop
leave
testl
int
jmp
push
cmp
sub
test
mov
cmp
mov
adc
and
xchg
lahf
fmull
decl
mov
mov
inc
sbb
or
xchg
push
fcmovne
mov
cmpsb
popf
movsl
mov
and
add
mov
cmp
jg
mov
mov
aam
dec
loope
in
push
jbe
div
jg
inc
add
mov
dec
xchg
stc
fldt
jp
mov
popf
popf
lret
sahf
cli
xor
daa
ds
xchg
cwtl
imul
and
mov
xor
mov
xchg
ret
add
push
jl
insb
dec
fnstcw
in
mov
mov
ffreep
add
pop
nop
stos
push
dec
inc
mov
push
dec
push
scas
movsb
ret
xor
repz
cmp
imul
cmp
xor
inc
add
push
stc
and
cmp
cs
pushf
lret
scas
inc
sub
shlb
cmp
dec
push
jne
dec
cmp
cmp
inc
test
sub
out
sbb
inc
sub
jecxz
mov
xchg
xor
mov
pop
jbe
xchg
sbb
sub
arpl
into
xorl
aam
mov
je
dec
cmp
int
add
in
ret
loop
movsl
push
mov
lret
cmp
mov
jb
in
cltd
inc
test
jp
in
pop
push
jl
icebp
fs
dec
and
xchg
add
jo
dec
test
sahf
ja
jno
enter
dec
and
mov
shll
inc
xchg
xor
and
loop
test
aad
int3
adc
xchg
mov
add
and
add
push
adc
push
adc
ss
pop
mov
add
mov
jmp
mov
or
sqrtps
jl
xor
pop
cltd
in
pop
into
adc
xor
ljmp
movsb
idivl
cmp
jb
nop
leave
dec
push
loope,pt
push
add
dec
sbb
xorb
test
pop
jmp
sbb
popf
cmpsl
mov
add
cltd
dec
dec
gs
loop
test
sub
mov
js
cltd
arpl
addl
sbbb
mov
dec
mulb
push
adc
xchg
push
fstpt
jns,pt
mov
xchg
mov
sub
push
test
cmpl
insb
push
pusha
pushf
cmp
jmp
lods
lds
xor
clc
mov
mov
cmp
mov
rcr
stos
jmp
push
xor
cmc
lret
aad
int3
pusha
jl
mov
into
and
loop
pop
dec
or
push
cmp
pop
dec
xchg
in
shll
jmp
insl
cmp
dec
dec
jns
pop
dec
add
imul
adc
stc
int
or
mov
and
inc
fsubl
nop
nop
cwtl
push
xor
bound
push
jne
fldt
or
jnp
jp
pop
pop
inc
mov
jl
xor
inc
push
xor
pop
js
push
inc
das
mov
add
push
in
bound
test
dec
gs
xor
push
cmpsl
in
arpl
out
psrlq
arpl
test
lds
mov
mov
out
jo
mov
dec
aaa
cwtl
ds
xor
cld
je
and
mov
xchg
fiadds
xchg
add
je
mov
arpl
jl
das
scas
mov
xlat
xchg
ja
incb
push
idivb
jnp
repz
aaa
xchg
sarl
outsb
xlat
mov
mov
hlt
mov
dec
sub
jno
sub
pop
lds
and
xor
sbb
rolb
adc
pop
pop
lods
push
inc
es
cmp
push
stos
stc
jge
mov
mov
cmp
mov
xor
je
mov
cmpsb
jns
ss
imul
inc
xchg
lods
cmp
push
int3
fisttpl
jns
cmp
jo
das
mov
fs
add
xor
pop
jmp
and
aaa
push
mov
sub
push
outsl
fucomp
sub
sub
std
inc
imul
cmpsl
and
cmp
cwtl
gs
in
test
xchg
inc
mov
cltd
mov
add
jae
icebp
out
cli
mov
add
scas
xchg
push
sbb
icebp
nop
inc
hlt
lcall
aad
out
addr16
sub
ljmp
sbb
sub
jb
cmp
fisubrs
cli
xlat
jno
sub
or
jbe
inc
shrl
add
add
adc
pavgb
fdivp
inc
aas
inc
xchg
mov
fabs
dec
mov
inc
cmpsl
mov
stc
fnstcw
push
pop
call
adc
xor
cmpsl
repnz
and
stc
jge
adc
add
leave
movsl
mov
enter
insl
mov
ret
lahf
in
lret
pop
xchg
mov
cld
enter
cmpsl
dec
xchg
adc
mov
cmp
jb
push
popf
lock
pop
inc
in
movsl
pusha
push
jnp
jnp
jne
dec
sbb
int
lea
mov
xorl
test
les
pop
cmc
xor
inc
in
call
inc
div
pushl
out
in
mov
ljmp
mov
in
inc
mov
dec
insl
push
adc
sbb
jge
sbb
cs
add
xor
push
inc
lock
testl
pop
fimull
out
inc
scas
sbb
mov
data16
or
xor
adc
cltd
fwait
xchg
shl
jns
inc
lret
lds
xchg
jnp
cltd
aad
mov
sub
mov
repz
shrl
lods
inc
stc
mov
inc
cmp
scas
add
fucomp
jne
push
adc
leave
or
add
lods
sbb
mov
ss
int3
xchg
cmp
mov
aam
sub
jne
xor
xchg
add
dec
mov
call
mov
mov
cli
jl
adcl
lret
jl
rcr
out
dec
sbb
jg
mov
push
pop
xchg
cmp
dec
inc
xor
arpl
mov
dec
pop
inc
push
cmpb
adc
and
sub
mov
or
pop
jno
in
xlat
inc
movsl
mov
outsl
mov
test
daa
push
movsb
mov
or
fisubs
dec
sbb
fisubs
add
movsl
icebp
xor
les
fisubrl
insl
and
dec
fnsave
pop
orb
xor
push
subb
lea
rolb
push
filds
cld
adc
jae
addr16
and
loope
push
clc
add
mov
imul
lock
lcall
into
sbb
or
push
movsb
xchg
ljmp
or
cmp
adc
int
dec
jns
cmp
shr
jge
or
stc
xor
jmp
popa
pop
ret
enter
lods
movsb
lods
out
out
mov
rcrb
push
mov
in
add
pop
mov
lds
les
mov
xchg
je
iret
add
in
addr16
dec
imul
pop
jg
sub
cli
pop
sbb
cmp
cltd
cmp
pop
pop
lcall
lret
enter
jae
subb
jmp
pusha
loopne
and
adc
push
int3
add
xchg
repz
push
or
addr16
cmp
cmpsb
gs
shl
jns
insl
push
push
sub
xchg
xor
sbb
adc
xor
aaa
fistpl
call
ss
jmp
leave
loope
add
ss
addr16
mov
bound
jb
cmp
sbb
dec
movb
jle
ja
ret
sub
andl
mov
xchg
jg
jbe
adc
sbb
cmpsl
mov
mov
mov
int3
es
lret
and
dec
iret
sarb
adcl
sbb
divl
loopne
mov
popf
mov
lea
jnp
stos
repnz
xor
hlt
mov
jmp
repz
xchg
add
and
divl
jle
and
add
push
lods
pop
leave
jns
jp
cli
shr
fidivs
and
mov
movsl
jmp
or
xchg
dec
cmp
ficoml
and
jnp
cltd
test
out
cli
test
outsl
jno
jp
cltd
mov
fisttps
pop
mov
sbb
cs
fcoml
lahf
lret
test
and
sahf
sub
xor
sub
stos
add
cmp
int
push
sbb
daa
pop
mov
xchg
cmp
inc
cwtl
mov
call
notb
bnd
xor
push
pop
stos
push
and
add
mov
xor
nop
mov
shll
ds
inc
jmp
mov
push
fdivrs
loop
and
sti
popfw
das
lcall
out
cmp
sbb
push
fucom
mov
jecxz
dec
push
or
scas
inc
mov
and
clc
sub
pop
addr16
pop
lock
lock
loopne
aaa
cmp
mov
jo
jle
sti
sbb
jp
scas
insb
mov
lods
in
jmp
arpl
jmp
mov
xor
xchg
sbb
push
jp
cld
test
pop
arpl
mov
pop
pop
jecxz
aam
stos
insl
insb
out
out
lea
movsl
jp
test
cmp
dec
out
out
cld
jp
jmp
mov
dec
push
scas
enter
out
cs
push
xor
jo
adcl
sbb
cmp
ljmp
in
mov
inc
dec
shrl
mov
mov
hlt
ds
push
and
repnz
mov
mov
dec
push
shrl
jns
daa
push
xor
fcomip
pop
adc
jns
mov
pop
add
inc
jecxz
loopne
pushf
mov
out
mov
shl
out
or
es
imul
cltd
xchg
les
sahf
loop
mov
mov
and
lds
mov
insl
mov
fs
je
xchg
cwtl
add
loop
xor
clc
inc
sahf
mov
lods
popa
inc
repz
sbb
in
jp
test
ds
inc
sub
and
lock
imul
and
inc
out
dec
call
scas
movsb
cmp
and
inc
orl
lods
cmp
orb
add
jp
jg
and
lret
xor
fnstenv
jle
cmp
xor
fmuls
ret
xchg
aas
mul
mov
idiv
enter
pop
cmp
mov
movsl
pop
cmpb
pushf
sub
cli
mov
mov
int3
repz
jle
loopne
sbb
ja
xor
dec
fisttpl
dec
out
pop
es
daa
mov
fidivrl
pop
dec
stos
gs
fisubrl
jno
mov
sub
out
push
jge
sbb
xchg
fcomip
sahf
cmp
imull
xor
lcall
lea
pop
sub
sub
mulb
mov
in
xor
out
xor
or
push
test
iret
xchg
sbb
fldt
jb
fstps
mov
and
clc
outsl
int3
into
addr16
mov
incb
jg,pn
jmp
xchg
xor
or
pop
loopne
xchg
xchg
imul
mov
out
mov
pop
fsub
addl
lock
add
sub
jge
fmulp
sbb
jns
es
sarb
dec
mov
push
out
imul
rol
stos
pop
cmp
sarl
xor
or
sub
and
test
jae
jle
aad
pop
adc
andl
xor
lret
enter
or
and
fwait
pop
gs
out
push
push
pop
fnstenv
xor
scas
cmp
enter
cmc
dec
int
ret
xor
sub
xchg
push
lcall
xor
mov
mov
lds
pop
cmc
lret
inc
inc
mov
mul
test
clc
loop
jl
add
jo
adc
cmp
adc
sub
or
mov
dec
shrb
popf
push
jbe
imul
rorl
arpl
rolb
rcrb
lret
pop
inc
aaa
mov
rorl
pushf
call
inc
fcmovnu
inc
or
sti
add
push
mul
hlt
jno
fs
shr
push
fisttpll
sub
jnp
jl
push
push
rcrl
ss
inc
cld
fsubl
and
out
mov
sarl
inc
shlb
fiadds
xor
repz
test
add
and
fmull
or
daa
xor
in
lret
jmp
mov
fdivr
jmp
push
xor
call
je
cmp
lret
or
jp
cmp
inc
push
pop
clc
std
dec
jl
loop
hlt
aad
nop
cmp
add
xor
call
lret
stos
pushf
or
sbb
mov
jge
adc
or
mov
xchg
mov
add
mov
arpl
push
push
xchg
mov
mov
pusha
or
push
adc
pop
mov
mov
je
xor
cmp
push
dec
repz
mov
insb
data16
in
shlb
push
xchg
and
das
out
pop
loopne
sbb
fdivs
sbb
aam
call
and
movsb
aas
mov
loopne
dec
fsubr
scas
fsubl
push
sub
int
inc
fsubl
xchg
mov
aas
pop
dec
out
sbb
pop
nop
aaa
sarl
xchg
cld
sub
cmp
jbe
inc
xchg
repnz
std
fildll
adc
jb
or
lea
add
aaa
fnstenv
ss
mov
ds
cltd
das
repnz
push
xchg
into
push
inc
push
inc
and
mov
les
je
stos
pop
mov
test
or
jb
or
cmp
jo
add
xchg
in
dec
inc
cmp
pop
jns
mull
ja
popf
or
std
arpl
push
jp
je
shl
add
and
jo
lret
enter
mov
or
add
cmpsb
aas
adc
pop
stos
icebp
mov
dec
scas
sub
adc
and
jl
mov
jns
or
js
flds
ret
cmp
or
xchg
push
pop
jno
inc
mov
mov
adc
gs
popf
ds
sub
je
repz
or
call
xor
es
pop
int
std
xchg
sarl
pushf
xor
push
sub
roll
pop
loopne
mov
jb
xor
out
push
pop
loopne
add
sahf
push
ljmp
mov
es
xchg
xchg
mull
jle
jecxz
or
mov
int3
sarb
mov
lods
and
sub
push
xor
ja
mov
or
xor
jmp
mov
jo
sbb
inc
sbb
dec
dec
mov
fstpl
je
push
pop
pcmpgtw
push
pop
test
maskmovq
imull
loope
add
push
cmp
lock
ret
fdivrs
imul
xchg
scas
mov
dec
sub
sub
lds
out
jle
enter
jbe
cld
pop
sbb
jae
idivb
cmp
dec
dec
rcrl
je
cmp
dec
sub
icebp
pushf
int3
imul
andb
in
push
lea
xor
faddl
jge
out
inc
daa
cmp
testl
push
lcall
cli
or
repz
inc
push
push
jecxz
cwtl
in
out
out
pop
ja
pop
outsb
je
lds
iret
ja
jbe
test
xchg
xchg
es
adcl
adc
nop
and
jmp
sub
call
adc
stos
imul
xchg
cmp
dec
gs
sub
add
int3
addr16
mov
sub
mov
or
into
push
pop
xchg
jns
fwait
mov
movsl
les
mov
sbbb
mov
and
xchg
dec
icebp
leave
dec
repnz
es
jo
popa
push
imul
push
cmpsb
xor
jno
mov
stos
lret
pop
sti
and
dec
dec
jno
arpl
xchg
test
push
push
js
mov
cwtl
out
addl
fld
cmpsl
aas
inc
out
push
pop
adc
jb
int3
icebp
add
stos
dec
sbb
stc
enter
in
in
popf
fsubrl
dec
jge
push
sub
aas
out
mov
and
cmpsb
and
es
scas
and
xlat
jns
mov
pop
test
test
cmp
fistl
and
mov
mov
jb
nop
jmp
popa
cmp
adc
dec
pusha
pop
add
mov
shll
stos
rcrb
pop
fbstp
push
mov
inc
loope
dec
fistps
add
xor
xchg
int3
imul
push
adc
inc
enter
push
clc
mov
aas
shll
inc
mov
pop
mov
cmpsb
adc
sbb
fists
paddb
subl
roll
xor
mov
fadds
lahf
mov
dec
sbb
push
sahf
in
sbb
leave
daa
andl
or
rcll
mov
int
push
ret
int
dec
js
outsl
arpl
fs
ret
sbb
jb
adc
cmp
rorl
imul
dec
mov
xchg
adc
cld
jp
mov
imul
mov
and
inc
shr
xchg
mov
add
loop
mov
cmp
into
das
inc
aas
rcll
icebp
xor
xchg
jne
dec
inc
mov
mov
jno
inc
lock
dec
push
adc
test
mov
dec
push
enter
enter
lcall
icebp
mov
push
negl
mov
test
pop
sub
dec
mov
sti
dec
fsubr
push
and
popa
fs
lret
dec
dec
mov
jae
push
push
ret
pop
xchg
xchg
xchg
push
std
fnstcw
pop
notb
pop
test
pushf
sahf
clc
jmp
xchg
mov
fadd
push
inc
fmulp
movsb
lock
mov
lods
adc
or
aam
lret
sub
in
xchg
adc
sar
pop
dec
sub
xor
imul
mov
in
adc
mov
mov
lock
mov
je
in
loop
int3
fs
movsl
xchg
mov
out
ds
jge
jecxz
push
pop
loope
or
mov
iret
scas
dec
xor
jecxz
jle
popf
sahf
xchg
out
das
push
lret
lds
sahf
sbb
test
xor
rcll
out
orb
out
ljmp
lret
mov
shll
shlb
push
mov
dec
mov
imul
lods
xor
lahf
arpl
or
add
jp
shl
aam
dec
add
mov
push
mov
ja
hlt
xlat
aas
xchg
negl
jge
or
in
ja
addr16
test
rcrl
aad
dec
stos
sub
and
out
mov
jae
cwtl
mov
incl
push
aas
cmpsl
pop
dec
xlat
jmp
add
adc
push
jns
shrl
aam
mov
mov
movsb
fildl
test
lcall
jo
loope
push
sbb
mov
aaa
mov
push
dec
nop
jne
stos
nop
jmp
std
mov
xchg
or
cmp
jecxz
lret
test
js
add
and
lret
test
test
shl
les
sahf
or
mov
pop
std
cli
or
js
mov
push
push
and
push
or
dec
jecxz
insl
popf
jmp
add
jne
leave
and
popa
or
inc
pop
cltd
xchg
or
mov
incl
xlat
loope
pop
test
sub
and
mov
ljmp
inc
mov
push
mov
lcall
cwtl
mov
mov
das
sahf
sbb
ret
ja
movsb
mov
pop
pop
xor
lcall
pusha
fs
je
fdivrs
inc
or
cmc
xor
pop
jno
push
imul
or
aam
mov
cmp
das
lods
cmpsb
mov
fsubr
test
fildll
push
movb
inc
ja
jge
pushl
subb
fdivrl
loop
inc
or
cli
or
xor
pop
dec
loopne
sub
sbb
fcoml
stos
xchg
cmc
mov
stc
mov
imul
lea
idivl
hlt
je
outsl
es
cld
stos
mov
xor
in
out
mov
sahf
adc
mov
enter
cld
push
popaw
jo
mov
mov
and
repnz
push
sbb
push
or
push
xor
mov
sub
xchg
shrb
cmp
popf
test
das
jg
inc
cltd
push
xchg
mov
mov
inc
popf
add
sub
cld
cmp
incl
pop
jae
mov
movsl
hlt
aad
int
or
mov
dec
in
fbstp
leave
mov
push
xchg
xor
add
sub
jle
jl
in
movsb
xchg
adc
adc
pop
or
mov
nop
lea
add
imulb
ja
jb
lods
cmp
inc
imul
pop
gs
out
mov
pop
cmc
push
jnp
add
push
or
add
mov
dec
or
adc
mov
push
je
jp
out
and
mov
or
pop
pop
stos
mov
cmp
fimuls
inc
sahf
push
loopne
sbb
dec
pusha
cmp
lods
add
mov
xor
push
pop
out
in
out
jns
movl
sahf
imul
nop
repz
and
sbb
iret
outsl
inc
outsl
mov
jg
aad
call
cmp
cmc
and
repz
rdtsc
int
add
sub
cmp
repnz
adc
jecxz
cmp
mov
or
test
push
inc
xor
mov
ror
sahf
js
scas
ja
ljmp
push
cmp
inc
and
jge
mov
dec
adc
jno
pop
push
dec
das
daa
lahf
mov
std
ja
and
sub
jo
cwtl
sarb
add
clc
lcall
cmp
iret
adc
xor
xor
ss
jae
adc
push
sti
out
das
cltd
fwait
push
inc
mov
dec
js
popf
pop
push
pop
mov
daa
into
cmp
btr
imul
mov
xor
pop
cmp
inc
dec
insb
push
shlb
xor
add
js
shrl
insb
sbb
mov
jns
ds
mov
es
sti
add
jg
push
or
scas
push
xchg
cs
lds
inc
popa
rcr
lods
xchg
lock
loop
test
lcall
lret
dec
daa
je
push
cmp
xchg
dec
sbb
adc
mov
jg
pop
cmp
push
inc
jl
pop
test
xchg
mov
cld
mov
aad
xlat
sub
cmp
arpl
xchg
sbb
pushf
and
xor
push
push
xchg
sub
jge
pop
ret
dec
test
idivl
je
jae
cld
push
xchg
pop
ja
enter
cmp
cwtl
pop
mov
stos
mov
jg
in
nop
push
lret
insl
mov
cmp
sysexit
mulb
ret
adc
mov
mov
hlt
loopne
loopne
scas
roll
cmpsb
test
decb
xor
dec
leave
dec
rol
xchg
lahf
lock
std
or
mov
inc
repz
sti
jmp
sahf
sbb
push
cmp
adc
shrl
cmp
rsm
inc
insb
mov
and
adc
mov
mov
jecxz
mov
pop
inc
add
stc
jle
pop
iret
dec
push
scas
in
addr16
lea
dec
out
ret
sahf
mov
stos
xchg
dec
mov
jnp
inc
lea
pop
add
js
repz
ds
fildll
in
popf
scas
jb
mov
out
sub
stc
fnstsw
xchg
dec
mov
aaa
jecxz
xchg
inc
cmpsb
lock
jg
mov
clc
cmpb
adc
sbb
cmp
aaa
out
xor
mov
inc
sub
rcll
jae
fs
mov
jmp
or
ret
jle
pop
jnp
adc
jmp
repz
sub
sub
std
adc
test
and
adc
mov
lahf
cmp
cs
pusha
mov
repz
pop
or
inc
loop
cmc
xor
ljmp
imulb
adc
pop
sbb
ficoms
push
outsl
xor
jl
or
subl
mov
fwait
scas
inc
and
mov
in
repnz
mov
add
and
aam
cmp
ja
jne
sub
xor
lods
cmp
addr16
shl
lea
inc
xchg
imul
jno
ss
xor
fcmovnbe
shll
mov
icebp
lret
or
mov
int3
daa
push
inc
mov
xlat
push
sbb
adc
in
adc
movsb
or
jbe
mov
mov
dec
lahf
pop
outsb
lret
pop
cmpsb
fsub
pop
push
adc
or
jp
sti
push
data16
mov
cmpsl
cmp
shlb
notb
icebp
inc
and
fdivl
iret
pushf
cltd
in
mov
mov
aam
testl
lcall
aas
test
push
aad
fidivrs
sti
and
sbb
idivb
lahf
fbld
lret
repnz
sub
mov
and
mov
leave
mov
ret
push
lahf
sbb
mov
movsb
js
jmp
pop
lret
fistpl
mov
test
and
and
shlb
jle
jge
add
xchg
mov
push
jae
les
cmp
mov
mov
cld
in
xchg
inc
jecxz
jmp
push
cmp
pop
push
test
xor
sbb
aaa
iret
std
jb
xor
jecxz
adc
pop
mull
push
push
mov
rclb
mov
ret
inc
pusha
adc
cmp
insl
add
js
adc
scas
in
sbb
popf
leave
inc
inc
mov
sbb
orl
mov
sub
pop
js
ds
jo
cmc
pop
daa
inc
adc
pop
pop
jp
dec
shrl
cmc
popf
mov
mov
jne
xchg
mov
ljmp
icebp
xchg
aaa
icebp
shll
loopne
pop
push
mov
jl
push
mov
lret
jnp
ja
mov
inc
cmp
jecxz
sarb
or
mov
data16
jp
ja
mov
and
and
pushf
stc
pop
mov
and
pop
aad
scas
dec
xchg
mov
aam
cmp
scas
sub
mov
inc
pop
in
out
mov
cli
or
mov
or
rcr
outsb
sbb
out
fadds
outsl
xchg
insl
adc
and
fdivr
or
mov
sbbb
dec
imul
into
dec
inc
arpl
xchg
popf
inc
adc
mov
pmulhuw
add
jbe
xchg
imul
aam
push
je
mov
inc
push
push
and
lea
mov
push
xchg
leave
xchg
rolb
xor
sbb
jo
mov
and
xchg
div
mov
pop
aaa
pop
xlat
out
fisubrl
jecxz
mov
mov
dec
sbb
imul
data16
repz
pop
cmp
pushl
xchg
test
ja
pop
ja
push
sbb
arpl
call
lea
mov
jb
mov
pushf
sub
cwtl
insb
ss
pop
xchg
inc
fdivr
shrb
stos
adc
push
push
addr16
or
jmp
jge
mov
ljmp
xchg
jno
xchg
icebp
dec
addr16
sbb
repz
scas
aad
push
cmpsb
mov
inc
insl
xchg
aad
cwtl
test
sub
xlat
js
sub
jecxz
mov
or
repnz
rcr
test
andb
addb
out
ret
mov
gs
std
int
push
ja
push
pop
ficomps
sub
ss
ds
lock
ja
rcrl
popf
inc
adc
rol
pop
insb
mov
dec
push
cmp
movsw
xlat
in
repz
sbb
inc
mov
mov
stos
mov
sti
jbe
or
mov
mov
jge
mov
dec
icebp
sbb
lods
call
and
mov
cmp
test
xor
pop
aad
lcall
leave
sarl
jl
jp
adcl
mov
sbb
rcrl
dec
stc
lds
xchg
mov
aas
test
shll
gs
mov
fidivl
sub
jp
movsl
push
sub
insb
lods
sarl
adc
sbb
add
sbb
adc
bound
xchg
cmpsl
mov
aas
int3
dec
loope
xor
add
mov
inc
fldt
or
mov
call
pushf
cmc
pop
lea
repnz
outsl
int
sarl
mov
je
sbb
fiaddl
add
cmp
les
mov
lods
int
ja
inc
xchg
dec
je
scas
sti
mov
rolb
add
add
inc
or
cmpb
lods
mov
or
pop
dec
addl
add
xor
push
add
cli
movsb
mov
ret
inc
mov
inc
nop
sbb
pxor
xchg
xchg
aaa
rcl
fldcw
loope
loopne
mov
dec
data16
repz
sbb
dec
pushf
jg
xor
int
imul
cmpsb
cli
mov
jo
dec
jno
mov
mov
push
cmp
cmp
mov
jo
sbb
rcrb
int
push
xchg
movsl
ljmp
fwait
sbb
jl
cmp
cmc
mov
push
pop
call
adc
movsl
ljmp
mov
orl
or
aad
dec
push
cmpsb
out
add
jno
lahf
out
clc
dec
or
xchg
dec
test
cmpsb
cmp
and
jns
mov
lret
rclb
add
aaa
mov
dec
iret
jg
adc
repz
xchg
cmpsb
std
push
push
mov
roll
jbe
cmpsb
mov
cmp
nop
in
push
mov
and
push
mov
scas
lret
lret
idiv
int
cmc
mov
mov
notl
or
and
fcompl
inc
lea
cmp
push
hlt
cmc
mov
and
repnz
or
mov
shrl
push
out
movsl
pop
stos
pop
pop
mov
sbb
inc
cwtl
xchg
int3
mov
mov
sbb
inc
je
jae
popf
rolb
jp
inc
mov
mov
sub
sub
cli
popa
sub
dec
subl
ficompl
mov
enter
ret
add
add
xchg
adc
popa
and
jge
in
cmpsl
mov
lret
inc
aad
or
ret
adc
or
int
or
inc
cltd
and
cmp
mov
mov
or
push
stos
mov
bound
adc
jp
xchg
ss
fnstcw
inc
push
pusha
mov
cmpsl
pop
hlt
nop
outsb
jns
and
fistpll
leave
ss
lds
fs
jge
nop
xor
aam
in
repnz
movsl
inc
fs
scas
repz
xchg
xchg
xchg
mov
pop
addb
stc
pushf
nop
or
dec
fcoms
adc
in
mov
cld
push
inc
add
out
cli
push
xlat
test
sti
loopne
inc
data16
in
or
push
enter
jmp
cmp
sub
idivb
and
test
inc
inc
xor
dec
test
jns
adc
pop
sbb
dec
stos
cmp
lock
jl
xchg
imul
cmpsb
dec
and
xchg
xor
dec
push
or
cwtl
xor
xlat
lods
adc
xor
addr16
out
dec
add
xchg
mov
push
push
rcrb
enter
cli
mov
pop
add
cmpsl
mov
sbb
or
dec
repnz
pop
sub
popf
dec
aad
cmp
imul
pop
xchg
bnd
adc
mov
dec
xchg
mov
andb
icebp
shll
add
fiadds
add
dec
shl
ljmp
mov
out
pop
loop
arpl
ret
jl
cmp
les
fisubl
sbb
mov
mov
push
out
lcall
stos
xchg
fwait
push
cmp
adc
lret
ja
and
sub
mov
and
push
add
dec
stos
inc
stos
jbe
shrb
mov
std
movsb
add
ffreep
sahf
aam
mov
dec
push
fdivrl
xchg
cmp
sub
ljmp
pop
incl
bound
andl
inc
out
adc
push
push
hlt
aam
ja
scas
divl
or
cltd
xchg
xchg
cmp
mov
mov
push
dec
cmpsb
addr16
or
fiaddl
pop
testl
add
fisttpl
ljmp
les
or
out
xchg
or
push
pop
pop
mov
bound
pushf
int3
sbb
inc
xchg
aaa
xor
xchg
xlat
ds
xchg
out
dec
and
mov
out
testb
dec
loope
dec
inc
ret
xchg
das
xchg
shll
iret
xchg
add
mov
mov
inc
mov
imul
sub
jae
inc
mov
and
pop
in
jnp
popa
mov
idivb
outsl
cmp
xor
mov
icebp
push
and
ss
aas
sbb
xorl
push
sub
mov
cli
movsb
lock
dec
in
js
sub
jae
dec
inc
sbb
mov
mov
mov
add
adc
jbe
mov
enter
daa
scas
cmc
and
pop
rorl
jge
push
daa
inc
dec
xchg
arpl
arpl
lods
jmp
push
test
iret
lret
pop
js
mov
inc
xor
ret
xchg
add
xchg
inc
ljmp
mov
jmp
aam
mov
jnp
sbb
mov
repnz
test
stos
push
fld1
mov
pop
mov
and
sbb
outsb
mov
mov
popa
test
ss
mov
jge
fwait
jo
mov
popf
aas
xchg
or
push
pop
jecxz
sbb
lret
es
push
mov
rclb
sbb
ffreep
jmp
lods
pop
cmp
les
or
jno
push
fwait
shrl
lret
inc
lea
jp
outsb
push
ja
addr16
or
loope
sahf
push
das
fsub
cli
or
push
les
xchg
sub
je
sbb
xor
sub
sub
mov
push
push
or
cmp
test
ljmp
xchg
popa
jae
mov
push
test
inc
decb
jbe
mov
test
gs
mov
dec
mov
scas
hlt
push
and
das
add
or
xchg
out
das
jg
cmp
mov
xor
fdivrl
mov
movl
aas
or
je,pt
xor
inc
jg
jp
int3
mov
jo
inc
pop
fldt
xor
pop
std
mov
lcall
jo
ljmp
pushf
out
and
add
xlat
cmpsb
lret
popf
cs
cmp
test
pop
lods
push
mov
fwait
push
sub
daa
jb
dec
mov
jecxz
ss
mov
pop
or
xor
aam
fs
sbb
loop
mov
ds
inc
jp
hlt
mov
movsb
hlt
sub
clc
call
xchg
push
or
and
insb
adc
inc
insl
fwait
ret
cmp
sbb
cmp
mov
push
nop
pop
jl
arpl
ret
mov
inc
mov
cmp
lds
push
inc
shrl
pusha
mov
stos
mov
sti
test
fstpl
xchg
ror
scas
push
sub
jb
dec
scas
push
adc
xlat
sub
cld
fs
or
dec
dec
ret
xchg
add
dec
fistpll
leave
std
shll
push
addr16
in
cmp
xchg
cmc
bound
das
add
dec
adc
jns
xchg
jg
hlt
arpl
push
in
xor
dec
mov
addb
test
pop
flds
push
xor
and
dec
jns
mov
test
stos
inc
and
jae
scas
outsb
mov
jb
adc
push
jo
stos
mov
xchg
mov
data16
dec
inc
inc
jb
js
mov
jmp
rcll
mov
or
pop
adcl
jl
xor
popa
or
xor
lds
std
das
push
stos
cmpsl
and
orl
cmp
cmp
out
js
sbb
mov
cmc
sbb
jae
jne
cmpsl
inc
inc
es
and
dec
mov
scas
ja
fucomi
jg
jae
or
add
sarb
cmp
out
push
movsl
adc
push
pushf
cmp
lea
rcll
add
test
rcrl
insl
jbe
inc
test
xor
and
repnz
movsl
mov
pusha
mov
cli
and
fnstenv
es
inc
pop
mov
popl
xor
pusha
jae
inc
or
int
dec
imul
out
push
inc
mov
gs
loop
pop
stc
xchg
and
test
jns
pop
xor
push
call
or
xchg
and
jecxz
jge
aam
lock
adc
lods
das
fisubs
jns
jg
xor
stos
cmp
dec
arpl
into
icebp
adc
cmp
mov
push
adc
sbb
dec
cld
bound
xchg
nop
mov
filds
mov
mov
adc
mov
or
adc
std
test
sahf
jne
bound
jl
lret
jne
scas
sub
lods
pop
sbb
sbb
std
pop
loop
lods
lea
xor
xor
xchg
negb
xor
dec
cmc
add
out
pushf
dec
xor
cmp
and
mov
daa
mov
out
mov
add
pop
outsl
push
sbb
je
adc
icebp
jl
cmp
inc
push
xor
aam
aas
sahf
jne
out
out
sbb
mov
mov
sub
adc
sub
adc
and
insb
pinsrw
xor
mov
pop
mov
push
jp
pop
jns
stos
dec
jge
decb
stos
das
mov
movsl
dec
nopl
int
jle
lcall
and
inc
sub
fsubr
out
mov
xchg
loopne
jmp
ds
push
xchg
dec
sub
lds
sub
sti
jo
mov
push
and
iret
loopne
in
push
stc
fs
mov
mov
fcomps
add
sub
mov
dec
in
adcb
jae
inc
in
mov
xchg
js
loopne
outsb
mov
cltd
push
mov
imul
xor
pop
push
mov
cmpsl
loope
mov
adc
xchg
or
lret
sbb
imul
ja
mov
or
psubsw
mov
pusha
pop
cs
cmp
mov
mov
fists
loop
out
inc
lret
or
rcll
js
xor
push
add
inc
pop
dec
aas
add
and
test
nop
out
sbb
xor
push
into
cmp
cs
in
push
adc
add
orl
outsb
loopne
lock
fldpi
mov
movsl
add
popa
addb
clc
mov
adc
in
xor
and
ret
aad
pop
or
addr16
sti
push
test
adcb
jb
dec
mov
mov
ss
aad
icebp
rdmsr
or
push
test
aam
jne
cmc
push
loope
inc
mov
push
in
pop
insb
xchg
leave
and
pop
mov
push
mov
fisttps
or
xchg
test
lds
insb
sub
es
andb
mov
cli
xorl
inc
fs
in
imul
jge
arpl
mov
cmp
pop
xchg
insb
cmp
mov
mov
shll
sub
xor
and
test
ljmp
pop
test
loope
mov
xlat
out
mov
pop
jmp
pop
stc
xlat
pop
mov
test
inc
pop
pop
mov
push
rorb
xchg
fisttpll
movsb
loop
leave
dec
aad
push
sub
ret
cld
push
clc
pop
out
addr16
xorl
mov
dec
sub
cs
xlat
xor
mov
je
add
mov
fists
out
movsb
enter
jne
bnd
mov
outsb
int3
lods
sbb
add
rolb
cmp
xor
sub
les
sbb
sub
xlat
mov
aad
hlt
jle
cmp
stos
popf
decb
ja
add
inc
mov
mov
push
pop
dec
add
sub
sbb
imul
push
data16
in
cltd
test
repnz
mov
add
lret
lret
and
aad
sbb
mov
cmpsb
jmp
sahf
ja,pn
pop
lods
js
in
int
shrl
sbb
lret
call
adc
fistps
cs
push
jno
fildll
testb
add
rorl
nop
mov
lahf
jno
repz
mov
cmp
add
divl
mov
stc
adc
aas
rolb
push
leave
sti
fiaddl
sub
orb
mov
mov
insl
shl
scas
mov
dec
cmpl
pop
pushf
xor
repnz
mov
xlat
xorl
filds
ficompl
push
dec
inc
daa
xor
mov
shlb
push
mov
insl
lds
bnd
and
cwtl
dec
inc
fbstp
cmpb
test
cwtl
scas
imul
inc
and
push
out
lods
and
mov
iret
test
cmp
cwtl
fnstcw
pop
adc
cli
mov
out
sahf
je
or
push
mov
jl
add
rol
popf
mov
inc
jnp
aas
pop
lock
mov
dec
mov
fldlg2
test
add
mov
idivb
jbe
int
cli
and
mov
sahf
or
and
jne
mov
mov
inc
pop
int3
mov
dec
adc
or
mov
cmpsl
movsb
neg
cmp
sub
mov
hlt
jae
pusha
xchg
rcrl
xor
test
xchg
iret
movsl
call
mov
sub
ss
lea
mov
push
xchg
cmp
adc
cld
push
fs
push
push
jns
lds
mov
xchg
mov
inc
dec
xlat
lcall
repz
fnstcw
sub
push
cs
cmp
mov
pop
ss
ret
inc
mov
mov
sub
out
insb
mov
scas
mov
ret
and
rorb
test
mov
mov
mov
fldl
int3
loope
imul
dec
mov
mov
cmc
out
aas
jge
fnstsw
jne
jp
mov
jecxz
mov
mov
mov
repnz
test
jge
movsb
xchg
push
shll
pop
out
icebp
xchg
cmp
lods
add
orl
mov
mov
fsubl
xlat
movsb
or
mov
add
stc
stos
sti
scas
fstl
lods
arpl
adc
mov
imul
mov
pop
or
data16
pop
pop
movsb
repnz
pop
dec
push
inc
inc
push
cmc
rorb
push
xor
pop
mov
sahf
fisttpll
mov
mov
jae
insb
mov
sbb
mov
add
sub
fisubrs
movsb
inc
mov
jmp
lods
pushf
sbb
lcall
xchg
add
cwtl
xchg
mov
out
push
lcall
push
rol
cmc
sbb
rcll
cmp
ja
fldl
xlat
fwait
imull
mov
push
pusha
hlt
dec
int
shll
cmpsb
movsl
xor
mov
outsl
xchg
xchg
addr16
lahf
fs
shlb
add
mov
mov
mov
insb
sub
hlt
sub
fstl
jo
xor
push
dec
aad
mov
lret
xchg
pop
xlat
cmp
jl
lahf
and
push
mov
cmp
in
cmp
and
jb
leave
mov
ds
mov
cmp
lret
dec
cmpb
jns
rolb
shll
ret
pop
in
add
sub
xchg
mov
fwait
sbb
aas
sub
inc
ds
jecxz
add
out
pop
jnp
xor
adc
push
enter
push
movd
addl
lahf
add
mov
mov
iret
pop
or
mov
ss
aaa
sahf
cmp
adc
addr16
divl
mov
adc
iret
dec
sti
mov
jo
jae
xchg
pop
xlat
test
sti
sti
cld
ret
out
mov
jb
rcrb
cmp
and
xchg
adc
add
into
es
inc
push
cli
int3
mov
mov
push
dec
bound
in
in
push
or
rorl
sub
aaa
mov
arpl
sbb
out
int
inc
jne
mov
cmp
cmp
scas
test
jl
dec
push
xchg
or
inc
in
std
pop
nop
rclb
fxch
or
bound
push
pushf
cltd
es
out
dec
adc
repnz
push
or
xchg
int
fdiv
loope
pusha
insl
add
cli
mov
sub
mov
cmp
ja
adc
repz
test
das
push
mov
arpl
enter
cmp
or
aaa
leave
inc
xchg
add
out
ss
xlat
aam
push
insl
aad
xchg
mov
rep
loop
and
xchg
mov
test
or
jge
iret
in
sbb
test
test
jge
aam
fnstenv
lahf
push
popf
ficoms
and
lea
movsb
xlat
test
mov
xchg
add
jp
dec
sbb
xchg
sub
inc
mov
aas
pop
aam
pop
adc
outsb
int3
es
adc
pop
loop
xchg
push
iret
andl
push
pushf
dec
in
xchg
mov
push
in
xchg
les
test
scas
test
add
push
xchg
stc
jp
ds
imul
mov
sub
push
pop
push
sbb
in
mov
sbb
call
lea
sub
sub
cmp
daa
mov
andl
push
js
sbb
mov
mov
mov
cmp
xchg
cmp
testb
in
jmp
movsb
rcr
addr16
mov
mov
dec
cmp
iret
jnp
sub
mov
and
xchg
adc
lods
inc
xor
and
pusha
cli
push
dec
int
push
hlt
jb
xchg
out
dec
loope
pop
adc
push
in
jae
scas
dec
or
stos
es
add
dec
mov
mov
adc
push
std
mov
push
mov
xchg
push
cs
es
repnz
frstor
mov
rorb
icebp
hlt
outsl
fsts
out
rorb
mov
cmpsl
outsl
pop
cwtl
add
jbe
adc
sub
mov
dec
xorl
loopne
push
sbb
or
ret
pop
cltd
xor
or
arpl
bound
mov
js
cmp
call
adc
mov
aam
sub
cmp
cmpsl
flds
dec
movsb
icebp
push
push
jno
add
inc
dec
out
inc
cmpsl
insl
xor
sub
sbb
push
stos
push
lahf
repnz
inc
xchg
loope
out
lods
and
inc
aad
cmp
cmp
out
cli
cmp
mov
mov
add
loope
rol
dec
lds
ret
lret
or
adc
jb
push
sub
cmp
sbb
stos
je
pop
jne
cmp
in
les
jae
mov
add
pop
shll
cmp
mov
mov
iret
mov
in
dec
adc
scas
insl
push
clc
pop
std
dec
out
outsl
xor
mov
rclb
fstps
popa
cmp
sub
test
std
fsubrs
cmpsl
pushl
fisttpl
test
jmp
jno
push
pop
fidivrs
icebp
jle
sub
insl
fsubrs
mov
and
shlb
inc
test
jns
lea
cltd
jle
nop
cmpsl
daa
popf
testl
sbb
mov
sbb
push
and
lods
je
jnp
sbb
sub
sub
pop
add
bound
add
adc
push
and
inc
je
xchg
push
out
nop
xor
sbb
ficoms
out
pop
cltd
testl
stos
push
ret
std
test
iret
lret
addb
xchg
pop
xchg
scas
bnd
cmp
mov
jns
int3
jmp
clc
push
lea
cld
loope
lahf
dec
mov
xlat
addr16
int3
adc
iret
xlat
ret
sub
and
cmp
div
mov
inc
xchg
lods
in
mov
sbb
test
scas
pop
push
mov
cld
lret
stos
push
mov
xchg
pop
xor
repz
das
jno
ret
push
ja
sbb
sbb
inc
or
fidivs
repz
sbb
int
cmpl
lahf
fcomp
mov
jns
addr16
fstpl
xchg
popf
cmp
jl
mov
pop
data16
cmp
add
or
inc
jno
sub
ficompl
test
cmpsb
mov
sub
nop
orl
mov
or
movsl
push
lods
mov
sbb
adc
shll
pop
leave
icebp
inc
mov
jge
fmuls
pop
pop
orl
add
mov
xlat
gs
push
enter
mov
add
mov
mov
pop
inc
fwait
mov
dec
lds
add
into
fstpl
je
fwait
add
ds
rolb
or
mov
sbb
pusha
fs
push
es
lret
fadds
and
mov
popf
clc
xchg
xor
les
mov
jo
aaa
lods
xchg
test
push
xchg
dec
into
lcall
xchg
out
or
mov
pop
divl
mov
nop
scas
icebp
imul
ds
movl
sub
shl
cmp
popa
popf
jns
in
push
mov
push
ret
bound
lods
push
push
jg
push
nop
or
hlt
sbb
cmp
lahf
outsb
inc
enter
and
xor
mov
mov
repz
mov
into
mov
clc
mov
pop
cmp
sub
ret
pop
inc
fcompl
xor
aaa
int3
sbb
popf
sub
mov
mov
ret
in
arpl
mov
pop
ja
mov
pusha
mov
bound
mov
xchg
mov
dec
das
in
sbb
addb
push
ret
rcrl
jno
jbe
add
jnp
adc
mov
mov
in
adc
mov
imul
dec
mov
mov
xchg
and
jl
stos
insl
add
or
test
push
dec
xor
mov
fidivl
and
push
adc
in
xor
lret
jle
jge
push
jnp
dec
cmp
in
xchg
fdivs
jmp
imul
jge
je
aam
aam
mov
sub
mov
push
es
inc
jmp
addr16
repnz
loope
sbb
or
adc
fwait
dec
push
js
jecxz
mov
inc
dec
lds
data16
repnz
push
mov
out
insl
les
insl
js
mov
rorl
pop
clc
lahf
inc
cwtl
cmp
icebp
mov
xor
mov
lcall
cwtl
push
sbbb
out
inc
cmp
sub
xchg
dec
pop
iret
or
mov
adcb
xchg
subb
sbb
push
dec
xor
and
std
fistpl
rorl
int
sub
push
dec
movsl
jno
lds
xchg
xchg
sbb
cmp
mov
pop
jnp
jns
adc
dec
int
adc
ja
push
pop
scas
popf
out
mov
pop
fstpl
sub
mov
adc
shrb
add
into
or
pop
out
out
aas
inc
mov
scas
iret
call
daa
sbb
scas
push
mov
stc
out
xchg
push
mov
push
or
in
test
fmuls
push
imul
das
adc
pushf
adc
mov
int
mov
jge
ret
xchg
hlt
push
push
pop
xor
inc
je
je
js
push
lret
sbb
movsl
sub
xor
xchg
jmp
outsb
inc
mov
leave
sbb
mov
xor
clc
popf
movsl
shl
mov
push
add
movb
daa
jg
cli
ljmp
xchg
cmpsb
repz
out
int3
andb
inc
push
adc
lret
cli
imull
arpl
loopne
cmp
arpl
mov
outsb
es
push
fwait
xchg
testl
mov
daa
jle
mov
cltd
sbb
mov
fbld
mov
out
outsl
xor
shll
je
outsl
adc
into
inc
xor
in
inc
xchg
rorl
enter
pop
in
inc
sbb
lock
push
sub
mov
jo
mov
jp
lcall
push
inc
inc
mov
das
cmp
popa
adc
mov
stc
loop
mov
pop
dec
or
scas
jmp
inc
scas
insb
push
loope
sub
cmpsl
js
test
in
xor
add
into
aaa
leave
fdivrs
or
push
and
mov
loopne
adc
adc
push
push
cmp
stos
mov
fdivrl
adc
adc
ds
out
and
movsl
pop
mov
test
iret
paddusw
iret
pop
lcall
mov
clc
out
mov
gs
xchg
or
xor
pop
stc
xor
or
popf
pop
icebp
icebp
add
fwait
add
es
pop
inc
mov
daa
fwait
dec
and
push
orb
xor
add
mov
ret
fxam
lret
cmpsl
mov
adc
cli
pop
je
test
sub
arpl
sub
je
sub
mov
movsb
cs
cmp
jo
cli
test
pop
rclb
push
inc
xchg
lea
mov
jb
ljmp
dec
mov
gs
imul
mov
jbe
and
lret
scas
xor
aaa
faddl
out
repnz
or
lcall
test
jl
lods
insb
sbbl
lahf
stc
push
xchg
repz
lods
mov
mov
xlat
call
jmp
jg
xchg
je
add
dec
cmpsl
rorl
mov
dec
pop
sahf
stc
dec
mov
mov
cmp
dec
cmp
or
ds
mov
pushf
jbe
mov
divb
mov
push
add
iret
and
add
push
sub
into
lods
push
mov
lahf
cmc
and
scas
or
in
adc
dec
add
dec
sub
xchg
cmp
into
mov
ss
mov
mov
shrl
fsts
mov
imul
lea
xor
enterw
nop
mov
sbb
fistpl
inc
push
inc
aad
mov
push
outsb
jae
cltd
cmp
imul
cmp
xorl
stc
push
mov
int
scas
hlt
fiadds
push
xlat
inc
push
sub
dec
js
inc
in
xchg
add
adc
xorl
frstor
push
or
pop
pop
mov
mov
sbb
or
into
jp
mov
xor
mov
dec
cmp
fistpl
mov
pushl
dec
test
push
push
push
jp
dec
and
pop
lods
xor
cmpsl
aad
and
sub
mov
and
mov
jp
adc
aad
dec
in
sbb
mov
loope
ja
dec
loop
xchg
lds
push
pop
dec
sbb
dec
mov
cmp
push
stc
cmc
push
sbb
repnz
xor
outsl
xor
and
sahf
es
out
popl
in
xor
sbb
mov
xor
mov
call
pop
jo
repnz
xor
lods
imul
xor
and
push
push
cmp
movsl
shll
jae
mov
jecxz
sbb
das
fucom
test
ret
cmp
ja
dec
dec
add
and
out
mov
adc
mov
dec
jmp
or
push
xchg
inc
cmpsl
stc
and
or
xchg
dec
lods
loopne
decb
jbe
push
or
pop
or
dec
inc
cmc
or
mov
pop
scas
xchg
xor
jmp
lret
xlat
repz
jbe
dec
das
and
mov
test
push
sub
mov
fisubs
jmp
insb
out
sub
test
inc
mov
xchg
shlb
cmp
pop
in
out
xchg
es
xchg
in
mov
add
inc
inc
xlat
ficompl
dec
test
push
out
or
inc
addr16
in
push
add
xchg
jg
les
xchg
jno
dec
fdivrs
jnp
pop
jns
arpl
mov
sbb
jne
xchg
cltd
jae
ficoml
lods
ljmp
out
sbb
outsl
cmpsl
jne
movsl
push
inc
and
add
hlt
adc
mov
scas
scas
sbb
int
pop
dec
lret
jg
push
in
push
mov
bound
xchg
loop
pop
test
hlt
sub
and
xchg
inc
sub
lret
leave
sub
aad
jb
scas
inc
xchg
hlt
in
jmp
mov
jb
pushf
jo
xor
shrl
add
pop
outsb
push
adc
int3
ja
jmp
push
cmp
sub
lods
pop
jmp
clc
dec
subb
stos
xchg
std
ss
mov
push
add
popf
dec
sub
xor
in
lods
dec
in
cli
or
arpl
data16
pop
sub
lcall
inc
and
mov
mov
dec
xchg
xchg
ds
sub
jo
pop
mov
call
dec
pop
mov
xchg
ja
mov
mov
fwait
dec
cs
push
add
mov
mov
sbb
adc
neg
lcall
movsb
ret
pushf
stos
mov
or
data16
pop
int3
dec
sti
jp
xchg
sbb
jbe
adc
test
popf
push
imul
add
mov
add
mov
stc
xchg
ret
sub
lods
rorb
scas
mov
daa
or
andb
mov
popf
stc
sbb
imul
pop
jno
cmp
fmull
imul
fmuls
shrb
scas
aam
jno
imul
mov
sti
cli
pop
push
cmc
rcll
mov
push
sti
fisubrl
movsl
mov
jbe
mov
imul
pusha
and
mov
pushw
and
je
rcll
mov
lea
movsb
or
leave
sub
push
ss
pop
enter
mov
pop
xorl
xlat
or
xchg
xchg
pop
sbb
inc
mov
xor
jb
outsb
fucomip
repz
or
sahf
mov
ret
mov
or
lods
into
xlat
testb
mov
in
jg
mov
push
sarl
cmpl
xor
and
mov
cmp
out
push
jge
nop
arpl
sbb
xlat
inc
jmp
pop
test
mov
scas
mov
enter
push
in
cwtl
push
shl
and
lea
or
push
je
test
xor
adc
mov
mov
cld
arpl
sub
fxam
pop
jo
sub
daa
mov
out
pop
push
jns
je
pop
lret
push
int
arpl
shll
pop
es
in
bound
mov
into
xlat
mov
mov
adc
inc
pusha
pop
outsb
mov
xor
mov
cmp
cmp
add
jb
cmpsb
mov
mov
pushf
inc
imul
dec
aam
sub
pop
mov
jmp
fprem
leave
lret
lock
sbb
insl
call
test
scas
pop
scas
and
pop
xor
pop
jo
adc
jp
dec
aam
add
push
clc
sub
adc
pop
hlt
jl
fimull
movsl
or
mov
push
aad
mov
enter
cli
and
je
pusha
add
aaa
sbb
xor
loope
adc
aaa
icebp
dec
mov
dec
ss
imul
cld
push
add
mov
or
jl
pop
stos
sahf
push
int3
clc
xchg
fstpt
jge
push
and
cmp
inc
adc
mov
sub
dec
add
aas
mov
add
xchg
test
fxch
ja
mov
idivl
in
mov
movsl
iret
push
push
pop
loope
js
nop
loop,pt
aam
aad
xchg
cmp
xchg
jnp
in
or
ljmp
cmp
imul
int
shrb
arpl
hlt
scas
push
aad
inc
and
imul
mov
sub
test
cmp
sbb
daa
sti
xor
jl
lock
rclb
or
cmp
out
xor
pmullw
mov
xchg
sbb
pop
les
pop
or
lods
into
cmpsw
add
out
and
inc
aad
lahf
sbb
mov
cmpsl
popf
mov
dec
sub
sbb
mov
cmp
imul
or
scas
test
fs
loop
leave
sbb
push
ds
pushf
fdivrs
mov
sbb
xchg
scas
imul
imul
mov
in
xor
jmp
or
cmc
lcall
xchg
adc
add
scas
mov
dec
adc
jns
loopne
xor
mov
sub
imul
leave
sbb
add
mov
push
daa
mov
fildl
pop
pop
mov
into
mov
jmp
cs
pop
hlt
cmp
loope
adc
inc
sahf
inc
mov
int3
mov
stc
out
inc
mov
inc
rcr
stos
dec
inc
or
mov
jmp
cmp
push
daa
arpl
imul
cli
stos
xchg
lock
aaa
out
mov
sbb
push
push
mov
cmp
lcall
push
mull
les
add
push
int
fcmovbe
popa
fistpl
popa
pop
in
jne
test
push
fimuls
aam
leave
sub
or
or
fcmovnb
mov
in
xchg
aaa
test
and
pop
mov
xchg
adc
gs
mov
cmp
adc
mov
mov
xchg
scas
inc
int
jne
cmp
test
push
ficomps
mov
shl
movsb
lea
dec
jmp
fmuls
roll
rcll
push
and
cld
out
add
sar
mov
cld
bnd
lea
insb
insl
repnz
add
inc
inc
xchg
loop
test
jp
ret
push
out
add
data16
cs
rcl
out
daa
sbb
or
mov
popa
sbb
pop
call
sbb
and
pop
ret
ja
sbb
mov
and
or
mov
xorb
or
add
mov
pop
pusha
xchg
add
cmp
sub
ss
mov
dec
or
xor
add
inc
out
and
mov
ds
fwait
pop
xor
aaa
cwtl
fs
dec
inc
inc
test
sarb
sti
add
es
adc
pop
mov
stos
push
pop
frstor
pop
and
dec
push
icebp
and
stos
les
mov
mov
sbb
cwtl
push
sub
imul
aaa
mov
test
adc
test
and
out
popa
out
sahf
jle
adc
add
call
inc
mov
push
add
cwtl
add
adc
outsl
lds
orl
lret
bound
mov
xor
insl
push
jnp
loopne
fadd
popf
jo
mov
movsl
jle
je
push
fsts
insl
xchg
outsb
mov
dec
jle
dec
add
loope
idiv
mov
in
cltd
out
add
cmpsb
adc
sti
mov
or
scas
sub
gs
adc
xlat
fidivrl
jne
jo
daa
pop
push
fisttps
sahf
jecxz
xor
mov
add
out
mov
fdivs
adc
mov
cmp
mov
inc
imul
adc
cs
icebp
sub
std
lds
mov
sbb
dec
test
mov
shlb
decb
add
push
xorl
mov
lret
jl
jb
jb
iret
mov
cmpsl
cs
xchg
sbb
jb
mov
mov
sub
xor
mov
cltd
mov
fcmovb
test
ja
test
cs
dec
mov
mov
fistpll
push
sti
push
out
push
and
inc
push
je
cmpsb
pusha
push
sbb
mov
mov
xorb
push
push
in
push
fldenv
ss
fwait
nop
rolb
gs
cli
push
xlat
mov
mov
ret
lds
lock
xor
push
fisttps
fiaddl
jl
cmc
push
jle
jmp
sbb
dec
jbe
lea
loopne
inc
sub
add
es
and
cs
and
out
inc
repz
and
adc
idivl
aad
jae
sub
push
xor
stos
and
in
dec
popf
mov
mov
mov
daa
jne
aad
lds
jo
cmpsl
inc
or
pop
les
or
lea
icebp
xchg
mov
adc
mov
mov
sbb
fucom
dec
lods
mov
mov
push
scas
jbe
or
mov
cwtl
jne
sgdtl
stc
outsb
pop
xor
cmp
sbb
sbb
fwait
dec
mov
mov
popf
add
nop
xchg
push
or
sub
in
mov
adc
mov
leave
dec
mov
notrack
out
in
cmc
sar
outsb
xor
dec
lret
mov
inc
sbb
ret
mov
sbb
pop
pop
mov
call
push
icebp
mov
js
xor
push
mov
xchg
and
pop
push
jnp
out
shll
mov
bound
cmp
addb
push
adc
lret
jne
popa
fisubrs
xchg
ljmp
cmp
movl
shrb
xchg
xchg
xor
pushf
sub
js
dec
and
in
orb
movsl
arpl
xlat
loope
push
out
jmp
jo
in
xchg
push
enter
pop
cmpsb
mov
pop
mov
imul
ja
and
pop
mov
ficompl
call
jae
cli
jmp
xor
sbb
adc
outsl
in
inc
cmp
sbb
jge
sub
mov
movl
xor
pop
inc
adc
pop
add
jecxz
int
dec
dec
fisttps
mov
icebp
push
or
pushf
movsl
es
inc
or
jns
lods
sbb
mov
jg
inc
sahf
jecxz
pop
out
xor
shlb
rcr
aam
push
dec
mov
fstl
nop
sbb
cmp
mov
loope
pushf
mov
in
inc
das
xchg
in
in
movsl
xor
fdivrs
nop
leave
sub
mov
lock
test
lds
shlb
cwtl
mov
icebp
cmpsl
xor
shll
add
cmp
push
scas
cmp
in
test
in
icebp
icebp
test
aas
adc
jl
inc
loope
dec
inc
shrb
test
into
sbb
outsb
mov
pop
mov
mov
lret
test
xlat
test
jb
mov
inc
and
jg
ljmp
adc
dec
test
scas
inc
popf
movsb
inc
mov
icebp
adc
ljmp
sbb
lcall
rcrl
cmp
adc
and
and
mov
push
ss
cmp
sub
mov
rorl
cmpsb
mov
add
out
and
push
jns
das
adc
ret
cmp
mov
lods
cli
jno
sbb
inc
loop
out
pop
or
or
lods
mov
rclb
or
imul
jp
negb
jo
mov
push
aas
imul
jg
fistl
clc
cli
es
jl
jns
and
and
xor
out
std
shrb
loopne
adc
and
fldlg2
xchg
push
imul
inc
jno
imul
or
cwtl
push
repnz
pop
pop
push
aaa
sub
or
xchg
mov
out
mov
test
scas
insl
lret
mov
dec
and
mov
fists
rcll
das
ja
mov
lahf
out
adc
mov
insb
scas
pop
mul
addr16
das
inc
add
dec
mov
fbstp
aad
pop
dec
mov
imul
sarb
jle
and
repnz
in
outsl
mov
xor
xor
repz
jae
test
xchg
ficompl
inc
or
out
call
xor
cmp
cmp
xchg
mov
inc
or
push
sub
pop
jg
in
fdivrl
sbb
jae
clc
lret
sbb
mov
jmp
mov
cmp
addr16
inc
into
repz
lock
mov
mov
inc
jb
jmp
dec
iret
mov
mov
ret
scas
imul
xor
mov
mov
sbb
mov
mulps
lcall
and
lock
lea
lret
pusha
lods
pop
std
sub
cld
lret
add
dec
mov
out
sti
test
mov
xlat
jnp
xchg
fsubrs
mov
lahf
xor
fld
in
test
mov
ss
js
testb
mov
psllq
xchg
fcmovnbe
push
xor
inc
jp
cmp
adc
bound
loop
imul
push
xor
ss
pop
inc
fmulp
or
fidivrs
lds
lods
sub
gs
or
sti
and
pop
xchg
loop
jnp
pop
cmp
or
dec
pop
mov
inc
push
cmp
enter
je
out
mov
test
lahf
xor
mov
cld
jp
mov
lods
int
jnp
mov
jb
pushf
mov
add
adc
jno
cmp
imul
icebp
dec
mov
loop
mov
jge
test
mov
add
call
cmp
fldenv
ret
in
mov
pop
orb
mov
push
push
shlb
in
cmp
xor
stos
mov
dec
mov
je
mov
pop
loopne
shr
lret
adc
in
adc
or
dec
dec
and
lock
cs
dec
sbbb
int3
icebp
scas
adc
stc
xor
add
xchg
or
adc
pop
lcall
nop
out
dec
push
xor
xor
cmp
jb
pop
lcall
push
inc
mov
sbbl
xor
test
xor
inc
adc
push
rclb
out
cwtl
mov
inc
cltd
xlat
add
enter
stos
sub
jge
sub
lds
xchg
push
adc
sbb
dec
push
pop
call
ja,pt
xor
rol
push
jae
adc
dec
mov
nop
clc
lcall
lahf
cmp
mov
or
mov
call
daa
aad
ficomps
adc
mov
adc
out
xchg
mov
test
xor
push
aam
sub
into
xchg
jle
push
pop
xchg
pop
mov
push
outsl
mov
mov
pop
out
in
pop
test
pop
jge
js
or
in
jne
xorb
cmc
fsubrs
cmp
mov
xor
xchg
mov
xchg
xorb
rol
cmpsl
imul
or
aam
push
fwait
lods
insl
mov
test
xor
jae
sub
pop
clc
mov
dec
add
es
jp
daa
or
mov
xlat
xchg
and
lods
adc
xchg
int
jmp
sub
mov
add
jnp
push
inc
pop
add
es
mov
inc
xor
mov
out
inc
shl
push
mov
lahf
movl
fiaddl
push
mov
or
sahf
push
jl
mov
cmovno
push
mov
xor
xor
xor
adcb
sbb
cld
or
cmp
loope
xor
std
scas
divb
in
or
aam
jno
jo
mov
xor
daa
outsl
inc
adc
into
sbb
sub
das
xchg
cld
outsb
repnz
cmp
clc
fabs
bsf
mov
inc
loopne
pop
push
push
ss
jo
adc
mov
outsl
frstor
mov
movsb
sub
mov
mov
dec
jmp
sub
andl
out
mov
popa
fdiv
repnz
push
or
pop
roll
and
cmp
push
mov
shlb
ret
jae,pt
and
outsb
jne
sbb
pop
sbb
sahf
cld
repnz
loopne
add
push
test
lds
scas
xchg
sti
mov
mov
mov
xchg
mov
xor
add
add
je
ss
sub
mov
out
pop
cmp
leave
jle
lods
cld
or
in
add
popa
jns
pop
xchg
cmp
test
fstpl
xchg
rdtsc
sub
aas
or
jg
sbb
inc
and
imul
jmp
loope
test
stos
dec
lock
xor
push
jno
stos
xorb
cld
pop
sub
push
mov
das
add
pop
aad
ss
pop
aam
pop
add
shlb
xchg
xchg
sti
daa
jo
jns
push
leave
inc
je
dec
mov
xchg
xchg
mov
and
cmpl
mov
subl
dec
dec
xchg
pop
mov
mov
xchg
cmp
xchg
stos
cmp
dec
mov
into
push
pop
adc
addb
addb
ret
subl
push
es
add
test
jae
add
out
lods
leave
bound
or
push
iret
and
jno
mov
repz
fadds
pusha
aas
adc
xor
lret
rcrl
or
sbb
xchg
sti
jmp
enter
loope
jbe
movsb
pop
push
mov
cmp
push
scas
clc
jl
ss
in
jle
adc
js
mov
jle
les
adc
ret
out
jmp
fists
loopne
inc
push
int3
jae
inc
push
mov
xor
sub
mov
lret
repnz
xor
sahf
xor
or
add
into
sub
push
gs
clc
jnp
stc
xor
pop
xor
sbb
mov
orb
movsb
push
mov
in
pop
mov
testb
fdivr
mov
sbb
loop
mov
imul
jb
int
pop
shll
cwtl
jnp
xor
xlat
cmpsl
xchg
jnp
xor
and
lahf
in
je
arpl
inc
jns
jg
call
dec
dec
in
adc
cmpsl
outsb
push
outsb
lods
out
push
daa
fnstcw
adc
xchg
insl
or
and
loop
test
jbe
movsb
push
out
sahf
push
mov
sub
movsl
xchg
stos
pop
sub
dec
int3
push
lods
sti
adc
push
inc
dec
jae
xor
inc
jno
outsb
push
mov
pop
sbb
push
sahf
call
pusha
shll
rcrl
mov
fs
shl
aad
mov
bnd
jmp
or
pop
call
cli
xchg
fidivrl
sbb
int3
and
sub
stc
jno
nop
outsl
stc
push
jnp
cli
popl
popf
jae
cli
test
fisubs
mov
test
push
push
sub
xchg
dec
jnp
stos
sbb
popf
fs
sub
sbb
inc
xchg
xor
arpl
adc
mov
popf
jge
iret
aad
ret
pop
ds
and
mov
push
mov
inc
add
jle
imull
imul
sbb
daa
sbb
xchg
jle
push
pusha
icebp
push
lcall
imul
mov
fidivl
fisubrs
xor
shlb
jnp
das
cli
in
mov
sbb
sbb
das
jp
and
mov
int3
sbb
mov
xchg
iret
pop
and
shlb
add
jnp
stos
fwait
bound
sbb
mov
pcmpeqw
push
and
mov
out
mov
and
scas
mov
xchg
call
add
data16
repnz
lods
ret
cld
out
adc
clc
jecxz
addb
es
je
ss
adc
cmp
mov
sti
or
out
insl
ds
xchg
push
setbe
fldl
leave
dec
mov
jno
out
fs
xor
stos
mov
xchg
les
lds
shr
dec
test
test
adc
test
mov
insb
pop
pushf
push
xchg
imul
dec
mov
and
into
gs
inc
ljmp
enter
dec
out
scas
idivb
fistpll
cmp
test
adc
dec
je
fistpll
or
push
xchg
popf
adc
sub
insl
stc
cmp
push
lahf
sub
and
fbld
xorb
xchg
in
add
jae
dec
sti
ret
inc
pop
xchg
mov
stos
or
jo
int
repnz
lahf
cs
inc
inc
jno
aad
je
into
outsb
dec
mov
imul
call
mov
fwait
ss
add
data16
rcr
decl
add
and
and
jnp
lret
rorl
ds
fwait
ret
pop
es
jne
sbb
lds
add
and
jae
jno
xchg
in
out
sbb
je
add
push
inc
mov
add
dec
inc
sti
pop
aad
nop
mov
jp
ljmp
push
push
fisttpll
pop
lret
xchg
xor
cmc
add
mov
inc
jne
add
testl
iret
cmp
shr
scas
or
sahf
lret
pop
mov
pop
cmp
fmull
addr16
clc
xorb
loopne
inc
lret
dec
lods
sub
daa
mov
stos
fnstenv
push
cmc
js
dec
and
mov
sub
inc
cmp
cmp
lds
adc
mov
push
cwtl
nop
pop
xchg
cwtl
popf
lds
mov
pop
in
cld
repz
insb
xchg
outsl
and
jecxz
jae
aad
xchg
aam
out
push
push
cmp
cmc
stc
adc
shll
push
xchg
and
jg
add
mov
fnstcw
mov
pop
jp
arpl
pop
inc
pop
outsb
data16
lahf
mov
xor
rol
mov
adc
xchg
and
xchg
cs
hlt
push
test
ret
popa
fadd
cmc
xlat
mov
pop
ss
mov
fs
leave
dec
dec
mov
inc
mov
inc
test
movsb
add
inc
testl
add
inc
scas
push
sbb
je
fs
inc
scas
imul
pop
pop
pop
imul
xchg
add
lret
push
jle
cli
jle
imul
fisttpl
mov
sbb
pusha
jp
jnp
mov
std
mov
sbb
aad
add
call
dec
aaa
cmp
jno
call
sarl
dec
sbb
addl
movsl
mov
xor
jle
outsb
sub
lret
out
mov
sbb
scas
sbb
iret
pop
cltd
std
xchg
jg
mov
ret
scas
outsb
lea
xchg
push
in
jo
fcmovnb
dec
ss
inc
sbb
insb
aam
or
mov
js
mov
push
xor
sub
add
rcrl
xor
or
cmp
xor
mulb
in
hlt
adc
xor
in
mov
enter
call
mov
popf
cmp
sti
adc
xchg
test
jbe
enter
jle
aam
or
cmc
inc
add
lods
daa
frstor
rcrl
call
xlat
scas
popa
scas
jns
mov
adc
cmpsb
mov
cmp
adc
rorb
mov
sub
sbb
popa
push
and
mov
bound
rcr
xchg
lret
imul
jne
mov
push
shlb
cmp
imul
mov
lods
push
sub
orb
syscall
lds
inc
cmp
sub
std
je
subl
and
mov
fs
and
mov
push
adc
test
push
cmp
cmp
mov
mov
mov
addb
inc
movsb
push
mov
movzwl
and
jbe
ds
cmc
adc
sub
das
daa
mov
imul
jecxz
rdmsr
cmp
fcmovb
fsubr
pop
outsb
notb
sbb
out
lret
xchg
jb
inc
jle
mov
fisubrs
mov
mov
cmpsb
jno
aad
stos
cmc
adc
cmpsl
int
add
sbb
nop
dec
pop
int3
popf
fcmovu
gs
mov
cld
fcmovnu
dec
das
das
sbb
roll
push
scas
pushl
shlb
push
xchg
push
pop
xor
or
xlat
call
and
ret
pop
fisttps
jecxz
mov
nop
xor
sti
add
cmp
lods
dec
das
cmc
pusha
shl
pop
or
sbb
inc
and
inc
ret
test
fnsave
cmovp
and
aad
lret
leave
or
add
iret
jne
lret
fistl
lret
or
es
stos
arpl
hlt
cmp
dec
ret
int
cmpsb
push
jp
adc
sahf
mov
shll
adc
push
jg
movsl
xchg
jmp
daa
dec
inc
push
sbb
in
jg
ja
xchg
sub
jge
scas
mov
push
xchg
imul
sarb
pop
mov
fisttps
and
cmp
adc
loope,pn
gs
or
cmpsb
in
pop
sub
add
or
addr16
aad
pop
mov
jmp
ds
into
or
push
test
cld
fdivs
stos
flds
xor
test
sub
xor
aad
mov
mov
popf
repz
out
add
arpl
std
cmc
push
sub
mov
jb,pn
daa
addb
aaa
lahf
pop
jmp
enter
mov
adc
dec
inc
enter
xchg
das
jno
cld
push
ret
outsb
mov
sbb
test
lret
jp
adc
lahf
lret
and
in
sbb
push
pop
ja
xorl
ds
in
stc
stos
pusha
lds
mov
js
cmpsl
cmp
stc
aad
lds
pop
sub
adc
jg
mov
cltd
test
adc
or
in
xlat
nop
jne
daa
pop
mov
pop
sbb
jge
popf
mov
dec
shlb
fdivs
lds
dec
sub
outsl
aaa
mov
jle
pop
lea
fnstcw
in
bound
popa
sbb
push
cmpb
pop
or
call
jnp
and
cmp
sbb
das
adc
cmpb
dec
and
loopne
sbb
cmp
sub
mov
testl
clc
mov
adc
cltd
pop
dec
cmpsl
insl
int
mov
nop
and
in
lea
inc
xor
sub
pop
js
sub
ljmp
pop
int3
insl
repz
cld
aaa
inc
test
xchg
cmp
rcr
imul
push
mov
into
dec
mov
lock
inc
scas
jecxz
sbb
cltd
fsubs
mov
fcomp
test
pop
inc
xchg
sub
and
jb
lret
push
mov
sub
arpl
aas
nop
leave
push
jae
stos
andl
pop
inc
or
mov
inc
loope
lods
pop
leave
mov
int3
scas
ret
pop
stos
gs
dec
xchg
mov
dec
inc
xor
scas
sub
push
pop
mov
addl
cmpsb
addl
xchg
js
out
sub
jnp
cmpsb
daa
int3
xchg
xchg
adcl
dec
je,pt
fiadds
ret
cli
push
mov
mov
adc
fstl
sbb
jge
xchg
inc
xchg
or
xchg
xchg
jl
adc
dec
mov
shll
lods
js
sbb
xor
mov
adc
sub
mov
and
xchg
pop
mov
pop
and
jl
sbb
aam
sahf
pop
test
in
xchg
aaa
or
jb
sbb
nop
call
add
out
push
les
andl
movsb
scas
mov
xor
jg
les
dec
push
divb
loop
mov
rsqrtps
stos
aas
outsb
push
inc
sbb
add
add
sbb
shr
sub
fisttpll
adc
jle
push
scas
xlat
push
mov
scas
jle
jo
adc
mov
adc
out
adc
push
adc
push
popf
out
dec
rorb
test
sbb
inc
adc
adc
or
xor
incl
arpl
fmull
loopne
andb
test
and
jo
adc
and
add
push
sub
aas
push
add
lahf
mov
js
push
or
and
sbb
bound
pop
sub
call
or
dec
sbb
ficoms
dec
out
and
or
jbe
das
push
or
fdivrp
fisttpll
mov
fldcw
push
cmp
push
inc
adc
out
mov
scas
jge
lock
rcrb
iret
pop
or
push
ss
int3
inc
push
push
pop
cmp
xor
pop
sbb
sbb
fstl
inc
sbb
add
jp
cli
jne
xor
lods
push
add
nop
inc
in
push
push
sub
pop
add
xchg
add
test
lret
or
adc
sub
sbb
orl
arpl
mov
push
or
push
or
int3
xchg
in
xchg
adc
jp
scas
adc
lret
mov
xor
jmp
cmpsb
push
mov
dec
lods
imul
pop
outsb
loope
in
mov
fcoms
push
xchg
push
test
sbb
adc
sahf
test
push
std
pop
jg
cmpsl
imul
push
movsb
shr
push
mov
xchg
mov
pop
call
data16
mov
inc
jno
test
fistpl
fidivrs
mov
add
fwait
push
push
xchg
hlt
movl
in
mov
mov
ss
xor
pusha
fcompp
and
push
jb
dec
scas
sti
icebp
and
push
pop
jmp
stc
adc
loopne
jmp
sti
popf
mov
mov
push
dec
dec
fisubrs
sub
out
test
adc
xchg
mov
cli
ret
call
mulb
pop
xchg
out
cmp
push
out
iret
loope
insb
in
jbe
mov
rol
in
jbe
vprotb
jp
jmp
fiaddl
and
mov
or
cmc
add
xor
outsb
insb
faddl
jbe
mov
sbb
dec
stc
loop
pop
sbb
out
imul
pop
std
jbe
and
shll
out
dec
lods
mov
xchg
les
add
sti
fstp
and
dec
inc
sbbb
pop
mov
clc
jae
test
sarl
popa
push
clc
push
or
push
mov
test
adc
add
addb
test
gs
xchg
mov
lods
cmp
mulb
fwait
xor
dec
xor
xchg
push
arpl
mov
repz
push
and
xchg
and
and
stc
xchg
lds
xor
ljmp
stos
add
insl
mov
add
sbb
dec
pop
xchg
push
pop
add
cmp
out
aad
xlat
mov
sub
popl
xlat
inc
in
jo
jno
sti
data16
push
jecxz
mov
mov
dec
loop
roll
imul
in
shl
iret
lret
jb
mov
xchg
shrb
shll
sar
imul
sti
pop
jb
ror
lods
lods
loopne
cmp
mov
clc
sub
clc
pop
psubsb
inc
xlat
aas
mov
mov
in
enter
in
aas
inc
ds
scas
out
repnz
mov
xchg
push
out
loope,pt
adc
cmp
movsb
imul
mov
insl
je
pusha
enter
mov
mov
jnp
addr16
xor
cmp
es
jl
lock
stos
cmp
mov
enter
add
cmp
add
mov
mov
sub
mov
ficoml
xchg
push
pop
imul
shrl
jecxz
insl
movsl
dec
sbb
bound
lret
push
loop
xchg
sbb
cmpsl
js
imull
dec
jp
add
lock
mov
or
mov
xchg
mov
test
addb
adc
addl
jb
js
inc
mov
pop
add
repz
xchg
sbb
xor
jge
cltd
mov
fcomp
cmc
or
mov
pop
sub
stc
jo
sbbl
addr16
scas
sub
fistl
iret
js
mov
call
xchg
dec
cmc
lret
jo
insl
decb
jns
sti
call
jl
mov
les
jae
xchg
cmc
add
rolb
push
mov
mov
cltd
mov
push
mov
mov
add
adc
dec
shlb
xlat
push
add
lahf
das
out
push
mov
test
xchg
mov
negb
movsl
hlt
or
std
pushf
push
mov
xor
or
das
notl
push
mov
clc
jnp
or
cmp
pop
dec
in
arpl
pop
loopne
test
push
vpsravd
mov
test
icebp
pop
xchg
jl
out
adc
sbb
lods
lods
xchg
dec
pop
add
cwtl
repz
or
lods
pop
push
push
pop
xchg
or
mov
aas
out
push
cli
jg
flds
lcall
dec
repnz
pop
fisttpl
ss
rcrl
js
jno
mov
cmp
jmp
fwait
test
pop
sarb
test
cltd
pop
ret
sub
fwait
js
or
and
jecxz
cmpsb
lds
fidivrs
rcl
adc
dec
xor
outsb
xchg
in
js
mov
gs
inc
inc
mov
or
jmp
lahf
aaa
lahf
pop
pusha
je
lock
or
adc
bound
inc
lods
ds
fldenv
fs
fbld
mov
cmpl
enter
inc
iret
jae
jo
sbb
sbb
das
popf
sbb
inc
enter
scas
pop
mov
sub
inc
ljmp
loop
ret
aad
testl
or
sub
lcall
rclb
scas
mov
loopne
jmp
stos
clc
push
sbb
sarl
clc
push
test
xor
sti
push
int
je
lcall
cs
pop
pop
jnp
xlat
in
cmp
pop
mov
adc
jmp
test
mov
loopne
bound
in
and
dec
mov
jp
ss
dec
jmp
repnz
lds
iret
or
mov
out
xchg
cmpl
imul
mov
imul
inc
sub
mov
push
ljmp
fmuls
andb
hlt
aam
test
jo
ds
push
icebp
pcmpgtw
popf
add
inc
mov
into
xchg
dec
pop
and
sub
push
loope
jp
loop
mov
jge
mov
dec
repz
aad
xchg
xlat
loop
dec
icebp
push
add
daa
popa
cmp
inc
shll
dec
and
hlt
sbb
pop
nop
pop
mov
adc
xor
xor
js
inc
add
push
lea
inc
std
je
scas
xor
xchg
jo
jo
sahf
mov
les
lods
sahf
mov
fistpll
pop
push
jp
push
mov
ret
enter
sub
mov
popf
into
js
xchg
aaa
sbb
loope
bswap
int3
call
cs
sub
push
popa
xlat
inc
popf
ja
scas
mov
cmp
testb
lret
and
js
jecxz
cmp
add
lock
jg
ja
and
test
mov
aad
push
cmpsl
mov
mov
jne
lock
std
or
shl
push
push
jge
sbb
jg
pop
push
pop
xor
mov
fwait
cmp
sbb
xor
cwtl
jecxz
sbb
inc
iret
add
test
loope
test
pop
enter
add
and
add
dec
jno
cmp
cli
dec
mov
push
int
push
test
pop
ja
and
icebp
pop
out
cmp
andb
stos
xor
lahf
pop
push
pop
pusha
or
adc
mov
jecxz
mov
pusha
loopne
pushf
jo
test
lret
arpl
sbb
test
and
push
push
sti
pop
sub
std
and
fidivrs
lds
rorb
out
fsubs
inc
call
and
jnp
hlt
jns
pop
push
cbtw
sbb
scas
loopne
add
mov
lods
jl
lret
push
cmp
ret
pushf
rcr
cli
dec
lcall
sub
xchg
arpl
in
pop
sarb
rorb
js
mov
imul
fwait
jno
jge
dec
add
imul
push
mov
jae
or
xchg
shlb
pop
pop
loopne
jge
popa
flds
push
fcompl
sbb
in
jbe
cmpsb
push
stos
sub
mov
adc
push
jecxz
sub
jne
dec
cmp
mov
outsl
jmp
jl
inc
mov
cmc
jg
cmpsb
jp
inc
jp
icebp
je
fstps
jle
arpl
decl
fstpl
inc
mov
clc
enter
sub
call
mov
andb
jg
stos
jnp
leave
aad
lret
add
dec
out
cmp
sub
inc
cmp
insb
dec
repnz
push
js
add
mov
xchg
scas
and
outsb
mov
mov
mov
adc
push
sub
mov
cmpsb
add
jns
jno
lahf
mov
push
insl
mov
or
jo
and
insb
insb
inc
add
lds
ficoms
push
cli
sarb
dec
adc
in
hlt
fcmovu
nop
mov
movsb
pop
jp
fwait
pop
and
fcoms
pop
or
fdivs
aad
bound
pusha
xor
cwtl
add
jl
mov
shrb
rcrb
mov
mov
fsts
inc
and
dec
scas
sbb
xchg
pop
call
mov
dec
or
lods
fimuls
scas
imul
test
adc
bound
test
fxch
jl
bound
push
sbb
ljmp
aaa
lret
stos
push
inc
aas
into
inc
jmp
stc
lods
xor
in
pop
jmp
fs
jne
xor
mov
sub
add
sub
jmp
shll
xchg
pop
cs
jg
add
adc
pop
addr16
xchg
int3
jno
push
xor
icebp
sub
push
call
repnz
mov
push
outsb
jl
mov
scas
aam
pop
addr16
sbb
fcomip
inc
xor
xchg
add
gs
mov
pop
add
test
repz
outsb
mov
and
cmp
pop
jle
fldt
lcall
inc
xchg
mov
orb
adc
outsb
test
or
loope
dec
adc
stc
faddl
xor
xchg
mov
sbb
pop
sarb
cmc
jle
bound
mov
or
xchg
jecxz
cmp
jg
inc
sub
into
movsb
cmp
loop
aam
or
push
arpl
mov
out
mov
mov
aas
or
push
fs
pop
push
lcall
mov
jns
cmpb
or
lret
into
pop
divl
aad
cmp
fildll
xor
sub
clc
mov
shll
or
add
out
loope
mov
lds
and
pop
pushf
sub
mov
or
lret
xchg
stos
mov
fistps
lcall
mov
add
sbb
ret
addr16
mov
scas
popa
jmp
push
in
out
xor
loope
loopne
dec
mov
dec
xlat
or
jl
jmp
mov
xor
sbb
adc
out
jl
adc
add
call
idivb
sbbl
data16
or
loopne
ds
xor
fidivs
pop
fbld
mov
inc
xchg
mov
jne
aam
or
or
loopne
inc
sub
es
inc
sarb
xchg
jns
lret
filds
fs
mov
xor
cltd
outsl
adc
je
sub
jmp
popa
cmp
jns
cmp
jg
aaa
mov
popf
mov
push
sub
pusha
repz
jno
cmp
outsl
stos
mov
fadds
cwtl
mov
jp
cmpsl
data16
mov
cwtl
roll
mull
and
sbb
mov
xchg
mov
roll
lret
lods
and
or
inc
mov
movsl
cwtl
jnp
mov
adc
jae
imul
es
daa
das
mov
jmp
mov
add
aad
mov
movsl
jg
dec
sub
mov
je
mov
push
nop
lret
cmc
in
cwtl
cltd
aad
and
call
pop
mov
stos
xchg
inc
mov
dec
fsubs
aam
test
xchg
sbb
sub
out
add
test
and
mov
mov
push
dec
inc
shlb
push
enter
xor
loop
out
dec
adc
xor
js
in
mov
mov
or
fstps
insb
jl
cmpl
bound
cmp
pop
pop
lods
mov
adc
lahf
leave
dec
pop
mov
jo
mov
arpl
and
adc
es
out
sub
mov
mov
jo
dec
mov
add
xchg
or
adc
bound
jge
jmp
xchg
bound
xor
sub
cmp
aam
pop
cmp
dec
mov
mov
jb
xchg
add
or
mov
pop
addr16
es
cmc
scas
jmp
cmp
movsb
mov
push
lret
adc
dec
nop
clc
test
negl
out
iret
cmp
ret
mov
mov
inc
adc
jp
clc
in
jge
rcll
xchg
insl
add
repz
les
xchg
sub
wrmsr
cltd
cmp
scas
xor
aaa
cld
pop
repnz
clc
or
or
push
or
fistl
xchg
sub
stos
test
xchg
cmp
add
cmpsb
pop
sahf
cmpsb
imul
xchg
sbb
aas
xlat
in
lea
jle
jb
shlb
mov
dec
mov
pop
push
mov
or
or
jmp
int3
jl
in
les
and
out
dec
outsb
pop
loopne
cmp
mov
in
in
mov
sbb
in
cld
push
xor
imul
sub
into
inc
movsb
sub
lret
lret
loop
bound
sbb
jecxz
sti
dec
cmp
mov
lock
clc
pushl
ljmp
popf
fcoms
jle
sbb
jecxz
fistpl
std
int3
movsl
loop
pop
mov
loope
cld
jmp
mov
and
sbb
mov
push
repz
out
cmp
xor
outsl
add
inc
daa
pop
test
fsubr
pop
cmovno
lret
or
jge
push
pop
sub
pop
mov
test
test
xchg
jnp
mov
xchg
jge
push
nop
insl
loop
dec
cli
movb
add
adc
orb
movsl
jne
pop
jle
movsb
xorb
fwait
dec
inc
xchg
ret
adc
inc
outsl
fisubrs
or
mov
popl
fidivrs
daa
jle
mov
fidivs
push
cmp
xlat
roll
adc
and
fptan
movsb
add
hlt
mov
scas
or
mov
add
lret
sub
mov
sub
je
jmp
decl
icebp
scas
xor
xchg
dec
add
jl
push
repz
adc
jp
stos
cs
push
jecxz
stos
pop
xchg
lea
inc
xor
jno
or
lods
push
sbb
cmp
inc
push
test
loope
mov
les
mov
xor
lock
inc
adc
stos
jb
es
cwtl
lods
mov
lds
adc
stc
mov
or
pop
ror
xchg
ljmp
dec
flds
fsubrl
mov
and
xor
xlat
xchg
outsb
inc
sahf
outsl
and
xchg
adcb
in
cmp
lods
dec
fdivl
bound
jne
cmp
add
movsl
mov
mov
fadds
cmc
dec
rolb
cmp
push
sub
sbb
sbb
and
pop
mov
or
xchg
fcoml
iret
out
mov
inc
mov
dec
dec
js
dec
cwtl
jge
std
call
into
fistps
mov
icebp
and
add
adc
sub
hlt
loop
mov
cmpsl
sbb
pop
sub
dec
jns
cmpsl
push
inc
sarl
rolb
rcll
mov
cmp
or
cmp
into
and
lods
jbe
pushf
cmp
loope
sub
test
ljmp
sbb
icebp
pop
jmp
cmc
pop
inc
push
clc
xchg
lods
mov
leave
fstl
int
lds
mov
mov
adc
or
sub
repnz
cmp
rorb
lret
adc
dec
out
cmp
subb
xor
sub
mov
aas
jne
mov
rcrb
mov
mov
cmc
filds
data16
xchg
into
sbb
xor
mov
jno
test
pop
mov
push
lock
pop
nop
rcll
cltd
mov
adc
pop
or
or
dec
fmul
fistps
in
loop
inc
ja
int
sub
dec
divl
bound
add
push
pop
sub
cltd
pop
pop
int3
sbb
sub
cmp
cmp
enter
xlat
xor
adc
out
add
lea
fstpt
cmp
stos
jo
dec
rorb
es
dec
mov
fwait
adc
movsb
std
mov
mov
test
fidivrs
or
add
xor
sub
sub
test
lea
das
dec
hlt
cmpsw
push
and
clc
aam
pop
andb
push
push
push
popa
and
sbb
inc
int
xor
dec
sub
stos
js
lods
mov
mov
xchg
icebp
out
mov
enter
cmp
inc
inc
gs
movb
pushf
cmc
mov
jb
mov
test
fnsave
lret
stos
mov
aaa
push
mov
inc
jnp
pop
lcall
lret
or
cwtl
test
mov
bound
cmpsl
js
add
jo
jg
sbb
jns
jno
pop
outsb
outsb
push
xor
pop
imul
shll
cmpl
lea
mov
stc
aad
pop
daa
jle
xchg
sub
dec
jnp
bound
sub
jo
mov
ljmp
sub
ret
and
or
push
enter
cs
sbb
popf
outsl
pop
adc
dec
or
out
xchg
aaa
js
fildll
sub
mov
popa
loop
pop
pop
mov
stc
int
lds
adc
mov
push
int3
cmpsl
iret
push
jmp
sbb
xor
mov
outsb
les
mov
movl
push
mov
insb
out
mov
fldcw
mov
pop
mov
xchg
sub
lret
sub
and
ljmp
pop
xorl
adc
test
cmp
cli
push
mov
int
or
sti
divl
mov
adc
mov
out
jb
pop
clc
inc
xlat
mov
outsb
lods
test
stc
xor
adc
gs
into
jle
and
sahf
push
xchg
inc
mov
add
lret
lret
movsl
mov
out
out
push
jmp
dec
jo
je
dec
cltd
ljmp
mov
jno
imulb
shrb
and
dec
add
pop
mov
aam
rcrb
mov
into
cmp
inc
cmp
inc
push
mov
push
cmc
imul
xor
push
sub
and
jbe,pn
sbb
js
pop
add
imul
subl
adc
xor
mov
sbb
ds
cltd
mov
lcall
mov
inc
sti
movl
xchg
mov
or
jbe
cmp
popa
cmpsl
mov
imul
into
mov
int3
push
dec
adc
push
push
jae
mov
testb
xor
test
cli
imul
loopne
add
sbb
outsb
ret
loopne
pop
shl
pop
lods
sbb
pop
push
pop
ss
xchg
mov
arpl
aas
jmp
and
cmp
lahf
fstpt
cmp
movb
xor
fstpl
mov
sub
lcall
adc
into
pop
mov
xchg
mov
imul
xchg
mov
jg
das
clc
in
mov
je
imulb
in
mov
xchg
test
inc
je
sub
mov
mov
xchg
lret
mov
xchg
imul
frstor
int3
enter
sbb
and
test
dec
push
lret
hlt
lds
pop
push
mov
shrb
lds
call
inc
sub
daa
shl
push
or
and
stos
cs
and
mov
jle
pop
mov
jmp
add
lret
inc
scas
xor
movsl
xchg
cmp
xchg
sti
fs
sub
cmp
jp
movsl
jne
or
pushf
jnp
inc
call
stos
pop
xchg
in
ret
fisubrs
js
add
push
xchg
repz
das
lods
sub
jo
pop
lock
mov
xchg
dec
push
mov
mov
ja
inc
mov
jmp
jmp
dec
in
into
cli
ds
cmp
pop
dec
push
leave
jns
outsl
mov
dec
fs
repz
cwtl
out
test
cmc
sbb
xchg
pop
jecxz
pop
roll
sub
or
test
stc
lret
test
out
pop
into
leave
shll
xchg
movsb
and
cmp
add
scas
js
rol
fiaddl
jle
xchg
int3
loope
jbe
lods
sti
dec
mov
dec
and
xchg
mov
pop
xor
lea
es
pushf
xor
cld
hlt
ror
ja
sbb
mov
mov
xor
pop
mov
clc
pusha
int
ss
push
mov
mov
jg
push
mov
std
in
rcl
push
sub
xchg
cmp
mov
je
push
jns
test
scas
jne
or
xlat
and
data16
loopne
popf
shl
or
shll
shll
es
sbb
in
incl
int3
lea
aas
dec
out
iret
out
fistl
push
add
sub
nop
add
xor
and
shlb
loope
jecxz
sbb
xor
sahf
test
shll
push
cmp
xor
inc
inc
push
add
int
fs
adc
test
cmp
mov
push
mov
dec
pop
pop
pop
cltd
sbb
iret
adc
je
pop
fs
push
xchg
jne
mov
and
add
or
dec
mov
xor
cmc
sub
fstpl
incl
or
fs
call
mov
jbe
jo
dec
lods
mov
dec
sub
add
into
fldl
add
mov
xor
adc
mov
inc
mov
lock
insb
std
xchg
jnp
sub
movsl
sub
rcll
popa
pop
js
push
test
xor
or
push
cmp
xlat
cmp
cmp
into
movsb
dec
data16
pop
cwtl
mov
dec
fsubs
shrl
ljmp
jecxz
repnz
push
pop
lret
fnstsw
out
xor
js
idivl
stos
mov
xchg
les
mov
adc
aad
jno
or
push
jg
pop
xchg
mov
sbb
add
or
out
inc
mov
aam
test
rorb
add
mov
xor
fisubrs
cmpsb
adc
push
sub
pop
lea
sarb
mov
sub
enter
mov
ds
addb
es
dec
stc
clc
xor
add
std
or
add
cli
inc
loopne
les
push
xor
movsl
inc
inc
mov
sbb
sub
lea
mov
mov
pop
repnz
mov
iret
rol
jbe
cmp
inc
mov
or
int
rcrl
xchg
cmp
cli
jnp
mov
push
push
pop
stos
jecxz
sbb
xchg
jp,pn
cltd
inc
or
add
lcall
adc
inc
mov
mov
xchg
stos
xlat
mov
test
rcrl
test
add
push
das
pop
hlt
loopne
lcall
jbe
xor
and
sub
mov
pop
pop
ljmp
popf
imul
lds
jmp
cmc
iret
cmpsl
jp
sti
repz
lock
scas
cmp
lds
nop
lods
loope
sub
cmp
inc
dec
orb
or
inc
fwait
jnp
loop
ficoml
cltd
jmp
push
ss
xchg
setbe
mov
sti
xchg
stc
test
jns
fwait
mov
xor
mov
jle
ja
xlat
push
shlb
sub
push
lcall
mov
orl
int
sub
cmpsb
xor
cltd
clc
xchg
outsl
ret
cld
lock
or
gs
lods
lret
add
cwtl
xchg
inc
ds
mov
stc
push
or
mov
popa
outsb
sbb
add
ja
js
dec
adc
jae
sarb
and
mov
push
mov
call
mov
mov
cmp
out
das
mov
sti
xor
arpl
and
mov
leave
mov
pushf
lock
xor
cwtl
inc
push
or
cmp
je
mov
dec
or
xchg
gs
push
xchg
dec
pushf
add
and
or
test
fsubp
ja
mov
lahf
mov
cld
cmpsb
sub
sbb
xor
sub
roll
femms
xor
pop
popf
pop
cld
push
pop
loop
ret
mov
mov
adc
nop
cmp
inc
jl
psubq
test
cmp
jbe
and
addr16
jbe
push
into
cmp
dec
repnz
inc
mov
inc
mov
bound
or
lds
sbb
fdivrp
mov
dec
cmp
fs
int
std
out
in
mov
addl
ja
add
je
out
push
sub
cmp
inc
je
out
mov
int3
push
insl
jmp
lret
xor
inc
and
inc
in
mov
sub
andb
nop
dec
or
in
and
xor
push
mov
roll
xor
inc
sbb
rcll
bnd
add
push
aas
xchg
mov
inc
repnz
aam
cmpl
movsb
in
pop
add
push
test
inc
in
xchg
push
and
js,pt
cmp
imul
xchg
inc
lods
jo
jg
call
mov
in
push
into
das
jl
mov
popa
or
xchg
outsb
jne
aam
leave
adc
sbb
test
or
and
lods
mov
pop
jne
xchg
ja
adc
es
aaa
lds
gs
stos
bound
call
dec
jg
cld
cmp
aad
roll
popf
xor
insb
sbb
mov
mov
dec
jo
movsb
addr16
push
sub
ror
mov
clc
cli
lds
jns
popf
mov
in
cmc
mov
push
push
pop
sar
jg
sbb
inc
cmp
mov
repnz
lcall
cmp
xor
aad
dec
cmp
jg
push
sub
sub
sbb
xor
popa
pop
mov
add
pop
inc
lahf
call
xchg
add
mov
lret
pop
mov
mov
pop
sbb
loop
jno
ss
or
orb
fwait
daa
jmp
hlt
loope
add
roll
cmp
in
pop
mov
out
xchg
shr
mov
cld
dec
mov
out
xchg
mov
stos
sub
mov
mov
inc
leave
add
xlat
pop
jne
push
push
outsb
clc
and
jecxz
gs
push
pop
cmpsl
sarb
xor
shll
hlt
cmp
jb
rclb
xchg
xor
push
lods
mov
mov
test
xor
or
adcl
dec
sbb
test
loopne
xchg
pop
popa
ror
cwtl
aaa
dec
push
repnz
pop
ret
xchg
xor
mov
out
xor
mov
or
sarb
xorb
mov
mov
arpl
insl
les
outsl
je
rdpmc
xchg
mov
lcall
dec
jmp
jb
adc
push
adc
jo
addr16
inc
cmp
pop
jp
sub
shll
pop
lods
je
enter
jge
loop
rcrb
cld
lods
cmc
fisttps
bnd
dec
push
push
push
xlat
scas
in
repz
sbb
and
inc
fistpl
dec
jecxz
addr16
adc
mov
inc
pop
leave
jnp
enter
xchg
xor
in
jb
xlat
mov
sarl
bound
loope
mov
loopne
or
int
ret
lods
jl
inc
ja
push
fldenv
pop
push
int
outsl
xlat
inc
mov
xchg
xchg
push
sarb
out
dec
fistpll
test
lds
mov
lret
fsub
out
or
pop
adc
inc
or
sti
fidivl
fwait
xor
pop
jns
packuswb
sub
pop
mov
popa
mov
jmp
jge
scas
xchg
popa
pop
jb
out
xchg
pop
mov
xchg
inc
mov
adc
in
fmul
dec
mov
ja
dec
adc
loope
ss
jo
cld
cs
test
mov
nop
sbb
or
push
aas
sub
stos
imul
sub
jmp
mov
js
cmpsb
pop
xor
push
xor
cmp
fwait
cli
adc
loope
imul
pop
shll
xor
xor
jl
test
lds
push
jns
rcrb
add
mov
sub
cmp
sub
dec
iret
mov
push
pushf
add
add
jno
mov
ret
repnz
icebp
das
rcll
jp
inc
cmp
push
adc
mov
jo
pusha
out
mov
sbbb
ja
jb
ljmp
jg
lods
push
cmp
int3
popa
es
cmp
aaa
call
cltd
loop
daa
inc
or
push
adc
push
xchg
leave
lcall
xlat
mov
jbe
and
cmpsl
jmp
sti
push
roll
push
xchg
cmp
push
sub
push
push
ficompl
push
push
adc
inc
pop
sti
add
dec
mov
idiv
push
dec
sub
jp
and
shl
fidivl
or
arpl
shl
pop
cltd
jl
leave
mov
out
clc
stos
sbb
into
pop
fsubs
inc
mov
mov
jae
repz
aam
dec
subl
cmpsb
mov
shlb
fs
mov
fcoms
jl
xchg
test
push
xor
xor
push
ds
push
ds
lret
push
shl
aad
fucomp
jne
push
xlat
xchg
gs
js
stos
insl
mov
xor
mov
jge
out
cmc
pop
ret
jecxz
fnstcw
int
nop
movsl
cmp
sti
icebp
cmc
pop
jmp
xlat
mov
icebp
add
scas
xor
mov
jp
fisubl
ficompl
cmc
or
loop
loop
fdivrl
cltd
in
popf
out
pushf
or
sbb
loop
addb
ljmp
shrl
push
stc
push
add
jnp
or
rolb
rol
out
jmp
push
popa
sbb
cmp
or
mov
inc
xlat
jp
imul
xchg
testb
pop
ret
mov
sbb
out
ss
inc
dec
xchg
leave
jb
test
negb
mov
mov
pop
xor
mov
sbb
adc
movsb
push
insl
pop
mov
push
outsb
jle
in
push
sti
in
int
or
insb
push
jp
adc
int
pop
mov
inc
cmc
movl
ss
add
imul
outsb
push
cmpsb
inc
dec
sbb
push
sbb
add
mov
pop
enter
dec
clc
mov
adc
xlat
push
idivb
insl
testl
adc
daa
shlb
fs
or
inc
mov
mov
cmp
insl
sub
inc
ja
addb
gs
aas
negb
dec
xor
mov
mov
pop
fwait
pop
mov
pop
imul
addr16
ds
adc
fcoml
cmp
sub
jno
iret
loope
loop
mov
jo
xchg
mov
gs
rclb
mov
xchg
xchg
sti
loop
insl
popf
sub
add
dec
xor
and
testl
cwtl
fnstenv
cmp
dec
mov
pushf
bnd
shl
xor
call
lea
jbe
cmp
cmp
sbb
or
cli
mov
loopne
in
test
jno
adc
sub
cmpsb
sarb
xchg
in
out
xchg
inc
inc
mov
ja
icebp
mov
loope
aas
mov
sbbl
test
mov
xchg
shrb
inc
test
xchg
mov
test
inc
push
dec
sub
xorl
push
mov
negb
jmp
mov
push
or
or
xor
mov
hlt
shlb
stc
push
dec
xor
dec
xor
push
push
cli
rolb
mov
bound
push
add
pop
pop
adc
insl
xchg
pop
les
sbb
lret
jmp
xlat
or
cmc
out
mov
lea
testb
cmp
xor
add
xor
fidivrl
test
imul
lods
ljmp
mov
jp
mov
xlat
shr
int
loopne
mov
bound
mov
push
addr16
xchg
mov
inc
outsl
mov
xchg
out
or
push
sar
push
add
mov
hlt
pop
loope
pop
pop
inc
mov
dec
sbb
mov
out
jne
jb
pop
rcr
aad
cmp
jge
sti
ficomps
popf
push
inc
push
mov
mov
dec
sti
std
or
pushf
xchg
sbbl
fists
push
outsl
push
aas
mov
cli
pop
mov
mov
fldt
jmp
and
jno
dec
fs
inc
pop
rcr
sub
or
mov
test
mov
mov
mov
arpl
dec
js
bound
jg
mov
pop
push
cmp
shl
cmp
dec
in
push
mov
mov
or
enter
sub
iret
add
in
mov
or
in
insl
insb
and
imul
cs
iret
mov
pop
in
pop
lock
lods
adc
push
fs
enter
test
pop
js
add
sti
sub
aaa
out
pusha
jl
push
inc
xchg
mov
xor
mov
lret
das
xchg
sub
in
cmp
fs
mov
roll
lret
scas
scas
cli
rolb
cltd
test
test
imul
xchg
cs
je
enter
popf
lods
rcl
mov
dec
cmp
pop
pop
ret
cmp
scas
xchg
sbb
js
cmp
jge
and
cmc
jns
adcl
xor
cs
aas
jb
jno
ss
mov
unpcklps
ds
dec
sub
fsts
lret
cmp
outsl
inc
test
cltd
enter
push
int
int
xchg
cltd
outsl
xchg
mov
mov
in
xchg
aaa
in
lock
ljmp
sub
leave
int
scas
jp
mov
xor
aaa
or
jmp
mov
inc
mov
lea
jl
xchg
cmpsb
sub
sahf
push
add
xchg
cmp
xchg
out
push
out
das
lret
push
mov
fisubs
mov
aad
iret
imul
loopne
data16
jecxz
stc
pop
decb
cmpsl
in
xchg
sub
outsb
mov
mov
test
jbe
cld
mov
fs
clc
jo
jp
roll
xor
aad
in
add
pop
push
sub
lcall
or
test
aaa
sbb
mov
xchg
push
movsb
fidivs
cmp
mov
jo
push
shl
pop
and
mov
int
ljmp
popl
test
pop
pop
and
push
mov
fstpt
call
outsl
sbb
jbe
xchg
fstps
ss
push
outsb
sahf
in
ss
push
lock
call
shll
jl
sbb
dec
das
repnz
or
mull
inc
xor
enter
jmp
or
sub
xchg
fcoms
and
lret
mov
or
mov
dec
jbe
in
cmp
shll
faddl
imul
push
or
fstpl
insb
lret
pop
lods
mov
mov
ret
sbb
aam
cmp
pop
ja
pop
adc
xchg
cmp
popf
xchg
jno
sbb
pop
sub
movsl
out
and
mov
mov
push
ja
test
rorl
xor
cmp
aad
idivb
out
dec
out
movsb
add
mov
and
fwait
movsb
push
adc
movsb
pushf
fistpl
data16
es
jp
enter
sahf
stos
ja
mov
shrl
pop
dec
push
and
sub
outsl
pushf
sub
movsb
adc
xchg
rdpmc
pushf
jmp
xchg
scas
pop
fsubs
push
lcall
fistpl
push
push
fcomps
lods
sti
mov
leave
stos
stc
jnp
imul
sbb
stos
decl
sub
mov
std
cmp
push
inc
dec
sub
jmp
cmpsb
fs
or
pop
in
xchg
hlt
mov
jecxz
jp
leave
aad
xlat
sub
in
filds
icebp
sbb
jmp
enter
inc
dec
xchg
mov
lahf
mov
xchg
and
fisubl
dec
xchg
adc
push
divl
xchg
aad
dec
je
andl
lods
mov
ljmp
dec
cmp
popa
dec
adc
movsl
pop
push
cmp
xor
dec
cmp
mov
push
cli
push
mull
pop
mov
add
into
jbe
push
mov
xchg
out
jo
push
inc
je
shrl
jecxz
mov
push
dec
dec
push
aaa
mov
ljmp
dec
pop
scas
push
and
int
xor
repnz
jg
pop
mov
sarb
cmp
rcl
hlt
pop
xlat
dec
lods
inc
push
xor
fcmove
daa
xlat
aam
shl
adc
mov
inc
lods
lds
push
xor
scas
mov
dec
jl
jo
pop
push
divl
xchg
dec
test
push
adc
pop
xchg
lret
inc
xchg
or
xchg
sbb
cmp
out
push
sbb
loope
adc
nop
imul
aam
scas
xor
cmpsb
popf
enter
jne
ror
in
jp
rolb
lds
mov
mov
mov
aas
inc
lret
mov
mov
add
lods
inc
adc
aad
stos
lock
jl
inc
sub
test
push
cs
jno
ljmp
in
sbb
outsl
sbb
jecxz
xor
ret
and
add
mov
push
aas
orl
inc
inc
fstpl
sti
cltd
repz
xor
js
jnp
inc
mov
push
jge
daa
cmp
data16
nop
cbtw
push
jno
rcll
mov
outsb
jbe
xor
loope
test
std
xor
sarb
mov
fxch
adc
mov
add
push
mov
xlat
cmp
out
pop
int
jb
push
into
subl
inc
movsb
or
mov
and
xor
push
inc
arpl
xorb
mov
jno
jno
dec
sahf
fwait
or
pop
inc
int3
popa
and
jno
push
sub
stos
call
sbb
push
fimull
jae
hlt
imul
lahf
sbb
stos
jne
lea
cmp
fxch
dec
cmp
cmpsb
lods
xlat
and
mov
in
cld
adc
inc
js
jb
stos
adc
daa
ret
inc
cli
dec
dec
fidivs
sbb
push
outsb
lods
pop
roll
and
push
dec
mov
push
lea
inc
in
into
leave
sub
inc
arpl
in
dec
xor
cs
arpl
add
ficoml
imul
aas
pop
pop
dec
sbb
clc
mov
jo
mov
arpl
pop
sahf
adc
pop
stc
das
outsl
mov
popf
mov
inc
xchg
movnti
jle
dec
push
cwtl
ljmp
jle
and
or
loope
adc
clc
push
xor
pop
pop
push
pop
sbbl
insl
scas
loopne
arpl
cmpsl
aas
lods
push
sbb
inc
mov
sbb
mov
out
sti
into
outsw
push
jno
push
pop
or
in
and
or
fiaddl
fmull
loop
jo
or
inc
xchg
test
out
rcl
imull
shl
mov
mov
push
jae
push
mov
push
mov
xchg
scas
rorl
or
cs
in
sub
dec
inc
ss
mov
pop
xchg
scas
jg
lea
and
les
sub
fdivl
shll
push
enter
dec
bound
xchg
add
loopne
nop
xor
mov
out
mov
rorl
daa
or
imul
sub
bound
push
push
cmp
dec
or
shl
and
cwtl
mov
add
aaa
aaa
jp
pusha
inc
sub
adc
test
idivl
and
xchg
pushf
cli
loop
mov
xorl
sbb
out
jecxz
jb
arpl
repz
xchg
inc
push
test
adc
jns
pop
inc
push
ss
and
daa
dec
sbb
in
or
or
data16
mov
jne
mov
popf
cmp
cmp
jmp
sub
jo
in
pop
in
dec
jecxz
mov
adc
mov
test
movsl
nop
scas
icebp
cs
fs
dec
sbb
test
lock
std
xchg
imul
xchg
in
lds
and
in
fwait
test
shr
cmp
int3
sub
shrl
scas
lods
iret
in
jnp
push
and
icebp
and
insl
mov
mov
movsl
cli
dec
adc
cmp
add
ret
dec
sub
jecxz
mov
and
test
sahf
rcr
adc
mov
sahf
ds
mov
xchg
mov
xchg
loope
dec
adc
pop
sbb
in
xchg
push
in
sub
adc
lea
shlb
pop
xor
inc
lahf
mov
sub
cli
push
leave
sbb
jmp
xchg
jno
cmp
idivl
stos
popa
mov
in
jo
loop
into
cmp
test
pusha
mov
adc
cld
aaa
xchg
sub
lret
pusha
mov
cwtl
gs
dec
mov
or
test
jno
xchg
xor
lea
lock
jp
addr16
ljmp
iret
lret
inc
sbb
testb
fsubrl
xchg
call
jge
push
lahf
sub
das
pop
jp
sbb
mov
arpl
push
pop
adc
insb
aad
mov
push
clc
jle
sub
sti
scas
repz
shll
pop
sub
mov
mov
dec
pop
or
xlat
adc
mov
int
adc
scas
fdiv
aad
push
ds
cltd
mov
shll
push
inc
pop
addr16
test
push
xchg
std
insb
pusha
sub
bound
ss
call
cmp
lea
pop
pop
ja
push
insb
loopne
popf
call
xor
sbb
jge
pop
lods
in
in
mov
imul
ds
stc
fcompl
loope
lea
jne
shl
push
ja
pop
into
mov
into
cmp
clc
pop
pop
pop
iret
ret
and
rcl
imul
mov
add
mov
add
inc
mov
pop
addr16
mov
mov
ja
xchg
fsubrp
mov
ss
dec
nop
orb
mov
bound
xchg
jne
dec
cld
daa
push
mov
add
in
mov
dec
cmp
add
outsb
sbb
pop
subl
sbb
jae
sub
jmp
jecxz
cltd
push
lret
sti
jno
in
sbb
xor
jns
aas
xchg
arpl
in
adc
stos
mov
mov
lods
mov
pmullw
jb
in
add
lds
cvtpi2ps
test
jno
enter
fildll
sub
xor
stc
ret
inc
push
xchg
xchg
movups
pop
mov
mov
stos
