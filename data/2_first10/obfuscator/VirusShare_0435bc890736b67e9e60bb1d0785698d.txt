loope
push
popa
or
hlt
roll
aad
inc
pop
push
pop
mov
adc
or
cmp
xchg
inc
xchg
int
sbb
pop
sbb
cmp
ret
out
sub
cltd
mov
fs
daa
das
fcoml
cmpsb
imul
sbb
cwtl
mov
add
ja
in
push
pop
inc
pop
in
lcall
cs
fistpll
ja
xchg
das
add
shll
mov
jecxz
mov
imul
adc
mov
mov
sbb
inc
mov
pop
mov
fisttps
popa
cmpsl
jae
push
clc
sub
jmp
pushf
lret
add
aas
and
into
lcall
hlt
xchg
ja
orb
adc
mov
movsb
rcll
jno
adc
cmpsl
ret
cmp
sahf
ss
scas
sti
mov
outsl
cmpsl
ja
scas
jne
cmpsl
pop
daa
push
push
je
cmp
out
ljmp
pop
inc
lods
arpl
lods
cmp
fstl
clc
lods
fidivrs
mov
mov
mov
mov
pushf
sub
and
daa
mov
ljmp
or
cmp
xor
cmp
bound
adc
adc
mov
fdiv
xchg
int3
xchg
mov
out
test
les
cmp
jns
pusha
cld
in
rclb
lds
fwait
push
ret
js
shl
inc
cmpsl
lea
jl
fs
ds
arpl
arpl
and
scas
fwait
mov
hlt
aam
mov
jmp
xor
dec
cmc
out
outsl
and
into
js
mov
lret
shrb
rolb
lock
sahf
fadd
mov
rorb
and
stc
lret
loop
mov
fwait
test
cmp
in
inc
jmp
xchg
movsl
pop
sbb
negl
mov
xlat
lret
cli
push
outsb
cmp
mov
mov
vpsrlq
sbbl
mov
xchg
es
sub
sahf
and
cmp
mov
push
inc
pop
cs
daa
pop
push
mov
mov
cmp
sbb
jnp
mov
pop
mov
push
out
push
fwait
dec
jbe
dec
jo
xor
out
xchg
loopne
in
xchg
lahf
jo
pop
pusha
cmp
push
mov
nop
xchg
clc
add
sub
inc
je
sub
lods
jl
mov
xchg
mov
ja
dec
sub
add
pushf
xor
enter
fnstenv
cmp
push
test
inc
mov
popa
loopne
sahf
add
push
movsl
mov
data16
mov
test
xor
jae
sub
daa
lds
pop
stc
je
int3
hlt
stos
aaa
mov
mov
pop
in
xchg
sbbl
pop
push
leave
cmp
fstps
rcrb
testb
cli
jge
fwait
out
sbb
push
dec
int
outsb
xor
add
mov
mov
adc
and
mov
cwtl
or
mov
cwtl
lcall
lret
jp
xor
sti
hlt
aas
das
loopne
cmpsl
mov
stos
inc
push
js
mov
mov
dec
or
pop
mov
xchg
mov
mov
inc
dec
dec
jecxz
xlat
imul
pushf
inc
mov
hlt
iret
fwait
test
insb
jecxz
sti
and
mov
mov
dec
adc
fistl
mov
add
dec
inc
orl
lods
into
add
push
adc
lret
mov
lcall
ror
popl
pop
dec
push
rorl
mov
arpl
lds
jae
mov
push
cli
ja
lahf
sub
int3
mov
mov
je
sbb
arpl
push
repnz
and
lds
out
ljmp
scas
push
lods
fisttps
sbb
lahf
ret
mov
and
mov
or
add
cmc
or
out
and
cs
push
outsb
in
inc
push
scas
jle
xchg
les
sub
stc
clc
jmp
lds
add
outsl
imul
fldcw
dec
pushf
mov
ret
stos
icebp
or
mov
mov
fisttpll
cltd
sbb
xchg
std
fisttpll
inc
sbb
fwait
sub
ljmp
push
aaa
sti
mov
fisubrs
jnp
and
mov
cmp
sub
imul
idivb
loop
mov
or
popf
iret
adc
sbb
dec
xchg
cmpsl
std
iret
cltd
stos
clc
and
cli
pop
or
int3
xchg
push
div
push
sub
and
adc
mov
xor
stc
into
pop
push
adc
in
or
cmp
shr
dec
push
cld
and
mov
mov
jb
out
adc
mov
inc
or
nop
movsb
orl
or
pushf
xchg
imul
cmpb
mov
je
aam
clc
inc
lods
mov
test
sbb
loope
push
adc
push
sub
in
mov
movsl
iret
push
dec
lea
rolb
push
test
dec
mov
hlt
outsl
dec
call
cmp
push
adc
pop
subb
ffree
int
loope
icebp
sub
nop
insb
test
imul
mov
xlat
in
inc
lea
neg
popa
mov
out
adc
lret
mov
stc
inc
roll
jae
test
mov
addl
test
adc
xor
xchg
mov
pmulhw
ret
je
cmc
outsl
jl
mov
or
leave
pushf
lock
sbb
or
les
hlt
jle
sub
or
mov
add
ret
add
pop
add
push
or
pop
or
shr
stc
push
push
push
push
lea
push
push
push
push
std
cld
jno
or
stc
cmc
lea
and
cmp
rol
sub
push
push
pop
pop
mov
cld
push
add
mov
xchg
rol
push
sub
pop
push
add
nop
loop
jecxz
mov
es
pop
outsl
sub
push
dec
insl
popa
push
cmpsb
jo
sarb
add
cmpsb
mov
call
jns
cmc
inc
sub
jmp
jmp
call
jmp
fwait
orb
jmp
and
std
jmp
inc
jecxz
xchg
pop
cmc
mov
test
mov
and
scas
dec
lret
add
mov
and
push
movzbl
cmc
cmp
stc
nop
loop
pop
rol
or
je
sub
cld
push
mov
pop
test
ror
push
add
mov
pop
jge
push
or
pop
jmp
ret
xchg
push
push
jbe
pop
loope
imul
dec
cli
fbstp
test
lods
jmp
mov
jmp
js
lock
jl
dec
xchg
scas
shll
adc
aas
or
cmpl
mov
xor
jne
add
mov
pop
test
jne
je
jg
test
jo
push
push
pop
pop
pushl
pop
push
add
pop
testl
jne
jmp
jnp
cmp
shr
jmp
cmp
push
sbb
and
dec
jl
sub
push
fnsave
mov
stos
ds
ss
xchg
test
jle
cli
push
add
pop
jbe
push
test
pop
lea
jg
rol
push
push
add
pop
pop
nop
xor
or
nop
clc
push
mov
pop
nop
push
mov
push
xchg
movsl
xchg
mov
pop
loop
jecxz
or
js
std
aam
cmc
pop
mov
and
mov
mov
stos
xchg
push
gs
jno
sub
xor
gs
mulb
inc
push
nop
pop
loop
jecxz
push
cld
ja
xor
mov
mov
outsb
sub
add
cmc
scas
or
inc
lock
ficompl
mov
test
mov
push
test
mov
es
not
not
cld
add
push
add
push
jg
sub
pop
push
cmp
pop
xor
push
pop
push
add
jo
jb
ja
push
mov
pop
jno
test
push
jnp
or
pop
ja
push
add
ja
cmp
or
cld
dec
jne
push
call
xor
and
xchg
sub
subb
ja
xor
jmp
mov
xchg
mov
repnz
insl
testl
test
mov
fsubrl
push
repnz
fimull
mov
mov
mov
push
in
lahf
sub
jbe
pusha
pop
imul
mov
les
push
movzbl
push
push
js
cmp
pop
pop
push
jg
and
pop
push
jbe
add
pop
jae
jnp
ja
shl
ja
push
jno
shl
pop
or
jb
cmp
push
push
pop
pop
push
push
add
pop
push
push
xor
pop
pop
jp
add
sub
loop
pop
loop
jecxz
testl
pop
shll
imul
inc
push
mov
pop
clc
dec
jne
jmp
arpl
cld
mov
jge
sbb
xchg
and
lods
loope
and
cmpsb
push
dec
jmp
lea
loop
in
pushf
xlat
out
daa
call
mov
shlb
mov
xchg
rcrl
jae
push
inc
dec
ret
test
enter
ss
pop
pop
mov
and
mov
ds
adc
inc
dec
test
and
push
mov
arpl
data16
adc
jmp
cli
popfw
jne
loop
add
imul
imul
adc
ss
pop
mov
xor
test
test
bound
adc
ficoms
ret
push
pop
pushf
adc
xlat
and
jb
lds
and
cmp
loopne
mov
rcrb
loop
int
in
scas
mov
jae
push
mov
test
push
addb
jb
xor
cmp
push
push
lahf
test
push
dec
mov
mov
pop
ret
stc
negl
push
xor
js
popa
stos
je
push
or
sub
jno
ds
jns
mov
inc
mov
pusha
xchg
mov
dec
dec
ficoms
adc
jo
inc
inc
jecxz
dec
xchg
mov
popa
repz
sub
rorl
call
dec
jae
ds
mov
sbb
les
enter
jb
fmull
bound
int3
adc
cmpsb
mov
mov
pop
dec
pop
mov
add
and
mov
je
stos
xor
adc
push
push
imul
fwait
cmp
in
sahf
js
daa
mov
and
xor
in
sub
add
mov
mov
sarl
shll
popf
cmp
push
add
js
jo
inc
jno
mov
mov
inc
xor
daa
mov
nop
nop
and
jg
xchg
mov
repz
and
enter
cmp
cmpb
repnz
inc
sti
sti
out
jb
mov
iret
and
cmpsb
mov
push
ss
mov
inc
test
add
adc
cmp
sbb
in
or
jne
inc
pop
mov
mov
cwtl
scas
leave
stos
or
mov
jmp
xlat
das
inc
dec
jb
lcall
or
mov
clc
pop
icebp
jbe
leave
bound
sub
ret
in
jg
xchg
or
and
insb
mov
xchg
sbb
xchg
std
les
push
and
cmp
inc
sub
fwait
jne
in
or
or
in
xor
inc
fistps
es
or
leave
ret
inc
mov
mov
add
jno
repz
orb
mov
loopne
idivl
push
add
sub
fsubrs
gs
or
sbb
pop
dec
and
cmp
sarl
lret
sbb
or
pop
xor
cmp
popa
popf
inc
adc
or
push
mov
xchg
or
int3
xchg
jno
fiadds
mov
mov
mov
ret
enter
cmp
xor
aam
or
lods
pop
or
jecxz
jge
subl
popf
icebp
testl
push
imul
pop
lcall
xor
gs
arpl
inc
cmp
nop
sub
pop
cwtl
sbb
cmp
xor
jmp
repnz
sbb
int3
add
inc
outsb
icebp
push
das
fsubs
cwtl
and
popa
aam
in
sub
jb
mov
movsl
out
rcl
mov
cwtl
dec
mov
lret
sub
mov
iret
bnd
xchg
fidivl
dec
mov
sbb
or
pop
dec
sbb
in
jge
out
push
mov
lock
mov
icebp
mov
jbe
mov
xor
cltd
adcl
jbe
outsl
xchg
mov
cmp
outsb
cmp
dec
sub
pushf
or
cld
inc
in
in
out
fstpl
xchg
jl
mov
push
inc
scas
lea
mov
ljmp
jno
add
cld
push
xchg
jne
inc
lods
scas
loope
addr16
cli
add
fcoml
pop
out
js
sbb
imul
sub
lret
and
pop
into
sbb
daa
pop
inc
call
rcrl
lock
add
loope
ds
push
xchg
mov
mov
add
xchg
jge
adc
mov
mov
imul
add
mov
jmp
mov
jmp
ret
mov
fldt
mov
push
ret
jl
clc
inc
and
inc
xchg
sbb
sub
jp
pop
inc
xchg
hlt
lea
adc
nop
jb
push
adc
fdivrs
rorl
xor
sbb
xchg
popa
or
inc
mov
clc
sarb
push
test
xchg
sub
jl
das
jl
mov
adc
jg
dec
jns
out
cmc
mov
xchg
sub
or
subb
das
call
cmp
int
mov
movsb
mov
sarl
int3
mov
mov
mov
mov
out
add
out
mov
cmp
add
cmp
les
jns
in
sub
xlat
stc
neg
mov
fmull
pop
jle
cwtl
mov
push
stc
adc
xor
jge
inc
je
sti
sub
sub
subl
call
jo
push
jnp
andl
bound
mov
mov
clc
mov
ret
sarb
ret
dec
insl
push
xchg
jnp
or
cmpsb
inc
jle
push
test
movntq
cmc
ret
mov
ljmp
jle
or
inc
aas
rolb
divl
sbb
fs
int
xor
xor
jg
adc
jb
popf
ret
sahf
scas
fnstsw
mov
in
int
outsb
ja
sbb
jne
es
leave
outsl
test
test
pusha
imul
gs
cmc
in
pop
xchg
inc
jl
sub
stc
mov
and
jmp
mov
test
aas
and
out
mov
imul
sarl
inc
fs
jne
mov
shl
mov
pop
lock
in
in
cmp
orb
xlat
jge
adc
or
adc
add
cld
dec
int
jne
mov
rolb
shrb
push
arpl
dec
xchg
fwait
stos
cltd
lret
pop
gs
clc
dec
lods
sub
xor
add
cmp
xchg
stos
and
inc
adc
jl
aad
cmp
iret
pop
jge
cmpsb
aaa
sub
mov
fcomi
test
nop
push
jno
mov
aaa
nop
mov
test
push
jo
insl
xchg
insl
lcall
mov
std
scas
xlat
ljmp
push
sub
rol
xor
dec
ds
out
pop
ret
sub
cmp
add
adc
in
fildl
lods
clc
mov
add
mov
call
push
repnz
push
adc
push
daa
jbe
sub
lahf
movsb
test
stos
hlt
scas
out
cmp
pop
shr
in
pop
jmp
add
stos
cli
dec
in
sbb
xor
data16
or
jge
mov
cwtl
testl
jp
sub
add
enter
mov
dec
cs
int
sbb
bound
sbb
adc
icebp
fistps
or
mov
cmc
shll
insb
repz
mov
xchg
inc
push
add
pop
push
jg
ljmp
andb
fcompl
add
sbb
xor
fwait
dec
cmpsb
jno
xor
cmpsl
xchg
loopne
and
mov
aaa
movsb
xchg
sbb
mov
mov
push
sar
cld
aad
cmp
cmpsl
lcall
jbe
xchg
insb
and
xchg
mov
dec
push
and
mov
sub
les
insb
mov
movsb
mov
or
and
jp
loop
mov
xchg
insb
xchg
lock
cmpl
sarb
and
in
std
mov
push
cmp
in
and
add
xor
mov
push
sub
stos
cli
jns
dec
xchg
cmp
sub
ja
out
shrl
inc
daa
stos
xchg
push
sbb
dec
cltd
xor
mov
sub
inc
jl
decb
jl
scas
sti
xchg
pop
xchg
add
mov
mov
sbb
fnstenv
mov
ret
stos
out
loop
call
in
sbb
xor
xchg
xor
mov
rcl
inc
test
aad
rcll
icebp
mov
push
rolb
testl
pusha
dec
add
mov
ss
aad
sub
xchg
lcall
jne
sub
push
jne
in
or
push
adc
addb
bound
jae
mov
out
enter
mov
add
or
jecxz
xchg
cmc
les
stos
imul
pop
pop
jmp
lock
dec
cmc
jnp
cmp
cmpsb
cmp
mov
pop
inc
mov
cmp
mov
mov
aad
loope
fiadds
sahf
push
and
mov
mov
out
ret
push
aam
out
push
int3
cs
lret
out
dec
jl
cmpl
mov
jne
or
push
test
push
jbe
mov
push
mov
mov
mov
test
dec
aaa
scas
in
repnz
push
mov
subb
xor
jle
cmp
frstor
imull
cmp
jns
test
mov
aaa
cmp
sub
loope
sub
jbe
add
or
cmp
inc
fsts
mov
sar
shlb
or
inc
jmp
xor
jbe
mov
push
cmpsb
push
bound
shr
adc
xor
inc
mov
int3
aaa
cmp
jecxz
or
sub
or
pop
lds
pop
xchg
sbb
or
nop
xchg
mov
adc
ret
pop
xor
mov
xor
mov
mov
pop
inc
bound
xchg
daa
imul
out
repz
mov
cmp
hlt
fsts
sub
mov
mov
stc
es
js
xchg
pop
mov
mov
lret
outsb
and
cmp
testl
iret
cli
xchg
mov
icebp
fcoml
sub
fcoml
in
in
fwait
rcl
mov
aas
cld
mov
inc
aam
push
dec
dec
fwait
jno
push
push
or
adcl
lahf
mov
int
pop
inc
ss
hlt
mov
jecxz
int3
ljmp
stc
arpl
mov
mov
ret
add
xor
into
mov
lods
je
push
arpl
das
sbb
adc
js
inc
mov
lret
cmp
mov
or
mov
add
call
movb
jecxz
dec
mov
dec
clc
xchg
je
insl
sub
out
mov
push
leave
mov
idivl
hlt
sbb
out
addl
out
jmp
test
in
test
mov
addb
jmp
push
mov
xor
sub
nop
in
inc
les
lea
adcl
or
lret
pop
aad
andb
scas
out
aas
call
lret
push
push
fstps
test
aaa
mov
subl
xor
repnz
dec
lea
inc
xchg
mov
jb
sub
lahf
outsl
lods
popa
aam
outsl
sbb
sti
loop
icebp
mov
call
adc
mov
lods
xchg
mov
inc
aaa
add
jmp
outsb
jae
cmp
sub
adc
inc
call
and
inc
in
std
dec
fldt
and
jl
mov
jns
daa
xchg
adc
cmp
xchg
jo
enter
mov
sub
icebp
aas
ja
mov
mov
int
cs
pop
dec
sub
xchg
pop
mov
lahf
xlat
out
pop
adc
dec
sub
fcomip
mov
mov
int
adc
push
fisubl
das
lcall
loope
mov
call
cs
cli
jmp
nop
shlb
addl
mov
shll
inc
ljmp
add
cs
sub
hlt
lds
or
xchg
stc
dec
jecxz
test
psubb
xor
cmp
aad
test
mov
inc
cmc
ret
imul
popa
mov
imul
leave
add
repnz
nop
mov
aam
jae
mov
xor
mov
add
insl
mov
mov
decl
in
cmc
insl
rcrb
cwtl
sbb
cli
push
jae
insl
or
pop
xor
fisubrl
jb
inc
test
inc
movsl
mov
inc
sub
js
negl
sbb
ds
inc
push
je
xor
jnp
mov
pop
mull
or
in
jmp
mov
paddb
mov
push
outsb
rcl
sub
lcall
cld
stos
jl
sub
out
shrb
mov
adc
insb
repz
pushf
xchg
jnp
cltd
sti
andb
cli
enter
cmpsb
push
je
jmp
add
jne
dec
imul
sti
sbb
add
sbb
pop
in
ljmp
adc
adc
enter
sbb
mov
ret
xchg
xchg
xor
xchg
negb
enter
add
fcomi
loop
mov
add
push
daa
andb
add
push
or
jno
fldt
repz
jmp
pop
jg
cmp
mov
add
int3
add
dec
sbb
movsl
adc
sub
popf
lret
and
ficoms
push
xor
add
and
repnz
out
stos
mov
jae
pop
inc
cli
leave
pusha
daa
cmp
dec
lea
inc
pop
cmp
cmp
cmp
enter
mov
movl
push
ret
adc
fisubrl
out
push
or
sbb
xor
test
or
mov
cmp
cmp
push
in
xchg
dec
rorb
cltd
push
bound
mov
push
mov
inc
xchg
inc
mulb
mov
xchg
inc
in
inc
cs
cltd
fnsave
loop
cmpsl
or
sub
sub
test
xchg
das
dec
pop
mov
push
cltd
jp
into
sti
movsl
adc
jle
loopne
mov
mov
dec
lahf
adc
divl
jg
ljmp
pop
jl
nop
insb
adc
faddl
sbb
in
jmp
and
pop
lods
clc
lahf
sbb
fidivs
lock
mov
jg
sub
aam
repnz
and
dec
sbb
sti
repnz
test
scas
rolb
ljmp
dec
sbb
cmc
mov
mov
mov
sub
lods
daa
adc
fnstsw
scas
push
jae
cltd
dec
mov
fwait
jbe
fdivrl
inc
xor
sub
sahf
mov
jno
mov
clc
xchg
das
push
filds
imulb
mov
movsl
cs
jle
mov
adc
xlat
mov
clc
addr16
mov
or
in
movsl
cmp
mov
sub
rcrb
iret
mov
jae
lds
data16
xor
insb
mov
fwait
inc
lret
andl
xchg
pushf
sub
push
xchg
xor
aaa
popa
loop
mov
pop
stc
jnp
adc
add
adc
and
shr
xor
push
mov
push
ds
adc
les
inc
cmp
inc
cmp
rcrl
cmp
xor
xchg
dec
adc
cmc
ficompl
stc
mov
into
fdivr
cwtl
mov
xlat
jge
pop
call
lcall
rorl
les
xlat
mov
loope
or
pop
cs
cltd
outsb
push
and
dec
lea
xchg
inc
movsb
xor
ljmp
repz
jo
jmp
xchg
mov
adc
pushf
pop
lods
iret
jb
cld
andl
enter
and
popa
push
add
cld
push
shr
dec
pop
popf
push
mov
add
jp
mov
lock
jmp
dec
xor
clc
rorl
cmpsb
push
push
das
xorb
mov
pop
cmp
bound
sbb
in
scas
lods
dec
out
pop
frstor
mov
xchg
fwait
pop
bound
notrack
xchg
dec
movd
lock
cs
mov
insl
dec
mov
mov
ss
pusha
mov
hlt
jne
or
pop
mov
stos
mov
xor
int
ss
inc
pop
nop
shrl
jo
mov
dec
aam
push
cmp
test
dec
into
xor
sbbb
sbb
das
push
sub
inc
push
mov
mov
jno
inc
icebp
inc
mov
sahf
fcmovnb
and
popf
daa
pop
inc
dec
push
xchg
out
jb
push
sahf
inc
ret
addr16
mov
ret
or
xchg
jmp
in
mov
dec
nop
in
mov
enter
xor
vmovaps
cmp
shll
in
pop
stos
jge
pop
fwait
mov
sub
imul
jp
jecxz
test
jl
les
mov
sbb
add
and
dec
inc
jb
movnti
or
ds
push
jno
test
das
sub
roll
insb
xor
push
repnz
lahf
sub
push
fisubrl
add
loop
jns
push
ret
pusha
xchg
mov
stos
cwtl
shrl
sbb
adc
arpl
sbb
loope
les
inc
ljmp
lock
mov
lds
jbe
scas
cli
out
call
jb
movsb
ss
mov
fldenv
dec
jle
popf
test
mov
in
arpl
stos
cmp
and
inc
mov
leave
or
inc
xor
stos
adcl
aad
out
or
stc
out
insl
js
fdivs
xchg
addb
insb
pop
xchg
and
mov
pop
pop
enter
push
push
or
int
fstpt
dec
dec
mov
sub
jg
mov
das
xchg
in
sbb
mov
cmpsl
cmp
test
push
outsl
cltd
adc
loope
loop
xchg
shll
dec
and
pop
mov
mov
cwtl
xor
testl
loope
sbb
push
sub
test
movsl
fwait
fwait
pop
imul
sbb
in
stc
cs
xorl
mov
cmp
push
and
xchg
pop
imul
lods
inc
inc
rclb
add
and
lods
sub
leave
scas
andb
cmpsl
dec
adc
aad
enter
mov
les
xor
lahf
push
push
mov
lcall
movsb
cmp
adc
xor
add
rclb
imull
and
jp
and
xchg
push
insb
mov
arpl
rorb
loop
mov
xchg
cmc
mov
cmp
imul
lret
mov
xchg
add
mov
dec
xchg
jecxz
mov
in
daa
pusha
or
in
repnz
aam
rcll
stos
xor
dec
stos
jmp
lock
xor
lahf
jne
inc
stos
jl
shl
xor
flds
repz
adc
add
mov
rorb
lods
shrl
scas
mov
xchg
js
sahf
cmp
mov
adc
jp
inc
inc
hlt
incb
push
inc
xchg
cmc
fsts
xorl
and
xorl
pop
es
add
hlt
jg
mov
pop
imul
sbb
or
std
icebp
mov
add
test
cli
mov
popf
aad
xchg
jo
shrl
int
cmp
or
js
es
in
call
lcall
into
add
rorl
mov
cld
sahf
packsswb
hlt
cs
lahf
lea
cmp
cmp
out
pop
ds
arpl
mov
cmp
sbb
sar
jno
adc
out
xor
lods
fs
inc
lcall
mov
dec
pop
and
lahf
dec
sub
jno
jl
xor
pop
sahf
out
in
dec
pop
pop
fwait
lahf
icebp
sbbl
orb
cltd
movsb
and
ljmp
lods
std
xchg
push
scas
xor
bound
sbb
cmp
xchg
mov
in
sub
cs
cmp
mov
push
pop
imul
repz
imul
and
and
lods
loope
inc
enter
xchg
push
inc
dec
shll
inc
rclb
imul
popa
repnz
pushf
adc
dec
popf
into
je
shlb
sbb
xor
push
lcall
aad
icebp
mov
jo
fldl
int
stos
sbb
scas
mov
adc
cmp
dec
repz
xchg
mov
inc
cmc
mov
test
mov
insb
mov
sbb
aas
jo
movsl
jle,pn
mov
mov
movsl
mov
sbb
xchg
std
and
inc
aad
xchg
movsb
pop
imul
adc
jp
xchg
shlb
iret
inc
insb
xchg
dec
add
dec
aam
dec
stos
icebp
in
sub
sbb
push
test
xrstor
aam
scas
or
mov
in
in
mov
inc
cmp
cmp
pushf
xchg
push
cmp
or
dec
xor
insl
mov
fdivrs
sahf
cmp
in
push
xlat
roll
cmp
mov
int
xor
cmp
int
movsb
and
inc
lods
adc
xlat
xchg
dec
push
in
jb
fnsave
inc
cmp
aaa
mov
add
add
inc
mov
push
test
cmp
push
and
ljmp
mov
push
insb
push
or
movsb
mov
sub
push
lds
movsb
outsb
sti
cmp
push
pop
cmp
cmpsb
scas
xchg
mov
shlb
data16
xchg
inc
daa
inc
jno
lcall
or
stos
pop
neg
jne
inc
push
cmp
stos
adc
or
xchg
mov
lds
test
into
cmpsl
int
je
stos
xor
cmpl
lret
xor
loope
into
fidivl
testb
clc
cld
or
imulb
cmp
mov
or
rol
fcomps
inc
fdivp
adc
mov
cmp
jbe
dec
in
sbb
mov
xor
dec
cmpsb
ljmp
ljmp
test
cmp
cmp
mov
xchg
enter
movsb
cmp
cmp
push
xchg
ss
mov
lock
icebp
jae
das
aam
push
pop
std
bound
rcrl
inc
mov
jae
mov
and
add
pop
xchg
add
dec
xor
cmp
push
mov
cld
mov
adc
cmc
ret
or
decl
outsl
mov
mov
cmp
leave
push
or
ljmp
xchg
add
inc
rolb
cmp
lret
cmc
sub
faddp
cli
mov
pushf
push
cltd
addr16
xchg
lock
testl
incl
lock
jl
jge
mov
ds
insl
out
jbe
xchg
out
gs
out
test
sub
repz
push
leave
add
loop
mov
enter
out
les
and
lock
les
mov
aas
out
add
xor
dec
push
imul
pop
imul
ja
mov
mov
cmpsb
outsl
insb
pop
ja
loopne
hlt
and
dec
int3
mov
xor
mov
jmp
jno
push
sbb
pop
fimuls
jb
lret
jmp
xchg
jle
mov
loope
in
imul
fs
and
and
popl
aad
mov
repz
test
and
sub
sub
rcl
jno
pop
cmp
or
jnp
lods
sub
push
add
add
dec
pusha
mov
jo
jp
cwtl
ret
aas
and
andb
mov
inc
das
xor
xlat
add
sbb
sahf
fndisi(8087
cmp
cmp
icebp
mov
cmp
and
sub
movsb
pop
popw
dec
jno
and
int
inc
or
fstps
cmpsl
pop
cld
jno
jne
repnz
inc
loope
mov
xlat
and
in
lret
stos
data16
push
std
das
pop
movsb
or
stos
adc
enter
rol
outsl
out
jecxz
xchg
fiadds
sbb
push
es
inc
dec
push
sbb
mov
jbe
mov
jg
mov
fldl
jno
or
xchg
bswap
fwait
pop
ds
and
in
push
repnz
adc
lahf
ja
push
fwait
add
pop
loop
and
ss
sbb
shlb
imul
imul
ds
cmpsl
and
xchg
cld
push
cmp
or
cli
bound
mov
jmp
call
add
xchg
pop
adc
imul
adc
shlb
or
sbb
outsb
out
out
mov
xchg
pop
test
cmp
xchg
inc
xor
shll
je
addl
shrl
pop
lods
sbb
xchg
xor
cmp
push
shrb
mov
insl
dec
sub
add
jbe
out
cs
mov
push
lcall
fwait
jl
xor
xlat
cmpsl
mov
ficompl
mov
pop
test
and
js
and
xchg
and
jae
arpl
addb
push
enter
xor
hlt
xchg
xor
add
cmp
xor
fucomi
mov
lcall
mov
shlb
cmp
aaa
sbb
jecxz
mov
pushf
sbb
mov
pop
cmp
loopne
aad
and
test
int
ja
jp
ror
ret
nop
scas
sbb
in
lods
add
insb
pop
std
xchg
mov
fisttps
push
fisttpl
xchg
fimuls
sub
mov
mov
je
ffree
jns
loope
jmp
cltd
xchg
or
push
shll
std
cmpsb
inc
mov
ficoml
orb
cwtl
ds
jl
stos
sub
jb
sti
sub
mov
pop
js
and
cli
jbe
or
sbb
mulb
xor
jbe
mov
inc
mov
and
gs
fisubl
xlat
xchg
jp
aam
mov
int
mov
xor
les
adc
addb
and
or
jne
ds
mov
xlat
sbb
loop
roll
mov
dec
shl
push
out
xchg
mov
jmp
stos
jae
pop
bound
add
pop
add
pop
jne
mov
std
aaa
lods
jmp
aam
mov
popf
lods
mov
xor
adc
shlb
fwait
mov
sbb
mov
idiv
mov
pop
xchg
pushl
fadds
outsl
pop
out
test
xchg
and
push
pusha
sti
icebp
mov
xlat
jns
inc
mov
cs
jno
lahf
das
adc
mov
fidivs
xchg
mov
push
adc
mov
cli
adc
xchg
fistl
cmp
pusha
xor
cmc
mov
lret
movsl
repz
incb
movsb
test
pop
int3
adc
fwait
in
push
xchg
ja
outsb
icebp
loop
mov
test
fimull
into
loope
insl
dec
push
or
push
pop
fistpll
pushf
fucom
clc
cmpsl
clc
sub
and
push
and
es
hlt
mov
push
jbe
sub
inc
cmp
lods
repz
sub
jp
mov
sub
mov
lods
sub
jp
mov
cld
dec
call
xor
mov
xor
imul
bound
mov
scas
test
xchg
cmp
js
mov
sbb
ss
lret
jno
push
fs
xor
in
outsl
bound
popa
push
call
roll
add
arpl
inc
sub
stos
and
fdivs
fdivr
inc
xchg
push
xchg
add
xchg
or
inc
ja
push
fwait
and
xchg
je
sub
push
out
jg
faddp
addr16
lea
cwtl
popf
jno
int3
sarb
popa
cmp
dec
lods
divb
sbb
es
rcrl
adc
add
pushf
adc
add
pop
push
aad
fidivs
sub
mov
fdivrp
addb
in
or
cmp
loopne
push
jns
lret
rclb
adc
cmc
aas
or
fs
out
sti
cmpsl
or
aam
mov
or
pop
loopne
lds
xchg
xchg
movsl
stos
mov
lret
mov
dec
mov
xlat
lahf
ret
dec
mov
push
es
into
mov
xor
jns
sub
inc
jns
mull
pcmpeqb
call
data16
adc
lods
and
fs
push
movsb
sub
hlt
call
js
cmp
je
mov
jbe
jae
jmp
mov
or
mov
xchg
jg
mov
push
jnp
sahf
xor
jle
gs
push
test
jp
sub
fsubp
push
insl
les
add
mov
or
jbe
or
shll
scas
jle
out
mov
lcall
sbb
jl
outsb
cmc
and
jb
adc
push
inc
repz
dec
xor
mov
mov
cmp
sub
call
aam
push
insl
jns
mov
jne
icebp
inc
insb
adc
outsb
stos
test
and
ja
sahf
cmp
xchg
adc
mov
add
dec
lods
hlt
push
leave
jecxz
jno
stos
push
stos
lret
or
shr
aam
roll
daa
lahf
out
dec
dec
inc
je
cwtl
into
fwait
adc
js
or
je
add
cmpsb
jnp
jmp
inc
addr16
leave
js
dec
and
fs
movsl
pop
mov
xchg
cmc
ljmp
push
pop
push
fs
fildl
push
stos
dec
mov
out
stos
mov
insb
cmpsb
pushf
dec
pop
push
mov
push
cmp
pop
lods
push
dec
and
xchg
jne
popa
xchg
lret
rcll
movsb
outsb
push
mov
lods
cmp
cmp
in
mov
xlat
xchg
adc
and
dec
adcb
loop
add
inc
adc
aam
cmp
inc
mov
cwtl
push
testl
std
cmpsb
sbb
cmp
sbb
test
int3
xlat
es
or
xchg
or
xchg
es
out
and
jns
xchg
add
jle
sbb
adc
mov
pop
pushl
add
mov
repz
push
xchg
push
int
xor
mov
mov
sti
mov
mov
notl
sub
or
js
xor
jl
enter
adc
ljmp
mov
inc
or
xchg
es
test
imul
dec
ret
insb
pop
cmp
sub
and
mov
adc
in
nop
jne
ljmp
mov
lds
sub
fstpt
lods
mov
lock
sub
cmpsl
dec
les
adc
out
inc
inc
dec
mov
mov
push
or
cli
enter
in
aam
addr16
pop
sbb
mov
sbb
rcl
and
pop
repnz
mov
xlat
mov
xor
lcall
add
mul
or
test
inc
cmp
xor
addb
aaa
lea
sarb
lcall
pop
addl
add
addr16
sahf
in
out
hlt
dec
js
shlb
pop
repnz
loop
inc
add
mov
ret
shlb
scas
inc
jbe
mov
pop
iret
in
scas
jno
mulb
aaa
gs
adc
push
roll
pop
cmp
clc
movsb
sbb
fisttpl
mov
xchg
push
push
popl
scas
pusha
or
test
ljmp
sbb
fldt
mov
dec
jbe
call
ret
mov
stc
cmp
cmpsl
leave
add
dec
iret
xor
mov
aad
shl
mov
fisttps
sbb
jmp
mov
pop
jecxz
pop
sub
sub
dec
jne
cmc
cs
xor
pop
or
sub
dec
push
jo
sbb
adc
mov
pushf
sarl
popf
icebp
lock
cmpsb
xchg
cmc
or
mov
dec
imul
lods
pop
repz
mov
sub
jmp
cbtw
scas
or
icebp
bound
mov
roll
aad
fdiv
lret
cmp
cmp
fiadds
jbe
jp
fsubs
mov
lcall
lods
sub
add
adc
jg
mov
lahf
mov
shll
popa
aad
cmp
and
out
lods
cli
or
enter
push
pop
inc
jg
aaa
les
out
aad
mov
mov
or
lods
pop
adc
popa
aas
repz
in
rolb
mov
fcmovne
stos
dec
lock
add
lahf
lods
fistpll
push
inc
aaa
inc
repz
pop
js
cmpsl
pop
sub
push
sti
aas
jno
jns
sbb
add
dec
jl
in
aad
adc
insb
pusha
mov
dec
jno
mov
lock
in
or
popa
add
dec
sbb
push
mov
outsl
sti
je
add
mov
cli
cs
data16
lods
xor
fistpll
push
xor
inc
jecxz
es
loopne
out
popf
xor
push
mov
sub
jle
lret
js
fstpl
dec
popa
cmp
xchg
gs
push
arpl
mov
test
or
or
sbb
xor
lahf
hlt
inc
imul
and
scas
sbb
push
lahf
jnp
scas
inc
cmp
pminsw
shr
out
sub
call
cli
inc
ret
push
loope
test
popf
lods
in
mov
sub
cmp
or
mov
pop
aam
insb
sbb
aas
shll
nop
test
mov
lret
mov
pop
hlt
jle
ret
and
fiadds
xchg
fstpt
mov
mov
js
aam
test
dec
sub
sbb
jmp
stos
dec
repnz
jle
fimull
adc
fcmovu
sbb
out
push
pop
ljmp
shrl
jmp
pop
add
mov
or
xor
xchg
add
addr16
nop
fs
or
mov
mov
adc
xchg
jmp
fisttps
push
pusha
mov
jnp
stc
push
sub
mov
and
add
fcmovnbe
or
lret
scas
dec
sbb
out
notb
pusha
pop
xor
push
adc
scas
mov
sbb
pop
mov
test
jg
cmpsl
jo
and
jnp
std
loop
push
xchg
dec
fwait
sahf
in
cltd
pop
pushf
inc
mov
addr16
dec
fsubrs
cmp
jle
push
dec
pop
rcrb
addr16
arpl
mov
das
mov
or
cmp
dec
repnz
push
shlb
mov
push
push
inc
dec
pop
mov
ljmp
out
adc
or
sbb
repz
sbb
mov
adc
out
test
ret
outsb
pop
icebp
jbe
ds
inc
shll
shll
je
mov
sub
iret
mov
push
popa
jns
movsb
mov
call
repz
push
inc
and
lcall
int3
dec
mov
fstl
pop
jl
shrl
jne
inc
or
add
jbe
es
mov
testb
in
ficompl
add
jg
clc
cmp
aaa
sbb
add
sub
das
mov
js
out
arpl
jecxz
dec
inc
lea
repz
lcall
mov
xlat
mov
and
push
aad
mov
mov
stc
arpl
roll
leave
cmp
mov
push
adc
mov
dec
lahf
and
xchg
pop
xlat
lea
xchg
stos
lds
jae
or
mov
xchg
and
sbb
lret
lea
pusha
or
popf
adc
jg
pop
jns
or
ret
pop
mov
adc
cmp
pusha
idivl
xchg
ds
jle
xorl
add
push
lock
das
js
jp
sub
lods
mov
addb
sbb
les
mov
aam
fadds
gs
loope
jne
lea
fdivl
icebp
leave
mov
sub
xlat
pop
sub
in
out
push
insb
fcompl
sbb
enter
divl
insb
push
and
iret
pop
mov
pop
sbb
push
pushf
cmp
push
push
push
inc
dec
mov
pop
mov
push
stos
fcomi
and
mov
xor
adc
mov
or
pop
xchg
mov
add
sub
cmpsl
clc
adc
test
adcb
sub
cmpsl
sbb
dec
pop
mov
or
jno
les
subb
iret
pop
cwtl
fildl
sbb
dec
movsb
ljmp
sub
cmc
pusha
sbb
ret
sbb
and
daa
and
fwait
mov
push
mov
adc
or
mov
mov
enter
pop
pop
mov
push
inc
jge
dec
rolb
ret
adc
xchg
scas
fidivs
scas
popf
and
sub
pop
clc
pop
cmp
sti
inc
xchg
cltd
pop
dec
xor
insb
mov
or
sahf
imul
xchg
push
ds
push
inc
xor
pop
gs
push
loopne
sbb
clc
jnp
mov
mov
fisttps
out
mov
aas
xsha256
cmpsb
adc
inc
xor
pop
jecxz
inc
jb
lcall
mov
fcmovnb
mov
mov
int
cmp
cmp
leave
out
push
stos
leave
scas
mov
and
aad
and
imul
pop
imul
jmp
jo
pop
loope
loop
out
xor
notl
test
pop
fs
add
mov
repz
ja
subl
adc
inc
push
mov
ret
popf
sbb
sub
arpl
xchg
push
sbb
stos
xlat
xchg
cwtl
leave
outsb
or
shrl
stos
insl
and
ljmp
daa
out
adc
push
push
fwait
push
xchg
push
loop
stos
dec
out
xchg
outsb
fisubrl
add
ret
push
repnz
or
inc
movl
in
push
inc
into
pop
cmpsb
xor
sar
das
iret
clc
jo
push
sbb
fs
push
mov
jp
and
sub
xlat
arpl
loopne
scas
xorb
sbbl
push
ficoms
cmpsl
inc
cmp
int3
out
imul
inc
push
inc
movsb
sbb
or
adc
inc
xchg
outsl
inc
add
push
ficoms
xor
shlb
lea
add
jl
popf
leave
sti
movsl
mov
pop
jmp
out
les
and
mov
dec
mov
inc
xor
popf
mov
filds
je
lret
iret
sub
outsb
fs
sub
pop
icebp
ret
xor
insb
cmp
inc
aas
or
xor
fsts
sar
sub
and
dec
hlt
lds
or
push
or
xor
push
adcl
int3
imul
and
mov
jbe
int3
jbe
stc
lods
sti
lods
pop
sub
test
xor
and
push
cwtl
shll
nop
adc
popf
fldcw
adc
push
cmpsl
data16
pop
ret
lcall
ljmp
jp
xchg
dec
xchg
push
movsb
in
std
lret
sahf
aad
mov
mov
mov
clc
push
cmp
out
add
dec
pop
movl
call
scas
js
adc
mov
repz
pop
into
mov
lcall
pop
ljmp
iret
lea
fsubs
push
jmp
add
xor
idivl
mov
xchg
inc
inc
add
or
mov
mov
pop
mov
push
incl
jp
jo
sti
in
and
cmpsb
cmpsb
flds
lret
shll
xorl
aad
iret
xor
sbb
xchg
sbb
push
fsts
cmp
jp
popl
in
mov
outsl
cld
hlt
mov
and
cmp
stos
or
fiadds
das
add
andl
inc
stos
js
xor
inc
xchg
cmpsb
or
lahf
in
clc
std
jbe
and
je
mov
add
xchg
sbb
jo
jb
push
test
inc
int
pop
sahf
xor
mov
push
stos
sti
sub
jmp
push
jmp
outsl
mov
andb
push
nop
pusha
mov
mov
call
outsb
add
sbb
inc
fiaddl
je
pop
test
sbb
push
or
jae
add
jg
sarl
test
mov
leave
mov
lea
mov
jl
jne
sbb
pop
adc
push
cmp
xlat
out
sub
jno
cmp
in
mov
dec
cwtl
pop
ja
add
test
fldenv
dec
bound
dec
jmp
sub
xor
mov
cmp
imul
add
xchg
out
imul
xor
lea
mov
push
outsl
lea
insb
mov
ljmp
jne
dec
cmp
js
mov
adcb
mov
push
lods
inc
jns
mov
leave
outsl
xchg
int
and
adc
popa
jle
shl
inc
pop
and
dec
repz
push
in
sbb
pop
mulb
addr16
jae
mov
push
cmpsl
push
out
adc
jp
test
xor
mov
dec
scas
push
cmpsb
movsl
movsb
fcompl
xchg
pop
add
cli
fldenv
das
addl
subl
je
cli
sbb
call
cs
jle
clc
or
jecxz
dec
lea
int3
dec
dec
fsubs
jle
mov
ret
maxps
lcall
add
jmp
sti
push
cs
cmp
lret
xchg
mov
dec
ljmp
dec
mov
movsl
loopne
jmp
je
pop
mov
mov
pop
inc
ss
outsb
inc
test
sbb
in
loopne
adc
rorl
adc
xor
push
into
sub
pusha
sub
movsl
outsb
cmc
mov
negl
or
jo
jne
jg
fisttpl
hlt
addb
lret
or
enter
mov
pop
cmp
das
aas
and
pop
decb
sbb
jmp
es
lods
xor
and
dec
sbb
sbb
outsb
xor
fs
and
xchg
outsb
repnz
dec
fldenv
gs
pop
push
out
xchg
leave
dec
movsb
jbe
data16
jne
xchg
push
loope
xor
jle
push
in
mov
cmp
add
add
cs
fldl
rcrb
push
divl
out
or
nop
sbb
mov
push
jns
in
xor
in
mov
inc
out
jo
jl
sbb
push
cltd
out
pushf
mov
push
sarl
in
aam
call
xor
arpl
aad
mov
cmc
mull
mov
popf
in
xchg
loop
push
lock
mov
lods
mov
rolb
cs
and
fs
lret
adc
adc
fisubrl
cmpsb
adc
sbb
cmp
je
out
bound
fwait
enter
out
jmp
cli
xchg
in
and
loope
inc
jge
repnz
dec
pop
xor
into
es
push
push
aad
xor
out
mov
sub
push
data16
lcall
sbb
icebp
aas
pop
movl
sub
loope
jle
push
imul
sbb
jo
lret
in
loop
ss
ss
jbe
iret
xor
inc
xor
fsubs
pop
movsl
subb
add
movsb
out
daa
pusha
xchg
adc
push
jb
dec
dec
aaa
sub
orb
push
js
rorb
lods
cmp
rcrl
sahf
jp
ja
inc
dec
cld
pop
push
popa
adc
cmc
mov
adc
in
enter
testb
inc
pushf
es
andb
stc
inc
push
mov
sbb
mov
push
mov
test
dec
mul
jp
fwait
cli
xor
xor
aaa
out
mov
cmpsl
sti
inc
loop
and
rolb
dec
jp
adc
scas
fiadds
rolb
vaddps
xor
stc
sub
xchg
xchg
in
dec
xchg
bound
mov
loop
lea
push
aam
pmaxsw
xlat
dec
test
out
clc
fmuls
cmc
pop
loope
daa
out
mov
in
imul
in
push
into
rcl
add
push
aas
adc
mov
scas
pushf
shl
aad
icebp
jge
jnp
loopne
mov
das
nop
ds
push
jg
scas
ds
mov
and
in
mov
loopne
jmp
outsb
adc
jbe
clc
push
xlat
outsl
dec
jne
adc
mov
cmp
inc
sub
xchg
mov
ljmp
shrb
in
int3
sbb
mov
into
es
imul
lret
rcll
mov
xor
pusha
jne
jo
or
or
aam
sub
xchg
out
into
popf
xchg
xor
dec
adc
dec
inc
repz
stos
jge
xchg
ficoml
lcall
or
and
add
jno
inc
out
cmp
jo
push
aad
lret
imul
jecxz
xchg
nop
mov
in
enter
gs
jno
jle
fmuls
xchg
cmpsb
lret
push
dec
pop
mov
lock
sbb
xchg
stc
sub
jge
sbb
pop
stc
jmp
cmp
cmp
mov
lea
adc
pop
bound
mov
mov
dec
std
xchg
jl
sub
test
popf
fwait
ja
shll
mov
aad
pop
xchg
call
sahf
add
xchg
mov
das
mov
mov
mov
pop
jp
ret
insb
xchg
jae
movl
loope
outsb
das
lea
jnp
cmpsl
push
pop
xchg
movsl
jle
and
dec
adcl
jmp
dec
in
or
and
cs
enter
jge
adcl
sub
das
jle
outsl
jns
jbe
mov
jns
inc
jnp
outsb
jp
xor
pushf
push
xor
decb
xchg
stos
dec
sub
dec
leave
stos
testl
fcoms
mov
ljmp
dec
mov
mov
movsl
adc
inc
outsl
ss
insl
into
pop
mov
jl
add
cmp
pop
or
or
jmp
push
fnstsw
mov
jmp
mov
loope
in
mov
aas
add
shrl
jl
push
sbb
pusha
roll
pushf
sub
push
add
cmp
add
or
xchg
rep
add
repz
cmp
mov
ret
out
push
aam
dec
xor
das
xchg
push
cmp
push
dec
jle
dec
mov
bound
arpl
test
mov
and
stos
fstpl
ja
repnz
xchg
push
lcall
add
pop
mov
gs
sbb
sub
and
add
cmp
outsl
enter
add
mov
das
loop
mov
jo
add
cmpsb
addr16
pop
mov
mov
sbb
scas
cmp
shll
add
adc
pop
mov
mov
in
dec
outsb
push
mov
xchg
add
pop
jb
push
pusha
loopne
lret
and
xchg
jb
mov
inc
jmp
inc
or
and
jmp
pmaxub
data16
icebp
jae
test
inc
lcall
cmp
negb
das
sbb
gs
inc
jns
add
call
add
repnz
mov
call
lcall
test
dec
dec
loopne
les
jp
sbb
or
xor
pop
add
int
pop
cmc
xor
adc
lcall
insb
notb
loopne
scas
sub
sti
aaa
cmp
rclb
mov
mov
ljmp
inc
adc
hlt
shll
sub
push
jmp
adc
rorb
xor
xchg
jge
mov
xorb
mov
ficoml
jae
xchg
dec
add
cld
cmpsb
je
sbb
lcall
add
sbbl
aad
jl
push
mov
dec
xor
pop
js
test
push
fsts
jnp
cmp
pop
movb
lods
lods
dec
jmp
cmc
stc
xor
xor
mov
cli
rcrl
mov
mov
and
aam
cmp
push
mov
adc
imul
pop
nop
inc
es
inc
cmp
inc
pushf
test
mov
cmp
pop
mov
fsubr
testb
xchg
nop
pop
call
int
inc
cmp
jno
cmp
jecxz
ds
arpl
sbb
scas
sub
imul
lcall
rcl
jle
sbbb
pop
out
jmp
lret
xor
and
cmp
lds
mov
scas
inc
xor
out
jae
pop
sub
dec
into
ss
inc
xor
in
scas
and
cmp
lcall
xor
or
outsl
or
jbe
cmpsl
xchg
mov
push
sub
xchg
shr
or
faddp
cld
mov
outsl
and
lods
pop
xchg
fcomip
push
cmp
nop
lahf
pop
pusha
mov
fidivrl
adc
push
mov
stc
lea
sub
mov
adc
sarb
add
mov
adc
cmp
jns
mov
xor
loopne
mov
mov
xor
inc
shll
xchg
fidivs
push
jns
lods
fpatan
cltd
cmp
pop
out
sub
ljmp
lock
push
jb
loopne
cli
in
aas
fs
mov
fsubrs
or
inc
insl
in
push
push
sarb
xchg
mov
push
push
cmp
push
inc
mov
cld
frstor
xchg
lret
or
iret
int3
jbe
mov
adc
jl
jo
mov
or
lods
in
movsl
xor
stc
les
jge
push
lcall
push
push
scas
testl
notl
aad
sahf
fsubl
lret
pop
data16
cltd
pop
pusha
push
mov
mov
test
out
jl
cmp
sub
inc
aas
hlt
sbb
sub
xchg
lods
scas
loop
jae
sbb
jb
cld
rorl
sbb
push
fld
out
stos
xchg
push
jmp
lret
lret
jmp
jl
and
loope
and
mov
mov
mov
xchg
loop
adc
xchg
inc
das
in
sub
xchg
call
mov
jbe
scas
shl
fistl
mov
mov
lret
clc
push
je
jae
nop
push
nop
jg
add
xor
push
xor
loop
dec
test
xchg
movsb
in
inc
add
sub
dec
jnp
cmp
dec
mov
mov
stos
cli
sub
movsl
outsl
fdivrs
aad
add
push
adc
push
in
es
ret
movsl
sub
sub
shll
leave
fcmovnu
and
ljmp
mov
cs
popf
lods
sbb
add
insb
test
mov
dec
sbb
dec
cltd
xchg
pop
jns
cmp
loope
pause
cmpsl
jae
ss
pop
adc
clc
popf
iret
jmp
or
and
repz
mov
push
xor
lcall
inc
inc
cmp
ljmp
jae
and
movsl
jmp
test
jecxz
int3
js
imul
pop
jl
cltd
bound
lock
lret
mov
jge
pop
mov
sub
outsb
xchg
pop
mov
sbb
loopne
lds
movsl
int
mov
nop
scas
pop
mov
das
xor
mov
call
pop
push
push
xor
icebp
or
cmpsb
mov
and
shlb
or
popf
mov
and
ret
cmpsl
inc
sub
pop
cmpsb
fnsave
scas
or
pop
add
or
call
leave
icebp
lahf
inc
cld
mov
push
pushf
or
pusha
jno
xchg
jnp
int3
aad
jo
cwtl
cli
sbb
lahf
mov
jp
rcll
xor
rcll
fsts
pop
dec
iret
or
pop
repnz
mov
outsb
add
outsl
outsb
mov
mov
and
push
hlt
test
pop
jnp
aam
xchg
inc
push
lret
lahf
mov
add
outsb
outsb
hlt
and
xchg
push
shl
int3
sbb
loop
es
pushf
mov
ret
xor
bsf
rcrb
aam
orb
jmp
pop
lods
insb
pop
out
jp
cmp
sbb
clc
jp
pop
fldcw
and
repnz
aad
cmova
xchg
inc
xchg
cld
cmp
jecxz
pop
pop
out
js
popa
cmp
mov
xor
or
cmp
fiadds
adc
inc
in
jb
push
rclb
icebp
xchg
adc
inc
sbb
or
jge
push
ds
dec
repz
aam
fisttps
iret
jp
dec
js
add
jl
ss
mov
adc
repnz
add
ds
mov
push
add
bound
push
std
fdivl
pushf
aam
bound
leave
cld
mov
rolb
add
arpl
sub
sbb
jg
sbb
and
inc
ds
pop
dec
aas
popf
push
leave
in
pop
add
push
sub
add
rcr
das
pop
xor
mov
sub
mov
sbb
rcrl
movsl
inc
xor
addr16
js
in
mov
lods
mov
cmpsl
add
add
pop
pop
pop
push
mov
xor
mov
push
in
ror
cs
fstpt
adc
cmc
adc
jmp
stos
mov
and
cltd
xor
jae
stc
stc
shll
push
sub
mov
movsl
mov
je
sub
mul
movsb
inc
pop
push
inc
lods
sub
mov
inc
sub
inc
and
inc
lock
test
adc
mov
mov
pop
addl
push
pusha
stos
imul
in
aad
mov
push
fsub
rcrb
mov
xlat
cld
lret
imul
push
mov
fwait
mov
sub
repz
bound
test
sbb
pop
jl
addr16
lock
push
or
aad
and
imulb
inc
nop
jb
inc
idiv
pop
mov
dec
pop
lcall
jmp
add
pusha
jbe
ficomps
aad
xor
jp
and
mov
in
xor
rcll
cmpsl
sub
insl
test
add
adc
movsb
ds
imulb
popa
mov
outsl
push
inc
sbbl
mov
andb
ljmp
cltd
dec
mov
mov
mov
fcmovnb
pop
sahf
shrl
xchg
ficoml
imul
ljmp
add
cs
int
sti
lds
pushl
rorb
sbb
es
call
pop
cld
les
movsb
adc
stos
jecxz
and
aas
or
aad
arpl
repnz
mov
push
test
nop
aaa
push
dec
xchg
loop
inc
xchg
aas
hlt
adc
out
push
xor
arpl
dec
addb
pop
rorb
lods
imul
stos
sub
and
and
inc
jg
mov
out
cltd
jp
popa
std
mov
jae
decl
in
test
xor
and
shrb
cmp
pusha
shll
mov
mov
dec
rcl
mov
lods
mov
mov
bound
push
and
push
cltd
xor
mov
dec
and
scas
std
lods
mov
xor
sbb
cmp
xchg
cwtl
and
sarl
inc
sbb
popa
adcl
insl
sbb
mov
shl
jb
xchg
or
aas
fcoms
mov
fidivs
sahf
jae
mov
push
jns
add
in
xor
hlt
cs
adc
mov
mov
jnp
fadds
nop
das
cmp
xchg
pushf
mov
lret
inc
push
or
test
int3
pop
xlat
xchg
sbb
mov
sub
sub
mov
mov
push
lea
cli
xchg
out
rcl
pusha
dec
mov
sahf
aaa
lds
in
xor
xchg
insb
insb
addl
in
daa
data16
lret
pop
mov
fdivrs
cmp
dec
js
lods
pop
ss
je
je
adc
in
xchg
fimull
mov
int3
pop
cmpsl
inc
sar
and
sub
xor
xor
mov
pop
push
sbb
movsl
insl
dec
mov
lds
movsb
or
test
lock
lret
lds
rolb
jecxz
arpl
scas
aam
inc
sbb
pop
imul
pop
cwtl
or
cmc
jp
shrb
outsl
mov
cmp
decl
ret
pop
push
or
jge
xor
or
jnp
xor
insl
ret
mov
out
ficomps
iret
js
ljmp
popf
xlat
inc
mov
stc
mov
pop
call
es
sub
mov
mov
add
les
mov
cs
push
mov
popa
hlt
xor
ja
mov
pusha
movsl
add
mov
jno
lds
push
shl
mov
or
js
xchg
nop
cmpsb
jns
iret
cmp
outsb
push
clc
imul
les
mov
pushf
testl
jb
mov
adc
mov
loopne
jo
adc
divl
add
jecxz
out
ss
sub
adc
out
and
jns
adc
push
incl
sbb
lods
add
push
lahf
or
repnz
and
mov
repz
test
adc
cmpsb
dec
push
adc
adc
mov
ljmp
xor
xor
test
xor
xor
in
ja
out
pusha
sub
das
ljmp
orl
mov
dec
pop
cmpsl
cmp
rorb
cmp
imul
and
aad
mov
mov
fcoml
or
out
dec
fidivs
jb
xchg
dec
jb
call
adc
lods
xor
mov
cmpsl
cwtl
dec
scas
lea
idiv
iret
and
adc
daa
pop
in
mov
loopne
idivb
je
mov
adc
cmpsb
sub
cmp
imul
sahf
loope
adc
cmpsl
out
sub
lret
dec
ds
insb
dec
mov
icebp
cmp
outsb
jne
test
lret
mov
mov
lds
movsb
fdiv
xor
das
add
es
rcll
js
std
dec
lds
lods
int
mov
into
testb
out
ds
movl
xchg
mov
lods
gs
dec
xor
lock
cwtl
mov
pushf
sub
roll
scas
sub
idiv
outsb
fcoms
dec
mov
xchg
dec
fidivrs
mov
dec
aaa
pushf
outsb
addr16
cld
or
push
xchg
xor
shlb
in
fnstenv
pushl
jbe
outsb
ss
cmp
shl
add
lret
pop
push
sub
fdivs
inc
push
imulb
push
sbb
jge
ffreep
adcl
jg
push
jno
inc
jb
pop
push
add
and
lods
xchg
popa
and
fnstsw
aam
outsl
dec
repz
mov
inc
push
adc
sub
movsb
lahf
nop
jnp
jae
in
sub
jb
cltd
sbb
not
inc
mov
rcll
fwait
jae
cmpsb
or
mov
bound
add
in
jmp
inc
popl
dec
mov
push
pop
das
sub
jbe
xor
fiadds
inc
js
test
lods
lea
pop
push
mov
mov
mov
add
arpl
xor
fstpl
xor
test
les
outsl
imul
mov
imul
std
sub
popf
jae
push
mov
addr16
sub
mov
movsb
call
lcall
ror
outsl
adc
mov
lcall
mov
shl
pop
repnz
dec
scas
cmc
fbstp
mov
leave
lea
in
mov
adc
pop
loop
data16
adc
dec
icebp
mov
clc
inc
insb
and
cwtl
cli
cltd
jb
sub
mov
int
push
cwtl
inc
outsb
adc
jp
sbb
lods
out
xchg
cmpsl
cltd
mov
adc
pop
arpl
jo
add
scas
dec
shrl
daa
iret
call
push
out
inc
repz
sbb
inc
in
pmaddwd
pop
ja
jle
and
pop
shll
jle
mov
lock
sub
test
jbe
mov
or
ficomps
adc
insl
jl
jmp
jns
into
sbb
lret
out
cmp
inc
adc
sub
cmp
mov
jge
std
sbb
ljmp
jae
mov
pop
dec
add
dec
aad
lret
xor
dec
xor
popf
pushf
call
mov
loop
pop
bound
jnp
iret
lods
cwtl
loope
insb
mov
mov
ja
ljmp
mov
dec
pop
pop
adc
jecxz
xor
scas
xchg
repz
xlat
jne,pt
add
sbb
jp
add
jge
xchg
loop
ret
xor
mov
push
ds
enter
adc
and
adc
mov
es
or
jae
pop
or
mov
data16
inc
mov
xchg
and
gs
cli
fs
cld
fld
inc
push
xor
jne
adc
adc
cwtl
test
mov
inc
mov
popa
xor
sub
in
lahf
mov
lahf
push
mov
xchg
insb
sbb
pop
add
mov
add
repz
ds
pop
jno
lcall
int3
rcll
jecxz
fisubl
es
inc
mov
dec
aad
and
insl
ret
inc
in
and
jo
in
adc
cld
out
mov
nop
rcr
call
sub
mov
sbb
lea
mov
outsl
cmp
sbb
jle
or
popf
cmp
les
push
jb
fadds
adc
sbb
push
into
les
hlt
loopne
sahf
mov
xchg
mov
cmpsl
mov
pop
add
jnp
jl
mov
or
popa
imul
je
mov
ss
repnz
ds
addr16
push
push
jae
inc
xor
loopne
push
sbb
push
xorl
mov
xchg
push
ret
popf
lcall
scas
xchg
xchg
or
sub
mov
push
stc
ret
lods
cltd
or
xchg
sbb
dec
mov
xor
test
mov
xor
sub
lods
or
dec
xchg
lock
mov
ss
mov
dec
lock
pop
mov
loopne
or
inc
pop
mov
jns
enter
add
mov
and
call
fsubr
ds
sbb
daa
xchg
int3
dec
push
out
shr
jae
xor
xchg
xchg
lret
or
push
push
jno
inc
mov
mov
fs
rcrb
addl
jmp
divb
jbe
mov
jle
mov
and
push
xchg
push
adc
cs
test
inc
or
mov
icebp
sbb
push
cli
cmp
cltd
xchg
push
jbe
das
lock
loop
fstpl
lock
fistpll
jne
and
dec
into
cmp
mov
popa
push
xor
sti
cmp
mov
pop
inc
ret
mov
push
mov
jl
ss
test
outsl
add
mov
loopne
mov
std
aaa
xchg
mov
in
xor
mov
in
lahf
and
test
out
dec
adc
push
jge
fidivl
mov
add
nop
cs
mov
jae
jnp
fsubr
lcall
les
daa
int
fidivs
aad
aaa
pop
cmp
ljmp
mov
push
aaa
pop
sbb
int3
dec
inc
out
mov
pop
xchg
fisttps
sarl
xchg
dec
push
daa
xor
jge
sbb
mov
xor
mov
mov
mov
or
adcb
dec
popa
mov
je
push
sbb
gs
cwtl
sub
sub
sahf
hlt
es
shlb
jecxz
xor
pop
mov
dec
push
inc
cmp
rol
mov
gs
hlt
dec
cs
cli
adc
mov
cmp
pop
jae
inc
fs
xchg
pop
xor
mov
xchg
arpl
es
push
mov
js
adc
cmp
cmp
ret
push
jl
sti
add
mov
pop
loopne
adc
mov
dec
mov
addr16
jb
and
jmp
aaa
jae
mov
sar
mov
lock
sbb
adc
mov
dec
cltd
cmp
mov
cmp
jle
dec
sti
pop
std
mov
push
push
in
cmp
mov
sbb
iret
cmp
imul
mov
hlt
fnsave
xor
out
add
out
add
sahf
cmp
add
rol
pop
pop
pop
vdivss
sub
jae
sub
and
cmp
jo
dec
xor
cmpsl
test
xor
and
sub
jmp
lds
addl
adc
fiadds
pop
fwait
xlat
mov
xlat
add
lret
insb
ljmp
add
in
mov
mov
int
cmp
rcl
jae
insl
cmp
pop
fistpl
xor
xchg
clc
cmc
imul
cmp
sarb
lods
inc
iret
dec
rol
mov
mov
jo
into
sbb
mov
cwtl
and
cmpsb
lock
push
adc
sub
iret
pop
push
std
xor
popl
lods
fisubl
mov
ljmp
push
push
rcrl
xor
mov
aad
add
mov
lahf
cwtl
cmp
sbb
insl
imul
add
push
or
sti
dec
add
gs
inc
imul
inc
cwtl
rclb
cmpsl
dec
cld
xor
lahf
je
pushf
mov
nop
or
out
pop
aam
aad
push
stc
lods
movsl
xchg
pop
sbb
test
pop
jne
loopne
mov
inc
dec
out
adc
and
dec
sbb
adc
and
push
sbb
aaa
movsb
cmp
push
mov
pop
mov
dec
test
fiadds
aaa
ret
mov
cmovs
test
xchg
xchg
roll
out
mov
sbb
fists
ss
movsl
or
sub
xchg
or
fdivl
je
cmp
insl
mov
mov
push
mov
sbb
dec
sbb
in
leave
test
test
cli
inc
stc
test
mov
cmp
pop
inc
xchg
lret
lods
loop
xchg
fsubs
jg
xchg
sbb
push
pop
int3
aas
imul
add
or
mov
inc
adc
add
sub
jl
cmp
dec
dec
mov
js
xchg
test
stc
fcomp
bound
out
jecxz
repnz
lahf
sbb
subl
mov
ret
test
mov
scas
out
xor
pop
cmp
sub
mov
dec
inc
push
dec
rol
mov
adc
test
xchg
iret
mov
jo
mov
mov
out
inc
sub
fcompl
cmp
dec
push
xchg
sbb
sub
int3
sbb
fimull
cmp
js
dec
aas
insl
test
push
dec
sbb
sbb
pop
and
ficompl
mov
pop
push
add
xor
xor
jge
ret
or
insl
xor
in
or
push
jmp
inc
outsb
lret
sub
push
leave
out
out
rcll
mov
jb
inc
xlat
sti
lds
icebp
rolb
ret
ret
sahf
fs
pop
fstpl
mov
sub
add
xchg
aas
mov
dec
mov
xor
xchg
and
jnp
mov
jle
ret
les
imul
add
push
cmpsl
clc
pop
test
and
iret
bound
cmp
and
rol
sbb
out
movsl
nop
xor
pop
lods
popa
sbb
lcall
test
and
jns
stos
mov
sub
movsb
jmp
lods
pop
mov
aam
cli
cmp
cmp
daa
or
daa
xor
bnd
pushf
repnz
adc
jnp
cmp
add
mov
adc
inc
or
and
lods
inc
stos
stos
jno
xor
in
clc
jmp
sbb
pop
xchg
jg
shll
mov
scas
cmp
movsb
in
push
xchg
mov
iret
jle
push
xlat
das
adc
out
hlt
leave
jg
sbb
adc
int
mov
cmp
rcrb
sub
lds
sub
add
xchg
and
xor
mov
test
jnp
adc
js
movsb
adc
out
xchg
clc
xchg
clc
pop
int3
mov
clc
and
pusha
scas
mov
xchg
cmc
add
std
cmc
inc
rorb
pop
jb
xor
out
mov
mov
dec
iret
cmp
jl
add
jmp
sub
scas
adc
mov
and
fwait
xor
xor
jle
mov
adc
sub
dec
mov
call
or
outsl
jae
jne
xchg
push
int3
cmp
enter
aaa
in
jns
popfw
into
mov
cltd
jge
nop
fistpll
sbb
add
jae
mov
test
sub
decb
fstl
loopne
and
inc
ljmp
xor
add
ja
mov
inc
xchg
lahf
dec
adc
jo
popa
in
mov
movsl
mov
jle
mov
out
inc
stc
aaa
adc
pusha
pop
insl
xchg
test
push
cmc
xchg
lock
push
aaa
stc
xchg
mov
fiadds
fwait
xchg
jo
add
cmp
fwait
sahf
sbb
arpl
jmp
sub
bound
inc
push
mov
dec
add
xchg
xor
sub
cmp
mov
mov
cs
dec
jb
rcll
and
jae
pushf
ljmp
out
addr16
cmp
insl
rclb
inc
xor
xlat
ret
or
mov
sbbb
loop
adc
push
es
ficoml
jnp
pop
xchg
rcrb
pop
movsl
inc
jge
xchg
aaa
jb
shr
pop
push
sbb
sbb
cmp
lods
mov
or
inc
inc
mov
repz
and
jo
xchg
inc
jo
mov
arpl
stos
push
or
fstpt
les
dec
xchg
cmpl
sbb
adc
pop
out
add
lahf
cmp
dec
lds
sbb
ljmp
out
shll
sub
js
repz
hlt
pop
cs
mov
sbb
and
mov
into
dec
bound
jp
jbe
mul
outsb
std
pop
or
cmpsb
xorb
hlt
mov
in
enter
fnstenv
test
inc
push
rorl
pop
fisubrs
in
mov
sub
xor
syscall
imul
mov
daa
adc
repnz
ja
push
mov
pop
daa
imull
push
sbb
int
sub
adc
ret
jmp
outsb
jne
fcoms
add
clc
shl
push
pop
movsl
fwait
dec
jle
cmp
sarb
mov
daa
incl
jo
dec
cmpsl
mov
sti
ds
and
mov
cld
pusha
sub
test
mov
or
adcb
xchg
roll
inc
inc
hlt
and
xchg
push
xchg
push
cmp
and
jo
jge
push
pop
sub
jge
xchg
push
push
xlat
ret
xor
clc
sbb
cmpsb
dec
inc
out
add
addr16
mov
adc
into
test
dec
adc
or
dec
push
sarl
and
scas
xor
fdivl
adc
mov
xor
dec
lods
orl
iret
inc
ret
mov
inc
add
sarb
pusha
xchg
lcall
mov
xchg
cmp
fildl
sub
inc
std
movsb
jmp
add
test
jno
jo
mov
pop
add
cmp
loope
int3
dec
int
push
xor
rolb
or
rcrb
test
pop
ret
jecxz
cmp
enter
leave
add
inc
out
or
fcompl
push
xorl
sub
push
inc
hlt
dec
jmp
push
mov
ljmp
call
mov
cli
and
or
lods
xchg
sub
push
mov
cmpsb
loopne
lods
inc
mov
pushf
inc
jl
ret
xchg
mov
aas
cs
push
lahf
or
push
leave
xchg
arpl
cmp
cltd
outsb
aas
outsl
mov
xchg
lahf
data16
pop
push
inc
and
sarb
cmp
dec
add
mov
andb
sti
dec
push
cs
jbe
mov
setge
pop
inc
pop
pop
mov
sbb
mov
leave
ret
sub
push
jb
stos
inc
cmp
dec
inc
cmp
mov
dec
int
outsl
aad
addr16
mov
or
mov
cmp
sub
pushf
xor
cltd
testl
add
push
lods
push
cmc
lret
jp
pop
pushf
xchg
adc
call
mov
shrl
xchg
add
push
int
loopne
pop
call
cs
js
outsl
int3
push
loopne
in
int
mov
mov
pop
out
adc
sarb
mov
jne
je
sti
arpl
les
out
orl
dec
into
xor
test
sbb
and
mov
scas
or
test
sub
adcb
xor
das
ss
dec
adcl
in
mov
jle,pt
pop
dec
imul
iret
rolb
insl
loop
pop
scas
paddb
rolb
sbb
aas
xlat
xor
popa
xchg
or
or
jge
dec
cltd
pop
cmpsb
data16
or
cs
out
fstl
out
mov
dec
ljmp
dec
jg
pop
lahf
insl
scas
mov
inc
xlat
pop
lret
imul
jns
jo
and
cli
cmpsl
lea
mov
ljmp
push
mov
and
sub
scas
dec
stos
inc
rorl
aad
imul
fwait
inc
mov
out
es
pop
lods
lcall
repnz
jo
push
add
adc
fcmovnu
test
pop
push
negb
sbb
xor
mov
sub
ja
push
fwait
ret
xor
cmp
sub
js
aaa
xchg
jl
movhps
cltd
mov
mov
lock
push
jl
sahf
rcrb
into
and
jnp
nop
lods
push
icebp
andb
or
clc
gs
mov
sbb
jnp
or
mov
ja
lods
inc
je
adc
and
add
jecxz
scas
mov
dec
stc
xchg
out
daa
dec
sbb
inc
out
int3
and
cmp
jmp
iret
rcr
xor
cwtl
or
mov
mov
sub
subb
data16
mov
inc
imul
out
push
and
and
inc
jl
xlat
jl
cmpsl
pop
es
aad
outsl
and
insl
xlat
and
adc
cmpsl
push
pop
mov
sbb
mov
push
and
out
pop
dec
arpl
dec
clc
fadds
cmpsb
je
cmp
mov
pop
les
cltd
out
lods
jmp
xlat
and
je
inc
pusha
mov
sti
inc
jle
jae
mov
pusha
and
pop
lahf
cli
xor
rorb
fstps
cmp
push
push
test
or
ljmp
cmp
shll
stos
mov
popa
jno
orl
in
push
lods
pop
ljmp
fcomps
add
mov
push
js
lock
push
cmp
mov
fsts
mov
bound
rcrl
fwait
sbb
pusha
xorl
push
jge
fidivrl
xchg
mov
add
idivl
mov
mov
dec
sub
ljmp
dec
dec
test
popf
mov
cmp
ret
je
dec
mov
mov
fs
sbb
or
mulb
mov
xchg
xor
lcall
xor
out
scas
test
sub
jb
ror
add
loope
push
dec
inc
sub
mov
lahf
adc
fists
xor
push
scas
test
cmp
jmp
pop
fwait
mov
sub
adc
mov
lret
adc
test
pop
sub
adc
jbe
es
mov
xor
stos
cmpsb
jg
fistl
sbb
pushf
dec
flds
or
adc
daa
inc
xor
mov
pop
add
scas
loop
rolb
pop
test
cli
ja,pt
mov
mov
mov
xchg
imull
cwtl
mov
ljmp
push
dec
popa
int3
pop
jo
pop
mov
jp
sub
adc
mov
fldcw
pop
or
nop
mov
jo
xor
inc
call
orb
out
sub
pop
xor
cmp
and
test
mov
mov
test
iret
mov
ret
testb
or
sub
sbb
out
imul
loopne
sub
shll
adc
mov
stos
mov
aad
dec
nop
jnp
inc
fcmovb
inc
adc
lea
gs
pushf
stos
dec
push
jecxz
daa
adc
and
jae
into
add
pop
cltd
sub
dec
push
orl
mov
je
lea
xchg
out
call
dec
cmp
rcr
nop
dec
fs
cmpsl
xchg
mov
pop
in
push
pop
sbb
adc
xor
clc
mov
push
push
cmp
addb
or
mov
inc
dec
mov
pop
push
lock
repz
jmp
cli
cmp
dec
sub
or
pop
xor
jmp
jge
lock
shlb
or
dec
sahf
pcmpeqw
adcb
cmp
mov
and
jo
xor
enter
mov
xor
dec
mov
dec
insl
pop
js
pop
cmpl
test
lods
dec
mov
rorl
sbb
cld
stos
pop
insb
into
dec
shrb
dec
jns
fnstsw
and
lcall
rcrl
cltd
push
imul
cmp
pop
test
push
jg
outsl
out
addb
out
stos
mov
ss
je
rcr
cmp
cmpsb
pop
push
cmp
push
jo
lahf
pop
scas
xchg
cmp
je
adc
dec
test
and
mov
xor
loop
rorb
cltd
fsubrs
cmovl
loope
cltd
adc
pop
hlt
push
or
cli
shlb
in
inc
push
aam
push
in
xorl
dec
jecxz
xchg
and
mov
jl
js
mov
into
xor
cmc
inc
inc
inc
mov
shlb
xchg
scas
or
jnp
scas
mov
mov
sub
xchg
cli
lret
sub
pushf
test
movhps
lods
sub
cmp
fcoml
push
add
sbb
push
push
mov
xchg
aaa
pop
popa
rcl
test
push
fisubs
mov
aad
rcrl
fwait
add
jbe
sub
xchg
loop
xlat
pop
gs
test
mov
dec
shlb
mov
xor
mov
jg
adc
mov
push
lock
xor
cwtl
outsb
jmp
repz
pop
sbb
in
sbb
enter
pop
test
sbb
inc
ljmp
ljmp
jge
xchg
push
pushf
mov
and
inc
cmc
imull
punpckhdq
pop
xor
fimuls
les
mov
insl
addr16
lock
sbb
xchg
cmp
outsl
pop
or
push
lahf
inc
int
outsb
xchg
push
mov
jns
push
xor
clc
sbb
push
ret
leave
sbb
out
cmp
imul
cmp
xor
adc
hlt
and
push
sbb
lods
nop
cmp
dec
and
scas
stos
add
test
pop
rcll
mov
je
mov
shl
push
cmp
pop
mov
icebp
add
stos
lods
fsubl
cmp
aad
sbb
jnp
add
push
fidivrs
push
adc
call
cwtl
daa
outsb
mov
sbb
mov
stos
cmpsb
mov
jb
mov
jno
ljmp
mov
and
sub
pushf
or
jae
das
inc
orb
mov
xchg
push
adcl
ljmp
pop
mov
jmp
paddusb
aas
cmp
push
jne
add
push
jns
loopne
jb
lcall
insb
ret
out
js
imul
test
adc
jns
cld
lahf
or
push
adc
mov
mov
mov
stc
adc
xchg
leave
pop
mov
jae
test
adc
add
loope
mov
repnz
push
xchg
pop
bound
jp
and
imul
add
sbb
and
xor
xor
imul
jge
push
out
out
mov
fcmove
or
fadds
mov
cmpsl
icebp
call
popa
mov
fdivrl
xchg
shlb
notl
mov
cltd
popf
adc
outsb
pop
inc
push
pop
outsb
pop
dec
ljmp
push
clc
adc
mov
cmpsl
add
mov
loopne
jnp
xor
dec
int3
mov
mov
cmpsb
aam
sbbb
mov
leave
push
sub
int3
dec
jb
out
test
rclb
mov
xchg
sbb
jp
mov
mov
adc
and
dec
cld
pop
jl
push
and
cld
cmp
repnz
xor
adc
clc
push
int3
dec
lods
sub
pop
imul
dec
sbb
mov
mov
pop
lret
mov
add
cwtl
push
fcoms
cmpsl
leave
pop
xchg
mov
mov
mov
or
shll
jge
or
lock
clc
push
imul
push
mov
sbb
push
mov
bound
pop
arpl
shll
popa
jns
js
mov
psrlq
push
cmp
inc
cmpsb
sub
push
and
fisubrs
ljmp
sahf
test
jg
xor
je
pop
xor
popa
push
in
cmp
xor
sub
xor
and
adc
dec
jb
loope
mov
mov
cmp
and
out
pop
push
mov
cli
jg
shlb
xchg
scas
ss
dec
fnstenv
inc
add
outsl
jns
cmpsl
ret
and
mov
jp
xlat
test
aas
dec
adc
aaa
inc
mov
inc
rcl
jnp
mov
jne
shrb
lret
adc
cmp
movsb
pop
andb
stos
mov
repz
jp
push
mov
pop
loop
mov
cld
adc
sub
jno
testl
ret
cmp
mov
in
sbb
out
sbb
mov
pop
push
xchg
add
mov
dec
fdivl
adc
leave
cltd
or
add
in
in
pop
fiaddl
inc
ja
xor
iret
pushf
mov
xchg
push
outsl
pop
enter
sarb
pop
insb
xor
jb
jmp
lods
lds
aas
jbe
enter
jecxz
sub
ss
adc
inc
lods
fidivrs
cmp
push
sbb
shr
addr16
push
pop
cmp
out
pusha
pop
sar
pusha
lret
subl
inc
jg
and
ficoms
es
in
xorps
jnp
loopne
enter
push
xor
xor
mov
add
add
cmpsl
cmp
cld
mov
lods
outsl
inc
arpl
add
cli
repz
push
or
mov
inc
lds
xchg
pop
aam
pushf
fstpl
jno
pop
popf
aam
rcrl
cltd
cmc
mov
mov
ds
popa
and
arpl
test
mov
adc
popa
out
or
mov
addr16
rcr
lock
xchg
fsts
mov
pushf
mov
xchg
mov
inc
in
out
in
push
fstpt
cmc
mov
xchg
or
sahf
shll
jnp
push
dec
push
xchg
cmc
imul
push
das
mov
dec
and
pop
call
mov
and
mov
imul
pop
mov
es
inc
mov
sbb
mov
push
daa
lret
mov
pop
jl
les
ljmp
xlat
cld
les
jg
clc
xor
ljmp
dec
mov
push
jp
lds
sahf
into
cmp
adc
test
xchg
push
ss
popa
test
push
pusha
add
andl
add
lods
cmpsb
push
pop
and
pop
cwtl
xor
ud0
jno
push
jg
fisttpll
fcmovbe
lahf
dec
test
and
lods
cmc
pushl
push
jb
inc
sub
rolb
jnp
cmpsb
xlat
mov
hlt
packssdw
or
pop
push
rcrl
inc
jg
les
push
mov
lods
pop
ja
cmpsb
sbb
mov
and
jecxz
movsl
leave
hlt
add
cmp
shll
jbe
jl
push
mov
gs
sub
scas
insl
mov
popf
rcll
test
add
pop
mov
inc
sbb
aaa
inc
loop
imul
sub
and
pop
addb
pop
movsl
sbb
mov
pop
lret
cmp
loop
decb
loope
add
mov
shrb
pop
lret
das
mov
enter
or
xchg
xor
or
sub
cli
adc
int3
jecxz
dec
into
jecxz
jecxz
xchg
and
and
jns
jecxz
nop
sbb
xor
push
dec
or
inc
hlt
hlt
add
shrb
xchg
ja
fmuls
popf
add
or
or
dec
fsubl
and
stc
fmulp
cmp
pop
or
xor
fcompl
or
movsb
cmp
nop
es
mov
mov
loopne
outsl
out
ja
fdivl
sub
testb
pop
imul
outsb
xchg
mov
and
mov
pop
sti
adc
or
pushf
lcall
mov
mov
pop
scas
or
fbstp
inc
pop
fcomps
ss
mov
push
xor
notl
lcall
sub
roll
addl
pop
mov
dec
add
mov
iret
cwtl
fsts
ljmp
jge,pt
test
jp
push
mov
cmp
pop
es
jnp
js
stos
mov
mov
int
nop
aas
jne
or
mov
std
xchg
rcrl
inc
jne
sub
mov
movsl
fists
nop
mov
je
jecxz
push
xchg
mov
loope
scas
mov
dec
inc
pop
pop
mov
shl
out
std
sarl
adc
int
pop
int3
dec
out
scas
push
xor
ret
pop
mov
xchg
mov
and
sub
stos
clc
inc
mov
pop
cld
cs
mov
int
xchg
ja
cmc
jb
xor
cld
fisubl
fcompl
pop
or
or
pop
adc
jl
adc
jmp
sbb
bound
fimuls
ficoml
rcl
cli
addr16
jp
sub
xchg
je
sub
inc
lret
mov
push
pop
jae
es
add
mov
push
push
leave
mov
scas
aas
push
pusha
test
push
rol
push
xchg
push
lods
fiaddl
data16
and
fisttps
test
shlb
jp
test
test
lcall
jge
shlb
inc
adcb
cmp
cli
imul
repnz
call
js
ud1
bnd
iret
push
std
out
std
jge
push
pop
test
mov
jo
or
add
push
lcall
and
add
xor
adc
mov
jmp
scas
popf
imul
sbb
ret
jo
xchg
mov
mov
lahf
ja
scas
sbb
insl
sub
vpacksswb
daa
popf
push
jg
sarl
sub
out
fs
dec
test
lahf
ret
jg
push
or
dec
ret
mov
jae
fs
push
adc
lods
push
xlat
ret
lahf
cmp
pop
jecxz
subl
or
lods
mov
out
imul
push
aad
repnz
inc
lahf
sbb
mov
add
xchg
xchg
or
push
sar
test
lods
mov
add
push
lock
xchg
add
sbb
sahf
xchg
popf
cli
xchg
outsl
subl
pop
aad
imul
mov
stc
and
test
out
jl
push
jmp
pop
add
shl
aam
roll
sbb
sbb
gs
movsl
nop
scas
cmc
movsb
outsl
fsubrs
jne
mov
mov
fdivl
push
mov
inc
adc
rorb
mov
mov
shlb
add
test
outsb
dec
std
jbe
cmc
cmpsl
jne
and
int
mov
jge
xor
xor
adc
dec
cmp
jns
out
repnz
cmpsl
pop
adc
movl
xchg
xchg
pop
ret
into
fcmovbe
sahf
xchg
inc
pop
adc
dec
xchg
mov
scas
imul
xchg
iret
sub
es
mov
adc
lret
bound
sbb
shrb
push
xchg
adc
sahf
sub
and
push
or
xor
popf
inc
dec
in
sbb
jbe
lods
cmp
mov
and
or
push
sub
or
cmpl
add
pusha
jnp
clc
inc
push
shll
dec
iret
xor
es
inc
pop
lret
hlt
xchg
cmpsl
dec
jecxz
cmp
loope
add
imul
mov
int3
outsl
pop
je
dec
xlat
enter
rcll
fwait
add
sub
jmp
jbe
ret
xor
orl
xlat
mov
fmuls
ficoms
popa
call
adc
xor
imul
in
inc
in
lret
popa
loopne
add
cmp
ror
xchg
xchg
push
jge
sti
popf
or
fidivrs
jp
popl
jne
dec
sbb
push
pusha
sub
inc
jmp
das
sbb
hlt
inc
jmp
and
pop
xor
and
xor
dec
cmp
push
test
mov
lcall
aad
bound
adc
lea
mov
idivl
sub
jmp
xchg
sar
adc
outsl
xchg
ja
outsb
mov
lret
or
shll
cli
xor
mov
imul
jbe
jecxz
into
cld
jl
rep
push
cmp
push
das
xor
push
aaa
cmpsl
cmpsb
xor
testb
aaa
hlt
fs
adc
add
dec
clc
pop
jae
and
xchg
sub
xor
and
in
in
out
push
add
lds
hlt
xor
xorb
add
pop
scas
jo
pop
xchg
fadd
aam
dec
pop
add
aad
subb
into
out
xor
and
out
andb
lock
lock
mov
dec
lret
dec
jmp
cmp
sbb
sbb
lea
sbb
out
jb
push
rep
mov
sbb
push
cmp
pop
in
xor
nop
or
sarb
lcall
es
hlt
lahf
sbb
pushf
mov
cmpsl
icebp
cmp
xchg
sbb
mov
cmp
cmp
aas
mov
or
pminub
xchg
or
ds
cmpsb
xchg
xor
adc
addb
dec
inc
icebp
mov
mov
imul
and
insl
gs
mov
pop
arpl
popa
add
add
add
cmp
insl
andl
ss
in
gs
cmpsl
clc
jbe
push
stos
sub
jbe
xchg
push
lcall
mov
mov
lahf
ret
out
sbb
push
cmp
xor
jmp
cmp
das
dec
cmp
iret
xchg
fidivrl
mov
nop
pop
push
pop
adc
jne
negb
daa
aad
cmp
mov
inc
adc
repnz
cltd
fstpt
movsb
or
mov
mov
out
repz
xrelease
test
xchg
xor
mov
add
jno
shlb
jmp
fidivrs
add
jecxz
ja
inc
pop
sbb
xlat
clc
test
pop
jae
mov
lret
xor
dec
stos
out
pop
mov
add
outsl
or
pop
cmp
stc
push
cli
xchg
movsb
lds
aam
push
lret
dec
pop
adc
leave
inc
sub
aas
sub
in
mov
push
outsb
mov
scas
in
iret
dec
xchg
sbb
push
es
push
ret
mov
jae
das
xchg
cmp
add
and
int3
lcall
pop
lret
lret
arpl
mov
mov
shl
stos
dec
fucomp
pop
dec
lods
mov
or
imul
dec
cmp
mov
jbe
pop
jle
mov
pop
ljmp
push
rolb
dec
pop
mov
sbb
mov
cmp
xchg
leave
leave
adcb
jecxz
test
out
addr16
imul
not
add
jle
inc
lock
aaa
imul
xor
out
leave
cmp
mov
cld
pushf
popa
test
ja
sub
ror
mov
mov
push
std
mov
mov
xor
mov
mov
dec
mov
enter
add
ret
imul
mov
scas
stos
pop
push
jno
out
stos
mov
cmpsb
repz
inc
or
sub
sbb
test
sbb
in
jnp
icebp
pop
jbe
in
testl
push
mov
xorb
insb
sbb
ret
push
test
pop
sub
sbb
aaa
adc
dec
sub
cmp
inc
stc
stc
xchg
add
int3
imul
jge
push
std
mov
xlat
test
test
dec
cmpsl
and
gs
imul
add
scas
aaa
sub
adc
loope
xor
ret
xchg
and
or
mov
jne
push
iret
inc
add
pop
xchg
cmc
in
jne
adcl
dec
popa
lret
fdivs
mov
stc
xchg
bswap
sub
lock
push
mov
scas
or
jl
jo
frstor
hlt
enter
imul
inc
xchg
pop
dec
sub
loopne
into
daa
imul
fldt
inc
xor
xchg
les
mov
pusha
loope
cmp
leave
in
sbb
jecxz
lods
cmp
stc
and
sub
or
inc
or
test
sbb
pop
lea
lea
test
or
arpl
mov
xor
pop
fistl
movsl
adc
cmp
stos
loopne
scas
dec
stc
pop
sbb
ret
lret
test
jns
push
pop
sarl
sahf
imul
movsl
sbb
dec
mov
ret
pop
push
imul
into
cmp
xchg
outsl
popl
sub
movl
mov
repnz
ss
add
sbb
ja
lret
icebp
jno
pop
mov
adc
xor
mov
jmp
test
jno
cld
inc
movsb
mov
xchg
mov
dec
jle
pop
cmp
jg
cmp
sub
addr16
aam
and
mov
lea
mov
pop
and
stc
mov
push
loop
lods
divb
and
mov
stos
add
rol
mov
inc
and
push
sbb
out
jg
pop
loop
aas
xor
push
cli
xor
sub
test
sub
and
or
pushf
xor
or
shll
fwait
ja
mov
sbb
add
hlt
cltd
mov
rcrb
sbb
sbb
inc
sbb
lcall
test
sbb
xor
push
aas
jg
nop
je
lret
cltd
movaps
sar
pop
push
sub
pop
mov
xor
lret
push
sub
adc
mov
imul
and
mov
or
xor
push
sahf
sarl
push
inc
lea
adc
or
repz
ja
mov
jns
popa
in
sub
inc
test
push
push
clc
andb
pop
sub
leave
cmp
or
orb
jae
fisubrs
out
fisttps
daa
orl
into
sbb
dec
jecxz
outsb
into
das
pushf
sahf
mov
fimuls
cmp
push
xor
negl
mov
dec
push
push
mov
std
pop
outsl
push
fcompl
push
sub
arpl
xchg
jns
dec
jno
and
mov
fldt
cmp
xchg
or
lds
mov
test
ficoml
dec
push
enter
inc
movsb
sahf
pop
mov
aad
fs
adc
cmp
fadds
shll
sub
or
insl
shrl
xchg
push
ficoms
mov
insl
mov
jle
mull
adc
ret
jae
jne
dec
pop
cmp
dec
push
sti
pop
icebp
scas
adc
cmp
pop
roll
lea
sub
lahf
lea
push
divl
sahf
imul
adc
mov
inc
nop
pop
jnp
popf
and
lock
and
pop
jecxz
xorb
scas
sbb
orl
mov
jns
movsl
adcb
xor
in
cmpsl
pop
xchg
es
into
repnz
into
add
mov
mov
sbb
sbbl
push
pop
les
cmpsb
inc
jnp
test
aas
test
andl
sub
or
out
add
pop
add
fidivrs
imul
cmp
adc
inc
sti
sbb
imull
cmp
mov
mov
shr
lds
inc
push
lea
mov
sub
int3
xchg
sbb
push
mov
insl
std
out
push
cld
sahf
addr16
cmp
das
test
icebp
push
push
cmc
and
cmp
mov
jo
xchg
mov
fs
pop
mov
sub
or
cmpsb
pop
fadds
in
cmp
leave
cmpsl
pushf
sbb
jl
rol
out
aam
iret
adc
pop
std
and
jnp
adcl
aam
loop
mov
or
fbld
xchg
daa
jp
rorb
jo
xor
push
popa
mov
fimull
pop
jne
je
jnp
into
mov
call
mov
and
sub
pop
add
test
cmpsl
mov
inc
sbb
push
add
sbbl
ja
repnz
icebp
movsb
pop
in
cmp
fimuls
adc
pushf
outsb
jg
data16
lret
mov
ja
mov
xchg
fwait
test
ficompl
mov
jno
xchg
adc
inc
add
inc
pop
std
call
popa
jle
mov
jge
adc
adc
test
pop
gs
pop
enter
lret
andl
sbb
mov
loope
jno
pop
dec
ds
cltd
ficompl
out
lods
xchg
xor
adc
leave
jne
mov
dec
and
mov
push
pop
rcll
cli
mov
xor
adc
dec
cmp
push
les
scas
imulb
cltd
push
dec
cmp
jae
sbb
mov
scas
pop
mov
push
daa
es
sbb
std
and
popa
mov
in
mov
dec
lret
negl
push
cltd
push
stc
jns
imul
test
push
fcoms
push
movsl
pop
addl
arpl
ja
pop
shr
mov
ljmp
pop
mov
mov
and
fcomps
stos
mov
rcl
sbb
ljmp
sbb
mov
mov
imul
sarl
xor
fcoms
mov
int
les
cmp
test
jg
shl
jb
test
pusha
push
call
pop
inc
loope
dec
pop
inc
loopne
xchg
clc
test
xor
push
ljmp
jb
lds
pop
push
roll
das
mov
mov
pop
sub
add
fstl
imul
dec
popf
out
xchg
xlat
add
inc
das
adc
xlat
enter
scas
xchg
cmpsb
pop
addb
dec
dec
pop
push
adc
dec
sub
mov
test
xor
imul
clc
mov
les
dec
pop
test
faddp
jae
or
xchg
sarb
adc
arpl
and
mov
rol
push
imul
xor
xlat
mov
adc
push
orl
mov
push
pop
xchg
ret
push
ss
pusha
test
aas
adc
add
xor
jp
xchg
cld
arpl
lret
xorl
popf
std
add
add
jnp
cmp
xchg
ret
xlat
nop
scas
xor
sbb
jbe
outsl
and
add
in
mov
inc
jo
xor
fwait
inc
out
hlt
aaa
data16
sub
loop
test
adc
nop
shl
jg
jno
adc
xchg
rolb
and
xor
cmp
jnp
mov
push
imul
ss
push
inc
mov
sti
mov
scas
mov
mov
aaa
pop
dec
fcom
inc
outsb
iret
imul
fidivrl
mov
int
cli
aam
xchg
lret
fistpll
push
mov
mov
xor
mov
and
clc
sbb
rol
inc
jp
int
jmp
scas
rcr
xor
mov
ds
sub
loopne
cmp
jp
push
in
gs
inc
pop
pop
daa
cmc
jg
pop
das
gs
cld
out
lds
cmp
arpl
mov
push
and
xchg
push
cmc
stc
int
loop
movsl
movsb
rorl
mov
cmpsb
and
add
cli
xor
loope
iret
daa
ret
pop
jns
arpl
sub
push
addw
mov
mov
cmpsb
inc
imul
outsb
ret
popa
add
scas
pop
fisubrs
mov
mov
mov
cltd
sbb
loopne
fists
add
andb
in
jl
imul
xor
sbb
sbb
mov
push
icebp
jae
xchg
aaa
mov
pop
mov
aad
mov
inc
in
test
xchg
or
mov
sarb
in
add
lret
jnp
pop
mov
repz
pop
dec
jmp
scas
mov
sbb
mov
clc
xchg
popf
push
fs
sti
nop
adc
rolb
xor
and
sbb
incl
mov
shll
inc
jo
inc
insb
mov
aam
xchg
ds
cmp
push
inc
xchg
icebp
cltd
daa
andb
xchg
jo
jp
pushf
orb
mov
push
sub
dec
jne
or
push
cmpsb
dec
push
jl
jo
adc
aam
xor
in
outsl
pop
aam
leave
aam
aas
jmp
push
pop
xchg
jne
or
fsubs
lret
adc
daa
xchg
js
addl
mov
xor
das
mov
or
pop
out
pop
jns
ja
and
xor
into
dec
sub
xchg
scas
fwait
sbb
push
mov
jbe
and
inc
pushf
cs
jecxz
cld
popa
sub
inc
inc
shrl
scas
hlt
and
vpcomd
mov
cli
mov
es
jb
xchg
lods
insl
daa
push
call
mov
cmp
insb
cmpsl
add
inc
dec
jnp
in
or
es
inc
neg
mov
imul
xchg
push
mov
adc
out
and
pop
insb
cmp
sbb
cltd
xchg
mov
cmp
mov
je
repnz
pop
test
mov
mov
sbb
cmp
jmp
outsl
push
into
adc
jg
push
inc
push
sbb
stos
movsl
bound
mov
hlt
arpl
movsl
out
popf
flds
inc
mov
jbe
clc
add
and
sahf
sbbl
xchg
cmp
adc
mov
popf
adc
pop
xor
jge
or
aad
int3
pop
orb
loope
adc
xchg
inc
cmpsl
push
jmp
push
pop
out
fistps
sbb
addr16
enter
cmc
loop
dec
ss
movsb
xor
rol
pop
imull
xor
popa
jp
cmpsl
in
iret
fistps
notb
ds
rolb
stos
imul
movsb
dec
xchg
jne
push
mov
ljmp
push
cmc
cltd
repz
mov
mov
mov
jns
mov
inc
mov
lret
or
imul
jle
fdiv
test
jnp
insb
sbb
mov
decb
pop
pop
xor
lods
cli
push
xchg
jg
imul
sbb
mov
dec
sub
in
push
scas
aam
xor
iret
push
lret
imul
cmpsb
shr
mov
pop
or
shl
aam
cmp
test
movl
jns
subl
pop
faddp
xchg
aaa
je
xlat
rcll
ss
jo
inc
icebp
and
lahf
int3
jbe
popf
ds
lret
ja
imul
xor
xchg
xchg
fldt
scas
mov
pop
repnz
ret
push
pop
dec
push
xorl
pushf
mov
sub
inc
add
dec
dec
mov
cmp
aas
out
add
sbb
cmpl
in
and
ljmp
push
movsl
ljmp
jmp
sub
icebp
fisubrl
pop
cmp
shlb
xchg
cld
jo
js
outsb
pop
sub
xchg
in
xor
xchg
cmp
mov
fnstenv
mov
pop
add
out
lcall
pop
and
cmpsl
int
xchg
push
pop
dec
cmc
es
test
jmp
mov
sbb
icebp
cmp
fsubrs
add
xchg
movsl
sbb
or
imul
out
andb
xor
adc
rcl
add
hlt
lcall
mov
add
sbb
ret
sbb
daa
fwait
test
jns
xchg
enter
leave
jmp
sub
jl
jp
adc
stos
mov
mov
mov
jp
aaa
mov
rcr
jp
gs
mov
arpl
shrb
sbb
ss
jmp
cld
lods
pop
inc
push
lds
int3
sbb
lods
cmpl
dec
xor
lods
and
push
ret
insl
pusha
bound
jl
int3
xorb
jbe
sub
fwait
pop
fwait
shrb
mov
int3
movsl
imul
mov
dec
aad
je
iret
sbb
cmp
push
cmp
push
or
push
cli
loop
sub
dec
mov
lods
jmp
jbe
xor
sbb
push
and
dec
je
cmp
in
mov
cmpsb
add
mov
inc
mov
addr16
fstpt
push
push
jno
jg
ret
out
inc
push
and
out
fcomps
in
mov
cmp
mov
mov
ljmp
push
mov
mov
aad
xor
mov
repz
ficoms
mov
out
jge
cld
mov
mov
push
pop
mov
cmpsl
mov
dec
lods
popf
cs
xor
push
mov
xchg
add
imul
jae
lahf
mov
dec
out
mov
ljmp
and
sub
insl
cmp
and
dec
shl
pop
fwait
push
frstor
dec
mov
push
mov
and
or
lcall
adc
push
xor
lcall
enter
fsubrl
not
out
jl
repz
mov
jno
jae
pop
inc
gs
mov
lret
out
clc
sub
and
cwtl
jl
dec
sahf
icebp
rcrb
mov
push
clc
mov
push
cmp
adc
mov
dec
jle
imul
cli
pop
sbb
inc
and
bound
enter
idiv
addr16
cmp
inc
sbb
pop
xchg
dec
nop
sahf
or
pop
lret
fcompl
mov
rol
ss
mov
jp
and
cmp
xlat
ljmp
mov
sbb
rcll
push
add
les
loopne
jo
push
add
das
loope
and
stc
outsb
js
jo
in
es
push
popa
push
or
out
nop
inc
rcl
fists
cli
shr
push
cld
or
es
pop
push
enter
mov
lea
mov
pop
stos
jecxz
mov
cmp
mov
xor
pop
fmull
sbb
mov
or
mov
sub
and
pop
xchg
xor
das
pop
idivb
stc
push
ds
jp
mov
mov
ljmp
outsb
push
ds
mov
dec
push
jp
decb
or
mov
leave
pop
fwait
cmp
sbb
mov
fwait
xchg
stc
or
jle
std
fistl
xchg
ja
pop
loop
pop
push
xchg
mov
loop
sahf
mov
mov
xchg
inc
insb
dec
das
inc
pop
xor
loope
hlt
pop
hlt
mov
shr
xchg
addl
jne
popf
sbb
mov
push
or
jne
lea
jle
push
cld
or
sbb
adcb
adcb
hlt
cli
pop
sub
pop
leave
out
xor
pop
pop
push
xor
std
cmc
push
cmp
push
or
loopne
into
jp
aad
loope
outsl
popa
lds
mov
enter
ss
lods
iret
je
adcl
jecxz
ja
stc
movl
arpl
and
dec
mov
pop
pop
add
std
bound
and
ret
imul
out
jbe
dec
sub
mov
cmpl
fistps
cltd
flds
sti
mulb
cli
into
fcomps
mov
aam
xchg
dec
xchg
xchg
mov
adc
pop
flds
add
inc
fcoml
ret
dec
incl
outsl
xor
fmulp
scas
xor
inc
scas
lea
ret
test
ss
jns
loop
cmpsl
aaa
fldl
ret
and
or
pop
dec
mov
es
jl
daa
cmpsb
fs
mov
push
dec
loope
out
add
sub
cltd
pop
mov
jp
mov
push
mov
aas
mov
jge
es
pop
sbb
push
int
dec
std
dec
shl
insl
test
pop
js
and
inc
push
push
adc
test
icebp
fcmovnb
dec
rorb
repnz
and
adc
negl
sub
and
rcl
ficomps
insl
xor
adc
sub
xchg
pusha
stos
dec
test
xlat
aad
adc
fmul
ljmp
mov
mov
lret
mov
lock
dec
pop
add
loope
sub
pop
mov
lds
mov
pop
sub
dec
jae
in
sub
pushf
pop
mov
shl
in
repz
and
inc
or
jne
ljmp
pop
movsl
repnz
mov
stos
sub
push
ljmp
sub
jbe
das
pop
cmp
and
mov
js
mov
cmpsb
mov
in
cmp
ficoms
popf
jle
pop
out
pop
xor
bound
add
jno
sbb
in
jnp
sbb
push
insl
mov
in
sarb
inc
ret
sub
lcall
add
cmp
push
and
orl
sbb
fisubl
push
mull
cmc
ljmp
xchg
rclb
pop
repz
dec
push
inc
cmp
mov
out
add
mov
hlt
jl
rol
cmp
cmc
dec
inc
mov
jae
cmp
xlat
cmp
push
aam
lahf
jo
mov
cld
imul
sbb
xchg
jl
ss
addr16
cmovs
insl
dec
push
mov
outsl
pop
jle
ds
out
shrl
mov
sub
mov
leave
loop
inc
adc
sbb
ja
mov
mov
mov
inc
mul
mov
mov
ret
cmpsb
adc
daa
jo
insb
pusha
mov
aas
dec
lahf
push
nop
vsubps
push
adc
jbe
push
dec
dec
sbb
jne
sbb
movaps
test
sub
xlat
xchg
jmp
xchg
lds
push
dec
loop
add
push
cwtl
data16
push
lcall
arpl
dec
adc
cmpl
scas
adc
int3
add
add
sub
xchg
out
or
jecxz
adc
mov
shll
sub
icebp
call
in
out
movsl
sbb
rclb
xor
lds
jae
stos
call
repz
or
jne
pusha
imul
jae
std
and
nop
or
cmp
mov
mov
mov
push
and
push
push
xchg
addr16
fs
imul
jl
lret
and
mov
mov
pusha
fsubr
inc
shr
cmovs
test
enter
push
in
inc
pop
sub
push
adc
inc
inc
sub
cld
xor
or
adc
ror
icebp
in
pop
ds
in
hlt
imulb
loope
mov
lock
bound
adc
pop
xchg
in
mov
cmp
das
scas
and
pushf
mov
testb
cltd
aaa
leave
scas
add
adc
cmp
das
mov
loop,pn
scas
in
xor
jp
enter
repnz
mov
pop
add
adc
inc
xchg
add
or
scas
push
lret
push
cmp
mov
push
scas
cmpsb
inc
cmp
aaa
mov
cs
push
lret
je
fstpt
stos
rorb
imul
lds
sbb
add
xor
xlat
in
mov
mov
add
or
int3
popa
mov
xlat
test
cmp
scas
and
push
xlat
push
cmp
sbb
add
lock
xor
xchg
loope
into
pop
lret
sbb
mov
mov
loop
mov
in
cltd
out
adc
cmp
decb
mov
icebp
mov
out
xchg
aad
idivl
enter
ret
out
fcmovb
test
sbbb
loopne
add
aam
xchg
stos
xchg
jecxz
pop
sbb
loopne
sbb
adc
out
pop
and
outsl
test
dec
dec
inc
jmp
cwtl
lock
push
add
sbb
ja
dec
lds
mov
loope
fcmovnbe
pop
orb
inc
arpl
psrlq
inc
mov
lahf
inc
lock
sahf
pop
mov
ja
cwtl
cmp
sub
daa
data16
jns
jae
cld
mov
dec
jmp
pop
cs
or
adc
sbb
pop
popa
mov
mov
xor
jg
out
out
xor
repnz
push
aaa
jge
and
clc
push
das
push
inc
addb
push
adc
or
lcall
rorl
stos
shll
push
dec
dec
mov
jp
call
ljmp
mov
lods
xor
cmp
outsb
push
and
jmp
mov
jmp
in
lret
push
mov
or
mov
mov
daa
adc
inc
shr
cli
pop
adcb
in
loopne
or
sub
mov
mov
xchg
repnz
xor
mov
mov
int
dec
cmp
outsb
mov
xchg
shl
push
mov
dec
popf
adc
mov
cs
mov
ss
pop
dec
jne
movsb
out
daa
adc
cltd
mov
sbb
or
stc
dec
aas
xchg
out
lahf
mov
imul
pushf
mov
xlat
sbb
sub
sbb
xor
mov
adc
xchg
xchg
or
jmp
std
and
sbb
int3
testl
mov
out
mov
pop
push
xor
movsl
xchg
xor
push
lret
mov
sub
rol
mov
int
cmpsb
pop
pop
pop
cs
cmc
rcll
hlt
sbb
sub
movsl
out
outsb
movsl
mov
sbb
fwait
lods
ja
dec
pop
sbb
jge
jle
jp
jb
inc
push
data16
bound
or
sbb
out
daa
mov
cli
insb
std
stc
adc
and
cmp
lock
cmp
mov
sbb
or
mov
push
cwtl
fistps
outsb
adc
stos
cmp
dec
mov
mov
ret
fst
adc
out
loopne
mov
add
jmp
movsb
dec
and
mov
and
jnp
jmp
mov
add
clc
mov
into
add
sbbl
push
lods
jb
or
fwait
repnz
or
cmp
or
stos
cmp
adc
or
test
jge
scas
adc
add
lret
shl
mov
rolb
jmp
adc
fwait
add
or
popa
aaa
outsb
xchg
xor
jecxz
sub
fcomp
mov
push
pop
mov
jo
adc
aas
dec
mov
mov
decb
insl
xchg
cmp
add
xchg
fldcw
arpl
adc
mov
cld
cmp
mov
cmpsb
rcl
incl
jecxz
jno
pop
lcall
push
jb
dec
aad
jnp
fcoml
mov
jle
in
dec
arpl
mov
and
lds
adc
mov
clc
leave
adc
sbb
push
push
and
sub
xchg
fucomp
xchg
nop
mov
hlt
jbe
lahf
cmp
test
inc
push
lock
sbbb
fs
inc
lret
pop
out
inc
pop
cwtl
xor
inc
jne
in
mov
inc
adc
shrl
push
sub
inc
adc
rcrb
test
js
stos
dec
out
lret
pop
xchg
das
rcr
mov
shlb
cmpsl
ja,pn
in
stos
rcll
xchg
ss
lods
movsb
ljmp
inc
loop
imul
lcall
add
pushf
cs
data16
rclb
jb
push
mov
popa
jle
jge
pop
inc
lret
int3
cld
push
or
aam
nop
jmp
scas
sub
push
dec
mov
movsl
inc
jmp
and
xchg
movsb
lods
mov
cmp
std
fdiv
mov
rorb
jno
int
dec
and
inc
scas
mov
mov
cmpsl
arpl
sub
sub
out
stos
leave
and
inc
push
js
push
xor
jbe
and
lods
adc
aaa
add
ret
inc
sti
aas
cmp
mov
mov
cmp
push
les
xchg
push
and
stos
mov
xor
jnp
popl
dec
xlat
je
shr
dec
jge
hlt
xchg
adc
jmp
cmpsl
pushw
stc
cld
or
push
dec
js
cwtl
dec
mov
ret
adc
in
popa
xlat
les
push
dec
cmc
adc
sbb
inc
xchg
jge
lods
mov
inc
es
push
and
add
stos
packsswb
inc
mov
adc
sbb
popf
out
cmpsb
or
popf
sahf
cmpsl
repz
es
scas
dec
aam
push
lahf
clc
xchg
inc
jb
add
cmp
outsl
mov
and
pop
aas
enter
or
sbb
out
stos
test
mov
lods
add
and
std
sub
leave
rclb
sbb
call
movswl
mov
insb
jne
sbb
xor
ret
xchg
mov
xchg
dec
jnp
test
cli
jge
adc
lahf
lret
out
es
sbb
inc
sub
lds
ss
add
pop
lea
fistpl
jmp
fiadds
popf
cmp
repnz
data16
ljmp
imul
sbbb
aad
adc
int3
aad
mov
adc
dec
xor
cwtl
mov
test
repnz
sar
pop
push
inc
test
das
lods
testl
fsubl
shlb
aaa
data16
xchg
or
mov
sbb
in
mov
cltd
push
mov
fstl
jne
mov
add
sbb
inc
push
and
fildll
stos
das
out
pop
inc
sarb
out
and
jecxz
cs
push
fsubrl
add
test
sbbl
bound
sbb
mov
fisubrl
xchg
lret
popl
push
mov
sub
cmp
insb
sahf
jmp
ret
xor
mov
mov
push
icebp
dec
fisubrs
int3
pop
in
lret
hlt
ljmp
jl
test
or
addr16
movsl
lcall
sbb
fnsave
es
inc
push
jecxz
mov
iret
stos
loope
addr16
lret
pop
cmp
ljmp
fcomps
cmc
test
rcr
mov
cmp
and
inc
cmp
xchg
xchg
cmp
and
outsb
andl
rcr
js
sub
in
aas
in
pop
pop
push
into
xor
adcl
cmp
xor
mov
cld
jg
stc
push
xchg
aam
test
and
lods
cmp
ds
push
imul
insl
adc
aas
mov
stos
jmp
mov
inc
das
ficompl
push
inc
insl
xchg
sti
inc
push
stos
test
sbb
mov
popa
xlat
incb
dec
mov
lret
std
add
incb
push
xor
dec
pop
pop
ds
sub
mov
ljmp
add
jnp
int3
sbb
icebp
test
add
mov
notb
lea
fdivrl
les
mov
sbbl
cmp
ds
cs
inc
sbb
fsub
imul
mov
shl
shrl
jle
es
sti
mov
ss
subl
and
xor
out
dec
in
sbb
les
sub
stc
dec
xchg
dec
inc
loopne
jmp
movsl
fisubl
imul
lock
xchg
pop
mov
ret
push
std
idivl
add
sub
roll
insb
mov
push
ljmp
xlat
int3
xor
jecxz
aad
rcl
add
mov
xchg
and
cmp
ds
test
mov
ds
push
mov
sti
inc
xor
andl
orb
repz
repz
std
mov
pop
add
inc
mov
pop
cmp
out
push
mov
push
bound
ja
mov
xor
lcall
andb
aas
stos
sbb
or
movsl
shl
lcall
xchg
test
fdivl
std
pop
fsub
rolb
lock
adc
and
aad
inc
lret
call
cld
aad
xor
dec
movsl
mov
jg
stc
test
xor
ja
sbb
mov
mov
orl
ss
fsubl
inc
sti
arpl
test
fnsave
out
insb
cmp
decl
cmp
dec
mov
xlat
adc
and
leave
xchg
xor
idivl
das
scas
sbbb
inc
adc
test
xor
add
sahf
mov
push
fnstsw
sbb
pop
arpl
adc
aaa
sbb
sub
rclb
pop
xchg
daa
fidivl
mov
movsl
or
adc
mov
mov
cmp
mov
outsl
xchg
mov
add
cltd
andl
cmp
adc
inc
sub
mov
jb
and
adc
adc
mov
loopne
gs
push
popf
adc
dec
add
inc
mov
sub
sbb
stos
xor
fisubl
xor
dec
mov
mov
stc
add
mov
je
cli
mov
repnz
push
bound
insl
or
lcall
xchg
xor
fs
mov
ret
popa
shrl
lret
mov
popf
xor
cmp
push
insl
sti
push
icebp
pop
jp
test
or
inc
jge
jmp
repnz
add
pop
add
adc
pop
mov
push
movsb
stc
leave
je
pop
jae
cs
stos
and
cmpsl
or
aas
adc
gs
idivl
jb
jbe
mov
les
lods
xchg
aaa
and
jmp
flds
mov
and
pushf
popa
sub
leave
std
xchg
mov
cmpsb
roll
and
lds
dec
lock
sub
leave
fcmovb
xchg
stos
mov
push
iret
ljmp
pop
cmpb
or
xchg
mov
xor
test
addr16
ror
insb
popf
xchg
dec
lret
xor
and
sarl
jp
ljmp
ja
pop
xor
push
into
out
push
jge
mov
sub
xchg
add
out
jecxz
pop
jle
inc
out
je
mov
scas
outsl
xchg
outsl
and
xor
mov
clc
enter
cmpsb
gs
ret
push
push
subb
cmp
push
mov
sub
cld
and
pop
lret
enter
ja
movswl
mov
xchg
inc
xor
jne
and
add
out
mov
inc
enter
jmp
outsl
mov
lret
jnp
testl
or
fucom
popa
ret
and
scas
adc
test
mull
mov
lcall
cmpsl
push
insl
icebp
dec
adcl
repnz
add
mov
cmp
or
xlat
lds
lea
xchg
iret
loope
mov
cwtl
stos
imul
mov
loop
jne
pop
add
sbb
sub
test
lods
sti
mov
data16
outsb
stos
cld
mov
popa
cmp
or
or
jnp
add
in
add
or
push
or
mov
push
imul
mov
bound
repnz
cmp
mov
imul
lret
fsubrl
rorb
xorb
test
out
adc
inc
xor
xchg
int
mov
out
loope
jnp
dec
dec
add
xchg
stos
sub
cltd
test
mov
in
dec
mov
pusha
das
fidivs
pop
std
or
xchg
add
sbb
rorl
sbb
adc
add
out
mov
shrl
lret
jns
lcall
sub
call
mov
mov
data16
adc
call
push
mov
into
orl
out
and
inc
cmp
adc
mov
jnp
lods
xor
lock
add
add
jecxz
xchg
sub
in
mov
aas
pop
int
jge
jg
aad
fs
add
out
call
inc
mov
pushf
rcl
iret
stos
or
rcr
mov
mov
nop
aaa
fcmovnb
xchg
add
mov
add
rcrb
out
sarb
jno
popa
jecxz
push
icebp
sarl
sti
pop
lods
call
aas
and
push
in
adc
mov
sbb
xchg
pop
loop
cmp
jne
pop
je
mov
cmp
sub
pop
cli
cmp
popf
adc
cmc
scas
sub
stos
mov
pushaw
or
jne
inc
mov
mov
push
inc
xlat
mov
mov
push
and
insw
and
mov
or
stc
cmp
push
sub
mov
pop
cli
gs
scas
insl
mov
dec
mov
mov
push
sti
ret
fcomp
sarb
fnstsw
aas
inc
xchg
jp
inc
test
repz
movsl
insb
fidivrl
sub
bound
jns
test
cmp
sbb
mov
fcmove
sub
mov
sub
pop
ret
adc
test
add
lods
and
xchg
xor
inc
or
fstpl
stc
push
shll
xchg
call
pop
fcoms
ficompl
hlt
fdivrs
cmp
fmull
rcll
in
ljmp
icebp
dec
shl
rorb
pop
out
push
lds
jecxz
jne
xchg
or
or
inc
xor
loopne
jae
push
mov
pusha
imul
adc
gs
dec
cmp
or
xor
sub
pop
fcmove
push
iret
lcall
out
lea
aam
add
fbld
sbb
sub
mov
or
pop
jbe
lds
loopne
in
ds
pop
push
dec
xor
lahf
mov
and
test
fistpll
jnp,pt
mov
sub
ljmp
cmp
aam
and
or
push
fdivs
test
pop
insb
adc
clc
xchg
xchg
mov
jmp
fucomi
ja
add
std
enter
or
sbb
jbe
mov
inc
xchg
cltd
in
divl
mov
xchg
loope
and
jb
cld
movsb
subb
xchg
aad
setbe
add
arpl
and
mov
sbb
mov
pop
std
or
lods
or
push
lock
test
jl
repz
lock
mov
jo
stos
insl
xchg
test
aas
std
pop
xor
or
mov
adc
nop
sbb
rol
lret
xchg
mov
ret
fnstenv
repz
jl
xor
push
dec
mov
pop
aam
pushl
cmp
xchg
loope
and
lea
mov
test
lret
xlat
sub
lret
test
xchg
shlb
xchg
jo
hlt
ljmp
addr16
xor
and
jl
xor
cwtl
lods
test
mov
subb
cmp
push
pop
push
je
pop
into
into
popa
stos
fs
dec
xchg
ficomps
mov
mov
dec
or
notl
lods
in
loop
test
repz
and
ds
mov
mov
adc
mov
insb
mov
dec
mov
lret
pop
and
lret
sbb
outsb
test
mov
dec
and
nop
push
stc
push
sar
int3
les
cmp
jno
or
sbb
arpl
sub
iret
or
pop
adc
xor
adc
adcl
fiadds
nop
je
pop
push
jl
inc
push
aaa
pusha
add
filds
iret
push
ret
push
pop
jecxz
mov
stos
ficomps
popf
roll
popf
adc
jmp
dec
mov
loopne
ret
scas
push
mov
mov
in
fwait
insb
movsl
movsl
or
loop
outsb
xchg
rcl
cmpb
and
lea
inc
sub
jbe
push
inc
scas
inc
xchg
dec
ds
push
or
shrb
push
pop
daa
or
test
popl
inc
adc
mov
mov
dec
imul
push
or
and
push
jmp
aas
popf
cmovle
pavgb
sahf
into
data16
jbe
jbe
sbb
dec
std
fnsave
mov
inc
sbb
test
jbe
mov
pop
xor
das
mov
clc
mov
stc
repnz
push
sahf
mull
mov
fst
testl
inc
dec
inc
mov
mov
leave
push
mov
int
fidivs
lods
jle
test
outsb
out
push
or
mov
fldpi
js
imul
adc
or
sbb
mov
ds
clc
cmpsl
pop
sbb
adc
dec
inc
push
jbe
mov
ficompl
fsub
xchg
das
pop
jl
xor
pop
sub
scas
pop
inc
in
leave
es
mov
or
stos
mov
sbb
or
popf
jae
test
xlat
dec
stos
clc
jo
pop
movsb
cmp
es
inc
int3
enter
and
negb
dec
mov
cmp
jnp
sub
add
jle
test
int3
sti
test
jo
inc
fildl
push
cmpsb
into
mov
push
mov
iret
sbb
out
iret
push
sbb
inc
enter
das
inc
xchg
jp
movaps
clc
lds
dec
out
loopne
mov
jmp
push
rol
mov
xor
push
inc
sbb
mov
xchg
dec
jo
push
adc
sbbb
call
cmpsb
lret
xchg
bound
dec
inc
jns
fs
xchg
fwait
out
cmp
scas
push
rolb
dec
pop
mov
dec
jecxz
pop
scas
stos
fcoms
sub
sub
xchg
adc
jno
lea
adc
cmp
push
xlat
lret
scas
in
sub
cmp
mov
idiv
repz
xchg
out
pop
cmp
stc
adc
sbb
jne
jb
fstl
jno
inc
adc
push
push
insl
stc
inc
stc
shlb
push
jae
or
ja
dec
stc
stc
das
or
dec
lcall
mov
insb
addr16
mov
xchg
push
mov
xchg
sbb
sub
cs
jo
ret
imul
pop
repz
xlat
loopne
mov
andl
sbb
jae
pop
aam
push
cmp
insl
pop
in
sub
inc
ja
in
rcll
or
xchg
sbb
das
scas
loope
mov
xchg
push
sbb
fdecstp
push
fdivs
sbb
or
dec
test
pop
repz
hlt
idiv
push
mov
iret
divl
rcll
repnz
or
loope
dec
popa
paddw
hlt
mov
scas
push
aas
pop
in
scas
sub
outsl
mov
push
int3
or
add
aad
adc
inc
fmuls
daa
sub
pusha
sub
mov
les
nop
push
out
popa
mov
movsb
pop
shrl
mov
ss
add
pop
add
jp
pop
dec
loope
or
push
int3
mov
daa
in
lret
cmp
insb
pop
jmp
add
adc
stos
sbb
rcrl
lods
dec
xchg
pop
add
imulb
jg
imull
ds
insl
mov
mov
das
mov
adc
pop
xchg
mov
addr16
outsl
xlat
xor
jbe
mov
and
stos
pop
lds
in
repnz
adc
cmp
mov
mov
adc
dec
sub
cli
mov
sbbl
test
push
xor
inc
xor
fbstp
mov
int
mov
in
enter
pop
inc
js
jmp
and
les
xor
repnz
es
lahf
adc
and
sub
ret
or
rolb
xchg
clc
jne
fdiv
into
or
sbb
insb
aad
lods
jnp
inc
lcall
out
fs
and
out
test
stos
int3
cwtl
or
ljmp
mov
mov
mov
jne
xchg
lea
lahf
and
lods
sbb
jp
sub
popf
out
xorl
je
pop
dec
jo
inc
jle
test
push
pop
push
inc
push
pop
jbe
mov
mov
sbb
imul
int3
fstps
mov
ficoml
popf
cmp
mov
out
jge
or
and
push
add
xor
adc
and
mov
sbb
hlt
lret
adc
mov
js
push
cmp
push
rcrb
jbe
fstps
xchg
scas
test
cwtl
out
xchg
out
xor
int
lods
and
sbb
adc
push
leave
or
push
add
enter
and
scas
nop
xor
xchg
loope
es
roll
sbb
or
xor
lods
in
js
loope,pn
out
and
pop
cmp
negb
cld
aaa
bound
loop
std
lret
push
fld
in
shll
push
sbb
xorb
das
pop
in
movsl
xchg
sub
popf
shlb
add
ret
popf
shlb
pushf
inc
mov
aas
fs
outsl
dec
sub
add
fxtract
or
and
xchg
push
cltd
test
lahf
scas
in
jg
fildl
sbb
sbb
aad
loopne
ds
dec
std
lds
arpl
cmp
dec
fildll
in
pop
dec
and
cli
pop
test
mov
or
sub
loope
into
or
outsb
lods
adc
and
imul
mov
jne
xlat
mov
mov
in
ss
and
nop
adc
aam
scas
xor
test
orb
cmpsl
gs
dec
pop
mov
pop
mov
or
or
dec
xor
fs
inc
into
repz
ffree
dec
scas
lret
inc
enter
movsb
add
cmp
xor
xor
adc
lcall
jo
mov
pop
mov
sbb
sti
mov
pop
jl
movsl
inc
sub
lods
mov
jno
sti
cld
jmp
and
mov
cmp
pop
sub
xor
imul
xchg
xor
out
sbb
es
repz
mov
les
pop
cmp
xchg
sahf
push
daa
sub
imull
inc
in
push
cmpsb
and
call
and
adc
fwait
push
stos
pop
and
sahf
xchg
push
stc
stc
mov
push
rcrb
lret
xor
imul
cs
xor
pop
xchg
mov
movsl
dec
call
ds
scas
cmpsl
fxrstor
pop
movsb
xchg
pop
mov
iret
je
mov
shlb
and
dec
test
fildll
add
fstp
sarl
nop
jge
cmovo
mov
fimuls
repz
mov
hlt
cmc
ds
xchg
rclb
movsl
movsl
addr16
pop
mov
sbb
in
mov
cltd
xchg
lods
data16
xchg
cmp
lret
sub
ljmp
sbb
sub
mov
push
gs
lret
icebp
sbb
push
push
stc
movsb
movsl
mov
paddd
subb
xor
fcoml
lcall
mov
out
jl
dec
fistl
cli
cmc
sub
xchg
jmp
sub
js
sub
xor
mov
cs
inc
sub
jno
cltd
aad
inc
xchg
mov
and
sbb
and
ret
dec
aas
pop
jmp
jle
ja
addr16
int3
addl
xchg
jge
sbb
nop
sub
jge
and
in
cmp
out
mov
and
test
js
adc
rorl
cmc
cld
jg
mov
xor
faddp
arpl
test
in
xlat
jmp
push
push
jb,pt
mov
out
scas
push
mov
loopne
mov
inc
xor
xchg
bound
mov
pop
pop
stos
jp
mov
mov
out
movsb
sub
nop
pop
into
mov
test
push
insl
pusha
pop
shlb
mov
out
sub
sub
enter
jge
nop
jecxz
jg
mov
js
push
and
push
rclb
popa
sbb
repnz
pop
imul
dec
mov
jns
repz
call
push
js
jmp
cmp
shrl
sbb
aam
push
lcall
xchg
dec
stos
fistps
les
aad
and
mov
cwtl
add
jmp
fwait
daa
jno
sub
and
xchg
push
cmp
out
mov
fisubrs
push
cld
add
jae
lods
fisubl
shld
bound
xlat
sub
in
movsb
push
sbb
push
dec
fs
xor
jb
out
sbb
je
insb
rol
pop
xchg
cmp
orb
mov
dec
cmp
add
sbb
mov
adc
dec
rcrb
fsub
sub
pop
xor
sub
in
repz
jo
sub
mov
push
es
pop
popa
lea
add
add
xchg
and
xor
ljmp
fcompl
sbb
popf
in
mov
cmpsb
adc
daa
adc
and
push
sahf
sysexit
push
push
fsubs
bound
shr
mov
inc
add
enter
jmp
loop
mov
pusha
jmp
ss
out
mov
in
int3
in
adc
cmp
insl
mov
sub
push
mov
stos
xchg
lock
add
jge
sbb
addr16
cmp
popa
add
loopne
jbe
cmp
loope
sbbb
sbb
fdivs
lret
shrl
test
test
sarl
std
mov
lret
imulb
add
divl
mov
lret
mov
mov
cmp
sbb
mull
xor
fldcw
sub
push
fmul
xlat
test
popa
test
arpl
pop
sub
jo
clc
and
andl
add
add
cmp
mov
jecxz
mov
add
in
fucom
dec
inc
mov
sti
inc
sbb
fdivl
push
stos
outsl
daa
icebp
mov
out
bound
jg
outsb
xor
and
int3
pop
aas
push
jmp
adc
cmp
mov
pop
data16
pushl
or
push
jl
pop
adc
adc
iret
icebp
sbb
mov
adc
out
cmpb
mov
inc
lcall
lea
add
mov
out
inc
pmuludq
pop
sub
push
or
sbb
push
jle
mov
push
dec
ret
rcl
jb
lahf
mov
jnp
outsl
int
fmuls
testb
jbe
pusha
mov
pop
shl
mov
push
add
std
mov
test
push
sbb
scas
xchg
sub
daa
xor
push
cmp
xchg
test
cmp
cltd
lods
xor
mov
or
push
push
fwait
dec
sub
out
inc
roll
pop
add
jge
idivb
test
or
inc
stc
popa
mov
sbb
adc
fcompl
in
mov
sbb
push
xor
js
andl
repz
lret
dec
jge
push
jns
push
dec
mov
xchg
outsb
push
or
fstps
and
jns
enter
out
insl
lret
movsb
push
mov
add
pop
pop
mov
add
xchg
popl
divb
mov
sub
sub
dec
je
sbb
out
je
ret
mov
cmp
loope
push
lock
sub
std
or
and
cmpsl
sbb
push
mov
jl
or
sbb
xor
jb
shr
pop
repnz
rorb
cltd
adc
jo
aam
loop
jbe
pushw
xlat
daa
mov
sub
sbb
sahf
push
sub
dec
push
jl
pop
jecxz
orl
mov
lea
popf
sbb
shlb
mov
inc
test
mov
lahf
push
sbbb
fldl2t
les
xor
out
into
xchg
mov
add
pop
in
ss
cltd
mov
sub
mov
into
sahf
push
not
mov
aad
and
int3
mov
adc
aad
in
inc
in
sbb
pop
lods
mov
jo
lods
pop
jl
shrl
fildll
push
or
dec
out
cmp
icebp
inc
xor
iret
stos
jge
scas
sub
mov
push
shll
push
mov
lock
jle
xchg
mov
ficoms
push
int
mov
sub
in
and
out
popa
jg
int3
fisubs
xor
mov
loopne
inc
sbb
enter
mov
mov
decb
ds
iret
jge
rclb
aam
js
pop
cmp
mov
pop
adc
insl
pop
cmp
and
imul
in
pop
mov
xlat
mov
inc
inc
add
test
out
fadds
jae
jae
scas
outsl
jne
mov
xor
mov
dec
add
jecxz
pop
imul
mov
inc
les
jnp
xor
mov
inc
inc
lret
xor
adc
add
add
mov
pop
xchg
icebp
dec
cmpsb
mov
jmp
lret
mov
lods
push
pop
xor
sbb
pop
pushf
movd
sub
push
or
in
ret
shll
push
loop
mov
jae
add
out
pop
jl
lea
lcall
mov
pushf
pop
sub
aas
jno
int3
in
movsl
dec
lds
test
mov
arpl
jle
mov
mov
cmpsb
jo
or
std
fisubs
mov
rcl
bnd
sub
sbb
enter
add
jmp
pop
mov
adc
mov
push
dec
icebp
cmp
cmc
dec
pop
pop
inc
repnz
stos
outsb
cmp
adcb
cmp
xchg
and
pop
jmp
jnp
stos
jg
inc
dec
xor
insb
xchg
xchg
ss
inc
mov
insb
lea
mov
out
inc
lret
dec
dec
test
dec
and
cmp
lret
lcall
dec
pop
xor
loop
ficompl
out
inc
jl
stos
pop
sbb
fcmovb
jo
leave
loopne
test
sub
xor
dec
pop
mov
ljmp
xchg
mov
xor
inc
sbb
lds
into
mov
push
leave
lea
mov
mov
xchg
xor
mov
ret
jnp
push
nop
loopne
nop
scas
jo
out
and
ret
jp
push
icebp
xor
jnp
cmp
jmp
dec
mov
pop
shlb
sbb
jbe
mov
out
enter
pop
dec
dec
inc
cmc
jae
mov
pop
outsb
inc
sbb
lods
xor
daa
xor
cmp
in
pop
insb
mov
ret
add
loopne
pop
call
je
sub
jno
std
addr16
pop
push
xchg
pop
sub
out
mov
xchg
xchg
sbb
inc
sbb
cmc
mov
xchg
ja
movsl
cld
xrelease
je
gs
mov
clc
sub
jmp
cmp
and
gs
mull
lret
faddp
cltd
mov
push
ljmp
rcll
inc
cmp
fnstenv
jp
ljmp
out
dec
pop
pop
push
fldcw
lds
add
pop
repnz
mov
mov
ds
dec
and
lock
orb
pop
mov
mov
mov
adc
push
inc
insl
mov
and
xchg
test
rcll
lock
xor
mov
arpl
div
lods
in
mov
inc
adc
xor
addr16
xchg
and
push
xchg
arpl
push
hlt
xchg
scas
inc
addr16
sbb
pop
leave
aas
inc
xchg
in
insb
add
addr16
sbb
dec
inc
or
xor
mov
sub
cmpsb
hlt
push
out
adc
pop
or
js
push
adc
jo
or
mov
mov
mov
test
push
and
icebp
sub
jl
pushf
adc
and
mov
adc
das
xlat
addr16
jns
pusha
xchg
in
adc
ficompl
jb
fstpl
hlt
and
add
or
inc
insb
in
sbb
lcall
jmp
mov
ljmp
lods
rcrb
cli
loopne
mov
test
adc
dec
push
shl
sub
hlt
push
loop
aas
mov
pop
popa
dec
lret
or
mov
bound
ss
xor
sub
push
xchg
and
sbb
add
or
inc
call
shr
loope
push
mov
pushf
jmp
in
sbb
inc
mov
test
mov
lcall
dec
stos
mov
sub
mov
nop
dec
push
lret
dec
icebp
push
int
xchg
loope
or
divl
je
pop
mov
jo
inc
into
popf
mov
pop
repz
or
lods
jge
add
push
adc
in
shl
stos
dec
std
lret
icebp
xorb
aas
ret
js
fsubrs
mov
shl
dec
dec
mov
popf
mov
jp
jne
je
cmpsl
icebp
fstp
pusha
stos
sbb
iret
jnp
sti
cld
sahf
aaa
jge
jmp
dec
lahf
iret
jb
mov
mov
mov
subb
pushf
outsl
stos
dec
mov
dec
inc
jno
cmp
pushf
jle
in
das
xor
hlt
in
movb
pop
sbb
ret
andnps
push
das
and
icebp
mov
mov
dec
jnp
dec
jne
mov
loop
insl
mov
les
sub
test
lea
push
sbb
fbld
jne
dec
lea
or
cmp
push
mov
test
aam
sub
push
xchg
dec
pusha
sbb
jg
push
movsl
clc
mov
push
inc
in
jmp
cs
out
xor
cmp
ljmp
arpl
lock
pop
mov
mov
mov
insl
xchg
ret
arpl
out
adc
xchg
fisubs
mov
jl
aam
das
hlt
xchg
or
test
xor
fwait
sub
fwait
jmp
xchg
xor
aaa
mov
jae
and
out
sbbl
cmp
push
popa
mov
aam
add
xor
jo
frstor
jg
testl
mov
or
filds
push
enter
jp
js
pop
mov
inc
pop
lods
mov
repnz
xchg
mov
loop
jb
and
das
stos
sahf
push
pop
pop
je
fmul
outsl
push
xor
popf
and
pusha
sub
insb
jmp
pop
popa
inc
ret
daa
add
ss
push
mov
push
aad
arpl
sub
inc
shrb
mov
xchg
movsl
sub
fstpl
fwait
cmpsb
jne
notb
jle
xor
mov
add
mov
or
lretw
test
add
sbb
cmp
xchg
pop
push
dec
pop
mov
add
cmp
fdivrl
lret
cmpsl
cmc
aad
pop
jecxz
mov
mov
aas
aas
xor
adcb
pusha
paddq
fiaddl
add
daa
daa
lret
aam
outsl
movsl
repnz
push
xorb
adc
call
add
insb
pop
dec
mov
mov
and
inc
cld
push
xorb
pop
jno
mov
push
test
cs
pop
je
adc
faddp
cmpsb
lret
mov
test
jmp
arpl
xor
mov
fbld
sahf
push
pusha
cmc
inc
inc
jo
leave
loope
inc
stc
popf
xlat
push
aad
xchg
subb
hlt
mov
or
dec
out
outsb
js
divl
test
fwait
sub
cmp
mov
addr16
jae
leave
mov
jmp
sarl
xor
test
imul
xchg
sub
mov
fwait
shll
push
orl
sbb
jmp
sbb
int
or
cwtl
pop
daa
and
out
jae
sbb
faddl
stos
jno
dec
jne
cmp
inc
jns
fidivl
and
jae
xor
pop
jp
mov
imul
scas
es
adc
fidivl
adc
or
pop
shr
inc
jge
sub
jmp
je
pushf
out
mov
sbb
cs
pop
js
xchg
push
cmp
test
aad
inc
js
and
sbb
push
fbstp
and
pop
sub
cld
and
leave
rcll
mov
sbb
scas
mov
dec
xor
push
out
sbb
jns
inc
cs
or
push
ret
jnp
lahf
daa
rcll
xor
mov
mov
xorl
cmpsl
dec
insb
mov
fs
xor
icebp
out
daa
mov
pop
gs
inc
sub
lret
mov
adcl
adc
fimull
int
inc
ja
mov
push
mov
dec
push
fnstsw
leave
or
bound
daa
int3
mov
es
repnz
mov
dec
xor
lret
lods
lahf
ret
adc
decl
and
xor
gs
addb
mov
or
jecxz
lds
jno
pop
xor
insl
xor
aaa
rcl
lret
xchg
aaa
out
dec
cmpsb
movsb
lods
dec
lea
pop
pop
daa
daa
push
imul
fnstcw
sub
pop
mov
gs
cmp
sub
adc
xor
pop
jmp
stc
mov
movb
nop
es
fidivs
shlb
jle
jmp
push
ss
mov
or
rol
jno
in
pop
fldl
or
or
and
fsubrl
sbb
and
pusha
or
imul
pusha
mov
fidivrs
inc
ss
pop
push
mov
mov
into
sti
je
leave
pop
in
adc
jle
sub
mov
ljmp
fstps
add
out
sbb
lahf
push
jecxz
cmp
std
in
mov
sub
adc
and
pop
fsubrl
stc
movsl
push
add
xlat
loopne
test
inc
je
lea
sbb
inc
push
or
fs
add
xor
repz
push
nop
out
jns
cmpsl
aaa
dec
pushl
pop
add
jo
or
jno
mov
add
pop
aad
add
inc
mov
jbe
cmpsb
daa
fldcw
jge
pop
add
sbb
mov
in
nop
push
push
xchg
xchg
xchg
jp
mov
push
sbb
popa
pop
outsl
rol
cmp
mov
add
push
lock
aas
data16
loope
mov
test
daa
and
int
loop
sub
lock
das
lcall
sbb
jl
lods
test
shlb
push
test
pop
aaa
popa
or
adcb
mov
adc
add
hlt
aaa
cmp
pushf
push
sbb
inc
or
mov
out
in
cmp
add
xor
mov
dec
mov
insb
mov
mov
rorb
push
xchg
leave
mov
pop
mov
mov
push
mov
inc
mov
mov
push
jmp
lds
push
lock
sbb
push
outsb
mov
push
fists
mov
sub
outsb
jbe
je
mov
sbb
push
add
jmp
rorb
xchg
inc
fs
push
out
sub
mov
cmpsb
je
test
add
ss
sbb
loopne
addr16
loope
lods
or
test
push
int3
jne
roll
inc
mov
data16
aaa
leave
repz
adc
fisttpl
aam
jmp
adc
lcall
test
push
jne
lea
test
ljmp
and
and
xchg
dec
shll
mov
adc
aaa
xchg
xchg
rorb
in
aad
imul
aad
and
xchg
lock
xor
xorl
addr16
xor
cmp
shlb
fs
mov
lds
addr16
lcall
push
xchg
fists
xchg
jp
inc
fs
push
cmpsl
and
and
sub
pop
adc
inc
adc
jne
xor
xor
jnp
fbstp
push
es
xor
sub
inc
xor
aad
lock
jne
sub
mov
sub
outsl
add
jns
jns
lcall
stos
ficoml
stos
movsl
in
mov
cltd
inc
cmp
cli
xlat
add
lods
repz
xchg
sahf
dec
cmpsl
jno
jnp
xor
mov
arpl
lds
sub
mov
adc
jne
loope
lea
outsl
pop
sarb
sarb
xchg
push
xor
stos
cmp
repz
push
or
in
sbb
rclb
repnz
or
in
jns
sub
xchg
shll
pop
divb
xor
mov
cmp
aas
cmpb
loopne
add
jmp
mov
mov
js
hlt
lret
mov
jae
mov
icebp
jnp
sub
pminsw
clc
fidivrs
add
jno
mov
mov
cmpsl
inc
dec
daa
or
cmp
dec
jnp
jmp
repnz
out
fwait
mov
push
xchg
js
xchg
xchg
mov
movsb
in
mov
outsb
adc
dec
and
add
cli
std
xor
loopne
int
bound
sub
fistl
pop
dec
int3
fildl
or
push
jnp
cmp
loope
or
xlat
xor
ljmp
mov
into
sbb
cmp
push
arpl
cmc
or
daa
nop
subl
test
and
lock
das
call
test
xchg
data16
ds
cmp
dec
lret
mov
clc
mov
add
inc
daa
fisubs
jge
sbb
jne
pop
xor
cmpsb
stc
adc
int3
mov
pop
xchg
cmp
loope
sti
xchg
in
in
in
shrd
mov
out
movb
push
cmp
popa
sub
fisttps
call
and
lahf
mov
imul
test
pop
test
mov
cmp
fs
sbb
pop
lret
gs
sbb
cmpsb
ffreep
inc
push
test
inc
incb
xor
cltd
adc
clc
scas
sub
xchg
xor
dec
and
xor
rorl
es
jecxz
out
fsubrp
xchg
inc
stos
jnp
out
jle
pop
dec
je
xor
push
mov
shlb
jae
adc
mov
cmp
mov
ret
mov
xlat
pop
cmpsl
and
or
divl
jnp
add
pop
aaa
int
jno
in
out
fcomip
xchg
jb
sahf
std
mov
xchg
xlat
stos
movb
sub
add
dec
xor
jp
xlat
sub
test
adc
loop
and
jno
sbb
inc
pop
mov
rolb
jbe
mov
push
pop
les
out
xchg
fmull
addb
notl
call
les
mov
mov
test
push
rcrl
lods
bound
shlb
jo,pt
jno
pop
bnd
pushf
cwtl
dec
xor
into
pop
xor
bound
mov
fcompl
orb
jnp
sbb
dec
popa
sbbl
mov
pop
mov
je
repnz
mov
cmp
repz
outsl
mov
mov
fwait
cmp
subb
into
fs
cmovae
decb
sub
int3
icebp
out
mov
push
sahf
adc
dec
cs
test
stc
push
add
add
dec
into
sbb
pop
mov
sahf
adc
mov
scas
jae
paddusw
xor
inc
push
push
push
out
xor
jl
dec
jnp
mov
xchg
pushf
mov
cmp
mov
stc
and
fadd
enter
je
mov
lret
mov
jo
push
pop
push
stos
pop
sbb
ret
pusha
adc
cmp
add
xchg
xchg
lret
and
in
loope
mov
mov
mov
insl
pop
call
cltd
enter
pusha
popa
out
bnd
sahf
lret
xchg
push
cltd
jae
add
push
xchg
fbstp
nop
jno
in
dec
mov
pop
iret
rcrb
xchg
loope
je
inc
int3
xor
jmp
xchg
pop
inc
loop
stc
popa
out
dec
fisttpl
mov
sbbl
xchg
mov
sub
sbb
out
mov
lods
mov
test
in
or
xor
sub
or
adc
pop
je
mov
xor
cld
cmp
cmp
int
jns
pop
cmp
lahf
test
in
test
sbb
cltd
adc
das
in
aas
rclb
dec
int
jb
lock
shlb
cmp
loope
fbstp
icebp
sub
jno
shrb
arpl
mov
pop
addr16
shrl
sub
xor
orl
inc
es
jp
push
rclb
xor
jmp
sub
dec
movsb
lea
add
loope
loopne
push
sti
outsl
andb
cmp
mov
pop
hlt
nop
mov
fisttpl
mov
addr16
es
inc
xchg
fstpl
hlt
dec
adc
jns
fdivrp
int
imul
pop
cmpsb
sub
push
rcrb
push
daa
dec
ljmp
jecxz
cmpsl
clc
sub
add
in
addb
mov
jge
ret
lcall
hlt
dec
adc
jno
test
xchg
push
outsb
js
sub
pop
sub
inc
lret
mov
shrb
push
mov
sub
mov
sub
loope
popf
add
jl
pop
movsl
in
sbb
inc
and
lcall
mulb
std
mov
xchg
stc
mov
mov
insl
ljmp
pop
fwait
call
call
loop
lods
movsb
test
test
push
daa
in
cli
mov
fsubrp
mov
lock
push
add
pushf
mov
out
cmp
loopne
insb
pushw
or
xchg
adc
je
in
outsl
hlt
loopne
push
daa
push
fucomip
mov
mov
je
lahf
fstpl
cmpsl
clc
inc
inc
out
popf
dec
mov
test
jo
dec
bound
cwtl
jmp
pop
jmp
pop
push
push
mov
pop
jl
sub
dec
test
arpl
mov
sbb
popa
mov
xchg
push
push
ret
or
sub
fstpl
pop
fsubrl
leave
push
or
leave
mov
inc
jle
sbb
mov
push
mov
pop
and
in
xchg
pop
into
mov
xchg
les
daa
data16
or
sub
in
adc
shlb
ds
outsb
pop
or
outsb
push
cmp
stc
and
icebp
data16
xchg
sbb
int3
lahf
arpl
hlt
cmp
and
imul
scas
lds
jmp
dec
or
movsb
lock
cwtl
inc
shlb
and
loop
movsb
sahf
jns
or
adc
or
pop
cmp
or
dec
scas
adc
jne
sbb
sarb
daa
shlb
pop
int3
xlat
push
add
fimull
push
leave
insl
sbb
std
pop
push
jae
clc
sub
pop
gs
and
arpl
mov
imul
ret
nop
dec
addr16
xor
mov
call
sub
fistpll
inc
shlb
inc
addr16
cmp
test
pop
cwtl
xchg
out
pusha
inc
pop
ror
mov
sbb
sub
sbb
dec
popa
pop
push
sub
loope
jecxz
cmp
push
and
lock
lea
insl
dec
cwtl
sub
stos
mov
cs
mov
dec
add
push
mov
xor
stos
ret
fistps
ja
jo
inc
aaa
lock
xchg
xor
jne
test
fs
adc
ss
lahf
sub
or
sti
mov
dec
mov
lret
push
stos
leave
jo
or
mov
xchg
cwtl
xchg
sub
adc
mov
maxps
jne
mov
mov
and
ds
pop
mov
xchg
cld
pop
sbb
push
imul
cltd
mov
xor
daa
cmc
popf
xchg
jl
or
or
stc
xchg
int
or
sbb
fcmovu
push
cmpsb
jecxz
lods
mov
out
jae
jb
out
mov
sti
inc
xorb
ret
xor
sti
in
outsb
jns
fnsave
add
push
ja
push
xchg
mov
xchg
ss
inc
mov
pop
sti
shrl
das
pop
and
xor
pop
sbb
pop
cli
ss
cld
fcompl
movups
mov
popf
sahf
push
lret
mull
jge
adcb
mov
ja
mov
xor
xor
fmulp
sbb
loop
jle
int3
xchg
in
add
add
sub
push
out
movsl
sub
lahf
mov
mov
mov
push
sahf
inc
and
test
mov
iret
adc
lea
jle
fnstcw
ret
cmpsl
lods
lea
call
cmp
stos
sahf
loopne
popf
xchg
mov
xor
jge
xchg
call
jno
mov
push
jb
hlt
sbb
ss
hlt
xlat
shlb
mov
loopne
push
dec
jecxz
lds
dec
pop
jae
mov
idivl
mov
fcompl
mov
in
or
fisubrs
fcmovnb
add
jp
mov
sbb
jno
xchg
shrb
inc
das
sub
outsl
xor
hlt
push
incl
fdivs
xor
mov
out
iret
addb
call
pop
stos
xchg
in
insl
popf
mov
mov
push
faddl
loop
inc
aaa
fiaddl
mov
lods
test
test
call
fs
lret
lea
roll
fsub
pop
inc
xchg
sub
lcall
xor
jnp
stos
fwait
sub
adc
leave
cmp
xor
leave
rcrb
lods
xchg
jnp
ja
push
fsubl
or
and
mov
in
add
push
fiadds
jbe,pt
aam
inc
xor
xor
jne
sub
mov
scas
mov
xlat
xor
or
pop
fnstenv
jp
or
jns
js
jmp
xchg
in
pop
incb
out
jl
fbld
notl
stc
dec
arpl
push
hlt
inc
jecxz
xor
out
cmp
mov
mov
repnz
pop
dec
dec
cmp
jnp
inc
sbb
mov
or
inc
mov
jne
fmull
pop
leave
loope
push
leave
or
xorl
hlt
push
mov
add
int3
sarb
in
jae
push
in
popl
cwtl
arpl
leave
les
mov
ficomps
repz
pusha
jg
shlb
jle
fistl
cwtl
and
iret
pop
sub
ljmp
push
jae
cltd
mov
cmpsl
outsl
bound
jo
cmp
popf
pop
inc
jnp
sbb
lahf
jmp
add
mov
cwtl
mov
inc
loop
lds
testl
ficoml
push
test
gs
ss
dec
push
arpl
repnz
ret
or
mov
or
sub
mov
xor
add
pop
sbb
push
mov
inc
stos
jne
test
xchg
add
push
jnp
jl
mov
notl
lods
sbb
in
int3
ret
push
pop
shlb
into
cltd
or
xlat
jge
repnz
ja
fwait
mov
pop
nop
jne
std
gs
dec
jb
mov
mov
cmpsb
aas
xor
outsb
sub
aaa
mov
fmuls
and
popa
pop
push
call
fwait
popf
test
xchg
cld
adc
std
mov
cld
sbb
xchg
fisubs
stos
sbb
hlt
xor
push
sbb
pop
cmp
sbb
arpl
cmpl
popa
or
xor
adc
js
sub
pop
push
mov
imul
test
add
mov
iret
lds
cld
jnp
jb
js
and
cwtl
lods
jecxz
aaa
pushf
lret
add
mov
jno
in
cwtl
push
jmp
bts
add
dec
loopne
cli
mov
push
test
clc
mov
jecxz
cld
popf
jg
xchg
pop
stc
jne
iret
or
cmp
loop
mov
cli
test
ficompl
inc
adcl
mov
jp
inc
adc
jae
cltd
mov
adcb
ljmp
adc
enter
mov
push
das
xchg
out
jo
sarl
cli
jl
sbb
mov
inc
sbb
xchg
pop
inc
cwtl
sbb
mov
sti
mov
pop
xchg
insb
dec
xor
lahf
movsl
adc
mov
imul
sahf
mov
mov
mov
add
outsl
adc
sub
jecxz
push
and
fadds
jle
in
lret
rcr
add
daa
jno
or
loop
dec
into
xchg
shl
xchg
cmp
ja
movsl
sub
and
mov
rcll
sbb
fldt
fwait
enter
dec
cmpsb
sarb
cld
xor
mov
stos
shlb
mov
out
scas
or
cs
mov
pop
incb
daa
cmp
int
lcall
ds
mov
cmpsl
jnp
sbb
int
xchg
cmp
adc
cmp
and
push
dec
icebp
es
cltd
mov
sub
pop
ja
xor
mov
cmp
dec
scas
dec
faddl
dec
frstor
sarl
call
lds
aam
xor
pop
aam
xor
mov
jle
mov
in
sub
les
into
inc
inc
inc
les
test
push
xchg
adc
sub
mov
xor
xor
sbb
jo
jge
fptan
nop
lret
and
pop
sub
add
insb
jne
push
jbe
cmpsl
sti
outsl
push
shl
push
sbb
clc
repnz
mov
orl
pop
imul
ds
movsl
pop
xchg
aad
mov
pop
jg
sbb
mov
stc
mov
push
das
je
out
inc
popf
jle
jns
cmp
adc
bnd
lods
mov
data16
push
inc
hlt
lds
push
pop
jecxz
fs
icebp
inc
mov
xchg
add
lock
push
outsb
adcl
rcrb
jl
xor
sbb
inc
jbe
mov
int
pop
mov
cltd
es
iret
adc
leave
rorl
mov
jo
lret
jo
outsb
or
mov
addb
mov
mov
add
jmp
addb
jmp
fdivl
aas
enter
jmp
inc
mov
dec
movsl
add
test
jb
dec
jle
pop
lahf
cmp
sbb
mov
push
andb
pop
sbb
pop
dec
data16
shlb
int3
ret
and
pop
shlb
push
data16
push
mov
mov
cmpsb
jp
and
lret
or
ljmp
dec
into
xchg
lcall
lret
xor
ja
scas
jecxz
cwtl
cmpsl
unpckhps
push
or
pop
enter
push
popf
repnz
idivb
jg
cmp
push
xor
mov
push
fs
jecxz
jo
cltd
push
mov
pop
jnp
xor
inc
sbb
sub
add
xor
mov
lods
xchg
out
lds
movl
adc
ficoml
mov
sub
loop
cmp
iret
push
xchg
dec
scas
shlb
mov
push
aam
push
adc
mov
adc
push
imul
insl
repz
out
pushf
dec
sub
jns
mov
add
hlt
outsl
xchg
filds
imulb
popa
inc
lds
mov
shrl
test
inc
int3
inc
mov
mov
pop
imul
and
mov
pop
mov
jmp
adc
popl
lcall
push
xchg
insl
test
pop
in
sub
adc
add
js
sbb
cld
fs
in
or
loopw
jbe
outsb
mov
and
pop
rorb
mov
imul
outsl
dec
xchg
jmp
fdivrs
sbb
movb
mov
repz
mov
imul
sbb
and
dec
aaa
leave
pop
dec
jmp
fldln2
jb
xchg
jp
jno
adc
aaa
push
ret
out
cld
test
mov
lret
push
sar
inc
or
mov
push
cmp
cli
fistps
ficompl
mov
loope
in
jae
pop
jne
out
mov
fwait
mov
mov
or
add
jno
and
insb
pop
fdivl
jns
push
adc
mull
shrl
cmp
add
ds
mov
dec
add
insl
and
movsb
ret
cmp
in
lcall
add
mov
pusha
cmpsb
push
or
ja
xchg
in
int3
dec
sar
push
xorl
jecxz
add
lcall
aad
test
repnz
call
cmp
adc
stos
jp
sub
xchg
loopne
insl
mov
jl
dec
test
mov
fnstcw
scas
fucom
sub
ds
push
popf
in
sti
push
int
mov
lea
fstl
in
and
mov
aam
mov
xchg
sub
mov
fucom
adc
push
daa
mov
push
mov
les
xchg
les
stc
imul
adc
cmpl
sub
imul
sbb
jno
stc
scas
cli
cmpsl
loope
or
xchg
ret
dec
stos
movsb
pop
lea
mov
xchg
mov
add
mov
roll
loopne
sbb
push
xchg
mov
dec
ja
es
es
mov
nop
sbb
fldpi
sub
inc
pusha
dec
iret
loope
call
pop
stos
mov
cmp
cltd
adc
nop
inc
xor
stos
sbb
fcomps
or
lea
loope
ficompl
mov
jae
push
shrb
add
arpl
mov
test
cmpsl
sbb
shll
out
or
in
jmp
mov
out
push
test
mov
jmp
ret
mov
cmpsl
fildll
add
jno
sub
out
jp
dec
lock
pop
inc
popf
je
xor
xchg
add
mov
dec
cltd
dec
cltd
push
fs
ljmp
ret
dec
cmp
sti
dec
or
pop
enter
inc
xchg
sti
pop
adc
outsb
pop
mov
cmp
push
in
inc
repz
cmp
out
adc
inc
cmp
dec
mov
inc
pop
dec
aaa
daa
pop
dec
adc
in
lods
xchg
and
xor
sti
cmp
xor
pushf
mov
jnp
nop
jno
sbb
mov
sub
ret
in
js
stc
mov
mov
sbb
mov
mov
sub
or
mov
hlt
cld
jg
icebp
lret
mov
cmc
push
mov
or
fadds
xchg
mov
sub
lea
sar
enter
int
dec
data16
mov
push
popa
aaa
jne
xchg
mov
push
aad
imul
int3
sti
loop
loop
adc
lods
xor
popf
testb
fwait
jb
sbb
sbb
cmpsl
fcoms
mov
jp
pop
in
fnsave
cld
wbinvd
pop
rorl
clc
lock
outsb
xorl
fistpll
in
testb
xchg
int
les
pop
mov
faddp
int
dec
daa
inc
movsb
fsubrl
or
inc
mov
sub
lds
sub
xchg
sub
inc
sbb
xchg
lea
outsb
fwait
adc
jg
insb
std
mov
dec
int3
add
add
pop
jbe
jge
imull
enter
add
cmc
lret
xabort
test
int
ds
test
sbb
repz
sti
addr16
inc
xchg
roll
xor
imul
dec
or
and
dec
cmp
sub
mov
pop
and
testb
cltd
xor
xor
out
sahf
xchg
sbb
vcmpsd
add
dec
mov
das
stos
mov
cwtl
mov
and
jg
push
push
dec
in
jbe
inc
stos
int
std
insl
xor
gs
sarb
lods
sbb
dec
mov
dec
xor
add
in
push
add
jle
rolb
push
sbb
mov
mov
mov
popf
mov
shld
decl
inc
jae
outsl
xor
jb
inc
adc
mov
push
sbb
mov
cmovg
daa
xchg
gs
cld
fidivl
mov
out
jno
out
fildll
iret
inc
arpl
fdivs
jnp
out
insl
xchg
sbb
imul
cmpsl
adc
jb
pop
jbe
lods
xchg
movzbl
lods
loopne
std
daa
enter
inc
or
adc
xlat
pushf
popf
lret
xchg
cld
pop
pop
imul
ljmp
dec
push
xchg
and
inc
rolb
add
and
mov
adc
mov
lahf
xor
cmpsl
xchg
int
add
jmp
dec
jo
dec
mov
clc
xor
mov
adc
subps
lea
dec
shrl
pushf
jns
adc
or
jecxz
or
xchg
and
adc
jbe
or
inc
mov
adc
lcall
into
fstpt
dec
pop
sbb
mov
xchg
movsb
and
mov
xor
mov
jo
pusha
mov
test
jle
push
add
sbb
mov
sub
movsb
jle
jno
xchg
push
cmc
fiaddl
aam
pop
out
lret
xor
addb
ljmp
mov
or
imul
sbb
mov
leave
mov
rclb
jbe
fdivs
mov
fisttpl
movsb
push
and
add
push
dec
or
pop
pop
sub
xchg
pushf
mov
lea
cmp
or
popa
mov
or
xor
insl
push
loopne
in
call
pop
sbb
mov
sti
inc
dec
lcall
fldenv
dec
ret
jmp
add
push
add
pop
adc
pop
loopne
hlt
add
repnz
jle
idivb
fdivs
mov
or
dec
xchg
push
mov
aad
jge
ljmp
ret
mov
and
jmp
xchg
jo
mov
jb
mov
subb
mov
fs
cmovp
jno
imul
popf
or
jno
add
pop
ret
rcrb
popa
test
idivb
jg
adc
inc
lret
inc
inc
addb
jecxz
jl
or
jnp
enter
daa
add
insl
shlb
add
rcll
pop
pop
and
jne
in
push
stos
mov
and
outsl
jp
aaa
insb
xchg
in
dec
mov
mov
idivb
jl
sbb
gs
mov
adc
pop
imul
jmp
aad
mov
rolb
mov
jne
push
push
in
in
mov
lods
jb
add
insl
mov
cmp
insb
pusha
movswl
pop
jle
xor
jnp
dec
sub
cmp
jg
push
mov
arpl
sbb
sti
ja
test
jae
ss
sbbl
cmc
xor
jns
jle
decl
stos
push
dec
out
aam
flds
insb
cmp
push
push
ja
push
inc
movsl
push
mov
pop
and
pop
jp
cwtl
lds
pop
fists
pop
in
fdivs
fucom
mov
xlat
inc
repz
push
dec
adcl
popl
jnp
xlat
push
and
mov
add
mov
inc
fstpt
or
pop
sbb
out
lret
mov
sub
jl
insl
nop
jne
push
imul
mov
into
addr16
mov
mov
jecxz
movsb
mov
imul
adc
mov
xor
pusha
push
aam
xor
pop
in
jno
mov
mov
inc
pop
mov
pop
pop
cmp
imul
pop
pop
jne
in
fiadds
int3
repz
or
icebp
je
in
mov
jnp
push
out
push
jge
xlat
lock
push
lea
and
pop
adc
and
mov
out
lea
mov
movsb
loop
mov
pop
xchg
cmp
std
addr16
xor
cmp
shlb
into
mov
stos
loopne
or
xor
adc
pop
xlat
or
mov
out
mov
movsl
mov
lds
adc
repnz
pusha
sub
push
jl
daa
aam
fwait
pop
lret
pause
in
leave
jno
xlat
dec
adc
sub
jbe
cwtl
leave
fcoml
clc
bound
imul
rcrw
test
push
rcl
loope
jne
lods
popa
cmc
fnstenvs
sub
fcmove
sbb
or
and
lret
sahf
mov
sbbl
insb
lds
inc
shrl
shlb
into
lcall
pop
and
mov
data16
lahf
lds
or
sub
cmp
aam
out
dec
idivl
lock
in
sti
in
cwtl
lcall
xchg
xorb
ja
adc
fisubl
cli
sbb
pop
repnz
aas
mov
ficoml
out
outsl
ljmp
out
sbb
xor
sbb
pop
ret
loopne
jle
aad
cmpsl
mov
cmp
xchg
xchg
inc
repz
xchg
scas
cmpsl
or
sbb
ljmp
mov
jle
and
cltd
push
inc
pop
pop
test
dec
imulb
xlat
enter
outsl
jg
cli
out
jl
dec
in
sub
jl
les
std
cmc
dec
mov
or
jmp
adc
push
jb
int3
pop
arpl
push
adcl
push
jnp
ret
icebp
sarl
decl
mov
cs
clc
xchg
sbb
scas
arpl
inc
or
pushf
gs
mov
pop
jno
inc
out
push
xchg
mov
int3
jmp
mov
addr16
pop
movsl
pop
shrl
pop
cmp
std
jb
inc
nop
cmp
jae
mov
xlat
cmp
inc
add
mov
sub
and
adc
lret
scas
lods
dec
cmp
mov
sahf
lcall
jecxz
sar
testl
sti
out
iret
inc
jp
insl
and
out
fisubrl
mov
aad
pop
mov
repz
lret
adc
cmp
repnz
scas
add
or
popa
subl
jle
jle
mov
inc
xlat
js
and
adc
stos
inc
mov
test
pop
or
lret
push
or
inc
dec
cltd
or
sub
and
inc
mov
cli
mov
push
icebp
mov
fmul
push
xchg
sbb
pop
outsl
sub
out
mov
adc
pop
mov
cmp
pop
jbe
cltd
push
sub
inc
dec
cmp
clc
loope
lcall
jmp
adc
cli
sub
push
in
aas
jno
push
or
add
dec
mov
out
pop
aad
scas
cmp
aaa
aam
int
jmp
jmp
mov
movsl
jg
mov
pop
fcomip
enter
jmp
ret
and
and
sbb
ret
roll
lahf
inc
outsl
fnsave
ds
out
mov
push
stos
jle
aam
dec
cld
xchg
popa
hlt
push
mov
fnstenv
mov
dec
loope
jmp
test
and
or
cmp
adc
sub
pop
jbe
inc
mov
outsb
shr
inc
xchg
int3
into
lea
aas
mov
pusha
addr16
mov
stc
pop
sbb
pushf
jae
dec
mov
sbb
mov
sbb
outsb
and
mov
mov
or
sbb
inc
negb
push
jb
inc
sbb
int3
and
dec
pusha
insl
and
movsb
add
mov
aaa
dec
push
iret
adcl
mov
das
pop
add
mov
je
push
xor
jmp
pop
ljmp
shlb
lock
jb
pop
fwait
inc
shrb
inc
mov
loop
sti
mov
mov
inc
pop
adc
mov
mov
sub
add
dec
cmp
scas
xchg
lret
pop
jg
sbb
sub
and
daa
data16
mov
or
inc
sbb
imul
xchg
jne
rcrb
loop
rcrb
inc
pop
mov
mov
cltd
out
cld
dec
push
pop
sub
jg
popa
pop
enter
or
aaa
pop
cmp
mov
xchg
inc
xor
or
xor
pop
adc
stos
xchg
cmovb
loope
cmc
into
adc
lcall
int3
xorb
jno
aam
jnp
xor
insl
mov
sahf
jle
and
out
adc
xchg
fidivl
ret
das
and
cmp
mov
je
inc
and
sarb
out
pop
jge
js
fstps
dec
mov
leave
adc
stc
pop
push
cmp
out
jmp
dec
adc
jle
sub
push
xchg
addr16
ja
out
bound
aaa
roll
ret
xlat
push
and
call
cs
push
and
sar
stos
mov
pop
lahf
jp
ja
cltd
movl
es
gs
ja
fsubl
cli
push
lret
das
jle
jmp
loope
mov
dec
dec
pop
or
fldt
inc
sarl
add
scas
mov
xchg
lret
mov
xor
sbb
iret
jo
cmpsb
cwtl
iret
mov
or
out
mov
xorl
add
ret
movb
sti
push
push
insl
ja
adc
aam
xchg
fstl
loopne
lret
inc
pop
xchg
sub
lcall
scas
cmp
push
adc
lods
in
fmuls
mov
pop
dec
cmp
inc
mov
shlb
sbb
adc
je,pn
add
jo
fisubl
mov
daa
cwtl
lds
pop
and
sbb
fisttps
push
and
lret
sti
lods
shr
sbb
inc
mov
inc
out
adc
sub
std
dec
dec
nop
cli
popa
push
insl
jne
sbb
mov
sti
into
pushf
loopne
enter
fidivs
cmpsb
andb
jge
push
shlb
and
mov
sub
push
adcl
lret
jecxz
cmp
jnp
xlat
nop
lock
add
sbb
adc
xorb
jo
in
jg
mov
shlb
or
fnstenv
sarl
shr
add
insb
adc
adc
mov
sub
push
lret
scas
mov
inc
add
bound
push
iret
push
adc
dec
push
adc
icebp
shr
shr
rcll
push
xor
or
xchg
jle
pop
and
xchg
lcall
cld
mov
mov
test
mov
xchg
ds
hlt
bound
in
jecxz
pop
scas
addb
stc
jecxz,pn
mov
dec
pop
fidivrl
jge
add
testb
jb
incb
push
inc
lods
add
mov
mov
inc
and
add
fcmove
outsb
sbb
mov
and
arpl
vmovdqa
cmpsl
test
inc
in
jo
and
push
inc
cmp
loopew
pop
cmp
inc
sarb
cwtl
loopne
in
xor
push
int3
jno
popf
lock
jno
cld
fdivl
outsl
mov
lods
ss
push
ret
loop
rcrl
xchg
lcall
test
dec
shlb
jnp
and
mov
imul
sar
lret
ret
into
mov
mov
xorb
outsl
adc
popa
cld
lahf
repz
or
cmc
add
es
test
xchg
scas
in
push
fidivs
jmp
iret
sti
nop
cld
adc
adc
int
aad
xchg
test
lds
testl
lods
shl
inc
mov
mov
dec
insl
call
cmp
popa
or
push
rcll
cmpsl
mov
push
mov
test
aas
mov
inc
or
testl
aaa
rol
mov
push
jnp
arpl
stos
outsb
mov
dec
push
iret
adc
sti
adc
into
int3
stos
cmp
leave
scas
das
js
jmp
and
clc
sahf
in
dec
xlat
mov
lock
dec
jno
adc
outsl
jl
or
imul
mov
dec
push
fstpt
dec
enter
or
adc
mov
dec
pop
push
stos
pop
mov
sub
fildll
xchg
divl
shrb
mov
mov
jl
loop
insl
fnstsw
loop
and
mov
mov
push
pop
xlat
dec
or
pop
movsl
aaa
inc
push
mov
add
es
mov
loopne
fstl
bound
jns
divb
jge
or
mov
inc
lret
fists
xor
inc
push
cli
mov
jmp
sahf
pop
xor
loope
pusha
ljmp
mov
repz
add
ficoms
ret
and
sub
push
nop
ljmp
push
int
or
jne
sub
xor
and
jecxz
in
cwtl
or
xchg
cmc
icebp
rclb
mov
inc
ljmp
jmp
sub
inc
xor
xchg
and
sahf
cmc
sub
mov
repnz
cmp
cmc
mov
enter
or
mov
adc
test
pop
add
imul
cmpsb
mov
inc
pusha
ds
sbb
sbb
or
out
mov
in
fnstcw
andl
sbb
ret
jb
incb
add
xchg
jno
and
rclb
ret
mov
jnp
std
jns
enter
jbe
mov
inc
mov
nop
cmc
pop
cld
xor
and
outsb
inc
pop
mov
in
sbb
jae
pop
cs
mov
sbb
mov
push
mov
and
sub
dec
adc
adc
std
arpl
cmp
inc
mov
mov
mov
ljmp
into
adcb
into
loope
outsb
dec
sbb
in
pop
pushf
cli
or
in
mov
stc
ret
repz
mov
mov
mov
xchg
and
xor
jo
jle
and
jns
mov
test
sbbl
sub
dec
imul
adc
xor
push
lret
adc
test
mov
or
test
dec
cwtl
xchg
pusha
mov
enter
stos
mov
cmpsl
or
mov
mov
jg
stc
jg
stos
hlt
fisttps
sbb
xor
scas
jge
xchg
int3
push
jge
ss
or
cltd
add
jb
aam
push
daa
int3
sahf
xchg
out
pop
cmpsl
jns
pop
in
popa
rclb
add
mov
movsb
jae
loope
loope
rcrb
add
sbb
sub
fnstsw
mov
inc
or
subb
mov
mov
loope
push
adc
add
enter
int
mov
add
cmp
addb
fs
xor
dec
jecxz
ret
sub
pop
mov
push
movsb
pop
pop
daa
jb
xchg
add
jg
dec
push
jno
aaa
imul
lcall
push
outsl
xor
sbbb
sbb
mov
pushf
and
and
sub
push
fsubrl
pop
dec
jmp
test
es
test
mov
and
or
enter
or
mov
shrl
push
add
push
ret
push
push
js
stc
adc
mov
cwtl
pop
cmp
push
push
test
inc
xor
sbb
insl
push
and
mov
mov
jp
dec
cmp
add
lea
or
sub
test
iret
cltd
loop
sub
hlt
movsl
push
in
outsb
test
decl
push
es
xor
pop
jae
cmp
pop
pop
repnz
aas
mov
or
inc
stc
ljmp
push
rcl
push
mov
cmp
gs
push
lds
fbstp
xbegin
and
push
lea
imul
lahf
mov
out
shlb
jno
sub
mov
sub
push
das
out
fwait
pop
mov
mov
jg
and
xchg
mov
mov
fcomip
jne
lahf
out
outsl
mov
insb
out
add
das
out
mov
dec
movsl
and
jno
mov
jbe
mov
push
xchg
xor
sub
sahf
ud1
pop
add
je
lods
add
clc
pop
dec
lods
aam
repz
scas
sbb
mov
loopne
mov
test
pop
dec
and
jae
int3
aad
lods
or
test
aas
mov
mov
xchg
flds
cmpsb
lcall
xor
in
mov
inc
push
into
in
or
mov
xchg
and
fstl
popa
int3
test
add
cmp
insb
pop
sub
or
inc
jno
mov
inc
dec
mov
negl
cld
aaa
adc
test
gs
clc
mov
cmp
ficomps
sti
lds
fsubl
add
cli
cli
clc
push
adc
pushl
ret
lret
loopw
cmp
add
hlt
aas
imul
push
sub
mov
push
cmp
mov
mov
pop
andl
fisubrs
and
out
fildl
or
int3
mov
icebp
stos
fmul
cwtl
add
outsb
in
sbbl
xchg
cwtl
xlat
addr16
lea
movsb
imul
cmp
sbb
adc
and
sub
lret
mov
xchg
test
sub
inc
ljmp
cmp
push
adc
ss
clc
imul
nop
je
jp
andl
lock
int3
loopne
loope
ret
scas
xchg
pop
and
sub
pushf
jno
xchg
push
or
das
push
jno
cli
push
push
jmp
and
mov
shll
pop
push
mov
test
mov
add
add
xchg
jl
insl
xchg
push
repz
mov
cmp
xchg
mov
mov
jb
mov
mov
pop
adc
loopne
lock
roll
pop
ljmp
fnstsw
rol
popf
imul
sbb
mov
out
jno
lahf
fwait
jae
inc
mov
dec
imul
sti
leave
sub
add
inc
mov
scas
and
rolb
jbe
int
mov
js
mov
jne
lret
fcompl
mov
sbb
sub
xchg
ret
mov
cmpsl
clc
pop
jmp
daa
and
push
and
lods
push
and
test
mov
pusha
add
mov
push
popf
lods
cmpl
loop
push
add
test
push
test
lcall
xchg
test
push
andl
clc
inc
jbe
in
scas
int3
imul
lret
add
mov
testb
adcb
mov
imul
les
lahf
bound
loope
sbb
test
pop
daa
test
mov
fldl
ror
xor
dec
out
inc
shlb
pop
pusha
ret
sub
lret
mov
mov
lods
mov
push
mov
sub
xchg
pop
jo
lods
or
inc
clc
adc
jl
dec
movsl
nop
sub
shr
push
adc
orb
and
lret
xlat
cmp
jle
push
adcb
push
mull
cmpsb
push
pop
inc
sub
add
std
stc
mov
mov
inc
in
das
mov
aad
adc
mov
lahf
lds
sarl
in
xchg
cwtl
and
faddp
pop
lcall
mov
js
mov
push
jns
mov
ret
imul
dec
scas
sbb
dec
lock
sbb
test
pop
aaa
pop
jno
inc
in
popf
out
out
lods
xchg
push
sbb
jne
mov
push
in
jmp
xchg
loop
inc
stos
data16
pop
mov
sub
xor
sbb
aam
pop
inc
mov
add
fsubs
movl
hlt
xlat
movsb
cmp
movsb
icebp
es
scas
jb
fisubrs
pop
and
and
mov
pop
sub
push
js
test
jbe
jns
jo
loop
and
insb
xchg
push
push
lods
and
cmpsb
psrad
mov
cmp
loopne
and
cmp
fildll
cmp
lock
subb
xchg
mov
xor
mov
dec
push
shrl
add
loopne
test
push
cmc
xor
pop
ret
inc
popf
mov
sti
out
pop
insl
dec
mov
push
sub
lods
insl
lock
ftst
pop
mov
pop
lods
and
xchg
test
lock
test
int
add
stc
out
adc
clc
test
pusha
add
xlat
out
andb
adc
xor
outsl
in
xchg
or
mov
mov
das
mov
pop
enter
je
sub
in
jae
dec
push
jne
sbb
xor
outsl
ret
iret
push
insb
sbb
cmp
in
scas
mov
xlat
rolb
in
out
xchg
shl
mov
mov
cmpsl
fprem
adc
jge
add
aad
add
inc
in
sbb
adc
dec
les
je
inc
mov
xlat
inc
xchg
jle
in
enter
push
lahf
mov
mov
dec
push
icebp
insl
mov
jne
mov
xlat
dec
and
repnz
dec
ficomps
shll
and
pop
push
or
mov
loope
pusha
test
popf
xor
push
xor
sub
repz
mov
dec
jb
cwtl
mov
icebp
sub
in
cmp
call
lock
cmpsb
xchg
movsb
xor
int3
call
jns
adcb
pop
add
iret
movsb
push
je
dec
mov
inc
jno
arpl
jo
pusha
outsl
jno
loopne
dec
rcll
pop
imul
adc
xlat
sub
icebp
mov
sbb
xor
pop
mov
lds
icebp
push
jmp
xchg
icebp
xchg
clc
mov
xchg
icebp
adc
rclb
pushl
push
dec
xor
fimuls
stos
push
and
addl
bound
adc
int
push
cs
inc
pop
mov
stos
repnz
mov
or
or
cmc
in
in
pop
loope
fistl
mov
arpl
vunpckhps
lret
inc
jne
xchg
sub
je
repnz
sub
sub
aaa
adc
add
ds
inc
aaa
icebp
mov
dec
mov
cmp
mov
outsl
ja
inc
out
inc
cltd
out
sbb
sub
cmc
cmp
pop
add
inc
push
pop
daa
and
repnz
add
data16
push
pop
mov
notl
ss
repnz
push
and
push
clc
test
or
xchg
cmp
jbe
add
or
jb
rolb
std
mov
call
fisttps
fwait
dec
mov
jge
outsl
cld
test
les
fists
fists
mov
fnstenv
xor
loope
repz
int3
into
shr
xlat
lock
xchg
jecxz
push
cmc
mov
int
push
es
pop
xlat
repz
sbb
inc
sarb
jo
lods
cmp
fists
stos
pop
and
xor
pop
pop
xor
ds
dec
inc
cmp
rorb
out
cmp
pushf
insb
jg
and
dec
aad
or
shlb
loope
popf
aas
lret
jecxz
movsb
out
fists
inc
sub
faddp
or
fsubrl
lcall
sti
mov
out
inc
orb
xchg
stos
and
out
xchg
push
mov
cmc
pop
jg
sbb
mov
in
daa
scas
subb
repnz
mov
pop
cwtl
jge
popa
in
mov
data16
pushf
adc
or
hlt
aaa
lods
pop
dec
loop
xor
fstps
xchg
pushf
nop
or
out
or
dec
pop
or
aad
adc
imul
mov
jbe
cwtl
sub
gs
jp
lock
test
and
into
dec
jecxz
xchg
fdivr
stos
stos
movsl
dec
inc
hlt
pop
push
sbb
xor
jl
int
cmp
lahf
jp
int
inc
pop
andl
lock
stos
shrd
dec
bound
jb
mov
stos
fildl
popa
pop
cmp
pop
xor
pop
jae
cmp
test
push
ds
test
pop
cltd
test
cmp
jb
outsb
and
enter
aad
sub
jnp
sub
mov
std
aas
xchg
sbb
mov
sub
cmp
lahf
add
mov
rolb
repz
and
aaa
xchg
push
jge
std
sbb
int3
adc
dec
jo
lcall
push
xchg
mov
pop
in
push
loopne
repnz
js
lcall
sub
and
cmpsl
adc
sbb
or
lcall
pop
pop
cmp
lock
out
add
jg
addl
into
adc
popa
stc
add
and
push
out
shrb
sarl
daa
fisttps
push
cmp
loope
push
add
add
cmp
sub
lret
sti
shlb
frstor
adcb
cmc
lret
out
xor
jno
pop
dec
and
add
sbb
push
rolb
pushf
aaa
aaa
in
enter
mov
iret
lret
outsb
into
jno
imul
hlt
xor
mov
nop
popw
dec
jl
xchg
in
mov
pop
jmp
popf
aas
hlt
in
into
xchg
shlb
push
sbb
in
addr16
in
aas
shl
push
into
arpl
adc
inc
pop
xlat
and
push
stos
add
jne
mov
in
sub
or
lret
dec
cs
lock
in
mov
xchg
sub
or
jl
je
mov
std
repz
lret
add
xchg
out
out
jle
mov
rclb
xchg
js
cmpsb
into
push
cmovs
insl
lds
imul
mov
inc
mov
xchg
xor
cmpsb
decb
push
pop
mov
sub
outsl
popa
mov
mov
sub
jle
test
call
mov
aad
lret
cmp
adc
add
cmpl
popf
inc
enter
mov
push
repz
and
insl
xor
pop
insl
add
cmp
sbb
aaa
lods
aad
cmc
cmpsb
mov
inc
cmpsl
mov
or
jo
xchg
sbb
adc
jno
fmuls
jae
fs
mov
jle
adc
clc
adc
in
es
push
or
out
mov
xchg
xchg
test
dec
dec
imul
mov
or
sub
scas
divb
jbe
aaa
push
inc
mov
lret
cs
and
ret
add
ja
dec
test
ret
jecxz
xor
mov
xchg
sete
mov
insb
orb
rclb
adc
aad
cmp
test
stos
mov
enter
sbb
into
outsl
les
cli
ss
add
fbld
lods
push
std
dec
lret
inc
imul
adc
mov
dec
xchg
ss
rcll
stos
cltd
jne
arpl
mul
mov
idiv
clc
lcall
pusha
gs
repnz
jmp
xchg
mov
push
out
push
mov
dec
sahf
push
add
lock
pop
mov
cmp
mov
inc
nop
aad
filds
shll
inc
cmpsl
loop
sub
pop
sbb
mov
xorb
subl
mov
fwait
lea
sub
pop
and
inc
cs
mov
out
pop
into
mov
inc
lods
dec
in
adc
cmc
jns,pt
stos
in
inc
mov
enter
ja
pop
ds
imul
test
xchg
jno
mov
xor
fbstp
mov
mov
push
popf
lahf
sbb
and
mov
je
adc
and
xchg
cmp
lret
pop
push
inc
pushf
test
movsl
mov
mul
xor
movsb
mov
sub
cld
and
adc
arpl
cltd
test
add
dec
loope
stos
adc
jo
rcr
push
and
mov
or
fs
dec
sbb
in
cmp
cmp
and
sbb
dec
pop
daa
push
test
int
add
jp
sbb
sbb
es
pop
outsb
sub
adc
sub
xchg
aad
fdivs
xor
cli
cmp
add
aad
mov
out
mov
add
push
jnp
cmc
adc
lret
add
add
fcomps
rorl
jb
mov
inc
add
cli
gs
repnz
lea
insb
les
int
jo
lods
sub
mov
lret
cmp
ljmp
sahf
lahf
das
je
sbb
push
aad
push
push
jp
sbb
sbb
aam
cmpsb
xchg
adc
adc
sbb
repz
je
mov
fldenv
or
add
fimuls
shr
sbb
xor
aaa
rcrl
and
sub
and
in
push
jbe
imul
dec
mov
mov
fsub
push
or
inc
mov
sub
pop
pop
dec
push
add
ror
or
jae
mov
mov
add
push
mov
or
and
and
mov
mov
scas
add
push
mov
cmp
int
add
test
les
adc
xchg
push
push
push
push
mov
enter
adc
out
or
jb
lea
xor
add
outsb
aad
sbb
mov
xchg
js
jbe
mov
sub
in
movsl
andb
cmc
push
or
jmp
lods
mov
push
and
pop
xchg
mov
adc
aad
cmp
mov
loope
inc
cmpsb
test
in
sbb
hlt
jnp
add
xorl
mov
and
jne
mov
aam
fs
popl
adc
push
cmp
jbe
fsubrs
jp
dec
xchg
lret
jne
add
mov
mov
mov
push
mov
or
adc
mov
pop
je
push
cli
enter
ja
pop
in
mov
shl
sub
nop
add
popa
lret
push
xchg
popa
lods
shlb
mov
cs
jo
sbb
cmp
mov
sub
jnp
xchg
aad
and
shrl
dec
fwait
shld
aas
cld
cmp
aaa
mov
jb
pop
sub
repz
lcall
rcll
push
cltd
fwait
seta
das
dec
outsb
ljmp
push
loope
jp
idiv
sar
mov
cmpsb
sbb
pop
push
mov
mov
and
sbb
test
mov
into
and
mov
xor
dec
pop
add
lock
xchg
and
pop
shll
sbb
jl
mov
pop
cwtl
lock
fnstcw
stos
popa
icebp
cmpsb
push
fmuls
repz
mov
jbe
jp
fnstsw
lods
push
leave
jbe
jno
inc
cld
mov
xchg
pop
push
mov
pop
cmp
pop
mov
adc
mov
andb
adc
jmp
insb
enter
mov
stc
jae
xchg
lret
loopne
mov
loope
scas
add
hlt
aaa
add
out
inc
arpl
jb
adc
js
fbstp
xor
ljmp
into
mov
es
ja
jp
pop
leave
mov
repz
cld
add
xchg
test
aam
and
add
stos
add
pop
in
lcall
jbe
mov
movsl
mov
sub
int
push
jmp
shlb
xor
movsb
jnp
mov
sub
jo
stos
mov
cmp
and
cwtl
jae
pop
cmp
std
lods
out
mov
inc
pushf
inc
add
fsubrl
inc
sub
outsb
cmpb
mov
pop
cmp
test
jb
jns
adc
xchg
adc
aam
jle
cmove
fsubr
inc
les
jmp
xor
adc
inc
imul
sub
das
and
jb
xor
out
stos
mov
aam
dec
jno
mov
xor
inc
imul
test
jnp
pop
mov
pop
lods
lret
aas
stos
cli
scas
and
push
inc
lret
or
ret
adc
cmp
add
loopne
sbb
mov
movsb
mov
imul
push
sbb
jmp
cmp
and
sub
fisttpll
mov
fcoms
xor
loope
outsb
bound
mov
xor
cmpsb
cmpsl
sub
aaa
scas
mov
ljmp
addl
bnd
jno
loop
call
sahf
ret
pop
inc
ss
ret
inc
mov
cmp
and
out
dec
mov
sbb
ja
test
push
inc
popf
test
add
fdivrl
lods
mov
pop
pop
mov
sbb
mov
jnp
lcall
jg
sub
dec
int3
mov
or
pop
fldcw
sbb
dec
mov
push
jg
cmp
out
jp
mul
mov
fucomp
mov
jno
dec
in
and
jnp
popa
push
cld
cmp
fisttpl
mov
ss
jb
mov
test
daa
mov
and
rcrb
cmp
mov
xchg
mov
jb
push
ret
xchg
pop
aaa
lods
pop
insl
pop
dec
push
cmpsb
mov
lea
and
filds
hlt
out
pop
lea
idivl
xchg
dec
mov
push
iret
iret
lret
push
mov
sarb
xchg
bswap
jle
sub
stos
mov
test
pop
pop
mov
or
ficoml
push
andl
ljmp
xor
shlb
loope
push
ljmp
sub
pop
cmp
movsl
inc
aam
push
or
dec
ljmp
scas
decl
cmc
invlpg
fldt
idivb
outsb
and
lods
mov
add
js
push
icebp
loope
mov
mov
pop
push
cmp
mov
stos
inc
and
arpl
mov
add
adc
sbb
jno
cmp
xorb
insl
cmp
test
in
add
popa
in
push
fwait
arpl
sbbl
imul
mov
cmp
cmp
mov
or
jmp
dec
sbb
sti
jl
repz
enter
jmp
loop
cmpsb
adc
rolb
jge
cmp
daa
jo
jge
sub
mov
std
push
push
jnp
inc
cmpsl
push
and
pop
rorb
faddp
daa
sti
rdpmc
fisttpll
push
in
ret
and
in
inc
jge
mov
in
add
dec
mov
cwtl
sub
test
mov
pop
adcb
insb
xchg
subb
int3
mov
sbb
sbb
data16
jle
cli
sub
out
outsl
shlb
or
ljmp
bound
pop
pop
cld
jle
iret
pop
xchg
mov
inc
jl
cmpsb
cmp
pop
push
out
mov
lods
popa
mov
in
ja
xchg
cmp
or
sbb
ud1
mov
popf
fwait
pop
sub
insb
pop
pop
inc
mov
pop
lsl
sbb
lea
call
stc
out
and
xor
inc
mov
cltd
cmp
pop
cli
es
mull
mov
xor
lret
or
push
mov
mov
xchg
in
mov
pushl
add
cmp
jne
dec
pushf
ret
push
stos
fbld
jne
in
nop
popa
pushf
xchg
lret
sahf
outsb
xor
fdivrl
clc
inc
ret
les
xchg
mov
or
pushl
ds
outsb
insl
in
mov
or
xorl
and
stos
cmp
jp
adc
into
mov
cmpsl
cli
xchg
lods
addl
popf
inc
ds
stos
aaa
dec
jbe
lods
sbb
mov
out
leave
jnp
pop
cmp
shlb
popa
stc
repz
pushf
adc
data16
es
add
push
cmc
imul
adcb
jmp
pusha
addl
inc
repz
or
test
add
push
sub
mov
mov
and
mov
push
in
pop
mov
arpl
xchg
aad
xchg
fnstcw
out
jl
popa
add
les
pushf
gs
sahf
nop
aam
xchg
cmp
inc
das
xchg
lcall
and
mov
push
and
cmp
jae
jne
jns
fistpl
test
fxch
or
mov
testl
inc
das
cmpsl
faddp
pop
ret
stos
stos
ds
lods
aad
mov
xchg
les
ret
mov
andl
push
or
inc
cli
test
rcrl
dec
nop
aas
xchg
xchg
lahf
inc
mov
sbb
fdivs
call
sub
cmp
stos
or
xchg
sub
inc
jge
ffree
into
cmp
xor
scas
adc
loope
xchg
jp
jecxz
loopne
out
and
js
xor
cmp
xchg
cwtl
sub
mov
sahf
pushf
or
out
mov
xchg
ljmp
stc
push
sub
or
inc
push
lret
mov
sbb
jg
push
sbb
aaa
int
ljmp
and
ljmp
rorl
fildl
fldt
mov
cwtl
jp
repz
jp
push
sbb
sub
mov
mov
cmpb
bound
mov
pop
insl
inc
fcompl
pop
or
aaa
sahf
mov
pop
mov
stos
sbb
add
enter
into
push
int
aaa
sbb
jl
lock
das
inc
enter
loope
add
jns
push
add
iret
sub
inc
hlt
lahf
and
aad
pop
call
cmp
sahf
insl
outsl
mov
push
dec
xchg
cltd
fldenv
mov
xor
xchg
notb
adc
xchg
add
cmp
movsl
ret
lret
fstl
mov
push
hlt
cmp
sar
in
mov
mul
fnstcw
fistpl
enter
sub
test
inc
push
xor
test
push
fdiv
fwait
inc
adc
inc
push
in
cli
rclb
or
int
adc
xchg
leave
je
sbb
enter
popf
sbb
pop
dec
shlb
cmp
lods
ja
mov
in
adc
or
xor
cs
icebp
fdivs
rcrl
bts
rolb
out
adc
stos
clc
aaa
pop
and
inc
enter
stc
aam
cmp
insl
cld
or
fdivr
jmp
je
shrb
icebp
jns
dec
cmc
adc
lahf
and
jp
xchg
movsl
int
inc
mov
mov
in
inc
mov
inc
mov
xchg
fadds
adc
mov
dec
or
and
loopne
mov
jo
leave
adcl
fstpt
jg
jb
xor
fwait
dec
outsl
adcl
outsb
rcrb
jo
jo
mov
or
push
xchg
cmp
xchg
cld
or
loopne
xchg
xor
fcompl
shlb
int3
imul
or
sti
or
push
out
mov
js
je
and
xor
pop
lcall
stos
xorb
dec
xchg
movsb
mov
or
dec
sbb
fistl
sbb
fistpll
inc
out
addl
lahf
xchg
nop
pop
push
popa
rcll
scas
or
adc
inc
lods
mov
jb
sti
es
std
dec
ljmp
ljmp
jbe
xchg
xchg
int3
loopne
adc
adc
fs
jbe
sbb
jbe
ret
sub
add
scas
or
inc
fldcw
pop
mov
mov
mov
ljmp
nop
cmpb
outsl
jno
xor
mov
scas
in
cmpsb
std
popa
mov
addl
idiv
jg
clc
arpl
aad
mov
stos
sbb
push
cmovg
mov
push
ret
and
xchg
outsl
les
jmp
outsb
push
daa
and
pop
sub
icebp
fisttps
and
push
and
cld
add
mov
sub
lahf
lret
arpl
mov
cmpb
jo
pop
jns
aad
ficoml
stc
jbe
cmp
mov
fnsave
xor
and
xchg
imul
mov
addr16
jecxz
adc
mov
mov
lds
mov
loopne
arpl
inc
shl
ljmp
sbb
cli
icebp
mov
inc
pop
inc
subl
xor
ret
movsb
subl
into
push
mov
jle
pop
movsl
push
or
lahf
adc
ret
fsubp
mov
stos
adc
cmp
jecxz
sub
int3
and
mov
pop
inc
xchg
cli
mov
and
inc
cld
repz
roll
lret
and
pusha
add
es
and
jne
ds
mov
mov
inc
out
mov
jbe
pop
lock
popf
or
cli
adc
fldenv
xor
call
push
xchg
xor
fnstenv
js
and
fsubs
dec
push
cmp
xchg
out
sbb
cltd
sub
sbb
xchg
adc
xchg
pop
inc
sti
jae
mov
lret
fists
push
mov
cltd
test
sub
idivb
jne
mov
sbb
loope
imul
mov
es
lret
out
repnz
enter
fildll
iret
bound
xchg
push
bound
dec
xor
out
loopne
rcrb
mov
sub
mov
aaa
cmp
add
pop
aam
xchg
std
xchg
sbb
stc
inc
or
bound
sbb
or
push
jge
jb
and
push
inc
jne
das
faddl
xchg
or
dec
or
sysexit
pusha
xlat
fadds
jo
repnz
clc
mov
dec
loope
push
cmpsb
sub
movsb
cmpsb
xor
int3
fwait
add
jp
mov
movsl
pop
xchg
mov
enter
sub
push
pop
or
jb
ljmp
mov
in
mov
mov
int3
push
pop
shl
push
pop
shlb
addl
lcall
mov
add
loope
jae
jno
or
mov
addr16
and
sub
push
popf
stos
xchg
ss
jo
scas
mov
push
mov
xor
test
jmp
gs
inc
test
xchg
pop
sub
outsl
ret
jns
fs
mov
xorb
lret
or
in
and
loope
sbb
jb
shlb
or
in
mov
lods
pop
xor
ret
aaa
and
dec
and
push
cwtl
cltd
ljmp
les
jae
push
repz
in
push
loope
loop
mov
push
pop
imul
cmp
dec
cmpsl
mov
int
cld
out
jle
fsubl
lahf
lcall
sbb
jbe
xor
xchg
mov
xor
or
std
xor
pushf
and
xchg
out
xchg
adc
xchg
aas
pop
mov
mov
fisttps
test
js
sub
out
imul
test
mov
push
lds
cmp
out
sub
or
pop
cmp
mov
cmp
inc
cltd
xor
xor
pop
jmp
push
push
subb
xchg
pop
mov
addr16
sbb
aam
add
pusha
jae
ret
xchg
ss
sbb
xchg
push
pop
xor
test
add
call
xacquire
xchg
in
jns
inc
mov
cmp
dec
orb
in
popf
inc
inc
mov
cs
jp
jmp
sub
xchg
xchg
jge
adc
jns
and
add
sahf
jecxz
add
mov
add
popa
in
repz
mov
inc
mov
mov
and
popf
dec
adc
mov
cmpsl
pop
jle
cmp
stos
jecxz
stc
lea
jmp
imul
aad
add
jo
aam
jne
test
push
cmp
loopne
and
push
pushf
daa
cs
insb
inc
cmp
aam
popa
xchg
ds
fwait
add
mov
movsl
insb
test
pop
push
cmp
addl
fmul
fiadds
insl
mov
sbb
shrb
scas
or
ficoml
xchg
out
jg
stos
lods
push
mov
or
test
je
pusha
dec
ret
push
xorl
fucom
mov
push
sub
fstpt
out
adc
pop
sbb
lods
fimuls
push
mov
fmull
inc
mov
jge
ljmp
std
cltd
sbb
les
pushf
dec
jmp
movl
xchg
xchg
dec
mov
sbb
adc
cmp
adc
addr16
in
push
lea
xchg
mov
aam
jb
pop
mov
cmp
push
cltd
push
je
in
adc
and
mov
incb
mov
enter
mov
cs
jno
xchg
lcall
xchg
ds
jmp
add
pop
and
xchg
sbb
push
mov
add
loope
mov
sbb
movsb
adc
sbb
inc
test
mov
andl
push
scas
mov
xor
push
mov
loope
cmp
adc
mov
and
movb
cmp
pop
rclb
dec
mov
jb
in
sub
cmp
loopne
repz
scas
movsl
icebp
cmp
pusha
mov
addb
push
jbe
push
jg
pop
xchg
sub
sub
icebp
xchg
aas
cld
cmp
aam
and
dec
adc
cmpsb
lret
jb
xor
leave
gs
out
xchg
xchg
xchg
mov
popa
sub
outsl
mov
add
bound
hlt
int
mov
sub
and
repnz
cmp
sahf
divb
sub
xchg
in
out
and
or
imul
test
cmp
popa
and
cwtl
pop
jnp
pop
mov
xor
bound
data16
mov
pop
dec
adc
xor
jge
add
daa
inc
shll
lods
sar
mov
lods
push
sbbb
movsb
inc
or
in
mov
xchg
cmp
sbb
pushf
adc
xor
mov
rolb
mov
leave
int
out
dec
loop
std
fwait
fwait
sbb
cmp
push
jnp
out
data16
or
dec
scas
loope
scas
psubq
and
and
arpl
imul
add
sahf
pop
mov
shl
rorl
push
addr16
inc
test
leave
inc
mov
outsb
dec
push
inc
xchg
mov
pop
pop
pop
jmp
xorb
add
jecxz
mov
xchg
mov
fs
jmp
jle
out
cmp
push
adc
xchg
inc
icebp
push
repnz
add
repz
incb
cmp
add
ss
mov
bound
jge
icebp
or
and
pop
xor
mov
or
xchg
jp
test
cwtl
adc
test
cmp
in
xor
lods
mov
shlb
jg
add
sbb
dec
and
sbb
sub
lods
xor
lahf
insl
jp
incb
mov
not
daa
jne
test
jmp
push
icebp
pop
cmp
stc
in
flds
adc
std
mov
stos
cmpsb
adc
cld
int3
shrl
into
pop
clc
xchg
out
call
loop
pop
pushf
mov
pop
pop
jmp
pop
pop
dec
nop
mov
xor
cmp
cmp
mov
jnp
neg
adc
add
cli
pop
cmc
push
sbb
jmp
push
call
insl
mov
repz
cmp
jge
scas
mov
fwait
notl
xchg
movsl
ret
aaa
pop
mov
test
adc
adc
rcl
scas
xor
and
and
enter
pop
adc
fdivs
pusha
cmpsl
daa
repnz
gs
cmp
pop
aam
leave
or
inc
sbbb
inc
mov
sbb
sbb
ss
or
cmp
test
mov
push
adc
in
fstpt
lret
shrl
xchg
leave
dec
fwait
call
dec
je
daa
push
in
mov
and
fistps
ljmp
cltd
lods
cmp
xor
sbb
loope
adcl
faddl
int
dec
dec
pushf
cmc
imul
shrl
xor
enter
bound
mov
mov
cmp
hlt
in
push
scas
fdivrp
sahf
pop
pop
cmp
push
aas
sub
xchg
lds
pop
fcoms
xlat
sub
mov
mov
dec
mov
or
push
and
loope
movsl
mov
fimull
mov
lods
sbb
push
in
shlb
stc
sub
iret
pop
jge
jnp
in
or
mov
lods
out
xchg
mov
adc
imul
sbb
mov
xor
or
in
test
stc
or
pop
sti
ret
shl
inc
jo
mov
xchg
cmpsb
mov
pop
sub
push
mov
sbb
or
jno
jb
dec
dec
fcompl
out
jle
pushf
inc
sbb
push
xchg
sbb
jae
in
cld
jecxz
ljmp
mov
mov
jne
inc
mov
push
dec
repz
dec
test
pop
fwait
in
push
std
pushf
inc
sbb
jl
pop
aad
jmp
dec
dec
xor
cmp
xchg
pop
cwtl
std
in
bound
insb
in
xor
sub
add
adc
into
xor
jo
orb
and
jnp
ja
inc
sbb
lds
dec
movsl
fists
mov
push
pushf
stos
ss
fs
jge
orl
insb
pop
xchg
stos
rcrb
jo
mov
std
in
jae
andl
vmwrite
cmc
cmp
stos
jecxz
cmpsl
sub
es
fadd
fadd
test
in
mov
iret
test
or
dec
mov
xchg
sub
inc
jno
cmp
out
mov
push
pop
cmc
test
scas
cmp
jmp
sub
das
jg
mov
jp
add
scas
and
cltd
ja
dec
lahf
and
f2xm1
mov
rcll
lcall
stos
ret
dec
or
mov
out
and
cli
cwtl
pop
loop
xchg
mov
and
adc
aas
lea
push
jns
test
pop
sbb
jae
lock
and
mov
fistpll
pop
loopne
mov
pop
push
jne
es
or
lret
jns
push
xor
or
cmp
fcomp
sar
cmp
push
pushf
lods
insb
addb
push
insb
fistpl
xchg
xchg
jo
push
ficoml
or
cs
div
insl
push
fwait
or
sahf
mov
into
cmp
xchg
cmp
xor
jl
sbb
div
cwtl
data16
ret
mov
or
pushf
imul
imul
mov
mov
inc
inc
pop
hlt
and
cli
adc
psubb
xchg
mov
push
dec
aad
or
mov
and
cmp
adc
out
sbb
dec
xor
sub
dec
inc
mov
mov
in
or
sbb
xchg
outsl
lret
insb
aas
mov
dec
js
shrb
std
push
fstl
gs
xchg
adc
jae
xorl
fiadds
jbe
and
jge
or
mov
mov
sahf
incl
into
fmuls
out
xor
mov
sarl
mov
dec
add
ffree
xchg
xchg
std
jne
sub
mov
imul
inc
pop
out
inc
sti
addr16
in
int3
inc
pop
dec
rorb
addl
dec
roll
jbe
into
rol
mov
mov
mov
int3
xor
push
dec
sarl
xchg
cmp
shll
xchg
cmp
add
jecxz
mov
pop
cmp
js
insb
jb
repnz
sub
shlb
aad
or
lcall
fdivs
xorb
mov
sti
scas
ds
imul
cld
add
popa
sub
pop
cltd
fs
mov
lcall
je
ja
fwait
push
cld
dec
outsl
out
lock
pop
repz
shrl
jmp
stc
outsl
xchg
xor
lret
aad
sti
test
cmc
push
lahf
sub
xor
sbb
jl
sub
call
xor
es
pop
or
lahf
aaa
jp
test
inc
in
xor
lret
insb
cltd
sub
enter
int3
and
jb
xchg
aam
pop
shll
xor
add
fdivl
fnop
mov
mov
mov
inc
jae
xor
pop
enter
fidivrs
add
out
add
or
mov
or
int
xor
cmp
insb
xor
in
cmp
lods
pop
cmp
jle
jo
mov
cmp
or
pusha
cltd
xchg
or
subb
pusha
mov
mov
retw
aam
mov
jp
popf
fsubs
xor
push
loop
out
push
and
sahf
push
repz
fcomp
addr16
xor
int3
or
jo
mov
jo
rcl
cmp
pushf
lcall
aam
je
xchg
andl
gs
dec
ret
pop
call
repz
and
inc
mov
lds
sub
cld
xchg
loopne
cwtl
imul
repz
xor
jp
cmc
sub
fcoml
jno
lret
int
pop
pop
aas
loop
icebp
stos
lcall
or
pop
dec
movsl
std
repz
jns
jbe
mov
lcall
subb
loope
aas
xchg
dec
popa
fisubl
jo,pn
dec
iret
das
or
sbb
fstpl
into
dec
ret
push
mov
or
mov
push
ret
mov
xchg
faddl
decb
notb
cmp
mov
in
add
inc
in
push
push
push
lods
pop
pop
pop
mov
subl
cltd
lret
movsl
sub
imulb
shll
push
pushl
adc
push
xchg
movl
rorb
je
roll
test
xchg
mov
mov
xor
xor
cli
sahf
sbb
push
adc
call
pop
push
dec
push
or
xor
and
nop
or
inc
insb
and
push
cmpsl
clc
adc
inc
and
ret
sub
mov
cs
out
dec
imul
ror
pusha
jmp
outsb
add
sahf
aas
rep
jbe
push
cmpsb
jmp
mov
inc
adc
lret
mov
negl
sub
jl
mov
in
fbstp
mov
mov
sbb
stc
mov
ja
inc
cmp
out
mov
sahf
mov
daa
ds
jmp
insb
add
adc
mov
jecxz
in
xor
jecxz
xor
push
dec
mov
pop
adc
adc
cld
mov
jb
mov
in
nop
cltd
sbb
inc
push
xchg
jl
lds
mov
cs
mov
add
rcll
nop
ret
jg
rcrl
pop
sub
inc
xor
cmc
mov
or
incl
ret
pusha
and
add
jnp
int3
mov
sbb
paddsb
bound
mov
cs
fs
fwait
adc
call
sbb
jg
xchg
cli
fs
dec
lock
stos
cmpsl
jle
xlat
call
scas
sti
cmp
fwait
add
repz
test
inc
mov
sub
lahf
outsl
cmpsl
dec
out
fwait
inc
mov
fbstp
insl
add
imul
dec
sti
or
adcb
lds
mov
mov
pop
ret
xchg
lock
mov
xchg
dec
addl
ds
stos
loope
loopne
cmp
push
cld
pop
jmp
inc
lcall
pusha
and
mov
into
fnsave
andl
push
and
xor
lahf
inc
fsubrp
or
pop
sbb
cmp
leave
mov
ds
push
push
insl
cli
in
inc
cltd
adc
sbb
inc
lock
imul
dec
adc
mov
push
cli
mov
sub
test
push
xor
jb
dec
or
cmpsb
mov
inc
movsl
add
inc
sti
dec
pop
enter
sub
fldenv
outsl
hlt
lods
sbb
pop
pop
inc
jne
jno
add
mov
movsl
jnp
les
xchg
stos
ds
icebp
sub
and
fists
ds
mov
xor
stos
cmp
sub
jae
push
push
push
sub
cmc
arpl
cld
cli
xchg
fwait
mov
mov
enter
sbb
test
jmp
je
fwait
mov
cmp
jp
ret
xor
jmp
cmp
xor
sbb
mov
push
imul
ret
repnz
lock
dec
roll
add
adc
jne
or
lcall
cmp
mov
orb
and
inc
dec
lock
shl
in
cmc
out
inc
std
mov
sbb
fcomps
sub
inc
nop
aad
and
jnp
inc
movsl
scas
push
push
in
sub
lret
fnstenv
shr
int3
cwtl
test
mov
jmp
aaa
and
cmc
xchg
mov
scas
mov
mov
and
xor
mov
insl
test
shlb
mov
shlb
jg
imul
sbb
xor
ret
imul
xorl
int
xchg
aam
enter
jnp
inc
mov
and
push
cmc
in
scas
fbstp
in
push
mov
jb
inc
jecxz
test
nop
pop
xor
sub
loop
flds
xor
pop
xchg
mov
pop
sbb
ss
mov
dec
inc
gs
xor
sub
pop
rep
cmp
sbb
scas
movsl
andl
sub
add
test
js
push
adc
xchg
out
in
fwait
jno
pop
gs
mov
mov
adc
cmp
je
add
jae
sti
jnp
outsb
push
lods
cmp
push
or
xor
ss
xor
mov
cmp
mov
jno
test
inc
sti
into
inc
arpl
inc
or
cwtl
or
in
stc
xlat
bound
imul
aam
push
pop
jne
jle
mov
je
scas
sub
cmp
mov
sbb
jbe
inc
cmpsl
sbb
push
aaa
movsl
lock
push
jmp
lret
mov
or
mov
pop
adc
cmp
push
push
inc
imul
and
outsl
cmp
xchg
cwtl
or
mov
idiv
ficomps
push
sbb
testl
test
faddl
add
and
aas
in
loop
mov
mov
in
aad
fwait
addr16
and
mov
int3
jmp
cmc
enter
cmpsb
mov
adc
out
push
mov
sub
loopne
mov
cld
jns
scas
lods
scas
fdivl
test
div
rcrl
mov
and
repz
movsl
dec
loopne
pop
insb
das
movsl
push
or
sub
add
adc
insb
jb
xchg
pop
loope
sub
sbb
ja
push
mov
or
mov
jns
jecxz
adc
aam
add
or
movsl
mov
bound
add
pop
lea
add
hlt
cmp
ficompl
and
addr16
cmp
je
out
out
pop
add
inc
lea
cld
repz
pop
sbb
inc
stos
repnz
push
insl
pop
fcomps
xor
jnp
and
and
cwtl
jnp
jp
sahf
pop
mov
ljmp
cmp
jg
icebp
and
xor
inc
jns
sub
sub
jle
mov
test
push
testl
in
sti
cmp
xchg
int
ret
xor
dec
testb
testb
pop
cwtl
dec
cmpsb
mov
out
lock
or
movb
call
sbb
xor
out
mov
sbb
push
sub
out
call
and
mov
cltd
mov
pop
push
loop
call
scas
push
push
movsl
mov
int
rcrl
sbb
jbe
push
scas
push
insl
jmp
out
dec
popf
cs
xlat
xor
lods
push
std
push
pop
mov
sbb
in
nopl
xchg
pop
xchg
sbb
dec
ret
scas
loopne
mov
xor
or
les
lcall
pop
mov
rorb
push
mov
andb
push
or
jae
adc
sbb
fcmovbe
rolb
mov
push
cmp
add
pop
gs
mov
inc
add
cmc
jle
stc
or
and
adc
jno
testb
xor
fucomip
idivl
pop
js
or
sbb
iret
jnp
inc
loopne
xchg
push
xor
popf
jg
stos
lret
clc
loope
out
adc
mov
push
data16
push
inc
mov
or
cmp
adc
sub
sar
push
inc
shlb
sbb
mov
imul
xchg
fwait
lods
les
mov
push
cmp
adc
adc
pop
pop
jae
cltd
or
inc
into
pusha
mov
lds
pop
mull
sbb
xchg
cmp
dec
shr
sub
test
and
lcall
xchg
inc
ja
xchg
loope
jo
ret
add
jae
and
stos
ficoms
aad
popa
pop
ja
in
adc
rclb
vpmullw
aaa
cmc
rolb
int3
or
inc
arpl
xchg
out
push
xor
mov
sub
pop
xor
mov
push
jo
or
dec
mov
es
repnz
inc
dec
lds
add
mov
add
dec
xchg
jmp
loope
jo
push
jns
test
add
ja
cld
sbb
mov
addb
mov
mov
mov
add
cli
push
imul
and
sub
divl
cmp
mov
les
and
mov
pop
lcall
push
add
enter
add
outsb
pop
mov
mov
clc
ss
outsb
outsl
addr16
push
jl
or
insb
and
test
xchg
jbe
hlt
insb
inc
stos
out
movsb
cmp
and
add
gs
int3
andb
call
std
lret
mov
pop
lock
push
test
rdtsc
stc
leave
xchg
adcl
in
sub
lods
mov
negb
in
out
pop
data16
cmp
lock
sbb
or
inc
aaa
xorl
adc
cmp
xchg
xchg
subl
push
ljmp
outsb
inc
jmp
sbb
or
daa
mov
int3
bound
and
int3
dec
repnz
fcoml
stos
sar
icebp
insb
sti
jbe
ret
cli
mov
pop
add
or
xchg
jno
lds
or
push
and
gs
adc
mov
push
inc
push
push
cs
imul
jns
cmpsl
idivb
movswl
int
xor
jl
mov
repz
push
test
lock
jns
xchg
insl
jbe
sbb
xchg
inc
popa
or
ljmp
mov
mov
nop
scas
sbb
enter
gs
or
loop
mov
stc
ja
push
lods
in
cmpl
lea
shll
xor
adc
mov
sbb
mov
adc
xchg
cmp
in
cmpsb
pop
mov
mov
pop
dec
adc
ljmp
jnp
pop
bound
push
repz
cmp
loopne
mov
or
mov
out
mov
sbb
and
add
push
sub
loopne
inc
fwait
sbb
jecxz
inc
mov
and
and
stc
shll
xorl
mov
cmp
lea
cmp
xchg
add
lcall
mov
add
mov
lods
imul
cmpsb
pusha
mov
mov
inc
sub
int
push
daa
movsb
not
insb
xchg
rol
pop
adc
es
ljmp
mov
jb
mov
fbstp
repz
cmp
jno
sub
loopne
aad
jns
popa
jmp
jne
adc
pop
add
addb
pop
daa
mov
hlt
dec
mov
mov
div
ss
and
and
test
push
pusha
or
ds
pushf
push
inc
jecxz
add
or
xor
fwait
jl
pushf
sbb
push
xor
inc
imul
sti
les
notb
lahf
sarb
pop
xchg
testb
mov
test
js
mov
mov
mov
push
cmp
or
clc
iret
in
dec
mov
dec
inc
popa
jnp
cmp
mov
xchg
adc
insl
lcall
sub
mov
push
cmp
jle
scas
xchg
or
and
jns
sbb
fcoms
add
mov
ret
jae
xlat
sub
mov
xchg
pop
dec
cmp
push
ret
ja
and
xor
xchg
loopne
sbbb
pop
repz
cs
push
and
add
add
lea
out
xchg
xchg
stos
mov
subl
mov
data16
notl
add
jns
dec
repnz
ljmp
mov
ret
filds
clc
inc
insb
repz
int
dec
insl
es
stos
push
test
das
sub
mov
test
int3
and
lcall
cmp
push
or
in
mov
addr16
mov
das
fiaddl
bnd
cmp
xor
clc
pop
aas
aaa
xchg
push
xchg
outsb
arpl
daa
test
jnp
stc
imulb
cmc
xor
lahf
iret
fildll
xor
stos
dec
inc
cmc
inc
xchg
fnstsw
in
outsl
stc
xchg
stc
test
fisubrl
push
dec
add
mov
mov
test
scas
int3
ds
in
gs
outsl
xchg
lahf
push
sub
js
jb
jecxz
adc
mov
popf
scas
ss
sti
cmp
out
addl
stos
int
call
mov
lret
lret
testb
mov
pop
xchg
adc
mov
lret
jmp
dec
outsl
andl
dec
jbe
ret
subl
mov
outsl
addb
push
decb
ljmp
cmp
orb
out
adc
lock
and
push
sub
pop
adc
and
cmpsb
pusha
xlat
sbb
ret
push
pushf
or
jmp
fsubr
lret
hlt
inc
int
push
fwait
dec
lds
fidivs
xor
dec
pop
xchg
cmp
pusha
dec
test
xchg
out
xchg
aad
cmpsl
rcr
mov
pop
dec
sbb
outsl
mov
loope
mov
jb
aad
mov
inc
rcrl
cmp
mov
test
cmp
jno
and
mov
orl
nop
sub
mov
out
sub
pop
outsb
or
pop
dec
xor
mov
mov
outsl
and
add
imul
mov
outsl
je
lock
cmc
or
pop
push
fimull
fwait
mov
pop
addr16
inc
fnstsw
mov
lods
sbb
std
fwait
insb
inc
idivb
idiv
and
mov
dec
pusha
pop
into
frstor
pop
rorl
sahf
xor
or
arpl
ja
enter
adc
adc
aaa
xchg
add
enter
inc
les
xor
fwait
inc
add
sub
or
and
lea
mov
pop
adc
addr16
pop
je
sub
mov
add
mov
loope
push
sub
adc
mov
popf
xor
and
pop
jbe
mov
inc
sbb
adc
or
pushf
negb
lds
ja
dec
gs
mov
outsb
testb
fs
add
add
push
outsl
pop
mov
cli
daa
fidivrl
and
in
adcb
inc
mov
mov
mov
dec
test
cmp
in
jo
jns
aad
add
aas
jmp
hlt
insb
pop
test
sub
pusha
fnstcw
ljmp
fadd
lods
jmp
jmp
push
xor
cmp
dec
decb
enter
lret
je
aad
add
sbb
inc
faddl
inc
xchg
mov
rorb
in
gs
add
in
dec
shrb
push
les
in
mov
mov
xlat
sarl
notl
loope
lahf
or
dec
xor
movsl
lahf
pop
xchg
std
aad
ret
mov
repnz
or
movsl
fbstp
mov
xchg
push
mov
xchg
pop
inc
push
jmp
xchg
add
sbb
xchg
add
in
jb
aas
repnz
lods
xor
xchg
cli
and
adc
lock
andb
inc
and
in
inc
mov
push
fisttpl
pusha
and
cltd
imul
pop
mov
imul
lret
pop
fdivrs
adc
xor
aam
outsb
mov
lret
pop
aad
dec
sbbl
or
lds
and
scas
mov
pop
neg
andb
pop
add
in
mov
and
pop
inc
test
mov
testl
jle
bound
cmp
xchg
gs
ret
or
shlb
pop
outsb
push
or
mov
mov
adc
and
mov
mov
mov
insl
aam
lret
out
ljmp
xchg
cmp
cmp
gs
push
bound
add
fucomip
add
push
pop
rorb
pop
lock
in
or
jno
cmp
ljmp
les
imul
pop
imul
xchg
push
adc
push
int3
mov
icebp
mov
mov
pop
xchg
pop
inc
adc
mov
movsl
fisttpll
or
or
inc
pop
lret
cmp
loop
mov
sbbb
sub
data16
and
stos
push
dec
push
stos
xor
neg
sub
addl
add
mov
stos
mov
mov
pop
lods
and
lds
xchg
push
sub
adcl
push
sub
sub
push
and
mov
jo
push
test
inc
aad
aaa
add
hlt
jns,pn
pop
xlat
push
or
mov
pop
add
xchg
aam
fwait
cmpsl
daa
aad
sub
mov
pop
rcr
lahf
adc
mov
dec
movsb
aaa
sbb
push
dec
ret
sub
cmp
sub
push
push
mov
dec
xchg
sub
jno
lds
push
push
out
repnz
mov
out
in
push
int3
out
aas
shlb
int
inc
adc
sub
adc
dec
jb
inc
xor
mov
and
pop
xchg
push
xlat
lahf
add
fmulp
das
lock
adc
enter
push
popl
call
or
xor
cmp
ret
push
sbb
pop
inc
cmc
ss
cmp
pop
pop
add
hlt
sbb
aas
xor
aaa
roll
flds
icebp
dec
jmp
mov
scas
add
dec
out
cmp
inc
jne
push
push
sarb
push
jle
lcall
mov
or
fstpt
sbb
push
roll
sbb
add
pop
jmp
or
or
cmp
es
jo
lods
pop
mov
add
jae
pop
jecxz
sti
test
fbstp
cmpsl
in
repnz
out
inc
cmp
int3
imul
enter
push
adc
xor
enter
pop
mov
div
mov
filds
mov
sub
test
sbb
fdivrs
mov
cmp
icebp
in
jns
mov
sbb
dec
test
iret
popf
out
out
sbb
mov
mov
addb
xorb
in
adc
lods
hlt
ss
cmpsb
pop
push
add
jne
jb
mov
scas
push
add
jge
add
add
mov
or
ss
insb
clc
gs
aaa
je
shrl
cmp
sub
xor
icebp
xlat
lods
adc
pushf
test
enter
sub
sbb
lcall
pop
out
mov
loope
fdivl
test
pusha
enter
push
fucomip
nop
or
pushf
jbe
add
mov
or
dec
dec
fldenv
cwtl
inc
in
test
ljmp
jns
push
xchg
dec
sbb
pop
test
adc
or
add
cmc
mov
push
mov
loopne
or
pusha
or
loop
jbe
sub
xor
push
stos
cmp
dec
jmp
subb
outsb
xchg
mov
add
mov
lret
xchg
pushf
fadds
popa
or
mov
jae
jge
add
lret
mov
cli
hlt
int3
test
imul
pop
sub
aas
adc
sub
xchg
pop
faddp
dec
stc
sub
xchg
dec
iret
data16
add
jg
cmp
push
dec
fnstcw
fwait
dec
enter
popf
xchg
jne
sub
sbb
xchg
lock
sbb
cmpps
adcb
inc
pushf
test
xchg
into
je
jo
jecxz
popa
iret
aam
or
imul
push
and
fsubrs
jle
sahf
and
ljmp
sbb
loopne
dec
xor
cwtl
sbb
cs
xlat
xor
push
mov
inc
mov
inc
dec
jnp
jae
dec
jns
ss
mov
rorb
push
mov
icebp
add
les
addr16
mov
jecxz
call
pop
mov
inc
shrb
dec
incw
add
mov
das
jmp
cwtl
add
fisubs
mov
call
sahf
jg
bound
cmp
arpl
sub
leave
jge
xlat
inc
fbld
push
clc
xchg
mov
mov
pop
sub
movntps
or
pop
test
adc
jns
es
mov
and
les
sub
shrb
lock
push
inc
inc
rcr
xchg
and
ja
mov
js
clc
loopne
sbb
pop
lock
jecxz
xor
hlt
mov
mov
outsb
ret
fldl
out
adc
mov
lret
lock
ficoms
repnz
dec
add
jb
mov
sbb
ret
fdivrs
push
push
push
sub
jl
ret
cmc
int
aas
imul
push
or
push
lds
in
pop
lahf
ficoml
lds
dec
cmp
out
sub
push
cmp
mov
adc
andb
sub
sbb
jbe
add
jae
mov
pop
xchg
in
ret
mov
hlt
rcrb
lcall
call
es
cmc
sarb
mov
mov
add
dec
lret
scas
mov
xor
mov
fidivrs
pop
pusha
mov
push
push
enter
adc
inc
push
lock
jl
push
pop
pop
into
into
dec
movsb
mov
fldl
test
repz
fwait
jo
inc
sub
mov
movsl
scas
mov
fdivs
addr16
pop
xor
mov
pop
mov
stos
imul
sahf
xchg
ret
mov
dec
fistpll
inc
imul
fildll
leave
dec
mov
stc
subl
sbb
iret
fisubrl
mov
stc
inc
xlat
sub
rclb
das
cmpsb
pop
adc
jb
inc
sub
lods
mulb
imul
nop
mov
iret
mov
dec
int3
jnp
mov
adc
test
cmpsl
dec
ja
inc
fldenv
aam
fcmovnu
xor
ds
add
movsl
and
mov
ss
xchg
adc
mov
sti
je
stos
or
mov
scas
mov
jnp
clc
enter
leave
cmp
mov
jmp
mov
inc
sub
sub
cs
sti
dec
lea
mov
jnp
shl
mov
mov
scas
cwtl
int3
addr16
push
gs
jno
dec
mov
pop
fimull
pop
sub
push
cmp
out
add
jmp
pop
incl
aad
sbb
xor
insl
andb
lods
adc
ret
out
pushf
or
xor
mov
lahf
arpl
mov
xor
sub
sbb
sbb
xchg
js
sbbb
sahf
xchg
jecxz
sub
das
and
dec
jo
push
in
push
scas
sbb
mov
add
sahf
xchg
jle
call
lahf
push
jp
cli
test
test
fisubl
aas
stc
adc
push
cld
sti
sub
xlat
or
test
mov
dec
stos
dec
lea
adc
iret
in
mov
mov
cmp
mov
or
add
mov
enter
fldt
push
sbb
sub
sbb
orb
or
push
imulb
mov
jns
mov
xchg
cld
insb
mov
out
mov
es
pusha
mov
call
sub
pop
ret
or
outsb
and
mov
repz
lea
xchg
andl
nop
aaa
dec
mov
jo
push
and
dec
and
jnp
mov
rcrl
adc
fidivrs
fwait
xchg
add
test
fld
test
movsl
adc
jnp
test
das
xor
jbe
aas
or
pop
daa
jns
fcomp
add
jbe
test
push
in
inc
pop
sub
sub
leave
daa
clc
sbb
rcll
mov
pop
pop
push
ret
inc
sahf
in
xchg
cmp
mov
mov
xchg
cmp
mov
ss
sub
jns
into
mov
or
dec
mov
jno
sti
stos
mov
mov
mov
cld
cmp
mov
adc
cmp
int3
mov
fwait
scas
test
out
in
or
jo
mov
pop
jp
add
and
mov
aam
nop
int3
insl
mov
int3
xchg
inc
and
fimuls
into
cmp
stos
push
rcrb
jg
inc
lods
faddl
xlat
mov
iret
mov
sub
push
jge
pop
adc
cmp
sub
xchg
enter
cmp
add
in
push
pop
scas
es
push
cmp
cmp
and
fiadds
and
in
pusha
mov
cmp
fildll
or
jne
add
add
and
xchg
adcl
jae
and
mov
xor
add
sbb
cmp
cmp
sbb
shl
pop
xor
mov
jbe
push
mov
mov
dec
out
lea
adc
sub
sbb
test
icebp
fdivs
fbstp
mov
push
aaa
xchg
stc
loop
jno
icebp
mov
mov
nop
adcl
pop
pushf
mov
enter
mov
push
movsb
jne
scas
adc
dec
mov
push
and
cli
imul
mov
dec
xor
shrb
sbb
jno
push
jo
out
jno
das
data16
subb
imul
mov
inc
sub
push
call
mov
mov
in
cli
add
push
out
lahf
inc
in
inc
loope
mov
cmp
in
movb
sub
cmpb
dec
test
lahf
jl
mov
or
mov
and
idiv
xor
xchg
in
loop
clc
ja
lock
jne
rolb
fiadds
and
push
in
int3
xor
xor
push
xor
add
jmp
or
jnp
sub
mov
xchg
xchg
outsb
adc
xchg
std
imul
xchg
rcrb
int
cli
lret
pop
adc
pop
pop
in
mov
xor
pop
fwait
xchg
pushl
and
pusha
xor
and
push
xchg
mov
lret
jg
cs
add
idivl
loope
pop
sub
jle
pop
xchg
pop
sbb
inc
lea
dec
mov
add
imul
inc
fmulp
xchg
mov
jae
mov
outsb
sarb
xchg
xor
inc
inc
subb
jp
mov
push
pop
xor
push
sub
cwtl
jp
mov
dec
jno
test
jb
push
cwtl
pushf
and
scas
push
or
popa
pop
or
pop
jl
lahf
leave
sbb
ret
push
shlb
scas
mov
jmp
sbb
mov
xchg
push
pusha
pop
cmpsb
call
sub
repz
lret
and
xchg
movsl
push
out
sbb
mov
add
repnz
dec
das
pop
rcll
mov
inc
add
and
les
or
xlat
fadds
jmp
rcrb
adc
les
and
loope
pop
add
sub
in
imul
ret
icebp
stos
rcr
aas
add
and
push
xor
stc
call
add
xchg
testl
cmpsl
test
xchg
test
repnz
xchg
cmp
cmp
cld
fwait
mov
shrb
or
sbb
repnz
adcb
push
fdivrs
test
jbe
add
adc
or
test
mov
push
jno
sub
out
sub
aaa
mov
pop
add
mov
push
xchg
add
pop
roll
and
and
out
fstpl
xchg
sahf
inc
divb
leave
int
lods
cli
mov
dec
cs
push
call
pop
shl
jg
je
dec
cltd
test
cmc
or
mov
pop
incb
push
push
aaa
push
mov
push
sti
mov
cmpsl
pop
test
mov
push
imul
dec
mov
mov
mov
testb
xor
call
push
xor
std
out
sub
push
test
repz
pop
sbb
mov
fcmovbe
push
ret
cwtl
bound
ret
cmp
add
pop
add
jle
dec
test
inc
and
scas
mov
jmp
jl
lret
into
in
mov
ja
and
lods
sbb
inc
out
xchg
fcmovnb
xor
fdivrs
scas
push
sti
in
loop
sarb
jmp
xorl
mov
mov
iret
xchg
mov
sub
jbe
mov
movsb
scas
repz
sbb
addb
push
mov
call
jecxz
gs
shrl
jbe
pushf
into
cmp
sub
jb
fsubs
adc
sub
sub
lods
gs
int
xchg
adc
lock
add
push
xor
insl
outsb
shrl
pop
arpl
add
push
shll
jmp
fmul
lds
or
pop
or
adcl
mov
and
push
sbb
out
xchg
inc
dec
dec
punpckldq
icebp
mov
push
adc
add
into
or
adc
bound
test
inc
imul
lods
movsb
daa
rcl
rorl
dec
lock
or
add
lcall
lahf
div
nop
xchg
ja
add
ljmp
les
adc
call
push
sub
lret
sbb
inc
push
inc
inc
cwtl
scas
xor
push
jmp
fwait
sub
mov
int3
sbb
push
aad
push
dec
stc
or
repnz
fstl
mov
insb
mov
dec
xor
inc
testl
mov
mov
mov
inc
insl
iret
stc
inc
push
aas
xchg
fcmovne
outsb
scas
lock
sbb
gs
xchg
cltd
mov
imul
mov
lcall
push
stos
dec
adc
sbb
fsubs
add
jmpw
clc
in
push
cmp
pop
scas
push
fstpl
movsl
dec
xor
repnz
mov
sub
sbb
test
push
adc
pop
add
sub
mov
sub
popf
mov
inc
adc
inc
test
mov
add
cmpl
notb
pop
rcr
mov
xor
scas
int
fwait
ja
insl
cli
dec
sti
orl
pop
iret
jns
mov
push
mov
cmp
sbb
mov
insb
repnz
insl
mov
jg
enter
movsl
or
push
popa
loope
shrb
cmpsb
fwait
aaa
test
mov
mov
out
je
rolb
out
pushf
mov
xlat
sti
xor
add
lcall
adc
divb
and
pop
jo
mov
inc
push
cmpl
fs
mov
or
aas
adc
and
jle
mov
jo
xor
mov
enter
mov
cltd
data16
fwait
inc
jb
dec
je
aad
in
sub
in
adc
dec
mov
test
inc
mov
push
push
or
sti
lods
pop
rclb
fnstcw
sub
pop
jmp
mov
mov
xor
push
inc
or
add
mov
pop
jb
mov
in
push
int3
jbe
jbe
lret
test
jae
mov
cli
add
movsl
and
dec
adc
xor
jbe
mov
fdivr
jle
adc
cli
jns
xrelease
and
mov
push
and
addr16
ss
pusha
daa
cmpsl
in
mov
fisubl
mov
ret
enter
cmp
imul
jp
jp
jno
int3
xorb
aad
xor
fsts
sahf
pushl
or
mov
gs
movsl
movsl
insb
inc
add
mov
nop
sbb
mov
sbb
js
mov
rorl
arpl
mov
xchg
pop
mov
test
dec
nop
arpl
lahf
mov
or
or
xchg
loop
lds
adc
cld
add
jnp
push
sbb
adc
fstp
mov
call
rcrb
pop
sub
jne
mov
leave
xchg
jg
outsb
jge
and
mov
sub
cmc
outsb
jl
mov
orl
and
xchg
mov
inc
bound
out
jp
xchg
fldenv
test
add
dec
ljmp
sahf
cs
clc
adc
fcomi
mov
ret
jb
inc
mov
jbe
add
pop
push
addr16
shll
sbb
push
pop
rclb
push
mov
jg
mov
xchg
in
inc
sbb
add
test
in
add
testb
sbb
mov
dec
push
pop
lret
iret
out
push
idiv
test
addb
les
add
and
fidivrl
add
test
and
cmp
add
or
and
hlt
lret
xor
dec
scas
push
in
xor
je
test
stc
pop
mov
pop
pop
sahf
adc
bound
adc
icebp
lods
push
stos
clc
mov
inc
jae
add
mov
sbb
or
shlb
lea
xchg
sbb
mov
in
jns
rclb
xchg
addr16
loope
ret
mov
iret
orb
pushl
dec
mov
push
push
jbe
xchg
add
aam
adc
pop
aad
cmpsl
cli
aaa
inc
pushf
std
and
cs
jo
inc
lods
jmp
nop
pop
stc
push
movsb
xor
push
dec
lds
fsubl
rorl
out
xor
gs
cmc
imul
xchg
pop
rol
inc
mov
fcomp
mov
lods
rcll
mov
and
pop
inc
pop
xorb
div
jp
test
cli
pop
mov
inc
jo
in
push
sbb
iret
stos
enter
inc
xchg
add
popl
jno
jle
and
test
ficoml
add
sub
aas
or
push
fisubrs
mov
adc
aad
sbb
insl
roll
js
xchg
dec
shl
sbbl
mov
sbb
inc
outsb
loope
inc
sub
dec
test
cmpsl
cmc
push
pop
std
arpl
xor
loopne
xchg
fs
add
cmpsl
dec
icebp
insb
iret
xchg
jmp
add
xorb
stos
stos
dec
inc
mov
mov
cltd
test
push
cmp
dec
mov
pop
adc
pop
xchg
int3
fdiv
sub
cmp
dec
shll
dec
scas
int3
rorb
jb
mov
scas
inc
push
popa
cmpsb
arpl
xchg
mov
sbb
popf
xchg
mov
mov
std
xor
jle
push
inc
ret
and
rep
arpl
push
xor
fwait
jnp
movsb
daa
mov
jae
lea
xchg
xor
dec
inc
stos
adc
xchg
mov
inc
out
xor
adc
xchg
aam
fwait
sbb
mov
or
pop
dec
inc
xchg
es
scas
jae
xchg
sub
inc
adc
inc
mov
add
or
cmp
cmpsb
mov
xchg
hlt
loope
sub
mov
sbb
mov
lock
das
adc
stc
dec
shlb
sbb
pop
push
inc
les
and
icebp
fldlg2
js
inc
call
cmpsb
rcl
pusha
in
inc
inc
cmp
adc
hlt
push
shll
or
mov
pop
inc
cmp
sub
sbb
dec
mov
lods
jne
repnz
ljmp
lds
rcll
mov
out
mov
mov
out
in
add
cmp
xlat
mov
out
dec
and
insl
jnp
dec
xchg
test
sbb
repz
outsl
xchg
add
aad
mov
add
or
cmpsb
and
push
mov
and
fstp
dec
cmc
mov
ficoml
pop
mov
mov
and
call
inc
sbb
in
rcll
push
add
incl
imul
clc
cmpb
shll
push
dec
mov
fucomi
pop
stc
xor
movsb
daa
dec
xor
xchg
adc
add
pop
jge
and
out
out
or
mov
pop
mov
xchg
xor
lock
test
push
loope
leave
cld
mov
mov
fmuls
mov
inc
les
sub
adc
imul
and
fdivr
mov
push
pop
rsm
mul
pop
and
jb
and
sbb
xchg
xchg
movsl
lods
les
mov
pushf
fisubs
xchg
jbe
sub
jb
scas
push
scas
inc
fimull
pop
dec
fadds
das
ss
push
pusha
in
jge
je
in
ds
sbb
mov
in
or
dec
dec
xchg
add
mov
addr16
mov
mov
adc
cmp
loope
dec
popf
sbb
daa
aad
imul
jle
cmc
cmp
sarl
dec
xchg
insb
ja
xchg
inc
repnz
cli
jp
sub
adcl
add
jle
cld
mov
inc
mov
gs
pop
stos
rol
push
lcall
lea
xchg
sahf
lret
decb
xlat
sbb
out
ja
aam
ljmp
xchg
aas
jo
sub
xchg
pop
popf
and
jns
mov
icebp
push
out
mov
dec
gs
cmc
cli
or
out
inc
cld
add
pop
jge
mov
sbb
inc
pop
dec
inc
jle
push
gs
or
cmpb
mov
int
mov
mov
repz
inc
push
insb
mov
mov
mov
pop
movl
andb
mov
cmp
adc
push
jne
shrl
push
test
fildll
pop
addr16
inc
inc
inc
mov
inc
mov
mov
mov
fcoml
stos
in
divb
sub
ss
ljmp
push
test
sbb
xchg
inc
mov
jl
aam
mov
icebp
mov
fcomps
movsl
mov
adc
sbb
push
js
push
in
mov
ret
clc
adc
iret
stos
xchg
mov
mov
dec
cmpsl
push
push
cmp
fcmovbe
sub
xor
sub
jno
enter
addr16
stos
lock
xchg
test
mov
push
and
cmp
divl
fsubrp
push
or
push
mov
test
jb
cltd
sub
vpaddw
outsb
xchg
stc
pop
aaa
aam
div
inc
mov
jae
xlat
test
jno
adc
jmp
in
inc
stos
xlat
pop
inc
pop
pop
fdivp
lods
leave
inc
mov
aad
xchg
cmp
jo
mov
xchg
enter
pop
out
pop
clc
mov
push
sti
push
mov
lahf
pop
bound
adc
pop
mov
cwtl
mov
stos
out
xchg
push
push
lahf
adc
rcrl
loope
lcall
cmp
and
cmp
idivl
ror
imul
add
popf
sbb
and
das
divb
mov
mov
cmpsl
jns
std
ds
filds
shrl
add
jno
shr
mov
push
adc
mov
add
outsl
scas
sbb
enter
repnz
pop
ds
mull
jg
cmc
push
push
jge
inc
push
mov
cmp
loope
into
loopne
addr16
bound
and
cmc
rorb
xchg
or
in
jmp
cmp
outsl
cmc
jl
or
cmpsl
adc
pop
xor
fs
or
jb
out
out
addr16
pop
sahf
cmp
dec
insl
dec
imull
cmp
jle
loope
push
sbb
dec
mov
cmp
in
fmul
or
pop
fs
icebp
negb
hlt
stos
aam
push
lods
mov
mov
daa
adc
mov
in
xchg
adc
xor
jmp
cmp
into
ret
xchg
dec
lcall
lea
fstpl
mov
jno
pop
clc
in
sbb
push
push
jnp
jns
lahf
dec
xchg
and
xor
push
xor
inc
or
das
dec
jns
scas
inc
push
jb
jg
lods
inc
xor
loop
mull
adc
roll
imul
xchg
out
add
aad
sub
inc
hlt
fdivr
fisttps
and
roll
lock
ljmp
xor
outsl
sar
scas
mov
bound
fidivl
push
fwait
out
mov
inc
pop
and
mov
mov
repz
and
jb
neg
mov
pusha
adc
xchg
sub
icebp
out
decl
bound
adc
jge
inc
addr16
add
ja
pop
test
mov
dec
test
sti
inc
mov
clc
xchg
fs
and
mov
insl
sub
mov
js
or
jle
mov
int3
mov
lods
outsb
mov
xor
in
xchg
sub
mov
sub
sbb
or
dec
inc
les
push
xor
cli
and
fiaddl
jp
cmc
cmpsl
push
jae
negl
movsl
cmp
and
lods
pop
test
into
loope
pusha
rcr
data16
push
sub
aas
test
andl
ljmp
test
insl
ja
hlt
mov
xor
and
cmp
movsb
pop
and
pop
xor
pop
push
jmp
mov
push
hlt
dec
aad
mov
enter
mov
fistps
xor
out
out
or
rcrl
push
xchg
mov
je
add
ret
push
roll
mov
inc
mov
int
lahf
xlat
iret
xchg
jns
stos
adc
xor
cltd
pop
pop
daa
movsb
mov
push
shrb
dec
adc
jg
mov
outsl
mov
jle
in
std
out
scas
mov
push
scas
and
and
jmp
out
dec
lahf
add
mov
or
jne
inc
insb
mov
idivb
jmp
or
sub
inc
call
shlb
cmp
addr16
jecxz
jo
adc
ds
rcr
repnz
adc
dec
ret
loop
lods
and
jg
mov
jg
ja
jne
pop
ljmp
jge
insb
xorb
out
cld
and
sahf
sub
aas
push
add
pop
pop
loop
sbb
test
nop
pop
push
dec
aam
and
sub
or
xchg
pop
or
mov
loop
data16
ja
gs
push
outsb
xchg
push
in
fdivs
arpl
fcomps
add
sub
cli
loop
jle
adcb
adc
adc
sub
out
in
sub
loope
cwtl
fadd
pop
lock
sub
xchg
in
aam
cmp
adcb
cmpsb
pop
push
lock
xlat
adc
out
outsb
sub
cmpsl
mov
jbe
push
mov
push
mov
bound
mov
jbe
fwait
inc
xchg
stc
jge
sub
ss
push
es
or
ret
add
daa
pop
ja
test
ljmp
add
das
dec
sahf
inc
imul
inc
repz
lds
mov
dec
es
lcall
xchg
sahf
cmp
xlat
mov
xchg
xchg
cmp
divl
xor
push
or
test
es
jle
js
or
ret
xchg
mov
ret
inc
sub
lret
test
mov
bound
or
mov
pop
pop
mov
inc
out
bound
iret
sbb
dec
push
jne
add
mov
and
mov
in
std
lods
jo
mov
xchg
or
push
loopne
adc
pushf
pushf
push
sub
xchg
push
mov
xor
add
cmp
pop
add
jno
sub
lret
inc
adc
fiaddl
dec
xchg
jge
add
mov
shrl
or
inc
in
cmpsb
cmp
icebp
push
mov
lock
gs
in
loope
jbe
rorl
or
fildl
dec
pop
push
shll
push
and
mov
mov
push
sub
loopne
fstps
cmp
xchg
imul
mov
pop
xor
jne
jle
push
ret
insl
addr16
adc
inc
addb
mov
imul
loope
shll
pusha
inc
xchg
pop
loopne
adc
ret
loope
or
or
movsl
rcrb
sbb
aad
int
ljmp
jb
out
xchg
mov
pop
cmpsb
iret
jle
into
cmp
push
mov
mov
fistpl
and
iret
fiaddl
in
jo
call
insb
js
or
lret
bound
pop
sub
icebp
fidivrs
adc
sub
mov
lods
xchg
fisttps
cmpsl
dec
inc
test
mov
xchg
enter
sub
xchg
xchg
bound
fcom
lods
cmp
adc
jmp
add
sub
rcll
mov
out
lods
sub
cbtw
jp
dec
xchg
sub
add
add
ja
jmp
ds
incb
mov
mov
in
xor
mov
mov
or
mov
pop
fildll
test
jmp
dec
sbb
pop
mov
or
ret
dec
pop
movsb
rcll
mov
test
mov
movsl
push
jmp
test
push
bound
jmp
and
ljmp
adc
mov
out
sbb
add
mov
mov
pop
lods
push
pop
push
mov
nop
pop
mov
ret
pop
xchg
dec
insb
js
push
mov
sbb
inc
cmc
negb
fisttps
jmp
mov
xchg
arpl
adc
mov
push
cmp
mov
mov
push
xor
lods
inc
pop
test
jge
repnz
push
cmp
cmp
pop
gs
lea
in
repz
jle
lods
mov
flds
inc
or
movsb
fistps
movsb
stos
test
inc
push
pop
inc
sti
pop
sub
rol
push
mov
dec
je
insl
outsb
stos
rcll
jl
out
je
repz
xchg
dec
cmc
adc
cmp
xlat
push
lea
shlb
sbb
and
repz
cmpsb
jnp
or
in
xlat
mov
fisubrl
cmp
insb
xchg
and
sbb
das
pop
sbb
test
into
ret
pop
add
jecxz
xor
xor
gs
jns
fcomp
sub
stc
daa
mov
mov
subl
js
xor
mov
add
rorl
movsl
lods
sbb
gs
sub
lods
mov
insb
push
adc
in
xchg
dec
inc
mov
rcrb
dec
cli
movsl
cmpsl
or
mov
inc
xor
cmc
scas
mov
mov
mov
mov
push
stos
sbb
cmp
std
into
push
fcmove
cmc
leave
pop
hlt
xor
xchg
inc
repnz
dec
pop
popa
jae
dec
scas
loope
iret
pop
test
in
cs
shl
inc
ss
data16
sub
das
cmp
mov
roll
sbb
sub
cld
inc
inc
jecxz
jp
mov
pop
cltd
mov
adc
aam
pop
push
rcrl
cmp
and
lret
fisubrs
rorl
std
dec
fnstenv
repnz
aad
push
xor
add
cmc
aaa
mov
int3
adc
stos
sbb
popf
cmc
int
jl
mov
lods
in
in
jmp
and
pmaddwd
in
adc
and
movsb
sub
popa
sub
sbb
push
push
out
xor
ljmp
cltd
pop
mov
adc
xchg
daa
popa
dec
mov
inc
out
and
lds
and
mov
mov
fwait
pop
jnp
stos
aad
and
xchg
jns
and
mov
push
in
mov
cmp
mov
and
and
stos
fmul
mov
stos
leave
xor
xor
dec
stc
mov
jbe
test
pop
push
pop
std
inc
sub
pop
fistps
add
test
mov
into
mov
cmpsl
mov
and
rcl
insl
sub
aas
mov
xlat
loopne
scas
shrl
gs
or
stos
xlat
or
pop
adc
mov
sti
xor
sbb
xlat
dec
sbb
mov
adc
and
jbe
mov
es
fnop
lods
out
xor
pop
sbb
in
pop
xchg
in
mov
or
mov
fsubrl
fildl
jg
ret
pop
jnp
sbb
sbb
cmp
push
inc
jg
sbb
push
rolb
orl
and
lds
pop
xchg
xchg
enter
or
pop
jg
push
std
and
xor
sarl
mov
test
sub
sub
add
scas
push
or
leave
out
pop
aaa
das
jecxz
mov
jnp
adcl
daa
mov
stc
mov
xor
lock
mov
jp
adc
ret
jns
mov
cmp
pop
orb
test
dec
cmp
pop
xchg
xor
cmc
jbe
xor
xor
sbb
lds
dec
lea
mov
mov
jl
cwtl
out
mov
add
or
pusha
loopne
mov
jmp
hlt
cltd
sub
cld
test
testl
outsb
lods
aam
add
jmp
mov
xchg
mov
mov
jns
xchg
or
sbb
ror
adc
push
or
iret
add
lock
dec
mov
pop
sbb
jg
fisttpll
pop
pushf
pop
sbb
fs
sub
test
pop
loopne
jbe
dec
daa
jecxz
dec
out
sub
xchg
aad
mov
lret
or
loop
dec
inc
cli
add
dec
ret
ret
js
or
dec
movsb
jmp
xor
inc
dec
cld
stc
mov
xor
jmp
repz
ljmp
push
scas
mov
mov
mov
or
test
adc
pmaddwd
pop
xchg
movsl
pop
scas
mov
cmp
ficoms
ficoml
adc
sub
lds
push
stc
pop
push
fucompp
add
push
int
cmp
popl
dec
xchg
pop
lahf
ret
push
pop
push
fnstenv
lds
dec
stc
adc
mov
daa
mov
mov
cmpsb
push
cltd
pop
jns
inc
stos
and
and
enter
cmp
mov
mov
pusha
or
fmull
and
adc
sbb
xor
pop
aas
ss
mov
gs
repnz
mov
movsb
jg
mov
cmp
jg
imul
jge
pop
mov
stos
mov
shlb
lock
fchs
inc
clc
or
test
pop
enter
aad
jg
inc
mov
pop
mov
and
adc
fldenv
dec
and
push
stos
xor
stc
sub
cmc
mov
dec
jae
xlat
lret
mov
loopne
out
sub
jmp
push
push
outsb
movq
jmp
xchg
inc
ljmp
das
jae
or
mov
stc
ret
insl
nop
push
rcrl
pop
daa
aaa
test
or
fldenv
dec
es
call
aad
into
inc
das
cmp
jg
pop
xlat
rorl
stos
adc
inc
pop
push
cmp
adc
fstl
scas
enter
mov
or
es
icebp
push
sub
test
stc
lods
mov
or
adc
push
ffreep
push
sub
dec
jbe
test
and
mov
out
je
stos
enter
aas
sti
loope
pand
xor
ljmp
mov
loope,pt
sbb
xchg
sti
cmpsl
and
insl
dec
ss
mov
je
mov
fcompl
fisttpll
mov
adc
sbb
pop
jo
xchg
push
mov
mov
lock
dec
push
sbb
hlt
jl
rcrl
inc
insl
clc
dec
in
sbb
or
in
ljmp
mov
xchg
roll
inc
mov
xchg
mov
jmp
sbb
push
jae
inc
sub
mov
xchg
push
lock
pop
pop
in
js
in
in
in
mov
pop
jnp
call
jnp
cmpb
std
test
fwait
lret
lret
mov
pop
xchg
pusha
divb
fisubrs
fs
mov
in
and
adc
mov
sbb
and
rol
adc
lcall
out
adc
add
daa
ret
mov
push
addr16
and
pop
dec
add
jp
loop
or
cltd
adc
popf
div
jecxz
enter
sub
in
add
jo
mov
sbb
adc
xchg
push
lods
push
hlt
sbb
sbb
mov
mov
xor
sub
xor
lret
ret
mov
jo
pop
pop
mov
mov
sbb
pop
dec
in
inc
sbb
je
pop
adc
mov
inc
sub
sti
scas
aaa
adc
mov
add
call
jge
and
jge
pop
jbe
xchg
jp
mov
lahf
xchg
mov
int3
test
stos
mov
push
repz
xchg
out
stos
addb
push
xor
in
inc
mov
or
adc
jmp
pop
mov
adc
imul
and
bound
push
lods
loop
push
pop
mov
mov
xor
movsb
adc
sbb
cli
repnz
xor
das
sub
pushf
cwtl
sub
dec
mov
inc
sbb
dec
push
lret
fstpl
and
sahf
adc
xchg
outsl
call
rorl
bound
out
imul
mov
cli
and
pop
pop
add
movsl
inc
adc
push
and
ficoms
ljmp
sbb
mov
lds
imul
adc
dec
push
imul
ljmp
jp
ja
mov
mov
cmc
mov
or
pop
inc
scas
jbe
stos
adc
gs
add
inc
insl
mov
push
and
fcoms
lods
mov
xchg
inc
inc
lcall
leave
out
sub
cmp
mov
inc
fmuls
push
mov
mov
outsl
loopne
lods
cmp
mov
fwait
orl
inc
fcoms
push
jl
dec
add
add
inc
jg
aas
popf
aad
insb
jmp
push
sub
shl
btc
fidivrl
popf
fwait
ret
aas
fbld
in
jmp
jle
clc
jne
lea
rorb
stc
into
pop
push
pop
sbb
in
inc
imul
fistl
mov
fidivs
adc
out
iret
shlb
add
jp
mov
mov
or
mov
clc
mov
lcall
sbb
jmp
cli
hlt
insb
push
dec
cltd
push
jns
dec
hlt
lcall
into
andb
out
or
dec
adc
mov
lret
mov
in
sarl
push
dec
lahf
dec
or
add
in
pop
sbb
xlat
push
mov
and
pop
ret
stc
popa
inc
cwtl
cltd
ss
outsl
inc
es
sbb
and
xor
mov
push
lret
or
mov
outsb
scas
testl
pop
fsubr
jge
dec
pop
sub
xchg
sub
mov
lret
sub
filds
lcall
jle
and
loope
repz
std
aam
cmp
les
dec
ror
and
mov
leave
mov
push
addr16
iret
sub
rcrb
mov
sarl
pop
fwait
in
xchg
sub
test
inc
push
xor
insb
and
add
jbe
icebp
sahf
jno
das
add
sub
shlb
mov
sub
sub
xchg
jno
xorb
xchg
sbb
fstpt
sarb
cmc
xor
notl
mov
test
mov
pop
adcl
push
or
dec
xor
dec
mov
ds
cmp
xchg
sarl
pop
jns
icebp
sbbb
push
sbb
and
test
inc
mov
pop
ficoms
ja
pop
repz
imul
or
test
outsl
insl
jg
cli
cmc
mov
js
clc
push
shr
sub
sqrtps
fiadds
popa
mov
lock
rorl
pushf
es
rcr
lock
ret
popa
and
in
lcall
xchg
test
push
or
sbb
xchg
inc
cs
sarb
mov
and
in
ja
push
mov
lret
fdivrs
and
mov
pop
cmp
js
outsb
cmpsl
cmpsb
adc
pop
or
mov
pop
dec
les
emms
dec
popa
mov
fcoml
bound
cs
in
xor
popf
pop
pop
pop
fidivl
sarb
pushf
jp
std
mov
add
mov
push
insb
scas
pop
jge
inc
loopne
mov
mov
jne
adc
imul
sub
xchg
rcrl
xchg
pop
mull
push
ret
push
pop
test
popa
stos
jp
pop
lea
std
lods
lahf
aas
scas
scas
pop
in
adc
call
insl
sub
cmc
jbe
mov
cli
push
jmp
js
push
cltd
into
data16
xor
frstor
mov
es
mov
mov
xlat
push
cmp
jp
leave
adcl
popa
sbb
pop
fwait
pop
data16
js
scas
arpl
popa
repz
lea
into
lods
mov
mov
sub
lock
ret
jno
mov
outsb
roll
leave
aaa
cmp
jae
mov
in
adc
and
call
aas
das
rorl
lahf
sbb
cmp
jge
sub
pop
in
xor
jmp
cmp
movsb
mov
shll
fstl
fdivs
inc
addr16
push
ljmp
in
mov
push
cli
in
test
lret
scas
jno
fucompp
mov
je
sbb
xchg
mov
jae
imul
xchg
jno
scas
lods
xor
fadd
jmp
enter
and
js
mov
jge
je
inc
xchg
xchg
pop
push
stc
ficoml
pop
lcall
cmp
pop
sahf
mov
sub
sbb
mov
pop
cvtps2pi
and
pop
stc
fcmovu
out
call
sub
out
jge
mov
dec
sub
jne
mov
sub
mov
inc
cld
sbb
cmp
mov
stos
mull
and
sub
sbb
nop
adc
out
inc
gs
dec
cmpb
xchg
or
int
sbb
leave
and
cwtl
add
jmp
xorl
shll
add
incb
or
dec
leave
loop
pop
adc
nop
jle
inc
inc
rcll
icebp
jbe
sti
rorb
xchg
and
and
jns
bound
xchg
frstor
cld
test
aad
cmc
outsl
cmpsb
hlt
adc
mov
dec
sub
jbe
arpl
fisubrs
xchg
or
sub
lods
loope
mov
bound
in
inc
insl
icebp
pop
lods
mov
add
jl
mov
hlt
testb
lret
pop
cld
ficompl
sbb
cltd
mov
mov
mov
bnd
sub
mull
xchg
mov
shrl
mov
iret
daa
jmp
mov
call
cmp
xor
pop
stc
inc
je
inc
stc
incb
push
popa
clc
inc
imul
xchg
push
push
lret
dec
xchg
aad
add
jl
inc
stc
push
mov
aaa
pop
mov
jp
rclb
in
wrmsr
int
cmp
in
push
push
es
lods
mov
inc
dec
or
gs
iret
mov
fcmovne
sub
xchg
pop
outsb
sub
mov
out
jge
repnz
push
inc
dec
fst
jl
into
loop
icebp
clc
ljmp
out
in
pop
lahf
xlat
add
movsb
sub
jnp
dec
outsb
or
in
push
dec
dec
or
lds
cmpsl
mov
inc
dec
xchg
insl
push
lahf
xchg
test
pop
dec
or
cmp
jmp
fs
dec
mull
fistl
dec
ficoms
mov
std
aam
insb
cld
and
dec
or
xor
sub
lods
imul
mov
sub
push
pop
movsb
inc
jp
inc
jo
test
cmp
jne
rcrb
add
sbb
jecxz
inc
mov
inc
jmp
mov
int3
cmc
sub
sbb
stc
jnp
clc
test
pop
test
sbb
lret
out
shlb
repnz
rcrl
addr16
cmp
mov
xor
dec
adc
addr16
sub
push
shlb
or
or
jo
or
add
das
outsb
xor
xlat
mov
in
ds
out
push
xor
sub
repnz
repnz
xchg
mov
aad
lahf
aad
hlt
jg
xor
dec
add
cmpsl
je
mov
inc
aad
sbb
ds
pop
dec
std
repnz
cmp
push
jns
and
sub
lods
outsb
adc
loop
sub
hlt
in
inc
cltd
dec
call
jbe
mov
sahf
xor
mov
jl
xor
adc
jns
ds
dec
sbb
idivl
xchg
icebp
pusha
mov
lock
roll
fnsave
roll
icebp
jne
sbb
and
xor
add
inc
cltd
pop
dec
out
aam
sarl
jbe
xor
call
pushf
repnz
sbb
inc
cmpsl
test
jmp
idivl
loopne
lea
pushf
pop
sbb
xor
out
out
dec
mov
gs
and
in
aaa
jmp
xor
cmp
adc
push
inc
xor
xorb
inc
mov
xor
jp
daa
sub
fstpl
inc
outsl
inc
pop
mov
scas
xlat
adc
mov
enter
loopw
xchg
push
jns
mov
xchg
and
fisubrs
adc
push
pop
add
stos
mov
add
enter
inc
ljmp
mov
ret
stos
in
mov
das
sub
ficoms
dec
sub
fstpt
cli
dec
dec
sub
add
pop
cltd
mov
add
int
mov
arpl
in
sub
std
inc
clc
stos
inc
ret
jle
aad
cmp
mov
shlb
in
mov
in
rclb
adc
jo
sbb
push
test
inc
fcmovnu
mov
nop
pop
or
sub
mov
movsb
fs
or
cld
insb
loopne
lock
pop
mov
xor
ds
mov
xchg
sbb
jae
int3
loope
push
call
in
das
ret
mov
cmpsl
sub
inc
popa
jecxz
stc
int3
sub
fstpl
push
out
outsl
in
push
xor
lcall
aas
push
sbb
sub
mov
inc
subb
cmc
fsubrs
je
das
sbb
pop
and
aas
loopne
push
xlat
adc
jmp
les
pusha
and
dec
orl
into
xor
shll
xlat
scas
jp
lea
mov
pop
push
and
in
enter
cld
testb
inc
xor
push
cmpsb
rclb
push
clc
pop
test
ret
ja
mov
imul
repnz
mov
mov
out
add
out
inc
jg
mov
xor
dec
jl
mov
notl
mov
mov
stc
lret
test
dec
jmp
data16
cli
fsts
xor
mov
fstpt
sub
adc
mov
cmp
mov
jecxz
rolb
sub
lcall
ss
and
data16
jl
stos
sbb
add
and
loope
pop
aam
mov
pop
mov
adc
push
aam
mov
pop
inc
sbb
xor
js
push
sbb
and
lea
push
orl
or
sub
push
and
inc
popf
pusha
or
leave
dec
test
adc
jns
and
aam
lcall
or
add
fcompl
xchg
fdivr
adc
xchg
lock
data16
repz
loope
ljmp
lret
dec
movb
clc
or
les
scas
test
inc
pop
fcmovu
push
clc
add
xchg
pushl
rorb
push
cmp
mov
out
out
aad
dec
adc
dec
fdivl
xchg
xor
cmp
sub
cld
inc
adc
inc
dec
dec
test
pop
cmp
mov
sub
jns
outsb
setnp
aaa
hlt
loope
daa
rol
imul
xchg
xadd
aas
pushf
or
out
mov
je
and
or
adc
test
xchg
push
xchg
xor
dec
xchg
push
xchg
sti
out
xchg
jp
sbb
push
add
out
fisubrs
outsl
rol
sbb
push
aam
mov
in
rep
pusha
and
out
and
addl
mov
jmp
icebp
clc
cmp
mov
ret
mov
aas
pop
dec
push
add
jnp
out
pop
in
xchg
cld
dec
jg
pop
xlat
jecxz
xchg
scas
mov
stc
stos
js
mov
jno
inc
fcompl
aas
rorb
aaa
xor
cmp
xor
rclb
mov
inc
xchg
loopne
rorl
call
iret
in
or
lcall
pop
out
mov
jg
scas
and
inc
or
add
jmp
ret
cmpl
mov
es
mov
fdiv
lcall
mov
aas
popa
cld
jb
xor
push
dec
movsb
in
outsb
xchg
mov
enter
push
insl
std
loop
mov
stc
mov
or
jne
mov
and
push
jge
int
repz
js
jbe
xor
mov
in
pop
mov
scas
ss
adc
sub
and
jbe
pop
shlb
jbe
xchg
nop
sbb
mov
lahf
shl
add
movsl
xor
add
addr16
sub
and
cmpsl
xor
test
movsb
mov
sub
pushf
xor
repnz
fstpl
mov
pop
stos
shlb
xchg
sti
sbb
add
ffree
icebp
and
notb
in
fidivrl
add
fs
sbb
xchg
mov
mov
cld
push
add
incl
push
fsubrs
pop
ss
das
or
mov
imul
rcrb
sbb
xor
sbb
push
push
loopne
and
cs
aaa
xchg
adc
loop
into
inc
adc
pop
mov
hlt
pop
dec
or
pop
xor
mov
les
stc
pop
jnp
xchg
xlat
or
cmp
enter
cmp
pop
push
mov
lds
in
push
je
sti
sahf
cmp
lahf
test
mov
jmp
or
xchg
dec
add
and
mov
mov
sbb
aad
adc
ss
mov
sbb
mov
jmp
scas
and
aam
sbb
mov
and
xor
or
outsl
lods
rolb
mov
mov
negb
cmpsb
les
mov
sub
inc
xchg
pop
imul
aaa
popa
add
mov
mov
jmp
add
add
cmp
or
adc
orl
mov
pop
push
mov
mov
ja
sbb
xor
jecxz
mov
adc
add
xlat
aam
jecxz
mov
mov
js
lahf
repnz
pusha
outsb
dec
insb
sbb
iret
xchg
inc
and
push
test
aas
out
mov
jge
adc
arpl
or
inc
frstor
dec
out
call
push
lret
es
add
aaa
xchg
mov
nop
adc
mov
fs
pop
cld
mov
and
int3
adc
and
sbb
and
cmp
rcl
lahf
mov
sbb
in
jmp
arpl
aas
shll
mov
push
rcrb
leave
adc
mov
mov
push
mov
int3
pop
stc
jp
lods
sbb
loopne
cltd
insb
inc
mov
xchg
shl
cli
sub
into
ret
ficoml
pop
pushf
xchg
sbb
rcrl
push
movl
mov
jecxz
xor
loopne
or
ja
pop
add
je
lahf
mov
pop
push
dec
add
push
jp
adc
cld
mov
les
mov
fsubs
ret
outsb
ffreep
sbb
push
leave
lock
pop
test
gs
pop
xchg
cmpsb
add
cmp
pop
mov
adc
adc
mov
fs
gs
clc
mov
mov
add
jge
loopne
imulb
add
stos
in
mov
out
mov
jb
push
pop
fisubrl
xchg
lods
add
lahf
sbb
aaa
sbb
iret
imul
dec
xchg
int
hlt
das
mov
fisttps
dec
sub
dec
jl
shlb
lea
inc
sahf
xchg
jns
into
into
push
push
and
xorl
inc
mov
or
out
mov
xor
jmp
aaa
cli
daa
mov
sahf
jae
inc
adc
mov
cltd
daa
xchg
pusha
js
notl
dec
jge
movsl
mov
lea
mov
sti
adc
sbb
lds
xchg
in
and
add
std
pop
ficomps
faddl
jecxz
jle
aas
cmp
imul
aad
fcoml
jmp
mov
push
out
out
sub
jg
je
dec
adc
xlat
pop
test
jns
scas
aad
jp
xor
sbb
imull
lds
sti
bound
stc
add
popf
mov
insb
sbb
outsl
mov
lods
cwtl
stc
sbb
push
cmp
adc
lds
sub
add
insb
int
cltd
loope
mov
mov
cli
in
shlb
jnp
cmpsl
int3
xor
inc
xchg
std
fs
sub
bound
mov
push
bound
inc
cmc
sbb
addb
aas
add
pop
jns
lcall
jl
dec
jmp
or
sbb
xchg
jmp
mov
ficompl
sub
push
push
push
popa
stos
stos
lods
test
xcrypt-ctr
cmpsl
pop
dec
mov
cmc
outsb
mov
les
mov
es
pop
xor
aam
sbb
dec
adc
loop
aad
mov
mov
insl
fwait
loope
loopne
or
adc
pop
mov
repz
jb
out
imul
jle
lods
jle
int
mov
push
mov
cmp
jno
out
dec
dec
adc
mov
int3
push
pusha
and
ja
mov
jmp
cmpsl
or
scas
cmp
xlat
pop
push
hlt
mov
sub
jno
in
subb
insl
mov
jbe
jmp
stos
cmpsb
pop
fbld
xchg
scas
es
arpl
cmc
lods
mov
dec
cmc
dec
arpl
cmp
fistl
insl
adc
jmp
or
cmp
jnp
adc
inc
es
dec
js
xor
shll
gs
subl
in
cmp
sbb
sar
cmp
mov
stc
cmp
das
outsb
and
fwait
mov
les
je
les
sbb
mov
mov
imul
sub
pop
or
ss
jnp,pt
push
jecxz
add
jno
mov
aam
push
cmp
mov
out
gs
or
cwtl
xchg
xchg
ror
lods
daa
imul
mov
sbbw
subb
sbb
pop
or
pop
lea
outsb
sbb
insl
out
or
xchg
scas
ja
inc
dec
shrb
cld
xor
adc
jge
ljmp
test
mov
inc
mov
lds
inc
sub
xor
add
dec
mov
pop
es
mov
shlb
js
cltd
jo
icebp
lret
lret
mov
xor
call
push
loop
mov
cmc
jns
and
clc
and
jb
push
push
xchg
inc
cltd
add
adc
divl
mov
gs
cmp
movsb
nop
es
imul
repnz
ret
cltd
pop
inc
scas
cmpsb
push
push
lea
pop
ficoms
or
sahf
testl
mov
sbb
js
aaa
fistpl
addr16
adc
mov
xor
mov
rorl
or
fs
lods
and
ret
cwtl
push
jmp
loopne
lock
add
mul
into
shr
sbb
addr16
sub
fisttps
pop
xchg
pop
int
pusha
jne
push
mov
jae
ss
sbb
inc
lret
mov
sub
adc
push
pop
mulb
cmpsl
rorb
fsubrl
int
sbb
mov
sbb
and
and
pusha
shrl
rclb
mov
xor
arpl
icebp
mov
mov
sub
pop
jl
xor
mov
jnp
cli
push
dec
aaa
cmp
stos
cmp
sub
mov
dec
mov
iret
test
jbe
cmp
push
daa
sti
adc
pop
push
hlt
iret
mov
clc
mov
pop
enter
jns
clc
mov
cli
nop
sbb
lret
mov
cmp
mov
aaa
enter
xchg
daa
stos
dec
sub
inc
fistps
repz
cs
test
push
ja
icebp
lahf
insb
and
or
out
cli
jne
test
cwtl
loope
dec
test
fwait
loop
mov
insb
add
jae
test
push
out
call
xor
mov
int3
xchg
cwtl
or
lods
mov
pop
mov
arpl
mov
lds
xchg
or
cmp
mov
jmp
rclb
mov
ljmp
sub
inc
insl
stos
into
pop
loop
aad
lds
loopne
jo
shr
jne
xchg
xchg
sub
pop
lods
cli
das
add
out
xor
ljmp
inc
lahf
xchg
xchg
lock
int3
ljmp
int3
vsqrtpd
push
pop
mov
sbb
mov
push
ja
cs
push
imul
xchg
adc
arpl
add
sti
pop
cmp
pop
pop
jne
push
call
dec
jmp
jns
lcall
lock
pop
sbb
fs
sub
xchg
cltd
fists
lock
movsl
xor
ret
fidivrs
push
xchg
dec
cmp
sarl
mov
in
leave
and
cmp
push
dec
xchg
mov
js
cmpsl
jno
mov
mov
sti
cmp
insl
push
mov
jb
sahf
clc
dec
xor
fs
arpl
roll
pop
inc
cs
testb
pop
push
cmp
fs
sub
mov
stos
orl
lods
cmp
xor
test
push
dec
insb
rclb
mov
aaa
inc
mov
sti
in
xchg
pop
xchg
fistpll
pop
cmp
add
mov
inc
lock
mov
push
jnp
sub
mov
sti
mov
lcall
inc
divb
pop
pcmpeqd
push
cs
add
xlat
sbb
int
pop
insb
and
pop
dec
idiv
popa
out
adc
aad
daa
inc
xchg
push
pushf
dec
xor
or
pop
xchg
gs
or
nop
das
mov
lods
inc
lods
adc
dec
inc
mov
stos
inc
mov
popa
gs
movsl
dec
add
or
enter
cmp
adc
popa
lea
rorl
add
hlt
sub
mov
mov
and
fstpl
pop
arpl
sbb
push
adc
push
xlat
iret
dec
xchg
and
jnp
push
pop
add
je
dec
movsl
js
jae
push
push
add
sbb
dec
sbb
cmc
xor
jbe
in
ror
jnp
mov
out
dec
lock
shlb
add
jnp
cs
fisttpl
push
test
mov
sarl
imul
and
call
popf
mov
aad
daa
sub
ficomps
repz
cmp
xor
lds
inc
mov
or
loop
cvtps2pi
add
and
push
into
stos
pushf
push
jbe
stc
dec
xchg
mov
call
mov
pop
testl
xchg
rcrb
cltd
xchg
inc
dec
adc
mov
sub
push
test
push
cmpsl
test
mov
pop
jbe
pop
jnp
test
dec
clc
push
mov
int3
fwait
jecxz
pushf
dec
mov
jecxz
stos
gs
adc
sbb
pop
jmp
aad
and
inc
push
sbbb
mov
xchg
jl
je
aad
push
jge
jo
fcoms
stc
pop
sarb
push
xlat
sbb
or
cmp
dec
xchg
cmp
mov
fwait
dec
sti
adc
pop
mov
jge
inc
pop
push
jecxz
add
dec
ljmp
xchg
in
scas
mov
jns
in
in
fisubrs
jmp
test
pop
add
pop
pop
pop
sbb
lcall
lret
cmp
test
mov
pop
mov
push
push
gs
lea
xlat
dec
push
scas
push
add
mov
loop
mov
adc
outsl
rcrl
adc
push
adc
outsb
daa
pop
in
ror
jmp
push
mov
stos
xor
cmp
insb
rcrb
pushf
adc
dec
in
test
orl
sbb
and
sub
adc
insb
vsqrtss
jmp
add
inc
aam
lahf
clc
repnz
mull
and
sbb
or
loop
daa
loope
dec
mov
fucom
test
sub
xchg
in
fisttps
push
mov
push
mov
fabs
fsub
dec
mov
cltd
cmp
mov
rcrl
ret
out
stos
pop
pop
cmp
mov
add
sahf
out
out
insb
fsubrl
dec
add
dec
sub
test
scas
xchg
and
rorl
aam
ret
dec
jl
pushl
adc
stos
pop
jb
fisubrl
xchg
icebp
out
and
mov
cltd
dec
shll
mov
test
or
aaa
cmp
and
add
pusha
push
push
mov
rcll
jbe
or
xor
xor
jo
test
push
pop
outsl
jge
fidivs
adc
cmp
divl
scas
popa
fildl
out
cli
push
xchg
std
push
or
push
xor
imul
cmpsb
mov
jl
data16
icebp
push
dec
pop
shr
push
int3
fsubrs
ret
je
push
ds
jb
add
mov
jnp
and
jo
data16
sub
push
out
jne
std
dec
and
or
lret
jl
xor
sbb
and
jmp
dec
fcompl
xor
xor
sub
cmc
mov
cld
leave
mov
gs
xchg
pop
cmc
cli
fs
icebp
leave
dec
adc
mov
test
aam
std
pop
lock
js
aaa
xchg
cli
adc
icebp
pop
mov
sarl
test
jno
xor
pop
cmp
sbb
leave
jp
add
sub
stc
sbb
cmpsb
sbb
repz
or
pop
stos
testl
fdivp
sub
and
and
dec
mov
mov
mov
and
icebp
lock
bound
mov
loop
mov
adc
ljmp
dec
les
mov
movsb
xlat
xor
decb
jno
std
imul
push
dec
jecxz
mov
ljmp
fndisi(8087
mov
dec
mov
sbb
xchg
push
popf
repnz
sub
jno,pt
dec
sub
sub
cmp
test
mov
les
test
mov
loop
pop
testb
cmp
out
add
xchg
jmp
push
add
jo
and
sub
enter
pop
aad
add
or
in
push
test
mov
sub
xchg
pop
push
push
adcl
push
xor
add
icebp
mov
mov
pop
std
dec
jno
and
push
insl
inc
fnsave
add
adc
adc
adc
mov
pop
push
data16
cltd
in
jmp
in
cmpb
popa
fisttpll
and
sub
sbb
jno
fcmovne
jp
fs
mov
iret
pop
lea
imul
sbb
push
loop
shrb
lcall
cli
call
mov
jg
fdivs
or
push
cltd
sbbb
clc
push
jbe
mov
gs
mov
ret
std
xchg
loope
mov
sti
add
jecxz
cmp
scas
mov
fcomi
subb
adc
sub
ss
movsb
lock
jo
mov
xchg
popf
xor
pop
add
divb
push
add
jp
lock
dec
and
orb
and
push
adc
jbe
jp
mov
push
je
add
sub
outsl
adc
mov
out
ret
movsb
pop
ljmp
js
inc
fnstsw
cwtl
mov
or
mov
fwait
jmp
imul
mov
les
fisubl
xchg
ljmp
repnz
jnp
jo
push
mov
or
sub
jmp
lcall
dec
mov
popl
data16
in
dec
js
sti
and
mov
xchg
push
js
repz
cmp
pushf
inc
xchg
push
dec
addr16
pop
ljmp
and
xor
daa
dec
repz
push
push
out
mov
popa
lret
mov
mov
fs
dec
xor
sub
mov
xchg
jecxz
subl
insl
out
sbb
jecxz
aaa
cmpl
jnp
cli
jo
inc
ror
insl
mov
dec
stc
cli
negl
mulb
subb
and
lock
call
mov
aad
out
loope
mov
mov
iret
in
aaa
push
jmp
dec
push
scas
xor
lock
mov
neg
mov
pop
daa
bound
mov
call
fstpt
fisubs
dec
add
mov
push
pop
out
adc
xchg
ja
mov
jge
cmp
mov
sbbl
cs
xor
pop
mov
mov
mov
jge
sub
add
xchg
jno
mov
add
sbb
inc
xchg
cmp
or
cltd
xchg
and
adc
mov
push
loopne
mov
adc
mov
rcrl
cmp
imul
out
jb
push
out
cmc
lea
ss
aad
ja
mov
popf
in
mov
mov
dec
sbb
pop
jle
ficoml
popf
add
and
push
call
jg
jmp
das
pop
shlb
sub
sbb
mov
insb
xor
testb
sub
jmp
mov
pop
jl
cmp
cli
aam
mov
jl
pop
shl
pop
neg
xor
cmp
dec
xchg
adc
scas
testl
fdivrl
mov
pop
dec
mov
cmp
adc
add
lock
sbb
jl
cmp
cmc
stos
dec
mov
out
pushf
bound
jbe
test
sbb
sbb
jl
ds
dec
mov
pop
repz
or
push
push
iret
shr
mov
xor
add
nop
pushf
or
inc
mov
inc
jp
lret
jmp
ret
and
aaa
mov
jp
jmp
sti
pop
inc
push
xchg
xorb
xchg
or
scas
js
and
jg
push
inc
and
xchg
dec
repnz
outsl
aas
mov
scas
popf
vmxoff
ljmp
sbb
and
stos
cmc
aad
xor
dec
cld
pop
cld
sahf
cmp
call
aam
sbb
lret
mov
imul
out
loope
pop
outsl
lret
std
jg
andl
insb
decb
adc
pop
subb
enterw
enter
fwait
incl
repz
sub
insb
scas
mov
mov
dec
xchg
sub
dec
mov
nop
repz
aam
les
mov
test
dec
je
imul
and
arpl
and
stos
in
fiaddl
xor
push
sub
cmp
mov
mov
data16
mov
sbb
pop
das
sbb
fmulp
jno
in
sbb
das
pop
dec
pop
addr16
cld
xchg
not
out
shlb
imul
cmpsb
int
daa
or
add
xchg
jb
mov
movsb
inc
cwtl
xchg
shr
jbe
push
sub
xor
lret
push
pop
in
adc
sub
cmc
pop
xor
std
flds
pop
mov
or
xor
aad
pop
jne
int3
repnz
xchg
in
cmp
mov
dec
mov
add
dec
rcrl
or
aaa
pop
and
dec
and
dec
jle
in
and
pop
push
insl
adc
mov
out
mov
dec
adc
movsb
or
or
ds
rclb
pop
filds
je
inc
int3
cs
fs
push
outsl
sarl
pop
push
lods
hlt
clc
in
rcl
sbb
sbb
stos
movsl
popf
in
in
lds
xchg
adc
fists
rclb
pop
or
xchg
push
fistl
daa
lods
dec
test
add
lods
jge
push
inc
or
dec
ja
push
and
pop
jno
adc
pop
jo
rolb
icebp
leave
lret
mov
mov
mov
sbb
js
stos
xor
lods
inc
inc
adc
nop
inc
jle
ret
int
pop
pop
and
and
icebp
push
notl
cmp
shl
in
cltd
sub
enter
jmp
mov
mov
add
outsl
sbb
sbb
push
dec
pop
aam
mov
cmpsl
pop
jbe
jnp
or
or
cmp
repnz
and
movsl
push
pop
push
nop
or
or
jg
in
jns
lods
cmp
dec
shrb
mov
mov
mov
xchg
dec
repnz
rcrl
out
es
movsl
inc
out
sub
xor
mov
cmp
ret
mov
js
jge
repz
jp
jne
iret
jb
fucomip
in
call
pop
jbe
or
stos
inc
sbb
lods
jmp
in
movsb
insb
js
ret
pop
in
cmc
fdivrp
push
xchg
jg
push
xchg
lahf
shrb
rcrl
in
loopne
cwtl
sbb
pop
rorl
out
and
inc
popf
test
mov
mov
mov
fwait
cmp
cli
sbb
xchg
jo
jns
pop
cmp
cmpsl
mov
cs
mov
clc
inc
imul
test
aad
das
incl
dec
xchg
sbb
cmp
stos
mov
imul
fstpl
out
jne
jbe
mov
leave
and
sti
jnp
out
jmp
rcr
mov
jle
push
cmp
cmp
inc
inc
jnp
mov
adc
loop
call
mov
xchg
xchg
push
inc
sub
fstl
pop
shl
subps
lods
pusha
divb
cmpsl
sub
movsb
das
sbb
fadds
sub
movsl
mov
lcall
sbb
insb
loop
sti
cld
fcomps
mov
mov
hlt
mov
hlt
outsb
je
rorl
sbb
jne
lea
lods
rep
addl
adcb
dec
or
cmp
pop
adc
cmpsb
inc
ss
xor
sub
adc
int3
hlt
lea
adc
push
bound
popa
ficomps
rcll
jne
sbb
dec
jge
aam
mov
adc
jle
sbb
jp
call
mov
mov
out
addr16
lods
lock
cmpsl
mov
mov
mov
pop
mov
ret
and
inc
test
rolb
cwtl
adc
fwait
enter
fildl
int3
mov
mov
jg
xor
jbe
cmp
insb
sarb
cwtl
fdivs
xchg
cmc
mov
lahf
pop
mov
xchg
addr16
pop
sub
dec
ljmp
mov
dec
sarb
das
pop
xchg
ror
dec
or
inc
jg
gs
jno
outsb
cmp
xor
mov
fiadds
cli
xor
shrb
outsl
jg
lods
inc
pushf
jle
sbb
notb
nop
jmp
imul
cmpsb
insl
and
inc
in
xchg
inc
aad
test
sbb
leave
lds
dec
xchg
cmp
add
jge
sub
mov
int3
dec
andl
pop
add
shll
cmp
adc
mov
add
test
jb
pop
mov
push
mov
fimull
push
loop
arpl
jb
mov
xchg
ja
adc
sbb
jge
les
add
out
mov
pop
insb
dec
lea
sbb
je
in
outsl
in
cs
daa
adc
jl
loop
aam
stos
jg
xorb
dec
mov
test
dec
mov
add
lret
dec
push
mov
and
dec
inc
xchg
ret
or
xchg
and
sub
and
in
mov
and
jl
lds
daa
inc
pop
jns
xchg
mov
add
int3
iret
adc
jbe
mov
mov
xor
sbb
iret
or
jmp
fwait
sahf
cmpsl
popf
les
bextr
mov
std
sub
insl
push
sbb
lahf
xchg
lcall
fisttps
pop
or
or
imul
cld
std
sahf
movsl
cmp
sbb
dec
cmpl
mov
jle
fwait
daa
sbb
push
dec
int
ret
outsl
scas
mov
cmp
xor
push
stos
popf
ret
dec
iret
xor
jb
in
pop
jns
jbe
push
dec
fists
imul
mov
enter
push
jle
inc
xchg
cmp
lods
call
lock
push
in
jno
add
iret
pop
dec
sub
into
mov
cwtl
nop
sub
in
xor
les
adc
or
insb
sbb
mov
imul
mov
aam
inc
add
es
hlt
aaa
sbb
pop
shll
movsb
jns
mov
push
out
inc
call
hlt
out
cltd
cmpl
lds
mov
or
test
in
push
mov
lock
mov
int3
cmp
add
adc
xlat
mov
cmp
mov
pop
mov
scas
mov
dec
daa
out
or
jb
mov
fldenv
add
xlat
out
ds
mov
fists
jno
out
out
mov
sub
insb
dec
mov
sub
out
add
xchg
mov
std
cltd
or
mov
mov
push
popa
sub
mov
jnp
mov
mov
jp
xor
mov
inc
flds
fbstp
and
xlat
xchg
sbb
sbb
pop
adc
mov
xor
or
add
sahf
sbb
dec
pusha
jbe
mov
sbb
add
aad
sub
sbb
cltd
icebp
xor
movsl
sub
pop
xchg
sahf
xor
or
dec
or
loopne
cmp
adc
dec
cmp
mov
filds
fidivrs
xor
pop
sar
int3
iret
pop
int3
jbe
dec
add
pop
mov
sbb
aas
add
stc
lahf
and
test
lret
aas
adc
inc
push
xchg
fs
push
sbb
out
jno
sbb
mov
and
shrb
cmpsl
sub
cmp
inc
cwtl
dec
loope
addr16
and
pushf
fsubp
lahf
dec
fwait
lock
xchg
sub
inc
and
cmpsl
rcrb
dec
in
add
mov
arpl
addr16
inc
sub
jno
cmp
xchg
outsl
and
cmc
jo
push
xor
imul
int
jb
jmp
mov
xchg
aaa
xorb
xor
pop
sub
movsb
xor
mov
je
sub
xchg
dec
adc
sbb
mov
add
mov
mov
push
cmp
push
ljmp
int3
cmpsb
sub
daa
dec
andl
inc
mov
daa
add
addb
ljmp
test
fidivrs
sub
xor
cmpsl
dec
or
ss
add
push
shl
test
cmove
sbb
popl
mov
subl
cmp
mov
lahf
int3
jmp
std
add
push
cs
stos
inc
xor
mov
push
cld
pop
cwtl
es
ror
dec
int
popa
ret
jmp
xor
out
test
mov
push
jo
sub
in
aas
mov
stos
cmpsb
js
inc
mov
or
dec
js
xchg
out
loope
bound
adc
mov
lock
roll
push
subl
outsl
inc
testl
mov
ljmp
cltd
push
scas
mov
mov
push
push
push
int
repz
adc
addr16
cmp
xchg
sub
das
movd
inc
test
ficompl
mov
lock
sbb
push
jo
rorl
repnz
enter
icebp
insb
stc
imul
shr
pop
mov
sbb
lods
and
sub
mov
daa
dec
fdivrs
mov
mov
push
xchg
inc
cltd
movb
shr
xchg
and
xor
xor
pushf
fwait
gs
ljmp
inc
mov
imul
cmp
orl
xor
rclb
in
and
dec
jecxz
movsb
add
or
es
insb
inc
lods
bound
jbe
int3
hlt
cmp
ss
pusha
pop
push
incb
ljmp
mov
fnsave
sbb
mov
insl
add
sub
push
iret
lret
add
fidivs
or
pop
push
pop
ja
cwtl
jne
push
stos
shrl
xorl
adc
bound
jo
in
xor
lret
jno
js
jmp
add
jmp
dec
fwait
in
fisubrs
ljmp
cmp
pop
js
dec
dec
ret
out
aad
test
fwait
cs
inc
mov
push
out
stos
and
test
push
shlb
movsb
xor
lret
std
push
inc
cmp
mov
and
test
or
add
shrl
mov
test
mov
xor
jmp
lret
cmp
xchg
jns
into
arpl
pop
fnstcw
push
xchg
pop
push
adc
jno
loop
sub
std
jo
aaa
imul
fwait
outsb
hlt
daa
sub
fadd
fcompl
stos
mull
ljmp
icebp
push
stos
pop
or
cmp
fs
mov
or
aam
enterw
roll
pop
mov
cwtl
xlat
lret
ljmp
loopne
or
aad
sahf
add
int3
mov
sbb
xchg
mov
xor
jo
arpl
pushf
mov
dec
mov
fwait
and
je
js
lock
mov
and
and
test
in
cmpl
mov
sub
fsubl
jmp
pop
sub
sahf
or
cs
lods
popa
std
scas
push
dec
aas
push
ret
scas
je
mov
cmc
adc
and
aam
jb
sub
arpl
pop
xor
stos
popa
insb
addr16
fcoml
cmp
mov
xor
pop
sbb
fildl
and
test
mov
push
in
arpl
in
test
cmp
inc
push
pusha
sbb
pop
shlb
jns
in
mov
jmp
mov
es
mov
fcompl
es
xor
cmp
pop
jne
jle
movsb
cmp
lods
and
cwtl
jp
popa
imul
xor
and
dec
adc
fs
test
stos
adc
or
mov
cmp
stos
adc
xor
addr16
lret
dec
add
mov
in
sbb
scas
mov
push
mov
imul
cs
adc
out
push
aad
xor
adc
inc
fsubrs
push
push
imul
mov
push
add
adc
push
scas
inc
popa
add
inc
mov
sbbb
jbe
xlat
fildll
pop
imul
push
sbb
cmp
out
loopne
push
inc
push
add
mov
cmpsb
insb
add
cmpsl
outsl
xchg
mov
mov
pop
jp
popf
mov
mov
add
mov
fs
and
loop
jnp
addr16
scas
leave
jmp
js
jbe
pop
js
stos
adc
and
int3
or
cmp
js
jnp
push
clc
jnp
jp
mov
adc
js
mov
aam
notb
inc
wbinvd
add
mov
sbb
ret
dec
mov
mov
andl
std
shlb
xchg
inc
xchg
lock
mov
cmp
push
sbb
aad
rcll
mov
xorb
pop
ficoml
movsb
mov
fwait
push
xchg
arpl
cwtl
inc
mov
xchg
fisubrs
test
out
xor
out
push
jge
lret
lods
sub
scas
jle
test
jb
stos
jbe
cld
and
out
cltd
push
xchg
cmp
mov
push
adc
mov
fld
mov
mov
pop
inc
or
hlt
movsb
jnp
aad
insb
add
mov
mov
out
dec
cmp
adc
lret
divl
repz
or
scas
mov
pop
push
lahf
or
jbe
jecxz
jo
and
test
xchg
push
stc
or
sbb
dec
and
ficomps
xor
mov
cmp
push
fwait
jle
pop
inc
popl
mov
loopne
mov
icebp
inc
and
pop
daa
add
xchg
add
and
loop
test
inc
mov
add
pop
dec
mov
add
mov
sbb
mov
stc
ret
js
sub
scas
cmp
jo
mov
adc
shlb
pop
cld
movsl
movsb
filds
cmp
xchg
es
outsl
mov
fldenv
js
pop
and
int
jbe
sbb
mov
jae
jle
pop
push
insl
mov
in
ja
repz
shlb
addr16
push
pushf
mov
lret
and
mov
sbb
dec
int3
mov
icebp
sub
cmp
std
jge
test
sbb
xchg
xchg
les
imul
scas
mov
ficoml
outsb
push
outsb
arpl
adc
xchg
adc
and
mov
pop
pop
pop
aaa
rclb
mov
add
das
mov
push
inc
cld
add
movsl
movsl
call
mov
hlt
jg
pop
inc
imul
adc
stos
popf
jb
and
jbe
ja
and
lcall
add
daa
imul
inc
and
xchg
loopne
neg
inc
and
mov
mov
mov
stc
imul
push
out
outsb
pop
jnp
push
cltd
outsb
int
inc
andl
gs
add
in
jbe
pop
cmpsl
cmc
xorl
movsl
aam
xchg
sbb
fwait
nop
sub
addr16
pusha
sub
movsb
les
out
out
imul
sub
xchg
outsb
ret
mov
mov
cmp
dec
mov
jg
add
push
lret
sub
ret
xor
faddl
push
nop
test
loopne
cld
or
sub
loopne
mov
fdivrs
mov
cmc
mov
stc
mov
test
xor
std
aas
jns
leave
push
cmpb
loopne
and
sub
mov
add
aad
incb
insw
rorb
ja
mov
test
ror
sub
rorl
dec
fsubr
aad
adc
jp
movsb
testb
sub
push
mov
ljmp
dec
xchg
cmp
popf
scas
cmp
dec
xor
and
jno
jmp
adc
mov
jp
or
cmp
cmpsb
cmpsl
scas
lahf
sub
mov
fld
pop
push
repz
lret
stc
repz
cltd
dec
inc
or
add
clc
hlt
xchg
sbb
mov
add
repnz
mov
aas
mov
pop
jp
testl
jmp
mov
add
pop
mov
test
xchg
test
jp
adc
jle
das
sbb
sub
lret
stos
sub
jnp
repnz
jae
add
leave
lahf
shlb
xor
push
inc
dec
sbbl
mov
mov
mov
jp
in
mov
sbb
icebp
repz
mov
idivl
aas
mov
daa
jno
mov
nop
adc
inc
mov
dec
iret
xor
mov
push
cmp
or
lret
push
or
push
inc
dec
imul
dec
rcrl
push
clc
cmpsl
sbb
mov
lea
jb
adc
push
and
push
mov
inc
jae
push
scas
push
movsl
ret
iret
nop
insl
inc
stc
subb
add
add
int3
dec
mov
mov
test
mov
loope
jae
push
push
loopne
ret
cmpsl
add
fwait
das
jo
int3
popf
jo
insb
rorb
mov
mov
xchg
out
cmp
xorb
aas
lock
shl
mov
add
test
pop
je
arpl
sbb
pop
jecxz
sbb
sbb
or
lret
push
insl
imul
sub
ljmp
in
jno
sbb
jnp
in
pusha
shlb
mov
rcr
loopne
push
stos
push
dec
fiadds
std
sbb
test
jg
mov
fadd
xchg
nop
inc
test
push
sub
mov
sbbl
addr16
imul
pushf
adc
or
lcall
enter
stc
dec
mov
movsl
push
fldenv
pop
je
xor
adc
int3
adcb
iret
test
lock
add
xchg
gs
leave
ret
jecxz
inc
jp
cwtl
push
fstl
xor
push
in
in
fmuls
add
xchg
nop
jno
sbb
add
xlat
xor
outsl
add
push
mov
out
outsb
sub
aam
pop
scas
es
orb
push
jns
loope
cmp
in
int
or
push
sub
push
xchg
push
ds
mov
test
fmuls
ror
gs
lret
pop
rorb
cmp
add
rcr
push
popf
jnp
das
test
mov
mov
fwait
pushf
sub
xchg
fidivs
es
sti
xor
adc
jg
inc
mov
inc
jg
dec
in
dec
test
fsubr
lahf
mov
cltd
es
loope
push
and
push
outsl
push
push
sub
bound
pop
mov
jmp
adc
in
push
add
mov
xor
loop
inc
rorl
loop
adc
push
pop
add
aaa
loopne
addl
mov
int
and
int3
add
xor
adc
mov
dec
test
ja
mov
mov
push
mov
insb
test
pop
jbe
lock
push
shrl
mov
dec
frstor
jle
cld
dec
jno
popf
cmp
adc
scas
push
push
movsb
out
pusha
push
ds
cli
adc
jbe
mov
mov
push
gs
mov
or
jmp
lret
test
mov
push
add
test
ljmp
popf
les
pop
je
rcr
sahf
add
jge
hlt
add
cmp
and
inc
ror
dec
push
lea
xor
ret
js
das
pop
je
sub
pop
stos
mov
push
nop
outsb
ret
bound
loope
shl
shll
inc
dec
fwait
xchg
mov
push
inc
ja
add
pop
sbb
gs
insl
add
pop
ljmp
fwait
adc
xor
stos
hlt
sbb
cs
jae
add
je
pushf
xchg
outsl
sbb
add
and
xor
and
lock
lret
popa
imul
mov
filds
lret
cmp
sbb
sbb
xor
xor
fists
mov
pop
mov
stos
jmp
mov
pop
jne
push
xlat
lret
lret
and
not
and
mov
pop
jmp
insb
push
xor
add
sub
inc
sar
rcrl
push
add
clc
xchg
sti
lock
xchg
xor
pop
lret
lret
jnp
out
lods
and
loopne
lcall
call
fidivrl
fldcw
sub
cmpsl
and
stc
sbb
daa
into
mov
sub
icebp
adc
sub
pusha
push
dec
out
and
sub
sub
cmp
inc
outsl
fnstsw
push
jecxz
xchg
mov
hlt
cmp
rolb
adc
pushf
push
mov
jns
mov
xor
jecxz
pop
mov
lret
adc
stc
xor
iret
xchg
fiaddl
int3
inc
pop
xor
sarb
mov
jecxz
mov
jo
jge
adcl
jb
imull
in
sbb
xchg
push
adc
ds
popf
ja
je
jge
mov
enter
add
sti
gs
inc
bound
fsts
insl
jl
std
dec
js
loope
xchg
enter
pusha
aaa
or
adc
mov
ja
sbb
and
sbb
fsubl
scas
push
fwait
setno
jle
js
mov
jmp
jnp
add
sahf
fists
dec
lods
mov
push
fdivrs
pop
xchg
inc
nop
sub
jnp
pop
xchg
mov
dec
sbb
in
leave
jmp
pop
and
mov
out
sub
mov
mov
lods
imul
mov
jl
xor
sbb
in
mov
test
dec
ret
adc
decb
sti
ret
repz
jno
mov
cmp
test
sub
xor
in
jecxz
stos
mov
clc
fwait
bound
rcr
rorl
push
pushf
icebp
inc
sbb
add
pop
jns
adc
xor
aaa
inc
fisttps
dec
mov
mov
leave
adcb
pop
stos
pop
add
cmp
xchg
fnsave
mov
jns,pt
imul
popf
pop
xchg
not
mov
imul
icebp
push
popa
iret
cmovnp
mov
push
lea
fadds
add
cwtl
adc
int
xchg
lret
xchg
stos
leavew
dec
into
ljmp
jb,pt
outsl
mov
fs
push
xchg
pushf
ljmp
mov
fdivl
pop
adc
xchg
leave
clc
dec
pop
xor
sbb
push
pusha
mov
lea
lock
pusha
inc
sti
pop
xor
popa
dec
out
lock
inc
lock
iret
jnp
pushw
and
jp
dec
xchg
sub
dec
mov
stos
popf
cwtl
int3
pop
xchg
or
xchg
shll
cmp
ret
mov
rorl
pop
xchg
cld
rclb
push
xlat
xchg
inc
and
mov
mov
stos
ja
jb
fsubr
mull
xchg
xchg
xlat
cmp
adcl
cmpsb
int
in
pop
lea
lods
inc
mov
cli
stc
pop
iret
hlt
gs
dec
outsl
ret
clc
mov
push
mov
sahf
and
sub
cld
cli
pop
cli
idivl
pusha
xchg
xchg
adc
rolb
pushf
cmp
ficoms
mov
out
mov
rorl
dec
cmc
jbe
jge
fisubrl
add
daa
sub
scas
test
sarb
scas
xchg
in
aam
mov
jno
jecxz
inc
mov
pop
xor
movsl
test
sahf
jne
negl
or
pop
addr16
ficomps
movsl
push
xchg
xlat
scas
mov
fdivrs
add
push
mov
cwtl
pop
push
movsl
test
shl
lods
and
mov
or
mov
fimull
loope
lcall
inc
nop
and
inc
cli
fucom
les
cmp
test
sahf
enter
cmp
leave
push
mov
inc
sub
hlt
add
mov
and
push
test
xchg
fidivs
or
ficomps
stos
mov
adc
aas
sti
test
mov
mov
or
mov
sbb
pop
or
mov
out
imul
or
mov
inc
mov
rorb
mov
mov
imul
or
adc
xchg
int3
sub
mov
incl
xor
mov
popa
sub
in
movsb
adc
pop
or
in
inc
in
push
jns
add
aas
cmp
movsl
pop
inc
lcall
imul
mov
inc
ljmp
aad
jae
inc
xchg
or
sbb
pop
push
andb
jae
push
fmull
xchg
cltd
out
lock
aaa
push
call
or
in
xchg
add
cmc
add
and
dec
mov
dec
repnz
std
not
inc
dec
pusha
int3
sbb
jp
add
in
push
movsb
pop
leave
or
sbb
mov
scas
fstp
or
jl
inc
outsb
jle
insb
shlb
cmp
test
cltd
fcoms
inc
fcmovne
xchg
call
mov
jg
or
lock
movsb
imul
sbb
push
addl
mov
scas
mov
push
stos
repz
xchg
sbb
sbb
jmp
mov
dec
mov
loopne
push
aad
adc
bound
mov
or
dec
dec
adc
ret
dec
pop
inc
ja
xchg
sbb
andl
scas
leave
inc
xor
in
inc
lds
push
addb
andb
insl
jae
and
mov
dec
lds
mov
pop
sub
sub
fstl
insl
jecxz
dec
imul
jl
xor
and
stos
insb
inc
test
push
inc
outsb
adc
mov
shrl
xchg
xlat
iret
mov
pop
mov
jle
mov
dec
push
repnz
sbb
stc
adc
data16
pusha
stos
or
lahf
aas
scas
gs
jle
or
jns
out
xor
ret
dec
dec
mov
std
int
jae
xor
test
xor
mov
xor
dec
mov
in
push
repnz
lea
lock
inc
jmp
das
xchg
dec
imul
push
pop
fisttpll
pop
push
or
push
pop
pop
popa
xorb
inc
out
xor
mov
fmuls
dec
cmp
jge
lods
enter
and
sub
js
jle
jne
jle
push
sbb
xchg
pop
jecxz
and
mov
pop
gs
repz
mov
loopne
xchg
xchg
in
jbe
fdivrl
cmp
dec
int
in
stc
repnz
test
add
adc
add
fisubrs
sbb
ret
jae
ds
mov
mov
pop
sub
movsl
cld
jg
pop
push
scas
lcall
daa
int3
adcb
es
fistpll
mov
shrl
push
jbe
outsl
or
jo
mov
out
cmp
cmp
cmp
loop
sbb
xchg
iret
adc
xor
stos
leave
jbe
repz
jnp
dec
push
jg
lock
jge
int
jb
negb
mov
and
add
or
xlat
sbb
lds
fmuls
xchg
jnp
xor
test
and
or
jl
in
movsb
jbe
push
xor
shlb
ds
sub
das
repz
out
dec
mov
lahf
adc
enter
movsl
mov
adc
sbb
std
nop
sub
cld
lahf
rcrb
xchg
and
shlb
pop
andl
and
in
test
mov
stos
sbb
mov
sar
and
notl
mov
pushf
jnp
mov
lahf
jmp
clc
divl
jge
jbe
inc
or
pop
lods
or
cwtl
mov
sahf
dec
adc
mov
jp
xor
or
inc
pop
loopne
pop
shlb
out
or
shll
mov
sbb
stc
lahf
sahf
or
adc
cs
fwait
fs
push
push
mov
movsb
inc
xor
shl
fistpll
aaa
sti
aad
dec
or
mov
and
xor
mov
mov
enter
xchg
fnstenv
insb
out
adc
or
inc
inc
or
sarl
lahf
jl
dec
push
dec
loopne
or
daa
and
jp
pop
loope
aam
test
mov
push
sbb
test
clc
nop
fdivp
in
jmp
cltd
mov
and
mov
sub
push
fwait
es
xchg
popa
aaa
xchg
cmpsl
aam
inc
pop
dec
mov
xor
and
dec
div
int3
sub
cmp
stos
scas
cli
push
sbb
mov
xor
movsl
adc
mov
pop
aam
ja
lret
out
add
mov
xchg
mov
aad
or
push
stos
mov
scas
sbb
in
inc
inc
fistl
inc
mov
orl
jae
lock
into
jge
insb
sub
test
xchg
dec
stos
insl
dec
inc
lret
xor
pop
dec
sbb
push
insl
cmp
popf
or
push
jnp
cmp
sbb
fnstcw
or
cmp
pop
push
popa
or
out
aas
mov
pop
jg
cmp
mov
pop
cmpsb
sub
push
scas
adc
sub
xchg
cmp
ret
and
mov
out
and
mov
and
fstpl
jle
sbb
fnstsw
sub
add
inc
jp
scas
fwait
rolb
loopne
test
adc
cltd
sub
push
add
jecxz
fnstsw
mov
popa
cltd
arpl
jl
aad
cli
xorb
lcall
enter
dec
repnz
adc
pop
arpl
aaa
in
pop
pop
std
cmp
test
fidivs
ffree
jne
push
pop
repnz
sbb
jbe
mov
sub
cs
lret
cmpsb
cmpsb
fbstp
out
insb
popa
cmp
sbb
cmp
jno
pop
push
call
clc
add
add
int
repnz
push
jns
insb
outsl
stc
ja,pt
shll
ljmp
jecxz
popf
pushf
inc
ret
cmp
sub
pop
mov
fdivl
push
add
inc
in
jns
test
movb
or
mov
push
fldenv
and
push
and
push
fstpt
inc
xchg
imul
imull
movsl
inc
xchg
dec
into
mov
push
mov
stos
mov
inc
mov
stos
hlt
push
lods
dec
jo
addr16
ret
aad
notb
ss
lds
pushf
mov
dec
aas
cmpsl
pop
cmp
insb
dec
xchg
pop
nop
das
nop
pop
mov
outsl
or
mov
jns
into
movsl
mov
jg
ja
inc
mov
shrb
inc
add
outsb
push
jecxz
push
pop
inc
pop
mov
xor
adc
rcrb
mov
push
push
mov
push
add
add
jmp
mov
mov
sub
or
cld
sub
fnsave
cmp
arpl
shll
sub
inc
scas
pop
sub
fistpll
fdivrp
inc
and
cwtl
mov
int3
mov
ds
testb
je
mov
test
movsl
imul
movswl
push
testl
or
sbb
dec
lods
mov
stc
test
ret
mov
or
xchg
ret
adc
jge
jns
push
push
imul
mov
mov
aam
aaa
scas
mov
or
mov
mov
jnp
repnz
mov
cmp
arpl
movsbl
mov
es
in
mov
les
sahf
and
sahf
pop
mov
into
shrb
sbb
push
mov
or
and
xorb
inc
nop
jmp
push
dec
and
jp
aas
aad
sub
sub
xor
push
mov
dec
add
das
stc
or
push
nop
fistpl
jp
push
cmp
lods
dec
push
or
lahf
lret
mov
push
and
mov
xchg
cmp
jmp
cli
loopne,pt
fmuls
imul
es
aaa
in
sbb
in
icebp
int
sub
cmc
stc
clc
xchg
cmc
ja
sbb
dec
cmp
sbb
in
adc
mov
push
sub
dec
lock
insb
lcall
push
mov
cmp
fsubrs
pop
inc
ljmp
addl
mov
nop
xor
stos
pop
pop
inc
mov
scas
leave
cmp
sub
lods
xchg
sar
les
and
inc
aad
leave
lods
xchg
and
andb
or
xchg
xor
pop
inc
sbb
xor
pop
loopne
sarl
daa
lds
repz
and
sub
or
pop
adc
rcll
fwait
shlb
pop
sti
ljmp
sub
jecxz
xor
jnp
mov
testb
and
dec
push
iret
in
sarl
adc
fwait
jne
call
ja
scas
inc
adc
jnp
xlat
ret
or
push
jle
add
imul
aam
ljmp
dec
inc
lahf
sub
call
mov
pop
std
test
add
sub
in
mov
xchg
lods
adc
mov
fisubrl
outsl
daa
rol
fcoml
mov
subl
mov
push
imul
mov
jle
pop
adc
sbb
mov
inc
push
mov
es
pushf
inc
cs
mov
dec
idiv
pop
and
int
mov
js
mov
test
mov
imul
xchg
push
imul
xor
mov
pusha
xlat
push
mov
test
sahf
inc
push
jmp
cmp
dec
icebp
orb
and
out
es
sbb
add
or
fcom
dec
mov
fmuls
sbb
lea
xchg
lock
shll
into
shlb
sahf
ja
nop
inc
hlt
xchg
xchg
jno
in
sub
rcll
mov
pusha
sub
lea
pop
pop
and
rolb
xchg
out
mov
add
fsts
fs
mov
es
xlat
pusha
hlt
rcrl
sub
sub
adc
cmp
pop
data16
xchg
aad
mov
add
sar
leave
and
sbb
mov
push
and
push
mov
shll
jne
ror
movsl
sti
adc
frstor
shr
sbb
fidivl
fisubs
dec
dec
or
mov
mov
pop
clc
cmp
test
push
mov
repz
js
sbb
ljmp
mov
pop
cmp
out
add
iret
push
ret
mov
aaa
outsl
sbb
push
lock
in
adc
xchg
je
stc
iret
cwtl
pushf
sarb
cmp
add
incl
stos
inc
mov
into
cmp
add
jle
or
or
roll
outsb
xor
pop
shrl
lock
sbb
push
push
inc
pop
or
xchg
jmp
enter
leave
xchg
pop
cmpsl
mov
movsl
ret
mov
ficompl
das
jnp
std
dec
pop
addr16
jge
sub
cmpsl
lock
xchg
sub
or
fdiv
pop
rclb
fcmovb
lret
sub
ret
jge
and
repnz
xchg
shl
push
lds
xor
rcrb
jle,pt
xor
shlb
or
arpl
mov
fwait
lea
inc
sti
sar
insl
adc
test
sbb
data16
and
sbb
mov
xchg
sbb
dec
sub
enter
cli
lds
out
outsl
xor
push
cmp
test
xor
cmpsb
cmp
add
repz
rcrb
into
les
les
pop
pushf
sbb
ret
mov
dec
push
xor
rol
mov
jae
xchg
mov
cmp
and
jbe
cmpsb
mov
sub
inc
mov
mov
sub
inc
sbb
nop
push
sbbl
outsb
cmp
iret
sub
fidivrl
sbb
inc
jmp
push
sbb
iret
iret
nop
test
jno
movl
aas
xor
inc
push
ljmp
mov
imull
jecxz
out
pop
popf
push
xorl
outsl
cmovle
out
lret
jo
outsb
int3
into
cmpsl
xchg
loop
sub
into
movsb
inc
pop
push
addr16
rorb
insb
pop
ja
test
lods
data16
dec
mov
shrb
cmp
shrl
lea
ds
adc
mov
das
pushf
add
mov
inc
inc
push
adc
out
inc
nop
xchg
adc
mov
out
test
outsb
daa
int
data16
fnstenv
hlt
scas
inc
scas
stos
ror
or
into
pushf
pop
cmc
stc
aas
jmp
jbe
shll
cmpsb
cltd
fstps
mov
mov
adc
scas
lods
in
insl
pop
push
fwait
cmp
sub
sbb
mov
mov
test
mov
adc
or
ja
jle
daa
out
jge
imul
jle
repz
pop
sbb
adc
jne
pushf
push
jb
push
jnp
je
cmp
scas
adc
or
call
push
adc
lods
push
push
in
mov
jbe
je
inc
outsb
push
insb
insl
imul
xor
lret
push
xor
movsb
cmp
jae
push
cli
or
jae
cli
push
or
pop
dec
xor
jg
aad
inc
sub
cmp
mov
pop
lahf
fcoml
enter
push
push
les
scas
mov
xor
data16
inc
lods
filds
leave
popf
sbb
leave
lea
and
xlat
jnp
sarb
sti
loop
stc
out
mov
rcll
test
popf
adc
mov
in
pop
push
testb
or
push
mov
sbb
stos
cli
push
pop
cmp
inc
push
push
jp
mov
jbe
push
test
in
sbb
push
stc
fistpll
and
mov
pusha
testb
mov
call
lcall
fildll
je
jg
xchg
mov
subb
sub
lds
cld
fwait
mov
or
test
loopne
push
xor
inc
hlt
imul
leave
sub
test
rep
cmp
jno
std
rcrb
les
repnz
adc
int3
jnp
mov
loop
outsl
jns
xor
jge
sub
mov
sti
leave
add
adc
mov
mov
mov
aam
mov
ds
lods
jb
sbb
add
mov
jg
xor
jp
mov
jge
stc
push
mov
push
loope
sub
loope
clc
das
out
xorl
jmp
loop
into
push
mov
out
test
les
xor
mov
mov
sbbl
cmp
pop
and
mov
sahf
jne
sub
sbb
jnp
xchg
sub
cmp
out
sbb
lods
cmpsl
mov
pop
popa
lea
sbb
sub
out
and
out
mov
pusha
mov
stos
xor
pop
sti
aam
ja
test
pop
lret
cmpl
push
repnz
aaa
ja
iret
adc
std
enter
repnz
dec
mov
cwtl
ja
and
fisubs
sbb
inc
daa
enter
stos
jl
jo
dec
mov
pop
add
inc
inc
mov
mov
pop
clc
mov
ds
or
push
sbb
movsl
lahf
mov
add
jae
sbb
fcomps
and
cmpsl
sub
adc
mov
sbbl
fsubl
jg
xor
mov
insb
popa
arpl
mov
lcall
cmp
scas
or
push
ss
cmp
lods
rep
mov
stos
pushaw
loope
cmc
test
gs
dec
mov
test
jo
jns
pop
or
jle
test
insl
out
lret
xchg
and
cmpsl
mov
repnz
mov
or
test
and
inc
rcrl
and
bound
cli
scas
rolb
jno
jno
cmp
sbb
push
add
add
cltd
lahf
movsb
jns
mov
je
incl
leave
sub
rclb
aam
jo
aam
adc
cmp
mov
push
leave
adc
jmp
call
hlt
out
cltd
dec
aaa
adc
addr16
mov
mov
bnd
xchg
inc
or
cmpsb
loopne
push
add
sbb
sub
add
xchg
sbb
ljmp
js
orl
xchg
lds
fldl2t
jbe
add
mov
cmp
pop
mov
mov
lds
out
xchg
ja
sub
lret
and
bound
dec
ljmp
push
fisubrl
sahf
and
mov
mov
int3
mov
jo
into
int3
mov
add
inc
addr16
rcrb
fwait
sub
jg
sbb
sbb
pushf
dec
hlt
cmpsl
cmc
cmp
imul
lock
imul
cmp
testl
xchg
ds
cmp
mov
outsl
adc
mov
movsb
out
lods
mov
push
das
mov
xor
sbb
jae
movsl
stc
lret
sbb
xchg
divb
add
mov
add
out
add
jp
jb
lea
cmpsb
out
dec
and
mov
add
fiaddl
pop
mov
mov
add
aam
gs
jge
hlt
lret
test
loopne
andb
mov
add
add
aad
cs
ret
loopne
mov
pop
sti
jbe
push
jg
movl
in
inc
mov
jle
lods
or
push
mov
or
mov
ljmp
lahf
iret
lods
mov
cmp
icebp
xchg
pop
dec
int
adc
or
adc
dec
ret
sysret
in
push
push
sti
xchg
xor
sbb
fstp
push
imul
mov
sub
sub
cmp
shl
xlat
mov
jl
jge
adc
jp
aaa
in
cmp
mov
add
adc
cli
cmp
rol
mov
neg
jmp
out
cltd
js
mov
and
ficomps
lods
add
push
pop
icebp
divl
negb
jecxz
shrl
mov
inc
jmp
mov
inc
inc
lods
or
pop
pop
pushf
bound
lcall
sub
add
or
sub
pop
pop
pop
lods
mul
sub
pop
vpaddd
jp
mov
pusha
clc
shll
orl
into
in
mov
sti
popa
movsb
arpl
push
mov
xchg
mov
repz
dec
adc
sarb
dec
inc
mov
fstl
or
test
aam
out
int
mov
lods
pop
lods
std
sub
push
nop
jno
rolb
and
adc
dec
rcrl
push
leave
andb
jne
cli
jl
sub
sbb
jp
mov
out
xchg
pop
mov
adc
cwtl
inc
iret
sub
jle
push
ja
pusha
flds
out
dec
pop
xor
pop
out
sahf
mov
xor
xor
jle
cmc
subb
cmpsb
insl
loope
cmpsb
pop
repnz
ss
xor
das
mov
les
test
mov
movsl
mov
ja
popa
jno
addb
test
repnz
xor
mov
pop
ret
ja
sbbl
dec
and
lcall
mov
cmp
pop
push
jp
jecxz
les
stos
xchg
mov
in
xor
xchg
add
loope
es
sbb
mov
dec
das
lcall
inc
xor
add
push
push
jle
loop
push
fisttpl
xchg
or
xor
loope
shr
push
sub
ljmp
add
addb
iret
cmpsl
mov
or
les
cmpb
mov
clc
jb
mov
mov
gs
scas
dec
sub
inc
lds
insl
insl
or
shll
mov
lcall
push
sbb
xchg
adc
cmp
adc
pop
ja
dec
add
inc
push
push
jge
cmp
sahf
imul
ret
rcr
gs
xor
cmp
dec
ljmp
ljmp
sbb
sub
push
push
adc
stos
stc
push
iret
stos
xchg
aas
jecxz
xchg
sbb
mov
pushf
pushf
jg
enter
or
xor
xor
xchg
inc
shll
xor
sbb
add
lds
scas
insl
dec
loope
adcb
pusha
mov
into
rol
mov
loopne
xor
sub
xor
imul
pushf
add
pushf
scas
lret
or
mov
xor
push
ja
out
sub
jno
pop
mov
es
pop
push
jno
push
inc
movsl
hlt
neg
sub
cmp
or
inc
or
adc
mov
ljmp
js
lret
mov
cli
mov
hlt
test
adc
loop
pop
mov
cwtl
adc
adc
popa
aas
ds
xchg
insb
push
test
pop
fwait
adc
roll
jno
push
fisttpll
les
orl
ret
out
add
dec
mov
lea
imul
xchg
xlat
test
cmpsl
and
inc
out
iret
xchg
xor
push
stos
xchg
ljmp
sub
jle
inc
or
lods
aas
call
mov
pop
shr
in
bound
jae
jmp
jge
cmp
cwtl
lea
mov
push
shl
sbb
jnp
push
nop
ljmp
cmp
icebp
adc
daa
mov
xor
ds
mov
cmp
iret
push
push
pop
push
mov
adc
cmc
pop
push
lcall
lock
mov
fiaddl
in
push
inc
dec
loop
xchg
pushf
lock
mov
xor
xchg
into
std
dec
cmp
push
roll
je,pn
xlat
jns
mov
push
into
call
loopne
mov
mov
fdivrl
jnp
mov
xor
dec
andl
repz
pusha
and
xchg
loope
add
jae
inc
loop
fidivl
push
cmpsl
cmp
sub
in
pushf
xchg
push
xor
push
xor
out
out
jecxz
lods
lret
iret
sub
lock
sub
dec
fbstp
xor
ret
es
xor
test
jg
cmpsl
ret
insb
ss
push
dec
xchg
shl
fildl
push
push
call
xlat
and
loop
fdiv
cld
mov
adc
pop
and
je
in
jne
mov
push
popa
inc
pop
iret
sbb
pop
cmpl
int
inc
jp
lret
rcr
loop
inc
outsl
loop
test
lea
out
fstpt
dec
or
fistl
fmul
sub
sub
jbe
sahf
and
ficomps
pop
sub
push
mov
cmp
xchg
cmp
and
sub
call
adc
pop
fwait
mov
cmp
jge
fmull
inc
cmp
mov
sub
push
sub
sbb
jno
cltd
out
fs
jmp
lea
mov
pop
call
and
cld
icebp
mov
cmp
adc
adc
or
xchg
imul
inc
ret
adc
sbb
add
cli
push
mov
and
lcall
enter
xchg
mov
mov
gs
test
clc
cmpsl
xchg
and
pop
cli
jmp
popf
sahf
mov
lcall
fists
adc
fsubs
jno
mov
dec
insb
mov
or
mov
test
clc
in
mov
incl
adc
adc
je
cwtl
imul
jb
sbb
fcoms
aas
add
pop
inc
lock
fcomps
mov
mov
in
push
xchg
ret
add
in
outsl
mov
fldl2t
fwait
xor
lret
test
cmc
faddl
inc
aad
mov
ljmp
push
jns
ret
shlb
imul
mov
loop
aas
pop
pop
dec
mov
xor
jne
push
ss
add
enter
cpuid
inc
clc
sub
mov
sbb
lcall
out
out
movsb
imul
mov
fldl
push
cmp
mov
popf
sbb
cmp
sbb
sbb
xchg
xchg
mov
dec
xor
lods
aas
mov
orl
pop
insl
xchg
sbb
push
scas
xchg
dec
clc
dec
pop
cmc
jo
lea
rorb
xchg
insb
sub
inc
adc
xchg
lods
add
or
mov
sub
or
jo
lods
gs
push
xchg
mov
jp,pn
inc
in
icebp
imul
lcall
andb
nop
sbb
data16
out
test
push
adc
cmp
insb
fsubl
push
inc
shlb
xchg
cmp
xor
xchg
aas
jo
adc
cmp
xchg
aam
adc
sub
enter
in
repnz
call
lock
sub
pop
stc
xor
inc
mov
xchg
mov
movsl
cwtl
xlat
loopne
mov
adc
testl
sbb
xchg
ja
jne
mov
pushf
loope
mov
clc
testb
inc
mov
leave
fsub
iret
pusha
jle
mov
jg
mov
mov
fst
cld
repnz
pusha
cwtl
mov
mull
mov
jecxz
mov
lds
ret
add
fmull
enter
xor
call
pop
sbb
pop
aas
loop
cltd
loope
in
add
stos
cs
insb
outsl
xorb
jnp
testl
ret
add
stos
out
scas
lock
sub
leave
xchg
addr16
xor
jnp
cmc
sahf
cltd
jp
loopne
push
or
flds
adc
xor
ficomps
test
lret
loope
test
mov
insl
pop
push
rcll
lods
adc
xor
out
mov
cmpsl
ret
adcb
mov
cs
in
cmc
mov
xlat
jne
cli
ret
cmp
out
sub
dec
jo
push
lret
shr
aad
cmp
gs
leave
xchg
inc
mov
shrb
inc
out
pop
insl
pusha
orl
das
int
insl
xchg
in
push
xchg
add
mov
cmp
mov
cmp
rorl
loope
sbb
repnz
adc
inc
loop
lahf
nop
cmp
cmpsb
popa
xchg
jg
sbb
mov
aaa
jg
mov
sub
add
mov
into
fcoms
cmp
cmp
fadd
dec
mov
out
iret
adc
dec
or
loop
stc
xchg
mov
loop
addr16
je
or
mov
lahf
jae
dec
sub
or
mov
inc
mov
pop
sub
xchg
fbld
xchg
jbe
pop
test
or
data16
and
iret
int
and
cmpsl
hlt
dec
out
out
fisubrs
outsb
ja
push
sub
movsb
sub
enter
pop
decl
rorb
fidivl
aas
fadds
repz
push
xor
bound
test
or
mov
xchg
push
stc
jnp
jno
out
pop
aaa
mov
mov
loop
inc
xor
popf
adc
jae
mov
inc
dec
sbbb
aad
jae
mov
sbb
inc
mov
in
pop
lea
pop
xchg
xchg
repnz
ja
test
jle
jge
and
adc
mov
cmovp
shrb
ds
daa
das
inc
cmc
int3
inc
sbb
inc
jae
add
in
fstps
lcall
inc
sbb
sub
push
aas
cmpsl
mov
loop
adc
push
fnsave
and
jae
sbb
xchg
std
adc
pop
adc
subb
test
mov
sbb
jmp
ja
out
add
fadd
mov
sti
sub
fidivrs
cmp
xchg
sbb
mov
lcall
add
nop
fbld
lcall
test
sbb
adcl
loope
mov
scas
mov
xchg
inc
cmp
adc
jns
pop
test
inc
adc
lcall
mov
in
scas
pop
inc
push
sub
subl
or
std
or
and
pop
fidivrs
jp
lret
mov
es
mov
popa
inc
gs
bound
in
push
push
rorl
dec
shrl
cwtl
xor
je
notb
mov
sar
cmpb
dec
push
repz
add
xchg
js
outsb
mov
out
insb
and
pop
scas
dec
sbb
jl
nop
addps
push
popa
mov
mov
arpl
xchg
dec
adc
sub
pop
stc
inc
adc
dec
int3
iret
popf
sbb
jno
test
cld
dec
cmp
ret
rcr
stos
pop
inc
xor
adc
aaa
mov
fisubrs
add
add
test
pusha
pop
ret
dec
inc
jmp
mov
dec
fisttpll
adc
mov
pop
daa
outsl
cltd
cmp
test
imul
pushf
xor
inc
dec
push
lods
pop
out
xchg
pop
outsb
pop
outsb
clc
shll
add
test
shlb
sub
mov
into
sub
mov
daa
xchg
or
xchg
andl
mov
leave
xchg
fsubrp
ret
sbb
and
out
repz
dec
ret
dec
pop
pop
mov
rcrb
in
pop
outsl
lea
outsb
mov
in
mov
sub
cmc
jp
mov
dec
ret
loopne
fs
xchg
cmp
xor
outsl
jo
pop
dec
insl
ss
xor
mov
pop
sbb
mov
stos
xchg
and
xchg
movsb
or
out
cwtl
xor
arpl
and
cld
arpl
push
stos
dec
mov
inc
lds
icebp
arpl
jl
cmp
in
pop
xor
repnz
roll
aad
jae
and
nop
hlt
add
aad
push
rolb
popa
pop
nop
jno
andl
xchg
cmp
mov
pop
push
icebp
push
outsl
mov
push
xor
sbb
adc
fisubs
push
imul
push
mov
scas
subb
sti
lods
fisubrl
sbb
cld
mov
imull
sub
clts
inc
xchg
outsl
mov
push
and
pop
imul
push
mov
push
xor
mov
mov
int3
loope
inc
jl
data16
dec
jae
xor
pop
rcrb
xchg
repz
iret
mov
dec
mov
sti
sub
lods
loop
inc
cmp
movsb
out
mov
pop
scas
repz
ja
fs
int3
add
scas
sub
adc
outsb
out
dec
mov
sbb
jmp
xchg
test
mov
dec
cs
inc
and
mov
pop
xor
cmp
mov
mov
mov
mov
cmp
add
roll
push
cmp
icebp
enter
pushf
test
clc
and
outsl
iret
and
jnp
jb
mov
jl
mov
push
pop
mov
imul
pop
jle
in
xor
out
inc
and
sbb
imul
popl
adcl
adc
or
jb
addb
data16
subb
xor
call
inc
xchg
mov
insl
jge
jae
dec
fyl2x
push
xorl
adc
add
sbb
shrb
and
mov
xchg
inc
pop
out
mov
ljmp
pop
stos
and
cs
add
int3
mov
pmulhuw
repz
mov
leave
ja
rol
xchg
or
sbbl
outsb
sbb
shrl
andb
xor
mov
outsb
push
add
adc
orb
mov
addl
xchg
daa
mov
ret
inc
jne
and
lahf
jl
insl
cs
inc
ja
inc
in
jmp
scas
xor
xor
std
imul
or
ss
jbe
pop
cli
push
lds
mov
ret
mov
dec
add
add
ja
xchg
dec
or
fstl
repz
shlb
stc
rep
imul
enter
imul
daa
sbbb
inc
push
pop
push
inc
movsl
sbb
in
rolb
sub
scas
or
mov
in
mov
jge
push
arpl
xchg
aam
dec
ljmp
xor
dec
fnsave
loop
cmpsb
cmp
jge
pop
push
dec
xor
cmp
cmc
sub
sbb
cmp
push
mov
cmp
xchg
scas
je
adc
mov
jl
in
mov
outsl
xchg
inc
ds
and
mov
test
ret
gs
push
pop
cltd
cmp
jne
push
dec
into
les
fldcw
dec
sbb
cmpsb
mov
cmpsl
fs
hlt
lret
push
mov
pop
dec
test
lock
rcrb
hlt
outsl
lods
arpl
fdivrl
gs
test
data16
int3
and
mov
sahf
es
add
lret
xchg
loope
ja
ret
sbb
jle
mov
mov
adc
fidivrs
xchg
xchg
inc
js
mov
adc
sbb
cmp
pop
cmc
xchg
sti
fwait
inc
add
enter
xor
cltd
lods
sti
pusha
and
adc
jl
inc
xchg
js
aam
loop
clc
add
mov
xchg
sbb
shll
pop
jl
call
std
fiaddl
shll
add
sarl
or
sbbl
jl
insl
aad
push
jae
inc
pop
xlat
xchg
cltd
test
or
adc
insl
jno
mov
rcll
es
in
repnz
mul
shr
xlat
stos
xchg
push
popa
sahf
dec
jl
aaa
and
shr
and
push
mov
rcrb
lea
pop
outsl
mov
or
loopne
pop
addr16
aas
mov
fnstsw
and
mov
sbb
sub
push
popa
test
adc
adc
repz
bound
imul
cmp
jl
jmp
mov
jae
std
sti
mov
push
je
mov
lock
add
inc
es
xor
xchg
div
pop
ja
lock
mov
ret
sub
aaa
pop
mov
dec
and
inc
dec
imul
dec
push
and
stos
idivl
addb
arpl
push
dec
dec
inc
outsb
jmp
adc
sbb
sub
push
pop
jge
mov
mov
jp
mov
in
inc
inc
pand
mov
inc
jb
xor
ret
inc
sub
jo
jnp
in
test
push
xor
mov
mov
mov
jnp
arpl
outsl
push
cmp
jne
lret
aam
pop
rcrb
mov
xorl
inc
mov
xchg
fwait
ss
ja
cmp
mov
das
aas
push
jb
into
xor
aam
push
dec
sbb
mov
in
insb
arpl
push
in
stos
test
pop
adc
fisubl
imul
push
lahf
pop
mov
ljmp
pop
sub
sbb
dec
arpl
fmul
lds
rol
sti
xchg
outsl
mov
jns
ja
xor
es
ret
pop
push
popa
pop
mov
xchg
mov
imul
or
and
sbb
and
push
mov
movsb
daa
cltd
movb
inc
or
push
lock
stos
ljmp
adc
xor
and
movsb
cli
faddl
mov
push
or
sub
imul
pop
or
sub
mov
cmc
in
aad
nop
movsb
adc
ss
in
outsl
roll
in
sub
stos
cmp
pusha
fucomi
push
stos
push
or
mov
data16
xchg
imul
push
jp
mov
sub
leave
push
pop
mov
pop
lds
mov
push
dec
sbb
lret
pop
adcb
nop
ja
test
jb
lret
inc
xchg
lods
lret
add
adc
outsb
test
lods
and
push
and
and
push
sbb
push
testl
insl
lea
mov
jmp
pop
cld
daa
cmp
adc
lods
arpl
inc
inc
dec
or
fsubr
out
inc
mov
nop
cli
jnp
call
ret
imul
xor
sbb
mov
stos
xchg
or
cmc
cmpsb
dec
loopne
push
inc
decl
add
int3
push
cmc
cmp
lock
jbe
or
insl
or
stos
push
mov
xor
add
fadd
jge
jnp
pop
rorl
lock
out
jb
push
lahf
pop
sub
int3
add
sahf
and
aam
insb
dec
stos
sbb
ss
stos
mov
fs
mov
xchg
mov
dec
leave
jae
push
mov
mov
dec
push
cmp
sbb
inc
fdiv
mov
jbe
test
or
cmp
xchg
inc
jbe
push
test
sbb
push
sbb
pop
sti
inc
cmp
inc
jecxz
lods
cli
jecxz
icebp
add
jl
mov
and
mov
sbb
outsl
mov
outsb
cmp
rcrl
fildl
jne
inc
nop
in
mov
es
pop
fmuls
xchg
in
mov
scas
cwtl
cwtl
mov
or
bound
subb
jb
test
sbb
rcrb
mov
fs
inc
cmpsl
push
fwait
stos
inc
bound
or
loop
jecxz
pop
xorb
notl
hlt
sar
xor
test
xor
sbb
aas
mov
stc
dec
ss
lahf
add
fisubl
fs
jge
cld
push
gs
pushf
icebp
xchg
push
xor
dec
imul
pop
push
inc
ficomps
test
mov
ror
outsl
jnp
int3
clc
jmp
cmp
sarb
dec
push
and
adc
inc
popf
mov
test
dec
and
movsb
je
into
cmp
cmpsb
aad
or
sahf
dec
dec
sarl
les
mov
bound
movsb
icebp
ljmp
sub
cmpsb
insb
dec
cmp
jge
add
testl
push
outsb
xchg
dec
xchg
push
sub
cwtl
xor
popl
mull
sbb
pop
jge
aad
cmp
rcll
call
fistpl
popf
jp
add
mov
test
rdmsr
xor
cmp
sti
push
std
testl
outsb
jp
sbbl
lods
inc
or
andb
shl
jmp
fstl
repz
push
push
adcl
xchg
and
fldenv
jecxz
arpl
shll
mov
mov
xchg
scas
je
cmp
arpl
push
insl
out
xor
ja
cmpb
dec
ret
mov
nop
fsubrs
mov
sbb
jno
sub
xchg
movl
sub
fmulp
mov
cltd
fs
pop
loope
and
inc
daa
dec
andl
ja
pusha
sub
mov
sbb
das
lcall
dec
and
scas
add
fisttps
add
mov
scas
jne
enter
ficomps
outsb
pop
jg
mov
jnp
or
pop
out
rclb
fwait
mov
dec
cmp
loopne
imul
lea
xlat
ret
jmp
push
test
ljmp
jl
scas
inc
inc
pop
fldl
dec
sbb
inc
jnp
sbbb
push
push
icebp
inc
ret
pop
jle
ret
inc
xchg
rolb
pop
xchg
pop
sbb
ds
into
flds
pop
jp
cld
popa
and
sti
push
fsub
loopne
fdivp
fs
mov
sub
mov
cld
add
pop
jge
inc
into
les
jbe
int
sub
lods
test
scas
sbb
pusha
pusha
sbb
in
orb
stos
fwait
sub
dec
pop
lods
dec
mov
inc
pop
mov
ja
inc
adc
inc
jne
adc
lods
es
and
add
dec
test
imul
dec
sbb
xor
or
dec
mov
push
fs
fisubrs
fwait
xor
mov
jecxz
iret
enter
inc
test
cmpsb
fucomp
test
into
out
cli
adc
daa
inc
inc
add
pusha
les
cmpsl
or
cmc
test
mov
pop
mov
aam
push
repz
clc
push
adc
in
mov
jecxz
ljmp
xlat
fidivrl
pop
jno
mov
pop
mov
shrl
or
xlat
shrb
dec
xor
cltd
xor
fwait
mov
imul
jle
shll
gs
mov
mov
insl
xchg
stos
dec
xor
ljmp
xchg
push
insb
jns
mov
and
stc
imul
jnp
and
mov
shll
cs
mov
movsb
daa
push
mov
ret
jmp
push
lock
or
xchg
cmp
in
pusha
insl
lret
mov
mov
pop
out
push
xchg
cmpsl
or
mov
mov
nop
sbb
imul
or
xchg
inc
scas
insb
mov
sub
das
test
popf
mov
sub
sub
into
jg
hlt
or
int3
andb
cs
jae
test
pop
mov
mov
sub
lock
mov
cmp
stc
inc
inc
push
push
imul
pop
mov
repnz
xchg
rolb
adc
push
stos
icebp
sub
pop
fildll
sub
dec
sbb
mov
xorb
push
sub
jp
aam
push
pop
icebp
clc
lret
push
lods
or
pop
imul
pop
adc
xchg
xchg
or
cli
fdivr
cwtl
loop
sub
jmp
ret
sub
test
testb
xor
imul
out
lods
pop
add
jo
cwtl
rcrl
ljmp
lret
and
push
and
or
push
cmc
jbe
push
jmp
or
dec
xchg
cltd
call
stc
inc
lcall
xchg
lcall
adc
or
inc
ftst
test
xchg
mov
stos
repz
pusha
inc
cmpsb
xor
dec
cli
popw
lcall
xorl
dec
jle
mov
lods
test
aad
or
dec
rcll
imul
cmpsl
pop
sahf
dec
pop
adcl
push
xor
push
lock
cmp
mov
pop
mov
mov
push
int
xor
xchg
xchg
adc
push
mov
fnstsw
pop
jge
stos
xlat
jmp
out
cli
pop
ret
mov
repz
mov
dec
gs
and
xor
or
mov
adc
cld
fcomps
cwtl
shr
mov
inc
fs
push
sub
or
scas
pop
pusha
inc
lea
push
mov
push
mov
dec
lock
loop
das
aad
fisttpll
test
dec
adc
mov
cmp
mov
pop
mov
js
xchg
pusha
xor
jnp
stc
xlat
nop
add
xorl
xlat
scas
push
inc
addr16
lods
mov
ja
mov
rolb
mov
leave
or
adc
or
sbb
dec
sbb
in
xchg
mov
jp
add
fs
lods
xchg
stc
movsb
or
leave
mov
sbb
mov
std
and
xor
jecxz
jne
mov
leave
in
dec
test
add
inc
fidivs
gs
daa
je
mov
cmp
pushf
test
mov
adcl
push
xor
sbb
enter
call
dec
push
mov
test
jp
xchg
loopne
es
andb
push
movsb
daa
push
hlt
xor
xor
cmp
mov
push
sub
outsl
lcall
test
or
push
lds
mov
outsl
adc
push
jmp
mov
adc
and
adc
push
pop
sub
aad
lods
in
or
xchg
mov
js
outsb
dec
les
push
pop
nop
mov
scas
bswap
and
mov
pop
and
push
clc
inc
cmp
push
shll
pop
inc
int3
jno
mov
les
mov
push
das
movsb
mov
xchg
sti
cmp
xchg
cmp
sbb
mov
mov
push
add
inc
cmc
notl
lods
out
and
pop
fidivl
dec
push
jg
push
cmpsl
lret
stos
adc
jo
pop
call
jle
push
or
dec
mov
push
sub
aad
and
xchg
in
mov
ljmp
movsl
daa
mov
std
ret
bound
adc
mov
add
shll
aas
adc
into
scas
outsb
pop
fdivrl
pop
test
test
repz
mov
inc
pushf
repz
es
xor
loopne
pop
cmpsl
mov
scas
pop
in
in
xchg
fisubl
nop
cmp
jne
call
xlat
pop
imul
xchg
fistpl
xchg
cwtl
fs
fs
sub
mov
mov
pop
aas
ds
push
lahf
ficoml
or
adc
sub
push
mov
jmp
adc
add
lock
jge
lock
adc
movsb
xchg
xchg
xor
pop
dec
inc
in
sbb
loop
popf
movsl
mov
decl
adc
add
ljmp
or
mov
xchg
mov
add
push
popa
lods
ds
inc
aam
or
pop
out
and
or
inc
shlb
sbb
xchg
mov
loop
lock
loopne
jecxz
mov
cmp
lahf
add
xchg
or
mov
aad
pop
mov
popa
jnp
imul
jne
divb
lcall
out
outsl
add
xlat
ds
ljmp
stos
test
xlat
and
xor
sahf
xchg
adc
jbe
add
orl
shll
xor
in
outsl
test
push
mov
mov
pop
pop
sub
jno
nop
sub
adc
jb
mov
adcl
in
std
shr
sub
add
cmp
cld
fmull
mov
lret
add
les
idiv
mov
dec
or
jnp
test
cmpsl
pop
movsb
lds
push
push
dec
ds
dec
push
cltd
ret
and
xchg
mov
dec
and
cmpsl
push
icebp
or
jno
test
outsl
repnz
and
xchg
cld
jge
cmp
nop
leave
jle
test
mov
nop
addr16
mov
or
dec
in
mov
dec
das
out
push
inc
push
or
data16
xchg
sub
xchg
mov
dec
and
aas
cmp
into
notb
xor
cltd
arpl
mov
out
mov
dec
add
lods
cmpsb
lea
push
cmp
pop
and
lea
xor
mov
cmc
jbe
jae
xchg
ret
sub
out
push
int3
xchg
add
fists
int
push
inc
xchg
sub
filds
jg
cmp
aaa
cmpsl
sarb
imul
je
iret
adc
into
clc
xchg
fisubs
pop
adc
fimuls
push
inc
movsb
sti
loope
adc
sub
mov
adc
xchg
scas
and
mov
icebp
les
scas
mov
pop
inc
inc
lret
mov
divl
xchg
iret
and
mov
fsubr
mov
pop
loope
jnp
aam
test
nop
mov
cs
dec
inc
repz
dec
mov
fldcw
nop
pusha
dec
fldl
fildll
enter
dec
and
pop
nop
jno
mov
fwait
into
ret
in
ficomps
push
clc
mov
pop
jo
jle
fwait
daa
ret
dec
lcall
xor
inc
lods
or
jle
push
cmp
scas
shr
outsl
mov
sub
scas
sarl
push
xchg
inc
rorl
leave
jnp
jae
adc
sbb
mov
clc
dec
inc
imul
loop
pusha
xchg
cmp
js
cmpsl
pop
lret
dec
xchg
incl
push
add
test
dec
call
sub
fimull
call
insw
enter
shll
sbb
push
enter
mov
mov
and
clc
jecxz
push
loope
pop
lret
or
sub
lods
stos
dec
xchg
push
pop
clc
shrb
std
aas
in
mov
mov
xor
lret
lds
jecxz
or
outsl
sub
jb
dec
lcall
aas
outsb
xor
mov
dec
sub
jle
mov
test
mov
loope
jle
sbb
rorl
out
movsb
dec
lods
enter
inc
mov
sub
imul
adc
sub
sar
sbb
xchg
out
cmp
mov
imul
test
dec
xchg
push
adc
pusha
xor
in
mov
mov
jbe
pushf
push
lret
fildll
sub
mov
dec
daa
scas
ret
aas
mov
mull
leave
mov
push
and
rcrb
push
addr16
add
rcll
in
mov
scas
inc
xor
xchg
push
pop
ss
outsl
loop
movsl
push
or
popf
push
jecxz
fistpll
ret
sub
jne
cwtl
stos
cmc
pushf
fistl
nop
inc
mov
pop
jmp
inc
sbb
dec
popa
add
ja
mov
jno
sub
push
and
jae
pop
push
out
enter
sub
jb
imul
mov
ss
lock
dec
popf
fs
stc
test
mov
daa
sbb
rorb
mov
xchg
xor
ret
ja
cmp
in
lock
and
dec
xor
hlt
dec
mov
cmpsl
cltd
leave
sti
scas
mov
add
xor
notl
fidivrl
sarb
mov
xchg
xorl
inc
sbb
add
lret
ja
lods
cld
in
xchg
popa
hlt
xlat
insb
and
ret
into
dec
das
out
mov
stos
mov
stos
rorl
xor
xor
jle
aam
stc
adc
mov
xlat
pop
inc
scas
in
pop
fs
out
and
ds
lock
inc
push
clc
in
adc
push
mov
sub
or
pop
in
xor
jb
loopne
test
nop
jnp
inc
or
lods
xor
ja
sbb
mov
clc
ja
or
xchg
sti
push
lcall
xchg
ljmp
sub
iret
xchg
sbb
xor
hlt
and
cwtl
aas
push
je
or
test
sbb
jbe
call
xorl
sbb
lock
imul
loopne
mov
cltd
pop
roll
cmp
mov
jmp
je
adc
xor
sbb
xorl
ljmp
repz
push
call
loope
push
insl
mov
cmp
faddl
scas
lock
stos
sbb
sbb
nop
ret
in
and
sub
sub
mov
jge
jl
jae
test
addl
jnp
mov
sub
inc
dec
arpl
xchg
jnp,pn
jge
mov
sahf
ja,pt
in
mov
dec
push
shrl
clc
fsubr
mov
xor
out
jecxz
out
add
int3
jle
mov
adc
push
sbb
movsb
ret
ja
into
inc
sti
xor
push
push
add
outsl
test
add
xchg
pop
sahf
fldenv
cmp
mov
cld
jo
loopne
jg
ficompl
scas
adc
xor
les
insl
add
loop
jae
cmp
adc
add
insl
addl
into
mov
cmp
fisubs
inc
cltd
xor
xor
xlat
lahf
and
addr16
sti
sbb
loope
push
stos
fstpt
aad
cs
ds
fwait
test
mov
jg
mov
xchg
dec
jbe
mov
pop
call
dec
pop
push
movsb
xor
subl
sub
push
pop
in
dec
add
cmp
outsl
xchg
test
mov
mov
or
cs
lods
cltd
aaa
imull
add
xchg
les
scas
outsb
out
mov
lea
sahf
daa
shrb
cmp
loop
mov
and
dec
test
je
dec
repnz
cli
adc
fiadds
dec
int
and
xchg
push
cwtl
xchg
hlt
pop
ljmp
dec
mov
cli
out
xchg
mov
hlt
cmp
or
call
pop
xor
inc
lds
fiaddl
hlt
jecxz
test
sbb
fldt
decl
fmuls
out
dec
sarb
mov
in
loope
cmp
inc
out
sbb
mov
mov
or
xor
jge
push
movb
nop
jns
std
jbe
loop
mov
jmp
mov
adc
int
stos
fadds
icebp
ss
sbb
leave
mov
pusha
rolb
mov
lods
inc
sub
xchg
sub
gs
mov
mov
pop
mov
inc
fisttpl
push
sub
repz
xchg
inc
push
loope
add
pop
cmp
orl
nop
loop
mov
bound
pop
movsb
push
pop
pop
xchg
xor
pop
add
or
iret
xor
mov
mov
ret
sbb
test
cmp
mov
mov
pop
cmc
and
lods
pop
clc
pop
jp
popa
pop
ljmp
scas
jle
adc
arpl
outsb
cwtl
ljmp
stos
jg
insl
scas
push
lcall
lods
sub
push
pop
std
push
xchg
push
mov
lret
push
stc
aas
dec
or
push
nop
fnstcw
int
mov
mov
mov
out
pop
add
subb
cli
and
ja
fisttpl
lret
mov
insb
cmp
dec
arpl
and
sub
std
subb
movb
test
xadd
movsl
xchg
or
mov
add
mov
test
repz
mov
add
xor
xor
shrb
ljmp
hlt
lcall
or
mov
push
mov
test
dec
jl
into
xor
call
inc
mov
lods
xchg
out
xor
xchg
outsl
sbb
pop
mov
pop
add
and
mov
notl
cmp
loop
call
ja
lods
insl
daa
sub
ja
mov
out
fdiv
sbb
outsb
sub
rolb
daa
or
mov
aas
pushf
lds
mov
stc
adc
adc
subb
insb
xor
scas
xchg
into
clc
mov
repz
sbb
sub
or
daa
sar
rorb
insb
or
sti
clc
xlat
add
es
hlt
sbb
lcall
jb
scas
pop
aaa
adc
inc
bound
mov
into
mov
mov
push
sahf
xchg
jmp
push
xor
adc
adc
mull
loop
cmp
fcoml
arpl
popa
jg
xchg
std
movsl
mov
xor
adc
loop
jmp
adcb
outsb
jo
mov
inc
stos
cmp
add
push
push
mov
jp
and
cld
push
mov
adc
or
sbb
andb
and
aam
imul
scas
test
adc
jo
gs
and
xchg
rorl
movsl
sbb
dec
mov
mov
gs
xor
mov
rolb
leave
cld
adc
add
lock
xchg
mov
jbe
mov
dec
lret
outsb
push
inc
xor
out
dec
add
dec
int3
pop
popf
loope
mov
addr16
push
xchg
push
in
mov
mov
cltd
sub
mov
adc
pop
dec
jae
mov
movsl
out
subl
movb
mov
orl
mov
fsubs
popw
xorl
mov
and
stos
mov
enter
jo
fildl
sub
jp
or
cmp
dec
loop
gs
aad
sbb
add
pusha
aas
fnsave
sub
aad
jp
mov
adc
jg
jle
repnz
sahf
test
cmpsl
repnz
rcl
lea
cmpsl
sbb
adc
cmp
inc
nop
das
add
pop
repz
xchg
dec
adc
sub
xor
pusha
jb
int
ret
cld
and
test
xor
adc
or
clc
jne
test
mov
adc
ss
adc
xchg
xor
inc
outsl
and
jp
cs
popa
fistps
sub
xor
loopne
mov
lods
into
lcall
xchg
mov
and
in
jbe
mov
mov
jge
and
popa
js
scas
fisttps
mov
sbbb
adc
cli
outsl
popa
cmpsl
andb
mov
xorb
cmp
push
cmpsl
mov
mov
mov
jns
cmp
mov
repnz
fidivrs
fwait
dec
in
daa
outsb
and
test
outsb
mov
xor
fstpt
jmp
pop
mov
lahf
or
pop
aam
fmuls
data16
dec
daa
insb
aam
pop
pop
and
lds
jl
and
mov
outsb
bound
xchg
mov
movsl
pop
sbb
cmp
lds
adc
inc
ljmp
iret
inc
mov
mov
fstpl
daa
insb
lods
inc
jae
outsb
mov
xchg
daa
pop
jl
push
mov
mov
enter
mov
lock
adc
clc
and
mov
fnclex
insb
sub
and
ja
fistpl
mov
and
ss
scas
cmp
nop
lahf
ss
push
das
add
inc
add
jne
stos
repnz
jae
loopne
sarb
arpl
jns
dec
lret
jns
mov
call
pop
notl
test
sarl
and
test
jno
jle
sbb
call
cmpsb
lahf
inc
ss
cmpsl
xchg
push
push
into
push
and
clc
arpl
dec
mov
dec
stc
push
mov
loop
xchg
jnp
flds
xor
rolb
orb
out
mov
clc
pop
jg
loopne
lock
mov
inc
mul
inc
dec
xor
xchg
or
std
inc
outsl
enter
call
mov
cltd
jne
inc
jae
or
push
dec
mov
ror
or
mov
nop
inc
cmp
push
adc
lahf
jnp
mov
add
sub
sbb
aad
adc
jp
sbb
push
dec
xor
sbb
imul
lret
data16
sub
push
bound
sub
repz
lret
shr
push
jns
mov
jae
loope
or
insl
mov
lret
add
mov
je
adc
cld
jbe
adc
inc
daa
sub
out
push
nop
mov
sub
push
jg
xor
nop
xchg
stos
or
xor
pop
scas
outsb
inc
jo
mov
popf
dec
inc
cltd
sub
movsb
pop
dec
flds
inc
movsl
hlt
mov
dec
movsl
push
adc
loop
call
cmpsl
insb
adc
out
mov
popf
or
and
jno
sub
add
or
sbb
mov
pop
mov
sub
mov
cmpsl
xor
inc
inc
add
rcrb
pushf
cltd
push
dec
aas
or
pushf
mov
in
fisttpll
xchg
jl
mov
lahf
mov
test
insb
push
ret
or
in
xchg
in
lock
aaa
sub
inc
js
in
test
repnz
mov
dec
jnp
mov
dec
sub
movl
cmp
loope
sbb
sub
sub
mov
inc
es
fs
aas
adc
ds
outsb
test
and
arpl
popf
cwtl
std
cmp
dec
roll
jb
adc
or
outsl
in
add
pop
roll
into
adc
hlt
popf
bound
and
adc
cli
aas
sbb
mov
mov
inc
popf
cs
call
repz
mov
jmp
xchg
sub
cwtl
pop
idivb
cmp
aad
cmp
testl
mov
or
push
inc
ds
mov
ficomps
mov
and
stc
fildl
jne
sub
lret
shll
mov
pop
movsl
call
xchg
fistl
fsubs
mov
cli
jmp
push
lea
mov
dec
mov
mov
push
lock
stos
mov
scas
inc
dec
pusha
outsl
into
subb
data16
test
or
adc
pop
dec
ds
movsb
mov
fidivrl
mov
insl
in
push
xchg
pop
mov
pop
insb
bound
bnd
xor
pop
dec
pop
inc
dec
pop
push
je
data16
sbbb
out
call
std
cwtl
cmp
mov
in
jmp
test
push
mov
dec
pop
xchg
pushf
sub
cltd
xlat
fs
dec
sub
jo
and
in
insl
arpl
and
in
aas
xorl
mov
ror
lods
lods
jl
ret
add
sub
leave
sub
mov
arpl
mov
stos
bnd
jne
shlb
adc
daa
mov
mov
mov
arpl
scas
mov
pop
enter
and
adc
adc
data16
push
xchg
and
notb
jbe
mov
sbb
inc
jg
jecxz
les
push
sub
ds
testb
sti
dec
adc
mov
dec
fucom
xchg
nop
push
fmul
in
jp
imul
sub
popf
sbb
dec
out
xor
lahf
dec
and
and
add
out
addr16
xchg
lret
pop
pop
call
repz
add
inc
and
sbb
xor
mov
out
xchg
cltd
hlt
dec
fstl
outsb
xor
jecxz
cld
mov
fnstsw
pop
jns
test
into
mov
inc
add
dec
scas
pop
addr16
jmp
xor
mov
ss
pop
fucomp
sbbb
mov
push
mov
or
gs
sbb
ss
push
add
pmuludq
lahf
lret
or
mov
fstps
pusha
aad
and
xchg
jne
mov
ss
jnp
rorl
xchg
mov
lds
dec
mov
fs
outsb
xchg
sarb
inc
jmp
pusha
sbb
inc
inc
mov
cs
jnp
enter
arpl
mov
shrb
inc
mov
cmp
jae
lods
mov
call
adc
imul
repnz
ss
in
stos
inc
pop
add
xchg
push
rcrb
in
mov
pop
ds
push
movsb
dec
dec
dec
jl
xlat
jbe
dec
ret
mov
jne
xchg
or
cmp
sub
jae
jmp
pushf
jl
clc
or
std
adc
outsl
mov
xchg
fisubrs
push
cmc
jp
aaa
scas
jb
or
pop
movsl
mov
popa
push
sbb
sbb
pushf
iret
push
std
inc
daa
in
xchg
xchg
insb
test
add
stc
lret
rcl
dec
iret
nop
push
out
xor
mov
add
or
fcmovu
in
inc
mov
lahf
lahf
std
xchg
xchg
mov
les
push
mov
jns
rcr
mov
js
jns
mov
jle
iret
cld
push
daa
lret
dec
ljmp
add
jl
jne
roll
in
gs
cli
mov
cmc
sub
pushf
mov
mov
push
sub
mov
or
mov
popf
dec
pushl
inc
mov
rolb
mov
cmp
pop
cmc
cmp
adc
cmpsl
nop
sub
dec
push
xchg
pop
out
cmp
push
enter
rcrl
mov
icebp
movsl
jp
add
loopne
xor
inc
mov
mov
or
outsb
or
mov
add
insb
xor
mov
rclb
das
sbb
test
cmp
dec
xchg
adc
and
lahf
mov
bound
push
dec
push
subl
push
std
pop
leave
push
jns
jmp
mov
pop
leave
add
mov
cmp
fimuls
jo
or
jp
xor
sarl
je
bound
xchg
sti
mov
jae
push
or
ss
jns
pop
dec
jo
sub
push
xchg
cmp
test
inc
jb
xlat
repz
in
pop
cmp
mov
adc
popa
or
inc
sti
out
insl
data16
decl
cwtl
in
or
pop
push
lods
in
cmpsl
inc
std
jl
loop
arpl
xchg
fcmovu
sti
inc
daa
out
enter
sbb
cmp
sub
cmp
mov
xor
xor
fstl
mov
lcall
push
setg
jge
push
mov
adc
sarl
sbb
xchg
xor
jp
orl
xchg
jbe
bound
aad
out
insb
xchg
push
imul
jne
fcmove
mov
jno
or
dec
dec
jb
in
add
pop
xchg
rcl
xchg
jnp
lahf
push
and
int
xchg
dec
testl
dec
mov
jb
mov
ljmp
mov
jno
pop
gs
sbb
shlb
gs
loope
xor
aaa
in
and
xor
xlat
mov
mov
test
test
mov
bndldx
adc
sti
stos
pop
out
fimuls
cmpsl
push
imul
ja
inc
and
inc
sti
sahf
xor
mov
mull
dec
pop
lret
mov
mov
ljmp
and
stos
leave
int3
mov
push
clc
push
imul
xor
orb
add
nop
fimuls
cmpsb
add
mov
ds
xor
inc
add
rorl
rorb
cmp
aad
fcoml
cmc
movsl
pop
or
mov
push
and
std
pop
mov
imul
mov
movsl
insl
jl
and
mov
jbe
addb
and
add
mov
or
repnz
roll
test
outsl
jmp
ljmp
shrb
rcl
popa
xor
cmp
xchg
xchg
or
scas
xchg
dec
rcrl
xchg
popa
cli
shlb
sub
mov
in
daa
adc
xlat
pop
mov
xor
pop
das
stos
jmp
js
mov
jae
stc
mov
sbb
aam
mov
cmpb
mov
or
mov
mov
cs
adc
mov
dec
arpl
mov
inc
inc
lcall
jl
mov
jp
sbb
sub
ljmp
popf
inc
sub
repnz
xor
loope
insl
das
addl
sub
mov
fsubrl
inc
lret
xor
sub
sub
jmp
bound
push
sbb
mov
enter
add
jns
stc
xchg
ret
xor
int3
jae
mov
and
stos
add
mull
aad
pop
clc
lar
mov
xor
in
fildl
out
je
push
xchg
fsubrl
outsl
pop
jmp
mov
nopl
stos
xchg
sub
outsl
xchg
add
push
fldl
xchg
sti
insb
jle
inc
dec
pop
and
ss
pop
cmp
cmpb
daa
in
leave
movsl
outsl
lods
popa
pushf
loope
xor
lock
lods
dec
mov
add
dec
out
in
arpl
and
xor
pop
std
or
add
sarb
lock
sahf
in
cmp
test
pop
leave
mov
lods
out
fdivr
sbb
pop
or
aad
jo
icebp
scas
bound
mov
fadd
xchg
lahf
ret
add
fcmovbe
mov
fisubs
pop
cltd
paddw
adc
cld
and
jb
pop
xchg
jle
iret
sbb
xchg
and
and
movsl
mov
aaa
dec
decl
insb
inc
roll
iret
in
dec
and
scas
mov
outsb
addr16
mov
icebp
xchg
mov
mov
adc
outsb
leave
ret
dec
sub
sbb
rep
push
movsl
jo
adc
insl
mov
pushf
mov
loope
xor
cwtl
add
cmpsb
jecxz
loopne
dec
inc
jle
insl
xchg
insl
test
xchg
mov
xchg
add
lret
pcmpeqb
jle
sub
push
enter
in
mov
fs
nop
fincstp
insl
inc
fcomi
ja
push
inc
add
js
xchg
jnp
jge
jp
mov
dec
cs
dec
mov
xchg
jl
ret
lods
add
fistl
pop
sub
out
mov
push
fwait
and
ja
and
sub
mov
clc
fwait
pop
out
outsb
or
movsb
cli
pop
fistpll
xchg
pcmpgtd
imul
fldl
shll
test
mov
aad
rcrl
test
or
jp
out
mov
std
xor
jno
aas
mov
repnz
fsubs
add
pusha
loop
insb
cltd
clc
frstor
pop
cmp
xor
in
ret
repz
cwtl
xor
push
and
push
xchg
jne
sub
pop
negb
jl
icebp
in
dec
es
fwait
rcrb
lea
stc
add
jle
mov
loop,pt
cwtl
cmp
loop
ds
xor
mov
pop
sbb
add
add
push
and
sbb
mov
xor
repnz
fsubrl
out
mov
mov
in
lods
in
fidivs
clc
sbb
fistl
shlb
repnz
push
addr16
leave
jb
stc
xchg
and
push
out
mov
cmp
fwait
mov
sbb
xchg
adc
std
nop
rclb
stc
sbb
sbb
xchg
out
inc
sbb
xchg
jnp
fmuls
insb
mov
sbb
push
dec
pop
add
lds
out
cmpsl
mov
test
ds
addr16
fwait
and
mov
add
cmc
pushf
xor
sbb
shl
xor
push
xlat
sbb
fsubrs
test
mov
loopne
mov
or
sbb
mov
pop
popa
sti
xor
pop
arpl
xor
loope
aad
ja
stos
rolb
iret
into
loope
xchg
movsb
xor
out
in
inc
fisubrs
add
or
add
div
shll
pop
out
aas
xchg
popa
jo
xor
fnstcw
std
adc
inc
pop
test
pop
cwtl
sbb
lock
pop
out
sub
out
lcall
sti
icebp
jp
outsl
pusha
or
aad
mov
lock
subb
cld
scas
mov
cmpsl
outsb
mov
add
jl
adc
xchg
in
xchg
pop
pop
lods
dec
or
loop
xor
shlb
ljmp
xor
aaa
lcall
pop
fmuls
daa
sahf
test
rcrw
sbb
jecxz
xchg
adc
jne
sub
dec
aad
in
fsubs
mov
lcall
jp
ffree
cmova
cmp
and
mov
repz
and
pop
rclb
sbb
jnp
je
fiadds
js
ret
push
lods
bound
sub
icebp
mov
jecxz,pt
adc
outsl
mov
xor
stos
loope
cvtps2pd
dec
jnp
jo
xlat
dec
fstpl
insl
int
aad
test
jge
cmpsb
jecxz
inc
xchg
into
adc
xor
cwtd
scas
inc
jo
addr16
insl
pop
xlat
sub
add
or
js
adc
mov
and
int
jmp
and
cmpb
adcl
insl
loopne
jbe
outsl
nop
clc
xchg
dec
mov
push
push
mov
cmp
movd
sbb
cwtl
inc
in
cmp
mov
dec
adc
and
pushf
jl
mov
jns
jge
inc
mov
rorb
test
cmp
scas
mov
pusha
mov
add
mov
xchg
jo
icebp
negb
pop
addl
push
enter
mov
pop
out
cmp
icebp
pop
add
add
shll
pushf
arpl
push
and
jmp
pop
jns
mov
jl
jnp
dec
mov
rcrl
xor
xlat
push
out
iret
addr16
fdivrp
or
les
jno
mov
mov
push
sarl
jmp
lcall
sub
shlb
mov
lret
nop
jl
inc
adc
sbbb
pop
xor
cltd
movsl
xchg
stos
sbb
mov
pop
sub
addr16
rcl
jmp
mov
repnz
cmpl
cld
frstor
pop
call
adc
in
inc
jb
add
xchg
mov
mov
jno
inc
js
adc
xor
leave
add
mov
in
mov
and
imul
adc
mov
sarl
mov
mov
mov
inc
push
popa
sbb
aad
xchg
and
shlb
mov
es
shlb
stos
or
sarb
xor
cmp
movsl
shrb
das
adc
pop
lea
rcrl
aaa
inc
pop
dec
repnz
xlat
pop
icebp
jmp
aad
xchg
outsb
mov
outsb
inc
ds
add
call
mov
ss
or
add
xchg
dec
push
into
ret
and
jg
iret
xor
movsb
jmp
loope
mov
add
add
xor
sbb
fbstp
scas
orb
es
nop
mov
testb
in
ret
es
pop
mov
add
out
add
push
out
push
cmpb
repz
push
rorl
int3
shlb
xchg
push
sbb
cmc
xor
lcall
loop
addr16
sbb
cld
fwait
sbb
pop
and
jp
mov
js
std
add
orb
sub
cmc
sbb
mov
mov
pop
sbb
fcmovnb
cltd
and
lcall
fwait
xchg
jno
stos
mov
lock
roll
int
push
loop
pop
aaa
xor
mov
xor
xchg
cmpsb
push
cmpsb
lock
pop
or
add
add
out
push
aam
mov
jmp
pop
fbstp
sub
cmp
pop
fisubrs
push
lcall
scas
inc
dec
fists
jno
or
out
pusha
mov
mov
in
gs
mov
mov
inc
scas
jae
js
mov
nop
out
adc
mov
xchg
xor
add
or
mov
sub
shlb
pop
push
loopne
popa
cli
popa
roll
pop
inc
or
mov
fcompl
inc
adc
movnti
aas
mov
test
mov
jo
sbb
jl
nop
cltd
mov
cmc
sub
sub
mov
jb
adc
loope
jg
xor
cmpsl
test
inc
repz
stos
jae
inc
sub
push
push
inc
lock
jmp
dec
sub
mov
xor
in
xor
daa
push
cmp
out
xchg
push
xor
in
mov
out
jmp
sbb
lods
xlat
sbb
push
push
sbb
mov
push
movsl
push
mov
mov
jmp
pop
xchg
xor
xor
mov
sbb
sahf
inc
mov
jae
xchg
inc
mov
mov
loopne
punpckldq
scas
sbb
incl
push
in
or
cmc
stos
push
add
fadds
popa
jp
dec
adc
mov
jo
push
inc
sub
dec
jns
iret
je
dec
inc
mov
aaa
cmc
push
insl
les
jae
jo
xchg
aas
dec
inc
pop
and
aaa
push
stos
fldenv
stos
fcmovbe
cltd
xchg
pop
xchg
xor
insb
push
int3
inc
dec
ss
jge
sti
xchg
je
mov
in
in
or
bound
lahf
fidivrs
dec
aas
imul
cmp
test
cli
ret
mov
imul
push
xor
call
insl
ss
rcrl
pop
lods
xlat
adc
inc
in
xor
pusha
jecxz
sub
cmp
jle
xchg
sub
imul
cmpsb
fidivrs
int
xchg
jl
sbb
inc
scas
das
mov
dec
das
pop
and
lea
xchg
cmp
or
ss
jo
xchg
movsb
xchg
xchg
sbb
push
inc
jmp
call
fsubrl
push
sub
pusha
pusha
and
or
pop
jnp
mov
stos
push
ret
cmp
mov
ss
mov
out
and
std
mov
push
mov
sub
ret
shlb
out
xor
pusha
adc
sbb
repz
rolb
sub
in
nop
popf
pop
leave
cmpsb
jp
outsb
hlt
aas
mul
movsb
mov
sahf
mov
and
frstor
add
mov
imul
cs
sarb
add
js
dec
dec
push
fstpt
repz
push
push
push
pop
cmc
cltd
cmc
pop
xor
mov
std
stos
sbb
xor
outsl
adc
pop
dec
std
sub
bound
dec
dec
out
lcall
divl
xchg
pop
std
andl
mov
mov
je
movsb
cmp
adc
sub
repnz
in
mov
pop
jp
aam
out
sub
in
add
dec
ret
mov
push
dec
leave
loope
scas
enter
bnd
xor
jns
jecxz
orb
add
mov
les
mov
lods
xchg
xor
add
xchg
repnz
insb
pop
jp
jae
idivl
imul
aaa
pop
cs
ljmp
outsb
lar
fisttps
cmp
cltd
adc
call
dec
lahf
aaa
iret
gs
in
cmp
push
aad
xor
jbe
aam
pusha
lahf
stos
dec
adc
fnstsw
mov
push
xor
xor
mov
mov
les
pop
outsb
mov
pop
inc
das
pop
mov
mov
adc
pop
dec
mov
aas
push
push
or
mov
jp
imul
mov
fcmovne
das
das
cmp
jns
aaa
enter
gs
push
sbb
jne
pop
mov
rol
sub
dec
jge
mov
push
mov
daa
aad
aad
mov
push
xchg
sbb
xlat
hlt
pop
adc
fwait
xlat
out
inc
jo
sub
adc
scas
out
xor
mov
cld
rcll
fwait
mov
xchg
dec
jle
sbb
mov
mov
xchg
clc
xchg
mov
adc
stc
pop
mov
push
push
mov
and
or
enter
mov
jns
add
das
aam
push
mov
xchg
packssdw
push
stos
shlb
or
dec
std
jno
lods
daa
and
jp
xorb
js
push
lods
cli
cwtl
xor
adc
xchg
out
in
push
push
jmp
aas
lds
loope
add
fdivl
mov
pusha
dec
xchg
daa
es
jb
mov
sti
xor
dec
mov
push
adc
xchg
dec
pop
sarb
adcb
or
jno
aad
pop
repnz
mov
out
mov
cmpsb
out
pop
into
std
pop
mov
shlb
mov
xor
jae
jbe
xchg
push
gs
jne
scas
adc
fsubrl
stc
mov
xchg
xchg
pop
ljmp
stc
adcl
mov
sub
icebp
sub
pop
int
fcomps
xchg
lock
jb
inc
mov
push
jae
pop
cli
or
adc
test
adc
push
dec
lods
test
lock
and
mov
sbb
and
pop
cmc
add
push
mov
ret
adc
jecxz
lahf
shrb
int
sbb
pusha
mov
lret
add
call
cmp
xor
ds
jno
mov
xchg
loopne
bnd
in
inc
ljmp
sbb
cmp
adc
xchg
les
jle
stos
and
into
mov
rcrb
and
in
lahf
sbb
scas
add
mov
sti
adc
pop
mov
and
ljmp
subl
mov
mov
addr16
push
and
jne
jle
test
aas
insb
xchg
inc
mov
jecxz
mov
push
xchg
inc
negl
or
daa
mov
sbb
adc
call
dec
sbb
scas
sub
mov
adc
lea
movsl
bound
clc
mov
xor
pushf
or
inc
addl
fmul
js
pop
sti
xchg
popa
jb
fdivrl
cltd
jae
or
dec
add
add
outsl
ds
pop
ljmp
dec
push
movsl
add
push
dec
lret
sub
rdmsr
out
rcrb
cmp
jne
int3
inc
mov
movsl
push
or
inc
mov
inc
adc
repnz
dec
sub
xorb
test
jmp
xlat
inc
inc
jp
fsubl
cmp
stos
lcall
mov
leave
out
jge
mov
icebp
add
xchg
jle
push
fwait
mov
loope
jbe
cs
sub
jb
mov
xor
add
and
lahf
push
sub
insb
pop
cmpsb
dec
sbb
push
adc
pop
add
dec
scas
add
sbb
jo
std
jge
sub
cltd
pop
inc
mov
push
push
stc
lods
repnz
inc
sbb
push
dec
fldenv
cs
gs
stos
cmp
pop
xchg
or
jl
inc
ljmp
call
fisubs
xor
arpl
subb
loopne
movsb
xchg
and
shr
sbb
aas
push
ljmp
out
rorl
pushf
jmp
lahf
adc
shrb
add
mov
push
inc
ret
sbb
add
outsl
xchg
xor
imul
leave
dec
inc
data16
push
cli
popa
mov
xor
sub
pop
sub
inc
adcb
iret
aam
inc
call
mov
jp
inc
ljmp
fs
and
ss
int
add
jp
lea
in
les
xchg
jb
lock
int
imul
data16
js
inc
add
lret
out
mov
sbb
sub
push
movsb
pop
repz
sbb
shll
repz
mov
inc
jp
push
and
out
fldenv
sbb
clc
xor
ss
jo
dec
shr
movsb
pushf
dec
or
or
xchg
icebp
push
sahf
lret
adc
mulb
jo
xchg
stc
std
jb
push
imul
mov
pop
inc
incb
mov
inc
xchg
out
sub
cltd
lods
lock
test
movsl
flds
push
and
movsl
fnstsw
test
lahf
std
fs
into
push
das
int3
mov
jle
aam
cmp
push
jl
sub
push
das
iret
lcall
mov
lock
pushf
sbb
mov
sahf
insl
cmp
aad
mov
loopne
test
jb
sub
fiadds
pushf
mov
add
je
insb
js
mov
add
or
sbb
sub
pop
mov
mov
icebp
imul
arpl
xchg
inc
and
enter
push
hlt
stc
lods
cmpsb
xor
adc
dec
test
decb
cltd
push
imul
inc
sbb
sbb
sbb
add
xchg
and
nop
push
dec
pop
sbb
aam
aas
xchg
loop
mov
mov
mov
cwtl
push
rcrl
mov
pop
out
dec
mov
cmp
push
aas
cltd
data16
shl
mov
mov
ss
shlb
xor
push
sub
mov
or
mov
fsubrl
mov
and
iret
mov
xchg
ljmp
lods
sbbl
dec
rcll
or
inc
push
push
mov
popa
cmp
dec
out
push
inc
adc
les
adc
xchg
xchg
ds
into
mov
cmp
jecxz
stos
xor
lahf
xlat
push
add
pop
sahf
or
iret
mov
jne
or
or
mov
ret
mov
add
ja
inc
cmp
jo
test
cs
adcb
sbbl
sub
sub
push
aaa
jae
push
sub
stos
mov
flds
sbb
call
mov
sub
pop
shrl
adc
dec
or
shlb
push
psrld
sbb
loop
clc
xchg
bound
add
and
push
ret
loop
out
sahf
fildl
xor
pop
adc
in
mov
push
hlt
mov
jb
mov
jb
or
inc
iret
sbb
mov
stos
jne
xchg
adc
jae
test
jmp
leave
mov
jbe
jl
nop
fidivl
mov
insb
xchg
pop
je
lret
dec
scas
mov
int3
mov
jns
js
shl
pop
sub
cmovne
aam
pop
jo
push
cmpsb
mov
sub
insl
jnp
test
inc
cmp
mov
push
loopne
testb
jns
popa
mov
or
jp
push
rcrl
popf
out
out
cmp
imul
mov
add
mov
cmp
mov
arpl
dec
int3
leave
cmp
sub
iret
push
test
sbb
pop
fldl2e
in
dec
loopne
xor
iret
push
push
lret
push
cmc
pusha
jl,pn
xchg
dec
shrb
rcrl
ss
sahf
jge
jge
dec
push
insb
and
or
das
add
xchg
jns
jno
lret
and
ds
cmp
xor
flds
sbb
pop
cs
nop
mul
cli
call
xchg
loopne
test
lea
mov
stc
xchg
mov
mov
jo
mov
lds
xchg
lods
xchg
xchg
mov
mov
rorl
aas
leave
jns
les
scas
fnstcw
ret
aaa
imul
fists
jmp
mov
inc
fcomip
xor
decl
sub
mov
or
push
xor
rolb
imul
das
mov
or
xchg
gs
shlb
cmp
jnp
mov
lods
into
cli
mov
lret
adc
decl
aad
cltd
mov
adc
inc
insl
aaa
jle
pop
cmpb
lds
pop
mov
idiv
pop
outsb
cmpsl
call
ret
cs
packsswb
inc
test
xor
adc
jb
mov
mov
push
orb
pop
mov
pushf
lret
imull
jbe
std
sub
inc
push
bound
adc
inc
pop
pop
sub
mov
jnp
mov
addr16
mov
into
scas
or
mov
mov
jmp
popf
shll
mov
mov
pushf
fs
pop
cltd
test
xchg
outsl
ss
addr16
data16
addb
and
mov
stc
cli
or
cmp
push
aas
dec
pop
inc
insb
cmp
xor
mov
shrl
dec
jb
fldt
push
sub
ficoms
fndisi(8087
test
movsl
bndstx
enter
cmp
mov
movsl
sbb
aaa
stos
and
push
pushf
aaa
adc
or
cmpsl
dec
out
fs
jp,pt
mov
test
jb
shll
clc
sub
daa
dec
ds
push
cmp
mov
xchg
jp
icebp
sbb
xchg
push
xlat
sub
pop
mov
jl
mov
xor
loop
xchg
iret
xor
mov
hlt
dec
or
out
es
cmp
les
add
repz
dec
andb
sub
rcrb
leave
out
and
add
sbb
adc
and
and
sbb
loop
aaa
in
cld
shlb
inc
xor
sbb
fisubs
int3
mov
mov
sub
inc
repnz
outsl
aad
inc
pop
dec
cmpl
in
inc
cmp
mov
xor
mov
es
jnp
std
negl
mull
std
sub
jb
adc
pop
mov
cmp
xor
mov
enter
shll
sbb
les
aad
popa
lret
lods
pop
add
adc
in
into
clc
es
pushf
gs
inc
sub
mov
jp
mov
xlat
inc
popf
shll
or
outsl
loope
push
add
shll
inc
lods
mov
mov
rcll
jge
jae
jle
mov
cmp
cmc
pop
xor
pop
mov
fistpl
in
inc
cwtl
daa
mov
mov
int
out
cmc
mov
and
lahf
adc
cmc
inc
fcoml
jecxz
lea
xchg
push
arpl
enter
lret
addr16
cmp
xlat
xchg
pop
inc
jo
cli
sub
adc
aam
sub
mov
inc
mov
je
clc
mov
sbb
xchg
ds
cs
mov
loope
int3
ljmp
add
and
call
xchg
pop
xor
sub
or
in
adcl
sahf
or
add
lods
pusha
cmp
popf
mov
aam
aad
adc
mov
pop
pop
push
pop
fidivl
sub
jge
dec
inc
xchg
loop
mov
xor
add
sar
scas
outsl
xor
out
xor
mov
sbb
les
out
xchg
mov
dec
mov
inc
imul
xor
pop
stos
call
subb
divl
jnp
push
mov
js
mov
loop
call
test
sbbb
sub
das
int3
jbe
test
notl
test
leave
out
lret
jbe
add
insl
aad
add
iret
mov
sub
xchg
or
leave
push
sbb
mov
notl
mov
arpl
shr
mov
mov
cmp
aaa
xchg
mov
popa
jle
and
sbb
dec
cwtl
pushf
rcl
adc
ret
xchg
xchg
je
add
lea
push
inc
icebp
adc
cmpsl
mov
cmp
rorl
sbb
jecxz
pop
mov
xchg
cwtl
pop
in
js
jp
mov
xchg
mov
cmp
jne
aaa
cmp
lret
sub
loop
pop
mov
adc
add
aam
lret
cmp
test
lods
dec
jnp
adc
bnd
jae
fnstcw
aaa
insb
int3
or
cmp
stos
adc
cli
sbb
pop
adc
push
bound
in
adc
les
rclb
xchg
pop
adc
mov
mov
je
out
into
xor
push
aad
fdivl
sub
outsb
or
or
icebp
add
dec
jl
push
xchg
jne
add
mov
pop
lds
lock
jp
sbb
sub
mov
mov
pop
iret
ds
stos
add
mov
popf
dec
jae
jp
nop
stos
xchg
sbb
imul
loop
adc
pop
scas
in
jo
iret
push
sbb
add
stos
jp
jnp
add
xchg
mov
or
pop
imul
sbb
fldl
pushf
xor
icebp
iret
je
jle
ret
addr16
repnz
int3
mov
inc
xor
jmp
inc
adc
ret
xlat
jo
dec
pop
mov
ficompl
cld
outsb
mov
lock
adc
imul
fs
jnp
mov
ret
lea
jecxz
das
test
xor
sub
sbb
inc
adc
stos
scas
nop
mov
jp
ljmp
cmp
fadds
fabs
or
xchg
or
or
mov
pushf
xor
mov
leave
mov
xchg
mov
push
fstl
cmpsb
xchg
mov
sbb
xchg
into
repz
repz
mov
push
sbb
loope
aad
mov
lcall
xor
stos
int3
jle
repz
orb
inc
outsl
fs
inc
test
dec
scas
cmp
fdivrl
into
inc
addl
repnz
shlb
inc
mov
rclb
xor
in
sbb
push
xor
lds
sub
test
test
jbe
jl
mov
in
testl
cmp
mov
aad
movsb
mov
mov
arpl
or
out
mov
lret
and
icebp
jbe
mov
and
adc
xchg
cmpsb
lret
lcall
and
daa
subl
pop
ret
lret
inc
add
pop
test
dec
adc
popa
push
mov
inc
fdivrs
mov
jp
repnz
cs
and
arpl
icebp
push
mov
or
jne
xor
rol
adc
jp
mov
das
icebp
add
mov
lahf
movhps
lods
in
in
or
movsl
test
dec
loopne
arpl
dec
xor
pop
fiadds
popf
out
cli
xor
jno
stc
bound
jp
repnz
mov
inc
popa
lahf
jnp
xchg
cmp
push
mov
daa
cmpsl
and
push
push
sbb
dec
jl
mov
sub
adcl
mov
shrb
les
aaa
ret
aam
addr16
fs
mov
mov
lods
push
sub
lahf
mov
stos
out
bnd
mov
call
test
out
xor
mov
mov
xchg
cmp
inc
lret
mov
lock
cmp
adc
xor
add
fildl
mov
xchg
sbb
or
dec
mov
pushf
sbb
sub
js
or
sbb
shll
insb
mov
mov
inc
xchg
mov
in
add
loope
or
ret
or
mov
shll
push
pop
sbb
jle
cmpsl
call
pusha
js
and
xchg
dec
shlb
inc
mov
ss
jg
inc
outsb
loop
fadd
xor
jbe
xchg
imul
pop
call
add
movsb
cmpsl
pop
cli
repz
mov
or
ds
dec
adc
or
mov
fistps
push
or
jns
pushf
mov
push
and
jmp
add
mov
enter
cli
mov
inc
loopne
lcall
fsub
xor
or
test
xor
ljmp
cmpsl
stos
scas
sbb
les
stc
incb
test
jp
xchg
into
out
int
aad
or
xchg
out
jnp
jmp
jb
push
test
push
or
xchg
pop
cmp
subb
imul
lret
sbb
sti
cs
jmp
into
mov
dec
dec
rcrb
inc
pop
xor
pop
xchg
or
jns
call
rolb
inc
sub
dec
sbb
sub
or
xchg
and
mov
sbb
push
leave
js
out
shlb
mov
xlat
es
sub
pop
popf
or
add
sbb
iret
dec
icebp
lea
mov
mov
mov
roll
fwait
xchg
mov
mov
aad
adc
dec
pop
dec
scas
ds
mov
pop
fs
inc
pop
mov
cmp
sbb
add
cmc
fsubl
fdivrp
sbb
dec
or
stos
add
sbb
sti
sub
std
ss
dec
addr16
or
jg
mov
jno
cmp
sbb
jl
add
mov
xchg
sti
std
cli
jne
pop
cmpsl
xor
jns
jne
mov
lods
or
sub
inc
negl
jno
pop
inc
lods
xchg
jge
jmp
pop
push
jae
pop
ret
popf
and
into
aaa
or
cmp
out
lcall
mov
inc
or
inc
test
lret
jbe
pop
mov
push
push
jge
mov
add
mov
mov
add
jo
push
je
dec
inc
mov
and
popf
fwait
pop
fcoms
sub
or
adc
jl
mov
cmc
orb
or
pop
sbb
xchg
cmp
xchg
inc
aaa
cmp
rep
xor
push
mov
shl
sub
aam
dec
add
sahf
or
cli
xor
or
cmp
faddl
fabs
cmpsl
sub
mov
lea
jo
push
es
mov
aas
pop
lds
cmp
sub
dec
lods
ret
out
addr16
mov
xor
mov
pop
push
clc
lods
xchg
scas
pop
mov
movsb
xlat
add
inc
pop
mov
lds
inc
sbb
lock
lock
shlb
enter
pop
mov
scas
jbe
push
shlb
lds
push
pop
dec
adcb
int
dec
pop
fwait
lock
dec
add
in
pusha
xor
jl
mov
mov
mov
in
xchg
pop
lock
sbb
push
fdiv
jne
sbb
dec
movb
shll
mov
mov
jb
in
dec
push
xor
cli
pop
pushf
dec
lods
enter
sub
incb
jns
cmpsl
mov
cmp
test
out
sub
hlt
pop
and
aam
cmp
dec
or
mov
sub
test
mull
jmp
pop
imul
inc
je
xchg
mov
pop
les
stos
lock
div
pop
cmpsb
sbb
repz
add
jb
jne
lods
push
jno
dec
and
xchg
test
in
mov
ficoml
jo
mov
xor
mov
mov
and
ret
add
inc
sbb
adc
js
xor
xchg
mov
jb
aas
lods
pop
js
push
push
push
xchg
and
xor
cld
mov
xchg
in
orb
ja
push
movsb
fisubs
imul
jb
aaa
mov
push
aaa
std
dec
ret
jl
adc
imul
add
stos
out
and
and
and
or
lcall
aaa
pop
sub
mov
pop
and
and
repz
dec
mov
orb
pop
sti
xor
add
mov
jecxz
pop
jmp
xor
sub
popa
leave
or
scas
push
xor
or
mov
popf
pop
mov
out
inc
adc
ret
dec
xchg
ja
jp
jl
repnz
push
leave
sarl
movsl
sahf
mov
sub
fwait
dec
in
or
in
mov
fwait
add
push
xor
sub
stc
insl
add
inc
jae
or
inc
inc
movsl
lret
push
jmp
add
lock
add
sub
mov
push
stc
mov
data16
mov
mov
ficomps
es
add
shrb
push
cmpsb
pushf
push
leave
xor
lods
inc
divb
fisttps
xor
mov
lret
aas
dec
je
and
mov
mov
or
lods
inc
add
xchg
sbb
into
jl
cwtl
gs
cwtl
mov
sub
filds
fdivs
rcrl
push
mov
mov
lock
clc
ja
sbb
jno
dec
fisttps
cmp
leave
sar
mov
test
sti
pop
rorb
cmc
xor
shl
xor
in
rep
shrl
es
pop
pop
ja
mov
lods
cmpsl
inc
push
dec
int3
shrl
add
call
pop
push
mov
out
imul
and
loopne
mov
jo
lock
out
div
dec
in
mov
push
leave
testl
aaa
and
mov
jg
push
je
das
rcrb
sub
cmp
mov
in
pop
inc
inc
fistps
les
and
jns
dec
out
xchg
pop
mov
outsl
add
outsl
pop
xor
mov
jmp
push
jl
push
pop
jo
out
jae
jmp
or
std
ja
dec
shll
adcb
mov
fld
push
and
inc
mov
movsb
cs
push
mov
rolb
sbb
jne
popf
and
xor
lods
or
mov
dec
cmp
cs
icebp
cmp
stc
and
pop
push
aaa
fwait
call
test
xchg
or
aad
push
mov
ret
inc
pop
dec
xchg
add
out
pop
push
gs
jae
lahf
xchg
jb
out
repz
pop
cs
and
fildll
push
ja
cmpsb
jbe
in
dec
and
imul
add
or
mov
xchg
mov
insb
xor
sbb
xor
jns
lea
jns
dec
inc
loopne
push
push
add
xor
fidivl
and
rolb
inc
mov
lea
jbe
stos
or
inc
cmp
mov
push
mov
jge
out
scas
mov
imul
scas
mov
dec
test
stos
lock
pop
push
sbb
push
sub
imul
push
sub
out
add
dec
or
xchg
pushf
push
inc
pop
nop
stos
fstpt
jb
inc
pusha
aam
in
ret
shlb
lods
sbb
mov
ss
and
mov
sbb
inc
fwait
mov
ja
push
insl
insl
cwtl
mov
fisubl
aad
xrelease
arpl
js
cs
addr16
les
pushf
sub
mov
mov
cwtl
add
jle
out
sbb
sub
mov
dec
xor
pop
les
pop
rcrl
fcmovne
sbb
mov
fisttps
fcomps
mov
push
pop
js
js
jne
rcll
addr16
jl
movsb
sub
sub
iret
shlb
cmp
push
jecxz
rep
mov
pop
incl
test
popf
push
sahf
loopne
outsl
rorl
ja
nop
or
sub
pop
pop
fnsave
nop
leave
jnp
add
xor
adc
ja
stos
aas
xor
outsl
mov
test
sbb
mov
mov
mov
into
in
outsl
aam
push
mov
sbbl
sub
dec
mov
insb
pop
jmp
ja
mov
push
cli
ds
add
loope
cmp
mov
insb
or
in
imul
and
or
test
add
in
or
mov
imul
loop
cmpsb
pusha
fmuls
lret
mov
sbb
loope
xor
xchg
push
jnp
mov
aad
sub
aaa
jl
xchg
jg
out
js
xor
and
sbb
mov
adc
sbbb
mov
ja
fdiv
les
and
jle
int
inc
jo
shll
add
clc
sar
dec
out
push
popa
mov
or
pop
lahf
sub
add
adc
outsl
jecxz
or
fiaddl
mov
and
add
jae
add
out
jmp
adc
pushf
jne
add
sbb
and
mov
dec
push
mov
sub
mov
clc
mov
imul
push
cmp
xchg
fdivp
mov
sbb
inc
repz
cmc
sub
leave
stc
cltd
sbb
pop
xor
sub
lcall
inc
push
mov
inc
shrl
pusha
aaa
xlat
lods
mov
aam
ljmp
push
je
adc
adc
xchg
xor
ja
jecxz
sbb
jno
pop
test
shl
sti
sbb
inc
inc
sahf
cmp
pop
je
inc
shl
xor
cli
std
movsl
aam
push
mov
xor
psubd
fstpl
lods
add
shl
pop
sub
es
lret
inc
in
stos
mov
mov
mov
rcrb
ret
mov
and
arpl
adc
inc
test
adc
xor
icebp
xor
mull
xchg
inc
movsb
pop
lahf
push
dec
mov
mov
loop
out
or
cmp
test
imul
mov
je
dec
push
mov
popf
sbb
ljmp
mov
mov
xor
xchg
sbb
jae
movsb
test
js
mov
loopne
popf
movsb
cmp
pop
dec
or
pop
out
out
lock
fists
cmp
mov
outsb
pop
push
jl
dec
rorl
in
sbb
jb
or
je
ret
xlat
xor
ret
leave
jp
push
lods
test
ret
iret
fdivr
xchg
nop
insl
push
add
into
les
push
mov
stos
push
sub
pop
pop
and
out
sbb
and
inc
div
ss
add
mov
icebp
or
jmp
jmp
jg
sbb
movsl
mov
dec
cmc
out
ja
es
lods
fdivs
dec
jns
cltd
jns
adc
shlb
sbb
mov
and
loop
rdmsr
dec
adc
mov
pop
mov
sub
push
ret
cs
xchg
mov
icebp
or
and
xor
out
lea
jne
into
jmp
sub
dec
in
nop
mov
lret
ja
sbb
sarl
inc
negb
mov
push
loopne
pop
fs
out
add
sub
fistpl
sbb
cmpsl
fdivrs
inc
or
out
mov
and
mov
gs
and
adc
in
and
jae
or
add
xchg
testl
pop
out
ss
es
out
out
xchg
pop
fldl
or
or
test
inc
or
orb
hlt
inc
lret
scas
stc
lea
mov
into
sbb
cmp
xchg
or
pop
cmp
inc
push
add
jg
cmp
cmp
sub
mov
and
pop
xor
decb
jo
ret
cld
paddd
cld
pop
mov
pop
scas
xchg
inc
mov
inc
ja
data16
mov
inc
mov
fisubs
mov
lods
ja
stc
mov
call
cli
xor
sbb
dec
test
test
mov
lcall
jle
jle
ss
jl
imul
jg
aas
inc
cli
repnz
mov
lods
dec
inc
mov
adc
jmp
push
and
mov
nop
pop
adc
lock
jle
sarl
and
movsl
dec
sti
mov
cmpsb
cmc
negb
stc
or
mov
fnsave
jno
fidivl
mov
cmp
mov
pop
mov
outsl
or
lods
or
push
and
push
push
xor
test
pop
cmpsl
fs
ljmp
and
addb
mov
xchg
sbb
sbb
lds
test
xchg
cmp
rorl
in
inc
xchg
sbb
jmp
inc
stos
fcomps
in
lcall
adc
add
dec
dec
jl
or
mov
jbe
sub
or
mov
testl
outsb
mov
shrl
sahf
out
movsb
or
fdivs
jp
arpl
insb
jno
sbbl
pop
pop
js
mov
insl
mov
ret
jbe,pn
adc
inc
xchg
mov
outsb
fld
push
pop
xor
out
xchg
mov
stc
sti
fwait
mov
ljmp
ds
cmp
jmp
fisttpll
xchg
popf
push
mov
push
push
jecxz
std
test
sti
dec
mov
je
cmp
popf
mov
inc
push
adc
add
mov
push
sbbb
dec
jne
pop
cmp
inc
popf
mov
out
xor
pop
sub
push
adc
testb
cli
popf
pushf
popa
mov
popa
faddl
fs
out
pushf
push
and
mov
pop
cmp
mov
adcb
xchg
ret
jae
lds
jae
movsl
push
shrb
push
inc
xchg
ret
and
cwtl
outsl
cmp
rorl
dec
jp
inc
sti
sbb
lods
mov
push
dec
cltd
sahf
adc
cmp
in
xchg
mov
cmc
hlt
lods
mov
lret
mov
jae
xchg
cmp
cmp
aas
loope
jnp
xor
aaa
shlb
aas
add
jb
fdivl
xorb
add
iret
jp
out
jnp
and
in
std
pop
stos
add
add
in
or
jp
lods
xchg
lea
clc
movsb
or
cltd
push
hlt
push
sbb
cli
push
rorl
lock
popa
pushf
sub
pop
dec
fiaddl
rorb
data16
icebp
sbb
dec
hlt
pop
pop
lock
lret
inc
push
mov
adc
fwait
js
xor
insl
mov
das
je
sbb
mov
xchg
or
jg
dec
or
stc
out
push
sbb
hlt
and
icebp
ret
popf
mov
repz
pop
dec
sti
mov
add
cmp
sbbb
sbb
std
cmp
sbb
and
fwait
xchg
pop
sub
sbb
xorl
jo
imul
sub
xchg
arpl
cmovge
push
out
cli
and
add
insb
jp
add
push
pop
and
ret
jae
jbe
fnsave
shlb
xchg
push
xor
pop
ret
aad
dec
inc
fimuls
dec
dec
in
aaa
xor
xchg
xchg
scas
sbb
dec
cli
xchg
clc
mov
xor
ret
clc
pop
push
ljmp
les
and
js
xchg
cmc
mov
or
bound
inc
es
mov
inc
out
mov
cmpsb
sarb
xchg
jle
jmp
aam
push
dec
and
fistl
sbb
ljmp
or
outsl
lahf
inc
pop
in
mov
or
xchg
imul
adc
loop
adc
movsl
inc
cwtl
adc
sub
cmp
dec
jg
mov
arpl
mov
leave
mov
lock
in
mov
not
add
scas
aam
mov
aas
dec
lret
push
dec
dec
enter
cmp
inc
mov
rcr
test
sbb
mov
and
adc
cmpsb
push
mov
mov
jge
push
test
cmpsb
repnz
stos
stc
dec
out
mov
lret
push
repnz
icebp
sahf
cmc
jl
out
cld
daa
test
inc
std
dec
mov
push
adc
mov
dec
jecxz
inc
ljmp
push
outsl
jg
xor
inc
fiadds
and
ds
das
inc
mov
test
jecxz
mov
cwtl
xlat
and
rcrl
inc
lods
push
pop
pusha
fildll
insl
push
in
popa
push
gs
cmp
mov
and
inc
add
and
xor
push
lea
sbb
insb
in
enter
add
bnd
dec
hlt
repnz
xchg
dec
jmp
adc
jnp
fiadds
lcall
mov
xor
mov
sarl
in
out
pushf
or
and
and
jl
mov
aad
imul
xor
test
jno
sub
stos
jle
jae
movsb
repz
mull
jle
jae
or
sahf
push
adc
movsl
lds
lret
jno
lea
arpl
repnz
xchg
xchg
inc
test
lods
aam
xlat
clc
and
out
dec
mov
adcb
sarl
jg
out
lds
mov
fstl
jmp
sub
in
stos
cmp
add
xchg
ljmp
rolb
shlb
loopne
imul
mov
xchg
or
incb
pusha
jnp
ds
aad
mov
sahf
int
and
test
movsb
mov
and
inc
xor
or
or
test
inc
ret
std
in
xor
add
addr16
sahf
outsb
or
inc
mov
dec
and
les
lahf
mov
loop
dec
clc
adc
jmp
ljmp
mov
call
xchg
or
arpl
sbb
inc
push
jl
sbb
ljmp
push
mov
scas
fisttps
outsl
pop
mov
pop
imul
pop
sub
add
js
or
xor
jno
pop
aaa
mov
xchg
aad
pop
sarb
xor
jg
popa
xor
adcl
imul
pop
loop
addr16
mov
mov
icebp
les
pop
mov
pushl
xchg
jge
and
xorb
data16
test
test
xor
rol
jb
add
hlt
push
mov
mov
mov
clc
js
push
ret
xchg
and
hlt
scas
fucomip
sahf
iret
pop
lahf
loopne
add
or
mov
fcomps
loope
addr16
push
not
cmp
test
cmp
push
in
or
addr16
mov
stos
mov
mov
into
shrl
dec
daa
loop
movsl
in
pusha
stos
ss
movsl
jmp
mov
adc
jnp
or
fwait
int3
rolb
push
lret
test
push
add
or
lock
int3
jecxz
add
stc
pop
sub
repz
xor
push
js
mov
add
sbb
cmpsb
jl
cmc
out
inc
scas
outsl
inc
xor
call
adc
es
repnz
sbb
test
cmp
fisttpl
gs
ret
repz
cmpl
sbb
push
js
add
pop
aad
xor
movntq
inc
test
xchg
leave
fs
push
xchg
push
jne
bound
mov
scas
sbb
and
inc
jnp
jo
fs
adc
add
nop
xchg
movsl
xor
xchg
aas
popa
mov
pop
les
test
imul
decl
mov
push
mov
cmp
adc
sub
in
xor
aas
sbb
orw
jae
cmc
test
shrl
and
idiv
mov
push
xchg
repnz
adc
add
icebp
adc
mov
mov
dec
aad
sbb
or
inc
arpl
test
rolb
xor
in
rcll
out
fildl
inc
loope
pop
dec
pusha
mov
jo
scas
mov
dec
xchg
shll
popf
dec
jp
add
lcall
aam
adc
inc
aaa
xchg
in
sub
xor
xor
sub
aaa
mov
call
call
roll
cs
sub
jne
dec
inc
adcl
fcmovnb
add
mov
jae
mov
pop
imul
pop
pmaxsw
mov
mov
pusha
loop
pop
sti
jb
mov
daa
jmp
lea
andb
adc
enter
push
inc
scas
adc
xlat
aad
mov
repz
mov
pop
adc
and
test
lret
bound
sbb
jno
int
stos
xlat
xchg
jmp
mov
ds
xchg
jmp
je
cmp
cltd
lcall
lret
cmp
das
addr16
cmpsl
insl
inc
dec
mov
subl
sbb
test
mov
pop
mov
aaa
mov
dec
pop
fs
jbe
loop
cmc
cmpb
xchg
cmp
adc
popf
lods
cmpsl
ljmp
out
in
ljmp
sbb
ss
xor
jl
outsb
pop
add
lds
lods
test
stos
push
fwait
movb
mov
adc
sbb
dec
pop
movsl
and
fdivs
mov
xchg
sub
inc
bound
dec
add
push
sub
jmp
dec
mov
fcmovnbe
mov
jg
or
call
cli
leave
mov
pop
xchg
test
aaa
stos
out
sbb
mov
inc
insb
enter
imul
outsl
mov
pop
jmp
das
leave
adc
imul
in
mov
push
or
aam
push
add
mov
xlat
repnz
rdmsr
dec
loope
popf
ror
fistps
aam
cmp
add
and
stos
or
dec
push
mov
das
les
adc
adc
neg
fcoml
pop
push
dec
inc
mov
andl
sub
jp
xchg
xchg
mov
mull
xlat
daa
rolb
leave
lock
negl
xchg
adc
lds
push
ss
add
and
push
out
stc
xchg
push
sub
lds
xchg
sub
push
cwtl
fistpll
ret
xor
add
imul
int3
cs
je
dec
clc
int
pop
dec
outsl
shrb
cmc
stos
in
adc
xchg
imul
ljmp
or
mov
cs
out
cmp
idivb
dec
fstpl
xor
aaa
cmpsl
pusha
cwtl
leave
decl
std
mov
bndldx
inc
and
enter
popa
es
xorb
rcrl
leave
outsb
add
sub
xchg
out
lret
mov
push
jmp
add
push
and
ret
mov
in
les
pushf
xchg
rol
push
daa
mov
data16
adc
cltd
shl
ss
pop
mov
fisubrs
clc
out
testl
pusha
and
sub
mov
push
popf
mov
adc
xlat
fcoml
je
xchg
add
adc
mov
pop
push
sbb
ljmp
mov
pushf
xchg
xchg
movsl
icebp
dec
inc
inc
fsubrl
add
andb
dec
lock
xchg
pop
jno
sbb
sahf
mov
jno
scas
ds
cmp
xlat
pushf
pop
lret
cmc
enter
fwait
sub
xchg
aaa
dec
lea
push
mov
add
cmp
or
inc
sub
insl
jne
cmc
je
bound
xor
roll
es
lods
rorb
data16
jbe
popa
jmp
int3
inc
jle
mov
sahf
push
aam
jp
push
lock
test
mov
inc
lcall
adc
rolb
aaa
dec
and
fwait
mov
das
out
cmp
cmp
xor
fwait
rcl
je
fdivp
mov
ret
pop
arpl
call
mov
daa
enter
push
push
je
pop
pop
pop
and
out
pop
stos
or
loope
mov
mul
or
pop
inc
mulb
sub
ds
js
sbb
sbbb
mov
and
scas
imul
ret
in
mov
fs
fldenv
loope
add
lahf
xchg
inc
in
imul
lret
fildll
and
js
cmpb
mov
hlt
repz
mov
fcmove
stc
fstpt
cmp
sub
pop
in
stos
push
inc
es
mov
inc
ljmp
fidivs
cltd
jno
jle
mov
data16
inc
dec
incl
loope
mov
enter
dec
push
repz
sbb
aam
lahf
mov
add
ljmp
inc
mov
stos
in
mov
js
aas
fidivrl
out
ret
xchg
lcall
sarl
insb
cli
and
out
jb,pt
loopne
jae
cmp
fdiv
adc
jne
in
sbb
mov
sahf
inc
pop
add
dec
pop
idivb
lret
mov
outsl
pop
ret
mov
cli
cmpb
pop
movsb
leave
jp
ss
adcb
orl
sub
fmuls
xor
cmc
fiadds
mov
xchg
pushf
mov
mov
dec
inc
dec
fistpll
pusha
mov
fidivl
add
icebp
mov
imul
enter
push
xlat
pop
mov
pop
subl
rorl
aas
and
test
mov
lret
pusha
cmc
add
ss
enter
shlb
imul
js
and
xor
inc
fldenv
pop
repnz
push
adc
cmpsl
divb
mov
pop
fisubl
leave
mov
std
mov
adc
je
jne
gs
ficomps
xchg
inc
adc
pushl
js
and
jae
jne
nop
mov
sbbb
test
fscale
push
inc
lret
sahf
mov
mov
fs
addl
dec
mov
loopne
push
inc
xchg
sub
fdivrs
fisttpl
jbe
daa
das
cmp
fnsave
std
and
movsl
rolb
sub
out
xor
push
sbb
jl
mov
xor
out
arpl
cltd
add
into
stos
stc
xor
sahf
jne
mov
mov
cmp
lret
xor
jne
cmp
mov
mov
data16
add
sub
int
fdivrs
pushf
sub
adc
data16
sub
pop
jne
xor
jl
mov
dec
push
mov
xor
sbb
cmc
int3
cmp
icebp
idivl
mov
sahf
lahf
mov
daa
addr16
push
int
fs
scas
scas
jne
dec
mov
sub
cltd
jg
jae
sub
push
mov
shlb
stc
cmp
dec
mov
sbb
icebp
shl
ds
aaa
jmp
ja
cmp
mov
pop
adc
sbb
pop
ret
repnz
and
or
pop
hlt
cmp
test
xor
outsb
cli
adc
je
adc
dec
xlat
sub
subb
rcrb
mov
mov
sbb
rcr
out
add
iret
pusha
jbe
cmc
cvtps2pi
lea
xchg
sti
push
xchg
cli
jp
shrl
lahf
fsubl
out
fnstenv
pop
or
out
fildll
xor
adc
xlat
jbe
fucomi
or
pop
cltd
rcrb
loop
ds
sub
sbb
sbb
insb
jecxz
fwait
sbb
push
pop
sarb
push
gs
xor
push
ret
xor
pop
mov
repz
cli
xlat
add
outsb
ret
out
insb
mov
sub
clc
jo
pop
divb
aaa
sbb
in
insb
adc
rcrl
test
add
lock
imul
mov
std
sbb
adc
cmpsl
mov
sub
push
pop
stos
jg
mov
cld
cmp
or
outsb
pop
loopne
mov
fldenv
in
mov
das
adc
lds
pushf
cmc
fsubrs
sbbl
sub
adc
sub
movsl
in
jne
dec
cmp
icebp
or
cmp
xchg
mov
xchg
mov
iret
push
jno
fldenv
adc
xchg
jp
adc
mov
mov
into
or
sbb
out
or
push
lret
cmp
pop
push
add
mov
subl
sbb
mull
ljmp
stos
fdivrs
movsb
mov
fcompl
mov
clc
gs
sbb
das
sbb
mov
xlat
jmp
cli
cld
inc
sahf
sbb
out
movsl
pop
stc
mov
sbb
inc
sub
cmp
test
add
push
test
dec
call
shrb
std
xchg
pushf
inc
and
adcb
fs
mov
mov
xor
push
out
in
gs
mov
mulb
adc
adc
jns
cmpsl
lcall
jae
in
scas
popa
arpl
lods
sbb
mov
or
pop
clc
dec
jb
test
xchg
xchg
dec
into
jb
into
stc
clc
add
sub
adc
js
pop
inc
mov
dec
jne
dec
xchg
hlt
xor
pop
pop
inc
mov
sub
sbb
into
cmp
cmp
icebp
sbb
pop
stc
mov
into
or
xchg
dec
inc
enter
mov
popf
dec
dec
jmp
push
sbb
xchg
or
dec
in
jb
fstl
xlat
push
cmp
out
mov
or
fnsave
out
stc
mov
and
and
jae
cmp
rcrb
mov
cmc
pop
mov
mov
rolb
and
int
lods
mov
xor
inc
push
cmp
xor
rcl
mov
data16
and
sbb
out
sub
xor
rclb
xor
mov
xchg
shll
mov
inc
lret
fistl
jb
mov
div
inc
mov
test
ja
movl
cmpsl
lock
mov
xor
mov
out
in
cmpsl
xor
mov
pop
jl
pop
mov
inc
adc
or
pop
jecxz
loop
fwait
imul
in
into
jnp
jle
xchg
insb
inc
pushf
test
in
push
mov
lret
pushf
jo
push
mov
andl
daa
inc
aam
mov
pop
js
shl
ss
negl
xchg
jg
jne
mov
stos
lds
mov
subw
and
sbb
adc
mov
aad
scas
sub
xchg
xchg
out
fistl
insb
mov
popa
lods
xchg
cmp
xchg
popf
jge
cwtl
dec
xor
sahf
repz
ret
fnsave
adc
jp
xchg
xchg
mov
lds
cwtl
inc
jns
das
sbb
lds
mov
jge
leave
jmp
jecxz
cmpsl
imul
sub
cli
shl
xor
mov
or
inc
outsl
imul
lds
lea
cmp
notl
or
xchg
push
fsubs
lods
scas
in
call
push
fsubl
xchg
xor
bound
sarb
and
sbb
scas
inc
mov
push
cld
pop
cmpsl
lods
rcrl
shrl
jne
adc
mov
clc
ds
sbb
loope
mov
push
mov
sbb
out
es
sbb
loopne
push
mov
gs
or
push
mov
ljmp
fstpt
add
adc
in
sub
mov
sbb
insl
js
out
xchg
pop
repnz
adc
adc
pop
pop
mull
andl
sub
xchg
adc
pop
ja
in
mov
mov
out
sub
cli
sub
jne
push
icebp
popf
mov
mov
mov
xlat
push
add
addr16
ret
sub
mov
pop
sub
and
mov
out
lods
sbb
fmuls
dec
into
jns
ljmp
sahf
and
ret
popa
lahf
xchg
dec
pop
mov
hlt
sub
mov
movsb
add
pop
xor
cltd
sbbb
dec
jl
push
and
hlt
fcmovnb
popf
pop
mov
repz
daa
scas
jl
cmpsl
fsubl
scas
pop
les
fnsave
aas
add
add
pop
fiaddl
pop
sub
cs
fidivrs
mov
push
es
clc
fidivl
shlb
jge
push
hlt
scas
push
pop
push
add
add
xor
jb
out
add
fs
lea
xchg
xor
repnz
fdivrl
pop
mov
popf
mov
loopne
into
pushl
shrb
cmp
fdivrs
push
popf
int
arpl
and
and
rcrb
es
lods
adc
push
push
mov
mov
mov
dec
repnz
popf
add
arpl
inc
push
fnstcw
nop
cltd
mov
xchg
mov
sti
mov
adc
scas
test
mov
mov
iret
jne
enter
xor
std
jbe
lcall
test
test
mov
addb
into
in
sbb
shl
mov
pusha
dec
mov
lods
xor
add
and
clc
add
push
adc
push
mov
addr16
or
imul
and
or
loopne
pop
lcall
ret
xchg
cwtl
sub
push
sahf
jb
dec
test
mov
xchg
mov
imul
in
or
mov
dec
ret
inc
dec
sub
jl
pop
cmpsl
sahf
add
pop
xor
xchg
outsl
sbb
xchg
mov
sbb
into
imull
mov
repz
lcall
push
inc
test
and
enter
xchg
sub
test
ljmp
lds
add
add
leave
js
stos
sub
add
lods
addb
mov
es
jo
insb
std
mov
aad
mov
addr16
push
jl
js
xor
xchg
cmp
dec
mov
out
cmp
and
lods
in
lcall
xchg
inc
icebp
jl
stos
or
dec
and
arpl
aam
jnp
nop
jmp
adc
aad
sbb
vpunpckhdq
test
loopne
leave
mov
pop
pop
addr16
sbb
mov
cmp
mov
call
xor
add
movsl
icebp
add
jecxz
pop
clc
aam
dec
int3
add
jae
dec
call
aaa
je
and
xor
cmp
xor
pop
mov
andb
pusha
rcrl
xor
fcomip
xchg
push
sbb
cld
mov
test
sub
std
push
in
cli
mov
test
rcll
cld
bound
cltd
out
sbb
pushf
push
and
xor
iret
jge
mov
sbb
push
negb
adc
hlt
xchg
xor
dec
pushf
push
stos
mov
xchg
sub
cmp
jnp
xor
movsb
std
and
mov
lods
pop
gs
nop
or
or
jmp
test
and
insl
jne
jnp
xchg
outsb
lahf
jmp
cs
xchg
test
test
ffree
sbb
mov
addr16
push
push
test
adc
cwtl
push
fcmovb
sarl
sub
jae
movsb
sbb
push
mov
mov
inc
shll
adc
fmull
mov
xchg
xchg
or
mov
insb
cmp
jp
fistpl
arpl
mov
fnsave
push
lahf
mov
pop
fsubl
push
dec
jns
add
std
test
mov
xor
ja
fwait
jo
push
data16
cmpsb
popl
inc
xchg
andl
rorl
fisttpll
icebp
test
xor
mov
adc
clc
mov
mov
sbb
cmpsb
stos
shrb
mov
addr16
cmp
xlat
ja
sub
shlb
or
aaa
mov
adc
aad
push
int3
push
sbb
jne
or
lock
jo
lcall
arpl
mov
mov
int3
sub
mov
sbb
push
cmp
lds
icebp
lret
pop
mov
insl
scas
orl
pusha
fcomps
jmp
lret
test
loopne
fsubp
fimull
sub
push
sub
add
push
sbb
and
mov
inc
imull
push
sarl
mov
jb
push
cmpsl
push
sbb
outsl
insb
scas
addb
inc
insl
aam
pop
inc
push
jbe
mov
out
pop
jne
aaa
adc
stos
je
sub
sub
lods
mov
pop
stc
in
push
lret
arpl
repz
sub
mov
xor
jne
dec
lods
arpl
push
into
arpl
stc
sub
cmpsl
sbb
push
bound
xchg
dec
addl
lcall
mov
fsubs
sub
pop
xchg
insl
loope
arpl
mov
jmp
sub
cltd
clc
jae
jle
mov
es
aad
xor
inc
and
xlat
and
std
pusha
ljmp
sarb
push
pusha
push
cmc
inc
out
rcrb
insb
clc
test
xchg
xchg
sub
dec
dec
in
push
insl
pop
addr16
jae
fcmovbe
mov
leave
lahf
mov
adc
mov
xchg
mov
filds
sti
or
int3
and
adc
xor
orl
bound
rcrb
lahf
adc
jge
mov
bound
mov
mov
int
and
dec
sub
push
mov
shl
add
fucom
dec
adc
gs
inc
loopne
ret
adc
sbb
ss
mov
scas
test
bound
lcall
aad
shll
xlat
inc
ss
je
loop
xchg
xchg
inc
hlt
mov
or
out
dec
nopl
pop
sub
cmc
xor
repz
mov
loopne
mov
jg
aad
loop
je
adc
in
and
aas
bound
add
scas
cmp
pop
xor
rcrb
pop
jl
mov
loop
pushl
xor
and
and
imul
push
test
loope
inc
ja
loopne
fsubl
xor
adc
insb
mov
pop
in
inc
pop
add
insb
push
and
jp
js
out
pop
sbb
out
mov
adc
pop
test
lcall
data16
daa
mov
lret
cmpsl
mov
aad
mov
jmp
mov
jecxz
inc
js
and
mov
rorb
insl
popf
push
stos
add
cmpsb
cmp
data16
cli
jmp
xchg
cmc
fimull
mov
cwtl
fwait
ret
nop
inc
cmp
cmp
jb
pop
mov
and
jge
add
pusha
mov
shll
xor
dec
sub
and
cs
cmp
dec
jg
enter
mov
mov
xor
call
mov
int
sbb
sbb
push
test
mov
add
test
pop
pop
aas
add
sub
sub
jmp
xchg
cmp
push
mov
cld
or
add
aad
sbb
test
pop
out
shl
fidivrl
mov
sbbl
pop
decb
addr16
push
sahf
movsl
jne
adc
gs
cmp
loopne
repnz
push
repnz
insb
push
adc
lea
xor
mov
sub
out
js
cltd
or
push
sarb
push
stos
test
mov
fisttpl
iret
in
pop
test
sub
int3
mov
add
xlat
cwtl
xchg
arpl
lock
popa
std
pop
mov
adc
xchg
push
fiaddl
jno
push
jmp
lahf
pusha
push
mov
jg
scas
push
mov
sub
shll
or
pushf
fwait
inc
cmp
fisttps
addr16
cs
adc
aas
xlat
xor
sbbb
and
cwtl
and
adc
pop
fsubrl
pop
scas
xor
mov
ss
push
loope
outsb
daa
mov
fs
mov
and
inc
decl
lea
movsl
cmp
imul
lea
inc
aad
leave
repz
push
in
adc
dec
sti
js
and
dec
scas
fcoml
mov
test
ret
es
pop
das
hlt
lcall
ljmp
pop
test
sbbl
mov
xchg
push
repz
or
rcrb
jnp
inc
addr16
repz
dec
test
push
lret
xor
jnp
inc
inc
add
xchg
cmpsb
pusha
adc
orl
push
inc
xchg
int3
or
jbe
inc
dec
fsubl
push
and
mov
xor
and
jnp
push
stos
or
lret
insb
xor
std
scas
sbb
sub
inc
adc
or
lds
iretw
hlt
pop
lock
scas
pop
cmp
mov
jmp
add
popa
mov
xchg
mov
int3
sub
sub
mov
popf
cmp
repz
push
add
add
inc
pusha
imul
ds
and
fucomip
sarl
outsl
cmp
int3
rclb
push
mov
xor
xchg
inc
inc
add
loop
jmp
mov
ss
mul
or
test
rclb
fdivs
addb
inc
call
dec
dec
scas
adc
flds
inc
xchg
je
test
rorl
shr
mov
insl
or
dec
pusha
xchg
in
mov
add
push
mov
popw
and
xor
data16
cmp
adc
jae
mov
or
push
out
jb
jp
mov
and
push
lock
pop
xlat
mov
cli
push
in
mov
mov
cmp
and
pop
clc
sub
adc
jns
das
xchg
cs
mov
sub
hlt
mov
test
xor
xor
sti
data16
ss
rcrl
lret
ret
out
sti
int
add
or
in
hlt
js
xor
imul
or
loop
xchg
shrl
xchg
das
jo
push
mov
cmc
ds
aam
and
adc
cli
xchg
ja
push
subb
js
mov
xchg
cmpsl
pop
adc
leave
mov
jmp
mov
sub
add
jge
dec
mov
and
adc
lock
into
movsl
fs
inc
or
idivb
popa
pop
pusha
into
mov
push
das
pop
jl
cmp
daa
xor
xchg
sbbb
jnp
pop
lcall
mov
sbb
cmp
sub
inc
outsl
push
fs
jb
pop
pop
adc
xchg
mov
mov
in
sarb
lret
aam
jo
movsl
popa
loopne
push
mov
lret
cld
add
movsl
insb
outsb
dec
inc
addr16
les
jne
push
pushf
aam
or
rorl
xorb
jmp
das
loope
pop
sahf
cmp
sbb
lds
aas
fdivs
mov
daa
adc
fs
jbe
lods
or
loop
jne
sub
bound
inc
pop
dec
pop
adc
mov
ret
mov
push
push
insl
iret
xchg
rcr
cmp
jne
cmp
fisttps
les
inc
sub
mov
push
pop
xor
pop
inc
inc
xor
aam
xchg
test
test
jns
subb
xchg
inc
add
cld
leave
ret
ljmp
jp
outsb
loopne
add
aas
pop
sbb
cwtl
and
iret
test
pop
mov
std
lahf
out
enter
inc
add
pop
aad
arpl
fucomp
cld
stc
xchg
mov
ret
in
popa
pop
push
push
sbb
or
not
cmp
mov
shll
inc
int
cwtl
jge
sub
sub
in
into
aas
idivl
jmp
or
pusha
je
and
sbb
and
inc
mov
shlb
pop
mov
out
push
pop
inc
mov
insl
adc
cmpsb
and
xchg
mov
out
push
jae
jo
dec
xor
outsb
sti
add
sub
push
arpl
pop
nop
icebp
test
lods
jmp
cmc
mov
popa
fiaddl
mov
xor
sahf
add
push
push
test
test
xchg
int3
cmp
xchg
xchg
lods
inc
xchg
lea
je
subb
gs
inc
push
cmp
cli
movsb
mov
jb
mov
and
jbe
out
imul
je
shrb
fnstenv
jbe
in
push
dec
insb
stc
mov
lods
leave
notl
sbb
inc
ja
inc
pop
cmpsb
push
jg
xchg
jns
or
ret
push
xchg
mov
mov
cwtl
or
stos
cmpsb
add
mov
inc
mov
lret
movsl
inc
mov
xor
pop
pushf
loop
dec
sub
sub
test
cmp
inc
pop
sbb
int
mov
or
lret
test
push
cmp
int3
mov
add
mov
and
sbb
test
push
dec
lock
xor
or
movsb
es
lds
jl
scas
outsl
xchg
mov
mov
stos
mov
sub
and
cld
out
adcb
lods
insb
mov
inc
add
sbb
or
or
in
cwtl
mov
out
fwait
jg
pop
mov
lods
cmp
aam
jb
mov
sbb
xchg
push
test
mov
xchg
mov
mulps
je
adc
ret
sub
mov
cmp
xchg
inc
fistpl
mov
pop
shll
fcoml
mov
fbld
xor
aam
bound
es
mov
xor
and
sbb
dec
jne
push
xor
pop
lea
int
scas
das
xor
mov
fs
dec
outsb
and
dec
jmp
inc
mov
pop
lret
pop
add
nop
popf
stos
sbb
add
lea
xor
mov
xor
mov
loope
mov
sub
cmp
sti
inc
mov
insb
inc
in
movsb
pop
jge
adc
xchg
rol
sbb
sub
lods
push
and
hlt
out
and
mov
cmp
jno
fwait
mov
repz
clc
and
leave
fildll
push
and
mov
mov
lock
cmp
and
lock
lock
lds
loopne
xchg
add
nop
push
enter
scas
dec
and
sbbl
push
xchg
pop
shrb
xor
xchg
movsl
and
aam
pop
jl
icebp
pop
or
xlat
pop
div
mov
stc
inc
ja
insb
mov
arpl
push
mov
lods
or
fnstcw
jl
dec
and
sub
das
lret
mov
fdivs
adc
jns
in
cmc
xchg
sbb
jb
push
dec
adc
jo
scas
hlt
sbb
pop
lahf
dec
pop
sub
andl
jo
jecxz
mov
xchg
int3
addb
and
mov
dec
mov
loope
test
xchg
cmp
fiaddl
dec
orl
xor
xlat
shl
jae
push
loopne
les
sub
test
fisubs
sub
in
sub
inc
inc
add
icebp
xchg
addl
cmpb
sub
jecxz
lahf
repnz
fldenv
add
pop
inc
roll
push
push
rclb
mov
shrl
movsb
outsb
dec
cli
movsb
xor
dec
xlat
enterw
sub
xchg
xor
into
loope
mov
inc
inc
add
lds
dec
jae
movsl
push
scas
jo
imul
fsubr
cltd
into
les
fld
jl
or
cmc
add
mov
add
jp
sti
xor
jmp
pop
fdivr
adc
fsub
ficoml
nop
xor
fcomip
sub
clc
leave
adc
mov
jo
shl
iret
xchg
das
ja
xchg
gs
or
in
mov
rolb
stos
push
sahf
mov
lea
inc
dec
mov
adc
mov
and
pop
or
orb
mov
test
outsb
add
popa
and
sub
and
scas
sahf
add
mov
movsl
ret
aam
js
out
faddl
sub
int
jns
js
adc
scas
bound
cmc
push
sarb
pop
outsl
iret
inc
popa
mov
mov
das
mov
pushl
mul
movsb
mov
das
mov
lahf
les
push
inc
cwtl
ficomps
ja
stc
inc
popf
and
cs
outsb
js
push
imul
sub
or
add
jle
cltd
or
insl
jbe
xchg
aas
sbb
sbb
popf
aas
cld
or
push
shrb
xor
cli
movsl
mov
xor
pop
ja
sahf
sub
leave
dec
subl
mov
dec
test
in
rorl
jne
add
adc
adc
fs
cmpl
mov
pop
jge
and
inc
dec
lahf
mov
cmp
repz
jmp
or
sub
lret
sub
cmpb
es
repz
aad
subl
std
int
push
scas
dec
cltd
push
mov
xchg
dec
inc
sbb
cmpb
insb
jb
cli
pop
xor
lcall
add
xchg
cmp
repz
pop
ror
adc
shlb
add
cs
ja
inc
jmp
fwait
mov
popa
sub
xchg
aad
pop
mov
inc
cmp
cmc
das
sub
jno
pop
ljmp
xor
insb
pop
adc
cmp
ret
cwtl
sub
mov
dec
test
cmp
ss
cmp
sbb
dec
xchg
mov
dec
insl
test
mov
add
dec
pop
enter
xor
add
mov
dec
inc
mov
sub
cld
or
rcll
mov
fiaddl
xchg
jl
dec
mov
std
fdivs
sub
sbbb
push
lods
jo
push
and
mov
fcmovbe
mov
les
aad
pusha
or
jnp
push
push
push
pop
sahf
call
jno,pn
lods
pop
mov
data16
dec
adc
push
repz
dec
lret
sub
pop
push
mov
lea
hlt
cs
push
dec
in
cmpl
fisttpll
int3
stc
lret
mov
inc
mov
xchg
dec
xor
pop
lret
push
cmp
mov
sub
lea
iret
jbe
push
push
push
daa
lock
xchg
sub
xor
fisubl
and
mov
mov
repnz
mov
ss
loopne
clc
xor
je
mov
fimull
cmp
push
fsubr
mov
jecxz
push
pushf
and
rcrl
push
mov
sub
repz
int3
leave
push
cmp
dec
adc
jb
es
les
lods
lods
xor
rcl
mov
jae
pushf
cmc
sub
pop
lahf
cmp
outsb
or
mov
xchg
pop
ja
scas
lret
arpl
add
fsubl
xlat
cmpsl
cmp
jns
adc
in
push
mov
and
add
push
mov
add
dec
push
mov
jle
xchg
jecxz
mov
cmp
dec
icebp
sbb
pusha
je
dec
fistpl
andb
aad
shrb
pop
cmpsb
ljmp
mov
jl
les
stos
mov
jge
push
filds
dec
enter
cmpb
xchg
adc
scas
sub
out
daa
push
mov
movsl
push
test
test
pop
std
outsl
fimuls
or
push
and
enter
lahf
mov
pop
fs
nop
flds
xchg
out
cmp
sbb
jbe
clc
enter
push
in
lea
or
push
lods
push
xor
popa
mov
dec
call
pop
fstl
and
fiadds
lret
mov
and
sbb
mov
or
rcr
mov
xor
sbb
add
mov
xor
in
movsl
daa
xchg
xor
xchg
movsl
cmp
lahf
flds
je
or
roll
and
sub
std
je
pop
and
sub
popf
cwtl
inc
mov
imul
and
push
dec
lods
cli
enter
insl
cmp
mov
or
and
aad
xchg
sti
sub
jae
jecxz
adc
mov
test
dec
lcall
push
dec
cmpl
daa
shlb
lea
cs
or
pop
dec
notb
xchg
ja
mov
mov
add
xchg
repnz
add
in
nop
stos
lods
out
sti
mov
fwait
mov
cmc
nop
sahf
jo
clc
mov
mov
divb
xor
jge
push
movsb
jb
mov
jle
push
xchg
xorl
pusha
rolb
or
adc
mov
inc
pop
enter
and
cmp
popf
sbb
cmpsb
mov
sub
mov
jmp
adc
sarb
jno
sbb
ret
sub
pop
sti
sti
nop
sbb
sarb
clc
sbb
push
jno
aaa
lcall
push
cwtl
test
sub
iret
aam
or
fstp
jle
shll
lcall
or
int3
sbbl
out
inc
hlt
push
jb
pushf
fistpl
dec
fisubrs
mov
push
fistpll
lods
adc
int3
inc
xchg
add
test
jge
test
fwait
leave
jecxz
pop
outsb
sub
dec
into
leave
stos
mov
cmpsl
sbbl
bound
pop
sub
loop
pop
hlt
or
rcll
pop
xor
xchg
jge
mov
jb
and
push
push
iret
xchg
pushf
xchg
lea
push
mov
movsb
out
push
mov
mov
push
cltd
mov
pop
push
and
jmp
sbb
sbb
adc
sub
loope
or
or
xchg
inc
push
test
fimull
jne
repnz
int3
and
nop
rcrl
jg
cmpsb
gs
jp
insb
mov
fidivl
mov
mov
imul
andb
mov
int3
push
loop
rorl
aad
out
sti
push
dec
das
mov
sub
mov
mov
ljmp
cltd
add
pop
aaa
jnp
pop
push
push
cs
test
lock
mov
loope
jno
lock
pop
sbb
cltd
inc
dec
adc
shrb
mov
loop
add
stos
pop
inc
aas
mov
sub
popf
push
shlb
cmp
adc
test
xor
cwtl
movsl
cld
sub
xlat
mov
xchg
cmp
into
cmp
mov
adc
jnp
push
sub
test
aad
gs
sbb
push
xor
dec
repnz
fisttps
sbb
ret
data16
adc
in
add
mov
movsb
pop
aaa
cmp
aam
addr16
outsb
sti
in
orb
mov
mov
xchg
out
add
mov
or
stos
inc
or
fistpll
pop
sbb
push
adc
imulb
push
nop
idivb
test
enter
aas
xor
sub
mov
std
cmc
jno
cmp
pop
push
out
push
fstpl
jecxz
pop
subb
push
or
divb
test
imul
or
pop
hlt
stos
sbb
cmp
ss
or
insl
outsl
aas
test
mov
in
enter
xchg
ret
js
gs
ret
jne
jle
adc
stos
pop
punpcklwd
aad
arpl
loope
scas
add
inc
lret
lret
jle
xor
in
mov
mov
jmp
cld
jmp
imul
in
cwtl
pop
cld
test
je
in
mov
add
dec
and
shrl
jb
mov
ds
fstps
out
cmc
cmp
push
inc
or
sbb
cmp
xchg
dec
jno
in
pop
xor
movsb
jnp
adc
lcall
cwtl
pop
out
pop
add
out
aaa
test
dec
lcall
fcoms
push
xchg
sub
ja
jbe
sahf
mov
dec
orl
fsubrl
imul
mov
faddl
loop
lret
ret
pop
aaa
push
std
in
mov
stc
sbb
push
kortestb
lea
xchg
pop
jae
jne
fadd
and
and
xchg
mov
aaa
jnp
jne
jmp
out
loopne
sbbb
or
aad
mov
out
rcr
sub
ljmp
ret
inc
fiaddl
mov
push
shll
out
out
outsb
in
ljmp
iret
mov
imul
mov
test
jl
and
add
inc
popf
icebp
jne
iret
imul
jne
addb
mov
jle
lods
and
add
aad
xor
in
mov
leave
ret
mov
sbb
bound
clc
imul
jg
daa
or
lods
ds
xchg
stc
loop
addl
les
stos
and
rcrb
dec
mov
jne
push
clc
adc
std
and
shrl
sarl
sbb
add
pop
lea
pop
jns
xor
mov
jae
mov
lds
push
sub
and
mov
ret
adc
pop
push
insl
loop
mov
dec
sbb
adc
dec
clc
adc
and
adc
dec
or
jno
jno,pt
push
bound
pop
cmpsb
adc
sub
sub
and
or
ljmp
jne
ljmp
inc
dec
das
inc
into
movsb
into
int3
out
dec
push
loop
aas
dec
fyl2x
orb
aas
jecxz
cs
shrl
and
movsb
add
mov
xchg
inc
xor
es
inc
add
insb
and
xor
aad
filds
leave
cmp
sbb
jne
jge
mov
lret
inc
add
mov
adc
ret
out
pop
loopne
out
jp
dec
rolb
js
int
jle
lret
fidivrs
jmp
insb
push
sbb
mov
pushf
les
pop
mov
test
lahf
les
adc
fndisi(8087
int3
in
adc
aam
repz
lock
ss
pop
sbb
xchg
mov
pop
das
mov
jbe
leave
inc
mov
das
lods
xor
mov
leave
inc
push
in
and
fcompl
push
xlat
mov
in
cmpb
lock
fdivs
inc
xor
fsubs
jae
push
inc
add
fbstp
fcomi
test
out
pop
outsb
mov
mov
push
jae
out
cs
mov
fdivs
adc
pop
sar
fwait
cltd
inc
cltd
push
adcb
das
adc
adc
push
push
pushf
int
jns
push
cmp
mov
int
pop
xor
out
pushf
mov
mov
cmp
dec
popa
mov
dec
push
dec
push
and
fidivrs
mov
ds
fistl
dec
mov
jae
out
into
inc
mov
fbstp
dec
shrl
cmpsl
rorl
jle
rcrl
shr
and
xor
stos
push
sub
add
sub
scas
or
mov
push
cmp
lea
push
push
push
pop
cmp
sti
mov
jne
cmp
sbb
push
jnp
sub
jecxz
and
dec
xchg
imul
inc
incb
movsb
push
jnp
repnz
mov
frstor
leave
jae
dec
lds
rcrl
and
xchg
inc
icebp
add
divl
leave
fs
jbe
xchg
fimuls
stos
xor
leave
test
push
test
lret
inc
and
cli
sub
bound
cmp
or
inc
popf
int3
daa
mov
adc
dec
push
jb
jg
dec
push
cmpsl
std
dec
leave
push
dec
bound
lods
inc
roll
ja
ret
xor
add
sub
jnp
mov
mov
adc
mov
iret
jl
pop
and
xchg
add
int3
xchg
xor
lods
fwait
push
sub
pop
lods
inc
push
cmpsb
jp
jmp
in
add
pop
popf
add
jp
test
int3
mov
xor
or
jle
fidivl
add
test
mov
in
adc
mov
pop
push
insl
push
in
mov
js
test
push
xchg
into
fstps
jno
cmp
mov
sub
inc
fmul
ret
sub
sti
jae
movsb
add
sub
jnp
jle
je
rsm
xlat
cmpsb
insl
out
pop
or
mov
fisttpl
add
pop
fisttps
push
xor
add
pop
mov
xchg
mov
dec
mov
inc
add
shll
cmp
pop
sbb
enter
dec
and
dec
leave
pop
xor
stos
nop
inc
cmpsl
sub
hlt
dec
fisttps
hlt
shrl
arpl
or
push
fisubs
xorl
ljmp
mov
mov
outsb
and
jp
fisubrl
cmp
or
ret
in
cltd
lods
adc
addr16
call
repnz
test
sbb
out
test
sbb
jge
xchg
jno
mov
clc
not
xor
xchg
and
pushf
dec
sbb
dec
outsb
test
dec
mov
mov
in
adc
xor
cld
mov
fwait
les
fwait
adc
fs
fcmovnb
test
cmp
push
out
int3
fs
or
leave
add
dec
ror
xchg
je
mov
repnz
es
add
mov
pop
push
mov
js
push
pop
lods
std
rep
in
popa
shl
mov
test
pop
add
inc
mov
mov
sbb
sbbb
nop
sub
aam
repnz
pop
mov
inc
fwait
mov
stos
fsts
mov
sub
setnp
lds
ja
roll
add
adc
leave
in
inc
push
inc
or
mov
stos
mov
mov
mov
fucomi
ja
xchg
xchg
and
mov
js
sbb
sbb
leave
js
cltd
imul
lods
loop
ss
sbb
stos
movl
jmp
int
cli
xor
clc
mov
xchg
mov
mov
loopne
inc
sbb
mov
mov
pop
cmovbe
cmp
or
test
pop
dec
jb
bound
inc
pop
mov
mov
adc
jno
loop
mov
push
cmp
adc
cmp
xchg
ret
inc
pushf
scas
mov
shrl
inc
lods
mov
aad
cmpb
movsl
scas
jg
xor
xor
ljmp
lds
cld
pop
sbb
cmp
mov
or
inc
mov
mov
mov
shlb
adc
dec
ljmp
sbb
mov
jl
imul
sahf
or
add
in
stc
mov
daa
stc
out
and
rolb
test
fimull
adc
add
push
pop
fcoms
xor
xchg
icebp
cltd
test
sub
jmp
inc
std
sti
inc
rcrl
jae
cmpsl
inc
scas
mov
mov
fwait
rcll
andb
enter
xchg
mov
push
inc
sub
cmp
jae
rcrb
scas
in
cli
hlt
xchg
xchg
pop
adc
jmp
test
jp
cmp
int
call
pusha
cwtl
stos
ss
inc
xchg
scas
into
out
xor
in
sbb
outsl
loop
pusha
xor
pop
movsb
dec
dec
mov
testl
xor
mov
mov
and
pop
xchg
jmp
rcll
inc
pop
jo
push
mov
mov
movsl
cmp
push
adc
mov
jbe
push
cmpl
mov
clc
movsl
das
cli
hlt
pushf
and
xor
dec
stc
add
sarb
mov
xchg
stos
ss
sti
movsl
or
cmp
clc
ljmp
leave
sbb
cmp
jbe
loope
loopne
and
cmp
cli
dec
insl
push
fadds
icebp
aaa
and
lcall
aas
cltd
jmp
es
mov
and
and
lahf
ret
push
mov
jp
cmp
lds
sub
push
xor
shrb
mov
test
pop
lock
imul
jp
mov
into
test
jl
scas
fimull
in
sbb
inc
jp
and
lcall
shr
or
ljmp
repz
movsb
faddl
cmp
nop
jmp
xchg
push
cmpsl
push
ljmp
ljmp
into
jno
nop
bound
testb
adc
jnp
mov
mov
pop
daa
frstor
lret
adc
rol
adcl
mov
cmpsb
addb
mov
pop
ret
mov
loop
adc
lock
add
pcmpeqd
inc
sub
sti
ret
repnz
and
test
dec
adc
dec
and
rclb
push
mov
or
add
pop
jnp
scas
mov
and
pushf
and
das
cmpsl
xchg
push
mull
data16
bnd
pushw
test
xor
in
aaa
not
xor
xchg
jle
loopne
ret
gs
in
push
jmp
ss
decb
mov
fisttps
iret
ss
mov
fs
aaa
sahf
mov
adcl
rcrb
into
popf
js
int3
push
int
cmp
push
icebp
inc
jnp
bound
hlt
sub
push
mov
fisubl
cmc
enter
loop
pushf
loope
jno
les
push
fmuls
mov
cmpsl
xorb
adc
movsl
scas
xchg
and
rcrl
xchg
outsb
mov
inc
xor
push
xchg
sbb
fisttps
je
jnp
repnz
repz
mov
rol
inc
and
mov
lahf
mov
jnp
push
stc
pushf
xchg
mov
aam
push
out
sbb
insb
or
jb
out
icebp
lock
push
lahf
mov
xor
rcl
mov
sbb
rorb
arpl
ret
xchg
xchg
out
xchg
imul
mov
or
testl
pop
out
mov
sbb
xchg
mov
leave
ss
rcrb
ss
mov
sysret
xchg
aam
sub
jae
push
mov
xchg
aad
dec
push
cmp
adc
jo
xchg
imul
inc
arpl
popa
mov
inc
daa
popf
xchg
bound
sub
stc
pop
and
add
xor
mov
pop
nop
pop
mov
iret
sbb
sub
scas
cltd
adc
clc
scas
dec
cmp
mov
orb
mov
jae
stos
inc
imul
loop
inc
mov
cmpsb
xchg
inc
or
and
notb
mov
loop
andl
leave
add
leave
divb
sbb
and
jmp
mov
xchg
dec
js
mov
insb
xor
and
loopne
push
mov
dec
das
push
add
repz
jne
dec
cwtl
daa
mov
ficoml
adc
mov
mov
mov
cli
sub
aaa
mov
xorl
out
cli
pop
lret
loopne
jl
or
jne
test
lods
jg
xor
fbld
out
dec
jmp
xor
movups
add
add
inc
decb
pop
insl
pop
or
mov
mov
and
stos
enter
jb
mov
imul
jmp
fisttpl
stos
mov
fsub
ljmp
stos
mov
mov
mov
xor
clc
sub
imul
sbb
add
fisubrl
mov
mov
imul
mov
add
xchg
aas
add
icebp
inc
xchg
aad
or
popf
into
inc
jno
xor
insl
ror
cmp
adc
inc
rcrb
dec
pop
nop
gs
xchg
imul
xchg
gs
outsb
fadd
inc
pop
notb
xor
xchg
sub
or
xor
pop
call
stc
add
pushf
mov
lret
repnz
aas
dec
push
rolb
jg
int
push
adc
testb
addb
mov
xor
mov
ror
pop
lods
pop
mov
test
mov
dec
into
and
adcb
dec
dec
js
out
in
hlt
xchg
cs
vmread
insl
hlt
pop
sub
les
mov
jecxz
arpl
mov
dec
xor
cmp
lret
movsb
aaa
loop
out
and
bound
pusha
es
xchg
repz
pop
loopne
aaa
or
xor
into
faddl
and
jecxz
add
pusha
or
dec
dec
das
adc
sbb
xor
xchg
mov
test
test
xorl
cmp
test
popa
and
arpl
ret
mov
stc
jmp
lods
mov
sarl
movsb
xlat
xchg
cmp
mov
sub
sahf
mov
push
push
xchg
repnz
clc
sbb
xchg
cli
pushf
les
sbb
daa
lcall
dec
mov
bswap
sub
mov
mov
xor
cs
inc
cmp
ds
cmp
xchg
scas
cld
sbb
cmpsb
test
inc
xchg
jle
in
lcall
inc
scas
in
mov
push
add
push
cltd
jne
mov
stos
stos
sub
sbb
mov
jnp
out
push
push
pop
push
add
shlb
aam
in
add
test
xchg
leave
call
sub
pop
jae
push
jnp
js
bound
sbb
and
js
loopne
leave
aaa
push
lods
xor
movsb
add
mov
add
push
test
fwait
mov
mov
jmp
jmp
push
int3
mov
xor
test
in
pop
xchg
dec
lods
inc
sbb
fs
add
in
cmp
pop
xor
ror
ds
leave
fs
lcall
jecxz
fwait
xorl
xchg
int
mov
cmp
aaa
cmp
pop
add
cli
in
insb
jp
pushf
sti
fcomp
xor
mov
testl
or
jbe
mov
ret
mov
sbb
movsb
out
xor
push
popf
dec
push
cs
dec
sbb
jnp
mov
dec
lea
or
xor
pop
mov
push
or
cli
jp
jp
push
xchg
scas
cmpsl
cmp
jmp
jl
pop
cmp
mov
ja
fbld
sub
aam
incl
xchg
xor
pop
js
fsubl
test
mov
out
mov
cmp
hlt
je
cmp
jmp
sbbb
movsb
fwait
jno
stos
inc
and
push
les
in
loope
mov
or
dec
sub
cmp
gs
add
or
dec
sarb
sub
ds
icebp
jnp
shlw
dec
inc
movsl
int
cmp
arpl
dec
xlat
mov
leave
je
out
test
dec
int
rolb
jmp
xchg
push
popa
xor
nop
lock
pop
inc
ljmp
and
adc
out
cmp
adc
outsb
adc
daa
inc
mov
mov
lret
mulb
or
push
out
addr16
push
rcl
data16
or
ds
fisttpl
inc
inc
cmp
aam
sahf
sbb
test
enter
jecxz
fdivl
sub
cltd
nop
lahf
push
adc
testl
cmp
mov
fnstcw
rcr
add
jmp
and
jbe
mov
enter
mov
sahf
out
mov
imul
sar
cmp
aaa
or
call
jae
push
pusha
les
cltd
pop
lahf
lret
into
sub
xor
adc
movsl
inc
push
xlat
xchg
mov
ja
or
push
xor
mov
and
scas
sub
fwait
cmp
xchg
sbb
imul
sahf
sub
scas
rorb
insb
and
loop
jns
dec
xchg
pop
rsm
xlat
push
pop
cwtl
push
addr16
lods
stos
sub
xor
mov
jnp
cwtl
mov
enter
pusha
testl
or
mov
aad
push
iret
pushf
mov
iret
out
pop
das
add
jge
aam
dec
idiv
inc
cmp
jno
gs
fnstenv
fsubp
fsubl
pop
inc
in
mov
jnp
imul
stos
mov
sub
aam
cs
lret
jnp
lcall
fcoml
setle
ds
movsl
insl
add
mov
add
cwtl
pop
pop
lods
sti
inc
ja
jmp
cmp
adc
jle,pn
lahf
mov
jecxz
popf
shrl
add
jp
cmpsl
push
xor
in
pop
mov
add
dec
jnp
ds
xor
sahf
fisubrs
pop
add
sahf
or
or
fadd
in
out
sbb
test
nop
into
pop
into
lahf
or
jne
mov
mov
sub
mov
jbe
mov
lods
cmp
and
nop
jno
lea
hlt
mov
mov
jb
enter
xchg
mov
and
cmp
mov
lock
pop
bound
inc
sub
sbb
ret
add
push
popa
aam
lock
ljmp
sbb
pop
or
fcoms
inc
or
pop
or
fucomi
sbb
outsb
inc
cmc
add
mov
jl
sbb
arpl
mov
cmp
or
lock
push
push
rorb
sbb
test
inc
test
sbb
mov
hlt
pop
jg
fadd
out
lods
mov
stos
jno
dec
pop
ljmp
push
mov
imul
cmp
adc
shrl
arpl
mov
icebp
test
add
les
lock
xor
mov
mov
aam
jnp
test
out
clc
in
pushf
test
cld
sub
hlt
int3
popa
sbb
mov
movsl
or
and
add
pop
sub
sub
mov
adc
pop
mov
mov
xor
cmp
jne
cwtl
add
adc
pop
adc
mov
loop
jp
dec
gs
xor
pop
pop
jo
adc
dec
insb
push
test
popa
stos
call
aas
pop
add
popf
push
jns
test
out
jmp
icebp
hlt
aaa
push
insl
stos
inc
inc
jno
js
jecxz
add
mov
jne
xchg
les
stos
repnz
stos
shll
lea
and
arpl
rolb
imul
sbb
fldt
xchg
dec
mov
mov
or
insb
fstps
mov
mov
and
inc
pop
fs
pop
negb
dec
xor
es
lods
and
or
cli
outsb
inc
gs
mov
and
imul
daa
sub
loop
ds
push
sarl
jge
ret
jno
xor
add
jbe
mov
pop
cmc
push
loope
ss
jno
pop
loope
lods
test
movsb
inc
pusha
pop
mov
bound
pop
ja
inc
inc
stos
mov
push
adc
mov
mov
jbe
aaa
andl
fisubrl
int
or
mov
insb
andb
push
sti
stc
jecxz
pop
mov
lods
or
pusha
cli
cmp
cmp
repz
fidivrs
ret
in
sub
adc
fs
xor
rcrb
sbb
push
pop
sbb
xor
outsb
mov
test
inc
or
jmp
xor
fwait
test
jnp
pusha
call
mov
inc
xchg
cmpsl
pop
mov
outsl
xchg
enter
rorl
fsubrl
es
lods
push
imul
push
subb
mov
adc
icebp
dec
lahf
sbb
pushf
mov
rcrl
loop
push
insb
and
out
inc
inc
add
int3
lcall
gs
mov
sarl
aad
movsb
call
insb
sub
mov
bound
sbbl
addl
cmpsl
lahf
xchg
pop
add
and
push
xor
pop
in
stos
push
xacquire
pop
jno
cmc
bound
jae
xor
mov
pop
mov
cmp
ja
ret
pusha
cmp
sbb
sub
inc
mov
rolb
ljmp
pop
pop
arpl
fimull
or
mov
stos
jbe
clc
adc
xchg
pop
loop
xchg
mov
daa
and
ljmp
mov
ret
push
pop
int3
or
mov
out
movsb
pop
test
add
or
sarb
pushf
ljmp
xor
inc
and
cmp
dec
test
adc
adc
adc
leave
pushl
push
pushf
shrl
pop
insb
loopne
push
stc
lahf
add
icebp
pop
hlt
jge
js
jmp
fs
arpl
insb
mov
xchg
cli
in
jg
push
inc
pop
or
xor
stc
jno
je
scas
aad
in
xchg
cmp
sbb
jmp
stc
test
rcll
push
shr
ss
fstps
jle
mov
hlt
aaa
fldl
loopne
std
arpl
mov
cmp
scas
std
xorl
repz
test
inc
roll
cmp
movsl
sub
push
rcll
mov
test
mov
and
inc
test
jnp
xor
jmp
dec
jge
mov
jb
popa
in
push
les
shl
filds
and
xlat
pop
loopne
inc
inc
fidivrs
dec
js
mov
xor
data16
lods
stos
add
movsb
lea
mov
or
adc
insb
outsb
std
mov
movsl
inc
stos
js
jge
sahf
in
lea
push
pushf
pop
pop
or
movsb
arpl
cmp
or
cli
loopne
out
fisubrl
inc
push
stos
xchg
or
out
leave
es
add
insl
js
sbb
test
nop
dec
mov
push
and
sbb
mov
jle
cmp
adc
sbb
arpl
in
out
stos
adc
mov
testl
adc
mov
pop
dec
and
or
stc
push
xor
sub
pop
adc
mov
sbb
mov
inc
movsb
mov
push
clc
and
test
xorl
xor
adc
cmpxchg
rorl
jb
push
cmc
push
pop
ljmp
xchg
sub
cs
imul
mov
test
inc
jbe
pop
mov
mov
test
push
adc
and
into
mov
shrl
sbb
cmp
inc
popa
out
dec
jns
in
push
mov
cld
repnz
aad
push
xchg
jnp
dec
testl
negl
aad
aaa
pop
arpl
movsl
in
pushf
or
es
sbb
call
andb
notb
mov
call
sub
rorb
data16
inc
sbb
fldenv
cld
pusha
or
in
mov
push
sub
cmp
inc
dec
xchg
leave
fmull
cmpsb
jp
inc
jns
cltd
mov
dec
stos
inc
movsb
pusha
adc
xchg
and
test
mul
pop
xchg
sub
mov
test
add
cmpsl
addr16
fwait
push
fists
mov
adc
clc
xchg
push
push
jb
xchg
mov
mov
inc
adc
test
mov
xor
mov
adc
fsubs
ror
aam
jbe
mov
sbb
mov
mov
les
jnp
fs
test
xor
pop
aas
scas
jns
cmp
addr16
mov
mov
iret
dec
xor
add
push
ret
mov
push
push
daa
ret
add
sbb
rolb
aad
mov
mov
cwtl
sarb
cli
jns
and
sub
xchg
pop
imul
xchg
dec
and
lret
adc
jle
fstpt
fsub
adcb
dec
pop
stos
mov
cmp
ds
mov
cmpsb
pushf
out
jo
cmpb
rorb
adc
mov
cld
jbe
aaa
jne
clc
lea
cmc
cmp
mov
shll
in
and
repz
pop
into
sub
xchg
js
aam
and
cmpsb
adc
insb
fsubs
jbe
cmp
or
arpl
dec
push
jb
andl
lahf
rolb
add
out
fisttpll
dec
sti
movsl
in
pop
cmpb
ret
and
and
jbe
addr16
sub
jb
sbb
sbb
xchg
out
pop
dec
push
dec
scas
insl
pop
push
icebp
pop
loop
pop
in
lods
cmpsl
stos
aam
push
lret
fyl2xp1
sbb
stc
xor
test
out
cwtl
xchg
sbb
fisubl
mov
std
pushf
out
bound
add
pinsrw
pop
sahf
mov
fdivrs
mov
pop
and
call
pop
cmp
orb
adc
push
test
test
xor
xchg
or
fs
add
xchg
mov
in
mov
mov
mov
sbb
lret
mov
adc
arpl
pop
movsl
aaa
or
mov
in
adc
dec
lahf
int3
fisttps
aaa
lahf
out
mov
fs
xchg
mov
outsb
push
ljmp
add
lcall
fs
xchg
cmp
adc
cmp
fildll
pop
mov
cmp
push
in
nop
mov
mov
inc
mov
movsb
ret
aas
fidivrs
daa
sub
cmp
push
icebp
decl
stos
pop
loopne
cld
stc
xchg
xlat
pop
popf
std
mov
in
mov
adc
into
fists
out
inc
sub
int
push
push
mov
jbe
xchg
push
mov
jo
dec
sub
call
repnz
std
stc
add
and
movsl
jl
cmpsl
dec
mov
add
fsts
in
test
cmp
jnp
sti
iret
mov
std
inc
mov
rcll
aaa
jo
test
jl
cmp
in
mov
xor
or
pop
pop
adc
push
insl
js
out
clc
adc
jmp
inc
mov
dec
cld
aam
stos
test
fwait
out
dec
jmp
and
into
pop
mov
fisubrl
push
add
mov
cmp
test
lahf
mov
dec
fisubl
ljmp
mov
pop
sub
repz
arpl
cwtl
out
jnp
jno
ret
cmp
adc
sub
mov
shlb
dec
call
and
sub
repnz
mov
popf
test
xor
xchg
idivl
loope
xchg
xor
xchg
shll
xor
aaa
enter
cs
jmp
es
push
cmpsl
fmuls
repz
mov
mov
enter
test
ljmp
popa
loope
mov
cmpsl
adc
mov
daa
aaa
jnp
in
jmp
sub
test
aas
mov
sbb
dec
sbb
cmpsl
mov
addl
xor
hlt
out
sub
ss
dec
int3
mov
test
jae
gs
hlt
inc
jne
rolb
mov
xchg
push
sbb
push
sub
fnstsw
in
pop
sarl
cld
repnz
mov
mov
cmpsl
sub
mov
inc
push
aad
sbb
add
or
inc
xchg
jno
loop
clc
cltd
fildl
into
das
popl
rcrb
jnp
adc
mov
out
xchg
mov
cmp
imul
loope
nop/reserved
fmuls
or
fcom
mov
in
hlt
xor
pop
adc
mov
out
ret
mov
cmp
push
imul
fdivl
xor
in
pop
add
push
test
mov
ret
scas
inc
mov
xchg
or
jnp
xchg
and
cld
xor
sbb
inc
push
cmpsl
push
xchg
push
test
fs
add
daa
push
fyl2x
mov
mov
jo
leave
mov
out
xlat
pusha
fwait
pushf
mov
jo
insl
pop
orb
fiadds
das
push
bts
andb
adc
or
lcall
pusha
test
ret
mov
lret
push
shl
scas
jg
mov
push
sti
inc
xor
xchg
pop
push
and
mov
out
sti
inc
dec
into
int3
mov
fdivs
mov
mov
stc
sub
into
mov
jnp
rorl
xchg
loopne
f2xm1
scas
je
xchg
pop
adc
out
inc
aam
dec
ja
add
dec
aam
pop
scas
in
repz
imul
sti
mov
dec
bound
push
leave
jge
pop
movsl
les
mov
lock
cmp
jmp
jo
arpl
ja
or
repz
and
cwtl
daa
fwait
dec
stos
clc
dec
idivl
mov
sahf
cmpl
out
jg
testl
test
cmp
add
loope
add
mov
fisubrs
jo
pop
inc
jl
cltd
shlb
sub
cld
mov
xchg
stos
sarl
fwait
cwtl
das
pusha
js
lret
xor
mov
sarb
inc
pop
hlt
push
xlat
lods
cmc
and
mov
divb
adc
xor
or
repz
movb
add
out
fwait
int3
mov
lock
xchg
sti
jns
mov
inc
jns
fistps
fstpt
or
stos
xchg
sub
jo
ret
inc
push
pop
mov
dec
cmp
cwtl
test
shl
out
call
pop
sti
scas
inc
out
jb
jne
mov
and
stc
mov
popa
jg
shlb
lds
xor
xchg
jl
and
adc
mov
aam
insb
dec
imul
sub
lahf
divb
xchg
popa
jl
clc
xchg
cmp
dec
jecxz
xchg
pop
sahf
pop
jbe
dec
jg
mov
jns
xchg
xchg
cmp
pop
mov
cmpsb
sub
xor
mov
subl
imul
ror
addr16
jne
xor
test
and
xchg
dec
pop
mov
aas
ret
mov
daa
xchg
imul
mov
jo
and
dec
lret
shr
cmp
repnz
mov
mov
imul
mov
pop
loopne
cmpsl
dec
stos
dec
fstps
imul
lcall
or
addb
mulb
mov
mov
fsubl
les
movsb
pop
lock
mov
aas
pop
in
fldt
mov
push
aaa
loope
inc
in
mov
inc
dec
push
mov
ja
pop
stc
xor
aas
add
lcall
jmp
xchg
xchg
dec
xor
lcall
cwtl
xchg
out
jbe
lcall
dec
mov
adc
into
push
lret
test
mov
and
nop
addr16
imul
mov
inc
shrl
gs
mov
dec
sbbl
cmc
stos
lds
icebp
pop
mov
pop
sub
xor
lret
decl
mov
jmp
sub
sti
bswap
push
xor
mov
js
pop
jl
aam
pop
xchg
out
ja
int3
jg
das
mov
sub
sub
inc
jge
xor
dec
sbb
jbe
lods
xor
adc
mov
lock
mov
repnz
adc
inc
push
in
daa
dec
fistl
dec
hlt
dec
out
sbb
pop
enter
xchg
mov
lret
es
mov
stc
rcl
in
test
repnz
ljmp
xchg
unpckhps
iret
mov
push
mov
adc
sti
sub
stc
cmp
out
ja
enter
cwtl
cs
dec
aaa
loope
add
xor
gs
mov
pop
jo
mov
xchg
dec
ljmp
lret
pop
adc
xchg
or
dec
lcall
dec
mov
dec
jp
mov
lea
test
ret
scas
idivb
add
outsb
pop
mov
adc
fists
mov
push
dec
xor
dec
mov
scas
dec
addr16
int3
leave
pop
xlat
sub
xchg
movb
jge
push
clc
xchg
pop
mov
mov
das
ret
call
dec
add
mov
insb
into
mov
mov
pop
jo
scas
adc
enter
hlt
xchg
pop
ds
jmp
sub
pop
repz
mov
mov
add
and
and
stos
in
lods
stc
inc
xchg
jno
fcmovbe
daa
mov
fs
xchg
mov
dec
jne
sbb
mov
adc
xchg
shll
mov
mov
pop
insb
out
popa
push
enter
cmp
push
add
pop
ret
and
scas
jae
fsts
movsb
lret
loop
inc
addb
sub
aam
outsl
xor
test
hlt
sahf
mov
mulb
push
dec
or
add
jecxz
xchg
pop
mov
sub
in
push
imul
and
loop
cmp
sub
xchg
inc
lcall
popf
arpl
lea
sub
sti
push
cmp
pop
popa
push
jb
xor
mov
adc
inc
jnp
mov
push
imul
jb
inc
mov
filds
adc
adc
sub
push
pop
in
push
js
ret
popf
add
lds
mov
iret
int3
loop
dec
mov
mov
mov
pop
aad
movsb
inc
aam
jo
push
sbb
jo
sbb
adc
loopne
nop
out
push
aaa
adc
je
ljmp
inc
or
lods
lods
or
push
scas
mov
push
xor
in
es
pop
popf
daa
xchg
sbb
mov
aam
pushf
lcall
js
lret
xor
outsb
push
dec
cltd
fildl
sub
xor
inc
nop
xor
ljmp
mov
dec
pop
inc
les
xchg
repnz
cmp
xor
enter
fidivrs
push
loope
cmp
sti
pop
loop
mov
into
push
pop
xchg
lret
cmp
push
andb
adc
fnstenv
and
mov
adc
out
push
test
je
mov
jae
outsb
shll
sbb
es
or
sub
clc
pop
gs
fwait
cmp
sbb
jg
mov
cmp
ret
test
cmp
and
insb
push
inc
fisubs
adc
xor
arpl
xchg
sti
inc
push
lret
sbb
mov
cmp
pusha
ds
pusha
stos
aaa
sub
sbb
lods
orb
push
pop
cmp
mov
rol
mov
fst
imul
pop
rol
add
imul
cmc
xchg
loopne
sbb
fldenv
pop
push
out
repnz
loope
push
xchg
les
jo
adc
dec
jmp
pop
out
movsl
inc
push
jns
or
sahf
push
push
jno
add
jno
push
sub
lcall
cltd
push
inc
je
inc
mov
ljmp
cmc
subb
jbe
mov
movsl
sbb
jmp
xchg
mov
fists
aad
cmp
jg
stos
test
inc
fwait
pushf
and
es
xor
mov
lret
dec
in
push
jmp
pusha
outsl
jl
sbb
sub
cli
out
hlt
add
pop
popf
daa
int
sbb
in
in
aad
out
sti
add
fdivs
add
push
xor
jl
push
lods
jno
mov
inc
daa
fsts
mov
aas
inc
dec
mov
pop
fwait
push
out
sar
sub
jno
mov
stos
daa
outsl
xchg
rcr
out
or
lahf
sub
lret
mov
int3
push
and
loopne
les
pop
in
push
mov
pop
or
fnstsw
movsb
dec
pop
fmul
mov
inc
mov
and
jp
out
lea
mov
inc
icebp
or
ds
mov
mov
outsb
aad
test
pop
cltd
addl
lret
sub
dec
push
sub
cmp
adc
mov
mov
jp
or
dec
test
outsl
lret
lds
sbb
sbb
std
inc
orb
scas
aaa
xor
jg
sti
sub
into
cmp
or
sub
cmp
ljmp
popf
ret
mov
inc
shl
fcoml
inc
scas
mov
sub
call
outsl
lea
push
insl
sub
push
cmp
jae
jb
jo
inc
pop
cmp
sbb
cwtl
xchg
xchg
sbb
adc
jns
fistpl
rorl
push
and
sub
xor
stc
roll
mov
push
push
cmc
mov
mov
pop
fisttpll
insb
test
pop
dec
or
rcrb
fbld
rcrb
loopne
xchg
out
lcall
jle,pn
add
mov
icebp
inc
dec
enter
push
aaa
jp
je
fldl
push
mov
in
fcom
fnstenv
push
into
mov
add
mov
jno
aaa
sbbl
xchg
out
dec
cmpsl
xor
xchg
ret
movsl
xchg
ret
inc
xchg
scas
cmpsb
ds
mov
gs
jne
mov
sub
push
mov
mov
jns
push
scas
pushf
scas
in
mov
push
or
loop
dec
adc
test
fnstcw
cmp
jbe
dec
jnp
test
imulb
and
xchg
aam
jp,pn
icebp
jp
andb
mov
or
test
mov
mov
gs
aam
cli
mov
xor
out
push
and
shll
push
push
xor
repz
mov
ljmp
cld
icebp
enter
outsl
ror
or
adc
adc
push
mov
inc
xchg
jg
into
bound
xchg
sub
jae
add
outsl
pop
jb
mov
adc
sbb
es
es
ret
or
test
fbstp
shrl
cld
in
and
imul
gs
test
xchg
dec
pop
das
mov
shrl
xor
or
jbe
dec
push
adc
jl
sbbb
movsb
pop
mov
lods
je
aam
and
fstpt
and
mov
and
and
andb
add
cs
repz
stc
rcrb
sbb
das
pop
inc
mov
sbb
jle
mov
mov
xchg
dec
push
outsl
leave
xor
xchg
rol
mov
push
mov
fnstcw
jb
dec
push
popf
mov
and
xorb
sub
into
inc
movsl
jo
loope
or
adc
out
push
inc
add
ss
cmpb
repz
inc
jmp
js
pop
sbb
xchg
nop
xor
inc
ss
jecxz
fidivrl
int
xor
pushf
dec
loop
shll
in
xor
jns
push
mov
int3
xor
dec
ret
push
xchg
push
pop
dec
out
xchg
push
inc
jae
repnz
pop
jmp
mov
test
ret
add
xchg
out
out
stos
or
mov
push
iret
test
sbb
bound
sub
push
in
rorl
adc
pushf
sub
mov
nop
jge
mov
cmp
cltd
fdivl
outsl
iret
in
movsb
xor
sub
pop
pusha
mov
xor
mov
out
fstpl
sbb
add
ljmp
jns
shrb
addr16
int
add
add
fwait
push
mov
sbb
outsl
xchg
sub
jp
iret
push
aaa
je
aaa
pop
add
insb
rolb
dec
aas
fisttps
jl
jbe
gs
popa
mov
mov
push
and
stos
lock
mov
int3
sahf
pusha
rcrl
xor
fs
sahf
in
inc
or
sub
out
dec
sub
bound
xor
add
stos
mov
sub
inc
sahf
rorb
in
movb
negb
pop
test
push
add
mov
ds
fdivs
push
jge
lds
mov
push
push
rorl
fdecstp
imul
cld
addb
pop
sbb
repz
xchg
rcrl
cmp
mov
xchg
lea
xchg
and
dec
js
mov
in
stos
push
mov
push
fldt
lock
xchg
cwtl
xor
xor
and
scas
sub
test
leave
orb
dec
sbb
test
mov
and
arpl
fisubl
inc
insl
pop
fisttpll
sahf
xchg
add
roll
xchg
lods
popa
scas
or
mov
int
mov
push
cwtl
fs
adc
dec
fnstsw
pop
lahf
ficomps
push
subl
or
loope
loopne
sub
test
repnz
imul
mov
pop
nop
imul
iret
pop
fmuls
add
sbb
xor
pop
push
cltd
mov
or
sti
clc
push
sbb
fsubl
mov
nop
xor
in
ljmp
fidivl
into
xchg
pop
and
ds
pop
pop
lcall
mov
or
jmp
fdivrl
xchg
or
and
xchg
testb
aam
sbb
pusha
sbb
mov
xor
xchg
js
jno
addr16
add
lret
pop
pop
pop
mov
cmp
xchg
js
mov
add
mov
cmp
xlat
lahf
push
out
fstl
data16
in
add
push
clc
mov
jle
inc
mov
adcb
ss
stos
jno
sbb
lock
movsbl
test
jno
cmp
mov
mov
cld
pop
sub
stos
das
stos
fs
jo
test
sbb
dec
lcall
mov
mov
mov
mov
hlt
mov
aaa
call
xchg
push
stos
dec
fnstcw
pusha
aam
shlb
jno
cwtl
jge
cli
xor
mov
ljmp
xor
pop
jp
xor
cmp
cmp
std
add
call
push
ja
sbb
xchg
or
ror
pop
push
xchg
cmp
push
and
sahf
push
pop
aaa
popf
dec
lahf
mul
cli
out
bound
mov
arpl
shl
js
mov
inc
add
in
aas
test
and
push
ss
outsl
inc
int
das
dec
ret
pop
cmpsb
outsb
add
xchg
out
fists
push
lret
xchg
lcall
pop
push
jo
sub
mov
repnz
xor
sbb
inc
cmpsl
insb
adc
jnp
jge
push
test
jae
lods
dec
ljmp
pop
push
out
inc
xor
mov
jne
ss
fisubrl
pop
xor
inc
movsb
adc
shll
lahf
xchg
fs
icebp
jae
insl
shlb
cmpb
icebp
xor
pop
test
adc
sub
popl
out
and
adcb
addr16
das
aas
ret
leave
inc
cmp
xchg
cld
cwtl
sti
cwtl
popf
movsl
mov
std
or
test
jnp
shr
mov
and
or
jns
call
cmp
fwait
jno
fcomps
and
mov
stos
movsl
pop
xor
das
in
jg
mov
cmp
dec
insl
pop
mov
dec
jns
pop
inc
or
rolb
jg
rcrl
or
or
xor
jb
test
pushf
cmpsl
sarb
and
mov
and
jo
inc
dec
ds
aad
push
movsb
rcrl
or
sub
dec
into
mov
es
push
pushf
jnp
jo
out
inc
out
push
pop
out
jmp
sbb
sub
inc
inc
pop
aam
adc
or
pusha
sub
cmp
ret
or
popf
jbe
ret
inc
xor
call
mov
dec
and
in
and
or
les
add
repz
cmc
pop
jne
adc
ret
xor
ret
lods
cmpsb
xchg
leave
sbb
push
jp
in
sbb
ret
mov
iret
xchg
cltd
mov
mov
lret
fmull
cmp
push
shrl
adc
mov
pop
sbb
pop
mov
sub
outsl
repz
cwtl
shll
mov
cmp
inc
inc
sub
imul
nop
mov
test
mov
mov
movsb
loop
outsb
or
mov
aam
adc
jmp
or
cmp
mov
jb
addr16
pop
and
mov
inc
and
sub
aas
fwait
incb
arpl
sub
push
std
or
add
dec
sbb
push
out
dec
stos
std
fdivl
mov
fbstp
addr16
cmp
test
mov
cwtl
mov
ret
into
shrb
mov
adc
inc
das
jp
and
sub
ficompl
fwait
pop
mov
hlt
imul
inc
imul
jge
rcl
popf
dec
pop
cmp
mov
xor
jo
arpl
jmp
mov
push
or
and
in
int
pop
dec
clc
into
nop
adc
cmpl
cmpsb
and
mov
gs
roll
pushf
aas
jg
je
mov
push
out
imul
xchg
mov
pop
mov
shll
ljmp
inc
sbb
mov
sub
push
and
jne
push
sahf
jle
mov
stc
cmp
inc
adc
adc
pop
movb
jecxz
in
jno
jmp
nop
adc
pop
popf
xchg
mov
inc
adc
int3
dec
mov
mov
mov
sub
jbe
maskmovq
imull
sub
or
jnp
in
dec
sbb
fsubs
jno
xorl
cmpsl
push
insl
fnstsw
mov
sti
inc
popf
or
out
je
push
adc
and
lds
arpl
add
aaa
repz
jl
sahf
out
pop
jle
xor
cmp
add
sbb
int
dec
je
stc
fisttpll
jg
idivl
cmp
and
pusha
mov
mov
mov
mov
mov
add
or
mov
lods
dec
test
jge
sub
lret
push
fucompp
xorb
cmp
out
cmp
push
xchg
subl
pop
clc
push
popa
mov
push
arpl
adc
mov
ljmp
stos
mov
adc
pop
xchg
fistpl
lahf
cmp
aas
lds
pop
dec
pop
push
xor
push
inc
mov
lods
jmp
sub
rcll
mov
rorl
xor
push
clc
movsl
cmpsl
dec
push
xor
sub
inc
push
rcr
mov
mull
dec
sbb
test
or
mov
dec
sbb
aad
sbb
mov
mov
cli
test
std
dec
cmp
sub
mov
jae
lea
lock
mov
mov
xor
fcmove
out
jno
aam
add
mov
adc
pop
movl
aam
and
insl
leave
mov
push
in
mov
in
add
stc
ret
cmc
subb
mov
popa
popf
ljmp
cli
inc
cltd
aaa
rclb
loope
ljmp
jp
jns
js
mov
repnz
mov
and
clc
cli
jno
jle
movsb
bound
loopne
jo
mov
push
push
shll
mov
jmp
cli
imul
push
subl
lods
stos
add
jmp
ret
stos
ret
rcll
jge
cmpsl
popf
sbb
ja
mulb
jno
lret
push
cmc
and
xor
pusha
imul
mov
enter
mov
dec
push
xorb
jne
shll
mov
xchg
call
dec
sub
ja
xchg
cmp
lods
arpl
stos
cs
pop
mov
jmp
mov
pushf
movsl
pop
sbbl
jl
mov
dec
jg
in
cmc
push
test
jle
xor
jp
xorb
rcrl
push
and
inc
sub
add
xlat
sti
gs
aaa
mov
xchg
jmp
jmp
fmul
fstpt
adc
addr16
sub
cmpsl
out
jmp
pop
or
mov
loopne
mov
aad
pop
xor
push
jbe
sbb
mov
push
cmpsb
rcll
dec
xor
xlat
adc
out
and
push
xor
xchg
push
xor
mov
cmc
xlat
fmul
adc
mov
jae
and
fidivs
call
imul
push
mov
das
pop
xchg
mov
jns
xchg
mov
lods
add
repnz
iret
into
repz
ror
call
ret
into
das
imul
aas
adc
das
shrb
pop
test
mov
fidivs
xchg
dec
jnp
lods
push
and
ds
cmp
pop
mov
imul
insl
nop
mov
mov
aas
and
dec
mov
lcall
adc
xchg
int3
pop
jbe
mov
lret
jo
adc
int
mov
inc
adc
xor
cmp
or
movsb
mov
in
icebp
cmpsl
mov
enter
mov
in
test
mov
pop
addl
xchg
mov
outsl
clc
fisttpll
sbb
mov
hlt
mov
cwtl
sbb
add
stc
out
mov
aam
xor
inc
or
in
sub
sbb
cmc
mov
sbb
mov
push
jo
push
push
pusha
lds
jnp
xor
mov
and
push
pop
outsl
adc
invd
rcl
test
sub
dec
and
pop
clc
rclb
adc
xchg
or
xchg
mov
mov
stos
leave
jge
fwait
sbb
daa
fidivrs
sbb
outsb
sahf
xchg
push
scas
loopne
jl
es
in
sub
lock
sbb
cmp
pop
cltd
fcoml
into
adc
add
or
lcall
add
mov
lret
scas
rcll
pop
push
sub
mov
mov
fcmovbe
cwtl
sub
aam
sub
xchg
ljmp
pop
fs
aaa
sub
loopne
pop
push
ja
fisubl
dec
xchg
mov
dec
and
xchg
es
jg
xchg
jne
push
mov
or
add
fsts
aam
push
jne
xchg
inc
shrd
adc
xor
ja
jmp
xor
fcomi
aam
xchg
jne
movsb
cmp
fwait
lret
sbb
aad
push
loope
insb
cmc
jbe
testb
mov
push
push
mov
jle
leave
mov
pusha
mov
inc
push
xchg
xchg
pushf
mov
or
sbb
dec
xlat
mov
or
mov
push
aaa
or
sub
outsb
fsts
sbb
mov
rcll
mov
scas
lods
loope
aaa
popf
or
lock
pusha
mov
mov
fcmovu
int
dec
jmp
or
sub
pop
and
notb
lahf
movsl
dec
jne
xchg
cld
in
adc
out
cmp
sub
arpl
or
push
pop
inc
xchg
int3
inc
sub
add
fwait
push
and
cmpsb
clc
sti
fidivl
mov
aad
movsl
lret
mov
arpl
and
jno
add
mov
int
ljmp
inc
cmp
add
mull
js
jle
pusha
push
loopne
cltd
in
gs
aam
dec
in
fstpt
outsb
test
fucom
jmp
push
ss
pop
mov
mov
sub
sahf
jmp
cmp
imul
jb
add
or
push
add
ljmp
adc
xchg
rcr
mov
stos
push
sbb
dec
into
fisubrl
mov
pop
ficoms
mov
xor
test
pop
icebp
xchg
mov
loope
jo
push
data16
and
fisubs
xor
and
jl
shrb
pop
sti
pop
enter
cmp
sub
shll
add
pushl
subb
push
imul
xchg
nop
jg
lret
or
sub
lea
insl
push
xor
imul
mov
aam
cli
popa
mov
mov
add
inc
mov
dec
fisubl
xchg
jb
arpl
push
add
push
dec
pop
jnp
or
jp
jne
lret
jmp
adc
jge
in
pop
inc
mov
mov
cmp
push
pop
jg
sub
push
xlat
das
jbe
sbb
and
inc
cmpsb
push
popf
mov
push
cmp
push
sub
adc
popa
jb
faddl
jmp
lcall
popa
sbb
jb
dec
test
add
in
push
add
xchg
adc
out
xchg
ljmp
sysexit
push
pop
jecxz
sub
call
mov
repnz
mov
mov
inc
lret
scas
push
pusha
out
and
fwait
and
pop
push
ljmp
xor
lods
fidivs
shlb
enter
push
push
pusha
enter
or
sub
add
add
add
inc
mov
add
add
dec
mov
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
