call
adc
inc
loopne
inc
adc
orl
inc
sar
xor
inc
sbb
sar
pusha
call
jnp
inc
add
add
cmp
pusha
and
xor
add
and
inc
xor
inc
outsb
jg
pop
push
sbb
sub
add
rol
pop
or
fldl
sub
adc
add
pop
xchg
addl
jg
xor
and
adc
pushl
xor
addl
roll
rcll
mov
lahf
xor
sarl
push
add
sbb
push
addl
lahf
std
cmp
sbb
adc
add
bound
push
and
or
pusha
push
inc
inc
orb
add
or
jo
inc
xorl
negb
cmpb
dec
subb
add
lcall
int
in
pop
cld
inc
cwtl
pop
pushl
in
mov
sbb
add
stos
jmp
mov
lcall
xor
test
cwtl
pushf
xchg
incl
leave
sub
movsl
add
push
sti
out
pushl
pop
rcrl
xchg
sub
addl
adc
mov
or
xchg
in
fdivs
cmp
sub
in
pop
add
or
cmpsb
push
mov
pop
adc
xor
xchg
add
jg
add
inc
cld
dec
pop
mov
lods
fmul
push
adc
out
outsl
sub
xor
mov
outsl
outsl
bound
add
add
insb
daa
mov
int3
rcrb
mov
inc
fistpl
fiaddl
insb
adcb
fldcw
push
sub
decl
inc
lods
ud1
out
add
out
and
ljmp
add
pop
or
add
mov
nop
ljmp
jbe
fucomp
mov
inc
adc
stos
mov
int3
pusha
hlt
cmp
fsubrl
incl
xor
add
xor
in
out
cmp
inc
xchg
loope
loopne,pt
xchg
cmp
add
mov
icebp
mov
add
mov
mov
fs
jo
in
jmp
aas
add
sub
les
lock
daa
add
add
sub
ja
shrb
add
xor
xor
ljmp
shr
add
add
push
shlb
sbb
out
xor
jge
cld
popf
or
cltd
add
daa
les
adc
loop
mov
and
mov
repz
sub
cmp
insl
divb
or
add
loopne
std
add
pop
jg
add
inc
ljmp
sbb
inc
inc
pop
outsb
mov
push
in
push
push
test
push
shll
ljmp
daa
ss
adcb
dec
xchg
iret
fildll
sarb
repnz
rclb
je
sbb
sub
add
mov
test
movl
pop
clc
jne
testb
or
ljmp
adc
jns
dec
cmpsl
adc
xchg
or
dec
xchg
or
lock
fisttpll
or
fimuls
lcall
sub
mov
addr16
lcall
dec
or
jmp
xchg
jo
xor
std
test
dec
ficoml
sub
add
push
mov
push
movsb
or
sbb
or
push
sbb
or
add
or
ret
add
sbb
cmovne
mov
fisttpll
sub
jmp
push
inc
or
mov
mov
mov
stc
imul
xorl
out
jmp
add
add
cmp
mov
lods
pop
aaa
and
inc
add
push
mov
pop
xchg
inc
rolb
icebp
stc
and
or
rcl
movsb
mov
lods
add
xlat
inc
andl
dec
fbld
shr
xor
xchg
insb
xchg
push
popf
pop
out
inc
fdivr
aas
add
clc
ret
xor
int3
sbb
push
cmp
xorb
jmp
aaa
aad
out
add
fs
cs
rolb
int
mov
push
movsb
mov
ja
lock
add
add
movsl
inc
rcrl
xor
int
loope
and
mov
sub
loop
incb
mov
cmpsb
cld
out
cmp
cmp
out
xchg
lahf
add
out
mov
pop
add
jmp
jge
add
arpl
mov
mov
js
iret
pop
xor
mov
pop
jl
xor
dec
sub
js
and
fldt
ljmp
loope
and
loopne
mov
xlat
popa
call
nop
shr
pusha
inc
pusha
dec
push
les
cld
push
cmc
fsubs
pop
sbbb
jp
xor
test
add
jecxz
sub
push
nop
cmp
int
sahf
push
stc
add
push
dec
testl
mov
add
add
test
aad
pop
jb
mov
xchg
or
or
mov
addb
add
mov
jmp
icebp
pop
dec
adc
rcrl
ds
ja
in
adc
hlt
inc
push
popa
incb
pusha
or
out
dec
adc
push
push
outsl
dec
cmpsl
loope
pop
push
cmp
in
jle
data16
call
ja
sbb
lods
pop
pop
xor
or
push
bnd
push
and
fldenv
fisttps
and
pushf
xor
test
jg
data16
or
xchg
sub
and
pop
test
das
cli
mov
sbb
mov
aaa
adc
mov
add
xor
lcall
jg
jmp
and
push
push
sub
dec
mov
adcb
or
out
cmp
push
rorb
mov
mov
roll
mov
push
out
jnp
addr16
in
adc
mov
xchg
mov
lcall
nopl
mov
and
pop
mov
sbb
sbb
jae
add
lcall
push
adc
add
and
je
sbbl
call
or
mov
xlat
stos
xchg
add
dec
dec
jnp
mov
repz
adc
addb
xor
add
outsl
lds
cmp
mov
and
out
clc
mov
cmp
es
xor
xchg
cmc
jmp
scas
ja
inc
mov
jg
subb
out
jnp
mov
mov
or
and
call
and
adc
ds
push
incl
arpl
fiaddl
fildl
mov
jo
and
sbb
call
daa
cld
adc
pop
inc
cmp
dec
jmp
fcmovb
nop
xchg
cld
or
push
add
adc
cmpsl
cmp
inc
fimuls
adcb
rorb
sbb
loope
negl
loopne
fs
sbb
push
loope
rorl
incl
or
jecxz
ret
and
sti
dec
xor
mov
inc
pop
jg
enter
or
dec
scas
divb
in
or
fsts
xor
clc
sub
dec
ret
pop
jb
shll
pop
mov
shl
sbb
mov
and
inc
cwtl
cmpsb
xchg
fstps
add
mov
fimull
push
movsb
out
mov
pushl
add
hlt
sbb
xchg
or
repz
rorb
std
pop
cmc
stos
incb
addl
xorb
cwtl
cmp
sbb
push
fldl
jmp
or
loop
out
lcall
loopne
nop
fiadds
inc
addb
in
pop
push
in
mov
out
aad
movl
test
jmp
jmp
sbb
ret
movsb
pcmpgtd
lret
adc
ret
inc
sbb
icebp
and
dec
mov
rcrb
dec
lds
ret
adc
push
loope
and
pusha
dec
out
subl
sbb
pop
inc
or
shll
loopne
repnz
mov
mov
mov
aas
dec
mov
pop
std
or
sbb
xor
test
idiv
out
mov
adc
mov
fs
mov
pop
push
ja
xchg
or
ljmp
pop
jge
xor
loopne
loopne
inc
outsb
sbbl
filds
pop
mov
cld
dec
aaa
mov
shlb
aad
add
mov
jne
mov
xor
rorb
push
add
decb
lods
lock
popa
xchg
sbb
cld
push
cmp
add
pop
popa
sub
inc
adc
fdivs
rclb
ret
adc
int
add
cltd
call
add
ficomps
popa
addb
mov
add
push
inc
inc
sbb
xor
xor
pop
jp
dec
imul
pushf
pusha
and
repnz
lcall
jl
push
adc
fimuls
push
popa
sahf
cmpsb
xchg
nop
jns
push
nop
mov
lock
aaa
incb
dec
rolb
aas
lret
mov
rorb
cmpsl
or
and
aad
sti
sar
inc
push
cmp
pop
sub
es
jg
and
pushf
sub
ljmp
std
hlt
scas
sbb
sub
add
fbstp
aas
jns
xchg
add
stos
add
in
repnz
inc
sar
loop
mov
push
cld
mov
add
mov
xor
clc
and
enter
cs
push
movsb
je
adc
lods
ja
cmpsb
lds
xchg
cwtl
or
stos
decb
ret
mov
leave
fldenv
jo
pop
xor
and
fcmovnu
fbld
sbb
add
mov
add
lock
clc
pop
call
and
add
adc
pop
sbbl
or
rcll
jl
mov
lods
jp
mov
or
std
stos
mov
dec
pop
mov
mov
jns
call
or
lahf
mov
inc
lcall
js
inc
cmpsl
mov
dec
jle
mov
add
add
fidivrl
push
adc
push
and
push
xlat
jmp
pop
push
daa
push
ret
push
pop
inc
push
push
pusha
and
rorb
adc
pop
test
leave
decl
or
xor
mov
push
xor
jae
es
sub
cmpsl
jg
ja
fsubl
lock
sub
inc
sarb
pushf
sub
sub
enter
aad
pop
std
fistps
mov
add
sub
add
mov
jmp
add
nop
je
inc
jle
loopne
adc
xchg
add
and
add
insl
mov
adc
jg
clc
dec
mov
mov
mov
aas
jp
mov
add
dec
cmp
mov
sbb
insb
fisttps
or
push
insb
push
sub
add
cwtl
hlt
xor
dec
sbb
rorb
rolb
sbb
fs
xor
roll
in
add
adc
mov
mov
push
dec
cltd
cmp
jno
ja
mulb
fmull
add
je
rcll
add
incb
sbb
pop
fsubl
das
clc
pop
cmpsb
mov
jb
mov
xor
jge
icebp
dec
push
mov
std
and
iret
repz
pop
push
adc
mov
mov
inc
out
cmp
pop
mov
pushl
loope
lret
mov
xchg
inc
dec
add
jg
xor
jge
add
push
add
lret
and
jnp
decl
dec
aam
test
in
rorl
dec
dec
mov
sarl
test
jmp
loopne
xor
ffreep
shrl
das
sar
cmp
sbb
pushf
add
mov
loop
push
mov
ljmp
pop
icebp
jg
inc
out
mov
pop
push
adc
sbbb
andl
push
mov
adc
pop
in
sbb
fbstp
jl
push
pop
loope
mov
add
lds
cmp
and
je
lcall
push
ret
jle
jecxz
addl
sbb
loop
xor
es
lods
mov
add
imul
mov
pusha
popf
sbb
dec
das
cmp
or
repz
mov
aas
dec
popa
out
push
pop
add
mov
sarl
inc
adc
push
mov
or
ret
out
mov
mov
mov
orb
pop
push
inc
jae
xchg
push
outsl
aam
push
es
filds
or
cltd
cs
ljmp
out
and
decl
jp
push
dec
ja
inc
mov
jp
and
aas
outsl
inc
and
imul
pop
xor
dec
xchg
in
andl
scas
call
dec
pop
or
xchg
aas
ret
outsb
jmp
xor
les
inc
sbb
fidivrs
xchg
inc
loop
or
addl
mov
int
aas
loope
pop
and
sarl
pushl
mov
inc
mov
out
xchg
add
sbb
mov
shll
je
push
add
lret
push
nop
jns
push
incb
aaa
jl
ljmp
inc
add
jnp
push
sbb
or
jno
ss
pop
add
mov
pop
xor
stos
loope
add
mov
repz
inc
aam
pop
push
pop
scas
add
and
jecxz
mov
push
push
or
lods
popa
dec
mov
cmpsb
or
jb
pusha
cmpsl
lds
mov
dec
aaa
hlt
sarl
outsl
ror
andb
mov
roll
jecxz
mov
stos
jl
push
cwtl
cs
hlt
xchg
sbb
add
mov
mov
aas
mov
cmp
add
fdivr
insl
insb
imul
add
mov
nop
ja
jns
xor
ret
inc
imul
sbb
cmp
incl
jae
gs
adc
add
mov
inc
fs
sbb
jg
movsb
xchg
inc
dec
fldenv
dec
jae
ret
pop
mov
jmp
jge
loop
loope
inc
push
mov
pop
jle
cld
test
dec
and
or
push
ja
sub
pop
sub
jmp
fimuls
mov
test
xchg
clc
dec
in
xchg
jmp
cld
xor
mov
xchg
cmp
mov
push
add
pop
xor
or
jbe
ss
pop
hlt
inc
push
add
push
scas
movsb
pop
push
inc
stc
dec
subb
push
sbb
movsl
ja
mov
out
pusha
sarb
sub
inc
mov
inc
popf
lcall
sbb
sti
or
in
ficoml
push
decl
xchg
faddl
mov
inc
lods
mov
xchg
adc
loop
mov
push
ret
je
push
push
enter
cmpsl
cmp
jo
inc
stc
jmp
dec
mov
sbb
mov
adc
shll
sbb
add
mov
sets
sbb
clc
ret
cmpsl
and
mov
insl
popf
pushf
inc
jle
add
mov
xor
add
mov
push
push
mov
mov
mov
pusha
add
outsb
pushf
inc
xchg
out
stos
ds
testl
mov
fiadds
addb
arpl
adc
add
fwait
andl
sub
add
out
call
data16
aam
fldt
push
cld
xchg
imul
nop
ja
push
dec
testl
cmp
push
mov
dec
out
aam
testb
xchg
inc
ret
adcl
xlat
iret
fistps
and
mov
sbb
inc
push
fildll
mov
and
ljmp
fldl
popf
adc
repnz
movsl
out
incl
mov
adc
push
out
adc
inc
cs
adc
xorw
jl
bound
xchg
mov
or
mov
xlat
test
outsb
cmpsl
data16
popa
add
insl
out
loope
or
das
adc
cld
js
and
add
pop
lock
in
push
cmp
and
lret
test
jae
mov
ja
ja
andl
lock
fidivl
xchg
cmp
adc
lret
mov
push
cmp
sbb
jl
cmp
or
inc
xchg
push
add
js
add
add
inc
das
and
sbb
xor
mov
ficoml
mov
xchg
test
adc
add
fstpt
fadds
add
push
mov
mov
movsb
inc
add
outsb
cli
cltd
dec
pop
ds
fstpl
jle
add
scas
jp
adc
adcb
je
sbbb
loop
push
or
inc
and
dec
aad
icebp
repnz
fucomp
xor
pop
pop
je
xchg
test
inc
shlb
loop
div
mov
fld
ret
das
jbe
scas
pop
std
pushl
add
fwait
mov
adc
lock
out
int
aad
cli
push
out
adc
add
mov
sbbb
mov
int3
push
mov
push
push
cli
inc
adc
out
cwtl
or
in
outsl
push
fisubl
cmp
sbb
cld
inc
sti
clc
pop
mov
mov
insb
andl
cs
aas
mov
fadds
xchg
sbb
pop
jecxz
pcmpgtb
shlb
les
popa
hlt
bound
js
test
push
adc
sbb
aas
sbb
loopne
jle
stos
add
add
fsubs
hlt
test
lret
sub
in
xchg
aas
outsl
pop
push
test
add
fbstp
jns
leave
mov
push
data16
ds
or
or
bound
push
cwtl
lahf
subl
push
lock
in
incb
pop
mov
je
aas
out
and
or
test
xor
adc
out
rcrl
jmp
mov
jl
jle
loope
mov
test
movsl
pop
xor
jnp
int3
scas
ja
adc
scas
in
push
sub
fidivrl
inc
mov
in
jnp
in
mov
shll
inc
repnz
xchg
test
add
jg
jle
test
add
cmp
scas
xor
fistpl
ret
add
jb
lods
cmp
imul
xchg
jg
push
ret
imul
jb
rorl
in
sarl
xor
sub
fsubp
xor
hlt
fstpt
add
mov
in
push
add
jno
dec
mov
in
fistpll
leave
add
sub
or
inc
sub
fnstcw
rcl
movsl
inc
inc
sahf
xchg
into
test
cld
inc
push
inc
jge
sub
pushl
add
push
or
lock
iret
or
add
pushl
adc
int
mov
sbb
adc
push
icebp
jae
lock
ret
insb
xlat
sub
adc
fs
movsb
push
add
dec
aaa
xchg
mull
rorb
push
rep
subb
in
pusha
cmc
pop
rol
pop
je
gs
scas
out
mov
out
pop
mov
test
add
cmp
in
cltd
or
and
push
mov
fdivr
inc
push
cltd
add
pop
inc
out
inc
shl
in
and
or
sub
test
or
fistps
mov
in
mov
cmp
nop
mov
scas
xchg
data16
ret
sbb
aas
scas
pop
mov
fisubrs
sbb
fadds
out
gs
and
add
popl
movl
mov
jl
mov
xor
movsl
pop
add
jle
add
mov
subl
call
insb
jle
enter
mov
in
fists
add
xchg
sub
pop
push
aas
mov
sahf
repnz
cmp
sub
rorb
and
mov
add
das
push
aas
pop
fldl
adc
xor
ret
xor
mov
hlt
cmp
jbe
cmpsl
testb
call
jl
inc
pop
lods
ret
pop
push
aas
ss
loop
add
mov
or
in
repnz
jecxz
add
adc
add
inc
mov
jl
xchg
add
call
jb
or
push
jg
aas
loop
mov
ret
xor
xchg
jg
push
xlat
dec
xor
or
outsl
popf
sub
mov
sub
lock
mov
xor
jl
fsub
in
mov
addl
push
add
add
pop
push
push
sub
jecxz
jb
push
js
sahf
in
ljmp
aaa
mov
daa
inc
cmp
jo
add
stc
lret
adc
jns
and
sbb
inc
mov
addl
std
add
or
outsl
sbbb
lds
movsl
dec
roll
sti
bound
xchg
xor
lret
imull
mov
sub
lret
adc
mov
cmpsl
movsl
hlt
and
mov
add
idiv
add
inc
icebp
bound
and
add
pop
and
test
popf
fistps
add
ss
jg
imul
push
sub
mov
lods
in
mov
or
divb
into
popa
inc
stos
inc
inc
cmpsb
lahf
sbb
add
adc
ret
out
cmp
lds
ret
shl
sub
push
cmpsl
cmp
cwtl
loopne
sbb
push
push
xor
ljmp
jns
mov
pop
pop
inc
into
lock
std
mov
dec
out
xor
inc
or
push
mov
incl
subb
pop
or
or
mov
roll
or
addl
mov
mov
sbb
mov
mov
cmpb
push
cmp
je
inc
dec
clc
call
pushf
or
arpl
push
xchg
arpl
push
lods
mulb
xchg
xor
jns
inc
cmpsl
fs
mov
inc
or
xchg
xchg
inc
push
cmp
mov
shlb
fstpt
test
inc
dec
or
sbb
mov
cmpsb
mov
jo
daa
push
test
sub
mov
inc
dec
inc
xor
mov
mov
jno
xchg
cs
mov
inc
ficomps
sbb
nop
sub
adc
jo
iret
das
movsl
jecxz
xlat
into
inc
jo
int
int
dec
cld
inc
insl
pop
mov
das
xchg
andb
adc
push
push
mov
jge
push
add
adc
je
or
push
mov
or
or
call
adc
xchg
addb
push
dec
loop
dec
xor
stos
pop
xor
jnp,pt
lock
mov
arpl
dec
sahf
jno
push
cmp
imul
mov
adc
jne
pop
sub
mov
nopl
inc
mov
shrb
sbb
add
adc
lahf
inc
aas
sbbl
mov
loopne
add
ljmp
scas
movsb
sub
int
icebp
sub
cltd
inc
out
push
cld
push
lcall
sbb
lods
stc
mov
pushf
sti
nop
outsb
loope
mulb
cmpsl
loopne
jl
shll
shll
dec
xor
test
mov
cmp
lahf
jl,pn
into
dec
dec
and
jp
insb
adc
jmp
ljmp
cmp
call
sub
jle
bound
sub
sub
jg
push
push
test
cvtps2pd
cmp
push
or
mov
inc
dec
call
cmp
fwait
repnz
iret
mov
pop
add
je
jle
adc
sbb
pop
adc
roll
subl
adc
fmuls
jmp
push
out
nop
std
imul
stos
mov
ret
pop
jne
in
inc
gs
stos
push
sti
ret
inc
mov
xchg
or
ret
out
sar
dec
pop
push
add
xchg
pop
ret
aaa
lcall
add
xor
fidivrs
sub
fnstsw
jle
ja
jl
mov
cmp
add
or
xor
add
imul
popf
inc
inc
loopne
mov
jl
push
sub
inc
xchg
ret
std
aad
sti
jmp
data16
mov
and
pushf
addr16
in
and
or
pusha
add
fdiv
pusha
cld
pop
mov
inc
rorl
lea
outsb
mov
ja
sbb
scas
pop
or
mov
add
decl
ficoms
inc
pop
je,pn
mov
mov
aam
movb
clc
or
add
sub
jmp
ret
popf
aas
rclb
scas
push
add
push
sbb
cmp
andb
xor
mov
dec
push
ljmp
adc
pop
sahf
lods
inc
loopne
cmp
jmp
test
mov
pop
lods
in
add
fistpll
add
inc
adc
rcll
repnz
pop
cltd
mov
daa
add
dec
imull
mov
insl
aas
orb
jae
push
loopne
imul
out
repz
dec
mov
sub
icebp
mov
fwait
sub
sbb
movsl
mov
in
push
jns
mov
out
arpl
mov
pushf
xchg
add
aaa
inc
test
sarl
cli
cmp
sqrtps
xchg
xchg
pop
rcrl
push
ss
stos
add
fcoms
mov
adc
inc
lea
jnp
xchg
lods
cmpsw
imulb
add
xchg
call
mov
cmp
push
subb
cli
pusha
out
lods
push
jp
fisubl
loopne
shlb
pop
nop
push
sub
lock
or
pop
insb
xor
imul
in
cs
xor
xor
cmp
iret
ret
xchg
scas
cmp
and
iret
imul
iret
aaa
add
jae
mov
iret
and
and
mov
or
outsb
mov
mov
shrl
mov
cmc
icebp
stc
xor
xchg
mulb
pop
add
xor
popa
cmp
xlat
hlt
imul
jb
cmp
add
fwait
data16
inc
pop
int3
jecxz
mov
es
ret
push
push
mov
aas
sbb
lea
mov
sbb
fisubrs
test
ss
repnz
pop
sbb
push
and
scas
adc
adc
add
ret
mov
jmp
nop
ror
dec
xor
mov
inc
mov
icebp
les
lcall
lods
inc
and
and
cld
add
outsb
movsl
and
inc
add
adc
js
sub
xchg
out
and
loope
leave
fisubrs
rorb
dec
cmp
out
sbb
xchg
adc
test
add
xchg
ret
fwait
insl
mov
pop
pop
mov
mov
dec
sbb
mov
xchg
inc
fucomip
das
mov
push
pushl
jg
loopne
or
leave
test
cmpsb
or
cmpsb
subl
pop
add
xor
or
leave
and
jmp
pop
inc
inc
mov
fsubs
clc
lods
add
dec
sbb
or
mov
adc
cmp
fsubr
push
or
inc
adc
mov
xor
xchg
scas
inc
mov
add
dec
xchg
push
jp
fcmovnbe
jo
rolb
out
add
std
xorb
mov
shrb
pop
cmc
xchg
lahf
inc
pusha
sahf
rcll
cmc
dec
add
sbb
sbb
xor
xchg
sub
inc
fimuls
mov
daa
stos
jnp
pop
push
add
adc
call
cmp
loope
lock
push
mov
cmp
or
mov
dec
popf
fimull
cli
xchg
int
dec
imul
in
outsl
icebp
bound
lods
push
pop
aas
lock
lock
insb
lock
jle
sub
and
ljmp
mov
test
in
inc
daa
inc
clc
add
lea
push
fisttpll
pusha
fsubs
push
pushf
or
push
inc
aas
pop
fidivrs
ficoml
mov
or
add
loop
aas
inc
popf
xchg
repz
add
mov
aas
push
mov
mov
fldcw
jp
out
bound
out
pop
notw
mov
das
mov
add
into
pop
lods
jmp
test
fldenv
or
push
insl
jo
mov
and
adc
aaa
test
popa
dec
cs
pop
clc
and
rorb
add
stc
inc
jns
dec
popf
lcall
mov
out
ret
adc
ds
lock
push
loopne
fists
add
cld
xchg
push
pop
rorl
in
pop
rclb
shll
adc
addr16
repz
stos
and
ja
outsl
loop
jl
test
dec
lock
push
into
push
mov
sbb
out
outsl
mov
lret
xor
and
cmc
inc
add
mov
sbb
jg
inc
into
cmp
sbb
aad
mov
call
sbb
test
imul
xchg
in
into
push
pop
cli
dec
dec
mov
mov
or
mov
or
inc
xchg
mov
fisttpl
sbb
jo
pushf
push
cmp
jl
add
scas
mov
mov
inc
jno
test
push
lret
mov
sbb
pop
aam
sbb
jo
xor
mov
jns
xchg
fidivl
or
push
test
jle
movsb
fadd
leave
jle
shrb
stc
cli
push
and
arpl
mov
push
mov
push
jg
adc
pop
fmuls
lods
sbb
sbb
les
outsl
das
jg
mov
pushf
mov
mov
icebp
addl
mov
pop
or
pop
in
push
aam
push
adc
sub
ss
insb
push
mov
je
or
inc
fisubrs
inc
popa
pop
push
dec
or
mov
jle
fidivrl
sub
loope
and
leave
adc
nop
xor
mov
sbb
outsl
std
clc
js
jbe
aad
add
adc
frstor
mov
movsb
xlat
inc
push
in
fwait
mov
xchg
sti
jne
sbb
lea
insl
fisubs
adc
clc
add
icebp
enter
sbb
jecxz
push
cmpl
xchg
dec
xor
fdivrs
inc
loopne
lahf
dec
rclb
hlt
jo
sub
fwait
sbb
add
stos
xor
movsb
fwait
or
lods
iret
aaa
or
cmpsb
test
xlat
fildll
dec
addl
or
jns
push
add
pop
push
in
or
inc
fildl
jnp
jne
and
xor
iret
cwtl
mov
sub
adc
shll
inc
into
xchg
xor
or
fimull
movsl
sbb
pusha
clc
dec
sbb
cmp
loop
push
inc
inc
in
xlat
sub
push
test
jmp
notb
jb
bound
and
mov
pop
cmp
xlat
sub
push
mov
mov
xchg
sub
les
sub
fs
add
xchg
sub
dec
ffree
push
mov
lret
loope
icebp
outsl
loopne
dec
mov
push
pop
inc
pushf
mov
inc
sub
cmp
and
xchg
stc
ret
push
mov
dec
and
sub
fldt
pop
cmp
das
hlt
insl
mov
push
jne
subb
in
rolb
cli
mov
push
push
jge
scas
jo
test
cs
add
dec
sbb
dec
cld
and
sub
divl
adc
imul
sub
jp
push
and
add
sbb
pop
jbe
ds
imul
int
xchg
pop
push
add
xchg
dec
rclb
stos
mov
jle
xchg
sbb
push
call
inc
aas
cli
pop
pop
mov
pusha
or
popf
lret
aad
fdivrs
aas
ret
push
es
daa
nop
pop
imul
test
cmp
rolb
fs
mov
cmp
jns
sub
sub
out
int
pop
sub
push
popa
mov
addb
test
outsb
pop
clc
xchg
cld
sbb
xchg
enter
add
push
fisttpll
inc
shrl
jle
pushf
inc
les
mov
mov
mov
mov
in
addl
subl
repnz
fisubrs
test
cld
mov
hlt
mov
dec
mov
sub
fsubrs
and
dec
cmp
test
mov
std
jg
outsb
or
xchg
and
and
dec
pop
add
fiadds
jle
aam
jecxz
and
aas
out
inc
and
dec
enter
sbb
adc
mov
cmpb
lahf
dec
scas
dec
in
incl
push
or
xor
call
enter
push
push
popf
fadds
pop
add
push
outsb
xlat
or
jnp
in
push
inc
mov
mov
or
sub
jne
xor
decl
out
lcall
daa
adc
cld
int
cmc
jns
or
or
mov
jmp
or
mov
lcall
pop
pop
enter
loope
pop
mov
and
adc
xor
xlat
stos
call
push
sub
push
jmp
loopne
push
fstpl
aas
das
or
ret
cmp
push
adcb
xor
pop
fstpt
popa
arpl
mov
ss
mov
nop
data16
mov
clc
xlat
clc
mov
pop
lea
or
aad
pop
mov
rolb
fnstcw
js
inc
in
in
es
push
mov
push
lret
dec
arpl
xchg
jge
mov
xor
xchg
add
ds
out
sbb
xor
dec
stos
lcall
pusha
add
xchg
lea
mov
roll
pop
enter
hlt
mov
jns
hlt
push
adc
and
push
jecxz
cltd
xchg
add
add
and
mov
subl
ljmp
jg
push
mov
mov
pusha
out
cld
cmpb
testb
out
push
lret
ljmp
pushf
jl
test
popl
scas
adc
insb
les
lcall
jo
jecxz
or
sbb
lock
or
jae
jle
mov
rcll
mov
jnp
add
mov
out
pushf
rorb
incl
mov
push
dec
sub
inc
mov
mov
sbb
mov
sbb
pop
jmp
jbe
testl
scas
pop
out
mov
mov
fdiv
aaa
dec
sahf
dec
insb
pop
adc
add
inc
clc
dec
adc
dec
ja
pop
ja
jne
jg
sbbb
mov
or
mov
sub
and
mov
iret
insb
cmp
mov
adc
cmp
lea
nop
out
cmp
aam
ljmp
adc
aam
push
je
sbb
fsub
pop
loop
xchg
sub
test
mov
lock
cltd
add
sbb
inc
jmp
sbb
loope
push
push
test
mov
and
cmp
push
insb
push
fisubl
or
in
cmp
je
pusha
push
xchg
xchg
jae
test
mov
xlat
fwait
fwait
inc
jnp
push
push
rorb
jg
ffree
lods
test
jle
mov
mov
iret
dec
cmp
push
mov
jae
or
and
sbb
pushf
cmp
xchg
jno
out
add
roll
jo
mov
push
xor
popa
adc
ret
pop
aam
ss
pusha
and
dec
inc
mov
adc
inc
into
push
xor
adc
js
inc
lahf
ljmp
push
test
push
in
ds
inc
bound
sarl
mov
mov
cmpsl
jle
mov
cmpsb
mov
jle
sbb
push
or
mov
loope
adc
cmpsb
rcl
pop
xchg
test
pop
jg
aas
jae
cmpsb
inc
jge
xor
pop
insl
sbb
repnz
jg
inc
mov
adc
shrb
push
add
sbb
push
addr16
stos
add
push
xorb
loopne
adc
data16
push
cmp
adc
cld
mov
ljmp
outsl
imul
leave
fsubs
in
dec
test
shrl
hlt
xchg
adc
push
lahf
and
test
push
sub
inc
sahf
popf
enter
adc
xor
call
pop
sub
fmuls
arpl
ret
push
cmp
cmpsl
add
sbb
xchg
les
leave
pusha
xor
ficoml
or
int3
pushf
lret
roll
mov
ret
sub
push
cld
das
popa
incb
enter
xchg
pop
jle
outsl
add
xchg
popa
jge
idivb
add
and
cmp
mov
sub
or
into
and
cli
or
push
xor
and
cli
movsl
imul
pop
mov
in
sbb
pop
rcrl
mov
mov
mov
mov
lock
fistpll
adc
out
xchg
adc
push
test
jl
mov
repnz
mov
jb
dec
inc
sbb
rclb
std
rcrl
add
xchg
sub
add
push
gs
or
add
in
aam
clc
or
or
inc
push
xchg
addl
push
xchg
in
pop
stos
stc
clc
xchg
mov
movsb
push
fdivr
and
pushl
or
cmp
inc
fwait
add
add
pop
aad
popa
shll
cmp
and
clc
inc
incl
lods
lcall
popf
adc
dec
jg
sbb
push
pop
insl
int3
dec
add
les
adc
cmp
mov
jl
and
loopne
stos
push
dec
aad
jne
cmc
add
sub
stc
jge
hlt
or
out
cmpsb
or
add
enter
jmp
add
inc
leavew
push
lods
repz
loopne
clc
inc
movsb
sub
mov
jae,pt
sbb
sub
mov
xchg
sub
jmp
jecxz
add
outsb
xlat
inc
call
js
clc
sub
add
popaw
add
cmc
push
nop
xchg
lds
movsb
mov
stos
pop
jge
add
das
mov
rolb
mov
adc
sbb
pop
addr16
sbb
mov
sub
scas
dec
dec
adc
stos
outsb
cld
repnz
and
call
xorb
jae
mov
or
roll
mov
pop
popf
lret
clc
fbstp
stos
jl
pusha
cmpsl
or
mov
mov
xchg
dec
pushf
dec
push
mov
and
push
pop
jg
lock
xchg
xor
out
or
sub
xor
es
jmp
inc
push
orl
pusha
xor
mov
push
out
faddl
xor
push
into
test
dec
std
xchg
push
sbb
jno
sti
cmpsl
jecxz
idivl
xor
or
and
push
inc
xchg
xor
inc
stc
mov
jle
cmp
xor
push
out
sbb
daa
or
cvtps2pd
mov
add
sarb
xchg
inc
jne
add
add
mov
push
adc
scas
lahf
pop
out
stc
loopne
fidivl
out
add
add
ret
fs
fs
andl
dec
call
stos
sub
mov
and
int
aas
xchg
add
jo
mov
icebp
xchg
jg
mov
out
ds
inc
sahf
or
cmp
jmp
iret
mov
cs
sbb
cmp
repnz
mov
sbb
stc
test
pop
inc
adc
aas
outsb
mov
mov
shlb
stc
loope
and
push
push
fistl
inc
mov
lock
pop
rorl
filds
pop
mov
push
test
add
pushf
sub
push
mov
out
push
sub
inc
add
movsl
adcl
mov
int
or
ljmp
int
addb
shrl
mov
fwait
pusha
incl
jo
pusha
add
push
cmp
push
jge
loop
mov
push
popl
add
fisttpl
lret
add
outsb
jl
lods
add
daa
add
inc
in
mov
incl
ret
daa
jle
add
inc
adc
jmp
xchg
push
ret
jb
mov
jmp
or
sti
pop
rdpmc
add
dec
loopne
pop
add
cmp
mov
mov
jge
cmp
pop
loopne
pop
or
popf
jns
inc
add
imul
fs
add
std
cli
inc
dec
andb
or
dec
and
out
les
add
jle
popa
xlat
aas
and
das
sbb
mov
add
enter
xor
pop
sbb
fsubrs
mov
push
xor
cmp
xor
mov
test
add
xchg
jo
divb
adc
and
loope
mov
add
outsb
lret
mov
jns
shl
popa
nop
xchg
pop
xchg
lods
cmp
cld
shl
test
in
sub
shlb
cli
aad
sub
sub
ret
and
clc
jmp
loop
imul
pop
js
jmp
dec
call
mov
mov
cmc
adc
xchg
pushf
int
and
decl
adc
sub
cmpsl
sub
aas
or
add
flds
xor
mov
fsts
shll
test
subl
push
dec
pushf
data16
or
mov
lods
cld
add
scas
add
shll
fadd
sbb
mov
dec
dec
lcall
push
sub
mov
lcall
popa
push
lds
lea
cmp
movsl
add
pop
cmpsb
pop
fimull
mov
es
sahf
pop
pop
int3
add
testb
ljmp
add
outsl
movsb
mov
inc
sub
and
mov
js
ljmp
filds
inc
xor
add
roll
enter
test
xchg
jg
aam
loope,pn
or
das
mov
and
pop
js
push
inc
mov
mov
and
pop
pop
fwait
xchg
add
aaa
jecxz
add
cmp
sub
pop
sub
jmp
jg
outsb
adc
jbe
xchg
and
mov
fs
adc
push
mov
out
repnz
test
fwait
std
dec
pushl
mov
mov
inc
lcall
aas
out
jno
jg
push
pushf
push
mov
scas
leave
les
push
jp
mov
es
inc
ja
pop
outsl
add
inc
stc
or
push
xchg
inc
mov
fcomi
jg
lahf
loopne
adc
push
jg
dec
adc
or
dec
mov
cmpsl
mov
sbb
cli
imul
out
mov
push
in
repnz
test
push
decl
aas
mov
and
cwtl
add
sti
bnd
fdiv
pop
or
xchg
or
fcmovbe
cmp
cmpsl
mov
jp
out
mov
inc
xor
insb
dec
stos
sbb
dec
ret
subb
test
rorb
sub
jp
mov
push
xchg
mov
dec
loopne
mov
or
add
add
or
out
ret
push
loopne,pn
sbb
jmp
cltd
mov
faddl
subl
cld
std
push
rolb
cmp
jmp
mov
lock
sub
std
repz
push
adc
mov
mov
daa
std
decl
scas
jb
cmp
jg
lds
loop
add
push
mov
xchg
fldcw
mov
pushl
mov
push
jecxz
imul
mov
daa
mov
inc
insl
mov
xchg
mov
mov
idiv
cmp
fistpll
ljmp
inc
nop
shl
xchg
jmp
xor
push
sbb
and
mov
or
out
mov
cld
cmp
pop
cs
or
and
test
push
loope
bound
add
or
add
jecxz
cmp
call
mov
out
xchg
jmp
inc
adc
inc
hlt
out
jne
in
mov
aam
add
sub
outsb
movsb
add
xchg
das
push
mov
mov
insb
add
mov
sub
imul
cmp
hlt
push
pushf
mov
dec
idivl
lds
add
or
push
sub
sub
adc
mov
dec
mov
fs
mov
fs
nop
sahf
inc
test
push
call
jg
inc
inc
add
or
in
adc
cmp
lods
mov
stos
cmp
mov
push
jmp
dec
mov
call
mov
cwtl
ja
cmp
add
pop
leave
fwait
out
mov
nop
orl
or
cmp
mov
lcall
dec
cmpsb
std
add
ret
int3
push
cs
cmp
inc
push
test
xchg
mov
inc
lods
dec
dec
mov
mov
fmull
js
jg
mov
imul
inc
outsb
add
pusha
and
andl
jbe
imul
int3
or
fs
test
cmp
mov
sbb
decl
inc
pop
xchg
dec
mov
or
sbb
mov
pop
dec
call
adc
push
call
fdivrl
push
clc
out
clc
shll
lret
fwait
or
in
xchg
push
mov
lock
push
mov
mov
stos
add
pop
clc
mov
test
orb
mov
ss
add
cmp
pop
adc
xchg
xchg
push
lock
popa
test
pop
shrd
scas
movsl
mov
xchg
dec
push
popa
inc
add
fmuls
and
ljmp
bnd
dec
lcall
fwait
push
and
insl
adc
aam
dec
jle
mov
ud0
xchg
or
dec
add
cld
es
in
popl
cmpsl
inc
ja
jl
je
aas
and
adc
ret
pop
mov
jno
in
enter
adc
mov
divl
mov
cs
sbb
fidivrl
int
std
decl
add
sub
add
xchg
sahf
push
sbb
and
add
imul
xor
or
mov
jg
push
mov
shll
lods
popa
and
in
sbb
incl
dec
rcrl
adc
mov
outsl
and
sbb
xchg
shlb
adc
aaa
push
sbb
add
mov
cmp
lea
adc
data16
lcall
sub
add
and
das
inc
adc
cmpsb
lcall
mov
adc
add
add
fbstp
repz
aaa
cmpsb
cmp
xor
loop
and
mov
sbb
jmp
push
andl
push
ret
scas
push
xchg
add
cld
cli
ja
sbbl
js
mov
ret
xchg
fldenv
das
pop
dec
repnz
loopne
scas
push
ret
in
inc
sub
xchg
lcall
pusha
je
xchg
imulb
inc
sbb
mov
clc
call
out
mov
insl
dec
and
mov
call
loope
or
fldl
and
ret
push
adc
add
mov
outsb
and
out
insl
mov
xorb
sbb
mov
pop
jg
pop
mov
cmp
cli
mov
aas
cmovl
nop
adc
js
push
jg
sbb
call
mov
test
push
outsl
in
sbb
adcb
stos
mov
decb
cmp
rorb
pushl
lds
cltd
inc
or
dec
ss
lret
loopne
xchg
fcomip
jmp
loopne
inc
add
jl
inc
dec
cwtl
xor
push
nop
scas
mov
jo
add
stos
inc
xchg
test
andl
add
loop
and
dec
adc
scas
jmp
popf
jo
arpl
mov
decl
in
sti
add
and
pusha
inc
dec
inc
imul
pop
addr16
hlt
outsb
xor
cld
jmp
sub
dec
sub
inc
outsl
nop
inc
jbe
js
fs
lods
push
pushl
scas
cwtl
inc
les
jp
xor
leave
inc
test
sub
and
inc
cld
adc
lods
sub
loopne
movsb
add
push
jle
cwtl
push
lret
mov
mov
push
pop
lods
cld
lods
data16
pop
mov
and
push
jmp
insl
ficompl
fisttps
adc
lock
ljmp
faddl
js
cmp
arpl
add
adc
xor
out
subb
imul
loopne
dec
or
adcb
scas
out
decl
mov
jbe
adc
popa
sub
mov
fsub
xchg
push
inc
stos
jg
or
enter
aas
aam
add
xor
roll
jg
jmp
xchg
add
xchg
lcall
push
add
pop
inc
xor
insl
pop
mov
push
jbe
pop
ljmp
xchg
or
loopne,pt
mov
clc
jg
lock
mov
movsb
sahf
xchg
cwtl
in
xor
mov
pop
mov
mov
pusha
outsb
inc
or
insl
mov
fs
add
andb
mov
cmp
addl
ss
jecxz
call
xor
lods
sub
jmp
orb
xchg
jbe
lea
mov
sbb
std
dec
das
icebp
negb
dec
dec
cmpsl
ret
or
incl
jbe
mov
imul
ret
arpl
mov
addr16
cmp
cmc
jecxz
add
das
dec
hlt
push
jmp
das
or
xor
aad
mov
or
push
sub
mov
leave
jnp
fs
xchg
jge
shlb
jp
mov
in
aad
andb
inc
and
mov
jl
sbb
cwtl
lods
pop
cli
dec
loopne
mov
push
and
push
repz
push
fucom
jne
xchg
mov
push
ret
icebp
add
das
pop
jl
add
cmc
inc
jecxz
sarl
mov
add
shl
adcb
lds
data16
das
mov
in
or
jns
dec
sub
fildl
cmp
push
js
popa
imul
mov
xor
pop
push
jmp
sub
lret
sub
add
outsl
mov
dec
je
das
std
xor
or
xor
jmp
div
sub
xor
ret
sbb
out
mov
fsts
imulb
or
ljmp
movl
leave
add
roll
addr16
or
adc
or
jnp
cmpsl
pop
enter
mov
mov
fdivr
pushl
mov
inc
inc
mov
subl
xor
cli
lcall
jmp
mov
mov
gs
call
rcll
sbb
aam
scas
and
mov
mov
cmp
aad
mov
mov
xor
rcrb
fsts
adc
repnz
std
or
pop
pushl
aaa
push
mov
or
add
popf
cmp
xchg
jbe
insl
test
dec
aam
scas
lcall
ret
scas
inc
dec
icebp
jnp
test
leave
adc
cli
iret
add
inc
xor
dec
inc
xor
mov
inc
sarl
andl
push
fs
cli
add
outsb
push
add
xor
lret
jle
mov
fwait
mov
jne
mov
movsb
dec
lret
les
push
addb
mov
leave
and
add
or
pop
inc
ljmp
inc
and
les
cmp
lds
fmull
pop
jo
fsub
dec
testb
dec
cmp
jge
ja
adc
push
mov
mov
mov
xlat
popa
loope
mov
test
or
rolb
inc
sub
mov
sahf
push
jle
jg
in
inc
mov
push
xchg
lods
adc
popa
adc
hlt
inc
scas
pop
mov
mov
jnp
xor
add
dec
lcall
into
shr
adc
mov
cmp
mov
add
lods
mov
mov
push
mov
xchg
push
and
rorb
je
sub
mov
push
mov
outsl
cwtl
sub
mov
aam
cmpsb
rclb
enter
cmp
sahf
add
rorl
mov
mov
mov
mov
push
lret
or
pushf
push
sbb
cmc
data16
or
and
lds
lea
add
outsb
cmc
scas
mov
or
cmp
in
inc
xchg
divl
xchg
nop
xchg
mov
jo
je
lds
jg
pop
aam
repz
mov
push
inc
in
pop
fcomps
xchg
mov
mov
add
push
push
dec
inc
push
scas
or
out
adc
pop
js
sbb
in
xchg
xchg
inc
adc
add
loope
push
cld
lahf
jnp
leave
ret
test
rcl
or
cmp
add
cmpsb
adc
in
sbb
rcr
lahf
rolb
into
call
mull
sbb
dec
xchg
inc
xor
pop
fistpl
ficompl
add
pop
hlt
clc
jbe
dec
mov
sar
scas
imul
mov
shrl
add
mov
pop
add
pavgb
mov
mov
ret
sti
ret
scas
cli
fisttpll
xor
dec
scas
and
lea
jb
jbe
outsl
mov
orl
or
jecxz
icebp
mov
je
mov
sbb
jge
loopne
dec
ficoms
pusha
cmpsb
scas
call
pop
loop
pop
cmpsl
pop
lock
ret
mov
decl
lock
or
jle
addb
outsl
fwait
cld
or
les
inc
mov
jmp
mov
mov
mov
dec
push
add
adc
mov
sub
std
cmp
mov
subb
pushf
cs
aas
movsl
dec
paddsw
or
lock
mov
hlt
sbb
les
popa
mov
pop
jg
or
inc
inc
mov
jnp
leave
insb
pop
xor
test
repz
decl
mov
fmull
data16
es
pop
jl
lahf
inc
mov
out
push
adc
mov
sbb
xor
imul
pop
hlt
xorb
lods
out
adc
sbb
add
pop
cmc
fwait
sahf
mov
add
addl
pusha
inc
inc
insl
outsl
gs
mov
mov
pop
or
jg
icebp
lret
dec
xor
into
pop
loop
push
jmp
push
sbb
push
aad
push
mov
adc
cld
fbstp
inc
xchg
mov
in
mov
popf
mov
xor
mov
adc
adc
push
idivb
mov
cmp
arpl
jge
sbb
xor
adc
pop
incl
ret
lds
aaa
iret
cmp
leave
sarb
push
call
add
mov
xor
jb
dec
mov
imul
ret
movsl
push
jmp
inc
cmpsl
push
push
pop
outsb
mov
push
and
mov
lock
sbb
inc
sbb
movsl
jno
cmp
dec
lcall
jecxz
push
lcall
das
sbb
add
adc
lock
pop
mov
cmpsb
and
adc
pop
movsl
xchg
push
out
and
xor
movsl
rclb
add
shr
push
mov
ret
fs
idiv
inc
bound
dec
sbb
mov
xlat
push
js
mov
cli
repnz
sbb
fsts
shll
push
mov
rcl
lea
lahf
aaa
popf
loopne
sbb
push
cli
dec
aaa
lock
cmp
lgs
pop
mov
dec
push
mov
sbb
imul
les
push
stc
pop
cmp
pusha
jmp
btr
push
mov
inc
int
push
out
cmp
mov
lods
pop
jne
add
push
pop
mov
sub
sbb
sbbb
mov
adc
push
rclb
add
popa
jmp
jo
cmpsb
push
test
movsl
jo
mov
lahf
pop
lds
sub
decb
ja
test
pop
dec
xchg
mov
lods
jne
xor
mov
jno
movsl
nop
lret
adc
aas
ret
pop
aad
add
jmp
test
and
stc
adc
adc
dec
mov
mov
jo
and
mov
push
mov
and
dec
repz
sti
stc
push
adc
push
xchg
pusha
cmp
sub
std
pop
ret
cmc
addl
cld
dec
jl
scas
popf
push
adc
pushw
inc
xorl
dec
cmp
cmc
xchg
scas
pop
bound
mov
xchg
cmp
or
daa
sub
test
dec
stos
adc
add
sub
cli
dec
incb
test
shrb
popa
lds
xchg
cmp
pop
clc
int
push
and
stos
mov
adc
rcrl
in
mov
xor
ljmp
add
add
lods
pop
and
das
push
and
fimull
into
mov
sbb
daa
mov
or
dec
fimuls
cmpsb
fwait
push
ror
cs
sub
jnp
mov
dec
jne
or
or
fwait
imul
insb
mov
fcoml
xchg
push
push
adc
adc
idiv
pop
frstor
pop
or
aaa
push
mov
shlb
or
and
add
cmpsb
dec
cld
xor
add
xor
inc
pop
mov
adcb
mov
loop
add
jl
push
adc
sub
mov
pop
or
xor
hlt
xchg
sarl
mov
inc
xor
push
hlt
add
and
scas
mov
hlt
aad
mov
pop
xchg
sub
stc
aas
push
xor
push
insb
adc
or
pop
sbb
mov
mov
lret
push
push
or
sub
aas
jecxz
sarl
fbld
arpl
sub
ret
xor
lcall
test
hlt
cs
xor
xchg
xchg
or
clc
icebp
inc
xor
mov
jecxz
lods
shl
jo
xlat
mov
and
ret
std
jl
mov
in
mov
pop
sbb
and
or
pop
xchg
add
pop
cmp
pop
aas
aam
test
loope
sbb
fld
pop
dec
cmc
data16
xor
xchg
cmpsl
pusha
repz
sbb
out
sbb
pop
arpl
adc
sarb
push
popl
es
sub
int3
xchg
xorl
clc
add
xor
jp
adcb
decl
inc
cs
or
or
pop
test
negl
adc
lahf
jns
mov
test
neg
inc
daa
ret
stos
popf
inc
repnz
xor
insb
shlb
dec
or
adcb
mov
cmpsb
push
inc
cld
sahf
mov
pop
xor
or
lock
push
mov
pop
mov
mov
inc
stos
xor
xor
test
std
mov
xor
clc
inc
push
mov
sub
std
mov
adc
and
cmp
adc
call
xchg
pop
mov
mov
inc
cmpsl
jle
sub
divb
leave
jae
adc
test
inc
push
neg
dec
fs
mov
in
push
dec
mov
sbbl
sar
icebp
lock
pusha
movsl
jg
icebp
mov
ret
jno
adc
push
test
aaa
lock
xor
test
inc
outsl
js
imul
incb
push
test
add
ficompl
add
ss
xor
sbb
and
pop
rolb
stos
shlb
sbb
lret
std
outsl
cs
mov
js
jb
sbb
inc
lock
daa
cmp
pop
orl
aam
mov
aad
jge
xchg
notb
push
jl
popa
loop
enter
es
adc
nop
outsb
rclb
fsubp
xchg
and
pop
sbb
packsswb
and
jle
ss
int
xor
sahf
add
adc
mov
js
loopne
cmp
pop
inc
add
hlt
mov
in
addr16
enter
hlt
stos
psraw
inc
adc
pop
imul
add
mov
mov
mov
out
les
or
push
aas
jle
dec
jmp
xor
roll
xor
cmc
add
fst
cmovp
xchg
jge
stc
std
leave
xor
dec
mov
ljmp
mov
lret
pop
sub
imul
xchg
mov
push
mov
or
and
or
mov
dec
and
add
insl
ljmp
cmovno
jb
jl
mov
subb
call
fwait
outsb
push
shrl
add
pop
xchg
jo
cltd
icebp
insl
mov
out
cld
fcmove
add
shrb
neg
sbb
addb
ss
out
sbb
cmpsl
mov
popa
aas
push
leave
cwtl
stc
into
outsl
stc
loopne
decb
and
pop
jmp
pop
rolb
pop
pop
jl
jle
movb
cltd
adc
xor
imul
jae
out
test
jno
imul
lock
in
push
fiadds
xor
mov
mov
push
stos
inc
in
push
dec
repz
jg
mov
ljmp
add
push
les
dec
dec
add
mov
mov
daa
test
xrelease
stos
add
out
sub
popf
inc
popa
or
and
ljmp
push
mov
adc
dec
out
in
add
lds
aam
xchg
notb
mov
aaa
xor
stos
popa
mov
or
test
shrl
repnz
aas
sbb
fistps
fwait
das
inc
enter
aas
dec
pop
or
add
push
xchg
insl
test
popf
jle
xchg
repnz
mov
dec
cmp
call
mov
dec
xor
mov
cmp
sti
inc
and
test
sbb
xor
pop
jmp
pop
mov
sub
xor
addr16
dec
adc
cltd
dec
sub
out
mov
idivb
add
xor
jmp
push
adc
jb
add
inc
pop
aad
xor
inc
jns
xor
orb
pop
out
sbb
xchg
mov
adc
sub
inc
incl
sbb
icebp
aas
xchg
hlt
inc
add
idiv
les
lcall
mov
lret
pop
aam
dec
movsb
and
test
cmp
cmp
mov
ds
xchg
mov
push
sbb
pusha
mov
mov
lock
mov
or
cmp
aaa
sub
mov
pop
mov
lahf
jmp
loop
cmp
es
pop
or
add
and
cmp
jo
unpcklps
inc
add
jecxz
shlb
test
aas
add
inc
add
dec
mov
into
dec
push
das
mov
sub
inc
out
and
mov
dec
or
je
add
sbb
cmp
movl
or
into
and
icebp
or
xor
add
pop
fsubs
stos
js
inc
mov
sub
hlt
outsb
inc
cmp
push
add
or
xchg
std
cmc
rcll
pop
mov
outsb
fsubl
mov
jno
cld
scas
or
mov
arpl
xchg
mov
fisubs
xor
add
inc
and
add
pushf
outsl
push
cli
add
pop
in
es
inc
sub
mov
mov
add
popa
fadd
pop
or
insl
push
jge
outsl
sub
cli
pop
adc
adc
inc
mov
jno
xchg
push
es
imul
and
test
mov
inc
or
shrb
loopne
ds
jo
clc
popf
sbb
test
clc
mov
xor
add
add
cmp
sub
mov
dec
inc
imul
xchg
lret
jl
lret
clc
aas
mov
test
jae
cmpsl
stos
cmpl
xchg
jo
addb
mov
mov
nop
hlt
fistps
jns
pop
sbb
fcompl
xor
jle
sub
jno
mov
punpckhbw
rorl
lcall
mov
sub
insb
xor
mov
cs
cmp
and
cmp
or
pushf
add
or
mov
ljmp
xchg
stos
mov
adc
scas
addl
pop
popa
addl
add
mov
xor
scas
cmp
imul
stos
test
pop
in
ret
inc
pop
sub
sbbl
jb
cltd
push
dec
push
push
adc
inc
outsl
bnd
and
repz
jo
mov
inc
repnz
inc
jl
dec
pop
cmp
or
mov
decl
fs
sub
test
test
xor
or
out
iret
or
lods
lret
clc
shrl
int3
iret
push
dec
arpl
lcall
mov
adc
arpl
sbbb
paddsw
inc
aas
add
aam
in
sub
rcl
int
ds
push
loopne
cwtl
and
sbb
cld
es
jmp
std
in
add
pop
mov
scas
and
add
sub
inc
sbb
add
and
int3
jp
or
or
mov
sub
push
aas
or
cld
addb
ret
in
mov
pusha
xchg
repnz
sahf
xor
mov
aas
fidivrs
sub
pusha
push
jbe
xor
movsb
out
push
xorb
ljmp
jmp
cli
subb
fdivs
hlt
repz
ret
push
pusha
into
or
inc
repnz
pop
sbb
inc
or
sub
movsl
xchg
push
inc
add
inc
mov
repz
fs
jg
pusha
cmp
jecxz
push
stos
or
imul
pop
push
fsts
sahf
jbe
call
sbbb
mov
pop
or
add
jno
cmp
pop
add
inc
sub
push
inc
jne
ja
fs
fiadds
shrb
loope
xchg
pusha
sbbl
and
add
shlb
loop
inc
fldcw
sbb
cmpsb
in
inc
fsubr
jg
fistpll
test
inc
cmpsb
in
test
inc
loope
push
int
or
popf
mov
adc
dec
icebp
xchg
and
js
or
pop
movsb
lds
mov
test
shl
inc
lret
add
scas
shrb
movsb
mov
jl
or
test
cmp
jno
fists
aad
xor
jge
xor
ljmp
incl
fs
xor
test
loopne
or
ret
add
mov
adc
cli
fs
jo
mov
sbb
xchg
dec
dec
sub
inc
mov
mov
inc
mov
add
nop
loope
pop
sarl
or
imul
lds
rcll
mov
or
fistpl
dec
mov
dec
sbbb
xchg
cld
adc
xchg
add
cmp
scas
call
daa
nop
mov
cmp
add
bound
aaa
shl
add
cld
daa
push
aaa
xor
push
mov
xchg
iret
repz
pop
adc
push
rcrl
cltd
lea
insb
cmp
cmpb
shll
pop
out
movsl
mov
inc
pop
sbb
aam
cmp
mov
ja
mov
and
test
xchg
jne
jno
andb
push
pop
add
lahf
daa
mov
test
shrl
aas
js
mov
pusha
pop
and
push
repnz
lret
adc
mov
insl
jo
adc
cmp
add
rolb
push
adc
dec
inc
ret
sarb
lea
rolb
adc
nop
mov
mov
cmp
and
pop
xor
cmp
fsubrs
mov
daa
adc
popa
stos
ficoms
pop
push
and
jb
xchg
ds
jbe
clc
incb
test
mov
mov
mov
ja
push
add
notl
add
aad
sti
mov
push
in
xchg
popa
push
jo
xor
mov
dec
push
shl
and
das
pop
in
clc
sub
sbb
sahf
cmp
popa
mov
add
movsl
and
cmp
test
pop
roll
ljmp
mov
cmp
sub
decl
xchg
addb
push
add
push
je
adc
or
cmp
aam
pop
and
pop
test
dec
dec
fdivrp
push
dec
push
out
les
subl
mov
xlat
je
push
cs
imul
inc
inc
imul
lret
jecxz
jne
xchg
sub
shlb
xor
in
int3
inc
add
jg
les
aaa
xchg
fidivs
xor
sarb
and
cmp
mov
jno
add
loop
mov
inc
out
add
out
roll
mov
hlt
push
or
push
loope
cmovl
mov
lods
test
jmp
mov
cld
int
mov
insb
cmp
push
scas
gs
xchg
mov
imul
add
add
in
aas
cmp
cld
ret
stos
std
jne
add
ret
mov
xlat
call
jno
frstor
inc
addb
add
clc
add
push
stos
xchg
orl
das
jle
lret
xchg
subl
int
mov
mov
pop
das
adc
iret
lahf
shlb
and
call
ja
sbb
lock
mov
aas
xor
aad
sub
xor
mov
adc
pop
sub
into
mov
xorl
imul
add
stc
sti
add
lds
int3
out
push
loope
xchg
fnstenv
nop
out
inc
jp
int
arpl
xchg
cmp
push
jge
popf
cmc
pop
jge
int
rcrb
popl
hlt
mov
xor
pop
mov
hlt
ja
inc
or
cmc
arpl
ret
inc
jnp
jmp
pop
push
inc
pop
push
push
iret
aas
jmp
jmp
pop
sub
inc
or
bound
pushf
out
sbb
add
call
inc
mov
add
cmp
adc
xor
scas
xchg
ret
cmp
orl
enter
fcmovbe
aas
into
lret
cmp
cmp
push
mov
sbb
and
cmpsl
pop
imul
fildll
out
lods
push
xor
fnstcw
add
push
pop
test
clc
add
pop
dec
mov
xor
stc
sbb
inc
cmp
add
adc
clc
fs
idiv
sbb
rcrl
adc
push
mov
add
push
inc
int
stos
xchg
jge
das
sarl
and
pop
pop
xor
pop
clc
xor
in
cmp
push
pop
pop
aas
jo
pop
or
or
daa
inc
dec
dec
inc
ret
or
popf
add
insb
inc
in
sub
dec
jl
mull
je
pop
jo
or
nop
testb
pop
jo
add
cli
add
add
mov
push
pop
mov
sahf
loope
or
or
xchg
xor
mov
aas
js
pop
cmp
cmp
dec
in
outsl
cmp
inc
fstl
adc
dec
and
stc
mov
push
jmp
fwait
lock
sbb
call
shr
movsb
adc
lret
lds
movsb
pop
shrb
xchg
inc
sahf
leave
pop
fcompl
or
lods
psubw
sub
sbb
push
jle
pop
sarb
insb
ja
mov
jb
aad
xor
popa
sbb
syscall
pop
dec
sbbb
popf
mov
out
mov
adc
enter
adc
mov
lcall
notb
scas
mov
into
and
mov
push
sbb
xchg
adc
adc
cmpsb
sub
add
out
fisubrs
sti
cmp
pop
or
jo
mov
pushf
sbbl
add
sbb
and
lret
adc
imul
icebp
adc
popa
jp
push
bound
inc
idiv
cmp
loope
aas
pop
call
push
and
stc
lock
mov
loopne
test
xchg
jg
leave
or
dec
shl
mov
dec
jl
cmc
aad
stc
test
cmp
lods
dec
sbb
xchg
cmp
fiaddl
call
jp
insl
cmpsb
adcl
ss
pop
js
xchg
aad
insl
in
fidivs
loope
lret
icebp
add
inc
add
dec
jp
add
push
sarb
pop
in
js
test
mov
loope
test
jle
xchg
out
or
test
or
jne
pop
xchg
dec
jbe
int3
mov
bound
pop
add
fists
scas
pushf
aam
jp
fisttpll
out
sub
push
push
xor
add
push
xor
dec
pusha
sbb
pushf
inc
cmp
cmpb
shlb
xchg
adc
jg
stos
aad
bound
or
std
cmp
and
test
clc
cmp
repnz
xor
arpl
popf
cmpsb
cmp
mov
icebp
inc
dec
imul
out
jecxz
jmp
mov
mov
fldt
stos
cmpsl
incl
and
fcmovu
add
push
pushf
sub
test
nop
das
pop
ret
and
mov
lret
or
pushf
inc
daa
adc
cmpl
enter
sarl
sub
or
clc
ja
in
sub
pop
inc
ljmp
push
and
mov
gs
push
add
fwait
repz
xchg
add
xchg
aad
or
mov
filds
test
das
dec
std
leave
xlat
jle
xchg
sbb
pop
je
daa
and
ret
cmp
movsl
push
dec
mov
not
pop
shll
loop
or
sbb
movsb
adc
adc
pop
mov
sahf
mov
imul
nop
stc
sbb
data16
cmp
cmp
mov
test
add
push
fs
jge
popa
add
cmp
mov
ret
out
mov
cld
pop
and
sbb
loopne
xchg
sub
xchg
outsl
clc
lret
addl
push
stos
lods
decl
jae
or
fildl
lods
xchg
es
fcomps
addl
or
sbb
das
cwtl
cmp
pusha
clc
inc
inc
lret
outsl
fldenv
cmp
ja
decl
xchg
inc
add
adc
sbb
jo
lcall
sbb
add
mov
mov
sahf
xchg
lahf
xchg
scas
mov
jecxz
xor
hlt
lahf
fistpl
cli
adc
jle
mov
test
clc
add
xor
rorb
lea
or
lcall
xor
add
aad
mov
mov
popa
jge
rcrl
loope
loopne
shrb
and
shrb
arpl
push
clc
pop
add
mov
jmp
pop
mov
mov
jnp
cli
pop
sbb
pop
cld
push
inc
mov
xchg
fbstp
xor
cmpsl
jo
mov
or
in
xlat
jnp
add
les
mov
cli
inc
notl
dec
fs
xchg
or
dec
inc
mov
inc
ficoml
mov
popf
add
dec
fisttpll
in
pop
test
pcmpeqb
outsl
in
adcl
mov
das
loop,pn
add
xchg
pop
jnp
mov
inc
sar
movsb
sbb
enter
adc
cld
aaa
int
or
inc
sbb
sub
imul
or
jmp
std
jne
clc
fbstp
cmpsb
stos
mov
sub
jb
dec
clc
adc
in
pop
loopne
pop
mov
push
stc
shrb
xchg
jge
out
adc
scas
call
xchg
cmp
ljmp
mov
or
sbb
into
add
push
cltd
ja,pt
add
push
push
push
xor
aad
nop
incb
sti
cmp
pminub
xchg
and
dec
fadd
mulb
shrb
xor
xchg
int3
fdivs
sti
xor
mov
jg
mov
stc
dec
sahf
pop
orb
movb
lret
pop
clc
fisubrl
jnp
dec
shrl
jg
adcb
int3
mov
jl
sbb
jecxz
fwait
jb
je
push
js
jb
adc
xchg
push
andl
popa
in
or
arpl
push
incl
pop
pop
sti
and
daa
aas
push
cmc
mov
testb
lret
roll
popa
inc
push
cld
call
mov
cmp
int
inc
jne
push
or
xor
inc
out
sahf
inc
pusha
mov
dec
lds
xchg
lock
mov
xlat
jge
outsb
incl
mov
out
mov
or
fsts
adc
sbb
outsl
mov
adc
stos
pop
rcll
cs
xlat
dec
fdivrp
pop
cwtl
dec
mov
pop
inc
movsb
xor
lods
lock
xchg
js
sub
sbb
or
fisubs
push
fildll
cwtl
mov
insl
std
popa
push
std
cmp
scas
fdivl
jno
sbb
mov
pop
and
stc
and
mov
dec
mov
sbb
out
into
out
mov
mov
fbld
mov
jne
daa
inc
push
dec
test
push
mov
jp
mov
adc
inc
insb
hlt
popf
insb
pop
jbe
mov
arpl
movsl
adc
add
call
and
pushf
lcall
jns
xchg
test
and
jl
ds
xchg
cmpsl
push
jb
cli
in
fldcw
repz
incl
mov
add
sub
pop
or
aad
sbb
sbb
imul
cmp
mov
mov
clc
int
or
testb
int
jg
and
insl
loop
mov
aad
push
cmp
push
add
addr16
inc
int3
jmp
std
decl
andl
jbe
cmp
mov
adc
sbb
push
mov
lret
addl
arpl
ljmp
add
insl
and
xor
insb
sub
jno
mov
inc
ficompl
in
jle
push
es
pop
adcb
xchg
lds
imul
inc
xcrypt-ecb
cmpsl
or
mov
sbb
aas
mov
sbb
pop
pop
jle
cmp
jo
call
fsubrl
mov
xor
or
inc
loope
or
ljmp
lock
lret
mov
insb
enter
cmp
pop
jne
mov
push
or
mov
pushf
mov
push
inc
sbb
xor
std
and
sbb
add
mov
mov
shlb
pop
jns
in
loope
adc
inc
add
sarl
or
push
jbe
std
or
jg
out
fisubl
outsb
sub
inc
popa
or
call
mov
popf
rolb
pushl
scas
add
or
out
dec
xor
loopne
dec
push
repz
orl
in
jo
stos
jno
jg
sub
rorb
adc
jl
cld
ja
jns
js
jmp
inc
cmpsb
xor
dec
fcos
mov
xchg
add
sub
leave
iret
xor
loop
cld
or
add
mov
xchg
dec
nop
loopne
cmc
and
mov
inc
ja
inc
icebp
ja
aam
movsl
sub
pop
sbb
inc
and
pusha
mov
mov
cmp
aaa
aaa
leave
add
jo
out
rolb
mov
popa
push
pusha
mov
add
push
aam
test
or
add
jo
das
push
pop
hlt
ret
jmp
aad
or
or
or
xchg
xchg
push
rcr
mov
das
icebp
out
clc
dec
push
or
and
xor
mov
or
push
xor
push
in
aas
les
loop
js
iret
xchg
pop
pop
and
stc
imulb
leave
inc
add
pushl
clc
lock
mov
jo
inc
sub
and
jp
jge
ss
push
mov
jle
aas
dec
scas
xor
sbb
mov
testl
mov
jnp
movq
sub
mov
out
xor
into
adc
icebp
mov
mulb
in
in
lcall
js
aaa
cld
jmp
mov
lahf
fldl
mov
data16
cwtl
dec
aad
jecxz
roll
cmp
pushf
insb
pop
loope
inc
insl
scas
inc
xorl
xchg
pushf
xor
cmc
cmc
daa
mov
aad
pop
cs
push
bound
mov
xchg
push
test
push
or
and
popf
dec
sbb
scas
push
pop
fcomp
lcall
jmp
lods
push
clc
jg
lock
xor
add
add
pop
fcomip
stos
daa
dec
outsl
sbb
loope
loopne
imul
pop
add
push
je,pn
pop
loop
push
inc
or
mov
call
push
mov
xor
jo
sbb
andps
add
dec
ror
aad
and
insb
mov
jg
mov
cmp
adc
mov
ja
pop
out
sbb
clc
jg
lahf
rcrb
std
lahf
js
mov
mov
loop
inc
es
xor
out
out
pushf
adc
and
aad
add
add
mov
mov
enter
std
jae
mov
mov
inc
add
leave
cmp
mov
stos
int3
add
shlb
mov
clc
rcr
lock
lock
push
mov
pop
mov
insl
out
lret
icebp
jb
dec
or
in
sbb
notb
sub
fcomi
daa
ret
lcall
or
pusha
dec
out
jnp
mov
adc
enter
cmc
ja
jae
mov
cmp
iret
and
shlb
sbb
xlat
jae
mov
pushf
cmp
lock
cmpsb
outsl
jle
aad
mov
jns
adc
jg
push
xorb
lahf
mov
mov
and
and
xor
xor
clc
mov
enter
clc
loope
jnp
mov
pop
enter
mov
push
mov
pusha
push
or
nop
adc
push
movsb
pop
ret
adc
out
inc
jns
into
clc
aad
out
push
xor
sti
bound
mov
mov
cmp
jecxz
clc
push
adc
pop
mov
iret
into
mov
dec
andl
push
adc
lret
nop
add
add
fidivs
fcompl
in
push
and
add
adc
mov
pushf
data16
leave
ja
dec
pop
in
aas
adc
ret
jmp
inc
rolb
das
test
sbb
ljmp
mov
push
add
inc
std
adc
fiaddl
faddl
out
adc
les
and
lcall
xor
pop
push
dec
int3
sbbb
repz
loop
add
pop
pop
inc
addr16
pushl
sub
ret
xchg
fiaddl
js
and
and
mov
popa
jl
test
pop
add
imul
sbb
addr16
mov
pop
sbb
gs
push
mov
in
dec
push
pop
ja
fiaddl
lahf
lock
les
xor
pop
hlt
add
sub
test
xchg
sbb
aaa
mov
les
add
and
pushf
outsb
mov
std
movsl
out
adc
mov
mov
xor
dec
lahf
into
adc
mov
loopne
scas
mov
add
ljmp
xor
mov
sbb
push
mov
inc
incl
sarb
mov
jns
arpl
mov
cmp
lahf
call
pop
sbbb
sbb
push
mov
jbe
sub
mov
adc
mov
hlt
cmp
inc
lret
jecxz
pop
push
cmc
jle
or
enter
in
scas
lock
daa
sbb
sbb
std
popa
hlt
push
mov
adc
jo
or
add
mov
xor
rolb
push
adc
mov
orl
iret
jnp
pop
outsl
clc
lahf
push
out
mov
nop
aas
outsb
repnz
pcmpgtb
es
push
push
pop
push
add
add
and
pop
dec
jge
mov
addl
outsb
loop
dec
loopne
ret
dec
cmp
adc
adc
sahf
and
idiv
pusha
add
pop
imul
add
jg
add
inc
or
xchg
les
aaa
out
incl
xchg
cmpsb
or
aas
mov
jne
out
or
and
adc
adc
inc
cmp
cmpl
or
cs
std
pop
mov
add
push
jp
pop
ljmp
push
xchg
adc
sub
movsb
fldenv
pop
cmp
fiadds
int3
imul
aad
adc
in
hlt
pop
lock
push
cmpsl
loopne
pushf
xchg
mov
test
adc
mov
pop
sub
add
aad
icebp
push
int
test
in
loope
push
pop
les
std
insl
sub
and
pop
cmp
sub
rorb
jno
xor
add
jbe
in
add
js
cli
pop
inc
pushf
test
scas
rorb
jp
push
sub
loope
aaa
dec
mov
jle
jl
sub
ss
and
gs
push
jg
inc
outsb
cmp
pop
faddl
xor
and
sbb
and
pushf
sbbb
daa
jl
cld
gs
std
out
loop
sub
lock
mov
lea
cmp
clc
mov
cmc
cli
inc
and
or
cmp
add
push
js
fwait
and
mov
scas
aas
adcl
in
shrb
and
les
repz
insb
addr16
inc
cmp
fstl
insb
xchg
adc
sbb
pop
and
xor
sub
sbb
xchg
fsubs
repz
fwait
inc
pop
das
stos
mov
push
shlb
lds
xor
icebp
pushf
sahf
mov
fmull
or
insl
dec
cwtl
fstps
push
icebp
pop
adc
dec
jns
inc
xor
aas
dec
sub
cld
rcrb
push
clc
mov
sbb
push
pop
mov
repnz
mov
xor
pop
ret
imul
adc
xor
insb
lock
inc
inc
fnstcw
test
out
or
ja
paddd
lock
mov
mov
xor
popa
xchg
push
cmp
fs
ja
out
mov
and
pop
pop
pop
xchg
jno
sbb
addr16
out
or
out
xchg
add
out
inc
adc
pop
inc
mov
lcall
mov
jge
int
xor
and
dec
or
outsb
clc
dec
sbb
xor
pop
xchg
test
xchg
rorb
adc
in
sahf
fildl
xor
pushf
jmp
xchg
std
adc
mov
pop
mov
movsb
inc
and
ja
and
inc
inc
mov
das
in
mov
sub
js
dec
mov
test
in
test
jg
es
lret
jl
scas
mov
jbe
mov
xchg
mov
into
loope
dec
loope
or
sub
or
incl
xorb
xchg
scas
test
adc
psrlq
xchg
sarb
pop
repz
add
inc
jmp
out
daa
add
push
xchg
out
or
push
jbe
adc
push
stos
mov
or
sbb
rolb
cld
sbb
jnp
xor
rolb
filds
add
adc
mov
jmp
adcb
add
loop
cmpb
ja
inc
icebp
ud0
sub
mov
ja
fidivl
push
cmp
mov
pop
adc
roll
mov
jmp
fsubl
dec
mov
xor
call
ret
sub
xchg
push
push
das
jg
mov
in
clc
xchg
std
test
enter
add
push
and
aas
ret
scas
pop
add
aam
outsl
test
das
psrad
push
stc
pop
fiaddl
outsb
out
mov
jge
test
add
mov
inc
sub
daa
xor
jno
jp
fwait
sbb
adc
clc
sub
add
mull
dec
adc
adc
jb
loopne
add
or
ss
add
decl
iret
sub
add
xchg
bound
adcb
xchg
push
das
nop
mov
cmp
cmp
cmc
seto
enter
decl
cmp
test
aas
pop
dec
jmp
aaa
adc
cmpl
repnz
or
mov
pusha
sbb
push
adc
or
cmpsl
jns
or
outsb
or
fimuls
inc
aaa
dec
gs
les
fimuls
xchg
sbb
mov
adc
dec
scas
jg
mov
xchg
jb
int3
test
or
and
iret
sbb
xlat
subb
push
sbb
repnz
iret
aaa
test
stos
jne
push
mov
lret
jae
add
adc
jle
cmp
inc
addr16
mov
push
inc
inc
icebp
inc
xchg
add
pop
jg
add
aas
repz
sbb
addl
add
sar
inc
shrb
out
push
in
sbbb
push
dec
pop
adc
jp
and
inc
repnz
pop
xchg
ret
inc
das
scas
outsb
lock
inc
clc
add
out
and
inc
les
xor
jle
mov
sbb
stos
test
mov
int3
mov
xchg
int
mov
cmp
cmpsb
sahf
outsl
add
inc
pop
add
or
not
test
sub
into
add
or
push
movsb
and
das
testb
sub
in
add
movsb
shl
add
or
test
aas
push
shrb
enter
stos
loope
mov
pop
test
pop
add
cmc
outsl
arpl
roll
pop
cmpb
sbb
pop
push
ret
cmp
out
lea
pop
cmpsb
in
cmp
xor
adc
jle
je
ja
loope
setge
out
push
das
xor
das
lods
scas
mov
push
adc
adc
adc
stos
dec
aam
inc
insb
mov
test
mov
int3
inc
repnz
loopne
push
aam
add
mov
inc
add
or
into
mov
gs
sbb
jl
rorl
js
push
test
xchg
xchg
xor
xlat
stos
xor
or
push
jg
das
sub
adc
lret
daa
arpl
push
inc
lcall
cmpsl
jp
andnps
xchg
roll
cmp
sarb
stos
xor
add
clc
cld
add
out
clc
pop
enter
movsb
popf
popa
arpl
adc
push
aas
mov
inc
pop
lods
testb
sbb
frstor
add
jne
sbb
pop
icebp
push
lods
cmp
sub
pslld
inc
pop
xchg
mov
repnz
push
sub
test
jle
xchg
cmp
xchg
or
movsb
or
xchg
inc
scas
jl
fidivs
out
aam
das
mov
fmull
jno
xchg
jbe
outsl
cmpsb
xchg
in
les
push
and
add
addr16
mov
xchg
call
fnstsw
dec
xor
cmp
mov
aad
arpl
sbb
clc
inc
and
mov
inc
sbb
mov
xor
movsb
mov
add
test
inc
sahf
add
jg
pop
orb
adc
sldt
jg
dec
inc
add
pop
add
jb
adc
arpl
test
add
stos
stos
or
mov
mov
lock
data16
sar
mov
inc
sub
and
call
or
or
cmp
dec
lahf
loop
mov
cmp
nop
negb
sbb
sub
ret
inc
sub
xchg
aad
sub
sub
or
cmp
ljmp
and
dec
call
in
push
push
or
sub
fld
js
adc
lret
clc
mov
add
or
sub
add
shlb
loope
cltd
dec
rcll
push
sub
shlb
pusha
adc
cmp
filds
jecxz
insb
mov
dec
in
stos
js
add
mov
incl
xor
sub
les
cmc
loop
pop
sub
pop
movsl
inc
push
pop
cmc
cmp
incl
leave
mov
xchg
mov
xor
xchg
xchg
test
out
sub
lahf
xlat
pop
sbb
mov
notb
icebp
pop
sbb
hlt
lea
mov
sub
les
lcall
or
cld
adc
jno
push
clc
cmpsl
add
js
mov
and
sahf
inc
xor
push
test
cmp
nop
mov
jmp
inc
and
adc
cwtl
xlat
lods
call
in
cmp
pop
nop
xchg
imul
add
and
jno
insl
mov
pop
les
cmp
shrl
div
cmpb
dec
scas
pop
sub
push
jb
jmp
xchg
adc
push
xchg
dec
outsl
ja
or
or
stc
lea
pop
mov
inc
fcomip
and
rorl
mov
loope
mov
cmp
pop
mov
outsb
aam
cld
cltd
xor
pop
lods
add
cmpsb
stos
pop
jmp
sub
and
or
outsl
psubq
xchg
das
add
iret
mov
push
jge
push
cmpsl
test
loopne
or
ljmp
sub
inc
sub
adc
mov
scas
push
loope
xchg
sbb
pushf
push
adc
inc
aaa
xor
addb
mov
mov
rcrl
jecxz
inc
mov
pusha
fistps
clc
cld
in
or
sub
dec
jecxz
sbb
dec
mov
xchg
lea
add
inc
int3
lds
arpl
push
inc
movsl
movsb
xchg
repnz
push
mov
and
adc
xchg
movsb
in
cmp
cmp
test
pop
cmpb
ret
and
cli
jbe
aad
js
push
mov
in
stc
aaa
decl
push
sbb
ss
mov
js
lock
push
roll
roll
shl
adc
dec
pop
add
addb
in
pop
bound
leave
repnz
pop
lret
cmp
or
mov
xchg
shll
jl
inc
and
ret
and
popf
adc
adc
sbbl
stos
add
clc
inc
test
push
out
addl
scas
fmuls
nop
dec
int
xchg
xchg
mov
loopne
adc
jb
xchg
adc
sbb
pop
add
not
add
aam
push
in
fdivp
ljmp
jae
add
sub
push
aas
xorl
xor
sbb
mov
or
cmp
push
xor
jg
es
push
les
pop
test
les
nop
fidivrs
fdivrl
lret
push
or
mov
fcomps
dec
enter
out
sar
sbb
push
sar
jns
jbe
aas
int
imul
adc
pop
fisubrs
fbstp
dec
cld
repz
cmp
gs
adcb
or
mov
mov
xchg
or
pop
dec
popf
xorl
lcall
mov
push
sbb
sub
add
cs
mov
inc
xchg
rclb
pop
and
add
push
pop
insb
loopne
xor
or
adc
mov
and
and
out
pop
pop
add
mov
adc
add
push
sub
push
push
adc
in
xchg
inc
call
dec
ret
dec
scas
je
rclb
ficomps
mov
je
sub
push
xchg
xchg
stc
push
add
pop
idiv
ret
mov
cmp
addb
ljmp
ret
sbb
adc
hlt
loope
pop
subl
loop
divl
xchg
shlb
adc
test
cmp
addr16
aas
aaa
loopne
xchg
aas
xor
jmp
scas
aam
es
mov
inc
imul
sub
pop
repz
cmp
cwtl
cmp
add
pushf
cltd
addl
inc
adc
mov
jmp
cmc
dec
pop
jno
or
mov
cli
scas
aad
sbb
filds
mov
pushf
or
test
push
add
cmp
push
dec
mov
cld
push
mov
cmp
decb
or
push
icebp
pop
mov
sbb
shrl
jne
mov
jae
and
pop
mov
cmp
adcl
loope
ror
jecxz
pop
jg
add
lods
add
outsb
and
xchg
stos
pop
lcall
jo
aad
add
scas
xor
int3
aas
cwtl
mov
clc
jg
and
loopne
bnd
addr16
pop
scas
popa
mov
fcmovnbe
mov
xor
nop
jo
or
inc
rcll
xchg
sub
jb
stos
cli
add
or
inc
iret
pop
push
adc
cwtl
mov
aas
inc
sub
addl
bound
sarl
std
imull
adc
jne
in
adc
shr
pop
push
inc
and
enter
loopne
xchg
aas
pop
not
cli
mov
sbb
mov
movsb
push
add
adc
test
mov
sbb
dec
sub
sbb
addb
pusha
pop
out
jb
add
in
out
insl
cmp
dec
imul
xchg
outsb
out
add
mov
push
hlt
in
mov
shld
ds
add
xchg
andb
adc
loopne
cmp
je
sub
push
sbbl
in
add
mov
mov
lds
pop
adc
mov
mov
mov
movsb
incl
mov
clc
pop
and
sbb
mov
test
js
inc
cld
dec
add
pop
dec
les
lods
dec
mov
sbb
ja
icebp
push
xchg
xchg
sbb
stc
aas
xchg
mov
test
adc
movsb
jnp
les
stos
sarl
and
movq
jae
sbbb
cmp
jns
sbb
test
or
stc
pop
mov
push
adc
jae
xlat
fadd
mov
arpl
pop
or
xchg
ja
lock
push
mov
into
mov
pop
pop
lea
xor
jbe
repz
lret
pop
addl
orl
testl
cmp
or
mov
loop
enter
insb
sbb
cmpsl
subl
les
js
leave
aad
dec
jge
jbe
popa
adc
push
mov
mov
or
inc
arpl
in
and
fndisi(8087
fwait
push
lcall
into
stc
adc
call
xchg
movb
or
call
sub
mov
push
jg
push
clc
cmpsb
cmp
mov
adc
lea
sbb
add
in
lea
lds
mov
loope
dec
outsb
add
andl
jns
xor
jo
or
add
and
jmp
int
jg
cs
xor
scas
mov
push
add
inc
icebp
inc
cmp
int3
ss
mov
dec
and
ret
std
add
mov
sbb
out
std
push
mov
mov
mov
mov
cld
sub
lahf
add
sbb
out
iret
push
xchg
cmc
pop
cmp
add
dec
add
aaa
add
lea
add
xchg
negb
inc
inc
fs
add
aas
nop
push
inc
mov
decl
push
pop
sub
pop
addr16
mov
data16
inc
jecxz
xor
cs
add
add
add
pusha
inc
in
lcall
ss
test
icebp
ljmp
mov
shll
dec
icebp
mov
mov
xchg
jl
sti
mov
test
dec
inc
pop
loop
and
cmc
dec
jg
xchg
cltd
mov
xor
adcb
push
icebp
ds
pop
insl
adc
movsl
pop
mov
adc
test
aam
outsb
addl
les
or
clc
je
aad
fucomi
leave
test
pop
dec
pop
loopne
outsb
sub
ret
cmp
jns
adc
xchg
mov
icebp
adc
out
cmp
mov
imulb
add
pop
loopne
jl
divl
clc
jl
inc
add
push
cs
sub
push
or
xchg
push
add
shll
cmovne
cmpb
jne
call
jp
in
sub
clc
jge
add
or
in
mov
daa
or
les
sbb
adc
xchg
inc
xchg
mov
jle
sub
out
orb
and
ret
mov
mov
cmp
pusha
leave
in
add
cld
sarl
xchg
in
mov
cld
icebp
cmp
xchg
add
push
push
adc
xchg
adcl
xchg
subb
repnz
adc
cli
insb
pop
in
lret
mov
cld
mov
and
cwtl
inc
rclb
sbb
mov
outsl
jge
sbb
addr16
mov
pusha
ret
je
ljmp
rcr
ficompl
or
fmul
xchg
adc
iret
insb
fdivr
jecxz
xchg
push
mov
mov
ret
and
xchg
xlat
ret
jne
or
mov
cmp
jbe
adc
notb
pop
decl
scas
dec
add
mov
movsb
push
fsubrl
xchg
lcall
xor
test
push
es
xor
stc
push
inc
aam
add
sub
inc
mov
inc
cwtl
xchg
es
aas
sub
add
xor
add
xor
jo
lea
cmp
or
sbb
xchg
jbe
mov
das
pusha
incb
sub
inc
xor
mov
push
insb
sub
gs
xchg
jo
push
cmp
push
xchg
add
or
out
jp
jl
sahf
dec
icebp
mov
test
mov
bnd
mov
cmp
push
icebp
paddsw
sub
push
mov
mov
loop
fs
out
ljmp
ds
pop
jp
lods
ret
dec
js
add
sub
aas
pop
jle
push
xchg
add
loope
mov
cmpsl
les
in
add
push
or
lock
fisttpl
cltd
and
int3
into
lods
xchg
aaa
mov
outsl
pop
cmp
adc
pop
sbb
add
leave
adc
call
lahf
mov
pop
xor
add
pop
mov
push
ficoml
subb
aad
cwtl
insl
xchg
inc
sub
std
ret
sbb
push
push
inc
add
xchg
sarb
or
cmp
int3
cmp
push
loop
inc
fstps
sbb
int
mov
orb
jecxz
adc
or
out
dec
out
and
hlt
xchg
aad
inc
cmp
aam
sbb
aad
push
sbb
mov
sbb
aaa
inc
sahf
xor
clc
nop
or
mov
mov
and
dec
loopne
push
roll
xor
mov
xchg
das
xchg
xor
xchg
std
adc
sahf
xor
pop
nop
adc
inc
xor
scas
mov
pushf
add
shl
nop
cmc
aaa
and
hlt
dec
faddp
cmp
aas
add
mov
sbb
shl
jmp
ljmp
incl
fsubrl
push
mov
fdivrs
ret
mov
out
jno
add
xchg
adcb
mov
sub
jae
or
jle
fwait
out
fcompl
lock
cli
gs
bound
cli
clc
pop
mov
push
ds
or
add
cs
pop
xchg
loope
cmp
lret
jmp
cmp
call
cmp
pop
shl
xchg
fadds
pop
cwtl
cwtl
lods
lock
jle
std
add
pop
rcll
imul
inc
les
cs
push
mov
lahf
movsl
ret
loopne
pop
inc
xor
call
sti
push
aam
dec
test
inc
push
mov
jl
add
call
add
mov
call
push
xor
aam
aaa
pop
and
notl
cld
faddl
or
lahf
xchg
insb
adc
addl
lock
mov
inc
sti
sbb
pop
fdivr
or
mov
mov
mov
xchg
aas
jl
or
xor
sbb
mov
and
mov
adc
add
in
sbb
popf
mov
add
test
inc
and
push
mov
out
fwait
cmp
mov
cmpsb
ljmp
sbb
cwtl
clc
data16
outsl
mov
adc
inc
mov
push
cmpb
adc
scas
mov
bound
std
pop
push
cld
dec
xacquire
fldcw
mov
je
lods
add
iret
adcl
es
hlt
ss
les
scas
in
push
lahf
mov
or
mov
pop
xor
imul
dec
lret
jo
fs
ss
or
call
inc
xchg
ja
shl
js
outsb
cmc
andl
jnp
cmp
mov
int
outsl
add
out
enter
inc
xlat
add
sbb
das
les
daa
and
dec
mov
loope
xor
mov
stos
enter
add
in
bound
hlt
xor
add
stos
subb
cli
and
mov
and
pop
mov
les
ss
dec
cld
aaa
mov
push
lahf
xchg
aas
ds
and
add
xchg
add
add
push
ljmp
inc
adc
dec
mov
pop
jns
sbb
mov
mov
jb
add
iret
xchg
push
fdivr
adc
mov
adc
mov
mov
push
scas
aam
les
int
jns
xor
push
xor
pop
xchg
mov
je
sub
test
inc
cltd
loopne
mov
jmp
leave
jb
test
cmpb
ja
dec
pop
adc
cmp
rcl
out
mov
pushf
cs
xor
inc
inc
daa
jnp
dec
fstps
xor
adc
decl
sub
xor
sbb
orb
cmc
add
or
and
dec
xor
fimuls
pop
test
adc
add
adc
fbld
or
or
les
jp
mov
frstor
and
insb
mov
imul
jg
dec
push
mov
sbb
icebp
jmp
fisttps
add
and
pop
repnz
push
ljmp
mov
push
or
stc
inc
pop
cld
orl
add
ds
outsb
inc
pop
inc
add
lret
popa
iret
sbb
aas
or
push
add
adc
scas
jns
jl
mov
mov
cli
test
js
sub
std
dec
dec
outsl
ss
popa
sub
stos
dec
bound
inc
out
dec
mov
mov
ds
and
xor
jl
xchg
xor
push
and
stos
sub
sbb
fists
es
cmc
movb
pop
inc
pop
cmp
xchg
adc
xchg
ret
mov
xor
jge
push
ljmp
pushf
add
add
jne
test
lds
push
outsb
aam
xchg
fisttpll
push
rcll
les
push
add
dec
sbb
out
xlat
mov
sbb
sub
pop
adc
cld
hlt
add
push
pop
pop
dec
mov
jmp
icebp
and
ja
loop
int
mov
enter
mov
es
in
sbb
adc
pop
ficompl
pop
clc
or
dec
pop
and
mov
lods
pop
pop
sbb
add
loopne
cli
sbb
mov
lods
mov
mov
mov
inc
inc
xchg
xchg
leave
into
roll
jge
aas
adc
mov
jecxz
add
adc
adcl
jbe
lret
and
push
cli
and
pop
into
out
sbb
stos
jae
sub
add
add
add
pop
jmp
loope
fs
sbb
inc
mov
in
xor
gs
xchg
lock
ret
bound
mov
add
out
and
loop
addb
sahf
xor
mov
leave
loopne
adcl
mov
dec
pop
addl
adc
xchg
mov
ljmp
cwtl
icebp
add
je
jae
jg
lock
inc
add
cmpsb
call
mov
push
sub
mov
jmp
in
sbb
ds
jg
test
orb
add
out
cld
push
mov
lock
lret
add
mov
xchg
xchg
xchg
cwtl
sub
inc
lock
pop
sub
sbb
lcall
jg
push
xor
mov
push
mov
xchg
ljmp
jle
inc
sub
mov
rorb
dec
add
roll
or
cmpsb
lcall
rclb
push
bound
inc
sbb
lcall
dec
adc
imul
aas
dec
dec
add
inc
inc
xchg
scas
es
jmp
imul
clc
ret
push
push
push
jns
add
jmp
aaa
jbe
pop
push
cmp
ljmp
orl
jp
roll
test
ljmp
dec
out
call
pop
into
loopne
scas
lock
cltd
cwtl
inc
loop
addb
or
movsb
jnp
adc
popa
dec
mov
jbe
xchg
jp
test
pop
or
stos
xchg
cmp
dec
and
lods
mov
mov
add
decb
pop
pusha
cltd
jno
fwait
adc
mov
jg
cld
mov
xchg
jg
inc
inc
or
mov
jo
out
lret
lcall
xchg
sbb
adc
xor
mov
add
aad
jecxz
adc
andl
inc
pop
fsubrs
loope
ficoms
scas
shrb
pop
and
cmp
inc
roll
adc
fidivl
aam
push
cs
jg
mov
test
push
xchg
int3
insb
push
dec
sbb
fldl
push
ret
sbb
test
adc
js
cs
jbe
shlb
arpl
int
mov
inc
lods
and
orb
cmpb
outsb
adcb
xchg
inc
push
mov
sbb
add
cwtl
sub
sahf
sahf
adc
test
pop
mov
pop
or
call
hlt
ljmp
inc
xor
aas
bound
push
lret
outsb
loop
mov
jno
shll
lahf
mov
out
add
pop
scas
fs
add
pop
inc
push
cmp
xchg
pusha
pop
repz
sub
push
fistl
pop
xchg
jns
popf
add
and
popa
push
inc
daa
js
out
push
mov
fdivrl
andl
mov
sbb
dec
or
sti
pop
sub
bound
jmp
fs
inc
xchg
adc
adcb
sarl
and
xor
jmp
loopne
inc
add
out
int
dec
dec
mov
lock
ss
add
cld
or
enter
xlat
add
sti
xor
pop
lds
push
pop
popa
inc
jb
daa
test
cwtl
fs
or
hlt
paddusw
fistpll
adc
out
js
or
ficompl
in
lock
data16
pop
pop
mov
jecxz
push
lahf
cmp
pop
loope
or
stos
add
pop
aaa
cmp
push
mov
imul
xchg
iret
jmp
leave
adc
ret
cmp
add
in
mov
notl
add
sub
or
out
adcb
and
push
cwtl
sub
mov
push
xor
mov
adc
jmp
adc
enter
xchg
test
ds
stos
and
movsb
inc
cmp
and
push
mov
inc
and
fildl
and
pop
push
stos
mov
mov
sbb
aas
push
push
mov
or
loopne
in
int
inc
in
dec
xchg
rorl
xchg
push
lds
xor
das
cli
push
xchg
jmp
push
sarl
sbb
movb
mov
mov
jp
add
lcall
pop
push
mov
pop
adc
scas
pop
dec
fs
int
sbb
sbb
loop
push
mov
sahf
les
push
stos
sbb
test
add
jp
cmpsl
es
sarb
adc
xor
add
xor
and
movsb
stos
mov
dec
mov
insb
xor
jg
out
into
leave
add
pop
dec
call
stos
lret
jge
rcrb
add
push
shll
bound
add
loope
mov
and
or
sub
ljmp
cs
stos
bound
addl
adc
jmp
or
push
lds
push
roll
sti
pavgb
dec
incl
aas
test
pop
mov
pop
mov
rorb
push
test
fs
data16
add
dec
arpl
cld
lea
cmpsb
jb
push
mul
aaa
aad
mov
inc
dec
xchg
ficompl
xor
dec
lahf
aas
push
mov
xchg
jp
icebp
shr
andl
fidivs
sbb
mov
jne
in
testb
inc
cld
add
sbb
and
je
xchg
adc
in
add
fistps
iret
cwtl
mov
and
mov
nop
popa
jmp
lds
outsb
mov
rorb
ret
inc
xchg
pop
test
mov
mov
fildl
scas
push
fmuls
inc
inc
das
call
ficompl
mov
lods
loopne
sub
add
loopne
cmpsb
and
test
aam
cmpsl
mov
sarl
xchg
pop
push
cmp
and
inc
and
xor
jecxz
xchg
mov
pop
add
loopne
or
ds
daa
mov
loopne
inc
ds
call
fisttps
cli
std
inc
inc
test
aad
inc
fbstp
stc
add
xchg
fmull
add
push
add
and
hlt
iret
fwait
ret
fidivrs
rcll
rcll
ljmp
loope
lock
fdivs
aaa
test
lock
push
sub
cmc
adc
std
popf
les
enter
and
cmc
jmp
les
loopne
push
js
lds
ds
push
jbe
inc
mov
inc
sahf
and
lock
mov
dec
push
clc
jl
lea
ret
orb
push
aas
or
lret
outsb
pop
adc
pop
outsb
mov
leave
sub
dec
pushf
nop
out
add
xchg
push
insb
and
push
mov
js
add
inc
jnp
sbb
mov
iret
out
lea
add
pop
push
sbb
mov
les
sbb
fbstp
cwtl
imul
adc
adc
decb
jo
add
dec
mov
add
test
adc
pop
cmpsb
lds
mov
ss
pusha
mov
push
dec
add
js
lahf
stc
xlat
push
fnsave
cmp
xchg
lret
out
out
enter
pop
fistl
pop
rol
add
xor
mov
jle
and
loope
sbb
push
inc
cwtl
addb
in
mov
add
lahf
in
add
mov
inc
dec
rcrb
loop
xchg
jecxz
pop
add
sub
xor
jns
arpl
addb
xor
stos
adc
cltd
mov
cmp
mov
loope
pop
adc
mov
roll
jle
ljmp
stos
mov
fdivrs
xor
lds
inc
jns
lcall
jl
mov
jl
cmp
pusha
fcmovne
aam
mov
inc
sub
aas
sub
xchg
mov
movsb
inc
lock
xchg
decb
cmp
cmpsb
out
push
popf
insl
gs
cli
inc
xchg
dec
xor
fsubs
rcl
inc
pusha
mov
ss
jecxz
dec
ret
pop
cmp
adc
push
add
sti
fadds
push
push
clc
mov
std
dec
cmp
or
or
dec
mov
stc
mov
dec
mov
sub
pop
jecxz
es
out
ret
push
fisubs
mov
or
add
cmp
repnz
adc
loopne
jecxz
adc
lret
sbb
dec
bswap
ficompl
cmpsl
dec
adc
or
in
loop
xchg
lods
inc
or
jg
lcall
sbb
nop
shll
fisubs
pusha
loop
es
test
out
inc
push
imul
xchg
push
movsb
out
repz
inc
push
adc
sub
js
dec
mov
rolb
scas
or
iret
and
dec
jae
outsb
paddq
ds
jo
jae
shll
popf
outsb
ret
and
jg
vcmpfalsepd
cmpsl
jnp
js
pusha
clc
rol
dec
cs
sbb
cmpxchg
loop
and
mov
addb
icebp
test
fldenv
xchg
inc
sti
testb
in
xor
in
push
push
push
shr
xchg
mov
xchg
pusha
inc
xchg
push
jg
mov
adc
dec
out
xchg
xchg
xchg
cmpsl
mov
jae
jb
dec
mov
repnz
add
int
pop
dec
cmp
cmp
sbb
jmp
ljmp
iret
sub
scas
adc
mov
add
jo
push
sbb
push
adc
adc
sbb
mov
inc
lock
inc
lds
adc
loopne
pop
mov
adc
ret
rclb
mov
in
clc
test
xor
adc
add
xchg
jbe
and
cmp
ss
jecxz
push
sbb
lea
dec
icebp
mov
jae
mov
sbb
and
and
and
out
rorl
hlt
push
fldl
jbe
les
xor
lret
pop
out
add
loope
xchg
adcb
lds
pusha
sbb
pop
lock
mov
sbb
in
arpl
mov
rol
js
loope
stos
jg
push
lea
adc
sar
sub
aas
and
mov
incl
jle
sbb
push
sbb
int
aad
and
or
dec
xchg
test
inc
jg
and
cmp
add
les
pop
dec
popf
ds
jle
xchg
loope
mov
dec
test
sub
xor
xor
xchg
subl
and
sub
sbb
dec
sbb
add
popf
push
push
pop
cld
mov
or
dec
pop
jbe
sub
pop
pop
and
mov
cmp
push
lods
cld
dec
xor
call
sahf
jne
nop
packuswb
mov
outsl
mov
dec
jne
push
stos
mov
push
call
icebp
pop
sub
fisttpl
push
xlat
sbb
incl
out
or
es
jmp
add
cmp
pop
scas
mov
gs
push
pop
jmp
loope
push
pushl
jno
adc
test
push
cmp
mov
cmc
mov
mov
cmc
test
in
or
cli
mov
js
ret
cmpsb
sbbb
fildl
outsb
and
filds
inc
mov
or
or
cli
xchg
adc
hlt
scas
jbe
push
jg
les
fsubrs
add
adc
repnz
in
scas
xor
pop
dec
es
bound
sub
ss
push
inc
jmp
out
jg
cmp
add
cmpsl
in
mov
add
flds
pop
push
and
inc
or
daa
test
mov
pop
jbe
pop
scas
cld
les
sbb
adc
scas
lods
sahf
cwtl
or
jp
sbb
call
cmp
sti
adc
push
push
cmpsl
or
or
mov
cmp
movsb
in
lds
hlt
sub
ret
cmp
rolb
sahf
mov
call
outsl
or
add
inc
and
ds
or
jecxz
ret
adc
jns
ljmp
popa
fistpl
or
or
xor
push
mov
inc
aas
adc
cli
ja
jae
inc
mov
push
dec
pop
jns
push
lods
jb
fst
xor
mov
roll
mov
dec
add
jle
test
jmp
mov
movsb
outsl
xor
std
adc
add
outsb
ljmp
jb
int
add
xchg
sub
outsb
adc
ret
insb
test
cmp
or
aas
cld
add
mov
mov
mov
leave
xor
xchg
push
jnp
inc
ret
js
rolb
sahf
loope
enter
aaa
adc
lahf
mov
arpl
loop
leave
push
cmp
xor
adc
inc
mov
xchg
lock
xchg
out
out
jl
test
mov
cli
lret
pop
xchg
imul
xlat
add
ds
sbbb
push
cs
out
icebp
or
in
xchg
push
push
iret
mov
ds
rclb
shll
test
js
jae
mov
icebp
out
lahf
test
push
mov
xor
out
loop
and
cs
sahf
lcall
mov
adc
cli
xchg
inc
jmp
mov
dec
test
mov
rorl
idivl
cltd
leave
ffreep
pop
add
rclb
insb
push
dec
clc
push
xor
mov
loope
inc
sbb
dec
fcoml
in
repnz
fnsave
jae
dec
les
into
inc
pusha
mov
xor
mov
dec
mov
cmp
mov
insb
fistpll
xchg
add
pop
push
adc
sbb
lock
popa
add
mov
int3
popa
push
xchg
adc
push
fdivrs
mov
pushf
inc
cmp
adc
cltd
sar
jge
pop
movsb
stos
mov
cmpsb
jp
mov
enter
xchg
adc
lcall
dec
adc
or
sti
or
lcall
or
mov
fadds
add
sbb
data16
fdivrp
lahf
xchg
xchg
or
pop
add
push
pop
sbb
test
or
mov
orb
add
sbb
mov
mov
lahf
inc
popf
es
lahf
inc
divb
xor
add
sbb
inc
pop
push
movb
ljmp
sub
sbbb
jae
ja
and
push
nop
lret
or
mov
dec
xchg
add
push
sbb
fldl
pop
es
data16
loope
pop
cld
cld
repz
add
pop
sub
data16
leave
pushf
or
lods
lods
cmpsl
jle
dec
rorb
repnz
test
mov
bound
aas
test
cmp
cmp
repnz
es
pop
mov
add
pop
movsl
das
inc
jne
adc
xor
dec
pop
or
ljmp
mov
adc
add
xor
push
pop
movsl
aas
xor
inc
rcll
sbb
aas
inc
icebp
xchg
les
xchg
push
cmpsb
lea
pop
dec
inc
mov
out
mov
cmp
mov
inc
orb
rcrl
popa
cmpl
adc
outsb
lock
xchg
sbbb
add
push
pop
pop
test
sarb
mov
or
dec
lret
adc
dec
fwait
add
lock
fcompl
outsl
mov
insb
sbb
popw
xor
jbe
cmpsb
pop
mov
mov
cld
dec
iret
fwait
pop
sub
sbb
push
adc
jg
aam
add
and
push
lcall
lds
push
adc
inc
loop
pop
jns
stos
cmc
inc
movsb
out
adc
mov
mov
add
xchg
xchg
rcrl
add
add
imul
push
add
push
pop
pusha
es
jg
sub
cmpsl
in
leavew
fcomp
ficoml
mov
orb
push
lock
out
sub
mov
ds
scas
les
inc
sbb
inc
iret
xor
data16
imul
xchg
adc
mov
ds
cmc
mov
andl
sub
cmpsl
out
adc
push
lea
fisubrl
jg
sbb
cli
mov
mov
or
out
add
shrb
push
adc
push
mov
add
sbb
mov
xchg
in
test
icebp
fnstenv
push
inc
mov
subl
pavgb
cwtl
mov
xlat
cmc
bound
jb
sub
jecxz
pop
icebp
mov
inc
sub
cmpsl
jp
mov
movsl
fiaddl
js
enter
sbb
sbb
imul
incl
stos
repnz
ret
dec
mov
ret
les
mov
and
cmpl
adc
shrb
mov
pop
inc
stos
xchg
jge
jg
dec
incl
test
dec
cmpsl
add
sub
popa
std
add
rorl
lcall
pop
lock
or
adc
cmc
xorb
ljmp
and
in
xor
jae
adc
fbld
push
add
pop
add
xchg
loop
mov
xor
ljmp
ljmp
or
mov
cmc
pop
stc
sub
repnz
mov
adc
mov
xchg
jno
mov
pop
call
xchg
in
sbb
or
xchg
test
data16
or
add
inc
cld
sbb
adc
loope
add
sub
lahf
jns
andb
js
xor
leave
jg
pop
ret
inc
ret
add
xor
push
sbb
lahf
inc
jl
mov
loopne
push
sbb
and
scas
push
popa
xchg
aas
cmpb
sub
mov
or
dec
cwtl
rcll
pop
jg
jb
fdivrp
pop
scas
jo
and
dec
cmpsl
call
cltd
mov
or
push
pop
cltd
sahf
cld
call
das
je
mov
dec
div
inc
jecxz
stc
aad
push
add
xchg
pop
es
or
adc
inc
push
ja
sbbl
in
fistps
pop
sub
fidivrs
sbb
jp
or
stos
adc
loopne
inc
lahf
inc
xor
gs
aad
ds
lods
pop
jns
ret
pop
mov
je
push
lock
fwait
pushl
push
in
cmp
stc
mov
fbld
cmp
in
sbb
aad
pusha
loopne
sbbb
push
and
add
fsubrl
pop
or
jbe
outsb
mov
pop
lods
adc
in
jne
daa
mov
push
adc
cs
sbbb
pop
jnp
mov
pop
pop
dec
jl
iret
ret
cmp
add
lret
daa
or
inc
push
hlt
dec
push
mov
cld
xor
sbb
daa
and
jmp
out
jnp
or
sbb
or
movsb
mov
add
pusha
adc
and
push
and
ja
jo
inc
test
xor
pcmpgtd
test
or
xor
pusha
and
or
bound
cmpsb
loope
call
aad
lock
jecxz
push
xchg
test
sub
add
mov
pop
sub
call
dec
shlb
lods
xor
or
dec
stos
inc
popf
push
bound
enter
decl
xor
clc
std
or
mov
push
and
adc
pop
jns
and
inc
in
dec
hlt
pushl
rorl
hlt
push
sub
sbb
add
lds
dec
mov
add
jno
mov
mov
jnp
sbb
add
mov
daa
lea
imul
push
adc
rclb
std
out
inc
or
fs
inc
sbb
int3
push
mov
mov
sbb
add
pop
ljmp
dec
inc
push
sbb
mov
shrb
dec
lods
adc
out
bound
aaa
sub
xor
sub
xchg
jp
test
sbb
add
lea
stos
lret
push
or
hlt
mov
sahf
nop
sbb
ss
in
lea
xor
lret
in
jp
lret
repnz
or
and
in
std
mov
lcall
push
clc
jle
out
je
movsb
js
test
insb
cmp
out
cmp
push
dec
adc
sub
jle
push
add
popa
clc
ret
push
pop
enter
jecxz
call
out
mov
shr
lahf
mov
add
lcall
push
inc
jae
adc
push
inc
out
sbb
pop
movb
xor
shld
xchg
ja
fsubp
pusha
test
bound
das
andl
inc
loop
cmpsl
xor
pop
adc
stos
in
inc
test
fildll
jmp
aad
xchg
sbb
or
fdivl
das
xor
imul
addb
mov
bnd
ljmp
xchg
imulb
jl
mov
fcomi
mov
push
mov
out
daa
ds
xchg
std
ljmp
pop
nop
cmpsb
pop
inc
hlt
and
lods
cmp
add
icebp
inc
push
add
push
cmpsl
cmp
fwait
mov
cmp
inc
cmp
pusha
das
pop
data16
xchg
cmc
or
pop
dec
dec
bnd
mov
xchg
push
cli
out
sbb
add
dec
adc
add
or
mov
mov
cmc
lock
mov
test
sahf
and
mov
movsb
inc
mov
nop
dec
or
inc
ja
addr16
sub
sub
or
and
inc
dec
out
inc
mov
adc
pop
mov
mov
ds
fcmovnu
das
in
mov
loop
adc
jle
xchg
icebp
rcll
xor
jg
sbb
adc
or
ss
das
clc
test
sbb
jl
sbbb
sbb
in
add
xor
int3
add
mov
mov
pop
xchg
pop
sahf
xor
mov
cmc
jb
popf
xor
add
sbb
inc
imul
mov
je
in
js
int3
add
call
lcall
jge
pop
mov
xchg
add
push
and
add
aas
insl
shll
sbb
or
add
inc
ljmp
pop
out
lret
insb
mov
pop
addr16
add
add
je
iret
lret
jo
sbb
loope
mov
test
ret
mov
inc
out
sbb
jmp
cmpsl
add
add
xor
or
adc
dec
mov
cli
adc
mov
xor
ret
decl
lock
rolb
jo
mov
idivl
mov
movsl
mov
xor
jge
outsl
add
and
sub
rclb
adc
mov
mov
mov
inc
xchg
out
and
xchg
or
and
mov
and
jecxz
shrl
loop
aas
iret
scas
jo
and
push
xchg
or
push
push
bts
ret
or
mov
lcall
insb
cld
call
mov
aam
mov
add
adc
fnsave
or
into
sub
hlt
add
ror
mov
test
out
loop
icebp
aad
and
out
dec
cld
loopne
test
xchg
add
mov
sub
xorl
mov
adc
sbb
inc
lock
push
aas
je
mov
ss
fimuls
jns
cltd
int
test
adc
jmp
ljmp
test
add
cmp
iret
mov
pop
loope
mov
cmp
std
pop
and
sub
in
mov
loopne
inc
xchg
xchg
clc
popa
addr16
sub
in
clc
repz
jg
jecxz
bound
pop
sub
xchg
movsb
mov
adc
pushf
add
sub
out
mov
jecxz
pop
repz
cmpsb
cmp
inc
xchg
les
mov
push
daa
push
push
xor
inc
incb
sub
sbb
test
mov
xchg
jmp
hlt
or
xchg
sub
xchg
sbb
cmc
addr16
decl
movsl
mov
push
js
adc
stos
fildll
xor
sbb
inc
repz
adc
outsl
rorb
xor
mov
add
aaa
into
repz
orb
test
jecxz
add
clc
and
pop
or
movsb
sarl
adc
int3
pop
fsts
clc
enter
ror
xchg
adcb
add
add
or
arpl
cmc
lea
pop
bound
popf
repz
push
and
mov
outsb
in
add
inc
in
icebp
pop
or
pusha
dec
add
ds
add
lcall
and
shrb
mov
push
clc
jg
push
int3
pop
ret
out
sbb
insb
add
pop
out
insl
fwait
and
cmp
mov
idiv
iret
mov
sbb
insb
nop
push
je
cld
scas
xchg
aas
push
inc
cmp
pop
adc
scas
clc
push
adc
out
orl
fists
lock
xchg
cmp
sti
aad
adc
lret
test
ds
cli
lea
cmp
fdivs
and
mov
and
pop
pop
xor
in
mov
mov
jne
pop
push
mov
hlt
popf
orl
mov
mov
or
mov
dec
push
mov
imul
pop
popl
inc
push
or
std
adc
rclb
jo
cs
mov
pop
sub
cvtpi2ps
and
push
sub
fiadds
jge
mov
lcall
icebp
ja
pop
gs
test
clc
jmp
add
flds
sbb
shll
cmpsl
lcall
sbb
int3
push
jg
sub
repz
xor
inc
popf
push
jmp
mov
push
mov
shll
aam
ret
cmc
jnp
cmpsl
xor
insb
inc
insb
inc
leave
out
sub
hlt
mov
xor
stos
loop
lcall
add
cltd
sbb
mov
ret
aaa
test
push
aaa
add
pop
lock
ss
add
insb
call
or
test
push
mov
inc
xor
aad
repnz
mov
mov
xchg
fiaddl
sbb
rolb
hlt
xlat
lret
sbbb
pushl
out
mov
inc
lods
mov
mov
pusha
and
mov
nop
icebp
push
inc
shll
xorb
and
dec
sbb
sbb
addb
mov
xlat
ret
push
or
lret
jae
dec
xor
fstpl
decl
ja
mov
push
das
xorb
pop
add
sub
inc
jmp
jnp
adc
xchg
xchg
add
lea
and
out
xor
and
shlb
lods
push
jb
stos
push
jg
mov
test
fadd
or
loopne
aad
dec
in
or
inc
mov
inc
out
inc
iret
int
or
adc
or
pop
arpl
mov
xchg
dec
push
push
mov
mov
arpl
jp
shl
push
stc
jg
or
mov
stos
inc
aas
dec
mov
popa
ret
punpckldq
xorb
movsb
xor
test
cmp
scas
lcall
not
xor
stos
in
shlb
sub
and
orb
and
jnp
or
cmp
mov
xchg
inc
cmp
mov
xchg
add
mov
loop
lahf
scas
adc
sub
iret
mov
cli
mov
sub
mov
cmpsb
dec
and
xlat
aas
lods
call
xchg
ret
mov
hlt
lods
loope
ljmp
pop
push
mov
xor
adc
dec
lock
aad
sti
fwait
lcall
shll
xchg
add
xor
pop
inc
adc
hlt
out
insl
lds
xchg
mov
push
xchg
test
add
ficoms
mov
push
add
xor
inc
cmp
sub
lock
xor
sti
pusha
lret
add
hlt
stos
mov
clc
xlat
iret
outsl
xlat
mov
lods
or
es
xchg
lret
es
or
inc
mov
or
push
inc
push
xchg
out
pop
add
pop
pop
push
mov
or
add
cmpsb
mov
ret
mov
repz
mov
inc
or
inc
popa
mov
sti
inc
push
jle
mov
and
repz
mov
aaa
ja
add
hlt
cmc
das
lret
xor
std
outsl
mov
inc
fisubrl
outsb
and
sbb
iret
add
pop
add
call
sti
jge
add
inc
xchg
out
movsl
add
pop
aad
arpl
cmp
sbb
arpl
and
ljmp
xor
and
jmp
pop
mov
pop
mov
mov
addr16
call
xor
mov
movsb
push
pop
add
aam
loop
jo
roll
loop
ljmp
inc
insb
mov
inc
cmp
sti
pushf
add
fsts
aas
std
pusha
outsl
pop
aam
pop
sbb
add
out
int3
lcall
jmp
push
clc
call
cmp
add
lahf
iret
hlt
dec
pop
sub
decb
push
cmc
jle
push
and
aas
add
mov
xchg
sahf
adc
loop
jo
xor
jbe
add
in
xchg
ss
test
push
mov
jmp
shlb
ficoms
inc
rep
pop
adc
inc
xor
adc
int3
lahf
test
mov
pusha
sbb
fcmovnu
mov
inc
ret
test
sub
aam
dec
adc
inc
test
jecxz
and
mov
add
addb
and
clc
mov
dec
loop
sub
inc
ljmp
mov
call
pop
dec
cmp
mov
cmpsb
sub
fcomi
sti
and
mov
inc
loop
int
shll
je
add
nop
xchg
mov
add
sbb
push
sub
adc
push
mov
push
aad
call
fsubl
push
sub
enter
cmpsl
adc
imull
or
sub
decl
mov
sar
push
shll
mov
xchg
xorb
lea
sub
ljmp
xorl
inc
inc
fsts
sbb
jo
inc
xor
aas
and
push
push
movsb
add
mov
js,pn
jmp
add
leave
enter
ret
cmp
adc
lock
fisttps
cmp
and
cmpl
cld
mov
cltd
adc
fiadds
and
mov
xchg
mov
sar
test
loope
push
lcall
stos
xor
inc
or
aaa
cmp
xor
scas
test
pop
mov
sub
pusha
lds
lock
shll
mov
jno
mov
sbb
icebp
cmpsb
pop
out
inc
add
arpl
mov
sbb
and
sbb
test
loop
scas
fidivrl
pop
mov
shlb
arpl
mov
aad
jg
jae
xorl
sub
mov
jle
sar
hlt
imul
adc
in
iret
dec
cmp
ljmp
in
fs
sahf
mov
mov
ja
adc
stos
cwtl
roll
stos
sub
outsl
and
out
jl
popa
mov
andb
xor
mov
incb
pushf
aaa
dec
and
icebp
pop
push
adc
repnz
sahf
test
xorl
inc
popa
cmc
sub
xor
stc
adcl
mov
ja
mov
jb
xor
jnp
std
stos
push
cwtl
arpl
mov
jecxz
fdivs
in
jmp
jne
nop
xchg
push
int
outsl
jnp
pushl
pop
cmp
lret
jnp
lahf
cmc
dec
dec
push
adc
test
pushf
aam
scas
adc
jge
mov
inc
xlat
popf
xor
test
push
je
pop
gs
sbb
mov
cs
jp
or
cmp
add
mov
xchg
mov
leave
clc
mov
or
sub
push
mov
insb
pop
and
adc
mov
repz
incl
addl
pop
cld
cmp
pop
cmpsb
xchg
decl
add
and
dec
lods
adc
xchg
pop
cmpsb
popf
clc
ljmp
cwtl
xor
rcll
stos
sub
pop
mov
lods
dec
mov
dec
lock
incl
xchg
test
mov
add
iret
rorl
xchg
shlb
mov
stos
sbb
mov
mov
ljmp
push
mov
pop
mov
shrb
or
movntq
push
add
mov
add
push
mov
int
test
jg
loopne
lahf
inc
dec
add
jecxz
xchg
loopne
notl
push
js
mov
mov
jnp
insb
push
std
paddb
push
push
jp
xor
cmp
add
xor
pop
data16
rol
sti
inc
jg
xor
fwait
mov
adc
js
add
cmp
adc
pop
push
das
adc
adc
rorl
popl
push
movsl
push
mov
fidivrl
push
sbb
jmp
mov
cld
mov
fstp
sub
rol
das
push
lock
xor
outsb
inc
test
movsb
cmc
outsb
lret
add
inc
clc
test
xchg
push
and
ret
mov
add
in
imulb
dec
xchg
inc
sbb
mov
leave
xor
xchg
sbb
decb
pop
shl
push
cmc
lcall
pop
xor
and
fs
jp
mov
mov
push
mov
add
loop
push
dec
test
sti
movsl
sbb
popl
mov
sub
scas
dec
fisttps
add
mov
adc
outsb
fdiv
and
repnz
lds
add
sub
mov
cmp
jb
imul
mov
mov
dec
and
push
lock
xlat
clc
dec
test
pop
aas
push
fwait
mov
xchg
push
inc
icebp
call
sahf
test
pop
cmpl
ljmp
movsl
sbb
cld
outsl
decl
pop
sub
mov
dec
inc
cmp
mov
mov
lock
int3
xor
cmp
in
imul
repz
mov
pop
jl
mov
inc
or
xchg
fnstcw
sub
adc
movsb
sbb
sub
mov
imul
ret
mov
rolb
xchg
add
inc
ror
clc
lcall
test
dec
pop
scas
adc
repnz
fisttpl
adc
or
mov
xlat
xchg
loop
pop
cltd
sbb
xchg
cmp
cmp
push
jg
ret
call
shlb
enter
call
mov
xor
inc
dec
adc
mov
mov
or
das
je
push
std
aaa
mov
mov
jo
xor
mov
add
movsb
push
enter
jg
inc
dec
pusha
notb
push
test
cmp
out
decl
pop
out
lock
movsl
add
xchg
in
lret
add
dec
pop
xor
jnp
jge
adc
cmp
adc
adc
jg
nop
aas
xchg
pushf
xor
jne
add
or
sub
push
pop
loope
or
xchg
cmpsl
pop
sub
dec
std
incl
inc
cld
stos
xlat
dec
mov
cmp
adc
lcall
mov
jg
ss
and
int3
add
adc
mov
sbb
lcall
or
or
xchg
push
aas
test
mov
pop
icebp
sbb
or
nop
cmc
fimull
pushl
mov
std
leave
push
mov
es
mov
fcoml
clc
mov
cmpsl
and
mov
adc
mov
sti
lea
sbbl
xor
scas
or
and
inc
rcrb
inc
dec
cld
les
test
pop
add
movsb
outsl
shrb
movsl
xchg
push
or
in
inc
loopne
testb
in
pusha
push
lret
clc
mov
adc
push
lcall
jge
js
mov
decb
sbb
int
popa
adc
inc
ss
in
in
incl
pop
xchg
scas
push
and
aam
mov
inc
les
lods
loope
enter
and
mov
sbbb
loopne
push
les
fildll
cmp
loopne
sub
clc
inc
or
sub
pop
idivl
enter
dec
inc
fs
pop
in
add
xchg
lcall
clc
cmp
loop
sub
xor
mov
sub
bound
inc
or
mov
ret
loopne
pop
cltd
mov
mov
test
push
ss
mov
ljmp
enter
loope
inc
bnd
incl
outsl
aad
add
cmc
lret
cs
jno
xor
mov
scas
mov
cmc
push
hlt
push
out
nop
jle
sbb
sub
sbb
stos
pop
pop
dec
clc
loope
lcall
roll
aas
or
cld
push
push
pop
mov
add
xor
add
add
fcmovb
faddp
mov
inc
mov
daa
mov
dec
push
or
xchg
jge
dec
jge
out
push
mov
jmp
jecxz
and
imul
inc
mov
ljmp
aam
pop
ljmp
jb
mov
push
or
stos
insb
xchg
std
pop
inc
dec
cmp
in
and
in
and
push
pusha
and
mov
cmp
push
push
mov
add
xor
test
incl
adc
enter
add
xor
inc
cmp
add
mov
int
sub
outsb
ret
mov
out
cmpsl
push
dec
negb
inc
call
shll
cmp
cmp
pop
mov
mov
push
and
add
sti
aas
cmp
out
shlb
add
mov
sbb
or
xchg
cmp
ljmp
sbb
sahf
adc
into
xlat
jns
mov
push
push
jg
jo
sub
dec
aam
sti
pop
mov
subb
xor
push
jmp
fbstp
dec
cmp
mov
imul
sub
and
adc
inc
jno
push
stos
add
outsl
xchg
fisubl
add
sub
cmp
push
arpl
repnz
mov
dec
mov
add
rolb
pop
sub
mov
or
into
add
dec
int
hlt
dec
inc
cmp
mov
lcall
fiadds
xor
adc
ret
sub
mov
lret
push
cli
add
dec
fdivl
sbb
dec
push
mov
pop
out
fisubs
cmp
lods
pop
and
mov
das
dec
push
xchg
and
sub
pushl
sub
add
xchg
and
push
mov
inc
dec
stos
push
cmp
xor
lahf
movsb
inc
repz
mov
sbb
adc
fadds
lahf
icebp
jmp
jle
cwtl
addr16
outsl
lret
or
sub
jg
jnp
sti
shlb
pop
adc
imul
lcall
mov
out
mov
hlt
sbb
lcall
ja
gs
mov
out
les
mov
adc
lahf
subl
push
retw
sbb
mov
mov
jp
pop
mov
test
fs
or
mov
andb
jmp
adc
adc
pop
out
popf
ret
stos
push
sub
push
aas
out
and
and
lock
ljmp
fistpl
mov
adc
lcall
push
inc
adc
ret
mov
lahf
jp
push
fdivrl
sbb
inc
inc
sbb
mov
shrb
aam
ljmp
cltd
mov
lock
add
pushf
push
mov
jo
dec
adc
enter
push
xor
in
jp
addr16
insb
mov
andb
push
jg
outsb
or
pusha
mov
ret
sub
pop
test
ljmp
xlat
pop
ss
xlat
add
addr16
mov
cmp
mov
xchg
xor
and
adc
aas
insl
inc
jle
aaa
repz
lret
fs
fnclex
sar
sub
incl
xlat
sbb
testl
jmp
cmp
cmp
push
sbb
bound
shll
int3
push
int3
fisttpl
push
outsl
test
mov
adcl
sbb
in
in
sub
js
xchg
push
popf
faddl
sbb
mov
lret
mov
or
add
add
cld
ret
das
sarl
mov
pop
and
mov
push
fldenv
jl
inc
dec
push
mov
push
ljmp
cld
dec
inc
pop
jmp
lock
imul
mov
loope
inc
cltd
lcall
addr16
jl
push
xchg
push
test
jg
cmp
add
stos
and
mov
ret
cwtl
imul
mov
pop
leave
leave
sub
scas
jg
call
bound
dec
das
mov
mov
mov
inc
decb
xchg
imul
test
mov
movsl
outsl
xorb
or
jne
xchg
mov
pop
or
cmp
jg
adc
and
nop
sbb
mov
jo
xchg
mov
pop
cmp
stos
js
int3
mov
dec
mov
mov
mov
sub
inc
lea
or
aas
pop
jecxz
mov
add
add
sub
data16
aaa
cs
ret
incl
jp
xor
into
dec
in
adc
imul
inc
or
mov
jmp
push
les
pop
cmc
lcall
leave
fidivl
jnp
stos
add
jae
cltd
incl
xchg
addb
out
and
popf
aas
mov
fsub
cli
jg
pop
mov
add
sub
ss
xor
nop
fcoms
andl
cmp
lret
jg
and
pop
mov
sub
mov
into
fwait
out
sbbb
xchg
xchg
dec
shl
js
decl
xchg
movsb
ds
dec
dec
insl
push
and
loope
clc
sbb
test
test
xchg
test
jge
pop
clc
inc
sahf
imulb
jmp
ljmp
cmp
sbb
cmp
test
cld
dec
mov
jns
movsb
sbb
lcall
bound
outsl
adc
incl
add
loope
mov
fimull
add
dec
xor
es
movsl
pop
mov
add
ret
cmp
test
jo
sbb
fisttpll
jmp
xchg
scas
repz
clc
aaa
lock
pushf
in
xor
inc
insb
sbb
or
jle
movsb
int3
mov
insb
stos
int
jo
add
subb
fmuls
mov
dec
aas
xchg
mov
xor
pop
addl
mov
clc
push
push
nop
fsubp
mov
mov
lea
add
add
repz
xchg
sub
add
cs
in
call
in
or
je
ljmp
popf
incb
les
or
cwtl
push
incb
push
mov
adc
jp
push
push
testl
inc
dec
cld
in
movsl
cwtl
repnz
nop
out
pushf
xchg
jg
cmpsb
mov
insb
scas
mov
sahf
stos
push
lock
ret
sti
test
cmp
ja
clc
and
sub
push
mov
idiv
pop
push
add
movsb
cs
push
xchg
nop
cmp
adc
mov
addr16
adc
and
add
mov
jl
rorb
bound
jg
aad
or
cmpsb
lods
hlt
pop
testb
aad
aaa
inc
xchg
xchg
push
int3
int3
add
lret
test
sub
in
sub
jge
add
imul
add
cmpsb
mov
add
rolb
fmull
pushf
cmp
pop
shl
mov
cld
repz
and
xchg
and
shlb
adc
nop
bound
xchg
addl
cmpsb
mull
movb
mov
mov
dec
or
lret
fdivrs
inc
mov
imul
int3
mov
popa
sbb
mov
test
or
cld
push
inc
and
push
add
cmp
decl
mov
sbb
lock
sub
lcall
mov
fcompl
jne
jbe
adc
adc
outsb
push
push
jo
inc
sbb
in
stos
and
add
mov
add
push
out
xor
add
push
pushl
neg
loop
dec
cmp
sbb
cmp
cmp
add
pop
inc
call
xor
or
sbb
push
in
dec
icebp
call
call
mov
jp
addl
inc
push
push
push
aam
jecxz
lods
sahf
and
sbb
jg
mov
adc
lret
cmp
mov
scas
cli
mov
sbb
lods
sbb
out
sbb
sbb
push
imul
fistl
popa
inc
xchg
andl
into
cli
ja
leave
pop
inc
je
dec
les
ret
jl
pop
mov
loopne
xor
xchg
call
stc
xchg
or
push
insl
js
aas
dec
push
decl
adc
jbe
movsb
pop
loope
mov
repnz
xchg
push
mov
adc
inc
pop
daa
mov
dec
cmp
and
add
out
lds
lcall
or
add
test
mov
data16
add
dec
push
pushf
cmpl
pop
lock
imul
cld
pop
add
out
jg
test
pop
sub
mov
pop
int
out
or
xchg
sbb
push
mov
inc
ljmp
sbbb
lea
cmp
mov
sbb
xor
add
mov
stos
aam
cmp
and
fwait
or
cmp
pop
xchg
add
xor
movsb
lahf
mov
mov
pop
mov
sahf
test
or
scas
lret
inc
jecxz
fcoml
inc
pusha
lds
add
pop
sbb
jg
adc
mov
aas
add
add
stos
sub
sub
or
stos
andb
jl
cmp
movsb
jb,pn
xlat
pop
jo
xor
dec
std
mov
clc
test
sbbl
dec
or
cli
adc
sbb
jae
push
stos
mov
daa
xchg
cmp
jecxz
adc
cmc
rclb
imul
inc
nop
dec
push
cmp
icebp
fwait
sahf
fiaddl
mov
movsb
insl
cmpsl
scas
sarl
inc
xchg
imull
inc
cmp
rolb
inc
je
inc
mov
lds
adc
push
and
adc
push
outsb
int3
push
sbb
movsl
add
xchg
jno
mov
stos
insb
jl
pop
xor
iret
fwait
incb
add
xor
or
add
ja
lds
aam
push
icebp
inc
sarl
inc
aas
and
or
fucomp
adc
mov
mov
icebp
sbb
add
xchg
enter
adc
sbb
lret
rol
imulb
xor
add
xchg
dec
or
out
inc
mov
lcall
adc
push
dec
mov
jo,pt
sbb
jle
mov
call
mov
adc
mov
add
push
dec
dec
cld
cmp
xor
loope
dec
add
stos
icebp
rcl
adc
inc
adc
jg
jl
std
ror
push
or
adc
mov
fimuls
mov
pusha
pop
ljmp
call
js
popf
mov
pop
loopne
ljmp
jo
insb
stos
and
sbb
mov
mov
dec
sub
test
out
mov
add
xchg
dec
push
mov
sub
mov
or
ds
adc
mov
cmp
and
mov
pop
fstpt
lcall
and
loop
mov
sti
sub
loope
jb
fsubrl
add
cli
or
je
int3
mov
rol
shlb
dec
sbbb
mov
xlat
cmp
loop
lea
orb
mov
ret
sahf
mov
xchg
push
mov
pop
fs
arpl
mov
rcl
jns
sarb
iret
dec
mov
add
mov
xor
cmp
inc
punpckldq
test
jg
imul
fwait
addl
inc
sti
andb
ret
insb
push
and
lret
je
and
enter
aas
repnz
jg
adc
and
mov
dec
mov
int3
pop
lahf
add
inc
scas
test
mov
dec
adc
lret
ljmp
sbb
pop
cwtl
incl
adc
sub
daa
or
les
arpl
xchg
jbe
jl
push
leave
loop
enter
in
outsb
mov
inc
xor
xchg
dec
nop
mov
sti
push
dec
dec
xchg
dec
or
or
ljmp
and
sbb
add
sub
or
test
cmpsb
lret
add
jmp
cs
pmulhw
adc
loop
pop
es
mov
movsl
mov
cmpsl
or
sbb
or
dec
or
inc
mov
jg
inc
add
xchg
nop
rorb
and
sbb
mov
cmp
pop
repnz
adc
sti
scas
mov
jl
jb
dec
std
sbb
imul
call
mov
popf
inc
mov
fdivs
enter
lods
movsb
sub
fs
into
cmpb
imul
dec
je
cmp
cmp
xchg
nop
push
dec
inc
pop
test
loope
xchg
imul
mov
push
xchg
pop
test
popf
xorb
jns
or
fdivr
push
and
andl
rorl
sub
mov
and
add
jmp
test
cmp
jbe
inc
mov
sbb
arpl
lcall
dec
loop
mov
dec
add
jb
lret
sub
or
aas
clc
inc
inc
outsl
add
fs
mov
or
add
cmp
add
dec
call
cmp
cmc
shl
mov
cs
cli
jecxz
sbbb
add
pop
push
mov
sbb
lock
xchg
and
jg
sti
mov
arpl
in
dec
xchg
bnd
add
xchg
xchg
cld
pusha
add
adc
clc
or
iret
lods
add
in
mov
sti
gs
xor
push
mov
lcall
rcll
or
push
fimuls
xchg
push
ss
dec
lahf
inc
int3
scas
gs
xchg
pushf
orl
popf
out
and
sub
inc
jbe
pop
icebp
or
xor
inc
cld
sbb
inc
push
sub
jb
sub
mov
push
mov
inc
xchg
push
cmp
decl
insl
push
dec
add
in
pop
stc
mov
or
fsubs
ficomps
jl
jno
aam
push
mov
dec
jmp
test
popa
sub
out
mov
jp
sti
mov
repz
mov
add
cmovae
lahf
pop
cli
push
out
in
clc
jne
repnz
dec
mov
push
sbb
jge
xor
dec
aaa
cwtl
xor
mov
fisubs
adc
pop
fsubs
dec
xchg
dec
rclb
hlt
pop
jb
outsl
adc
add
add
pop
int
fstp
insb
and
dec
xchg
sub
sub
sbbb
sub
loope
lea
nop
jne
vphaddbd
daa
cmpsb
push
lods
hlt
add
out
cmpsb
bound
scas
imul
inc
fndisi(8087
movsb
push
lds
adc
mov
es
lock
mov
adc
pop
or
adc
xor
movsl
inc
push
outsl
sbb
push
jp
or
or
ja
jge
outsb
mov
lea
js
nop
ja
into
scas
shll
aam
pushl
pop
movl
inc
jo
clc
xor
mov
inc
xchg
xchg
cli
ret
xchg
dec
sti
imul
lahf
inc
lea
popa
pushf
push
iret
and
xor
cltd
hlt
pushf
daa
add
mov
sub
fpatan
add
pop
mov
pusha
fs
gs
mov
mov
pop
mov
xor
dec
xlat
mov
cmp
push
and
and
inc
out
inc
jmp
mov
cmc
dec
xor
add
inc
sbb
out
lods
push
cmp
cmp
rorb
sbb
sbb
dec
mov
adc
sbb
decl
nop
add
scas
and
dec
addb
adc
sub
pusha
adc
xor
aas
enter
jg
inc
push
lods
cmp
mov
dec
mov
and
scas
inc
pop
add
arpl
xchg
cwtd
push
lret
xchg
aas
mov
arpl
loop
sub
add
cld
movlps
add
jge
lcall
adc
xchg
pop
push
xor
lcall
inc
inc
stc
adc
mov
rcrb
sar
ret
cmp
mov
shl
bswap
xor
pop
dec
mov
cmp
scas
cmpsb
push
jle
int3
scas
cld
call
and
sub
insb
lcall
mov
mov
cmc
add
inc
repz
popa
mov
sbb
jg
pop
repz
loopne
sbb
in
dec
adc
dec
stc
lret
and
cmp
ss
cmp
cmp
in
add
push
movsb
add
xchg
jle
adc
test
cli
jle
fstpl
push
into
mov
cmp
popa
test
test
pop
sbb
pop
out
pop
or
add
or
cmpsl
add
nop
dec
push
jbe
and
movsb
pusha
mov
shlb
fucomip
lcall
std
xor
repnz
xor
and
dec
push
cld
lcall
xchg
jns
xchg
xchg
dec
mov
fbld
pop
movsl
add
mov
inc
jmp
or
adc
imul
pushl
add
iret
mov
bound
cltd
or
mov
std
push
orl
push
pop
inc
xor
iret
push
sub
jo
jg
scas
std
stos
sbb
and
xchg
inc
sbb
mov
rclb
xchg
cltd
mov
cld
xchg
ljmp
in
xchg
sbb
shrb
xchg
rclb
jle
nop
cmp
push
daa
insl
jne
sbb
enter
push
cld
inc
in
xchg
inc
daa
movsl
dec
jo
aaa
dec
jnp
pusha
xchg
lret
jbe
mov
sbb
push
add
push
or
cwtl
cli
pop
mov
xor
hlt
mov
cli
js
sti
jmp
movsb
add
roll
out
mov
inc
push
mov
lods
add
out
dec
std
sub
or
popa
and
call
nop
inc
jl
adc
or
mov
mov
or
jge
nop
or
or
insb
mov
loope
mov
fisttpll
add
inc
rol
ljmp
cmovne
add
bnd
or
jo
mov
mov
testl
test
push
or
cmp
mov
gs
fs
cmpsb
test
mov
mov
int
test
popa
and
into
adc
adc
inc
mov
push
repz
push
pop
cmp
aaa
xor
cltd
xchg
push
or
adc
adc
sub
popa
xchg
push
xor
inc
or
inc
add
inc
mov
cmpsl
repz
pushl
and
lret
push
push
push
sbb
aam
jmp
sbb
mov
out
aad
xor
xor
mov
out
sbb
xchg
call
jae
cli
push
out
and
inc
xchg
or
pop
cmpsl
ja
and
pop
xor
ljmp
lds
cmp
add
inc
fsubl
sub
insl
aas
adc
loopne
cs
add
nop
gs
enter
adcl
cwtl
adc
cmp
dec
pop
push
stos
sub
sbb
xor
jg
jl
in
insb
in
jle
mov
push
test
aas
pop
pop
testb
leave
dec
jle
scas
or
add
pop
mov
fldcw
sbb
das
hlt
fistps
jge
or
lcall
xchg
dec
or
insb
scas
icebp
mov
cmp
mov
adc
jg
js
gs
and
daa
fistpl
jmp
mov
inc
ja
sbb
push
jp
push
into
movsl
inc
sub
psrad
movl
aas
push
sub
loop
lret
dec
and
pop
call
add
dec
xor
mov
lds
repz
xorl
pop
xchg
jne
cs
sbb
sub
jle
mov
or
imul
xchg
xor
hlt
int3
pusha
addl
mov
ds
jg
mov
ss
fsubs
cmpsl
scas
cmp
test
sbb
mov
std
push
add
cmp
imulb
and
jnp
imul
data16
aam
inc
mov
je
mov
xor
push
xchg
adc
mov
inc
push
aad
fdivs
xor
or
mov
icebp
dec
addr16
mov
xchg
filds
cmc
push
sub
lea
xorl
imul
sbb
das
cmp
mov
nop
repz
mov
in
and
in
ret
popf
push
hlt
push
adc
ja
mov
or
jo
add
jle
and
orl
mov
xor
add
mov
mov
shlb
mov
cmp
jo
repnz
dec
dec
sbb
shl
adc
sub
sbb
dec
bound
and
mov
push
sbb
adc
add
xchg
sbb
or
dec
dec
mov
stc
adc
push
adc
icebp
add
and
mov
in
push
pop
adc
into
pop
and
jmp
push
loopne
and
dec
lret
sbb
cmp
add
pushf
mov
mov
lock
sbb
ret
test
and
movsl
mov
sub
inc
mov
pop
iret
out
sub
test
xor
mov
test
or
sbb
add
jg
or
mov
push
int
sub
hlt
push
xchg
jecxz
test
test
test
imul
mov
sub
mov
sub
dec
ljmp
push
outsb
js
daa
insb
or
pop
push
data16
rclb
test
dec
xchg
stc
ja
jmp
test
fiadds
ds
dec
mov
enter
pop
hlt
pushl
data16
lea
jl
cmp
lcall
aaa
adc
aad
pusha
lock
pusha
push
xor
jno
in
bts
test
pop
sub
cmpsb
sbb
decl
mov
jo
sbb
add
test
sbb
inc
push
pop
decl
xor
add
add
cmp
std
adc
insb
in
mov
pop
pusha
or
xchg
xchg
xchg
adc
mov
fs
fistpl
adc
movsb
aam
cmpsb
xor
mov
push
inc
sub
push
mov
fmuls
inc
in
sbb
out
jo
push
addr16
sub
xor
pop
xor
adc
jo
ret
test
sahf
clc
js
iret
rolb
insb
outsl
push
sub
fstl
cmp
pop
fst
and
or
lock
xor
jp
jnp
fwait
cmp
cmp
dec
fcoml
lret
mov
dec
jmp
lcall
jl
shll
enter
fmull
jo
sub
mov
ja
jg
inc
pop
or
std
fistps
cmp
add
mov
add
loopne
sahf
pop
adc
ljmp
xchg
insb
fcomps
leave
js
lock
lods
or
dec
push
fdivrs
ds
xchg
add
rolb
or
out
or
lods
andl
lea
and
cmp
loope
push
not
lea
mov
incl
stc
fmul
cli
daa
push
pop
pop
jle
repz
xchg
cltd
lahf
adc
lcall
sbb
cmc
inc
xor
jle
incl
daa
sbbl
xchg
sub
ljmp
jbe
push
jp
inc
mov
jg
pop
jmp
into
nop
aam
xor
jg
jae
jl
add
popf
dec
in
lea
int
sbb
mov
lock
lods
icebp
cmp
movsb
sub
xchg
xorb
cmp
add
das
test
xchg
fwait
loopne
sub
and
push
add
xlat
xor
es
adc
or
fcomip
int
aam
mov
or
sub
loope
test
shl
mov
mov
jg
les
and
and
cwtl
cmp
cmp
pop
pop
mov
shll
shlb
pop
leave
clc
incl
xor
pop
sbb
test
gs
push
jns
cmpsb
mov
adc
pushl
add
ret
ret
ja
add
sub
jge
loop
cld
jmp
xor
ja
push
les
psrlw
hlt
sbb
cltd
cli
adc
lods
mov
push
dec
inc
rcll
xor
jae
xlat
and
jno
cs
int
call
push
push
repnz
cmovne
or
rorb
fnsave
pop
in
dec
clc
decl
loope
daa
adc
pop
and
and
cmpsb
push
push
push
and
xchg
push
les
xchg
adc
adc
jno
mov
ror
fidivs
lods
jo
push
sub
push
pop
add
cmp
scas
ljmp
xchg
jae
idiv
dec
mov
xchg
lret
rcrb
sbb
mov
cli
sbb
mov
roll
dec
push
mov
mov
or
push
pop
cmp
je
dec
dec
sub
or
cld
mov
popf
mov
test
or
push
int3
xchg
jns
jge
pop
xchg
xor
or
hlt
add
sbb
ret
outsl
xchg
xchg
loope
push
andl
push
ja
mov
mov
ret
ss
out
gs
mov
fimuls
cmp
sub
jg
dec
rorb
sbb
loopne
jbe
or
mov
lahf
cmp
inc
test
rcll
jge
pop
xorb
sahf
iret
das
inc
or
incl
sbb
ret
les
insb
xchg
mov
sub
popf
mov
decl
push
add
xor
outsl
xchg
jp
sbb
mov
mov
fcmovbe
rorb
push
pop
sub
loop
xor
mov
xchg
orl
adc
in
popf
or
mov
add
lods
addl
pop
repnz
push
jo
out
outsb
test
in
cmc
cmpsb
xchg
aad
push
jg
icebp
add
adc
sbb
mov
test
cmp
iret
js
sub
fbld
aam
jne
dec
insl
aas
xor
pop
pop
aam
fisttps
jecxz
les
inc
push
test
or
dec
add
xor
ret
adc
pushl
mov
mov
mov
and
jmp
xor
adc
sahf
add
fcmovu
fst
fstpt
fcmovu
dec
stc
mov
push
hlt
fbstp
mov
ja
push
in
push
dec
lahf
mov
out
into
fsts
xchg
jmp
adc
push
out
push
cmp
push
xchg
out
sbb
sub
lods
add
jge
lahf
lds
xchg
cmpsb
inc
push
cmpsb
mov
and
sub
sbb
call
movsb
add
dec
inc
lahf
xchg
jmp
xor
jg
adc
xlat
push
xor
mov
add
add
or
jg
popf
mov
jb
dec
fs
pop
rorb
js
sbb
mov
sub
es
xor
addr16
daa
xchg
nop
xchg
dec
pushf
add
frstor
add
inc
aad
je
loope
lcall
pop
cmp
mov
xor
mov
ljmp
pop
js
jns
push
pop
dec
mov
je
pop
pop
mov
fstpl
jmp
subl
cmpl
out
ret
rclb
and
enter
mov
aas
mov
repz
mov
mov
jle
cmp
in
das
das
xchg
pop
inc
add
loop
xlat
dec
rcr
pushf
jle
and
std
add
addl
cli
pop
icebp
or
push
insb
lcall
adc
adc
out
xor
fisttps
loope
add
and
mov
rcrb
dec
push
test
xor
pusha
es
adc
lret
cli
lcall
test
sahf
adc
data16
inc
fsts
inc
push
adc
xchg
cld
test
mov
or
push
ret
dec
lds
mov
push
ret
jne
ret
shl
cli
and
xor
lahf
push
pop
and
js
xchg
pop
les
push
add
mov
incb
in
or
dec
push
push
jmp
pushf
in
mov
jbe
sahf
fadds
mov
mov
xchg
daa
dec
jno
fisubrs
imul
loopne
test
and
and
fsubr
adc
push
pop
loopne
cwtl
and
mov
lahf
sub
fnstenv
sarb
dec
repnz
push
iret
clc
and
call
mov
ja
in
je
xchg
sbbb
mov
scas
inc
in
dec
push
lahf
andb
and
movsb
xchg
int3
ror
adc
jg
or
out
test
xchg
mov
pop
sbb
jle
ds
jg
aad
pop
std
push
mov
sbb
pop
mov
ss
xchg
scas
inc
shl
test
mov
xlat
and
aas
and
cs
test
xchg
add
jl
int3
sar
jecxz
xchg
hlt
add
mov
push
inc
push
roll
xor
dec
mov
add
imul
cmp
push
sub
js
xchg
pusha
push
shrb
adc
scas
mov
push
sbb
test
test
in
aad
icebp
push
aaa
ljmp
adc
lret
add
lahf
jp
push
add
xorb
mov
popf
in
cmp
add
scas
aaa
loopne
push
push
mov
in
xor
addr16
xchg
xor
dec
xrstor
pop
stos
push
dec
fidivl
lcall
jne
ret
aam
or
and
xlat
sbb
or
hlt
and
outsb
mov
mov
push
or
inc
ja
sub
adc
push
mov
in
fs
mov
add
imul
jne
pushf
scas
add
loop
or
shlb
aas
cld
pop
movb
sub
mov
cld
mov
xchg
jecxz
test
jo
nop
xor
mov
testb
inc
popa
push
and
or
ljmp
mov
inc
fldl
or
pop
sarb
adc
xchg
mov
aad
pop
adc
leave
jle
adcb
mov
aaa
xor
scas
jp
add
aas
push
adcl
cmp
cli
cmp
adc
inc
xor
cmp
cld
mov
push
inc
pop
popa
outsb
pop
jnp
lcall
mov
xchg
into
pop
and
sbb
aas
pop
push
cli
xchg
add
loopne,pn
scas
xchg
pusha
aas
jb
lcall
pop
inc
mov
inc
das
fcmovu
or
cmp
cmp
test
xchg
js
or
pop
xchg
idivb
pop
inc
rorl
shrl
push
jl
adc
xor
or
jmp
stos
push
sbb
lret
int
dec
push
push
arpl
clc
adc
cmpsb
loop
push
les
negb
cmp
pushf
rclb
inc
or
test
or
rcl
sahf
cmpsl
fldt
xor
or
sbbb
pushl
add
add
lcall
dec
or
popa
sar
dec
mov
lea
movb
es
sysexit
mov
and
aad
cmpl
dec
inc
fstl
xor
mov
jge
es
js
sub
xchg
sarl
xlat
push
inc
aas
xor
lahf
fstps
adc
in
out
incl
push
ror
sti
xchg
out
sbb
pop
mov
scas
ffree
imul
in
lock
fwait
popa
out
inc
mov
push
pop
pusha
movsl
ljmp
nop
cli
test
pop
cmp
testb
jl
pop
outsl
je
int3
mov
incl
daa
or
jo
push
in
das
stc
cmp
test
sbb
mov
adc
and
enter
cmp
repnz
add
jo
jo
xchg
push
push
jae
insl
adc
push
leave
cmp
cmp
aad
sub
push
add
loop
inc
jl
out
xchg
fwait
movsb
mov
mov
xchg
lahf
cmp
mov
pop
inc
dec
sbb
sbb
or
lea
scas
and
ret
rolb
dec
adc
xchg
fadd
xchg
bound
cmc
mov
ret
outsl
pop
retw
inc
push
andb
gs
loope
mov
cmp
sub
js
jne
cmpsb
insl
sbb
jb
mov
shll
add
xchg
icebp
jae
jo
loopne
jecxz
aas
cmp
scas
push
or
mov
js
cmp
cmp
imul
xlat
add
adc
sub
mov
lods
mov
xchg
jae
push
clc
xchg
pop
lret
aaa
pusha
stos
cmovbe
jns
rcrl
xchg
in
sahf
int
cwtl
and
incb
jae
add
push
sbb
pop
dec
push
int3
pusha
cmp
adc
inc
adc
cmpsb
insb
stos
aam
dec
cli
dec
fisttps
fsubrs
push
mov
inc
push
mov
xchg
adc
aaa
add
hlt
mov
cld
aas
or
fdivl
jbe
add
sbb
shr
pop
pusha
cmp
lret
dec
mov
lcall
ss
ret
add
icebp
mov
cmc
dec
jb
fsubp
xchg
jl
mov
push
sub
dec
das
enter
clc
lods
mov
fwait
scas
mov
push
cmp
clc
push
out
sti
push
pop
xor
ds
sub
lods
iret
fsubr
or
addl
aas
adcb
adc
jl
and
push
cs
leave
and
push
imul
lea
push
dec
popf
add
or
icebp
imul
les
pop
add
subb
flds
dec
flds
mov
rclb
pop
mov
jmp
or
ljmp
test
lret
or
xchg
outsl
pop
loopne
dec
sub
pop
mov
scas
push
pop
xor
mov
mov
ds
addb
xchg
jmp
push
fisubrs
rorb
and
or
out
mov
ficoml
inc
or
test
dec
pop
or
inc
jge
setle
or
dec
test
add
out
and
stos
mov
cltd
cmp
cld
stos
add
or
arpl
add
jne
jnp
cmp
jae
test
xchg
mov
lret
sub
iret
xor
popa
fs
jg
jp
scas
cltd
mov
into
jg
dec
sbb
decl
call
sub
aas
jecxz
jg
ljmp
push
inc
test
and
jmp
mov
lret
push
push
sub
sub
mull
push
mov
mov
mov
xor
fs
jnp
or
das
jns
mov
push
lea
fisubs
sub
rcr
lret
push
lcall
test
in
sbb
jmp
inc
push
mov
and
movsl
fisubrs
xchg
imul
mov
mov
jo
inc
add
cld
xlat
sbb
mov
mov
add
ret
mov
out
insb
arpl
or
dec
cld
add
out
mov
ljmp
repz
push
sbb
lds
mov
jno
push
nop
sahf
push
rolb
dec
pushl
ja
adc
fistps
jl
out
adc
adc
xor
addb
adc
fwait
pop
adc
imul
xlat
mov
jmp
fildl
andl
pop
cld
ret
cmp
fwait
push
imul
fndisi(8087
inc
cmp
xor
push
sarl
das
cmp
add
cld
pusha
add
gs
iret
mov
rcrl
or
pop
insb
cld
xchg
rclb
test
mov
icebp
and
cltd
bound
std
pop
xlat
inc
push
mov
add
in
adc
pop
jno
mov
int3
hlt
mov
push
or
sahf
pop
xor
push
call
sub
jb
imul
mov
cli
mov
lods
xor
test
lods
loopne
push
dec
xchg
scas
mov
stos
sub
popa
inc
fiadds
js
fdivrs
xchg
pop
sub
inc
nop
iret
dec
add
jl
ror
cmpsl
test
cmp
mov
pushf
xchg
arpl
pushl
ljmp
jl
in
push
out
pop
addb
fnstcw
mov
push
adc
lock
repnz
mov
xor
jno
test
cmc
incl
dec
xchg
add
adc
push
mov
push
xor
push
iret
stos
inc
push
cmp
xchg
xor
or
sahf
das
test
mov
jnp
dec
xor
loope
cmp
adc
or
push
sbb
xchg
mov
and
loope
hlt
xchg
cli
call
loopne
inc
adc
jl
inc
pusha
enter
lret
pop
loopne
and
lock
sub
cwtl
jo
mov
mov
xor
mov
cld
mov
imul
pop
mov
or
mov
repnz
mov
and
inc
test
xchg
cld
jmp
add
xchg
or
and
mov
jnp
lods
mov
stos
push
call
add
mov
leave
ds
idivb
xchg
cmp
and
inc
mov
push
and
dec
imul
dec
fidivs
movsl
pop
loope
jg
jne
mov
fwait
or
out
inc
push
adc
xor
leave
loopne
push
jnp
adcl
inc
imul
and
out
arpl
mov
outsl
lods
or
js
jnp
test
mov
or
inc
or
roll
ljmp
mov
xor
mov
xor
sarb
mov
clc
pushl
jecxz
test
out
or
pop
shll
push
add
push
jo
cmpsl
xlat
sub
jp
pop
test
jno
sti
or
cmp
rcrl
sub
mov
add
test
clc
add
xor
cwtl
mov
stc
call
or
mov
mov
cmp
fdivrs
decb
xor
xor
inc
or
cs
mov
mov
jb
pop
fsubrs
out
or
mov
cmpsl
ja
sbb
int
mov
add
mov
and
fwait
rorl
stos
pop
js
pop
or
add
adc
sub
and
out
clc
decl
xor
loopne
mull
stos
out
fwait
jmp
aam
aad
sbbl
mov
sbb
inc
mov
inc
pusha
int
add
cmp
test
pop
and
adc
sbb
out
stos
cmpsb
rcrb
jmp
and
stos
enter
imul
fs
dec
in
mov
popf
cmp
pop
push
aaa
xchg
inc
push
pusha
test
incl
push
adcl
and
xorl
sub
fs
pushl
cmp
pop
inc
xchg
xor
push
cs
mov
adc
adc
incl
or
add
add
stos
push
jb
hlt
mov
jl
adc
ret
dec
mov
add
andb
jmp
pop
hlt
fisttps
xor
iret
or
mov
mov
scas
jl
jle
out
jae
lock
mov
loopne
mov
int
incb
lds
adc
outsl
shr
loope
arpl
push
cmpsl
inc
scas
mov
icebp
sbb
roll
sar
pop
add
mov
inc
mov
into
lret
jae
daa
push
xchg
fwait
pop
push
xchg
add
bound
mov
out
ret
push
fbld
or
inc
jl
cmp
in
shlb
shlb
cltd
aas
add
call
in
jecxz
call
adc
popf
sti
push
cltd
sbb
popl
push
push
mov
push
pushf
test
test
jns
add
mov
mov
outsb
and
mov
mov
ret
stc
test
shlb
lea
out
aaa
repnz
lahf
pop
add
fbld
xchg
and
xor
jns
pop
push
sbb
cld
fbstp
ret
jmp
and
lods
sbb
pop
xchg
negb
dec
pop
andb
pop
push
dec
ljmp
mov
add
adc
icebp
pop
sub
jae
pusha
sbb
icebp
push
add
xlat
cmp
int3
jg
rol
sbb
sub
rolb
push
cli
icebp
sub
xchg
inc
iret
rcll
aas
or
rorb
sub
sbb
add
inc
jle
adc
lret
push
sub
jle
lcall
mov
test
test
dec
lcall
sbb
aaa
xor
lcall
jmp
nop
sub
dec
sub
jle
adc
jbe
iret
or
nop
into
stc
aas
pop
clc
insb
sbb
or
mov
dec
and
sub
mov
lea
xchg
mov
pushl
xchg
loopne
mov
push
xor
mov
cld
and
aaa
xchg
outsl
nop
cmc
out
inc
inc
arpl
popl
aas
xchg
hlt
sbb
xchg
sbb
inc
dec
dec
ret
fcmovb
fdiv
mov
ret
add
bound
push
inc
xchg
daa
int
inc
roll
mov
insl
sti
cs
jmp
inc
and
in
enter
lds
sub
dec
movb
rclb
je
cwtl
movsb
xchg
cs
sahf
insb
rep
or
insl
daa
adcb
adc
adc
les
aaa
inc
test
in
popf
insl
pop
mov
lods
xchg
add
std
dec
clc
daa
add
ljmp
sub
ds
inc
xorl
test
div
repnz
pushf
btr
shll
hlt
clc
pushl
push
cmp
cmp
xor
arpl
out
jp
ret
cmpsb
dec
loop
js
adc
nop
rolb
repnz
push
inc
mov
les
cmp
ja
pop
or
push
mov
aas
pop
adc
cld
inc
movsl
and
incl
dec
pop
add
xor
inc
pop
sbb
xor
add
int3
xor
and
sarl
popf
xor
mov
int3
jg
sbbb
leave
jge
or
nop
ljmp
cmpsb
mov
pop
mov
and
sbb
mov
call
cmp
jns
clc
or
xlat
xchg
dec
xchg
add
es
or
dec
jbe
push
ljmp
xchg
inc
hlt
push
xchg
push
xchg
loop
ja
xchg
aaa
inc
cmp
push
aad
int
mov
push
dec
pop
push
lret
jno
add
inc
mov
xchg
mov
inc
lret
add
nop
dec
shlb
mov
mov
jae
shrl
sahf
fcmovb
xlat
and
push
ss
push
mov
add
sub
add
or
pop
ret
dec
jle
xor
adc
dec
insb
fistl
or
add
shlb
out
orb
dec
outsl
ret
jb
push
cltd
and
daa
shrl
adc
dec
or
pop
cs
cmp
fldt
push
push
decl
gs
xor
push
jp
call
rcr
mov
xchg
push
or
sub
ret
aas
test
fdiv
ljmp
xchg
mov
int3
cmp
shl
adc
or
and
jb
cmp
pop
in
push
sub
sahf
stc
loope
pushf
nop
and
sbb
add
add
and
rorb
cmpl
push
aaa
adc
mov
test
adc
xchg
aas
js
or
dec
sahf
mov
add
pop
push
add
in
hlt
movsb
dec
xchg
outsb
lcall
mov
cmp
call
inc
das
or
sub
daa
les
xor
sub
xchg
in
ljmp
cmp
push
cmc
mov
sub
aaa
lods
jb
in
or
popf
test
js
push
shlb
adc
xor
leave
addb
sub
insl
loopne
mov
pop
push
push
xor
cmp
movsb
mov
adc
and
dec
inc
xchg
jmp
clc
aas
xchg
mov
lock
sbb
cmpsl
dec
pushl
adc
gs
ret
mov
arpl
inc
xor
push
jge
mov
cs
mov
dec
xchg
nop
mov
inc
pop
push
add
mov
adc
and
call
fwait
dec
pusha
nop
adc
aam
push
add
lret
cmp
sbb
adc
into
mov
mov
jl
mov
push
dec
push
arpl
imulb
or
mov
sub
mov
jg
jecxz
jns
fisubrl
int3
lret
xor
inc
fs
push
loope
enter
lods
sub
push
xchg
push
lcall
cmp
jmp
mov
sub
ljmp
out
sbb
int3
jns
mov
mov
scas
sahf
pop
add
mov
std
adc
mov
or
pushfw
inc
cltd
outsl
or
insb
mov
ds
test
bswap
lods
data16
fwait
inc
add
or
lcall
or
add
cmp
or
sbb
or
sti
adcl
scas
cmp
iret
and
xor
nop
out
cwtl
jnp
jmp
jne
dec
jmp
mov
xor
mov
mov
clc
test
pop
pop
adc
lds
cmp
xor
pop
lods
xorl
int
rorb
test
jnp
jecxz
out
mov
pop
mov
rolb
mov
and
lahf
sbb
pop
leave
stos
ret
adc
loop
in
insl
fists
aam
ja
stc
sbb
jmp
xorl
pop
mov
mov
mov
or
pop
int
stos
add
mov
dec
mov
add
rorb
filds
fwait
mov
jle
les
mov
inc
inc
fiaddl
xchg
jecxz
mov
fsts
cli
add
inc
sub
rep
jae
or
push
orb
or
lock
ljmp
xor
jmp
inc
daa
sbb
int3
add
sahf
jg
ffree
cmp
fidivrs
mov
flds
loopne
test
add
jne
jno
inc
sbb
push
inc
xchg
lock
mov
or
xchg
fadds
pop
int
into
fistps
imul
rcll
test
ljmp
mov
dec
add
popf
icebp
dec
insb
cmpl
sub
popa
jns
sub
mov
sbb
cld
mov
iret
loop
and
movsb
imul
mov
xchg
xchg
mov
stos
lret
lea
sbbb
rcrb
dec
jo
pusha
sbb
dec
add
add
outsl
mov
jmp
mov
in
movsl
add
sarb
adc
cmc
cmc
call
add
loopne
mov
mov
xchg
rol
fwait
hlt
sbb
in
or
cmp
std
or
cmp
dec
sbb
mov
cmc
sbb
addr16
mov
in
sub
xchg
jg
push
and
lret
jne
sbb
cmp
test
aam
loopne
loopne
ds
leave
mov
aaa
mov
xchg
loope
xadd
sbb
jbe
sti
lcall
adc
mov
notb
test
movsb
lods
or
dec
sar
incl
pushl
push
jg
add
out
push
or
bound
pushf
xchg
mov
xor
or
test
iret
push
fs
or
sti
inc
pop
mov
adc
pusha
or
jg
lock
adc
test
out
adc
test
cmp
adc
xchg
loope
push
pop
mov
shrb
pop
cmc
das
and
daa
int
add
xor
leave
dec
call
je
mov
test
cmpsl
mov
in
loop
jb
sti
cmc
mov
stos
adc
sbb
aas
mov
jge
les
cwtl
mov
shlb
scas
pop
fwait
inc
popf
add
pop
and
and
lahf
and
mov
pop
adc
mov
push
enter
rorb
pop
jbe
xchg
shlb
scas
cmc
add
mov
lds
or
sar
subb
subb
and
xchg
add
xchg
push
xchg
shll
scas
cmp
xchg
mov
jns
mov
orl
jecxz
imul
add
xor
leave
pusha
dec
xchg
jno
add
adc
add
push
lock
cmp
lahf
sbb
sbb
cmp
mov
pusha
jnp
push
xchg
mov
sub
push
pop
cmc
push
mov
push
push
loop
pop
or
test
push
das
orl
push
cli
jg
cmp
add
mov
xor
lock
xchg
fs
aas
pop
pusha
les
adc
outsl
or
clc
jmp
jno
pop
movsb
testb
xchg
pop
lock
or
mov
leave
xchg
dec
xchg
sub
jle
add
push
mov
ret
and
pusha
filds
das
sbb
jae
add
mov
mov
sub
inc
test
push
sbb
stc
push
sahf
jl
imul
ret
push
xor
xor
cmpsb
mov
cmpl
mov
frstor
mov
mov
mov
lods
mov
test
jg
push
and
dec
jle
jno
inc
xchg
sbb
leave
push
jp
inc
aaa
mov
jecxz
hlt
jo
xor
in
shrb
add
rcll
jle
sub
scas
mov
fwait
scas
cli
pop
cltd
mov
mov
test
sarb
movsl
add
fwait
incl
adc
sbb
xchg
mov
dec
pop
mov
jno
xor
mov
jge
mov
test
or
fwait
rorl
inc
inc
and
aad
add
sti
or
inc
inc
sbb
mov
andb
or
sub
pop
call
or
jb
mov
adc
cmp
cmp
repz
xor
rolb
add
bound
sub
xchg
jno
loope
jecxz
cld
adc
fmulp
jg
in
icebp
scas
fmuls
push
flds
xchg
mov
lea
xchg
aam
dec
xor
fildll
hlt
cmp
mov
nop
loope
xchg
xor
jecxz
push
neg
dec
clc
pop
add
inc
xchg
lret
add
and
sub
nop
xor
mov
pusha
jg
in
mov
add
add
test
mov
inc
jecxz
inc
xor
int3
mov
loope
rcrb
inc
movsb
sbb
imul
xor
or
ret
push
add
inc
xchg
jg
push
cld
mov
loopne
cmp
dec
and
and
es
and
in
mov
repnz
pop
add
in
rcl
lret
push
xlat
mov
xchg
or
push
std
cmpb
adc
push
pop
xchg
sub
dec
jne
in
cmc
sti
jg
sub
cmp
mov
js
mov
int
arpl
popf
jo
add
sahf
and
pop
dec
fdivrp
push
pushf
pop
jmp
decb
xchg
pop
push
lahf
outsl
inc
pop
inc
addr16
add
call
push
sub
int3
scas
pop
lret
ds
test
fisttpll
je
mov
lds
pop
cmp
pop
test
stc
rorb
mov
loope
inc
cltd
pop
enter
mov
push
adc
and
lods
mov
xchg
xlat
shlb
es
or
repz
jae
add
mov
test
rcll
bnd
ljmp
xor
lcall
pop
ret
push
mov
jg
pop
dec
call
xor
stos
xchg
dec
jae
fsubs
dec
mov
aas
or
stos
cmpsl
mov
ret
xorl
inc
mov
cmp
pushf
inc
inc
outsb
hlt
sub
leave
pusha
sbbl
es
std
pop
mov
lea
stos
adc
sbb
hlt
fwait
and
xchg
push
stos
jmp
push
cs
push
push
inc
push
les
inc
add
and
fucomp
adc
dec
roll
outsb
lret
jmp
ret
addr16
jno
mov
mov
xchg
inc
int3
outsl
pop
or
mov
push
mov
shl
xor
mov
cmpsl
jns
add
popl
mov
mov
cs
nop
mov
jl
mov
or
and
pop
sub
jmp
jg
push
add
out
fwait
and
push
in
ss
scas
movsl
vmovaps
pop
data16
add
xor
fnstcw
push
outsl
mov
xor
out
ljmp
adc
or
mov
mov
inc
je
aad
or
outsb
sbb
lock
sub
outsb
hlt
mov
aas
repnz
lock
enter
mov
cltd
ret
sti
lret
js
jecxz
push
loope
push
mov
cli
nop
loop
mov
es
sbb
outsb
sbb
sti
lock
xchg
mov
cmp
loope
jle
or
js
jl
icebp
loopne
mov
lds
cli
and
and
popa
jge
cmp
bound
xorb
out
out
incb
mov
or
mov
mov
and
cmpl
ljmp
inc
outsl
jecxz
call
icebp
and
pop
mov
lock
jg
mov
pop
sub
sbb
cs
call
push
push
xor
popa
js
push
sbb
add
in
pop
jl
mov
cmpsb
cltd
and
fstl
loop
sarb
sbb
xor
mov
aas
clc
sbb
out
enter
mov
inc
dec
movsl
jge
xor
push
test
sub
add
jns
ljmp
test
mov
add
test
and
fdiv
aas
enter
fs
fidivrl
addl
mov
lds
inc
sub
bound
cs
cmp
pop
sbbl
cmp
adc
call
or
fsub
xchg
in
out
data16
or
mov
dec
mov
jne
scas
xlat
fisubrl
arpl
push
dec
shlb
aas
imul
aad
in
adc
clc
lcall
faddl
daa
mull
sbb
test
fnsave
aaa
cs
test
movsb
lcall
inc
and
lahf
lds
add
ret
mov
cs
leave
and
cltd
ds
sti
das
outsl
in
enter
movsl
xchg
cli
decl
das
jo
cltd
jae
imulb
addr16
fbld
jecxz
mov
pop
aam
inc
incl
jg
ficoms
data16
pop
lret
lock
arpl
ret
in
mov
inc
xchg
cmc
adc
iret
jo
mov
push
das
jl
cltd
jb
mov
and
xor
clts
repnz
lret
adc
sbb
call
cmc
stos
fadds
jl
pop
add
push
ljmp
movsb
sti
icebp
cmp
clc
xor
mov
push
leave
and
rcll
fs
add
dec
ja
push
sbb
push
insb
push
scas
dec
adc
sbb
aas
and
lods
sbb
jo
in
shrb
pop
stc
lcall
scas
adc
mov
add
push
sbb
test
jg
add
leave
xor
in
out
inc
xchg
pop
popa
ffree
stos
cmp
lahf
movsb
dec
test
into
or
and
push
movsb
ja
or
loopne
call
xchg
repz
bound
inc
mov
mov
mov
xor
ffreep
arpl
or
cmp
lock
cwtl
leave
jns
loop
data16
daa
and
push
pushl
call
add
inc
stc
mov
lds
cmpsb
push
fildl
std
xchg
mov
cmpsl
inc
mov
in
push
cmp
pop
incl
insl
inc
cli
daa
js
test
add
test
push
inc
cwtl
or
fnsave
ljmp
add
fs
fiaddl
pop
pop
add
pop
xchg
and
stos
sub
dec
je
or
in
pop
cmp
stos
js
xor
cs
sub
inc
cmp
xor
jle
outsb
notl
decl
loope
or
mov
js
or
ljmp
add
pushf
fdivs
jb
decl
insl
aaa
clc
icebp
adc
inc
xorl
xlat
xchg
dec
sub
testl
test
sub
sbb
push
sarl
xor
cmpsb
jl
xchg
out
aaa
daa
xchg
mov
dec
sub
cmp
jo
sbb
jg
add
das
jecxz
ja
add
mov
pop
call
xor
sub
leave
arpl
mov
add
adc
cmpsl
mov
mov
jmp
aam
into
in
gs
jmp
push
and
add
cld
int
xchg
sbb
jae
push
gs
test
iret
rol
shlb
rcll
adc
popf
jecxz
or
push
or
or
or
sbb
xchg
sub
jb
sarb
dec
int
test
out
push
push
ror
push
adc
outsl
mov
js
jb
out
test
es
pop
sub
xchg
cmp
dec
adc
inc
fstps
adc
pushl
repnz
adc
push
mov
cmp
loope
fwait
mov
imul
xchg
sub
push
xchg
pop
and
incl
mov
or
jg
or
and
insl
loopne
push
icebp
xor
push
std
stc
stos
loopne
inc
stos
shll
andb
aad
pmaxsw
mov
xlat
xchg
repz
mov
cmpsb
insl
jno
add
dec
sub
stos
aam
jne
cld
xchg
jg
loopne
cltd
data16
insl
pop
mov
or
fistps
outsl
mov
sub
sar
mov
xor
sahf
jle
mov
jbe
ret
rolb
loop
push
lcall
std
xlat
inc
jg
ss
inc
ljmp
pop
jnp
sbb
xchg
fwait
sti
fwait
sbb
push
std
or
sub
cmp
add
ljmp
addr16
sbb
pop
ret
pop
or
int
nop
push
lea
lcall
push
push
stos
ljmp
arpl
pusha
inc
aam
and
add
cmpb
pushf
xchg
mov
icebp
jg
aam
pop
jmp
out
lods
movsb
xchg
and
js
cmp
sub
in
divb
in
repnz
adc
cmp
and
lahf
call
adc
or
mov
xchg
aad
js
dec
jmp
stos
cmp
pusha
int
push
xor
call
adc
or
movsl
test
push
out
int3
jg
pop
aaa
and
out
sbb
lods
xchg
pushl
jo
inc
divb
cwtl
inc
fsubrs
dec
add
sbb
cs
mov
clc
dec
mov
add
sub
push
rcrb
lahf
cmp
cmc
lcall
xorb
mov
xchg
pop
hlt
bound
mov
mov
or
cmpsl
in
je
test
and
inc
std
decl
adc
pop
lods
arpl
jecxz
sbb
pop
xchg
mov
mov
mov
out
fmull
cmp
lcall
mov
adc
push
jo
cmp
push
xor
xor
test
in
out
icebp
sub
lods
xor
adc
clc
push
sbb
push
loopnew
rcr
sbb
pushf
clc
test
add
add
les
mov
xlat
je
gs
orl
gs
lret
mov
btr
inc
or
mov
cwtl
and
outsl
cmpsb
xor
cld
rcrb
les
test
jo
icebp
mov
imul
push
jg
mov
adc
aad
push
inc
sbbl
fstp
mov
xchg
fsin
ljmp
push
cmp
shlb
mov
fwait
cli
jl
pop
and
arpl
mov
jns
add
add
sub
dec
mov
mov
orl
sbb
sbb
testb
dec
repz
test
inc
add
xor
loop
inc
sbb
out
dec
add
push
sbb
ret
shlb
cmp
xchg
test
dec
cli
pop
cmp
mov
stos
into
xor
push
sbb
das
ret
sbb
mov
arpl
and
outsl
adc
xor
mov
sub
orl
sbb
lods
ss
adc
adc
adc
xor
test
sbb
cmp
shrb
lods
sahf
cmpsb
jnp
lcall
adc
pushf
add
and
jno
inc
aas
mov
leave
outsl
pop
or
pusha
in
roll
loope
jae
shll
shl
mov
pop
mov
cmp
nop
mov
mov
stc
or
mov
mov
ror
std
repz
sbb
cmp
push
cmp
push
int3
ret
cmp
aas
cmp
xlat
or
add
std
sar
lods
inc
mov
lcall
fwait
xchg
rcll
pop
loope
movsb
jns
mov
mov
push
xor
fnsave
dec
inc
sub
mov
add
cmp
xchg
addr16
aas
cwtl
push
in
pop
cld
mov
call
ljmp
inc
ret
sbb
xorl
in
test
and
mull
cld
js
fstpl
lea
push
fucom
call
jg
ds
xchg
mov
or
popa
jne
adc
mov
ljmp
push
mov
jg
out
sbb
mov
pop
mov
movsl
mov
cmpb
scas
sbb
movsl
jmp
or
or
add
pop
cli
mov
jge
jg
pop
jno
in
arpl
in
leave
push
outsl
and
jo
cmp
pop
outsl
pop
enter
out
inc
test
cmp
xchg
inc
js
lods
xchg
cmp
cld
call
hlt
push
jbe
fwait
jne
mov
inc
mov
aad
ja
pop
push
cmp
cmp
cli
and
sub
adc
fwait
inc
dec
movsl
nop
movsb
icebp
inc
es
jge
test
lock
add
popf
mov
dec
je
or
pusha
les
sbb
cmc
hlt
sar
test
stos
mov
pop
adc
inc
mov
dec
cld
lahf
cmpsb
inc
sbb
xchg
sub
push
sbb
push
mov
push
inc
mov
into
in
and
inc
clc
add
xchg
loopne
jg
mov
loopne
jb
xchg
loope
jl
ss
adc
aam
mov
aas
ret
sti
add
and
daa
xlat
in
xchg
mov
clc
incl
sub
ret
or
cmp
test
mov
inc
fsubrl
push
inc
outsb
ret
stos
pop
inc
sarl
push
jmp
add
cld
dec
clc
jmp
fstp
jg
out
cmp
and
inc
loop
pop
hlt
mov
out
jae
inc
inc
ljmp
push
xchg
pop
sbb
cmp
in
dec
gs
lret
testl
and
lret
in
sub
ljmp
xchg
nop
faddl
std
test
jbe
push
jo
cmc
cmpsl
lret
pushl
mov
addr16
ret
or
outsl
xor
inc
test
pop
std
mov
pop
sahf
xchg
fstps
cli
bound
mov
xor
inc
lds
loop
add
popf
push
loopne
inc
int
sbb
gs
mov
hlt
and
sub
or
call
xchg
cli
push
pusha
stos
pusha
incb
jne
or
or
push
xchg
dec
ljmp
push
mov
fcomp
repz
es
or
incl
adc
iret
clc
jg
andb
push
mov
inc
dec
out
nop
movsl
aad
push
call
sub
mov
xor
or
pusha
js
xchg
push
idivb
xor
faddp
ja
push
ja
shrl
sub
in
stos
xchg
js
ds
in
and
lcall
xorb
adc
push
push
mov
and
push
adc
mov
mov
mov
notl
lods
nop
ret
push
hlt
push
jecxz
imul
add
repnz
push
xor
inc
or
push
mov
mov
or
xor
lods
dec
xor
ljmp
sub
jl
cmp
mov
add
cmp
dec
mov
shr
jecxz
or
ja
outsl
jg
or
mov
push
dec
mov
sub
incl
ss
es
pushf
jmp
inc
dec
cld
aas
pop
mov
iret
insb
ret
icebp
mov
adc
dec
mov
jg
pop
test
xor
pusha
cwtl
dec
jno
test
push
sbb
cltd
pusha
mov
fistps
sub
or
jnp
movd
mov
repnz
imul
pop
push
fbstp
cmpb
ret
aam
push
pop
loope
mov
out
mov
das
xchg
ret
push
fisttpl
xchg
sub
and
adc
jmp
fisubs
mov
ljmp
leave
or
xlat
stos
jno
andb
adc
cmp
mov
test
leave
cmp
les
cmc
xchg
xchg
ss
push
sub
push
cmc
stos
or
roll
in
add
sbb
add
dec
fidivs
add
addl
xor
aad
or
and
loop
sbb
adc
andb
push
or
sbb
jo
pusha
daa
outsb
lret
in
cli
mov
xor
jecxz
rolb
xchg
lock
cs
stc
pop
adc
std
or
in
adc
loopne
addr16
decl
popa
mov
arpl
inc
sbb
out
pop
cmp
insb
xchg
sahf
clc
hlt
and
xchg
dec
jg
fdivr
shlb
clc
andl
inc
pop
pop
pop
dec
inc
mov
add
add
shr
xchg
pop
pop
fldl
sbb
fdivl
mov
cli
ja
jbe
cmp
xchg
mov
lds
mov
aas
xlat
test
les
or
jp
push
add
fmull
dec
dec
ss
sub
ljmp
pop
mov
adc
mov
adc
mov
insl
daa
pop
push
mov
shll
leave
mov
outsl
ds
lods
jbe
push
in
dec
dec
sub
mov
fsubrs
loopne
pop
add
sbb
push
mov
inc
xor
sbb
lcall
add
add
xor
lret
lods
ljmp
pop
xchg
push
mov
outsb
flds
popa
fbld
inc
xor
sub
lahf
push
incb
scas
mov
add
push
xchg
xchg
stos
cmp
lock
xor
inc
inc
sub
mov
add
fs
mov
fwait
mov
or
cli
cmpsb
xchg
test
mov
add
mov
jae
inc
push
in
pushf
and
out
filds
add
cmpb
mov
loopne
xchg
dec
cli
xchg
xchg
js
adc
cld
push
pop
push
cltd
xchg
dec
movq
dec
daa
lea
push
mov
adc
sub
mov
sub
jno
and
mov
int3
push
push
insl
cmp
test
shl
aaa
dec
sub
push
jae
imul
mov
jg
push
xchg
in
add
mov
outsl
adc
dec
test
dec
add
cmp
mov
sbb
and
sub
mov
jnp
mov
pop
nop
dec
adc
xchg
push
mov
adcb
sbb
sbb
cltd
cmp
cld
cmp
push
dec
fmulp
add
mov
ss
insl
ret
mov
leave
xlat
inc
fistl
fadds
lods
add
sub
cmp
cmc
and
jecxz
insb
pop
insl
pop
adc
push
gs
call
ret
cmp
jge
cltd
add
shlb
bswap
pop
scas
jo
cld
mov
lret
push
aam
in
pop
stos
nop
jl
jle
dec
and
and
jnp
enter
aas
mov
and
xor
mov
aaa
in
bound
ss
cld
xor
into
icebp
or
mov
cs
mov
rclb
cmc
sbb
add
mov
lcall
xor
or
rcr
pop
inc
les
jmp
or
cld
jne
adc
je
add
cmc
pop
mov
fwait
cli
jbe
sub
sub
dec
pop
mov
orl
hlt
ljmp
leave
cmp
push
fisttps
pop
sbb
insl
add
jmp
jbe
fsubs
scas
xchg
and
lock
cltd
mov
in
icebp
into
mov
jmp
mov
add
pop
and
xchg
lods
pop
dec
call
mov
aam
subb
rclb
push
movsb
jg
xchg
lds
sahf
mov
cmc
cmpsb
das
xor
jl
fsincos
icebp
fisttps
push
iret
mov
js
pop
sub
lods
mov
cmc
cmpsl
push
loopne
jo
cld
decl
movsb
pop
aad
add
adc
sub
dec
mov
pop
jns
scas
jmp
adc
add
jp
std
adc
sbb
loop
loopne
nop
gs
and
adc
inc
mov
scas
pop
cmp
ret
mov
incl
sub
lcall
dec
jg
insl
cmp
ret
pop
inc
mov
int3
cmp
add
outsb
mov
pop
jp
sub
push
test
outsl
jg
inc
xchg
add
lret
add
mov
dec
pop
jge
aam
mov
sbb
cs
jge
addr16
nop
test
jnp
sti
jmp
int
dec
ja
test
add
lods
test
or
lods
mov
test
sti
nop
mov
push
decl
and
or
lods
shl
cmc
cmp
leave
fadds
lcall
rcr
inc
daa
pusha
nop
sub
fbstp
ljmp
adc
add
ficompl
inc
rcll
adc
add
imul
mov
stos
cmp
lock
fcomps
cmc
scas
call
cmpsl
cltd
mov
out
jns
sti
xor
ret
jns
mov
daa
loopne,pn
je
call
insb
adc
xor
dec
mov
andb
pop
icebp
outsl
ds
sbb
sub
add
shll
icebp
arpl
pop
std
or
clc
incl
out
xor
sti
lds
add
std
in
decl
scas
jb
and
aas
add
mov
dec
xchg
add
divl
lret
inc
call
loope
push
sbb
es
xchg
pop
sub
clc
jl
lock
clc
lcall
inc
xor
add
add
fmuls
lods
lret
popa
ljmp
push
mov
add
ret
dec
push
sbb
adc
or
movsb
push
cmpsl
mov
or
jg
repz
push
imul
xchg
add
pop
add
nop
out
push
push
push
jle
ret
sahf
dec
mov
fwait
decl
js
inc
xor
jno
add
fsubr
lcall
clc
insb
mov
int
fcmovbe
fistpl
rolb
jl
in
add
lret
inc
jbe
jg
push
js
movsb
icebp
xchg
xor
mov
les
mov
jns
cmc
cmp
lock
lods
rcrb
dec
sub
clc
js
popf
and
mov
add
xlat
lahf
ljmp
stos
adc
mov
inc
and
xor
mov
dec
sbb
fiadds
sbb
jle
inc
and
add
or
xlat
call
arpl
mov
inc
iret
mov
push
mov
push
shlb
cld
jns
xchg
xlat
jns
lea
sub
inc
mov
js
shlb
mov
mov
and
push
hlt
push
out
ljmp
hlt
and
adc
rorb
jle
add
scas
add
inc
pop
jmp
pop
push
cmc
pop
push
xchg
mov
add
inc
cs
or
xchg
push
ret
cli
xor
sbb
adc
imul
ja
xor
cs
cld
fisubl
enter
inc
jle
mov
mov
dec
psllq
and
cmpb
mov
stc
subb
sbb
stc
push
ja
fucomi
sbb
incl
in
xchg
cmp
push
shl
xorb
add
insl
jmp
cs
out
nop
pop
test
ret
xchg
je
and
int3
push
andb
adc
ss
fwait
xor
add
scas
dec
rorb
push
mov
sbb
andl
fdivr
add
in
xor
push
out
inc
push
add
xor
mov
sbbb
xor
adc
and
sub
push
pop
mov
pop
mov
addr16
aaa
rcll
pop
mov
lea
outsl
std
and
pop
pop
ja
fld
pop
adc
add
and
and
xchg
push
test
lcall
sub
mov
jo
or
dec
sub
xor
pop
mov
pop
fwait
cmp
add
mov
and
mov
icebp
mov
dec
jbe
or
aaa
aaa
sbb
dec
popf
cs
inc
mov
or
add
test
shll
ret
pop
jg
notb
jecxz
inc
inc
jecxz
sub
jnp
call
xlat
cli
inc
fimull
xlat
sbb
or
mov
jecxz
fiaddl
mov
xchg
or
ss
mov
mov
or
inc
adc
sub
adc
mov
popf
shll
cmpb
mov
add
insw
xor
sbb
dec
fdivr
outsl
add
rorb
out
xrelease
sub
add
sarl
popl
pop
jae
jbe
mov
or
adc
pop
push
pop
stc
mov
and
and
test
mulb
push
scas
pop
je
cmpsl
movbe
push
xlat
das
pop
insb
add
or
outsb
push
xchg
fs
lods
fimull
cltd
in
enter
in
xor
sti
adc
push
cmp
xchg
insb
pushf
jo
sub
or
je
mov
negl
push
jns
loopne
jne
scas
test
aam
fcomps
fwait
or
mov
mov
pop
ret
xor
sbb
mov
clc
fistpll
mov
cmp
or
dec
mov
add
les
loop
mov
lret
imul
fwait
clc
xchg
push
loop
cmp
outsl
adcb
mov
push
shlb
aad
inc
xchg
pushf
mov
add
inc
sbb
cmp
idiv
mov
mov
dec
sbb
pop
or
xorb
add
jmp
mov
inc
add
mov
in
cltd
fdiv
pop
cmp
mov
mov
ljmp
cmp
insb
or
enter
adcb
daa
cli
sbb
xor
repnz
jg
sbb
or
add
bound
jl
mov
call
fildll
xor
push
sbb
test
dec
loop
lock
inc
cmp
pop
jle
inc
or
push
aas
in
add
xor
aaa
or
call
adc
add
cli
fsubs
jmp
loopne
js
push
into
or
jge
and
hlt
pop
clc
and
scas
and
popa
add
decl
and
or
and
xor
outsl
inc
pop
dec
inc
insb
push
cltd
xchg
cli
push
pusha
jp
adc
arpl
fistpl
fbstp
stc
mov
sbb
inc
jge
clc
cmp
or
pop
loopne
xchg
rcll
scas
rorl
mov
or
shll
add
jns
sbb
cmp
aas
dec
sub
mov
push
mov
dec
stc
pushf
inc
clc
lahf
in
lret
cmpsb
ret
cltd
mov
and
movsb
repnz
into
outsb
and
mov
or
mov
das
test
xchg
inc
cmp
inc
dec
push
adcb
scas
lock
or
in
pop
ja
incl
inc
xchg
cmp
sbb
or
ret
xor
rorl
js
or
iret
stc
inc
cmp
insb
outsb
in
add
mov
cmp
fs
pop
ret
mov
and
ss
jbe
dec
inc
xor
adc
xchg
sub
or
mov
jbe
loopne
lea
ret
lahf
das
xchg
dec
dec
pushl
insl
enter
sbb
lret
inc
iret
movsb
test
data16
ret
xlat
mov
cmp
dec
je
and
inc
cmpb
xchg
cltd
jp
jg
mov
mov
scas
sbb
inc
inc
jmp
call
aaa
and
out
push
outsl
jge
mov
or
adc
cmp
daa
jl
mov
stos
jne
das
fnsave
ret
push
test
jecxz
cld
pushl
add
test
cmp
adc
mov
adc
jle
repnz
sub
outsl
jo
adc
es
repnz
out
adc
test
xchg
mov
or
lds
cltd
sub
nop
rorb
inc
cld
add
pop
jnp
push
mov
imul
or
popa
push
push
arpl
in
lret
cwtl
scas
push
ret
lret
sbbb
aam
xchg
jecxz
loop
inc
outsl
out
adc
test
dec
fwait
pextrw
xchg
test
push
lods
sub
pushl
cltd
inc
and
dec
pop
nop
inc
xchg
xor
loop
or
jae
inc
xor
cmp
mov
push
subb
xor
mov
inc
imul
pop
pushl
push
jns
cmpb
ror
or
outsb
pop
lcall
sub
pop
cmp
ljmp
mov
and
fs
addr16
cmpsl
inc
aaa
fdivr
mov
mov
out
mov
es
and
daa
rolb
sbb
jp
incl
mov
call
das
cmp
es
test
xchg
xchg
movsl
add
in
mov
pop
xchg
lods
pusha
loope
or
or
add
ffree
or
push
mov
add
pop
inc
js
mov
lcall
dec
je
gs
pop
ljmp
push
xchg
ds
inc
imulb
in
push
mov
jecxz
pop
jmp
sub
out
inc
cmp
jmp
cmp
lcall
dec
or
add
jmp
xchg
mov
cmp
repz
stos
pop
orl
jb
push
scas
popf
clc
movsl
mov
jns
inc
mov
fcmovb
fiaddl
int
jmp
out
inc
jae
lock
pop
mov
mov
loopne
pop
adc
dec
xlat
push
fisubl
pop
aam
call
add
loop
xor
mov
dec
aam
cmp
xor
fbld
lret
cli
decl
mov
cmp
xor
jecxz
dec
sub
clc
push
and
repnz
and
out
addl
cld
fld
shrb
imul
call
jle
test
popa
scas
ret
adc
loop
std
lcall
mov
nop
addr16
mov
dec
sbb
test
mov
mov
or
test
jg
jns
mov
fidivs
mov
addr16
js
fstl
in
cmp
and
xchg
xchg
repz
cmpsl
push
and
pop
sbb
push
mov
xchg
imul
jo
jne,pn
lods
jmp
mov
fstpl
jg
inc
lcall
clc
jg
loopne
clc
inc
mov
repnz
mov
leave
xchg
ret
and
add
ret
adc
movsl
add
lahf
xchg
mov
push
cmp
mov
jae
mov
push
pop
daa
adc
call
pop
cmpsb
xchg
vmread
push
sbb
jl
adc
filds
mov
ret
icebp
and
add
bound
jp
lret
out
xor
decl
xchg
lods
push
inc
adc
cmpsb
jg
sbb
pop
adc
mov
jge
mov
cli
movsl
jbe
pushl
rol
imul
inc
loopne
inc
sub
inc
fisttps
sub
shlb
lcall
adc
scas
push
mov
push
mov
and
push
ljmp
mov
inc
lods
or
inc
mov
dec
pop
ret
cs
movsl
cmp
pop
inc
jg
pop
sub
into
dec
mov
jge
call
pop
dec
andl
xor
pushf
fnstsw
aaa
dec
or
pop
or
mov
sbb
dec
sub
out
sub
sahf
shrb
cmc
inc
xorb
jecxz
jmp
mov
out
xchg
test
movsl
jmp
xor
push
add
dec
adc
xlat
pushf
scas
inc
rcrl
cld
push
dec
adc
andl
mov
jle
orb
sarb
aad
test
inc
pop
pop
je
inc
out
or
lcall
outsl
jg
mul
mov
cli
cmp
lcall
sub
je
sub
out
or
frstor
stc
xchg
inc
ret
dec
fstl
jo
dec
sub
fcmovu
sub
punpcklwd
out
mov
push
pusha
lea
push
int
test
adc
pop
rolb
repz
aam
mov
and
adc
icebp
loopne
pop
jo
dec
add
imul
pop
jmp
jo
ja
sbb
andl
add
mov
pop
mov
incl
and
add
pop
rolb
dec
inc
in
cmp
repnz
stos
rclb
mov
xor
mov
mov
mov
dec
scas
test
stos
dec
in
xor
cmp
xchg
mov
inc
inc
loope
mov
sub
xchg
push
ss
mov
xor
jb
inc
js
testl
les
add
imul
dec
rcr
push
mov
clc
incl
leave
mov
stc
in
xchg
fs
sub
xor
sbb
or
mov
cld
mov
pop
mov
inc
les
inc
lods
xor
pop
sub
pop
sbb
std
fimuls
cmp
ds
and
or
xor
dec
sbb
cmp
clc
jg
jnp
mov
mov
push
sub
and
pop
std
jnp
xor
sbb
push
jne
xor
add
fidivl
adc
jp
loop
push
movsb
sub
in
call
cmp
cmpsl
std
push
fisubrs
push
pop
aas
sbb
ficoml
decb
std
aaa
push
mov
inc
sbb
jo
aas
pop
mov
lods
push
aad
enter
pop
lret
mov
popf
inc
mov
lret
push
dec
lock
cs
mov
int3
or
mov
sti
test
and
xor
jg
pop
dec
gs
call
add
mov
addr16
or
call
mov
inc
adc
mov
and
mov
or
loope
les
lret
in
cmp
mov
scas
out
stos
inc
movsl
dec
filds
sbb
lahf
push
addl
aaa
andb
sbb
pop
inc
lret
jge
cmc
in
xchg
pop
adc
mov
js
sbb
sbb
movsb
cmp
dec
jg
sbb
mov
lcall
es
and
push
ja
stc
out
jp
mov
pop
and
pop
inc
xor
jg
jno
scas
add
or
gs
fs
in
clc
inc
fimuls
sub
jmp
mov
push
mov
or
gs
or
int
pop
sub
mov
vmwrite
imul
insl
lods
lahf
cmc
negl
sub
mov
clc
sub
das
jl
xor
idivl
cli
pop
mov
or
out
mov
call
fdivl
xchg
push
ret
shll
push
roll
or
mov
jg
out
ja
jbe
aam
dec
les
inc
push
adc
ljmp
pop
ret
ret
popl
fs
pop
sbb
mov
mov
mov
cld
aam
sbb
mov
incl
sahf
imul
mov
fidivs
lods
cmp
lcall
popf
sbb
jne
mov
outsl
xorb
xor
or
pop
lcall
dec
aam
decl
mov
shrb
outsl
outsl
dec
sbb
fcmovnb
outsl
stc
or
and
xchg
fcomip
sub
cwtl
pop
insl
cmp
movb
pop
movsl
dec
jno
inc
js
lock
jo
pusha
mov
loop
push
dec
inc
orb
or
and
dec
orl
mov
pop
aam
incl
lret
lcall
pop
pop
push
scas
cltd
sbb
inc
hlt
inc
shlb
jecxz
loopne
test
cmp
notl
bound
test
and
aas
mov
and
pop
ss
dec
pop
inc
in
or
pop
and
movsb
das
or
inc
lds
loop
mov
scas
mov
test
add
pop
daa
sbb
shlb
aam
lds
inc
jg
inc
mov
or
hlt
dec
scas
pusha
ret
cmpsb
or
or
dec
xor
dec
cmpsl
mov
pop
mov
xlat
or
mov
mov
out
sub
insb
mov
and
cs
mov
xor
xchg
clc
jmp
pop
out
sub
xor
inc
adc
push
push
mov
cmpsl
stos
dec
mov
decl
lock
imul
clc
loope
jmp
bound
shrl
add
inc
pop
push
loop
pushl
mov
xchg
push
out
sub
in
mov
dec
lahf
cmp
mov
lods
lcall
ja
cmpsb
add
out
pop
loopne
sbb
or
ret
inc
jle
mov
xor
insb
pushf
mov
push
xor
sbb
test
lock
xchg
or
aaa
jp
mov
mov
int3
jg
test
pop
dec
leave
cmpsl
or
cmp
inc
fmuls
test
or
dec
dec
sbb
jmp
xor
enter
cwtl
mov
add
clc
mov
in
add
or
clc
pop
inc
pop
dec
in
cmp
dec
jp
jge
sahf
roll
rclb
cld
adc
push
add
frstor
mov
lahf
jno
ret
dec
add
cld
pushl
cmpb
dec
sub
mov
cli
mov
pushl
lock
jmp
loopne
mov
std
lock
jno
daa
xor
mov
adc
ss
xlat
sbb
mov
scas
rolb
inc
add
loop
push
dec
pop
cwtl
jb
sub
jl
adc
sbb
aas
and
movsl
and
repnz
pushl
sbb
sti
pop
pop
sub
hlt
mov
pop
je
outsl
xchg
push
mov
pushl
daa
dec
sub
add
stc
test
add
cmp
jg
fcomip
cltd
fwait
movsb
aas
mov
cltd
xor
adc
inc
jnp
ficomps
cmp
jmp
decl
push
cmp
adc
jb
pusha
cwtl
dec
idivl
add
and
xor
pandn
jp
add
mov
fstpl
incl
in
xchg
mov
shr
jo
test
jg
out
jo
loope
mov
mov
negb
cmp
out
enter
sub
inc
xchg
out
mov
or
push
outsl
mov
mov
adc
or
loope
add
mov
adc
pop
loop
add
loope
cmpsl
and
sarl
jl
bound
std
divl
cmp
nop
xor
inc
push
add
stos
rcrb
ret
repnz
push
inc
add
mov
fimull
or
sti
mov
sbb
std
push
jo
nop
xorb
inc
sahf
push
inc
add
push
push
xchg
nop
cltd
cltd
ljmp
icebp
pop
imul
sbb
pop
cld
sub
adc
jge
cmp
je
cmp
jg
xchg
cmc
push
dec
pop
or
push
repnz
pop
fwait
out
add
or
cmp
mov
ret
mov
mov
jecxz
pusha
fldt
divb
std
call
xor
mov
js
sti
mov
les
xor
cmp
jbe
out
repnz
hlt
jmp
dec
inc
lds
and
scas
dec
pop
inc
add
add
mov
sbb
mov
int
jg
push
inc
push
mov
roll
pop
add
fcoml
or
cmp
mov
js
mov
dec
dec
xchg
fucomip
sbb
sbb
enter
cmp
js
je
fs
add
cmp
fwait
out
add
xor
dec
mov
and
mov
fs
dec
stc
sbb
in
mov
sub
scas
add
cld
fistpll
add
leave
or
add
xchg
nop
addb
pop
rcll
cmp
sbb
sarb
decl
push
sbb
xchg
subb
mov
clc
ljmp
loope
and
fcoms
ss
popa
cs
fstps
add
adc
cs
push
sti
mov
cld
cmp
pop
mov
mov
mov
das
imul
and
in
cmp
fnsave
pop
sahf
or
lcall
or
cli
bound
rorb
imul
add
jg
or
cmpb
sub
cmp
adc
mov
cmc
sub
inc
loopne
mov
inc
hlt
stos
jle
imul
and
data16
push
imul
stos
clc
ljmp
sahf
es
iret
add
sub
out
push
ss
lods
iret
and
pop
pop
push
mov
aam
hlt
pushf
xchg
pop
int3
ret
sub
pushl
push
test
js
inc
addl
jle
push
or
sbbl
lods
movsl
js
outsl
ja
fs
and
lods
or
xlat
xchg
out
lock
test
push
scas
lcall
test
pop
shrl
addr16
mov
sbb
into
ljmp
mov
xchg
jmp
sbbb
mov
dec
shll
daa
inc
movsb
xor
push
mov
in
sbb
ret
divl
sarl
in
sub
shrb
call
cmc
and
mov
pushf
jg
std
push
divb
int3
xchg
loopne
gs
les
mov
clc
xor
iret
xchg
xchg
jmp
ret
push
pop
loopne
pop
popa
mov
push
cmpsb
hlt
scas
pushl
clc
xlat
je
cs
dec
inc
add
and
ljmp
add
sti
add
lock
ja
xor
xchg
mov
inc
mov
ficoml
add
shlb
in
ljmp
adc
incl
rolb
xor
jg
pop
ja
dec
add
dec
jae
fiadds
push
mov
add
jne
out
insb
out
cmp
cld
pushl
cld
loopne
adc
push
sbb
pop
repz
jg
mov
dec
les
loop
shl
mov
sbb
movsb
xchg
sub
push
mov
mov
sub
mov
cli
dec
adc
mov
test
or
loope
test
in
mov
std
mov
rclb
in
add
jg
addr16
sbb
hlt
cwtl
lea
js
jge
and
dec
lods
aas
cmp
stc
push
adc
add
nop
test
ret
mov
orb
dec
sbb
out
sbb
in
jmp
pop
inc
fstpl
loope
cs
mov
cmp
jmp
jbe
and
dec
mov
mov
dec
lret
jle
push
or
push
in
clc
mov
sahf
adcl
xlat
mov
pavgw
jl
outsb
jnp
xor
enter
cli
pop
insl
cmpsl
lahf
dec
add
xchg
mov
xorb
mov
inc
lock
nop
xchg
out
ljmp
xor
ja
test
test
xlat
fldenv
jb
inc
sbb
dec
jmp
in
xchg
in
ret
lods
or
ds
fwait
clc
in
dec
clc
addr16
arpl
mov
in
cmpsl
in
out
lock
cli
sub
lock
mov
or
aad
adc
rolb
sarw
outsl
inc
jns
into
add
aam
dec
cwtl
cmp
mov
xor
popa
int3
or
jbe
into
out
push
push
sar
jg
test
push
pop
inc
dec
add
jo
pop
cmpl
xchg
inc
leave
shl
sbb
out
xorb
jo
push
mov
mov
ljmp
cmp
sbb
cmpsl
dec
idiv
and
jne
pop
mov
les
dec
rclb
or
arpl
sahf
sub
jmp
jge
cmp
imul
jbe
adc
push
fimuls
mov
stos
aas
sbb
or
shll
pop
add
dec
push
cltd
sbb
or
inc
mov
popf
and
add
jo
daa
negb
or
movsl
mov
repz
cltd
loop
in
adc
js
fsubl
icebp
xchg
push
das
or
pop
jle
dec
inc
inc
mov
add
std
dec
hlt
es
aas
stos
mov
aaa
sub
insb
hlt
ljmp
add
clc
add
out
std
jg
pop
ret
mov
xor
ljmp
cld
in
mov
jbe
fdivr
lcall
sub
xlat
cld
sbb
xchg
push
aam
outsb
out
cmp
aas
cmp
sbb
arpl
jp
xor
decl
push
cld
test
std
and
inc
or
cmpsb
cmp
fnstenv
ret
js
mov
add
mov
hlt
and
scas
add
pop
xor
mov
push
mov
std
std
xchg
cwtl
inc
hlt
xacquire
fwait
js
js
aas
jp
sbb
pop
cs
movsb
popa
jb
inc
mov
mov
xlat
cmpl
out
lcall
ret
shll
mov
test
loope
stc
ds
pop
and
shlb
mov
pop
sub
and
sahf
push
xchg
and
cmpsb
hlt
adc
addr16
outsl
sub
mov
aam
sarb
and
inc
subb
je
adc
push
pop
lock
jmp
adc
xor
clc
mov
sub
add
push
sbb
sbb
cld
lret
fimuls
adc
cmp
ficoml
push
sub
xor
cmp
sub
cmp
test
add
mov
fbstp
push
sub
or
ret
mov
sbb
inc
sbb
out
cmp
mov
mov
jg
sbb
ret
ret
or
loopne
out
fmul
xchg
call
add
shl
and
test
movlps
inc
xchg
cmp
stos
and
push
push
dec
push
rorl
mov
decl
pushf
cs
adc
inc
pop
inc
xor
mov
sbb
adcl
adc
rorb
or
fdivl
mov
fldcw
inc
bound
pop
nop
pop
aam
lods
jp
stos
and
inc
add
add
daa
stos
inc
mov
add
pop
scas
js
adc
push
sbb
or
inc
les
mov
scas
pop
add
mov
cmpsb
mov
xor
das
dec
inc
sub
mov
jno
jp
ficoms
adc
popl
test
inc
cmp
aam
push
mov
ret
out
lock
inc
pop
insl
and
inc
and
xor
mov
addl
nop
adc
push
pop
pop
push
xor
jg
aaa
dec
adc
cmp
mov
pop
add
cltd
dec
test
stos
pop
push
or
pop
jne
mov
jo
frstor
int3
and
loopne
movsb
pop
movsl
push
pushf
push
and
test
mov
out
mov
and
pop
jge
xor
insb
aaa
sahf
sub
mov
das
cmc
push
aas
scas
fildl
inc
out
fs
pop
add
and
pop
add
das
add
mov
sbb
test
scas
sub
roll
adc
loop
cmp
jle
popa
or
inc
xchg
push
mov
fsubs
call
push
add
or
mov
clc
pushf
mov
jl
pop
inc
aad
and
jmp
push
adc
jmp
lods
or
bound
inc
pop
ss
pop
and
ds
fs
pop
jl
cmp
ss
pop
sub
or
jae
push
clc
fstpl
insb
nop
mov
loop
decl
push
mov
pop
push
rcrb
pusha
sarl
imul
int
fbld
cmc
andb
sbb
cwtl
xor
scas
loop
xchg
mov
xchg
pop
mov
jmp
mov
cmp
jo
fmull
enter
lds
push
xor
cmp
xor
xchg
inc
jo
jae
add
inc
xchg
mov
cmp
stos
stc
cmpl
cld
add
mov
inc
add
mov
lcall
sbb
adc
fcoms
xchg
mov
aam
das
and
mov
nop
notb
inc
add
mov
mov
adc
jp
mov
rorb
pop
in
mov
sub
icebp
call
add
push
and
jne
mov
cmp
lds
add
dec
push
inc
in
wrmsr
enter
lcall
rorb
aam
aas
adc
mov
pushl
insb
outsl
pusha
sbb
out
cli
add
push
add
jno
test
mov
cmp
cmpsl
cwtl
xchg
push
and
xchg
loop
jp
and
dec
mov
lret
filds
push
out
int3
adc
xor
insl
rcll
cmp
dec
or
pop
xchg
jo
cmpsb
inc
adc
jp
pushl
adc
call
subl
sti
push
xor
fisttpll
sbb
js
mov
or
fst
rcl
push
jno
aaa
pop
int3
insb
pop
test
out
fs
scas
sub
test
or
movsl
lock
mov
lods
test
xchg
fdivp
dec
or
sbb
mov
mov
pushf
add
add
test
daa
xor
out
ja
orl
pop
loopne
push
icebp
pop
out
xchg
mov
mov
push
add
enter
inc
fcoms
cmp
or
and
andb
xchg
cmpb
inc
pop
arpl
repz
inc
or
push
mov
push
xchg
mov
pop
sar
adc
aas
add
rcll
lock
popa
push
test
inc
add
pusha
push
nop
xchg
xor
cli
adc
clc
jae
int3
stos
dec
inc
add
push
or
call
and
push
mov
sarl
leave
add
insb
rorb
pop
ret
repz
in
fmull
fdivl
clc
les
test
filds
mov
push
or
out
add
jl
mov
dec
cmp
lods
mov
fisttps
xor
ret
lahf
fndisi(8087
xchg
push
mov
ljmp
dec
jae
and
add
mov
addr16
arpl
mov
into
mov
xchg
call
mov
push
cltd
and
add
or
decl
cli
pushl
stc
inc
imull
ror
pop
daa
push
mov
mov
xchg
mov
mov
adc
clc
jmp
outsl
sbb
jmp
mov
ds
and
xor
iret
push
fcoms
inc
xchg
push
cmpsb
cmp
lods
fs
push
cli
add
inc
daa
dec
inc
not
push
sbb
cmp
xor
loope
inc
jns
pop
adc
ret
fwait
mov
ljmp
xor
mov
aas
stos
and
mov
xchg
adc
and
xor
sbb
iret
mov
test
sbb
jle
ljmp
sbb
inc
rclb
jno
imulb
push
adc
aas
sar
mov
pusha
mov
cld
add
jg
push
push
pop
neg
mov
in
fadds
loopne
gs
daa
rorb
sbb
inc
sar
mov
xor
xchg
inc
push
dec
sti
mov
cmp
decl
xor
mov
xorl
decl
in
pop
or
dec
cli
mov
push
mov
lret
dec
mov
arpl
cmp
insb
or
push
cld
lcall
fidivrs
push
mov
sbb
xchg
jmp
cli
mov
icebp
stc
lods
adc
in
sub
inc
mov
jbe
out
push
addb
dec
mov
jnp
and
add
rol
psrlq
inc
xchg
pop
dec
inc
nop
push
and
push
adc
subb
fsubs
fwait
bound
jae
mov
sbb
xor
aas
sbb
xchg
iret
push
inc
jbe
pop
dec
sti
inc
cwtl
jg
mov
add
xchg
mov
sub
dec
push
call
faddl
add
xchg
jecxz
subl
mov
jmp
dec
insb
cmpl
jge
push
or
inc
movsb
fcmovbe
js
mov
inc
cmp
or
xchg
clc
mov
bound
adc
sahf
pop
push
enter
and
stos
mov
adc
mov
stos
pop
popa
int
jl
add
adc
lods
inc
pop
call
jg
lea
cmpsb
xchg
inc
stos
xchg
call
lock
and
jl
lds
iret
mov
out
or
lret
pushf
js
pop
push
jae
jnp
cli
shlb
stos
int3
mov
aad
push
repz
pop
jo
clc
movsl
lea
jmp
and
aaa
mov
jb
and
jle
aas
loopne
mov
repnz
or
adc
lds
mov
ljmp
sbb
push
orb
es
mov
xlat
or
inc
nop
mov
divb
out
aaa
mov
mov
out
dec
arpl
pop
dec
lret
pop
ds
and
movsl
fdivs
mov
scas
pop
add
inc
aas
fs
andb
loop
mov
cmp
int3
sbb
pop
xchg
and
push
xor
lcall
bound
cltd
inc
lret
dec
jnp
sbb
dec
sar
jecxz
xor
sbbl
or
inc
sbb
icebp
aam
adc
xchg
hlt
add
xchg
mov
loopne
fwait
add
clc
push
push
scas
stos
dec
repnz
or
pusha
and
roll
pusha
mov
test
incl
fdivr
pop
inc
fdivp
adc
sub
xchg
add
cmp
and
mov
bound
xchg
adc
std
push
push
in
add
mov
jle
push
or
mov
insl
daa
and
mov
pushl
pop
mov
jbe
and
cmp
jmp
gs
or
and
in
mov
test
lcall
sbb
shl
mov
pop
pop
cwtl
aas
pop
dec
dec
push
mov
mov
and
into
sbbl
movsb
lcall
fs
adc
dec
dec
loope
inc
xor
mov
mov
div
or
xor
pop
shlb
call
mov
inc
or
jmp
ds
hlt
xor
sbb
out
cli
and
push
jle
push
xor
mov
test
and
imul
jne
call
lret
push
dec
or
js
ljmp
or
push
adc
adc
jle
push
int
xchg
sbb
and
roll
and
aas
shl
cs
int
add
aas
stc
push
add
lods
jg
lahf
out
mov
aas
divb
xor
sbb
imulb
inc
push
ljmp
stos
xor
filds
inc
cmp
inc
aas
lock
scas
aas
lea
xchg
xor
cltd
adc
es
push
jle
xchg
xchg
test
dec
push
enter
fildll
scas
add
dec
out
pop
pmuludq
testb
and
mov
fcmovne
xchg
xchg
cs
sub
inc
pop
loopne
add
xor
mov
dec
mov
pop
fnstcw
xchg
or
jecxz
lock
mov
test
xchg
aas
push
cwtl
and
push
push
ret
ffreep
psubusb
cmp
rolb
aad
rcrb
xchg
dec
add
push
adc
shll
aad
out
cltd
mov
add
arpl
xlat
and
inc
ficompl
out
mov
xor
add
push
cwtl
pop
nop
push
push
lock
and
mov
push
and
mov
cld
das
push
jecxz
mov
and
pop
fs
or
xor
ficompl
mov
push
mov
enter
mov
pushf
and
imul
pop
push
cld
add
cmp
sub
sbb
in
xor
movl
add
jl
jge
adc
pop
call
femms
ja
sarl
mov
mov
jno
verw
insb
jne
std
rolb
sahf
mov
mov
sahf
loop
pop
in
xor
adc
aaa
lahf
or
or
xor
int3
sbb
inc
sbb
pop
pop
xor
ret
add
cmp
push
sbb
stc
testb
out
ror
sarl
loopne
popa
push
gs
rorb
movsb
addr16
inc
sub
mov
adc
inc
jp
mov
and
or
adc
lock
add
leave
xchg
das
rep
or
adcb
jnp
adc
aas
inc
mov
jp
fcomip
sbb
pshufw
jge
stos
mov
inc
jmp
pop
cmpsb
out
push
popa
and
or
jg
jb
outsb
add
clc
jns
mov
les
sbb
jg
fbld
cmp
add
stc
adc
shlb
aad
popl
pop
jg
pop
pop
jge
cli
adc
data16
filds
das
les
mov
out
in
sub
pushf
mov
sbb
outsb
inc
pop
inc
jnp
inc
sbb
shrb
mov
repz
push
mov
pusha
push
ret
nop
pop
inc
xchg
cld
ja
sarl
fsub
dec
cmp
xor
push
push
pop
mov
es
iret
mov
mov
repnz
and
mov
push
stos
fiadds
fcmovbe
sub
inc
or
pusha
jg
decl
pop
mov
mov
int3
shr
or
add
inc
hlt
shr
scas
or
ret
inc
cs
push
insb
jle
mov
mov
xor
dec
clc
shlb
push
and
push
mov
lahf
in
loope
aaa
imul
mov
mov
pop
xchg
mov
or
cli
daa
ljmp
mov
adc
ds
cmp
fs
dec
sbb
adc
aad
ss
xchg
and
inc
std
stc
add
daa
mov
add
jg
xchg
add
adc
mov
inc
loopne
loopne
or
ja
in
aad
rcrb
inc
popa
cmp
data16
mov
decb
adc
jp
lahf
inc
pop
dec
bound
sbb
push
jbe
jle
insb
pop
push
bound
outsb
adc
inc
mov
add
jl
fisttpll
out
push
push
mov
dec
scas
popa
xor
inc
adc
in
repnz
add
test
ja
aas
push
or
test
jecxz
xchg
or
xor
xor
inc
scas
ror
add
xor
push
mov
ret
pusha
fwait
sbb
pop
and
mov
jmp
pop
test
push
incb
add
add
or
cmp
adc
ret
ds
aad
xchg
ds
mov
or
test
xchg
xchg
mov
sub
aas
push
std
jae
add
movsb
add
andl
scas
js
inc
sarb
xchg
femms
dec
out
dec
or
fstps
pop
jmp
pop
inc
mov
out
push
and
or
xor
mov
adc
je
xorb
xor
iret
inc
popf
inc
je
shll
enter
sarl
fwait
push
cmp
out
dec
jmp
push
sbb
sbb
dec
sub
push
or
adc
insl
push
stos
mov
icebp
pop
inc
inc
push
push
popa
aaa
test
adc
and
or
in
xchg
push
loopne
out
lods
xchg
inc
mov
cmpsl
ss
notb
int
shlb
dec
cmp
mov
iret
out
mov
aam
cld
roll
xor
cld
cmp
lock
mov
je
and
xor
inc
call
iret
ss
jl
adc
mov
sbb
test
xor
ret
out
mov
adc
int
dec
ljmp
ret
mov
sub
hlt
int
dec
push
jmp
jae
sbb
add
in
xor
sbb
add
jbe
inc
and
pushl
daa
xor
dec
jmp
jmp
cmpsb
mov
sbbl
sub
inc
hlt
das
push
jns
xor
loopne
push
xor
sbb
hlt
adc
popf
pop
inc
cmp
outsb
mov
cmc
in
cmc
nop
in
add
mov
mov
push
pop
arpl
cmpsl
or
and
js
lcall
fwait
or
mov
inc
dec
fdivrp
aaa
cmc
mov
shlb
ret
cmp
inc
push
pop
mov
mov
data16
pop
xor
inc
xor
mov
in
test
xchg
add
sarb
ss
mov
jb
movsb
mov
jne
pop
insl
push
sub
ljmp
sti
or
fisttpll
mov
sub
ja
mov
sbb
sarb
add
sbb
stos
into
mov
xchg
sbb
mov
inc
inc
lret
lds
cwtl
ret
fs
sbb
mov
pusha
inc
gs
xchg
jp
cmp
test
cmc
push
mov
sbb
adc
in
xchg
stos
in
popl
or
aam
inc
addr16
jb
test
add
mov
cltd
adc
js
punpckldq
cld
mov
rcr
int3
subb
aad
arpl
or
dec
mov
stos
and
stos
rolb
sbb
incb
pop
dec
jbe
jecxz
add
pop
bound
popf
lea
test
dec
pop
mov
push
inc
out
dec
ret
mov
xchg
outsl
ds
mov
out
add
dec
jmp
stc
lea
xchg
pop
sub
ds
movsl
mov
out
jge
cld
incl
subl
in
xor
popa
cltd
xor
lock
xor
add
jp
dec
sbb
mov
pop
pusha
add
dec
jmp
lock
add
dec
mov
jae
mov
hlt
mov
and
bound
test
push
jl
dec
pop
cwtl
jge
decl
out
hlt
sbb
hlt
hlt
jp
das
rcl
lahf
aas
jp
lock
dec
outsl
and
fbld
pop
mov
aas
or
lds
add
sahf
popa
fdivrl
mov
popf
jns
adc
push
movsl
mov
sbb
adc
xchg
aam
lret
out
mov
xor
aad
loope
or
add
cmp
sub
mov
mov
ret
fnstsw
pushf
mov
dec
or
rcrl
jae
mov
scas
mov
push
into
and
or
cmp
es
loopne
inc
inc
xchg
scas
pop
ss
ja
push
cmp
lock
andb
inc
sub
jbe
adc
mov
dec
incb
xor
sbb
cmp
getsec
jl
pop
cmp
push
mov
hlt
lret
jo
pusha
xor
cmc
adc
jmp
jbe
xchg
in
sub
add
ljmp
mov
add
sarb
std
fisubrl
or
out
mov
or
inc
popa
fisubs
lcall
imul
aaa
xor
mov
inc
nop
ret
push
orl
out
out
movq
adc
mov
push
ficoml
pop
lods
sub
or
dec
adcl
in
xchg
push
out
lret
dec
clc
not
loopne
mov
dec
xor
test
jo
mov
dec
lds
nop
pop
int3
pop
sti
inc
cmpsb
in
cltd
mov
mov
push
and
test
addr16
pop
sarl
mov
mov
xchg
cld
lret
push
fldl
adc
inc
add
push
sbb
bound
dec
pop
pop
jno
ljmp
fwait
pop
fdivr
popl
add
rcll
cli
dec
inc
jg
sub
inc
jge
shrb
cmpb
add
add
clc
bound
mov
push
mov
iret
cmp
jg
jo
scas
dec
test
jb
mov
popf
jne
adc
pop
aaa
mov
push
lock
cmp
hlt
addb
mov
ret
jle
jle
adc
xchg
shl
adc
add
mov
add
cmp
push
sbb
pushf
mov
xor
add
mov
sahf
pushf
movsb
pop
out
aaa
xchg
repnz
add
sub
subb
movsb
mov
nop
inc
aas
je
jo
push
std
loope
out
add
or
dec
decl
repz
cmp
add
arpl
xchg
jns
cmc
rcrl
push
ret
dec
and
ja
mov
cmp
adc
or
mov
xor
aas
ljmp
loopne
add
je
add
popf
inc
push
lahf
cmp
ror
shl
leave
int
jg
je
pop
mov
add
inc
jle
je
arpl
xchg
mov
cmp
ljmp
mov
out
out
insl
cli
aam
bound
mov
pop
fsub
mov
pusha
add
sbb
fldcw
ret
or
fwait
pop
and
pop
loopne
repz
or
repz
mov
or
adc
addb
mov
fmuls
shlb
ljmp
or
cwtl
pop
xchg
rclb
gs
loope
popl
test
mov
cltd
js
lods
int3
inc
xorl
adc
mov
jo
sbb
inc
dec
dec
andb
dec
dec
mov
xor
jno
and
xor
add
leave
sub
add
pusha
mov
inc
rorl
lock
dec
pop
lcall
sbb
lods
xor
fwait
lret
aad
and
xchg
punpcklbw
jg
jecxz
aaa
cwtl
lcall
sub
daa
jle
mov
jmp
inc
int3
ret
sbb
rol
push
mov
add
push
aas
lahf
or
cmpsl
mov
xlat
insb
dec
stos
xor
dec
sbb
pop
fistpll
pop
ljmp
or
inc
xchg
pusha
sub
movsl
fmuls
sbb
pop
mov
std
mov
mov
inc
repz
lcall
lods
outsl
cmp
or
daa
inc
cmp
cmp
jl
adc
ret
push
add
in
push
incl
jl
add
or
mov
ds
shl
loop
fdivs
adc
lahf
xor
push
daa
add
pop
popf
inc
shll
adc
xchg
loop
mov
inc
lahf
inc
mov
and
repz
pop
or
rolb
add
js
pusha
jb
inc
mov
out
inc
aam
aad
jle
cmc
test
movb
mov
mov
sbb
mov
inc
adc
out
push
inc
cmp
sbb
mov
xor
or
lret
push
mov
movsl
cmc
inc
das
push
ret
ret
fcomps
data16
push
pop
ss
int
jne
clc
aam
xor
aaa
sub
inc
cmp
popf
loope
push
mov
rolb
sbb
push
pusha
mov
dec
add
sahf
sub
int
mov
inc
xchg
xor
mov
jle
lea
arpl
add
shlb
push
movsl
xorl
in
dec
cmp
scas
out
cld
sbb
xchg
jnp
mov
lret
out
inc
stos
pop
mov
xchg
dec
dec
dec
negb
sub
add
test
mov
add
mov
mov
cmp
mov
mov
pextrw
and
rclb
mov
xor
aaa
aas
and
addl
inc
dec
dec
rorb
insb
xchg
int3
lahf
mov
or
jle
pushf
cmp
scas
jb
pop
push
inc
loopne
sbb
jnp
add
adc
adc
jae
jp
jecxz
push
ret
mov
sbb
push
lds
stc
out
fs
pop
mov
sub
xchg
or
pop
aad
cmp
xor
das
shrl
imulb
leave
xchg
inc
cmp
and
jno
cmpsl
xlat
loopne
cmpsl
mov
or
mov
pusha
mov
scas
and
cmp
test
test
lds
add
outsb
sbb
mov
pop
cmpsb
les
addb
fcmove
xorl
pop
enter
cld
pop
stos
outsb
stos
push
dec
nop
add
adc
xchg
hlt
pusha
mov
lock
xorl
add
pusha
jg
xchg
leave
test
scas
dec
jge
jl
add
dec
into
push
dec
fcompl
fbstp
inc
mov
lret
and
mov
jne
repz
inc
mov
xchg
jl
jae
loope
mov
push
push
sub
adc
imul
push
adc
mov
cmp
repnz
sub
mov
and
adc
xchg
mov
xchg
shl
pop
rcll
rcrb
ret
dec
cld
inc
mov
ror
lock
xor
adc
mov
fisttpl
jb
xchg
loop
inc
mov
sbb
movsl
adc
add
pop
lods
int3
mov
rcll
dec
push
cld
add
jmp
subl
or
push
inc
dec
scas
stos
rolb
push
cmpb
xorb
js
push
and
ret
inc
popf
sbb
rcll
test
dec
push
push
sub
insb
lea
cmp
popf
mov
test
int
xor
mov
stos
gs
push
pop
jnp
arpl
iret
xchg
jl
cli
mov
ljmp
idivl
sbb
lods
fs
jnp
push
xchg
and
mov
push
cltd
ja
dec
mov
lods
outsl
jecxz
jg
mov
cmp
push
popa
add
xor
ljmp
inc
add
inc
daa
testb
pavgb
pop
mov
sub
inc
lahf
pop
ret
push
push
jle
mov
or
push
aam
cli
fiadds
scas
push
or
adc
dec
push
outsb
call
dec
jecxz
xchg
popf
nop
mov
jno
je
lds
or
lahf
js
in
in
popl
or
into
cmova
decl
ret
sti
imul
and
mov
int
mov
fwait
insb
jbe
icebp
or
cmp
xor
cmp
pop
jmp
cmc
dec
fcmovbe
daa
push
cltd
leave
add
int
out
inc
add
sbb
aam
mov
cs
add
popf
inc
int
ds
mov
dec
inc
imul
inc
shrl
jo
in
xchg
popa
addr16
cmp
pminub
add
inc
cs
pcmpgtd
lods
add
mov
cmp
or
loope
fwait
pop
icebp
iret
jl
shll
inc
pop
loop
sbb
push
cmpsl
je
into
sbb
mov
pop
into
or
push
insb
fsubrp
in
push
aas
scas
movsb
add
ja
mov
and
std
adc
xor
add
sbb
and
sets
xchg
pusha
aas
sbbb
mov
rcr
dec
pop
adc
aas
frstor
outsb
sarb
rcrl
jno
add
mov
dec
mov
lret
mov
cmpsb
gs
je
mov
ret
mov
es
outsb
jp
dec
faddl
add
iret
mov
aas
inc
mov
pop
pop
mov
add
cmpl
add
sbb
jne
rolb
mov
nop
or
clc
xlat
jg
mov
xchg
jge
ficoms
fcomps
or
jecxz
mov
scas
and
aas
xchg
test
and
mov
rolb
push
das
test
mov
push
add
js
mov
sub
sub
add
testb
sbb
in
incl
std
push
pop
add
xchg
add
addr16
shrb
xor
fs
orb
pushf
dec
xchg
sbb
inc
shrb
lock
data16
dec
addb
inc
sahf
mov
and
adc
out
xchg
mov
lds
mov
pop
jle
pop
ljmp
pop
mov
and
pop
sub
push
fs
add
sbb
or
add
test
pop
cld
flds
cmp
adc
inc
mov
sbb
xchg
cmp
fwait
sub
ret
pop
mov
inc
leave
dec
jle
sub
jbe
cmp
and
mov
and
shlb
test
cmp
dec
js
or
mov
icebp
cmp
loop
mov
push
aad
jbe
mov
in
fwait
call
jo,pn
sub
xor
jbe
imul
fidivl
aad
cli
dec
notl
loope
inc
push
xchg
pop
ljmp
bound
push
outsb
fcmovne
je
daa
xchg
lea
jp
in
in
adc
fcmovu
cli
aas
loopne
xchg
repnz
add
xor
sub
fidivrs
adc
icebp
push
dec
fiaddl
ret
movsb
fistps
fcom
ljmp
jle
mov
lret
out
mov
and
add
scas
dec
push
add
adc
ret
or
xor
fisubl
sbb
leave
xor
into
pop
rorb
mov
and
in
jnp
push
xor
cli
cli
leave
pop
fadd
lock
sub
cmpsb
xchg
dec
cmc
test
insl
push
sub
or
lock
int
loopne
cmp
or
sub
lahf
inc
push
rcrl
popf
mov
js
sbb
das
outsb
idivb
cwtl
incb
add
lret
push
lods
inc
sub
fsubl
aas
sub
jb
xor
push
scas
icebp
loope
push
cmp
dec
mov
mov
jae
daa
loopne
inc
addr16
xchg
fwait
inc
mov
ficoms
add
inc
pop
lock
push
push
aad
add
lcall
xor
out
mov
push
adc
adcl
jo
fs
incl
aam
ss
sti
pusha
jnp
es
pusha
lock
cmpl
nop
lret
pusha
mov
je
pop
std
dec
or
outsl
pusha
xchg
pop
shr
dec
cmc
jmp
stc
sti
or
les
pop
and
add
push
dec
pop
add
cmp
shlb
test
mov
xor
jbe
jg
in
mov
enter
xor
rolb
scas
pop
jl
dec
mov
rorb
shrl
mov
adc
int
ret
cmpb
es
pop
pop
test
jo
ret
mov
cli
add
xor
jecxz
mov
inc
cmp
notl
jmp
inc
inc
mov
or
dec
adc
enter
fadd
push
jg
loopne
and
or
push
push
pop
mov
add
aas
or
dec
jl
cmp
inc
imul
inc
bound
shl
int3
adc
popa
add
movhps
dec
imul
jl
jg
push
add
adc
icebp
addl
in
dec
loopne
dec
jae
dec
pop
add
push
cld
jo
pop
mov
out
mov
sbb
mov
and
sub
js
cld
loop
pop
test
push
iret
nop
add
shlb
push
test
inc
or
xchg
jns
and
mul
dec
inc
adc
das
mov
adc
outsl
push
addb
aam
xchg
hlt
add
jmp
dec
das
call
jge
inc
xor
mov
push
push
enter
mov
pop
mov
and
pop
jns
clc
stc
xchg
rclb
inc
scas
ljmp
cwtl
fstpt
shll
ja
fildl
cli
filds
adc
lock
mov
add
adc
mov
mov
sub
imul
and
cmpb
sbb
sub
adc
sub
cli
or
mov
jle
mov
sub
fiadds
cwtl
sbb
xchg
cld
jmp
add
mov
and
push
push
mov
lods
and
cmp
and
push
mov
dec
sbb
mov
or
loop
mov
test
jecxz
inc
insl
fcomip
pop
jge
cmpsb
sub
stc
cmpsl
rcr
xchg
cs
mov
pop
movb
addb
and
sub
xchg
loop
add
arpl
cmpb
aas
shll
cmp
scas
pop
mov
push
movsl
loop
test
out
push
dec
int
xchg
mov
mov
int
out
and
jne
cld
repnz
sub
shld
jb
rol
mov
mov
push
loopne
lea
daa
mov
xlat
nop
lock
dec
out
jg
add
out
cwtl
cmp
popa
xor
popa
xchg
bnd
popa
subl
cmp
enter
mov
or
orl
outsb
fcomps
mov
mov
cld
push
jg
lds
scas
cli
xor
shr
adcb
jo
xchg
pop
cmp
stc
mov
and
imul
orl
jp
jmp
or
push
nop
test
cmp
pop
add
mov
mov
cld
xchg
dec
scas
pop
imul
add
stos
ret
jle
add
inc
xchg
lds
aad
and
push
cwtl
push
in
ja
and
dec
pop
loope
inc
sub
lods
fiadds
ds
inc
mov
inc
fwait
sub
ret
loop
lods
sub
stos
push
jle
fnstsw
push
add
xor
lods
xor
out
loopne
adc
shl
mov
movsl
aas
and
leave
and
or
xchg
cmp
jb
js
add
sub
sub
fnsave
xchg
jb
lcall
push
lcall
mov
fldt
push
dec
or
fdiv
inc
mov
xchg
mov
loopne
sahf
inc
mov
cmp
or
mov
jno
pop
push
shll
sar
lods
inc
jp
cmc
mov
xchg
decb
jle
daa
and
mov
movswl
mov
lock
mov
mov
add
push
sub
push
adc
push
fsub
mov
test
fimull
sahf
pushf
inc
test
push
ds
lods
or
les
mov
push
add
adc
xlat
pop
fwait
sbb
flds
mov
fmuls
inc
mov
sahf
cmpsl
or
cmc
and
dec
sub
scas
sub
rcrl
aas
push
rcr
or
pop
pop
inc
push
test
cs
dec
jno
rcrb
in
mov
jne
jbe
test
mov
lods
add
mov
mov
int
jne
jecxz
aad
xchg
inc
pop
pop
add
inc
push
jb
jecxz
rorb
mov
decl
arpl
add
mov
andl
ds
cmp
aas
jno
and
push
and
inc
add
sbb
cmp
pushf
lahf
fistps
je
cmp
mov
push
je
push
mov
mov
scas
jae
fnstsw
test
in
out
ja
mov
incl
add
clc
cmpl
jge
out
movsb
pop
sarb
es
xor
xchg
dec
jmp
clc
inc
sub
jl
and
into
push
cmp
pop
fdiv
fbld
test
inc
nop
cs
xor
jbe
mov
jne
aas
ja
or
into
sub
hlt
inc
orb
xchg
push
sbb
mov
jns
ss
mov
rcrl
out
cli
ljmp
dec
lret
jl
leave
lea
nop
test
std
jl
lock
pop
jo
add
and
adc
test
sub
jne
arpl
sbb
xor
cmp
pop
push
aas
adc
xchg
icebp
ret
lcall
popa
ljmp
dec
lock
xchg
popf
mov
push
xlat
xor
std
test
jnp
out
lock
or
dec
jge
out
clc
out
roll
inc
dec
mov
imul
jle
inc
sbb
imul
je
cs
lahf
xchg
out
sub
push
inc
cli
inc
dec
ret
shl
mov
movsl
inc
xor
pop
sbb
xchg
leave
inc
add
pop
in
sbb
orb
and
mov
dec
cmp
imul
mov
mov
loopne
lcall
shr
push
cmp
mov
icebp
ret
push
sbb
mov
mov
and
dec
bound
sbb
xchg
jnp
mov
arpl
outsb
and
push
shl
test
test
sub
test
dec
cmp
sar
pop
iret
ljmp
or
jb
fldl
dec
xchg
push
xchg
or
stc
cmp
in
inc
cltd
xor
ud1
outsb
es
call
add
pop
adc
sbb
fstps
nop
and
xchg
out
mov
bound
add
add
mov
in
scas
and
xor
daa
dec
popl
add
sbb
stc
fld1
mov
decl
or
int
mov
mov
push
lret
xchg
inc
ficomps
sarb
dec
les
lahf
push
movsb
and
mov
lds
xorb
dec
repnz
cld
push
add
movsl
mov
dec
out
sub
je
or
stos
pop
inc
mov
add
add
fcomps
loope
cli
add
addl
sbb
and
out
mov
pop
repz
fwait
shlb
xchg
sub
and
jmp
mov
pushf
sbbb
jge
outsl
addr16
mov
fadds
daa
pop
pushf
mov
fidivl
add
sarl
adc
xchg
psrld
ss
mov
xor
aaa
sti
fsubr
add
lcall
outsl
rcl
mov
cbtw
add
cld
and
xchg
push
loope
push
adc
in
call
call
mov
adc
and
lods
cmp
sub
push
inc
sub
shll
or
addl
add
out
add
lahf
fld
and
mov
cmpb
xor
aas
addr16
loope
push
cmp
dec
add
jb
xchg
add
pushl
jl
lds
mov
ret
adc
mov
iret
add
sbb
lcall
sub
fdiv
test
pop
lock
aas
xor
jne
pop
lea
dec
iret
cli
shlb
pusha
xor
jg
and
and
jg
dec
and
mov
shr
inc
push
jo
int
cmovne
xor
mov
cmp
pop
push
inc
jle
xor
nop
push
or
testl
cwtl
push
pusha
cmp
cmpsl
mov
push
sbb
or
rol
jecxz
sub
jae
ja
xor
fs
xchg
adc
xor
mov
mov
js
push
sbb
inc
xlat
dec
mov
nop
stos
arpl
mov
or
mov
xor
jne
add
lcall
jmp
xchg
aaa
lcall
nop
jns
in
out
sti
in
inc
aad
cld
lods
decb
mov
jno
aaa
dec
test
dec
std
ljmp
jmp
mov
movsbl
fcoml
xchg
jmp
or
xor
rorl
addb
xor
jge
popa
jb
xor
cld
test
push
int
adcb
les
test
add
arpl
loop
test
loope
enter
xchg
leave
ffreep
xor
pop
aaa
sub
sarl
call
inc
jmp
and
xorl
ja
sbb
pushf
icebp
sbb
mov
adc
ljmp
mov
cmp
or
cmp
add
push
lcall
iret
push
inc
add
jne
out
aas
aam
or
and
adc
lcall
loopne
dec
adc
jno
mov
sub
mov
loop
cmp
das
sub
and
xchg
enter
or
push
lcall
xor
adc
lahf
and
roll
xchg
shrb
sub
cmpsl
dec
or
dec
xor
mov
or
push
mov
movsb
push
sub
jmp
fimull
pop
inc
jb
or
inc
xor
jmp
das
rolb
cwtl
dec
loopne
jg
mov
or
loop
push
fmuls
push
loope
xor
pop
outsb
int3
mov
and
push
dec
pop
jmp
jge
lcall
shrb
sub
mov
lret
ljmp
rcl
in
jb
test
lea
xor
daa
shl
fstpt
insl
inc
cld
mov
ret
mov
sbb
push
and
sbb
and
sbb
dec
xchg
ljmp
lret
sar
jb
cmp
loopne
mov
xor
xchg
ja
cmp
out
in
lahf
mov
out
mov
sbbb
xchg
mov
sbb
fidivs
xchg
xlat
and
pop
mov
repnz
mov
xchg
cmp
jg
fstpl
push
das
inc
outsl
pop
and
fdivl
insl
les
lock
inc
mov
jp
mov
xchg
jns
add
sub
push
rol
movl
fstl
mov
mov
dec
outsl
jle
push
fiadds
mov
cwtl
and
cltd
pop
cmc
sbb
fdivr
push
or
xchg
push
cs
nop
sbb
or
add
dec
jp
xchg
cwtl
xor
push
xchg
lods
lahf
jae
jmp
movsb
lock
xchg
imul
add
popa
pop
mov
push
xchg
xchg
mov
mov
stos
add
rclb
xchg
or
add
or
pushl
xor
rcll
test
mov
dec
das
add
jg
hlt
jnp
or
cmp
andl
cmp
mov
subb
cld
push
mov
icebp
pushl
add
or
add
test
mov
xchg
shrl
lea
sub
pop
cmpsb
pushl
ja
jmp
adc
incl
testb
adc
jmp
jg
add
imul
je
push
mov
movsb
inc
inc
out
cmp
test
popf
sbb
push
fdivs
push
pop
pop
imul
push
fisttps
pop
mov
sbb
xchg
int
xchg
xchg
mov
gs
mov
mov
inc
add
loopne
ja
cmp
cmp
jns
iret
leave
adc
fbstp
or
adc
stc
inc
lds
add
push
imul
cmpsb
daa
in
xchg
imul
das
jns
jl
xchg
loopne
xor
fcoms
adc
mov
sub
inc
push
rcrl
push
mov
lret
dec
push
cmp
pusha
sbb
or
dec
gs
cmp
and
xchg
enter
mov
mov
jp
dec
xchg
sbb
cmpb
clc
in
dec
mov
or
incl
adc
pop
push
loope
aam
jno
in
or
inc
lret
and
ret
enter
das
clc
movsl
sbb
dec
outsb
fistpll
push
int3
repz
bound
lock
aam
cli
cmpsb
outsb
add
xchg
ss
mov
adc
and
mov
aaa
fsubrl
ljmp
jnp
pop
mov
sub
movsb
dec
add
push
cmc
jo
stc
sub
pop
gs
loope
sar
xor
and
mov
test
jo
rorb
mov
aas
mov
lcall
add
inc
and
sub
les
fwait
sbb
test
ret
mov
sub
xor
xor
aaa
dec
test
movsl
sub
adc
or
iret
sbb
add
int
jns
mov
outsb
inc
pop
add
xorl
xchg
xor
pop
ss
pop
mov
je
stc
inc
cmc
mov
rol
insl
pusha
inc
jbe
addb
mov
negl
es
ljmp
push
xchg
out
mov
mov
sub
bnd
repz
sub
pop
addl
pop
decb
lock
adc
or
enter
fwait
ljmp
xor
xchg
add
stos
ss
jge
jmp
or
loopne
les
stc
xchg
jne
pushl
pop
xchg
or
rolb
cmp
mov
pop
cwtl
lahf
mov
call
mov
push
pop
aam
push
adc
imul
or
pop
jmp
lret
test
lcall
loop
out
dec
sub
rcrb
movl
int3
cli
xor
faddl
fidivrl
mov
pop
inc
mov
loopne
push
fstps
or
push
stc
movsb
inc
inc
mov
pop
dec
addr16
sbb
xchg
sbb
lcall
lret
cli
mov
pop
pop
shlb
mov
or
adc
mov
outsl
loopne
add
or
or
adc
mov
test
aam
pop
sbb
ja
es
andps
int3
push
cli
pusha
sbb
mov
dec
dec
andl
adc
fmuls
fs
dec
loop
filds
or
sbb
mov
mov
and
sub
mov
cmp
test
dec
add
repnz
inc
cli
decl
daa
rorl
and
popa
and
fistps
jne
sub
xor
es
lcall
add
cwtl
xor
orl
out
arpl
lock
lcall
pop
daa
mov
lods
repnz
jl
sbb
mov
jmp
sbb
stos
mov
dec
pop
aam
cld
push
push
aas
loopne
cmp
pop
add
pop
in
sub
daa
inc
inc
mov
sbb
push
sbb
fs
mov
push
scas
or
mov
rcll
adc
or
jg
mov
cmpsl
sarl
push
hlt
xor
mov
sub
std
add
adc
fcos
mov
xchg
push
js
add
in
inc
sbb
mov
adc
cmp
aas
mov
loopne
mov
insl
cli
mov
fs
xchg
insl
or
inc
testb
lcall
mov
adc
cmp
dec
xlat
pop
adc
aam
lret
popa
cmp
xchg
das
push
inc
mov
xchg
sub
das
mov
cmp
cld
ja
stc
cli
aas
roll
jp
cmp
mov
xorl
cli
cld
cltd
dec
ss
inc
ljmp
push
and
cmc
pusha
imul
sub
mov
ret
faddl
jns
sar
testl
mulb
dec
mov
incl
pusha
xchg
movsl
loopne
andl
pop
divl
cwtl
ss
and
sub
call
push
add
mov
push
fnstenv
filds
dec
cmpsb
xchg
sbb
xor
out
test
mov
adc
pop
loop
adcb
jmp
push
adc
iret
add
sub
push
cmpsb
aam
std
pop
add
mov
mov
pusha
or
jmp
clc
ja
cld
call
ret
xlat
test
call
dec
gs
enter
adc
repnz
mul
mov
les
std
pusha
out
iret
xor
push
sbb
test
clc
mov
orb
add
roll
jecxz
xlat
fdivs
jmp
cli
mov
mov
enter
call
pop
inc
stc
sub
mov
mov
xlat
fidivs
pop
mov
add
mov
sub
xor
xchg
push
mov
mov
pushf
push
into
test
mov
imul
loope
pop
adc
ljmp
mov
push
pop
scas
addr16
fadd
jae
aas
mov
dec
rorb
mov
cwtl
push
pop
push
mov
inc
mov
inc
sub
mov
xorb
cmpb
aam
mov
stc
in
xchg
adc
ret
insb
faddp
test
repnz
mov
mov
mov
sbbb
pop
sub
sbb
loop
push
shll
in
cs
add
ret
imul
fisubs
adc
std
and
aas
lods
push
jecxz
in
ja,pn
popa
push
xchg
push
lahf
lea
fwait
ljmp
add
sub
sbb
inc
lods
push
pop
imul
stos
mov
cmc
sbb
or
push
shlb
jbe
jmp
pop
add
mov
ljmp
pushl
cmpsb
aad
dec
pop
xlat
push
addr16
jb
repz
sbb
or
pop
mov
inc
sbb
popf
cld
call
cs
mov
movsl
push
insl
xchg
sub
sub
push
jo
adc
sti
in
cmc
dec
aad
aaa
push
dec
rcrl
cmp
cltd
decb
add
mov
out
push
in
and
cmpsl
and
xchg
mov
jae
icebp
lcall
shl
cmpsl
daa
pop
add
sub
inc
imul
adc
cld
icebp
jo
sub
sbb
out
rcrl
jl
cmp
mov
xchg
mov
mov
andb
test
rep
lock
add
add
cmp
xchg
add
pop
xor
lahf
push
jbe
fistpll
jle
subl
jbe
mov
and
pushf
ret
aas
mov
das
and
push
mov
jge
mov
xchg
rorl
lock
mov
xchg
sbb
das
dec
bound
mov
xor
jo
dec
inc
popa
nop
dec
mov
loopne
pusha
into
fisttpl
mov
cmp
lods
loope
dec
add
push
xor
sti
mov
es
adc
add
cmp
in
inc
rclb
test
push
lret
lret
test
pop
scas
fldl
aam
loope
ss
sub
or
jne
jne,pt
call
es
adc
jge
xchg
subb
mov
mov
sbb
std
mov
ret
pop
data16
pop
aas
adc
and
ds
and
addl
lahf
and
push
push
test
dec
add
dec
movsb
ret
test
jae
mov
or
mov
dec
push
outsb
std
stc
dec
pop
jp
shrb
ljmp
lcall
pop
mov
push
or
aas
movsb
xchg
ljmp
out
sti
cmp
dec
sbbb
inc
or
int
sbb
jp
mov
mov
sbb
xchg
mov
sub
inc
cli
adc
mov
idiv
adc
inc
mov
mov
mov
in
sub
and
push
fdiv
sbb
fidivs
push
cmp
mov
loop
ret
xor
sarb
push
push
xchg
or
jg
add
mov
inc
movsl
shrb
enter
adc
mov
mov
imul
sub
ja
loope
or
dec
std
mov
sub
pop
add
jo
mov
int
call
mov
pusha
xor
inc
or
cmp
shll
add
scas
push
nop
xlat
jb
jg
push
jbe
mov
repnz
mov
out
sbb
cltd
sub
leave
push
cmp
adc
test
cld
sub
inc
cli
xchg
rol
divl
push
cwtl
pushf
adc
add
adc
paddd
mov
sbb
inc
and
lcall
ss
push
flds
and
xor
xlat
mov
lret
mov
cmp
lea
mov
cmp
xor
mov
test
rol
inc
dec
dec
stos
add
or
les
dec
ljmp
pop
xchg
cmpsl
enter
jmp
fnsave
mov
dec
fucomi
cmc
adc
sub
dec
mov
xchg
mov
adc
outsl
cmpsb
pop
or
adc
add
xchg
jle
pusha
cmp
mov
cmp
and
mov
lods
sub
test
ffreep
movsl
cwtl
bound
push
xchg
sbb
inc
pushf
outsb
les
or
adc
adc
pop
pusha
cmp
push
mov
je
test
incb
inc
push
mov
fsubrs
mov
and
pop
sbb
icebp
add
add
adc
push
mov
add
in
adc
mov
jno
xchg
xor
cmp
and
int
adc
sub
add
fildl
in
add
pop
mov
insb
pusha
jmp
faddl
mov
ljmp
xchg
loopne
sub
pop
mov
mov
mov
push
test
imul
pop
add
xor
inc
cmp
scas
mov
data16
cmp
add
mov
jb
cli
push
dec
rcrl
pop
out
xor
xchg
ljmp
addb
jnp
add
mov
cli
hlt
cwtl
sbb
jp
pop
sub
cmp
ljmp
add
pusha
idivb
in
loope
hlt
sub
cmp
cmp
push
stos
std
dec
movb
daa
rcrl
add
pop
call
repnz
cmp
jge
push
or
mov
test
add
xor
hlt
test
mov
daa
sbb
adc
sub
lea
in
int
pop
lret
mov
pop
pop
push
incl
add
and
arpl
mov
xchg
lea
jg
test
xor
fs
pop
out
push
inc
pop
icebp
xlat
fsubrl
dec
shl
pop
cmpsb
addr16
jmp
xchg
or
les
jb
and
pushl
aam
push
jno
xchg
adc
and
int3
iret
add
add
mov
stos
fwait
cs
push
in
ret
and
mov
call
lock
dec
mov
push
insb
push
xor
clc
incl
dec
mov
and
push
adc
and
out
lds
js
sar
das
clc
out
mov
outsl
pusha
adc
daa
xchg
setl
and
mov
leave
sub
cmp
add
cmp
imul
ficompl
repz
dec
add
add
popa
int
out
push
cmp
pusha
mov
ds
jg
mov
and
lds
pop
mov
jno
jmp
jecxz
les
jg
outsb
rep
gs
icebp
gs
inc
jg
ret
fdivrl
in
or
jb
adc
lea
xorl
adc
stc
shlb
and
repz
inc
idivl
unpckhps
mov
pusha
adc
push
add
lret
aaa
push
stos
mov
inc
ret
cwtl
out
mov
xchg
xchg
sub
filds
xor
in
hlt
push
les
jb
imul
subb
pop
out
bound
and
outsl
data16
and
jp
mov
pop
clc
jmp
xor
xor
clc
pop
mov
jb
sbb
add
outsl
push
icebp
cmp
shrl
shl
enter
mov
das
test
adcb
push
ss
mov
out
and
add
lahf
adc
jae
sar
and
xor
mov
icebp
ljmp
mov
jne
mov
dec
les
mov
cwtl
pop
or
xor
sbb
pop
jg
in
rorl
nop
or
dec
insl
ret
aas
pop
dec
addr16
lock
out
cmp
inc
out
movsl
mov
push
push
adc
sar
lods
adc
inc
or
scas
mov
xor
sbb
pushl
inc
xchg
jl
jbe
cltd
add
xchg
jg
mov
popf
xchg
xchg
push
imulb
push
ss
jb
xor
jp
mov
cmp
arpl
mov
out
out
std
popl
push
es
fistpll
repz
rorl
pop
add
int
cmc
dec
bound
out
adc
dec
or
pop
cmp
push
movsl
xor
jbe
mov
mov
std
mov
mov
push
dec
or
cld
pop
cld
inc
add
filds
jecxz
pop
adc
jne
fnsave
icebp
popfw
and
sub
lea
nop
cmpsb
cltd
xchg
inc
xor
and
jns
pusha
fisubrl
addr16
push
cwtl
aad
cmp
inc
loop
or
test
cmp
subb
paddsb
jo
js
pop
cmc
filds
bound
xchg
jp
pop
sub
dec
push
add
xchg
adc
testl
push
imul
call
adc
mov
xor
inc
lds
lahf
into
mov
pushl
add
jo
xor
dec
mov
hlt
pop
push
daa
movsl
sub
inc
aas
mov
or
xorl
and
repz
pop
adc
or
daa
jecxz
iret
inc
bound
mov
mov
or
test
rol
cli
xchg
enter
aam
adc
xor
frndint
mov
out
pop
dec
das
adc
xchg
mov
std
or
push
inc
jmp
movsl
iret
rolb
loope
mov
pop
xchg
lahf
adc
or
in
fcomp
mov
xchg
push
jg
mov
xchg
pop
pop
mov
add
repnz
in
scas
pushf
jno
and
jge
incl
inc
jl
xchg
xor
or
or
lcall
or
dec
adc
and
xchg
xlat
inc
fisubrs
or
mov
adcb
fildl
ja
fs
cmpsl
rolb
hlt
dec
ljmp
punpcklbw
or
scas
xchg
subb
repnz
cmpw
inc
cli
adc
push
rclb
ljmp
sbbl
scas
add
inc
cli
rorb
or
mov
xor
pusha
mov
dec
pop
decl
loop
adc
shr
cmp
cmp
repz
in
push
int
jg
cmc
push
sub
add
ljmp
je
sub
ja
mov
loop
outsl
xchg
jg
jno
nop
clc
jmp
inc
inc
jae
pop
pop
fs
push
mov
or
add
movsl
inc
push
jmp
jmp
jg
data16
enter
ret
push
pop
cmp
loop
xchg
mov
xchg
add
pop
loopne
mov
leave
jo
aam
loopne
xchg
std
mov
out
les
adc
out
mov
push
addr16
movsb
cmp
lret
fs
cli
sbb
pop
add
pusha
xor
xchg
mov
out
mov
pop
inc
ret
test
mov
pushl
ret
mov
sahf
cmc
das
cmp
mov
pop
or
decl
xor
inc
lahf
out
dec
dec
sub
mov
and
std
outsl
jle
sub
cmp
jmp
and
clc
mov
fld
add
lock
out
out
dec
jns
push
in
es
or
lret
pop
cwtl
dec
in
inc
stos
pop
jg
fbstp
fnstenv
mov
jo
jmp
cmp
dec
lods
inc
loope
inc
jg
mov
test
xchg
pop
mov
adc
sbb
lods
aam
cld
and
int
adc
push
dec
jbe
sbb
cmp
add
enter
push
ret
inc
or
ljmp
sbb
pop
sub
test
pusha
sbb
lret
arpl
std
ljmp
loopne
mov
xor
repz
cwtl
push
or
ss
incl
mov
pop
into
jo
outsb
dec
movsb
ss
inc
mov
sbb
stos
add
stc
fmull
sbb
daa
cltd
lret
inc
out
and
test
sti
mov
jno
cmp
push
mov
es
insb
inc
sbb
dec
pop
pop
mov
pop
mov
or
mov
mov
std
cs
insb
stos
sub
pop
xchg
lods
mov
std
in
add
sbb
jo
pmuludq
inc
inc
loop
fs
mov
rclb
and
pushl
outsl
xor
cmp
jo
iret
iret
iret
aas
add
std
push
and
add
test
push
mov
adc
or
in
fwait
aam
arpl
ljmp
shll
jb
mov
leave
test
mov
jl
rorl
subb
sbb
cmp
xchg
xchg
xchg
or
ljmp
out
call
jl
iret
inc
sub
mov
push
inc
gs
test
push
adc
push
pop
mov
ret
push
sbb
fimuls
and
push
xor
or
call
jbe
arpl
push
jo
lods
das
stos
decl
insb
or
mov
inc
mov
cmp
popa
push
lcall
mov
arpl
pop
inc
das
push
lods
dec
lcall
cmp
xchg
gs
inc
out
dec
add
in
cmp
push
add
les
loopw
push
or
xlat
cwtl
pop
mov
xacquire
lret
js
xchg
pop
jns
add
fistl
movsl
ja,pn
movsl
jmp
imul
out
int3
push
add
test
xchg
mov
call
pop
add
lret
pushf
sti
mov
test
lret
inc
xchg
push
icebp
dec
loope
pop
out
inc
nop
out
rep
lcall
mov
sbb
dec
xor
sub
sub
mov
cli
pop
add
scas
cmc
cli
bndstx
inc
loopne
mov
jnp
and
jb
test
cwtl
inc
ret
push
incl
mov
repz
loopne
xor
in
xor
sti
mov
sbb
aad
rorb
les
test
iret
ljmp
nop
ja
jp
hlt
movsb
inc
repnz
jg
pmaxub
enter
lods
aad
mov
mov
iret
andb
pop
pusha
jp
faddl
mov
cli
inc
dec
lahf
mov
test
cmp
push
lcall
cmc
sub
jmp
in
mov
or
test
mov
hlt
cmp
inc
add
cmp
test
or
test
pushf
mov
jg
and
pop
rcll
push
js
add
pusha
aam
lcall
mov
sbb
sub
xor
dec
cmpl
cmpsb
flds
in
out
jg
fs
cld
mov
ss
inc
jns
int3
inc
fildll
cmp
cmp
inc
fstpt
call
jnp
fs
sbb
sahf
ret
or
mov
cmp
in
xchg
mov
pusha
mov
outsl
adc
sbb
mov
or
push
pusha
push
sbb
pop
clc
fisttpll
pop
lret
xchg
test
adc
ja
loope
inc
pop
mov
sbb
dec
add
push
leave
pusha
mov
inc
js
push
dec
out
pop
insl
and
fdivrs
xchg
dec
inc
mov
and
inc
aas
jo
mov
add
lret
inc
or
xchg
add
sbb
sbb
mov
dec
mov
scas
add
mov
lods
popf
notrack
or
add
push
mov
mov
in
mov
pop
add
push
lods
clc
cmpl
or
sahf
dec
cwtl
gs
push
icebp
pop
loopne
add
pop
add
std
hlt
xchg
in
and
xchg
mov
xor
add
fdivl
hlt
xor
add
mov
or
dec
or
inc
and
mov
inc
pop
mov
sbb
add
jg
push
push
cs
add
xor
mov
pop
into
sub
jg
or
inc
mov
pop
jecxz
lods
or
test
lock
mov
lret
lahf
imul
push
xor
mov
rcl
loop
movsb
sub
std
or
cmp
cmp
pusha
dec
push
testb
popf
arpl
out
or
add
mov
lahf
dec
lock
setg
mov
movsl
jb
mov
jno
test
push
pop
cmp
dec
fists
hlt
push
les
sbb
sub
stos
aad
dec
add
cmp
clc
xchg
sbb
cmpsb
ret
sbbl
jle
sbb
ja
mov
cmp
push
int
movsl
pushf
test
add
mov
jno
push
adc
push
bswap
add
mov
adc
push
test
xor
shlb
xchg
dec
lahf
je
sbb
sbb
outsl
icebp
call
sbb
popl
sbb
xchg
leave
out
insb
mov
das
push
or
sbb
rorl
lock
lods
in
out
add
xor
shr
mov
sbb
out
das
ds
inc
stos
pushf
jl
mov
add
aas
xchg
je
xor
jl
call
xchg
clc
push
sub
hlt
insb
scas
int3
loope
push
movsb
dec
sbb
mov
xchg
inc
inc
nop
jg
push
cmp
out
jbe
ss
inc
inc
loopne
push
mov
mov
and
mov
push
pusha
pop
sar
call
push
dec
or
push
sbb
call
mov
add
lret
jle
dec
sbb
nop
inc
cmpsl
sub
add
pusha
addr16
stos
jne
cmc
mov
xchg
scas
pop
call
shll
popf
push
out
int
inc
cli
push
pop
js
sub
pop
fmull
sbb
lret
jnp
jo
jge
sub
loopne
sbb
les
adc
rorl
js
test
mov
outsl
pop
sti
roll
test
test
jecxz
or
xor
dec
test
int
xchg
pop
lea
mov
filds
mov
bound
pushl
add
incb
sbb
pop
adc
fidivl
mov
mov
dec
pop
incl
lcall
pop
aaa
outsb
jecxz
adc
fistl
pushl
pushf
pop
mov
pop
test
popa
pushf
mov
xchg
push
ljmp
mov
test
test
fiadds
adc
aas
movsb
mov
in
cli
call
mov
or
xchg
add
jl
and
pop
sbb
xchg
jmp
mov
xor
cltd
jecxz
pop
adc
inc
xor
roll
add
in
std
pushl
and
xchg
ljmp
cmpsl
cmp
inc
mov
cli
or
xor
xchg
testb
lds
jg
loope
cld
clc
rolb
cli
cld
and
xor
cs
out
jnp
shlb
cmp
es
rorb
or
test
loopne
push
inc
inc
push
out
les
sar
das
push
stos
mov
push
pop
ret
mov
push
jg
xor
cli
ds
shlb
xor
sbb
repnz
cmp
jo
jb
popa
aam
mov
addr16
and
mov
mov
call
cmpsb
fdivl
sbb
jne
arpl
sbb
mov
xchg
mov
std
mov
je
mov
pop
push
jnp
mov
push
clc
sarl
and
add
mov
filds
loop
data16
leave
iret
test
cmp
incl
shrl
andl
push
clc
mov
inc
sbb
cmc
popf
mov
outsb
mov
jb
sub
cli
push
jno
push
cmp
adc
inc
mov
xor
or
sbb
js
decl
cmp
cmp
lret
and
push
lock
aas
sahf
inc
jbe
push
nop
mov
and
mov
add
mov
mov
adc
aaa
fcompl
add
jmp
inc
popa
or
call
xchg
decl
scas
xchg
fwait
jl
or
mov
push
push
add
test
outsl
cli
cld
and
inc
xor
dec
hlt
inc
stos
in
jno
xor
dec
fwait
cltd
and
mov
out
sbb
jo
sub
pop
test
inc
outsl
xor
xor
ficoml
xchg
popa
lea
mov
mov
loop
cmpsl
addb
sbb
pop
jo
ficompl
jle
inc
xlat
adc
imul
xor
jbe
ss
test
data16
orl
cmp
call
cmp
add
mov
pop
adc
or
add
les
pushf
decl
movsb
fisttps
inc
into
and
add
loop
dec
jno
or
cmp
sar
dec
dec
push
mov
sub
ja
les
enter
scas
dec
add
xor
xchg
mov
std
and
je
push
jno
pushf
jle
dec
pusha
repnz
call
mov
jmp
addr16
xor
jo
shl
and
sbb
scas
std
push
aad
out
pop
int3
mov
dec
out
movsl
or
shrl
aad
cltd
adc
int3
orb
test
movd
jmp
add
sbb
jmp
and
iret
ret
push
push
sar
inc
and
out
stos
test
xchg
test
xchg
mov
incl
sub
insb
pop
in
enter
fdivr
outsl
rcrb
xor
xor
jl
xchg
jbe
jnp
cmp
mov
jg
mov
cwtl
pop
nop
xchg
lds
xchg
xor
rol
fldl2t
and
dec
dec
shrl
arpl
das
sar
inc
add
es
inc
pushl
pusha
rclb
push
imul
orb
push
inc
ret
pop
enter
orl
hlt
jle
and
cmp
inc
es
push
movsl
pop
add
bound
sar
cmpsb
test
add
pop
cmp
dec
int
lods
pop
pop
lock
jecxz
movsb
cmp
push
test
lcall
mov
decb
push
xor
mov
icebp
cmp
xor
sarb
fcmovnb
add
nop
add
pop
pop
xor
subl
sbb
mov
add
sbbl
mov
jo
mov
jg
clc
fsubrs
push
out
sbb
hlt
pushf
push
fistl
sub
jbe
push
inc
pop
std
sub
imul
mov
or
hlt
shrb
mov
inc
out
orl
int3
test
or
xchg
cmc
lcall
sbb
push
out
mov
adc
sub
xchg
pushf
shlb
jne
pusha
pushf
xchg
push
push
cmpsb
in
push
stos
dec
or
jo
int
sbb
stos
sbbl
icebp
loop
or
les
push
jmp
idiv
addb
sti
push
sahf
mov
outsb
movsl
jg
mov
sti
jg
jbe
xchg
insb
je
add
flds
call
xcrypt-cfb
cmpsl
jecxz
jl
add
decl
xor
push
sub
mov
ja
ret
or
add
lods
xchg
inc
mov
pop
jp
bnd
es
adc
jb
sub
add
or
shlb
jl
cmpl
addr16
rcrb
in
cmpsl
jb
jg
mov
sbb
cmp
xchg
loope
adc
dec
outsl
cltd
outsl
std
and
add
cld
pusha
mov
aas
push
dec
andb
and
pop
mov
insl
repz
mov
rolb
inc
popf
add
jns
fildll
repnz
gs
xchg
cwtl
mov
cld
out
or
shlb
stos
or
jo
and
cltd
adc
aaa
outsl
outsb
add
insl
xor
or
daa
or
les
out
add
enter
cs
jmp
out
inc
loope
ljmp
popf
jle
dec
mov
sti
shr
pop
or
shrl
lret
insl
pop
popa
fiaddl
movsl
test
jb
in
loopne
push
push
adc
repnz
stc
push
rcll
fsubl
xchg
in
push
jle
incl
cmp
popf
out
add
dec
jns
js
cmc
dec
out
push
in
mov
or
out
hlt
lock
push
and
xchg
pop
js
push
push
xchg
or
jo
inc
pop
hlt
pop
inc
arpl
dec
mov
mov
adc
inc
ret
push
shrb
cmp
sbb
add
jg
add
je
adc
sbb
add
hlt
sub
mov
or
jmp
incb
sbb
push
aas
cmp
mov
sub
lods
decb
mov
pop
or
gs
adc
mov
pusha
sbb
std
cmp
rcrl
pop
fdivrs
inc
pop
xor
sub
popa
lahf
sbb
inc
pusha
sub
call
cmc
aam
cmpsb
sbb
or
lcall
pop
testl
mov
inc
cltd
movsb
sbb
incl
test
sbb
and
fimuls
in
call
pushf
dec
dec
dec
pop
sub
pop
es
dec
ljmp
jl
jo
jo
xor
inc
xchg
mov
cmp
mov
arpl
subl
push
loope
pop
pop
loope
fildl
shlb
cmc
push
mov
adc
divl
pop
in
fadds
sbb
or
or
stos
faddl
lret
out
stos
lods
xor
sar
cmpsb
lret
add
jbe
mov
mov
push
icebp
pop
pop
cld
decl
stos
xchg
repz
shrb
dec
sbb
sbb
and
dec
shrb
sbbl
adc
outsl
dec
pusha
inc
in
lret
push
mov
incl
lock
add
mov
iret
and
xor
dec
dec
add
lahf
jne
shl
cmp
add
cmp
popf
in
mov
and
sbb
dec
or
xchg
cmc
xchg
lods
in
mov
add
jbe
pop
lock
mov
inc
fildll
sbb
xor
mov
mov
jns
xchg
xchg
xchg
hlt
cmc
jecxz
clc
aas
mov
rcll
test
movsl
int3
push
xchg
dec
ret
mov
je
jmp
mov
cmpsb
and
leave
gs
mov
loop
iret
xor
and
outsl
fsub
adcl
and
mov
inc
mov
inc
xchg
fisubrs
test
lods
xabort
test
mov
mov
fnstenv
mov
cmpsl
dec
fisttps
pop
mov
lods
jo
push
sub
or
pop
jl
fiaddl
cmp
pop
sbbb
dec
xchg
lock
jo
mov
jl
mov
pop
sbbl
out
iret
dec
loopne
or
mov
mov
jb
lea
mov
int
mov
and
sbb
add
lock
pusha
mov
push
or
mov
call
jnp
or
push
mov
fst
jae
out
xchg
ficoms
repz
push
rcll
imul
mov
pop
cmp
scas
inc
add
jmp
pop
add
imul
out
or
shl
inc
sbb
in
scas
jno
adc
lods
lods
xlat
mov
cmpsb
test
and
push
push
push
ret
add
in
cmp
incl
rorl
cmp
inc
inc
and
pop
push
icebp
js
xor
xchg
dec
pop
fcoml
sbbl
jge
stos
inc
mov
lret
push
inc
add
push
sar
pop
cmc
xchg
xor
popf
xor
mov
dec
and
or
push
lock
das
in
push
inc
jne
sub
pushf
in
push
hlt
pop
or
stos
sub
pushf
jge
or
in
or
mov
cli
decl
insl
push
mov
and
enter
and
inc
pop
divl
and
cmp
pop
fsubrs
xor
pop
ljmp
inc
aas
in
sbb
push
test
sahf
loope
cltd
sbb
outsl
xchg
xchg
mov
mov
jno
or
cmpsl
mov
pop
movsb
pop
fdivr
icebp
imul
sub
and
cmp
mov
rcrb
add
push
stos
mov
lea
cmp
xchg
push
jmp
jns
cmp
push
cmp
flds
push
mov
loop
add
jnp
popa
iret
addb
fs
mov
cmp
jmp
bound
imul
aaa
xchg
nop
mov
sbb
lods
fmull
push
or
sbb
div
dec
and
decl
pusha
mov
repz
test
leave
lcall
repz
ret
sbb
mov
je
xchg
pop
cltd
jg
daa
mov
es
rorl
mov
cltd
dec
add
jle
inc
push
mov
rclb
ret
xlat
pop
clc
or
ljmp
fdivr
sub
mov
inc
inc
sbb
decl
add
mov
dec
outsl
dec
shl
xchg
inc
jbe
data16
icebp
popa
rolb
insl
cmpsl
or
fidivs
mov
and
jl
shrl
aas
fdivr
fmul
inc
mov
mov
sbb
addl
fimull
dec
and
add
pop
movsb
push
pop
cmp
fildl
mov
mov
sbb
rcrb
cmpsb
add
aad
call
shr
pop
imull
push
jmp
cmc
bound
das
cmpl
loop
les
addr16
ja
xchg
or
xchg
mov
sub
or
sub
inc
movl
pop
push
add
adc
repz
mov
loop
icebp
cmp
dec
ds
cmp
jmp
gs
or
popa
mov
or
push
pop
sbb
mov
or
add
pop
jle
adc
mov
or
adc
sbb
outsl
lods
mov
out
or
call
jp
push
cmp
js
mov
xchg
adc
adc
pop
xor
sbb
adc
shrb
repz
ja
add
inc
mov
call
cmp
addps
shl
fwait
icebp
in
inc
out
imul
jns
outsb
orl
pop
mov
push
ret
fwait
aas
out
push
pushf
xchg
xchg
sbb
xor
push
adc
inc
xor
dec
andb
pop
xchg
cmc
incl
ljmp
fbld
sbb
stc
dec
insl
or
ficomps
frstor
add
das
jecxz
add
lock
inc
dec
scas
push
push
lds
cmp
dec
jno
and
or
jo
push
imul
pop
jae
cmp
xor
jle
mov
rcr
movsl
stos
pop
lods
adc
fdivr
dec
cs
rcrl
xor
mov
dec
jle
loope
addr16
jae
insl
popf
jo
loopne
jle
adc
repnz
xchg
add
inc
aam
mov
call
ljmp
icebp
sbb
push
mov
daa
sub
ljmp
pusha
pop
idiv
pop
lock
arpl
mov
enter
pop
push
repnz
scas
js
aas
adc
dec
adcl
xchg
cmp
sbb
stc
jecxz
mov
loopne
lock
faddl
jae
and
insl
scas
pop
aaa
jbe
cmp
ljmp
scas
aas
mov
sub
sub
fbstp
adcl
add
cmp
pop
stos
out
or
sub
xchg
adc
inc
adcb
mov
add
add
adc
pop
pop
vmovaps
call
mov
mov
stos
add
or
adcb
jle
das
fwait
mov
pop
stc
hlt
pop
jb
and
scas
add
pusha
adc
cmp
add
mov
es
in
insl
mov
jmp
xor
fcoms
cmpsl
push
out
mov
jle
cli
out
mov
mov
cmp
push
dec
cmc
adc
pop
arpl
int
inc
mov
std
push
leave
fiadds
xor
movsb
lock
pushf
dec
jmp
ds
es
xlat
into
sub
mov
popf
shll
sbb
cmp
xor
cmp
xchg
adc
pop
push
in
push
cmpl
cmpl
in
sahf
or
cmpsb
in
or
add
jg
mov
inc
shlb
insb
insb
push
adc
mov
dec
frstpm(287
sbb
and
rclb
sarl
negl
adc
add
incl
in
xchg
sbb
pop
xchg
dec
and
in
mov
icebp
push
sbb
pop
lds
inc
test
clc
daa
mov
and
cmp
jle
das
jmp
dec
jg
in
fimuls
push
mov
lret
pop
popl
xchg
and
sub
inc
scas
bound
mov
inc
rcl
mov
popa
pusha
xor
mov
adc
fisubl
lret
sub
or
mov
in
pop
sbb
pushf
add
xchg
push
mov
imul
inc
aam
jp
outsl
adc
dec
jg
dec
mov
lcall
cwtl
sbb
arpl
repz
hlt
cltd
les
xor
shl
sahf
fisubrl
lods
out
mov
scas
push
es
push
in
sbb
cld
lock
cli
push
lahf
and
aas
push
lcall
push
fiaddl
cmc
add
mov
lods
xchg
sub
aam
or
jg
jo
adc
movsl
ret
loope
push
add
std
mov
xchg
xchg
jne
add
sbb
test
mov
cmp
popl
cmp
scas
lods
or
mov
hlt
pop
mov
jnp
and
xor
or
inc
test
mov
cmovo
xchg
cs
pop
in
jnp
dec
addr16
dec
pop
cmp
inc
add
pop
push
pop
hlt
inc
jae
sbb
adc
cmp
mov
fsts
icebp
call
inc
xchg
je
cwtl
shrl
and
loopne
mov
push
icebp
inc
pop
shll
pusha
rolb
push
sar
mov
xchg
pop
push
clc
int
and
push
adc
inc
dec
or
js
mov
shlb
xor
and
mov
call
cmc
jecxz
ja
rorb
notl
mov
or
add
mov
xchg
inc
dec
pop
push
sbb
dec
inc
mov
lock
add
lret
test
movsb
mov
insb
and
cmpsb
test
lods
dec
xor
pop
rorl
pop
xchg
insl
lods
adc
dec
ret
add
push
gs
jne
push
sub
jle
inc
rcr
mov
jl
cmp
out
or
js
cld
pop
adcl
lds
push
adc
dec
in
repnz
fsubr
outsl
inc
mov
and
xchg
loope
mov
enter
xchg
aas
repnz
lods
call
cwtl
pop
lock
test
add
je
add
ds
shll
mov
loopne
pop
imul
je
pop
push
lret
or
jmp
push
popf
xor
adc
arpl
push
pop
add
cmc
scas
mov
test
jmp
xchg
or
nop
mov
and
bound
xor
faddl
imul
cmp
cs
pop
rcl
mov
fidivrs
jne
xorl
orl
xchg
xchg
and
xchg
adc
in
jg
imul
dec
sbb
insl
int
scas
je
add
incl
sub
stos
xchg
pop
ds
call
aam
int
popf
lock
in
hlt
lahf
call
adc
in
xor
scas
jge
es
xchg
add
scas
push
addr16
movsb
popf
push
xor
adc
cli
ja
mov
pop
push
jmp
push
add
popf
fwait
leave
push
nop
iret
jnp
lret
cmc
and
dec
xor
fwait
pop
add
adc
scas
lcall
imul
jae
fiadds
or
mov
pop
sahf
mov
mov
nop
inc
imul
push
push
add
test
xor
stc
arpl
mov
rclb
out
cmp
sbb
mov
mov
call
notl
mov
or
mov
xchg
movb
xchg
enter
cld
xlat
rorl
dec
rclb
sbb
xlat
loopne
jg
pusha
mov
jb
and
bound
std
or
xchg
incb
sbb
mov
int3
mov
jne
pop
or
loop
das
adc
adc
fsubl
pop
aam
dec
clc
out
out
cmc
lret
aas
insl
incl
sub
xor
dec
aaa
js
pop
loopne
sbb
lds
stos
subb
xchg
xchg
dec
pop
xchg
sub
insb
add
test
and
mov
call
pop
xchg
sub
xchg
dec
addr16
fs
fs
cmc
add
and
mov
jns
fsubrs
stos
data16
jp
jg
insb
lea
shll
mov
and
jbe
repz
dec
dec
xchg
pushf
out
add
mov
insl
inc
int3
jp
add
xchg
lea
ljmp
daa
cwtl
inc
sbb
jns
in
fcmove
adc
xorl
adc
rorl
xor
mov
dec
mov
xor
jl
loopne
and
inc
mov
lock
dec
sub
mov
cmpsb
pushf
inc
ret
cmc
mov
cli
lahf
shrb
mov
lds
out
aad
insb
popa
pushf
and
jae
cli
add
lock
lods
cmp
js
lret
dec
andb
clc
adcb
ss
cld
push
or
and
xor
js
sub
fadds
pushl
xchg
and
xor
sbb
sahf
mov
popl
mov
nop
or
cmpsb
call
mov
pushl
or
jbe
add
cltd
add
leave
pop
mov
aam
push
das
jecxz
inc
pop
lret
mov
sbb
in
lcall
in
ljmp
popl
jge
iret
mov
and
dec
xchg
xchg
in
inc
pop
out
xlat
loop
jmp
popa
sub
mov
cmpsl
fldcw
add
aaa
xor
cmc
lcall
notb
leave
popa
pop
shll
pusha
sbb
inc
fidivs
xchg
xor
fnstenv
pop
dec
mov
ret
test
daa
std
enter
clc
fs
rcrb
aaa
cmpsl
pop
repz
xor
push
loope
push
dec
mov
pop
mov
mov
cmp
lods
jno
cmp
mov
mov
icebp
fldcw
loop
jg
mov
in
andl
jl
jo
ja
add
aas
shlb
sub
inc
xchg
sahf
mov
outsb
adc
mov
cmp
xorb
ds
cmp
arpl
push
inc
cmpsb
decl
cmpsl
xchg
and
out
inc
jp
and
push
dec
dec
jmp
adc
insb
rclb
in
cmp
and
mov
fldl
repnz
dec
mov
dec
adc
mov
daa
mov
rcrb
mov
mov
and
clc
jns
jns
sbb
shlb
inc
add
nop
mov
adc
mov
pop
xchg
gs
addl
add
mov
mov
sbb
or
sbb
or
and
pushl
cmpl
and
cld
inc
xorb
cmc
sub
sbb
pop
cmpps
lcall
push
pushw
dec
sbb
incl
add
cmp
xor
add
es
je
push
push
pop
scas
shlb
fnsave
pusha
xlat
and
cwtl
cltd
mov
cmpsl
stos
mov
inc
pop
push
sub
mov
pop
ret
xchg
out
jo
dec
lock
sar
cmp
je
inc
or
clc
loopne
adc
xor
ja
push
jp
pop
add
adc
rcrb
and
jno
out
cmp
adc
scas
mov
ret
xor
mov
cmc
push
cmc
popf
and
and
pusha
mov
adc
add
in
and
insb
mov
or
int
sbb
sub
cmp
add
and
sti
push
jmp
jg
scas
mov
mov
inc
jo
int3
movsb
test
and
aas
into
jmp
jmp
scas
mov
xchg
xor
les
sbb
push
or
cmp
mov
mov
lods
aad
xchg
pop
in
call
stos
sahf
cmc
arpl
pop
mov
mov
xor
fisubs
mov
pushl
subl
add
xchg
sbb
mov
and
orb
dec
shrb
xlat
popa
popf
jb
test
jo
pop
adc
stos
test
dec
stc
rcr
test
incl
push
das
jmp
cltd
dec
aaa
jle
jb
mov
add
push
or
loope
daa
and
push
ljmp
jge
push
xor
sbb
fnstsw
out
sub
or
xchg
or
lahf
inc
pop
mov
add
pop
fisttps
jge
shrb
adc
adc
jbe
jg
incl
adc
jbe
mov
shld
jg
loop
mov
cmp
and
push
out
xchg
push
mov
jo
inc
aam
test
pop
test
jnp
in
push
je
sub
aaa
je
mov
inc
mov
lods
push
mov
pushf
pop
fidivrs
test
inc
loope
call
sti
bsr
push
fmul
push
lcall
lock
rcll
in
movsl
push
jg
outsl
cmp
mov
movsb
iret
fsubr
shr
sbb
sbbb
jmp
in
xchg
pop
mov
pusha
sbb
outsl
mov
pop
int3
lods
pop
add
mov
add
imul
adc
inc
or
jo
sub
inc
push
sub
add
inc
outsl
xor
nop
bound
add
call
imul
push
loop
lcall
fdivs
mov
jmp
in
xchg
aam
pop
loopne
imul
cmp
add
pop
push
lcall
inc
xlat
lret
ds
outsl
mov
push
cli
push
pop
imul
rolb
add
fbstp
inc
sbb
jg
jo
sub
add
rcl
inc
lods
mov
ja
ds
ljmp
fcomps
add
xchg
shl
movsl
and
inc
std
outsl
movsb
mov
mov
loopne
ljmp
add
pop
mov
int3
cmp
inc
aaa
jb
icebp
fld
dec
jae
and
mov
xor
and
std
jg
add
inc
std
mov
inc
scas
ret
xchg
test
xor
and
or
xor
pop
ds
cmp
or
rolb
push
mov
das
dec
andl
push
mov
mov
add
inc
adc
jmp
mov
lock
jg
arpl
insl
shll
pop
push
sub
icebp
scas
rcr
sbb
push
jecxz
aaa
inc
lea
add
rcrb
add
ja
fdivs
stos
out
mov
xor
or
xchg
jg
adc
xor
mov
clc
iret
inc
mov
pop
popa
data16
xor
popf
in
jecxz
sbb
ror
pop
scas
cmp
pop
xor
mov
push
dec
adc
jl
out
mov
cld
pop
xorb
js
add
xchg
mov
and
push
aas
or
jne
jg
clc
mov
cmp
sti
icebp
nop
add
lock
mov
mov
add
aad
cmp
add
sbb
push
inc
push
test
or
aaa
mov
lock
cmp
inc
xchg
mov
and
test
jp
aad
inc
mov
mov
shl
in
push
add
and
cwtl
ret
mov
sub
lahf
mov
mov
filds
jge
ss
int
add
mov
ljmp
inc
int
and
pusha
cmp
add
in
in
and
test
push
int
push
stos
rcll
mov
mov
imul
cmp
xor
inc
popa
mov
fsubrl
cltd
js
ljmp
subl
lock
mov
or
mov
aaa
inc
ficomps
sbb
data16
mov
les
adc
cwtl
bound
mov
test
inc
xchg
test
or
aas
into
mov
inc
add
or
clc
ljmp
inc
dec
inc
adc
stc
or
fbld
cmpsl
xor
push
mov
jmp
jl
incl
pop
adc
out
outsl
xchg
aam
jg
scas
xchg
xor
inc
sahf
push
cmp
mov
orb
and
adc
lods
scas
clc
push
xor
jp
mov
jns
lock
sub
mov
jp
dec
sbb
fdivr
lahf
aaa
addb
cmc
leave
sub
pushf
nop
aam
sbb
inc
xor
out
add
aaa
stos
pop
add
pop
mov
or
mov
mov
push
ljmp
push
in
fcmovu
sub
xor
orb
fildll
mov
dec
add
bound
movsl
pop
push
jp
xor
enter
out
imul
out
push
push
mov
mov
les
shlb
adc
pop
insl
pop
out
or
js
mov
cmpsb
andl
xchg
bound
hlt
icebp
adcb
imul
scas
sar
cwtd
or
dec
les
xchg
or
dec
int3
pop
leave
or
scas
jmp
pop
or
jmp
cmp
jmp
xor
xchg
lods
dec
pop
dec
sbb
ret
lock
insl
pop
ss
pop
aas
push
pop
add
push
or
test
jg
incb
cmp
pop
aas
outsb
frndint
mov
scas
and
ret
add
push
cs
sbb
jmp
push
xor
sbb
mov
fs
ljmp
icebp
jl,pn
adc
jae
xor
nop
and
adc
in
pop
sti
scas
mov
iret
add
push
cmp
arpl
mov
xor
cmpsb
push
ficoms
xor
pushl
rolb
cltd
adc
pop
cmp
sub
xor
mov
add
rolb
insl
mov
lds
stos
in
cmpb
mov
add
test
xchg
xor
xchg
adc
xor
or
iret
jl
pop
mov
lea
xor
dec
fs
inc
sahf
mov
xor
pop
arpl
aas
mov
push
in
mov
es
insb
cmp
xchg
pusha
add
repz
and
jmp
dec
xchg
inc
add
pop
sahf
add
repnz
ror
movsb
dec
adc
and
aas
vmulsd
aad
push
fiadds
push
mov
sbb
sbb
out
sar
in
mov
jnp
insb
push
dec
enter
ret
mov
dec
push
decb
xor
out
cld
lock
pop
rolb
lahf
inc
inc
das
push
cmp
mov
stos
in
or
jecxz,pt
mov
cmp
push
aad
stos
jne
or
sbb
or
add
pushl
cmpsl
hlt
sbb
cmp
mov
movsb
je
fcomi
sbb
push
inc
in
jge
sub
pop
mov
pop
jno
mov
adc
mov
adc
mov
xchg
sbb
popa
mov
shr
cmova
sub
mov
daa
aas
or
jg
cmp
sbb
icebp
fisttps
fnstcw
imul
mov
jo
push
js
pop
jno
xor
push
fcompl
lret
xlat
and
sbb
andl
stc
fwait
inc
or
pop
inc
inc
mov
mov
sub
pop
mov
jecxz
add
fistpll
in
test
inc
in
mov
xchg
sub
xchg
push
jo
std
decl
out
lret
pop
or
xorb
cs
cmp
outsl
rol
outsl
fiadds
ss
inc
mov
and
sbb
inc
std
loope
jo
push
or
jp
aaa
add
or
sar
sbb
iret
inc
cmp
adc
scas
and
pop
loopne
add
push
inc
repnz
sahf
mov
in
sbb
pop
mov
in
jg
sbb
cli
enter
pop
aam
test
add
dec
hlt
mov
or
fcompl
pop
call
movb
sarl
sbb
imul
jo
loopne
sbb
out
inc
popa
adc
fbstp
and
push
aad
xchg
decl
mov
add
inc
mov
sub
shll
adc
and
out
dec
inc
mov
arpl
les
pop
and
in
push
push
fstl
sbb
call
iret
jle
mov
add
imul
fistl
cmpsl
pop
xor
jmp
iret
repnz
xchg
push
dec
or
xchg
pop
dec
jbe
lret
jae
icebp
push
adc
sbb
lea
or
adc
arpl
mov
inc
cmp
cltd
shl
aas
lds
and
dec
inc
add
decl
ds
mov
arpl
push
xchg
xor
jb
jmp
jecxz
mov
test
dec
fcmovb
push
lods
jp
inc
add
fisubl
push
lock
mov
js
sub
sbb
jl
adc
push
mov
stos
je
push
xor
cld
call
sbb
sar
in
mov
jmp
lea
pop
or
jo
aas
mov
mov
lea
sbb
jg
pushf
dec
cwtl
fs
fsub
add
add
jecxz
mov
jns
mov
add
add
js
pushf
movsl
rorb
out
popa
movsl
lret
xchg
cmpsb
jo
inc
xchg
cmp
ficoms
xor
lret
mov
sbb
je
add
int3
dec
push
cmpsl
stos
mov
movsb
mov
push
repz
les
sub
out
add
mov
shll
loope
nop
stos
add
or
icebp
cwtl
jbe
in
movsl
lahf
test
dec
mov
mov
je
ret
push
js
lret
loop
lret
sub
push
stc
pop
dec
test
inc
rcr
insb
pop
add
fnstsw
push
and
ja
data16
popa
lods
pop
arpl
cmp
cmpb
mov
push
mov
inc
add
dec
call
js
std
pusha
push
fiadds
inc
sbb
clc
mov
aad
mov
lcall
leave
out
rol
jmp
fidivl
ss
jge
or
mov
stos
daa
pop
add
jb
sbb
std
bound
daa
test
push
pop
test
cld
sub
jmp
xchg
dec
shll
insb
les
int
ret
shrb
dec
xor
xor
or
loopne
repz
jp
push
pushf
ftst
sbb
mov
lcall
xchg
call
jae
or
xchg
lock
pop
out
add
xchg
pushl
push
inc
pop
enter
and
jnp
fcompl
push
int3
cltd
xchg
call
cmp
mov
subb
incb
cs
or
mov
mov
enter
add
test
nop
ljmp
jge
cli
mov
push
mov
cmp
jge
leave
add
and
or
cmp
scas
fisubrs
lds
add
rol
out
in
dec
xor
mov
and
xor
lods
aas
in
and
rolb
lods
xor
dec
fsubs
or
or
clc
call
jp,pt
push
cmp
mov
inc
nop
in
cmp
dec
xor
arpl
shufps
gs
pop
ljmp
cmp
sbb
xor
cmp
sub
add
pop
pop
cmpsl
push
dec
and
loope
sub
jbe
int
popa
adc
mov
adc
jns
sub
int3
lds
test
decl
mov
inc
out
mov
cmp
xor
adc
cmp
mov
into
addl
pusha
mov
repnz
pop
shll
hlt
pop
roll
pop
mov
ficoms
add
sub
dec
dec
xor
jno
adc
inc
clc
addr16
mov
in
add
aaa
mov
inc
fwait
popa
sbb
ja
daa
ror
pop
or
and
jb
test
mov
cwtl
mov
xor
pop
call
xchg
push
ja
jne
js
add
jo
sbbl
adc
jle
xchg
cltd
in
cltd
lcall
mov
cmp
pop
xor
sbb
dec
adc
sub
cs
lcall
dec
sub
dec
sarl
dec
lods
inc
and
jb
sub
and
dec
mov
push
std
dec
adc
hlt
leave
mov
sbb
add
jb
or
aaa
and
sahf
in
cmc
jb
mov
inc
loop
std
jg
adc
inc
jp
sahf
mov
inc
xchg
pop
fldt
cli
sbb
out
fs
adc
and
shlb
aas
adc
lret
pop
inc
and
add
or
ds
ret
out
add
pop
fimuls
sahf
mov
pop
cld
jl
movsl
and
push
repz
add
sub
icebp
pop
jne
rolb
scas
cmp
sbb
jl
mov
pop
inc
sbb
das
out
jbe
les
xlat
mov
push
fmull
in
ljmp
pop
ret
nop
sahf
and
inc
push
mov
std
aas
and
xchg
rorl
push
test
mov
fisttpll
sub
add
add
inc
lcall
xor
les
adc
lret
fildl
adc
add
pop
pop
dec
decl
sub
ljmp
push
dec
or
and
xor
xchg
cmp
mov
mov
shrb
add
push
push
adc
jnp
aas
pop
cmp
add
cmpsb
add
pop
mov
jecxz
movsb
xchg
pop
loope
sbb
fdivrl
nop
or
popa
incl
sub
inc
ds
addb
mov
add
cltd
mov
mov
mov
jno
orb
jp
cmp
mov
cmp
outsl
int3
pusha
sbb
jns
cmp
add
adc
push
adc
aad
mov
dec
push
jge
hlt
pushl
xchg
imul
in
imul
sub
xor
adc
mov
sbb
test
adc
pop
jnp
add
pop
cmc
or
and
add
push
xor
das
push
aad
dec
into
aad
std
faddl
inc
lods
lock
cli
pushl
clc
jo
add
dec
xchg
rol
shr
loopne
lock
pop
cmp
fldl
xor
loop
daa
aas
in
xor
ret
or
adc
movsl
push
pop
mov
mov
add
ljmp
js
mov
push
shll
loopne
scas
decl
xchg
ficoms
inc
shlb
movsb
fnsave
pop
sbb
dec
movl
cld
adc
shlb
inc
pushf
hlt
push
std
out
clc
aaa
ds
push
clc
pusha
repnz
push
jmp
repz
cmp
aaa
push
clc
incl
cmp
imul
mov
pop
data16
jmp
cli
mov
jle
cli
out
or
jecxz
loope
insl
in
pushf
or
ss
sahf
scas
mov
push
cmpsl
sqrtps
adc
clc
ljmp
daa
andl
inc
mov
shrb
mov
inc
and
push
and
xor
mov
shll
push
pushf
adc
cmp
fiaddl
aas
rol
push
pop
fwait
mov
mov
mov
outsl
push
add
inc
loopne
js
mov
sbb
out
pop
add
shll
pop
dec
andl
clc
inc
neg
decl
adc
int
ss
dec
pop
sbb
lret
test
ds
sbb
mov
inc
lods
ljmp
test
push
iret
adc
lahf
daa
inc
cmp
jbe
sub
out
and
dec
and
jle
or
leave
xchg
mov
sbb
sbb
adc
jp
push
std
inc
sub
insb
idivl
xchg
lock
add
mov
add
cmp
inc
jmp
jge
sub
jb
aam
push
test
add
cmpsb
pusha
jmp
shrb
inc
and
cs
mov
jmp
and
adc
dec
cmpsb
push
mov
xchg
push
loopne
in
xchg
stos
ds
mov
jb
push
lahf
mov
push
push
push
mov
cmpb
pop
ljmp
xor
andl
pop
mov
jmp
sub
lcall
aas
mov
pusha
hlt
pop
ret
or
or
rcll
cmp
dec
mov
pop
push
or
pop
jbe
cld
pop
ljmp
add
enter
repnz
add
jl
and
push
dec
les
stos
cmp
nop
lock
ficoms
nop
and
add
incl
lahf
sbb
fs
ret
or
cmpsb
lcall
orb
test
mov
sbb
insb
clc
push
adc
lret
fcompl
mov
push
faddl
test
push
push
pop
inc
inc
mov
aaa
xchg
inc
out
mov
add
arpl
pop
or
jp
pop
dec
sbb
dec
mov
outsb
in
pop
fisubrl
loope
call
pop
mov
fildll
mov
mov
jmp
mov
std
jle
pushf
andl
sub
gs
lds
into
inc
jecxz
lods
add
decl
es
fwait
xchg
mov
movsl
pop
or
jle
mov
dec
or
inc
push
xorl
test
ss
aas
sar
adc
add
subb
add
lock
and
or
mov
daa
out
xchg
mov
in
jge
es
adc
xchg
scas
jo
movsb
xchg
xchg
iret
xchg
js
das
adc
loop
lret
mov
sbb
dec
adc
jmp
orb
sub
aaa
sar
pushf
mov
popa
dec
data16
sbbb
jge
fwait
or
pushf
in
push
rcll
adc
lcall
test
inc
stos
sahf
push
ret
pop
cs
adc
out
and
out
mov
sahf
inc
inc
inc
sti
pop
add
mov
push
lahf
push
mov
xchg
clc
push
cltd
lock
inc
das
shrl
mov
push
in
and
sbb
outsl
dec
aaa
xor
and
dec
push
add
mov
dec
cwtl
enter
into
inc
or
xlat
in
xor
and
scas
sqrtps
call
xchg
mov
cmp
adcl
inc
aaa
clc
add
add
or
cmpsb
add
add
fistps
fsub
pop
push
push
mov
dec
fildll
cli
xchg
pop
sbb
stos
test
ljmp
aaa
dec
xor
add
loope
aas
fsubs
ficompl
add
sub
sub
push
mov
cmpb
jo
add
or
inc
jbe
cs
push
push
lret
inc
mov
dec
add
out
add
aas
insl
xor
pop
mov
ljmp
ficoms
inc
aad
mov
or
push
jg
jl
jno
leave
sarl
xchg
imul
add
jg
insb
les
add
push
sarb
and
popa
sub
js
fsubrl
adc
mov
stos
insb
dec
fimuls
pop
inc
xchg
daa
mov
mov
mov
es
mov
jg
imul
shlb
aas
mov
mov
cmp
sbb
mov
jmp
scas
sub
jmp
sar
es
push
xchg
cltd
xchg
jb
or
pop
cmp
adc
sti
push
jge
xor
adc
push
adc
adc
popl
lcall
xlat
stos
pop
cld
lcall
push
das
and
aam
mov
push
push
jl
inc
xor
mov
dec
data16
push
inc
roll
aad
xor
data16
scas
jmp
mov
movsb
lock
mov
test
cmp
mov
rclb
rcrb
jl
clc
dec
and
test
addr16
mov
xchg
test
insb
test
lahf
add
inc
cmpsb
add
or
cmpsl
nop
sbb
insb
addb
adc
cld
pop
push
aad
adc
xbegin
lea
xchg
fwait
imul
aas
xchg
loope
pop
jnp
adc
in
mov
add
aaa
add
cmp
pushf
xchg
inc
data16
jmp
mov
fprem
andl
pop
xchg
jo
jmp
mov
mov
add
dec
gs
lea
jmp
add
decl
dec
pusha
arpl
inc
mov
xor
jle
out
pop
arpl
test
mov
int3
xor
dec
or
call
fbld
cmpb
es
jae
aam
incl
dec
fwait
sub
test
enter
xlat
bound
js
pop
adc
idivb
ret
out
adc
add
sbb
mov
push
xchg
cmp
dec
stos
dec
xor
int
lds
or
pop
pop
cld
push
jae
xabort
test
adc
ja
adc
ucomiss
loop
rol
inc
or
sahf
cmp
mov
pop
inc
add
not
int3
nop
rorb
dec
sub
les
jle
cli
test
push
cmp
out
jmp
xchg
add
jecxz
mov
dec
or
rcll
add
or
jne
jo
cmp
adc
stos
sbb
add
scas
dec
arpl
jne
inc
ret
add
std
mov
xchg
pop
inc
jb
cmpsl
test
mov
js
and
sbb
test
dec
cltd
mov
inc
mov
repnz
xor
mov
mov
add
popa
xchg
hlt
cld
int
ja
push
xlat
inc
int3
clc
xor
ds
mov
fistps
jge
das
adc
inc
lret
jbe
in
stos
iret
ret
pop
mov
fwait
decl
pop
xchg
ljmp
les
dec
inc
push
ljmp
ffreep
nop
jo
sbb
in
sbb
or
dec
mov
or
das
and
mov
pusha
iret
adc
pushf
jo
sub
and
push
jb
xor
mov
cld
dec
loope
js
fcos
pop
lea
test
aaa
mov
xchg
xchg
dec
jp
inc
jle
or
cltd
fcomp
cbtw
mov
lock
xor
pop
cmc
movb
clc
sbb
lcall
cmp
test
mov
mov
dec
add
cmp
pop
outsl
and
xchg
dec
cwtl
jg
cli
jb
mov
das
out
cmp
sub
test
push
xor
inc
xchg
push
xor
sbb
ljmp
out
mov
out
sbb
wrmsr
push
lock
push
push
inc
arpl
stos
outsl
clc
nop
in
fldenv
cmp
sbb
ljmp
lea
mov
ja
jl
or
and
mov
pop
inc
out
nop
flds
mov
in
cmp
dec
mov
bswap
mov
mov
push
fstps
in
xorl
dec
daa
cmp
cmpsl
mov
jo
push
pop
out
out
cli
call
dec
add
or
scas
inc
push
sbb
mov
jno
fbstp
cmp
xor
icebp
push
inc
cld
sar
aas
jecxz
push
int
int
out
dec
popf
rcll
test
out
fwait
mov
push
popa
roll
dec
mov
xchg
jecxz
test
aam
fsubl
int3
test
cmc
into
movsb
jecxz
add
sar
ljmp
pop
sarb
ret
mov
aaa
out
sub
xor
sub
lock
andl
xchg
mov
scas
xchg
sub
pop
mov
loopne
and
ljmp
stc
and
roll
jb
mov
push
pop
push
aam
mov
jae
xchg
jg
mov
cmp
and
insl
push
cmp
rorl
jl
cmp
mov
add
call
jmp
scas
mov
dec
adc
stos
dec
ljmp
out
aaa
pop
mov
push
xchg
scas
mov
fdivrp
scas
jmp
jp
repz
pop
imul
jb
or
fildll
jecxz
jb
add
add
popf
lods
test
sbb
lcall
cmp
sbb
mov
mov
andl
stos
mov
or
jmp
cli
sbb
js
mov
je
aas
aaa
in
in
mov
call
jecxz
mov
xor
mov
jg
outsl
arpl
sti
xchg
andb
insb
add
cmpsl
pop
mov
mov
call
add
nop
subl
inc
ljmp
push
push
cmp
lods
jg
jmp
mov
adc
mov
push
or
rol
xor
sbb
cmpsb
out
sub
mov
or
inc
add
nop
sahf
push
jns
cmpsl
inc
leave
xor
mov
adc
mov
bound
decl
xorb
hlt
xor
test
dec
stos
lret
mov
sbb
xlat
ret
mov
bound
xor
mov
push
dec
pop
addr16
fdivrp
enter
lds
push
les
notb
jle
std
incl
xor
fsts
hlt
mov
sbb
arpl
test
push
ret
jg
inc
test
dec
xor
mov
pushf
mov
jmp
nop
lcall
shl
dec
pop
sub
xchg
bound
and
enter
cltd
incl
mov
hlt
mov
or
pop
popf
inc
inc
insb
clc
test
loopne
jp
js
lahf
jl
push
cmp
dec
out
mov
mov
and
aas
fwait
mov
cwtl
rcrb
or
pop
sbbb
pop
mov
cmp
dec
add
loop
lock
subb
test
jp
sbb
push
fmull
xor
adc
jno
and
xchg
clc
add
xor
loop
cmp
data16
mov
cmc
add
jecxz
pop
xor
or
decl
mov
inc
sbb
pop
jne
push
test
sarl
out
xchg
sbb
push
jb
clc
fistpl
cs
and
xchg
aas
sbbb
insb
cld
ja
and
push
adc
jne
push
cmpl
inc
addb
fimuls
loope
mov
lcall
xchg
xchg
xor
mov
push
dec
add
and
scas
nop
lock
adc
call
adc
fwait
inc
push
mov
sbb
xchg
fbld
xlat
inc
add
cli
sub
pop
ja
popf
subl
add
enter
adc
pop
ret
aad
mov
int
sar
popf
push
inc
lret
pushf
movsb
lea
rorb
in
rcll
mov
inc
insl
sbb
pop
mov
mov
pop
loope
xor
or
add
inc
mov
push
push
mov
mov
notl
cltd
pop
rcll
adc
mov
mov
cltd
pop
hlt
sbbb
adc
rol
in
mov
push
fwait
xchg
stc
or
add
push
ja
push
in
adcl
clc
push
or
icebp
mov
stos
ss
in
movaps
push
push
je
out
shrb
mov
std
sbb
push
xchg
iret
push
mov
les
inc
jno
dec
fsubrl
pop
xchg
mov
pop
dec
sti
dec
mov
aaa
in
je
je
mov
movsb
and
sbb
call
insl
fadds
jbe
mov
dec
mov
jbe
add
les
add
jle
insb
xchg
lea
inc
fnstcw
insb
pop
in
and
lock
jno
mov
lea
cmpsl
subl
lahf
inc
test
mov
push
mov
or
mov
andl
xchg
sbb
inc
movsb
in
xchg
jge
std
jg
insb
in
xchg
jae
pop
insl
and
pop
rol
leave
shl
inc
mov
jecxz
pop
xor
in
cli
add
jo
and
mov
dec
fmulp
pusha
xor
push
or
mov
sub
sub
pop
adc
stc
cli
sub
lock
xor
test
push
dec
cmp
lods
mov
lahf
adc
add
lahf
jb
ds
sub
push
enter
and
cmp
shll
icebp
lods
cmp
add
sub
dec
stos
add
sbb
adc
fbld
rcr
and
sub
dec
std
outsl
add
or
sbb
fstl
dec
cld
push
test
xchg
idivl
loopne
dec
in
fnstsw
cwtl
dec
mov
loop
inc
sbb
clc
popa
cmpsl
lar
shr
push
pop
mov
out
movlps
adc
mov
lock
stc
adc
out
and
sbb
dec
inc
aas
jns
add
fs
cli
mov
mov
cld
jg
cmp
and
and
mov
mov
loopne
xchg
adc
insl
xlat
inc
mov
outsl
mov
pop
test
lods
dec
cs
scas
xlat
pop
add
cmp
xorl
shrb
lret
test
add
mov
aad
mov
aam
mov
sub
inc
pop
in
and
aad
sbb
inc
mov
inc
mov
push
jmp
ret
pop
push
push
lds
andl
stos
popa
sub
aad
cs
dec
xchg
sub
xchg
xor
xchg
sbb
pop
fcomp
sub
cwtl
adc
je
das
pusha
adc
pop
pop
cmpsl
jecxz
mov
add
sub
or
les
add
push
sbb
pop
stc
or
jbe
test
inc
mov
ret
inc
das
push
les
adc
adc
cmpsl
mov
les
mov
and
fucomi
sbb
jl
sbb
dec
leave
xchg
cmp
test
add
push
jno
jmp
push
in
aam
jmp
bound
push
pop
fcoml
xchg
js
sti
ds
mov
jp
stos
call
lcall
sub
and
pop
loopne
in
mov
faddl
push
mov
push
push
mov
xor
cld
mov
mov
cmc
aam
rcrb
ja
cmpl
push
dec
add
mov
rcrb
rorb
mov
mov
jg
cmpb
ljmp
mov
xlat
sub
inc
in
mov
cwtl
inc
shr
or
je
push
mov
test
daa
adc
cmp
test
inc
movb
test
dec
pop
push
mov
imulb
in
push
or
sub
ljmp
out
push
addl
lcall
pop
xlat
lock
sbb
ja
loopne
mov
rcrb
mov
jns
push
push
inc
movsb
dec
lea
icebp
sub
push
test
sbb
std
add
push
adcb
or
addl
add
mov
fs
or
xlat
push
sti
push
and
dec
inc
lret
push
mov
or
iret
test
stos
sbb
cmp
mov
fistl
lods
je
bound
notl
insb
xchg
cmp
arpl
add
test
fnstcw
subl
cmp
pop
imul
dec
jmp
pushl
ljmp
sbb
inc
mov
test
pop
inc
xchg
hlt
push
shl
lret
inc
xadd
dec
dec
adc
cmc
inc
inc
push
add
loopne
fs
insb
adc
pop
lods
arpl
dec
pop
or
shrb
daa
mov
enter
ja
out
adc
lcall
push
inc
lock
mov
inc
dec
jno
clc
push
sub
sahf
aas
int
pusha
fisttps
repnz
addl
outsb
push
sub
mov
in
dec
mov
dec
pop
pop
or
mov
je
loop
ds
iret
fcoms
test
pushf
clc
inc
adc
jge
repz
sbb
xor
sbb
push
xchg
bound
xchg
rorb
stos
jb
in
jns
dec
push
sub
aas
ret
loop
and
jg
aas
int3
test
xor
arpl
push
in
push
orb
mov
cmpl
sub
cmpl
mov
or
imul
sbb
xchg
out
negb
xor
fs
movsb
sub
mov
mov
scas
inc
pop
sti
mov
stc
or
outsb
stos
push
sbb
push
push
add
rolb
ret
mov
daa
pushl
pop
aaa
loop
cmpsb
addb
mov
mull
mov
enter
fdiv
int
and
sbb
and
icebp
stos
mov
push
popa
aas
sbb
pop
sbb
cmp
push
andb
rolb
xorl
out
adc
and
pop
pop
lret
and
aas
fbstp
out
jmp
mov
jmp
pop
rcrl
dec
mov
nop
icebp
inc
stc
adc
das
sbb
sbb
jle
scas
das
sbb
cli
ret
or
decb
dec
rcl
sbb
aaa
inc
xchg
dec
or
lods
inc
pop
and
bound
mov
decl
pop
stc
test
or
mov
push
or
mov
and
pop
and
mov
enter
bound
popf
mov
or
into
mov
dec
nop
pushf
pop
push
pop
pop
and
adc
loop
test
test
pop
mov
or
cmp
jmp
adc
inc
loopne
pop
cmp
rolb
lahf
fidivl
lcall
xchg
jmp
inc
fldpi
mov
cmp
lret
inc
inc
push
sbb
pusha
inc
orl
jge
xchg
test
jecxz
outsl
outsb
aam
popa
pop
jl
xor
push
mov
pop
cmpb
push
add
fs
cltd
rcrb
push
fiaddl
lock
scas
jnp
sub
popf
aaa
sarl
loopne
push
pop
add
push
push
add
mov
mov
xor
or
inc
add
pop
jbe
mov
out
jp
sub
jp
pop
push
mov
fs
adcl
and
cld
xchg
cli
mov
lcall
mov
mov
cmc
dec
lahf
inc
pushf
lcall
xor
idivl
stos
push
push
xor
in
out
dec
xchg
out
xchg
mov
inc
ljmp
insb
mov
push
lods
jg
cli
mov
add
les
mov
and
or
nop
adc
pop
stos
inc
add
jmp
js
cs
fimuls
clc
sbb
fcmovnbe
jae
xchg
bound
cmpsb
adc
inc
push
adc
fidivl
rclb
sub
or
outsb
push
cli
out
jmp
shlb
inc
adc
cwtl
sbbb
adc
imul
push
addl
or
out
mov
adc
xchg
ds
cltd
xor
hlt
sbb
sub
dec
xor
sbb
maxps
add
pop
sete
es
cld
popf
xor
sbb
ror
add
fiaddl
sar
push
lea
jmp
lock
repz
shrb
scas
dec
aaa
mov
jge
sbb
pop
icebp
sbb
jmp
sar
xor
loop
pop
nop
dec
imul
lock
jge
inc
iret
push
decl
mov
xchg
pop
pop
je
or
cltd
lods
daa
xor
xchg
add
cld
cld
clc
addl
inc
cwtl
sub
jne
sub
call
or
xchg
mov
js
inc
push
int3
in
sub
sar
aaa
rolb
pusha
lods
mov
push
outsl
push
jl
mov
inc
jae
mov
dec
or
sub
xor
xchg
outsb
arpl
push
repnz
fnsave
push
or
mov
pusha
mov
push
add
mov
sub
mov
or
jmp
sub
dec
add
lods
enter
loop
dec
jo
aas
jg
mov
jbe
jecxz
cmp
jecxz
push
sbb
sbb
jl
fsts
lcall
mov
sub
jne
fstpt
push
int3
push
add
mov
xor
add
mov
mov
sahf
sbb
std
adc
pop
jo
sub
mov
add
dec
inc
and
push
pushl
stos
sarb
add
shr
lds
cmpl
cmp
mov
jmp
and
mov
mov
incl
fistl
mov
loope
addb
jle
pop
orb
enter
icebp
add
pusha
lods
lods
mov
or
shlb
aaa
and
loopne
push
out
clc
push
aad
xchg
sub
pop
mov
test
pop
or
lret
inc
push
hlt
lahf
movsb
cli
cltd
mov
mov
test
sub
popf
xor
mov
mov
mov
loopne
outsl
shrb
daa
les
imul
std
aas
dec
xor
push
mov
decl
jo
jg
push
mov
xor
xlat
push
ret
jmp
lock
rcr
mov
mov
xor
ret
mov
outsl
outsb
and
sub
inc
std
push
call
xchg
and
xor
enter
inc
scas
and
shl
pop
nop
xor
xchg
adc
mov
jae
pop
and
loop
xor
outsl
stc
jl
gs
inc
mov
cmp
pop
enter
je
xor
fsubl
into
mov
sub
pop
ss
popa
cmp
or
xor
stc
lcall
and
aas
xchg
dec
push
scas
and
lods
push
es
mov
outsl
call
xor
and
into
jo
imul
ret
aas
loopne
add
pop
xor
les
fs
lds
dec
jbe
dec
mov
pop
ljmp
mov
xchg
inc
adc
bound
in
insb
cld
inc
inc
data16
outsb
divb
jecxz
add
clc
pop
mov
and
jne
pusha
movb
sub
les
push
pop
in
cs
lods
ja
pop
or
sbb
inc
movsb
xlat
out
cmp
jg
mov
out
xor
pop
test
add
xor
cmpsb
out
adc
nop
jb
add
cmc
mov
cmp
inc
lods
fbstp
jecxz
adc
inc
mul
push
stc
mov
in
inc
jmp
test
gs
mov
addr16
sbb
xchg
jbe
mov
cld
pop
fs
lcall
fdivrp
sti
push
aaa
push
xor
sahf
mov
ss
push
mov
enter
lock
jmp
sub
outsb
inc
repz
add
mov
int
add
sbb
scas
sbb
cli
pop
in
xchg
rcl
les
inc
clc
inc
push
mov
jge
clc
push
adc
push
divl
pop
and
repnz
ret
rcrb
add
lret
fimuls
leave
lock
ret
dec
lret
jecxz
mov
orl
xchg
rorb
cwtl
push
jns
lcall
sub
test
inc
mov
pop
rolb
mov
filds
xchg
push
ljmp
add
pop
sahf
or
cmp
inc
mov
ja
xchg
dec
cmp
rorb
sub
xchg
mov
inc
push
xor
das
ret
mov
lea
lds
dec
jne
mov
xor
fcom
in
mov
mov
xchg
jbe
hlt
nop
push
sbb
or
shrb
dec
flds
mov
pop
shll
add
lock
out
hlt
fnstsw
xchg
xor
sbbl
sub
fisubrs
test
pop
mov
add
dec
les
jo
sar
decl
lret
push
jb
or
pop
mov
aas
and
dec
sub
fldt
incl
mov
or
xchg
incl
lods
jae
dec
push
cwtl
lret
adcl
pop
mov
or
sti
fdivrs
pop
hlt
dec
adc
incl
push
or
ret
dec
std
lret
inc
cld
jnp
jne
add
and
jp
push
addb
sub
sub
test
pushf
push
add
mov
adc
mov
mov
lods
sbb
int
iret
call
jge
mov
jno
jmp
enter
cli
mov
sbb
push
mov
jno
incl
jp
push
arpl
pop
and
jp
icebp
mov
dec
sbb
and
mov
and
icebp
test
insb
mov
mov
pop
xchg
push
scas
js
jl
jp
xchg
and
push
dec
scas
jb
mov
dec
mov
aas
push
mov
movsl
sar
aas
mov
ret
call
sbb
xor
cwtl
fwait
mov
push
loope
test
pop
or
leave
imul
cmpsb
jnp
lock
cmp
jo
gs
movsl
sarb
cmp
popa
jmp
jo
leave
stos
push
fs
adcb
mov
adc
push
add
cmp
xchg
loopne
rorb
cmp
sub
jge
aaa
hlt
pop
pop
lock
mov
adc
and
jle
push
popf
pop
cmp
imul
xchg
ret
cmc
cmp
dec
inc
mov
cli
mov
pop
out
sahf
lret
jo
jg
sbb
repnz
cmpsl
ret
xor
loop
mov
pushl
popf
sub
or
movsb
jl
pop
sbb
repnz
mov
adc
gs
and
cmpsb
outsl
inc
xchg
xchg
xchg
push
or
sub
add
cmpsl
and
add
inc
jmp
dec
pop
lcall
adc
scas
and
dec
jmp
subl
cmp
adcb
sbb
adc
mov
lcall
loop
push
adc
adc
push
dec
jg
push
jge
pusha
dec
les
mov
dec
inc
xchg
stos
xchg
push
dec
adc
inc
loope
cmpsb
adc
push
andl
mov
in
imul
decl
mov
push
adc
mov
xor
xchg
aam
test
mov
sbb
lock
push
jecxz
filds
decl
lret
xchg
and
dec
aas
jg
and
inc
sahf
xchg
add
or
dec
fcoml
add
jg
stc
std
test
rolb
and
dec
hlt
pop
out
xchg
dec
or
mov
imul
push
subb
jne
or
adc
mov
push
loope
pop
adc
mov
and
mov
lcall
cmpsb
mov
mov
outsl
sbb
jecxz
sbb
inc
pushl
inc
or
js
loopne
mov
dec
or
jne
outsb
mov
add
dec
pop
dec
push
pop
cmp
cmp
push
mov
inc
ret
and
stos
sbb
incl
mov
imulb
pop
in
std
lds
adc
lock
add
inc
fs
mov
cmp
mov
push
or
shl
inc
out
call
push
mov
sbb
add
xchg
dec
test
sbb
je
or
jg
iret
cmp
push
punpcklwd
mov
xor
lret
je
or
or
jb
push
outsb
xchg
sub
pusha
es
mov
push
test
jg
jge
mov
cmp
push
lods
cwtl
lret
add
divb
out
mov
push
jg
ss
jne
inc
push
mov
mov
imul
orl
fs
pop
lea
ja
ret
and
pushl
ss
add
add
xchg
cli
inc
cmp
add
jns
push
jle
cmp
stos
jmp
push
mov
nop
data16
stos
inc
out
scas
mov
mov
or
mov
inc
mov
dec
rep
ljmp
rcrb
and
mov
rorb
dec
bound
ljmp
outsb
loope
ret
jae
add
xchg
and
add
sub
mov
push
sbb
rcll
xor
cmp
out
daa
andl
mov
jle
mov
pop
inc
inc
sti
fwait
push
adc
mov
mov
dec
mov
popa
push
rol
std
pushl
sub
shlb
or
or
push
inc
xlat
pusha
pop
ret
cmp
cwtl
cltd
push
push
xchg
int
inc
cld
xchg
bound
rorl
add
add
test
aad
inc
xor
adc
test
lods
roll
pop
add
inc
mov
push
jb
mov
jecxz
mov
mov
pop
xchg
push
in
mov
stos
mov
xchg
out
inc
add
mov
push
or
or
mov
pushf
std
push
xor
and
mov
jg
testb
fdivs
sub
adc
push
xor
mov
cld
iret
gs
and
mov
call
or
cmp
add
pop
data16
or
aas
sbb
into
jo
inc
cmovb
jl
and
mov
out
cmp
add
incl
inc
out
lock
jno
loopne
mov
fnsave
inc
sbb
lret
icebp
mov
or
dec
orb
jbe
popf
and
addl
mov
xchg
mov
fnstenv
aaa
mov
sti
stc
mov
pop
mov
xor
adc
cmpsb
ss
and
std
add
ds
scas
addl
mov
rclb
add
mov
ret
push
fwait
pushf
je
dec
fdivrp
mov
daa
sbb
pop
lret
lcall
xchg
incl
mov
sub
stos
sar
jo
aas
add
xchg
cmpsb
dec
out
and
sub
insb
mulb
insl
aas
cld
test
in
mov
pushf
dec
adc
lret
lcall
adc
adc
stos
mov
lea
xor
lods
adc
outsl
stos
mov
mov
pop
jae
std
jmp
inc
mov
add
mov
stos
adc
cmc
decl
popl
aas
ja
mov
daa
jno
mov
jg
pop
cmp
je
mov
cmp
adc
mov
hlt
sbb
lret
subb
push
add
popf
push
aas
pop
or
adc
imull
mov
lcall
pop
mov
adc
lods
in
rcrl
jl
in
xchg
push
into
sahf
std
pop
adc
scas
cmp
movsl
push
mov
cmpsb
xor
inc
add
and
gs
sbb
sbb
cmpb
fmuls
ds
cmp
roll
outsl
mov
jae
hlt
dec
pop
adc
pusha
cmc
clc
cmp
sub
add
fwait
ret
pop
mov
mov
loop
repnz
sbb
pop
adc
outsl
aam
sbb
and
xchg
xor
or
dec
or
ja
pop
inc
mov
push
sbb
or
or
nop
push
data16
mov
or
test
inc
out
mov
mov
adc
mov
pusha
and
inc
repnz
clc
out
inc
scas
and
or
push
pop
add
lods
sarb
mov
pushf
add
adcl
hlt
cmc
sbb
fsubr
push
clc
addr16
add
ljmp
cmp
nop
jns
iret
jmp
call
or
fisubs
push
lahf
add
mov
mov
pushl
or
fmuls
or
inc
bound
repz
pushl
sar
sub
adc
sbb
int3
in
adc
add
or
mov
xchg
fadd
pop
inc
bound
dec
mov
loope
xchg
mov
clc
add
push
sub
xchg
fstpl
loope
cld
loopne
adc
push
and
test
push
jno
int
mov
addb
jbe
decb
subb
push
xchg
pop
sub
loopne
js
pop
sar
out
pop
mov
pop
pop
mov
lods
sub
arpl
sub
movsl
cmp
mov
dec
add
and
xchg
rcrb
add
test
test
aam
mov
dec
mov
insb
push
fisttpl
inc
jb
ja
fcomps
add
fdivp
cld
call
insl
and
test
mov
push
xor
add
fwait
test
pop
pop
dec
add
sbb
add
add
test
ret
lcall
fwait
sub
inc
push
inc
lret
pop
pusha
sahf
pop
mov
sbb
ret
and
jbe
je
sub
pop
pop
rcrl
sub
out
jns
jae
or
add
loope
mov
enter
inc
push
or
rol
or
and
addb
mov
ljmp
shl
xlat
inc
enter
inc
je
xlat
or
pop
cld
popa
arpl
dec
jp
or
pushf
add
adc
push
jl
xor
mov
sbb
insl
test
cmp
jb
sub
test
inc
sbb
sahf
cmpsl
rcll
jmp
push
fwait
js
or
nop
push
jo
push
jle
jle
in
mov
dec
addl
sahf
clc
fmull
push
and
in
shrl
fld
jp
stos
xchg
lock
push
add
das
inc
loope
push
aad
and
pop
push
cwtl
nop
and
xchg
stos
add
rclb
lahf
lret
jle
push
jae
mov
sbbl
mov
or
mov
add
loop
push
cpuid
push
inc
and
add
pop
sub
jle
sarb
adc
andb
roll
ffreep
aas
adc
test
clc
movsb
jbe
mov
lods
in
scas
ljmp
test
outsb
ret
mov
aas
cmp
ljmp
inc
mov
lock
out
lret
adc
jno
mov
add
repz
rcll
pop
push
mov
add
mov
mov
add
repnz
hlt
dec
push
inc
aad
or
cwtl
pop
jl
rorl
and
rcrb
int
loopne
cltd
and
daa
cli
lea
outsb
cmc
aas
mov
fdivrl
loope
add
popaw
jo
cmp
add
flds
shrb
jnp
ss
add
and
mov
addr16
aad
pop
outsl
jb
add
fisubl
leave
int3
inc
daa
sub
or
dec
cwtl
daa
test
add
dec
lret
inc
dec
and
into
imul
loop
int3
mov
inc
nop
fcomp
lods
test
mov
aaa
xchg
stos
sub
fnstsw
mov
aam
push
aas
out
cmpb
xor
stos
cltd
adc
out
int3
lods
mov
popa
int3
loopne
icebp
jg
push
test
jb
shll
mov
scas
jp
fs
add
push
leave
hlt
inc
add
mov
add
jg
cmc
adc
pop
fs
lcall
cmpsb
sub
adc
imul
inc
add
jge
jmp
adc
inc
pop
test
clc
and
test
and
inc
lret
dec
push
pop
push
faddl
cmp
mulb
cmp
jmp
lock
cltd
sar
add
in
or
dec
out
loop
rclb
sub
jg
nop
add
xchg
or
movl
mov
lret
jns
dec
jp
inc
sbb
shll
mov
popf
std
jle
imul
jns
pop
pop
call
test
leave
push
add
inc
or
cmp
pop
inc
aaa
fildll
xor
sbb
jge
insb
mov
dec
mov
addl
pusha
cmp
jmp
add
aas
sub
mov
pop
pop
sub
loopne
mov
jecxz
push
jmp
test
mov
aaa
repnz
ss
add
ret
add
jg
push
mov
movsb
adc
adc
clc
cld
dec
add
sbb
push
adc
call
vunpckhpd
test
jns
jle
mov
scas
push
mov
cwtl
ds
cmp
popa
mov
cmp
jge
subb
jnp
add
pop
loop
daa
add
rcr
shlb
push
sbb
add
dec
mov
pop
in
rclb
addb
pop
and
int
cld
cld
add
push
stos
and
test
or
push
push
sub
inc
inc
push
xor
and
sahf
icebp
arpl
or
mov
imul
mov
fwait
adc
pop
je
sub
push
lret
loopne
sbb
push
add
insb
push
mov
clc
pop
icebp
and
mov
iret
and
mov
out
out
mov
adc
inc
lods
popf
or
mov
arpl
les
int3
xchg
sbb
js
iret
jne
addb
add
add
or
outsb
add
movsb
cmc
incb
lds
mov
mov
hlt
add
dec
mov
fs
in
or
shl
loopne
ds
dec
movsl
loope
rolb
dec
fsubrl
outsb
out
jmp
stos
and
addl
sarb
adc
iret
inc
mov
push
push
imul
inc
mov
rclb
aam
sub
movsb
movsb
pop
adc
inc
pop
call
divl
test
outsb
ret
dec
sub
jg
mov
in
test
xor
xchg
lea
outsl
xor
and
stc
cmp
addb
and
add
mov
repnz
mov
sbb
pusha
push
adc
lret
out
sub
sbb
out
out
mov
adc
mov
stc
xor
les
fbld
or
jo
sahf
xchg
not
pop
mov
aas
mov
enter
leave
add
out
mov
outsl
loop
enter
mov
jl
call
incl
add
loop
adc
add
loope
aas
popa
xor
push
repz
mov
bound
bound
shl
push
dec
dec
loope
or
mov
loope
add
inc
scas
out
adc
js
stos
out
icebp
xor
sbb
push
fstl
insl
loop
icebp
lods
cmp
push
adc
insl
mov
addb
into
dec
mov
andb
xor
shl
roll
sub
addl
or
test
pop
sahf
in
test
movsl
xchg
les
cs
fcomi
call
aam
ds
leave
sub
or
fcmovnu
cmc
add
mov
inc
pop
pop
clc
add
hlt
pop
bound
push
adcl
xor
ds
test
cmpsl
inc
jns
decl
sbbb
orb
or
decl
and
inc
inc
mov
fdivl
dec
inc
loopne
fnsave
inc
push
push
jecxz
push
aas
sub
popf
daa
xor
inc
inc
cmpsl
sbb
in
add
popf
sbb
lret
push
mov
push
xor
pushf
or
int3
jne
and
leave
stos
lock
push
ret
dec
adc
mov
in
push
outsb
jl
jnp
xor
adc
add
dec
gs
mov
js
and
cld
push
mov
jno
xor
loope
push
add
mov
aaa
and
fwait
jo
test
or
jnp
imul
test
shl
add
in
add
clc
pusha
xchg
cmp
sub
lds
inc
shll
mov
jecxz
and
mov
xchg
jp
xchg
outsb
leave
mov
push
stc
std
push
push
inc
mov
dec
dec
mov
cpuid
sub
inc
or
sbb
jle
repz
pop
push
inc
dec
push
xor
pusha
jp
ds
jmp
dec
in
xchg
fsubs
add
add
xchg
pop
push
push
fwait
sbb
inc
push
xchg
mov
xor
test
test
inc
adc
or
jg
or
lods
push
push
nop
clc
xchg
push
mov
cwtl
add
or
outsl
test
push
pop
int3
add
in
adc
adc
imul
add
inc
add
add
xchg
shl
lock
fdivs
jg
xor
lcall
mov
push
jnp
mov
inc
orb
loopne
mov
push
pop
imul
mov
les
outsb
cmc
xchg
lret
cwtl
or
jmp
mov
cmpsb
aam
cltd
inc
and
icebp
jae
hlt
pop
leave
mov
dec
and
jb
arpl
js
test
fldcw
sbbl
ljmp
adc
mov
push
mov
test
mov
inc
cmp
sub
jp
adc
pop
cs
filds
inc
popa
mov
jp
xor
cli
lret
test
cmp
xchg
dec
add
subb
lahf
dec
mov
dec
and
jge
daa
lds
popa
loop
xchg
dec
mov
scas
dec
mov
lods
inc
add
adc
hlt
iret
inc
and
add
push
sub
add
lock
dec
leave
push
push
or
sahf
jno
sub
cld
cmp
dec
addb
jg
xchg
movzwl
fmull
mov
jmp
inc
sbb
sub
and
pop
adc
jno
jge
mov
sub
mov
lds
cli
aaa
cli
mov
add
cmp
mov
inc
xchg
rclb
dec
test
mov
gs
dec
push
comiss
lock
mov
mov
xchg
js
loop
jne
mov
sarb
sti
fdivrl
lcall
paddq
and
test
fmull
enter
dec
adcl
dec
faddl
dec
jo
out
lock
lods
clc
and
repz
mov
mov
cmp
lret
lret
cmp
loopne
jecxz
add
call
push
and
stos
enter
loop
mov
mov
mov
mov
fsubl
dec
in
scas
fistpll
mov
pop
ret
movsb
stos
mov
xchg
test
jo
mov
es
jmp
js
adc
arpl
jo
jbe
mov
mov
push
rolb
sbb
fwait
dec
test
outsl
adc
hlt
mov
enter
xor
xor
push
mov
gs
adc
dec
jge
jg
in
pop
jne
push
jl
orb
cli
jb
fdiv
outsb
xor
std
test
test
mov
lret
sahf
idivb
add
dec
or
cmp
lock
ret
xchg
in
sbb
dec
or
add
in
add
cmp
loop
mov
mov
std
add
mov
fwait
repnz
sub
cmp
sbb
jg
sarb
movsb
inc
xchg
lock
mov
leave
pop
inc
repnz
or
loop
sbb
sbb
pusha
adc
xorb
xchg
add
aas
mov
xchg
adc
loopne
push
int
call
std
dec
xor
pop
aaa
inc
out
mov
loope
mov
repnz
cmpsb
sbb
sub
scas
dec
mov
mov
fdivr
pop
sub
add
mov
out
aam
add
sbb
add
push
dec
and
cld
icebp
shlb
pop
push
stc
test
lock
outsb
les
mov
add
mov
mov
test
add
inc
cs
adc
clc
shl
dec
jb
outsl
cltd
mov
cli
call
cmp
pop
movsl
js
faddl
into
cs
test
addb
cli
adc
mov
adc
test
inc
mov
jb
sbb
in
movntps
jmp
lcall
imul
pop
add
push
mov
bnd
mov
mov
out
cmpsl
mov
xchg
sub
rolb
call
jp
and
inc
pop
push
pop
add
cmp
scas
sub
add
icebp
dec
or
jo
cmp
js
inc
int3
adc
xlat
hlt
cmp
add
mov
pushw
fistps
lods
xchg
int3
xor
test
push
pop
jle
bound
lds
pop
inc
out
or
mov
jmp
clc
popf
nop
in
or
lret
dec
adc
adc
jmp
push
lret
pop
push
mov
xchg
fidivrl
ljmp
enter
dec
lock
filds
inc
pushf
sbb
and
adcb
pusha
or
add
mov
mov
mov
les
mov
gs
pop
out
add
ss
orb
inc
leave
lea
cmp
adc
jno
bound
cld
and
test
call
xchg
fs
lds
mov
pop
xor
sbb
out
popa
enter
nop
push
out
fsubr
call
inc
ret
repnz
dec
and
out
push
jge
out
mov
std
or
ljmp
sahf
cmpsb
cwtl
test
call
sbb
mov
mov
and
int
inc
adc
push
mov
xchg
hlt
je
les
cld
movsb
lock
dec
add
ret
push
jne
repnz
enter
jns
cmp
cld
daa
insb
cmp
icebp
popa
out
adc
js,pt
xchg
lock
hlt
ret
inc
mov
push
in
dec
pop
adc
pop
fsubrl
sbb
testl
es
sbb
inc
js
xor
jle
std
fwait
insb
add
sbb
adc
sarb
popf
scas
pop
mov
sub
movsl
je
or
inc
test
add
pusha
xor
xor
xor
xchg
mov
sbb
fimuls
mov
jnp
xor
lcall
jmp
or
or
and
dec
inc
sub
popf
jecxz
lahf
pop
adc
dec
push
xor
js
ret
icebp
shrb
out
jne
fmuls
in
mov
in
jne
adc
out
stc
outsb
jge
lahf
jno
test
sar
or
shrb
fwait
iret
fsubs
dec
leave
inc
fisubrl
adc
inc
or
rol
aas
mov
jecxz
adc
cmp
xchg
sbb
jno
mov
mov
pop
add
stos
sub
lods
int
clc
hlt
and
repz
shl
mov
repz
out
add
ja
jp
mov
xor
fadd
movb
adc
rolb
mov
push
imul
aas
push
into
lock
jns
xchg
repz
sub
sub
rcrb
test
xor
jmp
push
xor
jmp
cmp
shlb
jle
std
daa
mov
lcall
xchg
sbbl
imul
iret
sub
scas
es
add
add
lods
int
jmp
and
sti
lods
pop
xor
inc
in
pop
loope,pt
xchg
pop
stos
rorb
lods
push
js
sbb
fnsave
fwait
sub
jo
mov
sbb
mov
jp
sbb
inc
inc
repz
add
jl
lock
jnp
mov
add
cmp
lds
ja
or
dec
pavgb
fnstsw
addl
dec
rolb
dec
sub
out
mov
roll
adc
xchg
std
int
dec
push
push
push
std
ljmp
mov
ljmp
ljmp
and
cs
inc
or
std
xchg
mov
dec
adc
out
xchg
pop
mov
lcall
popa
adc
popf
or
add
arpl
mov
test
push
cmpsl
test
cmpl
jmp
dec
sti
or
orb
cmc
pusha
mov
xorl
test
jns
mov
es
pop
adc
add
decl
cmpb
bound
adc
pop
pop
aas
add
fldcw
sub
ret
push
push
aam
dec
pop
mov
xlat
es
incb
jg
cs
enter
inc
pop
imul
adc
and
push
push
out
mov
jle
movsb
icebp
jl
iret
or
add
xchg
orb
push
adc
dec
int3
xor
out
inc
and
orl
std
jne
js
xchg
sub
enter
test
bound
jnp
subb
and
mov
jp
arpl
aas
sbb
mov
mov
inc
leave
fld1
shrb
xlat
sbb
ss
out
xchg
push
adc
cmp
xor
mov
or
insb
pop
xchg
mov
dec
cmpsb
adc
mov
mov
mov
lods
ja
cld
xchg
out
adc
in
dec
daa
roll
not
lock
xchg
add
pushf
push
xchg
adc
add
add
xor
or
pop
cmp
cmpsb
and
paddq
push
push
xchg
pop
scas
test
inc
push
and
ficomps
subb
add
rclb
outsl
pop
mov
cmpsl
and
leave
andl
push
pusha
fistps
mov
icebp
fadds
xchg
cwtl
js
adc
aas
adc
fadd
test
xchg
stos
fcomps
jno
leave
jge
mov
adc
inc
push
test
mov
int3
pop
xchg
lret
inc
push
xlat
out
add
push
into
push
sbb
add
adc
mov
inc
inc
das
js
loop
cltd
push
andl
inc
and
pop
mov
mov
mov
push
int3
mov
cmp
cmpsb
stc
adc
je
lods
adc
pop
cli
mov
call
sub
imul
inc
aam
out
cpuid
dec
loope
int
icebp
adc
rcll
hlt
push
push
mov
mov
jl
xor
fildl
inc
lock
popf
sbb
inc
dec
push
xchg
add
jae
fs
movsl
dec
push
lret
repz
cmp
shr
mov
rep
push
and
add
sbbb
pop
rolb
mov
inc
add
pop
ret
adc
cmpsl
and
mov
inc
mov
nop
mov
or
test
push
imul
lret
sbb
rcrb
call
mov
dec
jge
das
idivb
mov
aas
and
scas
hlt
sub
push
sbb
sbb
ret
xchg
fwait
add
test
push
jnp
mov
aaa
lahf
xor
popf
iret
adc
xchg
lahf
push
xlat
insl
sbb
adc
aas
sub
sarb
add
mov
cmp
push
add
cli
iret
and
mull
pusha
pop
jno
xor
pop
popf
lcall
movsb
icebp
cmp
data16
pop
mov
ja
das
setge
cmp
pop
into
lahf
outsb
or
push
push
mov
xchg
xor
dec
popa
or
mov
xchg
xchg
mov
ss
jmp
push
mov
sti
cmp
aaa
pushl
nop
pop
in
mov
sbb
call
leave
stos
sub
jbe
adc
inc
jno
add
loope
test
mov
push
shlb
cmp
lock
sub
lret
sbb
push
xchg
dec
int3
in
sbb
add
mov
cmc
jb
shrl
mov
lods
cld
cmpb
mov
pop
sbb
jo
mov
sub
mov
popf
push
push
in
dec
mov
cs
cmpsb
icebp
rorl
inc
dec
mov
lds
jl
lahf
xlat
cli
pop
sbb
and
sarl
cli
add
mov
or
fcompl
cli
inc
dec
add
jae
cmp
dec
jno
and
mov
jmp
pop
lret
test
add
test
cmc
scas
mov
pusha
fstp
popf
xchg
add
inc
inc
jge
add
movsl
add
outsl
adc
jae
cld
ss
cmp
pop
rorb
dec
enter
cmc
int
add
les
xor
loope
push
cltd
mov
jle
adc
lahf
inc
mov
or
cld
hlt
outsl
mov
or
cmc
inc
movsb
stc
push
xchg
mov
shrb
sbb
push
loope
xchg
sysret
adc
or
sbbb
outsl
ss
lods
dec
pop
push
add
je
cli
lcall
cmp
pop
scas
std
jbe
sub
adc
inc
out
loop
fwait
lcall
cmpsb
add
test
insl
mov
imul
cmc
es
pushf
dec
out
addl
add
roll
xchg
test
loope
mov
hlt
xchg
sbb
pusha
cld
inc
int3
add
fwait
xchg
inc
sbb
push
adc
repnz
popa
rcrl
test
add
adcb
inc
incl
mov
cmc
mov
mov
xor
cld
pop
dec
jo
dec
xchg
dec
add
jg
cmp
jno
inc
cmp
or
or
insl
loope
lcall
mov
cwtl
pop
leave
push
pop
test
decl
icebp
cmp
cmc
cmpsb
loop
add
inc
shlb
sbb
sbb
cmc
cmpsb
inc
add
mov
ljmp
rcll
leave
ret
or
pop
pop
hlt
xchg
xchg
cmp
jg
and
addb
hlt
and
movl
and
jl
fbld
in
adc
int3
movsl
jae
lods
movsb
fdivrl
insl
inc
mov
clc
test
dec
and
addr16
in
rolb
mov
and
inc
incl
bound
jge
push
push
rep
and
pop
inc
sub
xor
aaa
rorb
inc
add
mov
in
sub
add
mov
pusha
sbb
lock
orb
sahf
jecxz
or
nop
lea
add
andl
cmp
in
or
dec
cmp
pusha
repz
push
cmc
incl
push
mov
push
mov
xor
mov
jns
mov
mov
pop
push
cmp
call
inc
out
dec
add
movsb
pop
cmpsl
add
push
and
decl
pop
xchg
stos
cmpsl
pop
adc
add
push
mov
mov
cmp
wbinvd
jmp
push
fcomps
pop
cmpb
loopne
mov
xchg
leave
pushf
push
sub
and
jne
push
icebp
or
add
les
pop
mov
movsb
andb
and
jb
das
adc
cs
and
mov
js
es
cmc
fs
inc
in
ficompl
fnstsw
jne
lcall
imul
xchg
rolb
repz
mov
cmpb
or
fwait
mull
pop
xor
shl
xor
cmp
int
mov
test
pushf
in
out
das
and
xchg
and
jl
sbb
loop,pn
cmc
fwait
out
mov
lea
cmp
les
outsl
jmp
adc
aam
fisttpl
mov
out
sbb
test
cltd
nop
aaa
clc
das
and
xor
ja
mov
mov
mov
mov
mov
jo
decl
fmull
xor
push
or
cmp
sahf
aas
gs
push
pop
movb
xchg
imul
xor
inc
inc
pop
cs
lret
mov
adc
sub
roll
adc
mov
pop
stos
jmp
enter
jmp
xlat
rorl
mov
mov
roll
mov
add
jnp
fmuls
clc
lcall
xor
stc
scas
imull
and
dec
mov
call
xchg
cmp
dec
add
sbb
or
adc
push
cld
inc
mov
push
sub
jl
jg
lea
in
dec
inc
ds
test
ret
clc
cmp
and
and
test
aas
lods
daa
mov
cmpb
sub
add
jne
aad
push
lds
pop
adc
mov
and
xchg
cwtd
call
and
gs
pop
or
decl
outsb
and
out
dec
lahf
or
push
mov
imul
js
mov
subb
insb
sbb
nop
shll
leave
cmp
test
arpl
jg
ljmp
aas
lret
subl
adc
ja
add
push
pop
push
repnz
out
pushf
push
sub
fldcw
ja
mov
sub
divl
into
mov
lret
push
test
xor
fbstp
sbb
sbb
lods
mov
xchg
xchg
dec
add
or
dec
js
xchg
cs
pusha
fsubs
cld
add
mov
mov
lods
xchg
ret
fdivp
adc
push
adc
inc
outsl
orl
clc
mov
jmp
push
int
popl
pop
mov
push
fwait
sub
xor
inc
outsb
push
incl
adc
ret
andnps
dec
cmp
cld
dec
les
out
test
sub
decl
lods
loope
stos
push
mov
xchg
loop
into
jns
ljmp
test
or
incl
push
jl
mov
mov
push
sub
addr16
xor
dec
adc
push
or
arpl
mov
or
xchg
xchg
sub
and
fnsave
fisttpll
shl
push
repz
stos
mov
add
test
mov
test
loope
mov
xor
outsb
lods
and
jb
fcoms
std
movsb
or
mov
pop
leave
cmp
and
or
dec
lcall
adc
inc
popa
dec
mov
mov
rol
xlat
cmp
mov
adc
push
movsb
nop
pushl
xchg
arpl
mov
imul
or
adc
mov
ljmp
and
dec
test
mov
sub
jg
pop
dec
loope
add
loopne
mov
cmp
push
jge
xchg
add
addr16
push
fsubl
out
addr16
xchg
add
call
mov
incl
inc
xchg
cmpsb
rclb
push
pop
cmp
jg
int
lea
xor
cmpsb
or
mov
dec
cpuid
clc
rcll
dec
cwtl
add
add
lods
mov
add
mov
femms
shrl
nop
arpl
add
mov
sub
or
loop
lahf
out
pop
fs
inc
jle
mov
mov
cmp
lods
adc
sbb
and
gs
add
add
or
loop
pusha
mov
xchg
xor
push
ficompl
add
dec
inc
jb
ret
outsb
mov
hlt
inc
dec
mov
adc
pop
movsl
notb
xor
push
adc
iret
and
loope
adc
scas
rcrb
aaa
mov
xchg
ljmp
out
pop
pop
sbb
jne
mov
mov
push
loope
loopne
mov
dec
pusha
add
dec
pop
ret
or
push
scas
or
inc
mov
or
fs
loop
loope
jae
mov
pop
fucomp
and
es
add
jno
sbb
mov
ss
incb
sub
jns
xor
stc
pop
lods
mov
mov
xchg
mov
cmp
ljmp
insl
sbb
sub
push
inc
cmpsb
int
fdivrs
ret
icebp
lds
mov
fists
ljmp
jmp
lahf
imul
xlat
push
mov
fcomip
sbb
or
or
movups
cmp
sub
nop
sub
mov
out
mov
ja
and
outsb
test
cmp
sub
cmp
and
inc
loope
cmc
aaa
cmpsl
adc
addr16
shll
incl
rorl
xor
push
inc
call
or
fs
cmpl
clc
out
cli
insl
push
cmpsl
add
or
fs
mov
jg
sbb
xchg
add
sub
add
push
sub
xchg
aas
jl
insl
mov
je
mov
adcl
insb
inc
cli
or
dec
cli
aad
dec
insl
leave
jnp
add
jg
out
in
pop
jns
push
xor
test
movsl
and
pusha
jne
mov
or
inc
daa
mov
and
adc
cld
and
mov
and
push
sarb
inc
lds
and
data16
jo
arpl
dec
scas
xlat
lret
cmp
aam
ljmp
add
jge
in
mov
test
pop
sbb
movsl
pusha
jo
dec
cmovs
xchg
test
add
fwait
xchg
xor
in
cmp
leave
cld
imul
mov
xor
callw
fwait
jmp
mov
data16
int3
mov
ret
sbb
sub
adcb
imul
or
sub
mov
adc
or
shrl
inc
xchg
jl
jl
mov
test
lods
popa
mov
out
sbb
out
cltd
jmp
roll
xchg
iret
push
xor
outsb
sbb
pmuludq
int3
adc
fwait
pushf
fildll
adc
cmp
inc
push
ret
dec
aas
lahf
push
lcall
mov
push
fwait
dec
pop
outsl
scas
es
ss
lock
pushf
xchg
loop
push
arpl
test
add
mov
fwait
mov
dec
push
inc
aas
and
mov
ret
insb
lahf
rcl
ret
lcall
loope
jne
mov
sub
daa
test
push
das
push
jmp
shlb
and
stos
ljmp
test
outsl
or
insl
ds
jns
jns
add
lahf
add
and
push
mov
jp
mov
pop
pop
push
pop
and
repnz
xor
jge
fdivp
xor
fcomps
sub
mov
call
js
aas
mov
inc
sub
dec
xchg
rorb
xor
adc
outsl
pop
add
jg
test
mov
enter
insb
inc
mov
mov
or
mov
mov
sarl
outsb
or
jae
mov
and
pushf
ret
add
mov
incl
clc
xor
aad
int
adc
lcall
mov
adc
test
pop
push
pop
dec
idiv
mov
push
xchg
in
out
leave
fistpll
inc
xor
pop
inc
push
push
out
fs
adc
js
or
jl
cmp
popa
incb
add
das
clc
dec
inc
pop
mov
sbb
pop
pop
mov
sbb
mov
pop
bound
push
mov
cli
pop
fcompl
adc
xor
sub
mov
fistpll
adc
inc
inc
or
pop
ljmp
xchg
fsubrl
and
lock
mov
fstps
enter
aaa
lahf
mov
outsb
inc
jo
xorb
cmp
arpl
sbb
cwtl
inc
pop
mov
mov
and
aad
scas
inc
mov
xchg
sbb
push
lds
fucom
inc
outsb
insb
loope
jne
sub
aas
fdivrs
adc
test
mov
and
aam
xchg
hlt
cmpsb
les
fistps
int3
pop
inc
gs
add
outsb
jnp
fsts
jg
mov
inc
fldl
pusha
push
pusha
and
mov
cli
clc
jno
push
pop
std
dec
mov
pusha
sub
std
cmp
test
dec
pop
xor
xchg
dec
dec
pop
aam
adc
xchg
xchg
and
and
movsb
push
aas
lods
jne
jnp
fndisi(8087
fbld
jle
mov
xor
lret
add
pushl
sbb
scas
ret
xchg
dec
push
cmp
pop
popa
scas
sbb
mov
and
mov
mov
mov
cltd
or
sub
jp
pop
mov
lret
int3
lret
adc
in
xchg
xor
inc
daa
sub
lcall
mov
dec
int
scas
cli
xorl
sti
and
xchg
test
xchg
cmp
push
push
pop
sub
sbb
push
aaa
mov
add
ljmp
add
je
mov
jmp
sbb
mov
or
or
inc
add
xchg
test
ja
ret
in
add
popf
add
lods
and
cmp
scas
jp
stc
push
xor
loope
pushf
cwtl
lcall
xor
clc
mov
pusha
popa
fsincos
jmp
mov
xor
sbb
je
cli
cmpsl
test
mov
outsl
inc
int
dec
lods
call
cmc
in
add
loope
push
sbb
inc
xor
arpl
lcall
sahf
loopne
sub
mov
testl
jo
xchg
xor
adc
testb
jnp
gs
outsb
mov
and
pop
or
sahf
inc
mov
fwait
pop
sub
xor
testb
adc
out
xchg
mov
in
sub
add
inc
jp
mov
adc
xorb
push
lock
pushf
out
adc
arpl
iret
jge
sbb
notl
push
test
fs
jle
aas
dec
xchg
add
adc
mov
dec
mov
ret
pop
subb
lret
fstpl
pop
sub
adc
scas
add
sub
jg
pop
jo
insl
pop
push
or
daa
xor
cmp
fsub
aad
xor
dec
mov
out
stc
xor
mov
pop
ret
mov
add
and
mov
xor
sub
leave
cmp
es
jnp
clc
inc
inc
xchg
dec
aas
fisubl
push
out
push
aas
popf
add
add
addb
fildll
jle
xchg
jns
push
imul
lahf
cmpl
inc
sub
lahf
dec
js
cmpb
enter
mov
mov
nop
addr16
inc
lea
inc
add
lea
stc
stos
fcom
aas
mov
mov
dec
sub
mov
iret
mov
xchg
fcompl
cmc
shrb
lcall
ja
or
fs
and
cmpsl
pop
aad
xor
stc
cld
jmp
cmp
pop
mov
add
add
fisttpl
shl
jno
ja
cltd
sbb
test
addr16
push
xor
cs
sbb
pop
mov
pusha
arpl
add
cs
jle
xchg
push
mov
fs
mov
sub
push
shll
mov
cltd
inc
and
fdivl
and
adc
aam
push
das
and
push
idiv
push
sub
or
mov
xchg
aaa
fcoms
icebp
sub
xor
sub
push
pushf
push
daa
mov
mov
xor
sub
sub
jo
inc
rcrl
fldt
insb
adc
insl
cmp
pop
cld
and
sbb
mov
fnstcw
add
and
add
dec
cmp
push
add
mov
gs
mov
add
jmp
cmpsl
jl
add
xchg
dec
ja
int
jnp
mov
jl
xor
mov
pop
nop
lods
inc
testb
clc
inc
jg
js
add
jbe
sub
imul
jp
adc
add
and
dec
xor
inc
mov
mov
and
add
scas
decl
jmp
and
es
or
or
adc
ds
xchg
jbe
xchg
push
icebp
push
mov
movsb
out
push
xchg
outsb
adc
jno
fldl2e
pop
add
rclb
pop
mov
or
lahf
mov
hlt
cwtl
add
loop
add
add
mov
push
add
pop
adc
push
bound
andl
xchg
in
jle
lds
out
xor
cmp
ss
test
mov
fdivs
xor
cmp
mov
clc
push
nop
mov
dec
xor
mov
mov
pusha
adcl
inc
push
bound
xor
push
jle
pop
inc
lret
pop
insb
lods
mov
push
add
iret
push
addr16
xor
fmull
adcb
add
mov
or
mov
pop
cmpsb
push
in
lcall
fs
mov
mov
xorb
jl
xor
cmp
jg
xchg
push
push
jge
lret
mov
rorb
mov
inc
loopne
pushl
adc
lcall
xor
jae
fnsetpm(287
dec
jno
jecxz
sbb
push
xor
jmp
subl
mov
dec
outsb
xor
mov
ffree
and
or
aad
mov
adc
dec
pop
pop
cld
and
stc
fsubl
xor
addr16
adc
mov
setne
js
pop
adc
push
loope
aaa
push
pop
add
jae
cmp
cltd
pop
mov
xchg
sub
adc
pusha
out
xchg
icebp
inc
arpl
nop
pop
mov
add
xchg
adc
add
imul
lock
sub
div
ds
lret
pop
jg
scas
adc
cmp
xchg
jo
inc
dec
out
cmpsl
mov
dec
ficoml
sbb
push
nop
in
pop
cmpsb
sub
cld
loopne
push
out
mov
loop
jnp
loopne
popa
mov
sub
rcl
xor
pop
xchg
push
or
jle
jl
mov
pusha
lods
les
scas
mov
push
add
mov
imul
aaa
or
lret
pop
inc
cli
dec
pop
cmp
ret
pause
or
pop
cmp
sbb
or
sar
and
ret
xchg
pushl
jmp
xchg
pushf
shlb
adc
mov
nop
cmovs
mov
stc
jns
xchg
push
push
xor
xor
or
inc
in
dec
jo
push
inc
fistl
jno
sbb
add
jae
mov
jnp
or
add
mov
dec
sti
pop
test
mov
cmc
cmp
and
or
sarl
jb
sub
wrmsr
xchg
xchg
push
xchg
cmp
xor
inc
or
pop
xor
andl
mov
sbb
das
call
cmpsb
add
rclb
es
loope
push
add
sub
pop
fsub
pop
pop
mov
mov
xchg
stc
and
mov
or
cmp
ds
add
notl
mov
stc
jne
mov
push
cmp
adc
mov
sbb
sub
push
das
inc
xchg
mov
icebp
push
xor
adc
jbe
pop
in
dec
sub
mov
inc
pop
adcb
or
dec
js
xchg
mov
shlb
add
mov
out
cmp
jmp
loopne
and
push
aam
std
sub
shl
xlat
not
inc
clc
imul
scas
mov
push
addb
inc
notl
mov
addb
pop
mov
fldt
shrl
roll
push
enter
sub
into
adc
sub
in
clc
inc
mov
scas
jnp
addb
or
dec
nop
pop
ret
adc
jg
lods
enter
inc
decl
mov
push
push
lods
jl
adc
shlb
push
mov
loop
sahf
ds
pushf
mov
aad
cmc
sub
cmpb
sbb
xchg
sub
push
in
xor
mov
lods
push
enter
pop
adc
inc
aam
out
sub
or
jg
cmp
insl
lds
pop
out
in
jecxz
or
push
pop
inc
sarb
out
pop
cmp
test
rcll
repnz
mov
fs
jno
stos
sub
lea
orb
loop
scas
out
in
test
clc
lock
xlat
jae
cwtl
mov
je
and
xor
add
lcall
xor
aad
popa
and
cld
scas
xor
xor
xchg
jnp
sub
push
sub
repz
inc
inc
add
push
mov
mov
ss
pop
rcll
jmp
fbstp
inc
std
enter
or
sub
sbb
dec
mov
or
lahf
cmp
lret
cmp
ror
cwtl
repnz
outsb
add
xor
push
pop
scas
fnstcw
and
jae
jo
push
int3
xor
lahf
mov
jbe
cltd
push
pop
xchg
shll
add
mov
pop
jbe
enter
xchg
and
dec
addr16
inc
popa
push
dec
rorb
aas
clc
inc
adc
mov
dec
mov
sbb
or
pop
mov
push
test
loop
adc
cli
lds
jl
sbbb
lret
fmuls
push
pop
xchg
pop
inc
daa
push
int
cmp
adc
iret
je
jge
xchg
mov
mov
mov
adc
orl
xchg
inc
loop
and
out
jne
cmpsb
call
mov
in
pop
push
sbb
xchg
loope
xor
push
mov
mov
push
xorl
dec
lret
clc
jmp
insb
adc
call
inc
xchg
test
mov
jle
mov
or
mov
mov
subb
insl
call
xchg
xchg
inc
push
aas
rcrb
adc
adc
mov
scas
add
pop
xor
mov
and
jmp
cmp
add
inc
push
outsb
icebp
jmp
jb
or
popf
push
adc
loop
mov
push
stos
rcll
cmpsl
into
jg
nop
rolb
jle
adc
sbb
lret
push
call
nop
pop
adc
lock
and
add
mov
mov
clc
imul
orl
stc
jge
and
mov
mov
movsb
pop
aas
stc
xorl
aad
push
inc
mov
or
xor
mov
mov
cli
clc
shlb
jg
arpl
mov
mov
dec
or
jle
cmc
mov
int3
adc
int
mov
ret
xchg
subb
aad
cmpsb
cmpsl
int3
or
mov
inc
out
stos
adc
mov
pop
jp
fstpl
sub
or
mov
loop
jb
out
cmp
mov
bound
or
in
aas
loop,pt
and
jg
imulb
std
incb
inc
lea
rcl
sub
mov
mov
jmp
movsb
repnz
into
or
outsb
leave
shrb
daa
mov
dec
xchg
mov
out
add
cmp
and
jp
cld
sar
in
inc
dec
inc
xor
sbb
decb
or
push
inc
aad
es
movsl
cmp
rclb
cmpb
aas
mov
lea
mov
jle
jmp
cld
stos
or
pusha
mov
xchg
pop
stos
xor
gs
ss
sub
add
sub
dec
repnz
loop
ja
aad
cmp
xbegin
repz
add
adc
fldt
lock
cmpsb
bound
pop
popa
out
mov
aad
test
shrb
jp
incb
mov
and
ror
pop
mov
mov
mov
orb
scas
mov
scas
jg
cwtl
add
pop
dec
in
jg
ja
aas
inc
mov
aad
clc
sbb
into
xor
and
xchg
mov
repnz
clc
dec
xchg
fldl
mov
andl
dec
lahf
adc
loop
jbe
inc
movsb
in
scas
sar
fwait
or
fidivrl
in
cmp
insb
cmp
adc
ds
adc
in
outsl
mulb
dec
cmpsb
ljmp
into
mov
lcall
test
mov
cwtl
lret
clc
mov
outsl
add
mov
lcall
pop
loopne
into
sbb
ret
inc
sbb
fbstp
shl
rcrl
or
adc
dec
pushl
pusha
outsb
movsl
and
mov
xchg
push
xchg
incl
xchg
mov
cmpsl
mov
insl
cld
inc
fdivs
setg
ret
push
push
cmp
adc
mov
inc
je
movsb
jnp
mov
pop
xor
pop
mov
mov
pop
call
mov
test
mov
adc
jg
ss
cmpsb
and
out
push
lock
push
cmpsl
xor
addr16
fbld
sbb
shrb
add
lock
in
andl
insl
loopne
pop
loopne
int3
incl
int3
mov
icebp
xor
bound
jmp
push
pop
jecxz
mov
or
fidivrs
stc
xchg
pushf
inc
xor
rorl
adc
repz
push
lods
sub
add
or
cmp
adc
xor
inc
sahf
xor
and
dec
lcall
addb
arpl
andl
xchg
mov
out
and
push
sub
dec
fildll
xor
xchg
sbb
jle
fisubrs
jne
movb
mov
jno
cld
mov
mov
and
mov
pushf
mov
sbbl
mov
xlat
xor
loope
loop
dec
and
test
pop
mov
loope
add
pop
hlt
sbb
pop
call
xchg
imul
push
inc
imul
ja
ss
lret
sahf
pop
in
inc
push
pop
jne
nop
in
ds
adc
hlt
decl
fsts
inc
push
imul
enter
sbbl
pop
lcall
mov
pop
and
fiaddl
rcrb
and
stos
jecxz
imul
mov
int3
jo
xchg
mov
dec
push
incl
cld
mov
sbb
push
pop
xor
pusha
mov
jb
push
aad
ljmp
and
cwtl
or
adc
xor
outsl
push
jno
cmp
cs
sbb
ret
sti
dec
out
cld
cltd
arpl
sub
mov
fdivrs
aad
jb
movsb
cmc
mov
stos
aas
iret
popf
clc
mov
cmpb
jo
lcall
push
jne
ss
fsubrl
add
pop
popf
jns
je
movsb
xchg
xor
push
mov
scas
mov
ss
adc
sarb
fisubs
push
pusha
in
ss
sar
adc
aas
mov
dec
mov
and
mov
and
jmp
lods
idivb
push
ljmp
add
loop
decl
sub
xchg
stos
mov
repnz
or
pop
into
and
xorb
into
xor
dec
pop
cmc
jnp
mov
rolb
xor
sub
jl
push
cmp
or
pop
or
pop
ret
pop
xor
bound
add
add
jbe
leave
sbbb
iret
lcall
out
or
mov
dec
hlt
popf
adc
daa
stc
jo
jno
or
jo
out
jle
or
clc
jp
push
mov
mov
incl
dec
ja
jmp
xchg
lcallw
lahf
or
test
add
cltd
add
cs
xchg
enter
insb
cli
sub
pop
cs
push
sbb
adc
std
push
mov
pop
rclb
push
mov
mov
std
repz
sarl
out
mov
jl
stc
pusha
std
jne
sbb
lods
jg
stos
cmp
roll
loopne
jo
or
adc
and
mov
fdivrs
push
mov
push
sub
cli
and
mov
lcall
mov
mov
mov
mov
mov
fcmovnbe
fstpt
pop
add
pop
sub
push
data16
ret
dec
mov
leave
cmp
test
addb
outsl
scas
cmpsb
mov
sahf
sarl
adc
es
xor
imul
das
daa
xlat
loope
mov
mov
mov
js
cmp
fsubs
xor
fstps
push
leave
popa
and
pop
or
fnstenv
aas
aad
fcoms
jg
clc
add
imul
pop
sub
loopne
test
lcall
xchg
clc
and
ret
mov
sub
gs
mov
lea
ret
mov
inc
popf
add
push
pop
adc
push
sbb
and
pop
ljmp
out
jmp
add
notb
movsl
orl
push
inc
inc
pop
stos
pop
les
inc
inc
cmpb
ds
mov
test
mov
dec
shl
sbb
sbb
ds
pop
mov
add
lret
add
add
ljmp
fsubrs
aaa
mov
mov
fistl
and
jg
jecxz
push
mov
mov
clc
xor
xchg
adc
inc
inc
outsl
jecxz
sub
and
xor
mov
xor
and
sub
xchg
sbb
jle
inc
addb
imul
outsb
out
les
cwtl
sbb
dec
cld
aaa
clc
mov
andl
sbb
sbb
jmp
loopne
ja
sub
loope
jno
xlat
push
push
mov
aam
cmpsb
sarb
andb
inc
mov
push
dec
ret
cmp
jmp
gs
popa
xchg
xor
push
adc
nop
lds
sub
dec
ljmp
hlt
pop
aad
ss
add
incb
xor
add
leave
loopne
lods
mov
lds
ror
mov
sub
push
mov
dec
pop
pushf
insb
hlt
fists
aas
fimull
out
add
int3
into
rcr
test
fisubl
in
bound
jno
push
jg
xchg
pusha
and
decl
stos
sub
add
test
bound
js
inc
neg
mov
ror
outsl
jle
cs
dec
dec
add
faddp
enter
cmp
xlat
insl
mov
push
or
sbb
pushf
jno
int3
and
fwait
fwait
pusha
ss
xor
out
or
ljmp
leave
xor
js
push
pop
xor
sub
push
xlat
pop
aaa
inc
fistl
push
aaa
inc
xor
fwait
mov
in
sbb
inc
mov
pushf
lahf
mov
fisubrs
in
inc
dec
mov
mov
mov
adc
pop
inc
out
jns
loopne
mov
faddl
hlt
call
call
add
icebp
xor
xorb
filds
mov
jg
push
call
ds
pop
pop
pop
sti
shlb
in
jns
ret
add
out
test
xor
mov
stos
stos
push
mov
adc
mov
fnstsw
sbb
test
sti
fcoms
cmc
out
adc
ds
adc
inc
movsb
adc
and
add
orl
mov
xchg
xchg
jmp
sub
loope
fldt
in
out
mov
inc
cmpsb
jnp
push
cs
adc
and
mov
or
js
test
mov
test
addb
xchg
sub
inc
fistl
rolb
push
dec
arpl
cs
mov
inc
test
js
jo
test
ret
xor
in
push
sti
ret
push
nop
push
aas
test
mov
xchg
and
inc
ds
shrl
ficoml
fwait
lret
dec
jecxz
dec
or
int3
loopne
pusha
push
adc
ljmp
and
xchg
hlt
push
mov
stos
pop
movsb
adc
into
je
jbe
hlt
dec
xchg
arpl
test
jecxz
jbe
push
cmp
shll
fdivl
pop
sbb
xchg
push
out
inc
jg
ja
clc
add
sub
pop
insl
push
icebp
mov
hlt
ret
dec
mov
push
cmpsb
and
invlpg
mov
mov
stos
xchg
push
inc
faddl
pop
xchg
adc
cmp
iret
outsb
adc
divl
stc
lahf
cmp
inc
in
daa
stos
push
push
push
cli
jnp
les
test
movsb
xchg
in
jp
sti
cmpsb
or
movsl
push
das
push
xchg
fwait
xor
bound
jl
adc
inc
into
shl
jmp
loopne
xchg
inc
fnstsw
testb
into
push
mov
jge
mov
in
push
add
incl
push
out
sarb
sbb
jecxz
dec
gs
into
cwtl
pusha
out
mov
inc
inc
pop
in
popa
or
mov
dec
mov
test
pop
mov
rolb
hlt
push
add
inc
out
nop
mov
in
inc
ret
xchg
xchg
ds
fiadds
cli
loope
popa
sbb
jecxz
xchg
push
aas
inc
cld
mov
cmp
popa
arpl
movhps
loope
stos
aaa
sbb
ds
add
mov
xor
cld
push
jle
pushf
mov
mov
jnp
and
test
imul
push
mov
mov
pop
inc
jno
inc
mov
cmpsl
test
sbb
and
adc
incb
movsl
cmc
jl
mov
cli
jno
adc
pop
fwait
jno
mov
aas
jno
pop
addb
inc
call
clc
movsl
cmpb
lcall
pop
and
jecxz
in
or
je
iret
mov
push
cld
andl
repz
je
shl
push
inc
pop
push
push
push
cmpb
aas
sbb
shll
clc
jg
inc
mov
push
mov
cmp
jb
or
mov
fbstp
fld
testb
inc
mov
or
das
loop
jg
pop
cmp
aas
and
mov
and
loopne
and
xchg
sbb
mov
dec
lock
inc
jmp
js
or
aaa
inc
nop
test
das
pop
add
sub
adc
testl
sbb
sti
jmp
js
mov
mov
addl
inc
stos
fcmove
inc
pop
jo
lods
es
or
jmp
dec
inc
jno
or
mov
cmc
cmp
nop
loopne
mov
jle
push
addl
ret
inc
lds
rorb
scas
sbbl
pop
aad
inc
and
fdivr
mov
test
jecxz
sbb
aam
subb
add
or
adc
pusha
mov
test
lahf
pop
sahf
ret
mov
js
push
pop
pop
lock
jge
cltd
bound
nop
mov
out
cmpl
loop
adc
xchg
inc
call
inc
fsub
test
jno
lods
dec
add
add
jle
sbb
mov
out
jle
and
adc
add
cmp
adc
arpl
loope
mov
leave
outsb
movsl
inc
das
mov
xor
or
add
pop
adc
mov
ret
and
cli
incl
jno
fs
push
mov
decl
jae
outsl
cli
cmpl
or
cmp
pushl
ds
mov
shll
mov
and
imul
movsl
pop
xlat
shrb
out
int
ljmp
aaa
push
and
mov
iret
adc
push
adcb
dec
push
pop
hlt
ljmp
divb
inc
shlb
fstl
aam
cwtl
lret
pusha
in
divb
cmp
push
loope
sub
hlt
dec
push
xor
mov
cmp
jbe
cmc
movsl
outsl
pushf
push
cs
bound
outsb
add
inc
cmc
call
rolb
decl
mov
in
rol
mov
popa
pop
icebp
xchg
ficompl
push
fsubp
addr16
pop
add
fnsave
cmp
mov
lock
popa
cmp
dec
pop
decl
pop
sub
mov
imul
incb
push
cld
int3
push
adc
shll
sbb
push
push
mov
daa
jae
mov
ja
inc
je
mov
in
fldcw
shrl
cmp
sarl
mov
jmp
lds
out
push
daa
sahf
sub
pop
loop
add
pop
and
rol
lods
fs
xlat
add
mov
in
dec
add
push
push
lcall
push
mov
jb
ds
push
pop
xchg
or
fs
cli
or
scas
gs
jae
jl
loopne
pop
ss
lods
sar
mov
xchg
sub
stos
xlat
in
insb
scas
out
stos
arpl
insb
jmp
mov
jnp
adc
fbld
pusha
call
xor
ret
negb
popf
repz
rclb
aaa
loopne
shl
add
adc
sbb
sub
dec
xor
add
jae
std
fisttps
mov
fs
inc
adc
aaa
or
add
push
mov
or
dec
sbb
out
aas
mov
dec
xchg
dec
adc
es
cwtl
sub
dec
pop
xchg
loope
popl
cmpb
pop
stos
mov
cld
dec
pop
add
aaa
mov
fdivrp
mov
or
test
cld
in
fiadds
cli
andb
adc
jl
jg
cwtl
mov
or
adc
jb
aas
ljmpw
and
outsl
sarb
xchg
mov
cmc
jge
xchg
insb
out
hlt
mov
mov
test
jb
pushf
cwtl
mov
stos
jne
bound
pushf
leave
decl
mov
popl
pushf
dec
add
pop
jne
pop
sbb
dec
mov
repz
test
push
ljmp
and
ja
imul
push
lahf
jne
push
xlat
pop
bound
mov
push
xchg
or
dec
ret
loope
pop
enter
mov
insb
cmp
sbb
lahf
test
pop
jge
xchg
cli
fwait
push
inc
in
pop
es
jp
adc
shlb
int
add
cmp
dec
outsl
inc
and
inc
in
std
and
or
aam
incl
stos
icebp
test
dec
and
je
inc
push
fisttpl
pop
lret
and
outsl
pop
jmp
pop
nop
ljmp
rolb
xchg
sbb
fstps
adc
mov
out
shlb
mov
pop
loopne
xorl
cmp
int
lea
mov
arpl
mov
or
mov
adc
xorb
in
add
mov
dec
xlat
cmp
stos
shlb
or
jo
bound
cmc
mov
mov
test
xorl
in
sub
push
decl
cld
popa
popa
out
jmp
inc
xor
insl
popf
mov
add
out
rclb
aas
or
or
aad
or
icebp
cs
pop
xchg
jg
jge
lods
cmp
xor
sbb
ja
idivb
add
and
movsb
xchg
fildll
sbb
xor
loop
movsb
sbb
clc
cltd
and
fistpl
pop
aas
dec
dec
mov
jnp
aam
push
decl
xchg
cmpsl
int
aas
lock
sbb
jl
jb
out
xchg
cltd
test
add
nop
sbb
inc
decl
mov
and
hlt
mov
incb
pusha
mov
xchg
xchg
in
mov
ss
dec
pop
lds
aaa
push
cmc
sub
or
insl
adc
mov
cwtl
mov
or
or
js
inc
popf
jmp
xor
adc
xchg
pop
lret
cld
jo
push
pop
xor
and
lds
popa
dec
xor
adc
scas
sub
and
and
popa
or
ja
mov
out
mov
add
pushf
jecxz
inc
test
push
dec
xorps
jle
or
sub
xchg
cmc
add
xchg
mov
cmpsb
decl
add
sbb
inc
pusha
adc
lock
mov
repnz
loopne
jmp
add
push
div
push
and
push
inc
jbe
js
int3
sbb
and
scas
cli
call
or
movsl
mov
mov
jle
test
jne
pop
push
das
lock
add
or
decl
stc
inc
cmp
insl
loopne
add
incb
jecxz
xchg
mov
push
jp
out
dec
mov
adc
lahf
inc
cmc
pop
cmc
int
stos
push
jl
lcall
or
mov
cmc
dec
push
shll
fwait
add
lods
decl
push
jmp
add
shrb
addl
cmp
loopne
dec
call
push
mov
insb
sub
fnstcw
mov
push
adc
fbstp
lahf
test
add
xchg
and
loope
sar
and
loope
cmc
sbb
mov
and
pop
and
imull
loope
std
xchg
xchg
push
push
inc
add
mov
fwait
cs
or
dec
or
fistpll
push
add
pop
adc
loopne
inc
mov
add
stos
rcrl
gs
mov
lods
fstpl
loopne
sub
fwait
and
mov
clc
jbe
add
inc
and
jne
push
daa
xchg
sbbb
movb
roll
or
xor
or
or
push
roll
popf
mov
daa
loopne
or
jae
sbb
out
call
add
loope
ds
bound
orl
popa
add
mov
push
xor
pop
add
pusha
xchg
hlt
fisubs
pop
roll
dec
xchg
fdivrl
imul
xchg
clc
movsb
in
mov
jo
inc
inc
sub
decb
jg
mov
inc
and
fsubl
loope
popa
mov
aad
clc
std
pop
push
jmp
xor
stc
lock
dec
push
rclb
jp
dec
cmp
repz
int3
es
mov
xor
mov
roll
inc
mov
sub
jmp
test
js
stos
add
push
mov
cmp
push
or
mov
add
test
shlb
fdivrp
and
shr
test
imul
out
sahf
test
jb
js
test
stos
push
mov
sub
test
dec
add
addr16
ss
add
dec
aaa
data16
mov
jns
pop
aas
inc
cmp
jmp
and
xchg
add
incl
jae
xor
push
cmp
add
stc
call
cld
sub
push
filds
adc
sarl
arpl
call
sbb
or
pop
cmp
add
and
sahf
int3
std
cmp
std
out
test
cld
lods
add
dec
inc
scas
mov
jb
add
gs
inc
pop
shrb
std
sti
cwtl
mov
push
andl
popa
dec
jl
push
call
rorb
loopne
popa
push
xor
push
or
add
call
sub
sbb
jmp
jno
insb
cmc
or
pop
mov
sbbb
pusha
xchg
and
mov
movsl
daa
stos
mov
cmp
sbb
ljmp
add
or
jb
mov
push
mov
push
mov
pop
jb
aam
sbb
shrl
fiadds
pop
stc
shll
inc
cmp
add
jno
mov
or
xor
add
lock
fwait
inc
add
mov
sbb
adc
lds
ljmp
xchg
or
adc
cmp
popa
bound
xor
jl
mov
inc
cmp
or
pusha
inc
inc
and
out
mov
sub
aaa
push
jno
movsl
xchg
jecxz
sbb
decl
add
fdivl
inc
add
pop
mov
andl
in
or
out
pop
inc
and
dec
dec
jo
dec
int
push
mov
mov
fdivs
pause
outsl
push
inc
cld
cli
cmp
decl
mov
lea
daa
pop
push
lock
imul
test
enter
out
add
push
mov
mov
or
clc
incl
mov
aaa
dec
decl
rolb
loopne
stos
cli
adc
sbbb
jg
xchg
fwait
loopne
aas
mov
cmp
loope
add
cld
lcall
hlt
push
and
notl
fiadds
inc
pop
das
sbb
mov
add
popa
daa
cld
or
mov
push
jp
or
in
mov
xlat
xorb
dec
inc
ret
xchg
js
dec
out
ja
ret
arpl
dec
inc
popa
loope
inc
and
push
and
mov
inc
pop
lock
popa
pop
rolb
dec
std
lods
es
jle
sbbl
fwait
aas
dec
test
test
push
data16
leave
clc
popf
lods
decb
pop
aaa
cltd
dec
pop
inc
push
lahf
insl
test
pop
fmull
cmpsb
aas
incb
sub
inc
push
fisubl
lret
dec
mov
test
ja
ljmp
jbe
sbb
je
cmc
cmpsb
push
das
imul
jg
push
mov
adc
add
lcall
into
scas
clc
mov
ljmp
std
pop
inc
jo
lcall
jecxz
push
or
mov
loop
incl
fsubrl
dec
mov
pop
or
mov
add
push
ffree
sbb
rol
inc
pop
loopne
xchg
mov
clc
xchg
test
pop
push
xchg
cmpsb
mov
mov
or
decl
cmp
xor
xlat
daa
hlt
rcrl
shlb
sbb
insb
xor
ja
adc
xor
adc
lds
and
lcall
fildl
js
xor
ds
dec
mov
sbb
stc
ljmp
and
jmp
icebp
in
mov
xchg
imul
push
dec
mov
cmp
adc
loopne
add
adc
mov
imull
fdivrs
test
mov
inc
sbb
ret
bound
mov
jae
cs
rcl
loopne
sbb
or
pop
cmp
mov
mov
mov
sbb
pusha
std
icebp
imul
lahf
cltd
mov
std
sub
and
jbe
sti
push
rolb
cmc
shrl
jecxz
xchg
lahf
andb
mov
lods
push
xchg
lods
jp
sarb
addl
loop
mov
lods
enter
add
mov
leave
clc
incl
pushf
pop
mov
add
lahf
stos
xor
js
pop
inc
adc
fldl
lcall
test
fldcw
aam
xchg
and
frstor
sbb
cmp
fisttps
or
inc
push
rolb
dec
push
gs
pop
push
cli
and
mov
mov
movsl
xor
push
daa
leave
push
cmpsl
call
ss
insl
mov
dec
adc
dec
leave
ljmp
mov
pop
sub
cld
mov
cmp
sbb
xchg
je
lcall
std
xchg
jne
inc
push
insb
lret
add
dec
sbb
xchg
insb
test
add
movl
fisubl
or
nop
xor
neg
add
stc
das
fwait
outsl
xor
cwtl
stos
jae
fwait
call
fsubrs
push
mov
add
mov
cmc
cmp
adc
cmp
popa
dec
mov
push
rcll
leave
cmp
push
out
gs
pop
not
mov
mov
outsl
fwait
push
and
and
add
aaa
ret
clc
dec
filds
faddp
add
repz
or
xor
scas
pop
cmpsb
sub
imul
mov
sbb
mov
int3
ficompl
mov
pop
or
mov
push
fdivs
inc
adc
cmpsb
push
js
dec
jle
das
loop
incl
pusha
cltd
or
mov
popa
jnp
jb
aaa
insb
xchg
xlat
cmp
out
xchg
inc
stos
adc
inc
aam
cmc
xchg
mov
add
inc
inc
mov
wrmsr
push
inc
test
nop
mov
sbb
ret
enter
push
xor
aam
repz
push
mov
testb
inc
cmp
mov
icebp
push
inc
mov
cld
aas
into
xchg
test
faddl
push
dec
ret
sbb
cmp
xor
test
cmpsb
aad
lds
cli
popw
pop
mov
aam
or
mov
es
xchg
les
lcall
imull
mov
mov
aas
sbb
imul
or
filds
add
ja
mov
std
out
sub
xchg
test
jne
dec
pop
cmpsb
rcrl
jnp
movsb
add
iret
cmp
push
mov
fidivrs
imul
add
out
and
hlt
and
test
aaa
cld
mov
adc
outsb
nop
xor
or
aad
sarl
add
xor
sub
nop
loope
ret
inc
push
ret
out
xor
jno,pn
test
clc
fwait
and
or
cmc
shlb
pop
sub
xchg
add
cs
loop
pop
cwtl
sbb
mov
pop
jmp
and
lcall
adc
in
jp
xor
cld
adc
aas
lcall
cmp
in
jg
addb
shll
int
add
jns
cmp
sbb
cwtl
mov
inc
ljmp
adc
repz
or
jg
pusha
aam
mov
shrb
test
pushl
cli
xlat
sbb
js
imul
aam
mov
push
insb
pop
ljmp
incb
fcomps
cwtl
sarb
add
cwtl
mov
mov
repnz
call
inc
xchg
lock
aam
push
and
and
mov
adc
mov
or
cmp
rorl
push
cld
push
add
aad
clc
jnp
test
sar
pop
orb
add
out
lcall
std
lret
lock
or
push
push
xor
and
adc
pop
ret
cmp
fwait
fs
in
call
adc
pusha
cmp
les
sbb
movsb
int3
push
pop
test
pushf
add
pop
or
mov
stc
inc
jl
fisttpl
pop
fwait
mov
mulb
sbb
cmp
loop
lock
js
jno
jno
or
test
mov
aam
or
inc
test
add
xchg
int
adc
jle
in
sub
lds
sahf
sub
inc
cmp
ljmp
lods
mov
shrb
xchg
inc
enter
xchg
cli
stos
add
adc
js
add
inc
xchg
lods
jns
mov
mov
loope
or
js
fidivrs
jno
dec
enter
mov
pop
cld
cmpsl
dec
jp
cs
enter
les
xor
add
or
movsb
cmp
iret
mov
leave
mov
mov
repnz
icebp
mov
jbe
dec
fwait
roll
lcall
aad
jno
mov
fucomi
sbb
sbb
xor
xor
sub
movb
enter
cmp
fidivs
jmp
jmp
sub
cmp
sub
and
sti
jo
add
decl
and
cmpsl
inc
sbb
push
jno
loopne
pusha
fs
inc
or
sbb
decl
mov
sub
adc
push
clc
mov
test
mov
mov
sub
mov
out
add
inc
loop
xor
pop
outsb
stos
loope
int3
movb
add
or
rcrl
dec
lock
enter
ljmp
pop
inc
shlb
addr16
aas
lea
jg
jo
decl
xchg
mov
cmp
sub
test
gs
sbb
jns
das
or
hlt
dec
jbe
nop
in
inc
addr16
sub
ds
cmc
incl
sub
mov
clc
fldcw
repz
adc
mov
add
outsl
mov
insb
jg
jns
pop
and
imul
add
jb
pop
orl
add
popf
ljmp
push
dec
sbb
fs
add
repnz
xlat
inc
push
ret
mov
stos
imul
shl
mov
adc
cmp
mov
pop
push
sti
dec
ljmp
cld
enter
jg
jns
adc
mov
sub
dec
adcb
loop
pushf
hlt
mov
lahf
fadds
in
dec
pop
mov
or
pop
clc
xchg
mov
mov
xchg
xor
outsl
fildl
push
cmp
in
push
jae
mov
or
loope
jbe
lcall
pop
sbb
fisttps
scas
mov
mov
and
push
sarb
mov
loopne,pt
loop
fcmovnbe
fistpll
push
sti
push
inc
add
and
fstpt
add
fidivrl
ret
xchg
mov
lahf
nop
jecxz
out
dec
dec
or
add
cwtl
movaps
ret
jnp
xor
xchg
inc
ds
add
xchg
sbb
jmp
jle
je
dec
mov
jnp
pusha
pop
xlat
or
stc
add
sub
mov
sbb
outsl
add
sahf
lret
icebp
dec
jg
out
push
xor
xor
mov
sbb
mov
inc
mov
sub
cmp
xor
ljmp
adc
xchg
pusha
mov
jle
fadds
xorb
inc
es
ror
sub
sub
insl
dec
enter
sti
push
sbb
sub
inc
push
pop
or
fildll
jo
sbb
push
mov
mov
adc
stc
push
sub
shlb
mov
jg
loop
push
jg
pop
popf
sti
scas
mov
or
dec
lret
cmpsl
inc
xchg
lods
add
call
mov
lods
test
cmp
push
jns
inc
inc
or
les
imul
scas
cld
mov
add
scas
pop
popf
or
insb
push
cmp
dec
cld
lret
sbb
mov
dec
inc
or
sti
inc
adc
js
decb
add
ljmp
call
test
add
pop
rcrb
ss
mov
imul
inc
cmp
fldenv
and
mov
cwtl
icebp
adc
and
cmpsb
dec
push
jns
idivb
leave
dec
inc
xchg
pop
mov
lahf
push
jns
dec
std
lcall
lret
sub
mov
sbb
js
pop
jl
mov
inc
sbb
mov
and
mov
cmp
in
rcrb
or
call
rclb
std
incl
jmp
dec
push
xor
inc
out
insl
push
ret
fidivrl
cmp
sub
ljmp
imul
nop
mov
test
fildl
les
nop
add
jle
stos
cltd
lea
test
and
rorl
push
add
jne
mov
loop
mov
sbb
pop
add
in
test
inc
jl
clc
and
sar
je
xchg
cld
inc
cmp
adc
xor
pop
js
cmp
test
push
mov
test
loopne
pop
data16
sub
inc
mov
and
cmc
sbb
push
xor
lock
dec
icebp
pop
loope
out
sub
mov
pushf
xor
xchg
cmpl
sbb
inc
out
mov
mov
jle
sahf
push
andb
jns
dec
popa
and
je
pop
addr16
ss
in
mov
aaa
in
dec
daa
lea
push
fst
loope
sub
cmp
lahf
imul
je
data16
mov
push
cmp
jmp
in
mov
shrb
rorb
xor
jp
aaa
add
fiadds
loopne
and
and
adc
and
test
or
movsl
cmp
out
mov
push
cli
mov
dec
ds
mov
xor
lea
push
cmp
jns
dec
lsl
jmp
push
mov
mov
leave
dec
and
push
cwtl
sbb
inc
sbb
daa
jb
and
xchg
xchg
add
sub
pop
xchg
jb
leave
mov
jbe
icebp
lock
ret
cmp
imul
cmp
xchg
in
dec
xor
cmc
mov
cld
imul
and
dec
rorb
lret
pop
jecxz
cmovbe
xor
jbe
and
jp
push
add
fwait
inc
xchg
mov
jg
and
xchg
add
psubsb
add
push
jmp
shll
aas
js
add
pop
push
mov
dec
xchg
cltd
dec
inc
add
add
cmpsl
inc
inc
sub
daa
cld
jne
xchg
cmp
and
insl
pop
xchg
xchg
or
test
enter
adc
inc
cwtl
insb
lret
stc
push
inc
add
aas
jbe
dec
inc
mov
dec
add
inc
lods
cmp
int
test
addl
and
in
push
test
cmp
push
test
adc
loopne
pushf
enter
push
jo
pop
cmp
mov
jecxz
xchg
in
lcall
fisubrs
mov
xchg
insb
rorl
or
dec
arpl
jnp
ret
adc
out
or
push
adc
jle
mov
push
int
andb
idiv
mov
xor
jecxz
mov
adc
mov
push
inc
paddusw
and
ja
push
std
add
leave
std
inc
push
xchg
aaa
arpl
int
add
and
ret
xchg
into
inc
dec
lcall
fistpll
dec
push
jb
mov
or
in
inc
adcl
movaps
xor
out
sub
out
push
fdivrs
loopne
hlt
and
pop
push
xor
pushf
pop
mov
jge
rcrb
addr16
inc
mov
iret
mov
xor
arpl
add
inc
bound
jno
push
idiv
js
movsb
imul
add
push
pop
push
lcall
adc
sbb
fsubr
test
jno
dec
into
pop
sbb
pop
pop
call
jmp
call
add
jg
ljmp
test
rol
lcall
nop
loopne
lock
nop
inc
cmp
cld
pop
cwtl
into
sub
push
in
push
imul
fwait
enter
out
or
out
jg
rcrl
add
xchg
cmp
jb
rcrb
dec
xchg
enter
mov
or
dec
in
nop
inc
mov
cmp
movsl
dec
test
fists
imul
push
or
jno
jmp
cmp
cld
loope
aad
sub
pop
insb
dec
ds
in
shrb
cmp
add
lods
in
add
mov
or
xor
and
rorb
mov
mov
jmp
loop
ret
push
out
mov
sub
sbb
mov
jp
add
inc
mov
mov
mov
mov
and
push
mov
jmp
sbb
pop
out
dec
fldl
andb
cwtl
mov
jne
push
cld
aas
into
out
lea
xchg
inc
cs
hlt
push
imul
test
in
or
add
imul
xor
sbb
aad
add
xchg
jle
cld
fildll
and
lret
aad
ja
mov
pop
bound
dec
loop
pand
cld
jge
xchg
fsubp
sub
mov
xor
mov
pop
sbb
pop
into
sbb
jbe
inc
lcall
and
jno
ficomps
or
cs
cmpl
mov
mov
pop
ret
xor
cmp
pop
add
or
jno
cld
add
and
push
inc
xchg
xchg
test
loope
jecxz
movsl
mov
in
jg
into
fdivr
decl
and
and
fstpl
mov
lahf
and
dec
bound
repz
stos
pop
ret
aas
stc
std
xor
add
out
es
cmp
pop
std
lds
jecxz
pop
pop
mov
js
sbb
sbb
jge
stos
enter
and
rcrl
mov
outsb
out
and
test
aam
aas
ret
andl
imul
dec
push
into
dec
fucomip
inc
out
adc
gs
xchg
outsl
btc
stos
add
inc
cmpsb
xchg
xor
fistpll
dec
pop
outsl
inc
jae
add
xlat
outsl
orb
mov
pop
loopne
lret
inc
mov
add
sbb
adc
out
iret
xorl
adc
cmpb
lahf
leave
mov
mov
cwtl
ret
rorw
ret
jg
cmp
cld
ja
adc
mov
and
push
ds
add
cmp
adc
jg
ljmp
sbb
or
xchg
dec
cmp
pop
mov
adc
movsl
ret
push
xchg
std
mov
mov
xlat
pop
mov
inc
mov
add
icebp
aam
jns
and
jmp
sub
dec
sbb
adc
shrb
adc
gs
test
lock
or
dec
cmp
mov
mov
push
cmp
adc
sub
mov
iret
imul
repnz
mov
inc
shll
je
xor
std
sub
add
sbb
inc
adc
rolb
or
sub
mov
xor
fildl
mov
and
add
and
clc
sbb
mov
jl
mov
jmp
inc
pop
cmp
xchg
mov
adc
adc
sbb
add
arpl
cld
cmp
iret
mov
jnp
aam
push
pusha
sbb
pop
inc
mov
loopne
inc
gs
push
jl
dec
icebp
scas
clc
add
ds
mov
sub
insl
mov
and
je
fiaddl
fwait
and
add
fiaddl
bound
jg
cmpsl
nop
jle
js
mov
iret
xorb
push
fdivl
cmpsl
cmp
cld
stos
es
xor
pusha
adc
insl
loop
push
dec
lods
mov
sbb
sbb
cld
cmc
test
or
lret
xchg
js
add
and
push
mov
popa
mov
and
bound
xor
fcomps
mov
ss
enter
pushf
aam
adc
add
ljmp
and
inc
nop
jns
cli
nop
jg
adc
xor
addb
scas
jno
test
stc
xchg
stc
mov
out
fbld
xchg
jbe
add
xchg
pop
push
cmp
test
sub
loope
addr16
mov
jno
mov
push
push
add
fstpl
push
cmpl
add
mov
push
pop
and
jg
ja
mov
mov
mov
out
adc
jbe
incb
fs
xchg
stos
cld
sbb
cmpsl
pop
stc
lock
xor
sub
sbb
std
outsl
lcall
sub
lahf
sbb
cmpsb
inc
mov
add
cld
adc
insb
pop
out
mov
pusha
or
inc
or
das
inc
test
adc
sub
fcmovb
mov
outsb
mov
pop
or
ffree
enter
and
cli
cmc
or
shll
push
adc
push
in
mov
pop
sbb
aam
adc
mov
leave
mov
cwtl
add
ror
shlb
dec
mov
jg
shll
adc
scas
and
pop
dec
pop
add
adc
dec
xor
xor
ljmp
jl
push
push
cmp
or
scas
popa
pushl
rolb
inc
adc
repz
icebp
test
or
cmpl
fucomi
adc
addb
flds
sysenter
add
push
push
clc
mov
js
inc
sub
push
pop
pop
imul
inc
loopne
scas
js
cs
fcmovb
pop
test
xor
je
mov
scas
mov
mov
lods
xchg
aad
aad
nop
mov
test
mov
jo
adc
imul
movsl
filds
mov
or
mov
jne
cmpsb
adc
xor
xchg
data16
mov
pushl
mov
or
sbb
pusha
xchg
cmp
js
mov
and
push
adc
sbb
cmc
xor
imul
sbb
mov
push
mov
fwait
incl
push
psubq
imul
addl
repnz
jbe
decl
pop
cld
dec
jmp
orl
add
or
aad
push
sar
cmp
iret
lcall
cmpsb
js
fdivrp
jg
inc
popf
shll
mov
sbb
insb
mov
cld
ja
jno
cmp
mov
sbb
fimuls
inc
jmp
bnd
pinsrw
cmp
and
cmp
mov
jno
dec
adc
jle
scas
pusha
mov
lahf
in
adc
inc
stos
cmp
jg
adc
insl
adc
and
lea
cli
in
and
jl
lods
outsl
addb
jg
push
add
mov
in
sbb
pop
dec
fdivs
pop
xor
inc
jmp
aaa
hlt
hlt
jecxz
add
pavgw
sub
jo
or
jecxz
ret
out
pmulhw
jmp
cmp
add
hlt
sbb
test
std
lock
push
xchg
insb
dec
fimull
mov
ds
sub
stos
mov
decl
pop
lods
lods
jbe
jmp
int
outsl
pushf
cmp
or
jnp
jo
add
loop
cld
mov
test
outsb
in
sub
cli
filds
xor
jle
jle
inc
enter
cld
stc
fdivs
scas
mov
sti
dec
xchg
xchg
pop
sbb
mov
dec
and
xor
pop
mov
repz
mov
pop
sub
out
sub
fistl
jle
nop
loop
pop
aam
pop
sbb
or
decl
jno
rcll
sets
inc
push
pop
adc
xchg
pop
mov
dec
rcll
push
push
xchg
fmull
sbb
push
repnz
xchg
inc
adc
add
xchg
and
ja
clc
add
dec
gs
push
or
mov
lahf
aas
and
fisubs
sti
scas
adc
aas
pushf
cwtl
inc
mov
aaa
push
and
fidivrs
sbb
into
pop
mulb
cmp
adc
sub
ret
fs
push
sbb
test
xchg
lea
fcmovbe
sub
mov
ljmp
mov
sub
test
lcall
popa
imul
cmc
jg
in
je
sbbb
cmpsb
add
push
jnp
push
lea
xchg
and
lahf
popa
in
sub
pop
fiaddl
scas
jne
test
test
mov
xchg
cmpsl
loop
pop
outsl
mov
andb
outsb
pop
movsl
or
call
ja
std
outsb
ds
popa
adc
aam
mov
stos
or
xor
push
mov
pop
xor
adc
adc
xor
pop
jp
les
iret
loope
lret
mov
inc
aad
jns
xor
pop
pop
inc
or
adc
cmc
sbb
loopne
jg
lret
arpl
mov
movsl
das
inc
adc
popa
test
addb
sbb
incl
xor
int
les
pop
push
adc
push
push
addr16
mov
pop
jne
pop
add
mov
clc
inc
imul
test
loopne
mov
stc
ljmp
xor
inc
xchg
cwtl
jmp
jne
add
call
add
pushf
cmp
mov
push
jge
push
fs
in
ret
je
mov
mov
test
loope
cmp
adc
mov
push
dec
add
xchg
xor
add
pop
and
adc
dec
cmp
jno
mov
ret
and
clc
jmp
xchg
jo
xor
mov
pop
stos
pop
or
mov
cmp
mov
lock
mov
xchg
int3
test
or
aaa
jnp
repnz
loop
xor
sar
je
lds
out
xor
jl
push
bound
in
enter
shll
scas
and
xlat
add
and
lcall
jb
jns
insb
vunpcklps
push
mov
pop
shrl
adc
imul
mov
shlb
outsl
rcrl
dec
push
push
jmp
movsb
jmp
es
mov
jg
add
jno
mov
xchg
xchg
mov
jg
mov
inc
mov
mov
test
test
loopne
sub
in
mov
emms
ds
loopne
cwtl
aam
icebp
enter
jg
loopne
pop
test
and
xchg
addr16
add
jecxz
pop
mov
or
inc
mov
jbe
push
add
jns
pop
mov
cli
sbb
call
xor
adc
loope
dec
insl
xorl
mov
xor
leave
ja
xchg
jae
fadds
into
fiadds
mov
outsl
add
mov
sub
adc
jnp
test
push
je
adc
fistps
adc
repnz
xor
cmpsl
mov
ret
mov
push
cmp
lret
sub
and
loopne
arpl
inc
inc
jg
sub
gs
or
or
stos
ljmp
addr16
or
mov
sbb
mov
popf
ret
mov
jmp
lcall
pusha
jns
lahf
add
add
jg
add
cmpsb
push
sbb
dec
in
inc
inc
jge
xor
or
insb
shlb
cwtl
push
mov
add
jg
out
sub
add
hlt
les
lret
pop
xchg
insl
mov
inc
xchg
subb
ss
fbstp
or
xchg
jle
sbb
lret
je
fwait
lea
mov
jae
hlt
xchg
and
std
ficomps
loop
mov
mov
or
and
xchg
imul
jbe
sub
or
cmp
cmp
mov
push
cmc
push
pop
cld
fldenv
jb
jg
xlat
jp
fistpl
in
add
ja
shl
add
sbb
fcomip
cmp
in
test
pop
jmp
cli
loopne
cltd
sub
ds
outsl
or
jge
std
jbe
xor
in
jnp
daa
daa
pop
clc
sbb
jmp
push
icebp
pop
and
aas
pushf
inc
pop
sub
lock
fstl
pop
mov
test
loope
inc
inc
add
shl
pusha
ljmp
inc
outsl
hlt
outsb
inc
rcrl
sub
stos
xor
int3
outsl
cld
ljmp
jns
arpl
pop
cwtl
mov
inc
adc
mov
cmp
dec
cmp
or
or
push
fidivrl
popl
mov
inc
lock
cli
ljmp
das
add
enter
pop
pop
repnz
sub
in
das
aas
xchg
movsl
dec
aam
push
lahf
xchg
add
lds
or
lcall
in
insl
aas
pop
je
sub
adc
inc
pop
cmp
fsts
push
add
call
xchg
popf
leave
gs
ljmp
test
jns
adcl
subl
mov
and
js
mov
mov
cltd
mov
cmp
gs
pop
pop
cmova
ljmp
add
adcb
out
push
clc
lret
pop
sbb
aas
push
call
and
inc
sbb
pop
cmp
adc
aad
add
pop
dec
ret
icebp
push
fadds
sbb
stc
add
mov
inc
cmp
imul
ss
adc
cmp
orl
pop
in
mov
adc
push
inc
and
mov
rcrb
fistpll
andl
ljmp
jmp
insl
and
je
cli
ljmp
dec
lods
pop
cmove
dec
inc
movsl
add
push
out
movsl
jmp
inc
ret
push
jno
pusha
add
je
int3
mov
adc
das
inc
sub
jg
test
pushf
dec
stos
loopne
js
and
iret
decl
lods
clc
sub
mov
xor
jg
rclb
sbb
inc
inc
or
test
mov
mov
call
or
xchg
xchg
sbb
xor
mov
inc
mov
je
xorb
std
jg
nop
mov
sub
jp
xor
je
jle
push
ret
lock
sbb
or
and
pop
shlb
clc
shrb
jne
mov
ss
shrb
stos
in
dec
aas
aas
jnp
es
adcb
in
stos
add
ja
nop
dec
add
mov
dec
loope
popf
js
sahf
pop
mov
rcr
xor
sbb
push
inc
xor
sub
rclb
aaa
or
jno
jmp
push
sub
adc
xor
aas
mov
bnd
dec
insl
or
aam
dec
mov
push
cmp
inc
lock
fbstp
inc
popl
push
mov
pop
push
ljmp
cld
cmp
inc
jmp
fidivl
test
inc
mov
xor
jg
cmp
rol
imulb
adc
sbb
movb
pop
sbb
mov
pop
clc
into
add
inc
push
mov
movsb
jmp
xlat
hlt
push
and
aas
xchg
in
fs
rcrl
and
fimull
incl
jge
push
push
jg
rcrl
dec
sub
cld
or
loope
inc
add
or
lods
lcall
add
sahf
mov
jne
sub
push
popf
jg
mov
incl
fcomps
or
mov
mov
hlt
or
test
dec
cmp
xchg
sbb
push
push
loopne
imul
in
outsb
sti
pop
loope
nop
xorl
mov
xchg
jbe
lds
ds
data16
mov
mul
int
add
ja
mov
inc
frstor
cmc
enter
std
add
mov
jmp
or
inc
in
sub
add
add
dec
addl
pushf
and
xor
cld
bound
jns
sbb
adc
arpl
sbb
or
jbe
insl
test
fs
les
or
cmp
add
loopne
fwait
mov
out
pop
mov
xchg
mov
pop
jg
pop
cmpsl
scas
imul
mov
lock
xchg
popf
seto
jg
jno
mov
sbb
push
orb
dec
dec
inc
test
test
xor
lret
xor
lcall
lock
or
movsl
es
xchg
push
pop
sub
and
frndint
out
jp
loopne
rol
adc
mov
es
pushl
lcall
or
out
rcl
ljmp
jo
popf
add
push
mov
xchg
mov
dec
inc
aaa
add
add
sbb
cmpsb
mov
push
loopne
mov
sub
das
outsl
ret
icebp
push
mov
jg
jno
add
adc
lods
add
aad
jmp
gs
pop
dec
jne
loope
jle
test
xchg
test
cmp
std
incl
cmpb
push
and
add
sub
pushl
sbb
sbb
fadds
pop
fld
dec
sbb
faddl
mov
pushl
shr
aad
pop
add
popf
lods
jecxz
sbb
pop
clc
in
lcall
mov
mov
and
lret
loop
icebp
insb
inc
pop
xchg
jae
adcl
js
inc
js
jnp
mov
icebp
test
std
mov
jg
add
jne
add
aas
push
fiadds
sti
out
mov
xchg
roll
jbe
sbb
mov
adc
mov
cmp
stos
mov
cld
das
add
xor
xchg
mov
mov
add
mov
cmpsb
add
mov
xchg
aam
aas
xchg
xchg
mov
mov
mov
cltd
jns
lcall
and
gs
pop
insb
jns,pn
sub
fcomps
fucom
out
iret
ret
xor
add
icebp
pop
out
pop
outsb
push
adc
mov
push
daa
loope
cmp
adc
push
dec
subb
add
addb
and
push
clc
and
int3
decb
cmc
sahf
stos
cld
call
rolb
sbb
pop
pop
test
nop
push
decb
jbe
or
and
andb
xor
addl
addb
in
and
icebp
add
orb
stos
fcompl
mov
xchg
repz
jmp
mov
test
nop
aad
inc
repnz
or
sub
loop
mov
jne
mov
dec
in
sbb
and
pop
xor
add
sbb
xchg
out
mov
or
add
aas
ret
lea
insl
inc
adc
cmp
stos
add
enter
jmp
cwtl
add
jbe
or
int3
add
adc
pop
and
in
fcoms
test
inc
and
xor
cwtl
pop
js
imul
and
xor
jp
aas
call
sub
movsl
xchg
aas
jae
and
stc
mov
shrl
xchg
mov
xchg
jle
pop
scas
pop
aas
sbbb
lea
lock
test
mov
test
or
scas
mov
in
aad
jbe
xchg
push
push
stos
or
repz
inc
subb
cmc
mov
cmpsl
rcll
aaa
push
or
add
adc
add
inc
jg
icebp
cmp
es
imul
pusha
jnp
jl
adc
ret
repz
jl
pop
dec
dec
and
out
xor
daa
ret
lcall
cs
push
in
inc
push
inc
jns
pop
jns
adc
mov
jecxz
or
js
aas
pop
cmpl
mov
mov
scas
xor
xchg
jl
inc
add
or
push
ret
clc
leave
inc
enter
outsl
mov
add
popa
stos
sahf
mov
and
cs
mov
adc
pop
pop
cmpsl
in
call
ja
andb
dec
test
aad
arpl
sub
inc
xchg
mov
pop
jmp
addr16
inc
jne
pusha
sbbl
in
adc
scas
popf
dec
pop
sbb
pop
jmp
xchg
sbb
mov
inc
or
add
mov
lcall
mov
fsubs
rcl
test
fildl
mov
enter
xchg
test
clc
fstpt
mov
sbb
add
int
cmp
or
cwtl
incb
add
shll
insl
insb
fiadds
xchg
mov
loop
fucomi
out
les
testb
pop
xchg
mov
andl
das
fadds
cld
aas
mov
mov
pusha
mov
add
xchg
push
js
push
into
int3
cs
loopne
sub
test
jno
hlt
push
or
int
rolb
je
js
popf
sbb
cld
shr
les
daa
push
push
movsb
pushw
jbe
xchg
adc
mov
jmp
xor
jnp
lret
xchg
jecxz
inc
fbstp
leave
lods
add
xchg
out
mov
xor
pop
jns
sub
and
inc
int
loopne
std
pop
hlt
addr16
push
push
fisttpll
cmc
sbb
insl
mov
arpl
ret
cmp
jg
idivb
jno
in
mov
cmp
cmpsb
nop
aad
mov
lods
fmull
stos
ja
add
scas
loopne,pn
insl
add
pop
push
js
pop
xchg
sti
insb
jne
jmp
outsb
aad
push
or
xchg
popa
or
cmpsl
or
jo
inc
jno
jg
addr16
repnz
mov
inc
xor
jmp
scas
lret
mov
dec
inc
jg
sbb
pop
lahf
cld
mov
cmp
xchg
inc
or
xchg
lock
in
addr16
fs
and
mov
loopne
mov
aaa
addr16
test
mov
add
mov
adc
mov
and
jle,pn
cmp
sub
lods
xchg
addr16
pop
xchg
cltd
sbb
imull
int3
sbb
push
cmp
loope
add
mov
jg
loop
pop
pop
add
cld
es
pop
stos
popf
and
cli
in
jmp
fdivp
and
add
sbbb
push
add
icebp
xchg
sbb
push
aas
jg
mov
popa
push
push
mov
cmp
and
push
imul
hlt
je
cmp
add
pop
xchg
pop
test
cmp
and
in
outsl
lods
loop,pn
cmp
fists
ret
or
or
fbld
fcomps
aad
shll
sbb
mov
lock
add
cmpsl
jno,pt
clc
add
or
imul
jbe
xor
cmp
int
inc
sub
mov
inc
jecxz
jno
or
push
or
out
push
popa
inc
ss
dec
cltd
pop
bound
dec
pop
adc
inc
sub
add
inc
in
mov
lret
xor
add
inc
ficomps
add
iret
aam
add
mov
aaa
xchg
inc
cli
aas
lahf
insb
call
shlb
mov
adc
loope
popa
outsl
cmpsb
das
dec
push
pop
sbb
mov
nop
or
and
ficoms
rorl
adc
or
adc
or
or
or
pop
arpl
rcrl
leave
lods
lods
test
out
fs
mov
sbb
mov
sub
add
cmpsb
inc
test
xchg
sbb
mov
aas
jg
fldl
andl
mov
jl
sarb
or
arpl
and
stos
xchg
addr16
cmp
sbb
or
js
outsb
jns
jle
addr16
mov
sub
fst
sbb
mov
inc
add
bound
xor
mov
dec
test
nop
pop
cli
inc
pop
in
rolb
inc
xlat
cmp
scas
fucomp
push
or
dec
incl
inc
cli
mov
cs
mov
imul
push
mov
clc
pop
ret
arpl
pop
mov
test
push
cs
inc
cmp
adc
imul
dec
mov
fsubrs
jle
test
out
in
aas
push
push
push
pop
gs
test
adc
cwtl
pop
stos
add
push
addr16
lods
sbb
cmp
jl
sbb
lock
adc
or
loope
add
add
mov
aad
mov
ljmp
mov
das
push
sbb
nop
sub
das
dec
fwait
neg
cmp
jae
xlat
lret
cmpsb
mov
stos
ret
xlat
das
mov
out
and
or
movsb
adc
sub
fs
cmpb
push
xchg
cmp
mov
xor
insb
xchg
pop
pusha
repz
adcl
movsl
add
cwtl
inc
je
xchg
mov
loopne
push
jge
out
sub
cmp
in
lock
inc
or
dec
jo
bound
cld
out
fisubrl
nop
xor
ds
sub
nop
mov
add
add
push
sub
dec
and
mov
ja
mov
repz
lds
xor
push
pushl
js
and
stos
inc
mov
mov
sbbl
xchg
jno
and
filds
ljmp
dec
push
data16
aaa
ss
sbb
repz
and
pop
ja
pop
dec
xor
insb
push
loope
add
sub
inc
bound
mov
mov
or
lcall
lds
sub
fsubrs
sbb
xorb
or
cmpl
push
mov
sbb
stc
sqrtps
add
popa
jp
push
loopne
push
and
adcb
pop
out
mov
xor
divb
stos
sub
or
icebp
adcl
test
push
cmpl
fwait
xchg
loopne
mov
icebp
sbb
sar
clts
or
int3
inc
inc
stos
adc
outsl
and
sub
jle
cmp
mov
dec
fsubl
mov
or
loope
mov
push
das
push
lock
clc
popa
aas
imul
lds
pop
xor
xchg
mov
push
add
mov
inc
push
lahf
faddl
ss
shll
fwait
mov
in
push
enter
rclb
or
xor
xchg
push
push
test
jnp
push
mov
inc
xor
rcr
mov
mov
or
mov
out
or
add
jecxz
cmpxchg
sbb
cwtl
adc
inc
sbb
cmp
mov
loopne
stc
mov
mov
mov
sub
cmp
fiaddl
cmp
pop
add
add
test
jb
je
mull
jae
clc
mov
pop
lret
test
scas
pushf
and
adcl
push
mov
inc
enter
imul
test
lea
pushf
stos
or
xchg
push
fcoml
inc
clc
and
bnd
pop
mov
pop
pop
push
push
mov
dec
jno
les
jo
fcomps
add
loopne
sub
mov
xchg
cmp
mov
inc
cmp
mov
les
outsl
sbb
adc
in
pop
pop
filds
lcall
mov
push
mov
out
rolb
cmp
adc
jo
pop
and
inc
cld
mov
add
lods
in
lret
cmp
gs
adc
pop
inc
pop
jge
les
pop
adcb
mov
les
inc
push
jmp
outsb
mov
pop
mov
sub
mov
add
mov
mov
in
int
dec
daa
test
ret
nop
out
addb
mov
jns
outsb
pop
add
aam
pop
lret
sbb
and
or
aam
add
dec
mov
xor
ret
pop
sub
inc
adc
stc
cmp
je
gs
rorl
add
mov
inc
shl
ja
sti
fwait
xchg
in
xor
andl
test
enter
push
fdiv
and
ret
std
das
push
loop
or
xchg
ret
jecxz
add
jbe
and
jl
cmp
dec
dec
push
xor
in
dec
test
add
rclb
or
xor
sub
test
cmp
mov
jmp
pop
mov
or
enter
mov
js
push
test
pop
je
and
ret
das
push
or
call
movsb
testb
cld
movsb
outsl
aam
jl
fs
dec
loope
call
andl
and
push
add
pusha
imul
sub
mov
sarl
ret
into
insb
push
and
jns
lcall
fisubrl
sbb
out
fwait
bound
rol
sub
add
cmpsb
push
addl
or
adc
push
inc
push
inc
or
inc
or
pop
inc
jno
adc
or
movsl
xor
push
mov
jbe
sbb
mov
inc
jl
aad
lods
xchg
pop
fs
sub
test
mov
push
enter
addb
cmp
add
cmp
stos
inc
mov
push
ljmp
dec
dec
and
nop
fs
xor
fdivp
movsb
mov
xchg
add
add
xchg
xchg
mov
xchg
jecxz
add
xchg
push
scas
daa
jl
add
rorb
pop
dec
stos
cli
std
ljmp
inc
push
clc
pop
cmpsl
add
xchg
xorl
cltd
push
pushf
scas
loope
adc
arpl
sub
cmc
lds
ds
mov
outsl
adc
movsl
nop
inc
jns
push
lods
insb
test
jg
cltd
cmp
and
fsts
xor
xor
sbb
push
cli
inc
int3
and
aaa
mov
or
inc
xchg
fwait
inc
mov
fiaddl
shlb
test
pop
loop
mov
jmp
cld
sbb
xor
inc
popa
ss
leave
test
js
adc
and
mov
stc
int
add
adc
or
dec
push
movsl
add
fsubl
pop
loopne
mov
cmpsl
and
incb
pop
pop
push
ficomps
sub
lret
int
xlat
js
or
mov
jl
add
xorl
mov
mov
jae
inc
jge
subb
outsl
inc
mov
xorb
and
push
sahf
cwtl
lods
faddl
fucomip
lock
in
xor
or
cmp
add
insb
loopne
jecxz
ret
mov
xor
jnp
fistpl
jb
pusha
arpl
xchg
mov
mov
loope
xchg
pusha
cwtl
mov
inc
jb
mov
outsb
or
testb
mov
or
and
jge
adc
mov
adc
pop
pusha
jno
test
outsl
lock
test
les
decl
daa
cmp
ret
ret
and
aad
mov
jmp
cwtl
dec
daa
push
mov
mov
sbb
and
aaa
and
outsl
cmc
add
fsubp
cs
push
test
adc
mov
popf
jno
mov
mov
sub
popf
add
adc
cltd
stos
cmp
lock
loop
cmp
pushf
xrelease
rclb
jge
xchg
add
jg
sub
add
js
push
outsl
mov
xor
out
jl
inc
int3
inc
loop
cmpsb
jo
adcl
dec
inc
mov
sub
add
adc
inc
pushf
cmp
jg
or
mov
xchg
and
dec
jecxz
scas
jae
nop
test
xor
pusha
inc
sahf
push
mov
jg
addb
inc
fsts
mov
stc
or
jo
xchg
xchg
fists
loop
ret
adc
sbbl
mov
shlb
mulb
adc
xchg
ror
fimuls
pop
sbb
mov
xchg
ljmp
xchg
pop
arpl
mov
imul
mov
hlt
add
out
mov
mov
ss
es
pusha
mov
add
ljmp
icebp
test
mov
mov
js
xor
pop
lods
lahf
sbb
rclb
mov
inc
adc
adc
xor
rorl
lret
add
add
pop
xor
aas
rcl
cltd
push
mov
insb
fdiv
aas
test
mov
or
inc
push
mov
and
int3
fcmovb
push
inc
iret
faddl
and
outsb
call
lahf
push
lods
add
push
inc
add
xlat
mov
sub
and
out
and
ds
push
mov
add
push
outsl
testl
fstpl
inc
incb
les
out
inc
jae
pop
xchg
and
cmp
dec
pop
add
stc
xlat
push
stos
movsl
ret
scas
dec
jge
inc
or
cltd
xchg
inc
mov
enter
roll
pop
mov
and
mov
gs
out
enter
pop
and
mov
push
cmovp
and
dec
orb
cmp
push
pop
sub
and
adc
pop
fldl
jle
cmp
outsl
push
dec
fcomps
lret
dec
mov
pop
in
sarl
cmpsl
sub
leave
mov
inc
ss
ret
xor
test
push
mov
sub
sbb
jg
pop
adc
dec
or
mov
and
add
and
sub
and
repz
lcall
sbb
add
es
call
xchg
aam
fwait
sarl
and
cs
and
dec
lock
cld
and
push
je
push
imul
popa
mov
repnz
and
aam
add
sbb
nop
rol
imul
dec
or
inc
cmc
sar
mov
cmpsb
mov
dec
orl
xchg
and
lock
cld
xchg
or
je
pop
xchg
dec
mov
mov
pop
loop
xor
sbb
aas
pop
pop
xor
inc
or
adc
push
daa
add
add
jae
repnz
ds
mov
movsl
add
iret
clc
adc
add
in
inc
jmp
push
fidivs
adc
push
or
xchg
lock
dec
inc
iret
in
daa
dec
aas
ret
cltd
inc
mov
or
pushl
mov
pusha
cmp
popa
jp
jg
sbb
inc
xchg
adc
outsl
inc
add
push
jl
and
dec
sbb
enter
pop
cltd
inc
add
jl
cmp
xor
xor
inc
stc
cmc
inc
loopne
pop
add
mov
pushf
loope
or
mov
add
inc
inc
xchg
dec
in
pop
jp
jmp
nop
push
leave
test
dec
js
call
sub
cmp
mov
lods
add
leave
lret
fcoms
adc
and
mov
and
mov
adc
inc
inc
add
cld
cmpsl
daa
xchg
fistpll
dec
cli
imul
push
je
enter
sbb
scas
sub
jo
push
mov
popa
push
inc
pop
shll
nop
pop
call
in
incl
inc
nop
or
jb
jp
adc
pop
push
cmp
xchg
pushf
adc
inc
jo
pop
xchg
aas
rcr
mov
daa
xor
daa
cmp
je
jno
loope
sub
mov
cld
xchg
orb
mov
jae
jmp
aam
ja
sbb
inc
cli
fnsave
jae
push
sarl
add
push
mov
or
das
jg
add
sub
loopne
dec
mov
pop
push
or
adc
sbb
ret
loop
cld
and
outsb
and
mov
adc
add
hlt
mov
mov
rcrb
push
ds
jmp
dec
mov
shrb
xor
enter
pop
pop
lcall
dec
mov
icebp
mov
test
js
sbb
pop
mov
stc
inc
lret
scas
test
mov
fidivl
lds
mov
inc
add
push
daa
mov
out
xchg
or
mov
in
fs
inc
in
inc
add
or
pusha
pop
sti
fidivrl
pusha
fbld
xor
xchg
mov
jb
push
push
add
in
push
mov
mov
inc
test
add
test
xor
insb
aas
shlb
pop
repnz
pop
in
icebp
sbbb
je
mov
cmp
fistl
xchg
or
int3
or
cmpb
or
cld
inc
pusha
fsub
dec
das
cld
mov
jp
mov
ss
sub
ret
inc
cmp
addb
adc
test
sahf
mov
xchg
xor
cmp
inc
popf
arpl
xchg
fiadds
clc
in
lods
push
inc
out
mov
mov
sub
cmpl
and
cmp
inc
jl
lods
sbb
and
mov
inc
pop
clc
pusha
jno
int
repnz
rol
repnz
add
ljmp
pushf
aas
ret
pop
mov
jle
clc
jo
sbb
xchg
popf
rcr
gs
xchg
rcll
rcll
leave
aas
lcall
jecxz
insl
dec
inc
push
adc
dec
dec
js
inc
dec
les
push
cld
mov
andb
sub
je
inc
repnz
adc
jmp
loope
mov
cmp
mull
jne
addb
hlt
dec
xor
lcall
sbb
inc
lea
mov
add
mov
jnp
cmp
push
sub
ret
inc
mov
sub
outsb
sbb
jbe
testl
icebp
jno
aaa
ja
sbb
dec
int
push
mov
add
shll
cmp
cmc
or
jge
and
or
jl
adc
mov
jmp
dec
and
cmovbe
add
mov
mov
push
iret
push
insl
jmp
lret
jl
pop
mov
inc
xchg
in
popa
lss
push
add
cmp
jmp
add
mov
mov
nop
stc
inc
inc
subps
sbb
loopne
pop
mov
push
daa
stc
xchg
adc
mov
sub
loopne
or
aaa
out
dec
loopne
pop
dec
imul
and
xor
push
pusha
jno
or
mov
cmc
ret
lahf
movsb
dec
je
fildll
ja
inc
addb
fisttps
adc
mov
push
pop
cmp
loopne
pop
rorb
add
incl
mov
sub
stos
push
ds
xchg
aaa
and
jle
stc
imul
mov
pop
or
or
bound
bound
les
push
add
cmp
ret
loop
push
aad
add
mov
jle
cmp
loopne
cmc
and
or
jmp
aas
lahf
testb
adcb
pop
sbb
xchg
push
test
or
sub
jae
sbb
adc
push
mov
or
lock
repnz
pop
sbb
sbb
add
push
pop
pop
shl
nop
stos
jno
test
aad
pop
inc
cli
push
push
add
cmp
jo
mov
sahf
xchg
out
nop
add
push
sbb
sti
push
ret
jg
pop
mov
sti
push
loopne
add
pop
push
sbb
sbb
xor
inc
mov
enter
cmp
cltd
sub
rcrb
fwait
sub
mov
sbb
mov
rcll
mov
mov
mov
loope
fiadds
cmp
pop
cwtl
push
and
je
data16
out
adc
outsl
add
std
xlat
nop
dec
xchg
jnp
inc
mov
mov
lds
fwait
arpl
rcrl
and
jne
sub
pop
add
and
clc
into
pcmpgtb
ds
and
or
xor
and
insb
mov
leave
popf
adc
ret
cld
aad
out
jle
ja
stc
das
imul
aad
mov
test
pop
dec
push
xor
inc
adc
sub
loop
dec
inc
jnp
sub
sbb
push
jle
mov
inc
xor
inc
push
inc
jl
jge
test
add
inc
push
mov
lahf
pop
repz
jg
sbb
icebp
ret
add
cmpl
mov
inc
dec
jbe
jb
inc
movsb
and
mov
mov
sbb
mov
push
dec
or
jge
xor
lret
leave
cli
imul
mov
insb
in
or
jmp
cmc
sub
mov
subl
jp
mov
fwait
cmp
lock
adcl
push
les
adc
fcmovne
jecxz
rorb
movsb
adc
clc
daa
or
add
loopne
aad
xor
std
sbb
aas
push
loopne
xchg
add
insb
pop
jle
jp
inc
ja
adc
sbb
mov
loopne
aas
js
jbe
xor
sub
mov
clc
inc
pop
dec
addr16
cli
push
cmpsl
sbb
and
shl
and
fildll
add
loope
fildll
cmp
mov
mov
or
leave
data16
jns
pop
inc
test
jg
push
aam
repz
testb
mov
mov
insb
adc
xchg
pusha
xchg
push
xchg
pop
cwtl
xchg
xchg
inc
push
xor
fsubrl
enter
mov
jp
imul
and
xor
outsb
lcall
decb
xchg
clc
add
andl
or
xor
adc
fldt
dec
mov
stos
pop
in
and
push
shlb
rcrb
nop
pop
mov
aam
cmp
std
loope
ljmp
pop
adc
and
in
and
dec
call
push
notrack
sub
mov
addb
xchg
rcll
lahf
push
push
push
sub
addr16
sbb
push
enter
or
shll
sbb
add
lods
mov
dec
xchg
sub
inc
add
repz
and
push
mov
pop
aaa
lods
or
aad
add
mov
jl
fsubs
jmp
jmp
clc
into
mov
cmp
notb
xchg
and
xor
cwtl
mov
sbb
je
outsb
clc
jl
sbb
lret
bound
mov
int3
les
cmp
pop
clc
add
ret
mov
mov
jbe
repz
mov
aas
cli
les
in
adc
imul
fdiv
dec
pop
and
sub
cs
sub
mov
push
dec
add
add
mov
jb
enter
mov
xchg
out
leave
mov
rcrb
cmc
stos
jmp
les
push
xor
push
add
jo
sub
out
and
cld
rorl
jp
mov
inc
test
add
sub
adc
repnz
je
test
or
xor
les
loopne
jb
and
jmp
jne
negb
or
call
fsubp
sbb
mov
aas
shll
popa
and
stos
cs
add
bound
mov
incl
test
or
push
push
xchg
in
sbb
mov
repz
out
outsl
ret
pop
in
repz
push
ljmp
jo,pt
mov
mov
movsb
sbb
xchg
jo
mov
clc
aas
into
ss
das
lret
dec
mov
add
dec
xor
and
aaa
push
sarl
dec
lcall
nop
loop
adc
xor
xchg
mov
push
xchg
fnstcw
inc
add
xchg
mov
sbb
push
insb
lods
fs
and
cs
mov
inc
shl
add
dec
mov
gs
add
dec
adc
mov
push
lods
test
repnz
jg
fdivrs
push
add
stos
out
sbb
daa
xor
jp
rcrb
add
adc
stc
sub
loop
clc
add
adc
loopne
jg
gs
mov
mov
or
fs
cmpb
jmp
mov
lcall
cld
mov
mov
or
and
jo
mov
iret
add
popf
mov
std
add
daa
cltd
in
add
adc
push
movsb
cmp
inc
mov
mov
ljmp
shll
push
movb
orb
imul
pop
orl
pop
dec
orb
js
lret
mov
icebp
mov
sbb
stos
add
xchg
iret
out
jb
xor
mov
daa
cmp
inc
xor
inc
lcall
push
push
sbb
pushl
ljmp
aam
ficoms
push
hlt
ficoms
cmp
mov
and
jae
pop
in
inc
or
popf
nop
dec
add
add
jle
inc
cltd
repz
enter
sahf
inc
inc
cltd
lea
sub
or
stos
add
rcrl
jl
scas
add
ret
sti
and
inc
and
dec
lock
jns
pop
js
loope
sarl
test
or
dec
pop
adc
aam
mov
lock
movsb
add
and
jb
orl
jecxz
xor
pop
sub
jle
sbb
aad
insl
loope
jae
aad
loope
push
leave
sbbb
jo
xchg
outsb
jo
icebp
arpl
jo
adc
or
xchg
mov
jecxz
mov
fidivrl
decb
sub
inc
inc
fistps
pop
int
xor
push
test
dec
add
shr
mov
data16
push
and
add
jbe
pusha
jl
jg
add
icebp
es
mov
ljmp
mov
repz
inc
outsl
cmpsb
aaa
loope
fwait
mov
inc
aad
inc
xor
push
shrl
fdivl
test
adc
dec
jbe
mov
rcrb
mov
stos
ret
inc
ss
cltd
xor
call
scas
add
lahf
xchg
mov
push
fsubrl
mov
mov
out
sub
fmul
push
addr16
pop
adc
rol
lods
roll
subl
jo
leave
imul
and
add
repz
mov
add
shlb
inc
fildl
add
jge
ret
xchg
test
orl
sbb
xchg
xor
lds
pop
add
je
sub
adc
push
inc
add
pusha
shrl
adc
lret
clc
enter
sbb
int3
adc
sub
fiadds
clc
adc
fnstcw
iret
clc
lock
cmp
popf
cltd
cmp
push
mov
mov
pop
mov
or
ja
pusha
test
fnstenv
jge
jg
fisubrl
adc
fadds
in
jo
stc
add
cmpsb
or
dec
xlat
or
pop
insb
adc
imul
mov
add
test
fadds
mov
out
aam
hlt
mov
cmp
mov
imul
popa
shl
add
mov
dec
inc
jmp
mov
xchg
sub
into
cmp
cs
or
addl
jmp
and
int
add
jnp
cmp
or
leave
or
push
cmp
add
add
dec
movsb
aas
xor
lahf
mov
mov
pop
loope
lret
rorl
jb
add
aaa
or
dec
cmp
and
dec
pop
lock
cmpsb
bound
inc
out
imul
cli
sub
scas
fcomps
mov
xchg
push
add
push
bound
add
or
loope
test
cmpsl
test
enter
iret
in
xchg
shr
push
fnstenv
mov
stc
iret
add
mov
sbbl
jp
mov
movsb
call
movsl
addl
mov
scas
sbb
adc
clc
ds
add
sub
mov
or
andl
incb
lods
lea
pop
mov
fidivrs
loope
xlat
js
xlat
dec
and
inc
and
loopne
xchg
mov
das
cli
ljmp
arpl
jp
cmpsb
mov
jle
push
add
push
pushf
push
bswap
scas
js
xlat
pop
mov
mov
lret
cmpsb
push
mov
inc
or
outsb
lods
jae
mov
jmp
nop
pop
mov
xchg
cltd
popf
adc
scas
xchg
push
mov
test
out
xlat
or
mov
pop
cli
or
mov
xor
inc
sbb
lds
xchg
loopne
jne
roll
push
in
mov
jns
or
jo
loop
mov
sub
stc
jle
repnz
ljmp
enter
es
jmp
inc
mov
in
pop
push
icebp
dec
adc
jge
ss
xor
cmp
repnz
pusha
ss
adc
push
jnp
es
sbb
and
adc
dec
adc
pop
incb
mov
jp
cmp
xchg
insl
adc
test
sbb
or
pop
rcrb
mov
sbb
pop
vxorps
lock
inc
outsb
add
xchg
daa
pop
xchg
add
into
xchg
cmp
int3
sub
addl
outsb
loope
sahf
filds
test
in
insb
nop
cmp
sarb
adc
mov
add
inc
adc
faddl
les
inc
pop
cmp
push
std
sub
jbe
aaa
cmpsb
subps
push
dec
or
jge
and
roll
or
or
and
cmpsl
add
push
sub
xor
stos
sbb
xchg
inc
in
mov
fnstcw
jnp
xor
adc
popa
mov
jp
adc
lcall
cld
or
pop
pop
dec
fldl
cld
test
arpl
int3
pop
rcrl
out
mov
jb
cwtl
mov
push
int3
pop
ss
mov
insb
iret
stc
into
ljmp
rcr
dec
add
popa
push
insb
pop
fbld
cltd
mov
fldcw
cmp
inc
cld
rcrl
cmc
and
pusha
add
hlt
ljmp
pop
push
cld
mov
xor
sbb
repnz
cltd
mov
dec
fisubrs
xchg
loop
add
int
cs
in
push
dec
add
in
aaa
xor
leave
lret
inc
push
lret
loope
mov
add
pop
mov
pop
jg
xor
jns
rol
lock
outsb
and
stos
cli
decl
sub
add
mov
les
aas
sbb
and
cs
mov
xchg
cld
push
cld
jmp
ret
insb
stos
sbb
mov
mov
out
shlb
sti
call
jo
mov
mov
pop
lods
adc
std
out
and
insb
invd
test
push
ret
clc
pop
lret
jb
lock
loope
out
cmp
and
cmp
movsl
push
or
jne
pop
inc
int
sti
ljmp
push
mov
pusha
mov
push
sbb
loopne
pop
bound
loope
movl
leave
mov
xchg
test
mov
lahf
imul
lock
push
iret
pop
jb
push
add
es
adc
jg
mov
leave
pushf
jge
adc
incb
cmc
jo
sbb
mov
sub
inc
scas
je
jg
pop
pop
inc
adc
pop
xchg
sub
lcall
aad
lock
add
cmp
mov
hlt
adc
incl
jge
ffreep
je
rolb
adc
lods
nop
jb
mov
cmpsl
mov
cmp
push
leave
cmp
int
sub
mov
add
addr16
mov
cmc
bound
movsl
jg
out
or
pushf
pop
insl
sbb
push
test
adc
sbb
or
pop
ljmp
sub
adc
mov
call
fxam
mov
or
das
xor
add
into
test
mov
loopne
add
jne
lds
int3
or
jg
shrl
mov
adc
dec
bound
cmp
cmp
jne
pusha
cmc
xorb
pop
sbb
jl
xchg
ror
adc
xor
xchg
addr16
aaa
ret
jp
or
dec
pop
mov
std
das
xchg
js
dec
jle
dec
lods
ret
dec
jecxz
pop
ret
es
adc
sub
cld
ljmp
sbb
aaa
and
add
pop
or
mov
jae
ljmp
mov
imul
out
aas
mov
pop
clc
cli
sti
pushf
cmp
add
mov
aaa
or
sub
pop
call
or
hlt
push
xchg
and
in
into
out
jmp
lea
out
mov
xchg
mov
cmp
pushf
adc
cld
mov
leave
arpl
nop
pop
decl
dec
push
and
dec
data16
xchg
in
jo
mov
enter
inc
fidivl
int
mov
mov
das
jno
sbb
fcomip
ljmp
rcrb
pop
jg
jecxz
and
jl
std
adc
or
ja
loop
jbe
int3
es
inc
mov
in
flds
xchg
subb
xchg
bound
lret
xchg
sub
lret
sarb
pop
mov
aam
out
add
push
sar
cmp
ds
push
lcall
call
mov
mov
adc
inc
mov
cmc
jbe
push
push
sbb
mov
push
mov
cmp
jo
sub
insb
and
add
outsl
mov
mov
dec
stos
push
sbb
aas
jle
mov
stc
lock
adcb
lods
sahf
leave
adc
mov
jp
jg
icebp
and
stc
cwtl
push
inc
dec
push
mov
fwait
cltd
icebp
mov
fildll
or
adc
mov
inc
ljmp
ss
in
lret
mov
or
cltd
mov
inc
pusha
jne
inc
or
jg
jl
fs
pushf
inc
add
mov
pop
xor
add
mov
lcall
data16
roll
test
or
inc
push
adc
cmc
inc
push
inc
pusha
jle
sbbb
popf
mov
dec
aam
rclb
pop
std
sub
sti
rol
or
mov
jp
pop
sbbl
ljmp
mov
rclb
iret
lods
mov
arpl
adc
shll
out
and
call
lahf
xchg
pop
mov
imul
lock
push
mov
int
sub
mov
xchg
nop
cld
das
cld
and
xchg
cmc
mov
test
and
sbb
jecxz
sbb
jg
mov
enter
sbb
roll
shlb
ja
add
loope
jb
sub
mov
pusha
arpl
aaa
lods
mov
loop
lock
shrb
ljmp
pop
cmp
push
loopne
add
sub
lods
cld
or
cmp
xchg
dec
aaa
xor
ss
adc
xor
jl
icebp
jbe
push
push
cmpsb
add
es
inc
inc
dec
je
cltd
mov
lds
cmpsl
push
rolb
inc
cld
cmp
lahf
mov
add
sub
inc
hlt
dec
pop
jecxz
xchg
pusha
ja
jp
cmp
ljmp
lea
loope
loopne
ret
xlat
stos
pop
mov
jnp
xchg
je
in
add
rolb
jle
nop
fistpl
adc
ja
sbb
mov
aad
rcr
and
bound
sar
mov
idiv
pop
mov
mov
cmpsb
cmp
xor
jo
jg
sub
add
jnp
imul
nop
inc
mov
aas
shlb
gs
add
ror
mov
adc
xchg
jecxz
into
cmpsb
inc
pop
add
xchg
xchg
mov
insl
mov
sti
into
jecxz
xchg
push
sbbb
cmovg
xor
mov
mov
jae
push
ret
sbb
rorb
subl
out
cmp
jo
adc
jg
pop
shlb
push
fbstp
inc
mulb
leave
out
add
mov
jecxz
xor
mov
push
cmp
inc
sbb
jg
sub
fdivrl
inc
cmpsl
int
mov
adc
jae
aam
scas
imul
xchg
loopne
mov
cld
cmpb
jo
je
cltd
dec
sub
mov
mov
xor
sub
pop
icebp
jecxz
icebp
xchg
in
lret
push
cmp
fcmovnb
xchg
shlb
lods
jb
sub
sub
ja
jbe
dec
adc
xor
jge
sbb
xchg
cmp
xchg
push
or
and
adc
out
je
dec
push
out
adc
pop
mov
out
jno
stos
pushf
es
bound
or
lock
test
sbb
movsl
rcl
clc
sahf
jecxz
ljmp
inc
inc
jbe
push
sti
pushf
cli
adc
ss
mov
or
pop
adc
pop
decl
mov
subb
push
lods
les
lret
mov
lahf
push
sbb
hlt
xor
in
movl
aas
rclb
subl
subb
les
dec
lcall
scas
add
in
push
movsb
or
add
std
outsb
add
xor
dec
pop
adc
call
imul
add
xor
lcall
inc
cmc
pop
dec
inc
push
mov
lcall
pop
jbe
pop
and
adc
loopne
imul
sbb
add
std
shl
and
das
add
pop
out
clc
repnz
filds
lock
fldt
lods
test
mov
mov
xchg
sbb
jp
xchg
subb
cwtl
adc
xchg
stc
jmp
inc
stos
inc
lret
sbb
cmpl
mov
push
or
aas
sahf
enter
arpl
or
mov
add
mov
mov
sub
std
sbb
sbb
es
pop
movsb
cmc
jecxz
ret
jmp
mov
lahf
sbb
jno
hlt
push
jge
ret
rcrb
in
je
or
or
and
andb
cmc
out
faddl
loope
sub
jle
leave
mov
sbb
mov
mov
jo
mov
outsl
lret
ljmp
add
lret
mov
or
icebp
inc
sti
decb
ret
fs
dec
jge
cld
nop
ret
hlt
aaa
lcall
sub
add
cmp
xor
out
pop
push
popf
sbb
in
lods
pop
fimull
inc
mov
cmpsl
in
inc
lcall
ret
dec
inc
or
mov
dec
leave
fistpl
inc
cltd
sub
lcall
hlt
add
dec
xchg
add
sub
stc
jg
adc
incl
jno
mov
push
pushf
inc
psadbw
clc
add
add
js
sub
jmp
add
lock
fbstp
sbb
or
hlt
mov
ret
cmp
push
jns
mov
add
mov
stos
push
les
and
enter
rorl
ret
cmp
push
mov
incb
rcrb
mov
test
ret
sbb
int
push
xor
dec
pusha
pop
mov
mov
idiv
adc
sbb
out
insl
and
cli
lahf
clc
fisubrl
pop
jne
sub
dec
sub
xchg
cld
lahf
cli
add
rolb
add
loopne
sbb
xchg
sbb
dec
aam
push
mov
pop
mov
cmp
add
inc
iret
xchg
jo
andb
sbb
or
pop
sbb
jg
lds
into
filds
xchg
add
pop
icebp
push
int3
roll
bound
mov
inc
insb
xchg
es
cli
add
rolb
mov
xchg
pop
lock
aaa
cltd
or
nop
jp
mov
pop
sub
les
clc
lcall
lcall
lea
dec
or
add
mov
push
mov
int3
incl
shlb
xor
add
test
ret
test
dec
mov
mov
dec
jg
sbb
imul
daa
into
cli
lcall
loope
mov
jb
imul
insl
repnz
add
dec
add
mov
loope
or
push
push
lds
and
es
ds
pusha
and
ljmp
cmp
xchg
pop
je
out
cwtl
sti
push
ljmp
push
pusha
bound
lret
daa
test
xchg
ss
add
xchg
das
les
pop
inc
rorb
fs
icebp
cmc
fstpt
inc
jle
ss
jmp
icebp
mov
or
mov
xchg
jp
stos
mov
cmp
sbb
mov
dec
ffree
cli
or
or
push
dec
jb
xor
sbb
or
inc
ljmp
add
stos
add
jecxz
in
xchg
jg
or
rol
add
sub
pop
xlat
mov
lea
dec
cmp
inc
mov
inc
push
bound
jae
pop
cmp
or
ljmp
cmp
clc
aas
or
daa
pop
fwait
call
repz
addr16
aad
bound
pop
or
mov
aaa
decl
xchg
loop
or
int
pop
mov
push
fwait
jg
cld
cmp
and
test
insl
loope
test
fsub
lahf
ret
cmp
adc
imulb
pop
jae
sub
adc
repz
push
jne
outsl
jb
pop
dec
cmp
add
movsb
push
add
repz
fsubrl
adc
addr16
push
cmp
push
push
xchg
stc
mov
lds
sub
aaa
popa
call
adc
jbe
push
sub
je
dec
sbb
ljmp
add
mov
in
xchg
and
jo
aad
jge
lret
add
mov
dec
cmp
sbb
loope
dec
mov
js
lock
pop
scas
aam
inc
cmp
lret
dec
sbb
dec
adc
push
outsb
adc
sbb
sub
lcall
pop
jmp
mov
mov
push
test
mov
pusha
cld
xor
pop
sub
adc
mov
fidivrl
jg
daa
lds
sub
mov
mov
pop
inc
or
in
and
push
xorb
mov
dec
enter
adc
cmpsl
mov
mov
mov
test
pop
inc
or
movsb
jg
jle
jge
push
inc
jle
testb
fwait
jmp
nop
push
sub
sti
push
mov
mov
into
out
idivb
pusha
mov
mov
jns
or
add
aaa
dec
iret
pushl
incl
mov
lods
aam
fcmove
gs
cwtl
dec
xlat
roll
inc
cmp
push
or
jp
je
ss
ja
and
clc
xor
jg
cmp
movsb
mov
scas
push
add
rcl
mov
fneni(8087
lds
mov
roll
int3
adc
icebp
jg
xchg
cmovp
pop
cli
mov
dec
and
pop
mov
mov
cmp
adc
inc
lods
addr16
or
nop
push
and
ret
xor
xor
adc
loope
in
and
mov
jo
loope
pop
push
into
notl
adc
std
aad
mov
dec
pusha
ljmp
mov
cmp
jbe
sub
sbb
mov
outsl
je
sbb
and
test
ja
out
sarl
inc
pop
add
jne
adc
loope
lods
lcall
dec
loope
rclb
pop
xor
pushl
lods
movsb
mov
test
cli
call
adc
xlat
dec
int3
add
lock
lret
adc
mov
outsl
xchg
lods
jg
jecxz
jp
stos
inc
mov
cmpl
inc
fidivrl
int3
push
push
stos
scas
incl
cwtl
add
add
and
xlat
scas
mov
mov
dec
std
call
inc
mov
mov
add
xor
pop
jg
cmc
neg
icebp
or
mov
mov
sub
cmp
mov
pop
lahf
and
sub
inc
iret
inc
je
cmp
outsb
xchg
mov
movsl
adc
test
cltd
gs
lahf
subb
mov
into
mov
xor
xor
xchg
fnstenv
pusha
push
inc
adc
sbb
mov
int3
out
nop
and
push
daa
cmp
rcl
cli
xchg
and
stc
fsubl
xor
outsl
xchg
aas
mov
inc
dec
in
and
leave
cmp
and
shrb
xbegin
or
inc
fdiv
inc
push
jecxz
add
nop
pop
jge
rcl
jo
aas
fsubr
xor
aad
fsubl
mov
xor
ja
dec
pop
sbbl
test
pop
add
jl
dec
lahf
movsl
ja
xor
jecxz
push
lahf
push
test
cmp
js
call
jle
loope
ret
pop
idivb
add
and
gs
pop
pop
xor
xchg
push
push
loope
xchg
lahf
inc
pusha
push
dec
repnz
xor
scas
add
xchg
mov
pusha
mov
addl
and
and
pop
fists
push
xchg
dec
pop
imul
mov
cmp
push
movsl
cmp
fstps
mov
js
add
shll
aad
mov
pop
pop
pop
repnz
arpl
sbb
jmp
mov
repnz
xor
loope
and
jl
mov
les
pusha
les
fsub
int
mov
cmp
iret
test
sbb
push
movsl
xchg
add
sbb
and
mov
pop
loope
xchg
cmpsb
jecxz
push
adcl
adc
jp
int
cmp
mov
arpl
adc
jg
push
pop
je
data16
rcrl
inc
inc
addl
jecxz
and
outsl
add
loop
sub
or
jecxz
xchg
cmp
or
addl
adc
jp
sbb
popa
pop
mov
mov
mov
repnz
mov
mov
cmp
pusha
pop
int
es
ljmp
add
or
flds
addb
xchg
lret
enter
in
push
xor
xchg
mov
mov
mov
fisttps
or
sub
dec
mov
scas
mov
ja
loopne
dec
fisttps
andl
aam
stos
add
lret
cld
inc
sub
fwait
sahf
in
out
sub
sub
gs
mov
leave
stc
cmc
test
mov
push
adc
dec
lds
mov
inc
in
and
nop
fiaddl
add
cmc
ss
adc
loopne
adc
out
pop
repnz
loop
or
cld
adc
loop
cmp
xor
and
scas
iret
jle
cli
pop
push
jo
push
pop
mov
xchg
test
ja
out
sti
add
and
fs
popa
and
mov
out
mov
mov
jns
mov
sbb
sbb
and
mov
sbb
xor
inc
mov
jns
inc
xchg
ret
jle
lock
pushf
xchg
and
dec
jae
mov
testl
cmp
rol
test
fdivrl
mov
mov
dec
mov
jl
mov
sub
sub
call
lahf
sub
jo
xchg
cmp
push
inc
repz
es
dec
negb
fadds
xchg
push
sbb
or
jnp
fisubl
lcall
add
fmuls
mov
scas
sahf
inc
and
mov
push
inc
leave
sbb
jns
test
dec
jae
sbb
xchg
jae
pop
std
pusha
jmp
push
lcall
push
scas
test
cmc
rcrb
sub
and
mov
inc
repz
cmp
in
lret
inc
or
xor
adc
sbb
xchg
pop
jno
inc
inc
inc
sub
fs
ret
and
and
cli
enter
test
test
sub
test
adc
repnz
pop
jo
es
out
pop
ljmp
js
mov
adc
cmp
rcll
jmp
mov
dec
add
lahf
ret
out
cmpb
jecxz
arpl
out
sbb
push
in
loopne
pop
repnz
dec
xor
adc
inc
add
mov
std
gs
xlat
aad
inc
jl
xor
popf
dec
or
jg
test
inc
inc
mov
sbb
shlb
pop
cmp
xchg
mov
inc
xlat
cmpsb
incb
mov
rorb
add
inc
icebp
ret
cvtpi2ps
add
incl
mov
sahf
lea
js
fadd
lahf
gs
pop
xchg
hlt
ret
and
mov
mov
mov
das
lahf
pop
sbb
jecxz
iret
dec
xchg
sbb
jns
and
jecxz
fs
bswap
cmpsl
push
jne
not
ja
dec
mov
fstps
push
outsl
lock
inc
ljmp
lret
aam
mov
add
push
mull
mov
in
or
sbb
gs
lret
mov
stos
ret
or
adc
out
push
add
in
xor
mov
pop
xor
je
xchg
aad
adc
mov
jecxz
lods
les
daa
iret
sbb
nop
leave
imul
lahf
test
and
sub
dec
in
lret
rcrb
dec
sub
lock
add
std
das
ret
xor
adc
inc
ja
lea
or
popa
mov
or
insl
add
pop
outsb
jle
push
mov
mov
rolb
fs
sbb
mov
arpl
push
lds
aam
clc
cmc
cmpsl
lret
test
lock
pop
mov
dec
add
pop
out
add
mov
adc
loop
jl
ret
dec
mov
and
daa
xchg
jo
hlt
add
stos
sbb
fcoms
into
or
fiaddl
add
int
cmp
push
js
mov
sbb
mull
and
or
out
and
jmp
inc
push
lret
pop
stos
mov
test
push
push
sbb
cmp
mov
popa
mov
mov
or
lods
dec
jl
mov
cmpsl
dec
ret
ds
mov
loopne
sub
mov
rorl
ljmp
mov
inc
paddw
pop
sarl
cli
enter
mov
ret
dec
fimuls
add
mov
sub
adc
leave
hlt
inc
cmp
inc
add
pop
cmpsb
jns
add
dec
xor
stc
or
imul
mov
or
cmc
rcr
in
xor
andb
dec
ret
jg
pusha
std
loope
mov
clc
je
cld
and
fwait
aas
push
dec
adc
xor
push
cwtl
sbb
stos
add
mov
adc
icebp
xchg
adc
sbb
push
in
or
xchg
aam
or
ret
jno
out
addr16
loop
dec
adc
add
dec
push
decb
mov
jge
aas
pop
adc
data16
enter
dec
lcall
fs
dec
cmpsb
inc
fdivrp
or
and
and
cmp
ret
out
repnz
mov
push
jg
dec
ss
dec
js
mov
stos
ljmp
sub
mov
ret
cmp
mov
je
clc
push
inc
lahf
adc
pop
bound
scas
fstl
add
jmp
dec
push
fistl
push
in
cltd
int
xchg
mov
int
cmp
jae
mov
sub
mov
add
dec
imul
mov
sub
repnz
ss
fisubrs
repnz
and
inc
test
fnstcw
add
or
gs
xchg
shrb
or
mov
sti
mov
mov
test
cld
push
pop
dec
test
shlb
xlat
cmp
cwtl
jb
jae
push
sbb
jl
sub
adc
dec
jl
inc
push
cmp
adc
movsl
push
frstor
call
stos
jne
js
loope
andb
loope
cltd
jmp
into
push
mov
cwtl
dec
pop
mov
jmp
cmc
pop
scas
fmull
or
test
push
xor
inc
sub
jns
and
enter
mov
cmp
xchg
xor
cmc
mov
push
rol
aas
add
pop
sti
add
cmp
jmp
dec
aad
imul
aas
sbb
jae
xchg
inc
fs
cld
dec
pop
or
mov
push
jno
push
popf
out
mov
out
popf
sbb
mov
mov
imul
dec
jp
test
out
andl
mov
adc
xor
and
push
add
jg
xchg
out
and
add
lds
test
cs
enter
cmp
mov
push
jnp
rcrb
out
add
sub
js
or
aaa
lea
es
push
ss
mov
clc
cli
scas
sub
stc
xchg
pop
mov
jbe
pusha
rcrb
jb
mov
xchg
test
cmp
fdivr
aaa
addb
inc
mov
rorl
les
rol
jne
mov
sbb
int3
iret
sub
icebp
out
add
in
sbb
jb
outsb
sbb
jp
add
icebp
pmulhw
and
jge
adc
cmc
jae
test
imul
or
or
dec
jg
scas
and
ret
lock
hlt
add
jp
les
pusha
sbb
mov
pop
test
sti
inc
aas
ljmp
or
mov
sbb
mov
sub
ret
jp
leave
cmp
cltd
mov
xchg
lea
mov
sub
mov
dec
pop
stc
lret
clc
jle
add
pushf
or
and
cmp
pop
cmp
sub
jbe
adc
xchg
dec
mov
outsl
faddl
mov
cmp
mov
jbe
and
push
xchg
sbb
lods
fistl
inc
mov
dec
mov
sub
mov
xor
mov
cmp
jge
negb
and
dec
repnz
stos
sbb
icebp
in
xchg
inc
adc
sahf
mov
jge
enter
loopne
dec
int
xor
and
adc
pushl
cwtl
adc
xor
adc
stos
out
xor
or
int
mov
fsubrs
addr16
sti
idivl
aaa
cwtl
popf
sahf
push
add
inc
aad
pushl
adc
shll
ret
cld
outsl
jno
add
fcoml
sbb
lcall
fcomps
jecxz
mov
in
je
clc
mov
js
cmp
ret
inc
or
xor
hlt
add
and
rolb
mov
mov
cli
mov
add
mov
jnp
fcoml
cmp
cs
inc
jg
fidivl
mov
pop
jae
negb
sub
jbe
mov
call
loop
ret
pop
insl
mov
mov
movsl
inc
sub
addr16
lock
push
cwtl
outsl
inc
icebp
dec
int3
cmpl
xorl
dec
adc
insb
bound
push
out
jg
pop
xchg
and
js
loope
push
jmp
xor
out
push
lock
push
and
jmp
out
movsb
xor
cmc
lods
jecxz
sbb
jp
cmp
and
add
sub
ja
outsl
jmp
sti
add
push
ret
cli
pushf
int3
sub
adc
jne
lcall
jp
rol
cli
lds
fdivs
jmp
jbe
mov
dec
xor
ss
adc
loop
cs
into
stos
adc
cmpsb
dec
inc
andb
push
cmpb
add
movsl
sbb
add
int
insb
insb
push
push
mov
stc
imul
popf
add
jb
and
shll
mov
xor
pop
jae
xor
pushf
push
js
addr16
andl
fcompl
lock
leave
iret
sub
or
out
adc
and
or
std
rcrb
shll
ret
and
or
xor
pop
and
mov
sbb
mov
sub
cs
test
xchg
scas
mov
cmp
fstl
icebp
out
nop
add
outsl
fs
mov
sbbb
lahf
movsl
ret
movsb
fiaddl
fucomi
sub
cli
int3
cmpsl
mov
ljmp
lret
cmp
sbb
add
fwait
outsb
mov
cld
mov
cmp
cwtl
mov
jmp
jmp
sti
lods
cmp
cwtl
mov
cld
dec
mov
xchg
fnstenv
mov
repz
inc
push
xor
adc
xchg
adc
or
int
in
lods
ds
xor
or
sbb
loope
adc
xchg
outsb
fdivrs
cld
ret
aaa
out
mov
xchg
sbb
cmp
and
call
add
add
pop
insb
add
jmp
mov
sub
pop
or
mov
arpl
jp
sub
pop
mov
call
ss
leave
cmp
inc
adc
or
jp
adc
fadd
dec
cmp
push
mov
shrb
pop
adc
jnp
pop
jl
inc
cmp
repnz
idiv
mov
hlt
pop
sub
push
inc
add
out
add
sbb
cmp
mov
out
int
dec
cmpb
xor
and
aaa
and
push
add
into
or
mov
cli
or
cmp
mov
dec
ljmp
push
mov
les
fisubl
and
xchg
push
xchg
mov
adc
pop
dec
in
xchg
jg
aaa
jecxz
mov
or
iret
outsl
stc
inc
jno
es
inc
lds
fists
call
pop
jbe
and
mov
xchg
mov
pop
and
push
xchg
xchg
arpl
in
repz
incl
mov
cmpsb
add
pop
adcb
lret
incl
das
cmpsb
pop
enter
dec
pop
add
xor
rsqrtps
lahf
nop
jno
and
push
icebp
xchg
shl
stos
add
xor
jle
std
aas
mov
out
mov
push
gs
cmpl
out
outsl
inc
jmp
loopne
adc
in
xchg
pop
cli
ljmp
jb
lret
add
cltd
outsb
fimuls
js
btr
sbb
outsb
or
xor
movsb
xchg
lds
and
pusha
imul
push
fsubl
repz
je
outsb
loop
pusha
dec
into
sub
push
iret
dec
movsb
lcall
push
sbbb
aad
outsl
fidivrs
cmp
in
sub
fsubs
xlat
pop
lods
pusha
iret
xchg
cmp
or
gs
dec
jmp
or
std
fadd
fimuls
sar
ljmp
adc
adc
mov
push
add
int3
pop
stos
clc
xor
inc
add
sub
lock
aad
stos
aaa
fs
gs
rclb
xchg
add
dec
add
ds
ljmp
test
stos
lret
mov
mov
fnsave
ret
and
add
ja
and
xchg
lahf
mov
xor
sar
pop
add
pop
jb
stos
mov
adc
clc
or
lcall
xchg
outsb
and
dec
mov
loop
dec
mov
shl
pusha
lahf
gs
addr16
sbb
dec
rorb
push
rolb
ret
jae
add
jmp
sbb
mov
cli
clc
loopne
lods
xor
ret
and
arpl
push
rcr
add
subb
pop
hlt
dec
mov
lahf
jbe
ret
mov
xchg
movsb
dec
inc
scas
xor
ret
mov
test
xchg
mov
xchg
cmp
clc
pop
jl
mov
lods
mov
arpl
pop
add
pop
xchg
inc
inc
sbb
inc
dec
icebp
pop
and
push
xchg
sbb
popf
mov
jb
mov
test
dec
xchg
xchg
cli
or
dec
aad
push
inc
imul
frstor
add
mov
xchg
sbbl
or
js
cwtl
fildll
xor
fistl
mov
xchg
jb
in
push
cwtl
mov
loopnew
xchg
mov
icebp
or
jle
pusha
inc
xchg
cmpsl
push
icebp
add
inc
jmp
lock
xchg
js
int
or
dec
add
xchg
roll
not
jo
cli
add
out
into
mov
jg
cmp
mov
inc
add
imul
sub
in
xchg
pushl
mov
sbbb
into
out
iret
jg
out
sub
dec
lods
mov
decb
pop
orl
jbe
inc
pop
repz
aas
fnstsw
loopne
cmp
addr16
loop
xchg
push
lock
push
mov
mov
cmp
or
stc
or
sub
hlt
mov
adc
push
xlat
and
jp
sbb
mov
xchg
jl
adc
cmc
or
add
stc
jg
daa
adc
inc
sub
adc
cli
arpl
aaa
imul
pusha
xor
sahf
xor
sub
mov
stos
sub
cmp
xor
xor
and
lods
loopne
inc
aad
lds
cmp
add
fistps
shl
jo
je
icebp
ja
or
and
clc
pop
sbb
pop
sbb
mov
sub
ss
shlb
pop
push
and
mov
sar
mov
dec
aas
arpl
mov
mov
cwtl
push
push
xchg
dec
or
cmpsb
mov
fbstp
xlat
les
repnz
mov
inc
enter
xor
or
add
xorb
int3
and
adc
cltd
clc
jg
cmp
imul
mov
icebp
pop
xchg
iret
popf
fdivrs
add
push
testb
ret
fildll
mov
cmpb
and
sbb
adc
jo
insl
fsubs
call
loopne
push
add
fsqrt
adc
xchg
popa
gs
inc
mov
jmp
add
push
sub
ficoml
add
outsb
insb
sub
xlat
push
cmp
fbstp
lret
mov
or
xchg
add
and
dec
jp
mov
or
xor
add
lcall
pop
inc
pop
adc
jp
cwtl
in
inc
movsl
stos
mov
cmp
lret
sub
rorl
xor
inc
decl
out
lahf
out
cld
pop
repnz
jns
mov
in
cmp
icebp
pop
add
lock
cwtl
and
in
fnsave
test
inc
jl
jle
ljmp
enter
pop
fldl
push
xchg
mov
jbe
decb
mov
inc
pop
xchg
inc
and
jo
dec
cld
pushf
and
jmp
dec
movsl
pop
cmp
sbb
sbb
xor
dec
adcb
sbb
mov
loop
push
adc
or
pop
adc
hlt
sub
mov
insb
inc
sbb
imul
xlat
push
sub
outsb
mov
jge
mov
pop
lcall
mov
test
js
clc
scas
cmc
mov
rorb
add
and
mov
cld
out
mov
nop
xor
xlat
insb
add
imul
scas
add
mov
inc
cmp
pop
or
popa
jmp
adc
xchg
andl
jp
inc
push
inc
stos
imul
ficompl
adc
decl
shrl
xchg
xor
insl
scas
lods
lahf
out
or
xchg
push
sbb
stc
inc
enter
je
jg
hlt
es
jge
push
fwait
xor
jg
scas
or
xor
mov
mov
cli
mov
in
popa
insl
xlat
mov
sub
mov
sbb
fadds
push
add
mov
jmp
std
loope
das
cmp
lods
ss
stos
in
dec
add
push
dec
or
cmp
les
cmpsb
rol
shlb
sbb
cmp
mov
xchg
jge
or
adc
jmp
orl
push
stos
clc
inc
clc
jae
fwait
pop
and
sub
jmp
cli
cmpsl
mov
sarl
and
fwait
lcall
mov
jne
stc
incl
dec
jns
sub
jmp
xchg
add
cmp
mov
outsb
push
rcll
icebp
push
cvttps2pi
or
cmp
xchg
adcb
adc
sub
adc
cmp
test
ja
mov
loope
add
sbb
leave
pop
push
movsl
out
fwait
rcr
les
insl
jo
jl
or
incl
fisubrl
rcrl
pop
ret
jne
incl
ret
mov
fsubrs
add
popa
mov
aam
jg
rcrb
cli
insb
cld
xor
rorb
bound
xchg
xchg
cmp
andb
xor
jmp
and
mov
dec
fsts
insb
subl
jg
inc
ret
push
xchg
inc
adc
lcall
outsb
mov
outsl
xor
push
sub
orl
or
rorb
push
lret
cli
subb
mov
xchg
add
loop
inc
push
push
inc
mov
xchg
cli
mov
xlat
mov
add
xchg
ja
and
stc
mov
xor
rorb
add
cli
dec
add
sub
adc
adc
or
push
xchg
mov
jbe
or
jmp
fisubrl
pop
push
cld
push
mov
inc
in
dec
cmp
rclb
jns
je
mov
ficomps
ss
mov
adc
mov
add
dec
sub
jecxz
and
cmp
rolb
stos
push
jns
adc
pop
call
push
test
push
jno,pt
and
movsb
clc
add
dec
rol
xchg
lock
mov
stos
cwtl
lock
loopne
mov
fcoms
pop
mov
arpl
sbb
mov
test
cld
in
mov
popa
and
xchg
add
in
ljmp
pop
hlt
decl
cmp
cltd
mov
icebp
aas
and
loopne
loopne
cwtl
sti
inc
out
or
dec
test
jl
or
xor
lahf
dec
clc
pop
insl
ljmp
xor
xrelease
popa
cmpsb
popl
xchg
fistpll
add
dec
cmpb
ds
mov
push
nop
fadds
inc
js
jg
inc
mov
cld
aaa
cltd
mov
loopne
pushl
sub
add
pop
loopne
adc
insl
ljmp
std
add
js
add
cmp
mov
jp
and
xor
push
repz
jae
xchg
aad
ret
cmp
sti
imul
sarb
hlt
pop
and
call
sbbb
icebp
dec
sub
jb
add
sub
das
add
jnp
add
xor
push
gs
cli
dec
jle
jnp
cmp
divb
call
pop
jl
jb
sbb
lods
pushl
in
push
ds
mov
ss
cmc
mov
mov
es
adc
fsubs
push
dec
adcb
jb
mov
lea
sub
lret
pop
xchg
decl
ljmp
pop
and
loope
test
cmp
test
loopne
mov
loope
pushf
sti
out
dec
call
insl
jmp
cmp
sbb
mov
dec
and
cmp
ljmp
jl
cmpsb
xchg
and
or
in
pop
and
sub
xchg
shlb
jle
mov
push
xor
mov
lods
insb
cltd
sbb
cmp
cmp
cmp
dec
in
xor
adc
outsb
mov
adc
lods
adcl
les
push
aad
pusha
dec
and
push
lods
aaa
adc
std
fnstcw
jnp,pn
sbb
fmul
xchg
fmulp
ja
in
mov
lock
ret
jg
jecxz
pop
jl
pop
mov
pop
and
negl
sub
in
mov
and
pusha
push
jl
outsb
push
incl
mov
mov
sub
insb
push
lds
movsl
in
and
mov
jg
call
pop
jnp
sub
pushl
or
outsb
ljmp
adc
add
cmp
ret
fnstsw
add
jmp
jns
aaa
inc
pop
inc
fisubrs
sbb
in
jg
push
fisubs
lahf
mov
fstps
dec
ljmp
jbe
fisttpll
cmp
in
pop
inc
les
nop
jne
sbb
mov
mov
or
mov
rolb
flds
loop
js
in
xor
aaa
adc
decl
mov
leave
daa
jge
sub
jge
mov
jecxz
popa
cmpb
dec
ss
jg
xor
ss
xchg
mov
or
stc
adc
xor
ret
scas
stc
test
lcall
in
scas
or
in
inc
call
std
xor
mov
fnstsw
test
loope
ret
movsb
mov
loopne
rcr
mov
and
dec
and
xor
jecxz
xchg
test
sub
lods
test
ds
call
jecxz
lea
sub
adc
push
inc
cld
leave
fbstp
push
mov
outsl
outsl
push
mov
insb
push
push
stos
pusha
addb
jae
add
rclb
out
fnstsw
fsubrs
loope
or
scas
and
out
sbb
repz
loopne
sub
xchg
and
aas
cwtl
rorb
jno
mov
mov
or
sbb
add
fwait
adc
mov
jg
xor
or
mov
sbb
add
fisubrs
stos
mov
pop
pop
pop
add
adc
pushf
mov
jmp
into
mov
loope
adc
adc
mov
mov
shl
mov
or
orl
out
or
jl
loopne
push
test
sub
in
xchg
enter
mov
mov
inc
cmp
xchg
mov
or
xchg
lock
jl
stos
out
adc
push
mov
inc
dec
fdiv
mov
popl
dec
jmp
loope
push
pop
and
inc
test
jns
shll
lcall
lret
sar
inc
les
xchg
jno
int
dec
pusha
repz
or
ltr
cmpb
loopne
loop
jmp
int
cli
and
loop
sub
adc
push
fistpll
pop
mov
add
int3
out
pusha
pusha
jns
sbb
add
cmp
add
sbb
test
icebp
sub
cmp
divl
jg
and
xor
xor
in
sub
add
mov
sbb
xor
aam
pop
mov
pop
stos
xchg
imul
paddusb
adc
jb
pop
mov
ss
adc
mov
repnz
sbb
lcall
inc
loopne
mov
xchg
mov
insl
mov
ret
scas
cli
call
sbb
icebp
dec
mov
data16
xchg
push
add
ret
jecxz
dec
sbb
jg
xchg
mov
lock
xchg
inc
pop
test
jmp
cmp
xor
pop
add
pop
xchg
cmp
jmp
xchg
adc
xor
rclb
mov
jns
dec
outsb
sub
xchg
add
adc
sbb
mov
jb
add
mov
lcall
rclb
inc
and
popa
decl
adc
fcompl
inc
jecxz
cs
les
insl
jne
divl
popf
mov
jecxz
aam
inc
addr16
mov
mov
cmpb
iret
push
lock
and
repnz
icebp
negl
gs
mov
and
lcall
or
incb
mov
les
hlt
add
aas
stos
inc
lods
decl
cmpsb
jle
ret
cmpb
pushf
out
jecxz,pt
popa
ds
mov
dec
mov
hlt
inc
adc
mov
pop
add
pushf
enter
test
lahf
sbb
mov
mov
adc
xor
orl
inc
jmp
xchg
pop
mov
or
or
dec
cmp
divb
sbb
sub
push
add
pop
cmp
movsl
movsb
add
incl
push
test
push
xchg
repz
push
outsl
add
bound
orl
lea
loope
clc
stos
in
xchg
in
stos
xchg
or
jg
test
adc
jl
subb
ret
mov
pop
mov
incl
iret
or
push
movsb
xor
dec
aam
jecxz
xchg
dec
cld
ljmp
mov
cmpsb
decl
ds
fs
add
mov
jp
xlat
mov
or
int3
sbb
lock
ljmp
stos
xchg
shlb
mov
or
test
adc
cmpsb
out
imul
mov
mov
push
lcall
test
sbb
loope
incl
pop
xlat
adc
jno
add
popf
jle
movsl
repz
jae
ljmp
scas
lcall
mov
cmpb
fidivl
shlb
sbb
mov
dec
xor
mov
or
add
bound
cli
xor
push
or
movsl
loop
xor
lds
mov
scas
lea
ljmp
mov
shrl
gs
cmp
je
addr16
sar
xchg
dec
or
inc
cltd
jmp
push
jno
dec
pop
push
xchg
sbb
inc
jmp
shrb
into
jl
ret
arpl
xor
aad
dec
subl
inc
pop
lea
mov
das
fnsave
popf
jnp
jno
sbb
cmc
jg
jnp
mov
lahf
fwait
bound
in
popf
test
call
xchg
mov
insb
xor
dec
mov
sbb
jae
outsb
clc
pop
pop
adc
fsubl
add
pop
std
push
mov
and
push
cs
rcrb
mov
ret
sar
incb
mov
in
adc
out
xor
ja
fistpll
add
lods
mov
jb
add
pop
xor
fidivrs
add
mov
movsl
and
mov
gs
rcr
ljmp
repnz
andl
add
or
mov
cld
jg
or
cmpsl
jo
jp
mov
push
clc
xchg
shr
cmpsb
dec
scas
pop
jns
sarl
popa
lock
add
cld
popa
and
sbb
pop
les
jmp
iret
adc
bound
aas
fstps
fimull
addl
lret
dec
cmp
dec
icebp
sarl
adcb
insb
mov
sub
aad
outsb
push
sarl
xchg
insl
mov
stc
int3
pop
xchg
aam
and
pop
push
rolb
and
nop
jg
jo
inc
push
dec
mov
rcrl
ret
jno
addb
lret
jg
jo
jae
sbb
test
or
jno
and
repnz
mov
repnz
aad
clc
mov
add
pop
les
punpcklwd
push
and
aad
push
dec
repz
mov
lcall
adcb
addr16
xor
lea
andb
sub
cld
loope
add
aaa
inc
loope
in
cmp
fsubrs
and
fs
jg
imul
sbb
or
orl
addr16
and
pop
cld
cmp
jle
cli
ss
mov
fs
xchg
jecxz
mov
insb
pushw
fcompl
ret
lcall
cli
sub
dec
or
pop
xor
pop
andl
fimull
incl
test
jo
xchg
dec
je
nop
cwtl
sub
mov
in
jg
ss
dec
mov
xor
xor
pop
pusha
add
mov
inc
test
lea
push
cmp
mov
sbb
enter
jo
in
addr16
fucomi
repnz
xchg
sub
dec
pushf
push
outsl
add
sbb
and
pop
pushf
mov
imul
sub
loope
adc
in
fsubl
mov
dec
and
mov
push
cs
out
inc
lea
rcrl
jb
mov
pop
and
cli
dec
test
xchg
stos
inc
adc
ljmp
ffreep
cmc
fnstsw
pop
add
lret
mov
push
sar
cmpsb
call
pop
sbb
mov
test
shlb
cmp
scas
push
test
push
mov
je
incl
jno
push
push
mov
cmp
or
xchg
std
jg
pop
stc
inc
or
add
ss
mov
mov
mov
int
push
sub
add
jge
or
lcall
repnz
dec
adc
outsl
fnstenv
mov
ja
pusha
mov
clc
out
cmp
inc
push
rorb
inc
sbb
add
mov
sbb
cmpsb
loopne
inc
push
std
or
outsl
decl
sbb
lods
push
js
sbb
cmp
cli
xchg
clc
repz
ja
push
push
xor
addr16
ret
scas
inc
andb
call
je
mov
sub
fwait
in
cmpsl
xor
xor
and
mov
daa
leave
cmp
popf
fnsave
jl
loop
sub
sbb
pushf
pop
xchg
fs
int3
in
in
sbb
jno
mov
add
subl
test
sub
in
daa
xor
aam
popf
mov
ret
mov
cmp
leave
leave
dec
inc
test
stc
testl
and
cmp
test
and
push
add
mov
push
cmp
fcmovne
sbb
loopne
lds
adc
lock
jl
call
cld
decl
dec
push
lret
cmp
stc
fldl
scas
xor
adc
xor
or
fstpl
mov
jg
push
jno
add
pop
and
mov
sbb
lock
inc
inc
cmp
mov
gs
adc
mov
sti
lods
call
fsub
mov
adc
cld
jg
test
mov
in
push
sbbb
cmp
lods
xor
dec
jp
gs
add
clc
add
test
loop
sarl
adc
jae
or
inc
repz
stc
call
and
push
push
mov
imul
nop
mov
or
enter
lret
mov
inc
or
xlat
cwtl
adc
and
xor
mov
loopne
nop
mov
int3
cwtl
fistpll
jl
sub
fwait
pop
xor
dec
in
mov
das
test
bound
xlat
fs
outsb
or
pushl
pop
ficomps
jnp
pop
lcall
loop
repz
and
int3
sbb
stos
xchg
lcall
sbb
ret
adc
adc
sub
repz
jl
add
jae
call
loopne
pop
je
mov
or
cmpsl
jg
mov
xchg
add
ret
sub
cmpsb
add
std
out
aaa
push
das
sub
mov
addr16
and
and
lret
mov
repnz
cvttps2pi
lea
or
loop
pop
mov
inc
sub
into
and
ret
fs
adc
lahf
and
loop
das
and
fsubrl
push
dec
push
inc
inc
adcb
loop
mov
mov
test
sub
cmpsb
shll
jp
xchg
dec
out
adc
mov
inc
je
or
add
pusha
xor
mov
cmpb
daa
leave
and
pushl
cwtl
mov
nop
xor
sub
xchg
sbb
mov
mov
andl
mov
movsb
mov
sbb
push
dec
and
cli
xor
or
out
clc
and
fstl
iret
push
and
sub
nop
push
xchg
push
std
cwtl
push
cli
mov
ret
repnz
pop
pushf
cmp
push
jle
ret
inc
mov
inc
add
add
push
dec
aas
dec
pop
add
dec
push
lds
in
xor
mov
pop
pushf
adc
insb
mov
int3
mov
outsl
loopne
add
add
add
xchg
push
rcr
test
sub
iret
mov
push
test
pop
and
jne
or
sbb
scas
test
in
sbb
ljmp
lret
jnp
sbb
test
rcl
mov
fdivr
pop
movsb
add
pop
add
scas
lods
lods
sbb
cmp
cs
fstl
rcrb
push
inc
outsl
sbb
sahf
jbe
jb
in
push
pop
xor
cmpsb
je
add
lcall
imul
outsl
sbbb
inc
mov
jbe
clc
xchg
xchg
xchg
imul
cmp
out
lea
sbb
jge
sbb
out
cmp
pop
inc
or
inc
loopne
movsl
adc
int
jmp
inc
testb
aaa
std
fwait
add
xorb
aam
iret
xchg
jnp
in
sbb
fsubrl
inc
cli
cmp
ret
pop
fld
pop
lret
pop
fldl
or
jnp
fs
mov
add
jnp
sahf
pushl
inc
testl
in
dec
inc
push
addr16
cmp
loopne
jns
lcall
rcl
cmp
pop
cs
aaa
sub
push
jle
js
xor
inc
sahf
js
push
xor
dec
cwtl
loop
lahf
sti
add
jae
mov
pop
test
repnz
scas
add
sti
add
jbe
inc
imul
push
push
adc
ljmp
mov
xor
cmc
adc
push
xor
cmpsb
insl
xchg
or
pop
fcomps
and
cmp
inc
inc
jge
ret
shlb
clc
mov
mov
shlb
cmp
or
jmp
into
jecxz
cmp
mov
dec
inc
add
and
inc
fstps
inc
arpl
push
pop
int
ret
ficompl
mov
add
jle
hlt
xchg
add
es
in
call
sbb
pop
outsb
xchg
mov
inc
ja
or
mov
adc
sub
aaa
stos
inc
sbb
cmp
and
inc
mov
push
add
inc
dec
inc
push
inc
icebp
mov
test
sub
lcall
jl
insb
cmp
mov
push
sub
push
into
imul
xlat
push
inc
addb
stc
in
pop
add
inc
gs
addr16
clc
add
inc
push
bnd
pop
push
cs
lcall
cmpl
pop
repnz
lock
xchg
push
or
pusha
sub
lock
adc
dec
and
pop
mov
inc
push
scas
adc
push
in
xor
adc
xchg
sbb
sbb
sarl
divl
sbb
adc
pop
inc
lcall
jbe
and
inc
rorl
jne
call
aad
xchg
in
add
mov
je
cld
cld
mov
push
add
mov
xchg
adc
xchg
scas
lods
adc
dec
repnz
or
add
adc
lcall
loopne
aaa
adc
negl
add
aaa
xor
ja
fildl
pushf
mov
xor
movnti
xor
and
addb
cld
xchg
cmp
add
loopne
push
call
dec
jg
mov
fcomp
lcall
pop
arpl
jnp
cmp
push
jo
sbb
out
or
sub
mov
imul
sub
push
mov
xor
mov
repz
lods
push
mull
sti
jae
repnz
mov
pop
nop
jg
movq
cmc
or
mov
jb
inc
xor
sub
add
mul
adcl
test
clc
mov
in
sbb
xchg
testl
push
fbstp
pop
loopne
add
ret
push
add
lock
xor
lahf
fisubs
pushf
mov
add
cs
rclb
pop
cwtl
test
sar
loop
xchg
clc
sbb
inc
out
mov
sbb
dec
mov
xor
es
pop
pop
in
dec
push
dec
jns
aas
adc
in
incl
and
clc
mov
aas
bound
ss
into
or
into
and
sbb
pop
or
js
push
ja
or
pop
mov
pop
mov
pop
or
mov
fs
adc
loopne
jns
arpl
pop
pop
jg
mov
loope
pop
adc
xchg
xor
and
ret
add
daa
cmp
decl
enter
jo
jns
scas
sub
push
dec
test
mov
push
pop
movsl
shl
test
scas
orb
stc
repnz
pop
stos
push
cmp
add
adc
negb
lea
push
sub
popf
add
xchg
dec
das
dec
add
popl
push
cmp
add
fwait
xchg
sub
fcoms
or
in
call
imul
mov
inc
mov
push
clc
int
jecxz
jne
sar
out
cli
or
loope
cmp
inc
add
push
inc
jle
fs
sbb
mov
sbb
aas
push
insb
test
fcomip
xor
xor
loope
adc
jb
push
xchg
cmp
push
mov
aad
dec
xchg
dec
loope
hlt
andl
cwtl
mov
mov
pop
cmp
sbb
or
sub
inc
jle
dec
jno
xchg
cld
dec
xor
les
and
in
jp
mov
adc
repnz
and
mov
lods
sbb
cmc
fsubrp
popa
mov
push
cld
sbb
jl
xchg
lret
mov
dec
lods
inc
pop
jp
jno
add
stos
aas
ret
pop
clc
into
testl
aas
sub
inc
or
dec
adc
ret
push
fcomp
cmp
xor
mov
sub
sub
nop
bnd
sub
pop
lods
cmp
cmp
xor
inc
and
inc
lea
push
add
ljmp
lret
shl
add
xlat
push
mov
xchg
mov
mov
jno
xor
push
popa
movsl
test
test
xor
mov
ds
test
out
dec
mov
pop
adc
loop
xchg
and
mov
mov
js
xchg
push
enter
push
jle
inc
out
xchg
inc
cmp
movsl
inc
mov
and
imul
xchg
repnz
jae
jmp
sahf
pusha
mov
popf
fidivrs
add
loope
sbb
add
push
pop
sbb
add
lods
inc
dec
inc
push
sub
inc
dec
cmpb
mov
nop
sbb
cmpb
jp
inc
dec
xchg
adc
jle
fmulp
jg
pushl
call
sbb
mov
lahf
das
push
orl
imul
cmp
mov
jl
pop
test
mov
stc
lea
dec
ret
jo
movsb
jno
pop
xchg
cmc
dec
mov
pop
xchg
cld
jmp
and
pop
nop
xchg
shl
lds
jecxz
arpl
push
jl
fadd
cmpsb
inc
mov
stos
sub
loope
test
cwtl
adc
cmp
and
pop
xchg
add
xor
xor
lcall
and
inc
adc
rolb
pop
mov
and
xor
sub
cmp
or
nop
lods
fs
jge
out
push
sti
dec
mov
xchg
aam
clc
das
mulb
cmp
and
sbb
or
dec
sbb
movl
adc
add
in
lds
sbbb
jno
jnp
test
insl
ljmp
insb
jno
js
mov
pop
pop
push
jle
pop
lret
xor
and
xchg
lock
jmp
aas
inc
pop
ss
into
popa
mov
adc
xchg
in
dec
add
sbb
ret
shrb
loope
sbb
add
push
nop
pusha
jle
andl
sub
loope
dec
lods
arpl
cmpb
or
mov
pop
inc
and
sbb
loopne
cmp
imul
insl
inc
inc
jp
or
ret
in
lcall
lret
mov
ficompl
dec
aas
sahf
in
sbb
mov
mov
fimull
xchg
lock
dec
test
add
sbb
ret
mov
cmpsl
fwait
dec
lds
xor
rcll
les
push
nop
fsubrs
loopne
sub
xchg
jp
add
push
mov
rorl
cld
mov
inc
imul
pop
cmp
adc
pop
hlt
gs
loop
jg
or
popa
ljmp
xor
xchg
mov
fdivr
pop
aam
add
push
push
movsl
mov
out
sub
sub
mov
or
add
mov
adc
repz
pop
nop
jmp
and
into
iret
add
in
mov
sub
push
sub
punpckldq
adcl
and
scas
loope
es
or
mov
in
pop
lock
dec
adc
lock
movsb
cmpsl
testb
xor
pop
sbb
cwtl
call
cld
pop
movsl
cltd
jmp
es
xor
aam
fadds
or
xchg
sub
xor
mov
dec
push
ret
sbb
xchg
lahf
mov
sbb
jmp
cmp
dec
jg
test
xchg
aam
or
sub
cmpsb
sub
push
mov
or
pop
popf
in
fnstcw
aas
jo
pop
test
cmpsb
es
fsubs
push
lret
iret
insb
cmp
es
cvttps2pi
add
loopne
icebp
jmp
mov
sub
shrb
inc
cltd
cwtl
test
in
mov
icebp
xchg
mov
sub
in
inc
pop
int3
push
lsl
pop
leave
and
mov
jmp
push
or
fwait
ret
fadds
adc
and
adc
adc
inc
dec
in
jp
sub
loopne
fildl
push
add
jns
cld
or
pop
loopne
mov
popf
std
adc
mov
dec
or
je
mov
rorl
and
lret
mov
jl
jno
outsb
or
pop
xor
cmp
cmp
xor
lret
mov
js
jns
out
fwait
dec
cld
or
sbbl
inc
jmp
add
jle
mov
mov
and
adc
js
adc
add
or
push
repnz
adc
shrb
movsb
lret
aas
lock
rolb
pop
jl
inc
inc
cmp
pop
cmc
inc
popa
or
xor
mov
add
nop
outsl
inc
cmp
push
mov
jge
cmc
ljmp
pop
adc
mov
lcall
mov
int3
add
pop
ljmp
pop
stc
shrl
cltd
ret
jae
xchg
and
negb
dec
and
test
or
cld
xchg
ja
es
repnz
xor
cmc
xchg
and
jp
arpl
pop
xchg
push
aas
jl
dec
and
or
or
jb
ds
dec
dec
pop
push
inc
fcoml
xchg
test
mov
stc
xchg
aas
or
dec
cmpsl
or
inc
imul
test
pop
psrad
add
test
gs
or
pop
lock
sahf
ds
nop
add
cmp
and
push
sbb
pop
xor
mov
lcall
add
test
dec
cmp
movsb
and
and
faddl
orl
enter
fbstp
cmp
adc
mov
ss
mov
popf
lret
shlb
inc
pop
or
pop
mov
daa
jno
cmp
loope
fadd
adc
xor
cli
or
xor
mov
cmc
adc
jle
push
xor
add
sbb
push
pop
pusha
loopne
out
fidivrl
jnp
pop
aaa
sub
mov
fwait
rclb
lock
das
add
mov
adc
jle
lcall
pusha
jb
add
adc
jl
sbb
add
push
sbb
imulb
jb
pop
ljmp
aad
enter
or
lods
in
xchg
dec
xor
xor
pop
sbb
insb
cltd
sub
mov
adc
cld
aam
fdivrl
mov
or
inc
popf
add
scas
movsb
gs
add
jns
add
and
xor
add
test
jp
or
movsb
stos
and
push
call
and
mov
xor
mov
cmp
fistpl
clc
or
aam
mov
arpl
mov
pop
outsb
mov
scas
push
fstps
mov
cld
pop
lods
cwtl
fdivl
rorb
or
call
in
jo
add
mov
out
shll
ss
pusha
xchg
loope
pop
loop
push
pop
and
jne
in
ljmp
inc
daa
pop
les
mov
inc
in
xor
outsb
lea
inc
popf
or
jne
inc
sti
inc
loopne
or
lock
fidivrs
enter
cmpsl
dec
fwait
or
loope
jg
jmp
lea
xor
add
sahf
mov
sbb
push
insl
mov
cwtl
adc
insl
inc
sbbb
lret
jbe
push
cmp
inc
jne
cmp
xor
cltd
cs
mov
test
mov
jl
or
mov
mov
iret
stos
bound
sahf
clc
adc
jns
mov
push
jp
add
mov
lods
cmp
je
pop
dec
and
pushl
push
jbe
xor
push
mov
movsl
lea
mov
es
repnz
dec
pop
rcrb
outsl
stos
popl
dec
stos
mov
and
hlt
loopne
adc
mov
inc
jno
cld
mov
pop
enter
cmp
cs
push
movsl
sub
rol
lea
inc
xor
mov
xchg
dec
movsb
inc
jge
shrl
fistps
inc
jg
cmpsl
jne
sbb
sub
pop
and
lcall
inc
cmpsl
mov
xchg
pop
add
stos
xor
rcr
mov
std
sbb
ljmp
sub
xchg
ret
sbbl
xchg
inc
push
jl
mov
cmpsb
ss
rclb
adc
lods
add
jl
lea
mov
push
cltd
lods
nop
inc
mov
rolb
sub
inc
jmp
jge
dec
sub
dec
jg
imul
sub
scas
add
mov
cwtl
mov
rorl
mov
xchg
inc
or
mov
xor
into
adc
xor
jnp
mov
sbb
psrld
mov
mov
rorb
mov
sub
test
gs
cli
imul
popa
sti
or
or
pusha
pusha
push
cmp
push
clc
cmp
jge
sbb
push
pusha
aas
ss
jns
popa
dec
mov
aaa
adcl
mov
inc
mov
xor
cmp
adc
lahf
cmp
subb
cld
mov
cmp
add
pop
sub
jmp
pop
daa
cld
mov
popl
in
add
cwtl
sbbb
test
mov
js
mov
dec
enter
mov
std
pop
adc
mov
mov
in
movsl
push
in
jb
insb
je
stos
push
iret
shrb
inc
out
xor
and
cwtl
xor
stos
jmp
xlat
repnz
aas
pop
sub
pusha
push
pop
pop
lea
adc
adc
dec
jecxz
ret
loop
cmpb
outsl
push
inc
pusha
shrb
out
xlat
or
loopne
mov
cmpb
in
ljmp
les
or
xchg
rolb
xchg
sub
aaa
mov
div
sub
xchg
stc
jle
lock
iret
push
je
lcall
repz
cltd
push
add
mov
mov
adc
test
mov
ret
addl
mov
rolb
cwtl
cmp
not
and
jle
add
inc
pop
nop
xor
mov
imul
pop
loopne
mov
stos
jg
jge
andl
and
dec
lret
out
les
push
xor
mov
inc
loopne
mov
dec
mov
xchg
mov
cmp
inc
test
bound
mov
push
push
adc
shll
xor
dec
adc
out
mov
push
enter
dec
fs
stos
cs
or
and
mov
sub
mov
add
loopne
push
cltd
xor
add
in
xchg
stc
lret
enter
push
xchg
mov
inc
call
adc
mov
fldl
insb
lret
mov
nop
std
mov
inc
pop
pop
neg
in
sub
sbbl
cmp
rclb
add
call
xchg
ficoms
clc
inc
fwait
and
in
mov
and
mov
test
rcrl
stos
bound
lds
inc
sbb
lea
sub
mov
gs
mov
incb
pop
movsb
dec
cmp
pop
xor
test
fstps
xchg
iret
movsb
outsl
lds
sbb
mov
mov
add
cld
loop
pop
push
pusha
rorl
rcll
sbb
mov
fstl
push
aam
scas
jmp
and
lcall
and
lahf
cwtl
bound
inc
adcb
bound
sub
jg
psubusb
inc
xchg
gs
and
adc
and
cmpsb
inc
or
aad
sbb
push
sbb
mov
xor
sar
pushl
cld
pop
aas
pop
js
jbe
ret
dec
addb
sub
out
rolb
psubw
sbb
fildl
add
mov
shl
inc
cmp
inc
jno
mov
add
jnp
nop
jg
sbb
js
adc
or
jmp
sub
push
xchg
inc
lret
mov
or
in
clc
jno
les
imul
inc
pop
mov
add
testb
pusha
movsb
aas
fcmovu
jp
xor
jmp
mov
std
cltd
cmp
lods
and
add
dec
inc
arpl
dec
aas
scas
js
rcr
cmpsl
in
stos
mov
dec
sbb
out
pop
sub
ret
add
xchg
out
cmp
inc
push
out
add
call
add
ficomps
pop
inc
mov
pop
xchg
mov
and
das
mov
adc
xchg
adc
arpl
add
mov
or
sbb
adc
lcall
sub
cmp
bnd
cwtl
pop
fcmove
pop
clc
aad
sbb
xchg
ds
mov
out
shlb
xor
mov
scas
mov
and
sahf
pop
xchg
ss
stos
cmp
xchg
sbb
sbb
push
lods
in
data16
push
shlb
in
sbb
mov
outsb
es
and
ret
sub
dec
xchg
jo
pop
lret
inc
mov
inc
or
push
mov
sahf
xor
lcall
in
jo
subl
and
daa
jge
sbb
out
ss
out
out
xchg
lahf
loopne
mov
cmp
jge
movsb
add
or
sbb
mov
mov
inc
clc
outsb
or
imul
cmp
pop
cmp
mov
cmpsb
pop
jmp
pop
movsl
cmp
das
xor
jno
imul
mov
jg
xor
mov
clc
adc
sub
sarl
mov
sbb
daa
xlat
ds
cwtl
sbb
jno
es
cmpsb
sbb
pop
or
fisubrs
fwait
sub
jo
push
or
sbb
xor
in
jno
fwait
cmpsb
cmp
xor
adc
std
aam
mov
sbb
inc
xchg
or
cmp
mov
dec
push
les
cmp
lret
and
pop
adc
and
mov
add
mov
push
xor
xorb
cwtl
xchg
outsb
pop
mov
lods
xchg
and
lret
cmp
stos
outsb
into
add
lcall
lock
pop
lret
shll
cmp
int3
mov
subb
cld
mov
dec
xor
aas
leave
iret
sbb
mov
loopne
and
das
jne
loope
adc
scas
scas
jle
pusha
xor
and
ret
out
fbstp
out
cltd
int
cmp
aas
clc
call
and
mov
add
sbb
push
loop
aas
dec
aaa
inc
rorl
and
das
les
push
jo
stos
add
inc
dec
mov
stos
int
mov
lock
mov
xor
sbb
push
insl
scas
mov
outsl
or
pop
lds
fsubr
jns
std
mov
imul
xor
xchg
mov
xor
mov
hlt
push
push
jne
add
mov
outsl
pop
sti
cmp
push
adc
aas
jg
add
loopne
fsubp
hlt
cmp
sub
or
cmc
aam
mov
insl
adc
cld
in
pop
adc
cwtl
sub
push
pop
loopne
aad
hlt
repnz
leave
int
add
lcall
jl
sub
js
cmp
aad
push
mov
aam
ja
idivb
pop
int
fcoml
push
sbb
mov
fsubrs
push
cltd
clc
leave
daa
jg
stc
xchg
out
cmp
ljmp
das
call
sbb
test
ficompl
mov
sub
push
mov
inc
jle
or
add
inc
jne
lret
aaa
test
pop
jl
add
rcrl
mov
pop
cmp
rolb
test
daa
icebp
ror
repnz
dec
lods
push
repz
pop
add
push
fmul
and
or
pop
repnz
xor
inc
or
jnp
push
or
or
loopne
pop
lcall
test
out
xor
js
push
mov
inc
or
mov
push
lods
pop
xchg
js
shrl
loopne
aad
jecxz
adc
sbb
jg
inc
jbe
push
ret
dec
jo
clc
inc
jbe
aam
arpl
gs
ss
and
decl
mov
pop
push
pop
lea
lds
jbe
test
fs
js
xor
pop
lret
xor
lea
scas
js
loope
sbb
mov
roll
inc
sbb
xchg
lea
inc
xchg
xchg
ror
cs
std
adc
and
xchg
xor
jle
test
lock
out
test
jecxz
testl
cmp
daa
inc
lsl
adc
movb
arpl
pusha
pop
sub
sbb
inc
int3
gs
aam
arpl
sub
imulb
lock
cmpsl
adc
jle
jne
int3
sub
std
lods
call
cmc
xchg
inc
jnp
dec
push
fmuls
ss
jecxz
add
roll
lds
push
std
cmpsl
and
add
je
add
test
mov
mov
in
cltd
mov
jns
sub
sbb
lods
sub
je
movsb
mov
push
adc
cli
ret
xor
repz
shll
jg
xchg
cs
sbb
loop
fnsave
push
sub
insl
mov
mov
push
outsb
aam
cmp
test
rcll
lahf
dec
pop
jl
or
xchg
lret
push
mov
popf
mov
and
or
pop
out
fwait
push
lods
push
xchg
fiaddl
mov
sbb
addr16
xor
or
leave
inc
and
jg
mov
xor
movsb
push
jno
les
add
mov
add
jmp
cmp
adc
mov
lret
test
sub
subl
les
loop
lock
nopl
cld
jbe
hlt
cmp
mov
adc
pop
aam
push
push
test
adc
arpl
add
scas
movsl
test
shlb
cmpsl
cmp
add
jp
lock
loop
int
mov
sub
xchg
pop
mov
and
mov
pop
sarb
adc
leave
ljmp
es
xchg
movups
add
adc
jge
sub
ret
pop
sbb
lock
sahf
lret
jnp
inc
cmpsl
mov
cmpl
push
xchg
inc
mov
mov
jb
aad
sbb
cmp
push
dec
incl
pop
call
inc
xchg
stc
add
sbb
pop
add
adc
and
stos
add
and
aad
nop
add
dec
xor
aad
fstl
mov
cmp
fdivr
test
mov
dec
movsl
dec
sbb
mov
sub
sahf
pop
push
inc
cmp
pop
pop
hlt
pop
and
inc
rclb
je,pn
cwtl
dec
cld
or
popa
test
arpl
pop
inc
aaa
rcl
cmp
jbe
cmc
or
cld
imul
repnz
clc
sbb
pop
fcomip
or
call
dec
push
repz
push
test
and
sub
jmp
mov
cli
inc
adc
push
into
add
cmp
mov
add
dec
test
xchg
pop
aad
aam
ret
mov
jg
shll
jl
rclb
bound
mov
cmp
xchg
sarb
push
cmp
xchg
dec
in
pop
add
mov
popa
adcl
push
cld
add
loop
inc
test
sahf
fwait
xchg
push
inc
push
pop
cmp
jmp
add
add
mov
push
xchg
movsb
fistpll
enter
cmp
jnp
cli
aam
or
out
mov
adc
xchg
cmp
add
dec
nop
inc
repnz
jns
insb
adc
sar
cmp
lret
adc
jle
jmp
movsl
cmp
cmpsl
fidivs
pop
call
jo
xchg
bound
jae
iret
push
cwtl
inc
inc
jo
add
and
shl
add
xor
inc
lea
dec
add
mov
call
push
mov
push
sub
ljmp
cmp
cmp
dec
sbbl
pop
icebp
adc
jne
aas
es
jmp
jecxz
ljmp
incb
dec
or
or
add
or
mov
jp
stc
or
cmc
bound
loope
xchg
movsb
jb
ss
or
imul
clc
fildll
push
or
or
dec
jmp
incl
int
mov
repnz
roll
and
add
add
xchg
jo
aas
nop
adc
and
outsb
lds
aas
sub
adc
into
das
jno
mov
xor
add
mov
pop
add
ret
pop
push
sbb
inc
or
or
fs
pop
mov
rolb
cmp
ss
cmp
les
call
push
call
repnz
nop
or
test
mov
or
inc
or
inc
aam
adc
dec
out
dec
or
xlat
popl
xor
add
push
out
fnstenv
cmovno
jo
in
xor
lret
sarb
outsl
scas
cli
lret
push
in
lret
pop
pop
call
in
xchg
cmp
in
leave
jge
push
test
sub
mov
adc
js
xchg
outsb
outsl
jo
push
test
push
xchg
stos
sbb
mov
and
xor
in
jmp
cmc
add
pop
add
xchg
sub
sbb
clc
add
dec
repz
loope
aaa
mov
loopne
push
rolb
push
out
pop
cmp
inc
pop
mov
and
cmp
inc
or
xor
icebp
inc
stos
lcall
lret
std
mov
add
loop
cli
cmp
mov
xor
push
ret
cld
jmp
scas
sbb
and
sub
jecxz
mov
jg
inc
ljmp
mov
add
call
mov
fdivrs
xor
and
ljmp
inc
aad
adc
inc
jp
mov
loop
jmp
mov
fistpll
es
xchg
add
roll
lea
rcrb
jnp
test
pushf
mov
lahf
mov
dec
push
adc
es
test
jbe
jg
inc
pop
or
shrb
jnp
les
lcall
popf
icebp
add
in
gs
arpl
cmc
int
lcall
cmp
mov
inc
aas
fwait
xchg
jno
incl
push
js
into
mov
jno
outsl
hlt
imul
orl
fstpl
cld
das
punpckhdq
lds
and
sbb
in
sub
lea
ds
jl
fadd
sbb
inc
test
js
or
rcrl
sub
js
aam
pop
test
sbb
mov
testl
push
loopne
inc
sub
pop
add
inc
fwait
out
sti
add
int3
xchg
mov
cmp
mov
insb
loop
cmc
jo
cmp
out
or
fistps
sub
nop
pushf
dec
out
cmpsl
jge
sbb
outsl
dec
std
pop
fs
mov
shlb
cmp
icebp
xchg
xchg
push
jecxz
les
inc
stc
int
add
cmc
dec
test
fwait
sub
push
pusha
xor
mov
xor
pop
das
popf
pop
or
pushf
jle
or
mov
add
js
sbb
pop
inc
inc
lahf
jmp
pop
cmc
dec
push
sbb
adc
cmp
and
popf
popa
es
repz
adc
mov
add
pop
sbb
gs
jmp
xchg
add
mov
ljmp
outsb
imul
clc
lcall
cmpl
decl
sarb
xchg
mov
dec
adc
fcomip
push
mov
testb
std
xor
adcb
sbb
leave
sahf
dec
dec
movsl
fcompl
cld
cmp
push
sbb
and
xchg
and
idivb
xchg
cli
pushl
addr16
insb
clc
push
dec
ds
ljmp
xchg
je
sub
xor
inc
fwait
rcl
xor
loop
sahf
enter
push
into
push
imul
cmp
jp
mov
outsb
mov
pop
inc
xor
addl
cmp
lahf
stc
imul
push
xchg
les
call
add
in
adc
dec
scas
push
ret
cltd
add
fistps
dec
mov
ficomps
mov
inc
in
cwtl
push
lea
popf
push
mov
and
jo
sahf
mov
pusha
jno
lcall
fmulp
mov
adc
push
mov
and
mov
dec
fdivrp
fsubrl
add
loopne
xchg
mov
or
call
xchg
nop
xchg
daa
jnp
test
lock
fldl
jbe
or
and
call
and
out
mov
or
push
mov
xlat
ss
cmp
mov
add
dec
add
add
dec
mov
clc
decl
push
imul
fldenv
pop
cli
pop
xorb
and
enter
pop
ljmp
cli
cmp
repnz
daa
leave
pop
lret
or
in
mov
xor
add
pushf
push
hlt
decl
sbb
push
sub
addb
adc
aas
aas
nop
jle
dec
xor
rcrb
fmull
into
out
inc
cmp
push
repz
jo
shld
dec
push
out
xlat
sub
push
ret
push
dec
sti
dec
or
cmp
push
ljmp
xor
fs
pop
rclb
test
popa
adc
and
ss
scas
dec
adc
scas
dec
mov
xchg
mov
cmp
jbe
faddl
adc
inc
fs
les
mov
in
cld
lds
mov
inc
in
dec
push
push
pop
mov
adc
sbb
pop
cld
add
cmp
dec
outsl
adc
lcall
jb
xchg
push
das
inc
pushf
subb
pusha
aaa
mov
arpl
jg
jg
ret
push
mov
push
push
aaa
aaa
sbb
mov
pop
dec
inc
call
xor
xor
jg
lods
pop
iret
aam
or
out
mov
xor
jmp
cltd
adc
mov
testl
xchg
leave
add
push
and
decl
inc
lret
sub
sbb
xchg
inc
std
test
add
add
sub
incl
sub
fs
sub
jp
decl
pushf
repnz
push
test
lds
jo
cld
nop
setp
out
adc
pop
enter
repnz
sub
jbe
stc
cwtl
or
xor
ja
mov
mov
lcall
repnz
or
ret
mov
or
inc
pop
loope
cmp
mov
sub
mov
cld
iret
dec
fimull
movsb
outsb
and
mov
push
shl
filds
adc
mov
aas
jno
imul
dec
and
add
dec
fmuls
rorl
inc
cmp
orl
fstpt
inc
insb
adc
cmpsl
out
adc
aad
in
pop
shl
stc
and
cmpsl
scas
les
dec
and
xchg
inc
in
ja
shlb
faddl
das
add
sahf
js
jg
out
ds
rcll
push
addb
and
rol
lcall
xor
inc
enter
ficoml
fyl2x
pushl
mov
shr
les
mov
sub
jb
sbb
jne
cltd
inc
cld
fisttpl
and
or
xchg
mov
sbb
pop
fildll
aad
imul
test
sarl
pop
gs
aam
or
dec
and
push
and
call
js
and
test
jnp
leave
push
dec
mov
mov
cmp
js
scas
cmc
int
xchg
add
dec
sbb
rcr
push
cmp
mov
inc
xor
fisttpl
push
cmp
inc
sub
push
push
inc
push
cmpsl
mov
and
addr16
sar
mov
push
loop
and
sub
push
and
popf
xor
xchg
add
inc
mov
adc
sub
mov
inc
dec
sub
icebp
mov
jp
les
loope
std
sbb
mov
in
ret
das
push
in
inc
addl
daa
ljmp
cwtl
cmp
dec
add
loope
or
ret
jmp
mov
shl
fsubs
sbb
sbb
ret
xor
dec
icebp
jg
jo
jnp
mov
sbb
dec
sub
loop
mov
or
mov
jmp
test
mov
jp
int3
jae
mov
cmp
or
mov
hlt
xchg
das
push
dec
test
jmp
sub
cmc
add
adc
xchg
nop
push
enter
loopne
jecxz
sbb
scas
or
push
je
sub
nop
in
test
xchg
adc
ret
add
jg
insb
jp
adc
push
sbb
pop
jge
jle
js
loope
lahf
std
enter
or
lcall
sbb
xor
mov
xchg
xor
lret
mov
or
adc
out
scas
xchg
sbb
push
add
scas
loopne
ja
mov
rolb
dec
divl
rcl
call
adc
jnp
jle
mov
pusha
xchg
pop
mov
test
push
pop
in
sub
sti
and
add
adc
pop
movsl
arpl
popf
cmp
ret
mov
cli
sti
sub
shll
daa
pop
clc
xor
into
incl
adc
pop
xor
jns
stos
das
add
fstl
adc
xlat
fwait
ja
inc
or
push
cltd
dec
mov
and
inc
mov
xor
add
iret
pop
lret
mov
mov
cmp
sbb
je
mov
in
sbb
ret
or
cmp
stos
pop
sbb
add
jecxz
push
daa
lahf
sub
jecxz
xor
mov
xchg
pop
push
lock
adc
pop
xchg
or
cli
out
xor
fsubrl
xor
cmpb
sub
lcall
rolb
lahf
push
mov
jecxz
stos
sahf
sub
roll
xchg
insl
cld
cmp
and
push
or
mov
xchg
inc
adc
mov
dec
inc
or
inc
add
cmp
mov
lahf
js
loope
ljmp
je
insb
rorb
js
decl
add
sub
leave
loop
rolb
out
and
inc
in
cli
jg
xor
inc
lock
dec
jp
int3
addr16
jecxz
cs
aaa
aas
loop
mov
int
or
mov
mov
mov
pushf
mov
mov
mov
addb
or
push
mov
lret
cs
cmp
and
mov
js
movsb
lcall
imul
int
mov
repz
stc
sbb
es
sbb
or
push
aad
adc
and
xor
add
sar
es
xor
mov
xchg
movsb
push
mov
xor
icebp
xor
push
pop
scas
mov
sub
inc
or
dec
add
pusha
add
addl
or
fcomps
dec
xchg
jg
int
leave
cmpsl
jl
popa
pop
ss
pop
push
push
sar
lahf
dec
xchg
lock
bound
ja
aam
movl
cmp
xor
decl
out
push
aam
add
mov
ja
xor
je
testb
adc
fucompp
ds
ljmp
push
or
mov
mov
lds
inc
clc
add
pop
cmp
xor
addb
pop
hlt
lahf
das
and
push
push
cmpb
out
popa
outsl
cli
mov
and
dec
das
and
scas
enter
and
iret
fnstsw
lods
mov
dec
outsb
fcmovb
cld
ljmp
ja
idivl
andb
movsb
push
sbb
orl
bound
or
cmp
adc
dec
into
mov
bound
adc
jmp
lods
movsb
xor
add
cmpl
sahf
sbb
lahf
dec
inc
ljmp
mov
lcall
pushl
arpl
dec
mov
xor
xlat
test
lea
adc
pop
pop
aas
loopne
jns
cmp
pop
int
dec
add
xor
repnz
incl
test
mov
bound
jb,pt
hlt
xchg
hlt
out
insb
push
lds
push
enter
mov
xchg
pusha
adc
dec
fsubs
dec
xor
lret
cmpl
sbb
lret
leave
cld
ja
add
jae
cmc
add
popa
and
pop
mov
imul
daa
xchg
jge
jg
cmp
nop
in
stos
mov
mov
cli
cmp
pop
pushaw
inc
pop
fdivr
fstpt
pusha
push
pop
pop
jl
pusha
incl
cmpl
fwait
ss
mov
jl,pn
lahf
xor
mov
sbb
xchg
xor
cwtl
add
and
ror
sti
movsb
stos
loopne
negl
sbb
jle
push
mov
add
mov
dec
out
outsb
ljmp
add
lods
jmp
push
mov
sub
pushf
bound
popa
mov
inc
sub
mov
clc
add
sub
jmp
addr16
cmp
adc
pop
lods
jmp
nop
std
inc
cmc
jp
xor
aas
std
cmp
sbb
add
cmp
lcall
wrmsr
inc
fstl
decl
pop
stc
pop
xchg
and
fildll
cmp
xor
cwtl
inc
dec
fcoml
mov
inc
repnz
testb
mov
jmp
mov
das
fucomip
inc
je
push
sbb
ja
lret
call
gs
cmc
push
push
lea
lcall
sbb
xchg
jmp
in
outsl
jge
jns
jo
push
test
ss
xorb
lret
pop
mov
cli
xchg
cmp
mov
add
jg
inc
dec
shll
mov
mov
mov
xor
int
rol
push
data16
pushf
push
push
inc
xor
shlb
jp
dec
pop
jmp
inc
dec
pop
mov
lahf
pop
daa
mov
clc
jecxz
arpl
xor
lds
inc
test
and
orb
lock
jnp
notl
das
cmp
inc
testl
aaa
outsl
scas
pusha
and
mov
rol
pop
dec
mov
out
popa
xor
imul
pusha
xchg
sub
ret
jl
aaa
jmp
incl
xchg
scas
or
sbb
in
or
testb
sub
add
mov
les
dec
xchg
jl
xchg
les
push
lock
nop
scas
inc
int3
sub
lock
jmp
xor
div
dec
jns
push
call
addl
cmc
sbb
lds
outsl
popa
aas
or
pusha
rclb
pop
add
xchg
xchg
cs
mov
mov
cmp
aas
xorb
add
jmp
andb
or
sbbb
mov
or
outsb
icebp
es
ja,pn
pop
sbb
push
leave
pop
scas
and
or
pop
mov
mov
jle
lock
loop
iret
in
fadds
cmp
fsubl
push
jge
jmp
pushf
fiaddl
cmp
cmpsb
bound
jb
or
in
adc
xchg
cmpsl
movb
ljmp
push
ds
das
addb
sub
rolb
dec
clc
or
jne
js
lcall
xor
adc
enter
out
test
cmp
xchg
cltd
cld
or
add
imul
sbb
pushf
jns
stos
ss
push
arpl
add
lcall
xorl
loope
xchg
sbb
push
sub
insl
fbld
faddl
xchg
or
inc
fsubl
pop
inc
ljmp
scas
and
sbb
xor
mov
mov
xchg
push
xor
add
mov
ss
jl
rcrl
add
lods
ss
ret
out
cmc
push
mov
push
imul
imul
clc
mov
mov
or
add
inc
cmp
cmp
pop
xchg
loopne
cwtl
xchg
scas
int
stos
sbb
icebp
or
sub
sbb
les
lock
cmp
adc
push
push
sbb
sub
cli
dec
sub
lods
adc
xor
jno
das
ja
xor
xor
adc
cmpb
adc
test
xchg
sbb
and
pop
sbb
shlb
leave
xor
xchg
xor
icebp
and
xor
push
dec
pop
and
add
sub
mov
rcrb
mov
jne
mov
data16
xor
adc
cwtl
inc
push
xlat
lds
cmp
push
lds
and
jle
pusha
fs
jecxz
or
scas
add
aaa
or
jbe
filds
shlb
add
shrb
sti
je
test
xor
and
popf
ror
loopne,pn
out
jl,pt
add
pop
std
idivl
int
and
out
mov
stc
or
call
enter
cmp
sbb
add
loope
xor
add
pop
aam
xor
xchg
repz
jne
roll
out
add
inc
or
cmpsl
popa
mov
xor
inc
cs
cmp
hlt
and
mov
and
in
ret
retw
or
mov
outsb
popa
or
loop
adc
ret
mov
xor
or
xor
and
inc
fwait
mov
or
xchg
das
stc
dec
cli
jmp
and
xchg
sbb
and
in
mov
pop
and
add
ror
cmp
xchg
outsb
outsb
and
sub
sbb
dec
adc
aaa
int3
inc
adc
pop
mull
das
xchg
hlt
stos
sbb
stos
ret
jmp
or
lods
loopne
rorl
jb
mov
ss
mov
adc
shlb
jns
sti
in
xchg
iret
mov
dec
mov
test
jle
bound
mov
or
pusha
jl
lock
fldenv
clc
add
mov
out
out
or
jmp
add
or
add
mov
js
stos
mov
loope
push
cmp
fs
pop
jg
sarb
shr
xlat
xorb
or
out
pop
shr
jecxz
fdivr
lcall
shrl
jmp
or
jns
stos
pop
push
pop
lea
bound
loop
cmp
dec
mov
dec
dec
adcb
cmp
sub
push
push
and
cmp
cld
mov
sub
hlt
fidivl
mov
insl
dec
rclb
imul
xor
into
jnp
add
mov
push
jecxz
mov
inc
pushl
inc
cmc
pop
or
sbb
ret
out
pop
mov
sub
in
add
push
xchg
cli
jmp
repnz
sbbb
mov
test
aaa
into
push
movsl
mov
cmp
fimull
xchg
cmp
mov
addr16
hlt
rolb
ss
dec
cmp
xchg
mov
scas
ret
add
mov
or
sbb
mov
rorl
jecxz
mov
test
jno
cli
xchg
aas
outsl
je
inc
testb
ud2
divb
fcmovnb
mov
sub
fwait
jnp
mov
js
mov
inc
jmp
dec
fldpi
mov
push
popa
sbb
and
hlt
daa
adc
push
adc
sub
and
shrb
cld
imul
pop
push
inc
pop
clc
movb
adc
mov
rorl
adc
int
sbb
pop
sub
adcl
jg
popa
mov
loopne
or
cmp
ljmp
xor
push
and
pop
sbb
pop
jp
mov
inc
adc
mov
or
inc
jae
mov
push
push
pop
lret
push
loop
test
jl
psraw
sbb
test
jno
ret
nop
xor
add
pop
in
xchg
leave
int3
inc
pushf
loopne
add
push
sbb
fadds
xorb
or
cmp
jge
jo
ret
inc
js
adc
mov
pop
addr16
arpl
push
rclb
pop
in
sub
jbe
and
inc
scas
outsb
ss
push
push
add
mov
jl
jp
dec
xchg
cmp
add
movsb
xchg
jmp
jp
pop
mov
or
xor
pop
add
add
imul
push
adc
and
pop
mov
sub
adc
rorb
mov
add
lret
popa
fnstsw
or
xchg
or
mov
cs
push
sub
adc
clc
pop
rorb
imul
cmpb
push
out
lret
pop
mov
xchg
loopne
imul
or
or
or
andb
orb
ljmp
ret
add
aaa
jg,pt
jle
std
popa
aam
movsb
push
push
sarl
mov
out
mov
jb
daa
mov
jb
mov
mov
out
push
mov
enter
dec
push
xor
lods
cmpl
push
subl
into
fs
pop
jns
arpl
les
jnp
pop
sub
sbb
or
dec
mov
inc
xchg
inc
decl
and
inc
or
sbbb
repz
jle
jg,pt
cli
push
dec
mov
cmp
out
sub
xlat
enter
mov
addl
xchg
inc
jo
xor
cmp
insl
pop
add
inc
imul
mov
sub
push
jle
add
cmc
out
shlb
dec
std
and
push
fwait
sub
shr
clc
jnp
sub
or
clc
or
and
add
aam
sub
push
loopne
stc
inc
xchg
mov
hlt
push
jg
js
sub
sub
push
cmc
inc
xor
js
lock
push
cli
repnz
ret
sbb
sub
movsl
dec
adc
xor
mov
sub
filds
iret
repnz
shrb
mov
push
ja
and
mov
cli
or
mov
pop
xchg
mov
ds
daa
hlt
leave
push
cmp
pushf
or
jecxz
insl
sbb
xlat
cs
sub
jle
pop
stc
adc
mov
popf
scas
push
ret
movsl
shll
add
jp
mov
ljmp
fs
test
lcall
in
or
sub
sbb
push
sbb
fwait
xchg
pop
pop
xchg
push
add
or
push
adc
add
insb
adc
cmpsl
inc
stos
loop
or
movb
imul
inc
mov
popa
pop
or
xor
lock
fcompl
sbb
sub
popl
fcmovbe
ja
pop
and
mov
icebp
add
push
jno
cmpsl
popa
push
js
dec
sub
js
pop
add
dec
mov
aaa
push
test
pop
adc
mov
xchg
push
xor
hlt
cmp
push
loope
pop
pop
pop
mov
xchg
adc
add
cmpb
testb
xchg
jae
movsl
lock
jl
lret
js
add
outsl
pop
mov
repnz
or
inc
pop
or
add
out
add
adc
adc
dec
dec
jae
pop
sar
and
sbb
insb
rorb
cmp
insl
xchg
or
and
sarb
dec
xchg
movsl
out
aaa
andb
clc
icebp
xlat
add
sbb
imul
jle
sub
sub
jecxz
jo
push
lock
cmpsb
and
push
push
std
dec
insl
pop
adc
sahf
fmull
jecxz
add
and
call
int3
popf
inc
mov
or
add
cld
or
xchg
jmp
sub
xchg
sub
pop
and
xchg
pop
shll
mov
cmpsb
xchg
aas
aaa
push
add
lea
insl
out
pop
shll
leave
xchg
sub
adc
add
pop
repnz
sub
pop
sub
dec
loope
mov
sub
lret
fcomps
adc
xchg
stos
lods
mov
dec
mov
jecxz
adc
push
push
push
in
shrb
xor
sub
add
mov
arpl
mov
jae
inc
jmp
add
adc
imul
mov
stos
and
dec
incb
add
cs
mov
out
or
jne
int3
rclb
mov
in
test
xor
inc
imul
fbld
sarl
cmpl
jbe
repnz
pop
mov
inc
daa
ret
push
cmpsl
js
movsb
mov
lods
sub
cmp
adc
cmp
or
mov
nop
fisttpl
sbb
lret
insb
out
out
sub
xchg
imul
pop
pop
push
lock
incb
cld
pop
aas
bound
loopne
daa
or
push
fstps
and
ds
out
or
dec
push
dec
ret
jecxz
push
xor
xor
cmp
jne
les
jl
fistpll
jle
cmpb
addr16
int3
ss
push
clc
addl
sub
lcall
cli
in
cmp
xor
cmp
and
pop
or
loope
jp
sti
outsb
inc
add
ja
push
pop
inc
and
fists
aas
int3
data16
jecxz
bound
lds
adc
push
add
divl
incl
mov
fisttps
test
push
test
andl
pop
and
movsb
scas
jno
mov
push
or
pmulhw
add
fs
pop
add
push
fwait
sbb
rcrl
xchg
popfw
mov
clc
shrl
insl
test
lret
pop
jl
pop
jg
xchg
sbb
ret
insl
test
push
movsb
ljmp
dec
lcall
xchg
mov
lcall
inc
xchg
and
adc
sub
jp
ror
sub
pop
xchg
inc
ret
jo
mov
sub
rorl
push
jg
pop
dec
inc
xor
pop
sarw
mov
push
add
rorl
lahf
mov
mov
and
push
pop
push
cld
loopne
cmp
pop
sub
int3
addb
xchg
cmp
addb
adcb
pushf
in
lcall
add
les
mov
lock
xchg
je
cs
jb
leave
add
push
arpl
popa
mov
fdivrl
cld
add
aam
cltd
pop
aam
ja
shlb
inc
or
add
ss
out
and
and
dec
leave
mov
jmp
mov
xchg
into
lods
push
pop
faddl
mov
popa
scas
or
leave
cmp
lea
add
mov
ficompl
add
mov
sbb
nop
pop
xchg
jb
push
push
stc
inc
and
xor
aaa
jno
mov
xchg
sar
ljmp
fcom
sub
fimull
mov
xchg
mov
lods
outsl
pop
stc
jg
nop
ljmp
rcrl
ds
test
mov
mov
popf
mov
ret
test
insb
push
out
fld
or
hlt
jle
mov
xchg
push
lahf
mov
add
dec
cmp
add
in
xchg
adc
cli
fs
adc
jo
sub
roll
push
and
mov
inc
add
data16
imul
pop
cld
mov
lcall
fsubs
jp
in
jnp
pusha
and
and
sbb
add
inc
mov
ljmp
mov
pushf
xchg
pushf
daa
add
adcb
in
cmp
pusha
add
mov
pop
sub
call
and
decl
cmpsb
adc
addr16
mov
loop
cwtl
add
and
outsl
mov
add
cmp
or
sub
mov
hlt
cwtl
adc
int3
loope
jno
sbb
mov
xchg
dec
or
pusha
test
lods
icebp
push
daa
mov
dec
jecxz
add
movb
push
ret
push
cwtl
test
and
data16
pop
popf
ret
imul
cltd
mov
dec
add
dec
sbb
mov
mov
stc
in
adc
jle
sbb
dec
outsl
pop
jp
mov
ret
addr16
xor
cmp
jp
add
adc
inc
inc
add
scas
out
inc
fs
pop
fiaddl
xor
cld
je
add
jg
ficomps
dec
lock
enter
dec
insl
mov
call
pop
je
mov
xchg
mov
or
xlat
push
dec
cli
aas
push
push
and
cltd
dec
push
xlat
jg
xor
xchg
inc
nop
cmp
loope
pop
pop
add
cmp
fisubl
frstor
jne
or
fadd
nop
and
pop
jp
push
mov
in
mov
dec
push
add
lahf
pop
in
cmp
inc
add
in
dec
inc
xor
clc
loope
xchg
mov
sbb
loop
mov
ret
scas
add
pop
insl
cmpsb
cmpsb
inc
nop
adc
loopne
cs
pop
push
xor
js
jge
add
test
sbb
fildl
lahf
test
push
add
sub
out
es
jecxz
cmp
jmp
cmp
movb
pop
or
jle
ljmp
dec
xor
addr16
pop
jg
popf
lcall
adc
sbb
or
sub
fsubrp
sbb
lahf
lods
mov
lods
push
push
mov
xchg
mov
pop
dec
push
pop
es
dec
icebp
sub
andnps
mov
jmp
popa
xor
sbb
sarl
push
out
into
lcall
push
sbb
ss
cmpsl
fs
test
mov
adc
in
push
cmp
or
leave
cmpsl
push
xor
sbb
movsl
xchg
clc
sbb
mov
clc
clc
jno
add
sbb
pop
mov
lds
repz
pusha
out
adc
fcoms
fldcw
test
mov
mov
inc
ret
shll
js
add
fs
mov
inc
or
xchg
adc
imul
pop
hlt
mov
roll
mov
in
mov
je
jg
sbb
in
cmpsb
push
das
lahf
scas
jo
shlb
movsl
cld
lret
dec
xor
test
lock
jns
sub
hlt
add
addr16
in
incl
data16
mov
xor
repnz
std
push
decl
out
push
in
pop
add
fstl
mov
pop
push
cmpb
jno
push
imull
cmpl
movsb
lods
lcall
mov
mov
sbb
cli
iret
call
jb
add
push
mov
and
sub
jno
loope
inc
pusha
test
lods
pop
arpl
mov
cmp
call
xlat
and
mov
pop
cmp
ficompl
decb
rorb
int3
mov
jnp
cltd
pop
inc
adc
ss
pop
adc
incl
shld
lods
push
jle
jle
mov
cmp
lods
adc
loop
out
mov
js
out
lds
int
test
movsl
cmpsb
pop
cmp
adcl
push
adc
aas
scas
rcrb
shlb
adc
inc
adc
or
ds
jg
es
mov
mov
hlt
dec
sub
fldcw
mov
pop
das
or
dec
sub
das
mov
sbb
xchg
pop
cmp
push
gs
sub
xor
les
lods
pusha
dec
out
ret
or
inc
pop
icebp
pushl
jge
or
cmp
jb
push
push
loop
stos
xchg
aas
mov
movsb
movsl
rcrb
fisttpl
das
xchg
lea
xchg
cmpsb
cld
test
add
call
cmc
add
test
jmp
in
ja
add
push
sbb
scas
mov
cmc
jmp
sub
xchg
outsb
mov
or
sub
fs
ud0
add
add
sbb
ljmp
sarb
pusha
les
rcrl
imul
repnz
pushf
pop
jge
mov
dec
outsb
mov
or
repnz
rol
mov
dec
scas
hlt
lcall
aam
cmp
in
pop
sbb
push
scas
add
inc
sbb
xorb
and
outsl
insb
mov
int3
add
cli
stos
cwtl
jle
push
dec
aas
loop
test
mov
loop
and
ss
and
xchg
cmpl
and
mov
lds
pop
push
xchg
mov
outsb
xchg
push
das
add
test
fadd
out
pop
or
lock
pushf
or
popf
cmp
push
pop
xchg
pop
xchg
pusha
cs
pop
notl
loop
dec
pop
mov
xor
rorl
test
shlb
lods
shrl
sbb
cmp
add
outsb
pop
sbb
jbe
mov
sbb
cmp
jnp
fdivr
or
sbb
xchg
lcall
testb
loopne
add
pop
stos
jl
insl
jmp
outsb
add
or
and
repnz
and
jle
dec
movsb
mov
out
sbb
cs
push
sahf
sbb
call
scas
and
inc
dec
jns
xchg
xchg
mov
pushl
inc
bound
into
ljmp
icebp
lds
xchg
mov
adc
or
ficoml
add
push
fcoml
jae
inc
pop
inc
ss
pop
aam
push
pop
push
movb
rcll
mov
jp
imul
ljmp
rorb
dec
cmovno
push
out
out
iret
rorl
imul
je
push
add
test
inc
mov
dec
jne
cmp
jmp
outsl
ljmp
adc
mov
inc
addl
cmp
mov
pusha
lsl
pop
push
or
lods
jno
adc
cmpb
cmp
and
mov
add
jb
je
or
push
shll
out
jp
mov
sahf
test
lea
repz
xchg
je
adc
mov
int
jne
cmp
mov
xchg
push
cmp
aas
adc
out
xor
js
push
sbb
or
int3
ret
inc
mov
fbld
inc
lods
sub
jge
jae
mov
aas
sub
add
movsl
gs
jg
icebp
sbb
aad
adcl
rcrl
cmc
mov
scas
pop
sahf
jecxz
bound
dec
or
cmp
movsb
sbbl
adcl
inc
jecxz
mov
push
or
cli
ljmp
xchg
ret
push
cmp
dec
pop
add
test
sar
incl
push
dec
dec
lret
jne
dec
add
fldt
xor
inc
sbb
cmp
xchg
leave
out
clc
push
add
punpckhdq
mov
in
mov
pop
hlt
mov
xor
es
loope
aas
mov
and
jmp
inc
add
or
jle
push
sub
push
sti
icebp
bound
sub
mov
pop
push
jne
add
add
test
lret
lcall
sub
add
sahf
mov
addr16
test
mov
dec
mov
fildll
dec
jno
icebp
mov
into
xchg
pop
sub
cltd
pop
pusha
lods
lcall
or
cmpsb
and
or
mov
dec
imul
xchg
cmpsb
sbb
fisubl
push
mov
cmp
adc
loopne
jmp
mov
push
mov
mov
test
cli
sar
mov
push
mov
mov
jmp
fnstcw
pop
into
push
pop
inc
ret
add
shufps
mov
cld
aas
test
add
loope
es
das
fdivp
xor
pop
pop
bnd
rcrb
loop
push
xor
mul
mov
mov
xchg
or
mov
mov
rcrl
jne
pop
sbb
and
mov
sbb
arpl
inc
adc
pop
pusha
pop
or
xchg
xor
pop
xor
push
ds
cmpb
xorl
or
mov
cmp
sbb
mov
or
std
jge
pushf
mov
and
mov
cli
jns
cvtps2pd
add
mov
push
aad
and
add
dec
int
pusha
movsb
scas
cld
cs
cmp
cli
mov
jg
push
push
jno
mov
sarl
add
xchg
jnp
xor
cwtl
lds
xlat
xchg
dec
call
jl
sub
cmp
sarb
popa
xlat
push
and
sahf
adc
xchg
lahf
ret
inc
dec
jmp
int3
xchg
loope
daa
inc
fs
insl
subb
or
sbb
pop
daa
or
add
dec
mov
lahf
fcmove
pushf
icebp
or
ja
mov
js
ret
out
cmp
sbb
push
push
cmp
push
sub
push
popl
aas
or
push
lea
das
clc
xor
or
sbb
push
sar
sbb
mov
lret
jl
sahf
clc
xchg
jle
inc
xchg
xor
loope
and
loope
movsb
sub
ret
mov
or
mov
movsl
mov
mov
movsb
dec
or
gs
fildll
cmpb
mov
filds
sbb
into
mov
jns
xor
fildll
dec
sbb
subl
mov
aam
push
lock
rcll
jp
popf
xchg
cmp
int3
scas
lea
ds
lret
jl
addr16
dec
inc
or
mov
xchg
cmp
shlb
mov
sbb
andb
push
lea
ds
stos
mov
daa
add
sarl
lea
ds
mov
or
call
add
popf
hlt
push
shrl
out
mov
and
pop
xor
cs
insb
jbe
in
test
mov
inc
mov
stos
jp
cld
sub
mov
adc
lock
in
inc
hlt
xchg
jle
dec
pop
jo
and
add
push
mov
jp
push
and
fwait
mov
or
icebp
xchg
mov
loop
arpl
xchg
dec
cs
or
je
push
lahf
mov
in
sub
or
cwtl
pop
mov
pop
mov
jg
inc
inc
xchg
rcr
push
out
insl
movsl
push
popf
xor
xor
jo
dec
mov
imul
fs
add
sbb
sub
cli
xor
jle
sub
and
daa
movsb
xor
cmp
inc
fwait
mov
insb
or
cmp
xchg
test
pop
and
inc
add
and
mov
lret
push
xorb
rep
mov
add
cmp
lret
sarb
popf
or
mov
cmpsl
ds
scas
jge
jle
les
mov
mov
repnz
jmp
nop
xor
mov
jg
inc
ret
test
or
or
sbb
rcr
popl
mov
inc
mov
test
lahf
mov
and
or
adc
mov
or
rcrl
mov
and
ficoms
jbe
fwait
adc
sbb
enter
mov
cli
jno
je
sub
mul
sub
mov
adc
call
and
dec
or
out
pop
idivb
outsl
sbb
gs
or
inc
xchg
sbb
add
or
subl
mov
mov
inc
push
addb
xor
nop
mov
or
or
rcll
stos
sub
xchg
lret
jp
adc
cmpb
and
sahf
insl
into
sahf
cwtl
cltd
mov
push
lds
mov
add
push
xchg
fwait
into
or
pop
ds
cmc
xor
mov
cli
jo
mov
adc
imul
adc
ja
add
rol
dec
pop
js
add
add
lret
rclb
add
addps
out
insl
bound
dec
pop
insb
bound
or
dec
xchg
sub
mov
bound
push
dec
mov
push
mov
add
and
sub
adc
sub
mov
or
sbb
pop
aaa
lahf
push
sbb
push
sub
mov
jecxz
mov
aad
dec
pop
sub
pop
dec
adc
or
jg
into
icebp
push
inc
es
les
dec
jecxz
sbb
or
rcll
xchg
sbb
sbb
adc
push
adc
leave
mov
jb
jmp
pop
int
stos
fisubrs
sub
je
jecxz
pusha
stos
nop
dec
aam
fucomip
mov
cmp
pop
and
mov
add
out
rcll
mov
popl
adc
fadd
mov
adc
jl
mov
loop
pop
push
test
push
repnz
sub
in
xchg
pop
xchg
sub
push
icebp
movsb
ljmp
mov
repnz
imul
lcall
ljmp
popf
sbb
shl
out
pop
bound
in
add
mov
inc
inc
dec
inc
shlb
aaa
add
je
push
add
adc
fisubrl
dec
mov
pop
xchg
int3
sahf
add
in
push
add
into
sbbb
mov
xor
add
in
sbb
roll
adc
sbb
jg
xor
aaa
hlt
inc
push
pushw
mov
data16
pop
sub
mov
lea
scas
add
mov
jae
mov
xchg
shrb
out
inc
jmp
rorl
das
mov
out
and
add
sahf
icebp
les
cmp
pop
xlat
or
je
push
lock
adc
aad
insb
xchg
nop
ss
inc
adc
lock
shll
dec
jne
mulb
test
add
sub
push
pop
pusha
mov
es
push
and
popl
nop
push
test
clc
jbe
data16
pop
dec
adc
xchg
xchg
adc
ja
push
jmp
pop
aas
pushf
cmp
int3
pusha
pop
sti
adc
mov
xchg
cmp
xchg
add
test
shr
filds
lock
aad
jmp
test
aad
mov
jp
jmp
cmp
add
jl
jbe
add
jno
mov
mov
or
jo
popf
mov
and
xorl
lock
sub
xchg
scas
in
push
jl
stc
ret
lds
cmpsb
or
or
push
add
rcll
xchg
add
mov
popa
mov
mov
cli
adc
add
mov
test
dec
xor
cltd
stc
insl
pop
adc
js
icebp
push
rclb
cld
stos
and
out
popw
popa
push
leave
push
xchg
mov
sub
add
sarb
pushf
inc
sbbb
add
loope
cmp
cmp
cmp
lods
add
mov
push
ss
outsl
mov
push
sahf
das
jg
lahf
pop
mov
in
shl
rcl
pusha
mov
lcall
lods
jg
test
push
bound
lret
and
lret
ja
add
push
pop
outsb
jl
mov
repz
sbb
add
ljmp
clc
iret
repnz
sbbb
inc
jno
jmp
lahf
clc
test
push
add
cmp
xor
repz
push
enter
jae
mov
or
push
cmc
dec
cmp
jmp
loop
cmp
fs
fs
and
das
rclb
int3
dec
dec
test
mov
sbb
mov
mov
and
fisubrs
inc
push
xchg
lret
cmp
sbb
pop
xor
add
mov
pushl
lea
xor
add
jbe
add
xchg
xchg
shl
sti
push
sahf
mov
mov
xor
movsb
sbb
in
and
push
xor
mov
or
fimull
nop
or
mov
cmp
xor
add
js
dec
adc
add
add
mov
sub
mov
aas
lock
or
repz
xchg
insl
xchg
adc
inc
inc
add
xor
adc
dec
lock
mov
loopne
push
lret
popf
es
data16
sarb
adc
jecxz
nop
dec
mov
aad
push
add
addr16
je
adcb
imul
sbb
enter
lods
adc
mov
push
dec
sbb
pop
lea
add
rclb
and
movsb
mov
imul
addb
jo
addl
loope
bound
dec
mov
push
std
push
cs
fistpll
cwtl
outsb
push
inc
sub
bound
sub
lds
push
ljmp
sub
cli
dec
mov
cmpl
cmp
pop
lret
bound
push
inc
mov
ret
push
jmp
xor
lods
imul
mov
cltd
enter
mov
or
mov
aas
sbb
and
xlat
mov
repz
jg
out
jp
subb
mov
nop
lcall
js
lahf
fcoml
jmp
push
adcl
int
popa
or
jns
cmp
outsl
aam
sub
jnp
sarl
in
addr16
mov
movsb
jmp
mov
adc
inc
aad
mov
push
push
mov
jl
fwait
push
dec
sbb
push
sub
cmpb
cmp
mov
dec
adc
pop
lods
xchg
dec
add
insl
or
jbe
in
bound
aaa
xor
fmuls
adc
outsl
jns
and
mov
xor
lret
pop
and
jno
dec
cmpsb
call
and
mov
hlt
aaa
mov
das
mov
lock
idiv
outsl
addb
xchg
es
cmp
xor
push
add
cmp
movsl
sub
test
or
test
cld
inc
dec
mov
loopne
adc
mov
sub
shll
pop
mov
pop
dec
mov
sbb
shlb
jb
sub
push
call
movsl
outsb
pop
cmpsb
jecxz
icebp
bnd
cld
push
sti
jle
fsubp
push
add
mov
pop
mov
fbld
xorl
std
lret
sbb
nop
loope
add
in
cmpsb
add
jbe
inc
insb
loopne
loopne
cli
add
push
loopne
dec
int
arpl
xchg
out
imul
aad
push
cwtl
sub
je
vxorpd
mov
sti
shlb
add
call
ret
or
pop
inc
daa
mov
mov
pop
mov
mov
or
orb
push
std
insb
or
cli
sub
scas
sbb
mov
add
lods
jno
cmpb
add
faddl
mov
add
ror
popl
dec
jl
mov
xorl
sbb
push
cwtl
adc
pop
enter
scas
add
mov
std
push
sub
inc
push
fsubrs
testl
pop
push
scas
sub
add
adc
dec
mov
or
push
jnp
lcall
stos
pop
into
addl
add
jne
mov
push
sub
cmpsl
jne
ds
or
jg
push
and
aaa
push
pusha
push
mov
and
mov
push
insl
lods
sbb
fcompl
jo
movb
shlb
mov
das
dec
into
icebp
or
filds
pop
mov
jnp
mov
push
sbb
lds
cmpsb
nop
sub
mov
cmpsb
iret
stc
test
adc
and
mov
fbstp
mov
cmp
cmpsb
fidivrl
repnz
sbb
cltd
inc
test
adc
sbb
xor
sub
mov
popf
cmpsl
aaa
rolb
int3
rolb
lock
decl
int
roll
and
aas
adc
fincstp
jo
xchg
or
adc
push
mov
xchg
sub
xchg
mov
and
jb
bound
dec
repnz
test
cmp
mov
inc
aas
xchg
ficoms
cld
repnz
cmpsl
adcl
sbb
mov
push
cld
aas
mov
or
xchg
inc
lds
push
pop
push
insb
jmp
add
clc
add
push
inc
fwait
add
cmp
pusha
outsl
xor
pop
mov
inc
dec
add
sbb
mov
sbb
stc
insb
inc
sbb
pop
and
outsb
dec
dec
ds
inc
mov
aas
loopne
pop
scas
stos
inc
mov
jb
adc
loop
addb
imul
xchg
loope
and
scas
sbbb
push
xor
sahf
mov
shlb
fmul
pop
lahf
dec
test
adc
cmp
mov
xchg
mov
test
lret
sub
add
scas
jnp
lock
pop
or
cld
mov
sbb
xchg
xorl
sub
xchg
cmp
add
or
data16
mov
fiaddl
xlat
insl
jo
daa
ja
leave
dec
jae
adc
lock
std
movsb
cmp
stos
adc
add
in
dec
dec
rclb
pop
shl
dec
jp
inc
cmp
and
sub
xchg
les
div
inc
inc
enter
or
xchg
sub
or
pop
cmp
cmp
frstor
xor
sub
out
cs
mov
push
mov
popa
pop
xchg
mov
adc
inc
or
bound
jl
sub
scas
into
icebp
pop
inc
xchg
jmp
mov
sub
nop
sahf
int3
outsb
mov
enter
rcrl
push
mov
xor
xchg
arpl
jge
inc
test
pop
adc
lock
pop
dec
xor
add
and
fwait
adc
sarb
mov
lea
sub
rcrb
lcall
push
inc
xchg
popf
int
pop
sbb
pusha
mov
inc
popa
or
inc
adcl
clc
xorl
xchg
clc
nop
xchg
xchg
or
push
mov
mov
leave
ja
sbb
cmp
or
and
cmp
clc
nop
pop
or
clc
sbb
out
mov
insl
cmp
xor
lods
pushf
mov
cmpl
adc
and
out
lahf
lcall
aas
cmp
add
mov
cmp
xor
push
jo
xchg
sbb
push
dec
mov
cmp
xor
outsb
pop
into
adc
lret
push
mov
lock
jp
jg
addr16
das
cwtl
ret
mov
hlt
mov
inc
fs
enter
aad
rol
push
fwait
push
mov
adc
add
pop
lock
fbld
jo
dec
mov
push
mov
or
adc
add
jne
aad
jno
or
imul
outsl
loopne
cmpsb
ja
movsb
rclb
add
jl
loopne
inc
jecxz
xchg
insl
icebp
sbbb
cwtl
out
outsl
mov
sbb
incb
sub
scas
std
rcl
nop
dec
int
mov
adc
cmp
repnz
fistps
lret
int
jno
add
dec
ret
test
aas
enter
mov
xchg
jb
push
or
push
and
adc
ds
jl
test
insb
xchg
push
adc
ret
sbb
aaa
sub
jge
imul
cwtl
lea
lock
leave
add
aas
add
jp
fwait
and
fisubrs
lock
std
mov
cmp
adc
or
aam
xor
mov
add
ror
loope
cmc
imul
and
add
or
pop
test
popa
dec
fsubr
and
jl
sbb
cmc
sub
xchg
jns
push
mov
pop
lahf
cs
add
ja
cli
sbb
add
pop
incl
rorb
pop
addb
out
aad
xchg
loop
mov
adc
imul
lcall
cltd
pushf
and
push
mov
jg
jne
clc
xorl
aaa
sub
mov
aam
stos
shll
test
adcl
inc
sub
lods
add
in
fldl
sbb
mov
jg
test
outsb
fstps
inc
mov
jne
andl
aaa
cmp
fmuls
movsl
jle
lods
aas
pop
mov
loopne
mov
insb
pop
mov
xlat
arpl
sub
lods
ret
adc
xor
push
or
lods
inc
cld
jg
ljmp
or
sbb
mov
outsb
clc
lea
sub
movsl
and
cmp
inc
mov
mov
shrb
arpl
pop
sbb
add
pop
mov
mov
stc
mov
cmp
or
pusha
push
pop
pop
add
cmp
add
or
mov
cmp
and
mov
jmp
xor
test
dec
int
jg
xor
inc
repnz
enter
jo
push
mov
mov
fldl
stos
gs
xchg
orb
jl
es
xchg
inc
cmc
push
or
imul
addl
mov
pop
aas
fucomp
mov
decl
mov
ret
inc
imul
lcall
push
jne
push
or
dec
jnp
add
cld
das
fwait
rcll
sub
pop
mov
les
add
enter
mov
ljmp
rcll
test
cmpl
add
or
shlb
push
mov
movsb
notb
js
andb
add
jae
push
shll
cmc
sbb
pop
xor
out
mov
insl
insl
stos
outsl
pop
add
adc
test
add
hlt
add
in
fildll
sbb
es
add
stc
jnp
cli
das
and
xchg
aas
movsb
movl
mov
sbb
mov
cmp
lods
les
bound
aas
sahf
sahf
shrb
mov
mov
punpckhbw
imul
cmp
outsb
inc
inc
ds
lcall
and
iret
je
inc
or
fndisi(8087
inc
bound
xchg
sub
or
jg
icebp
inc
mov
out
jo
xlat
push
xchg
mov
add
es
andb
cmp
aas
in
mov
movsl
inc
stos
jno
pop
dec
inc
lret
mov
aad
in
pushl
xchg
mov
repz
jl
jbe
jmp
mov
sar
int
xchg
adc
add
add
xor
jmp
sbb
aaa
pushl
imul
cmp
lret
aas
iret
push
lock
mov
inc
lcall
pop
jb
mov
lcall
xor
call
popl
fprem1
add
inc
sbb
enter
and
lahf
cmpsb
out
decl
mov
sahf
jg
mov
mov
pushl
pushf
fildll
jle
stc
sahf
arpl
cli
test
test
lea
fisttpl
fdivr
jnp
cmpsb
mov
or
and
rclb
jmp
adc
lahf
outsl
lcall
pop
inc
inc
mov
shl
and
or
cmp
jbe
mov
hlt
aas
out
aam
iret
mov
jns
nop
add
lret
popf
adc
dec
outsl
xchg
xor
fisubrl
out
insl
xchg
lcall
rolb
inc
adc
aad
inc
lock
out
icebp
stc
sub
jbe
push
sub
pop
adc
loop
cs
push
out
orb
xchg
mov
push
and
inc
or
cmp
inc
clc
outsl
subb
mov
incb
fidivs
xor
pop
xchg
sub
aad
xor
inc
popa
pop
movsb
push
dec
cmp
mov
and
outsl
leave
fdivrs
mov
push
jl
mov
mov
ljmp
push
fidivrl
inc
sarb
jl
inc
adc
add
add
fistpl
fs
add
cld
movsl
add
push
mov
jg
jns
rcrb
jle
xchg
lock
xor
sti
icebp
cmpl
adc
add
xchg
inc
outsb
push
pop
enter
cld
stos
out
dec
jecxz
decl
flds
mov
cltd
addb
jmp
jg
loope
mov
or
pushf
or
mov
adc
imul
jbe
bound
das
cmp
rcr
daa
push
xor
add
fcoms
sbb
sbbb
add
xlat
jle
pop
xor
aaa
ljmp
rclb
out
addr16
mov
add
idivb
push
mov
push
xchg
ror
call
out
add
mov
and
iret
push
inc
pop
idivl
stos
dec
pop
and
adc
pop
sub
add
push
cmp
jb
pushl
out
rol
push
xchg
mov
adc
sbb
push
daa
or
sahf
pop
sub
mov
add
xchg
pop
shl
sbb
mov
fdivp
icebp
enter
das
fldt
movsb
rol
cs
mov
lahf
add
clc
dec
mov
daa
pop
mov
pop
jmp
decl
push
mov
jo
add
outsb
jne
gs
stos
mov
xchg
fisubrl
mov
or
pop
mov
pop
repnz
cmpsl
dec
mov
dec
xchg
and
loopne
mov
and
xlat
arpl
jbe
add
or
mov
jg
sbb
mov
dec
cmp
test
mov
mov
sub
sbb
mov
push
ja
and
xchg
dec
pop
xor
sbb
loopne
icebp
decl
in
inc
loopne
das
cld
cmp
ja
es
aad
pop
out
icebp
out
inc
mov
mov
or
xchg
push
insb
enter
shlb
pusha
xchg
clc
cli
pop
lret
cwtl
jb
jmp
loope
xchg
sub
jl
sarb
inc
pop
add
push
or
les
add
add
mov
outsl
shl
dec
jge
adc
push
dec
call
sub
xchg
das
das
cmpsb
nop
data16
outsl
outsb
or
fisttpll
lock
pop
sarb
mov
jle
call
pop
pop
cmp
call
pop
stc
insb
popa
cli
lds
xchg
push
stos
dec
mov
adc
jno
and
pop
xor
pop
add
outsb
xor
and
repnz
fwait
adc
push
inc
addl
sub
add
js
or
push
or
loopne
or
cli
daa
mov
xor
out
pop
std
stos
push
jnp
cmpsb
mov
test
imul
sbb
lock
inc
mov
jae
or
xchg
add
fwait
inc
push
add
jg
dec
cmp
add
push
loope
addl
push
add
lds
dec
add
rclb
cli
jb
aas
inc
lret
orb
cli
pop
bound
mov
cmpsl
lcall
cs
inc
orb
incb
lret
outsl
je
jmp
cld
movsb
adc
add
mov
or
sbb
hlt
call
add
aas
clc
loopne
sti
decl
xor
dec
mov
add
inc
out
add
mov
cmp
jecxz
or
push
inc
mov
or
fmull
add
push
xchg
clc
add
fs
dec
sbb
andl
cmp
sbbl
fisttps
xchg
cli
dec
testl
cltd
insl
lcall
aam
cld
int
test
add
or
pop
and
enter
les
and
xchg
or
pop
cli
scas
out
int3
pop
cmpsb
dec
adc
insl
bnd
imul
loop
push
popa
mov
pop
lret
or
aam
ficoms
fdivl
in
ljmp
xchg
sbb
andl
test
cmpsb
push
sub
push
mov
push
nop
cmpsb
jp
outsl
add
add
cli
jg
adc
loop
addr16
cmp
cmpsb
sub
add
pop
sbb
test
insl
sbb
mov
or
shlb
ret
loop
shr
xor
or
les
aaa
incl
shlb
jge
pop
adcb
int
pop
or
stos
and
xlat
or
add
inc
add
and
cmp
sahf
repz
enter
mov
xchg
adc
scas
adc
icebp
sahf
inc
jne
decl
loopne
push
jne
std
lret
dec
sub
dec
sbb
insb
inc
gs
jbe
aaa
mov
pop
test
xor
xchg
imul
outsl
sarb
shrl
xor
int
shll
cmp
or
int
add
sub
dec
cld
pop
aad
lret
movsb
push
mov
movsb
fstl
push
js
testl
add
sbb
push
lock
xor
unpcklps
shrb
inc
push
adc
scas
ja
fldl
pop
mov
adc
pusha
insl
and
subb
add
adc
lock
and
pop
repz
stos
sub
aad
dec
cmp
or
xor
xorb
mov
loop
push
pop
mov
fs
pop
dec
call
idivb
cmpsb
adc
psrlw
xor
outsl
add
pop
add
mov
sti
lret
or
cs
or
icebp
call
mov
sub
in
and
and
xor
call
icebp
jl
fisttpl
add
das
jns
popa
jg
cmp
into
mov
jg
push
add
inc
sbbl
scas
or
and
inc
cwtl
sbb
clc
push
sub
xchg
aam
pop
icebp
lcall
mov
idivl
inc
push
mov
pop
rolb
jmp
ret
call
std
inc
and
insb
fidivs
cmpb
dec
or
jge
pop
stos
xor
and
in
aas
push
add
cmp
jmp
xchg
add
jmp
test
cmp
das
lock
or
inc
push
or
or
mov
add
sbb
and
ret
sub
mov
scas
mov
xchg
es
inc
adc
adcb
orb
add
xchg
out
test
bswap
dec
dec
xor
inc
inc
inc
mov
ljmp
ret
lea
mov
loop
push
sub
fadds
cmp
cmp
lahf
xor
rcrl
cli
push
outsb
sti
sbb
push
and
mov
and
out
imul
pinsrw
aas
clc
jb
lods
sbb
sbb
adc
enter
mov
lahf
push
icebp
ret
mov
or
jmp
js
popf
dec
sbb
xor
jmp
pop
ret
lret
mov
pop
xchg
xchg
jg
xchg
dec
inc
aad
imul
mov
insl
jb
xor
xchg
int3
sbb
add
fsts
and
mov
mov
push
outsb
movsb
xchg
icebp
add
and
data16
mov
ret
mov
add
es
push
fidivrs
sbb
flds
ror
enter
or
push
adc
dec
mov
lods
xor
shrl
mov
loop
xchg
jp
xor
cmp
jge
ss
sbb
arpl
xor
sbb
inc
and
insb
jg
insb
decb
or
fsubl
or
or
adc
lods
clc
insb
cli
dec
les
mov
push
cli
pop
fimull
sbb
shl
scas
add
inc
push
push
fmull
cltd
nop
push
xchg
lret
loope
sahf
aas
dec
test
or
pushf
shl
decl
push
mov
ljmp
cmpsl
iret
loopne
mov
sub
or
push
fs
popa
mov
fsts
mov
xchg
pop
dec
add
jo
push
adc
scas
shlb
add
test
and
loopne
inc
loope
mov
sbbb
repz
sbb
loope
or
push
dec
cmp
je
mov
das
lock
cmp
mov
mov
ljmp
mov
xor
call
fcoms
movsb
add
lcall
xor
dec
pusha
loope
jb
repz
adc
scas
fbstp
mov
lret
decl
or
jo
pop
daa
cmp
xor
pushf
fcmovb
pop
pop
pop
outsb
sbb
xchg
js
pop
inc
insb
sahf
adc
dec
mov
in
inc
fadds
push
or
inc
xchg
pop
orb
aad
sub
sub
cmp
scas
cld
cmp
dec
or
add
int3
lahf
into
add
ljmp
mov
jo
xlat
inc
jp
adc
inc
sub
dec
hlt
push
and
pop
cmp
jbe
xlat
sub
lret
stos
jne
push
cvtdq2ps
aaa
push
rcrl
dec
and
test
jle
repz
addr16
push
lods
push
negb
sub
dec
add
repnz
pop
arpl
or
push
ret
les
popf
or
dec
loopne
sbb
addb
out
and
cmp
inc
pop
addr16
lds
push
inc
xchg
add
mov
das
jmp
aaa
loop
adc
adc
or
outsb
dec
xchg
xchg
xor
xchg
dec
loope
outsb
xor
mov
add
aaa
call
dec
sahf
xor
icebp
mov
inc
fucomip
mov
inc
pop
mov
pop
movsl
xchg
xacquire
or
mov
aam
xchg
ljmp
push
dec
shrl
sbb
scas
dec
push
xchg
cwtl
xor
fadds
mov
shrb
loopne
mov
inc
push
shl
gs
call
push
cli
adc
jle
adc
cmp
xlat
sbb
mov
scas
sub
fs
subb
daa
push
fnstenv
lea
dec
push
das
mov
add
mov
sbb
xchg
xor
outsl
in
adc
dec
push
ret
sbb
and
sti
sub
or
cmp
push
add
icebp
cli
dec
pop
cwtl
inc
dec
imul
or
add
mov
repnz
and
sbb
xchg
or
out
arpl
adc
adc
and
mov
adc
ret
jbe
imul
inc
jl
jg
inc
scas
pushf
lcall
ljmp
inc
jmp
shll
lahf
dec
shlb
mov
in
stc
shlb
add
in
and
jp
push
lret
adc
xchg
inc
mov
push
leave
inc
scas
enter
in
pushl
sbb
lret
js
loop
pop
int3
outsl
lods
add
mov
cmpb
dec
call
je
popa
rcrl
das
add
ds
mov
push
mov
cli
cmp
pushl
push
xor
fwait
loop
test
mov
repz
push
push
sti
dec
adc
inc
bound
lret
in
ret
sub
and
rcl
mov
push
filds
add
mov
add
in
bound
decl
pushf
addl
or
dec
jnp
mov
fildl
mov
arpl
incl
push
or
cmp
dec
out
mov
pop
inc
rcll
or
out
das
add
pusha
sbb
mov
lcall
mov
addr16
or
shrl
test
pop
outsb
repnz
negb
daa
add
sbb
mov
aam
or
inc
mov
in
pop
jp
sbb
enter
pop
pop
push
sbb
loopne
lea
and
das
xchg
loop
std
pop
add
or
shrb
mov
cli
jmp
push
xorb
test
es
ljmp
ret
xchg
adc
sbb
xor
pop
mov
dec
cmpsb
out
inc
cli
xchg
xlat
push
and
mov
xchg
mov
adc
jle
outsl
mov
sub
jl
push
xor
pop
mov
jle
fs
add
dec
fsub
inc
cmpsb
sahf
pop
sub
into
add
fbld
cmp
bound
inc
test
scas
lods
push
aaa
cld
push
nop
push
mov
add
add
xor
and
shl
inc
mov
out
mov
add
hlt
sub
ja
inc
sahf
scas
test
subl
xchg
inc
outsl
sarb
stos
testb
and
dec
ljmp
sbb
xlat
mov
xor
jne
shrl
icebp
call
aaa
nop
mov
add
icebp
pop
ljmp
fsubl
pop
and
out
fiadds
fdiv
test
rorb
mov
push
add
loop
sub
lods
fimull
out
dec
push
enter
cmp
ret
sbb
add
int3
lock
fwait
out
je
mov
inc
call
push
mov
aad
in
shlb
lcall
call
test
xchg
in
repz
cs
or
lea
lock
or
dec
or
mov
movsl
mov
pushf
xchg
dec
pop
dec
std
mov
pop
push
js
xchg
nop
cs
sahf
enter
pop
leave
cli
test
sti
or
jp
std
jmp
add
aam
or
in
xor
pop
scas
mov
inc
lcall
cltd
addl
fiaddl
in
jbe
loopne
jb
lods
sbb
fistpll
pop
mov
sbb
cmpl
repnz
lea
lock
test
lret
push
add
inc
mov
mov
pop
mov
cld
shlb
enter
push
lcall
inc
outsb
mov
cli
add
fnsave
and
loopne
push
mov
add
jg
mov
lea
sbb
adc
loop
push
add
adc
outsl
mov
test
add
pop
ret
sbb
leave
std
shlb
add
push
scas
adc
mov
in
jmp
and
inc
mov
xor
aaa
jbe
sub
stos
add
push
and
cmp
mov
push
ficomps
push
push
push
or
sub
inc
mov
sti
xchg
add
mov
xor
push
out
vmovapd
sbb
rol
clc
lea
stos
mov
push
insb
push
addl
add
cmpl
jge
or
cmpl
icebp
out
sbb
xchg
jg
xor
jae
inc
jae
inc
lea
bound
notl
clc
or
cmpxchg
adc
insb
shl
cmp
jecxz
push
pop
ficomps
xor
flds
inc
jmp
push
and
jno
pop
mov
xchg
push
lcall
loope
call
in
push
mov
push
pop
ljmp
or
mov
scas
and
adc
pusha
push
cmp
rcll
incl
inc
add
ret
aaa
inc
pop
mov
pop
xor
pop
and
hlt
mov
cmc
cld
fildl
lret
mov
mov
std
adc
inc
mov
xlat
xor
push
mov
les
sbbb
mov
dec
inc
ss
sbb
xchg
ret
sbb
push
or
out
shl
jecxz
pusha
nop
mov
push
ret
out
xor
movsl
push
scas
mov
std
cmp
nop
add
sub
dec
inc
imul
insb
clc
or
push
cld
adc
mov
push
js
adc
icebp
xchg
ljmp
andb
call
cmp
mov
xchg
xchg
cmp
and
inc
or
jbe
or
cmp
mov
enter
jne
scas
jl
jbe
rorb
sbb
push
sbb
insl
arpl
icebp
dec
xor
add
lcall
aaa
adc
or
add
sti
ss
mov
add
int3
hlt
ret
mov
add
add
or
lcall
lds
pop
adcb
dec
das
data16
sub
ret
sbb
or
adc
aad
pop
sub
and
aam
add
lock
inc
push
mov
xchg
lcall
arpl
rolb
jl
sbbl
in
fimuls
decb
push
mov
lcall
cli
inc
add
mov
mov
jmp
mov
push
inc
lahf
pop
and
rcrl
pop
mov
xor
out
push
sbb
pusha
push
sub
js
mov
adc
add
imul
mov
xor
mov
dec
add
aaa
fimull
mov
and
rclb
add
xchg
rolb
les
add
pop
cli
sbb
inc
cld
and
in
movsb
jbe
jae
jg
mov
mov
cli
push
insb
xor
loop
hlt
cwtl
andl
adc
mov
sub
and
add
inc
jno
int
sbb
mov
ret
cmp
pop
leave
movsl
push
jbe
mov
int
mov
add
incb
add
rol
add
inc
and
xchg
dec
mov
sub
push
add
mov
sahf
add
pop
cmpl
or
jbe
cmp
and
iret
jle
popl
rcr
notb
sub
inc
data16
rcll
aam
out
xor
addr16
lcall
cmp
cwtl
scas
jmp
and
jo
jbe
outsl
decl
hlt
orb
jmp
push
es
inc
arpl
dec
mov
popf
aam
sub
mov
lahf
ds
roll
jp
add
push
mov
mov
inc
cmp
and
sti
pop
add
out
loopne
cld
pushl
pop
loopne
sahf
out
addb
add
iret
bound
subb
xchg
xor
push
lds
xor
dec
jl
ljmp
das
icebp
jg
popa
cmpsl
pop
in
cmp
pushf
mov
outsl
add
jae
clc
scas
movsl
sub
fmuls
stc
add
add
jge
lcall
arpl
fnstsw
inc
insl
outsl
das
hlt
xor
cmp
push
xchg
iret
add
lods
jae
lods
xchg
test
out
add
inc
aas
lock
lds
pop
pop
or
es
sbb
or
mov
or
mov
in
lds
ljmpw
aas
aam
cmpsl
add
repz
pop
imul
insl
je
test
hlt
lock
add
and
jmp
or
ret
sub
push
adc
jmp
insb
cld
lea
cwtl
mov
ja
and
mov
push
addb
sbb
lret
loop
dec
out
push
sub
add
mov
in
decl
dec
push
and
pop
jne
pop
xchg
push
jle
call
mov
push
mov
mov
push
sub
mov
das
inc
adc
jmp
xlat
inc
stc
stos
sub
andl
add
pop
cli
lea
sbb
jg
je
mov
arpl
ficoms
loope
cmp
je
cmp
adc
std
cmp
mov
call
mov
sub
in
sub
cmp
lcall
loopne
xchg
aaa
andl
daa
cld
nopl
cs
push
gs
ja
sub
dec
adc
push
cld
shrb
outsl
dec
ss
mov
and
les
adc
std
lock
aad
xor
je
inc
and
into
sub
stos
test
in
clc
inc
arpl
cld
outsl
xchg
xor
std
mov
pop
cld
xor
pusha
fs
cs
adc
dec
or
jg
xchg
add
orb
add
insb
inc
loope
pop
jb
push
push
stos
test
xlat
cli
push
sarb
scas
add
adc
insb
jnp
jg
in
add
mov
or
sub
xorl
fists
vandnpd
fisttpll
mov
mov
lods
subl
insl
test
inc
loopne
mov
mov
les
cs
mov
inc
pop
nop
rol
push
mov
add
lods
lcall
dec
daa
add
mov
sbb
and
cwtl
xchg
cmovbe
push
das
aam
les
cld
cs
lcall
loopne
xchg
in
stc
sbb
ret
push
js
icebp
dec
pop
clc
mov
pop
pop
sbb
fisttpll
fwait
out
push
xchg
stos
cld
lods
inc
mov
daa
sahf
adc
mov
mov
sbb
pop
lea
mov
decb
incl
aam
lret
or
lret
jp
loop
pushl
add
shlb
ja
rcrb
dec
mov
enter
add
lret
pop
jno
and
insl
das
sub
jo
jo
sbb
ljmp
flds
jmp
mov
sbb
jns
mov
jg
out
cmc
nop
mov
mov
test
inc
into
pusha
add
inc
push
or
das
mov
stos
les
insb
mov
dec
sbb
inc
cmp
test
data16
jle
out
gs
sbb
nop
aas
inc
xor
mulb
movl
loopne
jg
mov
adc
xchg
sbb
inc
adc
jno,pn
fisttpl
mov
lret
xor
ljmp
xchg
sub
ret
pusha
lea
mov
push
push
xor
add
lret
xor
fmul
imul
or
push
mov
xchg
pushf
inc
pop
ljmp
push
inc
mov
iret
xchg
mov
rorl
enter
fcmovb
push
inc
or
and
and
push
or
pop
jge
rcr
mov
and
pop
and
pushl
je
sbb
jne
inc
ljmp
jo
mov
add
js
pop
pusha
fists
cld
loopne
loop
fcoms
pop
out
push
jle
movsb
pop
or
or
fidivl
jge
lret
addb
dec
push
fwait
mov
insb
adc
or
hlt
rcrb
popf
scas
jecxz
call
scas
adc
or
testl
jp
icebp
ret
lret
dec
xor
push
not
fwait
sub
xchg
inc
pop
xchg
pop
iret
pop
jge
push
insb
fs
push
addr16
imul
shlb
sub
nop
lahf
lods
aad
bound
inc
sqrtps
adc
xchg
insl
popa
jae
mov
call
add
push
mov
cmc
js
inc
pushl
jg
cmp
out
mov
roll
or
push
pusha
pop
test
ret
lahf
testb
xchg
inc
jp
and
cmp
into
test
leave
and
clc
sub
add
dec
add
mov
add
add
or
lods
mov
int
or
popf
bound
loopne
loope
in
sub
or
les
lock
mov
loop
push
adc
adc
pop
addr16
adc
adc
lock
add
shll
xchg
fs
inc
pop
mov
xorl
add
or
es
nop
jle
push
jae
mov
push
pushf
movsb
push
incb
push
push
push
test
jg
adcl
lods
lcall
cmp
dec
adc
cmpb
sbb
clc
jg
fcompl
les
in
pushf
loop
adc
jno
dec
ja
into
aas
xchg
out
js
pop
aam
outsb
mov
mov
mov
je
push
xchg
inc
mov
add
addl
cmp
ja
fwait
lea
sub
test
aad
pop
dec
test
mov
out
aaa
sbbb
dec
push
test
jge
xor
adc
adc
xchg
in
and
push
and
decl
fistpll
sbb
loope
or
das
cmpl
xor
mov
pop
repnz
and
sbb
cmp
or
mov
repnz
ja
lock
leave
inc
fsubr
and
aad
clc
bound
push
pop
xorb
mov
repnz
dec
ret
xor
shrb
ret
adcb
negl
sar
call
push
mov
popf
insl
pop
xor
fidivs
inc
scas
push
popw
or
pusha
sbb
int3
bnd
inc
adc
sub
cmpsb
nop
or
mov
leave
add
lods
xchg
jne
mov
loopne
push
pusha
xorb
sub
sar
mov
dec
ret
pushf
mov
jp
xchg
rolb
xchg
shr
mov
xchg
xor
std
ljmp
out
cmp
pop
mov
add
nop
out
dec
popl
popa
push
inc
mov
push
das
shll
push
in
xchg
cmp
sub
push
adc
js
xorb
out
xor
sbb
jecxz
add
aaa
add
and
mov
ficoms
test
adc
test
xor
inc
push
adcl
loope
cmp
pop
cli
sbb
adc
fistl
sbb
into
cli
cmc
pop
xchg
jmp
test
fcomp
js
ljmp
fcmovnbe
mov
pop
add
or
test
data16
icebp
push
sub
push
data16
mov
push
add
les
addr16
stos
mov
or
test
xor
inc
nop
jmp
xchg
ret
and
call
sbb
jle
push
dec
mov
adc
inc
sahf
mov
call
lret
jne
jmp
mov
mov
dec
mov
test
jg
cli
adc
ret
and
or
int3
sbb
inc
sarl
cmp
mov
mov
jno
inc
xorl
ret
xchg
pop
inc
in
pop
sub
xorl
aas
ds
cld
push
fmulp
out
cmp
arpl
or
cwtl
daa
jecxz
jmp
jbe
mov
add
mov
loopne
jecxz
movsl
test
fs
lea
inc
push
and
mov
add
push
xchg
lds
loopne
mov
or
mov
pop
inc
jno
incl
pop
sub
xor
jbe,pn
jmp
pop
inc
adc
sub
add
jle
icebp
daa
mov
push
xchg
scas
adc
cmovge
inc
es
sub
pop
ret
inc
bound
negb
test
sub
fs
outsl
jmp
adc
pop
mov
movsb
loopne
lahf
mov
add
mov
cmp
lock
add
aas
cmp
mov
fcomps
cld
sbb
push
xchg
push
xchg
clc
lds
and
icebp
fsubrp
mov
mov
xchg
lock
mov
mov
inc
dec
add
addr16
fcmovb
jl
andb
nop
cmp
mov
jmp
add
mov
and
jle
roll
sbb
inc
mov
scas
lahf
push
arpl
inc
sub
cmp
xor
mov
cli
jmp
dec
mov
subl
adc
inc
and
xchg
and
push
pop
jo
repnz
sahf
aas
insl
aas
dec
xchg
testb
cmc
mov
or
or
add
insl
mov
push
test
push
jle
add
cli
pop
push
cwtl
clc
hlt
aas
inc
ljmp
xchg
push
lds
cmp
dec
leave
lret
fdivs
mov
orl
cmpsl
jbe
cld
or
les
inc
jecxz
out
adc
and
bound
cmp
add
out
and
mov
pop
xlat
push
shrl
fincstp
fcompl
cmp
add
pushf
cli
imul
pmullw
test
rcll
jno
jno
std
es
hlt
fistpll
add
push
pop
in
arpl
pop
jge
push
dec
jns
cmp
xor
cmp
mov
fistl
inc
or
sbb
cmpsl
and
in
icebp
ljmp
cmpl
cmp
dec
pop
inc
or
sbb
add
and
dec
lods
push
cmp
and
test
lds
push
add
incb
test
inc
arpl
insb
rcrb
mov
sub
xchg
out
cli
mov
loop
cmp
inc
push
push
sbb
xchg
out
add
or
cmpsb
fs
lcall
outsw
mov
push
das
mov
cmp
stos
and
mov
mov
add
scas
bnd
shl
sbb
mov
inc
outsb
jne
test
stos
jns
aad
es
js
dec
xchg
jl
add
push
mov
pop
and
adc
cwtl
push
clc
ficoml
mov
or
arpl
hlt
mov
pop
shlb
pop
in
lods
fidivs
mov
lcall
jp
roll
or
add
mov
mov
adc
sub
push
xor
add
mov
mov
sub
push
xor
and
adc
push
push
xor
mov
cltd
nop
dec
push
xchg
iret
cli
test
and
cmp
jmp
add
sbb
mov
sub
pop
inc
xchg
in
xchg
mov
rcl
xor
and
add
dec
leave
add
inc
pushf
sbb
in
outsl
mov
roll
jno
std
gs
jecxz
mov
mov
repnz
xchg
add
shll
sub
push
mov
and
dec
fildll
std
rcrl
add
jle
push
mov
nop
xlat
out
leave
jne
adc
addl
pop
inc
in
dec
andb
ljmp
cli
out
fidivs
enter
add
pusha
jle
pop
jo
add
jnp
and
push
or
aas
fdivp
or
mov
ret
cmp
mov
and
ljmp
xorl
adc
cmp
cs
mov
add
push
jp
pop
jg
scas
gs
mov
lods
push
lods
jo
jecxz
insl
cltd
out
or
daa
jns
inc
jl
add
dec
popa
and
adc
push
aas
loope
mov
mov
push
sub
pop
lret
jp
mov
mov
ret
dec
test
and
ret
xchg
scas
mov
out
aad
add
and
or
inc
aad
ljmp
dec
jge
adc
mov
or
push
sub
es
cmc
jge
mov
repnz
mov
mov
ret
add
and
dec
mov
ficoml
or
inc
inc
leave
pop
arpl
dec
repnz
add
lahf
adc
imul
in
or
bound
leave
pop
adc
jo
jo
push
aas
pop
adc
cmp
xor
or
mov
fadds
mov
nop
int
add
hlt
out
call
xchg
push
inc
fs
repz
ret
out
xor
jg
mov
mov
stc
mov
ret
fistpll
push
aaa
sbb
lods
out
push
enter
shl
ja
add
cmp
fidivs
mov
dec
scas
jmp
shl
scas
push
lret
dec
cmp
cmp
pop
lea
jmp
pop
ret
lods
adc
xchg
outsb
shlb
je
in
mov
fs
int3
cmp
sbbl
or
and
ret
ljmp
cmp
movl
sbb
ss
inc
add
mov
sbb
or
and
test
lea
scas
inc
xor
add
js
push
stc
inc
scas
mov
xor
and
and
add
pop
mov
push
add
mov
call
cmp
jl
dec
mov
loopne
nopl
cmp
adc
xchg
adc
aad
sub
out
pop
and
jle
bnd
add
xor
ret
pop
pop
pop
test
out
ja
pop
subl
stc
add
ljmp
imul
lahf
sbb
inc
pop
cmp
sbb
roll
arpl
in
pop
mov
out
adc
shrb
pop
push
inc
and
jmp
dec
xlat
push
je
gs
and
mov
stos
nop
pop
movsb
sub
mov
mov
jecxz
ja
aam
jp
imul
out
add
imul
add
mov
lcall
xchg
and
push
cmpb
xor
adc
add
mov
inc
inc
lods
cmp
in
sub
rorl
out
in
mov
fs
ss
pop
pusha
and
xlat
daa
test
imul
xchg
cs
daa
xor
sbb
push
inc
insb
mov
scas
insl
dec
fmul
inc
mov
cmp
inc
loope
leave
cli
pop
mov
divb
stos
out
mov
outsl
xchg
divb
push
mov
adc
cmp
cltd
inc
sahf
decl
push
sub
sbb
xor
adc
and
push
add
mov
pusha
sbb
or
rolb
test
loopne
mov
dec
inc
push
test
xor
mov
hlt
ja
aam
aad
dec
sarb
fistl
ret
cmp
or
pushf
adc
or
xchg
cmpb
sbb
xchg
and
push
test
iret
cmovge
inc
cmpl
jo
test
add
mov
adc
inc
movsb
pop
mov
or
inc
mov
fsubrp
out
out
loopne
test
fimull
adc
xor
jmp
mov
add
rcrl
rcrb
int
movsl
add
test
clc
jecxz
repnz
int3
pop
jne
nop
iret
push
cmp
adc
jmp
push
ljmp
lods
jmp
pop
sbb
movsb
arpl
mov
add
sbb
mov
add
jle
jge
je
pop
jbe
jg
add
outsl
sbb
xchg
mov
jnp
sbb
xchg
js
cwtl
nop
xchg
xchg
sub
inc
push
jle
lahf
xchg
repz
lods
pop
in
cmp
inc
aas
and
dec
mov
inc
inc
jnp
sub
adc
sub
jne
ret
jo
fdivrl
adc
push
mov
stc
dec
in
mov
sub
stos
xor
jns
dec
repnz
inc
xchg
xor
lds
stos
decl
jb
test
jle
lcall
aaa
pop
adc
pop
inc
add
cmp
int3
mov
cmp
add
xchg
xchg
ljmp
adc
add
hlt
push
lock
add
or
cmc
in
nop
fldenv
xchg
aam
popa
stc
pop
push
and
fcoml
hlt
popa
repz
sbb
xor
lods
popa
enter
mov
add
shlb
sub
enter
gs
fcmovne
out
das
cld
cmp
push
xchg
jmp
ss
xor
shr
imul
lret
or
pop
test
les
jae
dec
adc
test
hlt
mov
or
rorl
push
stos
mov
les
sub
je
mov
add
lea
test
add
push
jnp
xorl
dec
clc
movl
adc
lock
push
pushf
dec
and
mov
js
jns
push
insl
inc
jno
jg
loope
inc
gs
or
adc
enter
jo
lret
int
leave
testl
cld
outsb
and
mov
mov
xchg
lret
xchg
fwait
add
pop
je
sbb
push
shl
push
mov
mov
mov
stos
aaa
or
loop
pop
mov
pop
sub
stos
jp
in
mov
fidivs
cwtl
pusha
sti
into
cwtl
loope
xlat
insb
sub
lock
arpl
or
adc
or
pop
mov
test
in
xchg
adcb
cmp
sbb
push
lcall
dec
js
mov
shlb
repnz
popa
jecxz
add
repz
gs
mov
lahf
imul
fldenv
sub
dec
fidivs
stos
xchg
insb
aas
lods
cs
shlb
or
cmp
cwtl
jb
xchg
or
inc
add
sbb
xchg
push
adc
pusha
movsb
inc
movsl
std
sbb
addb
adc
dec
mov
pop
dec
ss
sbb
ret
pop
les
xorl
repz
pop
and
ds
out
mov
mov
sub
cmpsl
hlt
add
adc
and
fs
and
mov
sbb
test
mov
sbb
movsb
xorb
pop
mov
into
lahf
mov
sub
js
popf
cld
outsl
scas
dec
idivb
call
adc
jl
adc
mov
shlb
add
cmc
mov
ror
jl
and
pop
roll
jmp
fsubs
ja
std
add
imul
adc
inc
pop
aam
push
sbb
jg
sbb
jp
xchg
cmc
adc
inc
cld
mov
lret
idivb
fdivp
cmp
cld
aad
xchg
pop
in
test
or
stc
clc
push
dec
cld
push
pop
mov
or
aaa
and
in
clc
or
sbb
scas
inc
sbb
mov
pand
test
jns
shlb
fsts
mov
and
in
pop
inc
out
add
push
jbe
and
push
sub
mov
dec
add
mov
inc
cmp
jecxz
outsb
loope
xchg
add
sbb
push
ja
xchg
add
sub
jne
sub
lahf
shll
or
les
loop
mov
pusha
aas
daa
ret
sbb
add
cmp
or
imul
loopne
jb
or
repnz
loopne
and
xchg
call
add
in
add
loope
mov
or
sub
js
mov
call
das
mov
mov
inc
xchg
pop
faddp
dec
les
aam
or
out
je
add
jmp
arpl
add
popf
adc
pop
cmp
ficoms
fwait
jl
addr16
or
inc
pushf
sub
xor
and
repz
aaa
mov
gs
mov
lret
mov
sar
or
mov
dec
and
and
inc
sub
stc
sbb
nop
bound
pop
xor
int3
mov
add
inc
xchg
push
and
adc
mov
stos
pushf
cmp
mov
pmuludq
ret
aas
pop
push
inc
loope
movsl
hlt
push
shrb
ja
pop
vcvtdq2ps
jp
lods
aad
mov
dec
std
pop
mov
dec
or
mov
imul
mov
test
push
iret
insb
jo
aas
incl
add
and
add
jmp
and
in
jle
pushf
lahf
sub
add
scas
pushf
repnz
pop
pop
scas
outsb
and
repz
mov
dec
pop
push
and
mov
int
and
push
imul
cmp
mov
lods
mov
mov
int
mov
lods
addl
shlb
test
pop
push
jbe
sbb
popf
pop
sub
pop
loopne
push
hlt
push
lcall
jg
mov
int3
sbb
dec
cli
aas
pusha
mov
jl
push
jmp
dec
sbb
adcb
shlb
mov
icebp
add
adc
mov
aas
fiaddl
adc
and
add
nop
mov
xchg
mov
mov
icebp
and
mov
scas
std
cmp
xchg
out
aas
push
pop
xchg
repz
ja
scas
inc
pop
sbb
outsl
mov
cmp
in
add
repz
in
xor
mov
inc
ret
xchg
mov
adc
repz
dec
clc
push
add
xlat
xchg
test
je
or
push
test
push
push
sbb
mov
imul
mov
mov
gs
inc
mov
rorb
in
sar
inc
xchg
inc
pop
push
pusha
jbe
pop
push
clc
push
sarb
adc
js
lgdtl
xlat
jb
decl
mov
lods
sbb
sub
mov
orl
xchg
mov
add
lock
bound
xchg
dec
aam
sti
loopne
xchg
mov
pop
scas
out
pop
call
cwtl
pop
icebp
popf
mov
dec
nop
repz
sbb
loopne
push
repz
xchg
push
xor
add
bound
adc
popa
andb
mov
scas
add
add
sub
dec
les
add
call
cld
jecxz
cs
cltd
or
shlb
sbb
mov
inc
adc
in
adc
shlb
dec
adcb
popf
inc
iret
mov
ja
push
inc
mov
dec
add
adc
mov
call
push
sub
lcall
add
insb
add
inc
and
pop
les
les
sbb
pop
xlat
jo
add
cld
pop
inc
add
cmpl
dec
sbb
mov
rorb
mov
dec
mov
jae
xchg
jge
mov
add
mov
into
leave
dec
or
test
test
dec
fucom
dec
testb
repz
int3
sbb
xchg
and
and
aas
or
outsb
jecxz
pop
insb
jecxz
mov
stc
aas
ss
push
fadds
cmp
mov
add
lahf
adcb
rcr
loopne
jg
mov
pop
cmp
mov
pop
test
mov
lret
jg
daa
movsb
bound
or
clc
pop
in
imul
les
es
cmpsb
pop
repnz
fmul
in
stos
out
inc
ret
adc
dec
cli
repnz
xchg
jl
adc
mov
insl
sub
mov
jle
leave
das
cmp
stc
out
jno
loop
lds
stc
mov
sbb
leave
out
jno
mov
pop
pop
jae
sbb
mov
cld
ds
jmp
pop
mov
subl
jbe
jnp
insl
lret
scas
fidivl
cmpsb
sbb
or
idivb
sahf
dec
pop
sub
iret
rcrl
xchg
jge
sahf
addr16
mov
add
dec
jo
in
push
jae
mov
das
scas
fimuls
incl
sbb
nop
mov
and
cmp
mov
test
xor
leave
add
sbb
fists
das
pusha
pop
pop
dec
add
cmp
inc
mov
loopne
jns
jne
test
in
sahf
idivb
jmp
popf
sub
xchg
dec
push
loopne
lds
out
nop
ja
jle
dec
mov
lret
ficoms
pusha
jbe
aas
jns
add
incb
fistps
mov
repz
int3
cmp
adc
stos
push
adc
mov
and
in
push
xor
pop
call
popf
and
mov
and
xor
je
mov
scas
in
push
enter
sahf
dec
xchg
pop
cmp
adc
es
adc
cmpsb
cmp
add
iret
jp
xchg
xor
popf
mov
rcrb
loopne
inc
xchg
sub
ds
sub
loope
jl
push
or
aas
xchg
test
clc
xchg
jmp
les
lock
xchg
inc
loopne
or
or
fdiv
cmp
stos
int3
mov
in
cmp
xor
mov
rclb
ret
mov
mov
std
jg
mov
sbb
sbbb
sbb
adc
push
mov
add
push
jl
cli
sbbb
and
xchg
mov
push
mov
jp
xchg
mov
mov
call
or
xchg
lcall
lods
mov
clc
mov
cmp
out
rolb
ret
mov
dec
xlat
mov
or
adc
clc
stos
pushl
fwait
mov
pop
rorb
adc
scas
movsl
rcrb
outsb
xor
out
dec
jb
test
shlb
add
dec
pop
push
jp
ja
xchg
mov
push
aas
sbb
mov
das
adc
or
faddl
sub
jg
add
loopne
jnp
pop
insb
pushf
push
pop
or
imul
aaa
loope
cmp
add
push
in
cmpl
aas
jge
push
push
es
or
cli
cld
daa
lcall
das
or
or
cwtl
xchg
enter
mov
movsb
xchg
mov
mov
dec
add
dec
jl
jne
imul
hlt
adc
adc
cmp
cld
mov
popl
jns
fidivs
push
sub
add
aam
pop
test
hlt
xlat
mov
pop
movsb
in
in
in
lret
js
std
or
xchg
push
inc
push
mov
clc
add
cld
mov
or
push
call
call
ds
insb
cmc
or
lock
xchg
aas
aas
xchg
shlb
rolb
or
cld
mov
pop
or
pop
shll
aad
mov
mov
shll
movsb
jg
cmc
fisttps
subb
std
pop
inc
mov
rcrb
push
sbb
add
cld
mov
fwait
insb
jno
push
mov
mov
mov
imul
ret
push
push
lock
movsb
or
in
cld
pop
sti
imul
and
into
inc
leave
and
xor
shlb
cmp
mov
aas
dec
inc
xchg
or
mov
and
pushf
std
pop
andl
jne,pn
enter
fistpll
aaa
cmp
adc
rcll
lahf
xlat
push
loope
inc
xlat
cmp
xchg
lea
jle
jmp
ljmp
push
test
arpl
mov
adc
loope
pop
xchg
add
xor
mov
daa
jg
cmp
jno
fs
mov
sbb
xor
sub
movsb
aas
daa
je
cmpsb
rcrb
int3
js
rclb
dec
sbb
les
hlt
push
add
jmp
xchg
or
mov
push
test
add
imul
mov
mov
cli
cwtl
cmpsb
stos
pop
dec
rol
push
or
insb
fcomip
jle
out
xchg
pop
lret
or
jns
sbb
test
sahf
xchg
les
pop
cmpsl
xor
adc
inc
cli
inc
or
pusha
push
pop
dec
sbb
mov
es
hlt
and
jbe
shlb
in
dec
loopne
add
sbb
add
out
fldl
cmp
cmpsb
or
adc
cmc
sub
add
aad
aaa
mov
jne
js
mov
mov
insl
lret
in
inc
cmp
aam
pop
mov
mov
fmuls
xor
cmp
fdivrp
ret
xchg
xor
jmp
call
mov
xchg
fwait
js
sbb
or
out
push
pop
dec
cmp
pcmpgtw
or
lret
sarl
enter
push
lea
in
or
xchg
fwait
je
in
lods
jb
xor
sahf
notl
push
dec
sarb
cmp
jecxz
repz
adc
add
lock
or
sub
ljmp
xor
loope
loop
or
or
sahf
lds
cmp
enter
fnstsw
mov
push
loope
cltd
inc
sbb
nop
lods
daa
xor
fwait
mov
xchg
ret
mov
jo
mov
xchg
xchg
jmp
test
add
jg
in
jo
orb
outsb
mov
inc
sbb
insl
addb
es
lcall
test
or
xchg
mov
add
ror
pusha
or
or
paddq
dec
bound
je
inc
icebp
and
leave
or
xchg
push
add
in
xlat
lcall
mov
add
dec
add
xchg
jmp
popa
fcomps
mov
adc
mov
and
rcrb
jg
decl
out
sbb
daa
pop
mov
lods
push
sbb
pmullw
sub
inc
jge
movsb
lea
adc
adc
adc
cmp
cmp
jg
aad
sub
mov
lods
lret
push
out
mov
jmp
mov
test
rep
push
test
std
mov
js
fistl
sarl
fdivrl
or
mov
pop
test
fcoms
or
sub
adc
dec
sbb
flds
push
cmpsb
lret
scas
lock
adc
mov
pop
sub
fs
shll
cmp
inc
add
sub
out
push
sbb
lea
mov
subb
dec
xor
repnz
push
lods
sbb
loopne
jne
neg
xchg
sub
inc
xchg
jnp
rolb
sar
shl
and
push
push
fistps
xlat
or
ja
js
jge
cmp
jg
cmp
icebp
or
ljmp
out
mov
enter
mov
fisttpll
repz
xchg
inc
std
shrb
xchg
pop
rol
cmp
lret
dec
popf
adc
dec
aad
mov
dec
cld
adc
xchg
test
and
sbb
adc
decl
inc
clc
js
push
add
inc
pop
inc
cmp
movsl
in
test
in
pop
out
mov
lret
push
adc
mov
aad
ret
jbe
dec
xchg
nop
and
ss
cmp
mov
mov
ja
mov
cli
inc
imul
dec
je
scas
mov
sbb
jne
add
xchg
push
dec
jnp
mov
addr16
sub
in
adc
xor
in
inc
scas
mov
insb
adc
in
movsb
or
movsl
push
enter
add
jns
sub
push
repz
fmuls
arpl
xchg
cmp
jmp
pop
or
mov
ljmp
in
cmp
subl
push
ljmp
cmp
fistpl
lock
push
mov
dec
inc
mov
jecxz
mov
xchg
pop
mov
ljmp
rorb
call
and
lds
enter
add
in
sar
pop
inc
jmp
test
loop
and
mov
pop
aaa
xchg
lahf
lock
add
jbe
push
cmp
push
dec
popf
pop
pusha
inc
jecxz
pop
les
js
add
mov
xor
pop
sti
dec
sahf
mov
lret
inc
shll
fdivl
lds
or
hlt
sti
mov
in
push
or
leave
pop
into
mov
cmp
mov
push
add
adc
ficoms
xchg
sub
int3
xchg
imul
hlt
or
lds
shrl
sti
pop
popa
dec
mov
add
and
add
mov
les
sahf
flds
sti
clc
repnz
popa
cli
fldcw
or
pop
mov
stc
jmp
stc
loopne
fldenv
je
mov
pop
cmp
adc
cmp
orb
in
cmpsb
mov
bound
jo
testl
jnp
int
jg
jo
pop
mov
loope
cmp
sbb
leave
inc
int
mov
movsb
mov
jecxz
add
pop
mov
xchg
sar
xchg
out
dec
iret
sub
push
cmp
mov
push
pop
cmp
aam
mov
fs
out
mov
mov
insb
mov
dec
pusha
fmuls
stos
and
das
mov
popa
lods
dec
sbbb
mov
jle
pop
aad
clc
lret
out
stc
lods
xlat
or
mov
ljmp
and
leave
mov
xchg
sub
cs
xchg
push
sub
dec
cld
pop
mov
sbb
jl
repnz
xor
scas
bound
pushl
cmp
lret
cmp
mov
push
or
cmc
inc
fdivl
inc
and
add
out
cs
jecxz
or
ret
aaa
add
push
or
and
pop
jbe
sbb
and
scas
jp
and
loopne
hlt
jns
loop
mov
repz
jg
test
sahf
test
lds
roll
cld
add
enter
bnd
xorb
clc
jg
xchg
repnz
and
and
jle
add
add
into
sbb
cltd
sub
mov
shrb
sbb
enter
mov
mov
push
cmpsb
push
add
add
and
test
adc
enter
jg
xor
and
clc
or
mov
adc
push
add
ret
add
rcll
movups
adc
stos
test
adc
in
adc
or
cltd
inc
add
enter
mov
xchg
cmp
sbb
in
in
dec
std
ret
push
cwtl
add
ja
imul
cwtl
std
dec
mov
push
push
cltd
dec
xchg
outsl
cltd
sub
jb
mov
mov
cmp
push
or
cs
aam
and
mov
cli
fildl
adc
out
sahf
cmpb
xchg
clc
lea
cwtl
pop
nop
adc
dec
inc
mov
mov
hlt
aam
dec
movsb
rorl
mov
lock
dec
jmp
loope
popa
in
inc
inc
imul
out
pop
or
mov
pusha
jp
mov
repz
fimuls
add
jae
xor
repz
pop
push
adc
mov
hlt
dec
sub
cmpb
jmp
push
imul
push
or
lea
cmp
aad
dec
or
inc
mov
sbb
icebp
stc
cmp
push
daa
test
jmp
cmp
inc
pop
test
into
add
adc
adc
cmp
mov
inc
pop
or
adc
std
inc
sbb
ficoms
and
mov
aas
stos
dec
add
adc
push
or
dec
mov
inc
mov
mov
mov
lods
pop
shl
fstps
mov
repz
js
ds
ret
mov
sub
scas
stos
mov
or
stos
lcall
pop
xor
mov
dec
into
sahf
pop
jmp
cmc
xor
dec
cmp
or
add
aas
jl
call
and
dec
mov
pushf
hlt
mov
test
xchg
lods
push
xchg
push
and
repz
sbb
xchg
sbb
sbb
in
fidivl
movsl
aam
cmp
ficoms
sbb
inc
lock
loop
loope
jle
addb
aas
mov
push
hlt
xchg
xchg
mov
add
pop
cmp
ja
cmpl
in
movswl
insl
or
loopne
mov
imul
shll
inc
in
cmc
add
cltd
mov
pop
or
cmpsl
or
pop
sbb
aaa
mov
fwait
sar
or
cmp
nop
sub
jp
sub
rclb
jno
lahf
mov
sbb
rolb
pop
outsb
inc
adc
adc
and
pop
mov
and
loope
jbe
xor
fwait
jb
icebp
sub
shrb
data16
loop
xor
pop
icebp
andb
sti
test
fwait
lcall
xchg
inc
out
jbe
push
or
sbb
cmp
jecxz
std
pop
ds
xchg
mov
pop
inc
es
les
jecxz
dec
sbb
mov
repz
mov
jns
out
mov
aas
sbb
jb
loop
mov
add
lahf
pop
add
imul
push
insb
clc
imul
add
loop
push
sarl
aas
jne
mov
adc
lock
jmp
and
sub
and
fbstp
cmp
dec
ljmp
dec
inc
or
mov
pop
shll
jg
xor
popa
jo
xchg
cltd
mov
enter
pop
gs
aam
and
std
jo
xchg
testl
push
mov
sbb
or
mov
movsl
in
push
sahf
enter
mov
test
pop
push
add
or
lea
adc
cltd
daa
adc
sub
lea
or
push
scas
cmpsb
mov
les
xchg
or
mov
incb
adc
outsb
cmp
pop
test
fiaddl
repnz
sarb
sub
arpl
or
jbe
xchg
loopne
adc
push
pusha
mov
and
ret
fwait
fs
nop
mov
or
cmpsb
mov
xor
or
decl
loope
jbe
cltd
inc
inc
and
out
mov
sbb
inc
lcall
lock
jne
push
mov
ljmp
sub
mov
les
lock
pop
add
mov
adc
xchg
pop
xchg
cmpsb
inc
add
int3
lcall
xor
jns
clc
sbb
mov
inc
inc
sbb
add
mov
push
out
cmp
ljmp
mov
and
or
sbb
mov
arpl
xchg
jns
push
aas
call
xor
sbb
outsb
lods
mov
pushf
cmp
jle
rolb
and
or
pop
mov
adc
mov
mov
popf
les
cmpsb
add
cmp
in
outsb
or
cld
xchg
pop
les
lahf
testl
and
shlb
icebp
jnp
pop
out
shll
pop
loope
or
mov
int3
push
movsl
xchg
xor
inc
int3
and
filds
dec
ret
sbb
and
mov
test
cmp
stos
mov
fstps
imul
clc
adc
fdiv
and
cs
dec
mov
pop
cmp
or
bound
ret
xchg
dec
xlat
addb
adc
xchg
jb
dec
mov
fbstp
jg
mov
mov
inc
add
cmp
and
cmp
mov
ret
int
pop
fs
ret
sbb
nop
push
add
push
mov
outsb
testb
ljmp
daa
aam
popa
in
mov
outsb
orl
fbld
stos
jl
test
daa
push
test
dec
std
or
nopl
scas
cmp
jo
cmpsb
mov
jne
pushf
pop
das
lock
out
adc
sbb
mov
clc
lea
xchg
cwtl
or
mov
inc
ss
lea
test
lcall
lea
dec
and
pop
jp
cmp
xchg
push
push
orl
call
repz
mov
fwait
iret
sbb
cli
adc
test
dec
cmp
push
roll
dec
jecxz
adc
or
xorb
pop
push
or
or
leave
inc
mov
jecxz
mov
pusha
loopne
hlt
adc
mov
jl
jo
or
ret
and
mov
int
and
icebp
add
jg
lea
pop
outsl
push
jne
mov
or
enter
jmp
inc
popa
mov
clc
xor
ret
push
pop
sub
jmp
inc
or
and
xchg
ret
test
adc
sbb
ds
add
fdivr
loope
nop
jns
xor
filds
outsl
jl
dec
scas
leave
jo
rcrb
ffreep
mov
aas
mov
mov
in
addb
adc
les
adc
sti
mov
xlat
xchg
jo
popa
jg
mov
dec
cli
inc
adc
call
and
sbb
fiadds
icebp
jo
pushf
popl
mov
outsb
ud1
mov
cmp
or
sbb
aam
std
push
shl
and
sbb
in
sbb
xchg
push
push
dec
lcall
jl
or
inc
dec
fstpt
data16
inc
mov
pop
xchg
sub
pop
ror
mov
or
mov
popa
adc
lea
cmpsb
roll
cltd
imul
mov
pusha
and
fcoml
push
in
hlt
std
adc
mov
popf
adc
push
inc
int3
dec
cs
lock
stos
jo
pop
js
mov
mov
sbb
fisttps
sti
leave
add
mov
sub
jbe
lock
sbb
xchg
mov
pop
mov
mov
iret
inc
inc
and
sbb
mov
icebp
jo
aas
sbb
lcall
jle
sahf
push
stos
ret
icebp
sub
fmulp
clc
inc
popa
jb,pt
and
sbb
ljmp
sub
andl
pushf
mov
test
push
jg
xor
enter
call
mov
adc
daa
sbb
fmul
sbb
push
add
call
or
lds
push
subb
fdivrl
leave
add
repz
mov
jecxz
sub
push
in
pop
adc
mov
sbb
pusha
outsl
lcall
xchg
xorl
add
outsb
mov
adc
cli
test
aaa
in
lcall
ja
pop
xchg
mov
xchg
or
aas
mov
mov
enter
out
icebp
add
push
outsl
jmp
push
rcrb
push
aas
and
daa
loop
xchg
mov
lds
std
cs
pusha
sbb
out
and
push
lock
inc
test
sbb
enter
hlt
rorb
les
cmpb
fidivrl
jns
push
xchg
jmp
enter
jns
scas
les
icebp
xchg
jp
setne
sbb
xchg
or
shrb
xor
movl
sub
inc
mov
pop
lds
xchg
iret
pop
push
stos
push
add
loope
roll
je
ds
aas
push
mov
mov
mov
push
inc
push
popf
xchg
cmp
cmc
bound
insb
jb
xchg
out
std
data16
es
imul
pop
inc
and
lods
fstpt
loope
xor
inc
out
mov
aas
lock
cmp
inc
pusha
aam
repnz
sub
xchg
testl
imul
adcb
std
xchg
pop
call
lret
lods
mov
push
pop
adc
inc
and
addl
adc
lds
dec
adc
movl
lods
jp
shr
xchg
je
movsb
clc
pop
dec
pop
sbb
jl
inc
xchg
fdivl
inc
rolb
push
sti
push
adc
add
inc
mov
js
movsb
dec
sbb
add
jo
test
sbb
rorb
or
add
xorb
in
or
and
jmp
mov
mov
in
mov
xor
icebp
rcll
adc
dec
inc
push
in
fwait
orb
aas
xor
pushf
or
fcompl
lret
jne
push
mov
bound
sbb
adc
sub
int
aaa
inc
mov
enter
push
movsb
insl
jp
insb
mov
pop
dec
dec
or
test
or
inc
or
bnd
leave
test
mov
gs
shrl
sbb
mov
cmp
mov
lods
sub
pop
xchg
fdivl
jno
incb
jg
mov
scas
add
push
outsl
cld
out
cli
jg
or
or
out
outsl
and
paddsw
addr16
nop
push
dec
jecxz
call
pop
addr16
xorl
mov
dec
add
mov
jge
adc
testl
push
cmpsl
or
lock
leave
pop
pushf
int
mov
ljmp
aad
lret
inc
pop
sbb
or
les
aad
jns
stos
xchg
mov
or
jo
test
test
push
pop
push
rol
sidtl
cmc
dec
aam
mov
push
mov
sbb
mov
stc
fidivl
sbb
addl
xchg
inc
subl
sbb
inc
ja
je
sbb
sbb
cmp
pop
and
jne
gs
rol
push
lahf
aam
inc
push
xlat
mov
js
xchg
aas
in
lods
push
mulb
sahf
pop
jne
ljmp
out
movsl
dec
pop
sub
int
pop
pop
xchg
imul
aas
and
test
fcmovu
rcrb
je
std
and
ja
test
jo
mov
add
xor
mov
mov
push
mov
mov
cs
add
fdivp
rol
js
pop
cltd
mov
mov
dec
mov
das
inc
push
aaa
xor
cltd
out
adc
dec
adc
xor
fstpl
cmpsl
sbb
in
out
jl
mov
pop
enter
jns
jne
lcall
sub
loopne
xchg
xchg
fdivl
add
aad
loop
rorl
mov
mov
repz
push
push
pop
int3
or
mov
xor
push
dec
popf
jmp
sbb
xchg
mov
sub
xor
incb
or
outsb
pmaddwd
mov
fstpl
scas
stc
addr16
add
rorb
push
int3
rclb
sarb
sub
inc
xchg
adc
in
aas
xchg
mov
sbb
out
outsl
sub
test
inc
cmpsb
fcomp
cmp
rorl
lahf
popa
std
mov
test
cmpsb
or
sbb
es
add
add
leave
adc
test
mov
pop
movsl
aas
or
rclb
call
fs
push
push
fistl
push
mov
xor
cmp
bound
cmp
bound
or
aad
mov
and
es
rclb
and
jbe
test
jno
nop
pusha
push
pop
sub
sbb
cli
das
fs
mov
pusha
pop
add
inc
cmp
in
sarl
repnz
cmpsb
faddp
push
andl
insb
mov
and
push
aaa
ds
test
movsl
lcall
or
jne
bound
push
inc
mov
cld
xchg
adc
and
ljmp
pop
cmp
mov
je
sub
sarb
sbb
insl
imul
imulb
std
lea
test
xchg
sarl
cmpsl
sti
mov
pusha
std
inc
mov
mov
push
push
int3
jmp
jmp
add
inc
xor
or
cwtl
in
sbb
scas
mov
cs
pop
or
ljmp
inc
xchg
sub
push
ret
dec
or
out
or
pop
mov
xchg
negl
sub
mov
xor
push
add
icebp
es
inc
sub
mov
sub
and
xor
add
pop
outsb
push
inc
daa
test
jne
push
repnz
and
cmp
lock
cmc
jb
dec
xlat
out
pop
into
test
jae
in
push
ret
sub
cli
pop
add
sbb
xchg
sub
rcl
outsl
inc
arpl
adcb
mov
cmp
pop
add
mov
loop
fiadds
mov
or
jl
rcrb
xor
cmp
pop
ja
xchg
stc
fs
mov
jns
rol
and
mov
mov
aad
jp
add
jns
stc
loopne
xchg
call
outsl
inc
roll
xchg
test
or
jb
mov
sub
or
cs
ljmp
xchg
daa
xor
or
fisubrl
cli
iret
int
filds
sbb
dec
pop
mov
scas
js
pop
mov
add
popl
xor
fimull
mov
ud0
or
pop
adc
imul
inc
sbb
or
fwait
cmp
adc
push
sub
jnp
popf
inc
jb
push
movsb
sbb
or
xor
and
mov
icebp
clc
inc
js
test
push
mov
lock
adc
push
roll
in
cmp
out
xchg
inc
lock
or
insb
inc
sub
lds
in
cmp
orl
inc
add
pop
xchg
lcall
out
cmc
mov
shrb
sbb
push
or
stc
sbb
iret
hlt
mov
pop
inc
and
pop
call
jp
inc
jmp
test
sbb
or
inc
js
insb
les
data16
lock
dec
pop
and
mov
inc
out
inc
loopne
adc
shrb
or
and
pop
test
pop
stos
inc
int
sbb
nop
pop
jle
inc
loopne
or
mov
test
add
push
repz
pop
pop
sbb
inc
mov
pop
adc
mov
repz
mov
jmp
clc
icebp
mov
dec
push
xor
stc
jg
xor
jg
call
lods
sbb
pop
push
rcl
push
mov
fwait
add
int3
scas
stc
inc
jbe
outsl
mov
stos
mov
pop
lahf
inc
jb
push
add
adcb
lods
inc
andl
aaa
push
dec
or
pop
arpl
std
add
repz
gs
arpl
push
inc
push
inc
pop
xor
fdivrl
sub
fcompl
jg
clc
mov
loope
mov
pusha
dec
aas
std
push
mov
or
roll
mov
shlb
js
in
sub
rolb
add
mov
inc
hlt
subl
push
loop
pop
sub
bnd
fsub
cmp
jb
or
shll
mov
mov
mov
mov
fistpll
lcall
loop
xor
loopne
lock
adc
setb
das
cmp
adc
es
mov
shrb
fcoms
fisttps
scas
add
inc
push
inc
out
inc
inc
sti
jg
mov
fstps
ljmp
or
fs
mov
hlt
xor
mov
mov
and
adc
adc
cmp
add
mov
mov
push
test
aad
aaa
shll
scas
push
ret
sub
test
push
jne
shl
js
jo
inc
mov
ud0
int
inc
or
pop
int
mov
mov
jl
filds
je
popa
lcall
je
aas
popa
insb
cmp
add
cltd
cli
jmp
sti
inc
lock
cmc
cld
lds
push
js
fs
push
andl
push
sub
add
outsb
push
sbb
adc
movsl
add
push
jg
add
mov
repnz
mov
xor
jbe
pop
cmp
and
aam
add
std
pop
orl
dec
test
ror
dec
adc
inc
mov
popf
imul
lock
jne
and
sub
ficompl
inc
mov
popa
pushf
shrb
cwtl
rorl
inc
repz
add
xor
and
or
cmp
cmp
push
call
test
movsb
aad
xor
jl
ficoml
jle
outsb
in
pop
aaa
xchg
mov
mov
pop
jnp
xchg
or
test
test
mov
movsl
push
add
dec
sbb
pop
loopne
orb
xchg
mov
adc
sub
orb
lds
mov
mov
ja
outsl
mov
add
bound
jbe
mov
fldt
sahf
jno
icebp
dec
and
cli
aam
pop
and
push
sbb
jmp
xor
loopne
sbb
dec
pop
jns
aaa
or
dec
mov
or
test
add
add
xor
mov
sbb
cmpsl
in
lea
inc
cmpsl
popf
cmp
cmpsl
lock
xor
aas
sbb
inc
mov
ret
testl
add
pop
stc
xchg
sbb
imul
pop
sbb
or
mov
imul
movsb
mov
jae
cmpsl
loope
mov
pop
mov
cmp
outsb
jmp
aas
push
aam
cmc
or
sbb
rorb
xchg
push
cmpl
push
cwtl
and
in
and
push
mov
mov
subb
dec
dec
movsb
scas
add
ljmp
adc
jno
scas
mov
mov
pop
inc
fmul
imul
orb
pop
cli
aas
out
test
das
mov
cmp
inc
dec
addb
js
fwait
inc
xchg
mov
mov
mov
mov
imul
aas
mov
repz
test
lea
mov
pusha
push
nop
mov
push
and
ljmp
enter
inc
pop
je
in
add
add
adc
arpl
das
lock
aam
shlb
jle
aas
and
xchg
jl
gs
int3
addr16
imul
xorb
das
push
xor
addb
cmp
roll
ja
fs
outsl
jle
add
je
inc
mov
fsubr
sahf
xlat
mov
and
xlat
loopne
stc
xor
mov
in
jnp
xor
mov
fwait
push
cmc
stos
cmpb
add
add
fnstsw
popa
fnstenv
lret
push
jns
fisttpl
pop
xchg
or
cmc
lahf
push
clc
and
shlb
mov
push
mov
xlat
sub
lock
adc
rclb
adc
cwtl
add
jnp
fcomip
adc
test
and
aas
ja
and
push
cld
test
adc
xor
jo
xchg
rclb
shrb
jge
and
mov
fyl2xp1
adc
sbb
mov
push
push
xor
test
stc
mov
aaa
loopne
cld
imul
jno
sbb
insl
sbb
pusha
pop
mov
xor
mov
aad
ds
or
inc
sub
test
dec
cli
loope
push
inc
or
dec
lock
cmp
cmp
cltd
xchg
or
mov
loopne
adc
jae
jo
xchg
inc
pop
je
in
mov
push
cmp
cmpsl
out
mov
mov
inc
adc
inc
repz
push
mov
or
stc
xchg
pushf
and
mov
clc
push
sarl
int
stos
adc
popf
filds
sarb
add
ljmp
stos
add
sbb
mov
loope
xchg
adc
loopne
sbb
xchg
mov
or
sub
lods
jl
xchg
lcall
lds
sbb
jno
adc
or
add
leave
inc
popa
inc
adc
std
ja
orl
sbb
jne
out
mov
notb
pop
aam
gs
pop
or
aad
fnstsw
fdiv
or
adc
cmp
lods
mov
mov
add
xor
dec
pop
cmp
ds
pushf
xchg
dec
inc
lods
std
sub
add
jge
pop
add
test
adc
ficoms
push
clc
cmp
cs
pop
xlat
ds
pop
mov
inc
xchg
sahf
movsb
addr16
inc
rcll
mov
adc
cltd
push
jo
test
dec
insb
mov
xchg
dec
adc
sub
sbb
cwtl
mov
scas
xor
add
arpl
sbb
jo
inc
jnp
adc
pop
mov
lret
nop
jecxz
add
ror
cld
jge
fsubrp
cmp
notl
mov
xor
push
add
sbb
aas
mov
sub
inc
inc
cmpsb
cltd
and
ret
push
bound
sbb
mov
cmp
jp
add
pop
sub
add
xchg
jnp
pop
mulb
xchg
jb
push
pop
lea
sub
icebp
jno
stos
cmp
ja
xchg
fs
jle
mov
addr16
es
fstl
push
enter
inc
ljmp
daa
in
into
icebp
stc
or
sub
adc
shl
sbb
mov
sahf
pop
daa
bound
mov
and
jecxz
ret
jno
mov
pop
add
cmp
outsl
pop
add
add
adc
push
stos
cmp
push
adc
inc
adc
inc
add
sbb
leave
jecxz
test
xor
shlb
cmp
mov
and
push
inc
in
dec
push
in
push
js
push
insl
add
cmc
insl
jne
adc
sub
xor
outsb
cmpsb
or
sbb
inc
inc
or
mov
xor
pop
ret
mov
pop
pop
jg
pop
mov
cmp
lds
jns
push
jl
dec
xor
xor
jle
pop
mov
add
insl
cwtl
pusha
call
mov
jl
out
imul
je
mov
xor
fistps
pop
mov
or
adc
sar
sbb
stc
dec
sarb
pop
test
addr16
fmuls
movb
in
cmp
sbb
push
test
enter
add
pop
out
int
xrelease
outsb
mov
cltd
stos
jne
jo
ss
push
test
and
mov
lret
imul
stc
inc
icebp
dec
insb
jecxz
push
icebp
sub
sahf
dec
ret
add
dec
sbb
gs
mov
mov
loop
gs
les
mov
rcrb
aaa
sbb
add
and
cs
push
pop
stos
mov
clc
xchg
dec
popa
loop
mov
inc
mov
mov
mov
ret
shrl
insl
clc
cmp
pop
xlat
and
xlat
cmp
into
rcll
sbb
pushf
addr16
movsl
mov
js
mov
into
movsl
and
xchg
push
in
lret
ret
test
int
mov
pop
adc
and
leave
push
jns
subl
cmp
jo
cs
insb
jmp
push
cmpsl
mov
fadds
out
inc
scas
clc
ja
cmp
sbb
or
ds
xor
xor
mov
mov
or
hlt
jecxz
pop
push
test
mov
push
inc
mov
mov
sbb
cmpsl
pusha
test
push
jg
sbb
loopne
pop
or
mov
rorl
mov
push
mov
sbb
cli
jno
mov
mov
pop
add
jnp
jl
lea
xor
popa
sbb
xchg
xchg
dec
push
ljmp
frstor
push
sbb
inc
sbb
scas
sbb
push
push
and
jge
mov
orl
ret
adc
loope
push
fprem
adc
adc
inc
inc
not
lods
cmc
push
inc
test
pop
cwtl
push
lcall
ljmp
inc
mov
rcl
add
push
mov
insb
hlt
loopne
mov
lret
fimuls
pop
popa
clc
js
dec
lahf
xor
lsl
cwtl
jmp
mov
pushl
or
loopne
add
fdivrl
das
push
pushl
lds
or
dec
pop
xchg
outsl
stos
dec
sbb
aad
andb
test
push
sub
dec
rol
daa
mov
ljmp
and
arpl
ror
out
jno
mov
imul
and
iret
xchg
fldl
fst
imul
cmpsb
movsl
xchg
cmpsb
data16
sbb
ret
js
mov
add
stc
dec
sbbb
lahf
or
js
stc
pop
int3
adc
mov
jne
sub
mov
mov
flds
and
inc
jo
rcrb
cld
add
test
dec
fstl
loopne
ja
movsb
mov
pop
adc
inc
add
or
adc
rcl
arpl
dec
adcl
scas
sub
sbb
setge
mov
imul
out
xor
js
sahf
test
cmp
push
gs
sbb
lret
out
sub
js
cmp
dec
cmp
enter
jp
dec
arpl
loopne
push
dec
fisttpll
xchg
das
dec
mov
mov
add
xor
stc
mov
jg
movsb
dec
ret
mov
mov
sbb
scas
shrb
adc
xor
pop
test
aas
mov
xchg
out
cmc
push
aas
xor
ljmp
stos
test
add
cmp
lock
lods
lock
bound
add
add
adc
fisttpl
bound
push
add
dec
aas
mov
push
cmp
and
gs
dec
sbb
mov
les
test
jne
cmpl
mov
sbb
in
lds
dec
cmp
sub
mov
mov
pop
mov
imulb
dec
jmp
jne
add
test
ds
jno
mov
je
or
pop
icebp
lret
iret
xchg
testb
pop
enter
fldcw
sub
mov
dec
push
inc
out
loope
or
sbb
hlt
enter
pop
loop
inc
and
call
aas
mov
fstps
scas
lock
cmp
jne
push
cwtl
fisttps
push
and
dec
sub
xor
push
out
comiss
loopne
add
stos
dec
or
inc
test
inc
push
mov
jo
roll
mov
aam
gs
or
and
jmp
imul
shrb
pop
test
dec
inc
push
push
in
inc
hlt
cmp
jle
xor
push
test
cmp
mov
jbe
mov
imul
lea
jg
adc
lcall
outsb
addb
gs
dec
push
lea
jno
ljmp
ja
jecxz
mov
or
movl
xchg
decl
xchg
lods
or
add
sub
adc
stos
dec
icebp
push
leave
mov
xchg
adc
cs
ss
imul
fistpll
inc
xchg
scas
inc
add
or
lods
out
test
xor
fmull
cmc
daa
push
push
ljmp
mov
push
stos
cld
das
stos
jmp
adc
pop
addl
lds
loope
mov
add
jo
sub
adc
push
gs
jp
orl
or
push
or
mov
faddp
and
mov
sbb
test
add
loopne
sub
test
je
dec
jmp
loopne
sbb
jnp
lahf
xlat
mov
sub
add
pop
shl
adc
dec
dec
shl
pushl
js
paddusw
or
ja
add
pop
pop
adc
cmp
adc
pop
lock
jo
ja
leave
mov
cmp
gs
mov
int
cmp
lahf
in
or
cmp
mov
dec
pop
dec
xchg
pop
jno
clc
test
cld
dec
mov
les
decl
inc
ljmp
jb
lcall
lods
dec
decl
test
cmp
dec
insb
add
orb
scas
dec
aas
inc
or
rclb
jmp
inc
jno
adc
add
mov
push
push
pop
lahf
sbbb
jo
test
pop
cmp
ds
or
repz
ret
daa
dec
cli
test
adc
jecxz
xor
jns
mov
in
adc
or
add
lods
cmpsb
add
mov
aaa
and
xchg
add
ljmp
mov
push
mov
pop
inc
mov
or
adc
mov
lds
xor
mov
push
leave
cld
mov
add
sti
inc
xchg
push
je
sar
add
cwtl
idiv
mov
or
inc
add
push
inc
and
xchg
mov
sub
adc
sub
inc
pop
adc
sar
mov
add
subb
push
popf
jns
lock
dec
jmp
dec
addr16
call
pop
subl
pop
leave
push
and
in
or
rorl
add
push
inc
movl
shl
dec
les
in
pop
aas
cmpsb
sub
add
cmpsl
and
shrb
inc
fs
lods
cld
inc
pop
or
lea
stc
adc
test
paddd
dec
rorb
cli
in
je
mov
mov
ja
stos
test
or
sub
aas
sbb
repz
outsb
mov
lods
rorl
ss
or
ja
fcoms
push
add
pop
leave
xchg
pop
popf
and
adc
add
in
dec
add
enter
inc
test
loope
mov
add
xchg
addl
add
and
mov
dec
adc
mov
pop
add
std
arpl
test
cmp
adc
decl
repnz
push
inc
loopne
cltd
and
jne
mov
fcompl
clc
or
adc
mov
jl
loop
or
std
lret
icebp
dec
jge
add
adc
hlt
adc
ret
sbb
inc
pop
aaa
jno
adc
fnstenv
into
cmp
jle
mov
sti
or
popa
sub
cmp
or
add
add
and
repnz
js
icebp
lock
or
add
loopne
int3
inc
inc
jbe
incb
pop
cmp
sbb
inc
sbbb
push
pop
lock
add
fiaddl
out
adc
push
xchg
dec
or
int3
cmpl
aad
dec
lahf
pop
fidivrs
shl
xor
sbb
add
clc
cld
adc
shrl
adc
mov
inc
add
dec
pop
movsl
cmp
adc
shrb
cwtl
xchg
sti
and
cmp
ret
inc
mov
add
xchg
jp
mov
adc
or
push
adc
inc
xor
pop
add
xor
stc
pop
mov
push
and
push
sub
andl
adc
mov
and
dec
mov
mov
fisttpll
js
shl
andl
leave
pop
movsb
xchg
sbb
mov
xorl
jl
test
adcb
push
jb
and
sub
push
insl
dec
stos
jmp
test
stos
nop
rolb
inc
mov
fwait
lods
sbb
push
and
lcall
icebp
jmp
mov
mov
mov
dec
mov
inc
in
push
clc
lret
push
insb
stgi
xor
mov
mov
cli
jmp
pop
shll
dec
popf
add
iret
mull
lahf
sahf
add
pop
and
sbb
imul
dec
sahf
cmp
sub
test
aaa
push
out
clc
cmp
sub
lds
lds
cld
out
les
loope
fs
mov
out
movsb
cmpsb
sbb
stos
mov
jmp
adc
nop
lcall
push
dec
mov
or
in
enter
mov
shl
divps
push
push
sbb
call
ljmp
jae
rcrl
roll
jl
push
pop
dec
ss
stos
ret
cli
outsl
add
fucom
js
inc
xor
dec
lahf
insb
mov
push
jne
incb
add
cmpb
mov
out
mov
pop
jecxz
cli
xchg
xor
ret
jl
daa
mov
pop
std
and
mov
enter
xchg
outsb
incb
or
adc
mov
sbb
adc
inc
xor
lahf
push
add
fdivrs
roll
ja
inc
lock
push
xor
ljmp
cmc
mov
arpl
loop
sub
sti
or
push
icebp
dec
shll
mov
sbb
stc
out
and
xlat
add
adc
inc
sahf
dec
ret
dec
cmp
es
add
inc
sub
cld
lock
xchg
xchg
pop
push
les
cli
jg
dec
enter
sahf
sbb
dec
aaa
incb
iret
inc
jg
dec
imul
push
std
loopne
lds
sub
sub
mov
add
dec
outsb
out
fcomps
fcoms
rcrl
cld
mov
jae
imul
or
fnstcw
lods
aam
xor
subl
mov
jg
cs
pop
popa
add
js
add
mov
mov
rcrb
ss
adc
jg
inc
cs
mov
ret
sbb
or
push
inc
mov
xor
into
add
sub
mov
cmp
ss
push
rorb
icebp
test
mov
add
roll
add
push
fsubp
rcrb
mov
fcompl
cld
or
aam
es
mov
cmp
iret
cmpsb
adc
push
rcrl
rcll
in
or
sbb
cmpsl
dec
cmp
call
test
shlb
stc
repnz
aam
insb
push
inc
lcall
xor
out
add
daa
mov
push
inc
add
in
iret
filds
jb
outsb
call
test
mov
aam
mov
pop
mov
add
in
and
add
xor
inc
or
repnz
leave
lods
mov
mov
mov
or
xor
loopne
mov
popa
loopne
outsl
arpl
lahf
push
jne
int
add
adc
adc
cmpsl
xor
daa
fdivr
mov
jns
insb
mov
push
add
adc
xor
mov
popf
ficompl
and
jle
movsl
mov
or
aas
push
sub
roll
pusha
push
sub
cs
and
addb
cltd
adc
decl
lods
outsl
fabs
enter
xor
stc
push
ss
fisubs
mov
loop
ljmp
repnz
enter
jecxz
mov
cmp
xchg
xchg
push
mov
mov
movsl
add
sbb
add
movl
mov
in
idiv
dec
inc
cld
jb
fnsave
jmp
mov
and
movsl
movsb
mov
jmp
fistpll
in
jne
call
dec
pop
mov
dec
dec
lcall
lock
sbb
test
aas
and
pop
mov
in
xchg
cmpsb
jmp
fsts
in
scas
fld
push
roll
inc
mov
out
sub
test
shr
ret
mov
dec
dec
stos
nop
sbb
int
mov
and
lea
ljmp
pop
test
int
inc
repz
add
ret
outsl
mov
das
icebp
xor
jmp
aas
pop
cmc
and
sbb
call
dec
xlat
sbb
lahf
pushf
add
fmull
mov
mov
hlt
inc
push
inc
out
mov
dec
loope
movsb
incl
pop
call
xchg
pop
jg
push
sub
adc
inc
aas
lods
push
repz
fwait
or
in
pop
xchg
lcall
or
lcall
cmp
cs
movsb
mov
popa
loop
xor
std
dec
xor
mov
shrl
mov
push
mov
adc
jp
rcll
and
add
and
in
incl
iret
mov
pop
fildl
sbb
insl
sub
pop
push
sub
cwtl
cmp
pop
mov
shlb
cmp
aad
insl
lea
mov
test
ja
xor
loopne
out
ficompl
addl
add
pop
cwtl
js
pop
mov
mov
xchg
test
fwait
or
je
out
fwait
mov
sbb
inc
push
pop
cmp
add
inc
and
add
jl
xchg
ja
loop
in
add
push
push
lods
add
and
clc
int
jns
xchg
push
mov
or
xor
add
xor
aam
je
and
rcrl
pushf
mov
clc
fildll
sbb
pop
sbb
rorl
xchg
adc
cltd
add
test
andb
sub
and
pop
dec
inc
cli
aas
adc
xchg
cmp
cwtl
je
int
mov
mov
jb
pusha
inc
mov
fbstp
cmp
dec
add
iret
stos
sbb
dec
mov
mov
push
decl
icebp
nop
push
jo
dec
mov
fidivrs
outsl
push
or
xor
ss
xor
dec
adc
sbb
hlt
scas
sbb
pop
pushf
in
fadd
mov
mov
mov
call
xchg
pusha
test
shlb
mov
cmp
rolb
push
inc
aam
decl
mov
js
sub
es
cmc
decl
inc
fildl
inc
adc
add
insl
xor
out
mov
stos
pop
cmpb
orb
adc
inc
adc
lcall
outsl
xor
lods
adcl
mov
fcom
pop
adcl
or
fistpll
xchg
rorb
adc
flds
or
xchg
dec
xchg
xchg
mov
mov
pop
arpl
test
dec
mov
sbb
push
add
pusha
jne
nop
fldenv
scas
js
stos
xchg
call
and
xchg
int
addr16
addr16
ror
xor
rorl
push
shlb
and
imul
pop
stc
insb
jo
jp
sub
xchg
imul
ss
mov
pop
les
movsb
js
in
repz
push
jnp
test
lret
cli
sbb
aam
cltd
icebp
aam
loope
or
or
movsl
hlt
inc
mov
mov
mov
xor
cmpb
add
cmp
sub
jne
addl
or
aas
incb
jo
scas
addr16
mov
je
aad
xchg
testl
incb
shl
sahf
push
lea
jg
mov
es
mov
lods
sub
cmpsl
out
stos
jbe
fnstsw
insb
aad
int
mov
xor
faddl
sbb
ss
pusha
add
rorb
negl
pusha
add
aam
add
dec
outsl
decb
mov
cmp
lcall
lods
cmpb
fsub
sbb
pushl
xor
test
arpl
shll
popf
jl
gs
stc
mov
ds
inc
lea
lret
add
cmc
in
daa
ds
lods
clc
fbld
mov
add
pop
and
out
jg
cmpsl
leave
push
xor
sar
jmp
and
pop
ja,pn
or
ja
or
sub
adc
rclb
xchg
or
rol
leave
inc
shrl
in
mov
mov
hlt
sbb
sub
ret
mov
cld
sarb
sahf
es
adc
test
mov
lret
push
sbb
rorb
ret
pop
pushw
dec
ljmp
sbb
movsb
mov
sbb
mov
mov
lods
mov
cmpsl
add
pop
push
jo
popa
lds
pushl
ljmp
sub
fcoms
ljmp
shll
inc
mov
neg
daa
in
enter
jg
bound
popf
xor
sbb
sbb
inc
lods
addr16
jb
adc
hlt
jmp
xor
filds
rclb
sbb
fcom
sbb
jp
dec
pop
inc
mov
ja
incl
mov
out
mov
lock
je
push
rep
sub
push
js
inc
lret
incl
dec
inc
mov
scas
adc
dec
fnstenv
lock
cltd
mov
data16
addb
jae
testb
call
call
icebp
pushf
outsb
scas
fs
loope
fsubrs
scas
mov
loop
inc
push
pushf
mov
jle
push
push
es
test
sbb
jmp
add
xor
mov
cmc
orb
cmp
push
or
adc
repnz
jl
fcmovb
pusha
sbb
inc
jecxz
lcall
push
mov
loopne
cmpsb
or
pop
aaa
xchg
js
xchg
aas
push
stos
lahf
fdivrl
shlb
add
test
xchg
pop
test
xchg
sbb
jne
lock
pusha
aad
aas
add
mov
xchg
adc
test
mov
mov
adc
xor
dec
mov
jo
decl
push
dec
push
push
sub
jl
push
mov
clc
xlat
inc
push
cld
js
int
mov
pop
pop
loopne
sub
decl
cld
shrl
cmpsl
test
mov
jne
add
ljmp
push
fdivrs
lahf
mov
idivl
jmp
and
xor
fidivs
pop
mov
nop
movsb
lods
pop
fstps
leave
pusha
nop
scas
add
push
rclb
pop
lock
sub
stos
inc
xchg
orb
and
fs
inc
sub
ja
ret
jg
aad
push
inc
sub
inc
dec
outsb
roll
lahf
and
sbb
sti
or
add
sbbb
jle
xchg
clc
jg
add
leave
mov
push
out
lcall
pop
lcall
sub
or
ja
add
dec
aad
aam
dec
mov
jg
cmp
mov
pop
dec
add
fs
sub
jecxz
sbb
shl
cmp
aad
cmp
pop
shrb
pop
xor
loop
xor
out
jae
xor
popf
into
mov
stos
mov
ret
pop
test
notb
mov
addr16
mov
push
scas
push
sub
inc
aaa
push
fwait
call
lcall
push
es
gs
mov
add
pop
aad
xor
jo
sub
cmp
pusha
cld
das
or
cmp
test
xchg
jb
lret
add
stos
mov
decl
iret
mov
jle
icebp
adc
mov
jl
and
jg
ljmp
cltd
or
jne
loop
bound
cmp
sbb
xchg
sbb
and
push
sbb
filds
xor
int
jne
filds
jmp
xchg
jbe
sbb
adc
movb
cmpsl
mov
std
or
jecxz
inc
dec
daa
push
in
in
pop
jne
xchg
push
fadds
decl
inc
in
ficoms
test
add
fxch
xor
adc
repnz
adc
dec
push
jb
ds
cmp
push
mov
and
pop
fcomp
push
add
dec
int
addr16
lahf
lock
call
dec
sbb
stc
add
jg
or
add
push
mov
jp
test
test
inc
hlt
dec
adc
xor
adc
pop
fildl
movb
or
cmp
mov
inc
sti
scas
cmpl
pop
add
mov
aad
push
dec
mov
jl
mov
das
pop
sub
sbb
popl
push
test
and
mov
jge
fnstsw
clc
adc
neg
enter
decl
cltd
pop
cmp
sbb
orb
and
sub
add
or
ret
out
std
or
mov
push
popf
fwait
cmp
and
adc
push
ret
jl
rcrb
test
sbb
fbld
pop
push
mov
pop
lret
scas
add
sub
inc
adc
cmovbe
mov
sub
or
dec
out
aaa
cli
fisubrs
cmp
push
inc
mov
xor
lcall
pop
fstpl
cmpl
sub
fbstp
pop
xor
push
loopne
popa
jne
out
adc
daa
dec
adc
fs
data16
je
lods
shl
sub
push
pop
andb
xchg
loope
jg
or
jg
ljmp
dec
push
fldcw
ds
ror
push
movsl
mov
push
mov
ja
xor
xlat
sarb
or
xchg
xor
cmp
jmp
push
or
add
loope
insl
cmc
inc
and
test
bound
fiaddl
iret
xor
adc
shlb
lret
imul
leave
lcall
fwait
lcall
sbb
mov
push
xchg
shlb
aas
pop
jno
fs
jo
adc
leave
int3
or
dec
jg
inc
outsb
js
push
js
jecxz
adcl
lahf
add
push
notb
sub
es
push
jg
dec
add
movsb
add
ror
push
aad
jg
pop
scas
sbb
add
cmp
fsubr
mov
jmp
jo
cld
or
clc
fldt
aam
jne
xor
nop
out
clc
fnstsw
inc
xor
mov
mov
bound
call
pop
cmp
pop
in
loope
push
or
dec
xor
add
or
icebp
stos
fwait
rcrb
mov
push
push
mov
or
and
adc
test
dec
out
add
clc
ret
ret
std
lock
mov
and
push
fdiv
push
cmp
clc
or
mov
or
mov
xchg
sbb
jle
pop
cmp
cmp
loop
incl
or
stos
or
pop
or
in
bound
cmpsl
shll
mov
cmp
aaa
aam
mov
loopne
jno
divb
movsb
pop
and
clc
ret
push
inc
mov
sub
call
inc
test
jmp
icebp
call
fists
pop
push
adc
icebp
mov
inc
cmp
ds
out
fcomps
push
shlb
sbb
pushl
mov
icebp
adc
or
inc
and
cmp
addb
sbb
loop
popa
sar
leave
or
lcall
add
inc
aas
push
inc
iret
mov
rcr
aas
mov
sub
add
decl
jae
lahf
test
and
inc
cltd
fistpl
incl
or
addb
movd
rcr
mov
testl
in
fstpl
push
shrb
psubb
inc
mov
js
inc
inc
cwtl
out
imull
test
fcompl
push
cmp
outsl
daa
js
mov
fisttpll
push
in
or
jl
int3
int
loopne
and
ss
lahf
or
push
push
sbb
mov
fadd
test
lahf
pop
cmc
cmp
addr16
out
cwtl
mov
lods
mov
cltd
pop
loopne
frstor
jmp
mov
lcall
mov
mov
test
arpl
adc
push
add
icebp
sbb
sbb
fmulp
stos
scas
add
inc
in
or
ljmp
je
mov
sub
sbb
cmpsl
jo
test
sub
jl
nop
stos
lea
mov
jl
arpl
adc
or
and
sub
cmp
mov
inc
jge
dec
push
insb
adc
sbb
mov
xchg
push
loope
in
fbstp
mov
aas
or
ljmp
js
mov
ja
rcl
insl
test
sbb
loop
aam
mov
sbb
sbb
sbb
clc
loopne
ljmp
sarb
adc
add
lahf
or
aaa
cmp
add
xor
aad
lds
lock
sub
aas
cmpsb
adc
push
lods
cli
pushf
pop
jo
add
mov
mov
pop
decb
sub
jle
lods
jnp
aaa
or
sbb
lock
add
aas
cli
jmp
in
test
imul
xchg
mov
les
cmp
push
cmpsl
sti
dec
fmuls
mov
mov
cld
mov
lock
sbb
int3
lahf
and
dec
mov
dec
les
add
jne
and
ss
cmp
and
inc
dec
cltd
clc
cmc
mov
pop
inc
xor
sbb
lcall
gs
loopne
or
leave
rorb
lahf
adc
outsl
stc
addr16
hlt
or
rorl
mov
sarb
sbb
inc
cmc
inc
test
inc
xchg
loope
icebp
mov
in
xchg
cs
push
lret
out
pop
loopne
movsb
xchg
mov
xchg
orb
repz
mov
idivb
shll
popa
jle
inc
xor
ljmp
scas
pop
rorb
fwait
xchg
pop
jl
std
jp
xchg
push
or
and
xchg
std
add
mov
psubusb
push
fstps
fucomi
mov
das
icebp
push
out
aam
ret
imul
xor
incl
sahf
or
inc
sbb
pop
je
aaa
mov
push
and
ja
jg
dec
sub
mov
pop
mov
adc
xchg
icebp
inc
cli
push
hlt
pop
inc
lock
cli
fistpll
xlat
ret
pop
fldl
mov
sub
mov
ror
out
or
fxtract
or
xor
or
jo
sub
imul
popf
incb
testb
cmp
push
lret
outsb
xchg
pop
and
ret
pushw
mov
or
add
xor
mov
sbb
and
dec
cmp
nop
mov
dec
cwtl
fwait
clc
mov
and
push
inc
push
pusha
fwait
push
dec
loop
cmp
lock
mov
mov
adc
push
adc
add
dec
jbe
dec
data16
call
xlat
dec
test
shrb
out
rcrb
cld
sbb
fidivrl
mov
sbb
cmpb
hlt
das
rclb
or
jo
xorl
cmp
sub
aam
push
pop
sarl
push
cmp
push
shrb
cmp
sbbb
lds
lcall
sub
movsl
sbb
mov
dec
push
into
dec
mov
dec
add
into
jb
ljmp
sbb
cwtl
roll
mov
xlat
pop
dec
jne
mov
push
dec
dec
lret
rol
sti
mov
push
in
push
inc
or
jecxz
push
add
jo
call
jecxz
mov
clc
incl
mov
add
imul
mov
mov
lods
dec
mov
inc
sbb
push
sbb
cmp
test
inc
ljmp
stc
or
incb
out
mov
lods
xchg
stc
pop
test
aad
mov
sbb
or
cmp
popa
or
add
mov
mulb
stos
aad
aaa
cli
sahf
stos
cmp
jmp
pop
or
inc
or
daa
cmp
push
sbb
fs
mov
ret
cmc
jmp
or
push
pop
data16
aam
ret
nop
and
aam
push
xchg
xor
or
lock
pusha
dec
mov
out
mov
cmp
test
mov
mov
insb
out
popa
sub
cmc
pop
clc
dec
repz
and
in
js
insb
ds
test
jle
jg
add
lea
scas
and
test
and
sub
inc
and
fdivr
push
fdivl
hlt
lods
divb
sbb
inc
loope
inc
hlt
call
adc
and
add
sbb
xor
sbb
scas
mov
aas
cmp
aad
mov
add
call
inc
fidivrs
and
push
mov
insb
cmp
je
push
xor
aaa
cs
inc
ret
stc
fucomip
pop
ficompl
aam
aas
xchg
xchg
sub
imul
or
sbb
addr16
mov
inc
pop
subl
sbb
add
inc
hlt
add
cmp
clc
jp
repz
test
iret
in
aam
sub
pop
mov
and
mov
mov
jb
jg
dec
push
pop
mov
jmp
pop
add
icebp
cmp
aas
mov
jns
in
sub
ljmp
sub
imul
add
and
enter
fists
mov
loope
sub
mov
sbb
xchg
nop
into
or
mov
inc
out
lock
sub
loop
push
fstl
pop
inc
clc
inc
mov
dec
pop
ss
cmp
adc
dec
mov
add
add
cld
push
dec
gs
rcrl
rcrl
enter
mov
mov
jp
jns
inc
mov
aas
out
es
enter
and
ja
sbb
lds
aas
push
jne
fcoms
ror
inc
or
mov
jl
mov
dec
stc
imul
loope
subb
call
addr16
mov
nop
popf
stos
xchg
subl
pop
shlb
adc
and
shrl
and
mov
adc
mov
popa
mov
pushf
bound
out
mov
jnp
xor
stos
outsb
lock
hlt
lahf
cmp
pushf
push
xor
jmp
test
int
pop
mov
addl
mov
push
xorb
push
push
in
lcall
lds
sbb
adc
and
xchg
je
cs
in
and
adcl
push
cmp
cmp
sbb
adc
movzbl
rclb
sbb
cmpsl
adc
jg
stos
adcb
leave
sbb
inc
push
and
ret
or
pop
mov
movsl
inc
mov
and
adc
loopne
xor
adc
lret
lods
cmp
std
fimull
jg
sub
sub
mov
lret
mov
jp
pop
dec
add
lds
add
std
sub
sarb
roll
jne
out
mov
int3
insl
fwait
xor
mov
adc
cld
pop
adc
nop
mov
inc
push
aaa
pop
bound
jp
mov
xchg
int3
xor
add
push
cld
ljmp
int
int3
sbb
cmp
mov
jne
cltd
ror
push
inc
pop
sbb
stos
inc
push
xor
or
fcmovu
jb
arpl
add
inc
lcall
sub
inc
push
test
fcoms
jno
add
out
sbb
and
into
sbb
lcall
xchg
dec
fisubrl
add
push
mov
and
cli
mov
jmp
dec
cld
xor
sbb
adcb
sti
mov
sbb
js
lret
flds
dec
mov
push
push
cwtl
insb
and
ja
pop
or
add
enter
dec
clc
inc
lahf
push
rol
andl
jecxz
aaa
mov
bound
lahf
xor
inc
cmpsb
pop
movntps
jae
dec
jmp
jne
fists
cmp
repz
lea
adc
scas
cmp
fildll
lcall
sbb
add
xlat
xor
mov
adc
loopne
mov
mov
lcall
xor
pop
mov
push
fadds
push
adc
add
add
sbb
or
adc
mov
sub
int
jl
jg
dec
add
xchg
shll
adc
mov
gs
scas
mov
imul
mov
mov
push
sar
arpl
cmp
je
imul
mov
movsb
je
add
jecxz
incl
lret
insb
mov
and
mov
psrlw
xchg
aam
clc
mov
fcomps
sub
cmpsl
push
or
mov
push
fadds
mov
shll
popa
lock
add
jg
in
hlt
push
aad
andb
test
mov
movsl
nop
nop
imul
and
jmp
push
clc
in
mov
jb
jge
cmpsb
mov
pop
pop
inc
or
push
xchg
test
pushf
jns
arpl
push
sbb
cmp
jne
dec
adc
out
sarl
and
cli
push
in
jo
sar
and
inc
jmp
cld
incl
mov
dec
in
std
jns
push
rorl
adc
push
cmp
incl
sbbl
jg
aam
push
test
sub
inc
sub
cld
sbb
fisttpl
iret
lods
in
subb
cmp
cmpl
cwtl
add
xchg
mov
nop
xchg
jp
call
dec
and
popf
sub
stc
insb
xor
push
std
mov
xchg
jne
mov
mov
push
jg
fsubs
sub
mov
sbb
call
mov
inc
mov
imul
xorl
bound
cmpsb
jecxz
out
jne
xorl
sbb
inc
or
pop
mov
inc
sbb
cmp
in
cs
cwtl
adc
cld
jmp
push
shrb
jae
dec
loopne
call
movsb
lods
push
cld
or
out
dec
adc
sbb
incl
fnsave
imul
ret
mov
or
roll
loop
push
xor
push
clc
decl
hlt
xor
cmpl
sub
roll
and
outsb
lods
enter
ljmp
mov
call
pushf
f2xm1
add
sahf
jb
fsub
test
pop
movsl
dec
xor
dec
pop
pushl
enter
out
and
and
dec
pop
stos
flds
test
ret
aad
adc
pop
or
paddusb
sub
xchg
ss
jno
lahf
rcll
xor
add
xchg
mov
psrlw
mov
stos
lock
sti
add
and
sub
imul
xchg
es
pop
or
sbb
flds
lcall
inc
mov
fwait
lret
in
cli
lods
dec
xor
icebp
fcompl
mov
jmp
and
sub
sbb
mov
insl
incb
pop
push
jno
cwtl
jae
clc
dec
call
and
int
popf
pop
inc
aam
popl
mov
xor
and
add
mov
cmp
cwtl
aam
sbb
call
xlat
clc
ja
mulb
stos
pop
pop
decl
pop
mov
iret
pop
arpl
inc
mov
or
adcb
inc
push
arpl
popa
popa
dec
xchg
fbld
mov
pop
or
add
mov
inc
fistl
xchg
lahf
push
scas
jge
imul
inc
xor
mov
sub
arpl
and
scas
sub
cmc
and
testb
faddl
jno
mov
insl
outsb
add
loope
dec
jo
xor
add
cld
stc
push
jae
imul
adc
cli
and
sub
and
ds
adc
xor
dec
mov
fldl
dec
stos
mov
shll
pop
test
jae
push
lods
adc
sti
xchg
loop
cld
mov
sub
cld
push
inc
xchg
fucomp
lea
in
cmpsl
xchg
js
xchg
pop
ret
and
ret
or
cld
aas
cmp
call
stc
xor
or
xor
arpl
sbb
pushf
addr16
push
fnstcw
cwtl
clc
aam
loope
mull
addb
addl
ss
adc
jo
stos
inc
test
decl
hlt
addr16
popf
jno
mulb
mov
jbe
decb
dec
or
clc
icebp
or
lock
xor
pop
cmp
pop
pop
les
dec
jns
cmp
or
xlat
add
cmp
test
jl
jecxz
dec
stos
inc
mov
cmp
bound
xor
in
push
subb
lds
mov
sbb
or
dec
loopne
adc
mov
cmp
sub
or
add
xor
mov
fwait
jmp
add
pop
lods
std
xor
popl
mov
add
sbb
pop
dec
mov
sub
cmp
or
shlb
test
push
add
call
inc
adc
je
adc
test
jmp
movsb
pop
int
dec
or
sbb
ja
sub
pop
iret
loope
push
stc
lds
inc
mov
push
dec
jo
outsb
lahf
mov
fidivl
push
push
iret
adc
mov
lcall
cmp
push
pmuludq
sar
mov
and
sti
daa
jns
sbb
mov
and
nop
adc
dec
sarb
fdivrl
ficoml
mov
mov
push
fiaddl
out
add
outsl
test
js
fsubrl
je
es
fwait
outsb
jg
arpl
add
sahf
add
add
adc
test
jecxz
jg
stc
mov
ret
repz
adc
cmp
xchg
add
aam
insl
movsl
aas
stos
movsl
mov
push
cmp
fwait
mov
hlt
iret
adc
and
leave
jecxz
dec
lcall
xchg
sub
andl
out
add
int3
lock
aas
inc
jecxz
out
sub
or
xchg
out
test
cmp
inc
mov
data16
ljmp
lea
mov
push
or
sub
dec
test
pop
mov
aad
jb
bnd
pop
dec
orl
adc
xchg
jle
jb
xchg
aad
mov
lods
repz
inc
mov
clc
sbbl
test
popa
mov
ds
cli
ret
in
mov
xchg
inc
repnz
jb
jbe
jmp
cmp
ljmp
push
and
call
into
in
jle
ret
dec
movsb
mov
pop
es
repz
pop
mov
cmp
ljmp
js
xchg
push
cld
xchg
repnz
dec
and
pop
mov
popa
add
push
adc
push
mov
mov
mov
mov
or
aad
das
or
push
daa
dec
ret
sarb
lea
xor
mov
daa
jg
in
dec
imul
dec
mov
das
test
cmp
inc
add
pusha
in
shrl
add
and
mov
adc
sub
sbb
mov
decb
popa
jnp
rorb
mov
cmp
sub
mov
mov
mov
insb
push
lods
ror
sarb
sub
pop
push
test
mov
js
dec
loopne
lock
xchg
jp
int3
cmc
data16
push
rolb
jo
hlt
sbb
imul
sub
add
xchg
shrb
aam
aas
pop
mov
mov
add
mov
mov
xchg
mov
dec
sbb
push
jle
push
add
mov
enter
stos
idiv
orb
add
pop
mov
fldl
inc
or
test
dec
mov
or
rclb
into
mov
fldt
lock
fists
mulb
inc
xlat
dec
addr16
or
mov
les
cld
add
jmp
mov
cwtl
dec
or
pushf
pusha
movsb
add
lcall
and
jge
mov
popf
xor
fisubs
ss
out
sub
in
pusha
inc
add
sbb
imul
mov
sub
sbb
pop
mov
fwait
sub
jmp
pop
mov
add
in
in
sub
add
hlt
fucom
mov
add
outsl
out
xlat
fdivrs
aas
lods
ret
out
add
imul
mov
mov
add
and
mov
sbb
aas
adcb
sbb
cld
mov
sub
push
dec
out
lahf
aas
adcl
pop
aaa
push
inc
xor
add
inc
or
mov
cmp
aas
rcr
cmp
push
xchg
aam
mov
sbb
addr16
sub
jne
mov
fwait
mov
jnp
jp
ljmp
dec
or
stc
test
or
out
dec
lods
sarb
jae
jns
push
fildl
aas
je
mov
pop
mov
fcmovnu
mov
and
pop
xchg
cmpsb
dec
adc
mov
push
xor
and
or
cwtl
insl
xor
add
setnp
outsl
xchg
xchg
ud1
xchg
sub
aas
sbb
cmpsl
or
jo
mov
or
nop
push
bound
fisttps
cltd
rorl
icebp
enter
movb
inc
imull
int
sub
jge
jle
pop
and
flds
cmp
outsl
js
jl
pusha
mov
cmp
movsl
hlt
dec
ljmp
sub
cmp
cmp
mov
pop
movsl
and
or
inc
aam
mov
and
push
push
jno
cld
mov
pop
scas
ss
add
fucom
punpckhdq
fs
push
jnp
mov
lods
jo
pop
loopne
and
cmp
ss
aaa
push
daa
int3
sbb
xchg
shr
add
jo
popf
das
cmp
jle
push
inc
adc
cltd
xorb
aas
pusha
push
lods
cld
nop
adc
xchg
aas
jle
mov
into
lret
push
or
pop
call
stc
xor
call
loop
pop
movsb
decb
sbb
add
and
mov
iret
shll
pop
inc
push
dec
pop
mov
cs
mov
movsb
lock
mov
stc
dec
jno
mov
movsb
rcl
xor
sbbl
jl
jge
dec
lret
les
mov
inc
cli
sub
mov
cs
in
pop
push
and
mov
iret
xor
pop
mov
adc
xchg
rcl
in
iret
ret
jne
fcoms
sahf
mov
daa
lea
lcall
xor
cmpsl
shll
cmp
push
loope
cmp
ret
inc
dec
sub
sbb
xor
out
daa
in
push
aas
push
pop
jl
and
lea
stos
aam
or
fisttps
shr
xor
test
pop
sbb
mov
cmp
imul
and
clc
push
inc
dec
aaa
mov
sub
lahf
mov
fmuls
inc
xor
js
mov
add
repz
cli
xor
cli
adc
cmp
inc
cmc
jp
mov
adc
mov
adc
popa
xchg
add
pop
xlat
popa
cmp
pop
mov
adcb
dec
push
mov
into
test
mov
add
jl
or
mov
in
not
ret
adc
cs
xchg
xchg
ljmp
test
or
fsubrs
mov
push
mov
mov
cli
xlat
inc
lcall
pop
cmp
cmpl
sbb
jb
int
insb
push
into
lods
imul
das
mov
lret
outsb
lea
lds
sub
ds
push
xchg
push
cli
insl
stc
mov
fldcw
cmp
ret
or
mov
xlat
into
xchg
jecxz
ret
or
repz
pop
outsb
out
js
or
xchg
fxch
dec
test
dec
stos
lock
add
adc
push
pop
call
outsb
pushf
jnp
fwait
push
repnz
inc
test
int3
pop
dec
cmpl
sub
cmp
jbe
add
sub
inc
cmp
sub
mov
sbb
int3
xlat
clc
jo
xchg
dec
aam
dec
dec
js
sbb
in
fcom
and
out
cmpl
into
fidivl
or
scas
or
fwait
addr16
popa
pop
out
add
cltd
bound
cmpl
lret
stc
sarl
jne
sub
fs
sub
orb
orb
cld
xor
cmp
sbb
popa
push
cltd
icebp
mov
cmp
cmp
in
jmp
push
ds
js
arpl
ret
dec
inc
mov
imul
dec
jb
push
icebp
sbb
das
int
and
inc
push
popa
addb
lea
jmp
and
popa
sub
adc
movsl
insb
cmp
push
roll
cld
lds
imul
jae
cld
or
xchg
mov
xlat
push
pop
push
adc
xchg
sbb
mov
std
xchg
lea
out
and
ja
popf
inc
dec
lods
sub
push
and
cmp
add
int
daa
lahf
pushf
cmpsb
or
mov
loope
loop
pop
mov
das
inc
idivl
xchg
rorb
jle
mov
lods
stos
mov
and
aas
mov
sub
daa
or
aas
mov
push
fcoms
lock
loop
enter
pusha
xorb
mov
aad
nop
rorl
jecxz
xlat
gs
scas
lret
jle
out
cmc
xor
add
movsl
xlat
mov
dec
jp,pn
mov
inc
dec
cmp
pop
loopne
inc
shrd
mov
cmpsl
mov
aam
imul
in
sub
mov
sbb
aad
sar
arpl
jmp
fmul
outsb
pop
push
cmp
sbb
mov
gs
loop
inc
mov
pop
lcall
scas
push
pop
or
aas
jmp
inc
pop
mov
inc
or
ret
dec
sub
dec
xor
sbbl
std
jnp
cli
unpckhps
ljmp
lea
xchg
add
pop
sbb
dec
jp
cmp
mov
pop
hlt
pusha
sub
sar
xchg
inc
aas
rcl
and
les
hlt
mov
aas
les
inc
inc
data16
xchg
cltd
xchg
or
pop
lret
pop
jnp
sarl
xor
xchg
lret
ljmp
shlb
shl
inc
lods
iret
popf
jae
sbb
sbb
loope
test
mov
xor
and
xchg
jb
xchg
cli
mov
cmp
jp,pn
or
je
dec
ss
cmpsb
mov
sub
filds
daa
mov
arpl
mov
outsl
test
ret
sbb
lcall
jnp
jo
lods
lds
shll
repnz
push
sbb
repz
pusha
cmp
jo
pop
mov
scas
popl
cli
mov
int3
lds
jg
in
sti
xlat
pop
and
sbb
mov
sti
cmp
stos
ja
inc
adc
mov
dec
dec
and
cmc
sub
and
cmp
fcom
sub
inc
sbb
cmp
fdivr
stc
or
mov
cmp
movb
test
mov
sub
mov
fistpll
xchg
xor
ret
mov
sub
or
ficomps
inc
sub
sub
cwtl
xor
hlt
sub
xchg
inc
clc
aas
test
stos
insb
push
push
flds
pop
mov
mov
push
add
xlat
ljmp
mov
push
xor
mov
idiv
mov
scas
push
mov
ljmp
es
mov
push
jge
loope
lea
movsb
sub
inc
icebp
jge
call
push
inc
xchg
xor
xchg
loopne
jp
pop
adc
cli
fbld
mov
mov
cli
xchg
push
mov
cmp
std
js
es
sbb
loop
decl
dec
aam
lods
adc
js
or
aad
outsl
repnz
sbb
popf
test
dec
into
xor
test
pushl
or
mov
aad
xchg
xor
int3
jmp
movsb
push
das
subl
mov
scas
push
jl
add
pusha
sahf
dec
std
inc
jbe
mov
mov
aas
jmp
fdivs
add
xchg
faddp
cwtl
addb
fcomps
add
lods
mov
or
add
js
call
or
push
cmp
adc
pop
pop
pop
push
leave
sub
rolb
add
std
ficomps
aam
mov
sub
loopne
and
mov
out
outsb
xchg
outsl
test
mov
jb
pushf
js
jns
mov
cmp
test
imul
xor
jg
arpl
dec
jecxz
dec
les
movl
mov
cwtl
icebp
xor
or
add
filds
mov
or
aaa
ret
sub
imul
push
mov
out
cmp
out
int
loopne
pop
mov
icebp
add
repz
mov
pushl
push
shlb
rcl
lcall
fcom
insb
in
ds
add
int3
or
and
cmp
lock
pop
fimull
xchg
pop
shlb
mov
mov
lret
xlat
xor
inc
push
fsubrs
cld
ja
aad
ror
loope
cmp
scas
inc
push
ljmp
sbbb
mov
dec
push
ljmp
into
cld
lcall
xchg
cmp
lcall
add
push
cmc
add
cmpsb
test
jg
or
popl
lds
push
je
mul
jp
inc
and
outsb
rorb
pop
jge
push
push
adc
call
adc
fldz
sbb
pop
pop
pop
loop
sub
in
lahf
dec
or
std
ds
lock
or
pop
js
ret
clc
dec
adc
cmp
inc
push
or
pop
popa
lcall
xchg
outsb
inc
and
stos
lock
jp
adc
adc
xor
pop
xor
das
xor
aam
mov
test
xchg
mov
sub
add
ret
mov
divl
pushf
push
mov
icebp
imul
loop
aas
jnp
sar
insl
stos
push
jno
data16
inc
test
fs
dec
or
cld
call
cmp
cmpsl
adc
xchg
or
jp
or
inc
out
push
push
or
fnstenv
or
lds
in
mov
or
jmp
ds
sahf
inc
sbb
mov
shl
jmp
movsb
cld
call
ret
out
xor
nop
sbb
ret
inc
inc
rorl
or
mov
sub
cmp
sub
lock
cmp
ljmp
cmpsb
add
pop
dec
cld
jmp
rcl
cltd
jp
lods
pop
push
xor
push
cmovb
inc
imul
inc
mov
pop
aad
jecxz
orb
test
inc
or
xor
inc
mov
xchg
outsb
stos
pop
movsl
ss
sbb
push
xchg
cld
stc
inc
out
das
xchg
orb
das
add
jo
xchg
lds
insl
ljmp
scas
cwtl
lock
sbb
inc
adc
pop
das
ja
cmc
adc
fldl
xor
mov
xchg
ja
mov
add
test
cs
xor
fldt
or
pop
call
dec
jnp
rol
xchg
jl
and
jno
fs
scas
out
pop
dec
pop
inc
mov
imul
and
jg
sbb
jecxz
lods
out
das
mov
test
dec
sub
aad
andb
or
fisubrl
push
adc
push
mov
push
mov
ss
push
js
ljmp
std
call
adc
sbb
sarb
pop
or
hlt
sahf
icebp
adc
ret
fdivl
cmp
mov
stos
xor
sub
add
lock
jg
lahf
sub
incl
adc
lods
in
in
iret
add
mov
push
ss
add
dec
xchg
mov
jno
xchg
xorb
sub
mov
or
scas
jb
dec
cltd
out
sbbl
push
dec
xchg
pop
lcall
mov
in
testl
stos
negb
dec
or
jo
add
test
inc
loop
aad
pop
andb
mov
pushl
pop
adc
add
je
mov
sti
adc
movsl
or
orl
adc
push
addl
movsb
lods
mov
mov
mov
daa
add
hlt
sahf
jo
shrl
mov
sub
fwait
ja
lods
lods
hlt
mov
sbb
and
sbb
mov
rcr
ret
xor
ja
jbe
mov
addr16
push
cmp
fisubl
lret
lods
xor
push
sub
pop
mov
iret
adc
dec
adcb
daa
push
push
pusha
orb
stos
aas
mov
dec
adc
movq
dec
inc
lcall
pop
dec
mov
arpl
jnp
mov
sbb
adcl
stos
ret
cmp
inc
flds
lcall
xorb
add
xchg
ljmp
cmp
sub
int
adc
pop
loope
mov
jae
push
sbb
std
adc
and
add
push
sub
mov
aas
mov
in
fimull
xor
mov
and
mov
cld
push
sub
mov
fstps
adc
jg
inc
fistps
pop
push
lret
xchg
mov
ret
jne
lock
fbstp
insb
jge
addr16
adc
in
xchg
xchg
add
add
sbb
xor
test
sarl
cs
jle
lcall
inc
add
jg
jp
ljmp
test
ljmp
xor
xchg
cmp
fwait
xchg
stos
into
push
dec
mov
es
ret
jl
or
push
or
fbstp
mov
pop
inc
push
cmp
inc
lock
pusha
lret
jmp
adc
or
lcall
movsb
jle
insl
insl
push
jno
mov
mov
and
mov
repnz
jne
lcall
add
sbb
and
cwtl
outsl
mov
jnp
dec
jg
es
sub
xor
xchg
mov
clc
fwait
js
inc
sub
or
pop
fistpl
xchg
adc
push
sarl
cmc
incl
mov
rolb
cmpsl
lea
push
pop
stos
mov
test
add
jl
jle
push
ret
sahf
pop
push
std
popl
push
fcompl
sbb
pop
adc
and
and
cli
lcall
pop
add
push
and
jg
lcall
xor
fsubrs
pop
orl
dec
mov
int3
popa
mov
jmp
mov
lds
push
ficompl
sub
popa
inc
dec
mov
add
andl
and
mov
fs
add
icebp
add
sub
out
mov
ss
jg
loopne
fcomp
repz
mov
add
cmpsb
jne
mov
pop
jmp
jno
jge
push
mov
repnz
add
es
loopne
adc
test
cmp
mov
outsb
cmp
lret
jl
test
pop
add
pop
add
xor
cmp
jbe
push
pusha
pop
adc
lock
or
and
mov
push
dec
rolb
ret
ljmp
sub
mov
xchg
inc
or
pop
in
fwait
mov
cmc
pop
ss
push
xor
xlat
jmp
add
lds
mov
cmp
mov
inc
rcrl
repnz
xchg
movsb
fbld
inc
cmp
push
push
mov
out
push
loop
and
add
cs
iret
bound
push
xor
inc
add
call
insl
sar
repnz
adc
shlb
lock
in
jb
or
pop
ds
or
and
popf
ds
cmpsl
mov
jg
sub
pop
sti
jo
add
add
or
in
mov
cltd
idiv
call
push
pop
je
pushf
popa
dec
add
jmp
das
jge
or
lds
sbb
mov
out
cmp
xchg
bound
incl
or
add
xchg
jge
mov
fiaddl
mov
in
jp
hlt
push
mov
xor
add
push
out
inc
or
xor
cmp
mov
or
cld
call
js
pop
xor
test
shrl
mov
adc
cld
in
outsl
mov
mov
mov
rcr
popf
push
stos
jne
add
mov
add
mov
sahf
icebp
sbb
push
js
add
xchg
xchg
sbb
mov
scas
je
dec
adc
fbstp
cwtl
sub
pop
pop
ret
or
movsb
sbb
pop
in
or
pop
dec
clc
mov
sbb
push
and
cmp
sbb
aas
xor
xchg
repnz
inc
ljmp
or
addb
jb
and
cmp
subl
xchg
rcl
mov
push
adc
andl
adc
or
dec
mov
sub
add
dec
xor
ljmp
bswap
lods
insl
clc
or
xchg
je
sbb
pop
or
aam
pop
rcrb
jmp
push
xlat
inc
push
hlt
test
and
aas
pop
incl
jl
sbb
mov
mov
andb
sbb
pop
in
xor
jb
pop
mov
lcall
push
in
call
stos
adc
fdivs
jg
scas
enter
and
fistpl
aas
and
push
notb
adc
or
lcall
out
mov
addl
mov
jg
push
loope
cs
mov
push
jecxz
or
sbb
or
mov
inc
xor
pushl
ss
hlt
shlb
add
push
das
sarb
mov
sahf
test
pop
or
cli
mov
ret
insb
std
pop
sbb
fwait
or
mov
dec
inc
jle
sbb
jecxz
xchg
inc
and
ljmp
or
aas
xor
add
jno
test
out
mov
or
ss
sbb
xchg
pop
shl
sahf
xchg
adc
xchg
and
sub
sbb
bound
mov
not
xor
testl
add
cli
or
lea
and
loopne
adc
dec
ret
jmp
sbb
inc
jecxz
xchg
ss
out
insl
call
inc
pusha
in
xchg
je
jecxz
mov
test
call
jg
sbb
sar
pushf
int3
dec
andb
mov
and
pop
cwtl
push
jl
mov
cmp
stos
add
push
adc
test
pusha
adc
cli
fwait
movb
xchg
cmp
pushl
xchg
dec
call
movsb
mov
xchg
xor
or
dec
aaa
lahf
fs
add
or
xchg
sbb
xor
cmpsb
or
clc
adc
xchg
imul
iret
xchg
add
and
jnp,pt
sub
arpl
outsb
push
ds
mov
test
cwtl
adc
adc
movsl
inc
mov
loope
mov
hlt
push
inc
mov
pop
rorl
lea
add
inc
lret
bound
scas
mov
adc
cltd
xor
pop
or
int
inc
cmp
loopne
cli
mov
lds
inc
sti
cld
adc
neg
or
icebp
dec
jbe
es
arpl
push
pop
mov
cmpsb
push
call
or
test
sub
cmpsl
or
and
fadd
sub
inc
inc
push
or
aam
jo
mov
jne
lods
jmp
pop
mov
adc
loop
push
jle
mov
ret
push
inc
sbb
xchg
scas
xchg
lahf
popa
repz
sbbb
sub
fcomi
adc
adc
jecxz
sbbl
and
testb
ret
mov
pop
js
enter
adc
push
test
push
dec
push
mov
inc
mov
jb
add
daa
ret
pusha
xchg
adcl
jmp
pop
pop
popf
stos
addr16
sbb
sbb
negb
inc
ja
jo
orb
mov
into
std
jmp
popa
xor
pop
ffreep
pusha
test
ret
and
push
dec
push
les
push
sbb
sub
jo
cwtl
insb
push
mov
or
shrl
decl
shll
cwtl
shrl
cmp
or
insb
dec
jl
and
shrb
js
add
jnp
repnz
or
mov
shrl
push
mov
test
sub
sub
mov
sbb
pop
pop
lds
loope
xchg
sbb
or
sbb
aas
mov
test
in
mov
push
add
and
subl
mov
mov
rolb
add
dec
xchg
mov
sub
adc
mov
push
dec
jo
test
cwtl
pop
and
subb
sub
mov
in
and
sarb
mov
aaa
mov
push
push
test
and
mov
push
push
sbb
das
in
insb
jle
and
pop
adc
inc
sbb
pop
repnz
and
add
arpl
inc
out
cltd
ret
loopne
pop
aas
repnz
inc
lahf
and
or
test
and
notl
jno
add
sbb
cld
and
push
and
adc
dec
cmpsl
inc
in
xor
lods
cmp
and
clc
scas
pop
mov
lahf
jmp
dec
test
sarb
dec
jge
cltd
add
pushf
xchg
ret
inc
subb
scas
add
stc
pop
bound
xchg
jnp
mov
dec
add
sub
decb
mov
call
adcb
outsl
dec
xchg
incb
inc
dec
push
imul
mov
jle
daa
fstps
lahf
pop
mov
pop
mov
or
rclb
cmp
mov
ret
dec
and
xor
xor
add
push
inc
cmpsl
jmp
test
outsl
dec
mov
out
pop
js
shrb
dec
clc
jae
cmp
or
adc
in
sub
cmp
pusha
jnp,pt
ljmp
daa
outsl
xchg
addl
push
xchg
mov
outsb
jmp
sbbb
test
out
and
mov
repz
addb
sbb
mov
jne
testl
adc
sti
push
into
inc
test
pop
mov
test
add
loope
loope
fcomps
mov
sub
push
inc
sbb
inc
pop
push
inc
je
pop
push
mov
dec
add
mov
hlt
mov
add
in
push
movsl
pop
cmp
pop
inc
xchg
pusha
push
or
jne
subl
leave
fdivrs
push
pop
pop
shrb
mov
pusha
pop
mov
nop
inc
add
icebp
xchg
jg
add
insl
lcall
adc
ss
dec
dec
fldl
repz
mov
ficoml
sub
dec
psubusw
aad
in
mov
or
push
or
outsl
movsb
icebp
or
jno
movsl
sbb
roll
dec
pop
iret
outsl
fldl
push
aas
movhps
in
loop
jno
add
popf
add
repz
mov
and
testl
rsqrtps
push
inc
fadds
mov
repnz
incl
aam
xchg
clc
and
stos
pusha
lea
cld
push
insl
fstps
push
mov
and
stos
mov
pop
lahf
mov
xor
cmc
inc
inc
ret
sbb
push
ret
subb
push
adc
imul
pavgb
sbb
push
or
xor
sub
xchg
out
hlt
es
push
mov
cli
lahf
mov
adcb
mov
jbe
out
cmp
rolb
ds
mov
push
dec
xchg
cld
cmp
sbb
mov
call
push
mov
outsl
cmp
das
stos
jmp
inc
jo
loopne
cld
les
nop
sbb
inc
adc
arpl
cwtl
cwtl
pop
mov
mov
cmp
leave
pop
rol
push
dec
mov
and
js
mov
dec
adc
mov
dec
outsb
mov
sbb
push
xor
lock
addr16
pusha
icebp
mov
sbb
in
decl
and
sub
adc
pop
add
xchg
sbb
jno
call
cmp
or
mov
dec
aam
cmpb
test
jmp
cwtl
int
rorb
scas
test
mov
and
mov
outsb
out
fsubs
mov
or
jg
mov
sbb
mov
add
or
push
or
lods
push
push
jge,pn
icebp
pop
in
stos
loopne
movhps
push
addl
ret
add
cmp
nop
mov
jl
aad
js
mov
adc
push
sbb
scas
sub
inc
and
rclb
adc
add
aas
in
jp
sbb
in
hlt
arpl
cld
aad
loop
pop
jae
mov
inc
clc
test
out
push
les
push
and
xor
fstpl
call
or
rcll
into
pop
inc
pop
mov
pop
dec
inc
nop
mov
push
insl
push
mov
xchg
and
test
or
jbe
mov
scas
xor
repz
nop
movsl
hlt
jp
xchg
scas
jmp
mov
test
fwait
pop
mov
add
push
mov
xor
mov
inc
mov
iret
xchg
pusha
push
sub
sahf
jecxz
repnz
das
mov
fisttps
push
lods
mov
insb
mov
mov
mov
stos
add
sahf
sub
jle
aas
or
push
dec
xchg
push
in
and
subb
inc
dec
outsb
xor
jmp
sahf
mov
add
fmuls
or
adc
add
lods
inc
pushf
das
jbe
insb
shlb
fwait
xchg
aas
stos
mov
orb
inc
test
dec
lds
inc
sahf
sti
add
dec
push
pop
dec
jle
jmp
fidivl
and
xor
xor
jmp
pop
lds
pop
int
orb
push
dec
pop
xchg
addb
add
cmp
mov
adc
xor
aas
add
jmp
jno
in
mov
mov
flds
dec
mov
iret
jo
push
test
test
addr16
mov
jg
out
mov
mov
xor
call
inc
pop
lock
push
stc
das
mov
add
mov
jne
xchg
dec
adc
scas
or
cmpl
cld
movsl
inc
sub
notb
lea
push
fs
test
aam
cwtl
mov
xchg
xor
cltd
jb
mov
or
or
xchg
mov
fld
add
aas
mov
pop
gs
insb
scas
mov
or
pushl
lea
mov
dec
aam
inc
sarb
enter
jo
stc
xor
and
hlt
aam
mov
pop
mov
stos
mov
mov
dec
ret
test
and
pop
int3
dec
repz
push
test
jmp
sbb
pop
inc
add
cmp
sbb
xorl
std
lods
push
xorb
and
ja
and
popa
fisttps
sarb
pop
dec
mov
aaa
sbbl
cwtl
mov
push
jbe
rorb
jae
and
jg
pop
jae
test
pop
stc
stc
sarl
push
clc
into
js
lock
dec
dec
lret
cmp
dec
adc
pop
popa
cmpsb
pop
sub
das
xor
pop
repz
fsubl
inc
push
pop
or
push
adc
insb
mov
push
mov
addb
nop
movsl
enter
inc
cmp
jge
sub
pop
mov
jg
pop
mov
jecxz
adc
daa
xor
xorb
leave
xor
dec
mov
push
push
or
insb
xchg
mov
or
imul
pop
imulb
addr16
cmovge
pop
adc
lds
je
jno
data16
jp
sarb
nop
dec
jmp
and
inc
mov
cld
sbb
push
enter
pop
mov
jl
subl
stos
push
pop
stos
scas
inc
add
stos
pusha
in
inc
movsb
das
mov
ret
inc
mov
out
sbb
fmuls
adc
jmp
inc
xor
xchg
rcl
lret
mov
icebp
jns
inc
popf
push
or
jge
test
lcall
movsb
loopne
hlt
add
xchg
fisttpl
sarb
cmp
xor
pop
adc
mov
pop
lods
xchg
mov
addb
inc
jp
push
or
cmp
sahf
push
faddl
add
mov
std
mov
xor
aas
rclb
rolb
bound
push
adc
jo
lret
insb
or
or
and
adc
sub
loopne
dec
push
aas
js
jb
xchg
and
jnp
jnp
mov
arpl
cltd
fstpl
shlb
push
adc
lret
pusha
insl
adc
incb
inc
or
loop
in
imul
push
rolb
jle
dec
mov
iret
jo
mov
cmp
lea
adc
xchg
loopne
dec
or
jns
xchg
xor
in
push
jno
rol
lcall
cltd
jo
lret
add
ret
cmp
lods
stos
mov
subl
js
push
inc
pop
out
lock
mov
sbb
into
mov
sahf
sbb
pop
push
pop
sbb
mov
add
rolw
pop
push
inc
popa
inc
rcrb
adc
std
and
sbb
lea
nop
pop
es
movsl
jbe
into
xchg
in
fmul
pop
push
add
dec
out
sbb
push
push
aas
scas
and
push
xchg
jae
pop
ret
aaa
lea
adc
mov
rclb
jl
test
mov
add
sub
push
test
add
fisubrl
jns
lret
push
jns
xchg
adc
cmp
cli
push
jp
push
or
mov
xchg
inc
pop
in
mov
inc
or
xor
test
ljmp
mov
pop
sub
rolb
scas
cmpsb
cmp
add
js
mov
mov
mov
xor
testb
inc
cltd
in
test
pop
mov
shlb
inc
push
testl
outsl
dec
mov
lret
fstl
add
ret
mov
stos
jle
pop
mov
loop
stos
and
push
fwait
push
mov
dec
cld
addl
sbb
and
bound
dec
inc
sbb
xor
mov
loop
jmp
adc
jae
lds
cmp
lret
xchg
ja
push
movsl
shrl
into
pusha
fsubl
push
lret
imul
add
fisttps
or
add
jb
icebp
sbb
and
xchg
mov
mov
popf
push
push
xchg
xchg
daa
add
inc
adc
push
addb
jns
pop
and
xchg
push
and
daa
mov
xor
add
push
aad
outsl
dec
xchg
aas
push
lea
cmc
std
mov
fldenv
lock
inc
lcall
test
loopne
test
cmp
rclb
stos
cltd
add
jb
inc
dec
and
sbb
mov
popl
repnz
out
inc
xor
enter
jle
out
rorb
or
lea
xor
bndldx
dec
or
push
repz
out
loopne
jg
xchg
fildl
push
mov
adc
cld
enter
inc
into
cli
inc
dec
shlb
lock
loopne
shrb
pop
adc
add
dec
int3
xor
popf
ljmp
add
test
dec
addr16
outsb
sbb
cmpl
dec
mov
push
pop
lods
push
mov
aas
in
call
outsb
mov
roll
aas
sub
adc
mov
repz
insb
mov
push
cmpsb
lds
xor
incb
out
push
outsb
cmp
push
sub
mov
imul
or
or
xchg
jbe
mov
ret
xchg
jmp
adc
cld
and
lock
rcr
sbb
rcrb
mov
nop
daa
sbb
int
pop
int3
add
cld
movsl
aas
xchg
add
pop
lock
or
in
cmp
fldenv
rcrl
mul
sarl
loopne
in
push
scas
cmp
mov
pop
aaa
jo
jle
daa
mov
popf
fdivs
rcll
sub
sub
xor
push
inc
jg
xor
cmp
cmp
lret
adc
iret
outsl
xchg
sbb
test
push
inc
movsb
aaa
mov
jecxz
mov
adc
cld
stos
insl
mov
mov
aas
push
fisubs
push
mov
and
test
and
sbb
test
daa
inc
push
out
fdiv
or
in
xchg
dec
aad
jae
or
in
jl
test
mov
xchg
xchg
push
inc
repnz
jge
or
mov
std
nop
stc
pop
cmp
jle
sub
outsl
push
outsb
fisubrs
pop
dec
dec
add
or
inc
jne
mov
push
cmpsl
jno
push
in
aas
jns
frstor
xor
pop
jb
xor
and
sub
xchg
dec
roll
std
mov
inc
and
mov
cmpsb
jle
mov
mov
push
es
mov
inc
add
loopne
stc
add
lret
pop
enter
push
cmp
test
xor
ds
or
testb
mov
inc
in
int
dec
lahf
addl
add
xchg
aas
iret
push
ljmp
dec
xchg
jo
jecxz
addl
and
add
and
mov
add
xlat
mov
movsb
fimull
or
mov
add
shlb
mov
stos
lcall
xchg
popf
mov
movsb
or
mov
pop
push
jb
and
aaa
sar
dec
mov
mov
popa
repnz
dec
and
jge
dec
mov
mov
pop
aaa
xor
das
cmc
rorb
pusha
or
mov
push
shrb
mov
dec
je
lods
shrl
mov
jle
pop
mov
xor
addr16
mov
xchg
mov
dec
roll
mov
xor
dec
mov
fisubrs
xchg
aaa
lock
xor
push
lods
cmpsl
adc
clc
pop
shrl
sbb
dec
or
xchg
clc
push
jmp
pop
cmc
xor
jg
fstpl
test
cmpsb
pop
jnp
subl
out
or
push
jle
mov
sub
sbb
jo
cmpsb
push
out
xchg
pusha
pop
add
in
sub
add
nop
call
enter
push
mov
inc
mov
loope
sahf
xchg
ficoms
xchg
mov
adc
dec
sub
andb
inc
lahf
add
push
cmp
cwtl
faddl
mov
fcoml
bound
mov
mov
adc
clc
adc
aas
sbb
inc
int
popa
xchg
decl
inc
imulb
xor
cli
and
test
pop
mov
movsl
add
nop
jle
inc
push
and
movsl
jnp
dec
mov
rcrl
mov
add
pop
mov
adc
int
inc
out
rolb
jo
fldl
sub
adc
adc
pop
mov
daa
or
mov
loop
mov
inc
subb
movsl
sbb
jg
jg
and
pushf
jnp
je
push
mov
orl
icebp
push
push
jg
lock
push
xchg
push
adc
out
in
mov
pushf
xor
cltd
hlt
jmp
cmc
and
xchg
xchg
arpl
or
hlt
mov
shl
adc
mov
lret
test
mov
xchg
mov
and
fadds
loopne
out
lcall
mov
pop
push
adc
push
mov
jb
mov
dec
stos
or
fcomps
add
mov
dec
shl
das
fadds
call
or
add
dec
mov
lock
mov
dec
xor
fsts
test
lret
pop
aaa
aam
pop
ror
ficoml
sub
xor
out
adc
jl
cltd
inc
incl
mov
jecxz
ss
mov
in
pop
mov
adc
test
push
pop
test
das
subb
pop
or
pop
sub
mov
stc
loope
adc
push
sub
mov
adc
inc
mov
fnsave
ja
sub
xor
sbb
inc
mov
pop
mov
adc
jns
mov
push
jge
inc
insb
dec
lods
pop
dec
dec
and
jo
imul
stos
out
js
cmp
sub
inc
test
es
pop
bound
aad
mov
xchg
out
adc
xchg
pop
jbe
arpl
jbe
sub
xor
lods
mov
and
and
cld
hlt
stos
ljmp
movl
adc
sbb
sbb
jle,pn
inc
mov
push
adc
dec
clc
arpl
cmpsb
loopne
fisubs
xor
dec
push
fcomps
repnz
dec
shr
dec
adc
jo
dec
stc
inc
jbe
pop
mov
inc
cmpsb
in
sub
inc
ret
push
aas
and
xchg
mov
mov
test
mov
xchg
int3
xchg
pop
adc
pop
sbb
mov
jo
mov
shrl
aaa
mov
cmp
outsb
xor
daa
in
test
mov
or
rolb
add
inc
add
pop
pop
adc
push
inc
fimull
movw
mov
ljmp
neg
imul
mov
and
incb
pusha
mov
mov
scas
inc
mov
ret
push
dec
and
adc
or
clc
popa
daa
or
test
pop
mov
pop
cld
xor
push
mov
jle
pop
xor
or
popl
scas
xchg
mov
jmp
int3
adc
pop
inc
xor
addr16
and
loop
mov
es
and
incb
jle
inc
into
das
mov
add
mov
and
andb
fldenv
jnp
scas
inc
and
hlt
jp
and
cmpsl
cli
inc
loopne
loop
scas
popf
movsl
dec
cld
pop
xor
and
shr
jg
push
add
imul
mov
loop
shll
dec
lds
add
test
fistps
xchg
mov
out
lret
les
push
adc
mov
fadds
xchg
push
lahf
mov
and
call
test
adc
and
pop
mov
icebp
loop
arpl
pop
imul
ljmp
mov
pop
mov
ds
xor
sub
dec
cmp
dec
xchg
inc
sub
xor
xchg
dec
xchg
adc
cmc
fcoml
cmp
cmp
fists
or
jnp
mov
sub
cmp
push
inc
flds
pop
push
fwait
imul
cmp
inc
in
pop
push
mov
push
add
pop
in
cmp
leave
jmp
sti
push
inc
clc
mov
aam
hlt
add
out
arpl
mov
addb
das
sbb
xchg
pop
xor
orb
je
push
rolb
adc
ficomps
insl
and
aaa
pop
dec
and
outsl
test
pushl
fsubp
sub
add
push
sbb
repnz
sbb
or
loop
add
je
outsl
or
pop
or
rol
add
orl
pushf
jne
enter
sbb
lcall
dec
pop
lds
cmp
fistpll
dec
les
pushf
lock
repnz
adc
push
test
pop
or
dec
pop
xorb
aad
mov
pop
xor
das
pop
loop
sub
jmp
push
mov
mov
das
fadds
pop
xor
aas
or
inc
mov
les
adc
test
enter
ret
add
and
xchg
in
lahf
sub
xorl
cmp
ret
pop
movsl
orb
push
fcoml
rclb
sub
stos
in
ret
inc
add
jl
and
sub
sbb
push
sahf
xchg
jle
in
insl
clc
adc
aas
gs
mov
xchg
mov
cmpsb
andl
movb
and
ds
mov
pop
punpckhwd
cltd
rolb
cmp
loope
aaa
sub
sti
mov
fcomps
lods
pop
gs
sub
outsb
adc
fcoms
lea
fwait
andb
daa
sub
cmc
sub
lahf
out
inc
aas
les
incl
arpl
dec
test
mov
roll
jae
pop
cmp
or
xchg
mov
fmuls
add
push
popf
out
test
in
fisubrs
sbb
jae
mov
mov
lret
adc
or
loope
or
and
dec
enter
pop
pop
xchg
mov
imul
std
loope
add
out
push
dec
jmp
cs
xor
xor
mov
sbb
inc
fstl
subl
cmp
lock
cmp
adc
jg
xchg
enter
pop
lock
out
add
xor
jnp
push
ret
jne
or
pop
cmc
pop
jno
out
or
das
mov
add
adc
ret
lcall
add
idiv
add
mov
xchg
sub
icebp
sub
scas
adc
inc
or
inc
add
jge
fcmovnb
int3
add
mov
adc
das
mov
outsb
dec
leave
gs
pop
or
stos
inc
aad
jmp
enter
aad
cli
jo
mov
fmull
jg
je
call
in
fistl
orb
and
aaa
mov
mov
jae
dec
nop
popa
inc
sbb
fsubrl
fdivrp
add
mov
aad
scas
gs
push
mov
ret
pop
push
ja
add
leave
cltd
jp
mov
shlb
add
inc
add
mov
mov
inc
out
or
adc
cmp
test
out
jo
jno
add
xor
lahf
ds
nop
inc
lock
pop
add
add
adc
adc
inc
push
inc
add
adc
push
pop
sbb
movsb
jle
mov
popa
xor
aas
test
mov
dec
mov
iret
das
cli
outsl
lods
int
fcom
adc
sbb
sbb
lahf
aas
mov
sub
adc
sub
xchg
sub
aam
push
sbb
icebp
adc
inc
insl
fcoml
add
cmp
roll
loope
xlat
mov
sub
mov
sub
sub
rorb
jmp
ljmp
outsb
push
inc
add
mov
inc
push
icebp
mov
pmuludq
jle
jb
fbld
mov
push
roll
add
inc
in
and
jo
cmp
cld
cmp
push
mov
add
jne
pop
jge
cli
shlb
inc
insl
fidivl
cmc
pop
push
sbbb
add
dec
push
ds
bound
les
sbb
add
push
bound
sub
repz
es
fimull
jl
or
std
inc
orl
sbb
repz
icebp
ja
notb
push
ret
pop
ss
nop
pop
sahf
sbbl
push
icebp
xor
or
inc
mov
ret
add
iret
lahf
stos
icebp
pop
mov
js
add
scas
push
mov
inc
jecxz
mov
mov
xor
cwtl
adc
psllw
mov
and
xorl
cmpl
scas
xchg
add
enter
lahf
cmp
push
repnz
fidivrl
and
xor
lahf
cmp
ja
int3
adc
or
push
add
out
int3
stc
icebp
loop
movsl
push
cmp
push
xchg
call
arpl
call
adcb
cli
mov
xchg
inc
fcmovne
pop
cmpsb
cwtl
add
push
aam
pop
mov
adc
mov
mov
inc
add
mov
inc
ss
std
push
cwtl
pop
lock
push
addl
sbb
adc
mov
iret
push
add
popa
adc
cmpsl
fiaddl
or
sbb
out
adc
xchg
xor
add
popa
xchg
add
adc
jmp
test
inc
xchg
push
dec
inc
dec
cmp
rclb
test
xchg
out
cmp
cmpsl
and
or
das
jno
aaa
and
xor
je
nop
imul
mov
shll
sbb
incl
jp
sub
dec
push
inc
xchg
mov
in
push
sbb
pushf
pop
in
push
fidivrl
pop
or
xchg
inc
sub
inc
cltd
push
sub
mov
adc
mov
negl
aad
inc
call
adc
xchg
int
mov
addl
sub
jnp
rol
dec
adc
mov
mov
push
dec
mov
push
xchg
imul
addb
xchg
cld
repnz
mov
leave
les
xor
jp
adc
shl
lods
push
in
inc
iret
dec
xorb
mov
cld
jmp
roll
inc
push
adc
rcr
sub
cwtl
clc
mov
test
mov
inc
lock
xorl
test
mov
inc
sti
les
push
pop
pushf
cmp
test
cmc
xor
mov
dec
jne
add
insl
pop
int3
data16
mov
loopew
xor
roll
sbb
mov
test
or
stos
inc
testb
or
add
repz
xchg
lds
inc
inc
je
imul
xchg
push
lods
ret
sbb
mov
inc
dec
bswap
pop
add
jecxz
mov
cmpsl
pop
or
mov
ljmp
out
cmp
mov
or
rol
fwait
push
push
ljmp
jbe
lea
test
cwtl
into
jecxz
mov
cmpsl
sub
ljmp
sub
push
mov
imul
jns
xchg
insb
add
pop
sbb
cwtl
xor
js
inc
clc
sub
add
inc
inc
pusha
loopne
fmuls
dec
sbbl
mov
test
ret
fldcw
pop
mov
pop
in
or
rolb
ret
pop
popa
and
shlb
add
scas
test
scas
test
fwait
xor
pop
andl
or
xchg
aaa
mov
icebp
aas
loope
lock
xor
adcb
fs
lret
inc
pop
mov
dec
mov
cmp
das
push
cmc
dec
mov
pop
xor
add
ds
mov
test
jp
pop
jno
inc
lock
inc
xchg
xor
sbb
sbb
dec
loope
jle
pop
movl
add
arpl
test
cmpsb
mov
mov
pop
jb,pt
scas
incl
pop
sub
fcmovne
mov
add
push
and
push
ds
xor
push
xchg
and
mov
pop
js
adc
sbb
pop
ret
adcl
add
addl
fiadds
icebp
push
mov
out
shll
repnz
fndisi(8087
pushf
imul
fmull
rorl
mov
rolb
test
sbb
out
mov
stos
ds
repz
and
adc
lock
dec
xorl
push
push
mov
dec
add
xchg
in
and
xchg
pop
stc
cwtl
cmp
and
ja
cmpsl
pop
andps
cmp
leave
shrb
data16
pusha
add
jmp
push
xor
scas
mov
mov
xor
sub
es
xchg
repnz
mov
adcb
dec
outsl
xor
in
pop
imul
cmp
push
adc
push
push
rcrb
mov
aas
mov
movsb
pop
shl
mov
mov
mov
out
cltd
cwtl
push
aaa
int
add
push
test
adc
aas
mov
mov
and
ret
cmp
mov
pop
sti
fwait
int
aas
cmp
dec
loop
mov
mov
add
inc
lea
xadd
stc
adc
sub
sbb
cmp
iret
fcomi
in
adc
cwtl
push
and
jo
inc
idivl
jp
pushf
pop
add
pop
loop
jmp
js
lret
or
cmp
and
rorl
out
mov
dec
jae
adc
mov
jp
xor
in
hlt
aad
inc
stos
xchg
sbb
inc
les
pop
pop
cmp
scas
and
adc
bound
test
cmp
in
popf
xor
pushf
and
dec
std
ret
push
xorl
mov
sahf
or
inc
je
xchg
stc
and
fbstp
cmp
or
pop
jns
push
shll
sbb
jo
es
mov
inc
mov
int3
ret
dec
push
or
mov
mov
movsl
lret
daa
in
test
pushw
lods
scas
hlt
pop
loope
jbe
jg
inc
test
dec
inc
mov
add
or
insb
loope
lods
mov
cld
jg
inc
sbb
cmp
scas
mov
scas
xchg
fimull
jp
mov
icebp
inc
pop
sti
mov
xchg
mov
scas
adc
push
and
push
push
and
pop
add
add
sub
mov
push
pop
add
push
daa
clc
cmp
scas
bound
dec
sbb
mov
mov
lods
clc
aas
stos
xlat
jo
jnp
jg
in
and
dec
loop
jne
es
int
add
scas
inc
lods
hlt
test
imul
add
push
mov
dec
les
adc
xor
add
inc
test
mov
ljmp
mov
ret
fcompl
dec
mov
imul
rorb
loop
mov
out
nop
sbb
xor
sbb
ljmp
fists
int
sahf
call
adc
movsl
lock
cmpsl
ret
sub
inc
sbb
and
cmp
xor
imulb
mov
mov
fwait
outsb
insb
pop
or
inc
cmp
lcall
cmp
pusha
mov
loope
adc
sbb
add
mov
test
mov
xor
pushf
cmp
lret
add
cltd
je
push
mov
out
out
icebp
push
mov
and
andl
loopne
popf
fldcw
es
in
and
outsb
aas
std
fisubrs
jbe
mov
sub
clc
inc
cs
add
pusha
ja
mov
and
das
and
aas
and
xor
cmp
sub
das
aam
insb
call
push
rolb
test
ret
stc
xlat
aas
or
adc
sbbb
pusha
loope
loopne,pn
mov
insl
data16
clc
inc
xchg
cmpsl
and
push
jecxz
fs
and
lret
cmp
jb
add
lahf
pushf
xor
jnp
dec
jae
fs
adcl
add
dec
and
mov
loop
stc
icebp
outsb
xor
pop
pop
test
stos
insl
or
push
sbb
inc
sbb
or
cwtl
fisttpll
jb
adc
jo
aas
and
jle
lcall
icebp
or
or
jo
inc
cli
mov
fdivs
adc
cmc
lret
xlat
lret
ret
adc
lcall
push
dec
ret
loopne
add
inc
mov
repz
bswap
push
lock
adc
cmp
mov
inc
rcrb
aaa
push
int3
or
clc
xor
call
sbb
inc
test
mov
mov
sti
add
add
jno
jbe
pop
lock
inc
inc
rclb
add
sar
pushl
leave
cmp
sub
cs
pushf
bswap
cmp
mov
fwait
xchg
cwtl
cmp
push
push
test
out
ret
adc
or
popa
daa
cmp
imul
mov
jecxz
faddp
lret
jmp
mov
imul
fisttpll
add
fwait
add
pop
insb
test
mov
fcom
pushl
sub
pushf
sub
inc
mov
cmpb
push
fsts
popa
xchg
scas
aaa
inc
lcall
xor
ret
xor
and
ljmp
stos
fisubs
mov
insl
cmp
mov
data16
sbb
outsl
push
cltd
sbb
es
fwait
or
pushf
mov
decl
js
cmpsb
movsb
or
or
into
arpl
cmc
cmp
inc
add
push
es
push
lret
xchg
push
aad
cwtl
dec
pushf
popa
incl
cld
xor
hlt
lahf
aaa
xor
and
fldenv
and
aas
jae
pop
dec
inc
jns
cmp
mov
sarl
in
xchg
xchg
jp
sahf
pop
iret
stos
call
or
mov
sbb
adc
pop
inc
ljmp
and
adc
cs
in
inc
jae
popf
or
add
adcl
inc
aaa
sub
dec
push
add
call
scas
mov
rol
dec
adc
dec
lea
jo
fsubrl
pop
loopne
mov
xchg
stos
push
push
lods
dec
sub
inc
popa
and
outsb
daa
xchg
pop
push
dec
mov
cmc
jp
nop
pop
push
add
mov
cmc
incl
dec
loope
test
dec
and
mov
sahf
aaa
dec
testl
lret
mov
push
nop
rol
cmp
insl
cli
bound
and
push
js
arpl
in
mov
aaa
jmp
pop
clc
pop
and
out
sahf
ret
loope
ficoms
test
mov
imul
jns
inc
pop
jno
jbe
cmp
pushf
sub
test
shll
ss
or
stos
ror
fwait
loopne
cli
daa
mov
lret
push
cwtl
inc
sar
adc
add
or
pop
sub
jno
sub
out
xchg
mov
adc
paddsb
or
mov
add
xor
dec
mov
loope
lock
and
rorb
ret
js
shr
xor
ss
rol
sbb
fs
sbb
ja
out
add
jo
cmpsl
or
sub
or
daa
stos
add
fcoms
rep
xor
iret
sub
add
mov
push
test
std
enter
or
mov
movsl
pop
mov
aad
xchg
sub
mov
or
cwtl
test
incl
rep
lret
mov
int
xchg
call
pusha
jne
fs
repnz
js
scas
jo
insl
pop
ret
or
sar
incl
add
sub
sbb
and
inc
dec
adc
inc
jns
jmp
xchg
xchg
xor
mov
mov
pop
ret
shrl
mov
loopne
cmp
pop
xchg
sti
inc
adc
mov
outsb
xchg
mov
insb
jbe
stc
mov
push
je
mov
or
cli
pop
loop
leave
inc
jg
pop
push
cmp
flds
jns
test
mov
icebp
dec
notl
call
test
xchg
jg
data16
jge
std
cmpsl
or
out
cli
incl
fldl
mov
popa
or
lock
xchg
jg
pop
lods
loop
mov
xor
dec
sbb
adc
xchg
ret
lods
mov
in
mov
pop
std
iret
add
cmpsl
mov
push
ljmp
dec
adc
rclb
mov
cmp
mov
and
inc
sub
mov
dec
jp
stos
cmpsl
or
pushl
imul
inc
lret
mov
adc
test
cld
add
add
es
and
add
fisubrl
inc
test
popa
jmp
lds
xchg
iret
popf
jp
ja
inc
in
add
pop
cmpsb
lock
and
subb
mov
sar
ffreep
xor
daa
andb
jl
pop
add
pop
pop
push
xor
mov
sahf
dec
loope
cmc
cmp
and
mov
cwtl
xchg
push
mov
adc
or
out
dec
cmpsl
into
movsb
mov
cmpsb
nop
int3
jno
sbbb
or
push
out
push
inc
aaa
bound
pop
add
rcll
jb
aam
xchg
mov
lods
jo
xchg
pusha
mov
and
adc
outsl
cli
and
cmp
dec
rclb
call
xor
mov
cmp
lods
addb
and
sub
xchg
nop
xor
in
lret
lods
mov
sar
inc
jp
roll
stc
outsl
cmpsb
ret
add
shl
mov
push
hlt
ret
jge
ds
and
add
in
mov
stc
lock
dec
and
ficoms
pop
mov
dec
rol
inc
xchg
in
add
pop
rol
bound
test
decb
dec
adc
push
pop
mov
insb
shll
shrl
jae
out
lret
aam
lret
add
rclb
sbb
cmp
js
ret
orb
xchg
mov
sbb
lea
fmuls
mov
jge
ljmp
add
rclb
pusha
inc
dec
push
ljmp
int3
cmp
jg
loopne
sbb
mov
inc
insl
sub
xchg
cmpsb
push
push
cli
sti
adc
pusha
shll
mov
incl
inc
cmc
cmp
mov
mov
orb
push
jmp
sbb
xor
sub
and
mov
cld
bound
movsb
dec
adc
shl
lcall
jecxz
lods
cs
ret
pop
or
mov
pop
xchg
outsb
cld
scas
xchg
loopne
icebp
incl
stos
rorb
pusha
adcl
dec
mov
sub
cmp
inc
adcb
lcall
mov
add
push
sbb
dec
mov
pusha
lahf
add
and
int3
inc
xchg
ja
lock
into
mov
mov
popl
icebp
loopne
cli
sbb
pop
mov
sahf
xor
jmp
out
call
adc
cld
ss
jb
outsl
icebp
lret
push
pop
cmovnp
jle
push
outsb
mov
lock
cmp
gs
pusha
push
repz
movsb
cltd
mov
cmpsb
pop
and
fdivrp
xchg
or
push
adc
popa
adc
dec
mov
push
cmp
xor
or
cld
inc
sub
jo
add
push
mov
xor
xor
std
xor
add
sub
lret
int3
or
dec
fmul
fwait
mov
sub
mov
ljmp
popf
or
mov
je
lds
sub
inc
sub
jge
sub
xor
std
insl
dec
or
mov
test
sbb
cmp
mov
cmpsb
cld
jg
fmuls
rcrb
add
mov
pop
into
dec
jbe
fdivs
mov
repz
jmp
or
jb
xchg
pop
add
je
loope
std
mov
pop
pop
data16
incl
in
cmp
pushl
xchg
outsb
sub
cmp
nop
es
inc
or
sub
pushl
cmpsb
das
mov
push
daa
cmp
and
in
loope
sbb
push
sahf
stos
lock
add
cmp
hlt
shlb
gs
jg
lds
repnz
xchg
popf
add
push
cmp
jb
cmc
fldcw
aas
testl
pop
jo
sub
mul
les
pop
daa
sbb
jl
addl
inc
dec
mov
cli
pop
clc
push
pop
sahf
mov
pop
insb
lret
call
jg
test
fcom
ja
ret
push
pop
fisttps
mov
jb
adc
ljmp
lret
clc
clc
mov
dec
shl
xchg
movsl
imul
aam
test
inc
cwtl
adc
adc
jg
sbb
rcr
int3
sarb
add
or
dec
xchg
daa
mov
pop
push
xchg
fidivl
jle
cmp
add
cmp
arpl
mov
mov
jmp
inc
mov
add
push
cld
clc
iret
loopne
sub
push
add
mov
or
mov
cs
sub
xchg
push
cli
mov
add
add
je
popa
push
pop
fs
mov
inc
movsb
jns
jns
mov
mov
dec
cwtl
sahf
pop
adc
out
mov
sahf
stos
xchg
aad
test
sub
dec
sti
mov
push
pop
ss
pop
loop
lods
popl
shrb
sbb
inc
imul
mov
lds
sbb
add
inc
mov
repz
cmp
mov
shll
push
adc
imul
test
popf
lcall
aad
movsb
or
inc
inc
push
pop
int3
push
xchg
adc
nop
lods
sub
mov
add
rorl
or
test
sarb
lret
jg
aas
mov
ret
cwtl
inc
sub
mov
call
push
push
cs
daa
jae
pusha
nop
jmp
pushl
push
int
fistpll
sub
fadds
and
pop
or
das
jmp
mov
pusha
cmc
aad
std
cmp
hlt
xlat
inc
imul
mov
and
stos
lea
mov
insb
adc
xlat
decl
jns
xor
pop
nop
add
pop
insb
sbb
adc
outsl
inc
mov
mov
imul
stos
xorl
push
add
pusha
mov
out
or
or
aas
xchg
insb
add
lods
and
inc
aam
out
cmp
loopne
js
mov
loope
pop
mov
jmp
icebp
xor
aam
push
insb
lea
icebp
sti
jg
jg
mov
lret
rcrb
jo
pop
repz
or
icebp
push
js
adc
test
mov
mov
jmp
gs
pop
sub
out
test
adcb
jp
mov
mov
out
sbb
add
icebp
sbb
test
scas
mov
mov
bswap
lods
or
pop
xorl
call
fs
push
arpl
jge
loope
push
mov
movsl
dec
dec
cs
add
je
adcl
les
test
mov
mov
fidivrl
sbb
sbb
pop
cmp
mov
push
aam
les
cmp
mov
cmp
xor
cld
loopne
adc
dec
sarl
jno
cmc
pmaxub
mov
imul
add
ret
lret
jnp
cltd
push
mov
and
aad
stc
or
mov
mov
ja
xor
dec
imul
movb
push
adcl
hlt
push
mov
loope
cli
mov
sbb
aas
fsubp
push
lock
jb
adc
mov
sub
cmpsl
mov
les
xorb
mov
lds
inc
cmp
mov
mov
pop
mov
xchg
jle
insb
fisttpll
adcl
xchg
ret
les
or
cld
pop
dec
fsubrs
in
add
push
daa
cld
icebp
movsl
incl
add
add
and
cmp
pushl
mov
jns
mov
xchg
sbb
pop
dec
ds
xchg
hlt
xor
lea
addr16
das
pop
xchg
xchg
add
stc
das
and
mov
and
push
rcll
push
pop
xchg
bndmov
push
cld
cltd
inc
repz
stc
adc
out
dec
ret
lods
xor
lds
mov
sub
out
sar
inc
cmc
jl
mov
cmp
imul
out
test
dec
cmp
pop
push
pop
mov
push
mov
sub
ja
xor
jae
adc
mov
fwait
mov
ss
pop
inc
aad
inc
mov
imul
out
add
pop
and
int3
add
test
call
push
mov
loop
ror
sbb
xlat
pusha
scas
sub
aad
data16
xor
cmp
add
xchg
pop
outsb
aaa
js
push
in
jecxz
xor
or
add
xchg
das
sar
sbb
es
in
push
cmpsb
push
mov
lcall
push
mov
or
pop
pop
loope
mov
jge
in
xor
fsub
dec
sub
inc
out
aas
fs
mov
mov
adc
cmp
imul
arpl
push
mov
mov
add
mov
ds
lods
pop
or
sub
stos
sub
shl
add
test
dec
push
or
inc
lods
int3
js
fbld
jae
jl
imul
xchg
pop
enter
cmp
xchg
repnz
cld
mov
loop
mov
push
imul
sbb
mov
aaa
cmp
orb
xor
cmp
and
divl
sbb
mov
xchg
mov
stos
inc
jae
insb
scas
pusha
imul
pop
push
cmp
dec
les
ficompl
loope
jno
inc
rcl
jno
add
add
and
inc
bound
cmp
mov
es
enter
xor
out
scas
sub
mov
fsub
pop
sbb
and
sub
jns
and
add
inc
cmc
inc
add
xlat
inc
clc
daa
jg
or
jne
jb
dec
xchg
pusha
jge
notl
cli
add
rcrl
pop
adc
jbe
loope
stos
jle
icebp
xorb
mov
lds
cld
fucomi
out
outsl
add
cmp
and
inc
movl
jecxz
das
add
push
leave
jp
movsl
sub
push
fisttpl
std
push
adcb
insb
clc
or
sub
mov
cmpl
lds
dec
sbb
or
mov
jns
pop
jnp
or
push
sbb
push
mov
inc
gs
aas
push
xchg
out
add
sub
popf
shrb
ret
notb
dec
fisttps
sbb
or
or
sub
cld
fs
xor
jg
push
xor
xchg
popf
imul
fimuls
push
cld
or
push
cmp
pusha
jp
cmp
sub
dec
loope
jecxz
sbb
lds
aad
or
push
mov
dec
push
fdiv
inc
cmpsl
mov
mov
inc
loopne
aaa
outsb
mov
sti
jb
sub
lock
cmp
aam
mov
jbe
or
decl
popf
aas
les
enter
cli
inc
add
daa
add
adc
cld
int
cmp
add
shrl
aam
add
rcl
ret
mov
mov
loop
decl
sti
negb
add
in
ret
xor
sarb
das
pop
dec
faddl
and
and
sbb
dec
and
daa
jb
stos
lahf
or
fistps
bound
jno
cmpsl
lcall
rolb
mov
inc
outsl
xchg
inc
into
push
mov
popa
out
inc
mov
pop
clc
xchg
and
or
inc
aaa
jb
add
and
int3
jb
lcall
inc
sbb
lret
inc
pop
or
clc
add
jo
or
adc
fmulp
scas
adc
test
pop
pop
sbb
jge
push
mov
push
ret
test
sub
mov
scas
dec
dec
sbb
push
push
mov
add
and
sbb
incl
and
gs
lcall
pop
pop
add
cmp
outsl
movsb
xchg
xor
adc
incl
or
shlb
les
outsb
dec
cmp
lock
ljmp
pop
add
or
xorl
or
xor
mov
test
mov
shl
call
push
fcompl
mov
cmp
cld
jg
loope
pop
xchg
jl
and
adc
inc
hlt
cs
fwait
lock
sub
sbb
xchg
mov
outsl
cli
lods
push
inc
mov
and
pcmpeqd
aad
fmuls
in
pop
inc
mov
add
mov
sub
or
add
aaa
mov
in
mov
push
lret
add
mov
jo
das
dec
dec
cmc
pop
add
test
lret
pop
adc
test
fwait
cmc
test
mov
push
or
loop
in
add
xchg
xchg
inc
or
fimuls
cli
add
pop
inc
lret
jne
pop
and
ja
dec
mov
mov
or
les
pop
push
sbb
in
mov
push
inc
out
in
push
cmpsb
lar
push
scas
mov
add
pop
rcl
insb
and
xchg
fildll
and
outsb
mov
xor
es
or
aad
mov
out
push
test
sbb
movsl
pop
std
dec
xchg
mov
dec
mov
sub
incl
mov
mov
mov
shrb
pop
loopne
sub
aas
or
fstpl
roll
or
mov
mov
nop
add
repnz
add
mov
lahf
xlat
mov
stos
mov
cmp
mov
insb
push
call
push
sbb
sbb
add
inc
jb
sbb
inc
push
push
add
sti
in
fdivl
mov
pushf
insl
das
mov
add
lcall
and
lock
xor
jg
fdivl
insb
xchg
lods
and
jge
shr
rep
xlat
mov
imul
adc
dec
pop
inc
add
ret
lcall
dec
sbb
push
cwtl
inc
mov
xchg
push
add
dec
subl
std
sahf
xor
push
jb
bound
dec
sub
jecxz
xlat
ljmp
cmpsl
cmp
loopne
jle
pop
pop
test
dec
jo
cmc
daa
adc
fwait
ret
gs
lahf
push
cmp
inc
xorl
and
in
sbb
xchg
sbb
jle
inc
mov
lahf
inc
ds
data16
popa
fsubs
loope
sub
sbb
mov
out
xor
movsb
inc
add
loope
pop
push
push
icebp
pop
dec
test
test
push
jno
cmp
xchg
xor
dec
rorb
xchg
push
shll
shll
or
mov
cli
mov
sbbb
mov
cld
jmp
aam
mov
out
and
push
mov
xchg
push
loopne
popf
inc
subb
mov
int3
pusha
inc
aas
inc
movsl
in
out
dec
jne
lretw
adc
mov
cmpl
in
xor
add
adc
test
dec
add
cmpsb
and
dec
sub
sbb
andl
fs
add
aad
cmpsl
inc
jae
mov
std
mov
push
sbb
fwait
js
pop
lcall
inc
nop
clc
lret
leave
data16
pop
rorb
inc
dec
mov
aad
push
mov
sbb
rolb
aas
sub
xchg
jmp
dec
pop
mov
mov
and
lret
ret
clc
loopne
sub
pop
push
pop
fcoms
fucomip
lock
decl
popa
js
push
cld
addb
divl
jo
xor
stos
icebp
decl
negb
push
inc
inc
frstor
cmc
pop
xchg
sti
pushl
inc
mov
push
sbbb
and
mov
push
jo
repz
decl
repnz
or
xorb
cmp
pop
push
sahf
push
pop
jbe
inc
adc
ja
aaa
add
dec
push
dec
shl
fldenv
cmpsb
xchg
xchg
add
xchg
sub
push
jecxz
and
cld
pushl
fwait
mov
jmp
inc
mov
jae
loope
pop
lods
fwait
inc
mov
incl
hlt
mov
fcomip
mov
andb
scas
cld
adc
dec
outsb
bound
fildl
push
nop
and
hlt
dec
sbb
xchg
sbb
xor
pop
dec
das
mov
ljmp
test
pushl
mov
dec
rcrb
pop
dec
inc
sbb
mov
daa
fwait
int3
data16
sahf
int3
out
outsb
fnstenv
sub
dec
out
imul
inc
movsb
or
push
test
add
push
out
js
loope
dec
mov
ficoms
push
arpl
cwtl
inc
sti
mov
ljmp
shll
add
daa
rol
cmpsb
sub
das
adc
push
add
les
loope
cli
fisubs
add
xor
xchg
mov
aam
push
xchg
mov
mov
stos
into
push
cmp
ret
cmp
not
adcl
lahf
or
mov
mov
pop
insb
imul
nop
aam
sub
cmp
xchg
sbb
daa
pop
or
scas
dec
ljmp
sbb
ds
lds
hlt
subb
sbb
push
cld
xor
add
das
pushf
add
test
clc
incl
mov
and
aaa
rcr
mov
or
dec
cmp
lret
outsb
xchg
add
in
sarl
cwtl
sbb
sbb
mov
xor
dec
add
movaps
dec
inc
adc
dec
inc
ret
pop
rolb
lods
andb
add
inc
pop
int
jbe
fs
sbb
and
jecxz
push
into
cld
incl
fwait
or
faddp
sbb
test
fists
pop
mov
lods
enter
js,pt
pop
jl
sbb
decl
add
fistl
test
subb
inc
loop
lcall
out
mov
fildl
and
jp
lods
xor
out
push
mov
adc
push
sbb
insl
stos
cmp
hlt
mov
pop
popf
mov
jge
xorb
ret
add
sub
aaa
dec
out
popf
lock
pushf
xor
inc
int
fisttps
push
lods
xor
jb
pop
xchg
dec
and
jo
pop
and
enter
ret
aam
push
cmpsl
es
movsl
jmp
leave
mov
testl
sbb
int3
push
sub
loope
stos
mov
pop
fsubr
mov
or
clc
sub
test
mov
jmp
lahf
stc
or
imul
mov
sbb
add
mov
insl
ljmp
cmc
out
sbb
mov
lcall
mov
push
bound
fists
dec
sbb
jmp
enter
call
incl
adc
call
popf
call
pop
xor
xor
into
ss
add
adc
and
movsb
xor
mov
dec
and
sbbb
sbb
mov
out
mov
lcall
add
lret
addr16
jmp
aad
out
shrb
mov
test
pop
cmc
xchg
adc
xchg
xchg
aaa
pop
es
adc
outsl
dec
and
sbbl
loop
test
sbb
popa
aad
dec
sbb
push
movsb
xlat
punpckldq
and
adc
mov
stos
scas
inc
loopne
xchg
cmpsb
xchg
into
mov
mov
lcall
sbb
sti
inc
pop
int
js
or
cwtl
mov
es
fisttpl
insb
pop
fiaddl
call
xchg
ret
popf
lods
loope
loop
sbb
fs
cmp
fdivp
inc
push
ja
fld
pop
push
push
stos
push
repnz
cwtl
bound
lea
jg
inc
imul
daa
dec
xor
mov
dec
outsb
ret
clc
jno
fadds
icebp
xor
mulb
lea
xchg
jmp
cmp
push
xchg
inc
push
lods
pushf
fs
inc
cmpl
xchg
xchg
or
xor
dec
stos
xor
sahf
sbb
adc
lock
push
add
ds
jmp
and
xchg
sbb
sbb
popf
sub
out
das
inc
mov
xchg
adc
mov
cmpsb
mov
js
lret
dec
lahf
loop
loope
aaa
mov
popa
push
loopne
lret
pop
or
xchg
xlat
or
test
adc
xchg
sarb
adc
mov
mov
pop
xor
sub
sub
cmp
loope
dec
subl
out
mov
ljmp
loop
aad
xor
and
add
add
and
aas
adc
test
pushf
jge
adc
test
ljmp
hlt
cmpsl
xchg
popl
inc
in
out
push
jle
icebp
xchg
push
imul
mov
and
fsubp
insb
loop
and
sub
std
or
aad
or
cwtl
push
ljmp
add
movsb
mov
ror
and
add
cltd
mov
push
stos
xor
xor
add
cld
or
pop
test
decl
adc
adc
int
cmp
and
adc
pop
cltd
jg
cmp
into
movsb
or
ror
fldenv
xchg
dec
cld
mov
xchg
les
stos
cltd
cmp
mov
fldt
push
xorb
mov
pop
ja
testl
hlt
cmp
pop
js
cmpsl
and
push
inc
cmp
repnz
loope
or
and
cmp
mov
push
lfs
mov
sbb
fsubp
lahf
mov
pusha
pop
lods
pusha
gs
pop
test
int3
sub
mov
push
fimull
pop
jg
rol
xor
cli
ds
ss
sbb
adc
fwait
les
lds
jg
loopne
pop
loop
rolb
aam
inc
cmp
cmp
xchg
xchg
ljmp
xchg
nop
inc
imul
mov
xchg
xchg
jle
pop
paddq
aad
inc
mov
les
jle
sti
call
inc
mov
xor
or
mov
in
fsubrs
xchg
sbb
popa
mov
jae
cmp
sbb
xchg
ret
icebp
test
loope,pn
int3
lret
iret
inc
add
and
lcall
test
scas
outsb
inc
dec
loope
fistpll
mov
ret
mov
xor
pop
jne
call
jne
std
pop
add
inc
nop
xchg
inc
inc
xchg
scas
sub
call
or
xchg
leave
adc
sbb
scas
xchg
dec
loopne
stos
and
loopne
xlat
and
push
jb
add
push
cmp
add
adc
mov
pop
pusha
xor
popl
inc
scas
cmpsl
mov
scas
pop
jns
inc
jecxz
roll
adc
inc
push
jb
sub
cltd
nop
jl
mov
fcompl
push
push
sbb
cltd
adc
push
rclb
lahf
jo
xor
aaa
ret
mov
movsb
fdivrs
inc
stos
daa
cmpsl
cmpsb
jo
or
lret
fsubrs
mov
ss
lcall
cwtl
xor
movsl
inc
jg
mov
ss
dec
push
jle
or
sub
pushf
outsb
cld
inc
jg
sbb
push
jb
cmp
xchg
test
outsb
or
stos
jo
sbb
int
pushf
stc
mov
ljmp
push
sahf
loope
jl
push
in
lock
or
mov
in
and
push
mov
push
mov
inc
push
and
push
push
pop
pop
out
push
pop
aad
xor
adc
movsb
mov
orb
orb
fiaddl
stc
bound
dec
data16
jnp
cmc
inc
xlat
in
jg
addb
cmc
cmpsb
adcb
adc
inc
es
adc
mov
or
add
enter
push
mov
xchg
sub
mov
js
cmp
inc
jl
loope
xor
enter
mov
mov
xor
xchg
adc
ss
pop
adc
mov
mov
fldl
push
int
dec
push
mov
loop
rcrl
pusha
jl
push
shl
imul
addl
or
rclb
nop
pop
xor
jge
std
xor
add
enter
subl
lods
ret
imul
add
pop
orb
mov
movsb
pop
in
push
jecxz
imul
adc
mov
les
xlat
lds
mov
adc
jmp
jae
iret
or
jle
dec
loopne
aas
insb
rcrl
nop
aam
jmp
gs
inc
mov
inc
decl
enter
inc
scas
imul
jl
inc
ret
call
aas
data16
test
inc
pop
std
xorb
pop
loopne
vpsllq
push
xor
jb
push
or
int
and
pop
aaa
cmp
sub
sub
ds
call
outsb
jae
mov
mov
adc
es
mov
mov
nop
nop
sbb
xor
xor
loopne
mov
scas
or
xchg
fnstsw
xor
lcall
adc
sub
push
addb
add
shlb
mul
pop
pop
adc
clc
mov
leave
push
das
pop
xor
scas
push
adc
int3
ss
add
movsl
test
and
cltd
sarb
mov
cmp
dec
ret
jmp
dec
sub
fidivrl
or
adc
cli
test
sbb
lret
cmp
adc
loope
movsl
xor
cmpsl
fadds
push
es
and
add
mov
dec
pop
stc
lods
lcall
aam
sbb
movsl
push
ljmp
cmpsb
or
push
cli
adc
aas
xadd
das
or
jmp
push
or
add
mov
inc
add
and
sbb
inc
adcb
jmp
jno
adc
lcall
fs
add
out
or
dec
and
test
dec
pop
shl
mov
les
jae
cs
xchg
movsb
mov
leave
mov
pushf
push
xorl
push
mov
sbb
mov
add
push
shrb
pushf
adc
shll
sahf
shrb
lods
mov
inc
lcall
xchg
add
cmp
js
pop
add
push
dec
or
repz
clc
jns
push
inc
push
push
sti
in
sbb
push
inc
dec
mov
add
adc
imul
xor
es
push
stc
xchg
popa
jb
xchg
or
xchg
xchg
gs
xor
mov
sub
add
aaa
jecxz
js
jo
scas
int
clc
dec
sub
xchg
xor
mov
lret
pop
push
vmovsldup
jo
adc
push
and
inc
sub
xor
movsb
std
filds
mov
jle
xchg
int3
movsl
pop
lods
or
or
or
test
fstps
call
add
repz
aam
push
mov
addl
loop
test
scas
into
xor
inc
jl
jbe
push
dec
dec
adc
dec
inc
sbb
sbb
push
mov
add
fld
push
or
dec
mov
sub
ljmp
fwait
imul
or
or
orl
out
js
popa
fisubrl
aad
dec
sbb
shr
shl
xchg
xchg
loope
in
lock
lea
ja
outsl
shll
add
sbb
add
rcrl
sarb
dec
inc
lds
mov
cwtl
pop
mov
andl
adc
pop
add
sbb
bound
ljmp
ds
aad
stc
inc
mov
mov
incl
or
mov
popf
movsb
movb
ret
into
sub
cli
addb
lea
adc
push
push
mov
pusha
ret
cmp
test
loope
mov
add
mov
outsl
in
push
cmp
mov
ret
mov
pushf
mov
pop
and
dec
xor
jg
scas
and
test
inc
jmp
rcrl
xchg
stc
jecxz
lret
jl
ljmp
push
lcall
add
das
divb
and
fisttps
enter
idivl
xchg
xor
xchg
dec
enter
mov
mov
test
lea
inc
cmp
mov
lods
bound
ret
or
adc
add
daa
stos
rorl
pusha
lods
or
push
inc
jp
mov
push
jp
adc
dec
insl
ret
sub
mov
push
das
cmp
mov
outsb
mov
popf
or
or
scas
sub
out
or
icebp
sbb
stos
jmp
mul
mov
inc
xlat
adc
inc
mov
sbb
and
add
mov
dec
lods
or
xor
ss
pusha
movl
cs
aaa
int
out
xchg
fldl
psraw
je
fcomi
lret
mov
lsl
and
mov
out
sbb
mov
inc
repz
jmp
xchg
scas
xor
pop
and
push
cmpsl
movsl
or
inc
mov
xchg
lcall
sub
mov
xor
push
sub
shlb
add
repz
jbe
push
sbb
inc
push
jp
add
shlb
inc
lea
mov
movsb
das
inc
sub
xchg
icebp
add
jne
cmp
aas
jmp
stos
mov
push
sub
sub
jo
movd
adc
arpl
mov
in
daa
or
xchg
fs
cmp
loopne
cmp
and
cmc
adc
bound
cs
push
pop
sbb
push
inc
rcrl
sbb
cmpsb
dec
adc
or
loop
mov
cmp
addr16
add
mov
xor
and
adc
loopne
mov
std
inc
decb
ss
and
dec
sarb
adc
xchg
filds
add
pop
cmc
loop
jmp
cbtw
jp
inc
push
add
add
add
or
jg
pop
xor
inc
insl
push
insb
andl
stos
xchg
pusha
lds
pop
and
rolb
andb
fcmovne
jmp
add
inc
inc
ljmp
add
or
and
shrl
pop
les
cmp
rorl
inc
fisubrl
fs
lds
inc
insl
dec
dec
xchg
or
cmc
ret
outsb
icebp
rolb
cmpsb
or
inc
dec
rcrb
push
or
mov
fists
pop
dec
ljmp
sub
dec
cs
sbb
adc
gs
push
sbb
mov
aas
mov
fdivs
dec
add
push
xor
stos
icebp
pop
xchg
pop
loope
cmpsl
push
shl
pushf
add
mov
or
nop
faddp
add
xchg
jnp
lcall
shrl
les
lods
fildl
and
pop
jne
mov
pop
jno
hlt
lods
jge
aas
gs
in
jg
xor
jl
xor
jg
and
xchg
and
dec
add
xchg
sub
subps
add
stos
sbb
adc
gs
pop
jecxz
and
paddusb
push
or
mov
repz
or
adc
fistl
add
push
fmuls
xchg
clc
orb
je
mov
rcr
cmpsb
stc
xlat
dec
idivl
pushl
rclb
add
incl
push
pop
fidivrs
pop
xchg
rclb
dec
or
lds
fwait
dec
cltd
int
ret
repz
jg
push
xorb
push
push
add
iret
xlat
jl
imul
call
mov
xchg
orl
decl
movsb
and
les
xor
dec
mov
outsl
mov
mov
add
shlb
and
xchg
das
jbe
lahf
or
and
xchg
daa
and
insl
stos
loop
sbb
gs
aaa
add
push
sub
dec
push
and
add
pop
add
xchg
mov
imul
pop
mov
cli
ja
out
add
sub
imul
cli
jmp
sub
inc
fsts
jmp
in
or
add
ljmp
mov
mov
lods
pop
fldenv
int
jae
lods
xlat
hlt
test
mov
imul
scas
subl
mov
adc
stc
adc
jmp
gs
lock
push
and
inc
das
push
rclb
arpl
movsl
add
and
roll
jnp
pop
inc
aad
lret
adc
js
sbb
add
cwtl
mov
mov
push
ror
xchg
mov
xchg
adc
dec
push
mov
push
jne
mov
ss
cmp
lods
xor
lcall
pusha
adc
cwtl
or
xor
scas
jg
inc
loopne
push
test
insb
mov
in
mov
outsb
fadd
addr16
pop
test
xor
jb
mov
aaa
ret
in
mov
cli
mov
rsqrtps
orl
mov
js
aas
dec
lds
inc
or
add
inc
movsl
inc
inc
inc
jg
ljmp
adc
sbb
jmp
mov
ret
enter
mov
lcall
xor
testl
dec
jge
loopne
add
add
pusha
cmpsb
xor
stos
movsb
sbb
hlt
adc
mov
push
sbb
repnz
dec
gs
cmovle
cmpsb
ret
fmul
pop
movsb
cmp
pusha
push
cmpb
add
nop
lods
es
sbb
pushl
dec
xor
call
gs
movsb
roll
mov
sub
jo
ljmp
mov
int3
xor
in
mov
aas
lcall
les
test
xchg
mov
call
mov
stos
sub
push
fwait
shld
scas
pop
test
es
pop
jne
xor
lret
sbb
sbb
jo
dec
cld
lcall
xchg
mov
cmpl
cld
dec
cmp
or
jle
into
add
xchg
cmp
push
test
cmp
shlb
cs
mov
adc
cmpsb
loope
andb
xlat
xor
or
lcall
outsb
notl
xchg
pop
dec
mov
add
iret
lret
fsub
pushl
mov
fnstcw
fiadds
call
xchg
inc
fldl
and
push
and
xor
dec
jecxz
mov
pop
aam
mov
add
xchg
int3
or
sbb
std
add
mov
popf
decl
and
or
aas
test
xor
popf
test
mov
jnp
iret
push
out
sbb
cmpsl
jmp
pusha
out
adc
push
scas
loopne
xor
or
push
jp
jmp
jbe
cltd
lret
ljmp
push
popl
jbe
enter
and
cmc
sub
xor
mov
outsl
push
cmc
int3
outsb
mov
sbb
arpl
cmp
jne
stos
dec
imul
cld
inc
push
inc
sbb
mov
sub
add
jns
jbe
in
aaa
dec
bound
jmp
test
sub
mov
imul
or
addb
xchg
popf
xor
icebp
out
popf
loopne
push
push
out
stos
or
movsl
pop
outsb
jbe
sbb
jp
push
dec
fsubr
dec
sbbb
roll
roll
out
lcall
dec
call
jg
lcall
insb
mov
testb
scas
pop
inc
sub
mov
pop
mov
repz
inc
cmc
jo
push
int3
ret
and
or
idiv
jo
pop
mov
fsub
icebp
sti
push
loopne
pusha
cmp
adc
pop
mov
lcall
outsl
loop
addr16
ret
arpl
iret
repz
mov
pop
scas
pusha
fisttpll
mov
push
add
sarb
push
pop
iret
sbb
dec
add
sar
sub
jl
sbb
jp
cmp
xor
pop
lock
jno
cmp
push
fisubrl
mov
add
popa
in
inc
jnp
adc
jp
push
push
push
pop
pop
inc
test
jo
cli
dec
lock
movsb
call
fsubrs
xor
flds
pop
out
jo
jne
jecxz
int3
cmp
pop
call
mov
inc
xchg
cmpb
out
imul
mov
lods
jb
mov
xor
pop
cli
bound
jne
frstor
icebp
lods
mov
xchg
stc
xchg
and
or
cmpsl
pop
bound
decb
xchg
jne
sub
fcom
sbb
pop
lock
outsb
and
dec
out
vmovaps
jge
cmp
jb
sbb
dec
pusha
addl
lods
pop
dec
adc
enter
and
add
xor
mov
xor
push
push
pop
and
out
repnz
add
mov
sbb
mov
xorb
clc
call
negb
or
push
jns
or
outsl
push
xchg
mov
lea
sub
orl
incl
lea
sbbb
data16
pop
adc
lcall
pushl
mov
imul
fwait
mov
mov
sbbl
sbb
adc
or
xchg
cli
call
fisttpll
ljmp
out
dec
pop
orb
mov
jno
xchg
pop
sbb
fs
bndldx
divps
mov
jle
dec
in
push
and
std
mov
andb
jg
xor
mov
push
push
jecxz
jne
or
xlat
xchg
adc
decl
sahf
pop
bound
ret
cmpl
rorb
adcl
aad
int3
in
jo
sarl
xor
xor
jmp
dec
push
push
xor
test
cmp
ret
and
jmp
mov
dec
and
mov
cltd
insl
int
ret
popf
mov
loopne
lret
pop
pop
mov
cld
xor
shl
nop
in
stos
push
insl
inc
and
sbb
xchg
mov
add
lea
jo
push
rclb
push
xchg
mov
add
subb
and
mov
daa
enter
mov
ss
lret
in
orl
ljmp
pop
aam
jns
inc
test
les
jo
test
xchg
leave
pop
jmp
cli
push
sbb
leave
xor
imul
pushl
add
scas
imul
mov
push
jo
push
inc
sub
shl
lock
lcall
mov
sbb
push
adc
rorb
ljmp
or
andb
lret
mov
jbe
add
test
in
xchg
shl
cltd
mov
sub
fmull
ja
in
mul
xor
sub
movsl
add
jg
clc
sbb
and
xchg
mov
xor
ficomps
or
imul
push
and
call
push
out
filds
jg
cmp
inc
and
sar
pop
mov
lahf
lock
jmp
loop
pop
cbtw
fdiv
push
mov
sahf
je
into
xchg
cmp
jecxz
mov
leave
imul
mov
arpl
fisubl
jmp
addb
call
outsl
push
rorb
mov
fdivr
mov
xor
inc
mov
jne
setbe
insb
cwtl
xchg
scas
rorb
mov
lock
push
sub
sub
in
sbb
imul
sbbb
xor
mov
or
add
shrl
add
add
xor
fidivs
imul
or
ret
enter
mov
aaa
cld
bnd
cwtl
in
adc
inc
out
mov
xchg
add
jg
push
or
mov
insl
and
lea
mov
inc
jnp
add
jecxz
icebp
pop
lcall
cmc
cmp
pop
pushf
mov
adc
movsb
sub
adc
ljmp
cmp
dec
repz
clc
jecxz
ds
aas
ret
xor
cmc
mov
loope
test
loop
cmc
mov
cld
decl
adc
mov
cmc
xor
jno
or
popa
ja
aaa
mov
or
add
inc
clc
stos
sbb
inc
std
push
outsl
and
sahf
jb
adc
mov
xchg
scas
xchg
adc
add
pop
cmpsb
int
and
das
jno
out
sahf
subl
scas
imul
inc
imul
cli
cmp
or
add
popf
aam
and
enter
inc
fimuls
mov
dec
push
insb
adc
scas
inc
lds
shll
testl
push
jecxz
sub
insl
test
pop
pop
scas
ds
dec
shlb
fimull
rclb
jb
sub
push
mov
pop
mov
andl
or
int
xchg
jmp
lea
xor
lock
gs
subl
mov
ret
mov
in
mov
scas
ret
jg
scas
int
mov
pop
cmpl
and
movl
xchg
ss
inc
add
sbb
in
pop
lock
pop
xor
ret
inc
mov
insl
fistl
div
aad
pop
push
and
fmulp
jnp
push
cmpsb
mov
incl
popf
rcrl
push
or
add
movsb
repz
xchg
or
jns
fidivrl
push
push
fs
out
test
jns
fwait
loope,pn
movsl
cmpl
loope
mov
inc
mov
popf
ret
sahf
adc
sbb
xlat
bound
xchg
outsb
xor
cli
xchg
pop
imul
push
mov
out
in
sub
cmp
iret
inc
adc
add
test
ss
jbe
in
je
clc
sbb
fcoml
repnz
jbe
andl
cmp
xor
cld
or
push
ret
ret
mov
inc
iret
dec
pop
lods
icebp
in
shrl
rcr
inc
fsubs
ds
and
and
and
inc
icebp
nop
clc
dec
loopne
test
stos
dec
sbb
pop
sbb
sbb
test
cltd
int3
jp
xor
ja
push
int3
push
cld
fndisi(8087
lock
and
leave
stos
mov
jp
icebp
scas
mov
xchg
sbb
aaa
jp
lcall
cmp
aam
adc
xchg
into
adc
jmp
incl
js
icebp
pushf
xor
cli
add
mov
dec
lock
ds
dec
pop
add
jg
or
ds
pop
adc
fwait
popa
inc
sbb
sbb
mov
mov
fwait
xchg
lcall
push
sub
inc
or
es
repz
mov
mov
test
mov
test
add
adc
clc
sbb
lods
push
test
imul
and
nop
xchg
mov
mov
jmp
xor
out
dec
mov
std
xchg
js
push
push
mov
aas
or
js
cltd
cmp
push
mov
lock
push
negl
cltd
icebp
ja
mov
inc
inc
shl
movsl
xor
cmpsl
aam
mov
add
leave
out
mov
insb
nop
xchg
push
fcmovu
call
adc
jg
test
popa
sub
dec
rcl
aad
data16
mov
fcmovnbe
xor
sti
pushl
inc
push
mov
imul
repz
lods
xor
add
fs
xor
jecxz
adc
push
pop
lock
sbb
or
cmpsl
scas
push
fisttps
add
mov
les
pop
test
jge
inc
pop
aaa
push
push
sub
mov
call
loop
mov
or
mov
mov
mov
dec
lcall
js
fcmove
push
ljmp
sbb
ror
and
xorb
roll
or
xlat
out
stos
stc
incl
inc
mov
jmp
ret
cmp
mov
mov
sub
dec
dec
inc
xchg
xor
mov
and
mov
add
popa
or
inc
into
or
mov
outsl
dec
xor
ret
std
mov
test
ret
xchg
fdivrl
lret
pop
push
outsl
pop
std
aaa
loopne
jmp
jl
jge
or
inc
bound
and
daa
into
mov
mov
icebp
enter
and
shrb
shrl
cmp
jecxz
xor
xchg
mov
iret
mov
inc
out
push
inc
add
imul
xchg
js
sarb
imul
and
jle
lret
pop
push
popf
jnp
out
and
jg
cmc
and
jb
pop
negl
inc
stos
repz
orl
loop
jne
or
adc
pop
mov
add
mov
pop
hlt
pop
jns
int
sbb
pop
adc
out
addl
and
jle
pushf
mov
out
incl
sub
xor
pop
in
cs
pop
test
cld
daa
cmp
and
pop
fadd
insb
out
in
pop
mov
adc
cld
das
sarb
sub
aad
inc
loop
iret
sbb
jns
jo
daa
pop
hlt
addl
sbb
and
add
call
es
fdivrs
add
ljmp
mov
jle
sbb
pop
pop
jb
lock
xchg
xor
ss
scas
push
popf
cmc
daa
imul
jmp
mov
lock
dec
and
xchg
mov
cmp
andb
lret
mov
fistpl
rorl
jmp
mov
mov
jle
cmp
fnsetpm(287
push
sub
nop
or
mov
xchg
mov
or
decl
subb
cmp
xchg
repnz
pusha
shll
xchg
shr
xchg
iret
pop
sub
and
inc
shll
icebp
sub
sbb
xor
test
adc
das
aas
aaa
loope
test
fadds
sub
mov
pop
mov
movsb
mov
arpl
dec
mov
jp,pn
mov
clc
aad
nop
sbb
lods
aaa
aam
pop
insb
sub
push
in
xor
jbe
aaa
add
push
add
cmpsb
lret
mov
xchg
xchg
sub
ss
or
cmp
imul
sbb
or
push
in
lahf
rcll
jne
mul
inc
adcl
xchg
sti
enter
iret
mov
mov
decb
add
int
jne
add
add
shll
push
push
and
test
add
xchg
cld
std
repnz
mov
subb
idivb
cli
sbb
dec
imul
mov
mov
mov
add
cltd
aad
inc
call
jmp
adc
in
adc
xchg
nop
mov
andl
jp
or
sbb
inc
pop
arpl
lods
cld
jge
or
sbb
pop
pop
cmc
mov
push
movsb
insb
sbb
jg
inc
lock
loopne
fidivrs
test
jne
jg
shrb
mov
mov
dec
les
adc
cld
or
loopne
test
add
loopne
mov
jo
mov
notl
cmpsl
insl
and
push
xor
xchg
inc
mov
adc
inc
mov
sbb
imul
loope
cmpsb
or
sub
and
int3
roll
iret
andl
add
repnz
adcl
or
nop
xor
push
or
push
sti
jecxz
add
push
aas
dec
in
jns
cltd
faddl
insl
pop
mov
mov
mov
fists
scas
lfs
add
pop
xchg
push
bound
adc
jp
sub
lock
mov
addl
movsl
orb
jns
or
movsl
mov
cld
or
push
lret
nop
and
jle
loop
mov
jo
mov
cmc
cld
xor
cmpsl
sahf
cmpsb
jmp
dec
pop
test
mov
mov
inc
jg
adc
lcall
clc
push
jg
repz
push
stos
cmp
add
in
aas
adc
push
push
push
and
dec
pusha
cmp
fcompl
in
lock
in
xchg
ss
repnz
cld
cmp
test
dec
and
mov
nop
xchg
mov
jmp
scas
xlat
xchg
push
jbe
std
or
push
adc
rcll
insl
insl
pusha
mov
xchg
mul
cmp
sbb
adc
inc
adc
inc
repz
fdivrs
insl
repz
jmp
push
scas
cwtl
jmp
aad
in
mov
add
sbb
pop
iret
out
dec
clc
or
cli
lret
mov
inc
imul
jecxz
mov
or
lea
mov
cmp
adc
xchg
orl
jo
cmp
mov
popa
push
ljmp
out
sub
lret
repnz
xchg
xor
mov
andb
mov
mov
sbb
add
sub
jle
jnp
push
adc
aam
inc
sbb
mov
jnp
add
xchg
popf
ret
leave
mov
loope
pslld
fwait
subb
adc
sbb
jmp
pop
mov
aam
es
out
movsb
and
adc
push
or
pop
mov
add
test
fnstsw
adc
sbb
add
arpl
cmpsl
test
stc
outsl
jae
or
ds
std
test
sub
pushf
aad
lods
push
and
and
pop
or
cmp
lcall
add
sbb
imulb
stc
rcrl
lods
sahf
mov
sub
lcall
mov
cltd
shll
movsb
aas
rolb
fucomp
sti
jbe
adc
pop
filds
cld
sub
jl
add
pushl
jne
jne
and
and
inc
jp
mov
mov
das
lret
jns
pop
test
xchg
sub
aas
add
cs
and
add
inc
push
loope
pusha
sahf
fsubrl
aam
xchg
cmpl
adc
sbb
xor
test
cmp
and
adc
sub
loop
ss
lret
daa
mov
neg
push
dec
js
sbb
inc
xchg
xorl
bound
pop
pop
dec
nop
xchg
sbb
filds
and
jae
pop
mov
lock
rep
outsb
cmpsl
sbb
aam
fstpt
pop
push
out
loopne
inc
or
adc
mov
mov
imul
iret
dec
mov
int
xchg
pop
add
inc
subl
lahf
loope
inc
lock
cmp
mov
cmpsb
ljmp
cmpl
dec
mov
cld
rol
popf
sbb
outsl
mov
jecxz
stos
and
lods
pop
jb
sarl
int
mov
pop
jmp
daa
out
or
dec
hlt
push
fnsetpm(287
lahf
xchg
mov
shrl
add
addb
and
push
push
xlat
in
popf
jl
and
das
les
ss
es
inc
les
cmp
xchg
divl
push
mov
ret
inc
aaa
sub
lcall
or
notl
insb
hlt
ret
popa
aad
add
nop
lahf
cmp
arpl
xor
mov
in
dec
mov
ret
add
mov
or
es
xchg
cmp
shll
popa
jo
aad
movsl
popf
and
fsubl
cmp
push
mov
mov
cld
iret
or
stc
push
popa
xor
pop
dec
subl
js
sub
mov
mov
sbb
ja
ds
xchg
ds
push
pusha
rcrb
cld
add
lgdtl
pop
mov
jecxz
or
ja
in
test
mov
jl
push
push
sub
push
clc
mov
je
push
cmp
pop
xchg
jecxz
lock
rclb
xor
aaa
test
bound
jge
xor
fwait
dec
stos
xchg
jae
movsb
fdivp
sqrtps
or
out
add
data16
sbb
jmp
out
sbb
cmpsl
jno
cmp
pop
jbe
push
les
jb
dec
dec
repnz
jle
cmp
fld
mov
std
lret
hlt
divb
addb
mov
imul
pusha
jno
mov
xchg
jno
fdivr
xchg
add
rcll
decb
imul
adc
mov
or
or
dec
and
je
aam
std
out
adc
addr16
in
and
jp
push
cmpsl
and
mov
mov
neg
inc
addb
jl
mov
dec
leave
mov
push
into
pop
inc
push
pop
ja
andb
fsub
jae
js
and
adcl
cld
lcall
pushf
scas
mov
ficomps
imul
push
mov
mov
dec
mov
xor
pop
loopne
pop
cmp
jg
jp
in
leave
lahf
inc
xor
xchg
stc
in
mov
or
mov
int3
popa
mov
lea
add
test
or
sbb
jno
mov
xchg
push
xchg
testl
mov
cmpsl
jbe
mov
inc
cltd
inc
pop
cmp
xchg
divb
push
ds
hlt
mov
mov
pop
setle
sbb
lcall
popa
cmp
adc
sbb
int3
ljmp
pop
jnp
nop
ja
adc
push
cli
cmp
stc
repz
mov
aam
leave
jmp
adc
and
mov
mov
and
call
pop
and
hlt
into
sbb
mov
loope
sbb
ret
xchg
movsb
mov
sub
mov
les
push
mov
cmp
jne
add
add
aas
data16
or
pop
jae
inc
xrelease
or
xchg
js
add
mov
js
sub
xor
test
addr16
clc
sub
push
out
std
mov
pop
jp
mov
or
inc
or
dec
dec
outsb
icebp
ja
sbb
pop
ja
xlat
add
pop
sub
mov
jno
iret
xor
mov
cmp
add
nop
mov
sahf
fdivrl
or
inc
jbe
aas
aad
push
fstpl
and
xor
mov
pop
push
mov
ja
lock
dec
test
inc
xor
xor
cmp
pop
popa
push
lcall
mov
div
mov
fsubl
mov
cmp
outsb
fstpl
jno
aaa
adc
daa
ss
mov
test
ds
ds
inc
add
shlb
test
mov
push
adc
pusha
aad
ucomiss
lods
push
scas
adc
jl
rorb
adc
lret
pop
popa
lock
test
sbb
push
outsl
sbb
decl
loop
add
push
and
std
pop
aam
push
pop
push
dec
mov
xor
push
dec
mov
jns
jae
test
sub
pop
cwtl
stc
sub
push
push
je
pop
add
fsubs
mov
jecxz
incl
add
aaa
mov
dec
outsl
inc
mov
cmpsb
inc
xchg
loopne
mov
clc
sub
adc
insl
mov
mov
add
stos
pop
lods
out
xchg
imul
stos
loop
rclb
movsb
inc
rol
or
int
ds
jl,pn
test
loope
stc
add
jge
xor
and
mov
jb,pn
pop
int3
or
sbb
loope
mov
jbe
outsb
icebp
adc
nop
xchg
mov
cmpsl
jg
jmp
pop
jl
lahf
addb
sub
add
add
jbe
stc
inc
add
mov
xchg
je
jns
jecxz
mov
jns
lahf
or
int
jle
fiadds
dec
fstl
ficoms
inc
xor
add
mov
xchg
outsl
lods
push
lock
sahf
test
sbb
jge
mov
out
pop
push
mov
sub
mov
jg
push
mov
or
sbb
shll
sar
push
adc
mov
xchg
mov
dec
sub
lock
into
fimuls
pop
xchg
pusha
push
xor
rclb
mov
imul
push
sub
cmp
jecxz
jecxz
and
and
pop
stos
in
pop
sub
lcall
sub
scas
dec
push
fisubrs
fs
clc
dec
or
pop
insb
jmp
lahf
xchg
dec
jns
sbbl
and
and
push
dec
mov
loope
in
lods
pop
or
cmp
cmp
xchg
dec
fs
rolb
add
es
int
mov
jo
adc
fst
cmp
fstpt
les
repnz
cwtl
in
stc
fldt
push
outsb
add
and
int
pop
ja
jg
lahf
jge
mov
popa
rorb
mov
lret
loop
xchg
push
insb
xor
mov
mov
sarb
outsb
add
mov
pop
popf
les
sub
dec
add
xchg
rclb
retw
mov
add
jge
mov
pop
addl
push
cmp
xchg
in
inc
sbb
xlat
fwait
mov
push
loop
das
rorl
rorl
aas
insl
sbb
cmp
adc
test
lea
xor
jmp
dec
mov
jp
loope
mov
fidivrl
imul
pop
cmp
bound
or
int3
xchg
push
out
or
mov
mov
push
xor
js
sbb
inc
xor
jae
add
call
cmp
aam
or
inc
clc
add
xchg
dec
inc
aam
sub
pop
push
outsl
loope
lods
jp
pop
adc
push
mov
lock
aas
les
xchg
lahf
sub
loopne
pop
push
mov
jae
js
inc
dec
cmp
cmc
mov
pop
ja
xchg
mov
pop
jecxz
inc
or
mov
cmp
out
out
hlt
push
fists
mov
fs
xchg
fiaddl
aam
add
inc
fdivl
push
xor
shrl
jae
add
popa
int
repz
cmp
pop
cmpsb
rorl
add
fadd
loopne
and
add
push
mov
stc
push
lcall
sti
lods
xchg
mov
loop
pop
outsl
adc
mov
cmc
mov
push
inc
push
dec
xchg
and
out
add
lahf
sbb
inc
loope
mov
jle
loopne
mov
cld
and
add
sarl
les
xchg
sbb
xchg
or
push
pop
jg
ds
mov
out
iret
add
sbb
fistl
cmp
or
jg
jb
lret
mov
mov
je
inc
mov
int3
add
dec
jl
mov
pusha
cmpsb
scas
pop
push
repz
or
push
xor
lret
in
push
outsl
xchg
clc
testl
dec
sbb
aas
and
je
out
lret
mov
sbb
and
ss
std
les
sarl
adc
shll
mov
cmpsb
jge
into
pop
and
push
mov
sbb
xchg
cld
xor
dec
or
fsts
push
mov
jmp
call
mov
add
filds
imul
mov
sub
jne
cmp
and
cmp
sbb
add
pop
adc
les
pop
cmp
imul
pusha
call
inc
xor
mov
adc
mov
loop
rcrb
pop
int3
inc
dec
insl
movsl
mov
add
in
sbb
push
add
rolb
inc
add
xor
mov
or
mov
jp
fs
test
cmp
int
subl
test
dec
cmp
xor
xchg
call
dec
jno
mov
in
aas
aam
mov
fwait
in
xchg
xor
adc
inc
sahf
xor
icebp
addr16
inc
loope
adc
je
pop
pop
inc
cmp
cli
ljmp
cmpsb
push
loopne
nop
sti
jmp
push
mov
fndisi(8087
daa
push
jnp
mov
inc
jl
inc
dec
pop
cmpsl
scas
dec
incl
bound
jae
cmp
in
enter
rolb
adc
movsl
subb
scas
mov
pusha
sub
nop
or
cwtl
sub
jle
ds
fmull
cs
add
pop
add
in
xchg
push
adc
mov
and
dec
dec
mov
sub
push
xor
jle
pop
push
or
pop
inc
pop
movsb
sbb
mov
sbb
sbbb
mov
test
std
imul
dec
dec
lahf
cli
jecxz
pop
cmpsb
adc
pop
mov
push
add
enter
rorb
adc
mov
jle
lret
shll
lods
ror
test
jp
leave
cmp
lods
loop
mov
and
rcrb
leave
lahf
jle
cltd
dec
stos
cmp
dec
sahf
test
add
mov
add
cmp
mov
dec
xlat
sub
add
mov
sbb
xor
mov
inc
out
inc
adc
jmp
pushf
aad
in
cmp
movsb
or
ret
xchg
add
inc
jge
popa
loop
lea
mov
add
hlt
or
xchg
iret
xchg
mov
cmp
sbb
push
jmp
ret
push
sbb
shlb
mov
xchg
mov
dec
dec
or
dec
dec
or
jno
aas
cmp
jle
mov
bound
lock
xchg
loopne
mov
push
mov
js
xchg
dec
xor
xor
add
or
sbb
mov
outsl
mov
sub
loop
add
jnp
or
jb
pop
arpl
and
sub
out
jno
ja
sbb
pop
mov
or
jbe
push
mov
mov
adc
ljmp
xor
mov
jne
sub
push
adc
xchg
imul
xchg
fs
xlat
clc
jl
push
sub
cmp
dec
inc
paddusb
cltd
iret
inc
fwait
aaa
repnz
inc
push
daa
mov
xchg
pop
in
push
pushf
mov
inc
pusha
jne
add
fisubrs
iret
jae
fwait
mov
cmp
icebp
cmp
and
lea
hlt
pop
lds
stos
pusha
lret
or
jle
push
rolb
test
add
xor
add
psadbw
inc
in
and
enter
pop
test
jo
ljmp
jno
mov
gs
adc
mov
or
inc
jmp
lock
mov
loop
mov
cmpsb
add
mov
les
cwtl
shll
xlat
out
xchg
push
mov
push
ficomps
pop
push
test
test
mov
or
in
or
adc
cmc
lahf
push
call
inc
dec
xorb
xor
out
imul
add
push
pop
jns
add
jbe
add
imul
aad
add
push
pop
or
add
jecxz
or
orb
push
gs
and
jmp
stos
push
imul
pop
push
push
jo
jae
decb
jp
mov
dec
fistpll
push
lds
adc
dec
push
jo
arpl
jae
cmp
in
push
mov
xchg
add
jne
cmp
xchg
fcomps
aaa
cmp
loope
ja
cmp
popf
push
push
jns
loope
sbb
jg
dec
in
and
sbb
insl
repnz
mov
cli
rorl
mov
push
clc
pop
pop
lock
outsl
outsb
jo
inc
pop
ss
lock
addb
xchg
mov
dec
fcmovnbe
inc
pop
jns
cld
mov
cli
pop
push
enter
in
outsb
hlt
lahf
mov
lock
push
lret
lods
push
or
lods
stos
push
and
pop
mov
fisttpl
fidivrs
mov
cmp
fnstsw
mov
inc
clc
jno
cmp
shrl
push
push
orl
daa
mov
xchg
inc
jnp
dec
sub
dec
inc
and
sbb
es
cmp
jne
jmp
pop
push
mov
mov
call
dec
je
dec
adc
cmc
xor
lods
fistl
xchg
into
add
movsb
push
or
pop
push
xchg
out
sbb
push
jg
pop
jb
fisubs
clc
and
clc
jg
mov
xchg
das
push
js
xor
dec
cmc
shr
xor
enter
jg
ret
pusha
or
sub
mov
cltd
mov
sub
movsb
mov
daa
data16
adc
lret
mov
mov
push
pop
icebp
sub
push
mov
popa
xlat
test
fdivr
mov
rclb
idivl
xchg
aaa
popl
bnd
popa
sub
pop
mov
ret
cs
scas
clc
push
int3
dec
ds
add
lock
and
inc
xchg
orl
movsl
jecxz
add
cmpsb
sbb
dec
pop
popf
add
or
cltd
and
ret
or
ljmp
iret
andb
mov
pop
clc
mov
ficomps
dec
cld
add
dec
mov
mov
mov
out
loope
sbb
mov
sub
test
sbb
decl
ret
jecxz
sub
add
insb
mov
adcl
in
data16
sub
fisubrl
jmp
call
push
icebp
mov
jle
jb
adc
xchg
mov
lcall
ja
fcoms
notb
or
sahf
pop
std
push
mov
insl
push
mov
arpl
mov
inc
lret
add
insb
xorb
dec
clc
ljmp
mov
xchg
push
and
mov
adc
jecxz
imul
adc
xchg
mov
inc
xor
xchg
jle
push
sbb
js
rclb
add
cwtl
cli
rolb
sahf
bound
and
subl
rorl
sbb
add
inc
das
mov
inc
cli
sbb
mov
jmp
in
push
and
call
adc
lods
dec
push
and
shlb
push
out
pop
sbb
gs
clc
xor
leave
xchg
and
pop
out
lret
sbbl
es
jp
dec
aad
es
neg
das
mov
rol
mov
xchg
mov
sub
addb
pop
fcos
mov
or
in
loop
and
xchg
cmp
std
out
js
daa
jmp
mov
cmp
cld
imul
or
movsb
pop
pop
ret
in
or
mov
pop
das
pop
je
fcomps
cmp
xchg
sub
lcall
inc
cs
rclb
jbe
ret
push
and
adc
jecxz
inc
jbe
dec
inc
std
aaa
mov
bound
xchg
mov
out
stos
mov
sbb
rorb
cli
adc
mov
push
sbb
aas
mov
popa
mov
call
jecxz
xor
push
imul
sti
mov
jno
jle
inc
mov
sub
fcoml
imul
movsw
mov
jge
and
and
pop
out
fidivl
repnz
arpl
ss
int3
lahf
cmp
cltd
push
aaa
jge
xchg
xor
cli
and
add
cmp
push
xchg
jmp
dec
mov
mov
add
clc
and
pop
adc
lahf
mov
sarl
pushf
jns
cwtl
pop
push
movsb
or
mov
loopne
into
sbb
fdiv
cli
les
or
icebp
js
sub
jecxz
or
sarb
enter
pop
dec
movsb
jbe
add
adc
out
mov
pop
icebp
pushf
aaa
xchg
inc
inc
mov
push
clc
dec
pop
or
loope
in
mov
push
cmc
push
jnp
xor
loopne
xchg
push
pop
out
push
add
icebp
scas
add
ret
push
icebp
rorb
jmp
push
js
call
orl
fidivs
ficoms
inc
adc
sub
or
pop
push
pop
pop
pop
or
outsb
daa
mov
sub
loope
sbb
sub
pop
mov
es
shlb
and
mov
jns
sbb
in
xchg
cli
pmulhuw
int
xchg
pop
add
sahf
xchg
pop
jbe
popf
inc
lahf
jb
add
sbb
sti
xchg
iret
lea
cmp
pop
jp
fwait
adc
adc
jb
jmp
subb
andl
inc
fiaddl
mov
ljmp
and
mov
sbbl
ret
fcom
bndstx
jp
pop
cmp
sub
push
inc
push
push
jno
pop
test
inc
cmpsl
push
movsl
dec
cltd
adc
xor
push
inc
out
add
subb
lods
ja
ror
idivb
stos
push
outsb
push
or
cvttps2pi
leave
rclb
ret
and
not
test
mov
inc
pusha
test
xor
mov
je
mov
pop
mov
mov
add
or
mov
mov
test
je
repz
imull
insb
inc
jl
shrb
xor
cmc
mov
aam
imul
cld
icebp
adc
sbb
adc
mov
mov
bound
iret
or
push
jl
sub
in
mov
stos
stc
mov
outsb
push
cwtl
sbb
dec
and
lret
ret
sbb
mov
cmp
jae
out
hlt
adc
imul
pop
or
mov
add
cmpsl
sub
mov
lea
xchg
or
sbb
mov
mov
mov
push
adc
enter
pushf
add
orb
lds
out
pminub
std
sbb
mov
cmp
out
sbb
bnd
andb
mov
add
xor
mov
scas
push
outsb
xchg
mov
lret
in
mov
xor
aam
pusha
cld
jnp
pop
fwait
aaa
ret
mov
xor
aad
pusha
mov
call
inc
lahf
jge
out
add
test
imul
insl
addr16
inc
add
inc
push
dec
popf
dec
xor
add
and
lcall
cmp
xchg
outsb
mov
nop
movsb
into
add
movd
int
mov
pop
mov
dec
jmp
rcr
jg
dec
add
adc
dec
dec
mov
andb
jnp
out
mov
ficoml
outsb
or
sbb
xor
daa
lock
xor
cmpb
push
roll
push
aad
sar
sub
inc
pop
push
mov
add
pop
ret
dec
lret
jns
jb
jp
jmp
adc
into
lods
lret
xchg
mov
pop
mov
mov
xchg
stc
decb
jle
loop
add
mov
jbe
cmp
imul
jle
inc
or
popf
xorb
lock
test
jnp
test
jl
add
inc
pop
inc
cmp
jle
add
sbb
jmp
mov
repz
in
sub
repz
call
repz
pusha
xor
popf
sti
push
in
faddl
mov
or
cmp
ljmp
pushf
dec
lock
shl
daa
rcll
and
cmc
jle
pop
mov
rcrl
sub
sbb
cmp
adc
push
inc
or
adc
mov
add
cltd
clc
pop
lea
frstpm(287
mov
incl
inc
stos
popa
ds
pop
xchg
iret
popa
or
pop
sbb
sbb
jg
outsl
iret
and
jae
shrl
xchg
repz
xor
pop
cld
popa
push
xchg
sub
cmp
xchg
jge
cmp
or
jg
popa
pop
rorb
rclb
iret
int
cld
lret
xchg
inc
add
movsb
push
pop
add
sbb
sbb
clc
adc
cmp
add
popa
add
push
lock
fcoms
imul
fs
mov
push
cmpsb
in
adc
js
out
dec
repnz
loopne
mov
es
xor
aam
loopne
add
jp
and
fdivrs
loopne
inc
mov
push
adc
pop
sar
inc
movsb
addr16
cmp
in
or
sbb
clc
xchg
lret
pop
sbb
or
and
sbb
mov
movsl
mov
cmpsb
and
into
pushf
dec
jle
xchg
mov
lods
xchg
or
or
or
inc
add
popa
and
dec
mov
cmpsb
sub
mov
aad
jbe
ret
jmp
divb
xchg
add
adc
mov
sbb
cltd
ds
shl
sbbb
bound
mov
push
dec
bound
pop
sub
lahf
xchg
pop
adc
push
aaa
xlat
aad
loop
cltd
mov
or
pop
adc
mov
cmpsl
mov
jns
jle
mov
mov
xchg
call
adc
pop
es
int3
cwtl
xor
out
and
pop
hlt
jo
lods
cld
lock
pop
in
lcall
sti
mov
mov
rorl
mov
test
pop
add
and
clc
fcmovu
jnp
cmp
addl
fisttpll
add
mov
inc
fldenv
enter
fs
adcb
addl
mov
scas
jmp
adc
std
in
cld
test
sbb
dec
mov
sbb
rcrl
xor
cmp
pop
pushl
out
push
mov
lret
shll
mov
jge
mov
jecxz
jmp
mov
jb
ljmp
sbb
ds
inc
pop
pusha
add
insl
xor
sbb
ljmp
pop
mov
cmc
xor
pop
cmp
add
sub
rcl
shrb
sub
hlt
cld
loopne
rclb
nop
mov
or
in
xor
sbb
test
inc
jge
dec
mov
pop
pop
add
int3
movsb
add
sbb
dec
femms
loopne
mov
mov
in
movsb
add
xorb
cltd
jecxz
xchg
pop
jge
xchg
or
mov
pop
xor
inc
mov
mov
pop
xor
or
enter
adc
lds
subl
pop
or
mov
push
lods
cmpsb
lahf
sub
test
cmpsb
sbb
mov
inc
and
push
cwtl
inc
inc
dec
xchg
clc
inc
fwait
xor
stos
cmc
sub
adc
fsubp
add
mov
and
or
aas
cmc
fadds
inc
js
ljmp
test
pop
mov
clc
lods
std
int3
jmp
cmpsl
bound
mov
sahf
or
push
cmpl
mov
cmp
adc
jp
jmp
lock
xorb
loopne
sub
sbb
cmp
xchg
xchg
out
and
das
mov
orl
sbbb
adc
mov
push
and
fistps
xchg
cmp
fistl
push
adc
pop
dec
in
rcr
push
cli
adc
add
popf
ret
inc
sub
hlt
jo
addr16
popa
sbb
test
xlat
cli
incl
out
into
cmpsb
or
sub
xor
mov
and
xchg
push
jecxz
inc
nop
mov
add
xor
arpl
xchg
cmp
add
xorb
sti
stos
jae
mov
lcall
pushf
mov
push
pusha
es
call
test
mov
mov
xchg
pop
call
out
push
mov
testl
push
shl
push
dec
or
push
outsb
add
jle
inc
sub
test
insl
std
and
mov
jle
in
lods
jl
jp
or
dec
pop
sub
ret
pop
dec
adc
ret
ret
add
fdivl
stc
enter
std
mov
sub
fbld
add
loopne
adc
in
clc
add
stos
cmp
movsb
sub
push
sub
sub
jne
and
inc
xchg
pop
sbb
dec
mov
add
jbe
incb
pushf
cmpsb
movsb
shlb
mov
mov
fsubs
loope
aas
cld
pop
ret
cmp
cltd
outsb
push
adc
fwait
aad
and
jle
cmp
pop
lret
xchg
or
arpl
scas
cmp
fmul
inc
add
das
sbb
fldenv
aaa
push
dec
fimuls
loope
test
xor
mov
pop
loopne
aam
leave
rol
pusha
loop
dec
mov
add
xchg
and
or
daa
jg
dec
loope
pop
movsb
roll
inc
in
add
xor
adc
adc
xlat
inc
subl
push
jecxz
leave
dec
pop
aam
negl
incb
shr
xchg
nop
or
or
push
insl
add
inc
cld
mov
mov
rcrl
mov
loop
xor
or
rorb
dec
test
or
cmp
sbb
mov
rcl
lock
add
repz
aad
mov
pop
pop
mov
push
xchg
push
enter
adcb
push
dec
ret
sub
jo
add
fistps
sbb
xchg
mov
sub
lds
fisttpll
or
mov
cmp
stos
ds
mov
cmp
rolb
pop
mov
cld
inc
clc
or
les
dec
or
pop
jmp
mov
popa
inc
test
xlat
sbb
shll
mov
lahf
jl
je
int3
repz
lods
cmp
in
push
stos
scas
dec
or
mov
add
push
jge
ror
xchg
movsb
fsub
jbe
push
cs
paddq
and
and
scas
xor
lret
inc
cmc
add
loope
xchg
shll
mov
xchg
sub
pop
xchg
add
mov
fwait
andb
jecxz
into
dec
enter
mov
stos
cwtl
push
sub
test
xor
add
mov
xorb
fsubl
add
rclb
lret
icebp
xchg
add
pop
ljmp
setne
mov
or
scas
sub
or
xor
je
adc
pop
lea
sbb
push
pop
add
dec
loopne
sub
ret
xchg
mov
xchg
cmp
fcompl
mov
xchg
mov
jb
cmp
xor
out
imul
icebp
push
adc
and
add
shr
gs
adc
push
lds
and
dec
scas
or
js
inc
mov
jecxz
ret
outsl
int3
fsubrs
adc
insl
cmp
sub
push
jp
ljmp
inc
jle
mov
mov
inc
adc
std
or
and
sub
jmp
pop
cmp
xor
in
decb
push
lret
clc
sbb
mov
xor
cmp
inc
xchg
cli
adc
test
sbb
cmp
xchg
ret
adc
or
push
and
popa
add
mov
idivl
add
enter
add
push
pop
push
jo
pop
adc
orb
imul
hlt
add
jg
sub
xorb
ja
stos
add
push
fadds
int
fadd
cli
pop
inc
and
cmp
sub
push
mov
mov
movsl
xchg
bound
xor
insl
inc
cmp
arpl
fwait
and
dec
add
mov
xchg
pushl
mov
lcall
pusha
ds
add
sti
rep
jle
cmp
push
xor
test
rorb
lahf
jns
movsl
mov
clc
in
inc
cld
in
mov
xchg
jg
mov
jmp
loop
mov
pop
jge
movb
incl
xchg
bound
push
push
push
cmp
shr
shll
dec
testl
cld
aaa
add
das
sub
and
out
hlt
test
addb
xchg
sub
and
aaa
add
mov
jb
fwait
inc
pop
pusha
or
lcall
adc
lods
adc
subl
cmpsl
int
mov
loop
jle
jge
shlb
lcall
pop
and
fisttpll
dec
xchg
adc
sub
gs
clc
push
inc
outsl
sub
mov
shll
mov
mov
mov
aas
mulb
test
pop
add
lret
sbb
add
rcr
mov
cmp
sbbl
and
test
fisttps
pop
sahf
mov
test
and
aam
adcb
jecxz
cld
ljmp
outsl
setae
loop
dec
out
in
rcr
mov
loopne
insb
and
sbb
ljmp
divb
or
aaa
jne
xchg
movsl
inc
push
test
sbb
inc
divb
push
test
sbb
adc
idivl
arpl
add
aaa
andb
aaa
xchg
xor
sub
sbb
dec
ret
jmp
mov
daa
add
mov
lock
je
xchg
inc
pop
test
add
or
push
gs
pop
mov
sbb
or
jmp
inc
leave
das
rclb
add
adc
les
dec
adc
and
push
add
je
cmp
stos
aas
mov
xor
ss
push
ret
and
inc
or
push
add
pushf
add
add
mov
xchg
mov
shrb
add
pop
mov
andb
mov
jmp
xchg
add
icebp
inc
dec
sbb
icebp
ljmp
add
iret
xchg
push
rolb
sbbb
ja
inc
mov
repz
inc
stos
incb
cli
shlb
mov
dec
inc
xrelease
mov
and
lret
popf
subl
mov
inc
push
push
add
idiv
or
shlb
shrl
push
movzbl
das
fs
add
dec
cmpsl
and
fimull
mov
lret
aad
movsb
sahf
out
insl
inc
dec
xlat
cwtl
gs
dec
add
cld
dec
fisttps
orb
imul
sbb
push
iret
add
das
shll
add
add
add
aam
pop
push
sbb
mov
jmp
sub
jne
ret
aad
mov
jmp
add
pop
push
lcall
and
ror
xchg
adc
push
mov
dec
test
popa
and
pop
mov
popf
ror
add
add
xchg
pop
insb
roll
mov
aas
jl
das
addr16
mov
jno
add
sub
jns
pop
mov
jmp
mov
int
daa
test
adc
add
sub
or
dec
or
mov
cld
adc
out
mov
dec
mov
mov
mov
or
mov
cld
lret
mov
push
out
and
pop
sbb
push
lods
xor
xchg
add
jg
inc
lds
incl
lahf
or
into
jge
dec
pusha
xchg
adcb
dec
cltd
adcb
aas
call
lea
sbb
and
mov
mov
pop
pop
movsb
movsb
pop
cmp
rclb
jae
arpl
inc
rorl
and
lods
mov
cld
cmp
inc
cmp
pop
and
add
out
in
std
shlb
add
test
call
pop
pop
inc
sub
cmpsl
push
mov
push
ret
adc
jmp
cmp
outsb
jmp
fsts
imul
sub
jns
daa
jge
lahf
int
nop
sbb
dec
mov
pop
shlb
int
inc
sub
adc
movsl
xor
lahf
dec
fiaddl
cmp
cli
and
cwtl
scas
mov
pop
xchg
mov
mov
push
cld
or
out
iret
neg
lods
pop
xchg
or
imul
repz
dec
fildl
cmp
push
add
dec
dec
xchg
or
sti
daa
pop
mov
push
pushf
lret
mov
push
inc
adc
mov
aad
nop
mov
inc
test
sub
movsb
add
int
sbb
rcrl
add
xchg
lods
jnp
fdivrs
adc
jecxz
clc
mov
pop
cmp
jg
adc
jg
push
adc
push
xchg
push
loopne
fists
push
pop
bound
fnstenv
mov
rcll
mov
in
mov
xorb
pop
jg
adc
das
lea
fdivs
xor
xor
mov
mov
adc
fimull
lods
or
mov
xchg
add
push
imul
loop
cmp
testb
inc
imul
and
call
stc
xchg
fisubrs
sub
and
and
imul
imul
lretw
xchg
mov
call
arpl
mov
mov
cmp
ljmp
and
inc
sub
test
enter
jne
fsubrs
leave
leave
cmp
xchg
cmovs
inc
shl
dec
xor
nop
js
popf
repnz
loop,pt
ret
push
int
jp
popa
push
sub
daa
jns
aas
inc
add
lea
std
or
jg
in
mov
icebp
jne
sbb
lcall
dec
inc
sub
sarl
fcmovnb
push
test
test
cmpsl
sub
and
imul
sbb
jg
cmc
xchg
gs
repnz
or
aas
das
or
add
push
popa
xchg
cli
ret
ret
add
mov
clc
roll
cld
testb
cmp
les
xor
out
fmull
mov
mov
lock
adc
rclb
ss
dec
sbbb
push
adc
mov
roll
shlb
and
adc
cmc
or
les
sub
clc
fistl
push
jge
inc
popa
loopne
pop
mov
lock
je
stos
xor
xchg
jns
cmp
sti
cwtl
orb
repnz
test
clc
mov
call
pop
les
in
mov
scas
mov
add
cld
lahf
mov
xchg
mov
std
add
cld
push
push
xchg
dec
clc
scas
sub
xor
call
in
test
cmp
pop
cmp
cmpl
andb
cmpsl
test
es
sbb
add
hlt
inc
mov
mov
rcrb
jge
outsb
jmp
push
pop
xor
icebp
adc
or
test
add
es
fidivrs
pop
jo
lahf
xor
add
xchg
jns
and
adc
jns
or
pop
adc
push
mov
sub
dec
je
mov
mov
and
jmp
cld
xchg
in
add
aam
pop
cmp
loope
fdivl
loope
mov
ficoms
push
aas
push
jns
mov
jnp
pop
rorb
push
lds
ret
or
fnstsw
test
add
cmp
inc
pop
mov
dec
ja
mov
add
jle
cmpsb
fdivr
out
ret
dec
inc
xor
xor
cmpsb
pusha
and
or
sar
lret
adc
add
ret
loopne
jg
lock
aad
aaa
xchg
inc
push
pushf
jmp
mov
pushf
testb
dec
ljmp
jp
push
lcall
repz
stos
inc
mov
test
add
jge
xor
push
rcl
mul
inc
xchg
jle
jno
add
cmp
sarl
inc
jae
mov
mov
cmp
js
movsl
xchg
sub
inc
insl
jl
imul
and
jns
and
cltd
das
lea
je
mov
push
je
mov
std
outsl
adc
xor
push
xchg
adc
loope
pop
cmpl
enter
inc
dec
sti
or
add
xor
push
add
pusha
lds
push
rcrl
xor
mov
xchg
es
add
addr16
mov
mov
ret
push
roll
or
push
into
lahf
roll
xor
data16
mov
jp
cmc
xchg
add
xor
add
pop
and
adc
dec
cmp
dec
sbb
xchg
push
mov
out
roll
stc
popf
out
sub
sbb
fisttps
cmc
inc
and
jo
push
jge
mov
xchg
add
xor
mov
loope
jae
dec
inc
mov
inc
in
adc
rclb
andl
loopne
test
mov
add
dec
jnp
mov
add
stc
dec
call
cwtl
dec
or
inc
clc
pop
xorl
scas
push
ret
scas
loope
scas
mov
sub
and
adc
sub
decl
fmuls
daa
mov
popa
out
fcmovbe
mov
lods
movsl
andl
mov
add
inc
cmpl
xor
stos
xchg
xchg
fstpt
sbb
test
inc
lcall
fadds
lret
aas
lock
stos
adc
lods
lds
push
clc
cmp
dec
stos
outsb
inc
inc
mov
sub
mov
mov
cs
rclb
inc
fidivrs
sub
test
mov
inc
and
pop
mul
inc
fs
xor
inc
pop
sub
ja
jecxz
xchg
adc
sbb
push
lret
iret
aas
pop
jbe
pop
cwtl
test
decb
or
sahf
divb
and
addr16
test
and
dec
das
mov
movsb
ljmp
mov
mov
xor
cmp
pop
mov
mov
push
sbb
iret
fidivs
lea
xchg
cmp
push
dec
push
sub
push
stos
inc
pop
daa
inc
fwait
xchg
fs
add
dec
mov
sti
or
sbb
lock
filds
jge
ret
test
sbb
lahf
pusha
push
aad
out
jno
push
adc
add
push
lcall
or
jno
nop
mov
ja
repz
xchg
imull
ret
sub
add
inc
insl
xor
loop
and
es
shrb
cmp
inc
dec
cmp
cmp
addr16
ds
sti
sbb
mov
fstl
shl
xchg
push
pop
xor
jmp
mov
and
cmp
shll
aas
icebp
nop
test
pop
lret
pop
sbb
repnz
fcmovu
mov
adcb
outsb
cld
mov
lds
icebp
aam
out
dec
dec
mov
test
adc
pop
cmp
mov
mov
call
popa
adc
push
pop
nop
xchg
sbb
or
push
push
inc
dec
cmp
mov
mov
insl
jl
stos
mov
xchg
lret
subb
hlt
orb
repnz
adc
aas
lret
pop
cmpsb
push
icebp
push
movsb
mov
and
loopne
mov
xor
fwait
pop
ljmp
mov
test
pop
add
fcompl
dec
clc
outsl
or
push
int3
lret
int
sub
pushf
pop
shlb
xchg
movsl
sub
fwait
adcb
stos
dec
lcall
pop
rorl
aas
push
sub
repnz
daa
pop
push
xchg
xchg
inc
ljmp
loopne
mov
les
je
les
add
loopne
dec
and
outsl
clc
enter
test
pop
mov
mov
cmp
add
pop
arpl
and
lcall
shr
mov
out
sub
cmp
jnp
mov
xor
inc
lods
roll
ficompl
sbb
and
add
mov
mov
sti
jg
inc
dec
mov
xchg
leave
jno
mov
pop
push
clc
pop
cmp
call
test
jns
add
sub
out
xorl
sbb
rcrb
lahf
adc
xor
lock
jae
outsb
mov
inc
stos
jmp
ja
inc
or
and
pop
cs
rcll
adc
xchg
pop
jge
xchg
or
jo
dec
mov
mov
into
and
jmp
nop
inc
or
jg
xor
icebp
adc
xchg
sbbb
mov
jns
adc
aad
xchg
imul
cs
pop
cs
mov
dec
lcall
pop
je
cmp
xchg
jnp
pop
mov
or
jnp
jnp
or
mov
aad
arpl
sbb
out
lock
lret
xor
fimull
add
cmp
adcl
sbb
jmp
inc
mov
daa
cmc
leave
in
cld
jg
push
call
dec
stos
mov
aaa
push
add
cwtl
in
gs
divb
loope
dec
lds
sub
dec
cwtl
sbb
out
mov
inc
xor
cmc
jo
lea
adc
push
scas
fnsave
ret
dec
rclb
sbb
int
lret
mov
sbb
mov
mov
sub
push
ret
push
dec
inc
pop
sub
call
jb
es
cmp
xor
xchg
cmc
ret
rcll
bound
scas
mov
mov
fstl
sti
push
aaa
loope
mov
ljmp
push
mov
pop
aad
cld
cmpsl
clc
push
xchg
push
push
sbb
outsl
adcb
add
sbbb
inc
cmp
sbb
les
jo
mov
inc
push
pop
idiv
wrmsr
add
mov
lock
sbb
lods
and
cmp
mov
mov
shlb
inc
in
cmp
or
mov
push
jp
ficompl
adc
sti
mov
xor
test
mov
sbb
ljmp
jns
jmp
lock
dec
mov
aam
dec
jle
sub
aad
add
idiv
lea
jno
pop
jg
or
sbb
adc
add
xor
xchg
adc
movsl
shlb
xchg
filds
or
pop
mov
fld
ret
leave
ficoms
jg
mov
cmpsb
fstps
mov
lock
inc
xchg
icebp
cmpsb
cli
and
lds
out
inc
mov
mov
lcall
inc
mov
fisubrs
add
and
ret
stos
repz
or
pop
dec
loop
test
sub
cmpb
push
jb
xchg
and
push
loope
cmc
rcrl
adc
mov
mov
cltd
fistpll
adc
hlt
cwtl
add
inc
add
mov
mov
test
filds
inc
mov
int
mov
mov
lahf
pop
jp
xchg
fstps
test
jle
add
mov
insb
mov
orl
movsb
test
scas
lret
jne
push
clc
push
jl
std
aad
mov
push
mov
pop
xchg
or
jg
jecxz
ficoml
lods
dec
fldenv
andl
fs
jl
sub
cmp
cwtl
add
test
lods
ds
cmpsl
aam
mov
pop
andl
or
jle
jle
je
adc
inc
lret
call
stc
ljmp
inc
xor
fcmovu
add
fsubs
ret
and
mov
xor
push
test
xchg
rolb
inc
ret
pop
and
dec
fsubs
out
stos
fndisi(8087
cld
jl
sub
je
xlat
sub
mov
xchg
cmp
aas
arpl
push
lock
inc
data16
mov
push
inc
and
clc
enter
xchg
jo
xchg
adc
test
aaa
outsb
jecxz
bound
jg
xlat
or
repz
les
dec
xlat
sub
int3
xlat
push
or
cld
outsb
push
cmpsb
push
xor
mov
daa
and
data16
dec
adc
lock
insl
subb
xchg
movb
cmpsl
inc
and
addl
sbb
adc
fs
or
mov
lock
inc
and
out
mov
clc
sub
les
sbb
out
dec
test
mov
xor
test
hlt
sbbb
xchg
in
pusha
cld
shrl
add
mov
in
popa
dec
mov
je
mov
add
addl
movsb
inc
pop
mov
pop
clc
insb
insb
cmp
cld
xchg
push
out
push
xor
push
lret
push
addb
pop
push
test
faddp
popf
push
sub
jbe
push
xor
divb
lahf
pop
dec
jmp
cmp
aam
inc
pop
pop
adc
movsb
out
das
test
fs
lcall
sbb
jp
sub
sub
cmp
mov
fcoms
dec
adc
inc
js
icebp
jecxz
out
dec
or
mov
lea
pop
cli
xor
or
int
mov
mov
push
cmp
pop
push
adc
js
stos
sarb
decb
lcall
shl
adc
inc
xchg
mov
mov
mov
or
push
test
push
stos
movsb
jne
add
ficomps
pop
ljmp
xchg
jp
outsl
sbb
lods
adc
and
nop
in
mov
cmp
sbb
out
in
add
adc
and
stos
pop
fwait
mov
dec
loopne
xchg
add
mov
sbb
sbb
add
in
shll
push
or
mov
cld
mov
sbb
mov
mov
sbb
xlat
jne
nop
cli
inc
pop
inc
std
or
std
jmp
mov
or
repnz
sti
insb
ficoms
lock
cli
ljmp
add
lret
cwtl
nop
sbb
nop
fstps
inc
in
jmp
out
outsb
pushf
mov
pop
int
pop
call
sub
cltd
and
mov
sbb
and
xchg
nop
pop
dec
jmp
pop
pop
imul
mov
and
data16
pushf
shll
jp
out
ja
cmp
inc
jb
dec
mov
mov
cmpb
outsl
xchg
mov
add
faddl
aaa
pop
and
sub
mov
pop
js
call
xor
loope
loop
lods
lret
lcall
popa
fdivr
mov
push
pop
push
bound
in
loop
ret
and
and
pop
dec
mov
inc
mov
cli
xlat
xor
movsb
rolb
and
push
pop
xlat
sub
ljmp
mov
fdivrs
js
and
adc
sub
outsl
mov
aad
cwtl
mov
jp
cmp
rol
cmp
cltd
es
cld
pushl
dec
cmp
call
repnz
out
inc
mov
outsl
pop
push
add
aaa
aad
adcl
sub
loop
hlt
pushl
jmp
fsubrs
cld
mov
jbe
cs
xchg
aas
add
add
inc
push
xchg
movsl
adc
std
jg
sub
fsubrl
incl
inc
sub
jb
lahf
cli
pop
ljmp
fwait
sub
into
cltd
inc
js
add
or
inc
and
xchg
sub
jmp
int3
mov
rorb
and
mov
push
mov
and
pop
je
repnz
push
hlt
cmc
pop
xchg
popa
add
shlb
push
sub
inc
adc
push
pop
insb
mov
pop
jne
aaa
mov
cltd
lret
ret
add
pop
mov
sub
out
jmp
mov
inc
push
iret
pop
fbld
aam
xchg
and
jo
das
mov
loop
mov
aaa
movsl
pop
cmc
outsl
int3
fwait
lds
xchg
ret
cmp
ja
and
dec
cmpsl
incl
call
in
cmp
fsqrt
jg
xchg
out
mov
decb
decl
into
nop
data16
inc
push
mov
mov
pop
pop
andb
outsl
mov
movsl
sbb
fbld
jl
cmpsb
cmc
ljmp
mov
mov
cmp
dec
and
adc
ss
mov
jge
mov
inc
sar
mov
or
notl
pop
xor
jg
mov
inc
daa
pop
pop
js
pushf
jb
ljmp
repnz
jb
shll
clc
mov
gs
cmpsb
out
fisttpll
pop
daa
out
jg
pop
dec
pop
push
cmc
fcoml
pop
add
clc
cmp
test
test
out
jns
jns
mov
cli
ja
sarb
xor
xor
int3
sub
mov
ljmp
repnz
inc
ds
sbb
cmp
gs
fldl
fsts
pop
jae
jecxz
shll
mov
cmp
xlat
cmp
ret
out
popf
cmp
add
sub
xchg
jo
scas
loope
lods
cmp
cwtl
nop
adc
gs
rcll
push
testl
xchg
dec
add
jns
sub
lods
mov
in
cltd
stos
xchg
add
pushf
cmp
jns
xchg
inc
xchg
adc
mov
mov
jb
mov
jns
je
lock
stc
sbb
lock
jns
adcb
shrb
lcall
sub
loope
inc
cmp
mov
sarb
das
mov
popf
jno
shrl
pusha
add
lcall
ss
pop
jns
pop
push
push
sub
orb
sub
push
xchg
cmp
sbb
in
fwait
cmpsl
jb
pop
outsb
orl
sub
cmp
sbb
xor
inc
ds
sbb
int3
insb
decb
fstps
repnz
jp
and
sub
int
loope
lea
cltd
jl
into
hlt
inc
mov
cs
incb
and
cltd
fldt
test
pop
push
xor
jno
test
push
incl
sahf
mov
rclb
addr16
or
dec
adc
adc
adc
subl
ja
pop
jle
sbbl
test
stc
loopne
lods
sub
lods
cmp
call
dec
fucomip
cmp
das
mov
xchg
jbe
lea
sahf
clflush
xchg
xchg
pushf
and
out
std
pushf
repz
pop
jb
or
mov
aaa
jge
ljmp
sbb
aas
cmp
mov
lods
pop
push
addb
mov
xchg
pop
dec
loop
test
addr16
adc
shrb
ja
fidivl
mov
push
test
or
mov
mov
movsb
movsb
cmp
push
inc
pushf
imul
push
in
add
cmp
test
mov
sbb
jno
out
dec
xchg
mov
call
movsl
cmpl
adc
lea
or
jb
leave
mov
mov
mov
in
in
jp
inc
loope
dec
mov
sub
dec
cmp
cmp
xchg
repz
pop
xchg
enter
jmp
aam
xor
and
fwait
xchg
xor
ds
imul
lods
cmpsw
or
inc
or
std
sub
jo
addb
cmp
add
arpl
insb
stos
scas
jns
jmp
cmp
outsl
shlb
and
mov
xchg
push
lcall
cmp
es
pop
pop
add
into
adc
inc
sbb
jae
xor
imul
sub
pushf
push
push
jg
lods
aam
sbb
daa
lods
sub
in
lds
push
xor
decl
xchg
adc
shr
mov
push
push
xchg
add
inc
adc
cmc
xchg
and
push
cmp
bound
mov
insl
test
and
push
aas
xor
push
add
rcrb
push
inc
cmp
fnclex
jp
dec
cmpsl
out
add
leave
sbb
pop
fwait
cli
incl
movsl
xlat
xor
inc
add
ret
inc
lret
and
adc
popa
jp
das
xor
into
add
or
mov
mov
jb
xor
repz
scas
aas
rclb
lods
aad
cmp
js
daa
cld
xchg
cli
push
xchg
inc
cltd
or
lds
jecxz
inc
jne
mov
sbb
mov
lea
fdivs
jmp
push
aad
gs
xchg
mov
enter
enter
aad
filds
in
add
or
or
lret
and
cmpsl
fstpt
test
add
decl
aam
imul
xor
cli
add
add
dec
enter
pop
inc
xorl
sbb
jg
insl
mov
int3
call
aaa
pop
cmp
jge
xchg
sahf
les
inc
cs
lcall
xor
mov
notb
xchg
jle
fs
pop
ret
push
mov
lods
mov
and
and
imul
loopne
scas
push
enter
pop
mov
jl
xor
xchg
shrl
dec
popa
call
loopne,pn
and
dec
mov
fisttpl
push
ljmp
lret
push
mov
lcall
pop
sti
mov
aas
lcall
jecxz
jb
js
push
ja
sub
sub
push
fisttpl
icebp
lds
lcall
sub
push
or
xchg
rclb
sahf
sti
dec
ret
pop
mov
jns
negl
pop
push
in
outsl
and
imul
sub
lea
add
std
sbb
xor
lock
sbb
and
push
mov
inc
clc
incl
sbb
cmp
mov
xor
das
clc
push
jae
popf
out
fcoml
es
dec
xor
ss
xor
jmp
iret
sbb
dec
roll
movl
fwait
mov
cwtl
jmp
inc
mov
cld
dec
xchg
dec
cmp
dec
aam
push
enter
dec
cld
push
je
ds
movsl
cmp
hlt
fmuls
and
pop
cmp
les
sarl
xlat
movsl
sub
and
clc
in
xchg
push
cmp
movl
xchg
jmp
pop
call
vpshufhw
outsl
lcall
shrb
leave
sar
in
pop
pushf
inc
outsb
xor
adcb
insl
and
daa
jbe
jecxz
cld
sar
sarl
add
int
and
ret
popf
cmpl
gs
scas
shrl
xor
aaa
ljmp
mov
or
popf
imul
pop
dec
test
pushl
fmull
orl
loop
sub
mov
popa
mov
push
aaa
iret
outsl
dec
popa
jecxz
or
imul
iret
and
out
jg
dec
cmp
dec
cmp
inc
adc
arpl
arpl
movsb
fldl
jp
mov
cmp
ja
mov
cs
cmp
and
or
sub
pop
pop
xlat
sar
jmp
jp
lret
in
add
lahf
push
in
cld
stc
pop
push
push
add
stos
xor
push
pop
das
inc
mov
call
lcall
xchg
mov
ret
add
xchg
sbb
add
icebp
or
dec
das
jg
ret
rorb
mov
lods
mov
in
loop
aaa
int
or
nop
mov
xchg
ljmp
popf
mov
ljmp
iret
and
mov
int
std
cwtl
add
or
mov
ret
lahf
add
mov
je
mov
les
pusha
or
notb
lea
mov
adc
out
mov
cmpb
mov
pop
xchg
sub
or
scas
or
les
cmp
pop
loope
inc
ffreep
mov
xlat
faddl
frstor
sbb
aas
pop
popf
dec
mov
or
aaa
stc
fst
dec
or
das
ror
sbb
bnd
xor
sbb
sar
push
adc
daa
lcall
push
lcall
add
call
test
adc
adc
lock
inc
ljmp
ret
cvttps2pi
out
outsb
cmp
popa
mov
sbb
mov
aad
and
call
fimull
fdivs
mov
lds
jno
xorl
ret
lock
adc
inc
hlt
push
and
in
jg
push
or
cwtl
sub
mov
dec
or
lods
cmc
imul
ss
add
mov
test
sbb
mov
push
insb
inc
mov
ret
mov
push
in
loop
mov
dec
push
and
loope
and
movsb
cmp
mov
ret
mov
inc
push
pop
mov
xor
xor
push
lcall
dec
daa
pop
push
inc
inc
cli
add
mov
repz
xchg
aas
rcrb
addr16
jl
xor
cmp
and
xchg
inc
fnsave
and
mov
sahf
or
and
int
test
mov
shl
sti
cmc
jne
sbb
hlt
lcall
mov
mov
je
decl
xchg
call
xor
or
in
xlat
xchg
push
pop
mov
fistps
inc
xor
and
push
xchg
mov
arpl
stos
aas
or
fwait
xor
adc
add
dec
push
cmp
jae
daa
lods
inc
iret
movsl
fadds
and
loope
sub
test
xchg
mov
add
inc
outsb
in
or
xor
lock
add
pop
mov
jns
lock
repnz
test
flds
xchg
push
hlt
cmp
sub
pop
call
iret
cmp
mov
mov
jp
pop
lods
das
push
in
jo
dec
cmpsb
leave
insb
sbb
and
test
jl
or
and
sub
andl
or
sub
dec
clc
jns
sbb
cwtl
inc
rcll
pop
aaa
mov
and
push
adc
xor
lock
outsb
dec
add
ret
cmp
shlb
jle
pop
xchg
inc
pop
bound
push
sarb
mov
mov
lods
icebp
mov
push
sbb
jmp
sbb
dec
mov
dec
arpl
mov
adc
dec
dec
mov
fmuls
jg
mov
clc
jnp
scas
add
inc
movsb
cmpsb
ja
sbb
mov
int
jo
pop
inc
sbb
mov
ror
or
insb
lea
call
fucom
fisubrs
and
sub
and
out
and
scas
ss
sarl
xchg
sub
pop
push
rcrl
jo
jb
mov
push
dec
mov
and
outsb
and
shrb
adc
mov
xchg
xchg
sbb
test
fwait
push
add
clc
lahf
pop
sbb
dec
sub
cmp
jbe
push
or
inc
js
mov
mov
pushf
adc
test
dec
rdmsr
fbstp
push
ret
adc
lcall
push
xor
xchg
inc
sbbl
sub
mov
adc
popf
les
adc
lret
xchg
fst
adc
movsl
xchg
ja
ret
pop
add
or
sub
inc
jns
add
mov
sub
mov
pushaw
mov
mulb
in
loope
and
xchg
jl
jne
out
in
mov
lret
nop
mov
inc
hlt
fbstp
stos
and
jecxz
cmp
out
aam
jb
nop
push
adc
lock
mov
mov
pop
xchg
add
imul
adc
cmp
ds
and
inc
gs
sti
insl
out
mov
add
int3
push
adc
fimull
bound
dec
push
add
pushw
adc
xchg
mov
shrb
and
inc
pop
frstor
mov
cmc
clc
cmp
xchg
pop
mov
push
in
mov
xchg
ret
mov
cmc
and
sub
add
subb
adc
pop
fyl2x
push
sub
lret
jle
adc
push
shl
loopne
sarb
sub
test
push
add
pop
add
and
enter
push
mov
aas
inc
cs
sbb
sub
pop
mov
xor
inc
out
movsl
jo
jg
mov
inc
sub
aad
pop
pop
xor
stc
dec
adcb
out
xchg
dec
ret
fs
andl
pusha
in
mov
mov
mov
xor
into
push
stos
push
stos
mov
inc
pushf
adc
cmc
arpl
ljmp
push
ljmp
adc
or
adc
movsl
pusha
xchg
jg
sar
imul
lea
xorb
or
ja
cmp
mov
lahf
pop
arpl
mov
jno
cmp
cli
xor
xor
mov
cmc
xchg
addr16
testl
fisubrs
adc
lea
add
nop
dec
out
and
lret
inc
inc
lods
push
cmp
icebp
dec
sbb
cld
pop
add
inc
fildl
test
xor
in
inc
mov
sub
stc
aas
jnp
xlat
aas
repz
or
je
xor
shl
data16
xchg
mov
mov
fwait
inc
xchg
fistpll
dec
xchg
inc
push
shrl
add
nop
lea
loope
mov
inc
mov
xorb
dec
addb
inc
adc
mov
ss
inc
sub
mov
dec
push
mov
and
fsubs
pop
sbb
scas
movsb
push
and
mov
push
rcrb
loope
xchg
xchg
inc
movsl
ficoml
mov
std
push
pop
xchg
and
add
lahf
test
orb
cs
mov
out
dec
xchg
int
stos
mov
lock
and
nop
or
sbb
iret
cmp
pop
nop
sub
inc
mov
mov
xchg
dec
and
iret
xchg
sub
push
adc
or
fldt
outsl
std
imul
mov
or
mov
mov
jns
icebp
pop
adcb
push
add
mov
fadd
xchg
push
pop
aas
ljmp
icebp
xor
dec
popl
push
lea
mov
add
lret
dec
mov
sbb
xor
jb
pavgb
bound
cwtl
sub
pop
dec
xchg
scas
sbb
dec
inc
adc
inc
mov
leave
push
mov
and
loope
lds
mov
fisubrl
add
adc
xor
mov
dec
or
cmc
stos
insl
dec
jl
lahf
push
fiaddl
push
dec
lods
incb
sbb
or
sti
mov
scas
outsb
add
mov
mov
or
xor
push
inc
call
add
popf
xor
push
repnz
and
mov
les
add
xor
andb
in
push
or
inc
insb
cld
xor
adc
adc
push
mov
dec
pop
xchg
sub
adc
push
jnp
lods
ja
and
xchg
add
mov
jbe
inc
xor
push
filds
out
hlt
cmp
iret
scas
mov
fwait
mov
push
loop
xchg
inc
add
pusha
mov
pop
or
cs
incl
repz
mov
in
mov
mov
popa
xchg
out
repnz
aas
ficompl
jle
mov
ljmp
jae
sbb
sub
mov
paddusb
jg
or
add
repnz
push
int
in
inc
add
movsl
pop
xor
mov
jmp
js
fld
ja
xor
push
push
xor
dec
dec
mov
or
repnz
shlb
adc
fadds
in
jo
pop
jnp
fsubp
push
and
shll
mov
pusha
xor
out
xchg
xchg
pop
jg
pop
push
jnp
ret
pop
or
xchg
popa
inc
add
imul
add
fstpl
lret
adc
mov
arpl
incl
inc
jmp
xchg
jnp
shrl
pop
stc
or
or
cmp
xor
cmpsl
lahf
scas
fucomp
lea
insb
dec
inc
mov
inc
jo
inc
push
pop
in
loop
jns
jle
mov
mov
jnp
inc
mov
fwait
mov
mov
popw
jmp
or
popl
pusha
ja
test
mov
sbb
shll
jg
push
mov
ljmp
aas
mov
je
adc
sub
insb
fnstenv
xor
mov
leave
add
xchg
es
jle
xor
scas
xchg
and
cmp
mov
dec
in
adc
lds
shlb
add
iret
or
add
aas
subb
std
jg
in
sub
scas
inc
ljmp
ja
aaa
or
ss
inc
add
xchg
lahf
mov
push
pop
incb
add
mov
iret
jo
cli
inc
and
push
rcll
xor
into
jecxz
push
clc
divb
jmp
cmp
cltd
data16
cmp
sbb
sbb
xrelease
cmc
mov
enter
inc
sarl
dec
add
imull
mov
subl
sti
test
popa
pop
add
inc
jmp
jnp
std
xlat
clc
sbb
sbb
cmpb
repz
or
nop
outsb
call
cld
incl
dec
add
fdivrs
pop
jle
sub
hlt
aam
sar
jbe
mov
imul
pop
fbld
outsl
jo
dec
loopne
mov
loop
mov
aas
adc
or
test
addr16
add
dec
hlt
popl
jge
and
ljmp
stos
xchg
push
pop
int
out
in
mov
dec
mov
sahf
lret
and
xchg
jmp
mov
mov
mov
cld
or
push
pop
mul
bound
cs
dec
inc
loope
mov
shrb
mov
incl
test
out
pop
outsl
pop
rorb
sub
sbb
push
pop
shrb
mov
push
in
orl
test
movsb
pop
mov
pop
cmp
jns
mov
call
and
adc
push
adc
lret
scas
add
pop
ret
ficompl
call
or
sahf
arpl
adc
push
ret
mov
stos
jmp
in
int
int3
sub
aas
mov
incl
jae
and
pop
adc
test
pushf
xchg
ds
mov
in
sbb
jo
cwtl
je
jecxz
push
clc
fcomps
lea
lahf
push
adc
push
or
inc
stc
jmp
gs
inc
les
cmp
push
mov
mov
mov
xchg
mov
mov
jne
call
inc
ret
mov
pslld
popf
push
mov
cwtl
subb
sub
pushf
daa
mov
adc
div
pop
rol
hlt
mov
adc
out
or
cld
arpl
adcb
jle
pop
xor
lret
push
sti
cmpsl
lret
arpl
mov
mov
fwait
iret
sub
mov
test
add
cmp
add
and
std
setne
cmp
xor
xor
xchg
scas
mov
push
mov
cli
in
pop
adc
push
jne
lock
hlt
xlat
jle
xchg
xor
sbb
ret
pop
fiadds
fwait
cli
lret
mov
jl
int3
incl
roll
and
jp
fstpt
add
adc
inc
mov
jmp
inc
push
daa
test
adc
push
xor
dec
jo
sbb
mov
mov
rcrl
daa
iret
shrl
mov
loop
call
pop
negb
pusha
jmp
sbb
xor
cld
incl
push
out
leave
jl
lods
rorb
jle
out
or
in
pop
cli
jle
outsl
clc
mov
adc
lea
pop
loop
movsl
aam
inc
jmp
loop
pop
int3
fists
inc
rorl
push
mov
xchg
mov
xchg
stc
and
xchg
daa
test
mov
mov
mov
stos
cmpsl
xchg
and
add
cltd
sbb
jg
mov
adc
push
and
xor
push
addr16
jmp
out
fistpl
cmp
mov
dec
sbb
pop
cld
jns
out
mov
or
rcl
mov
movsb
scas
clc
push
sub
sub
xor
pop
dec
inc
shll
lock
and
adc
hlt
ret
cmc
inc
data16
push
rorb
inc
push
shlb
sbbb
xchg
jg
imul
jbe
orb
mov
arpl
jno
cli
mov
push
ljmp
push
push
sub
cs
inc
adc
or
movsl
sub
std
dec
rorb
mov
inc
lods
enter
pop
pop
ja
mov
mov
rcr
ljmp
cs
mov
insl
cmc
mov
mov
sti
jmp
jp
idivb
cli
adc
stos
xor
in
mov
test
xor
shl
mov
outsl
in
sub
lods
call
mov
pop
mov
push
shlb
in
sbb
les
cld
pop
es
incb
push
cmp
scas
int3
pop
cwtl
popf
and
nop
mov
pusha
sbb
sbb
mov
imul
shlb
mov
lcall
xor
dec
int3
pop
jo
or
xchg
inc
mov
mov
cs
pop
inc
clc
fistpl
nop
adc
mov
mov
fildl
aas
shrb
cmp
adc
pusha
cmp
add
pushf
or
sti
in
pusha
xchg
add
mov
std
aas
movsb
cli
mov
leave
mov
aaa
in
imul
das
call
jl
ret
sbb
inc
or
int
push
push
mov
cmp
lods
out
sbb
test
xchg
push
rcr
out
and
inc
ja
cmp
pop
aas
je
cmc
and
xchg
aaa
push
into
and
ror
std
mov
sbb
adc
jno
fdivl
jg
xchg
inc
add
push
cld
push
push
mov
mov
ljmp
dec
dec
loope
nop
sbb
fs
sbb
loopew
and
adc
es
call
ret
ret
aas
mov
or
adc
iret
pop
inc
dec
mov
xchg
repz
jg
pop
lea
fcoms
sub
clc
xchg
pop
sub
movsb
shlb
and
das
mov
call
lock
pop
dec
pop
outsl
mov
add
inc
and
sbb
ljmp
loope
inc
sbb
adcb
pop
lods
sbb
fs
loopne
jg
xchg
xchg
and
mov
jle
ss
fdivr
jmp
js
mov
inc
jb
pop
pop
xchg
cmpsl
lret
and
stos
mov
cld
cmp
out
jne
push
adc
adc
ficoml
js
stos
inc
pop
aam
add
fisttpll
adc
ret
add
fmuls
aas
add
push
icebp
in
jmp
clc
jno
pusha
rcll
inc
cmp
popf
sar
ret
sub
push
and
or
push
sarb
arpl
adc
jmp
test
pushl
add
in
js
arpl
or
push
cmp
mov
pop
inc
imul
sbb
cmpsl
test
ds
or
repnz
adc
sbb
mov
xrelease
hlt
scas
lea
cmp
sub
fwait
sbbb
inc
in
adcl
jmp
pop
int
lock
adc
inc
aad
xchg
xor
sbb
sar
ljmp
lahf
push
and
dec
sbb
leave
loopne
insl
push
shll
pushf
mov
testl
scas
xor
lret
jnp
cmp
ljmp
xor
xor
repnz
jp
loopne
in
adc
inc
sbb
outsl
mov
movsb
xor
movsb
inc
xor
fwait
data16
unpckhps
int
icebp
daa
in
pop
jns
jp
out
push
dec
xor
je
xchg
xor
cmp
test
clc
lcall
lea
in
jecxz
dec
adc
inc
shl
push
or
sbb
mov
adcb
sbb
sbb
roll
sbb
ljmp
daa
loopne
fxch
cmc
les
add
xchg
repz
ds
and
pop
push
and
adc
lock
inc
cmp
mov
rclb
push
mov
lods
es
sub
pop
pop
inc
decl
mov
shll
xor
jle
jg
fnsave
pushf
push
into
jge
xchg
push
inc
push
cld
xchg
outsl
movsb
xor
jle
ret
ja
lods
repz
push
push
out
aas
enter
mov
ret
add
rolb
mov
mov
imul
ret
push
imul
je
push
push
xchg
or
js
mov
mov
xor
lods
and
fldt
pusha
xchg
pop
add
shl
dec
and
inc
jle
fwait
or
ja
jnp
cli
loope
push
cwtl
cld
loopne
inc
push
inc
adc
cmp
shll
jns
iret
add
add
pop
test
in
mov
stos
or
cmpsl
lret
inc
mov
pop
insb
hlt
push
or
dec
test
icebp
and
int
dec
jmp
imul
inc
imul
push
adc
xorl
clc
pop
loopne
sbb
inc
mov
mov
jg
das
xor
test
jp
push
pop
and
xor
xchg
incl
lahf
and
push
inc
or
out
mov
fmull
dec
fnstsw
pop
fcoms
cmp
cli
outsb
pushf
jns
pop
mov
lret
fdivrl
cmp
push
in
cmp
cmp
jnp
or
add
sub
std
and
jno
xchg
adc
cs
out
cli
outsl
mov
xchg
xchg
pusha
repnz
add
dec
mov
jmp
popf
mov
mov
ja
xor
repz
clc
inc
call
dec
or
rcrb
xchg
jle
inc
adc
sbb
cli
sub
test
aas
dec
aas
inc
mov
add
xchg
pushf
add
sub
sti
mov
mov
aam
inc
inc
and
xor
mov
jmp
cmpl
xchg
cli
add
push
sbb
cmp
movb
arpl
sub
loop
adc
cmp
mov
adc
or
push
test
mov
jg
and
jnp
lea
push
cmc
mov
es
fadds
push
mov
outsl
call
jbe
jo
ret
xchg
pop
call
sbb
inc
cmp
or
adc
nop
out
dec
mov
rorl
and
cld
sub
movsb
mov
fidivl
aam
and
sub
xchg
addb
addb
rcr
rolb
clc
mul
loope
aaa
aam
xchg
or
imul
fistps
and
cmp
or
out
inc
imul
ds
or
push
cmpsb
cmpsb
mov
icebp
sbb
lahf
dec
xor
ss
mov
insl
dec
insl
in
mov
sbb
std
lds
and
pop
sub
adc
repnz
ficomps
push
leave
loope
cs
dec
add
hlt
iret
decl
add
inc
int3
loope
es
call
nop
sub
jmp
hlt
mov
add
jne
insb
rcl
rorl
inc
frstor
mov
ret
push
or
mov
jmp
push
or
push
sbb
fldcw
or
testl
mov
mov
push
xor
and
shll
and
mov
repnz
add
in
add
pop
test
shl
adc
imul
xchg
and
sbb
pusha
push
scas
add
sub
cmpsl
fimuls
sbb
inc
clc
mov
pop
lea
cmp
sub
pop
test
mov
jnp
mov
mov
inc
jns
inc
int3
jbe
adc
xor
push
inc
add
push
ss
cltd
int3
stos
cmpsl
lcall
pop
cmp
jbe
dec
jl
cmp
das
ficomps
mov
scas
inc
push
pop
push
mov
nop
pop
inc
adc
popa
xor
out
jg
enter
sub
lea
popf
pop
sub
fnstenv
add
sub
lcall
fwait
or
insb
idivl
jo
test
insb
mov
leave
std
in
and
test
adc
jge
lahf
mov
cmc
pop
aad
call
jae
sarb
xor
cmp
and
mov
mov
add
mov
outsb
mov
loope
mov
xor
dec
loopne
je
push
sbbl
shrl
leave
pushf
add
sub
pop
xchg
dec
imulb
loope
cmp
test
decl
or
jecxz
repz
into
inc
push
xchg
out
mov
ljmp
into
sub
shrb
scas
shrl
or
je
ret
or
jmp
roll
dec
rcrl
je
dec
stos
jbe
repnz
adc
sbb
lods
and
lods
ror
rcll
cwtl
inc
jl
in
ja
fstpt
xor
fdiv
addr16
push
mov
roll
ljmp
pushl
movsb
clc
mov
jg
push
in
ds
sub
xor
dec
out
in
add
pushl
inc
adc
cwtl
lahf
jg
xchg
inc
and
and
sahf
les
pop
aam
adc
clc
lods
rorb
xor
and
sbb
jbe
shll
js
mov
mov
aam
xchg
test
sbb
lcall
push
sbb
xchg
mov
test
sbb
adc
sub
aas
jmp
xor
adc
cwtl
sti
fnstenv
cwtl
xor
rcrb
dec
xchg
sbb
mov
pop
lcall
jbe
mov
jno
movsb
mov
adc
gs
inc
adc
lods
mov
ljmp
aad
test
rcrb
outsb
xchg
sbb
cmp
movsl
lahf
add
das
jns
add
sbb
adc
aam
scas
adc
xchg
sub
inc
inc
pop
test
std
dec
lds
popf
cltd
mov
dec
cmpsl
cli
inc
stos
pushf
jne
or
cwtl
or
nop
arpl
push
outsb
pop
repz
fsubr
inc
fisubrl
xlat
mov
mov
inc
add
push
or
adc
fsubrl
ds
sbb
call
daa
push
push
nop
lds
imul
call
addl
out
mov
sub
dec
fimull
mov
add
loopne
mov
adc
cmp
add
or
lock
ljmp
cmpsb
sahf
cmp
daa
pop
dec
ja
sub
fwait
inc
sbb
sub
xchg
icebp
push
xchg
add
push
mov
jg
xchg
lea
fldt
and
mov
or
cmpsl
rolb
dec
xchg
xor
jge
add
lock
add
cmp
int3
sbb
fstpl
hlt
mov
push
cld
loop
mov
out
push
lea
mov
incl
aam
pusha
test
jp
sbb
or
xor
mov
out
cli
mov
sbb
inc
pushl
inc
xchg
add
in
add
xor
xor
sbb
lods
jb
add
lock
leave
jb
mov
cmp
jae
aam
or
repz
push
ljmp
fnsave
lods
mov
jb
lret
sbb
in
pop
xchg
dec
push
mov
clc
lret
in
repz
push
jb
pop
out
stc
jb
xchg
lods
sbb
daa
fdivl
sub
push
fdivl
leave
leave
popf
sar
decl
xchg
inc
inc
and
leave
fldl
insl
push
in
inc
or
cmp
lcall
xchg
sub
insl
jge
adc
fs
inc
aaa
nop
gs
add
push
inc
mov
add
dec
ret
lock
dec
push
fistpll
sub
and
xchg
rol
jns
pop
notb
shll
mov
pop
lahf
mov
ja
pushf
adc
dec
aam
jmp
inc
sahf
es
or
mov
xlat
and
daa
xor
add
jl
mov
ret
fidivrl
xor
mov
fs
clc
sbb
ljmp
sbb
in
orl
push
ffree
outsl
inc
inc
xchg
movsb
xor
xchg
sbbb
pop
insb
fsubrs
fmull
inc
popf
mov
cmp
testl
cmp
mov
cwtl
test
inc
cld
rcrl
mov
add
dec
push
add
push
adc
imul
int3
mov
sbb
or
es
popa
mov
inc
pop
pop
sahf
mov
push
push
ret
push
xchg
or
mov
dec
cmp
and
jp
loopne
dec
ljmp
push
dec
mov
jo
add
adc
incl
xchg
inc
add
fs
and
cmp
push
adc
lock
lret
push
rcll
cmp
mov
and
stos
adc
and
jno
xor
mov
jmp
jecxz
int
pop
test
pop
orb
jp
sbb
lea
mov
jnp
decl
add
in
cmp
rcrl
add
or
aaa
outsl
aas
imul
mov
push
mov
dec
loopne
inc
scas
pop
add
pushl
movsl
out
jmp
cmp
loope
clc
paddq
or
insb
aam
or
push
stos
add
mov
jae
sub
mov
adc
and
test
scas
ds
sbb
lock
mov
dec
push
adc
not
mov
fnstsw
mov
push
je
and
call
adc
sti
mov
rclb
dec
loope
add
and
sub
push
mov
dec
cli
in
adc
dec
mov
daa
es
jle
mov
inc
lcall
pop
test
test
pushf
xchg
fwait
test
aas
je
pop
cmp
mov
mov
clc
movsl
daa
dec
aaa
pop
stc
es
push
test
cmp
in
fdivs
imul
fwait
inc
mov
sub
mov
outsb
inc
mov
mov
jb
xchg
xchg
mov
mov
nop
jle
cltd
inc
pop
xchg
int3
pop
jecxz
mov
push
sub
xor
adc
sbb
fsubr
fstpt
jl
add
xchg
dec
dec
adc
jns
cmp
stos
add
xchg
jae
xchg
std
xor
mov
pop
imul
dec
aam
call
push
add
mov
xchg
add
add
lahf
cld
sub
add
mov
pop
fisubs
mov
sub
fxtract
mov
adc
out
and
or
xchg
mov
loopne
insb
fbstp
push
lret
mov
mov
cmp
inc
mov
mov
cmp
arpl
aas
pop
adc
sti
pop
add
sbb
nop
lock
jns
movsb
sub
xor
cs
mov
fcoml
ret
adc
or
xor
cld
movsb
mov
scas
lds
data16
fidivrl
lds
fcomip
push
jl
mov
add
cmp
arpl
mov
adc
add
jg
pushf
mov
movsl
xchg
dec
loopne
dec
jge
dec
pop
add
out
mov
xchg
pushf
fcomip
mov
and
andl
jb
xchg
push
scas
mov
insb
adc
mov
cld
mov
outsl
cld
add
mov
cmc
add
adc
ds
push
sub
clc
jp
pop
sbb
add
pop
adc
xor
jnp
test
and
or
orl
ds
add
enter
bound
push
add
cld
sar
scas
sbb
inc
jnp
xor
pop
or
mov
mov
pushl
mov
test
lods
fs
outsl
add
lret
js
jg
test
push
pop
push
pop
daa
or
push
movsl
jmp
les
std
sbb
outsl
push
add
cmp
insb
adc
cmp
test
les
popf
fsincos
cwtl
jg
mov
inc
insb
and
cmp
lea
aas
add
gs
xchg
scas
ret
dec
aas
dec
dec
adc
adc
or
je
sbb
mov
xor
addl
adc
add
scas
aam
out
insb
jg
sub
lahf
pop
mov
add
std
andl
adc
or
andl
jl
xchg
mov
sbb
adc
out
in
sbb
aas
lahf
ret
loopne
push
sub
add
push
scas
test
dec
mov
decl
lods
jo
inc
xor
aas
or
enter
push
mov
ljmp
aam
cwtl
push
or
shrl
xchg
adc
pushf
mov
sbb
ret
pushl
call
xchg
mov
mov
mov
daa
dec
adc
xchg
mov
in
mov
popa
jne
add
add
je
fidivrl
or
push
cmp
cwtl
add
notl
ret
mov
mov
sub
cltd
je
call
sub
dec
nop
mov
adc
cmp
fucomi
or
jl
fwait
mov
add
add
and
adc
in
lcall
mov
loop
and
stos
mov
icebp
sub
lock
adc
cli
sbb
mov
sbbb
arpl
out
loope
rorl
lahf
shrb
or
jge
mov
sbb
xchg
cltd
fsubs
mov
mov
cmpl
add
xadd
mov
mov
inc
xchg
pop
rclb
jg
dec
mov
fndisi(8087
xor
adc
cmp
jb
fwait
clc
pop
in
outsl
lcall
push
pop
fcomps
jg
inc
push
addl
ret
adc
out
mov
rolb
push
leave
mov
jg
aas
cmpsb
mov
mov
and
jae
cmp
pop
fdivrs
pop
mov
add
xchg
dec
push
imull
std
inc
jb
mov
xchg
cmp
jae
mov
push
pop
imull
cmp
pop
testl
inc
pop
lret
xchg
std
xor
inc
mov
sar
mov
jbe
lods
es
cmp
daa
dec
int
ljmp
pop
cwtl
cs
jo
sysret
hlt
mov
cmp
andl
dec
ror
inc
or
jg
push
xor
push
mov
sbbb
lea
cmp
sbb
or
js
daa
push
add
adc
push
lods
push
cmpb
or
gs
lds
out
adc
xor
inc
sbb
aas
imul
lahf
std
jno
notl
mov
sti
cmp
dec
xlat
out
xlat
in
mov
jmp
mov
lcall
dec
mov
mov
push
scas
lcall
loope
mov
bound
ret
mov
gs
lcall
ret
outsl
mov
push
vpmovzxwd
iret
ret
clc
inc
and
int3
add
sbb
add
call
rcll
out
jg
mov
jg
pop
adc
and
pushf
pop
inc
ficoms
jo
std
and
lret
jo
or
ds
xchg
mov
mov
ja
mov
movsb
xlat
lea
mov
xchg
add
lods
sub
ds
mov
push
inc
scas
pop
lds
out
decl
pop
cmp
cmc
and
ja
movsb
dec
repz
jns
lahf
incl
push
incl
les
pop
sub
gs
adc
test
inc
add
mov
pop
add
jg
add
push
pop
pop
les
mul
ret
adcb
insb
aas
dec
jne
push
loope
mov
nop
call
cmp
mov
hlt
sahf
ja
mov
mov
or
pop
out
repz
dec
sub
mov
decl
inc
mov
rclb
lret
negl
xor
test
and
inc
dec
outsb
jo
test
movsb
outsb
outsb
and
xor
jecxz
pop
xchg
sbb
cmp
add
icebp
sarl
push
inc
icebp
mov
push
and
push
out
sar
pop
pop
fwait
inc
sub
in
xchg
mov
mov
mov
xor
cld
rorl
cli
mov
xor
cmp
mov
mov
hlt
sbb
outsl
push
cli
mov
jecxz
stc
pop
or
pop
decl
jecxz
iret
shlb
jne
scas
adcl
jp
in
ret
das
push
pop
enter
and
mov
in
decl
inc
pop
inc
incl
pop
xlat
pop
pop
mov
popf
ljmp
cmp
sbbb
mov
fldl
icebp
decl
loopne
rclb
or
mov
arpl
ret
mov
push
hlt
add
lcall
movsb
sbb
cld
inc
or
jmp
adc
in
leave
fwait
cmp
dec
adc
sbb
and
arpl
mov
cmpsb
jbe
lds
andb
xchg
scas
add
cld
fwait
dec
ljmp
incl
loop
sub
add
add
jmp
cmc
pop
das
sbb
ds
lods
cld
scas
loopne
mull
mov
ret
fistps
sti
cmpb
push
aaa
cld
in
sub
add
fdivs
jle
xor
movsb
jp
dec
xorl
mov
mov
dec
pop
cmp
push
test
call
add
adc
xor
jl
mov
lods
nop
sbb
sub
mov
fwait
das
lret
mov
bound
xor
fs
pop
jnp
xchg
add
rolb
ret
xchg
stos
lods
stc
add
nop
dec
xchg
andb
ret
fs
cmpsb
cmpsl
dec
jb
rcrb
jno
sub
nop
dec
push
fucomip
adc
outsl
jecxz
in
xor
mov
shlb
and
insl
jmp
rclb
inc
les
sub
cld
lcall
pop
inc
inc
ret
xor
mov
sbb
stc
push
daa
or
test
pop
sub
mov
insb
cmpb
decb
cwtl
and
add
pop
mov
test
lret
stc
push
je
xor
sbb
mov
cmpsb
ret
imul
sahf
adc
repz
push
ret
in
stos
ret
repnz
sbb
or
dec
jp
subl
pop
mov
sbb
fwait
add
inc
sarb
jbe
fninit
and
xor
cmp
jo
out
aas
adc
and
push
pusha
jne
pop
push
xor
sub
dec
cmp
mov
mov
mov
jae
pusha
popa
rcll
aas
mulb
xchg
test
ret
call
sub
sub
shlb
loopne
popa
cmp
sub
les
sbb
adc
pop
cmp
cli
scas
pop
mov
cmpsl
subb
je
aad
lds
in
mov
mov
cmc
mov
cmp
es
ficompl
and
xchg
xlat
popa
add
xchg
adc
fnstenv
add
add
mov
leave
push
pushf
cmpsl
js
mov
std
pop
push
add
sub
aas
enter
jne
dec
or
inc
fsubs
push
lahf
sti
iret
mov
fiaddl
ja
insl
je
ljmp
lea
lds
aas
loop
ljmp
jp
lahf
je
adc
js
and
dec
lcall
mov
out
pop
and
mov
movsb
pusha
inc
out
mov
arpl
pop
scas
ret
pop
or
clc
or
inc
cld
out
mov
push
push
lret
adc
add
jbe
jecxz
nop
inc
sbb
rcrb
in
jns
or
xchg
adc
dec
dec
ret
ret
jmp
add
inc
mov
das
xchg
test
pop
cli
movsb
es
bound
sarl
cmpsl
outsl
xchg
sbb
ror
rcrb
ret
mov
lret
insl
lods
push
jbe
rcrl
push
or
rcl
rorb
mov
dec
jg
insl
cwtl
jo
and
xchg
mov
push
cmpl
mov
les
jo
adc
pop
mov
xchg
cld
mov
mov
pop
test
loop
mov
or
scas
mov
pop
movsb
lea
inc
lret
mov
xchg
lock
pop
out
arpl
sarb
mov
jp
add
xchg
mov
sub
and
call
sub
or
sub
dec
into
xchg
insl
inc
add
adc
or
test
movsb
lock
jmp
mov
inc
loope
ffreep
enter
out
sti
jo
shll
adc
int3
push
shlb
das
rorb
mov
out
mov
xorb
dec
int3
shlb
sub
out
lods
ljmp
mov
push
sahf
adc
loope
scas
mov
js
push
out
push
in
popf
pop
add
sbb
adc
addr16
pop
outsl
or
addl
add
or
sub
fsubp
sub
inc
pop
stos
or
jnp
mov
jno
fisubrs
imul
cld
mov
cld
lcall
and
mov
and
clc
mov
mov
jmp
decb
push
add
stc
or
xchg
or
add
shll
sub
jl
xor
adc
jecxz
adc
hlt
add
inc
jno
jns
push
inc
lahf
icebp
and
in
push
jae
fbstp
clc
mov
jge
clc
push
inc
mov
addl
xor
cmpsb
js
scas
addb
xchg
aam
ret
add
inc
pop
push
lock
insl
sbbb
arpl
inc
add
popa
decl
stos
ds
push
fwait
push
fwait
xchg
sbb
rclb
cmp
sub
sub
mov
adc
ja
and
mov
fcmovb
pop
in
decl
add
cwtl
xorl
rcll
cld
test
out
out
pop
inc
mov
lods
outsl
outsb
aaa
or
mov
push
into
or
push
movb
xchg
aad
jo
or
pusha
adc
mov
hlt
inc
aaa
inc
or
insb
push
f2xm1
xor
jmp
dec
push
movsl
and
inc
dec
mov
rcrl
adc
loopne
rclb
fistpll
mov
dec
das
adc
ljmp
test
lea
adc
sbb
sub
xchg
pop
clc
mull
js
mov
dec
pusha
stos
clc
leave
nop
hlt
inc
ljmp
push
pop
subb
aas
pushf
les
and
scas
icebp
dec
xchg
into
sbb
cmp
cmp
cmpsb
xor
mov
scas
out
cmp
popa
addr16
cmp
xchg
pop
push
sbb
push
sbb
nop
or
in
mov
push
xchg
xchg
xchg
movsl
lcall
xor
lret
sbb
cmp
pusha
movsb
jo
inc
sbb
cmc
cmpsb
jle
inc
cmpsl
adc
es
das
decb
test
xchg
add
xor
and
rolb
xchg
lea
push
ret
jl
push
or
filds
aas
sbb
xlat
cs
orl
inc
out
push
jmp
pushf
cmp
repnz
or
insb
sub
xor
add
adc
jnp
jae
mov
pop
ljmp
pusha
out
mov
or
mov
jbe
adc
frstor
pushf
mov
adc
aas
cmp
stos
add
and
ss
aam
fadds
push
fbld
dec
inc
push
or
cmp
adc
sbb
into
adc
add
mov
mov
sbb
movsb
inc
subl
adc
mov
mov
mov
mov
push
add
jnp
daa
leave
add
sbb
aam
pop
push
xor
xor
sarb
aas
std
fadds
daa
mov
mov
sbb
repnz
mov
push
dec
cmp
outsb
cmp
add
and
pop
hlt
pop
adc
jns
stc
and
mov
and
xorps
stos
inc
or
sbb
inc
xor
xchg
lea
jle
sbb
push
fadds
pop
outsb
js
push
or
cmp
das
dec
adc
xor
adcl
loope
cwtl
xchg
mov
push
fsubrp
cmp
rcl
dec
inc
stos
mov
outsl
xor
in
rorb
mov
rolb
decb
jl
xor
iret
dec
insb
push
test
mov
and
fwait
cltd
cmp
xchg
imul
pop
and
lea
lret
sub
loope
cmp
inc
mov
cld
xchg
icebp
test
sbb
pop
inc
in
enter
or
cwtl
inc
sbb
dec
scas
push
call
push
fcomps
ret
and
adc
pop
pop
rclb
fbld
push
sbb
in
rolb
jb
sub
test
cmpsl
xchg
sbb
pop
jae
out
dec
fdivrs
push
test
push
push
push
jb
xor
or
and
das
pusha
ja
insb
insl
jecxz
ljmp
mov
push
mov
add
jnp
sahf
mov
sub
cmp
repnz
xor
dec
fistps
insl
adc
cmpsl
loop
push
adc
fidivrl
mov
pop
pop
fidivrl
push
adc
repnz
mov
dec
mov
mov
dec
loope
jmp
ljmp
call
xor
and
sub
icebp
fstp
pop
mov
jne
jae
xor
push
mov
dec
pushf
fsubs
push
push
mov
lock
dec
decl
sahf
add
stc
add
dec
mov
fs
dec
mov
push
dec
cld
hlt
add
adcb
xchg
test
push
insl
pop
add
adc
test
imul
stos
cmp
pop
out
dec
cmp
icebp
or
sbb
lahf
push
cwtl
inc
les
add
das
repnz
mov
sbb
push
in
test
pop
repz
rcrb
ds
add
cmp
xor
mov
or
push
pusha
push
xor
out
push
sub
jne
rclb
aam
in
jle
inc
shll
pushl
xchg
cmc
adc
adc
sub
insb
nop
xor
cmpb
out
popa
aas
inc
pusha
and
and
xor
or
das
or
sbb
cmp
aas
lds
adc
popl
jp
into
or
sub
pusha
lock
outsl
add
mov
jo
ss
fildll
das
xchg
pop
repnz
popf
pop
ret
and
std
dec
insl
adc
or
xor
sbb
xor
adc
mov
popa
adc
aas
pop
pop
daa
loope
cli
mov
sbbl
repz
inc
fsubs
cld
mov
sti
shrb
adc
mov
jne
pushf
jo
aad
stc
stos
adc
jnp
pop
cld
loope
cmp
and
sub
adc
fsts
pop
aam
sub
add
or
outsl
test
cmpsb
lods
xchg
jb
inc
adc
add
xchg
adc
jge
in
js
dec
hlt
mov
aas
sbb
jo
and
pop
push
inc
xlat
cmp
mov
dec
push
outsb
push
inc
push
daa
call
adc
xor
push
or
leave
push
jg
pop
add
std
jno
jns
push
mov
cltd
adc
sbb
into
cmp
call
fidivl
add
repnz
stos
cmpsb
inc
stos
pop
sbb
fwait
in
std
fcomps
pushf
jmp
mov
cs
aad
test
stc
adc
inc
sahf
mov
dec
out
lret
inc
dec
movsl
out
fsubrs
dec
pop
repnz
sbb
lret
xchg
hlt
loope
or
inc
push
ljmp
push
jle
arpl
std
test
cmpl
add
add
fistpl
mov
mov
das
js
addb
pushf
jmp
dec
sbb
movsb
inc
popa
adc
jo
aas
fidivrl
sub
sbb
pop
jle
add
pushf
inc
dec
sub
inc
aad
inc
sahf
out
cmp
imul
pop
dec
mov
mov
and
pop
icebp
and
pop
mov
mov
mov
inc
loop
test
pop
out
cwtl
xchg
xchg
mov
scas
addr16
xchg
jg
inc
pop
dec
lock
rolb
mov
scas
xor
lret
inc
js
mov
fcmovu
es
inc
popf
sbb
test
cmp
inc
add
push
inc
imul
xchg
shlb
int3
or
push
pop
icebp
push
hlt
in
add
mov
or
mov
mov
and
imul
aaa
mov
push
repnz
scas
mov
push
push
mov
adc
xor
aas
mov
pop
mov
sbb
pop
xor
adc
pop
mov
inc
call
add
and
xor
cmp
sub
enter
lock
fistl
clc
fmull
push
jg
xchg
movsb
pop
or
lock
cmp
push
lahf
pop
imul
cmp
je
shlb
fdivs
test
jp
and
stos
add
imul
inc
jno
cmp
cld
call
cmpsl
xor
popa
outsl
mov
mov
xor
test
pop
jmp
and
fcoml
and
jmp
jmp
jmp
loop
add
repnz
cmp
push
mov
and
imul
into
xor
xchg
mov
adc
mov
and
sbb
or
aaa
das
pop
movsb
rcll
roll
je
test
lea
dec
dec
add
dec
out
or
lret
sub
pusha
inc
push
adc
cmp
push
mov
mov
xchg
mov
jne
pop
dec
gs
cli
or
aas
dec
xchg
xchg
js
xchg
push
lock
sbb
repnz
add
jp
imul
std
dec
cmp
mov
adc
xchg
adc
xchg
dec
incb
xor
xchg
xor
dec
dec
jmp
out
pushl
adc
outsl
sbb
cmp
outsl
inc
mov
sub
add
rcrb
xor
add
lret
cmp
das
sbb
xor
inc
pop
inc
fs
pop
fcoml
into
pop
rorb
icebp
leave
inc
mov
add
lock
inc
clc
and
roll
add
js
lock
sbb
pop
pop
lahf
sbb
xchg
movsb
mov
decl
stos
inc
sub
fucomp
and
pop
loop
pusha
cld
mov
dec
push
or
imul
outsb
js
add
je
mov
cmpsl
inc
clc
sarl
xchg
mov
sub
jl
mov
je
les
popa
or
in
leave
cli
sbb
out
add
add
cmp
xacquire
add
sub
jle
hlt
loop
pusha
fisubl
sbb
add
add
add
or
cmp
or
adc
mov
mov
aam
repz
xlat
shlb
ds
pop
mov
iret
out
sbb
hlt
scas
add
hlt
or
lds
ficompl
sti
add
stc
out
jle
add
lods
pusha
jge
inc
mov
inc
dec
add
inc
or
push
pop
dec
push
pop
fdivrs
pop
dec
aas
sbb
pop
cmp
lahf
in
mov
ss
sbb
pop
jb
ficompl
ss
xlat
aad
or
out
sub
int3
and
push
or
adc
gs
inc
js
dec
lods
pop
insb
shll
xchg
mov
dec
mov
xor
repz
push
movsl
mov
cli
pop
jbe
ret
jecxz
fldl
pop
push
mov
sub
xchg
in
mov
pop
stos
sahf
inc
jmp
popf
or
in
cmp
add
test
in
xchg
adc
sbb
push
dec
xchg
sbb
fdivl
mov
xchg
adc
or
adc
jnp
or
fstl
sbb
dec
add
or
jp
add
and
std
aas
cli
mov
into
adc
jl
pop
xchg
cmp
push
add
inc
inc
sbb
iret
mov
dec
or
aaa
fwait
xor
insl
and
add
xor
cmpsl
aad
popf
mov
adc
jno
inc
adc
popa
les
nop
cld
xchg
jl
in
mov
out
add
popa
mov
add
pop
jl
ljmp
clc
pop
nop
out
out
push
adc
dec
mov
jge
popf
clc
jmp
push
in
bound
inc
or
adc
jno
push
cmpsl
dec
jae
mov
ret
das
jg
push
ret
add
rcll
loopne
adc
sub
shl
mov
cmp
xchg
push
mov
cmp
inc
outsl
rcl
icebp
inc
mov
repz
mov
out
aam
mov
jg
repz
icebp
mov
adc
add
addr16
mov
idivl
fcoms
sbb
xchg
xor
repnz
ret
test
mov
cltd
xor
sub
cmp
or
cmp
rclb
es
push
popf
aas
lods
and
daa
stos
leave
stc
sub
xor
adc
xor
sbb
lret
xor
adc
out
shrl
lcall
inc
jbe
fistl
std
cld
daa
xchg
mov
fs
roll
and
aad
addl
or
xchg
cmpsb
xchg
mov
add
aas
mov
jnp
push
pop
add
inc
push
imul
push
pop
pop
ljmp
sahf
add
mov
push
pop
or
mov
sub
shrb
jecxz
mov
inc
jbe
xlat
mov
pusha
add
push
repz
lahf
xchg
jae
fiadds
xor
or
cmpsb
gs
ds
fisttps
test
aam
and
or
clc
jecxz
pop
out
sub
xchg
imul
mov
gs
sarb
mov
mov
or
jecxz
outsb
add
add
lods
push
adc
add
xchg
lds
xchg
inc
push
jnp
or
mov
pmuludq
pushf
jmp
jne
dec
jb
inc
xchg
iret
js
xor
push
inc
mov
fldcw
xor
pop
loopne
sub
and
bnd
and
orl
test
pop
idivb
daa
pop
xor
cld
and
sub
dec
jmp
mov
rclb
or
xchg
or
cmp
xor
pop
insb
xchg
jno
or
aas
loopne
pop
jge
pop
sub
mov
incl
and
xchg
jle
dec
fbstp
out
sbb
bound
ret
stos
or
mov
lods
xchg
push
nop
lcall
xchg
inc
mov
insb
scas
add
push
adc
mov
push
out
inc
hlt
dec
xchg
xor
dec
cmpsb
ja
aam
xor
xchg
xlat
push
dec
mov
stc
ljmp
nop
inc
mov
std
out
repnz
inc
out
dec
pusha
lods
adc
orb
loopne
movsb
dec
push
xor
nop
cmp
xchg
mov
shrb
cmpsb
jno
nop
xor
pop
jnp
xchg
and
sub
cmp
and
adc
cli
incb
dec
xor
add
add
fldt
test
rol
push
loop
adc
and
cmpsb
mov
lds
cmp
or
cmc
mov
or
lcall
rolb
pop
es
dec
lea
test
repz
add
jl
push
mov
jns
push
pop
gs
frstor
push
push
push
imul
clc
sbb
sarl
in
mov
push
add
push
les
lock
pop
outsl
add
add
and
mov
push
test
mov
jecxz
add
nop
dec
sbbb
lcall
add
or
ja
movsb
adcl
jo
ret
pusha
sub
sbb
mov
xorb
iret
cmp
cmp
mov
imul
xor
cmp
pop
mov
push
movsb
incl
mov
adc
lds
xlat
in
jb
cmp
adc
mov
jecxz
dec
push
scas
sbb
outsl
ret
xor
sahf
mov
sub
mov
lcall
lods
mov
insl
pop
lods
jne
xchg
add
adc
icebp
push
lea
pop
mov
lret
xchg
mov
inc
cmp
aas
les
arpl
das
test
roll
aas
push
or
jl
aam
ret
shll
sub
sbb
test
xchg
push
dec
pop
pop
lea
jg
mov
pop
std
jbe
rclb
out
lret
jl
out
mov
ret
mov
fldenv
push
cli
adcb
xchg
mov
push
cmp
add
mov
ds
jae
add
mov
mov
in
jl
icebp
xchg
pop
ljmp
pop
into
rclb
cmpsb
stos
fcoms
inc
rorl
add
cld
loop
jno
fistpll
dec
fmull
leave
add
int
push
adc
lds
or
mov
rorb
lahf
cmpl
shll
bound
jo
mov
mov
aam
add
sbb
cwtl
push
lea
xlat
cld
lret
mov
xor
inc
les
incb
cld
pop
push
xchg
dec
push
inc
pusha
cmp
arpl
aas
sbb
in
popf
xor
and
cmp
lock
add
fisubs
push
jo
mov
mov
je
jmp
in
incl
ret
in
les
ljmp
enter
dec
ret
sub
fisttps
or
push
or
jle
add
pusha
scas
out
push
pop
sbb
or
enter
lods
mov
pop
and
sbb
push
fistps
mov
icebp
or
xor
in
cmc
jae
lock
lahf
movsl
shlb
sbb
aaa
cli
gs
mov
aaa
cmp
ror
xchg
sub
and
cmpsb
inc
xor
mov
inc
pop
push
leave
xchg
loopne
mov
sahf
rorl
imul
mov
fs
insb
stos
push
lret
enter
test
dec
loope
jbe
dec
daa
das
je
loopne
ret
xor
xchg
mov
imul
cmp
dec
repnz
mov
in
cs
rcrb
xchg
in
jo
icebp
sbb
add
loopne
repz
mov
loope
lahf
mov
xchg
or
ds
dec
push
or
mov
mov
sub
aaa
insl
mov
fistps
xor
mov
jge
stos
cmp
push
jmp
ret
addb
adc
roll
enter
mov
ds
aad
mov
dec
push
pop
sub
jb
std
cmp
cmc
sub
cmp
adc
cld
push
in
mov
adcb
push
fildll
and
stos
xchg
lock
sahf
xchg
scas
push
out
add
adc
jns
mov
xor
pop
clc
jecxz
add
outsl
push
dec
cmp
cld
incl
fisubl
out
add
sub
mov
orb
cmp
pushf
iret
pop
push
dec
xchg
inc
push
sbb
push
mov
xchg
int
dec
push
and
cmpsl
adc
adc
inc
loope
sbb
xchg
fisubrl
imul
lods
dec
push
mov
push
std
mov
push
pop
push
cmp
pop
inc
out
sahf
sbb
add
pop
fs
stc
mov
jmp
xor
jmp
fstp
repnz
jo
mov
add
pop
ss
das
xor
repz
sbbb
popf
sbb
repnz
xor
sub
out
inc
popa
rorl
aaa
or
mov
test
sbb
mov
jecxz
mov
call
xor
push
push
imul
movb
pushl
call
int3
push
ja
jg
xchg
cwtl
sub
dec
in
fsubrs
lahf
cmc
fistps
push
sub
xor
push
ljmp
loope
jns
inc
dec
push
sbb
push
dec
cmp
pop
repz
outsb
xchg
or
inc
add
outsb
dec
mov
cmpl
lretw
xchg
push
jmp
test
roll
push
mov
dec
mov
ja
push
stc
aas
les
add
push
scas
mov
inc
inc
imul
pop
mov
add
sar
decl
movb
jnp
and
mov
cmp
pushl
pop
inc
fisubs
push
jbe
push
and
pusha
das
sbb
les
mov
into
fs
adc
pusha
ljmp
jne
jbe
push
mov
cli
pop
imulb
mov
mov
into
popa
lods
enter
fs
mov
clc
fcoml
xchg
pop
scas
fadds
inc
scas
ret
mov
mov
push
push
inc
fs
loopne
or
test
push
sar
jmp
cmpsl
and
jg
notl
in
inc
mov
mov
stos
pop
imul
add
push
or
fwait
and
sbb
out
enter
pusha
inc
push
mov
mov
call
push
xchg
mov
push
dec
adc
lcall
cli
pop
dec
inc
ret
or
xchg
pop
xlat
jae
pusha
jmp
pop
mov
xchg
enter
cld
add
aam
fcomps
test
lds
jp
adc
aam
lock
movsb
dec
in
dec
dec
lock
adc
addb
adc
pop
cli
or
mov
addr16
js
pop
in
lods
adc
sbbl
or
and
inc
pop
fld
rolb
std
movsb
rorb
aas
adc
sbb
mov
add
aas
or
gs
movsl
iret
decl
lret
pop
popa
pop
lret
fbld
call
cmpl
incl
lret
sbb
repz
sub
insl
pop
dec
sub
ds
mov
call
add
lahf
xor
loopne
mov
aam
dec
push
cwtl
cmp
or
add
ljmp
ret
mov
iret
adc
shrb
clc
add
and
mov
xor
add
pop
clc
movl
incl
mov
push
enter
inc
aam
mov
xchg
sbb
aas
mov
jg
pop
dec
jg
ss
or
les
jb
xchg
test
test
std
sahf
nop
mov
stos
call
inc
insb
pop
lea
mov
mov
sbb
or
mov
xor
add
ret
cld
lahf
subl
loopne
mov
adc
test
fnstsw
add
inc
pop
xchg
sbb
jecxz
fistpll
out
in
loope
call
in
pop
mov
xchg
ret
sub
push
fldcw
mov
push
adc
jp
push
and
sarl
push
sbb
cltd
in
ljmp
loopne
ss
mov
or
xchg
fsts
adc
dec
ret
sub
shrl
add
pop
xchg
cmc
aas
test
add
loopne
inc
add
movzwl
imul
inc
pop
in
cmp
add
inc
repnz
dec
ret
adcb
adc
inc
aas
or
push
add
insb
xchg
les
cmp
enter
out
inc
mov
add
and
scas
inc
insb
mov
jle
sub
decl
and
push
test
mov
mov
mov
pop
cmp
mov
ja
and
push
cmp
bound
idivl
inc
das
test
mov
lcall
sarl
pmulhw
push
mov
jp
rcl
sbb
incl
popa
repz
xchg
xchg
xor
shl
dec
jb
inc
push
dec
push
sbb
incb
jg
xlat
dec
dec
repz
jge
xchg
pop
xlat
test
mov
cld
push
xchg
push
daa
and
jle
je
daa
out
in
or
es
sbb
loope
sbb
icebp
jg
push
sub
mov
sub
std
rcll
adc
pop
jo
xchg
ljmp
sar
les
inc
outsl
icebp
push
or
movsl
sbb
jle
inc
dec
jb
movsb
mov
jae
cmp
fists
inc
jecxz
addb
or
inc
and
mov
and
or
pop
hlt
lea
nop
jae
mov
dec
scas
rcl
out
sub
das
or
push
fbstp
and
mov
jp
add
jg
lods
cmp
decl
xchg
imul
sbb
lcall
inc
pop
iret
sarb
jecxz
dec
test
icebp
cs
je
dec
push
push
in
pop
cld
xchg
jmp
pop
inc
sti
stos
pusha
dec
inc
jl
adc
gs
pop
jle
jmp
xchg
sbb
nop
lock
sub
jno
js
ja
arpl
sub
ljmp
insb
xor
inc
les
mov
lahf
mov
cmp
cwtl
jg
movd
add
push
lods
jl
dec
and
jns
ror
incl
cmp
adc
icebp
mov
test
subb
dec
inc
push
xchg
and
xchg
incl
fisttps
cmp
mov
adc
push
fcmovne
pop
cmp
jg
outsl
sbb
sarl
push
out
jge
insl
lcall
rclb
rolb
xchg
stc
jmp
push
daa
loope
jmp
jo
add
add
imul
xor
gs
cs
mov
push
scas
xor
mov
and
inc
push
ret
clc
jnp
test
mov
mov
push
cmp
mov
ss
les
inc
loop
sarl
push
pushf
cmpsb
mov
mov
popa
cltd
cs
je
sbbb
mov
or
mov
or
fnstcw
adc
inc
or
mov
std
xor
in
cli
popf
sarb
scas
jae
jmp
and
hlt
rolb
mov
incl
xchg
hlt
and
sub
iret
sbb
jle
cmp
int3
jg
or
rorb
loopne
arpl
sbb
cli
dec
ljmp
mov
sub
xlat
mov
ljmp
sbb
ret
add
fwait
push
add
shl
movl
mov
es
stc
jnp
mov
mov
pop
ret
push
sub
push
je
inc
cld
xor
aaa
adc
in
out
xlat
xor
scas
cld
lock
or
and
es
add
jg
shll
incl
or
xadd
dec
aam
mov
add
into
pop
das
es
insl
dec
xchg
jns
pop
push
cli
lock
cld
incl
arpl
adc
pop
jae
clc
lahf
mov
out
pushf
push
mov
inc
cld
aaa
cltd
shr
cmpsl
pop
aaa
add
add
mov
popf
test
push
ret
sub
shrl
mov
aaa
mov
movsl
data16
inc
in
push
jg
out
cmpsb
and
int3
inc
and
or
inc
or
jecxz
sub
lds
cmpsb
jge
ret
mov
scas
xchg
fistps
fwait
add
lret
addr16
pop
gs
mov
push
clc
jno
mov
aad
popf
lahf
and
js
cmp
out
jno
aad
sub
cli
fcoml
jg
loopne
add
and
mov
dec
mov
out
dec
fcmovnb
incl
inc
add
inc
pop
pop
adc
add
cmp
nopl
das
or
int
mulb
xchg
adcb
add
inc
pop
daa
test
sub
pop
add
add
inc
outsb
push
sti
ja
dec
lea
repnz
mov
lahf
adc
inc
lcall
fildl
jle
inc
inc
insb
xchg
mov
aas
ja
les
push
mov
jmp
subl
jbe
leave
sarl
jmp
cmp
out
ficoml
xchg
adc
scas
cmpl
inc
or
mov
jmp
and
dec
cli
sub
ljmp
mov
pop
scas
fcompl
out
jle
filds
or
or
leave
cmp
pop
jb
push
jg
fistpll
loope
or
xchg
call
jae
outsb
ss
dec
lret
jp
cmp
mov
cmpsl
and
jns
sub
stos
push
cld
xchg
daa
xchg
js
mov
xchg
and
jle
add
push
lret
out
inc
mov
add
add
ss
data16
dec
mov
adc
inc
inc
sub
ret
aas
lahf
pop
out
cwtl
inc
push
movsl
mov
cltd
cmp
cmc
mov
mov
or
adc
mov
jg
cmc
and
dec
adc
adc
jl
xchg
adc
add
mov
pop
inc
in
xchg
xor
dec
js
dec
sub
mov
stos
addb
inc
scas
push
cmpl
lea
loopne
and
and
popf
int
aad
push
adc
incl
pop
mov
out
mov
xor
sti
inc
jne
scas
adc
jg
roll
je
pop
fwait
mov
popf
in
packuswb
mov
rcl
sar
jmp
ret
mov
enter
cmp
pop
cwtl
rclb
insb
mov
adcb
cmp
hlt
dec
and
mov
add
or
js
inc
pop
mov
inc
push
clc
inc
sub
sub
pusha
push
jmp
jl
inc
js
and
sbb
inc
or
mov
fisttpl
inc
xchg
sub
shll
push
out
xor
fwait
ds
call
dec
jns
popa
xor
add
shl
je
popf
push
mov
lea
jge
ljmp
js
inc
xchg
mov
ljmp
je
xor
and
test
xor
cmpsb
lock
js
out
fidivrl
or
push
orb
lahf
jno
mov
push
and
mov
pop
push
or
sub
or
pushl
arpl
mov
pop
adc
movsb
mov
mov
clc
jbe
xchg
pop
aam
sbb
inc
sub
jg
imul
or
add
dec
ret
sub
mov
pop
sub
xchg
in
cmpsb
dec
pusha
push
sbb
mov
xchg
xchg
scas
clc
pusha
icebp
cli
addl
aad
or
sbb
mov
lds
pop
and
cli
sub
lret
push
xchg
ds
add
mov
out
or
cmpsl
xor
sub
xor
sub
cli
imul
jne
adc
pop
ja
decl
xchg
add
xchg
inc
xor
mov
bound
ret
dec
cmp
cli
dec
js
push
inc
decl
std
out
adc
movsb
pushf
js
xchg
mov
sbb
or
loop
lcall
adc
call
sti
std
shrl
loop
mov
ret
or
mov
add
lods
mov
shrl
mov
jb
les
lret
out
mov
js
add
stos
ror
imul
inc
std
lea
pop
sbb
cmp
cld
and
push
jmp
loope
enter
sbb
sub
cmp
test
enter
add
xchg
outsl
js
xlat
pop
sahf
cmp
loopne
fidivs
or
and
bound
mov
js
jp
adc
inc
dec
paddd
movsb
xlat
xor
push
iret
decl
ljmp
clc
data16
xor
cwtl
adc
xchg
clc
add
mov
faddl
test
mov
stos
mov
sti
mov
shll
push
shrl
ficomps
jae
clc
jb
add
sarl
ss
fnop
cmc
or
xadd
push
cmpsb
outsb
leave
aaa
orl
push
cmc
jg
lock
scas
cwtl
mov
fwait
or
pop
ljmp
adc
test
dec
in
ret
xchg
andb
xor
loop
add
sbb
cltd
mov
repnz
and
imul
dec
push
sub
adc
repnz
orb
sbb
addl
add
pop
jne
pop
push
aaa
mov
sbbb
cmp
out
mov
sbb
fimull
xchg
add
pusha
and
add
push
xchg
iret
out
and
ljmp
inc
in
jns
out
les
mov
pop
jnp
rolb
mov
and
mov
xchg
rolb
cwtl
mov
ss
inc
xchg
enter
xor
and
xor
xchg
push
dec
mov
mov
mov
jg
pop
sarb
add
xchg
add
enter
and
mov
test
xlat
int
or
mov
loopne
xor
xchg
mov
xchg
leave
in
or
mov
add
pushf
xor
pop
add
push
pop
out
dec
xchg
xchg
bound
cmp
xchg
add
sbbl
mov
imull
pop
sbb
dec
push
jno
dec
hlt
jle
cltd
push
mov
inc
or
daa
loopne
cmc
mov
shr
rclb
push
push
and
jns
clc
add
icebp
or
mov
add
add
xchg
xchg
leave
stos
add
adc
test
cli
sbb
and
push
push
lock
add
sub
push
jno
test
or
loopne
insb
je
adc
xchg
push
cwtl
sbb
iret
dec
outsl
or
xor
shlb
icebp
xlat
push
aad
je
fimull
xchg
adc
decl
pop
dec
adc
xchg
or
and
inc
orl
mov
in
dec
mov
jp
clc
push
inc
add
jbe
adc
add
in
add
outsl
sub
sub
js
pop
fwait
lock
hlt
push
and
or
dec
in
mov
pop
mov
xchg
sar
orb
repnz
subl
mov
push
fisubrs
data16
or
adc
jp
stos
inc
orb
loope
push
outsb
or
cmp
in
ljmp
sbb
nop
and
pop
enter
into
cmp
in
lock
loope
pop
enter
jb
push
mov
shll
sub
jnp
push
lods
jle
fidivs
jns
push
push
ficomps
adc
dec
int3
inc
orl
cld
stos
xchg
add
mov
or
sar
dec
in
adc
sbb
mov
mov
add
sub
cli
aad
sti
push
push
push
or
fildl
outsl
clc
shlb
das
nop
mov
dec
popa
pop
out
add
les
lods
sbb
cwtl
in
xchg
or
cmp
and
fdivrs
pop
in
es
orl
push
sbb
push
add
jg
xor
testb
cmp
les
outsl
sub
test
adc
inc
call
gs
mov
je
jns
loope
pusha
mov
cmp
out
sub
bnd
nop
sbb
mov
pop
subl
out
or
cmp
cmp
cmpsl
and
pusha
rolb
cmp
push
aas
adc
sub
xchg
pop
mov
std
ret
jg
mov
popa
adc
frstpm(287
cmp
xchg
mov
enter
adc
xchg
dec
jno
mov
mov
xor
mov
xchg
das
int3
inc
inc
cmp
lds
dec
flds
gs
xor
mov
lea
hlt
data16
sub
inc
cmp
mov
push
and
xchg
jge
loop
sbb
add
add
inc
rorb
shll
mov
jle
sub
int
js
js
imul
mov
lahf
or
sbbl
xchg
push
sub
lds
int
nop
mov
dec
xor
jbe
popa
mov
jnp
js
in
jmp
adc
mov
push
dec
mov
cmp
outsl
dec
jno
jp
rolb
popf
pop
adc
fnstcw
push
test
lret
fsubrl
or
dec
pop
adc
mov
mov
ret
pushf
push
xchg
push
cwtl
lea
fnstenv
adc
out
pop
jno
adc
push
inc
stc
ljmp
dec
mov
lock
aaa
popa
xchg
mov
clc
sbb
lock
lock
jle
lahf
mull
push
outsl
sahf
inc
shlb
add
cmpsb
inc
lahf
mov
stos
inc
cmp
in
enter
pop
mov
aas
sbb
jo
jl
adc
push
es
test
or
mov
mov
loopne
std
pop
lock
lds
jge
stos
push
xor
loope
mov
push
dec
inc
loope
negb
movl
popa
sbb
sub
enter
rcr
cwtl
inc
push
lret
xor
xor
push
shl
adc
loope
pusha
insb
jo
mov
lods
rcl
xor
add
or
ffree
mov
divl
xchg
sbb
pop
xor
pop
lret
or
jge
fwait
push
es
popl
mov
subl
add
cltd
test
les
aad
adc
fsubl
shll
cmp
movsb
rcrb
and
insl
sub
mov
push
mov
push
dec
push
stc
jge
lret
push
shrb
cmp
or
sbb
popa
lods
cmp
xchg
dec
add
mov
add
lahf
mov
jp
scas
pop
sub
xor
dec
rorb
inc
and
or
cmp
outsb
add
sarb
pop
out
mov
or
repz
sbb
and
popa
mov
subb
push
movb
push
jle
lahf
roll
fsubp
push
jle
jnp
pusha
push
xor
jbe
jae
sar
loop
jmp
cmp
fbld
jno
sbb
lds
ja
jne
loop
jl
mov
mov
xchg
iret
fwait
mov
sbb
icebp
addl
sti
add
xchg
lcall
adc
inc
in
mov
cmp
shr
jmp
es
adc
outsb
outsb
sbb
icebp
rorb
shll
ret
mov
outsl
mov
ss
or
adc
mov
lods
sbb
and
pop
pop
cmp
push
movsl
out
ret
dec
adc
xchg
push
sbb
imul
fdivl
jmp
test
or
rorl
add
mov
add
cld
inc
pop
mov
cld
and
mov
shll
in
mov
scas
insl
out
mov
xchg
add
sar
rolb
jp
mov
stos
sbb
leave
and
scas
jecxz
hlt
clc
faddl
daa
mov
xchg
dec
inc
dec
movsb
dec
push
cwtl
icebp
out
push
fldcw
inc
mov
pop
int3
addr16
adc
sub
mov
hlt
testl
out
xchg
push
push
xchg
loope
mov
filds
mov
cmc
pop
cwtl
or
adc
popf
adc
test
lock
dec
aam
sbb
add
adc
mov
adc
or
cs
add
add
mov
cmpsb
add
inc
and
or
ret
aad
fs
inc
mov
subb
incl
leave
inc
push
sub
push
inc
inc
ljmp
push
push
sub
add
inc
stos
in
pop
jne
test
fwait
addb
pop
xchg
imul
test
fdivrs
icebp
bound
dec
enter
xchg
sub
push
movsb
imull
icebp
jb
hlt
scas
or
add
loop
sar
imul
push
out
cmp
enter
out
shll
icebp
lea
stc
inc
lea
xchg
push
andb
scas
cmc
sarl
out
cmp
dec
add
push
adc
mov
inc
clc
jo
rcrl
xchg
clc
stos
repz
fs
mov
pop
jns
scas
daa
lods
sub
mov
xor
jno
rolb
imul
inc
rcll
inc
pop
roll
jecxz
push
cmp
vxorps
xchg
mov
out
jl
or
mov
inc
mov
push
inc
mov
outsl
les
mov
sub
or
add
push
inc
mov
cs
es
iret
xor
loope
push
mov
mov
decb
nop
mov
outsl
ret
add
fs
in
mov
int3
inc
nop
inc
rolb
mov
daa
popa
jp
mov
dec
icebp
ss
cmp
lds
pop
mov
loopne
es
pop
in
icebp
dec
fistpl
dec
dec
inc
aaa
xchg
lods
inc
mov
adc
mov
popf
outsl
xor
adc
sarl
push
test
popf
into
pop
mov
sbb
xor
jae
pop
jo
push
gs
push
bound
dec
mov
jo
pop
fwait
push
pushl
sbb
ss
add
fisttpll
fcmovbe
inc
cmp
das
inc
stos
leave
out
add
inc
and
sbb
add
xchg
dec
sub
ret
cs
mov
leave
pop
aam
lods
xor
mov
popl
pop
repnz
and
mov
mov
dec
out
aas
movsb
lock
movsb
mov
dec
ljmp
sbb
sub
jae
xchg
push
push
test
cld
shl
gs
sarl
xchg
jl
int
push
sbb
les
dec
sbb
mov
cs
lds
adc
push
stc
jecxz
inc
xchg
inc
cld
cmpsl
sub
jmp
lds
push
imul
imul
stc
sub
push
and
xor
and
or
dec
cmpsb
hlt
test
sarl
mov
flds
push
add
sub
or
mov
and
mov
lods
addb
and
cmp
xlat
in
add
stc
test
xor
sbb
mov
mov
push
push
loope
xor
loopne
jmp
fs
fimuls
int
xor
and
test
addl
mov
xor
mov
pop
clc
int
jmp
lahf
cs
sbb
js
or
popl
je
add
add
xchg
aaa
jnp
incl
movsb
push
sbb
pop
sbb
inc
popf
ja
sbb
mov
push
ljmp
push
push
add
jne
dec
adc
xor
in
or
les
mov
addl
or
daa
dec
ljmp
mov
lahf
clc
test
and
orb
cmp
fisubrs
mov
hlt
cld
jmp
or
inc
pusha
or
cli
mov
xchg
pop
sbb
dec
lcall
cmp
mov
leave
loopne
pop
or
repz
repz
mov
pop
sub
fwait
shll
mov
adc
sbb
sub
das
dec
rcrb
fldcw
scas
test
inc
mov
push
xlat
xchg
rolb
jb
pop
xchg
enter
scas
sarb
lds
std
push
sbb
mov
pop
xor
lods
push
daa
mov
push
rclb
mov
ja
mov
sbb
shr
dec
ja
in
cmp
push
dec
inc
add
mov
ficompl
sbb
das
rolb
lret
inc
adc
loope
stos
cmp
divl
jne
fldt
ja
mov
add
xorb
outsb
xchg
cld
push
push
dec
fwait
sbb
fcompl
mov
jno
pop
pop
outsb
popf
sub
imul
sbbb
add
jecxz
clc
cli
cmp
pop
mov
stos
push
push
dec
and
xor
sbb
sbbb
xchg
cmpsl
ja
xrelease
test
mov
es
cmp
push
fbld
ret
mov
lock
adc
sub
adc
mov
xchg
or
xchg
andb
cmp
mov
mov
enter
mov
jno
sbb
mov
movsb
jb
insb
mov
les
mov
aaa
pop
jns
mov
loope
dec
cmp
lea
jl
push
imul
sub
mov
xchg
cmpsl
sbbl
insl
int3
adc
test
in
push
pop
fdivr
loope
out
ljmp
mov
adc
out
outsb
jo
inc
mov
movsb
mov
loope
insb
xchg
inc
add
insb
push
out
or
cmp
testb
and
repz
insb
push
sbb
sahf
dec
mov
scas
push
sbb
je
push
mov
icebp
mov
sbb
jae
and
add
int
popa
xchg
dec
std
mov
dec
xchg
cmp
jno
nop
loope
xchg
test
or
addl
cmp
add
lret
mov
sti
sbb
add
push
mov
xchg
lock
cld
pop
and
sub
hlt
dec
inc
add
repz
adc
into
add
dec
pop
test
out
fistps
xor
enter
mov
aas
dec
mov
xor
cmp
jno
js
add
inc
repz
push
add
mov
adc
sarb
adc
jo
jne
mov
jmp
ljmp
int
add
ljmp
cmpsb
sbb
repz
mov
lret
stos
stos
fmul
jmp
mov
or
cwtl
fildl
out
das
icebp
icebp
push
and
and
adc
inc
or
int3
loop
jnp
add
pop
fcomi
das
sbb
and
jae
sub
mov
sbb
insb
or
notb
in
inc
pusha
les
add
xchg
add
sbb
add
pusha
sbb
xchg
or
testb
push
pop
push
aad
hlt
xchg
dec
cltd
cmp
pop
hlt
cs
xor
jle
xor
ret
imul
xchg
xchg
push
sbb
fidivl
inc
xor
ret
addr16
decb
call
xchg
mov
stc
push
icebp
lahf
lret
data16
adc
scas
rolb
in
arpl
dec
jno
mov
lahf
mov
mov
shlb
adc
push
pop
shll
inc
fiadds
cmp
mov
addr16
fwait
sub
std
call
inc
mov
icebp
lret
mov
aas
mov
inc
lods
xchg
pop
pop
sbb
bound
lds
pushf
sldt
jo
movsb
pop
mov
ret
jl
mov
lcall
lock
push
hlt
aas
loop
or
int
and
ret
jg
sarl
sub
subl
xchg
xor
mov
mov
insb
ja
test
jne
add
xchg
push
movsl
jecxz
lods
cld
cld
sub
les
mov
pop
inc
sbb
mov
push
inc
pop
lea
add
pop
ljmp
outsl
jge
push
mov
lcall
nop
jp
mov
xor
nop
ret
mov
push
inc
arpl
ljmp
mov
pop
mov
jg
sarb
test
mov
dec
inc
add
inc
data16
cli
add
ds
dec
cs
sub
stos
pop
pop
in
xlat
mov
xor
lods
push
sbb
pop
xor
sbb
idivl
push
jge
imul
pop
clc
jg
cmp
add
mov
add
xor
sub
mov
cmpsl
sub
xchg
jg
pop
inc
dec
xchg
push
dec
inc
lcall
inc
sub
jmp
int
into
jno
inc
testl
mov
hlt
add
mov
adc
xor
rorb
repnz
mov
jle
add
aam
jns
dec
sub
jno
sahf
incl
or
or
hlt
or
cmp
std
lret
push
xor
movl
xchg
push
sbb
aas
mov
test
mov
and
jp
rorl
imul
clc
add
sub
movsb
or
addr16
mov
into
aas
cltd
jle
jmp
lock
xchg
out
adc
adc
xchg
add
xchg
cli
inc
test
decl
sbb
pusha
adc
dec
adc
ja
sar
lcall
dec
nop
xor
aam
add
call
jno
scas
xor
in
mov
adc
std
stc
insb
outsl
dec
rcll
rcr
inc
sbb
in
pop
ds
arpl
xor
daa
lahf
cld
decl
mov
dec
or
add
inc
jmp
outsl
add
or
adcb
or
test
cs
jg
adc
xchg
int3
jbe
stc
xor
pop
push
mov
xor
insb
or
loop
or
xor
shlb
sahf
out
add
cmp
dec
enter
add
arpl
cmpsb
xchg
xchg
mov
je
mov
fsubs
jl
mov
insl
jne
or
addl
and
pop
and
inc
add
cmp
cs
mov
xchg
xor
stos
stc
test
int3
ja
pmaddwd
jl
insb
add
add
push
call
les
xchg
xchg
cmp
jge
sbb
cli
fisubrs
lcall
cmp
xchg
xchg
pushf
loopne
adc
xchg
arpl
out
mov
cmp
pop
xchg
incl
leave
mov
lcall
into
clc
jecxz
out
cli
pop
call
cld
xchg
mov
lcall
pushf
fwait
jbe
aam
push
ljmp
or
stos
and
xor
jg
pushf
inc
xor
xor
inc
mov
mov
cmp
arpl
xchg
add
hlt
xchg
mov
dec
fdiv
mov
dec
add
mov
imul
mov
sbb
adc
jmp
loop
ljmp
add
sti
push
or
adc
and
inc
test
lds
pop
jecxz
push
and
xlat
push
inc
inc
or
es
ss
push
cld
aas
mov
mov
xor
out
xor
pop
je
sbb
scas
push
add
sbb
das
jbe
shrl
or
mov
or
iret
inc
out
pop
xorl
jo
xor
xchg
movsl
fnsave
cmc
adc
sbb
psrlw
inc
sub
sbb
scas
fneni(8087
inc
aas
nop
mov
dec
cltd
mov
outsb
call
cmc
test
and
es
stos
inc
sbb
push
stos
and
or
adc
rcrb
orb
mov
xor
fidivrs
into
sub
lcall
jp
adc
xor
jg
lret
xorl
shll
xlat
roll
add
sbb
popa
addr16
aam
flds
incl
test
lds
lods
idiv
cs
popa
mov
push
out
stc
mov
cmp
cmc
gs
jmp
xor
iret
mov
mov
cltd
and
dec
js
dec
adc
mov
xchg
cmp
xlat
ds
and
mov
int3
aas
lock
out
lea
inc
arpl
pusha
xor
dec
out
imul
shl
inc
jecxz
and
xor
mov
jl
outsl
lret
mov
mov
add
xchg
xchg
cld
inc
or
sub
or
pop
sbb
pop
push
decl
xchg
int
inc
stos
imull
push
lea
mov
jne
cmpsb
cmp
nop
jg
pop
dec
add
cmp
pop
jmp
shll
jmp
data16
inc
dec
addl
dec
std
push
shl
mov
arpl
sbb
jecxz
xchg
xchg
shrl
fwait
out
sbb
repnz
adc
sbb
adc
and
jg
inc
fidivl
psubusw
mov
sahf
cmp
ja
mov
ljmp
lock
cmp
pop
hlt
aaa
cmp
add
incl
mov
cmp
js
pop
pusha
shl
dec
pusha
ljmp
call
fwait
and
insb
fwait
mov
sti
int
adc
add
shrb
jg
ds
cld
cld
pop
mov
imul
sbb
fbstp
inc
ret
mov
adc
in
ret
scas
mov
outsb
cmpsb
fsubl
xchg
jb
push
repnz
mov
les
js
mov
sbb
adc
mov
repz
mov
adc
es
adc
push
es
call
mov
lahf
aaa
mov
icebp
pop
xor
aam
and
lahf
jae
sbb
xchg
xchg
les
cmp
xchg
adcb
rclb
mov
jp
in
outsb
dec
arpl
jmp
je
xor
leave
sahf
inc
int
fs
movsl
jle
pop
sti
pop
or
push
xor
outsl
mov
call
inc
gs
add
push
jo
pop
xchg
out
aaa
xchg
sbb
inc
call
add
scas
jg
xor
mov
imul
aaa
jecxz
push
cmp
loope
adc
mov
cmc
jbe
mov
lret
fwait
adc
cld
and
clc
outsl
push
or
push
unpcklps
sub
stos
rolb
clc
mov
add
xor
cld
jmp
ret
lods
xchg
jo
enter
scas
repnz
scas
inc
call
icebp
or
mov
pusha
sub
xchg
movsl
or
or
shl
sbb
xor
pop
mov
mov
into
fmul
push
inc
aam
insb
clc
xchg
aad
jecxz
lea
pop
push
dec
std
das
add
in
icebp
outsl
dec
cli
sahf
stos
sbbl
sub
mov
or
rolb
cmp
int3
pop
stos
mov
jge
dec
imul
push
mov
xchg
cmp
adc
insb
mov
push
sub
sbbl
mov
inc
cs
xchg
out
xchg
popf
mov
add
movsb
hlt
mov
out
nop
pop
jne
popa
in
orl
std
outsl
popf
dec
lds
mov
pop
loop
sbb
pop
add
or
std
jl
adc
stos
idivb
fbstp
push
sub
mov
mov
xor
push
jle
hlt
loope
mov
jle
aaa
call
xchg
xchg
cmpl
subl
add
pop
lock
out
pop
test
rorb
loop
dec
mov
dec
mov
push
js
dec
in
push
push
xor
iret
scas
lahf
sub
popf
xor
lea
aam
in
jecxz
mov
aaa
test
push
cmp
sub
pop
lahf
push
pusha
and
les
fwait
ss
mov
lds
or
aad
or
addr16
push
mov
dec
nop
mov
sub
lcall
jecxz
call
shrl
cmp
test
mov
std
roll
mov
or
repnz
jge
and
add
int3
lods
ljmp
add
lods
xchg
loopne
or
sub
mov
ljmp
lods
lods
pusha
dec
adc
inc
or
in
push
sub
sub
cwtl
push
cmpsl
add
fisubs
lahf
and
jno
cli
mov
or
xchg
lret
jle
outsl
inc
pushl
inc
clc
sahf
mov
and
notb
push
daa
push
leave
ljmp
cli
shll
adc
out
or
jns
pop
les
clc
cs
dec
pop
lock
pop
adc
lret
andb
mov
popf
or
jmp
jae
mov
outsb
std
data16
adc
xor
ss
xor
mov
lret
push
adc
mov
sbb
lea
dec
cli
or
push
jb
sbb
popf
jecxz
push
imul
mov
mov
scas
popf
add
add
pop
sbb
iret
lcall
js
sbb
jae
fcoml
inc
insl
rclb
push
adc
fisttpl
mov
in
ljmp
mov
xor
xor
mov
rcrl
add
dec
push
ljmp
mov
jg
adc
lahf
fists
xchg
mov
pushl
shll
mov
pop
add
loope
aad
insl
mov
mov
mov
mov
outsb
stos
hlt
pushl
iret
pop
inc
cvtps2pd
addl
lahf
call
cli
push
mov
lret
pusha
sub
inc
sub
sbb
stos
and
inc
loopne
sub
std
ljmp
and
popf
cld
fbld
inc
add
int3
pop
in
and
call
es
pop
or
loop
cmp
std
sub
js
cmp
aam
mov
pop
xor
mov
call
lcall
sbb
cmp
mov
and
xor
faddl
mov
add
incb
sbb
out
push
lock
xchg
add
add
mov
mov
jno
mov
push
les
or
pop
fsubrl
int3
xor
mov
fmuls
jno
pop
stos
jbe
jae
lcall
dec
mov
int3
fucomp
addr16
mov
xchg
lds
stos
sar
and
cmpb
loopne
and
rcrl
mov
and
adc
subb
mov
out
mov
jg
int3
stc
push
or
mov
scas
lock
xlat
std
out
mov
mov
sahf
add
call
adc
js
fwait
jne
or
adcb
fsub
fcomp
pop
sbb
lock
cmp
jmp
rcr
mov
adc
in
xor
mov
xor
pop
cmp
jbe
shrl
mov
push
into
repz
cld
pushf
cmp
mov
mov
sbb
clc
jecxz
mov
mov
pop
sbb
loopne
mov
idivb
or
sbb
push
addb
movsb
out
mov
push
push
repnz
repz
jmp
int
aaa
nop
cli
xor
ljmp
adc
scas
jl
test
loope
xlat
mov
push
rol
cs
jp
test
jmp
or
push
cmc
pop
add
es
das
loopne
xchg
pushf
aas
clc
add
push
lahf
pusha
push
nop
jae
into
jp
call
decb
dec
cmp
ret
aaa
pushf
and
jmp
mov
ja
adc
sbb
dec
mov
ret
xor
out
mov
jae
shl
sbb
lahf
daa
aad
fsubl
addr16
es
inc
imul
mov
les
push
and
daa
repnz
or
jmp
and
ret
roll
add
ret
push
adcb
pop
inc
inc
add
cs
dec
aam
sbb
xchg
cmp
sbb
fsubs
inc
nop
sbb
imul
jle
incl
mov
dec
mov
add
fsubrs
test
mov
add
mov
push
xchg
jmp
iret
cwtl
mov
aas
adc
repnz
jg
mov
mov
mov
call
pop
loopne
mov
add
lret
push
popf
fstpt
scas
pop
sub
push
mov
xchg
inc
inc
dec
add
or
add
inc
mov
sbb
or
fstpt
sbb
jmp
xor
adc
ficompl
pop
sbb
pop
sub
and
xor
mov
or
lcall
cmp
sahf
cmp
or
les
ds
sub
or
pop
insb
std
add
mov
aas
adc
xchg
mov
das
movsl
in
add
imulb
and
sub
es
push
loopne
scas
test
loop
sub
mov
jo
adc
adc
sbb
add
sub
mov
aad
mov
mov
in
andb
cli
push
mov
mov
loop
xor
jg
pop
cmpsb
sbb
push
daa
pop
adc
sti
push
mov
xchg
cs
mov
je
popl
or
frstor
or
in
decl
push
pop
mov
jmp
mov
movsl
enter
das
pop
push
push
sbb
mov
or
pusha
imul
dec
push
push
cld
push
ret
cmpsb
fnstcw
push
out
hlt
lock
xor
cld
adc
mov
aaa
enter
add
fsubs
sub
nop
sbbb
imul
mov
dec
pop
xchg
xchg
push
ja,pn
add
call
pop
rcl
and
sub
pop
sbb
sbb
add
add
add
sub
xchg
push
bound
adc
sub
dec
push
or
push
cmp
stc
insb
aad
xchg
dec
pop
clc
inc
mov
xchg
mov
scas
pop
jne
dec
stc
das
xorb
pop
ljmp
std
out
outsb
test
sbb
lock
test
push
lret
xor
xor
and
ret
ficoms
dec
popa
push
rorl
xor
jae
adc
scas
xchg
loop
pop
in
push
fisttps
mov
jo
rdpmc
aam
xchg
push
jge
dec
fsubrl
push
daa
dec
add
pop
in
and
loop
pop
ret
pop
insb
arpl
xchg
ficoms
fwait
inc
test
cld
jg
inc
fistps
lock
mov
insb
xor
test
and
popl
lock
cwtl
in
mov
lock
nop
adc
or
pop
or
lret
in
pop
add
add
call
bnd
add
dec
mov
inc
push
push
rcl
std
clc
mov
cmp
sub
lcall
loope
and
sub
fs
pop
faddp
mov
cltd
or
cmp
je
mov
call
lcall
xchg
push
daa
and
inc
dec
fcoms
xchg
out
mov
repnz
jne
test
fsub
scas
shrb
jmp
sub
cmp
loop
and
inc
ret
loope,pn
or
test
repz
dec
cli
mov
jnp
sarl
insl
push
sbb
mov
jb
js
cmp
cltd
and
inc
and
call
inc
loope
inc
mov
inc
dec
add
and
loope
cmpsb
test
add
sub
ss
jne
mov
or
and
pop
inc
and
aam
add
pushf
cmp
jbe
jb
jne
ret
xchg
mov
leave
or
mov
mov
mov
jp
mov
or
and
imul
jl
and
inc
movl
repz
sbb
loop
sahf
je
ljmp
pop
sbb
sub
shrb
xchg
icebp
sub
test
lcall
dec
cmp
lahf
sbb
xchg
testl
cs
sub
pop
inc
mov
ss
adc
and
mov
loope
shlb
movsl
fidivrl
add
mov
inc
imul
js
int3
xor
push
jo
xor
cmp
sahf
or
inc
or
or
sub
shlb
data16
decl
imul
or
jo
jge
inc
and
pop
push
add
or
mov
dec
or
iret
add
insb
xor
shlb
adc
lods
jl
imulb
mov
ja
outsl
repz
mov
test
ss
rolb
lahf
adc
ja
cwtl
add
dec
cmp
or
xor
xor
push
mov
mov
jbe
add
movsb
inc
jecxz
push
pushf
cmp
jecxz
lcall
movsb
mov
inc
dec
mov
fdivrs
xlat
pop
mov
movl
das
std
inc
enter
add
sarb
dec
hlt
jnp
and
cli
mov
flds
pushf
pop
cld
add
and
cmp
add
cmp
aas
inc
leave
mov
cmpsb
repz
xorl
dec
iret
clc
imulb
jno
fistpl
add
cli
insb
inc
sbb
adc
pop
daa
mov
loopne
xchg
out
mov
out
scas
jne
jg
ss
je
enter
lcall
in
mov
clc
stos
inc
pop
push
jb
clc
pusha
aad
leave
push
xchg
add
out
sub
mov
sub
sbb
sahf
cmp
dec
fwait
mov
movb
movsl
mov
xor
or
pop
sti
daa
orb
pop
cmpsl
mov
lods
test
add
fcomps
shll
push
les
scas
int
js
xorb
pop
fs
shrb
pop
or
xor
add
clc
cltd
ja
add
add
sub
aam
daa
stc
stc
xchg
andb
clc
test
loopne
test
loope
inc
fisttpll
movsb
jg
or
adc
push
insl
inc
add
sbb
add
cmpsl
xchg
aam
or
inc
insb
icebp
add
ljmp
xor
cmp
dec
movsb
negb
cmp
pop
popf
arpl
xor
sbb
xor
push
inc
xchg
adc
or
jle
add
fisubl
inc
lahf
mov
cli
pop
loope
inc
das
bound
or
orb
mov
mov
adc
fadd
test
sub
dec
idiv
sub
push
and
loop
cmp
mov
mov
mov
daa
fisubs
jp
or
xor
shr
mov
loopne
adc
out
jo
adc
fs
mov
mov
mov
mov
notb
sbb
aaa
jg
dec
jo
xchg
paddd
mov
push
sub
les
out
hlt
sbb
mov
or
sbb
and
jnp
lahf
faddl
out
lret
add
or
xchg
add
and
in
jecxz
dec
loop
cmp
xor
sbb
mov
lea
sbb
mov
mov
jmp
add
cs
test
out
xor
stos
test
mov
jecxz
loope
imul
pcmpgtd
test
xor
push
mov
fwait
xor
push
push
pop
bnd
cmp
idivl
arpl
xchg
adc
mov
push
sub
mov
lret
mov
bound
push
xor
cmc
and
xor
inc
jg
mov
mov
data16
fiaddl
packssdw
roll
ljmp
xor
add
sbbl
xor
inc
dec
ret
aaa
dec
inc
pop
std
shll
shrb
pop
sub
icebp
and
xchg
aas
icebp
out
push
nop
push
sbb
jmp
add
or
adcb
repz
pusha
xchg
dec
pushf
movups
sbb
adc
xchg
cmpsl
add
cmpsb
push
sbb
adc
out
xor
arpl
arpl
push
icebp
and
xor
orb
sub
mov
in
jl
aaa
rorb
jno
jl
push
push
leave
mov
rol
in
stos
add
daa
sub
into
bound
sbb
jl
cltd
add
sbb
ret
in
bndldx
add
mov
mov
push
cmp
mov
pop
or
xor
pop
inc
pushf
test
shl
movsb
lock
movsl
inc
push
mov
adc
sbb
sahf
imul
pusha
mov
aas
inc
cmp
mov
int3
out
sarb
mov
out
subps
jecxz
lcall
adc
add
test
inc
jns
in
cmp
dec
popf
dec
das
loop
dec
xor
cs
bswap
jmp
mov
mov
mov
movsb
add
ds
in
inc
sub
ljmp
pop
xor
daa
dec
in
rclb
test
xchg
outsb
std
push
out
pop
rorb
fidivl
dec
sub
pop
hlt
filds
xchg
rorb
pop
popf
jmp
and
lcall
add
aad
lea
ret
inc
xor
aas
inc
inc
jmp
cs
outsl
aas
and
xorb
outsb
movsl
and
mov
test
push
dec
inc
je
push
rorl
jns
fidivrs
jo
ds
xorl
lods
push
into
xchg
sbb
add
gs
dec
out
xor
cmp
adc
hlt
xor
andl
cmp
lock
ret
sbb
add
popa
mov
xchg
movb
imulb
hlt
loope
push
or
pop
mov
push
mov
inc
cmp
or
inc
dec
pusha
dec
or
or
outsb
cmp
les
jb
test
lcall
pusha
ss
jne
cmc
dec
inc
mov
scas
push
cld
mov
in
or
sub
or
xor
jp
add
js
enter
roll
ret
or
pop
push
pop
call
repnz
imul
inc
aas
xor
into
rcrb
dec
and
loop
mov
dec
or
jmp
sbb
test
rclb
mov
push
andl
or
cmp
scas
repz
inc
std
pop
clc
andl
cmpsb
lea
mov
js
test
loopne
jg
mov
xchg
jbe
cmp
lods
lret
filds
push
add
inc
sbb
js
bound
inc
fadds
test
out
aam
or
or
loope
cmp
call
xchg
adc
xchg
popl
std
incl
and
jecxz
mov
test
inc
shll
mov
daa
push
bound
or
je
push
les
and
test
jne
jb
pop
mov
sbbl
jle
testb
subl
lock
fwait
subl
xor
sub
or
ret
and
add
shlb
push
out
pop
push
mov
lret
adc
fcom
cs
mov
ret
adc
in
xchg
push
add
cmpsb
push
sbbl
lods
inc
nop
enter
or
pop
mov
movsb
dec
out
into
hlt
mov
jnp
inc
daa
into
add
pop
and
test
call
addl
lock
mov
cmp
loope
xor
lcall
cld
jmp
pop
jne
add
push
add
add
dec
cwtl
popa
dec
inc
test
mov
leave
adc
jmp
aas
mov
mov
add
incl
add
call
aas
jp
dec
shl
sbb
inc
je
sub
sub
pop
in
mov
das
cmc
pop
stc
mov
and
clc
in
sub
in
imul
lea
out
loop
sub
mov
mov
jo
mov
push
leave
xorb
xorb
das
mov
dec
or
cli
sar
mov
sarl
inc
ja
bound
jne
and
les
or
cmp
in
aam
incl
push
in
mov
fcomp
sbb
sti
and
js
repz
jb
loop
add
xor
ljmp
xor
push
cmp
jecxz
movsl
pop
popf
outsl
jo
push
mov
neg
add
xor
jo
ljmp
dec
lcall
add
ret
jae
sbb
jl
and
inc
mov
jg
push
or
xchg
inc
adcl
push
and
mov
mull
adc
mov
add
inc
pusha
cmc
xchg
cmp
sti
push
lcall
cmpsl
enter
dec
mov
dec
and
mov
jmp
xchg
push
cmpsb
sbb
adc
jecxz
test
cmp
and
inc
decl
add
and
not
icebp
lcall
pop
rol
xor
sub
aad
add
rcrl
sbbl
jns
std
fs
push
inc
push
sarl
pushf
xor
fwait
into
fsubrs
in
xchg
add
pop
test
and
xor
xchg
jle
movsb
dec
or
dec
jmp
shl
imul
shl
cs
inc
ds
rorb
jl
loopne
lock
dec
rclb
sub
cmpsb
cmpl
lds
xchg
jecxz
out
lret
dec
lods
rcrl
and
mov
test
cmp
mov
rorl
adc
rorb
incl
icebp
pop
pop
lock
ja
mov
push
adc
jne
jle
and
adc
mov
lods
loop
andl
mov
mov
out
mov
mov
add
dec
mov
add
cld
lods
cmp
xchg
adc
push
and
pop
rol
lahf
jecxz
cmc
fstpt
jmp
sti
mov
cmpsb
enter
add
cwtl
lock
push
cmp
ficompl
js
pop
in
add
xchg
pop
add
inc
lcall
pop
sub
subl
mov
sub
aam
fdivr
aad
cmp
hlt
xor
or
scas
mov
pop
xlat
adc
or
push
pop
mov
pop
jae
add
jbe
sub
sbb
fcoml
push
mov
mov
jg
inc
sbbl
inc
and
or
or
jg
and
adc
ds
aas
cld
jmp
mov
aad
in
pop
jg
cmp
xchg
stc
movsb
mov
mov
aaa
stos
and
push
imul
pop
adc
aaa
jbe
add
lcall
fisubs
jno
add
and
jge
lods
aaa
mov
popa
ficomps
sbb
mov
enter
pop
repz
lock
addb
push
notl
push
pop
jno
mov
enter
mov
cld
out
or
shl
test
push
xorb
cld
jmp
cld
inc
in
push
fsubp
pop
xor
jle
inc
or
adc
push
out
push
fadd
stos
bswap
loope
xchg
jb
loop
incl
ret
dec
jp
cltd
popa
js
jmp
lea
mov
leave
add
pushl
jp
or
or
iret
adc
nop
jbe
fwait
and
ss
inc
pushl
in
add
mov
push
sub
sbb
inc
ficompl
cmp
fs
je
aas
loope
decl
sub
test
and
addr16
fdiv
mov
loope
dec
push
inc
fwait
ljmp
or
push
je
clc
push
xlat
add
xor
inc
ljmp
aas
lock
mov
add
das
add
lods
pop
loopne
iret
addr16
jg
push
and
repnz
dec
into
lea
mov
scas
xor
in
dec
std
adc
sarl
adc
cmp
xchg
adc
mulb
adc
shrb
addr16
sti
or
rcrb
sub
fwait
pop
ds
lcall
xchg
push
fists
push
shll
pushw
repnz
call
cmpsl
mov
xchg
inc
sub
push
xchg
out
lcall
sarl
dec
faddp
cltd
pop
int
mov
add
fldenv
and
mov
mov
repnz
enter
add
icebp
test
pop
aam
pop
iret
inc
dec
xchg
jge
push
fcomps
decl
imul
and
sub
ud0
mov
cs
scas
ret
adc
test
test
repz
inc
adc
outsb
clc
pop
jg
les
sbb
pop
add
out
inc
add
pop
lods
cld
inc
ret
jns
cmp
loope
sub
xorb
sbb
push
call
pop
pop
frstor
push
jo
les
popa
jecxz
pop
add
mov
aam
aaa
insl
adc
adc
and
sub
dec
cmp
loop
gs
and
sahf
pop
mov
stc
xchg
fdivrs
shl
inc
in
sub
clc
jg
fimull
inc
pop
pop
sub
imul
or
cmp
and
sbb
scas
inc
xorl
das
pop
cmp
das
add
dec
or
icebp
xchg
push
push
pop
popa
push
clc
fcmovne
xchg
dec
test
hlt
xchg
xchg
fldenv
in
add
xchg
ja
es
rolb
and
or
in
mov
sbb
ficoml
ja
and
pusha
cmp
addr16
inc
icebp
inc
push
jl
dec
pop
daa
and
mov
jg
xor
mov
sbb
inc
sub
sbb
loop
inc
add
imul
xor
nop
sub
rorl
mov
filds
andb
push
cli
int
shr
pop
sbb
sub
push
insb
and
lods
pop
add
mov
dec
aaa
std
add
or
jecxz
ficomps
stos
aam
jp
mov
or
mov
sbb
cli
in
scas
mov
mov
sti
sti
pop
add
cwtl
out
inc
testl
inc
sbb
sarb
cmp
xchg
pop
and
sub
pop
pop
mov
lret
pusha
stos
xor
jle
jmp
or
pusha
fistps
pop
sbb
fwait
mov
sbb
and
or
adc
add
insl
je
incl
cmp
fsubl
dec
xchg
push
or
sbb
les
cmpsl
cmp
dec
jecxz
ljmp
mov
daa
lret
inc
cmp
push
or
add
pop
lea
push
jno
negl
inc
adc
lods
pop
mov
dec
out
push
rolb
pushf
and
cs
adcb
push
lcall
stos
arpl
cmp
xchg
push
sbb
lcall
push
jg
fdiv
call
add
outsl
sbb
sub
xchg
loop
bound
sbb
call
addl
inc
xchg
add
jo
xchg
cmp
or
dec
rorb
mov
cmpb
and
mov
cli
pushl
orb
lret
pushf
push
inc
cmpb
stc
and
push
aaa
std
negl
sbb
out
inc
cmpl
and
aas
sbb
orl
jne
repz
xchg
jmp
imul
xchg
dec
add
sbb
ficomps
lock
jg
push
aad
sbb
mov
addr16
sti
dec
orb
mov
push
push
popf
dec
int3
movsl
repz
cmovae
or
xor
xor
hlt
xchg
inc
mov
test
pop
jp
or
inc
mov
inc
adc
pop
addr16
andl
mov
or
iret
daa
adc
xor
pop
or
outsb
out
sub
push
mov
add
jmp
aas
pop
lret
mov
pop
push
and
cmpb
xchg
and
iret
mov
or
test
inc
push
or
jl
addl
shl
or
push
jnp
sub
push
in
and
xchg
xchg
daa
mov
std
push
sub
jb
clc
jno
popf
lods
xchg
xor
ss
mov
push
in
decl
jle
jmp
fidivrl
adc
imul
shrl
push
xchg
test
jg
ja
mov
cmp
adc
or
adc
out
mov
adc
jbe
outsb
stos
and
in
fistl
pop
aad
dec
inc
add
mov
push
pop
loopne
cld
mov
rol
inc
mov
in
mov
mov
ficoml
jb
adc
sub
mov
rcrb
jg
mov
adc
shl
sbb
scas
xor
xchg
mov
bound
fnsave
scas
loop
cmp
testb
sbb
addr16
pusha
or
rolb
dec
or
loopne
mov
pusha
ret
mov
inc
das
lret
aad
mov
and
andl
adc
mov
cmp
fcompl
pop
mov
xlat
out
cld
iret
ja
lahf
rolb
jg
cmp
imul
or
sbb
pop
mov
iret
or
dec
cmp
pop
and
inc
bound
xchg
lock
add
mov
cltd
cmp
lock
stos
pop
adc
jle
inc
xchg
add
jge
incl
outsb
lret
psraw
gs
pusha
inc
not
ret
xchg
pushf
inc
aam
mov
lret
jnp
je
jno
testb
xor
push
stos
in
cwtl
stc
inc
adc
mov
shrl
dec
push
adc
sub
mov
jnp
adc
pop
or
iretw
in
je
adc
add
sar
mov
sbb
cmp
mov
lcall
les
and
iret
xor
jne
pushf
je
call
jecxz
call
js
pshufw
sub
adc
std
xor
aaa
mov
mov
cmpsb
jg
or
dec
aas
pop
sbb
mov
mov
fisttps
mov
stos
xchg
pop
mov
roll
andl
cmpsl
cmp
sbb
add
pop
lcall
int3
push
dec
xchg
ja
inc
adc
add
mov
enter
lock
push
cmp
xor
negl
adc
cmp
outsl
cmpsb
mov
xchg
add
das
push
or
hlt
mov
sbb
inc
aas
scas
inc
mov
cli
or
movsl
or
or
dec
jecxz
add
lret
cmp
mov
cmp
mov
fistpll
pop
dec
in
in
ss
mov
sbb
mov
xor
icebp
or
sbb
push
mov
lods
fstp
icebp
push
cmp
int
push
dec
pop
mov
cli
pop
cmp
bound
sub
mov
jge
lret
ljmp
shlb
add
iret
bound
add
scas
pop
add
mov
lock
xlat
dec
ljmp
outsl
aad
sahf
cld
ds
sbb
mov
cltd
sub
push
sbb
add
xchg
add
mov
pop
mov
lock
stos
shlb
gs
cmc
mov
outsb
xlat
push
std
push
sahf
push
add
cwtl
push
ror
imul
or
or
pop
rol
sub
dec
add
xchg
les
ljmp
std
inc
or
adc
int3
lds
std
push
addb
mov
roll
imul
jmp
inc
in
or
adcb
ret
dec
rcrl
pop
test
into
popa
push
xor
adcb
mov
push
ret
or
into
dec
je
dec
popa
inc
mov
cmp
mov
jle
mov
hlt
decl
sub
das
adc
fs
loopne
pop
imul
mov
sar
dec
inc
or
test
out
icebp
dec
cli
dec
fisttps
dec
daa
and
xchg
xchg
data16
fucomi
sub
mov
and
adc
leave
cmp
add
adc
xchg
fadd
aaa
dec
sbb
test
imul
mov
cmp
dec
call
add
xor
push
add
jno
inc
icebp
insl
xchg
cltd
jl
es
and
movsl
es
int3
jo
pushf
ljmp
and
or
jg
pop
mov
repnz
and
inc
aam
andl
insb
cld
push
test
insb
or
and
pop
lret
xor
stos
les
in
stos
jnp
push
repnz
xor
mov
loope
inc
xchg
push
mov
pop
or
filds
pop
into
das
in
imul
daa
ds
cmp
js
clc
push
adc
dec
mov
mov
or
add
jg
add
cli
mov
lds
xchg
cmp
rol
sub
mov
fmull
dec
mov
fnstcw
sar
gs
xor
cmp
lahf
jo
in
shrb
orb
pop
and
or
add
enter
iret
adc
jne
jns
repnz
inc
mov
xor
test
jg
adc
je
mov
pop
dec
pop
jmp
ss
clc
mov
pop
jl
mov
jns
fs
mov
cmp
lock
xchg
mov
pop
mov
outsb
mov
and
push
pop
inc
hlt
and
sbb
sub
fistpl
loop
jge
daa
in
ret
aas
xchg
pop
cld
jge
cmpsb
stos
dec
xor
pop
push
mov
add
cmpsl
sub
cmpsb
int3
sbb
sub
pop
das
in
pop
cs
ret
repz
ja
inc
bnd
add
push
mov
scas
cmp
inc
dec
std
xor
orb
insb
loopne
cmp
push
js
or
mov
das
lods
lods
xchg
or
sahf
rclb
out
shl
dec
add
aad
stc
js
adc
jmp
and
push
jp
xchg
push
aaa
jle
add
cmpsb
push
push
gs
test
fmull
ret
in
fscale
pop
das
movsl
inc
mov
sub
aam
and
subl
ds
add
or
inc
inc
inc
icebp
cmp
cmp
adc
mov
out
cmp
mov
adcb
xchg
push
stos
sbbl
rclb
xor
push
incl
adc
xchg
mov
fucom
dec
inc
xchg
cmp
in
test
and
icebp
cmpl
enter
jg
dec
fdivs
lcall
test
insl
inc
cld
bound
inc
mov
add
adc
sahf
push
jl
dec
in
inc
mov
xchg
pop
filds
mov
int
sbb
mov
add
or
push
jl
push
push
cmp
pop
or
and
mov
out
enter
add
notl
lcall
gs
push
fidivrs
add
inc
fldenv
pushl
shrb
inc
fisubl
pop
mov
mov
stos
rolb
movsb
mov
std
sub
dec
aam
inc
adc
es
push
pop
push
and
inc
push
push
pop
sub
mov
mov
inc
mov
mov
std
jae
dec
loopne
xor
shl
je
fldenv
cmp
negb
jge
mov
push
sub
outsl
xor
sbb
cmc
cmp
mov
cld
mov
sbb
ds
leave
jne
inc
xchg
dec
bnd
xchg
out
int
sbb
mov
push
dec
jmp
inc
pop
outsl
andb
sbb
sub
insl
jle
xchg
mov
pop
mov
sub
out
hlt
aam
andl
xchg
pusha
std
addl
push
mov
fcmovnu
sub
inc
movb
xor
ss
aad
pusha
sub
mov
xchg
pop
fcoms
xchg
xchg
push
stos
push
fldcw
in
sub
push
push
cs
cld
adc
aas
push
mov
loope
aad
jbe
in
adc
mov
sbb
fsubrs
push
mov
lea
add
lock
loopne
mov
jo
shrl
push
pop
adc
add
dec
aas
pop
dec
or
daa
mov
mov
or
cmc
data16
pop
fwait
lock
bound
cmp
dec
inc
inc
or
jecxz
xor
push
push
push
pop
loope
and
rcll
aas
cli
jne
cltd
jbe
inc
mov
cld
push
out
loop
rorb
cmp
loope
sbb
mov
jle
cmpsl
mov
mov
frstor
push
pop
cmp
addr16
adc
outsl
sbb
call
mov
add
xchg
das
pop
lret
sub
and
sar
adc
sbb
stos
cmp
and
idivl
mov
es
push
pusha
inc
test
loop
or
int3
ret
int3
push
je
jno
ret
lret
mov
shl
jecxz
es
fmull
fcomps
or
jnp
cli
cmp
fdivrl
cmp
push
add
pop
insl
pop
cwtl
pop
xorb
daa
adc
frstor
popa
push
and
shrl
movsb
repz
int3
lds
es
add
lcall
add
push
shlb
push
sub
pop
or
add
ret
add
cmp
push
dec
ja
stos
push
add
iret
jp
adc
popa
lea
je
xorl
mov
mov
add
lock
add
dec
mov
jge
push
mov
xchg
sub
dec
std
stos
and
jb
iret
cmpsl
and
std
mov
pop
push
and
cltd
adc
pushw
inc
xchg
jbe
jne
xor
inc
add
inc
mov
jle
sbb
scas
std
mov
push
dec
adc
push
in
sub
sbb
inc
add
push
or
push
inc
ds
push
mov
cmp
xchg
cmp
incl
cmp
mov
mov
ret
jae
scas
addr16
inc
add
cld
jno
adc
sti
stc
shrb
xor
cmp
mov
aam
std
sti
mov
push
sub
lods
loope
mov
test
mov
xor
sarb
test
pop
xchg
jnp
mov
cli
pop
dec
mov
adc
lock
scas
cmpsb
roll
addr16
loopne
add
mov
pop
xor
clc
and
add
jle
inc
fs
outsb
add
mov
xchg
xchg
je
lods
push
xor
push
lcall
push
add
sub
loop
mov
xchg
lds
dec
xchg
mov
inc
test
xchg
enter
pop
sti
outsb
xor
adc
outsb
enter
test
push
out
push
or
mov
iret
addr16
push
orb
inc
adc
add
cmp
xor
fucomip
push
sbb
sbb
sbbb
mov
orb
mov
add
gs
cmp
hlt
jne
push
sti
inc
mov
ss
roll
mov
mov
or
dec
mov
mov
sbb
mov
jp
or
push
adc
aad
lahf
mov
push
or
call
addr16
scas
push
call
enter
mov
cmc
sub
cmp
jb
aas
loopne
andl
rcrb
or
call
das
push
lcall
pop
lds
fisttpll
and
push
sub
xorl
fld
fnsave
movb
cmp
fistl
sbb
pop
clc
and
pop
rclb
or
mov
mov
test
jns
and
push
xor
out
cwtl
mov
in
jns
aam
mov
pop
mov
or
es
mov
sti
loopne
movsl
adc
aam
sub
lock
mov
push
add
inc
arpl
sbbb
cmpsb
xchg
dec
xchg
ret
test
xchg
pop
sahf
stos
inc
xchg
xor
dec
xor
pusha
or
jbe
rolb
or
push
int3
nop
imul
pop
cmp
add
lcall
mov
or
sti
push
out
lods
push
inc
cmp
mov
sub
in
dec
test
xchg
cld
push
cmpsl
les
and
push
xchg
cmpl
fdivs
dec
push
inc
dec
adc
rclb
inc
push
popa
sarb
pop
stc
inc
adc
scas
hlt
xor
outsb
icebp
cmp
les
adc
add
mov
outsl
jmp
ret
adc
or
test
mov
mov
mov
shll
adc
div
out
sahf
and
pop
or
push
loope
inc
stos
inc
mov
sbb
pop
push
jl
imul
sub
sbb
repnz
enter
in
cmp
and
mov
or
das
std
cmovg
sub
mov
lods
push
or
pop
cld
xor
stos
jnp
pop
lds
aam
divb
sub
out
and
mov
dec
call
adc
insl
mov
mov
push
and
inc
sahf
dec
ficomps
add
add
lock
jp
add
subl
xchg
es
dec
popa
sbb
sbb
mov
mov
xchg
clc
lea
adc
xor
jle
jmp
dec
sub
pop
incb
fisubl
add
inc
jae
rcr
fwait
cld
pop
fmuls
and
aad
or
outsl
hlt
xchg
xor
cli
or
jbe
sub
sbb
stos
push
cmp
push
outsb
test
aad
push
out
ljmp
xchg
add
addr16
fs
sbb
push
je
lcall
push
out
sbb
fistl
xorb
add
arpl
push
sub
cmp
sbb
inc
or
or
stos
aaa
enter
dec
imul
int3
or
xchg
sbb
dec
mov
jle
or
fs
pop
lods
sub
cld
add
push
fimuls
add
ds
outsl
shrb
and
push
xor
mov
loop
inc
sbb
push
sub
repz
inc
sbb
xor
xchg
lcall
sub
adc
xchg
es
dec
jnp
roll
push
jo
ret
std
add
push
pop
inc
cmpsl
into
add
clc
icebp
xor
push
out
add
xchg
stos
and
ja
xor
cmp
cmpsb
jmp
sub
xchg
mov
out
test
inc
fisubs
pop
pop
xchg
scas
xor
aaa
sbb
push
sbb
lcall
cmp
mov
mov
mov
or
jbe
je
adc
scas
mov
test
loop
rcrl
xor
mov
mov
ds
and
mov
pushf
add
cwtl
xchg
aaa
mov
rclb
cmp
push
or
lret
inc
call
jbe
popl
subl
inc
stos
mov
vpmacsdql
les
cmpsl
dec
push
xor
and
fs
shl
in
movsb
das
lock
sbb
rcrb
testb
nop
loope
inc
clc
add
add
lret
jae
mov
stos
fucompp
insb
and
fs
add
xor
arpl
inc
cld
adc
lds
ds
push
stos
outsb
loop
cmp
daa
mov
leave
shlb
loope
or
cmpsl
loope
ds
cld
filds
pop
aas
mov
aam
lods
das
sbb
rclb
addr16
mov
ss
add
les
xchg
mov
mov
mov
lock
push
repnz
loopne
popf
lock
or
mov
xorb
xor
inc
test
mov
dec
mov
xor
push
jo
jae
movsb
mov
add
fiadds
add
jb
mov
pop
or
ja
mov
inc
sub
mov
ljmp
jp
pop
adc
jecxz
xchg
test
imul
test
lods
adc
or
push
add
xchg
jg
lods
mov
test
mov
dec
pop
test
mov
shlb
sub
insl
mov
adc
cmp
jge
mov
icebp
jmp
ljmp
adc
jecxz
aad
loop
push
dec
sbb
pop
test
out
pop
xchg
xchg
push
rcl
cmp
inc
cli
adc
ret
cwtl
loop
dec
dec
cmp
jle
bextr
js
cmp
add
add
push
ja
sub
adcb
rcll
not
cmc
not
aad
pop
test
rorb
xchg
out
mov
and
int
push
mov
stc
pop
add
pop
mov
sbb
cs
sub
fcoms
pop
incl
shlb
popf
pop
cmpsb
inc
popa
add
dec
mov
cmp
push
mov
add
aaa
push
add
fdiv
adc
and
xor
push
subb
mov
loope
jge
fisubl
cmp
std
adc
push
dec
and
cld
shll
cmp
add
sub
push
negb
push
movsb
fsubr
rcrl
test
sarb
cmp
arpl
push
cmp
jmp
mov
aam
lret
and
sbb
or
aas
cmp
stos
xchg
xor
movsl
adc
xchg
and
inc
sarb
imull
add
or
mov
or
fwait
ljmp
xlat
test
lea
sbb
lods
sub
jecxz
add
pop
inc
mov
push
jae
dec
mov
sti
mov
arpl
xor
je
ss
imul
dec
iret
sbb
xchg
dec
cmp
or
adc
sbb
add
test
outsl
insl
testl
call
mov
je
jle
fcomps
repz
jb
movsl
adc
dec
addb
dec
jb
jae
xchg
jno
add
js
clc
mov
jg
inc
dec
mov
movsb
cmpsl
ljmp
sub
fs
outsl
cwtl
cmpsb
fstpt
mov
nop
cld
or
pop
dec
loopne
bound
adc
aaa
pop
adc
and
mov
pop
clc
test
xchg
les
bound
shlb
push
jmp
ss
das
jle
fadds
or
and
pop
inc
or
sbb
add
xor
aas
dec
lds
and
sbb
add
push
adc
dec
add
xchg
loopne
idivb
jg
stos
cmp
push
out
push
add
add
inc
rorl
orb
ss
mov
into
mov
mov
xchg
add
mov
push
stos
add
jg
sahf
pop
iret
movsb
movsl
icebp
jmp
xchg
cli
test
or
pop
mov
shrb
ljmp
in
scas
lea
sub
dec
stos
pop
and
mov
cmp
shrl
push
int3
adc
incb
fidivrl
push
or
sahf
jl
stos
dec
inc
adc
clc
or
mov
xchg
sbb
xor
inc
xor
push
cmp
mov
repnz
and
imul
xor
inc
pop
add
add
cmp
rcl
cld
ror
sbb
and
ljmp
pop
adc
xchg
sbb
adc
inc
pop
pop
inc
or
test
jg
add
add
xor
sarb
sahf
mov
fbld
mov
pop
in
shlb
push
dec
hlt
and
push
adc
xor
xchg
add
ljmp
aam
xchg
sub
jb
and
xor
push
add
mov
add
ret
cld
pop
cmp
add
fucompp
clc
stc
pop
movsb
dec
push
xchg
pop
or
cli
orl
pusha
jl
mov
jo
ret
sbb
ret
addb
ss
jmp
sbb
add
rorl
inc
sbb
aas
dec
or
add
aaa
sub
sub
lock
and
add
insl
fisubrs
jbe
inc
jbe
push
jae
dec
or
test
loopne
ror
inc
stc
shl
inc
mov
cs
add
cmp
or
jge
in
or
rol
or
fs
inc
inc
test
rolb
ja
outsl
arpl
fwait
dec
aam
pop
ja
dec
sbb
jmp
imul
popa
dec
notb
add
cmp
sbb
inc
or
out
std
aad
std
lcall
add
cmp
pop
push
bound
jg
mov
pusha
dec
test
mov
jae
scas
xor
add
pop
lret
inc
cmpsl
adc
loopne
add
imul
sbb
or
xchg
hlt
or
ret
inc
rorb
sub
fiaddl
sbb
pop
scas
scas
pop
mov
adc
popf
test
jl
jno
les
fnstenv
test
outsl
fwait
ss
icebp
arpl
data16
decl
mov
push
icebp
cs
xchg
jecxz
or
jmp
and
and
faddp
cmp
out
pusha
test
xchg
cs
mov
xchg
lea
sub
sti
mov
or
dec
sbb
or
mov
mov
jnp
and
decl
sub
movsb
jbe
push
push
lea
sarl
clc
sub
pop
push
fs
adc
std
idivb
cmc
mov
xor
clc
mov
or
pop
cmc
inc
jecxz
xor
jnp
push
in
push
scas
dec
test
mov
ja
ret
push
xor
pop
jns
dec
sahf
and
mov
enter
fldenv
add
mov
ret
cmp
push
nop
popf
push
pop
sti
inc
push
ljmp
jbe
aad
insb
subl
push
xor
adc
pop
sarl
jecxz
in
cli
push
push
stos
xor
outsl
add
mov
pop
dec
pop
push
xor
lret
sbb
ljmp
mov
lret
es
xchg
and
mov
stos
sub
add
fidivs
mov
jecxz
cmp
out
jge
jle
adc
jae
push
cmpsl
xchg
repz
mov
insb
call
and
les
jge
retw
out
mov
out
push
mov
lods
inc
icebp
es
lret
pop
ds
add
xor
rcll
mov
mov
dec
stc
push
push
outsl
lock
test
movsb
mov
clc
xor
movsl
add
xchg
es
dec
out
adc
fxch
leave
ret
xor
rorb
dec
pop
mov
dec
cwtl
sbb
dec
repz
xchg
sub
add
ljmp
outsl
xor
aas
mov
or
addl
in
loopne
ret
aad
les
mov
adc
mov
loop
xor
mov
inc
and
jge
pop
sbb
push
dec
aas
push
mov
das
mov
and
fldl
enter
xor
pop
ds
mov
pusha
cmp
cmp
and
or
mov
pop
pop
and
add
xchg
aaa
outsl
push
je
js
jge
jne
cmp
jo
roll
mov
jg
in
roll
aas
sub
lock
xchg
add
clc
jno
sbb
jg
rorb
or
add
mov
and
in
and
shl
cli
sub
dec
xchg
pop
push
cmpsl
lock
cli
stos
cwtl
iret
jge
adc
and
popa
mov
in
push
dec
in
pusha
mov
repnz
dec
mov
and
pop
xor
stos
add
mov
jecxz
insb
and
adcb
ja
mov
fldl
pop
popf
roll
and
outsl
adc
add
addl
xchg
test
fistpl
notb
stos
xorb
test
jle
sbbb
pop
adc
outsb
fsubrs
jno
aas
roll
jge
clc
push
push
mov
dec
push
test
out
aaa
push
rcrb
sub
xchg
mov
imul
aaa
dec
out
push
jg
ret
dec
sbb
inc
add
mov
pushf
inc
dec
repnz
jbe
mov
mov
add
xchg
fistps
testl
arpl
ds
mov
mov
jne
sbb
inc
out
leave
js
repz
pop
rcll
push
rcll
sbb
faddl
repnz
inc
inc
nop
ficomps
stc
push
loope
push
ljmp
das
rclb
push
xchg
lods
rclb
rolb
cmp
mov
and
mov
inc
xchg
sub
add
ret
fstpt
subl
testb
adc
inc
leave
sbb
loope
xlat
adc
aam
mov
pop
add
repnz
in
and
adc
mov
ds
shrl
into
jno
loop
or
jg
cmp
xchg
out
mov
add
mov
push
adc
add
adc
pop
xchg
jge
sbb
enter
pusha
sbb
and
dec
cld
bound
repz
ss
jae
dec
xchg
ds
add
adc
adc
stc
push
pop
pusha
adc
jnp
push
sbb
adc
leave
imul
cmc
fwait
push
lock
mov
inc
mov
sub
aas
push
push
addb
cmp
xchg
xchg
es
xor
lret
jbe
jo
sub
dec
out
pop
sbb
pop
loope
out
aad
xchg
mov
loopne
jns
or
inc
out
ss
jle
das
icebp
cmpsl
pusha
pop
cs
xlat
repnz
test
adc
das
add
fstpl
push
mov
inc
repz
pop
dec
pop
icebp
insl
push
pushf
cmc
test
inc
inc
dec
icebp
pop
mov
lds
mov
pop
adc
xorl
jle
mov
dec
sbb
jns
xorb
lea
mov
insl
add
aas
icebp
dec
xchg
cld
les
inc
xor
pop
icebp
outsb
xchg
push
and
insb
fcoml
sarb
sahf
sub
mov
imul
push
orb
add
jg
push
mov
movsb
ds
cmpl
test
push
adc
scas
inc
fwait
cmpsb
pushf
push
rcrb
ljmp
dec
xor
sbb
je
inc
pop
mov
jp
into
test
stc
xchg
lock
in
sub
scas
jo
popa
jg
push
dec
inc
push
jne
inc
sub
dec
jl
mov
rclb
mulb
inc
aam
sub
lea
sahf
xor
xchg
sbb
xchg
jmp
scas
cld
std
popf
add
xchg
call
out
inc
fsubrl
dec
dec
xchg
inc
fsub
or
xchg
ret
pop
push
xor
mov
pusha
sar
and
cmpsl
add
inc
outsl
add
xlat
sahf
cld
cld
lods
mov
scas
lahf
and
cmpsl
dec
add
repz
add
mov
repnz
ss
mov
xadd
xlat
cld
mov
mov
pop
jno
mov
jl
xchg
das
add
andb
in
stc
sbb
pop
xor
ficomps
mov
stc
xchg
cmp
sub
adc
ret
inc
das
jge
xchg
cmpsb
jecxz
adc
mov
loopne
adc
cld
pop
inc
dec
push
jns
mov
or
pop
dec
js
lea
cli
cmp
push
dec
fdivrp
out
pushf
xchg
jo
cmp
mov
jp
push
adc
fimull
pop
jle
sti
dec
add
lods
imul
pop
cli
cwtl
cld
jge
stc
enter
stos
inc
jne
leave
inc
scas
shlw
jl
add
mov
outsl
push
dec
shlb
in
push
scas
nop
movsl
push
push
loopne
jl
inc
dec
sti
mov
push
subb
pop
xor
sbb
lret
sbb
sbbb
xchg
out
dec
aas
subb
repnz
dec
outsl
pop
scas
clc
cld
or
mov
or
add
and
inc
pop
xchg
and
dec
sbbb
ja
sub
or
mov
mov
push
push
loopne,pt
imulb
fmull
jmp
adc
xor
cmp
jmp
dec
mov
mov
and
adc
mov
and
lods
popa
inc
mov
lds
cmpsl
mov
xchg
add
pushf
stc
or
cmp
push
mov
add
xchg
mov
notb
cmp
push
jle
lds
divl
fcomps
fldcw
xor
push
jge
xor
decb
loop
sub
mov
add
jge
sbb
xchg
adc
or
push
jecxz
and
rolb
and
mov
xor
clc
inc
das
jns
mov
adc
hlt
mov
add
push
cmp
mov
lods
icebp
adc
or
dec
imul
add
lock
mov
inc
inc
fstps
jnp
insl
cmp
cmp
aaa
loop
jle
xor
and
xor
aad
mov
and
icebp
mov
mov
shrb
cmpl
xchg
xchg
inc
and
mov
in
cwtl
loopne
mov
cld
loope
jb
xrelease
mov
es
int
repnz
and
push
pushl
push
adc
push
add
push
stc
repz
jbe
mov
loopne
dec
and
push
mov
add
scas
pop
mov
or
lock
test
add
rclb
sub
push
xchg
cs
int3
ljmp
push
push
push
xor
cmp
lods
aam
pop
push
sbb
mov
iret
mov
cli
xchg
lock
mov
stos
cmc
dec
test
or
or
push
leave
arpl
adc
nop
inc
jge
stos
mov
sub
add
adc
gs
adc
add
push
out
ret
idivl
insl
push
imul
inc
push
subl
fisubs
cmc
inc
test
adc
add
imul
loop
jle
add
sbb
inc
rorb
test
dec
out
xchg
in
jle
notb
aaa
mov
stc
mov
add
test
sbb
or
cmp
and
push
jmp
mov
in
inc
rcrl
push
push
pop
mov
into
lock
repnz
aas
nop
stc
and
jno
hlt
or
jle
scas
jp
scas
inc
xor
aas
cld
and
icebp
mov
test
jmp
dec
bnd
pushf
push
lods
xor
jne
pop
pop
mov
mov
subl
or
and
xchg
aad
push
shrl
xchg
dec
mov
hlt
movsb
leave
stos
imul
or
sub
test
out
cmpsb
into
decb
sbb
mov
std
sbb
pop
xor
xorb
or
fiadds
out
lds
sub
pop
push
mov
pop
xchg
jne
mov
aad
jne
inc
movb
push
xchg
enter
xlat
fmull
or
xchg
dec
dec
cmp
fwait
mov
stos
mov
jecxz
fdivs
jmp
adc
imul
mov
test
push
and
out
adc
movsb
jo
dec
je
movsl
sub
sbb
addr16
inc
inc
mov
lret
nop
dec
xchg
or
add
push
jmp
gs
push
mov
push
xchg
and
scas
fnstsw
incl
jno
cmpsl
scas
cld
jg
mov
movsl
fistl
in
add
sub
inc
dec
inc
add
add
ret
mov
add
imul
xlat
mov
push
std
fbld
jl
add
mov
add
sub
ret
push
add
dec
fdivrl
in
cmp
xor
mov
inc
inc
dec
and
add
mov
ja
fiadds
mov
mov
repnz
pop
jb
dec
add
mov
push
cmp
pop
aaa
dec
shrb
push
dec
dec
mov
inc
xor
sarb
dec
ljmp
jne
adc
dec
add
jmp
push
jbe
cld
sub
addl
inc
push
dec
xor
mov
cs
inc
popa
pusha
sbb
dec
xor
xor
data16
dec
inc
std
addb
dec
pusha
xor
dec
jo
fcmove
mov
dec
push
mov
lock
dec
pop
enter
push
loopne
out
mov
int3
cmp
je
icebp
cmpl
test
xorb
in
and
sti
mul
cmpsl
jmp
and
mov
cmp
dec
dec
pop
mov
adc
outsb
dec
inc
orb
jb
mov
pushl
dec
push
stc
rolb
bound
push
aas
xor
into
dec
add
outsb
dec
pop
inc
lea
jmp
lock
push
dec
test
pop
inc
inc
dec
cmp
pop
jno
mov
sub
mov
dec
inc
cs
lods
jae
jno
mov
push
insl
clc
fidivs
inc
add
je
sti
popaw
dec
cmp
mov
fsubp
mov
fs
ds
cmp
pop
adc
pop
js
cld
inc
push
mov
xor
or
cmp
inc
inc
dec
inc
xor
rcr
ret
into
push
xor
xor
jmp
insl
cmp
int
cmp
add
sbb
jb
xor
inc
adc
ss
cwtl
mov
loope
lea
pop
add
or
inc
cmp
lock
sbb
mov
les
cli
add
push
push
mov
sbb
dec
xor
or
jmp
hlt
dec
test
push
dec
stos
mov
daa
mov
or
pop
jmp
lods
cwtl
out
sub
push
mov
insl
inc
push
push
fimuls
fcomip
sub
push
or
mov
adc
dec
loopne
dec
addr16
fs
jl
mov
dec
inc
inc
and
inc
clc
push
push
loopne
adc
jg
pop
fdivs
shlb
lds
sub
jne
je
int3
lret
mov
dec
dec
add
call
mov
rorl
je
sti
xchg
repnz
les
inc
dec
push
inc
adc
mov
js
decb
inc
push
sti
inc
xlat
mov
mov
loop
loop
mov
hlt
push
push
and
jmp
dec
and
clc
cld
push
test
aam
xor
sub
push
mov
mov
lahf
jl
hlt
inc
xor
icebp
clc
jne
insl
dec
jno
push
fidivl
jb
xor
dec
pop
sub
negl
dec
loopne
sub
xor
fcompl
outsb
push
add
inc
xchg
out
lods
inc
mov
inc
mov
inc
ret
gs
rolb
aam
push
out
pop
lcall
cmp
inc
rorl
shl
inc
mov
loop
pop
pop
popf
out
push
dec
push
out
clc
push
ss
fmull
clc
mov
mov
fidivl
push
inc
add
das
int3
cmc
dec
inc
push
mov
ret
inc
jecxz
cmp
xor
out
inc
cli
sub
push
inc
pop
mov
clc
inc
lods
mov
xchg
inc
mov
jmp
dec
mov
jl
mov
loope
je
testb
jne
jns
negb
stc
add
xor
ss
push
push
shrb
xlat
ja
sub
mov
lds
mov
repnz
rcll
push
bound
inc
outsl
ret
inc
push
inc
push
inc
lcall
or
inc
xor
push
roll
pushf
sarl
scas
inc
mov
sti
xor
sub
ss
gs
fimuls
push
jns
mov
push
fnsave
dec
cmp
inc
and
jbe
xor
mov
cmp
sub
push
xor
fsubs
dec
jo
pop
test
inc
insb
dec
inc
sahf
pop
push
aad
out
mov
cld
call
scas
popa
push
dec
sahf
inc
jae
inc
stos
into
or
clc
ret
inc
jbe
jecxz
dec
sbb
std
push
aam
xlat
lock
push
push
shl
js
inc
lret
adc
cs
test
insb
sub
jbe
xchg
inc
jmp
mov
je
dec
clc
fbld
adc
xor
mov
fiadds
popa
cld
dec
pusha
fbstp
test
mov
push
xor
or
aas
rclb
add
or
push
xor
addr16
add
inc
push
inc
sub
imul
sub
inc
dec
mov
add
push
inc
dec
mov
lock
je
mov
sub
mov
fldl
push
ss
inc
inc
pop
mov
adc
rorb
jae
insb
jae
add
clc
dec
pushl
push
jo
je
inc
pop
inc
pushl
inc
jl
pop
push
jecxz
mov
push
jp
xor
sti
mov
in
fdivrs
movsl
aas
in
push
rcl
pop
loope
sti
jmp
clc
adc
add
pop
les
sub
pop
pop
sub
mov
or
push
adc
xor
out
push
cmpsb
xchg
int3
inc
dec
cmc
jb
xor
or
je
inc
jns
rcrl
in
push
bound
dec
inc
jg
dec
jae
loop
xchg
pop
int3
xchg
int3
icebp
wrmsr
js
or
xor
enter
ret
xlat
push
in
add
inc
push
add
jbe
mov
js
adc
dec
xlat
inc
push
test
outsl
push
mov
mov
jg
mov
testl
ss
js
rcl
shrb
or
inc
lret
cmc
das
sbb
push
lea
xor
sbb
and
incl
xchg
and
lock
jnp
std
xchg
xor
jo
cmp
dec
inc
push
lock
shlb
insb
push
push
dec
lock
aad
lea
sub
adc
jnp
pop
call
subb
inc
aaa
dec
inc
adc
inc
adc
and
fcmove
loop
pop
inc
insl
orl
rcr
dec
mov
andb
out
out
push
add
mov
add
ficomps
loope
inc
xchg
pop
jo
cmp
add
loope
gs
dec
dec
jmp
inc
dec
jo
xchg
arpl
clc
mov
jo
inc
hlt
cmpsb
inc
inc
outsl
clc
pop
out
cmp
into
rolb
jbe
pop
das
lock
pop
sahf
and
push
dec
or
push
push
ja
xchg
and
cmpsl
roll
add
loop
inc
inc
pop
dec
lret
les
jp
cmp
mov
push
iret
sub
jbe
arpl
or
adc
ljmp
aaa
je
pop
orl
popf
repnz
fs
push
pop
sbb
xor
push
push
xor
cmp
bound
xor
inc
pop
mov
outsb
xchg
sbb
jno
dec
pop
inc
mov
or
ret
inc
outsb
xor
inc
mov
add
int3
es
mov
pop
push
ljmp
jns
iret
frstor
je
mov
jno
insl
jae
test
cmp
push
popa
inc
insl
movsb
hlt
inc
dec
dec
mov
ds
pop
pop
mov
sbb
rol
arpl
inc
push
pop
pusha
add
popl
dec
dec
imul
fidivs
jmp
imull
imul
lods
lock
insl
xor
insb
jo
out
xor
jbe
mov
insl
mov
popf
out
mov
cld
xlat
dec
fs
pushf
add
ss
jb
jne
in
sub
mov
xchg
test
cltd
mov
and
pop
cmp
addr16
dec
ds
orl
rorl
add
jge
xor
fs
sub
jo
push
aaa
popa
test
pop
pushf
sbb
inc
push
push
inc
testb
mov
jp
jo
pusha
xor
lret
inc
dec
inc
icebp
aam
outsl
dec
data16
inc
jo
jge
adc
js
jae
lret
out
cmp
inc
je
push
jne
dec
lock
leave
lret
push
movsb
dec
push
jg
fs
inc
mov
dec
push
push
sbb
dec
dec
push
insb
push
mov
or
rorl
data16
loopne
ret
jns
ror
or
push
dec
int
push
lret
push
pop
fs
jmp
mov
rcll
jle
sub
inc
xchg
push
and
push
push
pop
pop
cs
loopne
loopne
insb
push
clc
out
jae
mov
daa
dec
cmp
or
pop
ret
push
subl
cwtl
mov
icebp
inc
inc
jmp
imul
in
pop
xor
sub
xchg
mov
mov
or
push
call
inc
mov
outsl
popa
inc
xchg
push
cmp
shlb
jo
dec
pop
dec
scas
jne
jno
jo
cwtl
pop
dec
les
xor
gs
stos
and
jl
dec
movsb
cmp
sbb
cs
rcll
ja
les
pop
testb
dec
stos
inc
push
jmp
sbbb
icebp
jb
mov
cld
mov
aad
jle
arpl
jp
rorl
sub
xor
dec
jne
push
lock
push
jbe
pop
push
pusha
outsb
hlt
ds
jge
or
xor
arpl
test
inc
shr
rolb
test
clc
popf
mov
rclb
js
xor
pop
imul
adc
push
clc
inc
dec
js
mov
mov
hlt
pop
xor
push
pop
add
loopne
testb
xorb
inc
push
je
sbb
inc
xor
dec
pop
adc
andb
and
repz
fiaddl
incb
out
cmp
rcll
inc
insl
mov
dec
mov
add
dec
xor
jns
push
mov
xchg
xor
sbb
imul
dec
aaa
loop
int
imul
push
pop
rcr
dec
fdiv
or
stos
inc
cmpsb
repnz
dec
imul
or
or
ja
push
sub
iret
inc
push
pop
mov
xchg
jle
mov
dec
push
push
bound
fimuls
xchg
dec
inc
arpl
sbb
adc
mov
dec
dec
xchg
orb
pop
dec
call
add
xchg
jg
xchg
sub
dec
jbe
gs
clc
loope
dec
xchg
xchg
inc
dec
scas
mov
nop
jne
sbb
push
repz
inc
imul
bnd
test
popl
loopne
or
fs
data16
gs
je
inc
push
rcrl
shrl
inc
call
imul
dec
mov
clc
xchg
xchg
push
mov
sbb
mov
outsb
iret
in
shrb
dec
nop
enter
mov
in
inc
cmp
mov
lods
or
outsb
imul
rorl
mov
dec
imul
inc
arpl
xchg
std
mov
add
data16
dec
js
or
lds
clc
xor
jns
push
ja
addl
cmc
fdivrs
mov
jp
in
fists
pop
add
push
je
push
sub
stos
inc
test
xor
inc
adc
cwtl
stos
jl
xor
insl
int
fadd
ss
xchg
es
mov
sahf
cmpb
std
inc
jnp
je
cmpsl
cwtl
add
jg
push
dec
add
rcr
pop
mov
sbb
popa
push
fs
orl
ret
fs
sti
jle
inc
push
aaa
jo
pushf
add
shll
aaa
jo
repz
call
adc
add
rolb
lods
ss
sub
aaa
inc
pop
arpl
out
inc
sbbb
push
mov
outsl
addr16
cmp
bound
aam
out
inc
dec
fs
inc
out
in
dec
hlt
inc
sub
inc
movsl
push
sub
sarb
shl
sbb
rolb
outsl
sar
sysexit
pop
addr16
cld
xor
jno
dec
or
adc
shl
push
jbe
orl
enter
loopne
jnp
push
xchg
ret
mov
inc
push
xchg
decb
inc
push
push
mov
icebp
jno
inc
loop
inc
dec
mov
mov
loopne
out
mov
xor
hlt
sub
inc
bound
ljmp
imul
inc
push
or
fimull
das
les
xor
inc
jno
out
addr16
xor
mov
inc
xchg
adc
nop
pop
push
or
enter
popa
clc
lcall
nop
xor
shrb
jp
ds
and
pop
movsb
pusha
rolb
rorl
test
cmpsb
shrb
add
cmc
shrl
jmp
insl
or
clc
rcl
sbb
mov
dec
inc
nop
lock
add
inc
shll
pop
push
pop
shrd
imul
test
inc
mov
push
fildl
dec
mov
inc
insl
jno
and
push
and
icebp
out
inc
dec
ljmp
rcl
push
leave
and
ds
ja
push
loop
stos
push
dec
clc
ja
lret
pop
pop
cmp
dec
xchg
jbe
push
cmp
pop
mov
ljmp
mov
add
push
add
insl
outsb
and
mov
push
enter
mov
dec
fisubrs
jae
aas
mov
xor
cmp
fcoms
ret
dec
lods
inc
inc
cmpsl
lcall
ljmp
ljmp
mov
xchg
mov
sub
lea
jo
outsb
mov
das
inc
dec
inc
popa
inc
push
mov
fldl2e
outsb
shll
jns
lret
lods
aaa
mov
xor
ja
out
jg
ret
inc
inc
push
inc
mov
cmp
cmp
jecxz
jp
sahf
and
hlt
adc
xor
xor
pop
mov
mov
and
inc
dec
push
in
mov
inc
dec
and
cmp
sub
sbb
ss
adc
mov
dec
mov
inc
push
and
adc
pop
jns
iret
xor
inc
push
sbb
insl
out
ljmp
dec
add
ja
jno
enter
clc
ljmp
rorb
dec
arpl
shlb
ljmp
push
jno
sub
aaa
add
xchg
jbe
je
ret
dec
icebp
push
jns
ljmp
jp
push
sbb
testl
xor
rolb
movsb
in
inc
dec
xchg
out
sarb
inc
adc
inc
push
push
mov
popf
ds
ds
out
je
sbb
mov
jae
or
insl
mov
xorl
mov
lock
xor
call
sbb
or
insl
je
xor
cmp
negl
inc
push
inc
xchg
inc
push
ljmp
xor
or
outsl
dec
bound
push
pop
add
dec
xchg
push
shrb
push
mov
lahf
mov
adc
rorb
jb
in
xchg
add
or
and
mov
inc
hlt
and
fists
mov
mov
mov
pop
mov
adc
push
pop
push
sahf
push
dec
sarb
dec
or
mov
xor
mov
push
jbe
and
icebp
inc
adc
cmp
pop
push
bound
cli
in
xchg
pop
sbb
clc
cmp
dec
sahf
cmp
ret
ret
es
rolb
mov
mov
sub
dec
inc
mov
inc
sub
aad
pusha
xor
cmpsb
pop
daa
or
fs
stc
hlt
adc
push
inc
repnz
inc
inc
stos
lahf
jp
push
pop
push
xor
mov
mov
jns
dec
push
mov
dec
aaa
dec
dec
scas
int3
outsl
aaa
fisttpll
inc
pop
xchg
add
pop
inc
ss
xchg
and
sub
fisubrl
data16
adc
aaa
dec
fidivrl
push
shlb
dec
or
add
sbb
adc
pushf
mov
mov
scas
clc
jb
pop
dec
fyl2x
inc
pushf
subb
mov
dec
aaa
dec
xor
adc
loopne
inc
enter
or
dec
clc
dec
js
lret
push
fisubrl
push
sbb
data16
hlt
fists
or
jle
xchg
in
xor
rclb
jns
test
dec
clc
xor
mov
imul
movsb
xchg
aas
pusha
add
dec
cmpsb
and
cmpsl
je
sub
and
push
mov
dec
dec
dec
add
dec
jae
ret
dec
addr16
jo
push
ret
push
ret
mov
push
jns
dec
pop
lock
cwtl
xchg
iret
dec
dec
dec
pop
add
cwtl
dec
and
inc
sbb
push
push
xor
lahf
ret
push
insb
push
fdivs
insb
inc
call
mov
std
mov
cmp
jns
xor
dec
jne
xchg
push
push
cli
insb
cs
cmp
xchg
pusha
mov
push
or
addb
mov
xor
pop
sub
jecxz
cmp
lods
xchg
js
jne
jbe
ss
push
push
aaa
shl
jo
inc
lcall
stos
sub
dec
lahf
jbe
popa
add
inc
cmp
mov
loop
loopne
jmp
repnz
and
inc
pop
jp
push
xor
ret
sub
add
xchg
fldt
pop
jl
fimuls
ljmp
mov
add
pop
xchg
mov
push
xor
and
imulb
in
es
into
iret
dec
pop
inc
add
inc
testl
push
inc
orl
adcl
push
ret
inc
adc
adc
cmp
cmp
daa
push
pop
fistpll
push
pusha
insb
inc
call
mov
mov
cwtl
icebp
mov
pop
mov
push
xchg
push
sarl
add
push
jbe
inc
dec
clc
je
dec
sbb
dec
les
jg
sub
dec
outsb
push
push
inc
add
mov
sub
inc
fwait
push
or
pop
lods
fs
xorb
xchg
push
outsb
inc
jns
ret
stos
mov
insb
movb
jae
or
dec
sub
cs
xor
ja
outsb
xor
pop
push
xor
add
pop
push
mov
aaa
add
fs
push
jnp
fsubrs
mov
xor
outsl
mov
push
xor
lods
shr
push
cmp
aam
pushf
lock
fsts
jno
adc
fs
xor
mov
daa
inc
ss
out
cmp
xor
push
push
bound
arpl
mov
add
mov
js
and
sti
inc
pop
shll
enter
sbb
in
xchg
cmp
xor
clc
inc
std
or
dec
push
and
bound
push
dec
inc
jne
or
cmpsb
jmp
scas
icebp
cmpsb
mov
arpl
inc
insb
inc
ss
jbe
dec
fs
inc
pushf
pop
sub
test
movsb
insb
loopne
dec
xor
add
js
cmp
mov
mov
push
push
lahf
outsb
xorb
xchg
in
xor
add
mov
or
ror
test
dec
push
mov
xchg
ss
inc
push
bound
inc
sbb
lret
dec
jp
sbb
jns
xor
lock
cld
inc
sbb
call
pop
gs
push
xlat
inc
dec
std
push
cmc
jbe
or
arpl
mov
jmp
push
movsb
cli
push
ljmp
sbb
pop
in
pop
test
and
add
cmpl
rcr
push
push
inc
bound
ljmp
and
pop
cmp
shll
mov
jb
cmp
ds
sbb
push
rcrl
cmp
jo
push
insb
sbb
out
pop
sub
aaa
aaa
push
lods
inc
sarl
dec
ss
fimuls
shll
sbb
dec
rolb
inc
xchg
inc
bound
adc
jecxz
push
jb
bound
lods
inc
inc
mov
xor
cli
xchg
shll
repnz
mov
xchg
incb
jo
cmp
mov
jne
lds
pop
pop
call
inc
enter
jo
or
inc
test
xor
dec
push
enter
psubusw
ss
jg
insl
int3
out
push
jo
popa
push
stos
movsb
and
lock
jo
jge
ja
into
test
je
fs
out
in
adc
xchg
inc
outsl
leave
xchg
test
add
mov
aas
push
push
inc
cld
call
lret
jb
sub
mov
dec
inc
mov
lock
xor
push
movsb
rol
in
movsb
push
sbb
and
jg
lret
push
gs
dec
inc
cs
add
test
gs
call
inc
pusha
pop
adc
insl
sub
xchg
xchg
clc
dec
das
je
cli
jo
ja
adc
sub
push
inc
ds
inc
aaa
inc
and
movsb
fisubrl
push
push
xor
dec
inc
fdivr
loopne
push
inc
and
je
push
push
or
lods
out
push
dec
imul
les
sub
dec
inc
push
dec
in
jae
testl
push
push
aaa
or
sub
outsb
dec
in
pop
push
push
push
inc
dec
mov
push
hlt
in
add
lcall
icebp
loope
movsb
push
stc
sub
dec
xor
adc
dec
push
adc
fisubl
addr16
sbb
ja
or
sub
imul
dec
dec
add
inc
pop
dec
scas
adc
push
dec
jae
es
imul
inc
js
add
dec
xchg
movsb
and
ss
repz
out
and
ds
inc
jne
add
jl
or
dec
mov
out
jo
push
pop
sub
stc
dec
inc
lods
dec
mov
inc
sarb
jg
adc
jmp
roll
lret
or
outsb
je
imul
push
cmc
jge
dec
ja
popa
mov
lret
inc
push
imul
call
pop
add
mov
pop
dec
pusha
outsl
inc
inc
das
mov
addr16
xor
pop
adc
ret
fs
in
push
shl
pushf
inc
cmp
push
push
dec
pop
xor
or
repnz
push
outsb
xor
and
xor
jae
mov
mov
dec
push
icebp
ret
les
xchg
and
cs
pop
cmpl
sbb
int3
hlt
mov
add
dec
loop
addb
pop
or
add
inc
jae
inc
ss
cmpsl
test
in
pop
sbb
add
cmp
or
xor
into
out
add
dec
insb
outsl
jmp
ja
lods
add
fisttpl
mov
dec
cltd
pop
jnp
js
stos
loopne
adc
data16
ret
loop
imul
push
rolb
push
pop
fs
out
push
pop
jo
into
mov
push
xor
push
dec
aaa
jo
loopne
cmp
outsb
xor
pushf
jmp
daa
push
jmp
insb
fwait
pop
cmpl
push
dec
add
jo
inc
fsubs
ret
mov
js
in
add
add
enter
insl
loopne
jmp
add
push
push
mov
jnp
andl
mov
mov
popf
dec
pop
leave
sahf
scas
lret
mov
sub
push
inc
or
stos
scas
inc
aas
mov
imul
cmp
and
dec
push
mov
push
inc
inc
imul
fisubl
jmp
fmuls
addb
inc
or
ret
add
inc
pop
adc
movb
aas
mov
ret
aaa
outsb
outsl
cli
push
imul
fwait
cmp
or
cs
enter
mov
fcoms
push
in
jne
test
inc
dec
lret
cli
lock
sbb
roll
mov
xor
rcll
call
hlt
xor
push
cmp
fadds
movb
outsl
mov
push
out
dec
pop
xor
outsl
jno
hlt
push
icebp
dec
jno
pop
hlt
rorl
sahf
xor
mov
xor
mov
cli
movsb
cmp
lods
pushf
push
cmpsb
adc
fbld
in
xor
dec
cs
jmp
js
dec
mov
pop
xor
pop
call
inc
sub
bextr
add
addb
dec
and
mov
mov
cmp
bound
or
push
cld
scas
mov
push
push
add
clc
lea
dec
shrb
cli
pushl
pop
dec
inc
xor
bound
jmp
mov
scas
adc
lea
sbb
push
fwait
mov
arpl
sarb
stos
inc
push
outsb
mov
addb
ja
ss
dec
insb
dec
sub
divl
inc
pop
mov
jb
or
jne
pop
call
bound
pop
pop
jge
ret
imul
dec
inc
fmul
dec
in
call
repnz
out
popa
xor
pop
sbb
fisubrs
pop
mov
loope
add
inc
sub
cli
cmp
mov
ret
push
in
test
push
test
jo
lcall
ljmp
arpl
std
mov
imul
into
mov
jg
shrb
cmp
xor
inc
xchg
mov
and
inc
js
test
dec
outsl
insl
push
dec
add
lea
add
fmuls
inc
jae
js
cld
test
insl
fimull
out
xor
xor
mov
dec
jns
inc
or
jne
mov
cmpsb
inc
adc
dec
insb
bound
stos
or
push
dec
dec
loop
inc
add
pop
xchg
adc
shlb
inc
cmp
pop
fists
shll
fisttps
xor
clc
and
adc
jne
push
mov
push
bound
arpl
inc
call
inc
cmp
call
test
lods
out
or
inc
test
lret
mov
dec
xor
inc
push
push
imul
sahf
and
or
xor
ficoms
jbe
push
sti
or
aas
or
inc
jns
popl
inc
ss
test
cmpsl
insb
inc
insl
pop
cmpb
add
pop
lret
jno
and
sub
dec
enter
or
and
rclb
mov
mov
or
xor
xor
call
call
insb
push
add
cmp
scas
addr16
cltd
mov
xor
popfw
sbb
xor
and
call
mov
jno
in
rol
outsb
add
push
xor
add
mov
and
jo
ss
pop
nop
dec
adc
pop
insl
mov
iret
xchg
add
add
xor
lahf
jo
add
adc
or
mov
add
stos
gs
mov
sbb
lcall
add
add
or
outsl
sbb
stos
ss
and
add
and
adc
pop
adc
int3
jae
or
pop
inc
push
les
add
jp
sbb
fsub
test
jbe
inc
mov
mov
or
add
mov
sbb
pop
push
adc
push
or
and
mov
jg
andb
mov
rcll
push
or
js
push
lock
fsubrl
xchg
jmp
popa
or
cmp
xchg
outsb
push
push
add
push
sahf
jns
sbb
or
pop
rcrb
adc
dec
or
and
push
lock
or
test
addb
and
out
adc
ss
add
sbb
mov
push
cmp
rolb
mov
inc
shrl
push
mull
pop
in
jae
add
test
push
mov
inc
bound
cld
sbb
push
push
push
push
xor
aaa
pop
lods
sub
sub
push
xlat
jmp
push
aaa
add
push
dec
push
imul
sbb
xchg
outsb
imulb
inc
sbb
jae
mov
or
mov
sbb
fiaddl
scas
test
sbb
out
dec
and
mov
cmpsl
xlat
cmp
push
js
movsl
stos
lcall
inc
xchg
test
mov
popl
cmp
aas
push
add
cmp
or
das
pop
push
test
lahf
stos
jb
sub
data16
push
pop
add
add
push
sahf
push
lcall
notl
dec
imul
or
xor
adc
cmp
out
or
cltd
bound
in
add
push
mov
push
rol
xorb
das
fbld
or
add
push
add
xor
ds
add
xor
imul
jb
add
xchg
xchg
and
lret
add
mov
les
js
cmp
ds
sbb
movsl
outsb
add
push
int
mov
mov
pop
in
sbb
shl
ja
lds
hlt
or
rorl
xor
test
jbe
fiadds
and
adcl
lods
xchg
lcall
xchg
fsubrs
jmp
bound
out
mov
sbb
cmp
je
out
jmp
jmp
inc
aaa
mov
add
sbbl
xor
imul
adc
jge
mov
jmp
add
fstpt
clc
aas
adc
lcall
dec
jmp
cli
xchg
xor
call
das
stos
inc
in
xchg
lahf
inc
add
or
mov
inc
ja
leave
add
call
adc
fwait
cmp
sarl
ss
add
int3
cwtl
aaa
mov
mov
push
movsb
inc
fbld
push
lock
enter
and
dec
in
mov
dec
ljmp
pop
enter
test
jl
stc
xchg
xor
insl
hlt
mov
jg
mov
leave
push
pushl
rolb
add
jbe
mov
fs
pop
cmp
mov
ljmp
test
xchg
xor
loop
sbb
and
xchg
cs
push
insl
fistpll
fnstsw
mov
imul
inc
sahf
cmp
pusha
mov
imul
mov
ss
push
xchg
mov
inc
repz
call
lret
xor
insb
or
mov
xchg
addb
lea
out
inc
jmp
adc
rcrl
jle
xchg
cmc
xor
mov
stos
mov
data16
push
repnz
jmp
mov
xchg
idivl
push
leave
pop
push
pop
cwtl
or
iret
ja
mov
std
mov
movsl
sub
jb
js
add
out
js
jb
popa
das
pop
repnz
dec
call
loop
inc
shrl
mov
leave
sbb
imul
sbb
enter
aas
lcall
ret
pusha
out
jne
jb
lods
xor
and
stc
insl
or
jmp
dec
mov
int3
imul
sbb
mov
mov
dec
jmp
fwait
push
repz
andl
out
jno
lods
xor
and
or
addr16
push
pause
mov
sahf
xor
mov
arpl
xchg
jne
in
repz
mov
or
mull
cmpsb
xchg
xchg
mov
loope
sub
push
mov
pop
rorb
sti
cmpl
push
scas
sbb
int
call
sub
lea
incl
int
ljmp
xlat
leave
cli
je
call
sbb
or
bound
call
dec
cltd
pop
movsl
inc
fistpll
js
mov
jle
mov
test
push
mov
sbb
xor
stc
push
lods
das
les
ret
sbb
loop
and
enter
gs
pop
cld
mov
xchg
pop
cltd
std
lcall
and
decb
xchg
xor
test
jmp
jmp
lahf
fwait
divb
fisubl
inc
gs
xorb
lret
dec
iret
cmc
insb
and
push
mov
jns
add
and
push
imul
enter
ds
xchg
sahf
andb
movsb
mov
lahf
add
lock
sub
fcomip
lahf
jmp
imul
and
jmp
sti
push
shl
add
mov
mov
jnp
bnd
call
cld
xchg
cltd
push
mov
mov
mov
lahf
mov
fwait
aas
call
scas
dec
loopne
or
mov
sbbl
xor
rcll
outsb
sub
fiaddl
outsb
dec
xchg
cmp
lods
aad
lock
daa
les
sarl
jae
xchg
in
mov
cld
repz
repnz
or
dec
jmp
fisubrs
lahf
xchg
nop
xchg
in
ret
sarl
es
mov
frstor
jecxz
and
jl,pn
fabs
cmp
mov
mov
xor
dec
stc
fidivrs
mov
das
mov
ljmp
cld
bswap
xor
or
mov
mov
nop
pop
xor
lret
arpl
push
mov
sahf
dec
push
test
mov
jbe
lock
ljmp
notl
mov
stos
xor
push
pop
nop
mov
inc
ret
sbb
loop
call
les
dec
outsl
incb
cltd
outsl
cwtl
xchg
xor
pop
dec
into
imul
dec
leave
cld
jmp
rolb
mov
jge
loop
fstpt
pushf
fsubs
call
out
push
fbstp
adc
push
cli
cld
outsl
jle
shlb
clc
push
sub
dec
inc
movsb
cmp
aaa
scas
cld
fisttps
stos
cmp
pop
fs
inc
jl
outsb
jae
jle
pop
cld
cmp
push
mov
inc
push
adc
fistpll
lahf
xlat
cmp
jl
jne
das
adc
ret
daa
jle
sar
clc
xor
xorb
insb
hlt
rorb
nop
ja
xor
push
fsubr
jp
sahf
popf
push
lea
shl
lcall
and
or
cltd
aaa
aam
push
cmpsb
dec
in
lods
add
leave
cmp
stc
xchg
insb
or
fdiv
xor
push
mov
ljmp
adc
sahf
pop
aaa
rorb
and
mov
jo
stos
dec
into
lcall
rep
nop
jnp
cmpsl
sub
test
lahf
aas
fists
mov
xor
out
loope
stc
mov
mov
out
sarb
scas
idivl
insb
jl
sbb
sub
nop
fldt
push
leave
and
outsb
lock
push
add
popa
incl
outsb
push
sub
push
dec
sbb
iret
scas
mov
mov
mov
decl
ja
notb
push
les
ljmp
incb
adc
adc
mov
jecxz
mov
dec
pusha
dec
pushf
inc
out
sbb
cmp
in
jno
outsl
mov
mov
into
loopne
push
mov
decl
xchg
data16
pop
int3
push
cmp
shrb
subb
mov
dec
ret
xchg
dec
jb
or
fstps
shl
dec
mov
xor
nop
out
fwait
outsl
inc
pop
popf
gs
add
out
mov
arpl
repz
adc
inc
xchg
sahf
fsubrs
xchg
xor
xchg
add
mov
push
aam
clc
stos
lock
or
dec
add
pop
shlb
outsl
jle
push
sbbb
xor
insl
icebp
or
push
std
cld
sub
jmp
pushl
mov
ljmp
and
pushf
mov
adc
inc
lret
mov
int
fistpll
jns
movzwl
sub
notb
scas
cli
mov
mov
adc
enter
or
inc
ja
xor
scas
inc
pop
sub
imul
dec
mov
sub
and
lcall
xor
movsb
pop
pop
inc
movsl
dec
out
sub
inc
pop
shrb
xor
sub
pop
jge
mov
add
je
fst
cwtl
xor
mov
or
push
lret
repnz
bt
push
and
mov
inc
pushf
cmp
out
aam
pop
mov
adcb
not
movsl
adc
div
sar
mov
mull
and
mov
fnsave
arpl
int
cmp
iret
cli
lea
nop
mov
lock
lea
cmc
loope
fmuls
push
sub
out
cld
sbb
in
dec
ret
push
cmp
rcll
dec
call
and
enter
xchg
jp
mov
int
loope
fistpll
icebp
sbb
push
mov
cmp
cld
nop
lea
lcall
xor
call
and
and
inc
mov
clc
sub
lahf
mov
pop
or
sbb
sbb
pop
jo
cmpb
nop
jnp
and
ss
pop
das
movsb
inc
xor
push
outsl
adc
insl
add
mov
and
pushl
iret
data16
and
in
inc
push
insl
or
mov
out
xlat
or
pop
test
mov
pop
mov
lock
mov
fstpl
call
cmp
pop
ret
hlt
dec
jmp
dec
in
mov
pop
in
fistpll
movsb
jne
cmp
xor
mov
mov
dec
ljmp
in
sub
aam
orl
sbb
mov
add
leave
cmp
cli
fsts
insl
fidivl
mov
xlat
loopne
cmp
call
fcom
ljmp
cmp
pop
jl
and
jl
jl
ljmp
inc
mov
nop
adc
lods
dec
sub
pop
mov
dec
and
inc
fs
out
add
cld
pop
nop
mov
insb
mov
fldcw
mov
push
lods
sub
fwait
out
jp
insb
es
popa
fstpl
or
mov
mov
jae
fdivrs
push
das
add
stc
or
mov
lcall
inc
loop
mov
aaa
jg
add
jmp
push
lock
iret
inc
aaa
fmull
push
pop
enter
aas
mov
xchg
push
pop
mov
cld
cmp
cld
pop
outsb
shrb
addr16
fcomp
xor
stc
adcl
mov
sbb
push
je
lods
jb
pop
inc
pop
xchg
inc
scas
aaa
ja
jmp
leave
push
cmpsb
sub
movsl
mov
ja
jg
xor
data16
aad
fwait
gs
mov
icebp
push
ss
mov
inc
int
sub
loop
pop
movsb
cld
add
aas
repnz
cmp
lods
test
jae
dec
mov
stc
aaa
mov
adcb
inc
movsl
lahf
pop
cmc
sub
sbb
out
aas
sbb
mov
cmp
xchg
lea
jno
and
mov
cmpl
push
inc
loop
mov
incl
and
.byte
call
adc
inc
loopne
inc
adc
orl
inc
sar
xor
inc
sbb
sar
pusha
call
jnp
inc
add
add
cmp
pusha
and
xor
add
and
inc
xor
inc
outsb
jg
pop
push
sbb
sub
add
rol
pop
or
fldl
sub
adc
add
pop
xchg
addl
jg
xor
and
adc
pushl
xor
addl
roll
rcll
mov
lahf
xor
sarl
push
add
sbb
push
addl
lahf
std
cmp
sbb
adc
add
bound
push
and
or
pusha
push
inc
inc
orb
add
or
jo
inc
xorl
negb
cmpb
dec
subb
add
lcall
int
in
pop
cld
inc
cwtl
pop
pushl
in
mov
sbb
add
stos
jmp
mov
lcall
xor
test
cwtl
pushf
xchg
incl
leave
sub
movsl
add
push
sti
out
pushl
pop
rcrl
xchg
sub
addl
adc
mov
or
xchg
in
fdivs
cmp
sub
in
pop
add
or
cmpsb
push
mov
pop
adc
xor
xchg
add
jg
add
inc
cld
dec
pop
mov
lods
fmul
push
adc
out
outsl
sub
xor
mov
outsl
outsl
bound
add
add
insb
daa
mov
int3
rcrb
mov
inc
fistpl
fiaddl
insb
adcb
fldcw
push
sub
decl
inc
lods
ud1
out
add
out
and
ljmp
add
pop
or
add
mov
nop
ljmp
jbe
fucomp
mov
inc
adc
stos
mov
int3
pusha
hlt
cmp
fsubrl
incl
xor
add
xor
in
out
cmp
inc
xchg
loope
loopne,pt
xchg
cmp
add
mov
icebp
mov
add
mov
mov
fs
jo
in
jmp
aas
add
sub
les
lock
daa
add
add
sub
ja
shrb
add
xor
xor
ljmp
shr
add
add
push
shlb
sbb
out
xor
jge
cld
popf
or
cltd
add
daa
les
adc
loop
mov
and
mov
repz
sub
cmp
insl
divb
or
add
loopne
std
add
pop
jg
add
inc
ljmp
sbb
inc
inc
pop
outsb
mov
push
in
push
push
test
push
shll
ljmp
daa
ss
adcb
dec
xchg
iret
fildll
sarb
repnz
rclb
je
sbb
sub
add
mov
test
movl
pop
clc
jne
testb
or
ljmp
adc
jns
dec
cmpsl
adc
xchg
or
dec
xchg
or
lock
fisttpll
or
fimuls
lcall
sub
mov
addr16
lcall
dec
or
jmp
xchg
jo
xor
std
test
dec
ficoml
sub
add
push
mov
push
movsb
or
sbb
or
push
sbb
or
add
or
ret
add
sbb
cmovne
mov
fisttpll
sub
jmp
push
inc
or
mov
mov
mov
stc
imul
xorl
out
jmp
add
add
cmp
mov
lods
pop
aaa
and
inc
add
push
mov
pop
xchg
inc
rolb
icebp
stc
and
or
rcl
movsb
mov
lods
add
xlat
inc
andl
dec
fbld
shr
xor
xchg
insb
xchg
push
popf
pop
out
inc
fdivr
aas
add
clc
ret
xor
int3
sbb
push
cmp
xorb
jmp
aaa
aad
out
add
fs
cs
rolb
int
mov
push
movsb
mov
ja
lock
add
add
movsl
inc
rcrl
xor
int
loope
and
mov
sub
loop
incb
mov
cmpsb
cld
out
cmp
cmp
out
xchg
lahf
add
out
mov
pop
add
jmp
jge
add
arpl
mov
mov
js
iret
pop
xor
mov
pop
jl
xor
dec
sub
js
and
fldt
ljmp
loope
and
loopne
mov
xlat
popa
call
nop
shr
pusha
inc
pusha
dec
push
les
cld
push
cmc
fsubs
pop
sbbb
jp
xor
test
add
jecxz
sub
push
nop
cmp
int
sahf
push
stc
add
push
dec
testl
mov
add
add
test
aad
pop
jb
mov
xchg
or
or
mov
addb
add
mov
jmp
icebp
pop
dec
adc
rcrl
ds
ja
in
adc
hlt
inc
push
popa
incb
pusha
or
out
dec
adc
push
push
outsl
dec
cmpsl
loope
pop
push
cmp
in
jle
data16
call
ja
sbb
lods
pop
pop
xor
or
push
bnd
push
and
fldenv
fisttps
and
pushf
xor
test
jg
data16
or
xchg
sub
and
pop
test
das
cli
mov
sbb
mov
aaa
adc
mov
add
xor
lcall
jg
jmp
and
push
push
sub
dec
mov
adcb
or
out
cmp
push
rorb
mov
mov
roll
mov
push
out
jnp
addr16
in
adc
mov
xchg
mov
lcall
nopl
mov
and
pop
mov
sbb
sbb
jae
add
lcall
push
adc
add
and
je
sbbl
call
or
mov
xlat
stos
xchg
add
dec
dec
jnp
mov
repz
adc
addb
xor
add
outsl
lds
cmp
mov
and
out
clc
mov
cmp
es
xor
xchg
cmc
jmp
scas
ja
inc
mov
jg
subb
out
jnp
mov
mov
or
and
call
and
adc
ds
push
incl
arpl
fiaddl
fildl
mov
jo
and
sbb
call
daa
cld
adc
pop
inc
cmp
dec
jmp
fcmovb
nop
xchg
cld
or
push
add
adc
cmpsl
cmp
inc
fimuls
adcb
rorb
sbb
loope
negl
loopne
fs
sbb
push
loope
rorl
incl
or
jecxz
ret
and
sti
dec
xor
mov
inc
pop
jg
enter
or
dec
scas
divb
in
or
fsts
xor
clc
sub
dec
ret
pop
jb
shll
pop
mov
shl
sbb
mov
and
inc
cwtl
cmpsb
xchg
fstps
add
mov
fimull
push
movsb
out
mov
pushl
add
hlt
sbb
xchg
or
repz
rorb
std
pop
cmc
stos
incb
addl
xorb
cwtl
cmp
sbb
push
fldl
jmp
or
loop
out
lcall
loopne
nop
fiadds
inc
addb
in
pop
push
in
mov
out
aad
movl
test
jmp
jmp
sbb
ret
movsb
pcmpgtd
lret
adc
ret
inc
sbb
icebp
and
dec
mov
rcrb
dec
lds
ret
adc
push
loope
and
pusha
dec
out
subl
sbb
pop
inc
or
shll
loopne
repnz
mov
mov
mov
aas
dec
mov
pop
std
or
sbb
xor
test
idiv
out
mov
adc
mov
fs
mov
pop
push
ja
xchg
or
ljmp
pop
jge
xor
loopne
loopne
inc
outsb
sbbl
filds
pop
mov
cld
dec
aaa
mov
shlb
aad
add
mov
jne
mov
xor
rorb
push
add
decb
lods
lock
popa
xchg
sbb
cld
push
cmp
add
pop
popa
sub
inc
adc
fdivs
rclb
ret
adc
int
add
cltd
call
add
ficomps
popa
addb
mov
add
push
inc
inc
sbb
xor
xor
pop
jp
dec
imul
pushf
pusha
and
repnz
lcall
jl
push
adc
fimuls
push
popa
sahf
cmpsb
xchg
nop
jns
push
nop
mov
lock
aaa
incb
dec
rolb
aas
lret
mov
rorb
cmpsl
or
and
aad
sti
sar
inc
push
cmp
pop
sub
es
jg
and
pushf
sub
ljmp
std
hlt
scas
sbb
sub
add
fbstp
aas
jns
xchg
add
stos
add
in
repnz
inc
sar
loop
mov
push
cld
mov
add
mov
xor
clc
and
enter
cs
push
movsb
je
adc
lods
ja
cmpsb
lds
xchg
cwtl
or
stos
decb
ret
mov
leave
fldenv
jo
pop
xor
and
fcmovnu
fbld
sbb
add
mov
add
lock
clc
pop
call
and
add
adc
pop
sbbl
or
rcll
jl
mov
lods
jp
mov
or
std
stos
mov
dec
pop
mov
mov
jns
call
or
lahf
mov
inc
lcall
js
inc
cmpsl
mov
dec
jle
mov
add
add
fidivrl
push
adc
push
and
push
xlat
jmp
pop
push
daa
push
ret
push
pop
inc
push
push
pusha
and
rorb
adc
pop
test
leave
decl
or
xor
mov
push
xor
jae
es
sub
cmpsl
jg
ja
fsubl
lock
sub
inc
sarb
pushf
sub
sub
enter
aad
pop
std
fistps
mov
add
sub
add
mov
jmp
add
nop
je
inc
jle
loopne
adc
xchg
add
and
add
insl
mov
adc
jg
clc
dec
mov
mov
mov
aas
jp
mov
add
dec
cmp
mov
sbb
insb
fisttps
or
push
insb
push
sub
add
cwtl
hlt
xor
dec
sbb
rorb
rolb
sbb
fs
xor
roll
in
add
adc
mov
mov
push
dec
cltd
cmp
jno
ja
mulb
fmull
add
je
rcll
add
incb
sbb
pop
fsubl
das
clc
pop
cmpsb
mov
jb
mov
xor
jge
icebp
dec
push
mov
std
and
iret
repz
pop
push
adc
mov
mov
inc
out
cmp
pop
mov
pushl
loope
lret
mov
xchg
inc
dec
add
jg
xor
jge
add
push
add
lret
and
jnp
decl
dec
aam
test
in
rorl
dec
dec
mov
sarl
test
jmp
loopne
xor
ffreep
shrl
das
sar
cmp
sbb
pushf
add
mov
loop
push
mov
ljmp
pop
icebp
jg
inc
out
mov
pop
push
adc
sbbb
andl
push
mov
adc
pop
in
sbb
fbstp
jl
push
pop
loope
mov
add
lds
cmp
and
je
lcall
push
ret
jle
jecxz
addl
sbb
loop
xor
es
lods
mov
add
imul
mov
pusha
popf
sbb
dec
das
cmp
or
repz
mov
aas
dec
popa
out
push
pop
add
mov
sarl
inc
adc
push
mov
or
ret
out
mov
mov
mov
orb
pop
push
inc
jae
xchg
push
outsl
aam
push
es
filds
or
cltd
cs
ljmp
out
and
decl
jp
push
dec
ja
inc
mov
jp
and
aas
outsl
inc
and
imul
pop
xor
dec
xchg
in
andl
scas
call
dec
pop
or
xchg
aas
ret
outsb
jmp
xor
les
inc
sbb
fidivrs
xchg
inc
loop
or
addl
mov
int
aas
loope
pop
and
sarl
pushl
mov
inc
mov
out
xchg
add
sbb
mov
shll
je
push
add
lret
push
nop
jns
push
incb
aaa
jl
ljmp
inc
add
jnp
push
sbb
or
jno
ss
pop
add
mov
pop
xor
stos
loope
add
mov
repz
inc
aam
pop
push
pop
scas
add
and
jecxz
mov
push
push
or
lods
popa
dec
mov
cmpsb
or
jb
pusha
cmpsl
lds
mov
dec
aaa
hlt
sarl
outsl
ror
andb
mov
roll
jecxz
mov
stos
jl
push
cwtl
cs
hlt
xchg
sbb
add
mov
mov
aas
mov
cmp
add
fdivr
insl
insb
imul
add
mov
nop
ja
jns
xor
ret
inc
imul
sbb
cmp
incl
jae
gs
adc
add
mov
inc
fs
sbb
jg
movsb
xchg
inc
dec
fldenv
dec
jae
ret
pop
mov
jmp
jge
loop
loope
inc
push
mov
pop
jle
cld
test
dec
and
or
push
ja
sub
pop
sub
jmp
fimuls
mov
test
xchg
clc
dec
in
xchg
jmp
cld
xor
mov
xchg
cmp
mov
push
add
pop
xor
or
jbe
ss
pop
hlt
inc
push
add
push
scas
movsb
pop
push
inc
stc
dec
subb
push
sbb
movsl
ja
mov
out
pusha
sarb
sub
inc
mov
inc
popf
lcall
sbb
sti
or
in
ficoml
push
decl
xchg
faddl
mov
inc
lods
mov
xchg
adc
loop
mov
push
ret
je
push
push
enter
cmpsl
cmp
jo
inc
stc
jmp
dec
mov
sbb
mov
adc
shll
sbb
add
mov
sets
sbb
clc
ret
cmpsl
and
mov
insl
popf
pushf
inc
jle
add
mov
xor
add
mov
push
push
mov
mov
mov
pusha
add
outsb
pushf
inc
xchg
out
stos
ds
testl
mov
fiadds
addb
arpl
adc
add
fwait
andl
sub
add
out
call
data16
aam
fldt
push
cld
xchg
imul
nop
ja
push
dec
testl
cmp
push
mov
dec
out
aam
testb
xchg
inc
ret
adcl
xlat
iret
fistps
and
mov
sbb
inc
push
fildll
mov
and
ljmp
fldl
popf
adc
repnz
movsl
out
incl
mov
adc
push
out
adc
inc
cs
adc
xorw
jl
bound
xchg
mov
or
mov
xlat
test
outsb
cmpsl
data16
popa
add
insl
out
loope
or
das
adc
cld
js
and
add
pop
lock
in
push
cmp
and
lret
test
jae
mov
ja
ja
andl
lock
fidivl
xchg
cmp
adc
lret
mov
push
cmp
sbb
jl
cmp
or
inc
xchg
push
add
js
add
add
inc
das
and
sbb
xor
mov
ficoml
mov
xchg
test
adc
add
fstpt
fadds
add
push
mov
mov
movsb
inc
add
outsb
cli
cltd
dec
pop
ds
fstpl
jle
add
scas
jp
adc
adcb
je
sbbb
loop
push
or
inc
and
dec
aad
icebp
repnz
fucomp
xor
pop
pop
je
xchg
test
inc
shlb
loop
div
mov
fld
ret
das
jbe
scas
pop
std
pushl
add
fwait
mov
adc
lock
out
int
aad
cli
push
out
adc
add
mov
sbbb
mov
int3
push
mov
push
push
cli
inc
adc
out
cwtl
or
in
outsl
push
fisubl
cmp
sbb
cld
inc
sti
clc
pop
mov
mov
insb
andl
cs
aas
mov
fadds
xchg
sbb
pop
jecxz
pcmpgtb
shlb
les
popa
hlt
bound
js
test
push
adc
sbb
aas
sbb
loopne
jle
stos
add
add
fsubs
hlt
test
lret
sub
in
xchg
aas
outsl
pop
push
test
add
fbstp
jns
leave
mov
push
data16
ds
or
or
bound
push
cwtl
lahf
subl
push
lock
in
incb
pop
mov
je
aas
out
and
or
test
xor
adc
out
rcrl
jmp
mov
jl
jle
loope
mov
test
movsl
pop
xor
jnp
int3
scas
ja
adc
scas
in
push
sub
fidivrl
inc
mov
in
jnp
in
mov
shll
inc
repnz
xchg
test
add
jg
jle
test
add
cmp
scas
xor
fistpl
ret
add
jb
lods
cmp
imul
xchg
jg
push
ret
imul
jb
rorl
in
sarl
xor
sub
fsubp
xor
hlt
fstpt
add
mov
in
push
add
jno
dec
mov
in
fistpll
leave
add
sub
or
inc
sub
fnstcw
rcl
movsl
inc
inc
sahf
xchg
into
test
cld
inc
push
inc
jge
sub
pushl
add
push
or
lock
iret
or
add
pushl
adc
int
mov
sbb
adc
push
icebp
jae
lock
ret
insb
xlat
sub
adc
fs
movsb
push
add
dec
aaa
xchg
mull
rorb
push
rep
subb
in
pusha
cmc
pop
rol
pop
je
gs
scas
out
mov
out
pop
mov
test
add
cmp
in
cltd
or
and
push
mov
fdivr
inc
push
cltd
add
pop
inc
out
inc
shl
in
and
or
sub
test
or
fistps
mov
in
mov
cmp
nop
mov
scas
xchg
data16
ret
sbb
aas
scas
pop
mov
fisubrs
sbb
fadds
out
gs
and
add
popl
movl
mov
jl
mov
xor
movsl
pop
add
jle
add
mov
subl
call
insb
jle
enter
mov
in
fists
add
xchg
sub
pop
push
aas
mov
sahf
repnz
cmp
sub
rorb
and
mov
add
das
push
aas
pop
fldl
adc
xor
ret
xor
mov
hlt
cmp
jbe
cmpsl
testb
call
jl
inc
pop
lods
ret
pop
push
aas
ss
loop
add
mov
or
in
repnz
jecxz
add
adc
add
inc
mov
jl
xchg
add
call
jb
or
push
jg
aas
loop
mov
ret
xor
xchg
jg
push
xlat
dec
xor
or
outsl
popf
sub
mov
sub
lock
mov
xor
jl
fsub
in
mov
addl
push
add
add
pop
push
push
sub
jecxz
jb
push
js
sahf
in
ljmp
aaa
mov
daa
inc
cmp
jo
add
stc
lret
adc
jns
and
sbb
inc
mov
addl
std
add
or
outsl
sbbb
lds
movsl
dec
roll
sti
bound
xchg
xor
lret
imull
mov
sub
lret
adc
mov
cmpsl
movsl
hlt
and
mov
add
idiv
add
inc
icebp
bound
and
add
pop
and
test
popf
fistps
add
ss
jg
imul
push
sub
mov
lods
in
mov
or
divb
into
popa
inc
stos
inc
inc
cmpsb
lahf
sbb
add
adc
ret
out
cmp
lds
ret
shl
sub
push
cmpsl
cmp
cwtl
loopne
sbb
push
push
xor
ljmp
jns
mov
pop
pop
inc
into
lock
std
mov
dec
out
xor
inc
or
push
mov
incl
subb
pop
or
or
mov
roll
or
addl
mov
mov
sbb
mov
mov
cmpb
push
cmp
je
inc
dec
clc
call
pushf
or
arpl
push
xchg
arpl
push
lods
mulb
xchg
xor
jns
inc
cmpsl
fs
mov
inc
or
xchg
xchg
inc
push
cmp
mov
shlb
fstpt
test
inc
dec
or
sbb
mov
cmpsb
mov
jo
daa
push
test
sub
mov
inc
dec
inc
xor
mov
mov
jno
xchg
cs
mov
inc
ficomps
sbb
nop
sub
adc
jo
iret
das
movsl
jecxz
xlat
into
inc
jo
int
int
dec
cld
inc
insl
pop
mov
das
xchg
andb
adc
push
push
mov
jge
push
add
adc
je
or
push
mov
or
or
call
adc
xchg
addb
push
dec
loop
dec
xor
stos
pop
xor
jnp,pt
lock
mov
arpl
dec
sahf
jno
push
cmp
imul
mov
adc
jne
pop
sub
mov
nopl
inc
mov
shrb
sbb
add
adc
lahf
inc
aas
sbbl
mov
loopne
add
ljmp
scas
movsb
sub
int
icebp
sub
cltd
inc
out
push
cld
push
lcall
sbb
lods
stc
mov
pushf
sti
nop
outsb
loope
mulb
cmpsl
loopne
jl
shll
shll
dec
xor
test
mov
cmp
lahf
jl,pn
into
dec
dec
and
jp
insb
adc
jmp
ljmp
cmp
call
sub
jle
bound
sub
sub
jg
push
push
test
cvtps2pd
cmp
push
or
mov
inc
dec
call
cmp
fwait
repnz
iret
mov
pop
add
je
jle
adc
sbb
pop
adc
roll
subl
adc
fmuls
jmp
push
out
nop
std
imul
stos
mov
ret
pop
jne
in
inc
gs
stos
push
sti
ret
inc
mov
xchg
or
ret
out
sar
dec
pop
push
add
xchg
pop
ret
aaa
lcall
add
xor
fidivrs
sub
fnstsw
jle
ja
jl
mov
cmp
add
or
xor
add
imul
popf
inc
inc
loopne
mov
jl
push
sub
inc
xchg
ret
std
aad
sti
jmp
data16
mov
and
pushf
addr16
in
and
or
pusha
add
fdiv
pusha
cld
pop
mov
inc
rorl
lea
outsb
mov
ja
sbb
scas
pop
or
mov
add
decl
ficoms
inc
pop
je,pn
mov
mov
aam
movb
clc
or
add
sub
jmp
ret
popf
aas
rclb
scas
push
add
push
sbb
cmp
andb
xor
mov
dec
push
ljmp
adc
pop
sahf
lods
inc
loopne
cmp
jmp
test
mov
pop
lods
in
add
fistpll
add
inc
adc
rcll
repnz
pop
cltd
mov
daa
add
dec
imull
mov
insl
aas
orb
jae
push
loopne
imul
out
repz
dec
mov
sub
icebp
mov
fwait
sub
sbb
movsl
mov
in
push
jns
mov
out
arpl
mov
pushf
xchg
add
aaa
inc
test
sarl
cli
cmp
sqrtps
xchg
xchg
pop
rcrl
push
ss
stos
add
fcoms
mov
adc
inc
lea
jnp
xchg
lods
cmpsw
imulb
add
xchg
call
mov
cmp
push
subb
cli
pusha
out
lods
push
jp
fisubl
loopne
shlb
pop
nop
push
sub
lock
or
pop
insb
xor
imul
in
cs
xor
xor
cmp
iret
ret
xchg
scas
cmp
and
iret
imul
iret
aaa
add
jae
mov
iret
and
and
mov
or
outsb
mov
mov
shrl
mov
cmc
icebp
stc
xor
xchg
mulb
pop
add
xor
popa
cmp
xlat
hlt
imul
jb
cmp
add
fwait
data16
inc
pop
int3
jecxz
mov
es
ret
push
push
mov
aas
sbb
lea
mov
sbb
fisubrs
test
ss
repnz
pop
sbb
push
and
scas
adc
adc
add
ret
mov
jmp
nop
ror
dec
xor
mov
inc
mov
icebp
les
lcall
lods
inc
and
and
cld
add
outsb
movsl
and
inc
add
adc
js
sub
xchg
out
and
loope
leave
fisubrs
rorb
dec
cmp
out
sbb
xchg
adc
test
add
xchg
ret
fwait
insl
mov
pop
pop
mov
mov
dec
sbb
mov
xchg
inc
fucomip
das
mov
push
pushl
jg
loopne
or
leave
test
cmpsb
or
cmpsb
subl
pop
add
xor
or
leave
and
jmp
pop
inc
inc
mov
fsubs
clc
lods
add
dec
sbb
or
mov
adc
cmp
fsubr
push
or
inc
adc
mov
xor
xchg
scas
inc
mov
add
dec
xchg
push
jp
fcmovnbe
jo
rolb
out
add
std
xorb
mov
shrb
pop
cmc
xchg
lahf
inc
pusha
sahf
rcll
cmc
dec
add
sbb
sbb
xor
xchg
sub
inc
fimuls
mov
daa
stos
jnp
pop
push
add
adc
call
cmp
loope
lock
push
mov
cmp
or
mov
dec
popf
fimull
cli
xchg
int
dec
imul
in
outsl
icebp
bound
lods
push
pop
aas
lock
lock
insb
lock
jle
sub
and
ljmp
mov
test
in
inc
daa
inc
clc
add
lea
push
fisttpll
pusha
fsubs
push
pushf
or
push
inc
aas
pop
fidivrs
ficoml
mov
or
add
loop
aas
inc
popf
xchg
repz
add
mov
aas
push
mov
mov
fldcw
jp
out
bound
out
pop
notw
mov
das
mov
add
into
pop
lods
jmp
test
fldenv
or
push
insl
jo
mov
and
adc
aaa
test
popa
dec
cs
pop
clc
and
rorb
add
stc
inc
jns
dec
popf
lcall
mov
out
ret
adc
ds
lock
push
loopne
fists
add
cld
xchg
push
pop
rorl
in
pop
rclb
shll
adc
addr16
repz
stos
and
ja
outsl
loop
jl
test
dec
lock
push
into
push
mov
sbb
out
outsl
mov
lret
xor
and
cmc
inc
add
mov
sbb
jg
inc
into
cmp
sbb
aad
mov
call
sbb
test
imul
xchg
in
into
push
pop
cli
dec
dec
mov
mov
or
mov
or
inc
xchg
mov
fisttpl
sbb
jo
pushf
push
cmp
jl
add
scas
mov
mov
inc
jno
test
push
lret
mov
sbb
pop
aam
sbb
jo
xor
mov
jns
xchg
fidivl
or
push
test
jle
movsb
fadd
leave
jle
shrb
stc
cli
push
and
arpl
mov
push
mov
push
jg
adc
pop
fmuls
lods
sbb
sbb
les
outsl
das
jg
mov
pushf
mov
mov
icebp
addl
mov
pop
or
pop
in
push
aam
push
adc
sub
ss
insb
push
mov
je
or
inc
fisubrs
inc
popa
pop
push
dec
or
mov
jle
fidivrl
sub
loope
and
leave
adc
nop
xor
mov
sbb
outsl
std
clc
js
jbe
aad
add
adc
frstor
mov
movsb
xlat
inc
push
in
fwait
mov
xchg
sti
jne
sbb
lea
insl
fisubs
adc
clc
add
icebp
enter
sbb
jecxz
push
cmpl
xchg
dec
xor
fdivrs
inc
loopne
lahf
dec
rclb
hlt
jo
sub
fwait
sbb
add
stos
xor
movsb
fwait
or
lods
iret
aaa
or
cmpsb
test
xlat
fildll
dec
addl
or
jns
push
add
pop
push
in
or
inc
fildl
jnp
jne
and
xor
iret
cwtl
mov
sub
adc
shll
inc
into
xchg
xor
or
fimull
movsl
sbb
pusha
clc
dec
sbb
cmp
loop
push
inc
inc
in
xlat
sub
push
test
jmp
notb
jb
bound
and
mov
pop
cmp
xlat
sub
push
mov
mov
xchg
sub
les
sub
fs
add
xchg
sub
dec
ffree
push
mov
lret
loope
icebp
outsl
loopne
dec
mov
push
pop
inc
pushf
mov
inc
sub
cmp
and
xchg
stc
ret
push
mov
dec
and
sub
fldt
pop
cmp
das
hlt
insl
mov
push
jne
subb
in
rolb
cli
mov
push
push
jge
scas
jo
test
cs
add
dec
sbb
dec
cld
and
sub
divl
adc
imul
sub
jp
push
and
add
sbb
pop
jbe
ds
imul
int
xchg
pop
push
add
xchg
dec
rclb
stos
mov
jle
xchg
sbb
push
call
inc
aas
cli
pop
pop
mov
pusha
or
popf
lret
aad
fdivrs
aas
ret
push
es
daa
nop
pop
imul
test
cmp
rolb
fs
mov
cmp
jns
sub
sub
out
int
pop
sub
push
popa
mov
addb
test
outsb
pop
clc
xchg
cld
sbb
xchg
enter
add
push
fisttpll
inc
shrl
jle
pushf
inc
les
mov
mov
mov
mov
in
addl
subl
repnz
fisubrs
test
cld
mov
hlt
mov
dec
mov
sub
fsubrs
and
dec
cmp
test
mov
std
jg
outsb
or
xchg
and
and
dec
pop
add
fiadds
jle
aam
jecxz
and
aas
out
inc
and
dec
enter
sbb
adc
mov
cmpb
lahf
dec
scas
dec
in
incl
push
or
xor
call
enter
push
push
popf
fadds
pop
add
push
outsb
xlat
or
jnp
in
push
inc
mov
mov
or
sub
jne
xor
decl
out
lcall
daa
adc
cld
int
cmc
jns
or
or
mov
jmp
or
mov
lcall
pop
pop
enter
loope
pop
mov
and
adc
xor
xlat
stos
call
push
sub
push
jmp
loopne
push
fstpl
aas
das
or
ret
cmp
push
adcb
xor
pop
fstpt
popa
arpl
mov
ss
mov
nop
data16
mov
clc
xlat
clc
mov
pop
lea
or
aad
pop
mov
rolb
fnstcw
js
inc
in
in
es
push
mov
push
lret
dec
arpl
xchg
jge
mov
xor
xchg
add
ds
out
sbb
xor
dec
stos
lcall
pusha
add
xchg
lea
mov
roll
pop
enter
hlt
mov
jns
hlt
push
adc
and
push
jecxz
cltd
xchg
add
add
and
mov
subl
ljmp
jg
push
mov
mov
pusha
out
cld
cmpb
testb
out
push
lret
ljmp
pushf
jl
test
popl
scas
adc
insb
les
lcall
jo
jecxz
or
sbb
lock
or
jae
jle
mov
rcll
mov
jnp
add
mov
out
pushf
rorb
incl
mov
push
dec
sub
inc
mov
mov
sbb
mov
sbb
pop
jmp
jbe
testl
scas
pop
out
mov
mov
fdiv
aaa
dec
sahf
dec
insb
pop
adc
add
inc
clc
dec
adc
dec
ja
pop
ja
jne
jg
sbbb
mov
or
mov
sub
and
mov
iret
insb
cmp
mov
adc
cmp
lea
nop
out
cmp
aam
ljmp
adc
aam
push
je
sbb
fsub
pop
loop
xchg
sub
test
mov
lock
cltd
add
sbb
inc
jmp
sbb
loope
push
push
test
mov
and
cmp
push
insb
push
fisubl
or
in
cmp
je
pusha
push
xchg
xchg
jae
test
mov
xlat
fwait
fwait
inc
jnp
push
push
rorb
jg
ffree
lods
test
jle
mov
mov
iret
dec
cmp
push
mov
jae
or
and
sbb
pushf
cmp
xchg
jno
out
add
roll
jo
mov
push
xor
popa
adc
ret
pop
aam
ss
pusha
and
dec
inc
mov
adc
inc
into
push
xor
adc
js
inc
lahf
ljmp
push
test
push
in
ds
inc
bound
sarl
mov
mov
cmpsl
jle
mov
cmpsb
mov
jle
sbb
push
or
mov
loope
adc
cmpsb
rcl
pop
xchg
test
pop
jg
aas
jae
cmpsb
inc
jge
xor
pop
insl
sbb
repnz
jg
inc
mov
adc
shrb
push
add
sbb
push
addr16
stos
add
push
xorb
loopne
adc
data16
push
cmp
adc
cld
mov
ljmp
outsl
imul
leave
fsubs
in
dec
test
shrl
hlt
xchg
adc
push
lahf
and
test
push
sub
inc
sahf
popf
enter
adc
xor
call
pop
sub
fmuls
arpl
ret
push
cmp
cmpsl
add
sbb
xchg
les
leave
pusha
xor
ficoml
or
int3
pushf
lret
roll
mov
ret
sub
push
cld
das
popa
incb
enter
xchg
pop
jle
outsl
add
xchg
popa
jge
idivb
add
and
cmp
mov
sub
or
into
and
cli
or
push
xor
and
cli
movsl
imul
pop
mov
in
sbb
pop
rcrl
mov
mov
mov
mov
lock
fistpll
adc
out
xchg
adc
push
test
jl
mov
repnz
mov
jb
dec
inc
sbb
rclb
std
rcrl
add
xchg
sub
add
push
gs
or
add
in
aam
clc
or
or
inc
push
xchg
addl
push
xchg
in
pop
stos
stc
clc
xchg
mov
movsb
push
fdivr
and
pushl
or
cmp
inc
fwait
add
add
pop
aad
popa
shll
cmp
and
clc
inc
incl
lods
lcall
popf
adc
dec
jg
sbb
push
pop
insl
int3
dec
add
les
adc
cmp
mov
jl
and
loopne
stos
push
dec
aad
jne
cmc
add
sub
stc
jge
hlt
or
out
cmpsb
or
add
enter
jmp
add
inc
leavew
push
lods
repz
loopne
clc
inc
movsb
sub
mov
jae,pt
sbb
sub
mov
xchg
sub
jmp
jecxz
add
outsb
xlat
inc
call
js
clc
sub
add
popaw
add
cmc
push
nop
xchg
lds
movsb
mov
stos
pop
jge
add
das
mov
rolb
mov
adc
sbb
pop
addr16
sbb
mov
sub
scas
dec
dec
adc
stos
outsb
cld
repnz
and
call
xorb
jae
mov
or
roll
mov
pop
popf
lret
clc
fbstp
stos
jl
pusha
cmpsl
or
mov
mov
xchg
dec
pushf
dec
push
mov
and
push
pop
jg
lock
xchg
xor
out
or
sub
xor
es
jmp
inc
push
orl
pusha
xor
mov
push
out
faddl
xor
push
into
test
dec
std
xchg
push
sbb
jno
sti
cmpsl
jecxz
idivl
xor
or
and
push
inc
xchg
xor
inc
stc
mov
jle
cmp
xor
push
out
sbb
daa
or
cvtps2pd
mov
add
sarb
xchg
inc
jne
add
add
mov
push
adc
scas
lahf
pop
out
stc
loopne
fidivl
out
add
add
ret
fs
fs
andl
dec
call
stos
sub
mov
and
int
aas
xchg
add
jo
mov
icebp
xchg
jg
mov
out
ds
inc
sahf
or
cmp
jmp
iret
mov
cs
sbb
cmp
repnz
mov
sbb
stc
test
pop
inc
adc
aas
outsb
mov
mov
shlb
stc
loope
and
push
push
fistl
inc
mov
lock
pop
rorl
filds
pop
mov
push
test
add
pushf
sub
push
mov
out
push
sub
inc
add
movsl
adcl
mov
int
or
ljmp
int
addb
shrl
mov
fwait
pusha
incl
jo
pusha
add
push
cmp
push
jge
loop
mov
push
popl
add
fisttpl
lret
add
outsb
jl
lods
add
daa
add
inc
in
mov
incl
ret
daa
jle
add
inc
adc
jmp
xchg
push
ret
jb
mov
jmp
or
sti
pop
rdpmc
add
dec
loopne
pop
add
cmp
mov
mov
jge
cmp
pop
loopne
pop
or
popf
jns
inc
add
imul
fs
add
std
cli
inc
dec
andb
or
dec
and
out
les
add
jle
popa
xlat
aas
and
das
sbb
mov
add
enter
xor
pop
sbb
fsubrs
mov
push
xor
cmp
xor
mov
test
add
xchg
jo
divb
adc
and
loope
mov
add
outsb
lret
mov
jns
shl
popa
nop
xchg
pop
xchg
lods
cmp
cld
shl
test
in
sub
shlb
cli
aad
sub
sub
ret
and
clc
jmp
loop
imul
pop
js
jmp
dec
call
mov
mov
cmc
adc
xchg
pushf
int
and
decl
adc
sub
cmpsl
sub
aas
or
add
flds
xor
mov
fsts
shll
test
subl
push
dec
pushf
data16
or
mov
lods
cld
add
scas
add
shll
fadd
sbb
mov
dec
dec
lcall
push
sub
mov
lcall
popa
push
lds
lea
cmp
movsl
add
pop
cmpsb
pop
fimull
mov
es
sahf
pop
pop
int3
add
testb
ljmp
add
outsl
movsb
mov
inc
sub
and
mov
js
ljmp
filds
inc
xor
add
roll
enter
test
xchg
jg
aam
loope,pn
or
das
mov
and
pop
js
push
inc
mov
mov
and
pop
pop
fwait
xchg
add
aaa
jecxz
add
cmp
sub
pop
sub
jmp
jg
outsb
adc
jbe
xchg
and
mov
fs
adc
push
mov
out
repnz
test
fwait
std
dec
pushl
mov
mov
inc
lcall
aas
out
jno
jg
push
pushf
push
mov
scas
leave
les
push
jp
mov
es
inc
ja
pop
outsl
add
inc
stc
or
push
xchg
inc
mov
fcomi
jg
lahf
loopne
adc
push
jg
dec
adc
or
dec
mov
cmpsl
mov
sbb
cli
imul
out
mov
push
in
repnz
test
push
decl
aas
mov
and
cwtl
add
sti
bnd
fdiv
pop
or
xchg
or
fcmovbe
cmp
cmpsl
mov
jp
out
mov
inc
xor
insb
dec
stos
sbb
dec
ret
subb
test
rorb
sub
jp
mov
push
xchg
mov
dec
loopne
mov
or
add
add
or
out
ret
push
loopne,pn
sbb
jmp
cltd
mov
faddl
subl
cld
std
push
rolb
cmp
jmp
mov
lock
sub
std
repz
push
adc
mov
mov
daa
std
decl
scas
jb
cmp
jg
lds
loop
add
push
mov
xchg
fldcw
mov
pushl
mov
push
jecxz
imul
mov
daa
mov
inc
insl
mov
xchg
mov
mov
idiv
cmp
fistpll
ljmp
inc
nop
shl
xchg
jmp
xor
push
sbb
and
mov
or
out
mov
cld
cmp
pop
cs
or
and
test
push
loope
bound
add
or
add
jecxz
cmp
call
mov
out
xchg
jmp
inc
adc
inc
hlt
out
jne
in
mov
aam
add
sub
outsb
movsb
add
xchg
das
push
mov
mov
insb
add
mov
sub
imul
cmp
hlt
push
pushf
mov
dec
idivl
lds
add
or
push
sub
sub
adc
mov
dec
mov
fs
mov
fs
nop
sahf
inc
test
push
call
jg
inc
inc
add
or
in
adc
cmp
lods
mov
stos
cmp
mov
push
jmp
dec
mov
call
mov
cwtl
ja
cmp
add
pop
leave
fwait
out
mov
nop
orl
or
cmp
mov
lcall
dec
cmpsb
std
add
ret
int3
push
cs
cmp
inc
push
test
xchg
mov
inc
lods
dec
dec
mov
mov
fmull
js
jg
mov
imul
inc
outsb
add
pusha
and
andl
jbe
imul
int3
or
fs
test
cmp
mov
sbb
decl
inc
pop
xchg
dec
mov
or
sbb
mov
pop
dec
call
adc
push
call
fdivrl
push
clc
out
clc
shll
lret
fwait
or
in
xchg
push
mov
lock
push
mov
mov
stos
add
pop
clc
mov
test
orb
mov
ss
add
cmp
pop
adc
xchg
xchg
push
lock
popa
test
pop
shrd
scas
movsl
mov
xchg
dec
push
popa
inc
add
fmuls
and
ljmp
bnd
dec
lcall
fwait
push
and
insl
adc
aam
dec
jle
mov
ud0
xchg
or
dec
add
cld
es
in
popl
cmpsl
inc
ja
jl
je
aas
and
adc
ret
pop
mov
jno
in
enter
adc
mov
divl
mov
cs
sbb
fidivrl
int
std
decl
add
sub
add
xchg
sahf
push
sbb
and
add
imul
xor
or
mov
jg
push
mov
shll
lods
popa
and
in
sbb
incl
dec
rcrl
adc
mov
outsl
and
sbb
xchg
shlb
adc
aaa
push
sbb
add
mov
cmp
lea
adc
data16
lcall
sub
add
and
das
inc
adc
cmpsb
lcall
mov
adc
add
add
fbstp
repz
aaa
cmpsb
cmp
xor
loop
and
mov
sbb
jmp
push
andl
push
ret
scas
push
xchg
add
cld
cli
ja
sbbl
js
mov
ret
xchg
fldenv
das
pop
dec
repnz
loopne
scas
push
ret
in
inc
sub
xchg
lcall
pusha
je
xchg
imulb
inc
sbb
mov
clc
call
out
mov
insl
dec
and
mov
call
loope
or
fldl
and
ret
push
adc
add
mov
outsb
and
out
insl
mov
xorb
sbb
mov
pop
jg
pop
mov
cmp
cli
mov
aas
cmovl
nop
adc
js
push
jg
sbb
call
mov
test
push
outsl
in
sbb
adcb
stos
mov
decb
cmp
rorb
pushl
lds
cltd
inc
or
dec
ss
lret
loopne
xchg
fcomip
jmp
loopne
inc
add
jl
inc
dec
cwtl
xor
push
nop
scas
mov
jo
add
stos
inc
xchg
test
andl
add
loop
and
dec
adc
scas
jmp
popf
jo
arpl
mov
decl
in
sti
add
and
pusha
inc
dec
inc
imul
pop
addr16
hlt
outsb
xor
cld
jmp
sub
dec
sub
inc
outsl
nop
inc
jbe
js
fs
lods
push
pushl
scas
cwtl
inc
les
jp
xor
leave
inc
test
sub
and
inc
cld
adc
lods
sub
loopne
movsb
add
push
jle
cwtl
push
lret
mov
mov
push
pop
lods
cld
lods
data16
pop
mov
and
push
jmp
insl
ficompl
fisttps
adc
lock
ljmp
faddl
js
cmp
arpl
add
adc
xor
out
subb
imul
loopne
dec
or
adcb
scas
out
decl
mov
jbe
adc
popa
sub
mov
fsub
xchg
push
inc
stos
jg
or
enter
aas
aam
add
xor
roll
jg
jmp
xchg
add
xchg
lcall
push
add
pop
inc
xor
insl
pop
mov
push
jbe
pop
ljmp
xchg
or
loopne,pt
mov
clc
jg
lock
mov
movsb
sahf
xchg
cwtl
in
xor
mov
pop
mov
mov
pusha
outsb
inc
or
insl
mov
fs
add
andb
mov
cmp
addl
ss
jecxz
call
xor
lods
sub
jmp
orb
xchg
jbe
lea
mov
sbb
std
dec
das
icebp
negb
dec
dec
cmpsl
ret
or
incl
jbe
mov
imul
ret
arpl
mov
addr16
cmp
cmc
jecxz
add
das
dec
hlt
push
jmp
das
or
xor
aad
mov
or
push
sub
mov
leave
jnp
fs
xchg
jge
shlb
jp
mov
in
aad
andb
inc
and
mov
jl
sbb
cwtl
lods
pop
cli
dec
loopne
mov
push
and
push
repz
push
fucom
jne
xchg
mov
push
ret
icebp
add
das
pop
jl
add
cmc
inc
jecxz
sarl
mov
add
shl
adcb
lds
data16
das
mov
in
or
jns
dec
sub
fildl
cmp
push
js
popa
imul
mov
xor
pop
push
jmp
sub
lret
sub
add
outsl
mov
dec
je
das
std
xor
or
xor
jmp
div
sub
xor
ret
sbb
out
mov
fsts
imulb
or
ljmp
movl
leave
add
roll
addr16
or
adc
or
jnp
cmpsl
pop
enter
mov
mov
fdivr
pushl
mov
inc
inc
mov
subl
xor
cli
lcall
jmp
mov
mov
gs
call
rcll
sbb
aam
scas
and
mov
mov
cmp
aad
mov
mov
xor
rcrb
fsts
adc
repnz
std
or
pop
pushl
aaa
push
mov
or
add
popf
cmp
xchg
jbe
insl
test
dec
aam
scas
lcall
ret
scas
inc
dec
icebp
jnp
test
leave
adc
cli
iret
add
inc
xor
dec
inc
xor
mov
inc
sarl
andl
push
fs
cli
add
outsb
push
add
xor
lret
jle
mov
fwait
mov
jne
mov
movsb
dec
lret
les
push
addb
mov
leave
and
add
or
pop
inc
ljmp
inc
and
les
cmp
lds
fmull
pop
jo
fsub
dec
testb
dec
cmp
jge
ja
adc
push
mov
mov
mov
xlat
popa
loope
mov
test
or
rolb
inc
sub
mov
sahf
push
jle
jg
in
inc
mov
push
xchg
lods
adc
popa
adc
hlt
inc
scas
pop
mov
mov
jnp
xor
add
dec
lcall
into
shr
adc
mov
cmp
mov
add
lods
mov
mov
push
mov
xchg
push
and
rorb
je
sub
mov
push
mov
outsl
cwtl
sub
mov
aam
cmpsb
rclb
enter
cmp
sahf
add
rorl
mov
mov
mov
mov
push
lret
or
pushf
push
sbb
cmc
data16
or
and
lds
lea
add
outsb
cmc
scas
mov
or
cmp
in
inc
xchg
divl
xchg
nop
xchg
mov
jo
je
lds
jg
pop
aam
repz
mov
push
inc
in
pop
fcomps
xchg
mov
mov
add
push
push
dec
inc
push
scas
or
out
adc
pop
js
sbb
in
xchg
xchg
inc
adc
add
loope
push
cld
lahf
jnp
leave
ret
test
rcl
or
cmp
add
cmpsb
adc
in
sbb
rcr
lahf
rolb
into
call
mull
sbb
dec
xchg
inc
xor
pop
fistpl
ficompl
add
pop
hlt
clc
jbe
dec
mov
sar
scas
imul
mov
shrl
add
mov
pop
add
pavgb
mov
mov
ret
sti
ret
scas
cli
fisttpll
xor
dec
scas
and
lea
jb
jbe
outsl
mov
orl
or
jecxz
icebp
mov
je
mov
sbb
jge
loopne
dec
ficoms
pusha
cmpsb
scas
call
pop
loop
pop
cmpsl
pop
lock
ret
mov
decl
lock
or
jle
addb
outsl
fwait
cld
or
les
inc
mov
jmp
mov
mov
mov
dec
push
add
adc
mov
sub
std
cmp
mov
subb
pushf
cs
aas
movsl
dec
paddsw
or
lock
mov
hlt
sbb
les
popa
mov
pop
jg
or
inc
inc
mov
jnp
leave
insb
pop
xor
test
repz
decl
mov
fmull
data16
es
pop
jl
lahf
inc
mov
out
push
adc
mov
sbb
xor
imul
pop
hlt
xorb
lods
out
adc
sbb
add
pop
cmc
fwait
sahf
mov
add
addl
pusha
inc
inc
insl
outsl
gs
mov
mov
pop
or
jg
icebp
lret
dec
xor
into
pop
loop
push
jmp
push
sbb
push
aad
push
mov
adc
cld
fbstp
inc
xchg
mov
in
mov
popf
mov
xor
mov
adc
adc
push
idivb
mov
cmp
arpl
jge
sbb
xor
adc
pop
incl
ret
lds
aaa
iret
cmp
leave
sarb
push
call
add
mov
xor
jb
dec
mov
imul
ret
movsl
push
jmp
inc
cmpsl
push
push
pop
outsb
mov
push
and
mov
lock
sbb
inc
sbb
movsl
jno
cmp
dec
lcall
jecxz
push
lcall
das
sbb
add
adc
lock
pop
mov
cmpsb
and
adc
pop
movsl
xchg
push
out
and
xor
movsl
rclb
add
shr
push
mov
ret
fs
idiv
inc
bound
dec
sbb
mov
xlat
push
js
mov
cli
repnz
sbb
fsts
shll
push
mov
rcl
lea
lahf
aaa
popf
loopne
sbb
push
cli
dec
aaa
lock
cmp
lgs
pop
mov
dec
push
mov
sbb
imul
les
push
stc
pop
cmp
pusha
jmp
btr
push
mov
inc
int
push
out
cmp
mov
lods
pop
jne
add
push
pop
mov
sub
sbb
sbbb
mov
adc
push
rclb
add
popa
jmp
jo
cmpsb
push
test
movsl
jo
mov
lahf
pop
lds
sub
decb
ja
test
pop
dec
xchg
mov
lods
jne
xor
mov
jno
movsl
nop
lret
adc
aas
ret
pop
aad
add
jmp
test
and
stc
adc
adc
dec
mov
mov
jo
and
mov
push
mov
and
dec
repz
sti
stc
push
adc
push
xchg
pusha
cmp
sub
std
pop
ret
cmc
addl
cld
dec
jl
scas
popf
push
adc
pushw
inc
xorl
dec
cmp
cmc
xchg
scas
pop
bound
mov
xchg
cmp
or
daa
sub
test
dec
stos
adc
add
sub
cli
dec
incb
test
shrb
popa
lds
xchg
cmp
pop
clc
int
push
and
stos
mov
adc
rcrl
in
mov
xor
ljmp
add
add
lods
pop
and
das
push
and
fimull
into
mov
sbb
daa
mov
or
dec
fimuls
cmpsb
fwait
push
ror
cs
sub
jnp
mov
dec
jne
or
or
fwait
imul
insb
mov
fcoml
xchg
push
push
adc
adc
idiv
pop
frstor
pop
or
aaa
push
mov
shlb
or
and
add
cmpsb
dec
cld
xor
add
xor
inc
pop
mov
adcb
mov
loop
add
jl
push
adc
sub
mov
pop
or
xor
hlt
xchg
sarl
mov
inc
xor
push
hlt
add
and
scas
mov
hlt
aad
mov
pop
xchg
sub
stc
aas
push
xor
push
insb
adc
or
pop
sbb
mov
mov
lret
push
push
or
sub
aas
jecxz
sarl
fbld
arpl
sub
ret
xor
lcall
test
hlt
cs
xor
xchg
xchg
or
clc
icebp
inc
xor
mov
jecxz
lods
shl
jo
xlat
mov
and
ret
std
jl
mov
in
mov
pop
sbb
and
or
pop
xchg
add
pop
cmp
pop
aas
aam
test
loope
sbb
fld
pop
dec
cmc
data16
xor
xchg
cmpsl
pusha
repz
sbb
out
sbb
pop
arpl
adc
sarb
push
popl
es
sub
int3
xchg
xorl
clc
add
xor
jp
adcb
decl
inc
cs
or
or
pop
test
negl
adc
lahf
jns
mov
test
neg
inc
daa
ret
stos
popf
inc
repnz
xor
insb
shlb
dec
or
adcb
mov
cmpsb
push
inc
cld
sahf
mov
pop
xor
or
lock
push
mov
pop
mov
mov
inc
stos
xor
xor
test
std
mov
xor
clc
inc
push
mov
sub
std
mov
adc
and
cmp
adc
call
xchg
pop
mov
mov
inc
cmpsl
jle
sub
divb
leave
jae
adc
test
inc
push
neg
dec
fs
mov
in
push
dec
mov
sbbl
sar
icebp
lock
pusha
movsl
jg
icebp
mov
ret
jno
adc
push
test
aaa
lock
xor
test
inc
outsl
js
imul
incb
push
test
add
ficompl
add
ss
xor
sbb
and
pop
rolb
stos
shlb
sbb
lret
std
outsl
cs
mov
js
jb
sbb
inc
lock
daa
cmp
pop
orl
aam
mov
aad
jge
xchg
notb
push
jl
popa
loop
enter
es
adc
nop
outsb
rclb
fsubp
xchg
and
pop
sbb
packsswb
and
jle
ss
int
xor
sahf
add
adc
mov
js
loopne
cmp
pop
inc
add
hlt
mov
in
addr16
enter
hlt
stos
psraw
inc
adc
pop
imul
add
mov
mov
mov
out
les
or
push
aas
jle
dec
jmp
xor
roll
xor
cmc
add
fst
cmovp
xchg
jge
stc
std
leave
xor
dec
mov
ljmp
mov
lret
pop
sub
imul
xchg
mov
push
mov
or
and
or
mov
dec
and
add
insl
ljmp
cmovno
jb
jl
mov
subb
call
fwait
outsb
push
shrl
add
pop
xchg
jo
cltd
icebp
insl
mov
out
cld
fcmove
add
shrb
neg
sbb
addb
ss
out
sbb
cmpsl
mov
popa
aas
push
leave
cwtl
stc
into
outsl
stc
loopne
decb
and
pop
jmp
pop
rolb
pop
pop
jl
jle
movb
cltd
adc
xor
imul
jae
out
test
jno
imul
lock
in
push
fiadds
xor
mov
mov
push
stos
inc
in
push
dec
repz
jg
mov
ljmp
add
push
les
dec
dec
add
mov
mov
daa
test
xrelease
stos
add
out
sub
popf
inc
popa
or
and
ljmp
push
mov
adc
dec
out
in
add
lds
aam
xchg
notb
mov
aaa
xor
stos
popa
mov
or
test
shrl
repnz
aas
sbb
fistps
fwait
das
inc
enter
aas
dec
pop
or
add
push
xchg
insl
test
popf
jle
xchg
repnz
mov
dec
cmp
call
mov
dec
xor
mov
cmp
sti
inc
and
test
sbb
xor
pop
jmp
pop
mov
sub
xor
addr16
dec
adc
cltd
dec
sub
out
mov
idivb
add
xor
jmp
push
adc
jb
add
inc
pop
aad
xor
inc
jns
xor
orb
pop
out
sbb
xchg
mov
adc
sub
inc
incl
sbb
icebp
aas
xchg
hlt
inc
add
idiv
les
lcall
mov
lret
pop
aam
dec
movsb
and
test
cmp
cmp
mov
ds
xchg
mov
push
sbb
pusha
mov
mov
lock
mov
or
cmp
aaa
sub
mov
pop
mov
lahf
jmp
loop
cmp
es
pop
or
add
and
cmp
jo
unpcklps
inc
add
jecxz
shlb
test
aas
add
inc
add
dec
mov
into
dec
push
das
mov
sub
inc
out
and
mov
dec
or
je
add
sbb
cmp
movl
or
into
and
icebp
or
xor
add
pop
fsubs
stos
js
inc
mov
sub
hlt
outsb
inc
cmp
push
add
or
xchg
std
cmc
rcll
pop
mov
outsb
fsubl
mov
jno
cld
scas
or
mov
arpl
xchg
mov
fisubs
xor
add
inc
and
add
pushf
outsl
push
cli
add
pop
in
es
inc
sub
mov
mov
add
popa
fadd
pop
or
insl
push
jge
outsl
sub
cli
pop
adc
adc
inc
mov
jno
xchg
push
es
imul
and
test
mov
inc
or
shrb
loopne
ds
jo
clc
popf
sbb
test
clc
mov
xor
add
add
cmp
sub
mov
dec
inc
imul
xchg
lret
jl
lret
clc
aas
mov
test
jae
cmpsl
stos
cmpl
xchg
jo
addb
mov
mov
nop
hlt
fistps
jns
pop
sbb
fcompl
xor
jle
sub
jno
mov
punpckhbw
rorl
lcall
mov
sub
insb
xor
mov
cs
cmp
and
cmp
or
pushf
add
or
mov
ljmp
xchg
stos
mov
adc
scas
addl
pop
popa
addl
add
mov
xor
scas
cmp
imul
stos
test
pop
in
ret
inc
pop
sub
sbbl
jb
cltd
push
dec
push
push
adc
inc
outsl
bnd
and
repz
jo
mov
inc
repnz
inc
jl
dec
pop
cmp
or
mov
decl
fs
sub
test
test
xor
or
out
iret
or
lods
lret
clc
shrl
int3
iret
push
dec
arpl
lcall
mov
adc
arpl
sbbb
paddsw
inc
aas
add
aam
in
sub
rcl
int
ds
push
loopne
cwtl
and
sbb
cld
es
jmp
std
in
add
pop
mov
scas
and
add
sub
inc
sbb
add
and
int3
jp
or
or
mov
sub
push
aas
or
cld
addb
ret
in
mov
pusha
xchg
repnz
sahf
xor
mov
aas
fidivrs
sub
pusha
push
jbe
xor
movsb
out
push
xorb
ljmp
jmp
cli
subb
fdivs
hlt
repz
ret
push
pusha
into
or
inc
repnz
pop
sbb
inc
or
sub
movsl
xchg
push
inc
add
inc
mov
repz
fs
jg
pusha
cmp
jecxz
push
stos
or
imul
pop
push
fsts
sahf
jbe
call
sbbb
mov
pop
or
add
jno
cmp
pop
add
inc
sub
push
inc
jne
ja
fs
fiadds
shrb
loope
xchg
pusha
sbbl
and
add
shlb
loop
inc
fldcw
sbb
cmpsb
in
inc
fsubr
jg
fistpll
test
inc
cmpsb
in
test
inc
loope
push
int
or
popf
mov
adc
dec
icebp
xchg
and
js
or
pop
movsb
lds
mov
test
shl
inc
lret
add
scas
shrb
movsb
mov
jl
or
test
cmp
jno
fists
aad
xor
jge
xor
ljmp
incl
fs
xor
test
loopne
or
ret
add
mov
adc
cli
fs
jo
mov
sbb
xchg
dec
dec
sub
inc
mov
mov
inc
mov
add
nop
loope
pop
sarl
or
imul
lds
rcll
mov
or
fistpl
dec
mov
dec
sbbb
xchg
cld
adc
xchg
add
cmp
scas
call
daa
nop
mov
cmp
add
bound
aaa
shl
add
cld
daa
push
aaa
xor
push
mov
xchg
iret
repz
pop
adc
push
rcrl
cltd
lea
insb
cmp
cmpb
shll
pop
out
movsl
mov
inc
pop
sbb
aam
cmp
mov
ja
mov
and
test
xchg
jne
jno
andb
push
pop
add
lahf
daa
mov
test
shrl
aas
js
mov
pusha
pop
and
push
repnz
lret
adc
mov
insl
jo
adc
cmp
add
rolb
push
adc
dec
inc
ret
sarb
lea
rolb
adc
nop
mov
mov
cmp
and
pop
xor
cmp
fsubrs
mov
daa
adc
popa
stos
ficoms
pop
push
and
jb
xchg
ds
jbe
clc
incb
test
mov
mov
mov
ja
push
add
notl
add
aad
sti
mov
push
in
xchg
popa
push
jo
xor
mov
dec
push
shl
and
das
pop
in
clc
sub
sbb
sahf
cmp
popa
mov
add
movsl
and
cmp
test
pop
roll
ljmp
mov
cmp
sub
decl
xchg
addb
push
add
push
je
adc
or
cmp
aam
pop
and
pop
test
dec
dec
fdivrp
push
dec
push
out
les
subl
mov
xlat
je
push
cs
imul
inc
inc
imul
lret
jecxz
jne
xchg
sub
shlb
xor
in
int3
inc
add
jg
les
aaa
xchg
fidivs
xor
sarb
and
cmp
mov
jno
add
loop
mov
inc
out
add
out
roll
mov
hlt
push
or
push
loope
cmovl
mov
lods
test
jmp
mov
cld
int
mov
insb
cmp
push
scas
gs
xchg
mov
imul
add
add
in
aas
cmp
cld
ret
stos
std
jne
add
ret
mov
xlat
call
jno
frstor
inc
addb
add
clc
add
push
stos
xchg
orl
das
jle
lret
xchg
subl
int
mov
mov
pop
das
adc
iret
lahf
shlb
and
call
ja
sbb
lock
mov
aas
xor
aad
sub
xor
mov
adc
pop
sub
into
mov
xorl
imul
add
stc
sti
add
lds
int3
out
push
loope
xchg
fnstenv
nop
out
inc
jp
int
arpl
xchg
cmp
push
jge
popf
cmc
pop
jge
int
rcrb
popl
hlt
mov
xor
pop
mov
hlt
ja
inc
or
cmc
arpl
ret
inc
jnp
jmp
pop
push
inc
pop
push
push
iret
aas
jmp
jmp
pop
sub
inc
or
bound
pushf
out
sbb
add
call
inc
mov
add
cmp
adc
xor
scas
xchg
ret
cmp
orl
enter
fcmovbe
aas
into
lret
cmp
cmp
push
mov
sbb
and
cmpsl
pop
imul
fildll
out
lods
push
xor
fnstcw
add
push
pop
test
clc
add
pop
dec
mov
xor
stc
sbb
inc
cmp
add
adc
clc
fs
idiv
sbb
rcrl
adc
push
mov
add
push
inc
int
stos
xchg
jge
das
sarl
and
pop
pop
xor
pop
clc
xor
in
cmp
push
pop
pop
aas
jo
pop
or
or
daa
inc
dec
dec
inc
ret
or
popf
add
insb
inc
in
sub
dec
jl
mull
je
pop
jo
or
nop
testb
pop
jo
add
cli
add
add
mov
push
pop
mov
sahf
loope
or
or
xchg
xor
mov
aas
js
pop
cmp
cmp
dec
in
outsl
cmp
inc
fstl
adc
dec
and
stc
mov
push
jmp
fwait
lock
sbb
call
shr
movsb
adc
lret
lds
movsb
pop
shrb
xchg
inc
sahf
leave
pop
fcompl
or
lods
psubw
sub
sbb
push
jle
pop
sarb
insb
ja
mov
jb
aad
xor
popa
sbb
syscall
pop
dec
sbbb
popf
mov
out
mov
adc
enter
adc
mov
lcall
notb
scas
mov
into
and
mov
push
sbb
xchg
adc
adc
cmpsb
sub
add
out
fisubrs
sti
cmp
pop
or
jo
mov
pushf
sbbl
add
sbb
and
lret
adc
imul
icebp
adc
popa
jp
push
bound
inc
idiv
cmp
loope
aas
pop
call
push
and
stc
lock
mov
loopne
test
xchg
jg
leave
or
dec
shl
mov
dec
jl
cmc
aad
stc
test
cmp
lods
dec
sbb
xchg
cmp
fiaddl
call
jp
insl
cmpsb
adcl
ss
pop
js
xchg
aad
insl
in
fidivs
loope
lret
icebp
add
inc
add
dec
jp
add
push
sarb
pop
in
js
test
mov
loope
test
jle
xchg
out
or
test
or
jne
pop
xchg
dec
jbe
int3
mov
bound
pop
add
fists
scas
pushf
aam
jp
fisttpll
out
sub
push
push
xor
add
push
xor
dec
pusha
sbb
pushf
inc
cmp
cmpb
shlb
xchg
adc
jg
stos
aad
bound
or
std
cmp
and
test
clc
cmp
repnz
xor
arpl
popf
cmpsb
cmp
mov
icebp
inc
dec
imul
out
jecxz
jmp
mov
mov
fldt
stos
cmpsl
incl
and
fcmovu
add
push
pushf
sub
test
nop
das
pop
ret
and
mov
lret
or
pushf
inc
daa
adc
cmpl
enter
sarl
sub
or
clc
ja
in
sub
pop
inc
ljmp
push
and
mov
gs
push
add
fwait
repz
xchg
add
xchg
aad
or
mov
filds
test
das
dec
std
leave
xlat
jle
xchg
sbb
pop
je
daa
and
ret
cmp
movsl
push
dec
mov
not
pop
shll
loop
or
sbb
movsb
adc
adc
pop
mov
sahf
mov
imul
nop
stc
sbb
data16
cmp
cmp
mov
test
add
push
fs
jge
popa
add
cmp
mov
ret
out
mov
cld
pop
and
sbb
loopne
xchg
sub
xchg
outsl
clc
lret
addl
push
stos
lods
decl
jae
or
fildl
lods
xchg
es
fcomps
addl
or
sbb
das
cwtl
cmp
pusha
clc
inc
inc
lret
outsl
fldenv
cmp
ja
decl
xchg
inc
add
adc
sbb
jo
lcall
sbb
add
mov
mov
sahf
xchg
lahf
xchg
scas
mov
jecxz
xor
hlt
lahf
fistpl
cli
adc
jle
mov
test
clc
add
xor
rorb
lea
or
lcall
xor
add
aad
mov
mov
popa
jge
rcrl
loope
loopne
shrb
and
shrb
arpl
push
clc
pop
add
mov
jmp
pop
mov
mov
jnp
cli
pop
sbb
pop
cld
push
inc
mov
xchg
fbstp
xor
cmpsl
jo
mov
or
in
xlat
jnp
add
les
mov
cli
inc
notl
dec
fs
xchg
or
dec
inc
mov
inc
ficoml
mov
popf
add
dec
fisttpll
in
pop
test
pcmpeqb
outsl
in
adcl
mov
das
loop,pn
add
xchg
pop
jnp
mov
inc
sar
movsb
sbb
enter
adc
cld
aaa
int
or
inc
sbb
sub
imul
or
jmp
std
jne
clc
fbstp
cmpsb
stos
mov
sub
jb
dec
clc
adc
in
pop
loopne
pop
mov
push
stc
shrb
xchg
jge
out
adc
scas
call
xchg
cmp
ljmp
mov
or
sbb
into
add
push
cltd
ja,pt
add
push
push
push
xor
aad
nop
incb
sti
cmp
pminub
xchg
and
dec
fadd
mulb
shrb
xor
xchg
int3
fdivs
sti
xor
mov
jg
mov
stc
dec
sahf
pop
orb
movb
lret
pop
clc
fisubrl
jnp
dec
shrl
jg
adcb
int3
mov
jl
sbb
jecxz
fwait
jb
je
push
js
jb
adc
xchg
push
andl
popa
in
or
arpl
push
incl
pop
pop
sti
and
daa
aas
push
cmc
mov
testb
lret
roll
popa
inc
push
cld
call
mov
cmp
int
inc
jne
push
or
xor
inc
out
sahf
inc
pusha
mov
dec
lds
xchg
lock
mov
xlat
jge
outsb
incl
mov
out
mov
or
fsts
adc
sbb
outsl
mov
adc
stos
pop
rcll
cs
xlat
dec
fdivrp
pop
cwtl
dec
mov
pop
inc
movsb
xor
lods
lock
xchg
js
sub
sbb
or
fisubs
push
fildll
cwtl
mov
insl
std
popa
push
std
cmp
scas
fdivl
jno
sbb
mov
pop
and
stc
and
mov
dec
mov
sbb
out
into
out
mov
mov
fbld
mov
jne
daa
inc
push
dec
test
push
mov
jp
mov
adc
inc
insb
hlt
popf
insb
pop
jbe
mov
arpl
movsl
adc
add
call
and
pushf
lcall
jns
xchg
test
and
jl
ds
xchg
cmpsl
push
jb
cli
in
fldcw
repz
incl
mov
add
sub
pop
or
aad
sbb
sbb
imul
cmp
mov
mov
clc
int
or
testb
int
jg
and
insl
loop
mov
aad
push
cmp
push
add
addr16
inc
int3
jmp
std
decl
andl
jbe
cmp
mov
adc
sbb
push
mov
lret
addl
arpl
ljmp
add
insl
and
xor
insb
sub
jno
mov
inc
ficompl
in
jle
push
es
pop
adcb
xchg
lds
imul
inc
xcrypt-ecb
cmpsl
or
mov
sbb
aas
mov
sbb
pop
pop
jle
cmp
jo
call
fsubrl
mov
xor
or
inc
loope
or
ljmp
lock
lret
mov
insb
enter
cmp
pop
jne
mov
push
or
mov
pushf
mov
push
inc
sbb
xor
std
and
sbb
add
mov
mov
shlb
pop
jns
in
loope
adc
inc
add
sarl
or
push
jbe
std
or
jg
out
fisubl
outsb
sub
inc
popa
or
call
mov
popf
rolb
pushl
scas
add
or
out
dec
xor
loopne
dec
push
repz
orl
in
jo
stos
jno
jg
sub
rorb
adc
jl
cld
ja
jns
js
jmp
inc
cmpsb
xor
dec
fcos
mov
xchg
add
sub
leave
iret
xor
loop
cld
or
add
mov
xchg
dec
nop
loopne
cmc
and
mov
inc
ja
inc
icebp
ja
aam
movsl
sub
pop
sbb
inc
and
pusha
mov
mov
cmp
aaa
aaa
leave
add
jo
out
rolb
mov
popa
push
pusha
mov
add
push
aam
test
or
add
jo
das
push
pop
hlt
ret
jmp
aad
or
or
or
xchg
xchg
push
rcr
mov
das
icebp
out
clc
dec
push
or
and
xor
mov
or
push
xor
push
in
aas
les
loop
js
iret
xchg
pop
pop
and
stc
imulb
leave
inc
add
pushl
clc
lock
mov
jo
inc
sub
and
jp
jge
ss
push
mov
jle
aas
dec
scas
xor
sbb
mov
testl
mov
jnp
movq
sub
mov
out
xor
into
adc
icebp
mov
mulb
in
in
lcall
js
aaa
cld
jmp
mov
lahf
fldl
mov
data16
cwtl
dec
aad
jecxz
roll
cmp
pushf
insb
pop
loope
inc
insl
scas
inc
xorl
xchg
pushf
xor
cmc
cmc
daa
mov
aad
pop
cs
push
bound
mov
xchg
push
test
push
or
and
popf
dec
sbb
scas
push
pop
fcomp
lcall
jmp
lods
push
clc
jg
lock
xor
add
add
pop
fcomip
stos
daa
dec
outsl
sbb
loope
loopne
imul
pop
add
push
je,pn
pop
loop
push
inc
or
mov
call
push
mov
xor
jo
sbb
andps
add
dec
ror
aad
and
insb
mov
jg
mov
cmp
adc
mov
ja
pop
out
sbb
clc
jg
lahf
rcrb
std
lahf
js
mov
mov
loop
inc
es
xor
out
out
pushf
adc
and
aad
add
add
mov
mov
enter
std
jae
mov
mov
inc
add
leave
cmp
mov
stos
int3
add
shlb
mov
clc
rcr
lock
lock
push
mov
pop
mov
insl
out
lret
icebp
jb
dec
or
in
sbb
notb
sub
fcomi
daa
ret
lcall
or
pusha
dec
out
jnp
mov
adc
enter
cmc
ja
jae
mov
cmp
iret
and
shlb
sbb
xlat
jae
mov
pushf
cmp
lock
cmpsb
outsl
jle
aad
mov
jns
adc
jg
push
xorb
lahf
mov
mov
and
and
xor
xor
clc
mov
enter
clc
loope
jnp
mov
pop
enter
mov
push
mov
pusha
push
or
nop
adc
push
movsb
pop
ret
adc
out
inc
jns
into
clc
aad
out
push
xor
sti
bound
mov
mov
cmp
jecxz
clc
push
adc
pop
mov
iret
into
mov
dec
andl
push
adc
lret
nop
add
add
fidivs
fcompl
in
push
and
add
adc
mov
pushf
data16
leave
ja
dec
pop
in
aas
adc
ret
jmp
inc
rolb
das
test
sbb
ljmp
mov
push
add
inc
std
adc
fiaddl
faddl
out
adc
les
and
lcall
xor
pop
push
dec
int3
sbbb
repz
loop
add
pop
pop
inc
addr16
pushl
sub
ret
xchg
fiaddl
js
and
and
mov
popa
jl
test
pop
add
imul
sbb
addr16
mov
pop
sbb
gs
push
mov
in
dec
push
pop
ja
fiaddl
lahf
lock
les
xor
pop
hlt
add
sub
test
xchg
sbb
aaa
mov
les
add
and
pushf
outsb
mov
std
movsl
out
adc
mov
mov
xor
dec
lahf
into
adc
mov
loopne
scas
mov
add
ljmp
xor
mov
sbb
push
mov
inc
incl
sarb
mov
jns
arpl
mov
cmp
lahf
call
pop
sbbb
sbb
push
mov
jbe
sub
mov
adc
mov
hlt
cmp
inc
lret
jecxz
pop
push
cmc
jle
or
enter
in
scas
lock
daa
sbb
sbb
std
popa
hlt
push
mov
adc
jo
or
add
mov
xor
rolb
push
adc
mov
orl
iret
jnp
pop
outsl
clc
lahf
push
out
mov
nop
aas
outsb
repnz
pcmpgtb
es
push
push
pop
push
add
add
and
pop
dec
jge
mov
addl
outsb
loop
dec
loopne
ret
dec
cmp
adc
adc
sahf
and
idiv
pusha
add
pop
imul
add
jg
add
inc
or
xchg
les
aaa
out
incl
xchg
cmpsb
or
aas
mov
jne
out
or
and
adc
adc
inc
cmp
cmpl
or
cs
std
pop
mov
add
push
jp
pop
ljmp
push
xchg
adc
sub
movsb
fldenv
pop
cmp
fiadds
int3
imul
aad
adc
in
hlt
pop
lock
push
cmpsl
loopne
pushf
xchg
mov
test
adc
mov
pop
sub
add
aad
icebp
push
int
test
in
loope
push
pop
les
std
insl
sub
and
pop
cmp
sub
rorb
jno
xor
add
jbe
in
add
js
cli
pop
inc
pushf
test
scas
rorb
jp
push
sub
loope
aaa
dec
mov
jle
jl
sub
ss
and
gs
push
jg
inc
outsb
cmp
pop
faddl
xor
and
sbb
and
pushf
sbbb
daa
jl
cld
gs
std
out
loop
sub
lock
mov
lea
cmp
clc
mov
cmc
cli
inc
and
or
cmp
add
push
js
fwait
and
mov
scas
aas
adcl
in
shrb
and
les
repz
insb
addr16
inc
cmp
fstl
insb
xchg
adc
sbb
pop
and
xor
sub
sbb
xchg
fsubs
repz
fwait
inc
pop
das
stos
mov
push
shlb
lds
xor
icebp
pushf
sahf
mov
fmull
or
insl
dec
cwtl
fstps
push
icebp
pop
adc
dec
jns
inc
xor
aas
dec
sub
cld
rcrb
push
clc
mov
sbb
push
pop
mov
repnz
mov
xor
pop
ret
imul
adc
xor
insb
lock
inc
inc
fnstcw
test
out
or
ja
paddd
lock
mov
mov
xor
popa
xchg
push
cmp
fs
ja
out
mov
and
pop
pop
pop
xchg
jno
sbb
addr16
out
or
out
xchg
add
out
inc
adc
pop
inc
mov
lcall
mov
jge
int
xor
and
dec
or
outsb
clc
dec
sbb
xor
pop
xchg
test
xchg
rorb
adc
in
sahf
fildl
xor
pushf
jmp
xchg
std
adc
mov
pop
mov
movsb
inc
and
ja
and
inc
inc
mov
das
in
mov
sub
js
dec
mov
test
in
test
jg
es
lret
jl
scas
mov
jbe
mov
xchg
mov
into
loope
dec
loope
or
sub
or
incl
xorb
xchg
scas
test
adc
psrlq
xchg
sarb
pop
repz
add
inc
jmp
out
daa
add
push
xchg
out
or
push
jbe
adc
push
stos
mov
or
sbb
rolb
cld
sbb
jnp
xor
rolb
filds
add
adc
mov
jmp
adcb
add
loop
cmpb
ja
inc
icebp
ud0
sub
mov
ja
fidivl
push
cmp
mov
pop
adc
roll
mov
jmp
fsubl
dec
mov
xor
call
ret
sub
xchg
push
push
das
jg
mov
in
clc
xchg
std
test
enter
add
push
and
aas
ret
scas
pop
add
aam
outsl
test
das
psrad
push
stc
pop
fiaddl
outsb
out
mov
jge
test
add
mov
inc
sub
daa
xor
jno
jp
fwait
sbb
adc
clc
sub
add
mull
dec
adc
adc
jb
loopne
add
or
ss
add
decl
iret
sub
add
xchg
bound
adcb
xchg
push
das
nop
mov
cmp
cmp
cmc
seto
enter
decl
cmp
test
aas
pop
dec
jmp
aaa
adc
cmpl
repnz
or
mov
pusha
sbb
push
adc
or
cmpsl
jns
or
outsb
or
fimuls
inc
aaa
dec
gs
les
fimuls
xchg
sbb
mov
adc
dec
scas
jg
mov
xchg
jb
int3
test
or
and
iret
sbb
xlat
subb
push
sbb
repnz
iret
aaa
test
stos
jne
push
mov
lret
jae
add
adc
jle
cmp
inc
addr16
mov
push
inc
inc
icebp
inc
xchg
add
pop
jg
add
aas
repz
sbb
addl
add
sar
inc
shrb
out
push
in
sbbb
push
dec
pop
adc
jp
and
inc
repnz
pop
xchg
ret
inc
das
scas
outsb
lock
inc
clc
add
out
and
inc
les
xor
jle
mov
sbb
stos
test
mov
int3
mov
xchg
int
mov
cmp
cmpsb
sahf
outsl
add
inc
pop
add
or
not
test
sub
into
add
or
push
movsb
and
das
testb
sub
in
add
movsb
shl
add
or
test
aas
push
shrb
enter
stos
loope
mov
pop
test
pop
add
cmc
outsl
arpl
roll
pop
cmpb
sbb
pop
push
ret
cmp
out
lea
pop
cmpsb
in
cmp
xor
adc
jle
je
ja
loope
setge
out
push
das
xor
das
lods
scas
mov
push
adc
adc
adc
stos
dec
aam
inc
insb
mov
test
mov
int3
inc
repnz
loopne
push
aam
add
mov
inc
add
or
into
mov
gs
sbb
jl
rorl
js
push
test
xchg
xchg
xor
xlat
stos
xor
or
push
jg
das
sub
adc
lret
daa
arpl
push
inc
lcall
cmpsl
jp
andnps
xchg
roll
cmp
sarb
stos
xor
add
clc
cld
add
out
clc
pop
enter
movsb
popf
popa
arpl
adc
push
aas
mov
inc
pop
lods
testb
sbb
frstor
add
jne
sbb
pop
icebp
push
lods
cmp
sub
pslld
inc
pop
xchg
mov
repnz
push
sub
test
jle
xchg
cmp
xchg
or
movsb
or
xchg
inc
scas
jl
fidivs
out
aam
das
mov
fmull
jno
xchg
jbe
outsl
cmpsb
xchg
in
les
push
and
add
addr16
mov
xchg
call
fnstsw
dec
xor
cmp
mov
aad
arpl
sbb
clc
inc
and
mov
inc
sbb
mov
xor
movsb
mov
add
test
inc
sahf
add
jg
pop
orb
adc
sldt
jg
dec
inc
add
pop
add
jb
adc
arpl
test
add
stos
stos
or
mov
mov
lock
data16
sar
mov
inc
sub
and
call
or
or
cmp
dec
lahf
loop
mov
cmp
nop
negb
sbb
sub
ret
inc
sub
xchg
aad
sub
sub
or
cmp
ljmp
and
dec
call
in
push
push
or
sub
fld
js
adc
lret
clc
mov
add
or
sub
add
shlb
loope
cltd
dec
rcll
push
sub
shlb
pusha
adc
cmp
filds
jecxz
insb
mov
dec
in
stos
js
add
mov
incl
xor
sub
les
cmc
loop
pop
sub
pop
movsl
inc
push
pop
cmc
cmp
incl
leave
mov
xchg
mov
xor
xchg
xchg
test
out
sub
lahf
xlat
pop
sbb
mov
notb
icebp
pop
sbb
hlt
lea
mov
sub
les
lcall
or
cld
adc
jno
push
clc
cmpsl
add
js
mov
and
sahf
inc
xor
push
test
cmp
nop
mov
jmp
inc
and
adc
cwtl
xlat
lods
call
in
cmp
pop
nop
xchg
imul
add
and
jno
insl
mov
pop
les
cmp
shrl
div
cmpb
dec
scas
pop
sub
push
jb
jmp
xchg
adc
push
xchg
dec
outsl
ja
or
or
stc
lea
pop
mov
inc
fcomip
and
rorl
mov
loope
mov
cmp
pop
mov
outsb
aam
cld
cltd
xor
pop
lods
add
cmpsb
stos
pop
jmp
sub
and
or
outsl
psubq
xchg
das
add
iret
mov
push
jge
push
cmpsl
test
loopne
or
ljmp
sub
inc
sub
adc
mov
scas
push
loope
xchg
sbb
pushf
push
adc
inc
aaa
xor
addb
mov
mov
rcrl
jecxz
inc
mov
pusha
fistps
clc
cld
in
or
sub
dec
jecxz
sbb
dec
mov
xchg
lea
add
inc
int3
lds
arpl
push
inc
movsl
movsb
xchg
repnz
push
mov
and
adc
xchg
movsb
in
cmp
cmp
test
pop
cmpb
ret
and
cli
jbe
aad
js
push
mov
in
stc
aaa
decl
push
sbb
ss
mov
js
lock
push
roll
roll
shl
adc
dec
pop
add
addb
in
pop
bound
leave
repnz
pop
lret
cmp
or
mov
xchg
shll
jl
inc
and
ret
and
popf
adc
adc
sbbl
stos
add
clc
inc
test
push
out
addl
scas
fmuls
nop
dec
int
xchg
xchg
mov
loopne
adc
jb
xchg
adc
sbb
pop
add
not
add
aam
push
in
fdivp
ljmp
jae
add
sub
push
aas
xorl
xor
sbb
mov
or
cmp
push
xor
jg
es
push
les
pop
test
les
nop
fidivrs
fdivrl
lret
push
or
mov
fcomps
dec
enter
out
sar
sbb
push
sar
jns
jbe
aas
int
imul
adc
pop
fisubrs
fbstp
dec
cld
repz
cmp
gs
adcb
or
mov
mov
xchg
or
pop
dec
popf
xorl
lcall
mov
push
sbb
sub
add
cs
mov
inc
xchg
rclb
pop
and
add
push
pop
insb
loopne
xor
or
adc
mov
and
and
out
pop
pop
add
mov
adc
add
push
sub
push
push
adc
in
xchg
inc
call
dec
ret
dec
scas
je
rclb
ficomps
mov
je
sub
push
xchg
xchg
stc
push
add
pop
idiv
ret
mov
cmp
addb
ljmp
ret
sbb
adc
hlt
loope
pop
subl
loop
divl
xchg
shlb
adc
test
cmp
addr16
aas
aaa
loopne
xchg
aas
xor
jmp
scas
aam
es
mov
inc
imul
sub
pop
repz
cmp
cwtl
cmp
add
pushf
cltd
addl
inc
adc
mov
jmp
cmc
dec
pop
jno
or
mov
cli
scas
aad
sbb
filds
mov
pushf
or
test
push
add
cmp
push
dec
mov
cld
push
mov
cmp
decb
or
push
icebp
pop
mov
sbb
shrl
jne
mov
jae
and
pop
mov
cmp
adcl
loope
ror
jecxz
pop
jg
add
lods
add
outsb
and
xchg
stos
pop
lcall
jo
aad
add
scas
xor
int3
aas
cwtl
mov
clc
jg
and
loopne
bnd
addr16
pop
scas
popa
mov
fcmovnbe
mov
xor
nop
jo
or
inc
rcll
xchg
sub
jb
stos
cli
add
or
inc
iret
pop
push
adc
cwtl
mov
aas
inc
sub
addl
bound
sarl
std
imull
adc
jne
in
adc
shr
pop
push
inc
and
enter
loopne
xchg
aas
pop
not
cli
mov
sbb
mov
movsb
push
add
adc
test
mov
sbb
dec
sub
sbb
addb
pusha
pop
out
jb
add
in
out
insl
cmp
dec
imul
xchg
outsb
out
add
mov
push
hlt
in
mov
shld
ds
add
xchg
andb
adc
loopne
cmp
je
sub
push
sbbl
in
add
mov
mov
lds
pop
adc
mov
mov
mov
movsb
incl
mov
clc
pop
and
sbb
mov
test
js
inc
cld
dec
add
pop
dec
les
lods
dec
mov
sbb
ja
icebp
push
xchg
xchg
sbb
stc
aas
xchg
mov
test
adc
movsb
jnp
les
stos
sarl
and
movq
jae
sbbb
cmp
jns
sbb
test
or
stc
pop
mov
push
adc
jae
xlat
fadd
mov
arpl
pop
or
xchg
ja
lock
push
mov
into
mov
pop
pop
lea
xor
jbe
repz
lret
pop
addl
orl
testl
cmp
or
mov
loop
enter
insb
sbb
cmpsl
subl
les
js
leave
aad
dec
jge
jbe
popa
adc
push
mov
mov
or
inc
arpl
in
and
fndisi(8087
fwait
push
lcall
into
stc
adc
call
xchg
movb
or
call
sub
mov
push
jg
push
clc
cmpsb
cmp
mov
adc
lea
sbb
add
in
lea
lds
mov
loope
dec
outsb
add
andl
jns
xor
jo
or
add
and
jmp
int
jg
cs
xor
scas
mov
push
add
inc
icebp
inc
cmp
int3
ss
mov
dec
and
ret
std
add
mov
sbb
out
std
push
mov
mov
mov
mov
cld
sub
lahf
add
sbb
out
iret
push
xchg
cmc
pop
cmp
add
dec
add
aaa
add
lea
add
xchg
negb
inc
inc
fs
add
aas
nop
push
inc
mov
decl
push
pop
sub
pop
addr16
mov
data16
inc
jecxz
xor
cs
add
add
add
pusha
inc
in
lcall
ss
test
icebp
ljmp
mov
shll
dec
icebp
mov
mov
xchg
jl
sti
mov
test
dec
inc
pop
loop
and
cmc
dec
jg
xchg
cltd
mov
xor
adcb
push
icebp
ds
pop
insl
adc
movsl
pop
mov
adc
test
aam
outsb
addl
les
or
clc
je
aad
fucomi
leave
test
pop
dec
pop
loopne
outsb
sub
ret
cmp
jns
adc
xchg
mov
icebp
adc
out
cmp
mov
imulb
add
pop
loopne
jl
divl
clc
jl
inc
add
push
cs
sub
push
or
xchg
push
add
shll
cmovne
cmpb
jne
call
jp
in
sub
clc
jge
add
or
in
mov
daa
or
les
sbb
adc
xchg
inc
xchg
mov
jle
sub
out
orb
and
ret
mov
mov
cmp
pusha
leave
in
add
cld
sarl
xchg
in
mov
cld
icebp
cmp
xchg
add
push
push
adc
xchg
adcl
xchg
subb
repnz
adc
cli
insb
pop
in
lret
mov
cld
mov
and
cwtl
inc
rclb
sbb
mov
outsl
jge
sbb
addr16
mov
pusha
ret
je
ljmp
rcr
ficompl
or
fmul
xchg
adc
iret
insb
fdivr
jecxz
xchg
push
mov
mov
ret
and
xchg
xlat
ret
jne
or
mov
cmp
jbe
adc
notb
pop
decl
scas
dec
add
mov
movsb
push
fsubrl
xchg
lcall
xor
test
push
es
xor
stc
push
inc
aam
add
sub
inc
mov
inc
cwtl
xchg
es
aas
sub
add
xor
add
xor
jo
lea
cmp
or
sbb
xchg
jbe
mov
das
pusha
incb
sub
inc
xor
mov
push
insb
sub
gs
xchg
jo
push
cmp
push
xchg
add
or
out
jp
jl
sahf
dec
icebp
mov
test
mov
bnd
mov
cmp
push
icebp
paddsw
sub
push
mov
mov
loop
fs
out
ljmp
ds
pop
jp
lods
ret
dec
js
add
sub
aas
pop
jle
push
xchg
add
loope
mov
cmpsl
les
in
add
push
or
lock
fisttpl
cltd
and
int3
into
lods
xchg
aaa
mov
outsl
pop
cmp
adc
pop
sbb
add
leave
adc
call
lahf
mov
pop
xor
add
pop
mov
push
ficoml
subb
aad
cwtl
insl
xchg
inc
sub
std
ret
sbb
push
push
inc
add
xchg
sarb
or
cmp
int3
cmp
push
loop
inc
fstps
sbb
int
mov
orb
jecxz
adc
or
out
dec
out
and
hlt
xchg
aad
inc
cmp
aam
sbb
aad
push
sbb
mov
sbb
aaa
inc
sahf
xor
clc
nop
or
mov
mov
and
dec
loopne
push
roll
xor
mov
xchg
das
xchg
xor
xchg
std
adc
sahf
xor
pop
nop
adc
inc
xor
scas
mov
pushf
add
shl
nop
cmc
aaa
and
hlt
dec
faddp
cmp
aas
add
mov
sbb
shl
jmp
ljmp
incl
fsubrl
push
mov
fdivrs
ret
mov
out
jno
add
xchg
adcb
mov
sub
jae
or
jle
fwait
out
fcompl
lock
cli
gs
bound
cli
clc
pop
mov
push
ds
or
add
cs
pop
xchg
loope
cmp
lret
jmp
cmp
call
cmp
pop
shl
xchg
fadds
pop
cwtl
cwtl
lods
lock
jle
std
add
pop
rcll
imul
inc
les
cs
push
mov
lahf
movsl
ret
loopne
pop
inc
xor
call
sti
push
aam
dec
test
inc
push
mov
jl
add
call
add
mov
call
push
xor
aam
aaa
pop
and
notl
cld
faddl
or
lahf
xchg
insb
adc
addl
lock
mov
inc
sti
sbb
pop
fdivr
or
mov
mov
mov
xchg
aas
jl
or
xor
sbb
mov
and
mov
adc
add
in
sbb
popf
mov
add
test
inc
and
push
mov
out
fwait
cmp
mov
cmpsb
ljmp
sbb
cwtl
clc
data16
outsl
mov
adc
inc
mov
push
cmpb
adc
scas
mov
bound
std
pop
push
cld
dec
xacquire
fldcw
mov
je
lods
add
iret
adcl
es
hlt
ss
les
scas
in
push
lahf
mov
or
mov
pop
xor
imul
dec
lret
jo
fs
ss
or
call
inc
xchg
ja
shl
js
outsb
cmc
andl
jnp
cmp
mov
int
outsl
add
out
enter
inc
xlat
add
sbb
das
les
daa
and
dec
mov
loope
xor
mov
stos
enter
add
in
bound
hlt
xor
add
stos
subb
cli
and
mov
and
pop
mov
les
ss
dec
cld
aaa
mov
push
lahf
xchg
aas
ds
and
add
xchg
add
add
push
ljmp
inc
adc
dec
mov
pop
jns
sbb
mov
mov
jb
add
iret
xchg
push
fdivr
adc
mov
adc
mov
mov
push
scas
aam
les
int
jns
xor
push
xor
pop
xchg
mov
je
sub
test
inc
cltd
loopne
mov
jmp
leave
jb
test
cmpb
ja
dec
pop
adc
cmp
rcl
out
mov
pushf
cs
xor
inc
inc
daa
jnp
dec
fstps
xor
adc
decl
sub
xor
sbb
orb
cmc
add
or
and
dec
xor
fimuls
pop
test
adc
add
adc
fbld
or
or
les
jp
mov
frstor
and
insb
mov
imul
jg
dec
push
mov
sbb
icebp
jmp
fisttps
add
and
pop
repnz
push
ljmp
mov
push
or
stc
inc
pop
cld
orl
add
ds
outsb
inc
pop
inc
add
lret
popa
iret
sbb
aas
or
push
add
adc
scas
jns
jl
mov
mov
cli
test
js
sub
std
dec
dec
outsl
ss
popa
sub
stos
dec
bound
inc
out
dec
mov
mov
ds
and
xor
jl
xchg
xor
push
and
stos
sub
sbb
fists
es
cmc
movb
pop
inc
pop
cmp
xchg
adc
xchg
ret
mov
xor
jge
push
ljmp
pushf
add
add
jne
test
lds
push
outsb
aam
xchg
fisttpll
push
rcll
les
push
add
dec
sbb
out
xlat
mov
sbb
sub
pop
adc
cld
hlt
add
push
pop
pop
dec
mov
jmp
icebp
and
ja
loop
int
mov
enter
mov
es
in
sbb
adc
pop
ficompl
pop
clc
or
dec
pop
and
mov
lods
pop
pop
sbb
add
loopne
cli
sbb
mov
lods
mov
mov
mov
inc
inc
xchg
xchg
leave
into
roll
jge
aas
adc
mov
jecxz
add
adc
adcl
jbe
lret
and
push
cli
and
pop
into
out
sbb
stos
jae
sub
add
add
add
pop
jmp
loope
fs
sbb
inc
mov
in
xor
gs
xchg
lock
ret
bound
mov
add
out
and
loop
addb
sahf
xor
mov
leave
loopne
adcl
mov
dec
pop
addl
adc
xchg
mov
ljmp
cwtl
icebp
add
je
jae
jg
lock
inc
add
cmpsb
call
mov
push
sub
mov
jmp
in
sbb
ds
jg
test
orb
add
out
cld
push
mov
lock
lret
add
mov
xchg
xchg
xchg
cwtl
sub
inc
lock
pop
sub
sbb
lcall
jg
push
xor
mov
push
mov
xchg
ljmp
jle
inc
sub
mov
rorb
dec
add
roll
or
cmpsb
lcall
rclb
push
bound
inc
sbb
lcall
dec
adc
imul
aas
dec
dec
add
inc
inc
xchg
scas
es
jmp
imul
clc
ret
push
push
push
jns
add
jmp
aaa
jbe
pop
push
cmp
ljmp
orl
jp
roll
test
ljmp
dec
out
call
pop
into
loopne
scas
lock
cltd
cwtl
inc
loop
addb
or
movsb
jnp
adc
popa
dec
mov
jbe
xchg
jp
test
pop
or
stos
xchg
cmp
dec
and
lods
mov
mov
add
decb
pop
pusha
cltd
jno
fwait
adc
mov
jg
cld
mov
xchg
jg
inc
inc
or
mov
jo
out
lret
lcall
xchg
sbb
adc
xor
mov
add
aad
jecxz
adc
andl
inc
pop
fsubrs
loope
ficoms
scas
shrb
pop
and
cmp
inc
roll
adc
fidivl
aam
push
cs
jg
mov
test
push
xchg
int3
insb
push
dec
sbb
fldl
push
ret
sbb
test
adc
js
cs
jbe
shlb
arpl
int
mov
inc
lods
and
orb
cmpb
outsb
adcb
xchg
inc
push
mov
sbb
add
cwtl
sub
sahf
sahf
adc
test
pop
mov
pop
or
call
hlt
ljmp
inc
xor
aas
bound
push
lret
outsb
loop
mov
jno
shll
lahf
mov
out
add
pop
scas
fs
add
pop
inc
push
cmp
xchg
pusha
pop
repz
sub
push
fistl
pop
xchg
jns
popf
add
and
popa
push
inc
daa
js
out
push
mov
fdivrl
andl
mov
sbb
dec
or
sti
pop
sub
bound
jmp
fs
inc
xchg
adc
adcb
sarl
and
xor
jmp
loopne
inc
add
out
int
dec
dec
mov
lock
ss
add
cld
or
enter
xlat
add
sti
xor
pop
lds
push
pop
popa
inc
jb
daa
test
cwtl
fs
or
hlt
paddusw
fistpll
adc
out
js
or
ficompl
in
lock
data16
pop
pop
mov
jecxz
push
lahf
cmp
pop
loope
or
stos
add
pop
aaa
cmp
push
mov
imul
xchg
iret
jmp
leave
adc
ret
cmp
add
in
mov
notl
add
sub
or
out
adcb
and
push
cwtl
sub
mov
push
xor
mov
adc
jmp
adc
enter
xchg
test
ds
stos
and
movsb
inc
cmp
and
push
mov
inc
and
fildl
and
pop
push
stos
mov
mov
sbb
aas
push
push
mov
or
loopne
in
int
inc
in
dec
xchg
rorl
xchg
push
lds
xor
das
cli
push
xchg
jmp
push
sarl
sbb
movb
mov
mov
jp
add
lcall
pop
push
mov
pop
adc
scas
pop
dec
fs
int
sbb
sbb
loop
push
mov
sahf
les
push
stos
sbb
test
add
jp
cmpsl
es
sarb
adc
xor
add
xor
and
movsb
stos
mov
dec
mov
insb
xor
jg
out
into
leave
add
pop
dec
call
stos
lret
jge
rcrb
add
push
shll
bound
add
loope
mov
and
or
sub
ljmp
cs
stos
bound
addl
adc
jmp
or
push
lds
push
roll
sti
pavgb
dec
incl
aas
test
pop
mov
pop
mov
rorb
push
test
fs
data16
add
dec
arpl
cld
lea
cmpsb
jb
push
mul
aaa
aad
mov
inc
dec
xchg
ficompl
xor
dec
lahf
aas
push
mov
xchg
jp
icebp
shr
andl
fidivs
sbb
mov
jne
in
testb
inc
cld
add
sbb
and
je
xchg
adc
in
add
fistps
iret
cwtl
mov
and
mov
nop
popa
jmp
lds
outsb
mov
rorb
ret
inc
xchg
pop
test
mov
mov
fildl
scas
push
fmuls
inc
inc
das
call
ficompl
mov
lods
loopne
sub
add
loopne
cmpsb
and
test
aam
cmpsl
mov
sarl
xchg
pop
push
cmp
and
inc
and
xor
jecxz
xchg
mov
pop
add
loopne
or
ds
daa
mov
loopne
inc
ds
call
fisttps
cli
std
inc
inc
test
aad
inc
fbstp
stc
add
xchg
fmull
add
push
add
and
hlt
iret
fwait
ret
fidivrs
rcll
rcll
ljmp
loope
lock
fdivs
aaa
test
lock
push
sub
cmc
adc
std
popf
les
enter
and
cmc
jmp
les
loopne
push
js
lds
ds
push
jbe
inc
mov
inc
sahf
and
lock
mov
dec
push
clc
jl
lea
ret
orb
push
aas
or
lret
outsb
pop
adc
pop
outsb
mov
leave
sub
dec
pushf
nop
out
add
xchg
push
insb
and
push
mov
js
add
inc
jnp
sbb
mov
iret
out
lea
add
pop
push
sbb
mov
les
sbb
fbstp
cwtl
imul
adc
adc
decb
jo
add
dec
mov
add
test
adc
pop
cmpsb
lds
mov
ss
pusha
mov
push
dec
add
js
lahf
stc
xlat
push
fnsave
cmp
xchg
lret
out
out
enter
pop
fistl
pop
rol
add
xor
mov
jle
and
loope
sbb
push
inc
cwtl
addb
in
mov
add
lahf
in
add
mov
inc
dec
rcrb
loop
xchg
jecxz
pop
add
sub
xor
jns
arpl
addb
xor
stos
adc
cltd
mov
cmp
mov
loope
pop
adc
mov
roll
jle
ljmp
stos
mov
fdivrs
xor
lds
inc
jns
lcall
jl
mov
jl
cmp
pusha
fcmovne
aam
mov
inc
sub
aas
sub
xchg
mov
movsb
inc
lock
xchg
decb
cmp
cmpsb
out
push
popf
insl
gs
cli
inc
xchg
dec
xor
fsubs
rcl
inc
pusha
mov
ss
jecxz
dec
ret
pop
cmp
adc
push
add
sti
fadds
push
push
clc
mov
std
dec
cmp
or
or
dec
mov
stc
mov
dec
mov
sub
pop
jecxz
es
out
ret
push
fisubs
mov
or
add
cmp
repnz
adc
loopne
jecxz
adc
lret
sbb
dec
bswap
ficompl
cmpsl
dec
adc
or
in
loop
xchg
lods
inc
or
jg
lcall
sbb
nop
shll
fisubs
pusha
loop
es
test
out
inc
push
imul
xchg
push
movsb
out
repz
inc
push
adc
sub
js
dec
mov
rolb
scas
or
iret
and
dec
jae
outsb
paddq
ds
jo
jae
shll
popf
outsb
ret
and
jg
vcmpfalsepd
cmpsl
jnp
js
pusha
clc
rol
dec
cs
sbb
cmpxchg
loop
and
mov
addb
icebp
test
fldenv
xchg
inc
sti
testb
in
xor
in
push
push
push
shr
xchg
mov
xchg
pusha
inc
xchg
push
jg
mov
adc
dec
out
xchg
xchg
xchg
cmpsl
mov
jae
jb
dec
mov
repnz
add
int
pop
dec
cmp
cmp
sbb
jmp
ljmp
iret
sub
scas
adc
mov
add
jo
push
sbb
push
adc
adc
sbb
mov
inc
lock
inc
lds
adc
loopne
pop
mov
adc
ret
rclb
mov
in
clc
test
xor
adc
add
xchg
jbe
and
cmp
ss
jecxz
push
sbb
lea
dec
icebp
mov
jae
mov
sbb
and
and
and
out
rorl
hlt
push
fldl
jbe
les
xor
lret
pop
out
add
loope
xchg
adcb
lds
pusha
sbb
pop
lock
mov
sbb
in
arpl
mov
rol
js
loope
stos
jg
push
lea
adc
sar
sub
aas
and
mov
incl
jle
sbb
push
sbb
int
aad
and
or
dec
xchg
test
inc
jg
and
cmp
add
les
pop
dec
popf
ds
jle
xchg
loope
mov
dec
test
sub
xor
xor
xchg
subl
and
sub
sbb
dec
sbb
add
popf
push
push
pop
cld
mov
or
dec
pop
jbe
sub
pop
pop
and
mov
cmp
push
lods
cld
dec
xor
call
sahf
jne
nop
packuswb
mov
outsl
mov
dec
jne
push
stos
mov
push
call
icebp
pop
sub
fisttpl
push
xlat
sbb
incl
out
or
es
jmp
add
cmp
pop
scas
mov
gs
push
pop
jmp
loope
push
pushl
jno
adc
test
push
cmp
mov
cmc
mov
mov
cmc
test
in
or
cli
mov
js
ret
cmpsb
sbbb
fildl
outsb
and
filds
inc
mov
or
or
cli
xchg
adc
hlt
scas
jbe
push
jg
les
fsubrs
add
adc
repnz
in
scas
xor
pop
dec
es
bound
sub
ss
push
inc
jmp
out
jg
cmp
add
cmpsl
in
mov
add
flds
pop
push
and
inc
or
daa
test
mov
pop
jbe
pop
scas
cld
les
sbb
adc
scas
lods
sahf
cwtl
or
jp
sbb
call
cmp
sti
adc
push
push
cmpsl
or
or
mov
cmp
movsb
in
lds
hlt
sub
ret
cmp
rolb
sahf
mov
call
outsl
or
add
inc
and
ds
or
jecxz
ret
adc
jns
ljmp
popa
fistpl
or
or
xor
push
mov
inc
aas
adc
cli
ja
jae
inc
mov
push
dec
pop
jns
push
lods
jb
fst
xor
mov
roll
mov
dec
add
jle
test
jmp
mov
movsb
outsl
xor
std
adc
add
outsb
ljmp
jb
int
add
xchg
sub
outsb
adc
ret
insb
test
cmp
or
aas
cld
add
mov
mov
mov
leave
xor
xchg
push
jnp
inc
ret
js
rolb
sahf
loope
enter
aaa
adc
lahf
mov
arpl
loop
leave
push
cmp
xor
adc
inc
mov
xchg
lock
xchg
out
out
jl
test
mov
cli
lret
pop
xchg
imul
xlat
add
ds
sbbb
push
cs
out
icebp
or
in
xchg
push
push
iret
mov
ds
rclb
shll
test
js
jae
mov
icebp
out
lahf
test
push
mov
xor
out
loop
and
cs
sahf
lcall
mov
adc
cli
xchg
inc
jmp
mov
dec
test
mov
rorl
idivl
cltd
leave
ffreep
pop
add
rclb
insb
push
dec
clc
push
xor
mov
loope
inc
sbb
dec
fcoml
in
repnz
fnsave
jae
dec
les
into
inc
pusha
mov
xor
mov
dec
mov
cmp
mov
insb
fistpll
xchg
add
pop
push
adc
sbb
lock
popa
add
mov
int3
popa
push
xchg
adc
push
fdivrs
mov
pushf
inc
cmp
adc
cltd
sar
jge
pop
movsb
stos
mov
cmpsb
jp
mov
enter
xchg
adc
lcall
dec
adc
or
sti
or
lcall
or
mov
fadds
add
sbb
data16
fdivrp
lahf
xchg
xchg
or
pop
add
push
pop
sbb
test
or
mov
orb
add
sbb
mov
mov
lahf
inc
popf
es
lahf
inc
divb
xor
add
sbb
inc
pop
push
movb
ljmp
sub
sbbb
jae
ja
and
push
nop
lret
or
mov
dec
xchg
add
push
sbb
fldl
pop
es
data16
loope
pop
cld
cld
repz
add
pop
sub
data16
leave
pushf
or
lods
lods
cmpsl
jle
dec
rorb
repnz
test
mov
bound
aas
test
cmp
cmp
repnz
es
pop
mov
add
pop
movsl
das
inc
jne
adc
xor
dec
pop
or
ljmp
mov
adc
add
xor
push
pop
movsl
aas
xor
inc
rcll
sbb
aas
inc
icebp
xchg
les
xchg
push
cmpsb
lea
pop
dec
inc
mov
out
mov
cmp
mov
inc
orb
rcrl
popa
cmpl
adc
outsb
lock
xchg
sbbb
add
push
pop
pop
test
sarb
mov
or
dec
lret
adc
dec
fwait
add
lock
fcompl
outsl
mov
insb
sbb
popw
xor
jbe
cmpsb
pop
mov
mov
cld
dec
iret
fwait
pop
sub
sbb
push
adc
jg
aam
add
and
push
lcall
lds
push
adc
inc
loop
pop
jns
stos
cmc
inc
movsb
out
adc
mov
mov
add
xchg
xchg
rcrl
add
add
imul
push
add
push
pop
pusha
es
jg
sub
cmpsl
in
leavew
fcomp
ficoml
mov
orb
push
lock
out
sub
mov
ds
scas
les
inc
sbb
inc
iret
xor
data16
imul
xchg
adc
mov
ds
cmc
mov
andl
sub
cmpsl
out
adc
push
lea
fisubrl
jg
sbb
cli
mov
mov
or
out
add
shrb
push
adc
push
mov
add
sbb
mov
xchg
in
test
icebp
fnstenv
push
inc
mov
subl
pavgb
cwtl
mov
xlat
cmc
bound
jb
sub
jecxz
pop
icebp
mov
inc
sub
cmpsl
jp
mov
movsl
fiaddl
js
enter
sbb
sbb
imul
incl
stos
repnz
ret
dec
mov
ret
les
mov
and
cmpl
adc
shrb
mov
pop
inc
stos
xchg
jge
jg
dec
incl
test
dec
cmpsl
add
sub
popa
std
add
rorl
lcall
pop
lock
or
adc
cmc
xorb
ljmp
and
in
xor
jae
adc
fbld
push
add
pop
add
xchg
loop
mov
xor
ljmp
ljmp
or
mov
cmc
pop
stc
sub
repnz
mov
adc
mov
xchg
jno
mov
pop
call
xchg
in
sbb
or
xchg
test
data16
or
add
inc
cld
sbb
adc
loope
add
sub
lahf
jns
andb
js
xor
leave
jg
pop
ret
inc
ret
add
xor
push
sbb
lahf
inc
jl
mov
loopne
push
sbb
and
scas
push
popa
xchg
aas
cmpb
sub
mov
or
dec
cwtl
rcll
pop
jg
jb
fdivrp
pop
scas
jo
and
dec
cmpsl
call
cltd
mov
or
push
pop
cltd
sahf
cld
call
das
je
mov
dec
div
inc
jecxz
stc
aad
push
add
xchg
pop
es
or
adc
inc
push
ja
sbbl
in
fistps
pop
sub
fidivrs
sbb
jp
or
stos
adc
loopne
inc
lahf
inc
xor
gs
aad
ds
lods
pop
jns
ret
pop
mov
je
push
lock
fwait
pushl
push
in
cmp
stc
mov
fbld
cmp
in
sbb
aad
pusha
loopne
sbbb
push
and
add
fsubrl
pop
or
jbe
outsb
mov
pop
lods
adc
in
jne
daa
mov
push
adc
cs
sbbb
pop
jnp
mov
pop
pop
dec
jl
iret
ret
cmp
add
lret
daa
or
inc
push
hlt
dec
push
mov
cld
xor
sbb
daa
and
jmp
out
jnp
or
sbb
or
movsb
mov
add
pusha
adc
and
push
and
ja
jo
inc
test
xor
pcmpgtd
test
or
xor
pusha
and
or
bound
cmpsb
loope
call
aad
lock
jecxz
push
xchg
test
sub
add
mov
pop
sub
call
dec
shlb
lods
xor
or
dec
stos
inc
popf
push
bound
enter
decl
xor
clc
std
or
mov
push
and
adc
pop
jns
and
inc
in
dec
hlt
pushl
rorl
hlt
push
sub
sbb
add
lds
dec
mov
add
jno
mov
mov
jnp
sbb
add
mov
daa
lea
imul
push
adc
rclb
std
out
inc
or
fs
inc
sbb
int3
push
mov
mov
sbb
add
pop
ljmp
dec
inc
push
sbb
mov
shrb
dec
lods
adc
out
bound
aaa
sub
xor
sub
xchg
jp
test
sbb
add
lea
stos
lret
push
or
hlt
mov
sahf
nop
sbb
ss
in
lea
xor
lret
in
jp
lret
repnz
or
and
in
std
mov
lcall
push
clc
jle
out
je
movsb
js
test
insb
cmp
out
cmp
push
dec
adc
sub
jle
push
add
popa
clc
ret
push
pop
enter
jecxz
call
out
mov
shr
lahf
mov
add
lcall
push
inc
jae
adc
push
inc
out
sbb
pop
movb
xor
shld
xchg
ja
fsubp
pusha
test
bound
das
andl
inc
loop
cmpsl
xor
pop
adc
stos
in
inc
test
fildll
jmp
aad
xchg
sbb
or
fdivl
das
xor
imul
addb
mov
bnd
ljmp
xchg
imulb
jl
mov
fcomi
mov
push
mov
out
daa
ds
xchg
std
ljmp
pop
nop
cmpsb
pop
inc
hlt
and
lods
cmp
add
icebp
inc
push
add
push
cmpsl
cmp
fwait
mov
cmp
inc
cmp
pusha
das
pop
data16
xchg
cmc
or
pop
dec
dec
bnd
mov
xchg
push
cli
out
sbb
add
dec
adc
add
or
mov
mov
cmc
lock
mov
test
sahf
and
mov
movsb
inc
mov
nop
dec
or
inc
ja
addr16
sub
sub
or
and
inc
dec
out
inc
mov
adc
pop
mov
mov
ds
fcmovnu
das
in
mov
loop
adc
jle
xchg
icebp
rcll
xor
jg
sbb
adc
or
ss
das
clc
test
sbb
jl
sbbb
sbb
in
add
xor
int3
add
mov
mov
pop
xchg
pop
sahf
xor
mov
cmc
jb
popf
xor
add
sbb
inc
imul
mov
je
in
js
int3
add
call
lcall
jge
pop
mov
xchg
add
push
and
add
aas
insl
shll
sbb
or
add
inc
ljmp
pop
out
lret
insb
mov
pop
addr16
add
add
je
iret
lret
jo
sbb
loope
mov
test
ret
mov
inc
out
sbb
jmp
cmpsl
add
add
xor
or
adc
dec
mov
cli
adc
mov
xor
ret
decl
lock
rolb
jo
mov
idivl
mov
movsl
mov
xor
jge
outsl
add
and
sub
rclb
adc
mov
mov
mov
inc
xchg
out
and
xchg
or
and
mov
and
jecxz
shrl
loop
aas
iret
scas
jo
and
push
xchg
or
push
push
bts
ret
or
mov
lcall
insb
cld
call
mov
aam
mov
add
adc
fnsave
or
into
sub
hlt
add
ror
mov
test
out
loop
icebp
aad
and
out
dec
cld
loopne
test
xchg
add
mov
sub
xorl
mov
adc
sbb
inc
lock
push
aas
je
mov
ss
fimuls
jns
cltd
int
test
adc
jmp
ljmp
test
add
cmp
iret
mov
pop
loope
mov
cmp
std
pop
and
sub
in
mov
loopne
inc
xchg
xchg
clc
popa
addr16
sub
in
clc
repz
jg
jecxz
bound
pop
sub
xchg
movsb
mov
adc
pushf
add
sub
out
mov
jecxz
pop
repz
cmpsb
cmp
inc
xchg
les
mov
push
daa
push
push
xor
inc
incb
sub
sbb
test
mov
xchg
jmp
hlt
or
xchg
sub
xchg
sbb
cmc
addr16
decl
movsl
mov
push
js
adc
stos
fildll
xor
sbb
inc
repz
adc
outsl
rorb
xor
mov
add
aaa
into
repz
orb
test
jecxz
add
clc
and
pop
or
movsb
sarl
adc
int3
pop
fsts
clc
enter
ror
xchg
adcb
add
add
or
arpl
cmc
lea
pop
bound
popf
repz
push
and
mov
outsb
in
add
inc
in
icebp
pop
or
pusha
dec
add
ds
add
lcall
and
shrb
mov
push
clc
jg
push
int3
pop
ret
out
sbb
insb
add
pop
out
insl
fwait
and
cmp
mov
idiv
iret
mov
sbb
insb
nop
push
je
cld
scas
xchg
aas
push
inc
cmp
pop
adc
scas
clc
push
adc
out
orl
fists
lock
xchg
cmp
sti
aad
adc
lret
test
ds
cli
lea
cmp
fdivs
and
mov
and
pop
pop
xor
in
mov
mov
jne
pop
push
mov
hlt
popf
orl
mov
mov
or
mov
dec
push
mov
imul
pop
popl
inc
push
or
std
adc
rclb
jo
cs
mov
pop
sub
cvtpi2ps
and
push
sub
fiadds
jge
mov
lcall
icebp
ja
pop
gs
test
clc
jmp
add
flds
sbb
shll
cmpsl
lcall
sbb
int3
push
jg
sub
repz
xor
inc
popf
push
jmp
mov
push
mov
shll
aam
ret
cmc
jnp
cmpsl
xor
insb
inc
insb
inc
leave
out
sub
hlt
mov
xor
stos
loop
lcall
add
cltd
sbb
mov
ret
aaa
test
push
aaa
add
pop
lock
ss
add
insb
call
or
test
push
mov
inc
xor
aad
repnz
mov
mov
xchg
fiaddl
sbb
rolb
hlt
xlat
lret
sbbb
pushl
out
mov
inc
lods
mov
mov
pusha
and
mov
nop
icebp
push
inc
shll
xorb
and
dec
sbb
sbb
addb
mov
xlat
ret
push
or
lret
jae
dec
xor
fstpl
decl
ja
mov
push
das
xorb
pop
add
sub
inc
jmp
jnp
adc
xchg
xchg
add
lea
and
out
xor
and
shlb
lods
push
jb
stos
push
jg
mov
test
fadd
or
loopne
aad
dec
in
or
inc
mov
inc
out
inc
iret
int
or
adc
or
pop
arpl
mov
xchg
dec
push
push
mov
mov
arpl
jp
shl
push
stc
jg
or
mov
stos
inc
aas
dec
mov
popa
ret
punpckldq
xorb
movsb
xor
test
cmp
scas
lcall
not
xor
stos
in
shlb
sub
and
orb
and
jnp
or
cmp
mov
xchg
inc
cmp
mov
xchg
add
mov
loop
lahf
scas
adc
sub
iret
mov
cli
mov
sub
mov
cmpsb
dec
and
xlat
aas
lods
call
xchg
ret
mov
hlt
lods
loope
ljmp
pop
push
mov
xor
adc
dec
lock
aad
sti
fwait
lcall
shll
xchg
add
xor
pop
inc
adc
hlt
out
insl
lds
xchg
mov
push
xchg
test
add
ficoms
mov
push
add
xor
inc
cmp
sub
lock
xor
sti
pusha
lret
add
hlt
stos
mov
clc
xlat
iret
outsl
xlat
mov
lods
or
es
xchg
lret
es
or
inc
mov
or
push
inc
push
xchg
out
pop
add
pop
pop
push
mov
or
add
cmpsb
mov
ret
mov
repz
mov
inc
or
inc
popa
mov
sti
inc
push
jle
mov
and
repz
mov
aaa
ja
add
hlt
cmc
das
lret
xor
std
outsl
mov
inc
fisubrl
outsb
and
sbb
iret
add
pop
add
call
sti
jge
add
inc
xchg
out
movsl
add
pop
aad
arpl
cmp
sbb
arpl
and
ljmp
xor
and
jmp
pop
mov
pop
mov
mov
addr16
call
xor
mov
movsb
push
pop
add
aam
loop
jo
roll
loop
ljmp
inc
insb
mov
inc
cmp
sti
pushf
add
fsts
aas
std
pusha
outsl
pop
aam
pop
sbb
add
out
int3
lcall
jmp
push
clc
call
cmp
add
lahf
iret
hlt
dec
pop
sub
decb
push
cmc
jle
push
and
aas
add
mov
xchg
sahf
adc
loop
jo
xor
jbe
add
in
xchg
ss
test
push
mov
jmp
shlb
ficoms
inc
rep
pop
adc
inc
xor
adc
int3
lahf
test
mov
pusha
sbb
fcmovnu
mov
inc
ret
test
sub
aam
dec
adc
inc
test
jecxz
and
mov
add
addb
and
clc
mov
dec
loop
sub
inc
ljmp
mov
call
pop
dec
cmp
mov
cmpsb
sub
fcomi
sti
and
mov
inc
loop
int
shll
je
add
nop
xchg
mov
add
sbb
push
sub
adc
push
mov
push
aad
call
fsubl
push
sub
enter
cmpsl
adc
imull
or
sub
decl
mov
sar
push
shll
mov
xchg
xorb
lea
sub
ljmp
xorl
inc
inc
fsts
sbb
jo
inc
xor
aas
and
push
push
movsb
add
mov
js,pn
jmp
add
leave
enter
ret
cmp
adc
lock
fisttps
cmp
and
cmpl
cld
mov
cltd
adc
fiadds
and
mov
xchg
mov
sar
test
loope
push
lcall
stos
xor
inc
or
aaa
cmp
xor
scas
test
pop
mov
sub
pusha
lds
lock
shll
mov
jno
mov
sbb
icebp
cmpsb
pop
out
inc
add
arpl
mov
sbb
and
sbb
test
loop
scas
fidivrl
pop
mov
shlb
arpl
mov
aad
jg
jae
xorl
sub
mov
jle
sar
hlt
imul
adc
in
iret
dec
cmp
ljmp
in
fs
sahf
mov
mov
ja
adc
stos
cwtl
roll
stos
sub
outsl
and
out
jl
popa
mov
andb
xor
mov
incb
pushf
aaa
dec
and
icebp
pop
push
adc
repnz
sahf
test
xorl
inc
popa
cmc
sub
xor
stc
adcl
mov
ja
mov
jb
xor
jnp
std
stos
push
cwtl
arpl
mov
jecxz
fdivs
in
jmp
jne
nop
xchg
push
int
outsl
jnp
pushl
pop
cmp
lret
jnp
lahf
cmc
dec
dec
push
adc
test
pushf
aam
scas
adc
jge
mov
inc
xlat
popf
xor
test
push
je
pop
gs
sbb
mov
cs
jp
or
cmp
add
mov
xchg
mov
leave
clc
mov
or
sub
push
mov
insb
pop
and
adc
mov
repz
incl
addl
pop
cld
cmp
pop
cmpsb
xchg
decl
add
and
dec
lods
adc
xchg
pop
cmpsb
popf
clc
ljmp
cwtl
xor
rcll
stos
sub
pop
mov
lods
dec
mov
dec
lock
incl
xchg
test
mov
add
iret
rorl
xchg
shlb
mov
stos
sbb
mov
mov
ljmp
push
mov
pop
mov
shrb
or
movntq
push
add
mov
add
push
mov
int
test
jg
loopne
lahf
inc
dec
add
jecxz
xchg
loopne
notl
push
js
mov
mov
jnp
insb
push
std
paddb
push
push
jp
xor
cmp
add
xor
pop
data16
rol
sti
inc
jg
xor
fwait
mov
adc
js
add
cmp
adc
pop
push
das
adc
adc
rorl
popl
push
movsl
push
mov
fidivrl
push
sbb
jmp
mov
cld
mov
fstp
sub
rol
das
push
lock
xor
outsb
inc
test
movsb
cmc
outsb
lret
add
inc
clc
test
xchg
push
and
ret
mov
add
in
imulb
dec
xchg
inc
sbb
mov
leave
xor
xchg
sbb
decb
pop
shl
push
cmc
lcall
pop
xor
and
fs
jp
mov
mov
push
mov
add
loop
push
dec
test
sti
movsl
sbb
popl
mov
sub
scas
dec
fisttps
add
mov
adc
outsb
fdiv
and
repnz
lds
add
sub
mov
cmp
jb
imul
mov
mov
dec
and
push
lock
xlat
clc
dec
test
pop
aas
push
fwait
mov
xchg
push
inc
icebp
call
sahf
test
pop
cmpl
ljmp
movsl
sbb
cld
outsl
decl
pop
sub
mov
dec
inc
cmp
mov
mov
lock
int3
xor
cmp
in
imul
repz
mov
pop
jl
mov
inc
or
xchg
fnstcw
sub
adc
movsb
sbb
sub
mov
imul
ret
mov
rolb
xchg
add
inc
ror
clc
lcall
test
dec
pop
scas
adc
repnz
fisttpl
adc
or
mov
xlat
xchg
loop
pop
cltd
sbb
xchg
cmp
cmp
push
jg
ret
call
shlb
enter
call
mov
xor
inc
dec
adc
mov
mov
or
das
je
push
std
aaa
mov
mov
jo
xor
mov
add
movsb
push
enter
jg
inc
dec
pusha
notb
push
test
cmp
out
decl
pop
out
lock
movsl
add
xchg
in
lret
add
dec
pop
xor
jnp
jge
adc
cmp
adc
adc
jg
nop
aas
xchg
pushf
xor
jne
add
or
sub
push
pop
loope
or
xchg
cmpsl
pop
sub
dec
std
incl
inc
cld
stos
xlat
dec
mov
cmp
adc
lcall
mov
jg
ss
and
int3
add
adc
mov
sbb
lcall
or
or
xchg
push
aas
test
mov
pop
icebp
sbb
or
nop
cmc
fimull
pushl
mov
std
leave
push
mov
es
mov
fcoml
clc
mov
cmpsl
and
mov
adc
mov
sti
lea
sbbl
xor
scas
or
and
inc
rcrb
inc
dec
cld
les
test
pop
add
movsb
outsl
shrb
movsl
xchg
push
or
in
inc
loopne
testb
in
pusha
push
lret
clc
mov
adc
push
lcall
jge
js
mov
decb
sbb
int
popa
adc
inc
ss
in
in
incl
pop
xchg
scas
push
and
aam
mov
inc
les
lods
loope
enter
and
mov
sbbb
loopne
push
les
fildll
cmp
loopne
sub
clc
inc
or
sub
pop
idivl
enter
dec
inc
fs
pop
in
add
xchg
lcall
clc
cmp
loop
sub
xor
mov
sub
bound
inc
or
mov
ret
loopne
pop
cltd
mov
mov
test
push
ss
mov
ljmp
enter
loope
inc
bnd
incl
outsl
aad
add
cmc
lret
cs
jno
xor
mov
scas
mov
cmc
push
hlt
push
out
nop
jle
sbb
sub
sbb
stos
pop
pop
dec
clc
loope
lcall
roll
aas
or
cld
push
push
pop
mov
add
xor
add
add
fcmovb
faddp
mov
inc
mov
daa
mov
dec
push
or
xchg
jge
dec
jge
out
push
mov
jmp
jecxz
and
imul
inc
mov
ljmp
aam
pop
ljmp
jb
mov
push
or
stos
insb
xchg
std
pop
inc
dec
cmp
in
and
in
and
push
pusha
and
mov
cmp
push
push
mov
add
xor
test
incl
adc
enter
add
xor
inc
cmp
add
mov
int
sub
outsb
ret
mov
out
cmpsl
push
dec
negb
inc
call
shll
cmp
cmp
pop
mov
mov
push
and
add
sti
aas
cmp
out
shlb
add
mov
sbb
or
xchg
cmp
ljmp
sbb
sahf
adc
into
xlat
jns
mov
push
push
jg
jo
sub
dec
aam
sti
pop
mov
subb
xor
push
jmp
fbstp
dec
cmp
mov
imul
sub
and
adc
inc
jno
push
stos
add
outsl
xchg
fisubl
add
sub
cmp
push
arpl
repnz
mov
dec
mov
add
rolb
pop
sub
mov
or
into
add
dec
int
hlt
dec
inc
cmp
mov
lcall
fiadds
xor
adc
ret
sub
mov
lret
push
cli
add
dec
fdivl
sbb
dec
push
mov
pop
out
fisubs
cmp
lods
pop
and
mov
das
dec
push
xchg
and
sub
pushl
sub
add
xchg
and
push
mov
inc
dec
stos
push
cmp
xor
lahf
movsb
inc
repz
mov
sbb
adc
fadds
lahf
icebp
jmp
jle
cwtl
addr16
outsl
lret
or
sub
jg
jnp
sti
shlb
pop
adc
imul
lcall
mov
out
mov
hlt
sbb
lcall
ja
gs
mov
out
les
mov
adc
lahf
subl
push
retw
sbb
mov
mov
jp
pop
mov
test
fs
or
mov
andb
jmp
adc
adc
pop
out
popf
ret
stos
push
sub
push
aas
out
and
and
lock
ljmp
fistpl
mov
adc
lcall
push
inc
adc
ret
mov
lahf
jp
push
fdivrl
sbb
inc
inc
sbb
mov
shrb
aam
ljmp
cltd
mov
lock
add
pushf
push
mov
jo
dec
adc
enter
push
xor
in
jp
addr16
insb
mov
andb
push
jg
outsb
or
pusha
mov
ret
sub
pop
test
ljmp
xlat
pop
ss
xlat
add
addr16
mov
cmp
mov
xchg
xor
and
adc
aas
insl
inc
jle
aaa
repz
lret
fs
fnclex
sar
sub
incl
xlat
sbb
testl
jmp
cmp
cmp
push
sbb
bound
shll
int3
push
int3
fisttpl
push
outsl
test
mov
adcl
sbb
in
in
sub
js
xchg
push
popf
faddl
sbb
mov
lret
mov
or
add
add
cld
ret
das
sarl
mov
pop
and
mov
push
fldenv
jl
inc
dec
push
mov
push
ljmp
cld
dec
inc
pop
jmp
lock
imul
mov
loope
inc
cltd
lcall
addr16
jl
push
xchg
push
test
jg
cmp
add
stos
and
mov
ret
cwtl
imul
mov
pop
leave
leave
sub
scas
jg
call
bound
dec
das
mov
mov
mov
inc
decb
xchg
imul
test
mov
movsl
outsl
xorb
or
jne
xchg
mov
pop
or
cmp
jg
adc
and
nop
sbb
mov
jo
xchg
mov
pop
cmp
stos
js
int3
mov
dec
mov
mov
mov
sub
inc
lea
or
aas
pop
jecxz
mov
add
add
sub
data16
aaa
cs
ret
incl
jp
xor
into
dec
in
adc
imul
inc
or
mov
jmp
push
les
pop
cmc
lcall
leave
fidivl
jnp
stos
add
jae
cltd
incl
xchg
addb
out
and
popf
aas
mov
fsub
cli
jg
pop
mov
add
sub
ss
xor
nop
fcoms
andl
cmp
lret
jg
and
pop
mov
sub
mov
into
fwait
out
sbbb
xchg
xchg
dec
shl
js
decl
xchg
movsb
ds
dec
dec
insl
push
and
loope
clc
sbb
test
test
xchg
test
jge
pop
clc
inc
sahf
imulb
jmp
ljmp
cmp
sbb
cmp
test
cld
dec
mov
jns
movsb
sbb
lcall
bound
outsl
adc
incl
add
loope
mov
fimull
add
dec
xor
es
movsl
pop
mov
add
ret
cmp
test
jo
sbb
fisttpll
jmp
xchg
scas
repz
clc
aaa
lock
pushf
in
xor
inc
insb
sbb
or
jle
movsb
int3
mov
insb
stos
int
jo
add
subb
fmuls
mov
dec
aas
xchg
mov
xor
pop
addl
mov
clc
push
push
nop
fsubp
mov
mov
lea
add
add
repz
xchg
sub
add
cs
in
call
in
or
je
ljmp
popf
incb
les
or
cwtl
push
incb
push
mov
adc
jp
push
push
testl
inc
dec
cld
in
movsl
cwtl
repnz
nop
out
pushf
xchg
jg
cmpsb
mov
insb
scas
mov
sahf
stos
push
lock
ret
sti
test
cmp
ja
clc
and
sub
push
mov
idiv
pop
push
add
movsb
cs
push
xchg
nop
cmp
adc
mov
addr16
adc
and
add
mov
jl
rorb
bound
jg
aad
or
cmpsb
lods
hlt
pop
testb
aad
aaa
inc
xchg
xchg
push
int3
int3
add
lret
test
sub
in
sub
jge
add
imul
add
cmpsb
mov
add
rolb
fmull
pushf
cmp
pop
shl
mov
cld
repz
and
xchg
and
shlb
adc
nop
bound
xchg
addl
cmpsb
mull
movb
mov
mov
dec
or
lret
fdivrs
inc
mov
imul
int3
mov
popa
sbb
mov
test
or
cld
push
inc
and
push
add
cmp
decl
mov
sbb
lock
sub
lcall
mov
fcompl
jne
jbe
adc
adc
outsb
push
push
jo
inc
sbb
in
stos
and
add
mov
add
push
out
xor
add
push
pushl
neg
loop
dec
cmp
sbb
cmp
cmp
add
pop
inc
call
xor
or
sbb
push
in
dec
icebp
call
call
mov
jp
addl
inc
push
push
push
aam
jecxz
lods
sahf
and
sbb
jg
mov
adc
lret
cmp
mov
scas
cli
mov
sbb
lods
sbb
out
sbb
sbb
push
imul
fistl
popa
inc
xchg
andl
into
cli
ja
leave
pop
inc
je
dec
les
ret
jl
pop
mov
loopne
xor
xchg
call
stc
xchg
or
push
insl
js
aas
dec
push
decl
adc
jbe
movsb
pop
loope
mov
repnz
xchg
push
mov
adc
inc
pop
daa
mov
dec
cmp
and
add
out
lds
lcall
or
add
test
mov
data16
add
dec
push
pushf
cmpl
pop
lock
imul
cld
pop
add
out
jg
test
pop
sub
mov
pop
int
out
or
xchg
sbb
push
mov
inc
ljmp
sbbb
lea
cmp
mov
sbb
xor
add
mov
stos
aam
cmp
and
fwait
or
cmp
pop
xchg
add
xor
movsb
lahf
mov
mov
pop
mov
sahf
test
or
scas
lret
inc
jecxz
fcoml
inc
pusha
lds
add
pop
sbb
jg
adc
mov
aas
add
add
stos
sub
sub
or
stos
andb
jl
cmp
movsb
jb,pn
xlat
pop
jo
xor
dec
std
mov
clc
test
sbbl
dec
or
cli
adc
sbb
jae
push
stos
mov
daa
xchg
cmp
jecxz
adc
cmc
rclb
imul
inc
nop
dec
push
cmp
icebp
fwait
sahf
fiaddl
mov
movsb
insl
cmpsl
scas
sarl
inc
xchg
imull
inc
cmp
rolb
inc
je
inc
mov
lds
adc
push
and
adc
push
outsb
int3
push
sbb
movsl
add
xchg
jno
mov
stos
insb
jl
pop
xor
iret
fwait
incb
add
xor
or
add
ja
lds
aam
push
icebp
inc
sarl
inc
aas
and
or
fucomp
adc
mov
mov
icebp
sbb
add
xchg
enter
adc
sbb
lret
rol
imulb
xor
add
xchg
dec
or
out
inc
mov
lcall
adc
push
dec
mov
jo,pt
sbb
jle
mov
call
mov
adc
mov
add
push
dec
dec
cld
cmp
xor
loope
dec
add
stos
icebp
rcl
adc
inc
adc
jg
jl
std
ror
push
or
adc
mov
fimuls
mov
pusha
pop
ljmp
call
js
popf
mov
pop
loopne
ljmp
jo
insb
stos
and
sbb
mov
mov
dec
sub
test
out
mov
add
xchg
dec
push
mov
sub
mov
or
ds
adc
mov
cmp
and
mov
pop
fstpt
lcall
and
loop
mov
sti
sub
loope
jb
fsubrl
add
cli
or
je
int3
mov
rol
shlb
dec
sbbb
mov
xlat
cmp
loop
lea
orb
mov
ret
sahf
mov
xchg
push
mov
pop
fs
arpl
mov
rcl
jns
sarb
iret
dec
mov
add
mov
xor
cmp
inc
punpckldq
test
jg
imul
fwait
addl
inc
sti
andb
ret
insb
push
and
lret
je
and
enter
aas
repnz
jg
adc
and
mov
dec
mov
int3
pop
lahf
add
inc
scas
test
mov
dec
adc
lret
ljmp
sbb
pop
cwtl
incl
adc
sub
daa
or
les
arpl
xchg
jbe
jl
push
leave
loop
enter
in
outsb
mov
inc
xor
xchg
dec
nop
mov
sti
push
dec
dec
xchg
dec
or
or
ljmp
and
sbb
add
sub
or
test
cmpsb
lret
add
jmp
cs
pmulhw
adc
loop
pop
es
mov
movsl
mov
cmpsl
or
sbb
or
dec
or
inc
mov
jg
inc
add
xchg
nop
rorb
and
sbb
mov
cmp
pop
repnz
adc
sti
scas
mov
jl
jb
dec
std
sbb
imul
call
mov
popf
inc
mov
fdivs
enter
lods
movsb
sub
fs
into
cmpb
imul
dec
je
cmp
cmp
xchg
nop
push
dec
inc
pop
test
loope
xchg
imul
mov
push
xchg
pop
test
popf
xorb
jns
or
fdivr
push
and
andl
rorl
sub
mov
and
add
jmp
test
cmp
jbe
inc
mov
sbb
arpl
lcall
dec
loop
mov
dec
add
jb
lret
sub
or
aas
clc
inc
inc
outsl
add
fs
mov
or
add
cmp
add
dec
call
cmp
cmc
shl
mov
cs
cli
jecxz
sbbb
add
pop
push
mov
sbb
lock
xchg
and
jg
sti
mov
arpl
in
dec
xchg
bnd
add
xchg
xchg
cld
pusha
add
adc
clc
or
iret
lods
add
in
mov
sti
gs
xor
push
mov
lcall
rcll
or
push
fimuls
xchg
push
ss
dec
lahf
inc
int3
scas
gs
xchg
pushf
orl
popf
out
and
sub
inc
jbe
pop
icebp
or
xor
inc
cld
sbb
inc
push
sub
jb
sub
mov
push
mov
inc
xchg
push
cmp
decl
insl
push
dec
add
in
pop
stc
mov
or
fsubs
ficomps
jl
jno
aam
push
mov
dec
jmp
test
popa
sub
out
mov
jp
sti
mov
repz
mov
add
cmovae
lahf
pop
cli
push
out
in
clc
jne
repnz
dec
mov
push
sbb
jge
xor
dec
aaa
cwtl
xor
mov
fisubs
adc
pop
fsubs
dec
xchg
dec
rclb
hlt
pop
jb
outsl
adc
add
add
pop
int
fstp
insb
and
dec
xchg
sub
sub
sbbb
sub
loope
lea
nop
jne
vphaddbd
daa
cmpsb
push
lods
hlt
add
out
cmpsb
bound
scas
imul
inc
fndisi(8087
movsb
push
lds
adc
mov
es
lock
mov
adc
pop
or
adc
xor
movsl
inc
push
outsl
sbb
push
jp
or
or
ja
jge
outsb
mov
lea
js
nop
ja
into
scas
shll
aam
pushl
pop
movl
inc
jo
clc
xor
mov
inc
xchg
xchg
cli
ret
xchg
dec
sti
imul
lahf
inc
lea
popa
pushf
push
iret
and
xor
cltd
hlt
pushf
daa
add
mov
sub
fpatan
add
pop
mov
pusha
fs
gs
mov
mov
pop
mov
xor
dec
xlat
mov
cmp
push
and
and
inc
out
inc
jmp
mov
cmc
dec
xor
add
inc
sbb
out
lods
push
cmp
cmp
rorb
sbb
sbb
dec
mov
adc
sbb
decl
nop
add
scas
and
dec
addb
adc
sub
pusha
adc
xor
aas
enter
jg
inc
push
lods
cmp
mov
dec
mov
and
scas
inc
pop
add
arpl
xchg
cwtd
push
lret
xchg
aas
mov
arpl
loop
sub
add
cld
movlps
add
jge
lcall
adc
xchg
pop
push
xor
lcall
inc
inc
stc
adc
mov
rcrb
sar
ret
cmp
mov
shl
bswap
xor
pop
dec
mov
cmp
scas
cmpsb
push
jle
int3
scas
cld
call
and
sub
insb
lcall
mov
mov
cmc
add
inc
repz
popa
mov
sbb
jg
pop
repz
loopne
sbb
in
dec
adc
dec
stc
lret
and
cmp
ss
cmp
cmp
in
add
push
movsb
add
xchg
jle
adc
test
cli
jle
fstpl
push
into
mov
cmp
popa
test
test
pop
sbb
pop
out
pop
or
add
or
cmpsl
add
nop
dec
push
jbe
and
movsb
pusha
mov
shlb
fucomip
lcall
std
xor
repnz
xor
and
dec
push
cld
lcall
xchg
jns
xchg
xchg
dec
mov
fbld
pop
movsl
add
mov
inc
jmp
or
adc
imul
pushl
add
iret
mov
bound
cltd
or
mov
std
push
orl
push
pop
inc
xor
iret
push
sub
jo
jg
scas
std
stos
sbb
and
xchg
inc
sbb
mov
rclb
xchg
cltd
mov
cld
xchg
ljmp
in
xchg
sbb
shrb
xchg
rclb
jle
nop
cmp
push
daa
insl
jne
sbb
enter
push
cld
inc
in
xchg
inc
daa
movsl
dec
jo
aaa
dec
jnp
pusha
xchg
lret
jbe
mov
sbb
push
add
push
or
cwtl
cli
pop
mov
xor
hlt
mov
cli
js
sti
jmp
movsb
add
roll
out
mov
inc
push
mov
lods
add
out
dec
std
sub
or
popa
and
call
nop
inc
jl
adc
or
mov
mov
or
jge
nop
or
or
insb
mov
loope
mov
fisttpll
add
inc
rol
ljmp
cmovne
add
bnd
or
jo
mov
mov
testl
test
push
or
cmp
mov
gs
fs
cmpsb
test
mov
mov
int
test
popa
and
into
adc
adc
inc
mov
push
repz
push
pop
cmp
aaa
xor
cltd
xchg
push
or
adc
adc
sub
popa
xchg
push
xor
inc
or
inc
add
inc
mov
cmpsl
repz
pushl
and
lret
push
push
push
sbb
aam
jmp
sbb
mov
out
aad
xor
xor
mov
out
sbb
xchg
call
jae
cli
push
out
and
inc
xchg
or
pop
cmpsl
ja
and
pop
xor
ljmp
lds
cmp
add
inc
fsubl
sub
insl
aas
adc
loopne
cs
add
nop
gs
enter
adcl
cwtl
adc
cmp
dec
pop
push
stos
sub
sbb
xor
jg
jl
in
insb
in
jle
mov
push
test
aas
pop
pop
testb
leave
dec
jle
scas
or
add
pop
mov
fldcw
sbb
das
hlt
fistps
jge
or
lcall
xchg
dec
or
insb
scas
icebp
mov
cmp
mov
adc
jg
js
gs
and
daa
fistpl
jmp
mov
inc
ja
sbb
push
jp
push
into
movsl
inc
sub
psrad
movl
aas
push
sub
loop
lret
dec
and
pop
call
add
dec
xor
mov
lds
repz
xorl
pop
xchg
jne
cs
sbb
sub
jle
mov
or
imul
xchg
xor
hlt
int3
pusha
addl
mov
ds
jg
mov
ss
fsubs
cmpsl
scas
cmp
test
sbb
mov
std
push
add
cmp
imulb
and
jnp
imul
data16
aam
inc
mov
je
mov
xor
push
xchg
adc
mov
inc
push
aad
fdivs
xor
or
mov
icebp
dec
addr16
mov
xchg
filds
cmc
push
sub
lea
xorl
imul
sbb
das
cmp
mov
nop
repz
mov
in
and
in
ret
popf
push
hlt
push
adc
ja
mov
or
jo
add
jle
and
orl
mov
xor
add
mov
mov
shlb
mov
cmp
jo
repnz
dec
dec
sbb
shl
adc
sub
sbb
dec
bound
and
mov
push
sbb
adc
add
xchg
sbb
or
dec
dec
mov
stc
adc
push
adc
icebp
add
and
mov
in
push
pop
adc
into
pop
and
jmp
push
loopne
and
dec
lret
sbb
cmp
add
pushf
mov
mov
lock
sbb
ret
test
and
movsl
mov
sub
inc
mov
pop
iret
out
sub
test
xor
mov
test
or
sbb
add
jg
or
mov
push
int
sub
hlt
push
xchg
jecxz
test
test
test
imul
mov
sub
mov
sub
dec
ljmp
push
outsb
js
daa
insb
or
pop
push
data16
rclb
test
dec
xchg
stc
ja
jmp
test
fiadds
ds
dec
mov
enter
pop
hlt
pushl
data16
lea
jl
cmp
lcall
aaa
adc
aad
pusha
lock
pusha
push
xor
jno
in
bts
test
pop
sub
cmpsb
sbb
decl
mov
jo
sbb
add
test
sbb
inc
push
pop
decl
xor
add
add
cmp
std
adc
insb
in
mov
pop
pusha
or
xchg
xchg
xchg
adc
mov
fs
fistpl
adc
movsb
aam
cmpsb
xor
mov
push
inc
sub
push
mov
fmuls
inc
in
sbb
out
jo
push
addr16
sub
xor
pop
xor
adc
jo
ret
test
sahf
clc
js
iret
rolb
insb
outsl
push
sub
fstl
cmp
pop
fst
and
or
lock
xor
jp
jnp
fwait
cmp
cmp
dec
fcoml
lret
mov
dec
jmp
lcall
jl
shll
enter
fmull
jo
sub
mov
ja
jg
inc
pop
or
std
fistps
cmp
add
mov
add
loopne
sahf
pop
adc
ljmp
xchg
insb
fcomps
leave
js
lock
lods
or
dec
push
fdivrs
ds
xchg
add
rolb
or
out
or
lods
andl
lea
and
cmp
loope
push
not
lea
mov
incl
stc
fmul
cli
daa
push
pop
pop
jle
repz
xchg
cltd
lahf
adc
lcall
sbb
cmc
inc
xor
jle
incl
daa
sbbl
xchg
sub
ljmp
jbe
push
jp
inc
mov
jg
pop
jmp
into
nop
aam
xor
jg
jae
jl
add
popf
dec
in
lea
int
sbb
mov
lock
lods
icebp
cmp
movsb
sub
xchg
xorb
cmp
add
das
test
xchg
fwait
loopne
sub
and
push
add
xlat
xor
es
adc
or
fcomip
int
aam
mov
or
sub
loope
test
shl
mov
mov
jg
les
and
and
cwtl
cmp
cmp
pop
pop
mov
shll
shlb
pop
leave
clc
incl
xor
pop
sbb
test
gs
push
jns
cmpsb
mov
adc
pushl
add
ret
ret
ja
add
sub
jge
loop
cld
jmp
xor
ja
push
les
psrlw
hlt
sbb
cltd
cli
adc
lods
mov
push
dec
inc
rcll
xor
jae
xlat
and
jno
cs
int
call
push
push
repnz
cmovne
or
rorb
fnsave
pop
in
dec
clc
decl
loope
daa
adc
pop
and
and
cmpsb
push
push
push
and
xchg
push
les
xchg
adc
adc
jno
mov
ror
fidivs
lods
jo
push
sub
push
pop
add
cmp
scas
ljmp
xchg
jae
idiv
dec
mov
xchg
lret
rcrb
sbb
mov
cli
sbb
mov
roll
dec
push
mov
mov
or
push
pop
cmp
je
dec
dec
sub
or
cld
mov
popf
mov
test
or
push
int3
xchg
jns
jge
pop
xchg
xor
or
hlt
add
sbb
ret
outsl
xchg
xchg
loope
push
andl
push
ja
mov
mov
ret
ss
out
gs
mov
fimuls
cmp
sub
jg
dec
rorb
sbb
loopne
jbe
or
mov
lahf
cmp
inc
test
rcll
jge
pop
xorb
sahf
iret
das
inc
or
incl
sbb
ret
les
insb
xchg
mov
sub
popf
mov
decl
push
add
xor
outsl
xchg
jp
sbb
mov
mov
fcmovbe
rorb
push
pop
sub
loop
xor
mov
xchg
orl
adc
in
popf
or
mov
add
lods
addl
pop
repnz
push
jo
out
outsb
test
in
cmc
cmpsb
xchg
aad
push
jg
icebp
add
adc
sbb
mov
test
cmp
iret
js
sub
fbld
aam
jne
dec
insl
aas
xor
pop
pop
aam
fisttps
jecxz
les
inc
push
test
or
dec
add
xor
ret
adc
pushl
mov
mov
mov
and
jmp
xor
adc
sahf
add
fcmovu
fst
fstpt
fcmovu
dec
stc
mov
push
hlt
fbstp
mov
ja
push
in
push
dec
lahf
mov
out
into
fsts
xchg
jmp
adc
push
out
push
cmp
push
xchg
out
sbb
sub
lods
add
jge
lahf
lds
xchg
cmpsb
inc
push
cmpsb
mov
and
sub
sbb
call
movsb
add
dec
inc
lahf
xchg
jmp
xor
jg
adc
xlat
push
xor
mov
add
add
or
jg
popf
mov
jb
dec
fs
pop
rorb
js
sbb
mov
sub
es
xor
addr16
daa
xchg
nop
xchg
dec
pushf
add
frstor
add
inc
aad
je
loope
lcall
pop
cmp
mov
xor
mov
ljmp
pop
js
jns
push
pop
dec
mov
je
pop
pop
mov
fstpl
jmp
subl
cmpl
out
ret
rclb
and
enter
mov
aas
mov
repz
mov
mov
jle
cmp
in
das
das
xchg
pop
inc
add
loop
xlat
dec
rcr
pushf
jle
and
std
add
addl
cli
pop
icebp
or
push
insb
lcall
adc
adc
out
xor
fisttps
loope
add
and
mov
rcrb
dec
push
test
xor
pusha
es
adc
lret
cli
lcall
test
sahf
adc
data16
inc
fsts
inc
push
adc
xchg
cld
test
mov
or
push
ret
dec
lds
mov
push
ret
jne
ret
shl
cli
and
xor
lahf
push
pop
and
js
xchg
pop
les
push
add
mov
incb
in
or
dec
push
push
jmp
pushf
in
mov
jbe
sahf
fadds
mov
mov
xchg
daa
dec
jno
fisubrs
imul
loopne
test
and
and
fsubr
adc
push
pop
loopne
cwtl
and
mov
lahf
sub
fnstenv
sarb
dec
repnz
push
iret
clc
and
call
mov
ja
in
je
xchg
sbbb
mov
scas
inc
in
dec
push
lahf
andb
and
movsb
xchg
int3
ror
adc
jg
or
out
test
xchg
mov
pop
sbb
jle
ds
jg
aad
pop
std
push
mov
sbb
pop
mov
ss
xchg
scas
inc
shl
test
mov
xlat
and
aas
and
cs
test
xchg
add
jl
int3
sar
jecxz
xchg
hlt
add
mov
push
inc
push
roll
xor
dec
mov
add
imul
cmp
push
sub
js
xchg
pusha
push
shrb
adc
scas
mov
push
sbb
test
test
in
aad
icebp
push
aaa
ljmp
adc
lret
add
lahf
jp
push
add
xorb
mov
popf
in
cmp
add
scas
aaa
loopne
push
push
mov
in
xor
addr16
xchg
xor
dec
xrstor
pop
stos
push
dec
fidivl
lcall
jne
ret
aam
or
and
xlat
sbb
or
hlt
and
outsb
mov
mov
push
or
inc
ja
sub
adc
push
mov
in
fs
mov
add
imul
jne
pushf
scas
add
loop
or
shlb
aas
cld
pop
movb
sub
mov
cld
mov
xchg
jecxz
test
jo
nop
xor
mov
testb
inc
popa
push
and
or
ljmp
mov
inc
fldl
or
pop
sarb
adc
xchg
mov
aad
pop
adc
leave
jle
adcb
mov
aaa
xor
scas
jp
add
aas
push
adcl
cmp
cli
cmp
adc
inc
xor
cmp
cld
mov
push
inc
pop
popa
outsb
pop
jnp
lcall
mov
xchg
into
pop
and
sbb
aas
pop
push
cli
xchg
add
loopne,pn
scas
xchg
pusha
aas
jb
lcall
pop
inc
mov
inc
das
fcmovu
or
cmp
cmp
test
xchg
js
or
pop
xchg
idivb
pop
inc
rorl
shrl
push
jl
adc
xor
or
jmp
stos
push
sbb
lret
int
dec
push
push
arpl
clc
adc
cmpsb
loop
push
les
negb
cmp
pushf
rclb
inc
or
test
or
rcl
sahf
cmpsl
fldt
xor
or
sbbb
pushl
add
add
lcall
dec
or
popa
sar
dec
mov
lea
movb
es
sysexit
mov
and
aad
cmpl
dec
inc
fstl
xor
mov
jge
es
js
sub
xchg
sarl
xlat
push
inc
aas
xor
lahf
fstps
adc
in
out
incl
push
ror
sti
xchg
out
sbb
pop
mov
scas
ffree
imul
in
lock
fwait
popa
out
inc
mov
push
pop
pusha
movsl
ljmp
nop
cli
test
pop
cmp
testb
jl
pop
outsl
je
int3
mov
incl
daa
or
jo
push
in
das
stc
cmp
test
sbb
mov
adc
and
enter
cmp
repnz
add
jo
jo
xchg
push
push
jae
insl
adc
push
leave
cmp
cmp
aad
sub
push
add
loop
inc
jl
out
xchg
fwait
movsb
mov
mov
xchg
lahf
cmp
mov
pop
inc
dec
sbb
sbb
or
lea
scas
and
ret
rolb
dec
adc
xchg
fadd
xchg
bound
cmc
mov
ret
outsl
pop
retw
inc
push
andb
gs
loope
mov
cmp
sub
js
jne
cmpsb
insl
sbb
jb
mov
shll
add
xchg
icebp
jae
jo
loopne
jecxz
aas
cmp
scas
push
or
mov
js
cmp
cmp
imul
xlat
add
adc
sub
mov
lods
mov
xchg
jae
push
clc
xchg
pop
lret
aaa
pusha
stos
cmovbe
jns
rcrl
xchg
in
sahf
int
cwtl
and
incb
jae
add
push
sbb
pop
dec
push
int3
pusha
cmp
adc
inc
adc
cmpsb
insb
stos
aam
dec
cli
dec
fisttps
fsubrs
push
mov
inc
push
mov
xchg
adc
aaa
add
hlt
mov
cld
aas
or
fdivl
jbe
add
sbb
shr
pop
pusha
cmp
lret
dec
mov
lcall
ss
ret
add
icebp
mov
cmc
dec
jb
fsubp
xchg
jl
mov
push
sub
dec
das
enter
clc
lods
mov
fwait
scas
mov
push
cmp
clc
push
out
sti
push
pop
xor
ds
sub
lods
iret
fsubr
or
addl
aas
adcb
adc
jl
and
push
cs
leave
and
push
imul
lea
push
dec
popf
add
or
icebp
imul
les
pop
add
subb
flds
dec
flds
mov
rclb
pop
mov
jmp
or
ljmp
test
lret
or
xchg
outsl
pop
loopne
dec
sub
pop
mov
scas
push
pop
xor
mov
mov
ds
addb
xchg
jmp
push
fisubrs
rorb
and
or
out
mov
ficoml
inc
or
test
dec
pop
or
inc
jge
setle
or
dec
test
add
out
and
stos
mov
cltd
cmp
cld
stos
add
or
arpl
add
jne
jnp
cmp
jae
test
xchg
mov
lret
sub
iret
xor
popa
fs
jg
jp
scas
cltd
mov
into
jg
dec
sbb
decl
call
sub
aas
jecxz
jg
ljmp
push
inc
test
and
jmp
mov
lret
push
push
sub
sub
mull
push
mov
mov
mov
xor
fs
jnp
or
das
jns
mov
push
lea
fisubs
sub
rcr
lret
push
lcall
test
in
sbb
jmp
inc
push
mov
and
movsl
fisubrs
xchg
imul
mov
mov
jo
inc
add
cld
xlat
sbb
mov
mov
add
ret
mov
out
insb
arpl
or
dec
cld
add
out
mov
ljmp
repz
push
sbb
lds
mov
jno
push
nop
sahf
push
rolb
dec
pushl
ja
adc
fistps
jl
out
adc
adc
xor
addb
adc
fwait
pop
adc
imul
xlat
mov
jmp
fildl
andl
pop
cld
ret
cmp
fwait
push
imul
fndisi(8087
inc
cmp
xor
push
sarl
das
cmp
add
cld
pusha
add
gs
iret
mov
rcrl
or
pop
insb
cld
xchg
rclb
test
mov
icebp
and
cltd
bound
std
pop
xlat
inc
push
mov
add
in
adc
pop
jno
mov
int3
hlt
mov
push
or
sahf
pop
xor
push
call
sub
jb
imul
mov
cli
mov
lods
xor
test
lods
loopne
push
dec
xchg
scas
mov
stos
sub
popa
inc
fiadds
js
fdivrs
xchg
pop
sub
inc
nop
iret
dec
add
jl
ror
cmpsl
test
cmp
mov
pushf
xchg
arpl
pushl
ljmp
jl
in
push
out
pop
addb
fnstcw
mov
push
adc
lock
repnz
mov
xor
jno
test
cmc
incl
dec
xchg
add
adc
push
mov
push
xor
push
iret
stos
inc
push
cmp
xchg
xor
or
sahf
das
test
mov
jnp
dec
xor
loope
cmp
adc
or
push
sbb
xchg
mov
and
loope
hlt
xchg
cli
call
loopne
inc
adc
jl
inc
pusha
enter
lret
pop
loopne
and
lock
sub
cwtl
jo
mov
mov
xor
mov
cld
mov
imul
pop
mov
or
mov
repnz
mov
and
inc
test
xchg
cld
jmp
add
xchg
or
and
mov
jnp
lods
mov
stos
push
call
add
mov
leave
ds
idivb
xchg
cmp
and
inc
mov
push
and
dec
imul
dec
fidivs
movsl
pop
loope
jg
jne
mov
fwait
or
out
inc
push
adc
xor
leave
loopne
push
jnp
adcl
inc
imul
and
out
arpl
mov
outsl
lods
or
js
jnp
test
mov
or
inc
or
roll
ljmp
mov
xor
mov
xor
sarb
mov
clc
pushl
jecxz
test
out
or
pop
shll
push
add
push
jo
cmpsl
xlat
sub
jp
pop
test
jno
sti
or
cmp
rcrl
sub
mov
add
test
clc
add
xor
cwtl
mov
stc
call
or
mov
mov
cmp
fdivrs
decb
xor
xor
inc
or
cs
mov
mov
jb
pop
fsubrs
out
or
mov
cmpsl
ja
sbb
int
mov
add
mov
and
fwait
rorl
stos
pop
js
pop
or
add
adc
sub
and
out
clc
decl
xor
loopne
mull
stos
out
fwait
jmp
aam
aad
sbbl
mov
sbb
inc
mov
inc
pusha
int
add
cmp
test
pop
and
adc
sbb
out
stos
cmpsb
rcrb
jmp
and
stos
enter
imul
fs
dec
in
mov
popf
cmp
pop
push
aaa
xchg
inc
push
pusha
test
incl
push
adcl
and
xorl
sub
fs
pushl
cmp
pop
inc
xchg
xor
push
cs
mov
adc
adc
incl
or
add
add
stos
push
jb
hlt
mov
jl
adc
ret
dec
mov
add
andb
jmp
pop
hlt
fisttps
xor
iret
or
mov
mov
scas
jl
jle
out
jae
lock
mov
loopne
mov
int
incb
lds
adc
outsl
shr
loope
arpl
push
cmpsl
inc
scas
mov
icebp
sbb
roll
sar
pop
add
mov
inc
mov
into
lret
jae
daa
push
xchg
fwait
pop
push
xchg
add
bound
mov
out
ret
push
fbld
or
inc
jl
cmp
in
shlb
shlb
cltd
aas
add
call
in
jecxz
call
adc
popf
sti
push
cltd
sbb
popl
push
push
mov
push
pushf
test
test
jns
add
mov
mov
outsb
and
mov
mov
ret
stc
test
shlb
lea
out
aaa
repnz
lahf
pop
add
fbld
xchg
and
xor
jns
pop
push
sbb
cld
fbstp
ret
jmp
and
lods
sbb
pop
xchg
negb
dec
pop
andb
pop
push
dec
ljmp
mov
add
adc
icebp
pop
sub
jae
pusha
sbb
icebp
push
add
xlat
cmp
int3
jg
rol
sbb
sub
rolb
push
cli
icebp
sub
xchg
inc
iret
rcll
aas
or
rorb
sub
sbb
add
inc
jle
adc
lret
push
sub
jle
lcall
mov
test
test
dec
lcall
sbb
aaa
xor
lcall
jmp
nop
sub
dec
sub
jle
adc
jbe
iret
or
nop
into
stc
aas
pop
clc
insb
sbb
or
mov
dec
and
sub
mov
lea
xchg
mov
pushl
xchg
loopne
mov
push
xor
mov
cld
and
aaa
xchg
outsl
nop
cmc
out
inc
inc
arpl
popl
aas
xchg
hlt
sbb
xchg
sbb
inc
dec
dec
ret
fcmovb
fdiv
mov
ret
add
bound
push
inc
xchg
daa
int
inc
roll
mov
insl
sti
cs
jmp
inc
and
in
enter
lds
sub
dec
movb
rclb
je
cwtl
movsb
xchg
cs
sahf
insb
rep
or
insl
daa
adcb
adc
adc
les
aaa
inc
test
in
popf
insl
pop
mov
lods
xchg
add
std
dec
clc
daa
add
ljmp
sub
ds
inc
xorl
test
div
repnz
pushf
btr
shll
hlt
clc
pushl
push
cmp
cmp
xor
arpl
out
jp
ret
cmpsb
dec
loop
js
adc
nop
rolb
repnz
push
inc
mov
les
cmp
ja
pop
or
push
mov
aas
pop
adc
cld
inc
movsl
and
incl
dec
pop
add
xor
inc
pop
sbb
xor
add
int3
xor
and
sarl
popf
xor
mov
int3
jg
sbbb
leave
jge
or
nop
ljmp
cmpsb
mov
pop
mov
and
sbb
mov
call
cmp
jns
clc
or
xlat
xchg
dec
xchg
add
es
or
dec
jbe
push
ljmp
xchg
inc
hlt
push
xchg
push
xchg
loop
ja
xchg
aaa
inc
cmp
push
aad
int
mov
push
dec
pop
push
lret
jno
add
inc
mov
xchg
mov
inc
lret
add
nop
dec
shlb
mov
mov
jae
shrl
sahf
fcmovb
xlat
and
push
ss
push
mov
add
sub
add
or
pop
ret
dec
jle
xor
adc
dec
insb
fistl
or
add
shlb
out
orb
dec
outsl
ret
jb
push
cltd
and
daa
shrl
adc
dec
or
pop
cs
cmp
fldt
push
push
decl
gs
xor
push
jp
call
rcr
mov
xchg
push
or
sub
ret
aas
test
fdiv
ljmp
xchg
mov
int3
cmp
shl
adc
or
and
jb
cmp
pop
in
push
sub
sahf
stc
loope
pushf
nop
and
sbb
add
add
and
rorb
cmpl
push
aaa
adc
mov
test
adc
xchg
aas
js
or
dec
sahf
mov
add
pop
push
add
in
hlt
movsb
dec
xchg
outsb
lcall
mov
cmp
call
inc
das
or
sub
daa
les
xor
sub
xchg
in
ljmp
cmp
push
cmc
mov
sub
aaa
lods
jb
in
or
popf
test
js
push
shlb
adc
xor
leave
addb
sub
insl
loopne
mov
pop
push
push
xor
cmp
movsb
mov
adc
and
dec
inc
xchg
jmp
clc
aas
xchg
mov
lock
sbb
cmpsl
dec
pushl
adc
gs
ret
mov
arpl
inc
xor
push
jge
mov
cs
mov
dec
xchg
nop
mov
inc
pop
push
add
mov
adc
and
call
fwait
dec
pusha
nop
adc
aam
push
add
lret
cmp
sbb
adc
into
mov
mov
jl
mov
push
dec
push
arpl
imulb
or
mov
sub
mov
jg
jecxz
jns
fisubrl
int3
lret
xor
inc
fs
push
loope
enter
lods
sub
push
xchg
push
lcall
cmp
jmp
mov
sub
ljmp
out
sbb
int3
jns
mov
mov
scas
sahf
pop
add
mov
std
adc
mov
or
pushfw
inc
cltd
outsl
or
insb
mov
ds
test
bswap
lods
data16
fwait
inc
add
or
lcall
or
add
cmp
or
sbb
or
sti
adcl
scas
cmp
iret
and
xor
nop
out
cwtl
jnp
jmp
jne
dec
jmp
mov
xor
mov
mov
clc
test
pop
pop
adc
lds
cmp
xor
pop
lods
xorl
int
rorb
test
jnp
jecxz
out
mov
pop
mov
rolb
mov
and
lahf
sbb
pop
leave
stos
ret
adc
loop
in
insl
fists
aam
ja
stc
sbb
jmp
xorl
pop
mov
mov
mov
or
pop
int
stos
add
mov
dec
mov
add
rorb
filds
fwait
mov
jle
les
mov
inc
inc
fiaddl
xchg
jecxz
mov
fsts
cli
add
inc
sub
rep
jae
or
push
orb
or
lock
ljmp
xor
jmp
inc
daa
sbb
int3
add
sahf
jg
ffree
cmp
fidivrs
mov
flds
loopne
test
add
jne
jno
inc
sbb
push
inc
xchg
lock
mov
or
xchg
fadds
pop
int
into
fistps
imul
rcll
test
ljmp
mov
dec
add
popf
icebp
dec
insb
cmpl
sub
popa
jns
sub
mov
sbb
cld
mov
iret
loop
and
movsb
imul
mov
xchg
xchg
mov
stos
lret
lea
sbbb
rcrb
dec
jo
pusha
sbb
dec
add
add
outsl
mov
jmp
mov
in
movsl
add
sarb
adc
cmc
cmc
call
add
loopne
mov
mov
xchg
rol
fwait
hlt
sbb
in
or
cmp
std
or
cmp
dec
sbb
mov
cmc
sbb
addr16
mov
in
sub
xchg
jg
push
and
lret
jne
sbb
cmp
test
aam
loopne
loopne
ds
leave
mov
aaa
mov
xchg
loope
xadd
sbb
jbe
sti
lcall
adc
mov
notb
test
movsb
lods
or
dec
sar
incl
pushl
push
jg
add
out
push
or
bound
pushf
xchg
mov
xor
or
test
iret
push
fs
or
sti
inc
pop
mov
adc
pusha
or
jg
lock
adc
test
out
adc
test
cmp
adc
xchg
loope
push
pop
mov
shrb
pop
cmc
das
and
daa
int
add
xor
leave
dec
call
je
mov
test
cmpsl
mov
in
loop
jb
sti
cmc
mov
stos
adc
sbb
aas
mov
jge
les
cwtl
mov
shlb
scas
pop
fwait
inc
popf
add
pop
and
and
lahf
and
mov
pop
adc
mov
push
enter
rorb
pop
jbe
xchg
shlb
scas
cmc
add
mov
lds
or
sar
subb
subb
and
xchg
add
xchg
push
xchg
shll
scas
cmp
xchg
mov
jns
mov
orl
jecxz
imul
add
xor
leave
pusha
dec
xchg
jno
add
adc
add
push
lock
cmp
lahf
sbb
sbb
cmp
mov
pusha
jnp
push
xchg
mov
sub
push
pop
cmc
push
mov
push
push
loop
pop
or
test
push
das
orl
push
cli
jg
cmp
add
mov
xor
lock
xchg
fs
aas
pop
pusha
les
adc
outsl
or
clc
jmp
jno
pop
movsb
testb
xchg
pop
lock
or
mov
leave
xchg
dec
xchg
sub
jle
add
push
mov
ret
and
pusha
filds
das
sbb
jae
add
mov
mov
sub
inc
test
push
sbb
stc
push
sahf
jl
imul
ret
push
xor
xor
cmpsb
mov
cmpl
mov
frstor
mov
mov
mov
lods
mov
test
jg
push
and
dec
jle
jno
inc
xchg
sbb
leave
push
jp
inc
aaa
mov
jecxz
hlt
jo
xor
in
shrb
add
rcll
jle
sub
scas
mov
fwait
scas
cli
pop
cltd
mov
mov
test
sarb
movsl
add
fwait
incl
adc
sbb
xchg
mov
dec
pop
mov
jno
xor
mov
jge
mov
test
or
fwait
rorl
inc
inc
and
aad
add
sti
or
inc
inc
sbb
mov
andb
or
sub
pop
call
or
jb
mov
adc
cmp
cmp
repz
xor
rolb
add
bound
sub
xchg
jno
loope
jecxz
cld
adc
fmulp
jg
in
icebp
scas
fmuls
push
flds
xchg
mov
lea
xchg
aam
dec
xor
fildll
hlt
cmp
mov
nop
loope
xchg
xor
jecxz
push
neg
dec
clc
pop
add
inc
xchg
lret
add
and
sub
nop
xor
mov
pusha
jg
in
mov
add
add
test
mov
inc
jecxz
inc
xor
int3
mov
loope
rcrb
inc
movsb
sbb
imul
xor
or
ret
push
add
inc
xchg
jg
push
cld
mov
loopne
cmp
dec
and
and
es
and
in
mov
repnz
pop
add
in
rcl
lret
push
xlat
mov
xchg
or
push
std
cmpb
adc
push
pop
xchg
sub
dec
jne
in
cmc
sti
jg
sub
cmp
mov
js
mov
int
arpl
popf
jo
add
sahf
and
pop
dec
fdivrp
push
pushf
pop
jmp
decb
xchg
pop
push
lahf
outsl
inc
pop
inc
addr16
add
call
push
sub
int3
scas
pop
lret
ds
test
fisttpll
je
mov
lds
pop
cmp
pop
test
stc
rorb
mov
loope
inc
cltd
pop
enter
mov
push
adc
and
lods
mov
xchg
xlat
shlb
es
or
repz
jae
add
mov
test
rcll
bnd
ljmp
xor
lcall
pop
ret
push
mov
jg
pop
dec
call
xor
stos
xchg
dec
jae
fsubs
dec
mov
aas
or
stos
cmpsl
mov
ret
xorl
inc
mov
cmp
pushf
inc
inc
outsb
hlt
sub
leave
pusha
sbbl
es
std
pop
mov
lea
stos
adc
sbb
hlt
fwait
and
xchg
push
stos
jmp
push
cs
push
push
inc
push
les
inc
add
and
fucomp
adc
dec
roll
outsb
lret
jmp
ret
addr16
jno
mov
mov
xchg
inc
int3
outsl
pop
or
mov
push
mov
shl
xor
mov
cmpsl
jns
add
popl
mov
mov
cs
nop
mov
jl
mov
or
and
pop
sub
jmp
jg
push
add
out
fwait
and
push
in
ss
scas
movsl
vmovaps
pop
data16
add
xor
fnstcw
push
outsl
mov
xor
out
ljmp
adc
or
mov
mov
inc
je
aad
or
outsb
sbb
lock
sub
outsb
hlt
mov
aas
repnz
lock
enter
mov
cltd
ret
sti
lret
js
jecxz
push
loope
push
mov
cli
nop
loop
mov
es
sbb
outsb
sbb
sti
lock
xchg
mov
cmp
loope
jle
or
js
jl
icebp
loopne
mov
lds
cli
and
and
popa
jge
cmp
bound
xorb
out
out
incb
mov
or
mov
mov
and
cmpl
ljmp
inc
outsl
jecxz
call
icebp
and
pop
mov
lock
jg
mov
pop
sub
sbb
cs
call
push
push
xor
popa
js
push
sbb
add
in
pop
jl
mov
cmpsb
cltd
and
fstl
loop
sarb
sbb
xor
mov
aas
clc
sbb
out
enter
mov
inc
dec
movsl
jge
xor
push
test
sub
add
jns
ljmp
test
mov
add
test
and
fdiv
aas
enter
fs
fidivrl
addl
mov
lds
inc
sub
bound
cs
cmp
pop
sbbl
cmp
adc
call
or
fsub
xchg
in
out
data16
or
mov
dec
mov
jne
scas
xlat
fisubrl
arpl
push
dec
shlb
aas
imul
aad
in
adc
clc
lcall
faddl
daa
mull
sbb
test
fnsave
aaa
cs
test
movsb
lcall
inc
and
lahf
lds
add
ret
mov
cs
leave
and
cltd
ds
sti
das
outsl
in
enter
movsl
xchg
cli
decl
das
jo
cltd
jae
imulb
addr16
fbld
jecxz
mov
pop
aam
inc
incl
jg
ficoms
data16
pop
lret
lock
arpl
ret
in
mov
inc
xchg
cmc
adc
iret
jo
mov
push
das
jl
cltd
jb
mov
and
xor
clts
repnz
lret
adc
sbb
call
cmc
stos
fadds
jl
pop
add
push
ljmp
movsb
sti
icebp
cmp
clc
xor
mov
push
leave
and
rcll
fs
add
dec
ja
push
sbb
push
insb
push
scas
dec
adc
sbb
aas
and
lods
sbb
jo
in
shrb
pop
stc
lcall
scas
adc
mov
add
push
sbb
test
jg
add
leave
xor
in
out
inc
xchg
pop
popa
ffree
stos
cmp
lahf
movsb
dec
test
into
or
and
push
movsb
ja
or
loopne
call
xchg
repz
bound
inc
mov
mov
mov
xor
ffreep
arpl
or
cmp
lock
cwtl
leave
jns
loop
data16
daa
and
push
pushl
call
add
inc
stc
mov
lds
cmpsb
push
fildl
std
xchg
mov
cmpsl
inc
mov
in
push
cmp
pop
incl
insl
inc
cli
daa
js
test
add
test
push
inc
cwtl
or
fnsave
ljmp
add
fs
fiaddl
pop
pop
add
pop
xchg
and
stos
sub
dec
je
or
in
pop
cmp
stos
js
xor
cs
sub
inc
cmp
xor
jle
outsb
notl
decl
loope
or
mov
js
or
ljmp
add
pushf
fdivs
jb
decl
insl
aaa
clc
icebp
adc
inc
xorl
xlat
xchg
dec
sub
testl
test
sub
sbb
push
sarl
xor
cmpsb
jl
xchg
out
aaa
daa
xchg
mov
dec
sub
cmp
jo
sbb
jg
add
das
jecxz
ja
add
mov
pop
call
xor
sub
leave
arpl
mov
add
adc
cmpsl
mov
mov
jmp
aam
into
in
gs
jmp
push
and
add
cld
int
xchg
sbb
jae
push
gs
test
iret
rol
shlb
rcll
adc
popf
jecxz
or
push
or
or
or
sbb
xchg
sub
jb
sarb
dec
int
test
out
push
push
ror
push
adc
outsl
mov
js
jb
out
test
es
pop
sub
xchg
cmp
dec
adc
inc
fstps
adc
pushl
repnz
adc
push
mov
cmp
loope
fwait
mov
imul
xchg
sub
push
xchg
pop
and
incl
mov
or
jg
or
and
insl
loopne
push
icebp
xor
push
std
stc
stos
loopne
inc
stos
shll
andb
aad
pmaxsw
mov
xlat
xchg
repz
mov
cmpsb
insl
jno
add
dec
sub
stos
aam
jne
cld
xchg
jg
loopne
cltd
data16
insl
pop
mov
or
fistps
outsl
mov
sub
sar
mov
xor
sahf
jle
mov
jbe
ret
rolb
loop
push
lcall
std
xlat
inc
jg
ss
inc
ljmp
pop
jnp
sbb
xchg
fwait
sti
fwait
sbb
push
std
or
sub
cmp
add
ljmp
addr16
sbb
pop
ret
pop
or
int
nop
push
lea
lcall
push
push
stos
ljmp
arpl
pusha
inc
aam
and
add
cmpb
pushf
xchg
mov
icebp
jg
aam
pop
jmp
out
lods
movsb
xchg
and
js
cmp
sub
in
divb
in
repnz
adc
cmp
and
lahf
call
adc
or
mov
xchg
aad
js
dec
jmp
stos
cmp
pusha
int
push
xor
call
adc
or
movsl
test
push
out
int3
jg
pop
aaa
and
out
sbb
lods
xchg
pushl
jo
inc
divb
cwtl
inc
fsubrs
dec
add
sbb
cs
mov
clc
dec
mov
add
sub
push
rcrb
lahf
cmp
cmc
lcall
xorb
mov
xchg
pop
hlt
bound
mov
mov
or
cmpsl
in
je
test
and
inc
std
decl
adc
pop
lods
arpl
jecxz
sbb
pop
xchg
mov
mov
mov
out
fmull
cmp
lcall
mov
adc
push
jo
cmp
push
xor
xor
test
in
out
icebp
sub
lods
xor
adc
clc
push
sbb
push
loopnew
rcr
sbb
pushf
clc
test
add
add
les
mov
xlat
je
gs
orl
gs
lret
mov
btr
inc
or
mov
cwtl
and
outsl
cmpsb
xor
cld
rcrb
les
test
jo
icebp
mov
imul
push
jg
mov
adc
aad
push
inc
sbbl
fstp
mov
xchg
fsin
ljmp
push
cmp
shlb
mov
fwait
cli
jl
pop
and
arpl
mov
jns
add
add
sub
dec
mov
mov
orl
sbb
sbb
testb
dec
repz
test
inc
add
xor
loop
inc
sbb
out
dec
add
push
sbb
ret
shlb
cmp
xchg
test
dec
cli
pop
cmp
mov
stos
into
xor
push
sbb
das
ret
sbb
mov
arpl
and
outsl
adc
xor
mov
sub
orl
sbb
lods
ss
adc
adc
adc
xor
test
sbb
cmp
shrb
lods
sahf
cmpsb
jnp
lcall
adc
pushf
add
and
jno
inc
aas
mov
leave
outsl
pop
or
pusha
in
roll
loope
jae
shll
shl
mov
pop
mov
cmp
nop
mov
mov
stc
or
mov
mov
ror
std
repz
sbb
cmp
push
cmp
push
int3
ret
cmp
aas
cmp
xlat
or
add
std
sar
lods
inc
mov
lcall
fwait
xchg
rcll
pop
loope
movsb
jns
mov
mov
push
xor
fnsave
dec
inc
sub
mov
add
cmp
xchg
addr16
aas
cwtl
push
in
pop
cld
mov
call
ljmp
inc
ret
sbb
xorl
in
test
and
mull
cld
js
fstpl
lea
push
fucom
call
jg
ds
xchg
mov
or
popa
jne
adc
mov
ljmp
push
mov
jg
out
sbb
mov
pop
mov
movsl
mov
cmpb
scas
sbb
movsl
jmp
or
or
add
pop
cli
mov
jge
jg
pop
jno
in
arpl
in
leave
push
outsl
and
jo
cmp
pop
outsl
pop
enter
out
inc
test
cmp
xchg
inc
js
lods
xchg
cmp
cld
call
hlt
push
jbe
fwait
jne
mov
inc
mov
aad
ja
pop
push
cmp
cmp
cli
and
sub
adc
fwait
inc
dec
movsl
nop
movsb
icebp
inc
es
jge
test
lock
add
popf
mov
dec
je
or
pusha
les
sbb
cmc
hlt
sar
test
stos
mov
pop
adc
inc
mov
dec
cld
lahf
cmpsb
inc
sbb
xchg
sub
push
sbb
push
mov
push
inc
mov
into
in
and
inc
clc
add
xchg
loopne
jg
mov
loopne
jb
xchg
loope
jl
ss
adc
aam
mov
aas
ret
sti
add
and
daa
xlat
in
xchg
mov
clc
incl
sub
ret
or
cmp
test
mov
inc
fsubrl
push
inc
outsb
ret
stos
pop
inc
sarl
push
jmp
add
cld
dec
clc
jmp
fstp
jg
out
cmp
and
inc
loop
pop
hlt
mov
out
jae
inc
inc
ljmp
push
xchg
pop
sbb
cmp
in
dec
gs
lret
testl
and
lret
in
sub
ljmp
xchg
nop
faddl
std
test
jbe
push
jo
cmc
cmpsl
lret
pushl
mov
addr16
ret
or
outsl
xor
inc
test
pop
std
mov
pop
sahf
xchg
fstps
cli
bound
mov
xor
inc
lds
loop
add
popf
push
loopne
inc
int
sbb
gs
mov
hlt
and
sub
or
call
xchg
cli
push
pusha
stos
pusha
incb
jne
or
or
push
xchg
dec
ljmp
push
mov
fcomp
repz
es
or
incl
adc
iret
clc
jg
andb
push
mov
inc
dec
out
nop
movsl
aad
push
call
sub
mov
xor
or
pusha
js
xchg
push
idivb
xor
faddp
ja
push
ja
shrl
sub
in
stos
xchg
js
ds
in
and
lcall
xorb
adc
push
push
mov
and
push
adc
mov
mov
mov
notl
lods
nop
ret
push
hlt
push
jecxz
imul
add
repnz
push
xor
inc
or
push
mov
mov
or
xor
lods
dec
xor
ljmp
sub
jl
cmp
mov
add
cmp
dec
mov
shr
jecxz
or
ja
outsl
jg
or
mov
push
dec
mov
sub
incl
ss
es
pushf
jmp
inc
dec
cld
aas
pop
mov
iret
insb
ret
icebp
mov
adc
dec
mov
jg
pop
test
xor
pusha
cwtl
dec
jno
test
push
sbb
cltd
pusha
mov
fistps
sub
or
jnp
movd
mov
repnz
imul
pop
push
fbstp
cmpb
ret
aam
push
pop
loope
mov
out
mov
das
xchg
ret
push
fisttpl
xchg
sub
and
adc
jmp
fisubs
mov
ljmp
leave
or
xlat
stos
jno
andb
adc
cmp
mov
test
leave
cmp
les
cmc
xchg
xchg
ss
push
sub
push
cmc
stos
or
roll
in
add
sbb
add
dec
fidivs
add
addl
xor
aad
or
and
loop
sbb
adc
andb
push
or
sbb
jo
pusha
daa
outsb
lret
in
cli
mov
xor
jecxz
rolb
xchg
lock
cs
stc
pop
adc
std
or
in
adc
loopne
addr16
decl
popa
mov
arpl
inc
sbb
out
pop
cmp
insb
xchg
sahf
clc
hlt
and
xchg
dec
jg
fdivr
shlb
clc
andl
inc
pop
pop
pop
dec
inc
mov
add
add
shr
xchg
pop
pop
fldl
sbb
fdivl
mov
cli
ja
jbe
cmp
xchg
mov
lds
mov
aas
xlat
test
les
or
jp
push
add
fmull
dec
dec
ss
sub
ljmp
pop
mov
adc
mov
adc
mov
insl
daa
pop
push
mov
shll
leave
mov
outsl
ds
lods
jbe
push
in
dec
dec
sub
mov
fsubrs
loopne
pop
add
sbb
push
mov
inc
xor
sbb
lcall
add
add
xor
lret
lods
ljmp
pop
xchg
push
mov
outsb
flds
popa
fbld
inc
xor
sub
lahf
push
incb
scas
mov
add
push
xchg
xchg
stos
cmp
lock
xor
inc
inc
sub
mov
add
fs
mov
fwait
mov
or
cli
cmpsb
xchg
test
mov
add
mov
jae
inc
push
in
pushf
and
out
filds
add
cmpb
mov
loopne
xchg
dec
cli
xchg
xchg
js
adc
cld
push
pop
push
cltd
xchg
dec
movq
dec
daa
lea
push
mov
adc
sub
mov
sub
jno
and
mov
int3
push
push
insl
cmp
test
shl
aaa
dec
sub
push
jae
imul
mov
jg
push
xchg
in
add
mov
outsl
adc
dec
test
dec
add
cmp
mov
sbb
and
sub
mov
jnp
mov
pop
nop
dec
adc
xchg
push
mov
adcb
sbb
sbb
cltd
cmp
cld
cmp
push
dec
fmulp
add
mov
ss
insl
ret
mov
leave
xlat
inc
fistl
fadds
lods
add
sub
cmp
cmc
and
jecxz
insb
pop
insl
pop
adc
push
gs
call
ret
cmp
jge
cltd
add
shlb
bswap
pop
scas
jo
cld
mov
lret
push
aam
in
pop
stos
nop
jl
jle
dec
and
and
jnp
enter
aas
mov
and
xor
mov
aaa
in
bound
ss
cld
xor
into
icebp
or
mov
cs
mov
rclb
cmc
sbb
add
mov
lcall
xor
or
rcr
pop
inc
les
jmp
or
cld
jne
adc
je
add
cmc
pop
mov
fwait
cli
jbe
sub
sub
dec
pop
mov
orl
hlt
ljmp
leave
cmp
push
fisttps
pop
sbb
insl
add
jmp
jbe
fsubs
scas
xchg
and
lock
cltd
mov
in
icebp
into
mov
jmp
mov
add
pop
and
xchg
lods
pop
dec
call
mov
aam
subb
rclb
push
movsb
jg
xchg
lds
sahf
mov
cmc
cmpsb
das
xor
jl
fsincos
icebp
fisttps
push
iret
mov
js
pop
sub
lods
mov
cmc
cmpsl
push
loopne
jo
cld
decl
movsb
pop
aad
add
adc
sub
dec
mov
pop
jns
scas
jmp
adc
add
jp
std
adc
sbb
loop
loopne
nop
gs
and
adc
inc
mov
scas
pop
cmp
ret
mov
incl
sub
lcall
dec
jg
insl
cmp
ret
pop
inc
mov
int3
cmp
add
outsb
mov
pop
jp
sub
push
test
outsl
jg
inc
xchg
add
lret
add
mov
dec
pop
jge
aam
mov
sbb
cs
jge
addr16
nop
test
jnp
sti
jmp
int
dec
ja
test
add
lods
test
or
lods
mov
test
sti
nop
mov
push
decl
and
or
lods
shl
cmc
cmp
leave
fadds
lcall
rcr
inc
daa
pusha
nop
sub
fbstp
ljmp
adc
add
ficompl
inc
rcll
adc
add
imul
mov
stos
cmp
lock
fcomps
cmc
scas
call
cmpsl
cltd
mov
out
jns
sti
xor
ret
jns
mov
daa
loopne,pn
je
call
insb
adc
xor
dec
mov
andb
pop
icebp
outsl
ds
sbb
sub
add
shll
icebp
arpl
pop
std
or
clc
incl
out
xor
sti
lds
add
std
in
decl
scas
jb
and
aas
add
mov
dec
xchg
add
divl
lret
inc
call
loope
push
sbb
es
xchg
pop
sub
clc
jl
lock
clc
lcall
inc
xor
add
add
fmuls
lods
lret
popa
ljmp
push
mov
add
ret
dec
push
sbb
adc
or
movsb
push
cmpsl
mov
or
jg
repz
push
imul
xchg
add
pop
add
nop
out
push
push
push
jle
ret
sahf
dec
mov
fwait
decl
js
inc
xor
jno
add
fsubr
lcall
clc
insb
mov
int
fcmovbe
fistpl
rolb
jl
in
add
lret
inc
jbe
jg
push
js
movsb
icebp
xchg
xor
mov
les
mov
jns
cmc
cmp
lock
lods
rcrb
dec
sub
clc
js
popf
and
mov
add
xlat
lahf
ljmp
stos
adc
mov
inc
and
xor
mov
dec
sbb
fiadds
sbb
jle
inc
and
add
or
xlat
call
arpl
mov
inc
iret
mov
push
mov
push
shlb
cld
jns
xchg
xlat
jns
lea
sub
inc
mov
js
shlb
mov
mov
and
push
hlt
push
out
ljmp
hlt
and
adc
rorb
jle
add
scas
add
inc
pop
jmp
pop
push
cmc
pop
push
xchg
mov
add
inc
cs
or
xchg
push
ret
cli
xor
sbb
adc
imul
ja
xor
cs
cld
fisubl
enter
inc
jle
mov
mov
dec
psllq
and
cmpb
mov
stc
subb
sbb
stc
push
ja
fucomi
sbb
incl
in
xchg
cmp
push
shl
xorb
add
insl
jmp
cs
out
nop
pop
test
ret
xchg
je
and
int3
push
andb
adc
ss
fwait
xor
add
scas
dec
rorb
push
mov
sbb
andl
fdivr
add
in
xor
push
out
inc
push
add
xor
mov
sbbb
xor
adc
and
sub
push
pop
mov
pop
mov
addr16
aaa
rcll
pop
mov
lea
outsl
std
and
pop
pop
ja
fld
pop
adc
add
and
and
xchg
push
test
lcall
sub
mov
jo
or
dec
sub
xor
pop
mov
pop
fwait
cmp
add
mov
and
mov
icebp
mov
dec
jbe
or
aaa
aaa
sbb
dec
popf
cs
inc
mov
or
add
test
shll
ret
pop
jg
notb
jecxz
inc
inc
jecxz
sub
jnp
call
xlat
cli
inc
fimull
xlat
sbb
or
mov
jecxz
fiaddl
mov
xchg
or
ss
mov
mov
or
inc
adc
sub
adc
mov
popf
shll
cmpb
mov
add
insw
xor
sbb
dec
fdivr
outsl
add
rorb
out
xrelease
sub
add
sarl
popl
pop
jae
jbe
mov
or
adc
pop
push
pop
stc
mov
and
and
test
mulb
push
scas
pop
je
cmpsl
movbe
push
xlat
das
pop
insb
add
or
outsb
push
xchg
fs
lods
fimull
cltd
in
enter
in
xor
sti
adc
push
cmp
xchg
insb
pushf
jo
sub
or
je
mov
negl
push
jns
loopne
jne
scas
test
aam
fcomps
fwait
or
mov
mov
pop
ret
xor
sbb
mov
clc
fistpll
mov
cmp
or
dec
mov
add
les
loop
mov
lret
imul
fwait
clc
xchg
push
loop
cmp
outsl
adcb
mov
push
shlb
aad
inc
xchg
pushf
mov
add
inc
sbb
cmp
idiv
mov
mov
dec
sbb
pop
or
xorb
add
jmp
mov
inc
add
mov
in
cltd
fdiv
pop
cmp
mov
mov
ljmp
cmp
insb
or
enter
adcb
daa
cli
sbb
xor
repnz
jg
sbb
or
add
bound
jl
mov
call
fildll
xor
push
sbb
test
dec
loop
lock
inc
cmp
pop
jle
inc
or
push
aas
in
add
xor
aaa
or
call
adc
add
cli
fsubs
jmp
loopne
js
push
into
or
jge
and
hlt
pop
clc
and
scas
and
popa
add
decl
and
or
and
xor
outsl
inc
pop
dec
inc
insb
push
cltd
xchg
cli
push
pusha
jp
adc
arpl
fistpl
fbstp
stc
mov
sbb
inc
jge
clc
cmp
or
pop
loopne
xchg
rcll
scas
rorl
mov
or
shll
add
jns
sbb
cmp
aas
dec
sub
mov
push
mov
dec
stc
pushf
inc
clc
lahf
in
lret
cmpsb
ret
cltd
mov
and
movsb
repnz
into
outsb
and
mov
or
mov
das
test
xchg
inc
cmp
inc
dec
push
adcb
scas
lock
or
in
pop
ja
incl
inc
xchg
cmp
sbb
or
ret
xor
rorl
js
or
iret
stc
inc
cmp
insb
outsb
in
add
mov
cmp
fs
pop
ret
mov
and
ss
jbe
dec
inc
xor
adc
xchg
sub
or
mov
jbe
loopne
lea
ret
lahf
das
xchg
dec
dec
pushl
insl
enter
sbb
lret
inc
iret
movsb
test
data16
ret
xlat
mov
cmp
dec
je
and
inc
cmpb
xchg
cltd
jp
jg
mov
mov
scas
sbb
inc
inc
jmp
call
aaa
and
out
push
outsl
jge
mov
or
adc
cmp
daa
jl
mov
stos
jne
das
fnsave
ret
push
test
jecxz
cld
pushl
add
test
cmp
adc
mov
adc
jle
repnz
sub
outsl
jo
adc
es
repnz
out
adc
test
xchg
mov
or
lds
cltd
sub
nop
rorb
inc
cld
add
pop
jnp
push
mov
imul
or
popa
push
push
arpl
in
lret
cwtl
scas
push
ret
lret
sbbb
aam
xchg
jecxz
loop
inc
outsl
out
adc
test
dec
fwait
pextrw
xchg
test
push
lods
sub
pushl
cltd
inc
and
dec
pop
nop
inc
xchg
xor
loop
or
jae
inc
xor
cmp
mov
push
subb
xor
mov
inc
imul
pop
pushl
push
jns
cmpb
ror
or
outsb
pop
lcall
sub
pop
cmp
ljmp
mov
and
fs
addr16
cmpsl
inc
aaa
fdivr
mov
mov
out
mov
es
and
daa
rolb
sbb
jp
incl
mov
call
das
cmp
es
test
xchg
xchg
movsl
add
in
mov
pop
xchg
lods
pusha
loope
or
or
add
ffree
or
push
mov
add
pop
inc
js
mov
lcall
dec
je
gs
pop
ljmp
push
xchg
ds
inc
imulb
in
push
mov
jecxz
pop
jmp
sub
out
inc
cmp
jmp
cmp
lcall
dec
or
add
jmp
xchg
mov
cmp
repz
stos
pop
orl
jb
push
scas
popf
clc
movsl
mov
jns
inc
mov
fcmovb
fiaddl
int
jmp
out
inc
jae
lock
pop
mov
mov
loopne
pop
adc
dec
xlat
push
fisubl
pop
aam
call
add
loop
xor
mov
dec
aam
cmp
xor
fbld
lret
cli
decl
mov
cmp
xor
jecxz
dec
sub
clc
push
and
repnz
and
out
addl
cld
fld
shrb
imul
call
jle
test
popa
scas
ret
adc
loop
std
lcall
mov
nop
addr16
mov
dec
sbb
test
mov
mov
or
test
jg
jns
mov
fidivs
mov
addr16
js
fstl
in
cmp
and
xchg
xchg
repz
cmpsl
push
and
pop
sbb
push
mov
xchg
imul
jo
jne,pn
lods
jmp
mov
fstpl
jg
inc
lcall
clc
jg
loopne
clc
inc
mov
repnz
mov
leave
xchg
ret
and
add
ret
adc
movsl
add
lahf
xchg
mov
push
cmp
mov
jae
mov
push
pop
daa
adc
call
pop
cmpsb
xchg
vmread
push
sbb
jl
adc
filds
mov
ret
icebp
and
add
bound
jp
lret
out
xor
decl
xchg
lods
push
inc
adc
cmpsb
jg
sbb
pop
adc
mov
jge
mov
cli
movsl
jbe
pushl
rol
imul
inc
loopne
inc
sub
inc
fisttps
sub
shlb
lcall
adc
scas
push
mov
push
mov
and
push
ljmp
mov
inc
lods
or
inc
mov
dec
pop
ret
cs
movsl
cmp
pop
inc
jg
pop
sub
into
dec
mov
jge
call
pop
dec
andl
xor
pushf
fnstsw
aaa
dec
or
pop
or
mov
sbb
dec
sub
out
sub
sahf
shrb
cmc
inc
xorb
jecxz
jmp
mov
out
xchg
test
movsl
jmp
xor
push
add
dec
adc
xlat
pushf
scas
inc
rcrl
cld
push
dec
adc
andl
mov
jle
orb
sarb
aad
test
inc
pop
pop
je
inc
out
or
lcall
outsl
jg
mul
mov
cli
cmp
lcall
sub
je
sub
out
or
frstor
stc
xchg
inc
ret
dec
fstl
jo
dec
sub
fcmovu
sub
punpcklwd
out
mov
push
pusha
lea
push
int
test
adc
pop
rolb
repz
aam
mov
and
adc
icebp
loopne
pop
jo
dec
add
imul
pop
jmp
jo
ja
sbb
andl
add
mov
pop
mov
incl
and
add
pop
rolb
dec
inc
in
cmp
repnz
stos
rclb
mov
xor
mov
mov
mov
dec
scas
test
stos
dec
in
xor
cmp
xchg
mov
inc
inc
loope
mov
sub
xchg
push
ss
mov
xor
jb
inc
js
testl
les
add
imul
dec
rcr
push
mov
clc
incl
leave
mov
stc
in
xchg
fs
sub
xor
sbb
or
mov
cld
mov
pop
mov
inc
les
inc
lods
xor
pop
sub
pop
sbb
std
fimuls
cmp
ds
and
or
xor
dec
sbb
cmp
clc
jg
jnp
mov
mov
push
sub
and
pop
std
jnp
xor
sbb
push
jne
xor
add
fidivl
adc
jp
loop
push
movsb
sub
in
call
cmp
cmpsl
std
push
fisubrs
push
pop
aas
sbb
ficoml
decb
std
aaa
push
mov
inc
sbb
jo
aas
pop
mov
lods
push
aad
enter
pop
lret
mov
popf
inc
mov
lret
push
dec
lock
cs
mov
int3
or
mov
sti
test
and
xor
jg
pop
dec
gs
call
add
mov
addr16
or
call
mov
inc
adc
mov
and
mov
or
loope
les
lret
in
cmp
mov
scas
out
stos
inc
movsl
dec
filds
sbb
lahf
push
addl
aaa
andb
sbb
pop
inc
lret
jge
cmc
in
xchg
pop
adc
mov
js
sbb
sbb
movsb
cmp
dec
jg
sbb
mov
lcall
es
and
push
ja
stc
out
jp
mov
pop
and
pop
inc
xor
jg
jno
scas
add
or
gs
fs
in
clc
inc
fimuls
sub
jmp
mov
push
mov
or
gs
or
int
pop
sub
mov
vmwrite
imul
insl
lods
lahf
cmc
negl
sub
mov
clc
sub
das
jl
xor
idivl
cli
pop
mov
or
out
mov
call
fdivl
xchg
push
ret
shll
push
roll
or
mov
jg
out
ja
jbe
aam
dec
les
inc
push
adc
ljmp
pop
ret
ret
popl
fs
pop
sbb
mov
mov
mov
cld
aam
sbb
mov
incl
sahf
imul
mov
fidivs
lods
cmp
lcall
popf
sbb
jne
mov
outsl
xorb
xor
or
pop
lcall
dec
aam
decl
mov
shrb
outsl
outsl
dec
sbb
fcmovnb
outsl
stc
or
and
xchg
fcomip
sub
cwtl
pop
insl
cmp
movb
pop
movsl
dec
jno
inc
js
lock
jo
pusha
mov
loop
push
dec
inc
orb
or
and
dec
orl
mov
pop
aam
incl
lret
lcall
pop
pop
push
scas
cltd
sbb
inc
hlt
inc
shlb
jecxz
loopne
test
cmp
notl
bound
test
and
aas
mov
and
pop
ss
dec
pop
inc
in
or
pop
and
movsb
das
or
inc
lds
loop
mov
scas
mov
test
add
pop
daa
sbb
shlb
aam
lds
inc
jg
inc
mov
or
hlt
dec
scas
pusha
ret
cmpsb
or
or
dec
xor
dec
cmpsl
mov
pop
mov
xlat
or
mov
mov
out
sub
insb
mov
and
cs
mov
xor
xchg
clc
jmp
pop
out
sub
xor
inc
adc
push
push
mov
cmpsl
stos
dec
mov
decl
lock
imul
clc
loope
jmp
bound
shrl
add
inc
pop
push
loop
pushl
mov
xchg
push
out
sub
in
mov
dec
lahf
cmp
mov
lods
lcall
ja
cmpsb
add
out
pop
loopne
sbb
or
ret
inc
jle
mov
xor
insb
pushf
mov
push
xor
sbb
test
lock
xchg
or
aaa
jp
mov
mov
int3
jg
test
pop
dec
leave
cmpsl
or
cmp
inc
fmuls
test
or
dec
dec
sbb
jmp
xor
enter
cwtl
mov
add
clc
mov
in
add
or
clc
pop
inc
pop
dec
in
cmp
dec
jp
jge
sahf
roll
rclb
cld
adc
push
add
frstor
mov
lahf
jno
ret
dec
add
cld
pushl
cmpb
dec
sub
mov
cli
mov
pushl
lock
jmp
loopne
mov
std
lock
jno
daa
xor
mov
adc
ss
xlat
sbb
mov
scas
rolb
inc
add
loop
push
dec
pop
cwtl
jb
sub
jl
adc
sbb
aas
and
movsl
and
repnz
pushl
sbb
sti
pop
pop
sub
hlt
mov
pop
je
outsl
xchg
push
mov
pushl
daa
dec
sub
add
stc
test
add
cmp
jg
fcomip
cltd
fwait
movsb
aas
mov
cltd
xor
adc
inc
jnp
ficomps
cmp
jmp
decl
push
cmp
adc
jb
pusha
cwtl
dec
idivl
add
and
xor
pandn
jp
add
mov
fstpl
incl
in
xchg
mov
shr
jo
test
jg
out
jo
loope
mov
mov
negb
cmp
out
enter
sub
inc
xchg
out
mov
or
push
outsl
mov
mov
adc
or
loope
add
mov
adc
pop
loop
add
loope
cmpsl
and
sarl
jl
bound
std
divl
cmp
nop
xor
inc
push
add
stos
rcrb
ret
repnz
push
inc
add
mov
fimull
or
sti
mov
sbb
std
push
jo
nop
xorb
inc
sahf
push
inc
add
push
push
xchg
nop
cltd
cltd
ljmp
icebp
pop
imul
sbb
pop
cld
sub
adc
jge
cmp
je
cmp
jg
xchg
cmc
push
dec
pop
or
push
repnz
pop
fwait
out
add
or
cmp
mov
ret
mov
mov
jecxz
pusha
fldt
divb
std
call
xor
mov
js
sti
mov
les
xor
cmp
jbe
out
repnz
hlt
jmp
dec
inc
lds
and
scas
dec
pop
inc
add
add
mov
sbb
mov
int
jg
push
inc
push
mov
roll
pop
add
fcoml
or
cmp
mov
js
mov
dec
dec
xchg
fucomip
sbb
sbb
enter
cmp
js
je
fs
add
cmp
fwait
out
add
xor
dec
mov
and
mov
fs
dec
stc
sbb
in
mov
sub
scas
add
cld
fistpll
add
leave
or
add
xchg
nop
addb
pop
rcll
cmp
sbb
sarb
decl
push
sbb
xchg
subb
mov
clc
ljmp
loope
and
fcoms
ss
popa
cs
fstps
add
adc
cs
push
sti
mov
cld
cmp
pop
mov
mov
mov
das
imul
and
in
cmp
fnsave
pop
sahf
or
lcall
or
cli
bound
rorb
imul
add
jg
or
cmpb
sub
cmp
adc
mov
cmc
sub
inc
loopne
mov
inc
hlt
stos
jle
imul
and
data16
push
imul
stos
clc
ljmp
sahf
es
iret
add
sub
out
push
ss
lods
iret
and
pop
pop
push
mov
aam
hlt
pushf
xchg
pop
int3
ret
sub
pushl
push
test
js
inc
addl
jle
push
or
sbbl
lods
movsl
js
outsl
ja
fs
and
lods
or
xlat
xchg
out
lock
test
push
scas
lcall
test
pop
shrl
addr16
mov
sbb
into
ljmp
mov
xchg
jmp
sbbb
mov
dec
shll
daa
inc
movsb
xor
push
mov
in
sbb
ret
divl
sarl
in
sub
shrb
call
cmc
and
mov
pushf
jg
std
push
divb
int3
xchg
loopne
gs
les
mov
clc
xor
iret
xchg
xchg
jmp
ret
push
pop
loopne
pop
popa
mov
push
cmpsb
hlt
scas
pushl
clc
xlat
je
cs
dec
inc
add
and
ljmp
add
sti
add
lock
ja
xor
xchg
mov
inc
mov
ficoml
add
shlb
in
ljmp
adc
incl
rolb
xor
jg
pop
ja
dec
add
dec
jae
fiadds
push
mov
add
jne
out
insb
out
cmp
cld
pushl
cld
loopne
adc
push
sbb
pop
repz
jg
mov
dec
les
loop
shl
mov
sbb
movsb
xchg
sub
push
mov
mov
sub
mov
cli
dec
adc
mov
test
or
loope
test
in
mov
std
mov
rclb
in
add
jg
addr16
sbb
hlt
cwtl
lea
js
jge
and
dec
lods
aas
cmp
stc
push
adc
add
nop
test
ret
mov
orb
dec
sbb
out
sbb
in
jmp
pop
inc
fstpl
loope
cs
mov
cmp
jmp
jbe
and
dec
mov
mov
dec
lret
jle
push
or
push
in
clc
mov
sahf
adcl
xlat
mov
pavgw
jl
outsb
jnp
xor
enter
cli
pop
insl
cmpsl
lahf
dec
add
xchg
mov
xorb
mov
inc
lock
nop
xchg
out
ljmp
xor
ja
test
test
xlat
fldenv
jb
inc
sbb
dec
jmp
in
xchg
in
ret
lods
or
ds
fwait
clc
in
dec
clc
addr16
arpl
mov
in
cmpsl
in
out
lock
cli
sub
lock
mov
or
aad
adc
rolb
sarw
outsl
inc
jns
into
add
aam
dec
cwtl
cmp
mov
xor
popa
int3
or
jbe
into
out
push
push
sar
jg
test
push
pop
inc
dec
add
jo
pop
cmpl
xchg
inc
leave
shl
sbb
out
xorb
jo
push
mov
mov
ljmp
cmp
sbb
cmpsl
dec
idiv
and
jne
pop
mov
les
dec
rclb
or
arpl
sahf
sub
jmp
jge
cmp
imul
jbe
adc
push
fimuls
mov
stos
aas
sbb
or
shll
pop
add
dec
push
cltd
sbb
or
inc
mov
popf
and
add
jo
daa
negb
or
movsl
mov
repz
cltd
loop
in
adc
js
fsubl
icebp
xchg
push
das
or
pop
jle
dec
inc
inc
mov
add
std
dec
hlt
es
aas
stos
mov
aaa
sub
insb
hlt
ljmp
add
clc
add
out
std
jg
pop
ret
mov
xor
ljmp
cld
in
mov
jbe
fdivr
lcall
sub
xlat
cld
sbb
xchg
push
aam
outsb
out
cmp
aas
cmp
sbb
arpl
jp
xor
decl
push
cld
test
std
and
inc
or
cmpsb
cmp
fnstenv
ret
js
mov
add
mov
hlt
and
scas
add
pop
xor
mov
push
mov
std
std
xchg
cwtl
inc
hlt
xacquire
fwait
js
js
aas
jp
sbb
pop
cs
movsb
popa
jb
inc
mov
mov
xlat
cmpl
out
lcall
ret
shll
mov
test
loope
stc
ds
pop
and
shlb
mov
pop
sub
and
sahf
push
xchg
and
cmpsb
hlt
adc
addr16
outsl
sub
mov
aam
sarb
and
inc
subb
je
adc
push
pop
lock
jmp
adc
xor
clc
mov
sub
add
push
sbb
sbb
cld
lret
fimuls
adc
cmp
ficoml
push
sub
xor
cmp
sub
cmp
test
add
mov
fbstp
push
sub
or
ret
mov
sbb
inc
sbb
out
cmp
mov
mov
jg
sbb
ret
ret
or
loopne
out
fmul
xchg
call
add
shl
and
test
movlps
inc
xchg
cmp
stos
and
push
push
dec
push
rorl
mov
decl
pushf
cs
adc
inc
pop
inc
xor
mov
sbb
adcl
adc
rorb
or
fdivl
mov
fldcw
inc
bound
pop
nop
pop
aam
lods
jp
stos
and
inc
add
add
daa
stos
inc
mov
add
pop
scas
js
adc
push
sbb
or
inc
les
mov
scas
pop
add
mov
cmpsb
mov
xor
das
dec
inc
sub
mov
jno
jp
ficoms
adc
popl
test
inc
cmp
aam
push
mov
ret
out
lock
inc
pop
insl
and
inc
and
xor
mov
addl
nop
adc
push
pop
pop
push
xor
jg
aaa
dec
adc
cmp
mov
pop
add
cltd
dec
test
stos
pop
push
or
pop
jne
mov
jo
frstor
int3
and
loopne
movsb
pop
movsl
push
pushf
push
and
test
mov
out
mov
and
pop
jge
xor
insb
aaa
sahf
sub
mov
das
cmc
push
aas
scas
fildl
inc
out
fs
pop
add
and
pop
add
das
add
mov
sbb
test
scas
sub
roll
adc
loop
cmp
jle
popa
or
inc
xchg
push
mov
fsubs
call
push
add
or
mov
clc
pushf
mov
jl
pop
inc
aad
and
jmp
push
adc
jmp
lods
or
bound
inc
pop
ss
pop
and
ds
fs
pop
jl
cmp
ss
pop
sub
or
jae
push
clc
fstpl
insb
nop
mov
loop
decl
push
mov
pop
push
rcrb
pusha
sarl
imul
int
fbld
cmc
andb
sbb
cwtl
xor
scas
loop
xchg
mov
xchg
pop
mov
jmp
mov
cmp
jo
fmull
enter
lds
push
xor
cmp
xor
xchg
inc
jo
jae
add
inc
xchg
mov
cmp
stos
stc
cmpl
cld
add
mov
inc
add
mov
lcall
sbb
adc
fcoms
xchg
mov
aam
das
and
mov
nop
notb
inc
add
mov
mov
adc
jp
mov
rorb
pop
in
mov
sub
icebp
call
add
push
and
jne
mov
cmp
lds
add
dec
push
inc
in
wrmsr
enter
lcall
rorb
aam
aas
adc
mov
pushl
insb
outsl
pusha
sbb
out
cli
add
push
add
jno
test
mov
cmp
cmpsl
cwtl
xchg
push
and
xchg
loop
jp
and
dec
mov
lret
filds
push
out
int3
adc
xor
insl
rcll
cmp
dec
or
pop
xchg
jo
cmpsb
inc
adc
jp
pushl
adc
call
subl
sti
push
xor
fisttpll
sbb
js
mov
or
fst
rcl
push
jno
aaa
pop
int3
insb
pop
test
out
fs
scas
sub
test
or
movsl
lock
mov
lods
test
xchg
fdivp
dec
or
sbb
mov
mov
pushf
add
add
test
daa
xor
out
ja
orl
pop
loopne
push
icebp
pop
out
xchg
mov
mov
push
add
enter
inc
fcoms
cmp
or
and
andb
xchg
cmpb
inc
pop
arpl
repz
inc
or
push
mov
push
xchg
mov
pop
sar
adc
aas
add
rcll
lock
popa
push
test
inc
add
pusha
push
nop
xchg
xor
cli
adc
clc
jae
int3
stos
dec
inc
add
push
or
call
and
push
mov
sarl
leave
add
insb
rorb
pop
ret
repz
in
fmull
fdivl
clc
les
test
filds
mov
push
or
out
add
jl
mov
dec
cmp
lods
mov
fisttps
xor
ret
lahf
fndisi(8087
xchg
push
mov
ljmp
dec
jae
and
add
mov
addr16
arpl
mov
into
mov
xchg
call
mov
push
cltd
and
add
or
decl
cli
pushl
stc
inc
imull
ror
pop
daa
push
mov
mov
xchg
mov
mov
adc
clc
jmp
outsl
sbb
jmp
mov
ds
and
xor
iret
push
fcoms
inc
xchg
push
cmpsb
cmp
lods
fs
push
cli
add
inc
daa
dec
inc
not
push
sbb
cmp
xor
loope
inc
jns
pop
adc
ret
fwait
mov
ljmp
xor
mov
aas
stos
and
mov
xchg
adc
and
xor
sbb
iret
mov
test
sbb
jle
ljmp
sbb
inc
rclb
jno
imulb
push
adc
aas
sar
mov
pusha
mov
cld
add
jg
push
push
pop
neg
mov
in
fadds
loopne
gs
daa
rorb
sbb
inc
sar
mov
xor
xchg
inc
push
dec
sti
mov
cmp
decl
xor
mov
xorl
decl
in
pop
or
dec
cli
mov
push
mov
lret
dec
mov
arpl
cmp
insb
or
push
cld
lcall
fidivrs
push
mov
sbb
xchg
jmp
cli
mov
icebp
stc
lods
adc
in
sub
inc
mov
jbe
out
push
addb
dec
mov
jnp
and
add
rol
psrlq
inc
xchg
pop
dec
inc
nop
push
and
push
adc
subb
fsubs
fwait
bound
jae
mov
sbb
xor
aas
sbb
xchg
iret
push
inc
jbe
pop
dec
sti
inc
cwtl
jg
mov
add
xchg
mov
sub
dec
push
call
faddl
add
xchg
jecxz
subl
mov
jmp
dec
insb
cmpl
jge
push
or
inc
movsb
fcmovbe
js
mov
inc
cmp
or
xchg
clc
mov
bound
adc
sahf
pop
push
enter
and
stos
mov
adc
mov
stos
pop
popa
int
jl
add
adc
lods
inc
pop
call
jg
lea
cmpsb
xchg
inc
stos
xchg
call
lock
and
jl
lds
iret
mov
out
or
lret
pushf
js
pop
push
jae
jnp
cli
shlb
stos
int3
mov
aad
push
repz
pop
jo
clc
movsl
lea
jmp
and
aaa
mov
jb
and
jle
aas
loopne
mov
repnz
or
adc
lds
mov
ljmp
sbb
push
orb
es
mov
xlat
or
inc
nop
mov
divb
out
aaa
mov
mov
out
dec
arpl
pop
dec
lret
pop
ds
and
movsl
fdivs
mov
scas
pop
add
inc
aas
fs
andb
loop
mov
cmp
int3
sbb
pop
xchg
and
push
xor
lcall
bound
cltd
inc
lret
dec
jnp
sbb
dec
sar
jecxz
xor
sbbl
or
inc
sbb
icebp
aam
adc
xchg
hlt
add
xchg
mov
loopne
fwait
add
clc
push
push
scas
stos
dec
repnz
or
pusha
and
roll
pusha
mov
test
incl
fdivr
pop
inc
fdivp
adc
sub
xchg
add
cmp
and
mov
bound
xchg
adc
std
push
push
in
add
mov
jle
push
or
mov
insl
daa
and
mov
pushl
pop
mov
jbe
and
cmp
jmp
gs
or
and
in
mov
test
lcall
sbb
shl
mov
pop
pop
cwtl
aas
pop
dec
dec
push
mov
mov
and
into
sbbl
movsb
lcall
fs
adc
dec
dec
loope
inc
xor
mov
mov
div
or
xor
pop
shlb
call
mov
inc
or
jmp
ds
hlt
xor
sbb
out
cli
and
push
jle
push
xor
mov
test
and
imul
jne
call
lret
push
dec
or
js
ljmp
or
push
adc
adc
jle
push
int
xchg
sbb
and
roll
and
aas
shl
cs
int
add
aas
stc
push
add
lods
jg
lahf
out
mov
aas
divb
xor
sbb
imulb
inc
push
ljmp
stos
xor
filds
inc
cmp
inc
aas
lock
scas
aas
lea
xchg
xor
cltd
adc
es
push
jle
xchg
xchg
test
dec
push
enter
fildll
scas
add
dec
out
pop
pmuludq
testb
and
mov
fcmovne
xchg
xchg
cs
sub
inc
pop
loopne
add
xor
mov
dec
mov
pop
fnstcw
xchg
or
jecxz
lock
mov
test
xchg
aas
push
cwtl
and
push
push
ret
ffreep
psubusb
cmp
rolb
aad
rcrb
xchg
dec
add
push
adc
shll
aad
out
cltd
mov
add
arpl
xlat
and
inc
ficompl
out
mov
xor
add
push
cwtl
pop
nop
push
push
lock
and
mov
push
and
mov
cld
das
push
jecxz
mov
and
pop
fs
or
xor
ficompl
mov
push
mov
enter
mov
pushf
and
imul
pop
push
cld
add
cmp
sub
sbb
in
xor
movl
add
jl
jge
adc
pop
call
femms
ja
sarl
mov
mov
jno
verw
insb
jne
std
rolb
sahf
mov
mov
sahf
loop
pop
in
xor
adc
aaa
lahf
or
or
xor
int3
sbb
inc
sbb
pop
pop
xor
ret
add
cmp
push
sbb
stc
testb
out
ror
sarl
loopne
popa
push
gs
rorb
movsb
addr16
inc
sub
mov
adc
inc
jp
mov
and
or
adc
lock
add
leave
xchg
das
rep
or
adcb
jnp
adc
aas
inc
mov
jp
fcomip
sbb
pshufw
jge
stos
mov
inc
jmp
pop
cmpsb
out
push
popa
and
or
jg
jb
outsb
add
clc
jns
mov
les
sbb
jg
fbld
cmp
add
stc
adc
shlb
aad
popl
pop
jg
pop
pop
jge
cli
adc
data16
filds
das
les
mov
out
in
sub
pushf
mov
sbb
outsb
inc
pop
inc
jnp
inc
sbb
shrb
mov
repz
push
mov
pusha
push
ret
nop
pop
inc
xchg
cld
ja
sarl
fsub
dec
cmp
xor
push
push
pop
mov
es
iret
mov
mov
repnz
and
mov
push
stos
fiadds
fcmovbe
sub
inc
or
pusha
jg
decl
pop
mov
mov
int3
shr
or
add
inc
hlt
shr
scas
or
ret
inc
cs
push
insb
jle
mov
mov
xor
dec
clc
shlb
push
and
push
mov
lahf
in
loope
aaa
imul
mov
mov
pop
xchg
mov
or
cli
daa
ljmp
mov
adc
ds
cmp
fs
dec
sbb
adc
aad
ss
xchg
and
inc
std
stc
add
daa
mov
add
jg
xchg
add
adc
mov
inc
loopne
loopne
or
ja
in
aad
rcrb
inc
popa
cmp
data16
mov
decb
adc
jp
lahf
inc
pop
dec
bound
sbb
push
jbe
jle
insb
pop
push
bound
outsb
adc
inc
mov
add
jl
fisttpll
out
push
push
mov
dec
scas
popa
xor
inc
adc
in
repnz
add
test
ja
aas
push
or
test
jecxz
xchg
or
xor
xor
inc
scas
ror
add
xor
push
mov
ret
pusha
fwait
sbb
pop
and
mov
jmp
pop
test
push
incb
add
add
or
cmp
adc
ret
ds
aad
xchg
ds
mov
or
test
xchg
xchg
mov
sub
aas
push
std
jae
add
movsb
add
andl
scas
js
inc
sarb
xchg
femms
dec
out
dec
or
fstps
pop
jmp
pop
inc
mov
out
push
and
or
xor
mov
adc
je
xorb
xor
iret
inc
popf
inc
je
shll
enter
sarl
fwait
push
cmp
out
dec
jmp
push
sbb
sbb
dec
sub
push
or
adc
insl
push
stos
mov
icebp
pop
inc
inc
push
push
popa
aaa
test
adc
and
or
in
xchg
push
loopne
out
lods
xchg
inc
mov
cmpsl
ss
notb
int
shlb
dec
cmp
mov
iret
out
mov
aam
cld
roll
xor
cld
cmp
lock
mov
je
and
xor
inc
call
iret
ss
jl
adc
mov
sbb
test
xor
ret
out
mov
adc
int
dec
ljmp
ret
mov
sub
hlt
int
dec
push
jmp
jae
sbb
add
in
xor
sbb
add
jbe
inc
and
pushl
daa
xor
dec
jmp
jmp
cmpsb
mov
sbbl
sub
inc
hlt
das
push
jns
xor
loopne
push
xor
sbb
hlt
adc
popf
pop
inc
cmp
outsb
mov
cmc
in
cmc
nop
in
add
mov
mov
push
pop
arpl
cmpsl
or
and
js
lcall
fwait
or
mov
inc
dec
fdivrp
aaa
cmc
mov
shlb
ret
cmp
inc
push
pop
mov
mov
data16
pop
xor
inc
xor
mov
in
test
xchg
add
sarb
ss
mov
jb
movsb
mov
jne
pop
insl
push
sub
ljmp
sti
or
fisttpll
mov
sub
ja
mov
sbb
sarb
add
sbb
stos
into
mov
xchg
sbb
mov
inc
inc
lret
lds
cwtl
ret
fs
sbb
mov
pusha
inc
gs
xchg
jp
cmp
test
cmc
push
mov
sbb
adc
in
xchg
stos
in
popl
or
aam
inc
addr16
jb
test
add
mov
cltd
adc
js
punpckldq
cld
mov
rcr
int3
subb
aad
arpl
or
dec
mov
stos
and
stos
rolb
sbb
incb
pop
dec
jbe
jecxz
add
pop
bound
popf
lea
test
dec
pop
mov
push
inc
out
dec
ret
mov
xchg
outsl
ds
mov
out
add
dec
jmp
stc
lea
xchg
pop
sub
ds
movsl
mov
out
jge
cld
incl
subl
in
xor
popa
cltd
xor
lock
xor
add
jp
dec
sbb
mov
pop
pusha
add
dec
jmp
lock
add
dec
mov
jae
mov
hlt
mov
and
bound
test
push
jl
dec
pop
cwtl
jge
decl
out
hlt
sbb
hlt
hlt
jp
das
rcl
lahf
aas
jp
lock
dec
outsl
and
fbld
pop
mov
aas
or
lds
add
sahf
popa
fdivrl
mov
popf
jns
adc
push
movsl
mov
sbb
adc
xchg
aam
lret
out
mov
xor
aad
loope
or
add
cmp
sub
mov
mov
ret
fnstsw
pushf
mov
dec
or
rcrl
jae
mov
scas
mov
push
into
and
or
cmp
es
loopne
inc
inc
xchg
scas
pop
ss
ja
push
cmp
lock
andb
inc
sub
jbe
adc
mov
dec
incb
xor
sbb
cmp
getsec
jl
pop
cmp
push
mov
hlt
lret
jo
pusha
xor
cmc
adc
jmp
jbe
xchg
in
sub
add
ljmp
mov
add
sarb
std
fisubrl
or
out
mov
or
inc
popa
fisubs
lcall
imul
aaa
xor
mov
inc
nop
ret
push
orl
out
out
movq
adc
mov
push
ficoml
pop
lods
sub
or
dec
adcl
in
xchg
push
out
lret
dec
clc
not
loopne
mov
dec
xor
test
jo
mov
dec
lds
nop
pop
int3
pop
sti
inc
cmpsb
in
cltd
mov
mov
push
and
test
addr16
pop
sarl
mov
mov
xchg
cld
lret
push
fldl
adc
inc
add
push
sbb
bound
dec
pop
pop
jno
ljmp
fwait
pop
fdivr
popl
add
rcll
cli
dec
inc
jg
sub
inc
jge
shrb
cmpb
add
add
clc
bound
mov
push
mov
iret
cmp
jg
jo
scas
dec
test
jb
mov
popf
jne
adc
pop
aaa
mov
push
lock
cmp
hlt
addb
mov
ret
jle
jle
adc
xchg
shl
adc
add
mov
add
cmp
push
sbb
pushf
mov
xor
add
mov
sahf
pushf
movsb
pop
out
aaa
xchg
repnz
add
sub
subb
movsb
mov
nop
inc
aas
je
jo
push
std
loope
out
add
or
dec
decl
repz
cmp
add
arpl
xchg
jns
cmc
rcrl
push
ret
dec
and
ja
mov
cmp
adc
or
mov
xor
aas
ljmp
loopne
add
je
add
popf
inc
push
lahf
cmp
ror
shl
leave
int
jg
je
pop
mov
add
inc
jle
je
arpl
xchg
mov
cmp
ljmp
mov
out
out
insl
cli
aam
bound
mov
pop
fsub
mov
pusha
add
sbb
fldcw
ret
or
fwait
pop
and
pop
loopne
repz
or
repz
mov
or
adc
addb
mov
fmuls
shlb
ljmp
or
cwtl
pop
xchg
rclb
gs
loope
popl
test
mov
cltd
js
lods
int3
inc
xorl
adc
mov
jo
sbb
inc
dec
dec
andb
dec
dec
mov
xor
jno
and
xor
add
leave
sub
add
pusha
mov
inc
rorl
lock
dec
pop
lcall
sbb
lods
xor
fwait
lret
aad
and
xchg
punpcklbw
jg
jecxz
aaa
cwtl
lcall
sub
daa
jle
mov
jmp
inc
int3
ret
sbb
rol
push
mov
add
push
aas
lahf
or
cmpsl
mov
xlat
insb
dec
stos
xor
dec
sbb
pop
fistpll
pop
ljmp
or
inc
xchg
pusha
sub
movsl
fmuls
sbb
pop
mov
std
mov
mov
inc
repz
lcall
lods
outsl
cmp
or
daa
inc
cmp
cmp
jl
adc
ret
push
add
in
push
incl
jl
add
or
mov
ds
shl
loop
fdivs
adc
lahf
xor
push
daa
add
pop
popf
inc
shll
adc
xchg
loop
mov
inc
lahf
inc
mov
and
repz
pop
or
rolb
add
js
pusha
jb
inc
mov
out
inc
aam
aad
jle
cmc
test
movb
mov
mov
sbb
mov
inc
adc
out
push
inc
cmp
sbb
mov
xor
or
lret
push
mov
movsl
cmc
inc
das
push
ret
ret
fcomps
data16
push
pop
ss
int
jne
clc
aam
xor
aaa
sub
inc
cmp
popf
loope
push
mov
rolb
sbb
push
pusha
mov
dec
add
sahf
sub
int
mov
inc
xchg
xor
mov
jle
lea
arpl
add
shlb
push
movsl
xorl
in
dec
cmp
scas
out
cld
sbb
xchg
jnp
mov
lret
out
inc
stos
pop
mov
xchg
dec
dec
dec
negb
sub
add
test
mov
add
mov
mov
cmp
mov
mov
pextrw
and
rclb
mov
xor
aaa
aas
and
addl
inc
dec
dec
rorb
insb
xchg
int3
lahf
mov
or
jle
pushf
cmp
scas
jb
pop
push
inc
loopne
sbb
jnp
add
adc
adc
jae
jp
jecxz
push
ret
mov
sbb
push
lds
stc
out
fs
pop
mov
sub
xchg
or
pop
aad
cmp
xor
das
shrl
imulb
leave
xchg
inc
cmp
and
jno
cmpsl
xlat
loopne
cmpsl
mov
or
mov
pusha
mov
scas
and
cmp
test
test
lds
add
outsb
sbb
mov
pop
cmpsb
les
addb
fcmove
xorl
pop
enter
cld
pop
stos
outsb
stos
push
dec
nop
add
adc
xchg
hlt
pusha
mov
lock
xorl
add
pusha
jg
xchg
leave
test
scas
dec
jge
jl
add
dec
into
push
dec
fcompl
fbstp
inc
mov
lret
and
mov
jne
repz
inc
mov
xchg
jl
jae
loope
mov
push
push
sub
adc
imul
push
adc
mov
cmp
repnz
sub
mov
and
adc
xchg
mov
xchg
shl
pop
rcll
rcrb
ret
dec
cld
inc
mov
ror
lock
xor
adc
mov
fisttpl
jb
xchg
loop
inc
mov
sbb
movsl
adc
add
pop
lods
int3
mov
rcll
dec
push
cld
add
jmp
subl
or
push
inc
dec
scas
stos
rolb
push
cmpb
xorb
js
push
and
ret
inc
popf
sbb
rcll
test
dec
push
push
sub
insb
lea
cmp
popf
mov
test
int
xor
mov
stos
gs
push
pop
jnp
arpl
iret
xchg
jl
cli
mov
ljmp
idivl
sbb
lods
fs
jnp
push
xchg
and
mov
push
cltd
ja
dec
mov
lods
outsl
jecxz
jg
mov
cmp
push
popa
add
xor
ljmp
inc
add
inc
daa
testb
pavgb
pop
mov
sub
inc
lahf
pop
ret
push
push
jle
mov
or
push
aam
cli
fiadds
scas
push
or
adc
dec
push
outsb
call
dec
jecxz
xchg
popf
nop
mov
jno
je
lds
or
lahf
js
in
in
popl
or
into
cmova
decl
ret
sti
imul
and
mov
int
mov
fwait
insb
jbe
icebp
or
cmp
xor
cmp
pop
jmp
cmc
dec
fcmovbe
daa
push
cltd
leave
add
int
out
inc
add
sbb
aam
mov
cs
add
popf
inc
int
ds
mov
dec
inc
imul
inc
shrl
jo
in
xchg
popa
addr16
cmp
pminub
add
inc
cs
pcmpgtd
lods
add
mov
cmp
or
loope
fwait
pop
icebp
iret
jl
shll
inc
pop
loop
sbb
push
cmpsl
je
into
sbb
mov
pop
into
or
push
insb
fsubrp
in
push
aas
scas
movsb
add
ja
mov
and
std
adc
xor
add
sbb
and
sets
xchg
pusha
aas
sbbb
mov
rcr
dec
pop
adc
aas
frstor
outsb
sarb
rcrl
jno
add
mov
dec
mov
lret
mov
cmpsb
gs
je
mov
ret
mov
es
outsb
jp
dec
faddl
add
iret
mov
aas
inc
mov
pop
pop
mov
add
cmpl
add
sbb
jne
rolb
mov
nop
or
clc
xlat
jg
mov
xchg
jge
ficoms
fcomps
or
jecxz
mov
scas
and
aas
xchg
test
and
mov
rolb
push
das
test
mov
push
add
js
mov
sub
sub
add
testb
sbb
in
incl
std
push
pop
add
xchg
add
addr16
shrb
xor
fs
orb
pushf
dec
xchg
sbb
inc
shrb
lock
data16
dec
addb
inc
sahf
mov
and
adc
out
xchg
mov
lds
mov
pop
jle
pop
ljmp
pop
mov
and
pop
sub
push
fs
add
sbb
or
add
test
pop
cld
flds
cmp
adc
inc
mov
sbb
xchg
cmp
fwait
sub
ret
pop
mov
inc
leave
dec
jle
sub
jbe
cmp
and
mov
and
shlb
test
cmp
dec
js
or
mov
icebp
cmp
loop
mov
push
aad
jbe
mov
in
fwait
call
jo,pn
sub
xor
jbe
imul
fidivl
aad
cli
dec
notl
loope
inc
push
xchg
pop
ljmp
bound
push
outsb
fcmovne
je
daa
xchg
lea
jp
in
in
adc
fcmovu
cli
aas
loopne
xchg
repnz
add
xor
sub
fidivrs
adc
icebp
push
dec
fiaddl
ret
movsb
fistps
fcom
ljmp
jle
mov
lret
out
mov
and
add
scas
dec
push
add
adc
ret
or
xor
fisubl
sbb
leave
xor
into
pop
rorb
mov
and
in
jnp
push
xor
cli
cli
leave
pop
fadd
lock
sub
cmpsb
xchg
dec
cmc
test
insl
push
sub
or
lock
int
loopne
cmp
or
sub
lahf
inc
push
rcrl
popf
mov
js
sbb
das
outsb
idivb
cwtl
incb
add
lret
push
lods
inc
sub
fsubl
aas
sub
jb
xor
push
scas
icebp
loope
push
cmp
dec
mov
mov
jae
daa
loopne
inc
addr16
xchg
fwait
inc
mov
ficoms
add
inc
pop
lock
push
push
aad
add
lcall
xor
out
mov
push
adc
adcl
jo
fs
incl
aam
ss
sti
pusha
jnp
es
pusha
lock
cmpl
nop
lret
pusha
mov
je
pop
std
dec
or
outsl
pusha
xchg
pop
shr
dec
cmc
jmp
stc
sti
or
les
pop
and
add
push
dec
pop
add
cmp
shlb
test
mov
xor
jbe
jg
in
mov
enter
xor
rolb
scas
pop
jl
dec
mov
rorb
shrl
mov
adc
int
ret
cmpb
es
pop
pop
test
jo
ret
mov
cli
add
xor
jecxz
mov
inc
cmp
notl
jmp
inc
inc
mov
or
dec
adc
enter
fadd
push
jg
loopne
and
or
push
push
pop
mov
add
aas
or
dec
jl
cmp
inc
imul
inc
bound
shl
int3
adc
popa
add
movhps
dec
imul
jl
jg
push
add
adc
icebp
addl
in
dec
loopne
dec
jae
dec
pop
add
push
cld
jo
pop
mov
out
mov
sbb
mov
and
sub
js
cld
loop
pop
test
push
iret
nop
add
shlb
push
test
inc
or
xchg
jns
and
mul
dec
inc
adc
das
mov
adc
outsl
push
addb
aam
xchg
hlt
add
jmp
dec
das
call
jge
inc
xor
mov
push
push
enter
mov
pop
mov
and
pop
jns
clc
stc
xchg
rclb
inc
scas
ljmp
cwtl
fstpt
shll
ja
fildl
cli
filds
adc
lock
mov
add
adc
mov
mov
sub
imul
and
cmpb
sbb
sub
adc
sub
cli
or
mov
jle
mov
sub
fiadds
cwtl
sbb
xchg
cld
jmp
add
mov
and
push
push
mov
lods
and
cmp
and
push
mov
dec
sbb
mov
or
loop
mov
test
jecxz
inc
insl
fcomip
pop
jge
cmpsb
sub
stc
cmpsl
rcr
xchg
cs
mov
pop
movb
addb
and
sub
xchg
loop
add
arpl
cmpb
aas
shll
cmp
scas
pop
mov
push
movsl
loop
test
out
push
dec
int
xchg
mov
mov
int
out
and
jne
cld
repnz
sub
shld
jb
rol
mov
mov
push
loopne
lea
daa
mov
xlat
nop
lock
dec
out
jg
add
out
cwtl
cmp
popa
xor
popa
xchg
bnd
popa
subl
cmp
enter
mov
or
orl
outsb
fcomps
mov
mov
cld
push
jg
lds
scas
cli
xor
shr
adcb
jo
xchg
pop
cmp
stc
mov
and
imul
orl
jp
jmp
or
push
nop
test
cmp
pop
add
mov
mov
cld
xchg
dec
scas
pop
imul
add
stos
ret
jle
add
inc
xchg
lds
aad
and
push
cwtl
push
in
ja
and
dec
pop
loope
inc
sub
lods
fiadds
ds
inc
mov
inc
fwait
sub
ret
loop
lods
sub
stos
push
jle
fnstsw
push
add
xor
lods
xor
out
loopne
adc
shl
mov
movsl
aas
and
leave
and
or
xchg
cmp
jb
js
add
sub
sub
fnsave
xchg
jb
lcall
push
lcall
mov
fldt
push
dec
or
fdiv
inc
mov
xchg
mov
loopne
sahf
inc
mov
cmp
or
mov
jno
pop
push
shll
sar
lods
inc
jp
cmc
mov
xchg
decb
jle
daa
and
mov
movswl
mov
lock
mov
mov
add
push
sub
push
adc
push
fsub
mov
test
fimull
sahf
pushf
inc
test
push
ds
lods
or
les
mov
push
add
adc
xlat
pop
fwait
sbb
flds
mov
fmuls
inc
mov
sahf
cmpsl
or
cmc
and
dec
sub
scas
sub
rcrl
aas
push
rcr
or
pop
pop
inc
push
test
cs
dec
jno
rcrb
in
mov
jne
jbe
test
mov
lods
add
mov
mov
int
jne
jecxz
aad
xchg
inc
pop
pop
add
inc
push
jb
jecxz
rorb
mov
decl
arpl
add
mov
andl
ds
cmp
aas
jno
and
push
and
inc
add
sbb
cmp
pushf
lahf
fistps
je
cmp
mov
push
je
push
mov
mov
scas
jae
fnstsw
test
in
out
ja
mov
incl
add
clc
cmpl
jge
out
movsb
pop
sarb
es
xor
xchg
dec
jmp
clc
inc
sub
jl
and
into
push
cmp
pop
fdiv
fbld
test
inc
nop
cs
xor
jbe
mov
jne
aas
ja
or
into
sub
hlt
inc
orb
xchg
push
sbb
mov
jns
ss
mov
rcrl
out
cli
ljmp
dec
lret
jl
leave
lea
nop
test
std
jl
lock
pop
jo
add
and
adc
test
sub
jne
arpl
sbb
xor
cmp
pop
push
aas
adc
xchg
icebp
ret
lcall
popa
ljmp
dec
lock
xchg
popf
mov
push
xlat
xor
std
test
jnp
out
lock
or
dec
jge
out
clc
out
roll
inc
dec
mov
imul
jle
inc
sbb
imul
je
cs
lahf
xchg
out
sub
push
inc
cli
inc
dec
ret
shl
mov
movsl
inc
xor
pop
sbb
xchg
leave
inc
add
pop
in
sbb
orb
and
mov
dec
cmp
imul
mov
mov
loopne
lcall
shr
push
cmp
mov
icebp
ret
push
sbb
mov
mov
and
dec
bound
sbb
xchg
jnp
mov
arpl
outsb
and
push
shl
test
test
sub
test
dec
cmp
sar
pop
iret
ljmp
or
jb
fldl
dec
xchg
push
xchg
or
stc
cmp
in
inc
cltd
xor
ud1
outsb
es
call
add
pop
adc
sbb
fstps
nop
and
xchg
out
mov
bound
add
add
mov
in
scas
and
xor
daa
dec
popl
add
sbb
stc
fld1
mov
decl
or
int
mov
mov
push
lret
xchg
inc
ficomps
sarb
dec
les
lahf
push
movsb
and
mov
lds
xorb
dec
repnz
cld
push
add
movsl
mov
dec
out
sub
je
or
stos
pop
inc
mov
add
add
fcomps
loope
cli
add
addl
sbb
and
out
mov
pop
repz
fwait
shlb
xchg
sub
and
jmp
mov
pushf
sbbb
jge
outsl
addr16
mov
fadds
daa
pop
pushf
mov
fidivl
add
sarl
adc
xchg
psrld
ss
mov
xor
aaa
sti
fsubr
add
lcall
outsl
rcl
mov
cbtw
add
cld
and
xchg
push
loope
push
adc
in
call
call
mov
adc
and
lods
cmp
sub
push
inc
sub
shll
or
addl
add
out
add
lahf
fld
and
mov
cmpb
xor
aas
addr16
loope
push
cmp
dec
add
jb
xchg
add
pushl
jl
lds
mov
ret
adc
mov
iret
add
sbb
lcall
sub
fdiv
test
pop
lock
aas
xor
jne
pop
lea
dec
iret
cli
shlb
pusha
xor
jg
and
and
jg
dec
and
mov
shr
inc
push
jo
int
cmovne
xor
mov
cmp
pop
push
inc
jle
xor
nop
push
or
testl
cwtl
push
pusha
cmp
cmpsl
mov
push
sbb
or
rol
jecxz
sub
jae
ja
xor
fs
xchg
adc
xor
mov
mov
js
push
sbb
inc
xlat
dec
mov
nop
stos
arpl
mov
or
mov
xor
jne
add
lcall
jmp
xchg
aaa
lcall
nop
jns
in
out
sti
in
inc
aad
cld
lods
decb
mov
jno
aaa
dec
test
dec
std
ljmp
jmp
mov
movsbl
fcoml
xchg
jmp
or
xor
rorl
addb
xor
jge
popa
jb
xor
cld
test
push
int
adcb
les
test
add
arpl
loop
test
loope
enter
xchg
leave
ffreep
xor
pop
aaa
sub
sarl
call
inc
jmp
and
xorl
ja
sbb
pushf
icebp
sbb
mov
adc
ljmp
mov
cmp
or
cmp
add
push
lcall
iret
push
inc
add
jne
out
aas
aam
or
and
adc
lcall
loopne
dec
adc
jno
mov
sub
mov
loop
cmp
das
sub
and
xchg
enter
or
push
lcall
xor
adc
lahf
and
roll
xchg
shrb
sub
cmpsl
dec
or
dec
xor
mov
or
push
mov
movsb
push
sub
jmp
fimull
pop
inc
jb
or
inc
xor
jmp
das
rolb
cwtl
dec
loopne
jg
mov
or
loop
push
fmuls
push
loope
xor
pop
outsb
int3
mov
and
push
dec
pop
jmp
jge
lcall
shrb
sub
mov
lret
ljmp
rcl
in
jb
test
lea
xor
daa
shl
fstpt
insl
inc
cld
mov
ret
mov
sbb
push
and
sbb
and
sbb
dec
xchg
ljmp
lret
sar
jb
cmp
loopne
mov
xor
xchg
ja
cmp
out
in
lahf
mov
out
mov
sbbb
xchg
mov
sbb
fidivs
xchg
xlat
and
pop
mov
repnz
mov
xchg
cmp
jg
fstpl
push
das
inc
outsl
pop
and
fdivl
insl
les
lock
inc
mov
jp
mov
xchg
jns
add
sub
push
rol
movl
fstl
mov
mov
dec
outsl
jle
push
fiadds
mov
cwtl
and
cltd
pop
cmc
sbb
fdivr
push
or
xchg
push
cs
nop
sbb
or
add
dec
jp
xchg
cwtl
xor
push
xchg
lods
lahf
jae
jmp
movsb
lock
xchg
imul
add
popa
pop
mov
push
xchg
xchg
mov
mov
stos
add
rclb
xchg
or
add
or
pushl
xor
rcll
test
mov
dec
das
add
jg
hlt
jnp
or
cmp
andl
cmp
mov
subb
cld
push
mov
icebp
pushl
add
or
add
test
mov
xchg
shrl
lea
sub
pop
cmpsb
pushl
ja
jmp
adc
incl
testb
adc
jmp
jg
add
imul
je
push
mov
movsb
inc
inc
out
cmp
test
popf
sbb
push
fdivs
push
pop
pop
imul
push
fisttps
pop
mov
sbb
xchg
int
xchg
xchg
mov
gs
mov
mov
inc
add
loopne
ja
cmp
cmp
jns
iret
leave
adc
fbstp
or
adc
stc
inc
lds
add
push
imul
cmpsb
daa
in
xchg
imul
das
jns
jl
xchg
loopne
xor
fcoms
adc
mov
sub
inc
push
rcrl
push
mov
lret
dec
push
cmp
pusha
sbb
or
dec
gs
cmp
and
xchg
enter
mov
mov
jp
dec
xchg
sbb
cmpb
clc
in
dec
mov
or
incl
adc
pop
push
loope
aam
jno
in
or
inc
lret
and
ret
enter
das
clc
movsl
sbb
dec
outsb
fistpll
push
int3
repz
bound
lock
aam
cli
cmpsb
outsb
add
xchg
ss
mov
adc
and
mov
aaa
fsubrl
ljmp
jnp
pop
mov
sub
movsb
dec
add
push
cmc
jo
stc
sub
pop
gs
loope
sar
xor
and
mov
test
jo
rorb
mov
aas
mov
lcall
add
inc
and
sub
les
fwait
sbb
test
ret
mov
sub
xor
xor
aaa
dec
test
movsl
sub
adc
or
iret
sbb
add
int
jns
mov
outsb
inc
pop
add
xorl
xchg
xor
pop
ss
pop
mov
je
stc
inc
cmc
mov
rol
insl
pusha
inc
jbe
addb
mov
negl
es
ljmp
push
xchg
out
mov
mov
sub
bnd
repz
sub
pop
addl
pop
decb
lock
adc
or
enter
fwait
ljmp
xor
xchg
add
stos
ss
jge
jmp
or
loopne
les
stc
xchg
jne
pushl
pop
xchg
or
rolb
cmp
mov
pop
cwtl
lahf
mov
call
mov
push
pop
aam
push
adc
imul
or
pop
jmp
lret
test
lcall
loop
out
dec
sub
rcrb
movl
int3
cli
xor
faddl
fidivrl
mov
pop
inc
mov
loopne
push
fstps
or
push
stc
movsb
inc
inc
mov
pop
dec
addr16
sbb
xchg
sbb
lcall
lret
cli
mov
pop
pop
shlb
mov
or
adc
mov
outsl
loopne
add
or
or
adc
mov
test
aam
pop
sbb
ja
es
andps
int3
push
cli
pusha
sbb
mov
dec
dec
andl
adc
fmuls
fs
dec
loop
filds
or
sbb
mov
mov
and
sub
mov
cmp
test
dec
add
repnz
inc
cli
decl
daa
rorl
and
popa
and
fistps
jne
sub
xor
es
lcall
add
cwtl
xor
orl
out
arpl
lock
lcall
pop
daa
mov
lods
repnz
jl
sbb
mov
jmp
sbb
stos
mov
dec
pop
aam
cld
push
push
aas
loopne
cmp
pop
add
pop
in
sub
daa
inc
inc
mov
sbb
push
sbb
fs
mov
push
scas
or
mov
rcll
adc
or
jg
mov
cmpsl
sarl
push
hlt
xor
mov
sub
std
add
adc
fcos
mov
xchg
push
js
add
in
inc
sbb
mov
adc
cmp
aas
mov
loopne
mov
insl
cli
mov
fs
xchg
insl
or
inc
testb
lcall
mov
adc
cmp
dec
xlat
pop
adc
aam
lret
popa
cmp
xchg
das
push
inc
mov
xchg
sub
das
mov
cmp
cld
ja
stc
cli
aas
roll
jp
cmp
mov
xorl
cli
cld
cltd
dec
ss
inc
ljmp
push
and
cmc
pusha
imul
sub
mov
ret
faddl
jns
sar
testl
mulb
dec
mov
incl
pusha
xchg
movsl
loopne
andl
pop
divl
cwtl
ss
and
sub
call
push
add
mov
push
fnstenv
filds
dec
cmpsb
xchg
sbb
xor
out
test
mov
adc
pop
loop
adcb
jmp
push
adc
iret
add
sub
push
cmpsb
aam
std
pop
add
mov
mov
pusha
or
jmp
clc
ja
cld
call
ret
xlat
test
call
dec
gs
enter
adc
repnz
mul
mov
les
std
pusha
out
iret
xor
push
sbb
test
clc
mov
orb
add
roll
jecxz
xlat
fdivs
jmp
cli
mov
mov
enter
call
pop
inc
stc
sub
mov
mov
xlat
fidivs
pop
mov
add
mov
sub
xor
xchg
push
mov
mov
pushf
push
into
test
mov
imul
loope
pop
adc
ljmp
mov
push
pop
scas
addr16
fadd
jae
aas
mov
dec
rorb
mov
cwtl
push
pop
push
mov
inc
mov
inc
sub
mov
xorb
cmpb
aam
mov
stc
in
xchg
adc
ret
insb
faddp
test
repnz
mov
mov
mov
sbbb
pop
sub
sbb
loop
push
shll
in
cs
add
ret
imul
fisubs
adc
std
and
aas
lods
push
jecxz
in
ja,pn
popa
push
xchg
push
lahf
lea
fwait
ljmp
add
sub
sbb
inc
lods
push
pop
imul
stos
mov
cmc
sbb
or
push
shlb
jbe
jmp
pop
add
mov
ljmp
pushl
cmpsb
aad
dec
pop
xlat
push
addr16
jb
repz
sbb
or
pop
mov
inc
sbb
popf
cld
call
cs
mov
movsl
push
insl
xchg
sub
sub
push
jo
adc
sti
in
cmc
dec
aad
aaa
push
dec
rcrl
cmp
cltd
decb
add
mov
out
push
in
and
cmpsl
and
xchg
mov
jae
icebp
lcall
shl
cmpsl
daa
pop
add
sub
inc
imul
adc
cld
icebp
jo
sub
sbb
out
rcrl
jl
cmp
mov
xchg
mov
mov
andb
test
rep
lock
add
add
cmp
xchg
add
pop
xor
lahf
push
jbe
fistpll
jle
subl
jbe
mov
and
pushf
ret
aas
mov
das
and
push
mov
jge
mov
xchg
rorl
lock
mov
xchg
sbb
das
dec
bound
mov
xor
jo
dec
inc
popa
nop
dec
mov
loopne
pusha
into
fisttpl
mov
cmp
lods
loope
dec
add
push
xor
sti
mov
es
adc
add
cmp
in
inc
rclb
test
push
lret
lret
test
pop
scas
fldl
aam
loope
ss
sub
or
jne
jne,pt
call
es
adc
jge
xchg
subb
mov
mov
sbb
std
mov
ret
pop
data16
pop
aas
adc
and
ds
and
addl
lahf
and
push
push
test
dec
add
dec
movsb
ret
test
jae
mov
or
mov
dec
push
outsb
std
stc
dec
pop
jp
shrb
ljmp
lcall
pop
mov
push
or
aas
movsb
xchg
ljmp
out
sti
cmp
dec
sbbb
inc
or
int
sbb
jp
mov
mov
sbb
xchg
mov
sub
inc
cli
adc
mov
idiv
adc
inc
mov
mov
mov
in
sub
and
push
fdiv
sbb
fidivs
push
cmp
mov
loop
ret
xor
sarb
push
push
xchg
or
jg
add
mov
inc
movsl
shrb
enter
adc
mov
mov
imul
sub
ja
loope
or
dec
std
mov
sub
pop
add
jo
mov
int
call
mov
pusha
xor
inc
or
cmp
shll
add
scas
push
nop
xlat
jb
jg
push
jbe
mov
repnz
mov
out
sbb
cltd
sub
leave
push
cmp
adc
test
cld
sub
inc
cli
xchg
rol
divl
push
cwtl
pushf
adc
add
adc
paddd
mov
sbb
inc
and
lcall
ss
push
flds
and
xor
xlat
mov
lret
mov
cmp
lea
mov
cmp
xor
mov
test
rol
inc
dec
dec
stos
add
or
les
dec
ljmp
pop
xchg
cmpsl
enter
jmp
fnsave
mov
dec
fucomi
cmc
adc
sub
dec
mov
xchg
mov
adc
outsl
cmpsb
pop
or
adc
add
xchg
jle
pusha
cmp
mov
cmp
and
mov
lods
sub
test
ffreep
movsl
cwtl
bound
push
xchg
sbb
inc
pushf
outsb
les
or
adc
adc
pop
pusha
cmp
push
mov
je
test
incb
inc
push
mov
fsubrs
mov
and
pop
sbb
icebp
add
add
adc
push
mov
add
in
adc
mov
jno
xchg
xor
cmp
and
int
adc
sub
add
fildl
in
add
pop
mov
insb
pusha
jmp
faddl
mov
ljmp
xchg
loopne
sub
pop
mov
mov
mov
push
test
imul
pop
add
xor
inc
cmp
scas
mov
data16
cmp
add
mov
jb
cli
push
dec
rcrl
pop
out
xor
xchg
ljmp
addb
jnp
add
mov
cli
hlt
cwtl
sbb
jp
pop
sub
cmp
ljmp
add
pusha
idivb
in
loope
hlt
sub
cmp
cmp
push
stos
std
dec
movb
daa
rcrl
add
pop
call
repnz
cmp
jge
push
or
mov
test
add
xor
hlt
test
mov
daa
sbb
adc
sub
lea
in
int
pop
lret
mov
pop
pop
push
incl
add
and
arpl
mov
xchg
lea
jg
test
xor
fs
pop
out
push
inc
pop
icebp
xlat
fsubrl
dec
shl
pop
cmpsb
addr16
jmp
xchg
or
les
jb
and
pushl
aam
push
jno
xchg
adc
and
int3
iret
add
add
mov
stos
fwait
cs
push
in
ret
and
mov
call
lock
dec
mov
push
insb
push
xor
clc
incl
dec
mov
and
push
adc
and
out
lds
js
sar
das
clc
out
mov
outsl
pusha
adc
daa
xchg
setl
and
mov
leave
sub
cmp
add
cmp
imul
ficompl
repz
dec
add
add
popa
int
out
push
cmp
pusha
mov
ds
jg
mov
and
lds
pop
mov
jno
jmp
jecxz
les
jg
outsb
rep
gs
icebp
gs
inc
jg
ret
fdivrl
in
or
jb
adc
lea
xorl
adc
stc
shlb
and
repz
inc
idivl
unpckhps
mov
pusha
adc
push
add
lret
aaa
push
stos
mov
inc
ret
cwtl
out
mov
xchg
xchg
sub
filds
xor
in
hlt
push
les
jb
imul
subb
pop
out
bound
and
outsl
data16
and
jp
mov
pop
clc
jmp
xor
xor
clc
pop
mov
jb
sbb
add
outsl
push
icebp
cmp
shrl
shl
enter
mov
das
test
adcb
push
ss
mov
out
and
add
lahf
adc
jae
sar
and
xor
mov
icebp
ljmp
mov
jne
mov
dec
les
mov
cwtl
pop
or
xor
sbb
pop
jg
in
rorl
nop
or
dec
insl
ret
aas
pop
dec
addr16
lock
out
cmp
inc
out
movsl
mov
push
push
adc
sar
lods
adc
inc
or
scas
mov
xor
sbb
pushl
inc
xchg
jl
jbe
cltd
add
xchg
jg
mov
popf
xchg
xchg
push
imulb
push
ss
jb
xor
jp
mov
cmp
arpl
mov
out
out
std
popl
push
es
fistpll
repz
rorl
pop
add
int
cmc
dec
bound
out
adc
dec
or
pop
cmp
push
movsl
xor
jbe
mov
mov
std
mov
mov
push
dec
or
cld
pop
cld
inc
add
filds
jecxz
pop
adc
jne
fnsave
icebp
popfw
and
sub
lea
nop
cmpsb
cltd
xchg
inc
xor
and
jns
pusha
fisubrl
addr16
push
cwtl
aad
cmp
inc
loop
or
test
cmp
subb
paddsb
jo
js
pop
cmc
filds
bound
xchg
jp
pop
sub
dec
push
add
xchg
adc
testl
push
imul
call
adc
mov
xor
inc
lds
lahf
into
mov
pushl
add
jo
xor
dec
mov
hlt
pop
push
daa
movsl
sub
inc
aas
mov
or
xorl
and
repz
pop
adc
or
daa
jecxz
iret
inc
bound
mov
mov
or
test
rol
cli
xchg
enter
aam
adc
xor
frndint
mov
out
pop
dec
das
adc
xchg
mov
std
or
push
inc
jmp
movsl
iret
rolb
loope
mov
pop
xchg
lahf
adc
or
in
fcomp
mov
xchg
push
jg
mov
xchg
pop
pop
mov
add
repnz
in
scas
pushf
jno
and
jge
incl
inc
jl
xchg
xor
or
or
lcall
or
dec
adc
and
xchg
xlat
inc
fisubrs
or
mov
adcb
fildl
ja
fs
cmpsl
rolb
hlt
dec
ljmp
punpcklbw
or
scas
xchg
subb
repnz
cmpw
inc
cli
adc
push
rclb
ljmp
sbbl
scas
add
inc
cli
rorb
or
mov
xor
pusha
mov
dec
pop
decl
loop
adc
shr
cmp
cmp
repz
in
push
int
jg
cmc
push
sub
add
ljmp
je
sub
ja
mov
loop
outsl
xchg
jg
jno
nop
clc
jmp
inc
inc
jae
pop
pop
fs
push
mov
or
add
movsl
inc
push
jmp
jmp
jg
data16
enter
ret
push
pop
cmp
loop
xchg
mov
xchg
add
pop
loopne
mov
leave
jo
aam
loopne
xchg
std
mov
out
les
adc
out
mov
push
addr16
movsb
cmp
lret
fs
cli
sbb
pop
add
pusha
xor
xchg
mov
out
mov
pop
inc
ret
test
mov
pushl
ret
mov
sahf
cmc
das
cmp
mov
pop
or
decl
xor
inc
lahf
out
dec
dec
sub
mov
and
std
outsl
jle
sub
cmp
jmp
and
clc
mov
fld
add
lock
out
out
dec
jns
push
in
es
or
lret
pop
cwtl
dec
in
inc
stos
pop
jg
fbstp
fnstenv
mov
jo
jmp
cmp
dec
lods
inc
loope
inc
jg
mov
test
xchg
pop
mov
adc
sbb
lods
aam
cld
and
int
adc
push
dec
jbe
sbb
cmp
add
enter
push
ret
inc
or
ljmp
sbb
pop
sub
test
pusha
sbb
lret
arpl
std
ljmp
loopne
mov
xor
repz
cwtl
push
or
ss
incl
mov
pop
into
jo
outsb
dec
movsb
ss
inc
mov
sbb
stos
add
stc
fmull
sbb
daa
cltd
lret
inc
out
and
test
sti
mov
jno
cmp
push
mov
es
insb
inc
sbb
dec
pop
pop
mov
pop
mov
or
mov
mov
std
cs
insb
stos
sub
pop
xchg
lods
mov
std
in
add
sbb
jo
pmuludq
inc
inc
loop
fs
mov
rclb
and
pushl
outsl
xor
cmp
jo
iret
iret
iret
aas
add
std
push
and
add
test
push
mov
adc
or
in
fwait
aam
arpl
ljmp
shll
jb
mov
leave
test
mov
jl
rorl
subb
sbb
cmp
xchg
xchg
xchg
or
ljmp
out
call
jl
iret
inc
sub
mov
push
inc
gs
test
push
adc
push
pop
mov
ret
push
sbb
fimuls
and
push
xor
or
call
jbe
arpl
push
jo
lods
das
stos
decl
insb
or
mov
inc
mov
cmp
popa
push
lcall
mov
arpl
pop
inc
das
push
lods
dec
lcall
cmp
xchg
gs
inc
out
dec
add
in
cmp
push
add
les
loopw
push
or
xlat
cwtl
pop
mov
xacquire
lret
js
xchg
pop
jns
add
fistl
movsl
ja,pn
movsl
jmp
imul
out
int3
push
add
test
xchg
mov
call
pop
add
lret
pushf
sti
mov
test
lret
inc
xchg
push
icebp
dec
loope
pop
out
inc
nop
out
rep
lcall
mov
sbb
dec
xor
sub
sub
mov
cli
pop
add
scas
cmc
cli
bndstx
inc
loopne
mov
jnp
and
jb
test
cwtl
inc
ret
push
incl
mov
repz
loopne
xor
in
xor
sti
mov
sbb
aad
rorb
les
test
iret
ljmp
nop
ja
jp
hlt
movsb
inc
repnz
jg
pmaxub
enter
lods
aad
mov
mov
iret
andb
pop
pusha
jp
faddl
mov
cli
inc
dec
lahf
mov
test
cmp
push
lcall
cmc
sub
jmp
in
mov
or
test
mov
hlt
cmp
inc
add
cmp
test
or
test
pushf
mov
jg
and
pop
rcll
push
js
add
pusha
aam
lcall
mov
sbb
sub
xor
dec
cmpl
cmpsb
flds
in
out
jg
fs
cld
mov
ss
inc
jns
int3
inc
fildll
cmp
cmp
inc
fstpt
call
jnp
fs
sbb
sahf
ret
or
mov
cmp
in
xchg
mov
pusha
mov
outsl
adc
sbb
mov
or
push
pusha
push
sbb
pop
clc
fisttpll
pop
lret
xchg
test
adc
ja
loope
inc
pop
mov
sbb
dec
add
push
leave
pusha
mov
inc
js
push
dec
out
pop
insl
and
fdivrs
xchg
dec
inc
mov
and
inc
aas
jo
mov
add
lret
inc
or
xchg
add
sbb
sbb
mov
dec
mov
scas
add
mov
lods
popf
notrack
or
add
push
mov
mov
in
mov
pop
add
push
lods
clc
cmpl
or
sahf
dec
cwtl
gs
push
icebp
pop
loopne
add
pop
add
std
hlt
xchg
in
and
xchg
mov
xor
add
fdivl
hlt
xor
add
mov
or
dec
or
inc
and
mov
inc
pop
mov
sbb
add
jg
push
push
cs
add
xor
mov
pop
into
sub
jg
or
inc
mov
pop
jecxz
lods
or
test
lock
mov
lret
lahf
imul
push
xor
mov
rcl
loop
movsb
sub
std
or
cmp
cmp
pusha
dec
push
testb
popf
arpl
out
or
add
mov
lahf
dec
lock
setg
mov
movsl
jb
mov
jno
test
push
pop
cmp
dec
fists
hlt
push
les
sbb
sub
stos
aad
dec
add
cmp
clc
xchg
sbb
cmpsb
ret
sbbl
jle
sbb
ja
mov
cmp
push
int
movsl
pushf
test
add
mov
jno
push
adc
push
bswap
add
mov
adc
push
test
xor
shlb
xchg
dec
lahf
je
sbb
sbb
outsl
icebp
call
sbb
popl
sbb
xchg
leave
out
insb
mov
das
push
or
sbb
rorl
lock
lods
in
out
add
xor
shr
mov
sbb
out
das
ds
inc
stos
pushf
jl
mov
add
aas
xchg
je
xor
jl
call
xchg
clc
push
sub
hlt
insb
scas
int3
loope
push
movsb
dec
sbb
mov
xchg
inc
inc
nop
jg
push
cmp
out
jbe
ss
inc
inc
loopne
push
mov
mov
and
mov
push
pusha
pop
sar
call
push
dec
or
push
sbb
call
mov
add
lret
jle
dec
sbb
nop
inc
cmpsl
sub
add
pusha
addr16
stos
jne
cmc
mov
xchg
scas
pop
call
shll
popf
push
out
int
inc
cli
push
pop
js
sub
pop
fmull
sbb
lret
jnp
jo
jge
sub
loopne
sbb
les
adc
rorl
js
test
mov
outsl
pop
sti
roll
test
test
jecxz
or
xor
dec
test
int
xchg
pop
lea
mov
filds
mov
bound
pushl
add
incb
sbb
pop
adc
fidivl
mov
mov
dec
pop
incl
lcall
pop
aaa
outsb
jecxz
adc
fistl
pushl
pushf
pop
mov
pop
test
popa
pushf
mov
xchg
push
ljmp
mov
test
test
fiadds
adc
aas
movsb
mov
in
cli
call
mov
or
xchg
add
jl
and
pop
sbb
xchg
jmp
mov
xor
cltd
jecxz
pop
adc
inc
xor
roll
add
in
std
pushl
and
xchg
ljmp
cmpsl
cmp
inc
mov
cli
or
xor
xchg
testb
lds
jg
loope
cld
clc
rolb
cli
cld
and
xor
cs
out
jnp
shlb
cmp
es
rorb
or
test
loopne
push
inc
inc
push
out
les
sar
das
push
stos
mov
push
pop
ret
mov
push
jg
xor
cli
ds
shlb
xor
sbb
repnz
cmp
jo
jb
popa
aam
mov
addr16
and
mov
mov
call
cmpsb
fdivl
sbb
jne
arpl
sbb
mov
xchg
mov
std
mov
je
mov
pop
push
jnp
mov
push
clc
sarl
and
add
mov
filds
loop
data16
leave
iret
test
cmp
incl
shrl
andl
push
clc
mov
inc
sbb
cmc
popf
mov
outsb
mov
jb
sub
cli
push
jno
push
cmp
adc
inc
mov
xor
or
sbb
js
decl
cmp
cmp
lret
and
push
lock
aas
sahf
inc
jbe
push
nop
mov
and
mov
add
mov
mov
adc
aaa
fcompl
add
jmp
inc
popa
or
call
xchg
decl
scas
xchg
fwait
jl
or
mov
push
push
add
test
outsl
cli
cld
and
inc
xor
dec
hlt
inc
stos
in
jno
xor
dec
fwait
cltd
and
mov
out
sbb
jo
sub
pop
test
inc
outsl
xor
xor
ficoml
xchg
popa
lea
mov
mov
loop
cmpsl
addb
sbb
pop
jo
ficompl
jle
inc
xlat
adc
imul
xor
jbe
ss
test
data16
orl
cmp
call
cmp
add
mov
pop
adc
or
add
les
pushf
decl
movsb
fisttps
inc
into
and
add
loop
dec
jno
or
cmp
sar
dec
dec
push
mov
sub
ja
les
enter
scas
dec
add
xor
xchg
mov
std
and
je
push
jno
pushf
jle
dec
pusha
repnz
call
mov
jmp
addr16
xor
jo
shl
and
sbb
scas
std
push
aad
out
pop
int3
mov
dec
out
movsl
or
shrl
aad
cltd
adc
int3
orb
test
movd
jmp
add
sbb
jmp
and
iret
ret
push
push
sar
inc
and
out
stos
test
xchg
test
xchg
mov
incl
sub
insb
pop
in
enter
fdivr
outsl
rcrb
xor
xor
jl
xchg
jbe
jnp
cmp
mov
jg
mov
cwtl
pop
nop
xchg
lds
xchg
xor
rol
fldl2t
and
dec
dec
shrl
arpl
das
sar
inc
add
es
inc
pushl
pusha
rclb
push
imul
orb
push
inc
ret
pop
enter
orl
hlt
jle
and
cmp
inc
es
push
movsl
pop
add
bound
sar
cmpsb
test
add
pop
cmp
dec
int
lods
pop
pop
lock
jecxz
movsb
cmp
push
test
lcall
mov
decb
push
xor
mov
icebp
cmp
xor
sarb
fcmovnb
add
nop
add
pop
pop
xor
subl
sbb
mov
add
sbbl
mov
jo
mov
jg
clc
fsubrs
push
out
sbb
hlt
pushf
push
fistl
sub
jbe
push
inc
pop
std
sub
imul
mov
or
hlt
shrb
mov
inc
out
orl
int3
test
or
xchg
cmc
lcall
sbb
push
out
mov
adc
sub
xchg
pushf
shlb
jne
pusha
pushf
xchg
push
push
cmpsb
in
push
stos
dec
or
jo
int
sbb
stos
sbbl
icebp
loop
or
les
push
jmp
idiv
addb
sti
push
sahf
mov
outsb
movsl
jg
mov
sti
jg
jbe
xchg
insb
je
add
flds
call
xcrypt-cfb
cmpsl
jecxz
jl
add
decl
xor
push
sub
mov
ja
ret
or
add
lods
xchg
inc
mov
pop
jp
bnd
es
adc
jb
sub
add
or
shlb
jl
cmpl
addr16
rcrb
in
cmpsl
jb
jg
mov
sbb
cmp
xchg
loope
adc
dec
outsl
cltd
outsl
std
and
add
cld
pusha
mov
aas
push
dec
andb
and
pop
mov
insl
repz
mov
rolb
inc
popf
add
jns
fildll
repnz
gs
xchg
cwtl
mov
cld
out
or
shlb
stos
or
jo
and
cltd
adc
aaa
outsl
outsb
add
insl
xor
or
daa
or
les
out
add
enter
cs
jmp
out
inc
loope
ljmp
popf
jle
dec
mov
sti
shr
pop
or
shrl
lret
insl
pop
popa
fiaddl
movsl
test
jb
in
loopne
push
push
adc
repnz
stc
push
rcll
fsubl
xchg
in
push
jle
incl
cmp
popf
out
add
dec
jns
js
cmc
dec
out
push
in
mov
or
out
hlt
lock
push
and
xchg
pop
js
push
push
xchg
or
jo
inc
pop
hlt
pop
inc
arpl
dec
mov
mov
adc
inc
ret
push
shrb
cmp
sbb
add
jg
add
je
adc
sbb
add
hlt
sub
mov
or
jmp
incb
sbb
push
aas
cmp
mov
sub
lods
decb
mov
pop
or
gs
adc
mov
pusha
sbb
std
cmp
rcrl
pop
fdivrs
inc
pop
xor
sub
popa
lahf
sbb
inc
pusha
sub
call
cmc
aam
cmpsb
sbb
or
lcall
pop
testl
mov
inc
cltd
movsb
sbb
incl
test
sbb
and
fimuls
in
call
pushf
dec
dec
dec
pop
sub
pop
es
dec
ljmp
jl
jo
jo
xor
inc
xchg
mov
cmp
mov
arpl
subl
push
loope
pop
pop
loope
fildl
shlb
cmc
push
mov
adc
divl
pop
in
fadds
sbb
or
or
stos
faddl
lret
out
stos
lods
xor
sar
cmpsb
lret
add
jbe
mov
mov
push
icebp
pop
pop
cld
decl
stos
xchg
repz
shrb
dec
sbb
sbb
and
dec
shrb
sbbl
adc
outsl
dec
pusha
inc
in
lret
push
mov
incl
lock
add
mov
iret
and
xor
dec
dec
add
lahf
jne
shl
cmp
add
cmp
popf
in
mov
and
sbb
dec
or
xchg
cmc
xchg
lods
in
mov
add
jbe
pop
lock
mov
inc
fildll
sbb
xor
mov
mov
jns
xchg
xchg
xchg
hlt
cmc
jecxz
clc
aas
mov
rcll
test
movsl
int3
push
xchg
dec
ret
mov
je
jmp
mov
cmpsb
and
leave
gs
mov
loop
iret
xor
and
outsl
fsub
adcl
and
mov
inc
mov
inc
xchg
fisubrs
test
lods
xabort
test
mov
mov
fnstenv
mov
cmpsl
dec
fisttps
pop
mov
lods
jo
push
sub
or
pop
jl
fiaddl
cmp
pop
sbbb
dec
xchg
lock
jo
mov
jl
mov
pop
sbbl
out
iret
dec
loopne
or
mov
mov
jb
lea
mov
int
mov
and
sbb
add
lock
pusha
mov
push
or
mov
call
jnp
or
push
mov
fst
jae
out
xchg
ficoms
repz
push
rcll
imul
mov
pop
cmp
scas
inc
add
jmp
pop
add
imul
out
or
shl
inc
sbb
in
scas
jno
adc
lods
lods
xlat
mov
cmpsb
test
and
push
push
push
ret
add
in
cmp
incl
rorl
cmp
inc
inc
and
pop
push
icebp
js
xor
xchg
dec
pop
fcoml
sbbl
jge
stos
inc
mov
lret
push
inc
add
push
sar
pop
cmc
xchg
xor
popf
xor
mov
dec
and
or
push
lock
das
in
push
inc
jne
sub
pushf
in
push
hlt
pop
or
stos
sub
pushf
jge
or
in
or
mov
cli
decl
insl
push
mov
and
enter
and
inc
pop
divl
and
cmp
pop
fsubrs
xor
pop
ljmp
inc
aas
in
sbb
push
test
sahf
loope
cltd
sbb
outsl
xchg
xchg
mov
mov
jno
or
cmpsl
mov
pop
movsb
pop
fdivr
icebp
imul
sub
and
cmp
mov
rcrb
add
push
stos
mov
lea
cmp
xchg
push
jmp
jns
cmp
push
cmp
flds
push
mov
loop
add
jnp
popa
iret
addb
fs
mov
cmp
jmp
bound
imul
aaa
xchg
nop
mov
sbb
lods
fmull
push
or
sbb
div
dec
and
decl
pusha
mov
repz
test
leave
lcall
repz
ret
sbb
mov
je
xchg
pop
cltd
jg
daa
mov
es
rorl
mov
cltd
dec
add
jle
inc
push
mov
rclb
ret
xlat
pop
clc
or
ljmp
fdivr
sub
mov
inc
inc
sbb
decl
add
mov
dec
outsl
dec
shl
xchg
inc
jbe
data16
icebp
popa
rolb
insl
cmpsl
or
fidivs
mov
and
jl
shrl
aas
fdivr
fmul
inc
mov
mov
sbb
addl
fimull
dec
and
add
pop
movsb
push
pop
cmp
fildl
mov
mov
sbb
rcrb
cmpsb
add
aad
call
shr
pop
imull
push
jmp
cmc
bound
das
cmpl
loop
les
addr16
ja
xchg
or
xchg
mov
sub
or
sub
inc
movl
pop
push
add
adc
repz
mov
loop
icebp
cmp
dec
ds
cmp
jmp
gs
or
popa
mov
or
push
pop
sbb
mov
or
add
pop
jle
adc
mov
or
adc
sbb
outsl
lods
mov
out
or
call
jp
push
cmp
js
mov
xchg
adc
adc
pop
xor
sbb
adc
shrb
repz
ja
add
inc
mov
call
cmp
addps
shl
fwait
icebp
in
inc
out
imul
jns
outsb
orl
pop
mov
push
ret
fwait
aas
out
push
pushf
xchg
xchg
sbb
xor
push
adc
inc
xor
dec
andb
pop
xchg
cmc
incl
ljmp
fbld
sbb
stc
dec
insl
or
ficomps
frstor
add
das
jecxz
add
lock
inc
dec
scas
push
push
lds
cmp
dec
jno
and
or
jo
push
imul
pop
jae
cmp
xor
jle
mov
rcr
movsl
stos
pop
lods
adc
fdivr
dec
cs
rcrl
xor
mov
dec
jle
loope
addr16
jae
insl
popf
jo
loopne
jle
adc
repnz
xchg
add
inc
aam
mov
call
ljmp
icebp
sbb
push
mov
daa
sub
ljmp
pusha
pop
idiv
pop
lock
arpl
mov
enter
pop
push
repnz
scas
js
aas
adc
dec
adcl
xchg
cmp
sbb
stc
jecxz
mov
loopne
lock
faddl
jae
and
insl
scas
pop
aaa
jbe
cmp
ljmp
scas
aas
mov
sub
sub
fbstp
adcl
add
cmp
pop
stos
out
or
sub
xchg
adc
inc
adcb
mov
add
add
adc
pop
pop
vmovaps
call
mov
mov
stos
add
or
adcb
jle
das
fwait
mov
pop
stc
hlt
pop
jb
and
scas
add
pusha
adc
cmp
add
mov
es
in
insl
mov
jmp
xor
fcoms
cmpsl
push
out
mov
jle
cli
out
mov
mov
cmp
push
dec
cmc
adc
pop
arpl
int
inc
mov
std
push
leave
fiadds
xor
movsb
lock
pushf
dec
jmp
ds
es
xlat
into
sub
mov
popf
shll
sbb
cmp
xor
cmp
xchg
adc
pop
push
in
push
cmpl
cmpl
in
sahf
or
cmpsb
in
or
add
jg
mov
inc
shlb
insb
insb
push
adc
mov
dec
frstpm(287
sbb
and
rclb
sarl
negl
adc
add
incl
in
xchg
sbb
pop
xchg
dec
and
in
mov
icebp
push
sbb
pop
lds
inc
test
clc
daa
mov
and
cmp
jle
das
jmp
dec
jg
in
fimuls
push
mov
lret
pop
popl
xchg
and
sub
inc
scas
bound
mov
inc
rcl
mov
popa
pusha
xor
mov
adc
fisubl
lret
sub
or
mov
in
pop
sbb
pushf
add
xchg
push
mov
imul
inc
aam
jp
outsl
adc
dec
jg
dec
mov
lcall
cwtl
sbb
arpl
repz
hlt
cltd
les
xor
shl
sahf
fisubrl
lods
out
mov
scas
push
es
push
in
sbb
cld
lock
cli
push
lahf
and
aas
push
lcall
push
fiaddl
cmc
add
mov
lods
xchg
sub
aam
or
jg
jo
adc
movsl
ret
loope
push
add
std
mov
xchg
xchg
jne
add
sbb
test
mov
cmp
popl
cmp
scas
lods
or
mov
hlt
pop
mov
jnp
and
xor
or
inc
test
mov
cmovo
xchg
cs
pop
in
jnp
dec
addr16
dec
pop
cmp
inc
add
pop
push
pop
hlt
inc
jae
sbb
adc
cmp
mov
fsts
icebp
call
inc
xchg
je
cwtl
shrl
and
loopne
mov
push
icebp
inc
pop
shll
pusha
rolb
push
sar
mov
xchg
pop
push
clc
int
and
push
adc
inc
dec
or
js
mov
shlb
xor
and
mov
call
cmc
jecxz
ja
rorb
notl
mov
or
add
mov
xchg
inc
dec
pop
push
sbb
dec
inc
mov
lock
add
lret
test
movsb
mov
insb
and
cmpsb
test
lods
dec
xor
pop
rorl
pop
xchg
insl
lods
adc
dec
ret
add
push
gs
jne
push
sub
jle
inc
rcr
mov
jl
cmp
out
or
js
cld
pop
adcl
lds
push
adc
dec
in
repnz
fsubr
outsl
inc
mov
and
xchg
loope
mov
enter
xchg
aas
repnz
lods
call
cwtl
pop
lock
test
add
je
add
ds
shll
mov
loopne
pop
imul
je
pop
push
lret
or
jmp
push
popf
xor
adc
arpl
push
pop
add
cmc
scas
mov
test
jmp
xchg
or
nop
mov
and
bound
xor
faddl
imul
cmp
cs
pop
rcl
mov
fidivrs
jne
xorl
orl
xchg
xchg
and
xchg
adc
in
jg
imul
dec
sbb
insl
int
scas
je
add
incl
sub
stos
xchg
pop
ds
call
aam
int
popf
lock
in
hlt
lahf
call
adc
in
xor
scas
jge
es
xchg
add
scas
push
addr16
movsb
popf
push
xor
adc
cli
ja
mov
pop
push
jmp
push
add
popf
fwait
leave
push
nop
iret
jnp
lret
cmc
and
dec
xor
fwait
pop
add
adc
scas
lcall
imul
jae
fiadds
or
mov
pop
sahf
mov
mov
nop
inc
imul
push
push
add
test
xor
stc
arpl
mov
rclb
out
cmp
sbb
mov
mov
call
notl
mov
or
mov
xchg
movb
xchg
enter
cld
xlat
rorl
dec
rclb
sbb
xlat
loopne
jg
pusha
mov
jb
and
bound
std
or
xchg
incb
sbb
mov
int3
mov
jne
pop
or
loop
das
adc
adc
fsubl
pop
aam
dec
clc
out
out
cmc
lret
aas
insl
incl
sub
xor
dec
aaa
js
pop
loopne
sbb
lds
stos
subb
xchg
xchg
dec
pop
xchg
sub
insb
add
test
and
mov
call
pop
xchg
sub
xchg
dec
addr16
fs
fs
cmc
add
and
mov
jns
fsubrs
stos
data16
jp
jg
insb
lea
shll
mov
and
jbe
repz
dec
dec
xchg
pushf
out
add
mov
insl
inc
int3
jp
add
xchg
lea
ljmp
daa
cwtl
inc
sbb
jns
in
fcmove
adc
xorl
adc
rorl
xor
mov
dec
mov
xor
jl
loopne
and
inc
mov
lock
dec
sub
mov
cmpsb
pushf
inc
ret
cmc
mov
cli
lahf
shrb
mov
lds
out
aad
insb
popa
pushf
and
jae
cli
add
lock
lods
cmp
js
lret
dec
andb
clc
adcb
ss
cld
push
or
and
xor
js
sub
fadds
pushl
xchg
and
xor
sbb
sahf
mov
popl
mov
nop
or
cmpsb
call
mov
pushl
or
jbe
add
cltd
add
leave
pop
mov
aam
push
das
jecxz
inc
pop
lret
mov
sbb
in
lcall
in
ljmp
popl
jge
iret
mov
and
dec
xchg
xchg
in
inc
pop
out
xlat
loop
jmp
popa
sub
mov
cmpsl
fldcw
add
aaa
xor
cmc
lcall
notb
leave
popa
pop
shll
pusha
sbb
inc
fidivs
xchg
xor
fnstenv
pop
dec
mov
ret
test
daa
std
enter
clc
fs
rcrb
aaa
cmpsl
pop
repz
xor
push
loope
push
dec
mov
pop
mov
mov
cmp
lods
jno
cmp
mov
mov
icebp
fldcw
loop
jg
mov
in
andl
jl
jo
ja
add
aas
shlb
sub
inc
xchg
sahf
mov
outsb
adc
mov
cmp
xorb
ds
cmp
arpl
push
inc
cmpsb
decl
cmpsl
xchg
and
out
inc
jp
and
push
dec
dec
jmp
adc
insb
rclb
in
cmp
and
mov
fldl
repnz
dec
mov
dec
adc
mov
daa
mov
rcrb
mov
mov
and
clc
jns
jns
sbb
shlb
inc
add
nop
mov
adc
mov
pop
xchg
gs
addl
add
mov
mov
sbb
or
sbb
or
and
pushl
cmpl
and
cld
inc
xorb
cmc
sub
sbb
pop
cmpps
lcall
push
pushw
dec
sbb
incl
add
cmp
xor
add
es
je
push
push
pop
scas
shlb
fnsave
pusha
xlat
and
cwtl
cltd
mov
cmpsl
stos
mov
inc
pop
push
sub
mov
pop
ret
xchg
out
jo
dec
lock
sar
cmp
je
inc
or
clc
loopne
adc
xor
ja
push
jp
pop
add
adc
rcrb
and
jno
out
cmp
adc
scas
mov
ret
xor
mov
cmc
push
cmc
popf
and
and
pusha
mov
adc
add
in
and
insb
mov
or
int
sbb
sub
cmp
add
and
sti
push
jmp
jg
scas
mov
mov
inc
jo
int3
movsb
test
and
aas
into
jmp
jmp
scas
mov
xchg
xor
les
sbb
push
or
cmp
mov
mov
lods
aad
xchg
pop
in
call
stos
sahf
cmc
arpl
pop
mov
mov
xor
fisubs
mov
pushl
subl
add
xchg
sbb
mov
and
orb
dec
shrb
xlat
popa
popf
jb
test
jo
pop
adc
stos
test
dec
stc
rcr
test
incl
push
das
jmp
cltd
dec
aaa
jle
jb
mov
add
push
or
loope
daa
and
push
ljmp
jge
push
xor
sbb
fnstsw
out
sub
or
xchg
or
lahf
inc
pop
mov
add
pop
fisttps
jge
shrb
adc
adc
jbe
jg
incl
adc
jbe
mov
shld
jg
loop
mov
cmp
and
push
out
xchg
push
mov
jo
inc
aam
test
pop
test
jnp
in
push
je
sub
aaa
je
mov
inc
mov
lods
push
mov
pushf
pop
fidivrs
test
inc
loope
call
sti
bsr
push
fmul
push
lcall
lock
rcll
in
movsl
push
jg
outsl
cmp
mov
movsb
iret
fsubr
shr
sbb
sbbb
jmp
in
xchg
pop
mov
pusha
sbb
outsl
mov
pop
int3
lods
pop
add
mov
add
imul
adc
inc
or
jo
sub
inc
push
sub
add
inc
outsl
xor
nop
bound
add
call
imul
push
loop
lcall
fdivs
mov
jmp
in
xchg
aam
pop
loopne
imul
cmp
add
pop
push
lcall
inc
xlat
lret
ds
outsl
mov
push
cli
push
pop
imul
rolb
add
fbstp
inc
sbb
jg
jo
sub
add
rcl
inc
lods
mov
ja
ds
ljmp
fcomps
add
xchg
shl
movsl
and
inc
std
outsl
movsb
mov
mov
loopne
ljmp
add
pop
mov
int3
cmp
inc
aaa
jb
icebp
fld
dec
jae
and
mov
xor
and
std
jg
add
inc
std
mov
inc
scas
ret
xchg
test
xor
and
or
xor
pop
ds
cmp
or
rolb
push
mov
das
dec
andl
push
mov
mov
add
inc
adc
jmp
mov
lock
jg
arpl
insl
shll
pop
push
sub
icebp
scas
rcr
sbb
push
jecxz
aaa
inc
lea
add
rcrb
add
ja
fdivs
stos
out
mov
xor
or
xchg
jg
adc
xor
mov
clc
iret
inc
mov
pop
popa
data16
xor
popf
in
jecxz
sbb
ror
pop
scas
cmp
pop
xor
mov
push
dec
adc
jl
out
mov
cld
pop
xorb
js
add
xchg
mov
and
push
aas
or
jne
jg
clc
mov
cmp
sti
icebp
nop
add
lock
mov
mov
add
aad
cmp
add
sbb
push
inc
push
test
or
aaa
mov
lock
cmp
inc
xchg
mov
and
test
jp
aad
inc
mov
mov
shl
in
push
add
and
cwtl
ret
mov
sub
lahf
mov
mov
filds
jge
ss
int
add
mov
ljmp
inc
int
and
pusha
cmp
add
in
in
and
test
push
int
push
stos
rcll
mov
mov
imul
cmp
xor
inc
popa
mov
fsubrl
cltd
js
ljmp
subl
lock
mov
or
mov
aaa
inc
ficomps
sbb
data16
mov
les
adc
cwtl
bound
mov
test
inc
xchg
test
or
aas
into
mov
inc
add
or
clc
ljmp
inc
dec
inc
adc
stc
or
fbld
cmpsl
xor
push
mov
jmp
jl
incl
pop
adc
out
outsl
xchg
aam
jg
scas
xchg
xor
inc
sahf
push
cmp
mov
orb
and
adc
lods
scas
clc
push
xor
jp
mov
jns
lock
sub
mov
jp
dec
sbb
fdivr
lahf
aaa
addb
cmc
leave
sub
pushf
nop
aam
sbb
inc
xor
out
add
aaa
stos
pop
add
pop
mov
or
mov
mov
push
ljmp
push
in
fcmovu
sub
xor
orb
fildll
mov
dec
add
bound
movsl
pop
push
jp
xor
enter
out
imul
out
push
push
mov
mov
les
shlb
adc
pop
insl
pop
out
or
js
mov
cmpsb
andl
xchg
bound
hlt
icebp
adcb
imul
scas
sar
cwtd
or
dec
les
xchg
or
dec
int3
pop
leave
or
scas
jmp
pop
or
jmp
cmp
jmp
xor
xchg
lods
dec
pop
dec
sbb
ret
lock
insl
pop
ss
pop
aas
push
pop
add
push
or
test
jg
incb
cmp
pop
aas
outsb
frndint
mov
scas
and
ret
add
push
cs
sbb
jmp
push
xor
sbb
mov
fs
ljmp
icebp
jl,pn
adc
jae
xor
nop
and
adc
in
pop
sti
scas
mov
iret
add
push
cmp
arpl
mov
xor
cmpsb
push
ficoms
xor
pushl
rolb
cltd
adc
pop
cmp
sub
xor
mov
add
rolb
insl
mov
lds
stos
in
cmpb
mov
add
test
xchg
xor
xchg
adc
xor
or
iret
jl
pop
mov
lea
xor
dec
fs
inc
sahf
mov
xor
pop
arpl
aas
mov
push
in
mov
es
insb
cmp
xchg
pusha
add
repz
and
jmp
dec
xchg
inc
add
pop
sahf
add
repnz
ror
movsb
dec
adc
and
aas
vmulsd
aad
push
fiadds
push
mov
sbb
sbb
out
sar
in
mov
jnp
insb
push
dec
enter
ret
mov
dec
push
decb
xor
out
cld
lock
pop
rolb
lahf
inc
inc
das
push
cmp
mov
stos
in
or
jecxz,pt
mov
cmp
push
aad
stos
jne
or
sbb
or
add
pushl
cmpsl
hlt
sbb
cmp
mov
movsb
je
fcomi
sbb
push
inc
in
jge
sub
pop
mov
pop
jno
mov
adc
mov
adc
mov
xchg
sbb
popa
mov
shr
cmova
sub
mov
daa
aas
or
jg
cmp
sbb
icebp
fisttps
fnstcw
imul
mov
jo
push
js
pop
jno
xor
push
fcompl
lret
xlat
and
sbb
andl
stc
fwait
inc
or
pop
inc
inc
mov
mov
sub
pop
mov
jecxz
add
fistpll
in
test
inc
in
mov
xchg
sub
xchg
push
jo
std
decl
out
lret
pop
or
xorb
cs
cmp
outsl
rol
outsl
fiadds
ss
inc
mov
and
sbb
inc
std
loope
jo
push
or
jp
aaa
add
or
sar
sbb
iret
inc
cmp
adc
scas
and
pop
loopne
add
push
inc
repnz
sahf
mov
in
sbb
pop
mov
in
jg
sbb
cli
enter
pop
aam
test
add
dec
hlt
mov
or
fcompl
pop
call
movb
sarl
sbb
imul
jo
loopne
sbb
out
inc
popa
adc
fbstp
and
push
aad
xchg
decl
mov
add
inc
mov
sub
shll
adc
and
out
dec
inc
mov
arpl
les
pop
and
in
push
push
fstl
sbb
call
iret
jle
mov
add
imul
fistl
cmpsl
pop
xor
jmp
iret
repnz
xchg
push
dec
or
xchg
pop
dec
jbe
lret
jae
icebp
push
adc
sbb
lea
or
adc
arpl
mov
inc
cmp
cltd
shl
aas
lds
and
dec
inc
add
decl
ds
mov
arpl
push
xchg
xor
jb
jmp
jecxz
mov
test
dec
fcmovb
push
lods
jp
inc
add
fisubl
push
lock
mov
js
sub
sbb
jl
adc
push
mov
stos
je
push
xor
cld
call
sbb
sar
in
mov
jmp
lea
pop
or
jo
aas
mov
mov
lea
sbb
jg
pushf
dec
cwtl
fs
fsub
add
add
jecxz
mov
jns
mov
add
add
js
pushf
movsl
rorb
out
popa
movsl
lret
xchg
cmpsb
jo
inc
xchg
cmp
ficoms
xor
lret
mov
sbb
je
add
int3
dec
push
cmpsl
stos
mov
movsb
mov
push
repz
les
sub
out
add
mov
shll
loope
nop
stos
add
or
icebp
cwtl
jbe
in
movsl
lahf
test
dec
mov
mov
je
ret
push
js
lret
loop
lret
sub
push
stc
pop
dec
test
inc
rcr
insb
pop
add
fnstsw
push
and
ja
data16
popa
lods
pop
arpl
cmp
cmpb
mov
push
mov
inc
add
dec
call
js
std
pusha
push
fiadds
inc
sbb
clc
mov
aad
mov
lcall
leave
out
rol
jmp
fidivl
ss
jge
or
mov
stos
daa
pop
add
jb
sbb
std
bound
daa
test
push
pop
test
cld
sub
jmp
xchg
dec
shll
insb
les
int
ret
shrb
dec
xor
xor
or
loopne
repz
jp
push
pushf
ftst
sbb
mov
lcall
xchg
call
jae
or
xchg
lock
pop
out
add
xchg
pushl
push
inc
pop
enter
and
jnp
fcompl
push
int3
cltd
xchg
call
cmp
mov
subb
incb
cs
or
mov
mov
enter
add
test
nop
ljmp
jge
cli
mov
push
mov
cmp
jge
leave
add
and
or
cmp
scas
fisubrs
lds
add
rol
out
in
dec
xor
mov
and
xor
lods
aas
in
and
rolb
lods
xor
dec
fsubs
or
or
clc
call
jp,pt
push
cmp
mov
inc
nop
in
cmp
dec
xor
arpl
shufps
gs
pop
ljmp
cmp
sbb
xor
cmp
sub
add
pop
pop
cmpsl
push
dec
and
loope
sub
jbe
int
popa
adc
mov
adc
jns
sub
int3
lds
test
decl
mov
inc
out
mov
cmp
xor
adc
cmp
mov
into
addl
pusha
mov
repnz
pop
shll
hlt
pop
roll
pop
mov
ficoms
add
sub
dec
dec
xor
jno
adc
inc
clc
addr16
mov
in
add
aaa
mov
inc
fwait
popa
sbb
ja
daa
ror
pop
or
and
jb
test
mov
cwtl
mov
xor
pop
call
xchg
push
ja
jne
js
add
jo
sbbl
adc
jle
xchg
cltd
in
cltd
lcall
mov
cmp
pop
xor
sbb
dec
adc
sub
cs
lcall
dec
sub
dec
sarl
dec
lods
inc
and
jb
sub
and
dec
mov
push
std
dec
adc
hlt
leave
mov
sbb
add
jb
or
aaa
and
sahf
in
cmc
jb
mov
inc
loop
std
jg
adc
inc
jp
sahf
mov
inc
xchg
pop
fldt
cli
sbb
out
fs
adc
and
shlb
aas
adc
lret
pop
inc
and
add
or
ds
ret
out
add
pop
fimuls
sahf
mov
pop
cld
jl
movsl
and
push
repz
add
sub
icebp
pop
jne
rolb
scas
cmp
sbb
jl
mov
pop
inc
sbb
das
out
jbe
les
xlat
mov
push
fmull
in
ljmp
pop
ret
nop
sahf
and
inc
push
mov
std
aas
and
xchg
rorl
push
test
mov
fisttpll
sub
add
add
inc
lcall
xor
les
adc
lret
fildl
adc
add
pop
pop
dec
decl
sub
ljmp
push
dec
or
and
xor
xchg
cmp
mov
mov
shrb
add
push
push
adc
jnp
aas
pop
cmp
add
cmpsb
add
pop
mov
jecxz
movsb
xchg
pop
loope
sbb
fdivrl
nop
or
popa
incl
sub
inc
ds
addb
mov
add
cltd
mov
mov
mov
jno
orb
jp
cmp
mov
cmp
outsl
int3
pusha
sbb
jns
cmp
add
adc
push
adc
aad
mov
dec
push
jge
hlt
pushl
xchg
imul
in
imul
sub
xor
adc
mov
sbb
test
adc
pop
jnp
add
pop
cmc
or
and
add
push
xor
das
push
aad
dec
into
aad
std
faddl
inc
lods
lock
cli
pushl
clc
jo
add
dec
xchg
rol
shr
loopne
lock
pop
cmp
fldl
xor
loop
daa
aas
in
xor
ret
or
adc
movsl
push
pop
mov
mov
add
ljmp
js
mov
push
shll
loopne
scas
decl
xchg
ficoms
inc
shlb
movsb
fnsave
pop
sbb
dec
movl
cld
adc
shlb
inc
pushf
hlt
push
std
out
clc
aaa
ds
push
clc
pusha
repnz
push
jmp
repz
cmp
aaa
push
clc
incl
cmp
imul
mov
pop
data16
jmp
cli
mov
jle
cli
out
or
jecxz
loope
insl
in
pushf
or
ss
sahf
scas
mov
push
cmpsl
sqrtps
adc
clc
ljmp
daa
andl
inc
mov
shrb
mov
inc
and
push
and
xor
mov
shll
push
pushf
adc
cmp
fiaddl
aas
rol
push
pop
fwait
mov
mov
mov
outsl
push
add
inc
loopne
js
mov
sbb
out
pop
add
shll
pop
dec
andl
clc
inc
neg
decl
adc
int
ss
dec
pop
sbb
lret
test
ds
sbb
mov
inc
lods
ljmp
test
push
iret
adc
lahf
daa
inc
cmp
jbe
sub
out
and
dec
and
jle
or
leave
xchg
mov
sbb
sbb
adc
jp
push
std
inc
sub
insb
idivl
xchg
lock
add
mov
add
cmp
inc
jmp
jge
sub
jb
aam
push
test
add
cmpsb
pusha
jmp
shrb
inc
and
cs
mov
jmp
and
adc
dec
cmpsb
push
mov
xchg
push
loopne
in
xchg
stos
ds
mov
jb
push
lahf
mov
push
push
push
mov
cmpb
pop
ljmp
xor
andl
pop
mov
jmp
sub
lcall
aas
mov
pusha
hlt
pop
ret
or
or
rcll
cmp
dec
mov
pop
push
or
pop
jbe
cld
pop
ljmp
add
enter
repnz
add
jl
and
push
dec
les
stos
cmp
nop
lock
ficoms
nop
and
add
incl
lahf
sbb
fs
ret
or
cmpsb
lcall
orb
test
mov
sbb
insb
clc
push
adc
lret
fcompl
mov
push
faddl
test
push
push
pop
inc
inc
mov
aaa
xchg
inc
out
mov
add
arpl
pop
or
jp
pop
dec
sbb
dec
mov
outsb
in
pop
fisubrl
loope
call
pop
mov
fildll
mov
mov
jmp
mov
std
jle
pushf
andl
sub
gs
lds
into
inc
jecxz
lods
add
decl
es
fwait
xchg
mov
movsl
pop
or
jle
mov
dec
or
inc
push
xorl
test
ss
aas
sar
adc
add
subb
add
lock
and
or
mov
daa
out
xchg
mov
in
jge
es
adc
xchg
scas
jo
movsb
xchg
xchg
iret
xchg
js
das
adc
loop
lret
mov
sbb
dec
adc
jmp
orb
sub
aaa
sar
pushf
mov
popa
dec
data16
sbbb
jge
fwait
or
pushf
in
push
rcll
adc
lcall
test
inc
stos
sahf
push
ret
pop
cs
adc
out
and
out
mov
sahf
inc
inc
inc
sti
pop
add
mov
push
lahf
push
mov
xchg
clc
push
cltd
lock
inc
das
shrl
mov
push
in
and
sbb
outsl
dec
aaa
xor
and
dec
push
add
mov
dec
cwtl
enter
into
inc
or
xlat
in
xor
and
scas
sqrtps
call
xchg
mov
cmp
adcl
inc
aaa
clc
add
add
or
cmpsb
add
add
fistps
fsub
pop
push
push
mov
dec
fildll
cli
xchg
pop
sbb
stos
test
ljmp
aaa
dec
xor
add
loope
aas
fsubs
ficompl
add
sub
sub
push
mov
cmpb
jo
add
or
inc
jbe
cs
push
push
lret
inc
mov
dec
add
out
add
aas
insl
xor
pop
mov
ljmp
ficoms
inc
aad
mov
or
push
jg
jl
jno
leave
sarl
xchg
imul
add
jg
insb
les
add
push
sarb
and
popa
sub
js
fsubrl
adc
mov
stos
insb
dec
fimuls
pop
inc
xchg
daa
mov
mov
mov
es
mov
jg
imul
shlb
aas
mov
mov
cmp
sbb
mov
jmp
scas
sub
jmp
sar
es
push
xchg
cltd
xchg
jb
or
pop
cmp
adc
sti
push
jge
xor
adc
push
adc
adc
popl
lcall
xlat
stos
pop
cld
lcall
push
das
and
aam
mov
push
push
jl
inc
xor
mov
dec
data16
push
inc
roll
aad
xor
data16
scas
jmp
mov
movsb
lock
mov
test
cmp
mov
rclb
rcrb
jl
clc
dec
and
test
addr16
mov
xchg
test
insb
test
lahf
add
inc
cmpsb
add
or
cmpsl
nop
sbb
insb
addb
adc
cld
pop
push
aad
adc
xbegin
lea
xchg
fwait
imul
aas
xchg
loope
pop
jnp
adc
in
mov
add
aaa
add
cmp
pushf
xchg
inc
data16
jmp
mov
fprem
andl
pop
xchg
jo
jmp
mov
mov
add
dec
gs
lea
jmp
add
decl
dec
pusha
arpl
inc
mov
xor
jle
out
pop
arpl
test
mov
int3
xor
dec
or
call
fbld
cmpb
es
jae
aam
incl
dec
fwait
sub
test
enter
xlat
bound
js
pop
adc
idivb
ret
out
adc
add
sbb
mov
push
xchg
cmp
dec
stos
dec
xor
int
lds
or
pop
pop
cld
push
jae
xabort
test
adc
ja
adc
ucomiss
loop
rol
inc
or
sahf
cmp
mov
pop
inc
add
not
int3
nop
rorb
dec
sub
les
jle
cli
test
push
cmp
out
jmp
xchg
add
jecxz
mov
dec
or
rcll
add
or
jne
jo
cmp
adc
stos
sbb
add
scas
dec
arpl
jne
inc
ret
add
std
mov
xchg
pop
inc
jb
cmpsl
test
mov
js
and
sbb
test
dec
cltd
mov
inc
mov
repnz
xor
mov
mov
add
popa
xchg
hlt
cld
int
ja
push
xlat
inc
int3
clc
xor
ds
mov
fistps
jge
das
adc
inc
lret
jbe
in
stos
iret
ret
pop
mov
fwait
decl
pop
xchg
ljmp
les
dec
inc
push
ljmp
ffreep
nop
jo
sbb
in
sbb
or
dec
mov
or
das
and
mov
pusha
iret
adc
pushf
jo
sub
and
push
jb
xor
mov
cld
dec
loope
js
fcos
pop
lea
test
aaa
mov
xchg
xchg
dec
jp
inc
jle
or
cltd
fcomp
cbtw
mov
lock
xor
pop
cmc
movb
clc
sbb
lcall
cmp
test
mov
mov
dec
add
cmp
pop
outsl
and
xchg
dec
cwtl
jg
cli
jb
mov
das
out
cmp
sub
test
push
xor
inc
xchg
push
xor
sbb
ljmp
out
mov
out
sbb
wrmsr
push
lock
push
push
inc
arpl
stos
outsl
clc
nop
in
fldenv
cmp
sbb
ljmp
lea
mov
ja
jl
or
and
mov
pop
inc
out
nop
flds
mov
in
cmp
dec
mov
bswap
mov
mov
push
fstps
in
xorl
dec
daa
cmp
cmpsl
mov
jo
push
pop
out
out
cli
call
dec
add
or
scas
inc
push
sbb
mov
jno
fbstp
cmp
xor
icebp
push
inc
cld
sar
aas
jecxz
push
int
int
out
dec
popf
rcll
test
out
fwait
mov
push
popa
roll
dec
mov
xchg
jecxz
test
aam
fsubl
int3
test
cmc
into
movsb
jecxz
add
sar
ljmp
pop
sarb
ret
mov
aaa
out
sub
xor
sub
lock
andl
xchg
mov
scas
xchg
sub
pop
mov
loopne
and
ljmp
stc
and
roll
jb
mov
push
pop
push
aam
mov
jae
xchg
jg
mov
cmp
and
insl
push
cmp
rorl
jl
cmp
mov
add
call
jmp
scas
mov
dec
adc
stos
dec
ljmp
out
aaa
pop
mov
push
xchg
scas
mov
fdivrp
scas
jmp
jp
repz
pop
imul
jb
or
fildll
jecxz
jb
add
add
popf
lods
test
sbb
lcall
cmp
sbb
mov
mov
andl
stos
mov
or
jmp
cli
sbb
js
mov
je
aas
aaa
in
in
mov
call
jecxz
mov
xor
mov
jg
outsl
arpl
sti
xchg
andb
insb
add
cmpsl
pop
mov
mov
call
add
nop
subl
inc
ljmp
push
push
cmp
lods
jg
jmp
mov
adc
mov
push
or
rol
xor
sbb
cmpsb
out
sub
mov
or
inc
add
nop
sahf
push
jns
cmpsl
inc
leave
xor
mov
adc
mov
bound
decl
xorb
hlt
xor
test
dec
stos
lret
mov
sbb
xlat
ret
mov
bound
xor
mov
push
dec
pop
addr16
fdivrp
enter
lds
push
les
notb
jle
std
incl
xor
fsts
hlt
mov
sbb
arpl
test
push
ret
jg
inc
test
dec
xor
mov
pushf
mov
jmp
nop
lcall
shl
dec
pop
sub
xchg
bound
and
enter
cltd
incl
mov
hlt
mov
or
pop
popf
inc
inc
insb
clc
test
loopne
jp
js
lahf
jl
push
cmp
dec
out
mov
mov
and
aas
fwait
mov
cwtl
rcrb
or
pop
sbbb
pop
mov
cmp
dec
add
loop
lock
subb
test
jp
sbb
push
fmull
xor
adc
jno
and
xchg
clc
add
xor
loop
cmp
data16
mov
cmc
add
jecxz
pop
xor
or
decl
mov
inc
sbb
pop
jne
push
test
sarl
out
xchg
sbb
push
jb
clc
fistpl
cs
and
xchg
aas
sbbb
insb
cld
ja
and
push
adc
jne
push
cmpl
inc
addb
fimuls
loope
mov
lcall
xchg
xchg
xor
mov
push
dec
add
and
scas
nop
lock
adc
call
adc
fwait
inc
push
mov
sbb
xchg
fbld
xlat
inc
add
cli
sub
pop
ja
popf
subl
add
enter
adc
pop
ret
aad
mov
int
sar
popf
push
inc
lret
pushf
movsb
lea
rorb
in
rcll
mov
inc
insl
sbb
pop
mov
mov
pop
loope
xor
or
add
inc
mov
push
push
mov
mov
notl
cltd
pop
rcll
adc
mov
mov
cltd
pop
hlt
sbbb
adc
rol
in
mov
push
fwait
xchg
stc
or
add
push
ja
push
in
adcl
clc
push
or
icebp
mov
stos
ss
in
movaps
push
push
je
out
shrb
mov
std
sbb
push
xchg
iret
push
mov
les
inc
jno
dec
fsubrl
pop
xchg
mov
pop
dec
sti
dec
mov
aaa
in
je
je
mov
movsb
and
sbb
call
insl
fadds
jbe
mov
dec
mov
jbe
add
les
add
jle
insb
xchg
lea
inc
fnstcw
insb
pop
in
and
lock
jno
mov
lea
cmpsl
subl
lahf
inc
test
mov
push
mov
or
mov
andl
xchg
sbb
inc
movsb
in
xchg
jge
std
jg
insb
in
xchg
jae
pop
insl
and
pop
rol
leave
shl
inc
mov
jecxz
pop
xor
in
cli
add
jo
and
mov
dec
fmulp
pusha
xor
push
or
mov
sub
sub
pop
adc
stc
cli
sub
lock
xor
test
push
dec
cmp
lods
mov
lahf
adc
add
lahf
jb
ds
sub
push
enter
and
cmp
shll
icebp
lods
cmp
add
sub
dec
stos
add
sbb
adc
fbld
rcr
and
sub
dec
std
outsl
add
or
sbb
fstl
dec
cld
push
test
xchg
idivl
loopne
dec
in
fnstsw
cwtl
dec
mov
loop
inc
sbb
clc
popa
cmpsl
lar
shr
push
pop
mov
out
movlps
adc
mov
lock
stc
adc
out
and
sbb
dec
inc
aas
jns
add
fs
cli
mov
mov
cld
jg
cmp
and
and
mov
mov
loopne
xchg
adc
insl
xlat
inc
mov
outsl
mov
pop
test
lods
dec
cs
scas
xlat
pop
add
cmp
xorl
shrb
lret
test
add
mov
aad
mov
aam
mov
sub
inc
pop
in
and
aad
sbb
inc
mov
inc
mov
push
jmp
ret
pop
push
push
lds
andl
stos
popa
sub
aad
cs
dec
xchg
sub
xchg
xor
xchg
sbb
pop
fcomp
sub
cwtl
adc
je
das
pusha
adc
pop
pop
cmpsl
jecxz
mov
add
sub
or
les
add
push
sbb
pop
stc
or
jbe
test
inc
mov
ret
inc
das
push
les
adc
adc
cmpsl
mov
les
mov
and
fucomi
sbb
jl
sbb
dec
leave
xchg
cmp
test
add
push
jno
jmp
push
in
aam
jmp
bound
push
pop
fcoml
xchg
js
sti
ds
mov
jp
stos
call
lcall
sub
and
pop
loopne
in
mov
faddl
push
mov
push
push
mov
xor
cld
mov
mov
cmc
aam
rcrb
ja
cmpl
push
dec
add
mov
rcrb
rorb
mov
mov
jg
cmpb
ljmp
mov
xlat
sub
inc
in
mov
cwtl
inc
shr
or
je
push
mov
test
daa
adc
cmp
test
inc
movb
test
dec
pop
push
mov
imulb
in
push
or
sub
ljmp
out
push
addl
lcall
pop
xlat
lock
sbb
ja
loopne
mov
rcrb
mov
jns
push
push
inc
movsb
dec
lea
icebp
sub
push
test
sbb
std
add
push
adcb
or
addl
add
mov
fs
or
xlat
push
sti
push
and
dec
inc
lret
push
mov
or
iret
test
stos
sbb
cmp
mov
fistl
lods
je
bound
notl
insb
xchg
cmp
arpl
add
test
fnstcw
subl
cmp
pop
imul
dec
jmp
pushl
ljmp
sbb
inc
mov
test
pop
inc
xchg
hlt
push
shl
lret
inc
xadd
dec
dec
adc
cmc
inc
inc
push
add
loopne
fs
insb
adc
pop
lods
arpl
dec
pop
or
shrb
daa
mov
enter
ja
out
adc
lcall
push
inc
lock
mov
inc
dec
jno
clc
push
sub
sahf
aas
int
pusha
fisttps
repnz
addl
outsb
push
sub
mov
in
dec
mov
dec
pop
pop
or
mov
je
loop
ds
iret
fcoms
test
pushf
clc
inc
adc
jge
repz
sbb
xor
sbb
push
xchg
bound
xchg
rorb
stos
jb
in
jns
dec
push
sub
aas
ret
loop
and
jg
aas
int3
test
xor
arpl
push
in
push
orb
mov
cmpl
sub
cmpl
mov
or
imul
sbb
xchg
out
negb
xor
fs
movsb
sub
mov
mov
scas
inc
pop
sti
mov
stc
or
outsb
stos
push
sbb
push
push
add
rolb
ret
mov
daa
pushl
pop
aaa
loop
cmpsb
addb
mov
mull
mov
enter
fdiv
int
and
sbb
and
icebp
stos
mov
push
popa
aas
sbb
pop
sbb
cmp
push
andb
rolb
xorl
out
adc
and
pop
pop
lret
and
aas
fbstp
out
jmp
mov
jmp
pop
rcrl
dec
mov
nop
icebp
inc
stc
adc
das
sbb
sbb
jle
scas
das
sbb
cli
ret
or
decb
dec
rcl
sbb
aaa
inc
xchg
dec
or
lods
inc
pop
and
bound
mov
decl
pop
stc
test
or
mov
push
or
mov
and
pop
and
mov
enter
bound
popf
mov
or
into
mov
dec
nop
pushf
pop
push
pop
pop
and
adc
loop
test
test
pop
mov
or
cmp
jmp
adc
inc
loopne
pop
cmp
rolb
lahf
fidivl
lcall
xchg
jmp
inc
fldpi
mov
cmp
lret
inc
inc
push
sbb
pusha
inc
orl
jge
xchg
test
jecxz
outsl
outsb
aam
popa
pop
jl
xor
push
mov
pop
cmpb
push
add
fs
cltd
rcrb
push
fiaddl
lock
scas
jnp
sub
popf
aaa
sarl
loopne
push
pop
add
push
push
add
mov
mov
xor
or
inc
add
pop
jbe
mov
out
jp
sub
jp
pop
push
mov
fs
adcl
and
cld
xchg
cli
mov
lcall
mov
mov
cmc
dec
lahf
inc
pushf
lcall
xor
idivl
stos
push
push
xor
in
out
dec
xchg
out
xchg
mov
inc
ljmp
insb
mov
push
lods
jg
cli
mov
add
les
mov
and
or
nop
adc
pop
stos
inc
add
jmp
js
cs
fimuls
clc
sbb
fcmovnbe
jae
xchg
bound
cmpsb
adc
inc
push
adc
fidivl
rclb
sub
or
outsb
push
cli
out
jmp
shlb
inc
adc
cwtl
sbbb
adc
imul
push
addl
or
out
mov
adc
xchg
ds
cltd
xor
hlt
sbb
sub
dec
xor
sbb
maxps
add
pop
sete
es
cld
popf
xor
sbb
ror
add
fiaddl
sar
push
lea
jmp
lock
repz
shrb
scas
dec
aaa
mov
jge
sbb
pop
icebp
sbb
jmp
sar
xor
loop
pop
nop
dec
imul
lock
jge
inc
iret
push
decl
mov
xchg
pop
pop
je
or
cltd
lods
daa
xor
xchg
add
cld
cld
clc
addl
inc
cwtl
sub
jne
sub
call
or
xchg
mov
js
inc
push
int3
in
sub
sar
aaa
rolb
pusha
lods
mov
push
outsl
push
jl
mov
inc
jae
mov
dec
or
sub
xor
xchg
outsb
arpl
push
repnz
fnsave
push
or
mov
pusha
mov
push
add
mov
sub
mov
or
jmp
sub
dec
add
lods
enter
loop
dec
jo
aas
jg
mov
jbe
jecxz
cmp
jecxz
push
sbb
sbb
jl
fsts
lcall
mov
sub
jne
fstpt
push
int3
push
add
mov
xor
add
mov
mov
sahf
sbb
std
adc
pop
jo
sub
mov
add
dec
inc
and
push
pushl
stos
sarb
add
shr
lds
cmpl
cmp
mov
jmp
and
mov
mov
incl
fistl
mov
loope
addb
jle
pop
orb
enter
icebp
add
pusha
lods
lods
mov
or
shlb
aaa
and
loopne
push
out
clc
push
aad
xchg
sub
pop
mov
test
pop
or
lret
inc
push
hlt
lahf
movsb
cli
cltd
mov
mov
test
sub
popf
xor
mov
mov
mov
loopne
outsl
shrb
daa
les
imul
std
aas
dec
xor
push
mov
decl
jo
jg
push
mov
xor
xlat
push
ret
jmp
lock
rcr
mov
mov
xor
ret
mov
outsl
outsb
and
sub
inc
std
push
call
xchg
and
xor
enter
inc
scas
and
shl
pop
nop
xor
xchg
adc
mov
jae
pop
and
loop
xor
outsl
stc
jl
gs
inc
mov
cmp
pop
enter
je
xor
fsubl
into
mov
sub
pop
ss
popa
cmp
or
xor
stc
lcall
and
aas
xchg
dec
push
scas
and
lods
push
es
mov
outsl
call
xor
and
into
jo
imul
ret
aas
loopne
add
pop
xor
les
fs
lds
dec
jbe
dec
mov
pop
ljmp
mov
xchg
inc
adc
bound
in
insb
cld
inc
inc
data16
outsb
divb
jecxz
add
clc
pop
mov
and
jne
pusha
movb
sub
les
push
pop
in
cs
lods
ja
pop
or
sbb
inc
movsb
xlat
out
cmp
jg
mov
out
xor
pop
test
add
xor
cmpsb
out
adc
nop
jb
add
cmc
mov
cmp
inc
lods
fbstp
jecxz
adc
inc
mul
push
stc
mov
in
inc
jmp
test
gs
mov
addr16
sbb
xchg
jbe
mov
cld
pop
fs
lcall
fdivrp
sti
push
aaa
push
xor
sahf
mov
ss
push
mov
enter
lock
jmp
sub
outsb
inc
repz
add
mov
int
add
sbb
scas
sbb
cli
pop
in
xchg
rcl
les
inc
clc
inc
push
mov
jge
clc
push
adc
push
divl
pop
and
repnz
ret
rcrb
add
lret
fimuls
leave
lock
ret
dec
lret
jecxz
mov
orl
xchg
rorb
cwtl
push
jns
lcall
sub
test
inc
mov
pop
rolb
mov
filds
xchg
push
ljmp
add
pop
sahf
or
cmp
inc
mov
ja
xchg
dec
cmp
rorb
sub
xchg
mov
inc
push
xor
das
ret
mov
lea
lds
dec
jne
mov
xor
fcom
in
mov
mov
xchg
jbe
hlt
nop
push
sbb
or
shrb
dec
flds
mov
pop
shll
add
lock
out
hlt
fnstsw
xchg
xor
sbbl
sub
fisubrs
test
pop
mov
add
dec
les
jo
sar
decl
lret
push
jb
or
pop
mov
aas
and
dec
sub
fldt
incl
mov
or
xchg
incl
lods
jae
dec
push
cwtl
lret
adcl
pop
mov
or
sti
fdivrs
pop
hlt
dec
adc
incl
push
or
ret
dec
std
lret
inc
cld
jnp
jne
add
and
jp
push
addb
sub
sub
test
pushf
push
add
mov
adc
mov
mov
lods
sbb
int
iret
call
jge
mov
jno
jmp
enter
cli
mov
sbb
push
mov
jno
incl
jp
push
arpl
pop
and
jp
icebp
mov
dec
sbb
and
mov
and
icebp
test
insb
mov
mov
pop
xchg
push
scas
js
jl
jp
xchg
and
push
dec
scas
jb
mov
dec
mov
aas
push
mov
movsl
sar
aas
mov
ret
call
sbb
xor
cwtl
fwait
mov
push
loope
test
pop
or
leave
imul
cmpsb
jnp
lock
cmp
jo
gs
movsl
sarb
cmp
popa
jmp
jo
leave
stos
push
fs
adcb
mov
adc
push
add
cmp
xchg
loopne
rorb
cmp
sub
jge
aaa
hlt
pop
pop
lock
mov
adc
and
jle
push
popf
pop
cmp
imul
xchg
ret
cmc
cmp
dec
inc
mov
cli
mov
pop
out
sahf
lret
jo
jg
sbb
repnz
cmpsl
ret
xor
loop
mov
pushl
popf
sub
or
movsb
jl
pop
sbb
repnz
mov
adc
gs
and
cmpsb
outsl
inc
xchg
xchg
xchg
push
or
sub
add
cmpsl
and
add
inc
jmp
dec
pop
lcall
adc
scas
and
dec
jmp
subl
cmp
adcb
sbb
adc
mov
lcall
loop
push
adc
adc
push
dec
jg
push
jge
pusha
dec
les
mov
dec
inc
xchg
stos
xchg
push
dec
adc
inc
loope
cmpsb
adc
push
andl
mov
in
imul
decl
mov
push
adc
mov
xor
xchg
aam
test
mov
sbb
lock
push
jecxz
filds
decl
lret
xchg
and
dec
aas
jg
and
inc
sahf
xchg
add
or
dec
fcoml
add
jg
stc
std
test
rolb
and
dec
hlt
pop
out
xchg
dec
or
mov
imul
push
subb
jne
or
adc
mov
push
loope
pop
adc
mov
and
mov
lcall
cmpsb
mov
mov
outsl
sbb
jecxz
sbb
inc
pushl
inc
or
js
loopne
mov
dec
or
jne
outsb
mov
add
dec
pop
dec
push
pop
cmp
cmp
push
mov
inc
ret
and
stos
sbb
incl
mov
imulb
pop
in
std
lds
adc
lock
add
inc
fs
mov
cmp
mov
push
or
shl
inc
out
call
push
mov
sbb
add
xchg
dec
test
sbb
je
or
jg
iret
cmp
push
punpcklwd
mov
xor
lret
je
or
or
jb
push
outsb
xchg
sub
pusha
es
mov
push
test
jg
jge
mov
cmp
push
lods
cwtl
lret
add
divb
out
mov
push
jg
ss
jne
inc
push
mov
mov
imul
orl
fs
pop
lea
ja
ret
and
pushl
ss
add
add
xchg
cli
inc
cmp
add
jns
push
jle
cmp
stos
jmp
push
mov
nop
data16
stos
inc
out
scas
mov
mov
or
mov
inc
mov
dec
rep
ljmp
rcrb
and
mov
rorb
dec
bound
ljmp
outsb
loope
ret
jae
add
xchg
and
add
sub
mov
push
sbb
rcll
xor
cmp
out
daa
andl
mov
jle
mov
pop
inc
inc
sti
fwait
push
adc
mov
mov
dec
mov
popa
push
rol
std
pushl
sub
shlb
or
or
push
inc
xlat
pusha
pop
ret
cmp
cwtl
cltd
push
push
xchg
int
inc
cld
xchg
bound
rorl
add
add
test
aad
inc
xor
adc
test
lods
roll
pop
add
inc
mov
push
jb
mov
jecxz
mov
mov
pop
xchg
push
in
mov
stos
mov
xchg
out
inc
add
mov
push
or
or
mov
pushf
std
push
xor
and
mov
jg
testb
fdivs
sub
adc
push
xor
mov
cld
iret
gs
and
mov
call
or
cmp
add
pop
data16
or
aas
sbb
into
jo
inc
cmovb
jl
and
mov
out
cmp
add
incl
inc
out
lock
jno
loopne
mov
fnsave
inc
sbb
lret
icebp
mov
or
dec
orb
jbe
popf
and
addl
mov
xchg
mov
fnstenv
aaa
mov
sti
stc
mov
pop
mov
xor
adc
cmpsb
ss
and
std
add
ds
scas
addl
mov
rclb
add
mov
ret
push
fwait
pushf
je
dec
fdivrp
mov
daa
sbb
pop
lret
lcall
xchg
incl
mov
sub
stos
sar
jo
aas
add
xchg
cmpsb
dec
out
and
sub
insb
mulb
insl
aas
cld
test
in
mov
pushf
dec
adc
lret
lcall
adc
adc
stos
mov
lea
xor
lods
adc
outsl
stos
mov
mov
pop
jae
std
jmp
inc
mov
add
mov
stos
adc
cmc
decl
popl
aas
ja
mov
daa
jno
mov
jg
pop
cmp
je
mov
cmp
adc
mov
hlt
sbb
lret
subb
push
add
popf
push
aas
pop
or
adc
imull
mov
lcall
pop
mov
adc
lods
in
rcrl
jl
in
xchg
push
into
sahf
std
pop
adc
scas
cmp
movsl
push
mov
cmpsb
xor
inc
add
and
gs
sbb
sbb
cmpb
fmuls
ds
cmp
roll
outsl
mov
jae
hlt
dec
pop
adc
pusha
cmc
clc
cmp
sub
add
fwait
ret
pop
mov
mov
loop
repnz
sbb
pop
adc
outsl
aam
sbb
and
xchg
xor
or
dec
or
ja
pop
inc
mov
push
sbb
or
or
nop
push
data16
mov
or
test
inc
out
mov
mov
adc
mov
pusha
and
inc
repnz
clc
out
inc
scas
and
or
push
pop
add
lods
sarb
mov
pushf
add
adcl
hlt
cmc
sbb
fsubr
push
clc
addr16
add
ljmp
cmp
nop
jns
iret
jmp
call
or
fisubs
push
lahf
add
mov
mov
pushl
or
fmuls
or
inc
bound
repz
pushl
sar
sub
adc
sbb
int3
in
adc
add
or
mov
xchg
fadd
pop
inc
bound
dec
mov
loope
xchg
mov
clc
add
push
sub
xchg
fstpl
loope
cld
loopne
adc
push
and
test
push
jno
int
mov
addb
jbe
decb
subb
push
xchg
pop
sub
loopne
js
pop
sar
out
pop
mov
pop
pop
mov
lods
sub
arpl
sub
movsl
cmp
mov
dec
add
and
xchg
rcrb
add
test
test
aam
mov
dec
mov
insb
push
fisttpl
inc
jb
ja
fcomps
add
fdivp
cld
call
insl
and
test
mov
push
xor
add
fwait
test
pop
pop
dec
add
sbb
add
add
test
ret
lcall
fwait
sub
inc
push
inc
lret
pop
pusha
sahf
pop
mov
sbb
ret
and
jbe
je
sub
pop
pop
rcrl
sub
out
jns
jae
or
add
loope
mov
enter
inc
push
or
rol
or
and
addb
mov
ljmp
shl
xlat
inc
enter
inc
je
xlat
or
pop
cld
popa
arpl
dec
jp
or
pushf
add
adc
push
jl
xor
mov
sbb
insl
test
cmp
jb
sub
test
inc
sbb
sahf
cmpsl
rcll
jmp
push
fwait
js
or
nop
push
jo
push
jle
jle
in
mov
dec
addl
sahf
clc
fmull
push
and
in
shrl
fld
jp
stos
xchg
lock
push
add
das
inc
loope
push
aad
and
pop
push
cwtl
nop
and
xchg
stos
add
rclb
lahf
lret
jle
push
jae
mov
sbbl
mov
or
mov
add
loop
push
cpuid
push
inc
and
add
pop
sub
jle
sarb
adc
andb
roll
ffreep
aas
adc
test
clc
movsb
jbe
mov
lods
in
scas
ljmp
test
outsb
ret
mov
aas
cmp
ljmp
inc
mov
lock
out
lret
adc
jno
mov
add
repz
rcll
pop
push
mov
add
mov
mov
add
repnz
hlt
dec
push
inc
aad
or
cwtl
pop
jl
rorl
and
rcrb
int
loopne
cltd
and
daa
cli
lea
outsb
cmc
aas
mov
fdivrl
loope
add
popaw
jo
cmp
add
flds
shrb
jnp
ss
add
and
mov
addr16
aad
pop
outsl
jb
add
fisubl
leave
int3
inc
daa
sub
or
dec
cwtl
daa
test
add
dec
lret
inc
dec
and
into
imul
loop
int3
mov
inc
nop
fcomp
lods
test
mov
aaa
xchg
stos
sub
fnstsw
mov
aam
push
aas
out
cmpb
xor
stos
cltd
adc
out
int3
lods
mov
popa
int3
loopne
icebp
jg
push
test
jb
shll
mov
scas
jp
fs
add
push
leave
hlt
inc
add
mov
add
jg
cmc
adc
pop
fs
lcall
cmpsb
sub
adc
imul
inc
add
jge
jmp
adc
inc
pop
test
clc
and
test
and
inc
lret
dec
push
pop
push
faddl
cmp
mulb
cmp
jmp
lock
cltd
sar
add
in
or
dec
out
loop
rclb
sub
jg
nop
add
xchg
or
movl
mov
lret
jns
dec
jp
inc
sbb
shll
mov
popf
std
jle
imul
jns
pop
pop
call
test
leave
push
add
inc
or
cmp
pop
inc
aaa
fildll
xor
sbb
jge
insb
mov
dec
mov
addl
pusha
cmp
jmp
add
aas
sub
mov
pop
pop
sub
loopne
mov
jecxz
push
jmp
test
mov
aaa
repnz
ss
add
ret
add
jg
push
mov
movsb
adc
adc
clc
cld
dec
add
sbb
push
adc
call
vunpckhpd
test
jns
jle
mov
scas
push
mov
cwtl
ds
cmp
popa
mov
cmp
jge
subb
jnp
add
pop
loop
daa
add
rcr
shlb
push
sbb
add
dec
mov
pop
in
rclb
addb
pop
and
int
cld
cld
add
push
stos
and
test
or
push
push
sub
inc
inc
push
xor
and
sahf
icebp
arpl
or
mov
imul
mov
fwait
adc
pop
je
sub
push
lret
loopne
sbb
push
add
insb
push
mov
clc
pop
icebp
and
mov
iret
and
mov
out
out
mov
adc
inc
lods
popf
or
mov
arpl
les
int3
xchg
sbb
js
iret
jne
addb
add
add
or
outsb
add
movsb
cmc
incb
lds
mov
mov
hlt
add
dec
mov
fs
in
or
shl
loopne
ds
dec
movsl
loope
rolb
dec
fsubrl
outsb
out
jmp
stos
and
addl
sarb
adc
iret
inc
mov
push
push
imul
inc
mov
rclb
aam
sub
movsb
movsb
pop
adc
inc
pop
call
divl
test
outsb
ret
dec
sub
jg
mov
in
test
xor
xchg
lea
outsl
xor
and
stc
cmp
addb
and
add
mov
repnz
mov
sbb
pusha
push
adc
lret
out
sub
sbb
out
out
mov
adc
mov
stc
xor
les
fbld
or
jo
sahf
xchg
not
pop
mov
aas
mov
enter
leave
add
out
mov
outsl
loop
enter
mov
jl
call
incl
add
loop
adc
add
loope
aas
popa
xor
push
repz
mov
bound
bound
shl
push
dec
dec
loope
or
mov
loope
add
inc
scas
out
adc
js
stos
out
icebp
xor
sbb
push
fstl
insl
loop
icebp
lods
cmp
push
adc
insl
mov
addb
into
dec
mov
andb
xor
shl
roll
sub
addl
or
test
pop
sahf
in
test
movsl
xchg
les
cs
fcomi
call
aam
ds
leave
sub
or
fcmovnu
cmc
add
mov
inc
pop
pop
clc
add
hlt
pop
bound
push
adcl
xor
ds
test
cmpsl
inc
jns
decl
sbbb
orb
or
decl
and
inc
inc
mov
fdivl
dec
inc
loopne
fnsave
inc
push
push
jecxz
push
aas
sub
popf
daa
xor
inc
inc
cmpsl
sbb
in
add
popf
sbb
lret
push
mov
push
xor
pushf
or
int3
jne
and
leave
stos
lock
push
ret
dec
adc
mov
in
push
outsb
jl
jnp
xor
adc
add
dec
gs
mov
js
and
cld
push
mov
jno
xor
loope
push
add
mov
aaa
and
fwait
jo
test
or
jnp
imul
test
shl
add
in
add
clc
pusha
xchg
cmp
sub
lds
inc
shll
mov
jecxz
and
mov
xchg
jp
xchg
outsb
leave
mov
push
stc
std
push
push
inc
mov
dec
dec
mov
cpuid
sub
inc
or
sbb
jle
repz
pop
push
inc
dec
push
xor
pusha
jp
ds
jmp
dec
in
xchg
fsubs
add
add
xchg
pop
push
push
fwait
sbb
inc
push
xchg
mov
xor
test
test
inc
adc
or
jg
or
lods
push
push
nop
clc
xchg
push
mov
cwtl
add
or
outsl
test
push
pop
int3
add
in
adc
adc
imul
add
inc
add
add
xchg
shl
lock
fdivs
jg
xor
lcall
mov
push
jnp
mov
inc
orb
loopne
mov
push
pop
imul
mov
les
outsb
cmc
xchg
lret
cwtl
or
jmp
mov
cmpsb
aam
cltd
inc
and
icebp
jae
hlt
pop
leave
mov
dec
and
jb
arpl
js
test
fldcw
sbbl
ljmp
adc
mov
push
mov
test
mov
inc
cmp
sub
jp
adc
pop
cs
filds
inc
popa
mov
jp
xor
cli
lret
test
cmp
xchg
dec
add
subb
lahf
dec
mov
dec
and
jge
daa
lds
popa
loop
xchg
dec
mov
scas
dec
mov
lods
inc
add
adc
hlt
iret
inc
and
add
push
sub
add
lock
dec
leave
push
push
or
sahf
jno
sub
cld
cmp
dec
addb
jg
xchg
movzwl
fmull
mov
jmp
inc
sbb
sub
and
pop
adc
jno
jge
mov
sub
mov
lds
cli
aaa
cli
mov
add
cmp
mov
inc
xchg
rclb
dec
test
mov
gs
dec
push
comiss
lock
mov
mov
xchg
js
loop
jne
mov
sarb
sti
fdivrl
lcall
paddq
and
test
fmull
enter
dec
adcl
dec
faddl
dec
jo
out
lock
lods
clc
and
repz
mov
mov
cmp
lret
lret
cmp
loopne
jecxz
add
call
push
and
stos
enter
loop
mov
mov
mov
mov
fsubl
dec
in
scas
fistpll
mov
pop
ret
movsb
stos
mov
xchg
test
jo
mov
es
jmp
js
adc
arpl
jo
jbe
mov
mov
push
rolb
sbb
fwait
dec
test
outsl
adc
hlt
mov
enter
xor
xor
push
mov
gs
adc
dec
jge
jg
in
pop
jne
push
jl
orb
cli
jb
fdiv
outsb
xor
std
test
test
mov
lret
sahf
idivb
add
dec
or
cmp
lock
ret
xchg
in
sbb
dec
or
add
in
add
cmp
loop
mov
mov
std
add
mov
fwait
repnz
sub
cmp
sbb
jg
sarb
movsb
inc
xchg
lock
mov
leave
pop
inc
repnz
or
loop
sbb
sbb
pusha
adc
xorb
xchg
add
aas
mov
xchg
adc
loopne
push
int
call
std
dec
xor
pop
aaa
inc
out
mov
loope
mov
repnz
cmpsb
sbb
sub
scas
dec
mov
mov
fdivr
pop
sub
add
mov
out
aam
add
sbb
add
push
dec
and
cld
icebp
shlb
pop
push
stc
test
lock
outsb
les
mov
add
mov
mov
test
add
inc
cs
adc
clc
shl
dec
jb
outsl
cltd
mov
cli
call
cmp
pop
movsl
js
faddl
into
cs
test
addb
cli
adc
mov
adc
test
inc
mov
jb
sbb
in
movntps
jmp
lcall
imul
pop
add
push
mov
bnd
mov
mov
out
cmpsl
mov
xchg
sub
rolb
call
jp
and
inc
pop
push
pop
add
cmp
scas
sub
add
icebp
dec
or
jo
cmp
js
inc
int3
adc
xlat
hlt
cmp
add
mov
pushw
fistps
lods
xchg
int3
xor
test
push
pop
jle
bound
lds
pop
inc
out
or
mov
jmp
clc
popf
nop
in
or
lret
dec
adc
adc
jmp
push
lret
pop
push
mov
xchg
fidivrl
ljmp
enter
dec
lock
filds
inc
pushf
sbb
and
adcb
pusha
or
add
mov
mov
mov
les
mov
gs
pop
out
add
ss
orb
inc
leave
lea
cmp
adc
jno
bound
cld
and
test
call
xchg
fs
lds
mov
pop
xor
sbb
out
popa
enter
nop
push
out
fsubr
call
inc
ret
repnz
dec
and
out
push
jge
out
mov
std
or
ljmp
sahf
cmpsb
cwtl
test
call
sbb
mov
mov
and
int
inc
adc
push
mov
xchg
hlt
je
les
cld
movsb
lock
dec
add
ret
push
jne
repnz
enter
jns
cmp
cld
daa
insb
cmp
icebp
popa
out
adc
js,pt
xchg
lock
hlt
ret
inc
mov
push
in
dec
pop
adc
pop
fsubrl
sbb
testl
es
sbb
inc
js
xor
jle
std
fwait
insb
add
sbb
adc
sarb
popf
scas
pop
mov
sub
movsl
je
or
inc
test
add
pusha
xor
xor
xor
xchg
mov
sbb
fimuls
mov
jnp
xor
lcall
jmp
or
or
and
dec
inc
sub
popf
jecxz
lahf
pop
adc
dec
push
xor
js
ret
icebp
shrb
out
jne
fmuls
in
mov
in
jne
adc
out
stc
outsb
jge
lahf
jno
test
sar
or
shrb
fwait
iret
fsubs
dec
leave
inc
fisubrl
adc
inc
or
rol
aas
mov
jecxz
adc
cmp
xchg
sbb
jno
mov
mov
pop
add
stos
sub
lods
int
clc
hlt
and
repz
shl
mov
repz
out
add
ja
jp
mov
xor
fadd
movb
adc
rolb
mov
push
imul
aas
push
into
lock
jns
xchg
repz
sub
sub
rcrb
test
xor
jmp
push
xor
jmp
cmp
shlb
jle
std
daa
mov
lcall
xchg
sbbl
imul
iret
sub
scas
es
add
add
lods
int
jmp
and
sti
lods
pop
xor
inc
in
pop
loope,pt
xchg
pop
stos
rorb
lods
push
js
sbb
fnsave
fwait
sub
jo
mov
sbb
mov
jp
sbb
inc
inc
repz
add
jl
lock
jnp
mov
add
cmp
lds
ja
or
dec
pavgb
fnstsw
addl
dec
rolb
dec
sub
out
mov
roll
adc
xchg
std
int
dec
push
push
push
std
ljmp
mov
ljmp
ljmp
and
cs
inc
or
std
xchg
mov
dec
adc
out
xchg
pop
mov
lcall
popa
adc
popf
or
add
arpl
mov
test
push
cmpsl
test
cmpl
jmp
dec
sti
or
orb
cmc
pusha
mov
xorl
test
jns
mov
es
pop
adc
add
decl
cmpb
bound
adc
pop
pop
aas
add
fldcw
sub
ret
push
push
aam
dec
pop
mov
xlat
es
incb
jg
cs
enter
inc
pop
imul
adc
and
push
push
out
mov
jle
movsb
icebp
jl
iret
or
add
xchg
orb
push
adc
dec
int3
xor
out
inc
and
orl
std
jne
js
xchg
sub
enter
test
bound
jnp
subb
and
mov
jp
arpl
aas
sbb
mov
mov
inc
leave
fld1
shrb
xlat
sbb
ss
out
xchg
push
adc
cmp
xor
mov
or
insb
pop
xchg
mov
dec
cmpsb
adc
mov
mov
mov
lods
ja
cld
xchg
out
adc
in
dec
daa
roll
not
lock
xchg
add
pushf
push
xchg
adc
add
add
xor
or
pop
cmp
cmpsb
and
paddq
push
push
xchg
pop
scas
test
inc
push
and
ficomps
subb
add
rclb
outsl
pop
mov
cmpsl
and
leave
andl
push
pusha
fistps
mov
icebp
fadds
xchg
cwtl
js
adc
aas
adc
fadd
test
xchg
stos
fcomps
jno
leave
jge
mov
adc
inc
push
test
mov
int3
pop
xchg
lret
inc
push
xlat
out
add
push
into
push
sbb
add
adc
mov
inc
inc
das
js
loop
cltd
push
andl
inc
and
pop
mov
mov
mov
push
int3
mov
cmp
cmpsb
stc
adc
je
lods
adc
pop
cli
mov
call
sub
imul
inc
aam
out
cpuid
dec
loope
int
icebp
adc
rcll
hlt
push
push
mov
mov
jl
xor
fildl
inc
lock
popf
sbb
inc
dec
push
xchg
add
jae
fs
movsl
dec
push
lret
repz
cmp
shr
mov
rep
push
and
add
sbbb
pop
rolb
mov
inc
add
pop
ret
adc
cmpsl
and
mov
inc
mov
nop
mov
or
test
push
imul
lret
sbb
rcrb
call
mov
dec
jge
das
idivb
mov
aas
and
scas
hlt
sub
push
sbb
sbb
ret
xchg
fwait
add
test
push
jnp
mov
aaa
lahf
xor
popf
iret
adc
xchg
lahf
push
xlat
insl
sbb
adc
aas
sub
sarb
add
mov
cmp
push
add
cli
iret
and
mull
pusha
pop
jno
xor
pop
popf
lcall
movsb
icebp
cmp
data16
pop
mov
ja
das
setge
cmp
pop
into
lahf
outsb
or
push
push
mov
xchg
xor
dec
popa
or
mov
xchg
xchg
mov
ss
jmp
push
mov
sti
cmp
aaa
pushl
nop
pop
in
mov
sbb
call
leave
stos
sub
jbe
adc
inc
jno
add
loope
test
mov
push
shlb
cmp
lock
sub
lret
sbb
push
xchg
dec
int3
in
sbb
add
mov
cmc
jb
shrl
mov
lods
cld
cmpb
mov
pop
sbb
jo
mov
sub
mov
popf
push
push
in
dec
mov
cs
cmpsb
icebp
rorl
inc
dec
mov
lds
jl
lahf
xlat
cli
pop
sbb
and
sarl
cli
add
mov
or
fcompl
cli
inc
dec
add
jae
cmp
dec
jno
and
mov
jmp
pop
lret
test
add
test
cmc
scas
mov
pusha
fstp
popf
xchg
add
inc
inc
jge
add
movsl
add
outsl
adc
jae
cld
ss
cmp
pop
rorb
dec
enter
cmc
int
add
les
xor
loope
push
cltd
mov
jle
adc
lahf
inc
mov
or
cld
hlt
outsl
mov
or
cmc
inc
movsb
stc
push
xchg
mov
shrb
sbb
push
loope
xchg
sysret
adc
or
sbbb
outsl
ss
lods
dec
pop
push
add
je
cli
lcall
cmp
pop
scas
std
jbe
sub
adc
inc
out
loop
fwait
lcall
cmpsb
add
test
insl
mov
imul
cmc
es
pushf
dec
out
addl
add
roll
xchg
test
loope
mov
hlt
xchg
sbb
pusha
cld
inc
int3
add
fwait
xchg
inc
sbb
push
adc
repnz
popa
rcrl
test
add
adcb
inc
incl
mov
cmc
mov
mov
xor
cld
pop
dec
jo
dec
xchg
dec
add
jg
cmp
jno
inc
cmp
or
or
insl
loope
lcall
mov
cwtl
pop
leave
push
pop
test
decl
icebp
cmp
cmc
cmpsb
loop
add
inc
shlb
sbb
sbb
cmc
cmpsb
inc
add
mov
ljmp
rcll
leave
ret
or
pop
pop
hlt
xchg
xchg
cmp
jg
and
addb
hlt
and
movl
and
jl
fbld
in
adc
int3
movsl
jae
lods
movsb
fdivrl
insl
inc
mov
clc
test
dec
and
addr16
in
rolb
mov
and
inc
incl
bound
jge
push
push
rep
and
pop
inc
sub
xor
aaa
rorb
inc
add
mov
in
sub
add
mov
pusha
sbb
lock
orb
sahf
jecxz
or
nop
lea
add
andl
cmp
in
or
dec
cmp
pusha
repz
push
cmc
incl
push
mov
push
mov
xor
mov
jns
mov
mov
pop
push
cmp
call
inc
out
dec
add
movsb
pop
cmpsl
add
push
and
decl
pop
xchg
stos
cmpsl
pop
adc
add
push
mov
mov
cmp
wbinvd
jmp
push
fcomps
pop
cmpb
loopne
mov
xchg
leave
pushf
push
sub
and
jne
push
icebp
or
add
les
pop
mov
movsb
andb
and
jb
das
adc
cs
and
mov
js
es
cmc
fs
inc
in
ficompl
fnstsw
jne
lcall
imul
xchg
rolb
repz
mov
cmpb
or
fwait
mull
pop
xor
shl
xor
cmp
int
mov
test
pushf
in
out
das
and
xchg
and
jl
sbb
loop,pn
cmc
fwait
out
mov
lea
cmp
les
outsl
jmp
adc
aam
fisttpl
mov
out
sbb
test
cltd
nop
aaa
clc
das
and
xor
ja
mov
mov
mov
mov
mov
jo
decl
fmull
xor
push
or
cmp
sahf
aas
gs
push
pop
movb
xchg
imul
xor
inc
inc
pop
cs
lret
mov
adc
sub
roll
adc
mov
pop
stos
jmp
enter
jmp
xlat
rorl
mov
mov
roll
mov
add
jnp
fmuls
clc
lcall
xor
stc
scas
imull
and
dec
mov
call
xchg
cmp
dec
add
sbb
or
adc
push
cld
inc
mov
push
sub
jl
jg
lea
in
dec
inc
ds
test
ret
clc
cmp
and
and
test
aas
lods
daa
mov
cmpb
sub
add
jne
aad
push
lds
pop
adc
mov
and
xchg
cwtd
call
and
gs
pop
or
decl
outsb
and
out
dec
lahf
or
push
mov
imul
js
mov
subb
insb
sbb
nop
shll
leave
cmp
test
arpl
jg
ljmp
aas
lret
subl
adc
ja
add
push
pop
push
repnz
out
pushf
push
sub
fldcw
ja
mov
sub
divl
into
mov
lret
push
test
xor
fbstp
sbb
sbb
lods
mov
xchg
xchg
dec
add
or
dec
js
xchg
cs
pusha
fsubs
cld
add
mov
mov
lods
xchg
ret
fdivp
adc
push
adc
inc
outsl
orl
clc
mov
jmp
push
int
popl
pop
mov
push
fwait
sub
xor
inc
outsb
push
incl
adc
ret
andnps
dec
cmp
cld
dec
les
out
test
sub
decl
lods
loope
stos
push
mov
xchg
loop
into
jns
ljmp
test
or
incl
push
jl
mov
mov
push
sub
addr16
xor
dec
adc
push
or
arpl
mov
or
xchg
xchg
sub
and
fnsave
fisttpll
shl
push
repz
stos
mov
add
test
mov
test
loope
mov
xor
outsb
lods
and
jb
fcoms
std
movsb
or
mov
pop
leave
cmp
and
or
dec
lcall
adc
inc
popa
dec
mov
mov
rol
xlat
cmp
mov
adc
push
movsb
nop
pushl
xchg
arpl
mov
imul
or
adc
mov
ljmp
and
dec
test
mov
sub
jg
pop
dec
loope
add
loopne
mov
cmp
push
jge
xchg
add
addr16
push
fsubl
out
addr16
xchg
add
call
mov
incl
inc
xchg
cmpsb
rclb
push
pop
cmp
jg
int
lea
xor
cmpsb
or
mov
dec
cpuid
clc
rcll
dec
cwtl
add
add
lods
mov
add
mov
femms
shrl
nop
arpl
add
mov
sub
or
loop
lahf
out
pop
fs
inc
jle
mov
mov
cmp
lods
adc
sbb
and
gs
add
add
or
loop
pusha
mov
xchg
xor
push
ficompl
add
dec
inc
jb
ret
outsb
mov
hlt
inc
dec
mov
adc
pop
movsl
notb
xor
push
adc
iret
and
loope
adc
scas
rcrb
aaa
mov
xchg
ljmp
out
pop
pop
sbb
jne
mov
mov
push
loope
loopne
mov
dec
pusha
add
dec
pop
ret
or
push
scas
or
inc
mov
or
fs
loop
loope
jae
mov
pop
fucomp
and
es
add
jno
sbb
mov
ss
incb
sub
jns
xor
stc
pop
lods
mov
mov
xchg
mov
cmp
ljmp
insl
sbb
sub
push
inc
cmpsb
int
fdivrs
ret
icebp
lds
mov
fists
ljmp
jmp
lahf
imul
xlat
push
mov
fcomip
sbb
or
or
movups
cmp
sub
nop
sub
mov
out
mov
ja
and
outsb
test
cmp
sub
cmp
and
inc
loope
cmc
aaa
cmpsl
adc
addr16
shll
incl
rorl
xor
push
inc
call
or
fs
cmpl
clc
out
cli
insl
push
cmpsl
add
or
fs
mov
jg
sbb
xchg
add
sub
add
push
sub
xchg
aas
jl
insl
mov
je
mov
adcl
insb
inc
cli
or
dec
cli
aad
dec
insl
leave
jnp
add
jg
out
in
pop
jns
push
xor
test
movsl
and
pusha
jne
mov
or
inc
daa
mov
and
adc
cld
and
mov
and
push
sarb
inc
lds
and
data16
jo
arpl
dec
scas
xlat
lret
cmp
aam
ljmp
add
jge
in
mov
test
pop
sbb
movsl
pusha
jo
dec
cmovs
xchg
test
add
fwait
xchg
xor
in
cmp
leave
cld
imul
mov
xor
callw
fwait
jmp
mov
data16
int3
mov
ret
sbb
sub
adcb
imul
or
sub
mov
adc
or
shrl
inc
xchg
jl
jl
mov
test
lods
popa
mov
out
sbb
out
cltd
jmp
roll
xchg
iret
push
xor
outsb
sbb
pmuludq
int3
adc
fwait
pushf
fildll
adc
cmp
inc
push
ret
dec
aas
lahf
push
lcall
mov
push
fwait
dec
pop
outsl
scas
es
ss
lock
pushf
xchg
loop
push
arpl
test
add
mov
fwait
mov
dec
push
inc
aas
and
mov
ret
insb
lahf
rcl
ret
lcall
loope
jne
mov
sub
daa
test
push
das
push
jmp
shlb
and
stos
ljmp
test
outsl
or
insl
ds
jns
jns
add
lahf
add
and
push
mov
jp
mov
pop
pop
push
pop
and
repnz
xor
jge
fdivp
xor
fcomps
sub
mov
call
js
aas
mov
inc
sub
dec
xchg
rorb
xor
adc
outsl
pop
add
jg
test
mov
enter
insb
inc
mov
mov
or
mov
mov
sarl
outsb
or
jae
mov
and
pushf
ret
add
mov
incl
clc
xor
aad
int
adc
lcall
mov
adc
test
pop
push
pop
dec
idiv
mov
push
xchg
in
out
leave
fistpll
inc
xor
pop
inc
push
push
out
fs
adc
js
or
jl
cmp
popa
incb
add
das
clc
dec
inc
pop
mov
sbb
pop
pop
mov
sbb
mov
pop
bound
push
mov
cli
pop
fcompl
adc
xor
sub
mov
fistpll
adc
inc
inc
or
pop
ljmp
xchg
fsubrl
and
lock
mov
fstps
enter
aaa
lahf
mov
outsb
inc
jo
xorb
cmp
arpl
sbb
cwtl
inc
pop
mov
mov
and
aad
scas
inc
mov
xchg
sbb
push
lds
fucom
inc
outsb
insb
loope
jne
sub
aas
fdivrs
adc
test
mov
and
aam
xchg
hlt
cmpsb
les
fistps
int3
pop
inc
gs
add
outsb
jnp
fsts
jg
mov
inc
fldl
pusha
push
pusha
and
mov
cli
clc
jno
push
pop
std
dec
mov
pusha
sub
std
cmp
test
dec
pop
xor
xchg
dec
dec
pop
aam
adc
xchg
xchg
and
and
movsb
push
aas
lods
jne
jnp
fndisi(8087
fbld
jle
mov
xor
lret
add
pushl
sbb
scas
ret
xchg
dec
push
cmp
pop
popa
scas
sbb
mov
and
mov
mov
mov
cltd
or
sub
jp
pop
mov
lret
int3
lret
adc
in
xchg
xor
inc
daa
sub
lcall
mov
dec
int
scas
cli
xorl
sti
and
xchg
test
xchg
cmp
push
push
pop
sub
sbb
push
aaa
mov
add
ljmp
add
je
mov
jmp
sbb
mov
or
or
inc
add
xchg
test
ja
ret
in
add
popf
add
lods
and
cmp
scas
jp
stc
push
xor
loope
pushf
cwtl
lcall
xor
clc
mov
pusha
popa
fsincos
jmp
mov
xor
sbb
je
cli
cmpsl
test
mov
outsl
inc
int
dec
lods
call
cmc
in
add
loope
push
sbb
inc
xor
arpl
lcall
sahf
loopne
sub
mov
testl
jo
xchg
xor
adc
testb
jnp
gs
outsb
mov
and
pop
or
sahf
inc
mov
fwait
pop
sub
xor
testb
adc
out
xchg
mov
in
sub
add
inc
jp
mov
adc
xorb
push
lock
pushf
out
adc
arpl
iret
jge
sbb
notl
push
test
fs
jle
aas
dec
xchg
add
adc
mov
dec
mov
ret
pop
subb
lret
fstpl
pop
sub
adc
scas
add
sub
jg
pop
jo
insl
pop
push
or
daa
xor
cmp
fsub
aad
xor
dec
mov
out
stc
xor
mov
pop
ret
mov
add
and
mov
xor
sub
leave
cmp
es
jnp
clc
inc
inc
xchg
dec
aas
fisubl
push
out
push
aas
popf
add
add
addb
fildll
jle
xchg
jns
push
imul
lahf
cmpl
inc
sub
lahf
dec
js
cmpb
enter
mov
mov
nop
addr16
inc
lea
inc
add
lea
stc
stos
fcom
aas
mov
mov
dec
sub
mov
iret
mov
xchg
fcompl
cmc
shrb
lcall
ja
or
fs
and
cmpsl
pop
aad
xor
stc
cld
jmp
cmp
pop
mov
add
add
fisttpl
shl
jno
ja
cltd
sbb
test
addr16
push
xor
cs
sbb
pop
mov
pusha
arpl
add
cs
jle
xchg
push
mov
fs
mov
sub
push
shll
mov
cltd
inc
and
fdivl
and
adc
aam
push
das
and
push
idiv
push
sub
or
mov
xchg
aaa
fcoms
icebp
sub
xor
sub
push
pushf
push
daa
mov
mov
xor
sub
sub
jo
inc
rcrl
fldt
insb
adc
insl
cmp
pop
cld
and
sbb
mov
fnstcw
add
and
add
dec
cmp
push
add
mov
gs
mov
add
jmp
cmpsl
jl
add
xchg
dec
ja
int
jnp
mov
jl
xor
mov
pop
nop
lods
inc
testb
clc
inc
jg
js
add
jbe
sub
imul
jp
adc
add
and
dec
xor
inc
mov
mov
and
add
scas
decl
jmp
and
es
or
or
adc
ds
xchg
jbe
xchg
push
icebp
push
mov
movsb
out
push
xchg
outsb
adc
jno
fldl2e
pop
add
rclb
pop
mov
or
lahf
mov
hlt
cwtl
add
loop
add
add
mov
push
add
pop
adc
push
bound
andl
xchg
in
jle
lds
out
xor
cmp
ss
test
mov
fdivs
xor
cmp
mov
clc
push
nop
mov
dec
xor
mov
mov
pusha
adcl
inc
push
bound
xor
push
jle
pop
inc
lret
pop
insb
lods
mov
push
add
iret
push
addr16
xor
fmull
adcb
add
mov
or
mov
pop
cmpsb
push
in
lcall
fs
mov
mov
xorb
jl
xor
cmp
jg
xchg
push
push
jge
lret
mov
rorb
mov
inc
loopne
pushl
adc
lcall
xor
jae
fnsetpm(287
dec
jno
jecxz
sbb
push
xor
jmp
subl
mov
dec
outsb
xor
mov
ffree
and
or
aad
mov
adc
dec
pop
pop
cld
and
stc
fsubl
xor
addr16
adc
mov
setne
js
pop
adc
push
loope
aaa
push
pop
add
jae
cmp
cltd
pop
mov
xchg
sub
adc
pusha
out
xchg
icebp
inc
arpl
nop
pop
mov
add
xchg
adc
add
imul
lock
sub
div
ds
lret
pop
jg
scas
adc
cmp
xchg
jo
inc
dec
out
cmpsl
mov
dec
ficoml
sbb
push
nop
in
pop
cmpsb
sub
cld
loopne
push
out
mov
loop
jnp
loopne
popa
mov
sub
rcl
xor
pop
xchg
push
or
jle
jl
mov
pusha
lods
les
scas
mov
push
add
mov
imul
aaa
or
lret
pop
inc
cli
dec
pop
cmp
ret
pause
or
pop
cmp
sbb
or
sar
and
ret
xchg
pushl
jmp
xchg
pushf
shlb
adc
mov
nop
cmovs
mov
stc
jns
xchg
push
push
xor
xor
or
inc
in
dec
jo
push
inc
fistl
jno
sbb
add
jae
mov
jnp
or
add
mov
dec
sti
pop
test
mov
cmc
cmp
and
or
sarl
jb
sub
wrmsr
xchg
xchg
push
xchg
cmp
xor
inc
or
pop
xor
andl
mov
sbb
das
call
cmpsb
add
rclb
es
loope
push
add
sub
pop
fsub
pop
pop
mov
mov
xchg
stc
and
mov
or
cmp
ds
add
notl
mov
stc
jne
mov
push
cmp
adc
mov
sbb
sub
push
das
inc
xchg
mov
icebp
push
xor
adc
jbe
pop
in
dec
sub
mov
inc
pop
adcb
or
dec
js
xchg
mov
shlb
add
mov
out
cmp
jmp
loopne
and
push
aam
std
sub
shl
xlat
not
inc
clc
imul
scas
mov
push
addb
inc
notl
mov
addb
pop
mov
fldt
shrl
roll
push
enter
sub
into
adc
sub
in
clc
inc
mov
scas
jnp
addb
or
dec
nop
pop
ret
adc
jg
lods
enter
inc
decl
mov
push
push
lods
jl
adc
shlb
push
mov
loop
sahf
ds
pushf
mov
aad
cmc
sub
cmpb
sbb
xchg
sub
push
in
xor
mov
lods
push
enter
pop
adc
inc
aam
out
sub
or
jg
cmp
insl
lds
pop
out
in
jecxz
or
push
pop
inc
sarb
out
pop
cmp
test
rcll
repnz
mov
fs
jno
stos
sub
lea
orb
loop
scas
out
in
test
clc
lock
xlat
jae
cwtl
mov
je
and
xor
add
lcall
xor
aad
popa
and
cld
scas
xor
xor
xchg
jnp
sub
push
sub
repz
inc
inc
add
push
mov
mov
ss
pop
rcll
jmp
fbstp
inc
std
enter
or
sub
sbb
dec
mov
or
lahf
cmp
lret
cmp
ror
cwtl
repnz
outsb
add
xor
push
pop
scas
fnstcw
and
jae
jo
push
int3
xor
lahf
mov
jbe
cltd
push
pop
xchg
shll
add
mov
pop
jbe
enter
xchg
and
dec
addr16
inc
popa
push
dec
rorb
aas
clc
inc
adc
mov
dec
mov
sbb
or
pop
mov
push
test
loop
adc
cli
lds
jl
sbbb
lret
fmuls
push
pop
xchg
pop
inc
daa
push
int
cmp
adc
iret
je
jge
xchg
mov
mov
mov
adc
orl
xchg
inc
loop
and
out
jne
cmpsb
call
mov
in
pop
push
sbb
xchg
loope
xor
push
mov
mov
push
xorl
dec
lret
clc
jmp
insb
adc
call
inc
xchg
test
mov
jle
mov
or
mov
mov
subb
insl
call
xchg
xchg
inc
push
aas
rcrb
adc
adc
mov
scas
add
pop
xor
mov
and
jmp
cmp
add
inc
push
outsb
icebp
jmp
jb
or
popf
push
adc
loop
mov
push
stos
rcll
cmpsl
into
jg
nop
rolb
jle
adc
sbb
lret
push
call
nop
pop
adc
lock
and
add
mov
mov
clc
imul
orl
stc
jge
and
mov
mov
movsb
pop
aas
stc
xorl
aad
push
inc
mov
or
xor
mov
mov
cli
clc
shlb
jg
arpl
mov
mov
dec
or
jle
cmc
mov
int3
adc
int
mov
ret
xchg
subb
aad
cmpsb
cmpsl
int3
or
mov
inc
out
stos
adc
mov
pop
jp
fstpl
sub
or
mov
loop
jb
out
cmp
mov
bound
or
in
aas
loop,pt
and
jg
imulb
std
incb
inc
lea
rcl
sub
mov
mov
jmp
movsb
repnz
into
or
outsb
leave
shrb
daa
mov
dec
xchg
mov
out
add
cmp
and
jp
cld
sar
in
inc
dec
inc
xor
sbb
decb
or
push
inc
aad
es
movsl
cmp
rclb
cmpb
aas
mov
lea
mov
jle
jmp
cld
stos
or
pusha
mov
xchg
pop
stos
xor
gs
ss
sub
add
sub
dec
repnz
loop
ja
aad
cmp
xbegin
repz
add
adc
fldt
lock
cmpsb
bound
pop
popa
out
mov
aad
test
shrb
jp
incb
mov
and
ror
pop
mov
mov
mov
orb
scas
mov
scas
jg
cwtl
add
pop
dec
in
jg
ja
aas
inc
mov
aad
clc
sbb
into
xor
and
xchg
mov
repnz
clc
dec
xchg
fldl
mov
andl
dec
lahf
adc
loop
jbe
inc
movsb
in
scas
sar
fwait
or
fidivrl
in
cmp
insb
cmp
adc
ds
adc
in
outsl
mulb
dec
cmpsb
ljmp
into
mov
lcall
test
mov
cwtl
lret
clc
mov
outsl
add
mov
lcall
pop
loopne
into
sbb
ret
inc
sbb
fbstp
shl
rcrl
or
adc
dec
pushl
pusha
outsb
movsl
and
mov
xchg
push
xchg
incl
xchg
mov
cmpsl
mov
insl
cld
inc
fdivs
setg
ret
push
push
cmp
adc
mov
inc
je
movsb
jnp
mov
pop
xor
pop
mov
mov
pop
call
mov
test
mov
adc
jg
ss
cmpsb
and
out
push
lock
push
cmpsl
xor
addr16
fbld
sbb
shrb
add
lock
in
andl
insl
loopne
pop
loopne
int3
incl
int3
mov
icebp
xor
bound
jmp
push
pop
jecxz
mov
or
fidivrs
stc
xchg
pushf
inc
xor
rorl
adc
repz
push
lods
sub
add
or
cmp
adc
xor
inc
sahf
xor
and
dec
lcall
addb
arpl
andl
xchg
mov
out
and
push
sub
dec
fildll
xor
xchg
sbb
jle
fisubrs
jne
movb
mov
jno
cld
mov
mov
and
mov
pushf
mov
sbbl
mov
xlat
xor
loope
loop
dec
and
test
pop
mov
loope
add
pop
hlt
sbb
pop
call
xchg
imul
push
inc
imul
ja
ss
lret
sahf
pop
in
inc
push
pop
jne
nop
in
ds
adc
hlt
decl
fsts
inc
push
imul
enter
sbbl
pop
lcall
mov
pop
and
fiaddl
rcrb
and
stos
jecxz
imul
mov
int3
jo
xchg
mov
dec
push
incl
cld
mov
sbb
push
pop
xor
pusha
mov
jb
push
aad
ljmp
and
cwtl
or
adc
xor
outsl
push
jno
cmp
cs
sbb
ret
sti
dec
out
cld
cltd
arpl
sub
mov
fdivrs
aad
jb
movsb
cmc
mov
stos
aas
iret
popf
clc
mov
cmpb
jo
lcall
push
jne
ss
fsubrl
add
pop
popf
jns
je
movsb
xchg
xor
push
mov
scas
mov
ss
adc
sarb
fisubs
push
pusha
in
ss
sar
adc
aas
mov
dec
mov
and
mov
and
jmp
lods
idivb
push
ljmp
add
loop
decl
sub
xchg
stos
mov
repnz
or
pop
into
and
xorb
into
xor
dec
pop
cmc
jnp
mov
rolb
xor
sub
jl
push
cmp
or
pop
or
pop
ret
pop
xor
bound
add
add
jbe
leave
sbbb
iret
lcall
out
or
mov
dec
hlt
popf
adc
daa
stc
jo
jno
or
jo
out
jle
or
clc
jp
push
mov
mov
incl
dec
ja
jmp
xchg
lcallw
lahf
or
test
add
cltd
add
cs
xchg
enter
insb
cli
sub
pop
cs
push
sbb
adc
std
push
mov
pop
rclb
push
mov
mov
std
repz
sarl
out
mov
jl
stc
pusha
std
jne
sbb
lods
jg
stos
cmp
roll
loopne
jo
or
adc
and
mov
fdivrs
push
mov
push
sub
cli
and
mov
lcall
mov
mov
mov
mov
mov
fcmovnbe
fstpt
pop
add
pop
sub
push
data16
ret
dec
mov
leave
cmp
test
addb
outsl
scas
cmpsb
mov
sahf
sarl
adc
es
xor
imul
das
daa
xlat
loope
mov
mov
mov
js
cmp
fsubs
xor
fstps
push
leave
popa
and
pop
or
fnstenv
aas
aad
fcoms
jg
clc
add
imul
pop
sub
loopne
test
lcall
xchg
clc
and
ret
mov
sub
gs
mov
lea
ret
mov
inc
popf
add
push
pop
adc
push
sbb
and
pop
ljmp
out
jmp
add
notb
movsl
orl
push
inc
inc
pop
stos
pop
les
inc
inc
cmpb
ds
mov
test
mov
dec
shl
sbb
sbb
ds
pop
mov
add
lret
add
add
ljmp
fsubrs
aaa
mov
mov
fistl
and
jg
jecxz
push
mov
mov
clc
xor
xchg
adc
inc
inc
outsl
jecxz
sub
and
xor
mov
xor
and
sub
xchg
sbb
jle
inc
addb
imul
outsb
out
les
cwtl
sbb
dec
cld
aaa
clc
mov
andl
sbb
sbb
jmp
loopne
ja
sub
loope
jno
xlat
push
push
mov
aam
cmpsb
sarb
andb
inc
mov
push
dec
ret
cmp
jmp
gs
popa
xchg
xor
push
adc
nop
lds
sub
dec
ljmp
hlt
pop
aad
ss
add
incb
xor
add
leave
loopne
lods
mov
lds
ror
mov
sub
push
mov
dec
pop
pushf
insb
hlt
fists
aas
fimull
out
add
int3
into
rcr
test
fisubl
in
bound
jno
push
jg
xchg
pusha
and
decl
stos
sub
add
test
bound
js
inc
neg
mov
ror
outsl
jle
cs
dec
dec
add
faddp
enter
cmp
xlat
insl
mov
push
or
sbb
pushf
jno
int3
and
fwait
fwait
pusha
ss
xor
out
or
ljmp
leave
xor
js
push
pop
xor
sub
push
xlat
pop
aaa
inc
fistl
push
aaa
inc
xor
fwait
mov
in
sbb
inc
mov
pushf
lahf
mov
fisubrs
in
inc
dec
mov
mov
mov
adc
pop
inc
out
jns
loopne
mov
faddl
hlt
call
call
add
icebp
xor
xorb
filds
mov
jg
push
call
ds
pop
pop
pop
sti
shlb
in
jns
ret
add
out
test
xor
mov
stos
stos
push
mov
adc
mov
fnstsw
sbb
test
sti
fcoms
cmc
out
adc
ds
adc
inc
movsb
adc
and
add
orl
mov
xchg
xchg
jmp
sub
loope
fldt
in
out
mov
inc
cmpsb
jnp
push
cs
adc
and
mov
or
js
test
mov
test
addb
xchg
sub
inc
fistl
rolb
push
dec
arpl
cs
mov
inc
test
js
jo
test
ret
xor
in
push
sti
ret
push
nop
push
aas
test
mov
xchg
and
inc
ds
shrl
ficoml
fwait
lret
dec
jecxz
dec
or
int3
loopne
pusha
push
adc
ljmp
and
xchg
hlt
push
mov
stos
pop
movsb
adc
into
je
jbe
hlt
dec
xchg
arpl
test
jecxz
jbe
push
cmp
shll
fdivl
pop
sbb
xchg
push
out
inc
jg
ja
clc
add
sub
pop
insl
push
icebp
mov
hlt
ret
dec
mov
push
cmpsb
and
invlpg
mov
mov
stos
xchg
push
inc
faddl
pop
xchg
adc
cmp
iret
outsb
adc
divl
stc
lahf
cmp
inc
in
daa
stos
push
push
push
cli
jnp
les
test
movsb
xchg
in
jp
sti
cmpsb
or
movsl
push
das
push
xchg
fwait
xor
bound
jl
adc
inc
into
shl
jmp
loopne
xchg
inc
fnstsw
testb
into
push
mov
jge
mov
in
push
add
incl
push
out
sarb
sbb
jecxz
dec
gs
into
cwtl
pusha
out
mov
inc
inc
pop
in
popa
or
mov
dec
mov
test
pop
mov
rolb
hlt
push
add
inc
out
nop
mov
in
inc
ret
xchg
xchg
ds
fiadds
cli
loope
popa
sbb
jecxz
xchg
push
aas
inc
cld
mov
cmp
popa
arpl
movhps
loope
stos
aaa
sbb
ds
add
mov
xor
cld
push
jle
pushf
mov
mov
jnp
and
test
imul
push
mov
mov
pop
inc
jno
inc
mov
cmpsl
test
sbb
and
adc
incb
movsl
cmc
jl
mov
cli
jno
adc
pop
fwait
jno
mov
aas
jno
pop
addb
inc
call
clc
movsl
cmpb
lcall
pop
and
jecxz
in
or
je
iret
mov
push
cld
andl
repz
je
shl
push
inc
pop
push
push
push
cmpb
aas
sbb
shll
clc
jg
inc
mov
push
mov
cmp
jb
or
mov
fbstp
fld
testb
inc
mov
or
das
loop
jg
pop
cmp
aas
and
mov
and
loopne
and
xchg
sbb
mov
dec
lock
inc
jmp
js
or
aaa
inc
nop
test
das
pop
add
sub
adc
testl
sbb
sti
jmp
js
mov
mov
addl
inc
stos
fcmove
inc
pop
jo
lods
es
or
jmp
dec
inc
jno
or
mov
cmc
cmp
nop
loopne
mov
jle
push
addl
ret
inc
lds
rorb
scas
sbbl
pop
aad
inc
and
fdivr
mov
test
jecxz
sbb
aam
subb
add
or
adc
pusha
mov
test
lahf
pop
sahf
ret
mov
js
push
pop
pop
lock
jge
cltd
bound
nop
mov
out
cmpl
loop
adc
xchg
inc
call
inc
fsub
test
jno
lods
dec
add
add
jle
sbb
mov
out
jle
and
adc
add
cmp
adc
arpl
loope
mov
leave
outsb
movsl
inc
das
mov
xor
or
add
pop
adc
mov
ret
and
cli
incl
jno
fs
push
mov
decl
jae
outsl
cli
cmpl
or
cmp
pushl
ds
mov
shll
mov
and
imul
movsl
pop
xlat
shrb
out
int
ljmp
aaa
push
and
mov
iret
adc
push
adcb
dec
push
pop
hlt
ljmp
divb
inc
shlb
fstl
aam
cwtl
lret
pusha
in
divb
cmp
push
loope
sub
hlt
dec
push
xor
mov
cmp
jbe
cmc
movsl
outsl
pushf
push
cs
bound
outsb
add
inc
cmc
call
rolb
decl
mov
in
rol
mov
popa
pop
icebp
xchg
ficompl
push
fsubp
addr16
pop
add
fnsave
cmp
mov
lock
popa
cmp
dec
pop
decl
pop
sub
mov
imul
incb
push
cld
int3
push
adc
shll
sbb
push
push
mov
daa
jae
mov
ja
inc
je
mov
in
fldcw
shrl
cmp
sarl
mov
jmp
lds
out
push
daa
sahf
sub
pop
loop
add
pop
and
rol
lods
fs
xlat
add
mov
in
dec
add
push
push
lcall
push
mov
jb
ds
push
pop
xchg
or
fs
cli
or
scas
gs
jae
jl
loopne
pop
ss
lods
sar
mov
xchg
sub
stos
xlat
in
insb
scas
out
stos
arpl
insb
jmp
mov
jnp
adc
fbld
pusha
call
xor
ret
negb
popf
repz
rclb
aaa
loopne
shl
add
adc
sbb
sub
dec
xor
add
jae
std
fisttps
mov
fs
inc
adc
aaa
or
add
push
mov
or
dec
sbb
out
aas
mov
dec
xchg
dec
adc
es
cwtl
sub
dec
pop
xchg
loope
popl
cmpb
pop
stos
mov
cld
dec
pop
add
aaa
mov
fdivrp
mov
or
test
cld
in
fiadds
cli
andb
adc
jl
jg
cwtl
mov
or
adc
jb
aas
ljmpw
and
outsl
sarb
xchg
mov
cmc
jge
xchg
insb
out
hlt
mov
mov
test
jb
pushf
cwtl
mov
stos
jne
bound
pushf
leave
decl
mov
popl
pushf
dec
add
pop
jne
pop
sbb
dec
mov
repz
test
push
ljmp
and
ja
imul
push
lahf
jne
push
xlat
pop
bound
mov
push
xchg
or
dec
ret
loope
pop
enter
mov
insb
cmp
sbb
lahf
test
pop
jge
xchg
cli
fwait
push
inc
in
pop
es
jp
adc
shlb
int
add
cmp
dec
outsl
inc
and
inc
in
std
and
or
aam
incl
stos
icebp
test
dec
and
je
inc
push
fisttpl
pop
lret
and
outsl
pop
jmp
pop
nop
ljmp
rolb
xchg
sbb
fstps
adc
mov
out
shlb
mov
pop
loopne
xorl
cmp
int
lea
mov
arpl
mov
or
mov
adc
xorb
in
add
mov
dec
xlat
cmp
stos
shlb
or
jo
bound
cmc
mov
mov
test
xorl
in
sub
push
decl
cld
popa
popa
out
jmp
inc
xor
insl
popf
mov
add
out
rclb
aas
or
or
aad
or
icebp
cs
pop
xchg
jg
jge
lods
cmp
xor
sbb
ja
idivb
add
and
movsb
xchg
fildll
sbb
xor
loop
movsb
sbb
clc
cltd
and
fistpl
pop
aas
dec
dec
mov
jnp
aam
push
decl
xchg
cmpsl
int
aas
lock
sbb
jl
jb
out
xchg
cltd
test
add
nop
sbb
inc
decl
mov
and
hlt
mov
incb
pusha
mov
xchg
xchg
in
mov
ss
dec
pop
lds
aaa
push
cmc
sub
or
insl
adc
mov
cwtl
mov
or
or
js
inc
popf
jmp
xor
adc
xchg
pop
lret
cld
jo
push
pop
xor
and
lds
popa
dec
xor
adc
scas
sub
and
and
popa
or
ja
mov
out
mov
add
pushf
jecxz
inc
test
push
dec
xorps
jle
or
sub
xchg
cmc
add
xchg
mov
cmpsb
decl
add
sbb
inc
pusha
adc
lock
mov
repnz
loopne
jmp
add
push
div
push
and
push
inc
jbe
js
int3
sbb
and
scas
cli
call
or
movsl
mov
mov
jle
test
jne
pop
push
das
lock
add
or
decl
stc
inc
cmp
insl
loopne
add
incb
jecxz
xchg
mov
push
jp
out
dec
mov
adc
lahf
inc
cmc
pop
cmc
int
stos
push
jl
lcall
or
mov
cmc
dec
push
shll
fwait
add
lods
decl
push
jmp
add
shrb
addl
cmp
loopne
dec
call
push
mov
insb
sub
fnstcw
mov
push
adc
fbstp
lahf
test
add
xchg
and
loope
sar
and
loope
cmc
sbb
mov
and
pop
and
imull
loope
std
xchg
xchg
push
push
inc
add
mov
fwait
cs
or
dec
or
fistpll
push
add
pop
adc
loopne
inc
mov
add
stos
rcrl
gs
mov
lods
fstpl
loopne
sub
fwait
and
mov
clc
jbe
add
inc
and
jne
push
daa
xchg
sbbb
movb
roll
or
xor
or
or
push
roll
popf
mov
daa
loopne
or
jae
sbb
out
call
add
loope
ds
bound
orl
popa
add
mov
push
xor
pop
add
pusha
xchg
hlt
fisubs
pop
roll
dec
xchg
fdivrl
imul
xchg
clc
movsb
in
mov
jo
inc
inc
sub
decb
jg
mov
inc
and
fsubl
loope
popa
mov
aad
clc
std
pop
push
jmp
xor
stc
lock
dec
push
rclb
jp
dec
cmp
repz
int3
es
mov
xor
mov
roll
inc
mov
sub
jmp
test
js
stos
add
push
mov
cmp
push
or
mov
add
test
shlb
fdivrp
and
shr
test
imul
out
sahf
test
jb
js
test
stos
push
mov
sub
test
dec
add
addr16
ss
add
dec
aaa
data16
mov
jns
pop
aas
inc
cmp
jmp
and
xchg
add
incl
jae
xor
push
cmp
add
stc
call
cld
sub
push
filds
adc
sarl
arpl
call
sbb
or
pop
cmp
add
and
sahf
int3
std
cmp
std
out
test
cld
lods
add
dec
inc
scas
mov
jb
add
gs
inc
pop
shrb
std
sti
cwtl
mov
push
andl
popa
dec
jl
push
call
rorb
loopne
popa
push
xor
push
or
add
call
sub
sbb
jmp
jno
insb
cmc
or
pop
mov
sbbb
pusha
xchg
and
mov
movsl
daa
stos
mov
cmp
sbb
ljmp
add
or
jb
mov
push
mov
push
mov
pop
jb
aam
sbb
shrl
fiadds
pop
stc
shll
inc
cmp
add
jno
mov
or
xor
add
lock
fwait
inc
add
mov
sbb
adc
lds
ljmp
xchg
or
adc
cmp
popa
bound
xor
jl
mov
inc
cmp
or
pusha
inc
inc
and
out
mov
sub
aaa
push
jno
movsl
xchg
jecxz
sbb
decl
add
fdivl
inc
add
pop
mov
andl
in
or
out
pop
inc
and
dec
dec
jo
dec
int
push
mov
mov
fdivs
pause
outsl
push
inc
cld
cli
cmp
decl
mov
lea
daa
pop
push
lock
imul
test
enter
out
add
push
mov
mov
or
clc
incl
mov
aaa
dec
decl
rolb
loopne
stos
cli
adc
sbbb
jg
xchg
fwait
loopne
aas
mov
cmp
loope
add
cld
lcall
hlt
push
and
notl
fiadds
inc
pop
das
sbb
mov
add
popa
daa
cld
or
mov
push
jp
or
in
mov
xlat
xorb
dec
inc
ret
xchg
js
dec
out
ja
ret
arpl
dec
inc
popa
loope
inc
and
push
and
mov
inc
pop
lock
popa
pop
rolb
dec
std
lods
es
jle
sbbl
fwait
aas
dec
test
test
push
data16
leave
clc
popf
lods
decb
pop
aaa
cltd
dec
pop
inc
push
lahf
insl
test
pop
fmull
cmpsb
aas
incb
sub
inc
push
fisubl
lret
dec
mov
test
ja
ljmp
jbe
sbb
je
cmc
cmpsb
push
das
imul
jg
push
mov
adc
add
lcall
into
scas
clc
mov
ljmp
std
pop
inc
jo
lcall
jecxz
push
or
mov
loop
incl
fsubrl
dec
mov
pop
or
mov
add
push
ffree
sbb
rol
inc
pop
loopne
xchg
mov
clc
xchg
test
pop
push
xchg
cmpsb
mov
mov
or
decl
cmp
xor
xlat
daa
hlt
rcrl
shlb
sbb
insb
xor
ja
adc
xor
adc
lds
and
lcall
fildl
js
xor
ds
dec
mov
sbb
stc
ljmp
and
jmp
icebp
in
mov
xchg
imul
push
dec
mov
cmp
adc
loopne
add
adc
mov
imull
fdivrs
test
mov
inc
sbb
ret
bound
mov
jae
cs
rcl
loopne
sbb
or
pop
cmp
mov
mov
mov
sbb
pusha
std
icebp
imul
lahf
cltd
mov
std
sub
and
jbe
sti
push
rolb
cmc
shrl
jecxz
xchg
lahf
andb
mov
lods
push
xchg
lods
jp
sarb
addl
loop
mov
lods
enter
add
mov
leave
clc
incl
pushf
pop
mov
add
lahf
stos
xor
js
pop
inc
adc
fldl
lcall
test
fldcw
aam
xchg
and
frstor
sbb
cmp
fisttps
or
inc
push
rolb
dec
push
gs
pop
push
cli
and
mov
mov
movsl
xor
push
daa
leave
push
cmpsl
call
ss
insl
mov
dec
adc
dec
leave
ljmp
mov
pop
sub
cld
mov
cmp
sbb
xchg
je
lcall
std
xchg
jne
inc
push
insb
lret
add
dec
sbb
xchg
insb
test
add
movl
fisubl
or
nop
xor
neg
add
stc
das
fwait
outsl
xor
cwtl
stos
jae
fwait
call
fsubrs
push
mov
add
mov
cmc
cmp
adc
cmp
popa
dec
mov
push
rcll
leave
cmp
push
out
gs
pop
not
mov
mov
outsl
fwait
push
and
and
add
aaa
ret
clc
dec
filds
faddp
add
repz
or
xor
scas
pop
cmpsb
sub
imul
mov
sbb
mov
int3
ficompl
mov
pop
or
mov
push
fdivs
inc
adc
cmpsb
push
js
dec
jle
das
loop
incl
pusha
cltd
or
mov
popa
jnp
jb
aaa
insb
xchg
xlat
cmp
out
xchg
inc
stos
adc
inc
aam
cmc
xchg
mov
add
inc
inc
mov
wrmsr
push
inc
test
nop
mov
sbb
ret
enter
push
xor
aam
repz
push
mov
testb
inc
cmp
mov
icebp
push
inc
mov
cld
aas
into
xchg
test
faddl
push
dec
ret
sbb
cmp
xor
test
cmpsb
aad
lds
cli
popw
pop
mov
aam
or
mov
es
xchg
les
lcall
imull
mov
mov
aas
sbb
imul
or
filds
add
ja
mov
std
out
sub
xchg
test
jne
dec
pop
cmpsb
rcrl
jnp
movsb
add
iret
cmp
push
mov
fidivrs
imul
add
out
and
hlt
and
test
aaa
cld
mov
adc
outsb
nop
xor
or
aad
sarl
add
xor
sub
nop
loope
ret
inc
push
ret
out
xor
jno,pn
test
clc
fwait
and
or
cmc
shlb
pop
sub
xchg
add
cs
loop
pop
cwtl
sbb
mov
pop
jmp
and
lcall
adc
in
jp
xor
cld
adc
aas
lcall
cmp
in
jg
addb
shll
int
add
jns
cmp
sbb
cwtl
mov
inc
ljmp
adc
repz
or
jg
pusha
aam
mov
shrb
test
pushl
cli
xlat
sbb
js
imul
aam
mov
push
insb
pop
ljmp
incb
fcomps
cwtl
sarb
add
cwtl
mov
mov
repnz
call
inc
xchg
lock
aam
push
and
and
mov
adc
mov
or
cmp
rorl
push
cld
push
add
aad
clc
jnp
test
sar
pop
orb
add
out
lcall
std
lret
lock
or
push
push
xor
and
adc
pop
ret
cmp
fwait
fs
in
call
adc
pusha
cmp
les
sbb
movsb
int3
push
pop
test
pushf
add
pop
or
mov
stc
inc
jl
fisttpl
pop
fwait
mov
mulb
sbb
cmp
loop
lock
js
jno
jno
or
test
mov
aam
or
inc
test
add
xchg
int
adc
jle
in
sub
lds
sahf
sub
inc
cmp
ljmp
lods
mov
shrb
xchg
inc
enter
xchg
cli
stos
add
adc
js
add
inc
xchg
lods
jns
mov
mov
loope
or
js
fidivrs
jno
dec
enter
mov
pop
cld
cmpsl
dec
jp
cs
enter
les
xor
add
or
movsb
cmp
iret
mov
leave
mov
mov
repnz
icebp
mov
jbe
dec
fwait
roll
lcall
aad
jno
mov
fucomi
sbb
sbb
xor
xor
sub
movb
enter
cmp
fidivs
jmp
jmp
sub
cmp
sub
and
sti
jo
add
decl
and
cmpsl
inc
sbb
push
jno
loopne
pusha
fs
inc
or
sbb
decl
mov
sub
adc
push
clc
mov
test
mov
mov
sub
mov
out
add
inc
loop
xor
pop
outsb
stos
loope
int3
movb
add
or
rcrl
dec
lock
enter
ljmp
pop
inc
shlb
addr16
aas
lea
jg
jo
decl
xchg
mov
cmp
sub
test
gs
sbb
jns
das
or
hlt
dec
jbe
nop
in
inc
addr16
sub
ds
cmc
incl
sub
mov
clc
fldcw
repz
adc
mov
add
outsl
mov
insb
jg
jns
pop
and
imul
add
jb
pop
orl
add
popf
ljmp
push
dec
sbb
fs
add
repnz
xlat
inc
push
ret
mov
stos
imul
shl
mov
adc
cmp
mov
pop
push
sti
dec
ljmp
cld
enter
jg
jns
adc
mov
sub
dec
adcb
loop
pushf
hlt
mov
lahf
fadds
in
dec
pop
mov
or
pop
clc
xchg
mov
mov
xchg
xor
outsl
fildl
push
cmp
in
push
jae
mov
or
loope
jbe
lcall
pop
sbb
fisttps
scas
mov
mov
and
push
sarb
mov
loopne,pt
loop
fcmovnbe
fistpll
push
sti
push
inc
add
and
fstpt
add
fidivrl
ret
xchg
mov
lahf
nop
jecxz
out
dec
dec
or
add
cwtl
movaps
ret
jnp
xor
xchg
inc
ds
add
xchg
sbb
jmp
jle
je
dec
mov
jnp
pusha
pop
xlat
or
stc
add
sub
mov
sbb
outsl
add
sahf
lret
icebp
dec
jg
out
push
xor
xor
mov
sbb
mov
inc
mov
sub
cmp
xor
ljmp
adc
xchg
pusha
mov
jle
fadds
xorb
inc
es
ror
sub
sub
insl
dec
enter
sti
push
sbb
sub
inc
push
pop
or
fildll
jo
sbb
push
mov
mov
adc
stc
push
sub
shlb
mov
jg
loop
push
jg
pop
popf
sti
scas
mov
or
dec
lret
cmpsl
inc
xchg
lods
add
call
mov
lods
test
cmp
push
jns
inc
inc
or
les
imul
scas
cld
mov
add
scas
pop
popf
or
insb
push
cmp
dec
cld
lret
sbb
mov
dec
inc
or
sti
inc
adc
js
decb
add
ljmp
call
test
add
pop
rcrb
ss
mov
imul
inc
cmp
fldenv
and
mov
cwtl
icebp
adc
and
cmpsb
dec
push
jns
idivb
leave
dec
inc
xchg
pop
mov
lahf
push
jns
dec
std
lcall
lret
sub
mov
sbb
js
pop
jl
mov
inc
sbb
mov
and
mov
cmp
in
rcrb
or
call
rclb
std
incl
jmp
dec
push
xor
inc
out
insl
push
ret
fidivrl
cmp
sub
ljmp
imul
nop
mov
test
fildl
les
nop
add
jle
stos
cltd
lea
test
and
rorl
push
add
jne
mov
loop
mov
sbb
pop
add
in
test
inc
jl
clc
and
sar
je
xchg
cld
inc
cmp
adc
xor
pop
js
cmp
test
push
mov
test
loopne
pop
data16
sub
inc
mov
and
cmc
sbb
push
xor
lock
dec
icebp
pop
loope
out
sub
mov
pushf
xor
xchg
cmpl
sbb
inc
out
mov
mov
jle
sahf
push
andb
jns
dec
popa
and
je
pop
addr16
ss
in
mov
aaa
in
dec
daa
lea
push
fst
loope
sub
cmp
lahf
imul
je
data16
mov
push
cmp
jmp
in
mov
shrb
rorb
xor
jp
aaa
add
fiadds
loopne
and
and
adc
and
test
or
movsl
cmp
out
mov
push
cli
mov
dec
ds
mov
xor
lea
push
cmp
jns
dec
lsl
jmp
push
mov
mov
leave
dec
and
push
cwtl
sbb
inc
sbb
daa
jb
and
xchg
xchg
add
sub
pop
xchg
jb
leave
mov
jbe
icebp
lock
ret
cmp
imul
cmp
xchg
in
dec
xor
cmc
mov
cld
imul
and
dec
rorb
lret
pop
jecxz
cmovbe
xor
jbe
and
jp
push
add
fwait
inc
xchg
mov
jg
and
xchg
add
psubsb
add
push
jmp
shll
aas
js
add
pop
push
mov
dec
xchg
cltd
dec
inc
add
add
cmpsl
inc
inc
sub
daa
cld
jne
xchg
cmp
and
insl
pop
xchg
xchg
or
test
enter
adc
inc
cwtl
insb
lret
stc
push
inc
add
aas
jbe
dec
inc
mov
dec
add
inc
lods
cmp
int
test
addl
and
in
push
test
cmp
push
test
adc
loopne
pushf
enter
push
jo
pop
cmp
mov
jecxz
xchg
in
lcall
fisubrs
mov
xchg
insb
rorl
or
dec
arpl
jnp
ret
adc
out
or
push
adc
jle
mov
push
int
andb
idiv
mov
xor
jecxz
mov
adc
mov
push
inc
paddusw
and
ja
push
std
add
leave
std
inc
push
xchg
aaa
arpl
int
add
and
ret
xchg
into
inc
dec
lcall
fistpll
dec
push
jb
mov
or
in
inc
adcl
movaps
xor
out
sub
out
push
fdivrs
loopne
hlt
and
pop
push
xor
pushf
pop
mov
jge
rcrb
addr16
inc
mov
iret
mov
xor
arpl
add
inc
bound
jno
push
idiv
js
movsb
imul
add
push
pop
push
lcall
adc
sbb
fsubr
test
jno
dec
into
pop
sbb
pop
pop
call
jmp
call
add
jg
ljmp
test
rol
lcall
nop
loopne
lock
nop
inc
cmp
cld
pop
cwtl
into
sub
push
in
push
imul
fwait
enter
out
or
out
jg
rcrl
add
xchg
cmp
jb
rcrb
dec
xchg
enter
mov
or
dec
in
nop
inc
mov
cmp
movsl
dec
test
fists
imul
push
or
jno
jmp
cmp
cld
loope
aad
sub
pop
insb
dec
ds
in
shrb
cmp
add
lods
in
add
mov
or
xor
and
rorb
mov
mov
jmp
loop
ret
push
out
mov
sub
sbb
mov
jp
add
inc
mov
mov
mov
mov
and
push
mov
jmp
sbb
pop
out
dec
fldl
andb
cwtl
mov
jne
push
cld
aas
into
out
lea
xchg
inc
cs
hlt
push
imul
test
in
or
add
imul
xor
sbb
aad
add
xchg
jle
cld
fildll
and
lret
aad
ja
mov
pop
bound
dec
loop
pand
cld
jge
xchg
fsubp
sub
mov
xor
mov
pop
sbb
pop
into
sbb
jbe
inc
lcall
and
jno
ficomps
or
cs
cmpl
mov
mov
pop
ret
xor
cmp
pop
add
or
jno
cld
add
and
push
inc
xchg
xchg
test
loope
jecxz
movsl
mov
in
jg
into
fdivr
decl
and
and
fstpl
mov
lahf
and
dec
bound
repz
stos
pop
ret
aas
stc
std
xor
add
out
es
cmp
pop
std
lds
jecxz
pop
pop
mov
js
sbb
sbb
jge
stos
enter
and
rcrl
mov
outsb
out
and
test
aam
aas
ret
andl
imul
dec
push
into
dec
fucomip
inc
out
adc
gs
xchg
outsl
btc
stos
add
inc
cmpsb
xchg
xor
fistpll
dec
pop
outsl
inc
jae
add
xlat
outsl
orb
mov
pop
loopne
lret
inc
mov
add
sbb
adc
out
iret
xorl
adc
cmpb
lahf
leave
mov
mov
cwtl
ret
rorw
ret
jg
cmp
cld
ja
adc
mov
and
push
ds
add
cmp
adc
jg
ljmp
sbb
or
xchg
dec
cmp
pop
mov
adc
movsl
ret
push
xchg
std
mov
mov
xlat
pop
mov
inc
mov
add
icebp
aam
jns
and
jmp
sub
dec
sbb
adc
shrb
adc
gs
test
lock
or
dec
cmp
mov
mov
push
cmp
adc
sub
mov
iret
imul
repnz
mov
inc
shll
je
xor
std
sub
add
sbb
inc
adc
rolb
or
sub
mov
xor
fildl
mov
and
add
and
clc
sbb
mov
jl
mov
jmp
inc
pop
cmp
xchg
mov
adc
adc
sbb
add
arpl
cld
cmp
iret
mov
jnp
aam
push
pusha
sbb
pop
inc
mov
loopne
inc
gs
push
jl
dec
icebp
scas
clc
add
ds
mov
sub
insl
mov
and
je
fiaddl
fwait
and
add
fiaddl
bound
jg
cmpsl
nop
jle
js
mov
iret
xorb
push
fdivl
cmpsl
cmp
cld
stos
es
xor
pusha
adc
insl
loop
push
dec
lods
mov
sbb
sbb
cld
cmc
test
or
lret
xchg
js
add
and
push
mov
popa
mov
and
bound
xor
fcomps
mov
ss
enter
pushf
aam
adc
add
ljmp
and
inc
nop
jns
cli
nop
jg
adc
xor
addb
scas
jno
test
stc
xchg
stc
mov
out
fbld
xchg
jbe
add
xchg
pop
push
cmp
test
sub
loope
addr16
mov
jno
mov
push
push
add
fstpl
push
cmpl
add
mov
push
pop
and
jg
ja
mov
mov
mov
out
adc
jbe
incb
fs
xchg
stos
cld
sbb
cmpsl
pop
stc
lock
xor
sub
sbb
std
outsl
lcall
sub
lahf
sbb
cmpsb
inc
mov
add
cld
adc
insb
pop
out
mov
pusha
or
inc
or
das
inc
test
adc
sub
fcmovb
mov
outsb
mov
pop
or
ffree
enter
and
cli
cmc
or
shll
push
adc
push
in
mov
pop
sbb
aam
adc
mov
leave
mov
cwtl
add
ror
shlb
dec
mov
jg
shll
adc
scas
and
pop
dec
pop
add
adc
dec
xor
xor
ljmp
jl
push
push
cmp
or
scas
popa
pushl
rolb
inc
adc
repz
icebp
test
or
cmpl
fucomi
adc
addb
flds
sysenter
add
push
push
clc
mov
js
inc
sub
push
pop
pop
imul
inc
loopne
scas
js
cs
fcmovb
pop
test
xor
je
mov
scas
mov
mov
lods
xchg
aad
aad
nop
mov
test
mov
jo
adc
imul
movsl
filds
mov
or
mov
jne
cmpsb
adc
xor
xchg
data16
mov
pushl
mov
or
sbb
pusha
xchg
cmp
js
mov
and
push
adc
sbb
cmc
xor
imul
sbb
mov
push
mov
fwait
incl
push
psubq
imul
addl
repnz
jbe
decl
pop
cld
dec
jmp
orl
add
or
aad
push
sar
cmp
iret
lcall
cmpsb
js
fdivrp
jg
inc
popf
shll
mov
sbb
insb
mov
cld
ja
jno
cmp
mov
sbb
fimuls
inc
jmp
bnd
pinsrw
cmp
and
cmp
mov
jno
dec
adc
jle
scas
pusha
mov
lahf
in
adc
inc
stos
cmp
jg
adc
insl
adc
and
lea
cli
in
and
jl
lods
outsl
addb
jg
push
add
mov
in
sbb
pop
dec
fdivs
pop
xor
inc
jmp
aaa
hlt
hlt
jecxz
add
pavgw
sub
jo
or
jecxz
ret
out
pmulhw
jmp
cmp
add
hlt
sbb
test
std
lock
push
xchg
insb
dec
fimull
mov
ds
sub
stos
mov
decl
pop
lods
lods
jbe
jmp
int
outsl
pushf
cmp
or
jnp
jo
add
loop
cld
mov
test
outsb
in
sub
cli
filds
xor
jle
jle
inc
enter
cld
stc
fdivs
scas
mov
sti
dec
xchg
xchg
pop
sbb
mov
dec
and
xor
pop
mov
repz
mov
pop
sub
out
sub
fistl
jle
nop
loop
pop
aam
pop
sbb
or
decl
jno
rcll
sets
inc
push
pop
adc
xchg
pop
mov
dec
rcll
push
push
xchg
fmull
sbb
push
repnz
xchg
inc
adc
add
xchg
and
ja
clc
add
dec
gs
push
or
mov
lahf
aas
and
fisubs
sti
scas
adc
aas
pushf
cwtl
inc
mov
aaa
push
and
fidivrs
sbb
into
pop
mulb
cmp
adc
sub
ret
fs
push
sbb
test
xchg
lea
fcmovbe
sub
mov
ljmp
mov
sub
test
lcall
popa
imul
cmc
jg
in
je
sbbb
cmpsb
add
push
jnp
push
lea
xchg
and
lahf
popa
in
sub
pop
fiaddl
scas
jne
test
test
mov
xchg
cmpsl
loop
pop
outsl
mov
andb
outsb
pop
movsl
or
call
ja
std
outsb
ds
popa
adc
aam
mov
stos
or
xor
push
mov
pop
xor
adc
adc
xor
pop
jp
les
iret
loope
lret
mov
inc
aad
jns
xor
pop
pop
inc
or
adc
cmc
sbb
loopne
jg
lret
arpl
mov
movsl
das
inc
adc
popa
test
addb
sbb
incl
xor
int
les
pop
push
adc
push
push
addr16
mov
pop
jne
pop
add
mov
clc
inc
imul
test
loopne
mov
stc
ljmp
xor
inc
xchg
cwtl
jmp
jne
add
call
add
pushf
cmp
mov
push
jge
push
fs
in
ret
je
mov
mov
test
loope
cmp
adc
mov
push
dec
add
xchg
xor
add
pop
and
adc
dec
cmp
jno
mov
ret
and
clc
jmp
xchg
jo
xor
mov
pop
stos
pop
or
mov
cmp
mov
lock
mov
xchg
int3
test
or
aaa
jnp
repnz
loop
xor
sar
je
lds
out
xor
jl
push
bound
in
enter
shll
scas
and
xlat
add
and
lcall
jb
jns
insb
vunpcklps
push
mov
pop
shrl
adc
imul
mov
shlb
outsl
rcrl
dec
push
push
jmp
movsb
jmp
es
mov
jg
add
jno
mov
xchg
xchg
mov
jg
mov
inc
mov
mov
test
test
loopne
sub
in
mov
emms
ds
loopne
cwtl
aam
icebp
enter
jg
loopne
pop
test
and
xchg
addr16
add
jecxz
pop
mov
or
inc
mov
jbe
push
add
jns
pop
mov
cli
sbb
call
xor
adc
loope
dec
insl
xorl
mov
xor
leave
ja
xchg
jae
fadds
into
fiadds
mov
outsl
add
mov
sub
adc
jnp
test
push
je
adc
fistps
adc
repnz
xor
cmpsl
mov
ret
mov
push
cmp
lret
sub
and
loopne
arpl
inc
inc
jg
sub
gs
or
or
stos
ljmp
addr16
or
mov
sbb
mov
popf
ret
mov
jmp
lcall
pusha
jns
lahf
add
add
jg
add
cmpsb
push
sbb
dec
in
inc
inc
jge
xor
or
insb
shlb
cwtl
push
mov
add
jg
out
sub
add
hlt
les
lret
pop
xchg
insl
mov
inc
xchg
subb
ss
fbstp
or
xchg
jle
sbb
lret
je
fwait
lea
mov
jae
hlt
xchg
and
std
ficomps
loop
mov
mov
or
and
xchg
imul
jbe
sub
or
cmp
cmp
mov
push
cmc
push
pop
cld
fldenv
jb
jg
xlat
jp
fistpl
in
add
ja
shl
add
sbb
fcomip
cmp
in
test
pop
jmp
cli
loopne
cltd
sub
ds
outsl
or
jge
std
jbe
xor
in
jnp
daa
daa
pop
clc
sbb
jmp
push
icebp
pop
and
aas
pushf
inc
pop
sub
lock
fstl
pop
mov
test
loope
inc
inc
add
shl
pusha
ljmp
inc
outsl
hlt
outsb
inc
rcrl
sub
stos
xor
int3
outsl
cld
ljmp
jns
arpl
pop
cwtl
mov
inc
adc
mov
cmp
dec
cmp
or
or
push
fidivrl
popl
mov
inc
lock
cli
ljmp
das
add
enter
pop
pop
repnz
sub
in
das
aas
xchg
movsl
dec
aam
push
lahf
xchg
add
lds
or
lcall
in
insl
aas
pop
je
sub
adc
inc
pop
cmp
fsts
push
add
call
xchg
popf
leave
gs
ljmp
test
jns
adcl
subl
mov
and
js
mov
mov
cltd
mov
cmp
gs
pop
pop
cmova
ljmp
add
adcb
out
push
clc
lret
pop
sbb
aas
push
call
and
inc
sbb
pop
cmp
adc
aad
add
pop
dec
ret
icebp
push
fadds
sbb
stc
add
mov
inc
cmp
imul
ss
adc
cmp
orl
pop
in
mov
adc
push
inc
and
mov
rcrb
fistpll
andl
ljmp
jmp
insl
and
je
cli
ljmp
dec
lods
pop
cmove
dec
inc
movsl
add
push
out
movsl
jmp
inc
ret
push
jno
pusha
add
je
int3
mov
adc
das
inc
sub
jg
test
pushf
dec
stos
loopne
js
and
iret
decl
lods
clc
sub
mov
xor
jg
rclb
sbb
inc
inc
or
test
mov
mov
call
or
xchg
xchg
sbb
xor
mov
inc
mov
je
xorb
std
jg
nop
mov
sub
jp
xor
je
jle
push
ret
lock
sbb
or
and
pop
shlb
clc
shrb
jne
mov
ss
shrb
stos
in
dec
aas
aas
jnp
es
adcb
in
stos
add
ja
nop
dec
add
mov
dec
loope
popf
js
sahf
pop
mov
rcr
xor
sbb
push
inc
xor
sub
rclb
aaa
or
jno
jmp
push
sub
adc
xor
aas
mov
bnd
dec
insl
or
aam
dec
mov
push
cmp
inc
lock
fbstp
inc
popl
push
mov
pop
push
ljmp
cld
cmp
inc
jmp
fidivl
test
inc
mov
xor
jg
cmp
rol
imulb
adc
sbb
movb
pop
sbb
mov
pop
clc
into
add
inc
push
mov
movsb
jmp
xlat
hlt
push
and
aas
xchg
in
fs
rcrl
and
fimull
incl
jge
push
push
jg
rcrl
dec
sub
cld
or
loope
inc
add
or
lods
lcall
add
sahf
mov
jne
sub
push
popf
jg
mov
incl
fcomps
or
mov
mov
hlt
or
test
dec
cmp
xchg
sbb
push
push
loopne
imul
in
outsb
sti
pop
loope
nop
xorl
mov
xchg
jbe
lds
ds
data16
mov
mul
int
add
ja
mov
inc
frstor
cmc
enter
std
add
mov
jmp
or
inc
in
sub
add
add
dec
addl
pushf
and
xor
cld
bound
jns
sbb
adc
arpl
sbb
or
jbe
insl
test
fs
les
or
cmp
add
loopne
fwait
mov
out
pop
mov
xchg
mov
pop
jg
pop
cmpsl
scas
imul
mov
lock
xchg
popf
seto
jg
jno
mov
sbb
push
orb
dec
dec
inc
test
test
xor
lret
xor
lcall
lock
or
movsl
es
xchg
push
pop
sub
and
frndint
out
jp
loopne
rol
adc
mov
es
pushl
lcall
or
out
rcl
ljmp
jo
popf
add
push
mov
xchg
mov
dec
inc
aaa
add
add
sbb
cmpsb
mov
push
loopne
mov
sub
das
outsl
ret
icebp
push
mov
jg
jno
add
adc
lods
add
aad
jmp
gs
pop
dec
jne
loope
jle
test
xchg
test
cmp
std
incl
cmpb
push
and
add
sub
pushl
sbb
sbb
fadds
pop
fld
dec
sbb
faddl
mov
pushl
shr
aad
pop
add
popf
lods
jecxz
sbb
pop
clc
in
lcall
mov
mov
and
lret
loop
icebp
insb
inc
pop
xchg
jae
adcl
js
inc
js
jnp
mov
icebp
test
std
mov
jg
add
jne
add
aas
push
fiadds
sti
out
mov
xchg
roll
jbe
sbb
mov
adc
mov
cmp
stos
mov
cld
das
add
xor
xchg
mov
mov
add
mov
cmpsb
add
mov
xchg
aam
aas
xchg
xchg
mov
mov
mov
cltd
jns
lcall
and
gs
pop
insb
jns,pn
sub
fcomps
fucom
out
iret
ret
xor
add
icebp
pop
out
pop
outsb
push
adc
mov
push
daa
loope
cmp
adc
push
dec
subb
add
addb
and
push
clc
and
int3
decb
cmc
sahf
stos
cld
call
rolb
sbb
pop
pop
test
nop
push
decb
jbe
or
and
andb
xor
addl
addb
in
and
icebp
add
orb
stos
fcompl
mov
xchg
repz
jmp
mov
test
nop
aad
inc
repnz
or
sub
loop
mov
jne
mov
dec
in
sbb
and
pop
xor
add
sbb
xchg
out
mov
or
add
aas
ret
lea
insl
inc
adc
cmp
stos
add
enter
jmp
cwtl
add
jbe
or
int3
add
adc
pop
and
in
fcoms
test
inc
and
xor
cwtl
pop
js
imul
and
xor
jp
aas
call
sub
movsl
xchg
aas
jae
and
stc
mov
shrl
xchg
mov
xchg
jle
pop
scas
pop
aas
sbbb
lea
lock
test
mov
test
or
scas
mov
in
aad
jbe
xchg
push
push
stos
or
repz
inc
subb
cmc
mov
cmpsl
rcll
aaa
push
or
add
adc
add
inc
jg
icebp
cmp
es
imul
pusha
jnp
jl
adc
ret
repz
jl
pop
dec
dec
and
out
xor
daa
ret
lcall
cs
push
in
inc
push
inc
jns
pop
jns
adc
mov
jecxz
or
js
aas
pop
cmpl
mov
mov
scas
xor
xchg
jl
inc
add
or
push
ret
clc
leave
inc
enter
outsl
mov
add
popa
stos
sahf
mov
and
cs
mov
adc
pop
pop
cmpsl
in
call
ja
andb
dec
test
aad
arpl
sub
inc
xchg
mov
pop
jmp
addr16
inc
jne
pusha
sbbl
in
adc
scas
popf
dec
pop
sbb
pop
jmp
xchg
sbb
mov
inc
or
add
mov
lcall
mov
fsubs
rcl
test
fildl
mov
enter
xchg
test
clc
fstpt
mov
sbb
add
int
cmp
or
cwtl
incb
add
shll
insl
insb
fiadds
xchg
mov
loop
fucomi
out
les
testb
pop
xchg
mov
andl
das
fadds
cld
aas
mov
mov
pusha
mov
add
xchg
push
js
push
into
int3
cs
loopne
sub
test
jno
hlt
push
or
int
rolb
je
js
popf
sbb
cld
shr
les
daa
push
push
movsb
pushw
jbe
xchg
adc
mov
jmp
xor
jnp
lret
xchg
jecxz
inc
fbstp
leave
lods
add
xchg
out
mov
xor
pop
jns
sub
and
inc
int
loopne
std
pop
hlt
addr16
push
push
fisttpll
cmc
sbb
insl
mov
arpl
ret
cmp
jg
idivb
jno
in
mov
cmp
cmpsb
nop
aad
mov
lods
fmull
stos
ja
add
scas
loopne,pn
insl
add
pop
push
js
pop
xchg
sti
insb
jne
jmp
outsb
aad
push
or
xchg
popa
or
cmpsl
or
jo
inc
jno
jg
addr16
repnz
mov
inc
xor
jmp
scas
lret
mov
dec
inc
jg
sbb
pop
lahf
cld
mov
cmp
xchg
inc
or
xchg
lock
in
addr16
fs
and
mov
loopne
mov
aaa
addr16
test
mov
add
mov
adc
mov
and
jle,pn
cmp
sub
lods
xchg
addr16
pop
xchg
cltd
sbb
imull
int3
sbb
push
cmp
loope
add
mov
jg
loop
pop
pop
add
cld
es
pop
stos
popf
and
cli
in
jmp
fdivp
and
add
sbbb
push
add
icebp
xchg
sbb
push
aas
jg
mov
popa
push
push
mov
cmp
and
push
imul
hlt
je
cmp
add
pop
xchg
pop
test
cmp
and
in
outsl
lods
loop,pn
cmp
fists
ret
or
or
fbld
fcomps
aad
shll
sbb
mov
lock
add
cmpsl
jno,pt
clc
add
or
imul
jbe
xor
cmp
int
inc
sub
mov
inc
jecxz
jno
or
push
or
out
push
popa
inc
ss
dec
cltd
pop
bound
dec
pop
adc
inc
sub
add
inc
in
mov
lret
xor
add
inc
ficomps
add
iret
aam
add
mov
aaa
xchg
inc
cli
aas
lahf
insb
call
shlb
mov
adc
loope
popa
outsl
cmpsb
das
dec
push
pop
sbb
mov
nop
or
and
ficoms
rorl
adc
or
adc
or
or
or
pop
arpl
rcrl
leave
lods
lods
test
out
fs
mov
sbb
mov
sub
add
cmpsb
inc
test
xchg
sbb
mov
aas
jg
fldl
andl
mov
jl
sarb
or
arpl
and
stos
xchg
addr16
cmp
sbb
or
js
outsb
jns
jle
addr16
mov
sub
fst
sbb
mov
inc
add
bound
xor
mov
dec
test
nop
pop
cli
inc
pop
in
rolb
inc
xlat
cmp
scas
fucomp
push
or
dec
incl
inc
cli
mov
cs
mov
imul
push
mov
clc
pop
ret
arpl
pop
mov
test
push
cs
inc
cmp
adc
imul
dec
mov
fsubrs
jle
test
out
in
aas
push
push
push
pop
gs
test
adc
cwtl
pop
stos
add
push
addr16
lods
sbb
cmp
jl
sbb
lock
adc
or
loope
add
add
mov
aad
mov
ljmp
mov
das
push
sbb
nop
sub
das
dec
fwait
neg
cmp
jae
xlat
lret
cmpsb
mov
stos
ret
xlat
das
mov
out
and
or
movsb
adc
sub
fs
cmpb
push
xchg
cmp
mov
xor
insb
xchg
pop
pusha
repz
adcl
movsl
add
cwtl
inc
je
xchg
mov
loopne
push
jge
out
sub
cmp
in
lock
inc
or
dec
jo
bound
cld
out
fisubrl
nop
xor
ds
sub
nop
mov
add
add
push
sub
dec
and
mov
ja
mov
repz
lds
xor
push
pushl
js
and
stos
inc
mov
mov
sbbl
xchg
jno
and
filds
ljmp
dec
push
data16
aaa
ss
sbb
repz
and
pop
ja
pop
dec
xor
insb
push
loope
add
sub
inc
bound
mov
mov
or
lcall
lds
sub
fsubrs
sbb
xorb
or
cmpl
push
mov
sbb
stc
sqrtps
add
popa
jp
push
loopne
push
and
adcb
pop
out
mov
xor
divb
stos
sub
or
icebp
adcl
test
push
cmpl
fwait
xchg
loopne
mov
icebp
sbb
sar
clts
or
int3
inc
inc
stos
adc
outsl
and
sub
jle
cmp
mov
dec
fsubl
mov
or
loope
mov
push
das
push
lock
clc
popa
aas
imul
lds
pop
xor
xchg
mov
push
add
mov
inc
push
lahf
faddl
ss
shll
fwait
mov
in
push
enter
rclb
or
xor
xchg
push
push
test
jnp
push
mov
inc
xor
rcr
mov
mov
or
mov
out
or
add
jecxz
cmpxchg
sbb
cwtl
adc
inc
sbb
cmp
mov
loopne
stc
mov
mov
mov
sub
cmp
fiaddl
cmp
pop
add
add
test
jb
je
mull
jae
clc
mov
pop
lret
test
scas
pushf
and
adcl
push
mov
inc
enter
imul
test
lea
pushf
stos
or
xchg
push
fcoml
inc
clc
and
bnd
pop
mov
pop
pop
push
push
mov
dec
jno
les
jo
fcomps
add
loopne
sub
mov
xchg
cmp
mov
inc
cmp
mov
les
outsl
sbb
adc
in
pop
pop
filds
lcall
mov
push
mov
out
rolb
cmp
adc
jo
pop
and
inc
cld
mov
add
lods
in
lret
cmp
gs
adc
pop
inc
pop
jge
les
pop
adcb
mov
les
inc
push
jmp
outsb
mov
pop
mov
sub
mov
add
mov
mov
in
int
dec
daa
test
ret
nop
out
addb
mov
jns
outsb
pop
add
aam
pop
lret
sbb
and
or
aam
add
dec
mov
xor
ret
pop
sub
inc
adc
stc
cmp
je
gs
rorl
add
mov
inc
shl
ja
sti
fwait
xchg
in
xor
andl
test
enter
push
fdiv
and
ret
std
das
push
loop
or
xchg
ret
jecxz
add
jbe
and
jl
cmp
dec
dec
push
xor
in
dec
test
add
rclb
or
xor
sub
test
cmp
mov
jmp
pop
mov
or
enter
mov
js
push
test
pop
je
and
ret
das
push
or
call
movsb
testb
cld
movsb
outsl
aam
jl
fs
dec
loope
call
andl
and
push
add
pusha
imul
sub
mov
sarl
ret
into
insb
push
and
jns
lcall
fisubrl
sbb
out
fwait
bound
rol
sub
add
cmpsb
push
addl
or
adc
push
inc
push
inc
or
inc
or
pop
inc
jno
adc
or
movsl
xor
push
mov
jbe
sbb
mov
inc
jl
aad
lods
xchg
pop
fs
sub
test
mov
push
enter
addb
cmp
add
cmp
stos
inc
mov
push
ljmp
dec
dec
and
nop
fs
xor
fdivp
movsb
mov
xchg
add
add
xchg
xchg
mov
xchg
jecxz
add
xchg
push
scas
daa
jl
add
rorb
pop
dec
stos
cli
std
ljmp
inc
push
clc
pop
cmpsl
add
xchg
xorl
cltd
push
pushf
scas
loope
adc
arpl
sub
cmc
lds
ds
mov
outsl
adc
movsl
nop
inc
jns
push
lods
insb
test
jg
cltd
cmp
and
fsts
xor
xor
sbb
push
cli
inc
int3
and
aaa
mov
or
inc
xchg
fwait
inc
mov
fiaddl
shlb
test
pop
loop
mov
jmp
cld
sbb
xor
inc
popa
ss
leave
test
js
adc
and
mov
stc
int
add
adc
or
dec
push
movsl
add
fsubl
pop
loopne
mov
cmpsl
and
incb
pop
pop
push
ficomps
sub
lret
int
xlat
js
or
mov
jl
add
xorl
mov
mov
jae
inc
jge
subb
outsl
inc
mov
xorb
and
push
sahf
cwtl
lods
faddl
fucomip
lock
in
xor
or
cmp
add
insb
loopne
jecxz
ret
mov
xor
jnp
fistpl
jb
pusha
arpl
xchg
mov
mov
loope
xchg
pusha
cwtl
mov
inc
jb
mov
outsb
or
testb
mov
or
and
jge
adc
mov
adc
pop
pusha
jno
test
outsl
lock
test
les
decl
daa
cmp
ret
ret
and
aad
mov
jmp
cwtl
dec
daa
push
mov
mov
sbb
and
aaa
and
outsl
cmc
add
fsubp
cs
push
test
adc
mov
popf
jno
mov
mov
sub
popf
add
adc
cltd
stos
cmp
lock
loop
cmp
pushf
xrelease
rclb
jge
xchg
add
jg
sub
add
js
push
outsl
mov
xor
out
jl
inc
int3
inc
loop
cmpsb
jo
adcl
dec
inc
mov
sub
add
adc
inc
pushf
cmp
jg
or
mov
xchg
and
dec
jecxz
scas
jae
nop
test
xor
pusha
inc
sahf
push
mov
jg
addb
inc
fsts
mov
stc
or
jo
xchg
xchg
fists
loop
ret
adc
sbbl
mov
shlb
mulb
adc
xchg
ror
fimuls
pop
sbb
mov
xchg
ljmp
xchg
pop
arpl
mov
imul
mov
hlt
add
out
mov
mov
ss
es
pusha
mov
add
ljmp
icebp
test
mov
mov
js
xor
pop
lods
lahf
sbb
rclb
mov
inc
adc
adc
xor
rorl
lret
add
add
pop
xor
aas
rcl
cltd
push
mov
insb
fdiv
aas
test
mov
or
inc
push
mov
and
int3
fcmovb
push
inc
iret
faddl
and
outsb
call
lahf
push
lods
add
push
inc
add
xlat
mov
sub
and
out
and
ds
push
mov
add
push
outsl
testl
fstpl
inc
incb
les
out
inc
jae
pop
xchg
and
cmp
dec
pop
add
stc
xlat
push
stos
movsl
ret
scas
dec
jge
inc
or
cltd
xchg
inc
mov
enter
roll
pop
mov
and
mov
gs
out
enter
pop
and
mov
push
cmovp
and
dec
orb
cmp
push
pop
sub
and
adc
pop
fldl
jle
cmp
outsl
push
dec
fcomps
lret
dec
mov
pop
in
sarl
cmpsl
sub
leave
mov
inc
ss
ret
xor
test
push
mov
sub
sbb
jg
pop
adc
dec
or
mov
and
add
and
sub
and
repz
lcall
sbb
add
es
call
xchg
aam
fwait
sarl
and
cs
and
dec
lock
cld
and
push
je
push
imul
popa
mov
repnz
and
aam
add
sbb
nop
rol
imul
dec
or
inc
cmc
sar
mov
cmpsb
mov
dec
orl
xchg
and
lock
cld
xchg
or
je
pop
xchg
dec
mov
mov
pop
loop
xor
sbb
aas
pop
pop
xor
inc
or
adc
push
daa
add
add
jae
repnz
ds
mov
movsl
add
iret
clc
adc
add
in
inc
jmp
push
fidivs
adc
push
or
xchg
lock
dec
inc
iret
in
daa
dec
aas
ret
cltd
inc
mov
or
pushl
mov
pusha
cmp
popa
jp
jg
sbb
inc
xchg
adc
outsl
inc
add
push
jl
and
dec
sbb
enter
pop
cltd
inc
add
jl
cmp
xor
xor
inc
stc
cmc
inc
loopne
pop
add
mov
pushf
loope
or
mov
add
inc
inc
xchg
dec
in
pop
jp
jmp
nop
push
leave
test
dec
js
call
sub
cmp
mov
lods
add
leave
lret
fcoms
adc
and
mov
and
mov
adc
inc
inc
add
cld
cmpsl
daa
xchg
fistpll
dec
cli
imul
push
je
enter
sbb
scas
sub
jo
push
mov
popa
push
inc
pop
shll
nop
pop
call
in
incl
inc
nop
or
jb
jp
adc
pop
push
cmp
xchg
pushf
adc
inc
jo
pop
xchg
aas
rcr
mov
daa
xor
daa
cmp
je
jno
loope
sub
mov
cld
xchg
orb
mov
jae
jmp
aam
ja
sbb
inc
cli
fnsave
jae
push
sarl
add
push
mov
or
das
jg
add
sub
loopne
dec
mov
pop
push
or
adc
sbb
ret
loop
cld
and
outsb
and
mov
adc
add
hlt
mov
mov
rcrb
push
ds
jmp
dec
mov
shrb
xor
enter
pop
pop
lcall
dec
mov
icebp
mov
test
js
sbb
pop
mov
stc
inc
lret
scas
test
mov
fidivl
lds
mov
inc
add
push
daa
mov
out
xchg
or
mov
in
fs
inc
in
inc
add
or
pusha
pop
sti
fidivrl
pusha
fbld
xor
xchg
mov
jb
push
push
add
in
push
mov
mov
inc
test
add
test
xor
insb
aas
shlb
pop
repnz
pop
in
icebp
sbbb
je
mov
cmp
fistl
xchg
or
int3
or
cmpb
or
cld
inc
pusha
fsub
dec
das
cld
mov
jp
mov
ss
sub
ret
inc
cmp
addb
adc
test
sahf
mov
xchg
xor
cmp
inc
popf
arpl
xchg
fiadds
clc
in
lods
push
inc
out
mov
mov
sub
cmpl
and
cmp
inc
jl
lods
sbb
and
mov
inc
pop
clc
pusha
jno
int
repnz
rol
repnz
add
ljmp
pushf
aas
ret
pop
mov
jle
clc
jo
sbb
xchg
popf
rcr
gs
xchg
rcll
rcll
leave
aas
lcall
jecxz
insl
dec
inc
push
adc
dec
dec
js
inc
dec
les
push
cld
mov
andb
sub
je
inc
repnz
adc
jmp
loope
mov
cmp
mull
jne
addb
hlt
dec
xor
lcall
sbb
inc
lea
mov
add
mov
jnp
cmp
push
sub
ret
inc
mov
sub
outsb
sbb
jbe
testl
icebp
jno
aaa
ja
sbb
dec
int
push
mov
add
shll
cmp
cmc
or
jge
and
or
jl
adc
mov
jmp
dec
and
cmovbe
add
mov
mov
push
iret
push
insl
jmp
lret
jl
pop
mov
inc
xchg
in
popa
lss
push
add
cmp
jmp
add
mov
mov
nop
stc
inc
inc
subps
sbb
loopne
pop
mov
push
daa
stc
xchg
adc
mov
sub
loopne
or
aaa
out
dec
loopne
pop
dec
imul
and
xor
push
pusha
jno
or
mov
cmc
ret
lahf
movsb
dec
je
fildll
ja
inc
addb
fisttps
adc
mov
push
pop
cmp
loopne
pop
rorb
add
incl
mov
sub
stos
push
ds
xchg
aaa
and
jle
stc
imul
mov
pop
or
or
bound
bound
les
push
add
cmp
ret
loop
push
aad
add
mov
jle
cmp
loopne
cmc
and
or
jmp
aas
lahf
testb
adcb
pop
sbb
xchg
push
test
or
sub
jae
sbb
adc
push
mov
or
lock
repnz
pop
sbb
sbb
add
push
pop
pop
shl
nop
stos
jno
test
aad
pop
inc
cli
push
push
add
cmp
jo
mov
sahf
xchg
out
nop
add
push
sbb
sti
push
ret
jg
pop
mov
sti
push
loopne
add
pop
push
sbb
sbb
xor
inc
mov
enter
cmp
cltd
sub
rcrb
fwait
sub
mov
sbb
mov
rcll
mov
mov
mov
loope
fiadds
cmp
pop
cwtl
push
and
je
data16
out
adc
outsl
add
std
xlat
nop
dec
xchg
jnp
inc
mov
mov
lds
fwait
arpl
rcrl
and
jne
sub
pop
add
and
clc
into
pcmpgtb
ds
and
or
xor
and
insb
mov
leave
popf
adc
ret
cld
aad
out
jle
ja
stc
das
imul
aad
mov
test
pop
dec
push
xor
inc
adc
sub
loop
dec
inc
jnp
sub
sbb
push
jle
mov
inc
xor
inc
push
inc
jl
jge
test
add
inc
push
mov
lahf
pop
repz
jg
sbb
icebp
ret
add
cmpl
mov
inc
dec
jbe
jb
inc
movsb
and
mov
mov
sbb
mov
push
dec
or
jge
xor
lret
leave
cli
imul
mov
insb
in
or
jmp
cmc
sub
mov
subl
jp
mov
fwait
cmp
lock
adcl
push
les
adc
fcmovne
jecxz
rorb
movsb
adc
clc
daa
or
add
loopne
aad
xor
std
sbb
aas
push
loopne
xchg
add
insb
pop
jle
jp
inc
ja
adc
sbb
mov
loopne
aas
js
jbe
xor
sub
mov
clc
inc
pop
dec
addr16
cli
push
cmpsl
sbb
and
shl
and
fildll
add
loope
fildll
cmp
mov
mov
or
leave
data16
jns
pop
inc
test
jg
push
aam
repz
testb
mov
mov
insb
adc
xchg
pusha
xchg
push
xchg
pop
cwtl
xchg
xchg
inc
push
xor
fsubrl
enter
mov
jp
imul
and
xor
outsb
lcall
decb
xchg
clc
add
andl
or
xor
adc
fldt
dec
mov
stos
pop
in
and
push
shlb
rcrb
nop
pop
mov
aam
cmp
std
loope
ljmp
pop
adc
and
in
and
dec
call
push
notrack
sub
mov
addb
xchg
rcll
lahf
push
push
push
sub
addr16
sbb
push
enter
or
shll
sbb
add
lods
mov
dec
xchg
sub
inc
add
repz
and
push
mov
pop
aaa
lods
or
aad
add
mov
jl
fsubs
jmp
jmp
clc
into
mov
cmp
notb
xchg
and
xor
cwtl
mov
sbb
je
outsb
clc
jl
sbb
lret
bound
mov
int3
les
cmp
pop
clc
add
ret
mov
mov
jbe
repz
mov
aas
cli
les
in
adc
imul
fdiv
dec
pop
and
sub
cs
sub
mov
push
dec
add
add
mov
jb
enter
mov
xchg
out
leave
mov
rcrb
cmc
stos
jmp
les
push
xor
push
add
jo
sub
out
and
cld
rorl
jp
mov
inc
test
add
sub
adc
repnz
je
test
or
xor
les
loopne
jb
and
jmp
jne
negb
or
call
fsubp
sbb
mov
aas
shll
popa
and
stos
cs
add
bound
mov
incl
test
or
push
push
xchg
in
sbb
mov
repz
out
outsl
ret
pop
in
repz
push
ljmp
jo,pt
mov
mov
movsb
sbb
xchg
jo
mov
clc
aas
into
ss
das
lret
dec
mov
add
dec
xor
and
aaa
push
sarl
dec
lcall
nop
loop
adc
xor
xchg
mov
push
xchg
fnstcw
inc
add
xchg
mov
sbb
push
insb
lods
fs
and
cs
mov
inc
shl
add
dec
mov
gs
add
dec
adc
mov
push
lods
test
repnz
jg
fdivrs
push
add
stos
out
sbb
daa
xor
jp
rcrb
add
adc
stc
sub
loop
clc
add
adc
loopne
jg
gs
mov
mov
or
fs
cmpb
jmp
mov
lcall
cld
mov
mov
or
and
jo
mov
iret
add
popf
mov
std
add
daa
cltd
in
add
adc
push
movsb
cmp
inc
mov
mov
ljmp
shll
push
movb
orb
imul
pop
orl
pop
dec
orb
js
lret
mov
icebp
mov
sbb
stos
add
xchg
iret
out
jb
xor
mov
daa
cmp
inc
xor
inc
lcall
push
push
sbb
pushl
ljmp
aam
ficoms
push
hlt
ficoms
cmp
mov
and
jae
pop
in
inc
or
popf
nop
dec
add
add
jle
inc
cltd
repz
enter
sahf
inc
inc
cltd
lea
sub
or
stos
add
rcrl
jl
scas
add
ret
sti
and
inc
and
dec
lock
jns
pop
js
loope
sarl
test
or
dec
pop
adc
aam
mov
lock
movsb
add
and
jb
orl
jecxz
xor
pop
sub
jle
sbb
aad
insl
loope
jae
aad
loope
push
leave
sbbb
jo
xchg
outsb
jo
icebp
arpl
jo
adc
or
xchg
mov
jecxz
mov
fidivrl
decb
sub
inc
inc
fistps
pop
int
xor
push
test
dec
add
shr
mov
data16
push
and
add
jbe
pusha
jl
jg
add
icebp
es
mov
ljmp
mov
repz
inc
outsl
cmpsb
aaa
loope
fwait
mov
inc
aad
inc
xor
push
shrl
fdivl
test
adc
dec
jbe
mov
rcrb
mov
stos
ret
inc
ss
cltd
xor
call
scas
add
lahf
xchg
mov
push
fsubrl
mov
mov
out
sub
fmul
push
addr16
pop
adc
rol
lods
roll
subl
jo
leave
imul
and
add
repz
mov
add
shlb
inc
fildl
add
jge
ret
xchg
test
orl
sbb
xchg
xor
lds
pop
add
je
sub
adc
push
inc
add
pusha
shrl
adc
lret
clc
enter
sbb
int3
adc
sub
fiadds
clc
adc
fnstcw
iret
clc
lock
cmp
popf
cltd
cmp
push
mov
mov
pop
mov
or
ja
pusha
test
fnstenv
jge
jg
fisubrl
adc
fadds
in
jo
stc
add
cmpsb
or
dec
xlat
or
pop
insb
adc
imul
mov
add
test
fadds
mov
out
aam
hlt
mov
cmp
mov
imul
popa
shl
add
mov
dec
inc
jmp
mov
xchg
sub
into
cmp
cs
or
addl
jmp
and
int
add
jnp
cmp
or
leave
or
push
cmp
add
add
dec
movsb
aas
xor
lahf
mov
mov
pop
loope
lret
rorl
jb
add
aaa
or
dec
cmp
and
dec
pop
lock
cmpsb
bound
inc
out
imul
cli
sub
scas
fcomps
mov
xchg
push
add
push
bound
add
or
loope
test
cmpsl
test
enter
iret
in
xchg
shr
push
fnstenv
mov
stc
iret
add
mov
sbbl
jp
mov
movsb
call
movsl
addl
mov
scas
sbb
adc
clc
ds
add
sub
mov
or
andl
incb
lods
lea
pop
mov
fidivrs
loope
xlat
js
xlat
dec
and
inc
and
loopne
xchg
mov
das
cli
ljmp
arpl
jp
cmpsb
mov
jle
push
add
push
pushf
push
bswap
scas
js
xlat
pop
mov
mov
lret
cmpsb
push
mov
inc
or
outsb
lods
jae
mov
jmp
nop
pop
mov
xchg
cltd
popf
adc
scas
xchg
push
mov
test
out
xlat
or
mov
pop
cli
or
mov
xor
inc
sbb
lds
xchg
loopne
jne
roll
push
in
mov
jns
or
jo
loop
mov
sub
stc
jle
repnz
ljmp
enter
es
jmp
inc
mov
in
pop
push
icebp
dec
adc
jge
ss
xor
cmp
repnz
pusha
ss
adc
push
jnp
es
sbb
and
adc
dec
adc
pop
incb
mov
jp
cmp
xchg
insl
adc
test
sbb
or
pop
rcrb
mov
sbb
pop
vxorps
lock
inc
outsb
add
xchg
daa
pop
xchg
add
into
xchg
cmp
int3
sub
addl
outsb
loope
sahf
filds
test
in
insb
nop
cmp
sarb
adc
mov
add
inc
adc
faddl
les
inc
pop
cmp
push
std
sub
jbe
aaa
cmpsb
subps
push
dec
or
jge
and
roll
or
or
and
cmpsl
add
push
sub
xor
stos
sbb
xchg
inc
in
mov
fnstcw
jnp
xor
adc
popa
mov
jp
adc
lcall
cld
or
pop
pop
dec
fldl
cld
test
arpl
int3
pop
rcrl
out
mov
jb
cwtl
mov
push
int3
pop
ss
mov
insb
iret
stc
into
ljmp
rcr
dec
add
popa
push
insb
pop
fbld
cltd
mov
fldcw
cmp
inc
cld
rcrl
cmc
and
pusha
add
hlt
ljmp
pop
push
cld
mov
xor
sbb
repnz
cltd
mov
dec
fisubrs
xchg
loop
add
int
cs
in
push
dec
add
in
aaa
xor
leave
lret
inc
push
lret
loope
mov
add
pop
mov
pop
jg
xor
jns
rol
lock
outsb
and
stos
cli
decl
sub
add
mov
les
aas
sbb
and
cs
mov
xchg
cld
push
cld
jmp
ret
insb
stos
sbb
mov
mov
out
shlb
sti
call
jo
mov
mov
pop
lods
adc
std
out
and
insb
invd
test
push
ret
clc
pop
lret
jb
lock
loope
out
cmp
and
cmp
movsl
push
or
jne
pop
inc
int
sti
ljmp
push
mov
pusha
mov
push
sbb
loopne
pop
bound
loope
movl
leave
mov
xchg
test
mov
lahf
imul
lock
push
iret
pop
jb
push
add
es
adc
jg
mov
leave
pushf
jge
adc
incb
cmc
jo
sbb
mov
sub
inc
scas
je
jg
pop
pop
inc
adc
pop
xchg
sub
lcall
aad
lock
add
cmp
mov
hlt
adc
incl
jge
ffreep
je
rolb
adc
lods
nop
jb
mov
cmpsl
mov
cmp
push
leave
cmp
int
sub
mov
add
addr16
mov
cmc
bound
movsl
jg
out
or
pushf
pop
insl
sbb
push
test
adc
sbb
or
pop
ljmp
sub
adc
mov
call
fxam
mov
or
das
xor
add
into
test
mov
loopne
add
jne
lds
int3
or
jg
shrl
mov
adc
dec
bound
cmp
cmp
jne
pusha
cmc
xorb
pop
sbb
jl
xchg
ror
adc
xor
xchg
addr16
aaa
ret
jp
or
dec
pop
mov
std
das
xchg
js
dec
jle
dec
lods
ret
dec
jecxz
pop
ret
es
adc
sub
cld
ljmp
sbb
aaa
and
add
pop
or
mov
jae
ljmp
mov
imul
out
aas
mov
pop
clc
cli
sti
pushf
cmp
add
mov
aaa
or
sub
pop
call
or
hlt
push
xchg
and
in
into
out
jmp
lea
out
mov
xchg
mov
cmp
pushf
adc
cld
mov
leave
arpl
nop
pop
decl
dec
push
and
dec
data16
xchg
in
jo
mov
enter
inc
fidivl
int
mov
mov
das
jno
sbb
fcomip
ljmp
rcrb
pop
jg
jecxz
and
jl
std
adc
or
ja
loop
jbe
int3
es
inc
mov
in
flds
xchg
subb
xchg
bound
lret
xchg
sub
lret
sarb
pop
mov
aam
out
add
push
sar
cmp
ds
push
lcall
call
mov
mov
adc
inc
mov
cmc
jbe
push
push
sbb
mov
push
mov
cmp
jo
sub
insb
and
add
outsl
mov
mov
dec
stos
push
sbb
aas
jle
mov
stc
lock
adcb
lods
sahf
leave
adc
mov
jp
jg
icebp
and
stc
cwtl
push
inc
dec
push
mov
fwait
cltd
icebp
mov
fildll
or
adc
mov
inc
ljmp
ss
in
lret
mov
or
cltd
mov
inc
pusha
jne
inc
or
jg
jl
fs
pushf
inc
add
mov
pop
xor
add
mov
lcall
data16
roll
test
or
inc
push
adc
cmc
inc
push
inc
pusha
jle
sbbb
popf
mov
dec
aam
rclb
pop
std
sub
sti
rol
or
mov
jp
pop
sbbl
ljmp
mov
rclb
iret
lods
mov
arpl
adc
shll
out
and
call
lahf
xchg
pop
mov
imul
lock
push
mov
int
sub
mov
xchg
nop
cld
das
cld
and
xchg
cmc
mov
test
and
sbb
jecxz
sbb
jg
mov
enter
sbb
roll
shlb
ja
add
loope
jb
sub
mov
pusha
arpl
aaa
lods
mov
loop
lock
shrb
ljmp
pop
cmp
push
loopne
add
sub
lods
cld
or
cmp
xchg
dec
aaa
xor
ss
adc
xor
jl
icebp
jbe
push
push
cmpsb
add
es
inc
inc
dec
je
cltd
mov
lds
cmpsl
push
rolb
inc
cld
cmp
lahf
mov
add
sub
inc
hlt
dec
pop
jecxz
xchg
pusha
ja
jp
cmp
ljmp
lea
loope
loopne
ret
xlat
stos
pop
mov
jnp
xchg
je
in
add
rolb
jle
nop
fistpl
adc
ja
sbb
mov
aad
rcr
and
bound
sar
mov
idiv
pop
mov
mov
cmpsb
cmp
xor
jo
jg
sub
add
jnp
imul
nop
inc
mov
aas
shlb
gs
add
ror
mov
adc
xchg
jecxz
into
cmpsb
inc
pop
add
xchg
xchg
mov
insl
mov
sti
into
jecxz
xchg
push
sbbb
cmovg
xor
mov
mov
jae
push
ret
sbb
rorb
subl
out
cmp
jo
adc
jg
pop
shlb
push
fbstp
inc
mulb
leave
out
add
mov
jecxz
xor
mov
push
cmp
inc
sbb
jg
sub
fdivrl
inc
cmpsl
int
mov
adc
jae
aam
scas
imul
xchg
loopne
mov
cld
cmpb
jo
je
cltd
dec
sub
mov
mov
xor
sub
pop
icebp
jecxz
icebp
xchg
in
lret
push
cmp
fcmovnb
xchg
shlb
lods
jb
sub
sub
ja
jbe
dec
adc
xor
jge
sbb
xchg
cmp
xchg
push
or
and
adc
out
je
dec
push
out
adc
pop
mov
out
jno
stos
pushf
es
bound
or
lock
test
sbb
movsl
rcl
clc
sahf
jecxz
ljmp
inc
inc
jbe
push
sti
pushf
cli
adc
ss
mov
or
pop
adc
pop
decl
mov
subb
push
lods
les
lret
mov
lahf
push
sbb
hlt
xor
in
movl
aas
rclb
subl
subb
les
dec
lcall
scas
add
in
push
movsb
or
add
std
outsb
add
xor
dec
pop
adc
call
imul
add
xor
lcall
inc
cmc
pop
dec
inc
push
mov
lcall
pop
jbe
pop
and
adc
loopne
imul
sbb
add
std
shl
and
das
add
pop
out
clc
repnz
filds
lock
fldt
lods
test
mov
mov
xchg
sbb
jp
xchg
subb
cwtl
adc
xchg
stc
jmp
inc
stos
inc
lret
sbb
cmpl
mov
push
or
aas
sahf
enter
arpl
or
mov
add
mov
mov
sub
std
sbb
sbb
es
pop
movsb
cmc
jecxz
ret
jmp
mov
lahf
sbb
jno
hlt
push
jge
ret
rcrb
in
je
or
or
and
andb
cmc
out
faddl
loope
sub
jle
leave
mov
sbb
mov
mov
jo
mov
outsl
lret
ljmp
add
lret
mov
or
icebp
inc
sti
decb
ret
fs
dec
jge
cld
nop
ret
hlt
aaa
lcall
sub
add
cmp
xor
out
pop
push
popf
sbb
in
lods
pop
fimull
inc
mov
cmpsl
in
inc
lcall
ret
dec
inc
or
mov
dec
leave
fistpl
inc
cltd
sub
lcall
hlt
add
dec
xchg
add
sub
stc
jg
adc
incl
jno
mov
push
pushf
inc
psadbw
clc
add
add
js
sub
jmp
add
lock
fbstp
sbb
or
hlt
mov
ret
cmp
push
jns
mov
add
mov
stos
push
les
and
enter
rorl
ret
cmp
push
mov
incb
rcrb
mov
test
ret
sbb
int
push
xor
dec
pusha
pop
mov
mov
idiv
adc
sbb
out
insl
and
cli
lahf
clc
fisubrl
pop
jne
sub
dec
sub
xchg
cld
lahf
cli
add
rolb
add
loopne
sbb
xchg
sbb
dec
aam
push
mov
pop
mov
cmp
add
inc
iret
xchg
jo
andb
sbb
or
pop
sbb
jg
lds
into
filds
xchg
add
pop
icebp
push
int3
roll
bound
mov
inc
insb
xchg
es
cli
add
rolb
mov
xchg
pop
lock
aaa
cltd
or
nop
jp
mov
pop
sub
les
clc
lcall
lcall
lea
dec
or
add
mov
push
mov
int3
incl
shlb
xor
add
test
ret
test
dec
mov
mov
dec
jg
sbb
imul
daa
into
cli
lcall
loope
mov
jb
imul
insl
repnz
add
dec
add
mov
loope
or
push
push
lds
and
es
ds
pusha
and
ljmp
cmp
xchg
pop
je
out
cwtl
sti
push
ljmp
push
pusha
bound
lret
daa
test
xchg
ss
add
xchg
das
les
pop
inc
rorb
fs
icebp
cmc
fstpt
inc
jle
ss
jmp
icebp
mov
or
mov
xchg
jp
stos
mov
cmp
sbb
mov
dec
ffree
cli
or
or
push
dec
jb
xor
sbb
or
inc
ljmp
add
stos
add
jecxz
in
xchg
jg
or
rol
add
sub
pop
xlat
mov
lea
dec
cmp
inc
mov
inc
push
bound
jae
pop
cmp
or
ljmp
cmp
clc
aas
or
daa
pop
fwait
call
repz
addr16
aad
bound
pop
or
mov
aaa
decl
xchg
loop
or
int
pop
mov
push
fwait
jg
cld
cmp
and
test
insl
loope
test
fsub
lahf
ret
cmp
adc
imulb
pop
jae
sub
adc
repz
push
jne
outsl
jb
pop
dec
cmp
add
movsb
push
add
repz
fsubrl
adc
addr16
push
cmp
push
push
xchg
stc
mov
lds
sub
aaa
popa
call
adc
jbe
push
sub
je
dec
sbb
ljmp
add
mov
in
xchg
and
jo
aad
jge
lret
add
mov
dec
cmp
sbb
loope
dec
mov
js
lock
pop
scas
aam
inc
cmp
lret
dec
sbb
dec
adc
push
outsb
adc
sbb
sub
lcall
pop
jmp
mov
mov
push
test
mov
pusha
cld
xor
pop
sub
adc
mov
fidivrl
jg
daa
lds
sub
mov
mov
pop
inc
or
in
and
push
xorb
mov
dec
enter
adc
cmpsl
mov
mov
mov
test
pop
inc
or
movsb
jg
jle
jge
push
inc
jle
testb
fwait
jmp
nop
push
sub
sti
push
mov
mov
into
out
idivb
pusha
mov
mov
jns
or
add
aaa
dec
iret
pushl
incl
mov
lods
aam
fcmove
gs
cwtl
dec
xlat
roll
inc
cmp
push
or
jp
je
ss
ja
and
clc
xor
jg
cmp
movsb
mov
scas
push
add
rcl
mov
fneni(8087
lds
mov
roll
int3
adc
icebp
jg
xchg
cmovp
pop
cli
mov
dec
and
pop
mov
mov
cmp
adc
inc
lods
addr16
or
nop
push
and
ret
xor
xor
adc
loope
in
and
mov
jo
loope
pop
push
into
notl
adc
std
aad
mov
dec
pusha
ljmp
mov
cmp
jbe
sub
sbb
mov
outsl
je
sbb
and
test
ja
out
sarl
inc
pop
add
jne
adc
loope
lods
lcall
dec
loope
rclb
pop
xor
pushl
lods
movsb
mov
test
cli
call
adc
xlat
dec
int3
add
lock
lret
adc
mov
outsl
xchg
lods
jg
jecxz
jp
stos
inc
mov
cmpl
inc
fidivrl
int3
push
push
stos
scas
incl
cwtl
add
add
and
xlat
scas
mov
mov
dec
std
call
inc
mov
mov
add
xor
pop
jg
cmc
neg
icebp
or
mov
mov
sub
cmp
mov
pop
lahf
and
sub
inc
iret
inc
je
cmp
outsb
xchg
mov
movsl
adc
test
cltd
gs
lahf
subb
mov
into
mov
xor
xor
xchg
fnstenv
pusha
push
inc
adc
sbb
mov
int3
out
nop
and
push
daa
cmp
rcl
cli
xchg
and
stc
fsubl
xor
outsl
xchg
aas
mov
inc
dec
in
and
leave
cmp
and
shrb
xbegin
or
inc
fdiv
inc
push
jecxz
add
nop
pop
jge
rcl
jo
aas
fsubr
xor
aad
fsubl
mov
xor
ja
dec
pop
sbbl
test
pop
add
jl
dec
lahf
movsl
ja
xor
jecxz
push
lahf
push
test
cmp
js
call
jle
loope
ret
pop
idivb
add
and
gs
pop
pop
xor
xchg
push
push
loope
xchg
lahf
inc
pusha
push
dec
repnz
xor
scas
add
xchg
mov
pusha
mov
addl
and
and
pop
fists
push
xchg
dec
pop
imul
mov
cmp
push
movsl
cmp
fstps
mov
js
add
shll
aad
mov
pop
pop
pop
repnz
arpl
sbb
jmp
mov
repnz
xor
loope
and
jl
mov
les
pusha
les
fsub
int
mov
cmp
iret
test
sbb
push
movsl
xchg
add
sbb
and
mov
pop
loope
xchg
cmpsb
jecxz
push
adcl
adc
jp
int
cmp
mov
arpl
adc
jg
push
pop
je
data16
rcrl
inc
inc
addl
jecxz
and
outsl
add
loop
sub
or
jecxz
xchg
cmp
or
addl
adc
jp
sbb
popa
pop
mov
mov
mov
repnz
mov
mov
cmp
pusha
pop
int
es
ljmp
add
or
flds
addb
xchg
lret
enter
in
push
xor
xchg
mov
mov
mov
fisttps
or
sub
dec
mov
scas
mov
ja
loopne
dec
fisttps
andl
aam
stos
add
lret
cld
inc
sub
fwait
sahf
in
out
sub
sub
gs
mov
leave
stc
cmc
test
mov
push
adc
dec
lds
mov
inc
in
and
nop
fiaddl
add
cmc
ss
adc
loopne
adc
out
pop
repnz
loop
or
cld
adc
loop
cmp
xor
and
scas
iret
jle
cli
pop
push
jo
push
pop
mov
xchg
test
ja
out
sti
add
and
fs
popa
and
mov
out
mov
mov
jns
mov
sbb
sbb
and
mov
sbb
xor
inc
mov
jns
inc
xchg
ret
jle
lock
pushf
xchg
and
dec
jae
mov
testl
cmp
rol
test
fdivrl
mov
mov
dec
mov
jl
mov
sub
sub
call
lahf
sub
jo
xchg
cmp
push
inc
repz
es
dec
negb
fadds
xchg
push
sbb
or
jnp
fisubl
lcall
add
fmuls
mov
scas
sahf
inc
and
mov
push
inc
leave
sbb
jns
test
dec
jae
sbb
xchg
jae
pop
std
pusha
jmp
push
lcall
push
scas
test
cmc
rcrb
sub
and
mov
inc
repz
cmp
in
lret
inc
or
xor
adc
sbb
xchg
pop
jno
inc
inc
inc
sub
fs
ret
and
and
cli
enter
test
test
sub
test
adc
repnz
pop
jo
es
out
pop
ljmp
js
mov
adc
cmp
rcll
jmp
mov
dec
add
lahf
ret
out
cmpb
jecxz
arpl
out
sbb
push
in
loopne
pop
repnz
dec
xor
adc
inc
add
mov
std
gs
xlat
aad
inc
jl
xor
popf
dec
or
jg
test
inc
inc
mov
sbb
shlb
pop
cmp
xchg
mov
inc
xlat
cmpsb
incb
mov
rorb
add
inc
icebp
ret
cvtpi2ps
add
incl
mov
sahf
lea
js
fadd
lahf
gs
pop
xchg
hlt
ret
and
mov
mov
mov
das
lahf
pop
sbb
jecxz
iret
dec
xchg
sbb
jns
and
jecxz
fs
bswap
cmpsl
push
jne
not
ja
dec
mov
fstps
push
outsl
lock
inc
ljmp
lret
aam
mov
add
push
mull
mov
in
or
sbb
gs
lret
mov
stos
ret
or
adc
out
push
add
in
xor
mov
pop
xor
je
xchg
aad
adc
mov
jecxz
lods
les
daa
iret
sbb
nop
leave
imul
lahf
test
and
sub
dec
in
lret
rcrb
dec
sub
lock
add
std
das
ret
xor
adc
inc
ja
lea
or
popa
mov
or
insl
add
pop
outsb
jle
push
mov
mov
rolb
fs
sbb
mov
arpl
push
lds
aam
clc
cmc
cmpsl
lret
test
lock
pop
mov
dec
add
pop
out
add
mov
adc
loop
jl
ret
dec
mov
and
daa
xchg
jo
hlt
add
stos
sbb
fcoms
into
or
fiaddl
add
int
cmp
push
js
mov
sbb
mull
and
or
out
and
jmp
inc
push
lret
pop
stos
mov
test
push
push
sbb
cmp
mov
popa
mov
mov
or
lods
dec
jl
mov
cmpsl
dec
ret
ds
mov
loopne
sub
mov
rorl
ljmp
mov
inc
paddw
pop
sarl
cli
enter
mov
ret
dec
fimuls
add
mov
sub
adc
leave
hlt
inc
cmp
inc
add
pop
cmpsb
jns
add
dec
xor
stc
or
imul
mov
or
cmc
rcr
in
xor
andb
dec
ret
jg
pusha
std
loope
mov
clc
je
cld
and
fwait
aas
push
dec
adc
xor
push
cwtl
sbb
stos
add
mov
adc
icebp
xchg
adc
sbb
push
in
or
xchg
aam
or
ret
jno
out
addr16
loop
dec
adc
add
dec
push
decb
mov
jge
aas
pop
adc
data16
enter
dec
lcall
fs
dec
cmpsb
inc
fdivrp
or
and
and
cmp
ret
out
repnz
mov
push
jg
dec
ss
dec
js
mov
stos
ljmp
sub
mov
ret
cmp
mov
je
clc
push
inc
lahf
adc
pop
bound
scas
fstl
add
jmp
dec
push
fistl
push
in
cltd
int
xchg
mov
int
cmp
jae
mov
sub
mov
add
dec
imul
mov
sub
repnz
ss
fisubrs
repnz
and
inc
test
fnstcw
add
or
gs
xchg
shrb
or
mov
sti
mov
mov
test
cld
push
pop
dec
test
shlb
xlat
cmp
cwtl
jb
jae
push
sbb
jl
sub
adc
dec
jl
inc
push
cmp
adc
movsl
push
frstor
call
stos
jne
js
loope
andb
loope
cltd
jmp
into
push
mov
cwtl
dec
pop
mov
jmp
cmc
pop
scas
fmull
or
test
push
xor
inc
sub
jns
and
enter
mov
cmp
xchg
xor
cmc
mov
push
rol
aas
add
pop
sti
add
cmp
jmp
dec
aad
imul
aas
sbb
jae
xchg
inc
fs
cld
dec
pop
or
mov
push
jno
push
popf
out
mov
out
popf
sbb
mov
mov
imul
dec
jp
test
out
andl
mov
adc
xor
and
push
add
jg
xchg
out
and
add
lds
test
cs
enter
cmp
mov
push
jnp
rcrb
out
add
sub
js
or
aaa
lea
es
push
ss
mov
clc
cli
scas
sub
stc
xchg
pop
mov
jbe
pusha
rcrb
jb
mov
xchg
test
cmp
fdivr
aaa
addb
inc
mov
rorl
les
rol
jne
mov
sbb
int3
iret
sub
icebp
out
add
in
sbb
jb
outsb
sbb
jp
add
icebp
pmulhw
and
jge
adc
cmc
jae
test
imul
or
or
dec
jg
scas
and
ret
lock
hlt
add
jp
les
pusha
sbb
mov
pop
test
sti
inc
aas
ljmp
or
mov
sbb
mov
sub
ret
jp
leave
cmp
cltd
mov
xchg
lea
mov
sub
mov
dec
pop
stc
lret
clc
jle
add
pushf
or
and
cmp
pop
cmp
sub
jbe
adc
xchg
dec
mov
outsl
faddl
mov
cmp
mov
jbe
and
push
xchg
sbb
lods
fistl
inc
mov
dec
mov
sub
mov
xor
mov
cmp
jge
negb
and
dec
repnz
stos
sbb
icebp
in
xchg
inc
adc
sahf
mov
jge
enter
loopne
dec
int
xor
and
adc
pushl
cwtl
adc
xor
adc
stos
out
xor
or
int
mov
fsubrs
addr16
sti
idivl
aaa
cwtl
popf
sahf
push
add
inc
aad
pushl
adc
shll
ret
cld
outsl
jno
add
fcoml
sbb
lcall
fcomps
jecxz
mov
in
je
clc
mov
js
cmp
ret
inc
or
xor
hlt
add
and
rolb
mov
mov
cli
mov
add
mov
jnp
fcoml
cmp
cs
inc
jg
fidivl
mov
pop
jae
negb
sub
jbe
mov
call
loop
ret
pop
insl
mov
mov
movsl
inc
sub
addr16
lock
push
cwtl
outsl
inc
icebp
dec
int3
cmpl
xorl
dec
adc
insb
bound
push
out
jg
pop
xchg
and
js
loope
push
jmp
xor
out
push
lock
push
and
jmp
out
movsb
xor
cmc
lods
jecxz
sbb
jp
cmp
and
add
sub
ja
outsl
jmp
sti
add
push
ret
cli
pushf
int3
sub
adc
jne
lcall
jp
rol
cli
lds
fdivs
jmp
jbe
mov
dec
xor
ss
adc
loop
cs
into
stos
adc
cmpsb
dec
inc
andb
push
cmpb
add
movsl
sbb
add
int
insb
insb
push
push
mov
stc
imul
popf
add
jb
and
shll
mov
xor
pop
jae
xor
pushf
push
js
addr16
andl
fcompl
lock
leave
iret
sub
or
out
adc
and
or
std
rcrb
shll
ret
and
or
xor
pop
and
mov
sbb
mov
sub
cs
test
xchg
scas
mov
cmp
fstl
icebp
out
nop
add
outsl
fs
mov
sbbb
lahf
movsl
ret
movsb
fiaddl
fucomi
sub
cli
int3
cmpsl
mov
ljmp
lret
cmp
sbb
add
fwait
outsb
mov
cld
mov
cmp
cwtl
mov
jmp
jmp
sti
lods
cmp
cwtl
mov
cld
dec
mov
xchg
fnstenv
mov
repz
inc
push
xor
adc
xchg
adc
or
int
in
lods
ds
xor
or
sbb
loope
adc
xchg
outsb
fdivrs
cld
ret
aaa
out
mov
xchg
sbb
cmp
and
call
add
add
pop
insb
add
jmp
mov
sub
pop
or
mov
arpl
jp
sub
pop
mov
call
ss
leave
cmp
inc
adc
or
jp
adc
fadd
dec
cmp
push
mov
shrb
pop
adc
jnp
pop
jl
inc
cmp
repnz
idiv
mov
hlt
pop
sub
push
inc
add
out
add
sbb
cmp
mov
out
int
dec
cmpb
xor
and
aaa
and
push
add
into
or
mov
cli
or
cmp
mov
dec
ljmp
push
mov
les
fisubl
and
xchg
push
xchg
mov
adc
pop
dec
in
xchg
jg
aaa
jecxz
mov
or
iret
outsl
stc
inc
jno
es
inc
lds
fists
call
pop
jbe
and
mov
xchg
mov
pop
and
push
xchg
xchg
arpl
in
repz
incl
mov
cmpsb
add
pop
adcb
lret
incl
das
cmpsb
pop
enter
dec
pop
add
xor
rsqrtps
lahf
nop
jno
and
push
icebp
xchg
shl
stos
add
xor
jle
std
aas
mov
out
mov
push
gs
cmpl
out
outsl
inc
jmp
loopne
adc
in
xchg
pop
cli
ljmp
jb
lret
add
cltd
outsb
fimuls
js
btr
sbb
outsb
or
xor
movsb
xchg
lds
and
pusha
imul
push
fsubl
repz
je
outsb
loop
pusha
dec
into
sub
push
iret
dec
movsb
lcall
push
sbbb
aad
outsl
fidivrs
cmp
in
sub
fsubs
xlat
pop
lods
pusha
iret
xchg
cmp
or
gs
dec
jmp
or
std
fadd
fimuls
sar
ljmp
adc
adc
mov
push
add
int3
pop
stos
clc
xor
inc
add
sub
lock
aad
stos
aaa
fs
gs
rclb
xchg
add
dec
add
ds
ljmp
test
stos
lret
mov
mov
fnsave
ret
and
add
ja
and
xchg
lahf
mov
xor
sar
pop
add
pop
jb
stos
mov
adc
clc
or
lcall
xchg
outsb
and
dec
mov
loop
dec
mov
shl
pusha
lahf
gs
addr16
sbb
dec
rorb
push
rolb
ret
jae
add
jmp
sbb
mov
cli
clc
loopne
lods
xor
ret
and
arpl
push
rcr
add
subb
pop
hlt
dec
mov
lahf
jbe
ret
mov
xchg
movsb
dec
inc
scas
xor
ret
mov
test
xchg
mov
xchg
cmp
clc
pop
jl
mov
lods
mov
arpl
pop
add
pop
xchg
inc
inc
sbb
inc
dec
icebp
pop
and
push
xchg
sbb
popf
mov
jb
mov
test
dec
xchg
xchg
cli
or
dec
aad
push
inc
imul
frstor
add
mov
xchg
sbbl
or
js
cwtl
fildll
xor
fistl
mov
xchg
jb
in
push
cwtl
mov
loopnew
xchg
mov
icebp
or
jle
pusha
inc
xchg
cmpsl
push
icebp
add
inc
jmp
lock
xchg
js
int
or
dec
add
xchg
roll
not
jo
cli
add
out
into
mov
jg
cmp
mov
inc
add
imul
sub
in
xchg
pushl
mov
sbbb
into
out
iret
jg
out
sub
dec
lods
mov
decb
pop
orl
jbe
inc
pop
repz
aas
fnstsw
loopne
cmp
addr16
loop
xchg
push
lock
push
mov
mov
cmp
or
stc
or
sub
hlt
mov
adc
push
xlat
and
jp
sbb
mov
xchg
jl
adc
cmc
or
add
stc
jg
daa
adc
inc
sub
adc
cli
arpl
aaa
imul
pusha
xor
sahf
xor
sub
mov
stos
sub
cmp
xor
xor
and
lods
loopne
inc
aad
lds
cmp
add
fistps
shl
jo
je
icebp
ja
or
and
clc
pop
sbb
pop
sbb
mov
sub
ss
shlb
pop
push
and
mov
sar
mov
dec
aas
arpl
mov
mov
cwtl
push
push
xchg
dec
or
cmpsb
mov
fbstp
xlat
les
repnz
mov
inc
enter
xor
or
add
xorb
int3
and
adc
cltd
clc
jg
cmp
imul
mov
icebp
pop
xchg
iret
popf
fdivrs
add
push
testb
ret
fildll
mov
cmpb
and
sbb
adc
jo
insl
fsubs
call
loopne
push
add
fsqrt
adc
xchg
popa
gs
inc
mov
jmp
add
push
sub
ficoml
add
outsb
insb
sub
xlat
push
cmp
fbstp
lret
mov
or
xchg
add
and
dec
jp
mov
or
xor
add
lcall
pop
inc
pop
adc
jp
cwtl
in
inc
movsl
stos
mov
cmp
lret
sub
rorl
xor
inc
decl
out
lahf
out
cld
pop
repnz
jns
mov
in
cmp
icebp
pop
add
lock
cwtl
and
in
fnsave
test
inc
jl
jle
ljmp
enter
pop
fldl
push
xchg
mov
jbe
decb
mov
inc
pop
xchg
inc
and
jo
dec
cld
pushf
and
jmp
dec
movsl
pop
cmp
sbb
sbb
xor
dec
adcb
sbb
mov
loop
push
adc
or
pop
adc
hlt
sub
mov
insb
inc
sbb
imul
xlat
push
sub
outsb
mov
jge
mov
pop
lcall
mov
test
js
clc
scas
cmc
mov
rorb
add
and
mov
cld
out
mov
nop
xor
xlat
insb
add
imul
scas
add
mov
inc
cmp
pop
or
popa
jmp
adc
xchg
andl
jp
inc
push
inc
stos
imul
ficompl
adc
decl
shrl
xchg
xor
insl
scas
lods
lahf
out
or
xchg
push
sbb
stc
inc
enter
je
jg
hlt
es
jge
push
fwait
xor
jg
scas
or
xor
mov
mov
cli
mov
in
popa
insl
xlat
mov
sub
mov
sbb
fadds
push
add
mov
jmp
std
loope
das
cmp
lods
ss
stos
in
dec
add
push
dec
or
cmp
les
cmpsb
rol
shlb
sbb
cmp
mov
xchg
jge
or
adc
jmp
orl
push
stos
clc
inc
clc
jae
fwait
pop
and
sub
jmp
cli
cmpsl
mov
sarl
and
fwait
lcall
mov
jne
stc
incl
dec
jns
sub
jmp
xchg
add
cmp
mov
outsb
push
rcll
icebp
push
cvttps2pi
or
cmp
xchg
adcb
adc
sub
adc
cmp
test
ja
mov
loope
add
sbb
leave
pop
push
movsl
out
fwait
rcr
les
insl
jo
jl
or
incl
fisubrl
rcrl
pop
ret
jne
incl
ret
mov
fsubrs
add
popa
mov
aam
jg
rcrb
cli
insb
cld
xor
rorb
bound
xchg
xchg
cmp
andb
xor
jmp
and
mov
dec
fsts
insb
subl
jg
inc
ret
push
xchg
inc
adc
lcall
outsb
mov
outsl
xor
push
sub
orl
or
rorb
push
lret
cli
subb
mov
xchg
add
loop
inc
push
push
inc
mov
xchg
cli
mov
xlat
mov
add
xchg
ja
and
stc
mov
xor
rorb
add
cli
dec
add
sub
adc
adc
or
push
xchg
mov
jbe
or
jmp
fisubrl
pop
push
cld
push
mov
inc
in
dec
cmp
rclb
jns
je
mov
ficomps
ss
mov
adc
mov
add
dec
sub
jecxz
and
cmp
rolb
stos
push
jns
adc
pop
call
push
test
push
jno,pt
and
movsb
clc
add
dec
rol
xchg
lock
mov
stos
cwtl
lock
loopne
mov
fcoms
pop
mov
arpl
sbb
mov
test
cld
in
mov
popa
and
xchg
add
in
ljmp
pop
hlt
decl
cmp
cltd
mov
icebp
aas
and
loopne
loopne
cwtl
sti
inc
out
or
dec
test
jl
or
xor
lahf
dec
clc
pop
insl
ljmp
xor
xrelease
popa
cmpsb
popl
xchg
fistpll
add
dec
cmpb
ds
mov
push
nop
fadds
inc
js
jg
inc
mov
cld
aaa
cltd
mov
loopne
pushl
sub
add
pop
loopne
adc
insl
ljmp
std
add
js
add
cmp
mov
jp
and
xor
push
repz
jae
xchg
aad
ret
cmp
sti
imul
sarb
hlt
pop
and
call
sbbb
icebp
dec
sub
jb
add
sub
das
add
jnp
add
xor
push
gs
cli
dec
jle
jnp
cmp
divb
call
pop
jl
jb
sbb
lods
pushl
in
push
ds
mov
ss
cmc
mov
mov
es
adc
fsubs
push
dec
adcb
jb
mov
lea
sub
lret
pop
xchg
decl
ljmp
pop
and
loope
test
cmp
test
loopne
mov
loope
pushf
sti
out
dec
call
insl
jmp
cmp
sbb
mov
dec
and
cmp
ljmp
jl
cmpsb
xchg
and
or
in
pop
and
sub
xchg
shlb
jle
mov
push
xor
mov
lods
insb
cltd
sbb
cmp
cmp
cmp
dec
in
xor
adc
outsb
mov
adc
lods
adcl
les
push
aad
pusha
dec
and
push
lods
aaa
adc
std
fnstcw
jnp,pn
sbb
fmul
xchg
fmulp
ja
in
mov
lock
ret
jg
jecxz
pop
jl
pop
mov
pop
and
negl
sub
in
mov
and
pusha
push
jl
outsb
push
incl
mov
mov
sub
insb
push
lds
movsl
in
and
mov
jg
call
pop
jnp
sub
pushl
or
outsb
ljmp
adc
add
cmp
ret
fnstsw
add
jmp
jns
aaa
inc
pop
inc
fisubrs
sbb
in
jg
push
fisubs
lahf
mov
fstps
dec
ljmp
jbe
fisttpll
cmp
in
pop
inc
les
nop
jne
sbb
mov
mov
or
mov
rolb
flds
loop
js
in
xor
aaa
adc
decl
mov
leave
daa
jge
sub
jge
mov
jecxz
popa
cmpb
dec
ss
jg
xor
ss
xchg
mov
or
stc
adc
xor
ret
scas
stc
test
lcall
in
scas
or
in
inc
call
std
xor
mov
fnstsw
test
loope
ret
movsb
mov
loopne
rcr
mov
and
dec
and
xor
jecxz
xchg
test
sub
lods
test
ds
call
jecxz
lea
sub
adc
push
inc
cld
leave
fbstp
push
mov
outsl
outsl
push
mov
insb
push
push
stos
pusha
addb
jae
add
rclb
out
fnstsw
fsubrs
loope
or
scas
and
out
sbb
repz
loopne
sub
xchg
and
aas
cwtl
rorb
jno
mov
mov
or
sbb
add
fwait
adc
mov
jg
xor
or
mov
sbb
add
fisubrs
stos
mov
pop
pop
pop
add
adc
pushf
mov
jmp
into
mov
loope
adc
adc
mov
mov
shl
mov
or
orl
out
or
jl
loopne
push
test
sub
in
xchg
enter
mov
mov
inc
cmp
xchg
mov
or
xchg
lock
jl
stos
out
adc
push
mov
inc
dec
fdiv
mov
popl
dec
jmp
loope
push
pop
and
inc
test
jns
shll
lcall
lret
sar
inc
les
xchg
jno
int
dec
pusha
repz
or
ltr
cmpb
loopne
loop
jmp
int
cli
and
loop
sub
adc
push
fistpll
pop
mov
add
int3
out
pusha
pusha
jns
sbb
add
cmp
add
sbb
test
icebp
sub
cmp
divl
jg
and
xor
xor
in
sub
add
mov
sbb
xor
aam
pop
mov
pop
stos
xchg
imul
paddusb
adc
jb
pop
mov
ss
adc
mov
repnz
sbb
lcall
inc
loopne
mov
xchg
mov
insl
mov
ret
scas
cli
call
sbb
icebp
dec
mov
data16
xchg
push
add
ret
jecxz
dec
sbb
jg
xchg
mov
lock
xchg
inc
pop
test
jmp
cmp
xor
pop
add
pop
xchg
cmp
jmp
xchg
adc
xor
rclb
mov
jns
dec
outsb
sub
xchg
add
adc
sbb
mov
jb
add
mov
lcall
rclb
inc
and
popa
decl
adc
fcompl
inc
jecxz
cs
les
insl
jne
divl
popf
mov
jecxz
aam
inc
addr16
mov
mov
cmpb
iret
push
lock
and
repnz
icebp
negl
gs
mov
and
lcall
or
incb
mov
les
hlt
add
aas
stos
inc
lods
decl
cmpsb
jle
ret
cmpb
pushf
out
jecxz,pt
popa
ds
mov
dec
mov
hlt
inc
adc
mov
pop
add
pushf
enter
test
lahf
sbb
mov
mov
adc
xor
orl
inc
jmp
xchg
pop
mov
or
or
dec
cmp
divb
sbb
sub
push
add
pop
cmp
movsl
movsb
add
incl
push
test
push
xchg
repz
push
outsl
add
bound
orl
lea
loope
clc
stos
in
xchg
in
stos
xchg
or
jg
test
adc
jl
subb
ret
mov
pop
mov
incl
iret
or
push
movsb
xor
dec
aam
jecxz
xchg
dec
cld
ljmp
mov
cmpsb
decl
ds
fs
add
mov
jp
xlat
mov
or
int3
sbb
lock
ljmp
stos
xchg
shlb
mov
or
test
adc
cmpsb
out
imul
mov
mov
push
lcall
test
sbb
loope
incl
pop
xlat
adc
jno
add
popf
jle
movsl
repz
jae
ljmp
scas
lcall
mov
cmpb
fidivl
shlb
sbb
mov
dec
xor
mov
or
add
bound
cli
xor
push
or
movsl
loop
xor
lds
mov
scas
lea
ljmp
mov
shrl
gs
cmp
je
addr16
sar
xchg
dec
or
inc
cltd
jmp
push
jno
dec
pop
push
xchg
sbb
inc
jmp
shrb
into
jl
ret
arpl
xor
aad
dec
subl
inc
pop
lea
mov
das
fnsave
popf
jnp
jno
sbb
cmc
jg
jnp
mov
lahf
fwait
bound
in
popf
test
call
xchg
mov
insb
xor
dec
mov
sbb
jae
outsb
clc
pop
pop
adc
fsubl
add
pop
std
push
mov
and
push
cs
rcrb
mov
ret
sar
incb
mov
in
adc
out
xor
ja
fistpll
add
lods
mov
jb
add
pop
xor
fidivrs
add
mov
movsl
and
mov
gs
rcr
ljmp
repnz
andl
add
or
mov
cld
jg
or
cmpsl
jo
jp
mov
push
clc
xchg
shr
cmpsb
dec
scas
pop
jns
sarl
popa
lock
add
cld
popa
and
sbb
pop
les
jmp
iret
adc
bound
aas
fstps
fimull
addl
lret
dec
cmp
dec
icebp
sarl
adcb
insb
mov
sub
aad
outsb
push
sarl
xchg
insl
mov
stc
int3
pop
xchg
aam
and
pop
push
rolb
and
nop
jg
jo
inc
push
dec
mov
rcrl
ret
jno
addb
lret
jg
jo
jae
sbb
test
or
jno
and
repnz
mov
repnz
aad
clc
mov
add
pop
les
punpcklwd
push
and
aad
push
dec
repz
mov
lcall
adcb
addr16
xor
lea
andb
sub
cld
loope
add
aaa
inc
loope
in
cmp
fsubrs
and
fs
jg
imul
sbb
or
orl
addr16
and
pop
cld
cmp
jle
cli
ss
mov
fs
xchg
jecxz
mov
insb
pushw
fcompl
ret
lcall
cli
sub
dec
or
pop
xor
pop
andl
fimull
incl
test
jo
xchg
dec
je
nop
cwtl
sub
mov
in
jg
ss
dec
mov
xor
xor
pop
pusha
add
mov
inc
test
lea
push
cmp
mov
sbb
enter
jo
in
addr16
fucomi
repnz
xchg
sub
dec
pushf
push
outsl
add
sbb
and
pop
pushf
mov
imul
sub
loope
adc
in
fsubl
mov
dec
and
mov
push
cs
out
inc
lea
rcrl
jb
mov
pop
and
cli
dec
test
xchg
stos
inc
adc
ljmp
ffreep
cmc
fnstsw
pop
add
lret
mov
push
sar
cmpsb
call
pop
sbb
mov
test
shlb
cmp
scas
push
test
push
mov
je
incl
jno
push
push
mov
cmp
or
xchg
std
jg
pop
stc
inc
or
add
ss
mov
mov
mov
int
push
sub
add
jge
or
lcall
repnz
dec
adc
outsl
fnstenv
mov
ja
pusha
mov
clc
out
cmp
inc
push
rorb
inc
sbb
add
mov
sbb
cmpsb
loopne
inc
push
std
or
outsl
decl
sbb
lods
push
js
sbb
cmp
cli
xchg
clc
repz
ja
push
push
xor
addr16
ret
scas
inc
andb
call
je
mov
sub
fwait
in
cmpsl
xor
xor
and
mov
daa
leave
cmp
popf
fnsave
jl
loop
sub
sbb
pushf
pop
xchg
fs
int3
in
in
sbb
jno
mov
add
subl
test
sub
in
daa
xor
aam
popf
mov
ret
mov
cmp
leave
leave
dec
inc
test
stc
testl
and
cmp
test
and
push
add
mov
push
cmp
fcmovne
sbb
loopne
lds
adc
lock
jl
call
cld
decl
dec
push
lret
cmp
stc
fldl
scas
xor
adc
xor
or
fstpl
mov
jg
push
jno
add
pop
and
mov
sbb
lock
inc
inc
cmp
mov
gs
adc
mov
sti
lods
call
fsub
mov
adc
cld
jg
test
mov
in
push
sbbb
cmp
lods
xor
dec
jp
gs
add
clc
add
test
loop
sarl
adc
jae
or
inc
repz
stc
call
and
push
push
mov
imul
nop
mov
or
enter
lret
mov
inc
or
xlat
cwtl
adc
and
xor
mov
loopne
nop
mov
int3
cwtl
fistpll
jl
sub
fwait
pop
xor
dec
in
mov
das
test
bound
xlat
fs
outsb
or
pushl
pop
ficomps
jnp
pop
lcall
loop
repz
and
int3
sbb
stos
xchg
lcall
sbb
ret
adc
adc
sub
repz
jl
add
jae
call
loopne
pop
je
mov
or
cmpsl
jg
mov
xchg
add
ret
sub
cmpsb
add
std
out
aaa
push
das
sub
mov
addr16
and
and
lret
mov
repnz
cvttps2pi
lea
or
loop
pop
mov
inc
sub
into
and
ret
fs
adc
lahf
and
loop
das
and
fsubrl
push
dec
push
inc
inc
adcb
loop
mov
mov
test
sub
cmpsb
shll
jp
xchg
dec
out
adc
mov
inc
je
or
add
pusha
xor
mov
cmpb
daa
leave
and
pushl
cwtl
mov
nop
xor
sub
xchg
sbb
mov
mov
andl
mov
movsb
mov
sbb
push
dec
and
cli
xor
or
out
clc
and
fstl
iret
push
and
sub
nop
push
xchg
push
std
cwtl
push
cli
mov
ret
repnz
pop
pushf
cmp
push
jle
ret
inc
mov
inc
add
add
push
dec
aas
dec
pop
add
dec
push
lds
in
xor
mov
pop
pushf
adc
insb
mov
int3
mov
outsl
loopne
add
add
add
xchg
push
rcr
test
sub
iret
mov
push
test
pop
and
jne
or
sbb
scas
test
in
sbb
ljmp
lret
jnp
sbb
test
rcl
mov
fdivr
pop
movsb
add
pop
add
scas
lods
lods
sbb
cmp
cs
fstl
rcrb
push
inc
outsl
sbb
sahf
jbe
jb
in
push
pop
xor
cmpsb
je
add
lcall
imul
outsl
sbbb
inc
mov
jbe
clc
xchg
xchg
xchg
imul
cmp
out
lea
sbb
jge
sbb
out
cmp
pop
inc
or
inc
loopne
movsl
adc
int
jmp
inc
testb
aaa
std
fwait
add
xorb
aam
iret
xchg
jnp
in
sbb
fsubrl
inc
cli
cmp
ret
pop
fld
pop
lret
pop
fldl
or
jnp
fs
mov
add
jnp
sahf
pushl
inc
testl
in
dec
inc
push
addr16
cmp
loopne
jns
lcall
rcl
cmp
pop
cs
aaa
sub
push
jle
js
xor
inc
sahf
js
push
xor
dec
cwtl
loop
lahf
sti
add
jae
mov
pop
test
repnz
scas
add
sti
add
jbe
inc
imul
push
push
adc
ljmp
mov
xor
cmc
adc
push
xor
cmpsb
insl
xchg
or
pop
fcomps
and
cmp
inc
inc
jge
ret
shlb
clc
mov
mov
shlb
cmp
or
jmp
into
jecxz
cmp
mov
dec
inc
add
and
inc
fstps
inc
arpl
push
pop
int
ret
ficompl
mov
add
jle
hlt
xchg
add
es
in
call
sbb
pop
outsb
xchg
mov
inc
ja
or
mov
adc
sub
aaa
stos
inc
sbb
cmp
and
inc
mov
push
add
inc
dec
inc
push
inc
icebp
mov
test
sub
lcall
jl
insb
cmp
mov
push
sub
push
into
imul
xlat
push
inc
addb
stc
in
pop
add
inc
gs
addr16
clc
add
inc
push
bnd
pop
push
cs
lcall
cmpl
pop
repnz
lock
xchg
push
or
pusha
sub
lock
adc
dec
and
pop
mov
inc
push
scas
adc
push
in
xor
adc
xchg
sbb
sbb
sarl
divl
sbb
adc
pop
inc
lcall
jbe
and
inc
rorl
jne
call
aad
xchg
in
add
mov
je
cld
cld
mov
push
add
mov
xchg
adc
xchg
scas
lods
adc
dec
repnz
or
add
adc
lcall
loopne
aaa
adc
negl
add
aaa
xor
ja
fildl
pushf
mov
xor
movnti
xor
and
addb
cld
xchg
cmp
add
loopne
push
call
dec
jg
mov
fcomp
lcall
pop
arpl
jnp
cmp
push
jo
sbb
out
or
sub
mov
imul
sub
push
mov
xor
mov
repz
lods
push
mull
sti
jae
repnz
mov
pop
nop
jg
movq
cmc
or
mov
jb
inc
xor
sub
add
mul
adcl
test
clc
mov
in
sbb
xchg
testl
push
fbstp
pop
loopne
add
ret
push
add
lock
xor
lahf
fisubs
pushf
mov
add
cs
rclb
pop
cwtl
test
sar
loop
xchg
clc
sbb
inc
out
mov
sbb
dec
mov
xor
es
pop
pop
in
dec
push
dec
jns
aas
adc
in
incl
and
clc
mov
aas
bound
ss
into
or
into
and
sbb
pop
or
js
push
ja
or
pop
mov
pop
mov
pop
or
mov
fs
adc
loopne
jns
arpl
pop
pop
jg
mov
loope
pop
adc
xchg
xor
and
ret
add
daa
cmp
decl
enter
jo
jns
scas
sub
push
dec
test
mov
push
pop
movsl
shl
test
scas
orb
stc
repnz
pop
stos
push
cmp
add
adc
negb
lea
push
sub
popf
add
xchg
dec
das
dec
add
popl
push
cmp
add
fwait
xchg
sub
fcoms
or
in
call
imul
mov
inc
mov
push
clc
int
jecxz
jne
sar
out
cli
or
loope
cmp
inc
add
push
inc
jle
fs
sbb
mov
sbb
aas
push
insb
test
fcomip
xor
xor
loope
adc
jb
push
xchg
cmp
push
mov
aad
dec
xchg
dec
loope
hlt
andl
cwtl
mov
mov
pop
cmp
sbb
or
sub
inc
jle
dec
jno
xchg
cld
dec
xor
les
and
in
jp
mov
adc
repnz
and
mov
lods
sbb
cmc
fsubrp
popa
mov
push
cld
sbb
jl
xchg
lret
mov
dec
lods
inc
pop
jp
jno
add
stos
aas
ret
pop
clc
into
testl
aas
sub
inc
or
dec
adc
ret
push
fcomp
cmp
xor
mov
sub
sub
nop
bnd
sub
pop
lods
cmp
cmp
xor
inc
and
inc
lea
push
add
ljmp
lret
shl
add
xlat
push
mov
xchg
mov
mov
jno
xor
push
popa
movsl
test
test
xor
mov
ds
test
out
dec
mov
pop
adc
loop
xchg
and
mov
mov
js
xchg
push
enter
push
jle
inc
out
xchg
inc
cmp
movsl
inc
mov
and
imul
xchg
repnz
jae
jmp
sahf
pusha
mov
popf
fidivrs
add
loope
sbb
add
push
pop
sbb
add
lods
inc
dec
inc
push
sub
inc
dec
cmpb
mov
nop
sbb
cmpb
jp
inc
dec
xchg
adc
jle
fmulp
jg
pushl
call
sbb
mov
lahf
das
push
orl
imul
cmp
mov
jl
pop
test
mov
stc
lea
dec
ret
jo
movsb
jno
pop
xchg
cmc
dec
mov
pop
xchg
cld
jmp
and
pop
nop
xchg
shl
lds
jecxz
arpl
push
jl
fadd
cmpsb
inc
mov
stos
sub
loope
test
cwtl
adc
cmp
and
pop
xchg
add
xor
xor
lcall
and
inc
adc
rolb
pop
mov
and
xor
sub
cmp
or
nop
lods
fs
jge
out
push
sti
dec
mov
xchg
aam
clc
das
mulb
cmp
and
sbb
or
dec
sbb
movl
adc
add
in
lds
sbbb
jno
jnp
test
insl
ljmp
insb
jno
js
mov
pop
pop
push
jle
pop
lret
xor
and
xchg
lock
jmp
aas
inc
pop
ss
into
popa
mov
adc
xchg
in
dec
add
sbb
ret
shrb
loope
sbb
add
push
nop
pusha
jle
andl
sub
loope
dec
lods
arpl
cmpb
or
mov
pop
inc
and
sbb
loopne
cmp
imul
insl
inc
inc
jp
or
ret
in
lcall
lret
mov
ficompl
dec
aas
sahf
in
sbb
mov
mov
fimull
xchg
lock
dec
test
add
sbb
ret
mov
cmpsl
fwait
dec
lds
xor
rcll
les
push
nop
fsubrs
loopne
sub
xchg
jp
add
push
mov
rorl
cld
mov
inc
imul
pop
cmp
adc
pop
hlt
gs
loop
jg
or
popa
ljmp
xor
xchg
mov
fdivr
pop
aam
add
push
push
movsl
mov
out
sub
sub
mov
or
add
mov
adc
repz
pop
nop
jmp
and
into
iret
add
in
mov
sub
push
sub
punpckldq
adcl
and
scas
loope
es
or
mov
in
pop
lock
dec
adc
lock
movsb
cmpsl
testb
xor
pop
sbb
cwtl
call
cld
pop
movsl
cltd
jmp
es
xor
aam
fadds
or
xchg
sub
xor
mov
dec
push
ret
sbb
xchg
lahf
mov
sbb
jmp
cmp
dec
jg
test
xchg
aam
or
sub
cmpsb
sub
push
mov
or
pop
popf
in
fnstcw
aas
jo
pop
test
cmpsb
es
fsubs
push
lret
iret
insb
cmp
es
cvttps2pi
add
loopne
icebp
jmp
mov
sub
shrb
inc
cltd
cwtl
test
in
mov
icebp
xchg
mov
sub
in
inc
pop
int3
push
lsl
pop
leave
and
mov
jmp
push
or
fwait
ret
fadds
adc
and
adc
adc
inc
dec
in
jp
sub
loopne
fildl
push
add
jns
cld
or
pop
loopne
mov
popf
std
adc
mov
dec
or
je
mov
rorl
and
lret
mov
jl
jno
outsb
or
pop
xor
cmp
cmp
xor
lret
mov
js
jns
out
fwait
dec
cld
or
sbbl
inc
jmp
add
jle
mov
mov
and
adc
js
adc
add
or
push
repnz
adc
shrb
movsb
lret
aas
lock
rolb
pop
jl
inc
inc
cmp
pop
cmc
inc
popa
or
xor
mov
add
nop
outsl
inc
cmp
push
mov
jge
cmc
ljmp
pop
adc
mov
lcall
mov
int3
add
pop
ljmp
pop
stc
shrl
cltd
ret
jae
xchg
and
negb
dec
and
test
or
cld
xchg
ja
es
repnz
xor
cmc
xchg
and
jp
arpl
pop
xchg
push
aas
jl
dec
and
or
or
jb
ds
dec
dec
pop
push
inc
fcoml
xchg
test
mov
stc
xchg
aas
or
dec
cmpsl
or
inc
imul
test
pop
psrad
add
test
gs
or
pop
lock
sahf
ds
nop
add
cmp
and
push
sbb
pop
xor
mov
lcall
add
test
dec
cmp
movsb
and
and
faddl
orl
enter
fbstp
cmp
adc
mov
ss
mov
popf
lret
shlb
inc
pop
or
pop
mov
daa
jno
cmp
loope
fadd
adc
xor
cli
or
xor
mov
cmc
adc
jle
push
xor
add
sbb
push
pop
pusha
loopne
out
fidivrl
jnp
pop
aaa
sub
mov
fwait
rclb
lock
das
add
mov
adc
jle
lcall
pusha
jb
add
adc
jl
sbb
add
push
sbb
imulb
jb
pop
ljmp
aad
enter
or
lods
in
xchg
dec
xor
xor
pop
sbb
insb
cltd
sub
mov
adc
cld
aam
fdivrl
mov
or
inc
popf
add
scas
movsb
gs
add
jns
add
and
xor
add
test
jp
or
movsb
stos
and
push
call
and
mov
xor
mov
cmp
fistpl
clc
or
aam
mov
arpl
mov
pop
outsb
mov
scas
push
fstps
mov
cld
pop
lods
cwtl
fdivl
rorb
or
call
in
jo
add
mov
out
shll
ss
pusha
xchg
loope
pop
loop
push
pop
and
jne
in
ljmp
inc
daa
pop
les
mov
inc
in
xor
outsb
lea
inc
popf
or
jne
inc
sti
inc
loopne
or
lock
fidivrs
enter
cmpsl
dec
fwait
or
loope
jg
jmp
lea
xor
add
sahf
mov
sbb
push
insl
mov
cwtl
adc
insl
inc
sbbb
lret
jbe
push
cmp
inc
jne
cmp
xor
cltd
cs
mov
test
mov
jl
or
mov
mov
iret
stos
bound
sahf
clc
adc
jns
mov
push
jp
add
mov
lods
cmp
je
pop
dec
and
pushl
push
jbe
xor
push
mov
movsl
lea
mov
es
repnz
dec
pop
rcrb
outsl
stos
popl
dec
stos
mov
and
hlt
loopne
adc
mov
inc
jno
cld
mov
pop
enter
cmp
cs
push
movsl
sub
rol
lea
inc
xor
mov
xchg
dec
movsb
inc
jge
shrl
fistps
inc
jg
cmpsl
jne
sbb
sub
pop
and
lcall
inc
cmpsl
mov
xchg
pop
add
stos
xor
rcr
mov
std
sbb
ljmp
sub
xchg
ret
sbbl
xchg
inc
push
jl
mov
cmpsb
ss
rclb
adc
lods
add
jl
lea
mov
push
cltd
lods
nop
inc
mov
rolb
sub
inc
jmp
jge
dec
sub
dec
jg
imul
sub
scas
add
mov
cwtl
mov
rorl
mov
xchg
inc
or
mov
xor
into
adc
xor
jnp
mov
sbb
psrld
mov
mov
rorb
mov
sub
test
gs
cli
imul
popa
sti
or
or
pusha
pusha
push
cmp
push
clc
cmp
jge
sbb
push
pusha
aas
ss
jns
popa
dec
mov
aaa
adcl
mov
inc
mov
xor
cmp
adc
lahf
cmp
subb
cld
mov
cmp
add
pop
sub
jmp
pop
daa
cld
mov
popl
in
add
cwtl
sbbb
test
mov
js
mov
dec
enter
mov
std
pop
adc
mov
mov
in
movsl
push
in
jb
insb
je
stos
push
iret
shrb
inc
out
xor
and
cwtl
xor
stos
jmp
xlat
repnz
aas
pop
sub
pusha
push
pop
pop
lea
adc
adc
dec
jecxz
ret
loop
cmpb
outsl
push
inc
pusha
shrb
out
xlat
or
loopne
mov
cmpb
in
ljmp
les
or
xchg
rolb
xchg
sub
aaa
mov
div
sub
xchg
stc
jle
lock
iret
push
je
lcall
repz
cltd
push
add
mov
mov
adc
test
mov
ret
addl
mov
rolb
cwtl
cmp
not
and
jle
add
inc
pop
nop
xor
mov
imul
pop
loopne
mov
stos
jg
jge
andl
and
dec
lret
out
les
push
xor
mov
inc
loopne
mov
dec
mov
xchg
mov
cmp
inc
test
bound
mov
push
push
adc
shll
xor
dec
adc
out
mov
push
enter
dec
fs
stos
cs
or
and
mov
sub
mov
add
loopne
push
cltd
xor
add
in
xchg
stc
lret
enter
push
xchg
mov
inc
call
adc
mov
fldl
insb
lret
mov
nop
std
mov
inc
pop
pop
neg
in
sub
sbbl
cmp
rclb
add
call
xchg
ficoms
clc
inc
fwait
and
in
mov
and
mov
test
rcrl
stos
bound
lds
inc
sbb
lea
sub
mov
gs
mov
incb
pop
movsb
dec
cmp
pop
xor
test
fstps
xchg
iret
movsb
outsl
lds
sbb
mov
mov
add
cld
loop
pop
push
pusha
rorl
rcll
sbb
mov
fstl
push
aam
scas
jmp
and
lcall
and
lahf
cwtl
bound
inc
adcb
bound
sub
jg
psubusb
inc
xchg
gs
and
adc
and
cmpsb
inc
or
aad
sbb
push
sbb
mov
xor
sar
pushl
cld
pop
aas
pop
js
jbe
ret
dec
addb
sub
out
rolb
psubw
sbb
fildl
add
mov
shl
inc
cmp
inc
jno
mov
add
jnp
nop
jg
sbb
js
adc
or
jmp
sub
push
xchg
inc
lret
mov
or
in
clc
jno
les
imul
inc
pop
mov
add
testb
pusha
movsb
aas
fcmovu
jp
xor
jmp
mov
std
cltd
cmp
lods
and
add
dec
inc
arpl
dec
aas
scas
js
rcr
cmpsl
in
stos
mov
dec
sbb
out
pop
sub
ret
add
xchg
out
cmp
inc
push
out
add
call
add
ficomps
pop
inc
mov
pop
xchg
mov
and
das
mov
adc
xchg
adc
arpl
add
mov
or
sbb
adc
lcall
sub
cmp
bnd
cwtl
pop
fcmove
pop
clc
aad
sbb
xchg
ds
mov
out
shlb
xor
mov
scas
mov
and
sahf
pop
xchg
ss
stos
cmp
xchg
sbb
sbb
push
lods
in
data16
push
shlb
in
sbb
mov
outsb
es
and
ret
sub
dec
xchg
jo
pop
lret
inc
mov
inc
or
push
mov
sahf
xor
lcall
in
jo
subl
and
daa
jge
sbb
out
ss
out
out
xchg
lahf
loopne
mov
cmp
jge
movsb
add
or
sbb
mov
mov
inc
clc
outsb
or
imul
cmp
pop
cmp
mov
cmpsb
pop
jmp
pop
movsl
cmp
das
xor
jno
imul
mov
jg
xor
mov
clc
adc
sub
sarl
mov
sbb
daa
xlat
ds
cwtl
sbb
jno
es
cmpsb
sbb
pop
or
fisubrs
fwait
sub
jo
push
or
sbb
xor
in
jno
fwait
cmpsb
cmp
xor
adc
std
aam
mov
sbb
inc
xchg
or
cmp
mov
dec
push
les
cmp
lret
and
pop
adc
and
mov
add
mov
push
xor
xorb
cwtl
xchg
outsb
pop
mov
lods
xchg
and
lret
cmp
stos
outsb
into
add
lcall
lock
pop
lret
shll
cmp
int3
mov
subb
cld
mov
dec
xor
aas
leave
iret
sbb
mov
loopne
and
das
jne
loope
adc
scas
scas
jle
pusha
xor
and
ret
out
fbstp
out
cltd
int
cmp
aas
clc
call
and
mov
add
sbb
push
loop
aas
dec
aaa
inc
rorl
and
das
les
push
jo
stos
add
inc
dec
mov
stos
int
mov
lock
mov
xor
sbb
push
insl
scas
mov
outsl
or
pop
lds
fsubr
jns
std
mov
imul
xor
xchg
mov
xor
mov
hlt
push
push
jne
add
mov
outsl
pop
sti
cmp
push
adc
aas
jg
add
loopne
fsubp
hlt
cmp
sub
or
cmc
aam
mov
insl
adc
cld
in
pop
adc
cwtl
sub
push
pop
loopne
aad
hlt
repnz
leave
int
add
lcall
jl
sub
js
cmp
aad
push
mov
aam
ja
idivb
pop
int
fcoml
push
sbb
mov
fsubrs
push
cltd
clc
leave
daa
jg
stc
xchg
out
cmp
ljmp
das
call
sbb
test
ficompl
mov
sub
push
mov
inc
jle
or
add
inc
jne
lret
aaa
test
pop
jl
add
rcrl
mov
pop
cmp
rolb
test
daa
icebp
ror
repnz
dec
lods
push
repz
pop
add
push
fmul
and
or
pop
repnz
xor
inc
or
jnp
push
or
or
loopne
pop
lcall
test
out
xor
js
push
mov
inc
or
mov
push
lods
pop
xchg
js
shrl
loopne
aad
jecxz
adc
sbb
jg
inc
jbe
push
ret
dec
jo
clc
inc
jbe
aam
arpl
gs
ss
and
decl
mov
pop
push
pop
lea
lds
jbe
test
fs
js
xor
pop
lret
xor
lea
scas
js
loope
sbb
mov
roll
inc
sbb
xchg
lea
inc
xchg
xchg
ror
cs
std
adc
and
xchg
xor
jle
test
lock
out
test
jecxz
testl
cmp
daa
inc
lsl
adc
movb
arpl
pusha
pop
sub
sbb
inc
int3
gs
aam
arpl
sub
imulb
lock
cmpsl
adc
jle
jne
int3
sub
std
lods
call
cmc
xchg
inc
jnp
dec
push
fmuls
ss
jecxz
add
roll
lds
push
std
cmpsl
and
add
je
add
test
mov
mov
in
cltd
mov
jns
sub
sbb
lods
sub
je
movsb
mov
push
adc
cli
ret
xor
repz
shll
jg
xchg
cs
sbb
loop
fnsave
push
sub
insl
mov
mov
push
outsb
aam
cmp
test
rcll
lahf
dec
pop
jl
or
xchg
lret
push
mov
popf
mov
and
or
pop
out
fwait
push
lods
push
xchg
fiaddl
mov
sbb
addr16
xor
or
leave
inc
and
jg
mov
xor
movsb
push
jno
les
add
mov
add
jmp
cmp
adc
mov
lret
test
sub
subl
les
loop
lock
nopl
cld
jbe
hlt
cmp
mov
adc
pop
aam
push
push
test
adc
arpl
add
scas
movsl
test
shlb
cmpsl
cmp
add
jp
lock
loop
int
mov
sub
xchg
pop
mov
and
mov
pop
sarb
adc
leave
ljmp
es
xchg
movups
add
adc
jge
sub
ret
pop
sbb
lock
sahf
lret
jnp
inc
cmpsl
mov
cmpl
push
xchg
inc
mov
mov
jb
aad
sbb
cmp
push
dec
incl
pop
call
inc
xchg
stc
add
sbb
pop
add
adc
and
stos
add
and
aad
nop
add
dec
xor
aad
fstl
mov
cmp
fdivr
test
mov
dec
movsl
dec
sbb
mov
sub
sahf
pop
push
inc
cmp
pop
pop
hlt
pop
and
inc
rclb
je,pn
cwtl
dec
cld
or
popa
test
arpl
pop
inc
aaa
rcl
cmp
jbe
cmc
or
cld
imul
repnz
clc
sbb
pop
fcomip
or
call
dec
push
repz
push
test
and
sub
jmp
mov
cli
inc
adc
push
into
add
cmp
mov
add
dec
test
xchg
pop
aad
aam
ret
mov
jg
shll
jl
rclb
bound
mov
cmp
xchg
sarb
push
cmp
xchg
dec
in
pop
add
mov
popa
adcl
push
cld
add
loop
inc
test
sahf
fwait
xchg
push
inc
push
pop
cmp
jmp
add
add
mov
push
xchg
movsb
fistpll
enter
cmp
jnp
cli
aam
or
out
mov
adc
xchg
cmp
add
dec
nop
inc
repnz
jns
insb
adc
sar
cmp
lret
adc
jle
jmp
movsl
cmp
cmpsl
fidivs
pop
call
jo
xchg
bound
jae
iret
push
cwtl
inc
inc
jo
add
and
shl
add
xor
inc
lea
dec
add
mov
call
push
mov
push
sub
ljmp
cmp
cmp
dec
sbbl
pop
icebp
adc
jne
aas
es
jmp
jecxz
ljmp
incb
dec
or
or
add
or
mov
jp
stc
or
cmc
bound
loope
xchg
movsb
jb
ss
or
imul
clc
fildll
push
or
or
dec
jmp
incl
int
mov
repnz
roll
and
add
add
xchg
jo
aas
nop
adc
and
outsb
lds
aas
sub
adc
into
das
jno
mov
xor
add
mov
pop
add
ret
pop
push
sbb
inc
or
or
fs
pop
mov
rolb
cmp
ss
cmp
les
call
push
call
repnz
nop
or
test
mov
or
inc
or
inc
aam
adc
dec
out
dec
or
xlat
popl
xor
add
push
out
fnstenv
cmovno
jo
in
xor
lret
sarb
outsl
scas
cli
lret
push
in
lret
pop
pop
call
in
xchg
cmp
in
leave
jge
push
test
sub
mov
adc
js
xchg
outsb
outsl
jo
push
test
push
xchg
stos
sbb
mov
and
xor
in
jmp
cmc
add
pop
add
xchg
sub
sbb
clc
add
dec
repz
loope
aaa
mov
loopne
push
rolb
push
out
pop
cmp
inc
pop
mov
and
cmp
inc
or
xor
icebp
inc
stos
lcall
lret
std
mov
add
loop
cli
cmp
mov
xor
push
ret
cld
jmp
scas
sbb
and
sub
jecxz
mov
jg
inc
ljmp
mov
add
call
mov
fdivrs
xor
and
ljmp
inc
aad
adc
inc
jp
mov
loop
jmp
mov
fistpll
es
xchg
add
roll
lea
rcrb
jnp
test
pushf
mov
lahf
mov
dec
push
adc
es
test
jbe
jg
inc
pop
or
shrb
jnp
les
lcall
popf
icebp
add
in
gs
arpl
cmc
int
lcall
cmp
mov
inc
aas
fwait
xchg
jno
incl
push
js
into
mov
jno
outsl
hlt
imul
orl
fstpl
cld
das
punpckhdq
lds
and
sbb
in
sub
lea
ds
jl
fadd
sbb
inc
test
js
or
rcrl
sub
js
aam
pop
test
sbb
mov
testl
push
loopne
inc
sub
pop
add
inc
fwait
out
sti
add
int3
xchg
mov
cmp
mov
insb
loop
cmc
jo
cmp
out
or
fistps
sub
nop
pushf
dec
out
cmpsl
jge
sbb
outsl
dec
std
pop
fs
mov
shlb
cmp
icebp
xchg
xchg
push
jecxz
les
inc
stc
int
add
cmc
dec
test
fwait
sub
push
pusha
xor
mov
xor
pop
das
popf
pop
or
pushf
jle
or
mov
add
js
sbb
pop
inc
inc
lahf
jmp
pop
cmc
dec
push
sbb
adc
cmp
and
popf
popa
es
repz
adc
mov
add
pop
sbb
gs
jmp
xchg
add
mov
ljmp
outsb
imul
clc
lcall
cmpl
decl
sarb
xchg
mov
dec
adc
fcomip
push
mov
testb
std
xor
adcb
sbb
leave
sahf
dec
dec
movsl
fcompl
cld
cmp
push
sbb
and
xchg
and
idivb
xchg
cli
pushl
addr16
insb
clc
push
dec
ds
ljmp
xchg
je
sub
xor
inc
fwait
rcl
xor
loop
sahf
enter
push
into
push
imul
cmp
jp
mov
outsb
mov
pop
inc
xor
addl
cmp
lahf
stc
imul
push
xchg
les
call
add
in
adc
dec
scas
push
ret
cltd
add
fistps
dec
mov
ficomps
mov
inc
in
cwtl
push
lea
popf
push
mov
and
jo
sahf
mov
pusha
jno
lcall
fmulp
mov
adc
push
mov
and
mov
dec
fdivrp
fsubrl
add
loopne
xchg
mov
or
call
xchg
nop
xchg
daa
jnp
test
lock
fldl
jbe
or
and
call
and
out
mov
or
push
mov
xlat
ss
cmp
mov
add
dec
add
add
dec
mov
clc
decl
push
imul
fldenv
pop
cli
pop
xorb
and
enter
pop
ljmp
cli
cmp
repnz
daa
leave
pop
lret
or
in
mov
xor
add
pushf
push
hlt
decl
sbb
push
sub
addb
adc
aas
aas
nop
jle
dec
xor
rcrb
fmull
into
out
inc
cmp
push
repz
jo
shld
dec
push
out
xlat
sub
push
ret
push
dec
sti
dec
or
cmp
push
ljmp
xor
fs
pop
rclb
test
popa
adc
and
ss
scas
dec
adc
scas
dec
mov
xchg
mov
cmp
jbe
faddl
adc
inc
fs
les
mov
in
cld
lds
mov
inc
in
dec
push
push
pop
mov
adc
sbb
pop
cld
add
cmp
dec
outsl
adc
lcall
jb
xchg
push
das
inc
pushf
subb
pusha
aaa
mov
arpl
jg
jg
ret
push
mov
push
push
aaa
aaa
sbb
mov
pop
dec
inc
call
xor
xor
jg
lods
pop
iret
aam
or
out
mov
xor
jmp
cltd
adc
mov
testl
xchg
leave
add
push
and
decl
inc
lret
sub
sbb
xchg
inc
std
test
add
add
sub
incl
sub
fs
sub
jp
decl
pushf
repnz
push
test
lds
jo
cld
nop
setp
out
adc
pop
enter
repnz
sub
jbe
stc
cwtl
or
xor
ja
mov
mov
lcall
repnz
or
ret
mov
or
inc
pop
loope
cmp
mov
sub
mov
cld
iret
dec
fimull
movsb
outsb
and
mov
push
shl
filds
adc
mov
aas
jno
imul
dec
and
add
dec
fmuls
rorl
inc
cmp
orl
fstpt
inc
insb
adc
cmpsl
out
adc
aad
in
pop
shl
stc
and
cmpsl
scas
les
dec
and
xchg
inc
in
ja
shlb
faddl
das
add
sahf
js
jg
out
ds
rcll
push
addb
and
rol
lcall
xor
inc
enter
ficoml
fyl2x
pushl
mov
shr
les
mov
sub
jb
sbb
jne
cltd
inc
cld
fisttpl
and
or
xchg
mov
sbb
pop
fildll
aad
imul
test
sarl
pop
gs
aam
or
dec
and
push
and
call
js
and
test
jnp
leave
push
dec
mov
mov
cmp
js
scas
cmc
int
xchg
add
dec
sbb
rcr
push
cmp
mov
inc
xor
fisttpl
push
cmp
inc
sub
push
push
inc
push
cmpsl
mov
and
addr16
sar
mov
push
loop
and
sub
push
and
popf
xor
xchg
add
inc
mov
adc
sub
mov
inc
dec
sub
icebp
mov
jp
les
loope
std
sbb
mov
in
ret
das
push
in
inc
addl
daa
ljmp
cwtl
cmp
dec
add
loope
or
ret
jmp
mov
shl
fsubs
sbb
sbb
ret
xor
dec
icebp
jg
jo
jnp
mov
sbb
dec
sub
loop
mov
or
mov
jmp
test
mov
jp
int3
jae
mov
cmp
or
mov
hlt
xchg
das
push
dec
test
jmp
sub
cmc
add
adc
xchg
nop
push
enter
loopne
jecxz
sbb
scas
or
push
je
sub
nop
in
test
xchg
adc
ret
add
jg
insb
jp
adc
push
sbb
pop
jge
jle
js
loope
lahf
std
enter
or
lcall
sbb
xor
mov
xchg
xor
lret
mov
or
adc
out
scas
xchg
sbb
push
add
scas
loopne
ja
mov
rolb
dec
divl
rcl
call
adc
jnp
jle
mov
pusha
xchg
pop
mov
test
push
pop
in
sub
sti
and
add
adc
pop
movsl
arpl
popf
cmp
ret
mov
cli
sti
sub
shll
daa
pop
clc
xor
into
incl
adc
pop
xor
jns
stos
das
add
fstl
adc
xlat
fwait
ja
inc
or
push
cltd
dec
mov
and
inc
mov
xor
add
iret
pop
lret
mov
mov
cmp
sbb
je
mov
in
sbb
ret
or
cmp
stos
pop
sbb
add
jecxz
push
daa
lahf
sub
jecxz
xor
mov
xchg
pop
push
lock
adc
pop
xchg
or
cli
out
xor
fsubrl
xor
cmpb
sub
lcall
rolb
lahf
push
mov
jecxz
stos
sahf
sub
roll
xchg
insl
cld
cmp
and
push
or
mov
xchg
inc
adc
mov
dec
inc
or
inc
add
cmp
mov
lahf
js
loope
ljmp
je
insb
rorb
js
decl
add
sub
leave
loop
rolb
out
and
inc
in
cli
jg
xor
inc
lock
dec
jp
int3
addr16
jecxz
cs
aaa
aas
loop
mov
int
or
mov
mov
mov
pushf
mov
mov
mov
addb
or
push
mov
lret
cs
cmp
and
mov
js
movsb
lcall
imul
int
mov
repz
stc
sbb
es
sbb
or
push
aad
adc
and
xor
add
sar
es
xor
mov
xchg
movsb
push
mov
xor
icebp
xor
push
pop
scas
mov
sub
inc
or
dec
add
pusha
add
addl
or
fcomps
dec
xchg
jg
int
leave
cmpsl
jl
popa
pop
ss
pop
push
push
sar
lahf
dec
xchg
lock
bound
ja
aam
movl
cmp
xor
decl
out
push
aam
add
mov
ja
xor
je
testb
adc
fucompp
ds
ljmp
push
or
mov
mov
lds
inc
clc
add
pop
cmp
xor
addb
pop
hlt
lahf
das
and
push
push
cmpb
out
popa
outsl
cli
mov
and
dec
das
and
scas
enter
and
iret
fnstsw
lods
mov
dec
outsb
fcmovb
cld
ljmp
ja
idivl
andb
movsb
push
sbb
orl
bound
or
cmp
adc
dec
into
mov
bound
adc
jmp
lods
movsb
xor
add
cmpl
sahf
sbb
lahf
dec
inc
ljmp
mov
lcall
pushl
arpl
dec
mov
xor
xlat
test
lea
adc
pop
pop
aas
loopne
jns
cmp
pop
int
dec
add
xor
repnz
incl
test
mov
bound
jb,pt
hlt
xchg
hlt
out
insb
push
lds
push
enter
mov
xchg
pusha
adc
dec
fsubs
dec
xor
lret
cmpl
sbb
lret
leave
cld
ja
add
jae
cmc
add
popa
and
pop
mov
imul
daa
xchg
jge
jg
cmp
nop
in
stos
mov
mov
cli
cmp
pop
pushaw
inc
pop
fdivr
fstpt
pusha
push
pop
pop
jl
pusha
incl
cmpl
fwait
ss
mov
jl,pn
lahf
xor
mov
sbb
xchg
xor
cwtl
add
and
ror
sti
movsb
stos
loopne
negl
sbb
jle
push
mov
add
mov
dec
out
outsb
ljmp
add
lods
jmp
push
mov
sub
pushf
bound
popa
mov
inc
sub
mov
clc
add
sub
jmp
addr16
cmp
adc
pop
lods
jmp
nop
std
inc
cmc
jp
xor
aas
std
cmp
sbb
add
cmp
lcall
wrmsr
inc
fstl
decl
pop
stc
pop
xchg
and
fildll
cmp
xor
cwtl
inc
dec
fcoml
mov
inc
repnz
testb
mov
jmp
mov
das
fucomip
inc
je
push
sbb
ja
lret
call
gs
cmc
push
push
lea
lcall
sbb
xchg
jmp
in
outsl
jge
jns
jo
push
test
ss
xorb
lret
pop
mov
cli
xchg
cmp
mov
add
jg
inc
dec
shll
mov
mov
mov
xor
int
rol
push
data16
pushf
push
push
inc
xor
shlb
jp
dec
pop
jmp
inc
dec
pop
mov
lahf
pop
daa
mov
clc
jecxz
arpl
xor
lds
inc
test
and
orb
lock
jnp
notl
das
cmp
inc
testl
aaa
outsl
scas
pusha
and
mov
rol
pop
dec
mov
out
popa
xor
imul
pusha
xchg
sub
ret
jl
aaa
jmp
incl
xchg
scas
or
sbb
in
or
testb
sub
add
mov
les
dec
xchg
jl
xchg
les
push
lock
nop
scas
inc
int3
sub
lock
jmp
xor
div
dec
jns
push
call
addl
cmc
sbb
lds
outsl
popa
aas
or
pusha
rclb
pop
add
xchg
xchg
cs
mov
mov
cmp
aas
xorb
add
jmp
andb
or
sbbb
mov
or
outsb
icebp
es
ja,pn
pop
sbb
push
leave
pop
scas
and
or
pop
mov
mov
jle
lock
loop
iret
in
fadds
cmp
fsubl
push
jge
jmp
pushf
fiaddl
cmp
cmpsb
bound
jb
or
in
adc
xchg
cmpsl
movb
ljmp
push
ds
das
addb
sub
rolb
dec
clc
or
jne
js
lcall
xor
adc
enter
out
test
cmp
xchg
cltd
cld
or
add
imul
sbb
pushf
jns
stos
ss
push
arpl
add
lcall
xorl
loope
xchg
sbb
push
sub
insl
fbld
faddl
xchg
or
inc
fsubl
pop
inc
ljmp
scas
and
sbb
xor
mov
mov
xchg
push
xor
add
mov
ss
jl
rcrl
add
lods
ss
ret
out
cmc
push
mov
push
imul
imul
clc
mov
mov
or
add
inc
cmp
cmp
pop
xchg
loopne
cwtl
xchg
scas
int
stos
sbb
icebp
or
sub
sbb
les
lock
cmp
adc
push
push
sbb
sub
cli
dec
sub
lods
adc
xor
jno
das
ja
xor
xor
adc
cmpb
adc
test
xchg
sbb
and
pop
sbb
shlb
leave
xor
xchg
xor
icebp
and
xor
push
dec
pop
and
add
sub
mov
rcrb
mov
jne
mov
data16
xor
adc
cwtl
inc
push
xlat
lds
cmp
push
lds
and
jle
pusha
fs
jecxz
or
scas
add
aaa
or
jbe
filds
shlb
add
shrb
sti
je
test
xor
and
popf
ror
loopne,pn
out
jl,pt
add
pop
std
idivl
int
and
out
mov
stc
or
call
enter
cmp
sbb
add
loope
xor
add
pop
aam
xor
xchg
repz
jne
roll
out
add
inc
or
cmpsl
popa
mov
xor
inc
cs
cmp
hlt
and
mov
and
in
ret
retw
or
mov
outsb
popa
or
loop
adc
ret
mov
xor
or
xor
and
inc
fwait
mov
or
xchg
das
stc
dec
cli
jmp
and
xchg
sbb
and
in
mov
pop
and
add
ror
cmp
xchg
outsb
outsb
and
sub
sbb
dec
adc
aaa
int3
inc
adc
pop
mull
das
xchg
hlt
stos
sbb
stos
ret
jmp
or
lods
loopne
rorl
jb
mov
ss
mov
adc
shlb
jns
sti
in
xchg
iret
mov
dec
mov
test
jle
bound
mov
or
pusha
jl
lock
fldenv
clc
add
mov
out
out
or
jmp
add
or
add
mov
js
stos
mov
loope
push
cmp
fs
pop
jg
sarb
shr
xlat
xorb
or
out
pop
shr
jecxz
fdivr
lcall
shrl
jmp
or
jns
stos
pop
push
pop
lea
bound
loop
cmp
dec
mov
dec
dec
adcb
cmp
sub
push
push
and
cmp
cld
mov
sub
hlt
fidivl
mov
insl
dec
rclb
imul
xor
into
jnp
add
mov
push
jecxz
mov
inc
pushl
inc
cmc
pop
or
sbb
ret
out
pop
mov
sub
in
add
push
xchg
cli
jmp
repnz
sbbb
mov
test
aaa
into
push
movsl
mov
cmp
fimull
xchg
cmp
mov
addr16
hlt
rolb
ss
dec
cmp
xchg
mov
scas
ret
add
mov
or
sbb
mov
rorl
jecxz
mov
test
jno
cli
xchg
aas
outsl
je
inc
testb
ud2
divb
fcmovnb
mov
sub
fwait
jnp
mov
js
mov
inc
jmp
dec
fldpi
mov
push
popa
sbb
and
hlt
daa
adc
push
adc
sub
and
shrb
cld
imul
pop
push
inc
pop
clc
movb
adc
mov
rorl
adc
int
sbb
pop
sub
adcl
jg
popa
mov
loopne
or
cmp
ljmp
xor
push
and
pop
sbb
pop
jp
mov
inc
adc
mov
or
inc
jae
mov
push
push
pop
lret
push
loop
test
jl
psraw
sbb
test
jno
ret
nop
xor
add
pop
in
xchg
leave
int3
inc
pushf
loopne
add
push
sbb
fadds
xorb
or
cmp
jge
jo
ret
inc
js
adc
mov
pop
addr16
arpl
push
rclb
pop
in
sub
jbe
and
inc
scas
outsb
ss
push
push
add
mov
jl
jp
dec
xchg
cmp
add
movsb
xchg
jmp
jp
pop
mov
or
xor
pop
add
add
imul
push
adc
and
pop
mov
sub
adc
rorb
mov
add
lret
popa
fnstsw
or
xchg
or
mov
cs
push
sub
adc
clc
pop
rorb
imul
cmpb
push
out
lret
pop
mov
xchg
loopne
imul
or
or
or
andb
orb
ljmp
ret
add
aaa
jg,pt
jle
std
popa
aam
movsb
push
push
sarl
mov
out
mov
jb
daa
mov
jb
mov
mov
out
push
mov
enter
dec
push
xor
lods
cmpl
push
subl
into
fs
pop
jns
arpl
les
jnp
pop
sub
sbb
or
dec
mov
inc
xchg
inc
decl
and
inc
or
sbbb
repz
jle
jg,pt
cli
push
dec
mov
cmp
out
sub
xlat
enter
mov
addl
xchg
inc
jo
xor
cmp
insl
pop
add
inc
imul
mov
sub
push
jle
add
cmc
out
shlb
dec
std
and
push
fwait
sub
shr
clc
jnp
sub
or
clc
or
and
add
aam
sub
push
loopne
stc
inc
xchg
mov
hlt
push
jg
js
sub
sub
push
cmc
inc
xor
js
lock
push
cli
repnz
ret
sbb
sub
movsl
dec
adc
xor
mov
sub
filds
iret
repnz
shrb
mov
push
ja
and
mov
cli
or
mov
pop
xchg
mov
ds
daa
hlt
leave
push
cmp
pushf
or
jecxz
insl
sbb
xlat
cs
sub
jle
pop
stc
adc
mov
popf
scas
push
ret
movsl
shll
add
jp
mov
ljmp
fs
test
lcall
in
or
sub
sbb
push
sbb
fwait
xchg
pop
pop
xchg
push
add
or
push
adc
add
insb
adc
cmpsl
inc
stos
loop
or
movb
imul
inc
mov
popa
pop
or
xor
lock
fcompl
sbb
sub
popl
fcmovbe
ja
pop
and
mov
icebp
add
push
jno
cmpsl
popa
push
js
dec
sub
js
pop
add
dec
mov
aaa
push
test
pop
adc
mov
xchg
push
xor
hlt
cmp
push
loope
pop
pop
pop
mov
xchg
adc
add
cmpb
testb
xchg
jae
movsl
lock
jl
lret
js
add
outsl
pop
mov
repnz
or
inc
pop
or
add
out
add
adc
adc
dec
dec
jae
pop
sar
and
sbb
insb
rorb
cmp
insl
xchg
or
and
sarb
dec
xchg
movsl
out
aaa
andb
clc
icebp
xlat
add
sbb
imul
jle
sub
sub
jecxz
jo
push
lock
cmpsb
and
push
push
std
dec
insl
pop
adc
sahf
fmull
jecxz
add
and
call
int3
popf
inc
mov
or
add
cld
or
xchg
jmp
sub
xchg
sub
pop
and
xchg
pop
shll
mov
cmpsb
xchg
aas
aaa
push
add
lea
insl
out
pop
shll
leave
xchg
sub
adc
add
pop
repnz
sub
pop
sub
dec
loope
mov
sub
lret
fcomps
adc
xchg
stos
lods
mov
dec
mov
jecxz
adc
push
push
push
in
shrb
xor
sub
add
mov
arpl
mov
jae
inc
jmp
add
adc
imul
mov
stos
and
dec
incb
add
cs
mov
out
or
jne
int3
rclb
mov
in
test
xor
inc
imul
fbld
sarl
cmpl
jbe
repnz
pop
mov
inc
daa
ret
push
cmpsl
js
movsb
mov
lods
sub
cmp
adc
cmp
or
mov
nop
fisttpl
sbb
lret
insb
out
out
sub
xchg
imul
pop
pop
push
lock
incb
cld
pop
aas
bound
loopne
daa
or
push
fstps
and
ds
out
or
dec
push
dec
ret
jecxz
push
xor
xor
cmp
jne
les
jl
fistpll
jle
cmpb
addr16
int3
ss
push
clc
addl
sub
lcall
cli
in
cmp
xor
cmp
and
pop
or
loope
jp
sti
outsb
inc
add
ja
push
pop
inc
and
fists
aas
int3
data16
jecxz
bound
lds
adc
push
add
divl
incl
mov
fisttps
test
push
test
andl
pop
and
movsb
scas
jno
mov
push
or
pmulhw
add
fs
pop
add
push
fwait
sbb
rcrl
xchg
popfw
mov
clc
shrl
insl
test
lret
pop
jl
pop
jg
xchg
sbb
ret
insl
test
push
movsb
ljmp
dec
lcall
xchg
mov
lcall
inc
xchg
and
adc
sub
jp
ror
sub
pop
xchg
inc
ret
jo
mov
sub
rorl
push
jg
pop
dec
inc
xor
pop
sarw
mov
push
add
rorl
lahf
mov
mov
and
push
pop
push
cld
loopne
cmp
pop
sub
int3
addb
xchg
cmp
addb
adcb
pushf
in
lcall
add
les
mov
lock
xchg
je
cs
jb
leave
add
push
arpl
popa
mov
fdivrl
cld
add
aam
cltd
pop
aam
ja
shlb
inc
or
add
ss
out
and
and
dec
leave
mov
jmp
mov
xchg
into
lods
push
pop
faddl
mov
popa
scas
or
leave
cmp
lea
add
mov
ficompl
add
mov
sbb
nop
pop
xchg
jb
push
push
stc
inc
and
xor
aaa
jno
mov
xchg
sar
ljmp
fcom
sub
fimull
mov
xchg
mov
lods
outsl
pop
stc
jg
nop
ljmp
rcrl
ds
test
mov
mov
popf
mov
ret
test
insb
push
out
fld
or
hlt
jle
mov
xchg
push
lahf
mov
add
dec
cmp
add
in
xchg
adc
cli
fs
adc
jo
sub
roll
push
and
mov
inc
add
data16
imul
pop
cld
mov
lcall
fsubs
jp
in
jnp
pusha
and
and
sbb
add
inc
mov
ljmp
mov
pushf
xchg
pushf
daa
add
adcb
in
cmp
pusha
add
mov
pop
sub
call
and
decl
cmpsb
adc
addr16
mov
loop
cwtl
add
and
outsl
mov
add
cmp
or
sub
mov
hlt
cwtl
adc
int3
loope
jno
sbb
mov
xchg
dec
or
pusha
test
lods
icebp
push
daa
mov
dec
jecxz
add
movb
push
ret
push
cwtl
test
and
data16
pop
popf
ret
imul
cltd
mov
dec
add
dec
sbb
mov
mov
stc
in
adc
jle
sbb
dec
outsl
pop
jp
mov
ret
addr16
xor
cmp
jp
add
adc
inc
inc
add
scas
out
inc
fs
pop
fiaddl
xor
cld
je
add
jg
ficomps
dec
lock
enter
dec
insl
mov
call
pop
je
mov
xchg
mov
or
xlat
push
dec
cli
aas
push
push
and
cltd
dec
push
xlat
jg
xor
xchg
inc
nop
cmp
loope
pop
pop
add
cmp
fisubl
frstor
jne
or
fadd
nop
and
pop
jp
push
mov
in
mov
dec
push
add
lahf
pop
in
cmp
inc
add
in
dec
inc
xor
clc
loope
xchg
mov
sbb
loop
mov
ret
scas
add
pop
insl
cmpsb
cmpsb
inc
nop
adc
loopne
cs
pop
push
xor
js
jge
add
test
sbb
fildl
lahf
test
push
add
sub
out
es
jecxz
cmp
jmp
cmp
movb
pop
or
jle
ljmp
dec
xor
addr16
pop
jg
popf
lcall
adc
sbb
or
sub
fsubrp
sbb
lahf
lods
mov
lods
push
push
mov
xchg
mov
pop
dec
push
pop
es
dec
icebp
sub
andnps
mov
jmp
popa
xor
sbb
sarl
push
out
into
lcall
push
sbb
ss
cmpsl
fs
test
mov
adc
in
push
cmp
or
leave
cmpsl
push
xor
sbb
movsl
xchg
clc
sbb
mov
clc
clc
jno
add
sbb
pop
mov
lds
repz
pusha
out
adc
fcoms
fldcw
test
mov
mov
inc
ret
shll
js
add
fs
mov
inc
or
xchg
adc
imul
pop
hlt
mov
roll
mov
in
mov
je
jg
sbb
in
cmpsb
push
das
lahf
scas
jo
shlb
movsl
cld
lret
dec
xor
test
lock
jns
sub
hlt
add
addr16
in
incl
data16
mov
xor
repnz
std
push
decl
out
push
in
pop
add
fstl
mov
pop
push
cmpb
jno
push
imull
cmpl
movsb
lods
lcall
mov
mov
sbb
cli
iret
call
jb
add
push
mov
and
sub
jno
loope
inc
pusha
test
lods
pop
arpl
mov
cmp
call
xlat
and
mov
pop
cmp
ficompl
decb
rorb
int3
mov
jnp
cltd
pop
inc
adc
ss
pop
adc
incl
shld
lods
push
jle
jle
mov
cmp
lods
adc
loop
out
mov
js
out
lds
int
test
movsl
cmpsb
pop
cmp
adcl
push
adc
aas
scas
rcrb
shlb
adc
inc
adc
or
ds
jg
es
mov
mov
hlt
dec
sub
fldcw
mov
pop
das
or
dec
sub
das
mov
sbb
xchg
pop
cmp
push
gs
sub
xor
les
lods
pusha
dec
out
ret
or
inc
pop
icebp
pushl
jge
or
cmp
jb
push
push
loop
stos
xchg
aas
mov
movsb
movsl
rcrb
fisttpl
das
xchg
lea
xchg
cmpsb
cld
test
add
call
cmc
add
test
jmp
in
ja
add
push
sbb
scas
mov
cmc
jmp
sub
xchg
outsb
mov
or
sub
fs
ud0
add
add
sbb
ljmp
sarb
pusha
les
rcrl
imul
repnz
pushf
pop
jge
mov
dec
outsb
mov
or
repnz
rol
mov
dec
scas
hlt
lcall
aam
cmp
in
pop
sbb
push
scas
add
inc
sbb
xorb
and
outsl
insb
mov
int3
add
cli
stos
cwtl
jle
push
dec
aas
loop
test
mov
loop
and
ss
and
xchg
cmpl
and
mov
lds
pop
push
xchg
mov
outsb
xchg
push
das
add
test
fadd
out
pop
or
lock
pushf
or
popf
cmp
push
pop
xchg
pop
xchg
pusha
cs
pop
notl
loop
dec
pop
mov
xor
rorl
test
shlb
lods
shrl
sbb
cmp
add
outsb
pop
sbb
jbe
mov
sbb
cmp
jnp
fdivr
or
sbb
xchg
lcall
testb
loopne
add
pop
stos
jl
insl
jmp
outsb
add
or
and
repnz
and
jle
dec
movsb
mov
out
sbb
cs
push
sahf
sbb
call
scas
and
inc
dec
jns
xchg
xchg
mov
pushl
inc
bound
into
ljmp
icebp
lds
xchg
mov
adc
or
ficoml
add
push
fcoml
jae
inc
pop
inc
ss
pop
aam
push
pop
push
movb
rcll
mov
jp
imul
ljmp
rorb
dec
cmovno
push
out
out
iret
rorl
imul
je
push
add
test
inc
mov
dec
jne
cmp
jmp
outsl
ljmp
adc
mov
inc
addl
cmp
mov
pusha
lsl
pop
push
or
lods
jno
adc
cmpb
cmp
and
mov
add
jb
je
or
push
shll
out
jp
mov
sahf
test
lea
repz
xchg
je
adc
mov
int
jne
cmp
mov
xchg
push
cmp
aas
adc
out
xor
js
push
sbb
or
int3
ret
inc
mov
fbld
inc
lods
sub
jge
jae
mov
aas
sub
add
movsl
gs
jg
icebp
sbb
aad
adcl
rcrl
cmc
mov
scas
pop
sahf
jecxz
bound
dec
or
cmp
movsb
sbbl
adcl
inc
jecxz
mov
push
or
cli
ljmp
xchg
ret
push
cmp
dec
pop
add
test
sar
incl
push
dec
dec
lret
jne
dec
add
fldt
xor
inc
sbb
cmp
xchg
leave
out
clc
push
add
punpckhdq
mov
in
mov
pop
hlt
mov
xor
es
loope
aas
mov
and
jmp
inc
add
or
jle
push
sub
push
sti
icebp
bound
sub
mov
pop
push
jne
add
add
test
lret
lcall
sub
add
sahf
mov
addr16
test
mov
dec
mov
fildll
dec
jno
icebp
mov
into
xchg
pop
sub
cltd
pop
pusha
lods
lcall
or
cmpsb
and
or
mov
dec
imul
xchg
cmpsb
sbb
fisubl
push
mov
cmp
adc
loopne
jmp
mov
push
mov
mov
test
cli
sar
mov
push
mov
mov
jmp
fnstcw
pop
into
push
pop
inc
ret
add
shufps
mov
cld
aas
test
add
loope
es
das
fdivp
xor
pop
pop
bnd
rcrb
loop
push
xor
mul
mov
mov
xchg
or
mov
mov
rcrl
jne
pop
sbb
and
mov
sbb
arpl
inc
adc
pop
pusha
pop
or
xchg
xor
pop
xor
push
ds
cmpb
xorl
or
mov
cmp
sbb
mov
or
std
jge
pushf
mov
and
mov
cli
jns
cvtps2pd
add
mov
push
aad
and
add
dec
int
pusha
movsb
scas
cld
cs
cmp
cli
mov
jg
push
push
jno
mov
sarl
add
xchg
jnp
xor
cwtl
lds
xlat
xchg
dec
call
jl
sub
cmp
sarb
popa
xlat
push
and
sahf
adc
xchg
lahf
ret
inc
dec
jmp
int3
xchg
loope
daa
inc
fs
insl
subb
or
sbb
pop
daa
or
add
dec
mov
lahf
fcmove
pushf
icebp
or
ja
mov
js
ret
out
cmp
sbb
push
push
cmp
push
sub
push
popl
aas
or
push
lea
das
clc
xor
or
sbb
push
sar
sbb
mov
lret
jl
sahf
clc
xchg
jle
inc
xchg
xor
loope
and
loope
movsb
sub
ret
mov
or
mov
movsl
mov
mov
movsb
dec
or
gs
fildll
cmpb
mov
filds
sbb
into
mov
jns
xor
fildll
dec
sbb
subl
mov
aam
push
lock
rcll
jp
popf
xchg
cmp
int3
scas
lea
ds
lret
jl
addr16
dec
inc
or
mov
xchg
cmp
shlb
mov
sbb
andb
push
lea
ds
stos
mov
daa
add
sarl
lea
ds
mov
or
call
add
popf
hlt
push
shrl
out
mov
and
pop
xor
cs
insb
jbe
in
test
mov
inc
mov
stos
jp
cld
sub
mov
adc
lock
in
inc
hlt
xchg
jle
dec
pop
jo
and
add
push
mov
jp
push
and
fwait
mov
or
icebp
xchg
mov
loop
arpl
xchg
dec
cs
or
je
push
lahf
mov
in
sub
or
cwtl
pop
mov
pop
mov
jg
inc
inc
xchg
rcr
push
out
insl
movsl
push
popf
xor
xor
jo
dec
mov
imul
fs
add
sbb
sub
cli
xor
jle
sub
and
daa
movsb
xor
cmp
inc
fwait
mov
insb
or
cmp
xchg
test
pop
and
inc
add
and
mov
lret
push
xorb
rep
mov
add
cmp
lret
sarb
popf
or
mov
cmpsl
ds
scas
jge
jle
les
mov
mov
repnz
jmp
nop
xor
mov
jg
inc
ret
test
or
or
sbb
rcr
popl
mov
inc
mov
test
lahf
mov
and
or
adc
mov
or
rcrl
mov
and
ficoms
jbe
fwait
adc
sbb
enter
mov
cli
jno
je
sub
mul
sub
mov
adc
call
and
dec
or
out
pop
idivb
outsl
sbb
gs
or
inc
xchg
sbb
add
or
subl
mov
mov
inc
push
addb
xor
nop
mov
or
or
rcll
stos
sub
xchg
lret
jp
adc
cmpb
and
sahf
insl
into
sahf
cwtl
cltd
mov
push
lds
mov
add
push
xchg
fwait
into
or
pop
ds
cmc
xor
mov
cli
jo
mov
adc
imul
adc
ja
add
rol
dec
pop
js
add
add
lret
rclb
add
addps
out
insl
bound
dec
pop
insb
bound
or
dec
xchg
sub
mov
bound
push
dec
mov
push
mov
add
and
sub
adc
sub
mov
or
sbb
pop
aaa
lahf
push
sbb
push
sub
mov
jecxz
mov
aad
dec
pop
sub
pop
dec
adc
or
jg
into
icebp
push
inc
es
les
dec
jecxz
sbb
or
rcll
xchg
sbb
sbb
adc
push
adc
leave
mov
jb
jmp
pop
int
stos
fisubrs
sub
je
jecxz
pusha
stos
nop
dec
aam
fucomip
mov
cmp
pop
and
mov
add
out
rcll
mov
popl
adc
fadd
mov
adc
jl
mov
loop
pop
push
test
push
repnz
sub
in
xchg
pop
xchg
sub
push
icebp
movsb
ljmp
mov
repnz
imul
lcall
ljmp
popf
sbb
shl
out
pop
bound
in
add
mov
inc
inc
dec
inc
shlb
aaa
add
je
push
add
adc
fisubrl
dec
mov
pop
xchg
int3
sahf
add
in
push
add
into
sbbb
mov
xor
add
in
sbb
roll
adc
sbb
jg
xor
aaa
hlt
inc
push
pushw
mov
data16
pop
sub
mov
lea
scas
add
mov
jae
mov
xchg
shrb
out
inc
jmp
rorl
das
mov
out
and
add
sahf
icebp
les
cmp
pop
xlat
or
je
push
lock
adc
aad
insb
xchg
nop
ss
inc
adc
lock
shll
dec
jne
mulb
test
add
sub
push
pop
pusha
mov
es
push
and
popl
nop
push
test
clc
jbe
data16
pop
dec
adc
xchg
xchg
adc
ja
push
jmp
pop
aas
pushf
cmp
int3
pusha
pop
sti
adc
mov
xchg
cmp
xchg
add
test
shr
filds
lock
aad
jmp
test
aad
mov
jp
jmp
cmp
add
jl
jbe
add
jno
mov
mov
or
jo
popf
mov
and
xorl
lock
sub
xchg
scas
in
push
jl
stc
ret
lds
cmpsb
or
or
push
add
rcll
xchg
add
mov
popa
mov
mov
cli
adc
add
mov
test
dec
xor
cltd
stc
insl
pop
adc
js
icebp
push
rclb
cld
stos
and
out
popw
popa
push
leave
push
xchg
mov
sub
add
sarb
pushf
inc
sbbb
add
loope
cmp
cmp
cmp
lods
add
mov
push
ss
outsl
mov
push
sahf
das
jg
lahf
pop
mov
in
shl
rcl
pusha
mov
lcall
lods
jg
test
push
bound
lret
and
lret
ja
add
push
pop
outsb
jl
mov
repz
sbb
add
ljmp
clc
iret
repnz
sbbb
inc
jno
jmp
lahf
clc
test
push
add
cmp
xor
repz
push
enter
jae
mov
or
push
cmc
dec
cmp
jmp
loop
cmp
fs
fs
and
das
rclb
int3
dec
dec
test
mov
sbb
mov
mov
and
fisubrs
inc
push
xchg
lret
cmp
sbb
pop
xor
add
mov
pushl
lea
xor
add
jbe
add
xchg
xchg
shl
sti
push
sahf
mov
mov
xor
movsb
sbb
in
and
push
xor
mov
or
fimull
nop
or
mov
cmp
xor
add
js
dec
adc
add
add
mov
sub
mov
aas
lock
or
repz
xchg
insl
xchg
adc
inc
inc
add
xor
adc
dec
lock
mov
loopne
push
lret
popf
es
data16
sarb
adc
jecxz
nop
dec
mov
aad
push
add
addr16
je
adcb
imul
sbb
enter
lods
adc
mov
push
dec
sbb
pop
lea
add
rclb
and
movsb
mov
imul
addb
jo
addl
loope
bound
dec
mov
push
std
push
cs
fistpll
cwtl
outsb
push
inc
sub
bound
sub
lds
push
ljmp
sub
cli
dec
mov
cmpl
cmp
pop
lret
bound
push
inc
mov
ret
push
jmp
xor
lods
imul
mov
cltd
enter
mov
or
mov
aas
sbb
and
xlat
mov
repz
jg
out
jp
subb
mov
nop
lcall
js
lahf
fcoml
jmp
push
adcl
int
popa
or
jns
cmp
outsl
aam
sub
jnp
sarl
in
addr16
mov
movsb
jmp
mov
adc
inc
aad
mov
push
push
mov
jl
fwait
push
dec
sbb
push
sub
cmpb
cmp
mov
dec
adc
pop
lods
xchg
dec
add
insl
or
jbe
in
bound
aaa
xor
fmuls
adc
outsl
jns
and
mov
xor
lret
pop
and
jno
dec
cmpsb
call
and
mov
hlt
aaa
mov
das
mov
lock
idiv
outsl
addb
xchg
es
cmp
xor
push
add
cmp
movsl
sub
test
or
test
cld
inc
dec
mov
loopne
adc
mov
sub
shll
pop
mov
pop
dec
mov
sbb
shlb
jb
sub
push
call
movsl
outsb
pop
cmpsb
jecxz
icebp
bnd
cld
push
sti
jle
fsubp
push
add
mov
pop
mov
fbld
xorl
std
lret
sbb
nop
loope
add
in
cmpsb
add
jbe
inc
insb
loopne
loopne
cli
add
push
loopne
dec
int
arpl
xchg
out
imul
aad
push
cwtl
sub
je
vxorpd
mov
sti
shlb
add
call
ret
or
pop
inc
daa
mov
mov
pop
mov
mov
or
orb
push
std
insb
or
cli
sub
scas
sbb
mov
add
lods
jno
cmpb
add
faddl
mov
add
ror
popl
dec
jl
mov
xorl
sbb
push
cwtl
adc
pop
enter
scas
add
mov
std
push
sub
inc
push
fsubrs
testl
pop
push
scas
sub
add
adc
dec
mov
or
push
jnp
lcall
stos
pop
into
addl
add
jne
mov
push
sub
cmpsl
jne
ds
or
jg
push
and
aaa
push
pusha
push
mov
and
mov
push
insl
lods
sbb
fcompl
jo
movb
shlb
mov
das
dec
into
icebp
or
filds
pop
mov
jnp
mov
push
sbb
lds
cmpsb
nop
sub
mov
cmpsb
iret
stc
test
adc
and
mov
fbstp
mov
cmp
cmpsb
fidivrl
repnz
sbb
cltd
inc
test
adc
sbb
xor
sub
mov
popf
cmpsl
aaa
rolb
int3
rolb
lock
decl
int
roll
and
aas
adc
fincstp
jo
xchg
or
adc
push
mov
xchg
sub
xchg
mov
and
jb
bound
dec
repnz
test
cmp
mov
inc
aas
xchg
ficoms
cld
repnz
cmpsl
adcl
sbb
mov
push
cld
aas
mov
or
xchg
inc
lds
push
pop
push
insb
jmp
add
clc
add
push
inc
fwait
add
cmp
pusha
outsl
xor
pop
mov
inc
dec
add
sbb
mov
sbb
stc
insb
inc
sbb
pop
and
outsb
dec
dec
ds
inc
mov
aas
loopne
pop
scas
stos
inc
mov
jb
adc
loop
addb
imul
xchg
loope
and
scas
sbbb
push
xor
sahf
mov
shlb
fmul
pop
lahf
dec
test
adc
cmp
mov
xchg
mov
test
lret
sub
add
scas
jnp
lock
pop
or
cld
mov
sbb
xchg
xorl
sub
xchg
cmp
add
or
data16
mov
fiaddl
xlat
insl
jo
daa
ja
leave
dec
jae
adc
lock
std
movsb
cmp
stos
adc
add
in
dec
dec
rclb
pop
shl
dec
jp
inc
cmp
and
sub
xchg
les
div
inc
inc
enter
or
xchg
sub
or
pop
cmp
cmp
frstor
xor
sub
out
cs
mov
push
mov
popa
pop
xchg
mov
adc
inc
or
bound
jl
sub
scas
into
icebp
pop
inc
xchg
jmp
mov
sub
nop
sahf
int3
outsb
mov
enter
rcrl
push
mov
xor
xchg
arpl
jge
inc
test
pop
adc
lock
pop
dec
xor
add
and
fwait
adc
sarb
mov
lea
sub
rcrb
lcall
push
inc
xchg
popf
int
pop
sbb
pusha
mov
inc
popa
or
inc
adcl
clc
xorl
xchg
clc
nop
xchg
xchg
or
push
mov
mov
leave
ja
sbb
cmp
or
and
cmp
clc
nop
pop
or
clc
sbb
out
mov
insl
cmp
xor
lods
pushf
mov
cmpl
adc
and
out
lahf
lcall
aas
cmp
add
mov
cmp
xor
push
jo
xchg
sbb
push
dec
mov
cmp
xor
outsb
pop
into
adc
lret
push
mov
lock
jp
jg
addr16
das
cwtl
ret
mov
hlt
mov
inc
fs
enter
aad
rol
push
fwait
push
mov
adc
add
pop
lock
fbld
jo
dec
mov
push
mov
or
adc
add
jne
aad
jno
or
imul
outsl
loopne
cmpsb
ja
movsb
rclb
add
jl
loopne
inc
jecxz
xchg
insl
icebp
sbbb
cwtl
out
outsl
mov
sbb
incb
sub
scas
std
rcl
nop
dec
int
mov
adc
cmp
repnz
fistps
lret
int
jno
add
dec
ret
test
aas
enter
mov
xchg
jb
push
or
push
and
adc
ds
jl
test
insb
xchg
push
adc
ret
sbb
aaa
sub
jge
imul
cwtl
lea
lock
leave
add
aas
add
jp
fwait
and
fisubrs
lock
std
mov
cmp
adc
or
aam
xor
mov
add
ror
loope
cmc
imul
and
add
or
pop
test
popa
dec
fsubr
and
jl
sbb
cmc
sub
xchg
jns
push
mov
pop
lahf
cs
add
ja
cli
sbb
add
pop
incl
rorb
pop
addb
out
aad
xchg
loop
mov
adc
imul
lcall
cltd
pushf
and
push
mov
jg
jne
clc
xorl
aaa
sub
mov
aam
stos
shll
test
adcl
inc
sub
lods
add
in
fldl
sbb
mov
jg
test
outsb
fstps
inc
mov
jne
andl
aaa
cmp
fmuls
movsl
jle
lods
aas
pop
mov
loopne
mov
insb
pop
mov
xlat
arpl
sub
lods
ret
adc
xor
push
or
lods
inc
cld
jg
ljmp
or
sbb
mov
outsb
clc
lea
sub
movsl
and
cmp
inc
mov
mov
shrb
arpl
pop
sbb
add
pop
mov
mov
stc
mov
cmp
or
pusha
push
pop
pop
add
cmp
add
or
mov
cmp
and
mov
jmp
xor
test
dec
int
jg
xor
inc
repnz
enter
jo
push
mov
mov
fldl
stos
gs
xchg
orb
jl
es
xchg
inc
cmc
push
or
imul
addl
mov
pop
aas
fucomp
mov
decl
mov
ret
inc
imul
lcall
push
jne
push
or
dec
jnp
add
cld
das
fwait
rcll
sub
pop
mov
les
add
enter
mov
ljmp
rcll
test
cmpl
add
or
shlb
push
mov
movsb
notb
js
andb
add
jae
push
shll
cmc
sbb
pop
xor
out
mov
insl
insl
stos
outsl
pop
add
adc
test
add
hlt
add
in
fildll
sbb
es
add
stc
jnp
cli
das
and
xchg
aas
movsb
movl
mov
sbb
mov
cmp
lods
les
bound
aas
sahf
sahf
shrb
mov
mov
punpckhbw
imul
cmp
outsb
inc
inc
ds
lcall
and
iret
je
inc
or
fndisi(8087
inc
bound
xchg
sub
or
jg
icebp
inc
mov
out
jo
xlat
push
xchg
mov
add
es
andb
cmp
aas
in
mov
movsl
inc
stos
jno
pop
dec
inc
lret
mov
aad
in
pushl
xchg
mov
repz
jl
jbe
jmp
mov
sar
int
xchg
adc
add
add
xor
jmp
sbb
aaa
pushl
imul
cmp
lret
aas
iret
push
lock
mov
inc
lcall
pop
jb
mov
lcall
xor
call
popl
fprem1
add
inc
sbb
enter
and
lahf
cmpsb
out
decl
mov
sahf
jg
mov
mov
pushl
pushf
fildll
jle
stc
sahf
arpl
cli
test
test
lea
fisttpl
fdivr
jnp
cmpsb
mov
or
and
rclb
jmp
adc
lahf
outsl
lcall
pop
inc
inc
mov
shl
and
or
cmp
jbe
mov
hlt
aas
out
aam
iret
mov
jns
nop
add
lret
popf
adc
dec
outsl
xchg
xor
fisubrl
out
insl
xchg
lcall
rolb
inc
adc
aad
inc
lock
out
icebp
stc
sub
jbe
push
sub
pop
adc
loop
cs
push
out
orb
xchg
mov
push
and
inc
or
cmp
inc
clc
outsl
subb
mov
incb
fidivs
xor
pop
xchg
sub
aad
xor
inc
popa
pop
movsb
push
dec
cmp
mov
and
outsl
leave
fdivrs
mov
push
jl
mov
mov
ljmp
push
fidivrl
inc
sarb
jl
inc
adc
add
add
fistpl
fs
add
cld
movsl
add
push
mov
jg
jns
rcrb
jle
xchg
lock
xor
sti
icebp
cmpl
adc
add
xchg
inc
outsb
push
pop
enter
cld
stos
out
dec
jecxz
decl
flds
mov
cltd
addb
jmp
jg
loope
mov
or
pushf
or
mov
adc
imul
jbe
bound
das
cmp
rcr
daa
push
xor
add
fcoms
sbb
sbbb
add
xlat
jle
pop
xor
aaa
ljmp
rclb
out
addr16
mov
add
idivb
push
mov
push
xchg
ror
call
out
add
mov
and
iret
push
inc
pop
idivl
stos
dec
pop
and
adc
pop
sub
add
push
cmp
jb
pushl
out
rol
push
xchg
mov
adc
sbb
push
daa
or
sahf
pop
sub
mov
add
xchg
pop
shl
sbb
mov
fdivp
icebp
enter
das
fldt
movsb
rol
cs
mov
lahf
add
clc
dec
mov
daa
pop
mov
pop
jmp
decl
push
mov
jo
add
outsb
jne
gs
stos
mov
xchg
fisubrl
mov
or
pop
mov
pop
repnz
cmpsl
dec
mov
dec
xchg
and
loopne
mov
and
xlat
arpl
jbe
add
or
mov
jg
sbb
mov
dec
cmp
test
mov
mov
sub
sbb
mov
push
ja
and
xchg
dec
pop
xor
sbb
loopne
icebp
decl
in
inc
loopne
das
cld
cmp
ja
es
aad
pop
out
icebp
out
inc
mov
mov
or
xchg
push
insb
enter
shlb
pusha
xchg
clc
cli
pop
lret
cwtl
jb
jmp
loope
xchg
sub
jl
sarb
inc
pop
add
push
or
les
add
add
mov
outsl
shl
dec
jge
adc
push
dec
call
sub
xchg
das
das
cmpsb
nop
data16
outsl
outsb
or
fisttpll
lock
pop
sarb
mov
jle
call
pop
pop
cmp
call
pop
stc
insb
popa
cli
lds
xchg
push
stos
dec
mov
adc
jno
and
pop
xor
pop
add
outsb
xor
and
repnz
fwait
adc
push
inc
addl
sub
add
js
or
push
or
loopne
or
cli
daa
mov
xor
out
pop
std
stos
push
jnp
cmpsb
mov
test
imul
sbb
lock
inc
mov
jae
or
xchg
add
fwait
inc
push
add
jg
dec
cmp
add
push
loope
addl
push
add
lds
dec
add
rclb
cli
jb
aas
inc
lret
orb
cli
pop
bound
mov
cmpsl
lcall
cs
inc
orb
incb
lret
outsl
je
jmp
cld
movsb
adc
add
mov
or
sbb
hlt
call
add
aas
clc
loopne
sti
decl
xor
dec
mov
add
inc
out
add
mov
cmp
jecxz
or
push
inc
mov
or
fmull
add
push
xchg
clc
add
fs
dec
sbb
andl
cmp
sbbl
fisttps
xchg
cli
dec
testl
cltd
insl
lcall
aam
cld
int
test
add
or
pop
and
enter
les
and
xchg
or
pop
cli
scas
out
int3
pop
cmpsb
dec
adc
insl
bnd
imul
loop
push
popa
mov
pop
lret
or
aam
ficoms
fdivl
in
ljmp
xchg
sbb
andl
test
cmpsb
push
sub
push
mov
push
nop
cmpsb
jp
outsl
add
add
cli
jg
adc
loop
addr16
cmp
cmpsb
sub
add
pop
sbb
test
insl
sbb
mov
or
shlb
ret
loop
shr
xor
or
les
aaa
incl
shlb
jge
pop
adcb
int
pop
or
stos
and
xlat
or
add
inc
add
and
cmp
sahf
repz
enter
mov
xchg
adc
scas
adc
icebp
sahf
inc
jne
decl
loopne
push
jne
std
lret
dec
sub
dec
sbb
insb
inc
gs
jbe
aaa
mov
pop
test
xor
xchg
imul
outsl
sarb
shrl
xor
int
shll
cmp
or
int
add
sub
dec
cld
pop
aad
lret
movsb
push
mov
movsb
fstl
push
js
testl
add
sbb
push
lock
xor
unpcklps
shrb
inc
push
adc
scas
ja
fldl
pop
mov
adc
pusha
insl
and
subb
add
adc
lock
and
pop
repz
stos
sub
aad
dec
cmp
or
xor
xorb
mov
loop
push
pop
mov
fs
pop
dec
call
idivb
cmpsb
adc
psrlw
xor
outsl
add
pop
add
mov
sti
lret
or
cs
or
icebp
call
mov
sub
in
and
and
xor
call
icebp
jl
fisttpl
add
das
jns
popa
jg
cmp
into
mov
jg
push
add
inc
sbbl
scas
or
and
inc
cwtl
sbb
clc
push
sub
xchg
aam
pop
icebp
lcall
mov
idivl
inc
push
mov
pop
rolb
jmp
ret
call
std
inc
and
insb
fidivs
cmpb
dec
or
jge
pop
stos
xor
and
in
aas
push
add
cmp
jmp
xchg
add
jmp
test
cmp
das
lock
or
inc
push
or
or
mov
add
sbb
and
ret
sub
mov
scas
mov
xchg
es
inc
adc
adcb
orb
add
xchg
out
test
bswap
dec
dec
xor
inc
inc
inc
mov
ljmp
ret
lea
mov
loop
push
sub
fadds
cmp
cmp
lahf
xor
rcrl
cli
push
outsb
sti
sbb
push
and
mov
and
out
imul
pinsrw
aas
clc
jb
lods
sbb
sbb
adc
enter
mov
lahf
push
icebp
ret
mov
or
jmp
js
popf
dec
sbb
xor
jmp
pop
ret
lret
mov
pop
xchg
xchg
jg
xchg
dec
inc
aad
imul
mov
insl
jb
xor
xchg
int3
sbb
add
fsts
and
mov
mov
push
outsb
movsb
xchg
icebp
add
and
data16
mov
ret
mov
add
es
push
fidivrs
sbb
flds
ror
enter
or
push
adc
dec
mov
lods
xor
shrl
mov
loop
xchg
jp
xor
cmp
jge
ss
sbb
arpl
xor
sbb
inc
and
insb
jg
insb
decb
or
fsubl
or
or
adc
lods
clc
insb
cli
dec
les
mov
push
cli
pop
fimull
sbb
shl
scas
add
inc
push
push
fmull
cltd
nop
push
xchg
lret
loope
sahf
aas
dec
test
or
pushf
shl
decl
push
mov
ljmp
cmpsl
iret
loopne
mov
sub
or
push
fs
popa
mov
fsts
mov
xchg
pop
dec
add
jo
push
adc
scas
shlb
add
test
and
loopne
inc
loope
mov
sbbb
repz
sbb
loope
or
push
dec
cmp
je
mov
das
lock
cmp
mov
mov
ljmp
mov
xor
call
fcoms
movsb
add
lcall
xor
dec
pusha
loope
jb
repz
adc
scas
fbstp
mov
lret
decl
or
jo
pop
daa
cmp
xor
pushf
fcmovb
pop
pop
pop
outsb
sbb
xchg
js
pop
inc
insb
sahf
adc
dec
mov
in
inc
fadds
push
or
inc
xchg
pop
orb
aad
sub
sub
cmp
scas
cld
cmp
dec
or
add
int3
lahf
into
add
ljmp
mov
jo
xlat
inc
jp
adc
inc
sub
dec
hlt
push
and
pop
cmp
jbe
xlat
sub
lret
stos
jne
push
cvtdq2ps
aaa
push
rcrl
dec
and
test
jle
repz
addr16
push
lods
push
negb
sub
dec
add
repnz
pop
arpl
or
push
ret
les
popf
or
dec
loopne
sbb
addb
out
and
cmp
inc
pop
addr16
lds
push
inc
xchg
add
mov
das
jmp
aaa
loop
adc
adc
or
outsb
dec
xchg
xchg
xor
xchg
dec
loope
outsb
xor
mov
add
aaa
call
dec
sahf
xor
icebp
mov
inc
fucomip
mov
inc
pop
mov
pop
movsl
xchg
xacquire
or
mov
aam
xchg
ljmp
push
dec
shrl
sbb
scas
dec
push
xchg
cwtl
xor
fadds
mov
shrb
loopne
mov
inc
push
shl
gs
call
push
cli
adc
jle
adc
cmp
xlat
sbb
mov
scas
sub
fs
subb
daa
push
fnstenv
lea
dec
push
das
mov
add
mov
sbb
xchg
xor
outsl
in
adc
dec
push
ret
sbb
and
sti
sub
or
cmp
push
add
icebp
cli
dec
pop
cwtl
inc
dec
imul
or
add
mov
repnz
and
sbb
xchg
or
out
arpl
adc
adc
and
mov
adc
ret
jbe
imul
inc
jl
jg
inc
scas
pushf
lcall
ljmp
inc
jmp
shll
lahf
dec
shlb
mov
in
stc
shlb
add
in
and
jp
push
lret
adc
xchg
inc
mov
push
leave
inc
scas
enter
in
pushl
sbb
lret
js
loop
pop
int3
outsl
lods
add
mov
cmpb
dec
call
je
popa
rcrl
das
add
ds
mov
push
mov
cli
cmp
pushl
push
xor
fwait
loop
test
mov
repz
push
push
sti
dec
adc
inc
bound
lret
in
ret
sub
and
rcl
mov
push
filds
add
mov
add
in
bound
decl
pushf
addl
or
dec
jnp
mov
fildl
mov
arpl
incl
push
or
cmp
dec
out
mov
pop
inc
rcll
or
out
das
add
pusha
sbb
mov
lcall
mov
addr16
or
shrl
test
pop
outsb
repnz
negb
daa
add
sbb
mov
aam
or
inc
mov
in
pop
jp
sbb
enter
pop
pop
push
sbb
loopne
lea
and
das
xchg
loop
std
pop
add
or
shrb
mov
cli
jmp
push
xorb
test
es
ljmp
ret
xchg
adc
sbb
xor
pop
mov
dec
cmpsb
out
inc
cli
xchg
xlat
push
and
mov
xchg
mov
adc
jle
outsl
mov
sub
jl
push
xor
pop
mov
jle
fs
add
dec
fsub
inc
cmpsb
sahf
pop
sub
into
add
fbld
cmp
bound
inc
test
scas
lods
push
aaa
cld
push
nop
push
mov
add
add
xor
and
shl
inc
mov
out
mov
add
hlt
sub
ja
inc
sahf
scas
test
subl
xchg
inc
outsl
sarb
stos
testb
and
dec
ljmp
sbb
xlat
mov
xor
jne
shrl
icebp
call
aaa
nop
mov
add
icebp
pop
ljmp
fsubl
pop
and
out
fiadds
fdiv
test
rorb
mov
push
add
loop
sub
lods
fimull
out
dec
push
enter
cmp
ret
sbb
add
int3
lock
fwait
out
je
mov
inc
call
push
mov
aad
in
shlb
lcall
call
test
xchg
in
repz
cs
or
lea
lock
or
dec
or
mov
movsl
mov
pushf
xchg
dec
pop
dec
std
mov
pop
push
js
xchg
nop
cs
sahf
enter
pop
leave
cli
test
sti
or
jp
std
jmp
add
aam
or
in
xor
pop
scas
mov
inc
lcall
cltd
addl
fiaddl
in
jbe
loopne
jb
lods
sbb
fistpll
pop
mov
sbb
cmpl
repnz
lea
lock
test
lret
push
add
inc
mov
mov
pop
mov
cld
shlb
enter
push
lcall
inc
outsb
mov
cli
add
fnsave
and
loopne
push
mov
add
jg
mov
lea
sbb
adc
loop
push
add
adc
outsl
mov
test
add
pop
ret
sbb
leave
std
shlb
add
push
scas
adc
mov
in
jmp
and
inc
mov
xor
aaa
jbe
sub
stos
add
push
and
cmp
mov
push
ficomps
push
push
push
or
sub
inc
mov
sti
xchg
add
mov
xor
push
out
vmovapd
sbb
rol
clc
lea
stos
mov
push
insb
push
addl
add
cmpl
jge
or
cmpl
icebp
out
sbb
xchg
jg
xor
jae
inc
jae
inc
lea
bound
notl
clc
or
cmpxchg
adc
insb
shl
cmp
jecxz
push
pop
ficomps
xor
flds
inc
jmp
push
and
jno
pop
mov
xchg
push
lcall
loope
call
in
push
mov
push
pop
ljmp
or
mov
scas
and
adc
pusha
push
cmp
rcll
incl
inc
add
ret
aaa
inc
pop
mov
pop
xor
pop
and
hlt
mov
cmc
cld
fildl
lret
mov
mov
std
adc
inc
mov
xlat
xor
push
mov
les
sbbb
mov
dec
inc
ss
sbb
xchg
ret
sbb
push
or
out
shl
jecxz
pusha
nop
mov
push
ret
out
xor
movsl
push
scas
mov
std
cmp
nop
add
sub
dec
inc
imul
insb
clc
or
push
cld
adc
mov
push
js
adc
icebp
xchg
ljmp
andb
call
cmp
mov
xchg
xchg
cmp
and
inc
or
jbe
or
cmp
mov
enter
jne
scas
jl
jbe
rorb
sbb
push
sbb
insl
arpl
icebp
dec
xor
add
lcall
aaa
adc
or
add
sti
ss
mov
add
int3
hlt
ret
mov
add
add
or
lcall
lds
pop
adcb
dec
das
data16
sub
ret
sbb
or
adc
aad
pop
sub
and
aam
add
lock
inc
push
mov
xchg
lcall
arpl
rolb
jl
sbbl
in
fimuls
decb
push
mov
lcall
cli
inc
add
mov
mov
jmp
mov
push
inc
lahf
pop
and
rcrl
pop
mov
xor
out
push
sbb
pusha
push
sub
js
mov
adc
add
imul
mov
xor
mov
dec
add
aaa
fimull
mov
and
rclb
add
xchg
rolb
les
add
pop
cli
sbb
inc
cld
and
in
movsb
jbe
jae
jg
mov
mov
cli
push
insb
xor
loop
hlt
cwtl
andl
adc
mov
sub
and
add
inc
jno
int
sbb
mov
ret
cmp
pop
leave
movsl
push
jbe
mov
int
mov
add
incb
add
rol
add
inc
and
xchg
dec
mov
sub
push
add
mov
sahf
add
pop
cmpl
or
jbe
cmp
and
iret
jle
popl
rcr
notb
sub
inc
data16
rcll
aam
out
xor
addr16
lcall
cmp
cwtl
scas
jmp
and
jo
jbe
outsl
decl
hlt
orb
jmp
push
es
inc
arpl
dec
mov
popf
aam
sub
mov
lahf
ds
roll
jp
add
push
mov
mov
inc
cmp
and
sti
pop
add
out
loopne
cld
pushl
pop
loopne
sahf
out
addb
add
iret
bound
subb
xchg
xor
push
lds
xor
dec
jl
ljmp
das
icebp
jg
popa
cmpsl
pop
in
cmp
pushf
mov
outsl
add
jae
clc
scas
movsl
sub
fmuls
stc
add
add
jge
lcall
arpl
fnstsw
inc
insl
outsl
das
hlt
xor
cmp
push
xchg
iret
add
lods
jae
lods
xchg
test
out
add
inc
aas
lock
lds
pop
pop
or
es
sbb
or
mov
or
mov
in
lds
ljmpw
aas
aam
cmpsl
add
repz
pop
imul
insl
je
test
hlt
lock
add
and
jmp
or
ret
sub
push
adc
jmp
insb
cld
lea
cwtl
mov
ja
and
mov
push
addb
sbb
lret
loop
dec
out
push
sub
add
mov
in
decl
dec
push
and
pop
jne
pop
xchg
push
jle
call
mov
push
mov
mov
push
sub
mov
das
inc
adc
jmp
xlat
inc
stc
stos
sub
andl
add
pop
cli
lea
sbb
jg
je
mov
arpl
ficoms
loope
cmp
je
cmp
adc
std
cmp
mov
call
mov
sub
in
sub
cmp
lcall
loopne
xchg
aaa
andl
daa
cld
nopl
cs
push
gs
ja
sub
dec
adc
push
cld
shrb
outsl
dec
ss
mov
and
les
adc
std
lock
aad
xor
je
inc
and
into
sub
stos
test
in
clc
inc
arpl
cld
outsl
xchg
xor
std
mov
pop
cld
xor
pusha
fs
cs
adc
dec
or
jg
xchg
add
orb
add
insb
inc
loope
pop
jb
push
push
stos
test
xlat
cli
push
sarb
scas
add
adc
insb
jnp
jg
in
add
mov
or
sub
xorl
fists
vandnpd
fisttpll
mov
mov
lods
subl
insl
test
inc
loopne
mov
mov
les
cs
mov
inc
pop
nop
rol
push
mov
add
lods
lcall
dec
daa
add
mov
sbb
and
cwtl
xchg
cmovbe
push
das
aam
les
cld
cs
lcall
loopne
xchg
in
stc
sbb
ret
push
js
icebp
dec
pop
clc
mov
pop
pop
sbb
fisttpll
fwait
out
push
xchg
stos
cld
lods
inc
mov
daa
sahf
adc
mov
mov
sbb
pop
lea
mov
decb
incl
aam
lret
or
lret
jp
loop
pushl
add
shlb
ja
rcrb
dec
mov
enter
add
lret
pop
jno
and
insl
das
sub
jo
jo
sbb
ljmp
flds
jmp
mov
sbb
jns
mov
jg
out
cmc
nop
mov
mov
test
inc
into
pusha
add
inc
push
or
das
mov
stos
les
insb
mov
dec
sbb
inc
cmp
test
data16
jle
out
gs
sbb
nop
aas
inc
xor
mulb
movl
loopne
jg
mov
adc
xchg
sbb
inc
adc
jno,pn
fisttpl
mov
lret
xor
ljmp
xchg
sub
ret
pusha
lea
mov
push
push
xor
add
lret
xor
fmul
imul
or
push
mov
xchg
pushf
inc
pop
ljmp
push
inc
mov
iret
xchg
mov
rorl
enter
fcmovb
push
inc
or
and
and
push
or
pop
jge
rcr
mov
and
pop
and
pushl
je
sbb
jne
inc
ljmp
jo
mov
add
js
pop
pusha
fists
cld
loopne
loop
fcoms
pop
out
push
jle
movsb
pop
or
or
fidivl
jge
lret
addb
dec
push
fwait
mov
insb
adc
or
hlt
rcrb
popf
scas
jecxz
call
scas
adc
or
testl
jp
icebp
ret
lret
dec
xor
push
not
fwait
sub
xchg
inc
pop
xchg
pop
iret
pop
jge
push
insb
fs
push
addr16
imul
shlb
sub
nop
lahf
lods
aad
bound
inc
sqrtps
adc
xchg
insl
popa
jae
mov
call
add
push
mov
cmc
js
inc
pushl
jg
cmp
out
mov
roll
or
push
pusha
pop
test
ret
lahf
testb
xchg
inc
jp
and
cmp
into
test
leave
and
clc
sub
add
dec
add
mov
add
add
or
lods
mov
int
or
popf
bound
loopne
loope
in
sub
or
les
lock
mov
loop
push
adc
adc
pop
addr16
adc
adc
lock
add
shll
xchg
fs
inc
pop
mov
xorl
add
or
es
nop
jle
push
jae
mov
push
pushf
movsb
push
incb
push
push
push
test
jg
adcl
lods
lcall
cmp
dec
adc
cmpb
sbb
clc
jg
fcompl
les
in
pushf
loop
adc
jno
dec
ja
into
aas
xchg
out
js
pop
aam
outsb
mov
mov
mov
je
push
xchg
inc
mov
add
addl
cmp
ja
fwait
lea
sub
test
aad
pop
dec
test
mov
out
aaa
sbbb
dec
push
test
jge
xor
adc
adc
xchg
in
and
push
and
decl
fistpll
sbb
loope
or
das
cmpl
xor
mov
pop
repnz
and
sbb
cmp
or
mov
repnz
ja
lock
leave
inc
fsubr
and
aad
clc
bound
push
pop
xorb
mov
repnz
dec
ret
xor
shrb
ret
adcb
negl
sar
call
push
mov
popf
insl
pop
xor
fidivs
inc
scas
push
popw
or
pusha
sbb
int3
bnd
inc
adc
sub
cmpsb
nop
or
mov
leave
add
lods
xchg
jne
mov
loopne
push
pusha
xorb
sub
sar
mov
dec
ret
pushf
mov
jp
xchg
rolb
xchg
shr
mov
xchg
xor
std
ljmp
out
cmp
pop
mov
add
nop
out
dec
popl
popa
push
inc
mov
push
das
shll
push
in
xchg
cmp
sub
push
adc
js
xorb
out
xor
sbb
jecxz
add
aaa
add
and
mov
ficoms
test
adc
test
xor
inc
push
adcl
loope
cmp
pop
cli
sbb
adc
fistl
sbb
into
cli
cmc
pop
xchg
jmp
test
fcomp
js
ljmp
fcmovnbe
mov
pop
add
or
test
data16
icebp
push
sub
push
data16
mov
push
add
les
addr16
stos
mov
or
test
xor
inc
nop
jmp
xchg
ret
and
call
sbb
jle
push
dec
mov
adc
inc
sahf
mov
call
lret
jne
jmp
mov
mov
dec
mov
test
jg
cli
adc
ret
and
or
int3
sbb
inc
sarl
cmp
mov
mov
jno
inc
xorl
ret
xchg
pop
inc
in
pop
sub
xorl
aas
ds
cld
push
fmulp
out
cmp
arpl
or
cwtl
daa
jecxz
jmp
jbe
mov
add
mov
loopne
jecxz
movsl
test
fs
lea
inc
push
and
mov
add
push
xchg
lds
loopne
mov
or
mov
pop
inc
jno
incl
pop
sub
xor
jbe,pn
jmp
pop
inc
adc
sub
add
jle
icebp
daa
mov
push
xchg
scas
adc
cmovge
inc
es
sub
pop
ret
inc
bound
negb
test
sub
fs
outsl
jmp
adc
pop
mov
movsb
loopne
lahf
mov
add
mov
cmp
lock
add
aas
cmp
mov
fcomps
cld
sbb
push
xchg
push
xchg
clc
lds
and
icebp
fsubrp
mov
mov
xchg
lock
mov
mov
inc
dec
add
addr16
fcmovb
jl
andb
nop
cmp
mov
jmp
add
mov
and
jle
roll
sbb
inc
mov
scas
lahf
push
arpl
inc
sub
cmp
xor
mov
cli
jmp
dec
mov
subl
adc
inc
and
xchg
and
push
pop
jo
repnz
sahf
aas
insl
aas
dec
xchg
testb
cmc
mov
or
or
add
insl
mov
push
test
push
jle
add
cli
pop
push
cwtl
clc
hlt
aas
inc
ljmp
xchg
push
lds
cmp
dec
leave
lret
fdivs
mov
orl
cmpsl
jbe
cld
or
les
inc
jecxz
out
adc
and
bound
cmp
add
out
and
mov
pop
xlat
push
shrl
fincstp
fcompl
cmp
add
pushf
cli
imul
pmullw
test
rcll
jno
jno
std
es
hlt
fistpll
add
push
pop
in
arpl
pop
jge
push
dec
jns
cmp
xor
cmp
mov
fistl
inc
or
sbb
cmpsl
and
in
icebp
ljmp
cmpl
cmp
dec
pop
inc
or
sbb
add
and
dec
lods
push
cmp
and
test
lds
push
add
incb
test
inc
arpl
insb
rcrb
mov
sub
xchg
out
cli
mov
loop
cmp
inc
push
push
sbb
xchg
out
add
or
cmpsb
fs
lcall
outsw
mov
push
das
mov
cmp
stos
and
mov
mov
add
scas
bnd
shl
sbb
mov
inc
outsb
jne
test
stos
jns
aad
es
js
dec
xchg
jl
add
push
mov
pop
and
adc
cwtl
push
clc
ficoml
mov
or
arpl
hlt
mov
pop
shlb
pop
in
lods
fidivs
mov
lcall
jp
roll
or
add
mov
mov
adc
sub
push
xor
add
mov
mov
sub
push
xor
and
adc
push
push
xor
mov
cltd
nop
dec
push
xchg
iret
cli
test
and
cmp
jmp
add
sbb
mov
sub
pop
inc
xchg
in
xchg
mov
rcl
xor
and
add
dec
leave
add
inc
pushf
sbb
in
outsl
mov
roll
jno
std
gs
jecxz
mov
mov
repnz
xchg
add
shll
sub
push
mov
and
dec
fildll
std
rcrl
add
jle
push
mov
nop
xlat
out
leave
jne
adc
addl
pop
inc
in
dec
andb
ljmp
cli
out
fidivs
enter
add
pusha
jle
pop
jo
add
jnp
and
push
or
aas
fdivp
or
mov
ret
cmp
mov
and
ljmp
xorl
adc
cmp
cs
mov
add
push
jp
pop
jg
scas
gs
mov
lods
push
lods
jo
jecxz
insl
cltd
out
or
daa
jns
inc
jl
add
dec
popa
and
adc
push
aas
loope
mov
mov
push
sub
pop
lret
jp
mov
mov
ret
dec
test
and
ret
xchg
scas
mov
out
aad
add
and
or
inc
aad
ljmp
dec
jge
adc
mov
or
push
sub
es
cmc
jge
mov
repnz
mov
mov
ret
add
and
dec
mov
ficoml
or
inc
inc
leave
pop
arpl
dec
repnz
add
lahf
adc
imul
in
or
bound
leave
pop
adc
jo
jo
push
aas
pop
adc
cmp
xor
or
mov
fadds
mov
nop
int
add
hlt
out
call
xchg
push
inc
fs
repz
ret
out
xor
jg
mov
mov
stc
mov
ret
fistpll
push
aaa
sbb
lods
out
push
enter
shl
ja
add
cmp
fidivs
mov
dec
scas
jmp
shl
scas
push
lret
dec
cmp
cmp
pop
lea
jmp
pop
ret
lods
adc
xchg
outsb
shlb
je
in
mov
fs
int3
cmp
sbbl
or
and
ret
ljmp
cmp
movl
sbb
ss
inc
add
mov
sbb
or
and
test
lea
scas
inc
xor
add
js
push
stc
inc
scas
mov
xor
and
and
add
pop
mov
push
add
mov
call
cmp
jl
dec
mov
loopne
nopl
cmp
adc
xchg
adc
aad
sub
out
pop
and
jle
bnd
add
xor
ret
pop
pop
pop
test
out
ja
pop
subl
stc
add
ljmp
imul
lahf
sbb
inc
pop
cmp
sbb
roll
arpl
in
pop
mov
out
adc
shrb
pop
push
inc
and
jmp
dec
xlat
push
je
gs
and
mov
stos
nop
pop
movsb
sub
mov
mov
jecxz
ja
aam
jp
imul
out
add
imul
add
mov
lcall
xchg
and
push
cmpb
xor
adc
add
mov
inc
inc
lods
cmp
in
sub
rorl
out
in
mov
fs
ss
pop
pusha
and
xlat
daa
test
imul
xchg
cs
daa
xor
sbb
push
inc
insb
mov
scas
insl
dec
fmul
inc
mov
cmp
inc
loope
leave
cli
pop
mov
divb
stos
out
mov
outsl
xchg
divb
push
mov
adc
cmp
cltd
inc
sahf
decl
push
sub
sbb
xor
adc
and
push
add
mov
pusha
sbb
or
rolb
test
loopne
mov
dec
inc
push
test
xor
mov
hlt
ja
aam
aad
dec
sarb
fistl
ret
cmp
or
pushf
adc
or
xchg
cmpb
sbb
xchg
and
push
test
iret
cmovge
inc
cmpl
jo
test
add
mov
adc
inc
movsb
pop
mov
or
inc
mov
fsubrp
out
out
loopne
test
fimull
adc
xor
jmp
mov
add
rcrl
rcrb
int
movsl
add
test
clc
jecxz
repnz
int3
pop
jne
nop
iret
push
cmp
adc
jmp
push
ljmp
lods
jmp
pop
sbb
movsb
arpl
mov
add
sbb
mov
add
jle
jge
je
pop
jbe
jg
add
outsl
sbb
xchg
mov
jnp
sbb
xchg
js
cwtl
nop
xchg
xchg
sub
inc
push
jle
lahf
xchg
repz
lods
pop
in
cmp
inc
aas
and
dec
mov
inc
inc
jnp
sub
adc
sub
jne
ret
jo
fdivrl
adc
push
mov
stc
dec
in
mov
sub
stos
xor
jns
dec
repnz
inc
xchg
xor
lds
stos
decl
jb
test
jle
lcall
aaa
pop
adc
pop
inc
add
cmp
int3
mov
cmp
add
xchg
xchg
ljmp
adc
add
hlt
push
lock
add
or
cmc
in
nop
fldenv
xchg
aam
popa
stc
pop
push
and
fcoml
hlt
popa
repz
sbb
xor
lods
popa
enter
mov
add
shlb
sub
enter
gs
fcmovne
out
das
cld
cmp
push
xchg
jmp
ss
xor
shr
imul
lret
or
pop
test
les
jae
dec
adc
test
hlt
mov
or
rorl
push
stos
mov
les
sub
je
mov
add
lea
test
add
push
jnp
xorl
dec
clc
movl
adc
lock
push
pushf
dec
and
mov
js
jns
push
insl
inc
jno
jg
loope
inc
gs
or
adc
enter
jo
lret
int
leave
testl
cld
outsb
and
mov
mov
xchg
lret
xchg
fwait
add
pop
je
sbb
push
shl
push
mov
mov
mov
stos
aaa
or
loop
pop
mov
pop
sub
stos
jp
in
mov
fidivs
cwtl
pusha
sti
into
cwtl
loope
xlat
insb
sub
lock
arpl
or
adc
or
pop
mov
test
in
xchg
adcb
cmp
sbb
push
lcall
dec
js
mov
shlb
repnz
popa
jecxz
add
repz
gs
mov
lahf
imul
fldenv
sub
dec
fidivs
stos
xchg
insb
aas
lods
cs
shlb
or
cmp
cwtl
jb
xchg
or
inc
add
sbb
xchg
push
adc
pusha
movsb
inc
movsl
std
sbb
addb
adc
dec
mov
pop
dec
ss
sbb
ret
pop
les
xorl
repz
pop
and
ds
out
mov
mov
sub
cmpsl
hlt
add
adc
and
fs
and
mov
sbb
test
mov
sbb
movsb
xorb
pop
mov
into
lahf
mov
sub
js
popf
cld
outsl
scas
dec
idivb
call
adc
jl
adc
mov
shlb
add
cmc
mov
ror
jl
and
pop
roll
jmp
fsubs
ja
std
add
imul
adc
inc
pop
aam
push
sbb
jg
sbb
jp
xchg
cmc
adc
inc
cld
mov
lret
idivb
fdivp
cmp
cld
aad
xchg
pop
in
test
or
stc
clc
push
dec
cld
push
pop
mov
or
aaa
and
in
clc
or
sbb
scas
inc
sbb
mov
pand
test
jns
shlb
fsts
mov
and
in
pop
inc
out
add
push
jbe
and
push
sub
mov
dec
add
mov
inc
cmp
jecxz
outsb
loope
xchg
add
sbb
push
ja
xchg
add
sub
jne
sub
lahf
shll
or
les
loop
mov
pusha
aas
daa
ret
sbb
add
cmp
or
imul
loopne
jb
or
repnz
loopne
and
xchg
call
add
in
add
loope
mov
or
sub
js
mov
call
das
mov
mov
inc
xchg
pop
faddp
dec
les
aam
or
out
je
add
jmp
arpl
add
popf
adc
pop
cmp
ficoms
fwait
jl
addr16
or
inc
pushf
sub
xor
and
repz
aaa
mov
gs
mov
lret
mov
sar
or
mov
dec
and
and
inc
sub
stc
sbb
nop
bound
pop
xor
int3
mov
add
inc
xchg
push
and
adc
mov
stos
pushf
cmp
mov
pmuludq
ret
aas
pop
push
inc
loope
movsl
hlt
push
shrb
ja
pop
vcvtdq2ps
jp
lods
aad
mov
dec
std
pop
mov
dec
or
mov
imul
mov
test
push
iret
insb
jo
aas
incl
add
and
add
jmp
and
in
jle
pushf
lahf
sub
add
scas
pushf
repnz
pop
pop
scas
outsb
and
repz
mov
dec
pop
push
and
mov
int
and
push
imul
cmp
mov
lods
mov
mov
int
mov
lods
addl
shlb
test
pop
push
jbe
sbb
popf
pop
sub
pop
loopne
push
hlt
push
lcall
jg
mov
int3
sbb
dec
cli
aas
pusha
mov
jl
push
jmp
dec
sbb
adcb
shlb
mov
icebp
add
adc
mov
aas
fiaddl
adc
and
add
nop
mov
xchg
mov
mov
icebp
and
mov
scas
std
cmp
xchg
out
aas
push
pop
xchg
repz
ja
scas
inc
pop
sbb
outsl
mov
cmp
in
add
repz
in
xor
mov
inc
ret
xchg
mov
adc
repz
dec
clc
push
add
xlat
xchg
test
je
or
push
test
push
push
sbb
mov
imul
mov
mov
gs
inc
mov
rorb
in
sar
inc
xchg
inc
pop
push
pusha
jbe
pop
push
clc
push
sarb
adc
js
lgdtl
xlat
jb
decl
mov
lods
sbb
sub
mov
orl
xchg
mov
add
lock
bound
xchg
dec
aam
sti
loopne
xchg
mov
pop
scas
out
pop
call
cwtl
pop
icebp
popf
mov
dec
nop
repz
sbb
loopne
push
repz
xchg
push
xor
add
bound
adc
popa
andb
mov
scas
add
add
sub
dec
les
add
call
cld
jecxz
cs
cltd
or
shlb
sbb
mov
inc
adc
in
adc
shlb
dec
adcb
popf
inc
iret
mov
ja
push
inc
mov
dec
add
adc
mov
call
push
sub
lcall
add
insb
add
inc
and
pop
les
les
sbb
pop
xlat
jo
add
cld
pop
inc
add
cmpl
dec
sbb
mov
rorb
mov
dec
mov
jae
xchg
jge
mov
add
mov
into
leave
dec
or
test
test
dec
fucom
dec
testb
repz
int3
sbb
xchg
and
and
aas
or
outsb
jecxz
pop
insb
jecxz
mov
stc
aas
ss
push
fadds
cmp
mov
add
lahf
adcb
rcr
loopne
jg
mov
pop
cmp
mov
pop
test
mov
lret
jg
daa
movsb
bound
or
clc
pop
in
imul
les
es
cmpsb
pop
repnz
fmul
in
stos
out
inc
ret
adc
dec
cli
repnz
xchg
jl
adc
mov
insl
sub
mov
jle
leave
das
cmp
stc
out
jno
loop
lds
stc
mov
sbb
leave
out
jno
mov
pop
pop
jae
sbb
mov
cld
ds
jmp
pop
mov
subl
jbe
jnp
insl
lret
scas
fidivl
cmpsb
sbb
or
idivb
sahf
dec
pop
sub
iret
rcrl
xchg
jge
sahf
addr16
mov
add
dec
jo
in
push
jae
mov
das
scas
fimuls
incl
sbb
nop
mov
and
cmp
mov
test
xor
leave
add
sbb
fists
das
pusha
pop
pop
dec
add
cmp
inc
mov
loopne
jns
jne
test
in
sahf
idivb
jmp
popf
sub
xchg
dec
push
loopne
lds
out
nop
ja
jle
dec
mov
lret
ficoms
pusha
jbe
aas
jns
add
incb
fistps
mov
repz
int3
cmp
adc
stos
push
adc
mov
and
in
push
xor
pop
call
popf
and
mov
and
xor
je
mov
scas
in
push
enter
sahf
dec
xchg
pop
cmp
adc
es
adc
cmpsb
cmp
add
iret
jp
xchg
xor
popf
mov
rcrb
loopne
inc
xchg
sub
ds
sub
loope
jl
push
or
aas
xchg
test
clc
xchg
jmp
les
lock
xchg
inc
loopne
or
or
fdiv
cmp
stos
int3
mov
in
cmp
xor
mov
rclb
ret
mov
mov
std
jg
mov
sbb
sbbb
sbb
adc
push
mov
add
push
jl
cli
sbbb
and
xchg
mov
push
mov
jp
xchg
mov
mov
call
or
xchg
lcall
lods
mov
clc
mov
cmp
out
rolb
ret
mov
dec
xlat
mov
or
adc
clc
stos
pushl
fwait
mov
pop
rorb
adc
scas
movsl
rcrb
outsb
xor
out
dec
jb
test
shlb
add
dec
pop
push
jp
ja
xchg
mov
push
aas
sbb
mov
das
adc
or
faddl
sub
jg
add
loopne
jnp
pop
insb
pushf
push
pop
or
imul
aaa
loope
cmp
add
push
in
cmpl
aas
jge
push
push
es
or
cli
cld
daa
lcall
das
or
or
cwtl
xchg
enter
mov
movsb
xchg
mov
mov
dec
add
dec
jl
jne
imul
hlt
adc
adc
cmp
cld
mov
popl
jns
fidivs
push
sub
add
aam
pop
test
hlt
xlat
mov
pop
movsb
in
in
in
lret
js
std
or
xchg
push
inc
push
mov
clc
add
cld
mov
or
push
call
call
ds
insb
cmc
or
lock
xchg
aas
aas
xchg
shlb
rolb
or
cld
mov
pop
or
pop
shll
aad
mov
mov
shll
movsb
jg
cmc
fisttps
subb
std
pop
inc
mov
rcrb
push
sbb
add
cld
mov
fwait
insb
jno
push
mov
mov
mov
imul
ret
push
push
lock
movsb
or
in
cld
pop
sti
imul
and
into
inc
leave
and
xor
shlb
cmp
mov
aas
dec
inc
xchg
or
mov
and
pushf
std
pop
andl
jne,pn
enter
fistpll
aaa
cmp
adc
rcll
lahf
xlat
push
loope
inc
xlat
cmp
xchg
lea
jle
jmp
ljmp
push
test
arpl
mov
adc
loope
pop
xchg
add
xor
mov
daa
jg
cmp
jno
fs
mov
sbb
xor
sub
movsb
aas
daa
je
cmpsb
rcrb
int3
js
rclb
dec
sbb
les
hlt
push
add
jmp
xchg
or
mov
push
test
add
imul
mov
mov
cli
cwtl
cmpsb
stos
pop
dec
rol
push
or
insb
fcomip
jle
out
xchg
pop
lret
or
jns
sbb
test
sahf
xchg
les
pop
cmpsl
xor
adc
inc
cli
inc
or
pusha
push
pop
dec
sbb
mov
es
hlt
and
jbe
shlb
in
dec
loopne
add
sbb
add
out
fldl
cmp
cmpsb
or
adc
cmc
sub
add
aad
aaa
mov
jne
js
mov
mov
insl
lret
in
inc
cmp
aam
pop
mov
mov
fmuls
xor
cmp
fdivrp
ret
xchg
xor
jmp
call
mov
xchg
fwait
js
sbb
or
out
push
pop
dec
cmp
pcmpgtw
or
lret
sarl
enter
push
lea
in
or
xchg
fwait
je
in
lods
jb
xor
sahf
notl
push
dec
sarb
cmp
jecxz
repz
adc
add
lock
or
sub
ljmp
xor
loope
loop
or
or
sahf
lds
cmp
enter
fnstsw
mov
push
loope
cltd
inc
sbb
nop
lods
daa
xor
fwait
mov
xchg
ret
mov
jo
mov
xchg
xchg
jmp
test
add
jg
in
jo
orb
outsb
mov
inc
sbb
insl
addb
es
lcall
test
or
xchg
mov
add
ror
pusha
or
or
paddq
dec
bound
je
inc
icebp
and
leave
or
xchg
push
add
in
xlat
lcall
mov
add
dec
add
xchg
jmp
popa
fcomps
mov
adc
mov
and
rcrb
jg
decl
out
sbb
daa
pop
mov
lods
push
sbb
pmullw
sub
inc
jge
movsb
lea
adc
adc
adc
cmp
cmp
jg
aad
sub
mov
lods
lret
push
out
mov
jmp
mov
test
rep
push
test
std
mov
js
fistl
sarl
fdivrl
or
mov
pop
test
fcoms
or
sub
adc
dec
sbb
flds
push
cmpsb
lret
scas
lock
adc
mov
pop
sub
fs
shll
cmp
inc
add
sub
out
push
sbb
lea
mov
subb
dec
xor
repnz
push
lods
sbb
loopne
jne
neg
xchg
sub
inc
xchg
jnp
rolb
sar
shl
and
push
push
fistps
xlat
or
ja
js
jge
cmp
jg
cmp
icebp
or
ljmp
out
mov
enter
mov
fisttpll
repz
xchg
inc
std
shrb
xchg
pop
rol
cmp
lret
dec
popf
adc
dec
aad
mov
dec
cld
adc
xchg
test
and
sbb
adc
decl
inc
clc
js
push
add
inc
pop
inc
cmp
movsl
in
test
in
pop
out
mov
lret
push
adc
mov
aad
ret
jbe
dec
xchg
nop
and
ss
cmp
mov
mov
ja
mov
cli
inc
imul
dec
je
scas
mov
sbb
jne
add
xchg
push
dec
jnp
mov
addr16
sub
in
adc
xor
in
inc
scas
mov
insb
adc
in
movsb
or
movsl
push
enter
add
jns
sub
push
repz
fmuls
arpl
xchg
cmp
jmp
pop
or
mov
ljmp
in
cmp
subl
push
ljmp
cmp
fistpl
lock
push
mov
dec
inc
mov
jecxz
mov
xchg
pop
mov
ljmp
rorb
call
and
lds
enter
add
in
sar
pop
inc
jmp
test
loop
and
mov
pop
aaa
xchg
lahf
lock
add
jbe
push
cmp
push
dec
popf
pop
pusha
inc
jecxz
pop
les
js
add
mov
xor
pop
sti
dec
sahf
mov
lret
inc
shll
fdivl
lds
or
hlt
sti
mov
in
push
or
leave
pop
into
mov
cmp
mov
push
add
adc
ficoms
xchg
sub
int3
xchg
imul
hlt
or
lds
shrl
sti
pop
popa
dec
mov
add
and
add
mov
les
sahf
flds
sti
clc
repnz
popa
cli
fldcw
or
pop
mov
stc
jmp
stc
loopne
fldenv
je
mov
pop
cmp
adc
cmp
orb
in
cmpsb
mov
bound
jo
testl
jnp
int
jg
jo
pop
mov
loope
cmp
sbb
leave
inc
int
mov
movsb
mov
jecxz
add
pop
mov
xchg
sar
xchg
out
dec
iret
sub
push
cmp
mov
push
pop
cmp
aam
mov
fs
out
mov
mov
insb
mov
dec
pusha
fmuls
stos
and
das
mov
popa
lods
dec
sbbb
mov
jle
pop
aad
clc
lret
out
stc
lods
xlat
or
mov
ljmp
and
leave
mov
xchg
sub
cs
xchg
push
sub
dec
cld
pop
mov
sbb
jl
repnz
xor
scas
bound
pushl
cmp
lret
cmp
mov
push
or
cmc
inc
fdivl
inc
and
add
out
cs
jecxz
or
ret
aaa
add
push
or
and
pop
jbe
sbb
and
scas
jp
and
loopne
hlt
jns
loop
mov
repz
jg
test
sahf
test
lds
roll
cld
add
enter
bnd
xorb
clc
jg
xchg
repnz
and
and
jle
add
add
into
sbb
cltd
sub
mov
shrb
sbb
enter
mov
mov
push
cmpsb
push
add
add
and
test
adc
enter
jg
xor
and
clc
or
mov
adc
push
add
ret
add
rcll
movups
adc
stos
test
adc
in
adc
or
cltd
inc
add
enter
mov
xchg
cmp
sbb
in
in
dec
std
ret
push
cwtl
add
ja
imul
cwtl
std
dec
mov
push
push
cltd
dec
xchg
outsl
cltd
sub
jb
mov
mov
cmp
push
or
cs
aam
and
mov
cli
fildl
adc
out
sahf
cmpb
xchg
clc
lea
cwtl
pop
nop
adc
dec
inc
mov
mov
hlt
aam
dec
movsb
rorl
mov
lock
dec
jmp
loope
popa
in
inc
inc
imul
out
pop
or
mov
pusha
jp
mov
repz
fimuls
add
jae
xor
repz
pop
push
adc
mov
hlt
dec
sub
cmpb
jmp
push
imul
push
or
lea
cmp
aad
dec
or
inc
mov
sbb
icebp
stc
cmp
push
daa
test
jmp
cmp
inc
pop
test
into
add
adc
adc
cmp
mov
inc
pop
or
adc
std
inc
sbb
ficoms
and
mov
aas
stos
dec
add
adc
push
or
dec
mov
inc
mov
mov
mov
lods
pop
shl
fstps
mov
repz
js
ds
ret
mov
sub
scas
stos
mov
or
stos
lcall
pop
xor
mov
dec
into
sahf
pop
jmp
cmc
xor
dec
cmp
or
add
aas
jl
call
and
dec
mov
pushf
hlt
mov
test
xchg
lods
push
xchg
push
and
repz
sbb
xchg
sbb
sbb
in
fidivl
movsl
aam
cmp
ficoms
sbb
inc
lock
loop
loope
jle
addb
aas
mov
push
hlt
xchg
xchg
mov
add
pop
cmp
ja
cmpl
in
movswl
insl
or
loopne
mov
imul
shll
inc
in
cmc
add
cltd
mov
pop
or
cmpsl
or
pop
sbb
aaa
mov
fwait
sar
or
cmp
nop
sub
jp
sub
rclb
jno
lahf
mov
sbb
rolb
pop
outsb
inc
adc
adc
and
pop
mov
and
loope
jbe
xor
fwait
jb
icebp
sub
shrb
data16
loop
xor
pop
icebp
andb
sti
test
fwait
lcall
xchg
inc
out
jbe
push
or
sbb
cmp
jecxz
std
pop
ds
xchg
mov
pop
inc
es
les
jecxz
dec
sbb
mov
repz
mov
jns
out
mov
aas
sbb
jb
loop
mov
add
lahf
pop
add
imul
push
insb
clc
imul
add
loop
push
sarl
aas
jne
mov
adc
lock
jmp
and
sub
and
fbstp
cmp
dec
ljmp
dec
inc
or
mov
pop
shll
jg
xor
popa
jo
xchg
cltd
mov
enter
pop
gs
aam
and
std
jo
xchg
testl
push
mov
sbb
or
mov
movsl
in
push
sahf
enter
mov
test
pop
push
add
or
lea
adc
cltd
daa
adc
sub
lea
or
push
scas
cmpsb
mov
les
xchg
or
mov
incb
adc
outsb
cmp
pop
test
fiaddl
repnz
sarb
sub
arpl
or
jbe
xchg
loopne
adc
push
pusha
mov
and
ret
fwait
fs
nop
mov
or
cmpsb
mov
xor
or
decl
loope
jbe
cltd
inc
inc
and
out
mov
sbb
inc
lcall
lock
jne
push
mov
ljmp
sub
mov
les
lock
pop
add
mov
adc
xchg
pop
xchg
cmpsb
inc
add
int3
lcall
xor
jns
clc
sbb
mov
inc
inc
sbb
add
mov
push
out
cmp
ljmp
mov
and
or
sbb
mov
arpl
xchg
jns
push
aas
call
xor
sbb
outsb
lods
mov
pushf
cmp
jle
rolb
and
or
pop
mov
adc
mov
mov
popf
les
cmpsb
add
cmp
in
outsb
or
cld
xchg
pop
les
lahf
testl
and
shlb
icebp
jnp
pop
out
shll
pop
loope
or
mov
int3
push
movsl
xchg
xor
inc
int3
and
filds
dec
ret
sbb
and
mov
test
cmp
stos
mov
fstps
imul
clc
adc
fdiv
and
cs
dec
mov
pop
cmp
or
bound
ret
xchg
dec
xlat
addb
adc
xchg
jb
dec
mov
fbstp
jg
mov
mov
inc
add
cmp
and
cmp
mov
ret
int
pop
fs
ret
sbb
nop
push
add
push
mov
outsb
testb
ljmp
daa
aam
popa
in
mov
outsb
orl
fbld
stos
jl
test
daa
push
test
dec
std
or
nopl
scas
cmp
jo
cmpsb
mov
jne
pushf
pop
das
lock
out
adc
sbb
mov
clc
lea
xchg
cwtl
or
mov
inc
ss
lea
test
lcall
lea
dec
and
pop
jp
cmp
xchg
push
push
orl
call
repz
mov
fwait
iret
sbb
cli
adc
test
dec
cmp
push
roll
dec
jecxz
adc
or
xorb
pop
push
or
or
leave
inc
mov
jecxz
mov
pusha
loopne
hlt
adc
mov
jl
jo
or
ret
and
mov
int
and
icebp
add
jg
lea
pop
outsl
push
jne
mov
or
enter
jmp
inc
popa
mov
clc
xor
ret
push
pop
sub
jmp
inc
or
and
xchg
ret
test
adc
sbb
ds
add
fdivr
loope
nop
jns
xor
filds
outsl
jl
dec
scas
leave
jo
rcrb
ffreep
mov
aas
mov
mov
in
addb
adc
les
adc
sti
mov
xlat
xchg
jo
popa
jg
mov
dec
cli
inc
adc
call
and
sbb
fiadds
icebp
jo
pushf
popl
mov
outsb
ud1
mov
cmp
or
sbb
aam
std
push
shl
and
sbb
in
sbb
xchg
push
push
dec
lcall
jl
or
inc
dec
fstpt
data16
inc
mov
pop
xchg
sub
pop
ror
mov
or
mov
popa
adc
lea
cmpsb
roll
cltd
imul
mov
pusha
and
fcoml
push
in
hlt
std
adc
mov
popf
adc
push
inc
int3
dec
cs
lock
stos
jo
pop
js
mov
mov
sbb
fisttps
sti
leave
add
mov
sub
jbe
lock
sbb
xchg
mov
pop
mov
mov
iret
inc
inc
and
sbb
mov
icebp
jo
aas
sbb
lcall
jle
sahf
push
stos
ret
icebp
sub
fmulp
clc
inc
popa
jb,pt
and
sbb
ljmp
sub
andl
pushf
mov
test
push
jg
xor
enter
call
mov
adc
daa
sbb
fmul
sbb
push
add
call
or
lds
push
subb
fdivrl
leave
add
repz
mov
jecxz
sub
push
in
pop
adc
mov
sbb
pusha
outsl
lcall
xchg
xorl
add
outsb
mov
adc
cli
test
aaa
in
lcall
ja
pop
xchg
mov
xchg
or
aas
mov
mov
enter
out
icebp
add
push
outsl
jmp
push
rcrb
push
aas
and
daa
loop
xchg
mov
lds
std
cs
pusha
sbb
out
and
push
lock
inc
test
sbb
enter
hlt
rorb
les
cmpb
fidivrl
jns
push
xchg
jmp
enter
jns
scas
les
icebp
xchg
jp
setne
sbb
xchg
or
shrb
xor
movl
sub
inc
mov
pop
lds
xchg
iret
pop
push
stos
push
add
loope
roll
je
ds
aas
push
mov
mov
mov
push
inc
push
popf
xchg
cmp
cmc
bound
insb
jb
xchg
out
std
data16
es
imul
pop
inc
and
lods
fstpt
loope
xor
inc
out
mov
aas
lock
cmp
inc
pusha
aam
repnz
sub
xchg
testl
imul
adcb
std
xchg
pop
call
lret
lods
mov
push
pop
adc
inc
and
addl
adc
lds
dec
adc
movl
lods
jp
shr
xchg
je
movsb
clc
pop
dec
pop
sbb
jl
inc
xchg
fdivl
inc
rolb
push
sti
push
adc
add
inc
mov
js
movsb
dec
sbb
add
jo
test
sbb
rorb
or
add
xorb
in
or
and
jmp
mov
mov
in
mov
xor
icebp
rcll
adc
dec
inc
push
in
fwait
orb
aas
xor
pushf
or
fcompl
lret
jne
push
mov
bound
sbb
adc
sub
int
aaa
inc
mov
enter
push
movsb
insl
jp
insb
mov
pop
dec
dec
or
test
or
inc
or
bnd
leave
test
mov
gs
shrl
sbb
mov
cmp
mov
lods
sub
pop
xchg
fdivl
jno
incb
jg
mov
scas
add
push
outsl
cld
out
cli
jg
or
or
out
outsl
and
paddsw
addr16
nop
push
dec
jecxz
call
pop
addr16
xorl
mov
dec
add
mov
jge
adc
testl
push
cmpsl
or
lock
leave
pop
pushf
int
mov
ljmp
aad
lret
inc
pop
sbb
or
les
aad
jns
stos
xchg
mov
or
jo
test
test
push
pop
push
rol
sidtl
cmc
dec
aam
mov
push
mov
sbb
mov
stc
fidivl
sbb
addl
xchg
inc
subl
sbb
inc
ja
je
sbb
sbb
cmp
pop
and
jne
gs
rol
push
lahf
aam
inc
push
xlat
mov
js
xchg
aas
in
lods
push
mulb
sahf
pop
jne
ljmp
out
movsl
dec
pop
sub
int
pop
pop
xchg
imul
aas
and
test
fcmovu
rcrb
je
std
and
ja
test
jo
mov
add
xor
mov
mov
push
mov
mov
cs
add
fdivp
rol
js
pop
cltd
mov
mov
dec
mov
das
inc
push
aaa
xor
cltd
out
adc
dec
adc
xor
fstpl
cmpsl
sbb
in
out
jl
mov
pop
enter
jns
jne
lcall
sub
loopne
xchg
xchg
fdivl
add
aad
loop
rorl
mov
mov
repz
push
push
pop
int3
or
mov
xor
push
dec
popf
jmp
sbb
xchg
mov
sub
xor
incb
or
outsb
pmaddwd
mov
fstpl
scas
stc
addr16
add
rorb
push
int3
rclb
sarb
sub
inc
xchg
adc
in
aas
xchg
mov
sbb
out
outsl
sub
test
inc
cmpsb
fcomp
cmp
rorl
lahf
popa
std
mov
test
cmpsb
or
sbb
es
add
add
leave
adc
test
mov
pop
movsl
aas
or
rclb
call
fs
push
push
fistl
push
mov
xor
cmp
bound
cmp
bound
or
aad
mov
and
es
rclb
and
jbe
test
jno
nop
pusha
push
pop
sub
sbb
cli
das
fs
mov
pusha
pop
add
inc
cmp
in
sarl
repnz
cmpsb
faddp
push
andl
insb
mov
and
push
aaa
ds
test
movsl
lcall
or
jne
bound
push
inc
mov
cld
xchg
adc
and
ljmp
pop
cmp
mov
je
sub
sarb
sbb
insl
imul
imulb
std
lea
test
xchg
sarl
cmpsl
sti
mov
pusha
std
inc
mov
mov
push
push
int3
jmp
jmp
add
inc
xor
or
cwtl
in
sbb
scas
mov
cs
pop
or
ljmp
inc
xchg
sub
push
ret
dec
or
out
or
pop
mov
xchg
negl
sub
mov
xor
push
add
icebp
es
inc
sub
mov
sub
and
xor
add
pop
outsb
push
inc
daa
test
jne
push
repnz
and
cmp
lock
cmc
jb
dec
xlat
out
pop
into
test
jae
in
push
ret
sub
cli
pop
add
sbb
xchg
sub
rcl
outsl
inc
arpl
adcb
mov
cmp
pop
add
mov
loop
fiadds
mov
or
jl
rcrb
xor
cmp
pop
ja
xchg
stc
fs
mov
jns
rol
and
mov
mov
aad
jp
add
jns
stc
loopne
xchg
call
outsl
inc
roll
xchg
test
or
jb
mov
sub
or
cs
ljmp
xchg
daa
xor
or
fisubrl
cli
iret
int
filds
sbb
dec
pop
mov
scas
js
pop
mov
add
popl
xor
fimull
mov
ud0
or
pop
adc
imul
inc
sbb
or
fwait
cmp
adc
push
sub
jnp
popf
inc
jb
push
movsb
sbb
or
xor
and
mov
icebp
clc
inc
js
test
push
mov
lock
adc
push
roll
in
cmp
out
xchg
inc
lock
or
insb
inc
sub
lds
in
cmp
orl
inc
add
pop
xchg
lcall
out
cmc
mov
shrb
sbb
push
or
stc
sbb
iret
hlt
mov
pop
inc
and
pop
call
jp
inc
jmp
test
sbb
or
inc
js
insb
les
data16
lock
dec
pop
and
mov
inc
out
inc
loopne
adc
shrb
or
and
pop
test
pop
stos
inc
int
sbb
nop
pop
jle
inc
loopne
or
mov
test
add
push
repz
pop
pop
sbb
inc
mov
pop
adc
mov
repz
mov
jmp
clc
icebp
mov
dec
push
xor
stc
jg
xor
jg
call
lods
sbb
pop
push
rcl
push
mov
fwait
add
int3
scas
stc
inc
jbe
outsl
mov
stos
mov
pop
lahf
inc
jb
push
add
adcb
lods
inc
andl
aaa
push
dec
or
pop
arpl
std
add
repz
gs
arpl
push
inc
push
inc
pop
xor
fdivrl
sub
fcompl
jg
clc
mov
loope
mov
pusha
dec
aas
std
push
mov
or
roll
mov
shlb
js
in
sub
rolb
add
mov
inc
hlt
subl
push
loop
pop
sub
bnd
fsub
cmp
jb
or
shll
mov
mov
mov
mov
fistpll
lcall
loop
xor
loopne
lock
adc
setb
das
cmp
adc
es
mov
shrb
fcoms
fisttps
scas
add
inc
push
inc
out
inc
inc
sti
jg
mov
fstps
ljmp
or
fs
mov
hlt
xor
mov
mov
and
adc
adc
cmp
add
mov
mov
push
test
aad
aaa
shll
scas
push
ret
sub
test
push
jne
shl
js
jo
inc
mov
ud0
int
inc
or
pop
int
mov
mov
jl
filds
je
popa
lcall
je
aas
popa
insb
cmp
add
cltd
cli
jmp
sti
inc
lock
cmc
cld
lds
push
js
fs
push
andl
push
sub
add
outsb
push
sbb
adc
movsl
add
push
jg
add
mov
repnz
mov
xor
jbe
pop
cmp
and
aam
add
std
pop
orl
dec
test
ror
dec
adc
inc
mov
popf
imul
lock
jne
and
sub
ficompl
inc
mov
popa
pushf
shrb
cwtl
rorl
inc
repz
add
xor
and
or
cmp
cmp
push
call
test
movsb
aad
xor
jl
ficoml
jle
outsb
in
pop
aaa
xchg
mov
mov
pop
jnp
xchg
or
test
test
mov
movsl
push
add
dec
sbb
pop
loopne
orb
xchg
mov
adc
sub
orb
lds
mov
mov
ja
outsl
mov
add
bound
jbe
mov
fldt
sahf
jno
icebp
dec
and
cli
aam
pop
and
push
sbb
jmp
xor
loopne
sbb
dec
pop
jns
aaa
or
dec
mov
or
test
add
add
xor
mov
sbb
cmpsl
in
lea
inc
cmpsl
popf
cmp
cmpsl
lock
xor
aas
sbb
inc
mov
ret
testl
add
pop
stc
xchg
sbb
imul
pop
sbb
or
mov
imul
movsb
mov
jae
cmpsl
loope
mov
pop
mov
cmp
outsb
jmp
aas
push
aam
cmc
or
sbb
rorb
xchg
push
cmpl
push
cwtl
and
in
and
push
mov
mov
subb
dec
dec
movsb
scas
add
ljmp
adc
jno
scas
mov
mov
pop
inc
fmul
imul
orb
pop
cli
aas
out
test
das
mov
cmp
inc
dec
addb
js
fwait
inc
xchg
mov
mov
mov
mov
imul
aas
mov
repz
test
lea
mov
pusha
push
nop
mov
push
and
ljmp
enter
inc
pop
je
in
add
add
adc
arpl
das
lock
aam
shlb
jle
aas
and
xchg
jl
gs
int3
addr16
imul
xorb
das
push
xor
addb
cmp
roll
ja
fs
outsl
jle
add
je
inc
mov
fsubr
sahf
xlat
mov
and
xlat
loopne
stc
xor
mov
in
jnp
xor
mov
fwait
push
cmc
stos
cmpb
add
add
fnstsw
popa
fnstenv
lret
push
jns
fisttpl
pop
xchg
or
cmc
lahf
push
clc
and
shlb
mov
push
mov
xlat
sub
lock
adc
rclb
adc
cwtl
add
jnp
fcomip
adc
test
and
aas
ja
and
push
cld
test
adc
xor
jo
xchg
rclb
shrb
jge
and
mov
fyl2xp1
adc
sbb
mov
push
push
xor
test
stc
mov
aaa
loopne
cld
imul
jno
sbb
insl
sbb
pusha
pop
mov
xor
mov
aad
ds
or
inc
sub
test
dec
cli
loope
push
inc
or
dec
lock
cmp
cmp
cltd
xchg
or
mov
loopne
adc
jae
jo
xchg
inc
pop
je
in
mov
push
cmp
cmpsl
out
mov
mov
inc
adc
inc
repz
push
mov
or
stc
xchg
pushf
and
mov
clc
push
sarl
int
stos
adc
popf
filds
sarb
add
ljmp
stos
add
sbb
mov
loope
xchg
adc
loopne
sbb
xchg
mov
or
sub
lods
jl
xchg
lcall
lds
sbb
jno
adc
or
add
leave
inc
popa
inc
adc
std
ja
orl
sbb
jne
out
mov
notb
pop
aam
gs
pop
or
aad
fnstsw
fdiv
or
adc
cmp
lods
mov
mov
add
xor
dec
pop
cmp
ds
pushf
xchg
dec
inc
lods
std
sub
add
jge
pop
add
test
adc
ficoms
push
clc
cmp
cs
pop
xlat
ds
pop
mov
inc
xchg
sahf
movsb
addr16
inc
rcll
mov
adc
cltd
push
jo
test
dec
insb
mov
xchg
dec
adc
sub
sbb
cwtl
mov
scas
xor
add
arpl
sbb
jo
inc
jnp
adc
pop
mov
lret
nop
jecxz
add
ror
cld
jge
fsubrp
cmp
notl
mov
xor
push
add
sbb
aas
mov
sub
inc
inc
cmpsb
cltd
and
ret
push
bound
sbb
mov
cmp
jp
add
pop
sub
add
xchg
jnp
pop
mulb
xchg
jb
push
pop
lea
sub
icebp
jno
stos
cmp
ja
xchg
fs
jle
mov
addr16
es
fstl
push
enter
inc
ljmp
daa
in
into
icebp
stc
or
sub
adc
shl
sbb
mov
sahf
pop
daa
bound
mov
and
jecxz
ret
jno
mov
pop
add
cmp
outsl
pop
add
add
adc
push
stos
cmp
push
adc
inc
adc
inc
add
sbb
leave
jecxz
test
xor
shlb
cmp
mov
and
push
inc
in
dec
push
in
push
js
push
insl
add
cmc
insl
jne
adc
sub
xor
outsb
cmpsb
or
sbb
inc
inc
or
mov
xor
pop
ret
mov
pop
pop
jg
pop
mov
cmp
lds
jns
push
jl
dec
xor
xor
jle
pop
mov
add
insl
cwtl
pusha
call
mov
jl
out
imul
je
mov
xor
fistps
pop
mov
or
adc
sar
sbb
stc
dec
sarb
pop
test
addr16
fmuls
movb
in
cmp
sbb
push
test
enter
add
pop
out
int
xrelease
outsb
mov
cltd
stos
jne
jo
ss
push
test
and
mov
lret
imul
stc
inc
icebp
dec
insb
jecxz
push
icebp
sub
sahf
dec
ret
add
dec
sbb
gs
mov
mov
loop
gs
les
mov
rcrb
aaa
sbb
add
and
cs
push
pop
stos
mov
clc
xchg
dec
popa
loop
mov
inc
mov
mov
mov
ret
shrl
insl
clc
cmp
pop
xlat
and
xlat
cmp
into
rcll
sbb
pushf
addr16
movsl
mov
js
mov
into
movsl
and
xchg
push
in
lret
ret
test
int
mov
pop
adc
and
leave
push
jns
subl
cmp
jo
cs
insb
jmp
push
cmpsl
mov
fadds
out
inc
scas
clc
ja
cmp
sbb
or
ds
xor
xor
mov
mov
or
hlt
jecxz
pop
push
test
mov
push
inc
mov
mov
sbb
cmpsl
pusha
test
push
jg
sbb
loopne
pop
or
mov
rorl
mov
push
mov
sbb
cli
jno
mov
mov
pop
add
jnp
jl
lea
xor
popa
sbb
xchg
xchg
dec
push
ljmp
frstor
push
sbb
inc
sbb
scas
sbb
push
push
and
jge
mov
orl
ret
adc
loope
push
fprem
adc
adc
inc
inc
not
lods
cmc
push
inc
test
pop
cwtl
push
lcall
ljmp
inc
mov
rcl
add
push
mov
insb
hlt
loopne
mov
lret
fimuls
pop
popa
clc
js
dec
lahf
xor
lsl
cwtl
jmp
mov
pushl
or
loopne
add
fdivrl
das
push
pushl
lds
or
dec
pop
xchg
outsl
stos
dec
sbb
aad
andb
test
push
sub
dec
rol
daa
mov
ljmp
and
arpl
ror
out
jno
mov
imul
and
iret
xchg
fldl
fst
imul
cmpsb
movsl
xchg
cmpsb
data16
sbb
ret
js
mov
add
stc
dec
sbbb
lahf
or
js
stc
pop
int3
adc
mov
jne
sub
mov
mov
flds
and
inc
jo
rcrb
cld
add
test
dec
fstl
loopne
ja
movsb
mov
pop
adc
inc
add
or
adc
rcl
arpl
dec
adcl
scas
sub
sbb
setge
mov
imul
out
xor
js
sahf
test
cmp
push
gs
sbb
lret
out
sub
js
cmp
dec
cmp
enter
jp
dec
arpl
loopne
push
dec
fisttpll
xchg
das
dec
mov
mov
add
xor
stc
mov
jg
movsb
dec
ret
mov
mov
sbb
scas
shrb
adc
xor
pop
test
aas
mov
xchg
out
cmc
push
aas
xor
ljmp
stos
test
add
cmp
lock
lods
lock
bound
add
add
adc
fisttpl
bound
push
add
dec
aas
mov
push
cmp
and
gs
dec
sbb
mov
les
test
jne
cmpl
mov
sbb
in
lds
dec
cmp
sub
mov
mov
pop
mov
imulb
dec
jmp
jne
add
test
ds
jno
mov
je
or
pop
icebp
lret
iret
xchg
testb
pop
enter
fldcw
sub
mov
dec
push
inc
out
loope
or
sbb
hlt
enter
pop
loop
inc
and
call
aas
mov
fstps
scas
lock
cmp
jne
push
cwtl
fisttps
push
and
dec
sub
xor
push
out
comiss
loopne
add
stos
dec
or
inc
test
inc
push
mov
jo
roll
mov
aam
gs
or
and
jmp
imul
shrb
pop
test
dec
inc
push
push
in
inc
hlt
cmp
jle
xor
push
test
cmp
mov
jbe
mov
imul
lea
jg
adc
lcall
outsb
addb
gs
dec
push
lea
jno
ljmp
ja
jecxz
mov
or
movl
xchg
decl
xchg
lods
or
add
sub
adc
stos
dec
icebp
push
leave
mov
xchg
adc
cs
ss
imul
fistpll
inc
xchg
scas
inc
add
or
lods
out
test
xor
fmull
cmc
daa
push
push
ljmp
mov
push
stos
cld
das
stos
jmp
adc
pop
addl
lds
loope
mov
add
jo
sub
adc
push
gs
jp
orl
or
push
or
mov
faddp
and
mov
sbb
test
add
loopne
sub
test
je
dec
jmp
loopne
sbb
jnp
lahf
xlat
mov
sub
add
pop
shl
adc
dec
dec
shl
pushl
js
paddusw
or
ja
add
pop
pop
adc
cmp
adc
pop
lock
jo
ja
leave
mov
cmp
gs
mov
int
cmp
lahf
in
or
cmp
mov
dec
pop
dec
xchg
pop
jno
clc
test
cld
dec
mov
les
decl
inc
ljmp
jb
lcall
lods
dec
decl
test
cmp
dec
insb
add
orb
scas
dec
aas
inc
or
rclb
jmp
inc
jno
adc
add
mov
push
push
pop
lahf
sbbb
jo
test
pop
cmp
ds
or
repz
ret
daa
dec
cli
test
adc
jecxz
xor
jns
mov
in
adc
or
add
lods
cmpsb
add
mov
aaa
and
xchg
add
ljmp
mov
push
mov
pop
inc
mov
or
adc
mov
lds
xor
mov
push
leave
cld
mov
add
sti
inc
xchg
push
je
sar
add
cwtl
idiv
mov
or
inc
add
push
inc
and
xchg
mov
sub
adc
sub
inc
pop
adc
sar
mov
add
subb
push
popf
jns
lock
dec
jmp
dec
addr16
call
pop
subl
pop
leave
push
and
in
or
rorl
add
push
inc
movl
shl
dec
les
in
pop
aas
cmpsb
sub
add
cmpsl
and
shrb
inc
fs
lods
cld
inc
pop
or
lea
stc
adc
test
paddd
dec
rorb
cli
in
je
mov
mov
ja
stos
test
or
sub
aas
sbb
repz
outsb
mov
lods
rorl
ss
or
ja
fcoms
push
add
pop
leave
xchg
pop
popf
and
adc
add
in
dec
add
enter
inc
test
loope
mov
add
xchg
addl
add
and
mov
dec
adc
mov
pop
add
std
arpl
test
cmp
adc
decl
repnz
push
inc
loopne
cltd
and
jne
mov
fcompl
clc
or
adc
mov
jl
loop
or
std
lret
icebp
dec
jge
add
adc
hlt
adc
ret
sbb
inc
pop
aaa
jno
adc
fnstenv
into
cmp
jle
mov
sti
or
popa
sub
cmp
or
add
add
and
repnz
js
icebp
lock
or
add
loopne
int3
inc
inc
jbe
incb
pop
cmp
sbb
inc
sbbb
push
pop
lock
add
fiaddl
out
adc
push
xchg
dec
or
int3
cmpl
aad
dec
lahf
pop
fidivrs
shl
xor
sbb
add
clc
cld
adc
shrl
adc
mov
inc
add
dec
pop
movsl
cmp
adc
shrb
cwtl
xchg
sti
and
cmp
ret
inc
mov
add
xchg
jp
mov
adc
or
push
adc
inc
xor
pop
add
xor
stc
pop
mov
push
and
push
sub
andl
adc
mov
and
dec
mov
mov
fisttpll
js
shl
andl
leave
pop
movsb
xchg
sbb
mov
xorl
jl
test
adcb
push
jb
and
sub
push
insl
dec
stos
jmp
test
stos
nop
rolb
inc
mov
fwait
lods
sbb
push
and
lcall
icebp
jmp
mov
mov
mov
dec
mov
inc
in
push
clc
lret
push
insb
stgi
xor
mov
mov
cli
jmp
pop
shll
dec
popf
add
iret
mull
lahf
sahf
add
pop
and
sbb
imul
dec
sahf
cmp
sub
test
aaa
push
out
clc
cmp
sub
lds
lds
cld
out
les
loope
fs
mov
out
movsb
cmpsb
sbb
stos
mov
jmp
adc
nop
lcall
push
dec
mov
or
in
enter
mov
shl
divps
push
push
sbb
call
ljmp
jae
rcrl
roll
jl
push
pop
dec
ss
stos
ret
cli
outsl
add
fucom
js
inc
xor
dec
lahf
insb
mov
push
jne
incb
add
cmpb
mov
out
mov
pop
jecxz
cli
xchg
xor
ret
jl
daa
mov
pop
std
and
mov
enter
xchg
outsb
incb
or
adc
mov
sbb
adc
inc
xor
lahf
push
add
fdivrs
roll
ja
inc
lock
push
xor
ljmp
cmc
mov
arpl
loop
sub
sti
or
push
icebp
dec
shll
mov
sbb
stc
out
and
xlat
add
adc
inc
sahf
dec
ret
dec
cmp
es
add
inc
sub
cld
lock
xchg
xchg
pop
push
les
cli
jg
dec
enter
sahf
sbb
dec
aaa
incb
iret
inc
jg
dec
imul
push
std
loopne
lds
sub
sub
mov
add
dec
outsb
out
fcomps
fcoms
rcrl
cld
mov
jae
imul
or
fnstcw
lods
aam
xor
subl
mov
jg
cs
pop
popa
add
js
add
mov
mov
rcrb
ss
adc
jg
inc
cs
mov
ret
sbb
or
push
inc
mov
xor
into
add
sub
mov
cmp
ss
push
rorb
icebp
test
mov
add
roll
add
push
fsubp
rcrb
mov
fcompl
cld
or
aam
es
mov
cmp
iret
cmpsb
adc
push
rcrl
rcll
in
or
sbb
cmpsl
dec
cmp
call
test
shlb
stc
repnz
aam
insb
push
inc
lcall
xor
out
add
daa
mov
push
inc
add
in
iret
filds
jb
outsb
call
test
mov
aam
mov
pop
mov
add
in
and
add
xor
inc
or
repnz
leave
lods
mov
mov
mov
or
xor
loopne
mov
popa
loopne
outsl
arpl
lahf
push
jne
int
add
adc
adc
cmpsl
xor
daa
fdivr
mov
jns
insb
mov
push
add
adc
xor
mov
popf
ficompl
and
jle
movsl
mov
or
aas
push
sub
roll
pusha
push
sub
cs
and
addb
cltd
adc
decl
lods
outsl
fabs
enter
xor
stc
push
ss
fisubs
mov
loop
ljmp
repnz
enter
jecxz
mov
cmp
xchg
xchg
push
mov
mov
movsl
add
sbb
add
movl
mov
in
idiv
dec
inc
cld
jb
fnsave
jmp
mov
and
movsl
movsb
mov
jmp
fistpll
in
jne
call
dec
pop
mov
dec
dec
lcall
lock
sbb
test
aas
and
pop
mov
in
xchg
cmpsb
jmp
fsts
in
scas
fld
push
roll
inc
mov
out
sub
test
shr
ret
mov
dec
dec
stos
nop
sbb
int
mov
and
lea
ljmp
pop
test
int
inc
repz
add
ret
outsl
mov
das
icebp
xor
jmp
aas
pop
cmc
and
sbb
call
dec
xlat
sbb
lahf
pushf
add
fmull
mov
mov
hlt
inc
push
inc
out
mov
dec
loope
movsb
incl
pop
call
xchg
pop
jg
push
sub
adc
inc
aas
lods
push
repz
fwait
or
in
pop
xchg
lcall
or
lcall
cmp
cs
movsb
mov
popa
loop
xor
std
dec
xor
mov
shrl
mov
push
mov
adc
jp
rcll
and
add
and
in
incl
iret
mov
pop
fildl
sbb
insl
sub
pop
push
sub
cwtl
cmp
pop
mov
shlb
cmp
aad
insl
lea
mov
test
ja
xor
loopne
out
ficompl
addl
add
pop
cwtl
js
pop
mov
mov
xchg
test
fwait
or
je
out
fwait
mov
sbb
inc
push
pop
cmp
add
inc
and
add
jl
xchg
ja
loop
in
add
push
push
lods
add
and
clc
int
jns
xchg
push
mov
or
xor
add
xor
aam
je
and
rcrl
pushf
mov
clc
fildll
sbb
pop
sbb
rorl
xchg
adc
cltd
add
test
andb
sub
and
pop
dec
inc
cli
aas
adc
xchg
cmp
cwtl
je
int
mov
mov
jb
pusha
inc
mov
fbstp
cmp
dec
add
iret
stos
sbb
dec
mov
mov
push
decl
icebp
nop
push
jo
dec
mov
fidivrs
outsl
push
or
xor
ss
xor
dec
adc
sbb
hlt
scas
sbb
pop
pushf
in
fadd
mov
mov
mov
call
xchg
pusha
test
shlb
mov
cmp
rolb
push
inc
aam
decl
mov
js
sub
es
cmc
decl
inc
fildl
inc
adc
add
insl
xor
out
mov
stos
pop
cmpb
orb
adc
inc
adc
lcall
outsl
xor
lods
adcl
mov
fcom
pop
adcl
or
fistpll
xchg
rorb
adc
flds
or
xchg
dec
xchg
xchg
mov
mov
pop
arpl
test
dec
mov
sbb
push
add
pusha
jne
nop
fldenv
scas
js
stos
xchg
call
and
xchg
int
addr16
addr16
ror
xor
rorl
push
shlb
and
imul
pop
stc
insb
jo
jp
sub
xchg
imul
ss
mov
pop
les
movsb
js
in
repz
push
jnp
test
lret
cli
sbb
aam
cltd
icebp
aam
loope
or
or
movsl
hlt
inc
mov
mov
mov
xor
cmpb
add
cmp
sub
jne
addl
or
aas
incb
jo
scas
addr16
mov
je
aad
xchg
testl
incb
shl
sahf
push
lea
jg
mov
es
mov
lods
sub
cmpsl
out
stos
jbe
fnstsw
insb
aad
int
mov
xor
faddl
sbb
ss
pusha
add
rorb
negl
pusha
add
aam
add
dec
outsl
decb
mov
cmp
lcall
lods
cmpb
fsub
sbb
pushl
xor
test
arpl
shll
popf
jl
gs
stc
mov
ds
inc
lea
lret
add
cmc
in
daa
ds
lods
clc
fbld
mov
add
pop
and
out
jg
cmpsl
leave
push
xor
sar
jmp
and
pop
ja,pn
or
ja
or
sub
adc
rclb
xchg
or
rol
leave
inc
shrl
in
mov
mov
hlt
sbb
sub
ret
mov
cld
sarb
sahf
es
adc
test
mov
lret
push
sbb
rorb
ret
pop
pushw
dec
ljmp
sbb
movsb
mov
sbb
mov
mov
lods
mov
cmpsl
add
pop
push
jo
popa
lds
pushl
ljmp
sub
fcoms
ljmp
shll
inc
mov
neg
daa
in
enter
jg
bound
popf
xor
sbb
sbb
inc
lods
addr16
jb
adc
hlt
jmp
xor
filds
rclb
sbb
fcom
sbb
jp
dec
pop
inc
mov
ja
incl
mov
out
mov
lock
je
push
rep
sub
push
js
inc
lret
incl
dec
inc
mov
scas
adc
dec
fnstenv
lock
cltd
mov
data16
addb
jae
testb
call
call
icebp
pushf
outsb
scas
fs
loope
fsubrs
scas
mov
loop
inc
push
pushf
mov
jle
push
push
es
test
sbb
jmp
add
xor
mov
cmc
orb
cmp
push
or
adc
repnz
jl
fcmovb
pusha
sbb
inc
jecxz
lcall
push
mov
loopne
cmpsb
or
pop
aaa
xchg
js
xchg
aas
push
stos
lahf
fdivrl
shlb
add
test
xchg
pop
test
xchg
sbb
jne
lock
pusha
aad
aas
add
mov
xchg
adc
test
mov
mov
adc
xor
dec
mov
jo
decl
push
dec
push
push
sub
jl
push
mov
clc
xlat
inc
push
cld
js
int
mov
pop
pop
loopne
sub
decl
cld
shrl
cmpsl
test
mov
jne
add
ljmp
push
fdivrs
lahf
mov
idivl
jmp
and
xor
fidivs
pop
mov
nop
movsb
lods
pop
fstps
leave
pusha
nop
scas
add
push
rclb
pop
lock
sub
stos
inc
xchg
orb
and
fs
inc
sub
ja
ret
jg
aad
push
inc
sub
inc
dec
outsb
roll
lahf
and
sbb
sti
or
add
sbbb
jle
xchg
clc
jg
add
leave
mov
push
out
lcall
pop
lcall
sub
or
ja
add
dec
aad
aam
dec
mov
jg
cmp
mov
pop
dec
add
fs
sub
jecxz
sbb
shl
cmp
aad
cmp
pop
shrb
pop
xor
loop
xor
out
jae
xor
popf
into
mov
stos
mov
ret
pop
test
notb
mov
addr16
mov
push
scas
push
sub
inc
aaa
push
fwait
call
lcall
push
es
gs
mov
add
pop
aad
xor
jo
sub
cmp
pusha
cld
das
or
cmp
test
xchg
jb
lret
add
stos
mov
decl
iret
mov
jle
icebp
adc
mov
jl
and
jg
ljmp
cltd
or
jne
loop
bound
cmp
sbb
xchg
sbb
and
push
sbb
filds
xor
int
jne
filds
jmp
xchg
jbe
sbb
adc
movb
cmpsl
mov
std
or
jecxz
inc
dec
daa
push
in
in
pop
jne
xchg
push
fadds
decl
inc
in
ficoms
test
add
fxch
xor
adc
repnz
adc
dec
push
jb
ds
cmp
push
mov
and
pop
fcomp
push
add
dec
int
addr16
lahf
lock
call
dec
sbb
stc
add
jg
or
add
push
mov
jp
test
test
inc
hlt
dec
adc
xor
adc
pop
fildl
movb
or
cmp
mov
inc
sti
scas
cmpl
pop
add
mov
aad
push
dec
mov
jl
mov
das
pop
sub
sbb
popl
push
test
and
mov
jge
fnstsw
clc
adc
neg
enter
decl
cltd
pop
cmp
sbb
orb
and
sub
add
or
ret
out
std
or
mov
push
popf
fwait
cmp
and
adc
push
ret
jl
rcrb
test
sbb
fbld
pop
push
mov
pop
lret
scas
add
sub
inc
adc
cmovbe
mov
sub
or
dec
out
aaa
cli
fisubrs
cmp
push
inc
mov
xor
lcall
pop
fstpl
cmpl
sub
fbstp
pop
xor
push
loopne
popa
jne
out
adc
daa
dec
adc
fs
data16
je
lods
shl
sub
push
pop
andb
xchg
loope
jg
or
jg
ljmp
dec
push
fldcw
ds
ror
push
movsl
mov
push
mov
ja
xor
xlat
sarb
or
xchg
xor
cmp
jmp
push
or
add
loope
insl
cmc
inc
and
test
bound
fiaddl
iret
xor
adc
shlb
lret
imul
leave
lcall
fwait
lcall
sbb
mov
push
xchg
shlb
aas
pop
jno
fs
jo
adc
leave
int3
or
dec
jg
inc
outsb
js
push
js
jecxz
adcl
lahf
add
push
notb
sub
es
push
jg
dec
add
movsb
add
ror
push
aad
jg
pop
scas
sbb
add
cmp
fsubr
mov
jmp
jo
cld
or
clc
fldt
aam
jne
xor
nop
out
clc
fnstsw
inc
xor
mov
mov
bound
call
pop
cmp
pop
in
loope
push
or
dec
xor
add
or
icebp
stos
fwait
rcrb
mov
push
push
mov
or
and
adc
test
dec
out
add
clc
ret
ret
std
lock
mov
and
push
fdiv
push
cmp
clc
or
mov
or
mov
xchg
sbb
jle
pop
cmp
cmp
loop
incl
or
stos
or
pop
or
in
bound
cmpsl
shll
mov
cmp
aaa
aam
mov
loopne
jno
divb
movsb
pop
and
clc
ret
push
inc
mov
sub
call
inc
test
jmp
icebp
call
fists
pop
push
adc
icebp
mov
inc
cmp
ds
out
fcomps
push
shlb
sbb
pushl
mov
icebp
adc
or
inc
and
cmp
addb
sbb
loop
popa
sar
leave
or
lcall
add
inc
aas
push
inc
iret
mov
rcr
aas
mov
sub
add
decl
jae
lahf
test
and
inc
cltd
fistpl
incl
or
addb
movd
rcr
mov
testl
in
fstpl
push
shrb
psubb
inc
mov
js
inc
inc
cwtl
out
imull
test
fcompl
push
cmp
outsl
daa
js
mov
fisttpll
push
in
or
jl
int3
int
loopne
and
ss
lahf
or
push
push
sbb
mov
fadd
test
lahf
pop
cmc
cmp
addr16
out
cwtl
mov
lods
mov
cltd
pop
loopne
frstor
jmp
mov
lcall
mov
mov
test
arpl
adc
push
add
icebp
sbb
sbb
fmulp
stos
scas
add
inc
in
or
ljmp
je
mov
sub
sbb
cmpsl
jo
test
sub
jl
nop
stos
lea
mov
jl
arpl
adc
or
and
sub
cmp
mov
inc
jge
dec
push
insb
adc
sbb
mov
xchg
push
loope
in
fbstp
mov
aas
or
ljmp
js
mov
ja
rcl
insl
test
sbb
loop
aam
mov
sbb
sbb
sbb
clc
loopne
ljmp
sarb
adc
add
lahf
or
aaa
cmp
add
xor
aad
lds
lock
sub
aas
cmpsb
adc
push
lods
cli
pushf
pop
jo
add
mov
mov
pop
decb
sub
jle
lods
jnp
aaa
or
sbb
lock
add
aas
cli
jmp
in
test
imul
xchg
mov
les
cmp
push
cmpsl
sti
dec
fmuls
mov
mov
cld
mov
lock
sbb
int3
lahf
and
dec
mov
dec
les
add
jne
and
ss
cmp
and
inc
dec
cltd
clc
cmc
mov
pop
inc
xor
sbb
lcall
gs
loopne
or
leave
rorb
lahf
adc
outsl
stc
addr16
hlt
or
rorl
mov
sarb
sbb
inc
cmc
inc
test
inc
xchg
loope
icebp
mov
in
xchg
cs
push
lret
out
pop
loopne
movsb
xchg
mov
xchg
orb
repz
mov
idivb
shll
popa
jle
inc
xor
ljmp
scas
pop
rorb
fwait
xchg
pop
jl
std
jp
xchg
push
or
and
xchg
std
add
mov
psubusb
push
fstps
fucomi
mov
das
icebp
push
out
aam
ret
imul
xor
incl
sahf
or
inc
sbb
pop
je
aaa
mov
push
and
ja
jg
dec
sub
mov
pop
mov
adc
xchg
icebp
inc
cli
push
hlt
pop
inc
lock
cli
fistpll
xlat
ret
pop
fldl
mov
sub
mov
ror
out
or
fxtract
or
xor
or
jo
sub
imul
popf
incb
testb
cmp
push
lret
outsb
xchg
pop
and
ret
pushw
mov
or
add
xor
mov
sbb
and
dec
cmp
nop
mov
dec
cwtl
fwait
clc
mov
and
push
inc
push
pusha
fwait
push
dec
loop
cmp
lock
mov
mov
adc
push
adc
add
dec
jbe
dec
data16
call
xlat
dec
test
shrb
out
rcrb
cld
sbb
fidivrl
mov
sbb
cmpb
hlt
das
rclb
or
jo
xorl
cmp
sub
aam
push
pop
sarl
push
cmp
push
shrb
cmp
sbbb
lds
lcall
sub
movsl
sbb
mov
dec
push
into
dec
mov
dec
add
into
jb
ljmp
sbb
cwtl
roll
mov
xlat
pop
dec
jne
mov
push
dec
dec
lret
rol
sti
mov
push
in
push
inc
or
jecxz
push
add
jo
call
jecxz
mov
clc
incl
mov
add
imul
mov
mov
lods
dec
mov
inc
sbb
push
sbb
cmp
test
inc
ljmp
stc
or
incb
out
mov
lods
xchg
stc
pop
test
aad
mov
sbb
or
cmp
popa
or
add
mov
mulb
stos
aad
aaa
cli
sahf
stos
cmp
jmp
pop
or
inc
or
daa
cmp
push
sbb
fs
mov
ret
cmc
jmp
or
push
pop
data16
aam
ret
nop
and
aam
push
xchg
xor
or
lock
pusha
dec
mov
out
mov
cmp
test
mov
mov
insb
out
popa
sub
cmc
pop
clc
dec
repz
and
in
js
insb
ds
test
jle
jg
add
lea
scas
and
test
and
sub
inc
and
fdivr
push
fdivl
hlt
lods
divb
sbb
inc
loope
inc
hlt
call
adc
and
add
sbb
xor
sbb
scas
mov
aas
cmp
aad
mov
add
call
inc
fidivrs
and
push
mov
insb
cmp
je
push
xor
aaa
cs
inc
ret
stc
fucomip
pop
ficompl
aam
aas
xchg
xchg
sub
imul
or
sbb
addr16
mov
inc
pop
subl
sbb
add
inc
hlt
add
cmp
clc
jp
repz
test
iret
in
aam
sub
pop
mov
and
mov
mov
jb
jg
dec
push
pop
mov
jmp
pop
add
icebp
cmp
aas
mov
jns
in
sub
ljmp
sub
imul
add
and
enter
fists
mov
loope
sub
mov
sbb
xchg
nop
into
or
mov
inc
out
lock
sub
loop
push
fstl
pop
inc
clc
inc
mov
dec
pop
ss
cmp
adc
dec
mov
add
add
cld
push
dec
gs
rcrl
rcrl
enter
mov
mov
jp
jns
inc
mov
aas
out
es
enter
and
ja
sbb
lds
aas
push
jne
fcoms
ror
inc
or
mov
jl
mov
dec
stc
imul
loope
subb
call
addr16
mov
nop
popf
stos
xchg
subl
pop
shlb
adc
and
shrl
and
mov
adc
mov
popa
mov
pushf
bound
out
mov
jnp
xor
stos
outsb
lock
hlt
lahf
cmp
pushf
push
xor
jmp
test
int
pop
mov
addl
mov
push
xorb
push
push
in
lcall
lds
sbb
adc
and
xchg
je
cs
in
and
adcl
push
cmp
cmp
sbb
adc
movzbl
rclb
sbb
cmpsl
adc
jg
stos
adcb
leave
sbb
inc
push
and
ret
or
pop
mov
movsl
inc
mov
and
adc
loopne
xor
adc
lret
lods
cmp
std
fimull
jg
sub
sub
mov
lret
mov
jp
pop
dec
add
lds
add
std
sub
sarb
roll
jne
out
mov
int3
insl
fwait
xor
mov
adc
cld
pop
adc
nop
mov
inc
push
aaa
pop
bound
jp
mov
xchg
int3
xor
add
push
cld
ljmp
int
int3
sbb
cmp
mov
jne
cltd
ror
push
inc
pop
sbb
stos
inc
push
xor
or
fcmovu
jb
arpl
add
inc
lcall
sub
inc
push
test
fcoms
jno
add
out
sbb
and
into
sbb
lcall
xchg
dec
fisubrl
add
push
mov
and
cli
mov
jmp
dec
cld
xor
sbb
adcb
sti
mov
sbb
js
lret
flds
dec
mov
push
push
cwtl
insb
and
ja
pop
or
add
enter
dec
clc
inc
lahf
push
rol
andl
jecxz
aaa
mov
bound
lahf
xor
inc
cmpsb
pop
movntps
jae
dec
jmp
jne
fists
cmp
repz
lea
adc
scas
cmp
fildll
lcall
sbb
add
xlat
xor
mov
adc
loopne
mov
mov
lcall
xor
pop
mov
push
fadds
push
adc
add
add
sbb
or
adc
mov
sub
int
jl
jg
dec
add
xchg
shll
adc
mov
gs
scas
mov
imul
mov
mov
push
sar
arpl
cmp
je
imul
mov
movsb
je
add
jecxz
incl
lret
insb
mov
and
mov
psrlw
xchg
aam
clc
mov
fcomps
sub
cmpsl
push
or
mov
push
fadds
mov
shll
popa
lock
add
jg
in
hlt
push
aad
andb
test
mov
movsl
nop
nop
imul
and
jmp
push
clc
in
mov
jb
jge
cmpsb
mov
pop
pop
inc
or
push
xchg
test
pushf
jns
arpl
push
sbb
cmp
jne
dec
adc
out
sarl
and
cli
push
in
jo
sar
and
inc
jmp
cld
incl
mov
dec
in
std
jns
push
rorl
adc
push
cmp
incl
sbbl
jg
aam
push
test
sub
inc
sub
cld
sbb
fisttpl
iret
lods
in
subb
cmp
cmpl
cwtl
add
xchg
mov
nop
xchg
jp
call
dec
and
popf
sub
stc
insb
xor
push
std
mov
xchg
jne
mov
mov
push
jg
fsubs
sub
mov
sbb
call
mov
inc
mov
imul
xorl
bound
cmpsb
jecxz
out
jne
xorl
sbb
inc
or
pop
mov
inc
sbb
cmp
in
cs
cwtl
adc
cld
jmp
push
shrb
jae
dec
loopne
call
movsb
lods
push
cld
or
out
dec
adc
sbb
incl
fnsave
imul
ret
mov
or
roll
loop
push
xor
push
clc
decl
hlt
xor
cmpl
sub
roll
and
outsb
lods
enter
ljmp
mov
call
pushf
f2xm1
add
sahf
jb
fsub
test
pop
movsl
dec
xor
dec
pop
pushl
enter
out
and
and
dec
pop
stos
flds
test
ret
aad
adc
pop
or
paddusb
sub
xchg
ss
jno
lahf
rcll
xor
add
xchg
mov
psrlw
mov
stos
lock
sti
add
and
sub
imul
xchg
es
pop
or
sbb
flds
lcall
inc
mov
fwait
lret
in
cli
lods
dec
xor
icebp
fcompl
mov
jmp
and
sub
sbb
mov
insl
incb
pop
push
jno
cwtl
jae
clc
dec
call
and
int
popf
pop
inc
aam
popl
mov
xor
and
add
mov
cmp
cwtl
aam
sbb
call
xlat
clc
ja
mulb
stos
pop
pop
decl
pop
mov
iret
pop
arpl
inc
mov
or
adcb
inc
push
arpl
popa
popa
dec
xchg
fbld
mov
pop
or
add
mov
inc
fistl
xchg
lahf
push
scas
jge
imul
inc
xor
mov
sub
arpl
and
scas
sub
cmc
and
testb
faddl
jno
mov
insl
outsb
add
loope
dec
jo
xor
add
cld
stc
push
jae
imul
adc
cli
and
sub
and
ds
adc
xor
dec
mov
fldl
dec
stos
mov
shll
pop
test
jae
push
lods
adc
sti
xchg
loop
cld
mov
sub
cld
push
inc
xchg
fucomp
lea
in
cmpsl
xchg
js
xchg
pop
ret
and
ret
or
cld
aas
cmp
call
stc
xor
or
xor
arpl
sbb
pushf
addr16
push
fnstcw
cwtl
clc
aam
loope
mull
addb
addl
ss
adc
jo
stos
inc
test
decl
hlt
addr16
popf
jno
mulb
mov
jbe
decb
dec
or
clc
icebp
or
lock
xor
pop
cmp
pop
pop
les
dec
jns
cmp
or
xlat
add
cmp
test
jl
jecxz
dec
stos
inc
mov
cmp
bound
xor
in
push
subb
lds
mov
sbb
or
dec
loopne
adc
mov
cmp
sub
or
add
xor
mov
fwait
jmp
add
pop
lods
std
xor
popl
mov
add
sbb
pop
dec
mov
sub
cmp
or
shlb
test
push
add
call
inc
adc
je
adc
test
jmp
movsb
pop
int
dec
or
sbb
ja
sub
pop
iret
loope
push
stc
lds
inc
mov
push
dec
jo
outsb
lahf
mov
fidivl
push
push
iret
adc
mov
lcall
cmp
push
pmuludq
sar
mov
and
sti
daa
jns
sbb
mov
and
nop
adc
dec
sarb
fdivrl
ficoml
mov
mov
push
fiaddl
out
add
outsl
test
js
fsubrl
je
es
fwait
outsb
jg
arpl
add
sahf
add
add
adc
test
jecxz
jg
stc
mov
ret
repz
adc
cmp
xchg
add
aam
insl
movsl
aas
stos
movsl
mov
push
cmp
fwait
mov
hlt
iret
adc
and
leave
jecxz
dec
lcall
xchg
sub
andl
out
add
int3
lock
aas
inc
jecxz
out
sub
or
xchg
out
test
cmp
inc
mov
data16
ljmp
lea
mov
push
or
sub
dec
test
pop
mov
aad
jb
bnd
pop
dec
orl
adc
xchg
jle
jb
xchg
aad
mov
lods
repz
inc
mov
clc
sbbl
test
popa
mov
ds
cli
ret
in
mov
xchg
inc
repnz
jb
jbe
jmp
cmp
ljmp
push
and
call
into
in
jle
ret
dec
movsb
mov
pop
es
repz
pop
mov
cmp
ljmp
js
xchg
push
cld
xchg
repnz
dec
and
pop
mov
popa
add
push
adc
push
mov
mov
mov
mov
or
aad
das
or
push
daa
dec
ret
sarb
lea
xor
mov
daa
jg
in
dec
imul
dec
mov
das
test
cmp
inc
add
pusha
in
shrl
add
and
mov
adc
sub
sbb
mov
decb
popa
jnp
rorb
mov
cmp
sub
mov
mov
mov
insb
push
lods
ror
sarb
sub
pop
push
test
mov
js
dec
loopne
lock
xchg
jp
int3
cmc
data16
push
rolb
jo
hlt
sbb
imul
sub
add
xchg
shrb
aam
aas
pop
mov
mov
add
mov
mov
xchg
mov
dec
sbb
push
jle
push
add
mov
enter
stos
idiv
orb
add
pop
mov
fldl
inc
or
test
dec
mov
or
rclb
into
mov
fldt
lock
fists
mulb
inc
xlat
dec
addr16
or
mov
les
cld
add
jmp
mov
cwtl
dec
or
pushf
pusha
movsb
add
lcall
and
jge
mov
popf
xor
fisubs
ss
out
sub
in
pusha
inc
add
sbb
imul
mov
sub
sbb
pop
mov
fwait
sub
jmp
pop
mov
add
in
in
sub
add
hlt
fucom
mov
add
outsl
out
xlat
fdivrs
aas
lods
ret
out
add
imul
mov
mov
add
and
mov
sbb
aas
adcb
sbb
cld
mov
sub
push
dec
out
lahf
aas
adcl
pop
aaa
push
inc
xor
add
inc
or
mov
cmp
aas
rcr
cmp
push
xchg
aam
mov
sbb
addr16
sub
jne
mov
fwait
mov
jnp
jp
ljmp
dec
or
stc
test
or
out
dec
lods
sarb
jae
jns
push
fildl
aas
je
mov
pop
mov
fcmovnu
mov
and
pop
xchg
cmpsb
dec
adc
mov
push
xor
and
or
cwtl
insl
xor
add
setnp
outsl
xchg
xchg
ud1
xchg
sub
aas
sbb
cmpsl
or
jo
mov
or
nop
push
bound
fisttps
cltd
rorl
icebp
enter
movb
inc
imull
int
sub
jge
jle
pop
and
flds
cmp
outsl
js
jl
pusha
mov
cmp
movsl
hlt
dec
ljmp
sub
cmp
cmp
mov
pop
movsl
and
or
inc
aam
mov
and
push
push
jno
cld
mov
pop
scas
ss
add
fucom
punpckhdq
fs
push
jnp
mov
lods
jo
pop
loopne
and
cmp
ss
aaa
push
daa
int3
sbb
xchg
shr
add
jo
popf
das
cmp
jle
push
inc
adc
cltd
xorb
aas
pusha
push
lods
cld
nop
adc
xchg
aas
jle
mov
into
lret
push
or
pop
call
stc
xor
call
loop
pop
movsb
decb
sbb
add
and
mov
iret
shll
pop
inc
push
dec
pop
mov
cs
mov
movsb
lock
mov
stc
dec
jno
mov
movsb
rcl
xor
sbbl
jl
jge
dec
lret
les
mov
inc
cli
sub
mov
cs
in
pop
push
and
mov
iret
xor
pop
mov
adc
xchg
rcl
in
iret
ret
jne
fcoms
sahf
mov
daa
lea
lcall
xor
cmpsl
shll
cmp
push
loope
cmp
ret
inc
dec
sub
sbb
xor
out
daa
in
push
aas
push
pop
jl
and
lea
stos
aam
or
fisttps
shr
xor
test
pop
sbb
mov
cmp
imul
and
clc
push
inc
dec
aaa
mov
sub
lahf
mov
fmuls
inc
xor
js
mov
add
repz
cli
xor
cli
adc
cmp
inc
cmc
jp
mov
adc
mov
adc
popa
xchg
add
pop
xlat
popa
cmp
pop
mov
adcb
dec
push
mov
into
test
mov
add
jl
or
mov
in
not
ret
adc
cs
xchg
xchg
ljmp
test
or
fsubrs
mov
push
mov
mov
cli
xlat
inc
lcall
pop
cmp
cmpl
sbb
jb
int
insb
push
into
lods
imul
das
mov
lret
outsb
lea
lds
sub
ds
push
xchg
push
cli
insl
stc
mov
fldcw
cmp
ret
or
mov
xlat
into
xchg
jecxz
ret
or
repz
pop
outsb
out
js
or
xchg
fxch
dec
test
dec
stos
lock
add
adc
push
pop
call
outsb
pushf
jnp
fwait
push
repnz
inc
test
int3
pop
dec
cmpl
sub
cmp
jbe
add
sub
inc
cmp
sub
mov
sbb
int3
xlat
clc
jo
xchg
dec
aam
dec
dec
js
sbb
in
fcom
and
out
cmpl
into
fidivl
or
scas
or
fwait
addr16
popa
pop
out
add
cltd
bound
cmpl
lret
stc
sarl
jne
sub
fs
sub
orb
orb
cld
xor
cmp
sbb
popa
push
cltd
icebp
mov
cmp
cmp
in
jmp
push
ds
js
arpl
ret
dec
inc
mov
imul
dec
jb
push
icebp
sbb
das
int
and
inc
push
popa
addb
lea
jmp
and
popa
sub
adc
movsl
insb
cmp
push
roll
cld
lds
imul
jae
cld
or
xchg
mov
xlat
push
pop
push
adc
xchg
sbb
mov
std
xchg
lea
out
and
ja
popf
inc
dec
lods
sub
push
and
cmp
add
int
daa
lahf
pushf
cmpsb
or
mov
loope
loop
pop
mov
das
inc
idivl
xchg
rorb
jle
mov
lods
stos
mov
and
aas
mov
sub
daa
or
aas
mov
push
fcoms
lock
loop
enter
pusha
xorb
mov
aad
nop
rorl
jecxz
xlat
gs
scas
lret
jle
out
cmc
xor
add
movsl
xlat
mov
dec
jp,pn
mov
inc
dec
cmp
pop
loopne
inc
shrd
mov
cmpsl
mov
aam
imul
in
sub
mov
sbb
aad
sar
arpl
jmp
fmul
outsb
pop
push
cmp
sbb
mov
gs
loop
inc
mov
pop
lcall
scas
push
pop
or
aas
jmp
inc
pop
mov
inc
or
ret
dec
sub
dec
xor
sbbl
std
jnp
cli
unpckhps
ljmp
lea
xchg
add
pop
sbb
dec
jp
cmp
mov
pop
hlt
pusha
sub
sar
xchg
inc
aas
rcl
and
les
hlt
mov
aas
les
inc
inc
data16
xchg
cltd
xchg
or
pop
lret
pop
jnp
sarl
xor
xchg
lret
ljmp
shlb
shl
inc
lods
iret
popf
jae
sbb
sbb
loope
test
mov
xor
and
xchg
jb
xchg
cli
mov
cmp
jp,pn
or
je
dec
ss
cmpsb
mov
sub
filds
daa
mov
arpl
mov
outsl
test
ret
sbb
lcall
jnp
jo
lods
lds
shll
repnz
push
sbb
repz
pusha
cmp
jo
pop
mov
scas
popl
cli
mov
int3
lds
jg
in
sti
xlat
pop
and
sbb
mov
sti
cmp
stos
ja
inc
adc
mov
dec
dec
and
cmc
sub
and
cmp
fcom
sub
inc
sbb
cmp
fdivr
stc
or
mov
cmp
movb
test
mov
sub
mov
fistpll
xchg
xor
ret
mov
sub
or
ficomps
inc
sub
sub
cwtl
xor
hlt
sub
xchg
inc
clc
aas
test
stos
insb
push
push
flds
pop
mov
mov
push
add
xlat
ljmp
mov
push
xor
mov
idiv
mov
scas
push
mov
ljmp
es
mov
push
jge
loope
lea
movsb
sub
inc
icebp
jge
call
push
inc
xchg
xor
xchg
loopne
jp
pop
adc
cli
fbld
mov
mov
cli
xchg
push
mov
cmp
std
js
es
sbb
loop
decl
dec
aam
lods
adc
js
or
aad
outsl
repnz
sbb
popf
test
dec
into
xor
test
pushl
or
mov
aad
xchg
xor
int3
jmp
movsb
push
das
subl
mov
scas
push
jl
add
pusha
sahf
dec
std
inc
jbe
mov
mov
aas
jmp
fdivs
add
xchg
faddp
cwtl
addb
fcomps
add
lods
mov
or
add
js
call
or
push
cmp
adc
pop
pop
pop
push
leave
sub
rolb
add
std
ficomps
aam
mov
sub
loopne
and
mov
out
outsb
xchg
outsl
test
mov
jb
pushf
js
jns
mov
cmp
test
imul
xor
jg
arpl
dec
jecxz
dec
les
movl
mov
cwtl
icebp
xor
or
add
filds
mov
or
aaa
ret
sub
imul
push
mov
out
cmp
out
int
loopne
pop
mov
icebp
add
repz
mov
pushl
push
shlb
rcl
lcall
fcom
insb
in
ds
add
int3
or
and
cmp
lock
pop
fimull
xchg
pop
shlb
mov
mov
lret
xlat
xor
inc
push
fsubrs
cld
ja
aad
ror
loope
cmp
scas
inc
push
ljmp
sbbb
mov
dec
push
ljmp
into
cld
lcall
xchg
cmp
lcall
add
push
cmc
add
cmpsb
test
jg
or
popl
lds
push
je
mul
jp
inc
and
outsb
rorb
pop
jge
push
push
adc
call
adc
fldz
sbb
pop
pop
pop
loop
sub
in
lahf
dec
or
std
ds
lock
or
pop
js
ret
clc
dec
adc
cmp
inc
push
or
pop
popa
lcall
xchg
outsb
inc
and
stos
lock
jp
adc
adc
xor
pop
xor
das
xor
aam
mov
test
xchg
mov
sub
add
ret
mov
divl
pushf
push
mov
icebp
imul
loop
aas
jnp
sar
insl
stos
push
jno
data16
inc
test
fs
dec
or
cld
call
cmp
cmpsl
adc
xchg
or
jp
or
inc
out
push
push
or
fnstenv
or
lds
in
mov
or
jmp
ds
sahf
inc
sbb
mov
shl
jmp
movsb
cld
call
ret
out
xor
nop
sbb
ret
inc
inc
rorl
or
mov
sub
cmp
sub
lock
cmp
ljmp
cmpsb
add
pop
dec
cld
jmp
rcl
cltd
jp
lods
pop
push
xor
push
cmovb
inc
imul
inc
mov
pop
aad
jecxz
orb
test
inc
or
xor
inc
mov
xchg
outsb
stos
pop
movsl
ss
sbb
push
xchg
cld
stc
inc
out
das
xchg
orb
das
add
jo
xchg
lds
insl
ljmp
scas
cwtl
lock
sbb
inc
adc
pop
das
ja
cmc
adc
fldl
xor
mov
xchg
ja
mov
add
test
cs
xor
fldt
or
pop
call
dec
jnp
rol
xchg
jl
and
jno
fs
scas
out
pop
dec
pop
inc
mov
imul
and
jg
sbb
jecxz
lods
out
das
mov
test
dec
sub
aad
andb
or
fisubrl
push
adc
push
mov
push
mov
ss
push
js
ljmp
std
call
adc
sbb
sarb
pop
or
hlt
sahf
icebp
adc
ret
fdivl
cmp
mov
stos
xor
sub
add
lock
jg
lahf
sub
incl
adc
lods
in
in
iret
add
mov
push
ss
add
dec
xchg
mov
jno
xchg
xorb
sub
mov
or
scas
jb
dec
cltd
out
sbbl
push
dec
xchg
pop
lcall
mov
in
testl
stos
negb
dec
or
jo
add
test
inc
loop
aad
pop
andb
mov
pushl
pop
adc
add
je
mov
sti
adc
movsl
or
orl
adc
push
addl
movsb
lods
mov
mov
mov
daa
add
hlt
sahf
jo
shrl
mov
sub
fwait
ja
lods
lods
hlt
mov
sbb
and
sbb
mov
rcr
ret
xor
ja
jbe
mov
addr16
push
cmp
fisubl
lret
lods
xor
push
sub
pop
mov
iret
adc
dec
adcb
daa
push
push
pusha
orb
stos
aas
mov
dec
adc
movq
dec
inc
lcall
pop
dec
mov
arpl
jnp
mov
sbb
adcl
stos
ret
cmp
inc
flds
lcall
xorb
add
xchg
ljmp
cmp
sub
int
adc
pop
loope
mov
jae
push
sbb
std
adc
and
add
push
sub
mov
aas
mov
in
fimull
xor
mov
and
mov
cld
push
sub
mov
fstps
adc
jg
inc
fistps
pop
push
lret
xchg
mov
ret
jne
lock
fbstp
insb
jge
addr16
adc
in
xchg
xchg
add
add
sbb
xor
test
sarl
cs
jle
lcall
inc
add
jg
jp
ljmp
test
ljmp
xor
xchg
cmp
fwait
xchg
stos
into
push
dec
mov
es
ret
jl
or
push
or
fbstp
mov
pop
inc
push
cmp
inc
lock
pusha
lret
jmp
adc
or
lcall
movsb
jle
insl
insl
push
jno
mov
mov
and
mov
repnz
jne
lcall
add
sbb
and
cwtl
outsl
mov
jnp
dec
jg
es
sub
xor
xchg
mov
clc
fwait
js
inc
sub
or
pop
fistpl
xchg
adc
push
sarl
cmc
incl
mov
rolb
cmpsl
lea
push
pop
stos
mov
test
add
jl
jle
push
ret
sahf
pop
push
std
popl
push
fcompl
sbb
pop
adc
and
and
cli
lcall
pop
add
push
and
jg
lcall
xor
fsubrs
pop
orl
dec
mov
int3
popa
mov
jmp
mov
lds
push
ficompl
sub
popa
inc
dec
mov
add
andl
and
mov
fs
add
icebp
add
sub
out
mov
ss
jg
loopne
fcomp
repz
mov
add
cmpsb
jne
mov
pop
jmp
jno
jge
push
mov
repnz
add
es
loopne
adc
test
cmp
mov
outsb
cmp
lret
jl
test
pop
add
pop
add
xor
cmp
jbe
push
pusha
pop
adc
lock
or
and
mov
push
dec
rolb
ret
ljmp
sub
mov
xchg
inc
or
pop
in
fwait
mov
cmc
pop
ss
push
xor
xlat
jmp
add
lds
mov
cmp
mov
inc
rcrl
repnz
xchg
movsb
fbld
inc
cmp
push
push
mov
out
push
loop
and
add
cs
iret
bound
push
xor
inc
add
call
insl
sar
repnz
adc
shlb
lock
in
jb
or
pop
ds
or
and
popf
ds
cmpsl
mov
jg
sub
pop
sti
jo
add
add
or
in
mov
cltd
idiv
call
push
pop
je
pushf
popa
dec
add
jmp
das
jge
or
lds
sbb
mov
out
cmp
xchg
bound
incl
or
add
xchg
jge
mov
fiaddl
mov
in
jp
hlt
push
mov
xor
add
push
out
inc
or
xor
cmp
mov
or
cld
call
js
pop
xor
test
shrl
mov
adc
cld
in
outsl
mov
mov
mov
rcr
popf
push
stos
jne
add
mov
add
mov
sahf
icebp
sbb
push
js
add
xchg
xchg
sbb
mov
scas
je
dec
adc
fbstp
cwtl
sub
pop
pop
ret
or
movsb
sbb
pop
in
or
pop
dec
clc
mov
sbb
push
and
cmp
sbb
aas
xor
xchg
repnz
inc
ljmp
or
addb
jb
and
cmp
subl
xchg
rcl
mov
push
adc
andl
adc
or
dec
mov
sub
add
dec
xor
ljmp
bswap
lods
insl
clc
or
xchg
je
sbb
pop
or
aam
pop
rcrb
jmp
push
xlat
inc
push
hlt
test
and
aas
pop
incl
jl
sbb
mov
mov
andb
sbb
pop
in
xor
jb
pop
mov
lcall
push
in
call
stos
adc
fdivs
jg
scas
enter
and
fistpl
aas
and
push
notb
adc
or
lcall
out
mov
addl
mov
jg
push
loope
cs
mov
push
jecxz
or
sbb
or
mov
inc
xor
pushl
ss
hlt
shlb
add
push
das
sarb
mov
sahf
test
pop
or
cli
mov
ret
insb
std
pop
sbb
fwait
or
mov
dec
inc
jle
sbb
jecxz
xchg
inc
and
ljmp
or
aas
xor
add
jno
test
out
mov
or
ss
sbb
xchg
pop
shl
sahf
xchg
adc
xchg
and
sub
sbb
bound
mov
not
xor
testl
add
cli
or
lea
and
loopne
adc
dec
ret
jmp
sbb
inc
jecxz
xchg
ss
out
insl
call
inc
pusha
in
xchg
je
jecxz
mov
test
call
jg
sbb
sar
pushf
int3
dec
andb
mov
and
pop
cwtl
push
jl
mov
cmp
stos
add
push
adc
test
pusha
adc
cli
fwait
movb
xchg
cmp
pushl
xchg
dec
call
movsb
mov
xchg
xor
or
dec
aaa
lahf
fs
add
or
xchg
sbb
xor
cmpsb
or
clc
adc
xchg
imul
iret
xchg
add
and
jnp,pt
sub
arpl
outsb
push
ds
mov
test
cwtl
adc
adc
movsl
inc
mov
loope
mov
hlt
push
inc
mov
pop
rorl
lea
add
inc
lret
bound
scas
mov
adc
cltd
xor
pop
or
int
inc
cmp
loopne
cli
mov
lds
inc
sti
cld
adc
neg
or
icebp
dec
jbe
es
arpl
push
pop
mov
cmpsb
push
call
or
test
sub
cmpsl
or
and
fadd
sub
inc
inc
push
or
aam
jo
mov
jne
lods
jmp
pop
mov
adc
loop
push
jle
mov
ret
push
inc
sbb
xchg
scas
xchg
lahf
popa
repz
sbbb
sub
fcomi
adc
adc
jecxz
sbbl
and
testb
ret
mov
pop
js
enter
adc
push
test
push
dec
push
mov
inc
mov
jb
add
daa
ret
pusha
xchg
adcl
jmp
pop
pop
popf
stos
addr16
sbb
sbb
negb
inc
ja
jo
orb
mov
into
std
jmp
popa
xor
pop
ffreep
pusha
test
ret
and
push
dec
push
les
push
sbb
sub
jo
cwtl
insb
push
mov
or
shrl
decl
shll
cwtl
shrl
cmp
or
insb
dec
jl
and
shrb
js
add
jnp
repnz
or
mov
shrl
push
mov
test
sub
sub
mov
sbb
pop
pop
lds
loope
xchg
sbb
or
sbb
aas
mov
test
in
mov
push
add
and
subl
mov
mov
rolb
add
dec
xchg
mov
sub
adc
mov
push
dec
jo
test
cwtl
pop
and
subb
sub
mov
in
and
sarb
mov
aaa
mov
push
push
test
and
mov
push
push
sbb
das
in
insb
jle
and
pop
adc
inc
sbb
pop
repnz
and
add
arpl
inc
out
cltd
ret
loopne
pop
aas
repnz
inc
lahf
and
or
test
and
notl
jno
add
sbb
cld
and
push
and
adc
dec
cmpsl
inc
in
xor
lods
cmp
and
clc
scas
pop
mov
lahf
jmp
dec
test
sarb
dec
jge
cltd
add
pushf
xchg
ret
inc
subb
scas
add
stc
pop
bound
xchg
jnp
mov
dec
add
sub
decb
mov
call
adcb
outsl
dec
xchg
incb
inc
dec
push
imul
mov
jle
daa
fstps
lahf
pop
mov
pop
mov
or
rclb
cmp
mov
ret
dec
and
xor
xor
add
push
inc
cmpsl
jmp
test
outsl
dec
mov
out
pop
js
shrb
dec
clc
jae
cmp
or
adc
in
sub
cmp
pusha
jnp,pt
ljmp
daa
outsl
xchg
addl
push
xchg
mov
outsb
jmp
sbbb
test
out
and
mov
repz
addb
sbb
mov
jne
testl
adc
sti
push
into
inc
test
pop
mov
test
add
loope
loope
fcomps
mov
sub
push
inc
sbb
inc
pop
push
inc
je
pop
push
mov
dec
add
mov
hlt
mov
add
in
push
movsl
pop
cmp
pop
inc
xchg
pusha
push
or
jne
subl
leave
fdivrs
push
pop
pop
shrb
mov
pusha
pop
mov
nop
inc
add
icebp
xchg
jg
add
insl
lcall
adc
ss
dec
dec
fldl
repz
mov
ficoml
sub
dec
psubusw
aad
in
mov
or
push
or
outsl
movsb
icebp
or
jno
movsl
sbb
roll
dec
pop
iret
outsl
fldl
push
aas
movhps
in
loop
jno
add
popf
add
repz
mov
and
testl
rsqrtps
push
inc
fadds
mov
repnz
incl
aam
xchg
clc
and
stos
pusha
lea
cld
push
insl
fstps
push
mov
and
stos
mov
pop
lahf
mov
xor
cmc
inc
inc
ret
sbb
push
ret
subb
push
adc
imul
pavgb
sbb
push
or
xor
sub
xchg
out
hlt
es
push
mov
cli
lahf
mov
adcb
mov
jbe
out
cmp
rolb
ds
mov
push
dec
xchg
cld
cmp
sbb
mov
call
push
mov
outsl
cmp
das
stos
jmp
inc
jo
loopne
cld
les
nop
sbb
inc
adc
arpl
cwtl
cwtl
pop
mov
mov
cmp
leave
pop
rol
push
dec
mov
and
js
mov
dec
adc
mov
dec
outsb
mov
sbb
push
xor
lock
addr16
pusha
icebp
mov
sbb
in
decl
and
sub
adc
pop
add
xchg
sbb
jno
call
cmp
or
mov
dec
aam
cmpb
test
jmp
cwtl
int
rorb
scas
test
mov
and
mov
outsb
out
fsubs
mov
or
jg
mov
sbb
mov
add
or
push
or
lods
push
push
jge,pn
icebp
pop
in
stos
loopne
movhps
push
addl
ret
add
cmp
nop
mov
jl
aad
js
mov
adc
push
sbb
scas
sub
inc
and
rclb
adc
add
aas
in
jp
sbb
in
hlt
arpl
cld
aad
loop
pop
jae
mov
inc
clc
test
out
push
les
push
and
xor
fstpl
call
or
rcll
into
pop
inc
pop
mov
pop
dec
inc
nop
mov
push
insl
push
mov
xchg
and
test
or
jbe
mov
scas
xor
repz
nop
movsl
hlt
jp
xchg
scas
jmp
mov
test
fwait
pop
mov
add
push
mov
xor
mov
inc
mov
iret
xchg
pusha
push
sub
sahf
jecxz
repnz
das
mov
fisttps
push
lods
mov
insb
mov
mov
mov
stos
add
sahf
sub
jle
aas
or
push
dec
xchg
push
in
and
subb
inc
dec
outsb
xor
jmp
sahf
mov
add
fmuls
or
adc
add
lods
inc
pushf
das
jbe
insb
shlb
fwait
xchg
aas
stos
mov
orb
inc
test
dec
lds
inc
sahf
sti
add
dec
push
pop
dec
jle
jmp
fidivl
and
xor
xor
jmp
pop
lds
pop
int
orb
push
dec
pop
xchg
addb
add
cmp
mov
adc
xor
aas
add
jmp
jno
in
mov
mov
flds
dec
mov
iret
jo
push
test
test
addr16
mov
jg
out
mov
mov
xor
call
inc
pop
lock
push
stc
das
mov
add
mov
jne
xchg
dec
adc
scas
or
cmpl
cld
movsl
inc
sub
notb
lea
push
fs
test
aam
cwtl
mov
xchg
xor
cltd
jb
mov
or
or
xchg
mov
fld
add
aas
mov
pop
gs
insb
scas
mov
or
pushl
lea
mov
dec
aam
inc
sarb
enter
jo
stc
xor
and
hlt
aam
mov
pop
mov
stos
mov
mov
dec
ret
test
and
pop
int3
dec
repz
push
test
jmp
sbb
pop
inc
add
cmp
sbb
xorl
std
lods
push
xorb
and
ja
and
popa
fisttps
sarb
pop
dec
mov
aaa
sbbl
cwtl
mov
push
jbe
rorb
jae
and
jg
pop
jae
test
pop
stc
stc
sarl
push
clc
into
js
lock
dec
dec
lret
cmp
dec
adc
pop
popa
cmpsb
pop
sub
das
xor
pop
repz
fsubl
inc
push
pop
or
push
adc
insb
mov
push
mov
addb
nop
movsl
enter
inc
cmp
jge
sub
pop
mov
jg
pop
mov
jecxz
adc
daa
xor
xorb
leave
xor
dec
mov
push
push
or
insb
xchg
mov
or
imul
pop
imulb
addr16
cmovge
pop
adc
lds
je
jno
data16
jp
sarb
nop
dec
jmp
and
inc
mov
cld
sbb
push
enter
pop
mov
jl
subl
stos
push
pop
stos
scas
inc
add
stos
pusha
in
inc
movsb
das
mov
ret
inc
mov
out
sbb
fmuls
adc
jmp
inc
xor
xchg
rcl
lret
mov
icebp
jns
inc
popf
push
or
jge
test
lcall
movsb
loopne
hlt
add
xchg
fisttpl
sarb
cmp
xor
pop
adc
mov
pop
lods
xchg
mov
addb
inc
jp
push
or
cmp
sahf
push
faddl
add
mov
std
mov
xor
aas
rclb
rolb
bound
push
adc
jo
lret
insb
or
or
and
adc
sub
loopne
dec
push
aas
js
jb
xchg
and
jnp
jnp
mov
arpl
cltd
fstpl
shlb
push
adc
lret
pusha
insl
adc
incb
inc
or
loop
in
imul
push
rolb
jle
dec
mov
iret
jo
mov
cmp
lea
adc
xchg
loopne
dec
or
jns
xchg
xor
in
push
jno
rol
lcall
cltd
jo
lret
add
ret
cmp
lods
stos
mov
subl
js
push
inc
pop
out
lock
mov
sbb
into
mov
sahf
sbb
pop
push
pop
sbb
mov
add
rolw
pop
push
inc
popa
inc
rcrb
adc
std
and
sbb
lea
nop
pop
es
movsl
jbe
into
xchg
in
fmul
pop
push
add
dec
out
sbb
push
push
aas
scas
and
push
xchg
jae
pop
ret
aaa
lea
adc
mov
rclb
jl
test
mov
add
sub
push
test
add
fisubrl
jns
lret
push
jns
xchg
adc
cmp
cli
push
jp
push
or
mov
xchg
inc
pop
in
mov
inc
or
xor
test
ljmp
mov
pop
sub
rolb
scas
cmpsb
cmp
add
js
mov
mov
mov
xor
testb
inc
cltd
in
test
pop
mov
shlb
inc
push
testl
outsl
dec
mov
lret
fstl
add
ret
mov
stos
jle
pop
mov
loop
stos
and
push
fwait
push
mov
dec
cld
addl
sbb
and
bound
dec
inc
sbb
xor
mov
loop
jmp
adc
jae
lds
cmp
lret
xchg
ja
push
movsl
shrl
into
pusha
fsubl
push
lret
imul
add
fisttps
or
add
jb
icebp
sbb
and
xchg
mov
mov
popf
push
push
xchg
xchg
daa
add
inc
adc
push
addb
jns
pop
and
xchg
push
and
daa
mov
xor
add
push
aad
outsl
dec
xchg
aas
push
lea
cmc
std
mov
fldenv
lock
inc
lcall
test
loopne
test
cmp
rclb
stos
cltd
add
jb
inc
dec
and
sbb
mov
popl
repnz
out
inc
xor
enter
jle
out
rorb
or
lea
xor
bndldx
dec
or
push
repz
out
loopne
jg
xchg
fildl
push
mov
adc
cld
enter
inc
into
cli
inc
dec
shlb
lock
loopne
shrb
pop
adc
add
dec
int3
xor
popf
ljmp
add
test
dec
addr16
outsb
sbb
cmpl
dec
mov
push
pop
lods
push
mov
aas
in
call
outsb
mov
roll
aas
sub
adc
mov
repz
insb
mov
push
cmpsb
lds
xor
incb
out
push
outsb
cmp
push
sub
mov
imul
or
or
xchg
jbe
mov
ret
xchg
jmp
adc
cld
and
lock
rcr
sbb
rcrb
mov
nop
daa
sbb
int
pop
int3
add
cld
movsl
aas
xchg
add
pop
lock
or
in
cmp
fldenv
rcrl
mul
sarl
loopne
in
push
scas
cmp
mov
pop
aaa
jo
jle
daa
mov
popf
fdivs
rcll
sub
sub
xor
push
inc
jg
xor
cmp
cmp
lret
adc
iret
outsl
xchg
sbb
test
push
inc
movsb
aaa
mov
jecxz
mov
adc
cld
stos
insl
mov
mov
aas
push
fisubs
push
mov
and
test
and
sbb
test
daa
inc
push
out
fdiv
or
in
xchg
dec
aad
jae
or
in
jl
test
mov
xchg
xchg
push
inc
repnz
jge
or
mov
std
nop
stc
pop
cmp
jle
sub
outsl
push
outsb
fisubrs
pop
dec
dec
add
or
inc
jne
mov
push
cmpsl
jno
push
in
aas
jns
frstor
xor
pop
jb
xor
and
sub
xchg
dec
roll
std
mov
inc
and
mov
cmpsb
jle
mov
mov
push
es
mov
inc
add
loopne
stc
add
lret
pop
enter
push
cmp
test
xor
ds
or
testb
mov
inc
in
int
dec
lahf
addl
add
xchg
aas
iret
push
ljmp
dec
xchg
jo
jecxz
addl
and
add
and
mov
add
xlat
mov
movsb
fimull
or
mov
add
shlb
mov
stos
lcall
xchg
popf
mov
movsb
or
mov
pop
push
jb
and
aaa
sar
dec
mov
mov
popa
repnz
dec
and
jge
dec
mov
mov
pop
aaa
xor
das
cmc
rorb
pusha
or
mov
push
shrb
mov
dec
je
lods
shrl
mov
jle
pop
mov
xor
addr16
mov
xchg
mov
dec
roll
mov
xor
dec
mov
fisubrs
xchg
aaa
lock
xor
push
lods
cmpsl
adc
clc
pop
shrl
sbb
dec
or
xchg
clc
push
jmp
pop
cmc
xor
jg
fstpl
test
cmpsb
pop
jnp
subl
out
or
push
jle
mov
sub
sbb
jo
cmpsb
push
out
xchg
pusha
pop
add
in
sub
add
nop
call
enter
push
mov
inc
mov
loope
sahf
xchg
ficoms
xchg
mov
adc
dec
sub
andb
inc
lahf
add
push
cmp
cwtl
faddl
mov
fcoml
bound
mov
mov
adc
clc
adc
aas
sbb
inc
int
popa
xchg
decl
inc
imulb
xor
cli
and
test
pop
mov
movsl
add
nop
jle
inc
push
and
movsl
jnp
dec
mov
rcrl
mov
add
pop
mov
adc
int
inc
out
rolb
jo
fldl
sub
adc
adc
pop
mov
daa
or
mov
loop
mov
inc
subb
movsl
sbb
jg
jg
and
pushf
jnp
je
push
mov
orl
icebp
push
push
jg
lock
push
xchg
push
adc
out
in
mov
pushf
xor
cltd
hlt
jmp
cmc
and
xchg
xchg
arpl
or
hlt
mov
shl
adc
mov
lret
test
mov
xchg
mov
and
fadds
loopne
out
lcall
mov
pop
push
adc
push
mov
jb
mov
dec
stos
or
fcomps
add
mov
dec
shl
das
fadds
call
or
add
dec
mov
lock
mov
dec
xor
fsts
test
lret
pop
aaa
aam
pop
ror
ficoml
sub
xor
out
adc
jl
cltd
inc
incl
mov
jecxz
ss
mov
in
pop
mov
adc
test
push
pop
test
das
subb
pop
or
pop
sub
mov
stc
loope
adc
push
sub
mov
adc
inc
mov
fnsave
ja
sub
xor
sbb
inc
mov
pop
mov
adc
jns
mov
push
jge
inc
insb
dec
lods
pop
dec
dec
and
jo
imul
stos
out
js
cmp
sub
inc
test
es
pop
bound
aad
mov
xchg
out
adc
xchg
pop
jbe
arpl
jbe
sub
xor
lods
mov
and
and
cld
hlt
stos
ljmp
movl
adc
sbb
sbb
jle,pn
inc
mov
push
adc
dec
clc
arpl
cmpsb
loopne
fisubs
xor
dec
push
fcomps
repnz
dec
shr
dec
adc
jo
dec
stc
inc
jbe
pop
mov
inc
cmpsb
in
sub
inc
ret
push
aas
and
xchg
mov
mov
test
mov
xchg
int3
xchg
pop
adc
pop
sbb
mov
jo
mov
shrl
aaa
mov
cmp
outsb
xor
daa
in
test
mov
or
rolb
add
inc
add
pop
pop
adc
push
inc
fimull
movw
mov
ljmp
neg
imul
mov
and
incb
pusha
mov
mov
scas
inc
mov
ret
push
dec
and
adc
or
clc
popa
daa
or
test
pop
mov
pop
cld
xor
push
mov
jle
pop
xor
or
popl
scas
xchg
mov
jmp
int3
adc
pop
inc
xor
addr16
and
loop
mov
es
and
incb
jle
inc
into
das
mov
add
mov
and
andb
fldenv
jnp
scas
inc
and
hlt
jp
and
cmpsl
cli
inc
loopne
loop
scas
popf
movsl
dec
cld
pop
xor
and
shr
jg
push
add
imul
mov
loop
shll
dec
lds
add
test
fistps
xchg
mov
out
lret
les
push
adc
mov
fadds
xchg
push
lahf
mov
and
call
test
adc
and
pop
mov
icebp
loop
arpl
pop
imul
ljmp
mov
pop
mov
ds
xor
sub
dec
cmp
dec
xchg
inc
sub
xor
xchg
dec
xchg
adc
cmc
fcoml
cmp
cmp
fists
or
jnp
mov
sub
cmp
push
inc
flds
pop
push
fwait
imul
cmp
inc
in
pop
push
mov
push
add
pop
in
cmp
leave
jmp
sti
push
inc
clc
mov
aam
hlt
add
out
arpl
mov
addb
das
sbb
xchg
pop
xor
orb
je
push
rolb
adc
ficomps
insl
and
aaa
pop
dec
and
outsl
test
pushl
fsubp
sub
add
push
sbb
repnz
sbb
or
loop
add
je
outsl
or
pop
or
rol
add
orl
pushf
jne
enter
sbb
lcall
dec
pop
lds
cmp
fistpll
dec
les
pushf
lock
repnz
adc
push
test
pop
or
dec
pop
xorb
aad
mov
pop
xor
das
pop
loop
sub
jmp
push
mov
mov
das
fadds
pop
xor
aas
or
inc
mov
les
adc
test
enter
ret
add
and
xchg
in
lahf
sub
xorl
cmp
ret
pop
movsl
orb
push
fcoml
rclb
sub
stos
in
ret
inc
add
jl
and
sub
sbb
push
sahf
xchg
jle
in
insl
clc
adc
aas
gs
mov
xchg
mov
cmpsb
andl
movb
and
ds
mov
pop
punpckhwd
cltd
rolb
cmp
loope
aaa
sub
sti
mov
fcomps
lods
pop
gs
sub
outsb
adc
fcoms
lea
fwait
andb
daa
sub
cmc
sub
lahf
out
inc
aas
les
incl
arpl
dec
test
mov
roll
jae
pop
cmp
or
xchg
mov
fmuls
add
push
popf
out
test
in
fisubrs
sbb
jae
mov
mov
lret
adc
or
loope
or
and
dec
enter
pop
pop
xchg
mov
imul
std
loope
add
out
push
dec
jmp
cs
xor
xor
mov
sbb
inc
fstl
subl
cmp
lock
cmp
adc
jg
xchg
enter
pop
lock
out
add
xor
jnp
push
ret
jne
or
pop
cmc
pop
jno
out
or
das
mov
add
adc
ret
lcall
add
idiv
add
mov
xchg
sub
icebp
sub
scas
adc
inc
or
inc
add
jge
fcmovnb
int3
add
mov
adc
das
mov
outsb
dec
leave
gs
pop
or
stos
inc
aad
jmp
enter
aad
cli
jo
mov
fmull
jg
je
call
in
fistl
orb
and
aaa
mov
mov
jae
dec
nop
popa
inc
sbb
fsubrl
fdivrp
add
mov
aad
scas
gs
push
mov
ret
pop
push
ja
add
leave
cltd
jp
mov
shlb
add
inc
add
mov
mov
inc
out
or
adc
cmp
test
out
jo
jno
add
xor
lahf
ds
nop
inc
lock
pop
add
add
adc
adc
inc
push
inc
add
adc
push
pop
sbb
movsb
jle
mov
popa
xor
aas
test
mov
dec
mov
iret
das
cli
outsl
lods
int
fcom
adc
sbb
sbb
lahf
aas
mov
sub
adc
sub
xchg
sub
aam
push
sbb
icebp
adc
inc
insl
fcoml
add
cmp
roll
loope
xlat
mov
sub
mov
sub
sub
rorb
jmp
ljmp
outsb
push
inc
add
mov
inc
push
icebp
mov
pmuludq
jle
jb
fbld
mov
push
roll
add
inc
in
and
jo
cmp
cld
cmp
push
mov
add
jne
pop
jge
cli
shlb
inc
insl
fidivl
cmc
pop
push
sbbb
add
dec
push
ds
bound
les
sbb
add
push
bound
sub
repz
es
fimull
jl
or
std
inc
orl
sbb
repz
icebp
ja
notb
push
ret
pop
ss
nop
pop
sahf
sbbl
push
icebp
xor
or
inc
mov
ret
add
iret
lahf
stos
icebp
pop
mov
js
add
scas
push
mov
inc
jecxz
mov
mov
xor
cwtl
adc
psllw
mov
and
xorl
cmpl
scas
xchg
add
enter
lahf
cmp
push
repnz
fidivrl
and
xor
lahf
cmp
ja
int3
adc
or
push
add
out
int3
stc
icebp
loop
movsl
push
cmp
push
xchg
call
arpl
call
adcb
cli
mov
xchg
inc
fcmovne
pop
cmpsb
cwtl
add
push
aam
pop
mov
adc
mov
mov
inc
add
mov
inc
ss
std
push
cwtl
pop
lock
push
addl
sbb
adc
mov
iret
push
add
popa
adc
cmpsl
fiaddl
or
sbb
out
adc
xchg
xor
add
popa
xchg
add
adc
jmp
test
inc
xchg
push
dec
inc
dec
cmp
rclb
test
xchg
out
cmp
cmpsl
and
or
das
jno
aaa
and
xor
je
nop
imul
mov
shll
sbb
incl
jp
sub
dec
push
inc
xchg
mov
in
push
sbb
pushf
pop
in
push
fidivrl
pop
or
xchg
inc
sub
inc
cltd
push
sub
mov
adc
mov
negl
aad
inc
call
adc
xchg
int
mov
addl
sub
jnp
rol
dec
adc
mov
mov
push
dec
mov
push
xchg
imul
addb
xchg
cld
repnz
mov
leave
les
xor
jp
adc
shl
lods
push
in
inc
iret
dec
xorb
mov
cld
jmp
roll
inc
push
adc
rcr
sub
cwtl
clc
mov
test
mov
inc
lock
xorl
test
mov
inc
sti
les
push
pop
pushf
cmp
test
cmc
xor
mov
dec
jne
add
insl
pop
int3
data16
mov
loopew
xor
roll
sbb
mov
test
or
stos
inc
testb
or
add
repz
xchg
lds
inc
inc
je
imul
xchg
push
lods
ret
sbb
mov
inc
dec
bswap
pop
add
jecxz
mov
cmpsl
pop
or
mov
ljmp
out
cmp
mov
or
rol
fwait
push
push
ljmp
jbe
lea
test
cwtl
into
jecxz
mov
cmpsl
sub
ljmp
sub
push
mov
imul
jns
xchg
insb
add
pop
sbb
cwtl
xor
js
inc
clc
sub
add
inc
inc
pusha
loopne
fmuls
dec
sbbl
mov
test
ret
fldcw
pop
mov
pop
in
or
rolb
ret
pop
popa
and
shlb
add
scas
test
scas
test
fwait
xor
pop
andl
or
xchg
aaa
mov
icebp
aas
loope
lock
xor
adcb
fs
lret
inc
pop
mov
dec
mov
cmp
das
push
cmc
dec
mov
pop
xor
add
ds
mov
test
jp
pop
jno
inc
lock
inc
xchg
xor
sbb
sbb
dec
loope
jle
pop
movl
add
arpl
test
cmpsb
mov
mov
pop
jb,pt
scas
incl
pop
sub
fcmovne
mov
add
push
and
push
ds
xor
push
xchg
and
mov
pop
js
adc
sbb
pop
ret
adcl
add
addl
fiadds
icebp
push
mov
out
shll
repnz
fndisi(8087
pushf
imul
fmull
rorl
mov
rolb
test
sbb
out
mov
stos
ds
repz
and
adc
lock
dec
xorl
push
push
mov
dec
add
xchg
in
and
xchg
pop
stc
cwtl
cmp
and
ja
cmpsl
pop
andps
cmp
leave
shrb
data16
pusha
add
jmp
push
xor
scas
mov
mov
xor
sub
es
xchg
repnz
mov
adcb
dec
outsl
xor
in
pop
imul
cmp
push
adc
push
push
rcrb
mov
aas
mov
movsb
pop
shl
mov
mov
mov
out
cltd
cwtl
push
aaa
int
add
push
test
adc
aas
mov
mov
and
ret
cmp
mov
pop
sti
fwait
int
aas
cmp
dec
loop
mov
mov
add
inc
lea
xadd
stc
adc
sub
sbb
cmp
iret
fcomi
in
adc
cwtl
push
and
jo
inc
idivl
jp
pushf
pop
add
pop
loop
jmp
js
lret
or
cmp
and
rorl
out
mov
dec
jae
adc
mov
jp
xor
in
hlt
aad
inc
stos
xchg
sbb
inc
les
pop
pop
cmp
scas
and
adc
bound
test
cmp
in
popf
xor
pushf
and
dec
std
ret
push
xorl
mov
sahf
or
inc
je
xchg
stc
and
fbstp
cmp
or
pop
jns
push
shll
sbb
jo
es
mov
inc
mov
int3
ret
dec
push
or
mov
mov
movsl
lret
daa
in
test
pushw
lods
scas
hlt
pop
loope
jbe
jg
inc
test
dec
inc
mov
add
or
insb
loope
lods
mov
cld
jg
inc
sbb
cmp
scas
mov
scas
xchg
fimull
jp
mov
icebp
inc
pop
sti
mov
xchg
mov
scas
adc
push
and
push
push
and
pop
add
add
sub
mov
push
pop
add
push
daa
clc
cmp
scas
bound
dec
sbb
mov
mov
lods
clc
aas
stos
xlat
jo
jnp
jg
in
and
dec
loop
jne
es
int
add
scas
inc
lods
hlt
test
imul
add
push
mov
dec
les
adc
xor
add
inc
test
mov
ljmp
mov
ret
fcompl
dec
mov
imul
rorb
loop
mov
out
nop
sbb
xor
sbb
ljmp
fists
int
sahf
call
adc
movsl
lock
cmpsl
ret
sub
inc
sbb
and
cmp
xor
imulb
mov
mov
fwait
outsb
insb
pop
or
inc
cmp
lcall
cmp
pusha
mov
loope
adc
sbb
add
mov
test
mov
xor
pushf
cmp
lret
add
cltd
je
push
mov
out
out
icebp
push
mov
and
andl
loopne
popf
fldcw
es
in
and
outsb
aas
std
fisubrs
jbe
mov
sub
clc
inc
cs
add
pusha
ja
mov
and
das
and
aas
and
xor
cmp
sub
das
aam
insb
call
push
rolb
test
ret
stc
xlat
aas
or
adc
sbbb
pusha
loope
loopne,pn
mov
insl
data16
clc
inc
xchg
cmpsl
and
push
jecxz
fs
and
lret
cmp
jb
add
lahf
pushf
xor
jnp
dec
jae
fs
adcl
add
dec
and
mov
loop
stc
icebp
outsb
xor
pop
pop
test
stos
insl
or
push
sbb
inc
sbb
or
cwtl
fisttpll
jb
adc
jo
aas
and
jle
lcall
icebp
or
or
jo
inc
cli
mov
fdivs
adc
cmc
lret
xlat
lret
ret
adc
lcall
push
dec
ret
loopne
add
inc
mov
repz
bswap
push
lock
adc
cmp
mov
inc
rcrb
aaa
push
int3
or
clc
xor
call
sbb
inc
test
mov
mov
sti
add
add
jno
jbe
pop
lock
inc
inc
rclb
add
sar
pushl
leave
cmp
sub
cs
pushf
bswap
cmp
mov
fwait
xchg
cwtl
cmp
push
push
test
out
ret
adc
or
popa
daa
cmp
imul
mov
jecxz
faddp
lret
jmp
mov
imul
fisttpll
add
fwait
add
pop
insb
test
mov
fcom
pushl
sub
pushf
sub
inc
mov
cmpb
push
fsts
popa
xchg
scas
aaa
inc
lcall
xor
ret
xor
and
ljmp
stos
fisubs
mov
insl
cmp
mov
data16
sbb
outsl
push
cltd
sbb
es
fwait
or
pushf
mov
decl
js
cmpsb
movsb
or
or
into
arpl
cmc
cmp
inc
add
push
es
push
lret
xchg
push
aad
cwtl
dec
pushf
popa
incl
cld
xor
hlt
lahf
aaa
xor
and
fldenv
and
aas
jae
pop
dec
inc
jns
cmp
mov
sarl
in
xchg
xchg
jp
sahf
pop
iret
stos
call
or
mov
sbb
adc
pop
inc
ljmp
and
adc
cs
in
inc
jae
popf
or
add
adcl
inc
aaa
sub
dec
push
add
call
scas
mov
rol
dec
adc
dec
lea
jo
fsubrl
pop
loopne
mov
xchg
stos
push
push
lods
dec
sub
inc
popa
and
outsb
daa
xchg
pop
push
dec
mov
cmc
jp
nop
pop
push
add
mov
cmc
incl
dec
loope
test
dec
and
mov
sahf
aaa
dec
testl
lret
mov
push
nop
rol
cmp
insl
cli
bound
and
push
js
arpl
in
mov
aaa
jmp
pop
clc
pop
and
out
sahf
ret
loope
ficoms
test
mov
imul
jns
inc
pop
jno
jbe
cmp
pushf
sub
test
shll
ss
or
stos
ror
fwait
loopne
cli
daa
mov
lret
push
cwtl
inc
sar
adc
add
or
pop
sub
jno
sub
out
xchg
mov
adc
paddsb
or
mov
add
xor
dec
mov
loope
lock
and
rorb
ret
js
shr
xor
ss
rol
sbb
fs
sbb
ja
out
add
jo
cmpsl
or
sub
or
daa
stos
add
fcoms
rep
xor
iret
sub
add
mov
push
test
std
enter
or
mov
movsl
pop
mov
aad
xchg
sub
mov
or
cwtl
test
incl
rep
lret
mov
int
xchg
call
pusha
jne
fs
repnz
js
scas
jo
insl
pop
ret
or
sar
incl
add
sub
sbb
and
inc
dec
adc
inc
jns
jmp
xchg
xchg
xor
mov
mov
pop
ret
shrl
mov
loopne
cmp
pop
xchg
sti
inc
adc
mov
outsb
xchg
mov
insb
jbe
stc
mov
push
je
mov
or
cli
pop
loop
leave
inc
jg
pop
push
cmp
flds
jns
test
mov
icebp
dec
notl
call
test
xchg
jg
data16
jge
std
cmpsl
or
out
cli
incl
fldl
mov
popa
or
lock
xchg
jg
pop
lods
loop
mov
xor
dec
sbb
adc
xchg
ret
lods
mov
in
mov
pop
std
iret
add
cmpsl
mov
push
ljmp
dec
adc
rclb
mov
cmp
mov
and
inc
sub
mov
dec
jp
stos
cmpsl
or
pushl
imul
inc
lret
mov
adc
test
cld
add
add
es
and
add
fisubrl
inc
test
popa
jmp
lds
xchg
iret
popf
jp
ja
inc
in
add
pop
cmpsb
lock
and
subb
mov
sar
ffreep
xor
daa
andb
jl
pop
add
pop
pop
push
xor
mov
sahf
dec
loope
cmc
cmp
and
mov
cwtl
xchg
push
mov
adc
or
out
dec
cmpsl
into
movsb
mov
cmpsb
nop
int3
jno
sbbb
or
push
out
push
inc
aaa
bound
pop
add
rcll
jb
aam
xchg
mov
lods
jo
xchg
pusha
mov
and
adc
outsl
cli
and
cmp
dec
rclb
call
xor
mov
cmp
lods
addb
and
sub
xchg
nop
xor
in
lret
lods
mov
sar
inc
jp
roll
stc
outsl
cmpsb
ret
add
shl
mov
push
hlt
ret
jge
ds
and
add
in
mov
stc
lock
dec
and
ficoms
pop
mov
dec
rol
inc
xchg
in
add
pop
rol
bound
test
decb
dec
adc
push
pop
mov
insb
shll
shrl
jae
out
lret
aam
lret
add
rclb
sbb
cmp
js
ret
orb
xchg
mov
sbb
lea
fmuls
mov
jge
ljmp
add
rclb
pusha
inc
dec
push
ljmp
int3
cmp
jg
loopne
sbb
mov
inc
insl
sub
xchg
cmpsb
push
push
cli
sti
adc
pusha
shll
mov
incl
inc
cmc
cmp
mov
mov
orb
push
jmp
sbb
xor
sub
and
mov
cld
bound
movsb
dec
adc
shl
lcall
jecxz
lods
cs
ret
pop
or
mov
pop
xchg
outsb
cld
scas
xchg
loopne
icebp
incl
stos
rorb
pusha
adcl
dec
mov
sub
cmp
inc
adcb
lcall
mov
add
push
sbb
dec
mov
pusha
lahf
add
and
int3
inc
xchg
ja
lock
into
mov
mov
popl
icebp
loopne
cli
sbb
pop
mov
sahf
xor
jmp
out
call
adc
cld
ss
jb
outsl
icebp
lret
push
pop
cmovnp
jle
push
outsb
mov
lock
cmp
gs
pusha
push
repz
movsb
cltd
mov
cmpsb
pop
and
fdivrp
xchg
or
push
adc
popa
adc
dec
mov
push
cmp
xor
or
cld
inc
sub
jo
add
push
mov
xor
xor
std
xor
add
sub
lret
int3
or
dec
fmul
fwait
mov
sub
mov
ljmp
popf
or
mov
je
lds
sub
inc
sub
jge
sub
xor
std
insl
dec
or
mov
test
sbb
cmp
mov
cmpsb
cld
jg
fmuls
rcrb
add
mov
pop
into
dec
jbe
fdivs
mov
repz
jmp
or
jb
xchg
pop
add
je
loope
std
mov
pop
pop
data16
incl
in
cmp
pushl
xchg
outsb
sub
cmp
nop
es
inc
or
sub
pushl
cmpsb
das
mov
push
daa
cmp
and
in
loope
sbb
push
sahf
stos
lock
add
cmp
hlt
shlb
gs
jg
lds
repnz
xchg
popf
add
push
cmp
jb
cmc
fldcw
aas
testl
pop
jo
sub
mul
les
pop
daa
sbb
jl
addl
inc
dec
mov
cli
pop
clc
push
pop
sahf
mov
pop
insb
lret
call
jg
test
fcom
ja
ret
push
pop
fisttps
mov
jb
adc
ljmp
lret
clc
clc
mov
dec
shl
xchg
movsl
imul
aam
test
inc
cwtl
adc
adc
jg
sbb
rcr
int3
sarb
add
or
dec
xchg
daa
mov
pop
push
xchg
fidivl
jle
cmp
add
cmp
arpl
mov
mov
jmp
inc
mov
add
push
cld
clc
iret
loopne
sub
push
add
mov
or
mov
cs
sub
xchg
push
cli
mov
add
add
je
popa
push
pop
fs
mov
inc
movsb
jns
jns
mov
mov
dec
cwtl
sahf
pop
adc
out
mov
sahf
stos
xchg
aad
test
sub
dec
sti
mov
push
pop
ss
pop
loop
lods
popl
shrb
sbb
inc
imul
mov
lds
sbb
add
inc
mov
repz
cmp
mov
shll
push
adc
imul
test
popf
lcall
aad
movsb
or
inc
inc
push
pop
int3
push
xchg
adc
nop
lods
sub
mov
add
rorl
or
test
sarb
lret
jg
aas
mov
ret
cwtl
inc
sub
mov
call
push
push
cs
daa
jae
pusha
nop
jmp
pushl
push
int
fistpll
sub
fadds
and
pop
or
das
jmp
mov
pusha
cmc
aad
std
cmp
hlt
xlat
inc
imul
mov
and
stos
lea
mov
insb
adc
xlat
decl
jns
xor
pop
nop
add
pop
insb
sbb
adc
outsl
inc
mov
mov
imul
stos
xorl
push
add
pusha
mov
out
or
or
aas
xchg
insb
add
lods
and
inc
aam
out
cmp
loopne
js
mov
loope
pop
mov
jmp
icebp
xor
aam
push
insb
lea
icebp
sti
jg
jg
mov
lret
rcrb
jo
pop
repz
or
icebp
push
js
adc
test
mov
mov
jmp
gs
pop
sub
out
test
adcb
jp
mov
mov
out
sbb
add
icebp
sbb
test
scas
mov
mov
bswap
lods
or
pop
xorl
call
fs
push
arpl
jge
loope
push
mov
movsl
dec
dec
cs
add
je
adcl
les
test
mov
mov
fidivrl
sbb
sbb
pop
cmp
mov
push
aam
les
cmp
mov
cmp
xor
cld
loopne
adc
dec
sarl
jno
cmc
pmaxub
mov
imul
add
ret
lret
jnp
cltd
push
mov
and
aad
stc
or
mov
mov
ja
xor
dec
imul
movb
push
adcl
hlt
push
mov
loope
cli
mov
sbb
aas
fsubp
push
lock
jb
adc
mov
sub
cmpsl
mov
les
xorb
mov
lds
inc
cmp
mov
mov
pop
mov
xchg
jle
insb
fisttpll
adcl
xchg
ret
les
or
cld
pop
dec
fsubrs
in
add
push
daa
cld
icebp
movsl
incl
add
add
and
cmp
pushl
mov
jns
mov
xchg
sbb
pop
dec
ds
xchg
hlt
xor
lea
addr16
das
pop
xchg
xchg
add
stc
das
and
mov
and
push
rcll
push
pop
xchg
bndmov
push
cld
cltd
inc
repz
stc
adc
out
dec
ret
lods
xor
lds
mov
sub
out
sar
inc
cmc
jl
mov
cmp
imul
out
test
dec
cmp
pop
push
pop
mov
push
mov
sub
ja
xor
jae
adc
mov
fwait
mov
ss
pop
inc
aad
inc
mov
imul
out
add
pop
and
int3
add
test
call
push
mov
loop
ror
sbb
xlat
pusha
scas
sub
aad
data16
xor
cmp
add
xchg
pop
outsb
aaa
js
push
in
jecxz
xor
or
add
xchg
das
sar
sbb
es
in
push
cmpsb
push
mov
lcall
push
mov
or
pop
pop
loope
mov
jge
in
xor
fsub
dec
sub
inc
out
aas
fs
mov
mov
adc
cmp
imul
arpl
push
mov
mov
add
mov
ds
lods
pop
or
sub
stos
sub
shl
add
test
dec
push
or
inc
lods
int3
js
fbld
jae
jl
imul
xchg
pop
enter
cmp
xchg
repnz
cld
mov
loop
mov
push
imul
sbb
mov
aaa
cmp
orb
xor
cmp
and
divl
sbb
mov
xchg
mov
stos
inc
jae
insb
scas
pusha
imul
pop
push
cmp
dec
les
ficompl
loope
jno
inc
rcl
jno
add
add
and
inc
bound
cmp
mov
es
enter
xor
out
scas
sub
mov
fsub
pop
sbb
and
sub
jns
and
add
inc
cmc
inc
add
xlat
inc
clc
daa
jg
or
jne
jb
dec
xchg
pusha
jge
notl
cli
add
rcrl
pop
adc
jbe
loope
stos
jle
icebp
xorb
mov
lds
cld
fucomi
out
outsl
add
cmp
and
inc
movl
jecxz
das
add
push
leave
jp
movsl
sub
push
fisttpl
std
push
adcb
insb
clc
or
sub
mov
cmpl
lds
dec
sbb
or
mov
jns
pop
jnp
or
push
sbb
push
mov
inc
gs
aas
push
xchg
out
add
sub
popf
shrb
ret
notb
dec
fisttps
sbb
or
or
sub
cld
fs
xor
jg
push
xor
xchg
popf
imul
fimuls
push
cld
or
push
cmp
pusha
jp
cmp
sub
dec
loope
jecxz
sbb
lds
aad
or
push
mov
dec
push
fdiv
inc
cmpsl
mov
mov
inc
loopne
aaa
outsb
mov
sti
jb
sub
lock
cmp
aam
mov
jbe
or
decl
popf
aas
les
enter
cli
inc
add
daa
add
adc
cld
int
cmp
add
shrl
aam
add
rcl
ret
mov
mov
loop
decl
sti
negb
add
in
ret
xor
sarb
das
pop
dec
faddl
and
and
sbb
dec
and
daa
jb
stos
lahf
or
fistps
bound
jno
cmpsl
lcall
rolb
mov
inc
outsl
xchg
inc
into
push
mov
popa
out
inc
mov
pop
clc
xchg
and
or
inc
aaa
jb
add
and
int3
jb
lcall
inc
sbb
lret
inc
pop
or
clc
add
jo
or
adc
fmulp
scas
adc
test
pop
pop
sbb
jge
push
mov
push
ret
test
sub
mov
scas
dec
dec
sbb
push
push
mov
add
and
sbb
incl
and
gs
lcall
pop
pop
add
cmp
outsl
movsb
xchg
xor
adc
incl
or
shlb
les
outsb
dec
cmp
lock
ljmp
pop
add
or
xorl
or
xor
mov
test
mov
shl
call
push
fcompl
mov
cmp
cld
jg
loope
pop
xchg
jl
and
adc
inc
hlt
cs
fwait
lock
sub
sbb
xchg
mov
outsl
cli
lods
push
inc
mov
and
pcmpeqd
aad
fmuls
in
pop
inc
mov
add
mov
sub
or
add
aaa
mov
in
mov
push
lret
add
mov
jo
das
dec
dec
cmc
pop
add
test
lret
pop
adc
test
fwait
cmc
test
mov
push
or
loop
in
add
xchg
xchg
inc
or
fimuls
cli
add
pop
inc
lret
jne
pop
and
ja
dec
mov
mov
or
les
pop
push
sbb
in
mov
push
inc
out
in
push
cmpsb
lar
push
scas
mov
add
pop
rcl
insb
and
xchg
fildll
and
outsb
mov
xor
es
or
aad
mov
out
push
test
sbb
movsl
pop
std
dec
xchg
mov
dec
mov
sub
incl
mov
mov
mov
shrb
pop
loopne
sub
aas
or
fstpl
roll
or
mov
mov
nop
add
repnz
add
mov
lahf
xlat
mov
stos
mov
cmp
mov
insb
push
call
push
sbb
sbb
add
inc
jb
sbb
inc
push
push
add
sti
in
fdivl
mov
pushf
insl
das
mov
add
lcall
and
lock
xor
jg
fdivl
insb
xchg
lods
and
jge
shr
rep
xlat
mov
imul
adc
dec
pop
inc
add
ret
lcall
dec
sbb
push
cwtl
inc
mov
xchg
push
add
dec
subl
std
sahf
xor
push
jb
bound
dec
sub
jecxz
xlat
ljmp
cmpsl
cmp
loopne
jle
pop
pop
test
dec
jo
cmc
daa
adc
fwait
ret
gs
lahf
push
cmp
inc
xorl
and
in
sbb
xchg
sbb
jle
inc
mov
lahf
inc
ds
data16
popa
fsubs
loope
sub
sbb
mov
out
xor
movsb
inc
add
loope
pop
push
push
icebp
pop
dec
test
test
push
jno
cmp
xchg
xor
dec
rorb
xchg
push
shll
shll
or
mov
cli
mov
sbbb
mov
cld
jmp
aam
mov
out
and
push
mov
xchg
push
loopne
popf
inc
subb
mov
int3
pusha
inc
aas
inc
movsl
in
out
dec
jne
lretw
adc
mov
cmpl
in
xor
add
adc
test
dec
add
cmpsb
and
dec
sub
sbb
andl
fs
add
aad
cmpsl
inc
jae
mov
std
mov
push
sbb
fwait
js
pop
lcall
inc
nop
clc
lret
leave
data16
pop
rorb
inc
dec
mov
aad
push
mov
sbb
rolb
aas
sub
xchg
jmp
dec
pop
mov
mov
and
lret
ret
clc
loopne
sub
pop
push
pop
fcoms
fucomip
lock
decl
popa
js
push
cld
addb
divl
jo
xor
stos
icebp
decl
negb
push
inc
inc
frstor
cmc
pop
xchg
sti
pushl
inc
mov
push
sbbb
and
mov
push
jo
repz
decl
repnz
or
xorb
cmp
pop
push
sahf
push
pop
jbe
inc
adc
ja
aaa
add
dec
push
dec
shl
fldenv
cmpsb
xchg
xchg
add
xchg
sub
push
jecxz
and
cld
pushl
fwait
mov
jmp
inc
mov
jae
loope
pop
lods
fwait
inc
mov
incl
hlt
mov
fcomip
mov
andb
scas
cld
adc
dec
outsb
bound
fildl
push
nop
and
hlt
dec
sbb
xchg
sbb
xor
pop
dec
das
mov
ljmp
test
pushl
mov
dec
rcrb
pop
dec
inc
sbb
mov
daa
fwait
int3
data16
sahf
int3
out
outsb
fnstenv
sub
dec
out
imul
inc
movsb
or
push
test
add
push
out
js
loope
dec
mov
ficoms
push
arpl
cwtl
inc
sti
mov
ljmp
shll
add
daa
rol
cmpsb
sub
das
adc
push
add
les
loope
cli
fisubs
add
xor
xchg
mov
aam
push
xchg
mov
mov
stos
into
push
cmp
ret
cmp
not
adcl
lahf
or
mov
mov
pop
insb
imul
nop
aam
sub
cmp
xchg
sbb
daa
pop
or
scas
dec
ljmp
sbb
ds
lds
hlt
subb
sbb
push
cld
xor
add
das
pushf
add
test
clc
incl
mov
and
aaa
rcr
mov
or
dec
cmp
lret
outsb
xchg
add
in
sarl
cwtl
sbb
sbb
mov
xor
dec
add
movaps
dec
inc
adc
dec
inc
ret
pop
rolb
lods
andb
add
inc
pop
int
jbe
fs
sbb
and
jecxz
push
into
cld
incl
fwait
or
faddp
sbb
test
fists
pop
mov
lods
enter
js,pt
pop
jl
sbb
decl
add
fistl
test
subb
inc
loop
lcall
out
mov
fildl
and
jp
lods
xor
out
push
mov
adc
push
sbb
insl
stos
cmp
hlt
mov
pop
popf
mov
jge
xorb
ret
add
sub
aaa
dec
out
popf
lock
pushf
xor
inc
int
fisttps
push
lods
xor
jb
pop
xchg
dec
and
jo
pop
and
enter
ret
aam
push
cmpsl
es
movsl
jmp
leave
mov
testl
sbb
int3
push
sub
loope
stos
mov
pop
fsubr
mov
or
clc
sub
test
mov
jmp
lahf
stc
or
imul
mov
sbb
add
mov
insl
ljmp
cmc
out
sbb
mov
lcall
mov
push
bound
fists
dec
sbb
jmp
enter
call
incl
adc
call
popf
call
pop
xor
xor
into
ss
add
adc
and
movsb
xor
mov
dec
and
sbbb
sbb
mov
out
mov
lcall
add
lret
addr16
jmp
aad
out
shrb
mov
test
pop
cmc
xchg
adc
xchg
xchg
aaa
pop
es
adc
outsl
dec
and
sbbl
loop
test
sbb
popa
aad
dec
sbb
push
movsb
xlat
punpckldq
and
adc
mov
stos
scas
inc
loopne
xchg
cmpsb
xchg
into
mov
mov
lcall
sbb
sti
inc
pop
int
js
or
cwtl
mov
es
fisttpl
insb
pop
fiaddl
call
xchg
ret
popf
lods
loope
loop
sbb
fs
cmp
fdivp
inc
push
ja
fld
pop
push
push
stos
push
repnz
cwtl
bound
lea
jg
inc
imul
daa
dec
xor
mov
dec
outsb
ret
clc
jno
fadds
icebp
xor
mulb
lea
xchg
jmp
cmp
push
xchg
inc
push
lods
pushf
fs
inc
cmpl
xchg
xchg
or
xor
dec
stos
xor
sahf
sbb
adc
lock
push
add
ds
jmp
and
xchg
sbb
sbb
popf
sub
out
das
inc
mov
xchg
adc
mov
cmpsb
mov
js
lret
dec
lahf
loop
loope
aaa
mov
popa
push
loopne
lret
pop
or
xchg
xlat
or
test
adc
xchg
sarb
adc
mov
mov
pop
xor
sub
sub
cmp
loope
dec
subl
out
mov
ljmp
loop
aad
xor
and
add
add
and
aas
adc
test
pushf
jge
adc
test
ljmp
hlt
cmpsl
xchg
popl
inc
in
out
push
jle
icebp
xchg
push
imul
mov
and
fsubp
insb
loop
and
sub
std
or
aad
or
cwtl
push
ljmp
add
movsb
mov
ror
and
add
cltd
mov
push
stos
xor
xor
add
cld
or
pop
test
decl
adc
adc
int
cmp
and
adc
pop
cltd
jg
cmp
into
movsb
or
ror
fldenv
xchg
dec
cld
mov
xchg
les
stos
cltd
cmp
mov
fldt
push
xorb
mov
pop
ja
testl
hlt
cmp
pop
js
cmpsl
and
push
inc
cmp
repnz
loope
or
and
cmp
mov
push
lfs
mov
sbb
fsubp
lahf
mov
pusha
pop
lods
pusha
gs
pop
test
int3
sub
mov
push
fimull
pop
jg
rol
xor
cli
ds
ss
sbb
adc
fwait
les
lds
jg
loopne
pop
loop
rolb
aam
inc
cmp
cmp
xchg
xchg
ljmp
xchg
nop
inc
imul
mov
xchg
xchg
jle
pop
paddq
aad
inc
mov
les
jle
sti
call
inc
mov
xor
or
mov
in
fsubrs
xchg
sbb
popa
mov
jae
cmp
sbb
xchg
ret
icebp
test
loope,pn
int3
lret
iret
inc
add
and
lcall
test
scas
outsb
inc
dec
loope
fistpll
mov
ret
mov
xor
pop
jne
call
jne
std
pop
add
inc
nop
xchg
inc
inc
xchg
scas
sub
call
or
xchg
leave
adc
sbb
scas
xchg
dec
loopne
stos
and
loopne
xlat
and
push
jb
add
push
cmp
add
adc
mov
pop
pusha
xor
popl
inc
scas
cmpsl
mov
scas
pop
jns
inc
jecxz
roll
adc
inc
push
jb
sub
cltd
nop
jl
mov
fcompl
push
push
sbb
cltd
adc
push
rclb
lahf
jo
xor
aaa
ret
mov
movsb
fdivrs
inc
stos
daa
cmpsl
cmpsb
jo
or
lret
fsubrs
mov
ss
lcall
cwtl
xor
movsl
inc
jg
mov
ss
dec
push
jle
or
sub
pushf
outsb
cld
inc
jg
sbb
push
jb
cmp
xchg
test
outsb
or
stos
jo
sbb
int
pushf
stc
mov
ljmp
push
sahf
loope
jl
push
in
lock
or
mov
in
and
push
mov
push
mov
inc
push
and
push
push
pop
pop
out
push
pop
aad
xor
adc
movsb
mov
orb
orb
fiaddl
stc
bound
dec
data16
jnp
cmc
inc
xlat
in
jg
addb
cmc
cmpsb
adcb
adc
inc
es
adc
mov
or
add
enter
push
mov
xchg
sub
mov
js
cmp
inc
jl
loope
xor
enter
mov
mov
xor
xchg
adc
ss
pop
adc
mov
mov
fldl
push
int
dec
push
mov
loop
rcrl
pusha
jl
push
shl
imul
addl
or
rclb
nop
pop
xor
jge
std
xor
add
enter
subl
lods
ret
imul
add
pop
orb
mov
movsb
pop
in
push
jecxz
imul
adc
mov
les
xlat
lds
mov
adc
jmp
jae
iret
or
jle
dec
loopne
aas
insb
rcrl
nop
aam
jmp
gs
inc
mov
inc
decl
enter
inc
scas
imul
jl
inc
ret
call
aas
data16
test
inc
pop
std
xorb
pop
loopne
vpsllq
push
xor
jb
push
or
int
and
pop
aaa
cmp
sub
sub
ds
call
outsb
jae
mov
mov
adc
es
mov
mov
nop
nop
sbb
xor
xor
loopne
mov
scas
or
xchg
fnstsw
xor
lcall
adc
sub
push
addb
add
shlb
mul
pop
pop
adc
clc
mov
leave
push
das
pop
xor
scas
push
adc
int3
ss
add
movsl
test
and
cltd
sarb
mov
cmp
dec
ret
jmp
dec
sub
fidivrl
or
adc
cli
test
sbb
lret
cmp
adc
loope
movsl
xor
cmpsl
fadds
push
es
and
add
mov
dec
pop
stc
lods
lcall
aam
sbb
movsl
push
ljmp
cmpsb
or
push
cli
adc
aas
xadd
das
or
jmp
push
or
add
mov
inc
add
and
sbb
inc
adcb
jmp
jno
adc
lcall
fs
add
out
or
dec
and
test
dec
pop
shl
mov
les
jae
cs
xchg
movsb
mov
leave
mov
pushf
push
xorl
push
mov
sbb
mov
add
push
shrb
pushf
adc
shll
sahf
shrb
lods
mov
inc
lcall
xchg
add
cmp
js
pop
add
push
dec
or
repz
clc
jns
push
inc
push
push
sti
in
sbb
push
inc
dec
mov
add
adc
imul
xor
es
push
stc
xchg
popa
jb
xchg
or
xchg
xchg
gs
xor
mov
sub
add
aaa
jecxz
js
jo
scas
int
clc
dec
sub
xchg
xor
mov
lret
pop
push
vmovsldup
jo
adc
push
and
inc
sub
xor
movsb
std
filds
mov
jle
xchg
int3
movsl
pop
lods
or
or
or
test
fstps
call
add
repz
aam
push
mov
addl
loop
test
scas
into
xor
inc
jl
jbe
push
dec
dec
adc
dec
inc
sbb
sbb
push
mov
add
fld
push
or
dec
mov
sub
ljmp
fwait
imul
or
or
orl
out
js
popa
fisubrl
aad
dec
sbb
shr
shl
xchg
xchg
loope
in
lock
lea
ja
outsl
shll
add
sbb
add
rcrl
sarb
dec
inc
lds
mov
cwtl
pop
mov
andl
adc
pop
add
sbb
bound
ljmp
ds
aad
stc
inc
mov
mov
incl
or
mov
popf
movsb
movb
ret
into
sub
cli
addb
lea
adc
push
push
mov
pusha
ret
cmp
test
loope
mov
add
mov
outsl
in
push
cmp
mov
ret
mov
pushf
mov
pop
and
dec
xor
jg
scas
and
test
inc
jmp
rcrl
xchg
stc
jecxz
lret
jl
ljmp
push
lcall
add
das
divb
and
fisttps
enter
idivl
xchg
xor
xchg
dec
enter
mov
mov
test
lea
inc
cmp
mov
lods
bound
ret
or
adc
add
daa
stos
rorl
pusha
lods
or
push
inc
jp
mov
push
jp
adc
dec
insl
ret
sub
mov
push
das
cmp
mov
outsb
mov
popf
or
or
scas
sub
out
or
icebp
sbb
stos
jmp
mul
mov
inc
xlat
adc
inc
mov
sbb
and
add
mov
dec
lods
or
xor
ss
pusha
movl
cs
aaa
int
out
xchg
fldl
psraw
je
fcomi
lret
mov
lsl
and
mov
out
sbb
mov
inc
repz
jmp
xchg
scas
xor
pop
and
push
cmpsl
movsl
or
inc
mov
xchg
lcall
sub
mov
xor
push
sub
shlb
add
repz
jbe
push
sbb
inc
push
jp
add
shlb
inc
lea
mov
movsb
das
inc
sub
xchg
icebp
add
jne
cmp
aas
jmp
stos
mov
push
sub
sub
jo
movd
adc
arpl
mov
in
daa
or
xchg
fs
cmp
loopne
cmp
and
cmc
adc
bound
cs
push
pop
sbb
push
inc
rcrl
sbb
cmpsb
dec
adc
or
loop
mov
cmp
addr16
add
mov
xor
and
adc
loopne
mov
std
inc
decb
ss
and
dec
sarb
adc
xchg
filds
add
pop
cmc
loop
jmp
cbtw
jp
inc
push
add
add
add
or
jg
pop
xor
inc
insl
push
insb
andl
stos
xchg
pusha
lds
pop
and
rolb
andb
fcmovne
jmp
add
inc
inc
ljmp
add
or
and
shrl
pop
les
cmp
rorl
inc
fisubrl
fs
lds
inc
insl
dec
dec
xchg
or
cmc
ret
outsb
icebp
rolb
cmpsb
or
inc
dec
rcrb
push
or
mov
fists
pop
dec
ljmp
sub
dec
cs
sbb
adc
gs
push
sbb
mov
aas
mov
fdivs
dec
add
push
xor
stos
icebp
pop
xchg
pop
loope
cmpsl
push
shl
pushf
add
mov
or
nop
faddp
add
xchg
jnp
lcall
shrl
les
lods
fildl
and
pop
jne
mov
pop
jno
hlt
lods
jge
aas
gs
in
jg
xor
jl
xor
jg
and
xchg
and
dec
add
xchg
sub
subps
add
stos
sbb
adc
gs
pop
jecxz
and
paddusb
push
or
mov
repz
or
adc
fistl
add
push
fmuls
xchg
clc
orb
je
mov
rcr
cmpsb
stc
xlat
dec
idivl
pushl
rclb
add
incl
push
pop
fidivrs
pop
xchg
rclb
dec
or
lds
fwait
dec
cltd
int
ret
repz
jg
push
xorb
push
push
add
iret
xlat
jl
imul
call
mov
xchg
orl
decl
movsb
and
les
xor
dec
mov
outsl
mov
mov
add
shlb
and
xchg
das
jbe
lahf
or
and
xchg
daa
and
insl
stos
loop
sbb
gs
aaa
add
push
sub
dec
push
and
add
pop
add
xchg
mov
imul
pop
mov
cli
ja
out
add
sub
imul
cli
jmp
sub
inc
fsts
jmp
in
or
add
ljmp
mov
mov
lods
pop
fldenv
int
jae
lods
xlat
hlt
test
mov
imul
scas
subl
mov
adc
stc
adc
jmp
gs
lock
push
and
inc
das
push
rclb
arpl
movsl
add
and
roll
jnp
pop
inc
aad
lret
adc
js
sbb
add
cwtl
mov
mov
push
ror
xchg
mov
xchg
adc
dec
push
mov
push
jne
mov
ss
cmp
lods
xor
lcall
pusha
adc
cwtl
or
xor
scas
jg
inc
loopne
push
test
insb
mov
in
mov
outsb
fadd
addr16
pop
test
xor
jb
mov
aaa
ret
in
mov
cli
mov
rsqrtps
orl
mov
js
aas
dec
lds
inc
or
add
inc
movsl
inc
inc
inc
jg
ljmp
adc
sbb
jmp
mov
ret
enter
mov
lcall
xor
testl
dec
jge
loopne
add
add
pusha
cmpsb
xor
stos
movsb
sbb
hlt
adc
mov
push
sbb
repnz
dec
gs
cmovle
cmpsb
ret
fmul
pop
movsb
cmp
pusha
push
cmpb
add
nop
lods
es
sbb
pushl
dec
xor
call
gs
movsb
roll
mov
sub
jo
ljmp
mov
int3
xor
in
mov
aas
lcall
les
test
xchg
mov
call
mov
stos
sub
push
fwait
shld
scas
pop
test
es
pop
jne
xor
lret
sbb
sbb
jo
dec
cld
lcall
xchg
mov
cmpl
cld
dec
cmp
or
jle
into
add
xchg
cmp
push
test
cmp
shlb
cs
mov
adc
cmpsb
loope
andb
xlat
xor
or
lcall
outsb
notl
xchg
pop
dec
mov
add
iret
lret
fsub
pushl
mov
fnstcw
fiadds
call
xchg
inc
fldl
and
push
and
xor
dec
jecxz
mov
pop
aam
mov
add
xchg
int3
or
sbb
std
add
mov
popf
decl
and
or
aas
test
xor
popf
test
mov
jnp
iret
push
out
sbb
cmpsl
jmp
pusha
out
adc
push
scas
loopne
xor
or
push
jp
jmp
jbe
cltd
lret
ljmp
push
popl
jbe
enter
and
cmc
sub
xor
mov
outsl
push
cmc
int3
outsb
mov
sbb
arpl
cmp
jne
stos
dec
imul
cld
inc
push
inc
sbb
mov
sub
add
jns
jbe
in
aaa
dec
bound
jmp
test
sub
mov
imul
or
addb
xchg
popf
xor
icebp
out
popf
loopne
push
push
out
stos
or
movsl
pop
outsb
jbe
sbb
jp
push
dec
fsubr
dec
sbbb
roll
roll
out
lcall
dec
call
jg
lcall
insb
mov
testb
scas
pop
inc
sub
mov
pop
mov
repz
inc
cmc
jo
push
int3
ret
and
or
idiv
jo
pop
mov
fsub
icebp
sti
push
loopne
pusha
cmp
adc
pop
mov
lcall
outsl
loop
addr16
ret
arpl
iret
repz
mov
pop
scas
pusha
fisttpll
mov
push
add
sarb
push
pop
iret
sbb
dec
add
sar
sub
jl
sbb
jp
cmp
xor
pop
lock
jno
cmp
push
fisubrl
mov
add
popa
in
inc
jnp
adc
jp
push
push
push
pop
pop
inc
test
jo
cli
dec
lock
movsb
call
fsubrs
xor
flds
pop
out
jo
jne
jecxz
int3
cmp
pop
call
mov
inc
xchg
cmpb
out
imul
mov
lods
jb
mov
xor
pop
cli
bound
jne
frstor
icebp
lods
mov
xchg
stc
xchg
and
or
cmpsl
pop
bound
decb
xchg
jne
sub
fcom
sbb
pop
lock
outsb
and
dec
out
vmovaps
jge
cmp
jb
sbb
dec
pusha
addl
lods
pop
dec
adc
enter
and
add
xor
mov
xor
push
push
pop
and
out
repnz
add
mov
sbb
mov
xorb
clc
call
negb
or
push
jns
or
outsl
push
xchg
mov
lea
sub
orl
incl
lea
sbbb
data16
pop
adc
lcall
pushl
mov
imul
fwait
mov
mov
sbbl
sbb
adc
or
xchg
cli
call
fisttpll
ljmp
out
dec
pop
orb
mov
jno
xchg
pop
sbb
fs
bndldx
divps
mov
jle
dec
in
push
and
std
mov
andb
jg
xor
mov
push
push
jecxz
jne
or
xlat
xchg
adc
decl
sahf
pop
bound
ret
cmpl
rorb
adcl
aad
int3
in
jo
sarl
xor
xor
jmp
dec
push
push
xor
test
cmp
ret
and
jmp
mov
dec
and
mov
cltd
insl
int
ret
popf
mov
loopne
lret
pop
pop
mov
cld
xor
shl
nop
in
stos
push
insl
inc
and
sbb
xchg
mov
add
lea
jo
push
rclb
push
xchg
mov
add
subb
and
mov
daa
enter
mov
ss
lret
in
orl
ljmp
pop
aam
jns
inc
test
les
jo
test
xchg
leave
pop
jmp
cli
push
sbb
leave
xor
imul
pushl
add
scas
imul
mov
push
jo
push
inc
sub
shl
lock
lcall
mov
sbb
push
adc
rorb
ljmp
or
andb
lret
mov
jbe
add
test
in
xchg
shl
cltd
mov
sub
fmull
ja
in
mul
xor
sub
movsl
add
jg
clc
sbb
and
xchg
mov
xor
ficomps
or
imul
push
and
call
push
out
filds
jg
cmp
inc
and
sar
pop
mov
lahf
lock
jmp
loop
pop
cbtw
fdiv
push
mov
sahf
je
into
xchg
cmp
jecxz
mov
leave
imul
mov
arpl
fisubl
jmp
addb
call
outsl
push
rorb
mov
fdivr
mov
xor
inc
mov
jne
setbe
insb
cwtl
xchg
scas
rorb
mov
lock
push
sub
sub
in
sbb
imul
sbbb
xor
mov
or
add
shrl
add
add
xor
fidivs
imul
or
ret
enter
mov
aaa
cld
bnd
cwtl
in
adc
inc
out
mov
xchg
add
jg
push
or
mov
insl
and
lea
mov
inc
jnp
add
jecxz
icebp
pop
lcall
cmc
cmp
pop
pushf
mov
adc
movsb
sub
adc
ljmp
cmp
dec
repz
clc
jecxz
ds
aas
ret
xor
cmc
mov
loope
test
loop
cmc
mov
cld
decl
adc
mov
cmc
xor
jno
or
popa
ja
aaa
mov
or
add
inc
clc
stos
sbb
inc
std
push
outsl
and
sahf
jb
adc
mov
xchg
scas
xchg
adc
add
pop
cmpsb
int
and
das
jno
out
sahf
subl
scas
imul
inc
imul
cli
cmp
or
add
popf
aam
and
enter
inc
fimuls
mov
dec
push
insb
adc
scas
inc
lds
shll
testl
push
jecxz
sub
insl
test
pop
pop
scas
ds
dec
shlb
fimull
rclb
jb
sub
push
mov
pop
mov
andl
or
int
xchg
jmp
lea
xor
lock
gs
subl
mov
ret
mov
in
mov
scas
ret
jg
scas
int
mov
pop
cmpl
and
movl
xchg
ss
inc
add
sbb
in
pop
lock
pop
xor
ret
inc
mov
insl
fistl
div
aad
pop
push
and
fmulp
jnp
push
cmpsb
mov
incl
popf
rcrl
push
or
add
movsb
repz
xchg
or
jns
fidivrl
push
push
fs
out
test
jns
fwait
loope,pn
movsl
cmpl
loope
mov
inc
mov
popf
ret
sahf
adc
sbb
xlat
bound
xchg
outsb
xor
cli
xchg
pop
imul
push
mov
out
in
sub
cmp
iret
inc
adc
add
test
ss
jbe
in
je
clc
sbb
fcoml
repnz
jbe
andl
cmp
xor
cld
or
push
ret
ret
mov
inc
iret
dec
pop
lods
icebp
in
shrl
rcr
inc
fsubs
ds
and
and
and
inc
icebp
nop
clc
dec
loopne
test
stos
dec
sbb
pop
sbb
sbb
test
cltd
int3
jp
xor
ja
push
int3
push
cld
fndisi(8087
lock
and
leave
stos
mov
jp
icebp
scas
mov
xchg
sbb
aaa
jp
lcall
cmp
aam
adc
xchg
into
adc
jmp
incl
js
icebp
pushf
xor
cli
add
mov
dec
lock
ds
dec
pop
add
jg
or
ds
pop
adc
fwait
popa
inc
sbb
sbb
mov
mov
fwait
xchg
lcall
push
sub
inc
or
es
repz
mov
mov
test
mov
test
add
adc
clc
sbb
lods
push
test
imul
and
nop
xchg
mov
mov
jmp
xor
out
dec
mov
std
xchg
js
push
push
mov
aas
or
js
cltd
cmp
push
mov
lock
push
negl
cltd
icebp
ja
mov
inc
inc
shl
movsl
xor
cmpsl
aam
mov
add
leave
out
mov
insb
nop
xchg
push
fcmovu
call
adc
jg
test
popa
sub
dec
rcl
aad
data16
mov
fcmovnbe
xor
sti
pushl
inc
push
mov
imul
repz
lods
xor
add
fs
xor
jecxz
adc
push
pop
lock
sbb
or
cmpsl
scas
push
fisttps
add
mov
les
pop
test
jge
inc
pop
aaa
push
push
sub
mov
call
loop
mov
or
mov
mov
mov
dec
lcall
js
fcmove
push
ljmp
sbb
ror
and
xorb
roll
or
xlat
out
stos
stc
incl
inc
mov
jmp
ret
cmp
mov
mov
sub
dec
dec
inc
xchg
xor
mov
and
mov
add
popa
or
inc
into
or
mov
outsl
dec
xor
ret
std
mov
test
ret
xchg
fdivrl
lret
pop
push
outsl
pop
std
aaa
loopne
jmp
jl
jge
or
inc
bound
and
daa
into
mov
mov
icebp
enter
and
shrb
shrl
cmp
jecxz
xor
xchg
mov
iret
mov
inc
out
push
inc
add
imul
xchg
js
sarb
imul
and
jle
lret
pop
push
popf
jnp
out
and
jg
cmc
and
jb
pop
negl
inc
stos
repz
orl
loop
jne
or
adc
pop
mov
add
mov
pop
hlt
pop
jns
int
sbb
pop
adc
out
addl
and
jle
pushf
mov
out
incl
sub
xor
pop
in
cs
pop
test
cld
daa
cmp
and
pop
fadd
insb
out
in
pop
mov
adc
cld
das
sarb
sub
aad
inc
loop
iret
sbb
jns
jo
daa
pop
hlt
addl
sbb
and
add
call
es
fdivrs
add
ljmp
mov
jle
sbb
pop
pop
jb
lock
xchg
xor
ss
scas
push
popf
cmc
daa
imul
jmp
mov
lock
dec
and
xchg
mov
cmp
andb
lret
mov
fistpl
rorl
jmp
mov
mov
jle
cmp
fnsetpm(287
push
sub
nop
or
mov
xchg
mov
or
decl
subb
cmp
xchg
repnz
pusha
shll
xchg
shr
xchg
iret
pop
sub
and
inc
shll
icebp
sub
sbb
xor
test
adc
das
aas
aaa
loope
test
fadds
sub
mov
pop
mov
movsb
mov
arpl
dec
mov
jp,pn
mov
clc
aad
nop
sbb
lods
aaa
aam
pop
insb
sub
push
in
xor
jbe
aaa
add
push
add
cmpsb
lret
mov
xchg
xchg
sub
ss
or
cmp
imul
sbb
or
push
in
lahf
rcll
jne
mul
inc
adcl
xchg
sti
enter
iret
mov
mov
decb
add
int
jne
add
add
shll
push
push
and
test
add
xchg
cld
std
repnz
mov
subb
idivb
cli
sbb
dec
imul
mov
mov
mov
add
cltd
aad
inc
call
jmp
adc
in
adc
xchg
nop
mov
andl
jp
or
sbb
inc
pop
arpl
lods
cld
jge
or
sbb
pop
pop
cmc
mov
push
movsb
insb
sbb
jg
inc
lock
loopne
fidivrs
test
jne
jg
shrb
mov
mov
dec
les
adc
cld
or
loopne
test
add
loopne
mov
jo
mov
notl
cmpsl
insl
and
push
xor
xchg
inc
mov
adc
inc
mov
sbb
imul
loope
cmpsb
or
sub
and
int3
roll
iret
andl
add
repnz
adcl
or
nop
xor
push
or
push
sti
jecxz
add
push
aas
dec
in
jns
cltd
faddl
insl
pop
mov
mov
mov
fists
scas
lfs
add
pop
xchg
push
bound
adc
jp
sub
lock
mov
addl
movsl
orb
jns
or
movsl
mov
cld
or
push
lret
nop
and
jle
loop
mov
jo
mov
cmc
cld
xor
cmpsl
sahf
cmpsb
jmp
dec
pop
test
mov
mov
inc
jg
adc
lcall
clc
push
jg
repz
push
stos
cmp
add
in
aas
adc
push
push
push
and
dec
pusha
cmp
fcompl
in
lock
in
xchg
ss
repnz
cld
cmp
test
dec
and
mov
nop
xchg
mov
jmp
scas
xlat
xchg
push
jbe
std
or
push
adc
rcll
insl
insl
pusha
mov
xchg
mul
cmp
sbb
adc
inc
adc
inc
repz
fdivrs
insl
repz
jmp
push
scas
cwtl
jmp
aad
in
mov
add
sbb
pop
iret
out
dec
clc
or
cli
lret
mov
inc
imul
jecxz
mov
or
lea
mov
cmp
adc
xchg
orl
jo
cmp
mov
popa
push
ljmp
out
sub
lret
repnz
xchg
xor
mov
andb
mov
mov
sbb
add
sub
jle
jnp
push
adc
aam
inc
sbb
mov
jnp
add
xchg
popf
ret
leave
mov
loope
pslld
fwait
subb
adc
sbb
jmp
pop
mov
aam
es
out
movsb
and
adc
push
or
pop
mov
add
test
fnstsw
adc
sbb
add
arpl
cmpsl
test
stc
outsl
jae
or
ds
std
test
sub
pushf
aad
lods
push
and
and
pop
or
cmp
lcall
add
sbb
imulb
stc
rcrl
lods
sahf
mov
sub
lcall
mov
cltd
shll
movsb
aas
rolb
fucomp
sti
jbe
adc
pop
filds
cld
sub
jl
add
pushl
jne
jne
and
and
inc
jp
mov
mov
das
lret
jns
pop
test
xchg
sub
aas
add
cs
and
add
inc
push
loope
pusha
sahf
fsubrl
aam
xchg
cmpl
adc
sbb
xor
test
cmp
and
adc
sub
loop
ss
lret
daa
mov
neg
push
dec
js
sbb
inc
xchg
xorl
bound
pop
pop
dec
nop
xchg
sbb
filds
and
jae
pop
mov
lock
rep
outsb
cmpsl
sbb
aam
fstpt
pop
push
out
loopne
inc
or
adc
mov
mov
imul
iret
dec
mov
int
xchg
pop
add
inc
subl
lahf
loope
inc
lock
cmp
mov
cmpsb
ljmp
cmpl
dec
mov
cld
rol
popf
sbb
outsl
mov
jecxz
stos
and
lods
pop
jb
sarl
int
mov
pop
jmp
daa
out
or
dec
hlt
push
fnsetpm(287
lahf
xchg
mov
shrl
add
addb
and
push
push
xlat
in
popf
jl
and
das
les
ss
es
inc
les
cmp
xchg
divl
push
mov
ret
inc
aaa
sub
lcall
or
notl
insb
hlt
ret
popa
aad
add
nop
lahf
cmp
arpl
xor
mov
in
dec
mov
ret
add
mov
or
es
xchg
cmp
shll
popa
jo
aad
movsl
popf
and
fsubl
cmp
push
mov
mov
cld
iret
or
stc
push
popa
xor
pop
dec
subl
js
sub
mov
mov
sbb
ja
ds
xchg
ds
push
pusha
rcrb
cld
add
lgdtl
pop
mov
jecxz
or
ja
in
test
mov
jl
push
push
sub
push
clc
mov
je
push
cmp
pop
xchg
jecxz
lock
rclb
xor
aaa
test
bound
jge
xor
fwait
dec
stos
xchg
jae
movsb
fdivp
sqrtps
or
out
add
data16
sbb
jmp
out
sbb
cmpsl
jno
cmp
pop
jbe
push
les
jb
dec
dec
repnz
jle
cmp
fld
mov
std
lret
hlt
divb
addb
mov
imul
pusha
jno
mov
xchg
jno
fdivr
xchg
add
rcll
decb
imul
adc
mov
or
or
dec
and
je
aam
std
out
adc
addr16
in
and
jp
push
cmpsl
and
mov
mov
neg
inc
addb
jl
mov
dec
leave
mov
push
into
pop
inc
push
pop
ja
andb
fsub
jae
js
and
adcl
cld
lcall
pushf
scas
mov
ficomps
imul
push
mov
mov
dec
mov
xor
pop
loopne
pop
cmp
jg
jp
in
leave
lahf
inc
xor
xchg
stc
in
mov
or
mov
int3
popa
mov
lea
add
test
or
sbb
jno
mov
xchg
push
xchg
testl
mov
cmpsl
jbe
mov
inc
cltd
inc
pop
cmp
xchg
divb
push
ds
hlt
mov
mov
pop
setle
sbb
lcall
popa
cmp
adc
sbb
int3
ljmp
pop
jnp
nop
ja
adc
push
cli
cmp
stc
repz
mov
aam
leave
jmp
adc
and
mov
mov
and
call
pop
and
hlt
into
sbb
mov
loope
sbb
ret
xchg
movsb
mov
sub
mov
les
push
mov
cmp
jne
add
add
aas
data16
or
pop
jae
inc
xrelease
or
xchg
js
add
mov
js
sub
xor
test
addr16
clc
sub
push
out
std
mov
pop
jp
mov
or
inc
or
dec
dec
outsb
icebp
ja
sbb
pop
ja
xlat
add
pop
sub
mov
jno
iret
xor
mov
cmp
add
nop
mov
sahf
fdivrl
or
inc
jbe
aas
aad
push
fstpl
and
xor
mov
pop
push
mov
ja
lock
dec
test
inc
xor
xor
cmp
pop
popa
push
lcall
mov
div
mov
fsubl
mov
cmp
outsb
fstpl
jno
aaa
adc
daa
ss
mov
test
ds
ds
inc
add
shlb
test
mov
push
adc
pusha
aad
ucomiss
lods
push
scas
adc
jl
rorb
adc
lret
pop
popa
lock
test
sbb
push
outsl
sbb
decl
loop
add
push
and
std
pop
aam
push
pop
push
dec
mov
xor
push
dec
mov
jns
jae
test
sub
pop
cwtl
stc
sub
push
push
je
pop
add
fsubs
mov
jecxz
incl
add
aaa
mov
dec
outsl
inc
mov
cmpsb
inc
xchg
loopne
mov
clc
sub
adc
insl
mov
mov
add
stos
pop
lods
out
xchg
imul
stos
loop
rclb
movsb
inc
rol
or
int
ds
jl,pn
test
loope
stc
add
jge
xor
and
mov
jb,pn
pop
int3
or
sbb
loope
mov
jbe
outsb
icebp
adc
nop
xchg
mov
cmpsl
jg
jmp
pop
jl
lahf
addb
sub
add
add
jbe
stc
inc
add
mov
xchg
je
jns
jecxz
mov
jns
lahf
or
int
jle
fiadds
dec
fstl
ficoms
inc
xor
add
mov
xchg
outsl
lods
push
lock
sahf
test
sbb
jge
mov
out
pop
push
mov
sub
mov
jg
push
mov
or
sbb
shll
sar
push
adc
mov
xchg
mov
dec
sub
lock
into
fimuls
pop
xchg
pusha
push
xor
rclb
mov
imul
push
sub
cmp
jecxz
jecxz
and
and
pop
stos
in
pop
sub
lcall
sub
scas
dec
push
fisubrs
fs
clc
dec
or
pop
insb
jmp
lahf
xchg
dec
jns
sbbl
and
and
push
dec
mov
loope
in
lods
pop
or
cmp
cmp
xchg
dec
fs
rolb
add
es
int
mov
jo
adc
fst
cmp
fstpt
les
repnz
cwtl
in
stc
fldt
push
outsb
add
and
int
pop
ja
jg
lahf
jge
mov
popa
rorb
mov
lret
loop
xchg
push
insb
xor
mov
mov
sarb
outsb
add
mov
pop
popf
les
sub
dec
add
xchg
rclb
retw
mov
add
jge
mov
pop
addl
push
cmp
xchg
in
inc
sbb
xlat
fwait
mov
push
loop
das
rorl
rorl
aas
insl
sbb
cmp
adc
test
lea
xor
jmp
dec
mov
jp
loope
mov
fidivrl
imul
pop
cmp
bound
or
int3
xchg
push
out
or
mov
mov
push
xor
js
sbb
inc
xor
jae
add
call
cmp
aam
or
inc
clc
add
xchg
dec
inc
aam
sub
pop
push
outsl
loope
lods
jp
pop
adc
push
mov
lock
aas
les
xchg
lahf
sub
loopne
pop
push
mov
jae
js
inc
dec
cmp
cmc
mov
pop
ja
xchg
mov
pop
jecxz
inc
or
mov
cmp
out
out
hlt
push
fists
mov
fs
xchg
fiaddl
aam
add
inc
fdivl
push
xor
shrl
jae
add
popa
int
repz
cmp
pop
cmpsb
rorl
add
fadd
loopne
and
add
push
mov
stc
push
lcall
sti
lods
xchg
mov
loop
pop
outsl
adc
mov
cmc
mov
push
inc
push
dec
xchg
and
out
add
lahf
sbb
inc
loope
mov
jle
loopne
mov
cld
and
add
sarl
les
xchg
sbb
xchg
or
push
pop
jg
ds
mov
out
iret
add
sbb
fistl
cmp
or
jg
jb
lret
mov
mov
je
inc
mov
int3
add
dec
jl
mov
pusha
cmpsb
scas
pop
push
repz
or
push
xor
lret
in
push
outsl
xchg
clc
testl
dec
sbb
aas
and
je
out
lret
mov
sbb
and
ss
std
les
sarl
adc
shll
mov
cmpsb
jge
into
pop
and
push
mov
sbb
xchg
cld
xor
dec
or
fsts
push
mov
jmp
call
mov
add
filds
imul
mov
sub
jne
cmp
and
cmp
sbb
add
pop
adc
les
pop
cmp
imul
pusha
call
inc
xor
mov
adc
mov
loop
rcrb
pop
int3
inc
dec
insl
movsl
mov
add
in
sbb
push
add
rolb
inc
add
xor
mov
or
mov
jp
fs
test
cmp
int
subl
test
dec
cmp
xor
xchg
call
dec
jno
mov
in
aas
aam
mov
fwait
in
xchg
xor
adc
inc
sahf
xor
icebp
addr16
inc
loope
adc
je
pop
pop
inc
cmp
cli
ljmp
cmpsb
push
loopne
nop
sti
jmp
push
mov
fndisi(8087
daa
push
jnp
mov
inc
jl
inc
dec
pop
cmpsl
scas
dec
incl
bound
jae
cmp
in
enter
rolb
adc
movsl
subb
scas
mov
pusha
sub
nop
or
cwtl
sub
jle
ds
fmull
cs
add
pop
add
in
xchg
push
adc
mov
and
dec
dec
mov
sub
push
xor
jle
pop
push
or
pop
inc
pop
movsb
sbb
mov
sbb
sbbb
mov
test
std
imul
dec
dec
lahf
cli
jecxz
pop
cmpsb
adc
pop
mov
push
add
enter
rorb
adc
mov
jle
lret
shll
lods
ror
test
jp
leave
cmp
lods
loop
mov
and
rcrb
leave
lahf
jle
cltd
dec
stos
cmp
dec
sahf
test
add
mov
add
cmp
mov
dec
xlat
sub
add
mov
sbb
xor
mov
inc
out
inc
adc
jmp
pushf
aad
in
cmp
movsb
or
ret
xchg
add
inc
jge
popa
loop
lea
mov
add
hlt
or
xchg
iret
xchg
mov
cmp
sbb
push
jmp
ret
push
sbb
shlb
mov
xchg
mov
dec
dec
or
dec
dec
or
jno
aas
cmp
jle
mov
bound
lock
xchg
loopne
mov
push
mov
js
xchg
dec
xor
xor
add
or
sbb
mov
outsl
mov
sub
loop
add
jnp
or
jb
pop
arpl
and
sub
out
jno
ja
sbb
pop
mov
or
jbe
push
mov
mov
adc
ljmp
xor
mov
jne
sub
push
adc
xchg
imul
xchg
fs
xlat
clc
jl
push
sub
cmp
dec
inc
paddusb
cltd
iret
inc
fwait
aaa
repnz
inc
push
daa
mov
xchg
pop
in
push
pushf
mov
inc
pusha
jne
add
fisubrs
iret
jae
fwait
mov
cmp
icebp
cmp
and
lea
hlt
pop
lds
stos
pusha
lret
or
jle
push
rolb
test
add
xor
add
psadbw
inc
in
and
enter
pop
test
jo
ljmp
jno
mov
gs
adc
mov
or
inc
jmp
lock
mov
loop
mov
cmpsb
add
mov
les
cwtl
shll
xlat
out
xchg
push
mov
push
ficomps
pop
push
test
test
mov
or
in
or
adc
cmc
lahf
push
call
inc
dec
xorb
xor
out
imul
add
push
pop
jns
add
jbe
add
imul
aad
add
push
pop
or
add
jecxz
or
orb
push
gs
and
jmp
stos
push
imul
pop
push
push
jo
jae
decb
jp
mov
dec
fistpll
push
lds
adc
dec
push
jo
arpl
jae
cmp
in
push
mov
xchg
add
jne
cmp
xchg
fcomps
aaa
cmp
loope
ja
cmp
popf
push
push
jns
loope
sbb
jg
dec
in
and
sbb
insl
repnz
mov
cli
rorl
mov
push
clc
pop
pop
lock
outsl
outsb
jo
inc
pop
ss
lock
addb
xchg
mov
dec
fcmovnbe
inc
pop
jns
cld
mov
cli
pop
push
enter
in
outsb
hlt
lahf
mov
lock
push
lret
lods
push
or
lods
stos
push
and
pop
mov
fisttpl
fidivrs
mov
cmp
fnstsw
mov
inc
clc
jno
cmp
shrl
push
push
orl
daa
mov
xchg
inc
jnp
dec
sub
dec
inc
and
sbb
es
cmp
jne
jmp
pop
push
mov
mov
call
dec
je
dec
adc
cmc
xor
lods
fistl
xchg
into
add
movsb
push
or
pop
push
xchg
out
sbb
push
jg
pop
jb
fisubs
clc
and
clc
jg
mov
xchg
das
push
js
xor
dec
cmc
shr
xor
enter
jg
ret
pusha
or
sub
mov
cltd
mov
sub
movsb
mov
daa
data16
adc
lret
mov
mov
push
pop
icebp
sub
push
mov
popa
xlat
test
fdivr
mov
rclb
idivl
xchg
aaa
popl
bnd
popa
sub
pop
mov
ret
cs
scas
clc
push
int3
dec
ds
add
lock
and
inc
xchg
orl
movsl
jecxz
add
cmpsb
sbb
dec
pop
popf
add
or
cltd
and
ret
or
ljmp
iret
andb
mov
pop
clc
mov
ficomps
dec
cld
add
dec
mov
mov
mov
out
loope
sbb
mov
sub
test
sbb
decl
ret
jecxz
sub
add
insb
mov
adcl
in
data16
sub
fisubrl
jmp
call
push
icebp
mov
jle
jb
adc
xchg
mov
lcall
ja
fcoms
notb
or
sahf
pop
std
push
mov
insl
push
mov
arpl
mov
inc
lret
add
insb
xorb
dec
clc
ljmp
mov
xchg
push
and
mov
adc
jecxz
imul
adc
xchg
mov
inc
xor
xchg
jle
push
sbb
js
rclb
add
cwtl
cli
rolb
sahf
bound
and
subl
rorl
sbb
add
inc
das
mov
inc
cli
sbb
mov
jmp
in
push
and
call
adc
lods
dec
push
and
shlb
push
out
pop
sbb
gs
clc
xor
leave
xchg
and
pop
out
lret
sbbl
es
jp
dec
aad
es
neg
das
mov
rol
mov
xchg
mov
sub
addb
pop
fcos
mov
or
in
loop
and
xchg
cmp
std
out
js
daa
jmp
mov
cmp
cld
imul
or
movsb
pop
pop
ret
in
or
mov
pop
das
pop
je
fcomps
cmp
xchg
sub
lcall
inc
cs
rclb
jbe
ret
push
and
adc
jecxz
inc
jbe
dec
inc
std
aaa
mov
bound
xchg
mov
out
stos
mov
sbb
rorb
cli
adc
mov
push
sbb
aas
mov
popa
mov
call
jecxz
xor
push
imul
sti
mov
jno
jle
inc
mov
sub
fcoml
imul
movsw
mov
jge
and
and
pop
out
fidivl
repnz
arpl
ss
int3
lahf
cmp
cltd
push
aaa
jge
xchg
xor
cli
and
add
cmp
push
xchg
jmp
dec
mov
mov
add
clc
and
pop
adc
lahf
mov
sarl
pushf
jns
cwtl
pop
push
movsb
or
mov
loopne
into
sbb
fdiv
cli
les
or
icebp
js
sub
jecxz
or
sarb
enter
pop
dec
movsb
jbe
add
adc
out
mov
pop
icebp
pushf
aaa
xchg
inc
inc
mov
push
clc
dec
pop
or
loope
in
mov
push
cmc
push
jnp
xor
loopne
xchg
push
pop
out
push
add
icebp
scas
add
ret
push
icebp
rorb
jmp
push
js
call
orl
fidivs
ficoms
inc
adc
sub
or
pop
push
pop
pop
pop
or
outsb
daa
mov
sub
loope
sbb
sub
pop
mov
es
shlb
and
mov
jns
sbb
in
xchg
cli
pmulhuw
int
xchg
pop
add
sahf
xchg
pop
jbe
popf
inc
lahf
jb
add
sbb
sti
xchg
iret
lea
cmp
pop
jp
fwait
adc
adc
jb
jmp
subb
andl
inc
fiaddl
mov
ljmp
and
mov
sbbl
ret
fcom
bndstx
jp
pop
cmp
sub
push
inc
push
push
jno
pop
test
inc
cmpsl
push
movsl
dec
cltd
adc
xor
push
inc
out
add
subb
lods
ja
ror
idivb
stos
push
outsb
push
or
cvttps2pi
leave
rclb
ret
and
not
test
mov
inc
pusha
test
xor
mov
je
mov
pop
mov
mov
add
or
mov
mov
test
je
repz
imull
insb
inc
jl
shrb
xor
cmc
mov
aam
imul
cld
icebp
adc
sbb
adc
mov
mov
bound
iret
or
push
jl
sub
in
mov
stos
stc
mov
outsb
push
cwtl
sbb
dec
and
lret
ret
sbb
mov
cmp
jae
out
hlt
adc
imul
pop
or
mov
add
cmpsl
sub
mov
lea
xchg
or
sbb
mov
mov
mov
push
adc
enter
pushf
add
orb
lds
out
pminub
std
sbb
mov
cmp
out
sbb
bnd
andb
mov
add
xor
mov
scas
push
outsb
xchg
mov
lret
in
mov
xor
aam
pusha
cld
jnp
pop
fwait
aaa
ret
mov
xor
aad
pusha
mov
call
inc
lahf
jge
out
add
test
imul
insl
addr16
inc
add
inc
push
dec
popf
dec
xor
add
and
lcall
cmp
xchg
outsb
mov
nop
movsb
into
add
movd
int
mov
pop
mov
dec
jmp
rcr
jg
dec
add
adc
dec
dec
mov
andb
jnp
out
mov
ficoml
outsb
or
sbb
xor
daa
lock
xor
cmpb
push
roll
push
aad
sar
sub
inc
pop
push
mov
add
pop
ret
dec
lret
jns
jb
jp
jmp
adc
into
lods
lret
xchg
mov
pop
mov
mov
xchg
stc
decb
jle
loop
add
mov
jbe
cmp
imul
jle
inc
or
popf
xorb
lock
test
jnp
test
jl
add
inc
pop
inc
cmp
jle
add
sbb
jmp
mov
repz
in
sub
repz
call
repz
pusha
xor
popf
sti
push
in
faddl
mov
or
cmp
ljmp
pushf
dec
lock
shl
daa
rcll
and
cmc
jle
pop
mov
rcrl
sub
sbb
cmp
adc
push
inc
or
adc
mov
add
cltd
clc
pop
lea
frstpm(287
mov
incl
inc
stos
popa
ds
pop
xchg
iret
popa
or
pop
sbb
sbb
jg
outsl
iret
and
jae
shrl
xchg
repz
xor
pop
cld
popa
push
xchg
sub
cmp
xchg
jge
cmp
or
jg
popa
pop
rorb
rclb
iret
int
cld
lret
xchg
inc
add
movsb
push
pop
add
sbb
sbb
clc
adc
cmp
add
popa
add
push
lock
fcoms
imul
fs
mov
push
cmpsb
in
adc
js
out
dec
repnz
loopne
mov
es
xor
aam
loopne
add
jp
and
fdivrs
loopne
inc
mov
push
adc
pop
sar
inc
movsb
addr16
cmp
in
or
sbb
clc
xchg
lret
pop
sbb
or
and
sbb
mov
movsl
mov
cmpsb
and
into
pushf
dec
jle
xchg
mov
lods
xchg
or
or
or
inc
add
popa
and
dec
mov
cmpsb
sub
mov
aad
jbe
ret
jmp
divb
xchg
add
adc
mov
sbb
cltd
ds
shl
sbbb
bound
mov
push
dec
bound
pop
sub
lahf
xchg
pop
adc
push
aaa
xlat
aad
loop
cltd
mov
or
pop
adc
mov
cmpsl
mov
jns
jle
mov
mov
xchg
call
adc
pop
es
int3
cwtl
xor
out
and
pop
hlt
jo
lods
cld
lock
pop
in
lcall
sti
mov
mov
rorl
mov
test
pop
add
and
clc
fcmovu
jnp
cmp
addl
fisttpll
add
mov
inc
fldenv
enter
fs
adcb
addl
mov
scas
jmp
adc
std
in
cld
test
sbb
dec
mov
sbb
rcrl
xor
cmp
pop
pushl
out
push
mov
lret
shll
mov
jge
mov
jecxz
jmp
mov
jb
ljmp
sbb
ds
inc
pop
pusha
add
insl
xor
sbb
ljmp
pop
mov
cmc
xor
pop
cmp
add
sub
rcl
shrb
sub
hlt
cld
loopne
rclb
nop
mov
or
in
xor
sbb
test
inc
jge
dec
mov
pop
pop
add
int3
movsb
add
sbb
dec
femms
loopne
mov
mov
in
movsb
add
xorb
cltd
jecxz
xchg
pop
jge
xchg
or
mov
pop
xor
inc
mov
mov
pop
xor
or
enter
adc
lds
subl
pop
or
mov
push
lods
cmpsb
lahf
sub
test
cmpsb
sbb
mov
inc
and
push
cwtl
inc
inc
dec
xchg
clc
inc
fwait
xor
stos
cmc
sub
adc
fsubp
add
mov
and
or
aas
cmc
fadds
inc
js
ljmp
test
pop
mov
clc
lods
std
int3
jmp
cmpsl
bound
mov
sahf
or
push
cmpl
mov
cmp
adc
jp
jmp
lock
xorb
loopne
sub
sbb
cmp
xchg
xchg
out
and
das
mov
orl
sbbb
adc
mov
push
and
fistps
xchg
cmp
fistl
push
adc
pop
dec
in
rcr
push
cli
adc
add
popf
ret
inc
sub
hlt
jo
addr16
popa
sbb
test
xlat
cli
incl
out
into
cmpsb
or
sub
xor
mov
and
xchg
push
jecxz
inc
nop
mov
add
xor
arpl
xchg
cmp
add
xorb
sti
stos
jae
mov
lcall
pushf
mov
push
pusha
es
call
test
mov
mov
xchg
pop
call
out
push
mov
testl
push
shl
push
dec
or
push
outsb
add
jle
inc
sub
test
insl
std
and
mov
jle
in
lods
jl
jp
or
dec
pop
sub
ret
pop
dec
adc
ret
ret
add
fdivl
stc
enter
std
mov
sub
fbld
add
loopne
adc
in
clc
add
stos
cmp
movsb
sub
push
sub
sub
jne
and
inc
xchg
pop
sbb
dec
mov
add
jbe
incb
pushf
cmpsb
movsb
shlb
mov
mov
fsubs
loope
aas
cld
pop
ret
cmp
cltd
outsb
push
adc
fwait
aad
and
jle
cmp
pop
lret
xchg
or
arpl
scas
cmp
fmul
inc
add
das
sbb
fldenv
aaa
push
dec
fimuls
loope
test
xor
mov
pop
loopne
aam
leave
rol
pusha
loop
dec
mov
add
xchg
and
or
daa
jg
dec
loope
pop
movsb
roll
inc
in
add
xor
adc
adc
xlat
inc
subl
push
jecxz
leave
dec
pop
aam
negl
incb
shr
xchg
nop
or
or
push
insl
add
inc
cld
mov
mov
rcrl
mov
loop
xor
or
rorb
dec
test
or
cmp
sbb
mov
rcl
lock
add
repz
aad
mov
pop
pop
mov
push
xchg
push
enter
adcb
push
dec
ret
sub
jo
add
fistps
sbb
xchg
mov
sub
lds
fisttpll
or
mov
cmp
stos
ds
mov
cmp
rolb
pop
mov
cld
inc
clc
or
les
dec
or
pop
jmp
mov
popa
inc
test
xlat
sbb
shll
mov
lahf
jl
je
int3
repz
lods
cmp
in
push
stos
scas
dec
or
mov
add
push
jge
ror
xchg
movsb
fsub
jbe
push
cs
paddq
and
and
scas
xor
lret
inc
cmc
add
loope
xchg
shll
mov
xchg
sub
pop
xchg
add
mov
fwait
andb
jecxz
into
dec
enter
mov
stos
cwtl
push
sub
test
xor
add
mov
xorb
fsubl
add
rclb
lret
icebp
xchg
add
pop
ljmp
setne
mov
or
scas
sub
or
xor
je
adc
pop
lea
sbb
push
pop
add
dec
loopne
sub
ret
xchg
mov
xchg
cmp
fcompl
mov
xchg
mov
jb
cmp
xor
out
imul
icebp
push
adc
and
add
shr
gs
adc
push
lds
and
dec
scas
or
js
inc
mov
jecxz
ret
outsl
int3
fsubrs
adc
insl
cmp
sub
push
jp
ljmp
inc
jle
mov
mov
inc
adc
std
or
and
sub
jmp
pop
cmp
xor
in
decb
push
lret
clc
sbb
mov
xor
cmp
inc
xchg
cli
adc
test
sbb
cmp
xchg
ret
adc
or
push
and
popa
add
mov
idivl
add
enter
add
push
pop
push
jo
pop
adc
orb
imul
hlt
add
jg
sub
xorb
ja
stos
add
push
fadds
int
fadd
cli
pop
inc
and
cmp
sub
push
mov
mov
movsl
xchg
bound
xor
insl
inc
cmp
arpl
fwait
and
dec
add
mov
xchg
pushl
mov
lcall
pusha
ds
add
sti
rep
jle
cmp
push
xor
test
rorb
lahf
jns
movsl
mov
clc
in
inc
cld
in
mov
xchg
jg
mov
jmp
loop
mov
pop
jge
movb
incl
xchg
bound
push
push
push
cmp
shr
shll
dec
testl
cld
aaa
add
das
sub
and
out
hlt
test
addb
xchg
sub
and
aaa
add
mov
jb
fwait
inc
pop
pusha
or
lcall
adc
lods
adc
subl
cmpsl
int
mov
loop
jle
jge
shlb
lcall
pop
and
fisttpll
dec
xchg
adc
sub
gs
clc
push
inc
outsl
sub
mov
shll
mov
mov
mov
aas
mulb
test
pop
add
lret
sbb
add
rcr
mov
cmp
sbbl
and
test
fisttps
pop
sahf
mov
test
and
aam
adcb
jecxz
cld
ljmp
outsl
setae
loop
dec
out
in
rcr
mov
loopne
insb
and
sbb
ljmp
divb
or
aaa
jne
xchg
movsl
inc
push
test
sbb
inc
divb
push
test
sbb
adc
idivl
arpl
add
aaa
andb
aaa
xchg
xor
sub
sbb
dec
ret
jmp
mov
daa
add
mov
lock
je
xchg
inc
pop
test
add
or
push
gs
pop
mov
sbb
or
jmp
inc
leave
das
rclb
add
adc
les
dec
adc
and
push
add
je
cmp
stos
aas
mov
xor
ss
push
ret
and
inc
or
push
add
pushf
add
add
mov
xchg
mov
shrb
add
pop
mov
andb
mov
jmp
xchg
add
icebp
inc
dec
sbb
icebp
ljmp
add
iret
xchg
push
rolb
sbbb
ja
inc
mov
repz
inc
stos
incb
cli
shlb
mov
dec
inc
xrelease
mov
and
lret
popf
subl
mov
inc
push
push
add
idiv
or
shlb
shrl
push
movzbl
das
fs
add
dec
cmpsl
and
fimull
mov
lret
aad
movsb
sahf
out
insl
inc
dec
xlat
cwtl
gs
dec
add
cld
dec
fisttps
orb
imul
sbb
push
iret
add
das
shll
add
add
add
aam
pop
push
sbb
mov
jmp
sub
jne
ret
aad
mov
jmp
add
pop
push
lcall
and
ror
xchg
adc
push
mov
dec
test
popa
and
pop
mov
popf
ror
add
add
xchg
pop
insb
roll
mov
aas
jl
das
addr16
mov
jno
add
sub
jns
pop
mov
jmp
mov
int
daa
test
adc
add
sub
or
dec
or
mov
cld
adc
out
mov
dec
mov
mov
mov
or
mov
cld
lret
mov
push
out
and
pop
sbb
push
lods
xor
xchg
add
jg
inc
lds
incl
lahf
or
into
jge
dec
pusha
xchg
adcb
dec
cltd
adcb
aas
call
lea
sbb
and
mov
mov
pop
pop
movsb
movsb
pop
cmp
rclb
jae
arpl
inc
rorl
and
lods
mov
cld
cmp
inc
cmp
pop
and
add
out
in
std
shlb
add
test
call
pop
pop
inc
sub
cmpsl
push
mov
push
ret
adc
jmp
cmp
outsb
jmp
fsts
imul
sub
jns
daa
jge
lahf
int
nop
sbb
dec
mov
pop
shlb
int
inc
sub
adc
movsl
xor
lahf
dec
fiaddl
cmp
cli
and
cwtl
scas
mov
pop
xchg
mov
mov
push
cld
or
out
iret
neg
lods
pop
xchg
or
imul
repz
dec
fildl
cmp
push
add
dec
dec
xchg
or
sti
daa
pop
mov
push
pushf
lret
mov
push
inc
adc
mov
aad
nop
mov
inc
test
sub
movsb
add
int
sbb
rcrl
add
xchg
lods
jnp
fdivrs
adc
jecxz
clc
mov
pop
cmp
jg
adc
jg
push
adc
push
xchg
push
loopne
fists
push
pop
bound
fnstenv
mov
rcll
mov
in
mov
xorb
pop
jg
adc
das
lea
fdivs
xor
xor
mov
mov
adc
fimull
lods
or
mov
xchg
add
push
imul
loop
cmp
testb
inc
imul
and
call
stc
xchg
fisubrs
sub
and
and
imul
imul
lretw
xchg
mov
call
arpl
mov
mov
cmp
ljmp
and
inc
sub
test
enter
jne
fsubrs
leave
leave
cmp
xchg
cmovs
inc
shl
dec
xor
nop
js
popf
repnz
loop,pt
ret
push
int
jp
popa
push
sub
daa
jns
aas
inc
add
lea
std
or
jg
in
mov
icebp
jne
sbb
lcall
dec
inc
sub
sarl
fcmovnb
push
test
test
cmpsl
sub
and
imul
sbb
jg
cmc
xchg
gs
repnz
or
aas
das
or
add
push
popa
xchg
cli
ret
ret
add
mov
clc
roll
cld
testb
cmp
les
xor
out
fmull
mov
mov
lock
adc
rclb
ss
dec
sbbb
push
adc
mov
roll
shlb
and
adc
cmc
or
les
sub
clc
fistl
push
jge
inc
popa
loopne
pop
mov
lock
je
stos
xor
xchg
jns
cmp
sti
cwtl
orb
repnz
test
clc
mov
call
pop
les
in
mov
scas
mov
add
cld
lahf
mov
xchg
mov
std
add
cld
push
push
xchg
dec
clc
scas
sub
xor
call
in
test
cmp
pop
cmp
cmpl
andb
cmpsl
test
es
sbb
add
hlt
inc
mov
mov
rcrb
jge
outsb
jmp
push
pop
xor
icebp
adc
or
test
add
es
fidivrs
pop
jo
lahf
xor
add
xchg
jns
and
adc
jns
or
pop
adc
push
mov
sub
dec
je
mov
mov
and
jmp
cld
xchg
in
add
aam
pop
cmp
loope
fdivl
loope
mov
ficoms
push
aas
push
jns
mov
jnp
pop
rorb
push
lds
ret
or
fnstsw
test
add
cmp
inc
pop
mov
dec
ja
mov
add
jle
cmpsb
fdivr
out
ret
dec
inc
xor
xor
cmpsb
pusha
and
or
sar
lret
adc
add
ret
loopne
jg
lock
aad
aaa
xchg
inc
push
pushf
jmp
mov
pushf
testb
dec
ljmp
jp
push
lcall
repz
stos
inc
mov
test
add
jge
xor
push
rcl
mul
inc
xchg
jle
jno
add
cmp
sarl
inc
jae
mov
mov
cmp
js
movsl
xchg
sub
inc
insl
jl
imul
and
jns
and
cltd
das
lea
je
mov
push
je
mov
std
outsl
adc
xor
push
xchg
adc
loope
pop
cmpl
enter
inc
dec
sti
or
add
xor
push
add
pusha
lds
push
rcrl
xor
mov
xchg
es
add
addr16
mov
mov
ret
push
roll
or
push
into
lahf
roll
xor
data16
mov
jp
cmc
xchg
add
xor
add
pop
and
adc
dec
cmp
dec
sbb
xchg
push
mov
out
roll
stc
popf
out
sub
sbb
fisttps
cmc
inc
and
jo
push
jge
mov
xchg
add
xor
mov
loope
jae
dec
inc
mov
inc
in
adc
rclb
andl
loopne
test
mov
add
dec
jnp
mov
add
stc
dec
call
cwtl
dec
or
inc
clc
pop
xorl
scas
push
ret
scas
loope
scas
mov
sub
and
adc
sub
decl
fmuls
daa
mov
popa
out
fcmovbe
mov
lods
movsl
andl
mov
add
inc
cmpl
xor
stos
xchg
xchg
fstpt
sbb
test
inc
lcall
fadds
lret
aas
lock
stos
adc
lods
lds
push
clc
cmp
dec
stos
outsb
inc
inc
mov
sub
mov
mov
cs
rclb
inc
fidivrs
sub
test
mov
inc
and
pop
mul
inc
fs
xor
inc
pop
sub
ja
jecxz
xchg
adc
sbb
push
lret
iret
aas
pop
jbe
pop
cwtl
test
decb
or
sahf
divb
and
addr16
test
and
dec
das
mov
movsb
ljmp
mov
mov
xor
cmp
pop
mov
mov
push
sbb
iret
fidivs
lea
xchg
cmp
push
dec
push
sub
push
stos
inc
pop
daa
inc
fwait
xchg
fs
add
dec
mov
sti
or
sbb
lock
filds
jge
ret
test
sbb
lahf
pusha
push
aad
out
jno
push
adc
add
push
lcall
or
jno
nop
mov
ja
repz
xchg
imull
ret
sub
add
inc
insl
xor
loop
and
es
shrb
cmp
inc
dec
cmp
cmp
addr16
ds
sti
sbb
mov
fstl
shl
xchg
push
pop
xor
jmp
mov
and
cmp
shll
aas
icebp
nop
test
pop
lret
pop
sbb
repnz
fcmovu
mov
adcb
outsb
cld
mov
lds
icebp
aam
out
dec
dec
mov
test
adc
pop
cmp
mov
mov
call
popa
adc
push
pop
nop
xchg
sbb
or
push
push
inc
dec
cmp
mov
mov
insl
jl
stos
mov
xchg
lret
subb
hlt
orb
repnz
adc
aas
lret
pop
cmpsb
push
icebp
push
movsb
mov
and
loopne
mov
xor
fwait
pop
ljmp
mov
test
pop
add
fcompl
dec
clc
outsl
or
push
int3
lret
int
sub
pushf
pop
shlb
xchg
movsl
sub
fwait
adcb
stos
dec
lcall
pop
rorl
aas
push
sub
repnz
daa
pop
push
xchg
xchg
inc
ljmp
loopne
mov
les
je
les
add
loopne
dec
and
outsl
clc
enter
test
pop
mov
mov
cmp
add
pop
arpl
and
lcall
shr
mov
out
sub
cmp
jnp
mov
xor
inc
lods
roll
ficompl
sbb
and
add
mov
mov
sti
jg
inc
dec
mov
xchg
leave
jno
mov
pop
push
clc
pop
cmp
call
test
jns
add
sub
out
xorl
sbb
rcrb
lahf
adc
xor
lock
jae
outsb
mov
inc
stos
jmp
ja
inc
or
and
pop
cs
rcll
adc
xchg
pop
jge
xchg
or
jo
dec
mov
mov
into
and
jmp
nop
inc
or
jg
xor
icebp
adc
xchg
sbbb
mov
jns
adc
aad
xchg
imul
cs
pop
cs
mov
dec
lcall
pop
je
cmp
xchg
jnp
pop
mov
or
jnp
jnp
or
mov
aad
arpl
sbb
out
lock
lret
xor
fimull
add
cmp
adcl
sbb
jmp
inc
mov
daa
cmc
leave
in
cld
jg
push
call
dec
stos
mov
aaa
push
add
cwtl
in
gs
divb
loope
dec
lds
sub
dec
cwtl
sbb
out
mov
inc
xor
cmc
jo
lea
adc
push
scas
fnsave
ret
dec
rclb
sbb
int
lret
mov
sbb
mov
mov
sub
push
ret
push
dec
inc
pop
sub
call
jb
es
cmp
xor
xchg
cmc
ret
rcll
bound
scas
mov
mov
fstl
sti
push
aaa
loope
mov
ljmp
push
mov
pop
aad
cld
cmpsl
clc
push
xchg
push
push
sbb
outsl
adcb
add
sbbb
inc
cmp
sbb
les
jo
mov
inc
push
pop
idiv
wrmsr
add
mov
lock
sbb
lods
and
cmp
mov
mov
shlb
inc
in
cmp
or
mov
push
jp
ficompl
adc
sti
mov
xor
test
mov
sbb
ljmp
jns
jmp
lock
dec
mov
aam
dec
jle
sub
aad
add
idiv
lea
jno
pop
jg
or
sbb
adc
add
xor
xchg
adc
movsl
shlb
xchg
filds
or
pop
mov
fld
ret
leave
ficoms
jg
mov
cmpsb
fstps
mov
lock
inc
xchg
icebp
cmpsb
cli
and
lds
out
inc
mov
mov
lcall
inc
mov
fisubrs
add
and
ret
stos
repz
or
pop
dec
loop
test
sub
cmpb
push
jb
xchg
and
push
loope
cmc
rcrl
adc
mov
mov
cltd
fistpll
adc
hlt
cwtl
add
inc
add
mov
mov
test
filds
inc
mov
int
mov
mov
lahf
pop
jp
xchg
fstps
test
jle
add
mov
insb
mov
orl
movsb
test
scas
lret
jne
push
clc
push
jl
std
aad
mov
push
mov
pop
xchg
or
jg
jecxz
ficoml
lods
dec
fldenv
andl
fs
jl
sub
cmp
cwtl
add
test
lods
ds
cmpsl
aam
mov
pop
andl
or
jle
jle
je
adc
inc
lret
call
stc
ljmp
inc
xor
fcmovu
add
fsubs
ret
and
mov
xor
push
test
xchg
rolb
inc
ret
pop
and
dec
fsubs
out
stos
fndisi(8087
cld
jl
sub
je
xlat
sub
mov
xchg
cmp
aas
arpl
push
lock
inc
data16
mov
push
inc
and
clc
enter
xchg
jo
xchg
adc
test
aaa
outsb
jecxz
bound
jg
xlat
or
repz
les
dec
xlat
sub
int3
xlat
push
or
cld
outsb
push
cmpsb
push
xor
mov
daa
and
data16
dec
adc
lock
insl
subb
xchg
movb
cmpsl
inc
and
addl
sbb
adc
fs
or
mov
lock
inc
and
out
mov
clc
sub
les
sbb
out
dec
test
mov
xor
test
hlt
sbbb
xchg
in
pusha
cld
shrl
add
mov
in
popa
dec
mov
je
mov
add
addl
movsb
inc
pop
mov
pop
clc
insb
insb
cmp
cld
xchg
push
out
push
xor
push
lret
push
addb
pop
push
test
faddp
popf
push
sub
jbe
push
xor
divb
lahf
pop
dec
jmp
cmp
aam
inc
pop
pop
adc
movsb
out
das
test
fs
lcall
sbb
jp
sub
sub
cmp
mov
fcoms
dec
adc
inc
js
icebp
jecxz
out
dec
or
mov
lea
pop
cli
xor
or
int
mov
mov
push
cmp
pop
push
adc
js
stos
sarb
decb
lcall
shl
adc
inc
xchg
mov
mov
mov
or
push
test
push
stos
movsb
jne
add
ficomps
pop
ljmp
xchg
jp
outsl
sbb
lods
adc
and
nop
in
mov
cmp
sbb
out
in
add
adc
and
stos
pop
fwait
mov
dec
loopne
xchg
add
mov
sbb
sbb
add
in
shll
push
or
mov
cld
mov
sbb
mov
mov
sbb
xlat
jne
nop
cli
inc
pop
inc
std
or
std
jmp
mov
or
repnz
sti
insb
ficoms
lock
cli
ljmp
add
lret
cwtl
nop
sbb
nop
fstps
inc
in
jmp
out
outsb
pushf
mov
pop
int
pop
call
sub
cltd
and
mov
sbb
and
xchg
nop
pop
dec
jmp
pop
pop
imul
mov
and
data16
pushf
shll
jp
out
ja
cmp
inc
jb
dec
mov
mov
cmpb
outsl
xchg
mov
add
faddl
aaa
pop
and
sub
mov
pop
js
call
xor
loope
loop
lods
lret
lcall
popa
fdivr
mov
push
pop
push
bound
in
loop
ret
and
and
pop
dec
mov
inc
mov
cli
xlat
xor
movsb
rolb
and
push
pop
xlat
sub
ljmp
mov
fdivrs
js
and
adc
sub
outsl
mov
aad
cwtl
mov
jp
cmp
rol
cmp
cltd
es
cld
pushl
dec
cmp
call
repnz
out
inc
mov
outsl
pop
push
add
aaa
aad
adcl
sub
loop
hlt
pushl
jmp
fsubrs
cld
mov
jbe
cs
xchg
aas
add
add
inc
push
xchg
movsl
adc
std
jg
sub
fsubrl
incl
inc
sub
jb
lahf
cli
pop
ljmp
fwait
sub
into
cltd
inc
js
add
or
inc
and
xchg
sub
jmp
int3
mov
rorb
and
mov
push
mov
and
pop
je
repnz
push
hlt
cmc
pop
xchg
popa
add
shlb
push
sub
inc
adc
push
pop
insb
mov
pop
jne
aaa
mov
cltd
lret
ret
add
pop
mov
sub
out
jmp
mov
inc
push
iret
pop
fbld
aam
xchg
and
jo
das
mov
loop
mov
aaa
movsl
pop
cmc
outsl
int3
fwait
lds
xchg
ret
cmp
ja
and
dec
cmpsl
incl
call
in
cmp
fsqrt
jg
xchg
out
mov
decb
decl
into
nop
data16
inc
push
mov
mov
pop
pop
andb
outsl
mov
movsl
sbb
fbld
jl
cmpsb
cmc
ljmp
mov
mov
cmp
dec
and
adc
ss
mov
jge
mov
inc
sar
mov
or
notl
pop
xor
jg
mov
inc
daa
pop
pop
js
pushf
jb
ljmp
repnz
jb
shll
clc
mov
gs
cmpsb
out
fisttpll
pop
daa
out
jg
pop
dec
pop
push
cmc
fcoml
pop
add
clc
cmp
test
test
out
jns
jns
mov
cli
ja
sarb
xor
xor
int3
sub
mov
ljmp
repnz
inc
ds
sbb
cmp
gs
fldl
fsts
pop
jae
jecxz
shll
mov
cmp
xlat
cmp
ret
out
popf
cmp
add
sub
xchg
jo
scas
loope
lods
cmp
cwtl
nop
adc
gs
rcll
push
testl
xchg
dec
add
jns
sub
lods
mov
in
cltd
stos
xchg
add
pushf
cmp
jns
xchg
inc
xchg
adc
mov
mov
jb
mov
jns
je
lock
stc
sbb
lock
jns
adcb
shrb
lcall
sub
loope
inc
cmp
mov
sarb
das
mov
popf
jno
shrl
pusha
add
lcall
ss
pop
jns
pop
push
push
sub
orb
sub
push
xchg
cmp
sbb
in
fwait
cmpsl
jb
pop
outsb
orl
sub
cmp
sbb
xor
inc
ds
sbb
int3
insb
decb
fstps
repnz
jp
and
sub
int
loope
lea
cltd
jl
into
hlt
inc
mov
cs
incb
and
cltd
fldt
test
pop
push
xor
jno
test
push
incl
sahf
mov
rclb
addr16
or
dec
adc
adc
adc
subl
ja
pop
jle
sbbl
test
stc
loopne
lods
sub
lods
cmp
call
dec
fucomip
cmp
das
mov
xchg
jbe
lea
sahf
clflush
xchg
xchg
pushf
and
out
std
pushf
repz
pop
jb
or
mov
aaa
jge
ljmp
sbb
aas
cmp
mov
lods
pop
push
addb
mov
xchg
pop
dec
loop
test
addr16
adc
shrb
ja
fidivl
mov
push
test
or
mov
mov
movsb
movsb
cmp
push
inc
pushf
imul
push
in
add
cmp
test
mov
sbb
jno
out
dec
xchg
mov
call
movsl
cmpl
adc
lea
or
jb
leave
mov
mov
mov
in
in
jp
inc
loope
dec
mov
sub
dec
cmp
cmp
xchg
repz
pop
xchg
enter
jmp
aam
xor
and
fwait
xchg
xor
ds
imul
lods
cmpsw
or
inc
or
std
sub
jo
addb
cmp
add
arpl
insb
stos
scas
jns
jmp
cmp
outsl
shlb
and
mov
xchg
push
lcall
cmp
es
pop
pop
add
into
adc
inc
sbb
jae
xor
imul
sub
pushf
push
push
jg
lods
aam
sbb
daa
lods
sub
in
lds
push
xor
decl
xchg
adc
shr
mov
push
push
xchg
add
inc
adc
cmc
xchg
and
push
cmp
bound
mov
insl
test
and
push
aas
xor
push
add
rcrb
push
inc
cmp
fnclex
jp
dec
cmpsl
out
add
leave
sbb
pop
fwait
cli
incl
movsl
xlat
xor
inc
add
ret
inc
lret
and
adc
popa
jp
das
xor
into
add
or
mov
mov
jb
xor
repz
scas
aas
rclb
lods
aad
cmp
js
daa
cld
xchg
cli
push
xchg
inc
cltd
or
lds
jecxz
inc
jne
mov
sbb
mov
lea
fdivs
jmp
push
aad
gs
xchg
mov
enter
enter
aad
filds
in
add
or
or
lret
and
cmpsl
fstpt
test
add
decl
aam
imul
xor
cli
add
add
dec
enter
pop
inc
xorl
sbb
jg
insl
mov
int3
call
aaa
pop
cmp
jge
xchg
sahf
les
inc
cs
lcall
xor
mov
notb
xchg
jle
fs
pop
ret
push
mov
lods
mov
and
and
imul
loopne
scas
push
enter
pop
mov
jl
xor
xchg
shrl
dec
popa
call
loopne,pn
and
dec
mov
fisttpl
push
ljmp
lret
push
mov
lcall
pop
sti
mov
aas
lcall
jecxz
jb
js
push
ja
sub
sub
push
fisttpl
icebp
lds
lcall
sub
push
or
xchg
rclb
sahf
sti
dec
ret
pop
mov
jns
negl
pop
push
in
outsl
and
imul
sub
lea
add
std
sbb
xor
lock
sbb
and
push
mov
inc
clc
incl
sbb
cmp
mov
xor
das
clc
push
jae
popf
out
fcoml
es
dec
xor
ss
xor
jmp
iret
sbb
dec
roll
movl
fwait
mov
cwtl
jmp
inc
mov
cld
dec
xchg
dec
cmp
dec
aam
push
enter
dec
cld
push
je
ds
movsl
cmp
hlt
fmuls
and
pop
cmp
les
sarl
xlat
movsl
sub
and
clc
in
xchg
push
cmp
movl
xchg
jmp
pop
call
vpshufhw
outsl
lcall
shrb
leave
sar
in
pop
pushf
inc
outsb
xor
adcb
insl
and
daa
jbe
jecxz
cld
sar
sarl
add
int
and
ret
popf
cmpl
gs
scas
shrl
xor
aaa
ljmp
mov
or
popf
imul
pop
dec
test
pushl
fmull
orl
loop
sub
mov
popa
mov
push
aaa
iret
outsl
dec
popa
jecxz
or
imul
iret
and
out
jg
dec
cmp
dec
cmp
inc
adc
arpl
arpl
movsb
fldl
jp
mov
cmp
ja
mov
cs
cmp
and
or
sub
pop
pop
xlat
sar
jmp
jp
lret
in
add
lahf
push
in
cld
stc
pop
push
push
add
stos
xor
push
pop
das
inc
mov
call
lcall
xchg
mov
ret
add
xchg
sbb
add
icebp
or
dec
das
jg
ret
rorb
mov
lods
mov
in
loop
aaa
int
or
nop
mov
xchg
ljmp
popf
mov
ljmp
iret
and
mov
int
std
cwtl
add
or
mov
ret
lahf
add
mov
je
mov
les
pusha
or
notb
lea
mov
adc
out
mov
cmpb
mov
pop
xchg
sub
or
scas
or
les
cmp
pop
loope
inc
ffreep
mov
xlat
faddl
frstor
sbb
aas
pop
popf
dec
mov
or
aaa
stc
fst
dec
or
das
ror
sbb
bnd
xor
sbb
sar
push
adc
daa
lcall
push
lcall
add
call
test
adc
adc
lock
inc
ljmp
ret
cvttps2pi
out
outsb
cmp
popa
mov
sbb
mov
aad
and
call
fimull
fdivs
mov
lds
jno
xorl
ret
lock
adc
inc
hlt
push
and
in
jg
push
or
cwtl
sub
mov
dec
or
lods
cmc
imul
ss
add
mov
test
sbb
mov
push
insb
inc
mov
ret
mov
push
in
loop
mov
dec
push
and
loope
and
movsb
cmp
mov
ret
mov
inc
push
pop
mov
xor
xor
push
lcall
dec
daa
pop
push
inc
inc
cli
add
mov
repz
xchg
aas
rcrb
addr16
jl
xor
cmp
and
xchg
inc
fnsave
and
mov
sahf
or
and
int
test
mov
shl
sti
cmc
jne
sbb
hlt
lcall
mov
mov
je
decl
xchg
call
xor
or
in
xlat
xchg
push
pop
mov
fistps
inc
xor
and
push
xchg
mov
arpl
stos
aas
or
fwait
xor
adc
add
dec
push
cmp
jae
daa
lods
inc
iret
movsl
fadds
and
loope
sub
test
xchg
mov
add
inc
outsb
in
or
xor
lock
add
pop
mov
jns
lock
repnz
test
flds
xchg
push
hlt
cmp
sub
pop
call
iret
cmp
mov
mov
jp
pop
lods
das
push
in
jo
dec
cmpsb
leave
insb
sbb
and
test
jl
or
and
sub
andl
or
sub
dec
clc
jns
sbb
cwtl
inc
rcll
pop
aaa
mov
and
push
adc
xor
lock
outsb
dec
add
ret
cmp
shlb
jle
pop
xchg
inc
pop
bound
push
sarb
mov
mov
lods
icebp
mov
push
sbb
jmp
sbb
dec
mov
dec
arpl
mov
adc
dec
dec
mov
fmuls
jg
mov
clc
jnp
scas
add
inc
movsb
cmpsb
ja
sbb
mov
int
jo
pop
inc
sbb
mov
ror
or
insb
lea
call
fucom
fisubrs
and
sub
and
out
and
scas
ss
sarl
xchg
sub
pop
push
rcrl
jo
jb
mov
push
dec
mov
and
outsb
and
shrb
adc
mov
xchg
xchg
sbb
test
fwait
push
add
clc
lahf
pop
sbb
dec
sub
cmp
jbe
push
or
inc
js
mov
mov
pushf
adc
test
dec
rdmsr
fbstp
push
ret
adc
lcall
push
xor
xchg
inc
sbbl
sub
mov
adc
popf
les
adc
lret
xchg
fst
adc
movsl
xchg
ja
ret
pop
add
or
sub
inc
jns
add
mov
sub
mov
pushaw
mov
mulb
in
loope
and
xchg
jl
jne
out
in
mov
lret
nop
mov
inc
hlt
fbstp
stos
and
jecxz
cmp
out
aam
jb
nop
push
adc
lock
mov
mov
pop
xchg
add
imul
adc
cmp
ds
and
inc
gs
sti
insl
out
mov
add
int3
push
adc
fimull
bound
dec
push
add
pushw
adc
xchg
mov
shrb
and
inc
pop
frstor
mov
cmc
clc
cmp
xchg
pop
mov
push
in
mov
xchg
ret
mov
cmc
and
sub
add
subb
adc
pop
fyl2x
push
sub
lret
jle
adc
push
shl
loopne
sarb
sub
test
push
add
pop
add
and
enter
push
mov
aas
inc
cs
sbb
sub
pop
mov
xor
inc
out
movsl
jo
jg
mov
inc
sub
aad
pop
pop
xor
stc
dec
adcb
out
xchg
dec
ret
fs
andl
pusha
in
mov
mov
mov
xor
into
push
stos
push
stos
mov
inc
pushf
adc
cmc
arpl
ljmp
push
ljmp
adc
or
adc
movsl
pusha
xchg
jg
sar
imul
lea
xorb
or
ja
cmp
mov
lahf
pop
arpl
mov
jno
cmp
cli
xor
xor
mov
cmc
xchg
addr16
testl
fisubrs
adc
lea
add
nop
dec
out
and
lret
inc
inc
lods
push
cmp
icebp
dec
sbb
cld
pop
add
inc
fildl
test
xor
in
inc
mov
sub
stc
aas
jnp
xlat
aas
repz
or
je
xor
shl
data16
xchg
mov
mov
fwait
inc
xchg
fistpll
dec
xchg
inc
push
shrl
add
nop
lea
loope
mov
inc
mov
xorb
dec
addb
inc
adc
mov
ss
inc
sub
mov
dec
push
mov
and
fsubs
pop
sbb
scas
movsb
push
and
mov
push
rcrb
loope
xchg
xchg
inc
movsl
ficoml
mov
std
push
pop
xchg
and
add
lahf
test
orb
cs
mov
out
dec
xchg
int
stos
mov
lock
and
nop
or
sbb
iret
cmp
pop
nop
sub
inc
mov
mov
xchg
dec
and
iret
xchg
sub
push
adc
or
fldt
outsl
std
imul
mov
or
mov
mov
jns
icebp
pop
adcb
push
add
mov
fadd
xchg
push
pop
aas
ljmp
icebp
xor
dec
popl
push
lea
mov
add
lret
dec
mov
sbb
xor
jb
pavgb
bound
cwtl
sub
pop
dec
xchg
scas
sbb
dec
inc
adc
inc
mov
leave
push
mov
and
loope
lds
mov
fisubrl
add
adc
xor
mov
dec
or
cmc
stos
insl
dec
jl
lahf
push
fiaddl
push
dec
lods
incb
sbb
or
sti
mov
scas
outsb
add
mov
mov
or
xor
push
inc
call
add
popf
xor
push
repnz
and
mov
les
add
xor
andb
in
push
or
inc
insb
cld
xor
adc
adc
push
mov
dec
pop
xchg
sub
adc
push
jnp
lods
ja
and
xchg
add
mov
jbe
inc
xor
push
filds
out
hlt
cmp
iret
scas
mov
fwait
mov
push
loop
xchg
inc
add
pusha
mov
pop
or
cs
incl
repz
mov
in
mov
mov
popa
xchg
out
repnz
aas
ficompl
jle
mov
ljmp
jae
sbb
sub
mov
paddusb
jg
or
add
repnz
push
int
in
inc
add
movsl
pop
xor
mov
jmp
js
fld
ja
xor
push
push
xor
dec
dec
mov
or
repnz
shlb
adc
fadds
in
jo
pop
jnp
fsubp
push
and
shll
mov
pusha
xor
out
xchg
xchg
pop
jg
pop
push
jnp
ret
pop
or
xchg
popa
inc
add
imul
add
fstpl
lret
adc
mov
arpl
incl
inc
jmp
xchg
jnp
shrl
pop
stc
or
or
cmp
xor
cmpsl
lahf
scas
fucomp
lea
insb
dec
inc
mov
inc
jo
inc
push
pop
in
loop
jns
jle
mov
mov
jnp
inc
mov
fwait
mov
mov
popw
jmp
or
popl
pusha
ja
test
mov
sbb
shll
jg
push
mov
ljmp
aas
mov
je
adc
sub
insb
fnstenv
xor
mov
leave
add
xchg
es
jle
xor
scas
xchg
and
cmp
mov
dec
in
adc
lds
shlb
add
iret
or
add
aas
subb
std
jg
in
sub
scas
inc
ljmp
ja
aaa
or
ss
inc
add
xchg
lahf
mov
push
pop
incb
add
mov
iret
jo
cli
inc
and
push
rcll
xor
into
jecxz
push
clc
divb
jmp
cmp
cltd
data16
cmp
sbb
sbb
xrelease
cmc
mov
enter
inc
sarl
dec
add
imull
mov
subl
sti
test
popa
pop
add
inc
jmp
jnp
std
xlat
clc
sbb
sbb
cmpb
repz
or
nop
outsb
call
cld
incl
dec
add
fdivrs
pop
jle
sub
hlt
aam
sar
jbe
mov
imul
pop
fbld
outsl
jo
dec
loopne
mov
loop
mov
aas
adc
or
test
addr16
add
dec
hlt
popl
jge
and
ljmp
stos
xchg
push
pop
int
out
in
mov
dec
mov
sahf
lret
and
xchg
jmp
mov
mov
mov
cld
or
push
pop
mul
bound
cs
dec
inc
loope
mov
shrb
mov
incl
test
out
pop
outsl
pop
rorb
sub
sbb
push
pop
shrb
mov
push
in
orl
test
movsb
pop
mov
pop
cmp
jns
mov
call
and
adc
push
adc
lret
scas
add
pop
ret
ficompl
call
or
sahf
arpl
adc
push
ret
mov
stos
jmp
in
int
int3
sub
aas
mov
incl
jae
and
pop
adc
test
pushf
xchg
ds
mov
in
sbb
jo
cwtl
je
jecxz
push
clc
fcomps
lea
lahf
push
adc
push
or
inc
stc
jmp
gs
inc
les
cmp
push
mov
mov
mov
xchg
mov
mov
jne
call
inc
ret
mov
pslld
popf
push
mov
cwtl
subb
sub
pushf
daa
mov
adc
div
pop
rol
hlt
mov
adc
out
or
cld
arpl
adcb
jle
pop
xor
lret
push
sti
cmpsl
lret
arpl
mov
mov
fwait
iret
sub
mov
test
add
cmp
add
and
std
setne
cmp
xor
xor
xchg
scas
mov
push
mov
cli
in
pop
adc
push
jne
lock
hlt
xlat
jle
xchg
xor
sbb
ret
pop
fiadds
fwait
cli
lret
mov
jl
int3
incl
roll
and
jp
fstpt
add
adc
inc
mov
jmp
inc
push
daa
test
adc
push
xor
dec
jo
sbb
mov
mov
rcrl
daa
iret
shrl
mov
loop
call
pop
negb
pusha
jmp
sbb
xor
cld
incl
push
out
leave
jl
lods
rorb
jle
out
or
in
pop
cli
jle
outsl
clc
mov
adc
lea
pop
loop
movsl
aam
inc
jmp
loop
pop
int3
fists
inc
rorl
push
mov
xchg
mov
xchg
stc
and
xchg
daa
test
mov
mov
mov
stos
cmpsl
xchg
and
add
cltd
sbb
jg
mov
adc
push
and
xor
push
addr16
jmp
out
fistpl
cmp
mov
dec
sbb
pop
cld
jns
out
mov
or
rcl
mov
movsb
scas
clc
push
sub
sub
xor
pop
dec
inc
shll
lock
and
adc
hlt
ret
cmc
inc
data16
push
rorb
inc
push
shlb
sbbb
xchg
jg
imul
jbe
orb
mov
arpl
jno
cli
mov
push
ljmp
push
push
sub
cs
inc
adc
or
movsl
sub
std
dec
rorb
mov
inc
lods
enter
pop
pop
ja
mov
mov
rcr
ljmp
cs
mov
insl
cmc
mov
mov
sti
jmp
jp
idivb
cli
adc
stos
xor
in
mov
test
xor
shl
mov
outsl
in
sub
lods
call
mov
pop
mov
push
shlb
in
sbb
les
cld
pop
es
incb
push
cmp
scas
int3
pop
cwtl
popf
and
nop
mov
pusha
sbb
sbb
mov
imul
shlb
mov
lcall
xor
dec
int3
pop
jo
or
xchg
inc
mov
mov
cs
pop
inc
clc
fistpl
nop
adc
mov
mov
fildl
aas
shrb
cmp
adc
pusha
cmp
add
pushf
or
sti
in
pusha
xchg
add
mov
std
aas
movsb
cli
mov
leave
mov
aaa
in
imul
das
call
jl
ret
sbb
inc
or
int
push
push
mov
cmp
lods
out
sbb
test
xchg
push
rcr
out
and
inc
ja
cmp
pop
aas
je
cmc
and
xchg
aaa
push
into
and
ror
std
mov
sbb
adc
jno
fdivl
jg
xchg
inc
add
push
cld
push
push
mov
mov
ljmp
dec
dec
loope
nop
sbb
fs
sbb
loopew
and
adc
es
call
ret
ret
aas
mov
or
adc
iret
pop
inc
dec
mov
xchg
repz
jg
pop
lea
fcoms
sub
clc
xchg
pop
sub
movsb
shlb
and
das
mov
call
lock
pop
dec
pop
outsl
mov
add
inc
and
sbb
ljmp
loope
inc
sbb
adcb
pop
lods
sbb
fs
loopne
jg
xchg
xchg
and
mov
jle
ss
fdivr
jmp
js
mov
inc
jb
pop
pop
xchg
cmpsl
lret
and
stos
mov
cld
cmp
out
jne
push
adc
adc
ficoml
js
stos
inc
pop
aam
add
fisttpll
adc
ret
add
fmuls
aas
add
push
icebp
in
jmp
clc
jno
pusha
rcll
inc
cmp
popf
sar
ret
sub
push
and
or
push
sarb
arpl
adc
jmp
test
pushl
add
in
js
arpl
or
push
cmp
mov
pop
inc
imul
sbb
cmpsl
test
ds
or
repnz
adc
sbb
mov
xrelease
hlt
scas
lea
cmp
sub
fwait
sbbb
inc
in
adcl
jmp
pop
int
lock
adc
inc
aad
xchg
xor
sbb
sar
ljmp
lahf
push
and
dec
sbb
leave
loopne
insl
push
shll
pushf
mov
testl
scas
xor
lret
jnp
cmp
ljmp
xor
xor
repnz
jp
loopne
in
adc
inc
sbb
outsl
mov
movsb
xor
movsb
inc
xor
fwait
data16
unpckhps
int
icebp
daa
in
pop
jns
jp
out
push
dec
xor
je
xchg
xor
cmp
test
clc
lcall
lea
in
jecxz
dec
adc
inc
shl
push
or
sbb
mov
adcb
sbb
sbb
roll
sbb
ljmp
daa
loopne
fxch
cmc
les
add
xchg
repz
ds
and
pop
push
and
adc
lock
inc
cmp
mov
rclb
push
mov
lods
es
sub
pop
pop
inc
decl
mov
shll
xor
jle
jg
fnsave
pushf
push
into
jge
xchg
push
inc
push
cld
xchg
outsl
movsb
xor
jle
ret
ja
lods
repz
push
push
out
aas
enter
mov
ret
add
rolb
mov
mov
imul
ret
push
imul
je
push
push
xchg
or
js
mov
mov
xor
lods
and
fldt
pusha
xchg
pop
add
shl
dec
and
inc
jle
fwait
or
ja
jnp
cli
loope
push
cwtl
cld
loopne
inc
push
inc
adc
cmp
shll
jns
iret
add
add
pop
test
in
mov
stos
or
cmpsl
lret
inc
mov
pop
insb
hlt
push
or
dec
test
icebp
and
int
dec
jmp
imul
inc
imul
push
adc
xorl
clc
pop
loopne
sbb
inc
mov
mov
jg
das
xor
test
jp
push
pop
and
xor
xchg
incl
lahf
and
push
inc
or
out
mov
fmull
dec
fnstsw
pop
fcoms
cmp
cli
outsb
pushf
jns
pop
mov
lret
fdivrl
cmp
push
in
cmp
cmp
jnp
or
add
sub
std
and
jno
xchg
adc
cs
out
cli
outsl
mov
xchg
xchg
pusha
repnz
add
dec
mov
jmp
popf
mov
mov
ja
xor
repz
clc
inc
call
dec
or
rcrb
xchg
jle
inc
adc
sbb
cli
sub
test
aas
dec
aas
inc
mov
add
xchg
pushf
add
sub
sti
mov
mov
aam
inc
inc
and
xor
mov
jmp
cmpl
xchg
cli
add
push
sbb
cmp
movb
arpl
sub
loop
adc
cmp
mov
adc
or
push
test
mov
jg
and
jnp
lea
push
cmc
mov
es
fadds
push
mov
outsl
call
jbe
jo
ret
xchg
pop
call
sbb
inc
cmp
or
adc
nop
out
dec
mov
rorl
and
cld
sub
movsb
mov
fidivl
aam
and
sub
xchg
addb
addb
rcr
rolb
clc
mul
loope
aaa
aam
xchg
or
imul
fistps
and
cmp
or
out
inc
imul
ds
or
push
cmpsb
cmpsb
mov
icebp
sbb
lahf
dec
xor
ss
mov
insl
dec
insl
in
mov
sbb
std
lds
and
pop
sub
adc
repnz
ficomps
push
leave
loope
cs
dec
add
hlt
iret
decl
add
inc
int3
loope
es
call
nop
sub
jmp
hlt
mov
add
jne
insb
rcl
rorl
inc
frstor
mov
ret
push
or
mov
jmp
push
or
push
sbb
fldcw
or
testl
mov
mov
push
xor
and
shll
and
mov
repnz
add
in
add
pop
test
shl
adc
imul
xchg
and
sbb
pusha
push
scas
add
sub
cmpsl
fimuls
sbb
inc
clc
mov
pop
lea
cmp
sub
pop
test
mov
jnp
mov
mov
inc
jns
inc
int3
jbe
adc
xor
push
inc
add
push
ss
cltd
int3
stos
cmpsl
lcall
pop
cmp
jbe
dec
jl
cmp
das
ficomps
mov
scas
inc
push
pop
push
mov
nop
pop
inc
adc
popa
xor
out
jg
enter
sub
lea
popf
pop
sub
fnstenv
add
sub
lcall
fwait
or
insb
idivl
jo
test
insb
mov
leave
std
in
and
test
adc
jge
lahf
mov
cmc
pop
aad
call
jae
sarb
xor
cmp
and
mov
mov
add
mov
outsb
mov
loope
mov
xor
dec
loopne
je
push
sbbl
shrl
leave
pushf
add
sub
pop
xchg
dec
imulb
loope
cmp
test
decl
or
jecxz
repz
into
inc
push
xchg
out
mov
ljmp
into
sub
shrb
scas
shrl
or
je
ret
or
jmp
roll
dec
rcrl
je
dec
stos
jbe
repnz
adc
sbb
lods
and
lods
ror
rcll
cwtl
inc
jl
in
ja
fstpt
xor
fdiv
addr16
push
mov
roll
ljmp
pushl
movsb
clc
mov
jg
push
in
ds
sub
xor
dec
out
in
add
pushl
inc
adc
cwtl
lahf
jg
xchg
inc
and
and
sahf
les
pop
aam
adc
clc
lods
rorb
xor
and
sbb
jbe
shll
js
mov
mov
aam
xchg
test
sbb
lcall
push
sbb
xchg
mov
test
sbb
adc
sub
aas
jmp
xor
adc
cwtl
sti
fnstenv
cwtl
xor
rcrb
dec
xchg
sbb
mov
pop
lcall
jbe
mov
jno
movsb
mov
adc
gs
inc
adc
lods
mov
ljmp
aad
test
rcrb
outsb
xchg
sbb
cmp
movsl
lahf
add
das
jns
add
sbb
adc
aam
scas
adc
xchg
sub
inc
inc
pop
test
std
dec
lds
popf
cltd
mov
dec
cmpsl
cli
inc
stos
pushf
jne
or
cwtl
or
nop
arpl
push
outsb
pop
repz
fsubr
inc
fisubrl
xlat
mov
mov
inc
add
push
or
adc
fsubrl
ds
sbb
call
daa
push
push
nop
lds
imul
call
addl
out
mov
sub
dec
fimull
mov
add
loopne
mov
adc
cmp
add
or
lock
ljmp
cmpsb
sahf
cmp
daa
pop
dec
ja
sub
fwait
inc
sbb
sub
xchg
icebp
push
xchg
add
push
mov
jg
xchg
lea
fldt
and
mov
or
cmpsl
rolb
dec
xchg
xor
jge
add
lock
add
cmp
int3
sbb
fstpl
hlt
mov
push
cld
loop
mov
out
push
lea
mov
incl
aam
pusha
test
jp
sbb
or
xor
mov
out
cli
mov
sbb
inc
pushl
inc
xchg
add
in
add
xor
xor
sbb
lods
jb
add
lock
leave
jb
mov
cmp
jae
aam
or
repz
push
ljmp
fnsave
lods
mov
jb
lret
sbb
in
pop
xchg
dec
push
mov
clc
lret
in
repz
push
jb
pop
out
stc
jb
xchg
lods
sbb
daa
fdivl
sub
push
fdivl
leave
leave
popf
sar
decl
xchg
inc
inc
and
leave
fldl
insl
push
in
inc
or
cmp
lcall
xchg
sub
insl
jge
adc
fs
inc
aaa
nop
gs
add
push
inc
mov
add
dec
ret
lock
dec
push
fistpll
sub
and
xchg
rol
jns
pop
notb
shll
mov
pop
lahf
mov
ja
pushf
adc
dec
aam
jmp
inc
sahf
es
or
mov
xlat
and
daa
xor
add
jl
mov
ret
fidivrl
xor
mov
fs
clc
sbb
ljmp
sbb
in
orl
push
ffree
outsl
inc
inc
xchg
movsb
xor
xchg
sbbb
pop
insb
fsubrs
fmull
inc
popf
mov
cmp
testl
cmp
mov
cwtl
test
inc
cld
rcrl
mov
add
dec
push
add
push
adc
imul
int3
mov
sbb
or
es
popa
mov
inc
pop
pop
sahf
mov
push
push
ret
push
xchg
or
mov
dec
cmp
and
jp
loopne
dec
ljmp
push
dec
mov
jo
add
adc
incl
xchg
inc
add
fs
and
cmp
push
adc
lock
lret
push
rcll
cmp
mov
and
stos
adc
and
jno
xor
mov
jmp
jecxz
int
pop
test
pop
orb
jp
sbb
lea
mov
jnp
decl
add
in
cmp
rcrl
add
or
aaa
outsl
aas
imul
mov
push
mov
dec
loopne
inc
scas
pop
add
pushl
movsl
out
jmp
cmp
loope
clc
paddq
or
insb
aam
or
push
stos
add
mov
jae
sub
mov
adc
and
test
scas
ds
sbb
lock
mov
dec
push
adc
not
mov
fnstsw
mov
push
je
and
call
adc
sti
mov
rclb
dec
loope
add
and
sub
push
mov
dec
cli
in
adc
dec
mov
daa
es
jle
mov
inc
lcall
pop
test
test
pushf
xchg
fwait
test
aas
je
pop
cmp
mov
mov
clc
movsl
daa
dec
aaa
pop
stc
es
push
test
cmp
in
fdivs
imul
fwait
inc
mov
sub
mov
outsb
inc
mov
mov
jb
xchg
xchg
mov
mov
nop
jle
cltd
inc
pop
xchg
int3
pop
jecxz
mov
push
sub
xor
adc
sbb
fsubr
fstpt
jl
add
xchg
dec
dec
adc
jns
cmp
stos
add
xchg
jae
xchg
std
xor
mov
pop
imul
dec
aam
call
push
add
mov
xchg
add
add
lahf
cld
sub
add
mov
pop
fisubs
mov
sub
fxtract
mov
adc
out
and
or
xchg
mov
loopne
insb
fbstp
push
lret
mov
mov
cmp
inc
mov
mov
cmp
arpl
aas
pop
adc
sti
pop
add
sbb
nop
lock
jns
movsb
sub
xor
cs
mov
fcoml
ret
adc
or
xor
cld
movsb
mov
scas
lds
data16
fidivrl
lds
fcomip
push
jl
mov
add
cmp
arpl
mov
adc
add
jg
pushf
mov
movsl
xchg
dec
loopne
dec
jge
dec
pop
add
out
mov
xchg
pushf
fcomip
mov
and
andl
jb
xchg
push
scas
mov
insb
adc
mov
cld
mov
outsl
cld
add
mov
cmc
add
adc
ds
push
sub
clc
jp
pop
sbb
add
pop
adc
xor
jnp
test
and
or
orl
ds
add
enter
bound
push
add
cld
sar
scas
sbb
inc
jnp
xor
pop
or
mov
mov
pushl
mov
test
lods
fs
outsl
add
lret
js
jg
test
push
pop
push
pop
daa
or
push
movsl
jmp
les
std
sbb
outsl
push
add
cmp
insb
adc
cmp
test
les
popf
fsincos
cwtl
jg
mov
inc
insb
and
cmp
lea
aas
add
gs
xchg
scas
ret
dec
aas
dec
dec
adc
adc
or
je
sbb
mov
xor
addl
adc
add
scas
aam
out
insb
jg
sub
lahf
pop
mov
add
std
andl
adc
or
andl
jl
xchg
mov
sbb
adc
out
in
sbb
aas
lahf
ret
loopne
push
sub
add
push
scas
test
dec
mov
decl
lods
jo
inc
xor
aas
or
enter
push
mov
ljmp
aam
cwtl
push
or
shrl
xchg
adc
pushf
mov
sbb
ret
pushl
call
xchg
mov
mov
mov
daa
dec
adc
xchg
mov
in
mov
popa
jne
add
add
je
fidivrl
or
push
cmp
cwtl
add
notl
ret
mov
mov
sub
cltd
je
call
sub
dec
nop
mov
adc
cmp
fucomi
or
jl
fwait
mov
add
add
and
adc
in
lcall
mov
loop
and
stos
mov
icebp
sub
lock
adc
cli
sbb
mov
sbbb
arpl
out
loope
rorl
lahf
shrb
or
jge
mov
sbb
xchg
cltd
fsubs
mov
mov
cmpl
add
xadd
mov
mov
inc
xchg
pop
rclb
jg
dec
mov
fndisi(8087
xor
adc
cmp
jb
fwait
clc
pop
in
outsl
lcall
push
pop
fcomps
jg
inc
push
addl
ret
adc
out
mov
rolb
push
leave
mov
jg
aas
cmpsb
mov
mov
and
jae
cmp
pop
fdivrs
pop
mov
add
xchg
dec
push
imull
std
inc
jb
mov
xchg
cmp
jae
mov
push
pop
imull
cmp
pop
testl
inc
pop
lret
xchg
std
xor
inc
mov
sar
mov
jbe
lods
es
cmp
daa
dec
int
ljmp
pop
cwtl
cs
jo
sysret
hlt
mov
cmp
andl
dec
ror
inc
or
jg
push
xor
push
mov
sbbb
lea
cmp
sbb
or
js
daa
push
add
adc
push
lods
push
cmpb
or
gs
lds
out
adc
xor
inc
sbb
aas
imul
lahf
std
jno
notl
mov
sti
cmp
dec
xlat
out
xlat
in
mov
jmp
mov
lcall
dec
mov
mov
push
scas
lcall
loope
mov
bound
ret
mov
gs
lcall
ret
outsl
mov
push
vpmovzxwd
iret
ret
clc
inc
and
int3
add
sbb
add
call
rcll
out
jg
mov
jg
pop
adc
and
pushf
pop
inc
ficoms
jo
std
and
lret
jo
or
ds
xchg
mov
mov
ja
mov
movsb
xlat
lea
mov
xchg
add
lods
sub
ds
mov
push
inc
scas
pop
lds
out
decl
pop
cmp
cmc
and
ja
movsb
dec
repz
jns
lahf
incl
push
incl
les
pop
sub
gs
adc
test
inc
add
mov
pop
add
jg
add
push
pop
pop
les
mul
ret
adcb
insb
aas
dec
jne
push
loope
mov
nop
call
cmp
mov
hlt
sahf
ja
mov
mov
or
pop
out
repz
dec
sub
mov
decl
inc
mov
rclb
lret
negl
xor
test
and
inc
dec
outsb
jo
test
movsb
outsb
outsb
and
xor
jecxz
pop
xchg
sbb
cmp
add
icebp
sarl
push
inc
icebp
mov
push
and
push
out
sar
pop
pop
fwait
inc
sub
in
xchg
mov
mov
mov
xor
cld
rorl
cli
mov
xor
cmp
mov
mov
hlt
sbb
outsl
push
cli
mov
jecxz
stc
pop
or
pop
decl
jecxz
iret
shlb
jne
scas
adcl
jp
in
ret
das
push
pop
enter
and
mov
in
decl
inc
pop
inc
incl
pop
xlat
pop
pop
mov
popf
ljmp
cmp
sbbb
mov
fldl
icebp
decl
loopne
rclb
or
mov
arpl
ret
mov
push
hlt
add
lcall
movsb
sbb
cld
inc
or
jmp
adc
in
leave
fwait
cmp
dec
adc
sbb
and
arpl
mov
cmpsb
jbe
lds
andb
xchg
scas
add
cld
fwait
dec
ljmp
incl
loop
sub
add
add
jmp
cmc
pop
das
sbb
ds
lods
cld
scas
loopne
mull
mov
ret
fistps
sti
cmpb
push
aaa
cld
in
sub
add
fdivs
jle
xor
movsb
jp
dec
xorl
mov
mov
dec
pop
cmp
push
test
call
add
adc
xor
jl
mov
lods
nop
sbb
sub
mov
fwait
das
lret
mov
bound
xor
fs
pop
jnp
xchg
add
rolb
ret
xchg
stos
lods
stc
add
nop
dec
xchg
andb
ret
fs
cmpsb
cmpsl
dec
jb
rcrb
jno
sub
nop
dec
push
fucomip
adc
outsl
jecxz
in
xor
mov
shlb
and
insl
jmp
rclb
inc
les
sub
cld
lcall
pop
inc
inc
ret
xor
mov
sbb
stc
push
daa
or
test
pop
sub
mov
insb
cmpb
decb
cwtl
and
add
pop
mov
test
lret
stc
push
je
xor
sbb
mov
cmpsb
ret
imul
sahf
adc
repz
push
ret
in
stos
ret
repnz
sbb
or
dec
jp
subl
pop
mov
sbb
fwait
add
inc
sarb
jbe
fninit
and
xor
cmp
jo
out
aas
adc
and
push
pusha
jne
pop
push
xor
sub
dec
cmp
mov
mov
mov
jae
pusha
popa
rcll
aas
mulb
xchg
test
ret
call
sub
sub
shlb
loopne
popa
cmp
sub
les
sbb
adc
pop
cmp
cli
scas
pop
mov
cmpsl
subb
je
aad
lds
in
mov
mov
cmc
mov
cmp
es
ficompl
and
xchg
xlat
popa
add
xchg
adc
fnstenv
add
add
mov
leave
push
pushf
cmpsl
js
mov
std
pop
push
add
sub
aas
enter
jne
dec
or
inc
fsubs
push
lahf
sti
iret
mov
fiaddl
ja
insl
je
ljmp
lea
lds
aas
loop
ljmp
jp
lahf
je
adc
js
and
dec
lcall
mov
out
pop
and
mov
movsb
pusha
inc
out
mov
arpl
pop
scas
ret
pop
or
clc
or
inc
cld
out
mov
push
push
lret
adc
add
jbe
jecxz
nop
inc
sbb
rcrb
in
jns
or
xchg
adc
dec
dec
ret
ret
jmp
add
inc
mov
das
xchg
test
pop
cli
movsb
es
bound
sarl
cmpsl
outsl
xchg
sbb
ror
rcrb
ret
mov
lret
insl
lods
push
jbe
rcrl
push
or
rcl
rorb
mov
dec
jg
insl
cwtl
jo
and
xchg
mov
push
cmpl
mov
les
jo
adc
pop
mov
xchg
cld
mov
mov
pop
test
loop
mov
or
scas
mov
pop
movsb
lea
inc
lret
mov
xchg
lock
pop
out
arpl
sarb
mov
jp
add
xchg
mov
sub
and
call
sub
or
sub
dec
into
xchg
insl
inc
add
adc
or
test
movsb
lock
jmp
mov
inc
loope
ffreep
enter
out
sti
jo
shll
adc
int3
push
shlb
das
rorb
mov
out
mov
xorb
dec
int3
shlb
sub
out
lods
ljmp
mov
push
sahf
adc
loope
scas
mov
js
push
out
push
in
popf
pop
add
sbb
adc
addr16
pop
outsl
or
addl
add
or
sub
fsubp
sub
inc
pop
stos
or
jnp
mov
jno
fisubrs
imul
cld
mov
cld
lcall
and
mov
and
clc
mov
mov
jmp
decb
push
add
stc
or
xchg
or
add
shll
sub
jl
xor
adc
jecxz
adc
hlt
add
inc
jno
jns
push
inc
lahf
icebp
and
in
push
jae
fbstp
clc
mov
jge
clc
push
inc
mov
addl
xor
cmpsb
js
scas
addb
xchg
aam
ret
add
inc
pop
push
lock
insl
sbbb
arpl
inc
add
popa
decl
stos
ds
push
fwait
push
fwait
xchg
sbb
rclb
cmp
sub
sub
mov
adc
ja
and
mov
fcmovb
pop
in
decl
add
cwtl
xorl
rcll
cld
test
out
out
pop
inc
mov
lods
outsl
outsb
aaa
or
mov
push
into
or
push
movb
xchg
aad
jo
or
pusha
adc
mov
hlt
inc
aaa
inc
or
insb
push
f2xm1
xor
jmp
dec
push
movsl
and
inc
dec
mov
rcrl
adc
loopne
rclb
fistpll
mov
dec
das
adc
ljmp
test
lea
adc
sbb
sub
xchg
pop
clc
mull
js
mov
dec
pusha
stos
clc
leave
nop
hlt
inc
ljmp
push
pop
subb
aas
pushf
les
and
scas
icebp
dec
xchg
into
sbb
cmp
cmp
cmpsb
xor
mov
scas
out
cmp
popa
addr16
cmp
xchg
pop
push
sbb
push
sbb
nop
or
in
mov
push
xchg
xchg
xchg
movsl
lcall
xor
lret
sbb
cmp
pusha
movsb
jo
inc
sbb
cmc
cmpsb
jle
inc
cmpsl
adc
es
das
decb
test
xchg
add
xor
and
rolb
xchg
lea
push
ret
jl
push
or
filds
aas
sbb
xlat
cs
orl
inc
out
push
jmp
pushf
cmp
repnz
or
insb
sub
xor
add
adc
jnp
jae
mov
pop
ljmp
pusha
out
mov
or
mov
jbe
adc
frstor
pushf
mov
adc
aas
cmp
stos
add
and
ss
aam
fadds
push
fbld
dec
inc
push
or
cmp
adc
sbb
into
adc
add
mov
mov
sbb
movsb
inc
subl
adc
mov
mov
mov
mov
push
add
jnp
daa
leave
add
sbb
aam
pop
push
xor
xor
sarb
aas
std
fadds
daa
mov
mov
sbb
repnz
mov
push
dec
cmp
outsb
cmp
add
and
pop
hlt
pop
adc
jns
stc
and
mov
and
xorps
stos
inc
or
sbb
inc
xor
xchg
lea
jle
sbb
push
fadds
pop
outsb
js
push
or
cmp
das
dec
adc
xor
adcl
loope
cwtl
xchg
mov
push
fsubrp
cmp
rcl
dec
inc
stos
mov
outsl
xor
in
rorb
mov
rolb
decb
jl
xor
iret
dec
insb
push
test
mov
and
fwait
cltd
cmp
xchg
imul
pop
and
lea
lret
sub
loope
cmp
inc
mov
cld
xchg
icebp
test
sbb
pop
inc
in
enter
or
cwtl
inc
sbb
dec
scas
push
call
push
fcomps
ret
and
adc
pop
pop
rclb
fbld
push
sbb
in
rolb
jb
sub
test
cmpsl
xchg
sbb
pop
jae
out
dec
fdivrs
push
test
push
push
push
jb
xor
or
and
das
pusha
ja
insb
insl
jecxz
ljmp
mov
push
mov
add
jnp
sahf
mov
sub
cmp
repnz
xor
dec
fistps
insl
adc
cmpsl
loop
push
adc
fidivrl
mov
pop
pop
fidivrl
push
adc
repnz
mov
dec
mov
mov
dec
loope
jmp
ljmp
call
xor
and
sub
icebp
fstp
pop
mov
jne
jae
xor
push
mov
dec
pushf
fsubs
push
push
mov
lock
dec
decl
sahf
add
stc
add
dec
mov
fs
dec
mov
push
dec
cld
hlt
add
adcb
xchg
test
push
insl
pop
add
adc
test
imul
stos
cmp
pop
out
dec
cmp
icebp
or
sbb
lahf
push
cwtl
inc
les
add
das
repnz
mov
sbb
push
in
test
pop
repz
rcrb
ds
add
cmp
xor
mov
or
push
pusha
push
xor
out
push
sub
jne
rclb
aam
in
jle
inc
shll
pushl
xchg
cmc
adc
adc
sub
insb
nop
xor
cmpb
out
popa
aas
inc
pusha
and
and
xor
or
das
or
sbb
cmp
aas
lds
adc
popl
jp
into
or
sub
pusha
lock
outsl
add
mov
jo
ss
fildll
das
xchg
pop
repnz
popf
pop
ret
and
std
dec
insl
adc
or
xor
sbb
xor
adc
mov
popa
adc
aas
pop
pop
daa
loope
cli
mov
sbbl
repz
inc
fsubs
cld
mov
sti
shrb
adc
mov
jne
pushf
jo
aad
stc
stos
adc
jnp
pop
cld
loope
cmp
and
sub
adc
fsts
pop
aam
sub
add
or
outsl
test
cmpsb
lods
xchg
jb
inc
adc
add
xchg
adc
jge
in
js
dec
hlt
mov
aas
sbb
jo
and
pop
push
inc
xlat
cmp
mov
dec
push
outsb
push
inc
push
daa
call
adc
xor
push
or
leave
push
jg
pop
add
std
jno
jns
push
mov
cltd
adc
sbb
into
cmp
call
fidivl
add
repnz
stos
cmpsb
inc
stos
pop
sbb
fwait
in
std
fcomps
pushf
jmp
mov
cs
aad
test
stc
adc
inc
sahf
mov
dec
out
lret
inc
dec
movsl
out
fsubrs
dec
pop
repnz
sbb
lret
xchg
hlt
loope
or
inc
push
ljmp
push
jle
arpl
std
test
cmpl
add
add
fistpl
mov
mov
das
js
addb
pushf
jmp
dec
sbb
movsb
inc
popa
adc
jo
aas
fidivrl
sub
sbb
pop
jle
add
pushf
inc
dec
sub
inc
aad
inc
sahf
out
cmp
imul
pop
dec
mov
mov
and
pop
icebp
and
pop
mov
mov
mov
inc
loop
test
pop
out
cwtl
xchg
xchg
mov
scas
addr16
xchg
jg
inc
pop
dec
lock
rolb
mov
scas
xor
lret
inc
js
mov
fcmovu
es
inc
popf
sbb
test
cmp
inc
add
push
inc
imul
xchg
shlb
int3
or
push
pop
icebp
push
hlt
in
add
mov
or
mov
mov
and
imul
aaa
mov
push
repnz
scas
mov
push
push
mov
adc
xor
aas
mov
pop
mov
sbb
pop
xor
adc
pop
mov
inc
call
add
and
xor
cmp
sub
enter
lock
fistl
clc
fmull
push
jg
xchg
movsb
pop
or
lock
cmp
push
lahf
pop
imul
cmp
je
shlb
fdivs
test
jp
and
stos
add
imul
inc
jno
cmp
cld
call
cmpsl
xor
popa
outsl
mov
mov
xor
test
pop
jmp
and
fcoml
and
jmp
jmp
jmp
loop
add
repnz
cmp
push
mov
and
imul
into
xor
xchg
mov
adc
mov
and
sbb
or
aaa
das
pop
movsb
rcll
roll
je
test
lea
dec
dec
add
dec
out
or
lret
sub
pusha
inc
push
adc
cmp
push
mov
mov
xchg
mov
jne
pop
dec
gs
cli
or
aas
dec
xchg
xchg
js
xchg
push
lock
sbb
repnz
add
jp
imul
std
dec
cmp
mov
adc
xchg
adc
xchg
dec
incb
xor
xchg
xor
dec
dec
jmp
out
pushl
adc
outsl
sbb
cmp
outsl
inc
mov
sub
add
rcrb
xor
add
lret
cmp
das
sbb
xor
inc
pop
inc
fs
pop
fcoml
into
pop
rorb
icebp
leave
inc
mov
add
lock
inc
clc
and
roll
add
js
lock
sbb
pop
pop
lahf
sbb
xchg
movsb
mov
decl
stos
inc
sub
fucomp
and
pop
loop
pusha
cld
mov
dec
push
or
imul
outsb
js
add
je
mov
cmpsl
inc
clc
sarl
xchg
mov
sub
jl
mov
je
les
popa
or
in
leave
cli
sbb
out
add
add
cmp
xacquire
add
sub
jle
hlt
loop
pusha
fisubl
sbb
add
add
add
or
cmp
or
adc
mov
mov
aam
repz
xlat
shlb
ds
pop
mov
iret
out
sbb
hlt
scas
add
hlt
or
lds
ficompl
sti
add
stc
out
jle
add
lods
pusha
jge
inc
mov
inc
dec
add
inc
or
push
pop
dec
push
pop
fdivrs
pop
dec
aas
sbb
pop
cmp
lahf
in
mov
ss
sbb
pop
jb
ficompl
ss
xlat
aad
or
out
sub
int3
and
push
or
adc
gs
inc
js
dec
lods
pop
insb
shll
xchg
mov
dec
mov
xor
repz
push
movsl
mov
cli
pop
jbe
ret
jecxz
fldl
pop
push
mov
sub
xchg
in
mov
pop
stos
sahf
inc
jmp
popf
or
in
cmp
add
test
in
xchg
adc
sbb
push
dec
xchg
sbb
fdivl
mov
xchg
adc
or
adc
jnp
or
fstl
sbb
dec
add
or
jp
add
and
std
aas
cli
mov
into
adc
jl
pop
xchg
cmp
push
add
inc
inc
sbb
iret
mov
dec
or
aaa
fwait
xor
insl
and
add
xor
cmpsl
aad
popf
mov
adc
jno
inc
adc
popa
les
nop
cld
xchg
jl
in
mov
out
add
popa
mov
add
pop
jl
ljmp
clc
pop
nop
out
out
push
adc
dec
mov
jge
popf
clc
jmp
push
in
bound
inc
or
adc
jno
push
cmpsl
dec
jae
mov
ret
das
jg
push
ret
add
rcll
loopne
adc
sub
shl
mov
cmp
xchg
push
mov
cmp
inc
outsl
rcl
icebp
inc
mov
repz
mov
out
aam
mov
jg
repz
icebp
mov
adc
add
addr16
mov
idivl
fcoms
sbb
xchg
xor
repnz
ret
test
mov
cltd
xor
sub
cmp
or
cmp
rclb
es
push
popf
aas
lods
and
daa
stos
leave
stc
sub
xor
adc
xor
sbb
lret
xor
adc
out
shrl
lcall
inc
jbe
fistl
std
cld
daa
xchg
mov
fs
roll
and
aad
addl
or
xchg
cmpsb
xchg
mov
add
aas
mov
jnp
push
pop
add
inc
push
imul
push
pop
pop
ljmp
sahf
add
mov
push
pop
or
mov
sub
shrb
jecxz
mov
inc
jbe
xlat
mov
pusha
add
push
repz
lahf
xchg
jae
fiadds
xor
or
cmpsb
gs
ds
fisttps
test
aam
and
or
clc
jecxz
pop
out
sub
xchg
imul
mov
gs
sarb
mov
mov
or
jecxz
outsb
add
add
lods
push
adc
add
xchg
lds
xchg
inc
push
jnp
or
mov
pmuludq
pushf
jmp
jne
dec
jb
inc
xchg
iret
js
xor
push
inc
mov
fldcw
xor
pop
loopne
sub
and
bnd
and
orl
test
pop
idivb
daa
pop
xor
cld
and
sub
dec
jmp
mov
rclb
or
xchg
or
cmp
xor
pop
insb
xchg
jno
or
aas
loopne
pop
jge
pop
sub
mov
incl
and
xchg
jle
dec
fbstp
out
sbb
bound
ret
stos
or
mov
lods
xchg
push
nop
lcall
xchg
inc
mov
insb
scas
add
push
adc
mov
push
out
inc
hlt
dec
xchg
xor
dec
cmpsb
ja
aam
xor
xchg
xlat
push
dec
mov
stc
ljmp
nop
inc
mov
std
out
repnz
inc
out
dec
pusha
lods
adc
orb
loopne
movsb
dec
push
xor
nop
cmp
xchg
mov
shrb
cmpsb
jno
nop
xor
pop
jnp
xchg
and
sub
cmp
and
adc
cli
incb
dec
xor
add
add
fldt
test
rol
push
loop
adc
and
cmpsb
mov
lds
cmp
or
cmc
mov
or
lcall
rolb
pop
es
dec
lea
test
repz
add
jl
push
mov
jns
push
pop
gs
frstor
push
push
push
imul
clc
sbb
sarl
in
mov
push
add
push
les
lock
pop
outsl
add
add
and
mov
push
test
mov
jecxz
add
nop
dec
sbbb
lcall
add
or
ja
movsb
adcl
jo
ret
pusha
sub
sbb
mov
xorb
iret
cmp
cmp
mov
imul
xor
cmp
pop
mov
push
movsb
incl
mov
adc
lds
xlat
in
jb
cmp
adc
mov
jecxz
dec
push
scas
sbb
outsl
ret
xor
sahf
mov
sub
mov
lcall
lods
mov
insl
pop
lods
jne
xchg
add
adc
icebp
push
lea
pop
mov
lret
xchg
mov
inc
cmp
aas
les
arpl
das
test
roll
aas
push
or
jl
aam
ret
shll
sub
sbb
test
xchg
push
dec
pop
pop
lea
jg
mov
pop
std
jbe
rclb
out
lret
jl
out
mov
ret
mov
fldenv
push
cli
adcb
xchg
mov
push
cmp
add
mov
ds
jae
add
mov
mov
in
jl
icebp
xchg
pop
ljmp
pop
into
rclb
cmpsb
stos
fcoms
inc
rorl
add
cld
loop
jno
fistpll
dec
fmull
leave
add
int
push
adc
lds
or
mov
rorb
lahf
cmpl
shll
bound
jo
mov
mov
aam
add
sbb
cwtl
push
lea
xlat
cld
lret
mov
xor
inc
les
incb
cld
pop
push
xchg
dec
push
inc
pusha
cmp
arpl
aas
sbb
in
popf
xor
and
cmp
lock
add
fisubs
push
jo
mov
mov
je
jmp
in
incl
ret
in
les
ljmp
enter
dec
ret
sub
fisttps
or
push
or
jle
add
pusha
scas
out
push
pop
sbb
or
enter
lods
mov
pop
and
sbb
push
fistps
mov
icebp
or
xor
in
cmc
jae
lock
lahf
movsl
shlb
sbb
aaa
cli
gs
mov
aaa
cmp
ror
xchg
sub
and
cmpsb
inc
xor
mov
inc
pop
push
leave
xchg
loopne
mov
sahf
rorl
imul
mov
fs
insb
stos
push
lret
enter
test
dec
loope
jbe
dec
daa
das
je
loopne
ret
xor
xchg
mov
imul
cmp
dec
repnz
mov
in
cs
rcrb
xchg
in
jo
icebp
sbb
add
loopne
repz
mov
loope
lahf
mov
xchg
or
ds
dec
push
or
mov
mov
sub
aaa
insl
mov
fistps
xor
mov
jge
stos
cmp
push
jmp
ret
addb
adc
roll
enter
mov
ds
aad
mov
dec
push
pop
sub
jb
std
cmp
cmc
sub
cmp
adc
cld
push
in
mov
adcb
push
fildll
and
stos
xchg
lock
sahf
xchg
scas
push
out
add
adc
jns
mov
xor
pop
clc
jecxz
add
outsl
push
dec
cmp
cld
incl
fisubl
out
add
sub
mov
orb
cmp
pushf
iret
pop
push
dec
xchg
inc
push
sbb
push
mov
xchg
int
dec
push
and
cmpsl
adc
adc
inc
loope
sbb
xchg
fisubrl
imul
lods
dec
push
mov
push
std
mov
push
pop
push
cmp
pop
inc
out
sahf
sbb
add
pop
fs
stc
mov
jmp
xor
jmp
fstp
repnz
jo
mov
add
pop
ss
das
xor
repz
sbbb
popf
sbb
repnz
xor
sub
out
inc
popa
rorl
aaa
or
mov
test
sbb
mov
jecxz
mov
call
xor
push
push
imul
movb
pushl
call
int3
push
ja
jg
xchg
cwtl
sub
dec
in
fsubrs
lahf
cmc
fistps
push
sub
xor
push
ljmp
loope
jns
inc
dec
push
sbb
push
dec
cmp
pop
repz
outsb
xchg
or
inc
add
outsb
dec
mov
cmpl
lretw
xchg
push
jmp
test
roll
push
mov
dec
mov
ja
push
stc
aas
les
add
push
scas
mov
inc
inc
imul
pop
mov
add
sar
decl
movb
jnp
and
mov
cmp
pushl
pop
inc
fisubs
push
jbe
push
and
pusha
das
sbb
les
mov
into
fs
adc
pusha
ljmp
jne
jbe
push
mov
cli
pop
imulb
mov
mov
into
popa
lods
enter
fs
mov
clc
fcoml
xchg
pop
scas
fadds
inc
scas
ret
mov
mov
push
push
inc
fs
loopne
or
test
push
sar
jmp
cmpsl
and
jg
notl
in
inc
mov
mov
stos
pop
imul
add
push
or
fwait
and
sbb
out
enter
pusha
inc
push
mov
mov
call
push
xchg
mov
push
dec
adc
lcall
cli
pop
dec
inc
ret
or
xchg
pop
xlat
jae
pusha
jmp
pop
mov
xchg
enter
cld
add
aam
fcomps
test
lds
jp
adc
aam
lock
movsb
dec
in
dec
dec
lock
adc
addb
adc
pop
cli
or
mov
addr16
js
pop
in
lods
adc
sbbl
or
and
inc
pop
fld
rolb
std
movsb
rorb
aas
adc
sbb
mov
add
aas
or
gs
movsl
iret
decl
lret
pop
popa
pop
lret
fbld
call
cmpl
incl
lret
sbb
repz
sub
insl
pop
dec
sub
ds
mov
call
add
lahf
xor
loopne
mov
aam
dec
push
cwtl
cmp
or
add
ljmp
ret
mov
iret
adc
shrb
clc
add
and
mov
xor
add
pop
clc
movl
incl
mov
push
enter
inc
aam
mov
xchg
sbb
aas
mov
jg
pop
dec
jg
ss
or
les
jb
xchg
test
test
std
sahf
nop
mov
stos
call
inc
insb
pop
lea
mov
mov
sbb
or
mov
xor
add
ret
cld
lahf
subl
loopne
mov
adc
test
fnstsw
add
inc
pop
xchg
sbb
jecxz
fistpll
out
in
loope
call
in
pop
mov
xchg
ret
sub
push
fldcw
mov
push
adc
jp
push
and
sarl
push
sbb
cltd
in
ljmp
loopne
ss
mov
or
xchg
fsts
adc
dec
ret
sub
shrl
add
pop
xchg
cmc
aas
test
add
loopne
inc
add
movzwl
imul
inc
pop
in
cmp
add
inc
repnz
dec
ret
adcb
adc
inc
aas
or
push
add
insb
xchg
les
cmp
enter
out
inc
mov
add
and
scas
inc
insb
mov
jle
sub
decl
and
push
test
mov
mov
mov
pop
cmp
mov
ja
and
push
cmp
bound
idivl
inc
das
test
mov
lcall
sarl
pmulhw
push
mov
jp
rcl
sbb
incl
popa
repz
xchg
xchg
xor
shl
dec
jb
inc
push
dec
push
sbb
incb
jg
xlat
dec
dec
repz
jge
xchg
pop
xlat
test
mov
cld
push
xchg
push
daa
and
jle
je
daa
out
in
or
es
sbb
loope
sbb
icebp
jg
push
sub
mov
sub
std
rcll
adc
pop
jo
xchg
ljmp
sar
les
inc
outsl
icebp
push
or
movsl
sbb
jle
inc
dec
jb
movsb
mov
jae
cmp
fists
inc
jecxz
addb
or
inc
and
mov
and
or
pop
hlt
lea
nop
jae
mov
dec
scas
rcl
out
sub
das
or
push
fbstp
and
mov
jp
add
jg
lods
cmp
decl
xchg
imul
sbb
lcall
inc
pop
iret
sarb
jecxz
dec
test
icebp
cs
je
dec
push
push
in
pop
cld
xchg
jmp
pop
inc
sti
stos
pusha
dec
inc
jl
adc
gs
pop
jle
jmp
xchg
sbb
nop
lock
sub
jno
js
ja
arpl
sub
ljmp
insb
xor
inc
les
mov
lahf
mov
cmp
cwtl
jg
movd
add
push
lods
jl
dec
and
jns
ror
incl
cmp
adc
icebp
mov
test
subb
dec
inc
push
xchg
and
xchg
incl
fisttps
cmp
mov
adc
push
fcmovne
pop
cmp
jg
outsl
sbb
sarl
push
out
jge
insl
lcall
rclb
rolb
xchg
stc
jmp
push
daa
loope
jmp
jo
add
add
imul
xor
gs
cs
mov
push
scas
xor
mov
and
inc
push
ret
clc
jnp
test
mov
mov
push
cmp
mov
ss
les
inc
loop
sarl
push
pushf
cmpsb
mov
mov
popa
cltd
cs
je
sbbb
mov
or
mov
or
fnstcw
adc
inc
or
mov
std
xor
in
cli
popf
sarb
scas
jae
jmp
and
hlt
rolb
mov
incl
xchg
hlt
and
sub
iret
sbb
jle
cmp
int3
jg
or
rorb
loopne
arpl
sbb
cli
dec
ljmp
mov
sub
xlat
mov
ljmp
sbb
ret
add
fwait
push
add
shl
movl
mov
es
stc
jnp
mov
mov
pop
ret
push
sub
push
je
inc
cld
xor
aaa
adc
in
out
xlat
xor
scas
cld
lock
or
and
es
add
jg
shll
incl
or
xadd
dec
aam
mov
add
into
pop
das
es
insl
dec
xchg
jns
pop
push
cli
lock
cld
incl
arpl
adc
pop
jae
clc
lahf
mov
out
pushf
push
mov
inc
cld
aaa
cltd
shr
cmpsl
pop
aaa
add
add
mov
popf
test
push
ret
sub
shrl
mov
aaa
mov
movsl
data16
inc
in
push
jg
out
cmpsb
and
int3
inc
and
or
inc
or
jecxz
sub
lds
cmpsb
jge
ret
mov
scas
xchg
fistps
fwait
add
lret
addr16
pop
gs
mov
push
clc
jno
mov
aad
popf
lahf
and
js
cmp
out
jno
aad
sub
cli
fcoml
jg
loopne
add
and
mov
dec
mov
out
dec
fcmovnb
incl
inc
add
inc
pop
pop
adc
add
cmp
nopl
das
or
int
mulb
xchg
adcb
add
inc
pop
daa
test
sub
pop
add
add
inc
outsb
push
sti
ja
dec
lea
repnz
mov
lahf
adc
inc
lcall
fildl
jle
inc
inc
insb
xchg
mov
aas
ja
les
push
mov
jmp
subl
jbe
leave
sarl
jmp
cmp
out
ficoml
xchg
adc
scas
cmpl
inc
or
mov
jmp
and
dec
cli
sub
ljmp
mov
pop
scas
fcompl
out
jle
filds
or
or
leave
cmp
pop
jb
push
jg
fistpll
loope
or
xchg
call
jae
outsb
ss
dec
lret
jp
cmp
mov
cmpsl
and
jns
sub
stos
push
cld
xchg
daa
xchg
js
mov
xchg
and
jle
add
push
lret
out
inc
mov
add
add
ss
data16
dec
mov
adc
inc
inc
sub
ret
aas
lahf
pop
out
cwtl
inc
push
movsl
mov
cltd
cmp
cmc
mov
mov
or
adc
mov
jg
cmc
and
dec
adc
adc
jl
xchg
adc
add
mov
pop
inc
in
xchg
xor
dec
js
dec
sub
mov
stos
addb
inc
scas
push
cmpl
lea
loopne
and
and
popf
int
aad
push
adc
incl
pop
mov
out
mov
xor
sti
inc
jne
scas
adc
jg
roll
je
pop
fwait
mov
popf
in
packuswb
mov
rcl
sar
jmp
ret
mov
enter
cmp
pop
cwtl
rclb
insb
mov
adcb
cmp
hlt
dec
and
mov
add
or
js
inc
pop
mov
inc
push
clc
inc
sub
sub
pusha
push
jmp
jl
inc
js
and
sbb
inc
or
mov
fisttpl
inc
xchg
sub
shll
push
out
xor
fwait
ds
call
dec
jns
popa
xor
add
shl
je
popf
push
mov
lea
jge
ljmp
js
inc
xchg
mov
ljmp
je
xor
and
test
xor
cmpsb
lock
js
out
fidivrl
or
push
orb
lahf
jno
mov
push
and
mov
pop
push
or
sub
or
pushl
arpl
mov
pop
adc
movsb
mov
mov
clc
jbe
xchg
pop
aam
sbb
inc
sub
jg
imul
or
add
dec
ret
sub
mov
pop
sub
xchg
in
cmpsb
dec
pusha
push
sbb
mov
xchg
xchg
scas
clc
pusha
icebp
cli
addl
aad
or
sbb
mov
lds
pop
and
cli
sub
lret
push
xchg
ds
add
mov
out
or
cmpsl
xor
sub
xor
sub
cli
imul
jne
adc
pop
ja
decl
xchg
add
xchg
inc
xor
mov
bound
ret
dec
cmp
cli
dec
js
push
inc
decl
std
out
adc
movsb
pushf
js
xchg
mov
sbb
or
loop
lcall
adc
call
sti
std
shrl
loop
mov
ret
or
mov
add
lods
mov
shrl
mov
jb
les
lret
out
mov
js
add
stos
ror
imul
inc
std
lea
pop
sbb
cmp
cld
and
push
jmp
loope
enter
sbb
sub
cmp
test
enter
add
xchg
outsl
js
xlat
pop
sahf
cmp
loopne
fidivs
or
and
bound
mov
js
jp
adc
inc
dec
paddd
movsb
xlat
xor
push
iret
decl
ljmp
clc
data16
xor
cwtl
adc
xchg
clc
add
mov
faddl
test
mov
stos
mov
sti
mov
shll
push
shrl
ficomps
jae
clc
jb
add
sarl
ss
fnop
cmc
or
xadd
push
cmpsb
outsb
leave
aaa
orl
push
cmc
jg
lock
scas
cwtl
mov
fwait
or
pop
ljmp
adc
test
dec
in
ret
xchg
andb
xor
loop
add
sbb
cltd
mov
repnz
and
imul
dec
push
sub
adc
repnz
orb
sbb
addl
add
pop
jne
pop
push
aaa
mov
sbbb
cmp
out
mov
sbb
fimull
xchg
add
pusha
and
add
push
xchg
iret
out
and
ljmp
inc
in
jns
out
les
mov
pop
jnp
rolb
mov
and
mov
xchg
rolb
cwtl
mov
ss
inc
xchg
enter
xor
and
xor
xchg
push
dec
mov
mov
mov
jg
pop
sarb
add
xchg
add
enter
and
mov
test
xlat
int
or
mov
loopne
xor
xchg
mov
xchg
leave
in
or
mov
add
pushf
xor
pop
add
push
pop
out
dec
xchg
xchg
bound
cmp
xchg
add
sbbl
mov
imull
pop
sbb
dec
push
jno
dec
hlt
jle
cltd
push
mov
inc
or
daa
loopne
cmc
mov
shr
rclb
push
push
and
jns
clc
add
icebp
or
mov
add
add
xchg
xchg
leave
stos
add
adc
test
cli
sbb
and
push
push
lock
add
sub
push
jno
test
or
loopne
insb
je
adc
xchg
push
cwtl
sbb
iret
dec
outsl
or
xor
shlb
icebp
xlat
push
aad
je
fimull
xchg
adc
decl
pop
dec
adc
xchg
or
and
inc
orl
mov
in
dec
mov
jp
clc
push
inc
add
jbe
adc
add
in
add
outsl
sub
sub
js
pop
fwait
lock
hlt
push
and
or
dec
in
mov
pop
mov
xchg
sar
orb
repnz
subl
mov
push
fisubrs
data16
or
adc
jp
stos
inc
orb
loope
push
outsb
or
cmp
in
ljmp
sbb
nop
and
pop
enter
into
cmp
in
lock
loope
pop
enter
jb
push
mov
shll
sub
jnp
push
lods
jle
fidivs
jns
push
push
ficomps
adc
dec
int3
inc
orl
cld
stos
xchg
add
mov
or
sar
dec
in
adc
sbb
mov
mov
add
sub
cli
aad
sti
push
push
push
or
fildl
outsl
clc
shlb
das
nop
mov
dec
popa
pop
out
add
les
lods
sbb
cwtl
in
xchg
or
cmp
and
fdivrs
pop
in
es
orl
push
sbb
push
add
jg
xor
testb
cmp
les
outsl
sub
test
adc
inc
call
gs
mov
je
jns
loope
pusha
mov
cmp
out
sub
bnd
nop
sbb
mov
pop
subl
out
or
cmp
cmp
cmpsl
and
pusha
rolb
cmp
push
aas
adc
sub
xchg
pop
mov
std
ret
jg
mov
popa
adc
frstpm(287
cmp
xchg
mov
enter
adc
xchg
dec
jno
mov
mov
xor
mov
xchg
das
int3
inc
inc
cmp
lds
dec
flds
gs
xor
mov
lea
hlt
data16
sub
inc
cmp
mov
push
and
xchg
jge
loop
sbb
add
add
inc
rorb
shll
mov
jle
sub
int
js
js
imul
mov
lahf
or
sbbl
xchg
push
sub
lds
int
nop
mov
dec
xor
jbe
popa
mov
jnp
js
in
jmp
adc
mov
push
dec
mov
cmp
outsl
dec
jno
jp
rolb
popf
pop
adc
fnstcw
push
test
lret
fsubrl
or
dec
pop
adc
mov
mov
ret
pushf
push
xchg
push
cwtl
lea
fnstenv
adc
out
pop
jno
adc
push
inc
stc
ljmp
dec
mov
lock
aaa
popa
xchg
mov
clc
sbb
lock
lock
jle
lahf
mull
push
outsl
sahf
inc
shlb
add
cmpsb
inc
lahf
mov
stos
inc
cmp
in
enter
pop
mov
aas
sbb
jo
jl
adc
push
es
test
or
mov
mov
loopne
std
pop
lock
lds
jge
stos
push
xor
loope
mov
push
dec
inc
loope
negb
movl
popa
sbb
sub
enter
rcr
cwtl
inc
push
lret
xor
xor
push
shl
adc
loope
pusha
insb
jo
mov
lods
rcl
xor
add
or
ffree
mov
divl
xchg
sbb
pop
xor
pop
lret
or
jge
fwait
push
es
popl
mov
subl
add
cltd
test
les
aad
adc
fsubl
shll
cmp
movsb
rcrb
and
insl
sub
mov
push
mov
push
dec
push
stc
jge
lret
push
shrb
cmp
or
sbb
popa
lods
cmp
xchg
dec
add
mov
add
lahf
mov
jp
scas
pop
sub
xor
dec
rorb
inc
and
or
cmp
outsb
add
sarb
pop
out
mov
or
repz
sbb
and
popa
mov
subb
push
movb
push
jle
lahf
roll
fsubp
push
jle
jnp
pusha
push
xor
jbe
jae
sar
loop
jmp
cmp
fbld
jno
sbb
lds
ja
jne
loop
jl
mov
mov
xchg
iret
fwait
mov
sbb
icebp
addl
sti
add
xchg
lcall
adc
inc
in
mov
cmp
shr
jmp
es
adc
outsb
outsb
sbb
icebp
rorb
shll
ret
mov
outsl
mov
ss
or
adc
mov
lods
sbb
and
pop
pop
cmp
push
movsl
out
ret
dec
adc
xchg
push
sbb
imul
fdivl
jmp
test
or
rorl
add
mov
add
cld
inc
pop
mov
cld
and
mov
shll
in
mov
scas
insl
out
mov
xchg
add
sar
rolb
jp
mov
stos
sbb
leave
and
scas
jecxz
hlt
clc
faddl
daa
mov
xchg
dec
inc
dec
movsb
dec
push
cwtl
icebp
out
push
fldcw
inc
mov
pop
int3
addr16
adc
sub
mov
hlt
testl
out
xchg
push
push
xchg
loope
mov
filds
mov
cmc
pop
cwtl
or
adc
popf
adc
test
lock
dec
aam
sbb
add
adc
mov
adc
or
cs
add
add
mov
cmpsb
add
inc
and
or
ret
aad
fs
inc
mov
subb
incl
leave
inc
push
sub
push
inc
inc
ljmp
push
push
sub
add
inc
stos
in
pop
jne
test
fwait
addb
pop
xchg
imul
test
fdivrs
icebp
bound
dec
enter
xchg
sub
push
movsb
imull
icebp
jb
hlt
scas
or
add
loop
sar
imul
push
out
cmp
enter
out
shll
icebp
lea
stc
inc
lea
xchg
push
andb
scas
cmc
sarl
out
cmp
dec
add
push
adc
mov
inc
clc
jo
rcrl
xchg
clc
stos
repz
fs
mov
pop
jns
scas
daa
lods
sub
mov
xor
jno
rolb
imul
inc
rcll
inc
pop
roll
jecxz
push
cmp
vxorps
xchg
mov
out
jl
or
mov
inc
mov
push
inc
mov
outsl
les
mov
sub
or
add
push
inc
mov
cs
es
iret
xor
loope
push
mov
mov
decb
nop
mov
outsl
ret
add
fs
in
mov
int3
inc
nop
inc
rolb
mov
daa
popa
jp
mov
dec
icebp
ss
cmp
lds
pop
mov
loopne
es
pop
in
icebp
dec
fistpl
dec
dec
inc
aaa
xchg
lods
inc
mov
adc
mov
popf
outsl
xor
adc
sarl
push
test
popf
into
pop
mov
sbb
xor
jae
pop
jo
push
gs
push
bound
dec
mov
jo
pop
fwait
push
pushl
sbb
ss
add
fisttpll
fcmovbe
inc
cmp
das
inc
stos
leave
out
add
inc
and
sbb
add
xchg
dec
sub
ret
cs
mov
leave
pop
aam
lods
xor
mov
popl
pop
repnz
and
mov
mov
dec
out
aas
movsb
lock
movsb
mov
dec
ljmp
sbb
sub
jae
xchg
push
push
test
cld
shl
gs
sarl
xchg
jl
int
push
sbb
les
dec
sbb
mov
cs
lds
adc
push
stc
jecxz
inc
xchg
inc
cld
cmpsl
sub
jmp
lds
push
imul
imul
stc
sub
push
and
xor
and
or
dec
cmpsb
hlt
test
sarl
mov
flds
push
add
sub
or
mov
and
mov
lods
addb
and
cmp
xlat
in
add
stc
test
xor
sbb
mov
mov
push
push
loope
xor
loopne
jmp
fs
fimuls
int
xor
and
test
addl
mov
xor
mov
pop
clc
int
jmp
lahf
cs
sbb
js
or
popl
je
add
add
xchg
aaa
jnp
incl
movsb
push
sbb
pop
sbb
inc
popf
ja
sbb
mov
push
ljmp
push
push
add
jne
dec
adc
xor
in
or
les
mov
addl
or
daa
dec
ljmp
mov
lahf
clc
test
and
orb
cmp
fisubrs
mov
hlt
cld
jmp
or
inc
pusha
or
cli
mov
xchg
pop
sbb
dec
lcall
cmp
mov
leave
loopne
pop
or
repz
repz
mov
pop
sub
fwait
shll
mov
adc
sbb
sub
das
dec
rcrb
fldcw
scas
test
inc
mov
push
xlat
xchg
rolb
jb
pop
xchg
enter
scas
sarb
lds
std
push
sbb
mov
pop
xor
lods
push
daa
mov
push
rclb
mov
ja
mov
sbb
shr
dec
ja
in
cmp
push
dec
inc
add
mov
ficompl
sbb
das
rolb
lret
inc
adc
loope
stos
cmp
divl
jne
fldt
ja
mov
add
xorb
outsb
xchg
cld
push
push
dec
fwait
sbb
fcompl
mov
jno
pop
pop
outsb
popf
sub
imul
sbbb
add
jecxz
clc
cli
cmp
pop
mov
stos
push
push
dec
and
xor
sbb
sbbb
xchg
cmpsl
ja
xrelease
test
mov
es
cmp
push
fbld
ret
mov
lock
adc
sub
adc
mov
xchg
or
xchg
andb
cmp
mov
mov
enter
mov
jno
sbb
mov
movsb
jb
insb
mov
les
mov
aaa
pop
jns
mov
loope
dec
cmp
lea
jl
push
imul
sub
mov
xchg
cmpsl
sbbl
insl
int3
adc
test
in
push
pop
fdivr
loope
out
ljmp
mov
adc
out
outsb
jo
inc
mov
movsb
mov
loope
insb
xchg
inc
add
insb
push
out
or
cmp
testb
and
repz
insb
push
sbb
sahf
dec
mov
scas
push
sbb
je
push
mov
icebp
mov
sbb
jae
and
add
int
popa
xchg
dec
std
mov
dec
xchg
cmp
jno
nop
loope
xchg
test
or
addl
cmp
add
lret
mov
sti
sbb
add
push
mov
xchg
lock
cld
pop
and
sub
hlt
dec
inc
add
repz
adc
into
add
dec
pop
test
out
fistps
xor
enter
mov
aas
dec
mov
xor
cmp
jno
js
add
inc
repz
push
add
mov
adc
sarb
adc
jo
jne
mov
jmp
ljmp
int
add
ljmp
cmpsb
sbb
repz
mov
lret
stos
stos
fmul
jmp
mov
or
cwtl
fildl
out
das
icebp
icebp
push
and
and
adc
inc
or
int3
loop
jnp
add
pop
fcomi
das
sbb
and
jae
sub
mov
sbb
insb
or
notb
in
inc
pusha
les
add
xchg
add
sbb
add
pusha
sbb
xchg
or
testb
push
pop
push
aad
hlt
xchg
dec
cltd
cmp
pop
hlt
cs
xor
jle
xor
ret
imul
xchg
xchg
push
sbb
fidivl
inc
xor
ret
addr16
decb
call
xchg
mov
stc
push
icebp
lahf
lret
data16
adc
scas
rolb
in
arpl
dec
jno
mov
lahf
mov
mov
shlb
adc
push
pop
shll
inc
fiadds
cmp
mov
addr16
fwait
sub
std
call
inc
mov
icebp
lret
mov
aas
mov
inc
lods
xchg
pop
pop
sbb
bound
lds
pushf
sldt
jo
movsb
pop
mov
ret
jl
mov
lcall
lock
push
hlt
aas
loop
or
int
and
ret
jg
sarl
sub
subl
xchg
xor
mov
mov
insb
ja
test
jne
add
xchg
push
movsl
jecxz
lods
cld
cld
sub
les
mov
pop
inc
sbb
mov
push
inc
pop
lea
add
pop
ljmp
outsl
jge
push
mov
lcall
nop
jp
mov
xor
nop
ret
mov
push
inc
arpl
ljmp
mov
pop
mov
jg
sarb
test
mov
dec
inc
add
inc
data16
cli
add
ds
dec
cs
sub
stos
pop
pop
in
xlat
mov
xor
lods
push
sbb
pop
xor
sbb
idivl
push
jge
imul
pop
clc
jg
cmp
add
mov
add
xor
sub
mov
cmpsl
sub
xchg
jg
pop
inc
dec
xchg
push
dec
inc
lcall
inc
sub
jmp
int
into
jno
inc
testl
mov
hlt
add
mov
adc
xor
rorb
repnz
mov
jle
add
aam
jns
dec
sub
jno
sahf
incl
or
or
hlt
or
cmp
std
lret
push
xor
movl
xchg
push
sbb
aas
mov
test
mov
and
jp
rorl
imul
clc
add
sub
movsb
or
addr16
mov
into
aas
cltd
jle
jmp
lock
xchg
out
adc
adc
xchg
add
xchg
cli
inc
test
decl
sbb
pusha
adc
dec
adc
ja
sar
lcall
dec
nop
xor
aam
add
call
jno
scas
xor
in
mov
adc
std
stc
insb
outsl
dec
rcll
rcr
inc
sbb
in
pop
ds
arpl
xor
daa
lahf
cld
decl
mov
dec
or
add
inc
jmp
outsl
add
or
adcb
or
test
cs
jg
adc
xchg
int3
jbe
stc
xor
pop
push
mov
xor
insb
or
loop
or
xor
shlb
sahf
out
add
cmp
dec
enter
add
arpl
cmpsb
xchg
xchg
mov
je
mov
fsubs
jl
mov
insl
jne
or
addl
and
pop
and
inc
add
cmp
cs
mov
xchg
xor
stos
stc
test
int3
ja
pmaddwd
jl
insb
add
add
push
call
les
xchg
xchg
cmp
jge
sbb
cli
fisubrs
lcall
cmp
xchg
xchg
pushf
loopne
adc
xchg
arpl
out
mov
cmp
pop
xchg
incl
leave
mov
lcall
into
clc
jecxz
out
cli
pop
call
cld
xchg
mov
lcall
pushf
fwait
jbe
aam
push
ljmp
or
stos
and
xor
jg
pushf
inc
xor
xor
inc
mov
mov
cmp
arpl
xchg
add
hlt
xchg
mov
dec
fdiv
mov
dec
add
mov
imul
mov
sbb
adc
jmp
loop
ljmp
add
sti
push
or
adc
and
inc
test
lds
pop
jecxz
push
and
xlat
push
inc
inc
or
es
ss
push
cld
aas
mov
mov
xor
out
xor
pop
je
sbb
scas
push
add
sbb
das
jbe
shrl
or
mov
or
iret
inc
out
pop
xorl
jo
xor
xchg
movsl
fnsave
cmc
adc
sbb
psrlw
inc
sub
sbb
scas
fneni(8087
inc
aas
nop
mov
dec
cltd
mov
outsb
call
cmc
test
and
es
stos
inc
sbb
push
stos
and
or
adc
rcrb
orb
mov
xor
fidivrs
into
sub
lcall
jp
adc
xor
jg
lret
xorl
shll
xlat
roll
add
sbb
popa
addr16
aam
flds
incl
test
lds
lods
idiv
cs
popa
mov
push
out
stc
mov
cmp
cmc
gs
jmp
xor
iret
mov
mov
cltd
and
dec
js
dec
adc
mov
xchg
cmp
xlat
ds
and
mov
int3
aas
lock
out
lea
inc
arpl
pusha
xor
dec
out
imul
shl
inc
jecxz
and
xor
mov
jl
outsl
lret
mov
mov
add
xchg
xchg
cld
inc
or
sub
or
pop
sbb
pop
push
decl
xchg
int
inc
stos
imull
push
lea
mov
jne
cmpsb
cmp
nop
jg
pop
dec
add
cmp
pop
jmp
shll
jmp
data16
inc
dec
addl
dec
std
push
shl
mov
arpl
sbb
jecxz
xchg
xchg
shrl
fwait
out
sbb
repnz
adc
sbb
adc
and
jg
inc
fidivl
psubusw
mov
sahf
cmp
ja
mov
ljmp
lock
cmp
pop
hlt
aaa
cmp
add
incl
mov
cmp
js
pop
pusha
shl
dec
pusha
ljmp
call
fwait
and
insb
fwait
mov
sti
int
adc
add
shrb
jg
ds
cld
cld
pop
mov
imul
sbb
fbstp
inc
ret
mov
adc
in
ret
scas
mov
outsb
cmpsb
fsubl
xchg
jb
push
repnz
mov
les
js
mov
sbb
adc
mov
repz
mov
adc
es
adc
push
es
call
mov
lahf
aaa
mov
icebp
pop
xor
aam
and
lahf
jae
sbb
xchg
xchg
les
cmp
xchg
adcb
rclb
mov
jp
in
outsb
dec
arpl
jmp
je
xor
leave
sahf
inc
int
fs
movsl
jle
pop
sti
pop
or
push
xor
outsl
mov
call
inc
gs
add
push
jo
pop
xchg
out
aaa
xchg
sbb
inc
call
add
scas
jg
xor
mov
imul
aaa
jecxz
push
cmp
loope
adc
mov
cmc
jbe
mov
lret
fwait
adc
cld
and
clc
outsl
push
or
push
unpcklps
sub
stos
rolb
clc
mov
add
xor
cld
jmp
ret
lods
xchg
jo
enter
scas
repnz
scas
inc
call
icebp
or
mov
pusha
sub
xchg
movsl
or
or
shl
sbb
xor
pop
mov
mov
into
fmul
push
inc
aam
insb
clc
xchg
aad
jecxz
lea
pop
push
dec
std
das
add
in
icebp
outsl
dec
cli
sahf
stos
sbbl
sub
mov
or
rolb
cmp
int3
pop
stos
mov
jge
dec
imul
push
mov
xchg
cmp
adc
insb
mov
push
sub
sbbl
mov
inc
cs
xchg
out
xchg
popf
mov
add
movsb
hlt
mov
out
nop
pop
jne
popa
in
orl
std
outsl
popf
dec
lds
mov
pop
loop
sbb
pop
add
or
std
jl
adc
stos
idivb
fbstp
push
sub
mov
mov
xor
push
jle
hlt
loope
mov
jle
aaa
call
xchg
xchg
cmpl
subl
add
pop
lock
out
pop
test
rorb
loop
dec
mov
dec
mov
push
js
dec
in
push
push
xor
iret
scas
lahf
sub
popf
xor
lea
aam
in
jecxz
mov
aaa
test
push
cmp
sub
pop
lahf
push
pusha
and
les
fwait
ss
mov
lds
or
aad
or
addr16
push
mov
dec
nop
mov
sub
lcall
jecxz
call
shrl
cmp
test
mov
std
roll
mov
or
repnz
jge
and
add
int3
lods
ljmp
add
lods
xchg
loopne
or
sub
mov
ljmp
lods
lods
pusha
dec
adc
inc
or
in
push
sub
sub
cwtl
push
cmpsl
add
fisubs
lahf
and
jno
cli
mov
or
xchg
lret
jle
outsl
inc
pushl
inc
clc
sahf
mov
and
notb
push
daa
push
leave
ljmp
cli
shll
adc
out
or
jns
pop
les
clc
cs
dec
pop
lock
pop
adc
lret
andb
mov
popf
or
jmp
jae
mov
outsb
std
data16
adc
xor
ss
xor
mov
lret
push
adc
mov
sbb
lea
dec
cli
or
push
jb
sbb
popf
jecxz
push
imul
mov
mov
scas
popf
add
add
pop
sbb
iret
lcall
js
sbb
jae
fcoml
inc
insl
rclb
push
adc
fisttpl
mov
in
ljmp
mov
xor
xor
mov
rcrl
add
dec
push
ljmp
mov
jg
adc
lahf
fists
xchg
mov
pushl
shll
mov
pop
add
loope
aad
insl
mov
mov
mov
mov
outsb
stos
hlt
pushl
iret
pop
inc
cvtps2pd
addl
lahf
call
cli
push
mov
lret
pusha
sub
inc
sub
sbb
stos
and
inc
loopne
sub
std
ljmp
and
popf
cld
fbld
inc
add
int3
pop
in
and
call
es
pop
or
loop
cmp
std
sub
js
cmp
aam
mov
pop
xor
mov
call
lcall
sbb
cmp
mov
and
xor
faddl
mov
add
incb
sbb
out
push
lock
xchg
add
add
mov
mov
jno
mov
push
les
or
pop
fsubrl
int3
xor
mov
fmuls
jno
pop
stos
jbe
jae
lcall
dec
mov
int3
fucomp
addr16
mov
xchg
lds
stos
sar
and
cmpb
loopne
and
rcrl
mov
and
adc
subb
mov
out
mov
jg
int3
stc
push
or
mov
scas
lock
xlat
std
out
mov
mov
sahf
add
call
adc
js
fwait
jne
or
adcb
fsub
fcomp
pop
sbb
lock
cmp
jmp
rcr
mov
adc
in
xor
mov
xor
pop
cmp
jbe
shrl
mov
push
into
repz
cld
pushf
cmp
mov
mov
sbb
clc
jecxz
mov
mov
pop
sbb
loopne
mov
idivb
or
sbb
push
addb
movsb
out
mov
push
push
repnz
repz
jmp
int
aaa
nop
cli
xor
ljmp
adc
scas
jl
test
loope
xlat
mov
push
rol
cs
jp
test
jmp
or
push
cmc
pop
add
es
das
loopne
xchg
pushf
aas
clc
add
push
lahf
pusha
push
nop
jae
into
jp
call
decb
dec
cmp
ret
aaa
pushf
and
jmp
mov
ja
adc
sbb
dec
mov
ret
xor
out
mov
jae
shl
sbb
lahf
daa
aad
fsubl
addr16
es
inc
imul
mov
les
push
and
daa
repnz
or
jmp
and
ret
roll
add
ret
push
adcb
pop
inc
inc
add
cs
dec
aam
sbb
xchg
cmp
sbb
fsubs
inc
nop
sbb
imul
jle
incl
mov
dec
mov
add
fsubrs
test
mov
add
mov
push
xchg
jmp
iret
cwtl
mov
aas
adc
repnz
jg
mov
mov
mov
call
pop
loopne
mov
add
lret
push
popf
fstpt
scas
pop
sub
push
mov
xchg
inc
inc
dec
add
or
add
inc
mov
sbb
or
fstpt
sbb
jmp
xor
adc
ficompl
pop
sbb
pop
sub
and
xor
mov
or
lcall
cmp
sahf
cmp
or
les
ds
sub
or
pop
insb
std
add
mov
aas
adc
xchg
mov
das
movsl
in
add
imulb
and
sub
es
push
loopne
scas
test
loop
sub
mov
jo
adc
adc
sbb
add
sub
mov
aad
mov
mov
in
andb
cli
push
mov
mov
loop
xor
jg
pop
cmpsb
sbb
push
daa
pop
adc
sti
push
mov
xchg
cs
mov
je
popl
or
frstor
or
in
decl
push
pop
mov
jmp
mov
movsl
enter
das
pop
push
push
sbb
mov
or
pusha
imul
dec
push
push
cld
push
ret
cmpsb
fnstcw
push
out
hlt
lock
xor
cld
adc
mov
aaa
enter
add
fsubs
sub
nop
sbbb
imul
mov
dec
pop
xchg
xchg
push
ja,pn
add
call
pop
rcl
and
sub
pop
sbb
sbb
add
add
add
sub
xchg
push
bound
adc
sub
dec
push
or
push
cmp
stc
insb
aad
xchg
dec
pop
clc
inc
mov
xchg
mov
scas
pop
jne
dec
stc
das
xorb
pop
ljmp
std
out
outsb
test
sbb
lock
test
push
lret
xor
xor
and
ret
ficoms
dec
popa
push
rorl
xor
jae
adc
scas
xchg
loop
pop
in
push
fisttps
mov
jo
rdpmc
aam
xchg
push
jge
dec
fsubrl
push
daa
dec
add
pop
in
and
loop
pop
ret
pop
insb
arpl
xchg
ficoms
fwait
inc
test
cld
jg
inc
fistps
lock
mov
insb
xor
test
and
popl
lock
cwtl
in
mov
lock
nop
adc
or
pop
or
lret
in
pop
add
add
call
bnd
add
dec
mov
inc
push
push
rcl
std
clc
mov
cmp
sub
lcall
loope
and
sub
fs
pop
faddp
mov
cltd
or
cmp
je
mov
call
lcall
xchg
push
daa
and
inc
dec
fcoms
xchg
out
mov
repnz
jne
test
fsub
scas
shrb
jmp
sub
cmp
loop
and
inc
ret
loope,pn
or
test
repz
dec
cli
mov
jnp
sarl
insl
push
sbb
mov
jb
js
cmp
cltd
and
inc
and
call
inc
loope
inc
mov
inc
dec
add
and
loope
cmpsb
test
add
sub
ss
jne
mov
or
and
pop
inc
and
aam
add
pushf
cmp
jbe
jb
jne
ret
xchg
mov
leave
or
mov
mov
mov
jp
mov
or
and
imul
jl
and
inc
movl
repz
sbb
loop
sahf
je
ljmp
pop
sbb
sub
shrb
xchg
icebp
sub
test
lcall
dec
cmp
lahf
sbb
xchg
testl
cs
sub
pop
inc
mov
ss
adc
and
mov
loope
shlb
movsl
fidivrl
add
mov
inc
imul
js
int3
xor
push
jo
xor
cmp
sahf
or
inc
or
or
sub
shlb
data16
decl
imul
or
jo
jge
inc
and
pop
push
add
or
mov
dec
or
iret
add
insb
xor
shlb
adc
lods
jl
imulb
mov
ja
outsl
repz
mov
test
ss
rolb
lahf
adc
ja
cwtl
add
dec
cmp
or
xor
xor
push
mov
mov
jbe
add
movsb
inc
jecxz
push
pushf
cmp
jecxz
lcall
movsb
mov
inc
dec
mov
fdivrs
xlat
pop
mov
movl
das
std
inc
enter
add
sarb
dec
hlt
jnp
and
cli
mov
flds
pushf
pop
cld
add
and
cmp
add
cmp
aas
inc
leave
mov
cmpsb
repz
xorl
dec
iret
clc
imulb
jno
fistpl
add
cli
insb
inc
sbb
adc
pop
daa
mov
loopne
xchg
out
mov
out
scas
jne
jg
ss
je
enter
lcall
in
mov
clc
stos
inc
pop
push
jb
clc
pusha
aad
leave
push
xchg
add
out
sub
mov
sub
sbb
sahf
cmp
dec
fwait
mov
movb
movsl
mov
xor
or
pop
sti
daa
orb
pop
cmpsl
mov
lods
test
add
fcomps
shll
push
les
scas
int
js
xorb
pop
fs
shrb
pop
or
xor
add
clc
cltd
ja
add
add
sub
aam
daa
stc
stc
xchg
andb
clc
test
loopne
test
loope
inc
fisttpll
movsb
jg
or
adc
push
insl
inc
add
sbb
add
cmpsl
xchg
aam
or
inc
insb
icebp
add
ljmp
xor
cmp
dec
movsb
negb
cmp
pop
popf
arpl
xor
sbb
xor
push
inc
xchg
adc
or
jle
add
fisubl
inc
lahf
mov
cli
pop
loope
inc
das
bound
or
orb
mov
mov
adc
fadd
test
sub
dec
idiv
sub
push
and
loop
cmp
mov
mov
mov
daa
fisubs
jp
or
xor
shr
mov
loopne
adc
out
jo
adc
fs
mov
mov
mov
mov
notb
sbb
aaa
jg
dec
jo
xchg
paddd
mov
push
sub
les
out
hlt
sbb
mov
or
sbb
and
jnp
lahf
faddl
out
lret
add
or
xchg
add
and
in
jecxz
dec
loop
cmp
xor
sbb
mov
lea
sbb
mov
mov
jmp
add
cs
test
out
xor
stos
test
mov
jecxz
loope
imul
pcmpgtd
test
xor
push
mov
fwait
xor
push
push
pop
bnd
cmp
idivl
arpl
xchg
adc
mov
push
sub
mov
lret
mov
bound
push
xor
cmc
and
xor
inc
jg
mov
mov
data16
fiaddl
packssdw
roll
ljmp
xor
add
sbbl
xor
inc
dec
ret
aaa
dec
inc
pop
std
shll
shrb
pop
sub
icebp
and
xchg
aas
icebp
out
push
nop
push
sbb
jmp
add
or
adcb
repz
pusha
xchg
dec
pushf
movups
sbb
adc
xchg
cmpsl
add
cmpsb
push
sbb
adc
out
xor
arpl
arpl
push
icebp
and
xor
orb
sub
mov
in
jl
aaa
rorb
jno
jl
push
push
leave
mov
rol
in
stos
add
daa
sub
into
bound
sbb
jl
cltd
add
sbb
ret
in
bndldx
add
mov
mov
push
cmp
mov
pop
or
xor
pop
inc
pushf
test
shl
movsb
lock
movsl
inc
push
mov
adc
sbb
sahf
imul
pusha
mov
aas
inc
cmp
mov
int3
out
sarb
mov
out
subps
jecxz
lcall
adc
add
test
inc
jns
in
cmp
dec
popf
dec
das
loop
dec
xor
cs
bswap
jmp
mov
mov
mov
movsb
add
ds
in
inc
sub
ljmp
pop
xor
daa
dec
in
rclb
test
xchg
outsb
std
push
out
pop
rorb
fidivl
dec
sub
pop
hlt
filds
xchg
rorb
pop
popf
jmp
and
lcall
add
aad
lea
ret
inc
xor
aas
inc
inc
jmp
cs
outsl
aas
and
xorb
outsb
movsl
and
mov
test
push
dec
inc
je
push
rorl
jns
fidivrs
jo
ds
xorl
lods
push
into
xchg
sbb
add
gs
dec
out
xor
cmp
adc
hlt
xor
andl
cmp
lock
ret
sbb
add
popa
mov
xchg
movb
imulb
hlt
loope
push
or
pop
mov
push
mov
inc
cmp
or
inc
dec
pusha
dec
or
or
outsb
cmp
les
jb
test
lcall
pusha
ss
jne
cmc
dec
inc
mov
scas
push
cld
mov
in
or
sub
or
xor
jp
add
js
enter
roll
ret
or
pop
push
pop
call
repnz
imul
inc
aas
xor
into
rcrb
dec
and
loop
mov
dec
or
jmp
sbb
test
rclb
mov
push
andl
or
cmp
scas
repz
inc
std
pop
clc
andl
cmpsb
lea
mov
js
test
loopne
jg
mov
xchg
jbe
cmp
lods
lret
filds
push
add
inc
sbb
js
bound
inc
fadds
test
out
aam
or
or
loope
cmp
call
xchg
adc
xchg
popl
std
incl
and
jecxz
mov
test
inc
shll
mov
daa
push
bound
or
je
push
les
and
test
jne
jb
pop
mov
sbbl
jle
testb
subl
lock
fwait
subl
xor
sub
or
ret
and
add
shlb
push
out
pop
push
mov
lret
adc
fcom
cs
mov
ret
adc
in
xchg
push
add
cmpsb
push
sbbl
lods
inc
nop
enter
or
pop
mov
movsb
dec
out
into
hlt
mov
jnp
inc
daa
into
add
pop
and
test
call
addl
lock
mov
cmp
loope
xor
lcall
cld
jmp
pop
jne
add
push
add
add
dec
cwtl
popa
dec
inc
test
mov
leave
adc
jmp
aas
mov
mov
add
incl
add
call
aas
jp
dec
shl
sbb
inc
je
sub
sub
pop
in
mov
das
cmc
pop
stc
mov
and
clc
in
sub
in
imul
lea
out
loop
sub
mov
mov
jo
mov
push
leave
xorb
xorb
das
mov
dec
or
cli
sar
mov
sarl
inc
ja
bound
jne
and
les
or
cmp
in
aam
incl
push
in
mov
fcomp
sbb
sti
and
js
repz
jb
loop
add
xor
ljmp
xor
push
cmp
jecxz
movsl
pop
popf
outsl
jo
push
mov
neg
add
xor
jo
ljmp
dec
lcall
add
ret
jae
sbb
jl
and
inc
mov
jg
push
or
xchg
inc
adcl
push
and
mov
mull
adc
mov
add
inc
pusha
cmc
xchg
cmp
sti
push
lcall
cmpsl
enter
dec
mov
dec
and
mov
jmp
xchg
push
cmpsb
sbb
adc
jecxz
test
cmp
and
inc
decl
add
and
not
icebp
lcall
pop
rol
xor
sub
aad
add
rcrl
sbbl
jns
std
fs
push
inc
push
sarl
pushf
xor
fwait
into
fsubrs
in
xchg
add
pop
test
and
xor
xchg
jle
movsb
dec
or
dec
jmp
shl
imul
shl
cs
inc
ds
rorb
jl
loopne
lock
dec
rclb
sub
cmpsb
cmpl
lds
xchg
jecxz
out
lret
dec
lods
rcrl
and
mov
test
cmp
mov
rorl
adc
rorb
incl
icebp
pop
pop
lock
ja
mov
push
adc
jne
jle
and
adc
mov
lods
loop
andl
mov
mov
out
mov
mov
add
dec
mov
add
cld
lods
cmp
xchg
adc
push
and
pop
rol
lahf
jecxz
cmc
fstpt
jmp
sti
mov
cmpsb
enter
add
cwtl
lock
push
cmp
ficompl
js
pop
in
add
xchg
pop
add
inc
lcall
pop
sub
subl
mov
sub
aam
fdivr
aad
cmp
hlt
xor
or
scas
mov
pop
xlat
adc
or
push
pop
mov
pop
jae
add
jbe
sub
sbb
fcoml
push
mov
mov
jg
inc
sbbl
inc
and
or
or
jg
and
adc
ds
aas
cld
jmp
mov
aad
in
pop
jg
cmp
xchg
stc
movsb
mov
mov
aaa
stos
and
push
imul
pop
adc
aaa
jbe
add
lcall
fisubs
jno
add
and
jge
lods
aaa
mov
popa
ficomps
sbb
mov
enter
pop
repz
lock
addb
push
notl
push
pop
jno
mov
enter
mov
cld
out
or
shl
test
push
xorb
cld
jmp
cld
inc
in
push
fsubp
pop
xor
jle
inc
or
adc
push
out
push
fadd
stos
bswap
loope
xchg
jb
loop
incl
ret
dec
jp
cltd
popa
js
jmp
lea
mov
leave
add
pushl
jp
or
or
iret
adc
nop
jbe
fwait
and
ss
inc
pushl
in
add
mov
push
sub
sbb
inc
ficompl
cmp
fs
je
aas
loope
decl
sub
test
and
addr16
fdiv
mov
loope
dec
push
inc
fwait
ljmp
or
push
je
clc
push
xlat
add
xor
inc
ljmp
aas
lock
mov
add
das
add
lods
pop
loopne
iret
addr16
jg
push
and
repnz
dec
into
lea
mov
scas
xor
in
dec
std
adc
sarl
adc
cmp
xchg
adc
mulb
adc
shrb
addr16
sti
or
rcrb
sub
fwait
pop
ds
lcall
xchg
push
fists
push
shll
pushw
repnz
call
cmpsl
mov
xchg
inc
sub
push
xchg
out
lcall
sarl
dec
faddp
cltd
pop
int
mov
add
fldenv
and
mov
mov
repnz
enter
add
icebp
test
pop
aam
pop
iret
inc
dec
xchg
jge
push
fcomps
decl
imul
and
sub
ud0
mov
cs
scas
ret
adc
test
test
repz
inc
adc
outsb
clc
pop
jg
les
sbb
pop
add
out
inc
add
pop
lods
cld
inc
ret
jns
cmp
loope
sub
xorb
sbb
push
call
pop
pop
frstor
push
jo
les
popa
jecxz
pop
add
mov
aam
aaa
insl
adc
adc
and
sub
dec
cmp
loop
gs
and
sahf
pop
mov
stc
xchg
fdivrs
shl
inc
in
sub
clc
jg
fimull
inc
pop
pop
sub
imul
or
cmp
and
sbb
scas
inc
xorl
das
pop
cmp
das
add
dec
or
icebp
xchg
push
push
pop
popa
push
clc
fcmovne
xchg
dec
test
hlt
xchg
xchg
fldenv
in
add
xchg
ja
es
rolb
and
or
in
mov
sbb
ficoml
ja
and
pusha
cmp
addr16
inc
icebp
inc
push
jl
dec
pop
daa
and
mov
jg
xor
mov
sbb
inc
sub
sbb
loop
inc
add
imul
xor
nop
sub
rorl
mov
filds
andb
push
cli
int
shr
pop
sbb
sub
push
insb
and
lods
pop
add
mov
dec
aaa
std
add
or
jecxz
ficomps
stos
aam
jp
mov
or
mov
sbb
cli
in
scas
mov
mov
sti
sti
pop
add
cwtl
out
inc
testl
inc
sbb
sarb
cmp
xchg
pop
and
sub
pop
pop
mov
lret
pusha
stos
xor
jle
jmp
or
pusha
fistps
pop
sbb
fwait
mov
sbb
and
or
adc
add
insl
je
incl
cmp
fsubl
dec
xchg
push
or
sbb
les
cmpsl
cmp
dec
jecxz
ljmp
mov
daa
lret
inc
cmp
push
or
add
pop
lea
push
jno
negl
inc
adc
lods
pop
mov
dec
out
push
rolb
pushf
and
cs
adcb
push
lcall
stos
arpl
cmp
xchg
push
sbb
lcall
push
jg
fdiv
call
add
outsl
sbb
sub
xchg
loop
bound
sbb
call
addl
inc
xchg
add
jo
xchg
cmp
or
dec
rorb
mov
cmpb
and
mov
cli
pushl
orb
lret
pushf
push
inc
cmpb
stc
and
push
aaa
std
negl
sbb
out
inc
cmpl
and
aas
sbb
orl
jne
repz
xchg
jmp
imul
xchg
dec
add
sbb
ficomps
lock
jg
push
aad
sbb
mov
addr16
sti
dec
orb
mov
push
push
popf
dec
int3
movsl
repz
cmovae
or
xor
xor
hlt
xchg
inc
mov
test
pop
jp
or
inc
mov
inc
adc
pop
addr16
andl
mov
or
iret
daa
adc
xor
pop
or
outsb
out
sub
push
mov
add
jmp
aas
pop
lret
mov
pop
push
and
cmpb
xchg
and
iret
mov
or
test
inc
push
or
jl
addl
shl
or
push
jnp
sub
push
in
and
xchg
xchg
daa
mov
std
push
sub
jb
clc
jno
popf
lods
xchg
xor
ss
mov
push
in
decl
jle
jmp
fidivrl
adc
imul
shrl
push
xchg
test
jg
ja
mov
cmp
adc
or
adc
out
mov
adc
jbe
outsb
stos
and
in
fistl
pop
aad
dec
inc
add
mov
push
pop
loopne
cld
mov
rol
inc
mov
in
mov
mov
ficoml
jb
adc
sub
mov
rcrb
jg
mov
adc
shl
sbb
scas
xor
xchg
mov
bound
fnsave
scas
loop
cmp
testb
sbb
addr16
pusha
or
rolb
dec
or
loopne
mov
pusha
ret
mov
inc
das
lret
aad
mov
and
andl
adc
mov
cmp
fcompl
pop
mov
xlat
out
cld
iret
ja
lahf
rolb
jg
cmp
imul
or
sbb
pop
mov
iret
or
dec
cmp
pop
and
inc
bound
xchg
lock
add
mov
cltd
cmp
lock
stos
pop
adc
jle
inc
xchg
add
jge
incl
outsb
lret
psraw
gs
pusha
inc
not
ret
xchg
pushf
inc
aam
mov
lret
jnp
je
jno
testb
xor
push
stos
in
cwtl
stc
inc
adc
mov
shrl
dec
push
adc
sub
mov
jnp
adc
pop
or
iretw
in
je
adc
add
sar
mov
sbb
cmp
mov
lcall
les
and
iret
xor
jne
pushf
je
call
jecxz
call
js
pshufw
sub
adc
std
xor
aaa
mov
mov
cmpsb
jg
or
dec
aas
pop
sbb
mov
mov
fisttps
mov
stos
xchg
pop
mov
roll
andl
cmpsl
cmp
sbb
add
pop
lcall
int3
push
dec
xchg
ja
inc
adc
add
mov
enter
lock
push
cmp
xor
negl
adc
cmp
outsl
cmpsb
mov
xchg
add
das
push
or
hlt
mov
sbb
inc
aas
scas
inc
mov
cli
or
movsl
or
or
dec
jecxz
add
lret
cmp
mov
cmp
mov
fistpll
pop
dec
in
in
ss
mov
sbb
mov
xor
icebp
or
sbb
push
mov
lods
fstp
icebp
push
cmp
int
push
dec
pop
mov
cli
pop
cmp
bound
sub
mov
jge
lret
ljmp
shlb
add
iret
bound
add
scas
pop
add
mov
lock
xlat
dec
ljmp
outsl
aad
sahf
cld
ds
sbb
mov
cltd
sub
push
sbb
add
xchg
add
mov
pop
mov
lock
stos
shlb
gs
cmc
mov
outsb
xlat
push
std
push
sahf
push
add
cwtl
push
ror
imul
or
or
pop
rol
sub
dec
add
xchg
les
ljmp
std
inc
or
adc
int3
lds
std
push
addb
mov
roll
imul
jmp
inc
in
or
adcb
ret
dec
rcrl
pop
test
into
popa
push
xor
adcb
mov
push
ret
or
into
dec
je
dec
popa
inc
mov
cmp
mov
jle
mov
hlt
decl
sub
das
adc
fs
loopne
pop
imul
mov
sar
dec
inc
or
test
out
icebp
dec
cli
dec
fisttps
dec
daa
and
xchg
xchg
data16
fucomi
sub
mov
and
adc
leave
cmp
add
adc
xchg
fadd
aaa
dec
sbb
test
imul
mov
cmp
dec
call
add
xor
push
add
jno
inc
icebp
insl
xchg
cltd
jl
es
and
movsl
es
int3
jo
pushf
ljmp
and
or
jg
pop
mov
repnz
and
inc
aam
andl
insb
cld
push
test
insb
or
and
pop
lret
xor
stos
les
in
stos
jnp
push
repnz
xor
mov
loope
inc
xchg
push
mov
pop
or
filds
pop
into
das
in
imul
daa
ds
cmp
js
clc
push
adc
dec
mov
mov
or
add
jg
add
cli
mov
lds
xchg
cmp
rol
sub
mov
fmull
dec
mov
fnstcw
sar
gs
xor
cmp
lahf
jo
in
shrb
orb
pop
and
or
add
enter
iret
adc
jne
jns
repnz
inc
mov
xor
test
jg
adc
je
mov
pop
dec
pop
jmp
ss
clc
mov
pop
jl
mov
jns
fs
mov
cmp
lock
xchg
mov
pop
mov
outsb
mov
and
push
pop
inc
hlt
and
sbb
sub
fistpl
loop
jge
daa
in
ret
aas
xchg
pop
cld
jge
cmpsb
stos
dec
xor
pop
push
mov
add
cmpsl
sub
cmpsb
int3
sbb
sub
pop
das
in
pop
cs
ret
repz
ja
inc
bnd
add
push
mov
scas
cmp
inc
dec
std
xor
orb
insb
loopne
cmp
push
js
or
mov
das
lods
lods
xchg
or
sahf
rclb
out
shl
dec
add
aad
stc
js
adc
jmp
and
push
jp
xchg
push
aaa
jle
add
cmpsb
push
push
gs
test
fmull
ret
in
fscale
pop
das
movsl
inc
mov
sub
aam
and
subl
ds
add
or
inc
inc
inc
icebp
cmp
cmp
adc
mov
out
cmp
mov
adcb
xchg
push
stos
sbbl
rclb
xor
push
incl
adc
xchg
mov
fucom
dec
inc
xchg
cmp
in
test
and
icebp
cmpl
enter
jg
dec
fdivs
lcall
test
insl
inc
cld
bound
inc
mov
add
adc
sahf
push
jl
dec
in
inc
mov
xchg
pop
filds
mov
int
sbb
mov
add
or
push
jl
push
push
cmp
pop
or
and
mov
out
enter
add
notl
lcall
gs
push
fidivrs
add
inc
fldenv
pushl
shrb
inc
fisubl
pop
mov
mov
stos
rolb
movsb
mov
std
sub
dec
aam
inc
adc
es
push
pop
push
and
inc
push
push
pop
sub
mov
mov
inc
mov
mov
std
jae
dec
loopne
xor
shl
je
fldenv
cmp
negb
jge
mov
push
sub
outsl
xor
sbb
cmc
cmp
mov
cld
mov
sbb
ds
leave
jne
inc
xchg
dec
bnd
xchg
out
int
sbb
mov
push
dec
jmp
inc
pop
outsl
andb
sbb
sub
insl
jle
xchg
mov
pop
mov
sub
out
hlt
aam
andl
xchg
pusha
std
addl
push
mov
fcmovnu
sub
inc
movb
xor
ss
aad
pusha
sub
mov
xchg
pop
fcoms
xchg
xchg
push
stos
push
fldcw
in
sub
push
push
cs
cld
adc
aas
push
mov
loope
aad
jbe
in
adc
mov
sbb
fsubrs
push
mov
lea
add
lock
loopne
mov
jo
shrl
push
pop
adc
add
dec
aas
pop
dec
or
daa
mov
mov
or
cmc
data16
pop
fwait
lock
bound
cmp
dec
inc
inc
or
jecxz
xor
push
push
push
pop
loope
and
rcll
aas
cli
jne
cltd
jbe
inc
mov
cld
push
out
loop
rorb
cmp
loope
sbb
mov
jle
cmpsl
mov
mov
frstor
push
pop
cmp
addr16
adc
outsl
sbb
call
mov
add
xchg
das
pop
lret
sub
and
sar
adc
sbb
stos
cmp
and
idivl
mov
es
push
pusha
inc
test
loop
or
int3
ret
int3
push
je
jno
ret
lret
mov
shl
jecxz
es
fmull
fcomps
or
jnp
cli
cmp
fdivrl
cmp
push
add
pop
insl
pop
cwtl
pop
xorb
daa
adc
frstor
popa
push
and
shrl
movsb
repz
int3
lds
es
add
lcall
add
push
shlb
push
sub
pop
or
add
ret
add
cmp
push
dec
ja
stos
push
add
iret
jp
adc
popa
lea
je
xorl
mov
mov
add
lock
add
dec
mov
jge
push
mov
xchg
sub
dec
std
stos
and
jb
iret
cmpsl
and
std
mov
pop
push
and
cltd
adc
pushw
inc
xchg
jbe
jne
xor
inc
add
inc
mov
jle
sbb
scas
std
mov
push
dec
adc
push
in
sub
sbb
inc
add
push
or
push
inc
ds
push
mov
cmp
xchg
cmp
incl
cmp
mov
mov
ret
jae
scas
addr16
inc
add
cld
jno
adc
sti
stc
shrb
xor
cmp
mov
aam
std
sti
mov
push
sub
lods
loope
mov
test
mov
xor
sarb
test
pop
xchg
jnp
mov
cli
pop
dec
mov
adc
lock
scas
cmpsb
roll
addr16
loopne
add
mov
pop
xor
clc
and
add
jle
inc
fs
outsb
add
mov
xchg
xchg
je
lods
push
xor
push
lcall
push
add
sub
loop
mov
xchg
lds
dec
xchg
mov
inc
test
xchg
enter
pop
sti
outsb
xor
adc
outsb
enter
test
push
out
push
or
mov
iret
addr16
push
orb
inc
adc
add
cmp
xor
fucomip
push
sbb
sbb
sbbb
mov
orb
mov
add
gs
cmp
hlt
jne
push
sti
inc
mov
ss
roll
mov
mov
or
dec
mov
mov
sbb
mov
jp
or
push
adc
aad
lahf
mov
push
or
call
addr16
scas
push
call
enter
mov
cmc
sub
cmp
jb
aas
loopne
andl
rcrb
or
call
das
push
lcall
pop
lds
fisttpll
and
push
sub
xorl
fld
fnsave
movb
cmp
fistl
sbb
pop
clc
and
pop
rclb
or
mov
mov
test
jns
and
push
xor
out
cwtl
mov
in
jns
aam
mov
pop
mov
or
es
mov
sti
loopne
movsl
adc
aam
sub
lock
mov
push
add
inc
arpl
sbbb
cmpsb
xchg
dec
xchg
ret
test
xchg
pop
sahf
stos
inc
xchg
xor
dec
xor
pusha
or
jbe
rolb
or
push
int3
nop
imul
pop
cmp
add
lcall
mov
or
sti
push
out
lods
push
inc
cmp
mov
sub
in
dec
test
xchg
cld
push
cmpsl
les
and
push
xchg
cmpl
fdivs
dec
push
inc
dec
adc
rclb
inc
push
popa
sarb
pop
stc
inc
adc
scas
hlt
xor
outsb
icebp
cmp
les
adc
add
mov
outsl
jmp
ret
adc
or
test
mov
mov
mov
shll
adc
div
out
sahf
and
pop
or
push
loope
inc
stos
inc
mov
sbb
pop
push
jl
imul
sub
sbb
repnz
enter
in
cmp
and
mov
or
das
std
cmovg
sub
mov
lods
push
or
pop
cld
xor
stos
jnp
pop
lds
aam
divb
sub
out
and
mov
dec
call
adc
insl
mov
mov
push
and
inc
sahf
dec
ficomps
add
add
lock
jp
add
subl
xchg
es
dec
popa
sbb
sbb
mov
mov
xchg
clc
lea
adc
xor
jle
jmp
dec
sub
pop
incb
fisubl
add
inc
jae
rcr
fwait
cld
pop
fmuls
and
aad
or
outsl
hlt
xchg
xor
cli
or
jbe
sub
sbb
stos
push
cmp
push
outsb
test
aad
push
out
ljmp
xchg
add
addr16
fs
sbb
push
je
lcall
push
out
sbb
fistl
xorb
add
arpl
push
sub
cmp
sbb
inc
or
or
stos
aaa
enter
dec
imul
int3
or
xchg
sbb
dec
mov
jle
or
fs
pop
lods
sub
cld
add
push
fimuls
add
ds
outsl
shrb
and
push
xor
mov
loop
inc
sbb
push
sub
repz
inc
sbb
xor
xchg
lcall
sub
adc
xchg
es
dec
jnp
roll
push
jo
ret
std
add
push
pop
inc
cmpsl
into
add
clc
icebp
xor
push
out
add
xchg
stos
and
ja
xor
cmp
cmpsb
jmp
sub
xchg
mov
out
test
inc
fisubs
pop
pop
xchg
scas
xor
aaa
sbb
push
sbb
lcall
cmp
mov
mov
mov
or
jbe
je
adc
scas
mov
test
loop
rcrl
xor
mov
mov
ds
and
mov
pushf
add
cwtl
xchg
aaa
mov
rclb
cmp
push
or
lret
inc
call
jbe
popl
subl
inc
stos
mov
vpmacsdql
les
cmpsl
dec
push
xor
and
fs
shl
in
movsb
das
lock
sbb
rcrb
testb
nop
loope
inc
clc
add
add
lret
jae
mov
stos
fucompp
insb
and
fs
add
xor
arpl
inc
cld
adc
lds
ds
push
stos
outsb
loop
cmp
daa
mov
leave
shlb
loope
or
cmpsl
loope
ds
cld
filds
pop
aas
mov
aam
lods
das
sbb
rclb
addr16
mov
ss
add
les
xchg
mov
mov
mov
lock
push
repnz
loopne
popf
lock
or
mov
xorb
xor
inc
test
mov
dec
mov
xor
push
jo
jae
movsb
mov
add
fiadds
add
jb
mov
pop
or
ja
mov
inc
sub
mov
ljmp
jp
pop
adc
jecxz
xchg
test
imul
test
lods
adc
or
push
add
xchg
jg
lods
mov
test
mov
dec
pop
test
mov
shlb
sub
insl
mov
adc
cmp
jge
mov
icebp
jmp
ljmp
adc
jecxz
aad
loop
push
dec
sbb
pop
test
out
pop
xchg
xchg
push
rcl
cmp
inc
cli
adc
ret
cwtl
loop
dec
dec
cmp
jle
bextr
js
cmp
add
add
push
ja
sub
adcb
rcll
not
cmc
not
aad
pop
test
rorb
xchg
out
mov
and
int
push
mov
stc
pop
add
pop
mov
sbb
cs
sub
fcoms
pop
incl
shlb
popf
pop
cmpsb
inc
popa
add
dec
mov
cmp
push
mov
add
aaa
push
add
fdiv
adc
and
xor
push
subb
mov
loope
jge
fisubl
cmp
std
adc
push
dec
and
cld
shll
cmp
add
sub
push
negb
push
movsb
fsubr
rcrl
test
sarb
cmp
arpl
push
cmp
jmp
mov
aam
lret
and
sbb
or
aas
cmp
stos
xchg
xor
movsl
adc
xchg
and
inc
sarb
imull
add
or
mov
or
fwait
ljmp
xlat
test
lea
sbb
lods
sub
jecxz
add
pop
inc
mov
push
jae
dec
mov
sti
mov
arpl
xor
je
ss
imul
dec
iret
sbb
xchg
dec
cmp
or
adc
sbb
add
test
outsl
insl
testl
call
mov
je
jle
fcomps
repz
jb
movsl
adc
dec
addb
dec
jb
jae
xchg
jno
add
js
clc
mov
jg
inc
dec
mov
movsb
cmpsl
ljmp
sub
fs
outsl
cwtl
cmpsb
fstpt
mov
nop
cld
or
pop
dec
loopne
bound
adc
aaa
pop
adc
and
mov
pop
clc
test
xchg
les
bound
shlb
push
jmp
ss
das
jle
fadds
or
and
pop
inc
or
sbb
add
xor
aas
dec
lds
and
sbb
add
push
adc
dec
add
xchg
loopne
idivb
jg
stos
cmp
push
out
push
add
add
inc
rorl
orb
ss
mov
into
mov
mov
xchg
add
mov
push
stos
add
jg
sahf
pop
iret
movsb
movsl
icebp
jmp
xchg
cli
test
or
pop
mov
shrb
ljmp
in
scas
lea
sub
dec
stos
pop
and
mov
cmp
shrl
push
int3
adc
incb
fidivrl
push
or
sahf
jl
stos
dec
inc
adc
clc
or
mov
xchg
sbb
xor
inc
xor
push
cmp
mov
repnz
and
imul
xor
inc
pop
add
add
cmp
rcl
cld
ror
sbb
and
ljmp
pop
adc
xchg
sbb
adc
inc
pop
pop
inc
or
test
jg
add
add
xor
sarb
sahf
mov
fbld
mov
pop
in
shlb
push
dec
hlt
and
push
adc
xor
xchg
add
ljmp
aam
xchg
sub
jb
and
xor
push
add
mov
add
ret
cld
pop
cmp
add
fucompp
clc
stc
pop
movsb
dec
push
xchg
pop
or
cli
orl
pusha
jl
mov
jo
ret
sbb
ret
addb
ss
jmp
sbb
add
rorl
inc
sbb
aas
dec
or
add
aaa
sub
sub
lock
and
add
insl
fisubrs
jbe
inc
jbe
push
jae
dec
or
test
loopne
ror
inc
stc
shl
inc
mov
cs
add
cmp
or
jge
in
or
rol
or
fs
inc
inc
test
rolb
ja
outsl
arpl
fwait
dec
aam
pop
ja
dec
sbb
jmp
imul
popa
dec
notb
add
cmp
sbb
inc
or
out
std
aad
std
lcall
add
cmp
pop
push
bound
jg
mov
pusha
dec
test
mov
jae
scas
xor
add
pop
lret
inc
cmpsl
adc
loopne
add
imul
sbb
or
xchg
hlt
or
ret
inc
rorb
sub
fiaddl
sbb
pop
scas
scas
pop
mov
adc
popf
test
jl
jno
les
fnstenv
test
outsl
fwait
ss
icebp
arpl
data16
decl
mov
push
icebp
cs
xchg
jecxz
or
jmp
and
and
faddp
cmp
out
pusha
test
xchg
cs
mov
xchg
lea
sub
sti
mov
or
dec
sbb
or
mov
mov
jnp
and
decl
sub
movsb
jbe
push
push
lea
sarl
clc
sub
pop
push
fs
adc
std
idivb
cmc
mov
xor
clc
mov
or
pop
cmc
inc
jecxz
xor
jnp
push
in
push
scas
dec
test
mov
ja
ret
push
xor
pop
jns
dec
sahf
and
mov
enter
fldenv
add
mov
ret
cmp
push
nop
popf
push
pop
sti
inc
push
ljmp
jbe
aad
insb
subl
push
xor
adc
pop
sarl
jecxz
in
cli
push
push
stos
xor
outsl
add
mov
pop
dec
pop
push
xor
lret
sbb
ljmp
mov
lret
es
xchg
and
mov
stos
sub
add
fidivs
mov
jecxz
cmp
out
jge
jle
adc
jae
push
cmpsl
xchg
repz
mov
insb
call
and
les
jge
retw
out
mov
out
push
mov
lods
inc
icebp
es
lret
pop
ds
add
xor
rcll
mov
mov
dec
stc
push
push
outsl
lock
test
movsb
mov
clc
xor
movsl
add
xchg
es
dec
out
adc
fxch
leave
ret
xor
rorb
dec
pop
mov
dec
cwtl
sbb
dec
repz
xchg
sub
add
ljmp
outsl
xor
aas
mov
or
addl
in
loopne
ret
aad
les
mov
adc
mov
loop
xor
mov
inc
and
jge
pop
sbb
push
dec
aas
push
mov
das
mov
and
fldl
enter
xor
pop
ds
mov
pusha
cmp
cmp
and
or
mov
pop
pop
and
add
xchg
aaa
outsl
push
je
js
jge
jne
cmp
jo
roll
mov
jg
in
roll
aas
sub
lock
xchg
add
clc
jno
sbb
jg
rorb
or
add
mov
and
in
and
shl
cli
sub
dec
xchg
pop
push
cmpsl
lock
cli
stos
cwtl
iret
jge
adc
and
popa
mov
in
push
dec
in
pusha
mov
repnz
dec
mov
and
pop
xor
stos
add
mov
jecxz
insb
and
adcb
ja
mov
fldl
pop
popf
roll
and
outsl
adc
add
addl
xchg
test
fistpl
notb
stos
xorb
test
jle
sbbb
pop
adc
outsb
fsubrs
jno
aas
roll
jge
clc
push
push
mov
dec
push
test
out
aaa
push
rcrb
sub
xchg
mov
imul
aaa
dec
out
push
jg
ret
dec
sbb
inc
add
mov
pushf
inc
dec
repnz
jbe
mov
mov
add
xchg
fistps
testl
arpl
ds
mov
mov
jne
sbb
inc
out
leave
js
repz
pop
rcll
push
rcll
sbb
faddl
repnz
inc
inc
nop
ficomps
stc
push
loope
push
ljmp
das
rclb
push
xchg
lods
rclb
rolb
cmp
mov
and
mov
inc
xchg
sub
add
ret
fstpt
subl
testb
adc
inc
leave
sbb
loope
xlat
adc
aam
mov
pop
add
repnz
in
and
adc
mov
ds
shrl
into
jno
loop
or
jg
cmp
xchg
out
mov
add
mov
push
adc
add
adc
pop
xchg
jge
sbb
enter
pusha
sbb
and
dec
cld
bound
repz
ss
jae
dec
xchg
ds
add
adc
adc
stc
push
pop
pusha
adc
jnp
push
sbb
adc
leave
imul
cmc
fwait
push
lock
mov
inc
mov
sub
aas
push
push
addb
cmp
xchg
xchg
es
xor
lret
jbe
jo
sub
dec
out
pop
sbb
pop
loope
out
aad
xchg
mov
loopne
jns
or
inc
out
ss
jle
das
icebp
cmpsl
pusha
pop
cs
xlat
repnz
test
adc
das
add
fstpl
push
mov
inc
repz
pop
dec
pop
icebp
insl
push
pushf
cmc
test
inc
inc
dec
icebp
pop
mov
lds
mov
pop
adc
xorl
jle
mov
dec
sbb
jns
xorb
lea
mov
insl
add
aas
icebp
dec
xchg
cld
les
inc
xor
pop
icebp
outsb
xchg
push
and
insb
fcoml
sarb
sahf
sub
mov
imul
push
orb
add
jg
push
mov
movsb
ds
cmpl
test
push
adc
scas
inc
fwait
cmpsb
pushf
push
rcrb
ljmp
dec
xor
sbb
je
inc
pop
mov
jp
into
test
stc
xchg
lock
in
sub
scas
jo
popa
jg
push
dec
inc
push
jne
inc
sub
dec
jl
mov
rclb
mulb
inc
aam
sub
lea
sahf
xor
xchg
sbb
xchg
jmp
scas
cld
std
popf
add
xchg
call
out
inc
fsubrl
dec
dec
xchg
inc
fsub
or
xchg
ret
pop
push
xor
mov
pusha
sar
and
cmpsl
add
inc
outsl
add
xlat
sahf
cld
cld
lods
mov
scas
lahf
and
cmpsl
dec
add
repz
add
mov
repnz
ss
mov
xadd
xlat
cld
mov
mov
pop
jno
mov
jl
xchg
das
add
andb
in
stc
sbb
pop
xor
ficomps
mov
stc
xchg
cmp
sub
adc
ret
inc
das
jge
xchg
cmpsb
jecxz
adc
mov
loopne
adc
cld
pop
inc
dec
push
jns
mov
or
pop
dec
js
lea
cli
cmp
push
dec
fdivrp
out
pushf
xchg
jo
cmp
mov
jp
push
adc
fimull
pop
jle
sti
dec
add
lods
imul
pop
cli
cwtl
cld
jge
stc
enter
stos
inc
jne
leave
inc
scas
shlw
jl
add
mov
outsl
push
dec
shlb
in
push
scas
nop
movsl
push
push
loopne
jl
inc
dec
sti
mov
push
subb
pop
xor
sbb
lret
sbb
sbbb
xchg
out
dec
aas
subb
repnz
dec
outsl
pop
scas
clc
cld
or
mov
or
add
and
inc
pop
xchg
and
dec
sbbb
ja
sub
or
mov
mov
push
push
loopne,pt
imulb
fmull
jmp
adc
xor
cmp
jmp
dec
mov
mov
and
adc
mov
and
lods
popa
inc
mov
lds
cmpsl
mov
xchg
add
pushf
stc
or
cmp
push
mov
add
xchg
mov
notb
cmp
push
jle
lds
divl
fcomps
fldcw
xor
push
jge
xor
decb
loop
sub
mov
add
jge
sbb
xchg
adc
or
push
jecxz
and
rolb
and
mov
xor
clc
inc
das
jns
mov
adc
hlt
mov
add
push
cmp
mov
lods
icebp
adc
or
dec
imul
add
lock
mov
inc
inc
fstps
jnp
insl
cmp
cmp
aaa
loop
jle
xor
and
xor
aad
mov
and
icebp
mov
mov
shrb
cmpl
xchg
xchg
inc
and
mov
in
cwtl
loopne
mov
cld
loope
jb
xrelease
mov
es
int
repnz
and
push
pushl
push
adc
push
add
push
stc
repz
jbe
mov
loopne
dec
and
push
mov
add
scas
pop
mov
or
lock
test
add
rclb
sub
push
xchg
cs
int3
ljmp
push
push
push
xor
cmp
lods
aam
pop
push
sbb
mov
iret
mov
cli
xchg
lock
mov
stos
cmc
dec
test
or
or
push
leave
arpl
adc
nop
inc
jge
stos
mov
sub
add
adc
gs
adc
add
push
out
ret
idivl
insl
push
imul
inc
push
subl
fisubs
cmc
inc
test
adc
add
imul
loop
jle
add
sbb
inc
rorb
test
dec
out
xchg
in
jle
notb
aaa
mov
stc
mov
add
test
sbb
or
cmp
and
push
jmp
mov
in
inc
rcrl
push
push
pop
mov
into
lock
repnz
aas
nop
stc
and
jno
hlt
or
jle
scas
jp
scas
inc
xor
aas
cld
and
icebp
mov
test
jmp
dec
bnd
pushf
push
lods
xor
jne
pop
pop
mov
mov
subl
or
and
xchg
aad
push
shrl
xchg
dec
mov
hlt
movsb
leave
stos
imul
or
sub
test
out
cmpsb
into
decb
sbb
mov
std
sbb
pop
xor
xorb
or
fiadds
out
lds
sub
pop
push
mov
pop
xchg
jne
mov
aad
jne
inc
movb
push
xchg
enter
xlat
fmull
or
xchg
dec
dec
cmp
fwait
mov
stos
mov
jecxz
fdivs
jmp
adc
imul
mov
test
push
and
out
adc
movsb
jo
dec
je
movsl
sub
sbb
addr16
inc
inc
mov
lret
nop
dec
xchg
or
add
push
jmp
gs
push
mov
push
xchg
and
scas
fnstsw
incl
jno
cmpsl
scas
cld
jg
mov
movsl
fistl
in
add
sub
inc
dec
inc
add
add
ret
mov
add
imul
xlat
mov
push
std
fbld
jl
add
mov
add
sub
ret
push
add
dec
fdivrl
in
cmp
xor
mov
inc
inc
dec
and
add
mov
ja
fiadds
mov
mov
repnz
pop
jb
dec
add
mov
push
cmp
pop
aaa
dec
shrb
push
dec
dec
mov
inc
xor
sarb
dec
ljmp
jne
adc
dec
add
jmp
push
jbe
cld
sub
addl
inc
push
dec
xor
mov
cs
inc
popa
pusha
sbb
dec
xor
xor
data16
dec
inc
std
addb
dec
pusha
xor
dec
jo
fcmove
mov
dec
push
mov
lock
dec
pop
enter
push
loopne
out
mov
int3
cmp
je
icebp
cmpl
test
xorb
in
and
sti
mul
cmpsl
jmp
and
mov
cmp
dec
dec
pop
mov
adc
outsb
dec
inc
orb
jb
mov
pushl
dec
push
stc
rolb
bound
push
aas
xor
into
dec
add
outsb
dec
pop
inc
lea
jmp
lock
push
dec
test
pop
inc
inc
dec
cmp
pop
jno
mov
sub
mov
dec
inc
cs
lods
jae
jno
mov
push
insl
clc
fidivs
inc
add
je
sti
popaw
dec
cmp
mov
fsubp
mov
fs
ds
cmp
pop
adc
pop
js
cld
inc
push
mov
xor
or
cmp
inc
inc
dec
inc
xor
rcr
ret
into
push
xor
xor
jmp
insl
cmp
int
cmp
add
sbb
jb
xor
inc
adc
ss
cwtl
mov
loope
lea
pop
add
or
inc
cmp
lock
sbb
mov
les
cli
add
push
push
mov
sbb
dec
xor
or
jmp
hlt
dec
test
push
dec
stos
mov
daa
mov
or
pop
jmp
lods
cwtl
out
sub
push
mov
insl
inc
push
push
fimuls
fcomip
sub
push
or
mov
adc
dec
loopne
dec
addr16
fs
jl
mov
dec
inc
inc
and
inc
clc
push
push
loopne
adc
jg
pop
fdivs
shlb
lds
sub
jne
je
int3
lret
mov
dec
dec
add
call
mov
rorl
je
sti
xchg
repnz
les
inc
dec
push
inc
adc
mov
js
decb
inc
push
sti
inc
xlat
mov
mov
loop
loop
mov
hlt
push
push
and
jmp
dec
and
clc
cld
push
test
aam
xor
sub
push
mov
mov
lahf
jl
hlt
inc
xor
icebp
clc
jne
insl
dec
jno
push
fidivl
jb
xor
dec
pop
sub
negl
dec
loopne
sub
xor
fcompl
outsb
push
add
inc
xchg
out
lods
inc
mov
inc
mov
inc
ret
gs
rolb
aam
push
out
pop
lcall
cmp
inc
rorl
shl
inc
mov
loop
pop
pop
popf
out
push
dec
push
out
clc
push
ss
fmull
clc
mov
mov
fidivl
push
inc
add
das
int3
cmc
dec
inc
push
mov
ret
inc
jecxz
cmp
xor
out
inc
cli
sub
push
inc
pop
mov
clc
inc
lods
mov
xchg
inc
mov
jmp
dec
mov
jl
mov
loope
je
testb
jne
jns
negb
stc
add
xor
ss
push
push
shrb
xlat
ja
sub
mov
lds
mov
repnz
rcll
push
bound
inc
outsl
ret
inc
push
inc
push
inc
lcall
or
inc
xor
push
roll
pushf
sarl
scas
inc
mov
sti
xor
sub
ss
gs
fimuls
push
jns
mov
push
fnsave
dec
cmp
inc
and
jbe
xor
mov
cmp
sub
push
xor
fsubs
dec
jo
pop
test
inc
insb
dec
inc
sahf
pop
push
aad
out
mov
cld
call
scas
popa
push
dec
sahf
inc
jae
inc
stos
into
or
clc
ret
inc
jbe
jecxz
dec
sbb
std
push
aam
xlat
lock
push
push
shl
js
inc
lret
adc
cs
test
insb
sub
jbe
xchg
inc
jmp
mov
je
dec
clc
fbld
adc
xor
mov
fiadds
popa
cld
dec
pusha
fbstp
test
mov
push
xor
or
aas
rclb
add
or
push
xor
addr16
add
inc
push
inc
sub
imul
sub
inc
dec
mov
add
push
inc
dec
mov
lock
je
mov
sub
mov
fldl
push
ss
inc
inc
pop
mov
adc
rorb
jae
insb
jae
add
clc
dec
pushl
push
jo
je
inc
pop
inc
pushl
inc
jl
pop
push
jecxz
mov
push
jp
xor
sti
mov
in
fdivrs
movsl
aas
in
push
rcl
pop
loope
sti
jmp
clc
adc
add
pop
les
sub
pop
pop
sub
mov
or
push
adc
xor
out
push
cmpsb
xchg
int3
inc
dec
cmc
jb
xor
or
je
inc
jns
rcrl
in
push
bound
dec
inc
jg
dec
jae
loop
xchg
pop
int3
xchg
int3
icebp
wrmsr
js
or
xor
enter
ret
xlat
push
in
add
inc
push
add
jbe
mov
js
adc
dec
xlat
inc
push
test
outsl
push
mov
mov
jg
mov
testl
ss
js
rcl
shrb
or
inc
lret
cmc
das
sbb
push
lea
xor
sbb
and
incl
xchg
and
lock
jnp
std
xchg
xor
jo
cmp
dec
inc
push
lock
shlb
insb
push
push
dec
lock
aad
lea
sub
adc
jnp
pop
call
subb
inc
aaa
dec
inc
adc
inc
adc
and
fcmove
loop
pop
inc
insl
orl
rcr
dec
mov
andb
out
out
push
add
mov
add
ficomps
loope
inc
xchg
pop
jo
cmp
add
loope
gs
dec
dec
jmp
inc
dec
jo
xchg
arpl
clc
mov
jo
inc
hlt
cmpsb
inc
inc
outsl
clc
pop
out
cmp
into
rolb
jbe
pop
das
lock
pop
sahf
and
push
dec
or
push
push
ja
xchg
and
cmpsl
roll
add
loop
inc
inc
pop
dec
lret
les
jp
cmp
mov
push
iret
sub
jbe
arpl
or
adc
ljmp
aaa
je
pop
orl
popf
repnz
fs
push
pop
sbb
xor
push
push
xor
cmp
bound
xor
inc
pop
mov
outsb
xchg
sbb
jno
dec
pop
inc
mov
or
ret
inc
outsb
xor
inc
mov
add
int3
es
mov
pop
push
ljmp
jns
iret
frstor
je
mov
jno
insl
jae
test
cmp
push
popa
inc
insl
movsb
hlt
inc
dec
dec
mov
ds
pop
pop
mov
sbb
rol
arpl
inc
push
pop
pusha
add
popl
dec
dec
imul
fidivs
jmp
imull
imul
lods
lock
insl
xor
insb
jo
out
xor
jbe
mov
insl
mov
popf
out
mov
cld
xlat
dec
fs
pushf
add
ss
jb
jne
in
sub
mov
xchg
test
cltd
mov
and
pop
cmp
addr16
dec
ds
orl
rorl
add
jge
xor
fs
sub
jo
push
aaa
popa
test
pop
pushf
sbb
inc
push
push
inc
testb
mov
jp
jo
pusha
xor
lret
inc
dec
inc
icebp
aam
outsl
dec
data16
inc
jo
jge
adc
js
jae
lret
out
cmp
inc
je
push
jne
dec
lock
leave
lret
push
movsb
dec
push
jg
fs
inc
mov
dec
push
push
sbb
dec
dec
push
insb
push
mov
or
rorl
data16
loopne
ret
jns
ror
or
push
dec
int
push
lret
push
pop
fs
jmp
mov
rcll
jle
sub
inc
xchg
push
and
push
push
pop
pop
cs
loopne
loopne
insb
push
clc
out
jae
mov
daa
dec
cmp
or
pop
ret
push
subl
cwtl
mov
icebp
inc
inc
jmp
imul
in
pop
xor
sub
xchg
mov
mov
or
push
call
inc
mov
outsl
popa
inc
xchg
push
cmp
shlb
jo
dec
pop
dec
scas
jne
jno
jo
cwtl
pop
dec
les
xor
gs
stos
and
jl
dec
movsb
cmp
sbb
cs
rcll
ja
les
pop
testb
dec
stos
inc
push
jmp
sbbb
icebp
jb
mov
cld
mov
aad
jle
arpl
jp
rorl
sub
xor
dec
jne
push
lock
push
jbe
pop
push
pusha
outsb
hlt
ds
jge
or
xor
arpl
test
inc
shr
rolb
test
clc
popf
mov
rclb
js
xor
pop
imul
adc
push
clc
inc
dec
js
mov
mov
hlt
pop
xor
push
pop
add
loopne
testb
xorb
inc
push
je
sbb
inc
xor
dec
pop
adc
andb
and
repz
fiaddl
incb
out
cmp
rcll
inc
insl
mov
dec
mov
add
dec
xor
jns
push
mov
xchg
xor
sbb
imul
dec
aaa
loop
int
imul
push
pop
rcr
dec
fdiv
or
stos
inc
cmpsb
repnz
dec
imul
or
or
ja
push
sub
iret
inc
push
pop
mov
xchg
jle
mov
dec
push
push
bound
fimuls
xchg
dec
inc
arpl
sbb
adc
mov
dec
dec
xchg
orb
pop
dec
call
add
xchg
jg
xchg
sub
dec
jbe
gs
clc
loope
dec
xchg
xchg
inc
dec
scas
mov
nop
jne
sbb
push
repz
inc
imul
bnd
test
popl
loopne
or
fs
data16
gs
je
inc
push
rcrl
shrl
inc
call
imul
dec
mov
clc
xchg
xchg
push
mov
sbb
mov
outsb
iret
in
shrb
dec
nop
enter
mov
in
inc
cmp
mov
lods
or
outsb
imul
rorl
mov
dec
imul
inc
arpl
xchg
std
mov
add
data16
dec
js
or
lds
clc
xor
jns
push
ja
addl
cmc
fdivrs
mov
jp
in
fists
pop
add
push
je
push
sub
stos
inc
test
xor
inc
adc
cwtl
stos
jl
xor
insl
int
fadd
ss
xchg
es
mov
sahf
cmpb
std
inc
jnp
je
cmpsl
cwtl
add
jg
push
dec
add
rcr
pop
mov
sbb
popa
push
fs
orl
ret
fs
sti
jle
inc
push
aaa
jo
pushf
add
shll
aaa
jo
repz
call
adc
add
rolb
lods
ss
sub
aaa
inc
pop
arpl
out
inc
sbbb
push
mov
outsl
addr16
cmp
bound
aam
out
inc
dec
fs
inc
out
in
dec
hlt
inc
sub
inc
movsl
push
sub
sarb
shl
sbb
rolb
outsl
sar
sysexit
pop
addr16
cld
xor
jno
dec
or
adc
shl
push
jbe
orl
enter
loopne
jnp
push
xchg
ret
mov
inc
push
xchg
decb
inc
push
push
mov
icebp
jno
inc
loop
inc
dec
mov
mov
loopne
out
mov
xor
hlt
sub
inc
bound
ljmp
imul
inc
push
or
fimull
das
les
xor
inc
jno
out
addr16
xor
mov
inc
xchg
adc
nop
pop
push
or
enter
popa
clc
lcall
nop
xor
shrb
jp
ds
and
pop
movsb
pusha
rolb
rorl
test
cmpsb
shrb
add
cmc
shrl
jmp
insl
or
clc
rcl
sbb
mov
dec
inc
nop
lock
add
inc
shll
pop
push
pop
shrd
imul
test
inc
mov
push
fildl
dec
mov
inc
insl
jno
and
push
and
icebp
out
inc
dec
ljmp
rcl
push
leave
and
ds
ja
push
loop
stos
push
dec
clc
ja
lret
pop
pop
cmp
dec
xchg
jbe
push
cmp
pop
mov
ljmp
mov
add
push
add
insl
outsb
and
mov
push
enter
mov
dec
fisubrs
jae
aas
mov
xor
cmp
fcoms
ret
dec
lods
inc
inc
cmpsl
lcall
ljmp
ljmp
mov
xchg
mov
sub
lea
jo
outsb
mov
das
inc
dec
inc
popa
inc
push
mov
fldl2e
outsb
shll
jns
lret
lods
aaa
mov
xor
ja
out
jg
ret
inc
inc
push
inc
mov
cmp
cmp
jecxz
jp
sahf
and
hlt
adc
xor
xor
pop
mov
mov
and
inc
dec
push
in
mov
inc
dec
and
cmp
sub
sbb
ss
adc
mov
dec
mov
inc
push
and
adc
pop
jns
iret
xor
inc
push
sbb
insl
out
ljmp
dec
add
ja
jno
enter
clc
ljmp
rorb
dec
arpl
shlb
ljmp
push
jno
sub
aaa
add
xchg
jbe
je
ret
dec
icebp
push
jns
ljmp
jp
push
sbb
testl
xor
rolb
movsb
in
inc
dec
xchg
out
sarb
inc
adc
inc
push
push
mov
popf
ds
ds
out
je
sbb
mov
jae
or
insl
mov
xorl
mov
lock
xor
call
sbb
or
insl
je
xor
cmp
negl
inc
push
inc
xchg
inc
push
ljmp
xor
or
outsl
dec
bound
push
pop
add
dec
xchg
push
shrb
push
mov
lahf
mov
adc
rorb
jb
in
xchg
add
or
and
mov
inc
hlt
and
fists
mov
mov
mov
pop
mov
adc
push
pop
push
sahf
push
dec
sarb
dec
or
mov
xor
mov
push
jbe
and
icebp
inc
adc
cmp
pop
push
bound
cli
in
xchg
pop
sbb
clc
cmp
dec
sahf
cmp
ret
ret
es
rolb
mov
mov
sub
dec
inc
mov
inc
sub
aad
pusha
xor
cmpsb
pop
daa
or
fs
stc
hlt
adc
push
inc
repnz
inc
inc
stos
lahf
jp
push
pop
push
xor
mov
mov
jns
dec
push
mov
dec
aaa
dec
dec
scas
int3
outsl
aaa
fisttpll
inc
pop
xchg
add
pop
inc
ss
xchg
and
sub
fisubrl
data16
adc
aaa
dec
fidivrl
push
shlb
dec
or
add
sbb
adc
pushf
mov
mov
scas
clc
jb
pop
dec
fyl2x
inc
pushf
subb
mov
dec
aaa
dec
xor
adc
loopne
inc
enter
or
dec
clc
dec
js
lret
push
fisubrl
push
sbb
data16
hlt
fists
or
jle
xchg
in
xor
rclb
jns
test
dec
clc
xor
mov
imul
movsb
xchg
aas
pusha
add
dec
cmpsb
and
cmpsl
je
sub
and
push
mov
dec
dec
dec
add
dec
jae
ret
dec
addr16
jo
push
ret
push
ret
mov
push
jns
dec
pop
lock
cwtl
xchg
iret
dec
dec
dec
pop
add
cwtl
dec
and
inc
sbb
push
push
xor
lahf
ret
push
insb
push
fdivs
insb
inc
call
mov
std
mov
cmp
jns
xor
dec
jne
xchg
push
push
cli
insb
cs
cmp
xchg
pusha
mov
push
or
addb
mov
xor
pop
sub
jecxz
cmp
lods
xchg
js
jne
jbe
ss
push
push
aaa
shl
jo
inc
lcall
stos
sub
dec
lahf
jbe
popa
add
inc
cmp
mov
loop
loopne
jmp
repnz
and
inc
pop
jp
push
xor
ret
sub
add
xchg
fldt
pop
jl
fimuls
ljmp
mov
add
pop
xchg
mov
push
xor
and
imulb
in
es
into
iret
dec
pop
inc
add
inc
testl
push
inc
orl
adcl
push
ret
inc
adc
adc
cmp
cmp
daa
push
pop
fistpll
push
pusha
insb
inc
call
mov
mov
cwtl
icebp
mov
pop
mov
push
xchg
push
sarl
add
push
jbe
inc
dec
clc
je
dec
sbb
dec
les
jg
sub
dec
outsb
push
push
inc
add
mov
sub
inc
fwait
push
or
pop
lods
fs
xorb
xchg
push
outsb
inc
jns
ret
stos
mov
insb
movb
jae
or
dec
sub
cs
xor
ja
outsb
xor
pop
push
xor
add
pop
push
mov
aaa
add
fs
push
jnp
fsubrs
mov
xor
outsl
mov
push
xor
lods
shr
push
cmp
aam
pushf
lock
fsts
jno
adc
fs
xor
mov
daa
inc
ss
out
cmp
xor
push
push
bound
arpl
mov
add
mov
js
and
sti
inc
pop
shll
enter
sbb
in
xchg
cmp
xor
clc
inc
std
or
dec
push
and
bound
push
dec
inc
jne
or
cmpsb
jmp
scas
icebp
cmpsb
mov
arpl
inc
insb
inc
ss
jbe
dec
fs
inc
pushf
pop
sub
test
movsb
insb
loopne
dec
xor
add
js
cmp
mov
mov
push
push
lahf
outsb
xorb
xchg
in
xor
add
mov
or
ror
test
dec
push
mov
xchg
ss
inc
push
bound
inc
sbb
lret
dec
jp
sbb
jns
xor
lock
cld
inc
sbb
call
pop
gs
push
xlat
inc
dec
std
push
cmc
jbe
or
arpl
mov
jmp
push
movsb
cli
push
ljmp
sbb
pop
in
pop
test
and
add
cmpl
rcr
push
push
inc
bound
ljmp
and
pop
cmp
shll
mov
jb
cmp
ds
sbb
push
rcrl
cmp
jo
push
insb
sbb
out
pop
sub
aaa
aaa
push
lods
inc
sarl
dec
ss
fimuls
shll
sbb
dec
rolb
inc
xchg
inc
bound
adc
jecxz
push
jb
bound
lods
inc
inc
mov
xor
cli
xchg
shll
repnz
mov
xchg
incb
jo
cmp
mov
jne
lds
pop
pop
call
inc
enter
jo
or
inc
test
xor
dec
push
enter
psubusw
ss
jg
insl
int3
out
push
jo
popa
push
stos
movsb
and
lock
jo
jge
ja
into
test
je
fs
out
in
adc
xchg
inc
outsl
leave
xchg
test
add
mov
aas
push
push
inc
cld
call
lret
jb
sub
mov
dec
inc
mov
lock
xor
push
movsb
rol
in
movsb
push
sbb
and
jg
lret
push
gs
dec
inc
cs
add
test
gs
call
inc
pusha
pop
adc
insl
sub
xchg
xchg
clc
dec
das
je
cli
jo
ja
adc
sub
push
inc
ds
inc
aaa
inc
and
movsb
fisubrl
push
push
xor
dec
inc
fdivr
loopne
push
inc
and
je
push
push
or
lods
out
push
dec
imul
les
sub
dec
inc
push
dec
in
jae
testl
push
push
aaa
or
sub
outsb
dec
in
pop
push
push
push
inc
dec
mov
push
hlt
in
add
lcall
icebp
loope
movsb
push
stc
sub
dec
xor
adc
dec
push
adc
fisubl
addr16
sbb
ja
or
sub
imul
dec
dec
add
inc
pop
dec
scas
adc
push
dec
jae
es
imul
inc
js
add
dec
xchg
movsb
and
ss
repz
out
and
ds
inc
jne
add
jl
or
dec
mov
out
jo
push
pop
sub
stc
dec
inc
lods
dec
mov
inc
sarb
jg
adc
jmp
roll
lret
or
outsb
je
imul
push
cmc
jge
dec
ja
popa
mov
lret
inc
push
imul
call
pop
add
mov
pop
dec
pusha
outsl
inc
inc
das
mov
addr16
xor
pop
adc
ret
fs
in
push
shl
pushf
inc
cmp
push
push
dec
pop
xor
or
repnz
push
outsb
xor
and
xor
jae
mov
mov
dec
push
icebp
ret
les
xchg
and
cs
pop
cmpl
sbb
int3
hlt
mov
add
dec
loop
addb
pop
or
add
inc
jae
inc
ss
cmpsl
test
in
pop
sbb
add
cmp
or
xor
into
out
add
dec
insb
outsl
jmp
ja
lods
add
fisttpl
mov
dec
cltd
pop
jnp
js
stos
loopne
adc
data16
ret
loop
imul
push
rolb
push
pop
fs
out
push
pop
jo
into
mov
push
xor
push
dec
aaa
jo
loopne
cmp
outsb
xor
pushf
jmp
daa
push
jmp
insb
fwait
pop
cmpl
push
dec
add
jo
inc
fsubs
ret
mov
js
in
add
add
enter
insl
loopne
jmp
add
push
push
mov
jnp
andl
mov
mov
popf
dec
pop
leave
sahf
scas
lret
mov
sub
push
inc
or
stos
scas
inc
aas
mov
imul
cmp
and
dec
push
mov
push
inc
inc
imul
fisubl
jmp
fmuls
addb
inc
or
ret
add
inc
pop
adc
movb
aas
mov
ret
aaa
outsb
outsl
cli
push
imul
fwait
cmp
or
cs
enter
mov
fcoms
push
in
jne
test
inc
dec
lret
cli
lock
sbb
roll
mov
xor
rcll
call
hlt
xor
push
cmp
fadds
movb
outsl
mov
push
out
dec
pop
xor
outsl
jno
hlt
push
icebp
dec
jno
pop
hlt
rorl
sahf
xor
mov
xor
mov
cli
movsb
cmp
lods
pushf
push
cmpsb
adc
fbld
in
xor
dec
cs
jmp
js
dec
mov
pop
xor
pop
call
inc
sub
bextr
add
addb
dec
and
mov
mov
cmp
bound
or
push
cld
scas
mov
push
push
add
clc
lea
dec
shrb
cli
pushl
pop
dec
inc
xor
bound
jmp
mov
scas
adc
lea
sbb
push
fwait
mov
arpl
sarb
stos
inc
push
outsb
mov
addb
ja
ss
dec
insb
dec
sub
divl
inc
pop
mov
jb
or
jne
pop
call
bound
pop
pop
jge
ret
imul
dec
inc
fmul
dec
in
call
repnz
out
popa
xor
pop
sbb
fisubrs
pop
mov
loope
add
inc
sub
cli
cmp
mov
ret
push
in
test
push
test
jo
lcall
ljmp
arpl
std
mov
imul
into
mov
jg
shrb
cmp
xor
inc
xchg
mov
and
inc
js
test
dec
outsl
insl
push
dec
add
lea
add
fmuls
inc
jae
js
cld
test
insl
fimull
out
xor
xor
mov
dec
jns
inc
or
jne
mov
cmpsb
inc
adc
dec
insb
bound
stos
or
push
dec
dec
loop
inc
add
pop
xchg
adc
shlb
inc
cmp
pop
fists
shll
fisttps
xor
clc
and
adc
jne
push
mov
push
bound
arpl
inc
call
inc
cmp
call
test
lods
out
or
inc
test
lret
mov
dec
xor
inc
push
push
imul
sahf
and
or
xor
ficoms
jbe
push
sti
or
aas
or
inc
jns
popl
inc
ss
test
cmpsl
insb
inc
insl
pop
cmpb
add
pop
lret
jno
and
sub
dec
enter
or
and
rclb
mov
mov
or
xor
xor
call
call
insb
push
add
cmp
scas
addr16
cltd
mov
xor
popfw
sbb
xor
and
call
mov
jno
in
rol
outsb
add
push
xor
add
mov
and
jo
ss
pop
nop
dec
adc
pop
insl
mov
iret
xchg
add
add
xor
lahf
jo
add
adc
or
mov
add
stos
gs
mov
sbb
lcall
add
add
or
outsl
sbb
stos
ss
and
add
and
adc
pop
adc
int3
jae
or
pop
inc
push
les
add
jp
sbb
fsub
test
jbe
inc
mov
mov
or
add
mov
sbb
pop
push
adc
push
or
and
mov
jg
andb
mov
rcll
push
or
js
push
lock
fsubrl
xchg
jmp
popa
or
cmp
xchg
outsb
push
push
add
push
sahf
jns
sbb
or
pop
rcrb
adc
dec
or
and
push
lock
or
test
addb
and
out
adc
ss
add
sbb
mov
push
cmp
rolb
mov
inc
shrl
push
mull
pop
in
jae
add
test
push
mov
inc
bound
cld
sbb
push
push
push
push
xor
aaa
pop
lods
sub
sub
push
xlat
jmp
push
aaa
add
push
dec
push
imul
sbb
xchg
outsb
imulb
inc
sbb
jae
mov
or
mov
sbb
fiaddl
scas
test
sbb
out
dec
and
mov
cmpsl
xlat
cmp
push
js
movsl
stos
lcall
inc
xchg
test
mov
popl
cmp
aas
push
add
cmp
or
das
pop
push
test
lahf
stos
jb
sub
data16
push
pop
add
add
push
sahf
push
lcall
notl
dec
imul
or
xor
adc
cmp
out
or
cltd
bound
in
add
push
mov
push
rol
xorb
das
fbld
or
add
push
add
xor
ds
add
xor
imul
jb
add
xchg
xchg
and
lret
add
mov
les
js
cmp
ds
sbb
movsl
outsb
add
push
int
mov
mov
pop
in
sbb
shl
ja
lds
hlt
or
rorl
xor
test
jbe
fiadds
and
adcl
lods
xchg
lcall
xchg
fsubrs
jmp
bound
out
mov
sbb
cmp
je
out
jmp
jmp
inc
aaa
mov
add
sbbl
xor
imul
adc
jge
mov
jmp
add
fstpt
clc
aas
adc
lcall
dec
jmp
cli
xchg
xor
call
das
stos
inc
in
xchg
lahf
inc
add
or
mov
inc
ja
leave
add
call
adc
fwait
cmp
sarl
ss
add
int3
cwtl
aaa
mov
mov
push
movsb
inc
fbld
push
lock
enter
and
dec
in
mov
dec
ljmp
pop
enter
test
jl
stc
xchg
xor
insl
hlt
mov
jg
mov
leave
push
pushl
rolb
add
jbe
mov
fs
pop
cmp
mov
ljmp
test
xchg
xor
loop
sbb
and
xchg
cs
push
insl
fistpll
fnstsw
mov
imul
inc
sahf
cmp
pusha
mov
imul
mov
ss
push
xchg
mov
inc
repz
call
lret
xor
insb
or
mov
xchg
addb
lea
out
inc
jmp
adc
rcrl
jle
xchg
cmc
xor
mov
stos
mov
data16
push
repnz
jmp
mov
xchg
idivl
push
leave
pop
push
pop
cwtl
or
iret
ja
mov
std
mov
movsl
sub
jb
js
add
out
js
jb
popa
das
pop
repnz
dec
call
loop
inc
shrl
mov
leave
sbb
imul
sbb
enter
aas
lcall
ret
pusha
out
jne
jb
lods
xor
and
stc
insl
or
jmp
dec
mov
int3
imul
sbb
mov
mov
dec
jmp
fwait
push
repz
andl
out
jno
lods
xor
and
or
addr16
push
pause
mov
sahf
xor
mov
arpl
xchg
jne
in
repz
mov
or
mull
cmpsb
xchg
xchg
mov
loope
sub
push
mov
pop
rorb
sti
cmpl
push
scas
sbb
int
call
sub
lea
incl
int
ljmp
xlat
leave
cli
je
call
sbb
or
bound
call
dec
cltd
pop
movsl
inc
fistpll
js
mov
jle
mov
test
push
mov
sbb
xor
stc
push
lods
das
les
ret
sbb
loop
and
enter
gs
pop
cld
mov
xchg
pop
cltd
std
lcall
and
decb
xchg
xor
test
jmp
jmp
lahf
fwait
divb
fisubl
inc
gs
xorb
lret
dec
iret
cmc
insb
and
push
mov
jns
add
and
push
imul
enter
ds
xchg
sahf
andb
movsb
mov
lahf
add
lock
sub
fcomip
lahf
jmp
imul
and
jmp
sti
push
shl
add
mov
mov
jnp
bnd
call
cld
xchg
cltd
push
mov
mov
mov
lahf
mov
fwait
aas
call
scas
dec
loopne
or
mov
sbbl
xor
rcll
outsb
sub
fiaddl
outsb
dec
xchg
cmp
lods
aad
lock
daa
les
sarl
jae
xchg
in
mov
cld
repz
repnz
or
dec
jmp
fisubrs
lahf
xchg
nop
xchg
in
ret
sarl
es
mov
frstor
jecxz
and
jl,pn
fabs
cmp
mov
mov
xor
dec
stc
fidivrs
mov
das
mov
ljmp
cld
bswap
xor
or
mov
mov
nop
pop
xor
lret
arpl
push
mov
sahf
dec
push
test
mov
jbe
lock
ljmp
notl
mov
stos
xor
push
pop
nop
mov
inc
ret
sbb
loop
call
les
dec
outsl
incb
cltd
outsl
cwtl
xchg
xor
pop
dec
into
imul
dec
leave
cld
jmp
rolb
mov
jge
loop
fstpt
pushf
fsubs
call
out
push
fbstp
adc
push
cli
cld
outsl
jle
shlb
clc
push
sub
dec
inc
movsb
cmp
aaa
scas
cld
fisttps
stos
cmp
pop
fs
inc
jl
outsb
jae
jle
pop
cld
cmp
push
mov
inc
push
adc
fistpll
lahf
xlat
cmp
jl
jne
das
adc
ret
daa
jle
sar
clc
xor
xorb
insb
hlt
rorb
nop
ja
xor
push
fsubr
jp
sahf
popf
push
lea
shl
lcall
and
or
cltd
aaa
aam
push
cmpsb
dec
in
lods
add
leave
cmp
stc
xchg
insb
or
fdiv
xor
push
mov
ljmp
adc
sahf
pop
aaa
rorb
and
mov
jo
stos
dec
into
lcall
rep
nop
jnp
cmpsl
sub
test
lahf
aas
fists
mov
xor
out
loope
stc
mov
mov
out
sarb
scas
idivl
insb
jl
sbb
sub
nop
fldt
push
leave
and
outsb
lock
push
add
popa
incl
outsb
push
sub
push
dec
sbb
iret
scas
mov
mov
mov
decl
ja
notb
push
les
ljmp
incb
adc
adc
mov
jecxz
mov
dec
pusha
dec
pushf
inc
out
sbb
cmp
in
jno
outsl
mov
mov
into
loopne
push
mov
decl
xchg
data16
pop
int3
push
cmp
shrb
subb
mov
dec
ret
xchg
dec
jb
or
fstps
shl
dec
mov
xor
nop
out
fwait
outsl
inc
pop
popf
gs
add
out
mov
arpl
repz
adc
inc
xchg
sahf
fsubrs
xchg
xor
xchg
add
mov
push
aam
clc
stos
lock
or
dec
add
pop
shlb
outsl
jle
push
sbbb
xor
insl
icebp
or
push
std
cld
sub
jmp
pushl
mov
ljmp
and
pushf
mov
adc
inc
lret
mov
int
fistpll
jns
movzwl
sub
notb
scas
cli
mov
mov
adc
enter
or
inc
ja
xor
scas
inc
pop
sub
imul
dec
mov
sub
and
lcall
xor
movsb
pop
pop
inc
movsl
dec
out
sub
inc
pop
shrb
xor
sub
pop
jge
mov
add
je
fst
cwtl
xor
mov
or
push
lret
repnz
bt
push
and
mov
inc
pushf
cmp
out
aam
pop
mov
adcb
not
movsl
adc
div
sar
mov
mull
and
mov
fnsave
arpl
int
cmp
iret
cli
lea
nop
mov
lock
lea
cmc
loope
fmuls
push
sub
out
cld
sbb
in
dec
ret
push
cmp
rcll
dec
call
and
enter
xchg
jp
mov
int
loope
fistpll
icebp
sbb
push
mov
cmp
cld
nop
lea
lcall
xor
call
and
and
inc
mov
clc
sub
lahf
mov
pop
or
sbb
sbb
pop
jo
cmpb
nop
jnp
and
ss
pop
das
movsb
inc
xor
push
outsl
adc
insl
add
mov
and
pushl
iret
data16
and
in
inc
push
insl
or
mov
out
xlat
or
pop
test
mov
pop
mov
lock
mov
fstpl
call
cmp
pop
ret
hlt
dec
jmp
dec
in
mov
pop
in
fistpll
movsb
jne
cmp
xor
mov
mov
dec
ljmp
in
sub
aam
orl
sbb
mov
add
leave
cmp
cli
fsts
insl
fidivl
mov
xlat
loopne
cmp
call
fcom
ljmp
cmp
pop
jl
and
jl
jl
ljmp
inc
mov
nop
adc
lods
dec
sub
pop
mov
dec
and
inc
fs
out
add
cld
pop
nop
mov
insb
mov
fldcw
mov
push
lods
sub
fwait
out
jp
insb
es
popa
fstpl
or
mov
mov
jae
fdivrs
push
das
add
stc
or
mov
lcall
inc
loop
mov
aaa
jg
add
jmp
push
lock
iret
inc
aaa
fmull
push
pop
enter
aas
mov
xchg
push
pop
mov
cld
cmp
cld
pop
outsb
shrb
addr16
fcomp
xor
stc
adcl
mov
sbb
push
je
lods
jb
pop
inc
pop
xchg
inc
scas
aaa
ja
jmp
leave
push
cmpsb
sub
movsl
mov
ja
jg
xor
data16
aad
fwait
gs
mov
icebp
push
ss
mov
inc
int
sub
loop
pop
movsb
cld
add
aas
repnz
cmp
lods
test
jae
dec
mov
stc
aaa
mov
adcb
inc
movsl
lahf
pop
cmc
sub
sbb
out
aas
sbb
mov
cmp
xchg
lea
jno
and
mov
cmpl
push
inc
loop
mov
incl
and
ja
and
sub
in
cwtl
iret
shlb
std
adc
jo
lods
inc
out
int3
jg
xchg
cltd
repnz
push
jno
xor
jne
mov
rcrl
nop
and
xchg
mov
inc
out
mov
lret
mov
xor
push
sub
xchg
je
ljmp
jne
add
lea
fmuls
leave
lcall
insb
cld
jo
das
mov
push
and
pusha
cld
mov
xchg
fisttpll
dec
imul
xrelease
lahf
push
shl
cmp
nop
dec
je
cmp
std
xor
jne
jae
sub
les
cs
in
lret
psubb
inc
mov
sub
mov
sub
add
shrd
push
test
insl
and
cmp
fsts
push
push
popf
test
mov
mov
jbe
cli
aas
ljmp
sti
int3
stc
pop
and
aam
jmp
inc
jle
jle
imul
test
mov
icebp
lahf
pop
jge
je
sti
arpl
add
mov
or
cld
fisubrs
jecxz
and
mov
jge
or
fs
movsb
cli
inc
pop
mov
sti
and
pushf
push
jmp
daa
in
leave
xchg
fadd
adc
stc
cmp
jo
or
arpl
xchg
xor
hlt
push
mov
mov
aad
aaa
popa
in
dec
in
dec
cmp
push
shr
xor
adc
shr
stos
test
mov
mov
push
and
inc
sbb
nop
inc
popa
push
add
add
mov
bound
test
into
and
xchg
leave
in
js
fsubp
cmp
enter
cmp
aaa
in
es
fwait
outsl
std
subl
dec
sarb
jle
icebp
loop
xchg
pop
clc
out
sti
push
xor
popa
gs
stos
lock
jae
adc
int3
pop
push
je
sub
fstps
sub
faddl
adc
ljmp
push
fcomps
pop
arpl
js
fsub
fwait
push
mov
xchg
stc
add
in
movsb
enter
aad
sbb
mov
ds
pop
adc
mov
push
popf
inc
or
mov
dec
popf
hlt
push
mov
cmp
and
mov
pop
popf
xchg
mov
ret
add
jl
scas
cli
scas
dec
mov
mov
mov
pop
shl
es
rolb
sbb
jb
and
clc
mov
scas
fdivp
adc
mov
or
cld
xchg
mov
and
or
int
mov
and
std
pop
pop
hlt
dec
xlat
push
sub
lock
push
pop
add
and
adc
fstpt
mov
rcll
loop
adc
mov
test
and
aam
sbb
inc
js
and
add
mov
dec
mov
stc
fdivs
push
cld
push
cltd
jg
xchg
inc
adc
lahf
adc
fnsave
xchg
or
rolb
push
repnz
nop
into
mov
out
push
clc
out
and
shlb
lds
mov
lods
mov
mov
push
inc
in
mov
repnz
and
stc
sbb
cmp
popa
mov
pop
pop
fs
and
and
inc
jg
mov
jnp
sub
mov
sbbb
stc
inc
js
ds
mov
je
jmp
dec
out
mov
inc
jecxz
jbe
mov
fdivrs
mov
fsts
aaa
aaa
rolb
pop
fidivrl
dec
movsb
outsb
mov
scas
ficomps
in
or
cli
xchg
hlt
add
cld
scas
fidivs
movsb
fwait
or
shufps
loop
mov
push
cli
lret
cmp
lret
mulb
in
push
fnstsw
mov
loop
add
mov
push
out
lds
in
ss
lahf
xchg
lock
inc
push
adcb
xchg
push
jle
or
push
add
dec
aam
stos
mov
loope
jg
outsl
cmc
outsl
addl
stc
mov
js
aam
or
sbb
push
sub
lret
pop
incb
dec
adc
push
stc
rorl
sub
pop
scas
fsubl
or
je
xchg
aas
mov
or
dec
notb
fcmovne
aaa
leave
add
push
mov
test
xchg
loop,pt
cmpsl
jecxz
sub
ret
push
push
repnz
icebp
pop
push
hlt
lret
inc
ja
jecxz
mov
cmp
lods
es
add
out
pop
lods
and
jle
int
mov
jo
jg
lret
add
xchg
stos
fcomps
and
adc
std
js
push
xchg
mov
jnp
lret
loopne
fnstenv
push
orb
mov
push
dec
jbe
mov
incl
push
cld
ret
pop
or
push
loop
pop
stc
lock
push
nop
imul
roll
sub
jbe
test
mov
fisubrs
faddl
std
add
xor
xchg
mov
aad
ret
jl
xchg
push
push
mov
mov
imul
mov
and
int3
daa
in
daa
shrb
sahf
outsl
fiadds
pop
sub
xorl
pop
jp,pt
cli
add
and
nop
lds
push
fxch
into
shr
sbb
jge
and
inc
in
xchg
popf
xor
clc
add
jg
and
fldt
daa
divl
out
cmp
stos
mov
aaa
nop
cmp
jne
adc
bound
inc
cmp
movsb
sub
xchg
cld
imul
repz
std
repz
leave
ret
scas
out
cmp
cmp
movsl
push
call
push
push
mov
fisubl
lret
addr16
sub
mov
push
fnstenv
jno
das
cli
iret
or
xlat
push
or
xchg
lea
test
pop
leave
jle
nop
add
or
aas
out
aam
sbb
add
loope
push
cmp
je
pop
cld
cmp
cld
nop
dec
int
cmp
fcompl
into
imul
xchg
or
ljmp
fsubl
out
nop
push
adc
lods
and
jge
xor
pop
pop
hlt
inc
push
adc
and
inc
stos
inc
movsl
push
cld
xchg
stos
fistpll
adc
cmp
jno
add
fwait
aas
mov
cmp
fwait
cmp
inc
add
scas
fimuls
je
mov
inc
jg
mov
icebp
mov
addr16
mov
aad
cmp
adc
push
push
mov
sbb
imul
mov
pop
jns
mov
cmc
out
in
lods
jmp
inc
out
add
sbb
lods
pop
stc
lret
pop
xchg
clc
out
enter
ljmp
jno
arpl
ljmp
xor
mov
and
mov
ja
call
sbb
dec
inc
push
lahf
outsl
clc
in
pusha
lret
aas
jo
sahf
aad
mov
nop
add
jo
cmp
int
cwtl
ss
movsl
add
notb
lret
aaa
or
dec
or
int
jmp
jg
pop
sub
and
mov
movsl
cmp
pop
mov
cmpsl
jle
int
test
push
rolb
and
aam
fwait
jg
pop
vcvttss2si
pushf
idiv
mov
xchg
mov
push
data16
mov
push
push
mov
add
lods
outsl
inc
inc
lds
leave
mov
pop
in
aam
ss
bound
enter
push
mov
cmc
jnp
int
test
ret
scas
cld
loope
imul
pusha
out
enter
jmp
aaa
aam
jae
loop
push
mov
scas
jp
cmp
hlt
push
mov
inc
or
lahf
push
aas
loopne
sub
pop
pusha
sbb
inc
sub
je
repnz
pop
repz
xor
jge
out
pop
hlt
mov
push
dec
int
mov
cltd
xchg
sub
sti
stc
sahf
jl
pop
inc
xchg
fdivrp
pop
ficoml
xchg
cli
imul
pop
idiv
arpl
es
add
data16
aas
and
push
mov
jns
cmp
sub
cmp
inc
and
adc
mov
push
lea
test
mov
jmp
icebp
lea
push
xchg
ret
ds
jne
popa
das
aas
nop
pop
aaa
cmp
rcrb
dec
stc
jl
cmc
xchg
xor
push
pop
mov
sbb
dec
add
cli
cmp
inc
popa
out
dec
mov
push
fildll
cmp
and
or
xchg
subl
loope
mov
push
cs
jp
std
out
dec
inc
rorb
orl
add
mov
sbb
insb
fimuls
mov
push
ds
cld
ret
leave
cmp
sti
cmc
cmc
push
aam
inc
std
push
nop
out
int
sub
pop
dec
fs
cmc
mov
jae
add
das
rorl
adc
shl
insb
cwtl
xor
sub
mov
cmpsb
cld
shrb
or
addb
pop
nop
in
lcall
cmp
ret
scas
push
sbb
pop
mov
dec
call
push
mov
mov
clc
mov
push
mov
leave
and
sbb
mov
lret
mov
jne
mov
pushf
mov
repz
or
mov
xor
jno
aas
fdiv
push
mov
mov
rorb
ss
and
push
pop
or
xor
sarl
lret
fsubrl
fistpll
xor
clc
jnp
out
sub
mov
adc
jo
in
out
cltd
rorb
pop
mov
es
adc
shlb
jle
pop
mov
fists
and
add
sbb
mov
das
cmp
insb
xor
pop
mov
aaa
aam
jecxz
mov
adcl
inc
mov
sar
sbb
pop
cld
xchg
test
js
ss
and
iret
insb
pop
repz
mov
push
hlt
addr16
dec
mov
outsb
sti
xchg
addr16
pop
jle
xor
mov
cmp
sbb
xor
mov
repnz
ljmp
loope
adc
jg
cmp
pop
push
cli
adc
test
lock
mov
xchg
sbb
add
xor
aaa
das
cli
mov
mov
into
loope
scas
roll
cld
dec
pop
xchg
and
aas
scas
cld
lock
jnp
and
adc
int
fwait
xchg
adc
testl
nop
mov
js
mov
pop
xchg
fistpll
ljmp
push
or
inc
andb
cmc
daa
lods
ds
iret
cmp
decl
stc
in
mov
cmp
and
stos
adc
sub
lods
xor
sbb
les
popf
dec
aaa
scas
mov
jo
loope
inc
xor
mov
cmpb
push
and
nop
adc
cld
loopne
out
negb
xor
sbbb
cmp
xchg
xor
outsb
ss
mov
inc
mov
arpl
add
mov
xor
stos
mov
push
inc
push
add
rcll
aam
jnp
call
fsts
xor
nop
test
out
daa
rcr
mov
cmp
jb
pop
push
xor
xchg
and
sub
imul
pop
fdivr
fidivs
inc
aaa
pushl
lret
rclb
ficompl
into
push
dec
clc
push
and
fwait
push
jle
out
insl
insb
jmp
fs
cmpsl
incl
rcrb
sbb
push
inc
mov
push
lahf
push
sbb
and
mov
call
fldenv
bound
cmpsb
nop
fbld
adc
mov
loop
push
ja
scas
icebp
and
mov
fdivrl
push
mov
and
arpl
dec
add
orl
scas
pushw
mov
lock
xchg
xchg
ficomps
and
pop
mov
xchg
rolb
adcb
int
xchg
in
leave
inc
inc
clc
out
clc
push
adc
je
push
mulb
test
rep
xlat
and
test
mov
test
call
mov
addr16
in
lock
xchg
std
mov
loopne
mov
jb
jo
sarl
dec
mov
mov
fidivs
pushf
push
es
mov
popf
lea
mov
fcomps
daa
shrb
mov
lock
add
pop
xchg
inc
bound
nop
fcoml
mov
pop
xchg
sbb
shll
lods
xor
mov
mov
aaa
add
xchg
inc
xor
rol
sub
mov
call
popf
cmp
xor
push
fadds
jmp
movsl
pop
iret
cltd
inc
mov
push
not
jns
inc
add
jb
and
jo
ret
iret
lret
addr16
push
xchg
out
jmp
testl
adc
pop
jo
push
pop
movsl
sub
stc
mov
cli
and
incl
loope
mov
sarb
xor
in
cmp
imul
and
shlb
test
dec
test
ds
cld
push
and
aad
mov
into
lea
xchg
xchg
lcall
sbb
and
ret
addr16
xchg
inc
jg
pop
mov
xchg
mov
orl
xchg
jae
jo
mov
add
and
inc
fsubs
push
es
and
jg
or
mov
hlt
mov
jo
and
stos
loopne
loope
inc
rorb
jmp
push
repnz
pop
xchg
push
addr16
push
mov
out
sub
aam
test
hlt
pop
push
std
adc
jne
in
mov
fdivp
fbstp
cld
pop
ljmp
lahf
cli
icebp
jmp
pop
xlat
jae
or
or
mov
test
stos
mov
flds
mov
mov
sbb
inc
push
add
adc
dec
pop
test
push
enter
xor
mov
stos
das
icebp
test
aas
push
or
mov
mov
cld
or
stos
xchg
popf
pop
in
jb
sarb
pop
popf
mov
dec
repz
repz
push
inc
cmp
xchg
cs
insl
mov
and
inc
hlt
lret
cmpsb
ficoml
dec
xchg
mov
out
rcrb
gs
mov
pop
les
mov
lods
sbb
in
lods
sub
inc
or
push
cmp
inc
aaa
pop
pop
clc
dec
aas
lcall
popf
cli
movsl
inc
loop
push
mov
out
mov
pop
mov
shll
xchg
dec
pusha
sub
fildl
push
push
aam
push
cmpsb
int
lock
aas
dec
inc
push
loop
inc
jmp
cld
adc
lcall
inc
cmp
nop
and
mov
and
push
push
and
adc
incl
jo
push
mov
push
fiadds
adc
push
xchg
loopne
scas
sbb
scas
cmp
stos
fidivrs
mov
inc
movsl
clc
mov
pop
lcall
cld
sbb
jnp
add
jle
loopne
ss
push
loopne
ret
mov
mov
adc
js
adc
dec
mov
cmp
outsl
jae
fimuls
jl
gs
and
hlt
mov
pop
lea
push
push
rcl
and
jo
mov
cmpxchg
out
xchg
aam
inc
aaa
inc
xchg
cli
out
sbbb
nop
xchg
scas
enter
clc
or
idiv
cmp
push
sub
loopne
and
test
sbb
and
xorb
mov
add
stos
aam
dec
adc
cli
out
movsl
inc
adc
mov
negb
jecxz
push
pop
or
gs
rorb
mov
lahf
mov
scas
mov
mov
mov
cmp
mov
cwtl
adc
test
incl
shrb
fdivs
nop
lret
xchg
xor
push
pop
call
inc
mov
push
mov
pushf
cwtl
ret
repz
stos
add
inc
sarb
cli
out
xchg
jbe
push
and
dec
xchg
pop
loopne
hlt
aad
sbb
movsb
pusha
xor
cli
sub
outsb
mov
les
mov
shrb
sub
jecxz
xchg
negb
mov
jmp
cli
and
push
popl
sti
sub
mov
outsb
cld
adc
inc
cltd
cmp
mov
and
jle
cli
jl
incl
lods
jp
leave
addr16
add
mov
pop
cmp
mov
shl
stos
mov
icebp
jmp
or
mov
gs
jg
into
pop
or
dec
and
xchg
xchg
mov
and
or
xchg
xor
andl
loop
xor
imul
repz
jle
jns
decb
scas
sub
cltd
les
sahf
mov
sarb
or
pop
call
adc
push
cmp
std
mov
mov
mov
sub
cld
mov
adc
mov
loopne
and
int
fmuls
xchg
pop
and
testb
jbe
inc
dec
dec
std
jo
jns
mov
mov
cli
add
insb
hlt
sub
xchg
and
stc
int
sub
mov
shrb
ret
mov
mov
in
jno
shrl
fists
sti
mov
gs
inc
dec
sahf
cmp
cli
in
add
push
clc
push
jbe
adc
lahf
fadds
stos
lret
cmp
pushf
loope
cld
imul
push
fdivl
lret
cld
adc
mov
scas
ds
push
cmpl
mov
xchg
jo
cmp
push
aaa
mov
xchg
mov
repnz
fdivl
cmp
dec
out
fists
lret
fwait
jp
cmp
mov
mov
push
xlat
mov
into
fidivrl
clc
pop
test
push
mov
bnd
mov
repnz
mov
mov
jae
fsubl
incl
in
xchg
sub
add
mov
cmpsl
out
mov
aad
inc
pushl
mov
add
fwait
hlt
out
fsubs
divb
aaa
mov
jg
fadds
push
cmc
xchg
das
mov
std
mov
shrb
sub
mov
mov
ss
mov
call
hlt
pop
loop
cmp
test
outsl
add
addr16
mov
mov
fsubrs
cmp
inc
std
and
cmc
mov
mov
fmul
jmp
xchg
inc
movsb
ja
aaa
sub
pusha
fsubrl
ljmp
movsl
rcr
and
jg
inc
pop
test
andb
data16
roll
and
mov
add
xchg
mov
lahf
clc
subb
stos
filds
outsl
test
mov
int3
add
lret
pop
or
loopne
data16
cmpsb
gs
in
cld
pop
pop
cmpsl
cmp
mov
push
outsl
jg
add
pushf
xchg
hlt
inc
and
stos
imul
jne
adc
icebp
cmp
outsb
mov
cmp
mov
mov
std
imul
dec
cmpsl
or
test
hlt
clc
mov
flds
xchg
imul
mov
jmp
push
push
jbe
out
push
addr16
in
jns
mov
or
push
aam
hlt
inc
fdivrs
notl
out
add
xchg
out
mov
push
mov
jns
mov
jg
cmpsb
int
fs
inc
jno
mov
in
mov
jbe
loopne
cmpsl
pmuludq
clc
add
xorl
push
mov
stc
jl
push
and
outsl
sbb
jo
and
loopne
mov
push
stc
cmpl
xchg
lds
jg
je
sarl
push
and
inc
aas
xchg
or
dec
jge
repz
les
and
data16
cld
cmp
mov
mov
lret
pusha
call
add
push
jg
scas
mov
adc
inc
mov
pop
or
mov
imul
icebp
mov
xchg
cli
iret
pop
add
and
push
outsl
ss
mov
adc
xor
fidivrs
pop
shlb
aam
mov
mov
dec
cmp
icebp
rol
add
icebp
xchg
and
icebp
cmp
sbb
fwait
lea
inc
jbe
jo
jge
cmp
inc
push
push
mov
mov
dec
cli
out
jne
shl
cmp
aam
scas
dec
aam
adc
les
adc
arpl
add
aad
sub
subl
mov
add
add
ljmp
ds
or
imul
sub
jns
mov
cld
mov
or
push
out
xlat
xlat
or
add
out
aad
mov
andb
movsb
add
sub
ss
adc
fildl
mov
pushf
push
adc
mov
sub
outsl
pop
iret
paddusb
mov
cmc
test
inc
into
fmuls
clc
fwait
xor
sub
and
frstor
mov
ja
xor
int
cld
xor
andl
imul
inc
cmp
loopne
cli
cmp
in
mov
xchg
fs
loopne
enter
pmuludq
and
icebp
pop
pop
mov
mov
loope
mov
adc
repz
paddb
out
xor
stc
mov
add
pop
loop
ret
lcall
lods
cmp
sbb
push
mov
pop
and
icebp
mov
jo
inc
push
and
jb
jo
sbb
rolb
mov
cwtl
pop
add
and
cmp
fsubrp
aam
mov
mov
dec
jl
jno
pop
fwait
inc
bound
push
lcall
nop
test
bound
add
mov
mov
repnz
inc
loopne
sub
stos
mov
lods
std
lahf
cmp
ljmp
das
pop
mov
mov
rclb
push
cli
push
mov
sub
enter
pushf
aam
or
push
mov
add
push
das
xor
jno
push
test
fcoms
stos
shlb
mov
das
mov
imul
sbb
scas
nop
fs
inc
pop
jg
lret
data16
testb
mov
or
jle
leave
insb
or
inc
mov
filds
rolb
jnp
mov
neg
add
inc
test
aam
push
inc
pop
mov
xchg
push
lret
mov
movb
and
mov
lret
cwtl
nop
aad
test
nop
inc
jne
and
xchg
popf
xor
xchg
and
lods
clc
mov
cmc
add
fwait
lcall
xlat
imul
xchg
mov
pop
xchg
cmp
mov
loopne
lahf
aaa
clc
and
xchg
outsl
mov
pop
and
loope
loope
mov
loopne
push
lods
mov
imul
mov
cmc
mov
js
and
fldl
push
jecxz
inc
adc
mov
or
sbb
jl
inc
jl
in
shlb
cld
push
inc
jle
mov
or
pop
ja
mov
and
lea
mov
mov
scas
push
inc
xchg
mov
lahf
sub
sbb
shll
inc
lods
cli
jmp
push
ret
jp
mov
cmpsl
add
xchg
inc
in
in
sub
dec
mov
sbb
mov
test
and
jbe
stos
xor
leave
testb
pop
test
add
pop
or
push
cmpsl
int3
loop
pop
add
ds
ret
fistpl
sbb
push
inc
add
jle
pop
test
dec
pop
xchg
push
sti
cmp
int
rcl
xchg
loopne
or
push
pop
mov
and
aaa
bound
lret
cmp
ret
cmp
push
cltd
mov
xchg
adc
sbbb
fiaddl
mov
clc
ljmp
mov
es
pushf
fcom
cmp
mov
test
ficompl
adc
call
jns
imul
jb
cmp
mov
push
mov
jae
enter
sub
outsb
cli
cmpsl
repz
adc
push
xchg
pmuludq
cmp
mov
popa
lcall
push
pop
jo
and
mov
or
xor
mov
cs
outsl
sbb
clc
pop
pop
bound
and
cmp
aam
repz
cld
rcrl
pop
ror
mov
cmc
pop
lret
add
out
adc
aaa
jmp
mov
xchg
mov
cmp
mov
std
jg
add
or
push
jl
fstl
nop
xor
in
pop
xor
sahf
mov
cmp
mov
in
mov
xchg
fstl
push
movsl
xlat
icebp
mov
stc
outsb
loopne
fistpll
cmp
shll
push
test
lods
scas
mov
std
mov
decb
or
mov
cld
movsb
jp
fmull
inc
int
pop
mov
pushf
clc
clc
repz
cmp
and
test
mov
dec
out
test
mov
mov
iret
out
pop
sbb
int3
ret
cld
ljmp
decl
lcall
xor
push
pop
out
and
loop
push
pop
cld
pop
inc
into
daa
dec
push
mov
push
lds
loopne
jne
inc
stos
call
xchg
pop
mov
mov
out
push
mov
jnp,pn
ret
repnz
loopne
inc
out
pop
adc
inc
xlat
ljmp
lods
sbbb
shrb
mov
iret
inc
and
mov
push
inc
inc
sbb
push
in
inc
push
pop
inc
rclb
out
jo
inc
dec
jl
push
xor
inc
or
push
mov
dec
mov
mov
or
decb
cld
repnz
mov
icebp
adc
hlt
in
push
lcall
cli
xor
mov
adc
pushl
add
mov
mov
or
lock
mov
mov
push
and
outsb
shl
inc
nop
lods
jno
add
bound
push
imul
cs
sbb
mov
nop
add
sub
nop
sti
and
or
inc
aad
adc
xor
les
mov
aad
je
fdivrs
mov
or
mov
mov
stos
and
lods
or
push
sbb
sub
push
mov
inc
push
jbe
mov
cmp
mov
js
mov
push
cmp
inc
adc
negl
jno
fmul
arpl
cltd
cs
push
subl
mov
adc
clc
lock
popa
clc
xchg
sub
aam
dec
sarb
inc
lods
lods
xor
or
out
into
loopne
scas
pop
cli
dec
dec
inc
loopne
sbb
enter
inc
cmc
mov
cmp
xchg
lds
xchg
mov
xor
popa
xor
xchg
add
or
stos
or
xchg
int3
and
movsb
add
aad
cwtl
pop
call
mov
lcall
call
clc
mov
notl
mov
inc
xchg
icebp
mov
and
push
cmp
xorl
adc
movq
or
cmpsl
push
xchg
out
loopne
aam
loope
inc
push
mov
sahf
inc
and
xor
pop
xchg
cltd
and
stos
repnz
or
inc
dec
test
jle
movsl
fs
inc
xchg
scas
test
mov
sub
sub
cwtl
sarb
fcomps
subb
push
call
lahf
out
pop
mov
mov
pop
inc
nop
mov
mov
push
mov
rclb
and
bound
lods
mov
mov
mov
nop
loop
stos
push
mov
mov
sub
or
add
mov
cmp
jae
pop
stc
in
fdivr
xlat
aad
mov
orb
int3
aas
repz
movsb
int3
ltr
leave
add
inc
xchg
lods
sbb
push
and
add
cmp
es
popa
mov
mov
pop
cli
fwait
and
ret
jmp
call
frstor
fmull
inc
add
std
pop
and
dec
cltd
scas
inc
es
dec
ds
sub
inc
shrl
test
push
mov
add
cwtl
movsl
mov
push
jmp
stc
nop
push
sbb
loopne
add
xchg
mov
jo
xor
repz
icebp
aas
std
dec
cld
mov
push
testb
adc
scas
inc
push
cld
jne
cmpsb
xor
cmpsb
jmp
into
mov
and
lcall
jb
in
stc
mov
jp
mov
scas
hlt
sbb
icebp
push
cmp
les
cli
stc
loopne
mov
out
jl
mov
jle
aaa
sub
push
dec
mov
adc
inc
fmuls
add
mov
xor
incl
cmp
inc
fadds
push
lock
mov
push
fisubl
inc
leave
push
psubusb
aaa
or
mov
popa
clc
pop
call
or
stc
xchg
xor
push
rol
mov
aaa
mov
popa
jp
insl
add
arpl
rorl
hlt
stos
mov
out
jno
inc
pusha
mov
xchg
xchg
aas
les
scas
cld
loop
fistpll
aas
xchg
data16
les
push
cli
dec
mov
xor
iret
inc
adc
and
leave
sub
sub
pop
in
ds
push
push
clc
adc
nop
cmovge
xchg
push
add
ret
ljmp
mov
mov
push
pushf
pop
notb
add
inc
cmp
or
loope
sti
in
dec
xchg
loopne
lea
pop
loop
call
imul
sbb
fldcw
popa
cld
sbb
stos
mov
pop
flds
adc
lret
enter
fs
rol
fildll
pusha
popa
in
jb
xchg
pusha
std
add
shrl
paddq
mov
paddsw
jnp
call
call
aam
mov
inc
and
inc
insb
add
es
test
mov
mov
or
mov
sub
mov
inc
aaa
jmp
ret
mov
mov
and
pop
cwtl
push
add
cld
mov
insb
out
add
rolb
aam
jecxz
mov
stos
int
push
fsubrl
lret
mov
cmpsl
inc
scas
or
mov
xchg
mov
xor
out
fadds
sbbl
or
ja
into
add
cmpsb
cmp
mov
dec
in
mov
scas
scas
push
cli
mov
call
outsl
cmc
scas
sbb
out
movsb
sbb
jl
inc
lcall
sub
and
pop
cltd
and
int
xor
scas
push
jmp
and
jg
inc
pop
and
in
aad
cs
jno
sub
andb
fwait
cs
xchg
and
aaa
scas
push
mov
or
sbb
and
push
push
sbb
cmp
inc
add
push
lods
xchg
xor
lret
dec
clc
js
cld
or
sti
cs
aad
aas
push
clc
rcll
jg
fs
pop
push
icebp
fs
mov
xchg
jno
iret
ljmp
sub
jle
jge
pause
ds
mov
aam
bt
das
loopne
cli
nop
pop
aam
rorl
cld
pop
fs
cmp
lock
aad
mov
fstl
add
jnp
cld
out
push
xchg
dec
call
std
sbb
fsub
testb
push
into
xchg
inc
jg
icebp
repz
in
pop
add
leave
ds
add
mov
pusha
and
int
setnp
xchg
pop
testl
data16
clc
xchg
cmp
jbe
shl
incl
out
cld
fsts
dec
add
lds
mov
loopne
inc
inc
lods
pusha
sar
call
movsb
int3
sub
mov
int3
js
mov
push
jne
sbb
xor
xchg
repnz
jno
cmp
xchg
pusha
pop
sahf
xchg
mov
xor
add
pop
clc
test
popl
sub
mov
push
dec
rcl
les
arpl
lock
push
addr16
mov
jg
lods
outsb
out
xchg
sbb
fsubrl
mov
int
inc
sub
jns
dec
jmp
cs
out
push
xlat
xor
sbbl
mov
push
push
test
cld
add
push
and
mov
mov
cmp
and
lods
inc
add
or
clc
and
into
or
mov
sbb
in
adc
mov
mov
clc
pop
pushf
push
clc
call
test
fld
or
mov
cmc
cs
jecxz
mov
push
aas
nop
mov
das
gs
lods
push
lock
daa
int3
push
mov
inc
movsl
rorb
mov
fs
dec
aam
push
jp
out
pop
ljmp
ret
arpl
nop
push
mov
aad
inc
pop
insb
and
mov
mov
inc
or
mov
ret
dec
arpl
test
mov
mov
add
mov
aam
push
cmp
call
fistps
loopne
add
jp
sub
jge
mov
mov
and
jl
xchg
cld
cwtl
rcrl
jl
in
push
inc
aad
cld
decl
imul
loope
aam
imul
jmp
xor
inc
mov
or
jne
enter
mov
xchg
jecxz
cmp
adc
xchg
pop
es
add
sbb
pop
loopne
add
scas
jle
inc
sar
mov
or
pushf
push
pop
call
bound
mov
jno
mov
mov
jnp
scas
cld
pop
mov
cli
jg
pop
add
and
test
testb
mov
fs
fdivs
out
lret
jle
pop
testl
jbe
cwtl
cs
mov
test
nopl
mov
mov
xchg
lock
add
pop
pop
std
dec
push
pop
fldenv
nop
pop
mov
icebp
mov
js
loope
adcl
push
rcll
adcl
jg
aam
add
std
stc
outsl
lds
push
inc
in
pop
adc
adc
sbb
out
je
sarb
xchg
xor
test
and
cmp
clc
lock
ss
mov
stc
cmp
pop
stc
add
in
and
push
xchg
inc
lret
test
std
pop
or
xchg
add
pop
hlt
mov
cmpsb
jo
insb
mov
ret
or
lahf
mov
ja
enter
mov
push
aas
fcompl
xor
xchg
jmp
ret
rdtsc
mov
cld
cmp
pusha
pop
lea
xor
xchg
mov
insl
std
or
orl
push
push
push
call
push
or
rclb
push
jg
sub
cli
cmp
aam
lcall
aaa
pop
out
and
xchg
rcl
inc
cwtl
imul
scas
adc
pop
nop
je
inc
fildl
sbb
fdivrl
fwait
test
sub
push
or
ret
and
nop
jne
imul
clc
scas
mov
add
repnz
push
in
add
inc
jb
dec
andb
cli
mov
inc
xchg
pusha
inc
pop
mov
push
ss
xorb
icebp
and
pushf
fiaddl
mov
daa
imul
mov
insl
into
mov
outsl
das
test
aad
dec
mov
mov
add
xchg
mov
add
sub
sahf
mov
push
jb,pn
out
push
mov
sbb
sbb
das
and
sbb
imul
shll
fwait
ret
scas
dec
cmp
fwait
in
or
cmc
gs
pusha
sbb
jg
or
mov
je
and
icebp
dec
mov
movsb
data16
jmp
xor
stos
and
int
inc
or
mov
sbb
out
mov
inc
test
int
push
testb
jg
fistl
cmc
adc
adc
xchg
or
cmp
out
jge
les
jo
out
dec
jno
or
xchg
daa
daa
pusha
and
addr16
or
inc
shrb
push
dec
xlat
nop
enter
bound
mov
jmp
aaa
das
mov
cmp
mov
divb
and
jne
enter
sub
sbb
pushf
push
fwait
incb
cmp
shrb
sahf
adc
fistpll
mov
and
add
xor
or
and
mov
data16
imulb
or
pop
or
subl
dec
in
dec
inc
aam
js
sub
cmp
mov
mov
shlb
pop
sti
xor
inc
add
jmp
mov
mov
addb
mov
data16
inc
aas
add
stos
mov
mov
aam
sbb
ljmp
inc
shrb
daa
icebp
inc
sarb
test
mov
mov
aam
mov
imul
fdivrp
aas
push
or
cwtl
bsf
push
mov
sbb
sbb
js
mov
addr16
jg
bound
cld
mov
test
xchg
xor
adc
les
into
push
call
sbb
fldt
and
mov
std
cmp
stos
mov
ja
mov
icebp
dec
sti
dec
jo
sbb
clc
push
mov
adc
and
cmp
mov
shlb
shlb
movb
fdiv
repz
out
add
into
fcoms
sbb
int
scas
ret
and
enter
stc
mov
out
xchg
inc
push
push
cld
or
sub
jle
fcoms
rdmsr
fcompl
mov
sub
stos
addr16
cmc
add
cmp
stos
inc
test
cmp
pop
fistps
mov
cmp
lret
lret
add
clc
lods
mov
test
mov
xor
popa
inc
test
and
cld
out
inc
xchg
xor
add
sahf
push
icebp
pop
xchg
cmp
xor
push
jmp
loop
shrb
jmp
xor
jecxz
mov
nop
or
hlt
dec
aas
cli
dec
ja
inc
cmp
scas
add
rclb
fildl
mov
mov
pop
and
cli
addb
or
pop
mov
out
hlt
mov
adc
adc
mov
incb
dec
inc
mov
insl
shrd
sti
js
out
and
jg
mov
inc
int3
xor
ljmp
xchg
lret
and
mov
lods
addb
jecxz
aam
int
decl
mov
insl
les
loop
pop
lret
into
pop
mov
or
negb
jl
lret
aam
ret
aas
insb
shl
test
bound
mov
loope
cmp
icebp
ret
pop
dec
bound
stos
dec
push
mov
sbb
adc
mov
mov
pop
and
insb
adcl
xchg
sti
outsl
cld
nop
mov
pop
test
cli
js
popf
jg
cli
imulb
rorb
adc
lahf
repz
inc
into
sbb
mov
loop
inc
rcrb
clc
repz
sub
leave
dec
cmp
popl
inc
sub
inc
pop
add
cmp
lret
xchg
aam
imul
or
push
cmp
jmp
add
repz
sbb
ret
dec
hlt
jo
lahf
loop
push
mov
aam
xchg
mov
push
clc
cli
cli
inc
int3
imul
aas
mov
nop
mov
ret
xor
mov
js
mov
lods
mov
and
xchg
push
repz
pop
fdivs
jg
mov
outsl
in
inc
out
enter
mov
lods
sbb
or
push
loope
jle
cld
out
lods
jg
fldenv
or
repnz
jge
push
cmp
pop
ds
pop
pop
nop
imul
and
cmc
xchg
adc
xchg
ret
loop
push
sbb
cmp
sbb
or
fucomip
pusha
clc
mov
mov
xchg
mov
pop
fwait
sub
dec
xchg
pop
mov
test
inc
push
aam
fsubrl
popa
dec
inc
jmp
addb
mov
js
mov
mov
mov
movsl
std
in
inc
cwtl
and
in
rorb
fcom
cli
std
pushf
add
jecxz
mov
stos
fisubrs
lret
inc
test
mov
in
flds
ret
mov
or
pop
in
ds
stc
outsl
cld
ret
call
jle
fildll
xchg
mov
cli
fldl
lret
push
inc
mov
out
mov
fdiv
dec
std
sbb
jno
cmp
pop
push
fcoms
call
mov
addr16
adc
inc
mov
movsl
xlat
sub
dec
shrb
and
inc
add
jns
pop
mov
adc
cmp
push
mov
mov
push
dec
push
mov
mov
outsl
fwait
mov
dec
shl
cmp
push
cmpsb
inc
fiaddl
fisubl
mov
or
insl
sub
nop
mov
add
xchg
pop
and
xor
add
cld
xchg
cmc
push
mov
sbb
incl
fsubl
stos
mov
inc
dec
cld
inc
xor
add
aas
mov
rcr
negb
scas
int
inc
fwait
int
inc
dec
push
ss
jmp
incl
add
and
adc
cmp
mov
mov
repnz
data16
push
push
mov
out
mov
push
cmpl
stos
repz
scas
mov
rcl
mov
and
cmp
adc
push
stos
cmp
sti
jb
cwtl
jnp
fdivs
cltd
xor
and
and
jle
cmpsb
cmc
out
rolb
imul
sub
inc
mov
jge
pop
lret
movsl
push
lods
pop
inc
or
and
lock
lods
fisubrl
repnz
xor
jle
xchg
cli
mov
sbb
rorb
adc
popa
push
and
sub
pop
mov
nop
push
insl
out
push
mov
add
js
and
adc
cld
in
inc
jo
fcoms
mov
pop
shrl
sub
outsl
insl
pop
sbb
stos
dec
clc
decl
add
dec
loope
mov
int3
push
fsubrl
mov
sub
aam
mov
pop
std
pop
outsb
mov
std
push
and
adc
adc
out
sar
mov
jbe
test
rcrl
pop
mov
aaa
push
jmp
clc
xchg
push
jno
or
and
jns
mov
cmc
sub
in
mov
arpl
fistpll
push
js
dec
xlat
inc
clc
into
les
lret
bound
inc
daa
jbe
xor
mov
clc
add
les
push
cltd
jl
pop
pushl
mov
push
sbbb
or
jle
hlt
push
inc
or
xchg
in
data16
fcoms
xchg
push
aaa
cli
stos
push
inc
fmul
dec
adc
dec
int
xchg
ljmp
mov
sahf
inc
cmc
ja
dec
adc
adc
ret
outsl
mov
into
push
inc
and
test
popa
mov
shll
xchg
lock
lods
scas
arpl
ud0
mov
cld
lock
lods
es
test
scas
jl
and
xorps
outsb
jecxz
dec
lcall
lcall
dec
and
in
and
je
push
jbe
aas
ror
inc
and
mov
out
mov
lcall
sbb
sahf
aaa
cli
scas
adc
mov
push
cmpsb
mov
mov
xchg
lock
push
clc
inc
pop
mov
add
insl
and
aaa
mov
fisttpll
xor
mov
and
pop
aad
scas
ret
push
faddl
xchg
push
push
push
insb
and
xor
aam
stc
scas
mov
insb
push
outsb
dec
or
sbbb
outsb
pop
test
dec
das
push
in
cmp
js
inc
jge
jl
jmp
je
mov
mov
cli
jl
lods
insl
nop
mov
pop
cld
shrb
cmpsb
pop
fnstenv
mov
fldt
cmp
push
push
xchg
scas
insb
mov
mov
into
adc
data16
cld
push
sar
hlt
and
fistpll
adc
mov
inc
adc
inc
insb
test
imul
out
repz
loope
inc
fcmovbe
in
push
inc
push
mov
lea
sbb
out
jp
outsb
ss
jmp
jge
mov
into
fidivrs
nop
cmpsl
into
into
xchg
xor
stos
lods
cmpsb
cli
jae
jecxz
and
mov
mov
sub
ja
stos
iret
mov
mov
jmp
mov
les
int
mov
ret
inc
mov
bound
pop
dec
es
std
clc
movsb
inc
shlb
xchg
jle
xchg
into
fs
mov
add
pop
scas
in
push
add
es
mov
fsubs
sbb
stc
jge
mov
lds
inc
pop
jne
add
sti
imul
fs
movsl
pushl
sbb
jo
call
add
pop
les
lss
aas
cld
mov
outsb
call
inc
cmp
mov
ja
cmc
sbb
mov
add
mov
fcomp
mov
adc
out
add
jno
jae
or
dec
pushl
lock
clc
out
pop
scas
xchg
je
push
sti
jno
imul
aam
pop
inc
mov
add
dec
pusha
pop
setl
mov
sbb
dec
pop
mov
cld
push
out
iret
imul
mov
mov
mov
mov
fiadds
in
std
sbb
jg
sbb
pop
loope
or
xor
mov
fwait
divb
test
and
mov
fldcw
cmpsl
jno
jl
outsl
gs
and
xchg
cmp
movb
adc
mov
mov
cmp
mov
mov
adc
aas
xor
cld
push
lcall
pop
stos
pop
hlt
push
andl
push
xchg
mov
je
ds
pop
lock
cmp
pop
inc
cmp
xor
pop
xchg
jnp
inc
xor
insl
cmc
pop
jo
inc
hlt
aad
ret
mov
jp
outsl
xorb
lea
jno
pop
repz
ja
imul
stc
scas
cmp
call
mov
inc
lds
shrb
in
and
incb
hlt
push
mov
shrb
sbb
add
inc
std
inc
add
mov
pop
jnp
and
or
jo
test
add
xchg
adc
scas
mov
adc
mov
mov
pop
dec
mov
sbb
push
sbb
data16
cvttps2pi
hlt
mov
enter
test
decl
sbb
stos
add
rclb
cld
pop
inc
sub
out
xchg
notw
pushf
sub
ss
mov
add
and
loopne
repnz
mov
stc
push
mov
or
push
sbb
jnp
lea
mov
ss
aam
and
jnp
out
in
cmc
xchg
or
jl
movsl
sub
jg
rcr
jg
cmp
jmp
jmp
rol
pusha
or
jg
and
fadds
in
inc
push
cmp
pop
lea
ret
aaa
sub
adc
push
add
jns
cltd
jnp
psubsb
ds
jp
xchg
pop
loope
pop
addb
aam
aad
test
xor
nop
fidivl
hlt
test
inc
test
out
mov
xchg
inc
ret
scas
inc
test
pop
std
test
enter
cmp
add
nop
sub
aam
mov
xor
mov
cld
stos
inc
pop
nop
inc
and
ror
clc
clc
outsl
add
mov
into
push
in
fistps
push
push
dec
mov
and
popf
pushf
rorb
xchg
and
ret
pop
movsl
ja
call
aaa
and
cli
xor
xchg
popa
mov
dec
lahf
int
lock
inc
int
fisttps
scas
push
jecxz
rcrb
cli
inc
sub
and
mov
push
cli
jge
orl
inc
lahf
cmc
lcall
mov
leave
rorl
mov
push
sti
das
stos
mov
xor
lods
loop
loop
push
insl
aaa
add
cs
fsubp
hlt
pop
movsb
test
fdivrp
sbb
lahf
and
inc
adc
call
rolb
cmp
mov
mov
cld
filds
mov
hlt
sahf
out
scas
mov
inc
lds
in
rorb
in
stos
testb
test
dec
pop
and
sahf
inc
loopne
enterw
aam
pushf
adc
pop
rorb
andb
xchg
rol
stc
mov
ds
add
and
mov
scas
add
in
push
adc
ja
aas
dec
xlat
into
in
mov
and
aam
xor
bound
imul
pop
aaa
sbb
push
clc
cltd
fbstp
pop
push
inc
pop
adc
inc
mov
xor
lea
in
mov
gs
mov
sbb
ss
lret
add
jle
push
inc
rorb
aaa
mov
jg
movsb
dec
test
inc
cli
inc
jg
mov
lcall
daa
push
aad
ffreep
pop
inc
stos
decl
mov
mov
inc
and
cld
mov
mov
popl
mov
test
adc
push
lods
stos
cmc
shll
dec
cmp
cmpsb
and
out
sub
add
nop
mov
mov
mov
inc
ljmp
aas
mov
repnz
hlt
in
std
xor
out
clc
jns
jmp
aas
xchg
jo
loopne
ds
stos
lcall
clc
vmread
repz
outsb
pushf
dec
subb
add
xrelease
inc
and
cmp
leave
ds
jnp
repnz
sbb
je
sub
in
or
cmp
add
mov
fwait
fwait
lea
sahf
jecxz
into
stos
pop
add
pop
std
or
mov
subb
mov
stc
cld
and
and
subl
cmc
add
ljmp
inc
dec
adc
nop
mov
and
sbb
sub
int
add
mov
sbb
cmpsb
pop
shrb
inc
push
pushf
jae
push
psllw
in
sahf
scas
adc
insl
dec
ljmp
or
sbb
inc
mov
xor
push
std
lahf
aad
les
lods
xor
cli
mov
arpl
mov
movsb
mov
jno
pop
mov
sti
cltd
pop
pop
push
xor
fs
mov
mov
out
xor
mov
lods
pop
adc
test
xorl
xchg
pop
lods
mov
xor
and
test
aam
push
jg
jns
data16
popf
arpl
mov
je
jo
mov
add
and
pop
fiadds
je
enter
lods
icebp
and
std
sub
fs
mulb
or
adc
ret
outsl
xor
mov
adc
sbb
push
inc
pusha
push
jge
enter
pop
loop
aad
test
adc
add
dec
shrd
icebp
xor
jae
dec
scas
aam
out
dec
popf
or
mov
mov
repnz
pop
fimuls
xchg
nop
pushf
xor
sub
lock
les
int3
ud0
testl
xchg
jg
and
cs
pop
cmp
iret
int3
stos
add
mov
jmp
mov
pop
jg
lods
fwait
hlt
add
push
mov
lret
mov
inc
push
inc
jne
xor
cwtl
icebp
pop
sbb
add
or
push
aas
repnz
clc
sarl
mov
clc
daa
sub
jl
jecxz
imul
xor
jnp
xor
filds
sti
xchg
inc
push
stos
cld
test
pop
add
lods
decb
xor
cld
mov
inc
pop
mov
fisttpll
bound
jmp
in
add
xchg
pinsrw
mov
lods
ds
int
std
inc
inc
scas
movsb
add
jg
xchg
jle
dec
inc
mov
inc
lahf
aad
aad
adc
ljmp
xchg
fcomp
mov
sbb
push
or
loope
pushl
insl
add
fwait
aas
loopne
mov
mov
and
cmp
fmull
push
mov
mov
mov
inc
adc
jo
fwait
lea
rcr
mov
test
mov
decb
jo
jle
aaa
aam
and
jbe
outsb
inc
mov
jge
mov
call
mov
xor
jmp
adc
sbb
scas
pop
inc
nop
push
jns
aad
das
movsw
out
mov
mov
mov
sub
dec
mov
mov
adc
cld
ds
lods
push
ds
xchg
xor
inc
mov
and
and
flds
fcomp
jae
mov
and
and
pop
ret
ret
mov
sbb
cmpl
xchg
lea
push
ljmp
dec
mov
push
rcl
cs
adc
jo
aas
adc
icebp
sbb
xor
in
cli
stc
mov
cltd
mov
pop
pop
push
cmpsl
outsl
push
loop
mov
out
add
jo
mov
iret
fisubrs
mov
push
jg
jmp
cld
jp
std
mov
mov
jle
cltd
push
fldl
cld
int3
mov
pop
mov
push
mov
xor
adc
andb
inc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
xchg
push
add
mov
mov
popa
outsb
arpl
push
imul
mov
mov
add
sub
gs
jne
jb
outsb
je
push
pushl
push
jb
push
jne
je
inc
jns
pushl
outsl
insb
outsl
push
imul
je
je
jo
outsb
outsw
inc
mov
mov
jns
push
sbb
fldl
jne
outsl
in
outsl
cmp
push
outsb
pusha
outsb
fs
gs
js
jo
outsl
outsb
inc
imul
xor
test
and
inc
inc
push
cmovge
in
gs
jae
sub
push
mov
fistl
inc
rcll
insb
cmp
outsb
push
cmp
xchg
outsb
inc
insl
cmp
gs
jbe
xor
pop
cmp
insb
popa
dec
push
and
mov
add
enter
imul
add
outsb
fmull
push
add
repz
popf
pusha
pop
inc
pop
and
add
out
jne
jecxz
sbb
or
fwait
not
prefetch
sarb
nop
aaa
adc
ja
outsb
repz
push
ret
inc
fst
cmp
dec
insb
adc
loopne
cmpsl
fs
js
dec
pop
add
sbbb
pop
stc
adc
pusha
inc
push
push
mov
pop
fildl
dec
pop
lahf
addb
xchg
add
aaa
inc
ret
shrb
popa
les
push
movntq
sahf
jb
jb
daa
or
mov
aas
pop
leave
leave
jae
adc
pusha
out
push
in
in
icebp
add
pusha
lahf
or
or
bound
fs
dec
loopne
pusha
rolb
nop
mov
add
dec
xchg
mov
xchg
incl
pusha
mov
lea
movl
push
jmp
push
xor
jo
push
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
dec
add
xor
adc
