loopne
aam
test
mov
scas
push
outsb
test
xchg
mov
negl
in
mov
sbbb
adc
int3
movl
mov
pushf
jecxz
add
inc
jns
fdivp
mov
subl
cmp
ficoml
add
sbb
cmp
jle
out
loop
mov
ret
inc
mov
inc
cmp
pop
xchg
push
shlb
and
sub
adc
popf
sbb
inc
adc
pop
out
std
ret
inc
sbb
sub
cli
jns
orl
test
fs
rcll
mov
gs
stc
add
aad
dec
hlt
xchg
into
pop
pusha
push
and
cmc
add
jne
cwtl
adcl
adc
ja
and
roll
sub
insl
sub
sbb
mov
and
cmp
mov
insl
and
mov
jo
jmp
cmp
pop
enter
sbb
jnp
imul
stos
xchg
sbb
xchg
sub
mov
add
xchg
enter
sbb
gs
push
add
mov
inc
sub
jb
lock
mov
fimuls
imul
add
jbe
addb
mov
push
jl
loope
enter
mov
in
enter
mov
shll
mov
mov
fmull
add
mov
mov
xor
dec
enter
mov
push
rolb
or
xchg
sbb
vmread
pop
cwtl
or
mov
data16
push
rolb
mov
sbb
or
cmp
sbb
ret
jl
jo
add
mov
mov
enter
sbb
cmp
or
mov
and
mov
cwtl
mov
mov
sub
cmpsb
add
sbb
stc
add
mov
mov
stc
test
add
mov
mov
enter
sbb
rolb
or
xchg
jnp
fsts
cwtl
cmp
cwtl
or
mov
out
push
cwtl
or
xchg
sbb
in
insl
rorb
cwtl
or
in
sahf
sbb
enter
sbb
jge
cmp
sti
pop
lock
mov
sbb
fsubl
movsl
add
or
mov
mov
inc
add
call
insl
add
sbb
jmp
pop
enter
sbb
scas
scas
dec
loopne
pop
enter
sbb
mov
add
add
test
xor
mov
cmp
push
enter
mov
xchg
or
mov
call
adcb
dec
add
or
mov
add
int3
add
sbb
in
xlat
jle
jmp
ret
push
cmp
or
mov
or
out
xor
imul
ss
jne
sbb
fwait
sbb
bound
imul
cmp
jns
data16
fs
lret
sub
call
out
inc
xor
sub
adc
and
dec
rcr
mov
sbb
pop
je
xchg
push
jecxz
popa
imul
fcoms
jbe
pop
bound
outsl
cs
aaa
jecxz
xchg
popf
mov
addr16
lea
cmp
clc
adc
in
mov
shlb
mov
jb
push
mov
sbbb
lret
pop
negl
js
jno
in
jmp
jcxz
test
in
or
ret
fstpl
xor
mov
jb
mov
push
dec
inc
sbb
pop
cltd
sbb
adc
sbb
mov
shr
push
pop
xor
or
push
inc
ljmp
je
outsb
dec
fs
scas
jmp
sbb
inc
scas
xor
js
mov
je
stc
pop
roll
into
xor
test
test
mov
sbb
sti
repnz
aad
mov
cltd
iret
lods
cs
mov
mov
dec
dec
sub
dec
repnz
and
and
or
fidivrl
inc
adc
call
cmp
das
cmp
outsb
push
lret
add
std
insl
sub
int
enter
jmp
mov
jg
dec
push
pop
ret
inc
adc
outsb
push
fistps
dec
and
and
rcr
xchg
scas
adc
sbb
mov
adc
call
cltd
and
addr16
test
push
pop
add
lea
jne
lea
mov
bt
cmp
add
stc
cmp
cmc
bt
movzwl
sub
mov
pusha
cmc
add
cmc
mov
test
bt
stc
test
test
jmp
not
pushf
call
mov
in
xlat
adcl
int
mov
negb
inc
add
out
jnp
movsl
sbb
mov
addr16
push
mov
popa
fcom
in
mov
xor
mov
loope
repz
mov
xchg
mov
aad
push
shlb
mov
push
lea
jbe
shld
btc
bsr
shr
sub
dec
pusha
lea
mov
ror
mov
sar
bsr
add
bswap
rcl
or
shr
jmp
jl
bt
add
pusha
pusha
push
lea
jmp
test
jmp
push
pushf
pushf
movl
mov
pushf
pushf
lea
jmp
cmp
call
mov
pop
push
cmp
fisttpll
outsb
push
pop
and
jae
cmp
and
lods
inc
movsb
lret
iret
jns
xor
iret
subl
cmc
test
lret
int3
jne
mov
adc
sahf
in
cmc
pushf
add
lea
lock
dec
icebp
adc
lret
incb
xchg
imul
mov
or
cmp
js
rolb
outsb
pop
dec
lret
add
ss
ret
lea
std
shr
jl
das
std
test
sub
enter
adc
aad
jne
btc
mov
call
inc
jmp
movl
push
jmp
cmp
pushf
lea
je
stc
cmp
cmp
jmp
add
add
movb
cmp
cmp
add
stc
test
pushf
call
pushf
pushf
mov
stc
call
dec
repnz
in
cs
jne
std
mov
dec
outsb
sbb
movsb
out
xchg
mov
pop
adc
fmuls
cmp
jns
sbb
cmp
out
dec
dec
fdiv
push
sti
loop
and
fnstenv
add
fstps
aas
fnstsw
mov
jg
pop
insl
scas
inc
js
pop
pushf
fcmovnb
add
hlt
inc
pop
push
shrl
push
leave
repz
jl
lds
xchg
loop
inc
mov
mov
jae
into
fldt
rcrb
dec
mov
movsl
mov
push
in
mov
mov
fmull
lock
aas
into
sbb
jg
sbb
loopne
out
test
push
xchg
and
loopne
push
pop
fsubs
adc
jne
into
dec
scas
xchg
dec
lcall
or
jge
lcall
xchg
adc
cmp
jnp
pushl
pushf
lea
jmp
movb
cmp
add
jmp
lea
jbe
pushf
pushf
movl
call
call
pusha
movl
push
lea
jmp
push
push
pushl
lea
je
stc
cmp
jbe
pushf
lea
jne
push
inc
pusha
movb
inc
push
pushf
pushf
movl
lea
jmp
mov
movl
push
push
mov
pushl
popl
push
pusha
pushl
ret
call
jmp
pushf
mov
jmp
sbb
pop
dec
cmp
fiaddl
jne
popf
out
or
cld
mov
or
loope
jge
pop
mov
push
sbbl
ficomps
sbbl
add
lahf
sbb
test
add
lahf
outsl
sub
les
or
adc
cmp
mov
fwait
or
outsb
jmp
sub
out
add
insb
jno
lea
xchg
mov
xchg
add
repnz
sbb
cmc
enter
sub
lea
call
push
pusha
pushf
mov
mov
pusha
lea
jmp
int3
popf
jmp
add
cli
es
or
fsubl
and
dec
push
je
setbe
xor
mov
mov
hlt
int3
aas
mov
notb
inc
dec
jns
pop
andl
mov
stos
mov
fstpl
out
roll
mov
fmull
std
aaa
fnstsw
insl
imul
in
push
hlt
xchg
sub
dec
cld
shlb
lock
or
add
test
bswap
cmc
test
cmc
mov
test
add
bswap
add
clc
mov
pushf
test
jmp
lea
je
clc
stc
bt
clc
add
cmc
clc
cmp
call
je
call
fmulp
mov
lods
adc
inc
mov
arpl
aas
popf
arpl
xor
xchg
ret
cmp
mov
sbb
lret
aam
aam
sbb
cli
fisttpll
sbb
jp
jo
add
pop
into
ss
inc
mov
ss
cld
mov
dec
fidivrl
test
mov
xor
shll
mov
adc
push
and
inc
push
fwait
inc
cmp
out
jo
leave
lock
xchg
mov
dec
outsl
subb
xchg
push
jle
rorl
imul
jmp
pushl
popl
movzbw
push
pusha
not
setbe
movl
pop
jmp
xchg
mov
ja
jg
dec
mov
outsb
ja
jnp
das
cvtps2pd
jge
scas
mov
aam
lcall
aad
pop
into
jo
fcom
xchg
aad
add
ds
jmp
cmp
mov
jno
out
mov
stos
push
out
jge
lea
ja
stc
pusha
imul
cmp
add
pushf
pusha
lea
jmp
push
pusha
lea
je
pusha
test
test
cmp
call
ss
dec
cmp
enter
out
jne
cltd
movsl
jp
pop
xchg
xchg
lods
mov
data16
cmc
cmc
push
jp
repz
mov
adc
adc
je
pop
sbb
inc
push
add
fs
ret
dec
xor
clc
rcr
rol
neg
push
not
not
sar
not
add
adc
neg
sub
and
xor
dec
dec
inc
push
not
pusha
jmp
push
pushf
lea
call
pushf
pushf
adc
pushf
pushf
lea
call
call
push
sub
imul
push
and
push
fists
push
sbbl
push
inc
in
cmp
repnz
adc
fisubs
addl
mov
xor
add
imul
xchg
insb
or
ljmp
xor
pushf
test
testb
test
pop
int
mov
out
sub
movsl
mov
clc
and
mov
je
add
dec
stos
testb
mov
gs
ss
jae
lret
cs
je
stos
stc
call
pushl
pushl
popl
mov
pusha
pushl
ret
pmaddwd
cmp
out
stc
push
leave
aaa
xchg
pop
sub
mov
jecxz
leave
or
dec
xchg
inc
sahf
sbb
mov
adc
fst
mov
dec
mov
inc
dec
loope
stos
clc
inc
mov
sub
nop
pop
mov
adc
pop
push
jl
fs
jne
call
pushf
jmp
cmc
push
lock
cmp
dec
xor
push
sub
xor
mov
push
or
movups
dec
in
sar
lods
lcall
jmp
cmpsb
ja
mov
outsb
test
rclb
mov
pop
mov
pop
in
daa
sub
lahf
adc
in
and
mov
inc
jb
aad
adc
je
adc
fs
jne
or
mov
test
clc
test
pusha
add
pusha
movzwl
dec
bsr
bts
pop
mov
movb
add
jmp
push
pusha
dec
clc
call
pop
adc
dec
cmp
lret
sub
ja
pop
cmp
sbb
fdivl
icebp
shll
push
mov
dec
pusha
xchg
sub
pop
mov
movsl
popf
lods
xchg
sub
enter
loopne
pop
shrl
adc
jns
jne
cmp
push
sub
mov
pop
icebp
nop
push
pop
xchg
pop
push
shlb
bound
in
data16
mov
inc
sarb
cmpsl
jne
add
gs
arpl
dec
add
mov
in
mov
enter
aas
and
test
cmpsl
inc
push
std
mov
in
aad
jle
or
dec
and
dec
into
jnp
fldl
and
daa
aad
nop
arpl
xor
ds
lods
mov
popa
sbb
push
pop
pop
sarb
aam
outsl
or
jne
cmp
into
jnp
mov
mov
and
jae
popa
or
inc
cmp
and
pop
ja
fbld
pop
test
jnp
jp
ss
cmp
and
sti
adc
hlt
push
and
rcl
jle
pop
xchg
adc
sub
push
xchg
fdivrl
addr16
sbb
add
test
testb
mov
mov
push
stos
dec
push
fld
out
pop
movsb
jg
mov
jne
cwtl
mov
pop
lret
cmpsb
notrack
rcrb
adc
inc
add
ret
inc
sahf
imul
jno
jg
adc
ljmp
mov
mov
add
clc
pusha
mov
jmp
cmc
cmp
pushl
lea
ja
test
setae
adc
add
pushf
shl
xor
sub
mov
pushf
cmp
bt
cmc
cmp
pushf
pushf
lea
jb
jmp
ror
cmc
cmp
push
movsbw
lea
movzbw
movzbw
pop
mov
call
ror
stc
test
bt
cmp
pushl
lea
bswap
bswap
mov
call
mov
call
pushf
lea
jbe
bswap
sar
jl
clc
mov
shl
cmc
inc
add
shl
mov
setbe
stc
shrd
bt
add
sar
stc
movl
shrd
rcr
bsf
movsbw
mov
stc
call
out
lret
cmp
scas
or
into
or
add
repnz
jl
sbb
inc
scas
mov
js
lret
sbb
inc
mov
adc
mov
sbb
pop
push
je
pop
cwtl
aad
pusha
and
xlat
fwait
push
push
scas
mov
xlat
mov
add
add
xor
mov
fucomip
pop
test
mov
adc
pop
fisttps
pop
xor
in
fists
xor
sub
mov
fimuls
stos
mov
repz
fisttps
iret
fsubrp
push
bound
jp
and
loope
bt
xor
lea
pusha
inc
lea
jno
pusha
push
lea
call
push
pushf
adc
pusha
pushf
lea
call
pushf
push
call
pusha
lea
jb
cmp
cmpb
push
pusha
lea
jne
shl
ror
mov
pushf
add
clc
stc
lea
jbe
bt
movzwl
shld
mov
call
lea
jne
call
call
jg
inc
cmp
call
jne
jno
and
pop
lahf
sti
and
movsb
jmp
push
xor
insl
aad
retw
rorl
in
adc
arpl
ds
add
es
mov
mov
cmpl
and
js
or
ror
outsl
jno
jl
les
cmp
push
repnz
fisubs
jne
sub
fs
outsl
popf
mov
inc
inc
cmp
repnz
mov
push
mov
sub
andl
push
adc
dec
and
ljmp
mov
xorb
mov
stos
sbb
and
arpl
xor
out
fwait
ljmp
jmp
ret
ret
out
add
xor
enter
dec
add
xchg
jnp
orl
lods
in
sub
scas
pop
ds
jne
int3
dec
cmp
sub
ret
lea
jne
negb
inc
test
or
arpl
xchg
xor
sbb
sbb
add
mov
addb
add
roll
imul
mov
push
ds
cmp
sti
test
jae
decb
repnz
fdivs
inc
push
stos
jl
lcall
es
popf
int3
stos
ja
repnz
scas
or
rol
movsl
and
repnz
mov
pop
push
les
jae
add
stos
mov
cmp
frstor
xor
mov
and
test
and
repz
jae
pop
inc
ret
add
shrb
fidivrl
fwait
jae
sub
bnd
iret
in
jmp
xorl
repnz
xchg
inc
lods
test
or
sbb
leave
inc
adc
xor
or
decl
sbb
cmp
xor
ret
orl
jbe
hlt
int3
pop
push
sbb
in
int
test
popa
jecxz
sub
cmp
lods
xor
adc
test
aam
in
jnp
and
or
loop
push
loopne
mov
out
jbe
pop
sbb
andb
dec
insl
ffree
or
in
int
xchg
shlb
out
fcoml
icebp
mov
jae
ror
inc
cltd
cmc
inc
mov
cmpsb
arpl
lahf
lock
in
jmp
aaa
sub
xchg
cli
ja
add
and
mov
and
inc
push
sbb
inc
mov
jp
inc
test
shrb
dec
add
add
xor
xchg
mov
inc
pop
push
jle
fmull
xchg
stc
xchg
call
ss
mov
cmp
jbe
push
das
push
jns
jae
mov
xor
cmp
shll
dec
in
jg
clc
xchg
sahf
loope
jg
imul
sbb
jp
call
out
dec
stc
aaa
lret
jne
in
jmp
xchg
inc
popa
cmpsl
xchg
jecxz
jecxz
dec
mov
pushf
jmp
lea
je
pusha
stc
clc
stc
sub
jmp
jp
rolb
jnp
or
inc
cmp
xor
imul
pop
out
out
and
sub
fdivrs
mov
push
stc
mov
dec
test
jmp
test
mov
aad
sbb
add
jns
xchg
jecxz
sbbb
inc
pop
xchg
shl
dec
les
dec
in
jge
ror
mov
mov
dec
jge
push
inc
or
test
sub
add
cmp
fmuls
xchg
popa
bt
bt
call
inc
mov
lea
jmp
pusha
hlt
inc
cmp
inc
in
mov
sarb
fs
dec
jns
sub
dec
cmp
sbb
inc
sub
adc
ja
adc
xor
fcom
cli
ds
test
pop
in
repnz
cld
and
icebp
inc
lcall
sub
and
test
inc
and
push
jmp
lea
jae
pushf
pushf
lea
jmp
call
push
sub
inc
cmp
pop
test
int
mov
adc
imul
mov
mov
mov
ficompl
out
sbb
sub
inc
shl
xchg
mov
sti
andb
fmull
push
insl
mov
inc
inc
and
fidivs
cmp
dec
enter
popa
cmp
movsb
out
add
adc
jmp
mov
enter
bound
call
jmp
fwait
lods
add
xchg
and
dec
xchg
push
pop
loop
pop
outsb
aam
jge
ret
mov
push
pop
mov
inc
and
mov
sub
ljmp
mov
gs
in
and
push
outsl
jl,pt
popa
insb
sub
sbb
push
fdivs
jle
mov
test
jecxz
inc
cmc
mov
jmp
scas
sbb
inc
mov
jmp
adc
pop
mov
je
dec
push
pop
mov
pop
aas
sub
and
lret
dec
daa
pop
jl
outsl
and
pushf
lea
mov
call
xor
jmp
movzbw
bswap
lea
pushf
pushf
movw
lea
jmp
rol
jmp
call
cmp
jmp
lea
jne
rcr
pushf
and
ror
mov
shl
movsbl
call
call
movl
pushf
pusha
movb
pushf
lea
jmp
inc
loope
ds
in
mov
std
mov
daa
js
push
nop
nop
xchg
mov
leave
std
sti
cs
pusha
pop
adc
andl
xor
lods
pop
sbb
sbb
mov
and
fs
or
lcall
sarl
insb
clc
mov
sub
hlt
ja
adcl
and
push
aam
mov
cwtl
fdivs
lods
and
ds
or
dec
divb
inc
cld
mov
pusha
ficompl
or
inc
ljmp
dec
shll
sbb
jmp
pop
aaa
fisubs
dec
push
or
stc
cmc
movzwl
pushf
shl
ror
mov
movb
add
test
pushf
stc
pushl
mov
cmp
test
jmp
lea
je
pushf
call
movl
call
bt
pusha
cmp
pusha
lea
jns
pushf
pushf
lea
je
pusha
jmp
lea
call
rol
pushf
call
push
jmp
lea
ja
jmp
pusha
lea
je
push
add
stc
jmp
lea
ja
pushf
sub
shl
not
rcl
sub
add
movsbl
push
movsbl
mov
pushf
pushf
movb
lea
jmp
pushf
call
jmp
lea
je
clc
push
or
pushf
lea
je
movzbl
xadd
stc
cmc
sub
setle
mov
xadd
mov
sete
bts
or
shr
shld
pusha
mov
pushf
cmp
mov
or
jmp
pushf
bt
rol
push
pushf
call
push
cmp
push
movb
pushf
lea
jae
jmp
mov
in
dec
mov
and
xchg
dec
adc
fwait
mov
xor
sub
stos
ja
adc
xor
sub
inc
dec
mov
add
ficomps
stos
mov
mov
and
inc
sbb
jns
mov
shrl
and
movw
pushf
lea
jmp
stc
ror
clc
test
add
stc
test
mov
push
jmp
push
push
pushf
mov
lea
call
call
bts
bsf
sub
add
add
sar
bts
mov
cmc
pushf
cmc
add
pusha
test
mov
shrd
shl
rol
mov
jmp
pushf
mov
jmp
bt
call
stos
lods
add
cmp
xor
mov
inc
mov
jecxz
jae
jne
sub
es
dec
xor
or
into
push
inc
out
or
xor
gs
imul
adc
add
mov
testl
mov
jge
add
pop
push
repz
mov
xchg
cmc
enter
push
mov
pushf
pushf
test
movb
lea
je
clc
bt
test
add
pusha
pusha
push
clc
cmp
pushf
jmp
mov
pushf
lods
cmp
jmp
pushf
pusha
call
lea
jb
stc
cmc
clc
cmc
cmpb
jmp
push
mov
call
pushl
lea
jb
push
bt
cmp
call
bswap
setb
pusha
lea
lea
lea
movzwl
pushf
push
lea
not
lea
jo
lea
movzbl
mov
jmp
mov
in
fwait
ret
jmp
push
scas
push
mov
mov
loope
xchg
xchg
insb
imul
pop
pop
ret
or
jbe
out
jmp
cmc
cmpb
repz
shrb
xchg
rorl
roll
into
push
cmp
lcall
pop
xor
pop
pop
into
push
cltd
inc
mov
pop
lods
add
add
addb
add
sbb
add
pop
mov
adc
icebp
inc
sbb
fistpll
push
add
fcoms
add
add
add
in
jne
fildll
sbb
jge
std
sub
mov
scas
inc
inc
into
and
mov
pop
push
mov
push
and
pusha
and
dec
cmpsb
mov
push
in
jmp
mov
mov
rclb
jnp
pushl
push
dec
pop
inc
dec
push
fs
dec
xor
mov
shll
int3
js
loopne
xchg
bound
lds
ret
movzwl
bsf
shr
mov
pushl
stc
call
pushl
lea
jge
jbe
sbb
sub
push
stc
mov
sub
rcr
or
shl
lea
mov
cmp
add
inc
xor
cmc
add
shr
bts
sub
bts
and
mov
not
add
movzbw
pusha
jmp
jmp
pusha
movb
mov
pushf
lea
call
jmp
lea
jb
pushf
pusha
pushf
pushl
ret
ror
jmp
call
pusha
movl
mov
mov
lea
jmp
mov
pushf
setns
pop
bswap
lea
pusha
jmp
in
inc
cmp
in
rcr
inc
jo
xor
mov
mov
test
xchg
and
push
mov
pop
dec
cltd
push
inc
loope
sbb
nop
lods
pop
jecxz
aam
daa
inc
lret
lock
and
aad
cld
and
push
das
in
adc
inc
and
movw
push
pushf
pushl
ret
lea
je
shrd
sub
shld
add
cmc
lea
mov
pusha
cmc
add
push
mov
stc
shld
btc
jmp
xchg
scas
aaa
cmp
push
sub
adc
inc
add
mov
dec
cmp
or
int
sbb
or
rolb
xor
scas
pop
test
mov
xor
push
and
jl
mov
jl
out
dec
cmpb
popl
test
jecxz
adc
xchg
aas
outsl
shll
daa
mov
mov
or
and
sbbl
sbb
cmp
call
and
sbb
push
sub
sbb
mov
push
ds
push
or
cld
fstps
add
loop
fs
sbb
sbb
mov
mov
dec
aaa
push
push
lea
je
test
cmp
pushf
lea
je
pushf
mov
lea
jmp
pushf
clc
add
pushf
pusha
jmp
pushf
mov
push
mov
pusha
pushf
lea
jmp
clc
add
pusha
pushl
mov
mov
dec
jmp
es
xor
adc
lahf
popf
pop
push
or
add
fiadds
mov
das
push
fsts
and
jl
sub
mov
pop
stos
pop
sub
cmc
pushf
pop
es
and
pop
xor
pop
movsb
icebp
lahf
fwait
sbb
out
or
jns
push
test
mov
sub
dec
aas
insl
andb
js
cli
lahf
jecxz
test
nop
pop
imul
pop
mov
imul
cli
mov
cmp
inc
stc
or
xchg
jnp
loope
mov
out
pop
inc
repz
jle
js
movsl
push
adc
xchg
mov
mov
cli
test
in
int
call
mov
inc
repz
iret
jle
or
pop
lret
data16
sbb
xor
cmp
xchg
in
sbb
push
push
shrb
mov
in
outsb
xcrypt-ecb
cmpsl
cmovo
mov
stos
pushf
xchg
nop
mov
imul
push
movsl
xchg
mov
aam
lods
mov
mov
shlb
or
into
or
sub
fucom
dec
clc
dec
out
push
test
dec
pop
pop
pop
sub
pop
sbb
add
daa
ficoml
pop
lock
pop
lret
leave
fisttps
jg
push
faddl
sbb
inc
mov
lock
cmp
or
lock
mov
ret
cmp
pushf
cmp
cld
cmp
cli
loope
shlb
xchg
cmpsb
mov
fxch
clc
xor
push
jmp
call
test
mov
mov
push
clc
cmc
cmpb
push
lea
jne
sar
das
mov
xor
btc
aad
bsr
mov
push
shl
dec
add
test
cmc
mov
pushf
pusha
clc
test
call
jne
call
cmp
add
cmc
clc
movzwl
bsf
lea
btc
dec
mov
jmp
mov
pusha
pushf
pushf
movw
lea
jmp
cmc
cmp
add
push
pushl
lea
jmp
mov
xor
in
arpl
dec
ljmp
and
inc
ret
inc
aam
stos
push
fmulp
ret
pop
inc
roll
and
jle
std
mov
ja
gs
or
push
out
stc
in
mov
jge
push
jo
pop
cmc
ja
and
jno
divb
add
shl
or
ljmp
repnz
xor
rorl
xor
jmp
xchg
cmp
mov
fnstcw
jne
loopne
outsl
ret
pop
and
xchg
jge
mov
subb
je
nop
ret
add
ljmp
push
fcomi
paddb
push
add
je
inc
mov
xor
pop
cmp
dec
pop
inc
and
fs
cmp
cmp
add
sahf
sahf
scas
scas
nop
adc
insl
imul
fadd
mov
jl
fs
and
xchg
sbbl
lahf
pop
fs
adc
lods
xchg
clc
cmp
dec
icebp
fdivrs
int3
ss
sbb
in
push
push
and
dec
xchg
jno
daa
loopne
cs
sub
xorl
sbb
mov
add
fs
and
call
xchg
imul
sbb
sub
add
mov
mov
dec
add
out
loop
dec
push
mov
nop
inc
sub
pushf
jp
fmull
push
lods
cwtl
sub
pop
pop
lret
jecxz
fistpll
arpl
jae
push
mov
mov
jge
adc
pop
fisubrl
repnz
sub
ja
mov
fnstenv
fcomp
scas
scas
xor
mov
je
aad
bound
pop
les
adc
daa
pop
push
ficoms
and
jo
cwtl
call
jnp
loopne
sub
mov
and
lods
popf
or
out
inc
insb
jecxz
adc
pusha
jmp
sbb
aaa
dec
das
test
pop
jg
mov
mov
pop
inc
loope
xor
mov
pop
push
mov
pop
add
jecxz
push
mov
cli
jo
aad
aas
mov
stos
ljmp
and
lahf
inc
adc
sub
aam
adc
dec
mov
mov
and
jne
mov
xchg
loop
add
movb
lods
psrld
add
clc
in
xchg
push
dec
jae
or
lret
xchg
cmpsl
push
mov
or
cs
add
int3
lret
mov
test
jb
ret
cmp
sbb
fistpll
lock
sarb
mov
stc
push
jmp
out
in
lret
aad
push
test
je
jg
push
add
stos
out
mov
daa
sub
fsubrl
dec
mov
in
fstpt
pop
ja
imul
sub
dec
pop
jge
and
sbb
js
mov
cmp
pushl
mov
outsl
pushf
pop
icebp
add
insb
imul
push
std
int3
cmp
ljmp
push
out
int3
mov
fildl
test
fists
ja
dec
cmpsb
cmp
dec
and
icebp
cs
inc
sub
out
fdivrl
jmp
push
jnp
scas
jb
add
jb
cs
test
ja
gs
pop
out
cmp
mov
aam
add
cmp
jp
ljmp
xor
int
and
cmpsl
mov
sub
aaa
xchg
mov
stos
mov
pusha
out
mov
jmp
pop
adc
cmp
sahf
jae
imul
call
dec
ss
mov
ljmp
pop
gs
leave
movsl
mov
ficoml
mov
pop
test
inc
adc
int3
les
add
nop
aaa
int3
std
sub
dec
push
mov
jmp
mov
mov
dec
nop
out
dec
stos
pop
out
sbb
add
and
outsb
jecxz
loop
add
lods
cmp
lock
pop
adc
and
jmp
insb
dec
sub
jmp
pushf
test
and
adc
cmp
cmp
push
jae
fwait
out
mov
scas
jbe
mov
mov
mov
pop
out
add
cmpsl
mov
cwtl
rcrl
in
lret
add
mov
add
cmp
outsl
mov
push
daa
jg
sbb
xor
bound
xchg
dec
mov
ja
sbb
out
add
pop
ss
mov
mov
xlat
cmc
fstpt
pop
subl
sbb
lahf
fisubrl
mov
cmpsb
je
mov
stc
daa
push
clc
adc
insb
leave
testl
pop
jmp
addr16
push
mov
cmpsb
xchg
insl
daa
push
cmpb
sbb
fsts
pop
xor
pop
jo
adc
cmp
es
and
ljmp
sub
gs
and
dec
xorl
mov
test
mov
dec
or
iret
rorl
pop
fsubr
dec
mov
sets
add
stos
idiv
push
mov
aam
cmp
cmp
sti
lds
bound
mov
cld
imul
out
and
cmpsl
sub
cltd
movsb
outsl
ljmp
in
pop
in
xor
xchg
sbb
cld
rcll
pop
xchg
clc
pop
ss
test
hlt
push
lods
push
cs
scas
xchg
loope
loop
push
fwait
cmp
mov
jns
mov
lahf
stos
incl
enter
add
cld
negb
sub
fwait
inc
fs
cmpsb
and
mov
jbe
mov
lock
cmp
das
sub
repnz
cmp
xlat
orl
add
popa
stc
add
and
cs
enter
lods
push
bound
fisttps
jp
repnz
pop
int
int3
adc
clc
add
sahf
rcrb
and
cmp
sub
mov
sub
adc
or
mulb
ficoms
xchg
inc
push
or
fcomps
pop
jo
inc
or
cli
mov
cs
xorb
shrb
loope
clc
add
lods
adc
inc
fists
add
adc
fsubrl
add
add
add
pop
add
add
lods
adc
xchg
dec
sbb
dec
fcoms
add
add
inc
and
inc
fbld
pusha
pushl
lea
jmp
lea
jne
setae
pushf
pushf
pushfw
popw
mov
mov
call
jne,pt
sub
mov
pop
mov
xor
roll
xor
stos
incl
mov
mov
push
push
out
sub
lods
out
int
inc
xor
push
testb
repz
enter
push
pop
dec
insl
jns
push
das
lock
jnp
call
push
jmp
pop
push
push
pusha
pushl
ret
in
hlt
sub
in
inc
insb
pop
out
sbbl
bswap
imul
xchg
or
mov
xchg
push
aaa
push
cmpsb
ja
inc
jg
xchg
fdivs
mov
dec
mov
xchg
pop
movsb
cmpsl
pop
lods
outsb
aam
clc
push
push
mov
mov
or
adc
xor
pushw
popfw
call
cmc
clc
pusha
sub
pushf
cmp
movb
jmp
call
call
mov
call
cmp
jmp
push
dec
jmp
call
and
call
lea
pushl
mov
movb
jmp
and
xchg
sub
in
test
xchg
mul
fs
ljmp
sub
mov
inc
xor
fucom
pop
or
pop
cmp
sub
and
mov
inc
adc
add
loope
xchg
cmpb
dec
cmp
dec
leave
sub
test
pop
jecxz
daa
or
das
pop
push
aam
stc
cmp
cmpl
jne
test
or
lret
stc
cmp
cmpsl
je
inc
mov
call
pusha
call
lock
sub
in
daa
or
add
xchg
or
imul
fisubrs
sbb
cli
ret
out
cs
inc
cmp
popf
mov
inc
aaa
xor
inc
xorl
sbb
leave
movsl
sub
mov
leave
pop
or
pop
inc
sbb
jmp
stos
mov
pop
sti
dec
ret
xor
aad
sbb
pop
das
dec
inc
ss
int
cmp
or
adc
iret
or
xchg
xor
imul
test
xchg
icebp
mov
andl
mov
pop
adc
loopne
sbb
addr16
or
mov
iret
pop
shl
dec
sub
cmp
test
add
test
jmp
push
mov
lea
ja
pusha
add
pushl
cmp
or
push
pushf
pushf
pushf
lea
je
cmc
cmp
call
test
sub
in
xchg
add
addps
mov
and
mov
jge
mov
push
icebp
push
stc
loopne
mov
push
lret
xor
jb
inc
pusha
lock
sbb
or
mov
fmull
xor
mov
dec
mov
inc
mov
subb
movsb
sub
popa
inc
cmp
push
add
xchg
jb
daa
or
adc
pop
insl
mov
mov
scas
sub
mov
fwait
add
xchg
in
push
xor
test
popf
stos
cmp
mov
cli
call
pushf
movw
lea
ja
pushf
imul
jmp
cmp
push
pushf
lea
jns
push
lea
jb
cmc
stc
cmp
pushf
mov
lea
ja
clc
pusha
add
add
cmc
or
jmp
pusha
movb
push
bswap
pushf
mov
lahf
lea
pushl
mov
movl
pushf
call
xor
cmp
mov
repnz
push
jmp
call
sub
jmp
bt
not
pusha
mov
pushf
push
ror
cmp
cmp
call
lea
jb
pushf
jmp
call
movb
xchg
pop
pop
pushf
jmp
add
dec
gs
popa
addr16
outsl
js
add
add
pushf
movl
push
movb
movb
movl
pushf
pusha
pusha
movb
lea
jmp
mov
stos
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
imul
cmp
jno
sub
or
test
sub
push
hlt
repnz
jg
ss
or
movsb
xor
int
clc
add
imul
imul
dec
and
roll
cmp
mov
mov
enter
mov
cmp
or
or
sbb
mov
aam
and
pushw
neg
sbb
mov
not
bt
bt
mov
ror
stc
clc
cmp
jmp
std
jecxz
daa
cmp
aam
stc
jmp
xchg
inc
pusha
in
mov
inc
cld
mov
push
mov
shl
pushf
stos
cmp
rolb
sbb
std
dec
push
cli
inc
addl
les
sbb
xor
inc
mov
mov
mov
insl
xor
andl
jnp
aas
scas
sub
and
mov
push
and
ss
clc
stos
xor
loope
push
mov
test
ret
and
pop
push
mov
in
and
adc
enter
or
add
mov
shrb
shll
aaa
fiaddl
outsb
pop
loop
mov
aad
pop
out
or
test
pop
pusha
lock
sbb
xor
pushf
inc
mov
pushf
pushf
lea
jmp
lea
ja
pusha
call
pushf
lods
movb
pushf
dec
movb
clc
test
neg
jmp
cmp
call
xchg
pop
es
mov
stc
lods
jp
xor
mov
icebp
inc
and
and
gs
jge
test
inc
or
stos
add
sbb
pop
loope
xor
pop
sbb
mov
cli
push
jge
inc
xchg
jbe
xor
clc
jne
jo
and
adc
int
das
adc
inc
ja
push
movsl
hlt
pop
push
jl
add
sbbl
fs
jne
pushf
pushl
stos
mov
push
pushf
lea
jmp
lea
jne
shld
xor
rcr
call
jg
fsubl
xorb
push
jo
sub
aam
subb
cmp
mov
inc
cmc
mov
xchg
cmp
out
ja
int3
sahf
movsl
mov
push
pop
cmp
fmull
push
cmp
mov
mov
fdiv
test
sbb
lahf
rclb
mov
outsl
sbb
cmpsb
mov
mov
not
mov
push
lea
call
call
cs
cmc
and
in
inc
stos
lods
or
push
gs
lret
test
gs
and
leave
insb
dec
mov
jge
cmp
cmp
or
shrl
mov
in
push
mov
adc
sbb
lret
mov
es
pop
stos
stos
insl
sbb
and
jae
sub
push
fdivl
dec
jg
dec
cld
adcl
and
jno
pusha
movl
call
mov
sub
movb
mov
call
not
pusha
ror
clc
call
xchg
mov
and
pop
cmpsb
sub
movsb
add
jae
xor
mov
cmp
xor
sahf
fldcw
pop
jecxz
sub
and
xchg
pushf
mov
mov
sub
add
push
shll
dec
imul
mov
mov
xchg
lahf
dec
ljmp
pop
and
jb
sti
inc
inc
movsb
xor
lods
clc
nop
pop
jl
test
mov
inc
movd
inc
xchg
or
decl
pop
stc
in
xor
fwait
lock
fwait
jle
jl
into
loopne
in
push
sahf
bound
test
aas
pop
test
loope
xor
mov
lret
xor
imul
and
lcall
mov
lods
fimuls
and
jae
fs
icebp
ljmp
or
in
lret
xor
out
inc
jbe
outsb
aaa
adc
adc
cmpsb
add
and
inc
outsl
sbb
xchg
mov
mov
or
dec
dec
enter
xchg
push
in
or
fadds
cmp
cld
imul
inc
xchg
cmp
outsl
sub
xchg
and
dec
xchg
adc
cs
jbe
xchg
adc
arpl
int3
repnz
and
mov
jns
xor
into
sub
sub
mov
push
push
pop
jmp
movsb
push
push
lea
je
pushf
mov
mov
call
popf
cmp
and
in
and
pop
mov
mov
std
or
imull
push
sub
ret
push
rcrl
cmpsb
ja
cli
sbb
jmp
add
and
in
out
mov
cltd
out
lods
sbb
dec
add
test
mov
dec
mov
into
or
cmpl
add
test
add
add
mov
cs
pushl
ret
movb
inc
movb
lea
jmp
push
movl
pushf
pushf
jmp
push
lock
std
std
mov
icebp
ret
jb
sub
and
pushf
mov
pop
pop
ss
xchg
pop
in
sub
icebp
mov
and
push
pop
movl
mov
or
pushf
jno
scas
sbb
movsb
hlt
je
cmpsb
js
in
xchg
push
mov
je
dec
xchg
mov
cwtl
and
inc
enter
fmuls
cli
cmp
cld
pop
pushf
pusha
push
jmp
pusha
add
call
mov
inc
and
in
negl
enter
dec
lods
sahf
insl
mov
icebp
outsb
loop
popa
add
in
insl
add
clc
inc
sub
push
leave
pop
fidivrs
ja
xchg
adc
scas
movsl
repnz
cmpsb
inc
outsl
mov
pop
inc
mov
sub
ds
xchg
inc
lcall
jmp
enter
cld
clc
pop
adc
or
push
adc
mov
sub
jne
mov
popa
enter
cmp
cltd
loope
xchg
push
sbb
and
jne
pusha
pusha
push
call
arpl
xchg
and
in
insb
test
nop
fwait
push
sbb
jp
mov
popa
mov
cmp
insb
add
xchg
jnp
cmpsl
mov
jge
push
aas
inc
jmp
punpckhbw
push
outsl
shlb
rcll
jb
test
sub
dec
mov
pop
decb
in
jns
ficoms
aam
jb
xchg
sub
xchg
mov
loope
scas
sub
sub
or
fmul
testl
push
call
pusha
test
pusha
or
call
xor
stc
cmp
repnz
push
lea
jne
neg
mov
shr
rcr
sub
ror
mov
cmc
cmc
pusha
sub
jmp
movb
inc
jmp
pushl
lea
jae
xchg
cmp
mov
ror
sub
mov
movsbl
movzbw
bt
mov
jmp
pusha
movl
push
movb
movb
movb
lea
jmp
lods
stc
sub
stc
clc
call
pop
mov
mov
das
aaa
gs
and
mov
in
jmp
ret
push
lcall
aad
js
rcrl
or
test
pop
fnsave
fcom
data16
pushf
lea
ja
rep
lea
mov
pop
push
lea
jmp
and
sbb
rcr
adc
sub
movsbw
pusha
movsbw
xchg
mov
pop
call
shl
ror
add
cmp
sub
xor
shr
and
sar
call
aas
push
pop
cmp
insl
inc
mov
jb
aad
jge
dec
nop
scas
xchg
xor
cmp
or
and
dec
mov
and
xor
stc
imul
push
rcrb
test
movsb
or
jp
ja
push
add
loop
adc
add
clc
jmp
insb
pop
jno
out
cmp
inc
xchg
adc
fiaddl
jl
in
push
and
ret
and
call
pushl
popl
pushf
pushl
ret
push
mov
call
xor
in
or
ja
lods
cltd
cmp
xor
pop
dec
cmpsb
push
xchg
daa
mov
jmp
stos
push
arpl
cvtps2pi
sub
stos
sub
cmp
inc
shrl
call
inc
popf
mov
cmp
test
roll
mov
mov
loope
stos
sbb
andl
pushf
jae
mov
fdivrs
inc
pop
ljmp
call
adc
cmp
push
dec
mov
stc
mov
xchg
ds
int3
int3
lcall
dec
divb
bound
js
ljmp
add
aas
add
out
cmpl
shll
xchg
iret
xchg
lock
por
sbb
mov
add
or
push
cmp
sar
addr16
test
cmp
test
add
fbld
mov
aas
jae
lahf
mov
and
fists
push
pop
in
movsb
mov
js
mov
mov
push
rorl
popf
leave
mov
or
add
mov
jge
xchg
push
xor
lret
lret
rcrl
jo
mov
pop
je
xlat
jne
cmp
inc
cwtl
pop
add
sarb
cmp
jb
sti
jns
jb
stc
mov
push
faddl
shlb
dec
ljmp
cmc
push
mov
call
cmp
cmc
cmp
jg
add
push
lea
jne
call
mov
test
mov
add
call
mov
shl
bt
bsr
sub
jmp
pushf
lea
jbe
push
bts
mov
add
shrd
movzbw
shld
add
and
mov
clc
stc
dec
add
pop
rcr
movl
cmp
clc
stc
shl
mov
clc
cmp
pushf
lea
jbe
xchg
sub
bswap
not
rcr
mov
lea
neg
xchg
mov
clc
or
cmc
add
shr
bt
shr
shr
shrd
sar
bsf
mov
rcr
lea
cmp
add
jbe
movzbw
push
movsbl
mov
call
movb
mov
lea
ja
push
lea
jb
stc
pusha
cmpb
mov
lea
jnp
pusha
movb
lea
jne
neg
or
shr
movzbl
mov
stc
push
mov
add
bt
bt
movzwl
btr
xor
adc
mov
test
cmc
bt
bt
add
pushf
mov
cmp
clc
bt
test
jmp
je
negb
cmp
inc
in
mov
arpl
repnz
fs
mov
pop
jbe
in
inc
outsb
mov
and
insl
lret
jbe
loopne
mov
imul
pop
enter
stc
aaa
dec
xchg
stc
imul
adc
xchg
and
sbb
orb
jmp
stc
cmp
cmpb
pushl
lea
jne
xor
add
mov
pusha
pushl
jmp
leave
movsb
mov
cmp
mov
jns
dec
ds
cmc
mov
aas
adc
aas
sub
ret
add
jns
push
cmp
cmp
sar
inc
cmp
dec
mov
and
sbb
dec
dec
mov
gs
mov
mov
add
call
cmp
stc
add
call
mov
mov
push
lods
stc
cmc
test
movw
sub
pushf
bt
rol
pusha
not
bt
bt
bt
call
fs
outsb
sbb
in
lret
jne
mov
inc
outsl
das
stc
mov
jnp
test
xchg
ret
outsl
or
test
fs
jno
inc
leave
fidivs
fildl
and
and
xor
cmp
add
mov
bound
mov
sub
scas
inc
fidivl
push
cltd
sbb
negb
mov
push
add
xchg
movsb
divl
incl
ret
pushf
mov
je
lret
or
add
mov
stos
jg
jnp
in
or
mov
jo
test
sbbb
jmp
push
jne
test
jmp
into
xorl
pop
test
or
pushf
bt
cmp
pushf
pusha
pushf
lea
je
push
pusha
pushf
pushf
lea
jmp
fstl
pop
fnstcw
xchg
and
lahf
lods
mov
hlt
rorb
xor
xor
cmp
push
sbb
xor
aam
negl
xor
repnz
add
push
add
cli
cmpsb
mov
cmp
sbb
pop
xor
ja
xlat
xchg
sti
jcxz
sub
notb
mov
mov
jle
cmp
test
inc
or
sub
push
mov
leave
mov
add
lds
dec
divb
and
and
adc
daa
and
lods
push
or
clc
pop
push
jbe
sub
mov
subb
sub
das
adc
adcb
mov
cltd
and
aad
mov
xchg
add
and
andl
cmp
xor
jg
jne
mov
nop
or
nop
ficoms
out
pop
call
pop
inc
dec
js
imul
jg
mov
jp
xor
and
jl
sbb
int3
xchg
je
lds
pusha
sahf
xchg
mov
mov
and
mov
ljmp
pop
pop
fldcw
mov
xor
rcrl
xchg
cltd
inc
adc
std
shlb
sbb
cmp
enter
call
push
mov
jae
dec
inc
sub
and
test
lahf
sbb
sbb
pop
sub
mov
cmc
in
movsl
lods
push
adc
inc
test
cmpsl
aas
xchg
xchg
mov
add
outsb
out
cmp
push
jg
push
pop
dec
stos
loope
ficompl
repz
mov
fmul
adc
push
pop
mov
push
imul
iret
dec
shlb
push
mov
xchg
loop
in
jo
and
fisubl
test
test
mov
imul
fwait
dec
cmp
mov
je
sbb
lahf
in
std
pop
mov
ret
sbb
sbb
je
int
mov
sbb
mov
rolb
fcmovne
pop
call
mov
call
in
sbb
pop
cmp
add
ficoml
int
out
pop
sbb
sti
jbe
stos
mov
jmp
xor
pop
stos
xchg
push
aam
test
gs
jnp
daa
adc
mov
out
outsb
push
push
test
testb
push
fdiv
outsb
sarl
mov
mov
mov
aaa
jp
lret
mov
movsl
bound
mov
addr16
das
mov
fucomi
in
test
push
ds
jno
fdivs
push
mov
mov
sbb
inc
cmc
sub
clc
jmp
and
shl
add
pusha
mov
pushf
pushl
clc
test
jmp
add
push
hlt
outsb
lock
push
in
insl
xchg
repnz
xchg
adc
lea
in
jl
adc
stos
xor
fcompl
inc
adc
jmp
test
mov
fsubs
aam
sub
stos
ja
push
dec
das
lock
rcl
iret
push
mov
mov
cs
push
loope
mov
sahf
sub
jo
mov
dec
aam
clc
shl
jmp
movl
push
mov
movb
pushf
pushf
pushl
ret
dec
hlt
pusha
push
cmp
flds
jae
sahf
push
push
ja
outsl
stc
cmpsl
mov
mov
jns
loope
xorb
mov
push
scas
pop
or
xchg
add
filds
loop
fiadds
int3
in
stos
sub
mov
dec
out
ret
dec
sahf
imul
adc
shrb
out
fwait
in
mov
imul
or
fisttpl
inc
inc
push
pop
aas
pop
mov
inc
lds
add
andb
icebp
jno
outsb
cld
jecxz
aaa
in
pushf
cmp
pusha
push
pushl
lea
ja
bt
stc
call
add
push
test
push
pushf
call
bt
cmc
cmp
push
pusha
pushf
lea
jae
push
call
pushf
jmp
pop
lea
movsbw
movzbl
mov
jmp
cmp
lds
pop
test
leave
aad
loop
add
jge
outsb
mov
sbb
cmp
popa
cmp
aam
mov
sbb
je
inc
sahf
sbb
mov
push
xorl
jns
js
jg
inc
xorb
xchg
inc
xchg
test
scas
push
insb
and
test
add
fiaddl
cwtl
ss
jg
mov
sbb
jbe
insb
mov
ss
jle
movups
ljmp
mov
lock
push
pushf
xor
lea
jl
push
inc
cld
not
cmc
pusha
add
jbe
popfw
push
inc
call
jmp
pop
popa
pushf
adc
in
popf
add
jae
and
mov
push
jl
dec
adc
mov
lods
mov
lds
outsl
lret
cld
data16
xchg
jne
bound
into
xchg
cmp
cmp
add
xchg
push
fisttpl
lods
std
cmp
adc
cld
rolb
test
adc
js
stos
or
sbb
jae
shlb
xchg
ret
adc
in
cmp
cmp
lock
sbb
push
rclb
adc
cld
push
sub
mov
sbbb
rcrl
les
dec
push
push
fwait
popf
pop
outsb
inc
add
stos
ds
test
mov
xchg
movsl
mov
push
test
das
dec
jp
mov
or
mov
lahf
lods
fnstsw
and
mov
jmp
addr16
repz
or
xor
push
mov
repnz
shlb
and
lods
jnp
mov
sub
and
push
rolb
fstpl
xor
mov
movl
pusha
pushf
push
lea
jmp
jmp
pushf
movl
jmp
and
movsb
mov
push
pop
icebp
adc
cmpsl
pop
xlat
xchg
inc
and
sarl
mov
lock
into
test
push
lcall
cli
mov
or
popa
into
xor
arpl
mov
add
pop
mov
sub
adc
dec
or
decl
cld
adc
pop
lret
add
aam
add
mov
adc
in
sti
and
daa
call
cwtl
decl
xchg
pop
lret
inc
in
loop
gs
outsl
insl
pop
addr16
test
test
cwtl
into
sub
adc
inc
ror
addb
hlt
shrb
mov
pop
sbb
fists
fwait
cmpsb
mov
cmp
xor
pop
jg
pop
fiaddl
mov
pusha
mov
fsubs
dec
leave
stos
pop
push
in
jge
adc
mov
mov
cs
pop
xlat
aam
loop
inc
popa
icebp
hlt
int3
push
xor
ja
out
or
sbb
mov
fwait
shrl
cmp
roll
jle
xchg
bound
adc
or
dec
inc
mov
mov
mov
mov
jbe
sti
push
pop
fdivrl
mov
call
push
lcall
popl
mov
in
sbb
gs
or
jbe
stos
xchg
lds
loope
mov
pop
lcall
mov
adc
popa
aam
rcl
mov
push
mov
inc
mov
dec
stc
mov
test
sahf
loopne
xchg
pop
mov
test
and
jne
movsbw
seta
pushf
call
mov
mov
cmp
mov
pop
sub
ficoms
cmp
fimuls
lea
in
push
xchg
and
enter
lds
add
jmp
in
outsl
pop
fsubrs
stos
add
mov
popf
or
out
enter
jae
pop
int
cmp
sbb
fs
push
or
fisubrl
xchg
and
mov
and
lods
mov
pushf
pusha
mov
movb
pushf
pushl
ret
sbb
clc
mov
bound
stos
rcl
nop
push
gs
sbb
fcomps
jns
mov
xchg
outsb
repnz
pop
test
jg
dec
subl
jns
aas
mov
adc
bound
sbb
push
xor
pushf
xor
and
leave
push
test
rcrl
jb
dec
sub
mov
mov
mov
cmc
xchg
inc
movb
pop
lahf
lret
and
mov
jne
mov
movzbw
mov
lahf
movb
movsbl
cwtl
mov
mov
push
lahf
call
movzbw
not
jmp
pusha
pushf
lea
jb
push
test
movb
cmpb
pushf
movb
mov
lea
jne
and
cmc
bsr
mov
push
add
cmc
clc
test
movzwl
or
not
pushl
mov
pushf
call
clc
test
jmp
push
lea
jbe
shld
sub
shr
shr
mov
sub
ror
pushf
mov
mov
cmp
bsr
rcr
mov
add
push
shr
and
mov
cmp
add
pop
pusha
movzbl
mov
mov
mov
not
call
call
inc
pushf
adc
pushf
movb
pushf
pushl
pushl
ret
lea
call
pusha
cmp
pushl
pusha
movb
pushf
lea
jae
bt
clc
call
add
add
add
mov
add
pop
mov
adc
icebp
inc
sbb
fistpll
push
add
fcoms
add
add
add
add
lret
fildll
call
movw
movl
pushf
push
mov
pushl
popl
mov
pushf
movw
pushf
pushl
ret
mov
lea
call
pusha
mov
call
or
jmp
inc
pushf
jmp
jmp
jmp
jmp
add
inc
js
je
jb
arpl
jae
pusha
cmc
shl
pusha
push
movw
lea
je
pusha
pushl
jmp
movb
lea
je
jmp
test
add
cmp
clc
cmc
mov
cmp
test
call
adc
pusha
jmp
mov
movb
mov
mov
pop
bswap
not
pusha
mov
movsbw
call
cmc
add
clc
movzwl
cmc
mov
cmc
bt
add
stc
jmp
loope
add
cmp
xor
jbe
subb
mov
or
shll
pusha
sub
dec
frstor
shll
stos
dec
pop
cltd
negb
out
nop
das
ja
dec
mov
inc
fistpll
dec
test
cmp
rolb
xchg
xor
bt
or
push
pushf
lea
jne
sar
mov
pushf
test
or
call
rol
bt
bt
jmp
or
jmp
lea
jne
pusha
push
stos
mov
lea
jmp
jmp
push
push
jmp
sub
or
in
add
incb
out
rcrl
push
imul
mov
dec
mov
push
xchg
add
sbb
sbb
cmpsb
in
pop
sub
lods
jae
pop
mov
sub
add
mov
fs
jae
not
pusha
bswap
not
mov
jmp
test
clc
sub
jmp
push
pushf
lea
je
cmp
push
cmp
test
add
pushf
push
pushf
lea
jmp
pusha
mov
lea
jb
pushf
call
mov
lea
pushf
call
cmpb
pushf
call
add
dec
outsl
popa
fs
imul
add
lret
ljmp
test
and
test
aas
xchg
pop
movl
mov
lea
jmp
pushf
xchg
lea
pushf
movsbw
movl
call
jmp
pushf
pusha
pusha
mov
lea
jae
stc
rol
pushf
movl
not
cmc
lea
jl
cmc
ror
push
jmp
call
pushl
lea
ja
add
not
jmp
xchg
jl
or
in
insl
lcall
scas
cli
xchg
add
sahf
mov
inc
cmpl
add
sarl
sahf
lods
add
icebp
inc
sbb
int3
sbb
mov
and
jbe
cs
addr16
jecxz
sar
lock
push
bound
adc
js
js
pop
cli
mov
jnp
gs
cwtl
cmc
dec
sbb
and
out
pop
arpl
or
clc
push
jmp
aad
and
cmp
sbb
push
add
enter
into
outsl
sub
cmp
mov
adc
and
dec
pop
loopne
jp
sub
jmp
aas
fcomp
dec
jg
jmp
mov
xor
das
lods
sbb
lock
test
enter
repz
rcrl
fs
lods
lcall
sub
das
dec
shrb
cmpsl
push
xchg
popa
fisttps
and
adc
adc
inc
sub
push
int3
in
inc
push
cmpsb
and
test
adc
jp
push
adcb
mov
sti
jp
adc
or
adc
dec
cwtl
mov
adc
xchg
jge
mov
fwait
aad
nop
in
loopne
jb
dec
adc
imull
aad
jo
call
cltd
shl
pop
xchg
fsubp
int
dec
daa
fmull
call
add
xor
push
xlat
popf
out
xor
notl
mov
gs
in
mov
inc
stos
test
fxtract
mov
mov
xor
lcall
sub
pop
cmpsb
cwtl
popa
test
pop
div
call
test
stc
mov
lods
push
sbb
scas
inc
jnp
push
pop
bound
js
inc
pop
xorb
addr16
mov
mov
sub
and
enter
push
ljmp
jge
inc
sub
dec
fimull
dec
sub
push
out
xchg
mov
or
adc
and
add
imull
lods
add
jae
xchg
inc
and
stos
sbb
xor
gs
cmpsl
fstl
ds
jmp
shl
adc
sbb
mov
mov
pop
sub
xchg
push
adc
test
cli
out
clc
ret
pop
mov
and
pushl
mov
movsbw
setae
mov
movsbl
movsbl
mov
movsbw
jmp
and
cmpsb
or
in
pop
repnz
mov
add
in
mov
xlat
test
in
sub
aad
jno
pop
xchg
mov
inc
dec
mov
shl
inc
shll
insl
test
int
jg
test
test
mov
pop
mulb
fs
push
cmp
pusha
imul
sbb
out
test
daa
setnp
mov
fsubl
adc
imul
jns
mov
mov
adc
in
fisubrs
pop
pop
stc
fmuls
mov
pop
and
imull
out
in
pusha
cli
jl
sbb
stos
into
or
pop
stos
mov
ret
xchg
and
push
je
enter
cwtl
or
xchg
fsubl
out
enter
scas
sub
cmp
mov
int
push
in
addr16
int3
out
sbb
movsl
push
cs
outsl
stos
xor
loope
fistpl
fdivrl
gs
lock
loope
cmp
decl
push
inc
push
dec
xor
inc
dec
dec
add
ret
mov
bt
test
call
not
lods
call
movb
jmp
jmp
movzbl
call
hlt
and
pop
cmp
or
mov
mov
ret
cmp
jle
mov
xchg
call
xchg
imul
lds
mov
pop
xchg
mov
iret
jnp
es
pop
cmp
sub
dec
sub
lahf
cmpsb
cmp
xor
cmp
mov
lea
xchg
sub
push
out
in
lcall
aaa
xor
and
int3
pop
jecxz
mov
in
daa
xor
jmp
pop
shrl
xor
push
clc
dec
loopne
ds
xor
and
pushf
cmp
bt
cmp
pushf
pusha
lea
jb
test
test
push
clc
cmp
pusha
pushf
lea
jae
movzbw
pusha
pop
mov
shld
xadd
stc
mov
bswap
btr
cmp
mov
bt
bt
movb
clc
sub
clc
cmp
add
js
repnz
call
push
pusha
pushl
popl
cmc
stc
jmp
pushf
jmp
lea
je
mov
mov
movzbw
mov
pushf
setg
not
call
add
mov
test
pushf
lea
jne
pushf
call
push
inc
bt
not
movb
std
pusha
clc
pushw
popfw
call
addr16
add
sub
jo
sbb
insl
lea
jp
daa
arpl
pop
sbb
add
mov
xor
lods
pop
push
mov
cmp
aam
loopne
fsubrs
xor
hlt
ds
pminub
xor
mov
mov
leave
mov
stos
push
sub
mov
das
jb
in
cmpsl
mov
xchg
pop
push
out
lods
data16
rcll
push
inc
adc
jns
lcall
sti
repnz
sahf
std
repz
and
pop
pushf
jmp
lea
jne
dec
not
mov
clc
clc
or
pusha
jmp
lods
bt
cmc
bt
sub
jmp
cld
mov
fmulp
mov
jecxz
movsl
xchg
ret
insl
mov
add
lock
xor
jbe
and
mov
sti
nop
lret
arpl
or
je
xchg
dec
imul
mov
mov
mov
cs
dec
dec
test
fcomps
mov
mov
xchg
lock
pop
stos
mov
arpl
out
cmp
and
into
lods
mov
gs
rcrb
test
outsl
icebp
pushf
inc
aas
rcll
xchg
inc
test
leave
or
scas
cmp
cmp
pushf
jmp
sub
jb
cmp
je
clc
lods
mov
add
xchg
outsb
push
notl
loopne
sbb
pop
dec
mov
xor
in
ljmp
pop
ja
pop
xor
std
cmp
aad
pop
in
pop
pop
arpl
dec
test
pop
dec
pop
movq
jge
jge
jb,pn
mov
jp
mov
testl
xlat
outsl
jg
mov
or
jge
lods
fsubs
rcrb
inc
repnz
mov
push
lods
fdivrs
scas
push
pusha
jbe
jb
dec
and
paddb
or
mov
sub
mov
jmp
pop
jg
sbb
iret
mov
and
call
push
mov
mov
pusha
lea
jmp
int3
xchg
mov
cmp
mov
in
mov
or
mov
movsl
stos
stos
jne
mov
in
push
jge
sbb
xor
outsl
aas
cmp
ljmp
pop
jb
push
arpl
int3
xchg
xchg
mov
jl
sub
jb
and
sub
xchg
inc
push
in
sahf
mov
stc
ljmp
xchg
push
mov
cmp
fsubl
mov
stc
pop
mov
in
push
in
jmp
inc
sbb
out
or
gs
cs
pop
rcll
xchg
mov
add
test
loop
push
loop
aaa
add
adc
dec
mov
sbb
ret
add
push
jns
sbb
in
inc
sub
rcll
adc
cwtl
not
das
jae
test
ljmpw
shlb
ficomps
jg
fnsave
adc
out
add
decl
test
lcall
add
clc
pushl
movzwl
lea
lea
btc
btr
mov
call
pusha
sbb
add
in
jmp
scas
dec
mov
cli
cwtl
movsl
fimull
mov
push
aam
call
jb
insl
fldenv
xchg
adc
cmp
sbb
sbb
movsl
xchg
add
sub
mov
pop
pop
dec
test
add
mov
sub
ja
ja
call
call
subl
mov
or
sbb
inc
lahf
aad
add
pop
add
mov
mov
mov
mov
xchg
xchg
xor
out
in
xor
test
add
in
mov
mov
mov
jno
dec
loop
cmpsb
push
add
xchg
cs
sbb
in
jge
and
inc
ljmp
pusha
sahf
pop
jno
aas
jmp
repz
aam
jle
add
pop
fmull
fildll
mov
and
insb
int3
das
add
cmp
out
lods
push
and
and
pop
outsb
mov
mov
or
das
movb
mov
jp
pop
push
xchg
inc
add
or
loopne
leave
adc
pop
xor
sbb
jnp
jne
sbb
mov
test
xchg
js
in
out
sub
fdivs
in
rolb
jmp
push
mov
test
dec
sub
mov
cwtl
fsts
outsl
sbb
push
mov
sbb
push
daa
adc
mov
xor
std
adcb
arpl
mov
add
add
cmpsl
jb
xor
and
orb
movl
movb
mov
pushl
mov
lea
jmp
mov
add
fisubrs
rolb
ror
mov
test
sbb
out
imul
inc
call
fisubrl
bound
loop
push
ret
mov
and
inc
cmp
les
cld
pop
stc
inc
mov
mov
jle
rcll
cmp
mov
jecxz
shrb
pushf
jmp
test
in
mov
clc
dec
outsb
lret
mov
mov
vprotd
dec
sub
aad
imul
sarb
cmp
nop
loope
inc
pop
cmpsl
mov
pop
dec
nop
push
insb
adcl
imul
test
cmp
xor
bnd
pop
into
adc
hlt
or
lahf
mov
outsl
adc
decl
jmp
call
and
mov
jne
shrl
fnsave
cmpsb
nop
jne
movsl
ficoml
mov
lods
jbe
xchg
dec
jns
jns
cwtl
jo
mov
ficoms
dec
test
xchg
jmp
jle
popa
aaa
jo
insl
fadds
insl
or
loope
test
jp,pn
mov
lret
lds
jo
xchg
jne
push
orb
test
popf
jo
mov
jle
les
je
push
pop
xchg
fmull
insl
shrl
cmp
mov
xchg
cs
jbe
ror
jge
ss
les
jbe
hlt
fidivrl
subb
mov
mov
jo
push
adcl
cmp
sbb
add
adc
pop
iret
sti
idivl
lea
ja
scas
popa
outsl
pushf
mov
fimull
push
out
call
sub
out
cltd
mov
enter
imul
je
mov
push
sahf
jo
adc
mov
sbb
mov
popa
pop
cmp
int
xor
jne
scas
in
xchg
inc
cltd
mov
xchg
or
fstps
nop
adc
mov
cltd
sub
mov
mov
es
sahf
jb
or
jno
sub
push
outsb
jle
out
popl
and
sbb
dec
xchg
push
push
or
into
pop
xchg
cmp
lret
pop
or
or
xchg
leave
or
push
mov
dec
mov
rorl
stos
outsb
int3
sbb
orb
add
test
xor
repnz
movsl
adc
cltd
push
pop
fimuls
outsl
cmp
or
imul
xchg
imulb
jbe
push
push
sub
imul
mov
mov
jmp
push
ret
xchg
or
ljmp
xchg
aam
mov
xchg
adc
jb
push
ss
orl
pop
ret
adc
ficompl
xchg
push
mov
push
or
push
ss
scas
inc
lcall
sbb
sbb
jno
push
mov
jns
dec
pcmpgtb
loop
cmpsb
push
mov
roll
outsb
jne
xchg
subb
dec
outsb
and
int
rclb
mov
sbb
pop
sahf
inc
push
mov
jo
cmp
xchg
imul
js
pushf
mov
push
mov
push
sbb
int3
sub
xchg
jle
mov
ficoml
or
mov
xchg
push
push
adc
inc
outsb
cs
mov
xchg
jbe
mov
mov
outsb
or
dec
sbb
push
aaa
clc
sub
out
imulb
into
add
adc
mov
cli
leave
scas
dec
xor
outsb
jp
outsb
and
pop
pop
loope
out
xchg
push
add
jge
xchg
cmpb
test
add
mov
mov
xchg
subl
xchg
sbb
enter
movsl
mov
xor
mov
mov
cs
stc
mov
xchg
and
ja
cltd
push
mov
lret
loop
outsb
mov
push
imul
pop
scas
jno
rcrl
es
xorb
dec
fidivrl
loope
mov
adc
jns
icebp
or
and
or
jno
imul
fsubp
mov
outsb
adc
sti
mov
push
ss
push
mov
adc
jge
mov
push
push
cwtl
dec
mov
adcb
daa
mov
dec
cltd
cli
enter
aad
and
inc
jno
divb
xor
inc
inc
dec
adc
sahf
int
aas
lcall
jp
xchg
xchg
rcrb
mov
jns
adc
inc
xchg
movsb
push
imul
lret
mov
inc
and
aaa
rorb
push
xchg
push
xchg
lods
es
xchg
int
sub
xchg
fwait
xchg
xchg
mov
xchg
out
ss
scas
push
lcall
ljmp
outsb
ljmp
mov
in
lcallw
xchg
push
scas
dec
mov
loope
lods
mov
int
stos
push
loope
xchg
jp
mov
jg
arpl
loop
into
pop
stc
xchg
mov
and
fxsave
int
imul
lcall
mov
xor
xchg
jle
mov
fstl
jp
add
push
add
dec
jmp
imul
call
out
iret
xor
push
dec
addb
sbbl
orl
shrl
xor
mov
aam
push
jbe
loop
dec
lds
decl
mov
xchg
push
mov
pop
stos
sbb
and
adc
test
xor
ds
mov
cltd
pop
dec
adc
dec
jmp
into
paddb
cmp
push
xchg
xchg
popf
sahf
mov
sub
jns
cmp
jp
rorl
pop
fsubs
adc
pushf
fisttpl
jmp
inc
xchg
es
scas
jp
mov
jp
sub
pop
xchg
sub
mov
xor
lcall
xchg
jmp
mov
jle
popf
ss
add
data16
jle
cmpsb
lret
adc
mov
cmpsl
jne
jne
pop
sahf
pushf
test
outsb
xor
cmp
inc
mov
push
dec
pusha
jb
clc
andb
adc
dec
mov
mov
ret
int
and
shrb
xor
inc
pop
jns
jno
push
dec
ret
add
jg
mov
mov
push
adc
push
sub
sub
sub
cltd
outsb
mov
add
xchg
rorl
lock
sbb
seta
mov
mov
jg
mov
mov
movsb
inc
iret
mov
push
add
lcall
adc
fisubs
mov
mov
sbb
lods
ds
mov
int
mov
ficoms
ret
int
cltd
and
es
mov
scas
fistpl
sub
lcall
push
push
xchg
or
push
cmp
lret
adc
dec
shlb
xchg
jb
mov
xchg
decb
cmpl
sub
fimull
xchg
iret
push
push
adcb
cmp
jb
or
mov
xchg
int
cmpsb
xchg
iretw
xchg
sbb
rcll
jne
xchg
ss
leave
dec
lcall
jmp
mov
push
outsl
dec
das
cltd
or
sub
sub
cmpsb
out
rcll
mov
jb
data16
sbb
int3
arpl
xchg
sbb
push
or
outsl
sbb
ficoml
sub
jns
cmpsb
outsb
adc
pop
cltd
push
push
mov
adc
inc
pop
cltd
cli
push
mov
jbe
sub
out
shll
mov
push
mov
dec
andb
or
cli
or
nop
lcall
in
mov
push
orb
subb
push
int3
imul
popf
jb
shrb
cmpsb
pop
fisttpll
jb
or
lcall
hlt
sbb
push
test
sub
cmp
jbe
movsl
out
movsb
mov
and
add
sbb
push
mov
mov
cs
jle
mov
mov
mov
and
xchg
push
cwtl
sub
ret
bound
sbb
jbe
xchg
adc
add
lods
test
fadds
or
rcrb
int
imul
enter
mov
xchg
xchg
add
dec
lret
push
jo
xchg
dec
leave
addb
or
shrd
aam
ret
pavgw
int3
cltd
and
mov
fnstcw
jbe
sub
jns
je
mov
popf
mov
add
sbb
lahf
jle
dec
jae
movsl
push
add
sbb
mov
mov
ljmp
outsb
dec
mov
mov
jb
outsb
stos
push
jbe
and
sub
lret
lret
add
mov
js
int3
jns
cmp
adc
cltd
xchg
mov
mov
mov
dec
subl
shrl
stos
das
cld
mov
arpl
push
sub
cs
mov
push
imul
aas
add
imul
jp
cmpsl
mov
cltd
sub
flds
mov
outsb
push
xchg
add
lret
pop
xchg
lahf
push
push
push
ficoms
in
daa
push
flds
jae
fidivl
jmp
jbe
ss
sub
push
cltd
icebp
pop
mov
sub
lods
cmpsb
mov
mov
shl
insb
lret
scas
cmpsb
xchg
adc
data16
push
and
add
xchg
inc
and
xor
mov
data16
sub
mov
test
lcall
mov
lret
lret
lret
lods
arpl
push
adc
scas
xorl
jle
add
loope
aad
xchg
stc
jle
xchg
lcall
out
sub
movsb
push
aas
cmpsb
xchg
push
iret
add
pop
push
sub
push
sbb
rcll
sub
sbb
push
aad
ss
testb
scas
ss
jle
pushf
jne
or
xchg
mov
lret
mov
repnz
cmc
fisubrs
sbb
ficompl
dec
scas
test
orl
pop
fisubrl
xchg
cmp
jle
push
insb
add
push
pop
cmp
lcall
push
jb
push
cltd
inc
inc
into
xchg
xchg
sahf
mov
push
lcall
cmp
cld
aaa
mov
je
sahf
dec
jp
push
out
push
ss
jb
sahf
mov
fiadds
mov
sbb
shlb
lods
xchg
mov
push
subl
mov
inc
mov
push
cmp
push
test
es
fsubp
jno
push
and
or
or
add
leave
jbe
icebp
imulb
rep
jb
or
imul
add
ret
pop
xchg
lcall
push
sbb
dec
mov
add
push
sub
lcall
mov
cmpb
loopne
pop
int
call
mov
pop
pop
xchg
sbb
jle
jno
mov
jno
mov
jno
sahf
sbb
pop
jmp
mov
iret
cmpsb
imul
xchg
or
mov
xchg
ss
lret
int3
or
add
pop
jo
incb
xchg
push
pop
push
pop
mov
push
xchg
sar
sbb
sbbb
jne
jns
jl
xchg
push
push
mov
repz
fiaddl
pop
add
xor
sub
and
inc
jg
dec
jg
jo
test
mov
sahf
jg
shrl
jp
outsb
stos
rol
and
fsubs
ficompl
mov
pop
out
and
xchg
outsb
jne
mov
add
int
jb
xchg
mov
rcll
push
jg
mov
int
push
lcall
push
fisubl
repz
lods
cli
mov
test
test
push
cmpsb
push
xchg
decl
clc
imulb
js
loopne
fdivrp
andl
jne
push
cld
outsb
sub
pop
mov
mov
jle
mov
inc
jns
popf
xchg
push
xlat
mov
jb
xchg
lcall
lret
xchg
ds
mov
dec
dec
lcall
push
sub
jns
pop
lcall
ret
mov
pop
lcall
xlat
sub
or
mov
iret
pushw
repnz
xchg
fstps
xchg
pop
and
xchg
int
movsl
xchg
sahf
icebp
mov
pop
add
xchg
int
movsl
xchg
sahf
push
mov
insb
fisubrl
or
cmp
addr16
sbbl
adc
xchg
push
jle
and
mov
push
ja
sbb
cltd
or
pop
xlat
mov
dec
add
jmp
sub
adc
aam
adc
cmp
imul
cltd
jo
mov
iret
and
aas
aad
push
pop
sbb
jle
jmp
push
mov
stos
mov
or
mov
test
and
mov
fstps
dec
sub
enter
fisubrl
mov
repnz
adc
hlt
jo
lcall
jp
andl
xor
jp
test
loop
imul
mov
dec
adc
data16
push
mov
rorb
mov
xor
nop
adc
jp
dec
in
jbe
or
xchg
addb
mov
int
inc
ljmp
repnz
and
push
daa
mov
mov
adc
stc
sub
cmp
enter
push
push
xchg
dec
sub
es
mov
jle
mov
jns
fmuls
imul
ljmp
mov
enter
ss
js
adc
arpl
xchg
loop
push
jp
push
clc
jle
ss
lcall
cmp
mov
xchg
scas
outsb
xchg
adc
es
push
cli
mov
dec
pop
fistpl
cmp
andb
into
jg
sbb
mov
aas
lret
mov
dec
sub
pop
jg
adc
sub
cmp
lods
xchg
mov
push
xchg
cli
adc
mov
or
or
jns
rorl
mov
mov
xor
into
xchg
lahf
sbb
int3
jnp
push
inc
xlat
dec
jg
push
leave
jb
cmp
lcall
jle
jno
push
jg
cltd
push
cmp
mov
stos
outsb
push
shr
sbb
into
xor
xchg
lea
xchg
jb
subb
loop
mov
ret
and
repnz
dec
outsb
pop
shrb
sbb
push
into
lcall
lret
sbb
push
adc
cwtl
outsb
cli
rorb
aam
xchg
xor
lcall
addl
adc
push
mov
rcrb
cli
lods
icebp
or
push
push
aaa
stos
jle
iret
jbe
push
or
xchg
fidivrl
mov
cli
outsl
push
fiaddl
rcl
push
xchg
add
push
out
add
out
test
ljmp
sub
push
pop
inc
xchg
sbb
xchg
mov
aad
stos
enter
add
clc
push
mov
jle
xchg
ja
outsb
xchg
sbbb
repz
mov
jb
lcall
xchg
adc
xchg
mov
sub
shrl
shl
xchg
push
stos
inc
sarb
addb
sbb
enter
mov
xchg
jno
mov
push
scas
add
nop
nop
fimuls
ror
sbb
fmuls
mov
movsl
mov
imul
ds
inc
fdivrp
es
shr
mov
mov
js
jmp
jl
lcall
sti
xchg
int
dec
aam
or
mov
out
mov
aaa
ja
fsub
repnz
lcall
in
push
mov
lahf
add
loopne
sahf
out
push
pushf
xor
ror
insl
xchg
and
adc
push
cmpl
mov
inc
dec
mov
jmp
fisubrl
stos
into
mov
mov
cltd
scas
add
xchg
push
sbb
push
adc
cwtl
inc
outsl
jp
scas
or
pop
cmpsl
mov
push
scas
adc
fcomps
ljmpw
repnz
cmp
xchg
sbb
adc
xor
loop
xchg
mov
repnz
bound
add
xchg
lcall
imul
xorb
jle
lcall
or
pop
mov
push
mov
add
inc
cmp
mov
mov
push
mov
or
js
dec
mov
xchg
loop
imul
fstps
mov
or
lahf
add
jns
add
jo
cmp
and
push
sub
xorb
push
mov
adcb
addb
andb
sub
pop
xchg
lcall
lret
dec
push
rclb
inc
inc
xchg
lcall
lcall
lcall
push
iret
dec
push
ljmp
loop
sub
xchg
lcall
sbbb
push
dec
popa
adc
xor
jmp
mov
mov
push
into
cmpsb
xchg
adc
xchg
pop
dec
or
mov
adcb
rcrl
out
or
dec
mov
mov
and
xor
cmpsl
or
push
adc
cmpsb
andl
int3
jb
imul
int
lods
bound
and
jmp
mov
and
fldcw
xchg
jbe
add
notb
push
inc
inc
mov
adc
push
pop
imul
es
out
jge
repz
lahf
ss
push
mov
xor
mov
mov
shr
and
notb
pop
xlat
sahf
mov
lods
mov
nop
into
mov
stos
mov
into
xchg
ficompl
shl
dec
imul
cs
icebp
inc
ret
test
shll
cli
and
lods
sub
lods
inc
xchg
stos
mov
sub
jg
mov
into
scas
or
lcall
das
fiadds
mov
xchg
mov
ljmp
xor
divb
dec
xchg
xchg
jne
jbe
pop
fistpl
ds
and
mov
jp
sub
lcall
cmp
mov
fsts
push
push
jp
std
xchg
dec
pop
orb
aam
inc
repz
xor
adc
clc
or
mov
inc
stos
enter
fsts
xor
out
xchg
pop
jmp
loope
dec
nop
xchg
or
lret
lods
fimuls
mov
push
jp
adc
movb
jnp
sar
jle
dec
and
mov
mov
inc
aad
mov
sahf
loope
push
push
push
xlat
fs
or
jle
mov
mov
dec
insb
push
in
dec
loopne
inc
add
ss
fs
lods
inc
cltd
jne
mov
and
mov
or
pop
mov
mov
sub
int
mov
jle
pop
jbe
push
inc
lods
pop
or
inc
cwtl
fisubrl
cmc
cli
mov
in
pop
loop
add
lods
stos
jns
and
jbe
inc
and
sub
and
jmp
xor
jle
xchg
aam
cli
push
adc
lcall
shl
lret
insl
lods
push
dec
std
and
cmp
xchg
pop
cli
mov
xchg
loope
out
sub
mov
cmp
jne
and
sahf
inc
mov
sub
pop
push
jns
mov
lcall
and
out
stos
mov
or
push
sub
movb
xchg
ljmp
inc
pop
cwtl
jns
pop
xchg
testb
xchg
test
sbbb
lock
inc
mov
ss
xchg
ljmp
stos
adc
jb
or
dec
sahf
leave
cmpsb
or
sub
pop
cmpsb
imul
xchg
call
adc
xchg
cmpsb
imul
cmpsb
imul
xchg
adc
mov
rolb
cmpsb
lock
adcb
adc
imul
mov
aad
xchg
add
push
in
xchg
lock
adc
imul
xchg
adc
inc
fidivrl
add
adc
into
lahf
cld
and
dec
mov
loope
repnz
mov
cltd
cmp
pusha
add
rclb
lods
jle
stos
cltd
sub
and
push
push
jns
sbb
xor
aad
xor
xchg
lahf
sahf
xor
ret
adc
pop
lods
push
and
dec
rcrb
loop
push
divb
scas
lret
in
push
push
jns
icebp
out
cmpb
inc
rclb
mov
dec
ret
push
xchg
sbb
fsubrl
ret
imul
xchg
dec
insl
push
into
adc
lea
mov
scas
sub
test
jns
imul
jle
ds
sbb
push
mov
adc
push
sbb
push
adc
xor
int3
xchg
cmp
push
xchg
jp
into
push
adc
cwtl
push
outsb
es
sbb
push
pop
inc
out
cmp
into
push
pop
ds
sbb
push
adc
cwtl
outsb
not
add
push
push
adc
jb
jle
call
out
in
shll
pushf
or
cmp
push
ret
mov
ds
push
and
xchg
notb
push
cwtl
push
outsb
data16
sbb
mov
push
jbe
adc
sbb
push
adc
cwtl
outsb
not
push
sbb
bound
cltd
mov
mov
mov
bound
fisubs
xor
loop
mov
mov
push
or
jg,pn
xchg
lock
jbe,pt
jns
mov
das
adc
fistpll
lret
scas
inc
xchg
mov
mov
adc
cltd
xchg
ret
push
push
and
xchg
jle
lret
mov
xor
sbb
cmc
push
xchg
loop
fwait
dec
mov
int
mov
xchg
pop
pop
rcll
mov
push
inc
adcl
sub
jmp
jno
xchg
fnstsw
xchg
pop
ds
mov
es
mov
add
imul
cmpsb
imul
cmpsb
mov
lcall
push
or
test
insl
or
mov
int3
lods
outsl
push
xor
ljmp
pop
adc
rclb
xchg
loop
add
sub
xor
pop
add
dec
dec
out
mov
fistl
jbe
adc
incb
dec
jb
mov
mov
fdivr
out
loope
rcrb
jecxz
push
or
mov
js
push
mov
ja
xchg
cmp
ss
pusha
int
push
ss
pop
add
mov
orl
mov
xor
push
lcall
mov
nop
jle
jb
pop
adc
lcall
testb
popf
mov
repnz
add
mov
int
push
adc
bound
in
jb
mov
cli
push
mov
push
xchg
out
add
ss
aam
push
jno
cmpsb
sbb
xchg
mov
cmc
scas
fcoml
jmp
cmp
sar
sub
mov
jnp
imul
stos
notb
or
sub
add
sahf
mov
xchg
imul
fldz
fwait
lcall
xchg
es
cltd
movsl
dec
xchg
or
jb
dec
push
xor
sub
cwtl
xchg
adcl
xor
fidivs
test
arpl
jp
dec
cltd
scas
xchg
xchg
xchg
cmpsb
mov
sbb
push
fimull
shlb
jle
xor
pushf
out
inc
mov
xor
cltd
loope,pt
pop
popa
jb
into
rorl
fisubrl
mov
xchg
pop
dec
inc
inc
dec
xchg
xchg
jns
dec
lcall
xchg
into
lea
in
mov
dec
ret
ret
or
or
push
jbe
fcmovbe
adc
mov
sub
cwtl
pop
xor
mov
jbe
xor
jno
jmp
sub
jp
xor
data16
inc
lcall
rorb
out
fcmovbe
loop
jbe
movsb
outsl
repnz
sbb
push
xchg
rcr
push
out
imul
sub
push
fxch
cmpsl
jnp
iret
cwtl
jecxz
lahf
mov
xor
fisubrl
push
ds
ss
flds
cmpsb
aad
sub
mov
stos
loope
out
mov
aad
sub
popf
inc
push
xchg
push
es
push
lret
dec
enter
pop
push
sahf
cmpb
cli
nop
std
lods
mov
jo
sahf
add
jb
hlt
xchg
inc
sahf
imul
inc
push
mov
ljmp
sbb
adc
push
and
je
jne,pt
out
adc
xchg
xchg
mov
sbb
insl
fstps
pop
data16
loopne
pop
xlat
clc
push
pop
fisubrs
push
sbb
bound
inc
les
sub
push
imul
repnz
mov
jecxz
dec
xchg
mov
daa
mov
xchg
ficompl
scas
jle
lcall
push
rclb
jp
push
mov
es
imul
push
xchg
shl
and
xchg
into
sbb
xchg
repnz
mov
adc
mov
imul
and
bnd
sbb
inc
lcall
ret
xchg
jmp
mov
outsb
insb
or
add
repnz
or
jbe
leave
cltd
into
stos
dec
adc
xchg
ss
push
jp
into
shl
sbb
repnz
cwtl
pop
outsb
rolb
xchg
cltd
mov
xchg
jle
ror
out
adc
cwtl
and
rorb
pushw
mov
adcb
cwtl
stos
outsb
mov
adc
push
push
pop
or
fiaddl
stos
adc
cwtl
and
rorb
pop
push
test
outsb
scas
rorb
sbb
jg
jmp
xchg
cs
shlb
push
adc
cwtl
add
sbb
xorl
bound
mov
xchg
inc
push
scas
jle
outsb
stos
push
shlb
into
push
ljmp
shrb
sbb
lcall
jle
rcrb
sbb
push
adc
outsb
ds
xchg
mov
push
adc
shr
sbb
push
pop
or
sbb
xchg
loop
scas
cwtl
outsb
adc
es
push
adc
cwtl
outsl
xchg
mov
xchg
jle
lret
stos
cwtl
mov
ret
sbb
push
adc
xor
into
sahf
cmpsl
xchg
jb
sbb
jbe
loopne
dec
loopne
dec
jbe
xchg
xchg
ds
loop
xchg
loopne
dec
fidivl
xchg
jnp
pop
pop
xor
stos
push
lcall
mov
sub
inc
xor
sarb
push
add
mov
cmpl
push
js
jp
xor
add
inc
push
dec
test
out
addr16
and
cmpsb
xchg
push
iret
jae
xchg
jnp
sahf
sbb
xchg
dec
cmp
outsb
inc
in
xchg
push
dec
adcb
jge
adc
xchg
jb
xchg
sub
cmpsb
adc
xchg
xor
and
add
or
shrb
cli
jecxz
ret
dec
sahf
xchg
loope
sbb
xchg
pop
data16
loopne
int3
push
lea
pushf
fisttpll
es
xchg
dec
pusha
jo
dec
gs
inc
jne
xchg
sub
lahf
xor
jge
add
inc
jle
sbb
dec
mull
and
cmp
jb
cmpsb
push
xchg
xor
out
push
inc
adc
cmc
popa
and
sahf
int3
pop
jle
jle
pop
mov
int
pop
sahf
dec
loope
dec
sub
inc
pop
pop
mov
pushf
and
aas
and
shlb
jle
out
out
out
xchg
xchg
and
xlat
push
jbe
push
jmp
push
jne
xor
repz
push
jae
xor
xor
mov
incb
daa
dec
repz
test
xchg
bound
lret
mov
test
xchg
ficoml
sub
out
mov
mov
loopne
sub
and
xchg
out
jb
call
xchg
jb
fmulp
mov
push
fimull
push
inc
push
scas
fcmove
mov
jno
mov
les
sbb
push
out
mov
push
nop
ret
push
mov
add
popa
jbe
jb
rclb
xchg
in
jb
fwait
outsl
rcrb
push
mov
sbb
aad
mov
adcl
imul
sub
adc
jnp
iret
shl
add
stos
pop
cmp
xor
cmpsb
faddl
and
mov
out
push
bound
jecxz
xor
rcrl
cltd
lcallw
and
jb
clc
jb
sbb
pop
mov
ret
subb
cli
in
sub
jb
cmpsb
cmp
fldenv
sahf
and
sbb
sbb
popf
jb
sti
push
sbb
loopne
int3
sbbl
mov
push
imul
jae
jg
mov
cmpsb
or
cmp
pop
or
mov
pushl
sbb
cld
lcall
jno
mov
pop
aam
push
movsb
and
xchg
data16
loopne
into
testb
test
lret
mov
dec
lret
in
push
xchg
or
cmp
mov
lock
xor
and
insl
popa
subl
jecxz
popa
dec
mov
mov
adc
add
adc
mov
xor
outsl
out
mov
lret
cltd
mov
xchg
in
adc
cwtl
call
sbb
mov
sbb
cwtl
lahf
adc
orl
js
xchg
jge
xchg
adc
mov
jg
lea
push
insl
jg
jp
mov
jle
pop
stos
rcl
push
mov
xchg
mov
mov
mov
je
sarl
jecxz
xorl
into
fisubl
inc
bound
xchg
push
adc
push
adc
pop
sbb
cltd
and
sub
sbb
xchg
xchg
pop
lcall
xchg
mov
xchg
shlb
lcall
dec
stos
cmc
push
inc
and
enter
inc
lret
movsl
scas
mov
inc
sub
dec
push
inc
pop
sbb
sbb
and
enter
inc
in
xrelease
stc
or
fstpl
loop
and
cs
xchg
jecxz
sahf
cli
adc
jo
mov
mov
mov
adc
jle
xor
loop
scas
jl
sahf
ror
jl
loop
leave
sbb
sbbl
mov
push
paddusw
iret
in
je
lcall
mov
mov
xchg
push
shlb
inc
jg
loope
in
push
dec
mov
xor
mov
outsl
nop
push
sub
push
cmp
fisubl
mov
jbe
bound
stos
pushf
xchg
mov
cmp
cmc
mov
push
lret
or
lret
popf
mov
je
outsb
mov
xchg
loopne
pop
fiadds
jo
fstpt
mov
push
adc
push
lret
jae
js
xorb
rorb
insb
xchg
int
es
stc
jbe
mov
enter
sbb
int
mov
mov
mov
rcll
xchg
enter
stos
popf
mov
mov
lods
nop
aam
test
mov
xor
adcl
int
mov
mov
scas
mov
movq
negl
jl
in
fmulp
loope
mov
push
mov
mov
fbld
jno
pushf
rol
mov
pop
mov
fldcw
xchg
xchg
pop
or
cmp
lcall
popf
roll
lcall
mov
pop
fidivrs
je
cmp
mov
mov
out
movsl
pop
pop
loope
repnz
mov
clc
mov
bswap
iret
add
mov
test
call
lret
lcall
out
in
jp
or
push
mov
aad
xchg
push
mov
rcl
scas
push
mov
js
push
iret
movd
xlat
and
jp
jne
mov
dec
loop
scas
mov
jp
dec
loop
cmpb
mov
adcl
add
ret
jno
sbbl
test
xchg
pop
dec
jne
rol
lcall
xchg
lcall
imulb
into
fimull
push
mov
lods
lcall
xchg
jnp
cli
push
adc
rclb
data16
push
ss
or
xchg
int
or
rclb
gs
xor
cmp
out
dec
outsb
xor
jb
lret
je
out
sub
push
arpl
xlat
cmp
or
mov
clc
idivb
loop
in
sub
inc
dec
pop
out
lock
aam
das
xchg
jg
imul
sub
xlat
js
xchg
rcll
loop
xchg
lret
lret
rcl
cmp
test
mov
xor
cmpb
divb
push
add
mov
adc
xchg
int3
mov
dec
push
data16
push
inc
xor
stos
dec
mov
push
test
mov
push
ljmp
sar
or
sub
mov
iret
nop
andb
iret
xchg
push
cmp
push
outsb
repnz
jnp
mov
fisubl
jbe
adc
ret
or
xchg
xchg
xchg
sub
lcall
into
ret
sahf
fmulp
cltd
insl
out
dec
outsb
mov
dec
sbbb
out
sbb
or
xchg
cltd
sahf
push
jo
bound
iret
mov
mov
shlb
jo
lcall
mov
loop
cmpsb
mov
xchg
add
push
cwtl
sub
into
xchg
mov
cmpsl
sbb
divb
or
enter
mov
cli
pop
xor
pop
ss
cmc
push
inc
mov
stos
repz
in
push
push
repnz
lods
jp
sbb
sbb
ja
push
and
or
xor
scas
cmp
sahf
mov
push
jno
ret
out
stos
aad
outsb
mull
pushl
stc
sub
imul
sbb
ja
lcall
adc
lods
ss
scas
fsubrl
dec
scas
jle
cmpsb
enter
xchg
pushf
int
sbb
sub
push
mov
fsqrt
mov
mov
mov
mov
jb
mov
jp
mov
lcall
cltd
xchg
lcall
sbb
push
iret
ret
outsb
int
jp
xchg
adc
and
and
sub
cmp
xlat
and
and
mov
fbld
xchg
jle
push
push
es
pop
push
dec
jns
cmp
int3
push
xchg
mov
into
dec
imul
jbe
mov
jle
xchg
sub
cwtl
call
xchg
cmp
jns
xchg
mov
aam
je
lcall
out
or
cli
mov
dec
sarb
mov
orl
ficompl
test
fldenv
mov
pop
filds
cli
cmp
xor
imul
mov
fsubrp
adc
sub
popa
dec
scas
mov
or
cmp
fsts
dec
adc
jne
mov
xchg
ret
adc
jg
mov
or
pop
repz
cwtl
pop
outsb
das
rolb
loope
pop
pushf
pop
lret
sub
scas
bound
push
mov
mov
ss
mov
sub
and
push
ficompl
cmpsb
cmp
mov
out
cmpsb
fdivrl
or
into
push
in
cmp
subb
sbb
adc
push
and
cmp
sahf
icebp
jbe
rcrl
push
testb
cmp
cwtl
inc
scas
repnz
cmp
push
jno
js
jo
lahf
into
dec
repnz
push
loopne
jbe
cmpsb
or
add
subb
es
out
dec
dec
rol
mov
test
cmp
lcall
cltd
xor
push
mov
lahf
or
mov
cmc
je
xchg
fstpt
fstpt
push
mov
imul
test
jp
jp
add
xor
xchg
add
pop
stos
and
loopne
cld
push
push
orl
sahf
imul
jne
stc
push
and
cltd
fidivrl
push
cltd
cmpsb
fstps
shlb
jo
jle
scas
sub
cltd
ds
inc
pop
lods
add
push
xchg
push
push
push
test
shrl
pop
sbb
dec
test
inc
jg
xorb
shll
mov
ret
adc
scas
dec
xchg
xchg
cmp
push
xchg
mov
in
out
les
adc
mov
or
dec
loop
sahf
push
cmp
mov
iret
xchg
dec
mov
push
add
jns
mov
mov
out
add
enter
or
aas
jle
xchg
cmp
xchg
imul
fwait
test
sbb
jp
out
fwait
cld
into
dec
and
or
mov
xorb
xchg
pushf
ss
bnd
jb
outsb
dec
add
mov
adc
jne
dec
fldenv
sub
nop
sbb
jne
stc
cmpsb
mov
xchg
notb
sbb
fs
jns
xchg
ret
mov
add
xchg
push
les
mov
rcr
sbb
dec
push
inc
and
or
mov
enter
push
stos
add
orb
and
fmull
push
outsb
in
lret
xchg
clc
xor
push
in
lcall
outsb
stos
popf
jb
cmpb
mov
mulb
adc
adc
sub
mov
in
stos
bound
sti
ret
insb
xchg
repnz
xor
clc
or
sub
mov
xchg
cmp
jbe,pt
or
inc
jb
or
push
mov
dec
or
rcrl
aaa
shlb
push
inc
sahf
inc
xor
add
sahf
mov
jae
mov
mov
fimull
jp
dec
push
outsl
cmpsb
push
movsb
outsb
outsl
mov
lcall
mov
jp
adc
fimuls
lcall
ljmp
jne
clc
push
lds
add
push
adc
inc
push
mov
xor
imul
push
push
test
xchg
mov
push
fcmove
inc
andl
mov
xor
fucomi
mov
xor
pop
data16
push
imul
in
lods
and
mov
outsb
jne
inc
pushf
push
xchg
jae
popa
fs
loope
push
xlat
in
lods
mov
push
jbe
and
repnz
pop
xchg
icebp
push
adc
jno
fistps
sahf
jno
sbb
and
cmp
jns
pop
xchg
ss
mov
pop
mov
and
xor
outsb
cwtd
jg
push
add
das
into
insl
push
pop
xchg
dec
mov
mov
mov
roll
or
sbb
jb
rclb
dec
jb
jmp
cmpsl
ss
clc
push
cmp
pushf
ret
ss
loop
mov
push
adc
scas
mov
or
pop
es
nop
jns
out
lea
adc
xchg
loop,pn
out
pushw
or
xor
mov
aas
loop
ret
inc
lea
xor
inc
xchg
or
mov
xchg
movsb
imul
xchg
cmp
xchg
jno
jb
mov
adc
mov
adc
ds
inc
push
jne
adc
sub
adc
cltd
jb
inc
cwtl
mov
and
push
fwait
cltd
xchg
and
in
jle
adc
xchg
cmp
push
xchg
jno
ficompl
push
js
imul
and
dec
xor
and
sbbb
xchg
adc
popf
xchg
and
loop
fwait
loop
shl
or
adcb
xchg
int3
adc
mov
mov
mov
mov
lret
into
fbstp
sbb
push
jbe
jnp
or
sbb
add
pop
cli
push
adc
jp
fbld
scas
incb
mov
mov
mov
or
bound
es
stos
into
xchg
rorl
scas
xor
inc
push
in
stos
scas
lcall
fildll
xchg
or
add
stos
pop
xchg
sbb
sbb
adc
or
jbe
or
or
popf
out
ret
push
scas
or
cmpsb
fcoml
mov
and
insl
add
cmp
std
stc
mov
imul
pop
dec
sarb
cli
ljmp
jmp
push
or
dec
fisubl
in
sahf
enter
ss
lock
ficoml
loop
xchg
loope
ja
sahf
stc
mov
pop
or
out
dec
mov
movl
scas
sbb
mov
cs
dec
sbb
lcall
sbbl
mov
sub
ret
int
sti
inc
stos
mov
xchg
fs
adc
xor
stos
push
mov
es
into
or
xor
add
and
or
add
jp
xchg
cmp
push
cwtl
jno,pn
mov
add
dec
mov
ds
inc
cmp
fsubrl
push
mov
sbb
xchg
xchg
repz
ljmp
add
cli
out
pop
orl
lahf
cltd
jno
jg
inc
dec
imulb
pop
cmp
outsb
dec
mov
data16
fs
mov
addr16
aas
adc
mov
lcall
lcall
lea
imul
xor
mov
ds
and
sub
inc
in
pusha
mov
pushf
dec
sbb
inc
push
xchg
mov
sbb
iret
xchg
orb
lcall
shr
xchg
movsb
call
xchg
dec
fldcw
xchg
dec
sbb
adc
inc
ret
fldenv
cmp
dec
loop
push
cmp
repnz
jns
dec
call
sahf
icebp
dec
cmp
jae
inc
es
dec
scas
cmpsb
xchg
and
sbb
jbe
repnz
imulb
xchg
and
mov
test
sahf
movsb
outsl
push
cwtl
push
rorb
sahf
jb
mov
sbb
xchg
dec
jno
sbb
mov
nop
roll
jbe
nop
cmpsb
mov
cltd
daa
adc
shrl
sbb
cwtl
popf
inc
cmp
sub
or
fiaddl
shlb
or
and
mov
shlb
xchg
jnp
push
push
iret
pushf
dec
out
es
jbe
pushf
adc
xchg
dec
fidivrs
fisubrs
and
cmpsl
adc
mov
xchg
movsl
inc
movsb
jae
and
outsl
push
sbb
inc
sub
adcb
push
and
rcrb
cmp
sub
fwait
xchg
xor
movsb
jae
and
bound
jns
jbe
movsb
outsl
inc
and
lcall
iret
xchg
dec
mov
test
jb
mov
xchg
add
into
sub
adc
jnp
iret
shl
sbb
repz
cwtl
pop
outsb
das
out
cli
or
sbb
out
ljmp
jae
xor
shrb
into
sbb
fidivl
enter
addl
scas
jnp,pn
scas
adc
imul
sahf
dec
out
daa
jle
cli
jmp
mov
fdivs
mov
je
sub
loope
xchg
push
outsb
enter
ret
sbb
ret
push
testb
dec
in
es
jno
out
ret
pop
push
sahf
sbb
add
fnstcw
popf
scas
sbb
cmpsb
ljmp
stos
testb
adc
pop
push
inc
jbe
sbb
negl
mov
ficomps
xchg
add
repnz
xlat
adc
out
xchg
dec
rol
push
fs
sahf
enter
mov
addr16
neg
fstpt
call
xlat
push
jbe
push
in
adc
jo
test
push
inc
data16
jo
dec
cmp
adc
pop
jmp
or
ljmp
loop
xchg
hlt
fcmove
sbb
shlb
fucomip
mov
mov
or
push
scas
out
or
subb
mov
jle
dec
dec
out
sbb
cwtl
jae
mov
icebp
xchg
push
pop
stos
push
mov
sahf
adc
push
inc
add
mov
shlb
push
sahf
sar
pop
xlat
data16
lret
push
shll
stc
mov
ljmp
xchg
out
adc
jae
addr16
mov
rcrl
aaa
and
outsb
rcrb
fs
or
mov
pop
frstor
inc
ss
cld
mov
push
adc
xchg
aam
dec
mov
xchg
mov
and
and
shr
push
jae
sub
push
inc
jb
mov
push
and
imul
insl
rcll
push
xchg
fiadds
add
mov
dec
cltd
fdivl
xchg
sahf
lods
cmp
movsb
jno
jmp
mov
sbb
add
mov
lods
stos
mov
imul
jecxz
xchg
and
andl
ljmp
dec
ljmp
push
mov
sub
inc
lret
mov
stos
inc
and
mov
rorl
jle
mov
dec
dec
or
and
jns
sub
dec
out
imul
pop
lods
push
push
or
idivb
shl
add
jns
and
out
call
mov
into
push
scas
cs
xlat
push
test
imulb
xchg
push
jno
push
mov
add
lock
into
mov
add
lcall
and
mov
sub
outsl
into
dec
dec
shl
frstor
inc
imul
insl
test
jo
mov
lahf
cmp
ljmp
xchg
fdivp
in
loopne
mov
dec
divb
fwait
adc
out
mov
shll
push
xor
inc
shl
pushf
addb
mov
push
clc
imul
jle
adc
mov
insl
xor
fucomp
push
outsb
xchg
int3
hlt
insl
mov
outsb
add
cltd
adc
ds
pop
inc
scas
cltd
js
mov
fistpll
sti
out
loopne
scas
cs
movsb
outsl
add
mov
shl
movsb
jae
sti
lods
outsb
sbb
mov
mov
sbb
jbe
xchg
hlt
ljmp
test
outsb
xchg
data16
and
cltd
pop
cli
push
rclb
jbe
sbb
pushf
jp
repnz
les
adc
stc
dec
out
aaa
mov
jb
mov
inc
stc
inc
pushf
cmpsb
aam
and
imul
xlat
push
imulb
sub
jns
cwtl
push
cmpsb
xchg
push
push
imul
push
insb
cmp
repnz
incl
or
mulb
decl
push
scas
xor
push
inc
sahf
add
loopne
pop
cmpsb
jno
ret
mov
sahf
mov
imul
adc
into
inc
mov
cltd
push
js
mov
std
push
out
xchg
xchg
sbb
fnstcw
lods
outsl
ret
cmp
cmp
cmp
es
imul
or
test
dec
xchg
add
clc
popf
cmpsl
cmp
imul
jmp
in
ret
sub
cld
jp
push
out
mov
mov
xchg
into
sbb
pop
inc
rclb
sub
push
add
cmpsl
jnp
iret
cwtl
jecxz
mov
or
pop
push
adc
cwtl
inc
insl
xchg
in
into
aam
ds
sub
divb
add
cmp
mov
out
rep
adc
xchg
add
cmp
stos
fadds
pop
add
sbb
add
ret
or
mov
push
cmp
or
in
jp
dec
loop
scas
clc
or
loop
in
daa
jbe
outsl
mov
inc
in
push
add
dec
push
sbb
sahf
shr
sub
adc
je
dec
mov
xor
inc
lcall
repz
lcall
es
adc
cmpsb
scas
mov
out
shll
pop
jbe
jbe
adc
dec
dec
push
scas
inc
jb
repnz
repnz
push
ret
sbb
aaa
jno
push
sub
mov
sub
mov
cmp
repnz
or
jnp
jg
cmp
push
adc
outsl
out
sti
cwtl
sbb
mov
xor
icebp
imul
pop
push
out
inc
stos
lods
mov
int
leave
push
ja
nop
mov
push
or
ss
or
int3
adc
dec
cli
sub
jb
jb
enter
ficompl
ficoml
rcrl
sbb
pop
lods
mov
or
incb
rcrl
fdivp
jle
sub
sahf
dec
sbb
ljmp
pushf
adc
dec
out
call
cmp
fisubs
xchg
stos
es
std
pop
data16
mov
inc
testb
or
xlat
repz
sahf
adc
fcoml
mov
push
out
or
xchg
mov
mov
lds
sub
push
fsubs
push
xor
push
jbe
leave
dec
rcrb
or
lcall
outsb
mov
dec
and
xor
push
js
test
mov
push
mov
xor
shrb
xchg
jb
test
int3
or
enter
leave
mov
lods
ds
testb
adc
mov
cmpsb
movsl
jp
popa
out
stos
cmp
or
dec
dec
out
jp
cmpsb
sbb
enter
mov
test
or
jp
aam
dec
pop
jl
jp
int3
adc
enter
test
cmp
sub
or
cmp
jb
mov
imul
sahf
in
jp
out
dec
dec
xor
mov
mov
xchg
subl
cmpsb
add
xchg
fisubrs
bound
ficomps
xchg
push
ss
sbb
stos
hlt
sbb
dec
lret
mov
leave
pop
out
adc
add
jp
xor
stos
cltd
mov
dec
pop
xor
or
ret
stos
sub
xchg
ficoml
jbe
and
xchg
or
test
sahf
loopne
ja
dec
pop
pop
stos
stc
mov
dec
adc
sbb
cmpsl
mov
sbb
xchg
and
mov
lcall
stos
ljmp
scas
add
add
out
add
js
repnz
xlat
stos
mov
cltd
cli
dec
adc
push
inc
sub
jp
add
sub
int3
outsb
ret
xchg
push
and
cli
fiadds
sbb
mov
push
jg
push
cmp
outsb
pop
or
dec
out
sub
mov
mov
test
push
stos
dec
cltd
mov
push
sub
or
sub
pop
dec
mov
stos
subl
cltd
mov
mov
mov
mov
scas
test
scas
mov
mov
cmp
mov
lcall
int3
mov
test
lcall
ficoml
xchg
enter
push
shrl
adc
clc
shll
scas
jmp
sbb
mov
or
xchg
lcall
lcall
int3
fcomps
fcmove
iret
mov
mov
dec
jp
mov
xor
jecxz
fidivrl
mov
pop
xor
cmpsb
mov
fdivs
lds
aas
ret
loop
repz
and
aam
cltd
scas
adc
imul
ljmp
adc
out
shrl
dec
mov
iret
setge
mov
inc
and
mov
test
mov
sbb
lret
es
cmc
jg
lods
pop
cltd
add
mov
fidivs
or
inc
inc
ljmp
pusha
ja
mov
out
mov
mov
int3
lret
mov
gs
xchg
lods
mov
mov
in
scas
sbb
adcb
lock
xor
imul
add
outsb
js
xchg
push
inc
pop
test
push
cwtl
mov
push
cmp
cmc
mov
mov
pusha
cmpsb
clc
lret
mov
jge
mov
ret
faddl
dec
iret
mov
scas
cltd
ja
addr16
mov
aas
fimuls
notb
test
subb
mov
lods
jp
pushf
cmp
or
cld
and
xchg
inc
jae,pn
iret
lret
roll
mov
mov
mov
js
add
mov
aaa
jecxz
mov
scas
pop
mov
loop
rcll
es
inc
stos
dec
jno
and
mov
mov
mov
shlb
xorb
mov
push
cli
sbb
xchg
xor
pop
rcr
cmp
aaa
pop
subb
pop
loopne
clc
sub
and
fcmovnu
push
fadd
scas
dec
mov
xlat
into
lcall
push
push
fstpt
dec
mov
mov
nop
xchg
or
repz
or
into
shrb
data16
sub
je
pop
xchg
inc
call
addb
lods
je
pop
sbbb
xchg
mov
jp
leave
cli
xchg
or
push
jnp
ja
pop
sub
cmc
lcall
fisubs
xchg
ficoms
fs
scas
loope
adc
inc
pop
movsl
out
xor
sbb
lods
fbld
mov
imul
mov
and
nop
loop
jb
je
fimuls
inc
jmp
loop
jb
pop
mov
mov
shl
sbb
pushf
mov
lea
mov
mov
out
xchg
stos
into
scas
xchg
push
cmp
mov
sbb
in
jb
push
mov
popa
lcall
xchg
xchg
push
xor
jp
fs
sbb
out
clc
mov
cmpsl
mov
pusha
insl
sahf
mov
xchg
icebp
mov
xor
ret
fcoms
xchg
pop
adc
inc
outsl
int3
cmpsb
pop
sbb
jno
and
mov
fistps
jp
sahf
push
out
aam
mov
stos
jg
ja
mov
mov
subb
mov
divl
mov
jmp
push
in
stos
aas
fbstp
fisttpll
xchg
mov
mov
xor
fidivrl
fwait
push
dec
lock
dec
stos
push
add
cltd
lss
outsb
sub
fisubl
es
xchg
mov
nop
imul
or
lods
or
push
sbb
lods
icebp
push
mov
and
push
cmpsl
push
jle
mov
adc
pushf
xchg
mov
jae
cmp
mov
jno
dec
jle
mov
scas
loop
xchg
jle
iret
orl
adc
in
pop
fistpl
xchg
mov
push
idivb
jbe
test
lock
scas
or
imul
int3
movsb
notb
adcl
push
sub
and
sbb
test
int3
or
aam
xchg
aad
sub
xchg
cmp
push
or
add
dec
imul
cmpsb
mov
xchg
adc
mov
xchg
mov
fidivl
test
mov
dec
pop
lcall
xchg
ret
scas
xchg
cmp
lods
int3
xchg
fistpl
test
nop
shlb
into
dec
push
jnp
in
repz
cmp
fxch
mov
int
mov
shll
stos
mov
mov
or
mov
mov
pop
pop
mov
in
xchg
gs
mov
xchg
in
jb
fisubl
mov
lahf
xchg
out
jle
cmp
xor
mov
mov
insb
xchg
mov
cmc
fimuls
mov
xor
pushf
jg
inc
jl
in
pop
lcall
fists
jg
xchg
sarl
js
xor
and
ror
inc
int3
subl
fildll
jb
inc
leave
rclb
add
mov
ret
mov
fbld
jno
mov
adc
sub
mov
inc
out
and
and
mov
lret
out
xchg
mov
imul
or
leave
jg
push
outsb
rcll
es
xchg
shl
mov
sbb
mov
idivb
lods
inc
xor
out
bound
mov
inc
lock
xchg
lea
jbe
cltd
pop
cli
xor
dec
add
mov
dec
nop
mov
dec
cmpsb
aam
es
mov
out
cwtl
arpl
outsb
adc
and
insl
sub
int3
jp
mov
jnp
popf
and
pop
xchg
cwtl
mov
cltd
mov
cmp
and
jmp
dec
mov
adcl
inc
pop
data16
jno
xchg
fidivrl
adcb
adc
shrb
xchg
jbe
mov
cmc
mov
push
lcall
or
sbb
sbb
jle
fsubr
ljmp
cwtl
scas
mov
cld
test
mov
loope
div
stos
dec
and
fwait
adc
add
mov
enter
lcall
sub
cmpsb
outsl
mov
ret
xor
lret
inc
cltd
pop
pop
adc
ds
mov
inc
and
cltd
into
call
push
mov
fidivs
ds
scas
fcmovnb
sarl
call
mov
xchg
adc
insl
lds
push
pop
jmp
test
out
lcall
sub
mov
mov
ret
into
fiaddl
dec
out
xchg
repz
roll
jbe
fidivl
xor
ror
sti
pop
push
xchg
push
mov
jb
lahf
cwtl
jecxz
dec
or
pop
outsl
mov
adc
mov
fists
adc
adc
int
mov
mov
into
and
cwtl
stc
loop
stos
aam
mov
cmp
xor
scas
out
mov
adc
push
mov
daa
or
mov
adc
rcr
push
mov
outsb
xchg
ficoms
cli
mov
fmuls
jle
dec
adc
inc
mov
sub
test
popa
fdivr
sbb
mov
stc
push
mov
loop
push
pop
pop
xchg
mov
mov
ljmp
adc
pop
sbb
imul
shrb
sbb
call
fs
insl
dec
inc
dec
test
in
rclb
int3
adc
mov
sub
push
push
int3
inc
es
cmpsl
push
dec
inc
push
push
mov
mov
fsubrs
fsubp
movsl
push
sbb
imul
aam
pavgw
outsl
cli
push
lcall
rorl
cmc
push
rorl
inc
shrb
xchg
xchg
pop
and
adc
iret
fld
sub
jno
rorb
sbb
sbb
lret
push
jle
xchg
cli
hlt
mov
std
lods
nop
cwtl
mov
adc
fld1
shlb
int
jmp
nop
add
dec
cmpsb
pop
jns
mov
pop
int
dec
fdivrs
lods
int
push
rol
outsl
loop
stos
adcb
and
push
sbb
scas
scas
mov
adc
shll
or
push
in
rol
notb
outsl
xchg
arpl
outsl
mov
fstpt
lods
xchg
fstpt
push
pop
push
xchg
outsl
scas
cs
fisttps
dec
jbe
leave
sbbb
ret
es
cmp
cs
repz
ret
add
or
cmpsb
push
adc
bound
in
mov
push
and
push
xor
test
js
sbb
out
push
rcrb
mov
sbb
adc
mov
push
imul
jbe
enter
xchg
mov
pop
cltd
into
ret
jmp
outsb
scas
ja
dec
out
enter
sub
inc
rorb
push
dec
push
insb
jp
rolb
call
sbb
or
mov
xor
sarb
in
fcmovu
icebp
mov
pushf
sahf
lods
push
inc
pop
xorl
and
dec
je
insb
aam
push
inc
movsl
fsts
dec
lcall
xchg
adc
loope
adcb
cmp
jno
mov
xchg
outsb
es
sbb
xchg
shlb
fistpl
push
loop
mov
mov
ror
adc
inc
shrl
push
inc
nop
or
sub
fnstenv
xor
shll
xchg
adc
adc
jle
jbe
aad
and
dec
pushf
loope
scas
mul
mov
ss
leave
jb
push
cmp
shlb
pop
mov
enter
mov
mov
gs
pop
in
out
add
cmp
mov
xor
repz
cmp
xchg
js,pn
lahf
cli
push
fimull
adc
jp
fidivs
sbb
je
sub
shrb
fnstcw
icebp
mov
adc
mov
xorb
dec
mov
adc
adc
jo
jecxz
insb
bound
cwtl
mov
fwait
test
nop
clc
mov
and
push
push
cmp
push
aad
mov
jecxz
or
sub
mov
mov
xchg
xorb
xchg
mov
adcb
rcrl
cmp
jb
je
and
xchg
bound
mov
loopne
jl
cli
bound
xchg
les
jmp
outsb
lods
xchg
add
or
jmp
fs
xchg
mov
out
xchg
pop
inc
pop
test
mov
aam
fistpll
xor
imul
incb
jno
push
icebp
mov
scas
or
fwait
test
outsb
push
ret
xor
jb
or
outsb
or
sbb
loope
scas
xchg
lods
fwait
stos
sub
fistps
inc
call
dec
mov
and
and
popa
sbb
shll
rolb
jae
lret
xchg
push
lods
movsl
or
adc
push
jbe
sub
jp
bnd
ficoms
pop
into
xor
mov
stos
push
sbb
es
in
outsb
ret
jo
fcmove
in
popf
push
pop
push
jb
adc
adc
pop
mov
insl
xchg
mov
fmuls
fstpl
dec
lcall
cltd
bound
mov
test
xor
shrb
not
pop
xchg
fsub
jo
mov
lcall
out
lock
push
mov
out
out
test
mov
jb
mov
or
push
lret
mov
mov
jle
stos
jns
push
pushf
pusha
pushf
mov
xor
mov
push
lahf
xor
sahf
in
xchg
mov
sub
in
xchg
dec
fsubp
xchg
or
mov
mov
in
aam
push
inc
jb
pop
inc
dec
data16
add
lahf
mov
shlb
xor
sbb
mov
cmp
or
sahf
stos
push
mov
xchg
bound
clc
xchg
push
outsb
rclb
inc
shlb
sbb
out
ds
inc
cwtl
out
pop
mov
jle
dec
adc
mov
push
je
outsb
push
not
es
leave
jg
mov
ret
pushf
push
sbb
ja
aam
mov
sbb
jns
mov
arpl
mov
fcmovb
test
out
sbb
jmp
test
sahf
rcl
jbe
icebp
mov
sahf
sub
sub
movsb
push
call
popa
push
int3
push
adc
adc
out
mov
mov
mov
ljmp
idivb
nop
imul
sarl
cmp
js
ror
fcmovnb
adc
stos
push
pop
pop
xchg
cltd
xchg
sub
popf
int
add
into
mov
xchg
scas
addr16
push
cmp
enter
sub
sub
sbb
nop
jno
shrb
push
mov
adc
inc
xchg
xchg
into
cs
mov
and
fsubl
push
shr
jle
outsl
push
subl
das
loop
jecxz
test
repnz
jmp
outsl
lcall
xchg
jne
rorb
icebp
into
add
sub
fistl
jno
pop
xorl
cs
insb
or
sahf
ljmp
jb
int
lock
fisttpll
mov
cmp
ja
mov
or
add
sbb
jns
jo
dec
dec
test
sub
int3
or
rcrb
push
outsl
xchg
mov
fidivs
mov
pop
cltd
out
cs
jae
nop
cmp
mov
jns
jmp
add
push
add
into
add
cmpl
out
pop
fcomp
sbb
push
and
lcall
lret
ret
cmpsl
dec
loope
sbb
push
stos
jne
push
mov
out
dec
andb
adc
in
iret
and
rcrb
xchg
outsl
cmp
sahf
iret
test
fistl
fidivl
in
ror
ficoml
loop
inc
imul
jb
bound
push
test
sub
out
imul
rcrl
jb
xchg
lret
les
mov
xchg
inc
aam
fldt
arpl
pop
mov
inc
popa
sbb
push
shl
and
cmp
in
sbb
ret
fistpll
int3
jle
enter
shll
flds
sarl
jno
les
push
sbb
push
mov
xchg
lret
mov
ds
xlat
bound
es
es
jae
mov
shll
sbb
ss
mov
movsb
xlat
leave
ret
mov
dec
test
repnz
lcall
add
mov
mov
inc
inc
jle
fcomp
inc
mov
rolb
pop
adcb
mov
fdivrp
pusha
ret
and
enter
dec
test
push
push
iret
rcl
sbb
mov
cmc
xchg
add
or
arpl
lahf
stos
aas
push
ss
xchg
xchg
adc
sbb
pop
jp
loope
fildl
mov
add
push
aam
ja
inc
das
sarb
out
shlb
std
pop
loop,pn
adc
ret
dec
enter
idivl
cwtl
loopne
xchg
lret
sbb
aam
adc
outsl
xchg
insb
sysenter
mov
sbb
int
pop
sahf
scas
inc
jmp
je
or
repnz
or
ss
stos
inc
xchg
mov
push
mov
fwait
sub
into
dec
mov
sbb
rorl
mov
ja
jmp
out
rcrl
rcl
or
orl
aas
pop
ja
jle
out
inc
and
adc
mov
in
jnp
mov
push
bound
mov
fnstsw
jb
pop
sub
xor
jno
rorb
pop
or
call
cmp
into
fisubrl
insl
xlat
ret
adc
push
mov
mov
vpavgw
lret
mov
sub
rclb
cmp
dec
mov
cmp
rcll
inc
pop
push
aam
lods
mov
lods
mov
jnp
repnz
push
and
push
lcall
out
and
xchg
mov
xchg
cwtl
aam
in
fcomps
rcr
sbb
adc
scas
push
xor
hlt
ss
outsb
dec
gs
enter
mov
push
and
cmpsb
loopne,pn
xor
cmpsb
xor
into
jle
outsb
nop
shrl
mov
pusha
popf
subl
clc
loope
xlat
sahf
mov
dec
out
xchg
fildll
mov
push
fisttps
cld
lcall
addb
jb
jnp
sahf
rcr
xchg
lret
out
js
mov
imul
pop
fptan
call
repnz
mov
cwtl
mov
push
repnz
cmpsb
inc
mov
mov
mov
add
cmp
cmpsl
jo
xchg
pop
mov
repz
push
int
ja
fmull
adc
push
or
jmp
dec
jp
inc
fsub
mov
xchg
lahf
rclb
sbb
or
in
rolb
call
jecxz
lcall
faddl
xorb
add
adc
mov
bound
in
in
push
mov
in
cmp
push
jp
fbstp
jmp
stos
jp
pop
les
and
push
push
into
xchg
pop
mov
js
cmpsb
sahf
push
insb
push
sbbb
popf
mov
nop
repnz
mov
js
mov
ret
mov
sahf
int3
loop
sbb
lret
and
mov
ret
pusha
nop
in
push
add
lods
mov
lea
mov
mov
mov
add
test
orb
fsts
mov
fcoms
mov
jbe
aam
xchg
xchg
aam
xchg
loope
xchg
xchg
mov
sub
vpsubusb
jmp
sarb
jno
out
ds
mov
sbb
pop
and
push
mov
repnz
cmpsb
and
pop
out
fsts
lcall
mov
jp
sahf
or
mov
enter
sbb
fidivrs
mov
xchg
xchg
loope
aam
lret
sahf
push
popf
stos
cwtl
test
sub
ljmp
xchg
and
imul
fsubrl
es
fbld
xchg
ds
jnp
mov
or
sbb
stos
push
ror
mov
mov
negb
in
daa
jbe
pushf
mov
lret
test
daa
aam
scas
inc
cwtl
ss
mov
cmpsb
dec
mov
data16
xchg
mov
jmp
loope
mov
pop
dec
stos
or
outsl
xchg
lods
mov
push
enter
sbb
int3
cmp
and
call
outsb
sub
jb
inc
lahf
or
ret
sbb
loopne
lret
out
jle
shl
xor
mov
fdivr
cmpsb
fwait
cmp
jno
xchg
add
xchg
imul
adc
ficoms
scas
cmpsb
cwtl
dec
mov
jb
push
mov
dec
pop
lcall
lcall
setno
notl
lcall
or
les
mov
dec
mov
bound
xchg
xchg
push
sbb
jp
xchg
popl
mov
jg
cld
iret
add
xchg
lcall
dec
add
mov
adc
xor
out
sub
bound
repz
sub
int3
add
jecxz
dec
or
daa
jp
jns
jp
fisubs
and
xchg
and
cwtl
add
nop
xchg
in
stos
clc
mov
scas
jg
jle
adc
popa
adc
ja
into
push
jl
clc
jns
xchg
iret
jle
jg
mov
ljmp
js
jmp
pop
lcall
js
dec
xchg
xchg
iret
lcall
sar
push
ret
lret
lret
or
out
xchg
jae
push
cltd
xchg
test
mov
xchg
out
or
lret
adc
cwtl
insl
outsb
xchg
jbe
push
push
stos
add
cmpsl
lcall
xchg
adc
adc
jae
xchg
mov
test
aad
jbe
cmp
push
stos
scas
scas
inc
out
cmp
push
mov
mov
xchg
test
mov
mov
sub
shrl
sbb
mov
pop
jne
xchg
cli
rorb
xlat
mov
cli
or
inc
fcomp
mov
aam
xchg
scas
loop
mov
pop
scas
mov
jmp
jmp
mov
sbb
int
imul
mov
push
sub
adc
dec
pop
jp
mov
adc
pop
iret
cmpsb
adc
mov
xchg
xchg
in
push
mov
rcr
mov
adc
out
push
into
cs
push
jno
jmp
subb
push
jbe
adc
xchg
mov
mov
scas
jno,pt
movsb
jle
aam
cmpsb
adc
imul
shlb
cwtl
mov
test
sahf
nop
adc
cmpsb
jo,pn
int3
sbbb
shll
xlat
adc
pusha
cmpsb
xchg
mov
xchg
lret
cs
push
mov
mov
add
call
rorb
push
ficoms
mov
mov
pop
push
xchg
bound
mov
mov
adc
loopne
testb
cmpsb
in
sub
int3
jp
sahf
sbb
xchg
sahf
push
repz
mov
loop
rcr
sahf
mov
ja
sarb
jge
lods
mov
sarl
int3
mov
or
jl
int3
int3
popa
sahf
jle
lcall
in
jp
jbe
jns
sahf
testb
iret
xorb
out
add
out
or
fbstp
and
subb
out
lods
jns
cmp
or
int
push
movsb
mov
jo
imul
cmp
rcl
out
mov
jbe
jle
jo
iret
cmpl
leave
sahf
jg
push
js
and
rorb
push
cmpb
js
xor
mov
outsb
xor
mov
add
adc
pusha
popf
lret
into
xorl
and
iret
mov
js
lcall
cmpsb
jg
mov
rclb
jp
adc
push
int
push
cmp
popf
in
inc
out
and
jmp
outsb
xor
jno
xchg
xchg
subl
ret
mov
adcb
pusha
shrb
pop
sbb
lods
into
add
xchg
int
fistpll
insb
andl
pusha
gs
repnz
lock
jg
xchg
arpl
sti
push
jb
call
mov
jns
lds
mov
ret
or
lods
ja
adc
notb
mov
mov
stos
cs
mov
or
iret
mov
pop
sarb
fadd
xchg
insl
int3
sub
in
cmpsb
lcall
mov
push
mov
lock
push
mov
xchg
push
mov
repnz
xchg
xor
xor
not
jb
mov
mov
pop
in
je
fisubrs
mov
mov
pop
mov
cs
sarb
outsb
jbe
push
adc
pop
cmpsb
dec
push
fadds
pop
gs
pop
dec
inc
mov
dec
cmp
jnp
pop
lret
std
dec
inc
fisttps
ret
and
xchg
insl
mov
jnp
lods
xchg
popf
or
cmp
or
rorb
repnz
sbb
pop
mov
aam
test
lcall
scas
insw
scas
into
test
fidivrl
aam
pop
outsb
or
fmuls
push
mov
daa
xor
nop
push
mov
jle
pop
mov
pushf
inc
xchg
mov
pop
mov
test
push
and
aam
sub
xchg
ficompl
xchg
mov
adc
push
repz
dec
and
mov
clc
repz
dec
and
mov
adc
aam
mov
fisubrl
sbb
fimuls
daa
fnstcw
xchg
jae
pop
outsb
push
dec
stos
imul
adc
stos
dec
fists
mov
cli
fcomps
aad
pushf
mov
mov
mov
mov
cmpsb
cwtl
mov
fdivr
test
cli
int3
sahf
mov
adc
inc
fisttps
sbb
or
push
outsb
lret
mov
je
sub
sub
mov
cmp
setne
call
mov
jecxz
fcoml
inc
int3
outsb
outsb
sbb
fisubrs
sbb
push
stos
dec
adc
int
jb
rclb
mov
xor
lea
inc
adc
in
sub
pop
incb
in
push
adc
test
jmp
aam
pop
scas
sbb
inc
sarl
push
push
sbb
mov
mov
out
fdivrs
nop
popf
repnz
push
outsb
cmpsl
fsub
imul
rcll
insb
jl
lcall
fimull
scas
lods
cmpsb
adc
xchg
jp
cli
sahf
mov
aam
jp
lcall
adc
push
fidivl
insb
call
fdivrs
mov
fdivs
out
cmpsb
sub
loope
imul
sbb
or
flds
push
and
adcb
dec
push
sub
mov
aam
fcoms
push
adc
xchg
dec
mov
int3
push
xchg
stos
stos
mov
subl
jle
dec
stos
xchg
xchg
and
jecxz
ja
pushw
xchg
xchg
adc
push
ret
inc
lret
jmp
push
scas
adc
add
sbb
xchg
data16
dec
orb
jl
xorb
lret
fistpl
and
mov
loop
rorb
pop
lods
in
sbb
rcrl
push
cld
adc
adc
and
cli
push
push
jns
out
imulb
out
clc
jp
int
iret
jle
mov
or
fidivs
ret
adcl
sbb
cmp
and
and
popa
cmp
dec
sahf
bound
and
loope
and
ljmp
in
lea
mov
aam
ljmp
fidivrs
mov
push
in
scas
mov
adc
lock
movsb
repz
adc
sahf
mov
mov
jb
xchg
mov
sbb
mov
lcall
mov
inc
sbb
add
insb
or
lock
addr16
xchg
daa
ljmp
les
xor
mov
daa
mov
push
sbb
nop
aam
sahf
ltr
mov
mov
fsubrs
in
and
js
cmp
jo
cmp
lods
sti
mov
push
sbb
repnz
mov
cwtl
lods
fwait
adc
mov
addr16
push
xchg
outsl
test
repnz
pusha
fdivrl
ljmp
jbe
sbb
cmp
test
in
sub
mov
cs
inc
andb
out
lahf
mov
mov
mov
mov
xchg
sub
pop
mov
icebp
cld
or
xchg
imul
push
pushw
insl
push
mov
sbb
sbb
inc
sbb
pop
cmpsb
sbb
sbb
mov
pop
sbb
jbe
mov
ret
fcmovbe
sub
add
sub
mov
test
adc
xchg
xchg
sbb
jle
push
fldcw
mov
stos
pop
gs
int3
fcoms
sbb
shl
adc
push
xchg
lret
lea
outsl
xchg
push
notl
pop
push
jno
mov
es
mov
fdivrp
and
mov
mov
add
mov
dec
jo
push
sbb
cwtl
fmul
sbb
dec
lods
push
testb
dec
test
push
jnp
jo
lret
jno
adc
fwait
adc
lods
xlat
mov
sbbl
clc
jp
aam
out
leave
sbb
and
das
ljmp
fnsave
bound
mov
imul
scas
out
sbbb
or
adc
or
jnp
xchg
pop
add
lret
adc
fistps
mov
stc
jl
rclb
mov
mov
jmp
push
ret
sub
outsb
cwtl
push
sbb
add
lods
je
fildl
into
lcall
shrb
sahf
xor
cli
cmpsb
in
push
in
mov
push
cli
int
aad
sbb
cwtl
rorb
loop
es
fisttps
enter
arpl
inc
jp
sub
sub
xchg
mov
fadd
xchg
and
xchg
xchg
push
lcall
mov
xchg
push
fcmovnbe
xchg
dec
pop
fisubrs
push
push
lret
rcr
pop
jno
lret
aam
jae
or
fldt
shlb
test
xor
dec
pushf
in
mov
or
fcompl
aam
stos
inc
push
pop
outsl
dec
mov
cli
mov
xchg
in
add
and
loope
adc
or
inc
fcmovu
xchg
adc
mov
les
mov
aas
popf
ret
jle
jbe
mov
lcall
mov
xchg
mov
jno
les
sahf
aam
fnstcw
pop
mov
lods
loope
test
dec
loop
lea
cwtl
test
in
xlat
enter
in
in
push
xchg
jns
mov
fadd
adc
mov
pop
mov
and
xchg
lea
jb
jae
push
and
dec
popf
xchg
jmpw
pop
dec
mov
out
dec
adc
sbb
loope
fchs
addb
mov
in
fisttps
xchg
fldt
jp
mov
fstps
jle
jp
mov
fisttps
loop
sub
lods
pop
push
jne
pop
loop
insb
jb
rolb
iret
out
xor
xchg
add
mov
insb
sbb
pop
sbb
loopne
xchg
js
push
sahf
enter
popa
jle
js
sahf
push
jg
out
je
jno
sahf
loope
xchg
push
jle
push
dec
js
sahf
imul
js
sahf
scas
jg
int3
xchg
pop
lods
and
call
outsl
cmpsb
pop
lcall
ret
pushf
fildll
jb
or
fwait
loope
and
sahf
xor
bound
push
lea
jl
test
arpl
push
out
lcall
cmp
add
lods
int3
xchg
nop
movsl
in
les
push
sbb
int3
pop
jb
mov
push
stos
mov
out
fdivl
fisubl
mov
sbb
ffreep
ljmp
sbb
into
loopne
bound
nop
mov
jbe
aas
faddl
adc
int
jo
rorb
jle
mov
ret
or
in
fldenv
in
scas
out
dec
sub
enter
mov
test
cwtl
push
aam
je
adc
fcmovne
or
sbb
mov
adc
es
sbb
sahf
sahf
out
jbe
loop
in
rcll
test
adc
push
and
dec
inc
xchg
out
sarb
mov
popa
sahf
pop
lcall
xor
sahf
sbb
mov
shlb
xchg
pop
stos
or
loop
cmpsb
fdivrl
and
jo
stos
xchg
xor
mov
mov
push
lcall
out
push
lcall
and
leave
mov
push
mov
push
jb
iret
mov
mov
jbe
fisubrl
daa
rclb
xchg
orb
xchg
jb
xor
test
imul
pusha
push
shlb
and
loop
pop
jbe
cmp
cmpsb
or
adc
into
ljmp
test
mov
adc
or
sarb
mov
mov
lock
pop
xchg
dec
cli
or
and
aam
push
lods
and
test
or
and
fists
dec
add
sbb
aam
fimull
inc
jp
mov
push
push
and
cli
xor
sub
lea
and
and
mov
sahf
pop
or
nop
adc
lds
lods
and
jns
jmp
loope
mov
mov
sbb
and
mov
into
xchg
sub
mov
lcall
filds
push
jb
mov
rcrb
or
pop
pushf
and
cli
mov
bswap
fnsave
cmp
jle
stos
push
adc
in
shrb
xor
push
fxch
imul
jne
lods
sahf
jb
in
insl
jge
xor
xchg
nop
mov
push
fdivrp
out
push
test
das
jp
rcrb
fchs
outsb
mov
and
lods
es
sbb
cwtl
mov
jmp
fisttpll
mov
ss
mov
mov
mov
mov
mov
out
sbb
jecxz
mov
cmpsl
mov
or
bound
adc
sub
adcb
repnz
ficomps
enter
push
bound
fcmovu
sub
add
mov
xor
xor
stos
in
sbb
mov
dec
and
pop
loopne
mov
test
dec
inc
pop
shl
rcr
enter
les
rorb
scas
out
push
jle
jg
cmp
xor
movsb
lea
inc
lea
mov
mov
xor
jbe
ljmp
js
and
fcomip
out
and
loop
ds
ljmp
shlb
popa
fsubl
rolb
pop
mov
or
jl
mov
fldl
mov
fld
mov
inc
enterw
and
add
sbb
faddp
jle
sbb
jno
mov
mov
sub
jecxz
push
mov
test
ror
fcmovbe
sbb
movsb
inc
aam
jnp
push
es
out
into
xchg
add
ficoms
out
sbb
rcrl
jb
in
adc
push
nop
jno
outsb
mov
shlb
mov
pop
jnp
enter
iret
lcall
dec
sahf
push
mov
imul
fisubs
push
jp
nop
idivb
jp
lcall
in
fcoms
push
into
mov
jp
test
loop
jle
mov
aam
rclb
lcall
mov
jecxz
mov
mov
push
and
or
jbe
mov
or
fistpl
insb
shlb
shlb
dec
imul
dec
nop
mov
outsb
cwtl
loop
f2xm1
loope
and
dec
pop
xor
jo
scas
rorb
mov
mov
ficoms
dec
and
fsubs
cmpsb
ds
jne
push
jnp
adc
sahf
out
xor
lods
sub
hlt
js
mov
cmpsb
mov
mov
jp
sbbb
rol
or
aam
loope
lret
test
jmp
es
stos
xchg
mov
mov
fsub
cmpsb
insl
addr16
insl
mov
jp,pn
inc
hlt
sahf
int
jo
mov
popa
ds
adc
sahf
lahf
sbb
aam
mov
jecxz
jp
jle
xchg
jo
mov
jle
iret
mov
enter
push
out
lcall
scas
jle
mov
push
jb
fs
xchg
repz
jle
fst
cmp
mov
fcoml
inc
ret
push
sbb
jecxz
lods
imulb
jno
incb
xor
lcall
aam
mov
repz
rolb
test
roll
not
xorb
int3
xchg
pop
mov
cwtl
lret
cwtl
xchg
dec
jbe
xchg
push
xchg
pop
fbld
stos
in
rclb
xor
xor
sub
mov
ljmp
out
stos
push
jb
ficompl
shlb
jp
test
repz
stos
lods
pop
ret
mov
std
movsb
aaa
insl
pop
mov
in
mov
loop
add
hlt
pop
sub
or
jno
mov
in
cli
in
shrl
push
mov
jecxz
rcrb
push
sub
fstpl
loopne
cmc
in
inc
push
loop
or
push
pop
xor
data16
push
js
add
mov
pop
lods
pusha
int
push
jns
dec
aaa
lds
inc
movsl
pop
mov
jmp
popf
sbb
xchg
push
ljmp
push
xchg
mov
mov
mov
lods
repnz
pushf
and
mov
xchg
sbbb
enter
cmp
movsb
add
add
jp
xchg
and
cmpsb
test
icebp
xchg
jp
or
jbe
dec
ror
sbb
bt
sahf
ja
sbb
cmpl
rorb
repnz
cltd
or
push
testb
adc
adc
jmp
adc
lods
bound
int
inc
dec
lret
mov
popf
mov
jo
insl
imul
xchg
add
movsl
je
xchg
cwtl
lret
fwait
imul
ljmp
xchg
cmpsb
outsb
stos
dec
mov
inc
insl
push
inc
jp
mov
loop
jae
shlb
stos
jne
les
test
xchg
nop
into
or
stos
add
push
inc
and
sbb
xor
mov
dec
or
cli
push
jns
mov
mov
fists
jb
add
test
cli
js
sub
cmp
insb
mov
iret
xchg
and
mov
mov
gs
sub
dec
xchg
fists
scas
aaa
cli
enter
xchg
andb
push
ss
and
int
cwtl
dec
sub
cmpb
xchg
pop
mov
bound
push
popf
outsl
scas
orl
and
mov
jno
outsb
rolb
cwtl
jo
jns
dec
sahf
adc
push
bound
lcall
or
lds
push
movsl
les
xchg
ljmp
xchg
jne
xchg
mov
dec
xchg
outsb
or
add
lret
mov
or
xchg
aam
xchg
add
mov
mov
jg
xor
sbb
aas
mov
adc
ljmp
sahf
cmpsb
mov
mov
push
in
dec
jg
mov
adc
jp
in
stos
sahf
jno
sbb
test
adc
jb
push
fcoms
rclb
dec
push
pop
fbld
test
mov
adc
sub
jp
jno
or
rorb
enter
mov
cmp
mov
xchg
fwait
push
or
ds
enter
jb
adc
loopne
or
sarl
jbe
inc
sahf
test
mov
outsl
cmc
ljmp
sub
js
ja
sbb
ss
ljmp
shrb
dec
xchg
mov
imul
mov
jbe
call
mov
daa
lret
or
cmp
dec
mov
mov
mov
xchg
push
add
ljmp
mov
and
jb
test
ds
bound
arpl
mov
sub
lcall
popa
xchg
push
mov
lret
fsubrs
or
jb
push
and
jo
loop
outsb
xchg
cmpsb
xchg
aad
push
ljmp
shl
mov
nop
jg
bound
mov
dec
or
jg
jb
or
xchg
pop
scas
adc
fwait
ds
pop
push
fs
or
daa
imul
insb
jb
ret
out
inc
stos
jge
xchg
sbb
mov
or
bound
mov
add
test
outsb
mov
in
xchg
ficompl
jbe
rol
ljmp
lahf
mov
xchg
jae
mov
adc
and
mov
outsl
mov
sub
notb
in
push
xchg
xchg
push
imul
or
andb
lret
xor
mov
sti
jne
decl
movsl
shrb
xchg
mov
inc
aam
orb
mov
mov
nop
dec
outsb
dec
incb
xchg
jb
enter
or
and
sbb
pop
jnp
cltd
cmc
inc
fiadds
jbe
idiv
pop
insl
and
rolb
push
roll
daa
imul
xchg
stos
decb
cmp
mov
enter
orb
test
and
sahf
cmpsl
je
add
sbbl
mov
das
add
nop
fisubl
pusha
repz
inc
int3
xlat
cmp
mov
mov
mov
mov
sub
cmp
adc
ficoml
dec
jle
stos
lods
dec
xor
cmp
movsl
mov
addl
sahf
xor
nop
mov
pusha
cmp
negb
out
hlt
in
dec
popa
fimull
xor
ret
dec
data16
imul
les
xor
loopne,pn
dec
adc
push
or
pop
cmpsb
dec
jp
invlpg
and
lods
in
dec
xchg
repnz
pop
xchg
loop
jo
pop
out
xor
xor
mov
xchg
gs
add
sub
fnstcw
lret
sbb
or
add
mov
mov
or
gs
nop
adc
cmp
sbb
negb
and
invd
sub
xchg
insb
fidivl
dec
fidivl
cmp
cli
mov
lea
dec
out
jp
push
test
mov
or
xchg
jmp
sub
cmp
xchg
aaa
test
cltd
mov
lahf
fmuls
pop
jns
adc
call
in
or
mov
out
ret
dec
jns
subl
in
outsl
pop
imul
jne
sub
cmpsb
cltd
and
movb
push
inc
and
mov
inc
int
pop
arpl
testb
pushf
dec
xor
cmpsb
fbld
pop
adc
mov
into
pop
aaa
jo
rcrb
mov
std
lods
add
jo
rorl
loopne
les
lds
mov
pop
mov
pop
imulb
add
out
adc
mov
clc
repz
pop
sbb
push
sarb
lret
dec
out
dec
adc
sub
or
cmp
mov
or
sahf
repnz
outsb
lret
adc
lret
xchg
mov
fdivrs
pop
mov
stc
adc
xorb
xchg
bound
and
adc
clc
aas
cwtl
sub
mov
mulb
sarl
adc
dec
mov
cmp
mov
stos
mov
mov
outsb
hlt
cmp
insb
xchg
fnstcw
pusha
jecxz
or
int3
inc
jp
movsb
dec
cltd
mov
lahf
popl
push
std
in
xchg
xchg
or
xchg
in
out
test
bound
add
movsl
cmp
jecxz
loope
sub
clc
adc
cmp
sahf
cmp
jge
mov
fsubrs
ss
or
int3
test
mov
push
jg
pop
xchg
nop
jecxz
inc
or
push
xchg
push
jg
jne
mov
adc
leave
nop
mov
mov
push
cmp
mov
dec
fisttpl
sti
stc
aaa
aad
ret
or
mov
cmp
jge
jno
mov
xchg
push
xchg
xchg
mov
mov
test
sub
sbb
cwtl
jns
sub
mov
orl
lahf
dec
pop
add
movsl
xor
subl
inc
lcall
cmpsl
jmp
shlb
cltd
cld
cmpsb
pop
adc
call
mov
mov
xchg
pop
das
push
clc
dec
cld
push
repnz
arpl
mov
lea
dec
ret
shl
sbb
mov
push
andb
test
dec
xchg
mov
pop
lds
mov
xchg
pop
out
imul
pop
cmp
hlt
test
add
jle
int3
mov
xchg
mov
dec
out
dec
add
dec
orb
lcall
dec
stc
xor
adc
xchg
pop
pop
cmp
inc
push
inc
pop
lock
pop
pop
aaa
xchg
dec
add
mov
mov
cmp
js
xchg
mov
push
cmp
dec
inc
addr16
in
inc
insl
test
inc
cmp
cltd
push
mov
rorb
mov
cs
pop
mov
jl
out
jecxz
cwtl
xchg
adc
pushf
or
movsb
mov
adc
rcrb
insb
mov
gs
loopne
je
push
rorl
sub
push
xor
mov
cltd
int
sahf
sub
lcall
rcrb
inc
cltd
cmp
push
pop
jo,pt
cmp
ror
lcall
pop
jmp
mov
sub
dec
or
mov
lret
mov
sub
dec
cs
loope
lret
shlb
push
mov
xchg
inc
xchg
outsb
xor
push
jl
push
pushf
pop
push
push
rorb
into
xchg
icebp
in
xchg
sbb
lcall
cli
xchg
or
xchg
inc
mov
push
in
shrl
xchg
std
stc
push
cli
ljmp
sbb
lahf
adc
enter
jns
je
push
push
fnstcw
mov
sbb
cmp
mov
dec
push
fcmove
outsb
jae
cmp
aad
mov
dec
dec
rorb
hlt
inc
adc
mov
mov
xchg
lret
mov
movsl
setg
fs
aam
inc
movsl
outsb
inc
cwtl
pop
dec
cmpsb
shrb
xchg
outsl
loop
js
sahf
int3
mov
lods
jbe
into
movsl
into
mov
ja
push
push
mov
repz
int3
std
adc
xchg
xchg
mov
stc
pop
cmp
repnz
xchg
gs
scas
jmp
ret
mov
imul
xchg
push
add
pop
inc
rcll
xchg
ret
dec
push
cmp
call
xchg
xchg
mov
imul
sub
push
xchg
xchg
sbb
imul
clc
bound
test
xchg
push
movsb
push
pop
xor
xchg
xchg
xchg
cmp
dec
push
fcomp
push
test
lea
lahf
mov
jns
sub
lahf
adc
jnp
cwtl
nop
fisttps
push
cmpsb
add
stos
rclb
sti
int
xchg
jp
or
push
mov
popf
push
cs
insl
xor
pop
xor
outsb
rorb
mov
shll
mov
aam
xchg
or
jnp
enter
outsl
xchg
sarb
mov
push
mov
add
pop
inc
add
cwtl
lea
rcrb
je
add
inc
test
mov
in
mov
mov
jle
call
sbb
pop
cmp
jp
xchg
mov
xlat
xchg
push
add
mov
xchg
rcl
inc
cmpb
in
shlb
inc
xchg
and
je
mov
js
fldln2
ljmp
dec
xchg
and
xchg
outsl
adc
push
jnp
mov
pop
cld
sti
push
icebp
push
add
dec
jnp
pushf
imul
insb
ret
jp
dec
mov
mov
or
xchg
push
jns
cltd
mov
bnd
pop
xor
call
cltd
shll
pop
mov
jo
jnp
in
dec
xchg
mov
xor
cmc
insb
xchg
sub
push
xchg
mov
lahf
mov
je
dec
push
mov
dec
lock
push
cs
call
pop
ret
cltd
divb
nop
sbb
pop
pop
cmc
lcall
stc
mov
aad
sub
fidivrs
or
jnp
adc
repnz
aaa
sub
mov
imul
mov
call
or
cmp
pop
dec
test
call
pop
xchg
lahf
rolb
shlb
mov
push
push
mov
in
push
adc
aam
adc
jns
leave
cmp
loopne
nop
cmp
jbe
mov
adc
mov
jbe
cwtl
jle
push
mov
jecxz
xlat
xlat
popa
punpckhdq
mov
jne
fcmove
sub
dec
stos
imul
mov
outsb
or
idivb
jbe
add
mov
mov
in
ljmp
add
or
sbb
or
xlat
add
imul
xchg
test
pop
jns
test
lea
adcl
xchg
jns
rclb
popf
xchg
lea
mov
push
lods
out
xor
outsb
push
andb
scas
scas
mov
mov
popa
jno
xchg
ja
sub
rcrb
mov
roll
jle
aam
mov
test
hlt
outsl
jg
iret
jle
jp
adc
pop
mov
pop
ret
xchg
lcall
arpl
cltd
mov
lret
mov
mov
mov
clc
lea
rorl
jns
mov
lea
nop
xchg
sub
xchg
arpl
xchg
cwtl
lcall
pushf
daa
popl
xchg
fwait
mov
cwtl
mov
mov
mov
gs
jno
inc
sbb
rcl
or
add
sub
lea
hlt
mov
lea
iret
std
lcall
imul
leave
inc
cltd
inc
cwtl
mov
leave
mov
push
sbb
xchg
mov
stc
dec
popf
fcomps
mov
test
or
ficompl
insb
jae
jno
jle
jge
addl
int
rcl
rcl
dec
push
fstp
mov
loop
loopne
scas
lods
lods
xchg
mov
mov
or
mov
rol
push
or
adc
sbb
push
sbb
and
call
mov
repnz
lock
std
mov
add
add
dec
dec
dec
mov
push
push
push
push
pop
pop
mov
pop
arpl
pusha
sub
sub
xor
mov
cmp
aas
ds
inc
inc
bound
pop
leave
xor
mov
bound
sahf
lcall
lods
pushf
ret
xchg
imul
xchg
test
xchg
sahf
enter
arpl
lret
ljmp
cmp
pusha
pop
popa
add
or
or
test
nop
pop
add
sub
das
mov
dec
addl
pusha
hlt
sbb
mov
add
pop
in
testl
sub
mov
push
add
inc
leave
sbb
movsl
cmp
cmp
cmp
adc
inc
adc
push
and
xchg
and
mov
dec
jae
jmp
xchg
mov
push
sbb
mov
jno
ja
movsb
repnz
or
shll
adc
stc
fs
xor
inc
pop
and
insl
decb
sbb
hlt
adc
pop
sarb
or
subl
sub
movl
std
fldt
push
jmp
mov
push
mov
stos
jb
mov
shlb
xor
icebp
lods
xor
mov
jae
add
aad
xor
dec
pop
out
imul
fadd
ror
fdivr
xchg
ljmp
in
mov
rcrb
clc
loopne,pt
notb
loope
ljmp
inc
nop
adc
pop
mov
lds
push
mov
lods
sub
mov
ficompl
call
dec
lods
lods
sbb
cmp
lret
js
cmpsb
or
test
pop
push
xchg
cmp
sub
xor
push
in
cmp
mov
fcmovnu
add
cmp
dec
inc
out
mov
or
jnp
and
loope
enter
sub
mov
xlat
pop
mov
shl
pop
push
mov
aaa
mov
cmc
addr16
dec
and
in
out
mov
mov
clc
jl
movsl
loope
mov
push
outsl
testl
mov
in
aad
jae
cmp
or
mov
pop
sbb
xor
cmp
cmc
clc
scas
lock
dec
cmp
outsl
and
ret
sub
jecxz
pop
dec
add
mov
pop
and
cmp
popa
mov
mov
testl
mov
lahf
mov
jne
push
inc
dec
mov
das
lea
and
xchg
xor
inc
mov
mov
and
jb
mov
fcmove
bound
push
test
lcall
addr16
loopne
cmc
or
mov
mov
sub
xchg
push
xor
add
adc
mull
mov
cmpsb
add
dec
pop
pop
loopne
mov
mov
movsl
pop
das
enter
testl
jle
mov
mov
push
mov
xchg
scas
add
ljmp
xchg
es
add
mov
inc
stos
mov
jg
aas
mov
aam
sub
lds
mov
jne
daa
and
xor
push
js
popa
leave
cmpsb
sbb
and
inc
div
out
shlb
cmpsb
inc
scas
sbb
movsb
pop
or
fwait
dec
cmp
mov
push
movsb
xchg
pop
stos
mov
jns
jecxz
test
or
hlt
adc
mov
loop
jmp
jns
mov
mov
stos
mov
adc
mov
xchg
xchg
dec
shrb
xchg
mov
mov
cmpsl
xor
and
decl
mulb
out
mov
scas
pop
std
sub
in
mov
in
push
mov
ljmp
call
inc
arpl
pop
lahf
stos
dec
imul
imul
mov
iret
stc
inc
inc
mov
cmp
push
aas
loop
and
mov
cmp
dec
dec
push
cwtl
iret
mov
and
add
outsl
cmp
cmp
cmp
xor
sub
xor
jae
cmpsl
pop
mov
sub
mov
fwait
adc
rclb
decl
ja
jmp
dec
inc
mov
imul
stos
mov
aaa
cmp
aas
mov
mov
push
mov
movsl
mov
ds
in
pop
dec
or
xchg
call
fimull
add
movsb
shr
xchg
dec
mov
in
mov
fstpt
inc
mov
sub
xlat
movsb
sti
mov
hlt
add
xor
mov
and
shr
sub
xor
mov
jb
shrl
inc
mov
adc
inc
lds
pop
lea
xor
stc
in
mov
leave
xchg
ds
rorb
mov
es
inc
popf
sub
cmp
jbe
insl
and
xchg
jae
sbb
add
xchg
lds
sub
sbb
xor
pop
jo
mov
out
jecxz
xor
dec
mov
push
lea
sub
xlat
sub
add
stos
pop
out
mov
mov
pushf
sub
add
rcrl
add
mov
int3
cmp
imul
jmp
jno
mov
repz
push
adc
fimuls
subl
sti
mov
sub
mov
popa
jge
and
cmp
pop
push
mov
imul
test
xchg
sub
jnp
add
mov
cmp
pop
les
loope
mov
daa
pop
mov
loopne
mov
jp
out
push
mov
mov
loop
popf
cltd
fwait
jns
insl
movsl
ret
sub
cmovb
dec
cli
sub
pop
or
xor
fldcw
int3
pusha
push
cli
mov
lret
dec
or
inc
mov
and
lret
mov
inc
stos
cmp
movsb
ja
dec
lahf
dec
sbb
daa
lock
in
mov
mov
cmpsl
ror
out
rol
lods
sbb
mov
mov
lcall
sbb
cli
pop
dec
xchg
dec
popf
lret
mov
cmpsl
dec
mov
jle
xchg
ret
mov
cmp
cmp
dec
in
aad
mov
shlb
fwait
and
mov
push
dec
js
mov
cmp
xor
sbb
and
mov
mov
nop
jge
pushf
decl
flds
je
mov
or
push
add
rolb
aaa
rclb
jle
lahf
iret
xchg
repz
jecxz
sbb
mov
loopne
shr
fistpl
pusha
outsb
mov
jb
jp
iret
push
push
xchg
or
sti
out
sbb
insl
std
dec
lret
mov
mov
out
cmc
dec
data16
stc
fcomps
add
mov
or
mov
adc
mov
pop
dec
push
fabs
xchg
cmpsb
jb
adc
and
nop
cwtl
or
out
or
daa
xchg
xchg
push
xchg
mov
dec
andb
ret
nop
fwait
cwtl
mov
imul
xchg
out
lcall
shlb
lret
cli
cmp
push
xchg
lea
inc
xor
sbb
cmpsl
pop
imul
mov
pop
fisttpll
mov
add
std
add
inc
mov
sbb
lcall
mov
xchg
add
data16
mov
cmp
mov
xchg
dec
pushf
mov
fstpl
inc
cwtd
test
nop
and
inc
xchg
adc
xchg
push
fiadds
cmpsl
les
imul
dec
enter
cmp
test
xchg
sub
movsl
fsubrl
fld
dec
jl
xchg
xor
fwait
outsl
fisubrl
lea
jp
fistl
repz
mov
dec
fdiv
xchg
nop
out
pop
cld
push
lret
xchg
pop
jmp
mov
out
test
lahf
lret
test
xchg
sub
xchg
jo
scas
test
adc
push
test
xchg
cmpsl
les
imul
lea
mov
into
xchg
mov
cltd
inc
sub
mov
push
sbb
imul
into
dec
js
sahf
int3
fwait
sub
xchg
push
xchg
scas
jl
inc
jl
xchg
divb
lcall
jle
outsl
xchg
mov
js
outsb
jo
xchg
push
aaa
cmp
paddusw
stos
dec
sub
jnp
cs
imul
pushf
insl
push
add
dec
out
xchg
mov
iret
aad
loope
or
cli
push
mov
aad
cwtl
loope
cmpsb
rcrl
cli
mov
inc
mov
imul
push
pop
loopne
imul
mov
sarl
mov
iret
int3
adc
out
sbb
sub
xor
movsl
sub
iret
adc
imul
imul
and
insl
loope
dec
jb
xchg
rcll
cmp
cltd
out
pop
out
imul
mov
xchg
mov
mov
test
outsb
out
aam
pop
mov
inc
xchg
ljmp
lea
bswap
nop
lret
lea
dec
dec
add
icebp
jmp
pop
test
add
lds
push
xor
sahf
or
lock
call
mov
push
pop
jp
xor
add
enter
imul
push
xor
xchg
enter
enter
iret
in
mov
dec
xor
andb
in
cmp
mov
xchg
lret
pop
cmp
movsb
out
push
pop
add
jp
sub
movsl
lds
inc
jne
iret
stos
push
cmpsb
inc
mov
stos
xlat
cmpsl
ret
adc
shrb
lcall
xchg
xor
xchg
fwait
or
shl
push
adc
or
aam
clc
movsb
xchg
and
push
sbb
jo
fwait
cmp
or
jo
cmpsb
fcoms
or
ja
xchg
out
xchg
iret
jo
jo
jbe
xchg
pop
stos
int
cld
and
xchg
inc
ror
or
cwtl
jno
jne
xchg
push
add
js
lahf
into
jne
or
subl
inc
mov
inc
dec
inc
in
jns
daa
add
cmp
mov
xor
inc
jnp
orb
mov
mov
jno
test
and
push
nop
mov
adc
nop
cld
lret
jmp
rcll
mov
inc
xchg
cltd
aam
mov
out
xchg
addr16
sbb
or
loope
pop
xchg
push
stc
icebp
out
or
sub
xchg
ret
sbb
cmp
outsl
jecxz
inc
enter
pop
cmp
sub
movsl
insb
xchg
push
dec
orl
out
movsb
jae
arpl
lahf
jne
cmp
cmp
sti
mov
mov
sbb
insb
scas
xlat
daa
jbe
push
xchg
mov
mov
fs
adcl
in
mov
sub
push
inc
loope
mov
scas
mov
test
ds
and
adc
xchg
daa
mov
sti
lods
add
jno
orl
imul
rorl
cmp
pop
xchg
mov
lret
iret
mov
mov
jge
sub
orl
test
test
push
sbb
cli
mov
dec
inc
ja
or
inc
adc
sub
xor
loopne
icebp
mov
jge
adc
adc
mov
aaa
clc
addb
lcall
and
inc
mov
jmp
cmpsb
fisttpl
cmp
out
pushf
mov
pop
mov
fwait
outsb
mov
mov
add
and
mov
cmp
int
sahf
lods
nop
loopne
mov
pop
mov
test
addr16
or
mov
sti
push
xchg
mov
cmp
mov
addr16
int
xchg
jne
test
jg
push
mov
orb
adc
fidivs
cld
cmp
mov
push
cmp
out
pop
sub
movsl
rcl
add
sub
mov
add
out
xor
mov
jb
xchg
lds
jnp
sbb
aaa
test
les
cli
pop
jge
sbb
jecxz
mov
aad
sub
pop
xor
push
sbb
lcall
mov
xor
mov
jecxz
add
out
or
xchg
outsb
mov
mov
stc
xor
pop
inc
push
add
inc
jno
outsb
push
in
push
aam
sbb
pop
sbb
outsl
mov
xchg
push
inc
mov
adc
shlb
push
lcall
xrelease
mov
push
test
xchg
es
xchg
jo
test
test
push
enter
push
sub
cmp
fsts
adc
push
mov
movsb
into
xchg
push
nop
dec
popa
sbb
xchg
inc
sub
or
inc
dec
push
push
cmp
test
cwtl
xor
sarl
sbb
dec
in
out
cs
loop
enter
jle
jbe
xchg
lds
mov
cltd
pop
inc
mov
int3
lea
sahf
push
sbb
shlb
outsl
lea
mov
or
je
push
notl
scas
jne
fwait
xchg
aam
out
mov
int
mov
insl
fcomps
sub
loopne
clc
mov
inc
repz
cmpb
test
into
stos
cltd
adc
sbb
mov
add
mov
mov
mov
jnp
push
mov
xchg
lea
mov
cmp
shrb
iret
cmp
ret
orb
adc
xchg
mov
in
ss
xchg
outsb
adc
add
jno
xchg
jae
cld
cli
push
aaa
lret
outsl
xchg
dec
pushf
lods
add
jmp
adc
push
push
stc
out
scas
add
pop
push
sub
insl
sbb
fiaddl
sahf
sub
push
js
insl
sbb
or
iret
test
call
and
pop
pusha
inc
push
lea
hlt
arpl
das
push
fldt
popf
sbb
mov
in
clc
ja
sbb
mov
add
pop
notl
outsb
rcll
cmp
stos
sbb
sub
dec
dec
dec
cli
mov
cld
jge
repz
scas
push
jb
ljmp
pop
add
shlb
lret
stos
mov
mov
es
jp
pop
stos
sti
stos
aas
dec
xchg
mov
mov
inc
push
jp
cltd
sub
cmp
sub
sahf
xchg
call
cli
aam
aaa
rcr
icebp
or
jp
jne
inc
rcrb
cli
sti
aaa
sub
mov
pushf
nop
imul
loop
loop
imul
idivl
hlt
jb
ret
or
mov
xchg
or
stos
cli
inc
lea
or
into
mov
mov
sbb
fwait
sbbl
repnz
inc
mov
mov
push
sbb
mov
lea
fdiv
mov
adc
lahf
pop
or
mov
pop
lods
into
xchg
movsb
pop
cld
into
jb
out
test
inc
adc
jge
pop
pushf
imul
adc
add
dec
mov
rclb
jbe
loope
mov
mov
lea
shlb
imulb
je
mov
ljmp
call
xlat
lea
pop
das
pop
push
js
clc
xlat
mov
xlat
pop
push
lcall
push
jae
mov
push
mov
nop
jb
call
dec
or
mov
out
pop
adc
sub
pop
rcrb
daa
mov
mov
out
enter
inc
xchg
cmpsb
cmp
in
lods
and
out
lahf
pop
cmc
int
sub
enter
lods
mov
push
pop
push
push
inc
dec
lcall
lcall
mov
push
inc
jb
inc
push
pop
xchg
stos
cmpsb
push
cli
std
sti
dec
lcall
testb
imul
pop
mov
into
call
push
cltd
addr16
cwtl
dec
ss
dec
xchg
jo
insl
and
dec
xor
cmp
xor
pop
mov
xchg
jno
arpl
stc
add
push
popa
pop
pusha
or
dec
pop
mov
sbb
ja
ss
xchg
jae
pushf
divb
mov
dec
xchg
insb
jo
imul
insl
xchg
insl
aam
sbb
sub
push
pop
stc
mov
lcall
or
clc
mov
clc
jae
sbb
shrl
cli
inc
dec
pusha
xchg
ja
ss
push
or
mov
push
push
add
xchg
push
stos
je
sti
cltd
xchg
imul
cmp
inc
mov
sbb
mov
mov
pop
scas
pop
inc
jnp
enter
int3
inc
mov
ret
and
les
ret
and
enter
pop
add
leave
mov
fucomi
and
xchg
ds
jae
mov
into
jno
test
xchg
inc
je
lcall
fisubs
imul
orl
xor
cmpsl
adc
and
repnz
and
js
inc
je
outsl
fs
jns
xchg
inc
in
sbb
adc
push
sub
mov
xchg
inc
lahf
add
xchg
jno
mov
xor
ja
mov
add
mov
jae
dec
ret
jmp
insl
lahf
xchg
xor
insl
dec
xchg
inc
mov
into
clc
xchg
lds
cltd
jle
iret
loope
test
push
push
ficoml
loope
test
and
xchg
pop
insl
test
test
arpl
push
and
lret
and
fsubrl
addl
pushf
fistl
mov
loope
sub
aas
push
push
js
pushf
fistl
adc
jnp
fldt
xchg
test
mov
clc
pop
adc
in
lods
mov
xchg
ficoml
xchg
adc
mov
enter
ret
xchg
or
std
int
xlat
mov
ljmp
xchg
xchg
mov
cs
jmp
into
or
icebp
clc
insb
int3
mov
lock
sahf
mov
push
testb
dec
cwtl
out
add
aam
cltd
mov
push
out
aam
repnz
negb
push
dec
inc
push
movsl
mov
imul
loopne
xor
or
dec
mov
xchg
push
pop
cmpsb
popl
lock
jecxz
dec
in
pushf
int3
sbb
lods
mov
jns
into
js
adc
jge
jl
andl
cld
jns
mov
jg
jle
or
xchg
jns
insl
imul
inc
inc
cwtl
mov
sub
loopne
stos
pop
xlat
push
iret
out
add
sahf
nop
out
jmp
or
pop
or
push
lcall
dec
pop
push
bnd
pusha
xchg
in
pop
push
inc
xor
sahf
rorl
add
flds
mov
cmp
popf
cli
icebp
mov
jne
out
dec
nop
mov
loop
jge
icebp
shlb
inc
fcmove
nop
mov
test
rorb
call
cli
adc
lahf
inc
xchg
dec
cmp
leave
dec
push
push
lock
xchg
adc
mov
fldcw
nop
xchg
jle
loope
push
sub
fidivrl
xchg
ret
sbb
fistpl
adc
jno
in
pop
pop
pop
xchg
xchg
lahf
cwtl
add
mov
mov
cltd
dec
xchg
clc
pop
test
or
mov
inc
arpl
pop
aaa
into
loop
mov
xchg
jle
fwait
imul
scas
dec
out
pop
imul
push
shlb
push
pop
iret
xchg
ljmp
xchg
jecxz,pn
xchg
or
lcall
test
fdivrl
xchg
int
mov
into
xchg
outsb
cltd
push
jp
frstor
adc
jo
in
adc
jnp
sbbb
xchg
fwait
cmp
mov
aam
pusha
daa
in
and
fwait
push
daa
mov
jle
aaa
xchg
int
bound
out
nop
mov
mov
lret
sub
mov
or
mov
arpl
dec
repnz
insb
mov
pop
imul
pop
cmpl
add
scas
shrl
lock
adc
mov
push
inc
and
les
data16
outsb
add
dec
test
pop
rorl
dec
xchg
xchg
cmc
adc
mov
push
ret
fstpt
jae
jne
jmp
out
imul
lods
mov
sarl
push
dec
pusha
xchg
mov
shlb
leave
add
add
jge
faddl
clc
push
pop
mov
dec
scas
jne
in
data16
pop
shll
xchg
icebp
sti
jb
mov
scas
xor
in
cltd
ret
pusha
mov
sti
lods
jle
fdiv
cmpsb
ja
mov
inc
xor
jg
mov
push
cmpsb
int3
sub
mov
mov
or
das
push
push
or
mov
js
cli
mov
sub
adc
or
aad
add
mov
push
scas
inc
into
movsl
xchg
icebp
mov
mov
adc
jnp
rcr
lret
outsl
and
inc
aam
iret
cmp
aas
mov
cmp
pop
or
and
clc
add
adc
adc
jmp
jmp
out
push
mov
ja
into
pop
stos
inc
xchg
sub
sub
fwait
dec
jmp
popl
xlat
sub
sahf
in
gs
push
xchg
mov
lcall
aam
or
push
hlt
sub
adc
mov
sbb
call
data16
fwait
jmp
add
inc
or
movsl
hlt
add
or
mov
dec
es
xchg
sub
fdivrs
out
lods
push
fs
push
fmulp
push
mov
mov
ds
inc
dec
or
sub
mov
aad
pop
enter
jg,pn
mov
pop
mov
pop
push
jbe
setle
mov
outsb
sbb
adc
inc
mov
out
push
lds
xchg
mov
mov
mov
xor
jae
mov
push
or
je
mov
mov
xlat
jle
adc
insl
mov
mov
cmp
cmp
mov
sub
loop
mov
in
dec
lods
icebp
inc
les
xlat
mov
mov
hlt
loope
adc
shl
sub
pop
adc
jp
adc
jge
mov
ljmpw
or
repnz
sub
ret
fidivs
dec
push
mov
and
daa
jle
nop
xchg
popaw
cmc
dec
mov
or
fimull
xor
jnp
and
dec
mov
out
test
ljmp
fistl
jnp
adc
mov
cmp
xlat
xchg
mov
mov
imul
stos
adc
mov
ja
mov
lds
popf
add
psllq
sub
mov
clc
mov
pop
mov
out
lahf
mov
and
pop
test
mov
xchg
ret
dec
cld
outsb
iret
dec
outsb
mov
lcall
ljmp
pop
jne
je
mov
lods
sahf
mov
pop
dec
mov
pop
and
fmull
addl
arpl
pop
mov
mov
jecxz
xor
fstl
fisubrs
mov
sub
mov
into
fdivrs
add
loopne
mov
mov
sbb
in
jae
fdivrl
jae
xor
push
enter
xchg
inc
xchg
fwait
aam
divb
out
pop
fwait
adc
shl
inc
sti
mov
movsb
cltd
xchg
cmp
sbb
jo
addb
xchg
add
fsubrs
je
mov
das
lea
mov
lcall
mov
ljmp
fnstcw
xor
jge
pop
adc
into
insl
mov
nop
imul
es
outsb
out
add
sub
jb
mov
xor
and
cmp
jb
xchg
lcall
adc
arpl
mov
inc
add
cli
loop
push
xlat
xchg
inc
icebp
out
stos
das
dec
push
sbb
outsl
fs
pop
xchg
pop
pop
cmp
xchg
icebp
imul
push
push
xchg
pusha
dec
pop
pop
pop
push
int
pop
cwtl
dec
aaa
jae
xor
sahf
mov
xchg
or
in
xchg
cltd
xchg
lea
mov
xor
stos
xor
pop
icebp
ret
pop
mov
lret
lcall
mov
mov
stos
into
mov
add
add
cmpsb
adc
push
lcall
inc
adcl
dec
or
in
inc
push
pop
fwait
pop
fistl
mov
inc
add
scas
or
js
inc
popf
pop
inc
push
cltd
rdmsr
push
dec
das
push
movsl
jne
mov
xchg
xchg
mov
lahf
decb
xbegin
jge
enter
test
dec
cmp
xchg
sub
sub
adc
ljmp
xchg
test
fs
cli
movsb
sbbb
lods
lea
inc
test
xor
hlt
imul
les
pop
rcrl
or
cmpl
sub
ljmp
sbb
outsl
ret
pop
lea
xchg
pop
xor
and
imul
mov
and
jmp
push
xchg
mov
es
nop
jge
cmp
sbb
lret
cmp
pop
cmp
pop
mov
testb
cltd
xchg
xchg
xor
mov
mov
fistpl
push
fwait
rcr
mov
adc
or
mov
lret
xor
push
push
loopne
and
lds
leave
notb
adcb
cwtl
add
lea
or
lea
sub
outsl
xor
cltd
rorl
out
lods
les
dec
xchg
xor
js
inc
mov
dec
les
fs
lret
jl
xchg
add
daa
xor
mov
sbb
movsl
std
dec
lcall
xor
icebp
faddl
stos
or
incb
dec
pop
mov
jge
in
or
mov
sbb
cmp
mov
pop
adc
and
add
add
ret
dec
jg
pushl
or
mov
std
fistl
jecxz
mov
push
add
xchg
push
sbb
repz
rcrb
jnp,pt
cmpsl
out
dec
in
sbb
das
mov
xchg
dec
lods
icebp
cmp
inc
pop
cmp
scas
gs
daa
inc
fwait
cwtl
dec
dec
and
ja
and
cmp
sbb
mov
sbb
sub
push
add
or
mov
mov
jecxz
dec
mov
xchg
or
mov
inc
out
pop
mov
add
arpl
mov
dec
adc
mov
sbb
dec
lea
push
pop
mov
jmp
mov
addb
adc
movsb
mov
jge
stc
ret
xchg
cltd
inc
sbb
pop
lcall
jle
mov
push
out
lods
xor
iret
repnz
pushf
int
push
sbb
xchg
xor
inc
cmpsl
mov
push
sub
xor
dec
cs
rcrl
push
in
xlat
lds
pop
ja
rorb
mov
int
jno
add
inc
dec
mov
sti
cmp
xor
jl
mov
mov
cmp
add
mov
movl
dec
imul
sub
xchg
clc
enter
lcall
int
sub
fildl
pop
das
or
and
or
cmp
int3
ret
pop
xchg
add
fs
jmp
dec
mov
pop
iret
or
mov
rcll
jl
addl
cmpsl
ret
xchg
pusha
in
call
and
inc
jmp
mov
mov
int3
sbb
mov
scas
pop
loopne
xlat
jmp
rorl
bound
inc
and
int
lods
sti
mov
cmc
jae
add
push
mov
cmp
fcoml
rcll
mov
mov
lret
or
lret
incl
std
mov
inc
jnp
dec
mov
andb
sbb
roll
push
out
out
cmp
outsb
mov
mov
int3
stc
lret
negl
mov
mov
adc
jle
test
jecxz
scas
fs
les
addr16
push
ret
xchg
cli
add
mov
loopne
std
push
inc
xchg
cmpb
imul
mov
stos
xor
int
xchg
roll
or
jle
sbb
popa
imul
jns
cmpsb
rorl
cli
call
push
and
jno
outsl
xchg
pop
cmp
cmp
rorb
or
lahf
cltd
xorb
inc
cmp
mov
adc
jecxz
mov
outsl
sar
and
scas
mov
sbb
pusha
ljmp
outsb
das
or
mov
stos
fnstcw
jbe
push
in
ret
leave
mov
inc
lods
push
mov
hlt
ret
mov
jl
cmp
push
out
pushf
mov
jge
or
les
pop
and
loop
ss
mov
sbb
xchg
mov
clc
mov
sbb
stos
lret
ret
jp
fstl
dec
sbb
sub
andb
jmp
mov
add
mov
ja
mov
mov
mov
mov
sub
jnp
out
mov
test
cmp
mov
or
leave
sub
andb
inc
jl
mov
inc
ret
inc
in
fwait
dec
xchg
test
faddl
pop
lret
pop
sub
daa
ja
pusha
mov
lcall
mov
cmc
or
jecxz
jbe
pop
mov
sbb
insb
mov
lret
sbb
shr
inc
rclb
aaa
orl
jae
call
and
sub
or
mov
test
inc
xchg
dec
and
or
subl
mov
stos
mov
xchg
testl
mov
outsb
fwait
mov
inc
xor
jo
sub
push
xchg
cmp
mov
lret
xchg
adc
or
sub
std
fisttps
jle
mov
mov
out
roll
cmp
xchg
jne
sub
fdivrp
xchg
inc
jg
mov
sbb
repnz
pusha
adc
cmp
xor
stos
ror
lret
loopne
cmp
cmc
jbe
xor
rclb
mov
faddl
pop
scas
lcall
sbb
lahf
mov
cmp
adc
dec
mov
jae
mov
push
aad
push
sbb
popf
sub
push
mov
lret
mov
movsb
push
in
cmpsb
mov
stc
out
mov
push
dec
hlt
inc
mov
cmp
inc
pop
dec
jmp
add
test
or
jne
vaddps
dec
sbb
pusha
dec
cmc
mov
lea
movsb
icebp
out
lret
addr16
xor
push
lret
sbb
dec
cltd
outsl
sbb
and
add
testl
mov
mov
sahf
inc
sahf
xor
fwait
xor
jo
cmp
lret
pop
loop
mov
fnstenv
xor
das
adc
pop
ja
cmp
int3
sub
dec
stos
mov
inc
and
int3
pop
xchg
fistpl
dec
jmp
in
imul
and
and
mov
push
cli
mov
pop
cmove
lods
mov
xor
adc
imul
adc
sti
ljmp
outsb
sbb
lods
or
rcrb
inc
inc
mov
ja
cli
xchg
sbb
dec
int
push
xchg
ja
cwtl
or
add
push
jmp
and
cli
stos
push
mov
ret
dec
push
not
pop
movsb
fsubrl
xchg
jns
int3
ret
pop
push
jge
jae
pop
fdivrs
xor
dec
jns
and
dec
cmp
cwtl
jne
loop
sub
cmp
sub
lcall
aas
xchg
or
test
pop
jge
mov
hlt
test
mov
scas
adc
mov
push
push
test
sbb
shrl
lods
and
xor
xlat
jne
sti
pushf
inc
jmp
mov
aaa
dec
movsb
jb
imul
sub
cltd
ret
dec
mov
mov
in
pop
and
add
sub
jl
lea
mov
sarl
mov
pusha
jb
int3
add
pushf
pop
aam
pop
not
lret
mov
push
int
sub
mov
xor
xor
nop
xor
cmp
pop
test
cmp
sub
lahf
orl
pusha
sub
mov
jmp
push
add
pop
pop
push
push
sbb
mov
cld
out
mov
out
mov
in
jg
xchg
inc
pop
jmp
emms
sub
dec
cmp
mov
and
mov
add
aad
sahf
push
cmp
sbb
xchg
pop
rcr
push
adc
insb
enter
in
mov
int3
loop
add
sti
inc
xchg
or
insl
in
jae
or
ljmp
cmp
in
xor
outsl
int
ret
popf
adc
gs
lret
dec
cmp
mov
dec
pop
mov
mov
mov
mov
xor
inc
mov
jge
mov
pop
mov
icebp
in
jecxz
fldl
nop
jne
pop
mov
fcomip
lret
mov
and
test
fucomi
ret
imul
mov
mov
cmp
or
mov
xor
mov
sbb
xlat
push
push
sub
rcr
push
in
mov
jmp
fs
pop
inc
sti
jmp
and
ja
into
ss
faddl
in
push
mov
mov
mov
sub
mov
outsb
lods
add
add
fwait
arpl
dec
sbb
lock
mov
add
fwait
jnp
arpl
add
repz
dec
mov
mov
out
ret
rorl
loopne
inc
lea
mov
int
push
push
inc
ret
sub
js
ret
dec
loopne
mov
sahf
fsubs
cmp
imulb
dec
insl
add
sub
inc
shl
inc
repnz
dec
mov
test
mov
int3
cmp
repnz
fbld
arpl
add
je
jnp
outsl
cli
push
pop
push
add
js
nop
sbb
dec
ss
or
sti
dec
movsb
cmpsb
fwait
cmp
or
mov
mov
pop
or
cmp
loopne
ficoml
ret
inc
pop
icebp
gs
outsb
fcom
fprem
xchg
bound
movsb
jge
pop
das
mov
insb
repnz
sub
xor
out
cmp
push
cld
clc
sub
cmp
fildll
mov
jb
lret
sbb
inc
adc
movsl
mov
js
xchg
mov
cmpsl
ljmp
dec
arpl
pushf
fdivs
jne
loope
imul
dec
push
adc
sbb
punpckhwd
mov
xchg
dec
or
in
insl
cmp
je
mov
push
pop
xor
fdivrl
test
mov
sbb
mov
sbb
sar
xchg
sbb
lea
push
push
rorl
fnstcw
jae
ret
and
bound
mov
or
mov
pop
adc
xchg
cmc
push
decl
std
xor
pop
and
push
cld
sub
xchg
cmp
mov
mov
jb
or
test
pop
add
aam
mov
ss
xchg
cmp
pop
inc
sti
mov
sub
inc
or
dec
mov
dec
pop
xchg
sbb
mov
shll
pusha
xlat
mov
mov
mov
cmp
xchg
stc
jge
sbbl
xor
lock
xchg
hlt
add
loopne
imul
cld
cmp
adc
pop
in
aam
or
movb
mov
es
fimull
sub
adc
das
and
and
mov
sbb
cmc
pop
mov
xchg
cmpsl
mov
punpckhdq
xchg
push
cmpsl
mov
movsb
add
inc
xchg
cmp
inc
mov
mov
ror
pop
jae
mov
test
jle
xchg
test
xor
sbb
popa
lret
pop
call
adc
pop
mov
and
cltd
push
mov
pushf
ret
mov
inc
sub
mov
xchg
int
xor
scas
fcmovnu
mov
loopne
std
out
jnp
and
add
loop
sbb
xchg
mov
jl
cmp
and
scas
inc
jne
mov
and
addl
inc
mov
push
or
mov
xor
adc
sbb
insb
inc
nop
mov
loop
mov
test
out
or
lret
arpl
clc
mov
pop
xchg
enter
adc
insl
mov
in
jg
mov
xchg
sbb
sub
jmp
mov
xor
push
adc
or
bound
fwait
sub
int
fucomi
outsb
cld
mov
test
sub
lret
in
mov
movsl
add
xor
or
repz
dec
xchg
xchg
mov
mov
pop
lahf
je
cmp
mov
faddp
or
shll
or
add
bound
cmpsb
sbb
mov
xchg
les
mov
addr16
test
xchg
pop
push
outsl
iret
std
pop
jle
xchg
mov
out
out
xchg
add
mov
mov
sahf
pop
test
outsb
sbb
xchg
hlt
cwtl
jl
pop
push
sub
pop
ljmp
mov
lret
incl
fcompl
xchg
shlb
jge
and
and
outsl
and
mov
cmpl
cli
lock
cld
je
cltd
aam
pop
push
add
loop
sbb
arpl
cwtl
mov
xor
cwtl
imul
mov
or
add
js
ret
xlat
inc
push
bound
dec
mov
sbb
sub
insl
cmc
mov
imul
mov
push
dec
mov
xor
xchg
imul
mov
cmp
callw
cmp
jmp
out
xlat
lcall
inc
into
addr16
mov
imul
mov
arpl
inc
ret
dec
divb
mov
jne
loop
shl
pop
xchg
lret
dec
pop
mov
cmpsl
out
sbb
out
shrb
cmp
cmp
mov
or
ret
shlb
dec
mov
mov
fmuls
out
das
js
and
mov
push
test
mov
push
mov
shrl
jle
pop
int
add
and
mov
add
out
xor
mov
fldcw
stos
clc
data16
mov
mov
mov
jnp
mov
jecxz
dec
xchg
aaa
js
outsl
es
addb
mov
ljmp
xchg
add
pushf
cmp
pop
xchg
cmp
mov
pop
mov
pop
mov
mov
sub
test
cmp
or
dec
xchg
out
jb
xchg
xchg
jo
inc
pop
mov
mov
fisttpl
test
inc
out
mov
inc
jmp
orl
int3
pop
jae
mov
xor
je
pusha
mov
and
jne
inc
clc
js
xchg
sub
aad
fwait
bound
daa
sub
icebp
xor
sub
pop
dec
mov
insl
cmp
cmpsl
mov
js
std
movsb
in
xlat
je
sahf
jno
pop
notb
imul
dec
dec
shlb
stc
ljmp
int
imul
inc
arpl
xor
in
les
cmp
add
or
pop
insb
mov
sub
mov
xor
add
adc
mov
shlb
sub
lds
mov
and
mov
int3
lods
mov
xchg
aaa
dec
fiaddl
lret
loope
mov
nop
mov
insl
xlat
data16
fldl
cs
loopne
sbb
pusha
jecxz
bound
clc
pop
pushf
or
mov
cmp
inc
idiv
or
aaa
filds
sarl
fwait
mov
arpl
test
sub
mov
ss
adc
cltd
adc
rclb
dec
or
mov
mov
ret
dec
pushf
add
mov
jle
fdivrl
mov
mov
outsl
aam
adc
jo
mov
aas
mov
xor
dec
dec
lahf
mov
or
mov
jecxz
cmp
in
inc
test
xor
xlat
or
leave
mov
cmpsb
out
and
xchg
pop
shrl
adc
sub
mov
fnstsw
pushf
sbb
jge
xchg
out
inc
in
mov
pop
add
inc
mov
test
xchg
push
xchg
inc
sbb
clc
mov
or
push
sub
xor
lret
jmp
pop
pop
jae
mov
test
std
add
popf
mov
xor
xor
js
cmpsb
push
pop
inc
add
scas
xor
test
cmp
sub
mov
and
xchg
add
sub
clc
int
push
outsl
xchg
mov
fcmove
mov
or
xchg
push
and
bnd
lcall
mov
xchg
cmc
xor
mov
xlat
repz
insb
pop
jne
mov
hlt
push
jns
lret
out
mov
mov
xchg
popl
adc
sbbb
cld
mov
jbe
shl
outsl
dec
inc
mov
jge
mov
daa
jne
out
mov
mov
cltd
out
addr16
sbb
pusha
imul
into
sar
dec
imul
inc
std
cmp
stos
cmp
inc
mov
stc
movsb
insl
pop
mov
jle
mov
mov
sahf
flds
adc
mov
sbb
pop
lret
cmp
subb
cmpsb
jmp
or
pop
xchg
lret
adc
mov
dec
adcb
ljmp
dec
jbe
push
pop
in
add
dec
cld
adc
mov
sahf
xchg
stos
repnz
mull
xchg
in
int
loop
sub
xlat
mov
pushf
jp
pop
add
xlat
pop
popa
sbb
mov
xchg
arpl
mov
outsl
scas
lcall
enter
sub
push
test
test
cwtl
subl
mov
js
sbb
insl
incl
cwtl
nop
push
fdivrs
xchg
mov
push
fwait
sbb
mov
adc
repnz
insb
adc
mov
mov
adc
jg
mov
pop
fimuls
inc
sahf
movups
insl
int3
jg
notl
jae
sbb
int3
xchg
loopne
ret
in
xor
dec
or
je
inc
pop
push
ret
pop
add
pop
sbb
xor
fwait
jns
sub
and
push
loop
cmpsb
or
adc
into
andl
mov
pusha
mov
dec
add
push
cli
jle
push
sahf
sti
sbb
jne
mov
ja
push
push
inc
add
jmp
jg
inc
adc
mov
xchg
cmp
out
test
shl
fildl
jmp
dec
add
and
outsb
xor
fnstsw
loopne
dec
loop
dec
sub
mov
fiaddl
adc
push
jo
loope
cltd
xchg
jl
cs
cltd
loopne
fisubrs
xchg
in
pop
sbb
rorl
mov
scas
mov
xorl
push
rclb
mov
mov
test
add
shl
mov
cmp
adc
mov
mov
push
in
pop
dec
je
in
scas
jl
int3
sbb
lahf
push
jmp
mov
pop
incb
out
scas
lahf
sbbb
out
mov
xor
stos
dec
cli
mov
pushf
jmp
sub
xor
xchg
push
mov
cmp
lcall
xchg
dec
mov
push
cmp
scas
insl
ror
add
pop
enter
pop
cmp
pop
adc
push
lcall
insl
xchg
insb
rclb
into
das
mov
notl
lcall
xchg
jo
pop
xchg
push
mov
movsb
int
adcb
xchg
jecxz
jae
add
ja
pushf
mov
sub
cmpb
nop
sbb
mov
cltd
call
sub
aam
sub
sub
imul
lret
nop
xchg
cmc
pushf
cmp
stos
scas
cmpsb
jb
adc
ret
sahf
dec
sub
or
adc
xor
jno
ficomps
ljmp
nop
push
iret
movsl
sub
addl
repz
fsubl
pop
arpl
aas
dec
mov
push
pop
inc
push
shlb
fidivrs
shll
pop
and
sbbl
stc
mov
add
cld
pop
mov
mov
ljmp
loope
into
fcmove
xchg
mov
dec
std
dec
bound
aaa
push
push
push
cmp
cmc
sbb
pushf
dec
mov
add
dec
pushf
cmp
xchg
sbb
pushf
cmp
adcl
pop
xlat
mov
pusha
lahf
pushf
sbb
sub
or
jecxz
pushf
xor
push
xchg
push
dec
out
aaa
cmp
loopne
xchg
mov
jo
nop
call
iret
push
mov
cmp
xor
push
and
or
jo
cmp
test
or
jge
outsb
divl
sub
rolb
pop
outsl
les
js
arpl
movsb
mov
lea
mov
jmp
mov
outsb
je
test
lcall
nop
movsb
inc
xchg
xchg
iret
xchg
push
cltd
inc
xchg
fwait
push
imul
lcall
lea
imul
subb
dec
pop
or
pop
xchg
xor
je
ret
fsubrs
pop
dec
frndint
pusha
int3
loopne
pushf
inc
mov
int3
lds
ret
das
nop
or
xchg
test
mov
cltd
jb
mov
test
aam
imul
xchg
adc
xchg
nop
adc
loop
dec
rolb
outsl
cmp
xor
sub
ficompl
jb
xchg
jo
int
orl
xchg
in
pushw
jne
xchg
loope
add
cli
xorl
sub
fmul
mov
mov
repz
cmp
or
cld
cwtl
lea
nop
imul
add
testl
fwait
adc
fdivs
rcrb
in
je
xchg
inc
xchg
sbb
shlb
dec
xchg
imull
bound
je
xchg
fwait
adc
les
xchg
arpl
inc
cmpsb
jo
push
aaa
pop
outsl
jo
pop
ljmp
jbe
sbb
dec
adc
or
dec
stc
add
sub
inc
jbe
inc
pop
dec
cld
dec
adcb
out
lds
or
movsl
xchg
push
pushf
xchg
dec
xchg
cmp
stos
ds
fsts
mov
push
inc
loop
dec
mov
cmp
inc
push
lea
aas
std
dec
xchg
stos
dec
mov
push
cltd
lret
scas
scas
loop
imul
push
add
mov
pop
pop
pop
icebp
fwait
push
negl
std
aam
jbe
jae
pop
inc
push
aam
cltd
mov
xchg
data16
xchg
cld
xchg
cs
aam
push
jae
arpl
arpl
nop
sahf
jbe
sub
scas
mov
cs
repz
push
fisubrl
pushf
lret
lret
rcll
adc
sub
add
inc
mov
pop
jmp
mov
lds
inc
ljmp
xor
add
pop
out
dec
mov
lock
mov
fstpl
test
orl
pop
pop
icebp
aad
je
jg
mov
cltd
adc
stos
push
movsl
mov
sub
mov
xchg
xchg
clc
dec
xchg
idiv
loope
stos
jbe
leave
cltd
push
sub
fsubl
repnz
fsub
or
xchg
cmpsb
adc
fs
addr16
notb
xor
xchg
xchg
clc
gs
ret
insb
dec
shrb
clc
cwtl
stc
out
mov
mov
cmp
cmpsb
imulb
imul
dec
mov
xor
lret
mov
loopne
jg
or
jb
mov
mov
loopne
mov
add
fimull
xor
insl
xor
sub
movsl
mov
imul
call
sti
dec
sub
mov
mov
fcompl
push
mov
jnp
push
out
inc
sqrtps
leave
or
pushf
cwtl
xor
shrb
inc
push
adc
mov
jae
pop
lret
out
xchg
rorl
stc
lahf
cwtl
addr16
orb
add
xchg
cltd
inc
cltd
enter
ds
lcall
ret
mov
fildl
loop
ret
add
pop
cmc
out
shll
dec
cmp
cmp
cld
xor
xor
data16
les
xchg
mov
fadds
lret
inc
sbb
mov
jnp
subb
mov
inc
ds
and
bound
sti
test
shrl
jo
aad
mov
es
dec
mov
inc
mov
mov
and
insb
mov
jge
cmp
sub
xchg
mov
and
loope
cmc
mov
popa
fwait
ss
mov
cmpl
mov
fs
ljmp
movsl
add
lret
add
xchg
sbb
clc
sbb
xor
mov
ret
mov
dec
imul
push
cmpsb
test
xchg
mov
dec
push
insb
movsl
ljmp
mov
dec
mov
fdivrl
xchg
cmp
notl
sub
sti
test
sub
xchg
pop
gs
mov
test
or
adc
inc
sti
cmp
jae
movsb
dec
add
mov
mov
xchg
xor
pusha
cld
pop
mov
imul
in
sahf
mov
cltd
mov
shll
int
testl
fs
mov
jecxz
movsb
addl
ffreep
adc
stos
cmp
lcall
and
sub
call
jns
push
repnz
mov
jmp
jnp
sbb
ficompl
mov
lret
call
addr16
mov
jle
sbb
iret
xchg
jne
fs
lahf
repnz
sbb
shl
xor
inc
scas
insl
into
xchg
xchg
idiv
notb
jbe
cwtl
cmp
sub
mov
cli
jne
rcrl
xlat
imull
sti
cmpsb
fstps
mov
iret
pop
mov
pop
mov
push
pop
dec
lock
loopne
push
jmp
out
add
aad
test
fs
into
sub
sub
rcll
xchg
lcall
inc
shll
dec
inc
xchg
sbb
xchg
call
adc
sub
or
cmp
push
aad
xchg
movsb
stc
inc
mov
fwait
jbe
pushf
pop
cld
pop
pop
sbb
add
leave
ja
mov
inc
sbb
shll
or
cltd
rorl
loop
js
sbb
xchg
cmp
mov
add
lret
xchg
pop
lock
inc
mov
jae
adc
loopne
insl
push
xchg
adc
xchg
xchg
test
mov
push
jbe
adc
push
sbb
mov
scas
push
fnclex
jp
insl
push
mov
dec
out
pop
cwtl
ja
xchg
sbbb
push
outsl
cltd
rolb
dec
xor
pushf
push
jg
rolb
xchg
push
cmp
scas
push
push
in
lahf
push
loope
jnp
gs
push
cltd
lahf
mov
sub
sarl
dec
inc
jmp
jmp
sbb
and
xchg
lahf
mov
dec
lock
dec
ds
call
cwtl
push
jb
mov
add
or
push
jp
imul
jp
jl
jns
jo
movsl
clc
adc
sub
fwait
aam
lahf
jmp
fldenv
adc
mov
push
mov
push
daa
mov
ret
cmp
mov
fisttps
mov
xor
aaa
xor
jle
sbb
fcmovnu
lock
adc
aaa
ret
inc
cmp
into
cld
mov
ja
stos
lods
out
addb
lret
enter
or
mov
lcall
imul
sahf
mov
fldt
or
cmp
jp
out
or
cltd
adc
lahf
addr16
loopne
add
rolb
push
cmp
icebp
cmp
test
ljmp
jo
sub
cmp
mov
loope
and
mov
dec
adc
mov
add
inc
fdivs
cmp
mov
test
sub
orb
mov
jns
lock
xchg
fwait
jae
ja
sbb
fsubs
mov
inc
lret
cmc
pop
sarl
jae
pop
jge
xlat
jl
pop
outsl
xor
inc
add
jne
xchg
loope
sub
mov
mov
stos
jnp
mov
repnz
lods
and
ja
test
stc
push
outsl
and
arpl
ret
inc
xchg
mov
faddl
divb
daa
fistpl
int3
in
mov
insl
inc
cli
ret
pop
mov
mov
mov
jbe
and
mov
xor
jmp
xor
jge
repz
lock
ss
movb
cmp
jnp
sbb
and
mov
adc
mov
outsl
sub
mov
mov
pop
mov
xchg
sti
insb
gs
test
andl
xchg
mov
or
lcall
lods
inc
mov
ret
les
stc
movsl
in
dec
or
xchg
cs
ret
add
mov
pushf
test
clc
inc
cmp
mov
ss
jnp
ja
mov
es
inc
test
jmp
jge
xor
test
inc
sub
inc
loop
mov
cmp
or
cmpsl
inc
push
xchg
add
aad
sub
cmpsb
adc
sub
addl
mov
cmp
cmp
aas
roll
nop
in
cmp
sbb
outsb
or
ret
adc
pop
shlb
push
imul
outsb
lret
sti
ret
xchg
sbb
pop
jnp
cmp
mov
and
lods
adc
stc
call
push
cmp
rcrb
movsb
inc
xchg
andb
sub
shlb
jp
mov
stos
std
aas
push
insb
and
add
add
fcompp
jne
dec
push
adc
xor
jno
pop
push
mov
mov
insb
ret
dec
sub
fisubs
lcall
mov
add
dec
imul
in
comiss
xlat
mov
mov
pop
outsb
pop
cmc
add
add
call
or
lods
push
mov
inc
lods
add
daa
cmc
rcl
mov
loope
rorl
orl
imul
or
fsubl
push
xor
in
inc
inc
sub
mov
dec
fs
and
lock
divb
mov
mov
cmpsb
xchg
fs
sbb
push
shrb
xor
xor
fwait
inc
movsb
inc
fmul
imul
or
sbb
jnp
enter
int3
mov
sbb
or
in
aaa
mov
sarb
pop
and
stos
adc
push
jbe
pop
ljmp
fdiv
sub
cmp
jb
pushf
into
inc
ds
pop
lret
push
jns
movsl
nop
leave
inc
mov
inc
lret
sbb
test
adc
xchg
push
mov
adc
movsb
add
inc
mov
test
sub
cmc
dec
lods
decl
add
xchg
sbb
and
push
sbb
sub
fiaddl
push
movsb
mov
dec
push
mov
int3
pop
test
mov
imul
mov
pop
sub
mov
std
jl
mov
fdivl
mov
outsb
jno
mov
jnp
inc
jb
aad
lahf
dec
cmp
adc
leave
fwait
dec
cwtl
push
fcmovu
std
incb
mov
out
cmpsl
cmc
jmp
loopne
cld
mov
push
mov
pop
mov
inc
popf
cmp
mov
jmp
add
sti
mov
fcoml
dec
push
pop
lods
clc
mov
add
pop
xchg
dec
lea
test
int
or
mov
sub
push
sbb
mov
cld
fwait
mov
cs
xchg
mov
dec
mov
inc
mov
xchg
mov
jge
xchg
xor
insl
dec
mov
push
sub
mov
or
pop
xor
push
scas
push
orb
leave
fnstsw
in
inc
mov
jno
jmp
mov
fimuls
das
movsl
test
dec
jmp
imul
jo
popf
dec
stos
jb
gs
nop
repz
mov
sti
mov
add
orl
mov
inc
cmp
in
mov
scas
sbb
inc
in
inc
int
movsb
mov
faddl
mov
es
mov
testb
sub
xchg
lret
popf
jae
cmp
add
in
xchg
dec
rol
hlt
push
icebp
in
mov
adc
stos
xchg
leave
repz
daa
or
mov
pop
shlb
or
push
xchg
dec
or
mov
pop
inc
testb
cld
cmp
cwtl
xor
push
in
add
adc
out
mov
subl
mov
flds
adc
pop
jno
std
mov
cmpsl
loope
inc
mov
mov
out
stc
pop
mov
cli
daa
xor
scas
addr16
cld
and
xchg
mov
aam
inc
clc
mov
bound
ja
push
add
out
rcrb
loope
hlt
pop
cmp
iret
sub
mov
loop
sbb
outsl
push
jmp
adcl
xrelease
or
adc
pushf
sub
fisttps
mov
in
dec
rolb
in
mov
or
mov
lods
fwait
pop
sub
ljmp
dec
mov
push
mov
scas
xchg
out
mov
lahf
test
pop
lret
daa
sub
xrelease
xlat
dec
fbld
push
call
in
sub
scas
jae
loopne
mov
pop
push
xchg
fsts
xchg
push
mull
imul
push
mov
dec
scas
pusha
mov
and
mov
mov
add
in
mov
fcompl
mov
cmp
pop
daa
dec
inc
inc
sub
mov
dec
outsl
aaa
push
sbb
sbb
stos
dec
add
inc
data16
push
sub
outsl
cmpsb
jg
mov
frstor
cli
dec
jae
jb
cmp
addb
adc
ret
mov
divb
pusha
mov
pop
sub
arpl
cmp
in
sub
pop
mov
out
scas
std
push
mov
mov
out
pop
mull
xor
inc
fiadds
arpl
int3
or
mov
mov
punpckldq
sbb
jl
out
xchg
lods
add
test
stos
sbb
adc
push
and
push
pop
dec
cltd
xchg
loope
ja
stc
pop
out
pushf
push
mov
cli
movsl
push
jne
cli
clc
idivb
mov
or
dec
jnp
imul
mov
adc
test
fists
int
pop
sarb
mov
pop
push
popa
cmpsl
jno
jne
mov
out
and
test
cmc
repz
out
mov
lods
inc
mov
pop
pop
mov
jmp
not
push
dec
shlb
idivb
mov
lods
cmp
add
jle
jl
cmpsb
inc
fwait
mov
mov
mov
xor
xchg
pop
int
adc
stos
lret
mov
jb
jmp
fcompl
pusha
out
sbb
mov
nop
and
das
loop
pushf
jl
aaa
mov
inc
or
inc
cltd
decb
xor
mov
in
das
xchg
pop
lock
stos
std
push
push
cld
and
leave
out
std
test
sub
mov
addl
cmp
into
jns
inc
aam
push
mov
cltd
fimuls
adc
push
les
aam
lcall
push
lds
lcall
xchg
shr
sub
dec
orl
dec
pushf
jb
inc
mov
nop
ret
lcall
xor
repz
xchg
fwait
outsl
nop
xor
sub
mov
mov
sub
fdivl
push
sub
sahf
int3
jg
ljmp
pop
mov
enter
pop
nop
outsl
jae
pop
xchg
sub
inc
sar
xchg
outsl
in
or
or
cmp
sub
jl
into
mov
push
out
sahf
int3
outsl
sub
mov
outsl
enter
mov
jnp
lds
xlat
mov
sub
dec
loop
or
sub
cmp
enter
aam
ja
adc
dec
leave
push
adc
xchg
jbe
ja
arpl
test
in
imul
jp
push
xchg
mov
inc
loope
pop
and
push
push
push
jp
dec
outsl
push
imull
pop
inc
push
fs
mov
in
ja
je
pop
cmp
sub
jno
or
iret
repnz
dec
call
ja
repz
adc
lcall
ja
outsb
add
xchg
aad
mov
js
call
push
cs
dec
cmpsl
jno
aam
jnp
and
pop
out
mov
arpl
lock
or
xchg
inc
and
sub
es
sti
test
xchg
test
xchg
pop
jo
pop
push
xchg
daa
imulb
push
xchg
sti
dec
stc
insb
and
add
mov
out
js
mov
sub
push
test
adcb
hlt
adc
push
gs
popf
jbe
xor
cwtl
hlt
test
adc
sar
insl
ud0
push
cmp
out
lcall
jbe
sahf
xchg
mov
xchg
shrl
stos
and
into
incb
divl
int3
jle
ljmp
sub
cmp
bound
loopne
xchg
mov
dec
inc
xchg
movsl
xor
movsb
add
mov
xlat
jne
ret
pop
fwait
std
cmpsl
add
adcb
mov
sbb
xlat
xchg
stc
outsb
sbb
inc
aas
cmp
pop
add
ret
and
xchg
stos
insl
pop
sti
jle
sbb
add
mov
pop
fimull
sbbl
dec
mov
push
sbb
mov
xchg
cmp
stos
inc
rorl
ret
pop
dec
fwait
mov
xor
jg
inc
xchg
sysenter
and
inc
pop
bound
jbe
mov
sub
cwtl
xlat
mov
jmp
stos
leave
mov
cmpsl
xchg
xchg
or
mov
cmp
int
inc
pop
call
mov
xor
mov
test
addr16
sar
sbb
or
mov
cmp
adc
mov
mov
ret
sub
xchg
mov
bound
repnz
xchg
dec
pop
cmp
and
pop
insl
loope
aas
xor
sbb
push
scas
lods
mov
std
pop
dec
cmpsl
inc
scas
xchg
cmp
punpckldq
mov
test
mov
push
movntq
out
dec
mov
and
stc
js
jle
sub
pop
into
inc
mov
loop
and
cmp
inc
lret
lret
cmp
insb
stc
ljmp
cmpsb
add
push
arpl
and
mov
std
pop
jne
lods
mov
xor
and
push
in
mov
xchg
cmp
cmc
je
mov
jnp
andb
inc
mov
xchg
add
mov
ret
in
test
movl
mov
icebp
out
xchg
out
mov
cmp
and
lods
jp
clc
shrl
mov
in
hlt
testb
adc
or
dec
lock
mov
shll
adc
insb
aad
mov
mov
sbb
pop
jnp
popa
or
pusha
in
adc
fiaddl
out
cmp
outsb
test
mov
call
outsb
xor
sub
sub
sar
std
mov
out
mov
mov
mov
enter
outsl
stc
adc
dec
cmp
mov
mov
sti
adc
lahf
dec
cmp
adc
clc
std
xchg
mov
xor
mov
scas
sub
cmp
outsb
ret
mov
lods
sbb
and
jnp
sti
pusha
mov
lret
sarb
mov
mov
inc
mov
mull
repz
dec
mov
scas
mov
leave
movsl
push
adc
les
imul
pop
dec
mov
mov
mov
in
jmp
cmovle
mov
shr
aam
ljmp
jmp
sbb
lods
dec
dec
jno
fstpl
mov
cmp
dec
mov
ja
sti
mov
daa
fimull
mov
mov
mov
xor
jbe
bound
addr16
decb
imul
enter
adc
mov
and
or
dec
sarl
popf
dec
into
jbe
push
jg
mov
or
cld
dec
lret
out
or
jo
and
daa
mov
cmpsl
dec
mov
popf
inc
jge
inc
fildll
lret
cwtl
stos
in
or
dec
addb
in
repnz
fs
mov
pop
add
in
fwait
sbb
dec
in
arpl
cmp
inc
hlt
mov
mov
xor
arpl
pop
xor
mov
pusha
push
test
dec
sub
pushf
fcoms
rorb
and
xchg
aaa
aam
or
insl
cli
bound
inc
test
int
sbb
jno
and
mov
push
ret
dec
add
mov
push
test
insl
aas
pop
push
mov
aaa
sub
and
cwtl
mov
aas
inc
loope
cmc
cs
sahf
xchg
repnz
xchg
ds
mov
cli
jmp
xchg
mov
stos
call
sub
mov
inc
xchg
inc
mov
mov
sub
fwait
sub
lret
mov
mov
iret
mov
and
movsl
jbe
inc
leave
fldz
jmp
adc
movsl
fadd
mov
lcall
mov
je
daa
sub
sbb
xchg
hlt
ret
cmp
testb
das
xchg
call
xchg
xchg
jge
mov
mov
shl
cmp
mov
mov
push
imul
and
sti
dec
fistl
dec
cmp
xor
ss
jns
bound
xlat
call
cmpsl
icebp
mov
jno
mov
mov
aad
js
mov
push
stos
sbb
cmpsb
cmp
lea
hlt
stc
dec
test
cmp
or
mov
mov
dec
mov
pop
int
jecxz
ret
loopne
hlt
mov
sahf
sbb
movsb
into
lret
out
mov
repz
jge
dec
xor
inc
jno
or
jnp
ret
xor
sub
ret
mov
call
lods
mov
and
ret
xor
push
sahf
mov
imul
cs
bound
sub
dec
mov
mov
cmc
cmp
xor
cld
dec
leave
aas
dec
bound
mov
jno
mov
fadd
scas
sbbb
mov
mov
mov
inc
scas
fsubs
pop
mov
cs
ljmp
loopne
inc
loopne
inc
outsl
mov
mov
inc
mov
mov
mov
fsubl
jge
aas
insl
inc
shl
pushf
andl
xchg
cmp
jae
lea
mov
clc
xor
pop
xor
add
jae
repnz
dec
mov
popa
dec
cmp
int
xchg
int3
mov
das
imul
call
cmpsb
stc
pop
cmp
dec
push
clc
pop
dec
jb
push
data16
pusha
dec
pop
pop
pop
test
pmaxsw
sub
decb
rcrl
imul
iret
mov
leave
enter
cmp
adc
cld
sbb
and
cmpsb
sub
cmpsl
sub
push
int3
fbld
repnz
mov
hlt
pop
shrl
sub
push
jecxz
dec
mov
push
mov
das
fwait
pop
xor
inc
mov
mov
pushf
push
repz
pop
sahf
stc
push
push
sub
jne
cmpsb
xchg
jns
pop
aaa
push
xor
sbb
jp
repnz
imul
jl
xchg
loop
xchg
std
or
xlat
rcr
outsl
outsl
jne
pop
pop
es
xchg
xchg
push
outsl
int3
jbe
jmp
call
outsl
mov
jo
repnz
adc
enter
addr16
or
sub
push
adc
bound
icebp
dec
add
dec
xchg
jns
insl
xchg
xchg
mov
cli
cmp
mov
incb
xor
lea
mov
mov
jnp
lcall
xchg
push
pusha
xchg
dec
in
push
call
addb
pop
jns
subb
xorl
adc
jnp
add
pop
mov
jnp
nop
mov
xchg
push
add
fs
mov
adcl
loopne
hlt
nop
sbb
stos
push
jnp
jl
xchg
push
fs
fmull
jl
je
js
pop
push
jnp
jge
push
inc
pop
lret
call
xchg
outsl
jle
push
dec
pop
dec
and
sbb
jle
in
rolb
int3
jg
aaa
cmp
jg
in
bound
jo
out
xchg
adc
sbbb
mov
adc
mov
aas
adc
mov
inc
cmpsb
ret
scas
mov
dec
push
cmp
imul
xchg
cmpsb
fwait
ljmp
scas
xor
addl
lock
add
mov
loopne
jae
mov
sbb
js
xchg
out
sub
sbb
dec
inc
hlt
fdivr
dec
dec
addb
outsl
scas
pushf
and
pop
cwtl
sahf
xchg
and
mov
lret
dec
outsl
loop
dec
testl
pop
or
aam
add
push
dec
mov
mov
neg
and
mov
cmc
jg
mov
popf
xchg
jecxz
inc
stc
pusha
outsb
cltd
sahf
xchg
pop
or
adc
jb
adc
xchg
jmp
sub
adc
cli
fsts
mov
mov
xchg
or
pop
mov
lock
and
adc
ret
xor
xor
test
inc
cmp
outsb
mov
mov
outsl
sti
fstpl
decl
popf
addr16
adc
inc
js
or
in
cmp
mov
push
loop
sahf
adc
imul
xchg
and
mov
daa
es
imul
mov
sbb
pop
jp
out
mov
pop
cld
push
xchg
push
adc
cwtl
jbe
mov
xchg
popf
dec
pslld
in
xor
flds
test
mov
loop
or
mov
and
xchg
sarl
lcall
call
add
xchg
imulb
movsb
or
imul
xor
out
xchg
cmp
and
int3
cwtl
sub
movsl
bound
sbb
cmp
inc
jl
into
jo
daa
ja
cmpsl
mov
ffree
dec
loope
cmpsb
pushf
int3
mov
scas
mov
les
outsl
adc
mov
roll
enter
xchg
xchg
loope
xchg
cmp
scas
dec
mov
mov
dec
lea
lea
or
xchg
ret
int3
sbb
fiadds
lret
pop
popf
stc
int3
mov
loope
xchg
pop
push
js
mov
aad
in
xor
push
add
pop
ficoml
mov
push
test
ds
add
fstps
sub
ret
lcall
fcmovb
xchg
cmpsl
les
imul
iret
mov
popa
fldenv
outsl
adc
sbb
lret
or
push
push
push
xor
pop
repz
pushf
mov
sub
mov
dec
xchg
mov
dec
jecxz
orb
loope
add
inc
xchg
or
outsb
cld
sub
repz
fnstsw
mov
add
sub
lahf
sub
fsubrp
jmp
arpl
insb
xchg
adc
ret
sti
cltd
cmpsb
jae
fildl
out
jno
adc
xchg
jno
scas
sub
ljmp
mov
mov
xchg
cmpsl
cwtl
outsl
fwait
xchg
imul
imul
jno
mov
mov
sbb
shlb
mov
imul
mov
mov
ret
lcall
xchg
adc
dec
orb
lea
pusha
outsl
lcall
xorl
inc
push
and
subb
xchg
movsb
fwait
lods
inc
add
mov
fcmovnb
dec
cmp
inc
iret
jo
push
js
test
lcall
test
jl
xchg
lret
iret
xchg
jnp
xchg
jo
arpl
xchg
jl
xchg
inc
xchg
xchg
int3
cmc
jo
xchg
add
enter
rcll
mov
inc
imul
outsb
inc
movsb
or
imul
xchg
imul
enter
rclb
dec
into
outsb
xlat
add
int3
jb
push
xor
dec
iret
vphaddudq
cmp
fisttps
mov
cltd
pop
dec
mov
jo
jo
outsl
cmp
jl
xchg
sub
xchg
loop
cmp
pop
pushf
mov
inc
imulb
fcompl
aad
mov
rcr
sub
outsl
fistps
add
lcall
lcall
mov
sbb
push
pushf
inc
lods
add
rolb
outsl
xchg
mov
js
test
mov
sbb
adc
dec
les
mov
int3
imulb
nop
ja
outsl
jnp
sbb
lods
leave
test
popf
jl
xchg
cld
rclb
dec
rcll
sahf
pop
cmp
dec
iret
insl
lret
ja
inc
stos
fwait
hlt
rol
inc
inc
data16
cmpsl
loopne
xor
jno
mov
mov
inc
div
cld
pause
jecxz
inc
movb
jecxz
in
cli
fstpt
inc
shr
and
mov
dec
repz
mov
pusha
movsl
sbb
xor
or
in
loope
mov
dec
cld
dec
into
inc
mov
imul
movsl
sbb
cmp
lcall
or
mov
xchg
mov
sub
xchg
xor
sbb
es
cmpsb
mov
xchg
push
scas
mov
adc
jno
loope
movsb
adc
adc
xchg
imul
test
into
push
mov
imul
loope
stos
dec
push
test
push
jbe
imul
fdivl
pop
outsb
movsl
mov
xchg
js
cmpsb
enter
lahf
rcr
xor
jns
loope
mov
js
jb
sti
or
jmp
xor
call
gs
decb
aad
mov
push
cmp
xlat
ljmp
xchg
add
enter
jo
cmpsl
sub
mov
jo
popf
ret
adc
inc
je
outsl
gs
or
jne
outsl
mov
xchg
js
cld
mov
imul
add
cld
std
nop
mov
dec
sahf
mov
dec
les
or
xchg
push
jno
mov
adc
push
addb
ds
inc
mov
scas
nop
mov
xchg
subb
aam
imul
shrl
cmp
fimuls
or
push
mul
cmp
xchg
movsb
or
mov
cmp
jbe
lcall
push
stc
xchg
cli
incb
inc
loop
rcrb
jb
mov
jbe
out
jno
movb
jae
test
jb
xchg
icebp
out
jo
xchg
add
cmp
cmp
sbb
mov
outsb
loope
test
and
sub
xchg
add
cltd
rclb
mov
adc
lahf
add
jnp
aaa
test
push
dec
mov
xchg
fmull
pop
sbb
adc
mov
mov
lea
popf
cmpsb
adc
mov
out
xor
sahf
dec
pop
enter
or
cltd
jnp
inc
test
push
outsl
push
lcall
daa
outsb
fwait
dec
scas
push
cmp
sub
inc
xchg
push
add
nop
xor
out
movsl
mov
cwtl
jl
popf
adc
repnz
orb
daa
insl
and
sbb
andl
and
scas
addb
cmp
xchg
adcl
fwait
xor
clc
xor
cwtl
jbe
and
mov
loop
xor
or
iret
nop
clc
nop
cltd
pop
dec
mov
outsl
cltd
mov
insl
xor
leave
test
jge
xchg
mov
jg
call
mov
cmpsb
dec
scas
mov
mov
mov
sbb
js
mov
cltd
cmp
pop
cmpsb
push
xor
xchg
and
xchg
outsl
sahf
stos
pop
push
pop
inc
adc
push
lock
scas
cmp
popf
mov
cltd
cmp
xor
nop
popf
scas
imul
hlt
jb
mov
push
sbb
ljmp
adc
dec
test
xor
lcall
mov
shll
aad
xchg
pop
jp
mov
lret
out
push
pop
scas
andb
and
adc
cltd
enter
outsb
in
add
adc
test
and
loop
mov
imul
nop
jns
and
jecxz
lock
lret
or
popf
mov
fstl
sahf
jnp
lahf
add
adc
popf
lcall
sbb
lock
lock
mov
dec
icebp
sbb
roll
imull
movsb
mov
jnp
lcall
mov
imul
enter
outsl
lock
mov
xchg
fstpl
add
adc
jbe
call
cwtl
movsb
jle
insb
jae
in
jnp
push
cltd
lock
ljmp
fldl
stc
and
add
insb
hlt
pop
jbe
add
lahf
sbb
sahf
pop
jbe
negb
mov
mov
mov
sarb
andb
push
in
cmp
outsl
in
ret
cmpsb
mov
cltd
movsb
mov
popl
mov
inc
mov
push
pushf
lahf
cwtl
xchg
mov
popl
lea
fstpl
outsl
stos
jbe
or
popf
pop
popf
pop
in
or
dec
jecxz
push
add
outsl
jbe
and
in
fldl
mov
mov
cli
jbe
jg
insb
and
out
cltd
insl
xchg
xchg
gs
fmul
cmp
sahf
mov
cltd
frstor
sti
insb
fists
pop
ret
jns
js
mov
fstl
movsl
cmp
stos
mov
jno
loop
jecxz
adc
jnp
cmp
mov
scas
mov
xorl
cmc
xchg
mov
sbb
enter
aad
push
test
lods
mov
mov
mov
hlt
xchg
mov
iret
rcl
mov
add
xchg
mov
dec
sbb
mov
rclb
jge
sub
mov
dec
outsl
ret
mov
jne
xchg
cmp
das
fisubrs
js
cmpsb
iret
mov
outsl
push
lods
xor
add
adc
sbb
mov
lcall
rorb
test
loopne
orb
inc
loopne
iret
loopne
mov
bound
loopne
mov
add
sbb
ja
adc
mov
xchg
nop
xorb
aam
out
das
mov
mov
nop
lahf
mov
outsb
mov
aad
inc
rorb
lea
mov
cmpsb
xchg
inc
sar
fs
push
lock
push
jno
out
jb
or
sub
imul
push
mov
les
cs
jg
or
pop
int
ja
nop
imul
fsubr
xchg
incb
lahf
mov
inc
mov
sub
xchg
aaa
push
mov
cmc
xchg
push
cmpb
or
mov
push
inc
outsb
cli
add
cmp
adc
adcl
pop
fstpl
push
rcl
adcb
pop
sbb
dec
jne
imul
jge
mov
jne
pop
or
xchg
dec
les
mov
pop
arpl
xor
push
xchg
mov
push
rol
test
stc
in
xchg
xorb
dec
mov
ret
and
xlat
push
pop
lock
pop
xlat
fwait
dec
adc
out
or
jmp
sub
leave
test
fxch
lret
fmulp
mov
sahf
jae
pop
ja
stc
insl
in
popf
add
xor
call
pop
popf
in
inc
jns
movsb
xchg
lret
testl
xchg
dec
fidivs
mov
mov
lock
push
mov
jecxz
sbb
mov
lods
mov
scas
mov
xchg
or
dec
adc
sahf
nop
xchg
movsb
iret
or
sub
icebp
mov
dec
cmpsb
jno
mov
fucomi
fs
push
xchg
orl
ret
cmpsl
in
mov
cli
push
ret
sub
mov
xchg
mov
mov
fdivl
and
dec
js
adc
lahf
lea
mov
es
into
mov
outsb
mov
fildll
mov
jb
popa
xchg
mov
mov
fmull
outsb
ds
mov
cmp
out
mov
mov
xchg
imul
cwtl
xchg
pop
pop
fstpl
js
call
or
fisubrs
enter
pop
sub
loope,pn
into
nop
mov
daa
jle
push
mov
mov
fiaddl
call
aam
jg
mov
gs
ss
iret
or
sub
xchg
dec
arpl
xchg
jne
inc
test
repz
loopne
sub
xor
sbb
lret
daa
mov
push
mov
nop
cmp
mov
xlat
add
cmp
or
mov
jae
insl
and
aad
mov
xchg
inc
movsb
mov
xchg
add
mov
inc
in
mov
jno
sbb
pusha
fstpl
jmp
xor
aam
out
ret
lret
ss
das
sbb
stos
loopne
pop
push
cmp
lds
or
movsb
icebp
add
popa
inc
jae
or
aad
dec
out
pop
std
imul
loope
mov
cmp
stos
jne
mov
pop
push
movsb
push
daa
dec
dec
adc
mov
test
movsb
xchg
mov
cmpsl
mov
push
dec
push
jmp
adc
adc
push
sub
xchg
aam
pushf
out
mov
or
popa
std
ret
stc
adc
fmuls
dec
mov
addr16
jb
lret
mov
add
popf
std
mov
in
add
xchg
cmpsb
pop
mov
cmp
mov
push
mov
stos
cld
add
push
scas
lea
xchg
mov
test
movsb
push
dec
movsb
iret
mov
frstor
sbb
mov
and
dec
inc
dec
or
sbb
inc
xchg
addl
loop
sub
push
sub
shll
into
sahf
out
push
clc
jbe
imul
mov
fistpl
and
sahf
push
sti
dec
pop
mov
mov
cmpsl
xchg
jl
fcompl
divb
jle
lea
cmpsb
fcoml
js
inc
pop
mov
push
xor
xlat
inc
sbb
push
jmp
ljmp
inc
lods
and
les
inc
xchg
pusha
jp
popf
xor
mov
dec
xchg
add
popl
xchg
lods
pusha
pop
dec
nop
xchg
mov
cmc
mov
jmp
mov
loope
mov
mov
jnp
out
adc
mov
leave
inc
push
adc
lods
lods
data16
mov
aas
xorb
add
xchg
in
inc
repz
iret
sbb
add
pusha
cmp
push
cmp
movsb
pop
xor
dec
movsl
fistps
sbb
dec
xor
fcom
cmp
jp
jle
xchg
mov
aas
rcrb
mov
adc
insb
jmp
xchg
sub
popf
mov
ret
xor
and
pop
push
push
dec
sub
js
dec
or
gs
or
imul
mov
jmp
cmc
mov
imull
push
imul
xchg
push
xchg
in
out
push
push
lcall
in
lods
lods
mov
sbb
xchg
pop
xchg
cld
xchg
cmpsb
arpl
insb
push
mov
cli
mov
sbb
ss
mov
inc
stos
dec
imul
mov
shlb
mov
push
push
mov
sub
pushf
in
outsl
leave
mov
xchg
enter
mov
sahf
fxch
mov
dec
adc
mov
mov
in
roll
cmpsl
movsb
or
push
mov
xchg
addb
jge
add
inc
cmp
mov
cmp
sub
sub
pop
pop
sti
jne
cwtl
push
mov
cld
lods
adc
adc
ret
jne
mov
hlt
or
test
pop
mov
ret
rorl
adc
bsr
nop
std
add
cs
jbe
sbb
rorb
clc
js
in
or
jmp
xchg
pop
mov
shrl
push
pop
mov
out
or
xchg
lds
pop
add
adc
mov
adc
mov
add
aas
pop
por
dec
mov
leave
cmp
inc
adc
sub
pop
in
push
inc
imul
cmpsl
rolb
mov
add
xlat
pop
icebp
ljmp
imul
push
mov
xchg
in
pusha
sbb
push
fs
cmp
cmp
mov
pop
mov
dec
jno
mov
or
in
inc
sub
sbb
adc
xorb
cmp
jns
retw
sbb
sbb
shr
and
in
dec
pop
outsb
adc
mov
cmpsb
sbb
xchg
add
xchg
rol
call
cld
cmp
mov
or
add
repnz
xchg
sub
xchg
xchg
xchg
dec
ret
and
or
out
pop
gs
sub
fwait
push
stos
lahf
mov
data16
dec
int3
and
lods
ficomps
mov
shr
mov
inc
loope
xchg
mov
jge
fldt
and
std
popa
mov
xlat
repnz
push
mov
mov
rcrl
cli
mov
adcb
inc
mov
out
mov
loope
bswap
push
cmp
jmp
sub
or
rcrb
les
push
jbe
pop
dec
pop
aaa
xchg
outsb
sti
mov
mov
mov
inc
add
rorl
or
xor
push
mov
je
add
shll
jne
xchg
fisttpll
xor
mov
jo
test
xor
out
fwait
push
sub
cmp
mov
imul
pop
popa
xor
and
xchg
in
push
ret
test
repnz
mov
pop
sub
sahf
test
dec
sbb
mov
lret
sbb
mov
inc
outsl
cmp
dec
xchg
test
and
mov
movsb
push
arpl
cmp
icebp
mov
scas
sub
xor
sub
xchg
mov
subl
or
iret
fbstp
or
repz
je
mov
pop
jmp
xchg
xor
dec
push
out
sub
fidivrs
mov
cmpsl
adc
int
ret
add
aaa
movsb
nop
dec
dec
inc
mov
in
xor
subb
dec
sub
mov
xor
jb
call
push
loope
outsl
jne
jns
jns
inc
lret
pop
mov
mov
add
orl
jb
frstor
fists
pop
push
jecxz
pushf
idivb
jge
data16
cli
push
mov
mov
push
jl
ret
outsl
jmp
iret
addl
outsl
sbb
mov
push
jo
stos
mov
push
add
js
dec
push
dec
fidivs
dec
les
aad
cmp
cmp
int3
jecxz
jle
ret
outsl
movntq
out
iret
jl
fiadds
insb
mov
nop
sti
mov
insl
stos
xor
jns
stos
into
sub
jmp
xchg
fwait
jno
out
xchg
mov
int3
int3
lods
add
cmp
stos
push
insb
adc
push
repnz
jb
jne
mov
sahf
cwtl
pusha
xor
into
cmpsb
xchg
and
sbb
mov
movsl
adcl
xchg
or
leave
dec
xchg
stos
xor
into
mov
inc
insl
ficompl
jb
adc
sahf
lret
sub
or
lock
add
cmpsb
jb
mov
xor
lcall
sub
adc
les
std
pushf
ds
sub
adc
pop
push
mov
push
enter
mov
cwtl
xor
mov
ljmp
pushf
pop
push
add
pop
push
sub
cmpsb
and
xor
das
xchg
into
das
mov
or
sub
ja
push
xlat
loopne
jbe
mov
adc
xchg
or
cmp
mov
push
outsb
xor
mov
mov
jmp
push
sbb
sti
movsb
cmp
cmp
xor
xchg
jmp
stos
cmp
jmp
push
adc
repnz
pop
xlat
jbe
rcl
out
jb
pop
mov
push
jmp
outsl
ror
imul
xor
ljmp
lds
pop
inc
mov
jl
cmc
or
pop
mov
xor
inc
mov
jae
fs
adc
lret
dec
or
in
mov
sub
cmp
mov
sbb
cmp
xchg
jne
roll
clc
mov
dec
adc
push
cld
enter
out
adc
jge
sbb
mov
fidivrl
sub
jecxz
aas
inc
xor
mov
mov
outsl
sub
sbb
jp
jns
xchg
xchg
and
lret
pusha
stos
popa
fwait
pop
inc
dec
cld
test
push
jmp
test
es
and
sbb
mov
mov
cmc
push
icebp
and
sbb
lahf
in
mov
loope
idiv
gs
cmp
mov
insb
push
add
jb
scas
mov
inc
fisttpl
xchg
push
pop
xchg
inc
mov
fwait
adc
aaa
adc
das
add
mov
jns
sarb
and
mov
fists
xchg
mov
enter
je
mov
ss
jae
jb
adc
xor
pop
fwait
adc
aam
stos
adc
mov
gs
mov
push
mov
cld
fwait
inc
fcomip
je
mov
fwait
dec
xchg
mov
stos
dec
mov
mov
addr16
mov
push
mov
mov
adc
popf
mov
sbb
into
jne
mov
lods
sbb
lret
jno
mov
filds
sbb
shrl
fistl
insb
pop
aam
inc
int
imul
mov
mov
fs
mov
push
and
js
mov
sarl
cmpsl
mov
test
xchg
int
adc
and
inc
cmp
inc
pop
xchg
inc
lret
in
cmp
or
cmc
inc
imul
fisttpl
std
pop
pop
loope
xor
and
sbb
xchg
and
call
nop
mov
adc
mov
aam
je
dec
mov
and
cltd
int3
cmp
xchg
in
int
lods
xchg
mov
jmp
inc
lret
daa
aad
mov
in
movsl
adc
add
subb
call
lds
mov
xchg
arpl
xor
dec
test
cmp
cmp
fwait
ret
add
dec
mov
fldl
xchg
hlt
out
mov
in
and
sbb
xchg
loope
outsb
movsb
mov
sbb
mov
test
inc
lods
mov
dec
int3
cmp
dec
dec
not
aaa
xor
xor
ret
aad
jne
push
iret
lods
icebp
rclb
mov
dec
mov
sahf
and
loopne
inc
popa
imul
mov
push
ljmp
ds
cmp
cmp
in
mov
movsb
push
dec
inc
mov
jnp
inc
je
fs
adc
mov
gs
rorb
popa
into
test
mov
mov
mov
xchg
inc
ret
push
mov
xchg
aas
inc
mov
enter
ja
adc
mov
mov
outsl
mov
call
mov
mov
sub
pop
xchg
movsb
popf
or
mov
sti
sub
jl
push
jmp
icebp
ret
sub
pop
jle
and
sub
cld
dec
shrl
movsb
push
add
lret
pop
mov
mov
cli
push
movsl
das
hlt
mov
mov
jnp
cli
mov
out
xchg
mov
insb
or
hlt
jne
stos
add
aad
mov
mov
hlt
jbe
xchg
push
mov
mov
cld
roll
mov
xorps
dec
dec
inc
mov
pop
lods
pop
je
cmp
xchg
icebp
cmpsb
jg
jno
lods
sahf
push
imull
mov
test
loope
enter
mov
mov
cmp
inc
mov
push
xchg
jne
movsl
jp
add
and
orl
mov
das
mov
pop
sub
dec
aad
sub
xchg
add
push
inc
xchg
jmp
dec
repz
mov
xor
shll
insb
push
fimull
out
flds
sbb
pop
add
rcrl
sti
inc
adc
inc
movsl
sub
mov
arpl
and
pop
outsl
mov
pop
inc
pop
repz
inc
or
lods
push
addr16
nop
shlb
imull
sub
and
call
les
xchg
nop
jb
or
mov
insb
sti
or
mov
fisttpll
mov
into
fistpl
jb
stc
out
dec
repnz
push
dec
pop
dec
test
pop
adc
roll
repz
subb
ficompl
aas
mov
in
mov
mov
cmpsb
inc
je
jbe
sbb
xchg
mov
sti
sbb
cmpsb
xchg
mov
cmp
dec
js
call
dec
cmp
sbb
or
sub
je
or
out
fwait
std
dec
add
dec
add
loop
jbe
xchg
je
stos
cwtl
jb
dec
mov
jns
scas
xorb
xchg
or
pop
addr16
pop
sub
mov
sbb
into
sub
push
js
je
fs
push
mov
dec
push
pop
pop
ret
clc
test
clc
fldcw
leave
hlt
lret
sbb
ror
mov
sub
je
stc
cmp
sub
lret
xor
mov
inc
cld
pop
pop
push
xor
sbb
roll
aaa
add
lock
mov
xor
dec
mov
dec
sub
std
dec
mov
out
jmp
inc
testl
jnp
fsubrl
test
js
out
jbe
fwait
adc
pop
cltd
sar
into
xchg
dec
push
lea
fldt
enter
ja
pop
xchg
outsb
xchg
sub
mov
mov
mov
adc
mov
pop
inc
jle
mov
imul
mov
mov
scas
mov
mov
enter
mov
sub
pop
add
movsb
xchg
setg
rcrl
sbb
mov
or
sbb
lcall
push
incl
dec
scas
adc
faddl
fildll
push
insl
or
adc
or
mov
cwtl
movb
adc
jne
mov
or
rcll
sub
adc
mov
dec
pop
xlat
mov
je
jl
sbb
int
fstpt
inc
pop
lcall
xorb
insb
mov
shlb
or
inc
int
repz
sub
xchg
mov
xchg
sub
mov
arpl
push
sbb
sbb
xor
push
mov
hlt
dec
loopne
popa
add
adc
dec
jp
fwait
mov
out
dec
jns
pop
mov
mov
mov
xor
push
dec
adc
sahf
icebp
inc
in
jae
leave
sti
aaa
andb
xor
xchg
popa
mov
or
cli
mov
scas
or
jmp
sbb
push
pop
shlb
fwait
push
in
or
ror
inc
xor
xchg
rol
xchg
dec
sub
dec
xchg
jp
int
lds
dec
mov
sub
jecxz
xor
in
mov
hlt
lahf
dec
jbe
mov
jl
sbb
cmp
cld
ss
daa
fs
pop
mov
mov
cmpsb
mov
and
adc
mov
aad
jg
repnz
cmp
xor
aas
push
or
sti
test
das
cmp
dec
sbb
sub
test
leave
mov
pop
push
shrl
add
andl
and
adc
mov
push
push
ja
pop
test
adc
mov
jl
dec
xchg
cmp
loopw
into
mov
jno
mov
je
int
mov
jl
movsl
or
jno
not
fnstenv
xchg
into
mov
scas
scas
jbe
lahf
ja
popa
les
les
ja
xchg
cwtl
movl
out
out
stos
jnp
mov
das
rcrb
stc
pop
push
jle
sub
xor
lds
imul
mov
imul
cmpsl
les
cmp
xchg
in
adc
pop
out
imul
and
rep
adc
lcall
inc
loope
jmp
jne
and
inc
rorb
xchg
xchg
inc
mov
xchg
pop
enter
bound
adc
nop
mov
sub
lahf
xchg
out
imul
int
mov
or
xchg
cltd
sbbb
cmp
shlb
inc
xchg
pushf
xchg
rolb
cltd
sub
out
into
mov
nop
mov
jno
dec
loop
insl
outsl
addr16
fisttps
or
dec
movb
add
mov
mov
cld
int3
adc
xchg
cwtl
mov
push
cmp
ret
stc
mov
xabort
mov
sbb
xchg
inc
scas
ret
mov
fstpt
xor
in
and
repz
cld
pop
out
js
dec
mov
mul
jl
jbe
xor
ljmp
test
and
das
fistl
push
cld
jmp
lock
mov
lret
test
adc
cmp
dec
shlb
cmp
mov
insl
rorl
mov
sub
xchg
cmp
mov
fwait
jecxz
inc
pop
xchg
push
test
repnz
add
stc
pop
gs
add
push
rcll
mov
or
dec
pop
je
mov
sub
adc
stos
xor
xor
dec
cmpsb
pop
mov
aad
out
jmp
loopne
icebp
mov
push
jp
addr16
mov
insl
adc
xchg
or
dec
mov
adc
inc
sarl
push
arpl
sbb
sahf
fs
xor
imul
sbb
mov
cmp
mov
mov
mov
mov
pop
mov
jg
mov
jmp
orb
xchg
xor
adc
fadd
push
push
xlat
pop
out
mov
aas
push
dec
add
fldenv
xor
imul
dec
in
or
sbb
mov
push
push
cwtl
enter
add
mov
data16
shlb
cmp
mov
adc
mov
vpunpcklbw
mov
addl
jnp
xchg
lcall
pop
inc
and
jg
lea
xchg
pushf
ljmp
adc
pop
mov
lret
scas
loop
mov
xchg
adc
sbb
int3
adc
pop
mov
pop
sub
add
cli
inc
rorb
jp
pop
add
xor
mov
icebp
repnz
mov
das
lret
scas
ja
mov
jb
pop
jmp
test
lea
xchg
push
negl
test
mov
clc
scas
mov
add
js
cwtl
inc
popa
scas
xchg
lahf
cmpsl
addr16
fwait
insb
popa
xchg
fsubrs
sub
int
jno
pushf
repz
sbb
mov
add
xchg
andb
lds
dec
jb
push
fwait
dec
push
imul
mov
sub
imul
xor
addr16
adc
xchg
mov
imul
lock
or
sbb
mov
xor
and
aas
jecxz
push
xor
dec
lcall
pop
stos
cli
jnp
sbb
fiaddl
lret
imul
and
lcall
xor
cli
mov
std
loope
mov
lea
mov
jge
into
lret
mov
push
inc
ja
call
repnz
iret
inc
movsl
pop
xchg
cwtl
jle
sahf
jmp
insl
fimull
sbb
push
push
push
sub
leave
jne
pushf
imul
lret
mov
mov
xchg
cli
scas
fistpl
dec
jb
ds
dec
enter
lds
lock
add
xchg
mov
into
xchg
cltd
les
stc
mov
int3
sbb
clc
outsb
jnp
mov
lahf
xchg
xchg
cwtl
mov
jbe
pop
sti
inc
orb
inc
js
iret
insl
ja
mov
gs
jle
mov
int3
mov
xchg
ja
sbb
cmp
inc
andl
inc
mov
aas
cwtl
jno
or
jne
sub
push
stc
pop
xor
dec
sub
cmpsl
fs
stc
repnz
sti
icebp
or
or
enter
imul
pop
sbb
push
repnz
add
js
sub
movsl
ljmp
jl
mov
fwait
mov
xchg
psrad
scas
fadd
pushf
push
ljmp
cmp
int
xchg
fwait
rcl
ror
enter
sub
mov
rcr
push
insb
mov
shrb
imul
ja
ds
lcall
into
imul
dec
pop
clc
push
inc
push
aaa
xchg
mov
xlat
je
mov
sar
sbb
cmp
adc
or
dec
sbb
aas
in
push
shrl
mov
outsb
xchg
adc
es
fwait
xlat
mov
inc
pusha
sbb
outsb
jecxz
in
pushf
xchg
js
ljmp
xor
jge
or
cmp
mov
add
filds
dec
test
insl
movsb
fisubrs
and
inc
lods
insb
jmp
jle
js
outsb
ror
lcall
aam
scas
pop
pop
pop
jge
push
insl
stc
cmp
xchg
std
pop
mov
mov
insl
push
shl
js
fimuls
adcb
fstp
jge
in
in
xor
push
xor
push
dec
scas
in
aas
jg
push
jle
xchg
jnp
push
push
inc
push
add
scas
or
mov
movsl
in
push
xor
adc
push
mov
push
push
xchg
pop
xchg
sbb
scas
andl
push
call
movsb
out
sarb
push
dec
dec
inc
dec
gs
push
sub
xchg
lcall
int3
jae
cmc
and
push
mov
push
sub
add
pop
sahf
hlt
repnz
jno
dec
sub
fwait
inc
das
xchg
mov
pop
lods
push
inc
lcall
add
push
clc
push
xchg
dec
inc
pop
aaa
test
or
push
push
test
xchg
push
inc
xchg
jb
mov
add
test
dec
mov
std
stos
sti
lcall
negb
xchg
imul
bound
arpl
cmc
mov
movl
adc
enter
push
cltd
jb
stos
nop
lea
dec
dec
outsb
push
cmp
pop
inc
xchg
lcall
std
xchg
and
jno
xchg
add
xor
sbb
fisttpll
xchg
add
inc
int3
xchg
sub
xchg
cmpb
sbb
sbb
outsb
in
scas
xchg
outsb
in
scas
xchg
jle
cmp
xchg
mov
xchg
push
in
inc
into
jnp
in
popf
add
mov
xchg
scas
mov
sub
enter
adc
cmpsl
les
imul
stos
cmp
mov
xchg
pop
mov
popa
xchg
imul
pop
jp
sbb
mov
sbb
xchg
push
jle
inc
sarl
xchg
add
fwait
lret
rep
dec
enter
push
xchg
flds
or
xchg
mov
dec
cmp
xor
cmp
js
cmc
mov
inc
std
xchg
lcall
or
jb
movsb
test
sbb
out
sbb
iret
mov
into
sbb
jns
sbb
sbb
sbb
sbb
fdiv
fcmove
sbb
jb
cmpsl
into
sbb
jle
in
sub
pop
je
pop
jle
shlb
sbb
push
xor
dec
dec
mov
mov
ds
jo
sbb
inc
jo
mov
sbb
inc
shlb
in
fldenv
movsb
lcall
xchg
cmp
popf
call
and
cmp
sahf
fldenv
shlb
and
cmp
lahf
mov
inc
xchg
outsb
leave
xchg
jbe
cmpb
pushf
push
mov
inc
mov
sti
push
icebp
clc
test
shlb
xchg
push
sti
mov
sbb
or
sbb
outsl
rclb
pushf
lea
outsb
cmp
insl
rol
dec
sbb
outsb
outsl
sarb
jge
or
mov
jg
inc
xchg
sub
imul
cmpsb
jb
push
std
roll
outsl
movsb
mov
push
lcall
fwait
iret
jl
xchg
int
js
inc
stc
outsl
enter
imul
leave
jl
xchg
mov
shrl
fstpl
adc
cwtl
test
push
push
jae
bound
sar
das
and
into
pop
mov
jns
jnp
into
sbbl
dec
mov
push
sti
push
mov
jge
js
inc
mov
push
mov
or
je
cmp
sbb
movsl
into
push
cwtl
cwtl
mov
test
mov
and
mov
mov
mov
mov
icebp
lods
sarl
fstl
cmp
add
cltd
movsb
and
enter
cld
aam
arpl
mov
push
incb
fs
scas
leave
and
scas
rorl
push
jnp,pn
add
lahf
mov
lods
xor
and
add
stc
push
and
jp
daa
fldenv
lret
popl
add
push
xchg
and
mov
cli
arpl
stc
mov
dec
push
add
xchg
push
stc
out
enter
into
sahf
ljmp
pop
icebp
or
arpl
and
cmpsl
mov
mov
mov
idiv
cli
inc
dec
in
in
or
push
cmp
xchg
daa
push
inc
cwtl
mov
xchg
fldcw
xchg
push
pop
mov
call
jmp
adc
popf
mov
out
xchg
mov
mov
mov
cmp
jmp
push
jbe
push
xchg
push
xchg
lahf
cmp
ja
adc
lods
pusha
jae
dec
icebp
cwtl
in
scas
push
imul
xchg
shrb
push
push
in
iret
mov
xor
jno
adc
cmp
push
or
xor
mov
jb
stc
out
push
ds
mov
inc
mov
or
into
push
scas
dec
out
xchg
loop
clc
fldenv
aas
jne
fstpl
cld
inc
in
scas
loope
cmp
sub
popa
sub
pushf
adc
cwtl
xor
stos
pop
hlt
push
roll
stos
xchg
jecxz
pop
jmp
fldl
sbb
in
lret
lahf
dec
cltd
mov
lock
push
pop
cmp
je
sarb
xor
repnz
cwtl
pop
ja
inc
imul
jbe
xchg
sbb
jbe
inc
push
popf
xchg
sbb
jo
cwtl
enter
jge
mov
cmpsl
sahf
jo
mov
ja
mov
movsl
lahf
jle
sub
je
mov
pop
push
lcall
mov
xchg
enter
adc
imul
xchg
imul
jnp
xchg
mov
xchg
pushf
sbb
jno
sub
pop
dec
clc
add
ljmp
rcll
or
rcrb
mov
xor
nop
enter
adc
push
testb
stc
push
hlt
sarb
pop
xor
xlat
sbb
sahf
lcall
and
out
aas
mov
dec
scas
out
js
cltd
push
mov
inc
push
sub
jns
mov
jecxz
jbe
scas
int3
push
adc
js
xor
inc
and
jg
roll
and
push
cs
sub
jnp
push
sbb
mov
inc
mov
jns
adc
adc
jp
adc
insl
adc
subl
enter
shr
outsl
jge
fisttpll
or
add
ss
mov
jo
adc
cmp
sti
push
xchg
insl
loopne
inc
repz
jns
shld
adc
push
ss
sub
outsl
push
dec
pop
cmc
loopne
xor
adc
into
pushf
dec
notb
orb
lcall
xchg
cmp
sub
test
xchg
jl
mov
mov
out
push
xchg
cmpsl
ljmp
repz
mov
sub
je
jmp
mov
insb
leave
sahf
stos
lods
insl
cwtl
xor
out
andb
jge
cmpsb
sti
jp
das
shll
xchg
insl
mov
mov
push
aad
fwait
scas
mov
je
sub
mov
arpl
jl
xor
loope
test
popf
mov
xchg
aam
lds
mov
or
mov
cmp
notl
xchg
or
cltd
inc
or
xorl
popf
fnstenv
addl
mov
pop
imul
inc
addr16
sub
add
cmp
lret
std
push
cltd
mov
clc
test
or
js
cmc
pop
pop
loopne
pop
data16
inc
lahf
push
aaa
jno
iret
std
xor
mov
test
decb
sub
lcall
mov
push
mov
mov
mov
xchg
into
movsl
mov
out
or
int3
xchg
sub
xchg
inc
xchg
add
adc
iret
nop
jnp
mov
ret
xchg
loop
sub
popa
xor
mov
pop
imul
icebp
outsl
arpl
ds
jle
sti
xor
pop
sahf
arpl
push
and
ret
bound
xlat
pop
lea
lret
dec
push
mov
sbb
adc
stos
pop
dec
into
loop
mov
sub
loopne
orb
les
loop
repnz
rcll
imul
ja
lcall
cmp
lret
xchg
pop
xchg
push
sub
pop
jbe
scas
lcall
shr
mov
loopne
push
rcll
std
xor
add
mov
gs
cs
xchg
adc
cmp
xchg
pop
shll
aam
addr16
push
push
mov
pop
data16
repz
add
sbb
jl
stos
jb
jp
pusha
fwait
adc
rorb
push
outsb
movsl
cmpsb
xchg
cmpsb
xchg
mov
jp
enter
imul
ss
jne
addr16
movsl
xchg
mov
fildll
push
sti
xor
shlb
test
push
mov
push
enter
inc
mov
mov
cltd
lea
jne
or
lods
sub
movsl
pusha
cld
insl
fimull
lods
xor
test
popl
imul
cmpsb
xor
push
scas
jae
xchg
inc
push
and
mov
xchg
jle
shlb
insl
dec
mov
mov
pop
sub
push
stos
fsts
imul
xchg
test
xchg
jae
in
insl
rcll
pushf
xchg
loope
in
filds
mov
mov
dec
sub
xchg
jbe
jmp
popf
push
scas
cltd
cwtl
movsl
imul
xchg
pop
ret
inc
xchg
push
dec
cmp
or
inc
xor
sub
mov
insb
xchg
push
inc
lcall
mov
mov
stc
in
push
sti
mov
xchg
cmp
xchg
dec
sbb
jbe
jnp
out
psubsw
mov
sub
xor
sub
mov
hlt
mov
inc
mov
adc
and
mov
ret
insl
push
repz
les
jb
test
or
xor
imul
sarl
mov
mov
xchg
mov
nop
dec
repz
fwait
dec
cmp
and
xchg
push
push
dec
cmp
push
jbe
push
repz
inc
push
inc
cmp
dec
pop
ret
dec
scas
or
test
mov
jge
dec
lods
popf
cmp
daa
mov
pop
addr16
clc
nop
or
jle
lahf
cmp
pop
push
adc
add
add
call
sar
push
mov
xchg
mov
push
nop
mov
mov
fcmovnbe
pop
inc
outsl
xchg
mov
insl
push
aad
cld
cs
mov
lahf
aam
push
push
push
sbb
mov
xchg
roll
jne
mov
push
testl
loopne
lcall
sbb
xchg
fimuls
inc
push
mov
push
ds
lcall
lods
nop
sbb
lods
pop
fidivs
pop
cmp
scas
mov
cli
addl
or
nop
insl
push
popa
mov
movsl
sbb
call
jno
stos
lcall
xlat
outsb
xchg
xchg
call
mov
mov
add
jne
dec
fadds
iret
outsl
imul
mov
mov
pop
fnstenv
call
nop
outsl
jno
pop
subb
add
insl
out
cmp
push
dec
pop
adcb
dec
xor
adc
out
push
pop
jmp
hlt
cltd
jp
mov
cltd
loopne
add
int3
inc
push
outsl
out
mov
dec
sub
test
loope
enter
dec
xchg
ja
jp
push
cmp
add
loop
iret
jp
dec
dec
jecxz
pop
xlat
dec
repnz
out
sbb
xlat
dec
lock
addr16
cmp
pushw
fwait
push
ds
lea
pop
icebp
pop
jb
sbbb
xlat
xor
dec
pop
jmp
cmpsb
cmpsl
les
xor
lcall
imul
movsb
loopne
xor
imul
and
clc
push
jns
adc
adc
pop
xchg
sbb
mov
mov
lret
dec
push
sti
jecxz
aam
xor
hlt
nop
dec
xor
or
filds
icebp
mov
stos
es
cld
adc
les
xchg
xlat
fdivrp
and
rorl
xor
enter
jmp
stos
and
push
and
mov
jne
pop
xchg
dec
repz
xchg
roll
mov
aad
sub
add
loope
into
xchg
roll
and
sti
inc
imul
mov
into
cltd
xlat
add
adcl
call
mov
sub
cmpsb
rcl
push
jp
ds
int3
stc
fistps
jns
dec
sbb
xlat
int
pop
sarb
addr16
xchg
mov
adc
ds
xor
mov
inc
adc
xchg
pop
popa
in
sub
stos
lock
push
sub
jns
repz
dec
rcrl
icebp
pop
test
cld
inc
sub
outsb
xlat
xchg
push
xchg
push
repnz
repz
xchg
push
add
mov
lcall
sti
pop
addr16
lods
out
sbb
sub
dec
mov
dec
pop
push
cmp
sub
inc
decb
jnp
sbb
lret
loop
arpl
inc
outsl
adc
rcrl
enter
cmpsl
dec
cmp
std
push
push
cld
pop
fs
dec
aas
sahf
pop
pusha
push
or
jmp
lahf
out
cmp
shrl
cltd
test
push
call
fildl
lock
dec
add
mov
out
aam
data16
inc
xchg
push
push
fsts
xchg
and
insb
cmp
mov
les
js
and
enter
mov
mov
push
bound
dec
add
nop
std
mov
std
fsts
mov
xchg
es
pop
mov
cs
roll
cmpsl
xor
sub
fistpl
int3
shlb
jp
xchg
mov
push
repnz
jo
mov
imul
cmpsl
les
imul
popa
xchg
xchg
xchg
or
xchg
cmp
cs
jb
adc
fwait
xchg
mov
shrb
pop
call
int3
cmpsb
cltd
xchg
mov
rcl
jns
inc
xchg
lea
pop
xor
jb
or
cmp
aas
xchg
fwait
ret
mov
cltd
addr16
xchg
mov
test
cwtl
sub
stos
imul
cmp
jp
inc
sub
mov
or
mov
sub
push
les
xchg
ja
inc
jno
jle
xchg
ret
fistpl
dec
cltd
lahf
push
or
push
mov
aam
inc
rcll
out
push
loope
cmpsl
les
ret
pop
adc
inc
xor
test
inc
into
xchg
mov
hlt
sub
inc
inc
mov
jecxz
push
ret
xlat
inc
bound
cmpsl
loope
push
xor
ljmp
jo
cmpsb
add
sar
shlb
jbe
adc
scas
add
dec
gs
sahf
into
cmovs
mov
iret
inc
jno
and
mov
sbb
xor
push
sbb
and
sbbb
sti
push
in
outsl
fsts
push
scas
jle
jnp
pop
cmpsb
cmp
lcall
enter
lret
ljmp
adc
lret
push
or
into
mov
push
loop
jnp,pn
f2xm1
jge
sub
ret
ficomps
jb
aaa
jno
push
aad
cmp
xor
cltd
jae
sbb
sbb
mov
jmp
mov
repz
xlat
je
inc
arpl
xlat
jnp
orb
into
shlb
idiv
std
pop
sahf
popa
pop
add
shlb
scas
popf
xor
les
push
orb
fidivrs
jmp
pop
and
and
adc
push
pop
pop
scas
pop
nop
jmp
adc
jb
stc
pop
lds
sbb
sahf
jle
push
and
filds
sbb
jb
jmp
aam
and
jg
adc
cmp
in
adc
cmp
and
rcll
dec
and
aaa
mov
inc
xchg
cmp
js
xchg
xchg
and
xor
or
xlat
sbb
mov
lcall
adc
outsl
pop
xchg
xchg
sub
lcall
cmpsl
les
imul
cmpsl
jl
xchg
or
xchg
je
add
mov
or
mov
xor
enter
push
and
pop
aas
push
sbb
shlb
outsl
popa
rcll
data16
cmp
scas
popa
pushf
lea
lcall
stos
call
and
mov
stos
cmpsb
in
insl
sub
sbb
cmp
sub
leave
imul
aam
ror
pop
neg
dec
test
enter
fidivs
cltd
iret
cs
sub
mov
push
je
call
mov
cltd
je
xchg
ljmp
out
add
int
and
scas
ljmp
int3
imul
ret
call
xlat
in
fs
dec
xor
ror
jl
bound
mov
rcl
or
push
mov
js
cmp
pop
sub
insl
mov
cltd
xchg
add
jg
loop
jnp
pushf
xchg
cwtl
pop
jno
xor
xchg
xchg
lock
mov
cltd
sub
push
adc
stc
sbb
dec
enter
push
xor
or
add
push
add
cmp
pop
out
sbb
dec
and
lret
mov
dec
hlt
clc
pop
pop
xor
mov
and
sbb
leave
into
test
xchg
push
nop
mov
sbb
sbb
push
mov
push
pop
push
inc
pop
in
cmp
dec
xchg
pop
sub
enter
or
push
fwait
pop
cmp
push
push
sub
pop
push
lret
mov
mov
xchg
leave
nop
cmp
sbb
push
roll
les
adc
mov
adc
xchg
imul
lcall
popf
addr16
outsl
int3
sahf
sub
movsl
pop
sub
or
lahf
jl
xchg
cmp
xchg
or
jae
imul
lret
lret
xchg
or
adc
mov
pop
add
xchg
inc
add
push
out
push
pop
xchg
pop
pushf
call
adc
xor
lcall
push
mov
adc
add
dec
push
fwait
sbb
hlt
mov
ret
pop
daa
sub
out
jle
add
push
inc
sbb
xchg
xor
ss
enter
lods
jmp
cmp
inc
out
add
mov
fisttpl
pop
or
pop
pusha
incb
jl
sub
jbe
mov
in
std
dec
push
push
decb
push
sub
stc
nop
lea
pushf
movsl
sbb
outsl
mov
or
inc
and
push
or
ja
cmpsl
and
xchg
xchg
pop
std
xlat
addr16
movsl
xchg
lahf
ds
inc
mov
nop
adc
stos
fidivl
jb
jae
cmp
or
in
pop
pushf
cmp
sahf
outsl
nop
push
sbb
push
scas
and
cli
lahf
cmp
jo
inc
call
inc
cs
push
cs
inc
std
jae
jne
push
testl
pushl
sbb
ss
mov
lock
lds
sbb
fdivr
cmp
or
mov
stos
push
mov
imul
lret
out
mov
leave
scas
cmp
pop
cmp
into
xor
pop
cmpsl
xchg
fisttps
jp
lahf
ss
mov
sub
mov
cwtl
fmull
les
cltd
add
insl
xor
gs
loop
pop
call
call
jecxz
pop
lcall
arpl
xchg
xchg
dec
out
jo
xchg
lcall
pop
scas
xorb
loope
push
out
push
lods
pop
jmp
ss
push
movsb
cmp
loope
call
xchg
pop
insb
xchg
mov
out
mov
nop
push
loopne
data16
adcb
fabs
addb
mov
pop
push
dec
inc
jae
orl
cwtl
aaa
test
lock
mov
fwait
bound
aaa
mov
outsb
jb
mov
xor
inc
inc
in
add
inc
clc
mov
rclb
jno
xchg
push
push
out
lret
lret
xchg
xchg
cs
subb
lcall
xor
or
aam
pusha
dec
add
pop
cmp
inc
sbb
clc
push
pusha
stos
lods
dec
push
ss
dec
repnz
hlt
mov
dec
sbb
movsb
mov
dec
aaa
xchg
push
daa
lea
outsl
dec
push
bnd
xchg
lods
das
push
test
data16
inc
inc
addr16
add
outsl
movsb
mov
push
mov
add
outsb
mov
scas
imul
xchg
mov
cwtl
outsl
shrl
cmp
or
cmp
pop
push
rolb
sahf
es
roll
mov
mov
jae
dec
subb
fwait
jae,pn
call
lds
jno,pn
push
sahf
arpl
cmp
lret
sub
scas
push
mov
mov
out
divb
insl
lds
and
out
cltd
or
repz
mov
inc
xchg
cwtl
scas
outsb
outsl
into
movsb
sahf
cld
add
mov
mov
mov
js
aas
nop
jae
fbld
cwtl
push
push
inc
mov
xchg
aaa
sub
outsb
adc
das
iret
lea
js
push
out
js
fwait
xchg
sbb
push
bswap
lcall
imul
mov
push
fisttps
pusha
das
cmpsl
into
mov
iret
xchg
xorb
inc
xor
jecxz
mov
pusha
clc
xchg
jl
cmpsb
sarb
mov
sub
lea
lahf
cmpsl
push
sub
sub
mov
subb
lcall
and
notb
stc
scas
jnp
insl
nop
loop
push
add
inc
mov
jb
sbb
lcall
sbb
lret
push
ror
cmp
pop
dec
rcr
dec
xor
repnz
adc
inc
sbbb
js
dec
rclb
mov
xor
and
dec
adc
pop
mov
rcr
cmp
mov
dec
jmp
xchg
aaa
lret
orl
sbb
shlb
stos
inc
pop
and
xchg
ja
xchg
push
fs
or
sbb
dec
mov
mov
inc
jp
ret
sub
fidivl
xchg
dec
and
mov
leave
dec
lcall
fcmovne
syscall
out
idivl
notl
and
sbb
adc
mov
jbe
je
mov
mov
ja
push
clc
mov
aas
lahf
cli
aaa
ja
cmp
push
cmp
nop
cli
stos
nop
into
xchg
push
lods
mov
jp
in
dec
sbb
inc
push
in
inc
outsb
aam
xchg
add
push
fbstp
mov
lods
mov
rclb
stc
sub
jp
mov
cld
mov
fwait
xchg
cwtl
xor
jl
inc
mov
pusha
ja
mov
xchg
loope
cltd
xchg
xchg
fstpt
or
nop
ret
shlb
push
loope
dec
push
int3
xchg
sub
outsl
or
adc
mov
into
lea
dec
dec
fcomps
rolb
lea
cwtl
lcall
ret
mov
cmpsl
dec
dec
lahf
mov
sub
adc
cmp
ret
testl
mov
mov
and
mov
into
mov
lock
stc
rolb
or
xchg
dec
inc
sub
mov
ja
or
bndldx
jmp
adc
aaa
sbbl
mov
js
mov
mov
dec
xchg
cmpl
test
enter
sbb
cld
loopne
fs
mov
mov
fcomps
sub
pusha
push
jbe
or
sbb
js
test
push
xlat
inc
testb
lret
mov
jl
enter
cmp
or
lcall
popf
adc
outsb
cmp
push
jp
adc
push
ss
mov
es
xlat
dec
pusha
orl
push
sbb
inc
ret
or
xor
dec
setle
jmp
dec
test
fwait
and
mov
add
mov
shrb
mov
cmc
mov
pop
test
xchg
jnp
jmp
ret
push
jle
or
pusha
cltd
mov
mov
rorl
or
popf
pop
test
mov
push
sub
movsb
jmp
mov
mov
adc
sub
cmp
add
sbb
lret
sub
mov
mov
sub
pop
push
mov
and
dec
lods
jle
jge
inc
add
ror
lcall
int
fadds
pop
stos
xchg
add
pop
cmpsb
dec
pop
xor
test
add
ret
aad
andl
cs
fmull
sub
nop
pop
mov
push
cld
adc
mov
jmp
les
call
dec
cmc
imul
xchg
es
repz
inc
jl
sub
pusha
call
mov
mov
cmc
pop
adc
adc
cli
cwtl
push
sbb
cld
pop
xor
jp
sbb
mov
shrl
jae
adc
pop
add
ret
loop
shr
jns
mov
jbe
push
push
test
pop
cmpsl
ror
test
sbb
sub
mov
pop
imull
cmc
shrl
outsb
mov
pusha
inc
jne
cli
mov
xor
pop
mov
std
das
cli
mov
ret
imul
xchg
adc
adc
ja,pt
dec
xchg
mov
jmp
loopne
mov
loop
add
push
leave
xor
lods
xchg
das
fsubrs
insl
xchg
jp
mov
fs
mov
enter
lcall
push
imul
xor
add
mov
inc
fiadds
mov
mov
push
push
dec
arpl
jo
stos
pop
lds
dec
loop
add
sub
repz
jge
sbb
xchg
mov
in
int
mov
push
xor
jl
jnp
mov
je
sub
sbb
into
je
add
insl
stc
shlb
fwait
movsb
insl
scas
popf
adc
imul
cmp
add
mov
enter
lods
sbb
pushw
mov
fs
dec
pop
sub
inc
pop
sub
sbb
xchg
mov
pop
pop
xor
outsb
push
movsl
ss
push
or
roll
or
push
adc
fwait
outsl
push
cs
roll
mov
pop
cmp
cmp
cmp
sub
nop
pop
cmp
cmp
jns
dec
sbb
push
nop
aas
inc
outsl
cmp
js
pushf
or
rcll
mov
sbb
sbb
insl
stos
test
pop
scas
xlat
inc
and
pop
test
gs
sbb
into
out
test
enter
dec
imul
cmpsb
insl
jmp
mov
lret
xchg
or
loop
rolw
mov
mov
lret
pop
cld
or
lcall
sarb
jge
jl
addl
js
jg
or
jl
andl
hlt
lret
cmp
lahf
push
shrl
dec
mov
mov
scas
xchg
roll
cli
sarb
outsl
xchg
pop
cmp
cmp
fstp
xchg
movsb
or
or
movsb
cmp
hlt
push
xchg
aas
inc
imul
cltd
xchg
xor
lods
mov
xchg
pop
cmp
mov
sbb
mov
xchg
aas
inc
imul
cltd
xchg
xor
dec
rol
repnz
push
pop
lcall
mov
enter
add
cmc
push
mov
cli
incb
inc
jnp
aaa
or
jns
push
js
arpl
mov
jnp
jns
jnp
add
cwtl
js
pop
xor
popf
push
popf
push
ret
loop
fdivr
jns
pushf
rcrl
scas
out
mov
mov
xchg
lahf
xchg
cwtl
test
mov
or
out
pop
xor
das
cmpsl
or
xor
adc
mov
outsl
adc
bswap
xchg
push
sbb
inc
mov
pushf
jl
xchg
xorl
pop
sbb
and
mov
mov
popf
jl
xchg
dec
iret
outsl
or
flds
xor
mov
lcall
pop
push
xchg
xchg
xchg
sub
dec
enter
adc
pusha
fldcw
mov
mov
cmp
mov
jno
dec
cld
addr16
mov
jmp
int3
dec
xchg
mov
jmp
int
outsw
mov
and
pushf
jp
into
add
or
outsl
mov
mov
scas
dec
push
mov
cwtl
lea
sahf
int
cmpsl
mov
int
lret
mov
lcall
push
imul
and
pop
ret
push
jae
shlb
push
rcrl
add
pop
and
enter
iret
ja
fstpl
pop
loop
imul
sbb
call
and
insl
fstl
test
nop
imul
fisttps
mov
push
push
mov
sahf
iret
xchg
sub
fsts
xchg
into
stc
shll
sahf
sti
enter
cwtl
nop
cmc
lea
mov
into
jno
or
imul
xor
sbb
cmp
fildll
dec
add
bnd
jne
mov
int
xchg
sahf
and
mov
inc
sub
jno
cmpsl
lea
and
sbb
movsb
lea
or
imul
imul
mov
sub
jmp
xor
inc
sbb
or
iret
imul
jb
scas
jno
pusha
xchg
jb
or
jmp
xchg
arpl
sbb
push
sbbb
cmc
or
sbb
insl
mov
mov
lret
push
push
int3
ja
or
push
outsl
or
movsb
shlb
ja
or
hlt
sbb
push
and
fsubrl
outsl
push
lcall
imul
sahf
push
in
sahf
out
inc
jne
xchg
je
int
push
test
jge
push
int
or
ljmp
adc
fstpl
xor
in
jb
in
imul
imul
cmp
cltd
enter
fstpl
jl
xchg
mov
cmp
fstl
dec
popf
jle
adc
jbe
imul
cmpsb
xor
js
sarb
sub
iret
mov
mov
mov
fwait
mov
xchg
cmpsb
cwtl
mov
les
ret
mov
int3
lea
push
or
mov
jl
mov
lods
xlat
push
pushf
fldt
mov
xor
daa
mov
adc
iret
outsl
sahf
dec
mov
push
lahf
test
shlb
ret
push
or
movsl
insb
push
mov
push
es
jno
mov
cmpsb
jb
imul
fbld
cmp
xchg
cli
les
mov
outsb
sbb
mov
sub
jge
fwait
xor
cwtl
mov
push
xchg
cli
fnclex
lcall
sub
jge
js
nop
int
cltd
xchg
add
mov
nop
cmp
mov
xor
and
fists
ljmp
jne
lcall
push
inc
push
dec
js
adc
mov
movsl
test
fstl
cmp
dec
cmp
push
lret
mov
fcoml
inc
push
movsl
cmp
sti
jle
cmp
neg
movsb
movsb
rolb
das
pop
pop
hlt
ror
movsb
psrlq
loop
imul
xchg
xchg
push
jg,pn
push
fsubr
and
mov
mov
push
arpl
cmpsb
fwait
loopne
xor
add
xchg
mov
mov
les
test
jecxz
jmp
loopne
dec
jge
add
mov
icebp
lcall
imul
fcmovnb
lcall
mov
and
ljmp
jns
das
sti
cmp
jne
sbb
repz
iret
shlb
clc
jns
mov
adc
mov
mov
ds
clc
dec
loop
fmull
cmp
arpl
mov
lahf
jno
xor
fmul
daa
mov
xor
mov
mov
popf
aam
fadd
inc
jo
lea
push
inc
mov
fldl
nop
push
jecxz
cwtl
fsubrs
js,pt
loope
mov
xchg
mov
xchg
cli
pop
mov
ljmp
icebp
rclb
xor
dec
stc
out
fwait
sub
pusha
iret
stos
push
fildll
push
inc
and
cmp
add
sub
pop
fisubl
aaa
js
jo
or
lahf
push
jo
mov
sub
enter
mov
cmp
xchg
inc
adc
pusha
into
jp
lahf
test
sub
mov
or
xchg
pop
lahf
pusha
in
xlat
shrb
sbb
inc
int3
or
xchg
mov
mov
mov
mov
mov
fsubrs
js
arpl
int
mov
dec
orb
mov
inc
sbb
mov
adc
dec
pop
lcall
sub
lods
es
aad
jne
cltd
push
xchg
mov
popf
faddl
call
cmpsl
hlt
xchg
mov
jb
push
xstore-rng
cmpsl
test
into
sahf
adc
mov
out
xchg
pop
cwtl
stos
and
mov
fidivl
nop
mov
mov
ret
inc
or
jns
xorb
xchg
jg
pushf
add
push
ret
xchg
adc
adc
inc
mov
hlt
out
cmp
movsb
jmp
insb
repz
cmp
out
mov
and
test
jne
xor
stos
iret
mov
nop
xchg
xchg
add
sub
add
add
cmp
popf
fwait
cmp
test
mov
add
sbb
dec
mov
lcall
jb
pop
xchg
jg
icebp
leave
out
sub
ror
xchg
aas
jb
gs
and
lret
bnd
lock
repz
add
loop
lock
inc
xchg
xchg
jg
cltd
adc
leave
fldcw
or
sahf
or
mov
outsl
outsb
popf
mov
dec
test
jle
or
iret
xchg
insl
sbb
cmp
cmp
call
into
pop
fisubrs
mov
lods
cmp
mov
dec
pop
mov
je
out
xor
sbb
in
mov
dec
pop
sub
mov
in
cld
dec
pop
sub
mov
adc
repz
push
arpl
inc
cltd
fldt
sub
int
xchg
or
jge
punpckhwd
fimuls
lahf
lea
push
mov
mov
test
jmp
popf
dec
inc
jle
insl
mov
or
pop
or
mov
jl
lods
sub
bswap
or
jae
por
adc
sti
or
mov
aad
xchg
push
xor
mov
inc
or
bound
xor
mov
stc
arpl
push
pop
imul
push
std
or
add
inc
add
push
out
jge
push
imul
dec
shlb
insl
pop
cmp
fcmovnu
in
ss
sub
mov
addr16
mov
lods
sub
sbb
repz
out
dec
mov
jge
jg
cltd
rol
ds
testl
imul
scas
xor
outsb
into
ret
arpl
shr
sbb
ljmp
add
aas
mov
pop
int3
adc
mov
xor
adc
cmp
addl
jae
stc
push
cmp
mov
aas
pushf
les
push
or
push
dec
dec
inc
pop
inc
cmpsb
mov
lcall
xlat
pop
adc
les
push
mov
pop
fbld
lcall
sbb
aam
mov
mov
mov
jae
xchg
sub
xchg
or
mov
mov
xor
xchg
jne
or
adc
mov
mov
lea
stos
push
sub
insb
test
into
mov
inc
daa
shll
enter
addl
mov
aaa
push
mov
lds
mov
mov
mov
lods
and
cld
pop
mov
cmpsl
add
cs
adc
mov
mov
nop
ja
clc
adc
jb
mov
mov
xor
dec
inc
out
xchg
sbb
mov
cs
pop
cmp
mov
mov
jo
mov
daa
test
push
jle
jo
cmc
inc
idiv
les
hlt
into
lea
stos
add
data16
add
fidivl
loop
shrl
std
or
cmp
cmp
lret
xor
xor
sub
mov
dec
inc
jb
inc
and
xchg
pop
aas
lret
lcall
sub
ss
mov
or
dec
add
fidivs
or
repz
mov
mov
fcompl
pop
mov
loop
arpl
inc
imul
les
stc
pop
cmp
clc
or
loop
mov
test
push
sub
mov
push
out
xor
jg
cwtl
push
in
pop
mov
pop
lds
mov
int3
out
xchg
inc
jecxz
mov
dec
xchg
cltd
mov
cmp
out
bound
cmpsb
cwtl
sbb
fs
bound
mov
lods
or
mov
jmp
test
cmc
add
pop
test
add
lahf
jns
push
je
mov
inc
movsl
insl
cmp
dec
pushf
hlt
ss
data16
out
mov
aaa
test
ds
mov
mov
xor
jl
mov
fidivs
insb
xchg
jmp
xor
fwait
aam
out
pop
mov
add
stos
mov
mov
scas
sub
arpl
std
repz
dec
mov
xchg
push
pop
outsb
sti
pop
mov
lds
and
jns
stos
imulb
movsb
sub
inc
sub
daa
xor
cmp
adc
and
inc
push
sub
dec
aad
sbb
out
gs
ds
inc
xchg
repnz
pop
mov
push
add
sbb
sbb
pop
test
and
lods
jle
cmc
dec
mov
arpl
mov
add
xor
mov
les
das
scas
and
xchg
push
mov
jl
or
shll
cmp
jmp
push
out
sbb
or
pop
pop
jg
pop
mov
pusha
dec
cmp
xchg
adc
ds
addr16
mov
inc
jge
pop
adc
jns
ss
insb
add
mov
inc
mov
out
cmp
mulb
xchg
stos
aas
mov
insb
mov
lret
push
jecxz
or
scas
mov
xor
pop
dec
je
pop
inc
or
in
mov
fadd
cmpsb
jge
in
xchg
adc
adc
fnstcw
inc
sahf
pusha
testb
repz
xchg
popl
std
sbb
lds
mov
push
or
test
mov
in
popf
cmp
jl
push
arpl
mov
lret
mov
mov
stos
mov
stc
dec
mov
jge
rcll
adc
xchg
out
outsb
adcl
lret
test
jns
xchg
stc
ss
add
stos
mov
sub
push
cmpsb
xor
push
cmp
sbb
mov
js
mov
outsb
orl
sub
inc
fcoms
mov
push
sub
push
loop
xchg
push
out
mov
xor
mov
pop
mov
ljmp
pop
push
add
inc
rorb
push
mov
xor
mov
inc
jae
inc
mov
inc
into
sub
sub
push
mov
xlat
pusha
pop
xchg
jmp
fidivrl
lods
scas
outsb
lret
mov
dec
jae
push
xor
mov
cmp
idivb
push
cmp
arpl
daa
mov
sbb
loopne
aad
pop
add
mov
xchg
std
mov
mov
pop
lret
push
shrl
es
jge
les
loop
push
sahf
or
jmp
enter
jne
cmpsb
dec
pop
xlat
lret
mov
test
aas
sbb
aas
inc
pop
pop
mov
inc
inc
lcall
sub
dec
out
fimuls
shlb
mov
mov
or
add
lods
and
mov
in
inc
hlt
jmp
inc
xchg
stos
das
add
data16
ljmp
mov
dec
xorl
jmp
test
fwait
pop
cmp
mov
adc
mov
mov
imul
inc
jno
stos
xchg
shll
mov
adc
inc
into
out
pop
addr16
xchg
mov
je
xor
push
ljmp
dec
inc
mov
push
push
out
bndldx
mov
lret
shrb
or
insb
divb
daa
jb
mov
into
mov
mov
pop
clc
adc
int
inc
jne
sbb
inc
cmp
decb
ja
pop
mov
fwait
add
stos
aam
icebp
andb
sahf
lds
mov
int3
add
movl
lds
jbe
pop
sbb
mov
jp
pop
js
dec
je
lcall
or
cmp
mov
data16
andb
sti
inc
inc
mov
repz
pop
and
addr16
fcomps
xchg
jecxz
les
lock
cmp
in
pop
shl
mov
lds
inc
popl
stos
cmp
mov
repnz
decb
inc
vmulsd
mov
mov
bound
push
push
inc
clc
lret
in
sarb
jae
inc
mov
sbb
dec
bound
gs
cmc
mov
push
sbb
mov
test
int3
xor
fs
lods
lcall
inc
testl
cmp
cmp
mov
sbb
inc
xchg
jb
pop
and
inc
pop
jne
cs
mov
lods
or
mov
pop
daa
aad
push
hlt
mov
mov
dec
inc
adc
push
cmpsb
cmp
cmp
jp,pn
mov
and
or
setae
push
xor
mov
aad
sbb
stos
mov
roll
movntq
add
in
cmp
sbb
mov
lcall
decl
mov
xor
pop
mov
mov
popa
pop
out
mov
les
mov
ss
xlat
cwtl
add
pop
xchg
mov
pusha
in
jbe
sub
addr16
jg
lds
leave
push
loop
sub
arpl
stc
clc
push
js
mov
idivb
sbb
fcoml
xchg
and
jb
push
xor
mov
mov
arpl
pusha
sub
pop
aas
jp
test
xchg
lods
lods
inc
dec
stos
in
arpl
popf
daa
mov
loop
xchg
cmp
cld
les
pusha
jmp
sbb
inc
ja
fimull
sbb
jo
stos
in
insb
adc
incl
movsb
daa
sub
ljmp
xchg
jbe
mov
and
stos
adc
dec
pop
mov
scas
cmpsl
test
jle
inc
mov
fs
inc
ret
test
mov
mov
xor
scas
pusha
shr
arpl
std
cmc
mov
ds
push
mov
icebp
inc
pusha
xor
and
pop
lods
inc
cld
leave
jl
idivl
add
inc
lds
xchg
inc
movsl
pop
lods
or
push
jmp
pusha
dec
and
pop
mov
leave
push
xchg
dec
cld
adc
mov
mov
xchg
xchg
mov
lret
dec
loope
xor
adc
in
sbb
jp
push
xchg
or
xchg
sub
hlt
fdivrs
outsl
inc
pop
fstps
inc
inc
sub
lret
jbe
fwait
inc
jae
cmc
das
andl
insl
pop
mov
cmpsl
and
lock
mov
mov
lods
fmull
lret
sbb
mov
lahf
incb
mov
pop
xor
aad
mov
inc
imul
arpl
add
mov
pop
lret
movsb
cld
addl
sub
stc
movsl
cmp
icebp
sbb
cmc
xchg
inc
fcmovnbe
fldpi
iret
pop
test
test
xor
inc
sbbb
pop
adc
and
push
loop
sbb
push
lods
push
mov
dec
push
movsb
xchg
sub
imul
out
mov
and
movsb
and
iret
push
cmp
loopne
loope
fisttps
movsl
std
cld
add
mov
inc
jmp
out
mov
cld
dec
sub
outsl
mov
fs
inc
test
rcl
std
mov
int
mov
mov
in
scas
test
mov
test
mov
andl
xor
idivb
inc
sub
inc
loopne
pop
push
out
mov
mov
out
jp
xor
repz
cwtl
mov
pop
mov
movl
lahf
mov
movsb
inc
out
test
xchg
xor
js
cmp
mov
pop
xor
cwtl
lret
inc
cmc
mov
add
pushf
pop
insb
cli
in
cli
mov
inc
rcrb
cmp
test
inc
ret
cmc
jecxz
loope
js
mov
pop
inc
in
xchg
mov
mov
fnstsw
les
xor
sbb
mov
jbe
push
hlt
movsl
dec
insl
or
or
std
and
arpl
cltd
subl
cwtl
push
jg
lods
push
out
inc
mov
fwait
std
xchg
cmp
mov
sub
test
out
dec
movsb
loop
mov
fwait
mov
adc
aam
xor
mov
add
mov
and
pop
inc
roll
sbb
aaa
sbb
in
jne
xchg
push
sbb
xchg
scas
xor
test
repnz
stos
fistpl
dec
shrl
fmull
test
lock
mov
incl
popa
jns
bound
sub
loopne
enter
mov
cmpl
cmp
movsl
js
iret
je
and
mov
rorb
pop
loope
test
les
aaa
mov
lods
mov
out
aad
sbb
pushf
or
mov
cmpb
mov
aad
or
fstl
scas
fimull
fsubs
push
xor
lret
es
stos
xchg
xchg
aad
and
cs
stos
pop
ljmp
rorl
pop
mov
fimuls
les
mov
xor
imul
les
xor
xor
addr16
mov
js
pop
loopne
test
pusha
idiv
mov
mov
inc
sub
cli
cmp
push
lret
lea
aaa
lea
or
jle
ss
pop
ret
xor
sub
mov
adc
jns
jecxz
gs
cli
das
stos
add
jbe
xor
pop
pusha
in
mov
jb
cwtl
xchg
movsb
pushf
leave
cmp
fdivl
mov
rcrl
cmp
gs
addb
pop
ja
pop
and
in
or
adc
pop
into
mov
mov
addb
pop
pop
idivb
mov
pop
mov
pop
cmc
adc
add
push
mov
les
pushf
and
mov
push
or
push
ret
fcoml
sub
sbb
out
jns
mov
lret
rol
xor
inc
or
inc
mov
in
rorl
inc
mov
bound
mov
stc
sbb
clc
mov
cmpsb
inc
pop
add
aaa
popa
add
dec
fildll
outsb
push
test
aas
inc
jns
lahf
mov
mov
lret
inc
lock
dec
jno
dec
and
sbb
into
xchg
mov
push
loop
mov
adc
insb
test
fucomp
mov
dec
xor
stos
inc
aaa
jne
jmp
or
adc
or
mov
adc
jp
scas
mov
jns
gs
and
shrb
aas
xchg
dec
jnp
inc
ss
mov
and
loope,pt
fs
sti
pushf
xchg
mov
mov
xchg
dec
sub
stc
lret
and
lds
xor
call
pop
mov
xchg
lea
popw
lret
mov
in
dec
jo
dec
out
rclb
cli
xor
xchg
xor
lods
stos
aam
mov
testb
clc
mov
in
push
pop
scas
xor
inc
pop
out
sbb
dec
pop
mov
adc
xchg
adcl
xchg
lret
sub
mov
mov
loope
mov
dec
leave
adc
shll
fwait
xor
dec
inc
pop
stos
xchg
cmc
popf
test
lret
repz
mov
pusha
mov
out
bound
les
jne
add
icebp
inc
mov
out
mov
cld
dec
inc
or
dec
cmpsb
fdiv
lret
gs
jmp
mov
int3
xchg
inc
inc
mov
or
mov
mov
lods
fs
add
test
fbstp
fsubrl
jns
mov
add
in
lea
or
xor
mov
cmp
test
xchg
push
pushf
test
pop
mov
mov
imul
into
push
or
mov
int3
xchg
fildl
pop
decl
mov
xchg
lds
and
add
mov
or
shll
test
mov
or
out
loope
mov
mov
pusha
ss
dec
mov
inc
jae
stos
aas
push
push
add
adc
arpl
mov
addr16
sar
adc
push
jp
aas
xchg
int
inc
mov
cmp
daa
mov
lock
cmp
fwait
repnz
addr16
mov
imul
jns
rorl
sbb
mov
and
inc
jbe
push
movsb
imul
mov
aaa
xchg
jg
outsb
hlt
or
inc
loopne
add
mov
pop
into
or
pop
daa
shll
loop
or
je
or
shld
mov
mov
test
mov
mov
dec
push
js
mov
inc
adc
or
inc
add
mov
clc
je
cmp
imulb
mov
sub
mov
test
gs
shll
int3
inc
mov
or
add
out
arpl
sub
inc
push
sbb
dec
lret
imul
mov
cmc
in
xor
push
in
push
cmp
arpl
hlt
xchg
xor
pop
dec
or
dec
mov
lret
lock
jmp
sub
cmpsl
mov
movsl
in
leave
jne
xlat
add
lea
push
call
ds
jae
mov
jno
hlt
jecxz
mov
lret
and
cmpl
lds
loop
sbb
push
push
xchg
xor
jl
fcoml
mov
push
or
add
sub
and
pushf
movsb
lahf
notl
fldt
cmp
add
mov
pop
pop
cwtl
cwtl
stc
or
dec
inc
cmp
dec
sub
aad
fdivr
mov
inc
mov
xor
mov
add
clc
fs
cli
call
mov
inc
mov
stc
or
push
lret
cmp
xor
daa
inc
movl
loopne
jmp
negl
xchg
push
stos
dec
xor
ss
cmp
es
loop
pop
xor
pop
loop
or
cmp
repnz
add
mov
daa
push
mov
lahf
sbbb
mov
shll
pop
add
mov
aaa
in
loop
push
arpl
insb
jp
mov
mov
movsb
pusha
mov
xor
pop
mov
testl
mov
aaa
movsb
insb
aad
sahf
stc
or
mov
push
sar
pop
push
repz
addr16
mov
in
cmp
lret
movsb
je
lea
movsb
push
int3
adc
add
inc
mov
mov
fisubrs
mov
and
ljmp
in
imul
divb
inc
in
fnstsw
xor
sbb
out
push
sti
ss
mov
mov
mov
clc
sub
daa
repz
mov
fs
fnstsw
mov
movsb
adc
neg
jbe
add
sti
call
mov
fwait
push
ljmp
aaa
jge
dec
ror
sub
push
in
jg
arpl
xor
jae
and
loop
test
pop
test
ret
jmp
ds
mul
push
xor
cld
add
mov
xchg
ss
jmp
movsl
out
inc
lret
les
add
cmp
or
test
adc
jae
or
inc
and
pop
ljmp
push
test
mov
mov
cmpsl
and
adc
pop
fnstsw
add
jno
sbb
mov
loop
or
jecxz
iret
aad
add
mov
lret
out
xlat
fucomi
test
mov
push
arpl
xlat
cmp
cs
inc
int
add
movsl
inc
cmp
xchg
fwait
xor
aaa
fs
xchg
xchg
out
jo
in
loop
push
cmp
mov
or
xchg
out
dec
aas
daa
lcall
ss
bound
dec
mov
xchg
jmp
inc
xchg
pop
adc
pop
out
cmp
popl
arpl
repnz
sbb
ljmp
sub
ds
mov
adc
jle
fcomi
ljmp
iret
arpl
jo
mov
mov
inc
popf
cmc
cmp
mov
iret
xor
push
stos
mov
hlt
lock
pusha
xchg
pop
pop
or
sub
iret
adc
in
push
mov
cmp
mov
sub
mov
arpl
sarb
sbb
repz
pop
inc
je
jmp
iret
test
xchg
jl
aaa
pop
pop
sub
pusha
sub
mov
fwait
add
jl
punpcklwd
mov
lret
es
mov
lods
dec
outsb
out
sbb
les
inc
mov
or
jmp
inc
add
sbb
sarb
mov
iret
and
add
dec
in
scas
add
push
or
mov
aas
adc
sub
inc
mov
adc
fwait
mov
inc
or
mov
scas
inc
mov
bound
popa
in
mov
inc
add
fisubrl
pop
les
aas
inc
rol
jb
or
test
pop
lds
mov
add
mov
xchg
push
pop
pop
cmp
inc
cmpsb
push
or
cs
push
repnz
dec
iret
mov
cltd
cmp
or
xor
gs
movsb
and
jns
ret
les
cmp
leave
daa
dec
das
aad
in
mov
push
les
testl
pop
cld
or
cmp
daa
inc
xchg
or
repnz
mov
sar
push
addr16
sarl
cli
shl
dec
mov
outsl
pop
mov
dec
jae
inc
addr16
push
jo
insl
pop
aaa
inc
mov
js
pop
sub
xchg
mov
inc
shr
pop
and
mov
cmp
and
sub
mov
out
lods
mov
pop
lret
mov
sbb
push
mov
imul
scas
mov
jge
jl
fwait
dec
mov
pop
or
mov
rolb
aas
test
arpl
ss
inc
incl
xchg
fs
pop
xor
inc
and
adcb
cmc
cmp
sbb
mov
push
cmp
inc
repz
sub
mov
sub
push
inc
xchg
dec
repz
inc
push
int3
sub
add
jbe
addl
test
or
rcl
mov
mov
cltd
xor
imul
or
jl
xchg
and
lcall
xchg
loop
mov
jl
nop
xchg
into
xchg
jae
sbb
lahf
into
mov
shlb
mov
xchg
mov
mov
and
jbe
icebp
mov
sahf
test
jge
jne
into
fiadds
in
push
lods
jnp
mov
cmpsb
mov
pop
xor
cmpsb
push
movsb
pushf
jl
lcall
outsl
mov
jg
in
xchg
psubusw
inc
mov
faddp
push
rorb
inc
rcrb
imul
mov
mov
test
dec
pop
scas
sti
cmp
scas
in
push
fcoms
fidivrs
mov
mov
mov
lods
lods
mov
cmp
fdivrs
mov
push
daa
test
hlt
fcompl
jns
mov
lahf
cwtl
roll
xchg
ror
xlat
out
xchg
repnz
pop
mov
imul
mov
movsl
xchg
int
or
imul
mov
add
sarl
cwtl
lret
cwtl
mov
push
mov
mov
int
push
lds
mov
aad
mov
test
mov
sahf
push
xchg
pop
mov
or
mov
aad
add
nop
mov
rcll
leave
cmp
mov
call
mov
push
jb
jmp
cmp
mov
fmul
jnp
cli
xchg
test
mov
inc
sbb
in
cltd
nop
enter
adc
aam
mov
xchg
xchg
mov
fcmovne
and
nop
outsb
shr
pushf
sub
mov
mov
jnp
ficompl
jb
sbb
lret
cmp
mov
sbb
sahf
jbe
mov
xchg
cwtl
mov
js
int
sub
loope
inc
dec
lock
mov
sbb
fists
or
scas
cmpb
push
fidivrl
mov
nop
stos
mov
and
sti
and
adc
mov
lcall
mov
mov
enter
test
scas
dec
mov
ret
test
jp
add
mov
jge
push
ss
test
pop
dec
repz
jbe
cwtl
jecxz
jge
jp
mov
rol
mov
xchg
scas
xorl
add
stc
mov
push
lcall
push
xor
jnp
mov
loop
aad
inc
add
push
jg
xor
xorb
mov
and
mov
or
jae
out
or
int3
in
mov
mov
loop
mov
andl
add
jne
leave
mov
ret
outsl
jae
xorb
and
xor
pop
fisubrs
into
insl
lods
mov
sub
inc
lcall
inc
add
js
jp
xorl
std
lods
xchg
ljmp
incl
jp
lods
jle
pop
sbb
imul
jnp
dec
jb
fistpll
js
push
jl
dec
or
cmpsb
cmpsb
jp
xor
mov
into
dec
iret
sub
cld
testb
mov
cmpb
js
loope
idivl
xor
sub
jg
imul
adc
add
xor
sub
icebp
imul
inc
sarl
out
mov
lods
movsb
iret
push
jb
jmp
sahf
out
jno
loop
call
popf
rcrb
mov
loop
mov
cmp
xchg
sbb
xor
xchg
clc
xor
mov
mov
pop
or
mov
pop
mov
xchg
mov
cmpb
sub
xchg
inc
jb
jo
jp
aad
fisubrl
jnp
icebp
jmp
addb
fmul
add
pop
testb
insl
test
iret
pop
pop
or
mov
call
push
jmp
and
push
adc
dec
inc
mov
mov
out
nop
scas
pop
xor
push
nop
or
xor
arpl
scas
sbb
xor
call
lods
out
adc
xor
jbe
lods
xchg
mov
les
jnp
mov
jno
fwait
cli
sbb
mov
adc
cmp
pop
pop
mov
dec
ret
add
lret
repz
mov
jno
dec
stc
lcall
jbe
call
inc
pop
sub
mov
xchg
sub
stos
inc
pop
xor
mov
stc
int3
inc
inc
mov
rcrl
mov
inc
in
adc
inc
or
jns
leave
mov
popf
xchg
fxch
pushf
test
fdivrs
sbb
jmp
mov
jge
sub
sbb
into
fimuls
shrl
mov
sub
scas
movsbl
decl
das
mov
lods
aas
mov
bound
inc
dec
pop
cmp
cmp
aaa
dec
pop
xor
xor
js
mov
das
dec
pop
sub
sub
push
push
mov
iret
imul
sbb
test
enter
popf
mov
jmp
stc
outsb
ljmp
sub
jle
mov
call
mov
mov
mov
sar
fisttpll
push
or
xchg
mov
xor
shl
lods
cmp
xor
shll
mov
and
add
xor
adc
and
mov
push
popa
xor
adc
loopne
rclb
lock
pusha
xor
cmp
mov
sbb
mov
gs
nop
aaa
jecxz
mov
jge
or
sub
les
xchg
ljmp
addl
push
movsb
dec
sub
cmp
adc
or
xchg
nop
loop
add
icebp
ds
inc
in
leave
sub
data16
and
sub
xor
or
xlat
js
aad
shl
inc
test
xor
mov
jns
mov
movsl
pop
sub
and
rorl
fldt
cmpsb
repnz
cmp
js
xor
mov
mov
daa
add
and
adc
jge
stos
fwait
ss
mov
shlb
dec
leave
test
cmp
andb
in
int
push
mov
mov
adc
mov
mov
mov
xor
and
fwait
jg
jns
lret
jp
out
lahf
repz
dec
stc
xchg
mov
lds
jbe
adc
out
sbb
mov
cmc
xor
loopne
out
jno
popf
das
dec
cmp
inc
pusha
mov
jbe
in
push
mov
pop
sbb
movsl
jecxz
fcompl
movl
mov
adc
nop
mov
pushf
subl
pop
cs
mov
ja
mov
pushf
push
push
jp
jge
inc
mov
mov
fwait
inc
das
subb
or
test
out
adc
push
fisttps
pop
loope
mov
jbe
out
mov
xor
xor
sbb
and
jmp
mov
cld
adc
nop
xchg
xor
cmp
aas
xor
cmpsl
arpl
popa
jge
movsl
mov
lods
lea
mov
out
out
jne
rorb
movb
mov
call
mov
mov
pop
popa
stos
push
mov
push
clc
sbb
pop
sahf
test
fstpl
mov
jp
pop
pop
jns
in
dec
repnz
scas
jne
jno
pop
mov
inc
mov
mov
dec
sub
xlat
inc
jnp
cld
mov
xchg
lea
xlat
test
dec
sub
inc
xor
mov
pop
inc
jns
das
push
sbb
repz
in
cmp
adc
jo
je
mov
xchg
in
in
test
adc
out
pop
xchg
sub
or
mov
xchg
and
pop
lret
push
dec
lea
or
sti
xchg
jg
rorl
mov
stc
inc
pop
push
mov
mov
push
loopne
ficoms
mov
jmp
enter
lret
out
mov
gs
movsb
or
mov
mov
sub
cmp
push
pop
js
push
or
ss
mov
or
sub
mov
data16
xchg
sub
fimull
movb
sbb
xlat
push
lods
mov
imul
mov
movsl
push
addr16
rorl
mov
aam
dec
insl
xlat
mov
mov
sbb
rcrb
cli
popl
inc
imul
mov
cwtl
jge
sbb
adc
sub
mov
xor
pop
mov
xchg
test
jo
xor
ret
fdivrs
pop
and
dec
or
es
scas
insb
adc
sbb
sbb
ja
rolb
sub
in
and
js
sbb
push
lcall
mov
lds
push
jl
mov
cmp
iret
mov
xchg
sbb
xchg
xchg
idivl
add
or
lock
bound
enter
xchg
incl
cld
out
cmp
mov
inc
out
out
je
fsubrs
jb
cmp
cmp
mov
and
add
add
xchg
xor
fadd
pop
mov
mov
jp
push
rorb
fcmovbe
insb
enter
xor
add
mov
mov
or
mov
out
cwtl
imul
icebp
sbb
fnstsw
adc
mov
dec
loope
testb
aad
out
adc
and
lds
cmp
inc
pop
mov
add
mov
imul
sbb
dec
stos
je
clc
cmpsl
popa
fwait
mov
test
es
out
dec
mov
scas
jmp
mov
xchg
lret
mov
add
je
ret
int
sub
dec
cld
repnz
xchg
or
xor
inc
inc
or
xchg
mov
mov
xchg
mov
mov
addr16
sub
mov
test
inc
add
dec
popf
or
sub
loope
push
pop
cmp
push
sub
lret
int3
or
std
add
out
xchg
xchg
sub
lret
dec
sahf
nop
icebp
inc
iret
push
mov
jns
pop
add
jnp
mov
mov
dec
inc
stos
sub
xor
add
jecxz
add
mov
jge
lock
idivl
aam
sti
pop
fldt
out
iret
mov
call
pop
mov
es
outsl
pusha
add
jbe
inc
loop
adc
mov
sahf
sbb
xchg
mov
sub
mov
aad
hlt
clc
in
enter
pop
fisubrl
cmp
dec
jmp
je
dec
cs
or
adc
mov
mov
stc
push
mov
cs
or
or
outsb
mov
sbb
repz
idivb
dec
sub
inc
inc
xchg
mov
pop
out
push
lahf
in
popa
xchg
mov
les
pop
dec
mov
mov
sbb
xlat
mov
icebp
test
dec
mov
mov
rorl
inc
ret
mov
pop
xor
std
fisttpl
pop
xchg
inc
sbb
cmp
jp
sub
sbb
mov
xchg
rorl
cmp
add
mov
call
sub
push
xlat
mov
xchg
sub
xchg
lret
sub
cmpsb
mov
add
xor
add
cmp
ret
xor
mov
dec
outsl
jle
ljmp
test
scas
test
mov
jno
jmp
orb
add
je
add
dec
insl
les
pop
test
pop
mov
rclb
mov
mov
inc
lods
push
rclb
xlat
insl
insb
pop
in
icebp
push
mov
stos
pop
mov
out
popa
mov
jae
js
pop
mov
and
cwtl
fs
jne
cwtl
fsts
push
icebp
xchg
scas
shrl
int
push
pushf
mov
test
jge
jns
sbb
ljmp
and
mov
shll
lock
ret
mov
arpl
stc
xchg
cmpsl
mov
add
jmp
clc
cld
popf
popl
inc
out
jnp
les
int3
stc
pmullw
out
mov
add
mov
mov
push
cmpsl
lods
daa
push
outsb
mov
aas
icebp
imul
sub
sub
movsb
mov
and
aaa
mov
out
jle
dec
dec
cmp
or
mov
test
pop
cmp
clc
add
mov
sub
pop
fimull
add
ss
lret
mov
gs
repz
mov
xchg
pushf
sbb
sbb
nop
jbe
inc
cmp
cmp
mov
cmpsb
int
fildll
inc
xchg
push
fcom
jno
fidivl
ss
mov
enter
push
rorl
gs
fmuls
cmp
mov
mov
mov
cmp
and
clc
xor
pop
jge
sub
cmc
mov
jl
mov
int3
xor
sbb
ds
sbb
inc
and
or
popf
mov
sti
cltd
xchg
jns
pop
mov
cs
mov
pop
int3
pushl
pop
push
sbb
jbe
cli
loopne
pop
cltd
pop
xchg
dec
xchg
mov
leave
mov
adcb
mov
cmp
fstpt
aad
in
daa
xchg
not
sbb
jecxz
lcall
mov
and
mov
into
push
push
movsl
movl
mov
jecxz
cmp
addb
add
mov
fadd
mov
insl
mov
sahf
mov
lock
sbb
sbb
push
notl
push
add
xchg
stos
mov
mov
push
in
mov
mov
mov
mov
inc
daa
xchg
xor
decl
insl
mov
push
jne
and
iret
sub
mov
dec
mov
jge
inc
out
and
xchg
sub
mov
jnp
stos
and
jmp
xor
test
scas
mov
xchg
pop
icebp
pushf
mov
ss
cmpsl
test
pop
jbe
cwtl
inc
iret
mov
aaa
lahf
les
stos
jne
jbe
mov
aad
js
push
rorb
out
int3
leave
outsl
nop
add
stos
sahf
orb
jmp
jno
mov
dec
lock
xchg
test
icebp
loope
mov
ret
sbbb
pop
cmp
pop
not
sbb
fcomi
mov
dec
xchg
or
push
sub
popf
imul
movlps
outsb
lea
fs
mov
add
ret
add
test
jl
adc
push
popf
lret
lock
adc
mov
mov
inc
dec
mov
movsb
or
jne
mov
pusha
cmp
xchg
repz
fsubrl
lock
mov
mov
pop
fsubrs
inc
jl
orl
dec
adc
mov
out
lds
rorb
outsb
insl
into
sbb
bnd
dec
mov
jmp
cmp
arpl
mov
and
sub
mov
or
mov
xor
or
sub
or
addr16
cmp
adc
mov
push
cmpsb
jecxz
lock
icebp
push
rolb
push
sub
mov
loope
adc
mov
out
sub
jnp
and
xchg
mov
push
and
mov
mov
popa
or
sbb
stos
cld
inc
xor
dec
scas
cmpsb
cmp
rcrl
push
cs
iret
out
push
sbbb
inc
add
mov
leave
in
jle
inc
sub
sahf
mov
cmp
mov
mov
add
mov
cmp
mov
std
fstpl
hlt
or
rcll
cmp
mov
subl
sub
pop
mov
ret
notl
ja
in
dec
scas
lods
cwtl
mov
fwait
lcall
outsb
dec
mov
dec
adc
add
add
and
es
dec
aam
or
mov
sbb
mov
ret
xchg
fbld
shll
mov
inc
stos
pop
sub
ds
incl
lods
jne
dec
push
add
push
dec
cmp
sbb
mov
sub
out
iret
mov
shl
xlat
lea
and
adcl
adc
stos
jecxz
mov
adc
mov
fimull
pop
test
add
mov
and
pop
jbe
xchg
rorl
xor
inc
sbb
cli
dec
mov
pop
and
xor
and
pop
test
outsl
es
cmc
xlat
adc
int
sub
mov
mov
sqrtps
add
push
outsl
mov
outsb
clc
sbb
sbbb
loopnew
pop
sbb
movsl
inc
push
data16
mov
lock
adc
push
movsl
mov
lods
lods
scas
movb
repnz
test
mov
adc
out
sbb
cmp
mov
test
and
lret
push
jecxz
add
gs
dec
jae
xchg
mov
or
addr16
push
xchg
insb
lea
or
push
lret
cwtl
pop
adc
pop
fimuls
imull
inc
ja
sub
movsb
sub
lods
xchg
loopne,pn
pop
je
adc
outsb
dec
imul
jb
out
jae
repz
cltd
mov
push
mov
ja
das
ds
jmp
xchg
test
dec
cmpsb
cmp
jle
cmpsl
mov
push
cmp
cmp
xchg
into
aad
cmc
mov
shlb
mov
cmp
movsb
lret
cmpsl
or
dec
jp
pop
pop
movsb
nop
inc
push
inc
and
pusha
ficomps
ret
jmp
rol
adc
mov
pop
ret
xchg
cmp
add
mov
pop
out
fisttps
cmp
sbbb
les
adc
xchg
addr16
leave
adc
insb
or
pop
xchg
sub
test
das
ds
popa
push
pop
mov
push
ss
and
fidivrs
fprem
lods
mov
cli
fisttps
mov
sti
push
xchg
xchg
add
lock
sahf
ss
xchg
cltd
rclb
test
pop
pusha
mov
dec
sbb
sahf
cltd
fistpl
lret
pop
clc
mov
dec
outsl
xor
xchg
stos
cmp
xchg
jo
fisubl
fisubrs
pushf
cmp
out
aad
ljmp
jmp
test
mov
aam
push
mov
dec
inc
mov
lcall
inc
sbb
add
mov
cmpl
push
inc
imul
inc
add
inc
mov
cmpsl
das
lahf
mov
fldcw
mov
push
out
mov
mov
ds
test
jns
push
je
arpl
mov
in
add
pop
mov
call
xor
push
in
cmp
mov
pusha
fwait
adc
sub
mov
in
popf
das
ss
ljmp
or
jo
sub
mov
lds
pop
push
data16
fnstsw
out
fcoml
mov
push
pop
fwait
js
test
cmp
mov
clc
xor
lea
gs
dec
add
loope
mov
cmp
data16
push
imul
xchg
clc
movsl
in
or
out
aaa
cwtl
mov
addr16
inc
iret
push
movsl
outsl
mov
in
xor
add
int3
iret
sub
stos
inc
ret
sti
and
andb
mov
fsts
rol
mov
mov
push
push
test
cli
sbb
mov
in
dec
cmp
jnp
sub
bound
mov
sub
sbb
lds
or
inc
aaa
adc
fwait
sbb
mov
scas
popl
pop
out
repz
push
repnz
add
insl
enter
pushw
cld
inc
leave
jbe
or
test
scas
outsl
push
mov
movb
xor
adc
mull
daa
test
xchg
inc
xor
mov
mov
arpl
mov
dec
sub
jnp
mov
stos
pop
imul
imul
or
js
call
jo
fcomi
sub
mov
mul
mov
xchg
mov
mov
push
orl
xor
jmp
mov
sbb
jne
int
xor
add
call
insl
mov
mov
sti
or
adc
inc
imul
mov
push
jmp
cmp
xor
test
push
jo
push
mov
sahf
stos
sbb
test
lds
scas
mov
mov
mov
sahf
nop
xchg
sbb
inc
addb
pushf
mov
bound
std
and
mov
sbb
test
movsb
jl
lock
fisttps
ret
lea
outsl
push
sbb
sbb
xchg
mov
add
jg
pop
mov
rorl
out
mov
mov
adc
or
mov
stc
aad
jbe
out
inc
fistpll
cwtl
fcmovbe
cmp
mov
insb
jae
xchg
jge
shl
jp
pop
xor
rclb
rcrl
sarl
mov
outsb
inc
dec
and
push
lock
pop
pusha
xchg
loope
mov
mov
repz
or
xlat
adc
outsl
mov
mov
lahf
rcr
adc
js
data16
lea
sahf
stos
test
je
roll
xor
mov
scas
repnz
mov
mov
sbb
ret
lret
jbe
sti
lds
pop
lods
mov
xchg
or
loop
sbb
in
in
orb
or
in
mov
cli
xor
push
mov
pop
mov
mov
add
adc
out
repz
xchg
shrb
gs
push
add
jle
ficompl
mov
push
xchg
and
int3
ljmp
sti
inc
mov
std
xor
mov
adcl
div
sti
repnz
adc
mov
iret
sbb
jae
inc
std
pushf
data16
clc
mov
push
arpl
dec
rorb
cmp
adcb
loop
imul
cmp
fsubl
jns
repnz
fimuls
icebp
shlb
cld
adc
jae
cmpsb
dec
or
and
test
mov
or
sti
add
dec
mov
mov
pop
or
xchg
xchg
dec
push
jp
sbb
sub
test
inc
jno
mov
addr16
inc
addb
mov
sbb
loop
lahf
outsb
pop
shrl
pop
outsb
jp
loope
inc
imul
sub
mov
shrb
dec
push
push
int
nop
fisttps
outsb
pop
lods
mov
or
jbe
xor
hlt
jnp
les
mov
sbb
xchg
mov
cmpsl
xchg
mov
pop
mov
pusha
mov
pop
add
pop
pushf
outsb
mov
inc
push
stc
xchg
je
mov
xchg
popf
add
or
cltd
mov
lret
movsl
pop
mov
inc
stc
xor
fwait
xchg
scas
mov
push
xchg
fcoms
shrb
mov
mov
push
fisttpl
pop
imul
aaa
mov
test
cmpsb
std
sbb
and
xchg
mov
cmpsl
dec
cli
repz
imul
xor
fwait
jae
dec
mov
loopne
xchg
adc
and
aad
lock
mov
pop
outsb
imul
xchg
mov
mov
lcall
xchg
nop
mov
adcl
insl
push
xchg
fildll
sub
cmp
dec
adc
popa
daa
pop
shrl
cmpsb
mov
in
iret
jns
in
mov
cmpsl
push
jbe
ljmp
test
xor
testb
mov
mov
xor
inc
mov
jge,pt
mov
lea
in
mov
jno
rcrb
aas
cmp
icebp
nop
xchg
push
add
popf
movsb
fisubrs
mov
loopne
or
stc
xchg
pop
and
mov
lcall
mov
dec
add
mov
or
xchg
mov
popa
push
fisubl
lock
fwait
mov
pop
push
sub
fbld
sbb
push
mov
loop
jne
iret
movsl
xchg
push
pushf
stc
ljmp
popa
addr16
adc
mov
pop
mov
mov
pop
adc
popa
cmp
arpl
xchg
dec
or
inc
jle
xchg
je
cmp
lods
movsl
cmp
repnz
mov
mov
and
inc
jnp
mov
pop
add
push
dec
jne
call
or
out
push
push
and
cmp
inc
dec
call
pushf
adc
cli
xor
mov
leave
mov
mov
cld
dec
cs
mov
or
pop
mov
fwait
jge
lret
lret
mov
dec
pop
xor
aas
std
inc
mov
call
and
push
test
shr
mov
sbb
mov
cmp
into
push
mov
jg
cmpsb
xor
pop
sahf
cmp
adc
mov
cmp
f2xm1
pop
mov
dec
mov
popa
mov
adc
jge
mov
inc
ret
xchg
xchg
hlt
sbb
lret
xchg
sbb
mov
imul
or
testl
mov
mov
or
and
jns
cmp
pop
push
orl
scas
in
cmpsb
dec
lods
push
or
roll
push
jecxz
jp
lret
jns,pn
test
push
xchg
int
fidivl
mov
mov
inc
les
pusha
jge
data16
cmp
dec
jg
stos
xchg
dec
aam
mov
xor
fnsave
xchg
inc
push
ds
and
sub
sbb
xchg
cmp
xchg
xchg
xlat
add
mov
sbb
ret
mov
push
and
mov
dec
scas
mov
ss
push
fdivl
lea
cmp
cmp
fldln2
popa
outsl
push
push
mov
sub
jmp
sbb
sbb
push
mov
mov
loop
sub
gs
xor
sbb
push
pushf
jno
xchg
push
lret
addr16
jg
pop
sbb
in
push
xchg
dec
test
dec
fs
gs
cltd
leave
dec
imul
inc
lahf
dec
or
xchg
inc
stos
mov
aam
loope
sbb
insl
fcmove
sbb
mov
mov
pushl
mov
mov
rorl
fidivrl
icebp
xchg
jmp
sub
movsb
inc
dec
mov
lret
add
daa
mov
inc
aas
xor
mov
mov
shlb
in
xchg
cmpsl
ss
pop
jns
xor
sbb
cmp
mov
fsubp
dec
add
fidivrl
dec
or
fdiv
and
mov
or
js
icebp
imul
lahf
aad
mov
cmp
fsubrl
dec
mov
sub
xor
sbb
push
pop
sbb
pop
cmpsb
mov
or
xor
xor
xlat
daa
mov
mov
adc
addb
fildll
popf
arpl
outsb
fimull
popa
dec
sbb
add
mov
push
mov
ss
mov
mov
push
push
lods
testb
loop
and
pop
in
push
mov
ret
enter
test
jp
repz
fmuls
push
rorl
cltd
fcmovne
lret
push
icebp
imul
mov
push
gs
xor
mov
dec
sbb
jl
outsb
sub
mov
jp
mov
fldcw
mov
movsl
inc
testl
mov
cmp
mov
push
xor
xchg
popa
inc
iret
scas
or
leave
add
mov
inc
mov
lock
inc
addr16
fiaddl
jle
cmpsl
jp
aad
lret
loop
outsb
stos
push
jl
testl
mov
cmp
lock
jge
xchg
rcrb
out
sbb
add
jmp
inc
jle
or
std
jb
mov
lock
loopne
add
xor
out
ret
push
ds
mov
icebp
gs
push
aas
enter
rolb
xor
xor
xlat
or
sbb
mov
ja
mov
or
dec
test
subb
scas
xchg
lret
mov
int3
pop
lea
cmc
xchg
ja
mov
int
cli
rcl
push
sbb
sbb
inc
mov
jnp
pop
ret
mov
repnz
mov
or
fdivrs
mov
mov
push
mov
ljmp
xchg
orl
out
incb
inc
in
xor
outsb
cmpb
sbb
mov
or
pop
xlat
lea
mov
in
int3
rcrb
jae
aad
addl
cmp
lea
clc
add
shl
xchg
jbe
cmp
notl
leave
sub
add
xchg
mov
sbb
pop
insb
mov
xchg
xchg
jge
push
rcr
jecxz
fistpl
dec
xor
stos
mov
jbe
xor
lds
mov
jno
loop
and
and
out
inc
push
fwait
push
and
adc
sub
repz
push
bound
jmp
fwait
popw
stos
dec
mov
mov
lods
das
es
shr
clc
or
pop
mov
cmc
repnz
jo
pop
inc
xchg
adc
and
cmp
mov
mov
mov
add
pop
xor
or
jl
xchg
repnz
mov
mov
stos
adc
push
fmuls
dec
cmp
add
rcrb
push
negb
shr
ljmp
popf
sub
sub
mov
and
cmp
decl
mov
in
lds
and
mov
data16
ljmp
jnp
xor
filds
rcrb
and
icebp
sbb
test
and
sbbl
xorl
add
or
loopne
movsb
sub
imul
pop
mov
jle
mov
adc
dec
xchg
incl
cmp
mov
mov
lea
in
pop
mov
shll
in
popa
xor
mov
loop
or
cltd
inc
sbb
addb
into
pop
pop
jbe
cmp
mov
repz
roll
pop
lret
je
hlt
int3
inc
pop
push
inc
inc
test
xchg
mov
mov
mov
lret
xchg
sub
and
cld
mov
mov
mov
cwtl
add
loopne
imul
ja
xchg
mov
repz
pop
mov
dec
ret
mov
roll
ja,pn
inc
adc
clc
mov
ret
xor
imul
or
pand
sbb
mov
gs
and
mov
xchg
mov
mov
add
pop
lods
out
pop
lea
jp
inc
mov
in
mov
mov
push
imul
jmp
lea
xor
mov
and
je
ror
fmull
std
ds
xor
cmp
sub
mov
add
mov
mov
add
and
rcrl
sbb
in
imul
push
add
xor
sub
push
movsl
mov
cmp
in
xchg
push
mov
in
jbe
xchg
mov
sub
inc
mov
inc
push
sbb
loopne
mov
sarl
fisttpl
sbb
and
dec
sbb
les
mov
rolb
icebp
xor
out
sbb
add
shll
push
mov
pop
xchg
and
int3
mov
xor
dec
xchg
movsl
mov
or
push
inc
mov
aad
mov
out
sbb
pop
pop
sbb
ds
mov
dec
pusha
je
outsb
stc
sub
pop
rcll
sbb
mov
xchg
inc
or
cwtl
out
lock
pop
sub
pop
pushf
mov
rorb
or
inc
andb
push
scas
push
ret
lods
loope
xchg
out
mov
mov
scas
mov
cli
mov
pushf
test
arpl
lds
mov
repnz
aam
xchg
dec
or
pop
xor
and
mov
mov
fisttpl
push
or
movsb
inc
pop
cmp
enter
adc
mov
rorb
sbb
mov
xor
push
mov
add
movsb
sbb
sahf
shll
imul
fwait
test
fcomps
dec
inc
jnp
pop
sub
rcr
cltd
mov
push
clc
add
mov
mov
je
jns
mov
pop
ja
jmp
sbb
in
mov
fildll
dec
xor
or
pushf
mov
dec
ja
clc
mov
fimuls
inc
in
and
push
das
loopne
dec
pop
in
mov
adc
pop
add
shrb
aam
xchg
mov
and
push
in
pushl
mov
lods
fildl
jne
pop
repz
and
mov
mov
mov
xor
lahf
sub
push
sub
inc
inc
or
xor
adcb
cmc
les
inc
adc
sub
outsl
scas
pop
mov
pushl
subl
jns
push
push
cwtl
push
jbe
or
nop
mov
arpl
or
cmpb
xor
mov
and
mov
sbb
repz
xor
pop
mov
cli
mov
mov
cltd
mov
mov
mov
imul
and
and
sub
mov
cmp
ja
iret
lret
ds
mov
xlat
inc
jne
cwtl
cmpsl
sub
xchg
popa
cmp
push
xchg
in
lock
stos
mov
xchg
rol
or
xchg
adc
add
sub
mov
jl
scas
add
push
mov
iret
sbb
rcrl
fst
xchg
movsb
and
push
pop
mov
mov
or
mov
popa
sub
pop
sahf
mov
adc
mov
mov
popf
xchg
inc
nop
and
dec
fs
sub
xor
cmp
sbb
push
sub
pop
ret
jecxz
xor
mov
dec
mov
xchg
rcll
mov
dec
sarb
lret
or
arpl
add
movsl
out
mov
in
sbb
or
out
jne
or
xchg
mov
mov
nop
or
fidivrs
sbb
iret
jg
mov
filds
add
mov
push
mov
xchg
and
cmp
jnp
call
cmpsb
lcall
push
inc
add
mov
mov
pop
dec
mov
sbbb
xor
push
xchg
cld
xor
cmpsb
xchg
push
pop
inc
daa
mov
les
mov
xorl
call
cmp
mov
sarl
jp
dec
mov
aas
push
lret
inc
test
ret
mov
dec
and
pushf
jge
mov
fldt
je
movsl
xchg
mov
insl
gs
mov
aam
sub
sub
test
mov
push
adc
mov
jne
sti
xchg
sub
shl
inc
push
notb
adc
lahf
inc
mov
fs
xchg
movsl
cwtl
cltd
outsb
divps
les
mov
sub
push
shrl
mov
mov
pop
mov
jmp
mov
std
jae
push
jg
mov
cli
mov
lock
dec
les
pop
mov
dec
ret
mov
hlt
mov
ljmp
rorl
mov
lahf
push
add
scas
jg
mov
mov
aaa
or
or
mov
cmpl
mov
sbb
mov
xchg
mov
bound
in
xchg
ficoml
add
mov
lret
fildl
aas
mov
mov
push
lods
xchg
cmc
mov
pop
mov
push
enter
inc
mov
bnd
and
cli
les
pop
xor
scas
aad
cmp
mov
xchg
addr16
sbb
sbb
lds
pop
push
and
mov
mov
cmp
pop
je
dec
cmp
out
mov
sbb
lds
fwait
cmc
dec
repz
inc
push
ja
sti
lods
ss
test
mov
nop
push
aaa
jb
inc
arpl
fiaddl
and
push
sub
cmc
push
popa
add
bound
in
out
scas
sbb
mov
lret
mov
push
inc
je
push
inc
test
fimull
dec
call
sbb
mov
mov
pop
rol
loope
fidivrs
inc
dec
sbb
ds
imul
jne
push
sub
es
fmuls
ljmp
cmp
dec
cmp
int
xchg
mov
fisubs
sti
mov
cltd
pop
mov
inc
cmp
rcrl
jns
dec
arpl
xor
or
or
mov
lret
repnz
adc
xchg
sub
sbb
mov
mov
xor
jmp
cld
inc
fistpl
mov
in
rcrl
rclb
mov
inc
data16
or
lret
jae
inc
les
clc
adc
stos
mov
mov
xor
test
sarb
je
push
pop
mov
out
ret
pushf
lahf
mov
clc
dec
adc
fidivrs
decb
push
xchg
jl
mov
ljmp
mov
xor
jmp
movsb
mov
pop
lret
push
lock
add
dec
add
mov
int
mov
jge
mov
mov
je
push
inc
push
mov
inc
test
add
jnp
repnz
xor
ud1
and
movsl
cmp
inc
mov
mov
js
loop
jmp
arpl
push
pop
out
dec
push
xchg
jle
pop
imul
ljmp
sub
mov
pop
jne
xchg
pop
mov
dec
hlt
andb
xor
nop
aas
aam
push
pop
mov
aaa
cmpsl
sbb
mov
repnz
dec
out
int
xchg
xor
sub
lds
adc
cmp
addr16
dec
imul
fmull
in
rclw
ret
sbb
out
outsl
mov
std
popa
stos
test
mov
insl
adc
fisttpl
mov
jp
push
int
out
outsl
mov
cmc
mov
punpckhdq
pop
push
je,pt
stos
mov
ss
lods
push
xlat
push
daa
mov
std
inc
or
stos
aaa
enter
jge
xchg
ds
stos
popa
aam
dec
mov
inc
pusha
cmp
push
inc
gs
call
inc
sub
pop
xchg
mov
sbb
mov
gs
jns,pn
pop
jg
cmpsb
pop
cwtl
pop
decl
jle
xchg
cmp
mov
fldl
xor
pop
subl
outsl
mov
div
arpl
adc
mov
insb
push
mov
shrb
repnz
daa
push
sbb
lcall
cmpsb
mov
test
push
dec
imul
push
dec
punpcklbw
data16
sub
es
imull
ja
xchg
pop
xor
adc
inc
in
push
pop
mov
cli
ja,pn
call
sbb
mov
mov
add
push
and
mov
mov
xchg
xor
aam
jae
fcmovu
cs
movsb
mov
xor
inc
int
xchg
into
stos
pushf
fwait
pop
nop
push
mov
fcompl
lock
xchg
mov
jecxz
jp
xor
pop
fs
mov
dec
lods
cmp
andl
fmull
mov
or
xchg
push
mov
inc
xchg
xchg
mov
test
in
into
test
pop
incb
lcall
mov
shrl
imul
inc
fwait
stos
mov
xchg
add
aad
inc
dec
cmp
inc
in
mov
dec
shll
les
dec
jle
aaa
repnz
andb
imul
in
inc
sbb
cmp
cmp
dec
mov
xchg
pop
ja
jbe
inc
xchg
fstpl
mov
push
xor
movsb
int3
ret
repnz
loope
lahf
fbstp
push
push
pushl
popa
add
jl
xchg
or
les
adc
movsb
clc
das
aad
in
xor
mov
fldcw
sub
mov
das
fsubr
mov
fwait
and
loope
nop
out
cmc
in
pop
push
inc
rcr
push
fstps
push
mov
mov
xchg
fmuls
sbb
stc
fidivs
mov
push
sub
divb
mov
subl
fwait
ds
push
mov
out
sub
sbb
subb
in
cltd
jo
push
movsl
xchg
jecxz
push
ret
test
mov
ret
mov
pop
cmp
mov
xlat
lcall
enter
mov
pop
data16
push
stc
pop
jp
clc
xor
sub
cmp
xor
xchg
cld
mov
scas
jb
sahf
leave
icebp
andb
cmp
and
sbb
hlt
aas
mov
pop
ljmp
insl
ret
call
mov
ds
inc
jno
leave
cmp
cmp
je
sti
fmull
test
dec
xor
sbb
xor
and
mov
push
adc
ret
leave
int
mov
decl
je
jbe
mov
xlat
adc
xchg
sub
mov
lock
mov
andl
pop
dec
mov
cli
sub
imul
mov
or
jnp
fldl
jle
adc
inc
jge
bound
cld
mov
scas
mov
sahf
sub
arpl
dec
sub
lock
je
rcll
adc
jl
in
push
loope
lahf
mov
add
aad
sbb
lods
loop
jnp
mov
test
aas
dec
sbb
out
pop
stos
lahf
mov
add
sbb
loope
incl
int3
mov
mov
adc
mov
cmpsl
cli
jp
mov
cmpsb
jmp
arpl
xlat
push
test
push
subb
xchg
lahf
push
test
int3
mov
jecxz
cmp
shlb
mov
mov
out
mov
dec
or
xor
add
mov
xchg
sahf
push
and
xchg
sbbl
inc
fwait
test
or
clc
mov
push
mov
inc
dec
jne
cs
push
dec
outsl
lahf
lods
and
xchg
cmp
or
hlt
out
cmp
sub
fcomps
rorb
sbb
lret
xor
inc
aaa
mov
jae
mov
cs
movl
jge
cli
aas
mov
cmpsl
mov
jno
sahf
mov
inc
js
out
cmp
mov
test
sbb
jg
cwtl
mov
add
add
xchg
ja
mov
dec
das
sub
push
movsb
data16
push
test
aas
xchg
dec
aaa
mov
sub
in
mov
cmp
mov
stos
jle
mov
std
shr
aad
mov
mov
cld
xchg
insb
popa
and
mov
pop
pop
frstor
icebp
push
stos
and
mov
pop
inc
xchg
data16
addr16
cmp
inc
jmp
int3
mov
mov
adc
mov
sbb
sub
popa
cld
jle
dec
lahf
pop
push
mov
xchg
int3
fsubrp
mov
in
addb
jae
mov
add
adc
xor
das
mov
cs
jle
fdivp
mov
jns
inc
mov
adc
adc
mov
xlat
and
adc
cld
mov
out
mov
and
sub
lcall
fmuls
dec
mov
sub
push
in
inc
idiv
sbb
mov
xchg
pop
jb
lock
test
and
out
rep
dec
sbb
shrb
roll
sahf
pop
les
mov
cmp
mov
cmp
les
xor
or
add
mov
and
outsl
ss
pop
push
arpl
mov
pusha
jmp
jl
xor
bts
inc
int3
pop
lea
xorb
and
orl
push
mov
das
push
in
mov
jl
in
testb
xchg
fcomps
scas
pop
mov
inc
fwait
mov
sbb
dec
sarl
adc
mov
mov
xor
repz
mov
ror
mov
pop
pop
movsb
or
jbe
test
add
jge
pop
jns
popa
inc
orl
xchg
adc
out
mov
xorb
mov
outsb
push
mov
push
sarl
cmc
cs
dec
cs
lods
imul
cmc
and
push
or
add
fucom
ret
mov
shll
mov
repnz
aad
sbb
xor
cld
pop
mov
mov
xchg
shrb
cmp
sub
mov
cli
xor
mov
adc
mov
lods
test
xchg
lock
pop
mov
or
xorb
shrl
aas
dec
ljmp
sub
imul
cmp
adc
negl
in
mov
mov
pushl
cmp
xchg
mov
fidivs
mov
andb
in
pusha
ret
pop
mov
dec
cmc
mov
mov
sbb
testl
imul
jmp
ret
sbb
aaa
ds
aad
mov
push
test
mov
out
xor
sub
aas
mov
pop
dec
sub
lods
mov
mov
loop
fists
cmp
pop
mov
bound
insb
xor
mov
shlb
out
loop
mov
jecxz
les
repz
cmpsl
xor
pop
adc
sti
sub
fsubp
ss
xchg
test
notl
stos
xchg
cmpb
xor
cmp
adc
cmp
mov
ja
xor
mov
push
insb
andb
pop
xor
mov
push
sti
scas
int3
add
das
imul
shrb
stc
mov
or
bound
pop
rorb
mov
ja
lods
dec
push
mov
addl
jnp
jl
testb
aaa
ss
mov
mov
pop
sbbb
pop
jnp
in
jmp
mov
insl
xor
xor
sub
out
imul
cmp
mov
int
xchg
pushl
sub
mov
scas
mov
mov
sbb
pop
push
push
testb
test
add
cmp
test
jecxz
outsb
repz
mov
pop
lea
hlt
add
mov
mov
add
sub
inc
outsl
ficompl
les
or
sbb
ss
std
test
sbb
add
push
push
dec
sarl
subb
add
cmp
pop
stc
cmc
out
push
or
imul
scas
push
and
adc
jbe
pop
and
lods
lds
dec
mov
cmp
gs
inc
js
stos
call
enter
jmp
inc
adc
test
lret
jno
mov
in
sub
push
mov
lds
nop
add
testl
mov
dec
mov
or
stos
pusha
mov
and
cli
mov
sub
in
cmp
in
and
mov
std
mov
les
sub
xchg
mov
mov
mov
jne
and
scas
cwtl
repz
mov
fsubrl
cmp
jnp
aam
sti
dec
xlat
int
std
jae
pop
mov
fdivs
adc
push
mov
lret
sbb
test
mov
into
mov
pop
fs
mov
out
and
mov
scas
lods
je
and
sahf
adc
mov
leave
pop
test
mov
and
mov
mov
out
xor
ja
ficomps
cltd
sub
mov
hlt
jmp
mov
mov
out
push
rcll
cmc
mov
insb
sub
cltd
pop
xlat
inc
mov
repz
dec
cmp
jl
arpl
lcall
movsl
hlt
sarb
lret
movsb
xorl
addr16
and
lret
call
and
push
mov
push
xchg
cld
mov
mov
clc
fwait
lods
call
sub
mov
lea
mov
push
mov
mov
xor
popa
mov
mov
add
add
mov
jle
mov
lods
pop
es
cwtl
popl
push
ret
inc
or
idiv
addr16
pop
and
cmc
sub
dec
pop
jne
insb
or
inc
rol
push
ss
inc
pop
sub
mov
adc
pop
insl
mov
rol
jns
jno
in
insb
iret
test
mov
lret
inc
add
mov
pop
add
and
mov
xor
in
cmpsb
rorb
loop
push
sub
mov
std
xchg
jo
sub
push
mov
repnz
push
das
shrb
imul
push
shlb
into
testb
or
xor
ret
aaa
icebp
lds
stc
xor
push
pop
jg
sub
orb
or
push
sbb
enter
add
cmp
das
mov
and
mov
dec
mov
dec
stos
cmp
inc
inc
xor
out
rcrb
push
and
daa
out
dec
mov
sub
lds
leave
mov
mov
xor
outsl
fildl
xchg
inc
mov
cmp
fnsave
pushf
xor
jb
inc
aas
mov
aad
xchg
inc
lds
out
push
cs
or
pop
or
xchg
lret
icebp
std
je
xchg
add
push
es
je
jo
fstpt
jb
push
cmp
jl
in
iret
xorb
xchg
mov
push
repz
outsl
ret
push
inc
inc
mov
cmp
subb
repz
cmp
in
das
fadds
pop
nop
mov
jle
aam
ss
mov
cltd
or
mov
inc
aad
xor
repnz
adc
xchg
movsb
and
fwait
mov
cmp
mov
and
in
mov
jae
push
mov
push
add
repz
loopne
cmc
pop
sub
fiaddl
fsubs
imul
adc
push
mov
ljmp
hlt
aas
imul
mov
mov
xchg
aad
sahf
lods
push
cmp
pop
sub
mov
shll
pushf
ds
xchg
jle
or
mov
and
mov
sarl
or
pop
xor
xchg
push
faddl
mov
dec
pop
pop
xor
xchg
sbbl
mov
xorb
shlb
insb
push
mov
or
jno
bnd
loope
mov
cli
or
call
inc
ds
mov
addr16
paddsw
mov
inc
pop
or
test
xor
mov
data16
inc
sbb
mov
shlb
pusha
mov
and
nop
jle
cmp
lock
setno
mov
inc
popa
pop
test
cmpsb
or
dec
sbb
icebp
jg
xchg
mov
popa
aad
add
sub
pop
insb
mov
mov
fwait
xlat
sarb
and
mov
and
nop
pop
fldcw
pop
mov
add
call
mov
dec
mov
lahf
mov
push
mov
outsl
shll
dec
addr16
dec
test
push
or
lods
mov
push
fisttps
jno
lret
out
mov
daa
popa
add
insb
mov
cmp
pop
mov
out
lret
xor
push
mov
jae
fisttps
pop
jmp
loope,pt
and
lock
pop
fcmovnbe
xchg
andl
add
push
and
pop
insb
cmpsb
jge
mov
mov
jno
cmp
or
inc
push
push
iret
jmp
push
mov
leave
lret
jb
jp
rclb
ret
cmpsb
mov
and
sub
xchg
and
xchg
out
cld
mov
test
mov
mov
cmp
hlt
push
fmuls
lds
mov
jo
cmpb
cmpsb
jns
or
orl
mov
pop
mov
and
jo
xor
xchg
or
inc
jp
ja
pop
mov
mov
xor
mov
outsb
lahf
jecxz
jmp
sub
sub
jmp
xchg
leave
mov
out
mov
pop
xor
mov
cmc
cs
pop
adc
cmpl
mov
aaa
jecxz
mov
pop
push
scas
cmp
out
jne
arpl
cmp
or
das
mov
xchg
xchg
cmp
push
mov
jmp
or
pop
jecxz
orl
lds
sbb
mov
dec
je
cmp
xchg
popa
cmpsb
das
jle
or
aad
xor
xor
jecxz,pn
fwait
lret
push
cmp
add
repnz
loope
cmp
or
mov
adc
xor
xor
mov
and
fwait
inc
xchg
dec
push
xchg
mov
push
sub
sbb
pop
mov
loope
jle
arpl
or
or
and
pop
push
clc
gs
mov
sbb
xchg
and
sub
and
push
dec
pusha
sbb
xchg
xchg
pop
push
js
nop
arpl
pop
sub
cmp
imul
mov
mov
push
mov
and
sub
jns
sbb
xor
stos
outsb
jl
icebp
scas
ja
mov
jne
mov
les
push
inc
mov
pop
fmull
dec
stos
xchg
movsl
push
fimuls
xchg
adc
adcl
and
mov
int3
notb
std
xor
adc
es
popa
pop
mov
jle
iret
mov
cli
and
cmc
in
ljmp
sbb
repz
mov
jo
or
fmuls
jle
cld
mov
and
xlat
inc
stos
cmpsb
sbb
mov
add
aaa
add
lods
ret
fimuls
rcrb
jns
mov
adc
sub
push
mov
sub
mov
dec
lods
inc
fnsetpm(287
je
call
shl
popa
sub
divl
mov
cmp
mov
bound
lods
or
mov
jb
int
sub
mov
lods
popa
dec
sbb
mov
int
shrb
mov
out
pop
mov
mov
in
mov
adc
rorb
inc
sub
scas
lock
jmp
mov
jge
mov
ja
and
xor
mov
xor
bound
mov
inc
mov
ja
jnp
addr16
aam
mov
mov
movb
mov
inc
mov
mov
mov
imul
das
mov
ret
pop
cmpb
jbe
roll
dec
mov
dec
shrb
mov
inc
mov
mov
loope
mov
lods
cmp
mov
leave
mov
and
daa
je
loopne
mov
add
adc
mov
push
cmpsb
test
mov
mov
test
dec
cltd
loope
rol
mov
inc
incb
imul
ja
mov
in
push
fistps
push
sbb
xor
cmc
mov
add
cwtl
or
lret
imul
jmp
divl
pushf
cmp
scas
push
fsubs
sbb
fisubrs
ljmp
push
xchg
dec
and
fwait
in
leave
aas
mov
pop
add
rolb
pop
push
xor
imul
mulb
ret
mulb
mov
jmp
push
std
inc
xor
ljmp
jo
fimull
jmp
jmp
mov
mov
out
pop
jge
lret
mov
push
pop
int
sub
movsb
cmc
adc
fwait
adc
ret
mov
mov
inc
cmp
test
add
add
insb
or
jo
lret
inc
mov
movsb
scas
pusha
add
out
mov
sbb
dec
mov
jbe
xchg
cmpb
insb
lods
or
ss
jp
repnz
rolb
int
mov
push
jnp
pop
mov
ds
je
ret
dec
mov
cli
mov
mov
sub
shlb
push
insl
dec
in
roll
mov
pop
jl
std
mov
add
loopne
outsb
cmc
scas
mov
lock
xor
mov
mov
daa
sbb
out
xchg
les
mov
fucomip
add
jae
jmp
out
popf
pop
push
ret
xchg
or
fs
xor
int
dec
pop
jne
mov
clc
cltd
inc
jmp
and
mov
add
fstp
sbb
rclb
xchg
jmp
pop
pop
fcmovu
bound
xorw
test
or
dec
fsubrs
pop
movsl
jg
out
ja
orb
and
adc
stos
sub
ret
mov
mov
cmpsb
fcompl
or
call
cmp
fwait
jae
adc
lock
mov
outsl
mov
movsl
out
in
cmp
cmpsb
inc
test
xor
out
mov
sbb
mov
sub
movsl
push
mov
dec
and
out
inc
mov
inc
popa
lsl
xor
insl
add
iret
xchg
pop
lahf
xor
jae
inc
sub
jns
inc
lcall
imul
nop
jmp
mov
sub
iret
mov
pusha
pop
mov
out
stos
fisubrs
sbb
mov
mov
dec
sub
nop
sahf
jge
bound
lods
movsb
push
icebp
sbb
leave
push
mov
add
dec
stos
imul
shll
xchg
fimuls
dec
xor
mov
out
ret
jno
imul
scas
in
push
fcmovu
dec
adcb
aad
xor
mov
pop
mov
mov
std
cltd
jp
mov
jl
das
fildll
pop
test
sub
mov
arpl
test
xchg
xor
xchg
mov
ja
out
lea
inc
stos
mov
lea
fildll
inc
out
ja
mov
mov
inc
sbb
std
xor
dec
mov
cmp
in
mov
xor
inc
xchg
mov
idiv
sbb
test
cwtl
andb
repz
mov
adc
xchg
rorl
or
xchg
movsb
xchg
adc
xchg
lret
adc
inc
cmp
dec
xlat
xchg
andl
ret
out
aas
cs
inc
xor
lret
jge
dec
and
mov
adcb
mov
call
mov
cmp
sub
cmp
xchg
lds
loope
loopne
cmpsl
push
push
popf
cmp
push
xor
mov
mov
jge
pop
popa
jne
xor
adc
enter
in
mov
jns
mov
inc
mov
push
das
xchg
cltd
adc
ljmp
jae
cmc
pop
fwait
mov
adc
or
mov
mov
call
sub
clc
inc
dec
sub
shll
lods
mov
leave
fnsave
pop
shlb
into
or
ljmp
cmp
push
insb
add
sub
jle
push
mov
lret
cmp
mov
xchg
das
mov
push
or
push
in
in
iret
js
pop
pop
and
jnp
mov
nop
jl
mov
je
push
popa
insb
inc
mov
jecxz
out
push
mov
push
dec
rorl
dec
cmpsb
push
mov
mov
cmpsl
xchg
cs
outsl
subl
push
cmpsb
sbb
mov
mov
popw
xor
mov
in
push
inc
jb
ds
mov
mov
mov
jecxz
inc
sub
stos
movsl
mov
pop
aad
call
jo
ljmp
cmp
mov
xchg
inc
mov
fst
cmp
add
mov
loop
push
scas
rclb
sahf
data16
lcall
inc
fs
pop
jp
and
mov
lods
sbb
inc
xchg
xchg
mov
outsl
movsb
nop
adc
testl
mov
jl
xor
frstor
sbb
out
ja
jp
loop
pop
mov
rclb
ds
cmp
das
pop
mov
dec
mov
cmp
mov
mov
fcomps
sbb
or
mov
inc
push
xchg
ret
mov
fwait
ss
or
daa
out
loope
jl
mov
pushf
xor
mov
fisubrl
jp
cwtl
fmull
mov
sub
or
dec
mov
les
cmp
add
jge
frstor
xchg
and
shll
xchg
lods
mov
in
ret
outsb
push
pop
popf
insb
mov
scas
push
orb
push
pop
stos
loopne
adc
movsb
and
cmpsb
mov
psadbw
sub
mov
mov
fcomip
fwait
and
pop
xor
push
inc
fucomi
mov
lret
pop
push
inc
or
mov
cld
or
cmp
pop
movsb
jl
loop
ret
mov
pusha
les
mov
int3
int
mov
mov
mov
testl
lret
iret
mov
pop
sbb
mov
sbb
fcomps
cmp
bound
aam
js
mov
jmp
cmovp
cltd
inc
cmp
pop
add
xchg
daa
mov
int
sarb
inc
sbb
popf
xor
xchg
mov
jge
pop
mov
aaa
xor
loop
out
xchg
in
shrl
xchg
mov
inc
sbb
inc
ss
mov
xor
mov
mov
cwtl
cld
popa
lret
jmp
test
mov
imul
or
dec
xor
mov
mov
sub
mov
inc
xchg
mov
cli
add
mov
pop
or
mov
push
sbb
mov
inc
hlt
mov
jle,pt
sbb
mov
jmp
mov
xor
xor
popl
fs
mov
push
add
push
scas
and
mov
inc
mov
in
mov
iret
pop
xor
and
lds
sahf
std
jb
dec
shl
jae
sbb
outsb
xor
bnd
xor
fistpl
mov
dec
cmp
adc
stos
dec
cli
fistl
adc
lret
and
movsb
mov
add
xor
in
fistpll
sbb
loopne
mov
stos
fisubrs
jle
hlt
shl
and
mov
sti
jmp
in
repz
dec
cli
jno
add
and
xchg
inc
cmc
adc
dec
mov
rclb
mov
pop
ficompl
hlt
xchg
fwait
cmp
mov
mov
dec
mov
push
inc
popa
add
lods
ret
jae
push
sbb
mov
mov
cmpsb
nop
pop
add
inc
xchg
test
idivb
dec
pop
mov
clc
cmp
xor
dec
inc
in
mov
pop
mov
xchg
sbb
mov
sub
popf
inc
xorl
out
push
fsubrl
mov
fcomps
leave
and
dec
mov
pop
mov
mov
fstpt
popf
xchg
push
sub
xchg
mov
mov
mov
pushf
mov
pop
loopne
mov
mov
rcrb
pop
repz
and
pop
dec
sub
cmp
test
in
dec
mov
dec
in
mov
sarl
div
sti
mov
xorl
pushf
jo
mov
or
sub
adc
pop
and
add
xchg
and
ss
xchg
sbb
lahf
mov
and
mov
int3
mov
pop
jge
mov
ds
dec
sbb
jne
andb
sub
adc
outsl
mov
xor
lea
test
hlt
jbe
push
push
mov
sub
push
icebp
push
insl
fistl
jg
aaa
dec
add
stos
sub
into
mov
imul
xchg
add
dec
shl
repnz
ds
sub
repz
dec
mov
imul
sub
sbb
test
das
xchg
loope
and
inc
fwait
push
pop
inc
in
popa
add
adc
xchg
je
sub
lods
inc
dec
aas
mov
cmp
jp
pop
mov
mov
add
inc
pop
xor
mov
cltd
in
loope
andl
xor
mov
inc
test
ljmp
or
loope
mov
ja
fistps
cs
xor
test
icebp
jnp
add
cltd
mov
ret
int3
mov
cmp
mov
mov
inc
pop
rorb
lret
cmp
adc
push
mov
xchg
cmp
das
scas
mov
pusha
fs
mov
fimull
jbe
push
loop
sub
daa
and
loope
cld
and
mov
nop
push
repz
jbe
xor
sub
add
pop
push
out
xchg
xchg
jns
jge
pop
or
mov
in
sbb
mov
ret
mov
jge
jl
addr16
and
ss
xor
inc
cmc
dec
add
rcrl
push
push
mov
outsb
test
dec
dec
xchg
test
mov
inc
int
xor
shlb
mov
or
icebp
cmp
pop
into
mov
xor
insl
fxch
xchg
pop
mov
and
mov
inc
sub
and
push
cmpsb
mov
add
popf
ds
mov
sub
pop
push
sbbl
popa
mov
mov
xchg
fwait
cmpsl
leave
lock
push
mov
hlt
subl
mov
imul
rcl
cmc
mov
mov
mov
inc
adc
out
icebp
ss
lret
cli
mov
imul
adc
xor
cmp
loop
fmull
mov
pushf
gs
cli
mov
inc
test
pop
pop
mov
popa
cmp
and
fabs
sub
push
cmp
imul
jge
push
es
roll
dec
mov
adc
mov
mov
xchg
jg
fwait
push
xorb
das
pop
fildll
push
addr16
shll
movsb
mov
es
lret
mov
test
int3
xchg
lea
pop
mov
lods
lahf
fwait
adc
loopne
cmpsb
aas
je
and
ds
cmp
enter
push
test
jbe
dec
lock
pop
mov
xor
lahf
xlat
out
shl
es
and
test
insb
push
mov
inc
bndldx
inc
cltd
push
sbb
test
and
sub
mov
sub
dec
mov
sti
mov
jp
outsl
mov
and
nop
call
scas
adc
gs
bound
dec
dec
clc
mov
jnp
out
sbb
mov
push
mov
jg
addb
xor
jnp
xor
out
stos
xchg
sub
and
mov
jmp
movzbl
and
in
mov
sbb
cmp
pop
sahf
lea
movsb
inc
pop
stos
xchg
dec
cmp
pusha
xor
shr
push
mov
sarl
mov
ss
daa
out
mov
out
rorl
or
popa
pop
dec
test
sbb
ficompl
sbb
jnp
mov
aam
je
outsb
and
add
or
dec
jle
out
in
mov
out
jp
repnz
push
add
decb
jge
cli
xor
mov
stc
std
push
mov
sub
inc
sahf
aas
test
jne
pop
in
push
push
cmpsb
jno
lea
add
mov
mov
mov
adc
arpl
call
imul
popa
lret
push
mov
mov
push
xor
rcl
movsb
insb
xorl
std
mov
sarl
mov
sbbl
inc
xor
stos
push
mov
std
insl
adc
sub
dec
mov
dec
mov
sti
pop
lret
rorb
inc
out
and
inc
add
add
aad
mov
adc
pop
addb
pop
push
mov
xchg
scas
orl
movsb
repnz
or
xchg
fnstenv
sub
adc
stc
mov
mov
std
aam
int
cltd
insb
mov
cmp
or
orb
loope
fadds
xor
mov
jecxz
jnp
rclb
dec
inc
cli
push
mov
mov
mov
fcomps
scas
sub
xchg
inc
in
mov
push
xchg
add
adc
mov
out
and
addr16
mov
scas
pushf
mov
jb
ljmp
int
inc
ds
add
jecxz
mov
int3
hlt
pop
outsb
sbb
cs
in
std
xor
cmp
add
sub
mov
in
leave
xchg
jle
push
lock
xchg
fnstsw
out
xor
add
push
mov
and
add
mov
in
cmp
jg
mov
inc
dec
xchg
aam
loope
mov
aas
sbb
push
lea
mov
jle
cwtl
cmp
mov
inc
dec
cld
xchg
lea
add
dec
and
mov
adcb
and
sbb
xchg
inc
fwait
add
push
rcrb
ret
repz
push
dec
push
mov
adc
cmp
mov
mov
jge
pop
std
jle
sti
fdiv
stc
sub
jp
aad
mov
fiaddl
ret
mov
xor
fdivl
test
or
mov
or
jmp
sbb
subb
js
mov
xor
call
cmp
out
jne
mov
push
mov
mov
cmc
mov
jae
in
ror
out
bound
les
stos
push
mov
lahf
enter
xchg
movsb
jmp
cmp
aad
stos
fcmovnbe
pop
js
mov
cmp
jnp
dec
add
sub
aas
push
mov
sti
xor
mov
mov
inc
add
add
mov
shl
jo
js
fwait
mov
fisubrs
or
and
mov
in
divl
popf
sub
mov
inc
xchg
inc
xchg
mov
xchg
sbb
out
int
xchg
cli
inc
aaa
imull
sbb
adc
sbb
lahf
mov
push
jne
or
scas
and
jnp
aas
adc
jo
cwtl
ret
ja
aam
push
or
call
sbb
push
or
lahf
xor
mov
push
fstl
mov
shl
adc
ja
nop
imul
mov
das
mov
cmp
jb
xor
or
pop
mov
mov
push
test
mov
or
ljmp
fistps
mov
shlb
sub
fistps
stos
lods
inc
pusha
jle
mov
adc
sub
inc
cmp
arpl
outsb
xchg
leave
scas
and
ljmp
mov
pop
mov
sbb
mov
daa
mov
mov
dec
xchg
lret
paddusb
add
sbb
sar
out
scas
imul
mov
aam
push
mov
stc
push
add
sbb
mov
mov
sti
repnz
ljmp
sahf
inc
and
xor
pusha
daa
mov
mov
pop
dec
sub
mov
es
xor
xchg
loopne
cmc
lea
enter
test
jmp
jp
fldt
sub
subl
sub
dec
mov
xor
xchg
fidivrs
add
sub
add
je
xchg
in
mov
add
sbb
ds
push
cwtl
icebp
jle
das
sub
add
fwait
ret
pushf
xor
cmp
stos
movsl
lock
xor
popa
and
scas
test
andb
dec
sbb
mov
xor
testl
loop
mov
sub
mov
jge
dec
adc
in
sub
loopne
xchg
mov
out
imul
orl
mov
cld
or
xor
and
jo
cli
ljmp
lret
jne
dec
pushf
mov
jp
jle
mov
fmul
mov
loopne
scas
push
xchg
mov
sbb
fs
inc
mov
mov
cli
pop
in
stos
mov
lahf
fs
imul
sbb
movsl
rclb
jmp
repz
pop
stos
aaa
xor
test
test
dec
or
or
mov
pop
mov
mov
mov
fs
stc
pop
int3
sbbb
mov
rcrb
lret
mov
iret
push
out
mov
mov
sub
jmp
push
aam
decb
mov
inc
xor
mov
mov
jne
cmp
addr16
inc
lret
fldt
movsl
shl
out
into
jae
push
mov
sub
popa
popf
dec
xchg
jge
and
rcr
mov
jl
mov
cmp
xchg
movsb
or
push
sbb
and
pop
dec
mov
adc
call
addl
cmpsb
stc
xchg
add
in
mov
xor
aaa
and
movups
add
fsubs
test
mov
mov
aad
and
push
das
mov
push
sub
mov
fcompl
sahf
jb
jbe
add
rcrb
push
out
mov
adc
push
jb
xchg
dec
iret
rolb
mov
or
inc
and
scas
scas
cld
mov
dec
sub
pop
in
mov
leave
cs
addl
sarb
call
std
mov
pop
mov
lock
cwtl
xchg
jo
xor
lretw
rorl
pop
test
rorl
sbb
push
push
and
bound
mov
fsub
mov
fisubl
aas
adc
xor
add
dec
cmp
mov
cli
pop
pop
ja
hlt
mov
pop
and
or
sbb
movsl
jg
or
xchg
pop
push
cmp
cmp
insb
mov
push
sub
loopne
push
in
or
fldz
mov
int3
rcl
les
lds
out
dec
mov
jo
dec
addr16
xchg
and
stc
stos
and
mov
ljmp
mov
sub
repnz
jo
lock
add
imul
mov
inc
xor
push
and
dec
dec
test
scas
mov
mov
jbe
mov
addr16
adc
lock
fistpl
pushf
mov
sbb
imul
xchg
mov
bound
xor
cmp
lods
pop
xchg
push
jmp
xor
or
or
mov
sub
das
xchg
push
data16
sub
pop
pop
xchg
jle
xor
sbb
cmp
mov
push
sbb
xchg
jns,pn
inc
adc
icebp
sbb
leave
sub
xor
fcompl
fcomi
or
loopne
cltd
pop
inc
jecxz
sub
mov
stos
lods
es
ret
jo
or
cmp
loopne
hlt
call
stos
xchg
loop
out
clc
imul
jno
mov
mov
dec
or
mov
mov
push
repnz
fiadds
mov
jg
xor
stos
insb
mov
mov
jb
sbb
pusha
pop
les
pop
mov
push
push
mov
mov
jg
aas
repz
mov
and
data16
mov
flds
rcll
aas
mov
mov
ret
aam
je
jae
xchg
push
mov
add
ja
jg
movsl
mov
popa
mov
out
sbb
in
lahf
aad
add
test
sub
popa
stos
xor
or
cld
push
popl
jb
test
inc
inc
stos
lods
repnz
xchg
xchg
mov
or
sbb
mov
cmpsl
xor
add
cld
and
mov
cmpsb
frstpm(287
in
mov
and
cmp
mov
mov
sub
push
fsubrs
add
pop
fildll
aad
dec
push
mov
pop
push
hlt
cmp
icebp
mov
stos
xlat
sbb
mov
mov
push
push
pop
std
fldenv
xlat
mov
mov
in
jo
mov
jmp
aas
mov
stos
fsubl
mov
adc
imul
xchg
mov
lods
cmp
or
xchg
dec
mull
ja
mov
iret
mov
int
int3
or
js
loopne
adc
sarb
push
cmpsl
faddp
mov
xchg
jmp
push
xor
loopne
das
rcr
icebp
cmp
ss
dec
decb
pushf
sub
sti
sbb
or
cmp
stos
adc
inc
mov
xor
inc
cmp
mov
push
lea
std
pop
mov
dec
das
repnz
rorl
fbstp
cmp
fsubs
mov
into
mov
shll
add
lret
divl
test
or
ret
cmc
enter
mov
cs
mov
or
jae
test
add
imul
inc
push
fxch
mov
mov
and
xor
aas
roll
jmp
mov
cmpsb
daa
movl
stc
sti
shll
xchg
inc
int3
mov
mov
daa
pop
mov
je
sub
xchg
or
imul
push
or
mov
inc
dec
stc
xchg
dec
daa
jge
gs
loopne
or
and
call
out
lods
in
cmp
and
jbe
and
ss
fldcw
jae
sarb
xor
push
inc
in
mov
pop
mov
xchg
inc
lahf
mov
pop
sub
test
and
mov
jns
or
mov
lds
int
pop
js
cmpsb
lods
repnz
and
movsl
jp
or
push
cmc
cli
mov
mov
loop
sahf
js
lock
xchg
cmpsb
adc
adc
sub
adc
shl
aaa
mov
ret
ja
push
cmp
push
xchg
mov
lcall
addr16
imul
inc
cmpsb
in
shlb
dec
sub
xchg
fcoml
dec
std
cmp
jns
mov
mov
xor
out
lret
cs
or
sbb
out
ret
push
mov
cwtl
or
jle
mov
mov
mov
sub
into
sub
adc
rcl
ret
mov
test
push
inc
lret
mov
or
mov
insb
int3
cld
mov
rorl
mov
sbb
clc
push
xorb
adc
adc
mov
test
mov
data16
pop
inc
cmp
add
cmpsb
xor
aam
popf
jmp
roll
fbld
add
xlat
out
ret
stos
dec
sub
imul
and
ds
subl
sahf
std
jmp
mov
imul
mov
jnp
mov
sub
xor
dec
mov
mov
and
outsl
cmp
mov
xchg
mov
std
jmp
loop
adc
mov
cmpsb
cmp
mov
ljmp
adc
mov
mov
cmp
xor
gs
hlt
xchg
pop
add
jg
je
push
fstps
mov
and
push
mov
inc
fisttpll
movsl
add
jl
inc
jno
jne
cmp
pusha
lret
dec
loopne
mov
cmp
lods
xchg
xor
mov
sub
mov
dec
dec
cmpsl
and
enter
or
popf
andl
xchg
mov
mov
dec
jbe
or
lods
or
push
xchg
jge
rclb
lret
jns
xchg
repz
pop
fmul
insl
repnz
mov
add
bound
xchg
mov
inc
movsl
xchg
xchg
data16
inc
cmp
pushf
mov
lret
cmp
sub
mov
push
pop
push
cwtl
pop
rorl
fidivrs
xchg
mov
out
outsl
pop
mov
mov
sbb
mov
cwtl
mov
sub
out
or
shlb
insb
or
mov
inc
push
jo
ret
mov
in
data16
sub
rorb
jp
mov
ja
push
jecxz
faddl
ljmp
jge
push
dec
jl
sbb
movsl
mov
cli
bound
in
fwait
add
popa
adc
pop
xchg
jecxz
mov
imul
test
mov
mov
leave
lds
addr16
test
mov
adc
popa
mov
mov
js
pop
sahf
xchg
ja
fbstp
or
testb
cs
xchg
dec
adc
frstor
add
mov
cltd
mov
mov
mov
jmp
testb
inc
cmp
arpl
ret
xchg
mov
fimull
or
mov
and
testl
dec
push
movsb
mov
dec
dec
daa
mov
jl
push
call
leave
fists
mov
ret
loopne
subb
cwtl
setp
incl
mov
cmp
sub
out
push
or
jmp
mov
mov
xchg
call
jno
out
scas
xchg
out
mov
mov
xor
mov
jb
sahf
aad
rcr
push
dec
or
std
sub
stos
cmpsb
xor
fidivl
xor
add
adc
pop
cmp
movsb
nop
cld
and
shl
scas
mov
xchg
stos
ror
pusha
cmpsb
mov
push
cmp
mov
gs
out
xchg
dec
orb
add
cmp
jecxz
xchg
std
inc
or
leave
mov
int
cmpsb
sbb
pop
xchg
aam
mov
stos
insb
and
xchg
fistps
fldt
pop
mov
fdivp
into
xchg
mov
std
dec
out
xchg
out
xor
jmp
mov
pusha
in
lret
dec
mov
ds
sbb
aaa
insl
test
insb
jecxz
mov
cmp
mov
divl
cmpsl
xchg
jge
push
and
testb
shll
inc
mov
cltd
inc
lds
add
leave
test
ss
xchg
rorb
or
mov
sbb
jecxz
xor
subb
data16
pusha
mov
xchg
pop
sub
mov
cmp
mov
xchg
std
inc
push
dec
push
mov
test
jne
stos
pop
ds
filds
ljmp
xor
adcl
rclb
or
out
jns
jb
pusha
jg
sbbb
xchg
test
push
sti
xorb
jmp
hlt
out
mov
lret
xchg
int3
ret
or
xchg
cwtl
call
xchg
test
or
inc
in
inc
mov
fs
and
mov
jo
mov
adcb
add
mov
xchg
repz
lret
inc
addb
mov
adc
test
inc
es
pop
negb
inc
lds
mov
int3
inc
aam
dec
fsubrl
mov
fisubs
xchg
push
dec
fsubs
cmp
or
shl
pop
mov
in
cmpb
add
std
test
pop
repnz
mov
repz
cld
movsl
fwait
testb
imul
sbb
lea
call
or
push
sub
push
movsb
test
leave
cmp
jle
stos
push
mov
mull
mov
inc
movsb
fisttps
outsl
cwtl
jg
mov
or
or
sbb
es
jns
mov
imul
insl
sub
xor
repz
jg
stos
loope
out
mov
loop
push
mov
js
divb
mov
xchg
mov
adc
loopne
test
mov
inc
out
outsl
mov
jle
xor
xchg
cltd
mov
data16
loop
dec
sbb
xchg
dec
stos
stc
cmp
in
gs
or
repnz
icebp
jb
mov
jg
xchg
mov
push
xor
mov
leave
mov
mov
das
mov
mov
out
ds
xor
push
jmp
or
mov
inc
jmp
xchg
mov
insb
and
fwait
aam
lcall
jge
xor
rep
fcomps
les
sub
rorb
imul
xor
dec
imul
sub
jecxz
clc
mov
fdiv
pop
fwait
inc
or
mov
int
orb
out
pop
in
mov
inc
dec
pop
xor
add
add
inc
loop
cmp
or
cmp
xchg
movsb
mov
ja
push
sbb
test
in
pop
cmp
mov
push
addr16
and
mov
ficoms
insb
int
mov
push
mov
add
pop
andb
or
cmpsl
inc
xchg
cli
pop
data16
push
pop
imul
fwait
int3
mov
add
std
mov
mov
xor
add
cmpl
xchg
cmp
mull
gs
xor
pop
dec
push
dec
in
adc
int3
push
fwait
in
cmpsl
pushf
notl
lods
mov
xorl
xchg
mov
insb
in
mov
pop
cmp
push
jbe
mov
out
add
jae
pushf
or
out
jnp
ja
stc
sub
adc
je
test
outsb
cmp
cmp
pop
aas
xchg
jp
loop
cltd
mov
inc
jb
add
mov
addr16
jle
ljmp
push
sbb
jb
mov
test
clc
pop
sti
mov
xor
sub
sbb
bound
cwtl
mov
movsb
std
adc
xchg
shrl
test
lods
sbb
sub
adc
ss
mov
cmp
mov
test
push
ret
mov
stos
or
out
or
aaa
adc
xor
mov
rcll
mov
or
mov
dec
aad
sti
mov
cmp
mov
pop
mov
test
push
sbb
fisttpl
xchg
in
scas
popa
dec
into
xchg
in
mov
mov
add
lods
and
or
scas
inc
outsb
ljmp
rorl
mov
mov
in
pusha
cmp
jp
jg
lcall
int3
inc
lds
push
sub
mov
pop
out
aas
or
xor
mov
sbb
js
xor
mov
rol
pop
inc
bound
dec
stos
div
gs
sub
mov
xchg
or
add
rorl
push
inc
sbb
icebp
push
aas
subl
cld
adc
mov
adc
stos
mov
add
sub
dec
std
cmp
mov
pop
gs
mov
dec
xor
lret
push
or
sub
loopne
jg
pop
push
ss
dec
add
dec
push
push
icebp
cmp
rorl
frndint
mov
fimull
mul
add
xor
sub
push
stos
mov
mov
dec
insb
gs
mov
das
jge
xchg
push
mov
mov
cs
xchg
push
add
sub
sbb
add
cmp
orb
scas
push
stos
gs
int
mov
sbb
rol
ja
std
xchg
call
scas
iret
or
out
jecxz
push
popl
fs
adc
out
inc
xor
mov
shrl
mov
jl
xor
inc
test
mov
add
rclb
push
or
les
or
xchg
movsl
int
sub
xchg
jg
rcrl
bound
outsb
dec
mov
mov
cmp
or
call
xchg
int
mov
lret
dec
fidivrs
cmpsb
mov
cs
add
shr
sbb
int3
mov
lods
popf
shlb
das
or
in
test
jnp
mov
mov
dec
movsb
int
xlat
fcomi
dec
testb
repz
ficoml
or
mov
ret
icebp
cmp
rclb
rol
adc
fstl
dec
mov
mov
insl
xchg
jmp
stc
mov
ljmp
ret
jbe
sbb
mov
les
jecxz
sub
dec
mov
loope
in
cmp
das
add
xchg
sub
je
psubusw
rolb
xchg
pushf
jnp
movsb
xchg
sbbb
jle
fstpl
mov
mov
idiv
mov
jge
sub
xor
lret
in
insl
dec
pushl
sbb
and
hlt
xor
fimull
inc
jecxz
movsl
sbb
rcrb
fisttpl
sub
xor
cmp
jg
mov
hlt
xor
sbb
bound
ljmp
xor
pop
dec
inc
mov
test
add
fcomip
xor
push
pop
fwait
jnp
mov
subl
sub
and
inc
outsb
sarl
xchg
jecxz
out
rorb
aam
xchg
nop
mov
push
xor
sbb
mov
adc
lret
das
mov
xor
ljmp
jae
pop
out
cmpsb
mov
push
rclb
cmpsb
inc
fwait
jmp
addr16
push
dec
in
sbb
adc
xchg
fnstcw
add
test
fldt
fnstsw
jae
cmpsl
adc
testl
sub
sbb
lods
cmp
jge
les
add
mov
test
mov
inc
jnp
insb
mov
ficoml
jge
cmpsb
orb
mov
jmp
sbb
mov
sahf
lret
or
and
cmp
jnp
mov
jmp
movsb
ret
and
iret
and
ss
inc
fdivr
sbb
repz
or
push
cmc
and
roll
addr16
or
xor
cwtl
lret
mov
mov
out
pop
outsb
iret
add
mov
mov
adc
pop
mov
into
pushf
jecxz
stos
movsb
pop
mov
imul
push
mov
cmpsl
xchg
in
push
jmp
dec
xor
dec
cmp
test
or
pop
ret
adcb
mov
dec
out
lret
cmc
dec
mov
mov
adc
push
xor
mov
ficoms
xlat
in
adc
nop
aas
inc
dec
cld
fwait
xor
dec
mov
jno
xor
aaa
jne
outsb
mov
cmp
dec
insl
mov
out
adc
xchg
mov
or
sbb
mov
or
mov
rorb
repz
leave
add
mov
in
sarb
jo
std
leave
imul
xlat
mov
adc
gs
mov
inc
and
loop
sub
inc
xor
or
fcompl
mov
adc
orl
lods
stos
dec
pop
dec
mov
jbe
and
sub
mov
pop
mov
movsl
das
add
sbb
mov
stc
icebp
mov
add
push
cs
movsb
adc
cs
ret
mov
fnstsw
sub
add
and
or
dec
xor
add
daa
lds
push
or
inc
pop
dec
mov
pop
push
mov
mov
adc
pusha
pop
mov
sbb
mov
adc
aad
mov
inc
jbe
les
xchg
cmp
aam
test
mov
incb
add
data16
push
push
xchg
aad
push
std
or
inc
pusha
inc
xchg
cs
mov
push
cmpsb
jg
scas
hlt
push
jnp
add
jecxz
push
inc
pop
aaa
mov
adc
mov
out
enter
xor
mov
pop
jle
mov
mov
rorb
ja
arpl
pop
push
shlb
sub
jl
push
in
mov
add
addr16
pop
jge
jbe
xor
shll
cld
and
mov
andb
leave
out
sub
mov
rorl
dec
xchg
rorl
pop
lcall
push
add
fcompl
mov
mov
fs
inc
mov
pop
sub
ds
ret
faddl
xchg
xchg
inc
inc
xchg
jecxz
icebp
stc
movsl
adc
pop
pop
sahf
add
popa
shlb
mov
xor
pop
fcom
jmp
test
mov
mov
jo
stc
outsb
test
push
sarb
push
push
cmc
add
mov
leave
sbb
push
lock
movsl
sub
shlb
mov
mov
movsl
pop
arpl
fildl
int
jl,pn
subb
cmp
test
sbb
test
subl
sub
jg
arpl
mov
and
sbb
negb
inc
mov
adcl
into
mov
stc
mov
push
rorl
mov
popf
test
stos
aaa
lods
js
mov
mov
outsl
xchg
lods
add
jecxz
xchg
mov
daa
dec
addr16
add
mov
loop
jae
push
cwtl
mov
pop
rorb
lock
subb
shll
mov
lds
push
mov
sub
mov
inc
sbb
imul
and
mov
test
stos
int
mov
xchg
gs
nop
xorb
and
dec
push
inc
or
cli
test
mov
pop
adc
les
cmpb
test
push
cwtl
out
sti
or
add
cmpl
imul
mov
mov
dec
movsl
ljmp
mov
or
outsl
lds
dec
mov
sbb
add
inc
lahf
stos
imul
or
mov
out
mov
scas
out
xor
jo
shll
push
xchg
xchg
inc
adc
cs
mov
mov
mov
xor
sub
jge
ja
xchg
jle
xchg
jp
inc
or
rorl
mov
cmp
sub
adc
insb
pop
sub
fistps
dec
iret
or
fs
push
stos
jbe
fwait
movsl
add
jae
dec
mov
fisubrl
mov
jg
dec
stc
cld
inc
loop
repnz
mov
imul
push
in
mov
mov
movsb
sbbb
add
dec
sbb
pop
testb
pop
and
xchg
cwtl
pop
inc
mov
xchg
aas
mov
adc
shrl
lock
add
rorl
lret
rorl
repz
rorl
enter
xchg
sbb
lds
push
pop
sti
mov
mull
mov
iret
jbe
std
and
mov
add
dec
jns
sbb
shrl
xchg
jmp
mov
rcrl
nop
movsl
std
fwait
mov
pop
lret
add
mov
mov
incb
add
xor
mov
mov
jne
cmpsb
xor
cmc
sbb
sbb
stos
rsqrtps
aaa
stos
outsb
inc
nop
mov
int
push
fsubrl
cmp
inc
inc
sub
loop
call
rcrl
dec
pop
inc
pop
popl
mov
gs
adc
popa
loopne
loope
std
mov
xor
fldcw
cs
or
mov
mov
inc
out
mov
ret
jl
jae
je
jbe
xchg
icebp
imul
sti
enter
mov
mov
mov
push
lcall
in
xchg
mov
mov
mov
fsts
int3
cmp
xchg
dec
fstp
push
testb
lcall
stos
mov
arpl
or
das
rorl
rcrb
mov
push
sbb
out
hlt
mov
adc
rolb
icebp
xor
xorb
neg
adc
nop
int3
xchg
dec
out
hlt
nop
insb
mov
inc
fwait
scas
jecxz
test
xchg
xor
sbb
movsb
inc
shll
jne
xchg
add
push
loopne
pop
and
or
mov
rcrb
xchg
outsl
in
movsb
push
ret
lret
sti
xchg
outsb
mov
dec
pop
jno
add
xchg
xchg
mov
icebp
ljmp
adc
inc
mov
dec
mov
mov
out
mov
andb
lret
jb
jne
inc
or
mov
pop
push
jle
mov
clc
push
ss
xchg
mov
sub
jns
repz
jmp
mov
dec
imul
inc
or
sub
jle
leave
mov
sbb
aas
cmp
movsl
xchg
jbe
fdivp
jg
test
fistpl
and
lds
mov
and
push
cmpsb
mov
ret
mov
pop
dec
mov
mov
outsb
or
pop
mov
pop
stos
pop
sbb
jo
sub
fucomp
std
lcall
mov
movsb
jl
mov
push
in
loop
in
mov
daa
inc
xchg
xor
mov
adc
out
or
pop
inc
pop
stc
push
mov
in
jl
adc
pop
ss
stos
xchg
dec
mov
add
inc
push
rolb
daa
xlat
mov
cwtl
mov
pop
jg
out
incb
aam
mov
xor
mul
dec
xlat
xchg
sbb
adc
cltd
inc
adc
les
xchg
inc
jae
sbb
ret
mov
insw
fimuls
jp
lds
jecxz
cltd
mov
mov
ds
rcrl
add
adcl
push
mov
sbbb
mov
cmc
leave
xchg
stos
js
lods
mov
mov
mov
mov
cwtl
movsb
sub
and
mov
mov
lock
int
addr16
jge
sub
scas
insl
iret
mov
cmc
sub
aam
mov
pop
stc
xor
sub
mov
xchg
dec
inc
adc
bound
cwtl
push
sub
enter
dec
cmpsb
mov
fstpl
mov
mov
jns
imul
pop
mov
push
mov
cld
jo
sub
mov
cmc
sahf
pop
and
nop
inc
loop
mov
std
stos
inc
mov
add
dec
mov
sar
js
fisttps
icebp
inc
rcrl
xchg
and
and
in
lcall
aam
pop
lock
fwait
es
cmp
xor
push
pop
lods
mov
hlt
ja
jbe
xor
sub
addr16
and
jbe
pop
scas
test
jb
mov
xchg
mov
mov
sub
push
jo
jmp
add
cmpsl
mov
popf
sbb
repnz
movsl
or
mov
mov
ds
stos
imul
sub
pop
or
stos
push
mov
jmp
or
sbb
push
mov
sub
aaa
mov
jp
mov
cmpsb
imul
adc
in
int3
iret
push
rcrl
xchg
push
jmp
mov
out
mov
jge
jae
add
mov
mov
mov
xchg
push
xchg
sarb
mov
mov
inc
fnsave
and
mov
or
cmp
dec
or
ret
mov
or
xchg
or
imul
ss
popf
mov
sbb
movsl
sahf
sbb
xor
lds
addb
push
and
sti
cmp
pop
test
xor
pushf
sbb
mov
mov
push
mov
dec
in
inc
jmp
popa
mov
push
add
addl
and
sbb
fstpl
in
test
add
mov
mov
rcrb
fisttps
xchg
inc
mov
aam
mov
mov
stc
test
fnstsw
inc
shrl
xor
mov
push
test
mov
xchg
pop
ds
mov
lods
outsb
popf
mov
inc
test
lods
movsl
icebp
sbb
lret
aas
outsb
mov
sbb
mov
xor
mov
xchg
js
pop
xchg
sub
push
or
xor
mov
pop
lret
pop
fwait
cmp
jb
mov
xchg
mov
or
mov
xor
pusha
ret
jnp
mov
xor
xchg
xor
es
rorl
push
addr16
pop
pop
aad
fldcw
out
lret
icebp
lret
lea
cwtl
pop
and
mov
imul
fisttpll
mov
xchg
xchg
imul
sub
jecxz
and
fwait
add
and
add
call
push
pop
mov
xor
leave
lahf
xchg
mov
or
push
lock
mov
xor
mov
mov
adc
cmp
pusha
mov
cmp
lods
subl
movl
mov
movsl
dec
fldenv
fisttps
jns
pop
xchg
or
push
cmp
lods
ret
pop
dec
fidivs
adc
outsl
add
sbb
jae
xor
or
pushf
shlb
jmp
arpl
jo
mov
mov
add
mov
std
jp
mul
mov
pop
jmp
mov
xlat
adc
jp
xor
pop
sti
lret
dec
aad
push
mov
mov
dec
mov
mov
pop
inc
mov
sbb
xor
push
pop
sbb
mov
pop
int3
mov
aam
inc
add
dec
add
imul
loope
popa
sub
mov
mov
cmpsb
repz
mov
in
sbb
mov
add
sbb
inc
jo
mov
mov
bound
fcmovnu
or
sbb
fdivrp
fmuls
jmp
mov
push
mov
fsubl
es
xor
cwtl
iret
jno
repz
into
cmp
push
imul
imul
enter
jge
inc
outsb
cmpsb
mov
sti
mov
cmpl
inc
iret
jecxz
jae
cmp
mov
and
add
pop
clc
xlat
roll
add
gs
int
add
dec
fcompl
fisubrl
fwait
mov
cmp
std
mov
scas
xor
movsl
imul
adc
lahf
xchg
pusha
add
jb
in
ljmp
lods
lds
popa
loopne
pushf
int3
mov
outsb
mov
shrb
orb
movsl
stc
mov
or
cmpsb
fs
sbb
and
pop
and
mov
popf
jg
fucomip
ja
imul
lock
cmp
add
mov
movsb
sub
hlt
and
mov
or
fidivl
mov
lret
sbb
ja
dec
arpl
idivl
pop
mov
xchg
mov
add
xor
imul
jnp
in
imul
or
lahf
mov
cmpsl
aam
in
loope
jnp
push
sub
fisubrl
aas
pop
sbb
imul
mov
fs
ret
xor
mov
loope
push
xor
je
out
mov
inc
decb
leave
sub
mov
mov
xor
fidivl
sarl
out
mov
mov
jmp
cmpsl
lahf
xchg
stos
in
mov
imul
xor
mov
ficoms
loop
imul
mov
sbb
push
add
mov
or
pop
in
sbb
arpl
loop
mov
jo
mov
sbbb
jecxz
or
push
test
bound
sub
ret
mov
xchg
cmp
mov
loopne
jns
xor
xlat
cmpsb
adc
push
lret
mov
js
out
movsb
movsb
and
test
mov
push
mov
shrl
bound
mov
aaa
jmp
mov
sti
movsb
pop
pop
stos
out
mov
inc
andl
mov
xchg
cld
inc
pop
popl
mov
sub
sbb
mov
sub
ret
loope
and
sbb
outsb
jo
les
adc
add
xor
push
lea
dec
mov
push
jecxz
repnz
mov
cmp
cmpsl
loop
mov
mov
ds
lret
outsl
jno
mov
jo
rcrl
sbb
rorb
pop
or
daa
or
ljmp
aas
mov
clc
add
mov
push
negl
mov
add
add
push
scas
mov
fstl
fnstenv
fs
mov
push
in
movsb
xor
aam
and
and
or
idiv
pop
xchg
shl
inc
dec
pop
mov
je
das
mov
sbb
cmp
cli
addb
inc
les
cs
scas
out
mov
xor
sbb
jae
sbb
repz
imul
lds
lahf
stos
adc
repz
push
mov
sbb
xor
push
ss
test
test
cmp
sub
sbb
mov
das
mov
cmpsl
repz
xchg
xor
pop
xchg
inc
test
sbbb
rcr
aaa
mov
adc
ret
loope
mov
pop
xlat
sbb
add
sub
addl
movsl
imul
dec
hlt
rcl
fwait
ds
ljmp
das
pop
fs
mov
or
repnz
sbb
orl
sbb
cmp
lods
add
or
rorl
dec
rorb
mov
testb
ja
pop
mov
imul
fnstcw
jge
rclb
sub
cmp
inc
andl
mov
sbb
xchg
adc
loopne
dec
movsl
xorb
pushf
sti
push
rcll
or
lds
cmc
and
pushf
addl
add
imul
and
xorb
cwtl
mov
icebp
xchg
mov
mov
pop
xor
mov
mov
pop
or
jge
mov
jle
push
xor
pop
inc
mov
leave
mov
sbb
xchg
mov
push
ja
push
mov
mov
mov
push
and
imul
fstpl
mov
mov
nop
jae
mov
inc
loope
les
mov
adc
mov
fisttps
or
xor
idivl
nop
rclb
xchg
fisttps
xor
cmpsl
or
clc
xchg
mov
jg
jb
lret
sbb
mov
and
sti
mov
test
lret
cld
add
mov
rcrl
xor
mov
pop
pop
adc
xchg
out
jne
sbb
mov
or
mov
sub
push
iret
or
imul
mov
leave
pop
cmp
mov
sub
pop
add
aaa
repnz
mov
inc
sub
les
movsb
pop
add
and
js
add
outsb
scas
inc
popf
mov
mov
sub
and
icebp
cmp
cmp
add
jmp
stos
aas
push
dec
cmp
pop
and
push
and
dec
or
jge
lahf
loop
stos
cmp
mov
scas
pop
cmp
and
pop
lods
inc
rclb
xchg
fwait
lods
sbb
pop
dec
jmp
jle
ds
xor
ret
fwait
adc
add
out
push
clc
pop
out
jbe
xchg
movsl
fwait
cmp
pop
mov
mov
push
shrb
mov
in
xor
repnz
clc
stos
cld
sub
mov
mov
or
call
pop
addb
adc
lock
sbbl
mov
stc
add
imul
push
and
mov
out
cmp
jl
jl
xchg
sbb
je
mov
and
lea
sbb
mov
xchg
mov
scas
jno
mov
cs
or
fldcw
hlt
mull
call
dec
pushf
or
inc
mov
cmpsb
xchg
clc
enter
mov
aaa
lods
ljmp
das
push
jecxz
jns
sbbl
inc
sbb
test
xor
pop
mov
arpl
jo
mov
test
fisttpll
push
scas
testl
mov
mov
push
lcall
into
stos
and
add
dec
add
lock
add
les
xchg
mov
cmc
xchg
arpl
movsb
xor
cmp
data16
cmpsb
ficoms
test
push
lahf
or
mov
movsl
mov
fimull
xchg
mov
mov
jo
in
push
fdivrl
sbb
push
dec
movsb
test
and
lret
xchg
pop
xchg
pop
shr
adc
mov
or
dec
cmp
mov
xor
xchg
ss
ret
neg
pcmpeqw
les
sbb
pop
mov
inc
cmp
icebp
mov
aad
xchg
mov
shlb
popa
mov
jns
adc
xchg
neg
mov
mov
dec
or
rcr
jmp
call
sub
adc
sahf
xchg
and
jp
sub
xlat
sbb
stos
mov
jp
shlb
add
popl
out
sbb
aad
movl
push
sti
icebp
nop
or
inc
out
cld
in
xchg
out
adc
xorl
mov
mov
mov
pop
sahf
pop
mov
inc
push
jmp
lahf
mov
mov
call
loop
dec
aaa
xor
jg
aaa
in
xchg
inc
ret
dec
cmp
ret
mov
xchg
das
and
adc
mov
cmp
lahf
pop
sahf
sbb
cwtl
daa
cmpsl
iret
xlat
fstps
stos
sub
push
aad
aaa
add
loope
rcll
pop
sbb
mov
pusha
shrb
addr16
xchg
cmp
mov
xchg
xor
mov
cmp
add
or
in
les
xor
inc
xor
popa
mov
xor
cmpsb
mov
test
cmp
and
xchg
stos
jle
popa
xchg
in
shll
or
and
lea
inc
mov
adcl
inc
mov
icebp
inc
ficomps
nop
xchg
popa
aas
jae
or
xor
mov
dec
pushf
test
mov
mov
xchg
in
adc
push
hlt
jb
and
imul
dec
add
or
xor
dec
mov
dec
or
pop
mov
sub
testl
outsl
lahf
jbe
rorl
cld
and
shlb
mov
or
add
cld
mov
or
or
mov
push
insl
lcall
mov
div
cld
or
fdivs
sbb
stos
mov
pop
adc
popa
mov
dec
outsl
push
mov
imul
mov
mov
pop
or
dec
cmp
mov
aas
test
cli
inc
xor
adc
in
mov
das
or
in
leave
and
xor
push
mov
push
adc
in
movsl
adc
mov
mov
sbb
fsubr
cli
xor
out
and
cmp
out
or
int
sti
gs
jns
jg
mov
fisttps
cmc
mov
mov
and
sub
fists
jbe
cmp
lcall
stos
cld
add
pop
pop
xor
dec
aas
repz
mov
mov
jb
test
xchg
inc
dec
pop
adc
mov
jecxz
jmp
outsb
mov
cmp
mov
sbb
icebp
pop
xchg
mov
fsubl
leave
jne
shrb
adc
and
sahf
sti
mov
sbb
pop
pop
sbb
mov
pop
shr
jo
mov
cmp
lret
imul
sub
insb
inc
pushf
popa
sub
inc
les
nop
jne
adc
cmpsl
xchg
or
add
cmpsb
and
nop
sbb
adcl
mov
dec
push
aad
aaa
push
nop
jp
jl
jg
push
or
fcmovbe
jae
xor
add
loop
pop
mov
mov
xchg
xchg
or
xor
adc
incl
mov
outsb
daa
fwait
leave
add
dec
mov
ficompl
mov
add
xchg
dec
or
fcomps
cmpsl
lret
add
cmp
jle
xor
cwtl
mov
shl
push
cmp
out
push
into
add
ja
pop
fldln2
pop
pop
or
hlt
lahf
clc
cmp
push
xorb
ror
pinsrw
fldenv
sbb
mov
push
push
std
inc
cmc
sub
cld
in
push
inc
mov
in
dec
sbb
mov
push
sbb
mov
shrl
mov
in
xor
les
cmp
jb
lea
add
jmp
rolb
scas
sbb
jb
les
rclb
fidivrs
pop
push
push
orl
test
popf
lds
jg
inc
cwtl
rorl
inc
mov
push
jmp
pop
popa
push
mov
dec
mov
leave
out
xor
and
movsl
fwait
aas
aaa
jae
ljmp
add
jmp
clc
popf
mov
repnz
int3
pop
fimull
icebp
and
pop
jg
cmpsb
std
data16
rorl
shl
mov
mov
inc
mov
fildll
test
mov
in
outsl
pop
pusha
shll
int3
mov
jbe
push
cmp
roll
push
orb
mov
popl
adc
cs
add
adc
cmc
dec
or
sub
mov
lea
inc
sub
imul
out
rclb
mov
inc
jo
cmp
mov
int3
jns
and
mov
stos
jo
movb
mov
push
mov
test
dec
jns
push
mov
cltd
dec
add
imul
mov
xor
pop
mov
pop
scas
cmp
out
ds
pop
test
hlt
push
pop
loope
fisttps
fidivrl
testb
dec
iret
lret
and
and
xlat
mov
aas
sbb
xchg
pusha
jle
dec
leave
xchg
test
nop
aam
push
fcomi
jmp
mov
pop
ret
sub
jg
jecxz
xchg
push
xlat
dec
cltd
fimull
mov
movsl
cmp
fistpl
mov
mov
inc
imul
out
mov
sub
movsl
repz
dec
daa
adc
movsb
cs
and
mov
jbe
dec
cmp
outsb
mov
or
mov
decb
sub
mov
mov
ret
xchg
pop
mov
mov
icebp
sbb
loopne
fistpll
sbb
mov
sub
pop
mov
bound
push
pushf
fmuls
rcrl
xor
push
jge
lock
jne
add
in
mov
add
mov
mov
mov
and
iret
cmp
out
loop
xor
shrb
jo
pop
cld
les
mov
cmp
stos
rcll
adc
out
into
xchg
aad
cwtl
loop
dec
pop
add
pop
pop
cmc
sbb
mov
push
add
jae
aas
mov
xor
and
divb
scas
inc
or
les
rcr
sbb
cmc
mov
xor
scas
xor
or
in
adc
and
push
cmp
pop
cltd
aaa
pop
sbb
push
inc
test
add
ss
lret
stos
mov
and
shll
mov
push
mov
cmc
repz
xchg
pushf
sbb
out
push
cmpsl
xor
das
xor
pop
sub
pusha
fmulp
mov
mov
sar
adcb
adc
ljmp
and
push
mov
mov
push
dec
bound
mov
push
cmp
push
fs
ret
mov
jmp
jnp
fmull
or
xchg
inc
mov
cmp
jecxz
or
adc
mov
inc
xchg
fisubl
inc
mov
test
xchg
ds
jmp
and
ret
sub
mov
lds
mov
fldt
jp
or
data16
inc
loope
imul
or
mov
popa
ss
adc
mov
scas
sbb
in
out
sbb
inc
inc
fwait
pop
xchg
push
lods
outsb
push
loop
stos
mov
hlt
pop
push
adc
sub
arpl
mov
sbb
adcb
enter
js
push
mov
sub
sarl
push
adc
inc
rolb
scas
xchg
cmp
inc
push
mov
inc
inc
fwait
adc
fildl
mov
mov
jl
add
notb
imul
adc
or
xchg
das
pop
lret
sub
cmp
fbstp
enter
xor
int
or
loopne
pop
or
mov
pop
or
inc
lret
hlt
adc
xchg
adc
cmpsb
sahf
popa
dec
push
or
insb
jbe
mov
cmp
das
ds
jle
and
mov
pop
incl
loopne
jae
adc
ficoml
cmp
imul
and
cs
or
xchg
or
jne
iret
mov
aaa
aad
lea
ret
fs
notb
dec
fsubl
fcomp
ljmp
out
xor
xor
mov
call
cmpsb
jmp
xor
mov
add
pop
inc
out
adcb
cmp
movsl
fistl
mov
push
pop
repnz
xchg
adc
maxps
jecxz
data16
movsb
imul
fs
scas
cli
sbb
aaa
pop
je
les
mov
add
cltd
mov
push
sub
popa
add
sti
orb
jae
xor
mov
mov
rclb
sbb
mov
shrl
add
aam
sub
mov
mov
mov
insb
sbb
lea
or
or
xchg
out
mov
std
ja
aam
inc
cmp
xor
mov
pop
out
ja
aad
cwtl
xor
ret
add
decl
mov
shl
dec
xor
push
mov
dec
daa
lcall
inc
iret
xor
mov
loope
mov
js
cmp
and
dec
cmp
and
in
inc
cmp
jl
idiv
and
and
inc
cld
mov
out
stc
sub
sub
add
or
mov
jmp
xchg
xchg
loop
cmp
arpl
pop
pushf
push
lods
aas
add
cmpsb
cmc
enter
pop
lret
jnp
push
aam
and
jle
cmpsl
test
push
xchg
fcmovnbe
lahf
pop
fisttpll
imul
jo
mov
jmp
mov
cld
xor
xchg
or
mov
jne,pt
mov
div
cvttps2pi
out
cli
and
pop
pop
das
xchg
sbb
ffree
or
addr16
pop
aam
test
sbb
insb
enter
mov
mov
mov
sbb
and
fcom
jnp
mov
push
jge
rorb
prefetchw
cmp
aaa
xchg
dec
inc
aad
add
mov
sbb
movsb
xchg
jge
es
mov
fs
mov
or
adc
sub
btc
mov
jno
mov
repnz
sbb
lods
mov
nop
loopne
push
hlt
orb
ret
mov
mov
cmp
or
ficomps
ss
shll
mov
mov
cmp
aad
test
adc
cltd
dec
ficompl
lcall
mov
mov
gs
xor
add
jnp
or
bound
shll
jge
push
int
push
and
lds
loope
xor
sbb
mov
jmp
lret
xor
pop
mov
mov
push
add
mov
loopne
mov
cmp
xchg
mov
add
hlt
dec
push
movsb
mov
das
or
neg
xor
adc
jb,pn
clc
and
xchg
sbb
mov
jne
pop
adc
test
orb
pop
add
sub
mov
cmp
daa
xor
test
pop
mov
push
outsb
pop
int3
mov
mull
xchg
cmp
ljmp
mov
cmp
mov
dec
shll
mov
dec
fsubrs
pop
xor
jne
add
pop
stc
ds
xchg
or
in
jns
jp
bound
mov
adc
aad
pop
adc
arpl
rolb
dec
xlat
mov
idivl
loop
mov
outsb
decb
add
outsl
dec
cwtl
adc
orl
sbb
sub
mov
repnz
out
stos
lds
jae
push
in
pop
mov
and
lock
iret
mov
mov
jbe
jl
gs
adc
mov
ljmp
jg
jo
mov
out
pop
ds
pusha
lods
sbb
or
mov
inc
xchg
mov
ret
bound
or
pop
shll
mov
out
sub
addr16
mov
fiaddl
ret
fwait
fwait
sbb
stos
mov
dec
dec
cmc
dec
jb
in
xor
addr16
sub
sub
mov
or
hlt
xchg
mov
call
mov
push
outsb
add
cld
and
test
mov
subb
pop
cltd
mov
jbe
and
jnp
cmpl
pusha
pusha
not
les
xchg
dec
out
cmp
sbb
sub
xchg
aas
mov
jle
mov
inc
ljmp
loop
pusha
mov
mov
ds
imulb
clc
repz
cltd
sarb
mov
ret
xor
mov
shll
jle
jne
fsts
out
lcall
mov
push
popa
xchg
mov
test
jo
cmpsb
bnd
xor
mov
lods
pop
push
or
mov
jnp
stos
nop
idivl
xor
or
lahf
aas
decl
xor
adc
push
sub
sub
in
fisubs
out
xor
xor
dec
fisttps
cld
mov
inc
push
mov
dec
lea
in
loop
mov
xlat
xchg
aaa
lea
movsl
dec
dec
xchg
cmp
mov
insb
add
cmp
mov
dec
mov
popf
lea
sbb
sbb
insb
jns
jl
sub
fimuls
add
orb
pop
movsl
or
dec
stos
ja
ljmp
cmp
lea
fisubrs
jae
xlat
and
jno
add
mov
mov
lods
jge
lds
and
repnz
ljmp
subl
pop
and
movsb
gs
push
push
iret
xchg
pop
mov
push
or
push
fcoms
fsubp
mov
addl
mov
lret
roll
push
jge
push
mov
das
adc
insl
mov
add
adc
mov
sbbl
mov
shlb
fiaddl
cmp
sub
mov
pop
inc
jns
sub
lret
mov
inc
lods
test
rcrb
ss
dec
mov
or
lock
mov
sarl
data16
ret
mov
push
lret
pop
mov
inc
fisttps
pusha
inc
cmc
cld
lahf
js
jbe
mov
fmul
pop
jmp
mov
mov
iret
push
inc
cli
add
dec
push
xor
dec
inc
aad
jle
cltd
mov
add
scas
add
xor
adc
lret
and
mov
ret
fmuls
sub
das
mov
sahf
xor
aam
mov
test
addb
push
xchg
cs
add
fwait
xor
pop
xor
lret
imul
cmp
dec
daa
ss
push
cmpsb
mov
inc
dec
xor
loop
add
jae
mov
mov
lock
mov
loope
mov
fisubrl
addb
gs
mov
jbe
pop
scas
nop
mov
mov
mov
das
lock
and
movsl
lret
mov
xchg
push
in
loopne
sti
mov
ja
xchg
or
movsl
lret
aaa
push
xchg
idivl
jae
dec
mov
xor
mov
dec
shrb
cmp
pop
cmc
cmp
mov
add
mov
add
dec
mov
sub
lock
je
fwait
push
mov
int
inc
or
movsl
faddl
cmp
cs
shlb
adc
xor
jnp
mov
cmp
mov
sar
mov
xchg
add
xchg
sub
and
mov
rcll
scas
fdivrs
mov
fwait
lahf
das
xchg
pop
xchg
mov
mov
jp
and
add
loop
xlat
movsl
rorl
jmp
mov
ficomps
test
cmpsb
mov
add
or
out
mov
sbb
div
inc
mov
jmp
lret
icebp
outsb
mov
lret
adc
xor
fists
add
and
mov
dec
add
mov
or
inc
mov
jb
sahf
popa
rclb
or
mov
add
mov
pop
icebp
mov
xlat
fists
push
cmpsb
jne
lods
sub
mov
clc
and
cmp
movsl
ret
repz
xchg
in
iret
std
inc
sub
mov
inc
cmpsl
mov
mov
sti
pop
sbb
xor
movsb
mov
mov
in
cmc
repnz
adc
mov
fwait
scas
icebp
sub
lahf
lea
sahf
pop
dec
pop
jg
add
or
cli
sbb
clc
arpl
mov
jnp
rorl
inc
mov
iret
cmp
int
adc
xchg
cld
aaa
inc
pop
xchg
lds
pushl
cwtl
cmp
mov
pop
jp
into
mov
test
ss
pop
das
cmp
xchg
inc
out
aas
test
data16
dec
sbb
leave
popf
add
mov
fistpl
flds
mov
popf
movsl
mov
mov
ljmp
outsl
out
inc
inc
inc
pop
mov
mov
sti
sub
pop
pop
stc
jb
push
bound
add
add
movsl
sub
cli
inc
mov
add
test
xor
icebp
cmp
enter
out
mov
mov
push
inc
mov
in
daa
cmpsl
negb
jmp
rorb
pop
mov
xor
dec
xor
push
sbbl
inc
adc
mov
outsl
mov
pop
xor
xor
das
cmp
dec
push
and
adc
fisttps
popa
addr16
mov
in
mov
repnz
pop
mov
cld
shrb
mov
call
and
xlat
ret
mov
jecxz
fisttpll
cmpsb
xor
jae
cmpsb
pop
push
out
dec
mov
jecxz
mov
rolb
xor
in
mov
cmp
jge
loopne
movsb
mov
xor
mov
add
repz
pop
hlt
push
cli
cwtl
mov
xchg
mov
lcall
je
imul
mov
and
pop
fcom
mov
mov
stos
dec
cmpsw
cmpb
sbb
add
add
sub
leave
xchg
mov
dec
mov
filds
cmp
orl
mov
cmp
sbb
cmpsl
adc
notb
mov
adc
insl
cmpsb
jg
xchg
mov
dec
jb
sbb
push
je
sub
xchg
repnz
mov
jo
mov
xchg
fdivs
addr16
mov
xlat
testl
cld
or
push
ss
imul
add
and
xor
mov
mov
aad
fistps
pop
cs
mov
nop
loope
mov
xlat
jbe
adc
inc
xchg
xor
pop
aaa
bound
cmp
sub
pop
xchg
sbb
enter
shrl
fwait
lahf
int3
xchg
push
mov
repz
xchg
dec
mov
inc
pop
stos
ljmp
jmp
pop
cmp
jbe
sub
aaa
movsl
fwait
or
fisttpl
imul
inc
adc
add
loope
fs
mov
in
fbstp
aaa
lock
or
xor
mov
fs
cmp
pop
or
ja
daa
divl
mov
aad
fcomps
mov
pusha
adc
mov
aam
in
cmp
xchg
mov
mov
fcmovnbe
or
xchg
in
xor
dec
scas
mov
imul
shlb
jns
daa
mov
hlt
pop
mov
icebp
ljmp
fcomp
lods
mov
pop
lock
fisttps
cs
mov
daa
out
mov
and
pop
sub
cmp
enter
inc
cwtl
sub
stos
jl
insl
adc
inc
xchg
jnp
data16
call
cwtl
mov
add
fs
sub
lock
test
pusha
lret
test
pop
inc
sbb
mov
push
rcrl
cmpsl
mov
push
pop
movsl
mov
cmp
sahf
mov
push
andb
xor
repz
js
add
sub
bound
xor
inc
mov
mov
ljmp
lret
fcmovnu
sbb
ja
dec
cwtl
cs
aad
push
cmp
cwtl
and
sbb
xchg
daa
or
inc
je
pop
dec
mov
in
inc
lret
decb
jns
dec
clc
loop
sahf
mov
scas
mov
ja
sbb
dec
mov
xor
mov
sbb
inc
dec
mov
sbb
or
cmp
xlat
mov
cmp
jge
lock
cmc
daa
ljmp
test
dec
sub
movsb
in
out
lods
inc
inc
mov
fldcw
or
xor
daa
ja
int
vpaddw
jns
loop
mov
mov
loopne
sbb
xchg
mov
jnp
or
dec
inc
push
xor
out
sub
cmpsb
mov
jns
jp
out
popl
pop
adc
jmp
sbb
pop
iret
mov
mov
jb
mov
sub
or
mov
or
cmpsb
dec
mov
mov
repnz
xor
jo
mov
mov
test
out
ja
pop
mov
cmp
add
incb
cmp
mov
ljmp
mov
add
arpl
lods
jl
in
or
rorb
addr16
mov
mov
fsubrp
sti
push
leave
mov
movsl
cmpsb
bound
test
push
mov
popf
leave
add
sar
mov
jbe
push
inc
dec
sub
jns
add
movb
int
ret
sub
add
repz
imul
or
sbb
jns
iret
xor
jle
dec
xor
lods
xchg
les
dec
pop
out
arpl
jne
push
xchg
scas
mov
mov
cld
lahf
pushf
std
incb
pop
test
enter
jmp
fcompl
add
rorl
adc
jge
adcl
sbb
jg
inc
icebp
mov
pop
popl
xor
mov
inc
mov
lods
cli
mov
adc
jge
inc
shl
cmp
roll
and
xchg
fs
jb
sbb
mov
pop
leave
pop
pop
sub
lahf
lods
insb
fs
ss
cmp
sub
mov
jns
lock
xor
stos
xchg
pop
mov
sar
jp
xor
cmp
mov
xor
addb
and
add
cmpsb
psubsw
cmp
pop
subb
sbbb
aaa
mov
xchg
mov
push
loop
arpl
insb
mov
lcall
loop
popa
gs
pushf
rcll
mov
shrb
xor
adc
jl
rclb
xchg
movsl
out
dec
jo
lds
add
fwait
popf
test
inc
inc
iret
and
adc
outsb
bound
ljmp
sbb
add
flds
sbb
les
andb
dec
and
stc
je
sub
aad
stos
mov
fstps
mov
je
jno
dec
stos
lds
movsb
mov
mov
ret
popf
lds
mov
icebp
mov
xchg
insb
jecxz
sub
call
rcrl
test
inc
loope
loop
push
mov
ja
lds
out
int3
mov
shlb
inc
lds
movsb
ja
sub
jmp
xor
push
pop
movsl
adc
or
lret
lock
rcrb
dec
lods
daa
cmc
ss
test
test
faddp
inc
sub
push
scas
sub
mov
mov
pop
mov
bound
aad
sbb
dec
sbb
mov
jb
cmc
in
add
fsts
pop
cmp
sub
add
lock
mov
outsl
sbb
hlt
jne
mov
rcl
xchg
cmp
clc
xor
sbb
fwait
addl
sbb
in
add
xchg
sub
mov
and
cld
lret
cltd
faddl
inc
icebp
movsb
jae
sbb
out
push
mov
xor
pop
in
aaa
push
das
mov
mov
or
dec
fcomps
xlat
dec
mov
sbb
in
mov
sub
jl
xor
lret
sbb
outsb
jno
mov
mov
bound
inc
ret
cmp
push
insb
sbb
mov
data16
pop
bnd
push
or
push
mov
mov
cmpl
mov
cltd
adc
in
loop
enter
adcl
or
and
ds
pop
lock
push
mov
and
sti
mov
stc
fldenv
and
jmp
inc
test
stos
jo
fistpl
xchg
mov
idivb
inc
adc
mov
stos
cmc
data16
mov
jnp
roll
cmp
cmpsb
add
dec
aas
daa
jo
jne
mov
pop
cs
out
fdivp
mov
mov
mov
sub
mov
mov
sarb
pushf
add
push
je
push
jge
mov
push
pop
cmp
sarb
dec
inc
scas
cmp
jge
jmp
test
jb
insl
adc
test
xor
popa
mov
jge
mov
xor
pop
inc
jno
lods
cmc
push
nop
mov
xchg
mov
xor
mov
cli
sbb
mov
cli
dec
imul
enter
inc
adc
sub
cmpsl
and
clc
loop
popa
inc
test
cmp
pop
insl
out
mov
sbb
cmpsb
xchg
imul
js
xor
mov
jae
lds
mov
std
cmc
push
scas
jo
fiaddl
jl
and
out
divb
mov
sti
aaa
repnz
mov
push
shl
jg
pop
mov
pop
xchg
lds
cld
ja
push
lock
cmp
ljmp
dec
fcoms
stos
jp
sub
push
xchg
pop
xchg
add
sbb
enter
dec
mov
sbbb
mov
mov
out
dec
insb
pop
inc
sbb
push
xchg
ret
mov
sti
mov
mov
lret
jge
push
into
ja
mov
mov
sbb
mov
ficoml
js
mov
std
mov
dec
fiaddl
jp
fadd
add
jae
pusha
rorb
imul
sbb
lret
push
xor
fisttpll
gs
sbb
fiadds
cmpsb
mul
stos
mov
jp
and
outsl
shll
fstpl
sub
fwait
mov
pop
jp
in
nop
dec
or
dec
mov
popa
mov
mov
jb
fs
daa
pop
ret
orb
mov
lea
dec
imul
sub
ret
movsb
mov
rclb
xchg
scas
lret
movsl
add
aam
adc
or
mov
ret
sbb
cmc
jl
movsb
mov
fcmovnu
hlt
mov
lods
adc
sbb
add
pop
mov
lret
jae
pop
les
in
rcrl
pop
hlt
xor
je
mov
jecxz
bound
cmp
mov
movsl
inc
push
mov
jmp
push
addr16
mov
enter
call
in
mov
leave
adc
std
mov
in
cmp
pop
jle
frstor
lcall
cmp
call
movsl
mov
xlat
dec
cmp
int
mov
sbb
xchg
mov
xchg
cmp
in
lcall
mov
xchg
in
insl
push
xchg
lock
int
mov
adc
and
lods
mov
pop
jmp
cld
cmp
jl
dec
xchg
stos
lea
sub
mov
pusha
pop
or
clc
mov
cmpsl
add
pop
scas
lock
lret
les
pushf
mov
nop
sub
xchg
jp
inc
mov
jmp
ror
loopne
mov
leave
push
inc
pop
mov
cmpsl
fists
pusha
inc
pop
add
or
out
ss
fwait
or
dec
pushf
mov
and
xchg
adc
mov
out
adc
xor
push
push
mov
scas
ja
popf
jg
fcoms
and
mov
out
sub
out
test
adc
sub
data16
popa
in
in
bound
dec
lret
mov
adc
push
stc
push
mov
sahf
mov
fstps
add
add
fwait
cmp
mov
rcr
xchg
cli
fsubrs
inc
xchg
xchg
addl
push
mov
xor
or
push
das
push
inc
nop
fstpt
mov
xchg
pop
in
cli
cmp
outsb
push
loop
fisttpll
repz
mov
dec
lcall
and
js
aad
pop
movsl
add
xor
xlat
scas
pop
sub
xchg
je
mull
xchg
add
lret
mov
test
ffree
inc
jbe
mov
mov
mov
lahf
sub
mov
test
adc
movsb
in
mov
repnz
pop
mov
mov
sbb
xorl
les
or
add
loopne
pop
mov
aad
outsl
in
pushf
stos
sbb
pop
dec
sub
jae
push
out
mov
or
xor
mov
cld
xchg
xor
lret
int3
iret
icebp
jmp
mov
cmp
sti
cmp
pop
jno
xor
pushl
pop
mov
dec
rol
push
hlt
mov
inc
add
stos
sub
mov
lock
mov
pop
mov
mov
fisttps
lahf
push
lret
fwait
mov
das
push
lods
cmp
mov
dec
or
cmp
and
scas
sub
or
mov
cmp
push
cmp
out
sbb
rorl
or
pop
roll
add
pushl
dec
mov
addr16
in
outsl
xchg
pop
imul
fisttps
mov
push
test
or
sbb
push
jl
sti
imul
jle
add
movsl
pop
xchg
loope
sbb
or
sti
cs
mov
mov
pop
cmp
aad
adc
out
les
sbb
sub
orl
inc
cmp
daa
movsb
or
mov
xchg
sbb
mov
mov
lock
sub
mov
es
jge
ljmp
stos
ljmp
ss
je
enter
rcrb
mov
adcl
jmp
roll
mov
ds
mov
mov
pop
mov
mov
jg
push
movsl
aad
scas
add
mov
xlat
divl
fisttpl
mov
popa
xor
xchg
incl
sti
xor
and
ss
jecxz
cmp
movsl
mov
cmc
ret
movsl
cmpsb
jp
sub
outsb
and
mov
jle
adc
out
lret
jbe
inc
inc
push
mov
fstpt
xchg
mov
pop
ret
xchg
adc
test
inc
dec
cmp
lods
add
add
addr16
cltd
xor
mov
lahf
lock
mov
jae
vphsubbw
sub
sub
add
daa
or
insb
and
call
mov
push
mov
dec
inc
jecxz
in
addr16
ret
dec
bound
arpl
pop
mov
jge
mov
data16
aas
sahf
mov
bound
mov
lock
push
fmulp
mov
inc
push
mov
xlat
out
xchg
adc
stos
inc
sub
add
add
aas
jecxz
popa
push
jmp
std
mov
adc
cli
jl
ret
lods
mov
mov
sub
cmp
mov
out
pop
jg
aam
inc
ds
xor
xor
inc
pop
mov
pop
xor
mov
addr16
cmc
sarl
data16
mov
addl
inc
xchg
jae
cmp
repz
arpl
mov
insb
pop
xor
pop
icebp
mov
in
adc
or
movsb
in
sbb
sti
lock
jl
cmpsl
jne
push
push
jo,pn
stc
pop
into
sbb
pop
cmc
jg
outsb
fsubrs
push
fs
clc
adc
mov
sub
xor
mov
mov
adc
jb
push
push
mov
imul
jge
xchg
mov
dec
test
inc
arpl
adcl
add
lcall
call
insb
pop
mov
cmpl
mov
cmp
fisttps
inc
int
shrb
data16
xchg
enter
mov
xchg
push
xchg
or
cmp
jno
fsubl
inc
in
into
xchg
aaa
adc
cmp
in
inc
jb
mov
mov
or
mov
mov
pop
mov
popa
mov
addb
jb
insb
cs
add
js
mov
xchg
jne
xchg
inc
icebp
cmpsb
xchg
or
add
push
push
or
popa
cli
fisttpl
out
lds
out
mov
pop
mov
jns
xchg
sbbb
aam
sbbb
mov
sti
or
pop
sbb
arpl
in
test
mov
push
inc
data16
cmp
mov
icebp
js
test
mov
adc
insb
cli
pusha
cwtl
clc
cld
push
mov
pushf
add
rorl
popf
addl
cmp
inc
push
dec
mov
test
out
out
mov
push
sub
je
mov
outsb
rcrl
out
mov
pop
dec
and
and
jnp
mov
or
and
cmp
cld
clc
push
ss
outsl
lahf
mov
orb
out
mov
pop
mov
push
pushf
sbb
cmp
push
jns
add
xor
and
cmp
mov
sub
jne
mov
cmp
stc
sub
mov
push
mov
sub
pop
fimull
xchg
mov
loop
shrb
ret
dec
push
jae
in
iret
decb
fbld
scas
mov
mov
xchg
inc
insb
mov
mov
xor
ljmp
cmp
mov
pop
and
mov
mov
int
iret
js
cwtl
sahf
subl
insb
adc
push
or
jg
and
cmpsl
fdivrl
dec
nop
push
fwait
movsb
mov
mov
or
mov
sub
dec
xchg
test
xchg
das
addr16
lcall
mov
movsb
out
test
mov
test
ja
out
inc
push
push
stos
inc
idivb
jmp
addr16
repnz
cli
mov
dec
fmul
mov
xor
data16
lds
lods
xlat
push
rorl
inc
xchg
jmp
fistps
fsubrl
sbb
idivl
insl
mov
aad
jae
pop
sbb
or
cmp
sub
or
insl
mov
jne
sub
out
cmp
push
ds
dec
pop
sbb
dec
repz
or
dec
popf
inc
movsb
pop
xlat
or
cltd
loopne
and
mov
int3
cld
call
aam
xchg
add
mov
mov
inc
jbe
and
jae
ja,pt
and
push
out
in
pop
mov
sti
dec
dec
mov
arpl
movsb
lods
or
xchg
and
hlt
shrb
xlat
addr16
inc
dec
outsl
xchg
xor
in
cltd
test
arpl
outsb
mov
xor
dec
jmp
sbb
ljmp
push
stos
fwait
mov
xor
mov
cmp
loop
jno
ficomps
and
imul
data16
mov
cmpsb
lahf
cmpsb
aad
scas
lret
ss
cmpsl
in
hlt
pop
dec
clc
push
push
sub
mov
inc
iret
push
pop
out
mov
push
out
xor
sarl
mov
push
enter
jmp
je
mov
inc
xchg
and
dec
mov
out
jge
idivb
lcall
daa
mov
mov
mov
mov
adc
adc
shll
cwtl
mov
jl
and
out
add
mov
xor
or
inc
add
pushf
pusha
test
cmp
inc
fisttps
mov
ja
in
pavgb
sub
cmp
sahf
ret
decb
dec
lahf
push
jne
lods
in
or
push
push
lea
add
inc
inc
ss
arpl
mov
pop
aam
fisttpl
sbb
or
in
xlat
mov
ds
lds
and
insb
or
call
cli
out
int
xchg
insb
data16
xchg
xor
dec
dec
and
out
jp
inc
in
test
movsb
pop
mov
sbb
xor
and
jmp
cmpsl
cli
mov
jecxz
clc
xchg
test
xchg
mov
ljmp
mov
fnsetpm(287
push
sbb
xchg
rorb
fsts
aas
test
or
jae
movsb
dec
mov
mov
ret
push
insb
in
pop
inc
jbe
lods
mov
scas
adc
outsb
xor
jbe
push
out
mov
jbe
push
push
lea
sub
arpl
mov
push
dec
dec
fs
movsl
pop
xor
loope
xchg
push
imul
cmp
push
fwait
or
das
imul
and
mov
int3
adc
test
sbb
jp
add
adc
jne
jnp
mov
loopne
cmp
dec
mov
icebp
imul
mov
popf
test
out
cli
mov
shll
cmc
xorb
add
mov
sbb
data16
cld
test
outsl
add
pop
sbb
adc
adc
bound
jbe
pop
jg
lahf
addl
mov
mov
lods
mov
sbb
leave
outsl
fwait
daa
sub
fsubrl
out
cmp
mov
nop
std
aas
mov
out
sti
xchg
repnz
pop
jo
mov
dec
stc
ret
test
mov
mov
pop
sub
loope
loopne
adc
int3
jo
jmp
and
push
mov
push
sub
fisttpll
sbb
pop
fwait
jae
push
dec
push
fwait
sti
inc
add
or
test
cmpb
dec
push
sub
adc
int
pusha
mov
mov
inc
mov
pop
fwait
mov
ljmp
aad
insl
scas
loop
mov
xchg
mov
mov
pushf
hlt
pop
xchg
or
repnz
and
mov
imul
mov
jecxz
mov
inc
ror
mov
sub
addl
sub
cmp
arpl
ds
xor
push
pop
fstps
mov
rolb
inc
pop
sub
push
dec
pop
add
sub
stos
test
inc
orb
xor
or
in
mov
sub
dec
mov
push
push
and
loop
shlb
mov
sbbl
push
cwtl
lret
int3
pop
mov
mov
bnd
std
adc
out
in
inc
test
popa
mov
bound
mov
out
and
mov
data16
sbb
jecxz
push
mov
call
mov
push
jg
out
cmp
pop
cld
sti
mov
sbb
xor
dec
ficoms
adc
mov
je
loopne
cmpsb
xchg
jmp
xchg
subl
push
dec
shlb
in
test
iret
inc
mov
fwait
dec
mov
mov
cmp
daa
movsb
add
fs
mov
std
inc
jecxz
xor
mov
fldt
sbbl
xor
icebp
dec
pop
cmc
mov
mov
lods
loopne
mov
jecxz
imul
subl
sub
lods
sbb
ja
inc
out
repnz
testl
xchg
add
sahf
add
inc
add
mov
add
inc
sarl
cs
push
ljmp
add
inc
xorl
xor
in
xlat
ljmp
add
in
or
cmp
mov
ja
or
lea
mov
in
adc
xchg
mov
adc
testl
pusha
pop
outsb
mov
call
dec
lock
mov
pop
mov
cmpsb
or
cwtl
dec
mov
push
mov
out
imul
int
data16
xchg
cld
push
adc
in
sbb
out
adc
mov
fwait
jo
imul
inc
xchg
mov
cmp
mov
mov
es
test
sti
ljmp
fs
cmpsl
mov
ucomiss
xbegin
gs
sbb
push
push
push
cmp
dec
lret
mov
ret
cmp
stc
mov
paddusw
mov
das
orb
fsub
test
leave
lea
xchg
cld
lcall
lock
xor
dec
or
fadd
jae
ss
shlb
loopne
push
shlb
pop
xor
arpl
fcompl
xchg
fadds
inc
xchg
add
xchg
xlat
loopne
icebp
mov
xor
pop
scas
inc
sbb
add
and
sbb
fdivrs
push
inc
jae
cmp
jecxz
sub
add
xor
mov
test
jle
jmp
or
jecxz
inc
icebp
les
addr16
pop
mov
add
mov
push
jnp
add
mov
arpl
pop
jae
fildl
and
xor
pop
icebp
push
cmc
xchg
mov
cwtl
dec
pop
ud1
mov
adc
stos
sbb
sub
mov
push
push
imul
fisttps
ficoml
pop
pop
mov
mov
fildll
fistpl
cmp
mov
and
in
insb
mov
les
xchg
inc
cmp
push
shl
dec
daa
mov
jne
mov
ja
jmp
cld
push
jg
sub
mov
movl
jge
xor
cli
out
xchg
add
lahf
mov
in
sbb
test
sub
mov
int3
cs
jne
das
and
jbe
xchg
cmc
mov
mov
xor
dec
fwait
jae
movsl
jge
addb
cmpsl
xorl
movsb
xchg
lods
mov
mov
loop
in
popf
stc
mov
fldcw
cmc
adc
jbe
enter
cmpl
popa
mov
mov
push
loop
xor
cli
cs
movsl
popa
mov
movsb
mov
dec
testl
push
push
cmp
mov
add
mov
xchg
jae
xor
xchg
dec
repz
loopne
int3
mov
xor
and
mov
dec
cmp
popa
bound
jb
dec
mov
mov
outsl
out
cmp
jbe
xor
mov
notb
fiaddl
insb
lahf
mov
ret
cwtl
lock
jnp
mov
mov
xchg
sub
xor
roll
roll
xor
cmp
jo
mov
cltd
mov
adcl
in
xor
mov
jnp
loopne
nop
or
dec
shll
xchg
xchg
fidivrs
pop
cmc
or
adc
fldl
mov
stos
stc
push
lea
add
or
xchg
mov
aam
cmp
in
leave
outsl
enter
push
inc
fwait
test
jbe
and
add
dec
adc
mov
shll
dec
mov
addl
aaa
and
or
shl
jl
mov
mov
sti
xchg
pop
fnstenv
cmp
rorb
xchg
sbb
adc
stos
mov
je
mov
fiadds
sbbl
mov
scas
xor
jne
xor
movsb
out
xchg
push
sub
xor
or
lods
jb
stos
aam
inc
mov
iret
add
dec
je
jle
adc
lret
mov
ret
repz
sbb
jecxz
or
xchg
sub
loope
pushf
dec
je
xor
inc
sub
icebp
mov
jnp
mov
test
pop
loopne
xor
or
clc
lods
rolb
stos
sub
or
sub
in
pop
inc
mov
dec
pusha
sbb
adcb
inc
or
jmp
mov
sub
sub
lock
addr16
xlat
jge
ret
cmpsl
xchg
pop
js
lret
mov
lret
xchg
imul
mov
dec
cmpsb
cwtl
sbb
lret
cltd
or
or
mov
imul
scas
mov
mull
mov
xor
mov
gs
xor
push
cmc
pusha
ret
inc
mov
inc
dec
clc
mov
mov
jno
adc
dec
rcr
mov
in
push
xor
and
xor
jne
pop
mov
outsl
into
fnstsw
inc
bound
dec
scas
pop
mov
mov
cmp
out
pop
in
rcrb
xchg
jg
or
lret
and
lock
fimull
dec
push
sahf
dec
cs
mov
subl
sbb
aaa
xor
mulb
add
mov
je
pop
jne
inc
xchg
jns
dec
adc
add
pushf
out
and
repz
mov
in
fisttpll
vmptrst
add
cmp
xor
xor
lea
addr16
xchg
fwait
push
outsb
js
mov
inc
xchg
adc
cmp
mov
test
lods
mov
scas
je
pusha
imul
repz
cmpsl
sub
inc
mov
push
jl
pop
insl
push
lds
cmpsb
inc
scas
cmp
loope
adc
xlat
sbb
ljmp
hlt
xor
movsl
sub
inc
call
xchg
cmc
aaa
xchg
or
hlt
mov
dec
mov
sub
pop
mov
gs
xchg
xchg
sbb
sub
repnz
mov
in
sbb
mov
hlt
cs
scas
add
add
sti
mov
orl
fwait
loope
aaa
movsl
lret
xchg
xlat
mov
ja
out
lods
pop
sbb
fnstcw
mov
and
rcrb
cltd
mov
inc
dec
cmp
pop
inc
dec
sbb
idivb
ret
jne
mov
fs
addr16
cmp
mov
sbb
lods
adc
jb
cltd
sbb
sbb
mov
movsl
faddp
push
add
insl
add
test
fs
mov
dec
fisttpl
pop
test
xchg
adc
mov
xorl
xor
mov
lods
mov
sahf
repz
pop
inc
push
mov
adc
mov
add
xchg
xchg
mov
jmp
pop
movl
mov
stos
mov
add
lahf
jmp
imul
add
dec
push
mov
pushf
data16
lahf
mov
repnz
mov
dec
xchg
pop
lret
mov
lock
add
xorl
lock
addr16
xor
mov
ljmp
repnz
sbb
sbb
sarl
dec
ss
pop
bound
std
cmp
adcl
sub
inc
addr16
inc
and
adc
in
aas
xchg
leave
push
ja
xchg
out
dec
xchg
pop
cmpsb
shlb
mov
pop
inc
test
inc
mov
cmp
cld
sbb
inc
hlt
lods
inc
into
mov
push
fcom
dec
and
mov
xchg
mov
push
fdivl
imul
sub
fdivrs
iret
rdmsr
or
xlat
adc
xor
arpl
test
loopne
cmp
mov
sbb
out
or
mul
mov
ja
adc
lods
mov
inc
mov
push
and
iret
inc
sbb
sti
xchg
pop
or
popa
lods
dec
in
sub
sbb
das
inc
xlat
push
xchg
in
js
push
mov
dec
xor
cmp
inc
mov
xchg
in
gs
pop
jo
mov
dec
and
out
mov
fwait
cli
mov
test
rcl
inc
sbb
ret
sub
inc
test
xor
das
jmp
mov
aaa
inc
mov
out
jne
xor
xlat
fwait
and
pop
aad
push
dec
sbb
pop
mov
out
mov
push
sbb
mov
push
pinsrw
push
popl
stos
in
push
bound
loop
mov
cmp
loope
push
fucomi
addr16
inc
mov
push
cmp
push
loop
insb
mov
inc
imull
jmp
lahf
push
push
in
movsb
es
pushf
adc
mov
xor
daa
xchg
mov
aad
in
nop
mov
adc
cmpsb
mov
mov
daa
orl
jmp
sub
ficompl
fs
cmpsl
sbb
add
cmp
out
insl
pop
daa
pop
xchg
pop
repnz
mov
xchg
xchg
loopne
cmp
mov
outsl
scas
aaa
xor
sub
jg
jge
ficomps
inc
cmc
jbe
push
mov
mov
xchg
inc
dec
sbb
mov
addr16
push
cmpl
sub
std
add
and
ret
push
mov
jecxz
hlt
sbb
or
stos
fistpl
or
dec
sub
insb
stc
mov
jno
jnp
or
jbe
push
xchg
mov
out
and
cmp
mov
jg
aam
icebp
xlat
mov
js
cmc
es
add
dec
iret
mov
mov
je
pop
pop
mov
out
inc
jae
lock
jle
xor
fnstsw
shrl
icebp
and
cmp
xchg
stc
or
push
mov
repnz
into
test
nop
mov
iret
add
jb
mov
aam
mov
repz
push
push
mov
jge
sbb
ret
pop
insb
fmull
cmpb
testl
xor
mov
fists
ret
and
int3
imul
mov
mov
pop
dec
dec
mov
adc
push
and
add
cwtl
mov
ret
mov
mov
dec
loope
cmp
xchg
les
ljmp
fiadds
add
xchg
clc
in
push
lds
mov
stos
mov
pop
add
popf
and
in
or
lahf
mov
mov
jo
jmp
mov
sub
pop
mov
xorl
pop
mov
xor
add
mov
pop
pop
jnp
mov
andb
push
repnz
inc
xchg
std
lret
ljmp
outsb
mov
sbb
gs
mov
ror
or
psllw
xchg
movsl
lret
xor
pop
data16
sub
jo
sahf
mov
and
test
xchg
in
mov
inc
out
pop
push
mov
jle
mov
enter
lret
leave
or
test
lea
js
bound
dec
inc
ds
or
das
and
push
fimull
xchg
decl
sbb
data16
jge
mov
sarl
push
cld
jnp
stos
stos
xor
test
or
mov
mov
mov
adc
add
stos
cli
roll
repnz
lret
xchg
jns
dec
loop
mov
movsb
pop
fistpl
sbb
xor
jb
cmp
lret
mov
adc
mov
jb
cmp
mov
push
sub
mov
fisubrl
sbb
cmp
test
dec
cwtl
sbb
loop
inc
cmp
push
xor
popa
adc
xchg
mov
mov
pop
mov
out
push
lret
pop
repnz
adc
cmc
adc
inc
cmp
inc
mov
dec
fwait
cs
jae
shll
add
mov
rcrb
or
enter
int3
ret
lret
cmp
dec
hlt
nop
add
pop
ljmp
popa
das
dec
testb
cmp
sbb
cltd
push
mov
adc
mov
aaa
bound
je
sub
scas
mov
and
cmpsb
movsb
cmp
lret
cli
inc
adc
loop
rcrl
mov
call
das
mov
mov
or
ffree
jne
cmp
scas
mov
lea
cmp
push
adc
and
mov
sbb
imul
lods
inc
mov
out
aaa
mov
jmp
sbb
lea
or
cld
fisubrl
lock
ljmp
mov
fisubrs
adc
lea
js
jbe
rorl
pushf
sub
mov
imul
in
cmp
and
jae
xor
mov
mov
in
scas
fcoms
jl
enter
inc
imul
push
mov
pop
sbbl
je
cltd
xchg
mov
int
or
inc
gs
add
data16
lock
testb
push
into
inc
push
sub
cld
stos
in
xchg
mov
aaa
dec
enter
rclb
xchg
sub
out
shll
popf
push
aad
cmpsl
xor
add
push
hlt
mov
loope
adcb
sbb
outsl
sub
xchg
push
nop
mov
sti
and
loop
inc
inc
fs
and
mov
mov
iret
movsl
push
mov
cwtl
std
mov
xchg
sarb
lret
shlb
ja
jno
pop
or
aam
jae
jmp
repnz
stos
pop
shl
sub
repz
fwait
cmp
arpl
fs
sti
ret
inc
add
test
or
mov
mov
and
pop
stos
xor
mov
mov
or
aaa
xchg
in
sbb
shrl
mov
mov
inc
xor
inc
adc
inc
mov
pop
push
in
sub
mov
ss
and
js
mov
imul
aad
call
subb
pop
mov
ja
inc
cmp
mov
add
sbbb
mov
mov
xchg
data16
xor
js
mov
repz
push
imull
mov
push
data16
fsts
inc
pop
sahf
mov
in
div
out
mov
mov
mov
pop
pusha
cmpsb
lcall
mov
xor
enter
xchg
push
ret
adc
jle
inc
and
repz
add
cs
in
pop
adc
jge
xchg
andl
cld
mov
mov
loopne
mov
popa
mov
xchg
pop
add
push
ret
imul
pop
pop
mov
je
mov
jbe
loopne
push
mov
popa
ss
jae
sbb
mov
lock
pop
pop
mov
xchg
ret
mov
xchg
mov
push
cmpsl
outsb
shrb
pop
movsl
iret
jge
mov
push
cmp
inc
addr16
aas
pop
mov
mov
mov
orb
addr16
mov
stos
adcl
and
es
jle
outsl
nop
dec
ret
pop
or
fistl
inc
xchg
mov
and
shll
test
mov
cwtl
ret
pop
scas
and
cmc
jbe
push
popf
mov
std
or
scas
mov
mov
jmp
ror
adc
push
xor
movsl
or
xchg
in
or
arpl
int3
mov
mov
gs
clc
lock
rolb
sub
and
andb
cmp
pop
dec
scas
mov
in
mov
and
mov
jg
xchg
lds
adc
imul
xlat
loopne
stos
insl
xor
pop
dec
mov
sbb
jmp
out
xchg
and
xor
xchg
dec
rcrb
fidivrs
push
pop
mov
out
push
sub
push
pop
mov
jb
or
mov
mov
popf
mov
hlt
lods
fmuls
cmp
mov
shrb
call
and
mov
push
mov
or
or
pop
aam
or
add
mov
xor
mov
mov
out
mov
pop
pop
outsl
pop
mov
mov
aad
and
imul
mov
mov
jle
das
sbb
add
inc
mov
in
mov
nop
jno
mov
out
sbb
xchg
push
xchg
mov
test
add
xor
or
lods
mov
add
xchg
mov
mov
mov
sub
dec
xor
mov
xor
sub
mov
and
cld
das
lods
outsb
cs
xchg
dec
xchg
push
cmp
jp
push
sti
and
shrl
sbb
outsl
lock
hlt
mov
xchg
push
ss
aam
addr16
arpl
cld
xchg
mov
inc
pop
repnz
jle
cli
mov
mov
jno
icebp
out
adc
repz
push
pop
test
sbb
into
cwtl
mov
mov
gs
out
pop
jmp
mov
jno
je
cltd
cmpsl
ja
iret
testl
sub
mov
popf
mov
lock
and
fimull
incb
out
les
dec
mov
inc
push
xchg
xchg
jnp
int
std
stos
scas
mov
call
cmp
loope
ret
mov
sub
clc
fists
mov
mov
popf
or
xchg
xchg
movsl
mov
or
cld
ret
adc
sbb
xchg
jbe
add
mov
imul
mov
add
je
je
mov
clc
adc
fstpt
mov
std
adc
mov
mov
test
inc
pop
stc
cmpsl
in
xchg
movsb
jnp
ficoml
sub
add
test
mov
stc
mov
pop
das
mov
pop
lods
mov
adc
fsubrs
mov
mov
imul
out
lret
fs
aad
xchg
adcb
push
pop
xchg
andl
xchg
mov
mov
jmp
leave
icebp
cmp
test
imul
add
mov
aad
std
adc
push
das
dec
mov
dec
rcrl
push
scas
mov
lahf
mov
fnstenv
mov
dec
nop
ret
dec
cmpl
push
jo
mov
mov
push
rol
out
shll
xlat
pushf
lods
out
mov
ds
dec
xor
mov
jmp
pop
popf
xchg
push
testl
xor
insb
loopne
xchg
mov
xor
pop
sbb
das
xor
mov
mov
cpuid
pop
and
xchg
add
out
lock
push
mov
dec
rcr
mov
dec
mov
outsl
inc
lods
pop
mov
adc
adcb
or
xlat
std
cwtl
xchg
mov
add
out
mov
cmp
dec
out
or
jnp
ljmp
xorl
jmp
dec
in
mov
movsb
lea
lods
mov
in
repz
dec
xor
scas
stos
mov
stc
movsb
loope
ja
cmp
test
pusha
mov
movsl
aad
mov
std
into
mov
mov
call
mov
rorl
ja
popf
pop
out
mov
fwait
push
subb
mov
adc
lret
fwait
xchg
mov
push
sbb
mov
dec
push
lock
pop
mov
cmc
rorl
mov
or
je
std
nop
sarl
in
adc
fstl
mov
mov
mov
insb
loop
fisttps
out
cmp
mov
push
jecxz
inc
popl
pop
add
and
xchg
mov
das
adc
or
icebp
push
cmp
out
mov
gs
xchg
and
rorb
leave
sub
xor
ja
lods
sbb
lret
sub
test
int
movsl
rorb
js
jmp
xchg
sbb
inc
inc
add
inc
and
or
pop
fwait
push
fildl
dec
stc
jg
andb
cmp
mov
mov
sahf
mov
pusha
insl
mov
inc
or
mov
mov
sbb
insl
loop
fistpll
in
ret
dec
push
inc
push
mov
pop
inc
add
add
sbb
sbbl
jp
jbe
pop
arpl
dec
bound
xchg
mov
mov
pushf
mov
incb
jp
push
cwtl
or
int3
mov
xchg
mov
jle
insb
mov
or
mov
xor
mov
fisttpl
shlb
push
xchg
mov
out
fmuls
jl
orb
jmp
or
sti
inc
cld
inc
pop
xchg
orl
add
xor
push
mov
mov
out
mov
out
mov
outsb
pop
push
in
sbb
jle
jbe
or
adc
dec
sub
cli
roll
cmp
mov
jnp
sub
push
loope
sub
sbb
bound
fwait
stos
and
and
mov
movsl
cmp
xchg
je
mov
jae
fimuls
scas
ljmp
popf
imul
xor
pop
jnp
adc
loop
je
out
lods
adc
push
cmc
cmp
mov
fisubrs
fucomip
push
lock
push
inc
xor
mov
cli
out
jne
insl
dec
mov
je
call
and
mov
negb
mov
push
pop
mov
testb
mov
test
mov
mov
lock
mov
cmp
xchg
fwait
sub
in
aaa
fcompl
testl
insb
enter
or
xchg
xor
aaa
dec
ffree
lahf
push
cmpsb
mov
mov
pop
stc
cmp
mov
scas
mov
addr16
mov
sbb
mov
ja
ljmp
enter
mov
jno
mov
cmp
mov
xor
mov
aad
push
push
push
cwtl
jle
imul
cs
popf
aam
sbb
push
xchg
inc
mov
mov
popa
inc
jae
mov
ret
adc
mov
push
dec
mov
pop
pop
cs
insb
mov
mov
lock
adc
pop
mov
std
jb
xor
and
sarl
addl
sub
mov
push
push
cmp
arpl
xchg
pop
dec
dec
popa
lea
xor
outsb
mov
mov
mov
push
add
inc
mov
cli
mov
popa
mov
mov
sbb
imul
adc
and
loop
mov
imul
push
imul
cmpsb
fs
out
ljmp
push
cli
jp
ja
xor
imul
push
test
insb
pop
pop
cmpsl
sti
mov
lret
nop
xchg
movsl
test
lret
adc
and
pop
inc
out
mov
cmp
aas
es
mov
and
xchg
mov
outsl
lret
mov
insb
ljmp
sub
and
dec
call
data16
mov
out
js
gs
outsb
stos
xchg
sbb
mov
lods
in
pushf
outsl
sub
xchg
leave
pop
jp
xchg
arpl
je
add
inc
sti
pop
dec
sbb
cmp
sub
scas
mov
mov
cld
pop
je
and
mov
daa
mov
insb
popa
xor
jne
mov
pop
test
xchg
ret
lock
adc
xchg
out
sbb
mov
adc
add
cmc
ljmp
insb
or
sub
mov
pop
jecxz
dec
pushf
or
and
jge
cmp
add
xchg
push
aas
int3
gs
sub
dec
lea
rorl
jns
repnz
push
mov
test
jo
push
in
xchg
scas
out
mov
add
mov
mov
repz
mov
cmp
lret
cmp
or
cli
pop
scas
dec
mov
fcomps
add
in
jg
add
sbb
cli
inc
pop
aad
and
jmp
or
dec
mov
outsb
fnsave
fsubr
mov
or
sbb
mov
ss
and
rcrb
xchg
jb
mov
fimuls
xchg
mov
movsb
jg
inc
or
rorl
pop
push
add
leave
in
sub
mov
mov
aam
jns
lods
das
push
push
stos
or
sbb
sub
cmp
mov
pop
ret
data16
aad
push
lret
sbb
push
and
ss
shr
rolb
ret
cld
xor
adcb
mov
fwait
xor
inc
fwait
xchg
push
jae
imul
cmp
in
dec
fs
xchg
ret
push
push
das
push
jb
xor
stos
out
lods
pusha
adc
adc
xchg
outsl
mov
enter
je
out
subl
out
sbb
imul
dec
or
add
inc
inc
rcrl
add
sub
sbb
dec
mov
cwtl
shrb
mov
js
or
jge
mov
cs
test
mov
hlt
push
dec
pop
inc
xor
stc
dec
pusha
mov
mov
adc
mov
mov
sub
mov
fsubrs
and
popf
lret
or
das
inc
add
addr16
mov
add
aad
std
and
cmp
or
pushf
movsb
cmpsl
xor
sbb
call
hlt
jbe
mov
mov
xchg
mov
lds
inc
cmp
add
sahf
pushf
xchg
inc
mov
scas
arpl
jp
jle
dec
fcomps
inc
add
or
cli
mov
mov
inc
ret
and
mov
mov
in
js
lea
movsb
push
pop
sub
insb
xor
or
hlt
xchg
dec
xor
mov
testb
jge
mov
es
push
mov
shll
dec
inc
fmull
inc
ficoml
sbb
mov
idivl
fildl
cld
mov
mov
sub
jecxz
sub
mov
cwtl
mov
addr16
cmpsl
stc
sbb
dec
mov
adc
roll
cmp
push
cmpsl
repnz
sub
xchg
add
mov
fcoml
xchg
cmp
in
bnd
add
loopne
mov
and
xchg
dec
in
mov
xor
out
adc
xchg
cmpsl
or
or
lahf
dec
stos
mov
test
clc
lock
andl
adc
sti
and
sbb
inc
dec
xlat
test
adc
mov
lock
mov
add
int
lods
push
sbb
out
pop
std
push
addl
fldt
and
xchg
ja
dec
iret
ret
stos
dec
jg
mov
mov
outsb
sbb
xchg
push
mov
and
fmull
out
and
aaa
aas
xor
js
gs
pusha
pop
mov
push
mov
sub
jl
mov
mov
montmul
cmpsb
inc
xor
lds
das
sub
or
adc
push
aas
insb
arpl
push
push
push
fiaddl
jecxz
and
cmp
xlat
subl
sar
movsl
out
fwait
xchg
add
mov
fimull
daa
sarl
int3
push
ljmp
lret
sidtl
adcl
mov
sbb
hlt
inc
jae
xlat
insb
leave
jbe
mov
pop
or
in
cmp
add
mov
inc
addb
pop
test
rolb
or
cli
mov
xorb
adc
inc
js
push
stos
fsubs
inc
lcall
sub
mov
out
cmc
push
push
jo
sub
mov
fstpl
jle
xor
cmpsb
ja
fmuls
cmc
push
inc
imul
mov
leave
xor
mov
mov
pop
ror
xchg
fwait
test
pushf
ret
mov
sti
push
lds
mov
repnz
hlt
xor
rorb
mov
mov
imul
int3
pop
cli
rcl
xchg
data16
js
dec
mov
cmp
mov
or
and
cmp
cmc
test
mov
jbe
andb
inc
or
xor
jbe
shr
fisttpl
cmpsb
push
mov
cmp
movsl
or
leave
xchg
push
dec
daa
stos
sti
cli
pop
lcall
out
mov
adc
sbb
popf
insb
call
and
pop
inc
cmp
mov
mov
inc
scas
fisttpll
stos
call
decl
fiaddl
mov
mov
loop
mov
cmp
clc
sbb
fisttps
mov
les
test
sub
jbe
clc
adc
cmp
scas
pop
jecxz
test
push
mov
pop
lods
inc
popf
inc
mov
dec
xor
pop
and
add
mov
adc
xchg
enter
and
jge
lcall
int3
popf
sbb
test
cmp
or
lock
rolb
pop
and
push
call
je
or
mov
inc
pop
out
push
ds
sti
adc
pop
fmuls
mov
xor
repz
cmp
mov
mov
xor
mov
mov
daa
mov
sub
dec
icebp
lods
dec
out
xlat
mov
ret
cmp
iret
push
aaa
js
shrl
push
lret
pop
mov
addl
jg
rol
mov
test
cmc
out
shlb
xchg
pop
dec
and
xchg
mov
mov
sub
and
mov
test
cltd
cmpsb
lods
xor
sbb
sahf
xor
cmc
add
andb
add
in
add
inc
mov
add
out
mov
orb
sbb
xor
cld
or
dec
mov
cmp
cmp
or
lret
std
mov
cmc
sbbb
jle
cld
sbb
dec
push
push
pop
xlat
mov
mov
movsl
repnz
jns
and
add
push
sub
mov
push
sub
cwtl
test
movsl
sub
xchg
push
adc
mov
ss
xchg
jno
sub
mov
sub
scas
pop
mov
repz
repnz
call
sbb
ja
idivl
lds
aam
mov
lock
dec
pusha
push
and
orb
iret
xchg
adc
imul
dec
cmp
and
int3
mov
pop
aas
mov
stos
mov
dec
aaa
mov
insb
mov
inc
mov
pusha
jge
loopne
mov
or
mov
inc
out
test
xorl
dec
push
movsb
cmp
in
dec
sub
mov
testb
fisubrs
xor
sub
and
xchg
or
loop
mov
jp
das
movsl
imul
or
jmp
and
inc
mov
adc
inc
aad
sbb
test
scas
mov
xchg
aam
insb
pushf
mov
addr16
mov
jle
lea
lcall
inc
mov
pop
xor
jg
xor
cmp
mov
addr16
not
xchg
jle
aas
pop
sti
mov
out
inc
jmp
jno
jns
bound
mov
aam
push
dec
add
imul
dec
push
stos
jae
les
cli
pop
push
popf
jp
outsb
repnz
notl
push
inc
scas
call
jo
sub
popa
mov
call
cli
inc
loop
std
jp
jbe
adc
and
and
cmp
mov
add
mov
and
popf
inc
pop
test
pop
adc
mov
push
lock
movhps
xor
mov
push
or
ljmp
jo
adc
in
push
pop
lret
js
dec
scas
ljmp
sarl
bound
jp
adc
cmpsb
mov
mov
push
daa
jmp
xchg
mov
adc
hlt
mov
or
mov
dec
jecxz
mov
jmp
mov
sbb
fwait
imul
adc
jle
orb
repz
mov
lock
mov
mov
repnz
aaa
jecxz
mov
mov
push
arpl
sbb
jp
notl
fimuls
enter
mov
movsl
add
xchg
mov
aad
outsl
mov
push
jb
sub
sub
or
nop
inc
push
pop
mov
mov
adc
es
adc
push
out
jp
loopne
movsl
mov
inc
push
mov
rcr
mov
call
mov
test
int
dec
add
or
adcb
sar
ljmp
inc
cltd
mov
ja
dec
lea
div
mov
fsubrl
lock
and
xor
xor
jo
mov
enter
fiadds
nop
xchg
je
push
adc
js
test
dec
dec
int
repz
and
lret
icebp
xchg
addr16
sbb
aaa
outsb
lahf
dec
cmc
xchg
push
pusha
and
dec
js
ljmp
mov
or
fwait
dec
je
sbb
orb
mov
fsubr
xchg
mov
sbb
repz
sub
je
mov
dec
inc
rorb
adcb
mov
mov
in
fs
pop
fmul
movsl
jge
cmp
sbb
cs
test
or
std
data16
addr16
adc
cmc
lds
popa
pop
data16
loopne
aas
je
dec
jl
mov
call
push
shrb
adc
lock
push
sbb
dec
pop
dec
nop
dec
add
mov
jbe
shlb
mov
mov
ds
out
jp
and
icebp
mov
mov
and
cltd
pop
cmpsb
mov
push
sbb
mov
mov
lods
mov
pushf
push
push
ljmp
push
bound
xor
push
jns
xor
mov
nop
sbb
in
outsb
addl
mull
mov
cmpsl
mov
lods
test
fcmovnu
mov
and
jmp
inc
mov
in
add
or
push
fidivrl
xchg
jle
cmp
int3
pop
mov
scas
mov
mov
push
or
dec
outsb
mov
mov
stos
sub
mov
mov
xor
nop
mov
mov
sbb
sarl
testl
xor
lds
popa
daa
sub
pop
add
add
push
pusha
xchg
push
repz
mov
pop
jae
shrd
test
test
enter
mov
pop
xor
push
or
mov
je
les
mov
push
sbb
mov
xchg
cli
sti
or
dec
scas
fsubr
mov
sbb
and
or
cs
mov
mov
mov
xchg
dec
mov
out
xor
enter
test
or
adc
cmpsb
shlb
jmp
es
sub
mov
mov
pop
xor
inc
sub
movsb
pushf
dec
sub
call
cmc
mov
inc
push
pop
mov
loopne
add
aad
pop
aas
movsb
jo
inc
and
xor
daa
dec
sahf
ficomps
mov
lds
stos
sub
mov
fwait
mov
in
stos
clc
aad
mov
test
jp
mov
in
add
mov
mov
cmpsb
or
orl
add
cmpl
sub
pop
xchg
lds
jbe
dec
pop
mov
xor
mov
pop
pusha
xchg
jae
or
mov
push
xor
subb
jp
sbb
in
roll
inc
pop
pop
push
mov
lea
mov
out
iret
add
out
sub
mov
fdivrs
jne
push
sarb
add
adc
mov
pushf
sbb
mov
pop
xor
movsb
mov
test
sbb
or
rcrb
dec
jo
dec
mov
xchg
mov
adc
add
xor
adc
cmpsl
jns
fwait
adc
mov
mov
xchg
fistps
dec
sub
orl
daa
outsl
incl
pop
rclb
jg
adc
test
fwait
lods
repz
sub
cwtl
add
cli
je
mov
in
mov
sti
mov
out
loope
clc
mov
mov
jo
xchg
xchg
or
scas
cmp
pop
push
movsl
rorb
mov
pushl
cmpsl
int
mov
jb
mov
stos
xchg
push
mov
mov
test
sarb
outsb
pop
mov
adc
lret
jmp
mov
push
push
push
mov
cmp
mov
cmc
mov
mov
push
test
ljmp
mov
or
mov
aam
xchg
or
xchg
lods
jg
stos
dec
fisubrs
dec
pop
hlt
and
adcl
add
inc
jge
sub
leave
sub
push
sub
xchg
sub
mov
ret
and
ficoms
into
dec
or
jmp
insl
xchg
icebp
in
xor
mov
xchg
mov
push
pop
inc
movsb
dec
mov
dec
lds
cmc
cmp
lret
jle
jns
mov
or
xchg
les
dec
sbb
pop
xchg
lea
push
lret
subl
dec
ds
mov
mov
js
or
adc
pop
arpl
in
fs
dec
or
icebp
testl
mov
add
mov
test
mov
std
push
inc
mov
subl
xor
addl
and
mov
inc
std
mov
dec
test
mov
inc
movl
mov
push
mov
das
cwtl
push
jbe
enter
inc
jne
mov
mov
popa
mov
jbe
mov
out
adcl
loopne
mov
mov
in
shl
ret
cmp
and
add
hlt
fisttpl
sti
mov
das
mov
sub
push
out
sbb
test
out
cli
inc
sarl
or
sub
lret
add
icebp
hlt
cwtl
andl
enter
ficompl
xchg
mov
fidivrs
or
mov
les
imul
xor
cmp
ret
mov
mov
std
push
cmpsl
mov
popa
add
xor
mov
cld
or
xchg
mov
pop
lret
ljmp
test
jnp
in
fs
imul
inc
push
cmpsl
test
data16
pushf
sbb
fwait
dec
fmulp
mov
aaa
xor
pop
imul
mov
les
inc
fwait
jae
repz
std
adc
pop
xchg
ss
pop
push
push
arpl
pusha
int3
mov
andl
mov
or
lock
push
mov
nop
inc
push
inc
pop
popa
mov
daa
jp
add
xor
sub
mov
out
and
adc
leave
pop
fwait
pusha
ds
ud1
sbb
sbb
mov
or
test
push
scas
mov
add
add
mov
fisubs
clc
mov
and
mov
scas
push
and
xor
out
shrl
adc
mov
pop
sahf
mov
js
gs
mov
mov
les
cmpsb
and
mov
mov
mov
mov
loop
pushf
loopne
test
mov
stos
mov
stos
sub
mov
and
inc
movsb
lods
dec
lahf
lds
data16
mov
jne
stos
fwait
imul
sub
sahf
lret
jns
cmp
fwait
mov
lcall
inc
lcall
mov
sbb
xlat
cld
mov
and
pop
lock
sbb
dec
rclb
dec
mov
pusha
xchg
xor
inc
adc
incl
aaa
sbb
dec
rorb
pop
adc
push
repnz
shl
scas
lahf
jb
nop
mov
add
dec
hlt
inc
inc
fwait
cwtl
pop
mov
pop
mov
sub
addr16
xchg
or
stc
jl
test
rcll
in
pop
cs
mov
ja
push
mov
sar
or
add
sub
and
test
push
clc
cli
decl
mov
js
mov
je
pop
cld
lret
xor
stc
push
fwait
out
cs
or
mov
into
popa
cmp
mov
call
dec
outsl
mov
pop
imul
stos
jp
adc
stc
std
mov
pop
fwait
pop
jg
dec
adc
inc
xchg
inc
mov
fsubrs
idivb
pop
mov
sub
imul
mov
stos
mov
mov
adc
add
negb
mov
mov
mov
or
loope
stos
gs
cmp
xchg
sarb
mov
mov
out
lret
jo
mov
icebp
in
mov
faddl
test
mov
cltd
in
test
dec
fwait
dec
mov
mov
bound
mov
lahf
das
mov
push
mov
jne
aaa
inc
std
dec
mov
stc
sub
dec
fwait
popa
nop
push
cmp
mov
and
stos
rcrb
mov
lret
add
inc
mov
in
cs
adc
mov
push
mov
cwtl
out
push
push
pop
daa
dec
cmp
enter
jp
in
jg
cmp
aaa
push
pop
mov
popa
mov
add
popf
pop
mov
mov
mov
mov
test
int3
dec
mov
stos
sub
test
notl
pusha
mov
cld
jp
mov
inc
xchg
mov
in
std
stos
sub
push
add
xchg
pop
mov
je
or
cmpsb
lock
sub
nop
push
mov
sub
xor
sub
lds
sbb
mov
stos
loopne
jle
mov
test
push
mov
stc
adc
enter
mov
int
push
dec
aam
mov
std
push
loop
out
fidivrl
and
movsl
das
xchg
fisttpll
add
jmp
cwtl
jl
pop
pop
sub
lret
addl
add
mov
inc
jmp
fwait
popa
daa
mov
pop
ret
mov
clc
jb
jb
and
es
dec
mov
add
rcll
lret
or
sub
add
lods
mov
shlb
cwtl
xchg
cmpsl
cmc
clc
stos
jmp
pusha
inc
int
mov
addr16
cmp
loop
mov
aam
lret
inc
push
adc
dec
push
mov
jbe
xor
push
sbb
xchg
dec
or
jno
mov
out
inc
fstps
je
or
int
fisttpl
mov
je
adc
pop
sarb
mov
sub
or
adc
xchg
mov
dec
dec
mov
inc
mov
jo
mov
sbb
xchg
inc
iret
mov
mov
leave
icebp
aas
das
dec
and
mov
loope
mov
pop
mov
loop
bound
cmpsb
lcall
pushf
test
xchg
cli
dec
es
push
xor
aas
xlat
clc
jl
mov
cmp
sbb
movsl
cmp
mov
jmp
insb
mov
jl
and
mov
inc
call
dec
push
movsl
adc
inc
mov
jl
mov
xor
push
and
hlt
fists
test
mov
icebp
mov
out
inc
adc
int3
xchg
pop
push
addr16
orl
cwtl
xchg
push
xchg
aad
ljmp
js
mov
pop
ds
sub
jmp
pop
lods
xchg
hlt
fs
pushf
ljmp
jns
cs
addr16
movsl
mov
or
cld
mov
cmp
ffree
dec
test
inc
in
scas
mov
sub
or
movsb
bound
shlb
sub
in
xor
cmp
test
inc
fptan
sti
mov
ror
mov
sahf
movups
push
aaa
add
cmc
push
mov
addr16
ret
jl
mov
outsb
jecxz
xor
movsl
nop
push
lods
test
mov
sbb
les
fmuls
cli
mov
inc
lods
xchg
add
fwait
mov
ret
mov
cmp
fisttpll
loop
sbb
data16
xlat
outsb
cmpl
push
and
push
pop
mov
xor
ret
mov
jl
icebp
iret
sub
stos
data16
cld
xor
in
or
mov
adc
or
je
sahf
icebp
jbe
mov
in
in
sbb
js
pop
dec
dec
fadd
push
mov
xchg
sub
or
fsts
push
xor
mov
in
sahf
dec
inc
adc
mov
pop
fdivl
clc
lcall
in
jecxz
scas
mov
shll
mov
pop
shrl
dec
pop
xchg
mov
fst
lcall
data16
mov
pop
mov
add
addb
frstor
bnd
pop
lret
cmp
jle
nop
aaa
pop
mov
add
or
push
outsl
and
mov
lock
jp
xlat
sbb
test
test
bound
mov
aas
inc
lret
test
mov
enter
clc
or
cltd
lock
mov
xor
das
jnp
test
push
cmp
ljmp
jge
mov
xor
cmpl
jb
outsl
lock
lds
cmp
jbe
xchg
xor
cld
mov
cli
ret
stos
out
sti
mov
test
dec
movb
cmp
sub
xlat
and
pop
movsl
sub
pop
fdiv
mov
rorb
adc
mov
jae
xchg
push
xlat
mov
mov
test
xchg
xchg
jb
imul
or
movsb
and
jecxz
scas
add
mov
mov
jge
fists
sbb
outsl
insl
xchg
push
or
popa
add
mov
sbb
fmuls
pusha
cmp
mov
jmp
mov
jno
mov
adc
test
sub
stos
cmove
push
mov
add
pop
idivb
push
mov
dec
mov
jo
cwtl
mov
mov
xchg
cmp
addr16
cld
xchg
mov
ljmp
cmp
js
insl
gs
xchg
sbb
push
mov
jl
add
nop
mov
mov
shrl
movsb
fs
cmpsb
push
test
arpl
push
sbb
cmp
mov
mov
loop
inc
inc
mov
stc
bound
mov
scas
fcompl
mov
mov
ljmp
stc
es
je
adc
dec
cmp
loopne
mov
mov
repnz
in
int
xlat
fbld
outsb
push
xchg
push
jb
movsl
mov
push
int3
icebp
mov
inc
pop
push
sub
dec
es
cmp
push
adc
mov
neg
repz
scas
mov
subb
lahf
sub
mov
adc
ds
cmp
out
sub
xchg
add
xor
test
xor
je
jo
outsl
adcb
lret
mov
int3
xchg
ljmp
je
inc
xchg
popf
test
movsb
pop
test
inc
xorb
mov
and
inc
pop
mov
aas
jns,pn
in
adc
js
int3
stos
or
decl
cmpsl
mov
sub
mov
lret
xchg
int3
xor
dec
or
mov
aam
mov
out
stos
andl
js
sub
dec
and
out
in
popl
mov
push
jg
mov
call
mov
cmp
js
or
lods
ds
hlt
dec
stos
fnstsw
push
mov
mov
jns
sbb
sbb
xor
dec
cmpsb
ficomps
lret
inc
les
xchg
sub
and
lret
pop
cmpsl
outsl
mov
test
xor
sub
jmp
in
sbb
ljmp
xchg
adc
imul
mov
xchg
mov
sbb
es
lea
dec
xor
cmpsb
mov
xor
clc
je
jne
add
adc
mov
addr16
or
sub
mov
sub
mov
inc
rcrb
pop
mov
movsb
out
jo
lret
cmp
cmp
insl
lret
dec
pop
add
lods
cld
mov
out
pop
xchg
sbb
mov
xchg
xor
out
mov
lods
jne
imul
cmp
mov
cmp
xor
int3
adc
shrl
pop
iret
add
test
xor
sub
loop
or
add
pop
adc
in
xchg
in
sub
sbb
dec
std
dec
cmpsb
or
movsb
sbb
inc
in
or
bound
mov
lods
daa
aas
push
mov
lock
adc
mov
js
aam
loope
sbb
stc
ljmp
dec
and
inc
sbb
add
and
jns
loope
sub
int
jbe
dec
scas
mov
ret
stos
xchg
xor
lea
jp
aas
cmpsl
dec
mov
out
sub
in
xchg
push
jbe
adc
shlb
mov
dec
maxps
aam
ss
in
mov
mov
stos
pop
loop
push
popa
mov
push
data16
jle
mov
ljmp
subb
add
mov
mov
jge
dec
das
stc
inc
pop
jns
cli
mov
sbb
cmp
push
mov
movsl
mov
jp
fimuls
adc
sub
jne
jb
loope
mov
pop
push
outsl
or
test
call
xchg
stos
mov
imul
pop
fistpl
out
mov
lahf
mov
addb
mov
out
pop
addr16
sub
outsl
jg
outsb
out
inc
push
push
mov
pop
ss
xor
mov
mov
outsb
adc
daa
mov
pushf
std
cmpsb
add
lret
push
loop
xor
mov
mov
mov
inc
fs
or
pop
jecxz
sub
pop
cmpsl
xlat
push
sbb
mov
sub
xor
mov
mov
aam
mov
adc
xchg
mov
fcmovu
imul
mov
shll
call
add
fwait
das
mov
push
mov
inc
shll
add
stc
mov
cmpsl
mov
and
mov
and
hlt
in
shlb
or
popf
fstpl
dec
push
sbb
mov
lret
mov
sub
sbb
sub
cld
fadds
repz
nop
or
lcall
stos
xor
push
pop
inc
hlt
inc
mov
scas
dec
and
movsl
pop
mov
je
pushf
ja
cmp
sbb
mov
pop
bound
es
ljmp
outsb
jns
sub
fisttpll
lea
cld
sbb
pop
fsub
xchg
out
fldt
je
scas
xor
and
jmp
rclb
mov
xchg
dec
rorb
popf
xor
das
inc
sbb
or
inc
mov
mov
pop
testl
or
sub
sahf
mov
int
mov
push
cs
test
mov
and
xor
pop
mov
or
cwtl
iret
mov
popa
popf
sub
sbb
enter
mov
and
dec
out
inc
xchg
mov
push
popa
cwtl
and
adc
test
cmp
out
jns
jno
pop
pop
mov
xor
xor
insb
roll
out
inc
loopne
adc
mov
test
stos
mov
popa
repz
je
mov
iret
outsl
stc
jae
mov
fwait
and
loopne
int
insb
or
icebp
ds
push
jne
imul
dec
jnp
ja
jmp
fisttps
outsb
movsl
lret
pop
les
mov
aas
ja
sti
jb
xor
add
mov
fstp
push
and
xchg
cmc
mov
inc
mov
pop
inc
pushf
daa
cli
les
lods
cmp
dec
hlt
cmpsb
shrl
push
lret
je
mov
mov
push
inc
push
mov
dec
mov
test
daa
and
mov
mov
add
mov
aaa
push
ficoml
fs
outsb
inc
idivb
out
pop
out
sbb
cmpsb
adc
fisubl
ss
dec
neg
mov
push
mov
cmp
mov
sahf
pop
mov
mov
rcll
adc
nop
movsl
or
aas
lret
xchg
jle
add
leave
iret
mov
sbb
mov
dec
mov
mov
lds
stos
fdivs
mov
das
mov
dec
sti
rep
outsb
stos
pushf
loop
iret
mov
shrb
adc
or
fdivrp
adc
mov
push
ret
sbb
pop
decb
loope
test
mov
ss
cld
mov
jmp
sbb
mov
and
data16
popf
outsl
cmpsb
xchg
mov
repnz
loopne
push
fists
adc
leave
xchg
xchg
mov
adc
dec
xchg
sbb
fstpt
in
push
out
or
ss
xchg
dec
mov
jns
mov
adc
sti
das
xchg
mov
lahf
ret
jae
push
and
ss
cli
add
xchg
cmpsb
jge
lret
push
iret
mov
fs
push
sbb
mov
sub
mov
mov
and
push
sub
sbb
fs
or
xor
xor
mov
fbld
xchg
mov
push
jb
andb
or
and
pop
lds
orb
adc
lock
xchg
enter
mov
and
xor
data16
div
dec
mov
daa
push
mov
add
pop
fwait
int
jnp
jae
stos
lcall
push
dec
and
test
fstps
or
shrl
out
cmpsb
jbe
sbb
xchg
movsl
jbe
xor
icebp
dec
stc
int
mov
movsb
mov
cmp
jecxz
add
daa
iret
aaa
xchg
bnd
cltd
fwait
int
das
movaps
sbb
cmc
mov
inc
fisubs
out
mov
push
xchg
inc
and
in
pusha
popf
sbb
orl
pop
and
mov
popf
or
aam
xor
mov
lret
and
or
add
push
jp
test
lea
loopne
shlb
cmpl
jl
mov
cmp
mov
jae
fsubrl
mov
mov
add
xchg
lret
rorl
cmpsb
mov
test
pop
ret
lock
cs
sbb
mov
mov
add
pop
mov
inc
fisubrs
aam
mov
cmp
imul
cs
repz
mov
gs
pop
mov
in
test
lods
mov
adc
xchg
addr16
mov
lock
fs
int
mov
loope
xchg
mov
fstl
xorb
jp
cmpsl
in
and
add
mov
adc
data16
adc
loop
cmc
jo
loopne
or
mov
xchg
xorb
les
inc
sub
incb
pop
mov
xor
sub
push
sbb
das
or
out
stos
decl
je
sti
rorb
sbb
pop
inc
cmovbe
addr16
dec
aaa
testl
decb
fldt
es
mov
out
mov
cmp
xor
sub
xchg
add
xchg
test
xlat
shll
push
pop
aam
sub
repz
or
sbb
jmp
push
icebp
mov
mov
test
adc
mov
insb
and
inc
mov
stc
mov
add
out
mov
movsb
xor
mov
xorl
mul
pop
lds
js
std
fstl
shrl
xrelease
mov
or
fwait
mov
pushf
sbb
cli
dec
mov
cld
push
sbb
push
jle
jmp
dec
pushf
nop
or
mov
inc
fxch
dec
sub
inc
sub
mov
jae
mov
mov
xor
daa
cld
add
shrl
mov
leave
push
lds
sub
xchg
repz
sti
sub
or
sub
mov
movsb
ds
mov
mov
sbb
mov
mull
add
push
dec
ljmp
jl
hlt
pop
dec
dec
inc
fisubl
sub
in
jmp
xor
fwait
sub
iret
test
addr16
mov
push
adc
std
jmp
cmpsb
dec
sahf
aaa
or
push
mov
pop
idivl
in
ficoms
aaa
mov
lahf
inc
xor
ljmp
mov
int3
push
inc
int
pushf
mov
mov
aam
cmp
adc
call
jae
insb
sti
test
or
iret
ret
push
rcr
cmp
jl
lock
insb
les
mov
mov
mov
xchg
insl
mov
jmp
repnz
pop
mov
xchg
rcll
popf
mov
adc
ds
jg
adc
push
rorl
sbb
sub
push
arpl
fmuls
push
mov
mov
mov
scas
add
mov
mov
fisttpll
xchg
jae
scas
pop
inc
xor
mov
movsl
xlat
cmp
std
cmp
pusha
negl
or
lods
pop
mov
fstl
movsl
aaa
cld
imul
mov
mov
xor
and
fidivrl
pushf
test
inc
cmpsb
cs
inc
stos
dec
jne
hlt
jle
sbb
in
loop
aam
lock
testl
xor
xlat
xchg
cmp
fwait
mov
jg
fdivrp
adc
dec
sbb
or
dec
push
fwait
orl
mov
imul
daa
jno
inc
mov
mov
xchg
and
xor
or
add
notb
mov
imul
push
aam
jp
dec
rcrb
test
mov
lds
and
lock
or
push
or
cwtl
adc
mov
sub
or
mov
inc
aaa
cltd
mov
push
xchg
arpl
sbb
cltd
sbb
sub
adc
add
mov
cmp
out
sub
mov
sub
fmul
js
xor
inc
add
es
enter
or
popf
cmp
pop
mov
mov
call
mov
in
popf
rclb
mov
ret
out
or
jmp
aad
lahf
outsb
sbb
insb
cwtd
pop
mov
xor
scas
mov
mov
mov
cmpsl
and
wbinvd
xor
jge
mov
pop
into
orl
pop
and
ljmp
mov
js
push
xor
mov
ds
insl
cwtl
fisttpll
push
mov
clc
mov
ds
lock
mov
sub
mov
mov
shll
sbb
jno
stos
movsl
fsubrp
enter
sbb
inc
mov
hlt
adcl
mov
mov
in
and
lret
cmp
daa
cmp
scas
movsl
sub
mov
mov
repz
iret
jl
fwait
addr16
ja
push
mov
mov
rclb
pop
inc
sub
mov
jnp
clc
mov
jge
lea
jb
nop
inc
out
mov
cmp
mov
orb
adcl
aaa
mov
stos
lcall
mov
js
adc
mov
mov
add
mov
xlat
outsb
adc
xchg
mov
mov
fld1
mov
jb
ficomps
pop
imul
xchg
cmpsl
add
sarb
jae
int
flds
xor
mov
sti
push
and
jle
scas
lods
lock
and
jg
enter
fnstcw
das
push
dec
mov
jnp
xor
mov
outsb
fnstcw
pushf
mov
stos
lret
popa
or
push
imul
and
mov
sarl
mov
xor
arpl
rclb
dec
mov
mov
sub
xor
orl
xchg
insb
xor
out
test
jo
mov
mov
xor
add
sbb
xor
xchg
aaa
push
dec
int3
test
xor
ss
xchg
sar
mov
pop
scas
je
mov
loope
xchg
xlat
test
pcmpgtb
mov
mov
sub
mov
data16
jbe
mov
ljmp
or
sub
and
adc
mov
mov
mov
xor
dec
sub
push
or
test
iret
fidivrl
xchg
ljmp
pushl
sbb
jp
lret
pop
incb
outsb
or
mov
dec
ret
xchg
test
mov
sbb
scas
pop
mov
dec
outsb
ljmp
in
outsb
mov
mov
jg
gs
or
incl
js
cwtl
out
xlat
lahf
fs
jb
sub
xchg
loope
insb
cld
sbb
push
mov
sub
aad
orl
dec
mov
sub
sub
push
jp,pn
jge
ljmp
pop
jne
and
xor
inc
mov
cmc
jb
lret
or
je
repnz
mov
data16
call
aad
sub
scas
mov
cmp
rcr
lret
xchg
pushf
push
or
icebp
imul
add
mov
ret
test
bound
sub
aam
imul
add
sbb
jo
push
out
fstps
or
mov
fadds
call
stc
data16
cmc
aad
loop
mov
jne
cld
mov
mov
std
aas
icebp
jmp
movsb
or
je
xor
sub
gs
mov
daa
sbb
mov
add
add
popf
pop
movsb
jg
xchg
mov
pop
sarb
je
out
mov
mov
out
loopne
gs
arpl
cmc
mov
bound
mov
aas
ds
push
mov
adc
xchg
pop
test
ljmp
dec
inc
jmp
mov
push
rclb
fildll
shrl
inc
mov
daa
imul
mov
rclb
xchg
dec
popl
rcl
mov
push
repz
sahf
ret
pushf
adc
js
or
pop
or
add
lock
pop
mov
outsl
xor
xchg
mov
ret
inc
pop
push
js
mov
std
mov
dec
dec
inc
or
jp
sbb
jecxz
int
xor
push
sbbl
mov
jmp
jns
out
cmc
mov
xor
mov
mov
iret
ret
cmp
xchg
pop
ja
out
sahf
fwait
pop
xchg
add
push
mov
clc
fs
inc
and
faddp
mov
push
add
out
in
fdivrl
ja
ficompl
mov
xor
popf
lods
xchg
mov
test
in
fildll
ret
mov
out
rorl
stc
int3
mov
xor
cmpsb
dec
mov
into
stos
loope
push
hlt
imul
mov
fisttpl
jp
scas
incl
mov
mov
mov
adc
in
push
mov
cwtl
sub
bound
mov
insb
jg
loop
sub
fmulp
pop
xor
imul
add
imul
adc
outsl
mov
movsb
and
testb
aad
add
pop
mov
imul
or
fs
xchg
xor
and
mov
xchg
lea
and
pushf
xchg
vmwrite
call
cmc
xchg
add
xor
jl
imul
cltd
add
sub
out
dec
pop
fcmove
adc
cmpsl
lret
ja
mov
cmp
mov
xor
push
jo,pn
shr
jecxz
mov
mov
test
sarl
mov
jg
idivb
mov
fidivrl
mov
push
inc
cwtl
mov
std
adc
sbb
testb
jne
fwait
outsl
in
mov
movsl
lret
mov
inc
addl
pop
lods
lods
movsb
or
xchg
mov
and
mov
enter
add
jle
outsb
adc
or
sub
xor
adc
adc
rcrl
les
test
mov
repz
mov
jg
mov
cmpsl
mov
cmp
rcrb
cmp
test
push
mov
ja
cmc
mov
or
shlb
mov
mov
mov
cmc
or
or
stos
sbb
inc
mov
sub
pusha
mov
jo
push
mov
stos
pop
fst
leave
jno
push
dec
mov
push
or
mov
mov
add
lds
mov
xchg
add
rcrb
and
ss
adc
push
popf
xchg
xorb
add
pushf
xor
push
mov
cld
push
jl
cli
xor
xchg
jg
scas
lret
mov
sbb
xlat
mov
or
orb
aam
mov
out
popf
add
mov
push
adc
inc
add
arpl
xchg
shld
pop
mov
xor
cmpsl
dec
jne
cmp
fnstsw
add
dec
pop
loope
xor
mov
mov
fs
addr16
cld
leave
mov
pushf
stc
hlt
mov
int
adc
test
push
add
movsb
add
dec
push
scas
je
fidivrl
jge
fisttpl
mov
das
add
movsl
cmc
pop
in
rorl
cmp
adc
popf
fnsave
inc
push
ss
xchg
lea
outsl
push
pop
mov
xchg
ret
mov
ja
and
sti
push
imul
insb
jne
rcrl
fdivr
adc
fwait
outsb
int
pushf
push
in
pop
cmc
lret
fwait
into
or
not
stc
inc
jle
mov
pop
aam
mov
sahf
xlat
sub
mov
sbb
popf
xchg
mov
mov
mov
loop
test
daa
bound
push
and
pop
lahf
pop
mov
fwait
xchg
fisttpll
stc
mov
dec
push
jno
add
mov
std
gs
cli
cwtl
mov
test
lock
adc
or
cmp
cmp
mov
mov
pop
jb
call
decb
out
arpl
addr16
flds
inc
repz
lcall
mov
cmp
mov
lret
cld
jp
sarb
xor
pop
pop
sub
mov
sbb
mov
lret
pop
mov
movsb
xchg
mov
jnp
push
jo
mov
push
jge
jbe
sbb
outsl
adc
xor
pop
cmp
xlat
fidivl
pop
mov
ret
fnstenv
lahf
cmpsb
mov
cmp
xlat
sbb
lock
in
sbb
mov
xor
lret
out
lods
mov
lcall
mov
pop
pop
dec
cmp
and
xor
mov
sbb
fisubs
int3
cmp
sbb
inc
scas
dec
mov
mov
daa
xlat
orl
lret
jl
pusha
mov
lds
and
jno
in
jg
decb
inc
iret
cs
mov
aam
rcrl
mov
movsb
lock
test
xor
test
out
mov
mov
xchg
rorl
mov
pop
fdivs
mov
push
xor
adc
mov
mov
jbe
aas
lret
imul
mov
mov
jno
lea
mov
inc
cmp
fistpll
xchg
mov
mov
loope
cli
mov
jae
inc
mov
insl
sbb
in
fadd
add
stos
jecxz
jg
add
mov
push
mov
out
pop
lahf
xchg
out
dec
sub
js,pn
jge
lret
inc
adc
je
jae
mov
fimull
outsl
xor
outsb
mov
push
out
push
shlb
fcompl
psadbw
cltd
add
nop
jecxz
xor
insb
sub
fstpt
stos
adc
cmp
and
mov
mov
xor
fwait
mov
dec
mov
aad
loop
movsb
sub
sbb
ret
cld
mov
mov
aas
cwtl
insl
mov
jp
or
xor
cmp
xchg
push
add
jno
jne
sbb
sbb
and
mov
inc
in
movsb
loope
aaa
or
das
sbb
bound
pop
pop
pop
xchg
std
mov
jae
sub
pop
cmp
movsb
in
mov
xor
cmc
mov
cmp
ret
repz
mov
outsb
sbb
fcmovnu
add
lahf
fcoms
dec
sub
pop
bound
shr
cmp
sti
cli
adc
inc
or
dec
rcrb
std
rolb
push
mov
xchg
arpl
popf
outsl
sbb
mov
test
sub
push
jmp
jnp
fwait
inc
xchg
leave
pop
add
lock
cmpsb
lret
pop
xor
or
fsub
ret
mov
mov
cmp
mov
pop
fwait
ljmp
sub
inc
mov
scas
lods
xchg
shll
lea
xorl
jle
dec
mov
sbb
inc
inc
add
arpl
mov
rorb
repz
movsl
mov
rcll
jns
inc
in
lret
mov
add
mov
xor
and
mov
add
dec
xorb
lret
sub
cld
loop
adc
in
mov
rcl
cmpsl
sti
fs
xchg
pop
out
movsl
add
lret
add
push
adcb
test
or
out
xchg
cmpsb
mov
jbe
jge
mov
mov
ljmp
mov
dec
jo
into
fwait
insl
das
cmp
mov
inc
add
dec
push
ja
dec
out
mov
push
and
push
fsubrs
pop
ret
cmpsb
mov
and
inc
and
fists
mov
clc
push
scas
in
dec
xchg
pop
inc
xor
mov
mov
dec
adc
lret
pop
cld
sbb
imul
filds
test
ret
mov
enter
adc
pop
rcll
adc
push
orb
and
mov
pusha
add
sbb
out
insl
pushf
mov
ret
pop
adc
or
xchg
or
pop
ds
cmp
leave
add
mov
scas
das
pushf
and
sbb
dec
iret
xchg
call
mov
mov
cltd
fildl
icebp
jbe
stos
mov
cs
push
cmp
inc
mov
dec
adc
ficoms
mov
mov
xor
mov
mov
int
and
in
daa
rcrb
or
mov
dec
stos
cwtl
jle
cli
mov
nop
cmpsb
adc
jmp
or
dec
xchg
xor
and
fimull
pop
jecxz
fldenv
inc
sub
outsl
fwait
mov
mov
sub
jmp
mov
std
fwait
push
xor
out
add
negb
aaa
and
cmp
mov
icebp
mov
rcl
insl
jbe
lock
push
push
sub
test
mov
scas
bound
daa
mov
xchg
testl
mov
cs
arpl
cmp
sub
lea
fcom
mov
mov
xchg
cmp
pop
mov
and
fstpl
js
fbstp
mov
out
jo
adc
jnp
add
jae
insb
fistpll
stos
int3
xchg
insl
inc
icebp
mov
sub
mov
push
jl
cmp
add
push
clc
cmp
cmp
shlb
repz
mov
jmp
ljmp
lret
lahf
mov
push
xchg
mov
xor
mov
mov
mov
adc
sub
and
enter
mov
cwtl
xchg
pushf
outsb
lods
jle
fcomip
scas
ljmp
mov
or
xchg
aad
inc
movsl
popf
xchg
fs
pop
mov
pop
xor
adc
aam
xchg
push
pop
or
mov
stos
push
cmp
dec
mov
sub
and
adc
mov
lret
mull
out
std
fadd
push
dec
popl
lcall
test
insl
sbb
mov
jecxz
sahf
mov
fstp
push
mov
aas
cmpsl
lds
add
pop
mov
out
imul
mov
jns
test
sub
dec
inc
xchg
mov
jo
xlat
mov
mov
addb
je
mov
add
mov
cltd
repnz
pop
aad
or
jns
jmp
jg
sub
sub
stos
jle
push
mov
fsubrl
inc
dec
pop
imul
xchg
dec
addr16
mov
inc
loope
jp
imul
pop
daa
jge
into
sub
hlt
add
xor
pushl
cmpsb
mov
imul
xor
outsb
sbb
fcoml
in
aas
mov
aad
stos
pop
fimuls
je
test
cs
fwait
mov
push
pop
std
je
sub
mov
sub
adc
pop
sbb
stos
mov
xor
jb
mov
push
popa
incb
and
push
rorl
jecxz
jno
popf
mov
xchg
leave
xchg
sbb
jle
f2xm1
rolb
mov
decb
scas
js
jbe
mov
das
pop
push
loope
mov
pop
jl
pop
lea
jno
iret
dec
ficoml
dec
mov
bnd
gs
mov
lds
push
out
mov
scas
adc
in
pop
lea
add
dec
xchg
jle
push
xchg
decl
xor
gs
into
std
out
jge
fucompp
xchg
mov
sbb
mov
mov
out
fst
sar
cs
pop
inc
jg
cmp
out
mov
push
xorb
mov
mov
test
pop
jo
cmp
mov
inc
sbb
lds
mov
lahf
gs
push
add
adc
aaa
cmp
mov
pusha
sub
pop
add
data16
mov
mov
or
pop
jp
stos
xchg
mov
add
mov
ret
inc
jp
sub
mov
outsl
mov
aaa
aas
add
mov
mov
inc
in
testb
mov
cmpsb
insl
mov
jo
mov
das
mov
mov
test
lds
pop
sub
mov
xor
mov
mov
push
mov
dec
insb
xchg
and
pop
mov
lea
inc
pop
and
mov
les
mov
out
mov
lds
pushf
mov
mov
rcrb
mov
cmp
add
in
mov
inc
in
jecxz
add
mov
mov
andl
ret
adc
ljmp
out
ret
bound
mov
sbb
jne
push
mov
jno
jmp
push
rorl
addr16
mov
jno
xlat
repnz
or
inc
popa
cli
mov
dec
js
mov
scas
mov
dec
push
ds
xchg
mov
into
sbb
jnp
pushf
aaa
popf
inc
push
mov
lcall
mov
mov
std
je
jge
outsb
fisttpll
push
cmp
sub
incb
sbb
pop
mov
sti
or
mov
mov
in
mov
pop
test
notb
int
or
ljmp
roll
cmpsl
jle
xchg
cmc
sbb
push
push
xor
lcall
mov
jg
push
fcoms
fsts
or
mov
xor
jno
dec
std
out
mov
add
sbb
cmp
adc
ret
mov
or
inc
xchg
inc
adc
stos
test
xchg
ficomps
decl
mov
pop
lock
push
mov
rcrl
out
dec
mov
test
mov
mov
cmpsb
fcoms
pop
jbe
sbb
push
daa
jae
xor
xchg
push
cs
call
aam
cwtl
lock
xlat
push
mov
ret
fidivrl
mov
movsl
lret
inc
adcl
addr16
mov
jl
data16
mov
das
lret
mov
push
loop
inc
mov
iret
pop
mov
adc
xchg
popf
pop
sub
jb
jl
mov
cmp
push
fsubs
xor
or
mov
adc
outsb
inc
shlb
cmc
mov
sarl
lea
or
cld
call
xor
mov
in
fisubrl
fsts
mov
out
sbb
imul
push
xchg
pop
mov
sahf
leave
dec
or
popa
shl
jge
cmp
mov
shrb
xor
sub
psrlq
aas
mov
dec
pop
fisubrl
push
pop
in
icebp
shll
in
mov
int3
or
insb
and
dec
mov
mov
addb
add
pushf
push
push
sub
data16
and
xchg
inc
jbe
mov
push
mov
js
dec
and
and
popa
cmp
push
mov
cmp
sarb
loop
xchg
pop
lret
mov
andl
test
popf
bound
lret
mov
cmp
test
and
imul
push
fcom
add
test
insb
js
lods
stos
or
add
std
mov
and
cmpsb
dec
out
sub
les
jmp
mov
inc
and
xchg
pop
mov
or
repnz
mov
xorb
sub
mov
testl
dec
lods
repnz
iret
lretw
cli
mov
fcompp
xchg
jae
jge
mov
mov
rcrl
push
sbb
les
xor
hlt
or
out
cltd
out
ret
test
or
xchg
out
cltd
movsb
arpl
jno
mov
je
pop
ret
stc
in
jne
std
dec
inc
out
mov
scas
sti
addl
out
rcl
mov
fmull
call
mov
xor
add
inc
stc
mov
add
push
les
mov
std
or
mov
mov
or
dec
loopne
lcall
dec
cld
in
fsubrl
dec
xchg
dec
push
fimull
sbb
inc
or
xor
xor
xchg
pop
jb
imul
mov
mov
push
lahf
cmp
mov
mov
fwait
sub
sbb
rolb
push
jbe
stc
jnp
stos
repnz
adc
repz
xchg
andb
adc
push
data16
stc
pop
xor
xchg
and
dec
cmp
mov
push
sub
mov
add
mov
and
mov
mov
out
dec
pop
scas
mov
js
mov
imul
insb
fwait
or
jb
lret
jmp
les
mov
mov
xlat
lds
stos
test
mov
add
sbb
mov
jmp
jge
dec
lock
pop
pop
mov
es
jo
or
lods
stos
movsb
jl
pusha
mov
inc
mov
push
ljmp
mov
adc
mov
mov
data16
lods
jp
mov
pop
repz
lret
xor
or
xchg
fmuls
gs
cltd
or
jae
xchg
xor
imul
mov
inc
stc
outsl
lahf
xor
sub
xchg
mov
mov
xchg
mov
insl
scas
jge
pop
mov
stos
mov
xor
push
lret
mov
xchg
pushl
push
enter
mov
dec
mov
xor
cltd
notb
mov
jmp
mov
mov
push
orl
sub
pop
dec
int
es
movsb
sub
std
pop
adc
out
jg
xchg
fldcw
adc
out
mov
ss
test
xlat
ret
xor
int
adc
mov
repnz
sbb
ret
rorb
and
imul
mov
push
mov
test
into
stos
xor
clc
xor
dec
sti
mov
jmp
lea
sub
xor
idivl
pop
loope
inc
mov
fnsave
mov
popf
and
inc
test
mov
pusha
jl
imul
dec
lret
xchg
cmpsb
nop
xor
pop
aam
mov
push
xchg
sbb
aas
out
cmp
loop
mov
or
in
mov
dec
movsl
or
mov
faddp
xchg
cmp
mov
das
sbb
sub
cli
add
loop
cmp
lea
nop
loope
popf
ret
mov
cld
stos
push
adc
mov
fsubrs
adc
pop
and
mov
ffreep
adc
ret
das
push
cmp
and
mov
xchg
cltd
mov
dec
ljmp
mov
les
inc
xor
pop
jecxz
adc
in
mov
js
sbb
cmpsl
push
ja
or
xchg
xchg
pushf
sbb
mov
ljmp
mov
aad
adc
fucomi
in
sub
mov
ljmp
cli
and
mov
dec
mov
mov
dec
nop
enter
mov
pop
cmp
inc
pop
lods
mov
add
inc
pop
mov
ret
jbe
mov
data16
dec
mov
push
lret
pop
mov
add
sti
std
stos
jb
inc
orl
mov
in
sub
adc
push
adc
in
sub
ja
push
mov
adc
mov
divl
in
mov
sbb
std
mov
xchg
inc
lret
js
fcompl
mov
andb
incb
push
cmp
lahf
addr16
push
inc
inc
ds
mov
push
adc
ds
icebp
mov
push
test
jecxz
mov
mov
sahf
imul
outsl
sub
add
gs
xchg
xchg
inc
out
add
imul
arpl
or
out
lods
mov
lret
xor
pop
dec
mov
push
aad
in
or
xlat
xchg
fsts
jecxz
jo
mov
mov
dec
faddl
test
imul
cmp
mov
jmp
lods
push
roll
mov
or
clc
fmuls
sbb
popl
pop
jecxz
cmpsb
xorb
dec
test
sar
cli
mov
push
add
xchg
jns
jge
xchg
bound
in
push
fs
ss
in
mov
imul
leave
int
rcr
mov
call
mov
movsb
sub
lods
dec
jbe
testl
aam
or
in
pop
push
sbb
push
jo
mov
sbb
insb
sti
sbb
arpl
adcb
jp
outsb
int3
iret
mov
out
pop
pop
jg
pop
inc
addl
loope
ljmp
mov
push
test
push
cmp
insl
mov
in
dec
rcrl
bound
mov
sbb
sub
cli
push
mov
push
fs
xor
hlt
pusha
lahf
mov
xlat
mov
lcall
loopne
mov
push
loopne
dec
enter
mov
test
sub
fildll
xchg
nop
fildl
lds
xchg
repz
ljmp
icebp
mov
sbbb
sub
push
pop
subl
xchg
xchg
add
cld
ljmp
pusha
mov
xchg
mov
jne
add
inc
xor
mov
xor
and
loope
push
jl
lods
rolb
sbb
xchg
pop
mov
mov
add
dec
mov
jne
or
xchg
imul
xchg
cmpsb
rorb
push
xor
fmul
adc
inc
ljmp
popa
mov
rcr
push
xorl
cwtl
add
push
push
pop
pop
ss
xchg
clc
cld
dec
insb
imul
shll
cmp
hlt
xchg
jle
sahf
int3
stos
push
mov
sub
inc
stc
mov
inc
pop
fiaddl
dec
dec
std
adc
xchg
pop
inc
jo
mov
arpl
pop
mov
or
stc
adc
in
test
sti
push
data16
testl
mov
mov
addr16
rorl
add
push
mov
mov
rclb
mov
or
mov
fists
pop
gs
and
ds
lock
addr16
insl
mov
or
xchg
lahf
pop
mov
mov
mov
mov
inc
mov
inc
push
or
mov
out
orb
fldenv
bnd
or
aam
loopne
mov
addr16
mov
xor
push
mov
add
xor
dec
lds
xchg
jb
jle
jmp
inc
push
sti
xchg
mov
push
xorl
call
out
ss
mov
ja
mov
fwait
add
mov
shlb
outsb
mov
loop
adc
cmp
mov
es
in
or
mov
stc
adc
clc
andl
orb
in
and
mov
or
andb
fmull
pop
jbe
push
inc
or
xchg
mov
and
int3
arpl
cmp
mov
insl
cltd
cld
icebp
xchg
mov
cmpsl
cmp
jecxz
adc
mov
mov
or
fisttpll
addr16
fwait
sarl
insb
fists
pop
dec
xchg
bound
into
cmp
stos
mov
sbb
gs
add
loop
xchg
adc
fsubrl
or
out
and
in
shr
inc
jecxz
jle
sbb
mov
push
pop
pop
dec
popf
out
mov
idivb
push
xchg
jnp
jbe
fisttpll
cmpsb
cmpsl
lret
imul
sbb
scas
lods
jno
mov
fwait
test
push
jbe
pop
imul
cmpsl
sbb
xchg
adc
call
xchg
push
repz
mov
cs
lret
das
jmp
js
mulb
or
in
or
fldenv
notl
imul
push
push
mov
push
add
addl
pop
jmp
test
shlb
xor
cld
fidivrl
lock
lea
test
push
fmuls
mov
dec
sbb
rol
jne
xchg
decl
int
bound
cmp
mov
mov
pop
xor
lock
inc
out
xchg
and
sbb
rcrb
mov
jbe
push
lcall
and
pop
mov
add
push
pop
push
in
xchg
xor
dec
mov
into
mov
sti
mov
push
outsb
stc
or
lret
cmpsb
sbb
nop
or
idivl
xor
push
xchg
inc
test
mov
xchg
sub
xor
mov
cwtl
mov
adc
fldenv
arpl
cmp
mov
mov
sub
jo
enter
xchg
xchg
jns
xchg
lock
sub
add
push
mov
mov
fldcw
lea
mov
fwait
rorb
andb
cmp
add
xor
test
insl
cli
adc
loope
stos
inc
cmp
sub
ffree
mov
sub
pop
cmpsb
or
push
inc
out
mov
jg
stc
or
mov
inc
addb
subl
out
mov
fisttpll
test
push
adc
jg
stc
adc
cmpsb
cmpsl
cld
mov
sti
jae
mov
push
or
sub
sete
repnz
jo
sub
sbb
mov
jb
sbb
add
call
pop
rcrb
add
push
or
or
mov
sub
cmp
mov
les
pop
sbb
adc
mov
arpl
mov
sbb
imull
in
movb
js
xlat
bound
sub
inc
or
loope
mov
mov
jb
icebp
cmpsb
mov
dec
movsb
cli
popa
mov
imul
mov
movsl
lods
jmp
or
pusha
addr16
xchg
mov
push
xor
mov
fisttpll
jl
mov
mov
pop
into
pop
scas
mov
mov
aas
dec
les
inc
test
movsb
add
pushf
pop
adc
int3
xchg
rcrb
or
lret
insl
mov
mov
add
sub
mov
aad
imul
jmp
test
mov
std
add
data16
shr
push
cmp
dec
jge
mov
or
stc
int
nop
jo
mov
xor
arpl
xchg
fisubrs
imul
mov
aad
mov
mov
sbb
and
jb
or
out
cli
cmp
in
sbb
lds
data16
je
cmpsb
jbe
push
sub
dec
sbb
jp
ds
aad
dec
in
clc
outsb
jb
out
dec
cs
mov
sti
cmp
inc
adc
mov
out
pushl
push
negb
mov
xor
sbb
mov
test
rorl
adc
aad
icebp
and
cmc
pop
ja
push
mov
fst
cmpsb
mov
mov
sbb
cltd
ljmp
mov
sub
xlat
mov
sahf
inc
xchg
xchg
popf
fstl
les
push
test
aam
xchg
cmp
cmp
pop
inc
push
cmpsb
inc
sbb
pushf
mov
lods
cmpsb
pop
ljmp
rcr
cmp
fdiv
in
cmp
xor
movsb
test
or
decb
mov
les
lock
ja
mov
es
aam
sbb
sub
or
pusha
and
jno
adc
inc
jp
mov
cmc
pop
xor
mov
and
stos
mov
push
xchg
mov
jb
xor
ficoml
cwtl
jp
mov
les
out
dec
outsb
jae
cmc
lcall
arpl
incl
pop
dec
icebp
rorb
sub
jbe
mov
out
cmp
inc
mov
scas
sub
cmpsl
mov
adc
dec
daa
mov
aad
mov
imul
enter
mov
fdivl
insb
in
push
lret
adc
daa
sbb
pop
and
cwtl
and
dec
repz
jle
in
mov
sbb
jo
xchg
dec
xchg
jmp
cmpsb
sub
push
or
imul
fidivrs
push
add
push
int
xor
scas
sbbb
mov
sub
mov
pop
or
jnp
sub
mov
xchg
adc
movsb
pop
adc
sbb
cmp
adc
mov
sbb
jnp
orl
ds
fs
sub
jbe
lret
add
nop
pop
jl
push
mov
incb
xor
aad
mov
push
cmp
scas
movsl
ljmp
add
mov
fwait
mov
loopne
inc
lods
cmp
push
inc
repz
mov
inc
in
jl
sub
xchg
and
ss
mov
push
lock
cmpl
xor
fmull
aaa
adc
inc
mov
in
leave
mov
test
fisttpll
popf
inc
addr16
loop
push
or
lods
insb
test
sbb
xorb
xor
repz
xchg
test
addl
outsb
out
inc
mov
repnz
xchg
mov
movsl
scas
jecxz
popf
cmc
mov
xor
inc
fcmovne
movsb
jb
pop
daa
xchg
cmp
mov
mov
and
aaa
mov
shll
loope
mov
jb
dec
dec
fnstsw
into
cwtl
out
mov
repnz
mov
and
in
jbe
sbb
outsb
mov
push
call
ja
mov
lock
lock
fisttpll
dec
loope
push
mov
andl
pop
mov
mov
push
aad
mov
scas
sbb
fcoms
pushf
fidivl
cmp
xor
dec
dec
das
clc
mov
adc
xchg
lret
call
or
push
mov
pop
fldt
leave
sbb
mov
inc
or
push
cmpsb
push
mov
lret
lods
clc
cmpb
in
adc
adc
outsb
in
mov
mov
jo
test
fcomps
mov
outsb
mov
jbe
xlat
inc
or
fiadds
mov
int
mov
lock
repz
fnstenv
mov
fiadds
cmp
xchg
cmc
jl
xor
mov
mov
ja
jecxz
in
pop
loope
or
or
shl
inc
xchg
scas
addr16
adc
test
inc
adc
mov
int
and
iret
mov
xor
xchg
xchg
add
push
lods
and
and
mov
mov
je
mov
jno
adc
jbe
das
lret
test
sub
mov
cld
xor
aad
roll
lret
mov
test
adc
mov
testl
rol
jo
js
pop
mov
inc
jno
sbb
cwtl
cmpsb
cmp
mov
mov
push
push
xchg
sub
call
sahf
pushf
int3
scas
mov
ljmp
mov
nop
mov
data16
push
in
dec
leave
mov
push
inc
orb
mov
jmp
mov
aaa
test
mov
sarl
mov
pcmpgtd
lock
outsb
call
push
and
jg
shrl
cmp
jecxz
mov
loop
repz
push
fs
mov
ret
add
and
sub
cmp
sub
rcrb
sarb
push
cwtl
mov
pop
mov
dec
adc
mov
psubusb
xchg
pusha
ds
xbegin
sub
jg
jl
js
out
mov
push
xlat
sub
ss
fwait
or
xor
pop
jns
inc
mov
mov
insb
popa
add
or
imul
cvtpi2ps
fildll
pushf
icebp
mov
cmp
pop
sbb
inc
cs
push
cmp
in
dec
mov
cld
loop
mov
lret
inc
inc
or
fabs
mov
cmpsb
sbb
lahf
adc
repz
mov
push
les
pop
ret
xchg
mov
sarb
sub
ret
pop
pop
mov
insl
jge
cli
mov
sub
fucomp
adc
mov
repnz
arpl
mov
push
inc
addb
pop
out
shrl
stos
lret
jmp
loop
push
pop
js
pop
sti
movsl
adc
adc
sbb
out
inc
dec
shll
rorb
adc
dec
stos
xchg
pop
lret
lret
xchg
leave
inc
mov
idivb
cmp
mov
sbb
ss
cs
out
add
repz
push
inc
or
sti
adcl
mov
mov
xchg
pop
shll
push
jecxz
negl
add
les
out
add
ds
jbe
stos
mov
fs
mov
pop
out
mov
or
js
icebp
jbe
mov
outsb
out
into
fldt
rolb
adc
mov
aam
mov
pop
das
or
cmpsb
sbb
pop
imul
sbb
jp
sbb
int3
aam
dec
sar
js
sub
mov
sub
and
cmpsl
dec
add
push
imul
daa
or
repnz
scas
mov
enter
jmp
rorb
inc
mov
les
xor
inc
sub
xchg
sbb
pusha
pop
sub
xchg
push
cli
inc
or
or
ja
jmp
pop
mov
xchg
mov
jae
clc
lock
cs
or
or
or
mov
push
jecxz
mov
pop
jno
mov
cmp
daa
fisttpl
or
iret
repnz
xchg
mov
mov
mov
sub
xor
ss
mov
push
xchg
cmpsb
rorl
xchg
hlt
jp
xor
int
stc
sti
movsb
mov
sub
xor
nop
mov
mov
data16
cmp
push
imul
dec
iret
xchg
add
mov
std
sahf
ret
in
mov
mov
add
loopne
jg
xchg
push
fstpt
leave
mov
out
pop
mov
push
mov
jbe
jl
outsl
pushf
dec
or
ss
lds
push
xor
mov
movsb
in
f2xm1
mov
repnz
loop
fstpt
or
sub
addl
inc
imul
jo
in
aas
dec
sbb
rclb
mov
xor
call
xor
inc
push
push
lock
dec
sbb
adc
andl
jae
repnz
loop
ja
dec
js
test
cmc
mov
sub
imul
insb
cmp
and
imul
dec
repnz
xchg
mov
fbld
daa
sbb
mov
adc
repnz
sbb
mov
test
popf
mov
loope
ljmp
pop
fs
xchg
jge
pop
mov
fwait
mov
data16
outsb
xor
movsb
jp
or
xchg
fiadds
insb
sub
les
or
lds
adc
repnz
stos
sbb
int
cmp
dec
mov
cs
add
jae
push
cmpsb
inc
push
xchg
es
movsb
mov
ficoms
push
or
xchg
test
mov
not
ja
dec
sahf
add
mov
xorl
int
cmc
cld
arpl
push
mov
ret
fcos
mov
leave
mov
rorb
lea
push
repz
ficoms
xchg
cmpps
in
push
aaa
inc
mov
ficomps
add
sub
and
add
cli
cmp
test
scas
mov
shl
arpl
xchg
jne
js
mov
jbe
sbb
aad
in
cmpsb
cmc
mov
aaa
mov
dec
orb
mov
aad
dec
push
enter
or
ret
popa
sbb
mov
mull
push
ficoml
adc
and
sub
mov
out
push
scas
mov
aad
mov
push
inc
mov
mov
adc
jp
cltd
mov
and
gs
call
pop
inc
lret
xor
cmpxchg
in
lret
fnstsw
cmp
xchg
mov
loop
mov
subl
fimull
ljmp
popf
outsl
int
ror
xor
shll
sarb
push
push
jmp
call
inc
in
jbe
fs
cmpsb
dec
push
cmp
shll
pop
jle
push
xorl
data16
cs
or
in
je
adc
or
int3
pop
cmpsb
fdivrl
daa
mov
xchg
lea
jns
adc
inc
sbb
filds
mov
ja
es
xchg
lret
imul
mov
sti
jb
pop
mov
rorl
in
mov
jae
lret
sti
stos
pop
out
mov
test
or
xchg
adc
push
pop
pop
rol
jp
insl
cld
or
and
add
addr16
adc
sub
or
cwtl
dec
ficomps
dec
mov
cmp
or
or
jmp
sub
sbbl
or
mov
shl
popa
xchg
xchg
les
mov
pop
inc
adc
ds
add
jmp
mov
cmp
push
xchg
ret
xchg
jne
popa
mov
push
jo
in
cmpsl
aad
repz
or
mov
nop
push
fisubrl
xor
xor
lds
mov
pusha
fs
adc
mov
rcll
mov
lahf
in
roll
and
mov
inc
and
mov
mov
and
mov
inc
mov
cmpsb
cmpb
movsl
sbb
mov
sbb
scas
sub
push
sub
add
mov
xorb
mov
xor
mov
divb
lret
pop
lret
push
dec
js
int
mov
inc
cmp
or
ss
test
add
and
xchg
bound
or
orb
out
push
inc
mov
jbe
fnstsw
outsb
adc
sbb
es
and
xlat
cs
pusha
fwait
mov
inc
les
jno
fcmovbe
test
repnz
outsb
sarb
ret
test
mov
mov
xor
inc
or
clc
jmp
inc
inc
mov
pop
pop
rcrl
notl
mov
cmpsb
push
xchg
push
fwait
iret
rorl
cwtl
imul
or
dec
mov
pop
shr
jno
bound
movsb
and
mov
popa
jge
dec
dec
ss
rorl
call
xchg
or
popf
addr16
mov
repnz
jne
push
inc
xor
mov
xchg
mov
daa
popl
xor
out
ret
mov
popf
fstps
sub
movsb
xor
jno
sahf
sbb
mov
cmp
mov
ret
xchg
adc
cld
mov
test
movsb
cmpsb
repz
inc
sub
xor
mov
add
cmp
out
xor
mov
fsubl
popf
cmpsb
test
sbb
addr16
mov
mov
stc
ljmp
dec
mov
mov
scas
mov
sub
mov
mov
sub
fs
mov
mov
sub
cmc
pop
loopne
cli
imul
mov
cmovbe
cld
dec
cs
xor
ret
pop
xchg
sub
ficompl
xchg
cmp
outsb
mov
cmpsl
fcmove
adc
jno
in
mov
push
jge
stc
daa
mov
leave
mov
loope
mov
xchg
cwtl
shlb
pop
lcall
xor
sbb
dec
or
jmp
fmul
mov
and
adc
cmpsl
inc
mov
iret
cltd
or
add
sub
popa
pop
mov
mov
outsb
mov
add
decb
or
or
jg
roll
mov
pop
in
sbb
mov
lret
je
sarb
int3
pop
test
sbb
lahf
mov
gs
push
jae
in
and
and
pop
mov
mov
xchg
fisttps
jns
sub
popf
mov
test
mov
fimuls
mov
in
mov
int
fsts
pop
dec
mov
arpl
movsb
icebp
sbb
or
jmp
das
in
pop
mov
xchg
out
arpl
out
sub
sti
je
mov
rcl
xchg
mov
pop
aad
mov
add
or
in
movsb
fwait
mov
cmpsb
sub
pusha
sbb
mov
jbe
push
mov
fsubs
sahf
adc
sub
ficompl
fcmovnu
jge
enter
dec
mov
and
add
xor
dec
push
pop
push
pop
jge
adc
mov
xchg
ljmp
icebp
roll
pop
mov
cmpsl
pop
pop
mov
cmc
mov
mov
fistpll
stos
mov
rcrb
incb
or
push
fcmove
adc
pop
mov
push
popa
add
cs
and
shlb
mov
lock
ljmp
dec
push
lcall
stc
pop
dec
ds
mov
jae
out
cmp
xchg
cli
pop
add
mov
mov
popf
adc
push
jbe
cmp
push
icebp
pop
mov
push
cmpl
xchg
out
push
sarb
int
loopne
mov
insb
adc
or
iret
mov
or
xor
popa
or
cmp
xchg
jg,pt
imul
pop
mov
popf
adc
not
iret
js,pt
add
sbb
outsl
cmp
mov
lds
jns
fs
aad
dec
jbe
mov
lahf
inc
cltd
cmp
cmp
xchg
cmp
push
or
pop
xchg
inc
orb
idivl
fisubrl
mov
ds
add
cmc
aad
mov
mov
lret
out
inc
lret
sub
stos
sti
mov
insl
lcall
ljmp
inc
pushf
jae
or
mov
cwtl
bound
sahf
mov
fcoml
ret
fisttpl
imul
movsl
movsb
inc
stc
mov
pop
mov
cmpsb
xor
lcall
arpl
adc
adc
xchg
push
mov
leave
mov
dec
out
or
scas
lahf
mov
mov
xchg
and
scas
int3
cmpsl
jge
and
inc
fmull
sbb
xchg
lahf
iret
fldenv
mov
add
xor
or
mov
mov
mov
lock
and
sub
xchg
jmp
jp
adc
cs
and
addr16
cwtl
push
cmc
cmpsb
test
in
arpl
stos
sub
jg
xor
xchg
inc
mov
outsl
push
adc
shrl
dec
lods
jns
fmuls
mov
mov
jecxz
pop
mov
cmpsb
cltd
dec
mov
outsb
jmp
or
loopne
mov
mov
add
insb
ret
mov
mov
mov
ja
int
xlat
scas
mov
pop
adc
cmp
sub
movw
mov
dec
push
inc
mov
dec
sbb
cmpsb
mov
xchg
sbb
dec
lret
jp
fsubrl
jno
push
mov
inc
push
inc
pusha
mov
popf
mov
mov
push
dec
int
jg
negb
test
sbb
mov
jo
mov
loop
or
test
fldt
jbe
mov
xchg
push
and
fsubs
out
loopne
jmp
mov
mov
aaa
adc
xor
lock
xor
repz
pop
ja
pop
cmp
mov
push
mov
dec
je
subb
adcb
adc
mov
aam
insb
movsl
int
pushf
mov
imul
pop
gs
xor
stc
and
adc
testl
lea
push
mov
aad
adc
inc
loop
xchg
cs
pop
mov
mov
cmp
sub
test
and
dec
inc
adc
loop
cmpsb
or
repnz
mul
sahf
fisubrl
push
add
mov
inc
out
push
pop
rorl
dec
inc
clc
or
sub
mov
fdivrl
cmp
mov
add
mov
add
in
xchg
inc
bt
data16
fildll
mov
ja
or
adc
sub
lcall
loop
leave
adc
inc
mov
lret
aad
mov
loope
or
mov
rclb
sub
scas
dec
xchg
pop
stos
sti
mov
mov
es
inc
dec
pop
jle
dec
mov
push
mov
sbb
rol
cmpsl
add
add
push
imul
sbb
mov
clc
cwtl
sbbb
push
sahf
loope
mov
cmp
aaa
push
test
push
std
mov
imul
adc
pop
mov
mov
push
cli
and
mov
mov
mov
inc
push
popl
or
mov
xor
mov
push
in
adc
das
push
push
repnz
mov
adc
mov
or
push
adc
test
lods
or
push
ficompl
mov
adc
mov
mov
xor
popa
fisttpl
or
pop
jno
cmp
addr16
or
mov
test
std
jge
pop
fmull
cs
ljmp
mov
and
ljmp
decl
std
or
insl
sbb
outsb
int3
jmp
mov
test
inc
xor
mov
mov
loopne
sarl
push
push
cmpsb
fisubrl
das
dec
outsl
fdivr
adc
mov
mov
cmp
mov
sbb
mul
mov
mov
mov
push
and
xchg
mov
xchg
stos
dec
popa
test
mov
cmp
je
imul
mov
int
iret
enter
mov
cmp
and
push
fwait
mov
cmp
out
in
test
stc
or
inc
scas
int3
out
jns
xlat
mov
std
shll
mov
notb
jbe
xor
aam
sub
pop
and
mov
rcll
mov
sbb
xchg
daa
lods
sbb
cld
adc
outsb
jmp
rcl
lret
fs
aam
cmp
movsb
out
inc
daa
bound
sub
pop
xchg
ljmp
fxch
sub
cli
cmp
xchg
jp
sbb
mov
xchg
je
aas
push
mov
add
sub
push
dec
pop
fistpll
mov
cs
sub
and
mov
xchg
push
add
repz
subl
pushf
pop
dec
jns
mov
inc
mov
or
inc
dec
mov
test
aam
in
mov
pop
xchg
cmp
xor
dec
daa
mov
stc
cmpsl
ds
aad
mov
add
xchg
mov
or
test
shlb
mov
dec
test
mov
and
mov
jne
pop
dec
aam
call
jno
sbb
outsl
test
dec
mov
push
pop
dec
sub
enter
inc
xor
data16
jnp
fdivp
mov
jns
mov
das
or
aad
or
fnsave
test
popf
lret
in
mov
cmp
aam
cmp
adc
movsl
andl
sub
push
mov
mov
and
and
sub
fwait
mov
adc
mov
popl
xchg
push
imul
lret
jp
dec
push
and
mov
test
adc
mov
cwtl
mov
mov
outsb
ja
adc
mov
xor
mov
push
les
dec
inc
addr16
xor
pop
mov
ret
mov
push
shll
nop
arpl
cmpsl
ljmp
xchg
loope
jg
xchg
fbstp
nop
mov
cwtl
mov
jmp
cmp
sbb
je
xor
out
mov
mov
cmp
cmpsl
lock
loopne
cmp
and
mov
push
mov
pop
inc
push
mov
ret
sub
cmp
loop
xchg
mov
xchg
in
sbb
push
jne
js
mov
adc
push
xor
cld
pop
test
push
mov
bound
ret
mov
or
sbb
mov
addr16
xchg
pop
cmp
sub
popf
xchg
mov
xlat
fmuls
sbb
cmpw
gs
lods
inc
sar
in
and
xor
mov
pop
xchg
sub
fsubrl
sbb
xor
lods
jmp
lea
cld
push
mov
out
out
dec
xchg
adcl
pop
push
cwtl
insb
mov
testl
rclb
out
lcall
jl
pop
xor
pop
cmp
mov
pop
sti
in
lret
push
and
or
inc
mov
and
inc
nop
rcrb
cltd
push
cwtl
rcrl
sarb
inc
or
dec
inc
fld
mov
shrl
jl
mov
lock
ror
mov
loop
mov
popf
in
lret
push
inc
aam
mov
repnz
rcrl
inc
and
cltd
popf
push
or
and
cmp
mov
js
lcall
in
faddl
sub
pop
dec
xor
mov
movsl
cmp
mov
and
js
movsb
mov
sbb
pop
or
insb
and
mov
das
in
leave
cmpsb
mov
je
aad
xor
pop
test
das
sbb
lock
cmpb
cld
aaa
push
mov
in
dec
outsb
stos
nop
imul
xchg
push
fstpl
or
mov
mov
add
fbstp
sti
jae
aas
mov
ss
cs
lahf
xor
mov
mov
loope
xor
or
aaa
xchg
fwait
sbbl
sysexit
or
out
dec
xor
pop
fmuls
testl
dec
es
js
fs
stc
push
movsl
mov
sbb
add
push
mov
je
test
xor
ficompl
fmull
inc
cli
insl
das
daa
mov
inc
ja
pop
adc
xchg
push
push
test
ljmp
xor
adc
rcr
inc
mov
mov
or
in
xor
inc
mov
inc
scas
das
cli
jno
js
jae
repz
xorb
jge
movsb
mov
xlat
or
js
mov
cmpsl
dec
adc
scas
hlt
and
cmpsb
sbb
push
andl
push
ljmp
repz
jecxz
out
hlt
mov
les
aas
fstpt
xchg
dec
out
xor
inc
mov
xchg
mov
data16
mov
inc
pop
aas
xchg
mov
cli
xchg
popf
inc
test
addl
pop
mov
out
mov
sbb
mov
loopne
pushf
sub
cld
movsl
xchg
inc
mov
jge
push
pushf
adc
mov
inc
les
sub
mov
fs
cwtl
and
ret
fs
xor
inc
pop
gs
mov
out
xchg
mov
fcomi
cwtl
aas
aam
jmp
sbb
cmp
xchg
inc
pop
lret
xchg
sbb
jl
dec
stc
clc
ffree
ret
movsl
jae
pushf
dec
aad
daa
cmp
mov
sub
xchg
add
pop
mov
jmp
xchg
clc
pop
dec
jno
mov
pop
dec
leave
cmp
shl
mov
stos
sbb
cmc
add
mov
mov
mov
jmp
aaa
jbe
xor
mov
jnp
or
xor
mov
mov
das
int3
lcall
adc
mov
mov
mov
popa
pop
repz
test
out
mulb
lret
dec
fmull
out
orb
sub
lock
and
out
inc
mov
test
lds
dec
adc
aas
sbb
inc
xchg
and
and
and
cmp
orb
or
popf
sub
inc
test
addl
ljmp
sub
nop
stc
loopew
sub
cmp
ror
ds
and
repnz
inc
sub
jl
mov
dec
je
pushl
test
aaa
mov
jno
mov
and
pusha
mov
jge
push
mov
rcl
mov
cwtl
jae
cli
lock
add
cmpsb
fbld
outsb
stc
test
dec
pushf
ret
data16
mov
adc
or
mov
mov
jmp
sbb
mov
leave
inc
pushf
inc
lret
mov
sub
jbe
shrb
ss
and
frstor
outsl
scas
mov
mov
stos
inc
sub
jb
aam
ss
jle
dec
mov
stc
push
dec
sbb
xor
dec
fsqrt
mov
add
inc
das
mov
pop
add
mov
push
test
and
push
jg
inc
ret
pop
lahf
jge
mov
sbb
pushf
lods
mov
mov
mov
xor
mov
sbb
jmp
shr
or
pop
xacquire
rorl
mov
mov
pop
addr16
xor
dec
dec
xchg
or
lods
das
jge
cmc
andl
fcoms
sbb
aaa
cwtl
mov
mov
adc
mov
mov
lock
insl
mov
enter
adc
and
jne
mov
mov
and
jecxz
mov
mov
addr16
xor
jne
xchg
xor
and
adc
or
imul
sub
mov
sub
mov
jnp
insl
hlt
or
rcrb
addr16
test
cli
dec
mov
xor
sub
add
xlat
imul
imul
or
and
mov
xor
push
sbb
push
push
jecxz
xchg
mov
fs
mov
cld
xchg
out
sub
adc
loop
or
pusha
mov
addr16
mov
dec
push
cmpsb
cmpsl
inc
adc
dec
xchg
ret
in
adc
pop
imul
test
sub
dec
cmpsb
stc
xor
mov
test
shrl
mov
into
adc
shlb
inc
sbb
outsl
mov
sbb
faddl
push
sahf
lea
dec
mov
cltd
or
cmpsl
mov
test
hlt
sbb
insl
xlat
cs
mov
mov
xchg
movsl
xchg
imul
mov
sub
jle
mov
out
cld
ljmp
cmp
xchg
mov
sti
aam
outsb
mov
and
repz
pop
pop
sti
ret
lods
mov
adc
mov
mov
inc
mov
dec
dec
adc
dec
mov
dec
jl
call
xchg
push
pop
pop
sbb
fiaddl
xchg
push
sarl
jnp
fadd
and
mov
gs
sbb
pop
or
inc
mov
nop
ja
rolb
and
js
jecxz
pushl
imul
je
test
inc
dec
and
data16
lea
dec
insl
mov
push
movsb
aam
mul
scas
outsl
mov
xor
pop
lea
out
clc
addr16
xorb
hlt
xchg
sub
mov
add
insb
and
mov
sbb
loop
xchg
insl
addr16
push
push
sub
adc
mov
cmpb
jmp
pop
mov
push
add
stc
mov
aad
les
mov
sbb
adc
and
push
and
in
push
inc
add
xor
es
mov
pushf
rclb
or
pop
inc
aad
xchg
scas
mov
jle
arpl
add
mov
and
sub
push
std
xchg
add
scas
clc
mov
movl
cmpsb
test
hlt
shrb
faddl
jecxz
fstp
orb
lods
mov
pop
inc
xor
xor
mov
test
add
je
test
call
xchg
jge
jle
sbb
xchg
xor
pop
sti
lcall
or
js
or
jp
push
leave
mov
adc
mov
icebp
cld
add
hlt
mov
cmpsl
mov
js
mov
notb
mov
or
mov
add
mov
fucomp
out
mov
in
cmc
mov
xor
jo
js
jbe
decl
lret
xor
or
adc
arpl
mov
addb
lret
pusha
fs
jno
mov
aam
divb
xor
push
fwait
add
pop
jl
daa
cmpsl
stos
sbb
aam
movsl
mov
mov
stc
pop
lcall
mov
adc
in
pop
jae
ja
mov
push
rcrb
mov
popf
cmp
mov
das
cld
push
mov
mov
add
mov
inc
mov
mov
leave
mov
test
or
jno
notb
and
inc
dec
pop
or
pop
sbb
cmp
cs
cmp
jmp
push
or
jns
insb
jmp
dec
pop
mov
jle
dec
rcll
fs
loop
push
mov
popa
orl
insl
inc
pop
push
jno
outsb
ret
sarl
loopne
mov
mov
push
xor
add
mov
and
push
mov
jo
lock
xor
inc
jecxz
aas
mov
andl
pop
add
mov
insl
bound
fcom
add
and
out
ljmp
int
dec
pop
sub
in
mov
insb
je
pop
pop
ret
push
add
mov
mov
pop
dec
mov
pop
xchg
shrl
xchg
and
mov
pop
adc
gs
out
test
or
fimuls
sub
je
mov
repnz
cmp
ret
int3
das
data16
jo
dec
sbb
sbb
sub
sbb
lock
jno
mov
mov
inc
inc
mov
mov
push
and
test
mov
cmp
popa
dec
add
into
pop
jp
jne
cwtl
jb
jge
xchg
mov
shrb
movsl
jo
pusha
addl
mov
scas
scas
cltd
icebp
pop
in
mov
lcall
fmull
lretw
pop
loopne
scas
fnstsw
rcll
jb
xchg
arpl
xchg
push
mov
xchg
pop
sbb
sub
mov
popf
jo
mov
fdivrp
mov
stos
xchg
cwtl
sbb
mulb
and
inc
inc
xlat
add
adc
es
add
enter
mov
daa
mov
dec
push
dec
mov
imul
push
ret
or
fs
jl
sbb
adc
mov
or
pop
push
movsl
sarb
lea
mov
iret
sub
or
fmull
popa
lea
inc
sahf
mov
xchg
xchg
scas
cwtl
mov
enter
outsb
popl
mov
xchg
test
cltd
mov
fstps
mov
push
adc
xchg
xchg
sahf
jb
lods
xchg
lret
cmpl
fisttpll
popl
xchg
fcoms
dec
mov
lcall
cmp
xchg
mov
fldenv
lcall
popf
jle
test
inc
lcall
mov
lcall
pop
mov
lcall
inc
sbb
mov
inc
sub
or
cmp
push
jbe
mov
das
inc
iret
jl
inc
jae
es
test
jmp
lcall
js
xchg
movsl
push
cld
cltd
or
add
jp
or
mov
mov
jb
js
sub
mov
hlt
ret
loop
jmp
adc
mov
mov
pop
ljmp
mov
mov
xchg
mov
xor
or
jns
inc
pushf
xchg
adc
mov
mov
iret
xor
pop
in
pop
bnd
sub
enter
mov
xor
sbb
sub
outsb
fisubrl
adc
dec
jmp
jns
idivb
mov
fisubrs
es
xchg
jp
into
mov
fnsave
mov
xor
fcoms
sub
outsb
mov
lcall
jbe
mov
lea
jle
scas
cwtl
fwait
adc
mov
mov
xchg
sbb
push
cltd
and
xlat
add
mov
mov
ljmp
test
xlat
jns
jnp
xchg
jno
mov
xchg
xchg
cwtl
xchg
push
int3
xor
jp
dec
into
xor
and
enter
shrb
xchg
xchg
arpl
fistpl
jge
push
mov
sub
out
jg
stos
xchg
ja
or
inc
cmp
xchg
push
dec
push
out
add
mov
cwtl
imul
xchg
mov
test
mov
stos
xchg
movsl
jb
dec
adc
mov
sub
push
push
push
cmp
mov
xchg
cmpsb
outsb
adc
xchg
sbb
iret
mov
pop
scas
mov
lea
arpl
dec
dec
fbstp
or
out
xchg
rorl
pushl
push
orb
adc
out
je
ret
in
fstl
and
ficoml
jp
jbe
lahf
stc
cmc
xchg
int
mov
jns
jns
les
test
mov
insl
stos
repnz
loopne
shlb
test
test
mov
arpl
pop
dec
add
add
push
mov
popf
iret
test
mov
pusha
fcmovbe
and
cwtl
jb
aam
jne
mov
pop
into
push
dec
xchg
pop
cltd
pop
push
pushf
jno
add
mov
xchg
dec
mov
add
adc
into
nop
lret
aam
aaa
test
loopne
push
xchg
sbb
or
imul
lcall
jnp
lcall
lcall
aaa
inc
lds
lcall
jmp
mov
ret
jl
out
inc
xchg
cltd
inc
mov
int3
mov
cmp
xchg
sbb
mov
inc
mov
inc
stos
lahf
sub
subb
cmp
aas
sbb
mov
sbb
add
xchg
xchg
movsb
in
andl
pushf
xchg
test
sbb
jecxz
cwtl
jae
mov
scas
xchg
mov
xchg
adcb
cmpsb
outsl
invd
xchg
pop
nop
lcall
inc
loopne
push
mov
push
push
pop
std
test
xor
mov
inc
mov
fistpl
jb
cmpsl
cwtl
jl
inc
jae
mov
popl
cmp
xchg
rorb
je
lcall
jb
xchg
mov
xchg
loop
xchg
nop
or
inc
xchg
shrb
imul
xchg
mov
call
sbb
cmpsb
cld
inc
push
push
dec
dec
mov
xor
pop
stc
push
add
loop
or
xchg
mov
gs
decl
adc
aad
inc
pushf
int3
movsl
outsl
sbbl
mov
fstps
repnz
fwait
test
mov
repz
adcb
aas
push
xchg
into
jo
jle
fimuls
and
imul
call
push
jle
fcomps
mov
jle
rcrl
outsl
sarl
rcrl
fs
sti
movsb
pushf
enter
jge
pop
xchg
jo
outsl
jge
xchg
mov
shl
in
sub
mov
pop
fs
nop
adc
mov
ret
aam
js
pushf
into
xchg
test
jle
push
mov
jns
push
push
pop
jmp
xor
cmp
push
loopne
js
jno
cwtl
loopne
stos
fwait
push
fadd
scas
mov
xchg
jmp
sub
xchg
jbe
xchg
lahf
jne
sbb
clc
lea
divb
mov
cld
mov
xchg
ficoml
outsb
pop
dec
or
or
sub
cltd
jo
mov
xchg
push
sbb
stos
mov
push
push
divl
inc
and
pop
xor
je
daa
jbe
rorl
clc
xor
lods
mov
jbe
mov
jo
sbb
sbb
cmpsl
leave
push
jl
test
inc
call
xchg
rorb
dec
rcl
stos
rorl
lea
push
xchg
add
and
xchg
pop
add
popf
add
xchg
test
jmp
cmp
repz
shr
push
mov
outsl
pop
dec
js
cmpsb
enter
fildl
xchg
ja
mov
lahf
into
mov
adc
bound
push
fcmovnbe
in
jge
push
imul
xlat
push
mov
xchg
or
pushf
adc
jo
outsl
popf
fistpl
push
fs
mov
dec
sahf
mov
repz
pop
sahf
addl
scas
mov
mov
into
xchg
into
mov
lods
lcall
lods
sahf
xchg
push
lret
and
ja
sub
mov
sahf
cmp
int
cmp
int3
outsb
push
rcl
inc
loope
cwtl
xor
inc
jle
sub
push
lcall
push
std
int
ret
imul
jp
outsl
jb
sub
jle
cli
or
nop
jae
lahf
mov
rorl
lahf
lds
cltd
nop
insb
jb
dec
jno
mov
cmp
lret
outsl
sahf
sbb
xlat
bnd
ljmp
lahf
mov
cmpl
outsb
mov
cltd
ja
cli
xlat
lret
dec
mov
ss
xchg
push
mov
and
jge
movsl
mov
sub
adc
sar
adc
xchg
fdivrs
sub
sub
lcall
push
pop
sbb
ljmp
sahf
cmpsb
dec
inc
sub
adc
std
cmp
scas
sub
imul
ret
sti
dec
cltd
mov
or
mov
or
mov
sbb
lret
and
cmpsb
lret
dec
in
or
lret
jp
repz
test
xlat
mov
mov
iret
mov
cwtl
and
iret
push
sub
andl
and
pop
jl
lret
jb
fistpl
lahf
mov
cmpsl
fcomps
mov
adc
cwtl
cmp
outsb
int3
lahf
dec
jge
sahf
mov
sbb
xchg
fdivrs
inc
mov
mov
lahf
hlt
push
sbb
outsb
scas
and
or
jnp
lcall
data16
mov
xchg
adc
movb
cwtl
cmp
mov
adc
push
insl
mov
adc
repz
faddp
jno
pop
cmpsl
sti
rolb
bound
scas
jbe
sbb
jb
js
jo
in
sbb
mov
push
mov
mov
xchg
mov
cmpsb
test
xchg
mov
in
sbb
mov
mov
out
or
int
nop
ror
dec
aas
xor
mov
loop
in
scas
fnstenv
jo
stos
adc
mov
cltd
lret
cmp
ljmp
js
jg
jle
xlat
in
out
xchg
xchg
adc
mov
std
add
adc
push
and
cmp
call
push
into
mov
mov
inc
fisubs
sbb
push
xchg
adc
mov
xchg
leave
sbb
outsl
push
out
xchg
push
in
push
jle
cwtl
js
jns
leave
jne
xchg
add
sub
sbb
dec
push
ss
adc
into
pushf
popf
aas
mov
es
insb
lret
outsl
mov
lea
dec
cwtl
cmpsb
xchg
lcall
cmpsb
xchg
sbb
std
adc
les
aam
xchg
cmp
mov
mov
cmp
sahf
outsl
fidivl
std
movsl
ss
xor
xchg
inc
sub
mov
push
cwtl
outsl
dec
arpl
mov
cmp
adc
outsb
rclb
xchg
loop
outsb
scas
cmp
lcall
xchg
xchg
push
push
mov
jb
adc
mov
jbe
mov
mov
cmpsb
cs
lahf
outsb
test
mov
pusha
sub
mov
lahf
sbb
pop
fcoms
sub
and
insl
adc
outsl
scas
xchg
loop
cltd
dec
dec
loop
outsl
lahf
cwtl
cmp
pop
mov
nop
cmpsb
mov
lahf
das
ret
sahf
mov
dec
sbb
mov
cmp
sub
and
sbb
nop
jge
aas
add
cwtl
lahf
dec
cmp
imul
xchg
and
pushf
xchg
mov
mov
movsl
jnp
cmpsb
shll
int
adc
xchg
lcall
in
movsb
jmp
xchg
mov
mov
cmpsb
or
cmp
cmpsb
fstps
jbe
stos
ja
out
hlt
loop
mov
sahf
lcall
cmpsb
xchg
cmpsl
mov
lahf
stos
inc
imul
mov
and
pop
push
xchg
pushf
jo
scas
incl
popf
xor
into
mov
scas
mov
test
add
and
pushf
push
cltd
movsb
jle
xchg
lcall
subb
out
or
push
mov
or
pop
js
jne
mov
sahf
jno
mov
in
jle
das
push
je
lret
xchg
jne
es
mov
data16
outsb
mov
or
enter
testb
cmp
lret
enter
mov
into
push
fidivl
ljmp
enter
int
xchg
mov
lcall
stos
lcall
adc
pusha
cltd
pushf
push
sahf
scas
pop
jno
cmpsl
pop
ljmp
in
dec
bound
xor
in
adc
fidivs
insl
mov
xchg
sbb
jno
cmp
rcl
push
int3
xlat
pop
pushf
adc
out
pop
imul
loopne
push
imulb
add
imul
js
outsb
jbe
sbb
pop
push
imul
push
movsb
mov
jb
outsl
mov
mov
xchg
xlat
mov
xchg
in
cmc
sub
pop
sti
in
test
sub
enter
pop
mov
jno
mov
xchg
mov
mov
fidivl
xor
fsubrs
push
fidivrs
mov
jo
cmpsl
push
adc
test
rclb
js
jl
mov
push
lcall
aad
ret
sub
add
inc
mov
fdivs
push
mov
push
jnp
fsubp
sahf
and
sbb
xchg
adc
add
aam
sub
ss
mov
lcall
psubsw
xchg
xor
movsb
pop
shr
mov
js
mov
push
mov
in
mov
inc
out
in
ss
in
and
sbb
jp
cmpsb
js
aas
xchg
aad
sbb
cwtl
mov
ret
mov
sub
mov
sbb
push
ret
mov
out
add
jp
add
fs
add
negb
adc
push
aam
addr16
enter
push
jo
mov
mov
inc
mov
push
push
shlb
jae
stos
fimuls
shl
aad
out
ret
sti
imul
mov
popf
das
scas
shl
aam
je
daa
or
cmp
mov
push
jno
ja
lret
das
outsl
jge
pop
ljmp
ja
test
shlb
push
les
ret
pop
cli
shrl
sbb
enter
or
jecxz
test
ror
ret
cmp
jge
out
bnd
out
icebp
cmpsl
or
push
or
insb
xlat
mov
adc
ficoml
test
xchg
mov
icebp
mov
out
js
shl
mov
cmc
ret
adc
insl
int
gs
mov
jb
dec
repz
rcrb
pop
aad
jb
cltd
and
ficoms
fsts
inc
cwtl
jo
outsb
pusha
popf
adc
mov
xchg
add
mov
js
lahf
adc
fwait
into
aaa
inc
sarb
add
and
mov
sub
shll
out
sbb
popf
xchg
pop
roll
inc
pop
insl
mov
imul
lret
push
jb
and
psraw
mov
std
outsb
into
mov
int3
adc
ret
ja
push
test
push
inc
pop
sub
js
xchg
mov
cwtl
sub
jo
outsb
leave
xchg
dec
mov
xor
orb
jnp
rcll
push
bound
jnp
and
cmpsl
jne
cmp
mov
and
mov
test
cwtl
into
or
test
rolb
adc
aas
std
sahf
pusha
dec
inc
mov
push
out
iret
mov
ficomps
aad
and
xchg
or
push
ret
aam
inc
mov
inc
mov
pusha
jle
xchg
mov
cmpsb
rol
sbb
mov
test
xchg
scas
outsl
loop
pop
lahf
fldcw
ds
push
pop
sbb
inc
aad
out
nop
lret
pop
popf
jp
out
inc
addb
inc
push
jbe
lcall
stos
jns
jl
mov
mov
iret
jecxz
jbe
test
fwait
jno,pt
mov
cmpsb
cltd
cmpsl
imul
and
fimuls
push
lcall
push
fmull
cmp
jg
push
mov
sbb
stos
xchg
cmpsl
adc
cmp
xchg
inc
xor
xlat
loopne
xlat
cmpsb
gs
test
movsl
test
fsubl
cmpsl
sbb
jns
mov
jno
mov
push
cltd
mov
jp
out
and
clc
addr16
jle
popf
outsl
movsb
mov
adc
push
fnstenv
mov
sbb
pop
jns
lahf
push
cmp
fisubl
push
mov
pop
mov
inc
pop
cmp
and
mov
nop
dec
outsb
push
mov
and
dec
mov
aaa
ljmp
aad
shrl
sti
mulb
cltd
enter
jge
lahf
mov
and
loop
dec
pop
fadds
push
dec
je
int3
ficomps
fwait
push
mov
adc
cmpsl
packssdw
lahf
outsb
insl
lcall
mov
xor
insb
pop
ljmp
loope
mov
mov
xorb
dec
cmpsb
in
bound
push
mov
push
and
sbb
in
aas
sbb
sub
mov
mov
push
xor
or
data16
push
out
stos
movsb
pushf
pusha
andb
jbe
insb
mov
orb
inc
inc
in
rcrl
xor
jl
cmpsl
pop
xchg
or
pop
fwait
or
mov
sbb
and
or
rcr
ljmp
push
out
nop
adc
imul
inc
call
jae
xchg
push
out
push
testl
insb
xchg
pushf
cmp
subb
hlt
push
lcall
jbe
lea
into
test
push
scas
rclb
jmp
mov
pop
lods
sbb
xchg
lods
xchg
sbb
lret
div
shll
sbb
fisubrl
mov
ljmp
into
enter
xor
stc
push
mov
mov
xchg
jge
negl
adc
cli
push
sti
cmpsb
rcrb
cli
daa
adc
xchg
pop
iret
sbbb
mov
inc
push
adc
std
adc
shll
movsb
fmuls
movsb
int
jl
mov
out
and
out
sarb
in
ffreep
das
mov
ds
divb
xor
icebp
adc
cmpsb
add
fsubrl
push
and
rcll
frstor
jbe
dec
imul
jnp
push
cmpl
push
xchg
adc
jg
inc
mov
add
adc
add
mov
enter
jb
pusha
push
xor
xchg
inc
es
xchg
cli
cmpsb
xor
outsb
xchg
xchg
lcall
and
mov
inc
es
push
lea
xchg
xchg
leave
lahf
mov
pop
lods
stos
push
or
fnsave
outsb
jbe
or
pop
mov
mov
pop
jno
lods
scas
shrb
clc
xchg
push
xchg
sbb
xchg
jge
subl
mov
call
mov
sbb
and
rorb
jo
negb
xchg
sbb
inc
jp
lcall
or
mov
xor
iret
stos
lcall
mov
mov
push
jbe
dec
ja
sahf
in
scas
push
and
fcompl
pop
insl
mov
dec
cmp
push
js
jecxz
jns
sub
rcr
jle
imul
mov
in
fs
sub
jl
inc
loop
push
outsl
iret
push
jnp
push
and
cwtl
jg
pop
add
jmp
and
add
outsb
int3
mov
xchg
mov
xchg
pop
mov
rcl
shrb
test
imulb
push
lea
outsb
mov
lcall
es
mov
std
add
cmpsb
dec
mov
inc
je
fiadds
mov
xchg
pop
cli
icebp
ja
hlt
jnp
jp
and
repz
pop
inc
clc
mov
inc
cmpsl
sub
jmp
mov
mov
or
enter
cwtl
leave
xchg
sub
test
out
add
push
mov
xor
xchg
out
push
movsb
stos
pop
xchg
mov
fsubp
push
mov
sub
and
add
mov
jle
insl
xchg
jb
push
insl
mov
mov
push
cmp
stos
rcrl
nop
andl
push
loopne
push
stos
push
push
inc
add
out
loop
push
movsb
subl
pop
dec
cmpsb
push
faddp
push
adc
movsb
sbb
fisubrl
rcll
push
insl
inc
dec
sbb
mov
ficomps
mul
aaa
shr
das
mov
dec
movsb
push
call
jl
xchg
enter
push
lret
adc
int3
lock
xchg
xchg
push
sbb
mov
mov
mov
lds
loope
aam
loop
scas
out
mov
push
mov
insb
into
fimuls
scas
inc
jne
pop
insb
mov
inc
iret
mov
lahf
mov
js
cltd
rolb
add
xor
into
shrb
cmpsl
subb
data16
nop
fiadds
sahf
dec
add
jbe
mov
ret
push
fcomip
scas
mov
pop
nop
out
mov
pushf
xchg
pop
scas
jge
adc
cmpsl
xlat
popf
aam
jg
jae
sub
iret
pop
outsb
xchg
fcoml
movsb
push
jae
inc
and
mov
dec
mov
flds
les
mov
push
sbb
out
and
ss
push
pop
cmp
sub
xchg
mov
xchg
xor
inc
cltd
outsb
test
je
movsl
sbb
cmpsl
pop
pop
jmp
loope
pop
and
cmc
cmpsl
jnp
add
sahf
xor
mov
stos
fwait
pushf
mov
and
or
cmpsb
xchg
test
decb
leave
pushf
xchg
cltd
pop
dec
cmp
test
jl
cld
stc
int3
jge
pop
xorb
pushf
xchg
xchg
sahf
adc
daa
loopne
xchg
mov
fisubl
into
rolb
test
xchg
adc
iret
sti
sbb
add
lret
ja
aad
mov
cltd
or
or
jno
push
xchg
fldcw
out
sbb
sbb
xchg
bnd
out
and
xchg
outsl
cwtl
sbb
xchg
loop
pop
and
jp
loop
shrl
data16
cwtl
or
cmp
mov
push
rol
pop
jns
imul
push
adc
subb
sub
sbb
scas
sahf
je
ret
jp
push
outsl
push
push
inc
ret
push
dec
movsl
enter
xchg
rorl
cmpsb
aad
fwait
arpl
lods
pmaxsw
mov
mov
es
dec
adc
add
sbb
inc
out
imull
out
cmpsl
ret
jp
ret
sarb
repnz
adc
jne
mov
outsl
and
adc
in
imul
inc
and
sub
xor
inc
ret
loopne
mov
stc
push
pop
mov
mov
xor
js
mov
lret
mov
test
dec
sbb
mov
shll
and
repz
ret
push
into
jg
divl
addr16
subl
sbb
pushf
iret
xor
in
outsl
mov
sti
mov
clc
or
fsts
jecxz
or
fnstsw
int
leave
push
mov
js
fimuls
push
push
pop
andb
ret
lods
mov
in
into
push
push
xchg
int3
adc
hlt
inc
add
lahf
aas
push
pop
int
add
loop
pop
ds
dec
sti
sbb
stos
mov
loope
push
jnp
cmpsl
pop
test
movsb
cli
movsl
sahf
jmp
xchg
scas
fxch
or
pushl
jbe
adc
pop
loop
popf
lods
and
mov
adc
mov
movsl
arpl
cs
testb
movsb
cld
or
pop
outsl
jne
mov
or
test
cli
and
mov
cmpsb
mov
pop
dec
and
je
dec
xor
adc
mov
dec
test
jge
insl
xchg
inc
aaa
jl
jb
shl
mov
add
xchg
aam
and
jns
jae
rcrl
repz
insl
or
cmp
lcall
push
add
imul
loope
pushf
jno
movsb
sbb
pop
pop
rolb
or
mov
inc
sub
aad
data16
fidivrl
cltd
sbb
dec
lds
mov
adc
lret
bound
repz
mov
jp
fisubrs
sub
repnz
cmpsb
dec
add
mov
out
scas
in
aad
test
gs
lods
icebp
adc
or
push
adc
lahf
jb
xchg
push
push
mov
lea
xchg
setne
adc
xchg
cld
mov
cmc
xchg
sub
aas
lea
sbb
mov
movsl
pop
sbb
mov
or
mov
dec
xor
push
out
xorl
inc
sbb
enter
out
je
xchg
push
xor
lahf
lahf
inc
jo,pt
fistpl
das
lret
pop
lea
out
push
stos
mov
clc
or
xor
iret
dec
cmpsb
outsl
loope
jecxz
sbb
xchg
out
mov
sahf
loope
xlat
add
outsb
sbb
enter
pop
ficomps
sbb
push
inc
clc
sbb
loopne
scas
int
push
push
xchg
out
jns
nop
out
cmc
sahf
lahf
cmp
xlat
lods
adc
mov
sub
dec
data16
ljmp
repnz
adc
or
sbb
fisubrs
dec
cltd
or
std
dec
jnp
iret
cmp
ss
inc
js
jg
lahf
mov
pushf
loop
stc
je
push
out
rolb
out
mov
mov
out
pushf
mov
mov
push
xor
shlb
dec
fisttpll
add
pop
mov
fidivs
inc
xchg
jecxz
xor
mov
call
pop
lock
cltd
pop
push
fucomp
shll
ja
push
mov
jno
xchg
repnz
mov
subl
xchg
xchg
outsb
je
cwtl
in
inc
lahf
inc
mov
shl
outsb
sbb
cmpsb
sub
lods
scas
jmp
jle
mov
xchg
fidivrs
cmp
jb
push
jle
add
dec
jbe
push
loop
push
data16
cltd
jle
outsb
cltd
jb
jno
add
inc
jno
addb
adc
aad
xchg
jno
movsb
sbb
push
aam
push
int
sbb
adc
jne
pop
mov
dec
imul
stos
jnp
push
and
push
mov
jl
pop
mov
xchg
sbb
cmp
roll
jnp
int
pusha
addr16
mov
out
shl
imul
sub
sbbb
mov
mov
xchg
inc
mov
mov
xor
add
jg
lock
sbb
push
jnp
push
fsub
cs
jp
aas
jp
aaa
sarb
pop
imul
mov
jecxz
and
fistl
sahf
cmp
push
lods
aad
mov
int3
imul
in
daa
into
popf
out
adc
xor
add
popf
cwtl
xchg
nop
mov
std
and
lods
ds
shrb
lcall
cld
into
cmp
push
lea
jecxz
mov
xor
repnz
and
push
push
xchg
lret
sbb
cmp
jp
push
jnp
sub
lcall
dec
es
imul
mov
scas
jg
lcall
adc
pop
push
mov
adc
fmuls
cmpsl
or
mov
lods
mov
repnz
jno
repnz
xor
aaa
mov
mov
dec
mov
and
outsl
js
jge
mov
lahf
push
or
decb
sub
movsl
sahf
adc
subl
es
sbb
shrb
movsb
cmc
push
sub
cmc
mov
repnz
adcl
mov
andb
and
cli
ja
xor
ljmp
test
mov
cmpsl
xlat
stc
fstl
xchg
cmp
loope
xchg
lahf
dec
or
test
mov
jb
dec
sub
ja
sahf
movb
jle
in
rcl
loopne
push
adc
inc
std
jb
or
lods
xorl
test
mov
cld
dec
xor
lea
jmp
jne
jle
rorl
push
mov
mov
adc
aad
jle
fimull
mov
test
cmp
cwtl
and
lea
stos
jmp
orb
or
mov
in
bound
sbb
int
nop
sahf
je
xchg
lret
mov
jne
jge
sbb
sahf
lret
xor
and
fadds
out
push
fs
cmp
xlat
mov
enter
inc
cwtl
xchg
push
ds
push
xchg
sahf
ds
sbb
stos
mov
icebp
insl
xor
loope
cmp
push
mov
icebp
mov
xchg
clc
lock
cwtl
sbb
aas
out
scas
test
test
and
les
sub
mov
jl
mov
pop
sbb
push
imul
insl
mov
fldenv
outsl
pop
cmpsb
cmc
outsb
add
jbe
repnz
cwtl
jb
lret
pushf
jp
or
enter
stos
leave
hlt
dec
and
inc
xchg
mov
mov
inc
push
shl
aad
pushf
aam
cld
jnp
push
iret
jns
fdivl
ret
mov
inc
fdiv
jbe
js
mov
adc
push
push
int3
fistps
movsb
adc
fstl
loop
insl
ds
and
dec
or
dec
sbb
loop
jne
jb
pop
inc
or
cmp
mov
movsb
xchg
ror
sub
pop
mov
push
int
and
sub
test
dec
sub
inc
mov
rcrl
test
mov
mov
cmp
push
or
jo
int3
nop
stos
push
outsl
fcmovbe
mov
lea
sbb
loop
int
inc
xor
mov
add
movsb
repnz
jnp
pop
add
push
outsb
and
mov
mov
xchg
into
adc
sub
xchg
mov
aaa
mov
xchg
lea
incl
imull
xor
and
outsb
pop
add
push
leave
jae
enter
popa
aad
rclb
mov
mov
ja
mov
test
insb
jo
ljmp
scas
sub
mov
mov
add
sub
sub
pop
sub
mov
mov
cmpsb
sub
jbe
push
inc
mov
insb
pop
xchg
pop
data16
inc
incb
mov
ljmp
adc
or
inc
jae
push
xlat
out
cli
cld
aam
add
cmp
jmp
divb
ja
mov
sbb
cltd
xchg
and
addb
leave
push
mov
out
imulb
adcb
mov
aaa
pop
add
int3
ss
xchg
push
rolb
in
out
repz
pop
in
and
nop
enter
add
stos
or
dec
jg
enter
jg
scas
push
shl
mov
ja
inc
pop
data16
out
ss
cwtl
and
ss
scas
pushl
mov
pushl
xchg
repnz
cs
nop
insl
repz
lret
adc
inc
ja
xor
cli
adc
adc
mov
push
cmpsb
loop
ljmp
rcrb
jnp
jmp
test
mov
cltd
mov
push
jbe
pushf
aam
shll
push
test
lods
mov
sar
outsb
ljmp
xchg
or
mov
les
jmp
push
jno
fcom
jmp
out
mov
repnz
repz
push
negb
xchg
or
jno
or
out
aas
test
inc
aas
mov
rcrb
cmpsb
sub
pop
dec
mov
or
insb
test
rolb
icebp
cmp
jg
mov
outsb
in
shlb
cmp
cmp
out
jo
mov
subl
lods
data16
dec
and
cli
pop
add
add
bound
add
shlb
lret
jns
add
gs
push
dec
mov
shlb
rorb
mov
jle
pop
mov
jbe
cmpsl
aam
inc
add
sbb
mov
insb
inc
jl
dec
dec
insl
int3
fisubs
inc
jl
pop
xlat
test
aad
fsubr
sub
insl
call
adc
aas
jge
insb
mov
mov
cmp
std
add
andb
add
ljmp
cmpsl
dec
sbb
fwait
dec
dec
ret
pushf
dec
scas
jp
xacquire
adc
mov
lcall
mull
notb
scas
and
hlt
xchg
pop
cld
cli
push
mov
bnd
jne
or
jb
sub
add
ds
aaa
data16
in
sahf
xchg
sbb
xchg
data16
xchg
loop
rorb
jle
sbb
sbb
push
mov
jb
mov
push
and
xchg
iret
outsb
xchg
repnz
sub
outsl
add
orb
xchg
orl
xchg
sub
aam
adcl
pop
sbb
jb
cmpsb
push
in
cld
dec
inc
dec
movsb
outsl
jg
inc
aam
push
sub
cld
push
jae
lret
scas
sahf
clc
cmc
jp
rcrb
loopne
or
mov
je
mov
sbb
out
jbe
jg
lcall
movsb
lods
nop
add
xchg
adc
mov
add
loop
cmpsb
scas
adc
mov
popa
int
cmpsl
loopne
int3
sahf
call
loope
loope
mov
nop
stc
xor
enter
push
out
add
lahf
mov
fwait
push
and
and
dec
aad
push
dec
cmpsb
ss
scas
push
push
test
pop
lock
push
cs
mov
sarb
lcall
push
das
or
xchg
addr16
leave
dec
ljmp
jnp
ja
out
jnp
cmc
addr16
pop
loopne
xchg
stc
sbb
push
xchg
leave
or
mov
imul
daa
lcall
inc
push
jbe
mov
fdivr
in
mov
cmp
mov
sbb
out
adc
inc
decl
add
push
lcall
mulb
jae
inc
shrb
adc
xchg
sahf
sarl
stos
jl
insb
mov
mov
stc
jmp
cs
popf
int3
inc
jl
scas
rolb
jb
fnstcw
jge
cmpsb
push
and
cmpsl
fwait
sbb
repnz
rclb
fisttpll
lret
jnp
jecxz
push
mov
insb
inc
push
mov
jo
inc
xor
cwtl
out
mov
cmpsb
sbb
mov
dec
adc
jp
xchg
mov
xchg
jge
pop
jb
jnp
xchg
insl
sbb
pop
lock
rcrl
out
jle
jnp
mov
jle
lds
or
bound
xor
unpcklps
xchg
nop
mov
popf
cmpsl
pop
adcl
sbb
aam
out
sub
sbb
push
cmp
shll
dec
pop
xchg
rcll
jecxz
push
cld
add
cmpsb
add
add
fisubs
imul
add
mov
push
or
loope
lahf
mov
rolb
push
jnp
rcrl
fldenv
add
adc
adc
push
sahf
xorb
pop
mov
fiadds
xchg
inc
lods
dec
lcall
and
loope
scas
add
repnz
shll
popf
call
xor
cmpsl
fstps
mov
fwait
lcall
cmc
shlb
inc
scas
aaa
jmp
adc
cmpsb
xchg
lcall
sbbl
out
mov
jge
aas
adc
stos
pop
divl
push
sbb
push
repz
jmp
sbb
xorb
adc
fisttpl
aas
push
call
pop
mov
and
sbb
add
xor
adc
call
xchg
call
mov
jno
insl
sbb
dec
cmpsl
xlat
in
cmpsb
mov
add
mov
movsl
out
lcall
xchg
nop
mov
mov
mov
push
cwtl
popf
int
push
xlat
pushl
mov
add
test
push
lret
popf
loope
mov
push
lret
mov
loope
mov
push
enter
mov
push
iret
popf
loope
mov
push
into
popf
loope
xchg
dec
or
fwait
imul
aad
jbe
ja
cli
outsl
jg
add
hlt
pop
mov
jns
mov
sbbl
jbe
rcrl
push
mov
divl
enter
or
or
lret
xchg
push
clc
iret
fcomps
mov
shlb
scas
lret
cmp
pop
cmp
inc
ja
inc
lea
inc
push
leave
mov
push
mov
jno
out
pushf
xchg
stos
mov
mov
inc
push
push
pop
imul
cmpsl
mov
cmpsl
xchg
movsb
outsb
inc
shr
daa
jnp
pushf
or
mov
dec
sarl
xlat
negb
ficompl
adc
inc
imul
movsl
push
shrl
jne,pt
jg
fdivl
push
jb
ds
insl
dec
dec
inc
push
push
xlat
lret
jmp
repnz
lret
cwtl
pop
push
out
cmc
cmp
imul
cmpsb
sbb
mov
add
bound
enter
sbb
loopne
jb
inc
mov
or
dec
push
xchg
lea
fiaddl
pusha
jle
pop
pop
leave
push
bound
into
push
jnp
out
mov
xchg
jmp
mov
clc
aad
loop
clc
into
xlat
and
sarb
adc
jmp
lods
xor
push
sub
push
in
dec
fisubs
mov
test
mov
cwtl
jle
hlt
ret
and
dec
push
ret
mov
cmp
xor
addr16
inc
or
mov
int
inc
xorb
loope
mov
mov
call
pop
inc
sub
shlb
shlb
mov
lods
xchg
and
xchg
test
fwait
or
mov
or
nop
mov
or
pushf
daa
sbb
pushf
and
mov
ds
aaa
sti
inc
mov
rolb
pop
cmc
fimuls
insb
xchg
aaa
jae
mov
mov
or
push
ds
mov
fmulp
sub
imul
jecxz
insl
rorb
cmpsb
lods
xlat
pop
ss
test
jno
jl
pop
jno
xchg
cmpb
jecxz
js
aam
ja
jp
mov
out
adc
hlt
sub
mov
cmp
pop
cmp
jecxz
mov
push
jne
mov
lret
scas
xchg
jmp
jbe
xchg
leave
mov
or
aas
adc
lret
sbb
adc
popa
push
lcall
lret
je
repz
repz
nop
aas
push
push
test
adc
xor
imul
aad
dec
add
cs
xorl
dec
xor
enter
adc
insl
frndint
ljmp
inc
mov
sub
insl
xchg
inc
mov
shlb
adc
int3
scas
inc
push
dec
mov
pop
mov
adc
mov
sahf
scas
hlt
rcr
mov
adc
xchg
xchg
sbbb
cmc
and
decb
push
rorb
ret
daa
jo
cltd
scas
cwtl
mov
js
push
and
cmpsb
data16
loope
out
cmp
xchg
ds
cmp
shlb
test
out
loope
ret
fiadds
xchg
mov
outsl
fucomi
or
dec
dec
sub
lea
adc
push
leave
add
in
imul
sar
insb
cs
rorb
sbb
in
aam
data16
jge
rcrl
ficomps
jle
adc
jne
test
aas
sub
dec
in
adcl
sub
xchg
push
mov
cli
add
pop
fisubl
mov
lahf
and
mov
pop
lahf
scas
inc
aaa
mov
sub
stc
jb
xchg
sbb
push
ss
loop
cs
jb
fidivs
data16
dec
pop
gs
int
jmp
pop
and
jnp
push
stos
lods
fwait
stos
adc
jp
leave
cmp
mov
xor
pop
lret
andb
pop
cmc
aad
add
sti
or
rorb
jbe
inc
ds
sbb
adc
popf
mov
faddl
outsb
stos
loope
or
jp
int3
inc
aam
push
jp
push
es
stos
shr
sub
and
xor
out
cmp
inc
int
lods
in
sahf
lock
popf
mov
add
fsts
outsl
sbbb
mov
cmpb
inc
jmp
mov
scas
out
push
pop
lahf
dec
add
mov
mov
lcall
call
ljmp
scas
inc
not
lods
mov
push
pusha
mov
jle
push
push
cmpsb
movsl
sbb
ja
pop
mov
loop
lret
outsb
push
or
lret
cmpsb
in
pushf
adc
dec
mov
cwtl
cmpsl
xchg
cmp
xchg
cmpsb
out
call
test
roll
adc
cmpsl
xchg
xor
dec
jle
cltd
rclb
lahf
push
loopne
push
out
xchg
pop
cwtl
movsb
inc
inc
daa
popa
cwtl
mov
mov
xchg
aam
fwait
cmpsb
xchg
lcall
int3
and
cs
xor
lods
add
lahf
or
fsubp
dec
std
sbb
mov
pusha
fldcw
dec
push
out
sahf
mov
sbb
neg
adc
pushf
stos
xchg
push
jmp
mov
jns
sbb
push
jle
leave
lods
fcoms
xor
cwtl
lods
popf
jmp
mov
lods
leave
pop
inc
mov
inc
subb
ss
rolb
dec
push
outsb
mov
jecxz
fsubrp
shrb
orb
xchg
mov
rorl
inc
xchg
mov
mov
dec
stos
cmpb
lcall
push
or
dec
imul
mov
pop
pop
notb
js
lahf
pushf
sub
sahf
test
in
in
inc
sbb
mov
and
ret
xor
loop
clc
fistpll
jl
cmp
cmp
fisubl
fistpl
clc
add
mov
add
pushf
push
add
aam
xlat
xchg
and
imul
mov
jp
mov
lods
je
divl
and
dec
stc
cltd
mov
xchg
mov
ds
fldenv
daa
les
cmp
sti
xor
lret
xchg
stos
push
shlb
sbb
fnsave
int
push
mov
adc
cmpl
sbb
mov
mov
xchg
jo
testl
shrl
nop
es
mov
ret
cmp
xor
push
fisttps
out
xchg
clc
scas
mov
push
inc
mov
inc
adc
js
sbb
lock
jg
dec
inc
and
lret
call
bound
je
iret
call
pop
out
xor
adc
mov
cmpsb
xchg
xor
xchg
xchg
mov
sbbb
ja
pushf
mov
dec
push
lret
or
lods
dec
lret
daa
and
jb
je
cmpsb
push
xor
push
mov
mov
mov
inc
jno
jno
dec
xchg
pop
in
cmpsb
and
adcb
lock
rcr
xchg
into
sub
and
mov
inc
inc
push
ljmp
pop
lock
mov
push
jg
sti
xor
cwtl
push
mov
leave
push
out
cwtl
popf
movsb
stos
in
inc
mov
imul
dec
nop
jo
in
lcall
xor
sub
xchg
dec
xchg
add
mov
adc
jle
dec
jb
dec
and
bound
jle
int
add
sbb
ljmp
sahf
and
jno
icebp
aad
push
in
addr16
xchg
shll
lods
cs
mov
rorl
push
xor
jmp
fdivl
jnp
scas
inc
jnp
dec
adc
or
sahf
mov
xchg
shll
mov
lret
cmp
imul
xor
js
nop
insl
dec
js
xchg
cwtl
pop
cmpsb
cwtl
cmp
dec
idivb
xchg
cmpsb
mov
js
xchg
fbld
mov
xchg
jns
nop
jne
add
or
in
leave
jnp
pop
pop
sub
inc
cwtl
leave
xor
repz
cmp
scas
cmc
mov
scas
imul
xor
outsb
pop
in
add
push
imul
inc
loope
adc
lret
or
lcall
adc
dec
mov
or
imul
push
cwtl
xchg
test
jo
and
jne
test
dec
dec
push
insl
mov
pop
cmp
and
adc
stos
push
addb
adc
jecxz
les
lret
xchg
ds
stc
pusha
push
dec
adc
adc
das
inc
insl
fimuls
into
cmpsl
rolb
pop
xor
cwtl
mov
outsb
inc
xchg
push
out
insl
xor
orl
or
cli
xor
and
xor
and
stc
push
jnp
push
jnp
xchg
cmpsb
xor
ficomps
mov
sarb
jnp
rcrb
gs
andl
xchg
inc
jne
pop
out
icebp
lods
in
jno
lahf
enter
nop
shl
daa
call
test
xchg
jecxz
jb
mov
sbb
mov
mov
sahf
adc
pop
into
in
sub
rcr
sbb
fidivl
shlb
sub
sahf
mov
cltd
or
rcrb
mov
clc
mov
and
outsl
es
mov
scas
jo
lock
nop
ficoms
rcrb
lea
mov
or
scas
fnstenv
stc
jnp
out
mov
jnp
adc
dec
ljmp
mov
inc
or
lcall
push
stos
push
ret
sbb
mov
add
push
cmp
fiaddl
sub
cmp
loop
push
dec
xor
call
je
imul
mov
dec
jae
iret
insl
scas
sbb
xor
xchg
mov
jnp
in
repnz
imulb
dec
mov
loop
adc
add
into
or
movsb
dec
iret
mov
mov
add
psrlq
xchg
jl
out
sub
pop
cltd
pop
in
xor
sbb
xchg
loopne
mov
jbe
ja
or
je
loopne
ljmp
push
lret
push
ljmp
cwtl
sahf
inc
lds
ret
pop
leave
push
add
mov
mov
cmpsb
xor
ficoms
jns
jns
ja
xor
adc
sbbb
cmpb
xchg
fs
push
xchg
cmc
loope
nop
xchg
xor
inc
lea
fdivrl
jnp
sahf
flds
aam
cmp
jnp
pop
setnp
cmc
shrb
push
jno
dec
push
iret
and
test
test
mov
jnp
adcl
lret
lods
ljmp
out
loop
fisubrs
rcl
sbb
jbe
in
lods
mov
outsb
mov
mov
jae
out
clc
adc
mov
jecxz
pop
enter
fcmovu
ja
push
into
jne
pop
and
add
jne
xchg
sbb
imul
out
into
mov
mov
mov
fiadds
pop
cld
popa
sbb
jns
ficompl
push
lods
cld
out
push
out
mov
mov
shrb
add
imul
mov
mov
fwait
adc
xchg
dec
jne
loopne
nop
adc
sub
shl
outsl
loopne
aam
fcmove
cmpsb
ficoml
aam
jno
xchg
sub
add
bound
cs
xchg
mov
add
lods
jnp
jge
pop
jne
adc
movsb
lea
sbb
je
jp
out
inc
divb
jle
nop
js
mov
cs
mov
lea
mov
or
push
sbb
pop
lcall
mov
sbb
pushf
sbb
nop
fistpl
movsb
xor
hlt
cmpsl
test
jge
pop
dec
test
nop
xchg
into
pushf
pop
mov
push
cmp
cmpsl
fildll
pusha
adc
imul
int3
mov
jle
ss
mov
or
cmpsb
push
lcall
shll
cld
and
insl
in
fxch
jmp
insl
cltd
fwait
rclb
mov
mov
jnp
hlt
inc
mov
movsl
pop
popf
cmpsb
or
pop
xchg
mov
mov
xlat
lods
jp
mov
adc
fsubl
push
jg
je
fwait
test
dec
fdivl
lcall
faddp
inc
outsb
imul
lods
mov
jmp
clc
xor
cmp
push
loope
pusha
rcll
aas
dec
test
adc
repz
test
push
into
stc
jbe
mov
stos
pushf
fidivs
push
es
in
nop
mov
pop
mov
push
ljmp
sub
fcomps
sbb
into
push
das
sbb
fwait
add
nop
enter
imul
fldenv
mov
pop
and
add
mov
push
dec
mov
sbb
int3
jecxz
and
and
leave
adc
test
xchg
xchg
cwtl
sti
mov
and
outsb
cwtl
push
cmpsb
shlb
sub
xor
data16
imul
iret
and
xor
sbb
popf
in
shr
sub
mov
int3
rorb
push
jnp
adc
mov
sbb
aam
arpl
mov
mov
xchg
aaa
fs
push
mov
jo
mov
insl
adc
sbb
mov
sbb
pushf
outsb
inc
fdivrl
xor
test
xor
mulb
mov
jne
jo
mov
insb
dec
call
repz
sahf
jno
cmp
push
lret
push
or
into
jle
sahf
into
jp
jbe
lretw
mov
outsb
cwtl
push
jo
push
adc
jmp
pushf
out
ljmp
bound
fdivp
rorl
inc
push
mov
pushf
ficoml
incb
and
cld
bound
jbe
insl
cmp
push
int
jo
shrb
adc
lea
nop
aad
push
push
lcall
lret
andb
adc
mov
mov
xchg
mov
mov
test
lret
adc
xchg
xor
fiadds
xchg
xchg
sbb
push
iret
fsubrl
xchg
fwait
jp
jecxz
sahf
xchg
jecxz
data16
mov
adc
jne
into
push
pusha
sahf
mov
jo
std
mov
lock
xchg
in
outsb
sahf
movsb
iret
mov
or
lret
rorl
adc
or
test
subb
aam
jne
cmp
cltd
popf
push
dec
mov
lods
sub
inc
ret
adc
xchg
test
mov
adc
ficoms
xchg
into
in
or
fsubrl
xchg
jg
stos
push
test
push
bound
dec
call
negl
cmp
sbb
int
xlat
adc
sub
fisubl
jnp
inc
jl
cmpsb
push
jbe
mov
pop
fadds
pushf
cld
outsb
cmc
add
mov
insb
xchg
into
jle
mov
pop
xchg
jnp
pop
xchg
pop
mov
aaa
or
inc
push
xchg
sbb
neg
sub
adc
enter
les
dec
jbe
sahf
lret
push
popf
inc
es
out
outsb
jmp
cmp
inc
test
push
sub
mov
cmp
add
es
hlt
jb
mov
jmp
pusha
lea
into
js
ljmp
mov
push
lret
adc
int3
repz
mov
mov
push
lret
adc
cltd
cld
add
into
sub
inc
or
cmpsl
imul
sti
pushf
rol
outsb
or
cmpsl
imul
scas
lds
cltd
add
pop
mov
mov
mov
adc
outsb
mov
xor
fmuls
push
mov
dec
stc
xor
cmp
sub
jl
mov
je
scas
int
inc
inc
pop
sub
mov
fsubrl
push
popf
aad
jle
cltd
xchg
inc
mov
stos
mov
jnp
lds
xchg
xchg
movsb
xor
mov
jns
jae
insl
mov
xchg
ret
mov
xchg
ficomps
lahf
jb
mov
jno
mov
xchg
sub
fidivs
mov
lea
mov
das
mov
imul
push
cmc
and
inc
sbbb
xchg
adc
push
mov
jno
orb
adc
fcoml
xchg
jmp
shrb
lahf
outsb
pop
add
push
popa
cmpsb
jge
mov
mov
imul
xchg
adc
lret
adc
xchg
push
lret
adc
xchg
and
or
ret
mov
ja
sbbb
int3
or
xchg
decl
xchg
movsl
or
push
notl
sbb
fs
scas
add
push
mov
decb
dec
inc
mov
push
in
ja
push
jno
or
test
xchg
fisttps
pop
fcoml
or
out
push
sbb
jb
fwait
out
xchg
push
fisubrl
add
push
sbb
nop
mov
cmp
mov
jp
or
shrl
sub
cmp
insl
in
pop
inc
sbb
xor
imul
or
test
jbe
push
iret
loopne
mov
pusha
sub
imull
cli
lea
mov
outsl
js
jg
mov
mov
fs
fidivl
data16
sbb
imul
aaa
push
xchg
into
xchg
push
xchg
out
sub
sti
sub
fucomi
push
loopne
push
shr
das
out
mov
mov
repnz
or
test
xchg
mov
scas
sbb
cltd
sbb
repnz
or
add
popf
mov
scas
ss
jge
outsl
jl,pn
mov
jns
iret
subb
adcl
inc
sar
pusha
fst
ret
xchg
stos
sub
inc
test
jecxz
mov
int
mov
mov
push
stos
xchg
mov
mov
outsl
mov
lret
push
push
lcall
jns
pushf
cmpsb
jae
negb
sahf
lcall
outsb
movl
jae
cwtl
or
sahf
xchg
or
ficoml
jecxz
enter
movsb
pop
mov
nop
dec
scas
push
hlt
dec
sbb
cmp
rcrl
js
adcb
mov
sahf
or
lods
idivb
out
pusha
jecxz
push
in
in
sarl
adc
into
mov
xor
xchg
enter
dec
out
xchg
pushf
in
jbe
lret
adc
fcomps
push
mul
cmpsb
inc
add
enter
cmp
sub
mov
jbe
fwait
jp
movsb
orl
inc
cmpsb
rorl
adc
dec
inc
imul
jmp
mov
pusha
ja
or
ljmp
fisubl
mov
in
jle
xor
and
shll
sub
mov
mov
push
mov
lret
and
js
mov
push
call
cmpsb
lea
pushf
cmp
push
pop
js
add
xchg
arpl
add
jp
hlt
jbe
mov
sbb
jge
jecxz
testl
jbe
nop
test
mov
out
add
movsb
jle
mov
das
or
test
mov
mov
adc
int
mov
mov
adc
pop
mov
dec
sub
sbb
dec
loopne
mov
pop
xor
into
dec
shrb
xor
subb
mov
outsb
rclb
test
shll
out
mov
inc
fiadds
or
adc
push
fidivrl
jg
lock
push
les
inc
xor
sbb
fistl
inc
mov
shlb
loopne
fbstp
mov
ret
paddw
lret
xchg
mov
leave
ficompl
scas
jle
dec
imul
sbb
sti
lret
push
shl
fisttps
int
nop
loopne
idivb
jae
ss
xlat
cwtl
cmp
adc
cwtl
and
fucom
add
mov
shlb
fidivs
sbb
mov
jne
in
jb
sbb
pop
jno
mov
pop
push
dec
rolb
inc
fisubrl
into
fbstp
mov
mov
jecxz
jo
fsubl
out
negl
mov
int3
decb
lret
rcr
adc
lods
mov
xchg
ja
imul
into
pop
frstor
stos
imulb
lret
loop
sub
out
push
scas
into
sbbb
mov
loop
cmp
std
xchg
repz
fnstsw
lds
lcall
sbb
lds
jae
stos
cmp
jge
inc
arpl
aas
test
xchg
cltd
sahf
movsb
hlt
mov
xchg
lea
outsb
cwtl
mov
adcl
loopne
shlb
sti
mov
mov
nop
movsb
pop
pop
std
in
mov
pause
lret
sub
cwtl
jnp
inc
subb
mov
adc
mov
push
sti
add
cmpsb
mov
push
mov
faddp
fst
sbb
adcl
cli
dec
mov
clc
mov
aam
enter
sbb
adc
insl
scas
inc
push
inc
xor
lock
jmp
int3
mov
into
int3
mov
lods
lcall
push
aas
cmpsb
lahf
xsave
mov
call
stos
insl
add
imul
test
je
xor
sub
test
nop
rcll
jne
jo
dec
dec
mov
xor
xor
xchg
fldenv
sbb
sbb
mov
jns
xchg
nop
loope
ja
xor
xor
mov
push
and
mov
xor
push
mov
ficoml
ja
leave
mov
insb
out
test
leave
gs
out
and
daa
lcall
xchg
mov
dec
mov
stc
lods
and
and
insb
imul
popa
cmpsb
mov
fistpl
sub
push
mov
nop
in
rol
or
cmp
xchg
int3
push
pop
mov
test
pop
inc
inc
std
pop
jg
bound
fcmovnbe
test
outsb
xchg
sbb
and
adc
adc
stos
sbb
jecxz
scas
repnz
rcl
jg
cmp
xorl
pop
sub
push
pop
jge,pn
xchg
inc
or
pushf
nop
xchg
mov
xchg
mov
pop
shll
xchg
lahf
nop
lret
pop
push
lcall
cmpsl
test
push
xor
mov
pushf
out
cs
or
rcr
lret
jnp
pop
divb
es
test
mov
mov
int
imul
mov
push
xchg
or
push
inc
adc
mov
mov
int
scas
in
inc
adc
xchg
xchg
inc
or
dec
imul
mov
jle
je
jns
xchg
and
or
and
inc
arpl
lds
insl
mov
jle
stos
mov
loop
cwtl
jp
lds
lds
inc
dec
jp
and
mov
push
ljmp
out
push
mov
jp
push
push
xchg
push
repnz
push
dec
sbb
push
bound
ljmp
stos
dec
lcall
cwtl
adc
jns
lcall
mov
add
mov
fistpll
mov
lcall
mov
ret
sahf
mov
inc
mov
sub
push
roll
lcall
mov
adc
adc
negb
xchg
fistps
lcall
into
mov
mov
mov
ss
fisubrl
dec
rcr
scas
adc
pop
mov
into
mov
out
pop
xor
mov
cs
mov
and
test
inc
dec
push
cmp
scas
fisttpl
or
pop
rcrl
fs
adc
cmc
cmp
out
aas
fs
insl
or
xchg
loope
cltd
ficoms
cld
int3
test
jp
call
jno
xchg
addb
lret
push
rorb
in
dec
mov
sti
lcall
mov
xchg
test
pop
rorb
adcl
mov
std
mov
addr16
jno
nop
cmc
int3
mov
cmc
adc
je
and
clc
mov
push
fldt
xchg
ret
scas
xchg
into
push
xchg
sub
lock
repnz
pop
icebp
xor
int3
pop
icebp
ss
adc
push
scas
rcr
repz
sbb
orl
js
xchg
jns
xchg
ljmp
mov
push
rcl
in
imul
pop
mov
fmull
js
pushf
xlat
sbb
popa
dec
dec
ret
jp
dec
out
idivl
leave
pop
lret
pop
subb
dec
jno
jecxz
push
addr16
mov
push
bound
aad
mov
sbb
mov
dec
inc
scas
test
pop
out
mov
and
sahf
hlt
popa
adc
cmpsl
mov
stos
add
xor
sti
sbb
mov
xlat
cmpsl
fildl
xchg
les
loope
in
mov
addb
jbe
sbb
sahf
sub
jmp
sar
pop
pushf
in
add
mov
cmp
sbb
pop
mov
sub
sahf
in
pop
insl
add
fnstcw
ret
shrb
add
test
je
jge
cmpsb
rcl
cmp
repz
xor
inc
mov
test
mov
ret
dec
cltd
test
cmpsb
push
mov
jno
jge
imull
lock
lcall
ret
sub
fsubs
pop
lret
or
jp
jecxz
jp
dec
int
sub
jno
xlat
cli
mov
sbb
fisubs
hlt
jnp
adc
lods
push
pop
cmpsb
dec
test
lret
incb
int3
sbb
mov
jp
lahf
add
sbb
inc
xor
push
sub
inc
iret
push
sbb
add
cmpsb
pop
lret
jbe
or
adc
push
lret
fldcw
rcrb
arpl
jae
ret
inc
sbb
pushf
xchg
std
sbb
cmpsb
adc
cli
cmpsb
xchg
orb
negl
into
rolb
push
leave
loope
je
cmp
jle
repnz
mov
dec
sahf
xor
fldt
fsubp
scas
mov
xchg
iret
adc
into
push
add
inc
xchg
out
xchg
xchg
xchg
nop
int3
xchg
ret
test
adc
adc
scas
addr16
inc
push
lea
mov
jb
dec
cltd
ds
lahf
lds
sub
mov
xchg
insb
out
es
jp
inc
cmp
inc
repz
lea
scas
or
xchg
jl
out
ror
mov
mov
sub
mov
cmpsl
push
cmp
incl
mov
jle
jmp
and
out
icebp
shll
mov
xchg
sbb
inc
xor
fidivl
fnstenv
cmpsl
movsb
addr16
fwait
lcall
lcall
cmp
lods
mov
loop
out
sbb
ret
mov
jb
idivl
xchg
inc
sbb
sub
sbb
into
lock
cld
pop
cmp
sub
mov
sbb
repnz
xlat
icebp
out
sub
jge
jnp
and
mov
ja
ret
scas
pushf
jge
mov
pushf
dec
icebp
cmc
jno
je
scas
xchg
adcl
xchg
mov
mov
push
notb
shl
les
xchg
enter
rolb
xor
xchg
jnp
fstpl
inc
lods
adc
ret
or
fimull
sbb
mov
push
test
js
adc
xchg
sbb
inc
push
loopne
xlat
lret
lock
mov
popa
xchg
and
ficoml
cmp
aaa
data16
stos
mov
xchg
inc
imul
push
mov
lret
or
xchg
inc
bound
sbb
js
adc
mov
push
xchg
lcall
sub
out
pop
notl
jnp
xor
cwtl
xchg
cltd
push
out
sub
test
into
into
mov
jnp
dec
pop
jmp
sub
test
pop
cmc
jl
cmp
push
out
inc
mov
pusha
pushf
push
imul
scas
rcl
mov
lret
push
shrl
lret
mov
je
lcall
mov
lahf
outsl
jge
insb
mov
lahf
mov
add
xchg
movsb
adc
mov
lcall
cmpsb
mov
and
lret
jbe
and
scas
outsb
rcrl
jbe
adc
xchg
popf
aam
or
xchg
push
inc
cwtl
or
xchg
jbe
out
pop
mov
fidivs
std
sub
jge
loop
outsb
jge
sbb
repnz
push
sbb
fisubrl
push
in
aad
nop
mov
fnstsw
sub
or
xchg
xchg
ss
jnp
xor
sahf
jle
popf
cmpsb
repz
or
aaa
push
mov
mov
dec
mov
adc
mov
cmp
iret
mov
in
stos
loopne
adcl
ss
mov
sub
shl
lahf
push
add
cld
xchg
dec
xchg
mov
test
lahf
jl
xchg
jb
fmull
cmpsl
movsl
xor
out
xor
int3
scas
xlat
out
shl
mov
cmpsb
fs
jae
add
lods
push
ficoms
xlat
int
fdivr
dec
jle
js
mov
in
icebp
xchg
loop
outsl
mov
daa
js
aaa
stos
stc
cmp
jno
aad
mov
pop
call
add
pop
mov
mov
and
enter
or
test
out
imul
mov
fadd
in
imul
push
sbb
stos
xor
aam
jge
or
xchg
xchg
dec
int
jnp
out
fdivp
data16
sahf
mov
adc
xchg
pop
sbb
lcall
rorb
in
sbb
cmp
mov
push
stos
cltd
fsubrs
lret
and
fbstp
stos
cwtl
loop
sbb
jo
and
fiadds
shlb
mov
jae
sbb
fimuls
jge
xchg
loopne
jnp
and
loopne
dec
cmp
add
dec
repnz
cmpsl
imul
fidivrs
out
jb
lods
lret
jb
daa
imul
and
add
leave
js
repz
mov
ret
fldl2e
or
inc
adc
aas
je
out
std
enter
ds
imul
imul
out
pop
hlt
imul
mov
push
loopne
imul
jg
sti
add
xor
imul
cmp
mov
cmp
lret
je
or
and
adcl
dec
inc
nop
add
push
jae
sub
andb
jbe
mov
imulb
cmp
loope
mov
xchg
dec
jo
jns
push
and
jbe
pop
jnp
ja
cmpsb
dec
imul
std
in
dec
add
xchg
imul
outsb
or
stos
mov
jnp
inc
or
scas
or
ds
xor
jno,pn
push
jl
test
pop
fldcw
shrl
jg
je,pn
or
mov
test
inc
movsb
sbb
push
add
andnps
shlb
lahf
loop
push
sti
cmp
fimuls
pop
aad
stc
nop
scas
addb
add
and
push
dec
bound
or
hlt
sbb
insl
loop
cld
push
and
into
pop
cld
dec
dec
repz
ret
or
sub
push
lcall
int
rcl
ficoml
jle
cwtl
in
in
outsb
dec
mov
test
enter
dec
xor
sbb
mov
stc
xor
add
out
fiaddl
push
out
add
inc
sbb
cmp
sar
movsb
dec
and
in
xchg
mov
or
push
mov
push
cmpsb
push
dec
xchg
jne
lock
sarl
cmp
jne
ret
or
stos
inc
sbb
adc
cmpsb
xor
test
insb
or
fwait
jecxz
dec
ljmp
jmp
pop
adc
mov
sub
ficoms
fsubrl
movsb
cmc
xorb
xor
add
mov
jno
in
pushf
ss
mov
and
pop
insl
push
lret
call
push
mov
mov
sahf
movsb
xor
jnp
mov
in
sahf
popf
jae
nop
int3
mov
xor
cmpsb
mov
lcall
pop
jbe
cmpsl
push
in
jno,pt
or
jecxz
or
and
test
mov
in
fcomps
in
stos
clc
outsb
mov
pop
pop
icebp
insl
adc
jae
cmpsb
sbbb
sbb
mov
mov
cli
jp
movsb
dec
mov
mov
popa
add
stc
fdivs
xor
or
lret
jbe
xchg
adc
pushf
imul
mov
lahf
jge
adc
mov
dec
cmpsb
das
sbb
mov
inc
shr
add
stos
nop
fisubs
scas
jne
movsb
push
mov
cmp
into
jl
sub
jmp
shll
mov
fwait
push
ss
jnp
lret
fadd
test
stos
scas
sbb
loopne
inc
dec
and
shlb
insl
insb
sub
mov
aas
cmc
cmp
jae
pushf
repz
mov
cmc
cmp
or
xchg
and
jae
mov
lret
sahf
inc
adc
into
insl
mov
xor
xchg
sbb
add
fdivr
push
cmpsl
cmp
rcr
clc
inc
push
movsb
repnz
sub
xchg
aam
xchg
xor
mov
int3
mov
cltd
mov
repnz
insb
mov
add
fsubl
aad
sbb
push
mov
cmc
pop
inc
fcmove
or
rcll
xor
jmp
sub
shlb
ret
in
sahf
out
sbb
hlt
addl
pop
xchg
xchg
sub
movsb
shrb
xchg
xchg
dec
mov
push
mov
or
mov
push
lahf
jns
push
imul
pusha
sbb
iret
push
movsb
or
loope
mov
push
cmpsb
inc
repz
popa
lcall
mov
cltd
sub
stos
lcall
xlat
faddp
mov
lcall
stos
or
and
stos
arpl
lods
lea
jns
jle
xchg
insb
sbb
xor
iret
ljmp
bound
mov
inc
push
push
xor
push
inc
and
bound
insl
add
and
fsubrs
shlb
sub
andl
sbb
jns
adc
mov
xchg
jns
jae
xorb
pop
inc
loopne
push
stos
inc
imul
sbb
adc
decb
int
fs
push
xchg
mov
mov
rolb
out
pop
jmp
adc
push
and
ljmp
inc
imul
adc
bound
stos
sbbb
mov
cmp
or
test
mov
push
xchg
pop
xchg
adc
pop
lcall
in
jbe
movsl
into
mov
or
call
std
fadd
fistpll
outsl
shrb
pushf
aaa
inc
es
add
cld
or
fcmovu
orb
xchg
into
and
adc
aam
xor
cmp
and
test
inc
lock
popf
je
or
inc
push
aaa
scas
xorb
fstpl
xor
push
or
ds
mov
hlt
mov
flds
xchg
push
lock
mov
mov
loope
mov
mov
sub
pop
das
ljmp
scas
loopne
sahf
push
aad
adc
add
jne
sub
and
pop
pusha
scas
xor
mov
pop
xor
mov
lock
inc
scas
xchg
inc
cmp
push
mov
cltd
rorb
lock
lcall
pop
and
mov
mov
call
xor
sarl
loope
cmpsb
lods
pushf
jo
jno
jo
in
mov
mov
aad
adc
jle
xchg
in
lods
cmc
jecxz
xchg
incb
push
jo
lcall
dec
test
mov
sahf
mov
lret
nop
mov
sub
jmp
not
mov
mov
leave
hlt
das
mov
fadd
out
push
ss
lock
lcall
and
loop
mov
inc
movsb
jbe
dec
rorl
jl
and
jbe
lahf
dec
sbb
cli
mov
lods
mov
jbe
pop
test
in
mov
push
sbb
push
adcl
jecxz
jne
pop
mov
out
pop
addb
jg
fstl
mov
dec
mov
movsb
mov
mov
shl
or
mov
jbe
stos
push
xchg
loop
xchg
pop
out
xchg
lret
addb
dec
push
dec
lcall
pop
mov
jmp
mov
imul
inc
mov
imul
and
xlat
pop
outsb
cmc
out
or
test
jae
imul
or
lods
cltd
lds
imul
fwait
imul
mov
push
mov
movsb
ror
cmp
movsb
inc
inc
arpl
push
inc
mov
out
or
inc
mov
out
cmpsb
aaa
into
pop
or
lock
rorb
dec
test
jo
test
int
negl
or
mov
jle
dec
lret
push
push
nop
loop
add
in
jno
incb
aas
lret
mov
rcrb
sub
out
sbb
shlb
into
push
xchg
mov
clc
cmp
call
inc
cli
cmp
addr16
or
adc
xchg
popa
ret
sahf
push
fiadds
sahf
mov
xor
xchg
stos
cwtl
ds
pushf
pop
lcall
pop
iret
mov
pushf
adc
pop
lcall
ja
mov
test
lret
pushf
mov
xchg
movsb
popf
pop
sbb
fnstsw
shrb
xorb
scas
push
mov
sub
mov
iret
lock
popf
imul
lcall
stos
xchg
sbbb
call
andb
inc
loopw
enter
cltd
stos
stos
cld
loop
adc
lds
xchg
pop
fadds
lcall
call
jecxz
mov
nop
aas
popa
push
movsb
push
lahf
push
mov
loope
sbb
push
lea
push
lea
pushf
jecxz
scas
push
ret
test
insl
insb
pop
and
lahf
adc
cmp
sub
in
rol
pop
les
or
lret
imul
push
aas
xor
insl
por
outsl
into
out
cmpsb
jne
mov
inc
sbb
cltd
sub
mov
lcall
nop
out
pushf
jnp
pop
fistpll
push
cwtl
mov
add
jmp
adc
lcall
out
pop
iret
mov
mov
dec
inc
mov
mov
lods
pop
nop
jns
cmpsb
insl
ret
call
ljmp
adc
jno
fstpl
std
int
adc
jo
jmp
daa
mov
lods
or
push
pop
int3
scas
pop
and
push
cltd
push
popf
mov
jle
pop
mov
push
push
inc
rcrb
insl
mov
xor
inc
cwtl
mov
jp
mov
sub
jae
jecxz
jo
nop
jno
jno
lcall
dec
mov
pop
xorl
negl
insl
push
fdivl
popf
jbe
fcomip
cmpsb
test
popf
dec
jne
fisttpl
je
scas
outsl
into
jnp
rorl
adc
adc
pop
adc
outsb
jb
xor
sub
gs
daa
mov
jle
fdivl
cmp
ds
and
xchg
adc
pushf
imul
fmull
cmpsb
and
data16
imul
and
mov
inc
rcrb
lret
icebp
cs
and
insl
jb
lcall
fistpll
inc
outsb
fistpl
insl
sbb
xchg
outsl
push
cmp
sahf
js
lret
lcall
jle
xchg
nop
cmp
subb
xchg
js
lret
lcall
pop
pop
pop
push
mov
dec
add
fidivl
mov
adc
dec
dec
cld
adc
jns
cmpsb
adc
lahf
jnp
pop
loopne
dec
jnp
add
cmp
cwtl
leave
push
inc
cmpsb
out
sub
jno
xchg
and
rcrb
stos
mov
and
mov
jp
jbe
fisubs
loop
dec
mov
adc
mov
imul
andb
mov
push
sbb
daa
push
jno
dec
jo
ja
lcall
adc
jp
imul
ficoml
sbb
pop
fsubr
ret
and
xchg
mov
mov
into
mov
cmp
push
outsl
inc
mov
nop
testb
mov
mov
lret
push
adc
cs
inc
jg
int3
std
jg
cs
pop
jle
frstor
xchg
leave
inc
xchg
out
loope
dec
mov
dec
nop
sbbb
out
pop
sbb
pop
push
mov
mov
mov
jne
aaa
scas
movsb
es
mov
inc
push
aam
push
lods
sbb
bound
push
pushf
and
push
mov
lahf
stos
mov
add
shrb
punpckhwd
mov
nop
lcall
insl
leave
shrb
dec
shlb
andb
jne
or
sub
ret
and
sahf
loop
and
imul
cmp
movsl
jge
push
and
aad
push
int3
push
jb
add
psubw
adc
lret
inc
xchg
pop
mov
or
es
fcmovb
or
jnp
testl
nop
jbe
and
loope
lods
in
fldcw
cmp
ret
sti
or
fwait
int3
out
sub
aas
inc
mov
loope
xchg
jp
cltd
stos
xor
je
lcall
xor
adcb
mov
arpl
mov
cmp
xlat
adc
lcall
mov
fstpl
or
out
xchg
repnz
xor
lahf
push
jle
fimull
cmpsl
sub
pop
inc
call
mov
jae
icebp
push
popa
jmp
xchg
xchg
nop
sub
lahf
dec
call
xchg
insb
into
popa
scas
cwtl
mov
xor
lcall
inc
mov
mov
push
cltd
ret
push
fcoms
or
mov
push
add
lcall
push
lcall
call
or
jle
outsb
inc
pop
or
adc
sbb
aad
insb
xchg
aas
jns
push
inc
pop
mov
iret
rep
fcmove
jg
push
sub
inc
movsl
mov
int3
fcoms
xchg
lds
in
in
loop
mov
mov
push
add
in
xor
xchg
sub
in
into
mov
sbb
movb
ficoml
mov
or
mov
shlb
xchg
xchg
adc
lcall
cmpsl
shrl
insb
jae,pn
mov
mov
cmpsl
imul
xchg
and
push
xchg
mov
out
int
jbe
mov
fisubs
fcompl
fwait
push
adc
xor
cltd
icebp
shr
xchg
pop
mov
shrb
push
test
outsb
or
cmp
je
xchg
push
ja
jno
shrb
test
lret
sub
ljmp
mov
outsl
std
andb
jb
mov
inc
xchg
mov
mov
inc
nop
cmpsb
jle
pop
das
dec
mov
pushf
sahf
cmpsl
hlt
fcmovnbe
ss
inc
xchg
pop
into
xlat
mov
mov
loop
pop
lcall
cmpl
inc
popa
inc
pop
adc
inc
pop
cltd
push
test
aad
ss
cmp
ret
iret
mov
dec
inc
inc
ficompl
jle
jg
add
andb
in
mov
scas
adc
xchg
sti
adc
cmpsb
mov
cmp
insl
icebp
repz
or
ret
mov
repnz
mov
divb
pushf
mov
cwtl
jl
mov
pop
aam
sbbb
xchg
dec
mov
xchg
sti
push
cs
pushf
divl
iret
push
xchg
daa
push
outsl
inc
std
fidivl
xor
cmpsb
mov
cltd
jle
mov
imul
outsl
push
insl
jno
jne
and
clc
jle
rcll
dec
sti
sub
inc
mov
or
push
mov
sub
jle
or
lahf
test
sbb
cmp
int3
pushf
aam
sbb
sub
pop
out
mov
in
cmpsl
mov
and
imulb
sub
insl
enter
and
cmpsb
icebp
jno
jecxz
lods
std
xor
sub
cmp
xchg
mov
jb
and
inc
push
cmpsl
outsl
mov
mov
jmp
xlat
lods
inc
push
inc
push
stos
cmpsb
xor
sbb
push
mov
add
add
or
jmp
notb
inc
movsb
rorl
cmc
shrb
add
or
xlat
aaa
lahf
xchg
sti
test
aaa
pop
jno
je
xor
sub
ljmp
scas
xor
jecxz
in
fldt
sbb
out
mov
mov
enter
lcall
loopne
or
aam
negb
in
sbb
xor
stc
mov
xchg
bswap
cwtl
and
stos
fnstcw
mov
adc
mov
jno
mov
enter
mov
jb
mov
jg
cmpps
jp
mov
andl
xchg
scas
lea
and
inc
fnstsw
out
lcall
jmp
sbb
clc
push
push
loopne
out
je
iret
push
out
cmp
in
cmpsb
pop
jo
pop
push
cwtl
jno
mov
lahf
sbb
movsb
arpl
sbb
jmp
stc
jnp
xchg
mov
cmp
push
in
mov
fcmovbe
scas
mov
sub
sbb
cwtl
mov
sahf
aaa
jmpw
mov
jl
ja
mov
lcall
popf
ljmp
stos
fdiv
call
lods
pop
mov
pop
and
jle
jmp
jns
imull
cmc
pop
imul
pop
sbb
outsb
jecxz
push
inc
iret
pushf
fsubrs
test
mov
push
pop
mov
lods
fsubl
adc
enter
xchg
lret
cld
push
xorb
mov
push
lea
jae
cmp
add
scas
xchg
outsb
jbe
cmpsb
test
adc
xchg
mov
loope
push
dec
jnp
mov
mov
dec
or
outsb
lea
stos
add
insb
lcall
in
xchg
cmpsb
hlt
lock
sbb
cltd
inc
push
mull
mov
fldenv
dec
mov
push
repnz
int
es
jb
xor
or
lret
mov
adc
or
es
dec
jno
sub
sahf
jge
dec
sbb
sbb
mov
push
idivl
insb
mov
mov
lret
outsb
adc
repz
push
mov
mov
mov
xchg
aaa
pop
xlat
jno
int
imul
mov
insl
stos
adc
jecxz
loopne
or
push
push
xchg
lcall
mov
notl
fiaddl
pop
faddp
sbb
sti
inc
pop
push
sahf
je
lcall
out
and
dec
je
out
jg
mov
ljmp
and
sahf
sbb
push
mov
xor
mov
pop
pop
mov
ja
mov
inc
mov
negl
lret
addr16
mov
cmp
sbb
outsb
es
mov
mov
push
dec
jne
scas
cwtl
scas
repnz
std
xchg
pop
and
fmul
lock
mov
out
jae
repz
int
sbb
jno
sbb
mov
push
xchg
fimuls
mov
cli
jb
dec
daa
mov
subb
inc
inc
cmpb
push
sub
mov
mov
mov
or
mov
popf
cmpsl
cwtl
mov
push
movsb
adc
mov
enter
add
pop
je
stos
shrl
je
ja
mov
ds
inc
cltd
xor
xchg
cs
outsb
jae
lcall
mov
mov
mov
inc
lret
mov
pop
in
sub
bnd
cmp
mov
mov
push
aas
imul
out
movsb
rclb
sbb
mov
in
inc
mov
mov
idivb
cld
imulb
mov
outsl
aas
adc
inc
jle
xor
mov
popa
mov
mov
mov
jo
xchg
sbb
shr
mov
scas
repz
xchg
sbb
xchg
or
pop
call
adc
iret
cltd
imul
rcrb
fmulp
popf
imul
popf
lcall
imul
into
jge
fwait
sbb
jl
mov
je
imul
shll
scas
adc
aad
jmp
add
mov
dec
lahf
push
popl
adc
mov
orb
jmp
or
inc
mov
aam
or
imul
push
test
or
enter
mov
stc
add
add
sbb
test
lea
andb
jle
xchg
je
aas
scas
jle
imul
adc
je,pn
cmc
mov
movsl
push
xchg
roll
add
popa
xchg
or
and
cltd
mov
sub
mov
xchg
mov
dec
scas
daa
mov
or
adc
orl
into
xchg
jnp
mov
xchg
lea
or
jmp
sub
iret
xor
into
xchg
jnp
outsl
mov
jle
mov
or
call
and
pop
xchg
xchg
cmp
out
lret
xor
jmp
das
mov
es
push
jne
pop
cmpsl
pop
push
push
mov
adc
cmp
fwait
mov
insb
cmc
cmpsl
cmp
sahf
fcompl
jp
fisubs
je
pop
in
xorl
int
rcr
in
gs
fisubrl
adc
mov
jbe
mov
xchg
test
inc
xchg
mov
jnp
bound
ret
adc
pop
pop
outsl
mov
adc
push
call
fmull
xchg
mov
lret
push
scas
scas
into
mov
mov
pop
mov
mov
add
inc
sbb
icebp
mov
fwait
xchg
insb
mov
mov
cmp
out
mov
and
jae
inc
cmpsb
loopne
mov
lcall
mov
out
adc
or
add
push
xlat
sub
push
mov
xchg
test
popa
and
popa
mov
dec
jo
inc
mov
cwtl
test
outsb
insl
inc
push
xchg
daa
add
fnstcw
into
cmpsb
push
mov
jp
mov
lods
pushf
test
jne
jo
imul
mov
mov
int3
mov
jb
mov
inc
outsb
xchg
lea
movsb
je
cmpsb
xchg
jae
jns
mov
sbb
xchg
xchg
sbb
shlb
cmp
es
and
sbb
mov
lret
shlb
dec
call
pop
imul
mov
sub
pop
inc
stos
cmc
sbb
negl
push
fisttpl
loope
push
add
arpl
cs
mov
mov
lahf
roll
adc
mov
xchg
cmc
adc
xor
imul
dec
ja
jo
push
jo
in
cmp
in
jo
add
or
inc
push
fbld
mov
stos
mov
lea
jl
leave
movsl
dec
mov
dec
cmpsb
cmp
imul
xchg
or
mov
mov
fistpll
push
jne
jp
adcb
std
dec
cmpsb
adc
clc
mov
push
xchg
out
pop
outsb
popf
fidivl
sbb
sbb
push
xchg
add
push
arpl
push
pop
xor
mov
sub
pushf
xchg
push
mov
or
jge
cmpsb
in
xchg
nop
cmpsl
enter
nop
js
outsb
shll
scas
jle
fs
mov
mov
xor
scas
das
xchg
sbb
addb
mov
sub
mov
inc
dec
or
into
sahf
xchg
pop
cmpsb
cmp
insl
paddq
cmp
int3
in
les
cmp
fidivs
inc
cwtl
pop
or
jb
outsl
lret
popa
idivl
mov
not
shlb
jl
sti
sub
xorb
sub
mov
pop
mov
sbb
xchg
pop
cmpsb
jg
ja
fs
push
push
add
mov
and
jbe
jge
scas
and
shr
mov
mov
outsl
hlt
cmp
nop
cmp
hlt
pop
inc
icebp
xchg
dec
sub
test
cmp
nop
jnp
mov
mov
loop
sub
stos
push
mov
mov
mov
mov
adc
jge
movsl
jle
ret
lods
jbe
xorb
inc
ss
rcll
lcall
mov
int3
sub
sahf
notl
iret
rcrb
jle
stos
jecxz
cltd
cwtl
ret
push
push
mov
mov
xor
or
inc
add
js
jp
xchg
js
movsl
scas
xchg
andl
dec
imul
inc
jne
jb
xchg
out
addl
nop
xor
cmp
fadds
dec
repz
fildll
push
mov
add
scas
mov
lcall
jbe
and
add
movsb
aas
push
sti
xorl
lcall
inc
in
cmpsl
xchg
or
sbb
std
dec
add
out
mov
mov
ret
jo
outsb
cmp
clc
mov
add
sti
mov
pop
inc
shl
xlat
test
rcrb
pop
dec
fldenv
cmpsb
in
xlat
data16
add
push
mov
addb
dec
cmpsb
insb
add
aam
push
inc
mov
leave
mov
mov
subb
jecxz
jbe
cltd
inc
cmp
inc
addb
mov
push
and
adc
mov
mov
dec
sub
pop
lret
mov
or
loop
ror
mov
popa
mov
lods
lcall
lahf
ds
jge
push
fs
mov
je
push
sbb
push
inc
mov
dec
addr16
mov
push
add
and
xor
push
out
fwait
xor
and
mov
hlt
sub
mov
mov
mov
fcomip
mov
fmull
repz
adc
sbb
insb
pop
push
cltd
xchg
mov
rorl
and
mov
sub
fs
xchg
dec
cmpsb
xchg
sarb
imul
push
into
cmpsl
cwtl
inc
enter
in
xchg
add
mov
scas
lahf
ret
cs
jno
lret
popf
sub
inc
jne
nop
xor
push
mov
xchg
aad
test
out
pop
std
in
push
cmp
xchg
mov
jp
into
out
or
cwtl
mov
jp
xor
repnz
aam
xchg
sbb
repnz
lahf
ret
mov
shlb
xchg
sahf
or
fstps
aaa
adc
cmc
mov
jnp
mov
lahf
clc
sahf
sahf
enter
cmp
mov
aam
outsb
or
stc
mov
jge
cwtl
mov
push
mov
out
sub
jg
les
lods
js
adc
loopne
add
xchg
into
mov
pop
sbb
pop
adc
int
jp
adc
sbb
inc
movsb
int3
pop
shll
and
test
mov
xchg
fistl
push
dec
pop
mov
cwtl
int3
jg
out
insb
push
inc
mov
push
imul
in
int
out
mov
mov
scas
cld
stos
pusha
test
dec
add
sub
mov
or
xor
iret
stos
cmp
mov
ja
popf
popa
ret
and
inc
mov
shlb
shlb
dec
mov
xchg
shlb
imul
aam
mov
lock
cs
mov
out
sbb
inc
lods
pop
call
jae
fsub
jle
adcb
in
outsl
cs
test
jl
xchg
mov
or
scas
jbe
fmull
lock
clc
cld
test
jae
mov
test
adc
jnp
roll
xchg
adc
pop
incb
cli
inc
jne
cld
subb
imul
or
pop
and
lcall
mov
in
xchg
inc
jb
movsb
shll
adc
int3
fwait
outsl
xchg
push
sbb
lcall
rcl
lods
jp
stc
and
mov
sbb
push
shlb
sbbb
jb
xor
mov
xchg
mov
mov
xchg
and
cmpsb
xor
lds
adcl
std
lods
scas
into
mov
inc
sbb
lcall
xchg
push
lcall
sbb
fwait
out
lods
push
cltd
sbb
and
scas
dec
xchg
mov
pcmpeqd
cmpsb
ret
jg
dec
test
ret
pop
mov
in
loop
fucom
loope
jmp
lcall
jb
stos
nop
lret
xchg
js
iret
scas
adc
sub
ja
daa
lods
or
xchg
and
jg
jb
lret
movsb
das
add
aad
mov
cmp
test
lods
xchg
xchg
fimull
mov
in
jle
pop
clc
mov
cmp
cmpsb
fwait
shlb
add
mov
adc
jnp
leave
inc
aad
mov
int
pop
push
push
lcall
xchg
das
imul
mov
icebp
push
mov
push
dec
shll
mov
xchg
sbb
in
push
xchg
mov
movsb
int3
rcll
lds
rclb
fisubl
outsl
test
mov
cmp
and
mov
movsb
mov
mov
in
and
mov
mov
cmpsb
and
push
sub
outsl
mov
and
iret
out
push
loope
pop
out
lcall
adc
xlat
mov
outsb
and
add
leave
adc
sahf
mov
fstpl
inc
push
cli
mov
cmp
std
ss
scas
inc
jge
xchg
and
inc
inc
loope
sub
aas
insb
out
ret
ja
push
push
pop
mov
cltd
push
push
fdivr
jbe
lcall
lcall
or
sub
xchg
out
inc
arpl
mov
lret
into
mov
push
mov
mov
test
lcall
hlt
int3
add
adc
push
cmpsb
mov
cmp
jb
sbb
test
pusha
jp
mov
fstp
and
bnd
rorl
pop
js
cmp
into
scas
mov
pusha
jns
fldenv
cmp
js
or
jns
mov
and
or
jl
cmp
in
jl
lea
xchg
jne
scas
and
movsb
or
imul
mov
push
or
push
sahf
and
jne
mov
into
imul
mov
mov
mov
aam
out
fimuls
fchs
mov
js
test
rcll
dec
adc
loope
xchg
les
mov
cltd
aam
and
jne
das
sarl
loop
testl
jno
jne
out
bound
mov
sbb
jne
adcl
mov
jno
and
pop
xor
rcll
into
stc
divl
in
fistps
scas
jp
mov
in
fistps
pop
into
loopne
pop
inc
cmp
into
mov
xor
cmpsb
sbb
cmp
icebp
into
fsubrs
int3
jo
movsl
in
jae
mov
int3
pop
dec
out
jnp
in
jnp
dec
aas
inc
fstpt
scas
loope
lret
clc
stos
stos
out
lcall
push
andb
in
push
ljmp
push
lcall
lcall
aam
rclb
xchg
xchg
push
lret
mov
in
xor
jno
pop
xlat
mov
pop
lahf
mov
sub
mov
mov
bswap
fadd
cwtl
sbb
stos
sbb
out
and
adc
sub
mov
stc
shlb
enter
xor
data16
jnp
popf
mov
gs
jnp
cs
mov
mov
mov
jb
rorb
and
xchg
fcoms
sbb
in
mov
outsl
loop
shr
sahf
jnp
cmp
adc
add
xor
scas
aam
idiv
aaa
cld
sub
push
mov
mov
rorl
shlb
jle
sarb
shrb
sahf
xchg
mov
fsubrs
cmp
loopne
mov
push
out
dec
outsb
sbbb
clc
sahf
imul
mov
outsb
xor
dec
mov
daa
shrl
in
roll
std
mov
push
outsb
dec
les
stc
fistpll
test
jl
dec
pusha
cltd
add
into
mov
xlat
push
adc
inc
sbb
cmp
pop
enter
and
sbb
and
insl
sub
cmp
push
sarl
imul
push
pushf
orl
ja
rolb
xchg
mov
or
or
or
push
ret
jge
push
xor
loop
aad
testb
es
fsubs
fiadds
out
adc
add
sbb
fs
and
aam
enter
ret
mov
sbb
aas
outsl
in
push
clc
out
enter
jle
lcall
inc
xor
ja
dec
ret
inc
lock
ss
xchg
xchg
add
mov
or
sar
xchg
or
mov
mov
pushf
fcoml
cmpl
cmc
jb
cld
inc
mov
inc
sahf
ss
mov
or
cwtl
cld
inc
outsl
xchg
cltd
lcall
mov
repnz
cld
mov
xchg
repz
and
nop
sbbl
enter
jns
hlt
outsl
adcb
inc
and
pop
sahf
hlt
and
xlat
cmpsl
add
xchg
mov
mov
divb
and
mov
inc
jbe
and
loope
sbb
xchg
mov
lcall
lcall
rcl
add
mov
mov
and
jnp
rcl
scas
cmp
mov
ficompl
sub
mov
fdivs
fisttpl
jno
sti
mov
xchg
sbb
outsb
xchg
mov
gs
mov
outsb
or
xchg
pushl
jge
mov
repz
mov
jno
mov
filds
push
shrb
add
cs
je
in
cmpsl
hlt
sub
int
adc
stc
test
xor
mul
movsl
inc
adc
imul
dec
scas
movsb
nop
movsb
iret
lahf
iret
imul
adc
and
cmp
bound
repz
test
lret
in
push
mov
test
jnp
fmull
mov
lret
adc
lret
mov
nop
test
lahf
or
inc
outsb
call
or
sub
xchg
and
fildl
pop
sbb
inc
cmp
push
in
test
rcrl
adc
sti
shl
sar
or
iret
in
mov
jns
test
xchg
adc
xchg
jecxz
sbb
test
je
jmp
sub
lcall
mov
mov
xchg
jb
xchg
mov
push
mov
test
sbb
sbb
shll
push
push
cmpsb
lret
or
nop
repnz
repz
mov
mov
xchg
mov
push
mov
mov
adc
xchg
xchg
sahf
sahf
mov
cwtl
xchg
add
lret
fwait
push
lcall
adc
xchg
push
fnstsw
mov
sbb
sar
and
fldt
out
mov
lcall
mov
pop
pop
lods
lea
add
xchg
mov
xor
outsb
cmpsb
insl
aas
jo
xchg
das
inc
inc
adc
clc
mov
lret
xlat
pop
sub
add
pushf
mov
movsl
bound
push
in
lcall
add
std
jb
lcall
into
pop
jle
jb
xor
test
xor
outsl
jle
idiv
out
in
cmp
pusha
push
push
xchg
sbb
cmpsb
in
push
push
jae
mov
push
push
push
sbb
push
sbb
movsb
pop
push
roll
out
outsb
cmpsl
add
repz
mov
sti
pop
sbb
mov
xchg
push
shr
lret
out
lods
xor
or
mov
dec
mov
mov
push
jle
out
cmc
out
movsb
add
enter
mov
push
aas
rep
add
adc
cwtl
in
scas
mov
jmp
nop
insb
sahf
cmp
adc
pusha
mov
jne
int
mov
and
dec
xchg
arpl
cld
cld
jp
in
sti
push
cmpsb
sbb
lret
ficompl
lcall
xchg
adc
dec
cmc
ss
icebp
xchg
jecxz
mov
mov
je
loopne
test
lahf
inc
add
insl
xlat
insb
dec
jns
aam
mov
xchg
xchg
cmpsl
gs
movsl
cwtl
loopne
mov
mov
outsl
nop
jo
mov
fldcw
inc
out
pushw
mov
pop
and
rcl
xchg
sbb
jmp
push
mov
push
and
dec
int
push
mov
xlat
jne
sbb
cmc
mov
mov
xlat
nop
movsl
test
xchg
lcall
movsb
sarl
addr16
mov
cmp
jae
ficoms
ss
icebp
mov
jns
je
sub
fdivrs
xor
mov
jo
inc
inc
daa
ljmp
xchg
lcall
push
push
mov
xchg
dec
sub
jne
in
jb
add
jb
cmpsb
cwtl
scas
mov
mov
push
adc
dec
ss
or
adc
ds
out
inc
popf
aam
pop
mov
sbb
push
dec
xchg
push
and
je
push
and
and
nop
mov
aam
xchg
fmull
add
les
je
mov
out
ljmp
pushl
into
pop
fidivrs
incb
push
and
enter
push
notl
fs
push
jmp
fs
jne
xchg
jo
ja,pn
push
inc
ja,pn
sbb
adc
orb
test
sbb
jo
pop
add
lahf
cltd
mov
outsl
imul
xchg
mov
mov
mov
lods
cmp
dec
scas
sub
out
add
addr16
mov
mov
cld
sti
jle
std
lret
jnp
clc
adc
xor
stos
pop
push
loope
lret
lahf
cwtl
cli
xlat
add
push
jecxz
into
inc
outsl
cmp
andb
into
dec
rcr
inc
into
je
ss
aad
mov
mov
test
pop
inc
test
jne
sub
int
fcom
stos
mov
mov
pop
cmp
sbb
mov
jo
outsb
push
add
iret
fiaddl
sbb
push
mov
loopne
push
call
push
aad
inc
cmp
bound
adcl
cmp
jp
ret
push
mov
dec
add
bound
pushf
jge
insb
sub
inc
xchg
mov
jo
and
ret
add
cld
xchg
lret
scas
dec
jae
xchg
rcrb
add
cltd
push
into
xor
xchg
repnz
cmp
or
xchg
cmpsb
fdivs
push
jae
xlat
mov
sarb
push
js
and
mov
ljmp
mov
inc
stos
cmpsl
call
outsl
xor
test
xchg
jle
mov
lea
mov
xchg
push
loope
lret
and
rorb
jne
xor
xor
stos
inc
pop
rcl
loop
jbe
adc
popf
xor
add
mov
lea
sub
clc
or
push
movsl
scas
jb
test
lods
dec
or
mov
cmpsb
call
xchg
push
fxam
rclb
stos
nop
push
repnz
shlb
xchg
mov
cld
push
bound
pop
xchg
dec
outsb
push
rolb
sbb
push
adc
cwtl
ljmp
scas
sbb
nop
push
fdivl
ljmp
inc
sub
arpl
popa
sbb
imul
scas
add
mov
lods
daa
rcrb
mov
mov
mov
sub
and
mov
jmp
lret
fcoml
xor
jne
aaa
mov
sti
jne
mov
xor
out
ficomps
lcall
cmp
mov
in
sbb
lock
lahf
xchg
test
or
scas
xor
mov
iret
int
mov
lret
dec
movsb
push
outsb
xchg
aam
rcrb
jp
sbb
mov
sub
dec
xor
nop
imul
sub
je
push
rorl
sahf
stos
sahf
xchg
mov
repz
lods
fcoms
nop
test
aam
xchg
ss
jo
cs
js
dec
jp
pop
cmpsb
add
xchg
xor
jl
int
jae
enter
lret
rcll
ja
add
cmp
add
jg
lock
add
out
xchg
stos
mov
pop
popf
test
or
jo
rolb
sbb
jne
push
into
loopne
dec
jl
cmp
dec
mov
rcll
xchg
movsl
sbbl
stos
pop
lds
sbb
lods
push
frstor
movsl
mov
push
lods
out
mov
outsb
push
test
and
jbe
push
sub
pop
lcall
adc
or
cmp
sahf
sahf
xchg
stos
xor
sbb
mov
or
pop
in
testb
mov
adc
lcall
xchg
lock
push
fistps
repnz
daa
out
insb
aas
jl
xchg
pop
jb
mov
ja
cld
xlat
jmp
or
sub
and
pop
xor
mov
nop
mov
xor
gs
jp
mov
mov
xchg
cmpsl
push
lret
mov
stc
dec
ss
les
cltd
or
push
xchg
popa
xchg
xchg
ret
fisttps
mov
std
addl
outsl
mov
xchg
clc
xchg
mov
mov
jge
add
imul
dec
xchg
mov
or
rcll
jmp
adc
ret
adc
jns
lea
lahf
mov
jp
cmp
push
inc
xchg
xchg
into
lcall
mov
jne
into
jmp
add
sti
mov
xchg
shrl
push
mov
pop
add
cmpsb
scas
xchg
mov
scas
inc
mov
cwtl
hlt
call
jb
test
sahf
aam
cmp
xchg
inc
call
push
vaddss
testb
fs
dec
jecxz
jnp
lret
cmpb
and
jb
cmp
aad
pop
dec
push
fmuls
mov
dec
nop
lock
inc
cmp
int
jnp
mov
test
xchg
mov
inc
adc
out
imul
sarl
shrb
into
xchg
lret
scas
fsubl
in
enter
dec
lcall
push
mov
imul
js
mov
xchg
int3
test
jbe
ss
xchg
lods
mov
in
xor
dec
lods
pusha
mov
sub
inc
mov
and
sbb
xor
int
mov
jno
ud1
or
outsb
mov
push
cld
adc
fcoms
repz
mov
mov
mov
sbbb
jle
sbb
inc
cltd
sub
and
fs
mov
adc
sarb
sub
add
push
push
xchg
loope
or
jp
mov
jae
sub
rcl
cmp
or
movsl
adc
xor
rcrb
out
and
mov
ja
xchg
add
cmp
cmp
popf
cmpsb
or
hlt
sub
mov
movsb
dec
mov
inc
dec
xchg
enter
rorb
mov
sub
mov
ss
fidivrl
cmp
mov
es
outsb
out
cld
pop
js
xchg
into
jae
push
stos
push
push
jne
fdivrs
lock
sub
in
fcmovnbe
xor
gs
cmp
adc
lods
xchg
sub
repnz
mov
jno
dec
mov
mov
sahf
mov
cmp
sarb
mov
cmp
jmp
inc
push
in
dec
pushf
and
mov
and
mov
mov
adc
outsl
add
je
jno
cmp
cmpsl
sbb
movsl
pop
push
dec
lret
das
rorl
pop
insl
jnp
or
push
cmc
cs
fsub
popf
pusha
xchg
mov
fisubrs
mov
pop
pop
cmpsb
lock
cld
enter
adc
aad
jno
in
out
stos
mov
cltd
lret
push
and
push
cmp
ret
mov
cmp
dec
sub
outsb
mov
or
sbb
cmpb
cmpsb
push
mov
movsb
push
movsb
push
xchg
push
add
fstpl
jbe
cmpsb
ret
inc
sbb
out
push
repnz
lock
fisubl
inc
and
add
ret
xor
sbb
inc
lods
stos
sti
es
cld
enter
fcoms
jle
nop
jno
jnp
mov
jbe
mov
out
in
jg
sbb
out
out
mov
js
sbb
cmp
push
xor
xorl
and
mov
loopne
mov
cmp
jbe
push
pushf
or
call
jno
adc
ficoml
repnz
lcall
cmp
or
or
mov
js
cmpb
mov
cmpsl
std
clc
cs
cli
sbb
mov
aad
or
inc
outsl
cld
pushw
mov
aaa
pop
add
cmpsb
fdivs
sub
es
mov
xchg
and
aaa
les
pusha
cmpsb
hlt
fimull
mov
les
scas
mov
call
cmp
jmp
pop
jno
xchg
cld
mov
lcall
sti
mov
scas
ret
js
fwait
jp
inc
mov
adcb
loopne
inc
scas
sbb
dec
lea
push
cmp
fsub
lahf
aas
std
out
test
or
pop
fdivrs
inc
lods
lret
add
xor
adc
leave
mov
mov
js
inc
rorb
movsb
jb
mov
cmp
loopne
stos
sub
scas
out
les
cmp
sbb
adc
fwait
cmp
in
add
cmp
scas
in
bound
cmp
sbb
push
in
popa
stos
xchg
sahf
cltd
mov
test
cmpsb
push
adc
mov
sbb
push
push
popa
scas
xchg
push
or
lods
adc
cltd
xchg
push
dec
popa
lods
xchg
push
or
adc
fwait
push
dec
addr16
mov
mov
mov
push
mov
push
lret
or
cltd
in
dec
add
adc
rorl
pop
fsubr
mov
and
cmp
dec
xchg
mov
add
int3
fwait
push
mov
sub
cltd
mov
shlb
cmp
jle
mov
sub
push
scas
aam
pop
mov
rorl
cmpsb
and
sbb
mov
adc
sbb
mov
cs
ret
push
lret
adc
negb
mov
mov
roll
dec
popa
rclb
adc
rcl
outsl
push
jnp
imul
push
adc
mov
fs
rcll
cltd
ja
cwtl
out
lea
ret
test
ja
cmp
scas
test
mov
pop
fmulp
jle
sub
and
popf
dec
xchg
movsb
stos
add
roll
lret
imul
sub
ja
push
leave
xchg
pop
ret
xor
inc
xchg
les
sahf
outsl
aad
inc
jno
mov
mov
aaa
xor
cmp
ja
dec
shlb
sti
lods
or
xlat
lcall
lcall
loopne
arpl
mov
aam
jl
pop
movsl
scas
jbe
fs
mov
loope
nop
cmp
outsl
rorl
adcb
dec
dec
testb
idiv
repz
and
cmpsb
mov
loop
mov
mov
xchg
pop
mov
lcall
cmpsb
add
lcall
mov
std
into
jmp
js
in
test
fcmovbe
cmpsb
iret
add
mov
mov
je
hlt
mov
or
push
mov
inc
pop
cld
jecxz
aaa
jmp
jno
das
jge
inc
out
pop
sbb
repz
aam
xlat
addl
pop
into
mov
pusha
push
lret
fmull
sub
cmpsb
inc
scas
cmp
call
fwait
mov
or
hlt
nop
mov
xchg
xchg
fdivrp
mov
add
mov
ja
inc
int3
mov
jne
sahf
mov
popf
out
movsb
icebp
test
xlat
shrb
hlt
inc
mov
lcall
inc
pop
sbb
cltd
dec
xor
mov
mov
scas
jo
aad
mov
in
pop
sub
sbb
jmp
test
add
xchg
mov
mov
mov
mov
pop
fcomps
imul
inc
lret
lods
inc
bound
pop
cmp
fldl
scas
mov
subb
movsb
mov
mov
int
enter
jmp
inc
inc
out
sbb
aam
sbb
xlat
lock
xchg
lahf
repnz
push
inc
or
mov
xchg
in
shlb
and
clc
out
mov
adc
pop
mov
sub
mov
into
lcall
rorb
filds
fildll
mov
iret
nop
xchg
jno
xchg
fwait
mov
mov
mov
inc
sub
sbbb
mov
into
in
and
mov
xchg
jmp
sub
xor
rcrb
std
fdivr
and
fisttps
xchg
sbb
fisubrs
outsb
mov
mov
adc
out
outsl
ds
mull
imul
mov
xchg
dec
and
and
popf
lret
xchg
shrb
add
push
lret
adc
mov
mov
xchg
pop
cwtl
mov
out
sub
xchg
js
jb
gs
xchg
fidivrs
jnp
pushf
cltd
jmp
iret
std
pop
push
addr16
mov
or
rcll
xor
leave
outsb
or
jo
xlat
sbb
shrb
push
idivb
push
imul
xchg
and
lret
adc
movsl
mov
mov
cmpsl
push
movsl
pop
mov
fists
in
sahf
jns
mov
push
cwtl
clc
aas
es
enter
iret
and
xchg
and
test
aam
jmp
imul
iret
out
leave
icebp
call
mov
dec
mov
mov
mov
mov
and
pushf
flds
mov
pop
dec
pop
shlb
xchg
xor
out
dec
scas
sub
enter
lret
adc
ds
xorb
mov
sbb
mov
mov
and
add
jo
jmp
cs
mov
and
daa
adc
and
into
icebp
xchg
in
shrl
mov
fidivrs
jo
sbb
insl
mov
scas
adc
mov
int
into
xchg
js
mov
or
jne
lea
mov
xchg
ret
jecxz
jae
fmul
movsb
adc
into
test
mov
cmpsb
aas
xchg
or
push
iret
imul
into
and
mov
test
mov
lcall
scas
mov
or
fwait
imul
or
aas
adc
rcll
cmpsb
sub
or
clc
sahf
push
jno
into
leave
xchg
inc
push
xchg
fisttpll
add
add
lds
pop
fldz
fdivrs
jmp
jne
cmpsb
sahf
std
pop
mov
stos
sub
in
push
scas
dec
jbe
mov
in
rclb
sbb
or
or
nop
xchg
jae
scas
or
mov
mov
mov
inc
std
mov
mulb
outsl
std
test
pop
jb
lret
adc
inc
push
mov
add
xchg
jp
push
bound
std
insl
imul
inc
cmpsb
sub
jno
mov
enter
cmpsl
pop
jne
in
mov
out
mov
cwtl
xchg
jns
fwait
ds
fcoms
sahf
and
xchg
push
mov
dec
aam
into
cmpb
cld
dec
pusha
push
adc
cwtl
cmp
jb
sub
popf
mov
lods
xchg
or
inc
mov
mov
mov
fwait
jo
xchg
sbb
mov
sbb
adc
gs
jnp
jae
mov
jnp
ds
sub
xchg
lock
in
mov
jae
jb
sbb
lcall
inc
xchg
icebp
jb
xchg
subb
mov
pop
xchg
adc
sub
je
pop
in
test
and
loop
xchg
xlat
jb
jno
push
jmp
cld
pusha
mov
mov
int3
nop
push
scas
mov
outsl
lcall
inc
imul
fisttpll
pop
lcall
fwait
lcall
xor
imul
add
nop
outsl
mov
push
push
iret
jp
pop
xor
test
adc
pop
rcrb
clc
mov
int
add
push
lahf
insb
sub
mov
shr
out
outsl
out
daa
sbb
inc
pop
bound
cmp
cmpsl
mov
fsubp
ja
test
js
js
mov
push
shrl
xor
cmp
adc
test
mov
xchg
repnz
adc
loop
pop
inc
push
js
xchg
outsb
ret
dec
xor
ret
xchg
sub
pop
adc
scas
pop
xlat
into
dec
push
push
fildl
gs
test
push
xorb
jl
and
repz
imul
repnz
stos
imul
mov
cmp
push
xchg
stos
rdpmc
inc
sbb
insl
fimuls
cmc
adc
sbb
insb
sbb
cltd
xchg
cmpsb
mov
ror
sbb
cwtl
or
or
xchg
lret
push
cmpsb
jb
mov
mov
lret
jno
jno
xchg
push
dec
fstl
dec
jae
pop
xor
xor
psraw
mov
jl
imul
cltd
xchg
ja
repnz
flds
xchg
or
pop
and
adc
sbb
dec
cltd
mov
bound
insb
je
mov
mov
add
push
aad
in
je
xor
xchg
ret
leave
lcall
enter
cwtl
xchg
xor
xchg
jmp
xor
popa
push
pop
mov
sbb
push
addr16
in
and
lcall
xor
sub
mov
mov
mov
enter
rorb
sub
sar
ror
xchg
stos
mov
push
add
es
int3
jns
lea
fldenv
push
orl
jno
jae
dec
push
jae
stos
adc
repz
pop
loopne
xchg
rcrl
test
fs
insl
cmp
fldcw
push
mov
call
mov
jp
stos
les
std
sbb
sarb
xchg
addr16
mov
dec
mov
icebp
dec
push
movsb
xlat
add
aam
inc
cmpb
sbb
mov
mov
imul
sbb
outsb
xchg
lods
xchg
repnz
mov
hlt
scas
pop
or
push
jbe
cmp
mov
and
bound
cmpsl
mov
cmp
mov
jp
scas
cmpsl
movsb
xchg
push
pusha
or
outsl
jecxz
mov
push
jp
xorl
lret
cwtl
cld
jo
fldenv
test
adc
xchg
push
push
push
xor
mov
adc
xchg
xor
adc
sub
mov
pusha
dec
into
xchg
leave
mov
into
lret
outsl
jp
mov
lcall
pop
mov
repnz
dec
mov
or
mov
push
push
pusha
rolb
or
jbe
and
je
and
outsb
mov
inc
mov
insb
sbb
jae
gs
divb
jmp
inc
jg
pusha
xchg
or
rorb
sti
js
nop
push
pop
cmpsb
or
sbb
mov
xor
mov
adc
or
jns
add
cmp
pop
push
adc
mov
into
xchg
xchg
jno
sti
nop
jne
ds
mov
mov
or
icebp
aad
fidivl
sbb
xor
mov
adc
lcall
and
cmp
xchg
push
sbb
xchg
dec
jmp
push
pop
mov
ret
or
nop
dec
insl
jecxz
dec
cmp
dec
pop
cmpsl
jnp
xchg
insl
fisttpll
js
or
ljmp
mov
lcall
mov
jns
xchg
push
cmpsb
in
iret
inc
scas
sbb
mov
shlb
int3
sbb
fimuls
in
mov
mov
rclb
cmpsb
icebp
stos
xchg
mov
cmpsb
frstor
jp
fmuls
and
lds
cs
insb
cmpsb
push
in
jns
enter
jp
jo
out
into
or
into
mov
lcall
mov
jp
and
test
push
test
cmpsb
xchg
mov
pusha
into
mov
lock
cmpsl
push
adc
xchg
sahf
mov
outsb
pushf
mov
push
jle
aam
cmp
inc
test
adcb
or
push
xchg
jecxz
out
mov
in
iret
js
push
jp
jmp
or
add
inc
out
cmp
fstpt
inc
push
insb
mov
mov
xchg
cltd
ret
jbe
stos
outsb
mov
out
aas
loopne
mov
int
dec
jo
push
lcall
ds
xor
rclb
lea
outsl
xchg
pop
cwtl
add
je
xchg
sahf
xlat
pop
xchg
jne
xchg
scas
aam
mov
hlt
pop
sbb
aam
pop
pop
pushf
lret
aas
cli
insl
mov
aam
jae
inc
cmp
lds
int3
pop
pushf
cs
mov
movsl
add
jb
mov
test
pop
sub
jecxz
and
push
stos
and
pop
adc
mov
lahf
mov
mov
add
int
xchg
cwtl
outsl
lcall
out
outsb
cmpsb
rcrb
cmpsb
loope
mov
les
xor
js
pop
sahf
imul
cwtl
insl
scas
loope
shll
not
mov
sbb
int3
mov
and
das
shlb
pushf
or
enter
fsubl
mov
cmpsb
rcrl
das
fisubrs
cs
fistpl
sbb
adcb
adc
aam
lahf
out
jo
xor
ffreep
jb
inc
jns
mov
jb
mov
sbb
mov
movsl
in
int3
or
rcl
adcb
push
pop
and
mov
mov
mov
xchg
mov
pop
pop
fisttpl
clc
fisubrs
mov
mov
rorl
jp
mov
xchg
and
sbb
cmp
cs
sti
pop
push
mov
mov
sub
adc
pop
andb
loope
jae
xchg
add
cmp
xchg
inc
lods
fwait
xchg
mov
movsb
shll
out
xor
mov
dec
sub
mov
xchg
jno
jnp
aad
lret
mov
jl
sbb
movsb
mov
push
je
xchg
call
je
movsb
fs
push
icebp
jmp
mov
or
shll
xchg
imull
cwtl
lcall
cltd
outsb
jmp
jne
mov
insb
push
push
ficoml
sbb
adc
xchg
pmuludq
movsb
mov
cmp
push
lcall
jmp
inc
mov
cmp
imul
int
dec
aam
push
sahf
dec
outsb
sarl
mov
sbb
sub
addl
out
int
movsl
loopne
mov
xlat
movb
pop
xor
jbe
xor
sub
pop
loopne
push
mov
mov
xchg
cmc
aad
stos
mov
xchg
ret
jge
mov
xor
insl
inc
or
lret
outsl
push
call
cmp
lods
add
and
addr16
inc
cmp
and
nop
mov
stc
cmp
lret
hlt
hlt
pop
mov
sbb
daa
test
cmp
sbb
insl
dec
mov
add
aad
mov
mov
add
pop
xor
int3
mov
lods
or
mov
adc
cld
dec
or
mov
xchg
inc
cwtl
icebp
inc
out
add
lret
adc
inc
jl
out
scas
stos
aam
test
jo
mov
or
push
call
mov
push
xchg
frstor
mov
stos
push
shlb
mov
pop
push
inc
cmp
push
aam
loopne
and
sbb
repnz
sub
pop
and
cli
cwtl
ljmp
shl
lret
call
sbb
bnd
mov
ret
lcall
nop
cwtl
test
and
loop
mov
js
cltd
xor
cmp
xchg
into
inc
leave
xchg
push
fildll
insl
jns
xchg
mov
call
sub
jnp
inc
push
dec
popa
xchg
enter
inc
js
cltd
flds
fdiv
cmpsb
insb
mov
lock
push
xchg
movsl
call
mov
xchg
sar
xchg
ret
pusha
call
pusha
or
test
test
je
out
andb
pushf
add
adc
cmpsb
xor
dec
lock
add
mov
roll
cs
jmp
es
xchg
lret
scas
outsb
insb
mov
mov
arpl
push
jp
int
pop
aam
ljmp
jne
mov
jg
xor
push
stos
dec
inc
push
inc
idivl
cmpsl
mov
call
mov
aad
or
mov
add
mov
mov
add
xor
int3
add
or
lods
and
ds
imul
pop
mov
cld
shlb
mov
push
rcr
into
stos
fwait
mov
and
scas
movsb
test
into
cwtl
enter
jecxz
lret
pushf
pop
jmp
movsb
loope
ret
mov
mov
or
fdivrs
enter
inc
clc
nop
cmp
and
and
adc
arpl
push
mov
adc
mov
mov
xor
pop
push
insl
stos
push
xlat
mov
xlat
notb
add
mov
sahf
push
inc
mov
fsubrl
ds
mov
andb
jge
ds
sub
imul
imul
cmpsl
iret
sahf
or
ljmp
push
sahf
cld
cmpsb
leave
jge
jb
or
fwait
loopne
iret
sbb
cmp
or
or
mov
je
mov
stos
scas
mov
nop
jecxz
xchg
lock
jnp
mov
sbb
jp
popa
out
rcll
rcrb
ja
adc
mov
push
push
mov
ficoms
xchg
push
xor
mov
push
cmp
pop
inc
fwait
lret
pop
sbb
pop
jmp
xchg
enter
ror
aad
push
mov
lcall
repnz
add
lcall
es
or
sub
ljmp
andb
mov
jmp
dec
dec
rcr
mov
out
add
fwait
and
lret
clc
and
and
mov
sbb
add
andb
arpl
sahf
mov
jnp
int
push
dec
out
repnz
mov
add
cmp
xorb
sahf
ja
fs
fwait
cmp
shrb
jno
mov
mov
mov
outsb
xor
pop
outsb
adc
and
lret
das
ret
int3
add
mov
mov
addr16
jnp
movsb
jae
pop
jae
adc
or
test
or
xchg
aaa
insl
cmp
rclb
add
subl
adcb
cmp
movsl
sbb
inc
divl
add
hlt
dec
jp
push
jbe
sub
aam
dec
sbb
arpl
imull
xchg
pop
push
insb
popf
and
rolb
out
in
js
pop
outsb
push
rclb
es
ret
xchg
fsubs
out
outsb
ljmp
into
push
mov
sub
sbb
mov
push
cvtps2pd
sarb
jl
imul
test
aaa
repz
movsl
sub
xchg
push
aad
inc
or
sahf
popf
enter
and
lret
adc
adc
xchg
pop
scas
mov
nop
dec
push
into
push
mov
outsb
xchg
cmpsb
mov
stos
adc
inc
sarb
pop
jecxz
divb
scas
adc
dec
and
jno
mov
hlt
iret
jl
loopne
mov
jecxz
pop
xchg
mov
xchg
sbb
jnp
pop
lcall
mov
adcb
mov
inc
push
pop
push
mov
fisubrs
xchg
cmc
mov
pop
lods
sahf
lea
xlat
cmpsl
adc
inc
icebp
jmp
mov
lock
mov
sub
shlb
testb
repz
mov
ljmp
push
in
repz
jne
adc
aaa
fcoms
int3
pop
inc
mov
mov
push
push
adc
movsb
jne
outsb
rcrl
fwait
rolb
mov
mov
cmp
std
aam
sbb
adc
fidivs
pop
dec
mov
dec
xlat
sahf
cmp
fidivl
or
outsl
out
jmp
mov
add
mov
adc
stos
mov
inc
or
dec
outsb
mov
mov
or
cld
movsb
push
jl
out
insb
ja
jmp
int
mov
mov
insl
cmpsb
inc
xchg
adc
mov
fldenv
xlat
push
xchg
xor
inc
pop
xor
dec
popf
mov
mov
nop
dec
mov
mov
stos
dec
mov
mov
mov
dec
js
clc
sahf
mov
lock
sub
in
xchg
ficompl
flds
cltd
pushf
pop
arpl
mov
pushf
repz
aas
pusha
int3
push
fdivs
ret
xchg
loopne
pop
add
xor
jae
mov
mov
dec
mov
inc
test
push
imul
hlt
cmp
sbb
inc
xlat
hlt
pop
xchg
sbb
adc
mov
inc
pop
push
cmp
lret
push
cwtl
fwait
xchg
mov
sahf
jns
outsb
insl
inc
xchg
mov
mov
xor
xchg
sbb
ficompl
hlt
xchg
lret
ja
fwait
sbb
sub
and
pop
jno
lods
je
ficompl
cmpsl
fdivr
cs
inc
scas
sarl
jae
mov
test
mov
cs
adc
testb
xchg
movd
jp
loopne
xchg
cs
jge
push
test
or
mov
pop
adc
scas
adc
lea
cmp
imul
or
ljmp
sbb
push
push
cmpsl
xchg
daa
jnp
gs
push
enter
jg
jl
adc
andb
andb
mov
test
inc
push
mov
jnp
pop
xlat
fisubs
test
xchg
into
mov
xor
add
xchg
xchg
subb
fs
sub
xchg
cmpsb
leave
xchg
inc
mov
xorl
inc
add
fidivs
loope
pop
shlb
sub
ljmp
mov
and
xchg
or
sbb
mov
sbb
inc
call
sbb
lea
pop
mov
loopne
xor
adc
mov
out
in
ss
cmp
mov
fisubs
sub
imul
stos
mov
aam
lret
lds
jp
imul
outsl
mov
and
sti
lahf
inc
xor
jb
jb
or
cmc
mov
mov
add
push
faddp
push
dec
sahf
dec
popa
or
mov
pusha
inc
mov
les
fimuls
ficoml
test
jle
adc
shr
imul
into
push
test
inc
xor
test
into
xchg
jae
mov
push
push
insl
cmpsl
test
dec
mov
movsb
push
lods
ds
popa
sbb
enter
icebp
sbb
lea
orb
pop
bound
loope
fidivs
and
xchg
iret
fldt
into
imulb
sub
or
jae
arpl
and
rorb
xor
lret
test
mov
scas
fmuls
fcmovbe
mov
imul
mov
or
adc
sti
push
mov
add
into
jb
mov
and
mov
sub
lret
test
mov
mov
add
pop
adc
dec
into
movsb
push
sub
cmc
cmp
cli
dec
mov
pop
mov
or
ficompl
in
sti
pop
jno
xor
xchg
fcom
cmp
mov
jo
mov
jno
inc
pop
popa
ficoml
xchg
cmp
xchg
mov
jne
add
loop
mov
xchg
adc
xor
repz
aaa
mov
or
fwait
pusha
sbb
lea
cmpsl
das
or
and
sbb
dec
nop
sahf
arpl
arpl
push
mov
call
xchg
xchg
loop
pop
mov
xchg
int
dec
cmp
mov
and
mov
roll
mov
and
xor
les
inc
ja
jnp
outsl
dec
aad
xchg
jbe
mov
mov
mov
das
es
addr16
iret
out
cs
pop
test
lods
add
pop
adc
cmp
lcall
pop
mov
adc
rcrl
xchg
xlat
loopne
cmpsb
fstl
jno
rcr
lret
clc
outsb
jnp
rol
dec
jge
add
test
lcall
ret
stos
lcall
and
push
mov
cs
fisttpl
xor
aad
test
xchg
lds
adc
inc
mov
int3
mov
iret
mov
ds
jmp
int3
mov
iret
mov
stos
inc
mov
push
sbb
adc
mov
cmp
mov
xchg
sahf
xor
loopne
imul
sbb
in
inc
or
leave
movsb
rorl
fsubr
mov
mov
scas
mov
push
xchg
movsb
jns
pop
jecxz
clc
imul
jns
jg
jp
xchg
aam
enter
jb
jl
jae
push
mov
sarb
mov
inc
aaa
mov
sar
cltd
lock
pop
push
xchg
pop
push
push
push
sbb
jge
pushf
and
inc
leave
loopne
push
and
jecxz
ljmp
inc
mul
add
out
ret
fs
cmpsb
je
test
xchg
ret
stos
mov
pop
icebp
imul
jne
dec
mov
fwait
sahf
lahf
jne
cltd
pop
div
enter
jb
out
in
sbb
push
cld
jl
sbb
int3
sahf
lret
outsb
jbe
ja
dec
inc
cwtl
xor
fildl
sti
push
into
mov
pop
scas
push
or
cltd
fwait
movb
sti
mov
pushf
enter
repnz
lret
xchg
repz
ror
and
push
enter
lret
insl
mov
adc
mov
call
lahf
jle
xor
out
dec
into
jb
adc
gs
cltd
and
pushf
or
jge
cltd
in
adc
xchg
sbb
jecxz
fwait
inc
test
push
in
xchg
inc
gs
sbb
mov
lret
test
or
cmpsb
out
in
push
cmpsl
mov
enter
sub
rcll
inc
push
xchg
out
imul
rcrl
and
aam
inc
arpl
clc
push
push
lds
inc
push
in
dec
scas
sarb
mov
fsubrl
adc
mov
ret
dec
adcl
dec
int3
mov
imul
sbb
fs
mov
int
sbb
mov
mov
adc
and
xor
movsb
movsb
bound
lcall
xor
add
movsb
repnz
cwtl
and
adc
cmp
add
loop
rclb
lahf
subb
sbb
jmp
mov
andb
outsb
mov
or
pop
xchg
dec
dec
push
or
xchg
jnp
or
sbb
mov
sub
dec
cli
push
sbb
or
push
push
xchg
cmp
xchg
pop
in
xchg
aam
and
xchg
xchg
cmp
repz
test
mov
pop
jge
jae
xor
mov
xchg
xchg
clc
add
std
addr16
fsubrl
icebp
repz
mov
mov
xchg
mov
mov
and
push
lcall
js
or
mov
addb
mov
dec
notb
incb
pop
mov
ss
cld
push
jae
out
jne
xchg
mov
divb
jo
imul
sbb
mov
sub
lcall
inc
mov
mov
ret
inc
mov
or
or
push
and
push
cwtl
add
shlb
sbb
push
adc
cwtl
subb
mov
call
or
sbb
ss
mov
pusha
push
dec
cmpsb
inc
xor
clc
mov
dec
jge
lea
push
jge
lea
inc
push
dec
mov
dec
out
mov
xor
xor
push
jnp
pop
sbb
add
ss
mov
adc
xchg
xchg
or
imul
leavew
xchg
out
cwtl
sbb
ss
lea
lods
mov
dec
lahf
inc
mov
iret
lea
dec
enter
and
adc
push
aam
cli
adc
mov
rcrb
xlat
inc
cmp
in
mov
mov
rorb
nop
movsb
push
sti
cwtl
int3
inc
addb
test
mov
sub
jno
jl
ja
dec
inc
pusha
lea
out
add
aam
adc
test
sbb
imul
inc
push
fiadds
sub
adc
fistpll
cwtl
mov
sbb
sahf
into
std
in
aad
insl
sti
push
arpl
mov
adc
mov
push
movsb
cwtl
add
inc
es
jo
mov
mov
mov
into
mov
xchg
test
imul
mov
jne
stc
mov
sub
push
jle
inc
or
mov
push
out
push
sahf
pop
pop
aam
ss
rorl
xlat
jae
loop
hlt
lods
lods
jno
adc
movsb
pop
lea
jmp
out
or
and
jnp
fs
and
mov
icebp
xchg
enter
jecxz
xor
loopne
jecxz
repz
dec
fimuls
js
mov
xchg
nop
nop
jecxz
iret
sbb
lea
pop
push
fsubrs
test
loopne
scas
or
sti
call
jns
jns
cmpsb
push
cmp
mov
int3
pushf
mov
shll
cltd
mov
ss
clc
pushf
or
jg
leave
push
stos
cmpsb
xchg
orb
sub
mov
xchg
imul
out
popf
movsb
mov
mov
mov
jbe
pusha
fwait
add
into
pusha
jb
sti
and
cmp
and
inc
and
or
lea
cmp
sub
sbb
cwtl
jge
insl
sub
sahf
xchg
sbb
cltd
pop
int
cmp
insb
mov
and
test
lods
or
mov
into
lea
pop
jecxz
mov
aam
fs
mov
add
and
hlt
adc
xlat
inc
aam
bound
sarb
fs
jae
push
out
sub
xlat
xor
mov
mov
or
cmpb
mov
addr16
mov
inc
out
xorl
add
push
cwtl
mov
lret
outsb
pop
dec
rolb
push
ret
or
in
psubq
push
or
mov
hlt
outsl
sub
cmpsb
lods
mov
mov
cmp
mov
gs
inc
inc
pusha
sti
insb
test
pop
and
and
mov
xlat
mov
ret
push
push
mov
xor
fcomp
inc
int
mov
lock
test
sarb
pop
dec
sub
or
movsl
repz
dec
pop
lea
sahf
iret
loopne
aam
or
fs
iret
outsb
stos
cmc
shrl
sahf
leave
in
lret
sub
imul
pop
aad
ds
sub
jl
fdivs
pop
imul
jecxz
jge
add
popf
sbb
mov
jp
xchg
out
mov
les
outsb
jns
enter
lods
jl
pusha
int
cmpsb
dec
sub
mov
imul
jmp
mov
jmp
inc
jbe
neg
fstl
mov
add
mov
movsb
lods
and
scas
mov
dec
cmc
jecxz
add
gs
movl
adc
sub
adc
mov
mov
aas
test
lahf
xor
iret
out
fimuls
fdivrs
jbe
loop
lret
fucom
je
aad
inc
mov
icebp
push
pop
mov
mov
lcall
cli
daa
inc
and
ficoml
xchg
or
xchg
lock
mov
lcall
scas
xchg
pushf
xor
xchg
xor
inc
mov
cmp
daa
mov
into
dec
fimull
xchg
xchg
cwtl
lcall
or
mov
push
jp
xchg
sahf
bound
addl
pop
jp
xchg
inc
mov
inc
push
rcrb
cmp
jge
insb
cmpsb
aaa
pushf
stos
ss
sbb
outsb
ret
pop
mov
xchg
movsb
shrb
push
cmpsb
mov
lea
mov
mov
sbb
mov
in
mov
push
jle
xchg
ljmp
mov
sub
inc
jle
mov
ror
xchg
pop
jg
inc
jo
sub
stos
push
loope
dec
mov
out
pusha
ljmp
sub
out
dec
dec
loopne
inc
push
xor
pop
aas
aas
lcall
bound
cs
mov
pcmpeqw
fwait
add
mov
mov
cmpsl
jge
mov
fnstcw
inc
outsl
iret
enter
idivl
ja
jo
fsubrp
scas
mov
test
mov
cltd
xor
lret
xchg
icebp
or
adc
mov
or
mov
mov
pop
add
cs
test
inc
pop
fmull
mov
int3
dec
mov
pop
lret
inc
lcall
mov
outsl
lcall
enter
and
lock
or
add
fiadds
adc
pusha
push
mov
mov
or
inc
mov
mov
outsl
out
mov
outsl
insl
mov
into
mov
xor
nop
rcrl
mov
popf
xor
sub
fcmove
xor
in
fiadds
mov
or
jbe
pop
mov
lods
inc
shlb
loop
lea
call
xor
repnz
int3
dec
test
pop
xchg
rcll
lea
rcll
mov
pusha
mov
jno
pop
stc
pop
fstpl
jge
jle
outsb
pop
pushf
inc
jmp
jns
push
xchg
es
lds
mov
jnp
sbb
xor
sbb
fsubp
sbb
jle
insl
cmpsb
xchg
mov
cmp
inc
shlb
fisubs
and
or
lods
pushf
sahf
aaa
xorl
sub
xchg
fcmovnbe
mov
dec
movl
or
xchg
mov
adc
imul
jne
push
cmpsb
pop
jb
add
and
sub
jnp
mov
js
xchg
fnsave
testb
test
xchg
movsb
or
xchg
pusha
loope
push
jo
lahf
fdivrs
pop
xchg
and
enter
stos
push
repz
sbb
push
repnz
cmp
xchg
adc
jmp
or
adc
push
add
mov
adc
sbb
outsb
push
push
push
addr16
repnz
into
adc
dec
jp
jb
dec
int
popf
outsb
sbb
mov
inc
imul
movsl
dec
sti
pop
inc
imul
cmp
imul
movsb
jg
movsb
lock
les
inc
sahf
mov
sahf
adc
cmp
rolb
push
fsubl
div
mov
hlt
sbb
mov
jecxz,pt
sahf
out
cmpsl
pop
inc
or
cmp
arpl
in
cwtl
sbb
cmp
in
aas
push
lret
lcall
adc
sbb
in
add
cmp
es
sahf
movsb
mov
xchg
cmpl
outsb
add
cwtl
cmp
dec
icebp
jmp
adc
mov
gs
insb
mov
int3
pushf
push
add
mov
cmp
lods
mov
mov
jb
into
into
xchg
jbe
mov
cmpsl
xchg
int3
mov
pop
xchg
mov
xor
inc
lret
sbb
mov
cwtl
mov
iret
outsb
movsb
xchg
xor
add
aaa
jle
sarb
sar
jne
pushf
mov
inc
aam
cmc
sbb
inc
scas
xchg
or
mov
mov
xchg
jmp
repz
jg
mov
decl
pop
mov
fnsave
inc
rclb
jnp
push
rorb
fistpl
sahf
cmp
test
sub
lcall
push
xor
cmp
orb
push
xchg
cmp
aas
std
out
jle
sahf
inc
pushf
std
scas
jb
fwait
aam
fistpl
mov
ret
cmp
cmp
mov
loop
cmp
add
aam
dec
push
xchg
mov
jecxz
add
outsb
jbe
xchg
push
pop
xchg
pop
jecxz
sub
int3
xor
sub
vcmpss
pop
scas
jae
jbe
repnz
enter
pop
je
stos
stc
cmp
xchg
lahf
dec
lods
inc
addb
nop
mov
xor
adc
push
fiaddl
stos
insb
add
les
cmp
mov
mov
popf
imul
cltd
add
mov
scas
shlb
inc
mov
or
mov
push
push
mov
mov
sbb
push
shll
jmp
nop
dec
mov
call
jl
insl
mov
fst
push
push
push
out
push
out
sbb
addb
fcomi
push
xor
sbb
ret
jb
sbb
pop
jno
mov
iret
faddp
pop
xchg
out
arpl
ficoms
ds
jb
and
sbb
loope
cltd
xchg
adc
nop
push
mov
in
cwtl
push
fcom
ret
cmp
lcall
xlat
dec
imul
or
fcompl
mov
and
and
and
push
loopne
cmpsb
push
sbb
pop
orb
push
jecxz
enter
mov
test
inc
push
adc
rcrb
pusha
xchg
push
lods
xor
addr16
push
mov
dec
fcomps
xor
sub
cmpsb
movl
mov
sbb
je
mov
mov
sbb
fsubrs
and
push
xchg
mov
je
repz
cmpsb
push
sbb
scas
ret
push
movsb
xor
js
xlat
jbe
and
xlat
dec
imul
or
jl
dec
cmc
adc
loope
xchg
clc
scas
and
pop
in
in
or
sahf
adc
imul
js
mov
nop
imul
or
cmp
add
scas
aaa
sbb
mov
and
xchg
push
sbb
xor
mov
xchg
push
and
pop
jae
mov
ds
lea
je
xchg
push
in
cwtl
hlt
test
call
dec
or
push
jge
cmpsb
mov
mov
das
shll
scas
fxch
xchg
jnp
imul
xor
ret
pop
adc
or
jg
pushf
or
inc
adc
mov
cmp
and
cmp
mov
jmp
enter
pop
cmp
lds
inc
lcall
imul
cltd
fsubrp
aaa
xchg
xchg
sti
push
test
xchg
mov
stos
cvtpi2ps
mov
xor
ljmp
jns
outsb
ja
mov
cltd
out
stc
inc
mov
jns
test
lcall
das
xchg
dec
test
in
xor
orl
rolb
or
loopne
mov
mov
mov
inc
loopne
jb
xor
int3
andb
lret
xchg
xchg
inc
sarl
xor
scas
lds
dec
push
cmp
jno
jae
jmp
imul
cmp
push
js
shrl
xchg
jp
xor
lcall
inc
fildll
cmp
lods
outsb
jle
cmp
cld
ss
push
addr16
mov
push
push
cld
mov
loopne
pop
mov
sub
mov
xor
enter
outsl
mov
es
aam
xchg
lock
jmp
ret
clc
je
js
addr16
mov
push
stc
fdivr
push
jmp
stc
imulb
int3
into
fwait
push
inc
or
mov
adc
fldenv
and
mov
inc
push
push
xchg
lds
jnp
sub
mov
mov
inc
loope
insl
iret
jns
popa
xchg
jmp
scas
xchg
sbb
mov
cmp
sbb
jae
dec
popa
inc
aam
push
pop
mov
insb
int
xchg
jp
clts
leave
mov
push
fdivrl
lock
out
mov
xor
stos
loope
adc
xor
dec
sbb
lea
ret
lret
and
push
pushf
adc
call
mov
mov
fistps
lock
movb
cli
and
adc
shrb
xchg
stos
js
ret
push
push
push
xchg
mov
push
outsb
jmp
cmpsb
cs
or
inc
scas
stos
xchg
fcmovbe
lret
push
xchg
xchg
into
sub
arpl
ss
test
sahf
mov
movsb
sbb
cwtl
and
int
fcoml
aas
jl
mov
imul
mov
iret
movsb
mov
sub
loopne
push
push
jnp
pop
mov
aaa
sub
cwtl
dec
cmpsb
pushf
mov
jle
pop
sub
xchg
xchg
jecxz
inc
inc
out
pushf
das
lcall
lea
and
adc
xchg
add
or
and
fsubrl
lea
clc
or
xchg
popf
xor
xchg
push
or
lahf
dec
sbb
sbb
inc
cmpsb
push
ljmp
sub
pop
cmpsb
into
dec
push
sbb
pop
adc
cmpsb
mov
in
pop
sub
adc
cmpsb
rcr
and
iret
sbb
cmpsb
pop
and
mov
into
xchg
sub
pop
ret
xchg
sub
cli
cmpsb
ljmp
cwtl
or
stos
js
outsb
fidivrl
jp
cwtl
rclb
push
cmpsl
lcall
aam
jo
jae
cmpsb
mov
inc
cld
ds
addr16
mov
push
or
or
movl
xor
adc
mov
lret
imul
jne
lods
arpl
fnstsw
in
shrb
mov
jbe
out
cwtl
dec
adc
loope
sbb
xchg
add
push
fdivrl
mov
dec
jecxz
pop
loopne
jecxz
sub
mov
mov
les
jb
push
enter
pop
fstps
mov
mov
loop
xchg
mov
or
cmp
lea
push
out
mov
es
repnz
adc
dec
inc
inc
js
mov
inc
dec
push
xchg
cli
sbb
push
adc
sarb
push
lcall
push
inc
imul
hlt
push
pop
inc
xchg
insl
addr16
gs
rcl
add
outsb
shr
jns
xchg
loop
rcrb
mov
cmpsb
mov
cmpsl
sub
test
lret
inc
icebp
adc
jecxz
push
test
mov
fstl
cmpsb
jnp
xorb
jae
xchg
and
ror
outsl
xor
xor
xor
arpl
jp
sbb
lret
dec
scas
xchg
xchg
push
mov
sbb
cltd
adcb
out
xchg
cwtl
add
shrl
fwait
mov
cmp
sahf
pop
adc
mov
aas
aad
mov
js
mov
je
mov
mov
aad
jge
push
adc
mov
xor
sub
mov
outsl
xor
mov
pop
rcrl
pushf
jne
fs
jg
mov
adc
sahf
mov
pusha
mov
scas
dec
or
mov
enter
dec
cwtl
mov
aaa
xchg
xor
inc
cwtl
mov
push
int3
jb
dec
cmp
cltd
adc
leave
jbe
jge
fcomps
push
or
fwait
out
lahf
push
sub
push
mulb
mov
adc
ljmp
cmp
sub
mov
ret
adc
or
sbb
add
sarb
popf
push
scas
lcall
cmp
sbb
dec
xchg
adc
cld
cmp
addr16
dec
mov
and
push
push
mov
scas
loopne
fsubl
loope
cwtl
xchg
mov
cli
clc
mov
adc
sarb
adc
scas
sub
push
ror
mov
lret
mov
add
lcall
push
push
xor
das
jae
push
shrb
mov
cmpsl
out
sbb
xchg
cmpsb
jae
pop
fimuls
bound
push
cmpsl
and
mov
popf
hlt
ljmp
jb
popf
arpl
pop
imulb
jg
inc
inc
inc
push
xchg
movsl
push
sti
mov
mov
mov
jp
negb
es
lahf
aad
or
pop
jae
mov
outsl
sbb
xor
push
adc
movsl
xchg
jmp
and
std
outsl
movsb
mul
dec
jl
mov
add
mov
lock
mov
test
outsl
push
dec
insl
in
js
sti
push
sbb
adc
sbb
pop
pop
shrb
lahf
or
pop
adc
out
push
push
mov
in
ret
dec
mov
lcall
cmpsb
rclb
fisubs
inc
bound
into
mov
aad
cltd
xor
in
cmp
xchg
xor
frstor
mov
lret
mov
sbb
es
xchg
push
dec
adc
cwtl
ljmp
push
adc
lcall
xchg
ljmp
roll
hlt
lcall
sub
jecxz
mov
push
stos
bound
clc
lods
test
mov
mov
mov
mov
neg
xchg
sub
fsub
cmp
in
mov
test
bound
es
jbe
xor
cmpsb
jge
test
or
fmull
add
je
or
pop
sahf
inc
xor
mov
mov
adc
mov
mov
xor
mov
out
lahf
push
fcoml
movsb
adc
outsl
cmpsb
rcr
outsb
adc
sbbl
push
jb
iret
subb
jle
ficoml
sbb
test
shlb
push
lret
jb
xchg
lds
inc
clc
fldt
rorl
imul
pusha
mov
jno
movsb
imull
jmp
cmpsb
shrl
xor
out
lret
adc
lods
dec
mov
mov
sub
cld
mov
pop
pop
sbb
std
pop
cwtl
insl
ret
cs
push
inc
jns
ficomps
cld
push
lock
dec
imul
xchg
push
adc
push
into
hlt
jbe
sahf
inc
inc
sub
incb
loop
mov
mov
adc
sub
sub
vpshufhw
jge
dec
repnz
test
cmpsl
sub
testb
in
loopne
mov
out
popf
and
imul
fimull
add
jo
loop
jp
out
movsl
cltd
pop
lcall
mov
lcall
lahf
mov
and
imul
icebp
sub
xchg
xchg
inc
cmp
xchg
cmp
sbb
or
fcos
inc
mov
and
jae
mov
mov
neg
or
xchg
and
mov
jge
dec
daa
mov
cwtl
sbb
sub
push
shrb
mov
inc
scas
sbb
dec
sti
mov
jb
pop
inc
mov
fcomp
mov
cmp
shll
sbb
mov
adcb
dec
xlat
lcall
sub
repnz
and
sahf
or
aam
mov
xchg
cwtl
inc
test
inc
xchg
push
icebp
push
sbb
out
push
adc
jecxz
cli
jecxz
push
jb
jb
cmp
jb
outsl
jb
sbb
push
jb
dec
jb
stc
add
shlw
or
cmp
push
enter
fs
subl
push
xor
sub
es
inc
xchg
adc
out
es
xlat
call
in
jae
cmpsl
je
pop
rolb
aad
lcall
pop
int
xchg
aam
and
sbb
movsb
insl
mov
jb
imul
push
imul
test
mov
in
mov
lea
outsb
outsl
pop
in
add
sub
ficoml
push
mov
inc
sub
inc
std
inc
xchg
fucomp
push
iret
mov
add
loope
cmp
jecxz
neg
push
aaa
outsl
jns
push
cmp
shlb
popf
lahf
push
xor
and
push
into
call
pop
sub
imull
cmp
outsb
push
jmp
cmp
mov
mov
mov
nop
mov
imul
xor
jmp
xchg
push
iret
rolb
mov
mov
inc
cmp
push
divl
loopne
fdivl
stc
mov
popf
nop
inc
dec
test
enter
inc
es
pushf
mov
xchg
sahf
out
xchg
cwtl
mov
aad
xor
xor
sbb
fisubl
incl
test
jbe
clc
mov
mov
mov
xchg
mov
lret
pushf
xor
lret
mov
ds
outsb
sub
lcall
into
mov
mov
lcall
jle
sar
adc
fldenv
out
mov
shr
int3
rcrb
push
add
jnp
inc
cmp
out
test
and
shrb
into
scas
ror
cltd
jle
push
sub
lcall
addr16
js
fs
unpcklps
push
jo
xlat
fildll
rorb
mov
ljmp
jo
stos
inc
add
jecxz
sub
push
adc
int
stos
push
andl
dec
out
pop
and
xor
shrl
popf
pop
cs
mov
cwtl
mov
pushf
jne
andb
into
jbe
ljmp
jmp
sahf
mov
int
inc
cltd
xchg
cwtl
xchg
jns
cwtl
pushf
lahf
push
in
inc
push
inc
inc
repz
sahf
and
cld
es
or
scas
fdivr
fcom
orb
scas
mov
ror
xchg
cltd
lea
inc
push
divb
jecxz
js
ficomps
xchg
in
out
lea
outsb
push
push
sahf
push
rorb
adc
mov
jnp
sub
xchg
mov
jnp
inc
jbe
mov
cwtl
mov
cmp
ja
jp
inc
out
ret
test
and
push
jo
js
inc
outsb
xlat
data16
mov
push
out
outsb
aaa
test
lret
lods
push
test
test
pop
xlat
movsl
pop
xor
aas
stc
xlat
push
push
pop
or
push
xor
adc
subb
test
cmp
mov
add
outsb
push
jecxz
dec
mov
insb
mov
mov
dec
xor
sbb
jecxz
mov
notl
sbb
ret
mov
push
pop
pop
pusha
loopne
outsb
iret
ficomps
or
repnz
pop
loop
jbe
xchg
in
lock
jne
fstl
lock
pusha
in
shrb
repnz
leave
int3
out
ret
add
pop
sahf
repnz
mov
enter
cmp
js
jbe
push
xchg
and
mov
lcall
scas
lds
lahf
sbb
and
dec
cld
jbe
cmc
fld
cs
shl
test
cs
stc
sbb
in
and
xchg
jecxz
outsb
jnp
and
ss
fwait
sbb
jg
and
fbld
cld
push
stos
stos
cli
xchg
outsl
push
popa
lea
pop
nop
pusha
movsb
push
repz
sahf
pushf
xchg
in
jb
or
lea
orb
fwait
outsl
subb
xchg
mov
push
push
rorb
mov
lahf
push
nop
movsb
outsb
fmull
shll
pop
lret
je
je
push
sbb
push
inc
int3
jle
mov
js
mov
mov
rclb
jno
xchg
mov
xor
loope
adc
ljmp
and
mov
mov
mov
loope
jnp
mov
adc
push
xor
jb
mov
dec
cs
in
neg
mov
push
cld
and
dec
pop
subb
mov
lahf
mov
mov
enter
in
cmc
cwtl
xchg
jle
jge
jns
loop
mov
dec
push
cwtl
push
aad
mov
in
jno
daa
mov
add
sub
mov
inc
add
sbb
lds
jp
scas
mov
outsl
mov
scas
out
rorb
sbb
and
test
movsb
mov
pop
es
mov
nop
stos
adc
stos
icebp
ret
add
int
dec
jne
std
xor
aad
cs
shr
sbb
or
adcb
arpl
sbb
add
dec
inc
data16
dec
adc
cwtl
dec
pop
stos
dec
mov
mov
lea
scas
fdivrl
scas
pop
add
pop
jle
xor
jne
fs
inc
ljmp
sbb
movsb
sub
jne
and
icebp
mov
mov
push
xor
bound
cltd
mov
enter
ficoms
mov
and
mov
mov
das
push
dec
inc
pop
jno
xchg
and
dec
xchg
pop
sarl
sar
mov
into
clc
lcall
pusha
fmul
stos
fsubrs
cmpsb
jmp
je
stos
adc
divb
or
lea
inc
gs
jae
outsl
jl
mov
jo
xor
add
add
dec
in
and
inc
inc
mov
push
shlb
insb
or
nop
jae
jnp
outsl
repz
into
jge
adc
push
jb
xchg
fwait
aam
inc
xor
divl
dec
sbb
imul
enter
pop
lcall
shlb
fnstenv
sub
in
xchg
into
scas
sbb
push
mov
jns
pop
mov
imul
xor
jbe
push
mov
sbb
rcrb
jg
lea
testl
mov
sbb
cmp
test
dec
adc
scas
ja
xor
les
test
cwtl
push
js
sbb
int
call
test
test
mov
ror
push
jne
xchg
mov
rol
inc
cli
add
cmpsb
in
inc
inc
sbb
bound
and
push
mov
stos
js
ret
mov
in
sbb
sbb
mov
jbe
mov
and
cmpsb
mov
idivl
mov
add
scas
xchg
mov
nop
xchg
or
jno
mov
mov
out
bound
and
enter
popf
mov
mov
jo
cmp
jmp
and
inc
mov
jg
cs
jne
fwait
push
aas
or
lcall
ss
orl
int3
arpl
outsl
push
mov
outsl
rorb
mov
ret
outsl
or
movsb
mov
ljmp
in
addr16
int3
repnz
mov
aaa
xchg
cmp
and
aam
dec
js
aad
pop
push
outsl
or
leave
adc
dec
js
scas
push
jle
cmp
je
cmp
rcr
scas
jo
inc
mov
test
xchg
pop
lds
sti
mov
or
int
cmpsb
cs
je
xchg
lea
adc
mov
sbb
cmc
jae
iret
cs
jnp
push
mov
mov
pop
push
dec
or
lret
adc
inc
loop
inc
idivb
fwait
mov
lahf
aas
dec
js
dec
push
imul
dec
xchg
pop
movlps
or
lahf
lods
mov
jb
scas
mov
adc
fwait
outsl
jns
sahf
mov
push
in
imull
cwtl
nop
xchg
pop
adc
and
mov
xchg
cmpsl
xchg
push
js
mov
movsb
jnp
jmp
stc
or
test
adc
add
mov
mov
cmp
es
notb
lds
bound
out
andl
stos
aaa
xchg
adc
xchg
inc
pop
repz
outsb
lcall
mov
dec
ret
repnz
pushf
xchg
stos
mov
sub
lock
lret
divl
push
cmpsl
fisttpl
dec
jae
cmp
pop
cli
scas
sub
adc
frstor
push
sbb
lret
push
jae
pop
jne
add
push
inc
js
fisubl
dec
lcall
or
lret
out
dec
jle
stc
mov
jno
sub
sbb
cltd
add
mov
rcrl
mov
shlb
stos
xchg
lock
cltd
or
rolb
jnp
sbb
push
lahf
outsl
rorl
or
add
jle
lret
ret
in
int3
lcall
mov
jecxz
outsl
cwtl
inc
pop
sbb
lock
outsb
mov
sub
mov
rcll
cmp
xor
shr
lods
mull
imul
outsb
cmp
push
cmp
add
sub
out
sub
sbb
cs
dec
loopne
add
in
lea
cmc
cmc
stos
cwtl
andb
adc
nop
hlt
cli
xlat
in
clc
jno
pushf
movsl
pop
push
pop
jbe
clc
mov
pushf
cmp
aaa
pop
push
rorl
mov
lret
sbb
xchg
dec
pusha
std
inc
cwtl
add
or
ret
lea
fisubrl
fstpt
mov
scas
pop
jp
mulb
insb
leave
pop
cltd
jbe
mov
jle
es
jmp
loope
cmpl
ss
shlb
shl
insb
out
xchg
clc
mov
xchg
lret
pop
pop
xlat
neg
test
pop
movsb
adc
sub
jle
push
lods
leave
pop
loopne
rcrb
adc
or
xchg
lds
xchg
std
fimuls
pop
popa
ficompl
pop
lock
push
push
mov
xor
outsb
jnp
sahf
pop
xor
xor
test
sahf
leave
lret
jg
call
dec
mov
out
jno
xchg
xchg
lcall
int3
and
int
xor
cltd
ret
into
dec
inc
pushf
lcall
into
adc
xor
cmp
in
sahf
cmp
movsl
sub
push
jg
addr16
xchg
in
jg
jl
aam
xor
cltd
sbb
xchg
rcrb
xchg
and
push
or
aaa
ret
push
or
into
pop
shrb
xchg
or
into
push
cmp
sahf
lcall
inc
push
sbb
inc
or
sahf
mov
and
adc
sahf
sub
pop
aas
or
sahf
push
into
loop
scas
rcl
ret
mov
or
sub
sarb
lret
out
ss
lea
int
imul
sub
and
or
dec
dec
inc
jb
imul
ja
divl
outsl
or
push
or
sahf
jae
out
jmp
xchg
mov
jae
cmpsb
sbb
lahf
dec
and
fisttps
in
and
inc
mov
mov
or
jnp
adc
pop
fidivrl
test
ja
cmc
pop
mov
jl
lahf
mov
jp
ss
push
sub
inc
xchg
push
enter
jmp
into
ret
sub
push
call
push
out
xor
stc
cld
cmpsl
xchg
roll
and
aas
inc
scas
jp
mov
jle
lods
filds
xor
jb
pop
je
data16
push
bound
enter
scas
sub
sub
in
movsl
mov
aam
mov
andb
jo
call
daa
sti
lret
sahf
sub
js
jb
mov
out
cs
outsb
aam
xchg
xchg
lcall
pushf
and
adc
imul
enter
mov
lahf
loop
fstl
loopne
mov
and
scas
clc
push
fs
cmp
outsb
fidivrs
jb
int3
stos
clc
shlb
sub
iret
mov
stos
or
xchg
rclb
clc
pop
pop
nop
mov
cs
jo
es
pusha
cmpb
sahf
pop
insl
xor
jp
fwait
enter
xlat
fwait
mov
sahf
shll
pop
lock
loope
ds
or
inc
lahf
fidivl
sub
xor
repz
push
int3
mov
jp
mov
fldt
lahf
jne
add
imul
lcall
sar
lahf
mov
mov
sub
popf
lahf
bound
jmp
fstpt
mov
out
scas
push
lock
push
icebp
push
dec
insl
ret
push
sub
push
xchg
pop
pop
xor
push
in
cli
inc
mov
xor
add
xchg
xchg
mov
cmpb
icebp
fidivrs
ret
ljmp
loope
call
push
xor
stos
mov
in
xchg
fidivl
das
jne
ret
add
aaa
mov
mov
cmpsb
pop
add
push
ret
mov
cmpsl
cltd
add
rcrl
ds
and
stos
movswl
enter
push
lds
mov
ficoms
cmp
mov
enter
enter
js
sbb
gs
aam
xchg
ret
in
mov
movd
movl
mov
xchg
jle
out
icebp
adcb
mov
insb
icebp
mov
sub
sbb
mov
std
sub
je
imul
mov
or
lds
jbe
daa
inc
nop
fisubs
scas
scas
jle
xor
jns
nop
jp
inc
lahf
je
mov
popf
cmpsb
bound
jmp
imul
cltd
inc
outsl
push
sbb
mov
jle
loopne
test
stc
cltd
xor
cmpsb
jns
mov
pushf
cmpsl
jo
pop
das
add
mov
sbb
fdivl
jae
mov
cmpb
push
xchg
into
jle
dec
sub
mov
mov
movsb
sahf
movsb
int
mov
hlt
mov
xlat
repz
enter
scas
lea
pop
push
jmp
int
je
pop
and
push
movsb
nop
ljmp
and
or
jle
push
aad
outsb
lock
mov
outsb
xchg
icebp
xchg
nop
ja
cwtl
xchg
rcll
pop
popf
cmp
or
cmp
subb
mov
push
rorb
xchg
adc
push
jae
or
cmp
push
gs
scas
add
aaa
stos
mov
fidivl
xor
stos
sub
in
or
cmpsl
out
cmpsl
ljmp
pop
cmpsl
aam
scas
or
ds
cmpb
xchg
ljmp
xor
fistpll
repz
cmp
mov
mov
adc
cs
lods
imul
addr16
leave
jbe
adc
fstpt
addr16
outsb
cmp
mov
dec
jnp
jo
mov
fbstp
ja
fidivrs
and
cltd
mov
stos
ficoms
mov
mov
mov
cmpsb
cmp
nop
rorl
xchg
xchg
rolb
mov
pop
jb
call
aas
cmp
push
mov
scas
pop
xchg
out
ljmp
xlat
hlt
or
mov
int3
xor
mov
sbb
enter
rcr
scas
inc
mov
sar
jb
jne
sbb
adc
xchg
jge
inc
cmpsb
das
sbb
add
xchg
fmull
mov
fimuls
adc
sbb
aad
jl
pop
in
out
lods
adc
mov
push
test
ds
adc
add
out
sbb
ret
imul
ret
jmp
add
pop
pop
fwait
ss
mov
push
xchg
das
xchg
xor
xchg
shr
mov
xor
mov
cwtl
jno
xchg
xor
cmp
mov
adc
gs
and
iret
popf
adc
xchg
fsts
mov
cs
nop
movsb
cmp
cmc
fisubrl
push
lcall
sbb
and
push
inc
andl
mov
xchg
inc
lret
in
mull
jp
neg
mov
add
fimull
nop
xlat
mov
push
push
xchg
mov
insb
ds
sahf
popa
scas
sbb
push
movsb
cwtl
adc
mov
icebp
insb
inc
pop
movsl
jmp
jae
pop
lds
inc
imul
inc
mov
movsl
insl
mov
aas
rcrb
mov
out
ljmp
dec
xor
mov
jecxz
stos
sbb
and
arpl
aas
ss
pop
leave
sub
sar
push
adc
pop
pop
mov
inc
test
xor
jle
lods
push
inc
mov
pop
rcr
adc
insb
xlat
inc
nop
cmp
fsubrs
jp
addl
push
shlb
scas
fidivrs
push
mov
mov
js
sbbl
push
lret
xchg
lcall
lcall
inc
push
xchg
pop
dec
pop
mov
push
sahf
ljmp
sub
mov
jnp
test
lea
in
sub
adc
lock
inc
repz
dec
aas
sub
dec
sub
aas
lahf
sub
dec
fnstcw
dec
bound
nop
cmpsb
pop
dec
ss
and
xchg
or
or
pop
adc
imul
test
insb
xchg
enter
jp
outsb
cmpsb
js
aaa
add
imulb
mov
out
mov
movsb
dec
or
or
ret
sbb
cwtl
or
xchg
pusha
insl
jbe
cmp
xor
loopne
sbb
add
fdiv
pushf
rcrb
ja
xor
mov
loop
cli
mov
enter
outsb
jno
sub
push
pop
mov
mov
add
orb
push
lds
inc
dec
jp
movsb
jmp
mov
inc
push
push
in
mov
loopne
sub
movsb
ret
leave
pop
cmpsb
ret
push
mov
or
std
or
sub
or
mov
test
nop
aam
cmc
scas
push
xchg
push
mov
mov
add
clc
rcrl
mov
pop
aad
rclb
popf
int3
mov
mov
mov
adc
mov
jl
ja
lea
mov
je
cs
jo
jg
cltd
cwtl
xchg
cmpsb
je
inc
repz
lcall
sti
mov
rorb
mov
sub
pop
rcr
callw
mov
mov
and
aam
inc
xorl
dec
loop
xchg
push
movsb
pop
push
mov
pop
cmp
sbb
jmp
outsl
mov
mov
fcoms
push
jmp
mov
xor
fcoml
out
mov
inc
cmp
mov
cmp
mov
je
lret
push
lahf
lock
cwtl
jle
out
outsb
sbb
cmpb
sub
aam
subb
dec
cmp
mov
mov
xor
xor
enter
popl
xchg
test
mov
test
add
or
xchg
jp
add
mov
out
pop
lret
fcompl
pop
pop
jge
rclb
xor
and
loope
jno
add
jp
js
xchg
push
mov
div
call
adc
out
ret
mov
in
jo
xorl
loopne
xchg
cltd
rclb
pop
jle
dec
pop
std
es
or
shrb
movsb
sub
and
adcl
stos
xchg
dec
ds
addr16
mov
fwait
sbb
pop
outsb
movsl
loope
and
in
imul
push
ror
loopne
push
adc
cld
mov
mov
sbb
enter
xchg
pop
add
cltd
push
jae
sbb
inc
jg
scas
adc
sbb
xlat
cmp
adc
stc
je
ret
mov
out
pop
pop
imul
enter
xor
enter
gs
push
pop
insb
imul
xor
xor
loop
mov
outsb
or
mov
lock
jae
popa
add
xor
xchg
sub
inc
pusha
sbb
cmp
sbb
mov
divl
xchg
mov
into
or
xor
lcall
mov
cmp
lret
xor
mov
cmpsl
iret
and
jo
or
loopne
mov
data16
and
into
sbb
mov
imul
cmpsl
fcmovbe
mov
xchg
into
aam
in
xchg
iret
fistl
rcr
adc
lahf
mov
pushf
mov
xor
pushf
xchg
mov
fsubrs
mov
sbb
fistpll
mov
sub
mov
sahf
ror
xchg
xchg
scas
loope
std
pop
fdivrl
adc
cwtl
jnp
pop
sahf
daa
insb
xor
fimuls
xchg
adc
jecxz
loop
rorb
fsubrs
mov
enter
lea
push
insb
xor
inc
rclb
xchg
add
dec
shl
push
outsb
out
addb
ja
pop
cmpsb
popf
jnp
mov
xchg
adc
sub
cmp
pop
pop
and
and
xlat
call
cmpsb
mov
clc
add
cmp
ret
cltd
icebp
xor
push
test
addr16
jae
popf
fdivl
gs
jns
data16
fisubrs
fisubrl
sub
out
sahf
gs
ror
es
nop
lret
test
mov
rorl
sbb
das
pop
push
fidivrs
lea
rcrl
dec
test
sbb
pop
sbb
pop
loopne
sub
icebp
mov
xchg
hlt
adc
xchg
jp
pop
jge
fldcw
mov
jno
mov
inc
test
xor
adc
aad
sub
out
ret
ja
mov
mov
push
cmp
or
mov
push
into
xchg
jne
sahf
ds
adc
scas
loopne
pushf
adcb
aam
sbb
scas
jg
outsb
sub
test
mov
inc
sar
cs
xor
push
pop
sahf
nop
ds
stc
loopne
fsts
jo
stc
sbb
imul
test
int
jns
cmpsb
or
push
lret
and
aaa
pop
imul
cltd
cs
pop
cmpsb
outsl
mov
adc
call
scas
sbb
inc
mov
mov
jno
xor
xor
sub
mov
repz
in
daa
pushf
xor
sub
jbe
ret
ss
cmp
sbb
test
fabs
mov
sbb
cmp
jo
cmp
xchg
orps
jo
ds
push
push
adc
js
outsb
ja
lds
mov
imul
xchg
cmpsl
cmp
mov
enter
enter
cmp
pop
imul
xchg
jne
jmp
ret
cltd
outsb
int
lods
jbe
sub
cs
jne
xor
mov
ret
sbb
jp
into
cmpl
or
jne
movsb
mov
sbb
mov
ds
add
sub
lcall
xchg
push
negb
ss
and
repnz
andb
inc
lahf
jle
pop
out
or
cmpsb
dec
movsl
jo
popf
mov
dec
pop
in
dec
mov
sbb
les
cmp
inc
lret
xor
jle
daa
xchg
mov
fsubs
jle,pt
scas
xchg
stos
orl
fsubrs
sub
xchg
out
or
mov
ljmp
inc
mov
and
test
lcall
popf
into
mov
mov
mov
test
ljmp
push
ljmp
adc
adc
jns
xchg
mov
fsub
dec
in
popa
xor
mov
mov
and
pop
test
add
pusha
mov
out
ret
jmp
add
sbb
inc
ss
mov
and
mov
cs
fwait
inc
sbb
inc
mov
addb
movsl
lcall
hlt
ljmp
xchg
into
xchg
mov
dec
cs
add
es
insl
lcall
xchg
out
test
ja
mov
sbb
jmp
mov
mov
cmpsl
fdivr
cs
testb
jae
mov
mov
loopne
int
jno
mov
mov
test
out
jp
cmp
xchg
loopne
sar
ds
decb
lret
push
push
into
inc
mov
xchg
iret
test
add
add
scas
push
int3
repz
jg
ljmp
faddl
fidivrs
lret
out
mov
cld
push
rolb
jnp
cs
jp
aas
shll
xchg
lea
aas
jge
je
sub
cmp
ds
or
lea
aaa
outsl
outsb
sbb
push
mov
lcall
adc
in
mov
in
xchg
imul
push
mov
stc
jg
push
lds
xchg
inc
xor
xchg
test
adc
cmp
xchg
movsb
add
lea
adc
jns
adc
cmp
pop
lea
ficoms
push
mov
cmp
insl
mov
sub
sub
xchg
arpl
and
mov
ret
inc
xor
jne
push
out
scas
cmpsb
push
lret
stos
xchg
and
and
inc
andb
add
test
sarb
aas
jl
aam
fisttpl
fidivl
jecxz
mov
cmp
sbb
daa
andb
sti
push
lods
adc
fisttpl
sbb
cmp
mov
fwait
mov
xabort
rclb
sbb
add
mov
xchg
and
addr16
loopne
inc
pop
call
ret
mov
inc
loopne
push
jno
push
jl
mov
adc
xchg
outsl
cmp
sub
imul
int3
into
dec
movsb
fimuls
cs
out
push
adc
mov
lcall
inc
popf
out
sub
xchg
sbb
inc
lcall
repnz
pop
les
sbb
cmp
jle
and
test
lahf
sbb
sbb
adc
mov
jle
and
push
xchg
pop
pop
fwait
nop
lea
xchg
outsl
fadd
xlat
imulb
es
imul
xchg
nop
push
clc
loopne
fnsave
out
xchg
lea
decl
imul
xchg
ficomps
xchg
fwait
cmpsb
jmp
inc
pop
inc
mov
sub
mov
dec
jnp
movsb
or
xor
prefetch
mov
add
loopne
hlt
jb
lahf
or
ljmp
sub
in
jg
xchg
andl
ds
popa
aam
adc
mov
test
or
out
enter
pushl
imul
mov
pop
mov
cmp
in
sahf
and
jmp
add
xor
aaa
cltd
nop
lret
or
mov
sahf
pushl
and
outsl
sbb
in
add
mov
nop
jecxz
mov
imul
sub
cmpsb
pop
xchg
and
mov
sarl
gs
jp
loop
sahf
movsb
push
xlat
xchg
mov
inc
sub
pusha
pop
movsl
xchg
test
push
push
std
xlat
xchg
negl
les
jne
xchg
xchg
sub
xchg
pop
and
popa
sub
fidivrs
fiaddl
popa
mov
mov
data16
jl
mov
push
sti
movsb
femms
lods
movsb
fnsave
cmpsb
pushf
cwtl
mov
not
test
inc
sbb
mov
out
add
xchg
aad
mov
sbb
pushf
mov
fiadds
or
mov
adc
iret
dec
mov
rcr
xchg
mov
mov
inc
nop
aas
mov
loopne
cltd
mov
popf
or
xchg
jbe
xlat
hlt
pop
mov
insl
imul
or
lret
pop
or
mov
mov
or
fildll
sbb
popf
shlb
or
leave
lcall
int
lcall
out
roll
jns
lcall
dec
cmp
out
ret
adc
mul
iret
ficomps
push
dec
sbb
cmc
adc
mov
scas
cmp
scas
nop
adc
cltd
sub
xor
repz
pop
add
xchg
mov
mov
push
cmp
cmp
xchg
stos
jae
cmp
lea
lea
push
mov
xchg
popl
imul
mov
cwtl
int
jnp
pop
outsl
push
rcr
mov
adc
mov
ret
out
jnp
int3
cld
adc
cmp
outsl
push
notb
into
dec
cmpsb
sub
stos
cltd
fimuls
sub
jnp,pt
sbb
dec
jbe
into
fmulp
jbe
aad
lcall
jns
sbb
in
sti
imul
xchg
outsb
add
int
pop
fs
sbb
cmpsb
xor
xchg
push
xchg
jge
xchg
sbb
push
in
outsb
cmpsb
notb
scas
js
pop
mov
jg
xchg
or
adc
or
movsb
cld
cmp
push
lods
enter
xchg
sub
dec
mov
push
mov
fisubs
sahf
loope
mov
xchg
call
xchg
stc
xor
sub
xchg
or
cmp
push
pop
mov
fnstsw
stc
rcrb
in
dec
std
dec
mov
adc
sbb
xor
push
push
sbb
push
xor
xchg
cmp
test
fmull
imul
rorb
lods
lahf
data16
jle
add
shrl
push
pushf
push
mov
xchg
cli
pop
into
and
xchg
lea
mov
adc
sub
loop
xchg
in
cmc
sahf
inc
nop
jbe
mov
jne
repz
test
arpl
movsb
push
insl
stos
sub
scas
movsb
dec
push
stos
scas
sbb
cltd
pop
xchg
adc
xchg
mov
sub
mov
jle
mov
and
std
pop
sbb
add
sahf
cmpsb
and
enter
mov
outsl
xchg
lcall
sti
call
push
gs
leave
mov
aam
mov
int
popa
test
jae
insl
out
push
insb
mov
leave
jbe
xchg
repz
mov
inc
xchg
cmp
push
pushf
fstps
repnz
xlat
mov
movsl
out
rorb
mov
loopne
repz
pushf
dec
cmpsb
jnp
push
lcall
jno
mov
aam
cmp
leave
lahf
push
sahf
insl
mov
cmp
xchg
ror
cmp
popa
cmp
cwtl
mov
add
mov
mov
push
xor
popl
or
mov
pop
jp
addl
dec
ds
xor
andb
sub
sub
mul
push
sub
jns
out
push
into
cltd
inc
je
xchg
ja
xor
mov
pop
pop
mov
mov
lcall
dec
sub
ja
mov
int
mov
aam
mov
cltd
cs
adc
and
dec
in
mov
dec
sbb
push
insb
pop
ret
popa
dec
pop
orl
popf
jmp
jle
pop
push
push
les
aas
into
xchg
outsb
cmp
addr16
mov
push
insl
mov
and
outsl
ficomps
insb
pop
repnz
iret
icebp
movsl
mov
xor
cs
addr16
outsb
cmp
out
popf
pop
into
js
out
imull
scas
jecxz
xor
ret
pusha
addr16
outsl
loop
int3
mov
iret
shlb
dec
mov
scas
or
cmp
loope
imul
lret
ss
mov
xchg
flds
test
sub
sahf
adc
aad
xor
sub
push
notl
add
loopne
scas
sub
clc
ficoms
lahf
dec
push
test
cs
ja
out
add
and
or
adc
sbb
loopne
addr16
shlb
outsb
aas
add
cs
dec
bound
mov
das
mov
icebp
cmpsb
push
std
and
leave
fldenv
jbe
movsl
sub
mov
and
mov
cmpsb
cwtl
int3
cmpsb
ljmp
mov
mov
cmp
sarl
imul
movb
cmp
fbstp
sub
inc
pop
loopne
xchg
jl
add
sbb
cld
rcrb
cmp
mov
inc
aam
pop
scas
test
mov
mov
jmp
xor
mov
mov
cmp
and
ja
and
call
and
aas
jecxz
and
xchg
in
mov
jge
int
adc
or
ret
push
add
ficomps
ret
cmc
ljmp
mov
push
std
pop
idivl
pop
pop
push
or
jno
adc
xchg
fcomp
mov
sub
outsb
or
jecxz
rcrl
pop
cltd
jnp
pusha
movsl
mov
mulb
repz
inc
mov
jo
imul
xchg
jge
sahf
jge
insl
lea
jl
jno
imul
aad
mov
test
pusha
jl
jp
dec
push
dec
mov
jns
cmc
sbb
mov
fmul
dec
jo
fwait
jmp
pop
out
fwait
rclb
mov
das
fwait
pop
js
js
xchg
int
shrb
iret
cmp
mov
and
adc
push
push
lahf
push
lahf
lcall
je
mov
in
dec
push
loope
lcall
imul
cltd
mov
andl
xor
jecxz
and
mov
xlat
movsb
push
in
clc
in
jo
test
std
inc
outsb
into
sar
sahf
sbb
loopne
pop
lods
sub
mov
or
fdivrp
fimull
sub
dec
cwtl
idivb
pushf
jge
ljmp
push
xlat
and
and
mov
mov
test
jbe
out
test
push
repnz
std
jbe
aam
roll
cmp
xchg
jns
push
enter
adc
jns
pop
sbb
jl
mov
addb
pop
pop
clc
popf
mov
xor
adc
cs
repnz
out
xor
ljmp
push
jle
pop
fbstp
lds
rcr
addr16
sahf
jo
jl
dec
pushf
mov
mulb
mov
cmpsl
shr
insl
push
pop
arpl
xchg
mov
into
pop
adc
mov
aad
je
js
scas
scas
lods
sahf
push
mov
sub
mov
ror
mul
fs
pop
adc
lret
adcl
dec
js
jmp
fs
jecxz
mov
xchg
fs
cmp
mov
das
fisubrs
and
aam
xlat
jp
ds
into
xchg
xchg
jmp
cmp
fistps
leave
sbb
dec
xchg
mov
sbb
mov
inc
mov
fdecstp
cltd
pop
dec
or
outsl
mov
movsl
ss
imul
mov
mov
cmc
ss
jnp
ds
mov
add
in
insl
jle
add
adc
jno
inc
out
addb
mov
lcall
jo
dec
stos
jae
xor
mov
xchg
loop
or
enter
jo
int3
adc
mov
sbb
push
nop
ja
mov
loop
andl
imul
int3
xchg
mov
aas
out
decb
lret
std
mov
inc
push
mov
in
sub
js
jecxz
insl
shl
repnz
jo
mov
es
test
inc
fsubrl
loope
push
mov
add
push
cmpsb
dec
cmp
push
movsb
xchg
aam
xchg
or
adc
mov
xor
fdivl
in
jmp
pop
xchg
mov
jns
addr16
cltd
imul
sti
pop
or
pop
sahf
xor
cld
adc
fsubrp
popf
in
pop
scas
xchg
sbb
sbb
jns
loope
ja
ret
push
pushf
into
sbb
jmp
jle
cmpsl
sbb
into
jle
mov
cmpsb
mov
push
pop
inc
jge
insl
stc
or
je
inc
jl
mov
gs
outsb
sub
rcll
sub
mov
out
orb
jne
xchg
cltd
cmp
and
hlt
xor
cmpsb
popa
lea
pushf
adc
xor
and
mov
scas
std
mov
hlt
test
frstor
shr
jbe
jae
lods
not
lods
dec
or
jp
cmpsb
lret
cli
aam
xchg
fwait
xchg
jmp
adc
lock
push
cmp
test
test
aas
into
and
inc
imul
fnstcw
jbe
xlat
dec
xchg
movsb
data16
lret
push
je
test
adc
add
sahf
aas
lcall
test
stos
xchg
aam
int3
jb
test
in
lret
mov
add
add
mov
inc
jae
iret
xchg
enter
fsubrs
jl
mov
cmp
jno
outsl
xchg
mov
iret
xchg
loop
das
mov
mov
scas
mov
add
std
mov
into
scas
jns
cmp
mov
repnz
cmp
test
inc
iret
jo
xchg
sub
fnstcw
adc
mov
jae
inc
sub
sub
sar
testl
inc
js
cmpsl
int3
insl
pop
inc
ds
movsb
lods
shrb
xchg
std
mov
out
mov
out
rorl
xchg
movsb
xchg
in
jae
rol
hlt
adc
fwait
xor
add
sbb
sub
adc
lret
fcompl
arpl
cs
push
xchg
fs
cmc
outsb
push
fimull
sahf
fisubs
pop
fiadds
bound
jmp
stos
fbld
into
mov
pop
leave
pop
push
push
rol
popa
jbe
mov
inc
or
inc
fnstsw
lcall
cmp
sbb
lret
mov
aad
mov
stos
fildl
jno
sbb
fmull
lret
inc
or
flds
movsb
or
cli
fldl
cmp
mov
xchg
enter
rorb
fsts
mov
cmp
mov
and
mov
loope
rcrb
arpl
mov
push
and
push
xchg
xor
xchg
xchg
cmc
jb
jle
mov
xlat
subb
adc
mov
inc
xchg
rorb
hlt
sti
in
sub
dec
xor
or
ljmp
inc
dec
imul
or
pop
sbb
inc
dec
repnz
xor
sbb
sub
or
xchg
mov
call
pop
imul
cmp
movsb
rclb
or
adc
dec
jge
adc
jmp
xchg
adc
mov
aam
ffreep
fisttpll
xorb
subb
sbb
mov
jle
mov
ror
xchg
int3
in
push
sbb
add
iret
pop
mov
xor
or
stc
sub
sbb
outsl
repz
pop
push
fidivrs
int3
mov
push
jno
adc
push
xchg
imul
mov
bound
sbb
int3
icebp
push
and
jp
push
and
add
in
sub
int3
lock
and
in
mov
psrlq
sarl
dec
xlat
js
jl
and
mov
dec
mov
dec
cld
or
notb
mov
push
fwait
outsl
cmc
scas
and
sbb
xchg
lds
subb
cs
mov
push
leave
adc
mov
push
mov
xchg
adc
mov
push
bound
addb
mov
pushf
out
push
xor
sub
mov
sbbb
cmpsl
imul
outsl
out
jae
into
cmp
add
addb
mov
xor
or
adc
roll
lcall
inc
shrd
clc
in
cltd
xor
mov
cwtl
scas
push
aam
std
push
in
iret
outsb
mov
mov
sbb
fistpll
adc
popa
repz
in
add
jl
dec
sbb
sbb
int3
add
into
and
mov
jge
sub
jl
lock
jbe
mov
loop
lods
sbb
mov
push
cli
or
xchg
stc
mov
dec
incb
fwait
cmpsb
mov
mov
adc
sub
xchg
mov
ja
gs
cmp
xchg
aam
dec
pop
fisubrl
cmpsb
cmp
push
shlb
scas
cmpsb
or
pop
and
pusha
xchg
out
cmpsb
scas
and
mov
push
lret
adc
cltd
add
cltd
popa
mov
or
dec
pushf
cmp
push
or
cmpsb
sbb
es
dec
test
sbb
dec
adc
jbe
cmpsl
iret
ljmp
ljmp
ljmp
outsb
adc
das
sbb
ja
cmpsb
jbe
adc
push
test
fistpl
push
pushf
pop
adc
lods
cmp
adc
pushf
cmp
add
pop
xchg
pushf
repnz
push
push
pop
arpl
aad
mov
push
stos
ja
sub
es
scas
lret
sub
ficoms
mov
shll
xchg
xchg
jbe
mov
adc
mov
inc
jns
xchg
subb
jle
adc
adc
ds
mov
xchg
mov
cwtl
test
pop
push
dec
aaa
inc
sbb
xor
test
in
mov
cmc
mov
mov
aaa
xor
test
xor
or
sub
out
or
movsb
loopne
adc
jnp
mov
push
scas
sub
shll
jp
outsb
cmpsb
hlt
out
int
shrb
je
jb
or
xor
mov
sti
fimull
mov
xor
mov
fisubrl
enter
cltd
cmpsb
xchg
movsb
push
mov
je
dec
adc
out
in
push
mov
push
loopne
mov
out
cmp
cltd
dec
lea
mov
and
add
or
out
mov
iret
jnp
jp
push
mov
mov
mov
xchg
stos
sbb
scas
cmp
call
xchg
enter
out
cs
subb
adc
in
lret
jg
out
push
jne
fimuls
cld
mov
mov
lahf
sti
mov
jle
xchg
shrb
sarl
mov
imul
scas
xchg
int3
sub
inc
mov
repnz
xchg
mov
lret
jmp
movsb
fs
repnz
mov
js
jp
jbe
stos
push
add
jl
rclb
mov
icebp
lret
into
pop
cmc
insl
xor
mov
lcall
data16
fwait
jb
add
je
cmpsb
scas
jae
mov
pop
mov
jne
lock
sbb
pop
cwtl
inc
lods
xchg
dec
or
sbb
cmp
push
cmpsb
push
push
or
int
or
inc
inc
shr
clc
into
in
enter
xor
xchg
jnp
pop
test
mov
sbb
fdivrs
mov
iret
scas
cmp
cmpsb
jge
dec
scas
ds
push
cmp
mov
insb
mov
xor
cmpsb
adc
scas
sbb
test
pushl
movsb
pusha
xchg
into
sti
inc
mov
mov
mov
jns
xchg
push
mov
inc
pop
mov
iret
sbb
push
popf
xchg
lcall
mov
nop
nop
cmp
ss
outsl
xchg
stc
out
movsb
mov
mov
mov
fimull
sbb
cmpsl
pop
mov
fcoml
nop
jb
or
pop
xchg
stc
je
jns
test
mov
mov
popa
or
insb
cmp
test
mov
andl
inc
mov
cmpsl
shrb
sbb
stc
test
mov
mov
mov
fsubrl
nop
xchg
lret
popa
int3
mov
icebp
fnstcw
mov
test
nop
outsl
push
icebp
mov
mov
sub
pop
mov
pop
jl
gs
mov
mov
daa
loop
ljmp
movsb
adc
test
push
mov
sub
adcl
in
decb
cmp
repz
inc
hlt
iret
mov
es
mov
sub
js
fadd
outsb
in
aaa
aad
jge
movsl
add
inc
jp
mov
cmpsb
mov
sub
or
and
mov
xchg
fsubrl
jp
ljmp
mov
mov
jnp
sti
rol
enter
fldcw
jle
adc
outsl
ss
mov
push
ss
xchg
ja
pop
sub
adc
jp
pop
movsl
dec
mov
repz
mov
fidivrl
mov
add
push
mov
inc
add
inc
out
lahf
cmp
lret
scas
nop
xchg
xor
out
dec
mov
mov
mov
or
xorb
cli
lea
mov
push
out
xchg
fnclex
xor
inc
push
cmp
mov
mov
rolb
push
add
shlb
sbb
rcll
jmp
jmp
sti
mov
sub
lret
adc
xorb
mov
int3
icebp
sub
cmpl
js
jp
outsb
cmpsb
js
jmp
nop
mov
rcr
sahf
fadd
test
lea
out
lahf
test
push
xor
in
je
fisubrl
push
adc
rcr
add
lret
mov
pop
scas
in
aad
sub
outsb
add
mov
sub
pop
adc
in
lahf
adc
xchg
lods
mov
push
cmp
mov
jo
test
in
dec
sbb
xchg
cmpsl
nop
jecxz
setp
mov
mov
mov
negl
imull
btc
and
nop
xchg
dec
jecxz
bswap
aam
jp
lock
test
jp
scas
sbb
sbb
je
mov
shrl
arpl
jmp
adc
inc
stos
outsb
mov
sbb
aaa
pop
imul
movsb
sbb
cmp
pop
bound
xor
js
push
mov
cltd
mov
mov
in
dec
call
mov
test
mov
xor
iret
mov
lret
inc
add
inc
test
rclb
mov
dec
inc
movsl
mov
inc
jge
aad
lret
pop
lods
lret
inc
or
lret
mov
sub
lret
fnstcw
mov
mov
pop
mov
sbb
or
pushf
xchg
dec
ficomps
repz
aad
push
js
popf
mov
push
in
inc
lret
jns
cmpsb
hlt
dec
dec
sbb
adc
rcrb
jne
lcall
iret
or
jbe
mov
and
clc
xchg
clc
cwtl
add
into
out
loop
lea
out
mov
aas
push
sub
add
or
shrb
arpl
data16
enter
pop
mov
pop
insl
or
fwait
movsl
out
add
aam
and
sarb
jno
cmp
in
lods
sahf
pushf
addl
in
negb
adc
outsl
pop
nop
mov
rclb
jmp
mov
or
rcrl
adc
dec
push
js
mov
adc
xchg
push
stos
cmovbe
loop
adcl
mov
push
cmpsb
repnz
adc
xchg
push
cmpsl
shlb
xchg
xor
inc
pop
inc
nop
adc
je
shll
cmc
je
mov
je
mov
jb
or
xchg
js
insl
test
sbb
xchg
add
mov
xor
je
mov
fcmovbe
pop
mov
sub
mov
incb
add
add
xchg
pop
fs
repz
ds
sbb
in
rolb
xchg
movsl
lahf
push
jae
inc
jge
cmp
movsl
in
fwait
mov
into
push
push
popa
insb
lahf
imul
js
mov
out
adc
sbb
fwait
aad
xchg
pop
ret
scas
in
jbe
mov
push
push
jp
lret
mov
ficompl
outsb
push
data16
decl
jae
pop
scas
popf
into
mov
imul
inc
out
xor
push
and
add
push
push
dec
jecxz
jb
loop,pt
gs
popf
shlb
mov
mov
push
xchg
cli
out
les
xchg
scas
cwtl
xchg
lret
lret
int3
lcall
lds
lods
popf
pop
cmpsb
mov
mov
mov
pop
jp
inc
imul
iret
pushf
mov
jg
mov
cli
inc
add
jmpw
jae
push
mov
ds
jb
outsb
push
subl
int
jno
jb
fbld
dec
jno
sbb
sbb
mov
orb
jo
jmp
xor
or
popf
cmpsb
stos
mov
adc
mov
and
fisttps
xchg
lds
cmpsb
icebp
shl
ret
xchg
popa
cltd
xor
dec
cmpsb
rorb
xor
cmp
adc
ss
sbb
fwait
xchg
les
jle
insl
jb
xchg
push
sahf
mov
sbb
test
call
lods
dec
jge
jb
lods
sbb
in
scas
jp
fldenv
ret
je
mov
jecxz
mov
xchg
in
fildl
out
in
fildll
shll
cmp
inc
xchg
outsb
test
aaa
sti
lock
jecxz
cltd
outsb
ret
cmp
push
insb
mov
push
pop
enter
xchg
sbbb
loopne
rcll
popf
jns
mov
xchg
mov
and
lahf
mov
or
jge
fadd
imul
into
lret
jb
jbe
loopne
aam
nop
pusha
cmpsb
fimuls
mov
push
mov
je
mov
push
inc
jl
call
adc
lods
mov
sahf
mov
addl
sahf
popa
call
out
mov
jge
mov
mov
mov
sbb
jo
scas
mov
ficomps
jl
aaa
sahf
sbbb
cltd
and
cmp
outsl
add
push
mov
sub
stos
push
insb
pop
adcl
insl
in
push
call
nop
cwtl
mov
pusha
js
mov
jno
xor
mov
loope
sbb
stc
stos
mov
mov
mov
sbb
push
pushf
and
mov
xor
cmp
orl
pop
daa
mov
sub
mov
in
test
mov
shll
cld
xchg
imul
in
rcrb
sbb
out
insb
xchg
mov
sub
xchg
out
repz
add
add
int
add
push
or
out
sbb
xchg
pop
xchg
lea
xchg
jecxz
popa
sbb
aas
mov
mov
xchg
ficoml
icebp
dec
mov
xchg
btcl
int3
xchg
dec
lea
dec
and
cmpsl
into
addl
adc
sub
jnp
xor
push
xchg
in
inc
pop
xchg
lea
rcr
imul
push
scas
ds
pop
out
test
lret
out
repnz
mov
nop
sbb
inc
inc
pop
fisttpl
aaa
jae
adc
outsb
leave
xchg
inc
scas
mov
sbb
mov
mov
xchg
sub
jecxz
push
repz
ss
je
andb
pop
imul
orl
fstp
int
sti
sub
push
mov
cmc
gs
jno
jle,pt
aaa
jb
lahf
or
pop
lcall
xor
push
fisubrl
mov
inc
ret
ss
dec
dec
adc
xlat
inc
pop
inc
dec
std
cmp
shll
fsubrp
rcrb
dec
xchg
jp
mov
lods
sbb
add
mov
enter
hlt
in
lret
add
outsl
add
ljmp
adc
sarb
pop
jns
rorb
fimuls
hlt
sbb
imul
jns
cmpsb
repnz
iret
xor
mov
pop
push
ja
adc
inc
push
idivb
repz
jo
jge
mov
mov
xchg
and
jg
fldenv
and
jl
pushf
pop
xchg
in
das
add
addr16
mov
into
mov
scas
pcmpeqd
jno
cmp
mov
jmp
icebp
insl
cmp
or
sbb
xor
xor
or
je
pop
and
scas
mov
xor
hlt
jae
sbb
pop
dec
rcrl
push
aam
inc
lahf
pop
push
stc
clc
dec
icebp
cmpsb
sub
lahf
dec
rcrl
cmp
mov
scas
jns
repz
inc
jb
push
push
sub
sub
push
movsb
push
popf
out
dec
cmp
jp
outsl
aas
sub
pusha
adc
filds
lds
jg
push
rcr
cld
js
loop
sbbl
mov
fidivl
out
add
orl
iret
push
mov
fmull
or
jns
mov
fcom
ret
shrl
or
fisubrs
cmc
out
sbb
pop
xor
pop
and
fnstenv
popf
cwtl
outsb
lock
mov
adc
sub
stc
test
pop
arpl
imul
dec
fmuls
test
cmp
cmp
adc
adc
dec
test
call
cmpsl
xchg
or
imul
loopne
in
pop
cmpb
sub
add
sub
add
jmp
jg
cmp
mov
mov
andl
dec
cmpb
push
inc
sub
xchg
cmp
jo
inc
aas
enter
xchg
dec
lcall
adc
in
dec
fnstenv
adc
iret
pop
cmpsb
jge
cmp
ret
lcall
mov
jns
mov
sub
stc
imul
jae
mov
mov
pop
jns
bound
das
dec
push
xchg
int
dec
je
pop
jno
sahf
pusha
xor
or
sbb
loope
xchg
push
mov
mov
mov
cmp
popf
or
int
xchg
cmpsl
imul
mov
mulb
xchg
mov
icebp
bound
sbb
test
mov
outsl
or
mov
scas
or
push
inc
sbb
pop
jo
sub
mov
insb
jae
xor
sbb
push
enter
iret
loop
int3
or
js
jl
push
fs
jl
stos
addr16
fcmovne
dec
cmp
pusha
cs
xchg
push
loop
stos
or
cmp
mov
lret
mov
mov
sub
lcall
pusha
cmpsb
mov
ret
int
pop
in
push
sub
int
xchg
jle
mov
inc
push
stos
push
mov
push
adc
cwtl
loop
gs
test
and
add
xchg
loopne
adc
jle
xchg
mov
mov
lcall
sub
sahf
dec
rclb
fstl
push
cmp
outsl
es
into
push
or
cwtl
mov
subb
dec
rcl
lcall
jbe
int3
outsl
cmpsb
push
into
xchg
or
mov
ljmp
push
int
jb
adc
cmp
outsl
es
into
push
or
cwtl
mov
lods
push
lcall
jbe
fildll
push
into
xchg
or
xchg
inc
das
mov
cmp
cmp
push
into
testb
xchg
es
cwtl
push
mov
movb
adc
cmp
outsl
xchg
into
jbe
jge
cmpsb
adc
cwtl
xchg
mov
cmp
cs
adc
jb
cltd
push
movsl
sub
xchg
mov
es
adc
push
imul
out
adc
mov
cltd
xchg
fmulp
cmpsb
ret
adc
xchg
imul
lcall
cs
adc
jb
cltd
push
movsl
sub
xchg
mov
sbb
imul
lret
push
shl
ret
mov
cltd
xchg
xlat
into
cmpsb
ret
adc
xchg
imul
lcall
cs
adc
jb
cltd
push
movsl
sub
xchg
jg
es
adc
push
imul
lret
push
shl
ret
mov
cltd
xchg
into
cmpsb
ret
adc
xchg
imul
cmp
adc
jb
cltd
push
movsl
sub
xchg
ror
es
adc
push
imul
shl
ret
mov
xchg
js
cmpsb
ret
adc
xchg
imul
test
clc
jb
cltd
push
movsl
sub
xchg
aam
es
adc
push
imul
lret
push
shl
ret
mov
movsl
sub
push
pop
xor
mov
cld
aam
je
jo
shrb
rcr
int
sahf
lret
jns
jnp
imul
cmp
cmp
leave
pop
mov
dec
stc
leave
sti
mov
lcall
shlb
push
rclb
add
add
icebp
shl
shlb
shlb
rclb
rclb
rol
rol
shlb
shl
rcl
rcl
rolb
shlb
mov
rclb
sub
dec
lret
dec
jns
jnp
imul
dec
mov
cmp
pop
test
test
jns
jns
jns
jns
jns
jns
jns
jns
jp
out
sub
data16
es
sahf
mov
pop
jg
jbe
cmpsb
aas
xchg
cmp
ss
push
cmp
cmp
test
popa
test
je
inc
mov
inc
cmp
aad
inc
mov
mov
mov
mov
mov
movsb
mov
cmp
push
mov
test
mov
mov
mov
clc
rcpps
or
or
lcall
and
mov
xchg
repz
cmp
sbb
out
or
fisttpl
inc
sbb
loope
xor
in
out
pop
cmp
es
pop
push
lret
jb
jae
jno
cwtl
in
push
in
ljmp
fucom
fcmovnbe
jle
test
push
mov
cltd
mov
imul
pop
cwtl
jnp
inc
adc
mov
mov
push
xchg
int
lcall
xchg
jb
mov
push
xor
jno
ret
inc
dec
mov
push
pop
cwtl
sti
jecxz
into
jp
inc
into
testl
int
jmp
aam
pusha
test
xchg
sbb
outsb
jl
aad
mov
mov
ja
leave
in
nop
jo
nop
int
mov
xchg
mov
mov
jl
add
stos
xor
cmp
xor
adc
mov
cld
inc
adc
iret
mov
cmp
out
inc
bound
mov
add
push
pop
push
in
stos
fldl
enter
inc
inc
cmp
mov
addr16
or
xchg
xchg
inc
mov
data16
dec
push
shl
pop
es
in
mov
cmpsb
int
jns
add
int
jnp
pop
cs
push
int
jnp
pop
cs
push
dec
sub
stc
pop
cs
push
int
jnp
pop
cs
push
sbb
pop
cs
push
int
jnp
pop
cs
push
into
inc
pop
out
in
inc
mov
jnp
pop
cs
push
int
jnp
push
add
cmp
pop
cs
push
int
jnp
pop
rolb
int
jnp
pop
cs
push
int
jnp
pop
cs
push
sbb
pop
cs
push
int
jnp
pop
cs
push
jno
adc
sahf
mov
pop
lcall
dec
xlat
lods
out
cs
cmpsb
dec
adc
cwtl
decb
dec
fistpl
push
cmp
dec
fstpt
loopne
mov
and
movsl
sub
xchg
into
outsb
ret
adc
sahf
xchg
cmp
fs
ds
xchg
pop
push
jg
dec
ret
mov
cltd
out
aad
sub
xchg
loope
push
ret
adc
mov
fs
ror
ret
rcrl
cmp
lds
lcall
cs
mov
ljmp
sub
xchg
lods
into
out
ret
adc
push
imul
lret
push
shrl
lods
cltd
into
movsl
sub
xchg
mov
outsb
ret
adc
sahf
imul
sarl
pop
jns
dec
aad
sub
xchg
test
out
ret
adc
push
imul
lret
push
shrl
mov
into
movsl
sub
xchg
ror
outsb
ret
adc
sahf
imul
ds
push
xor
pushf
ljmp
into
decb
test
cwtl
push
mov
push
mov
cmp
mov
mov
push
sahf
lcall
rolb
lret
cmp
jb
into
dec
ret
adc
and
out
adc
cwtl
push
aas
pop
cltd
push
fs
shrl
leave
cltd
into
movsl
sub
xchg
mov
sbb
rcll
inc
sbb
jg
lcall
cmp
outsl
out
push
into
push
or
xchg
push
adc
cwtl
mov
xchg
ficomps
cltd
jnp
jns
outsb
movsl
sub
xchg
mov
test
ds
and
lcall
cmp
outsl
out
push
into
push
or
xchg
push
adc
cwtl
mov
jl
movsb
pop
mov
lret
sahf
jns
fldcw
imul
mov
mov
lcall
lcall
lcall
sub
cwtl
add
and
adc
mov
mov
loope
jecxz
rcrl
sbbl
cwtl
mov
inc
flds
xor
push
push
sub
cltd
xchg
fwait
xchg
mov
mov
cmp
cmp
sub
sub
pop
adc
dec
adc
stc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
scas
xor
out
int
add
jg
and
inc
into
mov
out
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
lret
into
loopne
sbb
inc
push
lcall
or
mov
lods
jo
add
out
mov
mov
mov
jne
das
cmp
insb
xor
sub
jns
mov
fiadds
fsubrl
shl
xor
movsl
cltd
inc
xchg
enter
jnp
push
xchg
sub
adc
shlb
out
imul
fs
repnz
sbb
lock
popf
cmp
mov
js
add
sub
adc
mov
mov
lret
mov
push
aaa
lods
mov
inc
xchg
adc
lock
pop
movsb
adc
jb
sahf
insb
push
sahf
aas
dec
adc
lea
mov
stos
gs
jb
sbb
or
cwtl
aam
negl
nop
mov
mov
iret
sbbb
sti
and
xchg
out
dec
fwait
aam
sbb
xchg
shl
rorb
xchg
movsb
insl
out
and
fdivrl
stos
sahf
xor
insb
test
sub
mov
xor
test
lcall
into
imul
iret
xchg
xor
out
cmp
ret
push
and
stc
ret
sbb
fcoms
hlt
jmp
into
push
mov
xchg
adc
push
into
mov
dec
in
orl
inc
xchg
lahf
or
bound
push
insb
lea
mov
mov
inc
sbb
jo
mov
test
mov
xchg
fstpl
pushf
fiadds
sarb
xchg
mov
fisttps
pop
jnp
pop
cs
push
int
jnp
pop
cs
push
inc
mov
inc
mov
jnp
pop
cs
push
int
outsb
inc
in
cmp
jnp
pop
cs
push
int
jnp
adc
rolb
int
jnp
pop
cs
push
int
jnp
pop
cs
push
cltd
pop
cs
push
int
jnp
pop
cs
push
inc
mov
inc
mov
jnp
pop
cs
push
int
outsb
inc
in
cmp
jnp
pop
cs
jmp
mov
mov
adc
push
lcall
jl
sahf
push
fwait
add
mov
mov
nop
xchg
ds
lret
es
cltd
lcall
sbb
cld
dec
jae
mov
xchg
inc
fwait
xor
mov
sub
xchg
inc
pop
jo
mov
pop
jg
mov
fstps
call
scas
aam
ds
and
mov
enter
arpl
popf
popa
enter
ljmp
aas
or
rcll
test
pushf
xchg
scas
jg
cmpsb
or
clc
or
dec
lret
and
cmpsb
bound
and
sbb
cmp
push
push
cmp
fisubs
cwtl
js
sub
jno
pop
enter
cmpsb
rcl
in
cltd
mov
inc
mov
mov
mov
cmpsb
sbb
js
push
iret
movsl
in
insl
lods
lea
jb
rclb
mov
mov
mov
adc
xor
lds
sti
jns
aad
test
js
out
mov
hlt
ret
in
add
inc
xchg
xchg
imul
lret
sbbb
cmp
aas
mov
lret
test
push
push
stos
ret
js
push
and
push
xchg
jl
loop
xchg
xor
rcl
push
adcb
lcall
sti
jbe
and
sbb
shlb
stos
mov
inc
iret
inc
push
les
sbb
dec
dec
pusha
inc
fdivp
fwait
xchg
outsl
cmpsl
xor
roll
cmpsb
pop
scas
or
cmp
les
lods
bound
dec
fstl
mov
jmp
mov
push
xchg
cwtl
adc
adc
rcrb
addr16
leave
adc
lock
sbb
insl
leave
aaa
pop
push
sub
in
add
out
sub
xchg
pop
xchg
mov
adc
lea
cltd
lock
and
subl
sbb
addr16
pop
popa
loopne
pop
dec
pop
jecxz
mov
xchg
adc
das
mov
push
rorb
pop
jb
pushf
stc
or
xor
push
push
imul
loop
push
rclb
or
push
xchg
insb
dec
jl
es
int
aaa
rcll
imul
data16
push
sbb
and
popa
sahf
out
dec
movsl
fisubl
addr16
mov
mov
push
mov
xchg
inc
mov
xlat
into
xchg
sub
shlb
pop
adc
notl
nop
arpl
repz
nop
jne
sbb
test
adc
sub
mov
mov
mov
aad
mov
mov
pushf
fildl
cmpsl
mov
cmpsl
mov
xchg
subb
data16
push
sbb
sarb
push
dec
mov
add
es
mov
push
dec
scas
mov
fiadds
sbb
dec
fmuls
cmp
stos
jp
push
ret
mov
jae
mov
mov
add
xchg
cmp
xchg
outsl
iret
pop
mov
sbb
in
jbe
mov
lods
addr16
jns
adc
jecxz
cmpsl
test
xchg
cmp
data16
outsb
fchs
sub
nop
js
jns
adc
repz
inc
sahf
jnp
jp
lret
mov
xchg
inc
mov
fimull
fmuls
mov
push
pop
scas
and
loop
mov
and
in
scas
cs
push
cwtl
mov
sbb
sahf
add
mov
iret
std
pop
bound
ret
lods
jnp
nop/reserved
push
xchg
jbe
adc
aam
xchg
imul
or
mov
xchg
daa
ret
cwtl
xor
leave
sahf
pop
outsl
cmpsb
adc
cmp
or
cmp
mov
fbld
push
bswap
xor
imul
outsl
cmp
popf
or
enter
mov
imul
xchg
popf
jecxz
mov
and
enter
mov
aad
inc
cmp
insb
roll
cwtl
mov
adc
iret
and
mov
int3
mov
loope
divb
pop
or
leave
daa
sub
enter
scas
push
push
out
pop
sub
sbbl
repnz
push
iret
fxch
test
aam
imul
jbe
xchg
jmp
mov
js
or
fisubl
enter
mov
dec
mov
fimull
nop
push
int3
inc
push
bswap
xchg
mov
pop
movsb
faddl
or
jae
lret
add
enter
and
enter
mov
notb
sti
mov
sbb
testb
cmp
mov
sub
and
mov
adc
lea
js
insb
xchg
cld
mov
push
outsl
mov
jae
sub
lea
pushf
mov
mov
popa
sbb
cmpsb
inc
out
dec
lahf
mov
and
iret
clc
into
fidivrl
enter
rorl
es
into
and
fdivrl
mov
fidivs
and
jl
enter
xchg
adc
pop
mov
adc
xchg
mov
and
arpl
loope
fdivl
xchg
mov
or
sbb
xchg
cmp
add
sbb
stos
xchg
mov
xchg
mov
dec
push
cmpsb
divb
bnd
xchg
addl
push
orb
mov
adc
xchg
fwait
xchg
loop
xchg
or
cs
je
add
je
imul
cmp
insl
xchg
xchg
push
inc
enter
xchg
adc
jne
ja
lret
sarb
insb
xchg
add
mov
jae
inc
rcll
ljmp
outsl
xchg
clc
fcoml
pop
dec
push
jmp
scas
cmp
cltd
popf
nop
add
imul
push
pop
fisubrl
scas
imul
out
push
iret
dec
into
test
adc
insl
lcall
add
cmp
test
pop
mov
ja
xchg
fcmovu
xlat
sbb
in
mov
push
in
int
jb
or
add
jno
mov
in
enter
scas
cmp
jo
mov
popf
je
mov
leave
xchg
imul
ret
outsl
test
repnz
hlt
imul
inc
xchg
ja
leave
add
insb
adc
testl
jb
push
add
sbb
imul
mov
mov
or
mov
loop
xchg
and
addr16
dec
dec
ss
cmp
mov
adc
mov
dec
xchg
dec
frstor
out
jbe
inc
outsb
incl
xchg
xchg
mov
loop
lods
enter
int
in
stos
adc
ljmp
outsl
jp
jle
in
dec
fwait
sbb
call
sbb
and
dec
data16
das
iret
loopw
je
ficoml
out
cmp
add
dec
xchg
pusha
cmpsb
sti
lea
mov
mov
aam
stos
xor
fstps
xorb
mov
add
into
xor
mov
sahf
pop
repnz
nop
jbe
aaa
cmp
inc
stos
sub
lods
cmpsl
lods
and
dec
pop
mov
hlt
ficoms
ljmp
pop
jne
das
or
pop
pushf
sbb
xor
cmpb
push
ds
mov
popf
push
repnz
ret
jae
mov
add
pop
xor
adc
mov
cltd
outsb
push
push
push
stos
daa
sbb
jns
pop
sarb
ret
repz
push
xor
icebp
jnp
push
shl
cwtl
nop
inc
mov
rorb
or
mov
fidivs
lods
and
ss
push
unpckhps
scas
fwait
or
adc
pop
movsb
nop
fdivl
adc
adc
mov
shlb
addl
add
inc
cmp
stos
lcall
loop
jg
pusha
pop
jns
jl
out
lea
pop
std
sub
minps
scas
and
xchg
mov
addr16
adc
inc
mov
jae
xor
push
dec
imul
test
mov
stc
xchg
and
jle
mov
out
jge
sbb
mov
add
xchg
or
rcrb
mov
ds
movsb
and
and
fstps
mov
ret
repz
shll
sub
xchg
or
and
xchg
cmpsb
lcall
push
xchg
popf
pop
lock
jo
xchg
cmp
xor
mov
in
xchg
or
add
lds
xor
and
rclb
xor
xchg
stos
lahf
push
ret
or
xor
add
jo
andl
inc
jecxz
lds
or
mov
rep
or
into
insb
pushl
ret
mov
mov
adcb
mov
sbb
pusha
out
jns
arpl
fwait
xchg
jge
jecxz
maskmovq
divl
pushw
mov
mov
nop
and
xor
arpl
jne
add
inc
fstps
push
lcall
pop
xlat
push
aam
push
sbb
pmaxsw
jle
xchg
sub
inc
jbe
mov
add
dec
int
xor
cmp
dec
mov
mov
push
insb
xchg
cli
cwtl
lea
xchg
push
cmpsl
into
iret
push
fmull
popa
rolb
scas
les
stos
int
repz
out
sbb
ja
mov
cmpsb
or
scas
je
pop
js
xchg
insl
dec
js
nop
movsb
enter
imul
lret
fnstenv
xchg
push
cmp
push
nop
mov
pusha
jae
in
and
cmp
aad
xor
xchg
xor
cwtl
mov
xor
lret
lods
cmp
xchg
sbb
xlat
push
push
lds
std
popa
push
lods
ss
xor
xor
cwtl
mov
ret
cltd
lock
xchg
xchg
push
pop
lds
dec
repz
nop
mov
push
orl
adc
repnz
add
pushf
cmp
clc
pushf
dec
int
jmp
sub
xor
rolb
cmpsb
std
add
int3
pop
sbb
mov
ss
push
dec
mov
mov
icebp
ds
mov
mov
adc
jbe
cmpsb
inc
loopne
pop
or
outsl
gs
ds
jl
decl
or
adc
mov
sbbl
lret
mov
push
cmp
mov
jl
dec
sbb
jae
xchg
in
push
lahf
movsb
leave
mov
mov
lea
adc
adc
inc
shr
sbb
pop
enter
scas
xchg
jmp
inc
jns
in
sub
cltd
sub
pop
jne
mov
jae
repz
xchg
lahf
mov
aaa
push
xchg
pushf
aad
pop
test
sahf
jp
cmp
ret
fldcw
xor
cmp
enter
jo
and
pop
movsb
xchg
sahf
xchg
cmpsl
lahf
ret
outsl
leave
cmp
aaa
jae
xchg
xchg
pop
xchg
push
mov
pushf
icebp
je
fisttps
xchg
jge
fsts
mov
xchg
inc
inc
out
inc
dec
mov
mov
scas
fwait
and
lcall
push
loope
loopne
insb
pop
insl
mov
insb
jnp
fidivrs
mov
fisubl
rcll
xchg
inc
pop
fdivl
push
or
ret
lods
or
and
sbb
dec
movsb
fcomps
sahf
sbb
lret
jno
xchg
mov
cmp
mov
lea
inc
lea
nop
ret
adc
push
arpl
imul
xor
sbb
int
or
icebp
xchg
test
outsl
or
xor
xchg
lahf
lea
adcb
xchg
ja
insb
rol
push
xchg
int
mov
cmpsb
or
repz
hlt
jnp
cmpsb
push
adc
imul
aaa
sbb
test
pop
inc
sbb
sahf
xchg
xchg
add
xlat
xchg
cmp
jbe
push
rorb
inc
fidivl
repz
dec
nop
jb
pusha
push
sti
inc
cmp
inc
sub
scas
xchg
jmp
mov
cld
jae
jecxz
push
sbb
adc
inc
jae
fisubl
jl
sub
jmp
add
nop
loope
push
sub
push
push
dec
adc
xor
or
dec
xchg
jecxz
push
pop
rolb
outsl
jnp
cmpsb
aas
xchg
jl
fstpl
icebp
mov
scas
and
hlt
jle
cmp
test
icebp
movl
cmp
lahf
mov
pop
jbe
xchg
mov
xchg
cmp
adcl
mov
cld
rclb
lret
adc
rcr
push
pop
push
testl
and
fbstp
stos
cmpsb
cmpsl
xchg
call
outsl
jns
scas
add
sbbb
cld
cmpl
aas
add
xchg
insl
xchg
pop
lods
roll
inc
lcall
adc
loop
lcallw
inc
xchg
fdivp
imul
sbb
jne
arpl
arpl
mov
mov
ret
das
xor
mov
addb
ljmp
sbb
lock
int3
test
int3
std
fnstcw
jne
and
subb
adc
fimull
imul
lret
ss
or
jl
enter
loop
lret
cmp
lret
jmp
push
notb
mov
fs
mov
cmpsb
and
inc
jae
fsubs
into
in
dec
rcl
push
stos
adc
popf
adc
fimull
inc
adc
add
xor
or
and
ror
pop
sbb
mov
pop
jg
fbld
jnp
lcall
inc
mov
divb
mov
jle
sbbl
cltd
cwtl
nop
icebp
or
mov
dec
scas
mov
stc
or
outsb
cmp
out
and
lahf
cmpsl
rcr
popf
pop
and
pop
mov
scas
adc
adc
cltd
cltd
cmp
cltd
fsubl
outsl
mov
pop
push
sbb
jne
stos
imul
fstps
stc
loopne
loope
shll
jg
call
cmp
mov
jge
and
mov
push
loope
push
movsl
push
jb
xlat
adc
mov
xchg
mov
fsubl
aaa
test
push
dec
and
in
sub
push
add
outsb
xchg
loop
push
cmpsb
and
lret
outsb
mov
jg
xchg
push
les
jecxz
push
lret
iret
repnz
push
int3
lcall
xchg
xchg
lea
mov
lea
xchg
mov
mov
lock
aam
aam
adc
cld
insl
dec
scas
ljmp
jmp
nop
xlat
jle
or
jo
testl
mov
jmp
or
mov
lcall
lcall
dec
es
dec
and
xchg
pop
and
add
jge
je
stc
jns
call
adc
inc
mov
mov
lcall
push
xchg
mov
clc
icebp
push
lcall
icebp
jb
inc
mov
jmp
int
std
xor
fimuls
or
lcall
enter
ljmp
xchg
call
pop
int
imul
scas
push
test
push
xchg
xlat
or
ror
frstor
lret
negb
fwait
or
xchg
xor
lea
movsl
fidivrs
xchg
push
dec
in
jecxz
shl
imul
gs
test
or
mov
push
mov
mov
lods
xor
mov
pop
cli
enter
mov
mov
push
cwtl
mov
pop
outsb
nop
push
cmp
push
or
int
push
mov
xchg
cmpsl
mov
mov
in
jae
sahf
pop
daa
jl
jnp
push
js
xor
aad
mov
pop
iret
cmp
out
sub
into
pushf
cwtl
mov
mov
mov
dec
iret
mov
mov
insb
mov
jno
rcrl
aam
xlat
sbbb
mov
inc
jp
shll
pop
fcomps
out
shll
mov
ds
shll
fwait
jmp
xchg
pushf
loopne
repnz
jae
sbb
out
xor
jp
lcall
inc
pop
gs
jle
or
lock
xchg
pushf
adc
push
mov
adc
cmpsb
add
push
daa
sti
lcall
mov
inc
lahf
mov
adc
ja
push
fcoml
add
mov
stos
xor
mov
iret
das
sti
sahf
nop
jge
dec
ja
mov
lcall
daa
lock
xchg
mov
mov
xchg
jne
rorl
add
movl
loopne
mov
xor
fmull
push
fbld
les
dec
je
sti
cmp
push
leave
sar
mov
in
inc
jne
or
pop
movsb
jno
sbb
xchg
mov
xchg
insl
push
pushf
sbbl
fisubrs
mov
mov
orb
insl
mov
dec
jbe
xor
mov
mov
xchg
jbe
jle
pop
cmpsl
cmpb
ljmp
pushf
enter
iret
cmp
xchg
outsb
dec
xchg
in
cmp
ret
lret
adc
imul
xor
inc
imul
and
jo
xchg
and
sbb
test
push
add
cltd
xchg
out
pop
nop
inc
add
rcr
sub
sbb
test
xlat
xchg
pop
jb
neg
jns
jge
cmpsb
fistps
aad
jno
fistl
sarb
daa
les
pop
or
xchg
into
pop
push
not
ficompl
mov
and
jp,pn
ss
adc
lcall
mov
jnp
jb
aad
mov
popf
push
lods
pop
adc
mov
lret
inc
add
or
daa
bswap
popf
lcall
mov
aam
mov
pusha
faddl
fwait
mov
mov
cmp
jmp
pushf
rorb
mov
mov
mov
cltd
mov
inc
xor
inc
xchg
mov
cltd
negl
adc
mov
or
insl
jne
mov
in
mov
sahf
or
push
inc
orl
push
xor
daa
lds
lods
pop
add
inc
imul
mov
into
popf
jb
or
leave
sbb
mov
inc
jmp
xor
daa
dec
dec
xchg
dec
pop
scas
add
cwtl
orb
adc
nop
jle
sub
nop
dec
imul
leave
outsl
xchg
and
lcall
and
repz
push
mov
sub
rcll
dec
loop
aas
subl
rolb
ljmp
push
jb
mov
sub
rcll
xchg
push
rcrl
rcl
out
mov
adc
pop
test
insl
xchg
fwait
and
dec
xchg
fwait
je
pop
and
xor
lea
push
sbb
stc
test
outsl
xchg
push
jle
push
inc
xchg
lea
ja
push
mov
mov
push
mov
ret
int
cmc
inc
ficompl
dec
out
in
outsb
iret
dec
jne
cmp
ficompl
cltd
adc
movsb
pop
insl
int3
pop
or
fbstp
add
xchg
or
sub
sub
mov
xor
push
pop
jno
push
mov
xchg
sub
cmpsl
mov
lahf
xchg
cltd
and
and
cmp
cmpsl
lret
mov
cmpsb
sbb
cmpsb
cmp
int3
out
sbb
pop
push
scas
popf
push
pop
fistpl
push
adcl
cli
rclb
test
mov
push
loopne
push
movsb
mov
adc
int3
xchg
cs
test
mov
cmp
ljmp
out
in
out
insb
aas
in
mov
add
into
mov
in
out
add
mov
je
add
xchg
and
pop
into
sbb
cmp
lds
xchg
ret
mov
scas
daa
mov
xchg
inc
adc
pop
daa
loop
je
ficompl
pushf
loope
sbb
fsubrs
mov
xchg
push
adc
sub
xchg
sbb
inc
sbb
adcb
adcl
add
nop
andb
inc
adc
adcl
mov
ficoms
loopne
adc
xor
pop
add
xlat
sti
pop
lcall
cmp
xor
in
lret
jmp
pop
loopne
push
enter
sub
dec
or
cmpsb
stc
sub
ss
adc
cmp
ss
jecxz
flds
iret
dec
out
rclb
xchg
sub
je
inc
mov
sub
lahf
and
js
adc
push
rorl
adc
dec
fiadds
push
xchg
js
inc
adc
aaa
loopne
shl
mov
fmull
xor
jmp
sub
outsl
test
mov
movsb
ljmp
repnz
push
push
ror
push
push
adcl
out
pusha
js
jns
ljmp
stos
push
shll
push
andl
scas
mov
fdivl
mov
call
scas
test
out
xor
xchg
mov
and
mov
or
push
outsb
test
pusha
pop
push
mov
push
leave
add
and
daa
mov
bound
inc
push
mov
add
mov
sahf
jmp
xchg
cmpsb
js
push
ror
ficoml
mov
push
sbbl
sbbb
inc
inc
xchg
xchg
push
xor
or
mov
mov
push
mov
mov
add
or
pop
imul
xorb
push
and
jg
pop
push
jl
sbb
inc
xchg
push
clc
mov
stos
sbb
xchg
aam
stc
jo
lret
cmp
sbb
ret
xor
pop
mov
lds
push
shl
lock
jb
iret
push
or
ret
or
pop
hlt
adc
mov
in
adcb
dec
or
fsubp
sahf
mov
arpl
sahf
es
aad
mov
push
iret
cwtl
fwait
mov
mov
jecxz
mov
and
push
out
pop
cmpsb
push
sbb
pushf
mov
inc
dec
mov
aam
out
loope
outsb
mov
xlat
sbb
mov
out
aam
push
mov
fisttps
pop
inc
in
out
stos
xlat
mov
add
leave
outsb
nop
js
xor
push
ficoml
mov
cmpsb
fmuls
dec
movsb
ret
scas
scas
adc
push
fstps
negl
lds
fdiv
in
cld
sahf
jmp
sbb
add
mov
xchg
pop
mov
xchg
xchg
jmp
push
int3
xchg
testb
xchg
jmp
lcall
adc
std
jecxz
leave
push
mov
les
or
add
ljmp
cmpsb
insl
sub
dec
inc
icebp
pop
pop
shrl
mov
leave
cmpsb
repz
mov
bound
imull
mov
push
sarb
jno
xchg
in
mov
cltd
push
rorb
dec
addr16
ja
jo
lods
cwtl
mov
ror
lahf
clc
pop
adc
cs
add
xor
aad
cld
xchg
sbb
xchg
call
stos
add
movsb
lret
fs
push
cmp
sbb
lahf
dec
push
xor
and
cwtl
pushf
lcall
repz
xor
fmuls
or
dec
out
lahf
mov
dec
decb
dec
loopne
ret
nop
jne
fdivp
inc
or
lret
scas
cmpb
push
dec
lcall
push
jecxz
ror
push
out
adc
sbb
test
dec
xchg
into
mov
xchg
jo
jl
xchg
and
pop
insl
bound
dec
mov
mov
push
stos
xchg
dec
pop
inc
inc
js
inc
lods
push
cmpsb
mov
nop
imul
in
lcall
push
xchg
cltd
push
enter
push
into
xchg
or
sar
js
jnp
push
xchg
sub
push
ret
xor
cmp
xchg
xchg
fwait
outsl
mov
iret
push
lods
xor
cmp
adc
fwait
outsl
test
iret
push
mov
xchg
xchg
je
iret
push
scas
xor
cmp
adc
fwait
outsl
jnp
iret
push
mov
lcall
sub
push
xchg
xchg
jns
dec
cmpsl
push
test
sub
xchg
insb
jp
es
push
test
movsl
sub
mov
adc
mov
or
xchg
jb
xchg
cmpsb
adc
cwtl
xchg
xchg
ljmp
cmp
int
mov
movb
sbb
cmpsb
cmp
rcrl
or
adc
add
out
insl
jecxz
pop
mov
ffree
pop
call
adc
inc
push
sbb
inc
xor
mov
cwtl
notl
shl
test
lock
test
test
xor
hlt
fadds
lock
pusha
sub
test
test
arpl
sahf
inc
cmp
test
mov
mov
mov
imul
cmp
orb
sarl
xchg
push
mov
enter
mov
or
mov
jnp
push
ret
jne
ret
mov
or
lods
sarl
mov
jne
sbb
mov
imul
cmp
outsw
insl
lds
ret
adc
imulb
xchg
in
lret
in
mov
adc
imul
cmp
jns
outsl
jnp
insb
sarl
mov
mov
mov
test
js
outsl
mov
xchg
test
jnp
sbb
out
push
add
sbb
sahf
cwtl
jecxz
lahf
ds
repnz
outsb
pusha
jecxz
push
or
mov
sbb
jbe
push
data16
inc
cmp
mov
stos
push
adcb
enter
scas
add
jb
xchg
push
and
cmp
nop
movsb
fistps
std
pushf
lods
inc
sbb
jl
mov
push
xlat
in
cmp
test
cmpsl
jne
data16
and
push
je
lahf
sub
sahf
mov
jno
fidivrl
or
xor
in
sub
mov
test
sbb
xchg
repz
cmp
inc
or
mov
repz
cmp
mov
jb
jp
rolb
adc
out
lock
push
leave
xchg
sbb
xchg
jp
or
inc
mov
mov
data16
inc
jp
sub
jae
mov
lahf
in
sbb
add
mov
popa
or
test
scas
cmp
adc
cmpsl
js
enter
icebp
jg
int3
in
test
enter
lea
xchg
mov
jle
cmp
xchg
stc
scas
xchg
rcrb
ja
mov
xchg
mov
cld
fildll
cs
adc
js
xchg
pusha
jge
enter
cs
nop
or
mov
into
nop
movsl
imul
in
cli
lcall
bound
pusha
out
fnsave
insl
je
and
push
clc
nop
add
enter
imul
cmp
mov
lret
or
xchg
or
hlt
mov
fwait
aam
mov
leave
aam
cmc
or
push
int
jmp
leave
cmp
and
xchg
sbb
adc
int
xchg
cmpsb
pop
cltd
mov
sbb
jl
cltd
call
es
fisubrl
stc
addl
dec
lea
orl
int3
test
orl
sub
rcrb
jecxz
sbb
push
fisubs
mov
fcomps
fbld
popa
jo
fs
cltd
jge
in
in
inc
pusha
fdivs
shrl
mov
push
sbb
lock
sbb
sub
nop
movsb
imul
imull
inc
push
push
push
fnsave
or
fdivl
xchg
inc
push
pcmpeqb
pop
and
and
xchg
cmp
in
out
aaa
pop
lcall
mov
mov
scas
cwtl
in
xor
mov
mov
leave
imul
cmpsb
scas
xchg
shrb
fstpt
adc
fstpl
cmpsl
push
mov
pop
jbe
mov
rcrb
flds
xchg
add
imul
lcall
imul
push
into
sbb
outsl
dec
lcall
dec
mov
imul
and
jg
jp
fsubrs
movsl
xchg
das
lcall
push
mov
in
jge
mov
subb
fnstsw
mov
mov
or
push
inc
pushl
mov
push
aad
or
lret
jmp
cmp
dec
cltd
ficompl
nop
or
cmpsb
out
xchg
sub
test
sub
lret
and
fst
ds
adc
inc
jle
daa
stos
ja
in
stos
shll
out
push
lcallw
iret
fildl
repz
mov
int3
push
in
jp
ffreep
int
sub
push
testb
js
ret
fdivs
sbb
jmp
xchg
in
pop
lret
sti
or
and
jmp
cmp
icebp
lock
adcb
jb
jl
sub
jb
mov
fiaddl
adc
jo
xchg
sbb
pop
sbb
imul
enter
mov
inc
adc
mov
sub
jmp
jmp
jbe
cld
int3
enterw
imul
mov
cltd
jbe
in
outsb
loope
cwtl
mov
cltd
mov
arpl
lret
cmpsb
mov
xchg
mov
inc
pop
mov
idivl
xor
lds
pop
add
ret
adc
cmpsb
push
dec
xchg
je
lcall
mov
adc
mov
fs
out
inc
andb
push
fucom
scas
sub
mov
pop
xor
add
fimuls
inc
xor
nop
data16
lahf
movsb
inc
nop
outsl
stc
hlt
push
push
lds
int3
stos
sub
jecxz
lds
fs
and
mov
xor
rclb
adc
adc
cs
cs
jnp
mov
das
fcoms
mov
lcall
push
mov
lods
xchg
addb
mov
add
adc
jecxz
pop
xchg
leave
xchg
sti
jl
adc
inc
or
arpl
push
jns
lcall
fsubs
xchg
inc
xchg
leave
push
cmpsl
push
std
cmp
push
xchg
je
pop
lcall
leave
xchg
fwait
ds
inc
mov
xor
push
inc
inc
lcall
incl
data16
inc
xchg
mov
les
xchg
stos
xchg
pop
lcall
or
mov
pop
lcall
cltd
insl
adc
lcall
mov
out
bound
push
jnp
imul
int3
stos
adc
jne
mov
xchg
xlat
sub
mov
shrl
mov
or
mov
popf
aas
mov
jecxz
cmpsb
mov
aad
bound
mov
int3
cltd
sti
sbb
mov
mov
jb
mov
push
ret
rorb
push
inc
jae
outsb
lds
ret
lcall
aam
and
adc
lahf
pop
push
in
test
sahf
daa
lcall
ljmp
xchg
sahf
clc
lcall
aad
sub
push
inc
lods
incb
icebp
int3
adc
sahf
mov
scas
jno
sahf
push
into
scas
and
mov
mov
call
fmuls
lea
add
inc
bound
std
mov
xchg
rolb
mov
cs
lods
xchg
push
mov
mov
sbb
fiadds
dec
into
imul
sbb
cmc
jg
mov
push
andb
outsl
jnp
sub
rcrb
push
addr16
cmp
mov
mov
push
push
sub
js
into
push
and
pop
shrl
nop
ret
inc
pop
mov
xor
dec
xchg
nop
sub
iret
imul
outsl
jae
mov
out
cmp
loopne
push
and
outsl
shrl
inc
pop
mov
jecxz
into
dec
nop
ret
inc
pop
mov
mov
push
push
sub
sbb
jb,pt
push
mov
cs
xchg
xchg
adc
aad
shll
loopne
cmpsb
push
cli
add
lcall
lds
mov
ret
cld
cmp
dec
out
test
lods
loopne
mov
pop
scas
xchg
cmp
dec
add
lods
push
sub
out
adc
cwtl
push
mov
add
pop
mov
adcb
adc
jmp
and
clc
daa
enter
ret
sub
das
std
ret
push
jle,pn
sub
xchg
dec
pop
mov
xor
test
push
int
ljmp
xor
jnp
aaa
pop
fs
imul
adc
sub
or
in
xor
aad
push
or
ljmp
repnz
mov
mov
mov
and
push
icebp
mov
aas
shll
cs
push
cmp
movsl
adc
adc
js
or
ljmp
out
xchg
nop
fldcw
mov
mov
xor
push
fmuls
push
test
jge
mov
and
pop
cwtl
int
stos
imul
cmp
jl
push
mov
jne
cltd
out
mov
dec
test
test
xlat
mov
xor
jl
push
jb
or
sbbl
sahf
cmp
out
mov
adc
cmpsb
pop
sahf
mov
clc
jbe
sub
inc
fisubl
push
fmuls
dec
xchg
imul
xchg
fnstenv
imul
out
add
scas
push
rorb
into
lcall
mov
dec
cld
ja
xor
dec
xchg
pop
sub
sbb
sahf
push
pop
mov
fiadds
push
sub
xchg
test
lret
das
mov
xchg
nop
rcll
mov
inc
lcall
iret
cmp
mov
and
push
mov
addr16
scas
movsb
outsb
inc
mov
fistpl
pop
fcomps
xchg
fmull
enter
decb
aas
push
xor
test
mov
xchg
mov
test
cmp
mov
enter
mov
or
imul
jno
push
arpl
sbb
sbb
mov
fimull
aad
sub
lcall
test
fcoml
jno
sahf
push
into
jp
test
lcall
and
aam
leave
xor
jle
jae
mov
mov
aas
pop
sub
popa
xor
mov
fwait
pop
les
ds
ljmp
ret
adc
lcall
iret
jl
or
aam
jle
inc
aas
sbb
int
sahf
push
ficompl
inc
or
xchg
pop
inc
cmp
fisttps
cli
fcompl
aas
push
jl
mov
lcall
and
loop
adc
cltd
fistpl
movsb
sahf
mov
aam
jp
cld
mov
sarl
sbb
leave
mov
push
cmpsb
nop
lahf
cmpsb
insl
inc
mov
cltd
jb
aam
push
push
xor
push
rclb
jg
push
push
jle
mov
outsb
inc
inc
cld
lret
cli
sbb
push
adc
sarb
push
lcall
jb
mov
adc
mov
sahf
mull
cmc
xchg
push
or
mov
out
inc
int3
mov
pop
xchg
movsl
out
mov
xchg
clc
adc
iret
js
std
or
repz
mov
ljmp
jbe
mov
push
bound
and
sub
clc
lcall
rorl
lret
adc
cmp
loopne
jmp
sub
lahf
stos
mov
mov
in
push
scas
dec
sub
and
jbe
cmpsl
iret
ljmp
ljmp
js
inc
lea
pushf
xchg
ljmp
outsb
adc
das
and
push
xchg
mov
adc
adc
jbe
adc
jbe
mov
adc
push
jbe
pusha
cmpsl
adc
dec
cld
ror
add
jbe
int3
mov
in
jnp
adc
out
call
jnp
movsb
es
push
jge
enter
iret
add
pop
mov
xor
mov
icebp
test
outsl
outsl
lods
rolb
mov
adc
dec
jnp
andl
or
sub
adc
outsb
xchg
jge
xchg
pop
cmpsb
dec
in
imul
cmpsb
push
mov
adc
sarl
frstor
popa
movsb
cmpsl
jo
or
push
sbb
dec
pop
adcb
into
in
xchg
dec
fucom
and
push
in
sbb
adc
pop
int
lods
inc
mov
jno
cmpsb
aaa
or
cmpsb
mov
fimuls
cmp
mov
outsl
rol
jmp
xor
lahf
movsl
sbb
dec
adc
xor
and
or
xchg
and
push
or
sub
sbb
adc
insl
fnstsw
add
mov
pop
je
pop
stos
or
repz
sbb
nop
cmpsb
loopne
mov
or
jne
hlt
repz
mov
jecxz
push
jecxz
out
jecxz
push
xor
mov
or
jge
popa
sub
pop
push
mov
ret
jmp
div
mov
cmpl
push
adc
cwtl
adc
pop
mov
into
shld
mov
adc
leave
aam
xor
mov
mov
fstl
lods
shrb
xchg
push
xchg
and
cmpsb
and
dec
into
sbb
inc
pusha
xor
shl
data16
push
mov
stos
pop
dec
mov
outsl
or
mov
adc
test
push
imul
cmp
mov
popf
xchg
cmpsl
pop
jnp
push
push
rclb
xchg
mov
push
pop
rcl
add
inc
inc
popa
imul
ret
cmpsb
mov
mov
aas
xchg
sbb
out
cmp
ret
imul
add
test
in
pushf
cltd
je
or
mov
inc
adc
xchg
lock
data16
ds
adcl
gs
adc
mov
sbb
rcll
fwait
nop
jne
pushf
lret
imul
ss
sbb
xor
inc
imul
les
mov
mov
frstor
fs
enter
jae
push
mov
stos
fnstenv
xor
cwtl
cmp
add
or
enter
xchg
adc
ror
dec
xchg
sub
outsl
and
iret
adc
xorb
mov
sub
jecxz
fistpll
dec
and
call
lcall
adc
or
sti
es
inc
mov
cmc
xor
insl
xchg
xadd
cmpsb
pop
xchg
stos
push
movsb
lret
xchg
je
xor
xchg
sbb
cld
movb
test
test
push
ljmp
adc
movsl
push
stc
in
xchg
out
scas
adc
inc
mov
mov
in
mov
xchg
push
div
jmp
mov
imul
pop
jmp
mov
push
leave
mov
aaa
shr
cmpsb
mov
cmpsl
fidivrs
jnp
mov
loop
std
lahf
or
scas
xchg
stos
ret
movsb
mov
imul
mov
adc
pop
or
daa
imul
pop
fs
push
fdivrs
frstor
daa
pop
scas
mov
in
into
cltd
xchg
sbb
retw
pop
pop
xor
repnz
cmpsb
jno
fwait
adc
lock
out
or
cs
outsb
div
pop
push
bswap
sbb
sbb
hlt
inc
gs
mov
in
push
sbb
mov
inc
jnp
cmp
gs
xchg
jne
push
lcall
shrb
xchg
adc
inc
imul
hlt
icebp
faddl
or
xchg
cmpsb
cmpsb
push
insl
push
or
cltd
ja
movsl
imul
dec
rsqrtps
shl
add
out
popa
mov
enter
sbb
jns
adcb
xor
pushl
mov
xchg
mov
mov
jmp
inc
shrb
mov
cmpsl
fimuls
outsb
jb
pusha
push
test
ret
mov
sbb
outsl
cmpsb
lock
iret
in
sub
lcall
push
cmp
in
pop
not
lcall
jge
mov
mov
sbb
xor
sbb
mov
lea
dec
xchg
es
pop
cli
aas
jge
add
jp
mov
test
adc
cmpsl
mov
xor
push
test
pop
mov
subb
lcall
ss
mov
frstor
fdivl
fldenv
mov
gs
popf
mov
imul
fsubs
cmpsb
jle
stos
les
jp
lcall
xchg
xlat
insl
sbbl
lahf
pop
aaa
sbbb
lcall
nop
lcall
lcall
jnp
lcall
sbb
fwait
outsl
je
lcall
lods
pop
lcall
lods
mov
imul
lcall
je
lcall
mov
adc
lcall
mov
inc
mov
mov
sbbl
lcall
jnp
lcall
sarl
mov
imul
lcall
mov
lcall
lcall
imul
push
lods
cs
mov
test
int3
out
jle
jg
out
lods
dec
aas
movsb
addb
outsl
cmpsb
imul
xchg
scas
lcall
dec
aas
movsb
subb
lcall
mov
imul
movsb
daa
push
rol
pop
cs
push
cmp
inc
sbb
push
movsb
shrb
sub
jg
push
lods
dec
aas
movsb
iret
push
test
int3
out
jg
js
xchg
scas
lcall
fcmovnbe
push
stos
jns
dec
pop
mov
mov
out
lods
and
cmp
add
sub
inc
xchg
inc
xchg
and
hlt
call
push
mov
nop
sti
push
nop
lret
stos
daa
mov
push
add
mov
jae
mov
xor
imul
push
xchg
addb
xchg
mov
jno
jnp
outsl
jle
jo
push
je
xchg
ljmp
mov
stos
mov
outsl
add
and
xchg
jp
repz
mov
in
pop
or
xchg
mov
mov
scas
push
jl
or
fimull
outsl
mov
push
stos
pop
lods
subl
ret
xchg
mov
sbbb
push
sbb
lods
pop
mov
or
pop
pop
sbb
inc
and
addb
jnp
nop
mov
or
call
imul
inc
and
push
sbbl
inc
lcall
dec
fwait
mov
add
nop
fxch
mov
sub
jo
outsb
ja
xchg
sahf
cmpsb
jbe
bound
fisubrl
sub
cmpsb
js
orb
lcall
mov
mov
outsl
inc
sub
inc
sbb
js
sbb
enter
xchg
lret
loopne
adc
cwtl
scas
push
xchg
scas
into
xchg
mov
mov
scas
jl
cmp
fs
lcall
test
lds
sbb
sahf
xchg
jmp
and
scas
sahf
mov
mov
mov
movsb
insb
cltd
js
jg
inc
negl
clc
pop
mov
arpl
adc
mov
cltd
sbb
fs
mov
loopne
jae
mov
xchg
into
or
mov
cmpsb
out
orb
dec
push
mov
dec
sbb
imul
movsb
das
cwtl
enter
push
inc
scas
mov
push
mov
and
mov
sahf
ja
fidivl
mov
adc
cltd
lahf
cmpsl
mov
jle
or
xchg
fwait
leave
jp
outsb
sahf
xchg
xchg
repnz
add
fimuls
imul
int
repz
xchg
bound
sbb
or
xchg
push
cwtl
into
test
mov
hlt
lcall
scas
dec
mov
mov
outsb
jp
xchg
sahf
push
pop
push
cmovl
lock
ret
add
mov
lahf
or
mov
xchg
xor
sbb
iret
lea
lahf
ds
ja
test
xor
stos
lret
shl
ja
lret
enter
sbb
das
xchg
aam
inc
test
or
scas
rclb
mov
mov
xchg
mov
inc
insb
imul
push
mov
mov
into
into
lret
cwtl
xchg
jae
faddl
sbb
or
aam
add
ja
scas
mov
js
fwait
in
push
jnp
call
nop
push
mov
ficoml
lcall
push
orb
xor
outsb
sbbl
and
das
adc
imul
xor
jns
rorb
insl
push
jb
sbb
push
and
jmp
imul
repnz
ret
xchg
ret
jno
push
ret
cs
push
nop
test
leave
adc
cmpsb
xchg
ret
dec
push
js
xchg
jge
lods
mov
mov
mov
mov
leave
and
or
lea
rcrb
xor
mov
loop
outsw
sti
adc
mull
mov
cmp
or
push
ret
push
jl
sbb
inc
psadbw
pop
jmp
imull
mov
cmp
mov
push
adc
ret
es
lds
lcall
sahf
xor
mov
and
lock
xor
xchg
aad
cmp
mov
xchg
sbb
add
jl
insb
push
pop
add
sti
xor
push
movsb
xchg
or
lods
ss
cwtl
push
cwtl
cmpsb
pop
push
ds
add
xchg
andl
or
and
les
add
in
jmp
dec
sbb
mov
int
push
test
mov
mov
mov
pushf
movsb
aad
fucomi
stos
int3
sub
mov
pop
fidivrl
es
lea
outsb
push
sub
jnp
add
movsb
pop
jno
pop
lods
std
push
jbe
outsb
aaa
jno
out
loope
sub
pop
push
sbb
imulb
xchg
int
cli
dec
xchg
pushf
insb
repnz
nop
in
sti
xor
mov
push
les
push
pusha
cwtl
mov
mov
inc
push
jmp
jb
push
outsb
and
push
xor
xor
mov
cwtl
pusha
mov
cmp
lahf
mov
das
push
pop
out
sbb
xchg
scas
xchg
je
mov
add
jno
loop
inc
scas
cmp
xchg
into
sahf
iret
adc
loope
and
scas
sahf
mov
mov
enter
std
and
push
push
cmp
xor
pop
push
test
mov
dec
mov
cmp
ret
push
movsl
inc
into
rcrl
or
push
cmpsb
cmp
push
or
rclb
mov
push
mov
adc
mov
fxrstor
stos
lods
xchg
je
dec
lahf
stos
shrb
pop
xchg
insb
insb
pop
mov
addl
and
push
jmp
adc
lods
popa
mov
xor
dec
pop
cmpsb
pop
jle
mov
lcall
scas
push
xchg
loope
subl
sahf
cmpsb
mov
into
ret
xor
rclb
rclb
int3
negb
sub
lods
mov
cmp
ret
lcall
inc
nop
adc
sahf
pop
push
jbe
ret
ret
pop
mov
mov
xor
mov
mov
cwtl
flds
xor
enter
outsl
sub
shrb
pop
and
mov
mov
shrb
sahf
and
xlat
mov
pushf
xor
cmp
push
mov
xchg
mov
xchg
add
rcll
xchg
or
adc
sbb
dec
sub
insb
imul
lahf
xchg
in
adc
cmpsb
xor
cltd
outsb
ret
mov
or
ret
mov
adc
lods
push
fldenv
imul
sub
xchg
push
mov
call
lcall
jns
jecxz
adc
jmp
outsl
das
fwait
cmp
jo
jno
sbb
xchg
in
repz
jae
add
popa
pushf
rcl
in
addr16
outsb
pop
jae
push
sahf
mov
sub
sbb
out
frstor
std
dec
sbb
outsb
pop
mov
hlt
lock
mov
dec
fbld
inc
push
out
cmpsb
inc
mov
and
xchg
ja
mov
mov
cmp
fisttpll
insl
and
cli
sbb
add
pop
repz
or
leave
loop,pt
cmpsl
sbb
daa
and
dec
pop
mov
cwtl
rcr
inc
and
arpl
xchg
push
sarb
add
scas
mov
in
lahf
nop
fidivl
lea
aas
adc
sub
xchg
jne
jge
xor
call
fstps
xchg
and
int3
add
jbe
jp
xchg
jns
or
popa
imul
mov
shll
imul
clc
pop
jb
cmpsb
xor
mov
sbb
ficompl
xchg
out
aam
inc
and
fmuls
xchg
xchg
test
jecxz
loopne,pt
push
cmpsb
sbb
push
add
ret
adc
data16
mov
orb
frstor
lods
mov
push
iret
mov
mov
jb
pop
ret
shlw
sahf
inc
inc
mov
mov
sahf
ret
jnp
cmp
adc
cwtl
repnz
mov
mov
sub
ret
adc
rcrb
outsl
jb
mov
and
inc
int3
inc
mov
ljmp
push
int
bound
add
cwtl
repnz
mov
mov
loop
adc
rclb
cmp
fs
inc
mov
ljmp
push
into
push
and
roll
ret
cmpsb
and
cwtl
adc
mov
loop
dec
rcl
cs
sbb
mov
movl
imul
add
test
and
ret
jmp
outsb
mov
loop
sahf
adc
rcr
push
cmpb
test
jbe
mov
inc
insb
ds
inc
inc
and
push
bound
sahf
dec
xlat
push
mov
push
add
sahf
sub
push
xchg
cs
adc
cmp
int
sahf
loop
cmp
movsl
sub
push
ljmp
outsl
inc
inc
jle
stos
ljmp
push
add
in
cmp
mov
inc
lods
mov
into
shlb
ss
ret
cmpsb
mov
xor
push
lcall
ss
adc
mov
test
push
into
adc
mov
mov
jns
loop
sub
js
addb
dec
mov
int3
inc
mov
ljmp
mov
mov
repnz
cwtl
adc
jb
movsl
sub
mov
rol
lret
ret
adc
jb
mov
outsl
inc
cmp
lcall
sbb
jb
outsl
add
into
repnz
stos
mov
mov
adc
daa
push
or
xchg
adc
cmp
cld
clc
mov
sbb
inc
adc
xor
call
jb
call
jb
call
jb
call
jb
call
jb
scas
xchg
test
jae
mov
inc
dec
fldcw
lret
test
test
test
test
test
test
test
enter
enter
enter
enter
enter
enter
enter
enter
leave
or
and
inc
pushf
add
pushf
and
pushf
rcrl
loope
jecxz
rcrl
pushf
jno
jae
loop
loop
loop
inc
inc
xor
xor
sub
movb
movsl
bound
in
imul
mov
loop
sar
pop
jb
mov
addl
xchg
test
test
lret
adc
ret
lret
loop
ja
repnz
cs
pop
lcall
cmp
mov
mov
xor
int3
and
and
push
cltd
addl
mov
ret
test
xchg
mov
lret
jae
icebp
lahf
mov
xchg
lret
adcb
subb
and
addr16
xchg
jbe
scas
pop
cmpsl
mov
stos
outsl
push
test
jbe
popa
adc
push
xchg
xor
out
outsb
mov
adc
dec
push
cmp
out
std
mov
cmp
cwtl
cmpsb
gs
xor
jo
rcr
lcall
add
fsubrl
add
mov
fimull
dec
in
outsb
mov
mov
fidivl
jecxz
into
hlt
shrb
xchg
out
cld
jmp
out
xchg
imul
call
pop
hlt
lcall
or
test
int3
je
fidivrs
dec
rcll
add
movsl
je
scas
cmp
popf
inc
int
push
adc
jge
cwtl
jo
xchg
adc
xor
ss
pop
pop
fnstenv
insb
cmp
enter
test
loop
sbb
call
mov
sbb
xchg
jge
inc
lahf
in
lods
jge
jne
nop
loopne
push
mov
sti
sbbb
cmp
push
lcall
lret
divb
xor
jg
mov
cs
out
lcall
and
iret
or
jle
cmp
jl
xchg
shlb
push
stos
push
mov
adc
mov
insb
cmp
jne
repz
push
out
lahf
mov
xchg
push
adc
dec
shll
fldt
dec
into
and
std
add
push
mov
bound
xor
lcall
mov
sbb
add
leave
aaa
loop
mov
lret
pushf
cmp
cltd
add
cmpsb
jnp
mov
mov
mov
fsubr
cld
ds
icebp
sub
jmp
les
movsb
test
pop
mov
into
arpl
sbb
xor
icebp
cmp
es
cmp
scas
sbb
mov
mov
clc
cltd
inc
jns
xor
movsb
stos
enter
insb
sahf
jb
xchg
or
scas
xchg
ds
ljmp
lcall
mov
xlat
fiadds
into
hlt
bound
test
push
in
fistps
mov
ret
lods
pop
jbe
jne
arpl
aas
pushf
pop
icebp
bound
insb
imull
add
daa
mov
sbb
pop
cwtl
sbb
int3
mov
adc
xchg
int
jae
rorl
cwtl
call
pop
add
int
and
scas
test
pop
jns
cmp
rol
sbb
sarb
jp
ds
fiadds
nop
jnp
pop
and
fstpt
cwtl
es
cmpsb
add
sub
push
fidivrs
xchg
cmc
mov
jb
jbe
inc
adc
cwtl
bound
dec
std
addr16
sbb
add
sbb
arpl
shl
inc
push
es
ljmp
inc
add
int
jnp
pop
cs
push
int
jnp
pop
cs
push
sbb
pop
cs
push
int
jnp
pop
cs
push
into
inc
pop
out
in
inc
mov
jnp
pop
cs
push
int
jnp
push
add
cmp
pop
cs
push
int
jnp
pop
rolb
int
jnp
pop
cs
push
int
jnp
pop
cs
push
dec
sub
stc
pop
cs
push
int
jnp
pop
cs
push
sbb
pop
cs
push
int
jnp
pop
cs
push
into
cmp
out
in
inc
mov
push
mov
mov
clc
js
fwait
pop
mov
xchg
test
jbe
pushf
cmpl
sbb
dec
fiaddl
scas
insl
fnstenv
adc
inc
orl
sub
xor
in
das
gs
xchg
mov
pushf
jno
jp
pop
xor
xchg
inc
mov
loop
mov
loop
loop
cwtl
xchg
cmpsb
enter
xchg
dec
nop
jnp
xchg
cmpsb
enter
xchg
dec
xchg
ja
js
fwait
cmpsb
inc
xlat
loop
cltd
adc
xchg
cmpb
sahf
adc
dec
sahf
into
cltd
scas
pop
push
push
pushf
js
outsl
fisubl
inc
push
pop
xchg
nop
lcall
nop
test
inc
mov
ss
lea
pop
xchg
push
pushf
mov
mov
addr16
stc
mov
cmpsb
cmpsb
shll
mov
pusha
push
and
xchg
es
lock
popf
dec
movsb
test
hlt
fsubp
dec
popf
shl
cmp
and
xchg
lea
lcall
cmp
popf
dec
imul
push
pop
adc
push
lcall
nop
inc
push
iret
xchg
adc
stos
fistpl
cltd
sub
xchg
mov
inc
enter
sbb
lds
sbb
out
aas
add
sbb
cli
inc
and
sbb
inc
roll
lret
loop
xor
push
cli
xchg
adc
fwait
jb
test
adcl
push
in
shlb
fwait
fwait
outsl
push
fs
dec
je
loop
xchg
cmpsb
inc
xchg
xor
imul
adc
js
jbe
adc
cs
adc
ret
adc
adc
adc
lret
jo
push
inc
and
push
inc
push
adc
imul
push
adc
iret
push
dec
shl
inc
jl
cltd
cmpl
jnp
push
scas
mov
sub
mov
or
or
lret
loop
addb
pop
mov
xchg
popf
lret
fwait
push
xchg
rol
lcall
lods
or
push
add
repnz
adc
loope
mov
mov
push
jnp
adc
inc
sti
ss
mov
rcll
out
mov
cwtl
dec
gs
shll
nop
test
cmp
fistl
jle
pop
mov
mov
cltd
lret
adc
scas
push
xchg
jnp
xchg
iret
bound
outsl
gs
xor
adc
nop
lods
adc
jecxz
xor
cltd
adc
adc
xchg
and
xor
shlb
andb
sarb
fbstp
push
stos
lods
movsl
mov
dec
adc
lods
jb
mov
push
cmc
sahf
push
shr
add
sub
imul
shrb
lds
xor
fsubrs
cmpsb
daa
outsb
mov
aam
push
iret
sahf
jae
cmpsl
add
cs
popf
test
inc
loope
jle
xor
incb
mov
add
lds
or
jmp
jo
adc
sub
xchg
add
mov
pop
sbb
fcoml
sahf
push
lods
pop
test
xchg
mov
test
xchg
adc
mov
fwait
pop
into
sub
repnz
lea
pushf
dec
cmpsb
jbe
aam
push
xchg
inc
int3
push
mov
mov
cltd
push
test
outsl
mov
leave
adc
mov
pop
mov
jns
enter
adc
addr16
lret
nop
xchg
jmp
pop
scas
mov
push
jge
wrmsr
dec
xchg
nop
mov
rcrb
mov
je
mov
in
mov
xchg
add
add
xor
push
mov
movb
lcall
cmpsb
and
add
cmp
sub
sub
mov
js
mov
lea
clc
sub
adc
push
xchg
cs
jo
enter
sbb
xor
or
loop
or
cmpsb
dec
lea
mov
nop
mov
inc
je
mov
xchg
shrb
push
enter
or
pusha
stc
jns
sbb
movsb
movsb
sti
jnp
repnz
cmpsb
pushf
in
aas
add
lret
push
mov
lret
jmp
out
cmp
jne
leave
cmp
xchg
in
inc
inc
inc
xchg
push
or
push
pop
daa
arpl
adc
lea
cld
xchg
ljmp
call
xchg
mov
mov
movsb
inc
mov
lret
repz
cmpsb
pop
lea
jl
mov
inc
aad
popf
xchg
fcmove
mov
mov
movsb
lods
push
mov
jno
inc
mov
ret
or
ja
addr16
pushf
jp
adc
pop
dec
dec
mov
cmpsb
or
pop
cmpsb
mov
adc
insb
ret
push
outsl
les
imul
sarl
mov
scas
outsb
mov
cmpsb
add
mov
adc
push
rcll
mov
and
jo
nop
or
fdivl
cltd
pusha
dec
adc
mov
test
mov
mov
mov
sub
mov
repz
fwait
jle
xor
xchg
cwtl
xchg
push
xchg
les
xchg
hlt
ljmp
outsb
call
mov
test
dec
mov
je
stos
jmp
add
jnp
pop
in
lods
ss
add
push
and
shlb
mov
stos
popf
stos
pop
push
lret
or
mov
leave
movsl
leave
push
lcall
gs
dec
std
cwtl
push
push
mov
push
fstp
dec
stos
out
mov
xchg
adcb
xchg
test
xchg
xchg
loope
adc
ss
sahf
mov
jae
xchg
xorb
sub
movsb
loopne
out
push
add
xchg
xchg
xor
orb
xchg
aad
in
mov
mov
nop
ficoms
std
int
sub
xlat
dec
jle
jno
popf
divb
test
fisttpll
or
lds
xor
inc
push
lcall
jbe
shlb
add
adc
pop
sbb
cmp
inc
insl
mov
fisubs
lods
cld
popa
stos
ret
cmc
add
cmc
push
jmp
jo
mov
sbbb
push
adc
es
mov
or
xchg
scas
dec
xor
sub
and
lods
pop
test
outsb
in
mov
sbb
cld
jns
or
pushf
jnp
test
push
hlt
dec
mov
icebp
shr
push
cltd
or
xor
stos
movb
cltd
ljmp
test
jo
unpckhps
pop
inc
lods
insl
push
stos
push
jb
mov
or
stos
jns
or
or
outsl
jnp
ss
nop
adc
sbb
xchg
js
addb
mov
xor
sahf
jae
neg
insl
loopne
sub
insl
and
xchg
add
xchg
icebp
int3
cmp
lahf
adcb
push
jae
ficoms
adc
push
mov
aad
in
mov
fcmovbe
je
mov
fcompl
lahf
sbb
jnp
roll
push
jg
fwait
scas
or
fisubl
out
lcall
fistpl
lods
outsl
inc
dec
inc
mov
outsb
inc
jo
int3
sarl
mov
mov
mov
out
movsb
icebp
adc
jecxz
fidivrs
popf
mov
dec
fwait
sbb
inc
inc
rolb
sarl
into
orb
in
and
xor
test
cmpsb
movsb
popf
gs
rolb
jge
sub
dec
in
sub
popf
cmpsb
xor
fbstp
push
sahf
or
mov
pop
inc
out
adc
dec
cli
pop
addr16
adc
adc
mov
xor
testb
cwtl
mov
inc
test
pop
lcall
or
popf
xchg
sbb
fisttpll
enter
bound
lea
lret
add
aam
mov
push
enter
inc
pushf
jmp
cwtl
into
pushf
jo
or
shlb
fucomp
xor
movsb
xchg
or
push
sahf
sub
mov
xchg
dec
pushf
jbe
and
xchg
inc
lret
xchg
rorl
push
lds
andb
jmp
sbb
xor
cwtl
ret
push
in
mov
cmpsl
js
cmp
fistps
outsb
outsl
dec
sub
rorb
sahf
in
mov
pop
xchg
mov
mov
out
jne
xchg
sbb
sbb
mov
mov
lds
fidivrl
fwait
push
js
ret
fists
in
jb
lea
int
mov
jae
jae
jl
sbb
notl
outsb
shrb
mov
mov
push
cwtl
sarb
xchg
ficoml
int
dec
jmp
or
jmp
insl
inc
inc
lock
sub
push
dec
mov
sahf
clc
inc
cmpsl
ret
int3
mov
lret
shrl
mov
adc
mov
push
lock
out
fidivs
push
test
pop
jmp
out
lods
xchg
add
add
inc
jnp
mov
mov
mov
push
jg
dec
lret
jp
call
xchg
loopne
cwtl
cmpsl
leave
push
xchg
push
pushf
jnp
push
into
xorb
in
dec
sub
push
shlb
dec
mov
and
push
outsb
inc
jg
push
cmpsb
and
scas
mov
lcall
xor
rorl
xchg
mov
xchg
sbbl
jge
popf
cmpsb
out
cmpsb
adcl
in
jge
movsb
dec
mov
fnstenv
imul
inc
jle
out
jle
ljmp
or
rcr
into
xchg
cmpsb
enter
fidivrs
inc
mov
xchg
loope
aad
sbb
mov
or
outsl
test
ret
mov
xor
scas
mov
ds
pop
cmpsb
aad
mov
and
mov
lret
fwait
pop
lods
ss
imulb
or
sbb
popa
push
fisttpl
push
into
ds
stos
dec
rorl
adc
mov
xchg
jno
push
lcall
xchg
mov
into
int
ret
cs
pop
fnstcw
lcall
lahf
mov
xchg
adc
scas
cltd
lret
or
rcl
or
sbb
jmp
jmp
sub
imul
mov
sahf
adc
pop
or
sbb
std
push
into
nop
aad
les
xchg
or
int3
aam
mov
xlat
or
push
lcall
mov
mov
fisttpl
nop
or
sbb
movsl
mov
xchg
int
mov
mov
pop
mov
mov
fcoms
in
stos
jno
dec
pusha
sahf
in
lcall
imul
inc
test
push
push
push
mov
dec
jb
adc
ljmp
jl
add
jecxz
mov
and
jo
or
pop
sub
sub
push
aam
shrl
sahf
mov
loope
in
pushf
xlat
in
jge
ljmp
fisubl
out
sub
mov
inc
adc
xchg
jae
mov
jp
lock
rolb
pop
outsl
cmp
adc
add
outsl
outsl
or
shlb
insl
ja
jb
mov
push
ds
icebp
and
das
xor
pop
push
cmp
add
inc
cs
fptan
inc
mov
hlt
mov
sub
out
cmp
xchg
cmp
and
sub
sbb
push
sub
or
mov
push
clc
push
cwtl
inc
movsb
movsb
aas
and
adc
inc
push
sub
fwait
lea
mov
loope
pushf
pop
jle
rcrl
adc
loope
cmpsb
ret
lcall
lcall
out
lcall
sub
pop
movsl
sahf
xchg
out
cmp
cltd
sub
outsl
or
mov
jne
js
mov
out
inc
lcall
sti
add
sbbl
xchg
aas
fwait
mov
and
mov
dec
push
xchg
stos
daa
xor
and
std
adc
stc
icebp
icebp
push
cmp
mov
cmpsl
test
fs
js
and
ja
test
jl
out
je
data16
jl
cltd
add
pop
mov
stos
mov
lods
inc
and
xorb
lret
jb
dec
je
xor
xor
pop
push
test
pop
in
jns
movsb
jl
shrl
xlat
popf
add
xlat
jns
xchg
adc
out
push
xchg
outsb
sbb
neg
lcall
scas
and
popf
fwait
adc
cmp
mov
imul
sahf
aas
fwait
imul
in
mov
imul
pushf
imul
inc
pop
test
jbe
negb
test
sbb
jp
pop
push
jb
adc
mov
jecxz
xchg
lret
push
stos
add
mov
lea
mov
inc
out
jmp
jbe
xchg
mov
jge
cmc
push
push
mov
pop
fisubrl
pop
xor
iret
mov
fwait
int
push
sub
cmc
or
cwtl
xchg
xor
mov
dec
adc
test
int3
loop
test
xor
cmp
pop
jb
jo
push
inc
xchg
ja
mov
xchg
mov
sbb
inc
jns
xorb
in
andb
imul
mov
mov
add
adc
cmpsb
cltd
pop
movsl
push
jmp
adc
imul
xchg
mov
mov
mov
jae
es
in
dec
aas
shrl
es
rcl
pop
pop
lahf
mov
test
sub
sbb
int3
jl
js
jb
out
mov
addw
adc
fnstsw
xchg
push
shlb
xchg
pop
cmp
lahf
es
push
pop
sbb
mov
push
in
out
stos
push
test
bnd
cld
and
rorb
adc
enter
adc
sahf
adc
popf
adc
aad
repnz
adc
idivl
aad
out
jo
imul
jno
and
jae
xlat
inc
inc
sbb
loop
mov
xchg
adc
sbb
mov
lret
mov
jecxz
outsl
sahf
shlb
scas
lret
fxch
outsb
or
orl
aam
sti
adc
lock
xorb
jo
rorb
mov
mov
cmpsb
imul
pop
cmpsb
or
popf
push
cmp
push
fwait
lds
mov
lea
push
jp
lea
movsb
sub
ret
negl
ds
push
into
xchg
push
sub
mov
flds
jns
jge
sbb
lahf
sahf
movsb
mov
icebp
enter
mov
xchg
sub
mov
sub
inc
push
ret
mov
fmull
stc
xchg
pop
pop
enter
outsb
adc
outsl
sahf
mov
or
mov
pop
out
je
repz
mov
jae
iret
aaa
sub
hlt
xchg
int
loopne
rcrb
test
mov
pop
jg
fldcw
xchg
scas
jb
jge
jb
hlt
leave
and
cs
lret
cmp
pop
inc
adc
hlt
hlt
ljmp
into
insl
les
xchg
or
popa
gs
push
incb
fldcw
xor
xor
push
cmpsl
xlat
xchg
icebp
mov
jno
inc
lcall
mov
add
in
rcrb
shl
xchg
adc
mov
movsb
pop
xchg
addr16
imul
ds
mov
jbe
fisubrl
mov
lahf
fbstp
mov
insl
xchg
cmpsl
jo
jmp
fdivl
insl
sbb
or
push
sahf
sbb
into
dec
xor
mov
sti
adc
adc
loope
imul
call
lcall
mov
test
or
adc
jecxz
sub
xchg
sub
inc
push
ljmp
popa
lcall
or
and
mov
outsl
je
nop
stos
sub
sahf
pop
add
out
adc
mov
adc
push
mov
cs
rcrl
adc
ds
adc
test
sahf
jge
push
sub
icebp
rorl
xor
sbb
or
rolb
adc
js
enter
push
adc
dec
sbb
jge
dec
pushf
arpl
outsl
mov
xchg
cmp
jne
jmp
lahf
into
ret
lret
mov
mov
ret
cmpsb
sbb
sub
pushf
ret
nop
insl
mov
lods
mov
dec
add
mov
pop
aas
mov
hlt
cmp
out
arpl
xchg
or
ljmp
push
rorb
mov
enter
sbb
adc
adc
cltd
mov
sbb
mov
rclb
xchg
lret
xchg
sbb
fldcw
mov
cltd
test
cwtl
test
fwait
lahf
sbb
imul
lret
xchg
popf
inc
or
mov
mov
mov
mov
or
nop
or
cmp
cmp
adc
mov
aad
lahf
mov
lahf
lcall
test
xchg
lahf
lret
xor
iret
lahf
mov
dec
mov
lahf
insb
mov
mov
aad
lahf
insb
lcall
aad
lahf
insb
lret
jns
or
sbb
sbbb
pusha
xchg
and
pushf
aad
lahf
pusha
sbb
aad
lahf
pop
cwtl
cltd
aad
cwtl
and
and
and
cmp
cmp
cmp
cmp
movsl
or
xchg
mov
je
imul
mov
stos
outsl
int
mov
ss
adc
push
cmp
xchg
arpl
add
mov
mov
movb
jb
push
add
pop
inc
mov
rclb
jbe
loop
mov
mov
sbb
jbe
scas
data16
cmpsb
xchg
push
sbb
addr16
push
xor
mov
sti
cmp
or
jb
ret
arpl
shlb
and
adc
xor
addr16
rcrb
mov
fcompl
xchg
out
sarl
mov
outsl
mov
addr16
xchg
mov
add
subl
fwait
outsb
cmp
bnd
dec
adc
inc
outsl
mov
lahf
int3
imul
sbb
xchg
jge
bound
or
mov
inc
into
pop
test
pop
cmpsb
stc
out
test
add
inc
adc
push
scas
xchg
mov
pop
lcall
adc
imul
ljmp
mov
cmp
lea
iret
lret
dec
outsb
xchg
adc
cltd
std
mov
fchs
in
adc
mov
cld
xor
sahf
push
in
outsb
jnp
jb
sbb
into
mov
fimull
sub
jmp
or
pop
xor
sub
sub
scas
xchg
mov
pop
xchg
orl
pop
xchg
adc
xchg
repnz
inc
outsl
xchg
fimull
cmp
mov
inc
out
cmp
inc
ss
adc
mov
popa
xchg
mov
adc
enter
rorb
lock
or
adc
jb
in
ljmp
rcrb
lock
mov
sbb
into
xor
out
jb
mov
xlat
adc
mov
cmp
clc
nop
jge
mov
scas
xchg
mov
dec
les
cli
inc
mov
jmp
mov
pop
fwait
clc
mov
lea
xchg
mov
sbbl
pop
xchg
sub
sbb
call
fisubrl
cmp
mov
ds
mov
or
mov
cwtl
nop
int
lods
lahf
pusha
fsubr
rep
push
into
negl
jb
mov
rcrl
mov
or
out
outsl
jb
adc
sbb
popa
nop
mov
mov
pop
in
or
mov
repnz
imul
jbe
cmp
mov
sahf
iret
xor
jge
jmp
mov
repnz
outsl
xchg
fnstcw
addb
pop
pop
arpl
clc
xchg
jge
sbb
aaa
movsl
enter
push
fistl
leave
in
data16
mov
pop
fcoml
and
dec
popf
push
popf
in
imul
dec
or
xor
sahf
test
nop
test
xchg
mov
inc
mov
or
popf
fwait
das
aam
cmp
mov
and
or
loop
cmpb
pusha
xlat
add
sti
jb
cmpsb
and
jae
sbb
sbb
cltd
push
lret
int3
xchg
lret
sub
dec
mov
clc
dec
push
xchg
mov
push
jb
cmp
aam
add
out
add
rclb
lcall
nop
cmpsl
mov
addr16
js
outsb
outsl
mov
cmp
jnp
scas
xor
js
xchg
mov
sbb
mov
cmp
add
clc
lret
insl
lret
js
xchg
mov
jl
int
nop
rorb
fimull
out
outsb
rcr
sbb
xor
push
jg
incb
add
shlb
dec
into
shrb
arpl
jge
mov
jno
mov
lret
insl
sbb
mov
fdivs
pop
int3
cmpsb
lcall
add
fidivrs
test
jns
add
mov
cwtl
mov
leave
xchg
push
jb
xor
fwait
mov
add
in
imul
add
arpl
data16
push
cmc
std
sbb
stos
push
loope
cmpsb
mov
fimull
fiadds
cmpsb
repnz
xchg
ror
adc
xchg
cmpb
mov
mov
adc
shl
mov
adc
sbb
scas
xchg
adc
mov
add
adc
xchg
fmuls
outsb
rorb
inc
iret
lret
test
fiadds
adc
iret
fwait
push
insb
js
in
lret
mov
into
ficoms
sub
sbb
push
stc
mov
jno
leave
jns
dec
xchg
jle
into
xchg
lret
movsb
and
ret
int
les
out
mov
enter
movsl
dec
mov
and
int3
lret
in
pop
push
fcomps
inc
pop
jno
jnp
push
rol
adc
sbb
inc
sbb
adc
sahf
xorb
loopne
nop
rcl
pop
xor
nop
rorb
xchg
and
dec
outsl
aam
in
pop
imul
inc
or
mov
je
lcall
and
test
mov
pushf
and
pop
shl
lds
filds
cmp
out
lcall
jecxz
fstps
popf
mov
add
pop
jl
pusha
pushf
daa
sbb
pop
jb
sub
nop
adc
adc
les
jnp
outsb
icebp
or
mov
sub
arpl
adc
lahf
mov
ret
xor
sbb
push
loopne
jmp
jno
jmp
push
es
pop
popa
cmpsb
cmpsb
fucomi
jo
and
scas
inc
adc
rclb
xlat
repnz
std
ja
pop
xor
lret
push
test
mov
mov
imul
mov
nop
mov
ljmp
cmpsb
jnp
adc
add
les
test
cld
xor
jbe
pop
inc
cs
insb
arpl
hlt
cmp
push
sarb
xorl
sub
test
test
aaa
scas
xor
mov
cmp
push
or
addr16
je
jno
push
add
jg
js
cmpsl
loope
iret
cmp
test
insb
cmp
mov
movsb
jecxz
and
out
jo
mov
xchg
imul
popf
xchg
sahf
push
lock
adc
cmp
and
rcl
xchg
or
jecxz
sbb
or
dec
fiaddl
out
and
sbb
xor
aad
or
dec
outsl
stos
pop
jecxz
popf
imul
test
cs
xchg
sbb
or
ret
rol
enter
test
movsb
mov
or
inc
dec
cmp
fcmovnbe
or
lret
xchg
das
or
loop
inc
pop
inc
jmp
movl
pop
adcb
adc
or
mov
xchg
cwtl
cmc
mov
lahf
xchg
pop
inc
mov
cmpsb
or
cld
jo
jno
mov
inc
dec
repnz
in
mov
pop
jnp
push
cwtl
sub
push
lret
rcr
mov
jno
ror
stos
ja
mov
test
rcrl
xor
int
dec
nop
sub
clc
push
xchg
push
test
jnp
dec
into
test
xchg
mov
or
xchg
push
xor
pop
lock
xchg
cmpsb
leave
adcb
inc
movsl
inc
ds
in
test
cmp
xchg
xchg
xor
cmpsb
sbb
and
lret
adc
cwtl
jb
ds
inc
int3
or
cmp
mov
div
cld
and
and
push
mov
stc
loopne
jno
jl
arpl
enter
loopne
in
sti
fiaddl
xchg
std
pop
push
das
inc
sahf
mov
sbb
fmuls
pop
roll
or
push
xor
mov
mov
add
add
add
add
add
add
and
push
in
lods
lcall
lret
mov
mov
mov
mov
pop
jae
inc
and
dec
ss
js
into
xchg
jbe
sub
xchg
outsb
and
mov
scas
push
adc
mov
cmp
xlat
xchg
jg
push
fisubl
xchg
bound
cmpsb
stos
add
sahf
push
adc
push
scas
adc
daa
outsb
xchg
push
fiaddl
sub
add
outsb
push
arpl
mov
sahf
adc
out
dec
loope
mov
xchg
mov
xchg
jg
fadds
out
jns
mov
mov
jmp
enter
mov
loop
fidivs
sarb
fistpl
outsl
xchg
mov
xor
enter
fmul
fbstp
into
fistps
divl
stc
mov
jno
fisubrs
pop
iret
mov
cwtl
leave
arpl
ret
mov
mov
jnp
insb
cmc
adc
cmp
lods
outsl
xorl
push
lret
pop
sub
aad
mov
inc
dec
mov
add
and
dec
mov
sti
lret
popf
into
jb
ficomps
dec
adc
ja
jp
push
pop
scas
jecxz
sbb
dec
sub
mov
pop
scas
mov
pop
pop
jb
inc
adc
neg
in
pop
mov
lret
in
adc
fmull
lret
hlt
frstor
or
ret
sub
and
aaa
pop
fmulp
stos
stc
adc
adc
xor
test
push
cltd
lcall
mov
ror
mov
or
mov
sbb
dec
lcall
imul
clc
imul
lret
rclb
mov
mov
jl
adc
inc
add
mov
mov
cld
mov
incb
push
outsl
xorl
mov
push
pop
add
les
mov
mov
mov
nop
adc
xchg
fstl
notb
lock
dec
adc
ret
sahf
jl
inc
sbb
loop
scas
scas
xchg
adc
xlat
test
shrl
push
xor
inc
cmpsl
movsb
repnz
stos
fmul
in
imul
in
cmpsb
and
jle
or
rcrb
xchg
inc
inc
cwtl
inc
inc
mov
pop
xchg
and
cmpsb
rclb
adc
jo
addr16
mov
testb
bound
addr16
insb
popf
or
xchg
fcompl
jo
mov
inc
je
popf
shl
mov
jo
dec
xor
fcmovu
lods
jp
dec
lahf
cmpsl
lcall
int
cmpb
or
xchg
or
or
js
out
push
jne
aam
stc
lods
fnstsw
and
insb
rcll
roll
adc
mov
xor
adc
push
ja
fsubs
movsl
fsubrs
aas
fsubl
jae
push
cmpsb
int
filds
imul
pop
mov
imul
xchg
imul
xor
pop
into
pushf
lea
cmpsb
mov
pop
scas
push
lcall
cltd
mov
mov
aad
sbb
mov
push
cmpsb
jae
jmp
lds
xchg
nop
mov
stos
jmp
mov
xchg
ret
or
movsl
push
inc
xchg
sub
xor
sarb
movsb
cld
sbb
cltd
xchg
jo
loop
adc
outsl
push
fwait
outsb
push
push
cs
sub
cmp
cmpsl
lock
nop
cmpsb
mov
cmpsb
lret
pop
repz
and
movsb
push
in
int
mov
push
cmc
push
adc
xchg
sarb
and
in
mov
push
add
repz
dec
daa
xchg
daa
shr
sbb
xchg
outsl
xchg
fiadds
sbb
outsl
push
lods
adc
cwtl
fstpt
push
mov
adc
stos
lcall
adc
sub
adc
in
push
adc
sub
jb
rcrb
mov
insb
cmpsb
mulb
sub
ja
mov
popf
leave
push
dec
jne
fldcw
dec
jns
scas
out
pop
lahf
dec
xchg
jge
shrb
stc
das
dec
outsl
sahf
push
das
and
subb
or
stos
mov
repnz
aam
or
sbb
sub
mov
daa
sbbb
add
xchg
out
in
rcr
mov
mov
lahf
repnz
out
sbb
fcompl
xchg
repnz
loopne
icebp
jno
xchg
scas
iret
mov
inc
inc
imul
pop
stc
pop
sub
or
lret
adc
sub
arpl
sti
enter
daa
mov
jl
cmp
jno
inc
scas
cmpsb
add
mov
lea
mov
movsb
cmpsl
outsb
sub
cwtl
push
cli
in
jge
inc
cmpsl
pushf
pop
in
inc
bound
and
pop
es
outsl
xor
sbb
clc
loopne
rolb
push
fstpt
cli
jno
into
test
adc
hlt
lcall
push
iret
inc
xor
ds
xchg
mov
xor
xchg
test
sahf
dec
in
mov
bound
enter
sbb
jae
cmpsl
push
iret
xchg
lcall
das
cs
cmp
ret
in
popf
ret
popf
inc
xlat
je
add
enter
push
pushf
add
push
pushf
subl
pushf
mov
mov
jmp
enter
adc
mov
cmc
cmp
mov
dec
das
push
sbb
cmp
lcall
movsb
mov
push
mov
jg
dec
xor
sbb
mov
test
mov
in
sbb
sub
lcall
mov
pop
xchg
mov
push
or
rorl
xorb
int
insl
test
aam
inc
or
or
dec
rcrb
cmpsl
jle
jle
shlb
adc
mov
mov
lock
fidivrl
rcr
ret
pop
scas
into
lock
stos
mov
aam
jbe
mov
xchg
ja
jle
pop
and
lds
add
jge
and
jl
outsb
xchg
jne
test
cltd
push
cmpsl
into
dec
xchg
mov
es
fidivrs
inc
cmp
nop
pushf
imul
xchg
fstps
cwtl
fbld
cmc
mov
movsb
stos
lret
push
dec
push
xchg
inc
lods
fdivl
pop
dec
mov
enter
fisttpl
loope
lret
inc
jo
cmp
shrb
in
cs
ds
inc
jg
inc
push
xchg
enter
ds
add
and
and
into
clc
mov
sbb
xchg
adcb
insl
movsb
mov
mov
insl
mov
rolb
loope
inc
xchg
adc
insb
inc
add
mov
dec
aas
data16
imul
jns
push
mov
nop
cmpsb
adc
lahf
jge
addr16
aad
inc
cltd
loope
jge
cmpsb
inc
sbb
lea
mov
pop
addr16
lcall
into
pop
pop
mov
cmp
adc
scas
jno
mov
nop
shrb
mov
push
cmpsb
xor
xor
ret
dec
cltd
inc
cmp
cs
push
test
in
into
cmp
mov
rclb
cmp
int3
lods
pop
popf
lret
jp
dec
push
insb
push
push
mov
xor
sub
inc
int3
push
jecxz
ds
sbb
cmp
lcall
int3
dec
test
lret
xor
stc
jmp
mov
inc
inc
int3
and
or
test
jl
int3
sub
mov
or
dec
dec
push
or
push
mulb
fbstp
mov
push
xchg
loope
mov
in
add
push
aaa
mov
inc
xor
das
jl
inc
pop
dec
cltd
lahf
add
pop
lcall
fmulp
sbb
xor
sbbl
xor
mov
push
mov
xorb
sbbl
cltd
xor
inc
push
aam
lods
nop
and
adc
sub
adc
sahf
gs
cli
in
mov
jl
push
cmpsl
gs
jno
sahf
and
int3
xor
hlt
ljmp
into
jb
ljmp
mov
aam
stc
and
jmp
out
mov
inc
scas
enter
adc
sti
idivb
push
jl
lahf
aad
or
adc
cli
mov
test
imul
mov
iret
lahf
mov
sbb
sti
adc
rcr
jmp
add
test
out
insb
repnz
sub
mov
outsl
test
xchg
xchg
imul
mov
mov
or
cs
mov
push
xchg
sbb
pop
pop
in
jl
lcall
mov
int3
nop
test
stos
out
and
rorl
clc
movsb
mov
xlat
insl
jne
pop
jp
adc
mov
xchg
nop
sbb
mov
sub
cmpsl
paddq
in
add
jp
sub
aas
xchg
xchg
nop
movsl
cmp
xchg
mov
adc
lods
push
lret
or
mov
sub
loop
mov
lock
clc
inc
in
and
ja
sbb
pusha
jb
pop
push
push
mov
jbe
cmpsb
inc
fcoml
jnp
fidivl
movsb
sbb
jnp
xchg
sub
inc
mov
xchg
std
mov
jno
fsubrl
loope
sahf
adc
int
sbb
jnp
mov
pop
xlat
lds
fcomp
test
enter
jae
cmpsb
stc
in
xchg
test
cmpsb
and
dec
mov
or
mov
mov
xchg
outsb
mov
mov
mov
decl
mov
ficompl
ror
lea
fiaddl
nop
lret
push
push
jns
adc
xchg
xchg
push
cli
pop
xchg
pop
and
mov
es
and
lcall
rorl
jp
adc
lock
push
jae
mov
mov
into
stos
xchg
fidivl
lcall
lret
sahf
mov
inc
ds
popl
insb
test
test
sahf
push
inc
ret
adc
test
push
sub
lcall
jl
mov
push
and
push
cmpsb
out
lds
imul
adc
imul
enter
pop
loop
sti
push
jp
test
lcall
lret
push
push
add
push
adc
mov
sub
enter
sbb
push
repz
dec
popa
mov
imul
push
pop
and
lcall
or
cltd
sbb
push
popf
pop
in
pop
cwtl
imul
inc
outsl
sbb
mov
push
nop
dec
and
jl
sub
mov
adc
xor
mov
xchg
sbb
fimuls
sbb
sahf
sbb
or
rorb
test
popf
daa
scas
lea
sbb
xor
cmpl
adc
lahf
std
pop
das
inc
mov
pushf
xchg
hlt
lea
fdivl
shlb
test
aas
pushf
push
jle
int3
je
lcall
mov
fs
sbb
lea
stos
scas
fwait
and
add
insb
xor
icebp
int3
mov
add
loop
sub
sahf
cwtl
xchg
int
mov
pop
subb
lahf
inc
cwtl
mov
or
aad
adc
out
rorb
out
stos
jae
jbe
push
idivb
jle
lahf
pushf
negb
in
lods
stos
int3
jbe
addb
mov
leave
jbe
jge
dec
call
pusha
adc
shlb
or
gs
jle
pusha
mov
push
cld
fdivr
out
pop
int3
lods
lret
js
push
dec
in
add
xchg
adc
cmc
inc
insb
test
aam
push
lds
xchg
xor
daa
mov
je
and
pop
pushf
inc
scas
push
push
mov
mov
lcall
jle
xor
jae
and
inc
and
cmp
dec
or
js
xchg
outsl
mov
pushl
xor
pushf
push
mov
xchg
xchg
pushf
movsl
mov
lcall
aam
jle
and
push
lcall
jge
push
xchg
mov
cmpsb
or
sub
xchg
mov
in
movups
jns
movsl
aam
imul
dec
pusha
nop
cmpsb
push
mov
jle
jl
mov
mov
dec
push
mov
xchg
sbb
repnz
or
pop
cmc
push
pushf
mov
lds
inc
jb
xor
mov
xchg
in
jg
mov
lea
ss
lret
repz
mov
cmpsb
ds
xchg
xchg
into
lahf
test
lret
jo
cwtl
adc
inc
shlb
mov
sbb
inc
fnstsw
cmpsl
jnp
add
mov
rorb
nop
xchg
into
fisttpl
jbe
sahf
lret
in
rcrb
pop
adc
push
lea
mov
adcl
test
dec
jno
inc
sbb
or
mov
ja
inc
xor
jl
or
mov
push
push
adc
movsl
jns
dec
shlb
jecxz
lcall
scas
into
jbe
pop
out
js
lahf
stos
mov
lods
js
pop
fmul
cmpsb
jae
cld
add
xchg
push
sbb
jo
lret
lcall
ljmp
xchg
sti
pushf
sbb
enter
push
jb
jle
xchg
xchg
jb
movsl
fbstp
into
jp
jmp
movsl
nop
lret
or
xor
test
outsb
inc
xorl
xchg
insl
add
mov
xor
mov
inc
enter
sub
push
lea
sbb
push
push
jae
and
add
lea
mov
rcr
cmp
inc
inc
push
daa
inc
cmpsl
push
xor
bound
sbb
inc
and
out
push
jne
inc
sbb
pop
and
push
xchg
imul
addr16
jbe
push
addr16
fstl
cltd
gs
jb
test
lea
test
sub
stc
dec
movsb
push
outsl
add
sub
sub
pop
out
push
outsl
mov
lahf
xchg
shl
hlt
push
xchg
arpl
shl
lret
testb
outsb
sbb
scas
cltd
sarl
loope
sbb
add
jbe
push
xchg
sbb
shlb
push
adc
ds
cmpsb
inc
sub
and
xchg
rolb
insl
mov
and
cli
cmp
sbb
or
mov
cmp
jne
arpl
pop
mov
xchg
lods
mov
int3
enter
push
int
sub
enter
sbb
xchg
cmpsl
test
mov
fstps
fsubrs
into
fsub
adc
rclb
cltd
outsb
jns
scas
imul
push
push
mov
shrb
into
push
add
leave
mov
into
test
adc
lods
xchg
into
lods
mov
mov
mov
push
mov
mov
mov
jp
in
xchg
mov
test
and
xor
lret
call
and
dec
mov
and
add
push
or
xchg
mov
jg
xchg
dec
gs
loope
dec
jae
fbld
push
or
js
incl
push
sarb
fisubrs
mov
xor
bound
rcr
repz
mov
mov
sbbl
cmpb
cltd
pop
add
insb
dec
rcll
test
fwait
sbb
lcall
add
mov
sar
not
mov
pushf
stc
cmpb
movb
mov
pusha
call
pop
xor
xor
sbb
dec
jns
mov
movsl
ljmp
hlt
pcmpeqb
out
rcll
xchg
fidivrs
add
or
scas
jae
cli
dec
ljmp
cld
jmp
ljmp
imul
mov
xor
cld
js
push
loopne
or
outsl
mov
and
inc
jo
imul
fmuls
dec
and
xor
pop
ret
xor
push
and
mul
les
decl
push
mov
xor
add
loopne
hlt
cld
mov
ja
jl
or
cmp
pop
outsl
pop
enter
clc
or
xor
jbe
out
cmp
add
out
in
cli
leave
inc
fsubl
mov
popf
rcr
fsubl
xchg
movsl
insb
xchg
or
mov
dec
pop
insb
or
rcll
mov
scas
mov
sub
clc
call
jne
gs
xor
fs
insb
add
test
clc
push
cmp
add
bt
stc
cmp
pushl
jmp
cmp
pusha
push
mov
jmp
movzbw
not
mov
movzbl
not
mov
push
movsbw
pop
call
pushf
pushf
add
call
shl
push
call
adc
pushl
pushl
pushl
ret
pushf
mov
lea
je
shl
shl
clc
shr
add
shl
stc
xor
xor
sub
push
rcl
inc
pop
shr
movzbw
sbb
clc
mov
xor
sub
adc
add
movsbw
push
add
add
neg
bsf
inc
sar
mov
pusha
bt
shr
mov
test
cmc
test
cmp
pushf
pushf
lea
je
bt
cmp
jb
push
pushf
pusha
lea
je
stc
cmp
pusha
lea
je
pusha
pusha
movl
lea
jmp
lea
jne
dec
bt
btc
mov
rcr
rcl
movsbw
sub
not
mov
pushf
pushf
movw
lea
jmp
jmp
add
pusha
pushf
movb
mov
movsbw
call
pusha
pushf
jmp
xchg
add
add
bsr
mov
push
sub
call
jmp
test
clc
cs
inc
cmpsl
fs
adc
out
or
mov
dec
cs
mov
push
inc
mov
nop
or
mov
jle
je
and
sbb
mov
test
cmp
test
incl
je
jnp
and
sub
add
jg
sub
arpl
enter
fwait
mov
xor
leave
lock
dec
pop
sti
mov
cmpsl
fs
inc
push
mov
or
pushf
inc
leave
add
sarl
cwtl
pop
inc
pop
sbbb
orb
insl
mov
loop
idivl
mov
xchg
xor
ret
imul
jge
cmpl
jb
pushf
pop
sub
cld
mov
or
scas
scas
and
adc
adc
mov
mov
lds
mov
sbb
jmp
stos
cmp
cmp
sarb
xorb
lcall
and
pushl
ret
push
popa
repz
in
inc
lock
push
add
flds
cli
lds
mov
ficomps
arpl
aaa
mov
sti
add
ss
jae
sbb
cmp
inc
push
and
dec
movsb
dec
dec
dec
outsb
xor
inc
stc
lret
mov
mov
and
hlt
push
push
lea
jmp
aaa
mov
sub
stos
lret
adc
sub
jns
and
fucom
and
jle
mov
test
shlb
pop
sub
jbe
mov
repnz
repnz
adc
jecxz
mov
sub
jbe
xor
add
mov
subb
inc
bt
or
call
jp
repnz
insb
imul
bnd
imul
repnz
push
call
insl
push
adc
xchg
repz
ljmp
xchg
jae
xchg
outsb
in
repz
push
jb
lock
xchg
push
repnz
jb
insl
hlt
out
lock
outsb
lock
out
xchg
outsb
lock
hlt
imul
adc
movsb
add
cmp
clc
mov
bt
pusha
mov
test
pushl
pushf
pushf
mov
lea
je
clc
pusha
add
cmp
cmp
pusha
lea
jb
stc
cmp
call
pusha
lea
je
call
mov
test
or
pusha
lea
je
call
bswap
xor
in
pop
repz
pop
xor
xor
mov
and
jp
scas
in
into
mov
push
scas
mov
inc
outsl
popa
test
add
cwtl
cmc
and
cmc
mov
cmpsl
xchg
rclb
addb
mov
std
ret
cmp
sub
seto
lea
movsbl
movzbw
lea
mov
mov
lea
ja
push
jmp
cltd
xchg
imul
je
fisttpl
xchg
iret
ret
mov
repz
push
push
aad
push
mov
sbb
push
int3
sbb
adcb
cmp
fistps
and
jnp
dec
push
lods
enter
les
mov
fidivrl
pop
push
daa
out
lret
repz
aam
aas
test
xor
shr
sub
repnz
aad
fidivs
or
and
cli
cwtl
aaa
dec
add
push
fsubs
aad
jmp
iret
movsb
cmpsb
mov
xor
jb
pop
mov
xor
mov
call
pusha
pusha
call
add
dec
outsl
arpl
inc
jb
add
movsbw
jmp
jmp
not
sar
mov
pushf
repnz
push
pushf
call
bsf
mov
call
push
pop
sti
sub
ds
jmp
add
add
jl
mov
mov
push
add
mov
mov
stos
aam
mov
inc
mov
and
sbb
cmpsb
and
pop
out
inc
insl
je
in
mov
scas
mov
or
and
subl
lods
sub
call
lea
call
pusha
lea
jne
not
push
call
push
push
add
xor
ss
test
loop
push
cmp
push
jbe
lret
jns
pop
aam
push
jp
pushfw
ja
mov
popf
cltd
into
rclb
mov
mov
mov
push
clc
repnz
imul
inc
out
jle
test
jmp
and
test
cmp
jmp
push
jmp
rol
or
sub
mov
stc
cmpb
pusha
lea
jne
btc
aad
or
bt
sub
bts
mov
sar
rol
add
shl
mov
test
pushf
bt
clc
test
call
jmp
mov
jmp
inc
test
imul
loope
pusha
xor
sub
clc
cmc
or
call
bswap
bswap
movzbw
pop
not
pop
lea
mov
xchg
pop
movsbw
pusha
pushf
mov
movw
pushf
push
pushl
ret
pop
pop
imulb
xor
inc
lock
push
inc
push
sbb
mov
outsb
and
stos
lea
aam
repnz
xor
call
scas
mov
inc
mov
ljmp
jg
push
mov
pop
add
cmpsl
cmp
fcompl
and
pusha
lea
je
shl
neg
mov
pusha
mov
sar
clc
add
movsbw
mov
push
stc
pusha
test
pushf
pushf
call
jmp
mov
in
jo
push
out
mov
scas
daa
sbb
sti
pop
xchg
or
pop
nop
aad
adc
movb
inc
mov
dec
sbb
scas
arpl
push
xor
sub
bswap
mov
cmp
jnp
dec
jns
mov
cmpsl
and
out
push
push
inc
dec
push
mov
repz
dec
lock
insl
jne
ret
loop
iret
sahf
adc
fcoml
rol
lahf
movzbw
lahf
mov
not
sub
shl
shrd
rcr
push
sub
lea
push
jmp
pop
mov
daa
xor
outsl
fcmovnbe
and
push
inc
popa
cmp
add
lahf
ret
jecxz
xor
jg
cmp
push
mov
xchg
sbb
cmp
inc
and
inc
dec
pusha
and
out
mov
shr
mov
and
pushw
dec
test
xchg
inc
inc
clc
adc
add
addr16
xchg
subl
mov
pusha
out
loopne
dec
bound
subl
sahf
dec
cs
ret
dec
dec
add
cmpsb
data16
mov
or
iret
inc
jecxz
xchg
sbb
sub
nop
mov
jl
push
lea
je
jmp
clc
pusha
rcl
mov
jmp
movl
movb
movl
push
movb
push
pushf
lea
jmp
stos
sub
mov
mov
adc
xor
int
stos
movsl
jb
push
jg
xchg
movsb
fisubl
dec
and
dec
lcall
xor
bound
lods
adc
aas
out
xor
imul
nop
fwait
inc
pop
xor
push
outsb
jp
mov
mov
dec
mov
ficompl
testb
rclb
ss
mov
fidivs
jle
dec
test
cmp
pushf
mov
lahf
lahf
scas
xor
push
leave
cmpsl
or
dec
or
ficoms
lret
xchg
mov
dec
les
push
mov
dec
cmpsl
inc
adc
mov
or
sbb
sub
arpl
xor
inc
push
bound
xor
xchg
push
insb
dec
es
adc
out
stos
bound
jg
adc
xchg
xor
in
jle
cmp
pop
lret
sti
cld
xchg
and
cltd
xchg
or
push
rcrb
or
out
aaa
xchg
mov
push
inc
scas
mov
fstpl
mov
lret
inc
inc
push
pop
test
jns
and
in
dec
fidivrs
psubw
xor
rorl
pop
mov
call
testl
and
ret
adc
loop
adc
adc
pop
dec
push
dec
dec
movsl
lcall
inc
faddl
jp
and
daa
mov
mov
pop
sbb
pushf
mov
push
adc
add
lods
daa
dec
lret
xchg
out
lock
das
dec
pop
mov
mov
adc
popf
jb
push
lret
outsb
inc
pop
jg
stos
xor
xor
xchg
fidivl
push
sbb
add
cmc
pop
and
mov
xchg
mov
add
inc
in
setbe
dec
je
movsb
push
dec
ret
lods
mov
inc
push
popf
xchg
sbb
xor
xor
test
pushf
jp
ffree
mov
sti
clc
ljmp
mov
sub
aad
xor
and
cwtl
dec
int
mov
or
hlt
jnp
test
cmp
jle
lea
aaa
int
in
insb
dec
mov
add
sbb
sbb
xor
mov
orb
fcoms
mov
lcall
cwtl
or
cltd
jl
lcall
or
sub
xor
imul
adcb
mov
bound
dec
xchg
xor
stos
mov
inc
adc
outsb
nop
es
leave
fildll
pop
sub
lret
out
cli
cmp
mov
loopne
jmp
fdivl
pop
xlat
les
mov
push
mov
aaa
out
cmp
fs
cmp
cmp
pop
mov
or
les
sbb
cmp
sbb
mov
jns
push
ror
xchg
fcoms
mov
push
mov
int3
cmp
sub
push
or
lds
pop
dec
fdivrl
xchg
mov
jecxz
push
lods
mov
cmovle
inc
lcall
adc
mov
bound
leave
ffreep
adc
sub
push
sbb
out
pop
loop
out
jle
fmuls
jp
fiadds
inc
out
or
jmp
inc
sub
sub
sbb
outsb
inc
mov
mov
outsb
jecxz
loop
mov
rclb
push
dec
cwtl
inc
arpl
lret
stos
mov
adc
sub
jbe
outsb
lds
xor
push
movl
adc
in
fs
fcomps
iret
push
outsb
stos
mov
sarb
or
xor
add
xchg
sti
inc
xchg
jecxz
jb
mov
adc
andb
les
mov
in
fsubrs
add
jp
lds
dec
sub
fnstenv
mov
into
frstor
xchg
es
xor
mov
inc
pop
lods
shll
imul
movsb
xor
jne
xor
es
mov
pop
and
cmpsb
dec
pop
dec
mov
push
rorl
dec
out
test
and
mov
fnstcw
inc
pop
mov
pop
daa
sbbb
sbb
imull
sbb
xorl
push
inc
xchg
mov
into
adc
xchg
in
dec
adc
fwait
jns
mov
xchg
out
jle
sbb
stos
insl
outsb
nop
sbb
sub
notb
adc
and
cmc
pop
and
jl
out
jp
ss
inc
popf
iret
pop
loope
push
pop
ret
xchg
cmp
dec
push
fucomi
xor
mov
jg
stos
outsb
out
lods
out
inc
into
fmull
mov
repnz
stos
dec
jae
sahf
out
pushw
inc
dec
ljmp
inc
insl
xor
pushl
sub
rcll
and
adc
pop
fwait
test
xlat
push
stos
xor
push
dec
push
add
fstl
jg
sarb
xor
xor
or
jecxz
mov
pusha
xor
hlt
lock
jp
inc
add
aam
mov
lcall
mov
or
pop
adc
mov
insb
lds
lret
xchg
and
adc
sub
xor
xchg
stos
daa
stos
data16
xchg
pop
loop
inc
adc
xchg
fwait
in
repnz
outsl
cmpsl
adc
pop
jno
jae
jbe
repz
adc
test
cltd
xchg
sub
or
cmp
jle
test
jbe
mov
inc
or
cmp
scas
rorl
adc
outsb
sub
rcl
lods
mov
test
icebp
ficoms
fnstenv
push
cmp
jns
xor
out
jmp
fmuls
sbb
adc
xor
out
aas
inc
cmp
pop
jp
jecxz
cltd
inc
sbb
cs
pusha
push
ret
inc
test
cmp
sahf
or
mov
pop
mov
out
sysexit
mov
imul
rcrb
pusha
pop
xchg
inc
sub
push
nop
mov
mov
mov
je
cmc
push
fadds
sbbl
jae
jb
and
int3
pusha
pop
mov
cmp
xchg
pop
fisubrl
ret
mov
data16
lcall
push
cmp
sbb
or
loop
mov
out
pop
cmpsb
inc
xor
rorl
pushf
leave
out
xor
adc
push
mov
das
aam
xchg
adc
lahf
sbb
mov
or
cmp
xor
jp
inc
pushf
cmp
mov
fnstsw
test
sbbb
adc
mov
popf
sub
mov
push
inc
stos
stos
inc
dec
jge
mov
pop
inc
adc
js
into
push
loope
mov
testb
xchg
lahf
xchg
jmp
jmp
mov
data16
fildll
add
add
xchg
outsb
fmul
shlb
mov
notb
stos
out
cmpsl
sahf
fwait
adc
fucomip
cmpsb
xchg
xor
pushf
stos
push
push
sbb
ficomps
pop
sub
xorb
pop
lods
daa
das
mov
inc
mov
stos
lods
in
lret
push
mov
jp
fwait
inc
addr16
daa
pop
pop
and
dec
scas
mov
mov
dec
aad
popf
testl
jb
lret
inc
xchg
add
xchg
and
or
and
mov
sbb
jo
jl
clc
outsl
test
adc
lea
sbb
scas
into
adc
cmp
dec
dec
xchg
inc
ljmp
xor
sub
es
sar
shll
cmp
or
mov
mov
lcall
pop
or
mov
loop
mov
jb
out
fstpt
dec
jle
mov
inc
cmp
test
outsb
inc
stos
sbb
push
or
mov
lods
sahf
xor
push
iret
stos
push
sbb
push
cmc
mov
xchg
pushf
enter
cmp
jle
jge
loopne
jae
rcr
rorb
call
pop
inc
or
lock
int3
mov
push
sbb
mov
jle
xor
inc
mov
sbb
mov
loop
cwtl
xor
pop
int3
and
inc
dec
fdivp
sub
es
cmp
inc
mov
dec
xor
cmp
sub
push
stos
js
lods
insb
addl
hlt
out
stos
jne
je
xchg
add
xor
dec
cmpsb
leave
repz
jbe
int3
sbb
pop
rcl
mov
push
xor
aad
ret
sub
leave
xor
jmp
xchg
push
ret
mov
adc
push
add
pop
ret
add
adc
dec
scas
sub
mov
lahf
lret
cmp
cltd
xchg
test
sti
js
dec
gs
jae
enter
popf
push
or
imul
sahf
inc
mov
xchg
es
push
push
cmp
inc
mov
mov
ret
fs
jns
notb
lcall
push
add
pop
push
leave
sub
xor
cwtl
pop
scas
jne,pt
cltd
push
xor
inc
push
lret
add
xor
lea
xor
stc
push
pop
fs
mov
sbb
sahf
dec
mov
inc
or
sahf
enter
loopne
movsb
enter
pop
jbe
lea
jmp
pop
jns
in
pop
testl
push
mov
push
xchg
sbb
mov
xor
lcall
or
push
aaa
add
test
cmp
in
sub
testl
ds
mov
popf
pop
and
test
adc
es
mov
xchg
daa
mov
xor
mov
mov
out
sbb
mov
pop
cmp
jns
lods
js
xchg
or
inc
xchg
shl
pop
or
xchg
int
movsb
fsts
sub
pop
xchg
stos
int3
inc
mov
push
shll
sub
mov
pop
or
adcb
mov
jbe
adc
xlat
ret
jg
push
cs
inc
sbb
int
mov
nop
xchg
clc
or
xlat
stos
mov
dec
in
pusha
inc
dec
xlat
push
inc
insl
gs
adc
cmp
adc
sub
push
jmp
ljmp
movsl
pop
xchg
dec
cmp
sbb
cmpsl
dec
addl
lcall
insb
int3
sbbb
loopne
out
jno
xor
insl
sbb
add
push
jb
inc
pop
ss
xor
rcr
imul
fldl
fidivl
clc
xchg
sahf
xor
lea
stos
mov
fdivrs
mov
dec
push
cmpsb
push
pop
xor
mov
or
lahf
jmp
push
push
xor
inc
jge
bound
push
lret
xor
inc
cmp
xchg
sub
nop
xchg
or
rcrl
ficompl
jns
pop
aaa
movsl
repz
loope
and
fnsave
mov
sysenter
mov
inc
das
sahf
push
das
push
xchg
adc
cmp
cmp
push
out
shrb
mov
test
fdiv
fdiv
dec
pop
xor
insl
dec
adc
xor
sub
cld
jbe
ljmp
mov
jns
ds
stos
pop
mov
jmp
mov
mov
or
test
mov
shrb
movsb
call
pop
js
int3
lcall
xchg
xchg
std
pop
sub
aaa
cmp
mov
sub
xor
out
inc
rep
lret
or
movsb
and
jno
xchg
pop
pop
pop
ret
mov
movl
and
ret
mov
xor
pop
sub
or
or
xor
jp
mov
adc
mov
pop
jbe
dec
pop
dec
xor
xor
mov
es
or
xor
neg
cmp
outsb
scas
lods
stos
pop
xor
xor
adc
xor
aad
or
rcl
lods
jb
or
add
mov
mov
xchg
adc
fs
stos
aam
or
pop
aas
outsb
mov
xchg
cwtl
push
icebp
jecxz
rcr
into
clc
xchg
lcall
dec
add
push
mov
pop
push
outsb
mov
jbe
rolb
int
sarl
lea
dec
dec
cltd
xchg
daa
push
xchg
mov
insl
push
and
dec
sbb
cmp
leave
push
loop
jbe
inc
pop
insb
loope
push
int3
and
cmpsb
push
push
adc
dec
sub
cli
add
loop
lret
shrl
xlat
stos
inc
es
sbb
or
sbb
cwtl
push
pop
sub
pop
cmp
mov
xchg
call
mov
shrl
fsubs
push
dec
push
or
adc
mov
sbb
inc
imul
mov
sbb
mov
jnp
inc
pop
scas
jnp
sbb
sub
lret
add
sbb
push
push
push
pop
push
push
adc
lock
divb
jecxz
xlat
xchg
push
fwait
jge
mov
lea
mov
jg
out
fwait
popa
arpl
es
mov
or
fiaddl
fildll
dec
leave
adcb
xlat
cmp
and
mov
mov
xchg
daa
push
movsb
repz
das
cmp
fdivs
push
xchg
movsl
lcall
adc
lcall
and
mov
lds
loopne
mov
imul
nop
je
cmp
pop
jecxz
pop
dec
xchg
xchg
xchg
lods
mov
xchg
test
lcall
jp
outsl
lcall
xchg
mov
fldenv
in
lcall
xchg
add
stos
jbe
dec
ds
and
push
rclb
sub
fmul
mov
xchg
out
lret
jo
sahf
leave
fildll
aad
cmp
cwtl
sbb
arpl
mov
jmp
sar
inc
aad
pushf
xchg
notb
xor
fidivrl
xor
stos
cmp
dec
lret
scas
push
jb
mov
cmp
es
in
cmpsb
pop
stc
push
push
fmulp
mov
xchg
stos
push
xchg
jnp
scas
or
js
xchg
into
aad
cmp
fcomi
decb
out
cltd
fisubl
mov
push
faddl
cwtl
lock
mov
xor
repnz
push
jbe
pop
and
cmpsb
pop
mov
mov
xchg
push
adc
in
push
pop
clc
and
or
pop
popf
xor
and
out
mov
adc
sbb
notb
push
push
bts
dec
mov
loop
and
loope
lcall
sahf
jle
pusha
test
mov
into
cmp
jle
lahf
cmpsb
fdivrl
cmpsb
into
stos
and
fcmovb
adc
mov
adc
lret
clc
xor
out
sbb
jle
push
scas
lcall
cmpsb
and
js
icebp
xchg
cld
stos
lock
clc
out
ficoml
mov
mov
xor
out
xchg
lods
inc
dec
shl
mov
mov
xor
shll
xchg
jle
jnp
inc
ret
mov
dec
rorl
es
sub
movsl
inc
xor
sbb
inc
cmp
and
mov
xchg
stos
mov
es
cli
jno
sbb
xor
bound
push
push
sub
es
stos
mov
inc
popa
out
push
sbb
int3
pusha
leave
icebp
dec
adc
fcompp
mov
sarb
jb
and
xchg
and
popa
js
add
aas
mov
xchg
mov
int3
arpl
shlb
lcall
xchg
and
ret
popa
nop
leave
outsl
mov
xor
jbe
mov
lcall
dec
loopw
loop
ss
jp
mov
call
lcall
sub
repnz
std
in
out
mov
in
pop
jb
sbb
or
adc
mov
inc
shlb
push
scas
dec
into
insb
push
outsb
ret
ret
sbb
fiaddl
pusha
xchg
out
and
push
ja
enter
jb
mov
xchg
sar
imul
adc
mov
xchg
stos
div
call
mov
jbe
jne
imul
adc
push
and
dec
enter
xchg
xchg
js
push
or
push
mov
jle
fisubrl
rorb
cmpsb
rolb
fadds
push
mov
inc
outsl
fbstp
inc
xor
cmp
and
notb
push
push
dec
xor
push
outsb
shlb
xor
adc
xchg
dec
outsb
cltd
insb
bound
xor
or
jne
jb
es
fstp
mov
scas
rcrb
sahf
jne
andb
pushl
push
mov
jp
cmp
inc
mov
lcall
jg
shrb
mov
push
lods
sbb
popf
cltd
fcomip
or
jbe
inc
xchg
mov
popa
or
cli
sbb
lods
out
jno
xchg
repnz
jle
lcall
scas
es
jbe
int3
dec
enter
es
push
es
cs
out
fisubrs
fmulp
lcall
cmp
or
jb
test
or
mov
or
outsb
xchg
dec
ret
cltd
xor
adc
jle
lods
into
push
nop
cmp
sarl
negb
xor
mov
in
push
push
es
mov
in
adc
mov
cmpsb
clc
xor
mov
mov
es
cmp
je
ljmp
and
cwtl
hlt
push
pop
in
test
iret
lret
mov
mov
fabs
dec
xor
xchg
jns
shl
inc
push
or
mov
ret
adc
adc
mov
out
aaa
xor
das
cli
testl
bound
mov
mov
cs
mov
cmp
fwait
pop
fucomp
lcall
inc
push
shlb
sub
popa
adc
cmp
fcomps
mov
in
imul
dec
add
adc
adc
adc
fsub
cld
adc
or
cmp
dec
insb
loope
mov
jns
movsl
cmpsl
into
push
sbb
aam
push
fcomi
push
mov
dec
andb
push
ss
push
shlb
lods
mov
xchg
es
cwtl
fsts
xor
dec
jp
sbb
xchg
scas
in
push
jo
stos
mov
aas
fdivl
xchg
ljmp
mov
fcompl
mov
xor
xchg
xor
lods
xchg
fdivl
adc
inc
punpckldq
sub
insl
hlt
out
jp
xor
lock
rcrl
inc
daa
cmp
orb
rcll
sti
sub
dec
mov
add
mov
adc
inc
mov
or
xor
or
das
lea
inc
lret
stos
xor
lods
mov
dec
shl
inc
bound
jnp
dec
xlat
aaa
jecxz
push
inc
lcall
mov
xor
jmp
mov
add
mov
pop
inc
sbb
fcmovbe
int
adc
inc
test
sahf
into
pop
and
xor
pop
push
imul
sbb
fcmovnb
stos
cmp
arpl
cwtl
xchg
push
and
sbb
cmpsl
outsb
lea
mov
adc
push
or
lea
subb
dec
cs
shll
adc
fldl
dec
fs
mov
repnz
test
out
adc
dec
push
pop
or
fwait
test
pop
fnsetpm(287
sub
int3
xchg
cltd
and
bound
adc
cmp
xchg
cmpsb
lods
and
mov
popf
jmp
sbb
repnz
adc
cmp
and
jae
mov
xchg
jle
call
lods
mov
xchg
xor
jns
fdivrs
dec
imul
or
mov
dec
inc
cltd
mov
xorl
enter
clc
and
xchg
arpl
ret
and
daa
and
adc
push
dec
sub
xchg
pop
pusha
pop
repnz
cmp
fdivr
data16
les
push
xchg
pop
xor
and
xlat
add
stos
and
lods
xchg
xor
mov
pop
shlb
jnp
lret
jg
mov
jmp
orb
filds
orl
imul
adc
ret
cmpsb
xor
das
xchg
xor
and
pop
test
push
inc
add
push
fwait
lods
hlt
fistpll
cs
or
sub
push
cmp
xchg
xor
addr16
stos
mov
add
jns
adc
push
mov
lret
ljmp
mov
fucom
mov
mov
mov
stos
xor
js
adc
data16
cmpb
insb
dec
sahf
adc
xlat
mov
addr16
cmp
outsb
and
mov
mov
inc
mov
and
push
add
inc
mov
push
dec
pop
lea
xor
jle
data16
jb
mov
js
xchg
mov
cwtl
sar
sbb
lods
push
fdivl
and
adc
cmp
cwtl
dec
and
sbb
dec
xor
lret
jno
mov
push
nop
fs
int3
add
cmpsb
or
mov
filds
and
adc
and
dec
rclb
adc
pop
push
enter
fcomps
cmpsb
adc
mov
sub
inc
into
ret
xor
inc
ss
ds
leave
jns
imul
sub
lret
jmp
pop
fadds
lea
scas
or
jo
ja
loopne
mov
int3
dec
ret
mov
aad
xor
fidivl
mov
lcall
and
sub
ja
or
inc
push
cmp
mov
mov
dec
pop
pop
es
fcomp
xor
push
addr16
sbb
push
xchg
mov
pop
mov
add
sbb
mov
cmp
ds
insb
cli
xor
adc
cmp
lahf
or
mov
push
mov
pop
ljmp
push
lcall
cmp
dec
lods
ret
insl
push
aas
stc
fwait
push
xor
stos
push
lcall
iret
cmp
sahf
push
outsl
pop
mov
insl
hlt
hlt
into
outsb
mov
xchg
hlt
cwtl
xor
gs
repz
xor
aam
push
int
add
mov
icebp
jbe
fabs
mov
std
call
or
xchg
ja
les
inc
sti
jmp
fiaddl
sbb
nop
cmp
les
divl
lods
mov
int
sub
je
rcr
jb
in
sbb
mov
mov
push
inc
loope
dec
sarl
adc
icebp
and
jbe
inc
idivb
or
push
in
rcll
xchg
arpl
pop
mov
out
es
push
xor
push
or
xchg
jl
in
aam
int
dec
orb
aad
test
cmp
sbb
in
inc
sub
add
pop
xchg
clc
push
xor
popf
or
mov
stc
pushf
xchg
iret
adc
xchg
xor
sbb
ret
sub
repnz
and
pop
jge
xchg
imul
adc
dec
and
sbb
aaa
xchg
xor
ret
fildll
cs
stos
pop
std
inc
push
or
sar
inc
inc
dec
insl
es
push
mov
outsb
xor
repnz
ja
pop
xor
mov
xchg
pop
insl
sub
cltd
push
jle
movsb
aad
ss
lods
xchg
mov
in
mov
pop
fsubr
xor
fwait
xchg
xor
mov
leave
movsb
iret
arpl
shlb
out
add
push
mov
sub
xchg
or
jbe
fimull
aas
mov
rclb
outsb
jae
sub
push
xchg
pop
movsl
pusha
cmp
fincstp
stc
inc
or
jnp
sbb
sub
and
dec
xor
inc
mov
mull
lea
push
inc
adc
adc
mov
mov
xchg
popf
jle
pop
dec
inc
out
out
setg
mov
sbbb
xor
ret
sbb
rclb
in
inc
lcall
test
lret
jns
xor
int
lret
jbe
stos
rcr
adc
and
pushf
flds
ror
jo
negb
out
cli
mov
lret
mov
ror
jge
dec
ljmp
insb
jmp
sarb
repnz
jne
push
push
push
push
pusha
cli
aam
mov
into
adc
xchg
into
scas
dec
adc
fwait
maskmovq
divl
loopne
mov
lcall
test
and
aad
daa
cmp
es
pop
aam
pushf
movsb
insl
in
imul
loop
and
mov
aam
mov
xchg
in
add
cli
shlb
xlat
xor
cmp
inc
jnp
sub
sbb
xchg
hlt
fiadds
xchg
nop
mov
adc
inc
cmp
leave
lret
push
xor
inc
movsl
dec
icebp
rorl
mov
mov
dec
sbb
xchg
xorl
mov
mov
aaa
leave
xor
jbe
mov
outsl
cmc
inc
mov
fwait
and
dec
sbb
sbb
data16
xchg
cmp
movsl
jl
xor
pushf
fsubl
js
leave
push
stos
nop
pop
add
fwait
xchg
dec
dec
cmpsl
mov
xor
icebp
dec
lods
jnp
pop
popa
cmp
push
rcll
fcoml
xor
movsb
lahf
cmp
mov
xchg
sar
mov
aas
inc
lret
inc
pop
cmp
and
dec
xor
jb
sub
adc
inc
or
mov
xor
bound
dec
mov
lcall
jno
test
push
add
stos
mov
lods
push
scas
shl
push
shll
cmpl
or
inc
dec
test
mov
icebp
adcb
mov
out
mov
movsl
mov
pop
divb
hlt
inc
shlb
mov
jno
repnz
push
xchg
pop
bound
pop
push
jmp
sub
lahf
cmp
mov
pop
xor
inc
imul
movsb
ljmp
adc
out
sub
shll
sbb
out
mov
xchg
xor
popa
push
test
iret
stc
lahf
int
mov
cwtl
xor
inc
fs
dec
sar
inc
dec
pop
shlb
rcrb
jne
iret
cmp
lcall
inc
adc
es
dec
add
ja
inc
pop
pop
mov
cmp
xor
arpl
jmp
and
fwait
notb
add
leave
addl
lcall
xor
faddl
gs
js
xchg
stos
in
mov
cmpsb
mov
pop
aaa
jne
fs
push
adc
icebp
orb
data16
notb
insl
pop
cwtl
cmp
jnp
jle
ljmp
lods
imul
iret
out
fsts
inc
jp
push
sub
mov
jle
insb
and
xchg
inc
dec
outsb
push
mov
mov
xor
mov
lea
fisubl
lahf
les
gs
dec
sbb
jb
ss
xchg
xchg
cmp
sbb
imul
inc
lahf
xor
jnp
inc
mov
cmp
sbb
cltd
into
lahf
mov
stos
pop
sbb
xchg
loopne
xchg
inc
push
pop
mov
xor
aam
sti
mov
xor
xchg
inc
jb
cmp
jnp
rclb
xor
pop
sbb
mov
add
add
cmp
xchg
inc
mov
rcll
insl
flds
outsb
inc
lahf
xor
push
jecxz
lahf
mov
mov
stos
cmp
jp
add
movsl
adc
push
shlb
test
lahf
movsl
push
jno
mov
mov
sahf
inc
or
mov
adc
fdivs
sahf
fwait
or
sub
adc
xchg
mov
in
bound
sbb
sub
sub
mov
sbb
es
es
mov
jl
lcall
lea
insb
push
sbb
cmp
cwtl
xor
push
int
push
sbb
iret
xchg
xor
jno
out
lret
pop
mov
jmp
fdivs
or
orl
dec
fwait
jmp
pop
inc
sbb
sahf
stos
jp
pop
cwtl
inc
push
add
sub
fisttpll
bound
dec
lds
adc
shlb
popf
pop
insl
addr16
xor
jmp
out
pusha
test
jmp
xor
pop
pop
into
push
push
mov
xor
gs
xor
mov
jle
add
cwtl
xchg
stos
sub
cmp
lahf
int3
int
inc
stos
or
dec
jbe
icebp
out
bnd
push
push
popf
sub
inc
cmpsb
fcmovb
aam
mov
js
insl
pop
jo
or
pop
pop
andl
fistpl
mov
stos
xor
ja
out
and
dec
mov
pop
pop
pop
es
xchg
mov
and
flds
mov
mov
repnz
es
orl
cmp
repnz
or
pop
pop
xor
stos
adc
out
xchg
mov
push
movsb
inc
xor
fdivrp
xor
mov
cmpsl
mov
mov
imul
mov
leave
dec
adc
adc
mov
dec
and
mov
pushf
mov
rclb
cmpsb
add
xlat
sarl
push
jecxz
enter
xor
or
add
orb
or
jbe
lods
insl
stos
push
mov
lahf
adc
sahf
push
cltd
sub
xchg
scas
jbe
xor
pop
or
stos
iret
stc
adc
cmpb
push
ret
jl
pusha
insl
dec
fsub
movsb
insb
cmp
sarb
dec
in
int3
dec
mov
xchg
push
sbb
fistpll
in
push
test
and
hlt
rorb
xchg
xor
popf
inc
pop
mov
xor
push
test
lret
mov
or
xor
rcr
mov
xchg
xlat
test
mov
imul
dec
adc
shlb
xchg
xchg
pop
jp
imul
mov
lret
lret
lret
lret
leave
in
jp
hlt
inc
mov
xor
jmp
dec
inc
adc
notb
popf
dec
push
in
jp
mov
mov
or
out
ficomps
sahf
mov
mov
imul
sti
loope
push
aas
lcall
mov
test
lahf
frstor
bnd
fdivp
push
ret
or
rorl
lea
sub
pop
sbb
mov
loop
ljmp
mov
jb
push
push
push
cmpsl
scas
insb
stos
jmp
popf
push
mov
xchg
xchg
adc
leave
jno
and
add
rcrb
jecxz
xchg
dec
ficoml
loope
xchg
cmp
subb
test
shlb
leave
pop
loope
mov
testb
jo
frstor
lahf
push
mov
out
xchg
int
dec
adc
es
or
sbb
movsb
mov
pop
lret
mov
testb
pop
lcall
push
xchg
add
push
scas
mov
repnz
mov
and
clc
ljmp
ljmpw
xchg
js
adc
js
xchg
cmpsb
cli
mov
xor
cli
rorb
jp
data16
jp
bound
stos
ficoml
ja
push
imulb
lcall
js
nop
incb
inc
outsb
lret
outsl
sub
or
mov
jo
adc
xchg
ret
test
cwtl
sahf
into
and
cmpsb
cwtl
stos
nop
add
popf
inc
push
fldcw
jbe
pop
jl
mov
adc
push
xchg
or
pop
push
scas
jp
ljmp
push
ficompl
jb
add
xchg
popa
and
insl
cmp
mov
mov
lret
adc
xchg
cmp
pop
outsb
jp
xchg
lahf
shrl
mov
mov
loop
jae
dec
int3
popa
or
icebp
sti
iret
in
nop
int3
sbb
es
xor
dec
std
or
cmp
sti
mov
std
lods
adc
pushf
ljmp
mov
mov
das
sarb
dec
mov
or
insl
pop
lods
pop
jbe
lcall
pop
sbb
and
cmp
rcl
rorb
push
cli
stc
fisubrs
adc
out
enter
dec
xor
push
mov
sub
xor
xchg
mov
nop
mov
mov
dec
xor
dec
jle
lret
scas
xchg
jno
nop
push
jns
fsubl
xor
xor
sbb
xchg
inc
das
ja
sub
lea
das
out
fidivrl
cli
out
push
jecxz
fwait
and
mov
cwtl
sbb
xor
xchg
mov
rdtsc
add
mov
dec
gs
or
and
mov
sub
push
ret
sbb
stos
subl
push
sub
add
int3
push
addr16
jnp
insl
xchg
cmp
mov
xor
xchg
mov
dec
add
inc
repnz
cmp
mov
mov
jb
cmp
aad
out
xchg
fwait
gs
nop
push
sub
stos
pop
test
mov
dec
fisubl
jo
adc
out
sbbb
jl
cmp
inc
lcall
dec
xor
fdivrs
jbe
imul
mov
fildll
pop
mov
push
mov
sbb
adc
cwtl
repnz
enter
les
mov
jp
mov
dec
cld
cvtps2pi
sbb
add
sub
adcb
outsb
adc
iret
adc
outsb
ror
push
add
lods
imul
das
out
aam
pop
dec
imul
inc
xor
nop
jl
push
adcb
sub
jb
pop
inc
fdivrs
sbb
lret
lret
dec
and
xchg
push
mov
dec
nop
mov
mov
les
jmp
or
or
dec
es
dec
je
cld
sub
leave
or
aaa
add
outsl
pop
push
ds
pop
sbbb
jecxz
es
pop
adc
sub
dec
and
push
add
cmc
push
xchg
fidivl
and
rclb
lock
loope
mov
or
repnz
jl
lahf
stos
jecxz
mov
or
aas
mov
add
stos
ret
push
es
push
sbb
pop
mov
sbb
inc
xor
jmp
test
ss
jge
js
xchg
in
add
mov
adc
push
and
dec
icebp
jle
orb
out
dec
es
xor
mov
mov
jae
into
imul
pop
insb
imul
fsubrs
sub
cmp
adc
data16
ficompl
mov
add
adc
shll
cltd
and
movsl
or
dec
push
push
fldl
scas
negb
addb
pop
rclb
sbb
mov
sahf
into
jnp
shll
xor
or
mov
in
push
jae
jecxz
jge
mov
xchg
xchg
in
dec
sbb
imul
jns
adc
or
push
sbb
or
data16
fwait
sbb
repz
cs
mov
jb
add
lret
push
iret
dec
stos
sbb
pop
mov
mul
xchg
stos
pop
sbb
jo
movsl
mov
xchg
iret
insl
ss
pushf
mov
add
fsubrl
arpl
out
dec
test
mov
lcall
nop
jbe
jnp
sbb
mov
xchg
cmp
add
cmp
fs
inc
sbb
test
repz
dec
mov
inc
dec
inc
popf
xor
sbb
push
sub
setb
inc
leave
sub
je
or
lcall
push
popf
leave
lcall
cltd
pop
popa
jmp
es
sbb
imulb
xchg
xchg
inc
cmp
ret
xchg
lea
pop
or
inc
shrl
xor
pop
pop
dec
aad
push
notb
dec
inc
mov
orl
jae
mov
lcall
ror
cmp
fildll
push
sbb
xchg
insb
mov
and
add
popa
jbe
xor
xor
cmpsb
pop
dec
sub
sar
pop
mov
xor
mov
lret
push
ja
nop
pushf
sti
jnp
pop
cli
popa
xor
cmp
push
ret
mov
stc
pop
mov
xor
sub
push
lret
iret
and
cmp
inc
jge
out
ljmp
mov
call
sub
inc
sub
pop
adc
xor
loopne
xchg
jb
mov
fisubs
dec
call
mov
push
stos
lahf
scas
or
adcl
xchg
fidivrs
je
inc
loopne
mov
inc
mov
adc
ficomps
ficoms
shlb
jg
lahf
jne
cmpsl
push
push
xor
mov
xchg
aas
jbe
and
loope
jl
adc
lret
jns
cld
mov
fiaddl
ss
test
or
dec
insl
jmp
xor
test
std
jae
jb
mov
push
lcall
aad
lret
add
pop
aad
add
push
stos
or
add
int3
fxch
test
je
test
aad
adcb
movsb
fstpt
in
int3
and
sahf
rcr
repnz
dec
and
insb
push
cli
cmpsb
leave
in
push
xchg
xchg
inc
dec
or
fcmovu
jbe
inc
jnp
jnp
shrb
std
xchg
xchg
leave
faddl
fldenv
cli
push
mov
jb
mov
lock
mov
aaa
into
xorl
push
push
xchg
add
out
or
mov
std
fldl
or
andb
pop
mov
jp
xlat
jns
rcl
mov
inc
dec
je
xor
inc
sub
lcall
and
hlt
test
adc
dec
mov
popa
insb
jp
aas
repnz
jle
push
ss
lea
xchg
add
sbb
jno
pop
jns
test
ficoms
cli
out
mov
lea
dec
mov
outsl
pop
imul
pop
imul
repz
popa
out
sub
fnstcw
fiaddl
fcmovbe
imul
addr16
cmpsl
add
ficompl
sbb
ss
cs
lcall
mov
ja
sub
mov
pop
mov
cwtl
call
movsb
xor
dec
pop
dec
jno
das
imul
sbb
push
clc
xchg
mov
xchg
cmpsl
scas
dec
xor
addr16
jno
mov
xchg
scas
xor
dec
adc
sbb
inc
cmp
loopne
sub
lea
pushf
rclb
movsl
dec
lea
fmuls
stos
fprem
stos
xor
jecxz
jmp
add
dec
sub
es
mov
jns
dec
stos
adc
jl
nopl
adc
stos
and
or
rorb
out
bound
adc
and
stc
sub
mov
mov
mov
sbb
xor
outsb
mov
cmc
cmp
insb
mov
sub
and
inc
mov
mov
mov
pop
ficoms
loopne
add
xor
daa
outsb
inc
push
andb
jns
or
cmp
mov
or
lock
xor
insl
pop
cs
fwait
mov
inc
xchg
jae
push
dec
cwtl
dec
inc
mov
mov
mov
jle
imul
push
xchg
imull
in
inc
xor
adc
fnstsw
es
les
rol
xchg
pop
les
xchg
mov
fs
out
into
mov
cmp
mov
pop
or
jge
cli
push
inc
shlb
adc
or
mov
sbbb
mov
out
sbb
pop
fucom
xor
dec
add
data16
xor
push
mov
aas
pop
jne
push
sbbl
sahf
cmc
repnz
xchg
push
decb
fs
out
adc
js
xrelease
fs
stos
mov
sbb
xchg
fistpll
push
xchg
jmp
xor
clc
std
cltd
inc
sub
push
inc
daa
sbb
xor
jae
dec
sub
pushf
outsb
shll
out
inc
jg
dec
sub
mov
dec
xchg
push
cmp
xor
mov
insl
fstps
jmp
lret
jns
das
jge
shll
jb
bound
mov
mov
jae
clc
mov
jbe
sub
cmpsb
xchg
inc
test
es
test
push
lret
jae
xlat
loopne
adc
lcall
mov
push
xchg
std
pop
fimull
insb
mov
jns
cwtl
xorl
fcomps
push
leave
insl
adc
pop
sahf
dec
fisubl
in
fstpl
jl
pop
test
push
inc
sahf
in
sub
cld
add
rol
loop
shll
cmpsb
push
and
jl
arpl
xchg
inc
jmp
push
mov
mov
mov
popa
xchg
xchg
mov
repz
jle
adc
pop
mov
mov
je
dec
insb
fwait
cld
mov
push
push
dec
xchg
adc
ja
fists
dec
jg
mov
xchg
addr16
pop
rcll
out
adc
dec
mov
aaa
lea
xchg
in
popa
dec
or
mov
shlb
lods
mov
or
fldt
and
xchg
dec
int3
sub
shr
adc
hlt
add
shlb
xor
inc
jp
and
in
mov
imul
adc
cmp
popa
inc
les
dec
das
nop
cmp
sub
or
adc
cwtl
push
lcall
xor
into
fimuls
push
and
fcom
out
mov
lahf
shrb
and
xchg
leave
movsl
leave
ret
divl
push
bound
cs
cld
fcoml
jae
mov
int3
pop
jne
sub
das
lock
xor
gs
aas
out
sbb
movsl
dec
push
fwait
repnz
or
sub
sahf
cmp
push
iret
in
pushf
inc
push
int3
mov
or
int
fcoms
sub
mov
jno
push
cmc
mov
fnstenv
sarb
stos
jb
sti
jl
push
enter
rcll
or
jmp
repz
adc
hlt
mov
push
adc
push
stos
inc
pop
lds
sbb
fimuls
lods
mov
fwait
push
dec
push
mov
cld
sub
js
sub
fs
add
in
pop
dec
mov
pop
stos
inc
data16
nop
sub
es
dec
xchg
loop
push
mov
popa
scas
mov
arpl
lret
in
lock
mov
loop
popa
out
sarl
test
mov
pop
or
xchg
push
cli
test
mov
fists
cmpb
mov
lea
or
dec
enter
insl
inc
imul
push
aam
sub
dec
xor
shlb
mov
clc
rdtsc
mov
xchg
push
js
mov
rolb
loopne
and
pop
outsl
mull
dec
xchg
inc
imul
leave
std
into
push
push
inc
jo
fdivs
cli
pushf
mov
sbb
pop
inc
in
cmpsb
ficomps
sub
dec
adc
jns
dec
push
adc
mov
or
mov
sub
cwtl
xor
hlt
into
in
inc
in
mov
stos
cmp
rolb
push
imul
hlt
mov
mov
mov
scas
push
int3
dec
fcomps
push
mov
pop
icebp
xor
test
sbbw
lea
enter
xor
push
jae
jecxz
inc
mov
dec
ja
mov
mov
arpl
mov
notb
adc
into
daa
mov
mov
xchg
ffreep
pusha
leave
jne
lods
scas
adcl
cwtl
aaa
xchg
cmp
ss
sub
jne
or
popf
ds
pop
inc
fsub
ljmp
sbb
repnz
pop
inc
adc
dec
popa
push
stos
int3
adc
in
adc
add
addr16
insl
xor
out
aam
lahf
mov
stos
xor
mov
add
sbb
xor
fwait
daa
dec
test
dec
stos
jecxz
loop
pop
cmp
lahf
mov
insb
in
rorl
lret
fldenv
add
gs
jp
cltd
out
cmp
push
lcall
cmp
gs
cmp
addr16
clc
xor
add
inc
sbb
scas
cs
mov
fidivs
sbb
in
sar
stos
stos
xor
or
cmp
lahf
data16
xor
or
jae
dec
stos
mov
movsb
or
jle
daa
das
lret
mov
outsb
pop
int3
sub
inc
jb
lret
push
xchg
dec
and
dec
sarb
push
insb
push
nop
subb
xchg
ret
pop
aam
out
xchg
mov
je
xor
xchg
rclb
add
xchg
data16
stc
jbe
add
sub
dec
mov
sub
mov
std
pop
push
mov
dec
push
push
or
xchg
mov
xchg
das
push
repz
sbb
stos
mov
adc
xor
aad
push
cltd
in
sub
lea
push
jne
add
cmpsb
mov
das
fisubl
in
enter
in
sbb
aam
aas
outsl
aam
push
ja
fldcw
push
popa
xor
ja
inc
mov
movsb
adc
lea
fistpll
inc
outsb
repz
add
and
gs
jle
leave
push
sti
or
inc
imul
add
into
jae
sub
iret
shll
mov
dec
inc
lret
xchg
imul
stos
push
inc
xchg
cmpsb
frstor
push
mov
xchg
cmp
xor
or
pop
test
aas
ljmp
inc
sub
xor
mov
int
sbb
fwait
cltd
pop
cmp
repnz
push
inc
insb
mov
in
adc
fbstp
clc
lret
les
or
pop
and
jae
cli
cmp
stos
lods
xchg
imul
xchg
and
pop
xor
pop
jb
int
sub
xor
cmp
pop
xor
in
dec
popa
adc
sbb
call
mov
pop
call
lret
xor
rclb
loopne
movd
xlat
movsl
cmp
sbb
push
xor
int3
je
sbb
movsb
pop
xchg
xchg
dec
xchg
loope
sti
sbb
loop
fidivl
jns
je
push
lret
dec
jns
cmc
xor
repnz
inc
mov
mov
push
les
out
cmp
mov
rolb
mov
mov
mov
iret
pop
lea
push
sbb
int3
daa
xchg
scas
xchg
cmp
inc
and
wrmsr
add
cwtl
es
dec
pop
test
in
sub
push
cmp
flds
pop
xchg
add
rcrl
jmp
push
mov
sahf
lea
push
insb
or
jmp
lods
imul
push
lds
stos
or
std
or
mov
in
shl
data16
out
shlb
fwait
push
xchg
in
pushf
mov
rcr
sbb
fadds
pushf
aaa
loopne
outsb
sub
rol
and
test
aaa
xchg
mov
sti
adc
loop
cmp
call
cltd
xchg
xchg
enter
fiadds
inc
mov
mov
xchg
dec
jne
push
pop
inc
testl
cmp
neg
sbb
xor
pushf
not
and
pop
jecxz
cmp
out
lret
xchg
rorb
mov
call
and
lea
push
out
call
fcomps
rorb
in
fldl
out
pop
fimull
sbb
push
stos
xchg
or
dec
rorl
in
add
or
dec
daa
mov
in
sub
mov
dec
adc
xchg
and
ja
fs
fimuls
xor
insb
psllw
test
inc
adc
pop
xchg
xchg
cwtl
ljmp
lods
sahf
in
xor
jo
and
es
and
testb
and
xlat
les
cmp
mov
leave
out
jnp
gs
pop
in
dec
repnz
or
stos
mov
sub
or
sbbb
cmc
insb
xchg
lea
lahf
es
faddl
out
or
stos
or
stos
addr16
rorl
push
lock
pop
xchg
push
sub
lahf
xor
and
int
ljmp
aaa
pop
add
ljmp
icebp
push
shlb
inc
push
test
aas
sub
sbb
adc
jne
movsl
leave
fs
negb
add
loop
jecxz
je
mov
push
fwait
out
xlat
push
jg
cmp
adc
push
mov
cmp
sbb
lahf
inc
mov
cli
jle
shlb
mov
xchg
dec
fnstsw
ljmp
lahf
cld
mov
nop
dec
rorb
inc
mov
or
adc
popa
adc
subl
push
dec
testb
push
and
jae
cmpsl
arpl
int
adc
lret
sbb
fcmovnbe
and
mov
dec
cwtl
or
insl
xchg
xor
fsubrl
dec
pop
shl
push
lret
adc
idiv
dec
cwtl
lcall
cmp
ss
fcoms
loope
push
pop
xchg
mov
cmpsb
in
and
arpl
lea
cmpsl
loop
mov
imull
push
mov
mov
subb
insb
f2xm1
mov
pop
sub
in
xchg
jb
fsubp
mov
cltd
popf
dec
clc
or
mov
das
mov
leave
xchg
xor
sahf
add
inc
inc
adc
inc
xor
orb
and
cmp
mov
inc
js
test
ret
lcall
lcall
mov
mov
mov
adc
je
inc
fsub
pop
pop
lcall
pop
js
xchg
outsb
dec
cmp
popa
sbb
mov
sub
into
pop
and
mov
lahf
shlb
push
stc
shll
push
mov
arpl
pop
mov
or
aad
jg
ror
xor
lcall
int3
inc
faddl
or
jne
flds
add
mov
xor
bswap
add
sbb
push
xor
pop
inc
dec
push
enter
or
mov
pop
dec
cmpsb
lods
jns
push
imul
hlt
or
jae
adc
adc
sub
outsl
outsb
lcall
cmp
dec
lret
mov
cwtl
enter
xchg
mull
sbb
out
push
sbb
lret
adc
or
mov
xchg
mov
repz
ljmp
jge
ss
lret
in
rorl
adc
pushf
xor
sbb
jno
dec
adc
sub
addb
jle
jno
adc
adc
ret
aaa
ficompl
xchg
out
dec
or
outsl
jbe
and
push
jle
add
std
dec
mov
mov
ficompl
mov
push
xor
push
in
jne
iret
pop
adc
fnstcw
adc
out
movsl
idiv
and
fsts
push
jnp
sarl
mov
lcall
cli
inc
pop
mov
adc
lahf
scas
cmp
adc
or
add
mov
pop
sub
mov
jb
cmp
inc
lods
cltd
dec
stc
pop
insl
mov
ss
xor
cmp
jo
mov
pop
outsl
out
out
jl,pn
mov
fs
xor
mov
xor
or
push
jbe
dec
push
mov
push
jg
out
xor
sbb
mov
stos
sub
pop
sub
outsl
rorb
sub
iret
adc
lea
insl
leave
and
push
sub
popa
bound
sub
pushaw
mov
or
xor
inc
pop
in
sbb
inc
jp
xor
mov
stos
dec
pop
xor
outsb
pop
fs
mov
push
xlat
cmc
ds
cwtl
lcall
bnd
imull
and
xchg
pop
pop
popa
lahf
pop
cmp
rorb
orb
stos
out
adc
mov
adc
pop
push
push
in
xchg
imul
lods
enter
cs
cmp
push
sbb
dec
mov
mov
adc
pop
iret
xor
dec
add
xchg
stc
inc
sbb
scas
xor
loopne
mov
rclb
xor
out
cmp
lea
jg
push
scas
or
push
jge
out
call
sbb
and
xchg
dec
or
inc
mov
xchg
popf
dec
or
mov
xchg
jae
stos
out
insl
lcall
movsb
in
aas
add
pop
and
xchg
insl
cmpsb
inc
out
mov
pop
xor
jb
shlb
adc
lea
mov
mov
test
xchg
xor
mov
dec
xor
dec
jle
filds
and
sub
mov
in
xchg
rclb
in
fcompl
loop
ss
mov
mov
das
sub
inc
mov
outsl
xchg
pushf
jl
inc
hlt
outsb
divl
cmp
mov
cwtl
hlt
fdivrp
or
andb
sbb
xchg
mov
cltd
pop
fsubl
xor
cmp
idivb
loop
orl
inc
jbe
xchg
dec
or
pop
pop
dec
jnp
xchg
cs
xchg
dec
mov
lahf
cmpsl
push
mov
sahf
dec
in
xlat
xchg
xor
test
and
jnp
and
ret
jmp
sbb
pop
sub
mov
out
adc
sbb
mov
xor
push
cmp
mov
jp
test
jmp
jns
jns
cmp
jae
fcoml
addr16
cmpsl
aad
lret
xor
scas
stos
out
pop
out
in
lock
ljmp
inc
xchg
sarb
rcll
cmp
sub
dec
rol
mov
xor
lods
dec
loop
mov
bound
push
ljmp
mov
and
lods
pop
aam
xlat
aad
sub
push
in
add
add
fdivp
subb
sbb
sbb
call
ljmp
add
ficoml
sub
add
mov
push
dec
sbb
sub
les
or
xlat
push
fisttps
sub
and
push
leave
insb
fsubrs
mov
dec
xor
sahf
add
repnz
adc
xor
push
or
testl
cmpsb
inc
test
jb
cmp
jp
dec
lcall
shrl
add
fcomps
jp
mov
push
xchg
xchg
or
xor
xchg
or
pop
stos
int3
dec
xor
shll
pcmpgtb
dec
push
mov
or
mov
or
dec
xchg
pop
xor
insl
cmp
sub
test
fstpl
and
aaa
add
pop
xor
add
mov
lret
mov
dec
add
or
adc
dec
pop
push
cmp
and
xchg
push
adc
imul
jp
jns
xor
imul
repz
movsl
ja
lods
or
jmp
mov
cwtl
xlat
test
adc
sahf
add
sub
flds
stc
pop
je
adc
dec
sub
and
repnz
and
out
fbstp
add
mov
cmp
ja
ret
das
mov
cmp
hlt
pop
dec
pop
jp
std
dec
mov
or
xchg
push
xchg
ljmp
xchg
xor
sub
ret
popa
lahf
inc
inc
push
or
jo
les
or
add
cmp
sbb
cmp
add
mov
fisubs
lea
adc
test
pusha
dec
rol
cli
push
shrb
leave
adcb
cmp
jns
pop
sub
stc
xchg
push
and
xchg
xor
cltd
adc
sub
out
mov
inc
add
cmpsl
add
cmp
sbbl
and
fsubs
in
lahf
outsl
add
pop
cmp
leave
adc
xchg
fwait
sbb
sub
xchg
pop
mov
int
mov
inc
push
jmp
lods
dec
mov
xor
cld
add
inc
push
mov
lret
push
inc
mov
mov
in
push
sbb
adc
outsl
push
pop
mov
and
inc
pushl
js
das
lock
or
out
push
adc
and
dec
insl
and
flds
ret
loope
shlb
push
dec
jne
pop
loopne
loope
lea
fcmove
xchg
inc
fiadds
jne
lret
mov
fldenv
dec
lahf
mov
adc
adc
decl
daa
inc
scas
enter
fsubs
cwtl
push
pop
push
in
pop
cld
and
xlat
sub
jp
jg
dec
sub
fwait
push
stos
pop
sub
rclb
cmp
mov
xor
nop
push
cmpsb
jnp
jmp
test
and
cmp
xor
lret
cmp
jae
cmp
insl
inc
sbb
cmp
mov
push
dec
pop
pop
inc
dec
inc
pusha
out
out
xor
xlat
cmp
lock
dec
xchg
or
fnstsw
mov
subb
xchg
mov
sub
pop
lret
ss
and
stos
pusha
inc
mov
dec
stos
pop
pop
and
in
and
std
and
xchg
aaa
lahf
xor
fwait
adc
aad
xchg
sahf
inc
sbb
lea
jp,pt
popa
cmp
sbb
dec
mov
test
movsb
xor
int
add
xor
xchg
sbb
jg
push
xor
mov
mov
push
imul
add
enter
lahf
push
divps
sbb
push
sahf
aam
xchg
xchg
xchg
sbb
sahf
xchg
lcall
fidivs
adc
fistl
shl
aaa
outsb
jge
sub
mov
pop
dec
sub
xchg
xor
lea
icebp
loop
mov
dec
sub
xchg
cmpl
xor
push
std
shlb
pop
sti
mov
lods
aad
imul
mov
mov
lods
les
sahf
lret
xor
push
adc
and
xchg
xchg
or
aam
scas
xchg
or
jmp
mov
xor
sbb
mov
mov
cld
push
ret
stos
jb
xor
and
in
mov
adc
mov
xchg
and
and
mov
push
xchg
dec
out
or
pop
daa
es
psadbw
sarb
dec
cmpsb
xor
or
daa
imul
mov
and
push
xor
push
jecxz
cmpsb
fistps
push
fisubrs
inc
int
movsl
cmc
int3
sbb
xlat
or
cmp
dec
add
xchg
int3
js
pop
jne
cmp
loop
inc
es
inc
sbbb
inc
inc
mov
dec
outsl
adc
xlat
jmp
adc
in
xchg
xchg
add
insb
xor
filds
and
cwtl
add
mov
or
xchg
jb
and
sbb
or
mov
aad
jae
fldenv
inc
call
sbb
mov
dec
mov
xchg
inc
pop
rcll
test
shr
xor
sub
cmp
pop
push
sbb
xor
mov
sbb
push
popf
dec
xor
pop
iret
leave
into
xchg
push
xor
xor
push
pop
popf
fcomps
and
dec
insb
mov
lret
scas
shlb
mov
adc
dec
aam
add
xchg
push
es
mov
mov
xor
aam
inc
out
add
xchg
mov
mov
push
inc
push
leave
loope
dec
cmp
ret
cmpb
mov
or
fxch
jae
movsb
imul
stos
sbb
and
mov
jp
add
or
dec
lock
inc
gs
jp
cld
inc
fcmovnbe
fisubrs
or
jp
push
stos
jmp
cmp
mov
add
sahf
sti
push
adc
pop
test
sub
pushf
insl
das
fldcw
fs
cmpb
push
imul
mov
jg
xchg
stos
inc
cmpl
push
psubw
jg
mov
dec
xlat
sub
sbb
mov
jl
les
mov
nop
add
shll
stos
mov
mov
pop
je
aas
addr16
jb
mov
xor
pop
lea
ret
sub
sahf
jl
adc
movsb
xchg
jb
or
ss
and
adc
sub
adc
pop
add
and
push
sbb
pusha
lret
jp
lea
jle
and
sub
dec
lds
xor
sub
mov
arpl
andl
shlb
sub
inc
and
add
push
loop
ds
push
mov
pop
sbb
iret
addr16
and
jp
lret
lds
pop
push
repnz
imul
or
mov
loop
jns
push
ss
jb
xchg
push
inc
dec
xchg
cmc
inc
mov
xor
fidivs
xor
stos
aaa
mov
ds
adc
insl
jecxz
test
pusha
iret
cmp
stos
sub
out
int3
jb
mov
or
mov
loope
xchg
push
fwait
sbb
sub
lea
into
inc
cld
cmp
outsb
sub
and
dec
dec
cmp
or
xchg
nop
mov
xor
stos
mov
dec
push
lods
mov
xchg
push
xchg
add
fisubrl
cwtl
inc
adc
test
ljmp
xchg
xor
clc
je
mov
aas
ja
leave
xor
outsb
in
ss
xchg
and
pop
fistpl
or
bound
jae
hlt
idiv
pop
mov
icebp
dec
jne
repnz
test
sub
jae
mov
mov
push
leave
mov
cmpsb
xor
mov
mov
mov
gs
pop
inc
lret
xor
rcl
cmp
outsl
rcrl
std
jecxz
insl
out
cltd
stc
stos
mov
sbb
jns
dec
mov
xor
insl
dec
inc
inc
push
xchg
push
jb
jmp
cmpb
loop
ja
pop
mov
dec
sbb
or
lcall
dec
or
es
mov
aas
mov
int3
rcr
jle
inc
subb
or
inc
dec
cli
bts
decl
pusha
call
jno
and
cmp
ja
lea
sub
pushf
xor
cmp
xor
stos
out
pop
jecxz
inc
push
repz
inc
or
mov
loopne
push
push
arpl
inc
lea
das
addr16
sub
jmp
subl
shrb
fcmovu
cmc
repnz
inc
clc
cwtl
and
mov
mov
push
mov
adc
inc
iret
bound
sbb
inc
push
lods
in
push
lea
mov
mov
cmp
enter
pop
out
xlat
mov
mov
fsubr
xchg
pop
movb
ljmp
mov
lds
xor
pop
movsl
xchg
sub
xchg
stos
add
daa
cmpsl
sbb
dec
add
insb
pop
aaa
fstpl
or
shr
fmul
stc
pop
aaa
push
pop
ror
mov
leave
fadds
loopne
std
sbb
fidivs
jp
sbb
cmp
lcall
int3
es
arpl
push
fiaddl
sub
mov
dec
sbb
add
mov
pop
xchg
inc
lret
test
pusha
popa
arpl
cmp
stos
xor
xchg
in
add
pop
pop
pop
fwait
call
popa
pop
xor
or
lock
dec
cwtl
xor
pop
aam
adc
xchg
in
mov
sbb
enter
ljmp
push
push
push
je
stos
insb
test
testb
test
mov
pop
dec
or
push
outsb
jns
insl
cld
mov
into
mov
cwtl
scas
or
mov
sti
adc
xor
cmpsl
pop
pop
push
sbb
in
call
stos
fdivr
sub
pushf
cmp
lock
lea
push
ds
enter
lea
loopne
push
mov
lret
cli
je
pop
cld
xor
and
pop
es
inc
ds
xor
xor
movsb
mov
xchg
nop
neg
xor
stos
ljmp
jae
popa
add
cwtl
mov
jmp
fcomi
push
mov
ljmp
inc
fcompl
jmp
lahf
push
cmp
mov
cmp
arpl
popf
pop
popl
cmpsl
adc
insb
lock
es
scas
loopne
push
add
jmp
les
pop
mov
shlb
sbb
insl
and
gs
add
pop
repnz
lahf
repz
aam
xor
enter
adc
pop
lcall
aaa
cld
inc
rcll
cmpsl
adcb
bound
push
jnp
scas
and
jp
mov
dec
jmp
das
inc
jnp
es
push
fisubl
jb
lock
movsb
xor
add
push
adc
dec
push
mov
ljmp
cmpsl
xchg
cmc
xor
jnp
sub
sarb
outsb
inc
aam
or
and
or
pop
push
dec
mov
adc
or
pop
jb
xor
sbb
xchg
xlat
push
lret
dec
xor
in
jne
adc
dec
adc
xchg
popa
push
pop
std
jne
or
aad
repnz
loope
pop
lock
ds
sbb
aam
inc
mov
movsb
stos
push
jb
fadds
cmp
test
xchg
dec
mov
loopne
orl
dec
fistpll
lret
lcall
cmp
aam
pop
dec
sahf
add
aaa
enter
xchg
frstor
inc
fldenv
fidivrs
dec
insl
sub
lea
jg
clc
popa
xchg
fnstenv
inc
or
xor
je
add
adc
fwait
dec
mov
dec
jmp
mov
inc
lret
adc
decb
push
push
roll
xor
cwtl
pop
in
cltd
lods
adc
mov
cmp
in
adc
mov
mov
fst
dec
jecxz
xchg
mov
movsl
cmpl
fwait
push
pop
shll
xchg
push
push
cmp
and
lea
hlt
and
pop
rorb
mov
sbb
imul
inc
xchg
rcrb
dec
xchg
es
stos
cmp
mov
jge
inc
sbb
enter
sub
add
rolb
loope
dec
adc
dec
adc
pop
or
stc
inc
inc
pop
test
xchg
add
or
push
mov
lret
out
xchg
and
mov
enter
mov
mov
and
test
or
fwait
sbb
adc
jbe
xlat
cli
or
adc
enter
int
andb
or
mov
cmp
jnp
xchg
mov
outsb
js
jne
add
sub
in
jae
add
inc
push
mov
pop
push
xlat
sbb
call
and
je
int
test
cmc
mov
jne
jno
insl
sbb
fwait
push
xorl
pop
stos
jp
adc
rcr
pop
aam
gs
inc
and
pop
dec
and
sbb
je
std
std
dec
dec
repz
xor
addl
imul
pop
daa
and
in
test
movsb
negl
sbb
inc
sbb
cld
mov
loop
repnz
xor
dec
pop
jmp
notb
cwtl
and
and
shrb
xchg
sbb
movsl
push
mov
or
push
inc
xchg
mov
or
or
add
test
jbe
sbb
mov
or
addl
mov
lahf
daa
shld
fmull
rorl
cmp
dec
shrb
stos
pop
mov
mov
dec
dec
lcall
int3
inc
cmp
inc
jb
lea
subl
stos
xchg
xchg
add
loopne
push
push
adc
mov
push
and
push
sub
inc
add
cmp
push
xor
pop
jle
push
leave
xor
sbb
sub
xor
jg
jecxz
mov
jnp
push
dec
mov
dec
jnp
cmc
pop
lea
stos
push
inc
fsubl
inc
std
icebp
pop
or
jecxz
and
or
dec
jg
push
mov
aas
inc
xchg
lret
pop
jno
adc
jae
push
gs
sub
leave
icebp
xor
dec
pop
aam
xchg
jbe
xchg
or
rorb
aas
dec
adc
adc
mov
dec
xchg
xor
or
loope
out
xor
xor
rcll
pop
mov
push
or
rcrw
dec
and
jmp
negl
dec
inc
xchg
lds
dec
out
jb
loopne
inc
lea
cmp
or
sbb
push
cmp
ljmp
cmp
jmp
mov
add
mov
test
addb
or
adc
xor
xchg
cmp
lahf
int
sbb
xlat
adc
jmp
stos
in
sbb
mov
pop
push
xchg
cld
pop
lret
mov
int3
adc
mov
fcomps
stos
cld
fldenv
jae
jno
ret
dec
ja
inc
jmp
aad
enter
pop
fdivrs
add
mov
cwtl
add
hlt
adc
mov
pushf
xor
or
mov
gs
stc
or
push
stc
inc
andb
mov
dec
xor
and
mov
shlb
bound
cmp
cmp
xor
rol
mov
fistps
scas
or
jne
mov
inc
xor
andl
repz
or
loop
or
cmpl
es
pop
xor
dec
ficompl
jns
adc
jo
xor
insl
add
cmp
xor
cltd
push
or
push
pop
jg
mov
mov
stos
rcl
sub
insb
xor
into
aas
adc
sub
push
lret
imul
jmp
mov
adc
mov
shll
or
mov
xor
fcompl
add
pop
xchg
in
sub
stos
and
and
insl
sbbl
iret
clc
jg
stc
inc
push
cmp
jae
sub
ror
leave
cmpsl
push
fnstenv
mov
je
adcl
into
mov
idivb
repz
enter
xchg
pop
mov
inc
xor
dec
and
pop
xchg
cs
mov
in
sub
fsubrl
pop
push
jmp
pop
push
sbb
std
mov
imulb
jp
hlt
mov
xchg
add
push
push
outsb
movsb
jmp
int3
xchg
jmp
push
es
jno
adc
jecxz
icebp
aam
js
mov
pop
lret
push
xor
jl
popf
mul
adc
jl
ret
cltd
jne
sbb
popl
je
and
lret
cmpsb
xor
cmp
jne
sbb
cltd
in
mov
fdivrp
mov
add
jle
pslld
push
cmp
jle
sub
or
icebp
adc
xor
jge
lods
mov
in
cmp
xor
jecxz
push
push
or
mov
or
jns
loope
imul
adc
inc
mov
inc
xchg
push
es
sub
inc
jns
insl
into
sbb
pusha
xchg
push
inc
cs
in
dec
scas
mov
sub
push
loope
das
imul
cld
and
lret
call
pusha
jecxz
pop
mov
adc
outsl
mov
fsub
jg
mov
in
jmp
jbe
cmp
fimuls
sbb
cmp
clc
enter
mov
cmp
hlt
pop
negl
adc
pop
std
adc
fwait
xor
sbb
mov
pop
push
mov
filds
adcl
gs
xchg
fidivs
dec
lods
jmp
adc
dec
out
test
out
push
mov
mov
jecxz
xor
out
sbb
and
pop
mov
mov
jno
xor
add
xchg
xchg
dec
notl
jbe
frstor
cmc
arpl
fisubrl
push
jp
outsb
in
cs
and
and
bound
and
notb
fsubl
leave
pop
xchg
jnp
jge
mov
cwtl
mov
pop
inc
es
wrmsr
or
and
mov
sub
inc
cmc
fistpl
cmp
xor
stos
add
add
xor
mov
or
adc
push
imul
or
lcall
cmp
stos
scas
je
jmp
xchg
mov
push
pop
push
popf
jae
mov
lcall
in
sbb
jbe
xchg
push
rcl
jo
xor
shlb
outsb
xor
lods
lock
dec
aam
lea
dec
rcrb
loope
sbb
pop
and
xlat
insb
fisttpl
call
mov
rolb
cmp
lcall
es
xchg
mov
dec
jne
push
scas
dec
add
std
jno
push
pop
icebp
scas
dec
or
inc
cmp
imul
ret
push
jns
adc
adc
aas
aad
lret
loope
jne
sub
cmp
inc
lret
jne
push
sub
dec
inc
lahf
fwait
or
repnz
or
mull
sarb
cmp
pusha
ss
mov
mov
jno
and
cmc
cltd
pop
xchg
jecxz
test
xchg
stos
iret
xor
sub
sbb
scas
cld
outsl
inc
nop
bound
xor
xchg
js
dec
inc
aad
xchg
cmp
inc
ljmp
stos
cld
icebp
cs
push
jnp
lods
xchg
jno
lea
in
stc
movsb
xor
std
mov
or
cmp
fstl
or
mov
bound
rdtsc
movsl
dec
xchg
inc
dec
mov
dec
out
mov
sbb
in
ds
pop
xchg
mov
in
xchg
jle
loopne
adc
out
sub
add
pop
push
loop
iret
popf
push
cli
aam
neg
imul
inc
out
push
dec
xor
sbb
out
lods
pushf
ds
fcmovnbe
decl
popa
inc
insl
dec
push
sbb
insl
repnz
insl
lea
arpl
sbbl
inc
sub
outsb
push
mov
adc
idiv
push
iret
cmp
jmp
sbb
xchg
sahf
xor
push
inc
xchg
xor
mov
and
inc
stos
shll
mov
js
xor
add
insl
inc
mov
cmpsb
sbb
and
sbb
add
loopne
add
xchg
pop
daa
mov
mov
imul
f2xm1
push
test
jae
xchg
fsubr
push
xor
test
or
clc
int
inc
pusha
les
xor
out
mov
cmp
jmp
jbe
test
jbe
lret
and
and
and
xchg
and
fcoms
add
loop
push
mov
jg
jns
xchg
mov
sbb
rcr
jmp
fcmovb
mov
notl
jbe
and
cmp
xor
cld
mov
sti
aam
add
sub
and
jle
dec
cmp
pop
add
dec
stos
cli
subb
in
jno
movsb
xor
out
sbb
add
shl
pop
mov
jg
inc
addr16
jge
fnsave
cmp
fsubrp
fsubr
xchg
cmp
dec
xchg
mov
xchg
cmp
mov
inc
xchg
pop
in
ret
add
cmp
push
xor
mov
mov
jg
aaa
pop
mov
not
inc
sub
jnp
pop
mov
rcl
lcall
jno
arpl
jb
in
mull
sahf
pop
jmp
and
fimuls
aam
push
jle
in
and
adc
out
ja
lahf
dec
push
or
xchg
lcall
loope
and
mov
jp
xchg
cs
cmp
dec
sbb
imul
orl
adc
out
cmp
xchg
push
scas
loop
and
pop
inc
or
xor
add
mov
jnp
cmp
jne
jmp
push
stos
xchg
jae
addr16
imul
jne
dec
scas
cmp
push
mov
jp
cwtl
pop
xor
jo
subb
lret
adc
push
and
lret
jae
test
insb
or
jg
mov
call
sbb
xchg
addr16
sbb
or
pop
xchg
scas
cmpsb
insb
mov
les
call
push
ficoms
inc
call
adc
inc
dec
outsb
adcl
in
test
or
mov
std
mov
das
into
adc
insb
xchg
cwtl
sub
jb
fbstp
pushf
fwait
mov
and
xor
sbb
pusha
fstp
popa
jge
xorb
xchg
jecxz
je
hlt
mov
lods
dec
xorl
mov
gs
mov
push
sbb
into
inc
aam
imul
popa
mov
inc
shr
mov
xchg
clc
rcr
dec
mov
xor
daa
add
push
push
jp
xor
xor
scas
push
pop
mov
ret
pop
aad
jecxz
pop
sub
or
push
and
inc
cmovnp
aam
cwtl
xchg
adc
pop
inc
sbb
sbb
mov
scas
inc
pop
xlat
dec
out
pushf
lret
pop
xchg
inc
push
cmpb
aam
in
jecxz
sub
xchg
inc
rclb
inc
mov
sbb
pop
jne
mov
imull
sbb
cmp
fsubp
mov
mov
or
mov
lods
jns
sbb
dec
mov
out
jle
add
inc
lock
loopne
jnp
dec
mov
inc
mov
rolb
mov
xor
add
nop
adc
xlat
mov
or
aas
pop
sub
scas
stc
push
push
movsl
cmp
rolb
jp
jle
or
xchg
je
repz
cwtl
das
loop
or
lods
add
xor
cwtl
xchg
lock
or
push
mov
inc
inc
push
vpunpckhdq
fcomps
mov
pop
xor
dec
rol
inc
sub
xlat
es
pop
inc
invd
pop
mov
je
sahf
pop
cmp
jae
call
stos
sub
das
or
or
cmp
push
test
test
fildl
lret
jo
es
or
dec
push
mov
xchg
or
push
inc
cs
xor
jae
mov
xor
inc
ljmp
add
cwtl
fdivs
data16
stos
cmp
inc
dec
ljmp
addl
push
les
adc
shrl
std
int3
add
push
push
mov
xor
jecxz
icebp
jmp
daa
xor
xlat
out
mov
mov
inc
loopne
jne
lods
inc
add
test
cmp
push
mov
push
scas
movsb
xor
in
mov
jp
xchg
mov
lods
loope
mul
push
xchg
pop
fstps
jnp
bound
push
repz
jle
dec
xor
jg
mov
xlat
jmp
cld
sbb
pop
xchg
lcall
sahf
lcall
push
xchg
mov
push
xor
inc
jmp
xchg
mov
mov
mov
mov
adc
jmp
popf
adc
fwait
or
xchg
pop
stos
ret
imul
jo
out
and
insb
push
jecxz
fadds
jne
fwait
add
adc
mov
push
cmp
adc
push
add
push
sub
push
mov
sub
dec
push
dec
out
xchg
arpl
clc
into
lcall
aad
sbb
mov
test
inc
push
test
jbe
add
test
cs
inc
sbb
and
xor
push
mov
sub
or
or
in
cmp
ret
jb
and
fistl
push
testb
push
pop
mov
fwait
lcall
inc
fcomps
xchg
into
daa
jmp
movsl
push
push
lods
xchg
icebp
loop
lcall
sbb
and
enter
aaa
int3
out
adc
scas
lcall
adc
mov
jmp
fistps
outsb
js
adc
pop
dec
mov
lahf
in
movsb
or
inc
mov
inc
arpl
cmp
mov
mov
jp
clc
inc
pop
lock
cli
es
aaa
and
add
cmp
mov
adc
call
and
dec
push
repnz
rclb
cmp
cmp
ret
adc
mov
xchg
out
mov
or
xchg
mov
insb
lahf
xchg
push
cmp
out
mov
lds
push
xchg
push
rcr
jmp
hlt
inc
mov
jg
in
sub
push
arpl
mov
in
inc
or
test
cmp
icebp
in
ret
mov
sub
mov
ror
shll
pop
outsl
clc
push
call
or
popa
ret
mov
shlb
pop
rorb
or
aad
mov
je
inc
cmp
add
repnz
aam
push
push
clc
xchg
std
movb
fs
lods
sbb
cmc
mov
adc
pusha
mov
lods
inc
xor
inc
or
add
out
fistl
bound
xor
pop
faddl
pop
xchg
ds
enter
lcall
pop
push
inc
mov
into
test
loop
out
pusha
loop
cmpsl
test
and
ljmp
inc
push
lea
incb
jae
popa
ljmp
gs
mov
aaa
dec
daa
jmp
int3
pop
adc
pop
sub
mov
and
clc
push
inc
jbe
stos
cmpsb
or
insl
bound
xor
je
adc
int3
xor
mov
and
dec
icebp
adc
xor
call
loop
add
enter
sub
out
push
popl
dec
sub
push
mov
jns
xchg
cmp
and
jbe
leave
xor
and
fwait
shlb
xchg
stos
fidivs
loopne
mov
dec
cwtl
jno
lea
inc
stos
jmp
rcl
pusha
jbe
mov
scas
inc
iret
sbb
push
in
mov
and
jp
xchg
xor
popa
outsb
dec
sub
rcrl
cmp
push
sti
xor
jb
push
cmp
test
mov
daa
loope
mov
jne
mov
or
inc
dec
adc
adc
pop
push
popl
dec
fs
sarl
sahf
test
cmp
sub
cld
sub
cmp
push
fidivrs
pop
or
mov
gs
mov
dec
jp
stos
mov
mov
fdivl
cwtl
lea
mov
cmp
cld
push
xchg
mov
pop
or
das
fisubrs
mov
int3
jo
inc
sbb
add
push
nop
or
pop
push
pop
push
es
jo
mov
dec
fstpl
insb
jge
ds
sub
jecxz
or
lcall
sbb
dec
pop
enter
scas
stos
push
js
xorb
jecxz
cltd
into
or
mov
xor
lret
lods
movsb
sub
jg
dec
jle
or
pop
lods
mov
lret
push
cmc
sti
sti
bound
jo
mov
cmpsb
pushf
shl
add
and
xor
cmp
popa
mov
xor
push
push
test
ret
xor
xor
pop
loopne
push
cmp
or
cwtl
xchg
in
cmp
inc
mov
hlt
or
xor
sub
stos
lea
lea
inc
xchg
or
lahf
rolb
cmp
xor
and
bound
dec
pop
ret
dec
jge
push
test
sahf
mov
movsb
je
push
repz
pop
mov
inc
sbb
xchg
and
stc
icebp
pusha
jo
cmp
adc
cmp
dec
pop
inc
adc
pushf
cmp
insl
fsubl
xor
mov
shlb
adc
lcall
iret
pop
and
orl
mov
enter
push
mov
cwtl
sub
in
push
sahf
mov
cld
mov
cmp
xchg
mov
push
mov
and
mov
mov
repz
out
sbb
or
insb
jbe
or
pop
jo
dec
les
xor
and
ljmp
loop
or
mov
int3
xor
shrb
into
push
dec
mov
adc
fs
in
movsl
stc
push
pop
aaa
xchg
fstl
pusha
mov
mov
pop
or
repnz
cwtl
xor
inc
push
jmp
xor
xchg
test
mov
sahf
xor
std
ss
ljmp
aas
xchg
scas
mov
fistpll
rol
xchg
push
sbb
rorb
out
out
jb
dec
pop
pop
mov
rcrl
inc
inc
shl
aam
jo
and
xchg
dec
ds
fmull
shl
push
cmc
jo
pop
fisttps
mov
dec
cmc
mov
shll
std
mov
clc
daa
sub
jge
or
aaa
dec
in
out
cltd
hlt
pop
mov
inc
adc
dec
mov
xchg
add
inc
dec
add
pop
push
or
mov
sti
xchg
jnp
dec
push
in
mov
adc
mov
jg
mov
push
lock
add
sub
ficoml
or
in
sti
adc
neg
das
popf
in
fistps
lcall
leave
push
orl
aad
sbb
jbe
sub
push
repz
mov
pop
xor
inc
mov
dec
mov
cmc
pop
std
enter
jmp
dec
lock
je
es
push
mov
cmp
sub
jns
cld
repnz
add
pusha
enter
inc
scas
push
push
xchg
or
mov
pop
movsb
imul
rorb
pop
addl
pop
cli
push
shlb
xor
or
adc
or
or
cmc
mov
dec
fnsave
js
lods
andl
daa
test
jno
call
cmp
fs
sbbb
es
fisttps
xchg
dec
enter
pop
into
push
movsl
sbb
adc
xchg
mov
and
insl
dec
adc
je
aaa
icebp
jge
je
aam
jle
leave
xor
std
loope
shlb
ljmp
mov
mov
int3
adc
pop
or
sub
popf
setae
gs
rcrl
test
mov
inc
pop
adc
mov
lret
les
sub
mov
insl
add
and
adc
rclb
mov
push
inc
and
add
aam
mov
js
xor
or
mov
pop
jl
leave
mov
inc
jne
mov
pop
mov
xchg
push
xchg
xchg
pop
cmp
sub
push
adc
lcall
cmpsl
pop
pushf
mov
mov
andb
mov
and
sbb
dec
xchg
gs
push
js
dec
sahf
inc
jno
mov
test
int
in
lret
call
fwait
and
mov
add
and
push
into
mov
iret
and
ds
cmp
sbb
call
and
sbb
aas
shr
icebp
repz
lods
imul
push
xchg
lock
into
mov
sar
cmp
testb
adc
testb
je
push
inc
sbb
ljmp
rorb
outsl
xchg
test
xchg
pop
aam
or
mov
inc
insb
stc
pop
and
faddl
in
lds
stos
mov
cmp
pop
cmp
push
pop
pop
pop
fcoms
lds
loopne
pop
icebp
cmp
inc
imul
into
int3
pusha
sbb
insl
jno
scas
dec
lea
or
jmp
push
inc
xlat
adc
and
jbe
sub
out
test
data16
outsb
les
ficomps
lea
dec
jle
push
or
xor
out
dec
push
pop
push
push
or
bound
mov
push
cwtl
xor
jl
fsubrl
xor
and
jo
cmp
mov
inc
dec
lahf
inc
push
rolb
movsb
mov
mov
jo
xor
negb
lahf
lcall
xchg
aad
dec
insl
jo
xchg
notb
fdivrl
jb
or
enter
adc
imul
daa
or
es
es
adc
aam
mov
lret
jae
xor
out
xchg
jge
and
and
lret
push
cmp
mov
int3
fchs
bound
or
add
lock
sbb
pushf
cmp
mov
mov
lahf
cmp
call
decl
popa
call
xlat
ja
push
fbld
stos
fidivl
xchg
fsub
outsb
repnz
mov
push
jecxz
add
aam
in
pushf
jle
jae
jb
gs
xor
iret
adc
mov
loope
neg
fildll
jae
fdivrl
ds
fstpt
enter
xchg
lods
pusha
pop
sbb
stos
arpl
loop
in
popa
lret
push
xor
lods
sub
lea
sbb
mov
xor
mov
lahf
and
loope
mov
arpl
repnz
xlat
push
out
dec
push
cmp
xchg
xchg
sub
sti
in
adcl
gs
fstp
sub
insb
sbb
fcomip
mov
mov
out
out
jle
fcoml
mov
dec
or
push
push
pop
cmp
popf
stos
xchg
xor
stos
aas
lret
out
dec
je,pn
testl
adc
movsb
jbe
sub
daa
xchg
fidivs
cld
xor
lods
sbb
pop
fsubs
push
xchg
out
cmc
cmp
int
pop
paddb
aam
mov
lcall
mov
xorl
lds
and
xchg
xchg
mov
stc
fadds
sbb
mov
aam
fisttps
movl
jbe
inc
mov
sbb
lcall
cmc
imul
mov
pop
into
mov
adc
mov
or
mov
cmp
orb
cmp
inc
dec
in
scas
imul
lret
shlb
push
cli
stos
stos
and
int3
js
xchg
popa
leave
das
adc
push
bound
cmp
test
icebp
in
jns
pop
outsl
mov
add
jns
pop
xchg
in
aaa
sbbb
cltd
adc
scas
fbld
daa
dec
rcrb
sub
xchg
mov
xchg
or
pop
dec
inc
and
cwtl
lret
imul
mov
jb
inc
inc
sub
xor
xor
ret
inc
out
mov
out
out
js
aam
aas
sub
scas
mov
lahf
sub
imul
pop
lea
cmp
test
mov
sbb
cmp
lods
inc
pushf
aad
adc
rclb
inc
and
lahf
loope
int
and
cs
cwtl
lahf
sbb
mov
xchg
mov
ljmp
aas
sti
out
mov
aam
jbe
or
std
push
push
adcl
fwait
or
bound
in
sti
inc
fbstp
push
mov
fidivrs
adc
add
jne
xor
inc
orb
lret
sbb
push
cmpsb
adcb
iret
out
icebp
or
push
shlb
loopne
outsb
xchg
sub
push
jnp
insl
test
jnp
sbb
jge
cmpb
adc
lret
dec
adc
mov
shrl
mov
jns
inc
cmp
sub
stos
ljmp
xor
mov
pop
ror
sub
cmp
or
push
outsb
or
rcrb
dec
adc
daa
dec
fisubrs
push
lahf
or
scas
loopne
mov
mov
arpl
add
adc
cmpsb
dec
mov
out
inc
jb
xlat
pop
out
sti
imul
xlat
aas
es
jne
imul
mov
lea
mov
push
data16
loope
push
sub
xor
fisubrl
xchg
lods
cmp
inc
popa
jle
dec
jne
and
cmp
mov
out
xchg
inc
sub
mov
push
or
fcmovnu
cmpsb
jne
jecxz
inc
insb
js
xchg
fisubrs
or
xchg
push
sub
jecxz
jns
pop
cld
je
lahf
xchg
inc
inc
jno
cmpsl
sub
dec
push
je
out
push
js,pn
ljmp
mov
jp
push
arpl
xchg
out
push
mov
jg
mov
sahf
xor
stos
stos
ljmp
adcb
popf
test
ss
jae
es
mov
mov
or
dec
in
or
xor
es
push
inc
je
or
add
repz
ret
dec
ret
xchg
pop
push
shll
cmp
fidivrl
mov
xor
pop
mov
shr
add
cmp
push
scas
xor
in
outsb
or
in
jle
adc
test
push
out
dec
lods
push
lahf
pop
bound
sti
lret
ret
pop
cmp
mov
dec
jp
bound
sub
stos
and
mov
xchg
push
ret
iret
jae
dec
sbb
push
insl
pop
sub
xchg
lret
fdivs
mov
testl
jno
and
leave
insl
adc
adc
adc
fstp
add
movb
dec
pop
std
push
push
sbb
clc
fnstcw
mov
pop
mov
xor
and
sub
fildl
cmp
pop
cwtl
push
pop
inc
imul
mov
je
lret
push
push
sbb
stc
fcmove
mov
push
push
cmc
and
or
lretw
inc
sub
sbb
push
pop
dec
push
les
or
xchg
mov
pop
xor
jmp
xor
fbld
adc
inc
dec
cwtl
or
mov
scas
sub
fsts
out
lret
call
adc
adcl
call
push
ficomps
or
jns
push
jne
jecxz
xor
loopne
aam
sbb
gs
mov
jle
xor
cmp
or
lds
rol
mov
dec
cmpsb
stos
fbld
xor
cltd
xchg
pop
jno
push
lahf
inc
xor
push
inc
ljmp
imul
jl
push
pop
pop
fisttpll
out
mov
ss
push
jp
xchg
flds
xor
repz
jns,pt
lcall
loopne
or
sub
orl
mov
gs
jno
inc
cmp
push
pop
js
bound
sbbl
rdtsc
cmp
gs
lds
test
add
inc
test
xchg
scas
sub
in
imull
popa
repz
stc
jb
clc
mov
lods
out
or
push
and
stos
xor
shrl
ss
icebp
arpl
pop
adc
xchg
jne
mov
cld
imul
icebp
popf
dec
and
cmp
into
pop
pop
enter
lcall
sahf
dec
adc
mov
aad
push
xchg
inc
xchg
out
and
push
sbb
mov
push
adc
or
fdivs
dec
xchg
in
rep
mov
dec
insl
ds
sub
scas
push
fistps
stos
fbstp
jns
xchg
js
lret
daa
xor
fidivrs
push
pop
xlat
pushf
sti
int
add
mov
pop
loopne
push
sub
roll
dec
fsubl
xchg
dec
cmp
nop
cmp
ret
cmpsl
addr16
xchg
sahf
mov
sbb
stos
add
sub
jg
mov
sub
cltd
scas
ja
fimuls
cmp
outsb
sub
faddl
xchg
into
enter
push
xchg
sti
sub
fwait
cmp
fwait
push
sub
ds
sub
pushf
lcall
andb
scas
in
mov
sbb
push
hlt
sbb
sbb
mov
adc
mov
xchg
push
xor
ror
push
jmp
lods
fwait
or
mov
push
sbb
xchg
fcompp
lret
leave
rcrb
out
cmp
mov
inc
or
out
adc
jae
lcall
pop
sahf
jle
in
cmp
inc
mov
mov
subl
ljmp
stos
add
or
in
pushf
call
sbb
dec
sbb
jle
xor
cmp
clc
bound
adc
insb
mov
mov
lahf
inc
in
subb
mov
and
dec
stc
test
xor
fistl
enter
sub
or
ret
ss
or
pop
push
out
mov
jl
jp
inc
xor
jo
je
xor
add
notl
cli
and
xor
mov
jae
jo
pop
cli
sti
mov
xchg
jne
js
push
outsb
fimull
lret
mov
push
icebp
out
dec
pop
jge
sub
sbb
jae
in
mov
pop
imulb
or
push
dec
mov
sub
adc
xchg
sbb
dec
inc
xlat
adc
and
jne
sarb
arpl
lods
jg
sahf
imull
and
jae
pop
scas
pop
movsb
push
addr16
cmp
pop
dec
mov
jnp
xchg
popa
inc
mov
cmp
cmp
cmc
wbinvd
outsb
push
xor
das
insl
push
fisubrl
xor
and
mov
clc
rol
sub
push
cmpsb
or
dec
and
pop
test
xchg
stc
mov
sub
les
lock
dec
loope
loope
or
jg
mov
or
mov
insl
sti
sbb
jbe
iret
lret
xchg
xchg
xor
and
stos
jne
bound
insl
lret
rcrb
jo
xchg
mov
pop
and
mov
popa
or
repnz
ret
daa
cwtl
mov
cld
negl
pop
pop
lods
popf
xchg
dec
jne
mov
dec
arpl
add
push
ss
jmp
mov
in
clc
jae
out
popl
jnp
cmc
jno
call
stos
jb
cmp
stos
cmpsb
lcall
push
ret
and
lret
push
out
addr16
xor
fidivl
rclb
movsb
adc
or
push
pop
or
sbb
xchg
or
lret
divl
int
push
shlb
lahf
sbb
adc
pop
test
mov
loopne
fdivl
fidivrs
xor
xchg
aaa
mov
inc
je
sub
sahf
loopne
ret
xchg
jae
xor
movsl
xchg
testb
xchg
cmp
es
int
stc
sbb
dec
xchg
and
stos
inc
int3
pop
test
cs
fwait
mov
nop
push
mov
mov
pusha
loope
es
into
fldl
sub
xchg
inc
push
push
xchg
ja
out
push
jg
loop
outsl
or
rclb
cld
dec
sbbb
notl
pop
leave
add
cmc
iret
add
dec
movsl
and
sub
xor
adc
cmp
jmp
repz
ljmp
xor
xchg
addb
das
push
popf
push
inc
fdivrs
or
pop
gs
dec
mov
mov
dec
push
push
fwait
cwtl
xchg
repz
out
cs
mov
dec
mov
xchg
jmp
mov
push
lcall
cmp
in
sub
movsl
pop
sbb
inc
in
jp
xor
fcmovbe
sarb
es
cli
in
repz
data16
scas
xchg
ja
and
mov
mov
test
mov
and
jge
stc
and
adc
hlt
adc
dec
sub
mov
inc
insl
pop
cmpsl
xchg
rclb
mul
xor
incb
xchg
xor
jns
fdiv
ficompl
xchg
lds
push
cmp
adc
xchg
arpl
sub
push
cwtl
mov
jmp
mov
jae
negb
aam
in
cli
lahf
xor
xor
push
or
cmp
push
test
pop
pop
into
ficoms
movsl
aam
outsl
push
aaa
cmp
mov
mov
pop
dec
rcrl
pop
xor
sub
andl
sub
arpl
dec
xor
mov
xor
das
cmp
push
leave
arpl
bnd
mov
or
jb
xor
adcl
push
js
cmp
rorb
mov
fdivrl
sti
ss
out
bound
dec
insl
xor
shlb
push
mulb
adc
mov
xchg
jbe
clc
jae
dec
push
adc
cld
push
mov
jae
pop
loopne
dec
and
xor
mov
mov
lods
pop
xor
jnp
outsl
test
sub
mov
push
sbb
out
xchg
push
add
test
inc
push
xchg
xchg
push
daa
mov
lret
xchg
push
sahf
pop
inc
and
jp
adc
loop
fwait
jne
popa
out
mov
hlt
fdiv
mulb
mov
loop
shll
mov
pop
filds
jae
sbb
add
shlb
push
pop
cmpsb
or
cmp
mov
mov
inc
push
mov
movsb
aam
call
xchg
or
push
test
push
fmuls
fwait
mov
jae
mov
push
or
lea
xor
shll
pop
rolb
cmp
mov
pop
sub
leave
jns
fcoms
sbb
lcall
shl
mov
sbb
lcall
inc
data16
jns
sahf
pushf
dec
into
into
orl
aad
imul
jae
lret
add
leave
push
das
dec
lods
bound
jle
icebp
mov
push
xchg
or
pop
mov
sbbl
into
push
jp
xchg
xchg
js
sbb
adc
jl
jp
xchg
lret
into
jmp
jno
xchg
lret
xchg
enter
or
repnz
mov
mov
sub
xchg
out
adc
nop
jecxz
push
push
push
mov
pop
ror
mov
lods
pop
lcall
cmp
lcall
loopne
testb
jnp
xchg
cs
mov
xor
repnz
test
clc
or
lret
pop
or
adc
or
call
pop
push
xchg
popf
dec
loope
mov
or
popf
pop
ret
sbb
push
mov
shrl
dec
or
jno
mov
lods
pop
cltd
outsb
dec
sbb
enter
loope
push
sbb
xor
or
push
mov
push
lcall
mov
xlat
loope
push
xchg
enter
xchg
lret
lcall
iret
mov
push
xchg
push
pop
dec
test
pop
pushw
pop
sub
and
jne
mov
adc
pop
testb
dec
rcrb
loopne
js
cwtl
notb
jb
push
jno
mov
push
mov
push
or
xchg
xchg
lret
loope
mov
insb
sub
fsubrp
xchg
shll
and
cwtl
xchg
mov
scas
xchg
outsb
mov
fstps
jle
outsb
ret
fdecstp
insb
data16
subl
in
jmp
dec
lcall
es
or
pushf
cmp
int3
sbbl
imul
adc
xor
sbb
les
cmp
cmp
cmp
mov
jecxz
mov
fcmovne
fsubr
xor
inc
push
je
aas
jg
adc
or
pop
dec
test
inc
sbb
test
push
xor
rorb
adc
rclb
pop
push
xor
add
mov
je
and
jne
rcrb
and
or
stos
fwait
pop
nop
and
cmp
xchg
icebp
push
dec
push
xchg
dec
pop
xlat
dec
pop
add
fnstenv
xchg
xor
gs
stos
stos
pop
adc
cmp
fisubrs
mov
test
out
or
lods
cmp
fmull
inc
test
addr16
dec
pop
mov
inc
hlt
sbb
lea
lret
adc
inc
sahf
inc
lea
lea
lods
jge
inc
inc
mov
mov
insl
sti
inc
inc
outsb
or
movsl
int
cwtl
push
fbstp
popa
xchg
xchg
add
loopne
xor
pop
popa
pushf
dec
sti
push
mov
stos
pop
es
mov
jge
mov
shl
push
or
out
ja
add
push
xor
into
or
ja
cmp
xor
mov
and
mov
xchg
or
mov
push
fsubrl
inc
jne
call
fisubrl
xchg
insb
pop
cmp
jnp
ret
xor
lods
push
push
sub
dec
xor
fnstcw
pop
jae
leave
jae
mov
addr16
aas
mov
cli
cmp
lea
or
add
push
adc
jp
sub
dec
inc
scas
and
pop
addr16
aas
es
jecxz
repnz
loopne
pushf
xchg
test
adc
lcall
scas
inc
add
lret
and
inc
xor
iret
rdtsc
jp
rcrl
dec
mov
pushf
adc
inc
dec
inc
ficomps
int3
add
dec
add
test
inc
hlt
push
icebp
mov
push
fld
mov
sub
jl
cmc
push
cld
jae
stos
push
lods
sbb
jns
test
xchg
dec
hlt
xchg
and
mov
gs
cld
pushf
stc
pop
ss
lret
sub
clc
fs
andb
test
lea
cmp
sbb
or
es
cltd
sbb
mov
jmp
push
add
mov
rolb
sub
jnp
adc
add
and
pushf
mov
or
cmp
lcall
mov
cmp
mov
adc
xor
fiadds
jp
mov
jmp
and
adc
or
mov
xor
xchg
fstl
std
fisubrl
and
addr16
pop
inc
sti
sti
ds
fidivl
pop
adcb
mov
or
push
sbb
in
ret
orl
imul
jae
mov
jne
sub
push
sbb
push
ljmp
cltd
sbb
movsl
nop
or
and
jae
push
in
xor
jmp
sbb
mov
inc
or
rolb
pusha
xchg
cmp
ret
sti
dec
lock
fadds
xchg
inc
pushf
jae
mov
aad
stos
dec
in
push
in
adc
inc
cmp
shlb
insb
xchg
inc
cmp
js
inc
adc
jae
arpl
insl
fwait
sbb
lods
jge
gs
cmp
push
jp
lret
add
push
out
icebp
mov
mul
lock
pop
sbb
mov
icebp
push
cmp
pop
xor
or
xchg
add
mov
jb
and
cmp
jecxz
lret
shl
clc
pop
lret
jbe
push
push
inc
mov
fdivrs
popf
loop
pushl
cmp
ret
pop
imul
or
fistl
stos
sbb
xor
adc
sbb
push
cmc
pushf
dec
cmp
push
jle
push
xchg
and
fs
mov
xor
jnp
ja
push
sti
ret
mov
std
orl
pop
fucomip
test
jmp
xor
xchg
ds
mov
call
mov
aas
sub
cmpsl
jp
rorb
or
mov
in
scas
mov
stc
shl
out
push
loop
xlat
sbb
xor
xor
bound
outsb
mov
movsb
xorb
add
push
jle
fisubrl
lahf
mov
movsb
sub
push
xchg
pop
out
fidivl
pop
out
add
or
xor
clc
aas
insb
sub
lods
lahf
outsb
stos
or
in
lret
rcrb
push
inc
jno
lcall
mov
call
mov
outsb
pop
pop
adc
ljmp
and
jg
mov
inc
lcall
mov
out
movsl
pop
leave
adc
pop
push
loope
sub
scas
push
inc
mov
push
nop
mov
or
xchg
adc
pop
xchg
sub
repz
inc
sti
xor
jns
xor
xchg
or
sub
mov
jl
fildll
scas
dec
mov
mov
sahf
inc
es
xor
jp
ljmp
loopne
cs
in
cld
pop
cmp
mov
in
enter
cmpsb
lret
inc
dec
leave
mov
scas
jb
push
xchg
dec
dec
out
dec
or
sub
or
scas
push
push
fadds
dec
mov
jle
jae
pushf
fdivl
idivl
imulb
push
into
das
jmp
xchg
lret
sti
stos
or
fildl
cmp
lea
sub
insb
xor
jg
cmc
mov
inc
xlat
arpl
fildl
jge
jno
imul
push
roll
adc
out
jmp
int3
jo
mov
stos
rclb
aam
aam
jge
push
shll
mov
popa
or
push
je
inc
mov
or
sbb
into
aas
sbb
lcall
jp
push
test
sbb
add
sub
xchg
scas
or
push
enter
xor
xchg
bound
xor
cwtl
lods
lds
jmp
jns
mov
mov
jae
stos
icebp
inc
jno
cmpsl
cmp
xchg
push
mov
inc
cs
fcoms
xor
lods
fs
adc
adc
dec
aam
pop
jg
inc
jbe
inc
mov
push
xor
dec
push
ljmp
xor
mov
out
arpl
in
xor
dec
xor
mov
lds
mov
orb
pop
push
xor
sub
mov
lods
inc
lea
pop
jle
adc
push
test
sbb
in
xchg
adc
fistpll
fcom
cwtl
xor
adc
mov
push
push
lret
xchg
cmp
es
pushf
xor
push
in
dec
cmpl
pop
sub
xor
daa
fbld
lcall
fstpl
iret
xchg
je
mov
nop
faddp
push
std
loopne
clc
sbb
jo
xchg
dec
je
dec
pop
xor
and
xchg
fsubrl
cwtl
inc
movsl
mov
mov
icebp
fisttpll
imul
xor
lds
and
test
sahf
mov
std
xchg
icebp
pop
arpl
jno
ds
test
mov
pop
or
inc
call
rcr
mov
stc
in
and
inc
pusha
scas
jo
xchg
push
push
xor
and
mov
dec
in
jno
fistps
jg
mov
sbb
sub
or
inc
xor
inc
xchg
mov
dec
mov
add
or
inc
bound
sub
in
dec
pop
imul
ja
push
cmp
jno
xor
xor
mov
adc
adc
loop
xchg
mov
insl
jl
dec
fistl
jmp
push
add
gs
xor
inc
hlt
dec
imul
notl
cmp
jmp
in
xor
mov
aad
inc
xchg
test
adc
sub
or
sub
or
rolb
push
push
movsl
aam
sar
fists
cmpsl
pop
fcmove
inc
mov
push
not
or
movsb
dec
mov
repnz
adc
sti
sub
ds
jb
dec
adc
add
repz
addb
cmpl
outsb
cmp
pusha
jmp
fistpl
sbb
and
pop
mov
sbb
adc
pop
or
mov
or
dec
je
xchg
jle
sub
loopne
cli
mov
mov
fstps
inc
xchg
mov
xor
sub
sbb
mov
jmp
or
stos
xlat
push
js
cmp
cmp
leave
in
fnstenv
dec
les
push
loopne
popa
dec
fmuls
idivl
dec
dec
nop
xchg
rcrb
pop
and
mov
xchg
scas
push
mov
or
lcall
push
jne
iret
sub
and
insb
loopne
push
ror
loopne
push
push
xor
push
xchg
cld
stos
faddl
sbb
adc
xor
iret
faddp
fisttps
sub
imul
outsl
out
adc
mov
mov
outsb
mov
or
or
in
dec
cwtl
cmp
sub
push
test
sarl
add
push
nop
movsl
mov
push
out
mov
pop
lcallw
outsb
addl
daa
faddl
ret
pop
les
or
dec
into
lret
push
xor
insb
notl
hlt
dec
mov
in
mov
lret
mov
lret
addl
mov
jo
lret
push
pop
nop
aaa
fstl
mov
popa
pop
push
xchg
fs
xchg
das
ret
mov
dec
lods
hlt
stos
xchg
mov
pop
pop
lods
adc
dec
xlat
inc
cmp
lea
cmp
xor
pop
cmp
inc
or
out
xchg
sub
je
test
cmp
int3
rorl
xchg
mov
dec
les
lahf
jle
jge
dec
into
divb
xchg
push
loop
and
adc
inc
fistl
orb
rcr
cmp
pushf
ficoml
and
ficompl
xor
or
mov
out
push
mov
mov
fs
lods
or
out
nop
aaa
xchg
xchg
dec
fadds
insb
fdiv
nop
inc
xchg
or
add
je
pop
mov
xor
dec
push
icebp
xchg
dec
mov
enter
lods
xor
mov
sbbl
push
hlt
inc
or
test
jecxz
mov
adc
sbb
mov
jo
mov
imul
mov
fstpl
arpl
push
push
dec
sahf
mull
outsb
xchg
int
or
push
nop
sbb
fcmovne
jae
sbbl
add
nop
and
mov
cmpb
repz
addl
sbb
fwait
mov
lret
sub
push
mov
or
xor
repnz
loopne
fwait
jo
adc
sbb
fdiv
mov
in
in
sbb
std
loope
or
pusha
mov
ss
jge
shlb
push
mov
or
push
das
sub
inc
push
lods
dec
std
jp
fwait
and
mov
adc
fldt
or
lock
in
enter
add
jns
fs
rcrb
xor
lcall
jns
fdivl
push
ficoml
push
inc
call
es
push
movl
cmp
sbb
mov
pop
xchg
or
sbb
pop
cli
or
add
cmp
out
sub
jnp
mov
mov
and
stos
push
or
dec
inc
mov
dec
aad
andb
loopne
fcmovu
inc
mov
sbb
hlt
fnstenv
gs
cmp
scas
stc
push
inc
hlt
int
adc
cmp
sbb
imul
popf
test
fxch
lods
aas
mov
sub
jae
cmpsl
xor
call
push
pop
inc
or
dec
mov
outsw
insb
pop
lret
imul
pop
je
inc
cwtl
xor
fcmovu
pop
mov
add
sub
pop
jno
mov
idivb
and
push
ljmp
adc
sahf
rclb
xchg
mov
xchg
xchg
add
mov
xchg
mov
in
xor
roll
out
fdivrp
cmp
push
mov
and
or
lret
ret
inc
incl
dec
std
out
push
cmpsl
leave
mov
xor
lds
sub
xlat
mov
fdivrl
xor
mov
mov
inc
pop
inc
inc
andb
pushf
and
sbb
lea
cmp
mov
lods
jnp
dec
stos
mov
sub
stos
scas
jle
inc
xor
mov
fcmovu
push
inc
mov
mov
push
loopne
sub
stos
xchg
jno
xor
add
pop
adc
lret
fstp
xchg
outsb
add
call
inc
stos
pop
sub
dec
fldenv
xchg
negb
lahf
adc
and
xchg
cmp
je
fidivrs
inc
mov
mov
xchg
fldcw
test
cmc
inc
or
stos
sahf
xor
cwtl
or
sub
xchg
pop
xor
in
in
gs
pop
mov
xor
xchg
add
sub
cmpl
inc
jecxz
stos
jb
loopne
je
pusha
aaa
in
lret
push
out
inc
fwait
cmp
inc
pop
dec
jle
sub
pop
lea
push
lret
cmp
push
jbe
mov
fisttpll
lea
lock
arpl
inc
pop
push
add
jmp
push
stos
rorb
xchg
scas
sub
mov
repnz
dec
mulb
cmc
sub
arpl
xchg
or
fisubrs
and
out
sbb
rol
add
mov
in
lcall
fwait
pop
xor
mov
test
nop
jecxz
mov
clc
pop
fidivs
inc
sarl
push
sbb
stos
mov
xor
loopne
out
fdivs
mov
cmp
stos
mov
sbb
inc
adc
push
fldcw
mov
popf
lar
xor
aaa
inc
fdiv
movsb
xchg
xchg
call
pop
dec
push
mov
out
jp
xlat
mov
add
mov
mov
dec
arpl
shlb
jb
imul
push
addr16
push
push
jmp
lea
push
aam
or
add
adc
fs
jne
lds
enter
in
inc
or
mov
xor
cli
jle
pushf
mov
jbe
mov
push
pop
ja
out
push
sbb
in
push
out
push
pop
xor
fcompl
orb
xchg
rolb
orb
push
and
jge
mov
adc
shll
xchg
jg
sbb
fmul
xchg
outsl
push
data16
rcll
inc
in
pushf
mov
popa
pop
inc
mov
xor
cmovp
push
and
jo
sar
je
adc
out
mov
dec
xor
orl
and
int
pop
inc
mov
add
pop
enter
xlat
pop
push
xor
pop
pop
sbb
push
xor
sbb
into
fisttpll
jmp
and
aad
mov
adc
push
test
out
push
ds
nop
shrb
and
add
aam
sub
mov
or
jns
xchg
sub
xchg
xor
push
xor
cs
jle
add
shlb
pop
cmp
dec
int
inc
push
and
mov
cltd
dec
xchg
push
out
xor
xchg
pusha
or
lea
popf
xor
cmp
clc
repz
subb
xchg
dec
ret
mov
and
ss
sar
wbinvd
inc
mov
and
mov
mov
xchg
aam
pop
lea
or
push
mov
cltd
cmp
cmp
aam
pop
shlb
sub
pop
push
mov
adc
mov
xchg
pushf
cmp
fwait
clc
mov
shl
movsl
fnstenv
xor
push
xchg
pop
fcmovnb
xor
or
fnstcw
xor
fdivr
int3
adc
in
leave
cmp
pop
push
mov
jno
ljmp
scas
rcrb
mov
push
ja
pop
es
mov
jno
lret
mov
adc
add
mov
pusha
dec
push
mov
fadd
mov
inc
gs
mov
adc
rcrl
loopne
jmp
add
lret
mov
roll
adc
sub
stc
or
push
mov
pop
outsl
pop
inc
push
pusha
ja
inc
mov
mov
nop
xchg
pop
in
mov
fs
das
or
or
inc
adc
fdivs
mov
jno
mov
jp
sbb
sub
xchg
sbb
sub
push
jae
inc
or
jno
jnp
imul
mov
stos
out
and
adc
cmp
push
inc
aam
mov
sub
sarb
mov
clc
cld
dec
xchg
ret
cwtl
dec
mov
jne
repz
adc
cmp
and
popf
lret
or
ja
sbb
xchg
ds
dec
cltd
xor
jae
jle
jp
and
add
xchg
sbb
xor
andb
stos
and
dec
jl
xchg
lcall
cli
jae
aaa
or
into
mov
adc
fbld
shl
jae
popa
fidivl
sbb
jae
insb
test
mov
rcr
int3
pop
insl
jmp
out
pop
nop
and
xchg
xchg
sub
dec
xor
dec
mov
mov
or
cmpsb
fwait
popf
adc
or
stos
mov
dec
imul
mov
scas
xor
mov
fcmovnu
push
enter
mov
stos
hlt
js
pop
ret
outsl
enter
daa
imul
and
dec
xchg
push
into
dec
inc
lret
lret
std
inc
mov
pop
sbb
pop
insl
jb
adc
enter
movsl
adc
jle
dec
xchg
mov
in
les
jno
int
and
in
aad
in
mov
pop
jg
mulb
cmp
mov
push
std
dec
xor
or
sarl
lldt
xor
mov
sbb
mov
push
bound
in
mov
or
test
or
leave
xchg
mov
push
mov
mov
in
jecxz
pop
out
out
cmp
push
mov
icebp
mov
loopne
leave
lea
ds
or
jne
data16
in
dec
sub
sbb
icebp
negl
jecxz
push
add
ljmp
adc
fisttpl
stos
out
ficomps
pushf
add
dec
sbb
sub
pop
sub
pop
xor
push
mov
daa
jnp
lods
dec
push
inc
sbb
fistpl
or
xor
jne
jae
sti
or
out
and
mov
test
sub
aaa
mov
testb
sub
adc
jae
pop
push
insl
mov
es
adc
call
or
cmp
xchg
lock
scas
mov
xchg
mov
aas
aam
lret
mov
fisubl
out
cmp
fs
and
lods
lds
or
xor
pop
mov
xor
push
inc
push
inc
push
fcomps
push
jne
inc
loop
add
movsl
mov
orb
add
hlt
popf
sub
push
sbbb
or
add
ret
lcall
fisubrs
jp
loope
in
xor
mov
pop
shlb
ficomps
stos
mov
ja
icebp
sbb
xor
push
xor
push
xor
inc
rclb
push
clc
fs
roll
fcmovnbe
data16
fisubrl
jbe
xchg
ss
dec
dec
cmp
sbb
stos
fldl
fisubrs
repz
pop
xchg
jbe
or
lds
jnp
les
stos
push
mov
mov
jo
push
test
daa
incb
sahf
xorb
push
mulb
dec
cmp
cmp
lahf
mov
jp
std
pop
decl
leave
or
roll
fisubrl
popf
xor
pop
lahf
negb
lock
jmp
mov
xchg
mov
les
mov
mov
sbb
jae
stc
dec
inc
outsb
je
xchg
test
mov
mov
xor
lret
pop
lock
push
hlt
and
push
inc
das
sti
mov
sub
shl
sarl
enter
xlat
enter
xor
sarb
clc
and
jge
push
xchg
cmpsb
int
fsubrl
pop
ljmp
shll
mov
xchg
arpl
pop
rorb
mov
js
lods
sub
pushf
inc
xchg
divl
sbb
push
lods
mov
sar
fwait
imull
mov
or
sub
or
arpl
pop
ja
xor
mov
push
xor
sub
mov
rcrb
fdivl
mov
push
and
inc
mov
loope
jns
or
mov
jae
xchg
pusha
push
mov
mov
mov
push
repnz
lods
sbb
mov
push
adc
shlb
aam
jecxz
adc
add
sub
sbb
jmp
adc
test
mov
mov
inc
insl
jnp
mov
jg
sbb
pushf
or
mov
jge
add
inc
cmpsl
push
icebp
jp
jno
sbb
fnstsw
sbb
mov
cli
inc
and
pop
push
inc
fldl
outsl
jp
mov
fsts
or
dec
std
push
cmp
cmp
lret
lods
dec
sbb
jbe
xorb
data16
xor
outsl
push
popa
xor
lods
cmp
and
mov
xchg
das
xor
pop
loop
cmp
sbb
mov
mov
or
or
cld
callw
sbb
push
xor
sarb
dec
lahf
ds
pop
cmp
jp
bound
dec
xor
sub
fdivs
sbb
cld
lret
jno
or
lcall
mov
sub
inc
ret
push
lods
insl
adc
cmp
mov
lret
sbb
sbb
cmpsb
xchg
les
aad
mov
push
mov
call
arpl
cli
rcll
cmp
pushf
xor
adc
mov
add
jnp
push
push
mov
or
dec
mov
pop
dec
xor
subb
stos
add
leave
inc
lret
fadd
add
sahf
mov
clc
insb
sbb
dec
mov
data16
ja
pop
mov
test
imul
idivl
icebp
sub
pop
icebp
jo
dec
inc
leave
pop
mov
jbe
or
sbb
sahf
push
sbb
push
fwait
push
ss
sbb
xchg
cmp
dec
stc
int
sti
and
nop
out
inc
mov
push
jecxz
or
lcall
fisubrl
lods
mov
js
les
and
xchg
pop
sub
lahf
adc
xchg
sbb
mov
mov
inc
sahf
pop
inc
sbb
mov
or
lret
inc
xchg
push
adc
xchg
sub
lret
mov
aas
adc
lret
xor
out
or
push
mov
lahf
out
sub
xchg
insb
cmp
or
fisttpll
out
or
pop
in
add
mov
popa
or
jbe
outsl
rcrb
inc
leave
cwtl
or
cmp
dec
xchg
lea
cmp
mov
mov
sbb
push
xor
add
dec
cltd
sub
ds
adc
les
loopne
lahf
dec
pushf
or
inc
inc
ss
dec
xor
sbb
mov
pop
std
lea
testb
test
nop
add
mov
jb
clc
bound
push
mov
push
sbb
sub
sub
xor
pushf
mov
xor
cmpsb
ja
jb
cld
mov
js
insl
mov
imul
sub
lock
sarb
dec
pop
mov
flds
inc
loopne
call
insb
dec
mov
xor
sti
shrb
adc
mov
mov
sub
or
testb
sarb
cmpsb
stos
inc
or
inc
jp
xchg
out
cmp
in
add
popa
inc
test
into
pop
ret
cwtl
out
lahf
adc
jl
in
out
rolb
mov
xor
mov
jg
dec
pop
push
jecxz
push
repz
xor
cld
mov
xchg
push
cmp
fdivp
das
mov
adc
jg
or
add
imul
cmp
aas
stc
sbb
xor
xor
xor
pop
lret
ljmp
lea
inc
scas
vmaxsd
mov
jp
jbe
cmc
lcall
sbb
cmp
cs
xor
push
dec
pushf
inc
xchg
jp
arpl
scas
mov
xor
xchg
inc
or
cmpsb
inc
lret
cmp
sbb
cmp
dec
insl
and
stos
stos
push
and
fs
mov
sbb
push
shll
rol
testl
mov
jns
xor
and
mov
cwtl
xor
mov
fdivrl
xor
les
movhps
and
xlat
add
dec
ret
dec
out
mov
mov
cmp
add
add
dec
mov
mul
cmpb
cmc
inc
jmp
faddl
or
dec
cmc
cltd
stos
push
cmp
aas
lock
loop
push
mov
lcall
jae
ds
repnz
or
pop
xchg
sbbb
xchg
mov
add
mov
adc
adc
lea
stos
push
loopne
aas
dec
jns
les
ss
in
add
or
pop
xor
stos
dec
push
arpl
inc
scas
pop
mov
enter
jl
xchg
adc
jmp
pop
cmc
fucomp
xor
mov
in
arpl
dec
arpl
mov
push
xchg
cmp
aad
push
jnp
push
out
mov
movsb
mov
mov
pop
xchg
mov
mov
add
in
fisubs
jmp
jmp
jg
lcall
lock
sarl
mov
hlt
cmp
popf
shll
sti
inc
fidivl
test
push
cmp
lret
imul
cmp
shrl
mov
dec
fcoml
mov
das
aam
loopne
or
push
or
rolb
notb
popl
push
dec
inc
lea
push
adc
adcl
dec
sub
xchg
es
push
lcall
xor
adc
cmp
sbb
mov
pop
inc
jns
lret
out
cmp
push
jmp
imul
mov
aaa
add
in
jbe
mov
arpl
jno
jae
pop
xchg
xchg
mov
add
leave
fstps
adc
inc
jp
lcall
dec
iret
fld
push
mov
cmp
mov
xchg
sahf
xor
inc
push
stc
test
rorl
into
pop
std
push
sbb
dec
sbb
xor
into
daa
insb
ds
sbb
adc
push
inc
inc
test
sub
jnp
ds
dec
loopne
push
push
push
movsb
sbb
add
sub
push
adc
adc
pop
es
testb
adc
sti
xchg
pop
adc
lcall
sbb
inc
inc
repnz
inc
jmp
xor
jno
out
jp
xor
repnz
dec
add
jmp
pop
scas
cwtl
das
lret
movsb
mov
jge
scas
psadbw
cmp
scas
push
test
or
xchg
cmp
enter
sub
filds
repnz
sti
inc
dec
jne
rol
enter
and
adc
mov
dec
push
loopne
sub
ret
ret
or
mov
notl
stos
inc
repz
dec
sub
push
sub
dec
pusha
cmpsb
add
test
rcll
call
inc
mov
insl
lock
xor
inc
cwtl
adc
dec
push
nop
cli
inc
cli
push
test
mov
or
or
add
inc
jns
xor
mov
movsl
pushf
adc
in
xchg
add
call
insl
sti
push
lea
add
fisubs
jae
sbb
call
fsubrl
xchg
fstps
inc
jmp
dec
aam
mov
xor
xlat
mov
je
icebp
push
and
jo
cmp
mov
fucomi
xchg
mov
xor
add
cli
cmp
insl
addr16
mov
xchg
cld
cmc
cmpsl
xchg
sbb
xor
ret
mov
mov
jbe
shrl
mov
rcrb
rcll
es
sbb
stos
cld
test
mov
stos
int
clc
rcl
xor
sahf
jbe
aaa
dec
insl
cli
sbb
pop
push
dec
mov
xor
sbb
popa
fadd
jns
ret
mov
aaa
push
sub
jb
add
xor
or
sbb
jbe
mov
daa
mov
sub
es
aam
dec
ljmp
fadds
repz
xor
imul
aaa
repnz
mov
pop
xchg
fwait
adc
testb
bound
pop
mov
dec
movsl
data16
cmp
hlt
mov
icebp
xor
sub
movsb
mov
mov
test
cld
and
dec
mov
stos
outsl
cltd
insl
clc
lahf
cmp
and
or
adc
mov
mov
adc
pop
scas
ljmp
loop
sti
cwtl
aaa
idivb
pop
and
pop
aad
mov
imul
add
int3
hlt
inc
adc
and
jne,pt
aam
jne
or
pushf
adc
pushf
xor
inc
pusha
lahf
xor
pop
shll
dec
mov
das
and
cmp
leave
cmpsl
daa
dec
orb
rolb
lcall
or
loope
xchg
dec
jle
xchg
pop
cmp
sub
cli
cmp
es
mov
mov
pop
cmp
sub
fists
add
pop
clc
loope
lcall
sti
pop
into
in
lret
push
ret
sahf
pop
add
xchg
ds
add
and
movsb
cmp
mov
mov
sti
pop
insb
and
xchg
out
push
dec
cld
fadd
call
arpl
add
mov
mov
dec
stc
adc
sti
sbb
les
sbb
lods
push
mov
inc
and
inc
push
cmp
mov
gs
adc
xchg
stc
popa
push
popl
test
dec
sub
inc
into
xor
or
lds
lods
stc
jno
or
jg
push
shrb
mov
enter
jl
sbbb
mov
fsts
pop
xchg
cli
mov
inc
stos
jle
and
sarb
dec
or
repnz
jae
sub
das
xchg
lds
stc
dec
and
jnp
cs
fnstsw
cwtl
lahf
inc
fcomps
mov
mov
adc
stos
loopne
out
data16
js
sarb
pushf
sahf
push
push
cmpsb
mov
jnp
cmp
inc
add
add
shrb
pop
xchg
lret
lods
mov
cmp
mov
cmp
aam
imul
xchg
inc
or
inc
mov
dec
jbe
fabs
mov
sub
nop
and
fdivp
adc
popa
mov
cwtl
imul
sbb
aas
add
cs
xchg
test
pusha
add
xchg
mov
or
hlt
mov
outsb
cs
add
sbb
inc
jnp
popa
mov
xlat
ss
jne
dec
and
jle
jb
ds
mov
mul
das
push
lds
mov
les
jmp
xchg
hlt
mov
lret
jnp
sub
adc
add
filds
sti
scas
addr16
mov
and
push
mov
or
movsl
fwait
adc
xchg
dec
cmpsl
xor
push
in
cmc
clc
pop
movsb
xchg
mov
ljmp
add
insl
cmp
dec
and
sub
jnp
mov
xor
push
pop
push
xchg
jae
xchg
xor
xor
mov
adcb
jnp
sbb
insl
adc
xor
lea
pop
jl
adc
in
daa
ljmp
xor
in
imul
mov
movsb
adc
push
mov
jne
fiaddl
dec
sub
pop
lods
sbb
mov
loopne
lock
fstpl
cs
add
push
add
aad
adc
push
es
loop
jbe
or
inc
std
ja
lds
or
arpl
inc
test
ret
pop
cmc
sarl
hlt
ret
test
inc
dec
mov
pop
fwait
ds
inc
insl
or
mov
lea
xor
sbb
cmp
inc
jnp
pop
out
rcl
nop
mov
in
inc
rcr
bound
mov
popf
fnstsw
mov
push
mov
jge
pop
jns
and
pop
call
sub
outsb
cmpsl
xchg
adc
mov
mov
rcl
divl
loope
lret
dec
rcrl
lcall
scas
dec
adc
cwtl
jno
cwtl
out
xlat
xchg
rcrl
ret
adc
loope
scas
mov
sub
xlat
inc
ja
jno
or
in
dec
into
mov
push
sahf
setno
sbb
pop
cwtl
fcmovu
sbb
clc
cs
sahf
push
insl
shlb
cmp
in
or
stc
mov
mov
in
clc
jno
sahf
or
out
fidivs
mov
es
in
xchg
adc
lahf
cmpl
pop
sahf
popa
adc
sbb
inc
xor
mov
jno
int
mov
pop
lods
jle
cmp
lahf
xor
pop
xchg
inc
bound
jg
dec
cltd
jle
xor
dec
out
icebp
rorb
jge
adc
inc
jl
xor
daa
adcb
jns
cld
dec
sub
inc
mov
jecxz
adc
push
stos
cmp
pop
fildll
add
mov
out
mov
fistps
cmpb
call
cmp
cwtl
pop
out
fmuls
adc
jl
jae
sahf
filds
mov
std
dec
jbe
clc
stc
or
rorb
loopne,pt
rcrb
cmp
mov
pusha
insb
std
lock
add
aam
push
clc
xor
negl
xlat
cmp
xchg
repz
mov
or
add
repnz
sbb
mov
lock
int
mov
js
insl
pop
add
sbb
in
leave
cmp
sub
test
jnp
push
push
cmp
push
into
xchg
insb
xor
push
fstps
jecxz
push
jmp
cs
ja
xchg
fnsave
cwtl
lret
out
xor
test
and
and
dec
and
roll
gs
sbb
cmpsb
pop
push
and
stos
ja
adc
pop
mov
pop
xchg
sbbl
jns
stc
sub
mov
xor
jmp
aad
mov
sbb
inc
fidivl
mov
cmp
mov
and
fisubrl
xchg
dec
push
pop
outsl
insb
push
andl
inc
ret
lret
jnp
and
inc
leave
xor
xchg
cmp
xchg
ss
add
test
fstpt
jae
pushl
dec
pop
pop
jg
inc
jno
push
adc
stos
fbld
je
jb
stos
pop
rcll
in
adc
cmp
mov
mov
shrb
cmp
ret
insl
add
sbb
mov
pop
pop
loop
mov
and
call
jno
mov
pop
mov
aam
repnz
cmp
loopne
je
mov
xor
mov
and
and
mov
pop
cltd
or
insl
mov
pop
xor
hlt
or
jb
rorl
mov
lds
push
push
pop
js
jle
sub
dec
imul
xrelease
pop
or
lret
into
dec
mov
ljmp
xor
repnz
mov
loope
mov
adc
mov
call
add
nop
imul
or
out
ret
jg
sub
jb
aad
fidivrs
jmp
mov
add
xchg
in
cmp
dec
xchg
pop
mov
add
mov
aas
lcall
imul
xchg
sahf
cmp
add
add
lahf
xor
pop
movlhps
push
mov
neg
mov
inc
scas
sub
mov
rcll
insl
cwtl
fwait
mov
jae
loop
sbb
and
and
dec
and
movsb
cmp
in
pop
ret
lahf
sbb
xor
jge
mov
adc
inc
push
mov
sbb
pop
inc
push
mov
mov
xor
in
ss
movsl
xor
jb
xchg
xor
jnp
in
jae
dec
popa
push
sbb
mov
or
sbb
sbb
xor
out
pop
cli
fdivrs
fstps
stc
test
xchg
xchg
pop
and
xor
sub
aam
push
mov
loop
xchg
push
icebp
jbe
ror
xor
cmp
push
mov
das
dec
xchg
cltd
out
adc
ja
lds
cld
inc
movsl
adcl
xor
mov
clc
sub
sub
add
mov
jnp
xor
pushf
cmp
nop
sub
xor
xor
mov
xchg
loopne
mov
cmp
xor
out
xchg
sub
ds
add
cmp
movsb
sub
inc
lock
in
shll
int
js
hlt
jp
xor
xchg
pop
sub
xchg
xchg
imul
popa
mov
push
cmp
cmc
inc
mov
dec
pusha
mov
shlb
mov
cmp
hlt
push
inc
xor
or
fstps
cmp
jmp
sub
or
mov
stos
cmp
xchg
mov
push
in
daa
dec
jp
xor
adcb
cmp
or
mov
outsb
aam
and
insb
fcoml
add
mov
dec
mov
mov
fwait
insl
out
push
gs
or
ja
jns
std
jae
xchg
mov
add
lcall
xor
decb
mov
push
cmp
sub
or
cmp
out
aaa
scas
sarl
cltd
xchg
add
out
insl
scas
out
xchg
inc
sub
sbb
cwtl
call
mov
mov
leave
loopne
clc
mov
jnp
xchg
fs
mov
mov
inc
cmp
cwtl
mov
sbb
push
or
call
jae
xor
sbb
outsb
adc
mov
xchg
pop
or
xchg
or
push
fadds
adc
mov
jnp
hlt
fdiv
xlat
inc
add
cmp
loopne
mov
mov
cmp
jnp
inc
es
inc
sbb
ret
adc
cmpsb
shlb
hlt
cs
fistps
jg
inc
inc
jnp
pop
mov
rorb
clc
push
mov
or
xchg
cmp
inc
out
xor
clc
mov
cld
sbb
fnstenv
push
push
dec
xor
test
xor
std
repnz
adc
mov
shrb
and
arpl
pop
xchg
xchg
lcall
cmp
andb
loopne
mov
cs
into
jbe
in
and
sbb
push
lcall
xchg
jo,pn
mov
push
inc
sub
fildll
jnp
xchg
enter
and
pop
cmp
push
or
jg
xchg
out
push
xor
adc
nop
out
rclb
inc
inc
mov
sbb
repnz
add
int3
fdivs
lahf
shr
cmp
jg
jns
fildll
inc
mov
push
fdivs
fsubl
and
lods
in
fldenv
cmp
sti
sub
push
movsb
sahf
mov
sub
sub
fmull
pop
dec
mov
and
mov
fistps
sub
aam
imul
inc
mov
cmp
inc
xor
leave
jae
sub
popf
xchg
fwait
bound
cmp
and
push
or
ficompl
jne
xchg
xchg
stc
xchg
mov
push
hlt
stos
sbb
fsubrp
cwtl
adc
leave
mov
test
lea
sub
jecxz
sub
mov
je
cmc
stc
js
ja
ja
sbb
sub
adc
jnp
jae
pop
mov
xchg
or
cmp
inc
gs
mov
loop
xchg
lcall
jne
xlat
fdivr
stos
xchg
xor
cli
enter
mov
mov
popa
jbe
stos
lds
sub
mov
iret
inc
fwait
pop
idiv
pop
sub
clc
pop
and
xchg
adc
sbb
insl
rcrb
dec
mov
mov
xlat
xchg
jecxz
push
sub
fmul
and
jbe
rcrl
mov
add
or
fdivl
mov
jecxz
mov
xor
push
push
cmp
iret
mov
mov
leave
movsl
icebp
into
sbb
fisubl
leave
popa
sarb
jle
mov
jp
add
push
mov
pushl
xor
sarb
leave
and
adc
inc
sbb
push
out
jbe
into
xor
mov
adcl
push
pop
nop
daa
in
out
fwait
pushf
jbe
int
js
jp
mov
and
in
insl
lds
pop
sub
dec
inc
cli
orb
bound
or
adc
scas
push
leave
test
aam
mov
fidivrs
cld
xchg
fadds
and
test
mov
inc
js
loope
inc
xor
mov
cltd
hlt
lret
out
push
xor
adc
mov
mov
cli
push
mov
hlt
js
lret
push
mov
jae
subb
hlt
into
aad
subb
test
mov
arpl
push
mov
xchg
insb
pop
in
xchg
xor
pop
mov
add
push
cmp
orl
xor
xor
xchg
lea
sbb
jle
addr16
jnp
adc
fstps
lods
imulb
aaa
pop
ljmp
into
mov
aas
adcl
arpl
insl
or
jecxz
ffreep
push
rcll
sarb
ljmp
aam
daa
dec
andl
mov
or
ret
aam
fistl
pop
aaa
ffree
xlat
test
leave
stos
lods
pop
loopne
sbb
lcall
mov
lods
inc
mov
stc
das
cmp
je
mov
push
pusha
push
jle
test
mov
mov
jae
in
cli
adc
aam
xchg
mov
or
or
mov
arpl
fsubrs
xor
out
dec
mov
sahf
inc
in
sbb
push
imul
push
dec
dec
xchg
enter
aam
and
inc
mov
xchg
cmp
xor
mov
mov
aad
cmp
nop
sbb
add
xchg
xor
fwait
cmc
or
ja
cmp
pushf
add
jns
cmc
xor
and
pop
dec
out
repz
pop
mov
cmp
mov
cmpsb
mov
push
rep
pusha
incb
push
xlat
inc
dec
pop
xor
in
push
cmpsb
xor
push
or
pop
lds
cmp
push
popf
adc
sub
fwait
adc
mov
push
jnp
adc
decb
push
cmp
mov
push
sarl
mov
pop
or
mov
negl
and
push
and
cmp
cld
or
sub
fcomi
inc
add
sub
std
sbb
pop
xchg
data16
out
dec
push
xor
adc
in
das
xchg
jae
mov
fbstp
xchg
push
adc
xor
fdivl
xor
mov
pop
in
in
test
jl
test
loopne
jae
insb
mov
into
inc
sbb
fidivs
nop
mov
cmp
and
mov
aad
or
ret
dec
in
xor
push
and
lahf
bound
jle
inc
adc
inc
push
inc
pop
out
xchg
rorb
imull
mov
lods
cmp
jg
xor
and
mov
in
sub
or
stos
addb
xor
push
sbb
subb
sbb
popa
jnp
push
cs
jnp
subl
lret
dec
mov
mov
cmp
xor
shrl
and
adc
loopne
repnz
mulb
push
andb
add
shll
cmp
js
lds
jmp
mov
ds
cmp
sarb
pop
cmp
or
fwait
dec
push
mov
jp
pop
add
dec
push
das
insl
xor
or
data16
push
push
push
push
jns
pop
xchg
faddl
xchg
xor
lcall
lcall
or
mov
cs
or
add
and
hlt
call
lcall
test
mov
adcb
cwtl
test
leave
hlt
out
mov
fmuls
fiaddl
xor
lret
lret
fcomps
push
inc
rcrb
jp
xor
pop
xchg
ret
lcall
push
test
mov
mov
jbe
adc
popa
lret
or
stos
stos
sbb
push
sbb
push
pop
outsl
or
jle
lods
pop
and
xchg
ret
xchg
adc
jae
xor
sbb
imul
xchg
mov
jle
insl
cmpsb
lcall
lret
fcomps
enter
push
test
test
insb
cmpsb
ret
pop
bound
sbb
enter
in
ret
pop
ret
push
dec
mov
lock
cli
loop
cmpsb
out
into
or
xchg
fcompl
rolb
jp
shl
xchg
push
call
pop
pop
cmpsb
jge
scas
adc
fmull
mov
cmovge
scas
lcall
xchg
and
ret
shlb
fnstcw
xchg
mov
test
lcall
cs
lcall
dec
pop
mov
out
cwtl
cli
scas
push
mov
mov
lcall
sub
cltd
dec
sbb
rorb
loop
and
push
sahf
jmp
fdivl
rorb
mov
jb
ret
into
jb
sub
push
lcall
pop
leave
or
inc
js
cli
push
mov
jl
loopne
enter
xchg
cmp
dec
or
lret
lahf
sar
xchg
inc
push
sub
out
mov
stc
jnp
jp
aad
xor
jae
dec
test
mov
mov
repz
stos
sbb
mov
xlat
mov
fildll
push
rorl
rcl
sbb
mov
pop
inc
mov
cli
sub
xlat
cwtl
add
xchg
xchg
mov
enter
pop
ret
push
test
fmull
enter
shld
cmp
out
pop
pop
pop
xor
mov
jl
divb
sub
std
cwtl
dec
inc
aad
out
jbe
inc
add
leave
adc
mov
sbb
shll
jle
mov
sub
std
sbb
adc
lea
lock
movsb
fs
pop
aad
xor
fildl
adc
push
sahf
adc
in
inc
ror
dec
xor
add
out
add
ds
adc
in
pop
push
pop
mov
cmp
inc
adc
xor
cmp
icebp
repnz
shrb
rorb
inc
in
xor
out
icebp
scas
xchg
sub
call
sub
lods
and
or
pushf
sbb
lret
insl
sti
fildll
ret
mov
insl
mov
jg
mov
pop
fbstp
sbb
xlat
rolb
sbb
mov
adc
jp
sbb
pop
sbb
jbe
add
mov
sarb
jb
jne
pop
jb
add
pop
xchg
push
push
lds
rcl
imull
adc
ret
loopne
pop
jge
mov
dec
cs
sbb
jns
out
lret
mov
dec
xor
cmc
xchg
call
outsl
inc
mov
xchg
jecxz
dec
or
mov
xor
cmpsl
and
notl
js
aam
inc
outsl
jmp
mov
fbstp
int3
lds
xchg
stos
stos
out
mov
shll
jge
jns
in
dec
push
jne
dec
push
into
test
stos
pop
mov
adc
scas
jecxz
dec
mov
icebp
push
lret
jnp
scas
out
adc
and
xchg
jmp
ss
cmp
cmc
jp
or
popa
pop
jne
xor
sub
fnsetpm(287
pop
push
and
dec
and
js
push
lahf
fsubrl
fs
inc
mov
rcrb
xor
adc
mov
jae
mov
lahf
nop
or
cmp
add
fsubrl
or
jge
mov
xchg
xor
or
jecxz
cs
cmp
inc
fdivl
mov
ficoml
jnp
ss
imul
das
into
mov
cmp
aaa
insl
movsb
xchg
loopne
dec
and
mov
mov
mov
lods
cmp
xor
jecxz
fstl
int3
out
ljmp
mov
es
cli
adc
and
xchg
mov
sbb
sub
clc
and
jns
std
mov
jmp
lcall
ja
faddl
sub
inc
stc
xchg
aas
mov
scas
inc
jge
xor
adc
xor
into
gs
mov
iret
mov
fucomi
and
jp
mov
cmp
sti
call
ret
lahf
mov
in
sub
add
jns
outsl
sbb
jae
nop
push
pop
pop
mov
lret
cmp
sub
inc
inc
incl
rcrb
iret
push
ror
icebp
mov
xchg
outsb
orb
in
aaa
jns
aad
or
pop
or
ds
xchg
push
xor
lret
pushf
xchg
mov
jne
pop
fstpl
pushf
sbb
sti
push
mov
lret
push
add
adc
dec
xchg
adc
pop
nop
test
ss
movl
out
data16
call
lret
xchg
fnstcw
mov
test
in
jp
mov
rcl
stos
loopne
ss
mov
adcb
decw
inc
int
jge
mov
lret
xchg
jo
cmpsl
pop
add
ret
cmpb
dec
add
xchg
mov
push
shll
or
pop
dec
mov
xor
in
inc
fidivrl
adcl
call
dec
push
push
lods
in
xchg
xchg
lods
push
lahf
lahf
or
pop
les
pop
adc
jp
lret
xor
mov
xor
push
xchg
push
cmp
xchg
or
repnz
push
adc
push
in
dec
fcoms
lcall
pop
pop
dec
dec
rorb
ljmp
xlat
and
adc
int3
in
es
or
mov
aaa
cmp
std
jnp
inc
dec
mov
lods
xchg
out
lock
add
pop
mov
mov
push
xchg
jp
dec
pop
mov
in
int3
xchg
pop
mov
dec
cmpsb
inc
cmp
push
sarl
ss
push
push
cmp
ljmp
ror
and
cmp
mov
mov
dec
idiv
iret
mov
dec
push
les
xorb
sbb
in
mov
xor
mov
clc
ljmp
cmp
dec
addl
mov
pop
cmc
lret
loope
jae
scas
cwtl
xor
lret
push
push
xchg
je
dec
loope
fisubl
add
jo
jne
fnstenv
xor
sub
imul
repz
lcall
pop
test
pop
cs
out
test
mov
js
inc
incl
scas
add
in
call
pop
stos
leave
call
lds
xchg
inc
mov
mov
sbb
fcoms
mov
xor
call
adc
inc
sub
dec
pop
or
cwtl
xchg
xchg
ret
mov
das
ja
and
jb
cs
mov
cwtl
mov
loope
repz
inc
push
cmp
shl
pop
dec
mov
fiaddl
in
les
sub
not
shr
ljmp
xchg
lret
pop
inc
in
sub
mov
xor
test
jge
or
aam
xchg
lret
scas
mov
test
insb
dec
data16
add
scas
sub
inc
lock
push
ja
das
repnz
mov
cmp
in
push
movsl
inc
xor
xor
adc
inc
mov
sbb
paddusw
insb
outsl
mov
mov
mov
xor
add
pusha
cmp
lcall
xor
mov
inc
popa
sub
les
test
jmp
cmp
test
add
sbb
rorl
mov
dec
xor
inc
xchg
add
cmp
clc
aam
adc
scas
loope
lcall
or
or
pop
jl
cmp
mov
psllq
stos
call
jae
cmp
lret
xorl
mov
sbb
mov
sahf
fwait
popf
or
mov
sbb
push
xchg
jbe
sub
out
jge
inc
pop
push
adc
xchg
xlat
pop
loopne
ret
xchg
mov
into
and
push
mov
cwtl
sub
hlt
rcrl
out
xchg
loopne
sbb
add
sbb
adc
push
hlt
and
cwtl
repz
loopne
push
sbb
xor
in
pop
dec
mov
sub
or
sbb
mov
jbe
sbb
lret
sbbl
sarb
pop
aad
cmp
pushf
sbb
sub
lods
leave
loope
jb
fildl
rorl
lds
xor
sub
push
sub
pop
cmp
jae
mov
xor
dec
and
lcall
scas
fdivl
lods
pop
lea
stc
call
fistpl
xchg
mov
rorb
dec
ljmp
push
shrb
push
stos
or
push
push
jbe
aaa
popa
mov
out
xorl
push
dec
in
shlb
sbb
scas
das
push
inc
jp
lods
pop
flds
stos
std
stos
les
fidivl
movsl
loopne
movsb
and
inc
jge
ret
xor
inc
and
or
or
rcrb
aaa
shr
xor
loope
in
cmp
das
pop
in
nop
inc
pusha
into
or
pop
xor
sbb
dec
aam
adc
mov
pushf
sbb
fs
shll
adc
jne
or
or
inc
push
or
jl
in
fldt
notb
pop
clc
imul
or
mov
inc
push
sub
add
xor
outsl
mov
or
jmp
xor
push
int
push
push
add
imul
jae
cmp
jnp
push
mov
xchg
jne
xchg
scas
int
sarl
dec
xor
insb
je
test
jae
inc
xchg
mov
xchg
jne
dec
rorl
inc
xor
orb
xchg
push
adc
xor
fcomps
stc
cwtl
mov
pop
pop
ret
fcomip
jg
mov
sbbl
or
xor
jo
test
jae
int
xchg
mov
cwtl
cmpps
adcl
pusha
adc
dec
xchg
push
lahf
inc
xchg
mov
and
cmp
mov
inc
fbstp
inc
cmp
pop
sub
pop
jp
lret
iret
add
xor
pop
lret
cwtl
push
dec
push
fstps
cltd
inc
stos
out
mov
lahf
outsl
or
xor
arpl
adcb
xchg
mov
and
cmp
mov
mov
neg
mov
pushf
or
ret
fldl
jne
mov
sbb
mov
loope
push
or
xchg
jae
inc
mov
dec
xchg
leave
scas
xor
shrl
inc
cs
out
inc
sbb
test
push
add
test
sbbb
push
cmp
add
cwtl
jae
or
in
jne
push
dec
dec
and
es
addr16
in
pop
mov
mov
adc
clc
hlt
scas
xchg
sbb
pop
bound
movsb
fnstcw
adc
mov
fistl
rcl
sbb
lock
or
jns
sub
add
hlt
imul
dec
test
inc
cli
or
add
adc
outsb
jecxz
test
xchg
sti
rorb
cmpsb
cmp
cmp
jmp
aaa
adc
cmpsb
cmp
and
loopne
and
adc
je
in
rolb
sbb
mov
xor
push
jl
xor
shl
imul
xchg
cmpsb
xor
xlat
push
pushf
mov
pxor
pop
sub
rcrl
mul
fldenv
or
stos
arpl
add
pop
pushf
mov
in
push
cmp
cmpsb
jecxz
xchg
sahf
lds
cmp
jle
xor
cmc
shl
cmp
lret
mov
out
sbb
mov
mov
sub
lds
mov
xchg
insl
repz
in
daa
pop
xor
pusha
adc
jge
enter
stos
inc
push
mov
jo
cltd
int3
mov
mov
rcr
or
cmp
cld
dec
shlb
mov
push
mov
out
xor
fcmovnb
ds
int3
sbb
pushf
inc
dec
mov
inc
mov
pusha
ja
push
out
andl
adc
fs
push
push
mov
push
inc
adc
jmp
adc
incb
fmull
xor
shr
aam
in
xchg
inc
es
cmp
testb
push
and
lret
add
mov
mov
lret
into
test
push
dec
subb
fwait
push
jb
jecxz
add
movb
dec
and
jnp
sub
loope
xchg
add
lea
adc
test
idivb
inc
pop
pop
sub
xchg
jne
dec
mov
mov
mov
add
icebp
or
xchg
xor
mov
ret
ja
mov
sub
lods
cltd
sbb
mov
pop
lcall
je
fsts
adc
xchg
and
cmp
cmpsl
jno
fs
pop
pop
cwtl
cmp
push
in
movsb
jecxz
cwtl
in
jnp
aas
add
push
push
mov
mov
dec
xchg
push
mov
cmp
adc
fisubl
mov
xor
xchg
push
jo
outsl
add
inc
lahf
rclb
int3
mov
imul
dec
dec
sbb
lcall
or
inc
test
filds
loopne
pop
xlat
aaa
test
fidivrl
push
dec
rorb
pop
xchg
out
pop
push
iret
push
adc
mov
mov
inc
js
aad
icebp
arpl
shll
pop
mov
std
test
inc
cld
pop
xchg
cmp
neg
mov
mov
addl
dec
bound
pop
popf
xor
pushl
adc
or
and
cli
or
stos
cmp
insl
push
push
push
cmp
sbb
sbb
pop
and
adc
jge
xor
aam
in
filds
test
cmpsl
mov
xor
test
lahf
loop
adc
sbb
inc
and
add
nop
pop
mov
sub
sbb
adc
fistps
shlb
xlat
pop
sbb
sbb
imul
lock
push
ficompl
mov
test
daa
sbb
leave
jbe
sbb
daa
add
or
movb
sbb
out
neg
xchg
sbb
pop
daa
mov
andl
and
ficoms
adc
das
shll
loope
popf
pushf
adc
inc
jne
ficoml
jae
jnp
xchg
push
sbb
shrl
add
inc
xor
sbbb
les
fists
xchg
in
fisubs
or
push
jmp
push
lcall
cltd
hlt
into
and
and
or
mov
test
aas
or
add
jb
aas
pop
jne
je
pusha
test
pop
fsubrp
mov
dec
pop
fldl
add
pop
fidivs
loope
sub
enter
into
push
sbbl
cwtl
cmp
mov
insl
or
loopne
mov
push
mov
fiaddl
jno
into
dec
inc
cmp
dec
mov
lahf
mov
popa
add
push
or
fsub
iret
jmp
sbb
push
push
out
inc
mov
test
cwtl
sub
xor
dec
psllw
pop
adc
pop
xchg
inc
mov
xor
movsl
mov
repnz
js
mov
repz
adc
inc
bound
mov
adc
or
and
lahf
aas
jae
mov
jecxz
mov
cmpsb
into
cwtl
gs
je
mull
in
int
jmp
test
mov
push
inc
dec
jl
lcall
fsubp
sbb
loop
mov
cmp
push
mov
xor
repz
mov
lcall
inc
fidivrs
xchg
cmpsb
scas
mov
mov
ds
imul
cmp
scas
jae
out
test
fistps
scas
sub
xor
leave
int
jecxz
lock
repnz
cli
imul
lret
inc
fs
dec
out
pop
add
scas
inc
mov
inc
pop
sarl
push
mov
mov
add
sbb
insl
mov
fdivs
ret
je
and
daa
lcall
or
inc
push
les
or
gs
xchg
movsb
rcr
pusha
inc
mov
sub
xlat
fsubrs
aas
rcll
push
stos
pop
cwtl
ja
jmp
sbb
rcrb
xchg
je
xor
cmp
cmp
sbb
call
sbb
mov
mov
imul
ds
push
xchg
push
push
lahf
inc
in
cmp
xchg
jne
mulps
aaa
out
lds
inc
sbb
jmp
jns
ret
shlb
imull
or
sub
cvtpi2ps
dec
jmp
imul
dec
pop
mov
push
insl
or
sti
fwait
lret
adcl
pop
add
add
and
cltd
cmp
mov
sbb
aam
mov
bound
sub
sarb
push
lods
pop
gs
test
dec
bound
imul
inc
jle
mov
stos
jb
test
xchg
dec
aas
cmp
cmp
std
inc
test
and
pop
mov
xchg
fstps
imul
fists
adc
jns
test
push
add
imul
mov
mov
jecxz
xor
push
xchg
mov
je
mov
movsb
xchg
out
mov
adc
xchg
fsubrs
flds
enter
sbb
mov
xor
mov
cs
xor
push
inc
fidivs
xor
cmc
dec
arpl
add
mov
push
dec
push
xchg
inc
push
jbe
push
mov
cmp
daa
mov
mov
insl
mov
in
cld
out
nop
aam
sbb
xchg
inc
add
dec
xor
cmp
nop
jnp
pop
mov
sub
dec
jae
cmp
sbb
sbb
test
cmpsb
stos
ljmp
sbb
mov
cmp
mov
xor
xchg
sub
sbb
daa
orl
xchg
add
sub
cltd
mov
push
lret
xchg
idivl
xor
mov
xor
mov
cli
and
inc
mov
xor
fwait
cwtl
dec
push
pushf
bound
xchg
mov
divl
ljmp
gs
cltd
push
or
jmp
xchg
jo
sbb
lret
enter
push
dec
xchg
mov
cmp
xchg
cmp
mov
cld
push
xchg
mov
aam
mov
push
mov
add
rolb
pushf
aad
cli
insl
inc
inc
aam
gs
dec
dec
jns
mov
push
push
gs
cmp
mov
leave
mov
aad
lea
cld
repnz
fmuls
and
cmp
push
dec
jnp
xchg
inc
mov
mov
add
adc
dec
ljmp
xchg
mov
and
adc
mov
xor
jecxz
test
dec
rclb
xchg
lds
pop
lea
and
cmp
insl
push
gs
shll
push
dec
notb
fstpt
or
xchg
pop
xor
cmpsb
flds
xor
inc
das
lret
ss
or
or
adc
and
dec
cltd
out
inc
stos
dec
pop
fnsave
inc
xchg
cmp
shll
enter
lea
xor
push
pop
mov
inc
and
inc
push
sbb
mov
jo
push
scas
movsl
mov
inc
out
sbb
jno
pop
xchg
insl
aam
inc
mov
stos
mov
xchg
xor
cmp
std
pop
inc
dec
aaa
push
flds
xchg
es
adc
or
or
enter
dec
adc
mov
cmp
add
enter
jno
frstor
leave
fnstcw
cmp
pop
or
add
call
test
xchg
jle
lea
pop
sbb
or
xor
std
leave
leave
xor
mov
mov
xor
sub
dec
pushf
mov
lcall
push
dec
ret
fdivs
pop
lea
push
jb
sub
clc
cmc
adc
or
shlb
or
pop
gs
dec
cli
cmp
mov
cmp
in
jno
movsl
xchg
pop
pop
in
pop
cltd
ds
pop
push
dec
pop
popf
and
mov
add
jb
or
call
repnz
mov
fnsave
xor
nop
sbb
adc
es
mov
push
mov
into
cmp
ljmp
ja
jb
mov
cmpl
fidivs
add
lret
cld
sti
stos
push
or
adc
leave
mov
jnp
push
add
sbb
sarb
xor
aad
std
sbb
jns
dec
dec
mov
xchg
mov
lahf
cmpsb
xchg
je
lcall
push
jg
insb
leave
stos
incl
daa
or
cs
ss
lds
mov
shr
ss
sbb
and
add
es
dec
shll
mov
xor
ret
loope
in
mov
xchg
mov
repnz
fnsetpm(287
push
push
inc
mov
fimull
outsl
ja
into
mov
fwait
pop
hlt
dec
xorb
xor
mov
arpl
mov
test
out
jnp,pn
pop
ljmp
mov
inc
repnz
cmc
in
or
notl
ret
xchg
or
cmp
repnz
dec
cmp
xor
inc
bnd
inc
or
dec
loope
cwtl
fsubrs
sar
mov
inc
dec
loop
aam
lock
rorb
pop
add
shr
es
inc
mov
pop
inc
add
xor
fs
rclb
inc
out
out
test
push
dec
jp
pop
sub
xchg
pop
cmp
mov
push
pushf
xor
adc
inc
sbb
loopne
push
sbb
mov
arpl
and
xor
cmp
into
xchg
jp
ret
sub
add
inc
push
sub
or
push
cmp
lret
mov
js
fdivrs
insl
cmpsb
pop
push
js
sbb
and
xchg
test
movsb
js
cs
dec
jb
xchg
pushf
fiadds
clc
adc
test
mov
sbb
or
sbbb
xor
pop
sti
cltd
or
xchg
inc
add
lcall
or
push
or
dec
xchg
dec
cld
and
cwtl
pop
pop
cmp
dec
inc
stos
mov
mov
push
sbb
push
mov
mov
xor
dec
je
push
inc
inc
inc
fistpl
xor
imul
out
xchg
rolb
sub
movsl
sub
cmp
inc
inc
arpl
pop
pop
sub
cld
inc
enter
pop
jno
and
les
stos
cmp
jecxz
jge
mov
gs
orb
stos
xor
aam
enter
repz
xor
or
add
push
mov
fnstsw
push
addr16
push
and
push
push
mov
xchg
aam
and
push
loope
cmovs
mov
popf
jns
testb
aad
jnp
inc
inc
jl
pushf
jmp
cld
push
fs
dec
std
mov
jecxz
dec
or
fisubs
stos
xchg
insl
xor
lret
and
adc
roll
jecxz
mov
and
inc
pop
inc
and
jne
insl
jno
test
or
jmp
fimull
cmp
data16
push
test
mov
pop
adc
xchg
movsl
cmp
and
lcall
outsl
rorl
pop
cwtl
das
mov
fs
sbb
add
push
or
inc
gs
mov
sbb
pop
or
ljmp
stos
xchg
add
fstpt
jae
out
inc
cltd
push
cwtl
sub
or
test
pop
inc
loop
outsb
stc
cmc
dec
and
into
cld
push
jle
daa
jno
stos
inc
push
adc
insl
js
dec
cmpsb
mov
andl
and
fistl
bound
shrl
stos
loop
cwtl
lea
ja
inc
mov
push
fidivl
in
push
push
sub
mov
fistl
mov
inc
push
mov
out
push
adc
fimull
pop
ds
xlat
imul
jbe
fwait
jp
pop
push
cmp
repnz
in
or
or
or
adc
xlat
ficomps
in
dec
stc
rorb
imul
nop
jb
xor
fs
nop
lcall
mov
lret
inc
xchg
or
mov
mov
push
push
cmp
xor
jno
pushf
xchg
and
popa
hlt
fimull
pop
stos
lock
mov
pop
inc
rorb
in
pop
stos
inc
sbb
mov
adc
ss
cmp
push
adc
jae
arpl
jnp
mov
mov
cmp
ljmp
jnp
setnp
inc
adc
cmp
dec
divl
cmc
rolb
pushf
cmpl
inc
out
push
jp
imulb
mov
mov
pop
stos
jo
cltd
jle
inc
dec
mov
cli
mov
cmp
andb
fiaddl
outsl
lods
test
jg
pop
pop
xchg
insl
ficompl
testb
pop
fldcw
fsubs
jnp
add
jecxz
loope
pop
mov
gs
jle
aaa
dec
lcall
sub
and
stos
sbb
incb
clc
fldenv
in
shrb
clc
mov
stc
rsm
mov
push
push
inc
cld
or
xchg
dec
mov
lcall
outsb
xchg
retw
ss
mov
xor
mov
icebp
inc
inc
imul
inc
or
pop
int3
xor
and
cltd
jmp
je
dec
pop
fsubs
aad
jno
inc
mov
jecxz
lret
enter
fsub
mov
mov
ss
dec
cmc
jge
or
add
or
dec
xchg
cmp
enter
or
pop
decb
loopne
fiaddl
enter
test
out
test
fistl
xchg
push
sbb
rolb
dec
cwtl
sahf
add
xchg
xor
ret
and
imul
or
xor
xchg
repnz
test
jnp
int3
aad
adc
test
cmp
mov
push
mov
cmp
mov
xchg
and
ret
cmp
mov
add
inc
pop
insl
lret
test
adc
mov
mov
xchg
in
cs
mov
jp
or
aam
repnz
pop
testb
rclb
mov
call
dec
pop
lahf
lods
inc
lret
xor
cwtl
inc
sbb
in
rcll
shlb
push
bound
pop
inc
and
cmc
fcompp
xchg
dec
lret
int3
test
push
pop
lcall
inc
jle
dec
push
or
or
cmp
roll
lret
xchg
xlat
mov
test
xchg
sti
movsl
xchg
or
adc
stc
xchg
popf
mov
decb
or
pop
sub
lret
push
sub
inc
xchg
loop
or
sbb
enter
inc
movsl
je
jo
jno
shll
pushl
test
push
stos
hlt
je
jns
cmp
sub
mov
cmp
lret
js
test
shr
inc
dec
popf
cmp
pop
sahf
push
cmpsl
scas
popf
mov
push
sahf
mov
lret
or
push
mov
insl
mov
insb
mov
push
xchg
jno
mov
in
jg
enter
dec
shr
sub
pop
leave
or
outsl
pop
push
jle
mov
push
outsb
fmul
mov
stos
aad
loop
adc
ljmp
or
xchg
lcall
ljmp
loop
xor
dec
enter
lcall
push
push
inc
pop
mov
dec
mov
push
push
into
jmp
mov
xchg
inc
scas
aam
mov
push
push
pop
and
and
sbb
or
rcll
call
lcall
ret
clc
and
scas
lods
mov
push
or
sub
cmp
fnstcw
sahf
jno
push
jecxz
decl
ja,pn
inc
ljmp
bound
nop
push
sub
push
push
imul
call
xchg
mov
cmp
pop
loop
lret
insb
outsb
cli
testb
adc
rol
push
jg
enter
repnz
adc
dec
xor
rcll
xchg
mov
sahf
lea
insb
ret
mov
ja
jb
push
mov
cwtl
inc
test
aad
push
push
in
sub
push
mov
jl
popf
shl
mov
pop
add
ret
into
rcrb
pop
pop
setae
push
and
mov
or
enter
inc
mov
mov
mov
or
cld
or
rdmsr
add
or
add
mov
mov
lahf
ficoml
dec
mov
insl
pusha
xchg
inc
or
cmp
ffree
mov
xchg
cld
push
jae
jbe
daa
in
mov
or
cmc
jo
jbe
adc
in
insl
fstl
loopne
xor
pop
sub
jecxz
mull
lcall
pop
cmc
arpl
clc
in
jnp
mov
js
clc
xchg
ljmp
es
shufps
cwtl
gs
inc
and
mov
cmc
push
and
leave
cltd
inc
pop
data16
and
jle
or
push
mov
cmp
rclb
or
mov
inc
cmp
dec
sahf
dec
adc
ret
and
fisubl
nop
ss
dec
popa
lea
lds
sbb
out
loopne
scas
jmp
daa
pushf
std
popa
je
or
mov
xor
mov
pop
mov
or
bnd
fisttpll
dec
sub
cmpsl
xchg
pop
ss
std
xchg
ja
mov
xlat
dec
lock
sub
xor
jno
and
xor
imul
jo
push
add
sti
sahf
mov
sbb
stos
cmp
pop
inc
mov
xor
les
mov
iret
push
xlat
mov
out
add
and
sbb
lcall
cmp
dec
addr16
inc
in
inc
adc
xor
mov
lret
mov
push
cltd
lahf
jecxz
pop
push
sub
ficoml
pop
pop
mov
sub
cmp
lods
push
in
jg
fisttpl
or
xchg
jbe
shrl
sti
xor
andl
push
adc
lcall
pop
push
jns
inc
and
add
stc
pop
loopne
insl
popa
addr16
sbb
inc
jmp
imul
adc
xchg
dec
bound
and
into
cltd
push
mov
dec
pop
inc
imul
adc
stos
andb
mov
adc
shlb
pop
cmp
dec
ret
out
push
mov
mov
mov
icebp
mov
sahf
in
xor
pushf
inc
sub
add
mov
adc
xlat
or
mov
inc
or
dec
aam
pop
fdivs
adcb
ficomps
xor
pop
xchg
adc
into
xchg
shlb
and
push
xchg
repnz
adc
and
insl
adc
sti
sub
in
cli
xchg
pop
movsb
stos
inc
xor
cmp
xchg
xor
sbb
stos
or
sub
fstpl
pop
shrb
and
mov
mov
push
fbstp
stos
cmpsb
mov
sbb
fldt
mov
mov
aam
mov
xchg
loopne
sub
mov
rorb
inc
fcomps
rsm
fidivs
stc
arpl
lock
imul
pop
inc
rol
fwait
sbb
jle
pop
mov
inc
cmp
out
dec
sahf
xchg
push
cmc
fsubp
mov
out
lock
ss
pop
cwtl
mov
sbb
cmp
stc
push
sbb
inc
inc
xlat
add
sbb
repz
dec
lcall
sub
not
or
push
popa
pop
insl
inc
push
mov
pop
call
into
shll
push
out
jge
xlat
jns
lea
aad
jo
push
sbb
in
mov
arpl
mov
js
popa
mov
inc
ljmp
insl
test
loop
ljmp
pop
mov
cmpsb
adc
lods
imul
aas
push
inc
jae
test
insl
pop
and
aad
sahf
xor
pop
popl
outsl
loopne
sbb
xor
and
shlb
sub
jnp
dec
dec
call
subl
popa
bnd
xchg
or
adc
inc
mov
iret
loop
push
xchg
lods
icebp
loope
xchg
fld
mov
mov
xor
test
nop
pop
cmp
adc
push
hlt
dec
scas
add
fsubl
std
aaa
sub
xor
movsb
lret
pop
insb
lahf
aam
ds
insb
xor
in
idiv
xor
mov
sub
adc
adc
fdivrl
les
lret
push
mov
icebp
xchg
insl
daa
aam
push
mov
pushf
dec
jge
xchg
push
pushf
ficoml
sahf
or
sub
cmc
cmp
aaa
hlt
xor
mov
xchg
rolb
arpl
clc
test
mov
jg
loopne
std
jp
sub
popa
scas
xchg
inc
inc
pop
mov
sub
decl
pop
inc
dec
dec
jp
push
test
repz
mov
mov
lahf
sub
sub
leave
sbb
xor
addb
outsb
fidivs
ret
fdivrs
cmp
test
mov
daa
jl
in
mov
xor
les
testl
jge
popa
dec
leave
adc
mov
dec
insl
push
aaa
jl
aam
xor
jb
push
jns
and
es
movsb
and
out
mov
jmp
pop
ficoml
and
xor
push
scas
test
mov
sub
gs
mov
push
cmp
push
jne
outsb
jmp
pop
mov
popa
popa
jns
dec
arpl
gs
ljmp
mov
fiaddl
imul
push
icebp
repnz
in
inc
or
daa
inc
xor
fneni(8087
inc
xor
cmp
pop
adc
outsb
jg
mov
fdivl
jo
outsl
xchg
jmp
mov
cltd
mov
stos
inc
xor
xchg
sbb
test
cmp
arpl
lret
inc
add
dec
mov
hlt
jle
loopne
adc
dec
sbb
adc
sbb
adc
mov
dec
out
out
mov
aaa
jb
and
loope
mov
mov
lea
in
shlb
into
jecxz
inc
xchg
mov
movsl
pushf
xchg
xor
lret
insb
adc
lock
push
xchg
xor
adcl
cmpsb
xor
adc
lods
icebp
mov
sub
dec
mov
xchg
sub
dec
leave
xchg
pop
daa
add
pop
pop
test
adc
cmc
dec
xchg
xlat
sbb
xor
and
dec
mov
ret
leave
add
lods
les
rcrb
ss
cmp
and
push
mov
or
stos
in
imul
popa
shlb
adc
cmp
pop
fsubs
pop
mov
or
outsb
mov
lahf
scas
jle
inc
adc
xchg
int3
mov
scas
inc
push
mov
leave
sub
int
jge
adc
push
int3
inc
es
mov
mov
incb
pop
cli
inc
dec
mov
pop
pop
dec
in
out
stos
fisttpl
pushf
inc
movsb
jp
insl
loope
push
iret
pop
pop
ret
jne
pop
lds
imul
outsb
stc
push
cwtl
xor
movl
ljmp
mov
int3
inc
hlt
cwtl
test
jle
mov
lret
data16
leave
fwait
and
xor
inc
dec
xchg
jnp
push
nop
hlt
mov
xor
inc
xchg
mov
data16
out
ja
cli
fdivs
gs
rclb
fists
inc
jno,pn
dec
iret
push
pop
and
loop
push
inc
fcomi
mov
sbb
push
cmp
xchg
data16
sbb
mov
mov
lea
pop
cmp
fs
stos
stos
inc
pusha
adc
aad
fs
test
sahf
xchg
inc
add
xorl
cmp
inc
push
xchg
mulb
outsb
out
stos
add
mov
arpl
jo
dec
and
xor
test
aad
sub
xor
call
es
add
scas
cmp
dec
mov
ficoml
jne
roll
sbb
cwtl
xor
ja
adc
ret
lock
and
fst
xchg
addr16
adc
stc
mov
or
xor
and
insl
dec
inc
stos
filds
pop
rcr
push
adc
ret
push
and
stos
and
idivb
adc
jno
sarl
std
xchg
add
sarl
dec
dec
ds
inc
or
cli
test
fnsave
lcall
mov
push
outsb
mov
pop
dec
pushf
jne
adc
mov
pop
into
cmpsl
daa
sahf
add
les
lcall
lahf
mov
or
cwtl
pushf
dec
jp
fdivl
int
push
add
jno
ljmp
adc
jo
mov
ljmp
mov
jle
dec
xchg
gs
mov
push
jae
jnp
or
inc
jnp
xor
ret
stos
imul
fsub
shll
cmpsb
leave
loop
fwait
dec
lahf
dec
pop
xor
dec
inc
cmp
pushf
addb
fisubrl
xchg
add
inc
int3
mov
adc
dec
add
fwait
jmp
scas
cmp
dec
inc
push
test
lds
dec
cmpsb
movsl
push
or
dec
adc
xchg
dec
dec
aam
fbld
cmp
xor
jnp
pop
mov
push
loopne
inc
mov
and
and
adc
dec
pushf
in
out
jno
mov
fsubrl
sbb
fnstenv
jnp
scas
stos
xchg
push
cmpsl
sub
movsl
or
push
ficoml
jo
push
insl
enter
jp
or
mov
mov
js
sbb
fcoms
movl
int3
inc
mov
inc
fadds
push
jp
arpl
test
cmpsb
cmp
xchg
cli
std
sbb
sti
mov
fnsave
das
lret
shlb
cwtl
mulb
inc
jbe
lret
and
mov
outsb
sub
fnclex
shrb
cmp
inc
add
mov
mov
inc
scas
rcrl
and
testl
push
xor
push
sub
xchg
loope
or
jnp
push
adcb
sbb
stos
fnsave
sbb
push
cmp
call
adc
ret
mov
rorb
mov
icebp
stos
mov
jo
dec
stc
mov
imul
insl
or
loop
stc
xor
or
add
or
pushf
add
aam
dec
test
loope
dec
cwtl
nop
jl
pusha
sahf
lahf
xor
fnsave
jmp
cmp
add
ret
cmp
fisubrs
and
rcll
mov
mov
outsb
jnp
mov
mov
and
jecxz
mov
fstps
sbb
ds
mov
inc
push
mov
dec
mov
ret
xchg
lret
or
jnp
mov
sahf
cmp
jmp
cmp
xor
stos
dec
test
mov
je
xchg
dec
xlat
pushf
inc
hlt
arpl
cmp
push
jmp
inc
insl
inc
fdivrl
pop
pop
outsl
arpl
pushl
sbb
dec
mov
imul
pop
cmp
xchg
or
aam
jmp
sarb
xor
mov
icebp
je
adcb
imul
ss
and
add
xor
out
adc
mov
xorb
inc
ffree
in
movsb
inc
sbb
jge
inc
mov
or
sbb
jb
pop
insl
pop
lods
jmp
cmpsb
and
in
mov
xor
mov
push
out
ffree
int
xchg
mov
sub
in
inc
jecxz
mov
xchg
mov
sub
and
sbb
mov
inc
cmpl
pop
out
sub
sbb
lret
out
push
mov
leave
mov
xchg
xchg
xor
shl
and
enter
es
push
out
adc
jb
mov
pop
das
jb
adc
popa
sbb
inc
out
pushf
xchg
nop
sub
sub
dec
xchg
add
or
das
push
cmp
adc
inc
lret
inc
xchg
add
mov
ret
lcall
fistl
mov
movsb
loopne
jnp
inc
ds
push
pop
insl
std
cli
adc
xlat
inc
outsb
gs
data16
shlb
scas
adc
jnp
fidivrs
push
pop
add
mov
movsl
fcompl
pusha
std
call
mov
mov
xchg
add
jecxz
inc
or
push
imul
scas
fwait
xchg
pop
push
mov
mov
rcl
in
xor
cwtl
inc
jecxz
and
mov
bound
push
cmp
addl
mov
and
jno
dec
fdivs
pushf
lahf
inc
adc
mov
lea
les
pop
pop
jecxz
mov
push
aad
push
aas
fimull
lods
dec
jg
xchg
dec
dec
add
fidivl
test
ds
mov
fstpl
scas
test
mov
jg
cltd
add
stos
ss
jae
mov
xor
jae
ret
addr16
or
je
cmpsl
fcoml
roll
sbb
aaa
es
dec
mov
loopne
fwait
andb
cmp
xor
scas
insl
es
mov
lods
sarb
mov
jmp
cmpsb
mov
push
repnz
popa
movsl
insb
fistpll
popf
sub
add
fdivs
sbbb
iret
jmp
sbb
cmpsl
mov
sbb
mov
mov
add
adc
adc
popf
test
xor
mov
push
xchg
xchg
test
mov
insb
fldenv
or
inc
mov
dec
sbb
and
xor
xlat
jno
gs
insb
out
xchg
jbe
aad
sub
loopne
adc
push
dec
jb,pn
xchg
inc
aam
lock
inc
fcoms
dec
push
xchg
mov
mov
pushf
push
fdivrs
jmp
pop
inc
xor
popf
push
xor
xlat
stc
or
xchg
push
xor
cmp
push
lcall
add
icebp
nop
xchg
mov
cmp
lods
int3
xlat
daa
pop
into
mov
fs
sarb
movsl
xchg
jmp
xchg
in
dec
jmp
sbb
mov
fadds
jmp
push
cmp
cmp
fistps
dec
mov
inc
xchg
mov
xorl
imul
adc
xor
sbb
and
loopne
les
push
and
jnp
in
stos
pop
sub
lret
or
xchg
jbe
pushf
xchg
rolb
sub
mov
outsl
outsb
stos
mov
nop
das
mov
inc
sbb
xchg
mov
outsl
lcall
push
ljmp
lcall
lods
xor
jb
xchg
mov
roll
ljmp
leave
int
repnz
mov
fdivl
cld
push
or
popa
imul
add
fnstcw
xor
inc
adc
jp
inc
aaa
in
stc
sti
jnp
stos
fsts
xchg
mov
push
ret
jbe
out
in
adc
lcall
add
jmp
movsl
loop
into
insl
shrb
sti
jp
fwait
cmp
xor
negb
insb
add
push
pop
mov
push
xchg
mov
mov
fildl
enter
xchg
lds
test
lds
repz
mov
enter
dec
xor
push
gs
jne
enter
lea
add
inc
push
aad
adc
dec
xchg
addr16
mov
jae
sbb
lahf
jnp
mov
cmp
inc
pop
lret
adc
push
sub
mov
and
or
push
stc
push
inc
push
insl
lods
lcall
sub
stos
pop
jb
jns
bound
mov
xchg
xor
jge
cmp
sbb
add
rcrb
sbb
inc
dec
mov
or
movzbl
push
pop
lods
sti
out
sbb
icebp
jae
cmpsl
or
loope
xor
mov
lea
xor
bound
jne
inc
loop
fidivrl
hlt
inc
insl
adc
aaa
ss
lods
cmpsl
hlt
aas
seta
and
enter
repz
dec
cmp
mov
xor
jns
test
mov
shlb
imul
add
fsubs
cmp
bound
jns
push
pop
pushf
xor
movsb
add
in
fistpl
rorl
sbb
sbb
stos
stos
or
xchg
aam
or
pop
dec
call
xchg
push
mov
push
sbb
push
bound
test
nop
jne
fildl
xchg
lret
mov
xor
cmp
mov
and
stos
mov
mov
test
xor
hlt
pop
dec
dec
pop
cmp
clc
and
xchg
cmp
stos
xchg
pop
or
mov
mov
mov
fnstenv
int
xor
fldt
pop
sbb
call
xchg
xor
jmp
lods
mov
jg
fldl
mov
xchg
cwtl
iret
sbb
pop
mov
or
js
ror
xchg
lea
xchg
rcrb
jmp
arpl
popa
pop
les
cltd
aas
cmp
mov
mov
pop
sub
adc
jle
xchg
push
jmp
lret
sub
lcall
lcall
adc
rolb
cli
outsb
cmp
push
in
cmc
xchg
and
fdivrs
iret
sbb
fs
sub
test
fxch
je
mov
jae
out
shlb
mov
xchg
leave
xchg
int3
or
sub
sarb
or
jecxz,pt
stos
test
into
sbb
push
dec
jnp
fiaddl
xchg
push
cmp
sbb
adc
and
cmp
adc
rolb
roll
xchg
jae
sbb
cmp
push
inc
out
adc
ljmp
push
mov
mov
mov
add
xor
add
aas
jl
xorl
cmp
lret
leave
mov
mov
dec
sub
inc
enter
mov
push
mov
mov
push
mov
les
and
push
or
xchg
xor
lods
leave
adc
ljmp
lcall
es
jbe
jp
xor
loopne
lret
dec
stos
push
pop
add
inc
dec
in
mov
test
cmpsb
movsb
jo
in
das
and
pop
sbb
hlt
push
insb
xlat
xor
loop
push
rolb
out
icebp
mov
fldl
call
push
je
imul
stc
gs
push
js
stos
icebp
dec
loop
mov
stc
adc
dec
idivb
fsubl
sub
ss
adc
in
loop
pusha
dec
jnp
call
adc
mov
in
mov
or
pop
cwtl
xor
xchg
nop
cmp
pop
push
add
mov
int3
cld
sahf
or
insl
push
lcall
jl
sbb
rolb
fisubrs
jmp
rolb
fidivl
fxam
cltd
rclb
sbb
cli
arpl
test
adc
push
ds
fldt
cmp
xchg
jne
dec
or
stos
xor
push
pop
pop
into
xor
xchg
cmp
addr16
mov
xor
leave
xor
adc
fwait
pop
pop
arpl
pop
add
dec
push
loop
sbb
xchg
add
arpl
scas
inc
xchg
imul
jne
sub
rorb
or
ja
arpl
mov
rorl
adc
aas
std
pop
add
xchg
pushf
popa
pop
aas
mov
inc
jge
dec
jmp
pop
sbb
push
or
push
inc
loope
inc
mov
pop
or
mov
rcll
mov
xchg
mov
popf
int
fidivl
xorl
outsb
inc
dec
mov
lret
dec
jb
cmpsl
push
pushf
pop
or
mov
insl
dec
dec
pushf
stc
cmpsl
or
inc
xor
xchg
cmp
mov
mov
ficoml
fsubrs
lret
cmp
cld
pusha
lock
popa
xchg
sbb
adc
push
lcall
mov
cmpl
sbb
in
into
lods
xchg
fldcw
inc
mov
orl
into
ljmp
daa
mov
add
pop
ljmp
pop
mov
mov
inc
cwtl
mov
sti
push
inc
mov
inc
or
mov
push
mov
ljmp
add
lods
pop
imul
xchg
flds
adc
leave
inc
loop
fidivs
out
xchg
inc
add
popf
xor
pop
roll
jne
pop
jnp
jp
add
push
jnp
pop
ss
into
sub
imul
xchg
dec
mov
out
jo
mov
or
sub
ret
decb
and
std
arpl
xor
rcrb
mov
inc
fisubrs
xchg
push
daa
mov
or
xor
inc
js
mov
jne
adc
int3
pop
jae
pusha
push
into
mov
pop
xchg
push
dec
jb
inc
mov
negb
and
adc
sbb
cwtl
cmp
xor
sub
pushf
jp
out
push
cmp
push
pop
testb
or
ret
adc
add
sbb
xchg
xor
jp
xor
dec
jne
push
lret
shlb
pop
dec
or
data16
pop
test
xor
or
cmp
shrl
lods
add
dec
xchg
subb
stc
je
lret
or
pop
xadd
lods
or
jnp
ja
mov
sbb
mov
cs
ja
mov
xchg
daa
push
dec
jp
jle
mov
mov
mov
out
inc
push
or
cmp
or
mov
adc
push
cli
scas
cwtl
clc
xor
fildl
mov
add
and
lods
or
inc
aam
inc
mov
rorl
test
or
adc
jecxz
mov
lret
je
jecxz
xchg
rolb
lods
lods
adc
je
xor
aam
sub
stos
jnp
mov
repz
jae
sub
insl
mov
push
enter
or
cli
cs
or
mov
out
adc
pop
xor
mov
add
stos
mov
mov
xchg
enter
sub
sbb
dec
push
and
sbb
pushf
filds
or
pop
mov
mov
loop
cmp
pop
push
fcmove
jne
lahf
sbb
pop
xchg
xor
ret
jns
je,pn
sbb
push
lret
adc
mov
aad
in
leave
fidivs
ja
mov
adc
sbb
dec
sub
inc
pop
adc
pop
xor
inc
mov
sub
int
rclb
fidivs
cltd
out
jle
inc
loop
inc
loopne
xor
inc
inc
jp
add
jmp
and
aam
xor
clc
sub
push
jb
adc
stc
inc
pop
test
fildl
push
cmpsb
mov
add
add
or
pop
int
arpl
xor
in
sysenter
push
xor
es
mov
enter
mov
leave
fs
jnp
jmp
cwtl
aas
xchg
dec
inc
cmpsb
mov
popf
cmp
loopne
adc
mov
xchg
notb
out
jb
or
pop
loopne
jmp
popf
jae
pusha
sub
adc
pop
repnz
rorb
into
stc
push
cmp
inc
or
imul
add
xchg
xlat
pop
mov
dec
xor
xchg
push
mov
fiadds
movsl
lret
inc
push
mov
and
je
call
std
or
imul
mov
dec
sbb
push
out
pushw
iret
lea
in
pop
pop
testb
std
stos
int3
mov
mov
lods
mov
call
das
mov
movsl
fwait
or
sbb
mov
ja
lds
int3
lcall
xchg
xchg
sub
dec
mov
push
imul
fildl
fisttpl
push
das
shrl
mov
add
lcall
mov
sub
leave
movsl
sub
inc
sbb
adc
mov
xchg
lret
repnz
xor
mov
stos
test
lcall
push
nop
xor
jb
jle
jae
sbb
pop
push
roll
insl
in
adc
inc
sub
mov
out
and
xorb
fimuls
push
jnp
or
cli
lods
add
call
and
sbb
test
cmc
out
dec
out
fidivs
ss
vpminub
jo
std
es
xor
xchg
add
mov
pop
push
mov
sbb
jbe
xor
cld
fldt
mov
hlt
imul
mov
jp
lcall
push
fidivrl
scas
sub
int3
jle
and
xchg
jo
jge
and
loopne
cmp
and
adc
mov
push
addb
cwtl
test
and
add
aam
cmp
loopne
in
mov
xchg
cs
cmpsl
mov
lea
jo
xchg
adc
std
enter
mov
stc
mov
xor
cmp
out
insl
arpl
adc
push
mov
inc
pop
nop
add
mov
nop
inc
fnstsw
dec
xor
add
jbe
inc
test
cltd
mov
movsl
test
shll
inc
pop
loope
into
popa
lods
push
xchg
lret
add
sub
or
js
pop
inc
xchg
stos
aam
inc
dec
je
rcrl
inc
and
xor
jge
adc
jb
xor
repnz
adcl
outsl
cmp
out
sub
xchg
in
enter
pop
pop
stos
and
es
iret
cwtl
xchg
in
pusha
or
enter
pop
jge
ss
mov
cs
call
shlb
in
mov
sub
in
mov
pop
or
inc
dec
in
pop
test
div
push
ror
mov
mov
cwtl
sub
fidivrs
es
adc
filds
jb
cmc
cli
xchg
dec
push
addl
test
adc
nop
sarb
sti
lret
hlt
cmp
add
sub
jo
add
mov
jo
stc
xchg
fwait
or
das
mov
rorl
call
jno
ljmp
or
and
inc
jae
mov
or
enter
xchg
loope
mov
mov
out
xor
out
jne
cltd
cmp
add
mov
mov
or
mov
xchg
jp
daa
pop
mov
jbe
or
mov
lahf
gs
or
add
push
sbb
pop
sbb
ret
pop
dec
jp
mov
jl
sahf
clc
inc
mov
adc
stos
push
lret
jb
outsb
aam
test
stos
cwtl
dec
jne
add
aaa
movsb
mov
fs
dec
inc
inc
aad
jg
push
cmp
adc
sarl
push
lcall
mov
inc
sub
fbstp
rcr
push
xor
mov
push
mov
xchg
shll
enter
stos
jg
push
popa
aam
mov
fldcw
xor
mov
addr16
int3
mov
inc
jnp
jmp
mov
iret
in
imul
in
shll
pop
dec
push
jbe
mov
sarl
xlat
xchg
xor
movsl
insl
xor
jb
xchg
cmc
or
daa
lret
mov
enter
fstpl
mov
inc
push
pushf
scas
xchg
jbe
jge
sti
test
jle
data16
pop
lods
jne
popa
stos
inc
jmp
xchg
sub
mov
push
xor
xlat
fadds
xlat
inc
adc
lret
loop
pop
aad
imul
inc
pop
pop
fbld
or
imul
push
cwtl
arpl
add
testb
bound
or
or
mov
pop
sahf
add
test
repnz
inc
pop
pushf
sbb
pop
mov
add
cld
iret
sahf
dec
cmp
out
dec
loope
pop
push
fwait
sub
push
aam
insl
xchg
arpl
pusha
hlt
insl
and
pusha
adc
mov
push
dec
add
xchg
cmp
mull
cli
ss
cmp
fucomi
bswap
in
rolb
icebp
repnz
out
push
jle
stos
test
or
jno
inc
cmp
jne
mov
dec
in
push
stos
fnstenv
sbb
nop
jle
ret
push
aam
cmp
and
pop
es
dec
xchg
daa
shrb
mov
xchg
push
pop
lea
dec
fwait
adc
mov
icebp
mov
inc
xchg
jp
xor
lds
pop
cmp
cmp
in
out
cmp
mov
add
cli
xor
rcrb
mov
or
xor
das
repnz
xor
pop
sar
mov
insb
lret
aaa
cmp
test
push
out
dec
jle
pop
mov
push
int3
std
cmc
xchg
mov
call
or
cmp
into
aad
xchg
ss
xor
push
sahf
inc
mov
add
sbb
inc
cs
cmc
or
and
test
mov
xor
mov
push
leave
icebp
pop
ret
cmp
test
or
lcall
dec
andb
lea
shrl
test
insl
dec
or
xorb
fsubrp
mov
leave
jge
addb
stos
sbb
cwtl
out
mov
rolb
xor
or
roll
orb
push
pop
out
mov
adc
xor
in
inc
lret
add
insl
jge
pop
out
es
or
xlat
aaa
rcr
mov
mov
dec
fldl
jne
add
mov
inc
and
pop
dec
pop
leave
inc
fdivrs
icebp
imul
xor
or
push
mov
push
mov
add
mov
mov
push
pop
add
sti
scas
pop
xor
add
sub
jb
dec
cmp
int3
dec
bound
inc
dec
pushf
out
mov
jae
mov
and
add
aad
icebp
idivl
scas
inc
inc
add
and
xorb
stos
cmp
adcl
push
push
arpl
sub
shll
outsl
ja
into
xor
shrb
xor
movsb
cmc
stos
outsb
xor
or
into
clc
sbb
xchg
ja
dec
insl
js
jo
and
stos
outsb
pop
xchg
push
hlt
aas
sub
inc
jle
or
or
outsl
push
aam
jmp
jo
adc
xor
jns
rcr
in
jno
fwait
lahf
push
pushl
jle
mov
jns
xor
fimuls
add
loop
jae
lds
xchg
push
lock
cmpsl
jge
jnp
xor
ror
int3
push
push
cmp
add
out
bound
xor
in
push
cmp
fcompl
pop
cmp
ja
mov
inc
enter
xchg
es
add
ret
fwait
push
popf
jmp
imul
mov
dec
xlat
outsb
popa
fimuls
dec
stos
jae
cmp
aam
mulb
movsl
sbb
outsl
insl
sub
leave
arpl
jp
jb
inc
prefetchnta
shl
repz
mov
fmuls
adc
inc
fcomps
push
push
or
cmp
cs
adc
or
cmp
sub
test
mov
jp
je
in
cmp
cmp
jne
cli
add
pop
sbb
sbb
adc
mov
rclb
jne
xlat
inc
aaa
push
test
mov
pop
gs
in
xor
test
int3
ret
icebp
inc
stos
jp
fcmovnu
arpl
test
les
jae
das
out
or
stos
xlat
inc
out
outsb
push
xor
cmp
xchg
pop
pop
fisubl
idiv
dec
out
stos
scas
inc
pop
es
sbb
push
sub
inc
cmp
sti
test
cmp
inc
mov
in
movsb
lret
xchg
es
fbstp
lahf
gs
int
nop
pusha
add
mov
push
add
inc
out
pusha
cmpxchg
lds
mov
popf
adc
mov
fs
inc
lret
inc
std
cltd
daa
xorb
or
pop
cli
sbb
lahf
mov
push
add
lret
pop
pusha
or
cmp
push
gs
loop
dec
sub
pushf
xchg
or
loopne
stos
push
or
jns
xor
push
inc
pop
add
cmc
mov
sub
sub
push
sbb
inc
add
repnz
pop
repz
or
cmp
inc
fisubrs
push
dec
hlt
adc
lahf
inc
adc
rcrb
mov
stos
push
jb
mov
xor
outsb
sub
add
into
and
sub
lds
out
test
fxam
or
imul
dec
inc
lods
pop
push
add
rorb
and
dec
loopne
fs
mov
jecxz
pop
jne
clc
push
sub
aaa
inc
in
mov
inc
sub
inc
repz
in
pop
pushf
xchg
cvtps2pi
sbb
sub
sbb
scas
add
push
mov
add
fsubs
xor
push
push
incb
je
jo
dec
mov
xor
lret
sub
mov
imul
push
mov
dec
jle
add
mov
sahf
cmp
cwtl
xor
jbe
pop
loopne
aam
int
dec
fs
leave
pop
ja
outsb
jae,pt
mov
and
mov
push
and
sub
repz
add
mov
leave
inc
xchg
cmp
inc
adc
lahf
cmp
enter
pop
xchg
fnsave
data16
scas
fs
adc
push
xor
test
dec
sub
orl
or
in
rcll
push
lret
inc
daa
inc
xchg
aaa
movsb
bound
mov
bsf
lds
lods
bound
mov
push
inc
or
ret
push
cmp
lret
cmp
dec
lahf
addb
scas
xchg
loop
mov
fsub
push
mov
nop
xor
fisttpll
jmp
lds
test
xchg
jecxz
inc
shlb
icebp
insl
dec
or
popa
adc
packuswb
inc
and
nop
pop
xor
sub
fwait
pop
xor
loope
in
push
int3
mov
fdivl
leave
sahf
sahf
int
xchg
jno
xor
xchg
mov
inc
dec
fmuls
push
inc
rcr
mov
sti
fists
bound
stos
ss
jb
in
push
stos
jo
mov
int3
lock
push
add
mov
aam
and
mov
mov
mov
lret
test
xchg
mov
add
mull
adc
lret
test
lcall
jbe
xchg
rclb
cmpsb
jecxz
xchg
mov
ret
dec
mov
fmull
cwtl
cltd
lcall
dec
lret
test
xchg
fstpt
movb
nop
inc
jg
dec
std
sbb
sbb
sbb
cmp
pop
ficompl
mov
out
lods
and
pop
pop
sub
sbb
mov
push
movzwl
xchg
ljmp
mov
lea
int
adc
sbb
mov
xchg
fs
xchg
stc
jnp
push
in
mov
into
xchg
mov
adc
shrb
fnstcw
ret
loop
out
fdivrl
ljmp
insb
orb
cmp
push
xchg
lcall
or
mov
adc
xchg
ss
ljmp
cli
sbb
pop
flds
push
int
lods
push
inc
push
ds
sbb
or
testb
xchg
push
js
stos
fmull
mov
flds
mov
nop
adc
jle
sbb
pop
popf
dec
out
push
sbb
and
scas
into
cmp
popf
dec
xchg
push
sbb
dec
push
mov
mov
ss
mov
mov
push
ljmp
bnd
push
idivb
or
ret
daa
cmpsb
jle
pop
xchg
mov
es
inc
outsl
push
nop
outsb
inc
push
push
adc
cwtl
cmp
ja
outsb
xchg
rorb
xchg
lods
xchg
popf
adc
mov
mov
js
xchg
and
es
push
stos
push
push
popa
js
nop
sbb
mov
int
into
sbbl
xor
cld
insl
lds
and
jne
mov
sub
fildl
push
and
and
xchg
inc
insl
jno
fadd
movsl
cmp
sub
xchg
xor
in
xor
mov
dec
daa
xor
in
mov
xor
mov
sub
lds
aam
cwtl
push
push
mov
rcl
in
daa
inc
mov
lea
movsb
mov
pushf
cmp
stos
insl
inc
imul
push
lods
cmp
insl
xor
or
in
sahf
mov
adc
mov
fstp
xor
inc
sub
popf
popa
in
dec
orl
and
jge
aad
shll
les
mov
cmp
add
rcrl
sub
or
pop
stc
xor
je
xor
fidivrl
xlat
dec
loop
hlt
cmc
mov
lds
repz
push
pop
rclb
adc
inc
jbe
and
lret
test
or
xor
loop
daa
inc
xchg
pop
dec
add
in
insb
sbb
jnp
sbb
mov
daa
lds
push
jmp
mov
lock
in
mov
push
loope
loop
stos
ficomps
dec
sub
or
sbb
clc
loope
add
cmp
or
popa
sbb
test
mov
add
add
loopne
push
shrl
jnp
push
pop
mov
or
mov
or
add
pop
xor
test
in
gs
dec
data16
pop
cmp
adc
xor
jo
lods
xchg
scas
pop
fstps
pusha
cmc
imul
test
into
ljmp
and
inc
cmp
cmc
in
cwtl
xor
dec
call
and
arpl
or
or
and
fisubrs
xlat
sbb
mov
bound
jno
and
into
out
xor
mov
sbb
sbb
pop
shrb
pusha
ret
inc
push
fildl
cwtl
mov
pop
dec
pop
cmp
xlat
xchg
inc
int3
jae
add
jae
and
and
or
pop
pop
push
xor
add
mov
and
mov
mov
aaa
xor
dec
cmc
add
fiadds
add
mov
dec
loopne
and
xor
jmp
fistps
into
xor
xorl
out
cmp
ret
adc
fistpl
mov
xor
cmp
adc
pop
mov
cwtl
adc
lods
orl
inc
dec
push
jl
aas
cwtl
jno
adc
push
mov
adc
fstl
or
push
xchg
sub
js
and
clc
pop
xor
pop
or
inc
xor
mov
pushf
adc
push
lea
mov
gs
lods
inc
and
adc
adc
push
cwtl
and
push
inc
in
push
adc
loopne
xor
dec
stos
and
inc
push
push
or
xor
aaa
or
out
cmpsl
outsl
loope
test
xor
jmp
jp
movsl
fidivrl
pop
jae
push
stos
sbbb
lret
xor
xor
or
enter
insb
or
mov
push
jmp
shlb
and
mov
call
jp
adc
or
cmp
jecxz
xchg
test
subl
fwait
jb
fiadds
bound
fisttpl
aam
add
xchg
arpl
jnp
fs
lods
je
ret
sub
jmp
fs
push
xor
push
adc
lahf
or
hlt
outsb
add
sbb
outsl
call
adc
mov
xor
dec
adc
and
orl
popf
pop
cli
adc
repnz
xor
cmp
mov
dec
rcll
mov
adc
iret
xor
mov
inc
dec
das
loopne
call
mov
shll
sti
and
iret
stc
mov
ss
inc
cmp
xchg
and
lahf
fists
lock
scas
inc
in
repnz
xlat
dec
push
fbld
stc
pop
ret
subb
mov
into
sub
xchg
or
je
orl
adc
or
xor
inc
pop
lcall
cmp
hlt
outsb
adc
jecxz
loopne
and
xor
jo
pop
cmp
lock
das
in
gs
ljmp
js
cmp
mov
sub
in
in
fisttpl
rcll
add
lret
hlt
jl
xor
jbe
pushf
xor
xor
fildl
xorb
mov
mov
stos
incb
xchg
push
into
sub
test
adc
pop
outsb
lock
out
pop
push
popl
mov
jno
or
mov
dec
push
imul
pop
inc
jle
mov
xor
sbb
divl
jae
rorb
jle
bound
xor
or
cmp
xchg
sub
jp
pop
dec
test
inc
push
inc
insl
stc
jo
cli
mov
sbb
adcl
test
ja
pop
pushf
xchg
or
stos
or
or
jl
call
xor
xchg
jg
outsb
cmp
add
pushf
sbb
bound
les
push
mov
xchg
into
repz
cmp
mov
mov
lahf
es
clc
sub
call
mov
xchg
lcall
fldz
shll
mov
push
mov
fmul
mov
les
imul
dec
sub
push
sarl
jbe
pop
out
xor
xchg
decl
lds
pop
dec
pop
push
mov
repz
into
pop
push
lahf
and
dec
jnp
fcmovu
sbb
add
adc
inc
cli
add
cmp
push
loop
xchg
jmp
mov
lods
cltd
rcrl
lret
dec
push
dec
into
leave
out
ja
cmp
inc
cwtl
push
data16
scas
nop
in
aam
popa
cld
in
inc
fistps
stos
es
xor
repz
packssdw
repnz
cli
xor
dec
stos
mov
outsl
pop
mov
inc
pusha
pop
aam
mov
or
insl
mov
pop
div
call
mov
dec
xchg
xchg
dec
cs
sbb
xor
stc
or
fnstcw
call
mov
inc
dec
xchg
pop
inc
repz
push
inc
les
sub
je
inc
adc
into
out
push
ret
push
rcll
lcall
ficomps
or
mov
mov
ss
push
xor
xchg
stc
push
in
jmp
imul
fwait
jmp
and
and
mov
jne
xchg
mov
pop
jae
or
push
and
loopne
arpl
insb
dec
fdivrs
lret
fs
sbb
call
sbb
faddp
xchg
jns
and
push
mov
out
adc
push
lret
lret
lret
popa
lcall
incl
xchg
push
xor
push
push
or
dec
lcall
jle
adc
loop
or
addl
imul
das
lds
or
jmp
push
in
push
xchg
cmc
mov
add
int3
and
dec
imul
push
idivb
or
xor
fucomip
sbbb
pop
or
sbb
or
push
sahf
insl
pushf
cmpsb
sbb
nop
decl
xchg
mov
push
cli
pusha
lcall
dec
shr
jb
mov
daa
push
jo
lock
xchg
push
sbb
xchg
into
pop
or
sahf
jp
sub
push
inc
fisubrs
mov
pop
jno
jbe
mov
xabort
mov
or
pop
sbb
paddusb
push
ljmp
cltd
xchg
push
sbb
fdivl
popf
jmp
lahf
mov
ss
es
push
mov
sbb
enter
ror
and
ss
imul
lods
and
outsb
push
push
push
jle
and
dec
icebp
ljmp
lret
aaa
lea
adc
rcl
push
dec
mov
les
sahf
out
fimull
push
cltd
jb
jae
mov
jb
pop
ja
jno
ficomps
push
and
lods
jbe
pop
push
jb
adc
outsl
mov
jb
idivb
mov
outsb
or
xchg
add
fcoms
ja
jge
lods
outsb
popf
xchg
push
ds
cli
shlb
lret
enter
clc
lcall
in
repz
adc
hlt
sbb
dec
jmp
cmp
jne
inc
es
into
jg
xchg
jne
jecxz
pop
cli
inc
cmp
adc
fistl
or
cmp
push
inc
inc
ficompl
pop
jle
js
mov
cmp
push
fsubrl
aas
std
jnp
push
das
ds
es
lcall
aas
jmp
aaa
stos
pop
or
adc
inc
or
pushf
ret
out
ljmp
cli
or
sub
stos
pop
fs
pop
push
into
jne
inc
mov
loopne
imul
lahf
add
or
push
mov
jmp
stos
daa
dec
and
gs
add
cs
add
xchg
fidivl
hlt
mov
xorb
inc
and
je
adc
add
stos
xor
std
add
out
or
arpl
or
push
pop
mov
outsb
mov
mov
mov
leave
cld
adc
clc
add
adc
icebp
mov
pushf
lahf
call
ljmp
jnp
xor
sub
push
add
call
int3
and
sub
xor
pop
rolb
mov
adc
call
inc
mov
xchg
lea
or
repnz
inc
dec
adc
mov
mov
jge
sub
mov
and
pop
inc
arpl
dec
dec
aas
xor
xchg
mov
stos
xor
cmp
lock
mov
add
sahf
aad
in
xor
cltd
mov
mul
insb
int3
loope
add
gs
adc
loopne
in
adc
lret
cwtl
fwait
es
pop
add
inc
ret
call
fldenv
mov
dec
fdivrs
mov
outsl
das
pop
push
add
in
jp
sahf
sbb
into
mov
int3
mov
lds
lret
mov
aaa
adc
mov
pop
push
xchg
ljmp
add
test
lret
and
pop
aad
stos
pop
or
insl
movsb
jecxz
movsl
test
pop
bound
sahf
mov
dec
jae
imul
xchg
fcoml
icebp
cltd
lcall
add
inc
push
push
xor
pop
push
ss
mov
imul
shrb
sar
xchg
lcall
dec
rorb
push
dec
cmpsb
pushw
es
xor
arpl
repz
nop
sub
and
adc
inc
adc
xor
jle
or
pop
adc
sti
bnd
mov
in
out
dec
inc
push
xchg
dec
mov
or
sub
shlb
out
sbb
xor
add
lret
add
dec
mov
jecxz
cmp
lea
push
sbb
pop
inc
mov
dec
or
mov
or
cs
int3
mov
outsl
jae
and
popf
pop
mov
cmp
lods
fnstcw
add
sub
mov
mov
or
xlat
push
aaa
inc
pop
ljmp
xchg
fsubr
pop
push
push
dec
push
lock
mov
mov
lret
rcr
xchg
mov
or
mov
mov
dec
mov
movsb
add
ret
lods
push
pop
xchg
ret
test
bound
and
dec
dec
out
cmp
push
and
mov
leave
lds
add
dec
mov
cmpsb
add
cli
clc
cli
mov
xor
add
out
dec
fadds
add
or
xor
je
inc
adc
cli
subb
int
or
mov
mov
dec
icebp
bound
hlt
pop
popa
mov
jae
mov
sbb
inc
in
dec
xchg
les
push
adc
push
sub
nop
insb
test
in
and
lea
xorl
xorl
xor
mov
sub
insl
pop
mov
mov
push
dec
stos
std
fiadds
dec
frstor
fisttps
xor
push
mov
das
mov
xchg
and
cmp
pop
iret
jp
xor
cld
pop
mov
push
movsb
stos
bound
cmc
stc
jecxz
cs
enter
ss
out
imul
sub
mov
test
sub
into
sarl
pushf
and
neg
xchg
mov
ret
xchg
loop
xchg
adc
push
adc
push
or
fbstp
cli
xor
iret
push
fsub
rcll
jae
loop
sysexit
fwait
push
mov
cltd
adc
and
repz
sub
ss
sarl
jp
sub
insl
add
xor
push
addr16
add
mov
cmpsl
push
push
mov
outsb
xor
mov
dec
pop
add
inc
mov
xchg
adc
testl
pop
cmpb
mov
fst
sbb
dec
insl
xchg
ret
sahf
cmpsb
mov
push
pushf
insb
test
xor
mov
sbb
mov
pop
push
dec
pop
inc
leave
cwtl
mov
xor
sbb
jbe
mov
sahf
rorl
cmp
shr
push
adc
sub
mov
cltd
mov
cltd
push
inc
aaa
pop
ljmp
hlt
pop
push
ljmp
cmp
call
aam
xchg
xor
pop
mov
inc
mov
xchg
scas
sti
sub
sbb
push
and
std
test
pop
call
mov
repz
hlt
leave
mov
and
inc
pop
pop
push
xor
les
fildll
xor
call
xor
imul
negl
cmp
pop
adc
mov
cmp
xchg
sub
inc
cs
and
lret
xor
idivb
adc
jecxz
in
shlb
fld
cmp
pop
inc
inc
xchg
out
aaa
js
mov
ja
mov
test
cwtl
add
rorl
orl
icebp
test
push
xchg
push
push
mov
jbe
dec
psadbw
loopne
mov
xor
outsb
andl
push
adc
add
aaa
add
into
iret
cmp
jecxz
lcall
jle
dec
adc
mov
in
dec
jl
pop
jnp
out
push
dec
mov
out
inc
pushf
inc
xor
incb
lret
add
xchg
fs
xor
mov
adc
inc
inc
stos
xor
push
stos
loopne
and
jae
push
fs
xchg
jne
dec
jae
mov
shlb
dec
or
fcomps
inc
sub
je
push
pop
scas
push
cwtl
push
fidivrl
cmp
stos
stos
int
sbb
inc
xchg
jle
hlt
push
mov
xor
icebp
xchg
pop
sub
mov
enter
push
jge
mov
mov
icebp
outsl
pop
jbe
mov
inc
push
fdivrl
and
lret
icebp
mov
pop
mov
jbe
sbb
xchg
call
mov
cmp
lds
add
test
inc
or
jp
jns
mov
sahf
sbb
call
lcall
scas
cmp
xor
jnp
jns
loopne
cmpl
cmp
push
inc
mov
xchg
gs
stos
push
test
mov
dec
mov
into
xor
icebp
scas
sub
cld
inc
lods
stos
mov
push
xlat
repnz
cli
add
pop
js
mov
iret
ret
push
inc
jae
jg
or
out
push
mov
add
shrb
aad
mov
cli
rcrl
and
inc
jbe
mov
fs
lock
mov
ret
pushf
mov
jb
or
pop
xor
into
cli
xorb
xor
or
into
inc
sbb
stos
jp
scas
xor
pop
xchg
lcall
mov
fcmovbe
jae
sbb
sbb
dec
fdivl
push
cs
jbe
xchg
mov
pop
movsb
jne
xchg
movb
fidivl
loop
xchg
xchg
sbb
add
mov
sub
inc
in
add
aam
cwtl
lock
mov
leave
and
fists
or
cli
ret
xchg
stos
in
sub
jns
ficoms
mulb
jne
inc
mov
pop
cltd
bound
pushf
jno
jmp
mov
xchg
mov
push
frstor
lds
jl
in
mov
jno
lea
cmc
outsl
pop
repnz
mov
popf
bound
adcb
sbb
jg
add
fstps
mov
movsb
test
imul
pop
cs
add
xor
and
rcrl
xchg
xchg
stc
push
into
in
insl
lock
and
popa
cmpsl
repz
test
mov
sub
push
filds
cwtl
clc
in
sub
push
and
push
cmp
jmp
sbb
inc
dec
cmp
xor
sbb
pusha
sahf
cwtl
es
mov
sbb
xchg
adc
or
jae
xor
mov
ret
mov
pop
and
cmp
mov
dec
fbstp
cmp
sarl
gs
cwtl
xchg
insl
fildll
mov
add
push
cmp
lret
cmc
addr16
stos
mov
and
xor
fs
xchg
lret
cmp
mov
xchg
clc
mov
sbbb
dec
and
cmpsb
adc
icebp
inc
mov
sti
push
iret
add
mov
cmp
hlt
push
or
loop
mov
or
inc
lahf
adc
inc
loopne
push
xor
adc
arpl
hlt
xchg
neg
sub
mov
jmp
or
jo
xor
aaa
insl
imul
test
sub
mov
jecxz
add
js
sahf
pop
lea
jp
insb
push
cmp
mov
addl
mov
pop
lahf
sahf
push
das
mov
xor
test
add
stc
sub
jb
bound
cltd
insl
mov
scas
jge
mov
iret
mov
push
sbb
mov
pop
push
dec
jecxz
lock
push
lods
lock
push
adc
xchg
push
inc
push
stc
in
sti
into
out
xchg
pop
hlt
popa
add
cmp
test
ss
push
sbb
and
sub
cmovle
test
jo
mov
lds
dec
sti
xchg
mov
cwtl
xor
out
mov
cmp
loope
call
dec
nop
dec
sbb
shlb
pushf
pop
inc
push
adc
xor
ret
out
cmp
mov
sahf
out
pushf
or
outsb
mov
sti
pop
lods
dec
fists
mov
in
lods
lcall
push
cmpsb
xor
leave
sbb
les
push
or
mov
push
inc
add
push
data16
push
pusha
sub
ds
xchg
jge
push
inc
fwait
dec
push
dec
jo
bound
mov
xchg
jb
or
push
adc
sbb
mov
lds
jnp
inc
pop
jge
and
xor
or
and
xchg
movsb
arpl
jg
in
sbb
xchg
add
orb
scas
loope
pop
in
adc
sbb
cmp
fs
xor
je
mov
sbbl
sub
or
xchg
add
xchg
and
adc
out
fwait
push
dec
mov
adc
int
gs
lods
arpl
inc
adc
push
sub
jne
cmp
mov
jnp
fxch
pop
aad
push
pop
out
clc
push
cmp
xor
aam
hlt
mov
push
jge
adc
repnz
jnp
mov
inc
mov
and
repnz
dec
mov
and
adc
movsb
mov
sub
cs
pop
in
push
jmp
add
addr16
test
nop
inc
jne,pn
mov
mov
stos
shrl
xchg
rcll
clc
test
nop
pop
ss
ret
loopne
in
fiaddl
inc
jp
stos
and
pop
pop
lret
push
xor
or
stc
subb
push
or
cmp
out
inc
push
xor
and
adc
xchg
push
and
lods
cli
pop
rcrl
loopne
inc
mov
cltd
popa
and
pop
popf
rclb
outsb
xchg
xlat
and
mov
dec
pop
inc
dec
imul
divl
mov
adc
lret
std
imull
in
sub
sbb
shll
jo
xchg
jo
xorb
shrb
aas
ja
imul
cwtl
cs
aaa
sub
aam
dec
popf
jno
notl
adc
mov
enter
mov
fdivrs
sti
ds
cmp
sub
aas
cmp
add
xchg
flds
lcall
ds
lcall
pop
and
mov
ljmp
jmp
pushf
mov
bound
enter
rcrb
lret
dec
stos
xchg
lods
mov
jno
push
push
lock
inc
xchg
push
fsub
mov
sarb
lret
mov
shlb
inc
sub
push
xchg
jns
and
inc
sbb
mov
sbb
dec
stos
lret
xor
cmpsb
dec
dec
lock
xchg
adc
pop
cltd
jecxz
or
nop
jp
mov
mov
ss
lret
bnd
leave
mov
hlt
nop
shl
mov
adc
adc
dec
iret
adcb
loopne
mov
or
or
stos
popf
out
shlb
lcall
pop
add
shl
lret
adc
lret
insl
ret
mov
inc
scas
push
fbld
icebp
or
jl
icebp
testb
cmp
outsl
lods
pop
jbe
jnp
jg
enter
or
ja
push
into
icebp
lret
push
dec
push
add
lock
push
or
nop
lret
cwtl
imul
jne
xchg
andb
jno
xchg
stos
cmpsb
lock
push
lcall
sahf
and
ljmp
iret
sub
shrl
aas
mov
jb
or
jno
call
insb
cwtl
jle
and
iret
mov
leave
xchg
imul
jb
push
or
sbb
jle
insl
xchg
test
popf
stos
cltd
lret
dec
out
lahf
and
jb
pop
data16
pop
mov
mov
jb
mov
jno
jg
rorl
push
lret
adc
and
sbb
insb
fisubrs
shr
ja
jle
insb
into
dec
testb
push
sbb
jmp
push
ljmp
push
std
pop
dec
lds
ja
popa
xor
ljmp
mov
sbbl
sub
adc
mov
mov
fadd
loopne
iret
fildll
mov
xor
lahf
pop
mov
aam
icebp
pop
dec
in
mov
js
xchg
bound
loopne
xlat
fnstcw
sti
mov
mov
dec
mov
fprem1
lock
mov
xor
xchg
push
xchg
gs
and
inc
enter
jmp
pop
fnstenv
or
stc
fdivr
leave
movsb
es
insb
nop
push
inc
and
or
sub
inc
divl
xor
jl
xorl
cmpsb
xchg
pop
bound
fmuls
dec
jmp
xor
lea
inc
addr16
sub
xchg
mov
lods
mov
xlat
sahf
ss
mov
lcall
jnp
dec
push
pop
fiaddl
sbb
dec
out
mov
test
pop
pop
xor
bound
in
pop
int
movl
mov
fildll
ficomps
xchg
cmp
sub
jecxz
test
out
leave
jne
ja
in
push
stos
mov
ds
jnp
and
sti
ret
insl
cwtl
jg
jecxz
dec
jno
inc
sbb
jecxz
push
push
push
int3
jp
xchg
fstp
xor
test
jo
adc
xchg
dec
cmp
lods
lds
xor
xor
and
mov
mov
and
dec
sbbb
idiv
adc
fildl
pop
stos
pop
scas
stc
test
fldcw
jg
mov
xchg
xor
pop
sbb
mov
inc
icebp
xchg
sub
stos
nop
xchg
mov
xor
pop
dec
inc
dec
sahf
push
addb
pop
fs
push
lret
sub
loop
jb
inc
push
jmp
jge
xchg
sbb
clc
push
dec
mov
push
mov
push
xor
filds
jle
call
cmp
dec
pushf
push
add
fimuls
sti
mov
loop
mov
mov
jge
sbb
cmp
inc
push
nop
sbb
pop
mov
int3
ds
cs
dec
adc
xor
enter
loopne
arpl
jo,pn
shll
mov
test
jnp
xchg
fnstenv
jg
pop
sarb
xor
add
loope
out
or
dec
outsl
xor
pop
sbb
inc
xchg
stos
inc
cmp
scas
jnp
inc
xor
cltd
into
push
jmp
jnp
mov
gs
sub
sub
dec
adc
fistl
lret
enter
sti
std
loope
push
sahf
fldcw
jo
aaa
xor
test
xchg
into
or
fisttps
fisubrs
or
dec
mov
dec
and
pop
xor
andl
push
aam
dec
popa
fldenv
mov
fcoms
xor
add
out
movsl
and
es
xchg
pop
mov
mov
loope
mov
outsl
aaa
jns
movsl
mov
int
inc
inc
and
pop
cld
lds
mov
add
jp
in
adc
push
sti
jmp
sub
mov
cwtl
xchg
xor
fdivp
enter
mov
outsb
lahf
adc
pushf
mov
jns
inc
and
jl
mov
pop
int3
or
gs
ja
xor
sbb
fistl
add
xchg
mov
mov
scas
sbb
jne
mov
xor
xchg
xchg
jne
inc
mov
dec
sub
pop
outsb
inc
add
pop
xor
dec
mov
fwait
add
aas
or
sub
les
dec
out
mov
lcall
xchg
lds
rolb
pop
ret
test
mov
pop
jae
mov
mov
mov
in
push
mov
popf
test
xor
inc
push
pop
or
dec
push
fwait
or
jle
push
pop
or
mov
xor
push
test
adc
or
adc
test
fstl
mov
nop
lock
pop
or
xor
mov
daa
or
dec
cmp
imul
adc
pop
cmovnp
repz
pop
add
xor
ret
cwtl
ljmp
js
ret
lret
sbb
ss
inc
outsl
rcrb
imul
mov
dec
lret
pop
cltd
leave
fildll
mov
je
or
mov
jle
nop
lret
sub
mov
sbb
out
sbb
dec
popf
mov
jmp
xlat
jne
adc
dec
push
jnp
sbb
imul
xchg
ficomps
js
stc
fstl
cmpsl
or
test
mov
add
lods
sub
xor
rclb
aaa
adc
mov
pop
push
cmc
mov
inc
xor
add
mov
xchg
rcll
cmp
cmp
into
jo
jns
xor
repz
jp
adcb
xor
aaa
dec
sub
pushl
insl
jbe
pop
pop
insb
negb
mov
lahf
in
clc
into
in
mov
subl
mov
sbb
mov
xchg
fisubrs
data16
insl
mov
push
fdivrs
mov
mov
or
nop
lahf
repz
fcoml
shrb
sbb
test
leave
cld
int3
or
aam
test
fisttpll
mov
inc
xor
scas
sbb
imul
push
mov
xor
arpl
xchg
daa
mov
scas
test
push
pop
xchg
push
icebp
popf
sbb
push
push
lahf
in
mov
out
push
hlt
cmp
sbb
or
imul
outsb
shrb
jmp
sahf
enter
or
xchg
jmp
sahf
enter
cmp
scas
xor
sub
mov
ret
outsl
mov
xchg
movsl
and
fadds
sahf
mov
fildll
lea
leave
adc
jne
testb
sbb
or
sub
fists
nop
mov
sub
push
push
pop
les
jmp
xchg
xchg
and
jb
into
out
lret
push
dec
outsl
jnp
push
push
push
jno
mov
cmp
lcall
pop
dec
xor
push
outsl
data16
sbb
push
ds
push
cs
ljmp
popa
jno
mov
push
push
adc
xor
add
movsb
in
int
dec
pop
insb
out
neg
sbb
xchg
in
stc
mov
in
divl
jle
outsb
mov
into
xchg
mov
mov
dec
mov
add
imul
ss
stos
mov
push
push
imul
cs
adc
mov
mov
ret
push
inc
outsb
adc
push
sbb
push
lahf
enter
bound
push
dec
imul
cltd
cmp
sbb
sbb
mov
enter
push
ret
cmp
or
lret
js
xchg
pop
jg
shll
sbb
fsubrl
and
sbb
fsub
mov
xchg
push
bound
lcall
into
sbb
cli
jge
scas
cmpsb
lcall
mov
out
push
bound
adc
push
imulb
or
jecxz
add
add
cmc
loop
xor
xchg
mov
mov
mov
mov
inc
gs
sbbl
std
ds
jne
fstpt
icebp
fisubl
cli
ret
jg
adc
push
ds
lahf
fisubrs
and
dec
add
out
lcall
test
ficomps
leave
shll
clc
push
cmp
mov
push
mov
sub
inc
push
shll
mov
lcall
dec
inc
adc
lret
inc
lods
adc
bound
push
shlb
push
ret
pop
mov
push
xor
jle
faddl
inc
scas
insl
addb
aam
xchg
out
jno
sbb
xchg
ja
ret
inc
xchg
lcall
fwait
push
inc
inc
pop
cmc
ds
pop
cmpsl
int
inc
fstpl
and
fs
dec
insl
in
jl
sub
rorb
stos
mov
pop
xor
lret
test
add
xchg
leave
push
pop
or
lock
ficompl
dec
in
rclb
das
call
push
insl
inc
popa
jl
data16
cmp
stos
icebp
push
mov
insb
sbb
mov
dec
xor
aad
cmp
and
sub
imul
push
sbb
xlat
sar
and
int
push
xor
inc
dec
lods
mov
cmp
leave
push
mov
imul
xchg
lret
pop
mov
pop
addr16
add
inc
rol
cmp
cltd
push
addl
ja
jecxz
lods
dec
pop
outsb
jmp
sub
pop
dec
lock
jge
outsb
pop
in
shl
icebp
xlat
mov
jmp
cmpsl
imul
mov
call
pop
mov
cmp
mov
jbe
aad
pushf
xor
push
nop
add
les
or
jno
or
pusha
mov
inc
repz
in
xchg
inc
add
jbe
jmp
sbb
xor
pop
jmp
cltd
jns
out
test
mov
cmp
fbld
jg
ljmp
push
jnp
mov
aaa
lods
lea
inc
popa
aam
dec
hlt
mov
fidivrs
bound
xchg
inc
push
inc
xor
outsb
je
push
inc
pop
sub
daa
rcr
jp
pusha
popf
inc
mov
add
gs
jb
or
stos
mov
sub
popa
mov
dec
pusha
int3
jns
pop
cwtl
inc
or
or
add
and
dec
ljmp
insl
ret
or
push
push
out
mov
inc
idivl
shll
fnstenv
test
mov
or
xchg
es
mov
jl
mov
aaa
pop
and
mov
xor
mov
inc
mov
lret
push
shlb
sbb
jle
fnsave
adc
jns
jecxz
cltd
mov
xadd
mov
jecxz
push
sarl
cmp
inc
or
jmp
std
lea
dec
add
pop
xor
scas
cmp
push
pop
loop
punpckhdq
sub
and
inc
mov
xchg
mov
lcall
mov
xor
sbb
sub
xchg
xor
imul
xor
mov
sbb
cltd
sbb
loop
lcall
js
inc
mov
test
inc
mov
pushf
pop
adc
or
pop
cmp
xor
imul
cmpsl
mov
xor
movsb
sahf
xor
push
mov
push
xchg
inc
xor
inc
fs
sbb
cmp
xlat
ret
mov
push
add
call
imul
enter
push
mov
fsubrl
ss
xchg
pop
sub
push
sbb
jbe
push
jne
pop
insl
fisttpll
imul
adc
and
and
push
sub
bound
sahf
jo
negl
and
sbb
lcall
or
sub
dec
movsl
stos
jbe
pop
push
call
or
cmp
mov
aaa
sub
xchg
mov
insl
sub
jecxz
jne
pop
imul
insl
lret
sbb
mov
mov
push
es
mov
or
xchg
lcall
sahf
shrb
fstpt
jbe
leave
fmuls
push
lcall
push
and
cltd
adc
mov
das
mov
dec
dec
das
mov
fadds
adc
or
mov
xchg
test
shld
mov
xchg
mov
test
mov
pushw
dec
mov
iret
shll
int3
insb
push
push
and
sbb
js
loope
or
sti
inc
pop
xchg
pop
pop
and
lcall
add
repnz
lea
push
or
fstl
out
push
inc
and
sbb
inc
jne
nop
inc
cli
cmpsl
xor
or
lds
dec
xor
sub
pop
xchg
mov
dec
adc
std
lock
cmp
stos
adc
lods
pop
test
cs
fs
pop
shlb
add
push
mov
add
popa
adc
lret
xlat
jge
ficoms
xchg
out
pxor
mov
bound
loopne
ficomps
sub
push
pop
pop
cli
inc
xor
and
xor
cwtl
mulb
xor
cmp
ret
mov
dec
imul
jmp
and
sub
mov
or
push
or
jne
cmp
lahf
jo
cli
leave
xor
pop
sbb
lea
dec
subl
mov
mov
cmp
mov
jbe
xor
aad
or
inc
push
cmp
pop
dec
jmp
lock
in
out
jle
cmpsl
mov
fsub
xchg
and
adc
in
jb
jae
jbe
dec
add
lret
jbe
push
lret
inc
mov
pop
out
adc
lcall
arpl
fwait
dec
inc
pop
stos
into
mov
xor
sub
dec
daa
popf
mov
jns
and
test
scas
je
xor
push
cmp
mov
fwait
push
pop
jl
inc
pop
mov
pop
push
add
cwtl
push
mov
inc
pushf
jne
push
xchg
jb
out
push
mov
cli
xor
clc
cmp
cmpsb
xchg
jmp
and
cmp
ret
sbb
cmp
clc
xchg
sbb
in
mov
jmp
xchg
jbe
sbb
push
xor
les
test
lds
mov
es
lcall
xlat
shlb
inc
push
shll
xor
sbbb
and
rclb
gs
mov
cs
fisubl
repnz
add
call
xor
inc
lods
pop
lea
dec
xchg
mov
mov
lea
dec
dec
xchg
mov
fs
inc
cli
stos
push
push
js
xor
test
inc
xchg
push
inc
test
xor
fcomps
icebp
jns
pop
fcoml
inc
push
cwtl
xor
test
add
xor
mov
cmp
pop
mov
out
dec
fcomi
in
jbe
dec
lret
repz
cmpsl
add
xchg
mov
aam
icebp
daa
dec
pop
pop
mov
nop
push
mov
xor
adc
pop
xchg
push
aas
out
push
pop
jmp
xor
inc
adcb
inc
or
sahf
std
repnz
sahf
dec
xchg
mov
fiadds
mov
dec
jp
pop
inc
dec
aam
pop
int3
lea
andb
push
jp
xchg
inc
xchg
dec
shrb
sbb
lcall
jecxz
inc
lret
mov
adc
cld
mov
xor
cmp
mov
and
cmp
mov
sti
jns
add
push
add
sti
aam
mov
testl
in
dec
pushf
sub
and
fs
jo
int
cmc
mov
es
lahf
xor
sbb
inc
sub
sbb
adc
aas
or
mov
rolb
repnz
xor
adc
jbe
inc
jb
add
in
or
jo
cwtl
mov
mov
inc
fucom
mov
andb
xchg
cmp
stc
in
mov
xchg
fiadds
jns
sub
sti
jbe
pop
stos
push
xor
addr16
pushf
mov
mov
pop
es
sahf
sbb
jns
loopne
inc
mov
in
arpl
pop
ficomps
lahf
xor
jge
std
push
repz
fstpl
into
dec
add
iret
push
adc
ret
outsb
pop
lods
push
iret
cmpb
pop
mov
loope
mov
inc
sar
xchg
or
ss
xchg
sahf
pop
daa
ret
xchg
add
into
cmp
sbb
movsb
jo
fwait
mov
std
nop
xchg
out
rolb
cmp
dec
xchg
push
pop
shlb
sahf
xor
jl
stos
jbe
aaa
add
fists
in
dec
cltd
popf
inc
sahf
dec
push
push
fnstcw
ds
inc
test
enter
mov
les
pop
cmp
fimuls
sbb
stc
data16
call
outsl
sbb
xchg
clc
test
adc
xor
xchg
movsb
or
lds
cwtl
dec
mov
scas
sti
cmpsb
mov
sub
mov
hlt
mov
in
xor
ja
stos
sbb
push
sbb
in
xchg
lcall
mov
mov
in
or
cmp
push
or
pcmpgtw
xchg
mov
dec
adc
xchg
outsl
rolb
push
xchg
in
and
je
stos
orb
pop
dec
or
and
xchg
loop
into
rorb
or
repz
mov
shlb
mov
sub
adc
mov
rcrl
jp
stos
lods
dec
mov
dec
lret
or
mov
imul
jecxz
lcall
push
stc
lret
jp
jl
cmpps
xlat
xor
sbb
xchg
mov
fistps
lods
cmp
lcall
rorb
popa
in
cmp
mov
loopne
loope
push
fidivrl
push
rcr
mov
sbb
mov
cmp
in
ret
js
xor
sarb
loop
inc
mov
dec
sbb
nop
mov
add
je
lret
or
cmp
push
out
rcr
push
and
jmp
fldcw
mov
in
add
sbbb
sbb
nop
fwait
jns
and
dec
lcall
adc
dec
es
lods
sbb
or
inc
jg
jp
jnp
loope
xor
xchg
popl
sbb
movsb
lea
call
fisubrl
sahf
push
add
lret
cmp
lods
push
ret
lret
mov
dec
xor
push
ret
jp
shlb
jb
aas
jp
mov
imul
ret
stos
and
push
jp
sbb
dec
mov
and
mov
imul
adc
xchg
xor
pushf
je
sahf
or
or
mov
dec
dec
dec
jp
hlt
orb
xchg
inc
mov
jmp
cs
inc
in
or
push
out
mov
pop
imul
or
mov
cmp
dec
push
mov
dec
ljmp
jmp
bound
ja
mov
cwtl
dec
mov
cmp
rclb
mov
rcrb
mov
adc
dec
stos
mov
insb
sbb
xchg
push
xchg
inc
lret
cs
cmpsb
sbb
rcrl
inc
stc
cmp
jp
and
mov
jle
xchg
leave
dec
jl
into
mov
adc
jge
adc
adc
jle
mov
jl
or
fwait
aam
mov
push
mov
adc
inc
mov
daa
adc
frstor
mov
sub
push
into
and
pop
out
mov
cld
out
sub
sbb
inc
pop
cmc
bound
xor
popf
mov
inc
xor
hlt
inc
dec
jecxz
add
shlb
test
dec
xor
xchg
fisubrl
mov
js
test
cli
pop
xor
ljmp
pusha
sbbl
ficoml
lret
pop
mov
add
xchg
pushf
sti
mov
pop
jg
xchg
dec
adc
cmp
push
mov
xor
fcomp
jbe
dec
dec
add
sbb
sub
sbb
les
jecxz
sbb
sub
or
addr16
add
int
xor
push
sbb
je
cwtl
fimuls
dec
lock
imul
push
sub
xor
or
loop
rclb
mov
sbb
stos
xor
jne
jne
outsb
out
inc
fsubrs
loope
adc
ss
or
bound
pop
clc
adc
jp
shll
stos
push
ja
pop
cmpsb
xchg
mov
xchg
adc
loope
jp
std
mov
mov
push
sub
arpl
dec
into
sub
xor
jg
insl
fsubrl
cld
sbb
fbstp
xor
fsts
lcall
or
loope
shll
je
push
dec
xchg
jns
push
mov
lods
or
dec
lahf
fstl
sti
adc
lea
and
repnz
mov
xor
mov
cmp
out
jbe
inc
xor
in
scas
sub
out
loop
xchg
leave
cmp
loopne
filds
xor
sbb
or
rcll
sbb
adc
in
xor
daa
das
and
xchg
push
sbb
or
test
negb
adc
popf
mov
ficoms
ret
imul
stos
es
cmp
es
xor
inc
cmp
sbb
stos
in
sbb
or
adc
outsb
sub
push
addr16
stos
test
mov
test
fwait
jne
mov
aas
lcall
jb
jne
cmp
mov
and
iret
push
xor
xchg
lock
sub
loope
popf
push
addl
push
xor
imul
in
rol
mov
adc
inc
stos
push
sub
sti
call
push
dec
mov
cwtl
sbb
ss
xor
fldt
xor
lahf
xchg
and
mov
sub
ret
inc
pop
inc
mov
xor
cmc
int3
push
aas
inc
adc
add
es
mov
xor
add
inc
mov
pop
mov
adc
mov
xor
call
mov
cld
push
aam
xor
cltd
popa
push
jle
stos
aaa
shrl
xchg
sub
popa
sti
push
mov
dec
add
push
mov
popf
in
data16
xchg
push
dec
cwtl
les
rcl
fwait
inc
cmp
das
xor
nop
jle
adc
das
mov
xor
xor
test
jecxz
cmpsl
jnp
sbb
push
ficoml
rcll
mov
movsb
mov
sahf
adc
ss
dec
add
and
cmp
lcall
and
mov
and
rcrb
xor
out
int3
and
popf
adc
xchg
pop
shl
pop
sbb
inc
repz
outsl
mov
inc
add
les
sarl
mov
enter
mov
and
fistl
rorb
mov
xor
jge
popa
sub
jbe
and
loope
xchg
xor
xchg
dec
jg
cmp
mov
and
sub
add
loope
stos
enter
add
sti
or
push
inc
mov
loopne
adc
adc
fwait
pop
dec
dec
pop
inc
sub
nop
push
add
ret
push
xchg
xor
pop
xchg
xchg
xchg
inc
cmp
mov
jp
mov
cmp
setns
adc
xchg
or
inc
adc
wbinvd
inc
jg
fiaddl
sbb
je
push
mov
out
inc
loopne
inc
sbb
mov
dec
lcall
fistl
movsb
lret
jno
outsb
outsb
sbb
xor
fnstcw
popf
xchg
xor
xor
loopne
mov
leave
adc
pop
sub
inc
xchg
insl
sbb
sti
sbb
xchg
fwait
push
lret
dec
sti
push
mov
jae
xchg
clc
addr16
mov
xor
push
sbb
in
fisubrl
xor
push
das
outsb
dec
repnz
cltd
mov
pop
cli
shrb
push
ret
xor
mov
dec
lahf
xchg
sarl
outsb
inc
mov
mov
repz
add
push
sub
mov
sub
xchg
fs
mov
xchg
test
repz
push
mov
pushf
xor
out
nop
sbb
or
add
fs
mov
sbb
dec
push
xor
sti
stos
jo
lret
sbb
xchg
push
xchg
into
fidivl
dec
cwtl
mov
fidivrs
aam
rorb
xchg
add
jne
stc
xorl
cmp
pop
jg
repz
push
fsub
int3
cmpsb
or
stos
nop
sti
outsb
xor
ret
adc
xchg
or
outsb
pop
xchg
in
and
jecxz
fwait
test
notl
adc
dec
rcll
out
cmp
aam
cmp
xor
add
out
in
xorl
mov
lea
and
shll
dec
scas
lahf
inc
xor
mov
xor
in
jae
js
cmp
inc
push
xchg
sbb
fnsave
adc
stos
sub
mov
icebp
mov
xchg
mov
sbb
js
stos
leave
push
in
std
lods
jp
xchg
sbb
jae
je
mov
pop
cli
mov
ror
mov
xchg
jno
push
daa
cltd
fsubrl
sbb
mov
call
pop
dec
jae
mov
jno
lret
mov
mov
cmp
out
xor
jns
test
cwtl
cwtl
xor
movsl
add
sub
push
cs
push
sub
jp
test
jbe
xchg
xor
xchg
lcall
and
jae
sti
lcall
fisttpll
arpl
clc
sbb
ja,pt
ljmp
loop
add
or
ret
pop
xchg
adc
ficompl
mov
pop
or
stc
jno
insb
add
pusha
fisttpll
stc
nop
pushf
int3
in
or
stos
std
xchg
cmp
outsb
iret
cwtl
sub
ret
jle
addr16
mov
lods
scas
ret
xchg
push
push
out
sbb
into
add
adc
xlat
add
push
mov
sub
add
xchg
mov
arpl
push
xor
ror
xor
xor
push
fmuls
aaa
popf
iret
xor
cs
sbb
pop
lock
lods
mov
jne
and
pop
pop
jmp
ret
mov
outsl
jae
push
xor
inc
mov
mov
mov
and
xor
xchg
lods
out
pop
inc
jp
xchg
pop
pop
pop
cmpsb
adc
icebp
pop
mov
adc
andb
fsub
push
adc
imul
push
inc
bt
mov
xchg
cmc
push
add
add
cmpsb
hlt
scas
cmp
loop
inc
test
mov
int3
inc
add
iret
in
add
sbb
or
sub
xchg
lock
adc
fst
fisubs
adc
outsl
pop
sbb
xchg
push
test
xchg
ja
jno
int3
inc
int
sar
cmpsb
dec
cmpsb
outsb
das
push
in
into
loope
fs
add
aad
inc
arpl
es
push
negl
xor
dec
cmp
std
fmuls
xor
lods
jecxz
xchg
ror
cltd
mov
test
lcall
xor
std
xor
mov
and
push
adc
not
cmpsb
xchg
jp
or
inc
es
or
inc
mov
repnz
push
loope
repz
jmp
lret
fs
lea
and
xchg
pusha
movsb
sahf
add
cmp
pusha
mov
divb
sbb
in
je
xor
gs
pop
sub
push
stos
fbld
scas
cltd
sbb
sbb
ret
out
loope
push
andl
sbb
test
int
mov
ja
ficompl
fwait
push
dec
into
jbe
mov
sub
or
jecxz
adc
fsts
or
in
inc
pop
push
mov
and
push
pop
xchg
dec
xor
out
mov
mov
fnsave
push
aam
dec
jbe
aas
rcrb
xchg
stc
mov
dec
loop
fwait
nop
pushf
jmp
pop
xor
fcoml
mov
push
insb
movsb
adc
add
mov
and
repz
and
xor
or
aaa
fists
inc
test
testl
mov
fdiv
in
xchg
lahf
inc
jge
clc
mov
jbe
mov
xor
xor
mov
xchg
sbb
icebp
dec
mov
mov
xchg
push
sbb
sbb
adc
loopne
push
push
lret
outsb
mov
lock
nop
fdivrs
inc
pop
push
aam
pop
enter
gs
jp
out
push
fld
and
imul
fwait
popa
and
xor
push
xchg
rcrl
xchg
in
adc
pusha
fnsave
mov
dec
or
xor
and
fstl
jp
aad
data16
aas
inc
mov
xchg
mov
lret
sbb
mov
shl
jne
cs
mov
mov
jp
mov
push
imul
leave
cs
pusha
les
inc
add
icebp
imul
jbe
add
or
or
sub
cmp
outsb
mov
add
dec
loopne
cmp
sbb
dec
jnp
or
add
stc
rorb
pop
leave
inc
mov
lcall
sub
jge
and
jmp
adcb
gs
sbb
and
scas
rorl
or
xor
inc
jb
mov
testl
push
stos
inc
dec
xor
inc
sub
mov
je
xchg
xchg
into
xchg
sbb
iret
out
imul
sbb
les
addl
adcl
pop
in
orl
and
stos
xlat
lahf
xor
stc
jnp
out
dec
popa
lcall
xchg
cmp
add
and
add
bound
jl
cmp
cmpb
mov
leave
in
fimull
push
pop
jbe
jg
lcall
daa
mov
fildl
push
or
out
dec
lret
sbb
or
add
xchg
enter
lret
push
imul
rorl
inc
xor
inc
psubq
dec
lret
add
ss
xor
lods
decl
loopne
push
xchg
pop
jecxz
andb
push
sub
jae
negb
push
and
or
lods
jns
es
push
mov
sub
jle
mov
jno
cmc
shrl
lea
jae
mov
rcrl
mov
pushf
dec
push
cmpsb
lahf
adc
xor
jecxz
in
jecxz
dec
pop
adc
inc
cmp
push
inc
stos
add
stos
and
push
loope
dec
mov
ss
mov
int
lods
xor
xchg
push
sar
dec
push
add
add
shlb
loopne
mov
pop
fimull
clc
lret
pop
mull
mov
mov
xchg
cwtl
in
stos
js
lods
arpl
push
jnp
jle
popa
mov
je
iret
xor
iret
jnp
mov
jmp
and
sahf
repnz
stos
jbe
mov
scas
xor
stc
dec
xchg
pop
xor
out
inc
add
rcrb
test
or
sti
insb
loop
and
fnstcw
lock
add
mov
dec
jae
mov
xor
stos
mov
push
fidivrl
and
dec
movsb
lods
mov
jno
inc
int3
das
sbb
fisubl
sub
ficoms
sbb
add
leave
jbe
mov
mov
sbb
jmp
and
add
lods
mov
xlat
cmp
xchg
xor
cmpsl
repnz
cmc
data16
and
fwait
xchg
or
cmpb
dec
xlat
xchg
fcmovbe
loop
push
mov
sbb
and
fisttpll
lds
ret
xor
xor
sub
es
dec
mov
mov
stc
ret
bound
sahf
sub
out
xchg
jge
xlat
xchg
icebp
sbb
andl
imul
mov
rcrl
pushf
cmp
out
out
movsb
fidivrl
mov
mov
out
mov
adc
mov
add
insb
mov
stos
cmpsl
jg
repnz
and
jae
int
and
xchg
xor
movl
and
xor
mov
and
dec
nop
and
jecxz
bt
dec
xchg
jno
sbb
stos
fisubs
enter
int
insb
fsubr
xchg
sarb
add
pop
push
inc
xor
cmp
test
sbb
cmpsl
mov
fisttps
xor
ret
enter
ret
fdivs
aam
repz
jbe
cwtl
imulb
pop
add
xchg
in
ret
insl
push
cmp
cmp
or
fidivl
cmpl
xor
mov
xchg
decb
mov
inc
cs
pop
rol
lahf
in
int3
outsl
out
mov
sub
adc
stos
lods
xor
inc
or
mov
mov
jmp
fidivrl
add
test
mov
lock
dec
xchg
add
lret
out
or
cwtl
movsl
push
xchg
cli
int3
inc
sub
scas
cmp
adc
cmp
stc
dec
test
cli
fnstsw
xchg
in
sub
mulb
add
dec
aas
or
inc
in
add
xor
fbld
shrb
add
scas
push
xor
loope
mov
ss
fwait
repz
push
cmp
push
dec
add
incl
scas
cmp
test
add
shll
push
and
jnp
dec
xchg
ja
cmp
mov
sti
or
push
pusha
push
movsl
xor
sbb
push
leave
sbb
lea
pop
inc
lods
js
pop
lret
out
fisttpl
dec
adc
test
sbb
cmpsl
sbb
sbb
jle
bound
loop
xor
ljmp
insl
call
hlt
adc
fidivrs
aas
repnz
pop
inc
xor
push
fisttpll
inc
xor
or
test
fcompl
dec
into
inc
loope
pop
pop
fistps
mov
mov
add
insl
sti
push
pop
sbb
fildll
fcompl
rcr
dec
cmp
jae
fcom
lahf
or
xor
aaa
stos
test
fisubrl
subb
inc
push
imul
mov
xchg
adc
or
ds
xchg
stos
out
xchg
and
sbb
xchg
cmp
dec
mov
outsb
and
jno
or
jbe
mov
xchg
icebp
or
and
fbld
loop
imul
pop
aam
out
outsb
dec
into
shlb
xor
inc
out
mulb
cmc
shr
std
out
sahf
push
testl
push
xchg
add
loope
lcall
icebp
push
adc
leave
int3
mov
fcoms
iret
sbb
repnz
push
lret
and
sbb
xlat
shrb
adc
lods
loope
jnp
outsb
cmp
push
mov
fiaddl
xor
rcrl
xchg
stos
xor
and
mov
sbb
mov
lds
jl
rorl
xor
dec
cmpsl
inc
neg
and
xchg
mov
sub
fdivs
sbb
daa
xor
jbe
mov
stc
fadd
data16
mov
sub
xlat
pop
sahf
mov
fisttpl
jnp
test
mov
push
or
outsl
cmp
fs
fnsave
xlat
jge
scas
pop
mov
xor
clc
out
jne
pop
or
mov
add
and
int
mov
push
pop
or
inc
pop
stos
dec
sbb
fsubp
pop
push
test
nop
or
lods
daa
sbb
push
cmp
push
lret
jbe
pop
adc
ljmp
inc
add
or
mov
fmuls
iret
jmp
push
dec
xchg
pusha
add
sbb
ret
rcr
mov
mov
cmp
sub
es
loope
out
imul
sub
cmp
or
cvttps2pi
lcall
push
pop
inc
test
cmpsb
xor
or
add
je
sbb
jb
mov
sbbb
testb
xchg
ljmp
xchg
mov
fnsave
sbb
in
aam
inc
mov
push
xchg
shr
pop
outsb
loope
into
ret
push
xor
aaa
sub
pop
jp
insb
pop
sub
sbb
movsl
ficoml
cmp
call
insb
hlt
lods
mov
int3
cs
xor
xor
sti
in
sub
mov
jnp
jb
jg
lret
xchg
push
mov
pop
call
cmp
loopne
adcb
cmpsb
dec
mov
je
mov
lock
xor
popa
or
xchg
js
push
or
sbb
lahf
cmp
outsl
xchg
or
sbb
cmp
pop
je,pn
dec
xchg
xor
jns
sub
pop
out
or
push
mov
stos
dec
push
jmp
cltd
stos
fsubrl
jno
cwtl
push
in
adc
mov
loop
cmp
sub
push
cwtl
je
inc
add
sub
xor
aam
mov
adc
jmp
insl
pushf
push
sub
cmp
fstpl
cmp
out
pop
test
cld
mov
inc
std
mov
jg
xor
cmpsb
pop
push
mov
rcll
push
mov
mov
fbstp
aad
pusha
push
mov
loope
or
jecxz
sarl
jno
xor
insl
arpl
rorb
xlat
xchg
jo
mov
mov
cmp
sub
and
cltd
dec
adc
xchg
xlat
iret
ss
push
aad
mov
xchg
and
jl
push
adc
mov
lds
aam
xor
in
push
mov
mov
popf
and
ret
push
xchg
imul
jmp
pop
mov
int3
sub
lahf
ss
mov
movsl
enter
push
xor
jp
push
aaa
inc
cltd
pop
iret
ljmp
push
dec
testb
push
mov
outsl
scas
jmp
mov
and
lds
xchg
aam
pop
outsb
xor
jne
jmp
jecxz
and
imul
lret
cld
ficoms
pushf
rorb
lods
hlt
push
popf
dec
mov
pop
push
bound
cmp
cmp
mov
ret
sbb
dec
dec
pop
stos
push
dec
sbb
or
mov
sub
jno
sub
xchg
outsb
push
gs
or
mov
xchg
sbb
inc
push
lds
leave
aam
cs
or
aas
lcall
xchg
test
sub
bound
inc
aad
adc
lods
add
repnz
cli
lcall
dec
fwait
adc
xchg
or
enter
ficoml
divb
sub
adc
push
out
mov
sub
xor
adc
in
sbb
mov
cld
ret
dec
int3
in
and
mov
cmp
adc
in
inc
push
xchg
cmpsb
enterw
add
dec
inc
mov
clc
or
lds
jns
xchg
xchg
jecxz
cmc
enter
and
lds
mov
mov
xor
pop
fabs
push
or
sbb
loop
inc
add
es
cmp
sub
das
push
call
xor
xlat
fcoms
popfw
imul
rcrb
inc
dec
mov
or
push
xchg
cmp
imul
mov
pop
sub
aad
nop
ret
leave
data16
or
dec
pop
loopne
jecxz
xchg
fs
jb
mov
mov
sbb
lret
mov
add
lahf
sub
cmc
outsb
fstpl
mov
mov
mov
pop
rorb
push
insb
mov
jae
xlat
mov
gs
dec
jnp
outsl
mov
dec
mov
push
mov
mov
data16
mov
arpl
in
dec
data16
jae
add
sub
xor
mov
test
repz
xor
or
mov
in
mov
dec
movsl
andb
dec
cmpsl
arpl
enter
sbb
cmpsl
sbb
xchg
cld
lea
imul
pop
push
push
push
jp
inc
cmpsb
ljmp
mov
pop
out
fsubp
mov
mov
xchg
js
gs
mov
pop
idiv
or
inc
or
add
jge
or
mov
cmp
cmc
cli
stos
icebp
test
outsl
nop
mov
xchg
jl
fsubs
mov
adc
inc
dec
pop
pop
sub
sub
pushf
test
lcall
mov
outsl
add
stos
imul
add
rcll
mov
mov
sub
mov
xchg
dec
jo
and
and
sarb
jno
pop
xchg
dec
shrb
xchg
popf
adc
push
fmuls
inc
je
mov
jl
and
rcrl
mov
inc
lcall
lds
xor
out
fbstp
pop
out
sub
jmp
mov
out
fbld
sub
mov
mov
ja
ret
les
jp
cmpsb
imul
mov
fists
mov
inc
adc
sub
add
mov
sbb
jne
sti
decb
sbb
push
xor
jae
fcoms
lahf
push
mov
mov
and
movsb
sbb
adc
cmpsl
mov
fsubrl
jecxz
shrb
cwtl
mov
fwait
leave
shll
mov
mov
bound
jecxz
pusha
push
jge
insb
es
fwait
imul
mov
mov
jmp
push
test
movsb
xchg
mov
mov
lcall
xchg
iret
and
sub
push
jo
and
and
sbb
popa
mov
xchg
dec
mov
mov
cltd
popf
and
jecxz
hlt
adc
sbb
xor
pop
cmp
mov
leave
pop
pusha
xchg
nop
outsb
adc
push
iret
inc
imul
pushf
pop
out
cmp
cltd
outsb
cwtl
sub
pop
mov
imul
inc
int3
mov
sub
dec
adc
xor
or
jne
cmpsb
cmp
push
inc
push
hlt
outsb
adc
cwtl
mov
int3
inc
jmp
and
push
scas
mov
fisubl
jno
fmuls
sbb
nop
out
lcall
movsl
cmp
outsl
mov
ficompl
ret
bound
lret
inc
sub
cmpb
jp
cmp
jae
lahf
mov
lods
hlt
daa
imul
mov
jmp
mov
loope
scas
sbb
movsb
mov
rcrb
xchg
xchg
mov
mov
imul
test
sub
es
push
jo
push
and
pop
cmc
out
repnz
mov
rorb
mov
ret
repnz
xor
dec
ror
cwtl
cmpsb
fistpll
fwait
lret
mov
lret
mov
or
pop
xor
notb
push
sarb
sbb
pop
mov
lret
pushf
cmp
arpl
sbb
add
sub
pop
push
jmp
push
cwtl
fwait
add
fldt
mov
into
adc
outsb
mov
mov
xor
xor
xchg
scas
outsb
push
cwtl
mov
sbb
xchg
mov
cwtl
xchg
movsl
jecxz
scas
push
sti
mov
lcall
jge
inc
mov
push
les
cs
bound
cmpsl
dec
lea
neg
ds
jbe
int3
or
cwtl
xchg
push
repnz
pop
push
adc
mov
add
nop
addr16
mov
imul
mov
ja
push
sub
mov
mov
sbb
mov
xchg
addr16
mov
add
xchg
push
decb
lret
daa
ret
lahf
lcall
test
jno
lods
ljmp
pop
lea
outsb
mov
cwtl
xchg
push
jns
addr16
inc
add
insl
mov
mov
fistpll
xor
xchg
scas
fwait
sbb
lahf
push
sbb
inc
dec
adc
into
xor
js
jge
lret
push
mov
adc
int3
sets
mov
aad
mov
and
mov
outsl
and
xchg
fisubrl
and
decb
test
mull
xor
inc
cmp
mov
sub
int
mov
sub
mov
subb
dec
rol
fisttps
insl
dec
and
pop
lahf
push
xor
push
icebp
mov
aas
inc
add
outsb
fwait
adc
stos
loop
push
out
mov
ljmp
lcall
pop
mov
xchg
fisttps
dec
jo
mov
stos
int3
aad
and
pop
mov
cmp
xchg
push
adc
add
jl
mov
fs
xchg
test
std
scas
leave
cli
mov
pop
fstps
mov
pop
pop
repz
mov
movsb
add
adc
push
inc
mov
callw
mov
mov
or
pop
ret
jne
das
mov
inc
push
mov
mov
xor
aam
adc
and
xor
jg
lahf
adc
out
push
jb
lahf
aas
lcall
mov
sti
rorb
cmp
je
xchg
out
lods
push
mov
repnz
int
xor
jo
and
push
mov
push
das
scas
daa
sti
out
or
call
sub
loopne
jo
mov
add
movsb
shlb
decl
push
cmpsb
sti
cltd
mov
dec
xor
aas
int
xchg
jl
fildll
mov
in
outsl
pop
lods
test
push
mov
loopne
inc
xor
inc
insb
shl
mov
inc
xorb
outsb
sbb
scas
fs
cmp
and
xchg
rorb
sbb
lds
lcall
fs
xor
test
int3
xor
cwtl
dec
adc
enter
sbbl
sarb
mov
sbb
and
lret
mov
xor
xchg
lcall
xlat
mov
jl
push
mov
add
mov
xor
scas
inc
push
xchg
mov
int
or
adc
adc
into
mov
outsl
les
dec
aad
std
imul
push
bound
xchg
jl
mov
add
mov
mov
mov
ljmp
add
sub
xor
out
xor
push
jo
adc
mov
call
jns
stos
mov
and
decb
cwtl
popf
orl
push
mov
enter
in
lods
stos
leave
sbb
out
cmp
push
sub
pop
inc
xor
xlat
dec
loop
iret
xchg
das
std
testl
jo
jp
jb
sbb
inc
lcall
dec
adc
ss
jl
fmuls
test
call
inc
mov
arpl
loop
daa
insb
fldenv
mov
popa
outsb
xor
push
sbb
iret
dec
mov
xchg
push
dec
es
movsb
sahf
or
mov
jnp
jle
and
dec
or
sub
mov
in
mov
shrb
jg
cwtl
cld
mov
jo
outsl
push
push
or
rcrl
push
lcall
or
in
mov
movsb
xlat
sti
mov
out
xor
xchg
cmpsl
repz
les
sbb
dec
scas
pop
mov
cli
jl
cmp
sbb
push
scas
insb
bound
shlb
outsb
mov
into
out
xlat
hlt
ss
xchg
cwtl
fcomps
push
leave
lcall
push
test
aad
adc
lods
sti
cs
aam
leave
les
leave
cwtl
push
or
aas
leave
das
gs
sbb
xlat
cmp
mov
or
sbb
push
mov
les
mov
shlb
mov
jnp
dec
outsb
rorl
xor
xchg
fstl
mov
mov
add
push
shlb
push
loopne
push
mov
push
xor
loopne
add
cmpsb
cli
cltd
mov
cmpsb
cwtl
jge
adc
sbbl
cmp
dec
andb
mov
js
sbbb
xchg
mov
pop
sbb
xchg
xchg
xchg
sub
or
mov
test
sahf
cmp
jle
cmpl
sbb
dec
jb
mov
xchg
jg
jle
iret
xor
and
andl
sub
xor
jmp
iret
inc
push
js
jl
cmp
cmpsb
movl
jp
xchg
mov
aam
movd
pop
fcomip
dec
add
bound
jp
cwtl
and
jecxz
mov
push
lret
adc
js
inc
jg
bound
out
mov
in
clc
ret
addr16
aaa
push
jno
mov
faddl
mov
cmpsb
test
or
test
ret
cmpsb
pop
sub
mov
popf
adc
scas
mov
test
jns
iret
push
jl
pop
inc
ljmp
mov
shrb
jns
jle
jge
sbb
subb
stos
orb
inc
test
popf
xchg
sahf
hlt
lret
movb
fsubr
jle
in
jns
js
jg
mov
cmp
test
jg
cli
div
inc
js
xor
inc
cmpsb
popf
jl
or
enter
bnd
mov
icebp
mov
or
inc
sub
repnz
xchg
jl
shr
enter
int
or
push
iret
jp
mov
adcb
xchg
cs
pop
pop
fsubr
xchg
idivb
jle
aaa
push
js
addr16
sub
xchg
jge
subb
test
pop
iret
idiv
jp
xchg
sti
js
jmp
sub
cmp
les
out
bound
andb
lahf
xor
jge
shrb
bound
xor
jp
stc
sbb
mov
mov
cmpl
adc
loope
sbb
test
shll
ss
lret
imul
push
xor
std
js
inc
cmpsb
or
pop
lock
enter
in
or
andl
xchg
mov
add
xchg
cmpsb
test
or
test
inc
outsb
ss
in
sub
nop
jns
imul
add
jge
imul
loopne
mov
stos
mov
rolb
insb
and
dec
clc
pushf
mov
shl
mov
mov
pop
rcr
mov
neg
sar
btc
shr
mov
rcr
neg
jmp
jmp
movl
mov
movl
movb
pusha
lea
jmp
mov
lea
je
push
not
call
ja
xchg
jecxz
in
outsb
inc
sbb
outsb
dec
sub
ret
dec
aam
lahf
pusha
sub
xor
loop
push
pop
xchg
pop
cs
dec
dec
sub
push
xor
mov
mov
ret
pop
mov
std
jb
xchg
adc
cmc
jmp
mov
mov
pusha
push
lea
jmp
gs
jecxz
in
mov
cmc
cmp
mov
xchg
inc
or
pop
ja
out
sbb
mov
fcompl
sub
push
pop
cltd
sbb
icebp
sbb
lds
jnp
jmp
or
loopne
loope
jp
faddl
and
rorb
xchg
out
mov
mov
les
pushl
lds
xrelease
jp
aaa
jns
mov
fisubrl
push
jle
inc
aad
jb,pn
ret
iret
xchg
adc
jae
push
lds
divl
repz
or
mov
adc
fnsave
mov
call
pushf
jmp
mov
adc
xor
and
mov
pusha
ret
add
imul
fmulp
sub
jo
inc
aas
or
add
jle
fwait
out
jb
xchg
push
mov
mov
mul
inc
dec
push
popa
xor
push
sbb
rcl
cwtl
push
sub
add
push
stos
xor
int
stc
scas
mov
mov
lea
push
sbb
leave
repnz
out
jb
dec
ds
add
xor
xor
stc
jmp
add
sub
xchg
mov
pop
and
lea
xlat
xchg
sbb
out
jo
pop
ljmp
pop
dec
xchg
dec
mov
add
iret
out
and
mov
adc
inc
jmp
in
call
lea
ja
stc
stc
imul
call
cmc
bt
mov
cmc
call
pusha
lea
jb
test
cmp
pushf
call
add
iret
loopne
in
push
xchg
test
or
push
fwait
cli
jecxz
jmp
ret
xchg
and
loope
mov
shl
mov
xor
push
incl
fimuls
sti
jb
mov
fbstp
in
jl
xchg
push
jmp
dec
jp
gs
inc
mov
or
inc
aas
sbb
mov
mov
sbb
fiaddl
xorb
int3
xor
mov
lar
outsb
insb
mov
inc
in
ljmp
ss
fxch
and
lods
add
dec
xor
inc
xor
not
cmp
mov
sub
xor
jg
lcall
loopne
and
pop
mov
les
pop
adc
inc
jo
test
mov
xor
jecxz
call
int3
mov
ja
push
pop
mul
pop
jg
mov
push
pushl
enter
xor
jl
push
xlat
shl
ss
loop
inc
mov
hlt
ljmp
mov
mov
stos
test
mov
das
sbb
fs
jg
cmp
pushf
pusha
pushf
lea
ja
ror
clc
add
test
cmp
dec
sets
mov
test
stc
call
idivb
fidivs
in
jp
mov
dec
mov
movsb
andl
mov
push
bound
xor
js
test
mov
imul
mov
jmp
out
mov
mov
jnp
imul
icebp
jle
fwait
mov
dec
fwait
cmp
jl
cld
inc
xchg
push
dec
stos
mov
pop
jno
push
into
cmp
push
subb
mov
fiadds
dec
test
add
cwtl
xchg
fwait
or
lcall
int3
nop
adc
and
pop
popf
stos
mov
test
mov
and
mov
adc
cltd
cmp
lea
cmp
fbstp
in
nop
mov
jno
xchg
cmp
dec
out
fwait
push
imul
inc
aad
lock
leave
shll
aam
ret
stc
movsb
ja
xchg
mov
push
sub
shrb
inc
mov
cmp
aas
outsl
xchg
mov
lods
mov
and
fwait
mov
mov
cli
imul
bt
cmp
clc
add
pushl
mov
mov
lea
jmp
insb
cmpb
in
mov
xor
in
push
fistpl
jbe
cwtl
push
icebp
sbb
sub
jmp
cmp
dec
test
insl
adc
add
data16
ja
adc
call
lods
mov
stos
push
pop
data16
cmp
dec
mov
notl
jnp
jo
sbb
push
push
call
add
and
cs
sbb
lock
stc
cwtl
out
lods
pop
call
and
cmp
fstpt
notb
test
es
xchg
clc
imul
ja
popf
dec
insb
pop
and
call
push
mov
je
push
pop
enter
push
out
sti
push
cmp
clc
cmp
add
fnsave
in
adc
or
movsb
pop
pop
bound
in
mov
cli
ret
shrb
mov
nop
hlt
xchg
mov
cli
adc
popa
es
ds
int
push
test
out
out
or
push
aas
add
dec
mov
cmp
test
rclb
les
adc
mov
xorb
pop
dec
repnz
enter
fnsave
in
mov
test
xor
je
pop
jno
jge
ret
clc
mov
dec
dec
push
cmp
xor
mov
ds
arpl
mov
lcall
into
jnp
mov
fcompl
subb
in
nop
loope
orl
pop
sub
iret
nop
adc
aaa
test
nop
adc
test
add
shrl
stos
insb
iret
fdivrl
pop
les
inc
push
cmp
mov
and
push
jnp
push
and
jmp
call
test
cmp
movsbl
lea
movzbw
lea
pop
mov
pushf
lea
ja
pushf
push
lea
jb
jno
test
cmpb
jmp
btr
pusha
mov
shl
sbb
btc
bts
sub
not
lahf
jmp
mov
push
pop
bswap
movsbw
pushl
cwtl
bswap
push
movzbw
lea
push
setne
cwtl
lea
pusha
pusha
pushf
movl
pushf
call
movl
push
movl
pushf
push
lea
jmp
pushf
push
lea
jae
adc
bts
test
mov
clc
call
xor
in
test
xchg
adc
sbb
outsb
jno
cli
lret
push
test
or
inc
mov
push
sbb
in
xor
loopne
jb
sub
aam
stc
add
xor
aaa
pusha
stos
lea
insl
jns
sbb
mov
mov
sbb
mov
push
call
push
outsl
dec
mov
loop
fimuls
mov
sbb
jnp
aaa
rclb
push
das
loope
js
aaa
cmovp
push
push
push
inc
xchg
iret
js
inc
stos
shll
mov
cwtl
pop
xchg
pop
jbe
adc
xchg
xchg
or
mov
jecxz
shl
inc
cld
pop
cltd
enter
aad
nop
dec
mov
add
pop
mov
lock
aad
pusha
pusha
movl
pushf
pushf
mov
movl
pushf
push
mov
lea
jmp
mov
movl
movb
lea
jmp
aam
adc
xor
sub
push
imul
push
push
push
ror
out
cmp
iret
sbb
in
or
xchg
sub
and
dec
dec
rcll
add
scas
out
lods
jo
cwtl
aas
enter
test
loop
and
jb
sahf
dec
and
fnstenv
in
jnp
inc
rcrl
push
cwtl
inc
call
lods
out
mov
fadds
mov
cmp
dec
add
sub
mov
jmp
push
loop
fcompl
fcomps
sti
mov
mov
xchg
cld
popf
lock
cmp
loope
sarb
clc
add
pop
dec
mov
pusha
push
jg
inc
sub
popa
pop
addr16
into
mov
int
leave
in
std
add
mov
popf
xchg
xchg
popf
push
loope
sub
loopne
jle
cmpsl
leave
xor
adc
push
mov
and
je
neg
sub
add
shrd
sub
xor
shr
sub
pushf
bts
mov
not
shrd
adc
clc
add
sbb
xor
add
shl
ror
dec
mov
clc
shr
bt
cmp
movb
jmp
jp
neg
xor
or
dec
imul
sbb
cmp
es
wrmsr
cld
dec
mov
and
mov
pop
cmp
mov
test
jmp
popf
add
jnp
xor
cmpsb
ljmp
sbb
lds
inc
pop
sub
cmp
xor
pop
stc
mov
push
fdivs
push
scas
mov
push
pop
sbb
jmp
adc
and
add
xor
add
call
pusha
add
clc
movl
mov
mov
pushf
test
jmp
in
and
xlat
xor
daa
fnstsw
cmp
fmul
pushf
les
mov
dec
cmp
stc
mov
pop
sub
andl
inc
icebp
dec
insl
mov
or
rcl
sub
inc
mov
jp,pt
or
inc
mov
fstpt
push
mov
mov
lea
jae
push
mov
shrd
cmc
mov
rol
pushf
clc
movzbw
mov
test
call
icebp
rcll
inc
dec
sub
dec
and
cmp
adc
sbb
add
mull
dec
dec
adc
arpl
leave
das
dec
push
inc
xchg
sti
ljmp
or
packssdw
mov
pop
jp
push
sub
lcall
sti
jb
push
data16
add
xor
cmp
arpl
mov
mov
into
and
push
insl
jns
cmp
adc
repnz
ficoms
ret
pop
sub
arpl
pop
lods
sbb
jl
jae
das
or
push
jg
arpl
pop
inc
sub
icebp
pop
pop
cmp
mov
out
sbb
jecxz
and
mov
rol
add
inc
ja
mov
dec
pop
xchg
repnz
dec
ret
xor
cmp
and
int3
jecxz
jmp
or
adc
popa
jns
push
mov
mov
or
out
push
push
push
nop
sub
insl
or
stos
or
test
loop
cmp
inc
and
shlb
xor
insl
lods
fstp
aaa
int3
xchg
mov
push
bound
das
movsl
jmp
mov
xor
cld
inc
inc
lahf
pusha
mov
mov
sarl
sub
imul
xor
movb
inc
fcomps
rcl
sub
and
in
ja
data16
mov
jp
test
cli
jmp
mov
lea
jb
pusha
test
pushf
cmp
call
shlb
aad
in
push
cmp
mov
jo
imull
dec
in
jns
push
lret
pslld
int3
mov
and
ja
out
mov
add
jns
scas
mov
pop
loope
adc
pop
leave
push
mov
or
mov
cltd
ret
dec
dec
or
bound
subb
sti
jb
loopne
incl
cmovne
xor
mov
jmp
jl
lods
imul
icebp
cs
or
sbb
movsl
sbb
repnz
inc
dec
icebp
loope
xorb
dec
aaa
jmp
cmp
xchg
jno
xor
enter
or
cmpb
inc
dec
xor
mov
inc
pop
mov
scas
test
cld
jl
and
shr
mov
sbb
test
mov
insb
in
add
divb
xchg
ja
pusha
popf
pop
dec
push
add
in
push
shl
into
call
ja
cmp
jecxz
sub
pop
jg
int
or
add
daa
into
sbb
daa
and
or
pop
fdivs
sahf
mov
mov
js
push
cmp
pop
mov
jbe
popf
jl
out
frstor
ret
inc
cmp
lahf
xor
testb
sub
lds
sarb
aad
dec
out
sub
imul
repnz
or
xchg
push
push
jmp
mov
pop
pusha
mov
jl
out
dec
loopne
mov
enter
jg
insb
mov
aaa
ja
jl
fmuls
jle
mov
mov
subl
jl
sbb
js
jne
pop
xchg
adc
pop
clc
inc
pop
outsl
add
fiaddl
fs
insl
sub
adc
xchg
adc
lret
sbb
mov
dec
mov
enter
jle
pop
sbb
ret
xchg
push
enter
dec
icebp
lods
xor
aam
pop
jo
push
push
and
pusha
mov
pusha
mov
pushl
ret
pusha
call
int
sbb
xor
pop
mov
adc
inc
popa
sub
jb
stc
xchg
sub
mov
inc
shr
or
imul
xchg
loopne
iret
subl
sbb
lods
pop
loope
sti
movsl
mov
adc
sub
fcompl
cmc
fidivrl
mov
sarb
sub
stos
jmp
push
lret
sbb
icebp
mov
cmc
bound
mov
push
hlt
and
mov
jmp
mov
xor
scas
dec
in
decl
mov
cld
cmpsl
dec
clc
hlt
ss
enter
xor
add
cmpsb
cmp
movsbw
movw
lea
pop
mov
mov
movb
jmp
stc
cmc
pushf
clc
sub
clc
jmp
push
sbb
push
movzbl
sub
mov
push
cmc
test
jmp
rorl
xor
testl
pop
stos
jae
cmc
addb
andb
mov
xchg
call
sbb
jp
mov
pusha
cmpsl
push
pop
xchg
cltd
mov
inc
popa
mov
loop
xchg
cmp
sub
pop
mov
add
mov
inc
shrl
and
jne
ja
xor
sbb
int
testl
nop
cmp
int
inc
cmp
enter
jg
pop
and
jne
mov
xor
cwtl
ret
pop
popa
popl
jbe
dec
push
loope,pt
sbb
rcrb
pop
adc
leave
push
push
jg
cmp
ret
inc
adc
iretw
xor
repnz
dec
sbb
fwait
pusha
icebp
insb
js
add
fisttpl
pop
test
aas
add
shrb
nop
inc
in
push
adcl
popa
push
bound
arpl
fisubs
sub
jb
test
xchg
icebp
inc
mov
shl
fisubrs
sub
mov
jle
jmp
gs
pop
gs
pop
sub
popa
call
iret
gs
call
pusha
movl
pusha
mov
mov
push
pushl
pusha
lea
jmp
dec
hlt
or
xor
push
push
fs
and
xor
push
sbb
pop
ficoml
in
add
cmp
inc
sar
fcompl
and
aas
test
sti
stos
dec
out
xor
rcll
das
and
shrl
add
sti
jb
popa
cmp
sub
mov
adc
inc
in
mov
add
or
xchg
loopne
xchg
in
cs
lret
bound
mov
fdivrs
mov
xchg
mov
inc
sbb
int
fmull
xor
scas
sbb
jecxz
xor
insb
rcrb
pusha
aas
or
mov
in
mov
mov
fstps
sub
das
mov
pop
cmp
popf
mov
loope
cltd
sti
sub
in
aam
repnz
in
sub
sti
std
sbb
cmc
in
dec
pop
scas
shlb
in
mov
das
jns
xor
lea
flds
jl
je
addl
sub
push
sub
sub
dec
fwait
mov
stos
out
fdivrl
sub
mov
xchg
ret
mov
mov
not
movsbw
pop
push
mov
not
mov
movsbw
bswap
push
movzbw
mov
jmp
cmp
jmp
mov
pusha
lea
call
push
movb
lea
jae
pushf
pushf
clc
xor
call
lea
jne
sub
ror
mov
xor
btr
mov
sub
test
pusha
lea
mov
stc
sub
bt
pusha
pushl
popl
cmp
cmp
pushl
call
movw
pusha
movl
call
dec
call
pushl
lea
je
pushf
mov
add
pushf
pushf
pusha
mov
lea
jmp
jle
jns
xor
shl
xor
mov
sub
pop
out
jno
or
mov
leave
and
ret
jo
dec
cmp
jbe
mov
jmp
sub
xchg
xor
sub
add
inc
lock
inc
sbbl
add
cld
in
ucomiss
fdiv
adc
add
pop
shl
xchg
insl
movsb
insb
adc
inc
filds
repnz
jae
dec
gs
cs
jmp
mov
test
incl
into
xor
jnp
test
decl
inc
clc
sub
sbb
sahf
or
dec
pop
xor
fidivl
adc
xchg
loopne
clc
movsb
ja
mov
mov
sub
rolb
das
xor
mov
call
mov
mov
adc
fsubrl
cmp
js
xor
lea
jle
jne
je
jmp
jg
pop
into
xor
jmp
jbe
or
cmp
pop
sbb
sahf
or
movsl
cs
jno
jb
xchg
push
push
jmp
sbb
and
sbb
sub
gs
pop
mov
cwtl
mov
fcoml
mov
dec
in
jae
sbb
cmpb
lret
xchg
inc
dec
pop
ljmp
out
or
ffree
push
js
pop
fisttpll
add
sahf
int3
xlat
fld
inc
out
push
push
pop
lds
push
bound
out
ljmp
push
bound
bound
ror
addl
hlt
jl
xchg
loop
sub
ljmp
ljmp
sub
cmpl
or
xchg
dec
fisubrs
rep
out
popf
sahf
and
adc
sub
jne
fmull
mov
inc
inc
lahf
cmc
and
enter
gs
xor
inc
lock
ret
cwtl
flds
push
roll
xlat
enter
ficomps
in
push
test
mov
idivl
mov
ljmp
jp
std
push
mov
ret
ret
or
pop
push
fs
popa
or
xlat
enter
dec
dec
fidivl
fiaddl
sar
jb
inc
stos
mov
xor
mov
cmp
fsubs
flds
push
mov
xlat
enter
repz
xor
jge
mov
mov
xchg
cli
cmp
dec
stc
xchg
cmp
into
popl
pop
jbe
les
xorl
push
and
sahf
sti
bound
nop
sti
inc
sbb
xchg
popa
cmp
mov
pop
and
shrb
insb
inc
dec
push
sub
fs
ds
fwait
xlat
mov
push
and
push
jle
jg
push
in
in
sbb
sub
mov
hlt
pushf
mov
lea
jmp
fadds
das
push
dec
into
or
or
mov
adc
outsb
push
dec
cltd
xchg
outsb
mov
movsb
pop
cmp
std
pushf
lret
jnp
orl
pop
mov
adc
cltd
in
push
std
or
mov
orb
call
mov
pop
les
addr16
out
dec
dec
bound
aas
sbb
ret
cs
pop
jnp
cwtl
test
sbb
jge
scas
inc
repnz
jbe
mov
pop
push
sub
lret
cmpsb
arpl
rorl
ret
repz
test
jbe
dec
out
mov
push
loop
insl
mov
aam
mov
sub
into
leave
stos
hlt
bnd
or
jg
mov
ljmp
cltd
add
lcall
pop
pushf
sbb
push
sub
dec
mov
jle
adcb
sub
dec
adc
or
orb
test
mov
cmpl
ljmp
test
test
xor
mov
leave
mov
mov
xchg
cmp
cmpl
push
lods
std
fs
add
inc
adc
test
adc
and
mov
pop
loop
int3
mov
je
push
stos
rorb
mov
bswap
pop
movsbw
mov
call
pushf
add
pushl
mov
mov
lea
jmp
pushfw
popw
pushf
setge
seta
mov
jmp
into
in
lret
pushf
lods
sbb
dec
mov
fisttpl
sub
and
insl
inc
mov
dec
mov
in
push
out
sti
pop
ja
sub
xchg
xor
pop
int3
push
andb
or
mov
mov
mull
xchg
or
fcoms
adc
lahf
arpl
push
mov
mov
fcoml
call
or
leave
xor
inc
fsubrs
movsl
mov
mov
pop
scas
jge
dec
mov
push
xor
insb
jne
movsl
mov
adc
test
cli
int
jg
shrl
jp
sahf
add
push
pop
dec
mov
push
roll
sub
or
mov
in
ss
aam
sub
dec
test
je
sarl
inc
leave
dec
jnp
lods
insb
sub
into
xchg
pop
shr
loop
push
cmpsl
test
out
enter
mov
fcmovnu
test
in
outsl
sti
mov
xchg
push
and
cwtl
xor
in
push
jno
in
add
sub
cmp
add
enter
dec
cmpsl
aam
jbe
inc
mov
call
add
cmpl
lret
fbld
jno
push
cwtl
js
inc
xchg
cmp
orl
push
push
or
stos
xchg
dec
loop
mov
dec
and
cli
sub
mov
sbb
mov
loop
fnstcw
mov
mov
adc
loop
addr16
loop
or
pop
rorl
cmp
cli
call
clc
cmp
mov
lea
mov
stc
pushf
xor
mov
pusha
pusha
push
sub
cmc
test
stc
repnz
mov
push
jmp
jmp
movb
pusha
jmp
stc
cmp
mov
push
bt
cmp
and
movb
add
push
pushf
lea
jmp
mov
pushl
pusha
pushf
lea
jmp
add
mov
add
add
add
add
add
add
sbb
cwtl
push
sbb
add
add
add
sahf
push
sbb
and
scas
lea
xor
jbe
movsl
out
fimull
fiaddl
adc
xchg
lds
pop
add
fldt
std
cmc
jne
xchg
sbb
pop
push
loope
cmp
lods
mov
mov
mov
seto
insb
das
xchg
mov
movsl
xchg
xorl
faddl
lods
xor
clc
jne
or
cmp
push
incb
sub
adc
mov
dec
and
js
ret
ja
gs
adc
aas
sbb
xor
push
in
outsb
pop
mov
jae
jbe
call
iret
stc
testb
push
mov
popa
push
inc
add
push
xchg
mov
xchg
mov
shll
mov
int
lock
insb
call
add
shl
lods
and
cmp
enter
and
pop
pop
and
jne
arpl
mov
jbe
inc
jge
fidivl
or
add
aam
stos
jne
mov
std
jg
mov
adc
stos
divl
fwait
sbbl
push
popa
cltd
hlt
jecxz
gs
out
adc
add
inc
lret
push
mov
mov
ror
imul
mov
pop
cltd
mov
jnp
and
mov
mov
int
pusha
add
jg
je
es
out
cmp
shl
add
xor
test
inc
adc
pop
mov
sub
pop
aam
mov
push
aas
adc
xchg
mov
jbe
pmaddwd
push
pushf
clc
ss
or
test
jg
sbb
rorl
lahf
jb
fnstsw
sbb
cli
aam
xor
mov
dec
xchg
leave
std
push
addb
mov
and
lods
filds
fstl
mov
inc
or
outsb
mov
push
call
push
inc
mov
repz
sbb
jmp
jb
pop
xor
cmc
dec
sbb
pusha
push
call
push
hlt
xchg
sbb
aam
call
add
call
mov
cli
mov
jmp
repnz
mov
loop
jecxz
mov
retw
xor
xor
jmp
mov
jb
inc
jae
ret
pop
scas
or
jle
push
aaa
lods
mov
mov
and
loope
imul
pop
mov
inc
repz
xchg
aad
out
aam
mov
enter
pop
std
xor
clc
shll
mov
push
jg
insl
bound
lods
int3
das
jno
shr
inc
cwtl
push
xchg
lods
sbb
mov
jne
aad
imul
cmc
push
jge
lahf
mov
pop
pop
add
lcall
mov
in
push
repnz
jo
push
enter
and
sub
xchg
cli
in
movsb
push
pop
fistl
jbe
sbb
mov
roll
cld
ja
or
and
loop
dec
andb
test
aad
sbb
push
or
dec
jp
das
push
dec
add
stos
stos
lret
push
xor
nop
ja
arpl
enter
cli
pop
pusha
mov
xlat
fstpt
mov
xor
and
in
je
xchg
mov
xchg
mov
ja
mov
in
dec
ja
jne
aam
loop
dec
and
jecxz
dec
ja
outsl
sti
sbb
out
jb
pop
xor
or
mov
mov
inc
lret
or
dec
inc
out
lret
mov
lods
mov
mov
dec
xchg
pop
push
adc
mov
xchg
fisubl
mov
add
mov
mov
xchg
rolb
cld
sub
push
iret
xchg
dec
adc
iret
pushl
inc
push
and
pop
jns
jecxz
cmp
xor
push
sbb
in
sub
cs
dec
add
pop
call
fnsave
int3
sbb
push
jmp
xlat
xchg
into
in
mov
jns
aad
into
or
push
enter
stos
cmp
jb
dec
mov
in
pop
lods
int
enter
hlt
xchg
std
lret
mov
fdivl
pop
in
test
pop
lret
fs
jbe
out
push
loope
cmp
pop
loop
mov
dec
lods
outsb
push
mov
call
jmp
repnz
fcmovnu
push
in
fs
or
sub
pusha
sub
scas
nop
icebp
cmp
inc
insl
or
sbb
sub
xlat
or
add
in
addr16
xchg
ljmp
lock
outsl
outsb
mov
les
fistpl
xchg
xchg
ja
sbb
ds
xor
adc
pop
lret
dec
inc
and
ret
out
jl
repz
jo
andb
int3
aad
inc
popf
lret
sub
or
fcmovnb
or
movsl
std
inc
daa
lret
insl
cwtl
jecxz
cld
pop
or
push
mov
inc
testl
pop
or
xlat
ret
test
fcompl
sub
rorb
push
xchg
sub
lock
mov
push
adc
movsb
cmp
sub
fwait
rcll
pop
int3
jne
bound
adc
mov
pop
jne
fdivrs
adc
clc
sbb
jge
mov
xchg
scas
and
out
pop
push
inc
cmc
loop
cmp
pop
push
arpl
movsl
pop
fwait
fs
jnp
ror
neg
cmp
neg
lock
in
xor
mov
nop
jle
into
xor
inc
xchg
popf
xchg
xchg
inc
pop
clc
pop
cmp
fildll
mov
inc
xor
mov
jl
and
mov
outsl
push
sub
addl
mov
push
inc
push
jbe
sub
subl
pop
test
clc
cmp
pop
jp
pop
mov
cwtl
cmp
mov
stos
mov
cld
cmp
fdivrl
inc
call
dec
pop
das
stos
test
iret
add
mov
repz
jnp
fs
sbb
and
repnz
mov
push
test
and
mov
cmp
cld
jle
sbb
hlt
and
dec
jo
push
clc
in
fbstp
aas
shlb
xlat
rcl
or
add
xchg
mov
sbb
aad
or
orl
stc
push
inc
inc
mov
sahf
stc
push
mov
ds
pusha
pop
out
ljmp
pop
jnp
pop
aas
push
fdivrs
dec
lahf
mov
adc
sbbb
and
or
pop
sbb
fdivr
movsb
cmp
pop
xchg
or
mov
cli
xchg
callw
sti
div
mov
pop
push
shll
inc
mov
test
jecxz
popf
mov
dec
movsb
cmc
dec
out
xor
jns
aam
inc
shlb
mov
mov
std
mov
push
pop
repnz
xchg
insl
and
in
aaa
in
cli
rclb
mov
sahf
lock
xor
ret
jle
subb
ljmp
xchg
mov
sub
push
mov
inc
xor
icebp
outsl
cmp
add
dec
lock
hlt
mov
xor
sbb
inc
andb
push
cs
push
xchg
fidivrs
jecxz
je
dec
lds
sar
xchg
pusha
lahf
inc
aam
jg
xchg
outsb
data16
fpatan
hlt
mov
jmp
mov
dec
in
adc
sti
stc
and
mov
bound
jae
mov
sbb
leave
bt
mov
idivb
mov
sub
ret
inc
cmpsb
ds
jae
iret
fiadds
mov
std
push
push
xor
jns,pn
mov
mov
insb
leave
js
clc
push
sbb
inc
aad
jns
movsl
and
es
mov
mov
popa
out
cmp
ja
call
lds
or
or
jecxz
aas
inc
pop
fistl
mov
imul
test
jbe
pop
cmp
cwtl
fstpt
test
mov
sti
popa
enter
ds
pop
stos
pop
jmp
mov
ffree
js
movsl
xor
rol
cmp
call
sbb
sub
repz
jo
lods
sub
push
pushf
mov
cmc
xor
sti
stos
sti
out
mov
mov
or
dec
mov
imul
sbb
cs
mov
jge
xchg
mov
push
je
push
and
mov
cmpsl
iretw
daa
adc
fmuls
jmp
stos
and
stc
lock
mov
nop
je
clc
cltd
fwait
or
out
jb
cmp
mov
inc
add
add
pop
xor
pop
repnz
push
dec
push
stc
data16
in
pop
and
mov
rcr
js
cmpsb
jmp
repz
sbb
sub
pop
cmp
add
mov
arpl
mov
mov
aad
aas
iret
fmuls
cwtl
mov
or
bound
icebp
push
pop
ss
je
addr16
in
cltd
repz
outsl
or
push
mov
int3
jp
push
enter
jno
push
call
enter
mov
or
push
and
xor
sbb
fiadds
or
adcb
daa
mov
cltd
adc
adcl
int
arpl
adc
outsb
cmp
mov
outsb
adc
test
out
mov
nop
push
mov
clc
ret
pop
repnz
sub
fmul
paddw
cmpsb
add
lahf
fists
push
xor
test
mov
out
push
insl
scas
cmp
loope
stc
test
fiadds
inc
pop
nop
out
std
fsubrp
aaa
push
or
in
fimuls
rolb
fdivs
test
sub
push
aaa
iret
jle,pt
leave
push
jg
pop
adc
sub
sahf
notl
int
outsb
push
scas
pop
int3
out
ljmp
push
or
call
pushf
cmp
jnp
mov
negl
xor
or
push
sub
xchg
lods
push
ret
push
xor
cltd
push
jmp
fisubrl
xor
popa
out
sbb
xchg
sti
jno
mov
nop
fnsave
xor
ret
cmp
shll
and
dec
adc
nop
rcr
inc
cld
test
jo
xor
mov
add
orl
xor
xchg
adc
sub
cld
das
push
sub
mov
int
add
lret
push
sar
push
dec
adc
jl
dec
cmpb
ja
stc
cmp
jle
test
lods
pop
cmpsl
fstpl
pop
mov
pop
call
pushf
pop
cli
popa
mov
inc
lds
add
sbb
subb
sbb
push
and
cmc
mov
imul
lock
add
add
add
jno
loopne
jmp
lea
je
das
inc
lea
lahf
sub
jl
mov
neg
ror
bsf
clc
mov
shl
stc
shr
mov
call
lahf
lahf
lea
call
inc
movb
pushf
not
pushf
pushl
pushf
call
xchg
add
xor
out
nop
mov
les
or
jae
pop
les
pushl
je,pt
enter
shrb
mov
insl
mov
rcl
movsb
mov
ja
fs
mov
jle
pop
sub
sbb
mov
das
imull
jb
jmp
in
cmp
cmp
inc
ljmp
sbb
lahf
dec
repz
subb
hlt
cwtl
sub
dec
mov
or
andl
lea
mov
cs
aas
cmp
push
pushf
or
pop
cmp
xlat
lcall
cmp
sub
sti
dec
inc
xchg
in
xchg
in
out
xlat
xchg
stc
into
mov
xor
cli
push
dec
mov
xor
mov
jae
add
iret
jo
and
ds
sbb
and
sub
and
dec
dec
pop
xlat
shr
xor
and
mov
cmc
jnp
push
xchg
push
mov
adc
push
adc
loopne
mov
in
xor
pushf
push
pushf
inc
clc
cmp
cld
cld
not
stc
movl
pushw
popfw
push
pushl
inc
pushf
call
movw
push
pushl
popl
mov
pushl
mov
pushl
ret
call
lea
je
pusha
bt
add
stc
cmp
pushf
pushl
lea
jb
clc
call
push
test
pusha
repnz
pusha
jmp
rcl
mov
xchg
test
clc
mov
movzbw
mov
cmp
bt
test
sub
call
cmc
neg
jmp
pushf
pushl
lea
jne
bswap
rcr
mov
cmp
clc
pusha
cmp
pusha
lea
jnp
ja
bswap
pop
push
mov
xchg
jmp
bts
mov
sar
rcr
cmc
add
bswap
mov
bswap
pushf
mov
pushf
mov
jmp
call
std
test
mov
and
push
lds
js
inc
jno
dec
scas
jge
xor
dec
jp
outsl
mov
push
fsubs
mov
aas
scas
sub
aam
sahf
dec
cmp
and
in
shrb
push
dec
and
xor
sbb
mov
pop
inc
hlt
push
hlt
loope
xor
push
call
loopne
je
mov
sbb
push
lea
mov
jp
fs
pop
sub
imul
mov
mov
or
enter
fldl
pushf
pushf
cmc
add
pusha
pushf
pushf
lea
jmp
clc
cmp
jmp
add
add
neg
push
neg
mov
bsr
ror
sar
sub
mov
cmc
bsr
push
jmp
add
add
push
add
adcb
cs
add
add
add
outsl
sbb
pushl
popl
pushf
pushl
ret
pushf
mov
pushf
not
mov
pushf
mov
mov
pushl
ret
in
in
mov
jae
or
arpl
or
or
outsb
loope
es
or
mov
or
loop
call
shlb
loope
or
cli
xor
adc
aaa
cmp
mov
cmp
hlt
inc
mov
pop
xchg
add
fdivs
dec
jg
rcll
lods
push
mov
sti
addr16
rcr
sub
pushf
mov
sbb
xchg
mov
add
movzbw
sar
inc
mov
lea
jge
adc
setge
add
push
or
rol
movl
not
inc
shr
rcl
mov
clc
call
movl
mov
pusha
mov
lea
jmp
not
test
shr
pushf
lea
je
pushf
adc
pusha
pushl
lea
jmp
rol
pusha
stc
pushf
not
jmp
jmp
dec
cli
pop
mov
in
loope
push
mov
aam
test
out
fcompl
or
xchg
cmpsb
sti
jns
mov
add
divl
mov
mov
add
in
inc
push
jnp
add
fucomi
mov
add
add
pop
dec
hlt
xor
push
rcr
sti
dec
sub
sti
sahf
adc
enter
inc
scas
xchg
scas
shrl
out
fsubl
and
stos
insb
cmpsb
mull
push
inc
mov
and
stc
in
dec
out
enter
xchg
inc
add
rcr
cmp
movl
adc
push
movzbw
mov
jmp
pusha
test
call
stc
mov
pushf
mov
test
shr
sar
bswap
mov
pusha
clc
or
jmp
add
test
movb
cmc
cmc
mov
cmp
add
bt
cmc
test
push
movb
pusha
pushf
lea
jne
pushf
mov
push
call
pushl
push
pushl
ret
mov
mov
lea
movzbw
pusha
movw
mov
movb
pushl
ret
push
movl
pushf
movb
pushl
popl
pusha
pusha
pushf
pushl
ret
push
lea
jne
push
jmp
lea
call
call
mov
cmp
repnz
push
lea
jne
bsr
movzbw
btc
mov
mov
add
sar
pusha
sub
shl
movzbw
shl
lea
lea
test
pusha
mov
cmp
sub
cmc
pushf
push
clc
pushl
popl
mov
bt
cmp
pushf
lea
ja
dec
ror
inc
bt
sub
shr
add
shl
rol
mov
rol
shl
mov
push
pushl
repnz
pushf
pushf
pusha
mov
lea
jne
not
cwtl
call
pop
inc
mov
xor
sub
mov
movsl
pop
stos
jmp
cltd
or
inc
scas
jge
sbb
outsl
into
mov
ss
lcall
pop
sub
and
clc
ja
mov
mov
sbb
adc
in
mov
shrl
xor
push
mov
decb
ret
mov
mov
push
push
sbb
mov
loopne
mov
imul
je
sbb
dec
xchg
pop
loopne
mov
roll
scas
test
xchg
jp
pop
inc
xor
cmp
mov
iret
mov
stc
aas
sbb
into
movsl
cmp
mov
sbb
sub
loope
and
cmp
inc
cli
mov
hlt
adc
loope
xchg
in
fadds
inc
and
cmp
negl
insl
ja
mov
in
push
int
mov
sub
in
cmp
adc
rclb
aas
push
fcomps
or
xor
aad
fstp
jo
icebp
dec
insl
xor
loope
mov
push
outsb
mov
xchg
out
xchg
xchg
mov
or
mov
cmpsb
adc
xchg
and
push
test
or
mov
sti
gs
inc
mov
xor
jae
dec
std
ss
popf
pop
test
mov
aad
inc
push
mov
push
in
jae
mov
icebp
scas
mov
dec
les
test
pushf
xlat
inc
push
pusha
fsubrp
xor
push
imul
mov
repnz
jecxz
add
addr16
adc
sbb
pushf
and
js
sub
mov
jle
bound
pusha
mov
movl
push
lea
jmp
mov
in
lds
out
jmp
xchg
test
mov
inc
rclb
adc
xchg
sbb
addl
cmp
idivl
testl
aas
push
xchg
push
jmp
shlb
push
dec
jle
pushf
pusha
movb
movl
pushf
call
sbb
mov
in
aad
shrl
push
fcom
pop
cmp
push
pop
dec
lahf
add
mov
mov
paddusw
jge
sub
xor
dec
outsl
mov
push
stos
mov
pop
or
or
mov
popa
test
and
int3
lahf
mov
fs
frstor
mov
data16
inc
pop
bound
push
lea
negl
sub
cmpsb
inc
jecxz
xchg
inc
pop
test
push
mov
xchg
jmp
mov
in
inc
sub
dec
shr
dec
pop
xor
jecxz
sbb
xchg
cmp
or
and
inc
mov
aas
dec
pop
arpl
test
rcl
pop
fiadds
mov
outsl
gs
xchg
cmp
push
jb
dec
inc
cld
lods
mov
xchg
pushf
mov
mov
mov
mov
pushf
jmp
lret
aaa
mov
in
add
push
push
lds
fcomi
add
lods
xchg
cmc
bound
and
or
test
push
test
enter
dec
frstor
enter
ror
adc
out
mov
stos
aaa
xchg
leave
mov
xchg
cmc
bound
add
and
xchg
flds
cmp
sti
jb
js
fdivl
addr16
in
mov
inc
push
sub
push
idiv
bound
popf
rcr
in
outsl
and
jbe
pusha
push
xchg
jns
sub
lahf
cmpl
mov
or
cmpsb
pop
es
shr
ljmp
in
cmp
imul
push
jae
sub
into
es
insb
popl
inc
mov
idiv
pop
sub
mov
jge
xchg
xchg
inc
loop
sarl
fistpl
mov
sub
ljmp
fcos
xor
lea
jne
call
xchg
call
sbb
loopne
pop
inc
sbb
gs
lods
cmp
xlat
pop
loopne
mov
fwait
pop
cmp
and
arpl
lahf
ja
jle
stos
jmp
dec
sub
shl
sub
sbb
mov
adc
sbb
test
or
mov
mov
stos
mov
pop
jmp
push
xchg
not
mov
pushf
setae
inc
mov
mov
push
push
pusha
lea
call
push
adc
movb
pusha
mov
pushf
lea
jae
call
cmp
push
not
test
mov
mov
add
test
bt
call
cmp
jmp
scas
xor
push
mov
push
arpl
test
pop
cmp
into
xor
and
mov
ja
testb
mov
imul
mov
fdivrs
jb
inc
adc
cmp
or
call
cmpsb
mov
ret
fmuls
adcl
lcall
mov
mov
bswap
mov
pusha
mov
push
pushf
lea
jmp
mov
in
lret
loop
lods
mov
adc
outsb
mov
test
push
repz
push
adc
jo
into
sub
das
push
cmpb
jns
cmp
repz
shlb
sbb
js
iret
inc
pop
and
jno
pop
lea
mov
sub
lret
jle
stos
insb
int
push
cs
and
scas
xor
iret
and
jns,pn
mov
jle
pop
inc
test
xchg
sahf
mov
cmp
imul
and
pop
loope
sbb
jae
sub
lods
jbe
xor
aaa
jge
fstl
sbb
jmp
repz
push
adc
dec
jnp
dec
in
mov
xchg
pop
fsubrp
xor
lods
pop
cmp
jne
jge
push
add
pusha
pop
mov
xchg
movsl
shll
pop
scas
insb
in
mov
call
hlt
aad
sbb
insl
sub
int3
push
add
enter
xor
popf
rdtsc
nop
push
movb
movl
call
push
pushf
lea
jmp
mov
cmp
clc
jmp
jmp
adc
lea
pushf
call
repnz
call
jmp
push
pusha
pushf
movl
pushf
mov
pushf
lea
jmp
add
pushf
pushf
pusha
pushf
lea
jmp
aad
jg
xor
mov
lods
sbb
xor
xchg
aam
xorps
and
add
stc
pop
je
dec
lret
mov
push
pusha
je
mov
adc
pop
and
insb
mov
mov
cld
xor
cs
es
inc
fldcw
inc
stc
xchg
push
movsl
jnp
fwait
shl
jecxz
inc
xor
mov
cltd
jmp
mov
roll
andl
call
xor
xor
mov
push
shl
pop
add
stc
mov
call
mov
push
lods
xor
test
iret
adcb
inc
dec
aam
psubsb
inc
aad
scas
ret
adc
dec
daa
add
adc
dec
loop
loop
cmp
xor
add
sub
stos
addr16
fwait
insl
mov
jbe
sub
int
rsm
pop
jns
mov
cmp
insb
cli
add
jns
sbb
cld
test
enter
inc
inc
jae
or
stos
xor
push
pusha
jecxz
out
jp
fbld
outsb
pop
xlat
jge
mov
cmp
jg
sub
add
dec
test
cmp
inc
les
lods
cmp
out
data16
mov
mov
arpl
test
inc
lods
xor
mov
mov
pop
xlat
adc
mov
xor
addr16
mov
xor
inc
sub
dec
mov
mov
bound
jne
inc
popf
inc
lds
nop
mov
sbb
sbb
ret
add
xchg
leave
int
cmp
inc
xlat
lods
fisubrs
jg
xor
das
fcmovnb
and
jae
xchg
adc
inc
xchg
mov
cli
fcoms
xchg
clc
dec
sbb
fdiv
dec
jp
pop
push
int3
jmp
jo
in
fiaddl
sub
fiaddl
add
sub
sti
and
rcll
sbb
enter
sub
fmuls
pop
cmp
or
repnz
loope
daa
aam
das
mov
sub
iret
sub
testb
push
lret
in
sbb
sub
outsl
out
mov
repz
inc
sbb
inc
stos
shr
sub
ror
repnz
cltd
fucomp
push
test
popf
mov
xchg
dec
in
fnstenv
cmp
mov
mov
cmp
hlt
jns
cmp
addr16
sub
and
mov
push
jle
cmpsb
add
cmp
add
outsl
xor
mov
scas
popf
add
add
xchg
lcall
arpl
mov
and
ja
shrb
mov
mov
mov
push
movb
lea
je
push
bt
clc
cmc
add
pusha
pushf
cmp
pushl
lea
jb
test
cmp
pushf
jmp
rcll
test
lret
out
cmc
es
jnp
jbe
cmpsl
mov
shr
or
jmp
and
scas
xchg
in
dec
or
cs
inc
movsl
repz
pop
mov
andl
mov
bsr
add
sub
and
neg
add
lea
setl
inc
bts
mov
clc
clc
shr
call
movw
pushl
lea
ja
pushf
push
pusha
jmp
lea
jle
movsbw
cwtl
lea
pushf
pusha
movl
call
jmp
lea
jb
call
test
call
shrl
gs
pop
loope
push
or
orl
lea
or
int
clc
das
and
push
mov
mov
mov
rorb
mov
pushf
pop
push
fbld
test
inc
lock
mov
mov
jo
xchg
in
imul
hlt
outsb
xchg
adc
xchg
repz
ljmp
xchg
jae
xchg
outsb
in
repz
push
jb
lock
xchg
push
repnz
jb
insl
hlt
out
lock
outsb
lock
out
xchg
outsb
lock
hlt
imul
adc
movsb
push
lock
std
std
mov
mov
dec
dec
rol
ret
and
pushf
mov
pop
mov
xor
cmpsl
lahf
pop
pop
jge
stc
in
clc
dec
dec
fsubs
aam
pop
movb
pop
test
adc
fs
jne
inc
jo
in
xchg
push
data16
mov
cli
adc
and
mov
adc
inc
sbb
sub
dec
lcall
cmp
add
jb
les
sarb
sub
jle
mov
dec
fs
push
mov
ss
and
cmpsb
inc
mov
xor
outsl
jo
inc
and
mov
mov
sti
jb
rorl
mov
in
in
mov
xchg
mov
cmp
xlat
push
insb
inc
mov
mov
xor
aas
sbb
add
xchg
jmp
subb
or
adc
fsubrs
cmp
sbb
xor
aas
sub
outsb
adc
jecxz
sbb
xchg
add
dec
insl
pop
call
lret
push
rorl
sub
imul
sbb
sbb
lcall
repz
sub
loop
pushf
mov
outsb
pop
ja
and
orl
mov
add
test
sub
push
in
jo
jns
lcall
popa
add
xor
addb
cmp
js
sub
sbb
mov
cmp
mov
popf
mov
enter
repz
data16
cmpsl
cmpsl
or
ljmp
add
jle
push
cmpsl
xor
xor
sub
xlat
cmc
insl
and
dec
aas
add
xchg
add
or
filds
inc
or
mov
push
mov
cmp
nop
mov
pop
and
cmp
mov
and
sbb
or
jle
push
loop
push
fucomp
sarb
ss
mov
bound
xchg
sbb
stc
cmp
not
push
pushf
bt
add
jmp
mov
in
push
mov
out
hlt
inc
and
mov
inc
dec
or
sbb
jecxz
lahf
xor
add
cmpsb
add
clc
cwtl
popf
imul
test
inc
fiadds
pushf
rorl
xchg
out
insb
je
dec
adc
icebp
popa
adc
pop
sub
shr
enter
cmp
cmpsb
xor
xchg
jge
push
push
stc
xchg
into
iret
xor
push
push
repz
sub
fwait
sub
sub
push
pop
sbb
shl
ret
mov
fimuls
pop
lods
int3
or
aaa
popa
rcrb
loop
inc
and
adc
dec
jns
cld
fninit
ds
lahf
fimull
pop
out
cmpsl
mov
outsl
lret
or
int
stc
jb
sbb
dec
das
fnstsw
xchg
xchg
leave
cmp
outsb
aam
push
jmp
bswap
inc
ror
mov
bt
cmp
cmc
clc
xor
cmc
repnz
push
lea
jne
inc
mov
movsbl
bts
bt
not
sub
not
movzbw
movzbw
mov
pusha
lea
jmp
adc
mov
sbb
stc
dec
add
jo
stc
test
scas
loopne
mov
mov
test
icebp
hlt
insl
mov
lahf
shrl
inc
push
insb
sbb
ja
sti
xor
pop
push
stos
lock
inc
jne
cmpsl
dec
mov
int
push
adc
dec
ljmp
lods
das
insl
mov
jns
out
add
clc
add
daa
push
jmp
shll
repz
mov
push
fidivrs
addr16
sub
mov
outsl
fisubrs
jo
ret
inc
or
or
xchg
push
mov
pushf
lea
jmp
cmc
rol
cmc
clc
clc
not
pusha
bt
stc
ror
movl
mov
cmp
pushf
lea
pushl
jmp
cmp
lea
jl
push
push
movb
lea
ja
test
or
rcr
sub
xor
cmp
ror
ror
add
and
shr
mov
and
mov
pusha
call
cs
xor
adc
xchg
movb
pop
ror
das
in
mov
jecxz
clc
pop
push
rcll
fstpl
sbb
in
jns,pn
mov
out
and
mov
inc
lds
pop
inc
out
add
xchg
cmpsl
and
xlat
push
sti
and
jg
xchg
xchg
fistl
xchg
or
nop
or
int
cmp
mov
jno
mov
push
cld
test
fimull
xor
ss
test
outsl
loope
lods
dec
push
fimuls
lods
jnp
and
ss
idivl
dec
arpl
mov
aaa
rclb
jb
scas
iret
xchg
test
imul
xor
sub
sbb
pusha
mov
xchg
inc
iret
ss
test
mov
not
jmp
jmp
jmp
in
push
mov
ja
adc
mov
adc
es
test
addr16
fdiv
and
popa
pop
shrl
shrb
sub
in
inc
mov
fnsave
inc
mov
hlt
push
test
mov
stos
mov
push
cmp
call
bswap
mov
pusha
call
aad
jo
xor
leave
jne
jb
inc
jns
mov
cmp
mov
les
clc
jno
dec
cmp
mov
movsl
dec
dec
popf
add
mov
shlb
movsb
mov
fs
insl
shrb
das
popa
daa
pop
arpl
stos
lods
lahf
mov
mov
xor
jae
cmpsb
sub
mov
adc
and
sub
cld
push
xchg
cmp
pop
mov
test
mov
pop
mov
icebp
sub
add
push
ds
inc
fnstenv
aam
or
dec
dec
out
hlt
jl
in
imul
push
pop
repnz
fldt
lcall
sub
xchg
mov
and
lods
dec
fmul
sbb
imul
repz
cli
pushl
cmpsb
scas
mov
and
inc
add
fisubrl
test
sbb
jns
mov
fs
ljmp
lea
push
aam
lret
push
mov
pop
add
mov
pop
jne
sbb
dec
int3
jo
shlb
mov
outsl
xor
sub
stc
test
inc
push
cmc
or
xchg
iret
or
cmp
fdivrs
push
mov
lds
out
cltd
add
dec
cwtl
mov
and
xchg
fildll
pushf
movb
movl
pusha
movb
pushl
lea
jmp
cmp
cmc
pusha
add
add
je
cmp
bt
movzwl
shrd
rcr
mov
not
mov
jmp
popf
cpuid
nop
call
mov
mov
cmp
jmp
scas
test
xor
mov
call
cmp
cltd
dec
pop
aaa
jge
ret
pop
out
xor
xor
sbb
mov
adc
setle
xchg
dec
pop
push
aaa
rol
xor
dec
sbb
push
xchg
sbb
dec
mov
lds
shrb
sti
jb
and
aam
pop
mov
or
jg
out
fstp
icebp
mov
inc
call
ret
out
incb
xchg
xor
idiv
and
pop
or
push
imul
push
push
daa
outsl
cli
push
lret
ds
int
mov
xchg
idivl
and
cld
sub
popf
movsb
les
test
cmc
and
lea
bound
xchg
nop
jge
jb
rcrl
lods
or
fwait
mov
cli
out
sub
lods
ret
insb
stos
push
mov
lds
mov
jmp
ja
jle
rol
test
sbb
in
pop
mov
into
lods
daa
add
call
rcl
push
or
loope
inc
jmp
int3
cmp
arpl
inc
insb
insb
outsl
arpl
push
jmp
dec
jmp
add
xchg
or
inc
or
jbe
jo
clc
ss
sbb
and
ja
and
cwtl
xchg
rcll
add
pop
loop
and
dec
dec
dec
cmp
adc
mov
idiv
jbe
arpl
lret
mov
jle
in
cld
add
push
jb
lods
pop
imul
sub
loopne
insb
jae
jge
jg
out
hlt
cmp
pop
das
pop
jg
fs
outsb
or
push
testl
inc
pop
lret
xchg
loope
xchg
or
in
adc
jb
xchg
imul
sbb
test
scas
fdivs
repz
popf
xor
and
pop
testb
and
jge
mov
add
aaa
mov
sti
jmp
dec
push
cwtl
inc
mov
jmp
cmp
push
jmp
inc
pop
clc
popf
xor
inc
insl
fwait
arpl
mov
lahf
icebp
rorb
lcall
movsb
aad
sbb
out
sub
insl
adc
mov
mov
addr16
mov
in
lcall
ljmp
hlt
or
or
and
in
xchg
testb
cltd
ja
ja
ds
adc
mov
mov
and
icebp
inc
fcompl
pop
push
lahf
xor
inc
sahf
mov
lods
pop
mov
cltd
movl
paddusb
test
sub
mov
leave
sarl
jae
mov
aas
aas
mov
and
not
call
cmp
jmp
add
sub
pusha
jmp
cmp
movb
push
jmp
setp
call
jmp
ja
xor
mov
xor
gs
mov
and
adc
gs
adc
adc
mov
pushf
cmpl
push
push
sub
add
sarb
xchg
mov
or
daa
inc
mov
dec
jno
mov
cmpsb
mov
sub
mov
sub
cmp
sar
pushf
sub
add
sar
mov
ror
call
lods
lock
push
jnp
push
in
add
push
push
rcr
movsl
dec
popf
dec
popf
push
je
cmp
or
cmpsb
sbb
sbb
push
sub
ja
xchg
mov
fsub
xchg
add
data16
xchg
add
ljmp
fstps
cmp
nop
rorl
mov
pop
ja
adc
testl
outsl
cwtl
roll
pop
aam
insb
inc
pusha
ret
push
xor
fdivr
out
push
cmc
rolb
out
lods
and
test
jo
push
shlb
shl
cli
sarb
jmp
outsb
scas
in
mov
dec
ret
xbegin
fists
cs
or
xchg
inc
mov
pop
xor
iret
lahf
adc
xchg
lret
aam
fwait
arpl
test
xchg
dec
or
mov
aad
ficoms
mov
pusha
inc
call
call
imul
gs
xor
cs
insb
add
fs
xor
pushf
jae
sbb
int3
jae
shlb
scas
jge
test
mov
mov
push
push
or
adc
fmul
inc
divl
pop
das
cli
test
pop
and
push
inc
insl
int
mov
cmp
add
pushf
lea
je
jmp
clc
mov
btr
pusha
not
mov
lea
clc
mov
jmp
movl
pushf
movl
movb
mov
movl
pusha
pushf
lea
jmp
call
scas
sbb
add
lret
cmp
fmull
xor
rcrb
sbb
push
imul
push
jecxz
ja
out
xchg
mov
mov
pushf
lahf
pop
or
lret
iret
not
iret
dec
xor
lods
stc
add
in
or
in
dec
dec
add
ljmp
pop
mov
in
pop
adc
xchg
and
aam
movsl
in
ja
cltd
rolb
cwtl
push
ljmp
add
or
xchg
sub
xchg
inc
test
sahf
stos
mov
mov
fwait
xor
add
xchg
xor
rolb
cs
jge
scas
cltd
xorb
dec
aad
shlb
push
pop
push
daa
insl
jecxz
xchg
popf
or
add
pop
js
idivl
adc
jns
inc
sbb
icebp
cmp
jle
pop
insl
jbe
mov
mov
das
test
test
cmp
fnstenv
loop
add
jmp
mov
fsubl
lods
mov
daa
xchg
xchg
aaa
outsl
mov
jle
stos
mov
mov
lea
je
and
add
not
add
lea
not
mov
cmp
jmp
sub
push
imul
xor
ljmp
adc
outsb
pop
adc
adc
pop
movsl
ja
cmp
xchg
xlat
rclb
addl
push
outsb
icebp
or
cmp
rolb
dec
jg
sub
mov
pop
xchg
or
and
neg
pusha
stc
bt
pushf
not
call
pushf
jmp
pushf
pusha
lea
call
pusha
mov
jmp
movl
push
pushf
movl
push
pusha
mov
pushl
lea
jmp
fadds
sahf
orb
mov
subl
mov
fisttpll
scas
test
fisttps
mov
or
pushf
push
mov
jbe
push
mov
js
jg
sbb
mov
int
or
adc
push
adc
mov
sbb
sbb
es
cmpsl
sbb
mov
and
test
out
repnz
in
mov
mov
cmpsb
loop
jecxz
lods
mov
ljmp
dec
sbb
mov
jp
aam
jecxz
mov
rorl
clc
std
add
mov
mov
or
add
sbb
icebp
jmp
sbb
mov
lods
mov
idiv
push
and
jmp
mov
sub
cmp
mov
daa
sbb
das
js
jecxz
jp
mov
lds
jmp
out
push
and
mov
lods
movsb
mov
mov
sbb
push
mov
test
mov
pop
mov
lds
or
xchg
jne
dec
mov
rol
mov
adc
outsb
adc
xchg
mov
stos
in
sbb
jmp
mov
adc
sbb
push
stos
push
int
mov
adc
test
adc
add
outsb
je
pop
pushf
mov
test
je
sbb
or
pushf
ss
scas
sbb
out
jg
dec
adc
cmpsb
testl
mov
in
scas
xchg
lock
jmp
outsl
dec
fistps
inc
int3
pushf
sub
or
mov
lock
call
xchg
or
sbb
lds
pop
inc
inc
push
push
shll
pushf
movsl
and
or
inc
outsb
lods
daa
jo
leave
mov
and
and
fdivr
stos
into
pushf
cltd
loopne
mov
sbb
fisubrs
es
push
push
inc
mov
loopne
mov
ljmp
or
jp
daa
into
aad
aad
outsb
into
stos
or
fs
je
daa
in
hlt
lcall
pop
in
and
ret
pop
jns
stos
outsb
mov
ret
and
cmp
cmc
outsb
bnd
mov
in
into
jecxz
xchg
mov
dec
jmp
mov
or
test
or
xchg
or
flds
pushf
adc
mov
mov
mov
leave
push
jmp
sbb
pushf
rorb
jno
std
shlb
pushf
push
adc
and
out
pushf
loop
loopne
adc
jns
cmpsb
push
mov
shlb
cmpsb
hlt
incb
into
push
jmp
aam
pop
int3
into
jmp
nop
inc
je
into
fdivr
je
repnz
scas
push
mov
repnz
scas
into
pushf
xchg
stos
lods
mov
shl
jo
testb
int
scas
mov
cli
negb
leave
ds
mov
pushf
leave
in
jb
adc
mov
sbb
xchg
jecxz
jbe
pushf
adc
cmc
xchg
jecxz
adc
or
adc
ja
mov
fisttpll
loop
jp
cmc
notl
outsb
dec
cltd
loop
nop
push
jbe
std
jno
negl
lret
outsb
into
dec
mov
into
cltd
push
or
mov
into
icebp
adc
shlb
fcomps
shrl
in
lods
in
and
loop
enter
pop
pop
pushf
pop
dec
and
or
test
pushf
pushf
test
adc
cmp
shl
jecxz
pop
pushf
outsb
ja
cwtl
jb
ja
jbe
mov
sbb
and
add
mov
pushf
daa
add
mov
and
push
fs
in
mov
push
and
ret
fnsave
or
in
clc
push
push
lret
mov
jbe
fstps
jecxz
lret
testl
lret
test
mov
test
out
stc
adc
clc
test
cmpps
outsb
adc
je
loopne
mov
push
inc
cwtl
stos
mov
in
rorb
aaa
and
pushf
sbb
adc
imul
lds
pushf
ljmp
pushf
cmpsb
shrl
mov
jbe
loop
pop
and
lods
jecxz
dec
in
and
shrl
push
mov
clc
enter
call
std
add
in
dec
mov
stos
je
adc
stos
pop
and
sbb
out
in
dec
or
in
sahf
outsl
lds
repnz
outsb
daa
sbb
je
loop
rorb
leave
mov
aaa
popf
jecxz
mov
js
fimull
sbb
mov
lahf
mov
jbe
sbb
sbb
push
jns
mov
sub
xor
es
ljmp
xlat
fistpll
dec
test
rcr
jb
push
mov
jns
into
test
es
sbb
jecxz
in
push
int
adc
mov
pushf
loopne
nopl
ljmp
mov
out
add
pushf
sbb
or
mov
ss
pavgb
insw
orl
lret
adc
mov
pop
fdivrs
cs
adc
or
xchg
sub
dec
mov
mov
jmp
cmpsb
ud2
les
insl
sahf
adc
sahf
bswap
sarl
fsts
cltd
mov
ljmp
cld
punpckhbw
clc
movq
sbb
push
dec
loop
repz
cltd
int
jge
jle
or
mov
shlb
sbb
sbb
lods
je
ljmp
cs
jp
ss
sbb
sbb
ucomiss
jne
push
mov
pushf
call
clac
push
push
imul
movswl
mov
or
dec
sbb
jecxz
sbb
adc
scas
cwtl
adc
cmc
sahf
iret
scas
pop
and
aam
nop
imul
ljmp
rcr
jb
cmp
into
adc
sub
dec
push
pushf
adc
mov
and
or
mov
cwtl
cwtl
sbb
popf
sub
sbb
jle
and
jbe
adc
cli
sbb
nop
in
shll
lahf
jbe
cli
push
or
and
fstpl
mulps
cwtl
add
dec
jmp
ljmp
push
setns
adc
lcall
adc
mov
cmp
pushf
jp
adc
sub
orl
inc
push
mov
cmp
into
mov
sbb
rorb
repnz
ss
or
jno
ret
jecxz
addr16
xchg
psubsw
xchg
push
cmp
jnp
mov
punpcklbw
into
paddq
sbb
jmp
mov
push
xor
idiv
pcmpeqw
shlb
in
prefetcht2
mov
xchg
dec
push
pushf
loop
out
lahf
cmp
aam
gs
adc
jbe
js
shlb
int3
cmc
icebp
cmp
shlb
mov
mov
adc
scas
mov
push
xchg
adc
mov
decl
pcmpeqw
cmp
mov
ss
andps
dec
lret
jp
push
xchg
mov
and
cmp
or
mov
mov
mov
cmp
or
dec
out
cmp
mov
push
lods
push
mov
loope
mov
bswap
or
push
and
xlat
push
jbe
test
jle
je
mov
not
sahf
ljmp
mov
jb
adc
xor
pop
das
mov
cltd
scas
push
mov
mov
mov
pop
leave
mov
mov
in
adc
mov
mov
mov
mov
mov
xchg
jno
in
add
test
popa
cmp
adc
fdivs
and
lock
adc
test
mov
or
cwtl
push
loopne
cli
pop
push
pop
dec
sbb
out
xlat
mov
inc
jno
clc
mov
cmpsb
fmul
les
sbb
lods
mov
jecxz
or
dec
jb
inc
call
sbb
out
pushf
and
shrl
in
icebp
das
cwtl
call
jecxz
cmp
fnstenv
jecxz
mov
pushf
in
sti
jbe
pop
jecxz
push
mov
int3
sti
push
dec
dec
mov
shll
sbb
es
popf
mov
push
and
jmp
mov
push
pushf
push
cmp
stc
mov
cmp
mov
dec
fdivs
push
out
xor
cs
iret
lds
jle
mov
push
or
add
mov
daa
mov
prefetchwt1
adc
xchg
es
mov
cmp
jg
sbb
nopl
cld
test
js
adc
gs
dec
push
xor
rol
or
or
call
jl
jle
mov
adc
pusha
jns
sub
mov
adc
mov
aad
mov
mov
xchg
mov
mov
adc
mov
xchg
push
imul
fidivs
mov
test
mov
pop
mov
aas
mov
imul
fisttps
mov
scas
lods
je
sub
in
push
add
icebp
pop
add
fidivl
xchg
leave
iret
cmp
stos
sti
popf
xor
pop
jo
mov
xchg
int3
inc
das
or
int
fdivs
div
fcmove
int
orb
aad
sahf
sub
mov
jg
xchg
cwtl
lcall
jae
inc
test
nop
xchg
js
mov
or
outsl
jge
pusha
jg
lret
lret
lcall
jp
jl
dec
cltd
push
adcb
sbb
shr
jo
xchg
lret
imul
fidivrl
and
int
mov
jp
je
lods
ret
fwait
out
push
xchg
mov
mov
enter
hlt
inc
out
jmp
cmp
je
jae
jb
rcll
xorb
ljmp
ss
xchg
mov
mov
fucomip
cltd
mov
cwtl
push
cltd
aam
inc
enter
gs
or
push
sbb
jg
dec
adc
outsb
adc
fsub
pop
push
sub
inc
jg
inc
xor
loope
fwait
ja
pop
ljmp
dec
les
je
push
mov
insb
xor
fiadds
je
mov
jle
jo
or
cmp
pop
inc
fcmove
jbe
je
adc
lret
mov
mov
adc
lods
adc
out
fwait
adc
lret
cltd
inc
or
jb
xchg
adc
fnstcw
imul
jp
dec
mov
fimuls
sbb
daa
mov
js
sahf
and
jb
out
jns
mov
mov
enter
mov
adc
dec
popf
xchg
push
in
mov
stc
in
xchg
cmp
addb
adc
push
cwtl
lea
pop
cmpsl
mov
lahf
loop
pop
jl
add
xor
fwait
mov
dec
push
imul
test
in
mov
std
inc
mov
test
or
sarb
push
lea
xchg
cmp
dec
push
xchg
or
or
outsl
sbb
into
push
out
mov
xchg
jg
adc
jp
shll
mov
mov
adc
push
lret
jecxz
cmpsb
push
imul
mov
movb
add
cmp
cltd
pop
xor
in
shrb
dec
ljmp
dec
mov
mov
ljmp
mov
cmpsb
out
or
dec
push
insl
jle
mov
xchg
ja
lret
lcall
push
add
fwait
scas
mov
mov
in
orl
loope
sarl
jmp
out
or
cwtl
add
fisubs
pop
xchg
adc
fldl2t
bswap
test
fcmove
xchg
or
int
fbld
cli
mov
pushf
cmp
add
cmpl
mov
mov
jb
xlat
and
jp
cmp
cmpsl
cltd
or
ficoml
sbb
cli
sbb
fmul
fdivrs
pop
xor
sbb
hlt
fld
bound
rclb
shrb
inc
mov
xchg
mov
or
int3
dec
jg
rorl
cmpsb
adc
scas
push
xchg
push
stos
dec
inc
mov
dec
cld
outsb
loopne
mov
rcll
dec
fsubrs
popf
rcll
mov
adc
mov
xchg
lods
pop
xchg
fwait
inc
in
xchg
mov
xor
bound
lret
add
out
push
pushf
fdivs
out
lahf
aam
xchg
mov
or
in
jmp
lods
stos
add
mov
iret
repz
inc
std
adc
sub
push
fidivl
lods
and
stos
sbb
nop
or
sahf
jne
enter
jle
or
lcall
jp
adc
xchg
fsubr
insl
rorb
jb
je
jle
scas
add
cld
sahf
fcom
push
xor
lea
fsubrs
test
enter
push
xor
mov
lret
fistl
lods
dec
int
mov
xchg
out
xchg
sarb
mov
xor
rorb
fcoms
repnz
repz
movsl
enter
imul
ds
adc
lcall
mov
cmp
incl
xchg
cmp
mov
fcmovbe
scas
xor
popf
stos
add
and
inc
mov
lods
push
nop
insl
jno
icebp
and
dec
enter
fdivs
movsb
pop
sahf
dec
or
mov
jge
push
jo
loop
ljmp
jne
jb
sbb
jg
sbb
mov
xlat
pop
clc
lcall
dec
xor
pop
shlb
addr16
test
cmpsb
aaa
arpl
mov
mov
jg
cwtl
dec
xchg
adc
push
dec
mov
lock
aaa
mov
data16
inc
out
outsb
fistpll
or
mov
sub
dec
sub
mov
bound
sub
mov
or
sbb
mov
lcall
lcall
mov
inc
pushl
insl
andb
jge
jno
es
xlat
fldcw
cwtl
cmpsb
lcall
into
in
xlat
stos
nop
lcall
xchg
ficoms
popf
dec
cmpsl
pop
aad
xchg
lret
xor
cwtl
popf
push
xchg
jb
ds
hlt
sahf
outsl
xor
notl
enter
and
out
inc
call
dec
jbe
pop
dec
dec
scas
push
push
adc
sbb
fdivrs
fisttps
lret
movb
inc
loope
adc
xchg
out
mov
nop
mov
or
icebp
lea
sbb
inc
in
outsl
rclb
leave
add
xchg
dec
or
mov
dec
fld
data16
daa
xor
push
imul
popf
pop
pop
insl
push
jns
fld
xchg
mov
lds
push
sar
sub
cmp
loop
cwtl
aaa
jb
xorb
pop
add
stos
scas
test
jo
push
jle
sbb
scas
add
fwait
ret
mov
stos
in
pop
aad
xchg
jg
xor
xor
xchg
pop
int
sub
rcr
cli
push
into
imul
jno
insb
jmp
sahf
xchg
mov
popf
mov
adc
mov
pop
xchg
sub
mov
mov
mulb
cltd
popa
xchg
xor
xchg
ret
jno
cli
ret
mov
jg
mov
out
or
es
out
xchg
push
dec
in
fmull
fnstenv
sbb
out
push
jns
mov
dec
in
pusha
mov
cld
mov
imul
nop
pop
jb
jns
imul
fcomp
test
bound
lds
or
dec
ret
mov
cmpl
lret
sbb
outsb
pop
test
xchg
imulb
lock
cli
fisubl
lods
adc
pop
mov
in
lcall
data16
ret
rorb
in
mov
add
pop
fwait
rcrb
inc
cltd
fisttpl
cmp
lcall
push
sub
push
fwait
mov
mov
mov
out
jp
pusha
enter
push
sub
das
push
lahf
int
dec
fimull
ret
mov
cli
popl
pusha
out
sbb
clc
inc
xchg
mov
add
arpl
sbb
or
scas
outsb
push
jp
mov
add
mov
jae
adc
arpl
fistps
movsl
jb
int
rcll
dec
aam
pop
ret
mov
sbb
addl
test
xchg
adc
jo
out
arpl
je
inc
push
inc
sbb
sbb
pushf
data16
call
mov
mov
xor
xchg
add
and
cmp
cmp
xchg
inc
adc
inc
popl
int
aad
fcoml
dec
mov
cmp
jne
subb
sahf
out
or
jbe
or
pop
sub
adc
adcl
push
dec
xchg
push
int3
aaa
test
and
imul
jl
fidivl
cmp
adc
lds
stos
jne
push
mov
and
push
lahf
sarb
jmp
fisttpll
push
cmpsb
inc
and
hlt
sbb
dec
enter
and
call
or
les
mov
mov
mov
mov
shll
sub
aad
out
cmpsb
pop
lret
imul
jns
lds
ja
test
mov
ret
outsl
mov
into
or
adc
mov
sbb
std
je
and
adc
xchg
test
mov
push
inc
into
cmp
nop
loopne
pop
xchg
aad
out
cwtl
ss
adc
mov
xor
cmp
mov
mov
fimull
add
push
xor
jbe
fldl
dec
icebp
cmpsl
loop
mov
mov
out
cs
xchg
imul
xchg
xchg
out
fwait
mov
adcb
ds
jecxz
dec
add
inc
call
adc
test
movsl
mov
dec
sub
cmpsl
xor
xchg
clc
out
lea
mov
imul
nop
pop
dec
aaa
pop
xchg
mov
pop
inc
xchg
xchg
push
lods
movd
add
pop
enter
int3
mov
xor
imul
lea
aad
xor
aad
jg
orl
or
mov
mov
fidivrs
into
aam
loop
in
jns
xor
loope
pop
cmp
mov
mov
jl
call
jg
adc
mov
inc
inc
sbb
cmpsb
mov
push
lcall
mov
aaa
rcr
adc
aas
jo
mov
rclb
adc
push
cmpsl
xchg
cvtdq2ps
js
outsl
aaa
push
mov
subb
xor
hlt
inc
dec
lcall
call
out
std
push
shr
nop
xor
sbb
pop
icebp
inc
in
divb
fiadds
push
mov
pop
dec
jge
sub
out
and
xchg
mov
jb
fmull
push
xchg
stos
rclb
xlat
mov
outsb
mov
repz
xchg
xchg
ret
inc
fists
mov
test
xchg
push
lods
xchg
inc
mov
mov
ret
lcall
arpl
cmpsl
mov
or
jb
and
mov
stos
mov
mov
aad
insb
jle
pop
xchg
adc
ret
adc
into
ret
fs
rorl
mov
xor
in
dec
sub
cmpsl
mov
push
ja
out
dec
adc
pop
mov
mov
loope
inc
cmp
xchg
cli
push
cmovb
inc
or
pop
push
cmp
imul
mov
les
lea
sub
dec
xchg
cmp
outsb
or
push
test
lea
add
dec
mov
adc
outsb
or
sti
and
push
sub
outsl
dec
inc
inc
fwait
sahf
jp
popa
lcall
xor
push
pop
lcall
xchg
push
xchg
xor
push
push
add
loope
jmp
mov
push
les
lahf
aaa
loope
push
mov
rcrl
mov
mov
test
lret
mov
lahf
or
pushf
jns
mov
sub
xchg
pop
stos
stos
push
or
pop
enter
fisubl
cmpsb
cmp
imul
sbb
push
pop
sbb
xchg
push
jecxz
sbb
fisttpll
dec
aaa
enter
xchg
adc
jle
mov
enter
dec
cmpsb
imul
arpl
dec
sbb
cmpsb
xchg
xchg
nop
js
sarb
sbb
bound
pop
shrb
iret
lods
xchg
fnsave
cs
inc
into
push
sbb
sbb
scas
pop
mov
push
xchg
push
adc
mov
mov
xchg
mov
orb
jo
sar
cs
fsubl
adc
cwtl
loop
pushf
mov
into
jnp
cld
lcall
push
leave
adcl
lcall
sti
push
sbb
stc
dec
imul
adc
lds
push
leavew
lcall
xchg
push
mov
test
test
xor
into
fistpll
movsl
test
lea
test
xchg
mov
or
xor
mov
int3
inc
jg
pop
mov
jge
xor
adc
mov
add
sbb
sahf
fsubl
jnp
xor
loope
fistpl
mov
jge
mov
mov
inc
pop
in
loope
pop
bound
mov
fimuls
pop
outsb
lcall
jns
jbe
jp
xor
jmp
cwtl
sahf
inc
mov
or
std
mov
stc
or
inc
xlat
cmp
sbb
fldl
ds
iret
pusha
shrd
xchg
mov
out
je
jmp
xchg
jae
fildll
cmpsb
inc
scas
ficompl
insl
xor
or
and
and
jle
jo
fidivl
sahf
sub
cwtl
enter
mov
cwtl
rcrb
mov
stc
fisubrl
addr16
mov
imul
or
aaa
movsl
pop
nop
fwait
mov
mov
sbb
mov
addr16
xor
mov
and
aad
lcall
insl
mov
xor
jl
push
scas
adc
mov
lret
jge
cltd
test
or
xchg
jbe
movsl
xchg
xchg
iret
mov
inc
scas
sbb
sbb
mov
and
xchg
fidivrl
or
push
lea
jb
movsl
fisubs
mov
dec
sahf
cmpsb
icebp
movsb
inc
add
mov
mov
sbbb
sbb
imul
jp
jne
test
cmp
jnp
out
adc
jbe
push
loope
enter
mov
repz
jno
in
or
popf
mov
adc
cmc
out
inc
aad
mov
jb
mov
mov
push
data16
pop
push
imul
bnd
sbb
adc
mov
cmc
push
ljmp
cmpsb
adc
fadds
imul
jno,pn
sbb
jge
insb
int3
fcom
jl,pn
cli
iret
bound
ja
adc
jne
les
mov
push
enter
rclb
out
xor
test
add
xor
jae
mov
imul
clc
fidivs
xchg
mov
jne
xchg
cmp
mov
xchg
mov
loop
mov
cwtl
into
xor
xchg
push
xchg
cmpsl
dec
outsl
dec
bswap
xchg
insb
mov
pop
mov
mov
jno
insb
or
mov
jge
sub
sub
mov
mov
push
cltd
inc
jp
jnp
add
jne
jmp
jns
in
xchg
add
jle
mov
xor
jmp
xor
jl
fildl
jg
movsb
jbe
fcoml
iret
mov
loop
in
jg
add
mov
cmovns
dec
inc
or
xor
adc
dec
inc
lea
jae
jnp
or
xor
daa
mov
xchg
outsb
cs
cmp
adc
test
shlb
push
push
push
jnp
or
bound
stc
leave
jb
mov
icebp
loopne
jne
jb
iret
sub
dec
mov
mov
mov
jl
aam
arpl
xchg
bound
mov
nop
xchg
cmovl
ret
mov
fcompl
adc
inc
daa
mov
out
xchg
jno
sarb
shll
outsb
jg
js
inc
xchg
dec
push
mov
mov
mov
dec
xor
lret
push
aad
inc
sahf
sahf
cmc
lds
pushf
jnp
mov
inc
mov
fistpll
icebp
xor
ds
mov
cmp
mov
or
mov
mov
inc
imul
push
arpl
outsb
cmpsl
sub
pushf
fildl
mov
mov
mov
sub
aaa
push
pop
shrl
call
pop
inc
mov
mov
adcb
adc
cmc
fsubl
mov
jno
cmp
call
dec
xchg
and
push
xchg
mov
xchg
xchg
mov
lcall
repnz
jmp
push
cwtl
popa
jne
aad
fisubrl
inc
mov
xor
xchg
xchg
fstl
cmp
scas
lret
mov
xor
scas
lahf
aam
js
sbb
mov
jo
iret
sub
scas
ja
cwtl
mov
dec
outsl
cltd
xor
or
or
push
lret
aaa
fimull
fidivrs
out
xchg
lock
and
ljmp
jo
pop
or
outsb
xchg
lds
xor
je
lret
jo
fiaddl
inc
cltd
dec
insb
stos
jle
or
and
lcall
jbe
xchg
lret
fiadds
push
cmp
cmpsb
and
shl
mov
fdivl
xor
cmp
xlat
cmpsb
lret
rcrb
ja
outsl
jp
test
lea
lret
xlat
in
je
mov
cmpb
leave
mov
outsl
imul
js
mov
xchg
mov
pop
lcall
js
sbb
addb
inc
ret
iret
inc
mov
movsb
mov
xor
sbb
add
out
mov
arpl
sub
aam
fsqrt
mov
fldcw
movsb
loop
loope
nop
xchg
and
push
dec
mov
mov
rorb
jecxz
pop
lds
cli
sbb
or
int
sub
adc
aam
fdivr
subl
mov
and
inc
test
test
scas
adc
rep
or
stos
jl
jle
jmp
loop
into
lcall
mov
les
aaa
sbb
inc
or
mov
mov
dec
mov
fstl
inc
jge
stc
sbb
pop
imul
xlat
jb
mov
xorl
pop
out
insb
push
mov
dec
stos
xchg
xchg
pushf
insb
or
pop
mov
pand
cmc
pop
aaa
sbb
fstpl
xchg
test
inc
lahf
mov
jp
jecxz
adc
sahf
outsl
shr
inc
mov
xchg
adc
sbbl
jns
xchg
cwtl
adc
push
popf
jle
dec
mov
scas
out
aad
sahf
adc
jns
shrl
insl
mov
mov
out
jecxz
mov
xchg
orb
sbb
pop
jg
or
mov
push
cmp
mov
mov
mov
mov
fnsave
adc
add
cwtl
inc
dec
inc
push
or
mov
or
xor
pop
out
movsb
cmp
cli
jo
push
sahf
insl
arpl
adc
aaa
in
or
or
lret
bound
mov
adc
int3
xor
fmull
xorb
xor
ds
scas
and
push
mov
insl
mov
test
jne
sahf
push
xchg
lret
xor
push
mov
pop
jbe
xchg
stc
mov
xchg
test
pop
out
push
and
insb
cwtl
sbbl
aad
push
shlb
inc
rcll
fsubs
add
jmp
add
push
xor
jno
icebp
in
ret
xor
jecxz
adc
inc
push
mov
jne
je
or
lret
arpl
mov
fwait
in
jg
icebp
mov
sbb
pop
cwtl
mov
cmp
out
jo
xchg
stc
je
lret
nop
loopne
dec
lret
xor
and
add
aaa
cli
scas
sbb
jo
test
leave
push
mov
insl
into
sub
jg
xchg
sti
pop
cwtl
mov
xorb
lcall
dec
in
outsb
push
movups
dec
nop
outsl
jno
mov
dec
jb
popf
and
or
je
fidivl
and
fwait
jns
pop
out
outsl
xor
cmp
dec
push
fwait
call
or
leave
push
xchg
in
pop
pop
xchg
out
jg
or
in
push
mov
fcomp
mov
inc
push
jmp
xchg
dec
jno
xchg
cwtl
jb
in
push
inc
bound
mov
dec
push
xchg
mov
xor
lcall
xchg
inc
int3
xchg
mov
adc
insl
movaps
jno
mov
jbe
daa
adc
and
cltd
les
loop
mov
fwait
mov
test
movsb
mov
adc
lret
aaa
pop
xchg
es
pminub
in
mov
pop
push
mov
cwtl
or
xor
movsl
cmpsl
insb
mov
fndisi(8087
addl
test
mov
and
add
sbb
mov
ret
or
mov
movsl
loop
std
shlb
xchg
cltd
cmp
add
jne
mov
pop
jbe
push
mov
nop
pop
mov
std
adc
xchg
dec
in
add
and
lret
mov
mov
lea
or
fwait
cld
push
xchg
and
insl
cmp
adc
xor
mov
add
aaa
lahf
shlb
lods
insb
std
nop
rcll
push
or
in
sub
sub
leave
popa
mov
push
mov
mov
ja
pop
mov
xchg
pop
xor
mov
jns
adc
je
lret
push
scas
fnstenv
insb
or
jnp
pop
outsl
ret
jns
mov
les
rcll
imul
or
imul
dec
js
jno
xchg
inc
cwtl
cli
fdivrs
shlb
push
clc
fimull
dec
sahf
or
leave
int
notb
lahf
rsm
mov
nop
or
mov
cmp
popa
repz
jae
push
lea
adc
test
push
call
outsb
mov
imul
sbb
adc
and
push
xchg
adc
into
imul
or
xchg
lea
push
xchg
jno
dec
mov
xchg
ret
cltd
iret
pop
push
mov
or
loope
sub
scas
sti
dec
dec
outsb
push
dec
cmp
inc
mov
mov
std
mov
leave
mov
adc
sbb
ss
push
inc
push
sbb
icebp
mov
xor
mov
fidivrs
shrl
imul
pop
jecxz
lret
and
lea
mov
lret
pushf
mov
jg
or
test
jmp
cltd
mov
jo
push
ja
mov
or
inc
ja
sbb
xchg
fcomps
xor
insl
pop
outsl
mov
mov
into
xchg
pop
jl
xorb
cmp
xor
dec
mov
iret
xor
add
sbb
sbb
int3
iret
xchg
sarl
into
or
or
scas
xchg
push
pop
sub
insl
fimuls
pushf
iret
in
popf
leave
lcall
pop
lcall
imul
mov
mov
mov
stc
inc
xchg
mov
mov
iret
imul
pop
xchg
lcall
dec
lcall
std
lcall
cltd
adc
fisubl
dec
xor
mov
adc
mov
push
xchg
std
bound
xor
test
cmc
iret
push
loopne
lcall
aad
jl
jb
push
jnp
xor
ljmp
lcall
lcall
jb
push
lea
jg
pop
das
push
inc
sbb
adc
fcomp
clc
outsl
lret
stc
xor
ljmp
mov
xor
imul
sarl
in
in
xchg
adc
aam
sahf
mov
lods
xchg
je
inc
rcll
jl
jno
sahf
pop
lret
push
push
mov
mov
xchg
jmp
ljmp
push
add
or
fidivrs
shll
mov
and
xchg
sub
inc
fcmovu
mov
ds
cmp
test
mov
popf
mov
xchg
aaa
lahf
adc
adc
jno
jo
jmp
xor
pop
loop
mov
mulb
inc
shr
shll
iret
fwait
dec
push
xor
pop
xchg
add
and
cmp
mov
mov
lret
lret
jge
push
jnp
sub
das
mov
hlt
lods
in
popf
push
mov
jle
xchg
xchg
mov
mov
or
ljmp
or
add
adc
mov
jne
int3
into
pop
push
fcoml
subl
push
xchg
insb
xchg
sahf
repz
adc
nop
jo
cltd
jbe
dec
scas
and
pop
fbld
pop
lidtl
cmpsl
mov
icebp
lods
lock
xchg
les
test
dec
les
mov
xor
adc
mov
mov
jno
lret
ljmp
jp
jg
sbb
mov
add
sbb
jge
sbb
jbe
sbb
cmpsb
jge
xchg
xchg
xor
pop
add
jbe
xor
jge
mov
in
xchg
adcb
pop
or
cmpsb
jns
xchg
insl
imul
imul
fbstp
popl
hlt
add
or
aaa
outsb
aaa
push
insb
cld
inc
sub
cmpsb
push
cld
mov
jae
test
out
cwtl
push
mov
adc
imul
lcall
xor
inc
mov
xlat
into
loopne
mov
mov
push
aas
or
mov
test
and
jle
xchg
popf
pushf
mov
pop
insl
lret
pop
or
inc
mov
inc
bound
mov
gs
xchg
sbb
mov
xorl
lds
bswap
or
inc
adc
cmpsl
pop
fwait
push
xchg
dec
mov
adc
movl
or
inc
dec
and
fidivrl
xchg
inc
aad
dec
jp
mov
jne
clc
and
xchg
aam
add
dec
jecxz
and
std
js
test
push
or
bound
sub
jp
aaa
test
lods
pop
jns
test
ret
ja,pt
mov
pop
aaa
jb
stc
cmp
aaa
xchg
rorl
add
push
int3
cmp
dec
push
jmp
iret
or
repnz
xchg
js
lahf
je
xchg
negl
cmp
xchg
sti
mov
cltd
push
push
push
pop
mov
ja
sub
xchg
mov
js
bound
cmp
prefetcht2
fstl
dec
xchg
loope
pop
lcall
ret
jb
je
enter
xchg
loop
mov
test
std
sbb
mov
xchg
movsb
fidivl
or
enter
fildll
popf
lcall
aad
xor
pusha
pusha
flds
imul
cmpsb
jne
add
push
lahf
and
adc
add
test
push
adc
push
mov
xchg
xor
call
mov
sub
push
js,pt
push
int3
cmpsb
into
data16
loopne
push
out
pop
add
jmp
insl
sbb
orl
mov
subb
mov
dec
xorl
andl
es
and
lret
mov
xchg
cmp
sbb
pop
adc
test
xchg
adc
aaa
jp
lret
dec
and
adc
lret
and
insl
sub
jle
dec
inc
pop
ficoml
js
xchg
add
inc
push
lcall
pop
out
mov
adcb
cmp
popf
add
xchg
inc
mov
rclb
sub
out
sbb
adc
ljmp
sbb
fmuls
in
sbb
jo
imul
push
fcomps
or
mov
addl
nop
jb
cmp
xorps
push
nop
inc
icebp
fsts
int
push
out
xchg
std
fcmovb
add
jmp
pop
sub
ret
imul
pop
jle
cmpsl
mov
mov
int3
mov
push
xchg
jmp
clc
add
xchg
push
xchg
inc
iret
scas
paddusb
pop
sub
pop
aas
jmp
pop
xor
aam
mov
or
mov
cmp
ja
xchg
dec
rorb
cmpsl
dec
enter
popf
adc
push
in
dec
iret
movsl
std
nop
lret
jecxz
loop
adc
insl
loope
cmp
int3
dec
je
or
bnd
xchg
es
xchg
popf
mov
jb
push
mov
or
fwait
push
mov
popf
scas
cmp
repz
addl
dec
pop
insb
inc
fdivl
add
sbb
adc
ja
lret
imul
loope
cltd
loop
push
sbb
in
sub
jl
loope
pop
push
insb
adc
adc
inc
decb
rclb
sarb
push
dec
sbb
sub
jmp
jno
sub
pop
lret
fxch
push
or
leave
test
mov
pop
inc
shrb
movsb
mov
mov
xchg
pop
xchg
je
xchg
pop
inc
in
dec
test
xchg
or
int
inc
sub
fidivl
cmp
je
adc
movsl
push
jns
pop
mov
insb
insl
mov
outsb
mov
fdivrl
xor
dec
mov
popa
and
test
adc
cvtpi2ps
js
xchg
push
lock
xchg
in
jecxz
push
mov
lds
fs
mov
xor
dec
mov
stos
out
fcmovbe
adc
xor
or
lret
outsb
in
and
mov
in
incb
ss
imul
cwtl
mov
cwtl
xor
ret
enter
adc
xlat
data16
dec
scas
xor
fadd
xchg
dec
or
out
cmp
push
jbe
mov
pop
mov
data16
lahf
mov
outsb
adc
mov
xchg
add
sub
loope
test
popf
pop
std
pop
dec
subb
in
sub
xor
jge
xchg
insb
mov
loope
pop
and
pop
push
or
fmull
int
add
cs
mov
sbb
ds
test
jns
mov
push
xchg
fwait
push
es
movsb
inc
dec
imul
mov
andb
mov
push
adc
adc
lret
fwait
sbb
adc
fwait
jo
rolb
es
push
lcall
mov
and
jno
aam
lods
add
pushf
jl
imul
jle
pushf
add
enter
push
lcall
mov
mov
test
test
scas
mov
dec
das
xchg
mov
rclb
loop
nop
mov
mov
jg
jno
mov
xchg
xchg
ret
call
js
outsl
and
sbb
xchg
sbb
outsb
or
xor
ja
xchg
mov
pop
sbb
jmp
ficoml
addr16
fiadds
mov
dec
sub
popf
or
push
mov
jo
or
lret
push
mov
loop
scas
xor
jl
push
and
or
rcl
push
add
xor
push
enter
or
jno
cmp
in
adc
jb
sbb
gs
arpl
gs
mov
movsl
mov
js
aad
mov
sub
cmp
push
movsb
adc
jge
sbb
jle
mov
cwtl
mov
lea
mov
lret
fwait
mov
shl
nop
pop
push
jne
mov
push
pop
arpl
xor
xchg
push
cltd
jp
or
pusha
cmp
xchg
or
xor
pusha
mov
xchg
inc
stos
inc
pop
add
iret
mov
ja
loop
imul
xchg
adc
jl
unpckhps
iret
mov
icebp
pushf
pop
mov
test
fistps
test
xorb
mov
lods
fwait
add
int3
shrd
adc
xchg
mov
add
inc
adc
pop
popf
push
stos
xor
jmp
icebp
in
push
jb
mov
fcomp
pop
xchg
mov
scas
xchg
je
and
test
push
mov
mov
int3
push
xchg
in
sub
or
pop
mov
js
dec
and
cmp
push
int
mov
stos
mov
ja
dec
enter
cwtl
gs
fstps
mov
roll
push
mov
cltd
xchg
loop
push
enter
xchg
ror
int3
cmp
test
mov
js
sbb
stc
popf
int
sbb
outsb
ret
outsb
scas
mov
jns
es
lods
outsl
es
int
loope
and
loop
je
fxam
enter
sub
fcmovne
insl
insb
cmp
lock
aaa
fbld
cltd
ja
loop
into
or
push
mov
repnz
lret
jmp
movsl
xor
loope
outsl
out
iret
xchg
add
cmp
sub
cli
cmp
push
xor
pop
jbe
and
out
int3
and
add
fsub
mov
fldcw
mov
xchg
mov
ss
dec
lcall
dec
aas
call
xchg
and
adc
and
and
adcl
xchg
lcall
jnp
scas
jno
push
les
xor
adc
lcall
sahf
js
jmp
dec
fmul
push
adc
fmuls
lret
dec
nop
mov
inc
xchg
jp
nop
xchg
xchg
fwait
or
cli
jge
push
adcb
mov
dec
pop
push
stos
jg
sub
fcomp
shrl
mov
jg
or
fnstenv
lahf
mov
adc
scas
jle
sbbl
xchg
pop
adc
xor
outsl
call
xchg
push
rdmsr
mov
rorl
inc
int3
repz
call
bound
mov
dec
sub
xchg
inc
adc
imul
cmc
push
xor
int3
mov
and
jnp
pusha
mov
ljmp
imull
hlt
sbb
xor
cltd
sbb
popf
fsubp
dec
pop
sbb
mov
lock
ret
push
dec
jno
in
pop
dec
repz
adc
iret
xchg
jb
xor
push
sub
lcall
lret
arpl
stos
and
inc
out
push
int3
dec
leave
pop
mov
dec
xchg
adc
shlb
lea
js
or
inc
cwtl
lret
xchg
adc
pop
sbb
ljmp
and
push
dec
xchg
lcall
sub
shld
jle
cmpsl
in
test
mov
push
ljmp
arpl
test
call
push
pop
pop
and
loopne
xchg
jp
dec
mov
mov
aas
xor
inc
pop
lret
bound
dec
test
mov
and
xchg
ret
and
inc
xor
mov
pop
ret
lods
inc
sahf
xchg
or
int3
pop
xchg
mov
aaa
loop
lret
ljmp
xor
xor
sti
mov
iret
jmp
inc
pop
jb
fsub
mov
mov
loop
ret
insl
mov
imul
pop
adc
fidivl
mov
jno
cmp
jb
mov
jne
jno
outsl
aam
mov
mov
gs
sub
xor
fdivrs
cmc
mov
sahf
pop
push
lcall
mov
enter
mov
jecxz
ljmp
lds
aad
cwtl
inc
cmpsl
cmc
cmpsb
add
leave
sub
aaa
xchg
movsl
push
dec
fwait
lret
ljmp
dec
outsb
test
cmc
add
inc
insb
ljmp
sub
push
jbe
scas
roll
int
mov
int3
push
mov
push
xchg
or
arpl
cltd
lcall
orl
lahf
xor
sub
nop
out
pop
jae,pn
lcall
iret
sbb
adc
jno
mov
mov
xor
cmp
js
cs
push
lods
push
push
mov
and
cwtl
int
cltd
xchg
and
jle
insl
xor
test
ljmp
mov
dec
cmp
push
mov
xchg
xor
popf
popa
and
xor
shrl
rclb
int
cli
nop
mov
sbb
js
loop
aaa
test
jg
xor
stos
test
or
popa
cmp
enter
pop
jbe
push
dec
and
nop
imul
imul
inc
and
int3
sub
in
int
dec
pop
ljmp
jmp
out
and
mov
adc
iret
mov
lcall
inc
push
lods
arpl
repnz
insb
sbb
dec
aaa
lret
enter
movsb
push
xchg
push
push
pop
xchg
xlat
push
push
aas
in
enter
push
lods
sbb
fstpt
mov
jp
adc
ret
mov
divb
mov
hlt
push
cmp
push
daa
push
sbb
dec
mov
add
aaa
xlat
push
jb
jns
xor
or
aaa
jns
sahf
not
nop
xor
mov
dec
pop
ror
push
xchg
jp
into
movl
push
je
xor
shrb
jle
aas
mov
push
dec
jo
adc
or
cmp
dec
inc
cltd
mov
dec
lahf
pop
mov
and
mov
sub
inc
pop
gs
inc
pop
dec
jns
stos
sbb
xchg
mov
nop
mov
or
insl
jge
pop
cmp
cs
pop
test
xor
in
push
bound
cli
dec
inc
push
push
rcrb
mov
scas
adc
nop
cltd
mov
fdiv
inc
xchg
jge
mov
pushf
popf
stos
repnz
dec
pushf
xor
jmp
outsl
and
mov
fistpl
sub
out
cmp
lahf
fucompp
cmp
xchg
cmp
mov
pop
cwtl
xchg
add
xchg
cmpsb
inc
lret
mov
adc
xor
xchg
or
adc
mov
or
pop
sub
scas
out
ret
mov
inc
adc
dec
inc
inc
mov
ljmp
mov
mov
xor
icebp
and
lret
loope
stos
dec
jnp
cmp
cmpsb
jo
xorl
jmp
and
xlat
subb
xor
adc
pop
scas
lods
xor
cltd
out
adc
mov
lds
add
jb
push
push
aam
imul
repnz
push
movsl
int3
adc
xchg
fwait
add
jns
xor
push
sub
or
aam
push
sbb
jo
cmp
push
insb
xchg
pop
mov
push
inc
and
cvtps2pi
pushf
inc
inc
jl
push
arpl
jge
mov
int3
inc
xchg
dec
mov
mov
xor
inc
xlat
inc
loope
clc
mov
dec
mov
ljmp
ljmp
icebp
outsl
cld
mov
pop
test
inc
cpuid
jbe
inc
mov
xor
std
test
insl
cld
pop
xchg
pop
fwait
mov
inc
subl
out
in
aaa
dec
ret
aam
push
or
stos
mov
pop
pop
in
dec
out
and
adc
cmp
jge
iret
aaa
jnp
cwtl
push
add
imul
lret
jbe
xor
iret
mov
cmpsb
flds
push
cmpsl
dec
pop
add
sahf
mov
sbb
xchg
jecxz
rorl
mov
dec
hlt
insl
popf
insb
int
in
popa
adc
pop
cmpb
popf
fmul
push
ret
pop
out
jg
enter
jmp
cld
sub
mov
jnp
out
add
cltd
cmp
icebp
and
adc
sahf
lret
scas
fwait
jl
mov
xor
dec
pop
int3
aaa
push
jg
mov
jmp
popf
sbb
fstps
flds
mov
xor
rolb
push
xchg
mov
and
popa
mov
imul
mov
mov
or
or
jae
out
push
mov
adc
lods
sbb
mov
mov
mov
cmpsl
sub
shlb
ja
mov
pushf
rol
in
jp
mov
daa
ret
ret
outsb
jno
dec
outsb
fisubrl
out
imul
dec
and
push
loop
imul
into
and
mov
int
xor
and
adcl
xchg
insl
decl
push
int3
jge
sub
mov
adc
pop
outsb
or
enter
pop
adc
les
push
lcall
jo
iret
dec
xchg
xlat
mov
push
mov
lret
xchg
xchg
xor
cwtl
and
lods
mov
or
stc
xor
in
cwtl
pop
int
xchg
fbstp
cmp
cmp
push
ret
pop
mov
pop
sbb
jo
jmp
negb
aam
roll
int3
outsl
add
ficompl
xchg
test
aam
pushf
dec
arpl
cmpb
loope
adc
sti
out
dec
xchg
mov
push
pop
push
in
inc
jb
or
xor
pop
pop
mov
and
sbb
mov
ljmp
rcrb
je
inc
pop
iret
int3
outsb
jbe
xchg
stos
sahf
lret
cmpsb
jbe
js
jle
outsb
push
int3
xchg
cltd
lret
dec
into
test
push
int3
ss
out
outsb
push
xchg
cltd
sarb
aaa
out
adc
pop
les
dec
aad
mov
fwait
or
clc
xchg
loopne
xor
sarb
clc
rcrl
mov
push
fadds
ja
fildl
or
popf
movswl
bsr
add
in
jb
mov
dec
lcall
dec
jnp
nop
scas
test
pop
mov
mov
lahf
sbb
rcrl
jmp
scas
and
rcll
movsl
inc
xchg
jno
jb
or
imul
fcmovu
pop
in
push
in
fsubrl
mov
xchg
idivl
pop
jge
cmp
jecxz
bound
lods
shrl
xchg
int3
fisubrl
sbb
pop
dec
leave
push
out
sti
sbb
jge
out
jno
add
rcr
xchg
mov
outsb
jmp
idiv
enter
subl
push
addl
fcompl
rol
mov
xor
mov
in
dec
je
imul
ficomps
enter
cltd
mov
jmp
rcll
lods
mov
in
cmp
aam
out
jb
sar
rcll
xchg
loope
movsb
lcall
inc
or
aaa
xchg
sub
xchg
xor
out
pushl
fsts
ljmp
mov
cltd
adc
xchg
popf
in
inc
out
and
dec
or
in
int
sub
fmuls
cwtl
fcoms
shrb
dec
lds
loope
mov
mov
negb
fisubs
push
in
lcall
dec
outsl
mov
test
pushf
mov
loopne
lds
shlb
cli
pop
mov
shlb
mov
fmulp
pop
ficoml
fistps
mov
mov
lcall
push
sbb
push
mov
outsb
les
daa
xchg
out
hlt
adc
aaa
cmp
mov
mov
dec
mov
in
js
loopne
and
push
rcrl
xchg
mov
xchg
sub
mov
insl
dec
das
shll
or
mov
imul
xor
and
sarl
mov
push
outsb
mov
stos
jge
mov
jmp
push
or
lret
push
mov
pop
stos
mov
inc
mov
mov
out
pop
dec
leave
push
cwtl
and
jg
iret
andl
outsb
mov
adc
pop
and
stos
or
jmp
push
shlb
mov
xchg
cmp
mov
sub
xor
mov
jp
rolb
xor
aad
imul
js
push
int3
std
arpl
jbe
pushf
aad
imul
push
sbbl
xchg
sub
bound
test
dec
pushf
aaa
jmp
ret
add
mov
mov
jmp
push
pop
dec
sbb
dec
les
jb
aad
cltd
inc
push
xchg
popf
imul
imul
scas
jg
outsl
dec
add
push
jo
xchg
ror
mov
out
jne
and
lcall
jns
add
jne
sahf
aad
mov
sbb
cwtl
or
mov
mov
xchg
mov
pop
pop
cmp
scas
push
cli
into
jmp
xor
dec
fsts
jge
push
adc
mov
xor
lcall
or
outsb
mov
adc
push
push
jns
inc
mov
xlat
rcll
jecxz
jnp
mov
push
enter
enter
inc
in
sub
push
jns
dec
fbstp
out
pop
pop
add
fdivrl
sub
jecxz
xchg
fwait
add
xchg
dec
pop
imulb
mov
and
inc
fimull
sarb
jns
insl
xchg
es
jae
push
sti
insl
mov
loope
out
xchg
lcall
add
dec
js
outsl
flds
push
fcmovu
cmp
inc
fstl
sbb
inc
in
addps
imul
mov
xchg
and
push
mov
fimull
or
adc
lahf
movsb
out
push
int3
lahf
xor
scas
ss
rolb
pop
sbbb
stos
dec
sub
addr16
mov
or
iret
or
sbb
mov
inc
push
adc
mov
or
mov
aas
aam
das
fsubs
fsubrp
int
cli
jecxz
mov
sub
int3
leave
int3
out
inc
out
hlt
xchg
insb
cmp
mov
imul
test
subb
dec
xchg
mov
dec
into
dec
pop
in
mov
nop
mov
enter
mov
xchg
bswap
xlat
inc
rorl
rolb
test
outsl
xor
jmp
fisubrs
push
gs
xor
sbb
outsl
mov
jg
push
lock
xor
in
pop
dec
les
cwtl
outsb
js
jns
xor
jbe
test
lea
inc
mov
int3
jecxz
xchg
lds
cwtl
mov
add
insl
dec
push
adc
es
into
sbb
sbb
jge
jg
pop
popf
xchg
xchg
andb
cmp
repnz
fcmovu
sbb
flds
outsl
jp
xor
or
adcb
push
enter
xor
divb
les
cmp
popf
jno
jno
or
leave
push
inc
sahf
nop
shr
scas
lods
mov
shl
aam
test
pop
popf
jmp
aad
enter
ror
xchg
aas
je
pop
pop
sub
sbb
ljmp
test
mov
mov
out
ljmp
inc
add
int
and
mov
test
push
jae
push
mov
adc
adcb
push
sbb
pop
lds
mov
jecxz
sahf
nop
jl
mov
jb
pusha
insl
xor
cmpsb
lods
inc
movsl
imul
sub
inc
xor
xor
jle
cli
mov
pop
pop
dec
aaa
out
adc
or
and
into
insb
andb
lea
popa
xor
call
aam
xchg
push
adc
sub
xor
jle
jle
popf
push
adcl
push
bound
repnz
fwait
xlat
xchg
test
push
mov
call
mov
cmc
rorl
adc
out
cmc
mov
fsubs
out
fnsave
in
enter
loopne
sahf
mov
mov
cld
test
rorl
sbb
dec
and
or
push
mulb
out
arpl
adcl
js
movsl
enter
xor
repnz
test
dec
imul
mov
and
sub
jmp
xchg
fsub
jmp
sbb
movmskps
adcl
mov
xchg
orl
xchg
xor
dec
and
dec
int3
push
mov
xlat
dec
pop
addr16
stc
or
addr16
inc
jae
jecxz
push
mov
push
push
int
xor
cltd
mov
cltd
aam
jnp
mov
loopnew
stc
xor
loopne
ljmp
mov
mov
arpl
outsb
mov
mov
jl
sbbl
xchg
enter
sbb
hlt
jae
jl
scas
aam
dec
sub
pop
xor
sbb
test
sbb
push
leave
test
mov
jb
push
lcall
xchg
test
sbb
int
rorl
mov
lock
scas
repnz
cmp
xchg
sub
and
push
jbe
hlt
aas
insb
adc
cmc
dec
insl
xchg
data16
adc
adc
or
insl
fdiv
mov
lods
inc
call
dec
aam
lret
repz
test
dec
fs
inc
pop
out
mov
aaa
je
fcoml
jbe
jno
jg
mov
add
xchg
mov
enter
or
outsb
xchg
pop
add
dec
std
aaa
xchg
or
lods
sub
or
inc
pop
pop
lcall
mov
lds
xchg
adc
sahf
mov
jnp
pop
es
mov
mov
jno
and
lret
jg
inc
popa
add
mov
adc
test
mov
mov
sub
lcall
xor
mov
idiv
fcoms
dec
stos
dec
pop
xchg
mov
pop
add
or
stos
scas
pop
push
sbb
cmpsl
inc
sub
stos
stos
lds
xchg
xor
jo
pop
or
jae
push
outsl
and
jg
mov
sahf
jb
jb
cmp
imul
adc
cmc
or
xchg
shll
and
in
sub
mov
pop
or
dec
repnz
push
dec
fwait
movsb
adc
adc
cmp
sahf
mov
mov
test
inc
outsb
insl
pop
scas
shrb
popf
aaa
scas
cmp
dec
push
push
faddl
stc
mov
lahf
pinsrw
xchg
inc
xor
icebp
ds
sbb
data16
stos
push
mov
push
add
int
push
ja
movsb
aam
jg
lcall
lds
sbb
or
cmpsb
rorb
rclb
outsb
iret
add
fdivrs
stc
andl
outsb
cmp
push
aaa
pop
hlt
call
nop
xor
xchg
jg
cwtl
stos
mov
dec
out
cmp
push
in
fisubrs
adc
jecxz
int3
xchg
jl
xchg
rol
push
mov
jb
sub
pusha
jns
mov
xchg
lahf
mov
fwait
dec
xchg
mov
jmp
and
stc
pusha
test
mov
cli
jnp
subl
pop
stc
or
rcrl
nop
negl
jo
mov
dec
clc
xor
cmp
jb
mov
add
sub
push
push
or
popl
xchg
or
or
mov
ja
add
or
je
insb
xor
mov
popf
mul
into
fstl
or
sub
jne
mov
fldl
mov
mov
xor
or
lret
iret
stc
push
xchg
inc
sahf
mov
adcl
mov
lret
addl
fs
popf
lahf
mov
jg
in
mov
orb
mov
or
jp
pop
je
mov
mov
adc
cwtl
or
ss
jnp
lahf
mov
fadds
xchg
mov
stos
xchg
test
rorb
lods
or
insl
xchg
stos
fisubs
push
push
insl
ret
jno
in
insl
mov
mov
test
sti
icebp
inc
arpl
repnz
push
xchg
aaa
sahf
stc
lea
imul
mov
mov
xor
cltd
xor
pop
xchg
sub
fildl
loope
aam
mov
jge
cwtl
ss
xor
push
cmp
mov
xchg
push
arpl
push
shlb
push
dec
outsl
push
add
or
icebp
popa
or
lret
mov
roll
int
lods
adc
push
stos
sbb
jge
xchg
or
xor
mov
mov
inc
inc
out
or
subl
lret
add
xor
xchg
aaa
loopne
das
lret
rcrb
loopne
lret
and
aaa
loopne
std
ja
pop
or
mov
push
sahf
sbb
subb
push
mov
mov
or
adc
inc
lods
popa
rclb
testb
sub
ss
cvtdq2ps
adc
pop
mov
mov
push
aad
icebp
sbb
cmp
add
outsb
mov
fldt
or
xor
fadds
jp
mov
imul
mov
sbb
dec
adc
add
or
mov
dec
lea
xor
xchg
mov
into
leave
test
inc
mov
push
cmp
mov
movsl
sub
mov
outsb
xchg
lods
xchg
jno
mov
insb
lret
inc
ljmp
roll
mov
out
leave
cwtl
repnz
cmpsl
pop
inc
add
jl
jmp
push
into
add
ret
out
les
push
sbb
mov
shl
lock
xchg
nop
mov
jp
lea
or
jg
sarb
or
iret
sub
or
xor
xchg
pop
xlat
lcall
xor
aad
test
adc
lods
lret
pop
jmp
into
mov
mov
cmc
mov
or
xor
pop
lret
loope
inc
xorb
fdiv
push
pop
lcall
mov
adc
pop
lahf
or
sarb
dec
mov
popf
lcall
pop
lea
inc
insl
xor
in
test
mov
stc
xchg
xchg
into
std
into
cwtl
insb
adc
mov
scas
mov
push
cmpsl
mov
sarl
std
sub
push
leave
mov
mov
lcall
add
fimull
xchg
xchg
add
sub
xchg
or
pop
jnp
lods
ljmp
inc
or
or
test
lahf
lret
adc
xor
sub
nop
push
mov
xchg
and
mov
mov
out
mov
or
fistpll
pop
and
and
js
mov
xor
jbe
enter
mov
jecxz
pop
popf
sbb
dec
out
lret
xchg
mov
clc
insb
or
or
or
xor
and
rclb
dec
aam
fiaddl
insl
pop
dec
data16
sahf
mov
adcl
jb
aam
dec
dec
lds
cwtl
xor
ljmp
stos
adc
jle
es
movsl
loope
fwait
test
test
push
sahf
cmpsb
cld
enter
or
xchg
mov
dec
and
enter
imul
data16
into
repz
shlb
push
xchg
push
dec
adc
cs
fcompl
xchg
add
pop
movsl
push
nop
xor
xorl
jp
sbb
xor
shll
mov
xchg
repz
filds
mov
mov
and
dec
mov
cmp
loope
out
or
std
pushf
fs
mov
loope
rolb
test
mov
xor
clc
add
mov
in
add
arpl
or
dec
inc
push
mov
inc
pop
stc
adc
aam
fdivl
xchg
fwait
lods
fwait
cld
xchg
aas
cmpsb
push
fs
and
push
mov
mov
mov
outsb
push
xchg
mov
cmp
daa
xchg
mov
aad
pop
aas
pop
or
mov
mov
loopne
sub
pop
enter
adc
sbb
xchg
xchg
cwtl
ret
mov
cmp
pushf
mov
ret
jo
mov
fldl
adc
movsl
lcall
mov
aaa
jb
push
into
adcb
mov
shr
sub
rclb
in
mov
mov
mov
aad
shr
or
adcl
adc
leave
inc
mov
push
dec
sbb
nop
aas
mov
dec
mov
push
xor
cmp
cmpsl
rorl
mov
push
mov
popa
xor
inc
jne
mov
aad
sbbb
xor
fimuls
sahf
bound
subb
sbb
icebp
enter
and
iret
cli
xchg
sti
sbb
inc
loop
mov
faddl
jmp
mov
imul
add
insb
jg
push
mov
orb
nop
movsb
mov
cltd
int
addl
mov
aaa
rcrl
push
mov
dec
xchg
pop
scas
int3
push
adc
fistpll
dec
aaa
mov
dec
aas
rcl
pop
dec
mov
imul
mov
push
sbb
aaa
adc
sbb
mov
push
dec
or
and
inc
mov
popa
aam
push
mov
leave
lods
inc
mov
dec
popf
dec
fidivl
rorl
lods
push
je
outsl
je
ljmp
fwait
push
dec
mov
lds
push
lcall
or
jae
xchg
xor
push
mov
dec
inc
jne
jle
add
sahf
lea
mov
into
lea
push
mov
sub
dec
dec
pop
push
xlat
test
rcrb
or
fsubl
sub
or
fwait
or
inc
mov
popa
das
cmpsl
push
nop
enter
jb
pop
jae
inc
daa
dec
push
ret
popf
inc
mov
inc
xlat
ss
jmp
insl
xchg
inc
xor
inc
sahf
add
pop
xlat
ss
inc
jnp
mov
jg
jo
mov
and
jne
mov
xchg
pushf
lret
cmp
mov
outsb
mov
insl
cmp
mov
and
cmp
fisttps
aam
scas
out
jo
loopne
lcall
xor
sub
int3
in
lds
sahf
into
inc
jb
out
lret
lcall
jmp
stc
and
fistpll
ficompl
jno
lds
lcall
push
aad
jno
lds
nop
mov
scas
jbe
mov
dec
or
adc
pop
stos
push
xchg
xor
xlat
mov
push
incb
stos
jno
add
push
push
mov
or
mov
ss
outsb
fnstenv
cmpsb
fsubs
testb
addr16
repz
xlat
pop
sbb
pop
ljmp
pushl
cmpsb
loop
in
out
cmp
sub
xchg
xchg
negb
xor
stos
push
fs
cmpsb
xor
mull
xchg
xchg
ret
iret
not
es
sbb
dec
aam
jo
dec
jg
out
sbb
in
and
sbb
dec
or
das
jecxz
lods
cwtl
stos
mov
xlat
arpl
jg
adc
fidivl
dec
xor
mov
push
xchg
and
xor
add
nop
out
push
dec
adcl
inc
adc
or
aam
data16
cmpsb
xlat
lea
sbb
jecxz
mov
sub
loop
add
dec
sbb
lret
inc
fimull
xchg
insb
lea
lret
push
mov
xor
dec
xor
out
je
and
out
movsl
popl
dec
lret
push
ficoml
ffreep
in
push
pop
iret
and
fmull
mov
cli
cld
mov
mov
roll
in
inc
xor
dec
addr16
jne
popf
jecxz
fs
mov
xor
cmp
jno
imul
rcl
insl
adc
push
fxch
mov
mov
lea
mov
aaa
cltd
xor
dec
popf
lahf
lcall
adc
popf
xchg
dec
push
xchg
mov
rcr
int3
and
or
push
nop
push
jno
adc
sbb
xchg
xchg
imul
inc
mov
xchg
and
dec
aaa
fwait
cmovo
push
lock
test
cwtl
pop
mov
add
dec
loop
into
pop
sti
movsl
push
popw
inc
xlat
jmp
mov
or
ret
mov
test
push
fsubrs
mov
lods
out
xchg
dec
pop
xor
imul
mov
loope
jl
jmp
dec
outsl
inc
mov
xor
pop
insl
jmp
mov
fdivl
fdivrl
push
lea
adc
jp
dec
inc
outsb
dec
loope
cmc
xor
cmp
adc
add
lret
into
xchg
add
push
or
int
xchg
into
push
int3
aaa
addr16
inc
cmp
lret
movsl
push
aaa
dec
das
sbbl
adc
sbb
insl
mov
testl
push
xor
mov
and
addl
sbb
dec
dec
xchg
jp
cmp
xor
inc
daa
js
xor
scas
rolb
pop
sahf
push
mov
js
outsb
or
mov
in
dec
adc
jo
xor
pop
xlat
enter
dec
call
lahf
xor
jg
xor
pop
popf
adc
pop
push
push
loope
jne
xorb
dec
pop
xor
cwtl
cs
sbb
sub
aaa
jo
int3
push
pop
mov
xorl
jg
adc
push
ja
shll
xor
lods
aaa
lock
pop
jb
xor
lds
or
mov
daa
or
xchg
and
push
mov
adc
xchg
cmpl
sbb
lods
pop
jns
leave
cmp
xor
sub
sbb
test
shll
add
movsl
mov
xchg
mov
les
ljmp
sub
mov
xor
fists
mov
aaa
jns
xchg
aaa
cwtl
repnz
stc
rsqrtps
lods
call
out
xlat
sub
ret
or
push
test
sub
pusha
xchg
testl
cmp
jl
pop
std
pop
aad
cs
lcall
cmp
gs
sahf
mov
ret
loope
mov
cmpsb
in
movq
cmpb
sarb
push
mov
push
testl
adc
mov
mov
adc
mov
mov
shl
and
clc
mov
push
xor
lcall
sahf
and
cltd
mov
push
lds
lret
iret
sub
jnp
aaa
fidivs
mov
lds
mov
mov
clc
clc
out
test
addb
push
jbe
mov
mov
loope
scas
push
enter
lods
movsl
lcall
mov
xor
dec
xor
push
inc
sbb
push
loopne
add
fmuls
stc
xor
orl
cmc
xchg
lds
jae
subl
jcxz
inc
mov
pop
mov
cli
jne
inc
inc
pop
mov
mov
stos
aas
sbb
sbb
fisubs
enter
test
adc
sahf
insb
mov
outsl
mov
lret
outsb
jne
out
adc
inc
pop
js
push
push
push
jo
xor
pop
imul
bound
movsl
pop
xchg
sbb
int
mov
and
sbb
rorb
addl
pop
lret
ficompl
test
xchg
lret
or
loopne
fstpl
jo
push
or
out
push
cli
sahf
rorl
rcpps
dec
lret
aad
cmp
out
mov
fstpt
or
pop
mov
fadds
out
cmp
xchg
add
and
dec
adc
nop
xchg
pop
cmpsb
test
pop
dec
push
imull
push
fucomip
jne
push
adc
or
cltd
daa
adc
push
shlb
aas
out
popa
subl
dec
test
mov
xchg
cmp
jne
push
ds
aas
dec
int3
loopne
int
repz
lahf
dec
sbb
adc
int3
or
into
les
mov
mov
js
cltd
xchg
sub
adc
adc
sub
xor
mov
add
in
imul
outsl
pop
movsb
jne
test
mov
repnz
jmp
jg
cli
adc
mov
push
jp
ret
push
rcl
or
movsl
mov
pop
aam
dec
fadds
cs
out
aad
pushf
cmp
mov
ret
pop
mov
jmp
test
mov
icebp
in
cmp
add
rcll
in
pop
ret
jecxz
dec
push
sub
rorl
rorb
ja
roll
nop
les
jae
pop
mov
aad
int
mov
xor
aam
inc
lret
mov
imul
scas
inc
cmp
mov
fldt
push
sahf
les
jl
scas
loop
insl
push
xor
fdivs
pushf
inc
loop
jecxz
cltd
add
add
jb
aaa
cmc
xchg
inc
mov
stos
out
push
or
repnz
sbb
push
push
xchg
lahf
mov
mov
shr
movsb
adcb
push
orl
sbb
xchg
mov
fistps
mov
sbb
add
loop
mov
les
jg
add
in
mov
or
push
mov
add
in
iret
add
push
adc
ja
fs
inc
pushf
enter
xor
adc
pop
or
xchg
sub
imul
or
and
xchg
pop
aaa
ret
shlb
push
mov
fwait
or
mov
xchg
cli
sub
mov
inc
mov
sub
adc
cltd
jo
mov
mov
and
mov
inc
js
js
ret
dec
mov
popf
leave
mov
les
push
shl
shr
test
mov
inc
incl
sbb
jecxz
pop
insb
mov
cwtl
sbb
mov
je
mov
dec
jne
mov
mov
add
mov
jle
and
pop
mov
movsb
and
xchg
arpl
fstpt
jecxz
xor
filds
pop
es
or
and
push
dec
adc
add
loopne
xchg
fnsave
jns
push
fdivl
xchg
mov
fisubl
cmp
popf
xchg
mov
call
rclb
lret
mov
out
insl
outsb
pop
xor
addr16
xor
bound
inc
aas
stos
and
sahf
int
xchg
sub
out
mov
xchg
cmp
psraw
cmpsl
insb
sahf
scas
test
xchg
mov
pushf
mov
mov
in
mov
icebp
inc
lahf
or
aad
mov
dec
xchg
xor
fwait
or
pop
jbe
or
insl
mov
pushf
out
xor
inc
in
out
inc
xchg
xchg
in
jbe
lods
jbe
push
enter
xchg
in
movaps
inc
out
mov
in
mov
subb
mov
or
add
push
push
js
inc
adc
push
push
ret
xchg
xchg
jle
into
loop
aam
sub
xchg
push
xchg
addb
sub
mov
popa
cwtl
cld
dec
mov
in
jne
sub
movsl
jbe
insb
mov
leave
sub
in
xchg
jno
outsb
jle
movsl
outsb
sbb
test
into
das
addr16
push
xchg
dec
outsb
add
cli
sbb
push
maxps
adc
sbb
cltd
int
pop
outsb
ss
int
pop
outsb
ds
int
pop
outsb
inc
in
adc
cmp
aad
imul
sbb
add
fcomps
call
sbb
pop
fwait
int3
jbe
adc
mov
outsb
sub
lcall
pop
mov
gs
jb
inc
push
enter
sbb
sbb
push
mov
clc
data16
iret
lret
scas
sub
xor
test
or
clc
out
jmp
mov
test
xlat
repz
mov
ljmp
xchg
mov
out
push
fwait
xchg
fisubrs
shrb
cmpsb
pop
in
cltd
int
pop
outsb
sahf
in
int
pop
outsb
xchg
in
int
pop
outsb
mov
outsb
es
outsb
hlt
xchg
scas
and
sbb
push
call
sahf
push
push
pusha
pop
test
and
mov
xlat
lahf
ds
mov
mov
or
bound
push
std
sbb
xchg
mov
xor
cmpsb
mov
cmc
fmul
pop
xchg
aam
mov
or
adc
or
jb
pushf
cwtl
cmp
enter
mov
call
sahf
fidivrl
call
outsb
test
jecxz
test
cmp
and
shrl
sub
das
fdiv
pop
shrl
mov
imul
mov
dec
lret
fisttpl
nop
inc
mov
cld
mov
adc
stos
mov
and
outsb
pop
push
xlat
adc
outsl
jb
in
mov
xchg
lods
dec
adc
inc
lahf
mov
xchg
daa
arpl
fwait
outsl
shrb
cmpb
je
pop
sub
nop
call
loopne
insb
push
int
jl
xchg
fidivl
repnz
cmpsl
lods
jle
jp
int3
xlat
mov
and
add
mov
inc
stos
jecxz
xor
jae
repnz
jmp
xor
xor
pop
inc
int3
mov
xchg
push
dec
add
mov
sub
and
push
sub
pop
inc
push
push
dec
mov
fldenv
pop
mov
mov
lcall
push
mov
pinsrw
iret
not
imul
jg
push
jae
sar
push
sub
mov
add
and
sar
mov
cld
push
mov
fcom
test
loop
ss
xlat
cmp
into
mov
pop
mov
insl
inc
and
ret
mov
adc
xchg
mov
mov
in
into
insl
adc
movsb
lods
lret
out
cmp
mov
mov
out
scas
mov
js
aam
lret
mov
int
pop
xchg
mov
dec
push
inc
push
cmpsl
or
cmc
mov
and
leave
scas
push
sahf
lods
adc
jbe
dec
jae
popa
in
loopne
dec
sahf
or
add
aaa
addb
adc
lahf
add
push
in
lods
and
xor
xchg
push
outsb
dec
push
fs
pop
aad
xor
hlt
dec
lods
mov
mov
sbb
mov
xchg
xchg
and
cwtl
or
cmpsb
add
xchg
popf
inc
shlb
notb
inc
dec
xchg
aad
outsl
dec
or
fsts
push
ret
add
or
pushf
push
cwtl
js
jl
fimull
fdivp
jl
cwtl
int
movsl
movups
fsubl
pop
in
das
int
sbb
pop
insl
aam
in
inc
sub
data16
cmp
push
sbb
jge
stc
lds
xchg
xor
mov
xor
and
jae
clc
sub
sbb
out
xchg
fwait
jg
das
lahf
adc
dec
jae
mov
imul
mov
push
pop
subb
jle
xor
xor
mov
xchg
xor
inc
sub
add
out
mov
xchg
movsl
mov
xchg
sahf
lret
adc
sub
sbb
lcall
bound
jecxz
andb
fmuls
push
bound
pop
xor
pop
pushf
jp
mov
jnp
fnstenv
sahf
xchg
jns
cmpsb
adc
mov
jne
je
outsl
xor
add
rcrb
mov
push
push
mov
cld
push
aad
fisttpll
sub
in
outsb
sahf
xchg
ljmp
icebp
dec
ret
out
imul
outsb
jp
pop
insb
les
ds
bound
jb
cmpb
lcall
aaa
fwait
bswap
pop
mov
mov
jmp
or
mov
lcall
cmp
mov
sti
pushf
loopne
push
and
stos
and
xor
push
rep
scas
push
imulb
inc
mov
adc
pop
push
mov
lds
ret
jb
bound
lds
fdivs
or
add
out
cmp
pop
arpl
or
stos
insb
mull
pop
fwait
mov
xchg
xor
jp
push
push
adc
call
xchg
dec
mov
add
mov
ja
xchg
xchg
add
lret
andb
mov
dec
aam
out
xchg
inc
and
int3
adc
notl
daa
aas
xchg
lret
lahf
xor
push
mov
mov
adc
mov
mov
insl
sbbl
pop
xor
inc
popf
dec
fsubs
mov
fdivl
pop
mov
in
outsb
xor
jg
mov
je
dec
or
cmc
jl
lods
shl
dec
loope
lahf
xor
sbb
xlat
push
bnd
sbb
pushf
add
ret
jb
or
add
jno
icebp
dec
and
xchg
push
or
xchg
mov
inc
sub
arpl
jno
nop
movsb
sub
fmuls
jmp
push
enter
lods
ja
ficoml
lea
pop
xchg
aaa
fcompl
sti
pop
mov
pop
adc
roll
inc
dec
cmp
rcrl
push
mov
rolb
xor
sbb
rcll
xchg
dec
pop
jg
mov
adc
stos
outsb
fsubrl
je
leave
cmp
dec
jl
dec
inc
movsl
mov
jg
ljmp
xchg
pushf
mov
jo
push
mov
adc
xor
mov
add
inc
xchg
mov
mov
sub
mov
in
xchg
push
fisttps
out
or
pop
jg
loopne
sub
pop
and
and
shl
pop
sahf
das
mov
jb
imull
inc
insl
mov
adc
sub
in
loope
lret
mov
or
or
mov
mov
add
inc
or
xor
pop
imul
sbb
adc
lods
hlt
adcl
leave
mov
shrl
aam
xchg
and
dec
stc
outsb
inc
aaa
pop
pop
jno
ds
sub
pushf
in
pop
push
loope
repz
xchg
push
stos
adc
adc
lahf
sbb
insl
or
lds
xchg
nop
xlat
jecxz
jl
aaa
xchg
mov
into
sbb
xor
xor
sbb
push
push
imul
js
xchg
inc
mov
dec
mov
jp
jle
mov
leave
fs
lahf
jmp
lods
bound
xchg
data16
popa
jge
pop
push
mov
push
dec
sub
cli
leave
add
jg
out
ficoml
sbbl
pusha
loop
jne
jno
iret
xchg
xchg
test
rcrl
and
cmp
and
clc
cmpsb
jle
xchg
cld
out
sahf
add
shll
int3
mov
popf
cmp
ja
dec
test
mov
pop
enter
inc
mov
ja
jmp
mov
xchg
sahf
movsb
test
pop
pop
pop
ret
mov
add
xchg
jge
bound
dec
jg
mov
jle
jle
push
xorl
icebp
push
jecxz
call
stos
lcall
inc
jns
scas
lds
adc
dec
in
or
stc
jl
cltd
adc
es
pop
pop
and
adc
adc
popf
data16
cmp
lret
paddq
xchg
scas
les
pop
push
xchg
mov
fnstcw
or
scas
scas
adc
push
lds
inc
xchg
bound
jp
pop
mov
cmc
loopne
lret
mov
mov
inc
inc
cmp
dec
xor
pop
dec
inc
add
cld
mov
push
mov
cmp
inc
insb
ret
iret
scas
mov
dec
xor
leave
psrld
std
adc
add
int3
inc
sbb
fwait
adc
imul
cmp
or
lahf
mov
mov
imul
rcll
aaa
push
sbb
scas
and
into
stos
add
insb
jp
adc
iret
push
push
jp
push
push
in
xchg
xchg
adc
push
mov
lods
scas
and
xchg
xor
imul
test
xchg
push
sbb
movsb
arpl
mov
xor
push
pop
mov
fildl
sub
cwtl
roll
imul
jmp
pop
test
in
xor
lahf
jne
popa
xchg
ret
xlat
mov
inc
mov
loop
ret
add
mov
andb
mov
adc
mov
push
sbb
insb
stos
imul
adc
cs
and
or
shll
xor
loope
and
ljmp
mov
jns
jp
cmp
imul
cmpsb
inc
movsb
lcall
jmp
xlat
je
aam
mov
mov
sbb
cmpsb
push
paddd
outsb
enter
test
push
std
pusha
je
into
jbe
sti
pop
out
lods
inc
mov
dec
into
xor
pusha
pop
pop
sub
iret
enter
push
je
mov
pop
sbbb
push
jno
std
aam
xlat
push
mov
jg
imul
loop
pop
outsl
pmaxub
in
dec
pop
mov
inc
test
push
mov
loope
into
inc
push
int
cwtl
xchg
push
fldcw
sbb
into
ret
call
cmc
mov
data16
adc
jae
jle
adc
and
jecxz
fbld
cmpsb
fbld
cmp
int3
jecxz
push
imul
aam
sbb
xchg
dec
vpcmov
pop
sub
xchg
add
mov
mov
xchg
lea
push
mov
cwtl
jmp
pop
push
fsub
fwait
push
mov
pop
movsl
mov
aaa
xchg
sti
ret
push
push
inc
jnp
idiv
repz
sub
mov
outsl
outsb
push
inc
xchg
aam
inc
in
dec
sahf
mov
xchg
xchg
xor
xchg
or
loope
ss
pop
repz
aaa
dec
jecxz
inc
or
jns
xchg
repz
sbb
scas
popf
xor
je
pop
in
sub
jae
jmp
int
xlat
lcall
ds
in
data16
cmp
aam
inc
enter
mov
mov
outsl
aad
sbb
shlb
lahf
faddl
xor
xchg
push
pop
jnp
addb
negb
lods
mov
mov
divl
push
sarl
xchg
nop
ja
inc
cmp
cwtl
and
pop
rorb
outsl
adc
lds
pushf
pop
outsb
jno
pushf
insb
cmpb
out
into
xchg
inc
cmpsl
fwait
mov
inc
imul
jle
fdivs
shlb
or
and
es
inc
pop
push
outsb
rclb
xchg
jae
add
leave
inc
adc
adc
rorb
sbb
and
and
inc
or
sbb
in
jl
cmp
inc
jb
icebp
jo
jno
xchg
jmp
cltd
testl
dec
xor
xorl
fsubp
lea
cltd
lahf
movsb
lret
xchg
negb
jae
clc
arpl
iret
xchg
inc
shll
test
bound
lock
lcall
xor
dec
adcl
jecxz
push
push
xor
cmpsb
mov
jnp
pop
adc
push
fwait
out
lret
inc
sbb
xchg
scas
push
add
add
lret
mov
xchg
lahf
fbstp
cmp
cmp
popf
cs
add
lret
xor
push
fistps
lock
inc
push
dec
jnp
or
out
hlt
push
pusha
dec
inc
xor
xchg
in
push
sbb
cld
adc
inc
mov
jp
push
mov
jb
or
fwait
dec
setbe
test
or
mov
inc
mov
or
or
xor
shr
nop
push
jnp
flds
aam
cmp
cmp
xor
adc
jne
bsf
fimull
lock
add
enter
shlb
push
aas
jne
xchg
in
lret
dec
fnsetpm(287
test
aaa
mov
mov
sbb
aas
mov
inc
cmp
repz
test
outsb
mov
xorb
adc
mov
push
adc
and
std
xor
aad
push
xchg
into
sub
adc
dec
leave
inc
jnp
add
es
sub
int
and
lret
adc
add
scas
add
call
fdivrs
fwait
pavgb
adc
fsub
out
mov
fwait
shrl
ror
xchg
into
sahf
cmpsb
sbb
lea
xchg
lcall
sub
mov
filds
fstpl
adc
dec
mov
loop
and
cmp
pop
dec
cwtl
dec
out
jns
dec
in
cli
js
div
cli
jmp
mov
lea
lea
enter
rcl
ja
mov
add
sbb
out
jp
add
cltd
jno
dec
pop
pop
pushf
mov
jo
dec
mov
aaa
gs
test
pop
jecxz
pop
ja
or
adc
xor
mov
adc
adc
mov
sti
pusha
fstpt
or
cltd
push
mov
jae
mov
adc
xor
push
mov
stos
cld
jae
rorb
lods
add
insb
dec
fsts
mov
loop
xchg
mov
inc
add
adc
and
cs
sbb
lret
pop
sbb
mov
in
sbb
pop
jecxz
sub
xchg
xor
into
cltd
cmpsb
add
push
mov
ror
xchg
mov
pop
pushf
pop
mov
and
into
loopne
pop
test
xchg
cmpsl
xor
ljmp
lret
push
outsb
rorb
or
jae
fcmovbe
dec
jle
jmp
mov
xchg
cmpsl
stos
test
flds
sbb
scas
lret
pop
and
mov
pop
or
enter
inc
into
xchg
fsubrs
loopne
insb
cs
adc
or
sub
pavgw
cmp
std
lea
adc
fimull
aam
jl
xlat
fiaddl
xor
sub
sahf
adcb
mov
jno
push
lret
dec
pusha
in
mov
jns
fisubrs
inc
add
and
or
in
adc
cmpsl
pop
clc
imul
pushf
push
mov
xchg
aad
fnop
addr16
sub
arpl
repz
imul
jns
fcmovu
shr
pop
inc
rcrl
push
sbb
fcom
xor
lock
dec
cmp
adcb
push
loopne
jno
mov
imul
xchg
loope
pop
lcall
lret
jp
adc
jecxz
jl
iret
jecxz
push
mov
jg
popa
outsb
cmove
jno
pop
mov
imul
xor
jge
nop
stc
mov
push
mov
ficoml
icebp
push
pop
and
cmp
adc
test
loope
and
xor
pop
xchg
jno
lahf
outsb
adc
fwait
jle
cmpsb
adc
add
xor
xlat
mov
cmc
bound
aas
push
push
cwtl
mov
mov
aaa
mov
push
out
mov
sub
cmpsb
repnz
int
lret
mov
mov
in
sbb
mov
cwtl
xchg
leave
or
xchg
push
ljmp
addr16
lcall
lahf
repz
pop
fsubs
xchg
sbb
jbe
fildll
pop
insb
mov
enter
push
in
sbb
mov
xchg
sahf
or
add
jge
mov
jb
mov
scas
into
into
js
movsl
lcall
sub
arpl
jnp
out
outsl
lret
stos
or
xchg
clc
insb
lcall
sub
retw
test
push
loopne
push
adc
sbb
or
enter
push
repnz
inc
in
push
int3
xchg
dec
mov
std
xchg
fists
xchg
dec
lret
js
jbe
jb
rorb
push
cwtl
dec
arpl
lds
mov
xchg
and
sbb
mov
loop
ja
sub
xchg
mov
sbb
loop
dec
xorb
jb
jge
and
mov
jno
mov
push
pop
lods
inc
insl
inc
loopne
aad
fmuls
lret
push
dec
cltd
fnstenv
test
jecxz
rcl
push
pushf
imul
rorl
mov
imul
xchg
in
mov
xor
rclb
test
dec
jp
sub
loope
jns
aaa
sbb
lret
fwait
or
andb
nop
fmul
cmpsb
cltd
cwtl
popf
out
ret
pop
in
adc
ja
push
stos
vcvttps2dq
inc
shll
fildl
inc
push
jg
pop
rcrl
cltd
call
shll
adc
push
dec
push
sub
jg
pushf
lods
clc
adc
ret
icebp
std
test
cmpb
or
js
enter
push
jmp
xor
pop
enter
xchg
mov
jb
mov
adc
xchg
fwait
adc
in
xchg
mov
ds
jmp
ficompl
xchg
call
imul
push
loop
mov
out
icebp
inc
subl
les
fnstcw
enter
add
lea
ret
push
push
test
sub
cmp
std
loopne
and
rcr
imul
pop
fildl
mov
mov
mov
fisttps
incb
push
jae
jne
clc
ljmp
enter
jmp
lahf
push
sub
es
movsl
fisubl
cmpsb
insb
push
inc
sbb
fisttps
xchg
int3
jae
dec
fidivl
clc
arpl
inc
mov
xchg
lea
mov
push
and
fstps
xor
sar
jbe
ret
push
stos
or
out
nop
sbb
jae
cwtl
cltd
ret
dec
jne
ret
stos
or
xchg
pop
cld
pop
mov
pop
add
push
mov
mov
clc
jle
cld
imul
sti
mov
fsubs
cmp
pop
adc
mov
sub
int3
fcmove
mov
and
sbbl
dec
cwtl
in
xor
shrl
mov
mov
call
push
push
mulb
jo
addl
lcall
in
xor
dec
sbb
pop
jg
jp
cltd
or
or
outsb
test
dec
shll
mov
adc
je
xchg
inc
xlat
out
inc
push
mov
push
mov
fbld
nop
or
lahf
cltd
add
cmp
push
cmp
insl
push
adc
aas
test
pop
sub
and
pop
xor
enter
mov
push
enter
mov
pop
shll
jae
iret
inc
rorb
mov
jno
mov
andb
or
mov
iret
mov
ficoml
in
push
pop
fsub
mov
dec
rep
arpl
cwtl
sub
cwtl
aad
int
cltd
je
jmp
and
xor
jne
jae
sbb
or
daa
cwtl
xchg
lcall
lret
outsl
insl
push
pop
add
jbe
mov
dec
es
sub
and
mov
aaa
stos
enter
adc
insl
aam
mov
divb
mov
push
test
loope
jae
jle
sbb
shrl
mov
xchg
mov
cmpsl
jg
jmp
test
mov
mov
jnp
or
rcrl
mov
add
mov
js
test
lcall
jb
xchg
push
jnp
mov
xlat
jne
inc
mov
xchg
inc
or
nop
dec
fcoml
cmpsl
ret
mov
mov
lcall
sub
lcall
lods
cmp
insl
fisubrs
lret
cmpsb
inc
jo
out
jp
shll
mov
ret
sbb
push
push
mov
cltd
push
xchg
scas
mov
and
cmpsl
pushf
or
jae
dec
leave
mov
jp
sahf
cld
scas
mov
dec
shlb
imul
lahf
loop
add
jl
mov
test
dec
lea
rcrb
jns
insb
mov
mov
dec
test
lea
mov
cmpb
cwtl
lret
xchg
xor
jb
dec
mull
push
pop
pop
ja
fldt
movsb
lds
cltd
into
inc
test
sti
sbb
aaa
mov
add
fcmovu
imull
movsl
push
pop
outsb
xlat
bound
pop
out
outsl
inc
cmpsb
lods
test
xchg
mov
clc
shll
aaa
js
mov
pop
lds
iret
mov
mov
inc
movsl
loop
jle
fidivl
or
dec
push
ffreep
sub
mov
imul
sahf
shlb
cwtl
pushf
mov
mov
out
outsb
cmp
je
jecxz
pop
and
call
inc
jae
inc
xor
call
or
ja
adc
lods
mov
pop
insl
imul
inc
adc
lock
ja
xor
push
insb
repnz
jne
cmpsl
pop
mov
adc
stos
jno
push
insl
out
or
in
movsl
mov
mov
ror
mov
xchg
std
pop
loopne
out
mov
aas
mov
les
push
enter
sti
lea
pop
xlat
insb
fmuls
sbb
ljmp
bnd
adc
mov
pop
aas
neg
ret
clc
add
test
loope
rclb
fistps
nop
pop
lret
sbb
aaa
xchg
cmp
sbb
lret
ljmp
mov
ljmp
jle
stos
movsl
pop
scas
enter
fildll
imul
faddl
mov
mov
or
xchg
pusha
fcmovu
lds
mov
mov
dec
mov
insb
mov
push
into
nop
xor
mov
test
enter
mov
std
ljmp
jae
lret
mov
push
mov
inc
test
add
cltd
mov
test
enter
shlb
mov
out
pop
xor
orl
loopne
push
xor
and
inc
xchg
xchg
mov
adc
or
jmp
sbb
jmp
lea
inc
sarl
fistl
dec
jmp
mov
pushf
rorb
push
xchg
jle
mov
icebp
sbb
sar
pop
aaa
mulb
mov
gs
lea
pop
fnsetpm(287
pop
cmpsb
pop
roll
jns
lret
scas
pop
les
push
pop
sbb
mov
fs
push
push
scas
subl
in
jecxz
adc
cltd
ds
test
push
imul
jbe
sbb
fucomp
jge
mov
pop
flds
mov
clc
nopl
xchg
pop
sbb
mov
pushf
pop
insl
scas
push
imul
inc
or
fwait
iret
push
push
cmp
push
jae
and
push
fistpl
insb
lea
repz
mov
aas
mov
imul
jne
scas
aaa
mov
xor
mov
jnp
test
mov
pop
push
enter
or
mov
je
xchg
xchg
xchg
scas
cmp
dec
and
xchg
xchg
movsl
loopne
cmp
push
mov
adc
sahf
push
or
movsl
mov
pushf
cwtl
add
lcall
in
mov
and
scas
test
mov
aaa
stc
and
dec
popl
add
loope
andl
lea
lret
cltd
stos
xchg
mov
mov
mov
sub
lods
stos
and
xchg
inc
mov
xchg
xchg
in
xchg
xchg
leave
push
pop
movaps
jnp
xchg
xchg
dec
ja
cli
jg
in
sbb
das
lret
dec
dec
adc
loopne
push
aas
lock
rcpps
mov
je
mov
in
lret
ja
fcmovu
fnstenv
enter
loope
mov
mov
jb
mov
sub
rolb
sub
movsl
out
movsl
xchg
fmulp
dec
pop
or
mov
and
shrb
mov
jne
mov
test
es
push
jge
shrb
and
mov
fwait
call
enter
mov
jae
mov
out
inc
sbb
divb
pop
mov
aaa
mov
xor
jae
add
push
shlb
sbb
ret
push
sahf
lcall
xor
pop
stc
pushf
xchg
xchg
shll
fbstp
arpl
shl
movsl
push
inc
flds
adc
clc
fistps
xchg
leave
ret
push
in
mov
lahf
pop
lock
push
mov
hlt
xchg
sbb
xchg
adcb
mov
inc
cmpsb
inc
pop
sub
adc
repnz
mov
loop
push
dec
imul
shll
add
fidivl
xor
sub
dec
aaa
pusha
in
sub
adc
mov
cwtl
ret
jo
adc
xor
in
xor
lods
mov
adc
push
sub
out
pop
mov
sub
adc
mov
addl
iret
ret
ret
dec
add
jmp
mov
mov
mov
inc
ljmp
aaa
xlat
call
pop
ja
mov
rorb
jg
aas
stos
sub
mov
loopne
mov
fiaddl
jae
mov
mov
cmpsb
rorb
dec
sub
enter
jo
push
xchg
mov
nop
or
cmp
ror
xchg
pop
jne
xor
les
or
and
test
mov
xlat
punpckhbw
jmp
orb
aam
in
pop
jp
ds
add
mov
rcr
lds
jbe
mov
dec
in
mov
jnp
loope
dec
subb
and
jae
fistpll
loope
ss
mov
cmp
adc
cmove
lahf
sub
inc
repz
popa
xchg
lcall
cmpsb
add
inc
loop
inc
push
pop
xchg
ss
in
mov
adc
sarl
and
mov
mov
mov
imul
sub
xchg
ljmp
sahf
xor
int3
cmpsl
hlt
mov
inc
cmp
int
lock
fnclex
dec
or
mov
adcl
outsb
sub
inc
adc
loop
cmpsb
ret
mov
loope
sub
xchg
dec
inc
inc
pop
les
mov
push
negb
or
mov
push
lods
mov
sti
fwait
arpl
sbbl
hlt
insl
aad
mov
ret
arpl
cltd
and
add
lods
push
mov
xchg
movsb
dec
mov
cwtl
mov
out
daa
fwait
xchg
adc
xchg
jb
mov
and
push
xchg
cmp
mov
mov
shlb
mov
xchg
js
mov
sub
dec
dec
or
inc
mov
sub
jno
push
lds
jg
out
nop
mov
into
mov
int3
cwtl
insb
nop
add
push
fcmovb
fcomi
pushf
fisttpl
imul
xchg
push
adcl
mov
mov
jae
mov
lods
and
or
lds
jg
mov
pop
or
or
ja
shr
inc
stos
adc
ret
adc
lods
and
addr16
inc
mov
xchg
dec
add
adc
mov
cmp
lret
cli
mov
jne
leave
fmul
sbbl
mov
aaa
cs
mov
nop
cmp
in
adc
loopne
dec
jmp
or
out
mov
sahf
sahf
rep
mov
call
hlt
mov
aaa
insl
xchg
and
ljmp
repz
push
push
lahf
mov
sbb
pop
mov
inc
lret
mov
push
ficoml
call
cs
pop
sub
into
rcll
xlat
adc
xchg
out
xchg
mov
push
jecxz
aam
pop
inc
xor
lahf
inc
mov
xchg
lret
adc
out
and
jecxz
push
movsb
push
or
add
xchg
xor
mov
sbb
bound
sbb
jns
iret
sbb
mov
mov
insl
adc
mov
ja
out
je
and
fimull
pusha
mov
ja
inc
push
js
xchg
mov
pop
or
pop
call
dec
mov
loope
aad
pop
cli
ss
into
xchg
fstpl
loopne
sub
test
outsl
cli
test
pop
xchg
or
sbb
pop
and
pushf
jp
aaa
dec
pushf
sbb
imul
mov
cmpsb
inc
bound
xchg
mov
outsb
xor
ljmp
cmovns
movsb
adc
mov
test
push
movd
inc
mov
out
fucomp
jb
in
lds
inc
clc
cmp
cmp
xchg
xchg
inc
sbb
dec
fimull
aaa
jo
test
out
jne
or
mov
mov
int
lods
iret
sbb
adc
mov
lcall
fcompl
pop
xor
sbb
mov
xchg
cmpsl
test
or
jp
mov
rorl
lret
bound
out
insb
pushf
out
sub
cltd
lret
xor
pop
cmp
xchg
into
test
jb
mov
mov
rcrb
adc
fdiv
idivb
cmpsl
push
leave
ljmp
push
enter
adc
mov
addr16
lcall
jo
sar
and
int3
mov
insb
fs
pop
mov
inc
cmp
ljmp
aaa
aad
jno
scas
decb
fsubrl
mov
test
cmpsl
addr16
loopne
lods
dec
in
pop
xor
jbe
adc
je
xchg
jp
leave
sbb
pushf
jecxz
sub
mov
and
cwtl
adc
or
ficoml
or
enter
insb
push
lret
push
add
stos
test
test
pusha
pop
nop
lds
cmp
or
mov
pushf
adc
outsb
movsb
xor
xchg
mov
or
xchg
add
scas
divb
enter
out
jmp
add
lcall
or
divb
scas
mov
jecxz
outsl
pop
push
pop
or
xor
leave
mov
jmp
in
push
stc
dec
xor
test
flds
ja
mov
lret
push
repnz
xchg
fistpl
pop
movsl
les
movsb
ret
aam
insl
mov
xchg
sub
mov
jo
cmpsb
negb
pop
and
mov
roll
scas
adc
sbb
xchg
push
ja
add
pushf
fdiv
jb
jge
shll
mov
mov
popf
mov
sbb
out
stos
rclb
lds
xorl
shll
inc
and
mov
rolb
jecxz
pop
les
lea
mov
fimull
aas
add
mov
pop
mov
mov
mov
orl
lret
adc
jo
sbb
enter
andb
inc
je
sbb
js
inc
je
push
jb
and
sub
add
push
pusha
push
add
mov
lods
shrl
cwtl
rdmsr
mov
adc
mov
das
jnp
push
lods
sahf
aaa
test
sbb
cmp
imul
pushf
mov
in
mov
adc
and
test
outsl
aaa
popf
arpl
nop
push
lea
mov
roll
subb
mov
rolb
and
mov
test
cmp
mov
fiaddl
ret
cltd
stos
cltd
ss
repz
les
dec
dec
push
lret
sarb
es
cmc
pusha
or
outsb
xlat
push
sahf
pop
jnp
test
adcb
mov
sbb
iret
dec
enter
mov
xchg
test
outsb
xor
cmp
pop
dec
mov
imul
repz
xchg
jno
jne
enter
inc
insb
aaa
xchg
push
call
repnz
pop
mov
rcr
das
ljmp
imul
test
mov
inc
int
vmptrst
scas
cli
insl
xchg
pushf
cwtl
sbb
andl
mov
mov
cmp
enter
rcll
int
sbb
and
or
das
popf
insb
shll
dec
jne
leave
pop
mov
scas
fcomps
dec
fldcw
cltd
sbb
mov
push
jno
loopne
push
shlb
loop
or
repnz
imul
daa
mov
mov
sahf
xchg
icebp
jl
dec
pop
xor
mov
jno
and
jl
mov
xor
and
xor
arpl
jmp
mov
mov
mov
sbb
scas
add
les
subb
insl
inc
pop
lock
xchg
sbb
testb
sbb
dec
std
sbb
pop
mov
push
mov
insl
jno
dec
sti
in
push
rcll
data16
mov
repnz
inc
mov
xor
sti
in
jg
fldt
jle
push
mov
or
cltd
imul
mov
lahf
dec
adc
inc
cs
sti
push
mov
aas
test
pop
scas
xchg
pushf
jb
jo
outsb
adc
mov
xor
push
in
fyl2xp1
xor
push
jno
stc
xor
fdivs
sbbb
or
pusha
or
lcall
daa
imul
out
pop
push
scas
push
push
mov
outsb
xchg
xor
push
jae
scas
xchg
andb
xchg
in
cmp
jle
push
lcall
out
lock
pop
bound
mov
enter
xlat
jecxz
pop
jns
popf
mov
cmp
test
cmp
inc
sub
aaa
mov
push
add
push
lock
and
je
mov
xchg
movsb
and
lcall
iret
pop
push
imul
cld
cwtl
icebp
cld
popf
mov
aaa
cmp
xchg
bound
push
mov
pushf
mov
test
inc
dec
pushf
inc
push
xor
inc
mov
push
in
mov
repz
lcall
mov
lret
cltd
jl
aas
xchg
mov
outsb
sub
xchg
jb
addr16
jbe
pop
xchg
push
and
lcall
ret
incl
call
fsubrp
lahf
into
cmp
icebp
xchg
shrb
sbb
jmp
fimuls
mov
out
mov
ret
xchg
scas
cmp
or
mov
fiaddl
mov
xchg
xorb
dec
imul
std
push
xchg
xchg
fwait
scas
adc
mov
or
lcall
and
iret
push
imul
into
add
cltd
negb
mov
mov
xchg
or
cmc
jno,pn
cwtl
sbb
push
mov
cwtl
push
lods
int
cmpsl
int
les
iret
mov
stos
sbb
sahf
cltd
scas
push
imul
mov
xchg
test
mov
push
mov
unpcklps
mov
out
popa
mov
fidivs
nop
push
mov
aaa
sti
mov
nop
add
or
push
repnz
push
or
es
test
faddl
in
mov
push
jmp
nop
add
mov
mov
cmp
xlat
jns
and
adc
mov
or
push
cmpb
and
and
cwtl
test
clc
aas
es
shll
adc
push
adc
pop
inc
int3
adc
adc
rcrb
adc
mov
cmp
test
pop
jle
scas
bound
out
stc
loop
ret
mulb
mov
or
push
mov
mov
or
and
mov
xchg
cwtl
insl
push
hlt
sbb
lcall
ja
jb
repz
xor
mov
sbb
sub
mov
xchg
xor
mov
imul
jg
lahf
push
jb
dec
stos
into
dec
add
adc
in
cmp
push
xchg
fidivrl
adc
sarb
mov
test
push
mov
pop
push
fwait
xchg
psrlw
cmpsl
xchg
aaa
cltd
cmpsl
mov
adc
imul
cmp
add
scas
adc
es
into
and
or
lock
inc
shll
xchg
push
mov
rcr
jae
es
adc
aad
jne
lods
sbb
push
dec
nop
mov
push
cmpsl
xchg
outsb
or
hlt
fists
movsb
lds
les
xchg
scas
mov
dec
adc
lret
lahf
xchg
push
or
mov
jg
nop
enter
pop
lea
imul
jne
dec
in
rcll
lea
xor
dec
test
nop
push
enter
rcrb
cmp
fdivrs
inc
stos
nop
repz
jle
xchg
outsb
xchg
outsl
xorb
enter
lahf
lcall
subl
lret
ds
scas
stc
out
sbb
out
xchg
xchg
pop
inc
dec
fdivr
push
ljmp
shlb
mov
mov
xor
cmpsl
xor
imul
test
ret
scas
jle
or
xchg
mov
add
jae
xchg
mov
insl
bound
stc
shlb
push
aad
rolb
sbb
je
dec
fwait
sti
dec
xor
popa
adc
inc
adc
loope
cwtl
repnz
fisttpl
test
sahf
mov
dec
or
sarl
adc
orl
mov
xchg
cmp
mov
leave
ja
mov
fwait
rep
leave
fucom
xchg
pushf
dec
push
mov
pop
andb
dec
bound
outsb
jp
inc
cmp
in
push
imulb
lea
jo
aaa
fdivr
icebp
inc
and
lods
xchg
pop
fsubrl
in
les
daa
dec
fwait
lods
fwait
mov
dec
xchg
fsubrl
in
inc
in
adc
into
jecxz
stos
jae
bound
call
inc
les
sti
add
mov
aas
dec
and
sub
xchg
or
fstl
aaa
push
cli
mov
dec
and
jb
xchg
jg
ja
movaps
mov
mov
push
pop
lret
loop
xchg
cmp
ja
jae
sbb
je
xchg
xchg
ret
ljmp
in
push
mov
std
cmp
iret
aas
out
mov
aaa
filds
popa
fwait
js
sbb
int
xchg
andl
xchg
inc
insl
addl
mov
sbbl
orl
shrb
das
ds
mov
jg
lcall
push
iret
fisttpl
leave
ja
push
or
stos
loop
push
and
jae
fidivrl
lods
cli
mov
xlat
jb
sub
dec
mov
xchg
loope
movsb
jg
or
sbb
mul
fnstcw
push
mov
cwtl
out
sbb
dec
cmp
sahf
xor
add
inc
or
ds
arpl
dec
loopne
add
add
das
aad
lods
imul
lock
dec
ret
sub
cmp
cmp
xor
cmp
mov
xchg
fsubr
mov
sarb
cmc
mov
cltd
jb
mov
notl
enter
out
ret
in
fwait
sbb
push
xchg
xchg
jp
sbb
mov
lods
add
sbb
sub
lods
cmpsl
aam
adc
adc
xchg
or
xchg
cmp
sbb
mov
mov
add
enter
mov
stos
int
cwtl
popf
inc
pop
adc
mov
in
dec
lea
push
sub
mov
rcll
ret
loope
pop
inc
dec
mov
add
rcrl
jg
sbb
lret
enter
lahf
xchg
test
mov
movsb
sbb
je
add
xlat
sbb
xchg
cmpsb
sub
sahf
lret
xchg
add
mov
xchg
outsl
add
or
sbb
insl
lods
fsubrs
aaa
sub
or
dec
leave
fldcw
push
cmp
inc
sbb
sbb
jmp
ja
inc
pushf
sti
out
add
pop
inc
dec
jnp
cltd
hlt
fxch
jns
push
sbb
mov
pop
rclb
xchg
loope
cmpsb
sbb
inc
sub
ret
and
into
or
jp
das
outsb
cs
scas
sti
xlat
inc
mov
lahf
sbb
aaa
sub
dec
cmp
push
fiadds
cwtl
sub
sbb
shrb
push
jbe
inc
repz
adc
mov
push
or
adc
xchg
ficoms
push
mov
xchg
jmp
into
push
inc
xor
push
xchg
sub
bound
into
push
dec
adc
sahf
xor
push
cmp
cmpsb
push
xchg
jb
xchg
xor
das
jbe
inc
mov
ljmp
xchg
fwait
incl
push
ljmp
iret
out
ficomps
into
mov
adc
cwtl
push
outsb
and
pop
ja
std
scas
outsb
cli
js
add
pop
jnp
out
xor
std
add
sbb
lea
stos
mov
shrl
or
into
xchg
inc
out
pop
hlt
jns
mov
xor
adcl
mov
xchg
test
stc
pop
adc
adc
fidivl
addr16
xlat
outsb
inc
adc
xchg
lock
or
call
fcomp
jno
flds
ds
push
test
push
das
pop
jp
fsts
pop
xchg
scas
pop
outsl
test
popf
imul
loope
mov
jne
dec
js
test
arpl
in
into
or
pushf
hlt
sbb
pop
mov
in
loopne
subb
and
sbb
xor
push
and
xchg
imul
std
sahf
mov
dec
js
arpl
push
loope
insl
std
mov
lcall
loopne
lea
leave
int
dec
jg
in
stc
scas
stc
cmp
jo
push
jnp
or
push
mov
inc
and
fwait
or
sbb
roll
mov
ja
ja
dec
jg
cmc
sarb
lock
adc
push
mov
mov
xorb
stos
js
xorb
or
into
outsl
ljmp
rclb
sahf
mov
pop
stos
imul
lea
mov
andl
cmp
xchg
fwait
xor
enter
jbe
cmc
adc
loope
mov
iret
xchg
xchg
ss
rorl
cmp
push
cwtl
xchg
or
shl
push
sub
jb
push
mov
shrl
push
mov
ljmp
cmp
inc
push
and
jmp
fisttps
aaa
mov
inc
fst
inc
into
or
stos
js
das
xchg
sahf
jmp
fidivs
adc
xchg
xchg
cmpsl
mov
jns
pop
enter
in
and
ljmp
lret
pop
pop
stc
ret
pop
xchg
and
pushf
shrl
outsl
std
mov
loope
mov
cmp
popf
lock
pop
lret
aam
cmp
adc
inc
adc
push
xchg
push
dec
or
mov
push
lock
or
jecxz
fidivrs
dec
mov
jne
test
xchg
jbe
andb
jle
cmp
push
xchg
xlat
sahf
das
movsl
fidivrs
ds
push
push
inc
aaa
xchg
or
ss
out
mov
or
cld
mov
lods
das
scas
ret
pushf
dec
xor
adc
jmp
mov
jns
cs
or
movb
mov
xor
cmp
inc
imul
pusha
xchg
fcomp
ds
pop
mov
stc
repz
mov
mov
movsl
cld
int
mov
inc
not
adcb
test
dec
sub
ret
mov
int3
lds
lcall
push
mov
lds
cld
shrb
ds
nop
cs
outsl
fisttps
roll
cmpsb
das
ret
mov
sub
cs
dec
fisttpl
or
mov
add
inc
popa
pop
dec
out
xchg
mov
imul
sbb
mov
pusha
cmpsb
push
xor
int
or
mov
sarl
pop
das
jnp
test
loopne
pop
push
mov
cmp
fadds
push
inc
lds
sahf
out
lret
je
dec
scas
dec
fadds
loopne
fs
in
stos
mov
stc
shl
mov
lret
xlat
out
lahf
int
xchg
push
pop
pop
add
das
bound
sbb
jmp
in
push
xchg
out
inc
pop
imul
xor
roll
mov
sbb
rolb
cmp
pop
je
or
inc
pop
cs
mov
cmp
add
addr16
js
fsubl
or
jnp
mov
cmpsb
push
xchg
sub
pop
cmp
movsl
fwait
and
pop
cwtl
or
lds
xchg
dec
and
es
shll
push
ja
insl
jge
aaa
leave
insb
sub
mov
popf
rcr
aaa
xchg
cmp
or
pop
push
mov
enter
fcmovne
sub
test
jle
and
xchg
mov
mov
dec
jmp
xor
add
outsl
pushf
sbb
shrb
sbb
cltd
dec
sti
xchg
fcompl
push
jmp
adc
andl
iret
jecxz
push
and
push
jmp
push
in
sbb
pop
mov
scas
pop
and
loopne
and
nop
std
jae
push
sbb
dec
mov
lea
jecxz
xchg
dec
das
add
nop
dec
arpl
inc
jg
or
inc
out
sti
dec
lret
sbb
dec
mov
mov
insl
xchg
mov
push
in
sub
ret
dec
mov
jne
inc
mov
mov
lods
ret
loopne
pop
jo
into
popf
adc
out
and
cltd
inc
adc
mov
fiaddl
jmp
sub
repnz
xchg
or
xchg
popf
cli
adc
xchg
add
data16
out
scas
dec
into
mov
jb
into
push
shl
nop
sbb
xor
sbb
mov
insb
or
mov
xor
lret
mov
sub
call
sub
fwait
add
fiaddl
popa
pushl
xchg
lods
aaa
xchg
int3
sub
aam
inc
enter
cmp
movsl
shrb
int3
adc
jnp
xchg
adc
mov
cmp
or
mov
je
das
ja
mov
lahf
xchg
adc
popa
jae
popf
dec
sbb
xlat
cwtl
cmp
mov
jp
cmp
jl
push
or
lods
lods
xchg
nop
int
mov
ror
cmpb
ja
or
mov
rorb
push
outsl
cmp
loop
in
fisubl
dec
aaa
data16
dec
leave
shlb
jbe
and
mov
xor
nop
pop
pop
aad
inc
mov
out
aaa
cltd
incb
xor
std
fisubs
dec
inc
and
xor
sarb
jnp
rcr
xor
and
dec
testb
xlat
imul
and
jne
inc
fdivp
mov
fcomi
test
xor
cmp
dec
fcmovu
push
cmp
shl
inc
adc
js
lahf
add
imul
nop
popf
xchg
les
fwait
push
xchg
ds
fcomi
xor
mov
or
sbb
jmp
dec
push
jo
xchg
inc
push
and
add
lret
jne
aas
mov
adc
clc
les
and
xchg
mov
or
add
adc
int
mov
jns
fisubrs
or
ja
inc
in
mov
jle
push
out
ret
enter
lock
push
fiadds
jmp
mov
pop
rcll
and
je
mov
rorl
int3
mov
scas
nop
and
sub
dec
sub
adcb
sbb
stos
xchg
clts
inc
mov
cmpl
dec
and
fnstenv
jo
cmp
cltd
jmp
push
xlat
pusha
testl
stc
push
ret
cs
inc
pop
sarl
push
xchg
mov
jecxz
ljmp
testb
pop
orb
dec
mov
movups
loope
rcrb
adc
loop
xchg
sbb
cmp
lahf
movsl
add
push
push
enter
cmp
dec
and
xlat
mov
filds
enter
pop
sbb
pop
mov
mov
jle
je
inc
and
and
imul
ljmp
cld
sbb
adc
mov
in
push
add
repnz
jp,pn
xor
mov
dec
xchg
sbb
cmpsb
or
mov
ss
insl
bound
pop
ret
or
xor
test
outsl
push
hlt
movsl
sbb
xor
clc
mov
push
inc
pop
outsb
cmpsb
xchg
in
inc
dec
inc
cmpsb
xor
push
aam
or
push
inc
outsb
push
mov
xor
mov
ret
xchg
jp
shrl
in
push
outsb
sub
int3
or
jge
ljmp
cmpsb
or
sub
mov
push
xchg
xor
lds
or
fistl
in
adc
in
imul
int3
inc
cmpsl
and
sbbb
jae
pop
xchg
dec
mov
mov
js
fwait
jns
sbb
lea
ja
rcll
sbb
jns
xor
shrb
or
imul
repnz
or
fwait
ret
xchg
xchg
or
test
jecxz,pt
sarl
aad
jecxz
and
fwait
dec
pop
mov
sub
xor
ror
lods
leave
jp
pop
arpl
dec
jmp
les
movsb
fwait
notb
adc
dec
adc
adc
push
push
cmc
call
ficomps
out
inc
es
imul
aad
lea
jp
aaa
loopne
out
sahf
call
pop
dec
sbbb
dec
push
rcll
lret
mul
push
push
xchg
stc
push
sti
pop
jno
adc
lahf
lock
pop
imul
adc
int3
xor
push
insl
and
outsl
pop
ja
test
loope
pushf
pop
ret
xchg
cmpsl
dec
mov
aaa
rclb
lahf
pop
iret
pusha
xchg
pop
inc
outsb
rol
outsb
add
loop
rorl
xchg
mov
adc
jge
enter
imul
pusha
mov
or
mov
aad
xlat
int3
in
insb
sbb
nop
mov
hlt
mov
inc
or
jl
add
ljmp
insl
inc
mov
xor
jne
jle,pn
adcb
sub
test
xor
mov
mov
lahf
and
dec
popf
orb
outsl
pop
inc
jae
xchg
mov
iret
mov
adc
xor
xchg
pushf
push
xor
sub
push
cwtl
cmp
push
into
push
ja
hlt
push
cmp
sub
shlb
lds
or
ds
dec
lahf
nop
mov
mov
cwtl
adc
push
adc
ss
int3
lea
pop
mov
loopne
stc
cmpsl
aam
adc
out
leave
aad
ljmp
pop
cltd
dec
stc
imul
rcll
lcall
xor
int
mov
aas
pop
adc
inc
lahf
push
xchg
jecxz
rolb
dec
pop
mov
cli
add
in
pop
jmp
xchg
in
js
push
xor
push
shlb
dec
fs
push
pop
shr
fsubrs
out
imul
inc
push
ja
sbb
fldcw
xor
aaa
loop
lcall
mov
jne
xlat
jbe
dec
xchg
nop
adc
shll
inc
adc
pop
pop
or
xlat
push
shrb
mov
fisubs
insl
dec
and
mov
mov
dec
inc
lods
mov
lret
xlat
mov
insl
mov
xor
xchg
leave
fbld
insb
std
push
adc
inc
sbb
xchg
mov
xchg
dec
xor
clc
mov
cwtl
mov
sarb
jg
dec
push
mov
inc
jnp
in
jb
gs
into
jge
pop
pop
mov
push
xor
aas
lods
aad
mov
inc
inc
mov
cmpsb
nop
mov
imul
mov
or
xchg
and
imul
sbb
jmp
mov
xlat
hlt
cli
jns
loopne
dec
stc
adc
aaa
inc
jmp
push
pop
adcb
pusha
inc
out
loope
mov
aam
jecxz
out
jb
and
jb
cmp
addr16
mov
out
jg
mov
mov
sub
es
xchg
push
mov
cltd
adcb
pushf
adc
mov
loop
jnp
rorb
mov
gs
daa
loop
xchg
outsl
adcb
movsb
loope
mov
gs
bnd
xchg
ret
adc
insl
mov
sahf
std
inc
push
enter
and
jnp
jmp
xor
mov
mov
dec
sbb
dec
mov
xor
jnp
stos
lods
dec
lret
cld
mov
push
or
fiaddl
shll
xchg
mov
loope
add
bound
adc
lret
jge
xchg
jl
mov
mov
test
lea
and
stos
arpl
insb
push
aad
imul
test
jp
mov
fistps
in
xor
dec
es
int
xor
xor
or
cwtl
lret
mulb
insl
cs
mov
lahf
dec
mov
xchg
jb
scas
or
mov
xchg
inc
cs
aad
xchg
mov
pop
aaa
aam
mov
mov
mov
popf
push
sub
add
test
pop
inc
repnz
jne
mov
fisubl
pop
dec
aaa
xchg
push
inc
push
pop
fidivl
or
out
xchg
pop
jmp
in
out
xchg
add
pop
inc
mov
aam
add
jg
pop
inc
sub
cltd
pop
stos
lahf
test
pop
lods
and
xchg
pop
adc
loop
xchg
pop
pop
jl
mov
ficoms
sub
rolb
stc
sahf
jbe
push
xchg
insb
dec
xchg
enter
mov
ljmp
sarb
mov
popf
ror
lock
inc
mov
fsts
ja
inc
outsl
jmp
roll
inc
aaa
popa
mov
outsb
sahf
jbe
or
sbb
movd
mov
sbb
push
cmpsb
scas
mov
lcall
xchg
sahf
aad
xchg
arpl
sahf
dec
in
stos
sarb
or
nop
push
jp
cmc
cwtl
pop
pop
xor
and
imul
loopne
sahf
xor
push
xor
push
outsl
adc
clc
xchg
xor
cmp
jns
aas
pop
test
mov
mov
add
insl
fdivs
mov
adc
aaa
movsl
lods
fiadds
xchg
lahf
xor
cmpsl
iret
xchg
mov
lea
push
pushf
xorl
jmp
push
popa
insb
or
add
or
mov
js
or
jae
mov
lods
lret
xchg
or
lcall
xor
inc
mov
sub
jae
dec
and
xchg
lret
jo
ds
cmpsb
xor
cmp
adcb
mov
psrad
sbb
xchg
xchg
fmull
sub
pop
in
mov
jge
and
fadd
mov
movaps
gs
jle
or
pop
int
rorl
enter
cld
mov
es
inc
lret
pop
cmp
xor
int3
lret
sub
pop
or
pop
fisttps
aas
xor
loope
pop
loopne
or
stos
out
aam
push
sub
int3
pop
pushl
movzwl
mov
pop
jns
cmp
mov
mov
aaa
cmpsl
and
jge
into
insb
aam
cltd
dec
mov
cmp
dec
inc
call
ss
rclb
ficoms
aad
push
sahf
rcrl
push
cmc
push
push
adc
push
enter
xchg
mov
loope
enter
aas
mull
lea
fdivrs
inc
xchg
shrb
xor
fwait
sbb
xchg
jno
aam
sub
movsl
or
pop
dec
mull
outsb
fnsave
mov
xor
and
jno
mov
loope
and
push
pop
pmullw
sbb
xchg
arpl
sub
in
adc
lret
sahf
dec
out
cmpsb
dec
sub
leave
arpl
push
xchg
nop
push
adc
xor
xchg
or
stc
jno
mov
repnz
leave
out
inc
out
lahf
hlt
cltd
or
idivl
lods
test
pop
es
mull
xchg
inc
into
adc
xchg
lahf
adc
fdivr
movsb
int
test
hlt
int3
pushf
mov
adc
pop
rol
add
test
pop
lock
leave
sub
mov
shlb
loope
subb
popf
xchg
xchg
fwait
push
cmc
pushf
jne
push
or
xor
hlt
call
cltd
adc
js
daa
gs
sub
idivb
push
cltd
sub
outsb
pop
sub
push
adc
push
lock
cmp
xchg
cmp
popf
aaa
rorb
imul
movb
sbb
jno
adc
inc
popa
insl
cmpsl
push
xor
push
cltd
cmp
in
cmovno
dec
pusha
xor
fisttpll
cmp
aaa
nop
dec
outsb
push
lea
mov
mov
xchg
stos
inc
pop
inc
movsl
dec
stos
fwait
idivl
mov
imul
into
xchg
enter
fisubrl
xor
and
std
mov
mov
jecxz
sahf
sbb
mulb
push
xchg
aam
xchg
push
mov
lcall
or
or
iret
imul
mov
fcom
mov
mov
adc
pop
xchg
pop
xchg
sub
dec
sbb
xchg
mov
and
jp
or
inc
xchg
fwait
adc
jnp
aam
pop
idivl
or
xchg
ret
mov
shlb
gs
mov
inc
orb
aaa
push
add
xor
movsl
rorb
sub
in
dec
push
aaa
shl
iret
outsb
loope
cwtl
push
arpl
cwtl
fs
repnz
sti
mov
and
and
jne
outsb
sub
cmp
fwait
adc
jmp
int
lcall
lods
sub
mov
xchg
xor
pop
mov
or
movsl
mov
stos
lret
ja
push
divb
mov
or
or
mov
lret
mov
xchg
add
sahf
cli
sbb
in
lds
shrb
in
jmp
adc
leave
rcl
mov
jecxz
inc
or
aad
fwait
mov
pop
or
xchg
sbb
std
push
jle
pop
cmp
xchg
adc
divb
xchg
xchg
mov
js
or
xor
lcall
loope
lret
lcall
dec
push
or
inc
jbe
xchg
jb
fnsave
test
jp
mov
xor
clc
test
or
push
and
add
inc
lea
cmp
mov
int
aaa
loope
nop
adc
arpl
xor
mov
das
cwtl
jbe
cmp
mov
or
sahf
dec
loop
xchg
test
das
dec
int3
add
popa
imul
fcoms
out
xchg
cmpsl
cmp
mov
lret
xchg
in
ds
insl
decb
xchg
and
es
dec
pop
add
mov
lds
ficompl
lcall
flds
and
outsb
cli
aaa
lret
je
add
lcall
testb
mov
xchg
or
add
jge
addr16
dec
mov
pushf
negb
int3
dec
jbe
in
push
sub
testb
out
push
sub
push
mov
hlt
push
xchg
lods
movl
lcall
or
add
nop
call
pop
mov
scas
out
push
jne
add
jg
push
mov
push
or
jl
outsl
jae
sahf
or
sbb
jl
imul
enter
je
jmp
add
lret
or
push
out
dec
xor
dec
dec
mov
inc
int
push
in
sbb
lcall
nop
push
xor
mov
ror
xchg
or
mov
cwtl
sti
jg
xchg
cmp
push
mov
and
cmpsl
fisubl
push
cli
push
jne
lea
in
ljmp
adc
es
ss
ljmp
mov
rcrl
mov
jle
xchg
mov
insb
jae
ret
inc
mov
xchg
push
rorb
ljmp
roll
dec
ljmp
dec
mov
repnz
pop
lds
mov
ja
mov
pop
lods
test
xor
jecxz
cmp
xchg
cmp
xor
cmp
sub
or
aad
pushf
mov
cs
push
xchg
cmp
loop
pusha
and
push
ljmp
sub
pop
pop
sub
xor
aam
pusha
nop
inc
mov
pushf
mov
mov
popw
push
sbb
ret
iret
div
xor
sub
or
pop
inc
pop
adc
mov
and
cmpsb
xchg
mov
add
ljmp
ret
cli
enter
cmp
nop
pusha
push
out
rolb
xor
adc
cmp
dec
jne
movsl
out
push
sar
xchg
push
mov
or
xchg
sbb
dec
in
enter
xchg
push
dec
push
push
aaa
movsb
outsb
bound
ss
dec
rorb
push
movsb
dec
sub
rclb
outsb
negb
xchg
or
ss
fstl
dec
outsb
aaa
jnp
and
int
push
adc
push
add
clc
jnp
cltd
fwait
sbb
sbb
adc
fwait
mov
nop
outsb
es
push
imul
enter
sbb
loop
xlat
jns
xchg
jae
mov
outsb
jmp
arpl
aaa
lcall
in
adc
sahf
in
inc
jnp
inc
fcompl
fcoml
push
les
inc
scas
leave
sti
enter
or
icebp
ror
cmp
pop
push
xchg
pop
outsb
pop
rcrb
pop
push
adc
popa
push
lret
loop
and
enter
sarb
mov
mov
mov
jnp
xchg
jnp
rorl
fists
faddp
push
jnp
push
bound
lahf
mov
fcmovu
mov
xchg
bound
xor
enter
lods
push
dec
fimuls
mov
js
dec
movsl
lret
mov
pop
lahf
or
repnz
test
iret
mov
imul
insb
adc
sub
mov
stc
mov
aaa
jo
mov
jbe
pop
negl
push
xor
push
pop
mov
push
lcall
pop
xor
pop
aad
push
cmp
dec
inc
lcall
ljmp
inc
fnstenv
xlat
mov
lea
dec
inc
add
sub
add
sahf
in
push
pop
push
xor
push
cmp
adc
into
xor
fadds
add
insl
pop
xchg
mov
sub
pop
pusha
or
dec
push
lods
push
inc
fidivl
mov
mov
push
out
cmp
xor
cmp
push
imul
mov
add
mov
out
inc
jns
push
psadbw
jb
pop
xchg
out
sbb
inc
lcall
sarb
xor
mov
ja
push
xchg
rcrl
sub
or
mov
xchg
setno
jmp
cmp
jns
jo
pop
dec
fldenv
test
add
ds
add
aad
push
and
xchg
sub
fcmovu
dec
leave
js
stos
and
sub
nop
insl
xchg
movsl
dec
jae
push
cmp
sbb
mov
les
int3
das
inc
div
push
dec
xor
push
mov
xchg
mov
jne
stos
ds
es
lods
lret
push
movsl
mov
xchg
out
and
push
enter
lahf
out
outsb
push
or
cmp
int
cltd
outsb
test
js
or
jg
mov
out
mov
dec
in
sub
rclb
jge
push
outsb
xor
inc
xchg
pop
popf
lcall
or
shrl
test
aaa
mov
pop
jb
add
sbb
cmp
stos
icebp
mov
aaa
repnz
test
loope
out
adc
gs
push
cmp
ds
sub
xchg
cmp
xlat
jg
adc
enter
and
jge
mov
scas
js
sub
push
clc
iret
lahf
add
pop
ds
xchg
cmp
push
or
mov
out
adc
cmp
sub
or
push
fstp
mov
jle
cwtl
push
mov
clc
or
xor
out
pop
movsb
imul
and
lahf
cmp
nop
leave
and
jmp
and
xchg
nop
out
xchg
push
mov
lcall
xchg
add
sbb
adc
es
push
pop
xchg
sub
cmp
push
or
inc
adc
pusha
enter
xchg
decl
add
sbb
fimuls
dec
rcll
pop
sbb
cmp
stc
inc
or
sbb
xor
int
pop
cmp
stc
loop
dec
and
inc
jl
imul
movsb
cltd
cmp
enter
int3
inc
cmp
adc
imul
js
xchg
sub
sbb
ret
cmp
js
sbb
jl
ja
cmpsb
lods
dec
int
dec
enter
push
out
lds
mov
push
jp
adc
xor
pop
je
mov
sub
or
inc
mov
arpl
xchg
popf
pop
and
jle
xor
fimull
in
jle
jno
or
adc
adcb
mov
inc
or
dec
mov
jb
or
shll
ret
fcomps
bound
mov
dec
pushf
incb
or
push
mov
push
add
leave
cmp
cmp
les
xchg
xchg
xchg
dec
lret
pop
fidivl
pop
inc
pop
inc
sub
xchg
fsubl
js
cwtl
je
pop
cmp
push
mov
xchg
jae
pop
and
dec
and
cld
enter
dec
cmp
dec
ficoml
sahf
jp
popa
push
jns
pop
fistps
or
aad
push
ss
popa
dec
lock
test
lcall
je
inc
jp
xchg
cmp
sub
add
jnp
push
cs
jnp
aaa
or
iret
adc
loope
leave
lea
into
or
popl
mov
mov
mov
or
neg
movsb
adc
dec
dec
into
mov
mov
or
jp
lea
pop
xchg
push
dec
lods
adc
out
stc
pop
fisttpll
xchg
push
or
xchg
lds
pop
lcall
pop
adc
cs
sahf
cmp
lcall
xchg
rsqrtps
or
xchg
push
inc
push
es
sahf
xchg
xchg
mov
push
add
mov
faddl
roll
pop
dec
pushf
xchg
xor
fstp
xchg
icebp
fiadds
xchg
lea
push
scas
mov
xchg
stos
out
mov
aaa
mov
sahf
in
push
push
aad
test
adc
wrmsr
add
fisubrs
outsb
xchg
and
dec
pop
xchg
and
mov
int
js
dec
sbb
inc
inc
daa
out
loopne
pop
push
add
out
mov
imul
imul
pop
in
or
mov
dec
stos
sti
pop
cwtl
mov
dec
adc
lret
cmp
daa
out
push
sar
mov
cwtl
mov
loopne
adcb
ret
int
sub
mov
shr
test
add
insb
sahf
outsl
dec
dec
icebp
or
call
lret
xchg
out
jb
stos
mov
testl
enter
mov
int
outsb
lea
sbb
xchg
mov
dec
pop
fsubs
repnz
into
jne
sub
cmp
dec
ret
divps
sbb
fdivl
outsl
cmpsl
cltd
xchg
jle
iret
ficompl
inc
sub
ss
dec
decb
xchg
dec
dec
pushw
sti
pop
sub
adc
lret
pushf
xor
inc
hlt
frstpm(287
sub
into
clc
in
push
or
or
add
ret
test
mov
push
leave
pop
push
pop
js
insb
outsl
mov
push
cmpsb
jno
lret
push
outsl
push
push
rol
push
dec
mov
outsl
push
rdmsr
das
xchg
out
dec
or
xchg
pop
mov
je
aad
je
fildl
pop
xchg
inc
mov
pusha
xchg
ss
mov
xor
loope
pop
loope
push
jmp
push
push
out
pop
popf
loopne
dec
pop
pop
or
lds
pushf
mov
sbbb
enter
sbb
dec
lret
push
push
pop
sbb
nop
movsl
jp
pop
and
andb
rcll
adc
xchg
mov
loopne
sub
into
lock
and
clc
mov
mov
and
ljmp
aam
adc
mov
icebp
fdivl
gs
lcall
xchg
jnp
push
mov
xchg
sahf
cmpsl
xchg
pop
pop
rorb
aas
fsubr
push
rcll
repnz
dec
aaa
hlt
insl
repnz
mov
cmp
mov
stc
fidivl
inc
adc
xlat
lds
ss
loope
test
iret
icebp
or
leave
lods
push
dec
inc
fnstsw
adc
mov
iret
data16
push
mov
lret
mov
mov
adc
jne
jb
and
inc
int3
fidivl
xchg
adc
loop
xchg
and
jle
enter
int
jbe
psubsb
inc
mov
fneni(8087
aad
pop
inc
push
bsf
pop
iret
sbb
mov
fwait
jbe
cs
insb
jmp
pop
xor
add
inc
ds
pop
cmp
cli
jge
fdivrs
mov
in
push
orl
xor
jge
adc
or
mov
adc
jo
fdivr
inc
jmp
cmp
out
push
adc
movsb
or
lods
adc
and
or
ljmp
xchg
jp
lcall
push
rorb
cs
out
das
out
cli
jnp
or
mov
insl
pop
jp
jne
dec
test
inc
cli
cltd
xor
push
push
dec
sahf
mov
clc
into
pop
inc
mov
or
shl
sbb
pop
js
enter
mov
into
or
adc
cwtl
push
outsb
sub
inc
adc
jp
lret
stos
cwtl
ret
rcrb
sbb
push
adc
cwtl
cmp
into
cwtl
lret
xchg
push
into
in
adc
cwtl
lock
dec
rcrb
sub
out
sbb
int3
sbb
adc
cwtl
add
rcrb
sub
into
inc
xchg
lret
adc
into
outsb
lods
sbb
push
adc
cwtl
push
outsb
pusha
shlb
add
int
mov
xchg
into
mov
xchg
dec
scas
jo
or
lcall
mov
push
insl
ret
push
out
and
lcall
jnp
or
mov
dec
fstp
mov
push
jns
int
push
aam
iret
js
into
pushf
jb
pushf
or
jno
or
inc
cmp
lcall
enter
jp
dec
jno
push
xchg
loop
rdtsc
cmpl
pop
adc
mov
cld
cwtl
add
int
xchg
das
fwait
pop
lea
scas
mov
mov
mov
xlat
outsb
or
scas
xchg
je
addb
popf
push
stc
ret
jbe
int3
mov
les
fs
ret
test
shll
scas
xchg
xor
xchg
int
mov
fidivl
push
push
cmpsl
nop
lds
dec
sbb
lea
in
inc
push
mov
jmp
movsl
sbb
cwtl
xchg
adcl
xchg
adc
sbb
pop
movsb
mov
mov
mov
xchg
xchg
xchg
fwait
lcall
pushf
mov
cmpsl
cmpsb
movsl
movsb
imul
mov
insl
insb
jae
jno
mov
jne
jnp
jns
mov
jge
addl
test
iret
dec
mov
rcl
rcl
xlat
mov
aam
fcmovu
fcomp
fimuls
loope
out
and
outsb
test
lret
mov
mov
mov
mov
sbb
cmpsb
or
or
or
outsl
lcall
sahf
sub
mov
mov
adc
cld
outsb
jb
mov
xor
or
jb
sub
mov
xchg
cmp
xor
mov
lods
push
js
or
mov
nop
xchg
xchg
fcmovnu
mov
lds
cmp
aad
enter
fdivrs
cmp
test
scas
push
out
mov
xor
push
jns
test
inc
imul
je
fadd
mov
test
test
loopne
repnz
mov
je
nop
fiaddl
or
outsb
jb
in
jae
add
in
jge
mov
lods
jecxz
mov
cmp
ja
hlt
outsl
ljmp
adc
popa
into
dec
out
lods
jmp
mov
mov
or
xchg
scas
mov
pop
sahf
and
mov
repnz
nop
fsubrp
jp
jb
pop
cmpsl
lods
mov
fs
testb
ljmp
push
xchg
pop
mov
imul
mov
and
leave
jne
in
mov
mov
jb
jnp
mov
jno
rcr
pop
repnz
test
out
int
jl
jmp
push
aad
push
and
fdivrs
or
jmp
push
mov
jnp
or
jp
jns
inc
clc
lods
add
push
mov
bnd
lcall
or
or
dec
js
outsb
lahf
inc
lcall
mov
andb
aas
ret
jecxz
add
repz
loopne
push
jge
mov
mov
or
jmp
js
jle
stos
daa
stos
fcoml
cmp
leave
clc
xchg
mov
das
mov
inc
loop
mov
ss
xor
jbe
andb
leave
rorb
popa
scas
outsl
mov
outsb
addl
ret
push
ss
test
jp
add
add
stos
pop
aas
insb
cmp
mov
xor
fsubrs
fwait
mov
lock
pushf
cwtl
sbb
jle
dec
adc
ret
sub
dec
sahf
xorl
into
out
adcb
jno
mov
lods
xlat
dec
mov
ds
scas
jge
popa
dec
push
mov
add
jbe
xor
sub
ja
push
cmp
mov
mov
movsl
mov
iret
fidivl
test
push
jg
int
push
imul
subb
imul
push
mov
jb
jmp
lcall
or
mov
or
xchg
outsl
mov
sahf
mov
mov
inc
push
mov
mov
mov
mov
imul
sbb
mov
mov
mov
or
cwtl
lret
push
adc
je
push
or
adc
adc
sbb
pop
push
sbb
and
daa
es
jmp
in
repz
lock
cmc
hlt
sti
cli
mov
clc
std
cld
add
mov
add
push
add
dec
dec
dec
dec
dec
dec
push
push
mov
push
push
push
push
pop
pop
mov
pop
pop
pop
pop
arpl
popa
pusha
gs
mov
sub
cs
xor
aaa
ss
cmp
aas
ds
inc
inc
inc
inc
inc
inc
mov
jno
and
xchg
arpl
jno
jo
icebp
loopne
imull
in
jo
shrb
cmpb
mov
pop
cmc
xchg
xchg
rorl
xor
mov
leave
xchg
loop
push
cmp
add
aam
mov
dec
fcompl
jge
bswap
mov
lcall
lcall
mov
mov
ret
scas
mov
int3
lods
test
mov
mov
xchg
leave
pop
stos
mov
lcall
mov
lret
jle
rcrb
imul
mov
mov
add
push
fidivs
xchg
lods
xor
test
mov
fidivs
mov
xchg
or
jb
push
sub
inc
jnp
mov
ret
or
cld
leave
shlb
fldt
cld
loopne
leave
ljmp
inc
sti
js
fimull
or
sbb
daa
dec
imul
mov
enter
fstp
mov
fdivrs
je
dec
daa
push
int
or
int
loope
sahf
aas
fldl
fstl
movsl
ja
js
jg
jb
inc
push
fstp
mov
mov
xlat
push
jle
add
hlt
mov
mov
mov
aam
mov
sahf
mov
ret
mov
mov
mov
pop
je
ret
insl
lahf
jp
dec
loop
outsb
andb
out
xchg
lods
jle
mov
rcl
into
xorb
jp
cwtl
aad
repnz
fnstsw
inc
or
and
das
fucomip
lcall
mov
mov
mov
aad
ret
lods
pop
stc
dec
ror
cmpsb
iret
leave
aam
int
mov
dec
imul
jp
mov
dec
dec
les
or
mov
xchg
out
shlb
cmpsb
push
mov
outsb
xlat
pop
mov
jge
jns
fsts
xchg
rorl
push
test
mov
pop
add
pop
mov
sbb
and
shrb
xlat
adc
mov
stos
push
jo
dec
sar
int3
xchg
es
push
pop
aam
ret
jecxz
pushl
xor
push
sub
adc
dec
xchg
imulb
mov
seto
fsubr
repnz
and
cltd
lret
mov
adc
insl
cltd
inc
int
lret
pop
loopne
add
push
pop
cltd
lcall
push
outsl
les
mov
andb
push
pop
out
cltd
mov
sub
movsb
push
iret
mov
pop
jecxz
stos
xchg
jo
cmp
push
sub
call
fwait
mov
je
jb
test
xchg
sbb
in
jno
xchg
lods
push
mov
push
jecxz
add
pop
mov
inc
or
popf
lret
repnz
mov
sub
push
jle
xorl
addb
rcl
sub
or
adc
push
and
sub
outsb
in
add
pop
cmp
aad
imul
push
ja
stos
pop
push
std
sbb
add
adc
fdivl
bound
push
add
xorb
repnz
jecxz
dec
sub
push
imul
lds
imul
test
inc
cmpb
loop
xchg
push
jbe
rcrb
jle
jnp
inc
pop
lret
shll
cwtl
into
dec
mov
dec
mov
jae
mov
sub
mov
call
jecxz
scas
cmp
mov
aad
ficoml
adc
test
test
push
jecxz
or
mov
fnstenv
sar
mov
mov
or
rcl
mov
je
lods
mov
mov
xor
or
jmp
mov
sbb
js
faddp
sbb
int3
scas
sarl
mov
loopne
jne
or
popa
mov
mov
xor
sbb
rorb
int
or
pop
cltd
adc
iret
pop
add
insl
mov
push
adc
mov
pushf
cvtps2pi
inc
sbb
pop
and
mov
inc
sub
adc
test
dec
lods
hlt
insb
mov
inc
inc
jno
popf
mov
adc
xchg
pop
mov
mov
andps
inc
dec
jnp
dec
and
iret
test
sub
dec
push
cmp
xor
fadds
dec
ret
stos
sub
inc
sbb
stos
outsb
xchg
insb
popf
push
arpl
sarl
test
xchg
sub
mov
sub
shll
jmp
or
dec
pop
pusha
imul
jno
out
movsb
pop
push
push
push
or
cmp
jle
jle
shrb
je
js
les
jge
mov
cmpsb
les
pop
mov
sbbl
ss
ds
push
es
into
or
or
rcll
rorb
test
cmpsb
rcr
daa
mov
mov
xor
js
xchg
shr
xchg
outsb
int
cmpsb
ljmp
mov
fsubs
fnstcw
stos
sbb
xchg
adc
lea
lock
cli
push
outsb
stc
fistl
pop
rcrl
scas
int
sub
xor
xorb
cltd
or
outsb
mov
outsb
leave
incl
lret
popf
out
insb
fisubl
mov
lahf
mov
addr16
dec
fdivrl
scas
test
lahf
imul
xchg
mov
cmp
aam
and
fidivs
out
out
icebp
cmpsb
fcomps
fwait
inc
imul
rcrb
sbb
sbb
les
in
leave
sbb
orl
mov
enter
imul
std
pop
clc
out
lcall
jo
pop
jb
cwtl
test
sub
lods
hlt
mov
outsl
mov
xchg
insb
outsb
loop
lods
loope
enter
ljmp
jmp
jecxz
pop
lds
pop
insb
lods
int
lret
shll
mov
les
popa
rorl
xor
cmp
mov
cmp
shr
xchg
jbe
cmpb
fxch
ja
ljmp
repnz
push
push
push
xchg
rcll
jb
dec
adc
movsb
add
nop
fwait
mov
pop
inc
dec
dec
stc
mov
adc
push
sarb
xchg
sbb
xchg
xchg
outsl
xchg
push
nop
cmpsb
push
xchg
rcrl
loop
sahf
cltd
adc
imul
fidivrl
fsubs
jecxz
stos
loope
mov
mov
mov
imulb
add
or
xchg
or
push
push
rcrb
sbb
fbld
ja
sbb
out
mov
mov
arpl
xchg
jle
push
imulb
add
pop
mov
dec
fs
imul
xchg
mov
pop
rorl
mov
cs
fcoml
nop
jecxz
mov
mov
adc
imul
inc
mov
jge
adc
mov
mov
mov
enter
cmc
pop
mov
add
lock
and
dec
orb
cmpsb
stos
or
push
imul
or
lret
mov
out
pusha
jno
push
xchg
or
js
std
and
leave
mov
cs
mov
sub
mov
nop
jns
lea
dec
stos
xchg
bound
jns
orb
jbe
pop
dec
iret
out
push
inc
loopne
lcall
ret
in
outsb
xchg
inc
jo
or
sbb
mov
or
xchg
out
addb
mov
jno
pop
scas
scas
jle
xchg
stos
push
jb
outsb
into
rcrb
push
jae
lahf
dec
adc
shrb
into
cmpsl
ds
adc
movsb
outsb
not
imul
push
push
into
ret
push
loop
shrb
inc
sbb
push
fcomi
sbb
dec
inc
mov
mov
pop
mov
inc
lret
lret
push
xchg
push
cmpsb
push
outsb
xchg
out
push
js
sub
bound
dec
sbb
push
into
add
adc
cwtl
imulb
shr
sbb
push
adc
cwtl
ret
mov
rcr
sbb
push
adc
push
xchg
out
insb
xchg
mov
into
test
cltd
in
adc
mov
mov
adc
or
add
lcall
popf
fcmove
lret
dec
dec
shrl
lcall
add
scas
outsb
push
jle
push
xchg
loopne
push
and
adc
aas
insl
cltd
popa
jp
aam
mov
test
subb
ret
sbb
dec
pop
cmp
lcall
push
mov
orb
jge
xchg
int
inc
or
mov
or
popa
popf
ljmp
addb
shlb
xchg
loop
dec
enter
ds
sahf
xchg
or
pushf
fisubrl
outsl
add
mov
jle
fwait
jmp
dec
pop
aam
push
and
std
mov
and
in
insl
sub
test
jp
iret
xchg
lea
or
ljmp
pop
or
and
xchg
pop
mov
subl
dec
mov
xor
push
roll
pop
repnz
mov
or
adc
enter
fs
and
lock
jmp
push
cmp
push
or
insb
mov
hlt
repnz
dec
dec
movb
repz
aas
inc
fisubrl
rol
sbb
push
push
sbb
das
out
int3
xchg
mov
or
mov
enter
pop
addl
sub
leave
pop
and
loopne
xor
cmp
in
push
subl
lret
in
inc
mov
lock
test
push
or
mov
push
daa
and
stos
dec
insl
mov
push
mov
inc
lret
mov
out
mov
loopne
xchg
fisttpl
sub
jbe
lods
mov
pop
cmp
xchg
fwait
outsl
push
shll
xor
lret
cld
mov
sti
lea
mov
push
enter
fwait
push
dec
pop
xor
dec
inc
lcall
push
imull
or
out
aad
dec
add
sbb
dec
filds
sahf
sbb
sti
or
push
adcl
outsl
dec
sub
inc
xchg
and
stc
fistps
or
jnp
mov
inc
into
shlb
jae
or
jo
jmp
int3
pop
gs
test
fimuls
or
mov
scas
insl
iret
jns
testb
or
and
sub
arpl
cmpsl
stc
xchg
xor
or
int
mov
addr16
xchg
jg
cmpsb
pop
outsl
or
rcrl
mov
sub
pusha
xchg
or
mov
cltd
mov
fsubr
into
loope
sub
jne
jle
fcomip
push
mov
sbb
mov
dec
fs
lds
and
adc
mov
sbb
mov
test
or
sti
mov
jp
cltd
out
jmp
mov
mov
fdivrl
mov
cmp
jmp
mov
xchg
jecxz
mov
add
jg
sbb
mov
popf
fld
divl
push
cmpb
js
jne
mov
add
cld
addb
je
jns
push
jle
mov
ret
fmull
lods
jns
jp
test
xchg
aam
call
jg
sbbb
jp
loop
mov
insl
add
mov
mov
int
out
pop
dec
inc
mov
adc
adc
mov
mov
mov
or
lods
test
xchg
test
call
xorb
imul
fcmove
mov
loop
and
mov
jp
jae
int
inc
fwait
aad
fldt
sbb
dec
fistpll
pop
cli
out
add
push
dec
js
cs
xor
ds
inc
sbb
inc
add
cmpl
xchg
or
aam
adc
pop
xor
popf
jge
pop
ljmpw
shlb
and
call
addl
push
test
lret
cmp
adc
pop
sbb
sub
addl
pop
lea
pop
sub
inc
ds
inc
dec
xchg
ss
inc
push
outsb
inc
jb
jbe
jp
jle
addb
lret
inc
rolb
inc
fiaddl
inc
loop
mov
xor
inc
or
inc
push
inc
es
jmp
inc
cmp
inc
mov
xchg
nop
test
iret
movb
fmul
test
mov
cmp
push
data16
jl
jp
mov
cmpl
jg
and
dec
or
jge
cs
xor
inc
cmp
xchg
test
lret
arpl
cmp
adc
pop
xor
test
adcb
movsb
fwait
insl
jle
xchg
pop
ficompl
pop
in
scas
pop
mov
ret
pop
or
pop
pop
pop
out
pop
repnz
hlt
pop
pop
push
pop
pop
pop
sub
dec
dec
adcl
dec
popf
or
in
or
pop
cmp
dec
sbb
inc
imul
mov
pop
pop
pop
ljmp
xchg
pushl
mov
movsl
inc
lret
mov
out
sub
xor
cmp
inc
dec
cmc
int
iret
bound
rol
dec
sbb
cmp
andps
ss
adc
adc
rcrl
or
adc
adc
leave
xchg
subl
pop
adc
test
fstl
into
sbb
jle
es
sub
xor
cmp
inc
jecxz
mov
push
inc
sbb
inc
cmpsl
js
outsl
mov
sbb
cmpsb
imul
shld
and
movsb
push
jmp
jb
cmp
dec
xchg
fwait
lret
aam
adc
pop
add
jno
leave
out
mov
and
push
pop
mov
adc
push
add
mov
cltd
arpl
out
aad
fs
shll
inc
and
inc
incb
inc
pop
inc
xor
inc
inc
inc
lea
loop
mov
iret
fcmovnb
ffree
test
mov
les
les
jmp
les
xchg
test
sbb
movsl
inc
and
movsb
and
cld
imul
test
mov
or
pop
jns
subl
xor
outsb
cmpb
and
inc
cli
inc
add
inc
dec
inc
push
inc
pop
inc
popa
inc
fs
sub
cmp
inc
ja
jnp
sbb
adc
aam
adc
pop
popf
fwait
mov
pop
jle
rcrb
pop
loopne
lods
pop
mov
mov
pop
sbb
pop
push
pop
push
pop
xor
jns
pop
js
mov
mov
sub
aam
inc
cwtl
push
movsb
pop
enter
pop
sbb
inc
call
inc
jo
jg
int
fidivl
fnstsw
lods
ds
and
ljmp
les
xor
inc
cmpsb
test
and
or
test
jge
and
sbb
jmp
adc
subl
lods
xor
shrl
pop
insb
call
dec
jmp
adc
and
mov
push
add
sub
sahf
andb
ret
xlat
in
mov
mov
les
les
loope
lods
sbb
out
ja
aam
cmp
inc
mov
inc
repz
sti
inc
add
sbb
sbb
loopne
out
vpsraw
test
cmp
adc
pop
loope
mov
repz
xor
test
push
into
out
insb
jns
or
mov
ret
mov
lock
idivb
adc
jecxz
mov
pop
repz
stos
subl
jmp
xchg
and
mov
popf
push
sbbb
icebp
jle
loopne
mov
out
jp,pn
sarl
call
in
mov
daa
dec
in
pop
dec
push
aas
pop
aas
sub
nop
js
cs
cmp
fiadds
cmpsb
jle
and
lock
clc
jmp
imul
adc
movsb
mov
adc
loope
or
pop
xor
aaa
adc
jae
xlat
xchg
lcall
pop
test
push
cld
adc
xchg
xchg
mov
xor
sub
ffreep
mov
inc
push
inc
adc
xchg
les
les
les
les
les
in
or
cwtl
xor
adc
push
sbb
inc
addr16
or
bnd
push
mov
outsb
jb,pt
jbe
out
mov
imul
push
jmp
jmp
adc
xorl
or
jg
sub
xchg
jle
adc
jl
push
lahf
pop
imul
shll
sub
scas
cmpb
test
jae
leave
sbb
ficoms
lret
mov
mov
lret
in
lret
test
lret
add
dec
lret
gs
das
lret
xor
aas
lret
inc
xchg
mov
add
mov
leave
je
sahf
aad
les
push
and
inc
lcall
cmpsb
idivb
and
xlat
jae
leave
scas
jge
push
mov
sub
xor
cmp
sarl
cmpsb
xchg
subl
fildl
pop
setp
inc
inc
sub
xor
mov
mov
cli
hlt
pop
cmpsb
push
sbb
xchg
test
push
inc
int
imul
and
jns
cs
xor
jl
xchg
mov
push
rorb
jbe
jg
movsl
mov
lcall
decl
inc
pop
mov
mov
add
aaa
pushl
dec
xchg
jl
cs
fnstenv
and
push
addl
push
les
cwtl
xchg
in
lret
leave
sbb
sub
jb
lret
dec
lret
xor
adc
pop
pusha
xchg
sub
push
shll
adcb
and
repnz
xor
cmp
sbb
or
dec
and
das
out
outsl
imul
xor
test
mov
mov
adc
sub
dec
jge
scas
push
ret
or
in
adc
dec
or
push
push
subb
xor
out
addl
or
sbb
xchg
xchg
adc
adc
pop
loopne
test
mov
cmp
scas
test
add
pop
xchg
or
xchg
jns
ja
out
xchg
fdivl
and
outsb
repnz
push
push
mov
aam
adc
pop
rcrb
into
push
fs
mov
jle
xor
or
cmp
push
push
mov
cmp
mov
movsb
outsb
jmp
imul
es
jmp
jmp
sbb
fcmovne
push
inc
outsb
or
int3
rorb
es
sbb
pop
cli
pop
pop
pop
inc
dec
jne
jle
sub
dec
dec
into
pop
shrb
xor
mov
inc
testb
cmpsb
xchg
jle
and
shll
jmp
jmp
jmp
sbb
jge
dec
mov
fwait
add
push
sbb
sub
xchg
jl
aam
adc
rolb
loop,pn
dec
std
aas
pop
cmp
xor
ss
ds
aad
mov
push
sbb
ret
flds
adc
test
mov
inc
push
and
adc
sbb
and
lret
jmp
clc
jmp
jmp
jmp
jmp
add
test
jmp
push
cltd
jns
mov
insb
addl
xorl
enter
test
lret
mov
mov
mov
pushf
xchg
aam
adc
push
dec
sub
push
cmpsl
jle
cltd
jge
and
adc
cwtl
xchg
lea
scas
rorl
adc
jo
sti
pop
push
dec
pop
dec
das
push
aas
push
aas
pop
aas
pop
aas
arpl
cs
negb
dec
jp
subb
ret
test
jb
loop
push
push
fs
out
stos
adc
pop
mov
out
add
jns
jle
push
xor
jbe
outsb
xorb
cwtl
push
pop
sbb
inc
pop
xchg
jp
xchg
inc
adc
pop
mov
adc
push
pop
cli
insl
or
pop
adc
jp
xor
xor
cmp
inc
pop
inc
cmp
inc
mov
pop
ret
add
pop
inc
bound
sbb
cmpsb
mov
movsb
loopne
and
pop
sbb
push
mov
inc
xchg
xor
cli
pop
rorb
sbbb
loop
aam
xchg
in
sbb
or
xchg
lret
out
lret
repnz
divb
xchg
clc
add
push
xor
dec
sub
push
inc
pop
inc
inc
cs
ss
ds
inc
inc
mov
xchg
xchg
dec
cmpsb
mov
or
mov
inc
inc
ficomps
dec
aam
fwait
dec
mov
pop
xchg
push
adc
adc
pop
and
out
push
repnz
xchg
jb
xor
sub
aas
push
aas
push
aas
pop
cmp
dec
data16
insl
cs
push
xor
xor
cs
in
adc
insb
addb
push
outsb
lret
jb
jbe
jp
jle
xchg
xor
xor
xor
xor
ljmp
cmc
mov
adc
sub
cltd
subb
nop
iret
sahf
mov
inc
shl
subb
out
jmp
lea
inc
stos
jne
roll
stos
cs
fs
jp
iret
enter
pop
je
ret
jge
cmpl
jp
or
std
push
ljmp
add
push
inc
push
imul
adc
out
divb
mov
pop
into
incb
jb
movsb
or
push
xor
inc
cs
dec
mov
pop
aaa
pop
call
push
push
outsb
add
sti
dec
dec
dec
inc
popl
cmp
sub
cmc
xchg
mov
aaa
pop
dec
pop
clc
es
push
dec
mov
inc
cmpb
mov
cmp
cld
lcall
cwtl
dec
jge
xchg
je
cmp
jnp
mov
nop
enter
xor
and
cmp
jae
je
inc
repz
mov
data16
jnp
jl
stc
push
sbb
mov
jne
mov
sbb
and
mov
imul
enter
incb
ss
mov
push
mov
call
cmpb
adc
ja
push
sub
cmovs
and
clc
ret
leave
fldcw
cmpsb
jmp
ret
mov
and
mov
cmp
pop
jle
cmp
push
jmp
cmpsl
ret
mov
sub
pop
jl
mov
sbb
xchg
sbb
fsubs
out
in
les
jg
pop
xchg
shrl
repz
inc
add
dec
shll
repz
mov
or
mov
push
mov
cmp
or
fadd
mov
stos
pop
int
lahf
jnp
pusha
pop
cmovno
lods
push
mov
mov
movsb
test
jo
xor
jo
movb
cmp
xor
imul
push
imul
fimull
lahf
mov
mov
jp
mov
cmpsl
jb
scas
in
cmp
aad
jno
xchg
sarb
dec
je
xchg
pop
lret
insb
nop
xchg
fmuls
lea
in
push
xchg
or
js
jns
jp
xchg
es
xlat
or
cltd
subl
jg
jp
pop
jl
sub
mov
xchg
addl
fbld
or
dec
or
mov
pop
sbb
push
jl
fimuls
dec
in
mov
lcall
jge
mov
push
mov
jl
sub
push
xchg
mulb
unpcklps
pop
ja
adc
xor
jnp
leave
push
fadd
xchg
cmp
pop
test
lret
movsb
push
fimuls
lods
test
test
xchg
lcall
scas
test
aas
mov
shll
mov
pop
test
out
xchg
fbstp
mov
fsubs
jb
jns
js
mov
mov
push
pop
fdivs
xor
sub
test
ret
mov
jle
fwait
adc
xchg
push
mov
jbe
dec
fnstenv
jle
xchg
or
sahf
mov
lcall
sbb
push
lds
rcll
add
daa
je
vpmacsdqh
shlb
sarl
pop
and
ret
outsl
int
bound
push
sahf
fimull
rcl
stc
mov
jnp
cmpsl
into
sar
out
sarl
pop
scas
fsubr
mov
jae
xchg
xorl
jnp
test
ja
aad
mov
rcl
pcmpeqw
pop
insl
scas
xchg
jg
int
mov
les
sbb
cmc
sbb
cmpsl
mov
shrb
cmc
cmp
addb
mov
cli
shrl
cmp
jle
ja
iret
js
jae
mov
lret
aad
ret
jno
sbb
ja
iret
jl
leave
mov
divb
filds
mov
arpl
ret
mov
jle
xchg
xor
xor
jne
mov
jnp
sahf
mov
repnz
cltd
in
fildll
mov
cmp
imul
aam
mov
cmpsl
scas
mov
mov
mov
adc
lret
fsubrs
cli
mov
int3
sbbb
push
fldcw
das
les
cmp
xchg
leave
scas
mov
arpl
lods
cmpsb
rolb
and
and
imul
mov
lods
lods
push
dec
scas
in
cmpsl
mov
mov
nop
sti
push
mov
subb
fcomps
sub
dec
loope
sbb
adc
mov
adc
lret
lods
mov
jmp
subb
xchg
popf
xchg
outsl
mov
jl
les
lods
fnstenv
in
push
sub
fdivl
aam
clc
out
ja
xor
pop
push
sbb
lahf
fistps
popf
mov
in
cmp
mov
jnp
inc
shr
and
insb
mov
adc
adc
iret
int3
sbb
insb
sbb
int3
test
mov
mov
jg
lret
jne
cmp
mov
push
mov
jg
adc
inc
aas
inc
xchg
jnp
in
sub
jns
js
es
jg
js
xchg
push
sbb
pop
sbb
adc
and
dec
cmpb
mulb
xchg
pop
iret
adcb
jns
cmpb
punpckhbw
xor
daa
jge
xchg
js
and
and
jle
cwtl
mov
sbb
out
dec
in
cmp
dec
dec
mov
aam
imul
lods
xor
push
lea
xor
pop
pop
jnp
pusha
addb
mov
scas
sub
xchg
je
test
subb
mov
jns
pop
mov
cwtl
clc
subb
sbb
lcall
ljmp
fbstp
cmp
adc
ljmp
dec
scas
ja
mov
jb
or
jns
test
push
stos
adc
adc
out
jb
shrb
fbld
add
mov
mov
in
stos
pause
pusha
stos
in
lret
sbb
cli
mov
sub
std
loope
inc
inc
pop
push
iret
xor
insb
icebp
pop
cmp
mov
mov
xor
je
or
push
jle
lods
mov
daa
roll
lock
movsb
xchg
push
mov
jns
or
fcompl
sbb
push
cmpsb
movhps
in
imul
add
fnstsw
sahf
std
adc
mov
adc
fadds
in
int
mov
mov
xchg
fwait
in
push
jp
cmpb
or
je
test
mov
sbb
mov
mov
mov
lahf
orb
addl
dec
jge
jp
cwtl
dec
es
out
cmpsl
mov
mov
orb
jns
dec
or
aad
mov
movsl
enter
push
fsts
out
loope
mov
lods
sbb
jne
fwait
cmp
into
sbb
scas
jae
adc
std
insb
sbb
in
push
cmpl
pusha
fistps
mov
insl
aad
jbe
and
sbb
int3
insl
mov
and
jl
int
unpckhps
pop
sbbb
movsb
stc
jg
push
shrl
aad
adc
popa
scas
into
xor
iret
test
test
loope
cs
dec
scas
and
icebp
xchg
push
cld
jle
std
mov
and
out
mov
dec
inc
ret
jns
mov
jne
lahf
dec
sub
cmc
lds
aaa
mov
pushf
mov
push
es
jo
iret
movsb
in
dec
outsb
lds
jnp
jmp
jb
push
fisttps
aam
idivb
jae
pop
je
xlat
stos
insb
cmpb
mov
cmp
or
aad
lret
out
fdivr
cmpsl
jg
scas
idivb
nop
loope
fildl
xchg
subl
int
pop
test
xchg
in
xor
out
lahf
jno
pop
xchg
inc
pop
fdivs
sub
in
push
jae
es
push
and
add
pop
pop
sbb
push
add
int
popf
jne
fbstp
add
push
nop
jnp
ror
fildl
orl
insl
call
add
addr16
das
pop
cwtl
cmpl
sahf
test
xor
sbbb
pushf
jbe
sub
mov
sbb
fldt
jbe
in
cmpsl
stos
ret
cli
mov
das
test
mov
jl,pt
jle
mov
lods
mov
mov
xchg
test
adc
je
sub
shlb
int
das
in
nop
in
xchg
xchg
mov
jle
dec
jge
mov
jns
lock
push
push
scas
cmp
scas
hlt
pop
sub
push
push
push
sahf
ds
bound
push
je
push
jnp
lods
lods
aad
mov
imul
jae
cmp
aam
push
and
fstpt
icebp
rclb
les
mov
jp
jns
movsl
sub
lea
add
movsl
repnz
sbbl
aas
inc
int3
xchg
adc
loope
sti
pop
mov
add
xorl
xorb
xor
or
imul
xchg
jecxz
stos
mov
xchg
mov
scas
mov
cwtl
mov
mov
fdivp
push
mov
out
imul
push
cmpsl
jne
jnp
scas
pop
mov
dec
sbb
adc
pop
jne
jge
jg
sub
int3
mov
outsl
jns
push
in
ret
sbb
xchg
xor
testb
mov
je
call
mov
pop
push
push
jns
mov
sub
mov
sti
insl
mov
and
cs
or
adc
cmpsl
js
and
cmpl
jmp
cmc
nop
mov
mov
stos
jl
xor
xchg
jp
xorb
scas
jns
push
sarb
pop
lret
mov
sbbb
rorl
pusha
aad
cmpsl
dec
jo,pn
stc
jg
rcll
and
jle
jge
push
jns
movsb
out
test
clc
into
jnp
mov
cmp
xor
enter
test
xchg
iret
pop
lock
mov
dec
fmulp
inc
add
inc
leave
fiadds
shrl
and
insl
cmpsb
mov
ja
mov
inc
clc
dec
push
out
jmp
jle
daa
or
lods
rcrb
push
in
pusha
cmc
sbb
sbb
movsl
jno
movsb
push
sbb
cmp
js
adc
mov
and
addr16
or
sbb
inc
js
test
fs
cmp
cld
mov
sbbl
mov
mov
popa
mov
test
lcall
jnp
fcoml
mov
adc
lcall
jo
sbb
and
and
orl
jnp
mov
xchg
jne
mov
pop
or
int3
mov
cmpsb
push
mov
jno
call
mov
stos
lcall
pop
fs
and
jo
inc
xor
icebp
sahf
fbstp
and
xchg
addl
in
jl
add
sbb
xchg
push
mov
mov
inc
cmp
jnp
xchg
xor
jecxz
xor
mov
js
sbb
je
adc
je
jl
xor
fdivrp
jp
jge
xor
and
xchg
cmp
jnp
inc
ja
pushf
iret
pop
jnp
outsl
js
inc
jle
push
jl
fdivs
incb
pusha
sub
das
test
sbb
pop
lods
das
jl
and
ret
aaa
fisubl
ja
rorb
scas
fmuls
out
insl
jg
data16
fnstcw
xlat
je
mov
pop
pop
les
push
outsb
xchg
and
push
xorl
jp
shr
daa
outsb
pop
or
in
movsb
cmp
out
or
out
cmp
pop
subb
inc
push
pop
sub
xchg
std
push
jo
or
fdivp
sub
std
inc
arpl
ret
loope
add
pusha
push
icebp
gs
test
inc
xlat
mov
mov
pop
jb
adcb
repz
das
cmp
mov
arpl
jge
es
lret
push
cmp
cmp
and
std
inc
shll
sbb
repnz
jp
jl
mov
add
jnp
push
pop
pop
adc
pop
jae
mov
mov
jnp
sbb
negl
and
call
jle
subl
mov
jns
dec
fsubl
mov
movsl
loop
push
xchg
out
fiaddl
pop
and
pusha
fldlg2
loop
mov
scas
push
mov
outsl
aaa
xor
arpl
inc
add
xchg
std
cmpsb
aaa
add
sub
aad
and
jecxz
clc
mov
inc
into
std
mov
pop
xor
in
mov
icebp
dec
inc
sbb
aad
jnp
mov
add
xchg
pushl
and
jle
jge
jl
ficompl
add
ds
jmp
addl
xchg
movl
das
mov
sbb
in
xchg
mov
push
mov
pop
sub
pop
cmp
sub
pop
mov
in
insl
pusha
xchg
sbb
lods
mov
cwtl
xchg
les
sbb
add
xor
lret
mov
rcrb
jmp
sub
scas
xorl
icebp
lea
ss
sbb
jno
push
flds
jno
jns
in
jp
addl
out
out
inc
cmp
inc
and
std
fsubl
insl
nop
cmp
jl
out
or
scas
mov
mov
sub
jge
cmp
lret
mov
shl
insl
andl
xchg
leave
stos
rorb
push
les
mov
and
jnp
push
add
pop
or
fildl
pop
lds
lahf
out
aas
inc
sbb
ret
hlt
adc
push
ja
loope
cmp
mov
jecxz
cmc
add
insl
popf
jmp
lcall
push
and
cld
rcrl
mov
push
sarl
aas
jl
and
jge
in
mov
cmc
push
sub
cmp
daa
jbe
jp
fadd
jg
xlat
and
fidivrl
fs
sbb
je
cltd
jge
rclb
sub
mov
andl
daa
cmp
js
andl
in
fsts
push
jle
call
xchg
loop
loopne
adc
fistpll
sarb
jae
cwtl
pop
aas
outsl
pusha
jbe
outsl
xor
jns
aad
fcoms
jle
rcll
sub
test
in
and
jae
adc
insl
out
pop
pusha
mov
jl
in
cmp
aaa
xlat
clc
stos
icebp
jb
pop
stos
pop
jne
inc
arpl
inc
jns
es
mov
pop
dec
rcrb
inc
scas
pop
cmp
dec
lods
cmp
aas
out
mov
cmp
subb
jae
sub
lcall
push
cmp
lcall
fdivrl
dec
xchg
cmpsb
mov
inc
insl
rcrl
aam
cld
sbb
addl
in
sbb
mov
pop
rorb
and
loope
pusha
and
pop
in
inc
aaa
dec
pushf
insl
fistpll
and
or
out
scas
mov
leave
aas
pushf
jne
mov
mov
es
fcoml
fcmovbe
mov
sarb
and
mov
inc
shl
jg
cwtl
and
notb
mov
fisttps
mov
cs
test
xorb
lahf
fnsave
stos
outsl
and
and
push
fidivrs
addl
shl
xor
fs
pop
mov
lahf
xor
orb
inc
arpl
pop
inc
and
jne
repz
pop
pop
and
cmp
pop
pop
ss
cmc
movsb
xlat
loope
ds
xor
pop
negb
sub
arpl
push
data16
pop
shlb
mov
enter
ret
sbbl
jle
cmp
push
enter
jge
insb
loop
loopne
push
ds
ret
mov
mov
mov
jnp
lods
cmpb
pop
out
into
repz
into
mov
mov
data16
xchg
push
fs
cmp
shrb
mov
cmp
lret
jnp
xchg
fcmovnu
ret
jp
sarl
mov
mov
pop
sub
jp
ret
xchg
into
mov
cltd
enter
shr
pushf
jns
loop
fdivrs
jb
mov
push
movsb
test
int
sbb
lods
fnstcw
leave
mov
aad
faddl
push
mov
push
mov
aam
test
mov
sarb
jle,pn
fidivl
adc
sub
movsl
loopne
into
ret
es
mov
ret
jge
adcl
aam
mov
fisttpl
mov
sub
xchg
shll
rolb
dec
stos
mov
call
aas
xor
jg
inc
xchg
mov
mov
into
ret
aam
adc
xlat
mov
mov
shll
mov
jp
leave
cmp
push
mov
data16
iret
rcl
ja
fnstcw
int3
add
mov
subl
sbb
dec
loopne
sarl
mov
leave
and
or
mov
fnstenv
jecxz
jg
mov
mov
fbstp
rolb
xchg
mov
xlat
mov
mov
sbb
fdivl
lods
fbld
lret
loope
mov
data16
push
aas
push
loop
rorl
mov
aad
es
fnstcw
add
ja
mov
aas
scas
mov
sarb
fcmovnbe
mov
int3
jle
test
xchg
fst
sarb
lods
movsl
sarb
sbb
into
mov
scas
jp
loopne
jl
xor
jecxz
xlat
out
xchg
lods
fidivrs
es
xlat
fcmovb
or
fwait
ja
into
dec
jnp
mov
ss
jl
ret
mov
mov
scas
jns
stos
insl
int3
xchg
jp
int
mov
cwtl
movsl
jae
ret
scas
iret
rclb
fnstsw
xlat
mov
xchg
sarl
fsubl
loope
sub
imul
inc
sbb
rcr
or
fisubrs
mov
decl
scas
xchg
mov
mov
xchg
jns
ret
repnz
call
fwait
jge
test
mov
mov
int
pop
rcr
outsb
pop
jp
icebp
jg
outsl
loop
fidivrl
test
jecxz
test
ss
loopne
mov
ret
scas
jecxz
jp
jp
fmuls
iret
xchg
and
mov
mov
xlat
loopne
jnp
test
sub
mov
es
loope
jle
fisttps
mov
scas
rolb
jecxz
fstpt
fiadds
fisubrl
xlat
add
xlat
ret
mov
iret
jp
insb
mov
int
scas
js
mov
int3
scas
loopne
ffree
sbb
test
outsb
mov
xchg
shll
add
sahf
loop
mov
rclb
sahf
xor
ficoms
into
roll
mov
sar
mov
mov
adc
mov
shll
repnz
es
push
leave
dec
pop
inc
loop
jbe
mov
mov
fdivs
pop
subl
mov
ret
in
or
leave
and
int3
enter
repnz
fmuls
jg
iret
jo
or
jo
xor
pop
or
fdivrs
cmpb
xchg
enter
jns
mov
fucom
xchg
leave
jl
inc
scas
scas
aad
fsubs
popa
xchg
leave
adc
or
jnp
jg
sbb
rclb
notl
dec
lods
jns
ljmp
xor
leave
aad
neg
xor
adc
mov
popf
into
adc
leave
dec
inc
mov
int3
movsl
fstpt
adc
fsubrs
xchg
mov
aad
add
bound
loop
bswap
and
scas
enter
adc
ror
mov
mov
bound
shlb
lret
loop
fiadds
fsub
loop
add
push
jge
mov
mov
xchg
iret
ret
jl
adc
rcl
ret
aam
sub
xor
and
daa
xlat
add
lods
js
test
jp
mov
fadds
loopne
lods
dec
xchg
sbb
jg
cli
imul
fisubrs
cmpsb
iret
pop
aam
cmp
sahf
int
lods
mov
dec
cwtl
pop
add
push
lcall
adc
push
adc
pop
fnsave
inc
scas
repnz
inc
jg
inc
decb
insl
packsswb
push
mov
mov
and
roll
inc
xor
aad
mov
mov
ja
ljmp
ret
mov
ret
xchg
xor
mov
mov
adc
test
test
aam
mov
cmp
mov
in
fcomp
mov
xlat
rorb
int3
sub
iret
into
aam
int
enter
cmp
rcl
shrb
xor
pop
into
mov
frstor
movsl
cmpsb
xor
rcr
lods
dec
scas
lahf
push
movsb
mov
shlb
lods
fxch
imul
fs
sahf
fistpll
repz
jp
jle
loop
loope
jecxz
mov
fnstcw
sarb
andb
es
dec
aam
fstp
mov
cmp
lods
add
mov
leave
les
test
aad
mov
xchg
lret
enter
test
int3
leave
ror
scas
fisttps
lods
jl
outsl
or
mov
lods
mov
out
seta
js
mov
jl
movsb
sub
fcomp
dec
or
mov
test
lret
shl
mov
or
mov
jns
shrl
xchg
xchg
ret
push
add
test
int3
pop
lret
mov
scas
mov
cmpsb
es
mov
fisttpll
and
mov
int
cmpl
mov
mov
and
cs
and
movsb
adc
push
scas
int3
loope
fidivrl
shrl
cwtl
shlb
mov
mov
mov
lods
lret
iret
fstl
mov
inc
adc
xchg
xchg
iret
add
mov
xlat
shll
jmp
jg
js
mov
shlb
mov
test
out
mov
mov
lods
enter
xlat
cli
xchg
lret
jecxz
pushf
enter
shlb
mov
or
mov
lods
push
adc
xchg
xor
jp
mov
test
jns
loope
pop
push
cmp
inc
flds
mov
dec
mov
mov
jmp
std
xchg
js
shl
mov
loopne
cmp
inc
jecxz
and
add
ljmp
aam
push
sarl
adc
es
fmul
enter
mov
xchg
rorb
pushf
into
mov
cwtl
fisttps
fildl
xchg
xchg
pop
mov
rcrl
pop
push
xor
test
shl
lret
addl
xlat
loope
mov
push
xchg
push
push
es
mov
ret
aam
xchg
jns
rorl
adcl
out
mov
jp
lods
fmuls
sub
dec
xor
rcrl
lret
mov
in
sbb
mov
fidivrs
scas
xlat
dec
test
adc
mov
mov
rcr
fidivl
scas
or
loope
inc
jle
fisubs
adc
inc
lcall
ret
mov
stc
fcompl
scas
or
sarl
mov
jns
aad
fnstcw
mov
mov
iret
ds
mov
cli
push
sbb
mov
loope
test
cmp
pushf
mov
sbbl
ret
xlat
enter
mov
test
jg
inc
sahf
in
pop
loop
mov
jmp
cs
mov
xchg
fs
mov
push
fdivrl
pop
mov
xor
cmp
add
enter
ret
packuswb
aad
leave
xorb
ljmp
dec
pop
scas
ja
or
dec
enter
nop
mov
mov
aad
inc
jns
mov
scas
jp
mov
jge
cs
mov
ja
dec
jo
lods
jge
sbbl
mov
test
push
mov
adc
dec
into
mov
scas
or
js
orb
dec
rorb
ret
cli
xor
xorl
jg
fidivrl
cs
dec
inc
lcall
mov
sub
and
jne
out
push
fwait
cwtl
enter
test
cli
mov
mov
mov
or
loop
movsl
fidivrs
pop
xchg
mov
xchg
popa
iret
inc
leave
xlat
mov
ret
scas
pop
cmc
dec
sti
mov
jns
mov
jecxz
data16
sub
icebp
dec
mov
mov
add
add
mov
fcomps
adc
push
shl
mov
fmul
mov
ret
nop
sbb
cmpsl
mov
fisubl
sub
rcl
mov
stc
mov
push
xorb
push
or
cli
mov
mov
stos
lcall
fidivl
sbb
xlat
mov
rcr
sbb
jecxz
ja
inc
test
jl
leave
jp
shrl
lea
or
stos
sub
fcompl
loop
pop
mov
ret
mov
ja
out
rcrb
inc
shrl
xor
rcr
loop,pn
movsl
int3
mov
jnp
scas
jl
jge
or
je
in
int3
xchg
cmp
lods
pusha
adc
mov
add
xchg
faddp
je
clc
cmpsb
pop
or
jbe
mov
jecxz
mov
scas
xchg
sarb
or
loop
cmp
xor
add
sbb
fists
mov
jge
or
dec
mov
and
cli
push
rcr
mov
fdivrl
adc
sti
jno
adc
jae
dec
cmp
lds
fmuls
mov
fwait
jo
mov
fsubrl
clc
shlb
nop
mov
sbb
dec
xchg
iret
mov
xchg
movsb
mov
jp
jp
lods
iret
fcmovb
jl
and
insb
ror
xchg
fstp
loope
orl
mov
icebp
movsb
or
pop
or
scas
xor
inc
jg
cmpsb
ja
add
and
xor
fsubl
test
mov
es
scas
aam
lret
test
and
enter
cmp
mov
sarl
dec
and
sbb
ficoms
fcomps
mov
int
fnstsw
cmpsl
fldcw
jle
ja
mov
rorl
mov
fucomi
sbb
fisubrs
sarb
mov
loop
jnp
shrl
shrb
mov
iret
jp
jl
int3
mov
mov
rcr
or
jl
loope
ret
ficompl
sbb
repz
mov
sub
dec
test
ficomps
testl
shrb
shlb
mov
xlat
push
mov
dec
test
test
dec
pop
test
add
test
mov
add
dec
dec
mov
loope
xor
test
scas
aam
aam
iret
int
or
lods
xorb
lods
scas
and
jb
mov
mov
mov
leave
jno
jecxz
xlat
aam
sub
sbb
arpl
rolb
imul
ja
mov
or
mov
push
es
scas
dec
popa
fildll
test
repnz
mov
scas
addl
sub
iret
lods
ljmp
loop
mov
aad
jge
jp
jp
lods
jl
fmuls
stc
iret
sbb
ror
mov
sbb
out
arpl
into
lea
rorb
jmp
rorb
xor
test
dec
rcl
or
loope
mov
int3
ret
xlat
enter
inc
add
and
sahf
loope
rolb
lods
fdivrl
pusha
repz
fisttpl
adc
test
sbb
mov
into
mov
ljmp
jb
push
cmp
sbb
mov
mov
fdivrs
jno
cmp
dec
call
mov
jecxz
ret
xor
xor
scas
mov
mov
jns
or
subb
ror
xlat
jbe
mov
jb
movl
pusha
leave
ds
iret
nop
int3
mov
rcrl
lahf
loop
add
mov
mov
sub
ja
out
fs
popa
jg
pop
sub
jge
jo
sarl
mov
fldcw
or
dec
filds
ja
in
loop
scas
xchg
mov
jnp
xlat
adc
ss
imul
jns
mov
jno
push
iret
rolb
int3
sub
mov
filds
mov
and
sarb
cmp
loopne
insb
test
ja
stc
mov
fnsave
fwait
cld
repz
inc
mov
int3
test
jl
inc
push
faddl
mov
mov
jg
loopne
jp
imul
test
sbb
push
ja
or
aad
mov
scas
xlat
leave
mov
shl
das
dec
gs
pop
push
int
sbb
fdivrs
scas
fisubrs
mov
cmp
int3
ja
jg
push
mov
loopne
sarl
add
shrl
test
ja
push
bnd
or
xlat
jns
rcr
add
lods
ret
jle
and
fcmove
jp
adc
fwait
int3
mov
mov
or
mov
mov
in
cmp
mov
rcr
xchg
fisttpll
mov
cltd
scas
mov
mov
loope
aam
test
or
ret
loop
in
loopne
mov
dec
sub
test
ljmp
fldt
scas
xor
jne
mov
ljmp
imul
sti
xlat
adc
shlb
fsubrs
fldt
mov
testb
and
cmp
mov
xor
sub
movsb
lods
jns
cwtl
jge
pushl
push
mov
flds
stos
subl
push
mov
jecxz
push
pusha
dec
sarb
add
jb
lods
lea
add
cli
in
js
test
or
mov
add
fcoml
push
sarb
shlb
scas
sub
ja
inc
sarb
loope
dec
xchg
loop
ljmp
ret
mov
sar
cli
mov
jle
iret
mov
mov
jecxz
daa
ljmp
js
outsb
xchg
aam
je
jno
adc
lods
popf
jnp
es
sbb
shlb
or
leave
ror
lods
mov
dec
dec
dec
fxch
mov
jge
jle
pop
push
scas
cmp
enter
adc
stos
mov
mov
sarl
jl
in
xchg
mov
push
mov
and
loop
sbb
aad
mov
mov
subl
mov
mov
into
jnp
adc
mov
jge
loopne
enter
sub
rcr
dec
mov
ret
loope
sub
or
push
mov
mov
les
and
pop
int
stos
fcmovb
andb
fld
mov
xchg
and
test
andl
jns
mov
mov
jne
xor
leave
push
lahf
jge
jl
fnstcw
xchg
and
test
cmp
and
lods
cmpl
jns
push
inc
jns
and
mov
mov
xorl
mov
nop
mov
mov
pop
enter
or
and
mov
push
je
dec
insl
mov
mov
mov
je
mov
mov
mov
mov
jl
pop
mov
fsts
xchg
nop
push
mov
jp
loopne
mov
sub
out
jnp
mov
fcoms
mov
jnp
mov
fadds
pop
nop
fbstp
lods
test
inc
scas
fidivl
inc
scas
sub
addr16
jp
mov
sbb
jg
int
leave
cld
jnp
rcl
cld
lock
cmpl
inc
movsb
jp
ret
fcmove
cmp
push
dec
cltd
fidivrs
mov
leave
jg
int3
jns
mov
dec
rorb
pushf
xor
dec
loopne
out
mov
mov
mov
int
outsb
sbb
pusha
outsb
jnp
sbbb
add
fdivrs
fmul
and
dec
jbe
subb
cs
pop
jbe
pop
fdivrs
jnp
fst
loop
mov
mov
or
push
mov
mov
sbb
mov
fmul
jns
scas
and
lods
mov
mov
subb
mov
test
rcr
adcl
adc
pushf
lea
or
sarl
in
nop
mov
inc
test
xchg
sarb
xor
and
insb
rol
int
mov
dec
mov
rcr
inc
jns
mov
fidivl
mov
mov
adc
sbb
cmpl
iret
loopne
adcl
mov
jns
out
cs
idivb
jbe
enter
cli
add
sbb
cli
sbb
jb
cli
xchg
dec
rcl
jb
popa
or
sarb
outsb
mov
mov
jl
shrl
leave
lods
loopne
not
fnstenv
icebp
mov
xchg
ret
mov
adc
pop
test
fisubrl
or
mov
aam
sarl
jns
mov
or
mov
jo
loopne
jl
mov
dec
mov
jg
pusha
or
mov
mov
mov
out
sub
cltd
dec
mov
mov
jecxz
into
xor
xor
leave
pop
jns
pop
repnz
repz
mov
in
lret
jle
repnz
mov
sahf
aad
lret
xchg
ror
loopne
mov
fwait
aam
cmp
lea
fidivrl
rorl
ljmp
xchg
into
xchg
test
sbb
ljmp
in
or
rorl
shlb
in
mov
bound
mov
jl
das
stos
icebp
mov
sub
leave
mov
mov
xchg
pop
add
xchg
push
adc
insl
ret
iret
adc
cmp
jp
xchg
leave
xor
sub
ss
ja
dec
jb
mov
repz
loopne
add
lods
loop
fcom
jns
scas
and
stos
mov
adc
push
and
xor
test
shl
xchg
sarb
js
xchg
orl
aaa
jg
sbb
cmpb
jl
aaa
or
mov
mov
ret
sarl
mov
fnclex
xchg
add
ret
lods
ja
fcmovnu
fidivs
lods
lods
aad
scas
xor
int3
int
test
mov
out
movsb
fistpll
ja
mov
roll
mov
mov
jnp
int
pop
leave
in
test
add
mov
mov
lods
rcl
outsb
imul
or
ret
stos
mov
enter
jecxz
fsubp
push
mov
xchg
dec
insb
rol
push
cli
stos
shlb
pop
mov
shrb
ja
cmp
movsl
mov
ret
int3
jp
dec
fcmovnb
cmp
push
and
mov
sub
fucom
cmp
jg
mov
loope
fninit
fcmovu
push
out
rcl
cmpsl
push
mov
aad
mov
lods
dec
mov
into
push
jle
js
and
mov
xchg
mov
leave
fmull
sarb
test
add
and
subl
mov
and
loopne
fcomip
orb
adc
mov
fcompl
aam
sub
jnp
pop
mov
jae
xchg
imul
shlb
inc
xlat
fadd
mov
jge
or
cmp
jb
roll
xor
pop
adc
xchg
mov
jp
es
out
mov
ret
sbb
lods
into
mov
cmpsl
inc
xchg
insb
sbb
je
jl
lcall
dec
leave
mov
jp
jnp
jl
push
mov
lea
aam
arpl
push
xchg
in
lea
dec
sahf
xchg
jp
or
mov
scas
fdivrl
ret
and
sbb
adc
mov
mov
fs
jb
lods
mov
lods
xlat
int3
sbb
mov
xchg
loop
adc
in
imul
mov
push
not
testb
iret
mov
js
cmpsb
fldcw
fimuls
into
sub
fwait
sbb
sarb
mov
setae
orl
jle
xor
fnclex
cli
push
mov
movsl
int3
fnstsw
mov
jo
mov
repnz
fidivrs
call
dec
and
mov
movsl
shlb
jecxz
mov
push
and
aam
out
push
jb
int
and
cmpsl
xchg
fistpll
iret
loop
jmp
adc
sub
mov
loope
xchg
and
and
nop
mov
sub
ret
push
scas
xorb
sub
sarl
mov
imul
sarl
push
iret
mov
aas
xchg
int
aaa
mov
hlt
or
lods
cmp
hlt
es
sar
mov
jge
mov
scas
ret
rcl
in
push
cli
push
sbb
mov
loop
sarb
js
mov
mov
mov
pop
stos
lods
sarb
mov
mov
imul
xor
or
mov
aam
lods
rcl
dec
les
popl
jns
sub
jl
and
fidivrl
cmp
mov
jmp
fidivrs
xchg
inc
mov
addr16
dec
pushf
jns
mov
mov
scas
lods
out
pop
mov
mov
mov
mov
fst
push
mov
stc
sbb
jae
stc
jge
into
repnz
leave
dec
fidivrl
fnstenv
xor
xor
jecxz
ja
mov
push
or
xlat
enter
add
mov
loopne
mov
sub
das
fs
lret
add
ret
mov
and
cmp
mov
int3
cmp
imul
dec
lahf
iret
mov
sbb
mov
fidivrl
mov
ret
test
lret
lods
xorb
mov
jns
les
jge
pusha
mov
sub
fsubrs
ret
mov
mov
pop
adc
insb
js
pop
xchg
lods
movsl
sbb
ret
fdivrl
mov
loope
xchg
or
mov
fsubrs
movsl
ret
test
mov
cmpsl
push
sbb
sbb
test
shrb
cld
xchg
jns
fcmovu
out
dec
lods
ret
adc
jo
sbb
loop
cmpsb
adcl
sarl
jl
inc
pop
mov
mov
ja
mov
shrl
jl
adc
mov
cwtl
mov
loopne
dec
mov
inc
popa
fiadds
rcrb
mov
jp
mov
mov
mov
sbb
adc
mov
ret
mov
scas
add
orl
dec
std
test
rcr
pop
insb
int
lahf
rcrb
lods
aad
sub
lods
test
hlt
jle
mov
enter
mov
adc
pop
mov
ret
fnstenv
inc
mov
es
loop
lcall
and
or
pop
and
icebp
lcall
mov
fisttpll
aad
mov
and
mov
cmp
dec
or
xor
test
sbb
mov
jne
leave
dec
rcll
jge
js
lods
fwait
push
int
sarb
scas
sahf
inc
dec
xchg
fidivl
xorb
lods
adc
adc
xchg
fxch
es
sarl
dec
mov
loop
js
je
jmp
loopne
xlat
ljmp
mov
lods
sbb
test
aaa
inc
aad
leave
add
lahf
int
frstor
fcmovbe
jg
jecxz
call
and
inc
movsb
xlat
fst
xor
jl
ja
loopne
dec
sbb
mov
aam
scas
leave
cmp
sbb
int3
aam
jae
mov
pusha
lret
jg
nop
inc
mov
lock
jge
jl
xor
adc
mov
hlt
aam
xchg
lods
sarl
and
leave
lods
push
rorl
xlat
or
pop
push
orb
loop
out
dec
lret
sub
or
jle
adc
cli
or
scas
ja
mov
out
leave
inc
shll
mov
jns
insl
inc
shll
decb
int3
mov
insb
fcmovnu
lret
pushf
mov
aad
sbb
push
ret
test
jle
mov
popl
adc
mov
jns
lods
push
lcall
dec
stc
jle
mov
daa
jns
pop
fidivrs
stos
jbe
mov
es
aas
pop
leave
mov
movsl
int
scas
xchg
loopne
adc
aad
sarl
mov
orb
and
mov
popa
scas
inc
mov
lret
adc
mov
add
xchg
lahf
mov
dec
jns
push
fmull
fisttps
fnstenv
lods
sub
out
adc
sub
mov
es
int3
jl
fmul
shrb
jns
shr
jg
fsubr
jns
mov
sbb
or
loope
mov
mov
jg
aad
push
mov
lods
into
loope
or
test
ds
enter
mov
mov
adc
loopne
stos
sti
mov
jns
jecxz
xchg
mov
js
mov
cmpsb
jbe
iret
addr16
mov
ret
daa
pop
cwtl
mov
pop
pop
mov
aaa
xlat
fildll
test
int3
enter
call
jns
pop
push
add
mov
js
lods
pop
pop
rcl
mov
fnstenv
out
pop
loopne
sti
jb
sbb
jnp
pop
or
addl
lods
rcll
movsl
mov
jecxz
xchg
into
enter
icebp
loopne
or
scas
jecxz
mov
int3
int
push
adc
add
lods
neg
loop
fcmovu
or
ret
cli
inc
and
movsl
mov
pop
int
outsl
jge
jecxz
orb
fistpll
lahf
into
dec
mov
iret
ficomps
rorl
mov
aam
jns
and
loop
and
test
loopne
xchg
stos
scas
xchg
pop
mov
mov
pop
mov
ror
cmc
mov
mov
test
inc
inc
ja
int3
add
sbb
sub
add
mov
aaa
iret
mov
cmpsb
mov
pop
ja
test
fmul
or
sarl
mov
dec
adc
jp
mov
mov
dec
lods
xchg
mov
mov
aam
mov
inc
push
dec
in
ret
in
lahf
int3
ljmp
testb
cmpl
xor
jb
mov
outsb
jp
jbe
cmpsb
rclb
sbb
paddusw
mov
mov
shlb
rcl
cmp
jmp
xchg
clc
sub
mov
dec
cmc
mov
jp
fxch
test
sub
ret
add
movsb
pushf
lods
movsb
add
enter
rolb
ljmp
int
inc
leave
adc
enter
rcl
aaa
pushf
mov
fisubs
mov
xchg
mov
xchg
mov
std
loope
sub
rcll
cmpl
je
or
jge
ret
sub
das
arpl
mov
sti
xchg
xlat
or
enter
ret
jl
mov
sbb
stos
mov
dec
sbb
aam
cs
sub
inc
je
int3
test
mov
cmpb
mov
lahf
fnstenv
es
test
dec
outsb
cmp
cli
lock
cmp
test
subb
int3
pop
sahf
es
loop
jnp
xlat
loope
test
shrb
mov
mov
scas
jecxz
mov
cwtl
sarl
cwtl
fldcw
dec
mov
aam
ret
mov
ja,pt
dec
js
xlat
mov
dec
mov
jg
es
mov
ror
jmp
push
test
ret
leave
fstpt
jl
jae
mov
xchg
sarl
mov
mov
add
lds
addr16
mov
mov
jecxz
sbb
sarl
imul
mov
mov
xor
arpl
sub
or
loop
fcmovu
ljmp
mov
stc
out
xor
das
test
enter
mov
adc
pop
pop
or
jecxz
mov
ror
test
sbb
pushf
push
cmpl
mov
iret
mov
sahf
shrb
test
pop
xchg
adc
sbb
orb
faddp
lods
add
imul
scas
stos
inc
mov
mov
rolb
sbb
enter
in
mov
ss
out
xor
sub
and
xor
int
jg
push
cmp
mov
mov
insb
cwtl
mov
mov
ror
js
test
dec
int3
mov
xlat
mov
loop
sbb
cmpb
fnstenv
xchg
into
ret
into
push
dec
sub
push
mov
in
mov
jns
mov
rorl
ljmp
jbe
mov
xchg
mov
xchg
jp
xchg
push
jg
jbe
fidivrs
dec
jns
test
mov
enter
andl
dec
sub
leave
mov
mov
sarb
xchg
fnstsw
fimuls
stc
out
cmp
xchg
loope
test
jnp
mov
jno
xchg
cmp
fstpt
dec
pushf
rcrl
lea
int
xlat
sahf
pusha
sbb
mov
jg
mov
adc
pop
mov
ret
shlb
test
loope
and
xchg
test
sarb
push
test
and
lea
adc
jp
ret
fidivrs
adc
push
loop
fsubrl
inc
jl
test
inc
sarl
ret
push
ficompl
mov
iret
dec
das
test
add
jmp
aam
sbb
dec
mov
mov
es
ret
xor
xchg
jbe
jo
imul
mov
sbb
jb
test
test
jl
inc
jl
adc
ret
movsl
mov
mov
jle
jg
mov
mov
cli
pop
pop
es
mov
adc
call
pop
mov
ljmp
fwait
and
adc
int3
mov
sub
aas
jbe
mov
scas
push
ret
push
jp
pushf
lods
int
lret
test
insb
and
jle
dec
mov
rcr
in
mov
fildl
lret
mov
jmp
lret
test
shll
pushf
arpl
push
xchg
fistpll
or
xorl
movsl
out
add
cmp
scas
jp
scas
fistpll
push
xchg
lods
push
sbb
loop
cmp
loopne,pt
jl
fcmovnu
fidivs
cwtl
jae
out
pop
addr16
or
sub
roll
mov
movsb
sub
dec
ljmp
movsb
rorl
inc
movsb
insb
mov
or
cmpl
mov
pop
jl
mov
push
loop
adc
imul
lds
enter
xchg
lahf
xchg
outsl
mov
fcom
shlb
fldenv
into
jnp
mov
aam
jp
or
in
pop
orb
mov
iret
mov
dec
xor
sub
loopne,pt
test
shlb
mov
mov
into
sarb
mov
jbe
enter
mov
mov
rorl
mov
pop
mov
into
add
mov
shlb
rolb
enter
jle
xchg
mov
sub
dec
lea
mov
mov
lds
ret
mov
mov
ror
mov
int
ror
xor
pop
mov
dec
mov
loopne
lods
les
repnz
push
call
pop
leave
rcl
jp
cwtl
aam
js
inc
add
int
xor
ret
or
in
mov
cli
mov
lods
fidivrl
xchg
frstor
mov
pop
inc
jns
jns
pop
sub
ret
leave
aam
xchg
lret
rcll
mov
dec
je
jl
ror
test
movsl
fmulp
xchg
out
leave
push
push
iret
int
mov
fld
jns
fcom
adc
iret
hlt
mov
sbb
lods
loop
enter
aam
mov
mov
jb
mov
rdmsr
es
hlt
mov
mov
rolb
scas
mov
xchg
ret
lods
inc
push
and
fsub
out
jno
sbb
rol
ljmp
loop
xchg
cltd
mov
mov
js
mov
sbb
xlat
int
aam
mov
jl
jnp
adc
mov
adc
mov
in
push
xchg
jp
mov
fwait
dec
rorb
jl
ljmp
repz
js
adc
mov
movups
add
imul
mov
xlat
jbe
mov
js
data16
leave
fmul
hlt
mov
cmpsb
mov
scas
shrb
je
fistl
push
mov
es
jns
sbb
out
adc
mov
cmpl
lods
test
inc
add
loope
fcoms
xor
cmc
mov
lahf
mov
enter
sarl
into
ja
dec
mov
mov
fimull
movsb
dec
or
scas
mov
loopne
jg
cwtl
adc
cwtl
xchg
ret
jecxz
insb
jbe
jp
jns
ret
sbb
test
lods
je
lahf
frstor
dec
push
lahf
shll
ret
es
scas
mov
fmul
mov
mov
dec
inc
dec
xchg
ja
fdivrs
push
fwait
rcl
dec
rcr
int
dec
test
iret
je
mov
mov
loope
icebp
xchg
xlat
fdivrl
push
adc
loope
fdivrl
sbbl
mov
mov
rcl
clc
loop
jno
fmull
popf
fisttps
or
loopne
iret
fcompp
int3
mov
sarl
jns
stos
in
and
jnp
shl
arpl
add
loope
push
xchg
fisubs
lods
fnstenv
enter
in
dec
mov
das
and
aam
loop
cmp
jae
js
mov
fdivrs
add
leave
jnp
mov
jg
add
mov
dec
shr
sbb
fidivrl
enter
mov
dec
rorb
lods
push
cmp
ret
cli
sbb
push
mov
xor
insb
xor
mov
jl
mov
fdivrs
xchg
mov
fcmove
adc
xchg
shrl
add
cwtl
mov
arpl
fnstenv
outsb
subl
xorb
loope
adc
or
and
shlb
mov
mov
lea
mov
js
or
aaa
fisubl
jge
and
fcomip
mov
jns
out
add
mov
mov
test
fisttps
loopne
and
js
push
sbb
mov
js
fwait
jle
pusha
xlat
scas
iret
out
dec
fsubrl
loopne
mov
jge
inc
repnz
mov
xorl
loope
jns
ss
and
lahf
leave
imul
mov
mov
test
mov
push
ds
cld
inc
xchg
fsubs
fwait
push
insb
add
jmp
pop
in
mov
int
dec
xchg
iret
adcl
rcl
lods
inc
mov
js
iret
ret
mov
mov
mov
fcmove
mov
fidivrs
aas
ljmp
stos
rcl
jp
setb
test
int
sub
push
rclw
jns
adc
aas
pushf
imul
mov
inc
fidivl
mov
inc
xchg
mov
jecxz
sub
mov
jl
or
stos
mov
mov
add
cmp
cmpsb
test
iret
fidivs
xchg
mov
insb
imul
ss
adc
jecxz
fucomp
fistpl
cmp
frstor
shrb
mov
mov
leave
mov
ja
andl
stos
sbb
mov
jp
iret
xlat
push
xchg
bound
loope
scas
jbe
fmulp
mov
dec
pop
mov
pop
setg
and
lret
int3
cmp
loope
into
xchg
xlat
sarl
sbbl
loop
dec
mov
mov
mov
mov
test
xchg
iret
xorl
lods
out
xchg
shrl
ret
jp
sub
cli
sbb
xlat
loope
mov
dec
repz
push
sbb
mov
loop
sub
cli
mov
xchg
mov
test
fnsave
scas
or
test
lret
jecxz
rcr
push
and
loop
je
lds
jne
push
jns
loop
int
test
mov
ret
iret
leave
push
cmp
jae
add
push
into
scas
dec
jg
mov
shl
test
xchg
cmp
xlat
jo
sbb
mov
jle
outsb
andl
ds
dec
loopne
xchg
hlt
rcrl
shr
imul
jbe
xchg
jge
mov
lods
loopne
outsb
test
mov
mov
sbb
rolb
xchg
mov
mov
or
subl
scas
rcr
lods
fisubrs
repz
stos
lret
rcl
push
mov
iret
dec
insb
adcl
vprotb
sub
fwait
loope
sarb
dec
xlat
fmull
and
push
mov
xor
cmp
mov
pushf
lods
sub
or
ss
fwait
scas
cmpl
sahf
xor
lock
leave
scas
jp
push
dec
rorb
aad
ret
jns
jecxz
mov
jp
fcoml
mov
mov
xchg
mov
jge
and
dec
sub
popa
mov
jne
adc
adc
hlt
lods
and
or
inc
mov
imul
mov
lds
pop
xchg
call
scas
fcmovnu
xchg
iret
mov
rclb
xor
ror
leave
fdivrs
testl
lcall
das
test
lret
shll
mov
fisubrl
push
jle
push
mov
pop
imul
sub
sub
shrl
rorb
loopne
mov
inc
test
ret
inc
das
add
jecxz
and
jb
loopne
pop
ret
scas
fimuls
mov
repnz
ss
mov
jns
pop
sub
leave
rol
dec
cmpsl
es
xlat
movsl
jg
mov
mov
das
ja
loop
mov
lods
mov
sub
aad
adc
stos
inc
mov
pop
test
lods
outsl
outsb
adc
xlat
mov
dec
xchg
shrb
mov
enter
cmpsb
ja
xor
fcomp
jns
jnp
int3
jecxz
ds
js
adc
mov
mov
inc
fdivs
jecxz
movsl
jns
scas
div
xchg
xchg
int3
rcl
mov
xchg
fsubrl
insb
int3
jne
jns
mov
mov
mov
xchg
or
add
and
pop
mov
mov
xchg
or
arpl
leave
sbb
ja
stos
int3
cwtl
rclb
jl
test
lcall
mov
es
faddl
mov
mov
jne
jae
mov
mov
orb
movsb
dec
test
into
rcr
pop
inc
push
xchg
je
aad
into
mov
fldenv
sarl
mov
push
add
xor
rolb
shlb
rclb
subl
adc
inc
loope
into
mov
jbe
lahf
shll
lds
shl
push
push
mov
mov
ret
lret
adc
fldt
push
pop
mov
fmul
inc
mov
hlt
scas
mov
mov
fmulp
ffree
and
mov
cwtl
cmp
mov
out
dec
mov
loopne
shrb
lods
ror
mov
mov
sbb
jl
es
mov
fwait
test
mov
jge
fmulp
lea
sbb
mov
test
jecxz
or
mov
js
aam
aad
sbb
fcmovu
push
rcll
xor
jns
fst
adc
jecxz
in
sub
insb
jbe
push
mov
jle
inc
aam
out
ret
mov
xor
jp
mov
loope
imul
sub
cli
jb
rcl
mov
or
inc
jns
es
js
mov
test
out
mov
movsl
mov
push
imul
jb
jge
into
aad
frstor
mov
sar
shlb
insb
into
loope
mov
test
jl
cmpb
xorl
popf
mov
outsl
mov
rorl
jp
fcompl
or
aad
cwtl
aam
cmp
rcrl
fwait
mov
js
xlat
xchg
adcb
or
push
outsb
fisttpl
int3
cwtl
sub
mov
subb
xchg
mov
sub
fbld
mov
xchg
dec
ror
fistpll
ret
and
or
fidivrl
xchg
sbb
mov
mov
jnp
dec
fsub
pop
ja
push
inc
iret
test
jae
fidivrs
cmp
sub
fiadds
mov
lods
ret
cmpb
test
fstp
mov
rcrb
jnp
mov
mov
fiaddl
inc
mov
ss
movsl
mov
scas
leave
call
adc
adcb
xor
stos
dec
rcl
ret
dec
jae
clc
mov
push
mov
inc
mov
cs
sarb
bswap
mov
sbb
vpermilpd
roll
xor
add
ds
fcmovb
mov
test
or
outsb
cwtl
subb
add
mov
sbb
cmpl
loop
shlb
xchg
jl
loope
or
lahf
test
addr16
inc
pop
cli
xchg
leave
lret
rcl
inc
inc
js
sarl
es
push
pop
mov
jbe
aam
mov
adc
iret
lret
int
mov
xchg
loop
push
mov
mov
into
aam
push
mov
mov
jp
dec
mov
loop
xchg
loop
xchg
jae
dec
or
rcr
cmp
fdivrs
lods
mov
lods
iret
mov
rcr
jecxz
lods
std
xchg
inc
cli
cmp
mov
mov
sub
adc
mov
or
jns
add
aad
mov
cwtl
sarb
int3
test
cmp
or
leave
bound
fimuls
jns
inc
stos
and
loop
add
inc
push
int
lods
fildll
into
jle
push
les
mov
jl
fiaddl
add
xchg
ret
int3
test
fidivrs
and
add
shl
daa
imul
mov
ret
into
inc
lret
test
xchg
aad
rorl
ret
int3
mov
cmp
jp
mov
iret
sbb
inc
pop
xchg
jbe
mov
xchg
xchg
leave
sub
jecxz
jns
leave
mov
std
ret
orl
scas
sarb
xlat
jle
or
mov
jp
pushf
mov
imul
es
pop
into
and
das
data16
push
adc
or
adc
cmc
stos
out
mov
aad
and
jp
jg
jp
loopne
lods
jp
and
mov
fadds
pop
leave
add
rorb
enter
jg
mov
dec
mov
scas
stos
outsb
test
enter
jae
fisubrl
hlt
mov
cmp
mov
scas
iret
ja
adc
or
addl
out
mov
roll
js
loope
ja
aad
fistpll
enter
mov
sbb
adc
push
sahf
or
xlat
scas
jmp
aad
rcl
ret
dec
mov
int3
mov
fnstcw
pop
imul
ror
ljmp
mov
adc
lahf
scas
lahf
xchg
lahf
xchg
nop
add
xor
fs
jnp
xor
jb
fisubrs
fimull
aam
out
jmp
adcb
cmp
ret
stos
hlt
rcl
aam
stos
movsl
int
cmp
xchg
mov
push
dec
mov
imul
ficoms
repnz
rcll
add
add
or
shlb
inc
mov
nop
or
loopne
mov
cmpb
shrl
pop
pop
mov
sarl
inc
mov
leave
sub
in
add
sbbl
pop
je
xchg
lahf
fmulp
add
fnstcw
jb
mov
test
jge
xchg
popl
jnp
xorb
jae
ret
mov
fstpl
movsb
or
mov
aam
loop
mov
inc
mov
and
fcompl
xor
fninit
es
xor
enter
xchg
dec
jnp
mov
mov
fadds
loope
mov
mov
adc
pushf
mov
lret
mov
inc
mov
test
lods
adc
mov
mov
loopne
mov
ja
int
aad
shrl
iret
lret
mov
out
cmp
cmp
je
frstor
jecxz
mov
jl
mov
shlb
test
ficoml
xchg
loope
rorl
mov
rcr
inc
es
sarb
jnp
lods
mov
in
jo
xchg
pusha
ret
fidivl
xchg
sbb
sbb
ljmp
enter
jp
inc
sahf
sbb
mov
rcr
in
aaa
fwait
shrl
fmul
mov
mov
sarb
mov
out
ficompl
jge
aad
lods
ficomps
xor
test
mov
iret
fdivl
mov
jne
jmp
push
sarl
loop
adc
fisttps
fimuls
xchg
fs
lods
mov
inc
add
out
cld
outsb
es
inc
jae
mov
jae
imul
cmp
leave
add
fmull
xchg
shll
jle
mov
lret
push
lods
dec
pop
jns
leave
cli
insl
insl
mov
or
jp
ret
jp
mov
cmp
fistl
js
call
pop
insb
fisttps
lahf
orl
cld
mov
sub
scas
aam
mov
int3
imul
jge
xchg
xchg
js
add
mov
fldcw
test
or
ja
int3
fcom
mov
fst
test
inc
pop
shll
ljmp
mov
xor
enter
int3
sbb
ja
dec
mov
mov
jge
roll
ret
dec
adc
cmp
clc
stos
fs
mov
xchg
jg
adc
jne
mov
xor
jns
jo
or
insb
mov
ret
fisttpll
mov
out
mov
jnp
mov
mov
mov
filds
js
xchg
fadd
rcrb
rorl
sarb
lods
ret
xor
mov
xchg
mov
loop
lds
lret
sbb
int3
lcall
mov
mov
fnstsw
mov
adc
mov
test
mov
xchg
pop
jle
hlt
push
fwait
loop
xor
sub
fisttpll
stos
mov
ja
adc
ja
loop
sub
inc
rclb
out
cmpsl
shll
enter
fwait
sbb
jle
mov
fnsave
push
cli
pop
loopne
movsl
aam
rorb
daa
lret
ret
sub
cmp
loop
roll
sarb
cmp
jg
daa
cmp
loop
mov
sub
xchg
lret
aam
dec
fidivrs
dec
fwait
sbb
cmp
mov
jl
roll
mov
into
jp
pop
fcmovb
mov
cmpsl
rorb
add
insl
into
xchg
or
pop
stos
fsubl
push
cli
sahf
mov
xchg
push
loop
add
andb
es
sbb
lcall
jmp
mov
cld
shrb
jns
enter
jb
xchg
lret
cmc
mov
jo
loope
adcl
pushf
ja
shl
mov
frstor
add
test
aad
mov
enter
cmp
lds
ret
mov
jae
inc
lret
push
mov
mov
lret
mov
shr
aam
add
loop
sub
jo
mov
or
scas
lcall
dec
int3
rcpps
mov
test
loope
leave
into
mov
iret
mov
das
aaa
push
inc
addr16
rcr
mov
iret
jns
loopne
sub
cmpb
into
int
icebp
shlb
pop
xor
xchg
pushf
cs
jl
lret
fcompl
push
sbb
loopne
dec
test
leave
lret
test
xchg
leave
test
jns
mov
test
out
adc
stos
dec
and
mov
mov
fmul
loopne
push
stos
mov
jp
iret
leave
mov
xchg
mov
fldl
mov
int3
mov
fiadds
das
sub
adc
lock
pop
xorb
pop
sub
or
enter
scas
push
jp
lret
stos
fiaddl
sbb
mov
sarl
xlat
sub
mov
scas
mov
ror
insl
loopne
iret
mov
push
mov
adc
orb
fldt
adc
loopne
mov
jge
test
add
sub
scas
je
mov
pushf
aad
jns
test
cmp
iret
mov
add
imul
leave
int3
je
test
shrb
js
jl
cmpl
mov
dec
cli
mov
mov
sarb
iret
fldcw
bound
dec
sarl
mov
clc
mov
ss
mov
mov
fiadds
or
leave
fdivl
orl
ret
mov
jnp
loop
mov
adc
mov
idivb
push
mov
fcmovu
fs
jp
and
jle
ret
test
cmpsb
jl
mov
int3
aad
pop
lahf
mov
out
mov
out
jg
test
jnp
imul
iret
shrb
mov
dec
jno
dec
leave
mov
mov
and
cld
xchg
pushf
orb
lods
stos
push
xchg
aam
rol
fisttps
xchg
cmp
push
push
mov
xor
cmp
pop
fcomps
mov
das
fisubl
mov
fstpt
pop
scas
inc
mov
jecxz
mov
lods
sub
sbb
xor
inc
cmpb
iret
aad
or
mov
jl
and
mov
jle
mov
stos
mov
pop
mov
int3
je
mov
test
mov
pop
aas
mov
mov
and
lods
cmp
loope
jl
mov
push
scas
inc
cmp
aaa
inc
aam
mov
mov
jns
jmp
jge
mov
dec
mov
mov
enter
push
mov
jl
shrl
mov
fidivrl
jle
sub
xchg
xchg
mov
mov
subl
sbb
fadds
aaa
cmp
mov
mov
ds
test
xchg
mov
mov
aas
xor
les
mov
mov
cmp
clc
mov
jg
jmp
iret
repz
sarl
sub
scas
inc
mov
sbb
mov
pushf
js
sahf
sarl
jns
ja
mov
ficompl
inc
or
mov
imul
int
sub
int3
loope
aam
fdivrl
subl
leave
mov
mov
adc
jg
je
push
test
lret
faddl
jne
popf
cmp
sbb
mov
ret
dec
jno
push
fisubrl
mov
sub
js
lret
jns
jno
negb
subl
add
bound
loop
aam
sahf
aam
pop
cmc
or
cmpb
jg
imul
fcompl
fisttps
jl
sub
sub
out
lret
ret
lods
test
dec
jns
jecxz
fsqrt
jb
jmp
scas
cld
inc
xchg
lods
imul
ror
jp
int
mov
loopne
loop
cmp
aam
add
lods
inc
test
add
ret
jns
xor
ljmp
xor
sub
pop
fnstcw
mov
sbb
push
add
inc
fcmovnu
xchg
aad
or
fbstp
sbb
inc
test
rorb
repnz
jle
ljmp
int
arpl
scas
shlb
outsb
test
pushf
mov
fcmove
mov
lods
shrb
mov
iret
js
aam
mov
push
fmull
fldt
repnz
mov
pop
sub
jl
lret
jg
test
lods
scas
push
xchg
lea
dec
xor
mov
imul
adc
jns
mov
test
cmpl
sbb
dec
sbb
rcl
and
jp
fildl
or
xorl
rep
ds
mov
or
loopne
imul
fisttpl
xchg
rcrb
xorl
xchg
cmp
jmp
push
adc
mov
mov
xorl
mov
int
pop
lea
into
cli
shll
je
fdivp
insb
or
jns
fldt
ret
jmp
fisttps
jne
dec
xchg
xlat
jecxz
scas
js
sbbl
jmp
mov
mov
pop
mov
mov
loope
loop
pop
pushf
leave
jnp
mov
jp
loop
movsl
loop
mov
ret
mov
subl
das
pushf
fmull
fnsave
and
mov
pusha
insb
iret
out
xchg
loope
lods
mov
sub
mov
cmp
fimuls
inc
dec
dec
adc
es
mov
and
or
out
xchg
mov
call
lods
iret
cmpsl
mov
test
test
loopne
fmull
lret
shrl
pusha
xchg
mov
loope
mov
aad
test
lods
or
sub
push
std
cwtl
loopne
mov
jnp
fcmovu
test
fdivrs
imul
lret
scas
mov
es
push
xchg
fdivs
imul
ficomps
call
ret
lret
cld
xor
dec
int
lret
enter
fidivrl
cmp
loop
das
pushf
mov
clc
sub
jge
jle
pushf
shrl
xor
and
lret
mov
mov
fwait
fldl
cmpsb
mov
push
mov
fnstenv
cwtl
mov
fs
ss
jae
lret
into
mov
fcmovb
fstl
adc
push
int
push
fneni(8087
scas
ja
or
lods
mov
pushf
or
mov
rcrb
fistpll
out
mov
mov
sub
iret
lds
or
lds
jp
iret
je
loopne
subb
mov
sar
imul
mov
rcrb
pop
and
dec
insb
cs
mov
mov
movsb
js
pop
ja
ficompl
in
sub
leave
loop
mov
mov
jge
test
subb
dec
fistpll
rclb
insb
jle
orl
mov
rolb
push
sahf
jnp
inc
je
cltd
jbe
jne
xchg
imul
ret
ror
fnstenv
in
push
in
scas
aam
outsb
scas
cli
mov
mov
adc
popf
aad
sub
int3
mov
cld
xor
sahf
outsl
mov
jnp
mov
rolb
cltd
fdivrs
mov
leave
call
popa
ret
fldt
pop
loopne
lds
je
mov
xchg
iret
mov
push
cli
jecxz
mov
fsubrs
fldl
mov
sahf
scas
call
mov
test
or
enter
jmp
pop
jl
test
addb
mov
int
jp
iret
out
mov
repz
test
sub
lods
xor
out
push
aad
pusha
xlat
shl
sub
les
xchg
jp
fnstcw
xlat
mov
ja
aam
shrl
fmull
loope
loopne
dec
or
jle
rcrb
into
jp
mov
enter
imul
mov
mov
shll
push
or
mov
addb
xorl
cmp
adc
xchg
cwtl
mov
sub
cli
add
fistps
mov
fisubrl
das
xlat
out
dec
mov
test
loop
jecxz
mov
test
mov
scas
rcr
or
pop
fadd
test
inc
add
adc
cli
jbe
jl
adc
inc
call
ret
mov
ja
dec
in
jnp
inc
loop
scas
push
adc
ja
dec
leave
mov
add
jp
scas
mov
enter
aam
fmull
inc
shrl
into
xchg
lea
aad
or
push
dec
jecxz
add
out
fbstp
pop
cmpsb
loopne
ror
fcmovnu
sarb
fcmovb
jbe
mov
fisubrs
ret
pop
mov
mov
in
inc
leave
xchg
int
scas
fstpt
shll
jb
mov
mov
je
mov
cmpb
jb
mov
mov
shlb
test
sahf
in
ret
cmp
outsb
mov
jno
into
sub
mov
jp
xchg
shrb
xchg
pop
mov
stos
xchg
add
dec
aad
mov
mov
clc
cmp
jle
popa
mov
scas
mov
mov
inc
fstpl
lods
leave
jge
add
xorb
enter
dec
and
push
and
stos
mov
mov
fs
fmul
fxch
jl
dec
jnp
mov
lret
sbb
mov
ljmp
mov
cmpb
testb
fldenv
mov
jns,pn
or
nop
cli
iret
push
dec
mov
aam
enter
test
fsubrl
mov
or
enter
dec
es
in
repnz
lret
ficompl
int3
lods
cmc
int3
xchg
fdivrl
mov
into
xchg
repnz
inc
test
xlat
mov
mov
into
rcl
movsl
mov
lods
fsub
aam
mov
fdivr
or
sbb
mov
fidivl
inc
cmpsb
leave
addr16
sbbl
mov
mov
out
xor
xchg
mov
jns
jnp
das
mov
cltd
and
xchg
mov
cmp
sbb
ljmp
andl
imul
out
mov
jnp
leave
mov
gs
or
jecxz
ret
pop
mov
jecxz
faddp
shl
dec
xchg
iret
dec
fidivl
in
jns
jp
aam
mov
test
mov
jmp
int
mov
mov
loop
cmp
dec
dec
loopne
fdivs
jg
mov
inc
mov
iret
stc
mov
loop
popa
mov
fsubrl
test
sbb
inc
push
loop
mov
fcmovbe
and
mov
std
or
shl
push
jl
jl
inc
mov
mov
mov
mov
adc
loope
test
out
or
ret
dec
repz
mov
mov
jle
stos
mov
scas
sbb
cmp
adc
fidivrl
or
sbb
cmp
sub
mov
into
mov
ror
insl
pop
faddl
sarl
cld
loop
jbe
jns
xchg
sbb
cmpl
int3
xorl
xchg
xchg
jge
jnp
shlb
adc
sti
mov
xchg
mov
pusha
loopne
imul
das
lea
dec
shll
mov
ret
repnz
cmp
outsb
aam
leave
fdivrs
test
cmp
movl
or
mov
aam
ret
cmpl
push
fstps
pop
xchg
mov
mov
in
stos
outsb
iret
mov
fimuls
mov
mov
into
sub
mov
fldenv
sbb
loop
add
call
fstl
sbb
cmpl
jmp
push
xchg
fldl
pop
aas
ja
cmp
es
jge
enter
aad
adc
jnp
imul
add
cmp
stos
push
mov
into
and
lods
fidivl
scas
mov
shll
mov
lret
or
push
add
push
divl
adc
imul
lahf
test
sub
adc
mov
jle
jg
stos
pop
sarl
and
aad
fwait
sbb
mov
sbb
popa
jle
inc
mov
dec
negb
aaa
mov
loope
jnp
mov
jbe
mov
rolb
cwtl
mov
mov
test
jge
scas
mov
lods
sbb
mov
into
dec
push
mov
pop
mov
mov
adc
mov
mov
jo
rolb
xchg
jg
mov
jbe
mov
clc
mov
fabs
cwtl
mov
mov
adc
sub
ds
fistps
jecxz
addr16
or
mov
cmp
or
mov
aam
call
mov
rolb
clc
das
roll
aam
mov
cwtl
fstpt
mov
jmp
shlb
mov
ffreep
into
xor
leave
pop
loop
mov
adc
push
jp
mov
pop
insb
xlat
aam
movsl
loop
es
mov
addl
ret
mov
sar
into
imul
add
xorb
lret
mov
idivl
xchg
enter
test
pop
jns
cli
lea
mov
jg
xchg
sar
sbb
loopne
xlat
cs
jnp
push
in
aam
repnz
mov
call
and
shlb
or
filds
cld
jne
jle
xchg
leave
scas
int
mov
cwtl
into
xorl
sbb
imul
and
insl
ljmp
mov
jns
inc
rol
sub
jle
scas
ret
aaa
ja
test
into
xlat
leave
stc
enter
jl
lods
and
jbe
lods
dec
test
sahf
mov
mov
xor
mov
mov
mov
int
jb
fnstenv
imul
dec
dec
subl
outsb
dec
push
imul
sbbl
cmpsb
shlb
cmp
mov
or
stos
inc
cmp
or
scas
js
push
scas
cwtl
mov
mov
leave
mov
xor
pushf
jge
jns
std
mov
jbe
scas
jbe
subl
rolb
mov
cmp
ljmp
aas
rcr
jae
mov
ret
mov
mov
loope
mov
int
shll
adc
jns
sbb
sbb
out
and
pop
mov
inc
mov
shr
out
rcrb
cmp
mov
test
ja
push
or
mov
movsb
insl
or
scas
enter
or
in
mov
lods
enter
shl
xchg
fnstenv
mov
cltd
ret
push
mov
testb
stos
fstpt
mov
jecxz
faddl
mov
sarb
ds
rcr
sahf
mov
adc
xchg
xor
mov
mov
add
lret
jle
mov
push
lret
mov
scas
enter
fisttpl
mov
mov
aam
ja
inc
imul
cld
test
ficoms
rcrb
fsub
jecxz
sbb
movd
mov
jg
mov
test
mov
sbb
sahf
jecxz
into
inc
mov
leave
shrl
push
ljmp
push
lods
loop
es
enter
mov
loopne
leave
flds
mov
sarl
rcr
nop
int3
xlat
mov
mov
mov
push
loop
pop
xchg
jl
mov
mov
imul
imul
push
leave
jle
shll
ja
jg
fwait
mov
incb
sub
mov
cmp
jbe
jecxz
xor
cmpsb
jmp
test
mov
dec
stos
mov
je
mov
lret
sbb
ret
jg
push
mov
or
loopne
lods
adc
fnstcw
inc
jb
xor
inc
ret
cmp
pop
cmp
movsb
sti
sahf
push
ds
nop
jge
leave
sbb
scas
or
mov
loopne
ds
fcmovnbe
add
pop
loope
or
js
and
outsb
mov
and
ljmp
push
enter
fisubrl
push
ljmp
scas
leave
xlat
fidivrl
fnstcw
nop
lahf
loop
into
lea
mov
ficompl
dec
cmpsb
pop
std
rcr
sub
dec
mov
enter
popf
rcr
adc
mov
rol
ficoms
xchg
or
mov
add
fnsave
out
scas
push
jmp
mov
jg
jp
orb
mov
das
call
scas
and
or
lods
push
shl
xor
mov
jecxz
mov
iret
fisttpll
jmp
jno
jecxz
movsl
jp
int
dec
test
test
mov
mov
enter
aam
iret
push
loop
sub
mov
mov
dec
test
mov
outsb
mov
test
mov
enter
or
imul
jnp
mov
fnstcw
dec
ret
loope
mov
jp
sahf
cld
int
fldenv
xchg
enter
fistpll
int3
add
jns
fimull
arpl
mov
mov
xor
ficoms
aam
jge
test
loopne
push
jl
sarl
cwtl
fidivs
mov
xor
pop
mov
mov
mov
fimull
test
dec
push
dec
push
scas
jp
sarb
cli
mov
jnp
scas
push
in
xor
mov
into
sub
test
lods
mov
lds
jae
loop
enter
jnp,pn
das
xor
sti
loop
mov
jb
mov
jecxz
cwtl
lods
aad
xchg
daa
mov
stc
cmpsl
ja
push
adc
jmp
mov
and
add
cld
loop
into
shrb
scas
scas
sti
push
push
adc
popa
popl
fldl
mov
lcall
arpl
jecxz
push
sarl
test
add
movsb
xlat
loop
enter
aad
jp
leave
jp
inc
mov
mov
mov
fxch
mov
sub
xchg
pushf
loope
mov
ja
jg
adc
lods
inc
push
test
mov
sarl
loope
sbb
mov
cmpsl
fcoms
adc
xchg
sub
hlt
lea
dec
and
adc
scas
fcmovnbe
xchg
aad
sarl
fsubrl
pusha
sbb
sbb
xor
movsl
mov
fadds
orl
mov
fsubrl
inc
and
cmp
ret
adcb
fstl
jge
sub
jne
sbbl
dec
mov
xchg
das
movsl
sub
fwait
mov
cmp
mov
mov
outsb
dec
outsb
or
fldt
iret
and
fs
mov
xor
dec
inc
loope
dec
xor
leave
fldt
xchg
jl
jle
ret
jns
mov
adcb
loop
cld
stos
fsubr
push
rcl
xlat
push
shrb
jl
subl
loop
into
and
les
int
fdivrs
inc
leave
dec
aam
test
cmp
fisubl
cmp
aas
test
mov
mov
rolb
sahf
jge
mov
insl
leave
inc
mov
or
loopne
mov
xchg
je
fcompl
subb
inc
push
and
leave
imull
mov
stos
aad
ficompl
mov
fcomip
xchg
mov
and
popa
flds
xchg
cmp
or
jg
adc
xor
shlb
enter
ljmp
mov
loop
mov
js
shrl
test
loopne
mov
scas
mov
jle
repnz
enter
or
shrb
jns
cmpl
loope
mov
sbb
jns
into
fstps
lea
mov
insl
jne
repnz
mov
jle
mov
loop
pushf
movsl
fidivs
leave
out
or
pusha
enter
roll
push
mov
cmp
push
cwtl
mov
fsubp
ret
dec
push
add
ret
aam
xlat
pop
mov
lods
dec
xor
or
jp
push
pop
call
xor
cmp
mov
mov
ret
cmpsb
enter
or
insl
xchg
lods
mov
dec
cltd
dec
rcl
int
mov
movsb
js
add
mov
mov
xchg
jg
jns
nop
into
fstp
dec
js
nop
rcl
pop
push
add
mov
xor
mov
add
xor
scas
js
push
xchg
pop
push
fwait
nop
orl
mov
mov
stc
mov
into
pop
xchg
fwait
push
dec
mov
loop
dec
fcom
mov
insl
subb
fmulp
mov
enter
fdivr
shll
dec
imul
rorb
mov
fstpt
xchg
sarl
xchg
cmp
or
and
or
jnp
jp
mov
sub
in
fistps
jns
cmp
mov
cmp
lcall
lods
test
xorl
iret
int3
add
ja
scas
fdivl
js
rcrb
xor
test
lret
into
sub
xchg
mov
push
mov
out
test
jnp
les
or
stos
mov
lods
test
fisubrl
es
add
dec
rorl
mov
jmp
lods
iret
dec
adc
aad
lods
scas
cmp
fucom
pop
sbb
out
jle
loope
mov
leave
jp
inc
mov
dec
ror
lahf
lods
fnstsw
stos
mov
loopne
imul
fcomps
int
add
stos
sub
mov
mov
ret
mov
push
mov
loopne
aad
mov
sarb
mov
pop
shlb
test
fcmovnbe
into
sub
cli
jmp
mov
mov
inc
arpl
add
mov
and
fucomp
pusha
jp
das
mov
add
and
and
movsb
mov
jle
fbstp
mov
jg
into
adc
outsb
sarl
lea
data16
sarb
sub
es
out
imul
adc
cmp
mov
dec
lods
jge
dec
inc
hlt
jb
dec
imul
and
dec
test
fcomps
imulb
or
ret
mulb
js
and
fidivrl
aad
daa
loop
jge
ret
adcb
add
and
fcmovbe
ja
hlt
ljmp
adc
jbe
mov
test
cmp
std
or
fucom
mov
add
cmpsb
mov
mov
js
mov
cmp
cmpsb
lods
testb
cwtl
mov
inc
xchg
rcll
push
fmuls
addr16
jnp
dec
lahf
loop
jmp
mov
mov
mov
sub
inc
dec
jnp
lock
cmpsb
ret
add
adc
out
jg
mov
inc
or
cmp
imul
and
stos
sub
add
jbe
sahf
xchg
mov
fistpll
add
sub
rcrl
movlps
fdivrl
rolb
mov
test
mov
movsb
call
dec
lret
mov
mov
mov
and
mov
sbb
xchg
ret
mov
sbb
pshufw
iret
fnclex
mov
adc
inc
sbb
out
movsl
insb
rcr
xchg
jge
adc
sbb
loop
call
mov
mov
ljmp
jns
ret
les
mov
fstpt
leave
mov
push
push
or
jg
pushf
int
test
cmp
fldt
xlat
shrb
mov
mov
bound
ror
and
leave
in
mov
mov
roll
jb
and
lcall
lods
shl
mov
jp
cmpl
cli
repnz
sbb
loop
jbe
xor
mov
cmp
int3
je
and
ja
mov
push
mov
ret
test
mov
mov
pushf
shlb
and
jg
fcmovb
insl
aad
mov
jns
push
enter
add
xor
or
mov
es
in
sarb
orb
inc
rorb
aam
mov
dec
sub
mov
xchg
js
ret
mov
enter
lods
loope
aaa
xchg
pop
imul
inc
scas
or
sub
pop
inc
jmp
pop
sbb
fbld
xchg
loop
fmul
mov
mov
mov
cmp
push
js
int
into
loop
iret
mov
mov
dec
dec
push
enter
jp
rol
mov
jnp
test
mov
mov
repnz
mov
cmpl
xchg
fildll
stos
xorb
bound
jnp
adc
or
sahf
inc
lcall
push
xlat
mov
cmp
sub
rclb
in
ljmp
scas
jp
sbb
jp
aam
dec
push
fidivs
out
fcmovbe
repz
lods
int
mov
sbb
iret
cld
inc
mov
mov
sub
fisubs
adc
xchg
xchg
jp
ja
adc
test
mov
lods
loop
jns
test
out
js
mov
es
jb
inc
jp
test
int3
bound
rol
shr
adc
pop
mov
gs
sbb
or
shr
je
adc
mov
leave
mov
fadds
mov
subb
jp
loopne
xlat
mov
xchg
lock
jnp
mov
xor
sbb
sub
sbb
std
sub
frstor
scas
ss
ror
xchg
mov
sbb
mov
push
ret
sarb
mov
cmp
xor
dec
xchg
scas
sub
out
es
fsub
int
lahf
cmpl
sub
sbb
cmpb
cli
mov
or
jns
xchg
push
fucomip
ret
leave
loopne
mov
xchg
lods
xor
loop
mov
inc
ja
imul
pop
fstl
ret
or
loopne
iret
mov
jno
adc
sub
sbb
es
rol
sub
dec
scas
xlat
mov
mov
xchg
neg
xchg
roll
lcall
cwtl
mov
fstl
cmp
scas
jle
cmp
movsb
push
insb
push
mov
fdivrl
loope
jp
rol
mov
mov
out
jle
sbb
jp
in
fnsave
fwait
add
sub
sbb
mov
dec
ret
ljmp
inc
cwtl
jle
push
add
rorb
pop
push
mov
sub
mov
dec
rolb
and
xchg
cmpsl
dec
jnp
pop
mov
mov
aam
scas
adc
dec
aad
pop
dec
dec
push
mov
mov
sbb
mov
mov
dec
push
adc
loopne
inc
sbb
mov
mov
lods
fistpll
mov
cs
mov
test
mov
xchg
mov
fidivs
push
aaa
aam
lea
dec
mov
les
test
scas
lret
lods
sbbl
jne
adc
xchg
inc
xchg
adc
push
scas
dec
mov
jecxz
fs
mov
fdivs
sbb
into
aad
rsqrtps
jmp
fmull
mov
cwtl
rol
enter
push
stos
mov
iret
adc
jecxz
adc
shlb
xlat
jns
pushf
mov
xor
cmp
test
xchg
jle
or
mov
shlb
jp
fucom
ja
out
sarb
mov
ljmp
pop
mov
stos
int3
ss
fmull
dec
or
jns
jmp
int
or
lods
sub
aad
or
xor
sub
test
cmp
sarl
enter
or
dec
loop
or
es
dec
lret
mov
aaa
test
xlat
mov
stos
mov
and
mov
dec
pop
fidivs
or
add
mov
lods
mov
push
data16
mov
mov
movsb
xchg
add
lret
or
jg
xor
repnz
syscall
cmp
adc
xchg
mov
or
idivb
loopne
fnstenv
xchg
fildl
leave
movsl
enter
mov
int3
and
faddp
xchg
sahf
mov
mov
mov
scas
fucomi
dec
adc
mov
inc
out
pop
mov
dec
orl
aam
jl
jecxz
mov
push
test
mov
mov
xlat
dec
dec
adc
fidivrl
xchg
std
mov
adc
subl
iret
cmp
aad
mov
mov
sub
imul
mov
mov
aam
add
mov
jb
and
mov
loope
add
add
xor
scas
aad
jp
jg
loop
jge
pop
xchg
dec
mov
and
push
mov
dec
fst
lahf
mov
adcl
shl
enter
cmpb
pop
cmp
enter
mov
ja
bound
xor
fdivrs
loopne
in
mov
insb
dec
mov
jp
mov
test
sbbl
cmp
fwait
adc
int
dec
hlt
mov
push
adc
or
xlat
outsl
xor
push
les
roll
test
jns
push
loop
int
sbb
je
jge
je
imul
int3
xor
test
mov
jecxz
mov
xchg
adc
push
jb
dec
cmpb
push
test
inc
xchg
fmull
jl
pop
fwait
xor
jne
test
add
aam
jg
ret
add
add
mov
stos
cmp
jnp
cld
loope
mov
sbb
ret
mov
jp
fnclex
jnp
mov
ror
jg
rolb
shlb
pop
fsubl
mov
mov
mov
mov
aaa
mov
shrl
dec
xlat
xlat
xchg
mov
imul
rorb
fsubrl
mov
loop
ret
xlat
sarl
imul
rcr
das
push
jns
jecxz
mov
int
faddp
inc
aas
mov
rolb
mov
mov
loope
scas
pop
cmc
nop
push
aam
mov
or
leave
or
jle
xchg
mov
mov
into
mov
mov
mov
mov
mov
mov
jmp
xlat
mov
rcl
enter
cli
add
mov
stos
dec
jl
jnp
jle
jo
pushf
aad
mov
scas
mov
xchg
mov
int3
lods
fld
fstpl
mov
mov
addr16
js
cmpsl
xorl
stos
jp
cmpsl
filds
ret
cmp
inc
cmp
rcrl
xchg
loopne
int
imul
dec
clc
pop
cmp
test
mov
js
ret
iret
ret
push
or
mov
cmp
call
xchg
xlat
jg
jl
cmp
rcrb
leave
push
mov
and
mov
pop
shrb
outsb
lahf
xchg
mov
xlat
loope
mov
mov
into
test
dec
dec
enter
js
mov
sbb
out
scas
inc
rorl
mov
mov
sub
int
cmp
in
dec
or
sbb
mov
sahf
pop
pusha
test
bound
mov
ror
jl
xchg
test
xchg
mov
aad
mov
loop
outsl
ret
or
es
into
lods
xor
jecxz
sbb
fmul
mov
pusha
fcmovu
test
fldt
xchg
outsb
movsl
insb
xchg
outsb
stos
movsb
mov
mov
mov
test
mov
ja
inc
test
ljmp
mov
ljmp
mov
loop
mov
adcb
fmuls
shrb
rorb
test
mov
mov
into
push
decb
and
mov
fcom
jns
fistl
ret
and
outsb
cmpsl
mov
enter
push
aam
cmpsb
sbb
aad
ret
fiaddl
pop
ret
sbb
mov
xorb
mov
dec
jle
scas
int
mov
fldl
xor
and
dec
addl
push
adc
or
test
dec
add
xor
ficomps
and
movsb
mov
mov
repnz
sti
push
add
jae
dec
fcomp
cmpl
pop
or
loopne
push
jnp
out
pop
pop
aaa
dec
lds
cmp
ljmp
push
out
jecxz
mov
shrb
mov
shll
xchg
ljmp
and
mov
rcl
frstor
mov
jle
mov
leave
call
icebp
add
sub
shlb
pushf
or
or
loopne
cli
loope
out
sub
mov
and
mov
fistpll
dec
sbb
xlat
jns
jns
stos
cmp
test
les
lods
shrl
shrb
fbstp
into
cs
and
jmp
mov
mov
cmpsb
fnsave
cmp
test
icebp
cwtl
fldcw
lret
pop
mov
jge
loope
jg
loopne
inc
enter
push
test
adc
mov
aad
shlb
fldcw
adcl
lcall
add
jbe
or
cmpb
sub
fsubrs
sbb
lea
push
add
dec
xchg
ret
mov
popa
js
pusha
add
jecxz
xorb
xor
into
icebp
lods
xchg
popa
push
insl
xchg
mov
add
jmp
jns
inc
fdivrl
mov
iret
jl
push
add
sahf
mov
lret
jle
fcmovnbe
push
push
insl
xlat
sbb
es
xchg
fldt
push
sarb
fbstp
ja
sub
mov
shrl
inc
cmpsb
jnp
lea
adc
sub
ret
or
mov
lds
pop
jp
aad
mov
lcall
cltd
jle
jp
cwtl
ds
movsb
lods
mov
divb
movsl
mov
bnd
jecxz
aaa
insb
sahf
fnstsw
dec
push
fcomps
add
fwait
repnz
adc
inc
mov
xchg
mov
inc
mov
test
test
or
jl
mov
xchg
iret
jno
xchg
es
sbbb
adc
pop
dec
xchg
push
ficoms
cwtl
or
fidivl
mov
shll
ljmp
add
shlb
out
ret
repnz
dec
ror
jo
scas
cmpsl
lahf
test
mov
ljmp
sbb
lahf
fdivs
sbb
xlat
sbb
divb
mov
js
mov
ror
jle
mov
nop
js,pn
pop
and
sub
iret
leave
mov
test
lods
cmp
add
ret
lods
sahf
mov
mov
xlat
push
add
dec
mov
mov
xorl
iret
aam
ja
fldl
mov
ficoms
sub
test
test
sbb
rorb
movsb
add
mov
testl
test
mov
mov
fidivrs
and
shlb
sbbb
push
scas
mov
rcr
jp
cmp
ret
ret
push
mov
mov
loop
imul
jns
mov
repnz
xlat
mov
mov
jb
fsub
mov
das
push
xor
shrl
lahf
xlat
inc
push
roll
dec
mov
jp
or
add
repz
mov
jle
aad
sbb
fcmovne
fs
and
jb
jg
push
orl
cmpl
pop
movsb
enter
pop
cmp
repz
scas
mov
mov
aad
mov
sarb
mov
js
xor
mov
push
and
mov
jle
jle
test
dec
lahf
inc
cld
and
ljmp
shr
scas
jge
int
inc
xchg
leave
xor
jbe
rorl
fnstsw
cmpl
or
push
mov
mov
cmpb
dec
mov
xor
scas
jmp
test
jmp
ret
xchg
out
jae
mov
ja
test
test
loop
scas
cltd
or
mov
jne
mov
mov
cmc
gs
mov
insl
xchg
out
sub
adc
ror
call
pop
loopne
repnz
jne
fldt
mov
ds
pop
cmp
cmp
test
push
fmull
ret
inc
rcll
mov
xchg
pushf
jp
xchg
mov
mov
xchg
clc
andb
jg
cwtl
or
scas
es
push
loopne
flds
mov
xor
mov
add
jb
add
das
out
test
outsl
push
mov
leave
lods
ficompl
mov
lods
or
mov
jnp
push
test
fcmovu
out
and
shll
mov
and
rol
cs
sbb
mov
stos
dec
mov
mov
mov
fisubrl
loope
or
enter
mov
mov
jmp
outsb
ret
pop
sub
mov
into
inc
leave
xchg
adc
adc
push
jae
ja
lods
mov
inc
orl
fnstenv
add
mov
insl
shrb
and
int
mov
mov
shl
mov
mov
jns
enter
mov
shrl
pop
mov
cli
cmp
fstp
shll
scas
jecxz
ror
dec
sarb
mov
mov
mov
testb
push
xchg
int
mov
dec
and
mov
xlat
xchg
xor
loope
test
lods
jnp
mov
subl
sbb
mov
xlat
mov
jns
xchg
mov
loope
shr
int
sbb
or
jge
fcmovbe
es
lods
sbbl
mov
add
ret
iret
mov
mov
mov
aam
mov
aad
sarb
jp
pop
mov
adc
xchg
aad
mov
lods
jns
data16
inc
test
push
lods
inc
jp
fcmovu
jg
popa
sarb
mov
or
test
out
xchg
mov
sarb
shlb
push
insl
mov
fdivrs
inc
fidivrl
scas
push
lret
fcmove
ljmp
das
lahf
shlb
aam
lsl
inc
test
ret
les
mov
ficompl
and
stos
mov
cmpsb
mov
shlb
jnp
jp
pop
leave
adc
cmp
jns
mov
cmpl
filds
shll
xor
push
inc
xor
mov
out
mov
loop
mov
outsb
mov
or
aad
dec
fldcw
xor
cmp
mov
sub
cmp
fdivrl
adc
xchg
pop
fidivrl
enter
test
xor
iret
insb
push
adc
mov
jnp,pt
and
fxch
adc
lret
syscall
lods
cmp
mov
loope
sub
enter
stos
ret
aam
jge
loop
mov
stos
cwtl
ja
mov
out
loopne
and
inc
insb
movsb
test
jl
ret
xchg
jne
mov
hlt
filds
in
loop
stos
mov
jo
aad
insl
jl
push
test
jnp
or
push
xchg
dec
push
fnstsw
mov
bsr
sarl
add
outsb
fisttps
sub
js
adc
pusha
xchg
sub
xlat
cli
orl
cmovnp
mov
xchg
fcomip
outsb
xorl
mov
mov
sarl
mov
test
sbb
jo
mov
mov
mov
test
jg
hlt
test
cli
ficompl
jmp
adc
jmp
sarb
jecxz
mov
ret
or
xlat
iret
adc
mov
sbb
mov
movsb
shr
jae
dec
shll
inc
pop
jp
aad
int
subb
or
add
pop
mov
adc
out
test
dec
out
pop
mov
jnp
lods
test
mov
fsub
int
cmp
stos
rorl
jle
loop
lods
mov
aam
mov
rcl
adc
jnp
fists
dec
add
loop
int3
and
xor
inc
shll
mov
fnstcw
icebp
jp
js
xchg
mov
jle
dec
jae
aad
or
fdivs
lea
scas
into
dec
fldt
mov
mov
mov
jecxz
adc
std
loope
int3
jb
xchg
enter
adc
and
xchg
mov
int
adc
scas
or
leave
fiaddl
daa
ror
add
inc
mov
leave
mov
mov
pop
inc
push
jbe
mov
sarb
and
fadd
test
inc
js
cmp
fstps
pop
mov
jb
aam
lahf
mov
fsubl
in
enter
lods
test
dec
mov
add
insb
scas
mov
mov
das
mov
jns
jle
jnp
test
stos
jecxz
lods
inc
mov
cli
mov
adcb
leave
fdivrs
jg
pushf
loope
ja
and
inc
loopne
aad
dec
icebp
into
ret
mov
push
adc
roll
mov
out
js
push
adc
aam
ret
mov
mov
lock
and
je
lods
xchg
push
cmp
loop
mov
fcmovb
flds
cmp
cli
sbb
loop
outsb
lahf
sarb
xor
fs
ret
lret
cmp
mov
scas
stos
sbb
shr
addr16
iret
mov
or
aad
mov
sub
rol
daa
nop
jmp
loopne
rolb
loopne
or
jecxz
shll
lods
dec
fisttps
jbe
divb
iret
test
test
mov
fisttps
jg
mov
add
fmulp
dec
je
adc
xchg
mov
xorl
sbb
ja
xor
flds
test
push
sti
dec
jae
mov
ds
mov
ror
iret
inc
lock
cwtl
sbbb
fldenv
jge
mov
cmp
outsb
imul
mov
enter
loope
shrb
sbb
ja
dec
insb
add
dec
rcrl
sub
repnz
pushf
mov
in
fistl
pusha
mov
shll
cli
sbb
ret
je
lods
inc
lret
sbb
mov
or
mov
dec
jmp
push
xlat
inc
dec
fmuls
ret
jnp
cmp
sar
push
int
push
loopne
lods
inc
mov
or
sbb
mov
cmpb
mov
xor
pop
int
or
jl
sbb
mov
lret
iret
rcll
imul
push
enter
add
hlt
sbb
fnstsw
push
andl
jp
or
sarb
inc
xchg
filds
jno
in
lret
nop
fnsave
into
aas
inc
mov
xchg
cmp
mov
scas
mov
test
je
iret
sbb
or
mov
shl
int
cmp
nop
xor
subb
jl
aad
cmp
es
sarl
mov
xchg
ret
repz
int
lahf
add
add
lods
shll
jns
enter
shl
mov
push
push
or
jge
jp
and
out
inc
mov
mov
mov
jle
jp
scas
int3
jg
mov
cmp
loop
jno
enter
faddl
fimuls
shrl
mov
mov
imul
fildl
xchg
cmp
adcb
ja
mov
ret
inc
mov
movsl
mov
mov
xlat
push
mov
jnp,pt
jge
ds
mov
cwtl
into
mov
ret
and
inc
pop
push
or
filds
mov
pop
js
mov
inc
or
mov
push
mov
sbb
jns
aas
mov
iret
mov
jle
pop
mov
xlat
cmp
mov
pop
fldt
pop
adc
xchg
iret
sub
into
jns
jecxz
push
mov
dec
xlat
or
sarb
cmpsb
leave
js
add
lret
fnstsw
loope
jbe
mov
aas
sarb
movsb
js
mov
aad
cmp
add
and
lret
mov
mov
xchg
stos
ficompl
fcmovnbe
jle
fidivl
rcrl
mov
fst
or
mov
jmp
mov
push
jae
cwtl
xchg
jg
fisubrs
in
inc
into
stos
cld
mov
jecxz
subb
jb
mov
loop
movsb
jecxz
xor
in
mov
shl
fidivrs
mov
ret
xchg
pushf
fmul
jp
inc
mov
xchg
int3
and
enter
pushf
jge
mov
ja
mov
sub
or
cwtl
cltd
mov
xchg
mov
mov
pushf
inc
je
jb
rorl
arpl
cmpsb
mov
xor
and
pop
or
lods
into
or
sarb
jp
jecxz
xor
outsb
mov
or
push
int
stos
and
call
adc
pushf
jns
fildl
xchg
sbb
pop
dec
mov
nop
pop
fistpl
insb
mov
mov
dec
ficomps
xlat
hlt
or
mov
pop
fstpl
leave
dec
xchg
into
or
sarl
xchg
mov
scas
loopne
mov
ret
or
shll
fstpt
fisttpll
mov
push
test
dec
nop
cmpsb
es
into
js
inc
loopne
mov
jmp
frstor
add
lods
mov
ja
adcb
jg
test
mov
enter
loope
sar
out
aam
test
scas
xor
test
ficompl
add
insl
or
mov
and
mov
sub
mov
dec
aaa
jecxz
cli
lahf
aam
add
cmpl
sub
jge
push
scas
jns
mov
out
mov
ficoml
or
shrl
sarl
roll
fmull
add
int
scas
js
dec
dec
xchg
mov
int3
mov
rcl
sbb
shl
fs
imul
sub
scas
jecxz
xchg
sbb
int
cli
jle
jne
fidivrl
insb
arpl
lds
ficomps
xchg
iret
xorl
mov
jl
or
iret
lret
mov
mov
mov
jnp
mov
addl
aad
xchg
fidivs
scas
ret
aam
cmpl
mov
mov
adc
adc
dec
mov
out
adc
pop
rcll
out
dec
mov
mov
mov
cmp
out
in
dec
outsl
sarb
adcb
loope
into
fsubrl
push
lea
xchg
rol
sub
loopne
xchg
mov
ret
mov
test
xor
iret
mov
xchg
leave
mov
push
roll
xchg
test
cmpl
testb
mov
jae
lret
rcrl
mov
xor
imul
test
mov
rcr
loop
inc
mov
mov
mov
push
scas
mov
push
push
data16
int
xchg
add
into
loop
out
loop
mov
fdivs
jg
test
sub
rcl
mov
jle
and
shll
int
cld
loop
mov
ret
adc
inc
shlb
jnp
pop
mov
push
dec
mov
sbb
jbe
cwtl
ret
lods
fidivs
cld
xchg
shrb
jae
mov
rolb
xchg
mov
sbb
fcom
sbb
mov
cmp
jmp
pop
mov
lods
pusha
int3
dec
push
test
dec
test
mov
in
pop
insl
mov
cli
mov
mov
mov
mov
in
dec
adc
push
shrl
mov
call
int3
lret
mov
and
xor
jp
into
fistps
rcl
subl
lods
ret
dec
jns
sbb
fmul
in
mov
test
rcl
fldenv
pop
jg
imul
jbe
mov
ret
loope
movsl
shl
movsb
shrl
shlb
mov
mov
fsub
sahf
push
cwtl
outsb
add
negb
ror
test
jbe
or
aaa
sub
loopne
shrb
rcr
sub
sbb
sbb
sbb
mov
int
jg
mov
subl
test
fsts
inc
xor
and
cmp
mov
or
loop
adc
xlat
dec
pop
pxor
dec
insl
mov
cwtl
cmp
fwait
int
daa
add
pop
mov
and
aam
xchg
or
jmp
sub
mov
into
ja
into
add
mov
inc
push
mov
dec
je
fiadds
fbstp
fsubl
cmpb
fbstp
mov
jge
dec
push
jle
mov
andl
mov
test
mulps
dec
js
jnp
jle
into
ljmp
fidivl
jg
addl
xchg
jle
push
scas
jb
aam
sarl
xor
aad
ror
jnp
jno
icebp
adc
lods
dec
xorb
fnstsw
sub
fcompl
rorb
mov
cli
mov
scas
shll
add
and
sub
cmp
sbb
mov
ficompl
ja
sub
test
jge
jnp
adc
fimuls
dec
leave
lret
scas
je
jl
imul
mov
or
mov
mov
aad
orb
mov
jp
ja
or
fcmovu
dec
imul
rcr
cli
les
iret
aam
imul
js
imul
push
leave
test
mov
mov
loope
cmpl
leave
jns
mov
cli
out
aaa
leave
pop
mov
enter
fcomp
andl
mov
addr16
mov
int3
iret
or
mov
loop
sbb
mov
ja
stos
scas
mov
jl
cmp
mov
ret
enter
dec
adc
adc
iret
jbe
rcrl
jnp
push
cwtl
adc
xchg
fbstp
lods
test
outsb
mov
scas
xchg
mov
push
fdivrs
dec
lods
mov
loop
cmp
inc
or
scas
push
shrb
enter
jns
imulb
mov
jle
fsubp
shl
shl
ljmp
inc
inc
sub
mov
jle
icebp
lods
cmpl
fists
ja
fldt
addl
loop
mov
pop
mov
mov
sub
jecxz
sub
test
mov
cli
mov
in
add
xlat
mov
idiv
mov
push
fmul
jp
mov
loopne
mov
mov
mov
lea
loop
dec
jl
lahf
negb
in
and
mov
rcrb
dec
cmp
jmp
push
fsub
mov
scas
and
mov
fdivr
faddl
pop
divb
or
shr
cmp
iret
jle
bound
jns
adc
lods
inc
jp
rcr
mov
or
pop
mov
push
jle
inc
jg
mov
fsubrs
int
fst
push
fiaddl
sub
loopne
lcall
inc
shlb
cmp
lods
mov
pop
adc
mov
xchg
adc
pop
mulb
sub
rcl
mov
cmpsb
xlat
mov
ret
addr16
jp
mov
loop
pop
mov
shlb
pop
mov
rol
test
mov
jp
addb
cmp
xchg
enter
arpl
test
shlb
rol
sbb
mov
dec
iret
test
orb
fnstcw
jge
jg
push
cmpl
cs
fcmovnb
jb
shl
sbb
test
lahf
or
es
jp
sbb
jge
mov
jg
adc
or
sub
push
cmpl
mov
mov
js
outsb
test
mov
mov
jg
test
and
fld
stos
lcall
mov
mov
int3
loope
dec
cmp
jle
rolb
testb
loopne
mov
dec
xchg
xor
loopne
scas
sub
cmc
mov
sub
xlat
enter
out
mov
fisubrl
jle
fsubrs
dec
mov
shll
hlt
sbb
cmp
les
sbb
mov
sbb
sbb
xchg
hlt
jnp
xchg
pop
jle
in
movsb
jp
test
outsb
mov
mov
mov
aas
mov
pop
fcompl
push
cmp
jge
leave
scas
mov
int
int
fsts
fidivrs
sbb
loopne
jo
aam
lods
scas
es
aam
pop
inc
cwtl
mov
inc
cmp
aad
mov
lds
cmpl
fstps
adc
or
rcrl
mov
mov
sahf
mov
cwtl
loope
movsb
xchg
adc
push
loop
fnstcw
mov
shll
jns
add
jae
or
loop
lahf
loopne
mov
add
bound
pop
sbb
scas
jbe
and
xchg
xlat
fsub
jle
outsb
jge
xchg
mov
rcl
scas
sbb
jbe
insb
push
outsb
push
movsl
aam
sub
mov
mov
mov
inc
fwait
lea
call
out
int3
imul
fdivr
outsb
jbe
fucomip
lahf
adcl
cmp
xlat
inc
or
jp
shlb
addr16
in
mov
loopne
dec
pop
test
add
cmp
repnz
loope
roll
mov
add
cs
jge
xlat
test
mov
fistpl
scas
je
sarb
test
add
insl
cmpl
push
outsb
divb
dec
inc
dec
es
sbb
jle
xchg
mov
sahf
test
rclb
leave
mov
fsub
or
js
sarb
jbe
sbb
insl
int
mov
js
pop
imulb
lahf
movsl
loop
mov
adc
scas
aad
dec
mov
into
pop
mov
push
pop
ficoml
nop
fdivl
aad
jns
xorl
mov
mov
xorb
in
xor
sub
aad
add
inc
rcrl
fisubrl
stos
jecxz
cmpl
mov
mov
cmp
dec
daa
jge
test
sub
loop
sub
xchg
mov
rorl
out
mov
ljmp
js
ret
mov
pop
push
jl
and
call
mov
xchg
test
xchg
and
insb
cmp
inc
fucomi
ja
and
in
ss
mov
rcr
lcall
mov
mov
dec
mov
mov
pushf
loop
cwtl
xchg
fcmovne
into
fisubl
mov
insl
aad
sarl
insl
mov
out
fadds
pop
pusha
mov
pop
fwait
in
add
sbb
stos
xchg
rcl
outsb
fstl
push
jge
outsb
insb
sub
sbbl
sbb
sub
jnp
mov
push
sbb
sahf
daa
push
dec
adc
xor
jp
inc
sbb
jb
xchg
addl
xchg
xor
fs
fildll
xchg
scas
jge
pusha
sub
add
jnp
fisubrs
rcr
aam
add
lahf
mov
inc
loop
jecxz
mov
mov
enter
fmull
mov
sub
mov
dec
lret
or
jge
arpl
dec
aaa
into
mov
or
jns
ret
mov
add
inc
lods
mov
lods
and
addl
leave
mov
rolb
ffree
mov
loopne
das
cs
cmp
xchg
mov
mov
shll
sbb
mov
mov
add
test
mov
mov
mov
int3
jp
cmpb
dec
fcmovne
mov
scas
xchg
inc
mov
dec
mov
int3
pop
dec
fisttpl
scas
dec
lahf
mov
ljmp
aad
addl
fnstcw
int
rolb
adc
test
iret
xchg
mov
xchg
mov
cmpb
ja
lret
mov
loop
xor
enter
dec
pop
lret
enter
push
in
push
mov
stos
ret
sarb
or
pop
xchg
sarb
fst
sarl
jecxz
add
dec
mov
shll
inc
rolb
ret
jp
cmp
jbe
pushf
aad
sbb
mov
rorb
pop
out
orb
in
mov
lret
mov
ret
mov
jg
sub
xchg
cmpl
fnstsw
mov
movsb
jns
mov
fidivrs
pop
jp
rorl
aad
lods
ret
rcr
fnstcw
jbe
and
shrb
fcoml
mov
rol
or
xlat
or
in
cmp
xor
sub
jge
jp
sarb
mov
rol
fwait
jns
jl
scas
insl
lods
mov
data16
cwtl
dec
mov
inc
rcr
enter
jg
jnp
sti
cmp
ror
mov
jo
cmp
cmpl
mov
out
or
push
in
movsl
mov
push
mov
rcrb
iret
enter
rorl
into
jbe
mov
mov
jnp
mov
and
mov
loop
push
mov
loop
mov
mov
mov
cwtl
ret
test
lret
loopne
bound
mov
dec
inc
fisubs
cmpsb
mov
cmp
iret
loop
mov
ret
rclb
out
je
mov
bound
fcompl
lea
adc
xchg
movsl
sbb
xchg
ss
jp
scas
dec
dec
jle
jbe
ret
xchg
mov
jg
fdivrs
scas
and
ror
and
pop
mov
sahf
es
addr16
repnz
jbe
arpl
lods
int
loopne
jge
mov
in
push
mov
push
fsubr
call
fst
jg
ret
insb
into
push
cmp
lahf
fimull
aam
arpl
aaa
jb
lahf
jge
mov
mov
cmpl
ret
loope
inc
outsb
mov
fisttps
aad
lret
jecxz
lods
sub
mov
aam
ss
lea
fistpll
jle
xor
mov
mov
push
int3
ss
adc
dec
cwtl
imul
push
nop
enter
loop
xchg
xchg
les
ret
or
scas
shrb
pop
loopne
or
aad
cwtl
test
mov
pushf
sbb
cmp
mov
rcl
test
mov
xchg
add
scas
jecxz
xchg
in
add
fmull
faddp
or
addl
sub
lods
cwtl
into
aad
fwait
imul
test
enter
es
or
mov
inc
das
shll
loop
xchg
in
bound
mov
fimuls
mov
mov
dec
cli
test
cmp
testl
loopne
cli
pop
and
test
int
mov
aam
iret
cmp
scas
ret
add
mov
std
stos
xchg
or
ret
inc
arpl
js
adc
aam
inc
loop
mov
fnstcw
loop
push
loope
xchg
cmp
lock
dec
subl
sarb
cwtl
xchg
cld
jg
cltd
mov
dec
fisttps
xchg
loopne
loop
enter
inc
sahf
mov
lahf
shrb
mov
lods
mov
rcll
xor
fmulp
and
bnd
push
and
sarl
inc
stos
cs
xor
repnz
ret
mov
cwtl
std
add
sub
js
scas
cli
addl
fstl
ror
repnz
leave
and
out
mov
aad
add
rolb
pop
and
rol
mov
xchg
test
aad
in
xchg
and
outsl
xchg
jmp
inc
jl
scas
test
lods
mov
and
mov
fimuls
sbb
ret
inc
mov
lahf
jmp
mov
leave
xlat
test
mov
or
fidivrs
paddsw
jge
outsb
push
hlt
pusha
mov
mov
jbe
mov
dec
mov
lods
lods
mov
cwtl
jp
jns
or
fwait
scas
fcmovnbe
jne
enter
ret
sbb
jl
inc
fstps
test
aam
mov
dec
lods
sarb
cmp
enter
jle
inc
dec
arpl
out
test
xlat
aaa
imul
pop
mov
stos
pop
dec
fldcw
jecxz
or
inc
es
data16
pushf
test
sbb
pop
test
rorl
mov
ret
mov
aam
adc
lock
cmp
sub
rclb
dec
aam
jne
ffreep
in
inc
xorl
outsl
xchg
loopne
and
test
sbb
mov
ja
and
jmp
jecxz
int
jmp
sub
inc
pop
push
sbb
lods
addr16
js
mov
fwait
popf
mov
add
enter
cmpsb
or
lods
dec
jbe
pop
push
mov
subb
lret
mov
cmc
test
sahf
test
cli
sar
stc
cli
enter
stos
mov
mov
int
mov
mov
mov
pop
xchg
out
mov
jle
pop
or
rol
push
cmpsb
into
fiaddl
fadd
xchg
mov
cmp
rorb
add
scas
mov
add
adc
mov
loop
jp
fucom
lods
lock
shr
leave
dec
fdivrl
scas
mov
mov
lods
fidivl
mov
fsubrs
sahf
aad
pop
sub
lahf
mov
pushf
xchg
sub
pushf
mov
sub
xchg
into
mov
out
sahf
cli
pop
mov
jp
lahf
shl
push
sbb
mov
js
and
jle
add
xchg
into
mov
inc
and
push
ja
pop
shrl
rclb
pop
inc
jl
insb
aam
fdivrs
ficoms
shrb
lea
adc
adc
int3
mov
mov
out
mov
orl
lahf
mov
mov
cwtl
loop
and
dec
icebp
add
test
push
dec
pop
cwtl
cmp
bound
ret
leave
out
sbb
lods
jmp
je
neg
xlat
repnz
lcall
ret
fsubrs
jbe
js
outsb
inc
mov
subb
enter
popa
mov
cwtl
jge
xchg
mov
shlb
aam
dec
mov
cwtl
xchg
iret
mov
sub
stos
xchg
js
add
clc
iret
mov
jnp
ror
negb
lret
mov
mov
and
les
push
loope
mov
je
fists
and
push
jb
idivb
test
mov
pusha
dec
movsb
mov
js
mov
push
outsb
lahf
pushf
rorl
lahf
rcrl
sub
cmp
fcmovb
imul
mov
into
dec
out
mov
sahf
fcoms
jle
pushf
lods
xlat
jp
mov
pop
mov
loop
loope
fnstsw
sub
test
ljmp
push
sarb
mov
test
icebp
cwtl
aad
mov
jns
lods
int
aam
jl
mov
sbb
xor
cli
aad
inc
into
jle
js
dec
mov
je
rclb
test
inc
dec
fmulp
cmp
xor
cmp
mov
cmp
iret
rcl
mov
mov
fdivrl
enter
mov
push
mov
inc
xchg
test
cwtl
mov
fcomi
cmp
push
insl
les
pop
mov
faddl
dec
fisttps
jp
jg
mov
jecxz
push
scas
aam
lret
dec
and
mov
xor
fisubs
insb
fisubrl
movsb
es
mov
pushf
fistpll
fwait
jnp
insl
sarb
mov
jge
movsl
fldt
dec
test
push
sarb
jns
and
movsl
jg
cmp
mov
sarb
mov
invd
jle
and
mov
or
and
out
mov
loop
mov
fistps
cmp
sub
add
mov
ret
sbbl
jecxz
test
leave
mov
mov
mov
adc
jle
int3
aad
lods
push
aam
push
out
iret
mov
sbb
orb
fwait
xor
stos
outsb
jl
add
aaa
mov
jp
fisubl
push
add
imul
inc
push
and
ljmp
mov
xlat
rcr
int3
push
mov
subb
addl
popa
cmpsb
jl
scas
adc
mov
loop,pt
mov
adc
jp
mov
je
fsubrs
push
fsubr
sub
mov
mov
mov
mov
into
xchg
fs
mov
out
fimull
shll
ror
iret
mov
cmp
call
sarl
shlb
stos
mov
int3
mov
mov
xor
jl
pop
mov
cmp
jge
push
es
and
enter
xchg
ret
loopne
ss
loop
lahf
test
mov
int3
fsubrs
mov
fbstp
pushf
mov
fst
mov
es
pop
rcr
and
mov
sarb
mov
fcmovbe
add
ja
jmp
and
xchg
das
fwait
int3
roll
loopne
sub
inc
push
loope
imul
loop
jnp
mov
ret
push
or
mov
and
test
cld
rorl
mov
adc
es
adcb
mov
xchg
int3
xorl
push
inc
imul
rorl
mov
ss
int
mov
lret
push
movsb
jp
dec
into
cmp
fisubl
xchg
scas
mov
mov
fiadds
mov
ja
rcr
stos
cmp
mov
mov
jge
mov
mov
add
stos
push
inc
sarb
cmp
nop
cmpl
mov
int
jp
or
ret
mov
pop
scas
jp
inc
shlb
mov
loopne
imul
ret
jbe
fwait
scas
fldcw
pop
leave
and
fcmovnbe
aam
test
int
shlb
bound
lods
les
ret
addb
pop
cmp
addl
mov
xor
mov
mov
sahf
mov
mov
sahf
shlb
into
adc
mov
shlb
es
cmp
fcompl
fst
cmp
jns
mov
jns
js
xchg
shl
inc
rcr
iret
sbb
into
mov
jle
repnz
sbb
dec
rclb
jnp
jg
jl
int
cmp
adc
arpl
dec
lahf
loopne
loope
mov
jp
sbb
mov
popa
xchg
int
jecxz
push
or
add
je
scas
mov
sub
sar
mov
dec
js
call
add
leave
add
es
enter
lret
jns
mov
rcl
cwtl
xlat
scas
xchg
push
jecxz
in
ret
loopne
stos
out
jp
lods
add
xchg
loop
sub
jbe
mov
outsb
movsb
mov
mov
jl
inc
mov
jns
inc
or
fsubrs
ss
mov
mov
ja
push
lret
mov
enter
adc
ret
cmp
mov
loope
fistpll
mov
dec
loope
aam
mov
iret
jp
push
scas
mov
mov
xor
and
and
dec
or
mov
mov
movsl
enter
iret
ret
cpuid
loope
std
adc
into
loop
pop
mov
mov
enter
add
and
neg
out
stos
sahf
jg
jl
mov
shrl
cli
cvtdq2ps
mov
nop
jae
ss
lods
adc
cli
sbb
jmp
ret
sbb
pop
loop
out
mov
out
out
mov
mov
jecxz
mov
fnstenv
mov
test
fistpl
xor
jg
mov
mov
enter
ss
sub
jl
pushf
fbstp
cs
pop
mov
iret
test
loop
ret
aam
ja
es
sub
inc
push
or
aam
fisubs
out
dec
xchg
mov
fnstenv
leave
iret
add
scas
fs
pop
insl
xlat
leave
xchg
cmpl
adc
jbe
ljmp
arpl
push
bound
push
push
fistpll
inc
mov
test
add
cmp
jb
cmpsb
mov
jnp
jbe
mov
mov
jne
mov
add
leave
lods
rcr
inc
rolb
xchg
sub
cmpl
push
sbb
fiaddl
cmp
fadd
sbb
cmpl
rolb
mov
int3
gs
fwait
ja
loop
call
scas
cs
sbb
jmp
lods
xor
mov
jnp
inc
cmpl
dec
pusha
mov
mov
enter
mov
ror
loop
jle
iret
imul
shlb
nop
mov
out
mov
mov
jae
fcoms
into
test
mov
enter
and
dec
jnp
subl
ss
or
addr16
int
lret
cmpb
xchg
mov
mov
mov
mov
ror
cmp
jl
enter
icebp
mov
leave
or
or
cmp
nop
mov
jbe
cwtl
sar
mov
loope
sub
fst
test
cmp
lea
mov
hlt
loope
adc
sbb
test
ret
cld
leave
jp
scas
mov
push
mov
lret
sbbl
leave
jns
cwtl
mov
lods
pushf
ret
cli
pusha
jge
pop
stos
fisubrs
mov
lret
shll
add
inc
xor
dec
add
subl
mov
dec
sbbl
mov
pop
sbb
dec
inc
aas
pop
mov
jecxz
dec
mov
test
enter
xorb
cmp
fdecstp
test
ret
mov
inc
stos
inc
mov
fnstsw
sbb
mov
mov
imul
mov
dec
test
int3
loope
ret
and
out
cmpb
dec
sub
int3
cli
sub
iret
aad
push
je
roll
mov
scas
fnstenv
pop
movsb
mov
mov
lret
jle
push
mov
and
int3
xchg
xchg
inc
jge
and
or
or
mov
scas
jecxz
fcoms
std
leave
ljmp
mov
shlb
sub
into
test
jmp
jp
iret
add
decl
pop
int3
jns
push
mov
mov
aad
lods
jecxz
cwtl
fnclex
lret
scas
shrl
mov
into
ja
fimull
cmp
adc
insl
fildll
sbb
mov
andl
ret
sbb
rcrb
inc
lods
out
mov
dec
mov
scas
stos
sbb
out
jo
jnp
call
aam
mov
ret
setns
rcrl
fsubrs
outsb
int
test
lcall
enter
mov
xchg
es
rcr
xchg
pop
pop
adc
fcmovnbe
test
ret
dec
rcl
call
sarl
dec
sbb
call
js
fmulp
jg
xchg
dec
jl
cmp
jb
xchg
ja
jp
cmp
and
mov
rol
les
sarl
icebp
mov
enter
xchg
jg
fidivl
jns
mov
xchg
or
test
pop
enter
mov
sbb
cmp
je
lock
out
xchg
jl
or
iret
ja
loop
jle
jp
rcl
xor
rcrl
xchg
ret
scas
sub
mov
test
jp
mov
mov
cwtl
mov
ja
fcmovnu
jp
mov
aas
push
push
aad
rcl
leave
cmpl
or
mov
stos
sbb
test
fwait
jle
pushf
cmc
adc
and
into
add
dec
jnp
adc
xchg
xor
lods
hlt
cwtl
pop
cwtl
fisttps
fdivl
ror
and
push
mov
iret
dec
sub
fisttps
sub
pop
js
int
sub
mov
mov
dec
sub
imulb
lahf
mov
mov
adc
dec
jb
mov
ljmp
jecxz
push
fsubrl
jl
mov
or
lods
fidivrs
mov
add
mov
scas
xorl
xchg
and
es
insb
mov
fidivl
mov
lahf
shll
fnstsw
adc
jle
mov
add
cwtl
loope
fisubl
sub
lods
xchg
cld
push
mov
aam
mov
xlat
fdivrs
adcl
js
mov
mov
jns
ja
xlat
push
fadds
fbld
push
mov
mov
ficomps
jnp
adc
sbbl
adc
ja
nop
scas
int3
sbb
ficomps
add
stos
inc
lods
inc
jb
outsb
js
mov
mov
fwait
lods
jns
aad
mov
test
mov
add
pop
shrb
rorb
mov
pop
dec
movsl
fstpl
xor
bound
shll
push
cmp
push
es
or
mov
mov
jecxz
sbb
iret
jns
jp
fdivrl
bound
xchg
mov
pop
in
xchg
mov
xchg
mov
mov
and
mov
loopnew
or
fistpll
mov
cmp
xor
mov
test
mov
inc
mov
scas
mov
das
dec
mov
jge
xchg
daa
out
pop
lahf
jl
popf
cmp
rolb
adc
mov
ftst
lcall
or
jne
mov
jns
jge
test
fstpt
ret
mov
or
jnp
push
test
mov
mov
xor
sub
out
shrl
and
clc
mov
test
addr16
js
cmp
adc
int
pop
pop
xchg
cmpl
hlt
pop
sbb
sub
inc
add
fisubs
jle
sbb
fdivl
ret
add
das
mov
shrb
inc
xchg
xor
scas
cmp
adc
aad
pop
scas
aam
fpatan
jp
mov
xchg
lock
daa
nop
in
daa
lods
es
dec
xor
inc
les
lret
data16
mov
ja
rcr
jge
adc
aad
das
into
scas
xorl
es
sbb
adc
mov
out
mov
es
int3
mov
out
push
pop
outsb
add
xchg
mov
into
ljmp
mov
in
jno
fnsave
cmp
mov
and
xor
push
fcoms
mov
push
push
ret
iret
insl
jmp
aam
sub
xor
add
in
mov
jns
xchg
cwtl
jl
xchg
scas
into
xlat
sarl
test
movsl
fistps
leave
sub
js
shll
mov
inc
add
movsb
outsb
int
ficomps
xor
outsb
jl
fldenv
rcll
adc
pop
jns
loopne
punpckldq
xchg
shll
pop
scas
hlt
fistps
jnp
jp
and
clc
out
in
and
mov
mov
es
jp
das
sbb
xchg
ret
js
andl
mov
rorl
repz
or
aam
jecxz
inc
lahf
loopne
ss
fldenv
clc
or
lods
sub
iret
adcb
mov
mov
test
int
xor
xchg
jb
lret
inc
sbb
int
inc
xlat
into
dec
xchg
scas
int3
in
push
sarb
bnd
movsl
lcall
cmp
xchg
mov
adc
jecxz
popf
int3
es
pushf
dec
inc
sti
jbe
mov
pop
cmp
mov
mov
fcmovne
in
push
jbe
sbb
sbb
test
jle
fmuls
rclb
sub
push
scas
loope
jne
jmp
iret
pop
mov
or
mov
fldt
clc
adc
test
and
das
loop
and
mov
repnz
xor
cli
ja
or
inc
jl
ret
fcmovu
repz
call
xlat
sub
scas
das
loop
cmp
ja
leave
mov
mov
fdivl
cmpsb
lods
hlt
cwtl
push
push
and
push
es
fnstsw
or
les
out
out
mov
js
or
mov
shll
mov
rclb
scas
cmovnp
fdivs
jnp
mov
ret
sti
pop
ja
sahf
es
insl
xlat
cmp
or
movsl
fcom
test
loope
xor
iret
cmp
dec
rcr
ret
xchg
ret
leave
outsl
xorl
jecxz
outsl
and
jle
dec
data16
mov
mov
js
ret
loop
sysret
dec
mov
js
iret
sarb
loopne
mov
fcmovnu
fiadds
xchg
mov
loop
and
mov
test
rcl
or
dec
sbb
in
mov
loope
testl
ss
rcl
bound
or
leave
rcr
aad
cwtl
ja,pt
lock
mov
push
pop
bound
sbb
movb
mov
mov
mov
xor
jg
xchg
repz
hlt
mov
inc
or
into
ffreep
inc
ret
aad
outsl
fisubrl
shl
pop
loop
lret
into
push
sub
ja
popa
arpl
aam
lods
sbb
shl
insb
iret
mov
js
mov
test
mov
inc
mov
roll
mov
add
dec
fistpl
into
mov
adc
insb
mov
mov
bound
insb
mov
shll
or
dec
jl
in
in
jge
outsl
mov
mov
es
jmp
scas
ficompl
es
inc
in
cmp
pop
sbb
jl
xor
lods
add
or
cs
jg
int3
and
rcrl
rep
loopne
es
mull
mov
shr
xchg
les
incb
mov
orl
sarl
and
cs
cmp
outsl
sarb
enter
mov
loopne
nop
mov
xlat
imul
push
mov
xchg
arpl
jl
jo
lods
add
xorl
aaa
mov
push
das
es
xor
adc
mov
outsl
xchg
ret
fcmove
push
scas
sbb
fs
push
fcmovnu
sarb
rcll
mov
lock
jp
cld
ret
aam
ret
pop
lcall
movsb
out
push
add
mov
jns
mull
push
push
out
pop
push
jp
fdivrs
es
scas
dec
or
pop
scas
pop
aad
into
imul
pop
sbb
addr16
xor
aad
xor
aad
imul
xlat
xchg
enter
pushf
mov
test
repnz
xor
cmpsb
jg
pop
loop
cltd
xor
fwait
pop
out
sub
or
stos
shlb
int
push
dec
sbb
fnstcw
shrl
cmp
loop
xchg
repnz
daa
insb
xor
xchg
ljmp
es
fmull
push
int3
ljmp
rcll
mov
es
pop
es
stos
cs
es
sub
cs
mov
add
inc
mov
jle
cli
daa
rorb
jg
leave
xlat
mov
mov
sub
push
sbb
sub
lods
xchg
rcl
aad
mov
sarl
mov
test
outsb
stos
shlb
scas
xchg
mov
xor
je
jno
outsb
clc
mov
cmp
mov
into
dec
mov
shlb
fisubl
mov
mov
subl
or
aam
dec
aam
enter
sbb
jnp
push
inc
fidivrl
fxch
xor
sahf
ret
mov
inc
out
enter
repnz
ds
movsl
sarb
out
out
int3
enter
jg
scas
loop
iret
insb
or
mov
jge
scas
lods
and
mov
daa
adc
loop
sahf
mov
mov
jecxz
mov
enter
lret
test
cmp
es
shrb
mov
pop
sbb
and
sarl
fistl
and
mov
in
shlb
cmpsb
jp
rorb
int
xchg
mov
sub
subl
ficompl
ret
jne
mov
mov
cmpb
sub
push
mov
add
int
scas
test
sarl
fnsave
loopne
push
lret
stc
push
pop
test
push
fisttps
mov
lret
xchg
loop
adc
mov
mov
jle
mov
into
bound
mov
mov
sbb
xchg
add
mov
data16
dec
jge
mov
js
shlb
fadds
sub
inc
stos
xor
rol
fistps
aaa
mov
shlb
mov
sbb
es
dec
xchg
ret
in
rol
gs
inc
mov
insb
jle
pop
xchg
subl
or
cmp
mov
iret
fldt
out
push
xchg
mov
mov
mov
ficoml
or
jge
push
jg
shrl
mov
pop
mov
jge
test
insb
jg
insb
jge
movsb
in
movsb
mov
test
mov
mov
in
mov
scas
loopne
loop
ljmp
loope
pop
jns
test
shrl
push
mov
lds
lahf
push
mov
jp
fwait
mov
insl
ret
xchg
xchg
lcall
mov
cmp
cmpsb
leave
jmp
mov
xor
aam
loope
ss
rcl
scas
popf
loope
outsb
fiadds
lods
xchg
pop
jle
jae
loope
out
js
push
ret
scas
cmpl
sar
dec
leave
push
pop
stos
in
mov
fdivs
das
js
enter
xchg
add
mov
cmp
mov
or
lea
jae
inc
les
mov
jg
pushf
imul
out
mov
cwtl
mov
jp
cmp
adc
leave
in
roll
int
mov
lock
in
clc
fld
jne
ret
inc
push
lahf
mov
lods
jns
dec
mov
loopne
lods
int
lahf
insl
pushf
les
mov
iret
and
aam
jle
dec
into
orb
jp
push
push
fcoml
mov
es
mov
jge
mov
lahf
xor
cld
rcl
cmpl
mov
pop
cmpl
mov
adc
jp
jp
mov
cwtl
mov
aam
xchg
xchg
inc
test
inc
dec
jmp
jne
add
mov
mov
mov
jp
aad
pop
sahf
mov
mov
pop
jl
mov
loope
inc
scas
jl
ret
mov
or
mov
mov
fs
test
sbb
divb
out
mov
adc
iret
mov
scas
mov
scas
andl
ror
mov
fwait
out
jge
jns
fadd
int
roll
mov
pop
loope
sbb
mov
ja
pop
cwtl
nop
movsl
std
pop
jnp
mov
fiadds
push
mov
sbb
lods
sub
xor
mov
fldenv
pop
mov
xor
inc
out
rorb
jecxz
int
fidivrl
lods
rolb
xor
pop
fdiv
mov
jnp
fildll
fcmovbe
scas
sbb
sarl
lahf
dec
mov
fmul
push
shr
js
mov
mov
sub
sub
sbbl
ds
mov
cwtl
mov
fcmove
mov
test
add
shlb
push
mov
daa
jb
fcmovnb
faddp
or
rclb
mov
xor
ja
je
jg
cmpsb
push
inc
pop
pop
xchg
into
xchg
pop
fidivrl
cmpsl
int3
loopne
xor
inc
pop
jecxz
jno
jge
mov
mov
cld
mov
ret
into
fldl
add
pop
lea
push
mov
mov
shl
sarb
mov
jns
ss
aad
mov
mov
add
into
ror
fdivrs
pop
cmp
sub
push
sub
or
into
xlat
inc
shr
adc
inc
jmp
pop
enter
add
rclb
mov
mov
sahf
andl
ret
mov
iret
test
fcmovnu
jnp
mov
lds
sbb
push
cmp
dec
dec
mov
enter
lods
xchg
jge
fcmovu
pop
adc
test
xor
adc
int3
lock
mov
fidivs
pop
dec
inc
aam
or
test
sub
push
or
pushf
cwtl
xchg
cmp
push
sar
fwait
push
leave
push
loope
mov
jns
mov
mov
das
jle
dec
jg
iret
out
adc
shlb
jns
jg
fmul
push
sti
or
pop
add
mov
sub
mov
dec
out
cmp
sbb
in
in
test
and
mov
rclb
int
sbb
cli
jnp
fldcw
into
ret
bound
cmpb
mov
dec
pop
lcall
jne
scas
mov
xchg
fsubs
lcall
lcall
lret
mov
sarb
sbb
out
test
sub
cli
or
sti
test
ret
test
aam
loope
leave
imul
jle
sarl
jp
jp
adcl
xlat
aad
mov
add
jl
and
jbe
ja
lahf
nop
std
mov
leave
dec
jp
cmpl
ret
mov
subb
stos
dec
test
mov
and
int
sarb
rcll
and
add
ret
ds
ficoml
mov
add
outsb
mov
fdivrl
mov
xchg
push
jb
repz
aad
lods
data16
call
push
push
sub
pop
test
nop
sub
inc
mov
mov
sarl
imul
jmp
jbe
rolb
mov
mov
scas
sub
fidivs
loop
xlat
add
test
mov
ret
adc
fs
jle
dec
loope
loopne
and
push
scas
aad
dec
ret
out
or
rcl
mov
push
ljmp
xchg
jge
fstpt
enter
movsl
mov
js
fadds
mov
mov
mov
int3
adc
fstl
inc
loopne
sarl
rcr
or
aam
mov
push
sub
bound
xlat
fcmovnb
cmpsl
test
mov
test
loopne
adc
adc
pop
enter
arpl
cmp
shrl
cmp
cli
xor
sarl
jle
mov
push
sbbl
mov
xor
mov
stos
xchg
fstl
adc
js
faddl
nop
xor
add
mov
test
dec
adc
dec
push
inc
and
loope
cwtl
into
pushf
movl
jns
stos
cmp
adc
sub
fucomi
mov
dec
push
sar
pop
aam
rolb
loop
rcrb
aad
mov
push
mov
pop
xchg
scas
jnp
push
shrl
ret
and
inc
xorl
sbb
sbb
push
mov
fldt
mov
jle
lods
scas
int
push
clc
cwtl
rol
jp
mov
neg
xchg
rcr
sbb
mov
xchg
push
mov
add
bound
arpl
aad
ror
sbb
lret
loope
mov
fdivr
push
sbb
xlat
out
push
add
scas
loop
fnstsw
sarl
xchg
fsubrs
iret
mov
fstpl
or
inc
rcll
loopne
mov
sarb
jbe
xchg
imul
inc
push
mov
aam
loope
insl
fistpll
or
inc
dec
inc
sarb
or
ffree
outsb
int3
ja
insl
cmp
fwait
rcl
scas
movsl
push
fnstcw
mov
jns
jg
ja
in
mov
jge
xchg
push
adc
cs
adc
outsb
mov
pop
or
mov
enter
shl
or
aam
enter
jbe
test
jle
flds
test
jle
rol
jmp
dec
dec
mov
ret
and
rcr
jmp
rcr
fmulp
jno
inc
xchg
test
fbstp
insb
mov
mov
outsb
icebp
test
fcmovu
arpl
cs
and
fwait
push
pushf
xchg
das
rorl
xorl
lret
ja
mov
adc
adc
fsubrs
loope
mov
jecxz
mov
adc
test
sahf
mov
into
xor
pop
shl
cmpb
dec
scas
test
jg
cwtl
cli
sahf
cmp
push
lods
fcoms
popf
mov
mov
rcr
rorb
rcr
imul
pop
xchg
sarl
fnstsw
movl
lods
or
xlat
sub
dec
lods
mov
jo
jns
fdivr
sahf
mov
shl
loop
out
mov
jg
mov
fldl2e
leave
lcall
fidivrs
sti
es
leave
mov
data16
pushf
sarb
sti
lret
jnp
jl
and
xlat
ret
mov
aad
lea
or
push
in
lods
add
fildl
es
xor
mov
das
mov
mov
shl
sub
lret
fdivrl
fidivl
rcl
inc
mov
rolb
dec
mov
data16
mov
mov
mov
cs
mov
sbb
scas
jnp
js
or
push
iret
paddw
mov
loope
push
les
jbe
mov
out
out
mov
mov
xchg
xor
stc
popf
fbld
flds
fistpll
xchg
rol
mov
xchg
mov
aad
jecxz
aas
lea
into
dec
sbb
mov
sbb
jne
mov
xchg
and
mov
mov
mov
mov
jge
mov
mov
ljmp
leave
add
outsb
mov
inc
add
aaa
mov
mov
leave
faddp
jmp
jne
fs
dec
and
shl
mov
loop
fidivrl
mov
lods
sub
xor
mov
xorb
mov
ja,pt
jecxz
mov
fnstsw
aam
fdivrl
or
je
int
jp
sub
dec
jle
scas
fxch
pusha
inc
gs
lods
je
mov
mov
ret
int3
dec
stos
sarb
shlb
aam
inc
loopne
ja
fsubrp
mov
shl
adc
insb
cmpl
sahf
mov
mov
fsubrs
mov
add
cld
and
jae
cld
mov
sahf
fiadds
jp
aas
std
mov
test
sub
enter
jbe
sub
ret
mov
mov
enter
scas
push
mov
inc
mov
rcrb
mov
mov
test
and
std
jg
test
mov
mov
loope
lea
lods
push
pop
mov
es
jecxz
mov
test
mov
xlat
push
data16
xor
pop
jne
iret
loop
pushf
jle
adcb
mov
mov
dec
mov
sbb
shlb
out
xor
lock
js
mov
mov
aam
sub
jl
stos
jg
or
jmp
pop
fmul
jbe
pushf
inc
mov
loopne
pop
sarl
sub
int
add
fcompl
pop
and
push
shrb
fs
mov
aas
jecxz
xor
xchg
pop
adc
lahf
rorb
jp
mov
out
add
mov
mov
mov
mov
lods
mov
iret
insb
cmpb
incb
aam
mov
scas
xchg
cmpl
or
fdivrs
inc
loope
test
jp
mov
mov
adc
or
js
dec
aas
cmp
orl
mov
js
fidivl
int3
inc
add
adc
push
mov
in
cli
push
mov
sarl
rcr
and
fwait
adc
int3
scas
pop
arpl
add
mov
jg
lea
jecxz
xchg
rclb
jno
arpl
mov
lock
sbb
sahf
push
sarl
add
dec
jns
xchg
xchg
test
inc
rcll
mov
xchg
mov
cli
mov
je
fdivrl
adc
xchg
mov
scas
xchg
enter
jge
cld
sahf
mov
test
roll
ret
mov
xchg
scas
mov
xchg
sarb
jp
fs
lret
enter
jne
push
mov
rcl
adc
je
sahf
es
sbb
std
sub
lret
ja
shl
mov
dec
out
cmpb
push
rol
lods
xchg
xchg
jl
loop
int3
pop
rolb
pop
enter
xlat
xor
sub
pop
add
es
jnp
and
and
inc
fldt
mov
mov
adc
shll
pop
movsb
scas
mov
mov
sub
in
push
pop
sbb
loop
cmc
mov
iret
out
jne
push
cmp
xchg
loopne
ja
adc
mov
arpl
loop
mov
shrb
scas
out
repnz
xlat
lods
fsubs
jp
sbb
fisttps
lods
jecxz
mov
jns
je
int3
aad
or
mov
into
sbb
lcall
mov
rcl
loope
into
fistps
mov
pop
insl
inc
and
jecxz
cwtl
fiadds
xchg
jg
mov
push
iret
shl
dec
jns
mov
cli
jle
sbb
jge
insl
test
push
dec
mov
lahf
lods
jecxz
lock
xchg
iret
sarb
mov
outsb
aad
imul
and
sarl
mov
dec
jns
ret
cmp
pop
insb
dec
insl
ficompl
sbb
cmpl
movsb
inc
ss
cmpsb
mov
mov
or
ret
data16
scas
push
nop
scas
ret
cli
cmp
mov
cli
in
mov
loop
fsts
lret
shl
jp
or
je
fcoml
lahf
cmp
mov
fisubrl
js
jnp
scas
jle
enter
mov
pop
fdivs
sarb
mov
loop
out
movsl
jg
rcrb
mov
mov
xchg
rcr
adc
or
loope
cli
or
cmpsb
pusha
in
pop
test
ret
jl
inc
mov
es
sub
out
enter
dec
pop
adc
insb
jle
rcl
dec
sbb
jp
rcr
add
jg
ja
xlat
sbb
es
insb
js
das
inc
pop
jnp
mov
sysenter
cs
cli
adc
add
adc
movsb
insl
test
es
push
jle
js
dec
in
in
cs
jp
mov
mov
in
cmp
mov
pushf
pinsrw
fs
mov
pop
out
lret
push
loope
xlat
cli
movsl
loop
fisttpll
shll
mov
mov
xchg
repnz
ret
fwait
jecxz
cmpl
jp
shlb
inc
mov
xchg
push
mov
cmp
jne
cmp
jae
jle
jnp
mov
insb
call
xchg
jle
add
fsubrs
ss
inc
or
stos
ss
mov
jle
mov
mov
scas
movsl
icebp
lds
mov
loop
ljmp
shl
scas
int3
jmp
pextrw
fstps
cli
sbb
push
fnstsw
ja
mov
test
mov
mov
mov
mov
in
mov
icebp
adcl
dec
pop
pop
out
mov
mov
jp
fnstcw
ss
cmp
inc
mov
jge
cli
fbld
fldt
test
cli
lds
and
add
lods
loope
mov
lock
ret
xlat
dec
in
or
aad
ljmp
sub
jle
push
call
js
ret
out
outsl
push
and
cmp
add
fdivrl
fbstp
into
ret
rcl
dec
lret
lods
sbb
and
mov
test
xchg
mov
fcmovu
cmp
jl
mov
cmp
xchg
xor
lock
paddw
rcrl
jb
int3
add
ja
loopne
add
mov
lods
mov
cmp
fmul
cmpsb
xchg
in
lods
faddp
and
insb
jno
loopne
icebp
cli
add
fdivrp
lock
jge
dec
scas
fldt
arpl
ret
dec
pop
mov
ja
fsts
ret
rcl
iret
xchg
sbbl
mov
pop
mov
ficoms
inc
xchg
popa
testl
shlb
mov
xchg
mov
outsb
lods
xor
sub
dec
out
aam
push
push
push
add
adc
mov
sub
xor
orb
scas
cmpl
sub
jne
push
lods
cld
inc
insl
outsb
sbb
jmp
pop
ret
movl
sbb
jne
faddl
decb
data16
cmp
push
inc
les
movsb
mov
imul
fsubrs
lods
mov
jmp
sbb
jg
jns
sub
es
cli
add
push
mov
and
mov
cmp
adc
fcmovnbe
inc
pushf
rcr
cmp
test
jnp
pop
pop
insb
push
mov
dec
popf
mov
cmc
mov
sub
dec
add
movsb
shrl
or
adc
scas
inc
les
xchg
adc
jecxz
loop
rcl
fwait
sarl
data16
test
jmp
mov
iret
fildl
frstor
scas
pop
mov
ret
ja
arpl
test
pusha
xlat
cmp
sbb
add
fwait
loopne
jecxz
pushf
ret
cmc
fadds
jge
push
rorb
xchg
ret
rcll
pop
jns
fstp
mov
xchg
rcl
scas
jecxz
sahf
lods
add
mov
fsin
ja
sahf
enter
mov
mov
xchg
fucomi
leave
shlb
jg
das
jge
into
sub
or
jp
sub
fadd
mov
mov
xor
enter
into
cmp
arpl
sbbb
fidivs
cwtl
mov
scas
xchg
lds
jp
dec
hlt
fidivrs
enter
mov
iret
enter
int
fcmovnbe
jge
jnp
sti
dec
adc
mov
sbb
clc
addl
push
jg
mov
xlat
scas
fisubs
mov
or
jge
shr
xor
sahf
fnstenv
loopne
aad
scas
mov
sub
loope
xor
test
sahf
jecxz
and
fsubs
mov
fsubrp
fwait
test
add
imul
test
test
cmp
adcb
hlt
mov
les
mov
dec
int
and
loop
scas
shr
inc
jp
mov
adc
repz
mov
shl
xor
or
lret
xlat
mov
cmpl
mov
xorb
jge
outsb
mov
aaa
lods
fldcw
xor
fs
xchg
mov
push
and
les
int
pop
loopne
mov
inc
push
imull
push
jg
and
cmp
test
leave
sub
movsl
and
lods
inc
jg
js
aaa
mov
shrl
lret
enter
mov
andb
ret
fsts
repnz
addr16
nop
fiaddl
stos
add
jecxz
mov
jecxz
into
mov
sti
mov
lret
fcom
inc
mov
push
xchg
jecxz
lcall
lods
sbb
and
ljmp
fldt
mov
aam
pop
stos
sub
mov
fsubrs
mov
jp
mov
mov
enter
testb
jecxz
dec
mov
sbbl
mov
pop
lret
orl
movsb
or
mov
xchg
test
mov
int
pop
lods
enter
mov
mov
xchg
fildll
mov
mov
test
jmp
push
mov
out
and
mov
jo
scas
leave
daa
jecxz
push
push
int3
jns
mov
lods
xor
mov
shrl
stos
out
jle
mov
mov
scas
mov
jg
fadd
mov
cmp
shll
jecxz
ljmp
scas
xor
test
shlb
jb
push
stos
mov
pop
xchg
imul
int
dec
xchg
jle
mov
jp
fcmovne
ret
insb
mov
push
ss
fmul
mov
loop
outsb
ret
outsb
scas
inc
or
jle
in
xchg
fisubrl
clc
cmpl
jp
js
enter
aad
ljmp
cmc
jg
filds
ret
inc
xor
sub
sub
mov
fbstp
jge
imul
mov
xor
sbb
mov
jge
enter
pop
mov
movsb
nop
shrl
shrl
mov
cmpsb
and
stos
xchg
jns
outsb
jge
cmpb
imul
aad
scas
aam
adc
push
jge
or
push
call
mov
js
mov
shrl
pop
sbb
fsubr
mov
mov
pop
movsb
call
repnz
rcrb
test
jg
add
mov
xchg
call
fldcw
jne
push
push
and
fimuls
ds
jge
leave
nop
push
mov
jnp
subb
jo
mov
push
inc
inc
adc
stos
pusha
and
rorl
jl
push
xor
push
ret
je
cmovp
mov
fnstcw
test
add
mov
loop
mov
push
push
mov
fisubrl
pop
mov
scas
mov
dec
shrb
inc
or
test
mov
mov
mov
test
mov
fcmove
mov
inc
fnstcw
mov
jge
enter
cmpl
inc
xlat
jns
fwait
test
loopne
clc
loope
ljmp
adc
movsb
shll
bound
cli
xor
lods
or
loop
dec
cmp
mov
mov
dec
lods
test
iret
push
scas
aad
outsb
mov
lea
jnp
imul
cmpl
subb
mov
sub
inc
movsb
ljmp
iret
dec
mov
xor
fsubl
outsb
xlat
ret
and
test
stos
sti
ja
ror
rcl
dec
roll
fistl
test
mov
fstl
insb
mov
test
addb
out
sahf
out
cmpl
daa
fldl
mov
adc
int3
dec
ret
out
icebp
mov
sarl
pop
ret
mov
clc
sarb
andl
add
mov
mov
sub
mov
mov
aas
leave
sbb
ffree
rol
pushf
test
ljmp
enter
cli
cmp
ljmp
inc
add
sti
mov
loopne
js
scas
cmp
inc
pusha
test
mov
jl
rolb
xor
mov
mov
push
test
mov
fildll
xchg
sbb
adc
dec
and
aaa
inc
int
mov
sbb
enter
mov
inc
ror
jo
and
aaa
inc
leave
ret
ljmp
jge
aad
mov
sub
cs
rcl
fisubl
ljmp
insb
fiadds
into
push
lods
mov
mov
mov
leave
push
sub
or
ss
and
mov
jle
mov
mov
add
mov
loopne
cmp
jno
mov
mov
aam
mov
mov
mov
lea
mov
mov
ja
pop
jne
xchg
cmp
xor
pop
fimull
sub
sub
int
mov
mov
repz
mov
xchg
dec
ficoml
rorb
xor
js
and
shll
imul
pop
rolb
test
mov
inc
mov
stc
jl
mov
xor
mov
mov
into
and
add
mov
sbb
jecxz
mov
or
mov
or
pushf
mov
ret
pop
lahf
std
inc
jle
mov
xor
add
mov
es
fildl
adc
pop
mov
out
in
bound
stos
mov
mov
ja
fsubrs
ret
test
jecxz
mov
les
inc
lea
xchg
xlat
fidivs
jl
dec
andl
outsb
filds
push
or
mov
adc
push
loopne
sub
dec
andb
cs
rcr
out
movsl
mov
sbb
mov
add
adc
xor
mov
sahf
loop
pop
sbb
fstpl
xchg
popf
mov
jbe
mov
leave
scas
mov
and
scas
mov
out
cwtl
mov
bound
call
or
mov
enter
popa
bound
loopne
mov
dec
mov
rcll
cltd
xchg
push
es
jge
call
xchg
iret
mov
mov
fstps
into
cmp
push
jl
xor
jmp
and
lahf
ret
loopne
sub
jmp
mov
push
inc
sub
jb
adcb
mov
loope
push
push
es
dec
mov
decb
mov
xorl
clc
rcl
adc
and
imul
mov
cmp
shlb
insb
mov
arpl
movsb
adc
push
pusha
mov
mov
fcmovne
rcl
or
mov
hlt
dec
fcomp
fcmovnu
add
sbb
adc
cltd
mov
js
mov
loope
sarb
jnp
loop
mov
inc
adc
pop
fcompl
mov
inc
es
int3
pop
fldcw
ja
sbbl
leave
dec
outsb
mov
cli
sbb
mov
loopne
xchg
lods
enter
ret
iret
mov
andl
add
mov
jge
or
mov
fcomps
cmp
mov
fs
xchg
mov
inc
xchg
mov
push
std
loop
or
rcl
xor
scas
test
fistps
or
jnp
das
cmp
xlat
push
add
push
test
mov
cwtl
xor
dec
es
js
ljmp
test
inc
mov
mov
dec
in
cmp
xchg
addl
or
aam
xchg
ret
les
jge
mov
dec
insb
fisttpl
shlb
leave
sub
shlb
out
and
rorb
and
aam
fucomp
in
arpl
sbb
mov
lods
aad
scas
loope
into
push
sarb
mov
jae
scas
in
imul
and
pop
mov
mov
into
test
mov
jns
orl
repnz
jmp
into
and
rcll
data16
mov
call
je
jns
jb
jbe
fmull
loopne
aad
jp
mov
sahf
loopne
lahf
loope
rcrb
mov
loope
rcr
pushf
mov
or
loop
lret
mov
inc
push
add
sbb
movsb
mov
leave
insb
leave
jge
fwait
cmpsl
ja
fidivl
shrl
mov
adc
or
lahf
mov
rcr
push
jno
aad
mov
iret
out
cld
fisubrl
xorl
pop
movsl
cmpb
mov
xor
sbb
cli
jg
loopne
es
push
or
test
push
sub
or
sub
cld
mov
rclb
leave
loop
or
orb
mov
mov
adc
lock
mov
loopne
cld
mov
inc
and
fstl
pushf
xor
data16
fdivrl
int3
lods
rolb
lgs
fistpll
sub
gs
scas
sbb
push
js
pop
jns
cwtl
int
ret
xchg
jge,pt
sub
mov
sahf
pop
or
mov
sar
es
aam
add
jns
loopne
push
cmpl
mov
fisubrl
lods
rorb
mov
jns
leave
mov
fiadds
mov
mov
cmpsl
mov
mov
imul
jbe
push
in
shlb
jle
test
cmp
sbb
cli
or
sub
mov
add
loop
mov
pop
add
xor
and
ret
fidivs
sar
roll
scas
insb
into
mov
mov
mov
sbb
lods
js
enter
rorb
subb
ror
dec
pushw
dec
divb
mov
lahf
sbbl
popl
iret
mov
mov
aad
mov
scas
js
xor
mov
jns
ret
pop
ss
xor
ret
mov
or
ror
ja
inc
fsubrs
mov
movsb
insb
fnstcw
mov
xchg
jl
jb
mov
fcmovbe
sarb
xor
jb
test
xlat
shr
fnstenv
push
and
orb
leave
sub
filds
mov
mov
aam
cli
dec
jg
into
and
and
jl
xchg
inc
xor
loop
pushf
lret
mov
mov
xor
int3
test
fimull
add
sub
es
or
xchg
shrl
pusha
push
inc
sbb
sub
lods
mov
push
sbb
outsl
mov
pop
sbb
add
sahf
imul
out
or
fidivrs
mov
scas
aas
test
ja
and
fdivrl
mov
sbb
push
and
jp
add
dec
iret
sub
fst
loope
sbb
test
ret
or
mov
jns
mov
pop
iret
cs
pop
mov
jecxz
mov
mov
pop
test
test
lcall
mov
xlat
mov
and
xor
paddb
loop
and
loopne
xchg
dec
jg
fisttpll
aam
bound
mov
sub
or
lea
out
ljmp
lods
xlat
sarb
jmp
and
aad
scas
test
lret
fcomps
mov
jecxz
stc
mov
mov
jmp
jmp
jecxz
fistl
xchg
xor
pop
mov
jle
push
fstpt
shll
push
dec
pop
dec
sbb
jns
adc
imul
lret
fldcw
jb
iret
jnp
aam
adc
push
push
xchg
jg
cmp
enter
jne
cwtl
int3
sarb
leave
push
or
lods
shl
aam
ror
mov
sub
xchg
adc
fdivrs
enter
xchg
int3
leave
rcr
mov
andl
add
jb
mov
leave
outsb
ja
inc
clc
insb
loopne
iret
into
stos
mov
fimuls
mov
jp
push
shl
or
dec
popa
loop
push
rclb
nop
mov
fisttpll
push
sub
sarb
xlat
mov
fcomp
cmc
fisttpll
push
lcall
loop
out
ret
fildll
loope
fnstenv
mov
jp
mov
mov
jl
sub
pop
outsl
xchg
add
and
faddl
ja
aad
add
fcmovnb
mov
pop
loop
out
inc
pusha
sbb
shll
mov
fiadds
aas
xchg
popf
leave
sbb
jae
mov
aas
xchg
mov
int3
mov
mov
test
cli
push
xor
in
mov
mov
mov
idivl
mov
out
mov
rol
lahf
jp
jecxz
mov
jle
sarl
mov
jl
adc
je
into
int
mov
std
ret
cmpl
push
ret
mov
testb
or
sbb
lret
jae
subl
adc
and
leave
rcrl
jge
pavgw
jge
fsubrl
cmpb
mov
fst
or
inc
lahf
mov
xor
cwtl
js
adc
mov
enter
mov
je
fisubl
stos
mov
mov
in
iret
mov
mov
mov
mov
bnd
in
add
rol
pusha
push
mov
sbb
loopne
movsb
jmp
fcmovnbe
adc
mov
les
arpl
fidivs
dec
fxch
ret
js
repnz
mov
fcmovu
mov
into
ja
mov
loope
mov
pop
leave
stos
xchg
ror
rcl
movsb
mov
mov
mov
inc
push
add
testb
push
fcmovnb
aam
dec
testl
outsb
mov
lcall
out
cmpsb
out
mov
mov
js
mov
cmp
cmp
inc
enter
jmp
or
jne
sub
rcl
popa
fdivs
arpl
aaa
fimull
xchg
add
xor
into
sbbb
lea
loopne
cmp
xchg
rcll
imul
dec
sarl
jle
lock
cli
lods
mov
std
cs
and
ss
push
lds
movd
mov
loop
scas
sarb
lahf
ja
mov
push
ret
sbb
jmp
enter
andl
mov
or
aam
leave
jns
mov
jp
dec
ss
ror
xchg
aad
into
adc
decb
dec
and
lcall
mov
cmp
int3
shlb
mov
dec
loope
sbb
les
hlt
mov
roll
loope,pt
repnz
fisubs
loope
into
dec
orb
mov
stos
add
mulb
fwait
test
mov
push
fsts
sarb
scas
shrl
orl
pop
mov
mov
test
leave
bound
dec
pop
jbe
lods
fmuls
les
sahf
roll
shll
cmpsb
insb
mov
mov
mov
andb
sbb
dec
push
arpl
int
dec
adc
dec
aam
lods
dec
pop
jbe
lea
test
mov
js
test
xor
mov
cmpsb
aad
inc
fwait
jp
aam
fsubp
loopne
adc
mov
and
xchg
cltd
or
das
xor
or
fidivrs
xchg
or
test
mov
sub
jnp
and
scas
test
cwtl
loope
mov
mov
sahf
scas
mov
jl
fisubrl
xchg
mov
or
lods
stos
cmpsb
mov
rclb
mov
loope
jbe
cwtl
jge
ljmp
pop
std
and
lock
mov
mov
arpl
pushf
xlat
cmpsb
js
mov
mov
add
mov
loopne
dec
sbb
rcr
xchg
xor
or
int3
les
sbb
mov
mov
pop
jle
and
arpl
fidivrs
pushaw
fistpll
push
mov
sarl
cmp
mov
cmpl
cmp
js
mov
fstps
test
cwtl
jecxz
aad
pusha
mov
xorl
mov
loop
mov
jl
ret
lea
scas
jle
mov
test
ret
test
or
dec
mov
cmpsl
sarl
xchg
mov
mov
imul
ret
lods
je
mov
lret
sbb
mov
sbb
and
in
faddl
sub
dec
mov
jns
xchg
ffree
enter
subb
push
loop
cmp
ret
mov
xchg
scas
xchg
jg
ret
mov
dec
filds
xchg
pop
mov
jle
xor
cmp
dec
add
cmp
mov
cmp
test
jg
mov
jns
and
loope
scas
clc
adc
push
ds
test
xor
dec
push
jg
xor
mov
or
mov
xor
fstpt
int3
sarl
stos
mov
add
sbb
add
pop
sahf
mov
icebp
xor
es
jne
cli
inc
mov
mov
mov
es
loopne
mov
adc
clc
mov
in
xchg
daa
jb
and
jp
jp
rcrl
push
mov
scas
cmp
bound
jae
sub
jp
jmp
ret
test
or
shlb
xchg
dec
in
into
mov
push
add
xchg
loope
push
inc
sbb
dec
enter
loopne
shrl
add
mov
mov
call
and
cld
rcr
jg
mov
scas
add
cmp
sub
pop
mov
js
out
or
das
adc
mov
xchg
scas
int3
ja
dec
ret
mov
xchg
jb
jp
mov
pushf
nop
mov
es
mov
and
inc
mov
dec
xor
mov
jb
es
sbb
les
cltd
dec
leave
es
cmpsb
pop
pop
sub
out
insb
pop
or
js
pop
je
popa
adc
adc
ror
xchg
sarl
xchg
fcompl
xchg
bound
hlt
lahf
insl
mov
sub
mov
fs
stc
mov
mov
jb
dec
push
mov
insl
mov
cmpsl
pop
loop
mov
rcl
jns
mov
shll
gs
mov
js
aad
ja
fsubrs
fidivl
int3
lahf
cmp
mov
inc
or
into
push
loope
movsb
mov
inc
jmp
mov
cmpsl
scas
mov
push
loopne
mov
mov
lods
jo
cli
loope
iret
rorl
sarb
jp
lahf
loopne
pushf
xchg
mov
mov
fnstsw
scas
mov
div
push
imul
mov
loop
clc
fstpt
es
mov
mov
mov
das
rcll
fcmove
loope
jle
scas
fildll
stos
cs
xchg
jmp
xor
imul
push
mov
je
mov
insl
inc
out
insb
mov
mov
stos
inc
mov
jecxz
test
es
xchg
jg
fsubrl
jbe
outsb
sahf
jbe
outsb
dec
insl
test
mov
mov
dec
mov
loop
cmp
jecxz
and
and
leave
daa
gs
cli
pushf
aad
arpl
das
xchg
mov
jnp
mov
lods
pop
and
and
mov
rclb
pop
xchg
or
rorb
gs
mov
fwait
mov
int3
jp
dec
pushf
jecxz
lock
xlat
dec
mov
adc
fadds
imul
or
jl
js
mov
loope
add
mov
sbb
aas
test
push
jl
test
cli
outsl
loopne
rcr
aad
jle
xchg
ret
pop
mov
into
leave
cmpsb
shlb
aaa
jns
mov
arpl
mov
mov
xchg
and
jns
out
movsb
jns
bound
cmpl
pop
mov
cmpsb
imul
mov
or
dec
aaa
xchg
jne
push
test
loope
scas
ret
int3
pushl
xor
mov
xchg
mov
dec
bound
rol
mov
les
mov
je
pop
lods
jnp
mov
sti
xchg
xchg
mov
mov
xor
jp
mov
mov
xor
ret
mov
idiv
in
dec
mov
loop
add
lods
mov
int
scas
js
icebp
dec
or
fists
ja,pt
aad
fstpt
repnz
mov
scas
jns
enter
mov
rcl
imulb
xor
jbe
adc
mov
in
cltd
out
dec
xchg
fimull
ret
mov
movsl
sub
dec
push
sbb
fld
or
mov
scas
mov
inc
fcmove
aam
fidivrs
jg
movsl
jns
jge
ja
lret
shr
stc
in
hlt
pop
push
cmp
mov
mov
mov
mov
jl
dec
jno
scas
sub
xlat
ja
es
push
xchg
fidivl
fsts
test
lret
roll
enter
xorl
xchg
mov
inc
inc
arpl
movsb
ret
scas
jnp
fisubrl
scas
stc
xor
test
sub
fistps
mov
loopne
xlat
rcl
leave
ret
movsl
fiadds
fsub
mov
dec
mov
adc
add
notb
cwtl
pushf
sarl
mov
mov
loope
ljmp
mov
shll
jb
fnstcw
inc
push
orb
sub
sub
iret
lahf
lcall
orb
shll
mov
jge
inc
mov
xor
jecxz
fwait
mov
sahf
cmp
jg,pn
jp
fcomi
mov
fldcw
cmpsl
mov
or
js
leave
loopne
adc
dec
loope
int
dec
scas
fcmovnu
js
mov
jns
repnz
aam
xchg
adc
mov
jl
mov
shrl
xchg
je
sub
sahf
test
imul
or
cmp
cmp
push
ffreep
adc
sub
xor
jg
shll
sub
mov
loop
ljmp
lea
sub
lahf
jg
movsl
hlt
sbb
lods
rcr
adc
jmp
cmp
lahf
jp
and
mov
lds
jp
jge
mov
pop
out
fsub
dec
jp
sub
push
popa
fnstsw
insl
sbb
adc
mov
leave
test
xchg
fnstenv
shl
push
rcl
test
mov
ja
dec
iret
dec
lret
outsb
lods
rolb
mov
test
aad
es
cmp
push
mov
adc
push
mov
outsl
fnstsw
cmp
xchg
lea
sbb
cmpl
cli
shlb
test
jle
es
push
and
ret
sub
inc
mov
in
fadds
or
sbb
leave
fidivl
dec
test
xchg
ljmp
scas
aam
subb
icebp
mov
cmp
push
jno
es
fisubrl
and
push
xor
int3
inc
loop
mov
jp
imul
push
mov
mov
jnp
repnz
xchg
aad
sub
xlat
mov
fmull
adc
fidivs
mov
jbe
outsb
fcoms
subb
loop
mov
imul
rcrb
loop
rolb
sarl
subb
jns
rcl
pushf
mov
test
mov
inc
aas
out
inc
xor
fsubp
adc
subb
cwtl
jo
int3
aad
aad
and
inc
jbe
jbe
stc
mov
ja
enter
inc
xor
shll
int
adc
test
ror
add
loope
dec
lds
xlat
mov
fidivrl
ror
cmpb
jns
movsb
jg
fdivrs
inc
scas
scas
loopne
lea
cmp
aad
fisttpl
movb
cwtl
mov
mov
fldt
int
mov
dec
ret
pushf
mov
pushf
mov
add
iret
jge
int3
repnz
xchg
rclb
xchg
cmpl
test
pcmpeqb
mov
jg
mov
inc
and
pop
fiadds
jge
cmp
pusha
out
mov
scas
add
mov
sub
fnstsw
pop
mov
jl
fnop
int
nop
ror
out
movsb
addb
leave
js
pushf
scas
jecxz
movsl
nop
add
mov
pop
test
lock
mov
fnsave
mov
pusha
jle
leave
rol
shll
or
leave
mov
sbb
dec
rorb
pusha
mov
sti
nop
sub
cli
jbe
subb
sarb
and
into
pop
push
xchg
mov
sub
in
jp
pop
jnp
push
mov
sbb
in
lods
sub
pop
iret
lcall
or
ja
pushf
pop
es
mov
test
push
jns
mov
jle
js
mov
mov
mov
into
lret
roll
push
mov
xor
and
js
mov
jle
ss
fmuls
mov
mov
mov
lret
fs
jp
jnp
and
lods
jecxz
sbb
dec
test
mov
test
cmpb
adc
or
mov
mov
out
jmp
push
inc
fdivs
int3
mov
jns
or
mov
aad
cwtl
fiaddl
lahf
movsb
loopne
mov
push
stos
add
jp
mov
jecxz
scas
mov
fstpt
dec
mov
shrl
lods
out
push
mov
sbb
lret
faddp
test
mov
mov
xchg
aad
fwait
push
ja
adc
sbb
fnstenv
insl
ret
sub
inc
push
adc
push
jle
inc
andb
mov
or
je
cli
insb
jbe
mov
mov
iret
inc
in
and
mov
push
idivl
xchg
sbbl
js
fnsetpm(287
loopne
jmp
push
adc
push
lods
shlb
ret
pusha
dec
mov
test
stos
or
cmp
popa
ret
cmp
enter
fsubl
iret
movsb
rcr
fcmovnbe
or
mov
jae
into
scas
sbb
loope
cmp
jp
mov
shrb
xchg
enter
cmpsl
adc
adc
test
cwtl
mov
xchg
iret
mov
js,pt
cmp
xchg
mov
cmp
icebp
imul
loop
xor
mov
fnstcw
movsl
cwtl
jnp
lahf
inc
mov
into
fisubs
decb
das
addl
sar
mov
lahf
fsubl
push
shll
jns
cli
shrl
ret
mov
stos
adc
out
jb
pop
dec
es
push
mov
dec
inc
mov
xor
stos
fwait
sub
mov
inc
xchg
rcl
shlb
sub
mov
sbb
cld
fcoml
aam
loopne
jbe
adcb
jecxz
pop
mov
andb
mov
mov
in
pushf
or
rorl
push
sti
cwtl
subl
lret
and
sub
jge
addl
xchg
mov
adc
testb
fsubl
lods
mov
enter
jecxz
sub
mov
loop
pop
jbe
lea
mov
fst
or
aam
dec
xor
mov
add
mov
ss
mov
loop
ret
aad
cmpsl
call
inc
adc
lds
scas
cli
dec
loop
out
add
outsl
adc
sahf
cmp
test
xchg
repz
ficomps
xchg
fidivl
outsl
hlt
iret
in
sbb
push
push
push
jp
xchg
test
test
je
mov
ja
jg
lods
jle
xor
sub
aam
test
lret
ret
popa
lods
test
sbb
hlt
fdivp
jp
repnz
push
cmp
fcompl
sub
dec
sarl
mov
lahf
ret
mov
loop
xor
sarb
fstps
add
lret
mov
push
dec
jb
inc
rorb
mov
ret
fistpll
in
dec
imul
rclb
push
int3
ret
scas
pop
ror
addr16
out
fwait
mov
aam
push
and
mov
lock
push
fimull
int
xor
enter
or
into
dec
push
mov
test
sub
js
test
jbe
hlt
mov
inc
lcall
cmpsl
inc
pop
lods
jecxz
pop
xchg
add
adc
clc
adcl
lea
cs
ja
jle
cwtl
mov
sbb
xchg
push
mov
cltd
jecxz
mov
dec
int
loope
test
icebp
mov
pop
pop
scas
iret
nop
gs
jnp
loop
jo
mov
inc
jl
aad
sahf
sarb
fmull
rcrb
ljmp
jecxz
js
push
enter
and
and
or
jle
scas
mov
in
loop
xchg
mov
arpl
push
sub
cmp
inc
mov
mov
das
pmaxsw
mov
out
mov
lahf
mov
shlb
cmpsb
mov
xor
mov
push
jb
or
jns
sbb
jmp
aam
mov
sahf
jnp
fwait
mov
fists
and
cmp
enter
xor
mov
popa
scas
rol
or
loope
scas
add
pushf
lods
fcmovnbe
lret
enter
loop
and
out
mov
fisttps
jl
ret
jecxz
leave
mov
jo
inc
mov
mov
ror
pop
aad
xchg
out
rclb
fildll
mov
sub
out
mov
dec
mov
pop
lock
jnp
cmp
inc
jb
mov
jb
mov
movsb
mov
test
xchg
ss
or
int
ret
shr
loop
jb
sub
and
js
loop
scas
mov
dec
pop
jl
lods
std
mov
mov
iret
or
or
roll
adcl
pop
fidivrl
loop
addr16
mov
aam
fdivrl
jle
orl
int3
sub
push
pop
lcall
sarb
adc
aas
nop
ret
adc
fucomi
lcall
inc
mov
add
subl
fimull
loop
in
lds
xor
mov
imul
adc
lods
ret
push
imul
mov
fbstp
insb
orl
cmp
pop
insb
push
jp
jmp
fstpl
in
jne
jns
dec
in
mov
test
data16
cmc
fstpl
into
mov
xor
inc
stos
int
scas
out
jo
enter
fdivs
sbb
in
and
stos
loopne
fsub
mov
outsb
test
jnp
cmp
cmp
sti
imul
jbe
jne
xchg
inc
mov
insb
aaa
xor
mov
int
xor
fwait
pop
das
test
mov
mov
xchg
outsb
fisubrs
inc
mov
inc
mov
enter
or
dec
bound
dec
push
rclb
jle
aam
adc
jbe
imul
sbb
fistpll
xchg
les
adc
loope
andb
mov
leave
andl
mov
test
ret
inc
mov
inc
mov
cmp
pushf
or
cmpsb
pusha
jmp
lahf
scas
imul
into
ret
shrl
lods
test
jle
mov
mov
mov
jge
test
cmp
fcmovnbe
sahf
arpl
or
test
mov
aam
sbb
into
fdivrl
inc
mov
mov
push
and
push
ja
fwait
aam
dec
iret
rorb
mov
dec
xor
enter
sbb
mov
lods
int
enter
js
aam
sub
scas
jge
loope
mov
mov
jmp
sbb
leave
in
stos
adc
fdivl
mov
sbb
mov
js
xchg
mov
lea
xchg
push
jle
es
inc
jg
mov
lret
cmpl
xlat
mov
mov
ror
cmp
in
mov
and
adc
fidivs
aam
mov
sbb
mov
mov
ret
jp
adc
mov
ret
mov
add
mov
and
xchg
fdivrl
aam
pop
jp
scas
shlb
das
sub
sbb
out
out
leave
aam
dec
mov
adc
ds
pop
pushf
add
mov
lret
mov
sbb
mov
fwait
int3
mov
scas
int3
ljmp
add
lea
rcr
ljmp
loope
mov
test
fisubrl
fisubrs
fidivrs
push
cmp
xlat
imul
sub
inc
movsl
sbb
fldt
sbb
std
scas
mov
mov
pop
cmc
aam
cmp
ret
sbb
xchg
jecxz
fidivs
loopne
aam
je
sbb
xchg
and
loop
mov
xor
stos
in
addb
inc
push
insb
mov
mov
enter
mov
shl
jo
cmp
into
fdivs
push
rolb
jns
sbb
es
aam
mov
aaa
fdivs
mov
sarl
loope
xchg
lods
fistl
fs
mov
jg
mov
leave
lods
jp
scas
add
test
aad
adc
jns
adcl
and
lods
mov
fcom
add
ss
popa
push
cmc
cmp
push
scas
jg
mov
xchg
test
xchg
jge
mov
lcall
test
jecxz
mov
hlt
outsb
pop
mov
test
fcmovu
ja
and
aaa
pop
enter
xchg
fimuls
rol
mov
dec
xlat
enter
or
mov
iret
mov
push
xlat
test
iret
mov
jp
lods
aad
lods
adcb
ficompl
mov
scas
loopne
ret
test
rorb
shr
fldl
mov
leave
test
jns
jnp
sahf
ss
int3
ret
mov
sbbb
into
mov
mov
mov
ds
xchg
fcomi
lea
inc
out
mov
mov
rcrb
iret
insl
pop
loope
xor
jnp
aas
movsb
dec
inc
addr16
xorl
test
daa
js
enter
mov
dec
lret
adc
int3
dec
sarb
loop
jne
cvttps2pi
pop
dec
shll
or
jg
fs
pop
in
inc
dec
xchg
dec
and
jnp
shll
scas
sub
imul
iret
enter
leave
enter
cmpl
or
or
scas
jge
sbb
rorb
fmul
or
popa
cwtl
jecxz
mov
mov
int
inc
inc
cli
outsb
xlat
popf
test
leave
jmp
jp
mov
je
mov
jb
jl
fisttpll
outsb
shl
xchg
mov
test
jl
cmpsb
or
lods
orb
and
jnp
mov
stos
mov
mov
mov
js
mov
cmpxchg
lock
pop
inc
inc
lods
call
aad
xchg
add
dec
or
fimuls
filds
push
inc
jp
jg
loop
test
jge
fdivs
or
xor
fsub
mov
enter
add
lods
loopne
xchg
bound
mov
inc
add
push
and
pop
mov
outsb
cmpl
je
or
mov
cmpl
movsl
jge
outsb
int
pop
daa
addb
cli
mov
mov
int
mov
mov
adc
aam
mov
add
pop
xchg
xchg
mov
xchg
jl
mov
sub
loopne
jnp
add
mov
aam
mov
jp
lods
lods
enter
dec
add
push
dec
std
dec
shrl
add
pop
or
inc
xor
pop
cmp
jecxz
sbb
jg,pn
scas
sub
push
fdivrs
shl
enter
xlat
ret
jle
push
into
loopne
jg
fcom
fistpll
xchg
jge
mov
cli
scas
and
dec
cmp
jmp
fidivl
ja
sbb
and
arpl
adc
test
test
xchg
ja
loopne
in
movl
push
leave
cwtl
jnp
jmp
jne
loope
sbb
mov
inc
cmp
mov
scas
lods
inc
outsb
xor
fiaddl
ljmp
jp
frstor
js
pop
insl
jle
cmp
jg
cmp
scas
jmp
xchg
test
rcr
lahf
jl
shrl
dec
jns
sti
fsubs
cwtl
xlat
fmul
xchg
cwtl
jnp
dec
cmp
or
xlat
mov
lods
jnp
les
scas
addb
les
jnp
mov
loope
stc
xor
les
popf
loop
js
mov
or
mov
mov
jg
fldcw
cmp
loope
or
mov
cmpb
aad
rcl
lahf
jnp
lea
jle
rdmsr
mov
lea
lret
cmp
mov
xor
scas
aad
orl
dec
enter
push
loope
sub
jo
push
mov
stos
jl
sbb
inc
fiadds
int3
jmp
mov
jp
test
js
inc
and
cmp
jnp
fcmove
ret
sahf
add
iret
aad
ja
lds
pop
bound
jns
lods
xor
stos
iret
sbb
shl
adc
cmp
pop
scas
ret
add
push
repnz
lods
jg
and
inc
mov
jns
test
aam
dec
xchg
rcr
mov
pop
das
loope
pop
add
jg
mov
mov
into
sub
jp
inc
insb
shrl
mov
stos
mov
xor
imul
inc
aad
ljmp
lret
and
movsb
rorb
test
mov
mov
leave
jecxz
jge
push
shrb
in
push
mov
xlat
sbb
cli
xor
cmp
mov
mov
xor
xchg
mov
sub
rclw
hlt
into
ja
leave
testb
lods
mov
mov
mov
rol
loope
into
fdivrs
jle
fildll
mov
loop
leave
xchg
pusha
or
mov
pop
mov
in
fsubs
test
dec
or
or
jecxz
mov
jmp
jne
iret
loop
lahf
shlb
neg
insb
int3
ljmp
pop
imul
inc
enter
loop
test
mov
push
aas
mov
jge
fdivrs
mov
mov
mov
lods
mov
mov
aad
loop
xchg
lea
mov
and
fnstsw
outsb
mov
add
pushf
jmp
sbb
stos
ds
clc
cmp
dec
cmpl
and
divl
iret
into
fst
orl
sarb
fs
and
mov
mov
dec
jnp
int
mov
leave
pop
mov
lods
sub
push
push
test
rcll
int3
jg
scas
cli
mov
xchg
xchg
mov
and
ret
pop
jecxz
loopne
out
out
sahf
loop
cmpsb
mov
loopne
and
jnp
fisubs
nop
mov
aam
or
rcr
into
enter
inc
enter
test
fisttpll
faddl
push
iret
fldcw
adcl
int3
into
leave
mov
insb
rolb
mov
sbb
loope
xlat
lea
or
pop
pushf
iret
in
fidivs
leave
arpl
mov
mov
jbe
frstor
test
dec
mov
mov
sarl
faddp
sbb
aad
cwtl
mov
int
movsb
orb
into
fcmovnu
mov
ljmp
and
arpl
ret
test
jp
rcl
mov
xchg
jb
sub
shll
pop
mov
pop
test
aad
test
dec
dec
jl
xor
mov
out
jg
fnsave
outsb
mov
mov
shlb
jne
jg
movsb
int3
iret
jp
aam
cli
ds
mov
fistpll
mov
into
mov
dec
fisttps
mov
or
mov
jge
pop
aam
inc
jle
stos
imul
jns
int
or
hlt
jge
sbb
lahf
lret
idivb
scas
adc
daa
jns
xchg
or
jnp
xlat
test
test
out
scas
sbb
fmul
icebp
jb
nop
roll
ret
jecxz
lahf
fisubs
dec
addr16
imul
sbb
std
or
mov
mov
adc
stos
lock
loop
cmpsb
lret
jnp
fisubrl
jl
cmp
xor
push
or
mov
mov
lea
dec
adc
mulb
lods
xchg
les
mov
roll
cmpb
sbb
insb
mov
add
mov
add
sbb
mov
enter
mov
or
mov
xor
or
aaa
test
movsb
pusha
xor
stos
adc
xlat
jge
aam
or
ror
push
adc
ja
lods
cmpsl
mov
iret
mov
sub
mov
cli
mov
jns
xchg
mov
sbb
and
loop
inc
loop
jae
adc
inc
addr16
cmp
lods
mov
jle
dec
sarl
imul
data16
xchg
mov
out
jb
xor
sbb
mov
into
sar
jp
jle
rorl
sub
loopne
xchg
mov
inc
mov
pop
fldt
leave
push
push
ja
inc
jne
mov
stc
fiaddl
cli
push
lds
jp
sbb
loope
lahf
mov
call
shlb
xchg
test
push
lcall
mov
xchg
mov
push
mov
jns
test
mov
mov
scas
rclb
adc
pop
jle
pushf
or
test
gs
jp
aaa
or
fidivrs
fdivrl
and
lcall
sti
rcl
mov
ror
lods
sti
pop
into
aam
fcmove
imul
pop
sub
mov
nop
mov
lcall
pop
ror
push
adc
or
xor
lret
int3
cmp
sbb
loop
clc
rol
xor
inc
jecxz
test
mov
fidivrs
test
jle
shlb
insb
mov
not
insb
ljmp
mov
mov
and
fisubs
jl
es
int3
out
push
loopne
mov
lahf
mov
and
fcmovbe
stc
and
idivb
int3
xchg
jl
push
add
mov
enter
mov
jno
mov
scas
mov
adc
mov
shll
jo
pop
rol
and
sub
mov
test
push
xor
mov
into
jp
out
mov
test
inc
cwtl
fwait
ret
insl
fmulp
or
jecxz
cmp
test
ret
mov
les
loop
xchg
fisubrs
or
int3
cli
xchg
test
enter
iret
lods
mov
dec
test
loop
movsl
mov
pop
rcll
mov
imul
movsb
xor
jnp
mov
iret
shrb
test
xorb
daa
cmp
sbb
lret
loop
push
mov
loop
enter
out
rcrl
jno
les
lods
movl
test
scas
stos
pop
cmp
sbb
std
xchg
ss
movl
mov
jl
enter
or
ret
into
ss
pop
fst
cli
xchg
sbb
test
xchg
pushf
pop
xor
or
jp
xor
movsb
lret
aam
lock
into
stos
mov
aas
fs
and
add
cmp
test
scas
fbstp
loopne
sub
sbb
fistps
mov
jmp
out
push
mov
loopne
jnp
into
loope
jge
xor
pushf
enter
movsl
test
jle
loopne
test
je
push
cmp
or
ret
mov
xor
xchg
jb
scas
in
adc
mov
es
aas
mov
sbb
out
sti
fimuls
mov
test
fcmovbe
lods
push
adc
mov
fnstcw
mov
rolb
subb
mov
mov
cltd
cwtl
sarb
or
mov
loopne
setl
test
into
or
xchg
jns
mov
insl
fidivl
pop
ja
push
sbb
popa
jl
jp
fnstenv
iret
jle
dec
xchg
xchg
xor
inc
scas
mov
ret
mov
imul
mov
mov
xchg
decb
and
and
orb
push
shr
xchg
pop
pop
xchg
add
mov
rcl
loop
aad
loop
cli
subb
in
pop
mov
inc
xlat
and
pop
aad
adc
jecxz
flds
mov
loop
pop
loopne
fsub
loop,pt
ficompl
iret
test
std
xchg
lods
aad
cltd
fbstp
push
es
mov
add
add
sub
test
cwtl
mov
cmpsb
rcl
shr
mov
dec
mov
mov
adc
xchg
mov
xor
leave
xorl
sahf
jns
loop
rorb
jne
pop
mov
inc
push
fnstenv
lock
push
xchg
int
lahf
xchg
mov
xorl
adcb
mov
mov
mov
mov
mov
cmpl
fcmovnb
dec
aad
and
leave
ret
and
lods
and
mov
xchg
test
mov
sub
clc
jecxz
mov
rcl
lcall
sbb
or
adc
xor
mov
mov
mov
inc
mov
loopne
xchg
and
mov
mov
adc
fildll
add
pop
jbe
adc
pop
js
scas
stos
clc
mov
dec
fisubl
cmpl
push
cmp
jne
lods
loop
lods
rorl
xchg
sahf
rcl
mov
mov
je
cli
jae
cmp
fisubrs
es
fisttps
int3
cwtl
sub
sub
cmp
mov
fxch
pop
jge
jp
jp
mov
sub
fistpll
mov
push
fdivrp
mov
out
aad
sub
and
mov
mov
mov
jp
addr16
mov
loop
test
jo,pn
cmp
sub
mov
adc
jp
jmp
xlat
dec
int3
mov
cmpl
mov
aam
inc
loope
movb
iret
dec
cmp
scas
inc
loope
jp
cmc
loop
jb
sbb
lret
xchg
adc
cmp
call
fidivl
push
mov
rcl
ret
loope
fisttpl
dec
loope
not
lret
movsb
pop
mov
mov
push
and
add
mov
gs
adc
xor
loopne
xor
mov
and
jp
addl
out
mov
in
scas
aad
inc
mov
dec
push
adc
int3
pop
in
adc
scas
mov
push
pop
lock
push
fisubrs
mov
or
jnp
or
jecxz
fwait
mov
call
jge
loop
ljmp
mov
scas
int3
int
mov
mov
fidivl
iret
dec
jg
mov
leave
rcr
push
mov
or
mov
mov
stos
scas
push
rcl
cmp
cmpl
jge
mov
into
test
jge
jecxz
test
js
sbb
mov
mov
lods
mov
sbb
pushf
push
sub
fstpt
ret
jp
cltd
test
sarb
ret
js
aam
fadds
mov
mov
scas
jnp
dec
mov
arpl
and
mov
arpl
test
ror
rcr
subb
enter
ja
cmp
pushf
mov
fsubrs
iret
pop
sub
test
add
fwait
sub
or
mov
push
faddp
mov
mov
vmread
loope
mov
ja
je
jecxz
outsb
mov
mov
sarb
leave
into
xchg
lahf
mov
add
xor
mov
or
test
push
mov
add
insl
loopne
dec
mov
jle
pop
mov
mov
xor
jnp
mov
push
xchg
sarb
mov
loopne
mov
jp
stc
and
es
and
xlat
scas
inc
xor
loopne
js
aas
mov
mov
sarl
fcmovnu
in
dec
and
enter
sahf
loope
pop
adc
fisubrl
gs
loopne
aad
insl
jle
xchg
jge
test
arpl
push
pop
xchg
mov
xchg
mov
pcmpgtb
inc
dec
das
inc
xor
loopne
sbb
mov
ret
inc
mov
pop
inc
dec
or
js
sbb
ja
dec
imul
fs
call
test
in
test
jb
out
std
insl
test
lods
jg
mov
and
mov
cmp
jge
fcomps
mov
mov
loop
scas
mov
sub
jl
mov
sbb
lods
int
jne
jns
inc
into
cmp
mov
fcmovb
repnz
fcom
test
or
xorl
push
mov
ds
fcmovbe
shlb
lret
xor
leave
cli
xchg
aas
cmp
gs
mov
mov
cli
aam
dec
adc
int
addl
div
sbb
rorb
jnp
subl
data16
call
dec
test
sti
jecxz
adcb
fistps
imul
ret
mov
scas
adc
mov
dec
mov
jne
dec
cmp
cmp
mov
shrl
in
rolb
cli
fiaddl
rorl
into
mov
sub
and
push
mov
jl
int
sub
test
xchg
fcmovnu
shlb
inc
cmpsb
mov
movsb
fdivrs
aad
dec
dec
cmp
jg
andb
adc
jnp
ret
or
inc
ret
sub
int
jae
fstps
jb
and
pop
out
shrl
mov
push
rorl
inc
test
stos
test
lods
loopne
jnp
or
jg
sbb
mov
jg
scas
xchg
sarl
or
scas
ret
repnz
jnp
fcoml
mov
inc
aaa
into
std
dec
cmp
dec
sub
mov
test
lcall
lret
fcmovbe
loopne
pop
or
jmp
aad
mov
sub
mov
arpl
test
fisttpll
mov
mov
dec
dec
fwait
mov
dec
sub
dec
and
mov
js
mov
lahf
int3
or
sarb
jle
push
cmp
jl
fdivrl
les
bnd
std
loop
inc
mov
enter
cwtl
mov
pushf
lahf
push
inc
mov
sarb
mov
ret
pop
sarl
sub
out
sbb
loopne
pop
jp
add
jp
ret
jb
rclb
loop
movsb
int3
jge
aad
adc
es
jae
push
lahf
fiaddl
shlb
inc
jp
fmul
ret
arpl
and
or
lods
mov
addb
mov
mov
insb
shll
fidivrs
rcl
jle
into
hlt
or
ficoml
nop
mov
jg
into
test
mov
js
xorb
aaa
jp
jge
pop
xchg
int
or
ficoml
in
sub
enter
xlat
addl
mov
fmul
rcrb
pop
mov
jle
push
jle
scas
addr16
push
pushf
fists
add
cmp
adc
rcll
mov
adc
mov
jle
dec
mov
dec
mov
movsl
mov
enter
fsub
adc
ljmp
lcall
fldcw
cmp
fnstsw
enter
mov
adc
push
je
cmpsb
fisubrl
shrl
jge
lret
ret
sarb
stc
mov
ret
xor
adc
mov
push
dec
out
adc
inc
jbe
mov
imul
fdivl
cwtl
fiadds
add
je
mov
xchg
aam
mov
mov
mov
repnz
xchg
jg
aam
xchg
test
dec
in
push
fmuls
dec
and
aam
add
hlt
sahf
mov
fucomp
mov
adc
into
es
mov
mov
jp
jl
js
fmull
mov
mov
cmp
fldcw
sbb
cmpsb
fidivrs
sahf
rcl
ret
pop
pop
js
movsb
scas
test
scas
or
fs
mov
xchg
mov
jg
stos
mov
or
ret
sub
xor
jmp
cmp
jbe
pop
mov
cld
sbb
lods
dec
sbb
push
dec
call
cmp
insl
imul
out
es
fcmovu
add
xchg
rcl
fnsave
mov
or
sub
jns
jl
and
pop
insl
mov
je
xchg
mov
ficoml
lret
and
mov
lret
es
xchg
mov
push
movb
xchg
sahf
mov
loop
mov
inc
sub
add
icebp
or
mov
into
mov
fisttps
jp
js
mov
loopne
sbb
adc
mov
jle
faddp
mov
subl
in
scas
push
jb
mov
sar
les
pop
pop
cld
jp
mov
cmp
subl
xor
ljmp
lahf
fistl
add
outsl
push
mov
pusha
ret
scas
jno
int
scas
ja
addb
pusha
loop
adc
int3
jp
mov
mul
inc
sahf
into
loopne
es
xchg
js
rcrb
xor
push
rcr
push
dec
clc
into
or
js
stc
test
or
int3
pop
pusha
cmpb
call
ja
jno
pop
fcoms
popa
jle
loopne
int3
sti
pop
loopne
xor
outsl
aad
shl
in
test
and
sbb
jge
jo
push
in
inc
mov
repnz
ds
es
xor
es
in
pop
aad
aam
jae
mov
aad
loope
jno,pt
push
mov
dec
cmp
mov
lods
xorb
popf
inc
aad
mov
stc
ja
sahf
out
pop
push
mov
fistpl
xlat
mov
test
mov
stc
jp
jle
xchg
jl
jecxz
scas
ljmp
sbb
jge
mov
mov
jg
loop
push
daa
xlat
loop
push
adc
mov
fdivr
dec
mov
jg
push
xlat
rcr
xor
inc
inc
pop
cmp
push
js
fbstp
pop
fadd
test
push
xchg
ja
mov
loope
sbb
fadds
inc
jae
addr16
mov
fnsave
stc
add
ret
mov
inc
test
inc
fnstcw
ja
subb
mov
jmp
or
sbb
pop
rcl
ret
ja
test
cwtl
mov
out
test
pop
mov
fidivl
js
stos
jnp
adc
rcl
lahf
ret
scas
out
fldenv
mov
mov
fstp
ret
or
stos
mov
sarl
mov
xchg
in
or
loopne
fistpll
imul
rcr
fcmovb
fwait
enter
mov
je
jg
dec
loopne
iret
adc
jg
fiaddl
cmp
sub
int3
xchg
cmpb
leave
inc
test
pushf
mov
sbb
jl
mov
lahf
cwtl
test
inc
data16
loope
iret
mov
push
lds
jecxz
xlat
xchg
mov
scas
dec
gs
mov
mov
ret
mov
ficoms
shll
push
and
int
iret
adc
jnp
mov
adc
mov
push
test
fstp
mov
jle
mov
test
orl
xchg
adc
mov
rol
mov
ret
jb
and
in
sahf
enter
adc
push
push
loop
loopne
jg
add
adc
cmp
into
mov
dec
and
or
iret
xorl
repnz
push
xchg
xlat
mov
mov
filds
pushf
int
mov
aad
mov
shrl
sub
xchg
jb
rcr
mov
xchg
js
test
mov
sarb
and
orb
mov
ret
inc
rcl
cmpsl
insl
lods
inc
or
jecxz
adc
mov
cmpb
js
aam
sub
mov
fisttpll
in
int
mov
insl
cmp
mov
int
fsubrl
fiaddl
rcl
cli
jge
xchg
xorb
dec
push
fdivs
lods
mov
jns
cmpsb
loopne
sbb
mov
popa
jecxz
sbb
ret
mov
inc
mov
iret
ror
jns
mov
subb
scas
lea
fdivrs
jg
mov
fnstsw
mov
ret
mov
adc
nop
xor
push
mov
test
adc
shl
cwtl
lods
js
fwait
les
xchg
mov
enter
stc
mov
ret
and
cmp
lea
mov
ret
sub
xor
sub
mov
mov
cwtl
inc
xchg
mov
xchg
fstpl
movsb
mov
in
xchg
fidivrs
or
enter
cwtl
lods
mov
mov
test
jg
pop
psubw
rcr
lret
mov
mov
lods
jg
and
jmp
aam
scas
pop
sbb
push
aad
jns
test
test
stos
jnp
cmp
push
mov
mov
sahf
mov
mov
inc
lods
cmpb
nop
int
insl
std
fbstp
mov
sbb
shl
scas
shrl
arpl
mov
sub
movl
fstpt
test
dec
xor
mov
xorb
aad
cmp
scas
out
mov
jns
fstl
mov
push
add
sub
pushf
cmpl
jp
loop
ljmp
mov
aad
loopne
test
inc
xlat
test
mov
es
in
inc
push
xchg
iret
insl
jg
inc
arpl
jmp
aad
sbb
andb
mov
push
mov
mov
xor
or
mov
inc
stos
sub
loope
ret
inc
mov
fldl2e
pop
rol
aad
insb
mov
xchg
outsb
lods
int3
inc
orl
aam
cmp
iret
mov
dec
xlat
int3
or
dec
xchg
mov
fwait
lods
lahf
xchg
mov
adc
sti
bound
ficompl
es
rcll
adc
outsb
enter
loopne
loop
mov
mov
fstpt
divl
lods
inc
rcrl
mov
fcmove
ss
mov
sbbb
filds
mov
xor
dec
es
int
pop
adc
test
pop
and
mov
xchg
fdivrl
into
leave
pop
mov
push
and
fdiv
loopne
ss
cli
std
ret
aam
pop
in
mov
scas
mov
repz
mov
stc
pop
pop
mov
stc
cld
pop
jbe
sbb
inc
xor
enter
xchg
rorl
sbb
test
mov
mov
dec
mov
inc
aas
jbe
pop
pushf
xlat
stos
jge
lcall
jle
lods
cli
fildll
mov
pop
shl
pop
jl
mov
leave
mov
aas
ljmp
cmp
or
mov
js
fisttps
mov
and
add
xor
lods
incb
js
push
sbb
and
jae
out
push
jne
mov
adc
fldlg2
lahf
scas
mov
xchg
outsb
loope
or
rol
sub
fldcw
xchg
xchg
cmp
ret
sbb
js
mov
rcll
jns
fdivrs
mov
jp
xor
icebp
fnstsw
dec
sub
xchg
scas
xlat
outsl
jge
aam
mov
subl
lret
ljmp
and
int3
jns
push
leave
int
mov
scas
iret
jle
test
rcr
loope
sarl
mov
mov
sti
filds
jnp
push
mov
ja
int3
rcl
jge
mov
faddp
dec
jnp
push
xor
loop
or
cmc
andb
xchg
sbb
and
sub
fmuls
ds
inc
xchg
fmulp
adc
sahf
xor
clc
mov
je
mov
loopne
mulb
mov
mov
mov
loope
dec
incb
sbb
inc
jle
bound
sub
enter
ret
fcomps
mov
mov
and
fiadds
xor
jg
jnp
fwait
mov
mov
xchg
jns
mov
cmp
mov
mov
int
fiaddl
jns
loop
mov
es
push
rcl
and
mov
dec
popa
mov
pop
mov
shlb
mov
pop
mov
mov
inc
mov
test
fmul
jp
mov
lods
xchg
jg
fdivrl
loop
int
es
push
stos
jae
mov
xchg
sub
adc
jge
bound
pushf
and
jne
sub
rcr
inc
cmpl
lahf
test
add
sbb
sub
cli
mul
mov
icebp
pop
fadds
mov
push
mov
cmp
jle
mov
fistpl
jge
xlat
jns
stos
test
ljmp
sub
dec
aad
loop
loop
imul
fdivs
fmull
scas
mov
clc
inc
mov
sbb
dec
pop
fstps
mov
nop
sahf
and
ret
push
inc
loopne
movsl
fsubp
cmovge
adcl
add
pushf
jg
xlat
fwait
popf
xorb
xchg
loope
mov
mov
cs
push
jle
cmp
shrb
bound
dec
cmpsb
or
mov
jl
jp
fucomp
push
js
xchg
mov
xorl
jle
int
mov
pop
orl
shl
sbb
inc
inc
or
fstpt
fdivr
fidivs
jae
mov
in
jae
fiaddl
and
aad
add
enter
fwait
sub
int3
mov
lods
or
mov
fsubr
dec
mov
imul
rorb
scas
jg
sbb
mov
mov
pop
and
das
mov
jmp
js
mov
jge
mov
mov
or
loopne
mov
or
mov
loopne
faddp
xor
shrb
lods
ljmp
iret
aas
push
jns
inc
ja,pt
xchg
jl
mov
call
mov
shr
mov
jnp
fldcw
stos
in
sub
jg
mov
sub
sbb
loop
and
inc
mov
or
iret
mov
cli
faddl
aam
mov
jg
jne
ficompl
jp
adc
nop
inc
add
flds
or
mov
sarb
fdivrs
jns
sarl
xchg
scas
mov
mov
and
fucomi
mov
jns
mov
enter
mov
iret
aad
loop
loopne
jl
out
mov
jle
jge
aas
or
scas
rorl
or
xor
sbb
fcmovbe
mov
fildll
leave
xlat
jg
dec
pop
iret
jle
fisubrl
jnp
xchg
jp
idivl
lods
test
inc
stos
test
lock
add
fldt
sub
sarb
mov
add
addb
loop
push
iret
mov
mov
clc
cmp
mov
mov
and
rclb
xlat
and
cmc
mov
in
movsl
and
stc
xchg
or
leave
imul
loopne
jnp
dec
leave
sar
or
fidivrs
fs
and
orb
cmc
push
repz
inc
jbe
pushf
jge
repnz
mov
sub
adc
mov
jle
xor
scas
filds
mov
test
dec
in
ret
mov
mov
fdivrl
xchg
enter
mov
fimuls
sbb
mov
stos
dec
dec
fnstcw
fsubrp
lahf
jg
shll
jmp
repnz
mov
fistl
and
ja
pop
mov
mov
pushf
movsb
add
mov
roll
fmul
inc
orb
rcl
mov
mov
jmp
jb
jbe
mov
sarl
clc
ret
call
adc
dec
or
out
fsubp
movsl
jecxz
cwtl
cmpl
scas
mov
xchg
pop
testb
jecxz
dec
jp
mov
jbe
loopne
xchg
mov
sbb
test
in
movsb
pop
inc
push
movsl
cmp
int
enter
mov
or
mov
stos
pushf
mov
mov
push
dec
leave
adc
mov
inc
test
ret
iret
shrl
xorl
mov
jecxz
testb
sub
test
shrl
imul
js
jg
xchg
in
inc
cli
fidivl
mov
sar
cltd
fistpll
mov
stc
leave
cmp
dec
cmpsb
rcrb
adc
dec
dec
dec
xchg
rcr
out
adc
mov
xchg
jo
or
add
enter
sub
loop
into
mov
rcl
lods
int3
outsb
roll
pop
mov
insb
sti
fstpl
aam
and
test
aad
fadd
mov
mov
fdivr
mov
mov
loope
mov
scas
pop
sbb
lock
mov
adc
repz
xlat
adc
jb
lods
iret
in
cmp
js
in
jb
loop
test
mov
negb
xor
fstpt
xlat
sub
dec
rorb
or
int3
mov
sbb
fisubrs
add
xor
add
jmp
loope
incb
sar
repz
or
add
mov
das
jb
cli
jg
xor
insb
cmpl
lea
into
lods
dec
push
iret
lds
mov
jmp
push
in
inc
mov
fdivp
or
mov
fwait
cmp
out
movsb
dec
cmp
mov
cmp
pop
rcl
or
or
mov
sbb
mov
mov
inc
mov
fcmove
ret
fistps
sbb
std
mov
shlb
push
fwait
lret
dec
out
sarl
subb
test
aam
and
push
push
dec
scas
cltd
test
fistpll
pop
loope
inc
leave
insl
mov
mov
mov
adc
shrb
ret
xlat
sbb
into
cmp
push
test
rorl
ficomps
mov
sbb
fistps
jnp
add
jns
cltd
jmp
fnstcw
scas
imul
in
adc
aad
jecxz
movd
mov
jp
imul
inc
je
ret
ja
stc
arpl
sbb
loopne
jb
mov
xchg
sub
sarb
jg
lods
aam
hlt
cmpsl
mov
imul
jns
mov
imul
inc
jp
iret
mov
adc
mov
js
insb
ret
mov
xchg
jmp
mov
mov
shrd
rol
cs
mov
and
loop
leave
ret
xor
mov
cmp
lahf
mov
mov
loop
fldt
jb
mov
jmp
xchg
push
shlb
lods
jge
sbb
cli
icebp
adc
push
mov
aad
sbb
sarl
fistpl
or
jge
mov
jge
or
mov
adc
ret
xor
xor
lods
leave
int3
fcmovnu
fistpll
repz
out
sub
shl
jbe
fcompl
mov
lock
add
lret
xchg
int3
iret
rclb
lds
in
hlt
jecxz
fdiv
or
test
cmp
mov
or
iret
mov
into
shll
fimull
mov
mov
jle
lods
fwait
loope
mov
rol
shll
insl
lods
and
loopne
sarl
jp
dec
or
fmulp
fsub
mov
test
loop
push
outsb
jl
test
cli
mov
xchg
sarl
ljmp
cs
loop
fbstp
add
test
cmpsl
mov
in
mov
jge
adc
lahf
and
add
inc
enter
add
push
mov
mov
ss
out
jle
mov
push
jmp
jg
rcrl
jo
scas
loopne
mov
mov
push
fildl
stc
aam
push
rol
rol
in
jp
int3
test
dec
pop
cwtl
adc
pop
fucom
mov
and
pop
aam
sbb
add
pop
and
sbb
adc
push
es
push
shrb
mov
rcl
xchg
scas
cmpl
movl
jnp
mov
mov
jle
dec
movsl
aaa
jl
or
xchg
ret
subl
mov
mov
loope
mov
mov
iret
fmuls
in
shrl
ret
and
cmpb
mov
mov
insb
scas
xchg
pop
mov
mov
iret
mov
pop
das
sub
sarb
cli
int
mov
jo
xor
lret
enter
ljmp
je
iret
gs
imul
js
and
mov
test
sarb
inc
movsl
mov
pop
enter
movsb
xchg
int3
and
sbb
into
sbb
fidivl
mov
sbb
loop
test
jb
and
jbe
xchg
mov
movsl
cmp
fstl
xor
fmull
testb
mov
mov
mov
inc
or
mov
fsubp
dec
mov
int3
ret
or
or
add
pop
or
and
popa
fnstenv
pop
adc
pop
push
mov
cmp
addl
pop
rclb
rcr
lods
sarb
loope
mov
xchg
jmp
enter
les
pop
fisttps
lret
shlb
loope
jns
ret
negl
in
mov
mov
stos
rcl
or
and
das
test
fcoml
int3
and
gs
mov
inc
subl
fdivrl
and
int
fstpl
enter
movsb
ret
mov
cmp
es
xchg
out
xchg
jmp
loopne
add
mov
in
fnstenv
xchg
es
xchg
in
es
cmpsb
fadds
cmpsb
sbb
add
es
in
es
icebp
xchg
in
es
in
fsubs
shl
in
es
pop
es
in
es
in
in
es
fdivs
mov
jecxz
in
es
add
in
es
es
sbb
and
sub
out
jo
pop
in
es
es
hlt
es
xor
jge
push
jo
jbe
lock
test
ds
sarb
sub
dec
jge
xor
lea
int
loopne
enter
leave
jno
xor
arpl
mov
mov
rolb
ret
sbb
cmp
or
lea
mov
shlb
jbe
add
ja
shl
fnstsw
enter
js
test
mov
xorl
xor
xlat
cmp
adc
mov
rcl
dec
mov
mov
jns
jnp
cmp
loopne
inc
lock
jl
xor
sbb
cmp
or
add
pop
mov
push
ja
mov
fiaddl
ror
pop
test
ljmp
into
mov
aad
es
sbb
rcr
shlb
loope
movsl
xchg
andl
loop
js
push
fisubrs
aas
addr16
mov
or
or
loop
mov
les
mov
lods
push
fcoml
mov
daa
xchg
jge
mov
ror
sbb
insl
in
jae
out
mov
mov
xlat
scas
fcmovnb
push
mov
rcrl
mov
xlat
mov
shll
rclb
mov
mov
inc
cwtl
scas
mov
jge
rclw
rcl
mov
ja
jle
or
fcmovb
jns
leave
push
scas
mov
enter
out
cmp
leave
ffree
aad
shr
in
jns
mov
mov
mov
decl
loopne
mov
loop
push
lods
jle
mov
jecxz
enter
push
int3
or
loopne
jns
scas
jnp
loope
or
inc
dec
clc
ja
fiadds
iret
sub
aas
xor
loope
ror
mov
imul
cmp
push
into
cwtl
fstp
ret
jl
bound
test
fldl
lods
pop
push
mov
jge
fwait
cmp
mov
jnp
loope
or
ret
fisubrl
loop
lea
outsb
mov
rcl
scas
mov
xlat
aad
loopne
test
subb
mov
adc
fwait
jecxz
movsl
aam
shlb
rolb
mov
pop
xchg
js
mov
mov
sbb
scas
test
inc
cmp
leave
shl
enter
ret
test
test
mov
mov
int3
xor
dec
fnsave
jle
sarb
fwait
loopne
mov
int
iret
loope
xlat
mov
xor
movsb
mov
mov
int
jecxz
nop
fnstsw
int3
sub
into
notl
popa
cmp
fwait
aad
jae
mov
dec
mov
es
inc
fucomip
dec
push
sub
jg
ljmp
mov
mov
subb
mov
imulb
jp
xchg
mov
mov
fcom
adc
loope
movsb
and
into
and
adcl
jno
or
xchg
xlat
rolb
jl
aam
loopne
dec
mov
push
rcrb
ljmp
insl
xlat
xchg
shlb
jle
push
pop
or
pop
int3
mov
cltd
cwtl
mov
cwtl
dec
xchg
push
test
mov
jle
arpl
or
xlat
data16
stos
mov
xorl
sarl
pop
jge
cmp
fucomi
mov
pop
mov
mov
insb
stos
xorb
fwait
inc
ror
nop
and
hlt
aam
jge
or
dec
lret
out
add
xor
jge
mov
sarb
mov
loop
jne
enter
pushf
leave
cwtl
adc
push
ja
ret
shrb
nop
mov
mov
jnp
iret
fimuls
lcall
mov
adc
jge
mov
jp
seta
add
jg
ret
jle
shl
dec
cwtl
aam
push
into
jnp
ljmp
dec
pop
sub
mov
cwtl
lods
fsts
xchg
into
jns
fst
test
test
mov
les
test
sbb
iret
fcmove
pop
int3
lahf
dec
xchg
arpl
rcl
movsb
lods
scas
adc
xchg
shrb
cmpsb
fimull
fsubp
movswl
dec
loop
xchg
sahf
xchg
jnp
lods
xorl
fimull
test
dec
icebp
mov
sub
ja
pop
push
outsb
shll
inc
stos
enter
scas
into
inc
iret
les
fdivl
mov
scas
subb
lods
inc
and
jl
mov
iret
in
dec
push
mov
leave
push
ret
scas
xor
mov
xlat
dec
out
stos
push
pop
xorb
mov
xor
jg
mov
ret
repnz
rol
loop
addb
mov
call
adc
stos
add
lods
addr16
fidivl
leave
jbe
into
dec
pop
cmp
xor
js
sub
add
adc
jns
dec
jge
fidivs
jecxz
mov
fildll
ja
xchg
jle
lea
jge
adc
adc
out
xor
xchg
test
repnz
mov
ret
jecxz
out
inc
fdivrl
jnp
mov
test
scas
sbb
filds
push
push
int3
fsts
jle
in
loope
fs
int
data16
cmpl
loope
fdivl
test
cmc
iret
or
jae
stos
dec
jp
flds
addl
push
movsl
jecxz
rolb
fwait
loopne
xlat
cs
fdivrl
ja
cmp
imul
or
push
shlb
jle
xlat
jo
xor
jecxz
aam
pop
mov
inc
loopne
sar
mov
sbb
sarb
fpatan
stos
sbb
mov
scas
mov
pop
loop
enter
loope
or
jns
sub
pop
pop
jbe
xchg
mov
fwait
pop
push
repz
push
add
pop
leave
cmp
into
cmp
cmp
mov
bswap
rcr
jl
leave
js
aad
xorl
jbe
jg
cmpsb
fldt
pop
scas
aaa
fwait
adc
fsubrp
mov
rorb
lds
loop
xchg
mov
test
fwait
scas
shll
shlb
push
mov
add
mov
repnz
outsb
xchg
ret
adc
setne
fisttpl
mov
fistpll
dec
xchg
mov
add
mov
cwtl
push
xchg
loop
mov
int
rcrb
lahf
mov
loope
jp
int
push
mov
sbbl
mov
mov
lods
sti
nop
nop
fcomp
jmp
jns
lret
jecxz
mov
sarb
fisubs
mov
imulb
aad
loop
sahf
shlb
sar
cmp
jbe
xchg
fistpll
or
jg
aas
scas
mov
mov
jnp
inc
fwait
mov
lods
mov
xor
test
je
sub
fnstsw
cmpsl
mov
adc
mov
cli
or
adc
repnz
insb
jle
mov
insb
lods
jb
mov
mov
push
stc
ljmp
mov
cmp
jb
xor
mov
enter
repz
mov
mov
test
and
pop
mov
sub
stos
enter
mov
scas
inc
dec
imul
iret
jp
ret
inc
xor
lret
mov
sbb
inc
mov
aad
jbe
imul
es
out
addl
mov
push
mov
mov
enter
inc
loope
sub
fucom
test
jbe
fwait
loop
mov
inc
add
je
add
jb
xchg
jge
mov
iret
pop
push
nop
xchg
pop
in
bound
fcoms
dec
mov
loopne
cmp
enter
test
mov
jo
lods
mov
ret
mov
jl
test
test
jge
fiadds
lcall
rolb
int
mov
mov
insl
aad
ret
fcmove
mov
cs
test
xorb
mov
lods
mov
cmc
or
mov
cmp
mov
shrb
ret
call
fiadds
ror
mov
push
xchg
mov
stos
dec
add
ret
je
lods
sub
mov
shlb
addr16
andb
jl
ret
adc
fstl
sub
add
in
mov
push
lods
mov
movb
xor
inc
aam
test
mov
lds
scas
mov
mov
roll
mov
xlat
sti
test
and
xchg
dec
hlt
sar
mov
enter
mov
dec
mov
outsb
scas
ret
ljmp
out
dec
xlat
notb
shrb
mov
mov
mov
xor
stc
cmpl
jmp
rorl
sub
cmp
jge
inc
je
aam
dec
mov
cmp
loop
sahf
mov
sarl
ret
bound
rorb
sub
lods
jbe
int3
cwtl
xchg
shlb
jp
xlat
jg
stc
leave
xor
pushf
test
pushf
fstpt
aad
mov
xchg
or
pop
rorl
mov
xlat
fcoms
jmp
fcmovb
loopne
out
sbb
cwtl
fnstsw
movsb
push
scas
xorl
push
xchg
mov
fnstcw
sarb
into
jmp
cli
mov
jne
cld
test
jns
scas
in
cmpl
fidivrl
fdivrs
xor
jg
mov
je
or
or
fmul
jp
mov
xorl
fcmovnb
dec
loope
int3
jecxz
sbb
sub
popf
enter
mov
ja
jge
mov
stos
push
orl
jp
mov
push
and
dec
loop
xchg
cmpl
sbb
call
cs
xchg
int3
jp
mov
adc
inc
inc
xchg
lods
mov
or
cmp
push
xor
sbb
jecxz
sub
mov
xor
xlat
enter
aam
jns
stos
jnp
mov
lods
mov
rcll
xchg
flds
stos
dec
into
sarl
test
mov
push
sarb
sbb
lea
or
mov
scas
test
jg
int3
jl
cmpsb
cli
stos
mov
stos
fldl
jmp
jne
stos
mov
neg
call
xchg
test
mov
test
enter
fsubl
leave
adc
jp
rorb
dec
jp
mov
cmp
ds
jo
cmpsb
loop
je
xor
cmp
fimull
jg
int
movsb
mov
mov
mov
mov
sbb
ja
fcmovne
scas
mov
ret
stos
mov
xchg
sbb
cmp
imul
insb
loop
jnp
aas
jb
and
aad
mov
lret
ret
jecxz
mov
push
mov
sub
and
cmp
dec
dec
rcrl
inc
mov
mov
enter
popa
and
cmp
fadds
sarl
jge
xchg
out
pop
mov
flds
or
iret
andl
push
jns
jg
mov
mov
mov
xchg
rol
test
fadds
test
scas
loop
rcl
jle
mov
cli
or
test
lret
jl
iret
and
popa
xchg
sbb
push
sbb
movl
cld
cwtl
aam
sub
sarb
jmp
int3
xor
jbe
jb
or
push
mov
fildl
pushf
fst
lahf
sbb
cmp
loop
insb
mov
xchg
jns
inc
or
subb
ror
iret
mov
xchg
push
xlat
stos
add
jg
ret
loop
mov
ss
push
andb
sub
loop
ror
cmp
lds
sub
sbb
mull
or
xchg
jl
mov
gs
adc
stos
hlt
lods
mov
mov
stos
xchg
mov
int3
ret
cwtl
mov
or
cli
hlt
and
mov
flds
test
fs
enter
aaa
fcom
and
sbb
jle
jp
shlb
js
test
fldl
adc
dec
insb
mov
and
subb
jl
sbb
mov
fidivrl
repnz
and
jbe
shl
scas
inc
loope
sub
mov
adc
mov
xor
test
enter
mov
int3
pop
and
lahf
mov
dec
push
into
in
jmp
adc
push
ret
inc
rcr
xor
into
fmul
or
fnstenv
int
xchg
scas
shll
push
das
mov
shlb
inc
cmp
out
mov
fwait
xchg
jl
shrl
sub
push
leave
clc
mov
adc
add
shrl
enter
sbb
inc
pop
insb
js
lahf
jmp
lock
lcall
aam
movsb
outsb
test
jg
jecxz
or
loop
ret
mov
enter
rol
mov
movsb
push
mov
jp
ja
fildll
test
ss
fcmovnbe
cmpb
into
arpl
and
rcll
inc
xchg
pusha
cmp
pushf
scas
scas
mov
mov
test
in
jl
jnp
mov
mov
xchg
adc
or
pop
stos
int3
fwait
ds
aam
lods
fxch
dec
shlb
jnp
mov
subl
js
mov
fmull
or
adc
int3
sarl
lahf
insl
xchg
js
bound
xlat
jns
enter
jle
int
js
shlb
fistpl
aam
scas
test
test
out
push
adc
ljmp
inc
xlat
add
jecxz
jge
jns,pn
xchg
jbe
adc
dec
ret
mov
jb
fbld
dec
loop
mov
loope
lods
sub
out
leave
pop
fidivrl
jle
xchg
loop
jecxz
or
xlat
mov
xorb
not
sub
or
sub
jns
jp,pn
jae
jle
push
mov
inc
aam
mov
cs
jg
dec
pop
mov
scas
test
xchg
jp
mov
or
or
fcmove
sbb
out
mov
fs
insb
jl
loope
cmp
mov
mov
jne
orb
dec
jp
or
ja
xor
inc
xchg
fisubrs
add
fmuls
mov
enter
mov
dec
call
and
mov
jne
xor
mov
dec
inc
jg
loope
movsb
into
mov
lahf
sahf
enter
enter
xchg
cmpsb
xchg
test
ljmp
subl
mov
aad
mov
jl
test
out
loope
sahf
shlb
ficompl
fistpll
ja
arpl
dec
rorl
sbb
sub
adc
lods
mov
enter
jo
mov
jecxz
rcll
jecxz
or
mov
into
aam
popf
inc
pushf
loop
rorl
cli
and
xchg
loop
mov
ror
ret
shrb
insl
fidivrs
cmpl
fbstp
mov
cmpsb
mov
jg
daa
fwait
mov
mov
mov
fiaddl
je
sub
fldcw
pop
dec
dec
mov
fdivrl
roll
jmp
loop
adc
mov
rcll
or
lods
test
xchg
cld
ret
mov
sbb
loop
loop
mov
push
out
fnsave
enter
mov
rol
sbb
cmp
test
adcl
lret
mov
jne
bound
cs
orb
rorb
inc
jge
pop
scas
lds
int
jp
scas
xchg
sbb
dec
loope
repz
dec
into
pop
xchg
imul
jbe
movsl
mov
out
adcb
dec
xorl
outsb
sarl
mov
aad
xchg
in
pop
shll
andl
ret
shl
push
adc
xchg
mov
js
jecxz
xlat
mov
sarb
xor
xlat
sahf
mov
mov
jbe
push
rcl
mov
test
neg
testb
sarb
pushf
mov
xchg
enter
jge
push
cwtl
test
add
jbe
das
les
push
rclb
or
push
dec
push
fistpll
ret
push
int
dec
or
mov
int3
fildll
ja
aam
mov
test
jnp
mov
and
scas
ror
stos
sub
shrb
orb
fsub
mov
fidivrs
inc
jns
push
loop
shl
ss
mov
aad
lret
roll
sub
mov
ret
mov
xlat
loopne
and
and
shlb
dec
rcr
outsb
jbe
mov
ret
jl
js
into
icebp
ljmp
mov
adc
xchg
push
fdivrs
js
dec
jmp
ljmp
xchg
mov
jg
xlat
mov
cli
mov
and
movsl
shl
add
rolb
js
orl
sbb
mov
bnd
cmp
sbb
dec
sarl
iret
jp
mov
scas
push
lods
fmull
iret
aam
or
cmpl
mov
leave
mov
fimuls
loopne
test
push
xchg
iret
mov
insb
mov
mov
dec
cmpl
in
int
dec
jp
jg
push
mov
mov
inc
hlt
shlb
mov
adc
fisubl
ficoms
sub
fmul
scas
clc
jnp
mov
fstl
dec
test
mov
lods
enter
sbb
fsubrs
jl
test
mov
add
movsb
mov
jb
cli
mov
rolb
push
lret
inc
or
pop
or
sbb
fisubrs
xor
fdivrl
adc
into
mov
js
cmp
or
xlat
dec
sbb
fnstenv
add
iret
inc
add
leave
daa
mov
fidivl
sar
aaa
jg
aam
rcrb
fwait
rcl
mov
mov
loope
xchg
loopne
or
mov
test
add
adc
or
rcl
mov
inc
mov
fisubl
mov
mov
movsl
fadd
cli
loop
mov
scas
sbb
mov
push
jmp
mov
iret
das
or
repz
mov
lahf
mov
fimull
or
shll
mov
int3
repnz
push
sub
jecxz
xorl
sarl
add
mov
ja
jne
sbb
mov
sarl
fcmovb
mov
sbbb
mov
jmp
jp
mov
andl
cli
and
int
imul
cli
xchg
roll
xor
iret
shlb
int
mov
es
jp
fbld
movsb
push
or
mov
scas
les
xchg
into
pop
pushf
pop
sahf
sbb
rorb
rcrl
inc
sub
imul
iret
fidivrs
pushf
fnstsw
push
jecxz
enter
lods
mov
mov
js
test
test
enter
mov
jle
xor
loop,pt
mov
int3
mov
leave
mov
mov
mov
fstp
mov
lret
mov
mov
jle
ficomps
int
fstpl
repnz
rcrl
int3
lods
inc
cmpsl
jbe
test
test
shll
ret
mov
sbb
ret
mov
addr16
dec
scas
mov
sahf
mov
add
jnp
cwtl
push
mov
jmp
leave
je
loopne
xchg
sarl
pushf
scas
cmpsb
call
dec
add
aam
dec
popa
push
xor
mov
and
push
fnstsw
inc
shrb
out
scas
out
nop
outsb
test
pushf
enter
xor
rol
fisubrs
fs
sarl
iret
lods
rorl
scas
xor
adc
aam
adc
inc
hlt
mov
fcmovu
rcll
sbb
mov
and
jp
pop
cmpsb
xchg
sbb
arpl
dec
push
mov
sarl
jle
jns
jge
stos
mov
mov
or
fists
jge
push
ret
cmp
loope
iret
bound
mov
push
das
inc
mov
mov
leave
mov
bnd
fs
push
fistpl
pop
ret
sbb
and
xchg
shrl
mov
jp
jns
or
jge
push
ja
fnstsw
jmp
loopne
test
inc
test
adc
add
adc
fnsave
jecxz
das
aad
jnp
dec
xlat
jle
jg
mov
jge
fstpt
xor
andl
fidivrs
idivl
ret
mov
ret
shrb
js
jnp
and
xchg
scas
ret
jl
jecxz
sbb
mov
adc
aam
mov
inc
test
jbe
leave
ror
repnz
inc
test
fildl
push
jmp
scas
pushf
jns
ret
sbb
iret
xchg
push
sarb
inc
fdivl
jle
mov
push
iret
mov
lods
xlat
ret
mov
rcrb
push
mov
stos
push
in
cmp
jle
stos
add
cmp
lds
inc
sub
mov
and
fchs
sahf
test
cmpl
js
scas
lods
inc
sub
stos
sub
int3
inc
jp
mov
roll
jnp
pop
pop
pushf
enter
stos
pop
sarb
mov
int
shll
mov
xchg
aaa
lret
shlb
scas
sub
lock
jg
fidivrl
sbbb
fcoml
ja
mov
int
lods
sub
sbb
jnp
ficompl
dec
xchg
aam
fcompl
jge
insl
popaw
nop
fadd
lods
inc
test
mov
fidivrl
mov
into
test
sbb
fnstcw
adc
hlt
inc
adc
pop
dec
lea
mov
leave
xor
xor
sahf
jp
shll
loopne
ror
mov
pop
and
mov
or
rcl
pop
xlat
xor
pop
ret
in
mov
rcr
je
aam
lahf
test
fimull
nop
xchg
es
lds
int3
insl
fs
add
les
jnp
mov
cmp
lods
adc
mov
into
fisubrl
jp
outsb
movsl
xchg
loope
ret
jnp
lea
jp
sbb
sbb
mov
mov
jp
loopne
xor
ror
sub
imul
inc
lds
iret
jp,pn
lods
out
push
je
mov
in
xchg
rcr
or
jge
es
mov
outsb
pushf
cwtl
scas
lcall
xchg
push
xchg
arpl
imul
out
xchg
int3
xlat
pop
fcmovnb
ret
test
jle
mov
jmp
mov
out
sbb
mov
ret
adc
cmp
xchg
sahf
ficoml
mov
add
ret
testl
fxch
addr16
int3
fimuls
mov
mov
lock
jl
and
mov
adc
xchg
es
dec
insl
jne
ficomps
push
inc
into
sbbb
jl
out
cli
fmul
sbb
cs
and
out
test
push
adc
sbb
or
shrl
mov
ja
mov
fidivrs
fcmovu
lock
xor
xchg
repz
lods
pop
xor
mov
rcr
lahf
cmp
xor
mov
repz
bound
adc
dec
nop
jnp
dec
lds
inc
sub
lret
movsb
fcmovnu
sbb
jecxz
ss
dec
xor
test
mov
rorl
stos
pop
loope
cmpsb
or
sarl
inc
aaa
sub
shlb
loop
cwtl
mov
enter
scas
jp
imul
mov
mov
insl
xchg
out
or
xorb
stos
jecxz,pn
into
insl
enter
adc
sbb
repnz
cmpw
mov
je
fs
insl
mov
aas
sbb
mov
mov
jg
fwait
loope
pop
mov
mov
popa
lret
xor
pop
mov
adc
rorb
mov
jmp
jp
mov
fnstsw
jns
test
mov
mov
cli
cmp
jne
dec
mov
enter
cltd
rcr
fiaddl
mov
into
inc
xchg
loope
jmp
xor
mov
roll
mov
mov
jge
dec
fsubs
mov
push
testb
xchg
int3
rorb
test
fstpt
sbb
mov
mov
jp
mov
jle
mov
mov
mov
mov
dec
pop
scas
mov
cmp
mov
push
xchg
fstp
shrb
mov
xorl
fimull
jmp
aam
cld
jnp,pt
jne
js
jo
movsb
scas
add
sarl
mov
subl
loope
fadd
sarb
sbb
sarl
rcl
push
loop
orl
mov
inc
stos
fnstenv
mov
in
jge
test
push
fidivl
sbb
js
add
fs
lock
rcl
inc
fcmovb
lods
cli
imul
es
cmp
mov
cs
mov
pop
xchg
cwtl
fisubrs
xchg
mov
xchg
pusha
xor
sbb
and
mov
fadds
loop
adc
adc
sub
out
add
dec
jle
pop
test
js
cli
adc
int3
in
xor
pop
jg
mov
fldt
dec
imul
adc
xchg
jl
jnp
lods
iret
ret
mov
pop
mov
rol
enter
loopne
js
aad
cli
rcll
sarb
ror
adc
mov
mov
jecxz
mov
andl
mov
scas
or
or
ficoml
mov
shll
xlat
hlt
jns
dec
loope
mov
dec
xor
inc
pop
xchg
mov
mov
imul
int
dec
cs
xchg
push
test
clc
mov
mov
add
pop
jmp
lods
push
lods
sarb
scas
ret
lahf
aam
mov
and
mov
leave
cmp
fisttps
mov
cmp
hlt
rol
outsb
mov
into
dec
mov
sub
aad
ret
mov
js
xor
xchg
test
mov
cmp
jnp
jp
lds
dec
mov
pop
jnp
ja
loop
fdivr
cmp
dec
push
lods
loope
inc
sub
jle
stos
pop
rcrl
mov
or
fdivl
adc
test
aam
mov
pop
fwait
push
scas
test
mov
outsb
fmull
int3
scas
push
out
adc
push
iret
loopne
mov
dec
loopne
xchg
aam
and
mov
sarb
test
stos
add
mov
sarb
cmc
bound
push
jle
jecxz
mov
inc
ja
mov
mov
mov
in
push
inc
pushf
sarl
ret
daa
sbb
inc
ret
loope
mov
scas
into
cmp
dec
fcmove
push
mov
fistpll
mov
xchg
or
fcomps
jmp
leave
jo
xorb
xchg
xor
dec
fidivrs
into
lods
or
aad
push
pop
xchg
test
jnp
fdivl
aam
add
hlt
pushf
sti
add
leave
punpckhdq
mov
lahf
mov
inc
add
pop
sub
pop
or
loopne
pushf
rcll
mov
ja
mov
lods
cmp
shrl
adc
jo
xlat
sub
aam
cwtl
or
scas
es
loop
addr16
fs
xchg
into
mov
subb
jecxz
push
pop
mov
cmpsl
dec
mov
int3
inc
shl
dec
shll
adc
sarl
and
mov
adc
aam
es
aam
xor
lods
xor
rcl
gs
and
dec
lock
orl
xor
scas
fstpt
into
mov
inc
sub
or
scas
loope
out
mov
stos
jns
enter
ret
cwtl
dec
mov
mov
push
out
adc
inc
aad
or
mov
inc
iret
mov
rcl
mov
or
jl
cbtw
mov
lret
jge
fs
ja
loope
cmp
push
lods
in
sbb
stos
jnp
shrl
mov
xchg
scas
mov
subb
xchg
mov
or
fbstp
mov
jno
add
imul
ret
enter
add
mov
mov
outsb
shll
and
mov
mov
sub
xlat
popa
aad
fwait
mov
scas
mov
mov
xor
test
js
ret
xor
faddl
loope
test
sbbl
outsb
mov
mov
mov
sahf
jle
fistps
mov
rorb
push
hlt
mov
data16
movsl
xorl
fsubl
cwtl
fimuls
scas
jp
arpl
push
xchg
fcmovu
loope
jnp
xor
mov
stc
and
xor
mov
ficompl
fwait
hlt
mov
test
scas
rorb
sarb
or
cmpsb
cmpsb
fidivrs
jno
mov
push
iret
cli
pop
cmpsb
subl
mov
jl
or
sbb
rcrl
pop
lea
rcll
mov
sbb
xor
push
rclb
nop
je
xchg
jle
test
ror
mov
jecxz
add
mov
enter
mov
ret
mov
fnsave
sarl
fistl
pop
pop
inc
adc
mov
sub
shr
sub
inc
int3
fiadds
dec
dec
jp
sbb
cmp
jbe
jbe
mov
enter
in
mov
mov
ja
iret
outsb
int
mov
or
lcall
test
or
mov
scas
shlb
stos
xor
cli
clc
js
mov
int
out
cmp
inc
fistpl
js
jge
in
or
loop
and
call
pop
subl
js
clc
jl
cmp
enter
sarl
fdivl
add
add
mov
inc
fstl
stos
sub
mov
cmp
cmpb
data16
aad
fld
xchg
scas
ja
out
int
or
fldcw
mov
rolb
jge
cltd
xorb
xchg
mov
mov
aam
shr
push
mov
inc
aad
into
add
cmp
faddl
mov
push
mov
sub
rcr
pop
jae
jo
sub
mov
sub
jp
jb
pop
pop
xchg
xlat
shll
enter
sbb
ret
aam
xor
ficompl
or
lea
add
cld
mov
mov
sbb
pop
scas
add
adc
outsb
add
mov
arpl
sub
sub
sbb
test
xchg
loop
mov
cmp
mov
rorb
sbb
arpl
pop
fcmove
lods
aaa
mov
idivl
sbb
fidivrl
push
in
rcrb
pushf
push
inc
adc
jg
das
add
js
pop
jle
loop
jns
lods
fidivs
push
into
shr
ja
pusha
xchg
rol
and
mov
js
adcl
adc
cmpb
lock
jge
ret
mov
inc
in
sti
mov
mov
into
iret
rolb
jl
nop
mov
jnp
push
mov
mov
fsubrl
ljmp
jns
fnstsw
or
xorb
adcl
loopne
mov
inc
xor
scas
pop
mov
fadds
xchg
lds
lock
push
int3
leave
mov
pop
pushf
loope
mov
js
xlat
lret
mov
mov
iret
adc
inc
xchg
shl
jo
push
xchg
xchg
mov
pop
sub
lods
cli
xor
sbbl
dec
jp
mov
dec
jns
sbb
es
cmp
out
mov
orl
jg
aaa
mov
push
mov
jnp
cmp
mov
mov
jbe
push
mov
mov
fsubl
mov
inc
stos
pop
rcl
jp
jnp
sub
neg
fnstsw
enter
jge
js
mov
sarb
jle
mov
sub
mov
fcompl
lret
mov
xchg
mov
jg
aad
mov
jmp
fidivl
mov
and
es
inc
js
mov
sbb
dec
or
lods
daa
jb
pushf
mov
aam
fldcw
enter
mov
dec
rol
stos
bound
fiaddl
fisttpl
mov
mov
cs
daa
rcr
mov
cmp
aad
shll
iret
loop
inc
mov
mov
adc
lods
imul
xchg
cmpsb
and
aam
push
iret
in
mov
fistpll
jp
mov
mov
cmpsb
sub
ficoml
cli
cli
sbb
inc
leave
pushf
mov
int
fmulp
enter
lods
clc
outsb
xlat
cmpsl
rcrl
fcmove
dec
es
test
les
mov
mov
fidivrl
mov
and
jp
dec
or
int
inc
push
addl
sarb
iret
push
push
sub
mov
fidivrs
pop
mov
mov
jp
int
fisubrl
test
rcll
js
scas
mov
fcmovnb
pop
loope
inc
enter
mov
mov
jl
lock
mov
test
flds
sub
fsubrs
fsubl
cmp
mov
jmp
xor
pop
jns
les
std
sbb
into
sub
arpl
fdivl
loop
cmp
cmp
jbe
iret
cmp
test
jl
rcl
adc
push
mov
push
or
jp
int3
fldt
sahf
int
mov
lods
test
dec
aad
imul
pop
mov
or
fildll
push
pop
int
iret
inc
scas
xchg
mov
das
inc
shlb
and
inc
mov
mov
iret
mov
out
xchg
xchg
loope
ret
xchg
add
rorl
sub
mov
jg
insb
xchg
xchg
loope
adc
mov
insl
rcrb
pop
repnz
jle
adc
scas
fidivrl
lret
ljmp
add
push
dec
xchg
xchg
int3
or
fcmovbe
out
fs
pop
imul
ja
roll
xor
cmp
fdivrs
lods
mov
loopne
fbstp
roll
fcomps
bound
es
cmp
xchg
mov
lea
into
in
sbb
mov
scas
mov
in
test
ja
hlt
jge
add
fidivs
jecxz
lock
mov
leave
int
jns
test
xlat
test
pop
ja
mov
fbstp
test
repnz
push
cli
dec
mov
mov
jmp
insl
into
mov
das
int
mov
mov
dec
adc
jns
mov
popa
fdivrs
fstps
or
add
loope
int3
test
xor
and
lock
mov
mov
fistl
dec
movsl
mov
sub
rorb
xor
xor
rcrb
sbb
pop
iret
xorl
cwtl
shll
mov
fidivrl
movsl
adc
ret
test
inc
rcrl
cmp
add
test
push
aad
mov
stos
mov
jg
or
aam
test
addl
sbb
xlat
fisttps
loope
loope
dec
push
xchg
dec
ret
xchg
push
ljmp
fistpll
xchg
jnp
fstl
mov
sbb
aam
cs
fmull
movsl
jno
lahf
fistpll
push
lods
leave
jo
sbb
ret
or
mov
jns
rcr
lea
push
call
push
xor
add
inc
xchg
fldcw
ljmp
test
jp
mov
aam
icebp
es
lods
mov
addb
mov
xlat
mov
sbb
scas
push
jle
lods
insb
xor
or
ror
fmuls
mov
mov
sar
jae
ret
mov
cmpl
sbb
addb
sbb
fucomp
mov
cmp
mov
cmp
js
dec
mov
xchg
fsubrl
loop
in
shll
shll
test
shlb
or
fadd
mov
sbb
ret
xor
inc
jecxz
fchs
jns
mov
or
mov
mov
enter
sbb
ret
mov
imul
js
jecxz
jp
rolb
call
add
pushf
mov
iret
lcall
mov
fsub
aam
xor
fdivrs
mov
mov
enter
jecxz
int
js
lods
jns
insb
mov
adc
fsts
mov
jle
add
inc
push
mov
or
mov
test
insl
les
scas
lods
pop
jnp
mov
mov
xorb
mov
fstpt
loopne
cmpl
enter
mov
nop
rcll
mov
into
mov
mov
cmp
pop
or
lods
jl
arpl
into
fidivl
pop
jbe
lret
and
xchg
jg
jns
mov
movsb
push
aad
in
jbe
rorb
out
insb
jecxz
jge
loop
loopne
push
xchg
mov
out
loopne
nop
out
scas
dec
xchg
test
cmp
push
insb
insl
lret
push
sbb
test
sti
mov
int3
js
dec
mov
mov
rorl
jecxz
mov
adcb
shll
popf
mov
fstpt
push
fidivs
mov
sbb
cs
mov
loop
sub
pop
inc
aaa
jns
imul
mov
int3
dec
loop
mov
stos
xchg
mov
pop
mov
fiadds
int3
mov
push
fwait
jbe
jle
in
fisubrs
sarl
aad
loopne
sub
int
inc
mov
jns
or
jg
das
push
mov
jl
rclb
mov
scas
mov
cmp
fwait
les
movsl
mov
inc
cmp
fidivrl
cwtl
fnclex
scas
adc
test
dec
aam
fisttpl
push
mov
mov
mov
pop
mov
mov
cli
in
and
xorl
push
mov
xor
ficoms
fistpll
dec
jge
ds
jnp
pushf
ja
mov
mov
into
dec
xchg
shrd
jns
iret
push
xlat
push
inc
movsb
add
lods
mov
xorl
insl
dec
mov
shrb
rcrb
lahf
sub
inc
pushf
clc
sbb
jge
sar
scas
mov
dec
sbb
outsb
ror
rolb
scas
repnz
jb
dec
ret
sbb
xlat
or
rol
dec
inc
sub
fwait
sub
xchg
fxch
mov
popa
jns
into
ja
aas
jns
cmp
pop
adcb
mov
ret
mov
push
xor
mov
or
jbe
movsb
ret
sahf
xor
cwtl
jg
ret
sub
inc
mov
fisubrl
xlat
or
mov
out
add
andl
ja
cmp
stos
sub
mov
lahf
xchg
xlat
mov
iret
int
js
into
test
mov
jecxz
jmp
mov
mov
add
nopl
inc
mov
pop
xlat
subb
aam
xchg
rolb
rcrb
sar
insl
mov
mov
ret
dec
mov
bound
cmp
and
mov
lock
mov
aam
fsubs
data16
mov
mov
filds
jecxz
aam
mov
xor
pop
aad
add
lods
cmp
cmp
mov
out
int
jle
mov
mov
into
fcom
or
jp
insl
cmp
xlat
xorl
test
cmp
mov
adc
mov
out
inc
jle,pt
sbbl
aam
lods
jmp
mov
fistpll
pushf
mov
xchg
push
sarb
jae
ret
mov
and
xlat
push
dec
in
jp
outsb
lahf
mov
int
inc
test
ds
adc
adc
lea
push
repnz
loop
rcl
push
jg
push
inc
mov
dec
sti
jge
in
xorb
lods
adcl
jp
ret
cmpl
xchg
mov
rclb
sbb
sahf
std
repz
mov
scas
es
shr
leave
fisubrl
and
jle
mov
fdivp
rorb
rolb
xchg
xchg
add
mov
xlat
push
lret
jle
test
and
scas
lahf
mov
scas
aam
rol
cmp
dec
xchg
push
lret
fildll
fidivs
rcr
js
fcomps
or
movsb
pop
paddq
aad
insl
fcmove
ret
mov
mov
insl
fimuls
into
int3
stos
push
jl
iret
jecxz
sub
test
mov
shlb
ror
and
cmp
mov
lods
xor
dec
loope
fnstcw
mov
int3
fsubrp
pop
fiaddl
ret
imul
jp
scas
push
xchg
mov
xchg
mov
jb
ds
add
cli
loopne
jecxz
mov
fldcw
sarb
xlat
aas
lea
inc
std
adc
xchg
jl
mov
inc
adc
xlat
jge
jg
mov
fcmovb
into
add
ljmp
jg
pushf
mov
jle
iret
pop
or
rcl
int3
add
mov
fisttpll
enter
lahf
mov
fidivrl
push
insb
jnp
push
jb
ss
aad
bound
add
jne
mov
xchg
mov
sarb
enter
mov
inc
mov
stos
scas
leave
ret
mov
cs
rcrl
roll
push
ds
imul
fs
fdivrl
jecxz
lahf
mov
and
mov
mov
jp
dec
xchg
mov
int3
bound
cmp
mov
mov
push
orl
xchg
fimuls
imul
xorb
in
sbb
sbb
sbb
lret
pop
mov
scas
loopne
adc
mov
clc
ss
movsb
dec
sbb
movsb
mov
mov
testl
cmp
inc
jge
int3
arpl
jle
add
and
mov
enter
rcrb
lcall
fwait
mov
jecxz
fcmovnbe
adc
gs
cmp
mov
fcmovnb
and
dec
mov
jge
xchg
sar
test
add
jl
jle
cltd
shr
and
mov
xlat
cwtl
mov
mov
stos
pushf
sahf
mov
xor
fists
mov
fstpt
test
fcomp
xchg
and
std
xchg
addr16
es
orb
hlt
sub
xorl
cwtl
fdivrp
pushf
shl
outsl
fidivl
in
inc
loop
loope
ds
orl
pusha
scas
data16
sarb
rorl
cmp
lret
sarb
sbb
lcall
cmpsl
adc
cmp
cwtl
mov
jns
mov
or
loop
pop
in
notl
mov
enter
fsts
shrl
cmp
fcompl
jmpw
xchg
inc
aad
add
in
jge
fsubp
ret
dec
insb
dec
add
dec
icebp
loopne
inc
out
int
sarl
xor
inc
fstp
fwait
mov
inc
cmpb
mov
outsb
aad
push
scas
stos
mov
fidivs
and
rcl
mov
add
test
rorb
lret
mov
add
fstpl
scas
push
mov
mov
mov
push
or
jg
jle
mov
les
cmpb
mov
dec
mov
mov
cli
pop
sub
clc
lock
sbb
test
loop
fs
repz
push
xchg
fbstp
aam
cmpsb
es
iret
adc
ret
jne
fldl
pop
cwtl
sti
mov
ja
pushf
test
shlb
jg
xchg
scas
js
or
fdivl
mov
mov
test
pop
aad
xchg
int3
dec
push
pop
or
mov
fsubrs
pushf
jle
mov
sarb
adc
mov
jle
loopne
inc
xor
add
sahf
cmpb
mov
fst
mov
sahf
nop
loopne,pn
mov
mov
stos
mov
ret
jge
mov
fisubrs
jns
push
lret
fbstp
xchg
test
add
jl
subl
jnp
fdivrl
and
xlat
inc
imul
rorb
xlat
cwtl
lret
mov
mov
inc
fadd
enter
cmp
lods
mov
inc
rcl
outsb
jp
mov
jle
roll
mov
test
fists
mov
iret
jp
mov
rcl
cmp
fidivrs
xor
sarl
sub
daa
mov
mov
ljmp
mov
jnp
imul
mov
fcomip
lahf
push
cwtl
ljmp
ret
mov
enter
mov
jge
pop
push
adc
or
int
enter
arpl
mov
sbb
fdivrs
rorb
mov
test
fsubrl
loop
mov
aam
insb
mov
pop
xchg
scas
shrl
jnp
outsb
dec
mov
loopne
bound
mov
leave
push
stos
ret
mov
fsub
int3
cmp
mov
inc
inc
xchg
push
mov
mov
and
xorl
rcr
mov
add
test
loope
out
mov
sahf
mov
jecxz
std
loop
aad
add
jnp
add
shlb
sahf
jle
rcrl
mov
push
mov
mov
jp
sub
fldcw
mov
mov
xlat
shl
iret
jne
lods
bound
mov
out
mov
rcr
jg
mov
fs
out
xor
fmull
loop
fistl
push
jmp
pop
shrl
adc
shlb
lods
test
fcomps
sbb
leave
call
dec
sbb
repnz
into
mov
push
xchg
les
add
loop
scas
cli
pop
mov
mov
sarl
mov
inc
shr
stc
adc
ret
ja
jl
mov
ret
or
rorb
dec
fildll
xchg
stos
les
sbbl
mov
es
mov
mov
mov
jns
jp
enter
mov
add
push
mov
jnp
rol
mov
jg
xlat
mov
adc
repnz
dec
jnp
dec
leave
mov
loop
cmp
ljmp
jecxz
test
jns
sub
lods
push
mov
xchg
mov
or
xor
and
aad
sbb
test
mov
test
adc
cwtl
outsb
jp
ret
mov
mov
push
pop
push
jg
adc
sub
mov
enter
jb
loopne
fbstp
in
jb
and
jecxz
leave
add
inc
sarl
dec
or
iret
js
xlat
sbb
test
fldt
mov
test
js
nop
scas
jnp
mov
hlt
lea
mov
fst
ja
dec
shl
cmp
pop
jne
mov
push
pop
mov
jnp
mov
int3
and
and
test
into
jg
fisttps
lea
aad
mov
push
xchg
aam
scas
fcomps
ss
cs
dec
insl
mov
fs
outsb
mov
jge
sbb
pop
fistl
sub
push
es
ret
mov
cmpsb
jnp
mov
adc
jle
jmp
movb
mov
pushf
ja
cwtl
adc
sub
loopne
scas
adc
int3
int3
lret
fmull
enter
dec
mov
addr16
cmp
adc
test
xchg
sbb
test
dec
mov
outsb
mov
jnp
ja
dec
mov
lods
add
out
sbb
jbe
jae
push
jle
jge
fsubs
test
imul
rcrl
pop
mov
jl
xchg
mov
insl
shrb
shlb
fimull
loopne
jg
inc
or
mov
xlat
mov
inc
jnp
fldcw
aad
out
mov
mov
cmpb
mov
ja
cmp
ror
cmp
into
out
or
mov
jl
int
mov
mov
iret
and
inc
sub
add
js
rorb
inc
push
cli
lcall
andl
pop
mov
fisubs
xchg
or
jp
or
bound
or
in
jp
int3
rcr
in
cmp
in
sub
mov
push
sbb
fwait
sub
stos
bound
mov
loop
js
fwait
mov
mov
jns
pavgb
lcall
mov
bound
test
hlt
xlat
in
ss
sbb
int3
gs
xor
mov
sbb
jo
leave
mov
fildll
mov
push
rorb
and
gs
xchg
lds
mov
jne
bound
ret
sub
js
outsb
jg
shll
jae
xorl
xchg
mov
aam
cmpl
shrb
inc
lods
testb
mov
ret
ja
fnstsw
jp
mov
mov
and
les
shll
mov
aad
je
mov
test
fldl
xor
lods
test
scas
sub
pop
fnsave
pushf
testl
sbb
scas
fmull
aam
add
add
shlb
test
into
testl
pop
loopne
scas
add
aam
mov
mov
lods
ss
mov
or
int3
outsb
mov
sub
aam
mov
sarb
jecxz
mov
mov
cwtl
out
jmp
jge
mov
outsb
mov
shlb
fsubrs
push
jl
jp
jb
lds
gs
hlt
and
scas
pop
adc
loop
mov
xchg
aad
pop
and
mov
shll
jno
aam
data16
out
dec
jb
push
mov
lods
test
push
xchg
mov
xor
loop
inc
or
adc
cld
adc
loope
lret
jge
mov
pushf
loop
lods
push
mov
int3
ror
stos
cmp
rcrb
jnp
lods
jp
sarl
ffree
lods
sahf
rolb
jecxz
cmpsl
jb
enter
popa
scas
push
sbb
sar
jecxz
dec
mov
stc
xchg
fsubrl
mov
mov
xor
test
or
mov
fiadds
shrb
push
xlat
jp
mov
mov
jns
test
loope
sahf
into
aam
shrl
adc
std
insb
mov
jge
add
fldcw
xlat
sbb
jg
insb
ja
roll
fcom
rcl
and
leave
sahf
aam
loop
insl
fildll
movsb
jns
shl
aaa
mov
xorl
mov
sarl
aam
enter
xchg
mov
test
lods
faddl
mov
xchg
inc
cli
loopne
mov
shlb
enter
lock
es
shlb
push
adc
loope
mov
xchg
jg
mov
test
add
test
dec
sbb
push
loope
mov
jbe
mov
sub
add
outsb
mov
insl
pop
bound
aad
cmp
pop
mov
jbe
mov
mov
fidivrs
push
jp
ror
mov
pop
inc
test
fcmovbe
loope
xor
push
and
xlat
fwait
test
mov
pop
movsl
insl
ss
mov
dec
sahf
lods
test
je
int3
outsb
insb
mov
es
imul
sarb
shrl
mov
ret
dec
ret
imul
repnz
and
xchg
gs
mov
sarb
test
imul
psubd
adc
cmp
mov
jle
mov
mov
mov
nop
loop
fisubrl
cmpsb
leave
adc
fs
inc
leave
out
test
shll
arpl
mov
fcmovu
fimuls
popa
int3
mov
inc
sarb
ret
ret
adc
pushf
ret
add
out
lea
mov
mov
js
test
mov
stos
mov
dec
mov
mov
dec
fcomp
lret
movsb
inc
in
mov
cmpsl
scas
gs
jo
movsb
int3
inc
movsb
mov
mov
jp
sbb
mulb
pop
jle
xor
mov
xor
nop
mov
xchg
sahf
mov
fistpll
dec
dec
cld
enter
sub
nop
ficompl
mov
mov
lea
outsb
aam
xchg
mov
stos
imul
loope
aad
xor
jmp
fwait
adc
leave
mov
xchg
es
lods
mov
int
or
mov
not
shll
xlat
jge
scas
shll
jl
out
adc
je
push
loopne
pop
jbe
ret
mov
pop
scas
mulb
loop
les
mov
loop
lahf
cwtl
faddl
enter
rcl
cmp
stos
sub
shll
scas
ffree
fistps
xor
cli
lret
mov
xlat
lods
jns
daa
push
in
inc
stos
mov
iret
push
lock
idivl
bound
es
imul
xchg
lea
mov
dec
ja
pop
pushf
aam
mov
mov
mov
mov
jle
jp
test
mov
jo
mov
mov
cmp
sub
or
leave
out
xchg
mov
je
scas
iret
jge
sbb
inc
in
mov
fcmovbe
scas
clc
mulb
cmp
gs
andb
cwtl
ret
inc
std
daa
mov
mov
cwtl
fcmovnbe
loop
idivl
stc
mov
add
mov
sar
in
jg
and
pop
leave
daa
fists
fmuls
pop
mov
loop
fnstcw
mov
mov
jg
fisubrs
or
outsb
jge
mov
sarl
fs
adc
or
jnp
ljmp
mov
rcr
dec
lods
jnp
fmull
cmpsb
cmp
xchg
mov
add
andb
mov
xlat
or
sub
scas
fstpt
mov
mov
or
jb
mov
pop
cmp
mov
test
mov
fsubp
mov
mov
push
mov
sarl
inc
test
adc
sub
imul
test
jle
xchg
mov
sub
testb
loop
es
sti
fwait
mov
loope
adc
mov
rcr
int
jle
cmp
nop
jge
mov
arpl
cmp
mov
jp
xchg
ret
nop
idivl
or
inc
adc
movsl
loop
ret
push
shr
outsb
aad
andl
jp
mov
movsb
rorb
xchg
mov
or
and
scas
jnp
mull
popf
in
mov
mov
call
test
xchg
dec
ja
mov
jecxz
arpl
mov
or
jle
xorl
ja
add
adc
sbb
or
mov
test
test
jg
sbb
clc
sub
faddp
rcr
lret
ret
adcl
loopne
mov
push
mov
and
jl
loop
loop
aam
test
gs
pushf
pop
mov
sbb
in
aam
cmp
pop
int
rol
jl
loope
in
fwait
xlat
mov
iret
js
adc
cwtl
mov
arpl
leave
ret
imul
je
jns
jne
das
outsb
add
rcl
es
cmpl
lods
and
ret
test
jp
mov
scas
enter
push
sar
jae
in
push
mov
js
and
jno
es
fstpl
repnz
shl
adc
cwtl
gs
ja
dec
int
jg
test
xor
rclb
mov
int
aam
or
inc
jge
cs
lods
inc
test
fdivrl
cmp
cli
cmp
pop
loope
cmp
ja
mov
jae
ds
ljmp
test
test
es
es
fimuls
daa
test
cwtl
pusha
inc
loop
lea
mov
cwtl
subl
test
mov
cli
mov
mov
inc
sbb
loop
cli
test
rorl
jns
scas
fadds
dec
dec
fistpll
jns
outsl
std
test
ret
cmp
cltd
je
jno
cld
imul
fists
loop
mov
mov
sbb
mov
and
mov
cld
jb
shlb
or
loopne
cmp
jl
add
fstpt
outsb
rorl
int3
fldcw
scas
sbb
fimull
jle
mov
jl
mov
movsl
leave
jl
lods
lret
lea
mov
sbb
inc
aad
mov
xlat
sarl
scas
leave
cs
out
scas
mov
dec
push
rolb
fstpl
rol
inc
sarl
jnp
sbb
jmp
mov
mov
mov
push
dec
jns,pt
cmp
rcr
mov
push
cmp
dec
arpl
pop
dec
jp
jle
scas
into
aam
pop
into
aaa
mov
insb
pop
mov
jbe
cmpsb
ror
int
loope
sbb
sahf
mov
mov
ret
and
fbstp
fbld
enter
xchg
outsl
sarb
adc
fmuls
ja
mov
stc
xorl
or
aam
notb
iret
addb
mov
loope
pushf
cmp
in
fcmovne
sub
stos
add
aas
push
mov
js
loop
es
mov
lods
jge
loop
cmp
rorb
stc
xor
cmp
sarb
fcmovne
fnstsw
ja
loop
das
loopne
pop
jb
mov
jg
mov
xorl
fidivrl
xor
mov
pop
mov
jns
rcr
mov
cmc
shrb
out
into
out
cwtl
inc
xchg
repz
xchg
push
mov
mov
je
inc
jle
insb
sbb
mov
inc
rcl
jmp
das
adc
mov
mov
fdivr
lahf
addr16
pushf
fwait
push
mov
jg
mov
shll
iret
sbb
jne
jo
scas
loopne
mov
out
pusha
sbb
dec
lret
or
enter
mov
mov
inc
sbb
pop
out
in
inc
mov
mov
cmpsb
sti
pop
sub
xor
mov
xorl
push
xlat
shlb
mov
aad
lret
es
cmp
lret
sub
rcl
dec
dec
inc
mov
sbb
int3
mov
insl
sbb
push
and
jge
test
rcl
fisubl
dec
xor
mov
es
dec
test
fcmovne
sbb
jp
sbb
mov
test
xchg
ret
fs
fidivrs
leave
mov
jno
stos
enter
aam
push
inc
mov
test
mov
rcl
inc
adc
mov
push
push
jns
mov
jns
jg
repz
sub
cli
and
mov
mov
dec
aaa
cmp
mov
jl
mov
inc
push
ret
adc
mov
fildll
jp
lods
out
int
jp
sub
jg
test
xor
rorl
js
xchg
test
bound
push
xlat
movsb
jns
int3
cs
sahf
mov
jp
jl
aam
loopne
cmpsb
shlb
mov
cmp
out
xchg
jge
push
mov
lds
jl
rcr
jns
ja
rcl
jnp
aas
repz
mov
mov
push
rcl
imul
inc
test
ja
sub
jge
in
adcb
stc
lock
in
int3
outsb
sub
out
xchg
ficoml
lea
xchg
lock
or
dec
jbe
int
mov
ficompl
mov
jp
or
mov
sbb
out
and
lods
outsb
rcr
push
std
fistl
aad
add
jbe
loop
mov
mov
stos
mov
ss
loopne
xlat
push
pop
xchg
pop
fnstsw
js
mov
ret
sub
mov
dec
mov
jecxz
std
cmp
fcmovnb
lock
xor
jp
jg
iret
dec
fcmovu
mov
lahf
mov
shrl
push
fnstcw
insl
inc
or
fidivl
fidivrs
dec
nop
fmul
jnp
sub
loop
and
push
jle
mov
pop
test
and
aaa
shr
data16
inc
jb
aad
out
fcmovnbe
loopne
or
shrb
ja
fdivrl
xlat
mov
js
fnstsw
ret
enter
jecxz
test
or
jns
aam
repnz
adc
imul
aad
rcr
xchg
mov
nop
mov
add
in
bound
imul
push
loopne
cmc
ret
paddusb
jp
xlat
lods
loop
push
lods
aam
fisttpll
fs
dec
cld
ror
jo
cwtl
orb
int3
pop
push
jmp
pop
pop
mov
xlat
sarb
mov
dec
lods
mov
mov
inc
push
xchg
dec
mov
shll
mov
shll
test
pop
jb
and
cmpsb
xlat
shl
or
xorl
mov
scas
cs
pushf
mov
test
xchg
fs
adc
jae
test
loopne
test
rolb
shll
pusha
or
sub
int3
imul
data16
mov
mov
and
sbb
lret
mov
pop
or
xchg
testb
mov
loop
add
test
mov
push
mov
iret
jecxz
mov
lods
push
mov
sbb
mov
fiadds
mov
mov
push
ret
xchg
loop,pt
sbb
or
push
xchg
loop
rcll
sub
add
mov
cmp
scas
fstps
xchg
inc
mov
fdivrl
sub
dec
addr16
sbb
aam
shlb
mov
mov
cmp
ss
jle
jp
into
loop
lcall
lret
es
roll
jmp
hlt
mov
mov
adc
xchg
cmp
jecxz
sbb
out
or
jnp
add
leave
sub
sub
mov
mov
mov
sbb
fidivl
fbstp
sahf
andl
fnclex
adc
or
mov
enter
mov
mov
mov
jecxz
pop
int
jbe
mov
cmp
loopne
adc
shlb
cwtl
jns
inc
js
pop
test
inc
aam
xorl
pop
and
ror
sahf
sbb
jbe
lcall
rcrb
jle
dec
xchg
sbb
sahf
fdivr
cs
imul
sbb
pop
mov
in
jp
dec
pushf
jg
inc
imul
mov
stos
fisubrs
rsm
outsb
jl
mov
jge
cmc
mov
rcl
icebp
cwtl
aam
inc
pop
mov
ret
jle
into
rolb
push
iret
loop
nop
mov
sbb
cmp
xchg
aad
mov
cltd
stos
sarb
int3
xor
mov
out
or
mov
mov
outsb
mov
inc
add
bound
outsb
int3
pop
push
loopne
jg
mov
loop
fcmovu
mov
pop
ds
scas
clc
fstpt
xor
hlt
aad
push
jg
xchg
push
loopne
loop
test
mov
mov
jg
scas
not
ljmp
xchg
rcl
adc
adc
or
mov
enter
mov
ror
pushf
test
mov
sbb
and
out
add
mov
outsb
int
mov
lods
mov
push
roll
enter
xchg
jnp
or
sbb
out
aam
ret
sub
ret
insb
jge
push
cmpsb
fucom
mov
adc
scas
fisttps
int3
mov
inc
shlb
mov
dec
mov
fidivrl
pushf
sarb
cmpl
xchg
xor
enter
fdivl
fstpt
mov
mov
fs
leave
jle
lahf
not
test
inc
mov
shlb
inc
ja
jb
enter
add
sub
dec
lods
ja
and
add
pop
shlb
inc
mov
or
mov
ret
rcr
stos
scas
imulb
es
sarb
mov
mov
scas
test
leave
shrb
sub
jecxz
scas
ret
mov
out
xlat
out
xchg
lds
out
ror
out
pop
subb
mov
jno
fs
adcb
rcr
fwait
xchg
shl
or
fdivrl
or
sahf
mov
aad
dec
xchg
push
enter
fcmovbe
into
or
mov
mov
insb
loopne
scas
pushf
rorl
stos
sbb
xchg
fnstsw
les
inc
loop
adc
fnstenv
dec
std
dec
icebp
rcl
inc
ret
push
movsl
iret
mov
jb
out
and
mov
jns
aam
dec
rol
and
es
or
pushf
mov
loope
ret
cmp
mov
fldcw
enter
mov
pop
lret
fabs
sub
ss
lret
roll
push
add
repnz
loope
faddp
jns
es
jle
adcb
test
loope
aaa
push
jg
jl
fidivrs
test
lret
jp
lods
mov
notb
rorb
loope
test
ret
fldl
inc
arpl
pop
sbb
into
push
orl
push
mov
fsubrl
mov
ror
inc
mov
add
mov
mov
fistps
mov
rclb
mov
shrb
subl
aas
pop
lret
mov
fsub
mov
cmp
jle
pop
call
js
mov
into
mov
leave
fs
adc
lods
push
pop
repz
sub
lea
push
dec
sti
dec
mov
ja
push
ljmp
mov
mov
sbb
test
pop
jmp
loop
fstl
mov
xchg
fdivrs
sbb
scas
fisubrl
insl
dec
inc
xorl
mov
fdivrs
mov
dec
call
pop
lds
test
mov
movsl
shlb
xchg
adc
mov
popa
xchg
pop
xchg
js
test
lods
push
outsl
fucomi
sub
push
pop
adc
jl
sub
pop
mov
imul
ss
flds
jae
fcomp
loop
pop
jg
jecxz
cmp
shll
test
dec
adc
sahf
rcl
push
mov
cli
loopne
mov
je
loop
insl
pop
mov
xchg
ja
aam
jns
sbb
cmp
outsb
dec
push
fwait
mov
mov
sub
int3
fldt
insb
inc
ljmp
inc
inc
sarb
mov
inc
sbb
fmul
sub
fldl
loop
test
loop
jg
scas
mov
shlb
ja
xchg
out
in
cwtl
mov
popa
mov
repz
jge
rcl
testl
adc
lret
sarb
jecxz
insb
mov
enter
and
mov
mov
test
jne
sub
mov
fidivrs
mov
test
int
movsb
ror
ss
xchg
mov
jle
fisubrl
xchg
cld
enter
mov
das
pop
jp
xchg
test
cmpl
aad
jecxz
cli
es
shrb
xchg
and
gs
mov
popa
rcrl
inc
test
mov
jae
popa
lea
fmuls
addl
loopne
push
dec
mov
inc
lahf
or
jae
loop
aaa
je
mov
movsb
jg
mov
fdivrl
or
mov
mov
cmp
mov
iret
add
xlat
scas
sarl
shlb
cmc
es
or
test
lods
push
dec
movsb
mov
xor
jge
mov
fwait
mov
mov
jp
adc
adc
mov
mov
mov
scas
mov
or
mov
fidivl
rolb
lahf
loopne
dec
adc
test
push
push
push
pavgb
xlat
test
pop
jnp
sub
mov
mov
lret
mov
xchg
jp
scas
scas
mov
enter
jbe
mov
out
cltd
sti
sub
or
fstpt
mov
movsb
cmp
xchg
mov
inc
xchg
shlb
test
add
lcall
loopne
mov
mov
out
mov
repnz
ror
jge
test
dec
push
ja
fdivl
jg
fsubrs
adc
xlat
iret
sbb
shrb
xchg
xchg
jle
les
pop
jp
jns
mov
jo
sbb
inc
cli
mov
fcoml
aam
cmpl
fsub
mov
loope
mov
fs
aam
pop
mov
xlat
jecxz
mov
loopne
xor
lret
dec
int3
mov
movsl
push
pushf
enter
jge
sbb
jle
inc
js
mov
mov
ja
adc
int3
jp
rol
int
addr16
aaa
jmp
je
and
loope
movsl
cmpsb
in
mov
fidivrl
pop
mov
out
lret
mov
mov
jns
jp
addl
lods
xchg
jae
mov
test
rcr
fisubrl
mov
movsb
sub
mov
fdivl
fdivrl
loop
mov
leave
faddp
inc
inc
jnp
dec
rolb
aam
jg
in
mov
mov
js
aad
movsb
shrl
mov
iret
ret
jnp
sub
cwtl
int3
loop
mov
rcr
aaa
aaa
push
in
shl
mov
cmp
jae
mov
and
push
jnp
fs
xor
gs
cmp
fdivrs
mov
inc
test
in
pop
jnp
xchg
sarl
mov
ret
mov
sbb
pushf
jle
mov
sarl
cmp
sub
test
stos
roll
jmp
and
fucomi
jecxz
jp
mov
jg
inc
rcr
int3
pop
into
pop
rcrb
or
test
xchg
mov
pusha
push
addl
shlb
lahf
into
xorb
es
mov
js
shlb
and
iret
movb
shlb
movsl
push
rolb
cli
shl
mov
jecxz
das
jbe
fidivrl
mov
xor
aam
into
mov
add
fcmovne
les
mov
cli
lods
dec
push
mov
enter
jle
mov
rcll
jp
addl
or
xchg
fmul
rcl
fadds
js
shl
mov
mov
int3
or
test
mov
rcl
sub
dec
cmp
ret
mov
mov
cmpb
in
cmp
mov
sbb
xor
jbe
test
loop
aam
stc
jnp
popa
lods
aad
jg
rolb
jle
add
sbb
aam
mov
jp
nop
js
call
mov
arpl
xchg
shll
fxch
lods
mov
xlat
scas
sbb
dec
fnsave
roll
jp
loop
ret
jle
jns
sbb
xor
rcr
and
pop
lahf
mov
mov
mov
and
insl
dec
cmpsb
fimull
loope
subl
push
mov
dec
mov
loope
arpl
sarl
rcr
fsts
mov
pop
or
es
pop
dec
mov
flds
in
test
cmp
fidivl
inc
fistpll
test
xchg
mov
imul
xlat
js
and
mov
enter
jle
mov
std
scas
dec
aad
test
jae
add
ja
outsb
enter
and
mov
in
pop
scas
hlt
sub
out
jmp
mov
insl
mov
sub
shll
mov
sbbl
sbb
je
insl
insl
ret
iret
jno
mov
loopne
inc
dec
add
mov
sbb
scas
lods
mov
add
or
jo
fildll
int
mov
mov
fdivrl
test
ret
pop
jae
jge
push
lcall
imul
addl
mov
sbb
inc
jno
xchg
push
push
fimull
cli
fadd
fstpl
adc
mov
nop
lods
mov
ret
xchg
or
fidivrl
mov
and
fsubs
jns
jmp
and
jp
mov
fimuls
adc
fiadds
ja
test
mov
loope
js
stos
fnstcw
jl
xchg
cmpb
xchg
scas
mov
js
mov
lret
ret
ss
test
jle
es
test
insb
mov
xorb
rcr
add
xlat
mov
dec
ja
add
into
stos
pop
scas
fsubs
rol
adc
or
mov
fistpl
push
or
and
fdivrs
lret
rcrl
mov
lret
jle
lods
sbb
out
and
loop
cli
in
jg
aad
int
mov
mov
mov
pop
fcmove
and
cmp
add
test
mov
iret
sarb
mov
in
jecxz
lds
imul
jnp
add
mov
mov
cmpl
push
adc
xchg
mov
sbb
in
ror
ret
push
and
test
mov
mov
and
xchg
enter
mov
sbbb
int
cmp
adc
add
daa
or
sbb
loope
mov
fsubrl
loope
shrl
cmp
call
xchg
mov
pop
arpl
xchg
mov
mov
mov
rorb
mov
getsec
daa
shlb
scas
mov
and
data16
aad
int3
xchg
fcom
fistpll
mov
pop
fists
xchg
pop
or
adc
inc
or
xor
xchg
pop
dec
movsb
rcrb
fistpll
mov
test
ret
pop
fldcw
push
enter
loop
repz
fidivrs
jecxz
jnp
test
mov
push
cwtl
dec
add
lret
mov
mov
inc
insb
scas
andl
mov
into
leave
jg
test
jb
and
add
insb
iret
jecxz
jb
loop
jp
push
lret
mov
out
inc
mov
fnstenv
test
mov
fimuls
lahf
inc
nop
sbb
bound
mov
lahf
shlb
in
dec
aam
xchg
fadd
xchg
movsl
enter
dec
jle
jns
arpl
jns
mov
fnsave
test
loop
stos
insl
jl
lret
ret
fidivrl
dec
mov
je
fstpt
jno
sbb
jecxz
es
jp
subb
rol
fstpt
mov
test
mov
mov
iret
ret
int3
or
enter
push
xor
test
shll
movsb
mov
fcmovnbe
xchg
jecxz
and
push
jle
or
jg
mov
mov
xor
fdivrl
gs
mov
rolb
cmpsl
into
push
pusha
shrb
ja
mov
loop
rolb
scas
xchg
jecxz
inc
int
es
cmp
loopne
stc
push
sbb
test
shrb
cmp
push
mov
fwait
shl
jg
adc
dec
das
test
shl
clc
jp
enter
mov
dec
cmp
mov
sbb
sub
mov
int3
jp
mov
mov
rcl
out
or
inc
dec
sarb
mov
xor
pop
into
push
or
aam
mov
cli
scas
shll
scas
mov
or
mov
repnz
imul
or
jg
loop
test
fdivrl
and
push
jmp
test
push
inc
jns
mov
mov
rol
fldt
das
mov
mov
ret
jp
jecxz
mov
add
loop
xchg
iret
aad
int3
sbb
mov
fsubs
loop
push
imul
sbb
lahf
jo
push
add
jl
xchg
shrb
in
jecxz
mov
ds
mov
mov
xor
mov
ja
je
lahf
ret
outsl
mov
scas
cmpb
push
lea
jg
dec
ret
js
scas
loop
mov
rcr
ljmp
lahf
mov
xor
mov
jb
stos
jge
int
mov
data16
rcl
lahf
test
adc
mov
or
xlat
lock
lahf
enter
mov
mov
stos
shlb
xchg
loop
lahf
mov
cwtl
pop
hlt
xchg
fidivl
push
xlat
xchg
daa
adc
or
aam
shll
mov
jp
repnz
test
cli
and
scas
mov
jle
les
out
xchg
jecxz
xchg
aam
adc
xorl
insb
into
insl
fcmovu
sbb
xor
je
fstps
mov
ja
sbb
dec
nop
mov
mov
stos
scas
or
mov
dec
popa
loope
iret
cli
movsb
loop
or
jecxz
shl
loop
xchg
lods
ret
and
shll
jb
into
dec
cmp
loope
subl
xor
sarb
cmpsl
leave
fcoml
jp
sarb
sub
fisttps
lcall
jns
jp
sarl
es
xchg
enter
stos
pop
mov
cs
mov
fwait
test
mov
sbb
pop
pop
leave
cmp
int
fadds
clc
sarl
aam
dec
pop
iret
out
push
leave
mov
cmpl
mov
outsb
and
add
ficompl
cmp
mov
mov
int
leave
cmp
leave
inc
cli
rcr
push
int3
jp
loop
jnp
int
xchg
mov
fwait
or
shl
out
xlat
adc
mov
lahf
pop
fwait
add
cmp
lods
xchg
dec
jle
sbb
mov
jge
xchg
add
rol
push
int3
or
xchg
aad
mov
mov
fstl
and
fs
cmp
sub
jecxz
loop
fidivrl
mov
loop
mov
pop
icebp
mov
mov
and
push
xor
dec
mov
aaa
sub
imul
loope
mov
and
test
mov
ret
lret
ret
mov
jecxz
aam
cmp
pushf
aas
xchg
inc
fmull
aaa
stos
xor
shrl
dec
xchg
mov
mov
into
mov
loope
pop
cld
mov
int
mov
loope
inc
test
loop
jg
lds
sub
jmp
or
lret
int
scas
stc
sub
fcmovnb
dec
call
jns
xor
xchg
mov
imul
adc
jae
call
pop
or
addl
fcmovbe
ds
loop
pop
movsl
aad
out
pop
xchg
mov
and
mov
sub
into
ja
call
das
out
dec
rorl
fistpll
es
cli
lods
xchg
mov
js
xchg
xchg
in
fs
js
mov
rcrl
cmp
mov
or
shl
out
out
jg
dec
fidivrl
js
orl
cli
in
loop
mov
sub
loope
xor
jo
mov
mov
enter
fcmove
fists
or
mov
int3
les
test
mov
leave
mov
mov
into
mov
push
aas
xor
mov
in
insb
jns
fwait
mov
sbbl
push
clc
rorb
cmp
mov
or
xorb
add
sub
loop
mov
fcmovbe
lods
pmaxub
jge
pop
pop
mov
xchg
pop
das
jecxz
shll
imul
leave
lods
shll
movsl
in
nop
fstps
test
mov
sarb
jle
and
inc
jbe
mov
fisttps
mov
sti
xchg
pusha
roll
xor
sbb
int
xor
sar
loop
movsl
mov
mov
cmp
arpl
lret
lods
add
outsb
int3
mov
sarl
jbe
dec
cmp
cmp
mov
push
jl
js
xor
fisubrl
push
mov
xorl
rcrl
sbb
enter
sbb
and
jle
es
arpl
xchg
fnstsw
idivl
inc
adc
stos
fstp
aam
loopne
addb
inc
rcl
mov
aam
mov
mov
jnp
dec
pop
adc
mov
xlat
mov
pop
shrl
test
mov
jg
js
es
es
outsb
mov
mov
xlat
xchg
aam
pushf
dec
lea
mov
mov
xchg
or
jp
mov
mov
jle
fldt
rcrl
sbb
adc
rcrl
mov
and
xor
ret
movsl
lcall
aaa
mov
stos
jns
test
fwait
addb
add
sub
inc
insl
push
and
and
mov
dec
adc
pop
jne
xor
int
xchg
cli
ficomps
jle
push
mov
call
sahf
fiaddl
or
mov
mov
or
mov
test
pop
mov
mov
push
jle
cmovae
mov
loope
pop
cmp
lods
test
xor
outsb
adc
ret
enter
aas
movsb
xchg
gs
movsl
and
outsb
push
xchg
and
mov
xlat
mov
mov
shll
dec
cmp
enter
adc
dec
jbe
mov
jl
cmpsb
mov
iret
loop
and
pop
inc
and
mov
rclb
mov
leave
ss
mov
jg
fcomip
int
dec
xlat
mov
cwtl
xchg
dec
cwtl
inc
dec
push
mov
mov
lods
jge
add
loop
lret
lods
lahf
into
int3
cmpsb
jg
jns
fmul
aam
push
into
ret
and
test
loopne
fucomp
push
pop
jmp
call
hlt
sbbb
int3
lahf
pop
xor
cmp
iret
push
mov
fisttpll
scas
leave
pushf
mov
pop
in
or
push
ss
mov
mov
test
mov
loopne
mov
mov
mov
mov
enter
movsb
cmp
mov
mov
enter
shlb
mov
loopne
mov
mov
jg
fisubs
mov
bound
push
mov
push
test
ss
cmp
mov
and
lods
jns
xor
mov
fxch
and
add
hlt
xchg
mov
inc
lods
movsb
in
and
arpl
xor
test
mov
mov
nop
loopne
cli
pop
mov
mov
jle
enter
sub
push
lods
xchg
pop
dec
fwait
into
loope
mov
jle
xor
xchg
js
fcmovu
jmp
insl
ret
lret
ss
loop
imul
mov
mov
mov
jle
andb
mov
add
movsl
fnsave
rcl
test
push
and
loop
mov
insl
subb
sbb
int
jmp
das
test
push
iret
das
sub
loopne
fldt
in
mov
popa
inc
out
ja
ret
mov
push
lods
aad
lret
xlat
jge
imul
scas
jecxz
fwait
mov
push
rorb
mov
fisubrl
mov
cli
into
push
or
cmp
int3
test
int
sbb
xor
and
test
mov
mov
cmp
ret
rcl
mov
mov
cmp
inc
mov
int
or
mov
jb
sarb
pop
pushf
and
mov
lahf
enter
imul
into
xchg
inc
or
mov
pop
or
test
xchg
xchg
add
push
roll
xchg
jp
test
js
bound
pop
mov
xlat
ds
flds
pop
mov
dec
sahf
push
sbbl
sbb
mov
mov
rcrl
mov
mov
subl
loop
mov
cs
or
iret
jns
test
jp
dec
aas
enter
loope
jns
int
sub
cwtl
into
mov
fwait
mov
stos
fisttpl
or
fcmovbe
test
mov
addl
movsb
js
jg
outsb
into
jbe
insb
xchg
out
and
mov
jnp
sub
cld
int
fdivrs
or
rorl
cmp
lret
rorb
out
mov
mov
fstpt
loope
mov
dec
test
mov
push
test
push
jne
gs
outsb
jnp
pusha
jo
roll
mov
dec
lods
push
push
scas
mov
or
jecxz
loop
dec
ficoml
jl
sbb
ficoms
jne
jb
fdivrs
movsb
rcll
rol
pop
mov
and
xor
pop
jg
fstpt
pop
adc
shr
fiaddl
push
or
sbb
fcom
mov
jns
jge
mov
fiaddl
xchg
scas
mov
fwait
lock
movsb
mov
cmp
fnstcw
es
into
push
loop
fnstcw
enter
int
pop
inc
xlat
rcr
vpminub
int3
mov
dec
es
mov
xchg
ret
mov
jp
rorl
cmc
loope
fcompl
sarb
jo
es
int
mov
xchg
xchg
int3
mov
jecxz
ret
mov
xchg
xlat
jg
or
sar
jp
int3
shll
jl
cmp
sub
enter
cwtl
jle
es
mov
ffreep
addl
mov
jno
ret
nop
xchg
sub
rcr
dec
mov
mov
inc
cwtl
shld
pop
js
movsb
movsb
dec
jl
scas
cmp
push
mov
jecxz
jl
mov
scas
loop
ret
mov
mov
test
dec
cli
add
pop
or
es
enter
or
jns
sbb
cwtl
fcompl
outsb
xor
dec
lahf
sub
mov
jp
ljmp
mov
mov
loope
movsl
stos
enter
and
add
dec
mov
dec
fisubrs
fdivs
xchg
ss
pop
mov
dec
cwtl
mov
repnz
xchg
sbb
mov
das
shll
loopne
lret
rcl
loope
loop
xor
sbb
loopne
dec
je
iret
loop
lods
or
aad
int
loope
fisubl
inc
pop
dec
mov
mov
es
pusha
int3
lods
cmp
jb
or
cs
dec
pop
mov
js
loopne
movsb
mov
lods
scas
inc
les
icebp
ret
push
xchg
repz
mov
mov
into
and
ds
ret
xlat
imul
jg
push
cmpsb
pushf
iret
frstor
cs
jnp
jle
mov
mov
fcmovu
jg
mov
adc
or
push
fnstenv
mov
dec
dec
lods
stos
jg
add
xor
mov
test
jnp
xchg
push
daa
test
iret
mov
sti
pop
mov
or
rcl
shl
jg
test
loopne
push
lods
sub
inc
test
jae
cli
mov
mov
rcr
xor
loope
loop
push
lret
add
es
mov
js
int
call
int3
iret
mov
dec
push
jmp
sbbb
mov
jmp
dec
loopne
dec
dec
in
push
mov
mov
mov
lret
rcr
loopne
mov
repz
addl
and
popa
mov
retw
mov
cwtl
ljmp
xlat
iret
lods
test
dec
mov
cmp
imul
fsubs
test
jmp
jns
sbb
jb
mov
fbstp
int
mov
cmp
es
test
sbb
scas
or
rcl
sub
push
ret
outsb
mov
lods
int3
adc
sarl
add
fcoms
loop
cmc
les
xchg
pushf
aad
mov
sbb
mov
cmp
adc
shrl
push
rep
scas
shrb
inc
jb
rorb
subb
scas
pop
mov
cwtl
xchg
dec
lea
fmull
int3
add
sub
sub
cli
cmp
ja
aad
fidivrl
jl
cmp
ror
ret
mov
fistpll
or
adc
sbb
scas
jbe
ja
mov
dec
loopne
dec
test
mov
ficomps
jle
fsubs
cmc
ljmp
fnstsw
sbb
mov
pop
lods
jecxz
imul
mov
es
lods
sete
scas
scas
mov
dec
xlat
mov
mov
fnstcw
push
mov
leave
and
fisubl
sarb
subl
jmp
mov
adc
test
cmp
push
es
fadds
inc
xchg
int3
mov
pop
jbe
ror
xchg
mov
movsl
or
rcll
ret
leave
iret
daa
pop
jle
jl
push
mov
js
mov
cmp
std
loope
sahf
rorb
aam
or
in
lret
fidivrl
push
cmp
lods
roll
sarb
jecxz
mov
ret
fwait
loope
pushf
dec
in
scas
enter
sub
std
shrl
in
mov
js
test
sub
cmp
int3
jmp
les
cli
loopne
pop
lods
ljmp
rolb
lods
mov
insb
rolb
dec
loope
mov
lcall
fisubrs
js
xor
sarl
jg
push
jbe
sahf
rclb
leave
dec
mov
test
mov
jg
push
jl
bound
js
jecxz
data16
dec
xchg
jns
pushf
mov
xchg
xchg
aam
sbb
pop
or
pop
xchg
stos
ljmp
xchg
mov
sbb
rorl
adcb
xchg
push
es
rcrb
sub
fs
lods
xor
fmull
xchg
sbb
inc
xchg
aam
jns
stos
pusha
test
je
jge
push
xchg
aad
js
sbb
cmc
repnz
fs
dec
aam
lods
and
shlb
mov
cmpsb
sub
xchg
cmp
or
dec
hlt
cwtl
xchg
cmpsl
and
dec
add
and
or
mov
ret
aam
mov
rolb
sub
xlat
into
lahf
ja
scas
inc
inc
fisttpl
js
jle
mov
mov
int3
lods
jge
fcmovnu
cmp
ffree
mov
ret
jnp
mov
fnstcw
mov
popl
scas
mov
jns
xor
or
adc
mov
leave
mov
jmp
std
jmp
lahf
lods
lcall
pop
push
jbe
movsb
mov
scas
jp
loop
and
add
mov
adc
rcrl
jns
cmp
cmpb
imul
scas
push
enter
ja
mov
subl
mov
jns
sarb
lods
loopne
mov
pop
fisttpll
cmp
out
xchg
jle
pop
jnp,pt
in
jp
je
jl
and
inc
push
mov
lahf
shld
jbe
push
jbe
mov
aaa
and
enter
aad
push
or
dec
insb
dec
xchg
js
fwait
jp
push
and
ret
rcrb
xlat
mov
mov
mov
jp
mov
jle
rorl
jne
mov
mov
pushf
icebp
add
add
es
lods
xchg
shlb
mov
clc
adc
push
jno
xchg
test
adc
xlat
lods
mov
dec
mov
mov
mov
add
xor
fdivs
mov
inc
xchg
js
xchg
sbb
mov
in
jmp
loop
mov
xlat
js
add
and
into
mov
lock
enter
ret
loope
inc
pop
es
mov
ret
mov
lods
out
jl
test
jecxz
fdivl
roll
mov
inc
mov
push
into
xchg
aam
scas
xchg
and
sbb
repz
cmp
dec
jp
iret
jno
ret
mov
ror
mov
ja
adc
jnp
ret
and
mov
mov
add
jle
test
mov
mov
into
sbb
ds
xor
loopne
ss
jbe
cld
mov
xor
inc
inc
sahf
aam
and
repnz
gs
ret
pop
rcl
mov
aad
mov
cmpl
sbb
lahf
loopne
inc
fprem
lods
sub
lods
fstpt
fstl
outsb
mov
mov
scas
rol
sub
fstpl
in
and
lret
or
fldl
lret
data16
jnp
dec
dec
push
js
inc
cmpsl
cmp
dec
into
jle
lcallw
ret
and
pop
ret
jge
xor
int
mov
shlb
dec
into
inc
jge
test
lods
pushf
fcomps
jg
or
test
push
and
mov
aad
loope
inc
fnstcw
sub
mov
jns
jb
xor
mov
mov
fcmove
sub
inc
test
roll
mov
fsubrs
mov
add
aas
mov
mov
cli
or
mov
int
rolb
xorl
int3
idivb
fdivs
mov
rolb
aam
jae
jecxz
xorb
lods
ficoml
mov
sahf
sub
lret
lods
mov
mov
inc
aam
test
shrl
ds
mov
add
mov
loop
xor
lds
fcmovnu
rcll
adc
mov
xor
fmulp
aas
jp
sub
mov
inc
adc
jne
out
sbb
bound
mov
cwtl
mov
sbbl
aam
dec
leavew
xor
enter
jle
mov
mov
dec
jmp
jns
lret
mov
rcrl
mov
sar
scas
cli
out
in
or
movsb
or
ja
dec
out
add
mov
shll
cmp
and
jecxz
js
rolb
es
xor
xlat
add
cs
pop
decb
and
mov
ds
pop
xchg
mov
setp
and
sbb
test
lret
jae
sub
scas
cmp
clc
loopne
and
xchg
lods
test
cmp
lret
leave
fidivrs
pop
loop
push
jmp
ljmp
test
mov
mov
iret
or
aam
scas
lods
xchg
fnclex
js
ret
adc
outsb
fisttpll
into
jecxz
jl
mov
rolb
jg
mov
fdivrs
xlat
int3
dec
lahf
lods
leave
mov
into
mov
xchg
int
ret
mov
leave
rorl
ret
mov
jle
mov
in
addl
lcall
stos
mov
scas
xchg
add
adc
jle
jp
mov
scas
inc
jmp
ret
repnz
or
mov
sub
jne
cmpl
mov
iret
ljmp
test
mov
mov
shl
jge
jle
add
mov
inc
inc
pop
aam
into
clc
cmp
fmul
fdivl
sbb
mov
movsl
ja
or
inc
pop
int
jnp
scas
and
jmp
sbb
lcall
js
nop
jb
cmc
scas
aad
fldt
and
add
es
add
mov
jl
mov
xchg
cmpl
fadd
enter
fisubrl
fstl
jns
add
inc
movsb
loop
sbb
js
adc
mov
mov
mov
mov
and
lods
aad
dec
sbb
mov
scas
sbb
fldenv
fwait
pop
mov
push
dec
rcll
test
stc
xchg
call
stc
mov
fidivs
add
rorb
mov
mov
rep
jp
mov
xor
jg
ret
cmp
icebp
les
inc
mov
lods
aas
pop
into
mov
fstps
inc
xlat
xor
test
enter
xchg
dec
bound
call
cs
cli
pop
mov
xchg
jg
mov
js
jne
fdivl
xor
dec
and
sti
clc
xor
mov
xchg
cmp
imull
xchg
push
iret
mov
push
ljmp
and
add
sarb
fs
iret
loop
jns
jge
cs
ror
mov
mov
mov
mov
mov
dec
enter
test
test
dec
jl
xchg
add
lods
jg,pt
imul
enter
aam
pushf
push
cmc
pop
shrb
fwait
xlat
jge
sbb
test
subb
jo
push
jo
and
inc
mov
pop
rcrb
cmp
loope
jnp
sbb
cmp
insl
repnz
lea
xor
aam
cmp
and
pop
mov
mov
push
adc
push
aam
faddl
jl
cmp
push
test
jbe
mov
jo
jb
es
rorb
fnstsw
pusha
fldenv
dec
push
jp
cld
cmpl
outsb
insb
mov
dec
test
int
sbb
aad
xchg
mov
push
je
mov
push
movsb
dec
or
shrl
xchg
cmp
pusha
mov
jmp
and
mov
jne
mov
js
fidivl
inc
pop
inc
lods
xor
insb
mov
enter
fadds
inc
jecxz
mov
sbb
ja
push
sbbb
repz
out
xchg
loop
jb
pop
jp
mov
jl
pop
jo
dec
aam
or
cmp
jl
and
jge
mov
mov
fscale
and
shlb
cld
es
adc
inc
out
pop
pop
rcrb
aad
sub
and
push
mov
ret
sbb
cmpsb
insb
inc
lods
ret
int3
pop
scas
lcall
and
addb
das
cmp
sbb
jae
test
dec
jno
fcom
sub
push
adc
inc
mov
and
repnz
xor
shl
in
mov
shrb
movb
popf
pop
mov
popf
or
lcall
es
add
xor
push
cli
adc
dec
stc
xchg
mov
nop
pop
ret
push
adc
mov
push
pop
push
and
scas
sub
pop
mov
and
xchg
addl
pop
lds
push
pop
es
int3
add
sbb
insb
fildll
es
in
test
fwait
in
sub
imulb
push
mov
ror
sbb
pop
negb
in
and
pop
push
jo
push
shlb
pop
pop
in
es
cmp
hlt
inc
shlb
orb
xchg
mov
fidivrs
xchg
lods
jl
jle
xchg
imull
mov
fists
mov
jp
jl
dec
test
mov
mov
dec
int3
jle
out
jns
cld
out
jge,pt
shrl
xlat
lret
mov
xchg
movsb
mov
xor
pop
iret
loop
mov
les
xorl
test
lcall
xor
push
ljmp
js
loope
pop
leave
out
jge
xlat
outsb
int
xchg
stc
cmpsb
adc
push
shl
fidivrs
mov
xchg
mov
and
xlat
fdivl
pusha
movsb
rcl
stos
int3
sti
lret
fbld
lods
fbstp
mov
push
into
jge
das
add
or
jle
xorl
loop
loope
leave
mov
mov
push
mov
jg
imul
test
mov
test
ret
insl
aad
dec
mov
push
mov
push
mov
sub
stos
filds
push
cmp
ljmp
test
mov
mov
loopne
adc
adc
dec
aam
mov
sbb
sub
imul
andb
lods
mov
xchg
mov
aam
or
rorb
mov
cmpsb
std
cmc
xchg
movsl
mov
add
sub
fcmovbe
scas
imul
xchg
mov
sbb
mov
xchg
fadd
call
dec
scas
int3
sbb
sub
pusha
jp
mov
lcall
js
test
mov
inc
push
iret
rorl
mov
mov
jno
jecxz
push
pop
es
push
mov
cli
aaa
lahf
faddl
push
in
lcall
loope
mov
ja
mov
cmp
sarl
dec
cmpsl
scas
ret
sarl
mov
fistps
cltd
xchg
repz
sub
mov
pop
sub
into
test
mov
fmuls
cmp
ja
pop
subb
push
subl
mov
stos
or
loop
lods
mov
jl
pop
jns
shl
enter
fidivrl
rcll
lods
or
mov
bnd
mov
repnz
xor
jmp
enter
jae
loop
sbb
xlat
aad
jg
dec
loop
and
mov
pmaddwd
sub
loop
mov
fcmovnbe
ljmp
fnop
jecxz
push
mov
jp
dec
enter
jbe
xchg
jg
xchg
or
jnp
sbb
sbb
std
ljmp
sbb
test
int
movsb
sarl
lods
test
lods
fucom
jg
int
stos
xchg
mov
pop
fcmovbe
mov
jecxz
and
mov
mov
mov
js
test
imul
test
rol
movsb
sbb
inc
xor
out
loope
test
mov
outsb
jg
or
mov
mov
adc
jge
xor
ret
inc
mov
dec
xchg
xorl
jge
stos
ret
je
test
jle
dec
out
cwtl
popa
scas
jns
daa
mov
inc
stos
scas
loop
or
fcmovb
scas
mov
ffree
ret
enter
or
scas
mov
jecxz
xchg
or
jp
add
cwtl
test
adc
add
adc
lods
jecxz
dec
lds
fchs
rcrl
mov
scas
mov
loopne
xor
xchg
js
fwait
cmp
mov
imulb
and
enter
push
popf
faddl
jl
pop
fcmovb
out
jne
cwtl
shrl
scas
adc
adc
rolb
int3
mov
sbb
fcmovnbe
aam
adc
fwait
aaa
lods
loop
or
mov
mov
rcr
pop
ret
scas
mov
fnstsw
and
xor
mov
mov
cwtl
int3
mov
xchg
loope
adc
pop
or
jecxz
scas
push
rcl
leave
fidivl
stos
xor
push
ret
shll
shll
adc
inc
rcrl
in
loop
movsl
push
call
sub
out
adc
mov
fisubrl
cltd
rol
sbb
rolb
sarb
cmp
iret
mov
mov
aad
aas
mov
iret
mov
push
lods
out
cmpsl
mov
into
add
mov
jns
cmp
dec
jo
jnp
xorb
sarl
and
test
jbe
fidivrl
lods
sbb
jg
and
cli
idivl
mov
loope
xchg
sarb
rorb
sbb
jmp
shrl
xlat
rclb
int
jecxz
cmp
jnp
data16
xchg
loopne
fdivrl
fisubrs
mov
outsb
xlat
shll
test
addl
lock
mov
mov
out
mov
pushf
into
cmpsl
into
fadds
add
shrl
fists
mov
jp
jns
pop
test
pop
stos
movsb
jmp
ret
loopne
mov
js
sub
jg
mov
mov
mov
loope
les
mov
enter
sbb
push
add
or
mov
jnp
jg
jle
mov
testb
xchg
mov
jp
mov
ljmp
fcmovbe
loop
sbb
jg
lahf
mov
sbb
sub
cli
dec
mov
andb
mov
mov
xlat
fnstenv
sub
mov
leave
enter
xor
mov
jnp
test
add
icebp
fistpll
shrl
fwait
shlb
mov
mov
ffree
addl
add
jnp
push
sarb
lahf
fdivrs
lods
mov
arpl
loop
outsb
mov
mov
cmp
mov
int3
out
imul
insb
insb
jb
fcmovu
xor
jnp
out
jle
aaa
dec
outsl
dec
or
cmp
fxch
lret
mov
xchg
pop
sub
shll
aam
add
xchg
rcl
mov
repnz
dec
push
fisubrs
or
leave
ret
jl
jnp
mov
cmpl
mov
mov
mov
scas
jp
xchg
loopne
bound
aad
loopne
test
mov
roll
mov
sbb
pop
leave
in
ret
mov
mov
mov
or
and
testl
mov
enter
shrl
outsb
sbbl
mov
jg
mov
dec
call
sarb
lds
pop
or
xorb
pop
in
bound
mov
loop
pushf
mov
adc
cmpsl
pop
jnp
inc
test
ret
cmp
in
adc
aam
and
movsb
mov
pop
fwait
rcl
jl
xchg
mov
mov
js
dec
lock
scas
shl
or
aad
and
push
in
cld
imul
ja
xchg
mov
push
scas
mov
and
push
cmp
xchg
jne
test
adc
and
mov
out
gs
jmp
or
and
mov
insl
cmp
mov
dec
enter
das
add
dec
xchg
dec
test
ret
rcl
into
loopne
rcrb
iret
jle
leave
sub
enter
pop
fwait
popa
cmp
movsl
lea
or
mov
fistpl
imul
hlt
jb
mov
inc
scas
adc
mov
jbe
enter
int
dec
xor
andb
ret
mov
scas
mov
mov
stos
mov
subl
jl
sub
mov
jge
loop
or
int
mov
out
or
jb
adc
mov
cwtl
hlt
dec
sbb
push
or
fbld
push
jnp
dec
add
loope
jl
adc
inc
adc
mov
loop
sub
mov
and
fldt
negl
push
shr
push
loope
mov
jl
inc
lods
jmp
roll
test
int3
shll
loopne
xchg
fidivrl
sbb
xor
pushf
int3
mov
mov
aam
js
leave
lods
and
rcl
shll
or
imul
mov
jns
adc
addr16
test
adc
xchg
mov
dec
in
mov
jnp
xchg
mov
dec
lahf
ret
fbld
sarl
mov
test
loopne
mov
mov
sbb
imul
ror
in
cmc
mov
inc
mov
leave
iret
movsb
fisubrs
mov
insb
xchg
insl
pop
out
shr
jecxz
leave
mov
js
cmp
mov
subl
mov
mov
jg
insb
mov
push
hlt
dec
push
shrl
and
mov
mov
mov
pusha
ljmp
ret
or
xor
mov
push
inc
lock
jge
clc
int
test
adc
mov
cs
rcl
in
jg
rcrl
scas
sbbl
js
scas
fidivrl
scas
aad
fisttpl
jnp
mov
outsb
stos
sahf
ret
jmp
sbb
mov
fcmovb
rolb
cmp
int3
jbe
xchg
jnp
xchg
and
pop
out
sahf
fidivrl
out
loop
rcl
enter
subb
shll
pop
lahf
rcr
fwait
jo
test
into
xchg
sarl
mov
test
into
aas
mov
mov
leave
mov
dec
lea
inc
dec
pop
int3
sub
mov
inc
mov
xor
test
into
jnp
pop
add
mov
sarl
ss
mov
mov
mov
or
scas
into
test
fdivrl
mov
shlb
jb
orb
jmp
imul
mov
xor
out
mov
lds
jp
insb
push
ja
xchg
inc
or
mov
jmp
mov
mov
jmp
iret
adc
fs
into
aaa
mov
fcom
mov
and
and
and
subb
fistps
jb
cmpl
xor
lods
fsubl
js
push
out
sbb
sbbl
scas
mov
fisttps
stc
lods
test
jns
sub
jns
lret
lods
leave
ret
jle
ror
scas
dec
mov
pop
mov
ret
dec
jo
es
fdivrl
test
fdivrs
iret
mov
mov
mov
cwtl
popa
or
jns
inc
mov
lret
aaa
jmp
mov
shlb
ficoml
jne
push
repnz
jp
cmp
rcr
fsubs
fldl
add
mov
lods
jp
inc
sub
cli
cmp
mov
outsb
cmpl
mov
xchg
mov
mov
jns
mov
mov
cmp
xchg
mov
xchg
mov
into
or
int
cmpsb
scas
inc
sbb
jnp
das
sbbb
jb
sarb
loope
pop
and
cmp
int3
lods
mov
popa
dec
fdivl
jl
jg
movsl
femms
mov
add
mov
mov
jns
push
stos
mov
xor
movsb
adc
loopne
lods
cmp
dec
orb
shrl
jge
pusha
or
sarl
test
mov
cwtl
jb
fnstsw
into
cmpl
lods
das
ja
int
adc
rorl
loop
sarb
mov
js
iret
imul
enter
mov
aam
mov
fstl
iret
mov
xchg
cmpsl
aam
inc
adc
ret
pop
pop
nop
xchg
ror
ja
adc
push
cwtl
fcompl
sbb
xor
sarb
mov
insl
add
iret
sbb
inc
mov
push
enter
ret
mov
mov
iret
jmp
aad
push
dec
jl
fadd
rcrb
insb
test
jnp
repnz
cs
fildl
jle
loop
adc
sub
push
cmp
rcrb
lds
mov
leave
or
fld
pop
mov
int3
fcompl
push
xchg
outsb
and
sbb
mov
cmp
xor
jl
cwtl
fdivl
pop
js
mov
jp
mov
shl
shll
lods
ror
cmpsl
sub
stc
ret
dec
andb
js
pop
shrb
outsb
mov
cwtl
xchg
lods
inc
les
ja
test
iret
insl
subb
pop
int
test
mov
or
stos
and
test
dec
out
jns
shrl
dec
xchg
aam
sbb
or
test
ljmp
loop
mov
and
mov
aam
movsl
xor
mov
dec
icebp
or
jl
dec
out
jnp
hlt
dec
sub
out
ret
jmp
cli
gs
push
test
loop
mov
cmp
jns
frstor
sti
lahf
add
das
mov
ficoml
mov
popa
loope
mov
les
jg
shll
ret
mov
xor
sarl
push
rcr
push
mov
push
orl
or
leave
aad
sub
mov
cli
pop
in
inc
rcl
test
sarb
movsl
mov
aad
jle
mov
loop
pusha
aas
stos
inc
popf
xlat
cmp
cmp
fidivl
mov
xchg
mov
mov
jmp
jle
xchg
or
cli
dec
mov
cwtl
movl
mov
es
int
jge
scas
js
inc
loope
cli
jnp
stos
cmpsl
ret
rcl
cwtl
mov
out
adc
pushf
cld
movsb
in
in
fsts
jecxz
jle
xchg
ja
ret
or
ret
test
inc
or
insl
mov
rorl
jecxz
popf
lret
shl
cmp
mov
pop
dec
pop
adc
in
repnz
insl
fwait
mov
mov
repz
sti
jge
pop
lods
cmpsb
xchg
dec
jle
mov
and
mov
ficoml
adc
ret
mov
rorb
jnp
movsl
aam
iret
jl
cli
cmp
bt
sub
jl
cs
add
pop
or
ja
lods
jp
outsb
ret
cmpsb
mov
bound
xchg
mov
push
xchg
jl
test
cli
xchg
fnstenv
mov
loop
daa
adc
xchg
xchg
aam
cmp
into
mov
scas
mov
xor
or
and
dec
into
jle
mov
cwtl
cmc
xchg
inc
mov
lahf
jecxz
jp
mov
lret
int3
jl
xlat
jmp
dec
xlat
fdecstp
inc
xchg
lods
ffree
jp
xor
and
int3
jecxz
mov
mov
into
leave
mov
ret
dec
int
ror
imul
mov
mov
popf
inc
sarl
aam
std
xor
cmp
push
ret
aam
test
xlat
loope
dec
rcrb
xchg
dec
xchg
push
mov
mov
mov
loopne
jb
sub
mov
imul
fstpt
or
xchg
fadds
mov
fsubl
fmull
push
sub
in
sbb
andl
xchg
rcrl
insl
loope
push
gs
leave
fcmove
orl
cwtl
ja
inc
loope
into
lret
mov
leave
shl
cmp
loop
loop
or
xor
jo
es
mov
xchg
ret
jecxz
int
cmp
adc
loopne
jp
fimull
jge
mov
lods
aad
mov
jae
mov
test
jl
mov
mov
stos
or
andl
inc
jae
fs
push
std
sub
shrl
addb
mov
mov
aad
loopne
mov
jle
enter
fcmovbe
fistps
xchg
int3
mov
and
fnstenv
test
shlb
xor
outsb
adc
push
fwait
mov
mov
nop
movsl
pop
xchg
scas
aam
cmp
rcr
fmulp
or
mov
int3
mov
xorb
pop
mov
mov
shlb
out
adcl
mov
mov
scas
dec
int
inc
xchg
stc
ja
xchg
jg
in
les
mov
dec
cmpsl
lds
adc
sub
lods
ror
cmp
test
shrb
stos
push
jp
add
dec
shll
cli
push
sarb
mov
jns
mov
aad
xchg
xlat
iret
xchg
xor
lods
xchg
test
sbb
clc
arpl
js
fnstenv
inc
shll
rclb
fisubrl
scas
xor
sbb
add
test
mov
fucom
jle
rolb
into
loop
loop
popf
test
mov
sub
jl
add
mov
fisubrl
inc
lds
arpl
jno
psadbw
jns
inc
stos
mov
mov
ret
cmp
aam
test
je
and
scas
push
es
mov
inc
mov
loope
mov
loop
jle
mov
decb
fwait
mov
push
scas
lods
jnp
incb
int3
outsb
jns
add
mov
jbe
into
fldcw
loop
pop
shrb
pop
scas
mov
cmp
jbe
mov
insb
scas
rcl
jbe
andl
or
iret
or
mov
ja
or
jnp
xchg
ficoml
jge
adc
add
leave
mov
cmpb
dec
or
iret
int3
out
fidivrl
lods
mov
shlb
mov
or
data16
fcomps
pop
mov
sub
pushf
mov
lods
adc
sbb
xchg
jno
in
rclb
into
xchg
jp
popf
adc
mov
cmp
jge
andb
lahf
and
mov
xor
cltd
cltd
and
out
ss
out
ds
jecxz
ror
dec
push
mov
add
or
fidivs
out
sbb
adc
lahf
sbb
scas
push
fsub
mov
xor
sysenter
xor
repnz
je
fldt
jg
mov
lcall
mov
movsb
inc
mov
mov
pop
sub
dec
gs
popf
xchg
cltd
sbb
push
out
mov
js
adc
mov
xor
mov
imulb
inc
fnstcw
or
insb
xchg
cld
mov
mov
ret
rolb
mov
fdivrs
sbb
int3
sub
nop
dec
ljmp
mov
scas
jle
jnp
shrl
and
fidivrl
cmc
lret
stc
push
xchg
xor
out
ja
sbb
dec
fimull
cmpb
mov
lcall
or
sub
fldl
rorb
rolb
xlat
add
xchg
jecxz
jge
jp
jg
mov
leave
mov
rcl
filds
ret
insb
ret
mov
jnp
mov
call
xchg
mov
mov
shlb
mov
fidivrs
outsb
xorl
ror
add
jns
add
test
dec
cmpsb
shl
insb
push
jmp
int3
in
loopne
test
push
lret
loopne
lahf
xchg
lock
cmp
lods
mov
jle
mov
aam
leave
mov
mov
inc
adcl
jbe
fildll
adc
ror
mov
and
or
stc
jle
and
insl
mov
roll
jmp
in
push
jo
xchg
insb
frstor
jmp
ja
into
xchg
push
mov
mov
stos
ljmp
add
repz
or
mov
jb
rolb
and
sub
pop
rorb
or
mov
push
mov
fcmovb
xlat
jl
xorb
cmpl
jne
jge
iret
xchg
jb
scas
fimuls
rol
cli
mov
ja
or
jns
push
sar
cld
loop
dec
push
scas
iret
ror
scas
inc
js
mov
leave
pop
test
int
insb
fldz
sbb
pushf
mov
jl
jecxz
fisubs
jp
xlat
xchg
lods
mov
mov
shrl
pushf
jge
xchg
imul
cmpsl
xorb
scas
mov
mov
mov
mov
ror
lahf
test
jg
shr
jle
pusha
mov
dec
js
leave
test
mov
aaa
xor
xchg
loope
mov
mov
sbb
pop
xor
xchg
scas
mov
pushf
into
aam
xlat
pop
xor
adc
jecxz
lcall
into
flds
iret
mov
ljmp
jbe
test
test
call
int3
pop
fsubrl
or
aam
fcoms
ja
or
mov
call
leave
mov
testl
iret
ljmp
adc
les
dec
mov
fcmovb
xor
lret
leave
jl
fimull
arpl
iret
pusha
mov
int3
loop
push
pop
jbe
lret
jg
mov
add
cmp
sahf
ja
add
jecxz
fstpt
cmp
sarl
addl
sub
mov
push
fisubs
mov
mov
mov
push
fsubrs
loope
imul
fwait
jns
test
mov
adc
mov
enter
cmp
cli
mov
dec
jnp
stos
inc
jg
sub
loop
nop
xchg
fndisi(8087
mov
or
jp
mov
mov
iret
loopne
ja
das
mov
xor
add
sub
push
cmp
mov
jge
push
xchg
idivb
and
mov
iret
scas
aad
jb
int
pop
sub
js
subl
fists
ret
dec
cwtl
jecxz
lcall
scas
xor
iret
sarb
mov
rcl
mov
mov
xchg
insb
mov
fcomps
orl
and
lods
loope
ret
sar
sbb
mov
mov
sbb
pop
sarl
loope
fdivrs
dec
xchg
jl
data16
mov
aad
fcom
rorl
pop
outsb
or
mov
adc
xchg
mov
rcll
xchg
stc
es
sub
fsubrs
loopne
mov
xorl
xchg
mov
mov
mov
test
ficomps
scas
andl
sub
jnp
dec
bound
sbb
sbbb
xor
int
insb
ljmp
xchg
cld
fsubrl
out
sbb
sbb
push
mov
xchg
rol
lods
mov
push
rcrb
push
and
mov
ja
push
xor
das
scas
cmpsb
xlat
pushf
mov
je
ds
mov
js
fdivl
movsb
fnsave
into
outsb
jbe
faddp
xchg
sarl
pminsw
int3
rcl
adc
fisubrs
xor
xchg
iret
neg
xor
enter
sub
shr
fdivl
xchg
fucom
shrb
mov
dec
in
mov
sarl
mov
cmp
imul
outsb
mov
ja
rcrb
jnp
xchg
out
xchg
sub
icebp
sahf
into
add
cmpl
or
fcmovnbe
loopne
dec
fdivrl
xchg
cs
mov
mov
sbbb
lahf
cwtl
mov
in
test
rcrb
jp
loope
mov
or
test
mov
sarb
jns
and
jp
fidivrl
cmp
xchg
iret
push
ljmp
lods
int
dec
cmp
sarb
ds
push
xchg
lahf
mov
sbbl
jb
mov
cli
cmp
xchg
fwait
into
test
in
mov
mov
fisubrs
roll
pop
jnp
jg
and
cli
or
mov
loopne
jno
mov
or
mov
int
fcmovne
ret
std
dec
xchg
jecxz
out
jle
inc
mov
or
aad
into
add
xlat
rorl
ficoms
xor
int3
out
dec
and
or
jecxz
cmpsb
enter
mov
ljmp
scas
mov
and
adc
ss
adc
sbbl
xchg
rolb
jb
int3
dec
inc
fimuls
ret
fstl
lcall
outsl
mov
sarl
movsb
ja
xchg
fcompp
mov
shlb
aad
imul
ret
repz
add
ljmp
fidivl
ret
push
test
lea
push
jge
jns
dec
xor
test
js
int3
ror
jbe
jg
xchg
int
adc
adc
dec
andl
mov
loopne
sub
lods
aad
fistl
leave
add
lret
mov
inc
jp
mov
rcll
fsts
int3
out
insb
or
xor
push
loop
pop
flds
xor
xlat
jge
xorb
ret
mov
in
pop
mov
int
bound
aaa
mov
jge
shl
int3
or
fxch
mov
mov
out
stc
fdivrs
mov
xchg
rcll
cmc
nop
sti
inc
mov
jl
loopne
les
int3
enter
aas
mov
fildll
mov
iret
adc
lahf
jp
int
pop
lods
xchg
mov
adc
adc
push
in
stos
mov
rcl
cwtl
or
fistl
addl
inc
leave
and
cwtl
and
in
add
push
mov
imul
out
jnp
mov
push
mov
mov
sbbl
arpl
add
je
and
mov
data16
xor
ror
cmpsl
sub
rcl
push
pop
es
mov
aad
mov
dec
stos
lea
leave
loope
mov
xchg
mov
jo
dec
xchg
fidivrl
mov
lret
mov
into
inc
push
pop
jns
enter
jle
mov
sarl
mov
movsl
leave
jge
hlt
into
sbb
xor
sub
fstpt
push
inc
adc
pop
sbb
movsl
xor
lcall
imul
fcoms
sub
mov
xor
add
mov
ljmp
test
mov
sub
enter
xchg
xorl
leave
mov
xor
cli
call
inc
in
cmpb
rorb
sbb
sub
leave
mov
mov
push
aam
cmp
scas
inc
insb
pop
leave
add
or
and
test
jns
loop
je,pt
add
orl
shrb
add
stos
add
scas
leave
mov
push
ret
fnstcw
sub
imul
jl
popa
in
inc
pop
js
loopne
je
mov
jbe
lea
cmp
jle
fdivrs
mov
ret
bound
or
mov
cmpb
jg
inc
jecxz
pushw
inc
dec
push
lods
icebp
pop
loop
test
xor
fmull
aam
fcos
shrl
nop
stc
jp
js
ljmp
into
mov
mov
sub
iret
sarl
jp
leave
cmp
push
mov
fcompl
test
mov
lods
subb
or
scas
shl
scas
fwait
sbb
push
fsubs
or
cmpsb
mov
fistpll
jle
fidivs
outsb
movsb
mov
aam
jge
lret
loopne
ljmp
mov
pop
or
enter
fcoms
jle
loop
pop
fidivrl
jge
test
scas
jb
xor
sbb
ljmp
fmull
inc
adc
fnstcw
jnp
mov
clc
mov
adc
out
fdiv
push
xor
mov
lea
scas
lcall
das
xor
push
rolb
xchg
cmp
dec
pop
mov
rcr
in
mov
mov
mov
loopne
xchg
dec
mov
fdivrl
insb
shl
pushf
mov
pop
sarb
jb
adc
mov
outsb
ja
jb
sbb
push
cmp
mov
fsubrl
mov
jg
lods
data16
sub
ret
mov
mov
adc
popf
rcrb
cmp
mov
pushf
aad
mov
mov
pop
xorl
das
lret
sti
mov
int3
or
leave
int
mov
jge
mov
mov
into
cmp
rcr
out
ficoml
aad
add
sbb
nop
aad
sbb
mov
mov
test
ficoml
scas
mov
loop
or
adc
test
push
dec
mov
in
jl
lods
fisubl
inc
mov
mov
lahf
fcmovnbe
inc
je
mov
lahf
mov
mov
aad
movsb
mov
notl
pop
jp
lock
iret
sahf
icebp
add
loop
xorl
mov
cwtl
lods
cwtl
mov
mov
test
pop
mov
inc
jp
out
jnp
aam
jbe
loop
lahf
loopne
out
inc
lahf
ret
jnp
xchg
sbb
inc
loop
xor
and
jecxz
mov
das
imul
cwtl
and
ret
xorb
jle
imul
jo
cmpl
dec
mov
outsb
fnstcw
orl
mov
mov
xchg
movsl
shlb
les
jb
or
rcll
add
rol
into
aam
fisubrl
cmp
cmp
scas
ret
push
repz
lods
mov
test
jbe
ret
scas
cmp
adc
scas
mov
jp
fldcw
popa
pop
jecxz
sahf
xlat
enter
rcr
mov
mov
shlb
mov
mov
lea
loope
rolb
push
lods
cmc
dec
nop
mov
jns
inc
int3
fmull
jp
test
adc
pop
mov
rcl
sarb
loop
push
insl
mov
or
push
sub
int
jge
rcr
push
leave
inc
push
xchg
scas
int3
lea
push
sbb
jne
mov
mov
lret
jecxz
outsb
ret
test
shlb
fdivr
movsl
loop
jg
out
dec
jnp
inc
mov
sbb
mov
test
shlb
mov
push
popf
or
fimuls
fmuls
out
jge
pop
jle
pop
testl
loopne
aam
lods
pop
rclb
in
test
fsubp
xor
sub
cmp
sub
shl
xlat
cli
sahf
insb
mov
mov
jae
ss
rol
loope
sarb
jp
mov
mov
sarb
mov
mov
jl
rorl
scas
imul
fiadds
nop
cwtl
into
jge
push
cld
pushf
aad
mov
jecxz
mov
rcr
dec
mov
mov
cmp
sarb
sbb
dec
jns
subl
dec
jle
cs
sub
fnsave
xchg
ret
aad
int
into
fiaddl
mov
fdiv
rorb
and
aam
add
mov
cmp
sub
fidivrl
push
mov
loopne
das
sub
or
jg
test
xchg
cmp
test
mov
mov
leave
jnp
jecxz
pop
outsb
test
add
enter
lret
fucom
test
jbe
xchg
fnstenv
and
dec
pop
jp
push
mov
push
pushf
fidivs
adc
adc
out
add
mov
cmpb
aad
xchg
mov
fidivrs
or
addl
mov
je
cs
ret
leave
stos
or
mov
xor
adc
and
lea
jns
and
fsub
ret
out
xchg
outsl
mov
mov
mov
xor
scas
cli
js
lods
mov
jmp
jecxz
mov
mov
int
leave
add
js
mov
mov
mov
inc
mov
mov
ror
loop
jnp
xor
mov
popa
lret
sarb
clc
ds
mov
into
fidivrs
aad
sbb
sub
das
xchg
pop
js
rorl
fstpt
shlb
cmpsl
imul
xor
test
test
mov
test
xchg
popl
int3
enter
mov
stos
push
fisubrl
rcll
and
cmp
outsb
stc
mov
add
rcl
movsb
pop
std
fldenv
mov
xlat
subb
movsb
lcall
jo
dec
jbe
imul
jle
xor
mov
rorl
jp
repnz
mov
js
test
mov
ret
es
push
fsubrl
mov
or
mov
test
cmp
in
enter
adc
out
outsb
popf
mov
sarl
dec
scas
jecxz
fldcw
dec
inc
iret
xorb
push
test
fiadds
pop
loop
inc
lds
jnp
sarb
ja
xchg
aas
int3
push
push
int
mov
test
mov
stos
mov
jge
lods
mov
test
ret
pop
add
mov
arpl
fcmovnbe
leave
call
stos
popf
loope
dec
and
sbb
mov
test
stos
in
shlb
fcomps
leave
shl
lcall
cli
out
push
cmp
in
loope
push
scas
sbb
fisttpll
std
roll
bnd
xchg
and
fisttpl
lds
mov
sbb
dec
lods
jle
sarl
xlat
orb
int3
loopne
sub
test
jp
add
xchg
mov
jae
insl
mov
insb
ja
outsb
mov
ljmp
movsb
aad
jns
loopne
inc
shl
adc
jecxz
jnp
mov
mov
adc
jg
loope
jg
enter
mov
leave
jecxz
out
mov
or
imulb
insl
scas
lods
mov
les
fldt
mov
sbb
xchg
rolb
xlat
out
pop
aam
jl
mov
mov
sub
inc
leave
xchg
mov
dec
loope
fstpl
xor
jle
ret
rclb
aad
test
jecxz
subb
pop
test
mov
sub
enter
mov
sub
pop
ficompl
mov
xor
int
sbb
cmp
js
ja
bsr
cmp
loop
add
insl
mov
pop
rcr
stos
mov
push
push
dec
mov
scas
sub
repz
mov
jne
divl
test
adc
xchg
ffree
mov
xor
pop
jg
fnstenv
pop
or
sbb
xchg
dec
rol
push
es
or
jb
mov
lods
sub
test
push
ror
shlb
jnp
xchg
mov
jge
dec
mov
mov
jecxz
push
insb
fistl
xlat
mov
enter
mov
fsubrl
ss
shlb
loop
mov
jmp
sub
in
jns
push
xchg
js
mov
sbb
lret
and
push
loope
dec
xlat
fnstsw
leave
and
cs
push
out
dec
cwtl
loope
inc
subb
scas
jp
shlb
push
mov
lcall
aad
ret
jnp
cmpsb
pusha
mov
in
lea
and
ret
jp
enter
xlat
int3
jp
push
mov
into
js
jecxz
adc
sarl
jp
mov
mov
jbe
mov
inc
jp
scas
mov
mov
pop
repnz
mov
mov
jns
jnp
sarl
xchg
cwtl
loop
dec
ret
fidivrl
shl
jecxz
xchg
mov
add
pop
es
jle
punpckhwd
xor
out
cmp
jecxz
pop
mov
mov
xchg
mov
xchg
testb
mov
adc
fstpt
roll
xchg
jg
jge
mov
dec
dec
mov
mov
xlat
and
pop
ficomps
adc
pop
movsl
mov
jle
test
rcl
jl
pushf
lods
xchg
sub
dec
jp
loopne
push
icebp
lods
mov
or
icebp
shll
fcmovnu
fidivs
fimull
inc
mov
fs
aaa
mov
add
cli
lret
inc
xchg
bound
or
mov
scas
std
or
ja
fimull
cmp
repnz
test
shll
leave
scas
loopne
into
shll
lods
jb
mov
lahf
jl
mov
or
test
sub
faddl
cli
jg
out
rol
push
movsb
test
ret
xor
mov
je
sahf
jns
lods
cld
mov
mov
add
shlb
aam
test
mov
xor
cmp
pushf
test
mov
and
int
sbb
shll
loop
mov
and
js
ret
ja
fidivl
rcl
add
rcll
mov
addb
dec
outsl
or
rolb
fstp
popa
cmpb
je
test
fistpll
or
and
out
mov
mov
cli
loope
aas
mov
jns
pop
push
ror
fisttpll
adc
shrb
fdivl
xlat
js
dec
adc
adc
and
mov
mov
cmp
sub
dec
fsubl
jb
loop
jg
mov
or
cli
fwait
sub
xchg
movd
jg
loop
inc
outsb
or
call
jns
jge
loopne
add
aaa
push
call
scas
inc
lahf
fiadds
int3
leave
aaa
xchg
mov
les
mov
mov
fisttpll
sub
jg
mov
or
sub
loop
sbb
xorb
es
mov
sarb
mov
or
mov
jnp
fiadds
loopne
push
int
adc
jge
or
mov
dec
mov
shl
jle
movsb
fdivrl
filds
fisubrs
push
imul
into
sub
leave
inc
jl
pushf
jg
lcall
mov
cli
outsb
loope
test
pop
push
and
inc
lret
add
imul
jb
dec
sbb
jmp
int
fildl
adc
xlat
scas
sahf
xchg
push
or
mov
mov
jge
ret
push
adc
shll
push
rcr
mov
jge
jl
push
es
stos
stos
shll
pop
ret
push
mov
pop
sbbl
pop
int3
xchg
enter
sub
addl
rcr
mov
xchg
jecxz
add
push
mov
ret
aam
ret
scas
xchg
int3
scas
mov
mov
scas
push
inc
call
test
lods
pop
inc
lret
mov
fistpll
movsl
sarl
mov
xor
push
fcomps
leave
daa
jnp
xchg
aaa
stos
rorb
inc
loop
leave
sbb
xor
add
out
jl
xchg
pop
jp
xchg
decl
adc
into
mov
shrl
aam
orb
pop
lret
mov
adc
adc
xchg
fucomp
enter
cmp
cmpb
jmp
outsl
push
push
enter
int3
xchg
sahf
mov
jns
jno
add
jge
xor
in
lahf
test
rcr
mov
negl
adc
sbb
sbb
jne
jg
mov
subl
loopne
cli
pop
jbe
aam
cwtl
fcmovne
mov
xlat
inc
xor
ja
mov
imul
sahf
mov
mov
xlat
fimull
scas
mov
pop
in
shll
xlat
rol
add
jecxz
or
cmpb
sbb
inc
mov
mov
mov
enter
inc
loopne
mov
js
rolb
add
repnz
mov
leave
xor
mov
mov
cmc
xchg
js
mov
rol
mov
adc
leave
faddl
mov
mov
cmp
dec
test
cmp
imul
sarb
test
or
fdiv
imul
push
imul
push
push
pop
or
jns
pop
xchg
and
ret
fbstp
push
test
cmc
icebp
mov
jns
ret
push
mov
pusha
push
sbb
xchg
in
mov
scas
mov
mov
sar
loop
jne
lret
aad
jg
fwait
mov
or
mov
rclb
xchg
mov
and
lds
pop
popf
shr
sub
ret
lods
add
rcr
fisubl
iret
les
mov
ljmp
cmpsb
shr
mov
shl
mov
cmpsb
xchg
imul
sub
and
es
jns
inc
iret
xchg
pop
dec
pusha
loopne
push
mov
or
subl
push
sub
ret
sbb
enter
dec
test
das
mov
mov
mov
mov
cmpsl
mov
test
loopne
js
rorb
xor
clc
dec
xchg
into
jle
jnp
mov
or
mov
test
mov
fdivrl
mov
outsb
adc
inc
dec
mov
jle
mov
enter
aam
dec
das
xor
in
dec
loope
lds
aad
mov
fnstsw
stos
rcl
ret
jl
sbb
call
xor
mov
clc
movsl
jle
or
fldcw
fnsave
lods
add
shrb
loop
mov
push
and
jge
mov
loop
call
enter
ret
mov
adc
sti
out
mov
or
je
mov
xchg
mov
fimuls
and
rorl
push
ja
jge
and
fsubs
mov
cli
and
and
xchg
lods
mov
lret
inc
push
insl
cmp
adc
sahf
js
cmp
mov
xchg
int
mov
sar
test
cmpb
pop
fdivrs
xchg
xchg
fidivrl
fsub
rcl
sti
pushf
mov
aad
fcmove
mov
mov
xchg
or
mov
jge
mov
rorl
leave
ret
js
filds
sti
push
or
mov
xchg
cmp
fidivrl
jg
pop
es
aam
int
loop
mov
leave
pop
jp
lods
mov
jle
fchs
mov
inc
cld
std
fwait
aam
mov
pop
cmpsl
xchg
push
adc
into
sub
sbb
loope
rcl
pop
aad
outsb
pop
jae
pop
xlat
or
int
mov
lahf
iret
mov
enter
enter
test
mov
ret
lahf
fcom
xchg
dec
into
xchg
pop
stos
mov
test
mov
mov
loop
into
lods
mov
enter
bound
sbb
cmp
shrb
lahf
mov
fdivrl
xor
dec
aaa
xchg
sub
scas
pop
pusha
mov
mov
mov
int
or
jle
dec
lods
xchg
sbb
mov
and
es
dec
imul
push
rcl
mov
scas
aas
cmp
loope
xchg
pop
jle
mov
mov
test
lds
cli
mov
adc
js
stos
repnz
test
mov
outsb
mov
je
mov
fcmovu
mov
test
pusha
inc
adc
ficoml
fcmovb
cmp
xchg
jns
repz
lret
and
xor
xor
mov
mov
fisubrl
lods
shlb
aad
stc
stos
xchg
mov
gs
mov
cwtl
movsb
idivb
subl
stos
jmp
jl
push
int
aad
or
les
scas
loope
mov
rorb
sub
leave
aaa
inc
mov
loopne
and
adc
jp
int3
mov
into
dec
xor
divl
xchg
rcr
mov
je
xchg
mov
subl
mov
and
aaa
mov
or
cmp
outsb
jnp
xchg
xchg
mov
lret
cmpb
pop
shr
sub
aad
pop
cmp
out
in
es
jl
loopne
mov
loop
shrl
xchg
aad
cmpsl
pop
bnd
into
leave
scas
je
arpl
jle
negl
in
cwtl
mov
fstpt
mov
mov
pop
mov
jp
ja
xchg
scas
jge
scas
loopne
ljmp
clc
es
mov
test
loop
sbb
je
testb
adc
jae
bound
pop
xor
stos
sbb
js
shll
mov
jge
jae
mov
ss
fiaddl
movsl
jl
rorl
rolb
loop
insb
test
pop
jbe
mov
mov
stos
shlb
inc
mov
loop
int3
rcrl
rcr
xor
mov
xchg
lods
loop
pushl
sub
notb
das
mov
xlat
mov
in
dec
jle
mov
cmp
test
insb
fsub
imul
mov
or
sarl
jns
push
adc
imul
dec
jns
jle
ss
jge
mov
cmp
lods
adc
mov
aaa
sub
repnz
loope
sarb
out
std
xor
mov
aaa
dec
neg
pusha
mov
jmp
dec
retw
mov
jne
fsubrl
pushf
hlt
xchg
jl
xchg
jecxz
cli
or
fisubrs
insb
pusha
test
jns
mov
sbb
add
mov
cli
test
jl
lahf
rorb
mov
jecxz
sarl
mov
cmpsl
mov
mov
jecxz
orl
inc
xor
loope
shlb
or
jecxz
imul
jnp
es
or
cwtl
mov
and
test
mov
jbe
rcrl
mov
pop
and
mov
loope
lock
inc
xchg
fldcw
cwtl
sbb
shlb
mov
into
sbb
incl
fidivrl
mov
xor
xchg
mov
jg
sub
and
inc
mov
loope
cli
test
xorl
jbe
jb
ljmp
jns
mov
sub
je
lods
mov
rorl
stos
movnti
xor
jnp
loopne
mov
jmp
in
mov
call
notl
jb
add
mov
test
adc
mov
ret
jne
shll
pushf
fstpt
inc
sub
mov
mov
mov
mov
mov
scas
push
fisubrs
into
roll
sub
jmp
mov
shll
ror
jns
enter
pop
jl
mov
fwait
mov
mov
fsubs
add
jle
ja
fistpl
rorb
pop
out
mov
mov
mov
mov
inc
out
sbb
push
dec
or
cwtl
lret
mov
push
sub
movsl
popa
insl
xchg
leave
xchg
lea
clc
imul
ret
cli
xchg
scas
out
push
jns
xchg
out
arpl
mov
inc
or
rcr
and
mov
xchg
mov
sub
imul
int
adcl
pop
ret
dec
mov
iret
lods
dec
incb
cmp
push
mov
cmp
fsubrl
xor
xlat
dec
mov
mov
fadds
rcll
jo
push
lret
lods
std
fwait
xor
push
mov
shll
lret
outsb
loope
fldenv
addl
mov
int
adc
mov
ret
dec
pushf
enter
loopne
xchg
mov
jg
test
arpl
insb
or
mov
adc
in
push
aam
push
pop
mov
enter
out
stos
mov
mov
ret
ja
or
fidivl
out
cwtl
cmc
cli
push
jnp
lods
adc
pop
xchg
aad
or
dec
out
ret
push
mov
jge
add
mov
mov
je
mov
leave
test
lea
loope
out
ljmp
out
clc
stos
jnp
sbb
shrl
adc
dec
enter
or
sarl
lea
leave
loopne
testb
jnp
add
fucom
sarb
xchg
cmpl
mov
lods
xchg
push
mov
cwtl
outsb
subl
mov
enter
div
mov
add
mov
push
fs
imul
sub
dec
pop
adc
ret
mov
call
jp
mov
ret
imul
iret
xor
mulb
mov
ret
loopne
jp
int
repnz
into
mov
cli
imull
sahf
dec
cmpsl
jae
sub
mov
inc
and
jo
inc
mov
aad
sub
fmul
data16
aam
sahf
stos
cmpsb
enter
mov
aad
jp
test
aam
repnz
mov
loope
jle
ret
dec
fcom
mov
jge
mov
jle
fidivs
loope
fldt
loopne
iret
movsl
clc
jecxz
cwtl
mov
xorb
jg
push
sar
fwait
ja
mov
mov
pop
scas
mov
fdivl
cwtl
test
cs
mov
inc
add
leave
mov
roll
add
cmp
fldpi
pop
subl
movsl
cli
leave
rsqrtps
pop
mov
fstp
xor
stos
or
rcl
inc
jnp
dec
mov
cwtl
jge
pop
xchg
mov
cmp
xor
aam
mov
mov
pop
mov
rcr
xor
jne
jbe
iret
cmp
mov
mov
ja
dec
fidivl
or
cltd
xchg
insb
mov
jne
sub
mov
iret
mov
mov
shll
cmp
sbb
gs
es
mov
jnp
mov
sbb
ja
pop
ret
push
dec
adcb
cwtl
mov
stos
fbstp
shlb
fcmovbe
inc
test
push
xor
jmp
stos
inc
add
shrl
aas
jp
mov
ret
cli
js
xchg
roll
stos
cs
fstpt
test
ret
mov
or
int3
cmpl
and
sbb
addl
dec
ja
mov
fucomi
pushf
ja
cmp
jns
and
loopne
stc
pop
sub
inc
cwtl
jnp
push
jne,pn
mov
lds
stc
jb
or
flds
pop
mov
xchg
fstp
jl
and
into
popa
mov
jle
jecxz
pushf
fcmovb
jns
aad
and
cli
hlt
movsb
fnstsw
mov
loopne
xor
popa
jp
stos
sbb
mov
mov
dec
mov
jl
scas
fnstcw
loopne
or
mov
and
dec
fistpll
loope
jg
cmp
imul
fdivrs
jmp
shrb
mov
ret
loop
pop
jge
pop
fwait
mov
xor
adc
hlt
inc
push
loop
adc
push
fdivrl
sbb
fcmove
loopne
add
fiadds
imul
jb
sbb
ret
int3
jns
push
movsb
cmp
movsb
enter
fsubr
lahf
xor
pop
jno
lods
fnstsw
rcl
lcall
mov
int3
add
xchg
and
fdivrl
test
cwtl
xor
adc
out
daa
jl
in
iret
fnstenv
mov
scas
jge
mov
mov
xor
or
mov
leave
aas
dec
enter
mov
sbb
int
jae
out
mov
mov
mov
fs
mulb
sbbl
mov
mov
je
mov
iret
mov
lods
mov
inc
lea
dec
dec
stos
xlat
fcmovne
aaa
inc
lret
xlat
and
cwtl
enter
cmp
and
ss
hlt
lea
fdivrl
adcb
dec
sbb
xchg
ret
fidivrs
enter
fst
jmp
and
lret
pop
add
mov
loopne
or
fdivrl
mov
and
shrb
jg
sbb
les
jp
add
lea
jno
adc
dec
or
fbstp
cmp
out
test
shrb
dec
loop
adc
lods
jge
fcoms
scas
or
mov
mov
mov
xor
mov
insb
pop
rol
lea
jb
rcr
stc
ficompl
enter
dec
pop
shr
shrl
jns
into
push
inc
test
jmp
enter
fcoml
addw
xlat
jns
add
xchg
pop
mov
lods
into
xchg
fdivrl
in
xor
jge
test
cwtl
mov
ds
iret
pop
xor
in
int
dec
fbstp
mov
xchg
mov
leave
sbb
ret
and
ret
aad
sub
push
mov
cmovno
scas
cmp
sti
jg
and
loop
cli
lock
iret
pop
xchg
jle
mov
test
lret
scas
sbb
iret
jnp
cmpb
push
or
ja
xchg
adc
int
loopne
scas
lds
scas
jge
stos
pop
sarl
mov
shll
fsubs
mov
das
fcomi
dec
dec
fldt
test
mov
mov
jecxz
xchg
pop
je
test
push
es
jge
lret
shll
subb
test
mov
pop
jns
or
adc
sub
mov
jge
sarb
rcr
xor
fldt
mov
out
cmpsb
mov
mov
movsl
cmpsb
repz
mov
mov
jb
cmp
lret
fcomp
mov
jl
mov
or
cmpl
jge
fdivrp
xchg
loop
ret
shl
movsl
jge
lods
jecxz
push
xorb
mov
rolb
adc
shlb
cmpb
mov
jecxz
pop
mov
and
cmp
sbb
and
jmp
je
fs
mov
ljmp
jno
sbb
test
pushf
loop
inc
cltd
ljmp
xor
or
mov
leave
shll
insb
sbb
mov
gs
cld
mov
lods
aad
xchg
into
loopne
push
adc
jecxz
orb
loopne
ljmp
jp
or
mov
fisubrs
or
fcom
aas
inc
sub
cwtl
negl
sub
lahf
fcomps
mov
jg
xor
enter
rorl
xor
loope
xor
xchg
sarb
xorps
lods
cmp
cli
imul
je
fiaddl
jge
mov
cmp
mov
xchg
out
js
dec
inc
mov
jg
subl
xchg
test
int3
ds
cld
pushf
mov
mov
js
xchg
test
sarb
pop
fiaddl
addl
lods
mov
jl
sbb
orb
int3
cmpl
shlb
inc
fcmovnb
jg
lods
mov
leave
stc
dec
jp
enter
loopne
into
xlat
fcmovu
pop
addb
mov
lods
stos
sub
scas
xlat
adc
inc
add
inc
fadds
mov
rorl
subl
mov
out
ds
push
aam
rcll
ret
jge
test
aam
into
add
das
fsubs
dec
push
push
dec
add
add
rcrb
xor
cmpsb
adcb
push
dec
mov
shll
sbb
rcr
push
cmpsl
mov
and
fdivl
sub
sub
out
jb
aam
inc
popf
stos
cwtl
and
test
mov
into
mov
mov
jbe
adc
addr16
mov
jb
ja
add
inc
cli
mov
fidivrl
or
sub
cmp
xchg
fidivrl
inc
xor
nop
jl
xchg
jp
mov
xlat
faddp
rcl
mov
jecxz
subb
es
xchg
mov
xchg
sahf
mov
xchg
pmulhuw
fcoml
xchg
loope
imul
lods
nop
out
rcll
jo
aad
inc
cmp
stos
or
xchg
mov
lods
in
push
js
sbb
dec
mov
cs
ss
adc
sub
ljmp
xchg
or
cmpsb
rcl
mov
rcrb
jnp
sbb
mov
rcl
cmp
je
aam
xchg
mov
mov
sarl
jnp
filds
pop
lods
jp
jg
mov
test
xlat
inc
cmpsb
leave
xor
leave
pmullw
bound
mov
enter
cmp
jbe
insb
jo
adc
jecxz
jge
sub
mov
movsb
mov
jg
xchg
mov
sub
sbb
jl
mov
and
ret
cmp
ret
and
lods
push
aad
mov
mov
sub
jnp
lahf
ret
sbb
mov
sbbl
mov
ljmp
dec
fbld
lahf
leave
lods
xchg
adc
mov
fcmove
popa
test
mov
adc
fstl
cli
cmp
mov
dec
pop
dec
mov
mov
mov
mov
mov
ds
dec
gs
cmp
loopne
add
jp
dec
aam
out
loop
sti
dec
aad
jl
stc
cld
jp
mov
jecxz
clc
xchg
pop
inc
sahf
adc
adc
enter
int3
or
loop
jnp
xor
xorb
mov
mov
push
ljmp
mov
push
loope
inc
lods
mov
push
mov
sbb
jge
pop
xchg
je
lea
xor
push
fldcw
ret
repnz
int3
xchg
mov
push
sub
je
inc
test
mov
mov
pop
mov
fs
mov
test
mov
std
loop
sub
mov
ror
rcr
int
sarb
insb
int3
subl
lods
aad
dec
mov
shll
jmp
repnz
adc
fadd
ja
jp
scas
and
loope
rcll
xchg
loopne
test
sbb
cmp
shrl
jne
pushf
xchg
inc
call
rcl
or
shrl
test
subl
or
dec
pop
inc
mov
aam
arpl
orl
loop
out
add
jbe
sub
xlat
xchg
incb
jle
cli
jg
fistps
and
stc
xchg
mov
int3
stos
shl
jne
xor
loope
addl
imul
jl
ret
pop
mov
mov
and
dec
outsl
hlt
fdivs
xchg
dec
iret
mov
adcb
push
fmuls
mov
lds
mov
nop
ret
and
cwtl
jg
mov
mov
mov
fidivrs
xorb
mov
mov
dec
cmpl
lahf
ret
iret
mov
or
lea
cmp
push
mov
fidivrl
fisubrs
ret
xchg
jbe
loop
into
cwtl
dec
mov
shlb
mov
jb
xchg
mov
aam
jle
hlt
enter
push
cli
dec
mov
cmovb
jg
jns
scas
fnsave
sbb
mov
js
outsb
mov
jp
cmp
mov
js
mov
mov
or
faddl
rcl
aas
ret
inc
imul
dec
les
push
in
inc
pop
outsb
mov
lods
mov
or
mov
iret
push
adc
mov
ret
rol
jge
sar
das
inc
inc
mov
dec
sarb
dec
pusha
dec
mov
mov
loop
xchg
rol
jge
or
leave
jns
cli
mov
loopne
jecxz
mov
cmp
pop
cmp
cwtl
call
scas
and
ror
in
rcr
sub
scas
pop
js
stos
push
lods
ficoml
cwtl
mov
insl
sahf
lods
js
rcr
mov
rcl
out
xor
jge
jns
pop
xlat
ja
add
leave
cmp
fisubl
fidivl
jp
mov
cmp
mov
or
shrb
jg
jp
hlt
dec
movsl
scas
jl
xchg
and
testl
pushf
hlt
pop
sahf
daa
bnd
pop
inc
addb
push
jl
fsubrl
mov
mov
test
xchg
pushf
mov
xchg
ret
roll
sahf
loope
outsb
jle
lods
jecxz
ret
ja
jg
in
bound
mov
test
gs
sahf
jle
shlb
stos
cli
jbe
out
and
outsb
popa
jbe
jns
jle
imul
pop
data16
or
pushf
jnp
mov
fwait
mov
aad
into
inc
ja
add
scas
mov
or
lret
jge
sub
mov
push
scas
cmpsl
rolb
xor
adc
out
xchg
ret
lods
in
push
pushf
es
shlb
rcl
insb
xorb
aam
mov
cmpsb
loop
inc
or
xor
jno
xchg
scas
sarl
sbb
push
movsb
jp
xor
fnstcw
in
loopne
mov
dec
adc
mov
mov
test
inc
jb
call
outsb
dec
xchg
fidivrl
add
pushf
lcall
mov
test
int
jae
les
test
pop
mov
shrl
aad
cmc
cld
in
stos
nop
lods
je
test
sbb
out
cli
stos
mov
cmpb
aam
jb
sbb
cmp
add
imul
mov
add
mov
mov
fnstenv
jb
fsubrs
dec
mov
and
fidivs
mov
inc
aaa
add
scas
jecxz
mov
mov
scas
inc
popa
mov
mov
mov
mov
enter
fidivs
mov
mov
scas
into
ret
mov
cwtl
mov
pop
int
mov
adc
jnp
ret
js
mov
daa
std
rolb
dec
ret
or
call
loope
jb
leave
lods
fcomip
lret
jbe
insb
insb
cltd
not
xchg
jecxz
or
fcomp
test
fisubrs
test
aas
es
sub
iret
in
jl
push
fidivl
test
mov
cli
inc
sbb
cltd
dec
jge
xor
ror
xchg
inc
push
js
andl
mov
adc
or
mov
loopne
cli
sbb
test
rolb
insl
fidivrl
scas
ret
cmovb
leave
xchg
shll
out
movsl
addl
mov
fisttpll
stos
jp
mov
push
call
cwtl
lods
mov
rorl
das
pop
dec
ds
test
into
imul
in
insl
test
sub
xor
pop
aad
sub
fiadds
adc
icebp
repz
mov
loop
iret
shl
scas
jp
jge
ror
adc
xchg
shrb
rorl
pop
ja
mov
xchg
shrl
pushf
fisttpl
mov
jns
loopne
lahf
scas
stc
xchg
ja
sahf
notl
mov
push
lods
dec
push
addl
movsl
mov
sbb
pop
into
cs
mov
mov
jp
inc
or
mov
enter
ja
pop
mov
pop
or
inc
jle
int
xor
mov
test
out
hlt
sbb
adcb
js
in
mov
test
scas
lods
or
sahf
mov
jnp
test
sbb
jecxz
adc
int
imul
int
mov
mov
jb
jecxz
stos
mov
fdivl
ret
fcmove
out
cli
repz
popa
rcr
xor
mov
mov
loop
neg
fidivrs
int
mov
pop
xchg
es
lods
fmul
sti
or
int
scas
dec
add
mov
push
imul
jns
aad
sbb
lods
rol
sbb
mov
pop
sub
imul
loop
mov
loopne
mov
lret
rol
xchg
mov
add
loope
aad
add
cmp
jl
out
js
push
xor
mov
shll
int3
sbb
xor
mov
les
orb
int3
cmpsb
mov
mov
loope
movsb
sarb
fmuls
iret
jecxz
gs
stos
mov
jb
sbb
subb
sbb
sub
testl
flds
adc
insl
sbb
call
inc
sub
fidivl
aaa
sahf
adc
insb
fcomps
mov
adc
jg
pop
xlat
into
sbb
mov
xchg
shll
xlat
call
lahf
leave
movsl
inc
inc
push
shll
xlat
sbb
cmp
xlat
out
aas
xorb
adc
mov
fidivrl
fisttps
jb
shr
or
clc
stc
lret
in
aad
mov
sarb
push
test
leave
ror
sub
loopne
mov
test
xlat
xor
ror
mov
fistpll
out
out
mov
mov
js
ret
mov
fildll
jle
scas
add
js
mov
outsb
ret
shlb
and
shrb
cmp
out
cli
enter
shlb
test
shll
push
push
jl
test
lea
mov
dec
jle
mov
push
push
iret
mov
push
test
mov
js
jns
mov
fldl
int3
sub
loop
loope
imulb
mov
pop
push
inc
roll
ja
jbe
stc
xchg
jl
adc
xchg
cmpl
mov
mov
cmp
jb
dec
fcmovu
rclb
test
xchg
push
fidivrs
insb
jecxz
fwait
test
fisubrl
lahf
loop
xchg
ret
pop
mov
mov
icebp
rcl
lret
rolb
or
sub
push
mov
dec
mov
in
xchg
cmpb
test
xchg
push
xorl
into
lods
dec
add
roll
ds
cwtl
addb
mov
dec
inc
loop
jmp
pop
xchg
sub
and
lcall
jge
fistpll
in
rorl
mov
xor
ss
jecxz
fwait
cwtl
fisttps
test
ficoml
shrb
cwtl
int
mov
mov
jns
mov
adc
dec
jb
inc
cmp
mov
mov
xchg
les
insb
pushf
push
scas
sub
inc
mov
jl
mov
jno
add
cmp
adcl
mov
ret
push
mov
jo
ljmp
jnp
or
sbb
sarl
dec
xchg
pop
addr16
insb
imul
mov
icebp
sub
fnsave
mov
sarb
mov
mov
sub
repnz
mov
inc
add
sbb
outsb
ret
push
pusha
test
fdivs
repnz
test
aas
loopne
push
lods
jnp
dec
jne
test
mov
pop
mov
mov
mov
int3
jnp
mov
mov
add
shll
mov
mov
xchg
xchg
leave
push
and
inc
add
movsl
or
stos
pop
dec
mov
sbb
mov
test
int3
mov
loop
fsin
xor
jg
test
test
scas
stos
cli
jl
xlat
aas
xor
les
or
or
fldcw
ret
fcompl
lds
jg
ret
rolb
xchg
lock
scas
mov
mov
mov
enter
dec
pop
andl
mov
pop
xchg
test
popl
inc
jno
ret
jp
xlat
xor
mov
sub
fs
mov
sbb
sbb
push
test
mov
lods
jp
jl
fstpt
add
outsl
insb
mov
adc
subl
jp
loop
add
loope
lahf
test
pushf
dec
push
out
vfrczsd
ret
int
fldl
iret
loop
mov
fs
jp
pop
lret
mov
loope
mov
popf
dec
testb
xchg
jns
mov
orl
imul
mov
mov
mov
fidivl
dec
scas
inc
pop
fdivrs
sarb
scas
je
jle
int
mov
enter
fstpt
rcl
sarb
aam
shll
mov
or
aad
fildll
mov
jns
mov
push
mov
cld
mov
jns
fiaddl
sub
dec
jmp
jns
in
outsb
cmp
movsb
mov
scas
pop
das
pop
and
sbb
jnp
sub
aam
iret
fnstsw
sub
repz
test
fnstcw
add
mov
mov
mov
fcmovnbe
mov
rcr
mov
int
mov
das
sub
stos
add
fstpt
shlb
fisttpll
and
js
fnstcw
ficomps
xor
cli
inc
lods
sahf
ret
daa
sarb
test
dec
lods
fnstcw
ficoms
add
shl
es
ss
insl
jp
dec
pop
mov
add
int3
dec
test
movsl
mov
jle
inc
rcrb
and
push
aad
int3
mov
mov
pop
movsb
mov
or
ret
cli
jge
fcompl
lods
jmp
xchg
aad
cli
mov
cmpl
pop
int
cmp
call
dec
push
shrl
mov
or
int
aam
rolb
xor
push
pop
jns
in
mov
mov
fbld
cli
fwait
fwait
jl
lods
iret
adc
enter
sarb
into
or
fdivrs
aam
mov
push
mov
sub
iret
inc
pop
mov
sarl
fsubrp
out
test
push
fwait
loop
enter
sub
jecxz
mov
dec
repz
scas
mov
clc
sarl
fcomps
subb
imul
ja
mov
jnp
lods
cwtl
jp
test
iret
mov
es
add
imul
mov
fisttps
mov
cmp
inc
int
jns
mov
xchg
mov
inc
rorb
rcr
dec
loope
jg
mov
lods
or
mov
ret
xor
sbb
mov
mov
loopne
pop
xor
sahf
cmpl
movsl
add
sbb
pushf
fldl
fstpt
test
xor
dec
addl
shlb
jge
loop
pushf
cltd
xchg
mov
mov
shrb
les
push
aad
rorl
mov
jnp
or
jb
cli
inc
jecxz
jl
aam
loop
xchg
jnp
je
dec
scas
subl
jp
ja
aas
fstpt
loop
and
mov
add
js
mov
mov
icebp
test
jnp
inc
xorl
sarl
mov
test
inc
xor
aam
sarl
mov
mov
lods
int
mov
sub
dec
int3
test
push
sbb
fcomp
push
rcl
add
sbb
loope
sbb
data16
or
js
mov
shll
ret
aad
jl
ja
scas
int
fucom
and
repnz
or
mov
imulb
rcr
xchg
or
lods
pinsrw
pop
adc
loopne
les
jle
jge
mov
mov
sbb
scas
fsubr
or
cwtl
lock
mov
mov
xchg
mov
loop
mov
aam
mov
test
xchg
sub
xchg
popa
js
jp
mov
mov
in
dec
repz
sub
orb
test
and
ret
jns
mov
and
lcall
push
ljmp
xchg
loopne
js
sub
mov
rcr
cmp
dec
je
enter
sbb
jns
jmp
push
mov
mov
xlat
mov
or
ja
jle
sub
dec
cmpl
mov
iret
jnp
jne
je
ret
movsl
enter
mov
jmp
aam
xorb
rcl
adc
fsqrt
push
in
add
insl
int
inc
test
dec
cli
dec
push
dec
mov
jae
sar
enter
push
daa
aad
mov
cmp
clc
out
sarb
mov
jnp
mov
std
xchg
xlat
mov
push
xchg
jge
scas
mov
ffreep
mov
sbb
cmp
leave
mov
jle
and
jae
lods
fidivl
loop
ret
jle
loop
leave
pushf
cld
cmp
stos
adc
inc
push
loop
into
xchg
xlat
fsubrs
mov
and
loop
sub
leave
adcl
insb
loopne
xchg
mov
mov
sbb
into
inc
outsb
rorl
sarb
outsb
fld1
popa
inc
sbb
fidivrs
sti
mov
mov
imul
les
int
xchg
lods
sub
mov
int3
orl
stos
mov
lret
mov
iret
rorl
int3
push
fstpt
jmp
fadd
sarb
pop
ret
test
leave
into
dec
dec
fsts
mov
or
mov
mov
mov
scas
and
mov
mov
sub
insb
fistps
cs
xchg
mov
loope
mov
movsl
mov
negb
push
dec
mov
int
or
iret
loope
push
mov
mov
pop
dec
mov
cli
jg
aad
mov
stos
ret
ret
jmp
fdivrl
rcl
iret
and
sarl
xchg
and
inc
jns
lret
rcl
int
xchg
or
ret
fwait
mov
sub
or
sarl
mov
adc
or
orl
jecxz
mov
mov
js
fldenv
mov
iret
into
int
fimull
test
scas
sbb
pop
sbb
pop
lret
xlat
outsb
iret
mov
adc
jbe,pt
ja
xorl
and
stos
sbb
rclb
lods
cli
xchg
adc
sbb
movsb
jp
scas
and
mov
cmpl
shll
test
and
in
testl
mov
lret
mov
insb
aad
orl
es
out
lret
hlt
mov
imul
sarb
mov
xlat
mov
sbb
aam
fucomp
or
mov
lret
mov
xchg
pop
andl
ret
fnstenv
xor
jnp
fwait
jg
cmp
or
scas
test
sbb
je
rcrl
movsl
shrb
cmp
sub
mov
aam
jp
leave
insb
mov
scas
xchg
fildll
sbb
cmc
dec
lahf
mov
testl
int
js
fdivrl
inc
loop
es
mov
sti
xchg
cmp
or
hlt
inc
push
sar
movsl
mov
test
rol
shl
aad
mov
ss
inc
shlb
lea
xor
outsb
add
js
pop
lea
fnstsw
jl,pt
and
movsb
jg
aam
ljmp
insl
push
sbb
jge
xchg
hlt
mov
fcmovnbe
movsb
lods
jae
mov
lret
lahf
enter
or
mov
jp
fnstenv
sbb
pop
fwait
imul
repz
adc
mov
sbb
jns
mov
rolb
ret
mov
jecxz
or
mov
outsb
leave
orb
mov
stc
xchg
fstpt
test
cmp
xchg
pop
or
scas
enter
mov
mov
mov
loop
adc
lods
stos
leave
mov
fstps
jne
adc
movsb
iret
mov
xchg
xorl
or
adc
ret
mov
fsubs
xorb
mov
cmp
sarl
aam
test
xchg
mov
mov
pushf
call
cvtps2pi
test
or
mov
mov
rorl
sbb
cmpb
jb
adc
flds
cli
cmpxchg
lods
sbb
mov
insl
jns
mov
fildll
adc
loopne
int3
fildl
shlb
imul
cmpsb
fisttpl
test
fmuls
mov
mov
cld
mov
sarl
dec
andl
cli
addr16
mov
int3
test
shlb
jnp
loop
fstl
pushf
add
rorb
int
jnp
xchg
ret
into
mov
fmul
dec
repz
fidivl
mov
mov
xchg
mov
pop
mov
mov
test
leave
gs
into
shll
test
sbb
negl
mov
stos
movq
int3
mov
aam
pushf
fnsave
push
xor
inc
adc
out
fldcw
sbb
dec
inc
jns
push
push
jbe
int3
lret
and
mov
cwtl
jp
xor
push
ja
jmp
jecxz
das
ret
mov
je
lds
mov
iret
scas
cld
xor
cmp
pop
iret
pusha
add
and
sbb
orl
aam
xor
mov
mov
cmp
stos
ret
pop
xchg
jp
add
inc
fdivrs
mov
sahf
adcb
fisttpll
loop
and
xor
loope
aam
cmp
movsb
push
push
jecxz
gs
jae
out
loopne
push
cmpl
scas
test
lods
loop
shrb
dec
aam
shll
test
sbb
lret
cmp
mov
mov
jl
xchg
mov
adc
out
out
insb
fidivrs
mov
mov
mov
mov
test
sti
xchg
xor
lods
push
xchg
dec
cmpsb
push
mov
stos
cs
and
push
sub
test
mov
out
cmp
jecxz
daa
fsubrl
fisttpll
jle
xlat
xchg
fidivrl
mov
push
jg
repnz
repz
fimuls
outsb
loope
xchg
mov
xchg
pop
mov
jae
cmova
fdivrs
jo
shll
mov
leave
mov
aam
inc
sahf
movsl
jge
dec
mov
cmp
sub
ret
enter
mov
xchg
mov
push
int
and
insb
mov
ljmp
scas
xlat
fwait
dec
jl
pop
jl
test
lcall
xlat
fmull
fimuls
stos
fcmovnbe
loop
neg
mov
mov
test
ficompl
or
jp
pop
rcl
cmpsb
xchg
sub
nop
shl
inc
cwtl
mov
aad
enter
js
dec
aas
and
imul
fsubl
sbb
rcl
cwtl
xlat
ljmp
shll
xchg
aas
cwtl
xchg
repnz
pop
rcrb
test
leave
mov
jecxz
int
aam
fcmovbe
add
jbe
sar
adc
jns
pop
mov
xchg
adc
les
pushw
fimull
fstpl
loopne
mov
jp
fisttpll
xor
mov
nop
fcmovu
test
div
lret
cli
mov
scas
sbb
sub
shlb
and
mov
xchg
leave
adc
push
jnp
add
mov
ret
loop
xchg
fnstcw
push
sub
es
sbb
mov
repnz
sub
mov
orb
jle
iret
or
ret
fdivr
ficoms
scas
gs
das
out
dec
or
inc
ret
ret
adc
in
loop
adc
loope
inc
or
lods
push
mov
fisubl
int3
mov
fxch
sub
jl
ret
mov
mov
or
js
mov
mov
movsb
into
outsb
sbb
fcmovbe
xor
xchg
rcr
aam
pop
ljmp
jl
mov
mov
test
cmp
js
popl
shrb
dec
sti
jge
add
mov
imul
fidivrs
aam
sbb
scas
xchg
stc
loop
or
mov
mov
lret
cmp
jmp
in
divb
mov
lahf
loopne
mov
aaa
aad
leave
das
pop
and
in
xor
ret
inc
mov
cmp
divb
jl
jg
cs
jecxz
in
jmp
lods
rcl
cmp
mov
or
cmp
push
and
jp
stos
push
into
cmpl
loop
cmp
sbb
test
or
loopne
repnz
fdivrs
stos
and
lahf
aam
adc
mov
mov
mov
jge
lods
insl
mov
mov
call
xor
add
and
aam
cmpb
bound
fnstcw
js
fcmovnu
shrb
mov
jl
mov
xor
scas
jns
fidivs
aaa
aam
pushf
int
add
pop
fcmovnb
fisttpll
test
mov
xchg
lods
jle
push
jns
cwtl
cmp
sarb
lods
sub
xchg
subl
je
fisubs
mulb
mov
fldt
mov
pusha
fwait
xorb
inc
loope
js
in
dec
cmp
push
int3
loopne
pop
cwtl
popa
mov
iret
aad
push
mov
fistpll
pop
data16
loope
ret
stos
mov
fdivr
leave
je
mov
xchg
in
pop
aam
pushf
xchg
sub
lea
adc
and
sub
ss
or
or
jnp
fisttpll
ljmp
lea
int
cmova
mov
mov
cmp
mov
int
out
shll
mov
cmpl
into
test
mov
leave
mov
xchg
dec
sub
dec
sub
xchg
call
movsl
shrb
int3
xchg
pop
loop
shrb
ret
mov
jbe
mov
movsb
mov
test
fildll
dec
mov
mov
jp
rcrl
xchg
test
and
mov
mov
js
mov
lea
jg
cs
ljmp
loop
stos
les
mov
shll
sbb
shlb
xchg
xorl
adc
mov
and
ds
int3
outsb
sahf
jge
and
nop
fndisi(8087
sbb
aas
inc
faddp
jmp
inc
aaa
lahf
aaa
aam
into
stos
xchg
loop
or
mov
scas
outsb
mov
or
out
std
pop
pop
inc
fsubrl
and
adc
mov
rcll
ds
mov
bnd
pop
cli
iret
fnstenv
xlat
mov
mov
jns
mov
or
and
scas
ret
test
mov
fldl
jecxz
arpl
sbb
push
mov
jns
push
or
pop
xor
rcl
jge
fldlg2
stos
ret
fsub
rcrl
mov
xchg
push
mov
xchg
jo
fsubrs
jge
out
test
mov
aaa
and
roll
das
xchg
jg
xor
or
cmpsl
mov
fbstp
mov
xorb
scas
clc
lods
mov
je
loope
adc
rcl
outsl
fcomp
cmp
jl
inc
stos
int
test
mov
decb
int3
gs
les
loop
or
into
mov
xchg
shl
imul
rclb
lret
xor
lahf
mov
cs
ror
ficomps
es
mov
loop
jge
or
js
adc
and
xchg
outsb
and
jns
or
shrb
bound
lcall
ja
jbe
mov
mov
leave
sarb
ds
adcb
movsl
inc
dec
shlb
xor
fmuls
mov
es
in
addb
fimuls
cltd
aad
dec
inc
aam
test
rcrl
in
mov
repz
mov
sarl
pop
cli
xorb
add
cmp
js
flds
mov
ljmp
sti
mov
xor
fwait
ror
arpl
rcl
test
sbbb
mov
lods
loop
mov
enter
xchg
loopne
je
in
adc
add
repnz
xchg
fnstsw
fst
mov
ss
jp
or
add
bound
mov
mov
loope
xchg
loopne
push
aas
mov
fstpt
loop
test
insb
and
adc
jl
sarb
mov
lods
ja
mov
aaa
sub
mov
das
push
fnstsw
test
or
loope
sti
js
push
test
les
jl
shl
ja
adc
mov
and
pop
fnstenv
add
sbb
fadd
push
xorl
fcomps
stc
mov
iret
mov
xor
inc
fidivl
fisttpll
shlb
into
cli
push
cmovbe
jbe
mov
jl
leave
mov
push
rcr
pop
mov
cmp
mov
mov
lahf
mov
fadds
in
sti
lahf
mov
sahf
xchg
mov
jecxz
scas
and
xor
out
and
xchg
fcmovnb
ja
mov
fwait
adc
mov
ljmp
shll
test
and
es
add
jg
sbbl
or
pop
jge
leave
or
xchg
inc
pop
test
std
mov
mov
inc
outsb
inc
insb
pop
insb
inc
jnp
mov
aaa
sbb
fistl
xlat
flds
jns
pop
je
add
les
lret
aad
aam
or
dec
clc
and
lret
ja
stos
scas
push
jle
mov
and
les
cwtl
sarl
aam
push
ret
push
add
inc
jnp
rcrl
and
fxch
sbb
xor
shlb
mov
imulb
push
stos
push
mov
lds
jp
scas
ret
js
enter
cmp
jl
xchg
mov
mov
fsub
loope
jp
ffreep
ret
mov
adc
inc
shl
aam
in
pop
test
xor
sbb
jns
mov
jge
mov
push
sub
insb
mov
jns
imul
test
push
lods
xchg
leave
jge
ret
loopne
dec
jnp
sub
fsubl
popf
inc
imul
inc
xchg
dec
fcmovne
mov
jg
or
and
xchg
enter
sub
lahf
mov
fildl
loop
cmp
enter
lea
or
pushf
fcomi
sar
mov
cmp
cmp
add
mov
mov
dec
or
and
nop
and
divl
xchg
jle
scas
mov
je
or
jmp
fidivrs
xor
out
aaa
movsb
cltd
xor
rcll
cmp
mov
or
ror
jle
aam
mov
aad
fcomp
loopne
test
jmp
sarl
scas
les
mov
dec
push
add
cmpsb
fisubl
outsb
js
repz
out
mov
repnz
mov
fmuls
rcr
dec
loope
push
sbb
push
ret
pushf
jbe
test
and
xchg
shrl
or
ret
push
sub
sbb
mov
mov
nop
pop
mov
aam
iret
les
cmpsb
pop
push
aad
inc
mov
mov
push
xor
xchg
jnp
fimull
mov
sub
mov
jle
sarb
or
jnp
inc
jg
pop
fbstp
mov
into
mov
mov
dec
into
ror
jl
scas
push
shl
mov
mov
pop
shl
jae
dec
jg
add
enter
int
inc
xchg
inc
shrl
mov
mov
xor
pop
push
adc
sub
xchg
vroundps
push
mov
rorl
js
fnstenv
fcmovnbe
cwtl
ror
andl
sahf
aaa
jae
imulb
jbe
xchg
jb
dec
push
fdivl
dec
sahf
lods
pop
loop
mov
cmpsb
ret
and
push
xor
inc
fdivl
or
mov
iret
jg
mov
loope
jecxz
inc
rcll
fwait
addr16
jmp
loop
stos
xchg
xchg
xchg
dec
or
fidivl
add
push
and
xor
rorb
fidivrs
pop
pushf
adc
in
iret
jns
or
shrb
push
mov
iret
inc
test
imul
mov
sub
ret
imul
fnstenv
xlat
jg
add
fistl
int
lods
adc
fisttps
mov
mov
inc
or
jns
je
pop
sarb
lods
dec
lea
scas
push
nop
inc
lret
jns
mov
shrl
testl
add
and
loope
insb
fisttpl
xlat
loop
cmc
mov
mov
loop
lds
push
mov
jnp
jecxz
subl
adc
loopne
or
mov
out
pop
xchg
mov
mov
ret
inc
sarb
rcrb
loop
flds
gs
mov
loop
into
sarb
jge
js
std
cwtl
test
fidivrs
jnp
int3
enter
test
xor
jo
into
test
ficompl
int
mov
jnp
cmp
sbb
movl
je
jnp
xor
into
cmp
fcompl
outsb
pop
mov
les
mov
xchg
aad
fwait
ja
jmp
in
add
jnp
xor
loope
and
mov
cmpsb
xchg
mov
cwtl
popf
imul
jecxz
xchg
outsb
mov
jo
push
aad
daa
scas
mov
mov
scas
nop
aas
hlt
mov
inc
mov
test
cmp
add
xchg
jp
jp
jge
mov
xchg
mov
mov
fistl
mov
idivb
aad
out
pop
negl
xchg
mov
xchg
push
test
sahf
inc
sbb
jns
in
ret
jg
xlat
aaa
cmp
iret
mov
repnz
jle
scas
jecxz
mov
shrl
xchg
mov
rcl
fiadds
test
mov
call
dec
xchg
push
dec
mov
add
scas
fmull
xchg
mov
data16
jl
mov
int3
and
mov
dec
sub
fadds
insl
shl
ficomps
pop
xchg
test
jne
and
ret
sahf
cmp
mov
or
lcall
out
mov
sub
dec
and
mov
add
imul
leave
outsb
repnz
rol
repnz
out
inc
sbb
adc
test
adc
adc
fwait
pop
jp
mov
add
ret
inc
inc
mov
add
fisttpll
mov
mov
rolb
mov
push
sbbl
es
mov
jns
test
mov
mov
xor
jo
xchg
mov
sbb
call
std
jl
aas
jge
lret
rol
add
push
ficoms
out
push
pop
loope
int3
mov
lahf
pop
mov
fbstp
rcrl
xor
jle
movsb
int
mov
xchg
mov
mov
cmpl
stos
cmp
imul
andl
outsb
loope
xchg
mov
jl
sub
es
adc
or
imul
repnz
xchg
enter
popf
jns
sub
test
into
inc
push
mov
xor
mov
rorb
ret
sbb
test
ret
mov
inc
mov
jg
std
shlb
cwtl
ljmp
jle
loope
loop
or
mov
dec
sbb
xor
cmpsl
jns
inc
loop
rcr
loop
aas
imul
test
xchg
lcall
fcmovu
rcll
nop
mov
leave
and
add
scas
mov
jge
sar
adc
mov
scas
rorl
mov
lods
sbb
int
mov
push
dec
les
mov
imull
lods
in
dec
mov
aam
lret
loope
mov
mov
ret
mov
shl
outsb
ficompl
mov
mov
ret
jp
mov
pop
mov
insl
jnp
cli
nop
mov
ss
mov
imul
mov
loop
cli
add
jge
or
test
pop
add
into
mov
cld
sbb
enter
fsubrl
jge
je
lods
mov
insl
pop
lods
cli
mov
movsl
mov
add
dec
xchg
sarb
mov
sub
mov
cld
rcl
ja
pop
lods
xchg
test
and
dec
ds
in
fwait
add
mov
pop
rcll
loope
out
sti
mov
cmp
mov
ffree
mov
sahf
mov
fidivs
lods
or
mov
addr16
scas
ja
outsl
mov
aad
iret
fiaddl
jecxz
xchg
fisubs
lods
or
ror
into
push
sarl
rcrb
inc
lahf
inc
popf
negb
rol
mov
mov
or
inc
andl
cmp
dec
fadd
dec
push
sub
in
xlat
test
mov
jns
jae
fdivrl
xor
jge
pop
mov
int3
int
popa
xchg
sub
sub
aad
mov
leave
mov
lock
pop
mov
adc
cwtl
jecxz
fidivrs
out
cwtl
roll
ja
inc
ljmp
iret
dec
jbe
fcmovb
loopne
lahf
jp
cmpsb
mov
test
jmp
mov
out
in
call
mov
cld
loop
sbb
stos
fimull
test
mov
fcmove
jmp
cmp
enter
fcmovbe
jle
test
bound
mov
ret
int3
lods
inc
loope
pop
xchg
out
clc
iret
aam
and
int3
cmp
mov
mov
cmpsb
scas
scas
popf
xchg
rcl
es
call
jp
xor
xor
in
jae
leave
popf
jg
push
mov
rcr
scas
mov
cli
push
xchg
int
mov
aam
sbb
aas
pop
dec
inc
into
test
mov
sahf
jg
rcrl
movsb
fistpll
ja
mov
call
iret
notl
jg
ljmp
xchg
aam
xchg
or
mov
jnp
mov
sub
addr16
jl
loop
push
push
scas
adc
mov
sbb
in
int3
sub
mov
adc
ljmp
mov
xchg
in
loopne
ja
xchg
jle
or
loop
ljmp
nop
xlat
mov
int3
arpl
out
cmp
sarb
imul
jg
mov
pushf
js
jmp
addl
fists
int
dec
inc
fsubrl
jecxz
xor
mov
int3
mov
sarb
xchg
push
into
mov
lods
mov
mov
adc
dec
mov
aad
ja
test
jbe
fndisi(8087
jge
loop
aam
xchg
aaa
adc
adc
push
mov
mov
incl
mov
repnz
jge
xor
and
pop
lret
hlt
jns
movsl
subb
loopne
jg
add
or
cs
fldt
mov
loop
loopne
mov
rorb
roll
lods
jb,pt
sbb
cmp
addl
add
xor
pop
test
mov
cli
mov
insb
stos
movsl
loopne
stos
cli
enter
inc
push
fisubl
dec
sbb
jecxz
push
enter
cmovne
shl
mov
fsub
iret
xor
xor
enter
jge
iret
nop
pop
mov
sbb
loopne
jb
adc
fnstcw
mov
bound
shr
iret
cmpb
mov
sub
mov
sbbb
leave
xchg
push
mov
jbe
mov
lret
scas
fnclex
call
aam
sbb
ret
mov
outsb
add
loopne
cmpsb
xor
call
fchs
mov
data16
bound
ja
loop
popf
fldt
loopne
mov
fists
xchg
xchg
into
jge
stos
jnp
mov
fcom
jnp
push
rcl
test
adc
fdivrs
js
jle
fildl
sub
ffreep
xor
lds
mov
mov
dec
es
popa
enter
fldt
fdivrs
imulb
cmpb
ficompl
cmp
aam
inc
faddl
dec
push
mov
mov
xchg
sbb
xchg
das
roll
pop
imul
xchg
movsb
subl
cwtl
leave
nop
into
leave
or
xchg
cli
pop
sbb
sahf
fsubs
scas
cmpsb
mov
xlat
mov
pop
pop
xchg
mov
inc
xor
cmp
enter
push
rol
std
xchg
loope
int3
cli
add
mov
lea
ficoms
pop
lods
bound
shlb
or
pop
sbb
inc
fwait
xor
int3
push
push
and
fimull
adc
jl
mov
scas
in
mov
cwtl
fidivrl
lahf
xchg
sti
mov
rorl
fsubl
mov
int3
test
and
fisttps
jecxz
dec
scas
push
sarb
loope
and
or
xchg
scas
mov
nop
cmpsb
jb
jle
fisubs
int
inc
add
je
fnstenv
insl
jge
fbld
adc
push
or
jecxz
ret
mov
pop
ret
push
push
jne
out
jae
adc
inc
rcll
into
add
insl
nop
stos
mov
andl
jns
movsb
cmp
loopne
fnclex
or
adc
sub
shll
fldl
sbb
mov
dec
xorl
cmpb
ret
rolb
out
ds
mov
scas
into
mov
dec
sbb
roll
lahf
js
mov
daa
les
fdiv
xorl
cmpsb
add
sub
xchg
rcr
stos
test
mov
mov
ret
leave
and
mov
fisubrl
pop
mov
sbb
fs
and
mov
inc
add
repnz
es
aaa
into
out
gs
js
cli
in
xchg
int
scas
aam
push
sahf
sub
aaa
test
mov
fcmovne
cmp
das
or
lods
imul
mov
and
out
mov
leave
mov
test
mov
fisubl
repz
mov
rolb
mov
enter
push
mov
dec
dec
xchg
iret
testl
mov
enter
ljmp
mov
fisubs
sarb
cmp
loopne
xor
int
xchg
mov
in
xchg
iret
mov
and
sbb
mov
fstp
jle
cltd
jb
mov
xor
cmpl
mov
jb
xor
inc
sti
std
jle
push
les
gs
xchg
mov
stos
adc
jl
aas
shll
cmc
fsubrl
pop
out
lds
mov
movsl
mov
rorl
ret
lods
sahf
push
cwtl
and
add
test
push
sub
icebp
leave
xchg
fs
sbb
sbb
dec
int
in
ret
shll
mov
push
xchg
scas
rorb
lods
shlb
xlat
cli
cmp
mov
shl
inc
test
rclb
mov
mov
or
subb
leave
int3
outsb
shlb
loop
xchg
jle
lods
enter
int
pop
jns
shll
fdivrl
add
fnstcw
arpl
shrb
fisubs
and
or
xlat
shl
fisubrs
push
test
xchg
loop
jp
sbb
lea
mov
lret
jnp
int3
inc
mov
fldt
jge
push
or
cmpsb
jle
jns
fxch
stos
xchg
ficomps
test
fiaddl
ljmp
imul
fwait
mov
mov
jecxz
cmp
gs
rcl
insb
and
xchg
lock
jle
ljmp
mov
aam
mov
loop
lea
rcrl
enter
ret
test
shll
call
popa
fisubrl
jle
and
pop
sbb
fidivl
rolb
push
jnp
mov
jmp
fsub
pop
loopne
sbb
lds
imul
rcrl
orl
dec
xor
push
cmpl
xchg
xor
test
lret
sarl
cwtl
fnsave
xchg
test
push
test
jle
xorl
test
push
mov
aam
int
mov
jp
test
lods
ror
shll
sbb
test
xorl
xlat
enter
dec
push
mov
mov
dec
sbb
jns
pushf
mov
lods
ljmp
scas
lods
mov
loopne
jecxz
push
fmul
and
mov
mov
aam
orl
sahf
sub
loopne
sarb
scas
or
jg
ss
mov
mov
jnp
push
int3
push
mov
mov
lods
js
ror
test
dec
pop
rcl
add
jecxz
ret
insb
into
fistl
subb
push
out
test
push
mov
and
js
ret
cmp
sub
add
cmp
pop
aam
mov
scas
test
mov
mov
orb
sahf
mov
lret
fidivrs
sahf
jne
jae
and
js
jge
cmp
jo
mov
rcl
outsb
sbbl
mov
mov
scas
jl
xor
movsl
mov
jge
or
aam
sbb
pop
adc
xchg
and
mov
fisubrl
jp
fnstenv
jns
jns
imul
push
push
mov
jle
notb
mov
ret
dec
and
stos
sbb
dec
sub
mov
mov
negb
je
cmpsb
lret
idivb
fwait
mov
fdivrl
mov
jns
ja
xor
mov
loopne
aaa
cmp
mov
push
adc
mov
mov
push
lods
mov
pop
rcr
mov
lret
jp
imul
mov
mov
xchg
ljmp
dec
dec
or
push
cmc
mov
and
jg
mov
dec
ret
shrb
into
jne
jle
sub
iret
jnp
jbe
mov
lret
imul
les
xor
lahf
fmulp
mov
rcl
xor
or
fiaddl
inc
mov
jp
adc
js
xchg
jge
cmp
sbb
loope
ret
jmp
js
adc
shlb
jl
rcr
insb
out
imul
fimull
xorb
scas
loop
add
inc
in
xchg
mov
arpl
jecxz
mov
test
movsl
pusha
enter
aad
stos
mov
add
cmp
mov
mov
xor
cmp
das
scas
test
icebp
jbe
mov
inc
jl
jns
fnsave
xor
add
iret
lods
cmpsb
leave
andl
dec
push
or
insb
mov
in
je
jge
mov
jns
adc
fs
fwait
int
mov
loope
xor
ret
mov
cmp
sarb
shlb
mov
sub
loop
imul
jle
cltd
mov
fisubl
stc
sub
mov
xor
mov
negb
fwait
mov
jecxz
push
fsubrs
fisttpl
aam
ret
ljmp
adc
fmuls
shl
mov
into
je
sbb
adc
xchg
test
rcl
cwtl
xorl
shll
mov
rcl
aad
scas
lahf
iret
fdivrl
xlat
lea
mov
mov
sahf
mov
push
mov
lods
mov
hlt
loope
sub
imul
and
int3
pop
sahf
fdivrl
ficoml
inc
ret
jecxz
dec
orl
jle
shlb
inc
sbb
mov
lea
loope
and
cld
lcall
scas
and
flds
mov
test
pop
jl
dec
mov
mov
fnstsw
mov
and
jbe
mov
mov
mov
hlt
or
into
mov
cmpsb
cmpsb
mov
mov
jg
aas
jge
lea
xor
adc
xorl
sbb
fldenv
test
mov
jp
mov
mov
stos
sbb
or
jno
jecxz
dec
int3
mov
jae
insb
jnp
mov
ret
mov
mov
enter
jbe
mov
roll
push
fldcw
mov
pusha
mov
jg
xchg
and
repnz
ret
fcomp
loope
stc
adc
stos
lcall
orb
push
mov
mov
jmp
jge
shlb
mov
cmp
shll
aas
jns
das
push
mov
fwait
jns
mov
ret
jle
ja
sub
or
hlt
dec
mov
dec
mov
loopne
lret
lods
jecxz
sub
inc
mov
adc
shll
repz
rorl
add
das
sub
xlat
ret
fcmovnb
push
pop
les
and
pusha
ds
shlb
aam
xchg
test
mov
daa
scas
mov
int
cld
cmp
loop
enter
sti
push
pop
mov
enter
movb
mov
scas
in
lea
rorl
int
xorb
scas
pushf
mov
adc
mov
rcl
cmp
mov
test
mov
ret
ret
jl
pop
mov
xor
mov
sbb
jle
ret
call
aas
popw
pushf
rorl
test
loope
xor
mov
roll
inc
stos
insl
rcll
dec
mov
pop
addl
dec
stc
dec
movsl
push
sub
xchg
sub
scas
test
mov
adc
mov
adcb
jecxz
pushf
rcll
and
xchg
loop
rcr
adc
pop
sbb
sbb
hlt
cli
in
jmp
mov
cmp
fs
fisubrl
push
sbb
mov
xchg
xor
leave
sbb
push
dec
test
jnp
adc
movsb
mov
dec
push
xorl
jb
std
sub
lock
mov
cmp
pop
rcl
push
mov
and
inc
fistps
scas
iret
sbbl
sub
fsubl
ror
mov
cmp
scas
pop
dec
in
aad
mov
mov
in
mov
add
mov
mov
mov
fcoml
mov
fidivrl
jl
test
enter
xlat
sysret
jecxz
mov
inc
xchg
pop
inc
sti
push
jb
jecxz
inc
ret
pop
push
jp
fnstsw
js
sub
inc
mov
ret
mov
aam
std
mov
fdivs
mov
cmp
jle
adc
mov
jp
ja
bound
iret
mov
pop
jle
lds
bound
sbb
hlt
loop
jae
mov
adc
test
xor
mov
scas
sahf
pop
mov
add
mov
dec
jmp
shlb
shl
mov
pop
cmpb
rcrb
jp
mov
and
jp
lcall
xor
adc
mov
negl
loopne
jns
push
ja
xchg
push
mov
dec
jg
enter
clc
sbb
imul
push
scas
inc
mov
mov
adc
inc
xor
stos
xchg
mov
mov
insb
dec
cli
mov
ja
int3
lods
add
lret
mov
subb
test
mov
loop
ljmp
ret
mov
lret
jns
mov
jle
and
ret
aad
je
jnp
mov
fwait
inc
mov
xchg
and
ret
mov
mov
enter
stos
mov
sarb
jnp
push
mov
sub
mov
lret
push
ret
je
test
adc
test
ret
in
mov
mov
subb
cmpsb
mov
sub
mov
loope
sub
pop
mov
mov
mov
fiadds
test
xchg
jl
mov
lods
mov
fstpl
call
pushf
lds
jns
add
pop
packsswb
jecxz
shll
mov
jnp
mov
cmc
rorl
xlat
ds
popf
cmpsb
jns
iret
inc
fcmovne
sbb
mov
mov
xchg
cli
lea
ret
sbb
scas
ja
or
lret
jmp
scas
push
repnz
mov
mov
loope
js
test
xchg
push
mov
mov
dec
pop
fidivl
jl
cli
pusha
call
ror
xlat
and
ret
outsb
enter
sahf
and
mov
fcom
cmp
push
scas
sub
lea
cwtl
xchg
mov
rcrb
add
mov
test
xlat
jns
arpl
ja
or
int3
cwtl
out
cmp
push
lahf
mov
mov
or
aad
push
loope
cli
rol
mov
mov
dec
and
imul
scas
and
insb
sbb
out
mov
or
iret
imul
mov
mov
movsl
mov
jp
cmp
out
adc
sub
lods
pop
insb
roll
inc
fnstcw
int
lock
pop
dec
je
fisubrs
into
mov
lods
mov
dec
je
jecxz
fildll
adc
inc
inc
lret
loop
jle
xchg
mov
sub
hlt
inc
xchg
adc
test
mov
fxch
fstl
mov
aad
imul
sub
sarl
shll
fisttpll
mov
sti
push
push
add
aad
pop
lods
stos
gs
adc
popa
cli
cmpl
fsubr
dec
cmp
jge
or
sub
int
and
test
scas
shlb
or
add
leave
js
xor
fbld
push
aad
movsl
push
jns
mov
mov
jne
mov
rol
into
loope
aam
jae
ret
cmp
sbb
inc
shrl
or
and
fmulp
jmp
pushf
scas
jnp
jno
mov
scas
out
in
fmull
mov
or
loopne
pushf
sbb
jmp
dec
dec
cmpl
mov
mov
mov
lods
mov
and
nop
fsub
pop
pushf
mov
mov
ret
pushf
lcall
lahf
loopne
movsl
jne
jl
sbb
aad
mov
decb
fimull
roll
mov
sbbl
andb
loopne
mov
movsl
xchg
js
cmp
scas
mov
cld
rcr
cmp
mov
rol
xchg
stc
loope
jb
iret
into
insl
sbb
jmp
push
jg
rcr
jo
xorb
mov
cmp
ja
cwtl
jns
fisubs
sub
jb
iret
inc
cli
jmp
jl
ja
loopne
push
or
mov
mov
fsin
push
outsb
sub
dec
xchg
add
inc
cli
jbe
jl
mov
jo
add
mov
mov
mov
xlat
shll
fildll
int
push
sbb
lea
dec
test
outsb
loop
fists
xlat
mov
and
stos
subb
rcll
fisubs
lahf
scas
fbstp
jg
jns
fisubl
jp
cli
loopne
mov
mov
fstl
mov
jno
call
mov
test
shl
jecxz
cmc
out
sub
iret
sti
rorb
dec
mov
shrb
xor
int3
inc
jb
leave
or
ret
mov
mov
ret
inc
test
mov
or
jle
js
xor
insb
std
push
lcall
test
stos
sub
lods
cli
aam
mov
add
fcmovnb
mov
mov
lret
dec
cmp
mov
add
inc
jns
negl
mov
jl
jle
pop
fstpt
clc
jo
int3
cmp
push
and
adc
pop
mov
ret
mov
fwait
xlat
and
dec
mov
mov
setg
fnsave
mov
fisubl
or
sub
in
push
mov
add
sbb
out
cld
insl
mov
sarl
push
loopne
sub
jne
jnp
je
inc
jmp
ret
imul
stos
jae
inc
jb
and
cli
mov
roll
out
sub
insb
rcr
lret
xchg
js
fwait
sub
fnstsw
ret
loop
mov
movsb
loopne
outsb
fists
ja
loope
sbb
push
xchg
mov
inc
adc
std
fwait
mov
xchg
jl
push
test
dec
cwtl
leave
jns
cmp
and
xor
andl
mov
enter
mov
jecxz
stos
mov
enter
fsubrl
xlat
int3
xchg
lods
loop
mov
add
ja
mov
or
ficompl
xor
push
jl
mov
dec
add
mov
jp
mov
mov
enter
mulb
aad
outsb
mov
inc
xchg
xor
into
sbb
imul
fstpt
shrl
dec
mov
lret
sbbl
mov
push
mov
loope
test
xchg
arpl
pop
fcoms
rcll
ret
sahf
orb
jecxz
pop
fwait
rol
mov
imul
mov
leave
iret
or
jbe
xchg
int
jns
add
inc
mov
mov
fs
push
into
jg
insb
cmpsb
jge
movsb
add
shll
mov
lea
inc
mov
scas
int
je
mov
mov
sub
push
jle
incb
sarb
cwtl
loope
cmpsb
mov
inc
jmp
mov
sbb
jp
push
push
sbb
mov
cmpsb
sub
sarb
pop
adc
rcl
mov
subl
mov
loop
jge
mov
ficompl
or
int3
lea
sub
movsl
mov
cmp
inc
mov
jne
rol
imul
mov
js
js
cmpsb
lods
cmp
mov
call
mov
or
scas
loope
daa
cli
jmpw
imul
xchg
mov
test
ljmp
imul
cmp
or
mov
jp
mov
out
inc
xchg
lahf
mov
arpl
filds
xchg
xchg
js
mov
mov
ficoml
push
mov
jp
bnd
dec
ret
jle
mov
jg
sub
arpl
inc
fldcw
call
adc
mov
cmp
hlt
fstl
leave
mov
repnz
sbb
and
mov
gs
mov
dec
stc
cwtl
pop
xor
cmp
mov
or
pusha
sub
inc
test
dec
add
lret
adc
pop
xchg
rcr
rcll
js
icebp
mov
leave
cwtl
pop
mov
mov
push
mov
ja
stos
test
loop
addb
ja
shl
pop
nop
lods
jns
addb
sbb
mov
jle
cmp
sub
inc
ljmp
inc
mov
cld
mov
fidivrl
bound
fiaddl
and
scas
into
mov
fninit
scas
jb
inc
cmp
insb
inc
pushf
test
push
inc
mov
sarl
mov
jb
mov
cmp
cltd
dec
sbb
dec
lods
add
sub
bound
out
adc
add
jns
fidivrs
in
jmp
add
mov
xchg
gs
rcr
dec
sarl
out
mov
inc
or
dec
mov
fstps
imul
loopne
and
fdivrl
mov
jb
mov
mov
sub
addr16
pop
stc
ror
add
or
mov
jnp
shrl
xchg
lahf
xor
jecxz
xchg
add
aam
loop
mov
xchg
jl
fidivs
inc
into
fnstenv
ds
out
jg
pop
sarl
jo
push
add
fst
cli
test
sub
mov
mov
fsub
dec
les
xchg
jnp
mov
les
das
jge
leave
je
cli
fnstcw
stos
loop
fcmovnbe
imul
inc
pop
xchg
and
inc
xchg
cs
cmp
jecxz
sahf
mov
into
jnp
mov
sub
sbb
mov
mov
fidivl
ja
ret
aaa
sbb
fs
out
push
pusha
loopne
mov
adc
cmpb
pop
fnsave
fwait
xlat
sub
shll
xlat
mov
mov
jmp
jp
test
xchg
mov
mov
sub
fsubl
mov
mov
push
mov
int3
fs
xchg
ficoms
mov
add
sbb
jge
mov
leave
jnp
les
rcr
cwtl
xlat
int
testl
out
inc
arpl
js
lret
scas
outsb
roll
cli
or
lods
and
call
xchg
test
mov
shll
jo
xor
inc
rcrb
fstpt
leave
adc
sbb
or
test
int3
mov
sub
ret
je
push
imul
shr
loope
into
inc
push
shrl
jne
std
sbb
xor
dec
mov
mov
or
leave
loopne
mov
mov
ret
inc
fsubrs
sti
movsl
scas
in
xor
mov
insb
jle
call
insb
mov
enter
adc
jge
mov
sub
sarl
jecxz
add
fstpt
test
mov
dec
mov
jmp
mov
inc
cltd
cli
leave
fcmove
sbb
insb
jg
jl
test
mov
sub
xchg
jbe
xchg
mov
ret
push
cmp
fstp
fisubl
xchg
test
ja
mov
test
shl
and
aad
jecxz
stos
and
add
jb
loop
jo
fdivrl
shl
jle
lods
cmp
ljmp
mov
inc
data16
adc
or
lods
je
loope
cmpsb
rolb
js
pop
mov
dec
cmpsl
fmul
dec
adc
lods
lret
lods
jns
ret
shlb
xchg
cwtl
int
xchg
mov
popa
jne
sub
mov
fistl
inc
xor
push
out
dec
jb
ds
inc
jle
fistpll
jle
enter
out
mov
loop
je
test
jbe
xchg
fnstcw
sbb
scas
mov
or
sub
aaa
into
fidivl
dec
ret
outsb
aam
push
lea
ja
mov
ret
stos
cmp
xchg
fcmovnbe
mov
or
mov
pushf
or
lods
mov
fmuls
lret
jnp
jl
sbb
rcl
cmp
les
fidivl
pop
loope
repnz
jmp
and
pushf
test
cmpb
mov
loop
loopne
outsb
ja
mov
xor
jecxz
sarb
cmp
mov
sbb
rcll
lods
sahf
ret
xor
icebp
inc
ljmp
stos
out
and
jmp
cld
lods
test
mov
pop
scas
mov
jp
jnp
fcmovnbe
pop
pop
scas
cld
hlt
lcall
or
push
add
and
imul
leave
push
ja
mov
std
push
adc
aad
dec
int3
shll
mov
push
shl
xor
cmpb
cmp
cmp
mov
stos
cmpsl
mov
mov
mov
scas
aam
or
xchg
mov
nop
or
mov
sbb
mov
xor
mov
mov
mov
pop
xchg
loop
sbb
mov
out
sarb
lea
js
push
dec
or
cmpb
mov
ffreep
int3
jns
inc
xor
mov
aam
sbb
ret
imul
ss
mov
adc
jg
jmp
mov
fxch
and
add
in
adc
ret
mov
iret
jle
scas
rorb
mov
and
xor
push
sbb
pop
jne
push
fcmovbe
dec
mov
es
adc
mov
movsb
fwait
ds
push
shll
rcl
mov
jns
sub
jecxz
jne
faddp
mov
loopne
or
cmpl
add
cmp
or
lahf
loopne
rolb
es
scas
push
xlat
or
adc
pop
mov
adc
ror
sub
inc
aam
test
xchg
int3
jmp
push
push
cmp
mov
insb
mov
outsb
shrl
mov
sarb
jg
pusha
mov
sarl
mov
mov
je
lods
lock
or
loope
mov
jecxz
movb
rcrb
sbb
mov
jno
bswap
jns
push
or
lock
in
sbb
int
aad
dec
dec
fdivl
sbb
xchg
loope
fisubrl
mov
shll
insl
fidivl
movsl
xor
sahf
scas
enter
leave
lods
fistpll
jg
mov
jl
jecxz
stos
xchg
ja
rolb
mov
adc
loope
rol
loope
jecxz
adc
or
mov
js
xchg
jo
xchg
aam
inc
pusha
dec
fisubs
roll
out
rorb
pop
mov
fisubrl
test
dec
shll
iret
sarb
enter
cmp
mov
fdivrl
sbb
or
pop
iret
xchg
pop
mov
mov
clc
xchg
cmp
fsubs
add
cmpl
jns
inc
jns
jle
shrl
mov
add
es
push
dec
addr16
daa
fcomp
xor
aad
mov
jle
mov
stc
into
loopne
mov
mov
subb
mov
bnd
subl
pop
stos
lods
sub
lods
lret
mov
adc
mov
sub
xchg
arpl
in
add
ret
cmpsb
fwait
lods
jnp
loopne
mov
xchg
ja
int3
jl
call
mov
push
imul
or
sbb
rcrl
sbb
repz
nop
aam
mov
lret
jp
out
mov
mov
ja
pop
iret
loop
aas
xchg
xchg
xor
fwait
push
pushf
xor
fucom
xorb
test
pop
mov
mov
sbb
shll
shlb
out
cwtl
mov
mov
fld
jg
leave
inc
lods
xchg
std
xchg
push
shrl
sub
jecxz
into
jnp
and
sbb
sbb
xchg
iret
ret
push
rcr
mov
xchg
inc
adc
test
aad
pop
jle
mov
scas
sub
pop
movsb
lods
lea
xchg
lds
js
arpl
jb
cmp
xor
loop
sub
and
movsb
xor
inc
ret
mov
inc
push
into
int
jg
mov
lret
or
lods
es
repz
lods
xor
xor
int3
mov
int
mov
push
cmp
aam
ds
cltd
lea
push
jle
shlb
push
jl
rcrl
sub
iret
roll
fnstsw
scas
ja
fwait
gs
stos
cli
fadds
dec
xchg
pop
adc
sbb
iret
xchg
add
jle
pop
sub
mov
mov
fisubrs
clc
mov
test
repz
jg
dec
sub
mov
inc
rorb
es
xor
mov
mov
mov
scas
jns
mov
jbe
into
shlb
jg
pop
stos
sarb
jb
inc
add
ret
inc
sub
mov
loop
fmull
xchg
mov
xchg
mov
ror
jnp
push
dec
std
ret
push
or
or
lret
fsubrl
mov
icebp
fidivrs
mov
test
vprotb
lea
mov
or
shlb
jl
mov
int3
inc
test
loop
ja
test
mov
inc
sarb
scas
dec
or
jge
push
into
mov
sarb
xchg
test
adc
or
add
test
lahf
jge
test
cmp
int
xor
push
xchg
fnstcw
mov
push
mov
jl
or
ljmp
xor
aam
mov
loop
js
mov
into
aam
adc
dec
mov
push
fsubs
xchg
xor
sub
jne
mov
cs
mov
jecxz
ja
bound
add
das
lahf
fnstenv
pushf
sar
test
sarb
or
iret
lea
flds
in
or
fcmove
pop
js
rorb
lcall
jne
sarb
fldenv
pop
das
mov
fld
jge
cwtl
sbb
jmp
dec
mov
cli
leave
flds
xor
ljmp
mov
dec
repz
xchg
rcr
int3
mov
xchg
aam
adc
shr
movsb
aam
lahf
enter
lcall
lahf
sbb
mov
add
shl
xchg
mov
shll
mov
mov
loop
mov
dec
call
shll
xor
add
fsub
shlb
mov
faddp
popa
insb
mov
test
dec
jae
mov
mov
pop
xchg
into
scas
mov
push
dec
mov
mov
jb
cmp
pop
fstpt
and
cmp
aad
push
jge
sarb
int
push
shrl
loope
std
mov
mov
mov
fwait
dec
loopne
movsb
inc
mov
mov
jmp
shll
repnz
mov
sbb
lahf
aad
cmp
mov
fadd
xor
and
mov
or
jnp
pop
jbe
lea
enter
mov
lods
into
sbb
xchg
test
mov
fidivrl
fildl
xchg
dec
mov
imul
jns
mov
in
into
leave
dec
cmpb
test
cmp
test
pop
stos
dec
pop
jecxz
test
mov
rcrb
sar
imul
imul
loopne
mov
push
fidivl
mov
cmc
push
jns
aam
js
sub
mov
ljmp
dec
cld
int
mov
push
aam
outsb
mov
jbe
jb
xor
cmp
insb
xchg
test
roll
mov
or
jae
jg
add
pop
or
jns
subb
imul
je,pt
inc
push
fimuls
js
dec
xchg
sahf
inc
test
jge
ja
fsubrl
jl
cmpsb
loope
enter
orb
sub
aas
jns
cmp
test
cwtl
fldcw
xor
stos
stos
mov
and
sub
sarl
lods
dec
add
mov
int
mov
rcl
mov
push
orl
ds
dec
cld
lahf
fisubrl
inc
dec
es
jb
mov
inc
inc
xchg
inc
lea
mov
cmp
leave
fiaddl
mov
mov
adc
roll
pop
fistpll
pop
mov
rolb
imul
push
fwait
movsl
js
fidivl
fcmovne
xchg
adc
xor
xchg
ret
jle
cwtl
mov
mov
mov
loope
loopne
enter
jg
ret
scas
and
jbe
mov
ss
mov
dec
mov
rclb
loop
test
fnstcw
dec
inc
inc
fbstp
cld
inc
sub
mov
xlat
xchg
aas
pop
or
mov
sub
scas
cmp
cmp
mov
mov
jl
jns
sbb
int
nop
mov
std
imul
ret
or
int3
xlat
push
dec
dec
mov
sub
movsl
mov
shrl
and
push
femms
js
xor
sub
lahf
lods
sarl
mov
fbstp
cmp
fidivl
jbe
loope
test
lret
xor
fmul
insl
insl
int
adc
ret
ficomps
jp
fisttpll
repnz
xor
stos
jo
andb
sbb
jns
push
fisttps
mov
test
xchg
adc
mov
into
jg
cmpl
shlb
nop
mov
add
loop
les
xchg
fmul
xchg
adcb
mov
int3
fidivl
pushf
fnsave
clc
mov
addl
imul
jle
jecxz
xchg
cmp
sarb
out
lock
mov
ret
xlat
mov
les
fsts
jnp
dec
xchg
inc
mov
mov
sarl
into
xor
mov
pop
roll
lahf
lods
mov
inc
stos
ss
lods
mov
push
mov
inc
sbb
jge
sub
dec
ja
ret
subb
jns
repz
mov
inc
loopne
pminsw
mov
or
dec
mov
xlat
adc
js
fimull
fisttpl
xchg
mov
into
fnstcw
aam
mov
inc
lret
sarl
fnstcw
xchg
and
add
jne
loop
cmp
mov
loopne
mov
aam
jge
pop
fadd
jp
adc
int3
jle
dec
loopne
hlt
testl
scas
cmp
stos
push
cmpl
jb
jnp
iret
cmp
aaa
repnz
ret
ficomps
xor
xchg
mov
pushf
pop
xchg
mov
fimull
mov
fnstcw
fnsave
jnp
cwtl
mov
stos
or
mov
push
in
push
test
aad
xor
notb
jns
sti
jmp
sbb
ja
or
mov
mov
movsb
rclb
fnstsw
and
dec
sbb
push
int
int3
jg
rcll
jp
js
lods
jp
and
sbb
sahf
js
xchg
jl
mov
xor
mov
mov
rcl
fsubp
xchg
fdivs
or
mov
iret
lods
cmpl
nop
jp
jle
cwtl
aam
testl
jge
add
mov
mov
mov
mov
subl
add
ss
mov
jge
mov
jle
jae
mov
leave
mov
xor
cmp
int3
push
inc
imul
push
test
mov
mov
jns
scas
insl
mov
sti
les
mov
mov
les
loop
fcmovbe
jmp
imul
jl
sbb
rolb
lretw
sub
inc
gs
dec
jmp
fsubrl
shlb
es
adc
adc
lods
je
test
mov
leave
dec
imul
add
jp
lods
inc
mov
ret
int
lret
flds
cli
loope
stos
js
mov
loopne
mov
sbb
mov
mov
mov
or
jg
neg
cli
adc
ret
dec
shlb
mov
shrl
jne
mov
jmp
sub
enter
scas
sbb
cmpsl
shlb
int3
iret
testb
test
subl
adc
mov
mulb
js
shrl
test
dec
xor
jnp,pn
out
or
add
cmp
inc
mov
push
and
jge
xlat
mov
xchg
cmp
ret
ds
jmp
jbe
jbe
jae
ret
push
mov
lahf
mov
fxch
test
mov
and
fwait
jl
xor
mov
insb
fisubl
std
stos
jecxz
int
jl
inc
fsts
push
pop
test
scas
fists
loop
jae
loope
adcb
int
adc
push
mov
and
test
push
nop
rol
arpl
xchg
lret
data16
test
sub
fstl
outsb
int
movsb
ret
and
shrb
mov
inc
mov
xor
and
jle
add
cmp
jnp
cs
sbb
sbb
jno
sbb
add
mov
mov
andnps
mov
mov
jns
or
mov
jnp
add
adc
add
shrl
call
cld
mov
ret
fmuls
lahf
loopne
push
lods
fcmovb
subl
flds
imul
mov
jbe
xchg
pushf
shll
fnstsw
xchg
or
sbb
scas
addb
out
adc
push
cmp
aam
push
xchg
arpl
ds
repnz
or
aam
jns
push
lods
xchg
jle
test
into
insb
rorb
sbb
sub
aam
xchg
mov
jg
lahf
orl
into
test
pop
fiadds
xchg
adc
jbe
lahf
jecxz
clc
idiv
fiaddl
lock
jecxz
xchg
inc
fistpll
cmp
test
mov
xchg
sbb
xor
xlat
jle
jbe
ret
test
test
loop
adc
out
push
push
les
sub
mov
mov
xchg
js
xlat
sub
loopne
mov
sub
fcmovnu
js
push
cmpsb
je
rolb
or
mov
mov
insl
pop
mov
test
and
test
and
jl
rcr
cmpsb
mov
or
xor
scas
loopne
mov
aad
xchg
jmp
imul
jl
loop
ljmp
xchg
adc
add
or
or
xchg
fcmovb
inc
or
lods
adc
rclb
in
xlat
ret
jns
aam
scas
jecxz
mov
and
push
xchg
filds
das
leave
add
push
jns
inc
pushf
mov
fnstsw
sub
sub
mov
sub
scas
idiv
mov
inc
or
mov
mov
sub
jb
jp
cmpl
mov
push
xor
jecxz,pt
ljmp
stos
mov
sarb
fmulp
outsl
iret
fdivrl
or
lods
sarl
and
popf
mov
int3
shlb
ljmp
pop
ret
jecxz
jnp,pt
fnstsw
orl
jne
adcl
jnp
das
xchg
repz
push
push
in
mov
out
dec
push
scas
dec
adc
aam
loop
inc
push
mov
dec
push
hlt
ret
mov
mov
test
repnz
mov
cmpl
sub
pop
xlat
scas
shrl
xchg
lods
orl
mov
outsb
mov
mov
andl
push
fs
dec
test
mov
mov
pop
stos
xor
into
xchg
icebp
movsb
int3
test
mov
ss
out
cli
test
aad
enter
loopne
or
pop
cmpsl
mov
add
mov
push
ret
jne
mov
das
je
ficompl
decb
or
push
fidivl
pushf
mov
jl
adc
lods
enter
insb
es
mov
gs
xchg
push
mov
jp
dec
sub
fisubs
fdivrs
rcl
mov
gs
push
rcl
fidivrs
mov
jecxz
mov
ffree
jl
aad
sbb
mov
lods
into
adc
clc
mov
stc
das
fwait
insb
leave
mov
xchg
mov
fmul
rorl
cmp
loop
cli
push
insl
cmp
jl
andl
jbe
aam
pushf
mov
jb
sub
xchg
lret
push
mov
dec
or
cmp
shrb
sub
mov
mov
inc
cs
jno
or
mov
dec
dec
mov
enter
scas
inc
sub
cmp
cmp
push
jp
jg
adc
shrl
mov
js
dec
mov
aam
test
jl
xchg
into
mov
mov
rol
and
cli
sbb
mov
fisubrl
sarl
cmp
xchg
mov
test
int
jae
xchg
sarl
and
mov
mov
mov
leave
ret
lret
mov
cmp
addl
test
mov
test
stos
jl
mov
es
mov
sub
scas
imul
arpl
ret
mov
push
pop
push
pop
or
loop
loop
sbb
add
jg
xorl
jl
les
mov
rcl
mov
dec
pop
test
adc
or
fistl
xchg
mov
icebp
fadd
enter
cltd
jb
roll
mov
mov
jl
mov
es
in
adc
mov
jnp
pop
leave
cmp
pusha
mov
jg
mov
sti
lea
mov
jecxz
scas
xor
and
xor
lret
enter
outsb
hlt
xchg
into
mov
ljmp
js
fisttpll
iret
xorb
loop
or
aam
sbb
mov
dec
shrl
mov
outsl
rolb
iret
inc
push
jbe
addb
lahf
xor
lea
xlat
add
js
shlb
iret
call
ret
fnstenv
in
gs
roll
mov
lods
sub
pop
test
mov
cmpsb
leave
dec
mov
mov
aam
cli
or
loopne
jge
jle
mov
cli
xchg
add
or
js
jecxz
leave
xor
int3
fistpll
shll
cwtl
fildl
or
mov
jne
call
hlt
dec
cld
adcl
test
outsb
mov
lock
xchg
jl
mov
cmpsb
mov
aaa
or
fldl
push
outsb
lcall
imul
and
shll
xchg
js
fwait
add
or
mov
jl
mov
ret
inc
jns
xorb
loop
test
in
mov
cmp
or
lret
roll
mov
adc
cli
dec
jne
rcll
out
push
rolb
mov
test
cmp
dec
fbstp
insb
jp
rcll
add
sbb
mov
fbstp
rorl
fsub
mov
lods
fidivl
jl
jg
movsb
and
or
xlat
rcrl
dec
and
jecxz
jbe
loope
jbe
adc
mov
rcl
cli
jnp
mov
mov
xchg
xlat
sbb
mov
jge
jecxz
rorl
mov
mov
insl
test
enter
mov
mov
or
int3
xchg
jg
mov
mov
ffree
jnp
ret
sahf
push
test
inc
jb
aad
rorl
ret
mov
inc
mov
push
dec
fisttpl
rcr
inc
mov
mov
int
add
ret
mov
es
lret
mov
clc
mov
and
rol
bound
cmpsl
fwait
lods
ss
add
add
aam
push
lret
insb
mov
push
cmp
test
adc
enter
sbb
or
imul
imul
imul
call
fnsave
adc
and
scas
mov
loopne
js
pusha
fisubrl
dec
js
sbb
push
jo
adc
xor
or
ss
mov
or
aam
rcl
or
inc
test
and
fiadds
ljmp
mov
lahf
rol
popf
cld
pop
lds
push
mov
in
mov
jns
or
es
cmp
adc
dec
imul
xorl
test
scas
adc
shlb
inc
xchg
cmpsb
leave
addl
dec
jbe
xchg
fdivl
pop
pop
fisttps
push
xchg
aad
rclb
or
les
mov
xchg
lods
mov
ret
lret
mov
aad
movsb
loopne
jl
add
mov
xlat
imul
adc
lods
mov
cwtl
jl
fcoml
lret
cmpl
repz
enter
shll
inc
jns
mov
push
push
loop
lods
ret
dec
leave
leave
ss
dec
mov
enter
cmp
xchg
mov
ret
mov
fiaddl
and
loop
fmuls
cmp
test
jnp
adc
sbb
mov
shll
inc
ret
or
rcl
pop
mov
mov
mov
adc
or
fmuls
mov
cli
push
mov
mov
loope
shll
add
mov
add
repnz
fldenv
aas
and
rorl
mov
decb
cmp
xchg
iret
fucomi
mov
lahf
ja
dec
in
loop
and
fs
ret
cwtl
icebp
xchg
dec
leave
pop
pop
or
enter
sarl
out
xlat
cmp
mov
jecxz
enter
mov
pop
jb
mov
loop
dec
rorb
ljmp
enter
mov
addl
xchg
iret
xlat
shll
sarl
test
into
or
mov
aas
imul
push
jne
cmpsb
enter
je
adc
loop
iret
add
sar
mov
lea
mov
imul
aam
sahf
leave
cmp
xor
gs
ret
subb
sahf
pop
inc
or
fdivr
pop
push
ljmp
jl
add
xchg
aam
loope
mov
lods
das
adc
scas
pop
adc
std
jbe
test
popa
imul
push
mov
add
shrl
es
enter
or
int3
ror
mov
jp
jle
aad
push
sbb
lahf
fstpl
sub
cmp
negl
in
scas
adcl
mov
mov
mov
mov
aad
pop
inc
cmp
mov
into
mov
aam
sar
or
mov
loope
xchg
mov
pop
int3
mov
scas
out
jbe,pn
ret
imul
mov
xor
add
xchg
mov
cmp
andl
xchg
cmc
mov
mov
or
or
mov
fxch
rcr
stc
mov
xchg
add
push
in
rorb
mov
and
add
jmp
inc
mov
fstl
js
jp
lods
shll
mov
outsl
jl
hlt
dec
push
shrb
dec
adc
xchg
fs
aam
fistpll
jecxz
jns
imul
and
rcr
mov
jne
psrld
sub
mov
mov
cmp
pushf
rorl
mov
inc
icebp
movsb
mov
hlt
pop
mov
pop
mov
int
ds
fisubl
adc
mov
dec
xchg
shlb
insl
ret
bound
andl
std
test
sbb
cwtl
jg
aad
xor
lods
mov
jb
loop
imul
loop
das
stc
aam
aas
es
mov
test
push
mov
test
cmpb
xchg
mov
rorl
xchg
ror
ret
xchg
insl
dec
test
outsb
mov
loop
mov
jne
jno
add
lcall
and
cli
int3
insl
mov
fsub
jo
jecxz
dec
sbb
sbb
pop
mov
les
mov
push
mulb
mov
sbb
mov
fidivrl
fwait
leave
scas
push
outsl
sub
test
int
popl
rorb
cwtl
lock
loope
mov
sub
sub
aam
jns
lcall
sarb
mov
ja
jns
mov
cli
outsl
mov
fisubl
les
mov
add
shrb
jnp
rcrl
popf
fwait
jp
mov
mov
sub
mov
jge
fisttps
or
mov
into
jge
addl
add
mov
xchg
fst
mov
lahf
lods
filds
jns
jp
scas
sbb
mov
mov
ret
mov
mov
insl
mov
cmp
push
push
cwtl
pop
movsl
std
xchg
jmp
adc
add
fcmovb
hlt
andl
adc
rcl
sub
add
imul
rorl
lods
lahf
fidivrl
pusha
int3
out
sahf
mov
mov
ficoml
out
or
add
cmpsl
mov
mov
mov
jl
cmp
pop
inc
mov
jnp
test
push
mov
xor
or
rorl
ret
sarb
xorl
mov
loopne
mov
call
or
loopne
jne
mov
shl
out
pop
cmpsb
cmpl
sub
jnp
mov
test
shrl
xor
inc
enter
mov
jb
lods
loopne
std
leave
enter
fsubrl
mov
dec
test
mov
jnp
aad
sub
jl
mov
ds
cmp
mov
inc
mov
movsl
iret
int3
ficomps
rcrb
jnp
loop
dec
sets
add
mov
dec
insl
lods
loopne
into
repnz
lret
ja
mov
cmp
mov
loope
mov
addps
call
test
iret
mov
jge
or
es
jge
shll
jge
mov
cmpl
js
sbbb
or
fdivrl
scas
mov
js,pt
loopne
sbb
loope
or
test
imul
enter
loop
dec
sarb
jge
xchg
mov
dec
test
mov
adc
mov
jnp
aaa
mov
scas
mov
movsb
subl
jge
push
sbb
xor
fs
inc
sar
addr16
fld
rorb
adc
insb
loopne
lret
je
subl
mov
fbstp
and
loope
mov
sarb
xorl
jns
mov
adc
fcmovne
lods
fdivrp
or
stos
mov
ret
sbb
mov
adc
lahf
leave
scas
nop
sub
mov
ja
enter
xchg
loope
xchg
test
mov
mov
mov
add
xchg
push
repnz
insl
mov
inc
mov
sbb
sahf
andl
iret
js
jle
push
faddp
push
pop
lret
fnstcw
mov
loop
mov
sub
leave
cmp
shrb
mov
pushf
mov
lea
mov
pushf
or
scas
mov
test
mov
fisttpll
cmp
jecxz
subb
jns
stos
push
loop
lcall
je
lods
jbe
jle
mov
cwtl
scas
mov
mov
cmpsb
jbe
mov
fsubp
or
mov
jns
leave
mov
mov
fstp
orl
lods
aam
jl
inc
aad
jne
inc
and
shll
mov
or
mov
mov
sahf
mov
jmp
jns
sub
iret
rol
test
imul
imul
cmp
jmp
lret
movsb
loop
mov
xchg
lds
lret
jb
enter
lret
loopne
aaa
mov
daa
shll
imul
cwtl
cmc
xchg
fldt
loop
std
fiadds
mov
lahf
into
ror
mov
imul
pop
pushf
frstor
sub
fstp
adc
ret
or
jnp
cmp
dec
mov
pushf
movsb
mov
mov
lods
mov
test
hlt
sbb
xor
add
aas
mov
xchg
ljmp
or
test
aam
testl
std
loopne
mov
fcomps
or
fisubs
mov
roll
shrb
sub
pop
mov
insl
js
test
dec
lahf
rcll
fiadds
insl
fimuls
int
fiaddl
and
xchg
mov
xchg
lret
dec
loope
or
push
into
mov
xorb
mov
lahf
push
negl
fnstenv
popl
mov
inc
xchg
movl
jg
dec
xor
insb
mov
into
fstpt
fisubl
sbb
jp
jl
adc
pop
push
js
xchg
movsb
fdivs
fists
xchg
sbb
adc
jecxz
lock
cld
ror
loop
cmp
jle
shrb
inc
xchg
inc
nop
xchg
fnstcw
jns
dec
cmpb
mov
imul
iret
insl
in
cwtl
into
std
loop
loopne
es
cmpsb
aas
xorl
fdivrs
ret
in
or
jle
leave
xchg
add
sbb
les
xchg
movsb
enter
mov
dec
fwait
mov
aad
xchg
stc
js
mov
inc
loop
fidivrl
fimuls
shlb
sub
fnclex
into
loopne
or
ret
pop
sahf
ret
ret
out
cmp
lods
and
ret
push
outsb
sarb
mov
jne
lods
lret
mov
movsb
add
es
fdivrl
js
adc
rclb
insb
test
das
fstps
xchg
mov
test
xchg
imull
ret
lea
or
cmp
rcr
sub
jp
cltd
sub
into
mov
lahf
mov
mov
cmpsl
fnclex
dec
inc
or
addl
jle
inc
mov
mov
xchg
sub
les
loopne
inc
pop
cmpl
cmp
fcomp
fxch
mov
dec
cmpb
out
imul
mov
shlb
mov
test
mov
cmpb
adc
xor
aaa
dec
mov
rorb
xor
ret
insb
mov
dec
jmp
push
ja
outsb
pop
mov
or
aam
sub
xchg
jg
xlat
leave
mov
dec
xchg
cmpsb
loop
mov
enter
jnp
subb
mov
jmp
mov
arpl
jp
icebp
fst
fidivl
test
js
mov
test
shr
mov
adc
lock
cwtl
into
mov
sarb
ret
sahf
mov
jnp
mov
pusha
ja
jge
jns
sarl
lods
iret
mov
enter
leave
out
imul
loop
lods
cmp
xor
popf
mov
aaa
imul
dec
push
mov
jmp
ljmp
popa
sti
mov
and
lods
popa
mov
mov
fisubs
fprem
fs
rcr
ret
jle
dec
inc
xchg
mov
je
lods
shrl
jge
stc
jns
out
cwtl
mov
lret
mov
enter
aam
jge
rorb
hlt
fdivrl
xchg
mov
xor
popl
mov
mov
xchg
ficoml
loopne
mov
fnsave
jns
fadds
dec
pop
loopne
sub
jle
enter
adc
ret
jge
into
call
shrb
leave
xor
in
mov
or
je
push
xor
lret
xchg
test
cmp
ljmp
mov
xchg
dec
outsb
mov
xchg
cmp
dec
fstps
cwtl
inc
leave
cs
jp
int
rcl
jge
pusha
fisttpll
lret
fldcw
jnp
int3
xlat
lock
mov
sbb
mov
jnp
mov
and
push
test
cwtl
mov
repz
loop
mov
mov
inc
int3
or
dec
push
push
and
mov
dec
rol
out
es
cmp
js
out
sub
cmp
jecxz
fnstcw
je
cmpsl
repnz
ja
fcomp
test
sarl
aad
roll
mov
pop
mov
mov
lea
fmul
dec
inc
push
xor
mov
stos
fsubl
and
cli
je
add
stos
bnd
divl
adc
or
add
ds
xor
adc
iret
loopne
int3
ja
xlat
leave
rorl
cmpsb
into
jb
shlb
loope
xchg
xchg
int
insb
push
xchg
test
jns
jg
jl
fisubl
loopne
xchg
fdivrs
sbb
loope
ret
int
adc
push
inc
add
mov
dec
int3
xor
shlb
movsb
into
ss
xchg
mov
mov
push
or
mov
ret
pop
outsb
aam
outsb
mov
mov
push
loop
sub
test
cli
outsl
xor
xor
inc
arpl
lret
insb
mov
adc
mov
test
jp
fldl
lods
mov
cmp
fs
mov
out
ror
shlb
lea
or
pop
ss
fwait
mov
inc
sub
int3
mov
fstpt
pop
push
mov
fcoms
enter
test
test
movhps
mov
mov
jnp
jge
mov
loopne
orl
sbb
mov
push
cmpb
dec
dec
mov
dec
fimull
lcall
inc
lods
andl
loope
jle
sub
lret
mov
test
xchg
mov
bound
sbb
inc
lods
inc
pop
insl
loopne
pop
das
subl
or
scas
sub
pushf
cmp
shll
stos
aam
lret
int
pop
lods
sbb
or
out
test
movsb
lods
in
inc
mov
mov
loopne
sub
inc
fidivl
pop
int
pop
fmul
dec
dec
push
rcr
je
ja
or
mov
dec
loop
add
xchg
mov
dec
popf
fsubrs
rol
jne
int
xlat
mov
inc
mov
mov
scas
scas
pop
negb
leave
ja
int3
testl
or
rcl
mov
or
loop
cli
mov
lahf
loope
int
stc
rcr
roll
jnp
enter
dec
lods
sub
lods
jns
jle
ja
subl
insb
xchg
or
loop
push
xchg
fcmovbe
cmpb
sbb
jg
outsb
mov
xchg
add
adc
punpckldq
test
jl
mov
adc
fstp
leave
adc
jp
mov
inc
mov
mov
xor
shrl
mov
loope
dec
xorl
lcall
lods
inc
cmpb
pop
jmp
ljmp
es
pop
cmpl
cwtl
pushf
pushf
movsb
dec
in
shll
data16
add
adc
ror
push
xchg
dec
pop
aad
mov
add
sbb
gs
imul
test
lea
mov
fcom
iret
mov
lds
push
data16
mov
jge
rcrl
inc
call
shl
lods
jne
dec
jb
sub
ret
sub
jecxz
inc
push
add
jae
inc
or
adc
test
xor
sarl
mov
adcl
lea
mov
fwait
idivb
out
nop
sub
lods
cmp
out
pop
nop
es
shlb
test
mov
mov
loop
mov
and
mov
movsl
rcr
scas
mov
stos
sbb
xorb
mov
shlb
sarb
xchg
scas
loop
jg
mov
adc
mov
inc
push
leave
ljmp
test
adc
scas
mov
mov
in
mov
test
mov
adc
adc
xchg
sbb
scas
mov
int
and
js
jns
outsb
mov
dec
cmpsb
jnp
and
mov
inc
fs
lea
adc
jns
mov
mov
or
fnsave
mov
lods
mov
leave
lods
pop
mov
lea
icebp
test
leave
jle
fidivrs
bound
fidivrs
fcomi
adc
js
ret
lods
cmp
cli
call
inc
scas
imul
fdivs
cmp
xchg
pop
mov
and
addl
cmp
mov
loope
cli
and
add
jle
andb
mov
movsb
lock
mov
adc
mov
loope
add
fnstcw
mov
mov
mov
loopne
xchg
fcom
loop
xor
dec
pop
mov
stos
pop
mov
shl
pusha
pushf
shrb
xchg
mov
es
mov
mov
mov
mov
notb
mov
mov
shrl
insb
test
jno
adc
lods
cmpl
or
stos
pusha
xlat
shrl
test
fstpt
jg
iret
xlat
push
inc
or
test
pop
mov
dec
push
sti
in
insb
pop
mov
ret
mov
js
fadds
scas
pushf
movsl
lcall
add
js
inc
lds
shl
add
subl
sarl
jmp
dec
jle
int3
loope
jge
dec
xchg
mov
mov
mov
mov
jp
das
push
inc
ja
scas
sarb
jae
push
xchg
adc
sbb
fbld
shrl
pop
mov
jb
ja
sbb
int
pop
lods
ret
leave
push
in
or
fnstsw
dec
xlat
or
ret
jg
mov
xor
jns
mov
je
aaa
lret
sbb
adcl
fcmove
arpl
scas
xlat
or
mov
mov
cwtl
sbb
mov
es
out
scas
jecxz
cltd
xchg
out
in
xchg
mov
jmp
xorl
mov
mov
loope
js
rcl
or
mov
test
fldenv
inc
inc
xchg
jbe
and
or
mov
mov
shlb
push
sub
bound
test
pop
das
cmp
mov
xchg
mov
mov
push
scas
jecxz
lret
mov
inc
mov
xchg
pushf
jp
mov
lods
pop
inc
sub
cmp
or
mov
push
pop
ret
mov
int3
fimuls
mov
push
iret
orl
movsb
mov
xchg
test
inc
or
mov
insb
mov
inc
mov
lret
cmp
mov
or
shlb
push
fcompl
js
out
mov
mov
mov
rorb
xchg
pop
xchg
lods
jl
fisttpll
pushf
les
cwtl
daa
movsl
xor
dec
mov
aam
sbb
fidivrl
ja
out
sbb
fsubr
ffree
mov
gs
imul
enter
aas
cmp
mov
inc
lods
shll
std
or
mov
mov
mov
int3
mov
repz
xchg
sarb
jns
mov
push
nop
dec
test
gs
test
jge
jp
mov
or
mov
mov
test
mov
dec
add
aam
fdivs
int3
dec
fldt
mov
mov
mov
inc
dec
loope
fstpl
test
mov
sub
mov
adcl
js
and
xchg
ret
jl
pushf
push
xchg
cli
lods
adc
out
jle
into
mov
push
pop
das
int3
xor
js
xlat
mov
lods
lret
mov
arpl
xchg
pushf
lods
iret
mov
mov
js
sarb
jb
test
or
add
lea
clc
lods
push
lcall
addr16
lock
cli
sarb
cmpsb
rcrb
gs
xchg
cli
xchg
fnstsw
imul
and
dec
pushf
mov
outsl
loopne
iret
lret
rcrl
mov
cmp
mov
dec
dec
ret
push
int
test
orb
inc
jp
mov
fs
pop
orl
fdivrs
mov
cwtl
cmp
fnstsw
enter
fnstcw
jns
hlt
shr
mov
mov
fsubrs
xchg
fucom
xor
stos
adc
xorl
jbe
ja
or
mov
mov
cmc
mov
fidivrs
into
test
iret
jp
leave
je
jns
cwtl
mov
mov
jge
mov
loopne
ja
lods
fidivl
mov
enter
out
jp
dec
cmpsb
loopne
mov
mov
fisttps
mov
pop
sub
iret
mov
mov
jnp
loop
cmc
mov
ret
arpl
cmp
andb
out
dec
decl
fldl
lahf
test
xor
mov
jp
sbb
int3
lcall
stos
inc
sub
mov
dec
loop
rcr
test
inc
ret
stc
mov
jp
frstor
jle
ret
mov
scas
dec
pop
scas
scas
add
jno
cltd
or
ss
movsl
sarl
outsb
sbb
push
enter
test
mov
mov
test
mov
iret
stos
inc
adc
pop
loop
sub
dec
mov
adc
mov
neg
call
xlat
fcompl
pop
jbe
iret
out
xchg
enter
xchg
and
lret
inc
shl
jno
add
les
fidivrs
xchg
fsubl
enter
aad
sbb
rolb
sbb
mov
mov
add
pop
in
sbb
jp
in
adc
cmc
jbe
jb
cli
pop
aas
loopne
testl
aad
shll
mov
aam
lock
sbb
cmp
in
test
orl
mov
push
cmp
scas
rcr
jnp
js
mov
inc
jp
mov
loope
xor
adc
scas
mov
jp
and
scas
leave
adc
in
mov
mov
call
jecxz
jl
cmp
xor
jno
scas
adc
dec
pop
inc
cmp
lcall
rcrl
or
enter
and
sti
movsl
fnstsw
mov
jne
xchg
pop
xlat
rorb
pavgw
push
fdivrs
ficompl
cmp
into
jnp
repnz
cli
push
cli
push
inc
loop
lahf
inc
mov
fcompl
imul
xchg
popf
mov
mov
aam
mov
jge
inc
or
xor
xor
or
cmpl
xchg
dec
iret
lret
mov
test
mov
es
sti
rcrb
cmp
pop
sarb
xchg
hlt
mov
push
lds
js
lcall
ss
outsl
and
push
rolb
mull
roll
rclb
iret
add
lods
fsubrl
ds
push
push
mov
pop
mov
xorl
into
sub
sbbb
jl
scas
out
fists
inc
mov
xchg
out
ret
out
stos
mov
loope
icebp
js
and
sbb
pop
es
out
fidivl
test
lret
mov
mov
sbb
test
or
or
sbb
sub
mov
shrl
ljmp
jne
out
loop
push
call
icebp
faddl
jmp
pop
and
ficompl
rorl
pop
jb
out
shr
pop
fidivrs
enter
push
and
xor
aam
mov
fnsave
std
in
jne
mull
and
fcomp
jmp
jno
jmp
es
sbb
and
ds
and
sbb
lahf
subb
iret
in
leave
mov
and
out
call
ret
rcl
sar
test
pusha
es
pop
and
inc
lahf
aas
std
shr
scas
pusha
mov
jle
push
pop
sbb
insl
sbb
xor
mov
in
mov
es
inc
test
int3
fnstenv
call
ret
adc
out
es
adcl
and
xchg
and
pop
test
push
pushf
xor
pop
mulb
and
xlat
mov
jle
jae
in
in
sub
sbb
shr
daa
jg
mov
addr16
aad
cs
mov
sbb
xor
es
mov
lds
add
shlb
leave
inc
ret
mov
mov
call
es
or
mov
xor
pop
iret
ja
es
pop
sarb
loope
jb
add
es
shr
aas
int
mov
and
cli
fsubrp
sub
es
jecxz
icebp
hlt
mov
es
pop
fmul
inc
in
es
in
into
cmp
es
pop
into
inc
mov
repz
lock
icebp
out
adc
dec
ret
jge
xlat
lahf
or
loope
add
mov
int3
scas
inc
or
ss
mov
lods
jo
sbb
mov
fnstenv
jno
xchg
jl
iret
roll
shrl
ret
jmp
jl,pt
js
ret
mov
aas
pop
mov
js
mov
mov
rol
lods
mov
fmul
and
fadd
stc
incb
mov
push
mov
xchg
test
jge
cmp
lahf
fdivr
fdivl
aad
lods
sbb
dec
fyl2x
ja
and
aad
mov
cmp
mov
jle
into
aam
test
ror
fidivrl
rcr
cmpl
fidivl
stos
sti
mov
roll
push
mov
fdivrl
dec
shlb
inc
adcl
stc
js
shrb
scas
sarl
orl
fnstsw
jge
fdivl
mov
lret
fidivrs
enter
mov
addb
shrb
mov
cmpsl
jge
jle
add
loopne
test
mov
mov
jno
cwtl
jg
mov
mov
pushf
pop
imul
test
pop
jg
and
loope
aam
leave
es
pop
add
loopne
jp
jle
add
les
outsb
jge
jbe
jp
fs
movsl
mov
in
lods
pop
aam
cld
loop
js
mov
fsubrs
mov
mov
mov
sarl
movsb
or
es
outsb
mov
push
sbb
clc
imul
sub
adc
sbb
or
lahf
cmc
sar
cmc
jle
in
jle
fcmovu
filds
ret
ja
push
xchg
mov
aad
jnp
xor
jg
into
sbb
not
lods
lahf
xchg
inc
jae
sbb
movsb
testb
fcompl
mov
pop
popf
mov
js
sbb
in
mov
and
jae
sub
cmc
cmp
jge
shr
test
inc
jae
in
es
add
mov
cmc
mov
cld
loopne
fdivrp
push
es
add
cmpsb
jg
add
scas
sbb
fpatan
push
xlat
daa
lods
jo
in
loopne
pop
adc
out
jmp
dec
fcmovu
lock
mov
jne
pop
es
fistpl
rcl
outsb
mov
sbb
mov
sbb
cli
ja
jbe
pusha
inc
loop
mov
jmp
daa
mov
xor
and
leave
fnsave
pop
lods
fs
xlat
jbe
adcl
jbe
mov
int3
icebp
push
les
rol
mov
ja
ret
adc
mov
mov
fldl2t
push
rolb
aad
lods
sbb
bound
test
mov
add
ret
xlat
ret
shl
les
sarl
test
daa
rcrb
lods
jg
jle
or
scas
scas
fcmovu
xor
fwait
ret
mov
adc
loop
int
dec
mov
or
pusha
test
mov
int
mov
jp
adc
iret
das
mov
dec
cmp
lahf
lock
mov
fdivrs
enter
jns
mov
ret
dec
loopne
fistpll
shrb
test
mov
xchg
pop
mov
aam
gs
cwtl
into
enter
mov
ja
pop
int
or
adcl
inc
loopne
xor
outsl
or
shr
jl
jecxz
scas
mov
mov
and
fdivl
repnz
mov
loop
dec
jp
mov
sarl
movsl
int
ret
lods
dec
fwait
jmp
aad
push
xlat
mov
popf
jb
jmp
mov
cmpsb
jmp
push
js
adc
add
rcl
fldl
mov
jle
dec
or
lods
ret
test
xor
test
ficoms
mov
fstl
daa
fstps
jge
xlat
fisttps
lods
adc
jmp
jne
lods
ret
jl
fisubrl
rol
int3
aam
test
pop
lock
mov
ret
test
xchg
mov
mov
dec
fadd
mov
push
xchg
fsubrl
xorb
cmp
movsl
loop
jnp
xor
sarb
mov
adc
mov
enter
shlb
es
push
lfs
out
cmp
test
xor
loop
jb
sbb
rcrb
push
aam
mov
rolb
mov
sbb
fldcw
scas
sbb
loope
inc
mov
test
fld
test
sahf
into
shl
das
mov
ret
rcl
jg
iret
cli
mov
jl
mov
rcl
mov
cmp
jb
sahf
into
mov
repnz
mov
fistpll
mov
nop
test
add
sarl
loop
iret
mov
filds
push
mov
fnsave
repnz
andb
add
jge
jns
ljmp
iret
fxch
into
or
mov
push
andb
add
mov
mov
jb
xlat
inc
pushf
js
fsubrs
into
enter
mov
scas
mov
mov
jecxz
mov
mov
mov
fiaddl
fists
fbstp
aam
or
test
scas
cmp
mov
inc
pop
fistpll
mov
cmc
test
loop
in
mov
jecxz
fucom
fdivrl
push
sub
cmp
loopne
jge
sti
jbe
mov
rorb
lods
ja
scas
mov
and
mov
loop
adc
scas
jns
inc
stos
into
leave
mov
movsb
mov
shrb
neg
stos
pop
enter
mov
dec
xchg
mov
loope
mov
add
jge
enter
mov
js
scas
aam
mov
scas
xchg
push
loop
push
stos
jge
push
popa
int3
roll
scas
outsl
xorb
es
int3
push
ficoms
inc
movaps
sub
leave
cmc
mov
sbb
fcomp
aas
mov
insl
xor
sahf
and
sub
js
mov
jns
test
mov
mov
jp
jl
js
mov
fwait
scas
mov
bound
push
pop
push
mov
cwtl
sbb
xor
out
adc
jge
adc
in
jle
xchg
mov
in
cmpsl
int
sub
in
dec
mov
fcmovnbe
inc
mov
leave
mov
sarb
sar
inc
nop
cmpb
ljmp
add
cmpl
xor
mov
insl
leave
les
fnsave
mov
cmp
or
loope
jle
leave
sarl
mov
adc
pop
mov
mov
loop
dec
sahf
test
push
mov
xor
xchg
aam
faddp
adc
jnp
cmp
lock
xchg
mov
into
es
jp
daa
xlat
sarb
and
aam
sbb
jle
jno
mov
dec
shl
mov
cli
inc
in
dec
jl
dec
inc
jns
sbb
mov
cmp
loope
js
lods
add
jns
cmp
das
clc
iret
arpl
call
cli
mov
dec
fmul
shll
ret
movsb
dec
aad
jl
inc
jle
jns
jbe
sar
mov
es
sub
push
push
xchg
mov
loop
sub
or
loopne
mov
stos
or
insb
rcl
inc
lahf
jle
add
lret
jns
jp
inc
nop
inc
test
aaa
and
inc
ret
stos
fcomi
leave
fidivs
dec
test
imul
cltd
fsubp
fbstp
jecxz
mov
loopne
mov
cmc
arpl
fdivrl
cli
std
ror
mov
loop
sbb
mov
decb
cmp
cs
negl
pushf
shrb
shr
enter
ja
jbe
mov
push
add
dec
fnstcw
xchg
inc
sarb
push
or
xchg
fcmovnb
sub
xorl
aad
ja
or
or
mov
dec
pop
pop
jae
rorb
rcr
mov
pop
pop
out
xchg
loopne
mov
mov
ljmp
mov
inc
xchg
add
jg
jns
int
loop
rcl
jmp
mov
mov
xchg
aad
mov
fcmovnbe
lret
adc
mov
mov
jg
fld
enter
cmpb
iret
fcmovu
lods
fiadds
insb
mov
jle
inc
lods
test
mov
iret
rolb
leave
jge
jl
mov
jae
mov
jg
jle
mov
aad
enterw
rcr
adc
test
jle
sarb
leave
dec
rorl
loop
mov
xchg
jns
aam
faddl
xchg
and
iret
je
aad
enter
fistl
pop
adc
fbld
data16
xlat
mov
jl
scas
cwtl
mov
imul
jle
out
dec
sub
enter
stos
ss
and
adc
cwtl
enter
stos
int3
fidivrl
cmp
jle
jns
sbb
jl
mov
or
aaa
push
cmp
fnstcw
ret
test
mov
stc
mov
test
leave
mov
jns
push
int
xlat
mov
mov
fstpt
movsl
shll
sbb
ljmp
shll
loop
les
inc
xchg
or
jg
lods
push
inc
mov
nop
je
mov
jecxz
mov
cmp
push
push
enter
push
aam
jns
push
mov
ljmp
mov
mov
gs
rcrl
mov
mov
pop
shrl
adc
fmul
imul
and
pop
ljmp
push
jle
addl
jnp
xlat
fs
outsb
imul
movl
xor
mov
into
mov
lods
js
jge
pop
rcr
mov
in
ds
mov
popf
movsl
mov
shll
mov
loopne
pushf
int
dec
jl
cmpl
rcl
loopne
and
push
scas
adc
stos
jecxz
bound
fcoms
sbb
xchg
shl
xchg
jno
ret
xlat
fists
mov
fmul
or
call
test
add
notl
shrb
ret
xor
jle,pn
rcr
jo
fidivrl
lret
popf
mov
mov
inc
dec
xor
mov
jmp
loopne
push
por
rcr
sahf
add
fisubrl
fistpl
test
adc
imul
mov
and
aam
es
mov
into
rcr
enter
testl
jge
mov
inc
xor
push
mov
mov
cmpsb
jae
rol
pop
mov
push
xchg
push
and
aam
mov
enter
cmc
mov
sbb
cmpsb
cmp
cld
jb
sbb
cmpsb
jg
fistl
loop
sub
rorl
mov
lods
cmpb
jge
loopne
mov
ret
mov
aam
mov
into
mov
add
fwait
lret
leave
gs
and
cmp
call
insb
roll
iret
adc
test
push
mov
sbb
mov
enter
mov
jge
inc
pop
xchg
mov
inc
scas
sbb
jmp
or
pop
or
ret
insb
aas
cwtl
mov
mov
sub
adc
fcmovu
xorl
das
dec
push
fstps
mov
rorl
dec
push
ja
and
dec
jnp
jbe
shrb
xchg
sarl
mov
pushf
cmpl
xor
sbb
fwait
push
jbe
mov
dec
push
ja
jl
je
bound
adc
mov
cld
jp
ja
fistpl
mov
sarl
xor
mov
mov
mov
adc
lret
ss
xchg
ret
jg
and
add
inc
faddl
imul
loopne
fcmove
in
lods
dec
hlt
shrb
scas
rol
dec
les
orl
jl
mov
je
das
pop
clc
shrb
fwait
mov
rol
lods
jns
movups
lods
mov
out
xchg
jnp
jae
mov
mov
push
test
and
xlat
sti
jle
cmp
lods
aam
mov
jl
scas
jmp
fisubs
out
fwait
popf
xor
loop
shrb
lods
push
mov
jns
sbb
mov
xchg
iret
in
mov
iret
ja
leave
lret
or
inc
pop
lods
ror
mov
dec
movsl
dec
jge
jnp
and
xor
js
subl
rcll
adc
inc
inc
jae
ficoml
ret
xlat
loop
rcrb
inc
pop
bound
push
shrb
pop
pusha
xchg
xchg
and
ja
sub
rcl
dec
test
pop
shlb
jns
and
mov
dec
xlat
push
scas
outsb
int
xor
mov
scas
inc
mov
fldl
mov
out
xor
cmp
jmp
mov
addr16
addl
cwtl
cmpl
loope
ret
mov
mov
mov
loop
int
mov
iret
sbb
mov
and
sbb
or
stos
lret
aas
je
mov
jge
enter
mov
jns
ss
mov
cwtl
frstor
mov
fcmovbe
fmul
xchg
inc
shl
jmp
dec
sbb
mov
fidivs
int3
xorl
or
mov
leave
enter
shll
push
test
xor
xrelease
mov
shrl
ret
pop
mov
dec
sbb
inc
inc
or
add
jns
icebp
fmul
lcall
inc
xchg
loop
fstpt
mov
lods
or
push
subb
push
loopne
cmp
fimull
shll
mov
push
test
mov
mov
jb
xor
loope
aas
movsl
add
outsb
shlb
cmpb
pop
mov
push
int
mov
ret
test
mov
or
out
xor
and
insb
fwait
push
jbe
fistl
mov
shll
mov
mov
ficoms
cmpl
mov
adc
subb
sbbb
xchg
cmpsl
into
mov
sarb
ja
mov
mov
jg
fisttps
mov
in
mov
jecxz
sub
cmp
je
gs
mov
xchg
lock
enter
cmp
or
ret
dec
cs
inc
mov
mov
jbe
jns
popa
int3
add
cwtl
sbb
jmp
lods
jns
ds
cli
pop
xchg
loop
jns
fisubrl
test
jge
mov
rcr
fisubrl
ret
dec
pushf
scas
ja
or
mov
dec
mull
jecxz
and
enter
lahf
popa
mov
aad
lods
lds
and
movsb
mov
lret
iret
fistl
into
leave
mov
shr
mov
mov
mov
in
push
ret
inc
aad
push
lret
xchg
mov
mov
gs
pushf
adc
pop
imul
mov
test
mov
es
xchg
mov
aaa
aam
jp
iret
in
dec
push
jle
pop
jecxz
mov
dec
ljmp
adc
fldcw
adc
pop
or
mov
scas
test
xor
sahf
jle
shl
mov
outsb
into
int3
cmc
movsb
jge
xorb
mov
mov
cmpsb
sbb
test
cmp
and
aaa
imul
inc
cli
lcall
lods
sti
pop
leave
fdivrl
adc
sub
jp
mov
sub
jp
insb
aad
jg
jecxz
mov
test
or
dec
jo
nop
mov
cmp
fidivrl
fmull
jb
mov
aam
add
shlb
aam
push
stos
in
lods
lods
and
fdivrs
sbb
xor
xor
sbb
or
push
lret
test
xchg
fcomp
mov
xchg
out
pusha
xlat
xchg
or
sbb
and
scas
mov
mov
inc
negl
ret
mov
orb
push
cli
ret
or
xchg
aam
scas
scas
mov
fimull
mov
fsts
mov
fmul
fimuls
stos
fcmovu
shlb
addl
shlb
sub
mov
scas
fsub
sub
icebp
loope
pop
xchg
lret
add
jb
push
fidivrs
je
xchg
jns
imul
rcr
ret
das
popf
sub
cmpsl
sarb
scas
mov
sahf
scas
dec
or
adc
cli
lock
sub
dec
ljmp
mov
leave
xchg
mov
jle
addr16
sbb
aam
subb
sahf
test
mov
xlat
loop
sub
mov
mov
into
cwtl
loopne
adc
jmp
jp
add
decl
loopne
sarb
or
pop
cmp
sub
ror
mov
inc
movsl
cmpsl
pop
mov
xchg
or
mov
lret
iret
mov
mov
or
leave
jmp
aad
nop
out
shll
rorl
scas
in
mov
jge
inc
cmp
ret
scas
ret
rcr
cmp
mov
loop
insb
pop
fwait
int3
faddl
xchg
inc
mov
mov
or
or
int
mov
loope
cmpsb
scas
enter
or
fildl
fwait
mov
scas
clc
push
mov
addl
push
loope
sub
jge
lahf
cmpl
mov
mov
cltd
jbe
loop
adc
into
fcmovnbe
jg
xchg
adc
pop
pop
nop
pop
sar
mov
int
mov
les
mov
ljmp
rcl
test
jl
push
fcmovnbe
push
or
mov
ss
sub
mov
or
jecxz
adc
clc
mov
aam
test
lret
scas
sub
push
es
xor
mov
shlb
scas
dec
adc
mov
idiv
aaa
adc
loopne
scas
xor
scas
dec
imul
inc
pop
cmpl
subb
mov
mov
mov
fs
jge,pn
xchg
jl
loope
mov
rcl
mov
adc
jmp
into
js
lcall
mov
sbb
jnp
and
fdivrl
into
fidivl
dec
xor
std
xor
scas
mov
mov
jp
sti
or
subl
mov
shl
dec
sub
ror
fcmovu
sub
lods
adc
inc
fwait
lods
int3
mov
mov
aas
imul
aam
ret
jmp
sbb
xchg
jle
mov
jecxz
push
inc
mov
sbb
loop
fmuls
mov
dec
int3
into
or
test
cli
mov
scas
int
push
mov
jnp
mov
lds
aam
icebp
sbb
js
sub
cli
cmp
rcrl
iret
ret
xchg
xchg
into
enter
mov
fcmovbe
or
fldcw
mov
sub
mov
mov
mov
out
jg
fidivs
fistl
mov
mov
repz
pop
fstpt
xorb
fcmovbe
dec
ja
jns
push
mov
ret
movsl
jmp
cmp
mov
scas
push
cmp
loopne
or
shll
fistpl
mov
mov
add
cmpb
rcr
shrb
inc
mov
fnstenv
into
push
lret
adc
hlt
jmp
sbb
lahf
imul
faddl
xchg
mov
iret
int
add
pop
loop
or
fistps
insb
mov
fisubrs
pushf
mov
xor
mov
inc
adc
stos
scas
ja
cmp
cli
xor
push
pop
cwtl
mov
insb
ljmp
jmp
mov
es
pop
cmpsl
es
mov
mov
ret
mov
mov
jg
js
mov
cld
loop
scas
mov
rolb
sbb
mov
stc
fimull
dec
mov
scas
xlat
dec
sub
mov
loop
and
sbb
jg
mov
test
aad
adc
lods
or
shrl
mov
js
shrb
rclb
outsb
int3
mov
xchg
and
test
aaa
addps
ds
dec
xchg
jle
cli
loop
and
filds
xchg
jl
mov
pushf
sbb
mov
test
mov
xchg
out
or
mov
mov
mov
not
and
js
test
mov
ja
fiaddl
xor
loop
test
aam
and
jmp
mov
mov
ficompl
jecxz
jp
pop
mov
xorb
xor
cmp
lods
fidivrs
jne
aam
mov
rcrl
jge
outsb
cmpsl
enter
cli
loopne
jns
ja
pop
pop
je
dec
mov
jecxz
push
mov
pop
enter
ljmp
rorb
loopne
insb
inc
lea
cmp
fadds
subb
and
sarb
lods
mov
adc
mov
stc
xchg
jne
push
popa
bound
jecxz
into
movsb
jle
pop
jge
jne
test
dec
push
scas
ljmp
sti
leave
jl
aad
xchg
shll
jnp
hlt
jne
pop
aas
clc
lods
mov
pop
mov
ret
enter
loopne
sub
sarl
int3
mov
out
sub
mov
inc
push
ret
fidivrs
pop
pusha
lods
mov
jl
inc
cld
into
scas
dec
cli
xorl
rcr
rcrl
mov
out
es
insl
hlt
cwtl
enter
inc
jo
mov
fdivrl
ja
adc
popa
jmp
jns
shrl
mov
pop
cld
clc
inc
jo
and
nop
imul
lds
aas
lock
stos
add
shl
mov
sub
imul
xlat
sbb
testb
xchg
xor
lret
fnsave
jo
pushf
int3
rcl
dec
sub
int
mov
test
out
push
or
sarl
lods
dec
leave
lods
rclb
insb
loop
xchg
outsb
test
pop
jns
loope
jp
loop
enter
scas
push
lahf
leave
ja
add
jecxz
mov
xor
scas
mov
sar
or
sbb
fcom
mov
loop
mov
cmc
stos
push
add
jge
ret
out
mov
es
mov
icebp
aam
loope
dec
dec
jge
mov
out
xchg
lods
int3
scas
or
jl
adc
sbb
jo
mov
dec
hlt
mov
dec
sub
jo
push
dec
sub
into
cmp
pop
mov
or
ret
and
imul
mov
out
insb
inc
cwtl
mov
ret
xchg
inc
int
mov
mov
sbb
or
test
mov
jbe
insl
mov
add
je
mov
loop
dec
mov
add
jle
pop
xor
xor
ret
into
jecxz
dec
mov
pop
mov
fsubrs
mov
lods
test
add
adc
mov
fmuls
jbe
xor
push
mov
jl
loop
inc
xchg
js
ret
mov
subl
and
bound
mov
mov
cld
mov
fnstsw
xor
fdivrs
jns
dec
call
add
cli
jle
mov
ret
mov
inc
xlat
dec
dec
rorb
sar
sub
sub
ret
mov
ja
jns
dec
cmp
fbstp
jp
ss
icebp
push
int
leave
xchg
xorl
inc
ds
mov
int
mov
mov
shll
inc
mov
test
lds
test
dec
loopne
jns
sub
xchg
imul
and
xchg
js
sub
adc
adc
test
push
xor
loop
mov
movsb
js
mov
fbstp
pushf
mov
or
mov
jns
hlt
xor
mov
xor
jge
loopne
pusha
jmp
js
ja
into
mov
mov
dec
mov
mov
pop
adcl
adc
push
fidivrl
movsb
lods
clc
mov
sbb
jle
jle
adcl
cmp
icebp
ret
jnp
cmp
adc
std
jb
jle
popf
or
jl
mov
sbb
jmp
cmpl
out
jl
adc
mov
sarl
sub
adc
fdivrl
ret
cmp
scas
ficoms
cmp
es
repz
leave
or
pop
mov
iret
mov
cmp
sbb
lcall
popf
adc
or
lods
sub
fildll
fst
mov
mov
jecxz
cmpl
xchg
lret
cmp
loop
push
movsl
jl
fbld
mov
imul
adc
inc
dec
mov
dec
popa
jns
int
sub
dec
xlat
popa
mov
mov
fwait
jge
mov
fiaddl
or
mov
mov
add
jge
fidivs
enter
rcrb
jg
fidivrl
mov
pop
sbb
int
aad
fistl
jbe
movsl
and
shll
aam
add
mov
xor
aad
imul
push
inc
fisttps
in
xor
movsl
mov
fnsave
jl
sub
ud1
or
je
pop
jo
mov
test
cmp
mov
push
cld
and
es
mov
scas
pop
cld
jb
scas
shlb
test
or
pop
es
sar
enter
pop
cmp
jmp
sbbl
aad
sbb
out
push
push
jbe
cmp
jae
pop
leave
iret
cli
mov
or
push
cld
fwait
mov
test
mov
fisttpll
addl
int3
ss
lahf
fmul
scas
imul
sahf
addb
test
stc
cmpxchg
stc
js
push
mov
push
test
adc
dec
mov
insl
mov
dec
out
popa
mulps
mov
pop
cli
and
aad
sbb
push
mov
imul
cmpsl
insb
stc
cmpsb
jg
mov
loopne
ds
jle
xchg
sahf
aam
clc
aad
loop
loopne
adc
jp
jle
bnd
cmp
call
iret
sbbb
scas
and
xor
rclb
ret
test
pop
loopne
scas
push
xchg
int3
lods
mov
xchg
lods
add
jne
jb
lods
shll
cmpsl
movl
cmp
out
sbb
jno
mov
rolb
push
out
rcrb
add
es
xor
or
in
roll
lods
pop
fcmovnbe
cmp
addr16
xchg
mov
es
jle
cmpb
mov
rcrb
out
es
ret
xorb
shll
pop
icebp
cmpxchg
mov
stos
sbb
xor
adc
xchg
ret
xor
sub
and
enter
jne
out
mov
fidivl
scas
imul
rcl
mov
or
add
jg
scas
outsl
sarb
hlt
nop
push
and
fcomi
pop
dec
adcb
aad
shlb
fcomi
pop
xchg
es
out
lods
jle
and
rcrb
out
es
fst
jle
cmp
dec
lods
add
je
jle
push
inc
mov
pushf
into
scas
shrl
mov
pop
rcr
aas
jge
or
loopne
dec
pop
xorl
loope
mov
mov
fnstcw
or
loope
push
js
xchg
aam
sub
or
int3
loope
jmp
daa
fcoml
push
js
shrl
sbb
flds
and
in
pop
push
mov
mov
jge
into
fdivp
and
ret
loop
scas
jle
js
mov
mov
sbbl
ret
ja
cltd
mov
lods
sub
xchg
test
test
loopne
jecxz
jg
out
push
lret
cmp
xor
add
xor
mov
into
stc
ret
test
jecxz
xchg
popa
fcoml
xchg
es
mov
int
rorb
outsb
shrl
mov
loop
xchg
scas
xlat
and
mov
scas
insl
call
imul
mov
inc
je
lret
shlb
ja
fildl
scas
mov
adc
and
jp
ffreep
ljmp
ret
rcr
dec
dec
insb
adc
jg
jns
or
loop
test
mov
cmpl
in
mov
mov
shll
shr
fcmovu
inc
jb
int3
add
xlat
in
leave
icebp
inc
adc
pop
scas
dec
mov
mov
jg
lods
iret
test
xchg
mov
ret
lods
ja
je
jns
jp
ret
sub
jecxz
fidivrs
mov
cmpsb
pop
mov
adc
mov
notb
xchg
sarb
mov
and
fstpt
mov
ja
in
adcb
mov
roll
jb
mov
inc
push
mov
ret
out
mov
sub
jle
mov
pop
fcmove
hlt
mov
jp
subl
cli
insl
jmp
dec
inc
dec
cmp
mov
mov
subl
clc
jnp
fstpt
xor
xchg
dec
je
adc
lret
lods
js
sbb
addl
mov
inc
dec
and
jbe
jb
xchg
mov
jle
jge
mov
fnstcw
fucom
leave
xorl
xchg
push
test
jmp
aaa
dec
shl
mov
fstpt
imul
or
shll
inc
adc
dec
ror
jns
pop
mov
rcl
jge
in
jmp
sbb
shrl
mov
sub
fildl
out
stc
mov
shrl
dec
sbb
mov
loop
mov
out
inc
or
mov
dec
push
cmpl
or
lret
mov
loop
xor
fwait
rcll
or
pop
mov
or
jbe
sarl
jp
cmpsl
imul
inc
mov
ffree
loop
flds
xlat
pushf
sarb
xor
adc
push
xchg
loope
mov
adc
imul
xchg
rorb
xchg
stos
test
jns
fistpll
xor
lret
test
mov
dec
or
jp
mov
mov
xor
es
pop
pop
sub
pop
lods
adc
mov
mov
sarb
mov
fnclex
mov
or
sbb
data16
rolb
popa
loop
fbstp
lret
add
rolb
loop
pop
and
jns
pop
mov
fisttps
scas
std
adc
movsb
fdivl
loop
rorl
scas
cmp
aam
jl
rorl
mov
mov
fnstsw
sarl
lret
dec
lods
fmulp
outsb
es
jb
out
push
bnd
pop
lcall
xchg
jns
jle
or
fmul
shlb
xchg
ret
mov
loop
push
sbb
mov
xchg
mov
or
mov
push
adc
mov
jl
shl
es
add
std
dec
daa
loop
inc
fisttps
xlat
mov
mov
jle
or
xor
aaa
fists
mov
mov
enter
fdivrs
jae
xlat
mov
mov
data16
adc
or
xchg
ja
andb
ret
fcmovnbe
mov
push
loopne
sbb
mov
mov
or
test
fsubp
push
ss
pushf
mov
fildl
mov
mov
mov
add
pop
fdivrs
xchg
shr
fdivrs
rcr
mov
movsb
push
orb
ret
ret
idivb
data16
xor
dec
out
repnz
outsb
ror
lahf
mov
pop
pop
or
loop
call
test
ja
mov
jecxz
imul
cmpsb
sarb
inc
fistpll
shll
pop
pop
or
and
xchg
loop
fxch
xchg
icebp
xchg
inc
out
cmpsb
rolb
leave
cmp
mov
loopne
shll
add
xchg
mov
xchg
js
mov
adc
xor
cwtl
daa
callw
add
leave
add
push
mov
rcl
test
add
jnp
jle
in
test
xor
divb
cmp
lods
adc
int
loope
cmp
enter
mov
push
push
xorl
push
iret
rol
pop
xchg
mov
mov
fstpt
mov
add
xor
mov
jl
sbb
insb
or
fdivrs
addl
mov
push
shrb
mov
xchg
xorb
ja
jecxz
jbe
popa
scas
jns
pop
enter
inc
xor
lods
push
mov
imul
mov
rcr
mov
push
mov
dec
orb
dec
fstl
pop
arpl
ror
sub
outsb
ret
movsb
subl
loopne
int
ret
ror
enter
add
scas
fdivs
mov
cmpsb
shll
xchg
jb
loope
mov
ja
sbb
mov
jmp
je
scas
xlat
rcrb
mov
inc
test
mov
fwait
jl
lods
shll
xor
ror
fstps
sahf
movsb
fs
cmp
mov
dec
in
lods
jnp
movsb
ja
sbb
scas
aam
mov
rcll
fidivs
sahf
sbb
lods
or
jne
js
ret
cltd
xchg
adc
faddl
cltd
jl
jne
xlat
fsubrl
inc
sbb
test
inc
or
fidivrs
cmpsb
rcr
pop
add
les
mov
lods
test
xlat
or
sbb
fwait
mov
mov
jnp
jl
sarb
cli
insb
in
sbb
mov
mov
outsl
insb
loop
dec
jne
add
pop
inc
push
mov
pop
lret
in
lods
out
xchg
jnp
adc
test
jle
mov
inc
fwait
lcall
lds
cli
sub
mov
std
jnp
mov
jg
test
pop
and
mov
sub
ret
fcmovnu
fwait
sbb
lret
jge
fldl
shrl
mov
dec
out
enter
loopne
imull
mov
mov
psraw
loop
dec
xchg
test
jp
inc
push
adcb
scas
cmp
lea
or
int
mov
jne
adc
xchg
add
pop
sub
jne
sarl
movsb
int3
or
sbb
shlw
fadds
js
xor
jp
xchg
scas
fimull
push
iret
fcmovnbe
test
ret
test
es
ret
or
mov
js
sub
mov
call
lea
sarb
mov
jb
rcr
je
jp
xchg
ror
and
xlat
mov
rcr
jle
mov
scas
lods
mov
xorl
xchg
outsb
xor
in
pop
mov
loopne
loope
cmp
jle
inc
xchg
fisubrl
xor
sbb
and
mov
je
cmpb
enter
sbb
mov
lahf
shl
es
mov
pop
lds
sub
mov
sbb
jne
mov
jne
dec
andl
mov
fidivs
or
cwtl
pop
inc
stc
adc
jmp
into
fmul
jle
imul
dec
fildll
add
addb
out
mov
loop
lods
lods
mov
rolb
rcll
adc
into
cwtl
cmpsb
sbb
lahf
lods
movsl
xchg
aam
mov
jg
jo
sbb
mov
xlat
scas
jl
lcall
cwtl
aam
loope
sub
or
jbe
aam
test
jle
xchg
pushf
lods
xlat
sub
ret
fwait
mov
jecxz
fdivrs
scas
jecxz
and
dec
subl
dec
adc
daa
jnp
pop
mov
sub
jg
cmp
enter
fnsave
daa
jp
int3
pop
test
mov
xchg
test
hlt
xchg
cmpl
jp
imulb
ret
mov
dec
mov
pop
mov
cmpsl
pop
dec
loop
sbb
into
mov
jp
aam
jg
jns
test
xlat
jnp
push
push
mov
hlt
sbb
leave
jp
shrb
sbb
mov
aam
rclb
mov
cmp
into
shl
loop
fistps
mov
cmp
loop
rol
in
mov
mov
or
subl
js
inc
rorb
test
out
repnz
fmull
fnstenv
ja
cli
pop
sbb
sbb
cli
mov
fimuls
iret
roll
fnop
test
add
mov
ja
push
mov
sarl
jns
mov
sub
stc
mov
mov
mov
ljmp
orb
adc
outsb
ret
aad
pop
loope
mov
adc
mov
push
jmp
mov
cmp
sbb
mov
dec
push
xchg
stos
rcrl
jne
mov
test
stc
sub
xchg
ret
repnz
and
out
inc
mov
jg
jns
into
xchg
loop
mov
add
enter
sbb
sub
scas
aam
push
idivl
sbbb
fidivrl
mov
ljmp
loope
mov
lods
pop
rol
sbb
lea
notl
repnz
mov
stos
sbb
sbb
test
add
ret
mov
bound
push
or
lods
nop
shll
jmp
in
pop
mov
push
push
ret
mov
adc
js
ret
mov
push
ret
loopne
ss
mov
fisubrs
add
ret
add
jl
iret
push
fnstcw
into
je
add
iret
rcr
outsb
lock
cli
fiaddl
fistpl
jne
lods
mov
icebp
outsb
js
jne
jnp,pt
push
lods
mov
and
mov
gs
lea
cltd
mov
lea
stc
dec
into
jge
dec
icebp
int3
mov
outsl
pushf
ficomps
and
or
aas
adcl
lahf
inc
imul
aad
int
loopne
cmp
mov
out
or
lds
mov
pop
pop
int
jge
iret
fnstenv
stos
xchg
jle
push
adc
jle
cs
fcoms
aam
fidivl
mov
and
push
sub
mov
enter
or
add
push
je
mov
test
xlat
out
xorb
iret
and
cmpsl
lods
fsubp
sbb
sbb
ja
mov
or
lcall
mov
mov
mov
cwtl
iret
in
into
rcl
fcoml
jle
sbb
jg
stos
xlat
mov
bnd
xor
scas
fstpt
mov
adc
fadds
rcl
add
subb
push
shrl
mov
mov
cwtl
les
iret
loop
jb
jns
mov
into
adcl
fwait
jbe
enter
inc
xchg
movsb
add
sbb
jns
lods
lods
fldcw
cmpps
jecxz
jbe
fnsave
xchg
mov
dec
test
enter
test
mov
push
sbb
xchg
fistpl
sti
ss
scas
rcrl
cmp
lahf
data16
fucom
fcoml
cmpsl
inc
iret
fists
cmp
sub
xorl
mov
push
adc
lods
mov
ljmp
sub
test
jg
ret
and
lahf
and
lahf
mov
xchg
outsb
add
lods
or
int
cli
ret
mov
inc
ret
rcrl
dec
xchg
lods
roll
outsb
rcrb
ret
mov
jnp
xchg
int3
mov
cli
adc
ficompl
jle
sbb
aas
rorb
adc
dec
mov
sbb
rcl
or
jno
fisubl
lds
mov
mov
aaa
lds
jge
cmp
pop
inc
jbe
add
add
imul
enter
or
test
test
lods
push
rcr
ret
adc
ret
je
mov
es
cwtl
fidivrs
sbb
mov
mov
dec
loopne
push
xchg
mov
loopne
add
pushf
sahf
fdivr
test
nop
push
mov
dec
adcb
xchg
roll
jp
leave
dec
ds
sub
int
ss
fnstenv
sbb
rcr
inc
call
addr16
mov
xorl
mov
cmp
push
leave
call
lret
jp
jecxz
mov
ds
adc
xchg
int
es
test
bnd
pop
and
test
cltd
jns
sub
pusha
jge
jne
ret
insl
add
jo
jae
flds
jg
lods
lret
test
fistps
push
leave
sub
lds
test
xchg
ret
mov
jp
sub
sub
loope
shrb
ret
jecxz
rcl
adc
iret
cmpsb
jg
test
loopne
dec
shr
ja
push
fadds
fistps
cwtl
xorps
mov
loop
aad
xchg
mov
mov
mov
push
jns
aam
jle
dec
mov
scas
fcmovnb
jp
sti
fstpl
pushf
or
loop
mov
mov
shrl
jmp
push
das
and
mov
scas
icebp
es
mov
dec
test
push
sub
into
push
mov
mov
jge
jl
push
cmp
xchg
iret
mov
shlb
fidivrl
daa
jns
push
ja
insl
mov
dec
xor
fimull
ret
xchg
dec
lods
inc
repz
mov
sbb
mov
mov
or
mov
loop
mov
sarb
roll
daa
cmp
xchg
fdivrs
xlat
pop
mov
bound
in
test
outsl
lcall
and
sub
sar
pop
mov
mov
loope
fnstsw
fstps
pop
mov
xchg
lods
pop
mov
scas
dec
stos
and
jns
mov
mov
inc
loop
mov
das
loop
loope
mov
rcr
fdivrs
faddl
ret
xlat
jle
jecxz
push
rolb
into
xor
push
fisttpl
scas
rcll
stc
jns
jle
add
ljmp
dec
out
into
push
lea
sarb
sarb
loop
and
scas
js
lock
lret
jns
and
jmp
cmp
enter
in
sub
fidivl
test
mov
push
subb
mov
jp
cli
mov
aad
rolb
lahf
dec
sub
stos
test
scas
mov
xlat
aad
stos
add
fstps
insl
sub
cmp
jmp
loope
fmuls
jns
ret
mov
movsl
mov
pop
into
xchg
or
fistpll
inc
mov
cmpsb
shl
and
mov
ds
mov
dec
sub
mov
mov
cmpsl
es
mov
sub
mov
popf
mov
fcmovb
or
inc
jns
std
cwtl
mov
sub
loopne
scas
rcrb
mov
jge
inc
in
sub
es
or
loope
lahf
mov
mov
mov
aam
das
fmuls
or
loope
sbb
mov
aad
cmp
sub
ss
sarb
xlat
adcl
inc
mov
loope
inc
dec
lock
testl
push
loopne
sbb
mov
mov
mov
mov
cli
pop
outsb
push
imul
test
xchg
push
loopne
stos
mov
test
fcmovnbe
jl
mov
adc
ror
fildll
xchg
add
push
mov
test
dec
xchg
mov
adc
fldenv
inc
mov
or
mov
roll
pushf
rorl
mov
adc
push
jecxz
push
test
jp
xchg
fisubl
jbe
jg
cwtl
int3
xchg
mov
add
fcmove
ret
mov
aaa
lea
mov
mov
mov
into
sarb
or
mov
jg
scas
int3
pop
pushf
mov
mov
lods
scas
loop
mov
rcrl
ficomps
rol
ret
cmovae
mov
enter
test
andnps
inc
or
test
insl
mov
outsb
xorb
push
leave
mov
lea
faddl
or
and
sub
and
jae
rcrb
adc
js
leave
xchg
repnz
ljmp
sbb
test
in
fdivrs
mov
sub
fwait
gs
imul
mov
lods
enter
mov
bound
ja
int3
scas
imul
mov
xlat
jl
jne
js
mov
ljmp
mov
shll
sar
mov
jp
ja
test
jg
inc
jecxz
ffree
lahf
mov
inc
or
xorl
xchg
clc
bound
inc
jns
imul
cmp
xor
xchg
lods
shlb
cli
jge
gs
loopne
mov
jl
mov
xor
leave
jbe
orb
dec
ja
jp
jns
scas
jge
mov
mov
or
sub
loop
int3
std
mov
pop
test
mov
inc
js
jp
cmc
or
loop
ret
fidivrs
test
ja
int3
rcl
xchg
mov
jp
mov
scas
arpl
pushf
std
imul
insb
xor
mov
mov
mov
ja
add
pop
mov
xchg
cmp
into
add
push
mov
shrb
jns
xor
in
fsubrs
insb
cmp
iret
push
fdivrl
jecxz
and
xchg
rol
dec
enter
loop
rcr
not
push
fcmovbe
addb
jne
lods
ret
fdivrl
adc
mov
in
stc
movsl
imul
push
int
ror
aas
sbb
sarb
test
mov
cmp
sbb
loope
pushf
testb
test
xchg
insb
ja
mov
rol
add
cmpsb
jecxz
into
loopne
jl
test
sbb
aam
enter
mov
ret
sbb
into
cmc
cmpsl
fcmovb
out
es
add
cmpsb
stos
or
mov
leave
fdivrs
pusha
sarl
js
cwtl
iret
sub
dec
mov
mov
or
mov
lods
add
jp
jl
rcr
dec
movsl
pop
mov
iret
loope
xlat
mov
xchg
cwtl
jge
push
mov
ret
fs
int3
xchg
lret
xchg
mov
out
sbb
xlat
mov
icebp
test
rolb
int
hlt
pushf
lods
mov
test
push
mov
fcmove
sub
ja
cs
add
movsl
mov
jl
aam
out
mov
stc
loope
sbb
mov
pop
stos
aad
fcmovu
or
in
push
xor
sbb
inc
js
xor
lods
loope
loopne
pusha
xlat
ja
mov
mov
adc
sbbb
mov
mov
jp
outsb
jb
mov
cmp
add
mov
andb
or
lea
push
mov
add
cwtl
aam
mov
sti
dec
add
xchg
ret
mov
fcom
loopne
ja
push
mov
ret
sarl
lock
sbb
repnz
pop
loop
xor
pop
dec
push
xchg
push
jge
or
mov
jnp
fnstcw
xorl
push
loope
fiaddl
sbb
jge
cwtl
cmp
jp
or
fldenv
outsl
and
test
orb
out
push
xchg
jnp
mov
mov
xchg
jp
test
and
add
sbb
xchg
js
mov
roll
sbb
test
insb
jecxz
insb
lods
push
add
test
shlb
cwtl
iret
xchg
popa
aad
pop
adc
fwait
loope
inc
in
loopne
xor
dec
or
lock
test
repnz
jl
outsb
mov
sub
push
sti
stc
lcall
mov
rclb
fnstcw
nop
mov
mov
fnstsw
mull
rclb
mov
cmp
andb
std
jnp
push
xchg
sbb
jne
lea
dec
lods
or
orl
jle
xorb
pop
mov
test
iret
and
test
adc
aam
mov
mov
mov
int3
jb
jl
xchg
aad
loopne
fnstsw
rorb
sub
jns
mov
jle
mov
aam
mov
and
jns
js
add
mov
lret
jp
mov
inc
mov
lds
mov
push
mov
ljmp
inc
fneni(8087
push
pop
mov
xor
loop
or
dec
loopne
call
test
jnp
sub
repz
or
rol
sub
stos
adc
inc
lods
dec
mov
les
loopne
jmp
mov
lea
scas
aam
mov
mov
insl
out
insl
lret
xchg
jge
aad
mov
rcl
aam
dec
es
leave
and
stos
inc
subb
out
rol
insb
jle
cld
addl
setle
dec
mulb
cwtl
push
pop
push
cwtl
push
mov
pop
loop
aam
adc
jne
mov
jbe
xchg
repz
ja
out
sub
mov
ret
xchg
pop
jg
push
scas
mov
or
repz
stos
adc
sub
popf
xchg
mov
dec
xchg
mov
in
jl
sarl
mov
shrb
adc
xorb
mov
ja
jl
jge
jl
dec
lea
mov
mov
ljmp
aaa
sub
ret
cmp
rcl
add
fidivrs
xor
xor
cltd
lods
jge
scas
jp
ffreep
mov
call
or
fidivl
mov
jnp
jbe
scas
sti
jecxz
mov
pushf
stos
imul
mov
repz
and
push
mov
ficomps
lods
mov
ret
add
leave
sarl
fmull
mov
cmpsl
xor
jae
cmp
sbb
mov
ja
adc
fisubl
mov
stc
loop
mov
pop
dec
push
lock
xchg
mov
dec
aad
sbb
aam
jp
scas
shl
test
mov
jns
mov
adc
movsb
sub
pushl
sbb
mov
sbb
xlat
xchg
adc
iret
out
adc
add
mov
sarl
and
jl
jp
lods
stos
add
cli
popf
test
mov
xchg
jb
mov
into
mov
mov
data16
jb
sahf
test
adc
outsl
js
lods
iret
add
addl
cli
test
cmpl
test
mov
lret
ja
test
mov
mov
or
fidivrs
lret
sbbb
shrb
dec
add
xlat
rcl
lods
jae
mov
adc
icebp
orb
jle
jno
sbb
adc
outsb
push
into
add
xlat
jbe
cwtl
xchg
jl
sub
test
pusha
xchg
jle
or
xchg
jl
into
push
loop
rol
aad
xchg
shlb
fcmovbe
leave
cmp
jns
mov
mov
xlat
leave
xchg
xorl
fcmovb
jnp
loop
lods
out
out
js
and
enter
icebp
pop
fists
test
frstor
fidivl
out
xor
aam
push
mov
jecxz
pushf
mov
add
ja
jle
sbb
cmp
js
and
aam
push
adc
mov
in
mov
stos
movsb
int3
ljmp
ret
scas
fldcw
xor
js
aam
dec
int3
mov
sub
ret
leave
int3
xlat
bound
fnstcw
mov
out
rol
rcr
ret
inc
movsl
dec
pop
aam
xchg
jns
xchg
scas
mov
lret
subl
push
sbb
outsb
sbb
jae
mov
jns
push
mov
pop
cli
aad
ret
dec
push
shl
mov
scas
pushf
jle
or
fcmovbe
mov
cmp
ja
int
mov
ret
lds
inc
mov
jb
or
add
jnp
mov
daa
push
pop
mov
mov
js
mov
faddp
test
gs
mov
fbld
loopne
shlb
mov
out
je
lahf
jg
mov
mov
loopne
js
aad
out
dec
adc
ds
jg
mov
cmpsl
insb
jno
fdivrs
sub
jns
push
js
or
adc
or
iret
fnstsw
scas
mov
ljmp
jns
inc
adc
mov
sbb
push
xchg
adc
sti
lahf
movsl
jb
int3
nop
cmp
inc
jbe
test
mov
loop
cmc
inc
sub
ret
pusha
or
sub
sarb
lods
mov
scas
and
rorb
fimull
jbe
jecxz
cwtl
fstpl
lret
into
mov
cmp
sbb
shl
jno
bound
inc
fiadds
iret
dec
xlat
push
into
mov
mov
dec
pop
or
js
mov
cmpl
sbb
ljmp
stos
xchg
mov
cmp
fidivs
ret
fldt
jle
fdivl
fs
mov
ret
mov
mov
ret
jge
dec
mov
inc
dec
dec
adc
aad
ret
cmpl
jg
leave
or
ret
dec
mov
jp
rolb
aaa
mov
and
add
fidivs
ss
lock
js
mov
fmulp
dec
mov
sarl
mov
xlat
sub
add
or
out
or
jns
ret
loope
mov
test
orb
mov
jns
daa
jnp
and
mov
adc
loope
mov
xchg
dec
leave
mov
mov
int3
scas
mov
jge
add
rcll
movsl
scas
test
xlat
loop
ds
cwtl
fcmovnu
frstor
pop
xchg
add
jmp
jnp
cmpsl
cmp
scas
add
mov
lods
fistl
pop
aam
push
fwait
mov
inc
jg
mov
cmp
in
into
inc
fisubl
dec
jge
subb
jl
mov
xorb
fdivrs
add
icebp
pop
subb
ss
imul
imul
loope
outsl
ret
mov
mov
scas
scas
test
adc
pop
mov
aas
lcall
int3
jecxz
lods
pop
aam
xor
jl
mov
in
pop
cmp
cwtl
jp
cmp
jp
mov
mov
sarb
movsl
leave
js
adc
insl
fnsave
test
roll
ja
or
insb
jnp
out
ljmp
jle
mov
fiadds
sub
iret
pop
dec
dec
cmpsl
and
xlat
dec
jne
rolb
jp
jns
loop
mov
mov
sub
loope
mov
mov
mov
jo
inc
mov
lods
mov
rcr
addb
push
inc
fmuls
mov
adc
add
jecxz
ret
int
pusha
xchg
loop
jnp
loop
mov
inc
jns
fdivrl
mov
jecxz
mov
pusha
xchg
shll
fdivrs
pop
fdivrl
jp
and
loop
rol
mov
mov
popa
xorl
push
mov
jge
mov
enter
mov
fimull
cmp
mov
ror
rcrb
sti
loop
stos
jns
dec
lret
std
cmpsb
sub
cmp
adc
dec
push
sarl
sub
test
mov
inc
mov
lods
out
in
into
and
mov
inc
sarb
jp
mov
ja
ljmp
jb
jecxz
jle
mov
rcrl
fisttps
lods
gs
rol
loop
adc
lods
lea
mov
loope
mov
sahf
dec
or
or
fisubrl
mov
mov
jnp
adc
add
fldcw
add
mov
sbbb
ret
jns
subb
in
addl
jno
fidivl
fnsave
mov
fwait
ja
cmp
test
mov
pop
lods
and
cmp
vmread
int
inc
sub
insl
jnp
add
mov
cmp
cmp
and
mov
mov
mov
filds
pop
xchg
shll
pusha
shl
jle
int
ja
mov
shrl
lods
jecxz
jp
cmp
lahf
test
mov
xchg
mov
and
jle
lahf
jg
or
push
mov
mov
xlat
pop
es
pop
movsb
movsb
insl
fsubr
outsb
inc
jb
lods
cmp
xor
xor
shll
jge
lcall
dec
imulb
mov
mov
fisubl
pop
jae
popf
add
inc
roll
movsl
pop
sub
jns
jnp
inc
sub
mov
jp
jecxz
rolb
loope
rcl
fists
roll
rcl
jge
scas
test
dec
aam
shlb
ret
shll
mov
into
imul
mov
mov
jb
fcmovu
out
scas
jb
jp
mov
fisubl
shrl
sarb
scas
lea
jg
ret
sbb
lods
loop
or
scas
int
inc
nop
sub
push
pop
mov
cmpl
mov
rcrb
jnp
sahf
xchg
imul
mov
pushf
and
adc
mov
out
lahf
enter
and
fsubs
and
shrb
jg
test
xlat
mov
cwtl
cmpl
lea
fstpt
inc
iret
sub
mov
dec
and
lods
stos
mov
clc
scas
sbb
cmpl
mov
subb
and
es
rcl
mov
fucomi
cwtl
loopne
hlt
sahf
mov
scas
cmp
lret
ret
jle
mov
mov
js
jge
mov
fnstcw
stos
orl
cmpb
movsl
mov
fiaddl
cmp
push
ja
mov
push
mov
inc
movsl
jecxz
jb
pop
jge
mov
and
cmp
loope
fldt
lods
mov
sarl
sarb
cmp
and
pop
or
sarl
rcll
rorb
mov
mov
jp
shrl
adcl
sar
sbb
fstps
addr16
in
int
mov
rclb
fldl
sbb
loop
shrl
test
sarl
into
xchg
mov
sub
ljmp
mov
mov
cmc
lahf
inc
mov
into
jnp
dec
in
dec
loop
mov
push
lods
or
mov
pop
and
mov
ror
jge
inc
adc
repz
ret
lret
iret
or
xor
mov
std
or
mov
inc
lret
jb
jg
je
jnp
jnp
inc
mov
nop
jecxz
fcomp
shrb
loop
mov
insb
lods
adc
dec
fcmovnbe
sarl
imul
jg
xchg
mov
lods
js
mov
fistpll
cwtl
mov
sub
add
fadds
aam
imul
mov
outsl
loopne
push
int3
nop
test
xchg
jne
out
loop
sbb
dec
xor
sub
into
lahf
jp
iret
sub
loop
and
shlb
mov
sub
test
pop
lock
jae
leave
mov
push
lahf
fldl
jno
pop
cli
imul
mov
scas
scas
rcrb
xor
inc
xchg
mov
jge
ja
lea
and
testl
loope
fbstp
jnp
mov
int3
loopne
mov
test
dec
nop
js
out
add
aad
ljmp
iret
mov
mov
fwait
outsb
jl
xchg
cmp
push
mov
ret
xchg
addl
mov
mov
test
roll
cwtl
adc
addl
jmp
jp
fnstsw
push
dec
add
cmp
pop
mov
mov
rcr
mov
stos
jl
jg
mov
iret
into
lods
lock
xchg
rol
fisttps
xchg
fnstcw
mov
scas
mov
dec
inc
jb
loop
cwtl
js
add
test
rcl
iret
jbe
jecxz
lahf
aam
adc
sbb
and
or
scas
mov
int
out
jae
inc
fistpll
rcl
add
loopne
pop
jl
inc
in
mov
jnp
stc
mov
mov
dec
mov
adc
lea
mov
inc
mov
ljmp
rol
stos
fadd
xlat
iret
cwtl
pop
testb
mov
fidivl
or
sarb
pushf
mov
mov
fnsave
xchg
jns
inc
cli
sbb
das
enter
loop
xor
call
mov
jb
orl
jp
fcmove
and
repz
test
dec
mov
test
push
aam
sub
mov
mov
dec
mov
int
mov
adc
stc
mov
mov
int3
cmp
xlat
aad
lods
mov
lahf
leave
scas
xor
and
je
inc
sbb
iret
pop
mov
shlb
movsb
ret
ss
jns
or
out
addr16
fcom
mov
xlat
jg
mov
xlat
mov
shl
loop
lret
pop
leave
in
es
cmp
js
lods
cmpl
mov
imul
mov
add
add
sbb
pusha
int
jl
dec
mov
shrb
cwtl
mov
aad
cwtl
sahf
mov
jg
scas
mov
movsl
loop
scas
mov
repz
mov
movsb
fs
repnz
mov
jae
arpl
loopne
pop
into
shll
test
mov
loop
test
mov
xor
and
cld
mov
and
imul
fnstsw
imul
lahf
dec
inc
rolb
lds
enter
scas
dec
cmc
fidivs
cmpl
mov
pop
subl
sub
or
fimull
mov
ret
push
ss
jae
mov
loope
mov
xchg
ror
xchg
psrld
loope
ja
cltd
jns
shrb
fcmovne
ficoms
out
mov
rolb
cli
lea
mov
jle
sbb
scas
lods
mov
lea
into
xchg
popa
data16
fdivl
jp
jns
mov
loop
mov
cmpl
mov
int
mov
shll
sbb
in
sbb
mov
ljmp
and
cmpb
rcl
jo
jle
fxch
dec
push
in
cmp
push
xlat
sarb
mov
and
loop
jb
mov
into
test
pushf
scas
aam
mov
push
dec
inc
pushf
jb
push
xlat
into
scas
out
nop
shlb
subl
imul
cld
loop
inc
mov
cmp
mov
loope
fs
or
jg
pop
mov
adc
mov
add
dec
mov
lods
add
shll
push
xchg
inc
fidivs
mov
jno
sbb
loopne
ja
jb
je
inc
jo
and
ret
mov
shrb
loopne
lock
or
ficoms
fcmovbe
scas
ror
shlb
cli
in
mov
mov
mov
aaa
outsb
nop
pushf
mov
aad
dec
insb
push
sbb
inc
cwtl
stc
mov
mov
sub
jge
jg
pop
outsb
push
insl
ret
test
lret
loopne
ja
xorl
adc
jp
xorb
pop
fcmovb
pop
mov
divl
inc
dec
and
pushf
fstps
xlat
sbb
add
sarb
push
lret
js
scas
mov
sahf
jnp
xchg
iret
rcr
mov
sarl
mov
cmpb
push
mov
mov
lods
fcmovu
xor
shll
sub
or
xchg
stos
ljmp
mov
loopne
cmpsl
push
mov
aad
roll
mov
mov
jecxz
xlat
rcll
sarb
mov
xchg
fcomp
ret
mov
cli
stc
test
mov
inc
mov
jne
mov
shl
movsl
jno
mov
ss
loop
dec
fcmove
iret
fwait
or
mov
mov
jb
test
popa
shlb
aam
inc
mov
mov
jns
push
lods
ljmp
ret
cmp
cli
clc
xchg
fdivrl
stos
test
mov
loop
in
insb
and
jbe
lods
xchg
outsb
das
test
mov
mov
ret
loopne
inc
daa
mov
dec
inc
dec
dec
loope
pop
dec
loopne
ljmp
fsubr
jge
xor
ror
mov
inc
mov
mov
outsb
rcrb
xlat
aam
hlt
or
fmul
fidivrs
stos
cmp
mov
addl
mov
in
aam
fildl
jnp
jbe
fs
lods
rcl
mov
int
scas
ja
jae
xor
mov
pop
fdivrl
mov
stos
jns
cli
loopne
mov
jl
adc
iret
sub
jl
aad
push
push
rorb
sbb
aam
shll
movsb
subb
call
add
ja
xlat
and
int
mov
stos
xor
shll
mov
aam
sub
jecxz
mov
sub
data16
xlat
mov
ret
enter
add
insb
scas
mov
sbb
xlat
sarl
dec
lret
cwtl
sahf
dec
and
cmp
sbb
bnd
enter
aad
push
sarl
lret
mov
mov
or
mov
sub
subb
repnz
rorb
or
mov
fistpll
cmp
sub
cmpb
pop
or
test
mov
cmp
jge
mov
xchg
mov
ret
stos
or
adc
jecxz
in
mov
mov
or
enter
js
leave
sarb
ds
sbb
movsb
mov
rorb
mov
mov
ret
int3
dec
fcmovnu
test
push
inc
or
sub
test
jb
call
fbstp
or
jbe
insl
outsb
jbe
mov
fistps
lcall
clc
jb
scas
dec
ret
loope
xchg
sarl
cmp
and
push
into
inc
mov
add
mov
mov
leave
fdivrs
mov
enter
fxch
rorl
mov
bnd
mov
imul
jae
movsb
xor
insb
mov
ret
cmpsb
lock
sbbl
rol
fwait
int
or
xchg
cmp
rcll
scas
cli
fidivrl
rcr
pushf
popa
fisubs
mov
loop
xor
jecxz
pop
add
inc
add
sub
lret
shlb
inc
loope
or
jle
xorl
notl
in
pop
out
js
mov
adc
aas
mov
inc
fadds
shlb
ja
cmpl
stos
outsb
mov
mov
roll
fnstcw
push
lods
mov
xor
xor
lahf
mov
test
loop
jg
loopne
mov
int3
sbb
mov
fisubrs
fistpll
xchg
lods
andnps
jle
nop
std
leave
sarb
sub
jbe
jge
mov
adc
shl
adc
es
fistpl
mov
mov
fnstcw
in
es
test
psubusw
in
mov
mov
mov
pop
adc
or
loope
loop
cmc
out
xlat
scas
mov
push
add
cltd
cmp
mov
in
push
sbb
enter
fstpt
imul
sub
inc
rcll
mov
ret
xchg
into
fildll
nop
adc
inc
xchg
mov
inc
mov
push
inc
push
filds
mov
movsl
mov
int3
loope
test
test
rcll
cmp
jp
loope
or
fnstcw
test
jb
insb
scas
icebp
xchg
jnp
push
dec
rorl
mov
push
ret
call
mov
inc
scas
fldcw
sub
aad
mov
mov
arpl
stc
jnp
clc
int3
loop
fnstenv
sub
jp
mov
xlat
loopne
cmp
mov
add
out
nop
pop
mov
andl
or
xlat
mov
test
ret
push
mov
enter
jecxz
fs
iret
leave
rcr
jp
js
mov
mov
dec
lahf
inc
dec
pop
fbstp
into
or
iret
mov
inc
fdivrs
test
lods
enter
mov
xchg
add
inc
adc
rcll
ret
pop
lods
loopne
cmp
cli
popf
je
jge
jb
and
mov
fldenv
ret
jp
fidivl
addl
repz
dec
sub
mov
pop
mov
fstpl
pushf
daa
add
loop
rclb
lds
test
xchg
shrb
neg
xchg
popa
xchg
xor
inc
aad
inc
popa
xchg
scas
lret
ffreep
into
loop
mov
lea
mov
mov
int3
mov
mov
mov
test
mov
adc
lods
jnp
iret
call
loop
pop
movsl
mov
into
sbb
push
cmp
clc
ljmp
push
sub
shrb
sahf
js
sar
rorb
adc
xchg
pop
inc
push
sbb
ret
xchg
mov
shrl
fiadds
loopne
int
sbb
mov
mov
push
call
loop
daa
jp
mov
iret
je
mov
jecxz
enter
mov
pop
lods
cli
jo
mov
in
jmp
movsb
jns
ficomps
int3
sub
mov
es
xchg
fwait
into
fwait
inc
pop
mov
mov
rorb
shrb
push
push
xlat
cmp
sbb
jle
dec
div
fdivl
xchg
jle
cwtl
mov
pushf
and
cmp
jb
test
iret
pop
lock
mov
xchg
aam
rcrb
fsubs
test
ret
jl
aas
stc
loopne
aas
popa
mov
das
insb
scas
mov
je
inc
mov
int
loope
test
mov
insl
jg
fstp
mov
sbb
filds
aad
jnp
sarl
inc
adc
iret
shrl
mov
mov
inc
adc
ljmp
jle
mov
inc
loop
fucomi
lret
xor
pop
rol
aam
es
loope
jecxz
leave
shrl
mov
scas
mov
js
mov
fdivrl
int3
mov
loopne
repz
jne
push
rol
test
mov
enter
jmp
out
and
pop
mov
aam
fiadds
add
ds
mov
js
fnstenv
inc
sub
outsb
jns
jb
mov
mov
fidivs
hlt
fwait
add
rorl
imul
fwait
cmpsb
arpl
dec
or
js
mov
cmp
dec
cmp
movsb
mov
push
add
pop
mov
cmc
fisubrs
mov
div
mov
loop
fcmovnbe
xor
lret
cmpb
adc
rcll
push
fincstp
lea
or
mov
mov
jge
lahf
jg
scas
mov
cmc
mov
sbb
mov
ret
pusha
adc
inc
sbb
jg
add
or
rcl
mov
aad
xchg
loope
insb
mov
push
adc
jecxz
lods
scas
sarb
mov
dec
cmpl
sarl
cmp
dec
loope
movsl
packsswb
aad
xor
movsl
sbb
jecxz
pop
jo
pop
mov
jmp
cmp
ror
mov
ret
jl
js
fsubrl
or
pop
lahf
lcall
and
shl
cmpsb
rcrb
insl
loopne
mov
loop
mov
lahf
sarb
in
jp
mov
adc
push
jecxz
mov
mov
xchg
cmpl
leave
mov
mov
mov
and
jle
in
push
ja
sbb
and
popf
jns
imull
xchg
int3
aam
out
dec
fidivrl
jae
inc
sub
xchg
mov
clc
outsb
insl
lea
pushl
mov
fnstenv
mov
imul
js
std
aad
loop
cwtl
cli
inc
mov
jle
xchg
movsb
into
imul
hlt
aad
adcb
ret
jecxz
loopne
leave
test
and
enter
mov
jae
fimuls
sbb
mov
mov
pop
xchg
shlb
mov
scas
adc
into
mov
sbbb
mov
sbb
sbb
push
js
mov
push
lcall
outsb
sub
xchg
shl
push
xchg
mov
jmp
adc
pop
nop
dec
mov
push
orl
jle
stos
enter
jnp
rcr
cli
push
jle
sarl
fwait
out
test
fsubs
lods
test
roll
and
cmp
push
loop
mov
rol
jp
faddl
js
push
mov
mov
push
xor
xchg
lods
fcoms
out
sbb
fiaddl
outsb
leave
mov
cmp
rorb
adc
lds
and
out
outsl
je
popf
xchg
jecxz
mov
js
arpl
insb
xchg
xchg
mov
mov
fmul
push
arpl
fcoms
pop
loopne
add
pushf
mov
xor
push
fdivrs
sub
rcrl
icebp
xor
mov
and
fidivl
ffree
jp
orl
test
mov
mov
mov
fisubrl
rorl
insb
mov
ret
lods
mov
sarb
outsb
fnsave
xorb
xlat
mov
mov
or
adcl
enter
fidivs
popa
mov
jl
push
test
mov
adc
loope
lods
and
rol
roll
lods
rorb
dec
or
xor
lock
mov
mov
cmp
js
mov
imul
mov
mov
cmpsb
xorl
call
ror
sbb
add
mov
mov
cli
out
jp
aam
mov
mov
jns
not
and
jge
mov
jmp
jg
mov
out
sarl
jnp
enter
jle
push
rol
shrl
iret
pop
cwtl
fdivrs
int3
aam
mov
jle
sub
aad
sub
fwait
aam
test
sahf
mov
mov
and
rcrl
fmul
mov
addl
inc
lahf
fstpt
lods
xchg
jp
test
fnstsw
fadds
jg
aam
test
cwtl
jge
sbb
jle
cld
mov
ss
mov
sbb
lea
pushf
xor
sbb
and
xchg
inc
cmp
mov
and
sarb
fdivs
dec
pop
enter
mov
dec
mov
leave
seta
lahf
dec
mov
dec
xchg
mov
scas
mov
aam
cmpsb
mov
fisubrs
xlat
add
mov
pop
cmp
cmpb
or
mov
push
mov
insl
mov
lods
mov
jns
add
mov
rolb
xor
xchg
rcl
std
jecxz
sbbb
in
mov
loope
test
fstl
sub
sub
mov
add
cmpsb
mov
mov
aam
fisttps
int3
jl
cli
or
mov
es
or
push
mov
jnp
call
or
shrl
inc
shrb
js
push
mov
fucomp
sahf
mov
ljmp
xlat
test
testb
ja
or
dec
mulb
jmp
cmp
inc
lods
sub
out
xchg
jns
jl
js
mov
mov
iret
cmpsl
push
js
adc
jg
sarl
std
pop
add
cmp
arpl
scas
mov
outsb
mov
xor
xchg
das
leave
xchg
es
cvtpi2ps
ja
orl
repz
jb
outsb
fdivl
ja
dec
xchg
je
fdivs
lret
js
fnstsw
cli
pop
loopne
push
lcall
and
jle
push
jmp
jmp
mov
mov
arpl
sub
sbbl
mov
xchg
loop
and
sbb
mov
pop
mov
sub
shrl
jle
or
pusha
stos
mov
fistpll
jns
lahf
test
test
cmc
movsl
or
repnz
sahf
lods
iret
jl
rorb
ret
xchg
sbb
and
mov
ror
mov
fwait
push
fildl
jecxz
xor
stos
movsl
mov
jp
aam
fxch
fisttpl
mov
sub
push
addr16
jno
pop
loop
in
fdivrl
or
jge
mov
rcr
xchg
iret
cmpl
mov
and
das
dec
pop
jge
jns
sar
arpl
repnz
dec
xor
mov
jg
cwtl
xor
mov
iret
cmpsb
and
flds
js
mov
sarb
fcmovne
in
rcrb
test
inc
rolb
cmc
cmp
mov
dec
jle
mov
mov
sarb
jl
mov
fdivrl
and
mov
cmpsb
loope
ret
and
lea
xor
xlat
cli
hlt
mov
fildll
mov
jae
shl
mov
cmc
mov
shl
mov
cmp
pop
or
jns
inc
lods
and
and
jnp
or
div
and
mov
cmp
jns
fs
mov
lods
sbb
int3
into
aaa
leave
and
out
shll
push
xchg
xchg
or
mov
jno
aad
mov
and
test
mov
xor
imul
lds
pop
aam
xchg
add
mov
sarl
jae
jp
fnstsw
add
mov
in
or
mov
mov
addl
sarb
mov
test
lock
add
rol
xorl
test
inc
pusha
mov
shrl
jg
push
sbb
mov
mov
js
cmp
jecxz
int
jle
sub
cmc
out
leave
add
loopne
dec
adc
insb
fstl
jg
mov
xlat
rcr
jb
outsb
fstps
loop
imul
fwait
shrb
fnsave
inc
dec
adc
jg
mov
mov
lret
dec
sarl
jp
test
fstpt
xchg
test
pop
push
mov
fisubrs
sbb
leave
fwait
aad
mov
dec
fwait
in
ja
call
pop
clc
jns
sub
mov
xchg
ja
fucom
mov
xlat
mov
adc
jnp
fmuls
push
inc
in
jbe
mov
sbbl
lds
lods
in
in
loopne
iret
mov
loop
mov
sbbl
jbe
jecxz
push
or
cltd
shlb
bound
cmp
sbb
loopne
out
xor
shll
sarb
mov
push
and
rcl
je
push
jne
mov
lret
int3
mov
ficomps
inc
stc
mov
push
dec
mov
push
sti
lods
fcom
mov
cmp
jb
roll
subl
cs
mov
xchg
mov
add
fildll
fnstenv
mov
mov
enter
iret
fidivl
jns
dec
loop
mov
ljmp
pushf
mov
orb
leave
ds
nop
dec
test
aam
cli
push
mov
mov
sub
scas
stos
popf
mov
std
cmp
mov
shll
repz
mov
push
and
cli
daa
sbb
aaa
ja
or
jmp
cwtl
ds
test
inc
add
in
out
lds
sub
dec
int
ret
pop
je
jg
bound
test
sub
fld
cmp
insl
jb
push
mov
or
in
adc
fnstcw
mov
push
or
movsl
data16
rcr
iret
es
mov
jp
lea
jg
xchg
hlt
lods
add
fiaddl
mov
cmp
insl
mov
dec
test
mov
inc
jp
addl
sar
or
test
lods
xlat
xchg
fimuls
cmp
mov
mov
cwtl
into
js
ret
mov
loop
popa
lds
sbb
in
movsb
or
sahf
dec
test
mov
rcl
mov
xchg
loop
scas
lahf
mov
ret
and
mov
aam
test
sub
sarb
mov
mov
outsb
int3
xor
and
mov
jg
pop
cli
imul
fdiv
jl
pop
outsb
xlat
rorl
mov
xchg
push
enter
xchg
pop
mov
mov
mov
sub
insl
outsb
int3
stos
xchg
lods
ret
sarb
cmpsl
adc
jns
and
push
push
lea
fidivl
push
ja
shlb
mov
pop
mov
push
fstps
sbb
lods
xchg
fwait
aaa
jnp
dec
cwtl
cli
cmc
fnclex
mov
insl
dec
cmc
stos
jle
enter
inc
mov
into
mov
ja
adc
add
or
insb
js
cmpsb
xchg
jp
xchg
ja
or
nop
jmp
pop
nop
loope
cmpl
mov
jns
mov
icebp
cmp
popf
pop
js
push
rcr
stos
orl
lods
lret
mov
rcl
mov
xlat
dec
sbbb
xchg
and
loop
ret
sarb
push
mov
mov
and
iret
sarl
xchg
mov
add
sbb
mov
pop
lods
rcrb
sub
into
jns
ficomps
xchg
mov
leave
and
sbb
mov
inc
adc
and
sbb
rcl
mov
lods
ja
inc
jns
lea
mov
mov
lods
aas
rol
mov
mov
std
jae
test
push
mov
sarl
fisubrs
cli
pop
out
xor
test
leave
rcr
fsubl
cmpl
filds
jne
mov
sub
mov
push
mov
xor
filds
dec
jge
mov
lods
scas
mov
cld
inc
lret
sar
inc
mov
or
stos
loopne
cmp
push
inc
repz
adc
mov
push
test
mov
cmp
mov
aam
cmp
dec
mov
addr16
popf
enter
mov
fdivrs
cmp
loopne
flds
sbb
insb
addl
cmp
and
fsubrs
mov
je,pn
jle
test
test
fldt
pop
mov
and
and
in
scas
das
xchg
add
or
stos
mov
inc
jp
jp
ret
mov
aam
pop
fsubr
rcr
jne
enter
mov
ss
in
cs
push
lret
mov
jo
cmpsl
dec
dec
dec
test
sub
outsb
es
mov
dec
xchg
test
rcr
pop
stc
xchg
mov
jecxz
push
call
outsl
imul
or
push
fidivrs
fistl
cs
mov
jge
mov
pop
mov
lcall
pushf
mov
sub
jg
inc
xor
dec
jg
ljmp
adc
mov
shl
lods
push
cmpb
jle
repnz
mov
xchg
sbb
cli
ljmp
fdivs
rcrb
mov
movb
lahf
mov
xchg
add
cmpsb
aad
cmp
fsubs
pusha
sub
fcmove
jecxz
jns
dec
int
scas
ficoml
mov
aad
mov
les
add
jle
pop
rcrb
sbb
sbb
fstpl
xor
pop
sub
inc
lret
inc
mov
loope
iret
mov
mov
xlat
add
mov
iret
ja
add
xor
xor
sub
repz
mov
and
cmp
ja
aaa
xchg
sti
mov
enter
enter
inc
loopne
jo
jle
icebp
leave
ret
pop
sbb
aam
xchg
cmc
mov
jl
sbb
mov
pop
mov
test
inc
mov
or
fldt
test
ret
xchg
test
pop
sarb
mov
aad
bnd
lahf
rcl
ljmp
test
sahf
sbb
xchg
xlat
int
loopne
mov
pushf
push
sub
ja
jbe
inc
or
lea
fucomi
mov
ss
pushf
pop
jmp
icebp
jl
ja
std
orb
insl
push
rcrl
dec
add
or
test
imul
mov
xor
pop
and
sbb
cmpsb
test
mov
int3
add
inc
enter
inc
inc
dec
insl
js
sub
adc
scas
or
jno
xor
mov
fwait
add
icebp
mov
fdivrs
pusha
mov
add
sbb
mov
fdivrs
cwtl
int3
fwait
aad
push
cmp
fdivp
cmpsb
jge
inc
les
lods
dec
mov
xchg
enter
and
xchg
mov
imulb
cli
and
dec
out
stos
not
ljmp
outsl
aaa
or
dec
lret
xchg
xchg
sbb
mov
inc
ja
aam
mov
mov
jb
jns
das
stos
mov
jp
lahf
fdivl
add
mov
shlb
push
mov
sbb
add
lcall
rolb
jnp
lods
into
mov
dec
out
imul
cltd
pusha
daa
into
push
mov
fadd
jns
mov
scas
mov
push
lea
jp
fcmovb
lods
and
sbb
loop
push
jb
jge
xchg
or
jo
xor
movsb
cmp
shll
xor
cmp
enter
into
add
jge
fsubp
sti
mov
inc
cmp
xchg
lods
xorl
cli
cli
sbb
jnp
shlb
jl
lock
dec
int3
add
push
test
sbb
pushf
xor
loop
lods
lahf
fsubrl
enter
push
iret
jns
pusha
dec
cmpsl
mov
jg
ja
push
fsubrs
test
in
fadds
rolb
jae
pop
jae
or
inc
push
push
mov
adc
mov
lds
sub
lret
loopne
xorl
imul
sarb
pop
lods
mov
mov
inc
cmpsb
jl
fisubs
loop
negb
ret
fdivr
inc
pop
movsl
mov
out
mov
cmpsb
test
mov
xchg
pop
or
clc
jno
stos
add
sbb
push
cwtl
insb
lahf
inc
movsl
lcall
int
mov
rcrl
sub
out
mov
mov
fdivr
mov
rclb
loop
loope
rcrb
je
inc
cmpl
iretw
mov
shlb
add
lods
mov
aas
shl
in
and
nop
cmp
fcomps
xchg
int3
sarl
mov
loopne
idiv
jb
and
sarb
lfs
and
xchg
aam
jp
js
sbb
lods
scas
rol
sbb
fistpll
shll
enter
je
xor
jge
stos
int
js
mov
loopne
dec
arpl
mov
sbb
and
shlb
popa
ret
mov
push
fstpl
in
iret
xlat
inc
dec
or
sti
cmp
leave
mov
aad
sarb
ficoml
stos
or
sbb
iret
scas
iret
aam
sub
pop
ds
lods
xchg
push
jns
xchg
inc
popf
iret
pop
sarb
ss
xchg
lods
mov
mov
es
push
mov
mov
in
es
loope
inc
jnp
test
mov
cmp
xchg
mov
sub
loope
sub
mov
add
lret
ret
ret
loope
shlb
xlat
adc
ja
fsubs
cmp
mov
rcrb
fwait
shll
dec
lea
jge
dec
lahf
subl
jecxz
loop
mov
lahf
mov
movsl
cmpb
nop
fsin
insb
xor
into
jns
rcrl
iret
mov
mov
mov
es
lahf
lds
or
subb
push
mov
mov
cmp
xchg
sub
mov
sbb
xchg
loope
mov
sub
push
push
cli
lcall
mov
leave
test
adc
jg
lret
mov
dec
int
inc
rcl
xchg
movsb
leave
rcll
sub
test
fsts
xchg
adc
enter
xchg
out
loopne
jmp
mov
mov
int3
loopne
icebp
es
mov
cmpsl
loopne
es
dec
shl
aas
shlb
movsb
add
aam
movsl
sbb
in
es
push
pop
mov
stos
fwait
xor
mov
out
mov
mov
or
lods
sub
data16
lods
inc
add
mov
scas
mov
fcompl
inc
mov
ja
sti
dec
cmpsl
loop
jl
repnz
aam
xlat
jg
mov
loop
add
xor
in
mov
jl
ret
scas
fadd
sti
mov
mov
ja
xchg
aam
mov
sub
fdivrs
mov
fidivs
sub
ljmp
mov
int3
mov
xchg
flds
inc
push
mov
inc
push
es
mov
fwait
mov
ret
iret
xlat
scas
sbb
add
mov
bound
je
fisttps
or
cmp
arpl
fistpll
gs
mov
sarb
inc
inc
xor
sbb
in
out
adc
into
pop
add
xchg
loop
loopne
cltd
int
mov
push
mov
test
aad
fldl
inc
iret
mov
shl
leave
mov
push
inc
xlat
int
jnp
es
ljmp
mov
fistl
inc
mov
fst
andb
lret
or
push
sbb
fistpll
xchg
sbb
inc
xchg
mov
push
and
or
lods
test
rol
jp
repnz
arpl
into
in
mov
cmp
in
mov
push
mov
jp
xlat
lods
mov
lods
test
int3
inc
pushl
jge
fisubrl
fsubs
je
mov
mov
outsl
psubsw
leave
fcmovnu
adc
rol
cmp
dec
mov
mov
dec
dec
mov
mov
lock
and
sbb
xlat
into
loop
xor
insl
mov
inc
ret
fdivr
mov
popf
out
push
push
loop
lods
fidivrl
xlat
dec
lea
mov
mov
sub
add
jp
std
xlat
sarb
fldcw
leave
sbb
xor
jmp
jmp
mov
out
jmp
in
or
push
addb
sub
repnz
xchg
lret
jp
jle
mov
andb
mov
mov
outsb
mov
xor
fcmovbe
sti
iret
and
jg
ret
sbb
test
in
fildll
mov
in
enter
js
movsb
subl
enter
xlat
loopne
dec
or
xchg
sub
mov
jge
roll
js
xchg
jae
push
repz
mov
xchg
cli
fstpl
shrl
rorb
cli
lret
scas
inc
mov
sbb
dec
sbb
icebp
mov
inc
sbb
ficoms
ja
fldcw
mov
cmp
inc
dec
pop
adc
fcmovnu
mov
cmp
movsb
rol
dec
mov
jl
mov
mov
lods
jns
mov
mov
aam
sbb
scas
sbb
mov
jp
aad
loope
lods
cmp
scas
sarl
insb
mov
lret
add
xchg
es
adcb
push
es
js
lods
sub
mov
loop
fstsw
mov
push
lods
sub
outsl
adc
fxch
xor
pop
sub
test
sub
dec
pop
scas
into
rcl
fstps
loop
and
lret
js
ret
sbb
inc
jb
adc
or
and
fcoml
lods
or
fadd
rclb
jb
es
sub
movsl
popa
arpl
test
mov
xchg
mov
insb
outsb
mov
mov
xchg
push
fidivs
inc
faddl
test
rcll
xlat
inc
div
mov
nop
jg
add
test
iret
ret
dec
inc
mov
repz
scas
shl
pop
xchg
xlat
test
stos
inc
mov
sub
mov
add
outsb
mov
mov
mov
fildll
faddp
es
push
call
mov
mov
add
cwtl
mov
aaa
js
icebp
mov
mov
jns
ss
xchg
ror
js
inc
out
pop
sub
fdivrl
jns
sub
jp
es
fmull
lods
fnstsw
jp
orl
jb
inc
aad
cs
int3
mov
xchg
int
inc
into
ss
cmp
popa
leave
shr
cmpb
dec
es
mov
daa
dec
pop
test
lods
loopne
roll
addl
shrb
out
aad
loopne
or
into
mov
add
mov
repnz
into
pop
mov
mov
inc
aaa
loop
icebp
leave
cmp
mov
inc
test
add
jp
loopne
cmp
sub
push
xchg
dec
sbb
mov
ljmp
mov
movsl
rcr
fs
ljmp
cwtl
jbe
nop
mov
es
cli
mov
cmp
int3
je
aad
jg
jl
jge
loope
lods
jmp
and
mov
adc
or
fs
jp
cmp
orb
mov
cmp
or
jg
mov
out
arpl
mulb
push
incl
insl
ja
loop
shr
cmp
mov
hlt
or
loopne
and
roll
mov
ja
loope
scas
pop
push
jne
std
out
ret
in
cli
jbe
xchg
mov
xchg
cmpb
leave
int
mov
cmpsb
jns
jmp
aam
xchg
loope
fsubrs
pushf
lods
xor
mov
testb
mov
or
fcom
test
cmp
fwait
mov
lret
sbb
inc
jl
das
negb
dec
shl
xor
cmp
or
adc
rcl
jmp
loopne
fcmovbe
rcl
sbbb
fs
lods
mov
shl
arpl
fnstenv
mov
mov
lret
fistps
jnp
je
mov
int
ret
shr
cmp
iret
test
leave
lcall
adc
and
mov
ret
js
mov
push
mov
jecxz
call
aas
mov
xor
imul
scas
loope
cld
adc
jg
push
mov
and
and
jbe
jbe
jbe
mov
ret
or
sarb
mov
es
hlt
sbb
scas
rolb
test
xlat
stos
dec
mov
pop
or
lods
scas
js
fidivrs
mov
jge
arpl
jne
push
mov
inc
cwtl
outsl
mov
xchg
jne
jle
psadbw
sbb
dec
rcl
mov
jnp
loop
xlat
ret
out
push
push
cli
test
inc
jae
int3
xchg
sbb
ret
fdivrl
sbb
dec
flds
rcll
fdivr
es
xchg
pop
scas
xchg
sub
fdiv
pop
into
xlat
sbb
aad
jl
addb
dec
outsb
mov
push
xlat
in
cmp
mov
and
push
adc
bound
dec
rcr
mov
rclb
andl
mov
rcr
enter
out
adc
in
out
mov
clc
out
adc
in
mov
js
mov
call
xor
scas
push
jge
aad
mov
int
xchg
lock
imul
xchg
inc
xor
cmp
ret
push
xchg
or
aam
cli
movsl
cli
jmp
out
cmp
out
repz
pop
mov
or
mov
mov
adcl
and
sub
xchg
ficoml
es
dec
addr16
jmp
xchg
mov
bound
loope
mov
mov
insb
cmp
dec
mov
push
xchg
call
scas
sbb
in
adc
hlt
addl
or
aad
std
jns
outsb
sar
scas
and
movsl
mov
ja
cmpsb
xchg
rcr
mov
test
xchg
jg
test
roll
sub
add
mov
jp
enter
aad
jp
cmp
lea
hlt
sarl
xlat
loope
push
js
aam
dec
cmpxchg
enter
aam
mov
mov
mov
int
xchg
jp
mov
je
adc
mov
hlt
mov
sbb
mov
mov
ljmp
int3
push
mov
mov
xchg
mov
ja
in
jns
xor
or
dec
mov
fildll
mov
lods
jg
mov
rolb
xor
sbb
mov
jge
out
or
and
ret
jle
cmpsb
subl
subl
mov
loope
jnp
mov
shrb
mov
iret
or
enter
rcrb
jl
cmpl
roll
add
stos
jle
pushf
adc
inc
cmpsb
dec
mov
loop
clc
jns
rol
add
imul
push
mov
cwtl
jne
xchg
add
mov
scas
xchg
push
jge
inc
mov
test
dec
jp
jl
test
and
fdivs
mov
xorl
mov
repnz
xchg
fs
jb
and
mov
sbb
es
jne
shr
push
aad
cmp
pop
fcmovbe
pop
clc
test
and
mov
mov
sbb
lods
lret
leave
mov
xlat
xchg
inc
mov
ret
dec
test
in
mov
adc
aad
es
lods
sub
cwtl
fdivrs
ficompl
pop
fstp
cli
into
mov
hlt
mov
add
mov
fsubrl
add
push
jp
es
inc
les
or
leave
mov
out
mov
lods
js
fisubl
js
jnp
pop
and
dec
iret
sarl
nop
jbe
push
mov
int3
mov
fnstsw
es
sti
or
int3
xchg
mov
hlt
shll
jbe
xor
pop
ficompl
mov
test
mov
das
aad
into
push
pushf
push
xchg
outsl
jnp
jb
dec
lods
fdivrl
pop
jne
ror
adc
and
mov
pop
pop
orl
push
ret
ja
mov
notb
test
outsb
cmp
mov
adc
mov
mov
addb
loop
stos
xor
fdivs
arpl
jo
adc
js
loope
jp
add
and
inc
sub
frstor
lea
mov
push
loopne
lret
lods
mov
aam
fcoms
fucomip
adc
stos
decl
or
mov
out
push
xor
sarl
add
ds
in
cmp
jecxz
fsubs
test
or
push
loopne
adc
pop
adcl
mov
aam
lods
fidivrl
rolb
sbb
cmp
loop
stos
ret
sarb
mov
dec
xor
imul
rol
daa
mov
jns
aas
add
jae
xchg
fcmovbe
addr16
and
mov
add
inc
jecxz
and
aaa
jmp
aam
mov
xchg
jo
xchg
fimull
shlb
push
rcrl
and
outsb
mov
push
rcrb
xchg
cwtl
movsb
inc
cwtl
rorb
jle
xchg
jns
jp
jb
mov
mov
mov
mov
mov
es
iret
aaa
or
fiaddl
cli
pandn
adc
or
into
jnp
cmc
ret
loop
lods
es
loope
jge
jno
xchg
stos
cmp
mov
jns
mov
mov
or
dec
cmp
call
lret
loop
xchg
flds
add
and
jg
into
es
les
mov
sbb
cmp
cmp
sahf
lret
push
fnstcw
stos
pop
add
xchg
in
dec
mov
and
sbb
es
insl
add
xor
mov
mov
jns
mov
sarb
icebp
in
mov
jns
mov
sarb
jl
or
pop
sbb
imul
mov
test
stc
pop
inc
lret
jge
bound
pop
sub
out
xchg
aad
js
in
cwtl
push
add
icebp
mov
test
iret
scas
mov
xlat
mov
lods
test
mov
fistl
inc
push
inc
out
fisttpl
fidivrs
loope
pop
jbe
mov
sub
out
shlb
out
int
or
shrl
out
xchg
loopne
xchg
push
out
mov
lret
shlb
and
ror
mov
mov
mov
mov
int
mov
shlb
sub
jb
leave
xor
jge
jle
lahf
testl
jg
inc
adc
loope
ss
fidivs
push
scas
insl
fnstsw
jg
and
subl
mov
mov
jb
sub
lods
xchg
std
test
jns
xchg
jp
mov
or
cmp
ret
fdivrs
into
inc
test
fcmovu
or
mov
jge
xor
addb
aas
addb
movsb
cs
mov
fmul
fistl
shrl
mov
mov
jmp
popf
lods
mov
xchg
int3
dec
sub
loop
fisubrl
inc
dec
int3
fdivrs
sbb
xchg
jle
jl
movsb
mov
or
fmuls
mov
jb
movsb
lods
fldcw
inc
testb
mov
ja
jp
jo
mov
aam
scas
js
pop
or
mov
iret
mull
mov
mov
lret
mov
imul
mov
enter
ret
es
int
mov
pop
mov
jg
shrl
ret
xor
inc
cld
repnz
in
stos
push
mov
add
xchg
shl
fmul
lods
push
adc
outsl
sarb
cmp
mov
mov
xor
js
scas
ja
ret
loope
add
movsb
mov
rcr
iret
lahf
mov
pushf
pop
dec
cwtl
in
movsl
xchg
mov
jecxz
jno
adc
mov
jge
mov
call
mov
jecxz
enter
cmp
mov
mov
ret
fadd
xlat
cmp
mov
ficoml
ja
mov
shll
mov
ror
push
push
insl
sub
loope
imul
fldenv
inc
mov
mov
adc
and
dec
scas
test
cmp
mov
jge
bswap
rorl
mov
aad
push
ja
xchg
ja
jnp
mov
and
test
jle
dec
fcom
lods
jb
addl
je
lahf
faddl
leave
jmp
mov
int
xchg
sbb
fisttps
push
cltd
ss
movsb
fcmovnu
roll
sbb
flds
mov
mov
loope
adc
stos
int
sarb
outsb
sub
mov
lods
loope
es
mov
pushf
sbb
xor
or
mov
push
fildl
loop
fnstcw
cmpsb
loope
mov
cmp
fs
subl
ja
test
ljmp
movsl
test
rcrb
loope
int3
jnp
sub
fsubrs
into
sub
mov
sarb
mov
js
ds
shlb
lahf
das
xchg
or
ficoml
fs
xchg
popa
in
fisubrl
jl
xchg
sub
mov
dec
push
mov
push
je
imul
mov
ljmp
jecxz
movsl
int3
mov
nop
mov
cwtl
mov
fisubs
mov
xlat
popa
mov
xchg
imul
fdivs
mov
xchg
loop
loope
push
xchg
inc
pop
in
adc
push
scas
pop
lcall
pop
leave
inc
ja
pusha
dec
mov
mov
xchg
pop
out
shlb
lods
imul
fidivrl
inc
cmp
lea
dec
add
loop
jg
mov
cmpb
mov
dec
mov
shll
xchg
loope
loopne
cmp
mov
fidivl
inc
mov
xlat
enter
ja
rcr
pop
into
int3
leave
mov
nop
sysexit
pushf
test
cli
int
dec
inc
mov
inc
ret
inc
cmp
sub
adc
cmp
sahf
fchs
jge
test
jp
sbbl
push
mov
iret
xor
jne
mov
ja
mov
mov
adc
movsl
loope
aam
adc
push
ret
ror
jl
cmp
fidivrs
xchg
or
or
mov
test
mov
fninit
xchg
mov
xchg
fcompl
cmp
jl
xlat
xor
cmp
aam
cli
xorb
pop
xchg
and
jge
adc
lahf
test
lock
sahf
pop
jb
or
lods
shlb
test
aam
jmp
mov
imul
scas
mov
pushf
lds
xchg
ror
pop
lea
js
xchg
dec
mov
fmulp
shll
add
icebp
rorl
iret
mov
mov
rorb
loop
rclb
mov
jg
inc
fcmovnbe
bsr
sbb
mov
iret
jbe
push
mov
scas
jbe
and
out
loop
andl
lods
adc
insb
xor
mov
cmpsb
filds
rorb
sub
sbb
sub
and
mov
enter
test
jae
stos
test
mov
leave
push
into
shrb
imul
fsubrs
mov
jg
lret
aad
mov
push
into
jns
sub
push
add
mov
mov
lds
push
jl
fcmovb
and
loop
inc
xchg
adc
test
sti
test
ja
lret
lods
mov
xlat
lcall
fdivl
xlat
inc
pop
mov
fidivrs
inc
rcrl
ret
ret
mov
rclb
sti
xchg
mov
lds
xchg
mov
loop
rol
inc
adc
lea
pop
cwtl
xchg
mov
fistpll
stos
sar
sbb
shll
jle
sbb
or
add
or
lret
mov
lods
jb
push
leave
ds
mov
lea
mov
ljmp
xor
rcr
xchg
pusha
mov
cmpl
jl
xchg
fnsave
mull
lds
adcl
ret
outsb
jp
lret
mov
ret
push
test
rcrb
cmp
lods
loopne
inc
xor
xor
xchg
dec
rorl
in
sbbb
jmp
xor
iret
sub
fisubrs
adc
jl
xchg
mov
loop
dec
popa
inc
cmp
cmp
and
aad
mov
mov
cmpb
mov
loope
fucomip
push
stc
mov
stos
inc
into
sbb
jnp
les
test
scas
enter
jo
pop
mov
sarb
jns
mov
aam
jbe
mov
push
test
jecxz
in
jecxz
aam
xchg
leave
test
in
xorl
and
xchg
lods
iret
ret
xchg
mov
push
jecxz
jle
scas
orb
dec
add
or
leave
xchg
loope
or
arpl
cli
mov
test
or
loopne
gs
xchg
addl
test
jp
jmp
leave
jmp
addl
rol
or
mov
inc
fldcw
mov
inc
pop
iret
sarb
enter
scas
ja
loop
aam
and
jle
dec
jl
stos
scas
and
or
mov
iret
pop
jnp
cmpb
inc
mov
sbbl
imul
mov
jns
cmpl
xor
cmp
mov
xchg
insl
fsubrs
cli
int
pusha
iret
xchg
or
xchg
idivb
nop
ret
out
mov
rcrl
mov
jl
jno
inc
orb
inc
enter
leave
cmpl
stos
and
mov
stos
jne
loop
fwait
insb
aad
jnp
mov
jl
fistpll
mov
aad
sub
pop
je
inc
fwait
mov
movsb
mov
jg
cmp
xor
and
or
xchg
mov
leave
sbb
push
int
or
rcr
loope
fwait
lods
out
jb,pn
fbstp
inc
iret
scas
jnp
fnstenv
mov
push
jl
fst
xlat
fidivs
pop
dec
mov
xchg
sbb
adc
dec
and
scas
mov
imul
test
and
loopne
add
in
adcl
fiaddl
enter
ret
enter
lods
jp
int
iret
sbbb
pop
test
ret
aad
jl
mov
inc
inc
pop
sub
push
sarl
mov
arpl
testb
jge
idivb
leave
rcr
loopne
jbe
mov
ret
leave
popf
rcr
fcmovne
sti
push
sub
mov
leave
pop
mov
push
jg
mov
lahf
mov
cmpsb
cli
mov
push
loop
jge
and
shrb
mov
sarb
jno
jecxz
push
std
dec
mov
iret
mov
mov
adc
sub
jg
sarl
ret
xchg
mov
dec
mov
jbe
leave
sbb
jge
jbe
insb
lods
jl
mov
scas
fnstcw
ja
dec
jne
js
sub
je
pop
cmp
mov
out
mov
sarb
mov
loop
int3
fcoms
add
pop
jle
xchg
data16
add
lret
rorb
aad
jns
enter
arpl
xor
cs
push
test
insb
iret
push
repnz
mov
jecxz
loopne
scas
out
dec
es
dec
bound
or
push
dec
xorb
loopne
pop
scas
mov
test
sbb
sbb
mov
fstps
adc
adc
mov
add
xor
vmread
mov
dec
sbb
sbb
dec
es
out
ja
loop
leave
mov
loop
mov
xor
or
dec
cmpl
jp
mov
add
add
mov
filds
or
mov
in
push
leave
sbb
and
aas
lret
ret
xlat
cli
or
jp
xor
in
jns
lock
enter
xchg
test
mov
mov
loope
and
lods
dec
mov
mov
ret
jle
mov
ror
jns
cmpb
cmp
inc
cmp
mov
shr
or
jle
aad
mov
jge
scas
scas
mov
cli
test
mov
jecxz
pop
sub
int
inc
not
shll
fidivs
lods
subl
shlb
add
mov
xchg
shlb
add
mov
jns
mov
jbe
lods
add
fdivrl
addr16
int3
pushf
jnp
lahf
mov
out
jg
loopne
cwtl
lret
lea
adc
aam
sbb
push
stc
cmpsb
js
mov
test
xchg
adc
xor
test
pushf
aam
lret
jge
shrb
or
xchg
sub
mov
jno
dec
nop
xorl
jg
push
xchg
iret
scas
rcr
aam
rcr
mov
mov
lock
scas
cli
test
ret
mov
fldl
push
ljmp
aad
ljmp
or
mov
lock
sub
mov
cld
pop
lret
dec
aad
xor
sbb
xorl
push
xchg
cli
or
jns
fsub
xchg
mov
mov
mov
lret
inc
xchg
lods
xchg
jb
cmpsl
inc
sbb
aad
je
mov
or
test
subl
test
mov
ja
mov
mov
leave
lahf
adc
ss
xor
xchg
fidivl
cmp
out
dec
mov
sahf
shr
loop
test
mov
xor
repnz
loopne
inc
divl
es
jnp
rol
stos
sub
rclb
sbb
mov
nop
mov
cwtl
ficoml
lods
or
sarb
xlat
jb
mov
shlb
jns
xchg
scas
mov
mov
stos
cmc
rcr
enter
push
adc
jno
adc
jp
mov
mov
jg
sub
int3
rol
or
jle
mov
cwtl
jns
mov
ret
lods
cmp
mov
pop
and
pop
sub
mov
sahf
iret
imulb
mov
aam
jecxz
jbe
stos
xchg
xchg
test
cmpl
xchg
int
mov
xchg
jbe
mov
dec
sarb
lods
fnstenv
shlb
js
fcoms
mov
cmp
xor
adc
pushf
pop
sti
cwtl
fcomps
cmp
test
and
mov
mov
mov
sahf
ja
inc
sahf
aas
sti
test
inc
loop
fmull
dec
xchg
scas
dec
clc
aam
jae
jle
mov
fistpll
mov
push
xchg
dec
loopne
insl
mov
fcoml
jge
sbb
sahf
xor
adc
and
enter
inc
aaa
xor
fsubrs
sbb
shrb
mov
xchg
test
xor
divb
jecxz
ret
fdivrs
lahf
sbb
pop
dec
std
jl
dec
rorb
dec
js
cli
int
iret
mov
mov
xlat
ja
or
int3
test
xchg
jg
mov
outsb
mov
mov
mov
jecxz
rcl
leave
inc
ljmp
mov
mov
loop
and
leave
ret
mov
adc
mov
jge
mov
dec
rorl
lds
adc
fsubrl
into
inc
test
mov
jnp
xchg
jns
jecxz
test
mov
xlat
scas
or
sbb
loopne
divl
ret
aam
sarb
ror
mov
scas
mov
clc
fsubs
pop
or
scas
jl
pop
mov
shll
mov
popa
mov
jo
inc
movsl
push
repz
loop
into
mov
outsb
push
sahf
ficoml
rorb
loop
jae
out
jge
mov
inc
dec
mov
mov
loopne
mov
xchg
lret
mov
jecxz
mov
sbb
xchg
loope
ja
jl
mov
mov
mov
jp
jmp
push
xor
int3
and
push
adc
cmp
addr16
rorb
jp
mov
xchg
mov
loopne
lret
leave
fildl
jle
bound
negb
movsb
pushf
cmp
and
insb
mov
dec
aad
sbb
rol
repnz
mov
ja
addl
xchg
lahf
mov
popa
rcrb
les
sahf
test
ret
mov
movsb
jp
or
lds
iret
rcr
nop
xchg
pop
mov
mov
cmp
pushf
jbe
scas
shlb
jne
mov
dec
adc
psubw
ss
test
and
mov
pop
pushf
orl
shrb
jnp
mov
mov
movsl
aam
fwait
inc
ljmp
cwtl
mov
mov
shlb
push
or
pop
push
and
pop
adc
shll
jp
scas
leave
mov
iret
xor
cli
or
rcll
dec
mov
or
jo
imul
iret
mov
dec
jb
loopne
mov
sbbl
repz
ljmp
ret
out
or
fmul
mov
xchg
add
mov
jecxz
hlt
stos
xchg
aad
cmp
mov
mov
lods
les
add
xchg
enter
and
push
mov
test
jb
mov
sarl
xor
mov
aad
mov
jl
shrl
mov
push
mov
out
xlat
imul
mov
and
outsb
shrb
mov
ja
sbb
sub
fwait
jecxz
push
mov
rol
sub
lods
subb
fdivl
inc
in
or
lods
cwtl
mov
xlat
int
or
xor
mov
dec
mov
mov
es
scas
xchg
rcll
jge
cmp
ja
mov
into
or
or
and
mov
mov
test
in
sbbl
cmp
mov
mov
push
pushf
loope
movsl
enter
cmp
push
mov
sarl
mov
jp
test
cli
mov
loopne
cmpsb
shlb
pushf
xchg
inc
orl
ret
int
add
sub
jmp
ret
jge
sbb
ss
jns
es
xchg
push
adc
xchg
mov
test
jns
mov
nop
sbb
mov
popf
fildl
pop
rorb
aad
aam
imulb
jle
jl
mov
test
leave
mov
mov
es
in
cmp
shll
cwtl
pop
cwtl
mov
pop
loope
xchg
rol
mov
xor
shlb
outsl
sub
inc
inc
int3
mov
xchg
xchg
jmp
hlt
imul
das
mov
lods
mov
into
pop
add
rol
dec
scas
adc
push
sbb
ret
mov
dec
lods
jne
mov
repz
push
mov
mov
scas
cwtl
ficoms
cmp
inc
adc
jl
enter
roll
mov
jle
jmp
jnp
inc
mov
into
sub
jns
jns
arpl
dec
push
js
int
lods
mov
shlb
movsl
mov
jecxz
and
int
mov
rorl
leave
inc
mov
in
mov
push
test
stos
or
lods
mov
into
iret
xchg
mov
adc
jae
mov
cmp
lcall
lods
mov
cs
int3
test
pop
cmp
ret
rol
mov
sbb
test
fmul
sbb
jl
sbb
scas
jbe
fcmovne
mov
jns
sarl
push
mov
roll
mov
sar
jae
lret
lds
fidivl
iret
ret
test
xchg
clc
mov
mov
out
les
loop
cmp
inc
shrb
int3
inc
adc
jbe
jecxz,pn
ret
jge
jp
jg
fistpll
ret
scas
fptan
inc
sbb
jmp
in
jns
scas
pushf
jnp
ja
stc
cmpl
mov
pop
aam
lret
cmp
push
inc
pop
jns
scas
push
xlat
loope
ret
cwtl
fdivrs
idivl
xorl
sbb
int
ret
int3
fnstcw
push
mov
add
cmp
lahf
mov
xchg
jl
ret
test
adc
pop
imul
lds
xlat
dec
in
dec
jno
leave
jecxz
cmp
add
mov
mov
sbb
ja
add
or
rcr
ret
lahf
shrl
scas
shlb
dec
sbb
push
fsubp
loope
scas
dec
mov
mov
rcr
jnp
jecxz
xor
test
mov
stos
fistpl
jge,pt
leave
inc
jns
shl
aam
jg
xor
movsl
push
mov
andb
jnp
fisttpll
or
jge
mov
jp
into
out
incb
mov
mov
rcl
jp
mov
loope
rcrl
push
loope
je
push
js
int
xchg
jns
ror
xor
xor
aad
jle
flds
dec
lea
movsb
mov
aam
mov
mov
js
or
jge
les
mov
sbb
lahf
int
lcall
jge
hlt
cwtl
int
into
aad
aam
ja
xchg
aam
jae
fdiv
mov
xchg
mov
ret
sbb
fiadds
cs
add
jmp
push
scas
jmp
inc
fidivs
aam
cmpb
push
mov
ficoml
jp
enter
dec
leave
inc
jnp
stos
stos
scas
sbb
lret
mov
and
imul
ds
push
enter
pop
inc
mov
sarb
ret
aad
push
sbbl
out
jb
loop
jns
xlat
push
lahf
mov
push
fcomps
mov
mov
jp
inc
rclb
rcl
pop
fsts
mov
mov
sub
adcb
es
xor
jle
loop
lahf
jg
cmpsb
xchg
fstpt
mov
fs
ret
ret
lods
scas
or
pop
lods
cmp
enter
jge
pop
and
xchg
dec
fstl
push
imul
xchg
subl
repnz
mov
jbe
xor
loop
int3
shlb
push
xor
mov
jmp
insb
mov
int3
xorb
repnz
pushf
sarb
ljmp
outsl
adcl
sarl
bound
cwtl
aad
fstpt
mov
es
mov
roll
xchg
and
shlb
loope
shl
xchg
mov
aam
scas
int
mov
cmp
mov
adc
fcmovne
or
ret
int
adc
decb
adc
cmpsl
push
loop
rcr
mov
xchg
or
mov
jle
lahf
leave
dec
mov
adc
or
jge
scas
inc
cs
cltd
xchg
pop
subl
ror
or
jl
cwtl
mov
fcoms
lods
iret
lret
mov
mov
fildl
loopne
pop
repz
xchg
pop
shl
icebp
mov
and
loop
jb
add
add
mov
popl
xor
ds
mov
hlt
cwtl
add
bound
mov
cmp
lods
jge
fimull
js
aam
nop
nop
mov
loop
or
leave
icebp
fwait
dec
scas
ja
dec
imul
bound
shll
pop
xchg
sbb
int3
jecxz
in
lods
int3
or
inc
dec
insb
inc
loop
mov
mov
outsb
lahf
rorb
xor
das
or
sub
adc
xchg
mov
mov
shlb
mov
loope
call
and
imul
test
lods
loop
mov
test
fsub
jl
sti
aaa
dec
aaa
jg
scas
mov
sbb
mov
mov
pop
dec
pushf
pop
pushf
dec
imul
ret
adc
fmuls
xor
mov
ja
aam
mov
ror
insl
mov
and
enter
mov
inc
mov
xchg
int
aam
xlat
insb
scas
jl
mov
sub
fwait
mov
shll
inc
sub
rol
jg
lods
int
mov
into
add
mov
aad
jns
mov
cmp
mov
mov
inc
mov
rorl
ffree
jp
xlat
mov
lret
xchg
sbb
and
jmp
dec
cli
fidivrs
push
mov
xor
lret
jp
add
xor
fdivr
adc
enter
xorl
aam
cmp
ficomps
cmpb
xor
jns
test
lcall
roll
sbb
leave
lods
xchg
mov
leave
cmpsl
loopne
mov
cmpl
fst
xor
mov
pop
pop
imul
jne
mov
out
mov
fistpll
xchg
mov
shrb
inc
cmpb
loop
leave
add
mov
mov
dec
sub
xchg
mov
jecxz
xchg
mov
dec
orb
hlt
cli
jns
loopne
fcoms
loope
inc
mov
cmp
loopne
xchg
cli
jne
fnstenv
test
in
loop
adc
out
xchg
clc
scas
jecxz
sarb
ret
scas
ret
mulb
insb
sbbl
xchg
les
xor
stos
mov
add
mov
call
xor
add
push
and
mov
lcall
xor
ret
jecxz
cwtl
add
xchg
or
fnstenv
xor
pushf
jl
sub
pushf
mov
sarl
push
loop
rclb
adc
ja
repnz
sarb
testb
lods
aam
nop
stos
sub
adc
push
stc
jnp
mov
movsb
mov
scas
es
inc
leave
or
push
push
stos
mov
rcr
rorl
enter
jle
ja
testb
push
xchg
jg
fnstcw
mov
loope
pushf
mov
in
ret
mov
mov
push
or
scas
jle
pop
pop
pushf
xlat
mov
cmpb
mov
sahf
subl
lea
dec
jge
ret
test
cmpl
shrb
adc
mov
and
xchg
mov
rorb
cmp
jge
cmp
fdivrl
js
mov
mov
mov
mov
fdivrl
add
in
fcompl
scas
mov
mov
jle
xchg
addr16
sub
loop
sbb
inc
jp
mov
fidivrs
and
scas
lock
cli
jns
insl
fildll
test
xor
xor
ljmp
outsl
mov
mov
jecxz
add
sbb
jl
jle
shlb
int3
and
push
pusha
scas
out
sahf
pop
mov
loope
mov
dec
push
pop
mov
mov
push
int
imul
mov
loop
lret
adc
jae
leave
mov
mov
xchg
jl
rcr
push
iret
xlat
mov
inc
divb
into
mov
ja
jl
mov
ljmp
sarl
les
jg
pop
incb
fiaddl
outsb
loopne
jbe
xchg
adc
lea
fidivrs
mov
scas
push
shll
mov
ja
call
jnp
sarl
test
ret
inc
test
bound
fidivrl
mov
jp
push
fcoml
es
scas
mov
mov
sbb
int3
iret
inc
jns
enter
aaa
test
mov
loope
bound
lods
xchg
push
mov
rcl
or
rcr
pop
mov
cmp
les
es
shrl
cli
pop
jne
rcrl
adc
fldt
adc
insb
fnstcw
mov
dec
outsl
rol
fwait
aad
jl
inc
divb
es
adcl
inc
ror
mov
aas
or
mov
jecxz
jnp
cmp
inc
imul
or
ror
jp
xor
jo
lret
pop
mov
mov
mov
pop
sbb
insb
mov
jbe
or
jg
mov
lds
stos
cmp
mov
loopne
into
ret
leave
xchg
in
fdivrs
ret
imul
cmpsb
ja
frndint
mov
cli
loopne
mov
inc
hlt
addb
sarb
addl
scas
and
xor
sarb
add
outsb
mov
adc
in
mov
jo
mov
cmp
lods
fwait
loop
mov
jns
lret
jecxz
cli
fs
out
outsb
adcl
hlt
jg
rolb
lods
dec
mov
jecxz
cwtl
jge
shll
loopne
imul
sub
mov
loopne
sub
fwait
sti
loop
lods
xlat
insb
aad
leave
jb
or
iret
add
jg,pn
pop
iret
jnp
test
fwait
out
aad
pushw
into
cli
mov
aam
or
iret
jno
aad
sti
mov
fcmovnu
lods
fnstcw
fdivl
mov
subl
test
stos
dec
rol
xchg
jle
into
mov
jno
pop
clc
mov
cmpl
mov
and
lock
xchg
xchg
jle
xor
mov
aaa
sbb
xchg
push
loope
inc
int3
xchg
test
mov
adc
xchg
mov
das
cmp
add
add
ja
lea
imul
jle
sub
shr
ret
loope
ljmp
sarb
lods
into
lret
jl
test
push
dec
leave
sbb
rcrb
les
fcmovnu
dec
mov
icebp
test
jmp
jg
jae
add
sarb
mov
jnp
mov
lods
insw
scas
xchg
leave
mov
xchg
mov
adc
rcr
test
xor
insl
and
ss
cs
lea
aad
leave
jp
mov
jns
lea
jle
pop
inc
lea
fadds
add
push
mov
lods
aas
jns
push
lods
mov
xchg
inc
mov
jp
ret
fmulp
dec
es
or
jns
ret
sub
jp
fidivl
cli
lret
scas
fld
shll
aad
dec
int
mov
ja
mov
mov
andl
lea
dec
jge
mov
fwait
std
mov
pop
lods
rorl
roll
xchg
mov
int3
mov
push
jecxz
shl
xchg
sarb
fnstcw
sub
xchg
jl
jl
int3
test
fwait
xchg
mov
cmp
aad
jns
je
es
xchg
xchg
ret
sub
fnstcw
imul
in
enter
lret
xchg
add
mov
push
jne
lods
jecxz
cmp
adc
cmp
jp,pn
xchg
pop
aam
pushf
sbb
lea
dec
pop
mov
jp
push
add
mov
iret
mov
jecxz
fisttpll
mov
dec
mov
enter
mov
and
out
jp
int
leave
ret
lods
xorl
hlt
sub
andl
ret
loop
xor
pop
fxch
fcompl
push
push
sbb
or
mov
enter
push
fxch
adc
add
xlat
test
leave
out
leavew
cmp
int
js
aaa
mov
mov
mov
aam
add
subb
mov
dec
mov
fistpll
mov
or
adc
xchg
adc
adc
fucom
mov
mov
mov
call
lret
ljmp
roll
inc
loopne
out
cld
dec
xchg
fiadds
jge
fistpl
roll
xlat
mov
sbb
dec
xor
mov
cmpl
adc
or
ljmp
dec
data16
dec
or
push
dec
test
pusha
mov
mov
lods
jl
mov
mov
cmpsb
mov
lods
das
insb
inc
es
jo
mov
ds
jp
mov
loop
lret
mov
sub
enter
or
pop
scas
dec
cmovae
aam
arpl
dec
aas
ret
dec
pop
dec
or
add
or
rcrb
fistpll
test
ficoml
scas
cmpsb
and
movsl
mov
sub
pop
insl
aad
xchg
pop
fwait
push
leave
aaa
mov
mov
push
sub
loop
or
mov
push
xor
xchg
dec
jns
mov
add
pop
addb
out
inc
stos
or
sbb
mov
dec
dec
pop
xorb
ljmp
repnz
cmpsb
inc
push
xchg
or
subl
test
add
mov
outsl
sbb
test
enter
jecxz
hlt
lods
cwtl
daa
hlt
lea
shrb
ret
inc
push
cld
dec
in
mov
insl
scas
jnp
insl
dec
xchg
sbb
shl
out
dec
shlb
es
into
jg
movsb
sub
cmpsb
outsb
bnd
cbtw
rcr
xor
cmp
xor
dec
or
mov
iret
xor
fs
sub
sub
stc
pop
pop
xor
mov
insb
or
push
inc
ret
je
ret
es
ss
adc
mov
jge
jecxz
jmp
xor
sbb
imul
rorl
mov
sarb
rclb
push
or
push
lret
mov
leave
and
ret
mov
cli
mov
ret
adc
dec
jb
cmp
jbe
mov
mov
shll
loope
loop
lea
fldt
loop
or
cli
cmp
notl
int
inc
sarl
or
jbe
rcl
mov
push
dec
or
enter
fcmovne
or
movl
mov
int
push
pop
adc
mov
wbinvd
enter
sarl
sbb
fidivrl
rclb
mov
fsubrs
adcl
imul
fmulp
shrl
jae
add
mov
in
jp
js
jns
mov
add
xchg
jle
cli
test
test
inc
scas
stos
jecxz
push
and
in
adcl
loop
mov
mov
mov
ret
mov
push
mov
lret
pop
fldt
mov
add
mov
or
cli
mov
fbstp
mov
fisubs
shl
fnsave
mov
loop
addr16
jbe
roll
iret
loop
rorb
ja
or
mov
sbb
jle
mov
or
mov
cli
mov
inc
push
shrb
mov
js
sahf
pop
mov
mov
xchg
scas
mov
test
aam
or
mov
ja
loopne
jp
and
iret
xchg
mov
mov
inc
inc
jl
inc
mov
or
xchg
out
test
sarb
dec
popa
lea
xlat
adc
mov
mov
sarl
leave
int3
mov
push
fdivrs
loopne
loop
js
cmp
jp
repz
leave
add
xor
inc
inc
jo
sub
mov
jle
mov
fiadds
cs
fbld
mov
mov
test
jecxz
mov
test
cmp
add
mov
mov
js
mov
mov
jecxz
push
je
mov
mov
mov
sbb
pop
loopne
dec
add
in
dec
lock
shrb
dec
ja
jns
mov
dec
stos
xchg
adc
scas
in
push
xchg
mov
mov
and
mov
push
add
xchg
mov
ret
mov
mov
rcr
jecxz
aas
mov
jle
adc
loopne
cli
std
sahf
lods
iret
fsts
sahf
ss
test
xchg
and
xchg
in
int
push
pop
dec
mov
ljmp
lcall
jno
rcr
shr
scas
ret
xlat
mov
cmp
outsb
scas
aad
push
mov
es
jmp
enter
lods
loop
xor
gs
jno
cmc
test
adc
scas
mov
popa
jecxz
pop
ret
mov
jge
mov
mov
rcl
int
or
adc
ja
cmp
es
imul
add
sbb
fcmovbe
cmp
sub
rcrb
ret
rcrb
push
mov
jns
rcr
xor
jle
mov
jbe
shll
xchg
into
ret
adc
and
cmpb
leave
lcall
sarb
mov
jp
sarl
mov
into
mov
in
adc
mov
adc
test
mov
shl
ja
fmul
mov
dec
or
jns
pusha
mov
pusha
mov
ljmp
shll
loop
loop
insb
aad
pushf
jns
stos
sub
imul
adc
lods
mov
add
sbb
mov
mov
fisubrl
xor
ret
fiaddl
and
loop
lds
enter
mov
fcmovu
mov
jp
mov
int3
lods
mov
jg
inc
shll
mov
pop
mov
shlb
mov
sub
iret
gs
jb
jnp
or
mov
xchg
mov
pop
aam
ret
jge
jp
aad
jecxz
mov
or
fbstp
jl
scas
scas
int3
dec
lret
or
mov
mov
mov
iret
dec
es
mov
std
jge
scas
pushf
aas
lahf
pusha
xchg
adc
adc
pushf
rcll
sahf
and
push
jle
sbbl
mov
jmp
adc
fcmovnb
das
push
inc
xchg
add
push
mov
addb
mov
dec
iret
faddl
stc
imul
lret
fdivrs
or
jnp
inc
cwtl
lods
aad
xchg
adc
ja
shr
incb
mov
test
or
sub
fisubrl
mov
lcall
jle
mov
aad
jnp
ret
cmp
pushf
jns
ret
xor
add
ficompl
mov
shrl
mov
jecxz
jg
mov
mov
or
fcmovnu
leave
scas
les
ss
or
jg
mov
mov
jnp
sub
loope
jmp
pop
in
imul
mov
int3
mov
std
xchg
or
pop
fucom
and
fwait
inc
shr
ja
movsb
movsb
hlt
rcrl
fstps
enter
sub
insb
lods
pop
mov
stos
dec
aad
sub
ror
mov
cmpl
or
loopne
fstps
pushf
sarb
mov
cmpsb
mov
test
jecxz
push
push
and
cmp
mov
mov
ret
test
lret
leave
outsb
js
dec
mov
jle
mov
out
int3
mov
sahf
inc
sbb
lahf
ficompl
jae
test
enter
addl
mov
mov
pop
loope
push
mov
cmpb
pop
mov
enter
ret
cmpsl
fadd
sub
push
pusha
loope
test
jle
into
dec
ror
enter
push
jl
mov
stos
fdivrl
leave
shl
or
ja
jp
sbb
cs
rolb
jnp
popf
clc
leave
or
shll
ficompl
jl
adc
fsubr
xchg
fnstsw
and
movsb
aam
jl
je
adc
scas
lods
repz
mov
xchg
jge
xchg
lret
sbb
sub
or
out
call
mov
push
add
test
fsub
ja
xorl
js
mov
xchg
leave
test
shlb
nop
fdivs
ljmp
loop
fcmovb
mov
dec
jno
push
push
cwtl
fstpl
rcl
mov
xchg
insl
mov
push
rol
lret
shlb
xchg
mov
arpl
fldenv
insb
jnp
sbb
in
mov
loopne
push
xchg
ja
iret
adc
es
roll
sub
adc
fldl
cmpsb
addr16
pop
outsb
jl
lods
jb
fidivl
add
sbb
andl
mov
les
les
inc
inc
mov
mov
jge
test
out
pop
mov
mov
scas
cmpb
mov
jp
inc
or
lret
shll
ja
movsl
test
ror
dec
cmpl
sbb
mov
frstor
outsl
shrb
cmp
aaa
mov
lahf
cmpb
cmpsb
sbb
lock
scas
jg
add
inc
add
add
xor
in
inc
mov
cwtl
ja
cmp
imul
nop
pop
sub
sub
jnp
jae
adc
fistpll
jge
daa
sbb
rclb
cmp
arpl
xchg
test
jecxz
stos
sub
mov
imul
pushf
enter
sbb
cmp
inc
add
mov
clc
mov
push
mov
aam
mov
xlat
in
adc
xchg
xor
and
loop
mov
aad
rcr
aaa
push
addr16
jmp
rcll
shlb
in
or
mov
int
mov
mov
mov
jp
lock
out
outsb
mov
sarb
jecxz
mov
xor
sub
pop
iret
sub
cmp
cmpsl
mov
loop
ret
cmp
ret
lods
fxch
scas
dec
aaa
dec
inc
mov
ja
or
mov
es
mov
and
rcr
and
lods
mov
mov
lea
mov
stos
and
ljmp
aam
sahf
pushf
or
dec
mov
dec
xchg
lods
ret
call
lods
fst
fdivs
cli
nop
jl
jecxz
iret
sub
loop
imul
movsl
lods
pop
leave
sahf
pop
sarl
scas
xchg
pop
fsubl
inc
fwait
mov
ret
mov
ja
jecxz
mov
decb
test
mov
xchg
push
push
xorb
mov
fcomps
lods
lahf
adc
imul
mov
stos
mov
loopne
ret
cwtl
aad
lret
xchg
jg
ja
ficoms
lea
mov
lods
js
ljmp
xor
ret
mov
lret
aad
fistl
int3
mov
aam
xlat
cmpl
mov
movsb
fnsave
test
mov
jns
mov
cmpsb
xchg
rorb
loope
jle
aam
stc
idivb
cmp
mov
push
enter
je
jecxz
jae
adc
shrl
rclb
mov
lods
mov
shlb
stos
out
mov
shlb
and
std
shrl
xlat
mov
push
sub
push
mov
sarb
jg
fistl
inc
mov
scas
cmpsb
ret
adc
lret
fcompp
int3
addr16
or
jp
ds
mov
xor
out
mov
xchg
mov
test
iret
jle
shlb
cli
jo
mov
push
or
mov
int3
fistps
inc
shrb
ret
jp
push
test
fs
mov
jle
mov
jns
in
fwait
mov
mov
aam
ret
shrl
mov
jmp
iret
repnz
or
xlat
inc
sbb
mov
pop
scas
jns
or
ret
test
leave
and
cmp
mov
xlat
fldcw
mov
and
popa
mov
inc
mov
scas
data16
insb
xorl
loopnew
inc
mov
nop
mov
fisubrl
sarb
ret
jle
mov
lret
lods
mov
insb
sarl
jle
mov
loope
xchg
fistpll
jnp
data16
test
scas
jecxz
aad
dec
imul
mov
and
sbb
test
xor
shl
and
mov
shrl
mov
xchg
xchg
je
and
rcl
sub
mov
mov
cmp
or
sti
jnp
cmp
rcll
push
xor
inc
jns
into
or
out
mov
lods
into
inc
mov
xchg
shll
mov
adc
sub
xor
pop
insl
cmp
mov
mov
js
add
mov
xchg
rcrb
fcom
out
shll
or
scas
mov
jbe
fwait
loop
out
xchg
jge
mov
mov
mov
mov
cmp
fidivs
cli
dec
mov
or
fisttps
mov
repz
rcll
sbb
cmp
jle
das
lods
pop
mov
out
movsl
jnp
inc
push
js
push
fdivrl
or
xchg
jnp
out
mov
mov
loop
mov
sarl
nop
mov
fadds
insb
addl
pushf
sahf
xlat
jg
push
mov
xchg
addr16
add
jg
or
subb
mov
adc
movsl
loope
mov
loop
mov
xchg
pop
nop
sub
in
mov
dec
outsb
mov
sti
stos
ss
in
push
push
outsb
insl
xchg
loopne
xorb
or
mov
enter
jnp
fninit
fdivl
mov
das
jbe
jbe
cmpsb
fdivl
xchg
call
jecxz
stos
idivl
push
daa
cwtl
leave
rorb
mov
fcmove
bound
or
mov
mov
aam
xchg
jbe
ret
mov
mov
lods
int
lods
enter
ret
mov
out
in
inc
jp
scas
std
inc
and
sbb
mov
shlb
das
rclb
or
stos
shr
loopne
mov
inc
imul
stc
pop
jp
mov
lods
ret
cld
or
jp
mov
movsb
sbbl
mov
dec
jge
shrl
outsb
mov
dec
popf
jle
push
dec
dec
pop
lods
or
jl
or
ret
sbb
in
je
aaa
dec
sub
imul
mov
sarb
lock
xchg
or
enter
pop
cmpl
aaa
pusha
stos
and
mov
mov
adc
cli
mov
into
aam
push
int
ret
scas
nop
shll
mov
fstpt
stos
loop
out
push
insb
mov
int3
jp
enter
int3
int
mov
sub
int3
mov
add
xchg
xorb
xor
and
in
int
dec
sahf
repnz
fcoml
xlat
jl
or
shll
mov
rorb
mov
scas
or
inc
mov
into
lods
mov
jns
int3
ficomps
sahf
repnz
xor
repnz
test
lods
addl
rcr
ss
sbb
fwait
sarb
imul
scas
rorb
movsb
in
fdivrs
enter
out
test
enter
rolb
stc
loopne
iret
ja
cwtl
fdivl
ret
ret
mov
sub
lahf
jg
inc
aad
lock
sahf
xchg
out
jnp
xchg
rolb
out
sarb
test
xchg
data16
sahf
sarb
or
jns
jp
test
lods
leave
pop
cs
push
fcmovnbe
mov
mov
fstl
jne
xor
xchg
ror
adc
mov
inc
stos
pushf
mov
aas
les
ret
int3
mov
xchg
cwtl
fcomps
mov
insb
inc
mov
sbb
push
inc
or
ja
jl
jg
xlat
add
cli
pop
mov
mov
ja
sub
mov
scas
mov
or
dec
inc
int3
or
lahf
test
xchg
repnz
outsl
jb
xor
cld
xchg
mov
xchg
jle
add
test
lods
mov
insb
ret
jnp
ret
xchg
jg
ffreep
ljmp
xchg
push
mov
push
icebp
cmp
push
jns
std
loop
ret
enter
cli
mov
xchg
cmp
jns
scas
jbe
les
fldcw
push
mov
add
fmuls
lods
mov
lds
leave
pop
and
and
loope
in
mov
shl
xchg
lock
cmp
inc
into
ds
fisubrl
aas
pop
movsb
imul
lock
jle
out
pop
mov
mov
sbb
push
dec
jns
lds
in
or
jmp
jge
mov
loopne
mov
test
mov
mov
rcr
xor
sbb
xchg
mov
imul
shlb
test
push
pop
mov
fnsave
ret
fcmovu
xchg
fdivrs
xchg
jg
cmc
shrl
mov
inc
ret
std
inc
andl
enter
sbb
scas
neg
xorb
loop
addr16
mov
mov
int3
aad
mov
pop
cmp
fistps
jo
mov
loope
and
call
scas
pushf
mov
jecxz
aad
push
fmull
dec
sbb
loop
sarb
idivb
jnp
out
push
mov
pop
enter
loop
shlb
iret
mov
jmp
mov
das
dec
and
pop
push
aam
cmp
mov
sub
shll
outsb
add
repnz
jg
js
bound
shrb
shlb
mov
loop
scas
fidivl
fisttps
int3
test
or
ffreep
xchg
out
psubb
xor
shl
xor
jae
mov
mov
jp
rcll
push
jg
xor
mov
iret
jb
test
mov
mov
mov
jge
inc
xchg
dec
js
and
jg
cwtl
jae
pop
fldl
push
mov
pop
mov
fidivrl
mov
and
leave
loope
scas
dec
push
leave
lods
test
sbb
add
cli
loope
inc
jns
ds
lea
loop
sub
mov
stos
addr16
das
jo
sahf
or
test
leave
push
mov
push
ficoms
sbb
test
ret
mov
sbb
pop
rcr
dec
scas
ret
mov
inc
xchg
cmpl
or
mov
mov
or
or
shl
jge
rclb
mov
add
fsubrs
push
xchg
xlat
mov
shll
pop
jae
aam
loope
pop
imul
rcrb
xor
dec
icebp
stos
iret
rcl
cwtl
test
fcmovnbe
outsb
loop
orb
daa
shll
das
jne
adc
and
ret
xchg
repz
or
xchg
cmpsb
jl
mov
xchg
enter
mov
in
ret
push
fiadds
roll
mov
imulb
xor
push
jp
adc
mov
mov
inc
fdivrs
or
js
std
loope
xchg
lods
frstor
leave
int
push
test
jge
iret
add
mov
sbb
cmpsb
cli
es
test
int3
cli
jecxz
mov
lret
pushw
loop
jbe
xchg
sahf
loop
jb
fs
adc
sub
mov
add
fldenv
xor
cwtl
int
xor
test
lods
ficompl
ljmp
out
aad
adc
jg
jecxz
mov
mov
ret
dec
xchg
ja
rorl
sub
jnp
mov
decb
xchg
xor
je
cli
jmp
jl
mov
mov
jmp
mov
scas
lods
mov
insl
fdivrl
mov
rcr
jge
iret
imul
lods
mov
pop
lea
fmuls
stos
jnp
ljmp
mov
or
fstp
mov
mov
scas
stos
fmulp
ljmp
es
cmp
enter
and
jb
frstor
jno
andb
sar
cmp
push
decb
int
fnstcw
xor
loop
push
scas
mov
test
mov
fnstenv
pop
dec
hlt
pop
jecxz
jp
enter
xlat
fstps
xlat
mov
inc
int3
les
popa
jp
inc
jbe
fdivrs
pushf
mov
test
js
cli
mov
lods
fildll
loop
ss
inc
out
cmp
stos
mov
and
jne
mov
rclb
outsb
sub
mov
int3
ljmp
jp
test
movsb
loope
shrb
jb
fidivl
inc
push
push
mov
jnp
pop
sbb
clc
xchg
mov
andl
scas
xchg
xlat
mov
jg
iret
inc
add
aam
and
or
cmpl
pop
jecxz
dec
lret
int
outsb
jge
mov
imul
loopne
insb
jle
inc
rorl
js
iret
rcl
mov
xchg
xor
and
mov
repnz
mov
mov
lods
add
test
jb
ret
fistps
loop
iret
popf
test
shll
jnp
scas
insb
out
mov
push
or
fwait
mov
pop
outsb
push
mov
shll
jne
sub
fsubrs
scas
jg
orl
aam
imul
xlat
test
js
loop
add
adc
jp
mov
cmp
ret
lods
nop
mov
loopne
xor
or
push
add
jge
mov
mov
fisubrl
shrl
pop
mov
aam
iret
mov
and
in
sub
insl
mov
mov
int
push
dec
adc
fs
jge
sbb
je
mov
sub
gs
add
fwait
mov
add
scas
outsb
mov
movsb
fstpl
stc
dec
sub
or
mov
sub
cmp
adc
imul
rcl
fnstenv
movsl
mov
addb
test
ret
push
push
int3
add
mov
clc
imul
xchg
insb
or
out
stos
pushf
ja
call
js
loope
scas
dec
xlat
sub
or
mov
jecxz
subl
loop
xorb
dec
jle
inc
and
mov
jbe
outsb
fstps
int
push
movsb
xchg
stos
nop
negl
push
adc
dec
lcall
sbb
cmp
mov
shr
pushf
jg
cmp
dec
inc
jle
mov
sbb
fildll
std
push
shlb
jl
mov
mov
lods
js
mov
jl
mov
pop
shr
or
mov
ja
je
scas
push
iret
loope
or
mov
into
fstpl
lds
sbbl
jnp
int
js
cs
scas
mov
enter
jmp
in
ja
jae
loope
mov
jnp
xlat
lea
mov
fmull
mov
mov
pop
popa
fidivrs
xlat
or
or
jbe
cltd
push
or
faddp
es
mov
jb
ret
fmul
dec
adc
les
ja
mov
adc
mov
inc
jp
rolb
sbb
int3
leave
and
fwait
mov
mov
push
xchg
jge
into
xlat
orl
mov
sarb
dec
xchg
scas
mov
fldt
push
inc
dec
mov
xchg
repz
mov
mov
repnz
dec
adcb
addl
cmpsl
rol
mov
enter
lret
call
mov
xor
jle
bswap
test
fadds
mov
jp
add
mov
insb
mov
jae
mov
aas
inc
or
push
jle
sbb
mov
push
shr
xor
test
enter
incl
sbb
fisttps
add
dec
mov
mov
jbe
loope
mov
mov
test
lock
dec
sbb
out
mov
dec
push
enter
mov
adc
stos
mov
movsb
fstpt
mov
scas
and
test
enter
jle
fildll
int
jmp
jnp
rolb
insb
fsubrl
mov
and
scas
je
jns
js
mov
loope
dec
fidivrl
lods
mov
xor
mov
inc
adc
dec
adc
leave
test
dec
mov
rcrl
dec
and
loop
rcll
jg
or
push
scas
cli
push
mov
pop
push
jnp
mov
dec
jge
and
mov
dec
mov
mov
fcom
pop
pop
jbe
nop
mov
xor
leave
xchg
or
fnstsw
int
gs
mov
fs
sub
loope
ds
add
sbb
es
xor
ja
xor
xchg
iret
mov
mov
jp
out
fldl
jge
sbb
aad
jbe
jae
cs
mov
clc
test
test
mov
sbb
js
dec
pop
enter
jp
xor
mov
fldenv
inc
jns
mov
xorl
jo
jnp
sbb
test
movsl
fnstcw
xchg
sub
aam
unpcklps
mov
rcr
xor
cmp
enter
jne
dec
rcl
jmp
filds
xchg
jbe
mov
xchg
mov
ds
sub
cmpsb
ret
or
scas
aad
test
fstpt
addl
cmp
iret
rcrl
sbb
popa
jle
lret
or
fisttpll
ret
notb
inc
push
test
andl
cs
mov
jp
lret
test
sahf
ret
jle
arpl
je
test
jb
aam
movsb
iret
mov
dec
hlt
scas
fisubrs
mov
lcall
xor
cmp
pop
xchg
jmp
push
loop
sub
xor
fbstp
fstpt
xchg
lea
mov
mov
test
mov
jle
jns
loop
cwtl
roll
fidivrs
rcrb
push
jmp
pop
jecxz
pop
fsubrs
aam
outsb
sti
mov
or
rcll
fsubrl
inc
loope
es
sub
lock
jle
fmul
and
sub
mov
clc
inc
adc
outsl
insl
mov
sarl
hlt
test
enter
jns
push
fdivl
xchg
dec
push
pushf
lahf
sub
pop
sbb
dec
movsb
andb
sub
xchg
cmp
mov
mov
icebp
ret
sub
cmp
movsl
mov
scas
or
ss
mov
mov
test
into
mov
pop
test
inc
pop
push
sbbb
enter
fbstp
scas
adc
in
xchg
jns
jns
lret
jecxz
jmp
ret
xchg
int
or
mov
inc
xor
pop
mov
sbbl
outsb
mov
xchg
loopne
sbb
test
xchg
aad
mov
into
cmp
leave
jb
jp
ret
popf
xorb
mov
lods
enter
icebp
fimuls
lcall
sub
adc
insb
sbb
mov
lret
in
lds
mov
mov
das
ret
push
xor
jg
dec
mov
jp
fmulp
jns
mov
int3
jb
xchg
fld
jle
adc
imul
jl
ret
mov
lcall
loop
or
ret
sti
dec
cmp
fisubrl
cmp
xor
mov
mov
inc
adcl
sub
fmul
mov
fdivrl
pop
es
pop
ret
mov
add
repz
scas
xor
fnstenv
subb
cmp
mov
mov
cli
inc
inc
ficomps
and
in
push
aam
inc
scas
mov
xchg
int3
sarl
xchg
lcall
in
pushf
test
dec
cmp
mov
rcrb
inc
jl
xorb
sbb
xchg
lock
cmpl
das
fwait
lds
inc
mov
std
ret
jmp
sbb
aaa
cs
mov
int3
shll
jge
lods
shll
mov
imul
sbb
das
sub
test
leave
sbb
lock
cmpsl
roll
lods
int
cmp
faddl
xlat
jns
mov
push
and
aam
loop
mov
mov
dec
scas
arpl
lods
sub
ja
or
rorb
dec
fmuls
inc
xchg
insb
mov
stc
lret
mov
shll
test
loop
or
jmp
dec
mov
pop
add
shr
bnd
sbb
fcoms
jle
pushf
xchg
fcmove
clc
jb
mov
int
lock
je
sarl
pop
fwait
fwait
jl
lods
push
jecxz
aad
loop
xchg
sti
mov
inc
mov
mov
mov
jno
push
insb
xchg
psrld
mov
xlat
nopl
xchg
stos
jns
ficoms
js
loop
adc
push
aam
xchg
outsb
scas
or
int3
jle
and
insl
rol
xor
push
sarb
mov
cli
fsubl
sbb
mov
andb
mov
cmpl
cmp
cmp
sbb
sub
xor
inc
out
in
mov
arpl
pushf
rcrb
jg
cmp
ret
fcom
insb
scas
fiadds
mov
ret
rcl
addb
jp
mov
pop
nop
lods
scas
xchg
add
aas
cli
mov
fdivs
mov
mov
xor
cmpb
std
icebp
aas
push
movsl
xlat
push
scas
mov
ja
cmpsl
addl
sarb
in
shlb
push
inc
mov
lahf
js
or
mov
fsub
xchg
movsb
mov
mov
pushf
jecxz
cld
in
adc
aad
movsl
int3
jb
mov
scas
mov
mov
enter
movsb
ret
jb
insl
mov
leave
mov
enter
fsubrs
sarl
sub
cmp
mov
stos
in
test
lods
and
ja
cmp
fldcw
inc
fwait
mov
pushf
lahf
adc
pop
movsb
sub
or
es
sti
or
mov
fst
aad
mov
rol
test
inc
adcl
add
ret
shrl
or
mov
ret
loop
sar
ret
adcl
xlat
jae
shl
test
mov
ret
adc
lret
arpl
xor
std
inc
jge
fcmovnu
xlat
enter
jp
test
jle
mov
and
cmc
into
js
mov
subl
dec
enter
negl
dec
dec
loopne
movsl
sub
adc
loop
jl
adc
lds
push
push
cmp
xchg
ja
adcl
mov
xchg
jb
or
fadds
cmp
sbb
add
and
inc
in
lds
mov
xchg
dec
push
mov
mov
in
jnp
shlb
mov
xchg
aad
mov
jge
ja
mov
pop
xchg
scas
mov
mov
mov
ret
cmpsl
mov
faddl
into
int3
xor
loop
jle
js
fnsave
mov
shrl
lods
mov
jg
outsb
add
adc
enter
mov
dec
lods
dec
pop
test
fwait
mov
jnp
pop
js
int
cmpsb
mov
enter
dec
fildl
mov
mov
mov
mov
fiaddl
fdivl
cmpb
pop
lret
xlat
mov
scas
rcll
popa
lods
clc
sbb
loope
inc
sub
pop
call
rol
xchg
xor
dec
xorl
sarb
pushf
aaa
mov
mov
outsb
cs
bswap
leave
ret
mov
adc
in
inc
shrl
mov
je
ror
fidivrs
imul
rcr
scas
loopne
out
movsl
shrb
jbe
cmpsb
lods
push
jl
call
mov
adc
cltd
lahf
fistpll
hlt
imul
lds
int3
and
mov
jnp
ljmp
dec
push
or
xchg
mov
fnstcw
and
leave
cwtl
ja
inc
inc
mov
test
das
cmp
in
out
inc
fiadds
enter
sub
daa
mov
jmp
or
comiss
jge
mov
lods
stos
lahf
ret
rcrl
sub
pop
mov
mov
sbb
cli
jle
scas
jl
mov
inc
js
xlat
dec
stos
xchg
aad
xchg
add
mov
repz
iret
fistps
outsl
mov
add
out
out
lea
scas
push
fldcw
lods
jp
rorl
insb
pop
rolb
lahf
inc
das
jae
mov
inc
test
cmpb
adc
jg
lods
mov
pop
mov
or
dec
push
mov
inc
enter
jg
dec
insb
nop
cmpb
jp
lahf
fdivs
lcall
cmp
xchg
je
mov
scas
dec
ficompl
and
int
mov
jle
jmp
fmul
dec
inc
mov
int3
xchg
jp
aad
test
mov
jns
mov
scas
mov
lods
das
cmp
jp
ja
xchg
into
jl
not
sarb
mov
jl
repnz
loopne
mov
shlb
adc
sbb
ljmp
shrb
mov
sbb
and
imul
rolb
dec
decb
pop
mov
js
mov
push
test
cli
aam
mov
es
jmp
fisttps
rol
dec
sarb
mov
insl
cmp
js
roll
repnz
jne
fsts
and
scas
jno
test
push
push
stos
jg
popa
inc
out
pusha
inc
lea
scas
aad
dec
dec
mov
push
add
out
mov
stos
cs
enter
scas
rcr
sarl
pop
loope
push
cmp
das
imul
mov
shlb
mov
aaa
ss
test
test
mov
loopne
leave
inc
mov
lock
enter
mov
loop
in
mov
jl
jo
ret
or
push
test
or
aam
mov
sub
faddl
lock
js
lahf
rolb
xchg
into
mov
aaa
mov
mov
jecxz
ja
and
xchg
adc
or
fucom
mov
push
pop
cmp
fwait
jo
inc
pop
ret
scas
fildll
dec
pop
mov
mov
ret
mov
loopne
rcl
cmc
mov
es
mov
fimull
lret
jge
sub
loope
iret
jns
js
test
lahf
mov
stc
sbbb
mov
jp
js
adc
dec
fnstsw
pop
cli
pusha
call
mov
aad
lahf
test
jl
mov
stos
outsl
sbb
int3
dec
shlb
aas
add
rcr
jg
shl
cmpsl
rorb
outsb
fidivl
xchg
jl
jge
testl
filds
ret
mov
lods
xlat
fdivrl
ret
repz
orb
roll
sarb
rclb
fcoml
sahf
xor
call
pop
test
dec
in
push
loop
scas
fchs
add
push
ja
sbb
jnp
addr16
mov
sbb
push
rcll
mov
cli
mov
jp
ret
sbb
sarl
sbb
sbb
mov
in
ret
mov
add
out
add
xchg
or
mov
ljmp
stos
mov
dec
jnp
call
rcl
test
mov
fldcw
scas
or
clc
or
pop
fdivl
mov
call
mov
fidivl
bound
leave
stos
js
add
in
fdivrl
mov
ficoml
mov
lea
maskmovq
imull
mov
into
xorb
fnstcw
fnstsw
test
scas
aas
push
mov
xor
xchg
pop
rorb
mov
jnp
mov
or
loop
push
dec
dec
dec
fsubl
shlb
adc
gs
jne
in
rcrl
cmp
inc
ret
scas
ficoml
mov
loop
mov
jl
mov
pop
mov
adc
jae
mov
cs
pop
sbb
and
les
mov
shrb
push
mov
rcl
mov
rol
mov
bound
shrb
cs
into
adc
and
pop
lahf
rcrb
mov
mov
hlt
scas
loop
or
ja
lock
push
or
xchg
popa
shrl
sbb
xchg
mov
xchg
jmp
cli
lret
mov
leave
dec
jp
jae
mov
cli
fidivrs
mov
leave
insb
jns
sub
and
mov
rcr
aam
test
lahf
out
jle
addl
lods
rclb
dec
repz
xchg
aaa
mov
aam
inc
repnz
sarb
pop
and
pop
or
cmpb
in
test
js
adc
dec
fidivl
xor
es
xlat
mov
ja
iret
jecxz
lret
jge
mov
into
mov
mov
or
aad
fistpll
fstp
rcll
lods
sbb
dec
lea
xor
movsb
jns
fwait
mov
mov
pop
jecxz
loop
mov
xlat
mov
xchg
mov
or
loop
cmp
mov
fistpll
mov
into
cmp
fildll
int
and
xchg
enter
pop
iret
clc
mov
mov
mov
pop
les
cmpb
add
xchg
cmp
scas
dec
insb
sbb
add
push
leave
jge
cwtl
lods
jp
hlt
mov
ret
ffree
aam
push
data16
fiaddl
mov
cli
ds
ljmp
fsts
loopne
test
imul
mov
es
and
cli
test
mov
mov
js
mov
loopne
leave
add
scas
and
xlat
mov
ret
sub
orl
mov
shl
mov
jge
add
movhps
fcomps
int3
ljmp
addl
loop
lock
mov
fadds
mov
lods
inc
jecxz
int3
xchg
inc
fwait
mov
aad
shll
imul
mov
les
sahf
xchg
rcl
mov
inc
xchg
mov
xchg
mov
mov
or
xchg
push
lock
jnp
lods
mov
sarl
and
add
mov
fdivrp
test
pop
jb
out
enter
jge
or
leave
adc
test
cwtl
mov
jnp
pop
fcoms
loope
pop
pusha
ficompl
or
js
aad
fnstsw
fpatan
aas
fadd
sbb
iret
mov
mov
cli
fldl2e
mov
leave
shl
imul
ja
shr
scas
jle
loopne
movsl
mov
rcr
cmp
mov
ror
add
sub
loopne
jns
sub
pop
xor
mov
sub
push
fwait
jnp
ret
xchg
or
dec
lret
hlt
test
mov
ss
ret
mov
cmp
mov
jl
pop
test
or
iret
fisubs
or
repz
mov
mov
dec
mov
mov
loopne
loop
sub
inc
mov
jge
fcmovnb
dec
jecxz
or
loopne
shlb
mov
dec
fcmovb
shlb
cmp
pop
mov
mov
mov
ss
or
push
leave
call
add
sbb
cmc
imul
sarb
cmpl
sub
das
ffree
mov
pop
xlat
push
rcrl
shl
inc
enter
adc
mov
push
sub
ret
enter
fldenv
imul
mov
pop
ljmp
lods
sub
dec
adc
fistpll
mov
fcmove
aam
rcrb
loopne
push
cltd
mov
ljmp
movsb
fidivrs
mov
jnp
inc
pop
stos
xchg
mov
insb
mov
sahf
popa
or
xchg
adc
or
ret
test
loope
int3
test
ret
iret
mov
pop
cmpsb
rol
hlt
cltd
pop
aad
fs
push
cltd
add
cld
scas
mov
movsl
and
addr16
pushf
mov
mov
mov
mov
negb
pushf
ret
xchg
mov
pushf
lods
fdivs
fwait
mov
sbb
xor
xchg
into
dec
jmp
aam
lods
mov
iret
test
jge
mov
or
das
int3
push
ret
push
mov
inc
imul
inc
shll
fldenv
mov
jns
mov
int
push
xor
inc
pop
xor
ret
int3
jmp
inc
ret
jg
scas
js
jmp
mov
into
mov
test
out
mov
dec
cwtl
mov
cmp
pusha
loop
xchg
mov
pop
jnp
cli
sub
mov
movsb
mov
mov
stos
rolb
jecxz
orl
movsb
mov
mov
jp
out
mov
push
xchg
mov
lahf
jns
sarb
mov
test
jl
inc
add
das
dec
pusha
ficoml
push
adcl
bound
loope
std
test
or
and
insl
mov
pushf
mov
jle
shrl
lods
push
cmpsb
int
jecxz
fdivrs
adc
stos
loop
shll
cs
jne
sub
neg
ret
jae
or
mov
ljmp
jns
mov
scas
cltd
arpl
rolb
mov
imul
or
enter
ss
ss
in
xchg
ret
scas
xchg
fdivrl
js
jbe
test
mulb
orl
xchg
sbb
loop
outsb
loop
cwtl
jp
xchg
call
aad
push
xor
mov
mov
test
cli
cld
cmp
xor
sarl
cs
fimull
mov
jmp
xchg
cmpb
mov
adc
xchg
xor
mov
dec
sbb
lret
ret
mov
mov
enter
int
mov
movsl
outsb
pop
ret
cmp
inc
and
inc
movsl
iret
fistpll
int3
repnz
enter
sbb
sbb
into
xor
loopne
pop
ret
insl
scas
leave
leave
sub
sbb
jecxz
into
add
loope
sub
scas
adc
aad
push
mov
sbb
mov
scas
jecxz
addb
lock
push
mov
or
and
sahf
mov
xorb
mov
insb
movsl
jl
test
test
mov
test
dec
xorb
pop
jns
sbb
cmp
dec
das
mov
repnz
fst
mov
stos
nop
mov
pop
or
mov
cmp
loopne
adc
inc
and
dec
imul
loop
rcrl
loopne
fbstp
adc
mov
inc
inc
xor
and
fbld
mov
or
mov
gs
shrl
loop
ss
loop
inc
int
cmpsb
test
mov
fwait
je
insl
sarl
pusha
xchg
fsub
xlat
fwait
mov
scas
loopne
jg
fadd
jg
add
mov
fiadds
jmp
sbb
xor
lret
push
lea
loop
lock
ds
sub
jnp
dec
int
fnstenv
jns
lahf
enter
js
add
stos
sarl
fwait
scas
mov
dec
stos
test
mov
loope
and
fmull
jmp
fiadds
loopne
nop
lods
xlat
notb
pop
fsubrs
test
cwtl
aaa
pushf
lods
in
fcmovnbe
js
aaa
test
or
jge
rol
jnp
aad
pushf
leave
loop
pop
ret
xchg
mov
rol
test
sarb
mov
fdivl
jecxz
pushf
cmp
xor
lods
jnp
mov
mov
mov
jge
jns
aad
mov
xlat
jecxz
rcrl
scas
fisubl
fidivl
into
jns
lahf
sarl
mov
aad
pushf
jecxz
add
mov
cli
scas
out
push
or
cli
jbe
movsb
mov
mov
pop
aad
pop
mov
ror
adc
iret
jp
into
jl
and
and
and
es
sbb
lahf
push
ljmp
into
mov
push
loope
push
loope
loopne
sub
dec
mov
cwtl
js
jns
ja
mov
or
mov
jle
push
movsl
push
mov
test
into
adc
or
ret
mov
sub
mov
popa
jle
push
stos
dec
rcrb
stos
nop
test
scas
cmp
pop
or
enter
addl
jbe
push
sar
cwtl
jns
lahf
or
test
es
or
cmp
sbb
or
lods
dec
sub
cmc
ret
xlat
js
jnp
adc
ret
sti
insb
rorl
enter
mov
pop
inc
cli
cli
int3
jl
mov
fildl
mov
repz
push
enter
jl
adc
xchg
inc
pop
jp
fsubrl
mov
jbe
lahf
loop
xchg
dec
imul
mov
sub
mov
jge
or
lret
fcom
xchg
mov
loop
mov
rcrb
xor
lds
imul
lret
loope
int3
fmuls
jp
jle
enter
iret
leave
jnp
xor
jae
mov
xorb
fdivl
mov
outsb
lds
mov
ror
mov
xchg
roll
mov
jp
test
scas
or
mov
fistl
int
or
test
and
mov
ret
mov
dec
lahf
push
loope
mov
sub
jp
dec
leave
dec
xlat
add
ret
fcmovb
scas
sahf
lods
ror
in
xchg
mov
fidivs
push
dec
int3
adc
mov
test
push
rorl
int
int3
fs
repnz
rolb
fwait
mov
push
test
scas
loopne
or
fucom
test
lahf
ror
js
mov
lods
mov
jnp
push
mov
adc
int
ss
add
inc
sub
cmpsb
pop
lods
adc
sbb
xorb
mov
leave
filds
jp
or
mov
jns
cmpsb
sarb
mov
rcr
fcomps
xlat
scas
cs
cli
or
inc
into
and
inc
int
inc
negb
and
jp
ds
fldenv
xchg
cmp
mov
jg
jecxz
test
shll
jle
mov
jae
jae
mov
xor
stos
test
pop
bound
popl
xor
dec
ret
mov
fidivrl
inc
aas
ds
cmpsl
divl
fcmovu
outsb
mov
movsl
xchg
iret
ficoms
xchg
enter
jmp
push
mov
mov
insl
ds
shlb
mov
cmpsb
lods
pop
mov
cmp
dec
cmp
inc
jns
rorb
mov
xchg
mov
cmp
into
jmp
xchg
ret
or
scas
xchg
adc
test
xor
mov
pop
push
jbe
sbb
jle
loopne
sti
jge
fucomip
and
cmp
dec
subl
fxch
push
dec
adc
cmp
shrb
sbb
ss
push
imul
jl
adc
ja
fs
xor
push
insb
js
xchg
pop
sbb
jnp
gs
loop
or
fldt
ss
lcall
fcoms
jns
rcr
mov
enter
jle
adc
je
mov
sbb
aam
movsb
sub
shll
test
sbb
mov
insb
loop
mov
pop
pop
call
dec
dec
ja
mov
jg
in
shll
bound
arpl
lret
scas
push
js,pt
jp
test
rorl
roll
loopne
leave
sub
xchg
dec
fimuls
add
cmpsb
dec
xor
jo
int3
int
dec
js
jnp
pop
mov
mov
cmp
out
push
add
mov
xorl
lcall
ljmp
jle
ret
cwtl
jecxz
shlb
js
js
push
ror
mov
and
or
jmp
rolb
push
inc
mov
mov
inc
ss
scas
xchg
cmpb
out
int
and
jns
flds
cli
gs
cmc
dec
push
mov
fisubl
das
add
sarb
int3
scas
pop
mov
fwait
test
mov
jecxz
dec
push
lcall
scas
pushf
push
lahf
iret
xchg
popf
test
xchg
push
mov
out
mov
mov
and
mov
jecxz
fs
shlb
int
mov
xlat
mov
lock
adc
mov
lds
adc
not
std
jae
lret
sahf
cmp
ret
sbb
out
loop
jnp
in
shll
fidivl
mov
dec
enter
test
mov
mov
fdivrl
mov
dec
enter
jbe
insb
add
test
push
jnp
into
cmpsb
cmpl
push
cwtl
fucomp
xchg
add
leave
mov
inc
mov
xchg
out
lahf
fsubp
ret
adc
mov
cltd
jle
mov
out
lret
jecxz
jle
jg
stc
fwait
push
mov
lock
mov
bound
mov
sub
xchg
inc
pop
fwait
loope
iret
mov
jbe
es
sub
test
loopne
mov
mov
mov
das
aad
jns
push
aam
xor
jg
sub
and
sbb
and
cmp
pop
sti
or
jnp
jp
rcl
ret
fnstcw
lea
je
decb
js
nop
and
xor
mov
sub
sarb
lock
bound
add
in
repnz
xchg
ror
mov
lods
jg
jle
xchg
stos
lods
fisubrl
mov
enter
mov
pminub
loope
pop
cli
clc
xor
iret
xlat
psrld
adc
pop
loop
push
mov
mov
sub
movsb
aam
xchg
int3
loopne
sbb
loop
add
enter
or
mov
movsl
test
int3
test
sbb
lret
cli
cmp
jmp
cli
push
add
push
mov
test
fbstp
fnstsw
call
mov
sbb
jecxz
sbb
rorl
je
rcll
push
jg
push
and
mov
fnstenv
inc
pusha
mov
pushf
ret
sahf
sbb
mov
cmp
int3
iret
lds
lods
rcll
lcall
and
fnstcw
cwtl
sbb
xchg
rcl
jg
inc
jecxz
mov
mov
jbe,pn
jbe
jb
xchg
ret
enter
adc
fisttpl
pop
lods
aad
mov
mov
xchg
repnz
push
or
mov
mov
jge
mov
inc
dec
loopne
mov
cmpsl
imul
lcall
cli
scas
mov
push
mov
jg
outsl
dec
jno
push
mov
fiadds
pop
inc
xor
xor
push
repnz
scas
leave
ficompl
lods
mov
cmpsb
daa
std
outsb
hlt
xchg
xor
lret
loope
mov
jle
int3
imul
dec
aam
sub
xor
fists
mov
cltd
pop
test
mov
aam
scas
in
dec
push
ror
insl
jns
ds
sub
sbb
and
jge
test
enter
leave
test
cwtl
or
subl
push
sub
shll
xchg
mov
mov
or
js
insb
jb
mov
or
mov
pop
dec
aam
pop
leave
stc
fidivrl
mov
lcall
mov
mov
aad
test
movsl
lods
jg
pop
inc
sbb
inc
xlat
sbbb
rcll
mov
dec
pushf
mov
ror
mov
test
cmp
xchg
and
xchg
mov
ljmp
enter
adc
xor
and
stos
xorb
mov
mov
in
dec
xchg
mov
loop
hlt
mov
js
test
jnp
loope
jge
shrb
lods
test
sbb
fbstp
and
mov
insb
jge
cmc
mov
fnstcw
jae
ret
cwtl
sarb
sbb
sahf
mov
loopne
jbe
loopne
or
fidivrs
ss
dec
xorb
ret
xchg
cltd
push
pop
icebp
ja
pop
mov
mov
shrb
dec
xchg
jecxz
js
pushl
int
into
mov
jecxz
adc
mov
mov
shlb
fs
sbb
sbb
cwtl
lahf
mov
and
and
mov
xor
std
inc
repz
jnp
iret
jge
mov
mov
add
and
std
movmskps
sbb
ja
rclb
fcmovnbe
pop
aad
loope
fcmove
jle
xor
lret
loopne
jns
lret
adc
cmp
aad
es
or
mov
test
scas
int3
shl
push
jmp
loope
jmp
mov
rcll
bnd
jle
ret
call
pusha
jmp
jle
mov
add
xchg
scas
fbstp
jne
loope
or
push
into
mov
out
mov
mov
fsub
cmpl
insb
jbe
fisttpll
jl
cwtl
push
movsb
iret
fadd
pushf
ds
pushf
inc
notl
js
mov
jp
sahf
mov
loop
push
sub
je
add
fistps
shlb
cmp
outsl
into
sub
das
pusha
jle
pop
and
mov
clc
stos
rcr
fiaddl
and
ret
imul
xlat
repnz
fimull
je
in
push
mov
mov
mov
mov
test
adc
xchg
mov
or
mov
or
mov
ret
mov
or
ret
pop
fcompl
jp
js
dec
xor
inc
xlat
xor
out
roll
in
into
test
adcb
or
fldt
jns
xor
adc
mov
or
scas
ror
push
dec
icebp
or
add
faddl
jne
test
dec
bnd
mov
nop
ret
int3
xorb
ja
push
mov
leave
aaa
or
mov
and
lret
mov
mov
loop
jnp
test
mov
shlb
sbb
sbb
sub
lods
jmp
mov
int3
ds
loop
cmpb
mov
leave
dec
dec
ror
mov
sub
insl
mov
xor
lods
rcr
jbe
jns
lahf
jp
mov
in
shl
xchg
or
es
rcl
add
mov
icebp
sbb
mov
lret
dec
scas
pop
pop
jmp
cmpb
ficompl
adc
push
clc
xchg
je
lods
ss
xchg
fdivrs
js
cltd
dec
fidivl
mov
mov
iret
loope
inc
or
mov
fcoml
xchg
loope
aaa
int
rorl
mov
fcom
jge
into
roll
ljmp
ljmp
es
rcr
leave
lcall
shl
aam
imul
or
and
or
es
cmpsl
stos
iret
mov
mov
mov
mov
mov
adc
mov
jle
scas
popa
aam
adc
stos
int
xor
imul
subl
jo
jmp
xchg
movb
enter
fnsave
mov
sbb
test
mov
in
pusha
add
rol
jo
mov
dec
outsb
xchg
test
xrelease
rcl
cmpsb
flds
out
xor
sbbl
pop
push
pop
mov
cmp
jmp
mov
ret
into
enter
cmp
mov
adc
push
mov
pop
mov
sub
fistpl
aas
mov
or
pop
mov
ja
push
scas
lods
jnp
roll
sbb
sarb
mov
dec
xchg
mov
xchg
mov
lods
orl
cmp
sbb
idivl
je
mov
xlat
jae
cmp
add
jnp
subl
aaa
shlb
cmp
pop
fsubs
js
and
stc
lret
fadd
push
or
fildll
fmuls
pop
xchg
cmpsb
mov
adc
scas
or
int
imul
ss
ret
add
xor
test
add
sbb
ror
enter
fidivs
sub
test
scas
loopne
sbb
loopne
movsl
jp
into
arpl
pop
fisubs
jbe
test
frstor
loope
js
flds
ffree
xchg
loopne
xchg
or
sti
insl
inc
jl
js
jle
lret
test
xchg
fisubrl
mov
into
mov
imul
dec
mov
add
je
mov
stos
push
xor
mov
pop
jge
ds
fidivs
lods
mov
loop
das
int
pop
lock
test
cmp
push
aad
shlb
leave
add
scas
test
jg
jns
stos
and
rdpmc
jp
mov
es
add
call
xchg
or
sub
jmp
bound
push
or
push
leave
push
test
stos
ror
add
shrl
mov
dec
insl
stos
xor
and
push
repnz
jmp
aaa
cmp
or
jnp
pop
sbb
jg
insb
fsubrs
insb
std
cmpsb
jp
fdivr
cwtl
int3
mov
mov
loop
mov
xlat
js
test
or
mov
js
fnclex
int3
outsl
test
inc
fdivrp
jbe
nop
mov
add
rolb
jb
out
sbb
dec
push
aad
pop
mov
int
imul
subl
rcr
mov
ret
mov
call
and
lret
subl
fiadds
mov
sub
sbb
mov
iret
mov
shrb
mov
data16
loop
iret
mov
push
into
add
pushf
je
addl
jns
jp
test
shlb
mov
sahf
incl
dec
cmpb
subl
jp
sbb
inc
jl
mov
push
outsb
pop
dec
mov
imul
adc
push
shlb
orl
mov
rep
or
push
loopne
sbb
xlat
adcl
xchg
pop
mov
fdivs
ret
mov
iret
int
fmuls
scas
mov
ss
cmpl
mov
sbb
lret
cmpsb
pop
leave
psrld
int3
mov
jle
mov
cld
int3
add
shrl
enter
mov
fdivs
mov
test
test
dec
rclb
xchg
mov
rcrl
xchg
leave
test
add
js
xchg
loop
int
enter
fdivr
scas
ret
adc
popa
loopne
enter
and
xchg
addb
fisttpll
mov
mov
and
ret
test
xchg
jge
mov
push
scas
push
inc
cwtl
jp
jecxz
imul
sub
addl
inc
jnp
lds
mov
cltd
inc
and
mov
jb
dec
lea
push
cmpsb
pop
mov
test
test
fdivs
out
loope
fldl
adcl
loopne
jl
mov
cmp
js
lea
mov
inc
cwtl
lahf
fwait
or
cmp
rcrl
jae
jl
pop
test
lgs
outsb
mov
push
mov
imul
test
daa
aad
ret
mov
je
fldenv
xchg
sarl
aas
loop
sarb
outsb
jge
pop
test
sarb
fcmovbe
ja
mov
test
sarb
sub
push
xchg
test
enter
jp
daa
imul
and
mov
jb
js
scas
mov
into
cli
mov
mov
mov
mov
xor
inc
pop
into
int
mov
jecxz
fisubs
jnp
loop
ds
xchg
mov
jae
adc
mov
mov
mov
and
cmc
mov
lods
in
into
mov
iret
dec
adc
xor
cli
arpl
shl
int3
push
mov
jbe
aad
jno
mov
lods
jnp
in
scas
flds
mov
push
sub
jp
mov
popf
notl
mov
dec
fwait
dec
rcrl
and
test
xor
pusha
dec
fwait
data16
sti
mov
sub
frstor
mov
mov
into
cli
sbb
inc
mov
jecxz
mov
xor
xlat
adc
lea
fs
pop
adcl
jle
xlat
test
shll
pop
sbb
jns
mov
jp
imull
and
jle
int3
ljmp
mov
ret
into
sub
adc
loopne
lcall
and
fnstcw
mov
xchg
mov
mov
ret
gs
lods
ljmp
xor
rol
jge
shrl
les
jecxz
rorb
and
or
shrl
fwait
js
mov
enter
iret
rcll
or
xchg
jle
adc
inc
mov
mov
sti
xchg
fisubl
sbb
insb
mov
push
xchg
mov
fsub
mov
fwait
fwait
xlat
mov
add
sub
into
add
fstpt
movsl
mov
jno
inc
cmpsb
subl
data16
int3
adc
sub
hlt
fcmovnu
dec
push
jg
rcl
mov
pushf
ret
mov
add
lods
fisttpll
or
dec
dec
mov
xchg
ficoms
xchg
mov
push
leave
mov
sbb
fstl
sub
xorl
pusha
cmp
jnp
leave
scas
mov
add
fwait
inc
into
mov
mov
int
fwait
xchg
mov
dec
jbe
mov
enter
rcl
int
js
test
in
rolb
xchg
fldcw
inc
mov
sti
rdmsr
jp
lods
ljmp
ss
push
mov
hlt
loope
pop
mov
js
adc
mov
into
stos
cmp
mov
ja
loop
sbb
aas
xor
int3
pop
loopne
inc
insl
mov
rcl
sbb
mov
ja
pop
jns
data16
add
jmp
les
mov
loopne
cmp
scas
mov
rcl
andb
jns
jle
ret
xchg
adc
mov
sbbb
dec
lea
mov
or
sub
pop
mov
aad
adc
xchg
daa
js
mov
int
sbb
mov
leave
mov
mov
call
push
lods
test
subl
rorb
notl
cli
fdivr
sub
mov
cmpl
mov
push
stos
xchg
imul
das
push
andl
outsb
mov
lea
lods
cli
out
mov
iret
icebp
mov
loope
ret
dec
fnstsw
test
hlt
xchg
push
shll
test
shlb
add
mov
fcompl
xor
in
mov
dec
cmpsl
push
or
iret
rcr
cmp
mov
sahf
mov
mov
insb
leave
lea
loop
in
xor
iret
inc
leave
sub
mov
xchg
cmp
stos
movsl
leave
lea
movsl
arpl
pop
ret
and
lret
pop
sub
fsubrs
into
or
scas
int3
mov
int3
and
push
shrd
sbb
mov
mov
xorl
fcmovu
and
je
scas
ficomps
jns
jb
cmp
and
and
cli
adc
fidivrl
mov
movsb
xorb
rcll
enter
cld
loop
test
loopne
iret
fwait
rcr
mov
fucom
push
mov
test
repnz
idiv
sar
lret
js
push
or
fisubrs
or
enter
scas
mov
ret
xorl
loopne
int
ja
sbb
pop
or
fstpl
enter
shll
pusha
sbb
inc
xor
js
mov
loopne
test
pop
je
out
fsubs
mov
shrl
imul
int3
xchg
jle
xchg
add
aas
mov
es
mov
jle
sbb
scas
mov
cmp
ffree
leave
insb
jp
push
xchg
fldt
push
test
push
sbb
or
roll
ret
mov
or
scas
scas
fnstcw
test
adc
insb
mov
dec
inc
mov
loop
ret
fisttpl
adc
fildl
mov
test
addl
push
shr
rcl
loopne
mov
js
iret
push
xor
test
or
sti
shlb
popf
insb
pop
imul
xchg
mov
roll
mov
subl
aad
ret
add
xor
aam
dec
mov
mov
xchg
push
mov
jg
push
test
cmp
or
xchg
sbb
in
dec
movsb
fcmovb
push
push
jne
or
loope
push
mov
popa
fldt
into
mov
jg
or
ret
xchg
mov
fwait
test
lahf
inc
pop
lret
cli
movsl
jmp
inc
jmp
jl
jg
cmp
notl
lods
popa
pushf
ja
pushf
int3
lret
mov
aam
mov
push
jl
lods
scas
stos
push
aad
mov
test
sub
mov
pop
mov
push
rcr
shll
adc
lods
mov
rorl
ja
js
loop
sar
dec
mov
push
cmpb
mov
mov
out
icebp
xchg
fnstsw
xlat
sarl
jp
scas
fs
sub
mov
fisubrl
push
sti
repz
test
jns
int
loop
fcmovnb
inc
and
insl
int3
fnstenv
jg
fcmovu
stc
stos
test
mov
mov
or
loope
shr
int3
movq
lods
js
cmp
rorb
repnz
mov
jg
ja
shl
data16
sahf
fisttps
jl
add
mov
int
outsb
xchg
mov
adc
pop
pop
xchg
mov
xchg
aam
lods
aam
inc
jo
repnz
dec
dec
mov
or
mov
mov
lret
int
in
inc
jg
lods
inc
pusha
pop
inc
ror
mov
das
das
bound
mov
mov
es
xor
test
stos
mov
iret
dec
sbb
sarb
sarl
scas
fadds
adc
das
out
cmc
inc
mov
pop
mov
add
lock
rcl
cmpb
or
xchg
mov
call
sub
dec
inc
sub
jecxz
adc
aam
fisttpll
mov
scas
aam
sub
pusha
test
dec
fst
jns
pop
loopne
out
or
js
sets
lahf
aam
adc
push
stos
stos
std
fisubrs
mov
or
xchg
jns
push
mov
jns
rcrl
fildll
xorb
loope
into
inc
dec
test
or
stos
scas
sbb
add
mov
int
adc
mov
xor
mov
movsb
add
fwait
mov
int3
mov
jbe
mov
xchg
and
lods
and
ljmp
mov
mov
imul
movsb
ret
loop
outsb
mov
ja
pop
and
aam
sarb
test
stos
mov
les
mov
add
mov
mov
lods
icebp
mov
fbstp
test
test
lods
sub
sbb
jecxz
or
loopne
or
mov
lods
push
mov
frstor
jmp
mov
fdivrs
pop
cmc
mov
jle
dec
jno
repnz
lods
jg
arpl
ss
ret
mov
mov
push
loope
outsb
rcr
jb
inc
test
js
scas
adc
dec
stc
enter
mov
push
or
or
ret
shl
cli
mov
js
je
or
sbb
mov
jnp
je
mov
xor
add
jmp
in
insb
int3
loopne
adc
jns
jp
scas
mov
in
push
cli
into
das
stos
outsl
jge
fistl
shl
jg
ja
fcomps
adc
ret
in
shrl
rcr
push
insb
addb
outsb
int
insb
cmp
mov
jnp
push
filds
push
int3
jecxz
add
test
aam
mov
dec
jae
test
into
mov
popa
fcmovbe
stos
fwait
mov
mov
xchg
jns
xchg
mov
lods
pop
test
into
repz
call
out
lods
ret
in
adcb
mov
scas
test
into
sub
mov
mov
ret
js
std
ss
aam
test
sub
sbb
jp
push
mov
fst
push
rorb
jb
mov
leave
inc
bound
push
ret
cmp
test
xor
ljmp
dec
xlat
jg
ss
aam
aas
cli
jge
jp
into
out
nop
jnp
pop
push
adc
or
mov
popf
mov
ror
imul
rolb
dec
adc
pop
sub
lret
fst
cmp
ret
stos
loop
pushf
adc
popf
insb
dec
xchg
mov
mov
loopne
mov
mov
or
fistpl
mov
loopne
xchg
test
xchg
mov
mov
mov
mov
subl
fidivrs
mov
loopne
scas
jnp
scas
enter
test
pop
test
jne
mov
jge
subb
mov
fcoms
call
jecxz
ja
mov
inc
imul
jns
jg
lods
jnp
mov
lret
loopne
ret
mov
mov
dec
dec
pop
dec
cmp
mov
mov
push
mov
and
inc
push
inc
es
mov
add
sub
sarb
into
jno
lahf
dec
mov
ret
lods
jg
dec
repz
fldt
int3
push
xor
cmp
cmp
ret
leave
mov
mov
pop
jge
fwait
aad
pushf
fidivrs
leave
lea
adc
out
sub
loop
add
jl
loop
xlat
daa
mov
ja
push
dec
imul
loopne
test
inc
leave
inc
mov
in
loope
dec
push
mov
xorb
ja
jb
xchg
fdivrs
test
cli
sbb
mov
loop
xchg
jg
fimull
leave
mov
rorl
cwtl
into
mov
loop
mov
mov
jg
or
mov
or
jns
ret
repnz
mov
mov
pop
lea
or
xor
loopne
xchg
cmp
repnz
mov
test
mov
push
push
push
shl
mov
loop
ljmp
cmpb
cwtl
pusha
or
rcr
fldl
xlat
dec
mov
fwait
mov
mov
ret
jb
xlat
xchg
stos
loop
out
and
notl
aas
jmp
ljmp
or
cmp
jg
fsubs
adc
int
xlat
fcmove
stos
es
loop
jnp
jmp
xor
sub
mov
jno
inc
jg
sbb
scas
jle
push
lahf
enter
addb
loop
xchg
or
test
pop
stos
xor
repz
stos
iret
xorl
mov
inc
test
into
jp
jbe
mov
xlat
dec
xor
push
fistpll
fisubl
scas
hlt
test
mov
mov
ja
test
ret
push
aad
push
xchg
lods
rcrb
roll
fsubs
cmc
mov
cli
cmc
adc
xchg
mov
mov
pop
and
xorl
pop
mov
int
shl
xchg
cmp
mov
jns
addl
js
lods
mov
mov
and
test
ds
xlat
jg
inc
jmp
mov
pushf
mov
fisttpll
ret
or
mov
cmp
test
add
add
ljmp
lahf
jne
repz
test
mov
xchg
rol
leave
dec
mov
mov
mov
xchg
rcrl
das
inc
jo
lods
add
fwait
mov
fcmovbe
mov
lods
adc
jg
nop
mov
mov
notb
loop
lahf
xlat
fistl
mov
aam
jl
aad
xor
rcr
mov
inc
mov
adc
mov
je
mov
add
jle
xchg
or
or
mov
mov
out
imul
dec
cmpsl
fisttpll
dec
dec
mov
imul
or
pushf
mov
negb
mov
in
push
jns
xlat
sbb
pushf
iret
test
push
scas
sub
xchg
cwtl
mov
jne
or
mov
jns
test
dec
dec
jecxz
fsubrs
loopne
mov
dec
jge
mov
mov
fisubrl
xlat
fildl
and
jge
test
add
int
pop
sbb
xlat
dec
shrl
inc
enter
xchg
add
in
dec
mul
loop
dec
or
mov
loopne
mov
inc
fcmovnu
je
mov
popl
test
adc
ror
or
mov
push
push
loope
jbe
pop
dec
insl
fimull
in
sbbl
ret
sbb
mov
mov
jne
int
push
xlat
xlat
idiv
mov
lea
xchg
add
andl
push
dec
mov
sub
push
scas
fstpt
cwtl
push
enter
add
push
jno
ficomps
jg
or
fcompl
test
dec
push
mov
fldt
mov
test
sti
imul
enter
push
jns
int3
clc
xchg
js
mov
cmp
xchg
shrl
mov
out
adc
fistpl
fiaddl
imul
test
test
cmp
inc
fstpt
mov
jl
test
mov
test
into
xorb
jnp
addb
and
lahf
lods
xor
mov
rolb
insl
loop
test
dec
jecxz
mov
pushf
test
inc
scas
outsb
sub
sub
sub
iret
pop
dec
or
cmp
or
inc
sub
mov
fisttps
fdivrl
inc
xor
into
mov
and
mov
lods
fs
jp
mov
fimuls
inc
iret
scas
jg
enter
repz
cli
sbbb
je
mov
rolb
ret
test
xor
leave
je
int
andb
frstor
rorb
lods
out
or
mov
xchg
pop
ret
sarl
mov
ficompl
fs
jge
mov
iret
sahf
fidivl
xchg
lods
mov
mov
or
fldcw
xor
xchg
jge
pop
jecxz
add
or
mov
fisubrl
dec
lea
or
mov
and
int
scas
mov
pop
hlt
movsl
shl
in
test
jl
dec
fisubrs
mov
into
pop
je
insl
ficoms
jne
aas
xchg
fcomp
or
out
pop
insb
ret
sub
mov
and
into
test
xchg
ret
lahf
fcompl
cmp
mov
sbb
ret
and
xchg
int3
leave
lea
outsb
loope
inc
lahf
fdiv
jno
aaa
or
push
loop
subl
jae
test
push
inc
mov
adc
lcall
flds
jg
or
mov
cmp
adc
jg
loopne
sahf
mov
ficomps
ja
mov
jge
imul
gs
cwtl
jle
js
push
inc
jg
das
mov
or
int
push
or
insb
ret
jmp
movsl
std
lds
sbb
into
sbb
inc
stos
mov
fnstsw
sub
and
jnp
adc
lods
int3
jle
and
push
cmpsb
js
rorb
sub
sbb
mov
loop
mov
mov
mov
fcoml
pop
into
xchg
lret
push
mov
mov
shr
xor
pslld
int
sqrtps
and
xchg
fs
xlat
mov
lods
movsb
mov
dec
jge
lods
sub
int
dec
daa
ffreep
in
mov
xchg
mov
lret
jecxz
sarl
lret
shl
jns
inc
flds
xor
mov
mov
fldt
cmpsb
inc
inc
or
shl
sbb
loope
js
push
outsb
jp
enter
shlb
loopne
mov
rol
stos
mov
cmp
mov
mov
int3
dec
pop
mov
test
cli
pop
fldcw
dec
push
or
ss
jno
jl
fstpt
mov
mov
and
in
jp
int3
ja
stos
scas
add
aad
insl
ficompl
inc
jp
jle
ja
push
loopne
rclb
jge,pn
test
mov
dec
int
jb
aad
mov
rclb
rcll
or
xchg
sub
loope
dec
cmpsb
lret
mov
mov
ror
mov
dec
js
sub
test
dec
ja
mov
shrl
mov
mov
fisubrl
jbe
insb
stos
pushf
mov
add
fstl
or
jo
jle
xor
mov
lcall
adc
xlat
int3
cwtl
ljmp
mov
add
fistpl
scas
sbb
adc
cmp
je
rolb
mov
mov
jp
mov
fwait
psubb
sbb
cmpl
jecxz
ja
scas
jl
loopne
jnp
jle
fsubl
aaa
std
pop
inc
movsl
mov
mov
mov
inc
mov
leave
orb
ljmp
rcr
mov
es
outsb
xchg
leave
mov
push
or
dec
push
jle
js
cmp
mov
xlat
ljmp
int3
or
insl
mov
fcmovnu
andb
mov
shrl
push
jge
scas
mov
mov
adc
push
mov
jns
adc
mov
ja
push
das
aaa
xchg
insl
orl
mov
lock
shl
aas
mov
je
xchg
loop
cmovl
mov
test
rcr
mov
aam
pushf
cld
mov
mov
or
and
cld
mov
rcl
out
sbb
and
dec
aam
dec
dec
sbb
mov
adc
rclb
movsb
into
out
or
mov
add
mov
mov
adc
sbb
insl
mov
shr
cmp
test
and
inc
sti
mov
push
enter
shl
xchg
rcl
dec
jnp
orl
pop
fisubrl
mov
js
shrb
enter
sub
rclb
or
push
shl
jecxz
insl
fisttps
jns
loop
and
loope
leave
icebp
lret
es
dec
inc
or
and
fs
mov
fidivl
jae
sbb
shrl
dec
cmc
jg
jns
jle
arpl
rcrl
sub
cmpl
jge
mov
jle
mov
movsb
insl
mov
add
xor
fcompl
push
pop
aad
in
mov
popa
jecxz
lods
cs
cmp
mov
cmp
into
psubd
insb
loop
mov
scas
ret
push
je
addl
scas
mov
dec
loop
sub
popf
roll
imul
jl
cmp
add
pop
pop
mov
dec
mov
mov
or
dec
jle
stos
scas
pop
or
rcll
loop
push
add
push
sbb
movsl
mov
xchg
sbb
or
pusha
into
aam
popa
es
jp
rcrl
scas
dec
mov
imul
shl
test
add
stos
adc
into
mov
leave
aam
rolb
push
pop
out
xchg
push
ja
jge
push
or
scas
ret
dec
into
stos
adc
jg
faddl
adc
pop
inc
sbb
insl
jp
in
adc
rcl
je
sbb
xor
sbb
insb
adc
mov
js
mov
adc
movsb
hlt
mov
shrl
jne
sbb
roll
xchg
sub
fstpl
bound
out
or
in
pushf
aad
ficompl
loope
in
cmp
lahf
jns
movsb
mov
es
sbb
mov
mov
mov
adc
scas
aam
scas
dec
push
ret
xchg
jne
sub
enter
adc
lock
call
mov
jge
mov
mov
rcr
and
out
push
frstor
leave
lret
dec
rcr
inc
xor
pop
jne
outsl
es
add
sub
dec
jp
test
cmp
or
xor
insb
adc
out
aas
sahf
jle
push
scas
add
adc
out
scas
aad
dec
sbb
sbb
arpl
fnstcw
xor
cwtl
cli
xor
lock
push
pop
test
es
xchg
rolb
icebp
jmp
fdivrp
add
cmp
pushf
fbstp
scas
je
sbb
mov
ds
fldcw
jge
mov
loop
roll
aaa
mov
pop
xor
jle
into
lods
dec
call
mov
test
movsb
ret
fcmovu
lods
cwtl
out
lahf
lcall
xchg
mov
shrb
mov
stos
mov
sbb
scas
jecxz
mov
sti
mov
test
jns
iret
test
dec
in
sbb
or
ret
rol
cwtl
int
mov
incl
mov
add
js
int3
push
das
movsb
leave
jge
fisttpl
mov
xor
or
jge
push
jp
fiaddl
xchg
popa
or
inc
sub
mov
mov
enter
and
xchg
aad
sbb
cwtl
aam
mov
jge
js
xor
lods
mov
movsb
mov
loopne
xchg
mov
stc
mov
mov
or
enter
sub
lret
loope
daa
jg
xor
adcb
jecxz
sahf
jge
mov
loope
jl
mov
and
sbb
mov
mov
mov
mov
cmp
mov
cmp
stos
gs
call
scas
jge
mov
inc
fmuls
int
dec
shrb
mov
mov
int
scas
rorl
add
ret
test
ja
imull
fnsave
lods
leave
js
test
mov
movsb
mov
scas
jl
adc
ret
sbb
fcompp
inc
les
test
lods
ds
push
ret
push
mov
cmpl
mov
mov
scas
popa
xchg
aam
cmp
imul
rclb
aaa
sub
lods
loopne
add
xor
push
call
ja
arpl
cmp
xor
mov
inc
aam
mov
insb
ljmp
mov
jp
mov
xlat
clc
fldenv
repz
aas
cmp
jb
mov
int3
lods
xchg
aam
lods
jno
mov
js
jle
fisubl
adcb
xchg
int3
mov
cmp
cmp
stos
fcmovnu
mov
mov
fldl
es
ss
sbb
test
loope
mov
jns
jns
pop
pop
mov
mov
xchg
pop
mov
mov
nop
jecxz
mov
xchg
xchg
test
mov
dec
fidivl
js
sub
jmp
mov
movsb
adc
sbb
lods
fucom
cmp
outsl
mov
jle
dec
mov
xor
push
jnp
stos
jl
push
push
push
adc
scas
lret
loopne
or
movsl
fistl
mov
pop
shlb
fiadds
jns
mov
testl
data16
int
cld
rcl
adc
into
mov
bound
jle
lods
cmpl
int3
inc
or
inc
and
push
nop
loopne
mov
rcr
es
jns
or
lods
int3
and
pushf
imul
dec
rorl
sahf
push
pusha
sbb
andl
jge
or
shr
sub
jb
xor
xchg
scas
mov
aaa
jnp
int
mov
xor
js
push
adc
mov
dec
inc
fld
sub
jnp
and
jecxz
sbb
insl
test
inc
xchg
mov
xorl
mov
movsl
in
xor
shl
orl
out
or
mov
sbb
xor
movb
hlt
push
lahf
rcrb
mov
mov
rol
shll
movsl
push
push
loop
pop
inc
ds
test
push
inc
add
mov
loop
fxch
xchg
rcl
push
mov
stos
shll
out
enter
cmp
dec
jge
mov
js
dec
and
loope
aam
ret
push
jl
or
mov
mov
pop
negb
mov
mov
fcom
dec
xchg
add
mov
lds
test
jnp
fisttps
sub
sub
sbbl
cmpl
or
mov
loop
dec
mov
mov
sub
mov
into
pop
inc
dec
imul
mov
fidivs
xorb
iret
dec
mov
fistpl
mov
mov
movsl
mov
mov
lret
jae
inc
jl
inc
cli
enter
mov
cwtl
scas
mov
fcmovb
pop
jg
jg
dec
gs
mov
pop
aas
loopne
inc
sub
out
or
adc
loop
insb
sarb
pushf
lods
xchg
sbb
ret
push
cmp
sub
stc
xorl
sahf
mov
cmpsl
mov
jb
adc
ror
lods
or
scas
fildll
dec
fcmove
fmulp
es
mov
jg
rcr
loope
test
mov
inc
sub
int3
xchg
fnclex
lods
mov
mov
lods
cmp
mov
mov
mov
cmc
xor
rcr
leave
and
dec
lret
mov
mov
lods
push
or
aad
rcl
lret
push
xorl
push
stos
and
fst
mov
dec
jo
sete
scas
mov
fxch
mov
loop
xorb
jecxz
cmpl
insl
enter
mov
or
dec
rorl
adc
sti
sub
mov
sbb
cld
rcll
sub
mov
aam
lods
cmp
cmp
mov
xlat
test
xchg
ds
sarb
push
mov
loop
lcall
xlat
mov
sbb
or
mov
sarl
push
stos
or
leave
mov
fsubrs
int3
loop
sarb
mov
push
fwait
lods
aam
test
xchg
xor
pop
pop
jae
fmulp
outsb
fidivl
sbbl
mov
mov
popa
jge
addb
popa
outsb
lods
adc
aam
mov
out
fstpt
mov
mov
mov
iret
mov
loope
divb
loopne
or
aad
addps
jecxz
int3
lret
rol
jb
mov
and
aad
xchg
int3
fimull
mov
enter
hlt
mov
int
test
loope
mov
cmp
test
sbb
fbstp
and
enter
cmp
mov
mov
gs
mov
push
ret
loopne
out
cmc
imul
mov
das
cmp
xlat
fcmovnb
loope
xchg
test
fnstenv
enter
xchg
jg
cmp
mov
mov
sahf
loopne
es
mov
mov
mov
iret
mov
addl
mov
test
ja
mov
pushf
outsb
mov
xchg
mov
scas
adc
push
mov
ja
mulb
fisttps
sahf
dec
xlat
mov
sbb
jnp
sub
mov
adc
sub
jl
fidivrl
into
mov
mov
repnz
sarl
fidivrl
test
test
sub
dec
jg
xlat
dec
pop
adc
mov
jl
fdivl
push
mov
adc
or
iret
mov
int
xorl
cs
gs
xchg
int3
push
mov
jecxz
add
mov
mov
sub
lock
lret
scas
adc
xor
jge
jp
xor
adc
lea
out
mov
pop
cmc
or
xlat
leave
das
pop
test
iret
hlt
xchg
jecxz
sbb
rorb
cmp
dec
xchg
add
xchg
jge
arpl
lods
mov
mov
ret
andl
ret
push
in
js
cwtl
aam
ret
ret
add
clc
jbe
lock
mov
cmp
sbb
xchg
mov
and
xlat
pop
xchg
scas
and
jl
lods
cmp
push
mov
cmp
fwait
ror
subb
xor
mov
es
jp
aam
pop
mov
dec
and
dec
dec
dec
enter
jbe
jnp
not
movd
aad
shr
addr16
jo
push
cmp
mov
aam
inc
repz
mov
xlat
inc
mov
loope
loopne
into
sarb
push
pop
sbb
inc
push
jecxz
mov
mov
push
test
pop
movl
sub
xchg
mov
mov
fcmovbe
fsubr
inc
ja
das
mov
fstp
pushf
mov
jnp
scas
or
fidivl
aad
inc
out
rolb
adc
jo
pop
jl
mov
jle
mov
inc
or
fisttps
jecxz
and
mov
adc
test
mov
das
ljmp
pop
push
fbstp
sub
sbb
or
pop
scas
mov
mov
fsts
adc
fldl
lds
and
mov
insb
mov
jnp
int3
test
pop
outsb
lret
cmp
popf
mov
loope
pushf
sarb
stc
lds
int
jno
scas
fcoml
mov
rcrb
pop
fs
cli
lret
andl
jp
fnstenv
lock
notl
mov
mov
mov
aaa
rorl
xor
ret
xlat
dec
sbb
lods
int
aam
cs
in
inc
lods
add
and
mov
jle
xor
aad
cmp
ret
adc
pop
xchg
movsb
mov
mov
jp
and
mov
loope
jg
xlat
mov
sub
cmp
mov
mov
int
xlat
clc
loope
dec
fsts
rcr
jnp
fsubl
mov
shrb
mov
xchg
mov
fst
loopne
scas
mov
outsb
push
test
mov
movsb
ret
and
inc
cwtl
ljmp
cmp
or
fnsave
xor
mov
aam
add
mov
mov
sbb
test
mov
aad
jns
dec
pushf
xchg
in
mov
daa
sbb
call
fldcw
cmp
sbb
ret
add
mov
jb
scas
push
adc
fdivrl
add
testl
jns
mov
dec
jge,pt
scas
cwtl
insb
mov
xchg
mov
mov
mov
mov
aad
jnp
cmp
jl
imul
shrb
test
jp
mov
jle
cli
ss
mov
in
mov
insl
bound
mov
cwtl
inc
pushf
mov
inc
cmpsl
shrb
and
push
push
stc
pop
rcr
mov
arpl
scas
dec
jb
fadd
dec
or
mov
dec
xchg
mov
loopne
or
mov
mov
mov
scas
rcl
dec
test
ret
xor
dec
mov
mov
mov
xlat
fnstsw
adc
mov
loopne
fsubrl
leave
cmpsl
fsubrs
das
out
mov
mov
pushf
push
cmp
test
nop
leave
push
xchg
add
loop
repnz
mov
mov
fisttps
or
shrl
imul
push
mov
mov
loop
fcmovbe
push
leave
xorb
andl
or
add
inc
mov
jle
loopne
jmp
loop
enter
ss
and
jecxz
loop
lahf
cli
mov
mov
or
sbb
sbb
dec
int3
subl
jge
mov
iret
mov
jp
mov
xor
aad
add
fbld
test
dec
data16
shrb
jmp
xlat
mov
popl
das
rorb
jp
lods
add
unpcklps
fnstenv
cmp
fxch
sbb
xchg
add
cs
orl
fldcw
sub
push
mov
xor
test
stos
jns
cli
xchg
mov
aas
lahf
cmpb
std
xlat
fadd
mov
aad
sub
mov
sarb
or
sub
loop
pop
or
inc
insl
mov
loop
cli
or
int
or
and
jns
ret
dec
stos
jg
iret
outsb
lea
or
dec
clc
jp
mov
fst
fistl
mov
cld
xchg
xchg
mov
fdivrs
mov
movsb
jp
push
jbe
insb
pop
mov
jmp
push
xchg
push
gs
fcmove
mov
cmpsl
call
leave
sbbl
loopne
ja
imul
fldcw
mov
subl
sarl
in
dec
dec
nop
sti
loop
cmpsb
fimuls
into
mov
test
fadds
fsubl
loop
xchg
enter
ja
insl
fnstsw
push
test
add
mov
lcall
mov
fistpl
jno
aas
stos
lahf
fcomip
dec
out
jecxz
dec
subl
iret
push
ds
inc
mov
push
roll
bound
shll
mov
add
pop
std
mov
ret
jl
dec
add
inc
xchg
stos
mov
mov
mov
jb
jle
fimull
scas
and
mov
ret
jge
test
xchg
cld
jns
push
sub
shlb
ja,pn
pusha
mov
or
aaa
mov
xchg
clc
lods
or
ret
cmpl
or
loope
shlb
shr
jne
cmpb
fiadds
pushf
roll
pop
fs
dec
mov
mov
xorb
loope
nop
inc
inc
outsl
dec
xorl
inc
mov
popf
inc
je
pusha
xchg
pop
mov
scas
adc
pop
mov
enter
mov
mov
jbe
jle
fwait
and
mov
and
imul
test
rcl
stos
or
mov
insb
jp
jmp
cli
add
mov
xchg
mov
sbb
subb
notb
aaa
push
mov
lds
xchg
iret
aam
je
aad
mov
ror
pop
jge
ja
and
pushf
int3
mov
inc
sbb
adcb
lods
lods
mov
shl
cld
jp
into
sarl
jp
mov
fistps
scas
ds
mov
addb
xchg
adc
and
inc
fidivl
shll
aam
shl
test
mov
push
jmp
ror
mov
insb
loop
mov
adc
mov
mov
add
idiv
sahf
sti
mov
jg
mov
lods
fdivs
jnp
xor
shlb
or
ljmp
mov
add
mov
je
jnp
mov
mov
push
push
sarb
test
fsub
mov
shlb
mov
cmp
scas
aam
mov
rcr
aas
test
pop
pop
or
jl
mov
sbb
aas
repnz
das
lret
jnp
cmp
xchg
jns
fildll
inc
fdivrl
les
sub
jns
sahf
xchg
ret
rorb
sarl
outsl
enter
mov
ret
mov
loop
ss
orl
pop
lahf
ss
adc
mov
mov
xchg
mov
lods
jno
push
lcall
mov
add
cmp
das
pop
fidivrl
jp
mov
jp
aam
sub
adc
jns
mov
shl
inc
loop
fisubrl
mov
mov
fidivs
into
fsubrs
adc
leave
adc
mov
mov
rcl
jno
xlat
or
fdivs
dec
sub
enter
cmp
fdivrl
dec
jge
jle
outsb
push
mov
test
shrl
test
jg
adc
fisttpl
test
jge
shrb
fdivrl
stc
dec
jae
xchg
inc
dec
fcmovnb
mov
outsb
enter
aam
test
lods
mov
or
scas
andl
fcoml
aam
movsl
lods
jbe
jbe
jle
add
mov
fnstenv
jnp
sub
aam
shll
mov
push
sahf
mov
loop
jbe
mov
mov
mov
lods
shrb
mov
aam
jle
ret
jg
nop
fstp
cli
cmp
dec
fcmovnb
sub
js
fsubrs
or
jnp
sarb
xlat
loopne
cmpl
ret
ss
les
inc
sub
out
xor
cli
repz
dec
jecxz
mov
pop
shlb
sbb
sub
scas
jp
mov
mov
sbb
dec
dec
mov
pop
lods
js
xlat
es
mov
leave
repnz
mov
insb
lods
xchg
mov
test
fdivrl
add
jnp
mov
mov
cmp
mov
jle
jecxz
roll
jnp
or
xchg
fmul
xchg
xchg
adc
ljmp
sbb
test
mov
lods
ret
add
inc
roll
sarb
lret
mov
insl
shlb
rcl
mov
inc
adc
lret
pushf
lods
aad
sahf
fucom
fildll
mov
push
dec
jecxz
xlat
pop
ret
fcmovnbe
mov
test
inc
mov
fisttpll
cmp
pushf
movsb
push
dec
int
jge
dec
cmpsb
push
dec
pop
orl
add
dec
fstpt
inc
aam
jl
out
xorl
and
rcl
add
loope
jb
xor
fnsave
dec
aam
rcr
mov
ss
aam
js
push
add
imul
xlat
fsubrs
mov
ror
fisubrl
leave
and
arpl
fiaddl
lds
ret
das
stos
cli
jns
pop
and
faddl
mov
and
shlb
lods
dec
aad
jnp
jp
fsubs
pop
insl
mov
mov
sub
rclb
enter
subl
mov
mov
fbstp
mov
mov
dec
inc
xchg
push
or
mov
fldt
xor
dec
mov
jge
scas
pop
xor
mov
and
mov
mov
out
and
test
mov
fcompl
sbb
aas
and
movsb
fidivrl
fdivs
push
loop
sub
loope
fdivrl
and
out
and
mov
fildl
iret
ds
push
hlt
ja
pop
loop
push
aam
mov
lods
mov
out
sbb
dec
adc
sahf
fsubrs
mov
cmp
jmp
xchg
jl
mov
nop
jle
rcrl
out
movsl
lahf
fbld
mov
into
jp
fildl
fstps
mov
push
fcmovnb
jns
fnsave
mov
sbb
cmp
fbstp
mov
push
rclb
fsubrs
mov
hlt
ret
scas
sbb
dec
sahf
or
jg
in
lds
scas
ds
mov
mov
mov
xlat
into
and
sbb
fcmovu
mov
sysexit
fdivr
jnp
cmovb
and
mov
int3
ja
xchg
xchg
fcmovbe
or
mov
mov
or
lahf
mov
mov
fnstcw
ret
rcrl
fadds
iret
sbb
loop
stos
or
mov
jp
xchg
ret
mov
cld
pushf
shll
stos
sbb
rcl
mov
pop
jecxz
ret
xchg
mov
jl
push
iret
mov
ret
jns
sub
ds
or
ret
jp
loop
and
dec
mov
lret
mov
push
aam
adc
rcll
mov
jge
mov
dec
mov
mov
push
xchg
mov
fsubrl
es
mov
fcomps
mul
fstl
mov
add
pop
jp
fdivrl
adc
pop
outsb
into
lods
jbe
cmpsb
lods
int
mov
sahf
mov
push
ret
int
jbe
push
fcompl
clc
loope
outsb
ss
cwtl
mov
cmpsl
mov
subb
stc
or
fmulp
sub
rcl
stos
sahf
mov
bound
ffree
lods
iret
aam
jnp
pop
sbb
loop
stos
fs
loopne
mov
pop
aam
ljmp
sbb
pop
mov
lea
mov
jl
push
mov
arpl
loopne
iret
fstpt
imul
mov
mov
scas
mov
fdivl
mov
inc
mov
adc
cmp
aad
inc
insb
fldcw
sbb
leave
popa
fcoml
jg
into
jecxz
cmp
imul
mov
push
shll
js
mov
nop
iret
mov
mov
mov
sub
loop
jecxz
jp
lods
nop
inc
jne
lock
mov
lret
sub
jp
fstpl
mov
fistl
rol
adc
push
jl
pop
cmp
int
dec
leave
sarl
rclb
mov
aaa
cmp
jle
loop
xchg
lret
xlat
sub
pop
push
es
sub
cmp
xor
call
fcmovb
or
mov
sub
inc
jp
int3
fwait
mov
jns
fs
scas
fwait
shl
xlat
leave
cltd
cmp
stos
mov
cmpsb
test
mov
lcall
cmp
fsubrl
scas
fdivrs
inc
adc
lods
enter
addr16
mov
mov
into
xchg
pop
iret
lea
pushf
lock
jo
ret
cmpl
push
enter
shl
mov
lods
fdivl
jns
test
aas
in
jns
enter
imul
inc
mov
ljmp
sarb
mov
lods
mov
mov
jnp
cmp
fildl
loopne
in
mov
mov
sbb
xchg
popa
sub
rcrb
shl
cwtl
mov
sub
test
and
jns
sbb
lods
js
scas
shrl
jge
test
pusha
test
test
ret
add
jne
sub
xlat
xor
cmp
scas
insb
loopne
sub
orl
xchg
mov
leave
sub
ret
jns
xor
pop
jecxz
jecxz
cmp
sub
fcmovnb
sub
adcl
cmpb
test
mov
jg
sarl
mov
xor
mov
outsb
loop
pop
or
scas
mov
cli
out
fsubp
mov
outsb
mov
inc
jecxz
adc
mov
into
rorl
mov
negb
or
adc
test
lods
dec
mov
pushf
scas
mov
leave
mov
jecxz
cli
jb
sarl
int
or
sub
cli
xchg
js
pop
ficoml
cld
jecxz
mov
sub
mov
shll
mov
mov
jecxz
shrl
inc
test
mov
adc
es
jge
or
loopne
jl
or
rcr
inc
fcoms
int3
fdivrp
sbb
inc
int
lock
sub
inc
sbb
ret
cwtl
outsb
and
test
add
test
ficoml
jns
jae
out
or
sarb
fsubrs
inc
fsub
and
mov
roll
jge
scas
cmp
and
mov
mov
adc
out
ret
sahf
movsl
cmp
int3
subb
sarb
je
data16
pop
jnp
push
imul
fidivrl
shrl
fcmovnu
stos
fisttps
fdivrp
into
test
xchg
ret
rcl
loop
push
dec
loope
pop
jno
jmp
mov
inc
nop
mov
aas
dec
or
scas
lock
ret
push
cmp
call
dec
fisubl
inc
sbb
into
lahf
stc
xchg
cli
mov
mov
lret
mov
icebp
aad
pop
push
mov
fsubrs
mov
cmp
rcr
ret
mov
jl
xor
jns
mov
fwait
daa
stos
shll
iret
loope
repz
mov
mov
push
mov
jp
jnp
test
mov
jge
ret
cmpl
mov
dec
int
adc
mov
rol
addr16
fwait
dec
sbb
ja
dec
mov
mov
jp
or
xor
mov
in
adc
outsl
inc
mov
fchs
or
mov
pop
mov
pop
pusha
dec
inc
enter
lds
mov
jl
cmc
jge
aaa
dec
inc
pop
lock
or
add
fmulp
or
arpl
fisttps
mov
leave
rcl
push
jge
mov
std
sub
iret
mov
cmpsb
xlat
dec
popa
orb
addl
cmp
jne
aam
or
inc
xchg
mov
and
aad
mov
out
cmp
fisttpll
insl
enter
jg
jecxz
sarl
or
mov
cmp
inc
adc
and
jmp
cmp
jle
js
test
add
mov
ror
mov
mov
jp
cmp
sarb
loopne
sub
pushf
jg
ficompl
dec
insl
shlb
jmp
jp
andb
xor
bound
add
filds
jp
lods
inc
or
or
jle
std
pop
scas
out
inc
xchg
adc
scas
ret
mov
rcl
int
imul
loope
hlt
jae
xchg
scas
cwtl
mov
cld
xchg
cmp
outsb
mov
loop
and
jmp
cmp
testl
fstps
test
cmp
imul
jge
xor
push
xchg
scas
mov
rorb
shlb
jl
xchg
inc
test
mov
fcmovu
aam
loope
push
sti
xchg
jecxz
aas
sub
xchg
xchg
cmpsl
pop
ficoml
xchg
inc
scas
test
push
cmp
sbb
jge
jp
or
out
imul
fldcw
add
push
or
xorb
pop
mov
sti
cmpxchg
sbb
mov
push
nop
jle
shll
iret
test
scas
inc
push
dec
aaa
cwtl
cli
clc
push
insl
loopne
lock
lret
xlat
or
mov
mov
leave
cmp
rcr
sti
dec
clc
xor
push
mov
arpl
mov
fnstsw
dec
or
fistpll
push
in
mov
mov
ja
mov
fcmovb
add
mov
aad
fmuls
mov
ja
add
inc
or
and
shl
push
outsb
jle
jp
jge
lods
add
sarl
ret
xor
mov
xchg
mov
int
lcall
push
shrl
and
pop
fnsave
sbb
decb
stos
xor
cwtl
test
sti
ret
scas
mov
mull
iret
outsb
into
jne
jnp
cltd
sbb
cld
cmpsb
fcmove
jle
int3
shlb
sbb
push
dec
faddp
mov
js
call
cs
lods
mov
push
jne
inc
xchg
lea
shrl
push
jecxz
test
mov
mov
sbb
mov
sahf
iret
mov
or
outsb
xchg
pushf
shrl
aas
rolb
sbb
adc
cmp
dec
mov
xchg
jg
ret
subl
push
ret
sbb
cmpsl
dec
push
repnz
mov
int
enter
scas
dec
aas
fistpll
int
leave
fcoms
loopne
outsb
insb
mov
mov
mov
or
ret
add
aam
repnz
int
or
lods
inc
lret
test
jp
cmpl
fisttps
sbb
adc
scas
fdivrl
add
xchg
into
push
addl
and
xchg
mov
cmp
add
into
cli
xor
lret
movsl
int
imul
loope
ret
jecxz
jo
sbb
push
cmp
imul
lods
mov
test
movsb
push
movsb
jle
push
cmp
inc
imul
enter
lods
mov
pop
push
mov
ret
mov
test
les
scas
xor
dec
cld
mov
mov
int3
mov
lods
flds
jl
xchg
cwtl
inc
lea
enter
mov
movsb
fcom
jne
subl
mov
sub
dec
sahf
adc
sub
mov
mov
ja
dec
push
dec
pop
jl
add
fistpl
or
cmpl
mov
jbe
movsl
fistpll
fwait
inc
push
test
push
mov
jp
jg
add
mov
fs
cmpsb
shlb
add
call
shrl
mov
jl
sbbb
mov
into
iret
ja
mov
mov
xchg
cmp
adc
loopne
ret
ret
xchg
sbb
shrb
mov
out
pushf
mov
mov
mov
mov
loop
xchg
call
pop
insl
jo,pt
scas
jne
mov
rol
outsb
loope
lea
jns
sarl
ret
inc
stos
cmc
mov
shl
aad
cwtl
mov
or
xor
and
call
hlt
js
rcl
xchg
pop
adc
mov
jl
mov
fmul
es
mov
ljmp
push
dec
fcompl
fidivs
xchg
cmp
in
push
fstpt
push
loop
das
fidivrs
mov
and
add
pushf
js
inc
sarl
or
jp
faddp
enter
das
pop
cmp
insb
fnstenv
insl
mov
fidivrl
xor
stos
adc
xlat
leave
xchg
and
sbb
scas
rcll
pop
mov
jle
mov
cmp
js
aad
jecxz
jns
pop
mov
and
mov
aad
fst
addl
into
scas
lods
inc
aas
xchg
enter
dec
push
mov
aam
lret
mov
rcl
shrl
fistl
ret
cmp
test
lcall
lods
or
jbe
test
dec
dec
fwait
enter
insl
fidivs
loopne
mov
add
jno
iret
enter
rolb
rorb
jge
repnz
jbe
mov
es
jns
adc
mov
enter
outsb
lods
mov
mov
out
mov
loop
or
inc
js
xlat
adc
xchg
or
jg
fisttpll
cs
in
subb
jle
jl
add
je
mov
mov
leave
push
pushf
lods
addb
loop
fdivrs
into
add
mov
lret
mov
lods
mov
jge
icebp
mov
stos
fsubr
fisttps
pop
sarl
and
fmuls
and
and
sub
fsubp
cmp
in
dec
add
fidivrl
sbb
cwtl
jecxz
enter
loope
in
add
mov
inc
jecxz
adc
mov
into
fisttpl
test
stos
xchg
mov
scas
jge
orb
mov
jp
scas
fcmovnb
rorb
insl
mov
sbb
ret
cwtl
ja
jg
pop
xchg
sub
cmp
jne
faddl
mov
mov
add
leave
fcompl
inc
xchg
jge
lods
mov
jecxz
aaa
sbb
sub
fiadds
jg
dec
mov
rcrb
mov
pop
mov
fnstsw
xchg
mov
aam
into
icebp
adc
sbb
loope
leave
sub
or
mov
add
mov
mov
jns
enter
std
ds
dec
rcl
fadd
mov
leave
shl
fdivs
mov
scas
loopne
dec
iret
mov
int3
adc
rcl
lods
mov
jp
sbb
mov
loop
adc
mov
jl
push
or
mov
sarl
movsb
fidivl
mov
aam
mov
xchg
pusha
int3
or
mov
leave
sbb
stos
mov
shr
cli
cmpl
or
loopne
jle
and
scas
xchg
fcmovbe
jo
cmp
insb
lods
mov
iret
mov
ds
sub
mov
test
ret
jp
lods
jg
fcoml
rcrb
fildl
aas
cmpl
xchg
jns
sarb
ficoml
mov
test
mov
ret
mov
jbe
sbbb
movsb
into
lods
xor
fsubp
mov
fildl
iret
loop
scas
xchg
or
dec
pop
jns
sub
mov
mov
xchg
push
jle
leave
jge
stos
or
shlb
clc
and
fwait
dec
pop
xchg
mov
mov
into
dec
cmpsb
dec
mov
mov
test
or
int
ret
aam
cmp
xchg
gs
sti
jp
scas
xchg
call
xchg
add
or
jg
pop
sub
out
repnz
iret
or
js
mov
leave
fcompl
loope
test
iret
ret
push
mov
sarb
repz
enter
ds
mov
sbb
mov
mov
shll
aam
sbb
fstpt
adc
xor
cmp
xchg
aad
ret
into
loope
cs
lods
test
stos
shrl
aas
lret
xlat
add
sbb
push
cmp
xchg
outsb
jnp
hlt
js
fsubrs
arpl
jecxz
sub
shl
es
fnstsw
js,pt
mov
cmp
flds
test
xchg
outsb
dec
xchg
jge
mov
ds
adc
scas
mov
sarb
fnsave
add
fwait
loope
add
add
mov
into
fnstenv
dec
jae
loope
jbe
mov
jb
out
add
jge
jecxz
inc
sti
mov
xchg
xchg
rcll
aad
and
inc
xchg
mov
sahf
mov
sub
xchg
in
mov
shll
sub
int3
dec
imull
mov
loop
dec
mov
sbb
add
data16
aam
leave
loopne
mov
push
xchg
push
lret
jecxz
jb
jns
shlb
jbe
shll
lcall
jp
lods
xor
fildll
lahf
dec
je
mov
mov
into
dec
fbld
outsb
test
test
jl
aad
loope
int
add
mov
xor
xchg
lcall
popf
lret
enter
mov
mov
mov
mov
int3
enter
mov
jge
ja
rol
lret
ret
cmp
sbb
jae
sarl
sub
sbb
ja
push
jle
mov
xor
lods
outsb
mov
icebp
ss
and
int3
mov
or
fnstenv
fdivrl
fcmovbe
mov
add
xorb
pusha
aad
shlb
xor
nop
pop
mov
leave
jmp
sarl
mov
mov
lods
ja
mov
sbb
mov
pop
xchg
mov
jge
test
lahf
mov
fwait
lret
lods
iret
mov
and
mov
xorb
jle
dec
pop
mov
inc
scas
dec
mov
and
mov
jmp
rorl
fdivrs
dec
cld
mov
mov
js
xchg
or
xlat
mov
outsb
mov
mov
into
xchg
repnz
mov
pop
jp
xlat
xchg
shll
jb
mov
addr16
jbe
inc
inc
je
ret
push
inc
jp
jno
enter
stos
mov
aad
mov
add
shlb
iret
push
nop
lret
mov
lcall
cmp
cmp
xchg
mov
mov
loope
mov
mov
jae
out
lret
pop
dec
jle
cmp
xor
out
ficompl
stos
daa
jnp
jecxz
int
gs
jecxz
mov
xlat
int3
xor
jns
fbstp
adc
push
lahf
mov
fldenv
lods
mov
shll
test
pop
movsl
or
enter
jb
cmp
rcrl
loope
mov
xchg
call
xchg
into
sbb
ret
mov
mov
xchg
icebp
mov
enter
jle
jge
shrb
test
jns
mov
push
push
ror
pop
mov
ds
pushf
mov
jp
shrb
mov
mov
ret
add
ja
xor
mov
shl
fxch
pop
mov
xchg
sti
adc
iret
jg
andl
cli
lcall
ret
and
out
jnp
fidivrl
test
cmp
aam
shr
jne
mov
dec
mov
push
sbb
into
pushf
lret
lea
fmull
loope
sbb
aad
or
or
pop
or
mov
mov
mov
gs
ljmp
mov
xchg
ja
jns
jae
jge
ret
idivb
out
mov
xchg
jle
loop
mov
adc
ret
push
int
xor
fcomps
sub
loop
out
jle
lcall
cwtl
xor
mov
xorb
lret
stc
in
push
xchg
jnp
pushf
enter
jg
pushf
mov
mov
xlat
ja
xchg
ret
mov
test
cwtl
xchg
sarb
jp
out
mov
mov
cli
and
shrb
aad
push
or
ret
mov
in
std
xchg
jmp
mov
and
cmc
and
in
push
push
pop
mov
xchg
ror
into
test
stos
mov
xor
and
push
daa
js
inc
shlb
mov
xor
cmpsb
mov
and
ret
fmul
xchg
sub
mov
loope
xlat
mov
sub
mov
subb
rolb
mov
imul
push
mov
add
xchg
mov
push
pop
jp
sub
loop
lcall
pop
scas
jg
mov
pop
mov
mov
mov
pop
or
xchg
fstp
mov
lcall
mov
adc
cvttps2pi
jge
jl
call
xor
xlat
outsb
mov
pop
loopne
xchg
ja
mov
dec
scas
pop
fisttpl
mov
fucomi
sub
loopne
sarl
mov
cmpsb
push
or
sarb
sub
mov
mov
mov
lods
leave
mov
cwtl
xorl
cmpb
lea
aam
mov
jle
sti
sahf
cwtl
rorl
int
inc
cmp
fcmovnbe
add
lock
cld
jle
jbe
xchg
fadds
mov
jne
stos
mov
mov
dec
jge
shlb
xor
aad
dec
xchg
call
fldt
into
mov
cld
mov
mov
scas
mov
dec
int
mov
mov
shlb
mov
jns
ret
pusha
das
addb
mov
mov
decb
test
mov
fs
xlat
leave
call
imul
push
xchg
push
int3
inc
fsub
jns
lret
pop
je
push
fcoml
lret
aam
ror
xor
roll
iret
mov
fldt
adcl
pop
ss
rcr
mov
lds
aam
push
fistl
xchg
aad
stc
lret
jle
test
adc
xchg
nop
xchg
divb
xchg
lods
cmpb
mov
rcr
mov
sbb
mov
pop
imul
inc
call
mov
xlat
adc
and
or
mov
xchg
ja
mov
pusha
pop
jl
ret
movsb
jmp
fimuls
int3
lods
fldcw
inc
mov
js
lods
inc
mov
shll
icebp
or
aam
aas
aad
mov
jns
int
in
mov
cmp
jmp
orb
sbb
enter
push
insl
mov
mov
jmp
push
mov
adc
fisttpll
stos
jecxz
in
int
lods
mov
mov
lret
lods
jp
andl
js
mov
xchg
sub
shrl
testb
xchg
ja
fisttpll
or
jge
sbb
fsubl
mov
push
fistpl
loopne
bound
or
inc
enter
jp
fidivrl
xor
pop
mov
flds
and
and
fcmovnu
sub
sbb
movaps
lret
jbe
into
inc
push
imul
into
ja
sub
mov
cs
jle
fmull
scas
fcom
mov
push
test
ja
int3
es
mov
jp
push
fnstcw
cmp
mov
ret
pop
loop
ds
popa
mov
int
mov
mov
or
iret
sbb
mov
scas
mov
jecxz
jne
arpl
sub
ds
add
mov
or
imul
mov
pop
inc
jge
ret
pop
dec
js
mov
adc
xor
mov
loopne
xchg
clc
mov
lds
fadd
cmp
xchg
lock
mov
ja
fcmovbe
mov
jns
sarl
mov
enter
dec
lcall
mov
stos
arpl
or
mov
mov
mov
xor
sahf
mov
rcr
cwtl
test
ljmp
cwtl
mov
aas
xchg
or
ret
shrl
inc
das
repz
dec
pop
shrl
mov
adc
adc
clc
mov
test
insb
inc
nop
mov
jmp
fidivrs
shll
lods
and
push
cmp
dec
lret
jns
test
mov
mov
mov
jecxz
xchg
jp
stos
dec
popa
enter
fcomps
movsl
es
not
iret
insb
aam
mov
subl
mov
xchg
rcrb
lock
mov
cmpb
lahf
mov
ret
jecxz
mov
outsb
rcll
cwtl
mov
adc
shlb
xchg
ret
loope
xor
lods
jl
hlt
cmpl
mov
aaa
mov
inc
ljmp
mov
mov
sbb
lea
lods
iret
mov
pop
into
pushf
and
mov
fisttpll
leave
fadd
ret
mov
adc
stc
dec
pop
call
sbb
aas
mov
mov
shrl
lods
lahf
rorb
ret
arpl
into
sti
pop
fwait
mov
fcompl
sub
scas
push
mov
lods
xchg
sarb
imul
xlat
int
ja
iret
mov
add
js
xchg
loope
sarb
into
mov
enter
fisubrl
lret
or
mov
iret
shrb
sub
xlat
int3
mov
jl
fcoms
cli
test
cmpsl
loop
test
sub
mov
ja
dec
jnp
ljmp
shl
repnz
outsb
fucom
lock
fdivrs
sub
and
xchg
test
sub
leave
js
mov
dec
jg
add
icebp
shlb
cmp
push
rcrl
push
xor
aad
scas
jg
mov
mov
leave
loopne
cli
and
sub
ret
xlat
jg
mov
jl
inc
ret
ljmp
jecxz
fwait
insb
ret
mov
int
and
inc
arpl
ror
mov
or
test
jecxz
jg
into
data16
scas
mov
dec
lods
leave
dec
ja
mov
xchg
orl
fsts
in
loopne
rcll
sarb
push
xlat
ja
mov
jne
jl
xchg
fcomp
xchg
loopne
leave
cmc
mov
int3
js
inc
mov
pop
pop
pushf
test
subl
xlat
cli
and
ja
fdivrs
jl
dec
aaa
lahf
mov
scas
mull
int
jmp
shrl
push
je
push
and
xlat
xor
ret
daa
jge
fldenv
dec
jb
fcmovnu
xor
arpl
in
shrb
pushf
aad
leave
inc
inc
lahf
jle
sahf
imul
rcrl
xor
shl
add
das
arpl
push
adc
jmp
ljmp
adc
adcl
roll
push
popf
mov
fnstsw
jecxz
arpl
jg
pop
sbb
jecxz
daa
pop
nop
cmp
mov
ds
pusha
es
aad
aam
xor
sub
ret
fcmovbe
mov
js
ret
xchg
subl
xlat
jns
mov
jnp
aaa
fwait
mov
ror
jnp
mov
mov
scas
jl
mov
movsb
fiaddl
pop
aas
mov
test
xchg
push
in
fcoml
lods
loope
or
mov
std
fwait
jg
cwtl
dec
inc
int3
rol
sarb
enter
cmpsb
int3
clc
enter
xchg
fistpll
pop
cmpb
sbb
test
pop
dec
andl
jecxz
js
lahf
mov
enter
mov
faddp
jb
mov
jnp
mov
fcomp
mov
xchg
mov
sub
int3
int
push
in
imul
lahf
rcll
test
cmp
mov
call
sub
fdivrs
pop
ret
leave
sarl
cltd
rcll
jl
mov
mov
mov
jle
xor
add
cmovl
aad
js
jecxz
addr16
dec
sub
leave
test
xchg
inc
orl
rcr
lds
fisubs
aam
jl
lcall
dec
popa
ret
jge
mov
insb
rolb
loopne
fsubrs
into
sarb
mov
lret
mov
mov
fiaddl
je
pop
insb
or
sub
fsubs
sahf
sti
cwtl
ret
sahf
pop
jg
iret
sub
mov
ret
int3
gs
enter
mov
lds
inc
mov
adc
dec
fstps
ret
ljmp
push
out
adc
ret
jnp
out
shll
loope
imul
lods
repz
ret
int
lods
rcr
mov
test
loop
leave
jecxz
xor
ret
pushf
mov
and
mov
mov
cmc
inc
arpl
bound
mov
cmpl
aaa
cs
pop
pushf
mov
mov
mov
loope
adc
leave
into
fs
ret
pop
add
jp
movsl
mov
loop
jnp
aad
xchg
push
imul
dec
mov
jp
jmp
cmpb
sarl
int
sarb
jbe
imull
mov
fdivrl
sub
addr16
inc
leave
jl
ja
mov
mov
test
es
aad
js
out
stc
sbb
rcrl
xor
out
xor
fimull
add
pop
aam
jmp
adc
sbbb
and
lret
mov
dec
pop
inc
mov
sahf
mov
jl
test
mov
dec
jae
cmp
loope
mov
mov
fstpl
cwtl
loope
mov
and
sti
ds
mov
jge
fdivl
fsub
xor
shll
mov
dec
loop
movsl
mov
mov
jecxz
sarl
sarb
loopne
arpl
sarl
mov
js
fsubrl
or
shrb
sarb
test
fisubrs
mov
mov
mov
mov
push
mov
sbbl
sub
pushf
shll
nop
pop
into
daa
test
add
sahf
js
shll
ret
mov
or
dec
pop
inc
mov
rcr
push
adcb
mov
mov
mov
loop
push
or
adc
mov
mov
mov
sbb
aas
imul
pop
js
dec
mov
std
jbe
or
scas
mov
cmp
fnstenv
nop
scas
sarb
es
cwtl
mov
xchg
or
sub
sub
push
mov
xor
dec
add
test
andb
cmp
aam
loop
inc
test
cmp
xchg
sub
dec
rcrl
mov
loop
movsb
scas
dec
mov
enter
fdivr
sbb
aam
shll
and
jp
mov
out
sbb
mov
inc
and
xchg
ret
sub
sub
or
jb
jecxz
and
ret
fidivrl
xchg
pop
dec
push
cli
add
subl
shlb
inc
mov
sarb
lret
aas
cwtl
jnp
jp
filds
loope
jae
mov
ret
fisubrl
ret
fnstcw
pop
outsb
mov
insl
fs
aam
ficoml
outsb
loop
lahf
jle
adc
icebp
mov
lock
mov
fiaddl
mov
test
mov
cmpb
cwtl
cmp
shll
ds
inc
jnp
into
push
push
push
xchg
jb
pop
inc
fisubrl
mov
sbb
mov
in
mov
stos
rcl
pushf
lret
lds
cmp
fistpll
repz
cmc
in
loopne
xchg
sub
aam
adc
mov
lret
mov
mov
mov
mov
fisubrs
mov
clc
ljmp
mov
cmp
pop
insb
mov
jae
fwait
cld
inc
lahf
cmp
scas
cmp
cs
xchg
mov
int
test
sarl
enter
and
lods
mov
jge
mov
mov
xorl
roll
push
jle
into
pop
jp
xor
cli
fsub
rcrl
orb
inc
lods
mov
mov
dec
push
scas
mov
adc
shrb
adc
mov
jg
jge
jl,pt
test
mov
jg
aam
ljmp
rcl
fst
arpl
mov
jg
int
shll
pop
insl
loope
shlb
xchg
push
jnp
xor
hlt
xchg
int
mov
stos
mov
repz
jp
mov
inc
scas
pop
sub
push
ret
mov
das
mov
ja
mov
or
mov
mov
fadd
clc
sarb
cmp
loopne
jns
xchg
jp
jle
or
sbb
fcmovnbe
mov
fisttpll
jnp
push
push
dec
sarl
mov
gs
mov
jge
fidivrs
leave
ss
scas
cmp
int
mov
sbb
nop
mov
dec
fcom
loope
inc
dec
shll
mov
out
insl
leave
gs
stc
or
cmp
inc
js
sub
loop
int3
inc
pushf
mov
lahf
mov
dec
jecxz
js
iret
fnstcw
sub
mov
in
lahf
mov
jle
xlat
mov
loop
test
lods
mov
das
dec
sub
test
xchg
push
jecxz
fnstcw
or
dec
sarb
push
rcr
leave
enter
lods
aam
lods
fistps
in
loopne
cmp
xor
shll
sub
push
fwait
mov
in
pop
cmp
sbbb
andb
sub
loopne
lods
mov
jle
loope
movsl
scas
lods
aad
jl
fcomi
push
hlt
pushf
aad
clc
out
push
jge
fs
fnstsw
dec
jne
xlat
es
ret
call
adc
jp
add
xchg
repz
mov
bound
and
mov
and
mov
push
imul
mov
dec
stos
or
js
jns
inc
int
push
xlat
xchg
aam
mov
lcall
ret
sbb
call
dec
dec
rcl
dec
inc
mov
lret
int
mov
pop
pop
mov
mov
or
int3
ret
ja
ficompl
push
cmp
lods
shlb
int3
cwtl
js
mov
cs
jg
mov
ret
loopne
ja
cld
cld
jl
mov
jnp
enter
rol
xchg
xor
jnp
lcallw
les
cmp
mov
ja
in
jg
fcmovu
shlb
dec
ss
fnsave
or
leave
xor
loopne
add
and
lods
add
sarb
insb
push
jnp
pop
sub
xor
mov
mov
enter
test
test
cmpsb
into
jle
stos
fildll
outsb
test
loopne
sub
test
mov
jns
mov
cltd
mov
iret
fists
rcrb
aad
jge
fstpt
enter
mov
jle
or
jecxz
mov
lds
push
sub
jns
decb
inc
dec
add
data16
cli
mov
mov
into
jnp
loop
iret
lock
nop
int
ret
shrl
fdivrs
ss
cmpsb
mov
jg
mov
aam
iret
lods
shll
mov
ja
stos
test
stos
enter
ret
mov
add
in
andb
xlat
orl
inc
and
sub
cwtl
and
cmp
popa
ret
ffreep
dec
xor
dec
cmpsb
cmp
fcmove
sub
je
lcall
mov
fisttps
out
fcomi
lea
out
add
xor
loop
insl
lods
fsubrp
cwtl
sbbb
ror
jp
lret
cmpl
fadds
js
fadds
ljmp
scas
xchg
out
ret
mov
adcl
pop
je
ret
mov
mov
stos
jle
jnp
fucom
adc
sub
call
mov
adc
popa
ret
jecxz
cmpsb
aad
mov
add
cli
push
test
cmp
push
pop
jle
fisubrs
cmp
cmp
pop
cmp
mov
mov
pusha
fsubrs
movsb
loopne
out
ss
movsl
mov
mov
mov
je
loop
fndisi(8087
leave
dec
mov
sub
cmp
sub
cmpb
and
andb
mov
aam
ja
mov
and
cmpb
nop
inc
sub
js
lods
jo
aam
sub
out
xchg
test
and
add
dec
jb
fyl2x
nop
mov
cmpsb
test
mov
rcr
push
inc
frstor
jle
jne
jg
and
sub
and
movsl
mov
push
rcr
not
mov
jge
int
mov
jmp
fiaddl
rcr
insb
adc
or
jecxz
mov
mov
pop
movsb
bswap
mov
loope
xchg
hlt
sarl
dec
xchg
dec
ror
mov
cwtl
dec
cmpsb
pushf
scas
xchg
orb
lods
jle
les
leave
xchg
add
push
mov
or
loopne
loope
mov
scas
mov
jns
iret
xlat
dec
insb
out
icebp
mov
pop
test
ja
xorl
jno
rcl
mov
dec
and
sarb
loop
loop
pop
sub
mov
adcl
inc
test
jbe
xchg
in
out
jle
or
sbb
enter
add
test
mov
dec
add
mov
in
and
inc
mov
mov
ret
mov
add
imul
jle
enter
stos
push
int3
faddl
fisubrl
sbb
jnp
add
sti
in
fidivrl
fldl
mov
pop
leave
iret
dec
stos
jnp
cmp
jbe
loope
jbe
pushf
int
test
iret
push
sti
mov
jnp
inc
xchg
dec
in
in
adc
sbb
jns
mov
mov
test
lods
mov
mov
or
dec
mov
sub
xchg
mov
jl
int3
mov
test
mov
sti
dec
shl
vpcomq
mov
adc
aam
inc
leave
out
test
rcrl
sub
stos
out
sub
jp
jle
xlat
jge
mov
aam
push
repnz
mov
fdivl
mov
scas
lret
fstpt
fcom
cmpl
lods
leave
roll
bound
xchg
aaa
jle
push
jno
ficomps
jbe
movsb
mov
push
jle
adc
stc
fcomps
int3
jmp
test
inc
cmc
insl
mov
mov
mov
filds
rol
pop
js
loop
or
mov
mov
mov
cmpb
js
hlt
sbb
shrl
sahf
int
aam
fwait
cmpl
pop
xchg
jnp
cmp
out
adc
sub
mov
mov
mov
ffreep
sub
iret
rorl
or
jns
test
stos
jg
pop
leave
cmp
mov
ret
pop
mov
js
test
jge
mov
adc
addr16
loope
ss
lret
into
rol
iret
cld
ret
stos
scas
xchg
xchg
jo
ret
mov
shlb
and
enter
int
adc
imul
in
mov
jns
mov
fsubrl
shrb
imul
fld
cmp
mov
sti
sahf
mov
stc
lea
pmaddwd
add
ja
dec
mov
mov
test
or
ret
jl
lods
mov
ja
or
adc
adc
push
out
shll
pushf
outsb
xchg
sbb
mov
mov
pop
popa
fwait
push
cld
inc
cmp
sarb
shll
int3
mov
insb
xchg
sub
mov
pop
fdivrs
loop
aam
lahf
test
dec
shl
iret
inc
mov
fcmovnb
fcmove
and
dec
dec
or
mov
dec
in
lods
mov
mov
int
adc
mov
mov
int3
fiadds
mov
cmp
clc
mov
lret
xlat
inc
fcoms
jecxz
add
fiaddl
add
mov
loopne
in
shlb
xchg
sarb
cmp
ret
loopne
adc
mov
out
aam
cmp
loop
push
fdivs
out
es
leave
enter
test
and
xchg
pop
mov
cmp
add
jmp
iret
lods
mov
insb
pop
lcall
and
fxch
mov
and
dec
jae
rcrb
mov
mov
fstps
subb
mov
inc
nop
sub
mov
iret
jl
ja
inc
es
mov
outsl
ja
outsb
mov
pop
mov
adc
sub
lcall
mov
aam
notl
cmpb
sub
xchg
fsubrs
and
cmpl
test
mov
mov
fidivrs
aam
mov
bound
sbb
test
jl
es
add
push
or
inc
je
inc
sarb
inc
xlat
mov
test
lods
je
pop
shlb
adc
or
sbb
ja
xor
outsb
pop
es
repnz
stc
jb
lret
mov
fnstsw
in
mov
mov
shll
mov
leave
lock
mov
mov
mov
ret
loopne
loope
stos
loopne
mov
loop
jnp
mov
mov
fdivl
das
mov
test
fistps
fnstcw
inc
scas
lret
int
ds
fst
iret
jnp
imul
mov
jl
mov
push
and
leave
sarl
lds
mov
int3
iret
icebp
dec
enter
test
sahf
add
inc
jecxz
mov
aam
scas
sarb
scas
out
test
ret
rcl
es
mov
ret
mov
jge
lock
sbb
shrl
mov
shlb
test
fimull
fildll
lods
faddp
jecxz
fnstcw
rcr
movsb
loopne
mov
daa
fwait
aam
ret
int
sbb
pop
int3
xchg
push
mov
mov
loopne
mov
jge
mov
fmul
mul
and
jg
clc
fidivrl
loop
mov
dec
loopne
mov
mov
mov
mov
int3
leave
lods
js
lods
imul
mov
js
mov
mov
in
lahf
adc
pop
stos
repnz
mov
loope
test
jg
mov
loop
mov
lret
int
xlat
cmpl
dec
xorl
fistps
cwtl
lods
test
mov
push
arpl
xlat
sbb
int
shll
jg
push
xchg
enter
scas
cwtl
jns
xchg
jecxz
xchg
sbb
jp
jge
aad
xchg
popa
sbb
xchg
mov
mov
inc
aad
sbb
insl
fnstsw
ficomps
fcomps
and
and
inc
mov
loopne
test
or
sarl
leave
sbb
pop
shl
enter
pandn
iret
sbb
shlb
scas
mov
mov
loop
mov
mov
aam
ror
movsl
int
mov
push
test
pop
test
push
ret
lods
jnp
fcmovnbe
mov
loop
test
mov
cmp
xor
or
sarl
or
es
xor
lock
xchg
ror
rclb
nop
popf
aas
pushf
sbbl
fstpl
jo
enter
ret
aam
es
test
jmp
cmp
loope
loop
mov
repz
push
pop
mov
aam
mov
pop
fxch
in
stos
std
ret
shll
stos
fldt
ja
shll
jg
cmp
mov
fiadds
xchg
jnp
mov
shrl
sub
jb
rcr
jp
iret
mov
sbb
and
loop
mov
or
sbb
fisubs
cmpl
mov
pop
jg
fcmovu
sbb
mov
mov
fsubrl
fadds
aas
shll
js
mov
mov
mov
mov
fistps
inc
mov
mov
subb
jecxz
ror
mov
fcomps
shrd
int3
idiv
nop
mov
scas
inc
movsl
mov
ror
jle
jnp
mov
mov
jmp
jns
imul
js
imul
fiaddl
iret
sbb
cs
sbb
iret
add
mov
lods
ret
jecxz
sbb
mov
mov
mov
mov
ret
add
xchg
subl
mov
fildl
mov
inc
popf
jne
leave
out
cmp
mov
xchg
and
shl
jg
mov
repz
test
jecxz
adcb
mov
and
jmp
or
or
outsb
add
cwtl
mov
mov
mov
push
jecxz
pop
cli
mov
aam
jle
jp
xchg
rorb
dec
es
leave
mov
cwtl
loop
in
and
dec
dec
mov
into
mov
add
imul
ljmp
out
jp
dec
mov
pop
out
arpl
mov
ret
insb
leave
jge
pushf
rcrl
enter
pop
mov
jle
mov
pop
enter
sahf
inc
fildll
xor
add
stc
fsubrs
xor
jecxz
ja
repnz
loop
mov
test
mov
inc
mov
mov
mov
sub
addr16
and
sbb
shrb
inc
rcr
sub
mov
and
fwait
mov
mov
rcl
loopne
cmc
xor
js
cmpl
rcl
mov
fnstcw
cmp
jl
nop
out
dec
je
mov
shlb
pusha
and
mov
es
pushf
subl
out
push
xor
mov
stos
or
xchg
push
or
adc
lea
ret
push
enter
fnstsw
or
fldcw
nop
adc
in
xchg
leave
mov
lods
mov
mov
jge
dec
jecxz
mov
sub
adc
xlat
cli
sbb
mov
mov
mov
sbbl
mov
sub
es
mov
loope
repz
and
mov
cmpsb
loope
mov
iret
je
test
shr
rcrl
shlb
out
mov
mov
fistpll
rorb
mov
and
xorl
ja
lds
rcll
es
sbb
jecxz
pop
lods
das
lds
sarb
iret
pushf
rcll
int
mov
test
subl
push
je
cli
jge
push
add
dec
lods
mov
les
and
cwtl
mov
xchg
sarl
imul
mov
dec
sbb
mov
sbb
jecxz
cwtl
cmp
or
insb
scas
mov
outsb
cltd
insb
mov
jp
rorb
mov
leave
xor
pop
lds
jecxz
mov
adc
scas
adc
call
mov
jge
movsb
scas
mov
out
jp
ret
xor
dec
cmpsb
xchg
adc
shl
mov
into
sub
sbb
mov
loopne
loope
out
cwtl
scas
lods
mov
stos
mov
push
push
mov
push
cli
xchg
jg
ret
cli
inc
sahf
js
rolb
inc
fimuls
pushf
xchg
mov
rcr
push
insl
dec
ljmp
mov
mov
out
jp
ficoms
sahf
xchg
sbbb
js
jg
shrl
rol
mov
jns
rorl
mov
daa
movsl
loop
mov
paddq
jnp
mov
inc
loope
movl
aad
mov
es
inc
jbe
mov
insb
pop
jns
sarb
shl
xor
iret
js
loop
dec
xchg
ret
fsts
movsl
fdivs
in
fildl
fldt
pop
fmull
rcrl
test
cmc
lock
leave
and
enter
adc
shl
pop
xorl
scas
rolb
mov
loop
shrb
ljmp
push
ret
or
sahf
sub
stos
cwtl
mov
inc
arpl
aam
shl
ss
insl
ret
xchg
jns
mov
lock
test
dec
into
and
or
iret
fisttps
inc
jge
inc
sub
cwtl
sarl
mov
push
nop
cmp
js
rcl
and
mov
shlb
lods
mov
pop
xchg
mov
jecxz
sbb
xor
sub
stos
inc
flds
cmpl
aaa
fsubp
mov
fisubs
push
mov
or
push
dec
test
enter
subb
dec
jae
movsb
loop
mov
leave
into
jg
mov
inc
jns
mov
imul
mov
inc
hlt
out
shlb
insb
lods
cmp
mov
sub
fcomp
fisubl
add
mov
mov
mov
ffree
nop
scas
int
jmp
ja
sub
aad
xlat
imul
xorl
xor
iret
jl
adc
pop
cmpb
pushf
testl
xchg
push
leave
nop
enter
mov
fsubl
loope
cmpl
xchg
pushf
push
xor
cmpsl
mov
cmp
mov
add
and
mov
sahf
lods
subb
int
lods
test
mov
dec
rcrb
shll
rorl
xchg
mov
jmp
pop
roll
ret
loop
or
orb
xchg
cmp
inc
cmpsb
sbb
arpl
leave
es
adc
mov
leave
xor
mov
pop
fwait
sbb
pusha
clc
outsb
pop
ja
mov
mov
mov
imul
leave
pop
inc
mov
icebp
mov
scas
shl
pop
in
xor
sbb
fsub
jne
es
sbb
fsubl
mov
outsl
sbb
rcrl
insb
pop
sub
iret
push
mov
pop
out
mov
shl
aad
pop
cmc
adcl
inc
ja
xchg
movsb
mov
shlb
leave
loopne
lcall
xchg
and
out
and
test
out
sbb
jg
scas
shl
push
add
mov
push
sbb
jl
fnstsw
add
popl
filds
cmpl
adc
xchg
insl
xchg
sub
ja
fnop
test
and
loopne
sub
insb
mov
rcr
jmp
mov
popf
test
cmp
jbe
fwait
mov
outsb
lods
dec
add
hlt
dec
enter
mov
push
cli
aam
jns
mov
inc
cmp
or
cmp
ss
jg
ja
push
dec
int3
ret
adc
fsubrl
sarb
mov
rcr
jbe
or
enter
cmc
in
inc
insl
xchg
fdivrl
rcll
dec
loope
mov
mov
flds
arpl
ret
leave
sub
lods
loopne
jecxz
jnp
pop
rcl
lods
xor
xor
inc
mov
or
mov
xchg
mov
ljmp
test
mov
int3
sbb
xlat
loope
fcmovnb
sub
pop
es
jge
ret
dec
scas
fidivrs
lods
mov
test
imul
mov
mov
add
mov
sub
jg
shlb
jle
movsbl
js
inc
mov
shl
sarb
sbb
mov
jecxz
mov
ss
mov
push
xlat
int
data16
jl
mov
lahf
mov
iret
jecxz
ljmp
fisubrl
imul
lods
cs
jecxz
iret
xor
pop
test
mov
jb
mov
ret
mov
jle
aad
repz
or
mov
insl
mov
mov
mov
mov
repz
fidivl
js
into
and
pop
or
sarb
sbb
adc
fst
dec
test
cmp
in
jge
aad
loop
repnz
ret
ficomps
enter
test
lahf
dec
dec
cmp
xor
loopne
loop
es
repz
ret
xlat
mov
xorb
rcrb
mov
add
xor
pop
or
rclb
inc
sub
sbb
std
ret
xor
scas
fldl2e
cli
rcl
mov
int
loopne
ror
aad
scas
ret
xor
jge
mov
or
daa
jle
jle
rcrb
push
test
es
push
cmp
dec
ds
xor
mov
into
mov
mov
shll
ret
push
mov
jl
jl
mov
fcmovnu
xor
jg
ffreep
fidivl
sbb
call
xchg
popa
mov
cli
fistpll
loope
adc
add
fisubrs
rolb
orl
push
cmpsb
jns
mov
in
repnz
xchg
int
fcmovbe
ds
mov
into
popa
dec
out
mov
shll
call
mov
rclb
js
fdivrl
mov
ret
jns
cwtl
aam
test
xchg
and
jecxz
inc
adc
add
gs
or
mov
test
dec
mov
aam
mov
or
fcmovnu
mov
inc
dec
adc
enter
leave
subl
int3
jp
iret
xchg
lea
subl
mov
fmull
lods
or
roll
and
sbb
cmp
roll
jns
pop
iret
jns
pop
mov
mov
pushf
mov
dec
mov
jl
js
mov
mov
mov
dec
mov
lret
sbb
mov
out
jp
mov
jp
in
fstl
and
mov
test
lods
adc
sbb
in
fcom
or
mov
sbb
rcr
ret
jns
in
sub
push
xor
scas
or
aad
mov
faddp
scas
dec
or
hlt
outsb
fidivrl
pop
into
loop
fistpll
iret
ret
aad
shrb
adcl
enter
sbb
adc
mov
aad
pop
mov
into
sub
sbb
jle
cmpsl
mov
scas
shl
outsb
iret
orl
pop
jle
xor
mov
or
mov
rcl
mov
dec
mov
push
xlat
xchg
emms
jp
mov
orb
xlat
js
fucomi
ffreep
rcrb
es
push
iret
cwtl
dec
cmp
and
xorb
adcl
movsb
add
out
insb
push
cmpsb
mov
xor
mov
dec
jecxz
adc
cli
dec
mov
jne
lcall
push
xchg
lods
xlat
pop
jae
int
xchg
stc
jecxz
iret
dec
inc
mov
mov
ds
mov
xchg
ja
adc
outsb
adc
jle
jns
fldl
mov
mov
incb
test
je
int3
shlb
scas
push
aam
xorb
xchg
mov
ficoms
xchg
sbb
lods
rcll
mov
push
mov
dec
cmpsl
mov
mov
xlat
ret
adc
scas
enter
sahf
or
pop
aam
flds
mov
imul
mov
or
fcomp
mov
int
cmp
test
clc
fcmovnbe
mov
shll
inc
xor
stos
xadd
dec
fs
rorl
mov
mov
and
mov
js
enter
fidivrl
lea
loopne
xchg
push
ja
cmp
jp
test
and
mov
add
adc
mov
jle
fdivl
jl
push
mov
sbb
mov
and
push
and
push
vcvttpd2dq
fcompl
rcr
iret
or
rorl
xor
adc
inc
xchg
das
adc
lock
daa
jae
int3
dec
arpl
push
mov
mov
fstpl
mov
mov
shl
add
pop
sbb
sarl
sub
push
scas
movsl
mov
ja
sarb
js
adc
sbb
icebp
pushf
jge
sahf
mov
ja
inc
xlat
cmp
and
ret
lea
pop
sub
jb
jb
mov
fidivl
mov
sbbb
jne
pop
js
ret
out
xchg
mov
adc
mov
cmp
mov
aad
insb
jnp
orb
scas
mov
rcr
or
sbb
add
movzbl
nop
mov
repnz
ret
jge
lret
rcr
cmp
test
fwait
jg
fsub
pop
lahf
in
ss
jp
not
int3
loopne
mov
inc
call
clc
iret
push
mov
mov
loopne
jmp
dec
aad
test
push
test
mov
arpl
or
lods
xorl
fstpt
pop
xchg
inc
aad
and
dec
cmp
dec
pop
fiadds
mov
int
ret
mov
inc
rcll
sarl
mov
enter
hlt
mov
cmc
mov
lods
fists
inc
cmpsb
mov
fcmovnu
sar
insb
mov
xor
sbb
aad
dec
repz
pop
fidivrs
push
ret
movsl
ret
and
ljmp
popf
or
pop
add
enter
dec
ja
jecxz
sbbb
mov
loopne
mov
mov
fld1
sub
outsl
dec
subl
lods
mov
jns
ss
shlb
mov
leave
iret
xor
sbb
mov
mov
mov
fcmovne
inc
pop
jmp
sub
mov
jnp
jne
shrb
xorl
ret
imul
fcmovu
pushf
xor
mov
iret
xor
ret
addr16
cld
cmp
mov
cmp
jle
ret
fiadds
mov
mov
fcmovbe
jl,pt
inc
jnp
sarb
test
loope
cmpl
mov
pushf
mov
jge
sub
add
xor
mov
leave
enter
lods
mov
fisubrl
iret
jle
test
lds
jecxz
jp
inc
fs
stos
or
mov
shrl
pushf
shrb
mov
xchg
js
ret
jecxz
mov
jg
call
jge
ret
inc
aaa
fisttpll
cmp
adc
pop
mov
or
dec
and
pop
inc
idivb
xchg
aam
orb
ror
mov
dec
pushf
pop
fidivrl
scas
lret
jg
aad
mov
leave
xor
repnz
ret
int3
aaa
mov
mov
pop
inc
push
xchg
test
jbe
xchg
dec
cwtl
mov
adcl
sub
mov
nop
cmp
insb
cld
cwtl
fimull
jmp
sbb
rorl
push
mov
rolb
adc
insl
mov
jg
cmp
push
mov
mov
stos
mov
sbb
cmp
fdivrs
mov
lods
les
aam
mov
mov
test
mov
add
xchg
jecxz
mov
lahf
mov
aam
rorl
mov
leave
pop
aad
jp
int3
inc
mov
test
fiadds
mov
sarl
mov
scas
aad
xlat
shlb
rcrl
jne
sbbl
stos
jp
sub
dec
pushf
iret
xlat
mov
loop
push
xchg
add
insb
and
fdivrs
cmc
inc
mov
pop
pushf
lahf
xchg
fwait
inc
rcr
xchg
dec
mov
pop
or
mov
pushf
lods
mov
jb,pn
ss
ja
xchg
clc
loop
sub
stos
sti
fsub
loop
add
into
aam
js
mov
ret
sahf
mov
dec
int3
mov
loopne
loope
jp
and
jmp
shrb
xor
jbe
fsubrs
push
pop
mov
scas
mov
cmp
lods
inc
aad
idivl
rcr
ds
push
aam
sub
fisubrs
jns
fisttpll
and
shrb
mov
rcr
es
scas
lods
push
repnz
loop
mov
add
shll
aam
lods
lcall
imul
and
enter
outsb
mov
cmp
lea
jg
mov
fld
pushf
and
scas
enter
fisttpll
es
aad
stos
repnz
push
mov
mov
loope
shlb
ret
cli
nop
jns
subl
jg
lret
mov
fcmovnu
loope
mov
push
sbb
fidivrs
iret
subb
scas
and
sbb
dec
push
mov
aad
rclb
nop
std
push
xchg
fcmovbe
xchg
xlat
fbld
adc
std
and
lods
pop
fst
aam
inc
cmp
roll
daa
jle
in
leave
mov
insb
xlat
xor
sub
leave
mov
movl
cwtl
jl
mov
inc
jns
into
and
push
xor
jle
rorl
mov
scas
maxps
test
shll
or
test
mov
mov
mov
test
mov
pop
mov
jb
jb
test
sbb
jne
adcl
mov
fdivs
mov
xchg
ret
shll
mov
or
mov
and
xor
push
int3
inc
dec
rcl
sbb
mov
pop
jecxz
sbb
imul
xor
fcmovne
or
mov
sarl
lret
xlat
pop
push
fwait
cld
shrb
cltd
pusha
sbb
xlat
jecxz
push
jae
push
fidivs
aam
adc
adcl
mov
fstpt
add
mov
pushf
jp
jo
aad
iret
sub
loop
xor
ret
fdivs
into
rolb
leave
sarl
mov
mov
fbstp
mov
jp
scas
pop
shrb
rorl
cmp
and
jns
dec
mov
aad
jae
fisttpll
xchg
sub
inc
cwtl
jge
xchg
push
loope
fists
sub
add
es
inc
push
cmp
mov
cwtl
inc
xchg
sbb
xchg
lret
or
rorl
fnsave
daa
test
fsubp
xor
fcom
lods
ror
inc
pop
xchg
ret
aam
nop
loop
jae
xlat
faddl
hlt
es
dec
cmpsl
mov
ret
jns
cmp
pop
aad
int3
mov
or
mov
dec
inc
dec
push
inc
and
rcll
ret
fucomi
mov
lods
test
pop
daa
xchg
add
icebp
mov
and
cwtl
mov
fwait
lods
fists
gs
cmpl
jnp
push
and
clc
test
rcrl
aad
jmp
daa
sahf
js
lahf
rcl
xchg
pop
rcll
scas
adc
or
adc
test
adc
inc
fdivrl
lods
dec
lret
jg
jp
mov
aam
test
mov
fucom
ret
jecxz
pusha
push
roll
sarl
sar
or
or
data16
jle
ljmp
test
int
in
nop
dec
loop
mov
inc
jecxz
rolb
shll
in
mov
pushl
and
loopne
jecxz
stos
cwtl
sub
shll
xorb
enter
sbb
aam
mov
push
xchg
or
push
iret
add
shl
mov
jl
je
dec
aam
push
test
cmp
pop
mov
test
loopne
outsl
iret
xor
cmp
rorb
cwtl
xor
dec
push
scas
cmpl
adc
aad
fsubrl
lea
outsb
adcb
mov
mov
cmpsb
enter
clc
fsub
sub
cmpb
test
insb
mov
lcall
mov
stos
imul
push
adc
mov
fnsave
or
mov
cmp
scas
dec
cli
jnp
dec
push
mov
lods
jl
jb
test
aam
mov
mov
mov
mov
scas
jp
loopne
mov
pop
aam
xchg
aam
ret
mov
inc
lahf
cltd
mov
mov
pop
dec
push
push
pop
orl
mov
aas
xchg
ret
adc
inc
nop
push
hlt
jge
xchg
loope
sbb
cmp
fmull
xchg
faddp
in
jecxz
xor
jbe
pop
mov
sti
mov
fstpt
cmpsb
aam
push
repz
rcll
jg
iret
jae
fnstsw
mov
pop
lods
imulb
in
jg
cmpsl
enter
out
adc
inc
jg
mov
pop
pop
jl
jb
enter
mov
loopne
xor
xchg
je
iret
lret
jg
rcrb
mov
mov
jg
and
call
mov
das
cmp
sub
addb
add
fsubr
inc
cmpsb
and
sarb
sub
adc
mov
mov
pushf
mov
popa
push
ret
into
outsl
jl
subl
std
mov
xchg
in
and
cmc
ficompl
out
xlat
pushf
mov
fmulp
mov
stos
mov
jle
xor
test
roll
or
iret
fldl
jns
and
mov
addr16
push
cmp
and
adcb
jns
sub
jg
sbb
mov
inc
mov
pushf
mov
sbbl
shll
adc
xchg
push
push
jne
inc
pop
in
mov
aaa
mov
dec
mov
lcall
xor
loopne
mov
or
pop
jg
ret
ljmp
test
lods
xlat
mov
ret
sbb
loop
pop
insb
orl
dec
pushf
inc
movsl
mov
xorl
test
fisubrl
and
inc
inc
test
push
rcr
enter
mov
xor
movsl
jp
mov
mov
inc
mov
out
in
mov
sarl
add
shll
fadd
ljmp
lea
dec
data16
dec
rcll
aam
mov
or
int
jl
rcr
xchg
fstpt
repnz
loopne
jb
push
ret
lret
fcompl
sub
jge
stos
push
fstpt
rcl
fcomps
cwtl
ret
test
rol
jg
mov
rcl
add
mov
adc
cwtl
xchg
mov
mov
test
sbb
cli
dec
ret
ret
mov
je
mov
mov
xchg
mov
enter
or
lds
and
mov
imul
xchg
pop
mov
adc
pop
xchg
loop
xchg
dec
dec
test
push
sbb
test
mov
inc
mov
add
sbbb
and
stc
ljmp
add
inc
test
xor
cs
fisubrl
fsubp
mov
test
aaa
jbe
lahf
mov
nop
lods
shl
movsb
xor
inc
ficoml
mov
scas
shlb
mov
adc
test
inc
ja
js
scas
sarl
xor
je
ret
pop
mov
inc
scas
leave
jmp
mov
mov
rolb
mov
ficoml
add
js
stos
cmp
ja
fnstcw
iret
rcr
out
int3
lods
mov
cmp
cmp
mov
fidivrs
mov
mov
rolb
ret
fcmovne
or
mov
jns
xchg
rclb
fadds
insl
das
rclb
jp
int
xlat
shlb
mov
aad
loop
xlat
push
dec
push
dec
dec
ret
iret
rolb
push
cmpb
inc
jbe
mov
insb
int
mov
xor
test
mov
scas
bound
aad
fidivrl
arpl
scas
mov
clc
sbb
or
enter
adc
inc
inc
xor
shlb
lds
ror
adc
jmp
push
ret
cmp
push
insb
fcompl
push
mov
std
loop
clc
sbb
jns
push
es
xor
jl
mov
loop
jge
jg
inc
shrl
mov
mov
xor
xchg
mov
fistpll
jmp
sub
aad
leave
lahf
fcmovbe
cwtl
imul
sub
sub
adc
fstpl
inc
leave
push
shrb
lret
fbstp
test
pop
adc
mov
xor
test
imul
add
int
fcoms
sarl
lret
aad
bound
ja
mov
xadd
mov
jo
aam
loopne
adc
mov
mov
loop
mov
sub
sarb
jle
mov
inc
jns,pt
xor
mov
in
ljmp
inc
mov
mov
mov
scas
arpl
add
cmp
sbb
sub
movsl
js
xorl
shll
push
ret
scas
mov
mov
and
mov
cmp
int
sti
es
add
mov
cmp
idivl
out
fwait
jl
mov
enter
or
mov
test
inc
cmpb
mov
rcrb
jne
faddl
inc
fldl
mov
dec
inc
leave
dec
lret
sbb
fildll
insb
test
in
xor
jbe
jge
in
sbb
mov
iret
mov
leave
add
fstpt
xlat
jle
add
mov
mov
loop
xor
xchg
xchg
cmpl
fcomps
jae
ret
enter
leave
cld
iret
push
mov
dec
mov
mov
test
ficompl
jno
ret
mov
into
mov
pop
sarb
ret
mov
cwtl
int3
shl
imul
xor
add
mov
orb
fidivrs
lea
or
mov
jb
dec
mov
mov
test
mov
xor
mov
aad
xor
data16
scas
js
into
mov
mov
push
loop
mov
jmp
pop
xlat
xchg
out
mov
fstpt
scas
cmp
call
leave
out
stos
repz
fsts
and
rorl
rolb
negb
lods
aas
push
icebp
mov
mov
rcll
paddsw
in
rcrb
ret
jmp
mov
pop
mov
call
mov
pop
xchg
dec
aam
cmp
roll
loop
sahf
and
push
call
inc
jecxz
loopne
pusha
aam
fdiv
mov
enter
fldt
nop
mov
push
ret
insb
fnstcw
pop
mov
test
push
rcrb
aas
icebp
and
and
mov
fmul
divb
imul
xchg
cli
add
gs
pop
or
pop
lret
mov
fmul
adc
mov
loop
add
test
leave
dec
jo
aas
sub
cli
inc
roll
mov
gs
xchg
int3
jg
jg
rorb
iret
jecxz
enter
mov
mov
sahf
or
mov
ret
jecxz
mov
pop
mov
test
and
scas
pusha
push
bsr
mov
mov
mov
cmpb
jae
test
jb
mov
push
mov
cmpsb
cli
clc
pop
shrb
leave
ret
iret
jp
jge
ss
push
loopne
push
mov
ja
pop
out
fdivl
aam
mov
js
repnz
fimull
mov
mov
push
bnd
sbb
into
lea
add
lods
sarb
addr16
aam
xchg
mov
inc
mov
shll
jp
movsl
jle
mov
addl
int
xchg
and
sub
inc
test
cmp
test
lds
xchg
iret
mov
xlat
mov
das
dec
lcall
or
arpl
lcall
rcr
mov
push
or
ret
fmulp
inc
aaa
pushf
jo
mov
fwait
xlat
jle
int
lods
xchg
xchg
std
jp
fcmovb
aam
fidivrs
lahf
mov
pop
mov
xchg
int
pop
ja
jmp
mov
xor
aam
loope
jns
call
jbe
sarb
lea
inc
shll
mov
icebp
adc
in
dec
mov
ret
ret
call
test
dec
mov
add
sbb
pushf
rcrb
out
sbb
scas
mov
sub
psubd
ja
mov
rol
movsb
xorl
push
insl
test
test
subl
push
loopne
dec
test
dec
sub
enter
cwtl
js
loop
ret
mov
jp
adcb
jecxz
adc
mov
cld
dec
add
jecxz
or
mov
xchg
sarb
cmc
leave
jg
cltd
cs
dec
outsb
fmul
jecxz
fsubs
loope
mov
lods
push
aaa
mov
icebp
xchg
push
push
scas
dec
xor
jbe
movsl
mov
cld
jge
movsl
and
into
int
loope
stos
jb
mov
mov
lret
xchg
mov
adc
dec
mov
mov
mov
jo
pop
nop
loope
daa
outsb
or
pop
adc
or
enter
insl
adc
jp
imul
mov
ret
fadd
jb
jns
aaa
pop
rorl
mov
cwtl
popf
jnp
shlb
dec
xor
push
es
in
jge
test
mov
adc
fidivrl
fists
in
xchg
stc
into
pop
movzwl
js
fsubrs
cmp
hlt
into
mov
pushf
ficomps
fmuls
fisttpll
mov
flds
repz
jle
mov
out
fbld
mov
push
fdivs
fisubrs
loope
lret
mov
xchg
add
inc
xchg
aad
ret
inc
mov
mov
les
pop
jp
out
inc
loope
filds
adc
stos
cmp
ret
sbb
xor
mov
dec
inc
mov
add
xor
ljmp
pop
lret
jmp
shll
xor
and
rcr
leave
lds
movb
ret
mov
iret
out
arpl
rcr
and
aad
sbb
js
pop
enter
jp
jecxz
inc
xchg
mov
mov
jl
add
dec
dec
rolb
int3
mov
data16
pop
push
xor
xorb
jge
cmp
mov
leave
jae
push
arpl
shll
iret
jle
fucom
cmp
push
dec
aam
mov
mov
inc
loope
and
dec
enter
cmp
mov
inc
cmpsb
stos
scas
mov
rcr
loopne
in
arpl
cltd
mov
sarl
jbe
jl
jle
push
not
jno
jo
sbb
mov
loop
xor
scas
jp
ret
xor
into
mov
inc
test
into
cwtl
ja
jecxz
fcmovu
xor
imul
outsb
mov
mov
or
jp
das
int3
inc
mov
and
rclb
jg
or
push
pop
ret
inc
mov
push
mov
insl
fcoml
cmpl
xlat
jge
fadd
loop
data16
cmp
pop
and
rcl
fdivl
lret
fsubl
mov
mov
loopne
jo
xlat
ret
fiaddl
lret
or
mov
pop
mov
aad
xchg
enter
fisubrl
lods
sbb
ss
mov
push
rcll
push
rorb
loope
cmpsb
pop
mov
iret
or
mov
mov
mov
fsubrl
enter
mov
leave
ljmp
pop
fsts
and
mov
insl
mov
ds
gs
cmp
jbe
loope
xchg
rol
mov
adc
or
mov
pop
es
fwait
jb
ret
cli
dec
cli
or
cmp
mov
xor
rcl
movsb
movl
dec
lea
rol
jecxz
orb
sbbb
cmpsb
xor
jecxz
cmpsb
mov
jge
mov
adc
leave
xor
cwtl
pop
mov
mov
lods
mov
ja
lcall
inc
and
int3
outsb
jns
mov
sti
fadds
mov
ret
lock
and
xlat
sarl
or
in
test
or
sub
or
mov
fs
andb
jns
cli
ror
cmp
jle
sbb
ret
shll
and
inc
mov
mov
in
mov
mov
addl
es
or
sub
sub
test
pop
stc
test
leave
outsl
fdivrs
dec
xchg
lret
test
jnp
mov
leave
mov
ret
fldl
aam
nopl
lods
jl
dec
es
int3
add
inc
cmpl
int
ficoms
fildll
rorl
mov
fs
lahf
outsb
pop
push
cmpsb
rcr
sbb
test
dec
daa
jg
jge
xor
sub
mov
jnp
les
rcl
ret
fdivl
jne
shrl
aaa
rorl
ret
stos
out
mov
jmp
xchg
aam
insb
mov
sarl
rcrl
xchg
mov
xchg
dec
rclb
out
and
jp
jae
sub
loopne
add
loopne
sub
sub
shr
pusha
adc
ret
mov
jbe
jbe
jb
and
aaa
push
jge
ret
loope
fcmovb
mov
fninit
mov
or
shl
sbb
mov
xchg
scas
into
scas
std
test
jns
jp
mov
leave
clc
test
test
sbb
iret
les
xchg
sub
and
inc
inc
ficompl
mov
loope
jl
jecxz
fidivrl
fstps
sahf
mov
mov
mov
fnstcw
or
lods
xlat
fcoms
int
sarl
sbb
mov
dec
fbld
add
mov
cmc
ss
dec
into
mov
out
scas
dec
push
jecxz
inc
jns
fisubrs
int3
fcomps
enter
leave
lret
mov
int
imul
push
cvtps2pd
lret
mov
mov
jp
scas
sub
mov
sti
arpl
jmp
mov
push
mov
ja
ds
mov
mov
add
out
clc
sbb
add
ljmp
aas
add
mov
rcr
outsl
mov
js
adc
cmp
adc
jns
loop
loop
addr16
sbb
mov
int
mov
test
cwtl
mov
mov
enter
fisubrl
mov
mov
pusha
adc
xchg
mov
enter
loopne
jb
aad
sarb
leave
mov
fbld
xlat
icebp
ljmp
int
dec
fcmovu
mov
leave
pop
shrl
cli
push
adc
aam
mov
mov
rcrl
or
addl
iret
push
les
and
add
and
jbe
jle
insb
push
jne
push
jns
pop
scas
les
xor
shl
dec
xor
cmp
repz
jp
adc
mov
lret
cmp
and
into
leave
xlat
scas
jmp
or
mov
jg
mov
sub
mov
js
loop
or
mov
lods
loopne
adc
pushf
fmull
dec
insl
push
ss
push
mov
dec
mov
int
xchg
mov
cmpl
or
mov
leave
xchg
loop
addr16
cmp
xchg
ja
mov
mov
pop
js
push
or
mov
js
adc
aad
fildl
fidivrl
jle
mov
dec
push
lods
sbb
ret
ret
xchg
lods
jecxz
leave
loop
lea
fidivrs
orl
mov
loop
pop
mov
enter
inc
fistpll
scas
addr16
sub
or
xor
mov
sbb
push
adc
or
mov
pop
loope
sbb
rol
push
fs
aad
insb
mov
mov
mov
jecxz
mov
or
scas
jle
fidivrs
fisttpl
ror
rcrl
push
sbb
mov
enter
mov
fdivs
mov
mov
jnp
testl
addr16
fdivrs
jg
mov
loopne
or
jl
mov
outsb
aam
dec
aad
mov
add
dec
sahf
jnp
xor
cmp
aas
loope
xchg
fimuls
adc
pop
xchg
js
pushf
mov
imul
fadd
into
sbb
int3
cmp
inc
xchg
test
sarb
push
lahf
jl
mov
loopne
xchg
ljmp
cmp
jns
loop
rcl
or
js
jp
xchg
leave
test
xor
pop
es
je
lds
cmpl
or
cli
jecxz
es
rolb
jbe
jae
mov
sbb
dec
cld
jnp
fnsave
loope
mov
clc
sub
iret
iret
roll
repnz
xchg
mov
inc
xchg
std
jmp
inc
xlat
outsb
cmpl
pop
adcl
dec
mov
xchg
add
nop
flds
lret
mov
fisttpll
fdivrl
jbe
add
xor
loop
fists
jns
ror
mov
add
out
rcll
mov
mov
jle
cmpsl
enter
jp
es
loopne
sarl
xchg
sbb
shrl
mov
int3
mov
mov
xlat
mov
imul
or
int
aam
add
fadd
pop
leave
mov
test
jle
ja
hlt
cmp
es
jg
mov
mov
fwait
iret
mov
out
shll
fucom
or
mov
xor
add
and
test
rol
js
lods
lds
scas
shll
fsubrl
fwait
mov
jbe
mov
roll
fbld
push
into
loop
or
adc
jg
add
push
dec
mov
pop
jnp
lahf
fmuls
hlt
xchg
leave
sarl
add
jne
jmp
pop
loopne
cld
or
sbb
mov
ss
cli
add
xchg
scas
fcmovbe
ret
fadds
jg
jmp
mov
subb
mov
mov
jno
sub
push
arpl
faddl
mov
out
jg
xchg
mov
mov
cmpl
sub
fldl
fisttpl
std
dec
es
int3
popa
pop
mov
sub
cmp
pop
das
ds
jle
loop
or
shrb
dec
mov
fcmovnu
sarb
xlat
nop
es
scas
mov
xchg
mov
jne
jae
mov
mov
xchg
mov
pop
out
mov
or
mov
pop
mov
jle
fnop
adc
lret
inc
xchg
and
sti
inc
lds
xchg
mov
or
jecxz
leave
mov
sbb
sarl
movsl
mov
mov
or
xlat
mov
lods
scas
leave
or
jle
or
ds
js
sub
jle
mov
test
aad
cmp
or
scas
dec
push
push
in
mov
out
fnstcw
and
sbb
mov
test
mov
rclb
test
int3
test
sbb
inc
outsb
aad
mov
xor
lret
mov
mov
xchg
mov
xchg
jg
mov
mov
fsubrs
fcompl
fstpt
mov
push
mov
or
jp
mov
mov
lock
loop
dec
mov
pop
jnp
iret
addr16
scas
loopne
popa
jmp
xchg
pop
mov
rolb
test
fsub
xlat
jge
bound
jl
jl
sub
scas
lods
stos
imul
push
push
push
outsb
ret
jmp
jne
fisttps
call
lea
cwtl
imulb
mov
rol
aam
inc
cmp
pushf
enter
cli
xor
push
dec
int3
or
mov
not
mov
mov
fisttpl
xor
fidivrs
loop
jp
leave
iret
jmp
mov
inc
jne
mov
in
inc
jle
ret
adc
mov
decb
and
stos
ss
dec
std
scas
cmpsl
out
fmull
dec
out
jmp
scas
aam
fsts
sub
mov
mov
jp
pop
sbb
inc
in
movsb
jge
xlat
hlt
loop
pop
popa
inc
sti
fadd
jbe
jns
jne
sub
mov
fisubrl
insb
jg
addl
jp
mov
adc
mov
mov
xor
sub
pop
cmp
sub
mov
push
fidivrl
into
push
mov
loope
mov
into
enter
loopne
jnp
addb
jb
lds
jge
loopne
mov
dec
fimull
and
cmp
mov
movsl
insb
outsb
cmp
mov
xor
sbb
jge
mov
loope
cmc
roll
fisttpll
mov
and
testb
pop
xchg
adc
cmp
mov
adc
loopne
xchg
lock
ret
aad
pop
mov
mov
int3
mov
jbe
lahf
loope
sub
mov
sbb
dec
enter
adc
cli
inc
movsb
fnstcw
sub
subl
mov
mov
and
pop
roll
rorb
aam
jp
jle
fisubl
stos
xchg
mov
out
dec
pushl
pop
rcrb
mov
mov
jle
aam
jp
or
scas
imul
mov
iret
jle
je
shlb
loope
fnstenv
ret
jp
pop
xorl
mov
mov
xlat
xorl
cmpsl
iret
fdivrl
mov
mov
pop
pushf
enter
mov
test
iret
fcoms
mov
inc
scas
xor
adc
xchg
cmp
cmpl
mov
cmp
xchg
jg
lods
cmp
mov
mov
ja
es
pop
es
push
aad
pop
jecxz
out
fmull
jge
jp
int
fs
rcrb
test
sub
adc
stos
sbb
andl
js
jecxz
mov
test
lahf
loope
sbb
push
scas
mov
adc
mov
imul
pop
enter
mov
jp
lods
loopne
pop
add
leave
jmp
jp
int
int3
jns
shl
push
dec
xlat
mov
fcmovnb
sub
into
ss
jns
xor
loop
cld
loopne
xchg
xchg
cmc
mov
mov
divb
jns
into
or
jbe
scas
popa
es
rcll
push
sub
dec
bnd
rcr
or
mov
lods
enter
jecxz
fldcw
mov
jle
fadds
lcall
daa
test
fadd
aam
fsubp
mov
ret
cmp
loop
fcmove
frstor
fists
les
mov
mov
pushf
cmpsb
mov
inc
outsb
scas
js
mov
mov
ja
ret
clc
cmp
test
cmpsl
lahf
test
shrb
sub
xor
stos
sub
outsb
mov
mov
mov
je
fwait
cmpl
dec
stos
mov
bound
fwait
dec
and
sbb
add
xchg
fdivl
out
daa
pusha
iret
scas
xchg
ljmp
insl
mov
ret
ret
jge
mov
andb
inc
out
fldcw
dec
xor
dec
jg
sub
shld
mov
test
je
sarb
add
or
xlat
insb
aas
int
add
call
lods
mov
imul
pop
pop
enter
adc
fnstcw
mov
mov
fldt
adc
cli
cmp
mov
jnp
scas
lret
int3
mov
or
fadd
push
loopne
imul
and
mov
fdivrl
iret
leave
or
xchg
enter
out
sbb
jp
mov
mov
loopne
shlb
loope
pop
lods
lea
jmp
cmc
jns
sub
ds
mov
leave
adc
mov
sbb
repnz
and
jge
push
lahf
rcrb
repnz
js
inc
mov
mov
scas
mov
xorb
ret
mov
loop
subb
jle
loope
aad
ret
sbb
ja
out
push
dec
adc
loop
jp
insb
into
mov
rol
loopne
aam
loop
cwtl
mov
ja
cmp
filds
roll
sbb
pushf
xor
mov
stos
lock
ljmp
in
push
push
xor
jb
shlb
mov
mov
pop
cmpl
adc
mov
ret
xlat
fcmove
and
scas
aad
mov
mov
je
xchg
loop
adc
cmp
repnz
xor
int
imul
mov
cmovbe
pop
fcmovbe
mov
cmpl
sub
in
mov
loopne
scas
jmp
mov
ds
jns
mov
mov
scas
arpl
fisubrs
ja
mov
jge
sub
xor
js
jp
lods
pop
idivb
roll
cmp
push
into
lods
fmuls
rcr
loopne
shll
mov
scas
inc
mov
or
xchg
pop
fidivl
scas
loope
xor
loop
push
mov
or
jecxz
enter
aam
jns
mov
mov
adc
leave
icebp
loop
mov
flds
out
mov
or
int3
push
call
jp
add
mov
rorb
loop
and
mov
xchg
jg
cmpsb
mov
mov
test
mov
js
push
int3
ds
fst
mov
sbb
xchg
xor
cmp
and
adc
int
dec
mov
mov
inc
push
lods
mov
outsb
cmpsb
aad
fisttpll
faddp
xchg
jns
rcl
or
mov
lods
in
dec
test
and
cwtl
mov
mov
jecxz
ficoml
xchg
jl
leave
mov
ja
test
sbb
xor
or
mov
jle
sbb
fidivs
scas
jbe
jp
xchg
loopne
mov
leave
jl
xor
aam
sub
fcmovnu
std
cmp
cld
insl
rorl
mov
fnsave
leave
mov
adc
or
stc
scas
push
jecxz
fcom
insb
scas
int3
push
push
popa
rcl
xor
mov
sbb
mov
mov
test
adc
inc
mov
mov
je
icebp
aaa
xchg
dec
pop
pop
xchg
mov
mov
xchg
mov
xchg
loop
sarl
mov
fcmovbe
cmpl
mov
mov
ret
push
loopne
int
and
leave
jle
lret
lods
mov
pop
subl
jecxz
mov
rcrb
mov
mov
push
sbb
mov
rolb
pop
clc
sub
mov
dec
mov
cmp
lods
js
aas
fcmovnu
mov
mov
pop
int
gs
rorb
push
sarl
imul
xor
and
rcrb
sub
xchg
adc
pop
sbb
xchg
cmp
mov
dec
ret
int3
and
outsb
rcrb
mov
test
jl
stos
stos
faddl
fcom
shl
xor
ljmp
mov
scas
ret
in
xchg
loop
lds
ja
mov
push
sub
xlat
mov
cmc
daa
fucomi
push
mov
mov
in
cld
jnp
sarl
test
jp
ret
mov
sbb
cmpsb
mov
ret
mov
fisubs
imul
mov
addr16
jns
test
inc
pop
mov
movsb
mov
iret
pushf
inc
test
test
mov
mov
gs
int
jmp
dec
ret
ret
ror
movb
pusha
fwait
cmp
idivb
ja
jnp
mov
jnp
and
cli
jbe
mov
xchg
mov
lods
mov
ljmp
sti
jns
mov
mov
push
jle
adc
fcmovnbe
shrl
lret
int
leave
mov
test
ret
jge
ljmp
pop
push
cmp
add
int3
xchg
fmull
pusha
or
scas
jnp
inc
mov
imul
xlat
loopne
lret
fstpt
add
push
fnclex
inc
mov
pop
lret
mov
aaa
push
and
lods
jg
inc
ljmp
test
dec
shrl
add
ret
fcmovnu
dec
add
ds
hlt
pop
fdivrs
mov
lods
insb
enter
iret
cwtl
scas
add
mov
loopne
sub
push
test
or
mov
lea
loop
push
cmp
scas
in
mov
movl
adc
mov
rcl
jl
psrad
dec
outsb
ffreep
fwait
jge
inc
sahf
shll
cwtl
ror
mov
mov
rclb
mov
dec
xor
arpl
adc
xchg
test
pushf
iret
lahf
pop
lods
xlat
leave
push
and
loopne
lahf
mov
jnp
jecxz
addb
mov
dec
add
jb
fnstsw
mov
loopne
jp
jnp
sbbb
add
mov
mov
fldenv
dec
cmpsb
enter
mov
nop
fmul
fwait
push
mov
mov
iret
jb
fxch
push
mov
cmp
das
jge
lods
scas
rcll
enter
test
fchs
inc
pop
cwtl
test
fiadds
imul
pop
movsl
lods
jnp
daa
xchg
shr
aam
scas
xchg
iret
loopne
into
cmp
mov
ror
jp
mov
mov
iret
mov
js
jl
aad
mov
mov
sbb
xchg
jbe
mov
mov
fcmovnu
fimuls
inc
jns
les
push
test
add
cmpsb
and
add
cli
jns
jl
xchg
lret
mov
mov
ret
cli
fwait
jbe
mov
movsb
mov
fcoml
loop
or
mov
sarb
mov
mov
fmull
loopne
xor
mov
push
pop
push
xchg
or
ljmp
scas
fisubrl
ss
aam
pop
mov
shl
dec
jo
pop
jnp
inc
mov
js
dec
inc
idivb
call
mov
test
imul
inc
xor
jge
mov
ljmp
sbbb
fisttpll
je
rcr
push
sarb
xchg
int
fmul
sub
sbb
mov
dec
loopne
call
mov
test
mov
inc
out
leave
cmc
sahf
push
dec
mov
push
add
and
insl
enter
adc
enter
jae
sbbb
and
mov
call
dec
mov
jmp
mov
cmc
xor
aad
mov
out
jge
pusha
dec
int
mov
mov
pushf
ret
mov
or
jp
mov
sarb
je
sub
loope
int
call
and
inc
cwtl
lods
inc
sub
mov
lahf
jmp
loop
aad
scas
outsb
jmp
mov
pop
mov
fcmovbe
pop
sar
sub
mov
pop
pop
mov
shlb
loopne
in
mov
jge
shrl
fs
repz
fadd
mov
sbb
and
loop
lods
adc
aam
sbbb
int
pushf
repnz
mov
xchg
pop
ret
push
repnz
enter
jge
mov
or
mov
lret
mov
lcall
xor
test
mov
lret
in
fmul
and
aam
ficoms
push
into
lret
lods
loope
adc
push
inc
add
mov
scas
and
cli
mov
sub
mov
jp
lods
xor
sti
cmp
push
sub
loopne
mov
rorl
or
loope
mov
js
jl
mov
loopne
insl
push
shll
es
enter
sub
mov
mov
dec
aam
adc
dec
xchg
scas
jl
pop
lods
cmpl
sbb
lahf
adc
xchg
ja
lret
loop
jbe
pop
jbe
xchg
fld
mov
or
in
pop
adc
je
orl
cwtl
cli
cwtl
mov
scas
fstpt
and
add
loop
cmpsl
push
xchg
mov
rorl
enter
mov
test
dec
mov
xchg
js
rolb
sarl
sub
jecxz
lods
fwait
mov
pop
rcl
mov
mov
ja
rclb
jge
xchg
insl
mov
push
adc
es
lahf
sarl
pop
rclb
sarb
jecxz
out
mov
loope
and
dec
xor
ja
dec
movsb
mov
decl
in
bound
ret
fsubs
movd
enter
inc
mov
cmp
aam
fnstcw
jns
inc
dec
rorl
jp
aam
enter
mov
fldcw
fcoms
ret
mov
mov
bound
cmp
insl
subl
out
sub
mov
lods
scas
mov
orl
mov
dec
popf
iret
jge
stos
mov
insl
mov
push
movsb
jp
into
fwait
scas
rclb
loope
jle
adc
cmpl
outsb
fisttps
push
cmpb
shrb
mov
iret
sub
jg
loope
push
faddp
ds
mov
test
ret
mov
fwait
push
repz
int3
aaa
adc
jg
xor
mov
subl
push
stc
outsl
ss
fcmovbe
leave
mov
pop
jp
mov
mov
adc
loopne
arpl
dec
push
ja
orb
xlat
inc
ret
shll
stos
jmp
das
mov
rclb
mov
fsubp
cli
sub
and
sbb
jge
xchg
mov
inc
mov
jmp
movsb
rcr
test
sbb
xor
add
cmp
aaa
sarl
mov
mov
leave
push
mov
pusha
lds
xor
setl
aad
mov
pop
fcmove
add
fimuls
lea
push
xchg
mov
sub
insl
mov
jge
mov
mov
adc
loop
fs
fstl
fsubrs
sahf
cwtl
iret
cmpsl
xchg
xchg
dec
jecxz
pop
adc
stos
mov
fmuls
loop
mov
xor
dec
push
cmpb
and
sbb
mov
mov
push
in
outsb
cltd
insb
mov
xchg
adc
icebp
jb
pop
mov
shrb
ret
push
jecxz
xchg
mov
jg
leave
scas
int3
leave
loop
inc
into
mov
fldl
insl
pop
sbb
add
dec
or
rcrl
mov
andl
test
lret
mov
mov
leave
filds
lret
mov
into
movsl
ret
mov
jne
das
xor
es
jbe
lods
repnz
jecxz
shlb
imul
or
fidivl
mov
jl
test
or
push
add
mov
in
fldl
lret
bound
fcmovnb
dec
gs
daa
in
insb
sub
fidivl
mov
je
mov
test
js
in
adc
scas
repnz
xchg
cmpl
cmpsl
fisubl
test
and
loop
ds
cmpl
mov
mov
out
or
scas
jecxz
fwait
mov
aad
sub
jle
cli
pop
cli
aaa
ret
jp
ja
push
lods
enter
imul
js
loopne
mov
mov
mov
int
lods
sar
stos
xchg
aam
mov
jo
sbb
sbb
fstpt
mov
or
cli
jno
xchg
xlat
lods
loop
xor
ljmp
mov
ret
add
leave
stc
rol
ror
pop
test
pop
push
out
mov
push
push
loopne
enter
inc
lods
rol
loopne
aam
mov
mov
mov
mov
es
mov
es
push
enter
es
sti
enter
mov
rcrl
jmp
andb
test
iret
fnstsw
pushf
loop
mov
pop
xchg
mov
ret
sbb
test
sbb
pmulhuw
mov
lods
imul
add
mov
mov
jl
xlat
dec
jbe
fistpl
fimull
jns
ret
inc
pop
mov
ficompl
inc
cmpsb
enter
sub
loop
fdivs
push
cmp
test
int
jnp
jbe
loope
pushf
ret
movsl
xlat
fcmovnbe
lods
xchg
mov
iret
mov
aaa
push
dec
mov
cmp
leave
jbe
scas
and
pop
push
jle
loop
out
mov
pusha
pop
pop
xchg
mov
pop
sahf
jg
sub
fildl
leave
cmpsl
mov
js
leave
or
rol
fcmovnb
test
inc
ret
mov
scas
gs
rorb
pop
loop
xor
shrl
int3
add
cmp
out
ljmp
pushf
sbb
ja
pop
inc
xchg
and
js
or
mov
jle
xchg
repz
test
dec
insl
std
push
adc
sub
out
xchg
xchg
ret
push
cmp
dec
rol
dec
jecxz
jns
xor
fcom
cli
arpl
pushf
ret
push
into
mov
leave
aam
test
sbb
leave
fsubrs
jle
mov
adc
add
rorb
lret
enter
xlat
fistps
fwait
fdivrl
or
jns
lret
xchg
out
push
inc
repz
and
mov
es
lret
mov
sarl
fimuls
mov
pop
leave
mov
test
lahf
mov
loopne
sub
sbb
dec
pushf
jns
xor
leave
or
int
jg
mov
adc
pop
dec
shrl
push
or
dec
sbb
mov
pushf
dec
std
add
outsb
fnstcw
loopne
inc
lods
mov
push
lock
fiadds
fisubl
ja
lods
mov
mov
inc
shrb
mov
es
out
add
xor
es
test
and
out
ja
mov
iret
fcmovnu
scas
scas
sbb
rcll
jp
shrb
sarl
push
fisubrs
js
scas
hlt
add
fiaddl
fdivrs
ja
clc
xchg
sarl
icebp
jl
stc
pop
mov
fcomp
jle
les
dec
js
cmp
mov
or
jecxz
mov
lahf
xchg
test
les
jp
fnsave
sbb
cmpb
es
mov
adcb
rol
sub
jle
je
roll
jmp
inc
push
es
les
inc
xor
inc
pop
pop
es
iret
inc
xor
es
adc
fsubs
cmp
fwait
inc
in
es
cmp
adc
mov
scas
push
stos
rcr
es
into
aad
lahf
iret
stc
or
mov
xlat
fadd
push
iret
leave
xlat
rcl
cwtl
mov
sub
jnp
iret
pop
cmp
add
xor
mov
je
popa
data16
xchg
mov
jo
or
mov
cmp
adc
shll
jns
pop
aad
clc
mov
jle
or
sti
mov
pop
mov
add
leave
mov
xchg
xchg
sub
bound
xlat
fucomip
lcall
aas
lret
mov
fwait
mov
rcr
push
js
sbb
lods
or
cmp
sub
loop
xchg
ja
pop
mov
jmp
loop
mov
mov
imul
rclb
jecxz
add
xchg
sbb
xorl
fmul
test
add
js
fld
fnstenv
jns
ret
fcmovne
dec
imul
xchg
sbb
loope
mov
fcomp
ror
pusha
scas
mov
iret
lock
faddl
mov
jle
ret
sub
mov
cwtl
test
mov
sahf
movsl
pop
outsb
rcll
jns
rorl
or
or
rorb
mov
mov
aad
mov
xchg
scas
mov
fadd
mov
iret
inc
mov
pushf
rolb
pop
rcll
mov
loop
insl
mov
add
xlat
aad
mov
xorb
inc
out
jle
dec
rorb
push
repnz
mov
into
test
adc
fs
xchg
inc
jg
imul
and
test
lret
jp
rcr
inc
repnz
mov
test
imul
mov
jecxz
aam
pop
adc
push
insl
jmp
es
jb
xor
outsl
mov
leave
or
mov
out
es
push
int
lods
cmpl
or
shl
jl
push
out
push
adc
dec
jmp
rorb
push
mov
sbbl
cwtl
cmpsb
push
lods
dec
insl
xlat
int
and
test
aad
ror
and
sbb
jp
mov
and
sarl
jo
dec
rol
push
pop
rep
es
pop
cwtl
test
xor
mov
test
xchg
aam
add
movsl
pop
adcl
xchg
and
loopne
mov
scas
jge
pop
add
roll
mov
rol
ja
lods
insb
into
jle
xchg
mov
mov
dec
ret
scas
mov
ret
adc
shl
jecxz
mov
cwtl
sbb
movsl
ror
hlt
push
jae
cltd
or
mov
test
lret
fiadds
out
aaa
cmp
loop
dec
xchg
les
cmp
iret
out
add
xor
or
shrb
rorb
stos
and
iret
and
sbb
and
scas
adc
sub
iret
dec
pop
or
xchg
sbb
ljmp
jle
inc
xchg
out
int3
dec
xchg
leave
aad
enter
xlat
not
shlb
mov
jne
test
cli
or
fidivrl
jne
loop
inc
mov
xchg
cwtl
bound
xchg
mov
ja
in
rcrl
mov
loopne
idivb
lods
add
shl
test
fsubrp
sbb
mov
sbb
enter
mov
js
ret
unpckhps
fcoml
add
lods
jle
or
adc
test
jl
or
push
and
lods
loop
ret
jns
push
jns
ret
int3
mov
insb
jp
sbb
dec
in
loop
loope
or
mov
jecxz
mov
mov
or
loopne
data16
je
fnsave
mov
pop
jge
adc
lea
push
mov
mov
push
je
jns
movsb
int
jg
push
xchg
fst
pop
dec
xchg
mov
mov
mov
fsubr
adc
mov
arpl
js
cli
jne
jecxz
adc
or
dec
adc
add
mov
lret
jnp
mov
xor
sbb
inc
mov
js
ret
outsb
loopne
mov
sbb
mov
dec
jmp
jns
xchg
shll
sbb
rorb
mov
lods
jg
pop
loop
sbb
mov
cmpsl
mov
mov
cmpl
fsubrl
cmp
add
xchg
test
xor
xorb
or
fmul
test
xchg
sub
cmp
sahf
fimuls
xorb
arpl
loope
ljmp
into
push
sub
inc
imul
roll
cwtl
mov
das
roll
mov
sbb
ret
aam
aas
lods
fsub
shlb
mov
jecxz
fisubrs
add
out
fidivrl
jle
retw
int
fnstsw
loop
out
loop
cmp
ds
and
mov
mov
adc
stos
pushf
fsubp
cmpsl
mov
pop
or
push
xchg
inc
stos
das
jp
cwtl
aad
jle
push
fiaddl
movsl
ja
loopne
mov
jg
mov
xchg
fidivs
mov
xor
pushf
fildll
imul
aad
mov
fcmove
jge
pop
ljmp
mov
cmpl
into
enter
addl
inc
shlb
add
or
aad
subl
imul
jns
mov
imul
mov
test
fstp
cli
pop
mov
jge
mov
adc
mov
sbb
mov
pop
fiadds
pop
outsb
aam
mov
jp
xorl
cmp
and
outsl
jae
mov
xlat
xchg
sarb
mov
js
xor
les
jle
xchg
lods
loopne
je
mov
mov
loopne
sub
jg
movsl
sarb
sbb
mov
or
sahf
cmc
and
outsb
shlb
insb
pusha
fisubrl
test
int3
pop
das
out
cmp
jnp
or
iret
subb
mov
dec
adc
out
mov
out
aam
jb
aad
jp
jnp
and
enter
mov
jecxz
inc
sbb
scas
fdivs
in
scas
int
fsubp
shlb
fldl
xchg
mov
dec
test
mov
mov
loop
pop
test
ret
jl
sub
mov
pop
add
cmp
bound
enter
mov
inc
push
mov
xor
fldl2t
sub
es
mov
mov
leave
mov
inc
leave
addr16
stos
mov
loop
or
in
push
icebp
or
inc
shll
dec
scas
jle
loopne
jg
mov
mov
mov
pop
and
adc
test
or
int3
js
popa
mov
adc
sub
rolb
out
cmp
stos
jo
sbb
loopne
mov
or
scas
mov
cwtl
mov
mov
fcompl
sti
cwtl
orb
mov
shl
aad
aam
lret
jns
mov
ror
or
enter
leave
shl
shrl
ret
test
gs
jmp
jb
cmp
dec
iret
push
sub
mov
cmpsb
inc
push
int
jg
je
cmpsb
jg
mov
or
adc
lods
adc
push
fdivs
jge
mov
mov
fdivl
dec
mov
test
and
fiadds
pushf
fsubs
int
leave
fistpll
rcl
fisubrl
and
dec
add
jle
push
lahf
mov
movsb
bswap
mov
push
insb
stc
ret
mov
or
cmpsb
rorb
lret
jge
add
je
jnp
insb
jl
ret
xchg
sahf
scas
pop
imul
int3
mov
shll
sbb
movsb
jb
or
ret
mov
jbe
mov
cwtl
orl
jecxz
jne
push
xchg
mov
sarl
pop
jecxz
test
js
lret
xor
es
or
mov
or
sub
jne
pop
mov
dec
fistpll
dec
insl
test
jp
mov
fisubrl
pop
loopne
and
ret
test
push
xchg
sub
inc
push
mov
push
xor
and
adc
push
mov
mov
pop
inc
pop
mov
fnsave
mov
mov
or
ror
add
fwait
les
loope
dec
mov
mov
xchg
mov
push
pushf
aad
mov
inc
test
or
ret
fcom
loopne
mov
adc
inc
leave
cld
or
test
pop
xchg
lods
shlb
xchg
mov
xlat
loopne
push
stos
leave
sub
push
dec
mov
inc
ret
enter
pushf
rorl
sbb
shrl
or
mov
add
xorb
mov
xchg
enter
mov
js
mov
leave
dec
mov
shl
inc
loop
jbe
mov
mov
xchg
leave
mov
filds
jmp
cmovs
stos
push
ret
aad
mov
mov
arpl
rcr
xchg
lds
jle
movsb
jle
mov
shrb
jl
sarb
mov
dec
sbb
jge
shrb
mov
push
jle
leave
in
fcmovnbe
dec
cmpsl
push
push
adc
in
and
jnp
jp
roll
xchg
mov
ds
iret
sbb
shll
rorb
shrb
mov
mov
mov
mov
iret
mov
outsl
iret
cltd
sbb
test
or
aad
jg
imul
xor
pop
mov
ljmp
and
ret
adc
rcrl
sbb
aam
dec
loopne
dec
dec
test
inc
fs
scas
fisubs
mov
and
jecxz
scas
stos
dec
cmpb
or
push
jns
lea
xchg
xor
xchg
jmp
jg
mov
xlat
int
leave
mov
xchg
mov
rolb
xor
ss
shl
inc
cmc
jbe
sbb
sbb
divl
test
xor
dec
or
test
dec
mov
imull
cmpsl
out
mov
rcl
lods
jl
pop
xchg
jns
mov
sbb
xlat
mov
sbb
mov
mov
xchg
jecxz
mov
xchg
cmpsb
aam
cmpsl
les
ret
cmpl
mov
mov
pop
aad
dec
insb
enter
loope
leave
fadd
leave
sbb
in
imul
sahf
push
iret
es
mov
lods
fsubrp
test
faddl
fldcw
jecxz
scas
fcomp
pop
insb
and
lea
xchg
cmp
mov
xlat
ret
lea
xchg
xor
mov
and
mov
inc
rcrb
jp
xor
add
call
cmp
fldcw
mov
neg
push
mov
mov
fistpll
mov
mov
insb
loop
mov
pop
fwait
lock
mov
into
push
int3
inc
xchg
enter
stc
jle
rcrb
test
mov
fs
xlat
gs
shrb
and
lods
mov
cmp
nop
sub
push
movsl
jl
xchg
xlat
shl
adc
or
or
fstps
pop
pop
dec
or
fnsetpm(287
xchg
lret
mov
pop
pmaxub
stos
popa
mov
mov
or
xchg
int
rcl
inc
mov
shll
loopne
mov
jne
add
xchg
and
mov
jecxz
xchg
and
jns
jp
mov
jge
xlat
rcll
pop
adc
rcl
mov
sub
pop
loop
loope
mov
lods
mov
fisubrs
mov
mov
mov
ret
or
or
jle
je
sub
push
inc
adc
ret
adc
inc
add
add
rcll
add
xchg
pop
xchg
jno
adc
into
aad
pop
rolb
sbbl
test
mov
jecxz
fidivrs
xlat
pop
mov
or
testl
iret
mov
std
or
or
pusha
mov
mov
js
ss
dec
enter
das
mov
mov
adc
jb
loopne
inc
mov
enter
std
dec
and
sbb
and
int
lcall
jnp
fwait
pop
divl
mov
mov
jae
cmc
jbe
and
mov
and
push
push
jl,pn
aam
xor
jmp
mov
call
jecxz
fcoml
fistpll
or
cmp
pusha
jns
mov
test
mov
rcrb
xlat
add
jbe
sub
pop
fdivs
mov
jle
adc
ret
sub
push
xchg
mov
jae
shrl
sub
loop
les
cmpsb
enter
and
out
jge
movsl
mov
into
add
fld
or
mov
jge
xor
mov
dec
pop
sahf
enter
mov
into
dec
jmp
xchg
aam
es
je
xor
sbb
out
xchg
loop
or
cmp
rcl
fcmove
adc
cld
sbbl
int3
sarb
cmp
mov
jp
mov
aad
stos
scas
adc
mov
aad
add
mov
fimull
fmul
test
shll
test
mov
ffreep
dec
repz
jg
dec
pop
ficompl
sub
jnp
mov
test
pop
pop
pop
mov
dec
subl
rol
lods
aad
jns
fsts
scas
mov
ss
repz
mov
into
and
pusha
pushf
test
xchg
and
inc
mov
ja
cmp
in
adc
imul
dec
mov
sub
adc
insb
jb
aad
mov
fdivrp
cmc
out
and
inc
cmp
jle
stos
aad
iret
mov
ret
add
mov
std
or
sarl
ficomps
ljmp
arpl
mov
push
shlb
or
inc
push
int
cmp
xchg
mov
mov
into
scas
xorb
xor
cmp
int3
test
mov
mov
test
leave
fdivs
mov
scas
mov
rcl
xorl
xor
mov
cmp
fnstcw
loope
push
movsb
aaa
loope
sbb
fs
mov
inc
mov
into
mov
xchg
loopne
loope
jns
enter
out
mov
aad
dec
or
lds
xor
filds
cwtl
mov
mov
and
mov
loop
adc
int
push
scas
imul
mov
ja
mov
das
pop
push
testl
jp
sbb
movsb
jecxz
mov
lods
loopne
and
addr16
fildll
sahf
sar
jl
sahf
stos
adc
add
imul
mov
int3
subl
mov
mov
add
mov
enter
loop,pt
stos
retw
ret
mov
lret
xchg
test
adc
adc
scas
inc
mov
adc
iret
xor
xchg
leave
loop
adc
jb
push
pusha
scas
ja
mov
sti
out
lods
pop
mov
sbb
mov
in
cli
jbe
xchg
int
enter
fdiv
fsubs
mov
ret
js
push
cmp
sub
inc
and
int
xor
push
ret
mov
cmpl
loop
push
mov
cwtl
js
enter
test
inc
push
loopne
nop
inc
jne
mov
je
ja
and
rcl
jge
loopne
xchg
xchg
sub
mov
pop
fmull
mov
jecxz
mov
mov
jbe
enter
test
push
js
and
push
ret
dec
jo
jg
or
shll
add
fmul
mov
cmp
ret
sub
inc
rcr
fstl
mov
cs
out
int3
scas
mov
ja
rol
mov
shr
adc
cmp
xchg
inc
dec
sub
mov
mov
fsubrs
fnstsw
mov
mov
add
mov
mov
mov
enter
mov
mov
aam
movsb
ss
mov
mov
mov
icebp
rcl
dec
sarb
push
shlb
cmp
shrb
mov
and
mov
mov
mov
jnp
lds
and
int3
clc
es
add
insl
jp
xorb
iret
jecxz
jnp
loop
imul
pop
adc
dec
jnp
mov
mov
xchg
ret
filds
out
mov
clc
pushf
mov
add
in
aam
mov
cli
test
push
es
mov
loopne
loop
rorl
xchg
push
cvttps2pi
jge
imul
jns
mov
cli
nop
jg
ret
jb
cwtl
fdivs
mov
xor
movsb
mov
add
dec
sub
into
xor
fidivs
push
cmp
loope
ss
movsb
mov
ljmp
scas
shrl
sub
mov
jg
mov
mov
dec
jno
push
inc
imul
mov
fnstsw
pop
es
dec
xchg
loope
rorl
xor
mov
in
xchg
ret
mov
jecxz
inc
sbb
insb
adc
mov
sub
fldcw
int
loope
xor
sub
lods
out
lahf
subl
fcompl
adc
je
rclb
loope
mov
fistps
imul
jae
rorl
push
sub
mov
ss
rol
mov
dec
bswap
test
or
fidivrl
jbe
mov
mov
lea
push
mov
lcall
mov
xor
fsts
pop
or
jg
push
loope
cli
inc
rolb
jp
ja
fcmove
xchg
test
jl
mov
jne
pop
inc
mov
adc
mov
fiadds
cld
testb
pop
xor
mov
imul
adc
mov
insl
loope
lods
iret
lods
test
insb
pusha
test
cmp
cmp
fsubrs
daa
fbstp
mov
lods
xchg
inc
ror
dec
loopne
or
int
fstpt
jmp
leave
sbb
fxch
and
push
leave
push
les
mov
jmp
mov
ret
int3
add
fs
fildl
xchg
lods
fstpt
or
and
fdivrl
xor
mov
pop
push
mov
push
mov
xchg
adc
mov
mov
mov
js
mov
xlat
fxch
ret
stos
fbld
add
xor
inc
push
mov
mov
cwtl
dec
aad
jg
imul
repnz
jbe
xchg
mov
push
mov
int3
mov
dec
or
mov
mov
xchg
fcom
jg
leave
scas
ss
arpl
mov
mov
js
inc
int
jbe
mov
mov
sbb
sbb
cmp
hlt
jecxz
fdiv
jnp
gs
ret
clc
fcoml
jbe
jne
dec
aam
add
xchg
negb
scas
int3
jg
xchg
shlb
lods
orl
js
ror
fisubrs
cmp
mov
cmpsl
outsb
mov
insb
inc
ficoms
jne
test
dec
iret
and
mov
lods
fidivl
dec
push
pushf
fdivrl
xor
call
iret
rol
ret
int3
sbb
and
in
fsubl
mov
aas
add
inc
xor
dec
mov
fcmovb
jg
sbb
scas
test
jecxz
fnstcw
fsub
sahf
rcrb
xlat
mov
lds
and
cmpb
mov
xor
mov
icebp
sbb
cmp
fnsave
cmp
mov
jno
xor
faddp
cmpl
mov
fwait
shl
lods
pop
dec
jbe
lea
xor
leave
and
rorb
sbb
pop
dec
sbb
jo
ja
add
gs
jo
in
add
aad
ds
cmpsl
in
ss
xor
insb
fdivrs
insb
dec
jne
cld
cs
mov
adc
nop
fcomp
lods
fnstcw
movsl
sbbl
sub
xor
jg
rol
jecxz
leave
jle
hlt
sahf
leave
jecxz
es
enter
hlt
outsb
mov
xchg
push
mov
push
xchg
and
mov
aad
or
mov
inc
jp
iret
inc
outsb
ror
cwtl
loopne
pop
and
mov
pop
leave
and
sub
shrb
mov
shrl
xchg
fdivrs
xchg
insb
jl
xor
das
data16
fnstcw
loop
jnp
cmc
mov
ja
loop
jno
fcoml
ret
es
lods
pusha
out
jns
dec
imul
jle
mov
js
test
arpl
roll
mov
aaa
ficoml
mov
int
mov
ret
fisubl
mov
rclb
ret
loope
fs
jge
jg
rolb
repz
mov
enter
jp
and
movsb
sahf
add
mov
negb
or
xchg
mov
mov
mov
or
inc
jge
jnp
loop
in
mov
mov
js
xor
leave
mov
test
xchg
pusha
pop
sub
and
xchg
stos
mov
fsubrl
lret
loopne
fninit
xchg
cmpb
sbb
shll
fcoms
xchg
jp
push
sti
roll
mov
out
outsb
sarb
jmp
push
add
adc
pushf
mov
xchg
xor
loop
jae
cwtl
fistpll
lret
mov
loop
clc
loopne
jecxz
out
mov
sarl
into
outsb
enter
js
fdivr
orl
adc
loopne
in
adc
jl
xchg
bound
incb
xchg
push
pop
neg
sbb
nop
fidivrl
inc
repz
aam
xor
mov
in
xor
and
test
icebp
imul
dec
leave
mov
push
je
scas
loope
jmp
or
sbb
add
push
mov
iret
sarl
and
fnstenv
int3
fcompl
xor
lods
mov
mov
pop
outsb
jmp
mov
or
into
fmull
jbe
mov
jl
leave
jle
cs
sub
sarl
fcmovnu
out
xchg
lods
aad
fs
jb
add
xlat
xlat
push
adc
mov
negb
mov
and
xchg
sarb
mov
jb
nop
mov
mov
ret
dec
and
movsb
mov
in
lret
idivb
cwtl
aad
pushf
mov
mulb
aam
xchg
das
mov
jp
flds
push
xchg
js
inc
mov
mov
jle
add
mov
push
stos
outsb
mov
gs
fdivs
mov
pop
mov
mov
js
movsb
jecxz
loope
jbe
les
hlt
repnz
jecxz
repnz
rorl
add
enter
dec
call
dec
mov
das
clc
jns
sub
out
add
mov
out
jbe
out
cwtl
pop
push
or
add
jle
inc
mov
inc
mov
dec
ja
fistpl
xor
aam
clc
sbb
subl
std
pop
dec
gs
push
mov
mov
or
cmp
sbb
enter
shrb
xchg
into
fdivrl
pop
insb
dec
xchg
mov
xchg
mov
sub
xor
dec
xlat
mov
loop
fnclex
or
lahf
ror
fbstp
pop
mov
test
or
shll
dec
push
btrl
sarl
lods
loopne
mov
dec
pop
add
sar
fmull
xlat
push
xchg
loopne
and
jbe
shr
in
mov
imul
sub
mov
lahf
repz
dec
ds
roll
cli
or
mov
and
bound
adc
divl
mov
sbb
popa
ljmp
mov
ljmp
mov
int
shll
in
dec
outsl
pop
scas
fnstcw
fistpll
mov
jns
fdivrs
sub
shlb
fnstsw
test
inc
je
sbb
imul
movsb
mov
mov
imul
cmp
mov
mov
mov
pop
mov
mov
push
jae
mov
outsb
test
xlat
ja,pn
fidivs
scas
cwtl
mov
mov
rcr
add
xchg
fbstp
jecxz
call
xchg
or
mov
inc
fisttpll
inc
sub
cmp
insl
mov
lods
fcomps
mov
jl
mov
lods
scas
js
mov
or
call
mov
jns
jle
xlat
mov
or
shr
adc
fcmovnb
lea
lods
test
int
jns
sahf
in
movsb
mov
dec
push
int3
insb
rclb
hlt
loop
jae
jns
sarb
cmpsb
mov
into
mov
mov
ss
mov
dec
mov
sbb
addr16
es
or
rcl
lcall
mov
fnstcw
mov
mov
loop
lds
sub
enter
cmpb
fcoms
sub
xlat
int3
mov
mov
add
mov
jns
out
push
es
sahf
dec
iret
rcrb
cmpsl
shrb
leave
sarb
vpcmpgtb
xchg
fwait
mov
xchg
loopne
in
jecxz
mov
jg
stos
test
gs
rorb
ja
shl
in
sbb
rcl
mov
notl
pop
xchg
sub
fstl
out
test
jl
jp
cmpsb
adc
sti
mov
pop
enter
out
dec
out
sub
push
fcoms
fwait
enter
lret
scas
shlb
js
shrl
adc
mov
mov
xchg
jp
xchg
fsubrl
pop
mov
jp
fistps
cmpb
jp
or
mov
outsb
rcr
jns
int3
mov
fistps
mov
out
aaa
pop
lea
out
cli
sub
mov
rcl
ficompl
mov
lgs
or
rolb
stos
pop
enter
and
sbb
add
orb
jge
mov
mov
andl
or
loop
xchg
mov
fmull
fsub
js
lock
test
fistl
pop
inc
out
mov
imul
loopne
add
ficoms
dec
test
dec
or
fistpll
lods
fstpt
ds
mov
ror
jg
aad
out
test
mov
or
shl
mov
jne
scas
push
sbb
xor
fmull
ret
xor
add
sub
outsb
ret
mov
sub
popa
scas
shll
into
add
iret
jnp
mov
icebp
fdivl
aam
xchg
mov
xchg
ja
xchg
jmp
or
mov
leave
rcl
aad
cmpsb
stos
sbb
ret
js
jecxz
sbb
mov
sti
xchg
sbb
mov
add
loop
outsb
mov
jge
shll
pop
inc
lea
mov
jecxz
mov
insl
mov
out
mov
adc
mov
jns
lds
pop
lods
dec
jo
mov
lahf
mov
fadds
mov
pop
mov
xor
jns
ret
out
test
cmp
das
sbb
test
lret
mov
data16
xchg
adc
mov
mov
mov
call
push
jae
cmp
shll
mov
jp
jb
push
loopne
push
lods
cmp
icebp
idivl
jnp
loop
jb
add
mov
scas
jp
jle
rcrb
and
or
xlat
out
mulb
push
mov
fcmovb
mov
cmp
xor
int3
ret
movsl
lods
insb
mov
sarl
mov
int3
mov
inc
cmpsb
xor
jl
mov
jge
mov
enter
mov
jecxz
loope
push
arpl
sub
lret
cli
pop
loop
out
cwtl
shl
and
lds
ds
adc
clc
mov
ss
push
int
ret
es
sahf
or
test
pop
dec
mov
and
or
movsb
sbb
sti
pushf
jns
pop
mov
sbb
int3
pop
pop
lods
fstp
mov
orb
test
jns
sbb
rorl
push
mov
or
jp
cmpl
scas
scas
int3
outsb
divb
dec
sbb
mov
mov
cwtl
jns
fstpl
mov
ret
imul
aam
es
lea
ret
roll
rorl
jp
xor
inc
insl
out
insb
jmp
mov
fnstcw
inc
popl
loope
mov
mov
jb
lahf
mov
adc
enter
sbb
jge
iret
cli
in
and
push
cwtl
loop
cs
orb
dec
in
fidivl
stos
fdivrs
lahf
jns
fdivs
repnz
jmp
test
mov
cmp
mov
mov
test
fstl
mov
mov
vcmpsd
jle
loop
and
mov
or
scas
dec
loop
fsts
ret
cs
fidivrl
test
jbe
scas
or
rcr
scas
dec
js
scas
jge
es
aam
dec
cltd
sbb
sbb
sarl
inc
xor
call
dec
mov
pop
call
mov
mov
xor
ja
jnp
cs
jl
mov
mov
aad
push
scas
test
lret
xchg
ljmp
fcmove
cmp
pminsw
sbb
mov
mov
stc
movsl
mov
es
imul
and
es
xchg
rclb
int3
dec
arpl
test
cmpl
and
cs
adc
cmpsb
or
fisubrl
loop
dec
mov
cmpb
lea
mov
sbb
aad
ljmp
mov
adc
push
dec
cwtl
or
mov
inc
scas
xor
stos
mov
scas
mov
testb
xlat
in
mov
xchg
rcr
xchg
mov
fcmovu
test
int3
mov
movsb
jp
jnp
cmpsl
jbe
xchg
lods
xlat
and
js
sbb
neg
insb
xchg
inc
into
lret
int3
pushf
iret
loop
movsl
adc
mov
ret
dec
push
mov
ficoml
sub
rclb
xlat
scas
jle
aam
mov
pusha
das
mov
mov
jnp
and
xor
dec
mov
rcrb
int3
or
mov
loope
xor
xchg
mov
ret
dec
dec
sub
add
push
pushf
jbe
xchg
mov
dec
out
lahf
loope
cli
rcr
xchg
lods
jns
adc
jecxz
xchg
jb
scas
inc
or
lret
pop
je
add
mov
js
rcrl
jecxz
std
pushf
push
inc
repz
xor
dec
aam
incl
mov
aam
loope
aam
and
stc
mov
inc
ret
pop
mov
in
aad
js
inc
push
add
sub
in
dec
fnstsw
mov
fwait
ljmpw
mov
jle
rorb
aam
ljmp
fsubrs
jne,pt
xchg
jbe
movsb
rorb
mov
popa
aaa
xchg
sbb
sub
fwait
imul
andb
mov
rol
fs
or
ret
mov
mov
mov
jg
mov
shlb
test
rcr
mov
ficoml
mov
loope
push
inc
xchg
cld
ret
push
mov
jecxz
pushf
aam
jecxz
jg
in
outsl
outsb
xchg
lahf
jl
lea
adc
sub
fistpll
leave
loope
push
mov
shll
pop
mov
mov
lods
sbb
cli
fisubrl
or
jge
or
cli
mov
add
filds
and
movsb
cmp
mov
inc
push
fcom
push
lods
jns
shrb
xorl
mov
mov
repnz
lret
mov
sbb
lea
jmp
xchg
mov
ret
and
aam
dec
or
pop
mov
sarb
enter
leave
pop
ret
stos
lcall
xor
es
leave
dec
hlt
mov
mov
rcr
mov
mov
fiadds
inc
loop
outsb
mov
xchg
loope
movsb
shll
push
push
adc
cltd
movsb
adcb
dec
scas
lods
loop
shll
fstpl
mov
aad
dec
mov
sbb
pop
or
cmp
lods
lcall
iret
mov
jnp
xor
fstl
xor
push
sarl
inc
ficoms
out
fdivrs
into
shl
sbb
mov
js
xlat
xchg
dec
test
or
fsubp
cmp
test
js
mov
sub
aam
shll
leave
test
mov
mov
in
jle
push
loop
int3
enter
xor
ret
movsl
pop
pop
loope
add
xchg
mov
cmp
das
mov
roll
clc
mov
mov
mov
jecxz
xchg
sub
add
rcrl
fdivrl
outsb
lret
shrb
and
nop
scas
test
fcomps
inc
lods
xlat
int3
xchg
jmp
leave
jle,pn
or
aad
leave
inc
cmpsl
sahf
into
lods
pop
shlb
lahf
jnp
and
add
mov
jnp
and
push
add
pop
lods
rcrl
push
pushf
jns
push
mov
into
jl
enter
dec
shrb
lods
or
cli
imul
movsl
pop
lods
mov
mov
outsl
jnp
inc
mov
adc
inc
xchg
jne
insb
pop
jae
sbb
jns
push
leave
call
es
test
add
out
mov
sbbb
ror
xlat
loopne
cmp
xchg
mov
gs
push
dec
jne
sbbl
add
ljmp
test
out
fwait
cmpl
loopne
ficompl
lds
sarb
das
mov
inc
int
mov
or
mov
rcl
ret
fcom
pop
mov
mov
jns
xor
xchg
mov
ss
jb
mov
adc
fld
xchg
sbb
pop
sbb
jne
add
pop
out
aaa
outsb
aam
or
fnstsw
dec
or
rcl
stos
stos
xchg
rcr
add
test
lea
cmp
test
shlb
fldenv
pop
jne
loope
pop
cmp
rcr
jecxz
out
loope
fnstcw
pop
mov
or
lods
mov
outsl
mov
insl
out
mov
or
int3
jle
inc
aad
mov
mov
mov
mov
xlat
push
ss
data16
cmp
jns
sahf
xor
int
or
pop
sahf
jg
test
mov
and
insb
ret
movsl
scas
pushf
jecxz
out
scas
jo
lahf
mov
mov
pop
es
xchg
dec
sti
iret
subl
aam
xchg
addl
fldenv
shlb
into
cmp
sub
js
int3
mov
xor
notl
mov
sarb
leave
or
scas
mov
aaa
push
push
mov
insl
je
mov
mov
ss
or
mov
test
loope
scas
inc
into
mov
mov
jae
mov
inc
ljmp
sbb
cwtl
test
into
sarb
clc
push
lock
mov
mov
es
push
outsb
test
jmp
lea
cmpl
or
ficoml
mov
aad
fsts
jne
lcall
test
test
stos
xchg
mov
jl
mov
vxorps
push
iret
jnp
test
mov
ret
sbb
jb
inc
xor
fnstsw
fidivl
dec
leave
ljmp
into
dec
and
xchg
into
mov
lods
xchg
pop
mov
je
pushf
stos
cmp
ret
int
push
in
push
mov
shll
pushf
or
stos
cs
ret
roll
out
add
scas
push
dec
dec
iret
mov
or
xchg
and
lods
or
mov
mov
std
xor
pop
lahf
outsb
inc
add
loop
pushf
out
pushf
iret
aaa
movsb
inc
fsubp
out
iret
mov
mov
adc
mov
scas
loopw
sbb
stos
scas
mov
jnp
outsl
mov
mov
jle
mov
jg
test
xor
jge
int3
cmp
mov
pop
sahf
pop
jo
scas
jnp
fdivrl
rclb
das
mov
hlt
pop
xchg
lods
fdivl
cld
adc
pop
mov
rcll
xor
test
fidivrl
and
inc
jns
inc
sub
mov
sub
shrl
cmpl
jecxz
pop
pop
ds
insb
repz
push
pop
add
aam
insb
pusha
es
cmpsb
jb
iret
mov
pop
xchg
pop
int
pop
ret
mov
fstpt
xchg
and
cmpsb
enter
xlat
aad
adc
loop
test
mov
jg
lea
cmpb
sarl
mov
aaa
mov
mov
lahf
jl
xchg
add
test
jns
iret
cmp
jmp
xchg
fldcw
adc
iret
nop
push
daa
test
mov
jbe
xor
pop
loope
or
jp
mov
fdivr
xlat
out
lods
mov
jns
xchg
jge
ficoms
ror
iret
dec
pop
pushf
mov
mov
lods
rolb
loope
repz
cmp
jmp
cli
fdivrs
ja
fst
hlt
adc
jl
mov
mov
imul
pop
push
icebp
pop
xlat
add
scas
and
flds
cmc
lods
mov
shl
xlat
add
fnstenv
mov
ja
jge
mov
mov
mov
xor
arpl
sti
pop
xchg
and
frstor
icebp
inc
adc
ja
adc
sub
adc
adc
mov
rclb
lret
inc
rcl
mov
push
pop
aad
enter
jge
fsave
mov
loop
int
or
mov
ja
xorb
jle
xchg
jle
xlat
add
mov
or
shlb
pushf
fxch
or
rol
mov
fildl
fdiv
jbe
andb
mov
or
frstpm(287
xchg
and
pop
push
imul
cmpl
shll
repz
rcrb
outsl
push
out
addr16
jge
dec
aaa
sub
xlat
sbb
es
sub
enter
cmp
aas
push
push
cmp
mov
fdivrl
or
and
icebp
jbe
fnsave
shl
push
and
adc
das
loop
mov
into
xor
fcmovbe
and
cli
test
mov
xlat
mov
ja
mov
jbe
sbb
jnp
aad
addr16
cmp
mov
xchg
rcl
mov
lods
imul
ja
test
jmp
into
lods
fisttpl
jmp
inc
rcr
aam
mov
lea
roll
inc
fwait
int3
fbstp
sbb
into
dec
cmp
ja
jno
push
cmp
jb
mov
scas
subl
push
cmpb
pop
aad
mov
xlat
mov
nop
jg,pt
mov
test
fisubrl
mov
xchg
cs
sbb
and
fidivrl
das
dec
xchg
sbb
scas
rorl
xor
pop
jb
jne
lods
pop
dec
ljmp
loope
mov
stos
pop
rolb
add
out
add
mov
ds
loop
jmp
loopne
es
xor
fldcw
mov
into
jns
iret
mov
mov
add
je
test
insl
shll
mov
shlb
mov
out
adc
cli
or
fucomip
lret
xlat
shrb
fidivrl
mov
outsb
sarb
aad
fsts
stc
pop
lret
sub
leave
enter
dec
ljmp
mov
icebp
pop
mov
rcr
add
add
iret
rorl
lock
fsubrp
lahf
mov
addb
lock
sbb
iret
lcall
adc
pop
sub
iret
jecxz,pn
cmp
fnsave
jnp
cmp
sub
mov
fnstsw
outsb
into
iret
or
bound
mov
aad
mov
nop
jns
cmpsl
rcll
and
mov
or
mov
jp
enter
iret
bound
fcoms
mov
lods
mov
and
mov
mov
shlb
stos
cwtl
fstpt
out
dec
test
fildll
add
or
int3
mov
fsubrs
sbb
imul
hlt
enter
xchg
mov
leave
jge
rol
lds
fdivs
mov
lods
add
fsqrt
in
xor
mov
pop
xchg
jo
stos
push
mov
sarl
fdivs
lea
ja
adc
int
enter
adc
adc
test
mov
ret
in
add
dec
jo
jns
cmp
mov
paddusb
mov
sub
das
je
dec
aad
insb
sarl
xor
jnp
subb
imul
mov
fs
shlb
das
jb
xchg
lods
xlat
ret
mov
sub
adc
movb
sbb
adc
jp
cmp
sarb
ljmp
iret
jecxz
loope
sub
or
addb
mov
pop
jle
ret
sbb
cli
pop
pop
es
fnstcw
mov
hlt
ja
jb
je
xchg
insb
cli
xchg
js
les
adc
cmp
rclb
ret
mov
inc
mov
das
mov
aam
in
ljmp
vpcomw
lahf
or
test
rol
loop
xor
xor
mov
push
jle
add
and
sbb
push
ret
jne
pushf
jge
movsl
imul
leave
and
cwtl
subb
fsubrs
xchg
shll
nop
mov
lahf
test
lods
ret
mov
sub
ret
rcrl
jns
xchg
shll
ret
cs
dec
jb
cmp
shl
fwait
ret
fstps
test
ror
push
lahf
jge
cmp
mov
dec
outsb
jp
pop
movsl
ret
hlt
add
mov
shrb
pop
in
stc
imul
jo
and
push
jmp
outsl
mov
and
xor
scas
test
adc
jecxz
xchg
jmp
dec
out
insb
shlb
out
bound
xchg
lahf
scas
cli
nop
addl
fstp
adc
leave
sbb
test
adc
fidivrs
pop
scas
xorb
fcomp
lcall
test
sbb
push
mov
iret
mov
ja
dec
mov
push
loopne
or
repz
leave
mov
punpckhdq
jae
inc
mov
jmp
push
mov
fisubrs
mov
mov
test
mov
in
enter
mov
add
pop
lods
imul
jae
jmp
repnz
cmc
sbb
mov
ror
das
add
jnp
or
fnstenv
test
loop
lods
jb
cmp
int
mov
lods
insl
xchg
in
incl
mov
aas
fwait
adc
xlat
mov
fadd
jns
dec
mov
fs
xlat
leave
cmp
jns
shll
aam
sub
sarl
mov
jge
xlat
scas
hlt
mov
adc
clc
lcall
mov
pushf
fdivrl
adc
jl
push
loop
js
push
mov
scas
enter
loopne
sub
and
jne
fucom
rcl
mov
mov
and
lret
aam
hlt
mov
fstpt
mov
fbstp
inc
inc
fisubrs
out
fiaddl
jecxz
imul
push
addb
loop
loopne
push
aad
xor
add
push
add
push
int
aaa
test
and
scas
fwait
pop
int3
xor
mov
mov
jno
std
jg
test
or
scas
xchg
xor
hlt
xlat
adc
inc
test
fidivrs
xchg
push
iret
loopne
fldl
mov
loop
lods
mov
loope
ja
pop
jnp
pusha
ss
mov
scas
or
pop
aad
mov
sarb
daa
xchg
in
fcoms
fmuls
xor
inc
repnz
inc
test
and
cli
or
nop
aas
rorb
movsl
lret
mov
fsubl
mov
jns
mov
mov
mov
faddp
fcmovb
jmp
rcll
dec
mov
inc
fistps
sub
xor
sarb
push
shlb
add
iret
es
into
jmp
mov
mov
mov
mov
xchg
popf
loop
lret
mov
jns
ja
aam
test
mov
adc
test
fildl
loope
test
in
add
mov
mov
rorb
fstl
imul
arpl
subl
mov
ret
cmp
cli
xchg
scas
jle
enter
rcr
push
jnp
mov
mov
mov
mov
fstp
pop
lret
test
push
mov
mov
cmc
fdivrs
jp
enter
mov
sbb
dec
mov
insb
test
xchg
jl
or
fidivrl
mov
aas
inc
or
mov
dec
imul
or
into
xchg
jns
pop
ficompl
push
mov
dec
out
xor
js
dec
ret
xchg
jae
jle
push
or
push
xlat
loopne
xchg
faddp
dec
ret
xchg
fldl
and
inc
inc
xchg
inc
inc
xchg
loop
call
jns
scas
mov
into
int3
xchg
mov
fildl
mov
fdivrl
movsl
js
loop
and
aad
ds
out
outsb
or
cmpsb
jecxz
mov
inc
shr
sti
cmpsb
add
subl
xchg
sub
mov
sub
mov
fwait
and
test
lods
adc
mov
xlat
iret
sbb
mov
rol
insb
insb
rcr
dec
pushf
scas
cwtl
addr16
dec
ret
aam
arpl
dec
rolb
mov
ret
je
into
movsb
loope
jecxz
into
ret
sub
in
clc
iret
adc
fcmovu
mov
mov
iret
inc
xchg
and
test
mov
loope
call
cmpl
lods
or
pushf
mov
shll
xor
ror
mov
mov
mov
sarl
mov
mov
jle
addl
sbb
movsl
into
pushf
mov
mov
mov
cmc
dec
pop
iret
arpl
pusha
flds
cmpsl
mov
loop
xchg
shlb
inc
fisttpll
mov
fdivrs
jmp
scas
fcmovbe
mov
mov
shr
adc
mov
lea
and
jno
sub
mov
push
push
sbb
adc
sbb
rorb
push
mov
js
enter
rcrb
je
or
mov
scas
jp
jge
jnp
mov
repnz
pop
cmp
jg
mov
iret
mov
lahf
mov
rcrl
loope
mov
jmp
decb
into
sti
sbb
mov
imul
xor
shlb
mov
cwtl
mov
rcrl
jecxz
fmuls
jge
push
rcl
fistl
shlb
mov
mov
sub
xchg
ret
inc
mov
mov
loopne
xor
js
aam
sub
dec
jp
mov
ror
rorl
dec
out
in
outsb
lret
lea
mov
sub
adc
sbb
lret
cmp
mov
cs
jb
mov
lea
dec
lret
rcrb
add
xchg
mov
mov
mov
jnp
jl
loop
std
imul
mov
pop
fstl
lcall
je
mov
fcmovne
or
mov
push
push
lods
shlb
shlb
jp
test
mov
push
ret
xchg
mov
rcr
or
sarb
test
add
mov
jmp
stos
mov
addr16
fistpll
rcrb
fcomps
jp
fwait
sub
jg
xorl
mov
mov
jns
and
jl
mov
leave
jge
imul
movsb
and
movsb
mov
lahf
jbe
push
test
jp
aam
dec
cs
jp
fsub
xorl
mov
enter
add
xor
inc
lds
mov
fxch
xchg
mov
cld
cmp
insb
sahf
into
jp
mov
mov
out
sub
loopne
xchg
stos
fsubp
ja
mov
movsl
mov
jl
jg
test
mov
loopne
icebp
out
mov
ds
aam
or
lret
jp
dec
lret
jecxz
ret
mov
fidivs
mov
or
das
xor
jl
fstpt
ror
dec
subl
mov
and
stos
push
scas
cli
dec
loop
xchg
cwtl
mov
movsb
inc
in
stc
mov
js
jge
shlb
ja
rcrl
lods
mov
sarb
rcl
sub
jle
lods
cmp
inc
or
enter
jae
jle
dec
enter
sarl
sti
mov
jns
fnstcw
mov
pusha
mov
fwait
test
test
mov
mov
fidivrs
test
mov
adc
mov
not
jg
enter
test
adc
adc
jnp
fcmovu
mov
and
fmul
sbb
fidivrs
mov
add
lret
mov
scas
xor
and
xchg
push
or
scas
jp
loope
enter
mov
shll
sbb
repz
loopne
xor
hlt
mov
aad
xor
jle
mov
mov
divb
rcl
inc
mov
and
loope
into
scas
iret
mov
lods
mov
leave
in
push
retw
ret
add
and
es
pop
addr16
sub
jp
adc
insl
fdivs
xchg
iret
mov
mov
test
and
lods
mov
mov
adc
fst
inc
or
loopne
test
int
stos
scas
orl
inc
pop
push
mov
jo
mov
and
xchg
mov
jns
addb
sub
sub
scas
jns
ret
jg
lret
shrl
xor
hlt
xchg
fidivrl
das
mov
ficomps
pushf
fcmovnbe
push
mov
inc
popf
sbb
cwtl
scas
filds
loopne
mov
mov
push
insb
pop
pushf
mov
imul
cli
adc
sbb
repnz
loopne
test
xchg
push
push
lea
iret
or
xor
mov
inc
out
jbe
jb
sbb
jne
loop
sahf
insb
xlat
jns
xchg
mov
mov
shl
xor
movsl
aad
js
sub
leave
jmp
into
cmp
adc
adc
adc
lahf
std
dec
repnz
push
mov
mov
pop
scas
insl
mov
jecxz
out
test
xor
add
decb
cmc
adc
loop
mov
ja
test
nop
pop
lret
jnp
mov
add
in
mov
or
push
inc
lahf
lods
jge
imul
test
mov
scas
rorb
adc
dec
add
mov
in
iret
shl
outsb
int3
push
pop
in
mov
cs
mov
lods
mov
or
test
scas
push
and
adc
hlt
loop
js
int3
test
xor
pushf
iret
add
loopne
ret
dec
dec
mov
mov
fsubr
dec
popf
xchg
and
mov
fildll
mov
mov
jle
fdivl
lods
popa
or
mov
loop
jp
jl
into
and
fmuls
xchg
mov
pop
jg
aaa
xchg
jmp
xlat
iret
sbb
add
mov
mov
dec
ss
jp
mov
lods
dec
mov
loope
icebp
pop
mov
lock
inc
js
fstpl
inc
insb
rol
fisttpl
frstor
mov
jle
jmp
cmpsb
rcr
scas
ja
mov
mov
inc
push
arpl
imul
mov
jge
iret
pop
icebp
loop
lret
mov
xor
mov
adc
jl
lock
jmp
rcrl
inc
dec
fidivrl
fidivrs
loope
push
jns
fnsave
fwait
rcrb
mov
mov
mov
mov
mov
jp
imul
inc
mov
test
ja
cli
int3
mov
or
mov
jae
add
cwtl
mov
and
sub
ret
mov
jecxz
pop
sub
sbb
jp
pushf
xchg
cwtl
scas
push
mov
and
std
fbstp
hlt
out
clc
pop
mov
sub
mov
jns
test
js
fisubrl
xchg
and
jle
adc
shrl
iret
gs
fiaddl
mov
int3
test
mov
sub
clc
das
outsb
es
imul
bound
mov
into
add
jp
sub
lock
in
repnz
lret
xchg
push
inc
outsb
loope
fisttps
repnz
in
repnz
fwait
mov
dec
jecxz
scas
rcll
scas
dec
mov
mov
scas
enter
sub
int
mov
test
mov
into
fcmovnb
call
rorl
ret
mov
jle
jns
xlat
xor
add
enter
jle
loop
imul
shrb
aad
sarl
mov
rorl
test
cmp
jae
mov
arpl
bound
cwtl
xorb
or
movsb
cmp
lahf
into
mov
cwtl
or
icebp
add
repz
es
in
cmpsb
adc
loop
mov
ret
mov
sahf
fisubs
rcrb
fisttpl
xchg
movsb
orl
aam
xchg
mov
xor
js
jp
int3
mov
cmpsb
cwtl
xor
es
xlat
loopne
aam
ret
xchg
loope
jg
xchg
mov
shll
int3
jp
jp
and
or
and
jb
mov
int
je
cltd
insb
push
test
stos
xchg
sbb
mov
cmpsb
repz
dec
mov
ror
pop
jecxz
mov
jns
dec
nop
int3
sub
jl
into
lods
mov
xor
jmp
test
hlt
lea
fs
sbb
xchg
jae
sub
test
es
mov
ss
xchg
jb
or
test
aaa
cmp
or
js
pop
cs
jp
les
iret
dec
es
test
dec
aaa
mov
dec
pop
xlat
cmpsb
xlat
out
imul
adc
and
adc
push
movsl
fisubs
cs
fnstenv
mov
dec
sbb
scas
jge
mov
mov
mov
inc
imul
fdivrs
bound
xchg
loop
mov
fldcw
dec
push
push
inc
mov
or
jge
mov
mov
loop
loopne
cli
pop
sbb
pop
enter
call
jl
scas
out
or
cmp
xchg
cmp
cli
inc
mov
jnp
enter
jecxz
shll
mov
cmp
rcl
and
enter
rcl
int
nop
add
fdivrs
movsl
jecxz
shl
xchg
repz
jp
mov
jge
shrb
mov
xchg
jecxz
adc
idivb
xorl
shll
das
lods
cmp
shrb
sub
imul
je
xchg
sarl
xchg
inc
pop
sahf
cs
lahf
js
xchg
fnstenv
and
ja
sbb
adc
xchg
loop
jbe
sbb
sarb
fisubrl
fstpt
mov
ret
shrl
ret
mov
fiadds
stos
mov
jns
mov
or
in
cli
push
cmp
and
lret
out
mull
fadds
enter
jecxz
je
test
add
fwait
pop
mov
cmp
icebp
and
cmpsb
rcll
iret
jl
repz
sub
sub
jmp
shll
or
xlat
ror
or
fidivs
mov
add
insl
ds
xlat
mov
adc
jp
or
push
push
mov
arpl
xchg
pop
adcb
mov
scas
mov
jns
push
scas
sbb
iret
mov
pmaxub
rcr
push
into
cli
mov
stc
push
mov
rcrl
fnstenv
mov
mov
dec
cli
inc
sub
sub
fbstp
ja
sti
sahf
loope
scas
push
lahf
mov
jge
jae
enter
sbb
xchg
mov
inc
and
ljmp
insl
mov
lods
xor
ret
jns
xchg
adc
loope
mov
pop
mov
lret
fdivs
mov
loop
mov
test
push
cmc
push
hlt
mov
stos
iret
in
mov
mov
sahf
cmc
and
jge
sub
test
fiadds
fcoms
fbstp
mov
jg
movsb
mov
xchg
or
ret
bound
test
scas
mov
mov
cld
xchg
jg
and
ret
scas
shrl
and
test
lds
adc
adcb
int
mov
movsb
in
lods
aad
sbb
add
fidivl
and
cwtl
fistpl
rorl
fcmovb
inc
inc
add
xorl
in
rclb
mov
dec
lods
andb
mov
frstor
pop
jmp
shlb
jae
das
jnp
adc
jno
xchg
sub
add
add
fmuls
mov
mov
push
test
adc
or
adc
fiaddl
dec
mov
sbb
dec
dec
rorb
jb
rclb
pushf
lods
mov
hlt
xchg
add
jle
add
ret
ja
mov
mov
or
mov
inc
jg
mov
fbstp
loopne
inc
in
test
jecxz
shrl
sahf
jg
loop
fisubrl
adc
jns
mov
rclb
ljmp
mov
cmp
mov
es
scas
or
loop
ss
mov
cmc
int
mov
out
aad
mov
xchg
mov
jp
add
sbb
inc
leave
cwtl
fstpl
sbb
dec
cltd
aad
dec
rol
dec
xchg
lods
into
jp
subb
jae
shrb
and
mov
sbb
jl
test
pop
sahf
or
xchg
jne
pop
push
imul
jns
subb
iret
jp
ljmp
ja
xlat
sti
xchg
cmp
in
fildll
or
insb
rcr
das
pushf
mov
xchg
lahf
mov
add
mov
leave
js
lods
jns
test
push
pop
mov
ja
jbe
loop
xchg
mov
stos
mov
rcrl
in
out
fsubl
je
call
addl
jmp
rorb
jg
ss
popf
xchg
cmpb
cli
icebp
lret
movsl
mov
rcl
or
fs
loop
inc
sarl
fptan
sub
out
into
cmp
xor
cwtl
fs
dec
dec
add
pop
test
mov
jge
xchg
test
outsl
flds
fcmove
mov
add
rorb
sub
mov
loop
xchg
add
fidivrl
dec
hlt
out
pop
mov
shll
sub
jnp
addl
fxch
loopne
ds
scas
scas
fstps
push
cli
jae
fisubl
or
roll
push
inc
lahf
test
int
enter
jnp
jp
testb
fadd
xchg
mov
movsb
fadds
or
mov
out
in
insl
fwait
int3
pop
cli
or
jg
fisubs
mov
aas
mov
xor
mov
mov
js
leave
lock
rcr
dec
mov
sub
jg
and
mov
jne
bound
shll
adc
and
xor
insb
mov
push
movsl
sarl
xlat
int
xor
repz
lods
fucom
stos
or
andl
mov
jns
int
test
ret
mov
outsb
or
mov
jg
fidivs
arpl
cmp
data16
in
outsb
test
xchg
fs
sbb
mov
xor
jle
jns
ljmp
jns
ret
mov
cli
mov
mov
int
or
mov
test
leave
lock
frstor
test
or
aad
xchg
mov
mov
dec
cltd
fdivrs
jp
shrb
push
imul
js
shll
aad
iret
jp
mov
mov
jecxz
in
mov
loop
into
fldcw
add
jle
pushf
hlt
jne
jo
int
lahf
mov
mov
popa
cmpsb
mov
arpl
dec
sub
gs
jge
inc
jge
mov
int3
mov
icebp
pushf
fcmovne
repnz
stos
cmpsb
mov
int3
movsb
pop
enter
iret
mov
stos
mov
into
int3
jg
addl
cmp
fstl
adc
gs
lock
jae
push
cmp
mov
mov
sbbb
inc
imul
mov
pushf
mov
mov
shr
lock
leave
test
mov
mov
adc
jnp
and
fmuls
mov
sbb
leave
hlt
mov
mov
fistps
aad
push
pop
sbb
fadds
mov
rolb
xor
shrb
mov
xchg
sbb
inc
mull
mov
es
out
je
mov
mov
shlb
mov
sbb
and
int
mov
ja
out
lods
shlb
lcall
loopne,pn
xchg
fdivrs
xchg
shlb
movsl
push
rolb
xor
shrb
mov
sarb
mov
es
out
je
mov
popf
mov
jg
shlb
mov
sbb
and
int
mov
movb
cwtl
in
lret
mov
mov
outsl
fdivp
jb
es
jo
scas
mov
rcr
test
fisubs
jp
mov
js
ret
dec
loop
rcr
lods
dec
shll
mov
lret
mov
mov
mov
rcl
mov
push
ja
fldcw
fimuls
pusha
mov
sub
inc
mov
sarl
add
jbe
xchg
clc
stc
int
das
mov
sarb
dec
test
cmp
xor
ret
addb
int3
fcmovnu
push
test
or
inc
sahf
xchg
cmpl
mov
pop
and
and
cmp
iret
cmp
jne
xorl
jg
mov
sbbl
sub
negb
or
shl
push
int3
dec
mov
mov
into
mov
mov
sti
bound
es
mov
out
sub
dec
jp
fidivrs
sbb
mov
push
sub
inc
cs
es
push
inc
xchg
mov
in
imul
xor
in
adc
enter
pop
mov
int3
cs
out
add
dec
leave
and
mov
add
jns
loop
loopne
jmp
icebp
ljmp
arpl
rolb
aad
mov
je
leave
mov
sbbb
stc
and
mov
fwait
mov
outsb
fwait
mov
fcmovb
loopne
stos
mov
mov
jle
cs
insb
mov
cmc
pusha
fs
mov
xor
mov
mov
shlb
out
fwait
rorb
divl
mov
out
js
push
sub
ret
outsb
rcr
aaa
jmp
outsb
mov
sbb
pop
subb
es
cs
ja
xor
sbb
pusha
daa
mov
cmpsb
sub
in
xor
in
es
mov
sbb
cs
and
mov
jle
push
in
mov
fisubl
outsb
fwait
mov
ja
outsb
pop
aas
outsl
jl
jb
outsb
mov
add
mov
shll
mov
stc
in
movsb
or
sub
push
jns
shlb
mov
and
mov
lcall
add
hlt
es
in
mov
es
aas
insl
lods
cmpsb
into
adc
lods
xlat
mov
test
xchg
sub
xor
push
pop
flds
inc
std
pop
jle
mov
in
aaa
sar
ret
adc
jg
cmp
cmp
xchg
jle
jp
lds
lods
subl
push
mov
mov
iret
aam
jns
scas
add
addb
movsl
jp
or
mov
push
clc
fistpll
in
dec
fidivl
pop
out
lret
pop
out
movsb
mov
loop
add
pop
xchg
jne
mov
pop
mov
and
icebp
and
pop
xchg
scas
mov
imul
shrd
outsl
dec
xchg
xchg
lock
jle
mov
lods
ds
movsl
jne
mov
test
pop
aas
ret
sbb
and
push
pop
pop
mov
icebp
dec
rcr
call
mov
lret
mov
fbstp
insl
pop
inc
push
stc
jns
je
dec
adc
mov
sbb
into
inc
jle
loope
nop
clc
jl
lods
orl
ja
lods
inc
andl
cmp
xor
xchg
nop
mov
xchg
sahf
mov
mov
shlb
iret
xchg
mov
lods
mov
xchg
push
stos
into
xchg
test
sub
jns
js
sbb
jle
scas
jge
imul
fadds
mov
in
jg,pn
imul
jl
fmul
cmpl
mov
jno
sahf
loope
xchg
jmpw
xchg
pop
push
add
sbb
in
fisubrl
adcl
add
push
jge
jl,pn
imul
jp
idivb
js,pn
imul
sarl
in
cmpb
dec
shrb
sarl
jg
enter
in
jl
andb
jp
loope
xchg
push
jg
enter
mov
mov
jno
sahf
loope
xchg
push
js
enter
mov
or
adc
ja
iret
push
sbb
jl
ficoms
jle
mov
jl
adcl
jns
orb
xchg
shrl
lret
loope
mov
lods
into
dec
jns
int3
out
call
call
jbe
add
mov
int3
sub
mov
jb
jbe
xor
cmpl
and
adc
dec
gs
or
repz
mov
call
call
call
call
std
mov
call
movsb
call
xlat
jns
imul
shl
jg
mov
mov
test
mov
popf
cwtl
jbe
fdivrp
nop
fmuls
xlat
popf
mov
and
lods
inc
shll
fsubrs
insb
cs
mov
push
and
dec
out
dec
mov
add
and
mov
cli
outsb
mov
mov
scas
or
add
jp,pn
outsl
jp
mull
shll
outsl
jl
enter
or
push
jns
clc
jne
cmp
dec
sub
push
outsb
aam
pop
cmp
sahf
mov
push
cmp
push
mov
jnp
sarb
add
repnz
mov
adc
sbb
push
and
cmpb
mov
cmpsb
std
jo
insb
xorb
jp
pop
lods
js
jnp
cmpb
addb
cwtl
adcb
adc
push
in
jns
pop
stc
jp
jnp
out
mov
jge
mov
enter
mov
jns
sbb
jns
jns,pn
imul
jns
out
jo
and
loopne
xchg
jo
or
push
repz
lods
jns
push
sub
push
aaa
mov
and
pop
loopne
pop
cmp
jl
sbb
jge
xor
push
jge
jge,pn
into
sub
dec
js,pn
lret
rcll
mov
shll
lods
scas
in
cwtl
jbe
inc
in
mov
pusha
aad
mov
in
fimuls
push
loope
in
js
push
js
test
cmpl
jge
jge
scas
jge
mov
jge
mov
xor
clc
lods
test
not
push
cmpsb
repnz
or
adc
shr
jp
ret
and
shlb
scas
add
in
pop
fmuls
pop
js
dec
ss
sbb
jbe
sti
and
into
jle
lcall
jns
mov
nop
fmul
lret
mov
bound
sahf
sbb
repnz
sahf
in
jl
mov
jle
mov
add
test
icebp
shlb
fs
test
adc
test
call
adc
add
mov
setb
fsubr
pop
sub
outsl
and
xchg
mov
mov
xchg
jne
xchg
subl
mov
popf
jb
push
push
sbb
adcb
cmpsb
popf
loope
sbb
addb
jle
insl
mul
enter
out
stc
aam
sbb
sbb
stos
insl
push
inc
jecxz
test
into
adc
or
add
push
xchg
push
in
lock
mov
aam
out
sbb
ret
cmp
cli
es
cmpl
mov
sbb
jns
mov
aad
inc
jl
add
jno,pn
jle
and
cs
into
push
cmp
movl
mov
sbb
and
cmpsb
jno
mov
in
cmpb
jl
mov
lods
lea
push
jnp
popf
xchg
ss
mov
or
test
enter
mov
sbbb
xorb
stos
loope
sbb
insl
inc
mov
inc
cmp
lds
nop
sub
ss
fnstcw
je
and
fcmovbe
add
rclb
les
lret
jecxz
js
jle
sbb
push
shlb
push
jns
stc
pop
out
pop
mov
bswap
popa
aam
mov
in
pop
in
mull
fsubrl
lods
lcall
andl
int3
nop
fnstsw
es
sahf
jg
incl
out
dec
sbb
nop
ljmp
push
addb
fdivs
hlt
pop
pop
mov
adc
xor
faddl
lods
xor
out
and
add
adc
ss
int
pop
adc
and
mov
stos
and
lret
call
mov
mov
pushf
mov
lea
xchg
xchg
cltd
neg
push
aad
sbb
nop
repnz
fcompl
addb
and
sbb
fdivs
js
testl
lret
rcrb
jl
inc
fnstsw
push
or
jle
fistpl
push
iret
jge
jns
mov
ja
mov
mov
or
sarl
aad
push
xorb
lret
or
or
into
dec
js
and
xchg
mov
pop
loop
sar
cli
pop
sbb
sub
and
ret
call
mov
fisubl
insb
sbb
push
pushf
fs
jb
mov
fs
push
or
mov
int
repz
push
add
jl
stc
cld
lds
mov
jae
jno
push
mov
jle
out
or
mov
out
pop
test
popaw
jp
out
js
rorb
insb
jle
ror
pushf
fistps
jge
scas
andb
int3
pop
adc
aam
lods
push
add
cwtl
sbb
fsubl
pop
je
jle
jbe
push
jle
inc
divl
cs
pop
and
call
mov
int3
adc
js
mov
sbb
or
lret
sub
in
xchg
mov
jmp
ja
cmp
mov
cwtl
sub
and
jns
mov
adc
and
jl
repz
and
sarb
clc
sbb
pop
pop
fwait
lock
add
jecxz
rcl
shrb
mov
pop
mov
roll
sub
jmp
adc
loop
adc
aam
xor
push
movsl
mov
mov
aam
rorl
cmp
roll
ja
sbb
idivl
mov
stc
lret
pop
fmul
cmpb
pop
andb
mov
imulb
adc
mov
mov
add
jo
sbbb
cwtl
andl
sub
push
stos
mov
or
pop
es
jg
add
ss
sub
xchg
push
aam
out
in
mov
dec
jle
jno
xor
jbe
push
jle
mov
adc
ret
ret
js
jg
jb
out
jns
into
sub
fnstcw
sbb
aam
jno
adc
cmpsb
xorb
sahf
jb
inc
sbb
inc
lret
pushf
mov
mov
shr
lods
test
jg
push
addl
jl
add
popf
push
fidivs
xchg
sub
xchg
mov
fbstp
sarb
mov
jle
fiadds
out
mov
inc
pop
mov
sub
jp
fs
lods
pop
xchg
les
mov
insl
daa
mov
mov
mov
ret
popf
aam
stos
subb
insb
push
subb
gs
nop
xchg
rcl
loope
mov
out
into
sarl
lock
push
mov
iret
fstps
pushf
mov
pop
or
insb
addb
mov
and
or
popa
aam
push
aam
pop
push
ret
loope
sbb
pop
ret
xchg
sahf
or
cmpl
hlt
sub
addb
push
sbb
jle
orb
repnz
fsubrs
adc
outsb
clc
or
jp
loopne
or
outsb
in
stos
inc
lea
push
push
jo
out
pop
out
ss
mov
pop
js
mov
sub
push
movsb
ljmp
jae
sahf
jle
adcb
cwtl
mov
inc
lcall
test
cs
insb
loop
sbb
les
jle
or
pop
sbb
mov
icebp
fidivs
js
cmpsb
xor
push
mov
xor
mov
cmpsb
sbb
movsb
test
xor
mov
xor
rcr
mov
movsb
push
push
orb
or
ss
orb
sbb
xor
push
andb
jne
xor
test
push
jbe
insb
add
xor
popf
fiadds
mov
jo
and
jle
and
or
xor
lcall
hlt
jne
xor
inc
add
xlat
js
fstps
xorb
push
scas
int
pushl
sbb
in
ss
jl
testl
mov
xor
fs
pop
cld
lret
and
fistps
int3
in
jbe
jl
jle
jp
cld
cmp
inc
sbb
jne
sti
mov
add
push
adc
jo
les
sbb
jb
rorb
in
out
push
mov
jecxz
rcl
out
test
or
cmp
lcall
shl
xor
jno
rclb
xor
dec
sbb
out
adc
ss
int3
inc
jae
fldl
cwtl
lcall
sbb
push
js
mov
stos
fstpt
sub
xor
shlb
jno,pt
imul
jl
addl
or
mov
jnp
stos
movsl
add
or
lods
xchg
rolb
fsub
jge
mov
mov
clc
xchg
mov
add
push
add
or
jne
clc
adc
call
mov
jecxz
daa
add
ror
js
push
scas
mov
repz
jb
jo
jae
jne
push
add
adc
or
cmp
xor
cmpsb
ret
mov
add
fsubs
sbb
push
out
outsb
sbb
mov
pop
cmpl
fdivl
stos
xchg
push
fstpt
jge
pusha
mov
pop
fsubs
out
sbb
enter
adc
jns
jb
std
mov
mov
cld
and
fs
enter
sub
fld
out
pop
dec
sub
lods
test
jle
mov
xor
sarl
cli
mov
push
in
test
pop
mov
push
ret
call
cli
int
cwtl
js
xchg
loope
nop
xorb
sbb
xor
pusha
int3
iret
subl
mul
cmpl
fs
xchg
adcb
sub
stos
jmp
xchg
pop
sub
lock
jp
jle
xor
les
repnz
daa
test
mov
in
adcb
push
cwtl
filds
sub
pop
mov
jmp
decb
push
jp
stos
pop
das
adc
cmpsb
mov
stc
push
dec
ljmp
test
sbb
push
lock
cli
pop
rcrb
jmp
xchg
ret
push
nop
push
jp
loop
mov
xor
sbb
push
cmp
lret
sbb
fneni(8087
lods
aas
xor
pushf
enter
add
les
inc
xchg
stos
xchg
push
mov
pop
jle
mov
jns
pusha
sbbb
paddb
imulb
jge
xchg
int3
fnstsw
lahf
aam
fcomps
dec
leave
mov
sbb
xchg
add
je
fistpll
dec
sbb
stos
mov
mov
mov
xchg
fidivrs
test
pop
test
add
loope
out
push
jp
jb
fstl
pop
sar
jb
addr16
mov
mov
fstpl
bound
pop
outsb
fldl
cmpsl
xchg
xchg
dec
pop
jne
fcoml
sbb
stos
sub
mov
in
sbb
loop
sbb
stos
jnp
adc
fldenv
cld
les
rcrb
jg
cwtl
sbb
jle
pop
jo
lea
in
fdivrl
adc
in
in
sbb
loopne
hlt
sub
xor
mov
lods
sub
sahf
out
xchg
pop
sub
mov
loop
cmp
inc
xor
sbb
mov
shl
jl
adc
sub
fidivs
ja
pop
xchg
rcrb
ljmp
out
lods
jne
jns
jbe
bound
add
daa
sbb
mov
sbb
jne
jbe
push
pop
loopne
add
xchg
add
out
clc
jle
bound
les
mov
jge
lds
add
cs
adc
loope
cmp
fcompl
mov
orb
mov
dec
pusha
faddl
fucom
ret
jb
fsubp
out
mov
je
je
js
in
ret
mov
insb
push
pop
lret
adc
xchg
mov
xchg
popa
push
nop
sbbb
ret
out
cmp
lds
sub
cld
call
inc
stc
or
les
jl
in
xor
imul
lods
xor
cmp
xor
lahf
jle
dec
cmove
xor
cld
push
pop
jg
jb
jl
in
loope
xor
aas
ss
sarb
inc
sub
or
cmp
xchg
js
lret
jbe
sub
idivb
adc
aas
ds
js
and
xlat
sarl
mov
aam
inc
filds
cld
sub
mov
insl
and
ss
cmpsb
add
loopne
xor
jge
inc
pop
lea
mov
ss
jge
das
inc
sbb
push
mov
aaa
sub
jo
dec
mov
sarl
inc
sbbl
mov
and
jo
pop
dec
sti
lock
test
xor
outsl
hlt
enter
inc
sahf
aaa
out
jmp
jg
subl
out
dec
mov
out
push
sbbl
js
aas
dec
cs
sub
push
andl
inc
jmp
ret
addr16
xlat
push
in
mov
adc
add
cli
lcall
or
roll
ret
aas
add
inc
mov
imul
mov
mov
add
xor
or
jg
and
loopne
enter
jp
bound
in
pop
jae
lods
sub
fldenv
sbb
lret
sbb
out
mov
mov
in
push
fs
fsubr
mov
stos
ja
out
shl
test
inc
int
inc
jl
jle
push
mov
mov
inc
cltd
mov
push
add
xor
lcall
test
out
cmpsb
addb
push
adc
addb
pushw
jl
mov
xlat
popa
mov
fisubl
mov
daa
adc
cmp
es
sub
xchg
or
jno
in
loope
xor
in
fistpl
jbe
mov
movsl
pop
orb
mov
stos
or
mov
xor
fcom
mov
imul
addb
int3
fst
mov
fwait
sbb
fcom
fcmove
cwtl
xchg
xlat
and
int
mov
repz
shll
mov
mov
cmpsl
mov
pushf
sbb
test
mov
andl
fisubs
mov
in
sbb
add
and
stc
jmp
movl
jmp
jmp
jmp
out
cmp
lods
sub
pop
ret
imul
or
add
shrl
adc
mov
xchg
jb
out
jmp
mov
or
lahf
dec
pop
inc
mov
sbb
in
push
das
in
in
imul
je
cmp
xor
and
test
cmpsb
mov
lahf
mov
or
inc
clc
call
call
sbb
stos
sub
xchg
push
fdivl
push
push
xor
cmp
outsl
xchg
popa
push
jo
or
out
insl
jp
out
push
sbb
mov
test
mov
ret
sahf
cld
xlat
enter
jp
fistpl
add
stos
icebp
iret
sbb
rclb
cmpsb
jae
and
jae
add
cld
sub
inc
outsl
pop
or
movsb
ss
pop
fcoml
mov
loopne
and
stos
test
and
cmp
adc
gs
push
push
clc
mov
jne
mov
jb
and
dec
lods
sub
gs
bound
js
cmpsb
xchg
push
clc
mov
shrb
xchg
fmul
xor
lods
cmpsl
ret
cmpsl
jmp
loopne
jmp
jne
or
sub
xlat
ds
inc
test
dec
sub
nop
sbb
out
es
mov
push
out
xor
and
xchg
and
fsubs
je
sarl
lcall
fadds
xchg
loopne
pop
stc
and
fwait
dec
mov
jb
filds
scas
cmpsb
stos
sub
xchg
and
hlt
test
mov
jne
test
xlat
inc
cmp
add
rcr
mov
xchg
nop
in
es
out
push
insb
mov
divb
ljmp
xchg
loopne
xchg
cmp
pop
adc
orb
xorl
roll
aam
fs
ds
pop
xor
adc
rclb
or
repz
jb
dec
sarb
shrb
rolb
cmp
add
popf
mov
sub
and
jmp
add
shl
mov
xchg
sahf
je
sbb
or
jno
xor
pop
pushf
ljmp
dec
adc
lock
mov
xor
push
nop
mov
mov
pushf
pop
jno
add
push
push
or
mov
xchg
imulb
popf
lea
xlat
mov
jle
lock
in
and
imul
cmp
mov
xchg
addps
fstpt
mov
dec
jge
lahf
cmpsb
shll
sbb
bound
sbb
xchg
cli
call
pushf
pushf
inc
call
lea
je
pusha
pusha
mov
lea
jmp
lea
ja
pusha
pushf
test
clc
add
test
clc
stc
or
call
pusha
movl
pushl
mov
lea
jmp
mov
pushf
call
pushf
jmp
and
and
xchg
cwtl
lret
imul
cmp
pop
fs
mov
add
fsubl
in
and
push
addr16
jecxz
xor
or
sbb
sub
jge
pop
xchg
aam
loop
out
inc
mov
sub
das
loope
or
lds
mov
ja
pop
mov
adc
or
sti
mov
test
pop
mov
inc
push
sub
pushf
xchg
fcom
das
mov
les
call
xor
rcr
xor
dec
clc
ds
aaa
test
pushf
cli
inc
jg
add
inc
jmp
in
sub
negb
ret
stos
jbe
sbb
and
lds
cmp
mov
loop
xchg
mov
je
cltd
cmc
mov
insl
jns
mov
loopne
xor
lods
mov
cmpsb
fcomps
fbld
loopne
add
dec
test
loop
dec
call
lods
mov
pop
sbb
outsb
popf
loopne
fadds
popf
cmp
outsb
hlt
in
int
xchg
std
jge
and
inc
lea
int
ljmp
into
test
sbbl
iret
iret
js
repz
iret
lret
dec
decb
or
pop
jo
jno
sbb
mov
ficoml
push
sub
js
sub
dec
mov
adc
jo
out
mov
int3
jge
btc
neg
mov
test
jmp
xor
lock
inc
xchg
aad
movsl
nop
fwait
shl
cmp
test
ret
mov
xor
cld
clc
fldt
call
or
push
push
xchg
push
xchg
aas
mov
adc
cmp
add
scas
rcll
test
pop
adc
xorl
push
pop
xchg
pop
cmpb
xor
mov
mov
es
push
fs
jmp
dec
jl
pushf
mov
test
or
and
inc
inc
jns
sub
dec
push
ret
fildl
movl
push
pushf
movl
pushl
pusha
lea
jmp
call
jp
adc
insb
mov
mov
sbb
sub
mov
movzwl
xor
cmp
push
ficompl
pop
andb
rclb
scas
clc
cmp
stos
lods
aaa
out
sub
xchg
nop
mov
bound
clc
pop
mov
mov
test
call
sub
xor
cmp
in
xchg
jge
push
loopne
shll
xchg
ret
mov
aaa
aas
sub
movsl
int
jb
xor
ss
fbld
xlat
xor
sti
inc
out
pop
sbb
push
fs
jno
scas
push
ljmp
and
jnp
dec
jne
lahf
sarb
mov
int3
xchg
arpl
mov
notb
divl
push
push
pop
mov
pop
pop
sub
popf
jecxz
push
das
lods
nop
fwait
cltd
pusha
cmp
xchg
pop
sbb
jmp
inc
push
arpl
sub
shld
mov
pusha
mov
lea
cmp
shl
add
not
sbb
shr
mov
mov
clc
add
pushl
push
pushl
mov
call
jle
mov
sub
or
loop
repz
dec
add
cmp
cmp
mov
rcr
out
push
or
rclb
cmp
idivb
fwait
scas
xor
xchg
add
mov
xchg
jp
add
in
adc
cmpsl
fwait
mov
xchg
iret
adc
xchg
sahf
ss
adc
jmp
and
jge
ljmp
testb
dec
sahf
cmp
pop
sbb
mov
mov
ret
add
sub
fimull
loope
jmp
movsl
ljmp
repz
hlt
std
jmp
fs
je
call
push
adc
pusha
pushf
pushf
pushl
ret
lea
jmp
sub
inc
movsl
sub
push
cmc
stc
cmp
arpl
mov
in
ljmp
xchg
movsb
addb
xchg
cmp
mov
leave
push
ret
mov
scas
outsl
add
popa
iret
mov
je
sti
sub
js
jmp
bound
jae
lret
dec
imul
mov
iret
test
js
out
and
mov
jae
cmp
cmc
dec
out
dec
inc
sbb
loopne
xchg
adc
xor
test
lds
add
push
aaa
mov
jmp
lods
lock
aam
push
mov
jmp
fadds
adc
fbld
ucomiss
sahf
lock
jb
add
movsb
sbb
jae
shrl
fistpl
mov
insb
add
lods
jge
xchg
mov
jecxz
add
push
iret
and
aas
xor
sahf
cmp
sbb
jnp
sub
sahf
lahf
mov
aaa
sub
jg
xchg
adc
std
inc
test
cmp
xchg
ret
aad
and
inc
rorb
fimuls
stc
in
sti
push
xchg
loopne
lods
xor
inc
mov
aas
xor
cmp
shll
dec
imul
aad
out
pop
aas
mov
outsl
insl
mov
xor
jb
inc
repz
mov
xchg
and
shrl
mov
jecxz
fldenv
sub
push
rcrb
or
jnp
adc
enter
and
out
sub
push
arpl
ficoms
sbb
gs
mov
lahf
andl
pop
xor
clc
xchg
jno
aaa
or
lea
divl
jmp
repnz
repz
sub
stos
clc
jge
mov
mov
mov
adc
daa
js
fs
xchg
je
jb
sub
repnz
push
test
xor
jge
mov
sbb
cmp
enter
fwait
xchg
pop
mov
cli
loope
mov
repz
pop
in
xlat
test
xchg
into
in
pop
rcll
add
addr16
pop
sahf
cmp
das
adc
enter
push
push
mov
push
fstpl
stos
cmp
dec
mov
dec
inc
daa
add
mov
clc
icebp
fistpl
jge
push
stc
xor
jg
cmpsb
and
stos
xor
rorb
fisubrs
ss
stos
enter
imul
les
xchg
adc
xchg
mov
mov
shrl
or
jp
push
lea
movb
xchg
pushf
movl
movzbw
mov
lea
push
jmp
lea
jbe
btc
xor
jmp
pushf
movb
pusha
lea
call
pusha
pushf
lea
jae
xchg
mov
jae
mov
jmp
call
pushf
pushf
cmp
jmp
mov
mov
movl
pushl
ret
lea
bswap
not
pop
movzwl
pop
bswap
lea
movzbl
mov
call
test
pusha
jmp
bt
push
cmp
pushf
or
push
lea
je
not
pushf
setbe
mov
not
lea
mov
movb
jmp
fwait
or
mov
inc
mov
push
pop
add
jmp
imul
and
inc
adc
and
push
popa
mov
lcall
aaa
sbb
in
movsb
aaa
in
ret
adc
stos
test
dec
mov
inc
push
out
adc
cmp
scas
notl
mov
xchg
jno
xchg
pop
xor
mov
in
inc
mov
fsub
add
aam
jno
sub
loope
push
sub
or
notb
movsb
push
divl
rcl
mov
ljmp
not
rolb
pop
enter
sarb
sbb
popa
pop
push
imul
fldt
je
in
xor
sub
loopne
lds
and
not
xor
movl
cmp
mov
movb
lea
je
cmp
pusha
cmp
pusha
push
movb
mov
pushl
ret
movsl
shrb
jns
mov
pop
and
cld
inc
push
pop
test
push
sub
push
and
hlt
and
fadds
pop
add
movsb
roll
das
and
cmc
xor
inc
andb
jnp
mov
mov
mov
out
sbb
mov
xchg
cmp
mov
sub
addr16
sbb
dec
hlt
add
enter
les
jecxz
push
mov
pop
xor
mov
lea
jne
lahf
pusha
mov
pushl
pusha
push
lea
jmp
pop
cmp
lahf
sub
daa
jne
lahf
jge
xor
stos
into
ljmp
push
sbb
add
mov
fstpl
jge
adc
adc
loopne
aas
mov
nop
out
adc
frndint
fisttpll
xchg
loop
cmp
cld
out
and
lds
push
cmp
jg
mov
mov
enter
xor
cmp
inc
cmp
je
dec
cmp
push
mov
sub
sub
pushf
call
lea
ja
pushf
call
pushf
stc
stc
test
call
cmp
pushf
pusha
pushf
lea
jae
test
pushf
cmp
pushl
pusha
movl
lea
ja
pusha
pushf
inc
lea
setns
inc
not
pushf
inc
lea
shr
pushf
sets
xchg
add
rcr
mov
ror
pushf
pusha
call
and
in
cmp
inc
xor
sub
das
loop
mov
and
shrl
mov
push
xchg
les
and
movsl
clc
int3
rcrb
push
ljmp
notb
scas
pop
mov
or
inc
jl
mov
push
pusha
lea
je
push
clc
cmc
add
jl
sub
cmp
pusha
cmp
pushf
pusha
call
insl
daa
sub
js
lds
insl
or
loopne
call
sub
ret
mov
enter
jae
xchg
in
stc
arpl
imul
push
dec
mov
and
cmpsl
mov
xchg
mov
xor
iret
add
add
xchg
push
dec
mov
fwait
xchg
mov
mov
xor
jnp
cltd
in
cmc
push
mov
add
das
sbb
loopne
jns
arpl
sti
inc
mov
or
cs
add
pop
stos
out
xor
xor
inc
xor
lea
jne
jmp
bt
cmp
jmp
btr
movzbw
push
sub
mov
stc
test
push
sbb
mov
not
sar
push
btc
push
ror
shrd
push
btr
rol
ror
push
xchg
rcr
shrd
not
mov
adc
sub
mov
sar
mov
cmp
pushf
or
lea
jg
je
jmp
movl
pushl
mov
movl
push
lea
jmp
xchg
jnp
sub
xor
lock
mov
xor
jge
movsl
mov
repnz
cmp
inc
sub
add
cltd
mov
fadds
jmp
adc
mov
imul
sbb
add
pop
xchg
push
xchg
or
enter
ret
nop
cmp
add
enter
jo
lods
rcrl
enter
mov
add
or
shlb
pop
pop
imul
loop
dec
push
sub
lods
pop
or
jb
mov
xor
lahf
sub
icebp
int
pop
xchg
or
fcomip
mov
push
sbb
lret
mulb
xchg
xchg
insl
stc
cltd
add
xchg
xchg
sbb
dec
rclb
roll
add
sbb
enter
int3
scas
sbbb
jmp
into
mov
mov
dec
pop
cmpb
mov
and
sbb
sbb
sbb
cmc
cmp
lcall
mov
pop
dec
push
int
in
inc
in
or
iret
sbbl
sbb
inc
xor
addb
clc
lcall
adc
adc
sub
cli
lret
or
test
adc
dec
xor
dec
xor
lret
sbb
rolb
jmp
icebp
cli
sbb
pop
popf
cltd
push
jbe
sub
shr
dec
push
ret
xchg
push
cmpsl
jl
sbb
loop
mov
aad
xor
lods
test
clc
jmp
sub
mov
aad
cli
hlt
jno
mov
in
mov
dec
cmovns
lock
in
dec
xchg
das
jb
cld
xchg
xchg
aad
arpl
mov
sub
decb
iret
insl
push
mov
push
popf
divb
sahf
mov
test
rcrb
push
movsl
insb
aas
mov
incb
pop
daa
push
ljmp
repnz
jmp
icebp
aaa
cltd
sub
lods
and
std
sub
add
sbb
sbb
push
jmp
lcall
rolb
adc
sarb
dec
mov
cmp
data16
mov
out
imul
mov
cmpsb
mov
pop
adcb
sub
adc
push
ficoml
and
inc
jb
add
add
mov
sbb
ret
daa
std
pop
jo
test
mov
sbb
sbb
icebp
cmp
fcomp
sahf
jnp
int3
cwtl
jne
inc
xchg
or
insl
mov
ficoms
aad
add
mov
cmp
daa
popa
pop
pop
add
pop
cmpsb
out
jge
in
test
fildll
mov
cli
jmp
inc
and
icebp
mov
sar
mov
movb
mov
lea
call
jmp
lea
jb
cmc
cmpb
jmp
jmp
repz
je
pusha
movl
call
push
pushl
mov
jmp
sbb
push
cltd
sub
test
decl
lcall
lea
jae
pop
imul
sub
lea
jnp
in
lret
pop
fnstsw
sti
mov
rcrl
mov
xchg
aas
fadds
pop
mov
seta
inc
or
ljmp
push
lcall
lcall
lods
xor
sub
fstl
pop
movsb
mov
ret
test
inc
jno
inc
icebp
mov
js
mov
and
lea
jbe
btc
dec
lea
cmc
mov
dec
cmc
pusha
bt
add
shr
add
mov
shld
shr
add
shld
movl
shld
mov
cmc
cmp
pushl
mov
lea
jbe
test
sub
cmp
sar
movsbl
bts
mov
add
sbb
stc
mov
shl
btc
bsr
add
bt
mov
shr
test
mov
mov
shl
sar
bt
push
add
movw
lea
mov
mov
mov
push
mov
mov
jmp
bt
cmp
and
not
mov
bt
cmc
cmp
call
mov
lea
jne
pushf
push
setne
movb
push
jmp
add
or
xor
lea
mov
lods
mov
jmp
add
inc
gs
outsl
fs
gs
imul
add
add
sbb
inc
cmp
nop
sub
fdivl
cmp
cmp
lea
dec
mov
mov
add
push
into
or
pop
mov
arpl
xchg
fbld
sub
add
adc
xor
sbb
fmull
loop
cmc
lcall
lcall
sbb
xchg
sub
or
clc
ss
jg
cli
xor
sub
fnsave
cmp
fsts
pop
inc
xor
dec
test
and
xchg
sub
push
sbb
and
jg
and
and
push
pop
sahf
cmp
push
das
arpl
pushf
pop
lods
mov
push
jb
into
test
sub
shll
mov
std
imul
mov
pushf
lcall
loop
bound
ret
or
ss
icebp
or
mov
cmp
dec
insb
jo
movsb
or
mov
lea
call
pushf
call
int3
cld
pop
xchg
sub
lcall
pop
insl
xchg
jle
sti
push
xchg
ret
mov
and
jmp
hlt
jge
sub
and
push
xchg
scas
inc
repz
fistl
fwait
cmpl
inc
mov
jbe
mov
xchg
xchg
push
mov
xlat
and
xchg
push
jl
ljmp
fs
mov
cmp
popf
outsl
jno
mov
push
rcll
push
sub
jns
sub
jb
xchg
cmp
insb
xchg
in
sub
test
xor
xchg
sub
mov
mov
lods
dec
and
mov
fwait
aas
add
mov
push
fimuls
mov
xor
xor
xchg
or
xchg
es
test
adc
mov
xorb
pushf
int
scas
or
popf
push
gs
fdecstp
int
mov
sarl
ret
push
out
fdivr
mov
xchg
push
movb
fisttpll
mov
xchg
mov
movsl
adc
sbb
mov
test
mov
jno
sub
roll
arpl
and
adc
adc
push
fdiv
push
stos
daa
jg
and
fisttpll
insb
cli
out
xor
movsl
xchg
shll
mov
sbb
and
ficomps
dec
jnp
lahf
and
add
ljmp
ja
sbb
lea
lds
sub
sbb
xchg
push
loopne
and
stc
jmp
mov
movb
movb
pushf
lea
jmp
xchg
rcll
rcrb
idiv
jecxz
mov
xchg
roll
xchg
mov
inc
mov
push
sub
xchg
dec
fsts
das
scas
test
lock
adc
sbbl
shll
jg
mov
ret
add
xlat
negb
std
cmc
fstpl
inc
lret
or
jb
mov
fdiv
fidivs
sub
std
movsb
inc
jg
pop
pop
adcl
jg
in
fcmovnu
sub
stos
ret
add
mov
lock
jb
jecxz
mov
sbb
push
xchg
outsl
adc
dec
lods
dec
cltd
fimull
dec
out
nop
mov
mov
push
xchg
or
inc
cltd
divb
or
adcb
xchg
sub
pop
dec
fs
nop
mov
call
fisubs
push
xor
fldl
inc
inc
punpckhwd
decl
sub
std
mov
das
lock
inc
xor
jg
mov
sbb
xor
pop
imul
jl
jmp
imul
fnsave
nop
inc
lret
add
lret
fildl
and
pop
dec
jnp
mov
imul
lcall
xorb
lcall
and
scas
or
or
pop
movups
repz
jmp
pusha
xor
sub
lea
not
lea
pushf
movb
pushl
lea
jmp
xor
add
ffree
jb
shrl
aaa
and
add
sub
push
mov
sub
lcall
hlt
xor
xchg
stos
rorl
out
cmpsb
cmpsl
cwtl
mov
insl
jge
sbb
xor
push
decl
push
pushf
jmp
pushl
popl
push
pushf
mov
push
lea
jmp
sub
mov
pushf
jmp
add
cmc
clc
stc
shld
mov
mov
jmp
add
mov
call
dec
bt
pushl
add
call
pusha
pushf
pushf
mov
jmp
lea
js
pushf
jmp
push
xor
clc
rol
test
add
jmp
mov
pushf
movb
pushf
jmp
pushl
mov
jmp
pushl
pushf
mov
mov
jmp
mov
pushf
lea
jmp
pushf
mov
mov
push
pushf
pushf
lea
jmp
mov
lea
je
cmc
call
pushf
push
dec
jmp
cmp
test
test
sub
bt
cmp
shr
call
neg
adc
movsbw
pushf
mov
mov
add
add
pusha
setae
not
jmp
pusha
pushf
jmp
call
mov
movb
mov
pusha
pushf
lea
jmp
jmp
inc
adc
movzbl
clc
sub
jmp
sub
mov
call
pusha
push
mov
pushf
popl
pushl
pushl
popl
movb
movb
movb
pushl
lea
jmp
push
mov
pusha
jmp
rcr
sar
or
mov
test
add
pusha
pusha
movb
lea
jmp
mov
movl
pushf
pushl
push
mov
pushf
jmp
pushf
mov
pushf
mov
pushl
mov
pushf
mov
pushf
pushf
lea
jmp
movw
call
pushf
neg
mov
bts
rcr
add
btc
dec
sub
lea
shl
setae
neg
mov
clc
shl
pushf
pusha
push
cmc
shr
pushf
or
call
stc
aam
adc
mov
call
add
pusha
lea
jmp
lea
jne
test
sar
or
clc
mov
cmp
test
and
jmp
test
cmp
jmp
movb
call
jmp
lea
pushf
bt
sub
mov
movb
movb
jmp
movb
mov
mov
push
pusha
lea
jmp
pusha
push
push
mov
pushf
movw
pushf
lea
jmp
jmp
mov
movw
push
pushf
lea
jmp
pushf
pushl
popl
push
mov
pushf
movb
lea
jmp
movb
jmp
add
cmc
pusha
pushf
sub
mov
pushl
pushl
call
or
shl
not
notl
call
rcr
add
sub
rcr
mov
clc
stc
push
xor
call
clc
sub
push
mov
push
pushf
mov
pusha
pushl
pushl
pushl
lea
jmp
call
pushl
popl
mov
pushf
push
pushf
lea
jmp
mov
mov
push
call
jb
lea
push
push
lea
mov
mov
pushf
pushf
lea
cpuid
pushf
call
shrd
cmp
add
mov
pusha
pusha
add
jmp
stc
sub
mov
not
mov
jmp
jmp
mov
pushf
popl
pushl
call
mov
clc
neg
call
shl
ror
cmp
rol
mov
call
add
fwait
add
out
add
filds
pop
jo
add
aad
pop
pop
cmp
pop
pusha
rolb
pop
push
roll
pop
pop
test
pop
push
jns
pop
data16
rolb
pop
jb
add
mov
add
rolb
pop
push
movsb
add
filds
pop
insb
out
pop
imul
add
lea
pop
push
xor
add
fwait
add
lret
insl
aaa
add
data16
xchg
add
xor
pop
push
roll
pop
push
jns
pop
push
add
testb
in
add
mov
add
enter
mov
add
sbb
pop
push
xor
add
jp
pop
pop
xchg
add
cltd
add
xor
pop
jae
add
filds
pop
arpl
add
call
add
movl
pop
imul
add
flds
pop
pop
xor
pop
push
xchg
add
adc
add
inc
add
filds
pop
jbe
add
fwait
add
jle
pop
push
jle
pop
jp
add
imul
pop
pop
testb
jb
add
incl
pop
jo
add
xchg
add
testl
pop
push
filds
pop
pop
mov
add
and
pop
push
jp
pop
pop
cmp
pop
push
jp
pop
pop
mov
add
jo
pop
jb
add
test
pop
pop
xchg
add
cltd
add
adc
pop
mov
add
movsb
add
jle
pop
jb
add
and
add
xchg
pop
imul
pop
in
add
roll
pop
push
xchg
add
lea
pop
push
xor
add
filds
pop
js
add
cltd
add
enter
mov
add
xor
pop
push
push
add
xor
pop
jne
add
rolb
pop
pop
push
add
xchg
add
adc
pop
je
add
xchg
pop
push
add
call
add
fwait
add
incl
pop
pop
cmp
pop
jae
add
and
add
add
test
pop
push
lea
pop
pop
xchg
add
out
pop
js
add
movl
pop
jns
add
testl
pop
jbe
add
lret
add
dec
add
adc
add
testl
pop
imul
add
mov
add
filds
pop
pop
test
pop
jae
add
enter
mov
add
jns
pop
pop
xor
pop
pop
testb
bound
pop
popa
enter
xchg
pop
pop
xchg
add
adc
pop
jp
add
outsb
add
filds
pop
rolb
pop
push
jle
pop
js
add
aad
pop
jo
add
rolb
pop
gs
add
movl
pop
outsb
fldl
pop
je
add
xchg
add
lret
add
adc
pop
ja
add
filds
pop
jbe
add
jo
pop
insb
out
pop
push
jle
pop
jae
add
jle
pop
jb
add
and
add
rolb
pop
jns
add
xchg
add
cltd
add
testb
outsl
movsb
add
filds
pop
gs
add
mov
add
roll
pop
addr16
add
test
pop
je
add
jp
pop
push
lea
pop
arpl
pop
pop
xchg
add
xor
pop
popa
enter
in
add
filds
pop
jb
add
lea
pop
imul
pop
imul
pop
jbe
add
mov
add
xor
add
cltd
add
cmp
pop
imul
add
jp
pop
pop
mov
add
rolb
pop
push
jp
pop
js
add
testb
outsl
movsb
add
add
mov
add
imul
mov
call
jmp
call
shl
shl
mov
cmc
clc
stc
add
pusha
pushf
pushf
pushf
lea
jmp
pushf
pusha
pushf
mov
pushf
mov
pushl
mov
pushf
jmp
mov
movl
lea
jmp
mov
push
push
lea
jmp
and
mov
pushf
mov
pushf
pushf
popl
movl
pushf
pushl
popl
movb
movb
lea
jmp
lea
js
pusha
mov
pushl
pusha
mov
jmp
ror
mov
cmp
pusha
stc
call
pushf
mov
pushl
lea
jmp
stc
cmp
jmp
call
mov
pushf
call
rcl
shrd
add
pusha
and
bsf
adc
mov
call
add
dec
movzbl
cmc
push
add
stc
jmp
shl
bts
xorb
pushf
pushf
pushl
bswap
mov
pushf
pusha
mov
pushf
lea
jmp
pushf
pusha
mov
pusha
pushf
movw
pushf
mov
pushf
mov
call
pushf
lea
lea
mov
call
pushf
pushf
jmp
pushf
pushl
call
pusha
repz
popl
call
rdtsc
lea
shrd
movzbw
lea
adc
cwtl
sub
lahf
lea
sub
shr
inc
push
and
adc
inc
rcl
btc
sub
push
bswap
lea
mov
pusha
pushf
popl
pusha
mov
std
push
mov
lea
mov
push
lea
call
mov
jmp
push
mov
mov
movb
lea
jmp
mov
bts
sub
mov
cmp
cmc
add
pushf
mov
mov
movb
lea
jmp
btc
mov
pushf
cmp
clc
sub
test
test
jmp
mov
pushf
pushf
repz
popl
pushf
pushf
movb
jmp
lahf
mov
bt
add
inc
mov
mov
cmc
test
cmc
add
call
bsr
mov
pushf
lea
test
mov
jmp
pushl
popl
push
lea
jmp
add
cmp
call
push
mov
mov
mov
pushf
jmp
jmp
call
clc
pushf
cbtw
pushf
stc
cmc
cwtl
clc
jmp
jmp
inc
lea
btc
add
setno
mov
rol
pusha
inc
add
shld
and
pop
xor
mov
pusha
test
pushl
call
cmc
movb
movb
cmpl
pusha
jmp
movb
xchg
lea
jge
push
jmp
mov
mov
call
mov
movzbw
pusha
inc
shr
sub
rcr
rol
ror
add
shld
neg
or
sub
btc
inc
rcr
mov
stc
add
jmp
mov
jmp
lea
je
pushf
pushf
lea
jne
pusha
xorb
pushf
pushl
mov
pushl
pushf
pushf
lea
jmp
mov
pushf
mov
jmp
call
movb
push
movw
mov
call
mov
call
mov
push
push
mov
pushf
popl
mov
pusha
call
call
pushf
jmp
lea
jne
pushf
pushl
mov
movl
lea
jmp
push
movl
mov
jmp
pushl
popf
mov
movl
mov
movl
lea
jmp
pushf
mov
movw
repz
popl
call
mov
movb
jmp
pushf
pushf
popl
lea
jns
pushf
pushl
popl
pushl
pushl
push
mov
lea
jmp
lea
lea
js
push
mov
movl
pusha
pushf
pushl
lea
jmp
pusha
push
pushl
popl
push
mov
lea
jmp
clc
bswap
shr
bsr
mov
stc
push
bt
add
call
ror
mov
and
mov
jmp
jmp
jmp
add
add
pushl
pushl
popl
pushf
lea
jmp
push
jmp
cmp
cmp
cmc
neg
lea
jg
inc
cmc
pusha
bt
pushl
sub
bt
cmc
jmp
bswap
lahf
setl
mov
pusha
neg
xadd
xadd
mov
setnp
xor
mov
cmp
pusha
call
movw
mov
pushl
popl
mov
mov
lea
jmp
mov
mov
pushl
lea
jmp
mov
mov
pushf
sub
jmp
call
mov
movb
jmp
movw
mov
jmp
mov
pushf
call
pushf
bts
bswap
pusha
xchg
bts
lea
add
jmp
pushl
push
mov
pushf
lea
jmp
bsf
test
xchg
mov
btc
bts
mov
push
call
rcr
ror
stc
mov
stc
cmc
sub
clc
add
jmp
inc
rcr
mov
test
test
cmp
stc
mov
jmp
call
sub
jmp
mov
pusha
movb
lea
jmp
push
mov
movb
lea
jmp
lea
jmp
mov
pushf
pushf
call
pushf
movl
mov
pushf
push
push
pushf
lea
jmp
mov
jmp
call
call
movb
mov
pushl
movw
pusha
pushf
lea
jmp
mov
call
mov
movsbw
bswap
pushf
lea
repz
popl
shl
push
cmp
adc
push
mov
clc
push
cmc
neg
adc
pusha
mov
cmc
stc
movw
dec
xchg
bts
test
ror
mov
sub
shl
movsbw
pusha
sar
xchg
ror
sub
sar
stc
pushl
popl
movzbw
rcr
pushf
stc
movl
rcr
mov
lea
jbe
movzbw
stc
rcl
sub
bt
btr
rol
btc
rol
bswap
xchg
ror
bsf
bswap
neg
mov
stc
sub
and
mov
shl
mov
stc
rcl
and
rol
add
inc
neg
mov
shr
btr
sub
jmp
jmp
add
clc
test
pushf
pushf
neg
call
mov
call
mov
jmp
pusha
pushl
pushl
lea
jne
or
movzbl
xorb
pushf
lea
mov
push
pushf
mov
lea
jmp
movw
movw
pushl
popl
push
pushf
mov
lea
jmp
push
pushf
jmp
pusha
call
rcr
mov
pushf
push
stc
add
pusha
pushf
pushl
lea
jmp
shl
aam
not
rdtsc
jmp
xor
test
movw
xchg
pusha
clc
cmp
clc
mov
cmp
jmp
setb
lea
mov
call
pushf
call
call
xchg
aaa
lea
mov
btr
mov
push
bt
pushf
add
pushl
pusha
movl
lea
jns
mov
pushf
pushf
mov
movb
lea
jmp
call
pusha
mov
pushl
push
pushf
popl
pushl
pushl
popl
movb
push
mov
movl
lea
jmp
cmc
mov
pushl
xor
pushl
clc
test
cwtl
test
stc
cmp
sub
push
stc
cmc
stc
mov
pushf
clc
pushf
sub
push
pushf
movl
mov
lea
jmp
mov
pushl
movw
mov
push
push
push
push
lea
jne
cmc
movsbw
xor
mov
pusha
jmp
bt
push
push
bt
pushl
popl
push
add
test
movb
pusha
pushl
popf
push
mov
movb
pushf
lea
jmp
jmp
pushf
pushf
call
call
push
mov
pushl
jmp
mov
mov
movb
pushl
lea
jmp
bswap
movsbl
mov
shrd
or
mov
stc
bt
clc
add
jmp
mov
pushf
pushf
pusha
mov
jmp
clc
pusha
rol
bt
call
btr
xor
pushf
pop
dec
mov
sar
stc
btr
add
inc
movzbl
pushf
pushl
lea
jno
pusha
mov
call
push
mov
movw
pushf
mov
jmp
xchg
mov
test
mov
cmc
bt
pushf
add
mov
mov
pushl
pushf
lea
jmp
pushf
mov
jmp
pusha
mov
call
sar
shl
mov
jmp
jmp
movb
pushf
popl
jmp
push
dec
call
inc
test
pusha
pushf
test
xor
push
jmp
movw
pushf
popl
movb
pushl
popl
pushf
mov
lea
jmp
call
pushl
mov
pusha
push
pushf
mov
jmp
sar
shld
add
sbb
mov
rol
jne
sub
test
mov
cmc
jmp
shl
cmp
setp
movzbl
pushf
cmc
push
add
pushf
call
add
rcr
rcr
rol
call
mov
push
jmp
pushf
popl
jmp
add
call
pushf
jmp
bsf
mov
sar
adc
mov
test
sub
bt
clc
cmp
shr
push
mov
pushf
pushl
pushf
popl
lea
jns
push
pushl
popl
push
pushf
lea
jmp
stc
mov
bt
bt
test
jmp
jmp
jmp
call
inc
push
pushl
jmp
pushf
jmp
pushl
mov
movb
pushl
ret
pusha
mov
call
pusha
movb
call
jmp
mov
jmp
bt
pusha
not
cmc
push
stc
test
sub
clc
clc
push
and
pushf
mov
push
movw
pushf
popl
jmp
pushf
call
pusha
push
mov
mov
lea
jmp
mov
mov
mov
pushf
push
pushf
mov
lea
jmp
pushf
pusha
mov
push
repz
popl
pusha
call
mov
mov
pusha
mov
lea
jmp
pusha
clc
stc
rol
mov
call
mov
mov
pushf
movb
mov
movb
lea
jmp
mov
jmp
pushf
mov
pusha
pushf
push
pushf
popl
pushf
jmp
movb
jmp
pushf
cmc
mov
bt
push
sub
movl
lea
jne
pushf
sub
pusha
pushf
jmp
pusha
jmp
btc
call
movb
mov
jmp
push
shrd
jmp
aaa
cmp
mov
stc
sete
mov
pushf
pushl
bt
sub
pushf
shl
pusha
mov
mov
call
push
jmp
mov
pushf
pushl
popl
pusha
push
movl
lea
jmp
call
call
mov
inc
cmc
xor
bt
pushl
ror
call
pushf
repz
popl
pushf
mov
pushf
mov
call
mov
push
call
clc
mov
pushf
pusha
stc
add
movb
lea
jmp
sub
push
mov
push
push
movw
lea
jmp
push
sub
push
pusha
movw
dec
push
add
pushl
sub
pushf
pushl
mov
movb
push
pushl
lea
jmp
pushf
mov
pushf
pushf
mov
jmp
test
add
pusha
lea
jmp
pushf
jmp
mov
movw
mov
pushl
mov
mov
jmp
pushl
add
push
pushf
push
pushf
lea
jmp
neg
push
pop
rol
not
dec
cmp
btc
sub
shl
sets
sub
shrd
movzbl
sar
mov
pushf
test
movb
bswap
call
pushf
mov
push
pushl
call
pushf
inc
stc
sub
pushl
mov
cmp
cmp
bt
jmp
pusha
mov
movw
pushf
lea
jmp
pushf
call
pushf
sbb
rcr
mov
pushf
sub
pushf
pusha
pushf
mov
pushl
push
pushf
mov
lea
jmp
push
movl
pushf
mov
movl
pusha
pushl
ret
mov
pusha
call
adc
sbb
mov
cmp
cmp
pusha
add
pushf
lea
jmp
call
mov
jmp
sub
test
shr
pushf
push
pusha
call
call
pushf
test
sub
clc
movzbw
rol
jmp
mov
mov
pushf
push
mov
mov
mov
mov
pushf
movb
lea
jmp
cmc
lea
lea
jb
bt
bt
bt
rol
cmp
test
call
sub
or
add
add
sar
pusha
mov
bt
pushl
call
mov
jmp
pushl
pusha
mov
jmp
pushf
repz
popl
call
pusha
movb
cmp
add
jmp
mov
pushl
pushl
mov
movb
jmp
mov
pushl
mov
jmp
sub
push
pushf
pushf
jmp
pushf
call
pushf
popl
push
mov
pushl
popl
movb
movb
lea
jmp
call
sub
pusha
mov
pushl
pushf
lea
jmp
call
xchg
push
pushf
movl
push
mov
push
mov
movw
pushf
pushl
ret
aaa
shld
mov
clc
cmc
cmc
add
push
mov
pushf
mov
mov
mov
movb
movb
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
cld
cld
cld
call
mov
movl
movb
movw
lea
jmp
jmp
push
jmp
mov
call
mov
call
push
mov
pushl
mov
inc
mov
or
pushf
push
lea
je
bt
stc
sub
pusha
test
pusha
xchg
bt
jmp
neg
movzww
clc
jmp
push
pusha
pusha
mov
call
jmp
repz
popl
pusha
mov
call
stc
jmp
mov
pushf
mov
lea
jmp
call
add
movw
call
pushf
jmp
mov
push
call
btr
stc
lea
cmc
push
pusha
cmp
jmp
rcr
and
rcl
movzbl
sbb
bsr
add
pushf
push
pusha
inc
movsbw
jmp
pushf
call
mov
pushf
pushl
pushf
mov
lea
jmp
and
call
mov
pusha
pushf
mov
pushf
mov
pushf
jmp
mov
call
pusha
movb
pushf
jmp
pushf
repz
popl
push
jmp
mov
pushf
push
pushf
lea
jmp
pushf
mov
push
pushf
lea
jmp
cmc
neg
movzbl
bt
add
pusha
lea
jle
inc
bt
xor
jge
stc
sub
pushf
mov
jmp
sub
not
neg
mov
bsf
mov
xchg
add
adc
mov
not
sub
adc
shrd
neg
bswap
bt
rol
pushf
push
dec
movsbw
movsbw
bsr
btc
sub
add
clc
ror
movzbw
sub
setno
movzbl
sub
mov
pushl
cmc
pusha
bswap
movb
pushl
add
pushf
call
push
cmc
pushl
sub
stc
cmc
clc
mov
shl
call
call
call
stc
sub
push
clc
cmc
sub
pushf
clc
stc
bt
not
jmp
sub
push
mov
jmp
pushf
mov
pushf
pushl
push
pusha
lea
jmp
sub
pushf
jmp
mov
call
call
mov
pusha
repz
popl
push
pusha
pushf
movw
mov
call
pushf
pushf
mov
pushf
pushl
pushf
lea
jmp
inc
cmc
stc
pushl
cmc
xor
push
sub
pushl
call
mov
jmp
call
pushf
pushl
popl
pushf
movb
pushl
lea
jmp
lea
jne
pusha
push
call
add
clc
cmp
call
mov
push
movb
mov
lea
jmp
lahf
bswap
not
mov
push
pusha
pusha
pushf
mov
movb
call
dec
mov
clc
jmp
cmp
stc
clc
add
pushf
mov
pusha
mov
mov
movw
mov
pushl
ret
pushf
popl
pusha
push
pushl
popl
movl
lea
jmp
mov
repz
popl
jmp
add
call
call
not
push
lahf
not
movzbl
lahf
mov
pusha
movl
pushf
pusha
lea
cpuid
bt
sub
jmp
call
pushf
pushf
mov
pushf
push
pushl
lea
jmp
jmp
bt
cmc
daa
bts
mov
or
neg
test
mov
clc
stc
cmc
stc
sub
push
mov
mov
pushl
shl
call
mov
push
lea
jmp
lea
lea
jae
mov
push
movl
pushf
lea
jmp
pushl
mov
jmp
pusha
mov
call
mov
call
pushl
popl
push
lea
jmp
mov
pushf
mov
pushl
lea
jmp
rcl
mov
btr
das
mov
movsbw
btr
cmc
adc
mov
clc
push
test
pushf
add
pusha
call
mov
mov
pusha
mov
mov
push
movb
pushf
pushf
lea
jmp
sar
pusha
mov
movb
mov
stc
test
clc
push
add
call
pushf
popl
mov
mov
call
call
mov
mov
pushf
pushl
mov
mov
lea
jmp
lea
ja
call
jmp
shl
rol
bsf
mov
clc
stc
stc
mov
test
cmc
not
clc
cmc
not
pusha
and
pushf
lea
jge
pusha
mov
mov
movl
push
mov
pushf
popl
call
push
mov
call
test
add
pushf
mov
test
neg
bt
cmc
bt
xor
bt
sub
jmp
xor
call
pusha
call
pushl
mov
jmp
sub
call
add
clc
clc
pushf
test
sub
push
movb
mov
call
jmp
pushl
popl
pushl
pushl
pushl
movl
lea
jmp
push
pushf
call
pushf
call
jmp
call
bswap
shrd
or
lea
mov
bsr
cmc
sbb
dec
mov
adc
jmp
mov
lea
jge
push
pushf
pusha
pusha
movb
lea
jmp
bswap
pusha
mov
push
pusha
pushl
call
lea
jbe
mov
pusha
mov
lea
jmp
shl
sar
shl
mov
cmc
sub
stc
shr
push
push
call
mov
call
not
mov
not
mov
push
divl
pusha
jmp
push
mov
repz
popl
mov
call
repz
popl
pushf
jmp
call
test
pusha
xor
cmp
clc
call
cmc
xor
mov
cmc
sub
cmc
pushf
add
call
clc
add
pushf
pushf
pushf
lea
jmp
push
lea
jne
btr
jmp
mov
mov
mov
lea
jmp
jnp
push
pusha
repz
popl
mov
pusha
mov
pushl
jmp
call
pusha
pusha
push
mov
movb
lea
jmp
mov
pushl
mov
pushf
mov
jmp
mov
call
call
pusha
mov
pushf
mov
jmp
lea
jns
pushf
mov
call
mov
movb
call
push
mov
mov
movw
mov
lea
jmp
pushf
push
pusha
pushf
mov
mov
pushf
popl
pushl
call
not
rcl
mov
stc
bt
pusha
jmp
push
repz
popl
push
pushf
movb
jmp
inc
movb
clc
bt
push
or
push
push
jmp
bt
push
xor
pushf
mov
jmp
cmc
test
add
pushl
movw
pushf
pushf
mov
mov
push
lea
jmp
mov
movb
pushl
pushf
movw
lea
jmp
push
pusha
lea
jnp
pusha
mov
mov
lea
jmp
call
push
call
aas
not
mov
movsbw
stc
mov
cmp
push
test
not
call
pushf
popl
pusha
call
call
jmp
neg
shl
xor
btr
mov
sbb
stc
shl
daa
pop
pusha
mov
pusha
aaa
mov
add
mov
rol
sbb
bswap
mov
setg
cld
shrd
mov
bswap
lahf
shr
aaa
mov
movzbw
bsf
or
mov
bsf
aas
shl
test
mov
rol
pushl
popf
call
mov
push
mov
pushf
movb
lea
jmp
push
mov
mov
movw
pushf
lea
jmp
mov
pushf
mov
jmp
not
mov
push
add
pusha
pushf
mov
pushf
lea
jmp
rep
cmp
mov
btr
call
mov
movzbw
movsbw
movzbl
mov
jmp
stc
pushf
cmpl
call
jmp
bsf
mov
mov
stc
bts
neg
add
shl
sbb
pusha
sub
ror
movw
sbb
not
adc
call
mov
mov
pushl
ret
mov
jmp
bsr
bsr
not
sar
mov
sbb
mov
shr
add
call
pushl
mov
push
pushl
ret
pushl
sub
stc
pushl
movb
bt
add
cmc
bt
cmc
mov
clc
bt
test
call
mov
movb
movb
jmp
jmp
pusha
call
mov
push
push
push
lea
jmp
mov
pushf
jmp
call
