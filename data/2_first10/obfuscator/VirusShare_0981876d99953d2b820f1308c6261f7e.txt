cwtl
rolb
add
add
add
add
std
add
sub
pop
out
add
test
jb
dec
jg
shll
push
mov
fstpl
popf
mov
cs
cld
xchg
pusha
repnz
cmp
mov
int3
aaa
ror
call
and
push
pop
mov
or
mov
ds
mov
fcomps
dec
data16
mov
jne
and
push
lret
pop
pop
call
xor
enter
lods
testl
add
cmp
int
popa
gs
je
ret
out
in
xchg
jns
imul
aas
jo
insb
es
mov
rcrb
cmp
adc
lcall
incl
mov
repnz
js
test
imul
mov
enter
xlat
cs
out
in
push
xchg
shll
outsl
dec
cld
cmp
mov
lods
sbb
mov
push
int
adc
inc
pop
fcoml
in
arpl
cltd
mov
jecxz
and
mov
insl
xchg
pop
xor
mov
dec
sbbl
jecxz
add
insl
sub
pop
pop
sbb
xchg
and
enter
push
test
loopne
call
mov
push
rorb
add
and
ficoml
lcall
mov
jmp
imul
sub
and
xchg
in
adc
mov
push
icebp
js
add
in
cmp
adc
jo
cld
xchg
inc
icebp
cmpsb
mov
addr16
pop
xor
sub
out
lret
mov
mov
push
mov
pop
leave
ljmp
xchg
mov
or
dec
gs
das
imul
aaa
mov
cltd
aad
outsb
dec
ljmp
jno
dec
mov
bound
popf
mov
test
cs
dec
mov
cmpsb
js
xchg
jbe
pop
fadd
inc
xchg
je
push
cmp
jo
cmp
and
hlt
xchg
loop
cmp
out
inc
inc
sbb
xlat
push
or
or
outsl
das
inc
cmp
xchg
inc
push
dec
cmpsb
add
mov
xchg
mov
mov
daa
test
fs
int3
mov
xlat
sbb
push
sub
daa
mov
ljmp
cmp
jbe
imul
xor
scas
adc
dec
popa
cwtl
cmpb
mov
dec
jle
adc
sub
mov
rcrb
pop
cmp
scas
subl
push
negl
push
sub
xor
data16
sub
fsubp
data16
push
cs
dec
xor
and
shl
adc
xor
ss
into
out
push
mov
mov
jmp
lret
pop
add
push
mov
sbb
fdivp
fucomip
cmp
das
test
stos
or
fdivrs
fldl
inc
lcall
mov
icebp
ja
jbe
sbb
aas
dec
and
dec
mov
nopl
lock
sub
sti
fsts
xor
ljmp
fimull
stos
test
jne
sbb
imul
jp
xchg
fsub
cmp
ret
jnp
in
in
and
and
movb
call
fcmovnu
mov
ret
out
nop
push
outsl
jo
test
mov
lret
and
xchg
je
lcall
jecxz
push
mov
xchg
adc
fsubl
insb
fsubs
jecxz
in
push
aas
shlb
lahf
adc
inc
adc
push
add
cmpsl
pop
mov
sti
mov
pop
xchg
inc
inc
dec
mov
push
pop
iret
cltd
pop
sub
inc
test
cmp
push
int3
sub
xlat
cmp
cmp
enter
mov
sbb
fwait
outsb
negb
mov
movsb
xor
ret
js
inc
outsl
fs
leave
mov
into
cmp
mov
insb
in
pop
mov
add
xchg
cmp
cmp
ret
jmp
jb
mov
aad
movsb
sbb
test
mov
pop
xchg
inc
jecxz
cmp
cmp
xchg
mov
sub
push
imul
jno
mov
mov
movsb
sub
into
fdiv
ja
jns
adc
add
iret
loope
cmp
sbb
and
or
pop
pop
test
insl
xchg
lahf
int3
mov
or
js
or
mov
inc
adc
inc
cmc
xchg
out
lret
and
jo
mov
or
insb
fwait
or
and
fsubs
aad
push
shll
push
ds
dec
xchg
loop
lods
enter
test
xor
fwait
dec
mov
mov
imul
ret
push
push
dec
xchg
arpl
pushw
stc
popf
sbb
in
push
sub
pop
mov
cwtl
xchg
bound
jle
and
shll
xchg
js
stc
in
hlt
je
dec
js
jp
sahf
or
sub
push
je
daa
jle
pusha
out
lea
mov
jb
fdivs
pushf
les
icebp
jp
int3
fwait
inc
add
cmp
jge
lret
movsl
out
cli
sbb
mov
push
push
lret
pop
dec
sbbb
testl
jo
sub
mov
mov
iret
mov
push
nop
decl
sbb
loopne
mov
je
adc
adc
push
out
or
push
sub
xlat
jo
add
pop
and
and
pop
pusha
inc
test
inc
pop
mov
imull
add
ficomps
sbb
mov
scas
push
mov
es
mov
jmp
ss
bound
xor
jo
movsb
adc
xor
lock
out
push
les
xchg
lret
inc
pop
popl
mov
inc
adc
push
dec
pop
sbb
pop
popf
xor
dec
inc
es
lret
nop
daa
repnz
add
mov
je
push
pop
sub
push
push
flds
mov
popf
xor
aad
in
cmpsl
or
push
movsb
daa
mov
fsubrl
inc
mov
repnz
or
stos
int3
lret
jbe
and
insb
out
inc
pop
mov
lods
incl
mov
imul
cmp
ret
rclb
push
mov
or
xchg
shl
test
lods
xchg
jae
roll
or
xchg
mov
cmp
cmpsl
and
bound
and
in
push
rol
inc
jno
mov
cvttps2pi
daa
xchg
jp
mov
testb
mov
add
fistps
popf
pop
dec
jno,pn
jp
cmp
jmp
cmp
pushf
and
sub
repnz
rcll
iret
pusha
mov
sbb
jp
in
jne
mov
mov
mov
xchg
loopne
fbld
dec
add
mov
test
ss
aas
enter
scas
sbb
int3
or
push
mov
in
jne
test
jno
int3
jnp
add
sarb
xchg
pop
xchg
aaa
loop
movsl
mov
scas
test
test
push
incb
adc
mov
inc
add
pushl
mov
xor
mov
sub
sub
sub
sub
sub
add
mov
stos
push
mov
lahf
mov
dec
mov
adc
std
fwait
movsb
lahf
mov
mov
push
mov
mov
addr16
or
lret
shlb
aad
ret
dec
xchg
rcl
dec
mov
push
xor
daa
pop
lret
mov
mov
loopnew
inc
ret
fs
jp
inc
adcb
decb
jmp
pop
jo
adc
cmp
dec
test
adc
sbb
push
add
or
aas
adc
dec
add
jae
xlat
imul
mov
push
push
movsb
sarl
xchg
and
sub
hlt
out
sti
xchg
mov
inc
pop
ror
clc
shrb
mov
adc
xor
or
pushf
fcmovnb
addl
sub
jmp
mov
mov
sbb
mov
stos
fs
es
test
cmpsb
push
fwait
pop
sub
pop
adc
in
cld
ja
mov
ja
mov
dec
mov
lret
sub
or
mov
shrb
insb
jbe
lea
add
xchg
push
mov
mov
jmp
inc
push
push
jmp
mul
xchg
mov
lahf
jnp
jg
out
test
addb
and
dec
repz
pop
mov
icebp
rcrb
xor
mov
jp
push
or
es
or
mov
mov
stos
and
push
ja
mov
mov
xor
pop
mov
repnz
mov
xor
test
or
sbb
mov
jb
add
jbe
rcrl
iret
rolb
cmp
sbb
mov
sbb
pop
sub
xchg
out
in
mov
adc
subl
rclb
xor
cmp
int
iret
push
push
jbe
sbb
sub
out
cmp
dec
xor
shr
fsts
inc
pop
aas
fsubl
sbb
int3
aas
xchg
repnz
cli
incl
sub
mov
into
pop
mov
cmp
jnp
fildl
icebp
fbstp
xor
pop
iret
cld
negl
mov
or
push
mov
or
fsubrl
mov
xchg
sarl
int
xorb
out
test
int
mov
ljmp
nop
mov
sbb
jg
mov
add
jbe
sbb
and
cmpsl
mov
push
in
fdivrp
fsubs
lahf
mov
xchg
xorb
iret
and
das
in
xchg
adc
jp
mov
jno
xlat
enter
cld
lret
lret
pop
dec
test
mov
push
adc
popf
std
mov
into
and
mov
xor
outsb
push
loopne
xchg
rorl
xchg
push
dec
mov
and
and
out
mov
mov
xor
sti
mov
in
loop
loopne
cwtl
pop
push
sbb
xor
loopne
fcmovb
xor
mov
sub
imul
and
xchg
lret
lods
or
mov
daa
test
sbb
jp
out
testl
and
movl
fistpll
fadds
mov
and
pop
cmp
jg
mov
movsl
sbb
pop
fildl
xchg
cmp
adc
mov
pop
cli
orb
aas
lods
ds
add
pop
int3
stos
add
push
jb
jp
pop
lock
scas
pop
imul
jbe
mov
mov
push
sub
sub
xchg
add
and
sub
ret
bound
movsb
pop
les
popa
jnp
mov
ss
and
mov
sub
popf
xor
mov
faddl
in
loopne
mov
loopne
pop
sbbl
mov
lahf
cmp
xchg
dec
in
scas
dec
pop
sbb
iret
mov
ljmp
cs
add
adcb
iret
stos
mov
cmpsl
jo
mov
ljmp
cltd
rcrb
xor
test
fidivl
cwtl
sbb
enter
js
inc
inc
imul
movsb
out
fs
push
jnp
inc
hlt
xchg
lret
mov
adcb
or
adcl
push
cmp
dec
les
push
mov
inc
push
std
xchg
mov
ljmp
dec
dec
pop
loopne
or
mov
stos
mov
scas
push
adc
and
fdivs
or
push
imul
jbe
sahf
sbb
mov
ret
pop
sahf
aaa
into
rcrl
test
out
sbb
pop
pushf
xor
jmp
mov
fisubs
out
andl
loopne
add
cmp
shll
imul
mov
add
mov
xor
addl
and
or
dec
mov
xor
and
xchg
jnp
lret
dec
lea
mov
pop
test
pop
lds
add
cmp
push
lahf
jle
or
or
pop
int3
subl
ss
mov
mov
xor
es
std
out
mov
test
scas
fs
mov
xor
mov
sub
stos
pop
mov
and
das
cmc
lock
adc
je
xor
outsl
pushf
cmp
pop
sub
adc
cltd
sub
add
mov
cwtl
dec
movsl
sahf
out
std
je
xor
sub
mov
je
xchg
fbld
cmpsb
repnz
out
cmp
leave
cmp
dec
add
or
fadd
pop
mov
mov
inc
xchg
std
xchg
pop
add
aaa
xchg
inc
dec
add
ljmp
fimuls
outsb
dec
stos
xchg
mov
sbb
push
jmp
sti
sbb
xchg
cmp
rorl
repnz
insb
adc
sbb
push
mov
push
push
mov
loope
ret
adc
leave
inc
lock
out
enter
scas
xor
loopne
add
xchg
lods
jne
push
out
push
outsb
push
inc
loop
insl
fcomps
xor
dec
movsl
idivb
mov
test
leave
jb
pushl
idiv
pop
repz
adc
pop
mov
test
jmp
bound
add
test
imul
popa
sub
xchg
mov
mov
jp
mov
mov
shll
stc
xorl
fsubs
and
aaa
inc
push
ret
sarl
adc
push
ljmp
out
mov
jl
inc
ds
inc
jne
insl
out
dec
jmp
jl
sbb
and
lcall
ret
jle
mov
jmp
repnz
dec
and
imul
loop
rcll
es
js
jle
loope
inc
fbstp
testb
mov
fidivrl
add
mov
imul
data16
hlt
stos
ja
pop
mov
adc
pop
rcrb
lods
jg
xchg
iret
out
out
adc
stos
pop
sbb
out
xchg
loope
add
sub
add
sbb
movsb
adc
int
and
mov
push
call
mov
xor
mov
xor
fistps
inc
loopne
sbb
lret
ljmp
pushf
les
cmp
jle
cmpsl
shll
cmp
or
fs
fdiv
adc
mov
or
loopne
and
and
fisubs
scas
icebp
push
ds
outsl
lock
std
fs
and
lods
jecxz
outsl
cmp
xchg
fucomi
hlt
jo
fs
outsb
sub
pop
repnz
add
ds
and
and
ja
jae
ret
mov
mov
jl
xor
loopne
xchg
jnp
ficompl
adc
stos
inc
pop
inc
jge
sub
mov
or
int
pop
outsb
mov
xchg
inc
jae
and
ret
gs
insl
aas
repnz
mov
and
mov
std
cmc
xor
xor
xchg
aaa
in
pop
outsb
fs
icebp
ret
addb
test
jns
lret
out
mov
pop
mov
sbb
hlt
testl
lcall
inc
adc
adc
ja
mov
xchg
jno
leave
mov
xchg
push
cli
out
dec
cmp
cld
loop
sbb
mov
xchg
in
insb
ret
dec
cmp
jnp
addr16
jecxz
cmp
push
xor
pusha
push
ret
or
mov
lds
pop
adc
mov
pop
jb
sti
adc
xor
cmpb
pop
dec
mov
ret
int3
dec
fcoml
add
sub
push
cli
jne
mov
test
aas
push
ljmp
nop
out
pushf
mov
out
je
sub
mov
push
xor
dec
jl
sbb
xchg
fnstcw
inc
or
test
or
fcomp
mov
pop
and
pop
icebp
pop
ds
outsl
lds
xor
mov
cmp
rcl
jmp
or
lods
xacquire
mov
jns
int3
cli
js
xlat
or
rolb
ja
aas
es
jns
stc
loope
xchg
xchg
popa
jecxz
lcall
xlat
sti
mov
lahf
outsl
aad
xchg
pop
ficoml
insl
pusha
mov
push
out
inc
lret
xor
bound
nop
nop
test
std
jle
and
into
ret
leave
jecxz
jmp
lcall
xor
xchg
shll
pop
adc
pop
mov
cmpsb
subl
mov
adc
and
inc
into
ss
adc
aam
add
popf
mov
cld
lret
movsb
xchg
or
insb
sahf
mov
das
std
lret
in
adcb
inc
pop
sub
sbb
push
imul
or
push
int3
add
lods
arpl
aaa
test
test
push
imul
or
les
stos
adc
mulb
xchg
je
loop
cmpsb
test
les
mov
xlat
add
mov
pop
in
or
rclb
dec
cmp
and
shll
adc
shll
mov
push
mov
pop
mov
test
cmpl
mov
fucomp
cmp
jae
lcall
push
mov
mov
shrl
sub
out
mov
movsl
fstl
cmp
cld
movsl
in
sbb
xchg
jecxz
sti
dec
aad
in
dec
mov
add
push
jmp
outsb
subb
cmp
or
shlb
sub
repnz
adc
stos
mov
and
xchg
incb
fidivrs
xchg
mov
pop
xor
test
dec
call
cmp
pop
mull
jg
push
outsl
xor
fisttpll
data16
adc
mov
xorl
mov
sbb
jg
cmp
loopne
adc
push
mov
rol
jle
xchg
or
in
jmp
popa
clc
xor
push
sbb
adc
bound
stc
push
or
and
push
xchg
ret
scas
fstpt
push
decb
cmp
subb
loope
jae
out
ret
out
ret
inc
repz
loopne
jmp
xchg
sti
arpl
and
repnz
pop
icebp
inc
hlt
jae
test
inc
xchg
lods
mov
or
and
jle
in
and
clc
es
add
pop
sub
mov
xchg
in
int3
subl
mov
hlt
out
mov
cld
mov
lock
cli
movsb
fldl
out
dec
test
inc
fstpt
fldenv
xor
lock
mov
xor
sub
add
loop
xchg
cmp
dec
push
or
scas
loop
cli
sbb
pop
inc
xchg
arpl
dec
lock
cmp
jg
jb
sub
outsb
sbb
add
or
aaa
lahf
dec
mov
mov
rdtsc
nop
sbb
std
or
pop
push
bound
adcl
js
xor
and
push
loopne
aad
cltd
xchg
sbb
push
add
ret
adc
insb
jno
jo
sbb
fstp
int
and
test
ret
mov
stos
popa
push
mov
movsl
xlat
cwtl
mov
sub
lret
lret
fcompl
jo
cmp
xchg
rcl
aas
jp
ds
cs
jg
sbb
inc
or
sbb
jbe
lret
sbb
icebp
insb
stc
and
jecxz
lds
cmp
icebp
adc
js
test
push
outsb
call
inc
push
pop
js
or
insl
mov
mov
add
ficomps
sbb
data16
out
jo
scas
repnz
mov
mov
test
push
jle
xchg
and
into
mov
movsl
stc
imul
or
dec
jnp
xchg
rolb
into
push
in
push
sbb
mov
xchg
xlat
ret
leave
adc
lret
inc
mov
es
repnz
dec
movsb
add
pop
sub
adc
inc
add
push
cmp
ds
cmp
push
xor
cmc
push
xchg
or
cwtl
mov
xchg
sbb
mov
push
test
or
mov
xchg
mov
sbb
fstps
fdivrs
les
orb
or
negb
insb
rcr
or
addr16
or
movsb
lds
rcrl
mov
aad
ss
xor
mov
pushf
jo
add
inc
divb
adc
rcrl
add
xchg
sub
inc
ret
jl
adc
leave
xchg
mov
fwait
sbb
cltd
outsb
lcall
mov
stos
loope
loopne
mov
ljmp
movsl
xchg
lret
out
xchg
icebp
add
mov
push
mov
push
setae
ja
xchg
out
inc
sub
or
mov
push
mov
or
lahf
xchg
hlt
pop
mov
adc
mov
jle
les
push
dec
mov
sub
dec
jne
imul
xor
loope
adc
aaa
ror
mov
fdivrs
and
adc
sbb
adc
xchg
stos
jg
push
data16
jns
out
xchg
mov
xchg
push
cmp
cltd
cs
xchg
test
mov
fwait
inc
or
or
adc
enter
jns
cmp
dec
loopne
jg
out
cmp
and
lock
data16
popa
mov
push
lret
fwait
inc
into
cs
xchg
test
ror
lcall
testb
and
mov
leave
ljmp
push
pop
out
or
push
shlb
fdivp
fs
das
fdiv
push
add
push
mov
sbb
sbb
jns
pop
in
in
push
jbe
cld
fldcw
lock
dec
inc
cmpsl
ret
and
insl
jno
int3
push
cmp
adc
les
push
mov
movsl
jecxz
cmc
adc
arpl
jo
sub
pop
cmp
insl
push
movsl
jns
adc
push
or
cmpsl
pop
clc
add
pcmpeqd
or
ret
sub
std
int
pushf
stos
pop
xchg
push
push
lods
test
mov
imul
repnz
sbb
cmp
fs
mov
scas
in
test
jne
sbb
hlt
cmp
pop
inc
loop
ret
sub
ficompl
push
sub
cld
or
xchg
lahf
fwait
mov
pop
lahf
int
negl
lock
inc
in
and
jge
fisubrs
dec
popf
xchg
sbb
dec
xchg
mov
or
adc
sbb
popf
push
aaa
orb
push
out
das
iret
jmp
dec
and
and
ss
push
fisubs
inc
ljmp
mov
mov
jmp
mov
push
test
ljmp
shrb
adc
les
jle
adc
jns
scas
jbe
in
sahf
shll
add
test
mov
ja
inc
mov
pop
testl
xor
sub
dec
push
test
jmp
adc
xlat
inc
pusha
push
push
arpl
sbb
fidivl
mov
lods
inc
pop
addr16
adc
inc
pop
dec
jne
pop
and
pop
push
adc
scas
mov
pushf
cmpsb
dec
test
mov
test
cmc
mov
xor
lahf
mov
mov
mov
int3
shrb
cmp
jnp
stos
or
int3
cmp
out
incb
dec
nop
xor
cs
icebp
cmp
jbe
adc
loop
stc
mov
fcoms
xchg
mov
imul
icebp
cld
scas
push
push
leave
cmc
lods
test
rolb
sbb
lret
pop
ret
mov
hlt
xor
xchg
fcomps
inc
das
adc
nop
cmp
fcoms
ljmp
sbb
jmp
fucomip
and
jl
cmp
inc
sub
adc
dec
bound
lods
cmp
push
sti
mov
adc
std
hlt
enter
mov
ss
inc
add
jo
xor
ds
mov
add
add
pop
pop
mov
dec
int
test
nop
sub
mov
xor
xor
data16
pop
cmp
pushf
mov
push
xlat
cmpsl
pop
mov
mov
les
inc
sub
in
push
xchg
mov
xor
testb
xchg
and
inc
ljmp
push
insb
push
dec
add
dec
out
dec
repz
popl
xchg
arpl
dec
jnp
xchg
inc
jmp
mov
setne
adc
lcall
enter
or
cmpsb
sub
inc
ret
pop
fstl
pop
div
mov
repnz
sahf
pop
inc
jbe
mov
push
shrb
inc
jg
jle
jb
cwtl
xchg
hlt
xchg
lea
leave
inc
and
mov
ja
inc
mov
or
int3
js
sbb
push
into
pop
addr16
aad
scas
xor
jp
adc
push
iret
fdivs
push
shlb
int
mov
ret
ret
adc
jl
xor
ficoms
adc
cmpsb
sbb
xor
mov
xchg
xorb
xor
or
jne
xor
adc
add
call
xchg
mov
pop
fisttps
lret
jbe
inc
mov
and
jnp
cmpb
insb
in
in
mov
jmp
dec
fcom
test
scas
fldcw
stc
lret
mov
addr16
pop
fimull
arpl
add
sub
fidivl
jnp
pop
fstpl
pop
cli
push
shlb
push
stos
les
fwait
lea
mov
shll
outsl
push
sub
cmpl
aad
mov
dec
jno
pop
addl
mov
pop
add
mov
mov
dec
xorb
int3
xchg
in
out
add
inc
jmp
rcll
bound
xor
sbb
aaa
push
and
repz
and
or
icebp
xchg
arpl
xor
inc
inc
pop
or
lret
fcoml
std
pop
jge
scas
jns
xchg
jle
or
mov
cmp
inc
int
lods
cmp
sbb
cld
pop
clc
adc
push
fldl
xchg
cmp
mov
cli
and
pcmpeqd
rclb
mov
lret
jecxz
cwtl
loopne
call
ja
mov
jl
std
adc
faddl
les
inc
ficoml
pop
adc
arpl
out
push
subl
jge
xchg
sbb
rolb
int
xchg
adc
imul
dec
mov
inc
outsl
fsincos
and
push
pop
lock
add
add
inc
sbb
je
or
jae
lret
mov
mov
out
pop
push
dec
dec
xchg
stos
sub
mov
mov
jecxz
neg
mov
mov
cli
jecxz
sub
popa
loope
add
arpl
adc
mov
jae
je
ja
mov
popa
pop
ret
loop
and
out
out
aad
in
adc
xlat
addr16
adc
mov
je
jp
mov
mov
das
xchg
mov
sbb
repz
jns
sbb
fdivl
or
xor
cmp
xor
push
jmp
call
mov
lret
sub
scas
leave
jmp
lods
mov
jae
stos
push
mov
stc
xchg
cmc
dec
outsl
stc
je
lret
ret
stos
sub
pop
das
lea
outsb
xor
incb
push
cmp
rcrb
cmp
cmp
xchg
dec
in
in
adc
in
stc
pop
cltd
sbb
lods
push
cmp
mov
xchg
jmp
lret
int3
inc
and
in
inc
out
sub
or
adc
push
push
shlb
inc
cwtl
shlb
jno
shll
xor
push
stos
sahf
dec
sti
pop
stc
mov
xor
addr16
into
int
cmc
push
stc
insl
js
shll
pop
lea
mov
out
pop
mov
lods
outsb
mov
sub
shl
dec
sub
inc
andl
lcall
rol
and
insb
out
movsl
in
xchg
das
mov
add
loop
test
add
push
jl
sarb
add
jb
mov
push
rcrl
mov
inc
push
cmpsl
xor
fimuls
sub
and
xchg
dec
jg
jo
xlat
out
fs
in
or
ret
xchg
js
test
fs
fsubl
adc
jbe
daa
push
or
int
push
cmpsl
jmp
outsb
jo
inc
jg
adc
xor
mov
addr16
insl
lea
sub
dec
fmull
in
cmp
adc
out
inc
scas
push
mov
mov
mov
pop
jb
xchg
cmc
mov
jns
lahf
testb
dec
sbbb
hlt
pop
in
jmp
fiaddl
scas
push
adc
inc
popf
jmp
jmp
ds
outsb
pop
ja
xor
jns
iret
push
inc
mov
in
jge
insb
roll
pushl
arpl
push
jecxz
dec
ss
fisttpl
je,pt
loope
mov
dec
inc
mov
loop
fildll
mov
inc
push
jge
jns
and
pop
inc
or
add
xchg
xor
cmp
out
call
mov
sti
push
je
adc
insl
vpmulhw
popf
jns
or
push
nop
mov
fndisi(8087
xchg
mov
loopne
sub
push
push
stc
inc
adc
cwtl
stos
push
xchg
dec
or
imul
jge
sbb
popf
push
cs
imul
pusha
loop
cli
inc
jg
les
pusha
dec
scas
xchg
mov
stc
pusha
js
ds
dec
roll
sbb
shrb
push
pop
in
sti
test
mov
fmulp
sbb
loopne
into
dec
imul
mov
mov
jl
fsts
adc
in
ficompl
mov
sbb
cltd
mov
or
bound
sbb
jl
shrb
repnz
arpl
adc
lods
xchg
push
ja
sti
shl
dec
daa
dec
comiss
cmpsl
test
mov
dec
push
or
xor
cld
stos
std
je
xchg
xchg
imul
xchg
jl
and
dec
daa
orl
sbb
arpl
adc
in
bound
lods
mov
or
movsb
rcrl
push
sbb
mov
push
push
adc
imul
dec
repnz
xor
pop
mov
jne
push
cltd
xchg
call
and
xchg
cmp
xlat
adcl
cmp
out
dec
push
jge
sub
repnz
je
sub
mov
sbb
mov
xor
and
pop
roll
call
mov
mov
adc
xor
mov
movsb
push
inc
sti
outsb
xor
insl
sbb
in
clc
add
loop
pop
movsb
test
xor
imul
sarb
mov
cmpsl
dec
xchg
hlt
adcb
ret
push
dec
clc
imul
dec
cwtl
add
lds
test
mov
push
gs
mov
jmp
pop
adc
dec
loop
ljmp
movsb
cmc
pusha
push
mov
or
pop
outsb
jl
mov
outsb
xorl
mov
fistps
test
mov
dec
dec
xchg
jp
add
iret
addr16
cltd
dec
pop
pusha
jmp
lods
xchg
push
mov
xchg
mov
or
jmp
int
ret
in
cmp
mov
and
jmp
inc
int3
mov
push
jle
push
arpl
enter
xchg
jl
int
lods
in
or
test
mov
push
cmp
mov
data16
sbb
mov
or
lret
in
in
les
inc
add
popa
into
popa
adc
mov
add
insl
push
jmp
or
mov
or
decl
lock
mov
std
cltd
int3
aas
sub
sti
iret
mov
adc
in
fwait
mov
sub
mov
adcl
pop
enter
and
dec
movb
push
leave
sbb
dec
mov
inc
mov
fisttpll
outsl
pop
jmp
xchg
les
orl
jle
push
add
ljmp
sub
gs
roll
imul
dec
inc
cmp
movl
ret
pop
hlt
aad
int
inc
cmp
out
xor
fcmovu
fwait
call
add
and
or
les
and
xchg
adc
enter
fwait
mov
push
cmp
insl
xchg
dec
push
jl
jne
add
sahf
adc
xor
inc
lods
stc
leave
daa
pop
mov
test
push
adc
jl
ss
cmpsb
xor
mov
imul
ja
mov
stc
jmp
outsl
jmp
mov
xchg
inc
mov
jae
mov
gs
xlat
adc
lahf
jno
add
das
inc
stos
push
dec
sahf
rcll
mov
push
xor
fcmovb
inc
aaa
sbb
in
dec
xchg
imul
mov
cmp
jp
mov
cwtl
dec
sub
call
mov
aam
rcll
outsb
mov
enter
hlt
mov
adcl
sti
cltd
push
js
shrl
push
daa
ljmp
xchg
mov
rdtsc
xchg
clts
or
xor
sar
adc
or
inc
adc
insb
or
pop
jne
out
jo
enter
jmp
cmp
jae
outsb
les
push
cmp
xchg
ret
push
cmp
enter
push
fwait
dec
pushf
push
sbb
rorl
cmpsb
mov
cmc
insl
or
cmc
cld
jne
push
es
stc
pop
mov
scas
dec
mov
cmp
out
jp
stos
adc
pop
inc
add
andb
not
popf
xor
mov
cmc
inc
cmp
adc
cmpsl
xchg
aaa
imul
xor
sub
loop
loopne
mull
aad
and
roll
notl
mov
dec
subb
adc
call
sbb
js
or
or
pushf
jg
sbb
call
push
mov
jns
jbe
movsl
push
data16
loop
ja
push
ret
xor
insl
stos
je
dec
jmp
mov
int
cmc
adc
gs
add
mov
arpl
leave
lock
sahf
sbb
lret
dec
dec
xor
jns
sub
clc
xchg
pushl
xor
xor
lahf
xchg
test
out
pop
sub
imul
out
jae
pop
cmp
out
inc
xchg
outsl
push
jb
push
adc
add
pop
repnz
arpl
lock
loop
mov
outsl
sub
adc
mov
add
or
mov
xor
xor
test
cmc
or
dec
testb
popa
ss
int3
jno
sbb
scas
repnz
jmp
mov
mov
adc
popa
mov
incl
enter
fmuls
sbb
jnp
andb
inc
mov
jmp
sbb
in
mov
inc
cmp
pusha
jnp
sub
test
das
or
aas
push
cmp
push
jae
inc
dec
cld
mov
sahf
imul
xor
repnz
repnz
jecxz
mov
out
mov
inc
xchg
xchg
xchg
daa
clc
popf
fisttpl
popl
mov
mov
jo
dec
out
cmp
pop
lahf
xlat
ljmp
and
pop
fwait
mov
dec
push
int3
cwtl
outsb
aam
imul
movq
jb
sub
insb
mov
rorl
push
out
cmp
xor
stc
inc
js
cmp
mov
les
imul
dec
pusha
mov
test
cmpsb
xchg
in
mov
mov
test
imulb
sbb
aaa
popl
dec
cmpsb
mov
hlt
fwait
pop
test
outsl
jnp
hlt
in
ffreep
sub
and
cld
cmpl
call
insl
mov
nop
inc
adc
test
rol
adc
xchg
pop
cmp
lds
lahf
mov
dec
mov
mov
bound
jbe
adc
mov
int
in
pop
insb
pop
add
std
lahf
outsb
mov
bound
sahf
jae
fwait
repz
psrlq
cmp
jecxz
or
dec
fdivs
or
js
mov
mov
imulb
out
movsb
addl
aaa
scas
add
sahf
and
in
inc
scas
pop
push
adc
jne
mov
lcall
xchg
dec
in
pushf
fidivrl
std
mov
into
test
mov
push
push
arpl
and
inc
pop
pop
pushf
mov
jmp
lret
cmp
jnp
lret
mov
enter
ljmp
in
aas
push
in
xchg
or
movsl
xor
jmp
test
in
loop
jae
pop
jg
rolb
in
into
jne
mov
push
int3
dec
mov
mov
scas
xorb
test
in
out
push
rclb
js
sbb
jnp
or
lods
sarb
dec
gs
shlb
pusha
lods
xor
stos
pop
jb
jmp
mov
lds
cmp
nop
aas
neg
mov
test
mov
mov
popl
cli
push
into
jno
push
xor
sub
aaa
cmp
jmp
xor
cmp
xchg
or
int3
loopne
in
adc
inc
insl
jle
adc
xor
fisubl
sub
cltd
and
jb
push
std
imulb
leave
lock
cmpsl
int3
xchg
mov
mov
aad
jne
sbb
int
jmp
fsubrl
mov
sub
cli
negl
cli
int3
ja
sahf
adc
aam
or
rcrl
or
sbb
test
cmp
test
hlt
mov
incl
mov
enter
dec
stos
jl
xor
jle
ret
pop
jp
and
cmp
xor
inc
or
push
mov
pop
adc
arpl
insl
xor
cltd
xor
fxch
lock
aad
jns
jge
mov
scas
gs
pushf
mov
mov
stos
pop
int3
call
push
mov
popf
adc
pop
inc
jp
inc
push
sbb
dec
pop
fdivs
sbb
jo
out
scas
std
dec
add
and
mov
cmp
nop
test
in
lods
inc
cmp
ret
cmp
jecxz
sar
fmuls
aad
inc
mov
xor
add
rol
in
xchg
jns
and
xadd
fldl
divl
inc
movsb
mov
cltd
inc
inc
jno
pop
es
adc
test
das
cwtl
fs
fistl
xor
and
cmp
pop
ja
xchg
insl
push
fistps
sub
xchg
jne
fcoms
sub
movsb
xorl
mov
cmp
inc
fsubp
addr16
xchg
add
hlt
pushf
dec
lret
fimuls
out
ret
mov
push
nop
loop
sub
xchg
push
or
rorl
jp
imul
push
cmp
scas
je
fwait
hlt
fwait
pop
filds
cli
mov
mov
ljmp
push
mov
call
inc
add
call
cmp
push
add
insb
push
rorb
ljmp
jmp
adc
jg
popa
adc
pop
sbb
outsb
mov
scas
jg
into
sub
jns
test
add
ss
out
or
sbb
jl
dec
ljmp
sbb
jns
mov
out
movsb
xchg
hlt
fcmove
jg
rclb
inc
mov
sbb
and
push
popa
push
cmp
dec
test
fisttpl
inc
sub
mov
push
xor
je
imul
sbb
fistpl
je
in
icebp
lock
ret
pop
sahf
push
sbb
es
mov
addr16
aas
test
add
xchg
int3
xchg
lcall
popa
sbb
je
mov
outsb
xchg
loope
pusha
jo
ret
repnz
pop
sub
mov
jmp
popa
cmp
xlat
or
test
daa
mulb
repz
add
cltd
fisttpll
and
inc
jb
push
in
repz
xlat
loop
das
adc
pop
int3
and
imul
int3
cmpsl
fnstcw
out
daa
mov
sbb
pop
sub
pop
cmp
sbb
scas
or
fistpll
ja
fwait
aas
mov
cltd
xor
inc
add
fucomp
dec
out
pop
cmpl
addr16
cmp
mov
rcl
sbb
call
cltd
pop
hlt
push
mov
lret
push
repnz
pop
aam
outsl
je
cwtl
notl
xchg
je
mov
int3
sbb
imul
sbb
mov
enter
lret
mov
jno
sub
xchg
mov
jnp
btr
xchg
shrl
sti
and
daa
xchg
mov
movsb
rep
out
cmp
ds
das
adc
pop
sti
sbb
inc
test
and
jp
ret
adc
pop
push
call
mov
sub
aam
hlt
divb
cli
mov
mov
fisttps
add
outsl
test
xlat
push
fisttpll
sbb
jle
insl
aaa
pushf
inc
ja
and
mov
mov
and
dec
ffree
push
add
fwait
and
int3
idiv
cmovbe
pushf
cmp
rcrb
push
jge
sbb
cmp
mov
add
pushf
mov
std
sub
add
mov
push
and
pmaxsw
sbb
fildl
into
pop
pop
std
fs
lods
jno
and
enter
iret
sti
inc
iret
insb
sub
icebp
sub
mov
jns
jmp
gs
imul
sub
movsl
mov
loope
dec
mov
mov
cmp
out
dec
les
lea
repz
adc
movsb
push
jbe
lahf
cs
pop
outsl
sbb
sub
pop
ss
mov
and
dec
insb
jb
jp
xor
lret
and
inc
into
push
jne
test
pop
dec
shll
or
mov
addr16
shl
sbb
pop
inc
mov
cmp
cmp
jl
lahf
js
adc
sbbl
pushf
push
fstps
push
or
fwait
adc
jmp
mov
and
inc
adc
add
mov
cmp
mov
std
add
jns
ss
ja
in
notl
push
imul
cld
hlt
cmp
aaa
dec
jg
arpl
js
adc
lcall
pop
jg
adc
test
repnz
and
push
jmp
jge
sbb
nopl
test
popf
or
push
stos
pushf
psubd
cmpsb
out
mov
jae
insl
pop
pop
aam
mov
mov
int
cmp
mov
mov
mov
mov
dec
pop
xor
jb
sbb
dec
lea
loope
int3
imul
or
js
jns
xchg
push
mov
daa
jle
cwtl
stos
shlb
xchg
sti
es
aas
push
jb
add
jbe
xchg
cmp
jge
mov
xchg
int
bswap
xor
push
sub
inc
xchg
push
push
mov
sbb
daa
clc
ja
sub
sub
mov
movsb
ret
sbb
pushf
fisubrl
ljmp
ret
cltd
int3
add
cli
int
adc
cmp
inc
sub
mov
mov
xor
cltd
sub
out
jecxz
aad
rcll
xchg
xchg
jle
icebp
cmp
or
jg
imul
inc
loope
add
push
jp
jnp
mov
loopne
add
ja
xor
mov
cwtl
addr16
ljmp
shll
loopne
in
sbb
push
xchg
clc
rolb
insb
cmp
fbld
insl
jns
ja
icebp
in
test
pop
push
in
sbb
dec
xchg
push
inc
add
ss
push
orl
sbb
xor
ret
xor
ds
aas
push
mov
test
movsb
lcall
scas
bswap
insb
pop
mov
pop
cmp
sub
test
xchg
inc
xchg
and
test
adc
shll
mov
fadd
and
fisubrs
sbb
stos
cmpb
and
push
shlb
fnsave
sahf
test
cld
aam
mov
bound
xchg
xchg
push
test
or
mov
ds
cmp
in
sahf
or
mov
stos
sbb
movsl
or
sahf
sub
add
sub
fadd
jbe
xor
jecxz
test
pop
add
push
adc
push
aas
iret
push
into
adc
pop
js
sti
pop
mov
mov
add
add
add
xlat
je
mov
push
mov
lcall
mov
cmp
adc
sub
adc
jp
in
sub
mov
and
xor
fsubrs
push
jb
mov
pushf
pop
sub
out
and
fstpl
fyl2x
cld
cld
sbb
sub
inc
mov
cmp
mov
xor
push
aad
cmp
and
mov
push
or
jo
mov
jno
add
mov
xchg
pop
jns
xchg
mov
in
fsubrp
mov
dec
xor
bswap
je
adc
outsb
sbb
sub
cwtl
ret
or
mov
mov
int3
lods
sbb
in
dec
jp
xchg
sub
test
dec
cltd
mov
roll
push
add
xchg
jne
mov
sub
rolb
add
add
in
int
shrl
dec
sahf
das
xor
sub
push
mov
jnp
fwait
movsb
fiaddl
lret
xchg
loop
mov
roll
subl
loop
push
adc
mov
imulb
ds
sahf
inc
jmp
dec
loop
mov
dec
push
jge
inc
adc
shrb
test
xchg
lahf
dec
popa
push
out
popf
in
out
adc
repz
in
lds
jecxz
cmc
or
test
les
jns
sarb
push
fldenv
ret
fstpl
dec
mov
pusha
pop
mov
enter
push
stos
mov
mov
in
jae
out
cmpsb
pop
pop
pop
cltd
loope
adc
mov
das
ret
arpl
shlb
and
adc
aas
lock
fmull
cmp
aas
fidivs
xchg
ja
push
sahf
inc
jo
mov
iret
movb
fcomip
inc
or
fstpt
cltd
mov
mov
dec
adc
mov
push
dec
jmp
es
out
dec
repnz
push
cld
mov
pop
jae
cmp
jmp
mov
loop
add
jo
xor
into
loop
decl
les
dec
pop
push
test
and
lcall
scas
clc
inc
fwait
into
jno
pusha
loop
sbb
rorb
enter
dec
mov
add
es
aaa
add
iret
dec
pop
lcall
cld
lods
add
fcompl
outsl
mov
test
adc
xlat
and
jle
or
jbe
mov
add
sbb
sub
test
xchg
loope
xor
cmc
out
test
aaa
ret
scas
lret
cmp
sub
ljmp
imul
sbb
sbb
in
sti
cltd
jl
or
add
jecxz
jmp
push
cmp
jnp
ds
lret
add
fistl
stc
ret
stos
fs
sub
mov
nop
fs
push
pop
mov
push
xchg
xor
xlat
add
mov
mov
test
xchg
cmp
loop
jno
cmp
mov
daa
mov
xchg
addr16
jle
jg
cli
cmp
addl
pop
nop
xchg
int3
mov
push
push
dec
outsb
arpl
pusha
and
and
adc
sbbb
xchg
lock
push
std
and
fmull
add
or
loopne
int
jo
faddl
inc
fnstenv
lock
aad
pop
cld
jle
shll
adc
pop
repz
stc
pop
xchg
push
repnz
xor
sbb
pop
add
out
popf
int
inc
mov
pop
push
mov
pop
push
pusha
jp
lret
adc
mov
mov
cmpsl
xchg
je
sub
lock
imul
sub
jmp
popf
ret
xchg
dec
out
stos
pop
in
mov
mov
jnp
pop
xchg
call
getsec
ficomps
shlb
inc
mov
inc
cmpsl
inc
movsl
sbb
xor
call
mov
in
dec
lds
and
push
addr16
and
pop
fdivs
stos
push
sbb
pop
push
adc
ret
inc
push
out
out
sahf
stos
pop
inc
xchg
and
fldl
add
in
stc
lea
pop
fildll
adc
popa
sbb
jns
mov
das
repnz
cmp
and
hlt
in
sub
lret
out
in
addr16
adc
mov
ja
fsub
ja
rorl
insl
aam
outsl
add
add
pop
cld
lahf
sbb
aas
cmp
xchg
call
mov
ficoms
sbb
fists
mov
jo
adc
push
jb
int
cwtl
push
adc
repnz
or
and
fcmovnbe
dec
mov
adc
push
adc
mov
insb
movsl
fs
into
jne
mov
inc
push
popa
inc
xor
cmp
push
rol
jmp
dec
push
and
subb
or
loop
mov
xor
add
arpl
dec
push
add
xor
xor
add
dec
jb
sub
rorb
imul
push
mov
ret
add
outsb
push
adcl
jmp
in
mov
push
dec
cmp
ror
aaa
jmp
push
and
or
adc
push
lcall
mov
sbb
and
push
xor
sbb
or
pop
out
popf
push
ret
sub
stos
cwtl
fucomi
push
daa
inc
sbb
shll
xorb
xchg
pop
aad
jbe
pop
inc
je
dec
lahf
popf
cmc
aaa
mov
je
cmp
mov
sahf
jns
test
mov
inc
cmpl
xchg
mov
cmp
xchg
inc
and
and
aas
aas
fidivrl
fisttpll
push
mov
mov
aas
adc
cmpsb
arpl
xchg
jb
pop
push
add
and
sub
gs
imul
insl
fst
movsl
std
lods
mov
mov
cwtl
pop
daa
or
sbb
out
daa
mov
dec
fistpl
or
or
icebp
stos
xor
lds
icebp
and
divl
xchg
push
dec
push
sub
and
pop
push
or
lcall
cmpsl
test
out
test
cmp
xchg
cwtl
cmpsl
xchg
fnstenv
gs
cli
add
lds
icebp
cli
mov
scas
test
mov
sbbb
test
sti
sub
subl
faddl
inc
fistps
dec
mov
mov
sub
jl
outsb
add
in
in
inc
pop
mov
pop
je
movb
xchg
xor
inc
enter
andb
adc
gs
xchg
push
scas
mov
add
jl
mov
pop
cmp
sti
pop
cs
or
mov
push
or
jmp
inc
pop
jnp
test
inc
push
sub
xor
push
cmp
and
popf
pusha
dec
cmc
pop
cmp
je
leave
cltd
pop
sbbb
xchg
jnp
sub
dec
push
add
orl
pop
add
xor
jmp
mov
inc
push
xor
das
popa
xchg
ss
push
popf
fmuls
movsl
sbb
cmp
cli
mov
and
mov
mov
sbbl
data16
pop
lock
in
inc
adc
push
xlat
outsl
add
mov
pop
xor
mov
adc
ret
push
daa
enter
addr16
addr16
repnz
mov
lods
fwait
and
jno
push
pop
mov
hlt
outsl
jns
lret
cmp
sub
popf
mov
sub
jb
jb
jo
lahf
cmp
pop
pop
imul
mov
ffree
data16
movsl
xchg
lcall
pop
mov
xchg
mov
out
stos
dec
stos
outsl
push
shrd
add
jmp
mov
push
enter
aad
cwtl
lret
and
push
xor
pop
lea
pop
add
mov
xor
sti
push
xchg
repnz
loop
or
icebp
aaa
stos
testl
out
mov
fstps
fbld
ja
jb
push
add
xor
ret
and
mov
fidivrs
mov
cwtl
cmc
bound
cmc
inc
mov
scas
imul
test
pushf
mov
xchg
xchg
xchg
not
sub
xor
loop
es
xchg
add
xchg
insl
neg
js
pop
jae
in
cmp
fistpll
mov
sbb
aas
popf
mov
lahf
inc
lcall
je
and
cmp
jnp
in
cmp
cmpsl
arpl
mov
sahf
aad
subl
test
mov
popf
inc
mov
inc
cmp
enter
jno
sbb
ds
popf
popl
fcomp
push
xor
mov
scas
cli
cltd
or
mov
outsb
cs
pop
jo
nop
js
jb
test
mov
mov
imul
test
pushf
add
mov
or
push
cmp
std
movsl
sub
push
mov
incl
mov
push
xchg
pusha
mov
or
sub
push
imul
xchg
in
mov
rolb
jp
rcrb
sbb
enter
ret
ds
mov
sbb
fbld
dec
cmp
lock
dec
test
push
sub
scas
lods
xor
lahf
mov
je
movsb
fisubrs
jmp
push
rcr
movsb
add
jno
stos
jbe
fcoml
push
or
cld
push
hlt
and
fimull
andl
mov
dec
xchg
into
mov
xchg
dec
add
mov
jle
sub
inc
scas
addb
out
mov
or
sahf
clc
mov
pop
sahf
adc
xchg
mov
jg
loop
jl
mov
cld
insl
sbb
mov
lcall
jmp
xchg
es
and
lods
xlat
or
outsb
jle
sets
and
rol
or
es
cld
cmp
jbe
rolb
mov
repnz
adc
adc
inc
dec
imul
or
sahf
dec
sub
xlat
std
xor
loop
inc
shlb
jl
fldenv
mov
aad
fldenv
dec
mov
jmp
btc
push
fimull
and
sbb
cmp
or
mov
lret
sub
test
cmpsb
mov
leave
arpl
cmp
adc
je
sbb
xchg
stos
jns
mov
pop
ret
je
fidivrs
mov
movsl
dec
jne
pop
push
pop
push
pushf
and
cmc
les
xchg
adc
cltd
lahf
fdivs
sub
add
add
sbb
cmc
inc
sbb
add
add
add
add
add
and
add
pusha
add
addb
add
sbb
cmc
inc
sbb
add
add
add
xor
add
add
addb
add
sbb
cmc
inc
sbb
add
add
add
add
add
push
add
add
or
add
add
add
add
add
ret
cmc
inc
sbb
add
add
add
add
add
js
add
sbb
cmc
inc
sbb
add
add
add
add
add
nop
add
add
add
adc
add
mov
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rolb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
incl
add
add
incl
add
add
add
and
add
add
add
jne
add
add
add
rorb
add
add
add
pusha
or
add
lcall
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
and
xor
cmp
cltd
orl
inc
xchg
in
ss
fdivrs
mov
sub
and
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
addr16
or
or
push
pusha
or
sbb
cwtl
rorb
test
add
xchg
adc
ret
adc
and
adc
push
rorb
sbb
xchg
rorb
xchg
add
adc
push
push
mov
push
pop
push
push
inc
sbb
sub
lea
inc
cld
add
cmp
lock
ficoms
jecxz
dec
sbb
push
lea
stos
movsb
add
nop
cmpl
je
shlb
cmp
and
inc
sbb
in
sbb
pushf
lea
push
xor
sbb
call
xor
mov
sbb
jae
and
xchg
popa
aaa
and
push
call
hlt
sub
xchg
shrl
mov
push
add
xor
leave
or
mov
inc
and
shrb
mov
lea
mov
test
push
push
and
sbb
mov
aas
das
mov
sbb
cmp
inc
mov
aas
shrb
or
mov
mov
inc
or
aaa
ficoms
and
loop
inc
mov
add
test
xor
int
and
inc
and
jecxz
dec
ds
xor
sbb
dec
cmpsb
cmp
adc
add
pop
pop
pop
pop
ret
shll
mov
pop
sub
loopne
push
add
adc
xchg
and
xchg
xchg
push
mov
sbb
xchg
sti
sbb
push
push
negl
ret
push
enter
xor
pop
add
add
in
mov
push
jne
lds
cmp
int
rcrl
adc
lods
inc
mov
mov
jmp
hlt
cltd
and
icebp
pop
push
or
rcrb
or
xor
pop
dec
cs
add
movzwl
test
jge
push
cmpsl
xchg
sarl
popl
adc
cmp
iret
jge
dec
push
inc
sbbb
cld
cmp
je
dec
mov
jne
sub
ret
shr
or
rclb
les
sub
movb
inc
or
enter
mov
outsb
cmp
stos
xor
and
push
cltd
pop
test
js
loopne
pop
push
mov
adc
push
xor
flds
data16
jbe
push
jo
cmpsl
inc
pop
lds
push
push
cmp
pop
std
cmc
daa
aaa
push
sub
int
inc
in
bound
jae
pop
jge
sub
xchg
clc
rorl
sub
decl
cli
movsb
push
in
roll
stos
loop
adc
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
mov
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
cmp
in
aas
rorb
enter
pop
mov
mov
xor
ljmp
fsubr
lret
sbb
cli
cmp
jne
push
stc
jmp
push
fisubl
movl
loopne
sub
pushf
movsl
dec
pop
push
jb
fimull
sub
sub
lret
mov
add
bound
cmpb
pop
mov
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
lret
mov
mov
adc
mov
jo
out
mov
aas
dec
inc
dec
test
ret
and
jmp
dec
push
and
fdivl
mov
mov
rcrb
testb
add
push
movsb
jg
test
cmp
push
jmp
adcl
inc
jecxz
cmp
pop
lcall
dec
stos
cmp
lods
jmp
mov
push
cld
adc
add
xor
icebp
mov
adc
dec
or
push
inc
jmp
mov
cld
pop
ror
or
inc
cmp
mov
jl
sbb
sub
jmp
push
lea
sahf
jne
iret
or
cs
testb
mov
inc
push
xchg
cmp
lcall
inc
cwtl
sub
scas
jno
or
push
lea
jmp
sti
xor
pop
pop
cmpsb
shrl
cmp
pop
subl
bound
adc
popa
je
pop
outsl
outsb
and
push
fsubr
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
xor
cmp
popa
jnp
push
inc
outsl
js
emms
jnp
sbb
data16
mov
aas
inc
js
je
push
nop
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
mov
insb
sbb
jl
imul
mov
hlt
arpl
jmp
push
mov
cltd
bound
xchg
inc
xchg
pop
pop
int3
pop
cmp
enter
cmp
mov
imul
adc
fwait
jmp
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
adc
add
or
add
adc
add
rcrl
add
push
or
inc
add
add
fs
pop
test
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
