int3
jmp
ljmp
add
add
add
add
jmp
cld
inc
xor
jmp
jmp
push
or
aaa
add
add
mov
outsb
ret
jmp
ret
mov
mov
jle
jmp
int3
aaa
insb
mov
jl
sbb
arpl
add
outsb
fisubl
adc
jmp
push
dec
test
jmp
addr16
imul
sub
add
add
out
out
out
jmp
cmp
adc
add
add
jmp
jmp
jmp
jb
inc
jmp
adc
sbb
and
jmp
pop
fidivrs
jl
sbb
testl
add
movsl
jmp
lods
sbb
and
jmp
adcl
xchg
dec
push
jmp
lcall
mov
stc
or
add
cmc
jmp
and
push
lcall
add
mov
fidivs
xor
int
add
insb
adc
in
test
jmp
sub
pop
jmp
dec
in
jl
stos
test
jmp
dec
sub
fsubrl
pusha
jmp
popl
pop
push
jmp
jmp
mov
push
or
add
xor
jmp
jle
cld
loop
pop
jmp
cmpsb
ss
aad
jmpw
add
jmp
pop
pusha
mov
jmp
pop
mov
push
add
inc
test
cmpl
jmp
sbb
jae
jmp
jl
adc
mov
add
sbb
push
out
repz
rcrb
insb
add
jmp
mov
add
add
cltd
or
add
cmp
jmp
dec
dec
insb
sbb
je
and
mov
add
imul
call
jmp
pop
and
stos
jmp
inc
test
test
pop
add
cltd
and
lret
add
jmp
mov
push
add
add
xor
add
int3
jnp
jmp
sarb
jbe
pop
jmp
pushf
loopne
sub
rep
jmp
ja
xchg
pop
cmpb
jmp
or
xchg
clc
call
jmp
push
sub
roll
add
jmp
mov
jmp
push
in
pop
cmp
pop
or
add
movb
add
mov
je
jmp
lahf
call
jmp
inc
mov
push
push
add
xor
mov
jmp
push
sub
jmp
ret
pop
lock
jmp
mov
add
add
movswl
jmp
mov
movsb
add
add
cmp
mov
jmp
aam
inc
jmp
push
mov
out
push
jmp
push
mov
and
and
orb
add
jmp
std
mov
jmp
rcr
bound
out
jmp
push
xchg
fimull
add
push
sbb
add
jne
xor
jp
jmp
jb
fcoml
loop
mov
jmp
pop
mov
mov
jmp
push
ss
nop
mov
add
cmp
popa
jmp
es
sbb
movsb
mov
jmp
hlt
lret
mov
jmp
es
pusha
std
jne
jmp
mov
or
add
cwtl
aas
mov
or
cmp
jmp
jmp
jl
add
jmp
and
add
jmp
push
lret
jns
jmp
push
orl
pop
call
jmp
add
test
jmp
movsb
push
jmp
add
add
jmp
fs
xor
shr
add
add
je
push
sahf
pop
mov
jmp
mov
sti
push
pop
jne
jmp
lods
mov
jmp
pop
lods
mov
push
call
jmp
adc
pop
jmp
and
in
cmp
cmp
jmp
cmp
sub
jmp
mov
mov
jmp
inc
mov
dec
and
jmp
fs
and
jmp
out
jmp
addb
push
fisubrs
jmp
es
pop
repnz
add
add
fisubl
jmp
pop
cwtl
movsl
push
mov
dec
jmp
inc
push
lea
add
shr
mov
pop
call
jmp
mov
add
jmp
je
xchg
xchg
lea
ds
add
cli
sbbb
cmp
pushl
jmp
xorb
xchg
insl
or
add
pop
jmp
mov
in
xor
out
sti
jmp
cmp
adcl
add
or
add
jmp
stc
adcb
in
push
add
jbe
add
loopne
mov
jmp
sbb
int3
push
jmp
mov
sahf
dec
mov
and
jmp
xchg
inc
add
enter
add
sub
cmpsb
dec
std
push
jmp
push
popa
cbtw
cs
jmp
outsl
inc
fbstp
mov
jmp
hlt
xchg
sahf
xor
jmp
mov
inc
insb
xchg
mov
jmp
adc
jb
mov
jmp
lods
sub
sbb
mov
jmp
test
jae
fucomi
or
add
div
sub
imul
jmp
subl
xor
xor
add
push
gs
lods
mov
jmp
dec
or
or
ljmp
mov
call
add
sub
in
mov
add
xor
push
add
jmp
shll
add
jmp
sub
push
ljmp
ret
mov
jmp
or
rep
jmp
mov
mov
jmp
scas
jle
jo
push
jmp
cmp
stos
js
add
jmp
cld
mov
add
clc
cld
call
out
jne
jmp
mov
nop
sti
pushl
cmp
jbe
jmp
insb
and
aam
jmp
mov
mov
sahf
jno
jmp
aam
dec
repnz
popa
jmp
test
xchg
dec
lcall
jmp
mov
add
jmp
cmp
je
jmp
mov
push
js
aam
add
lret
mov
call
mov
jbe
jmp
fmul
lock
or
add
sub
add
rolb
hlt
pop
ljmp
mov
stos
jmp
and
stos
test
add
jmp
mov
test
add
jmp
inc
mov
jmp
aad
xchg
clc
jmp
xor
jmp
jmp
fidivl
dec
cmp
xor
add
fmuls
cmp
sub
movsb
je
jmp
adc
cs
adc
or
repnz
add
mov
call
inc
push
jmp
mov
rep
jmp
mov
je
jmp
flds
sti
push
adc
xchg
xor
jmp
fs
add
jmp
clc
pop
jmp
adc
sub
ljmp
adc
ljmp
leave
test
jmp
pushf
test
adc
jmp
adc
jmp
inc
mov
shr
idiv
ljmp
inc
shlb
jmp
add
test
imul
adc
cli
jmp
jmp
lock
push
jmp
jmp
mov
jmp
ficompl
cmp
sti
call
loope
cwtl
pushf
roll
enter
ljmp
mov
jmp
add
int3
jmp
sub
cli
call
add
jmp
mov
shr
jmp
lret
mov
call
cmc
jo
cmp
jmp
ljmp
cld
jl
notb
jmp
jmp
nop
lea
mov
add
out
popl
vpmaddwd
decl
fidivrs
leave
jmp
mov
aaa
push
jmp
or
cmpsb
pop
inc
js
sub
cld
ljmp
jge
stos
jb
jmp
lods
stos
jmp
dec
ucomiss
cwtl
xor
add
mov
js
and
add
insl
idiv
ljmp
call
jmp
insl
sub
sub
jmp
mov
test
jmp
jo
inc
xchg
cs
jmp
in
xchg
call
jmp
xchg
out
bound
lret
lcall
es
add
jmp
les
and
adc
lcall
mov
jmp
cli
mov
lcall
add
and
aaa
idiv
call
push
mov
jmp
mov
push
xchg
fs
jmp
lret
inc
jbe
mov
jmp
aas
sub
in
call
jmp
fsubrl
jmp
xchg
aam
into
je
shr
xchg
cmc
pushl
nop
jb
mov
jmp
xor
add
add
stc
hlt
xor
push
stc
jmp
dec
mov
jmp
repnz
inc
jmp
sarb
lods
jmp
cmp
jmp
xor
scas
and
sbb
test
cmc
jmp
movsb
pusha
jmp
push
xchg
dec
push
add
add
aad
lret
testb
or
pusha
jmp
xor
stc
lcall
mov
push
cmp
sbb
decl
clc
jmp
pop
or
jl
xor
jmp
jecxz
rcrb
je
sbb
mov
add
in
sub
add
jmp
add
add
fadd
bound
bound
add
sub
repnz
mov
jmp
repnz
jmp
shlb
call
dec
cmp
hlt
hlt
inc
pop
out
shl
jmp
repnz
pop
add
push
es
shll
ds
lcall
cmpsb
sbb
mov
jmp
lods
sahf
sub
shr
or
jl
mov
jmp
inc
dec
jbe
jne
jmp
mov
call
leave
jmp
push
in
mov
jmp
jmp
mov
sub
add
cli
sbb
rolb
jmp
loopne
mov
cmp
pushl
loop
mov
jmp
loopne
push
pop
or
incl
sub
cmp
decl
movsl
jmp
in
push
loopne
cld
jmp
add
jl
mov
shl
jmp
xor
lahf
push
jmp
sti
push
mov
or
jmp
inc
push
outsl
add
jmp
mov
jmp
push
sbb
or
dec
jl
insb
add
add
sahf
leave
add
jmp
outsb
into
push
mov
jmp
pushf
shlb
cmp
inc
pop
pop
mov
inc
adc
push
lock
incl
lock
jnp
cs
xor
les
incl
sbb
inc
je
jmp
lods
push
jmp
or
ds
jmp
push
dec
xor
xchg
mov
jmp
xchg
movsb
jmp
xchg
sub
jmp
ja
sbb
mov
jmp
sti
hlt
xor
jmp
sahf
cmpsb
hlt
test
jmp
adc
xor
jmp
std
and
push
popf
pushl
jmp
sbb
call
add
fnstenv
int3
xchg
hlt
jmp
sub
adc
lcall
push
mov
in
idiv
pushl
and
add
jmp
mov
pop
and
jmp
add
mov
jmp
hlt
pop
inc
mov
add
jmp
mov
add
jmp
insb
add
jb
add
add
jmp
les
pusha
jmp
sub
sub
out
add
jmp
loop
inc
cwtl
jmp
jmp
in
fnstsw
ret
jmp
push
fs
add
add
sar
dec
call
jmp
ret
insb
inc
add
mov
jmp
inc
div
jmp
cltd
cmp
data16
xchg
jo
add
stos
std
call
add
add
insl
idiv
incl
adcb
clc
dec
mov
jmp
mov
std
add
jmp
or
add
mov
mov
sti
jmp
mov
adc
out
push
push
cs
jmp
mov
ret
jmp
lret
dec
movswl
jmp
aaa
sbb
je
jmp
popf
ret
jb
nop
fcoml
inc
xor
jmp
jmp
call
repz
aas
xorb
add
add
cmp
mov
jmp
ljmp
cmp
ds
pusha
jmp
rolb
pushl
jmp
addb
stos
add
jmp
ds
mov
decl
add
jmp
loopne
inc
sbb
aaa
cli
jmp
call
stc
call
mov
jmp
enter
inc
popf
jmp
inc
rcrl
xor
jmp
xor
repnz
jmp
xor
dec
jne
jmp
in
sub
jmp
sbb
xchg
mov
jmp
cmpsb
jmp
clc
decl
xchg
push
call
or
add
dec
mov
aad
lcall
dec
repz
repz
incl
cmp
xchg
test
cs
dec
jae
xchg
adc
idiv
lcall
int
jl
sbb
addl
add
mov
call
jmp
xchg
into
cwtl
add
jmp
ret
and
jmp
lods
xor
jne
ljmp
jo
fisubrs
cld
add
jmp
movsb
fsubrs
pushl
mov
ret
jmp
loopne
nop
push
jnp
jmp
inc
push
mov
jmp
mov
adc
iret
repnz
jmp
sahf
les
xchg
ljmp
add
adc
int3
in
jp
mov
jmp
iret
pusha
or
lock
jmp
es
shl
jmp
mov
xor
xchg
add
add
mov
jmp
inc
nop
push
scas
je
jmp
xor
jne
jmp
xchg
and
enter
clc
incl
adc
mov
jmp
into
pop
or
mov
jmp
fdivp
scas
jno
inc
and
jmp
xor
or
decl
int
push
jmp
adc
iret
call
jmp
sub
mov
jmp
mov
push
jmp
out
sub
adc
cld
add
incl
mov
add
add
pop
repnz
fdivr
xor
mov
pop
pop
mov
ja
jmp
xchg
rep
jmp
hlt
out
cli
pushf
jmp
dec
and
jb
movsl
mov
jmp
or
mov
xor
cmc
std
out
or
pop
add
jmp
and
mov
jmp
jmp
sbb
inc
and
jmp
lea
push
clc
call
je
jmp
xchg
icebp
jmp
movsb
xchg
mov
jmp
push
es
sub
jmp
loope
fsubrs
jmp
pushl
idiv
jmp
mov
mov
jmp
lods
ds
mov
add
jmp
mov
scas
pop
out
jg
jmp
out
dec
lods
mov
jmp
pop
shr
stc
jmp
in
mov
jmp
jecxz
pop
adc
test
jmp
sbb
add
jmp
and
inc
sub
fs
jl
xor
adc
cmp
decl
add
or
cld
push
popl
inc
incb
pop
add
xor
or
or
add
mov
loopne
and
lock
notb
add
fwait
mov
out
stos
sub
pop
fcmovnu
pop
popw
lcall
jbe
pop
jmp
xchg
dec
call
dec
dec
pop
movsb
ds
pop
pop
or
sbb
mov
jne
push
mov
sub
add
mov
sbb
sbb
cmpsb
add
inc
xor
cltd
cs
dec
dec
pushf
scas
push
inc
jnp
movsb
or
cld
adc
pushw
sbb
mov
incb
mov
ds
xor
or
adc
imul
mov
cmp
and
adc
inc
or
sti
push
in
jns
adc
add
mov
enter
push
sbb
or
inc
sbb
push
rclb
popa
xor
ds
rorb
sbb
push
leave
and
leave
push
sbb
mov
push
mov
mov
add
cmp
adc
sbb
sub
imul
outsl
mov
fdivs
add
aam
mov
subb
dec
cmp
and
inc
out
scas
add
fadds
push
mov
xor
inc
sub
andps
push
insl
xchg
sbb
add
pop
cmp
cmp
enter
insb
scas
into
push
mov
sub
mov
adc
mov
or
or
pusha
pushf
push
dec
jle
int
xchg
or
mov
loopne
enter
push
in
lock
fistpll
mov
cmp
jne
call
lahf
es
dec
add
stos
or
flds
sahf
mov
sarb
or
push
ds
pop
sahf
aas
ds
jne
pop
pop
xor
add
add
or
add
pop
inc
cmp
ret
addb
inc
inc
cltd
jg
std
push
xchg
cmpl
into
cmp
mov
nop
fiaddl
shr
add
pop
mov
add
inc
repnz
ret
aam
jl
imul
cmpb
xchg
add
mov
cltd
popl
es
enter
jo
add
xchg
mov
mov
and
and
jecxz
std
adc
or
test
cmp
repnz
push
jg
call
rorb
cmpb
cs
push
xor
ret
and
dec
and
xor
inc
jo
test
pusha
je
push
iret
or
xor
call
fdivrl
mov
xor
pop
dec
pop
adc
fdivr
xor
adc
cmp
fnstsw
inc
pop
popf
push
push
mov
mov
lahf
jo
fadd
pop
ffreep
dec
mov
mov
sub
in
jmp
clc
loop
call
jnp
or
mov
inc
dec
out
sub
push
add
lds
inc
nop
insb
fisttpl
push
add
pop
hlt
pop
cld
fsubrl
in
or
adc
jmp
add
push
aas
jl
sub
loop
or
mov
mov
pop
inc
xor
sbb
pop
andb
and
pop
lock
call
add
cmp
insb
mov
jp
loope
sbb
addb
xor
adc
xor
es
dec
subb
insb
mov
cmp
pop
outsl
jl
fidivl
and
cs
xor
outsl
mov
lock
mov
push
and
movb
mov
icebp
mov
add
shl
add
je
mov
push
dec
push
pusha
and
notb
cmp
add
sbb
adc
jne
fadds
xchg
leave
mov
add
or
ss
addb
pop
mov
js
loopne
xor
xchg
mov
mov
enter
sbb
jo
popa
push
mov
cmp
dec
mov
add
add
push
mov
clc
push
inc
xlat
adc
push
dec
test
xchg
and
mov
fisttps
sarb
aad
mov
dec
outsl
and
dec
xchg
cmpsb
cmpb
pushf
or
mov
test
inc
fcoml
nop
leave
insb
add
mov
ss
scas
lret
cmp
add
lods
mov
enter
push
lods
cmpb
push
dec
mov
mov
clc
aaa
pop
mov
loop
lcall
mov
test
jl
push
push
cmp
add
fisubrl
sbb
loopne
rep
pop
mov
ss
mov
subb
test
mov
mov
ss
xor
fwait
push
idiv
push
inc
xchg
fadds
fmull
scas
idivb
jbe
pusha
cmp
mov
nop
sbb
shlb
pop
ffree
adcb
pcmpgtd
or
fcompl
add
aam
and
lret
adc
fiaddl
je
test
test
mov
nop
lock
add
or
pop
dec
lcall
shl
fnstsw
sub
out
xor
cmp
xchg
sbb
dec
and
xor
mov
inc
add
push
fiaddl
cmp
sar
fdivrs
add
aaa
addl
clc
mov
sti
add
mov
scas
js
inc
lcall
bound
dec
push
add
inc
mov
or
sbb
dec
imul
mov
add
xor
cmpsb
inc
and
enter
push
push
subl
hlt
mov
pusha
mov
xchg
out
and
dec
lea
pop
xchg
outsl
cmp
mov
or
out
jne
fdivs
es
cwtl
aam
aam
cmp
cmpb
imul
mov
lret
inc
fmuls
bswap
cwtl
sbb
in
js,pn
mov
dec
push
xchg
lret
dec
add
call
dec
les
add
enter
cmpsb
jmp
xor
push
jl
xor
mov
inc
add
pushf
nop
das
or
hlt
sub
int3
cmpsl
inc
inc
push
js
xor
push
js
repnz
mov
cmp
faddl
nop
les
andl
pop
pop
incb
add
jno
mov
sbb
ds
pop
dec
jns
cwtl
mov
push
jns
movsb
in
push
and
push
mov
std
mov
outsl
cltd
cwtl
dec
xchg
enter
cmp
cmpsb
in
xchg
pop
mov
xor
popa
clc
and
xor
jo
dec
push
sub
inc
and
cmp
jo
xor
or
jae
call
ss
and
mov
jb
xor
cs
aam
andb
hlt
xchg
push
add
iret
jae
icebp
lahf
sub
sti
bound
jmp
jo
nop
mov
mov
nop
clc
lcall
dec
inc
subl
rorb
pop
push
lods
loope
incb
test
xor
lock
inc
xchg
add
mov
pop
mov
mov
addb
dec
stos
pop
or
sbb
call
push
mov
lods
pusha
sbb
and
xchg
pusha
mov
pushl
cwtl
sub
sub
mov
cmp
pop
sahf
mov
mov
fisttps
and
xor
add
mov
inc
push
pusha
mov
add
lret
fmuls
pop
mov
or
jo
sub
inc
aad
dec
adc
hlt
fs
mov
dec
mov
push
or
loope
je
xor
mov
mov
mov
aas
in
cmp
or
test
insb
xor
jo
mov
pushf
inc
inc
arpl
dec
loopne
rcrb
pusha
inc
sti
mov
sbb
leave
or
lret
sub
enter
add
dec
shl
xor
lret
cmp
andb
outsl
or
lahf
jmp
shrl
loopne
movsb
sub
lret
inc
cmc
add
sub
cmpb
xchg
in
and
pusha
xor
adc
scas
or
rcrb
xor
aas
push
add
lahf
inc
fisttpll
dec
mov
mov
xchg
shll
shlb
pop
fsub
rcr
push
inc
xor
lods
mov
jbe
or
int3
sub
mov
inc
adc
mov
jb
add
xchg
ljmp
loopne
xorl
lret
sub
or
test
and
mov
leave
scas
or
hlt
add
and
lret
js
or
scas
pop
push
ret
or
dec
je,pn
adc
push
sbb
scas
aas
imul
and
test
les
mov
jmp
loope
mov
call
pop
scas
lods
inc
mov
or
fstpl
or
and
adc
jmp
add
sbb
adc
int3
jo
sub
cmp
hlt
adc
lock
add
test
push
push
paddsb
jmp
push
dec
decb
leave
mov
sbb
mov
fmuls
push
scas
call
outsb
sub
sbb
into
cmpl
pop
leave
rolb
adc
inc
clc
imul
ds
lahf
test
pop
std
rolb
enter
cmpb
ljmp
lock
pop
movsb
mov
lahf
negb
push
inc
hlt
addl
adc
mov
jo
aad
bound
aas
or
movsl
test
mov
sub
pushf
jb
dec
or
sti
xor
pop
insb
cmp
test
mov
lock
pusha
xor
inc
sahf
packsswb
dec
imul
cltd
outsb
mov
xlat
mov
fcompl
pop
hlt
lods
or
xlat
mov
mov
push
xchg
pop
adc
inc
push
pusha
call
bound
leave
cmp
mov
jmp
and
popf
or
sub
cmpsb
call
adc
cmpb
into
nop
push
mov
iret
adc
xor
das
adc
add
loope
adc
pop
shlb
cmp
ficoms
mov
mov
cmp
add
mov
dec
mov
jo
inc
push
ror
leave
subl
adc
in
xor
adc
push
fimuls
inc
push
ficompl
lret
lret
shlb
add
popa
dec
dec
addl
adc
test
call
pop
and
je
imul
gs
pop
scas
fwait
mov
mov
add
outsl
pop
call
pop
inc
addr16
lea
cmp
sbb
cmp
adc
push
fsubrs
jecxz
outsb
pushf
jl
and
push
shrb
mov
enter
add
sbb
inc
int3
lods
and
jo
dec
pushf
adc
adc
cmp
insb
mov
add
into
pop
hlt
rcrb
js
cmp
les
je
sahf
pop
arpl
iret
pusha
cltd
or
lock
cwtl
add
dec
add
test
pop
mov
fisubl
push
add
call
roll
int3
adcl
bound
adc
es
out
pop
or
aad
xchg
push
cld
mov
fstpl
pop
call
add
xor
mov
leave
jle
enter
and
mov
outsl
loopne
aas
or
sbb
pop
pusha
inc
inc
cwtl
mov
test
imul
cwtl
sub
cmp
ret
into
arpl
adc
push
ret
pushf
dec
je
push
iret
sar
icebp
add
mov
js
loope
frstor
mov
aam
xor
mov
loop
and
inc
les
test
mov
add
or
fisttpll
mov
mov
adc
inc
sub
pop
sbb
cmpsl
sbb
repz
in
xor
xchg
int3
jno
cmp
inc
int3
push
mov
or
xlat
clc
nop
sbb
lea
lret
pop
inc
and
loope
ret
test
orb
adc
repz
inc
adc
mov
mov
aam
adc
dec
mov
pusha
add
fstps
shlb
pusha
mov
push
fcompp
imul
or
test
int
mov
push
loopne
and
dec
inc
inc
and
cmc
movl
push
pop
insb
cmovno
ret
lea
aam
inc
adcl
decb
ficoms
inc
nop
sbb
dec
adc
aad
mov
fmull
dec
mov
sbb
xor
and
leave
push
lea
testl
int
movsb
xor
imul
ret
enter
push
lret
push
insb
xchg
aad
sahf
and
shlb
cltd
mov
mov
adc
add
testl
xor
push
mov
icebp
leave
mov
fcomps
incb
add
clc
xchg
repz
cwtl
ss
jae
loope
fidivl
sub
lea
fs
in
andb
push
add
mov
lods
cmpl
or
or
mov
jg
xchg
mov
mov
out
fs
lock
pusha
test
call
pop
cwtl
sub
int3
pushf
inc
jno
jno
addb
pop
fidivrs
mov
mov
dec
fnstenv
mov
dec
sub
push
jge
lcall
sbb
mov
push
orb
nop
faddl
cwtl
gs
jp
ds
jnp
shl
inc
cmp
rorl
test
cmp
les
mov
push
jl
xchg
cmp
movaps
or
xchg
mov
outsb
pop
rolb
outsl
in
test
in
mov
xor
add
scas
sub
jb
add
push
mov
jno
push
xchg
push
lods
ret
push
mov
push
je
fsubr
or
jl
js
xor
mov
mov
sbb
dec
adc
jae
pop
ret
inc
nop
sub
inc
clc
jns
gs
stc
xor
in
std
nop
xor
dec
push
scas
outsb
mov
mov
sbb
adc
cmpsb
and
data16
pop
pushf
or
or
mov
orb
in
add
cmpb
mov
sarb
js
lock
pop
xor
pop
js
rorb
sub
fsubrl
xor
add
rcrb
jbe
sbb
outsl
int3
shlb
jo
lock
jae
jae
sti
sarb
xor
insl
dec
push
rcll
cmp
fsqrt
sbb
enter
sub
push
adc
mov
cltd
ret
and
sti
push
popf
sbbl
add
cwtl
cmp
loopne
mov
pop
dec
inc
inc
add
push
adc
mov
dec
sbb
pop
mov
inc
imul
outsl
inc
jmp
mov
jbe
push
mov
jle
and
inc
cwtl
or
sti
sub
mov
aam
shlb
out
flds
pusha
stc
ret
les
mov
dec
pop
in
cltd
pop
jns
iret
push
add
mov
mov
arpl
sbb
push
cmp
popf
mov
fimull
or
loop
stc
push
movsb
add
dec
movswl
mov
cmpsl
test
sub
enter
or
mov
xor
test
psubusb
adc
fwait
mov
lock
mov
flds
sarl
inc
fcoms
mov
test
test
es
mov
inc
jp
mov
fimuls
lock
push
mov
int3
sbb
jo
repz
pop
inc
inc
add
pop
dec
xchg
adc
fsubs
push
dec
xorb
adc
sub
adc
out
and
sub
jle
fistps
movsb
cs
push
in
orb
jo
rorb
stos
mov
mov
roll
cmp
inc
std
cmp
inc
enter
add
sub
cmp
sbb
or
inc
and
cmpb
xchg
add
jae
mov
cmp
cwtl
in
lahf
ds
insb
jg
or
mov
dec
shlb
sbb
test
push
fdivrl
mov
mov
fcompl
cmc
test
nop
enter
mov
pop
es
scas
and
mov
gs
or
addb
lods
clc
adc
sub
fmuls
cs
xchg
mov
cs
lock
jo
ret
cmp
or
sub
add
pop
add
lcall
mov
cmpsb
and
or
leave
in
xor
jl
in
add
roll
nop
push
movb
mov
js
xlat
mov
mov
ret
and
inc
loopne
cld
and
das
es
popa
test
int3
dec
dec
pop
inc
cmp
and
loope
pop
or
ficompl
lods
jno
pop
inc
lods
enter
cs
add
jl
leave
enter
loop
push
and
inc
jns
add
sbb
movsb
nop
pop
fcompl
gs
mov
adc
and
xor
inc
adc
lahf
inc
clc
andb
mov
jmp
jo
cmp
push
mov
cltd
rcll
and
subb
dec
push
adc
cltd
pop
or
ja
and
sbb
or
mov
mov
nop
push
adc
les
and
loopne
add
outsl
jg
icebp
cmp
push
rclb
dec
or
loopne
dec
xchg
dec
enter
and
cmp
sbb
cs
lea
mov
or
add
movsl
mov
mov
icebp
lods
cwtl
xor
jo
inc
jecxz
add
andl
jns
stos
lods
xor
inc
pushl
or
pop
ret
fsubl
rclb
insb
imul
aam
imul
mov
sti
loop
pusha
or
addb
mov
mov
sbb
pop
lock
rcll
mov
imul
push
or
adc
lret
rolb
push
sbb
ljmp
fcomps
cmp
xor
jmp
push
ficoms
fdivl
mov
and
inc
out
ror
inc
xor
add
test
js
inc
jns
lcall
cwtl
add
mov
mov
jl
in
bnd
adc
pop
xor
add
cmp
pop
ror
nop
call
xchg
fcompl
cmpl
int3
andb
adc
lret
or
push
out
add
loopne
rcrl
xchg
pushf
push
cmp
and
pop
lret
dec
mov
sbb
mull
pop
cmp
es
lods
xor
mov
in
cld
and
mov
jecxz
sbb
setg
jb
cltd
and
inc
popf
and
add
adc
icebp
and
dec
jo
adc
push
in
in
loopne
cmp
mov
in
xor
clc
mov
push
mov
aam
out
pop
in
xchg
rorb
movsb
adc
inc
iret
addl
and
nop
movd
in
and
rorl
adc
inc
push
dec
pop
cmp
xor
inc
insb
in
mov
rorb
adc
push
mov
add
add
loopne
adc
movsl
adc
scas
cmp
xor
nop
aas
inc
cmp
fnstcw
cs
and
xor
pushf
aam
orb
adc
rolb
icebp
cld
lods
jl
insb
jno
inc
lahf
hlt
dec
repnz
pop
mov
add
mov
jle
ret
sub
hlt
mov
push
sub
lods
push
dec
pusha
jl
pop
push
jge
out
adc
inc
stc
xchg
xor
cmpsb
adc
das
inc
add
and
xchg
mov
add
cmpsb
nop
push
arpl
outsb
mov
ret
and
into
push
push
add
call
test
xchg
or
dec
inc
notb
inc
push
outsb
pop
and
or
pushf
or
shlb
sub
sbbb
push
dec
jp
lods
pop
outsb
mov
adc
das
or
mov
lock
or
cmp
sub
mov
pushf
fisubs
cli
mov
test
scas
in
xchg
and
mov
fistl
fdivl
inc
ret
insb
and
mov
and
je
dec
fidivrs
fs
fdivl
aas
push
dec
sahf
lock
add
xor
sub
test
adc
mov
sahf
or
add
and
cmp
testb
inc
rolb
sub
sbb
scas
mov
mov
mov
hlt
and
es
je
mov
jg
inc
push
loop
repz
or
inc
push
js
dec
xchg
and
pop
gs
mov
add
pushf
lret
jl
mov
pop
sbb
push
loop
or
mov
stos
or
xor
add
movsl
add
push
mov
add
add
bound
andl
push
mov
negb
dec
in
inc
jne
xor
jg
js
enter
test
xchg
and
roll
test
test
mov
rcrb
push
movsl
test
js
sbb
mov
mov
mov
mov
xor
leave
inc
inc
cwtl
test
xor
ss
or
sarb
in
call
sarl
and
into
and
insb
push
mov
out
rclb
test
dec
xor
mov
cmpsb
inc
js
jns
enter
inc
add
xchg
add
arpl
xor
push
push
mov
push
rolb
dec
fcomp
shrl
and
xchg
xor
adc
jg
jns
pop
hlt
sbbb
pop
sbb
xchg
and
push
or
xchg
push
xor
push
push
adc
je
lret
pusha
dec
jb
mov
ret
mov
mov
pop
and
rcl
or
cld
hlt
hlt
les
xor
rcrl
xor
dec
pop
test
cs
test
sbb
fcoms
add
hlt
sbb
cmp
lret
test
insb
or
pop
and
ficoms
sub
and
jns
xchg
and
adc
inc
mov
sbb
lock
shrl
xlat
add
and
xchg
inc
repz
cmc
add
add
aaa
enter
fsts
in
in
or
cmpl
aad
and
fistl
stos
iret
and
shrb
and
shll
xor
xchg
in
xchg
and
cmp
hlt
aad
sbb
inc
hlt
sub
clc
sbb
test
and
aam
sbb
and
fisttpl
pop
stos
push
and
call
lock
icebp
xchg
je
push
sbb
add
sahf
inc
mov
sbb
mov
pusha
and
jl
cld
xchg
cmpsb
lock
sbb
sti
jo
out
les
lahf
and
adc
enter
test
mov
inc
sbb
sbb
xchg
fsubl
and
push
jle
mov
xchg
adcb
icebp
sahf
inc
cld
and
mov
scas
push
mov
adcb
dec
lock
test
mov
jecxz
test
pushf
bound
loopne
or
cmp
cli
outsb
and
add
test
clc
dec
nop
dec
mov
sti
or
into
and
popf
inc
mov
inc
adc
movsl
mov
nop
fists
mov
mov
cltd
mov
movsb
sbb
or
sub
ss
mov
sub
popa
cmp
pop
xchg
inc
jle
and
mov
mov
fstpl
sbb
jle
inc
or
adc
mov
add
mov
ret
mov
mov
subps
lock
and
loope
and
sbb
push
cmp
rcrl
or
mov
mov
mov
push
mov
adc
aad
lods
dec
and
test
mov
dec
pushl
in
mov
and
faddl
xor
fcompl
cmp
xchg
jl
or
fadds
sbb
pop
or
add
lret
add
or
mov
add
clc
daa
mov
cmp
scas
bound
mov
pop
mov
pop
mov
or
lcall
inc
inc
cmp
loopne
lods
or
and
or
or
cmp
sub
pop
or
daa
add
sahf
fs
mov
pop
hlt
add
les
mov
pop
andl
xchg
sub
nop
jg
adc
inc
or
cmp
clc
add
shl
pop
sub
adc
jg
data16
add
inc
cmp
fstpt
pop
push
push
xor
pusha
inc
cmp
push
pusha
movsb
mov
aas
jb
or
je
sub
and
pushf
call
test
repnz
jmp
clc
dec
inc
sub
cmp
rclb
xor
outsb
in
mov
cmc
and
dec
adc
test
or
mov
or
dec
ficomps
inc
ja
xor
and
call
or
mov
push
fsts
sub
pop
es
or
pop
loop
hlt
mov
add
mov
push
sub
and
fs
push
push
xor
or
loopne
or
adc
add
pop
sub
inc
dec
adc
xor
jne
movsb
movsl
dec
xchg
add
adc
inc
adcb
stc
cs
add
sbb
add
jmp
cmp
or
sbb
cmp
push
loopne
adcl
jo
les
les
add
pop
call
pop
into
jbe
sub
pusha
sar
or
fisubs
adc
pop
nop
mov
stc
in
dec
add
nop
call
pop
cmpsb
adc
lret
or
sub
lret
push
std
sub
adc
push
add
lcall
or
inc
out
mov
adc
test
add
imul
add
cltd
add
push
xor
pushf
and
dec
fs
jo
loope
inc
aaa
push
add
dec
rolb
sbb
sbb
and
mov
or
sbb
dec
les
das
lret
sub
and
adc
cmp
xor
or
push
pushf
pop
add
push
inc
orl
push
rcr
inc
inc
adc
filds
stos
popf
adcb
pusha
pushf
xor
push
incb
cmc
adc
push
stc
hlt
je
jmp
loopne
lret
push
inc
pusha
in
push
inc
cld
gs
jnp
lock
popf
test
mov
insb
push
xchg
int3
cmp
cmp
and
mov
sbb
mov
xchg
xchg
in
and
and
in
xchg
enter
mov
pop
push
or
push
lock
sub
xchg
add
pop
rorb
insb
adcb
es
mov
adc
adcb
enter
mov
add
lods
and
sub
cmp
mov
in
ds
rcr
scas
lret
sub
mov
je
dec
push
ds
scas
cmp
cmp
xor
add
ret
and
cmp
sub
inc
pushf
xchg
dec
out
cmp
mov
mov
and
adc
xchg
add
lret
sahf
push
and
nop
ret
sbb
mov
fisttps
cmp
aad
mov
inc
push
mov
mov
dec
lods
movsb
add
push
pop
mov
dec
mov
ja
pop
cmp
sub
push
cwtl
xor
sub
inc
xchg
mov
pop
lret
pop
and
sbb
add
or
lock
cs
stc
pop
dec
insb
lock
mov
pop
jmp
sbb
lcall
mov
add
mov
add
push
and
xor
add
mov
popf
sub
jl
mov
jns
mov
inc
xor
push
lods
sub
sbb
cmpsb
or
jbe
pop
cmp
dec
pop
clc
call
pop
mov
dec
jbe
cltd
aam
mov
sub
xchg
push
mov
pusha
xorl
jo
or
out
scas
pop
add
fsts
xor
sub
clc
jo
lret
popa
movsb
xor
dec
or
push
xlat
out
add
insl
mov
xchg
call
jb
mov
mov
imul
sub
ret
push
fadd
xor
test
xor
mov
pop
xchg
mov
inc
shll
or
in
leave
mov
mov
jns
add
imulb
jno
adc
mov
inc
shrb
dec
ja
adc
outsl
add
xchg
ds
sub
mov
add
dec
dec
cmove
shlb
add
leave
add
mov
xor
nop
pop
xor
push
movsb
and
in
lods
pop
dec
movsl
sub
and
dec
sbb
and
xchg
call
push
push
sub
and
pusha
sbb
dec
pushf
nop
jbe
orb
and
sbb
cmp
cmp
ss
jl
add
sbb
mov
push
or
sbb
mov
clc
icebp
lods
bound
mov
or
in
pusha
sbb
arpl
add
cmp
cli
pop
sbb
mov
test
repnz
insb
insb
or
cli
xor
pushf
fdivrs
sub
dec
xor
cmp
mov
xor
mov
dec
push
nop
xchg
call
fidivs
pop
cmc
shll
js
dec
mov
mov
or
mov
add
sub
adc
lret
pushf
add
dec
cmc
inc
mov
mov
dec
pop
or
test
lea
push
and
movsb
movsb
add
cwtl
cmp
adc
adc
sub
sbb
hlt
adc
or
and
xor
and
or
or
lcall
mov
enter
test
rcll
clc
pop
decl
jne
aas
lret
sbb
divb
mov
sub
and
or
cld
inc
lcall
sub
cmp
or
mov
inc
fcoml
push
xor
es
sbb
push
clc
enter
cmp
sub
or
dec
mov
cmpsb
pop
sub
cmp
or
lret
pushf
pop
cmp
test
movsl
mov
dec
jo
jb
aaa
cmc
add
insb
xlat
and
xchg
mov
dec
adc
test
mov
pushf
jl
jl
and
ja
clc
pop
js
cmp
pushf
pop
sub
sbb
add
pushf
sub
push
jnp
data16
test
test
js
int3
push
shrl
or
cmp
xchg
test
sbb
test
int3
aaa
cwtl
fwait
test
mov
dec
mov
sub
or
pop
mov
push
js
xchg
mov
push
push
repnz
xor
lods
mov
add
bound
in
and
out
and
lret
js
ds
xchg
into
clc
mov
xchg
int3
sbb
or
jo
mov
xor
mov
sub
adc
inc
adc
mov
in
je
adc
rorb
ds
fdiv
mulps
nop
jns
add
mov
mov
mov
inc
inc
push
sub
mov
sub
rcrb
mov
cmp
fs
ss
cmp
mov
inc
repnz
cmp
xor
pop
push
data16
pop
or
sbb
push
mov
in
insb
pop
or
out
negb
outsl
lret
mov
mov
cmpsl
pop
mov
xchg
inc
mov
leave
cmp
add
aam
adc
mov
sti
inc
sub
mov
mov
or
pop
rcrl
xor
jne
fidivs
mov
sti
cld
inc
fmul
lret
aas
mov
int3
les
jns
push
fildl
jbe
and
dec
andl
mov
shr
jmp
adc
pop
fs
sbb
and
push
rorb
push
lret
fcoms
xchg
mov
and
dec
or
xor
je
xor
sbb
jle
adc
adc
sbb
sub
mov
sub
lock
test
dec
mov
sub
cmp
add
push
clc
loop
jecxz
mov
sub
xchg
jns
stc
imul
pop
nop
pop
popl
icebp
add
add
ror
xor
xchg
inc
sbb
icebp
mov
add
xor
jb
sahf
pusha
pop
cld
mov
call
add
lods
in
xchg
mov
das
and
dec
ds
lcall
lock
push
mov
mov
andb
inc
jo
addb
pop
cwtl
inc
hlt
add
and
or
fs
xor
subl
mov
pop
pop
sbb
pushf
adc
cmovle
lcall
ss
inc
cmp
and
lods
cmp
dec
pop
imul
and
inc
aaa
pushf
rcrb
pop
jno
sub
pop
push
aas
inc
ja
sub
stc
call
das
ret
ror
push
cmp
or
xchg
or
add
xorb
mulb
xchg
mov
je
sub
mov
movsb
lods
int3
cmp
and
sarb
jle
jo
add
lahf
lret
enter
hlt
and
fisttpl
mov
pop
rcrb
and
mov
or
pop
lock
adc
or
popa
adc
dec
inc
jmp
js
push
xchg
inc
push
mov
jl
sub
loopne
mov
js
cmp
testb
mov
in
daa
gs
sub
pusha
sti
xor
insl
loopne
mov
repz
inc
cmp
inc
sbb
dec
push
push
mov
test
push
mov
pop
mov
aam
in
cwtl
es
mov
fistpl
or
test
sbb
cmpsl
and
sbb
mov
hlt
sub
mov
dec
adc
in
mov
lahf
pop
adc
pushf
mov
cli
and
shlb
jns
pop
shlb
inc
cmpb
rorb
or
sbb
je
clc
outsl
push
dec
test
pop
adc
dec
adc
fsubs
pop
push
pop
mov
sub
mov
mov
cld
mov
dec
xchg
mov
or
sub
sbbb
clc
and
jo
mov
mov
cmp
mov
sbb
aas
mov
mov
xchg
mov
in
push
push
iret
sahf
add
sub
sbb
push
sbb
lahf
rcrb
mov
fcoms
pop
cmpsb
sbb
mov
jnp
push
sarb
lret
in
mov
xchg
cmp
mov
hlt
icebp
dec
sarb
and
or
lea
ret
lret
pusha
sub
mov
scas
pop
sub
ds
ret
push
mov
aam
repz
leave
inc
pusha
push
inc
dec
mov
out
aam
sub
pop
mov
cmp
xor
mov
cmp
push
nop
test
cmpsb
push
jl
imull
adc
dec
pusha
cmpsl
fnstcw
adc
mov
or
push
pop
dec
call
add
add
shlb
mov
mov
and
imul
add
mov
psubq
ret
push
xor
shr
dec
push
iret
add
mov
loopne
hlt
loopne
bound
pop
sbb
das
call
stos
dec
sbb
mov
push
rorl
jns
fsubrp
add
andb
pop
adc
lods
push
ret
hlt
or
or
fldenv
cmp
pop
push
pusha
mov
scas
cwtl
orb
xchg
add
popf
sahf
pusha
js
push
inc
mov
add
sub
sub
aas
dec
ret
add
inc
xor
test
mov
inc
adc
outsb
popf
mov
lea
inc
lock
insb
xchg
and
aas
scas
addb
sahf
loopne
and
push
xchg
adc
cmp
cmp
add
daa
lcall
loop
xchg
lcall
dec
sbb
or
and
notb
add
in
mov
pop
loop
mov
pushl
cmp
jno
add
inc
fsts
scas
dec
mov
nop
mov
sub
mov
add
sub
rcrb
jbe
add
xor
or
sbbb
call
pop
sbb
sub
sahf
xchg
pop
std
fs
lock
ds
dec
push
xchg
fcoml
call
nop
cmp
cmp
testb
in
mov
popa
mov
push
jg
mov
pop
mov
mov
cld
adc
push
mov
loopne
add
nop
and
pusha
mov
jo
adc
or
mov
dec
inc
call
bound
inc
pop
in
adc
add
in
xchg
call
push
mov
sub
les
scas
daa
jg
clc
sbb
dec
mov
or
pop
mov
pop
jo
sti
dec
dec
xor
inc
popl
cmc
jecxz
cmp
sahf
sub
or
and
sub
or
insb
xor
imul
jmp
gs
cltd
mov
mov
mov
add
mov
cld
lods
inc
adc
in
movsb
dec
inc
out
inc
or
mov
enter
mov
ds
push
fimull
or
jl
jo
lock
inc
jl
test
nopl
jns
mov
je
xorl
insl
mov
scas
repnz
cmp
ret
add
sbb
outsl
xor
cwtl
add
adcb
mov
push
nop
dec
rcrb
cmp
pop
loopne
movsb
add
outsb
xor
cltd
or
out
pop
mov
cmpsb
add
or
lods
movsb
and
mov
and
push
mov
mov
inc
cmc
addb
cmp
and
push
pop
loope
jo
test
push
add
fcomps
mov
xchg
jmp
or
test
pusha
dec
cmp
mov
popf
add
leave
lret
mov
in
mov
imul
push
clc
idivl
push
shlb
rcl
cmp
sub
cltd
dec
add
mov
ja
add
mov
cmpb
xor
cmp
scas
xorl
xor
loopne
shlb
push
add
cmp
dec
in
mov
and
sbbb
xor
jecxz
or
or
outsb
or
xchg
cld
dec
add
ss
sub
in
dec
jmp
sub
ret
cltd
mov
rorl
add
lea
hlt
adcl
pop
nop
lret
add
fmuls
and
add
xchg
jmp
fcoml
test
and
jbe
cwtl
sub
push
add
stc
adc
mov
xor
sahf
mov
or
mov
dec
jne
cmp
xchg
jo
and
loopne
lret
lea
pop
mov
push
and
inc
aam
or
inc
sbb
in
or
cmp
movsb
mov
and
mov
push
lret
test
lcall
clc
ret
jns
add
xor
insb
test
inc
sub
pushf
clc
aaa
mov
sbb
jo
lea
and
or
fbstp
pusha
pop
add
les
aam
sarb
or
sub
push
adc
cmp
mov
cs
mov
mov
loope
jne
loopne
push
lock
loopne
test
xor
int3
dec
mov
mov
js
sub
or
and
add
cwtl
fdivrs
sub
pop
and
or
mov
loopne
sbb
flds
les
sbb
loop
jne
pop
iret
out
repnz
into
adc
or
paddd
push
and
imul
and
adc
sub
test
adc
push
mov
jo
lahf
inc
shlb
push
in
add
popf
aas
push
sub
add
sbb
mov
adc
insb
xor
adc
xchg
sub
lret
pop
repnz
mov
mov
pop
in
inc
les
mov
ss
mov
push
in
or
addb
and
mov
out
call
push
ss
rclb
and
pop
xchg
dec
add
mov
jg
sub
loopne
and
mov
mov
and
inc
pop
push
cld
fiaddl
and
pop
outsl
call
cmpb
orl
add
mov
jmp
out
test
outsb
nop
leave
xchg
push
mov
or
pusha
cwtl
loop
adc
and
inc
dec
jne
clc
out
fisubl
dec
inc
fildl
or
fadds
or
test
cmp
popf
mov
iret
movups
push
sub
lock
test
add
mov
push
stos
mov
sbb
dec
popl
jnp
add
jo
and
push
inc
mov
clc
fstl
syscall
sbb
sub
flds
dec
adc
mov
mov
rclb
daa
pop
test
fnstenv
sbb
pushf
and
xorl
lret
lea
inc
out
dec
push
add
sub
sub
xchg
cli
push
sahf
sti
adc
xor
and
lock
push
adc
insb
nop
jnp
outsl
sbb
in
push
cwtl
fcoms
int3
ja
mov
lret
xor
mov
sub
sbb
subb
scas
add
xchg
pushf
std
mov
pop
mov
push
cmp
lods
lods
pop
cmp
inc
pusha
out
pop
mov
je
add
mov
test
xchg
cmp
xchg
pop
xor
lds
mov
adc
test
mov
inc
add
outsb
sarb
sbb
xchg
daa
xor
add
aad
sub
push
inc
sub
jno
push
jns
lret
push
and
in
adc
loopne
push
pop
mov
inc
sbb
outsb
pop
add
andb
pop
pushf
enter
mov
iret
xchg
shlb
xchg
and
daa
test
adc
sub
cmp
fnstcw
xor
int3
cmp
mov
mov
sbb
and
xor
pop
or
addb
cmp
xchg
pop
ficompl
inc
add
pushf
push
xchg
and
add
sbb
mov
lea
push
movlps
and
sbb
pusha
dec
dec
adc
shlb
mov
pop
and
dec
outsl
fwait
or
mov
jl
xor
pusha
push
js
jns
pusha
sbb
stc
push
push
jmp
xchg
sub
loopne
out
in
mov
xchg
inc
cmp
hlt
shrb
and
mov
add
mov
adc
xor
cmp
rcr
mov
xchg
pusha
push
adc
lods
sbb
rcr
or
cmp
iret
je
inc
loopne
mov
push
rcrb
mov
sbb
push
adc
and
xchg
or
imul
outsb
bound
lock
and
mov
dec
outsb
or
daa
sbb
test
mov
inc
sbb
add
fildll
jl
sub
pop
insb
pop
rolb
filds
inc
cmp
dec
bound
jl
push
add
in
and
dec
and
mov
add
scas
in
sub
cwtl
push
xchg
sub
loope
andl
aam
imul
cmp
hlt
adc
pop
push
pop
lock
aam
pop
test
cmp
shll
and
lock
jbe
sub
adc
push
push
mov
mov
nop
mov
add
inc
adc
inc
cwtl
js
popa
xor
xchg
scas
inc
pop
mov
nop
dec
fimuls
lret
xor
fnstsw
test
nop
push
cmp
je
mov
jno
push
hlt
pop
mov
add
mov
mov
mov
pop
fcoml
push
xchg
in
insb
pop
repnz
adc
xor
loope
jae
sbb
mov
mov
and
sar
movb
pop
jl
sti
xlat
mov
push
jo
loop
popa
or
add
jo
test
rclb
lds
xchg
pop
mov
in
sbb
in
sbb
in
sbb
add
dec
adc
push
pop
push
lds
mov
inc
sub
movsl
sub
sub
sub
inc
add
dec
sub
ret
cmp
xor
add
inc
fdivs
xor
dec
lock
hlt
jbe
mov
dec
push
mov
iret
push
shlb
inc
cmp
cmp
loop
jg
push
loopne
je
out
jp
mov
add
push
or
pop
lock
fdivrl
sub
xchg
mov
adc
push
pop
xchg
movsbl
and
call
movsb
enter
pop
or
jmp
ret
loopne
out
aad
jnp
nop
icebp
test
and
fs
push
cltd
nop
js
nop
pop
mov
daa
dec
fld
mov
mov
push
jle
add
dec
rorb
xchg
dec
push
add
inc
sub
push
or
clc
call
push
fsubl
sti
jl
mov
add
push
mov
sbb
mov
out
lods
lock
jecxz
or
push
out
xor
loopne,pn
add
dec
push
mov
jg
inc
or
xor
add
push
mov
mov
movsb
push
inc
pop
xor
loope
mov
add
add
mov
bound
clc
push
pushf
sbb
sub
es
call
outsb
mov
sbb
int3
push
mov
xchg
cmp
enter
sbb
adc
popa
cmp
add
pusha
push
fcoms
xchg
cmpsb
push
inc
dec
insb
add
in
inc
nop
fsubr
and
lahf
sub
and
sub
add
int3
xorb
mov
push
mov
mov
sub
hlt
pop
pop
dec
push
jl
or
push
inc
cmp
mov
xchg
mov
rolb
cwtl
insl
js
fimull
sysenter
in
cmpsb
ja
or
dec
sbb
lcall
rorl
jle
das
and
sbb
add
inc
aas
or
mov
add
inc
add
in
push
push
cli
adc
scas
inc
sbb
pushf
loope
dec
rcr
sbb
cs
pop
or
mov
jle
sbb
adc
xor
sub
imul
pusha
notb
or
mov
cmpsb
in
sub
jg
push
loopne
inc
mov
mov
rclb
pop
or
push
xchg
ljmp
pop
push
adc
mov
dec
sbb
adc
mov
adc
add
xlat
cwtl
dec
fsub
and
dec
jge
cwtl
jle
dec
ja
push
jo
aas
scas
dec
and
dec
adc
pop
jmp
inc
xor
pop
or
mov
add
pusha
fsubr
dec
hlt
inc
inc
iret
faddl
notl
nop
and
les
add
mov
lret
out
mov
and
pop
scas
inc
cmpsb
xchg
dec
adc
add
aad
add
inc
push
je
fiaddl
dec
dec
and
push
cwtl
add
xchg
dec
and
data16
frstor
and
nop
or
scas
push
jns
push
dec
push
iret
or
sbb
mov
and
pushf
push
scas
mov
mov
std
add
adc
lods
dec
out
les
and
add
scas
imul
mov
cmp
inc
push
test
dec
cmp
mov
or
mov
adc
and
nop
and
iret
and
lcall
pop
or
inc
or
cmpsb
sbb
and
inc
lea
sbb
movsb
push
and
cmp
mov
or
cmp
jge
in
sbb
mov
sbb
cmp
pinsrw
sbb
inc
bound
cmpsl
sbb
imul
add
cmp
outsl
pop
add
nop
fisubrl
sbb
push
stos
enter
loopne
push
dec
ret
cmp
cmp
push
add
aaa
adc
stos
mov
sbb
add
push
pop
pop
push
sub
mov
sub
popf
les
and
fcoms
pop
or
pop
mov
inc
iret
adc
repz
xchg
or
faddl
sbb
faddl
ds
mov
lods
inc
or
cmp
xchg
scas
sub
inc
inc
ss
loopne
mov
and
and
sbbb
pusha
jmp
inc
xchg
or
mov
int
lea
adc
and
lret
sub
adc
or
popa
mov
notl
cmp
pusha
mov
inc
stc
and
cmpsb
or
stos
popf
shrb
ret
repnz
mov
std
orb
fldz
mov
ficomps
push
fistl
lock
mov
adc
jg
pop
mov
add
push
out
pop
les
push
cld
int
rcr
aad
mov
mov
mov
cmp
fistl
andl
outsb
xor
push
cltd
add
xor
adc
dec
aam
or
sbb
xor
mov
gs
mov
push
out
inc
xor
pop
inc
sbb
loopne
fldt
dec
pop
add
fs
mov
inc
push
shlb
outsb
mov
in
bound
xor
cmp
out
sub
xor
arpl
mov
ficompl
ret
push
cmp
cld
inc
xchg
fcoms
scas
clc
inc
hlt
dec
cs
xlat
jnp
loopne
jo
mov
mov
jl
cld
pop
call
daa
mov
lds
mov
sti
mov
jg
sbb
sbb
push
inc
daa
add
adc
adc
ss
adc
add
pop
arpl
aaa
mov
sub
rcrb
cld
fmull
nop
push
or
sub
cs
add
pusha
and
and
mov
xorl
fadds
sbb
mov
fistl
sbb
adc
test
hlt
popa
add
clc
mov
push
cli
sti
xor
je
xor
hlt
int
mov
cmp
adc
aad
sbb
rclb
pushf
jecxz
loopne
pop
aam
lds
or
cs
push
and
pop
inc
ret
pop
add
pushf
clc
pusha
shlb
fisubs
fs
adc
and
inc
adc
adc
dec
shl
push
cmp
scas
push
sahf
jl
lock
dec
out
push
leave
rol
insl
sbb
out
rorb
push
dec
push
inc
push
adc
sbb
inc
jmp
adc
mov
ror
movsb
push
cmp
rorb
or
or
mov
outsb
aam
sub
sbb
lea
add
out
mov
incb
int3
xlat
mov
movsb
sub
adc
adc
enter
dec
or
cltd
int3
arpl
movsb
je
cs
xorl
or
mov
sti
cwtl
aam
add
test
jne
xorb
movsl
loopne
or
push
aad
mov
add
pop
in
rorl
ds
sub
in
or
and
pop
push
scas
mov
imul
push
cwtl
xchg
fsts
leave
icebp
or
je
mov
sbb
pop
jno
sbb
pop
rolb
sti
push
adc
add
dec
pop
mov
and
fwait
nop
lods
inc
and
cmp
movsl
outsb
inc
ljmp
mov
mov
bound
or
out
pop
xchg
push
pop
xor
inc
xor
xchg
inc
clc
mov
stos
lds
xchg
or
in
mov
int3
xor
jns
push
and
adc
mov
lods
adc
sub
mov
int3
dec
rorl
or
dec
icebp
in
cmp
push
in
mov
stc
add
adc
daa
lods
test
mov
dec
add
test
sub
and
or
loopne
add
mov
adc
adc
jb
push
cmp
and
cmpsl
inc
mov
out
fbld
push
out
in
and
inc
stos
pop
in
mov
sbb
std
aad
jl
mov
dec
sub
and
pushf
sbb
and
xchg
icebp
test
aaa
sbb
out
aas
and
dec
lock
ret
mov
ret
and
push
arpl
fsubrs
dec
lock
push
flds
cs
xor
call
xchg
mov
jnp
xor
or
mov
fcoml
daa
push
xchg
hlt
xor
inc
xchg
push
lock
sub
lea
or
pusha
pop
lds
jno
aad
nop
mov
add
cmp
loope
xchg
inc
add
inc
cmp
inc
cmp
inc
test
add
or
cwtl
mov
nop
aas
add
cmp
adc
mov
xor
popfw
out
rcrb
pop
xor
add
adc
out
adc
mov
cltd
dec
dec
and
inc
mov
or
imul
inc
sbb
adc
lret
insl
cwtl
shrb
test
js
test
or
rclb
aaa
sbb
cmp
lret
push
fs
inc
je
enter
mov
inc
aam
push
cwtl
inc
mov
add
or
aam
dec
jo
int3
add
cmp
sbb
xor
scas
and
fsubrl
mov
or
fmull
in
add
push
and
icebp
push
adc
fisubrs
mov
xorb
cmp
xor
repnz
test
or
or
shlb
fsts
bound
add
cmp
js
and
cmp
icebp
shll
dec
aam
testb
jl
mov
lret
xor
leave
xor
and
rorb
nop
mov
dec
ljmp
push
mov
nop
jp
lods
dec
inc
push
pop
push
add
mov
out
and
fmull
pop
sahf
lock
pop
lock
mov
pusha
cmpsl
sub
lret
xchg
jno
arpl
imul
inc
rclb
mov
mov
lock
test
pop
lods
cmp
and
add
cld
adc
add
or
mov
pusha
ljmp
add
in
mov
sbb
or
test
mov
add
sbbb
and
dec
fcoms
inc
add
inc
cmp
lret
shlb
dec
in
int3
adc
add
pop
ds
lret
sub
sarb
sub
and
loop
idivl
and
rorl
or
imul
or
and
in
xchg
xor
sbb
or
sub
pop
mov
add
pcmpgtb
pop
cltd
ret
mov
fstpt
rorb
or
movsl
fcoms
ret
les
dec
sub
hlt
popf
sbbb
dec
push
add
aaa
xor
add
rolb
push
shll
inc
aam
xor
push
mov
and
inc
mov
mov
pop
orl
xor
adc
sub
lret
hlt
into
pop
leave
int
ds
mov
test
or
stc
dec
adc
push
pusha
dec
pop
int3
dec
sbb
sahf
es
cs
test
push
sbb
pusha
js
pop
add
pop
pop
xchg
ficoml
push
loopne
lret
cwtl
into
orl
cmp
aad
or
push
add
in
outsb
xchg
adc
test
outsl
rolb
sti
adc
adc
lods
je
add
pop
lods
inc
je
ret
adc
subb
xor
mov
mov
xchg
inc
negl
int3
and
scas
mov
lahf
imul
rolb
adc
movsb
pop
inc
xchg
sbb
and
jb
aas
fmul
xchg
pop
xor
push
sbb
shrb
aad
add
and
loop
int3
fsubrl
cmp
adc
inc
and
in
or
test
and
or
xor
mov
and
mov
mov
xor
scas
xor
movsb
add
sbb
mov
xor
or
icebp
push
aad
add
adc
inc
call
mov
loopne
adc
add
sub
inc
nop
sbb
test
mov
add
rorb
pusha
mov
mov
add
add
or
inc
hlt
sarb
bound
testl
or
adc
pop
mov
cmp
imul
adc
push
pusha
ret
inc
ret
mov
mov
mov
iret
addl
sub
adc
lcall
leave
clc
and
xchg
shrb
mov
lret
lock
add
or
cs
mov
imul
jno
pop
inc
jo
or
enter
rep
shrl
sar
adc
stc
movsb
pop
lock
jnp
dec
sub
dec
je
add
std
push
in
hlt
add
in
jo
mov
adc
rcll
loopne
jg
mov
test
push
aam
mov
add
xchg
fcoms
and
and
not
mov
cmp
xor
add
shlb
push
mov
fildl
cmp
push
das
js
repz
dec
inc
add
cs
xor
js
lret
dec
or
lret
daa
enter
addl
add
pop
and
pop
hlt
imul
dec
inc
in
mov
aam
test
nop
rcrb
pusha
and
or
push
cltd
add
push
daa
das
pop
sub
adc
mov
lods
pop
das
rclb
mov
and
push
dec
fs
sbb
cmpb
cmpsl
jp
add
or
push
in
jl
xor
lock
pop
pusha
inc
in
js
addr16
test
aad
mov
sub
mov
add
sub
faddl
push
cmc
std
sub
das
in
cmp
mov
xor
hlt
pop
cltd
iret
add
add
in
mov
pusha
ja
add
jmp
inc
insb
test
int3
mov
xor
js
cmp
and
adc
outsb
ss
lods
xchg
insb
movsb
test
and
and
pop
or
ret
and
add
mov
pusha
dec
and
call
int
mov
pop
pop
out
enter
mov
adc
jl
jo
pop
and
movsb
inc
push
push
or
push
jo
or
adc
inc
pop
and
dec
rcrl
or
aas
wrmsr
mov
xor
clc
xor
push
mov
or
enter
adc
loopne
test
add
stc
xchg
xchg
push
les
popa
cmp
xor
xchg
ljmp
pop
add
dec
cld
pop
enter
sub
sub
adc
in
add
dec
jge
pop
test
pop
mov
or
in
lretw
mov
jne
xchg
cmp
stc
nop
sub
les
xchg
sub
hlt
sub
test
dec
ret
push
add
es
cmp
dec
xchg
push
sub
adc
cmc
mov
dec
lahf
daa
inc
xchg
mov
sbb
add
push
adc
add
lods
in
repnz
and
test
add
nop
xchg
and
and
icebp
setb
and
xchg
lret
pop
test
or
hlt
notl
mov
outsb
pop
push
add
or
mov
testb
inc
cs
and
dec
xchg
and
lock
mov
fs
jmp
dec
add
dec
mov
pop
nop
pop
sahf
lods
cwtl
lock
inc
scas
inc
repz
inc
inc
in
lods
fcmovnbe
repnz
inc
inc
mov
dec
inc
mov
xor
ljmp
fsubrs
js
loopne
rorb
mov
xor
or
int3
mov
sbb
ret
or
adc
pusha
mov
dec
int3
adc
sbb
rorb
mov
mov
jo
sbb
lods
enter
jo
in
aas
popf
xor
pusha
fcoml
dec
push
mov
pop
pop
jp
fidivrs
and
mov
adc
test
mov
and
fcomps
pop
fidivs
sub
lret
jl
jo
mov
push
dec
cmp
add
fldl
pop
cwtl
sbb
push
and
roll
sbb
cs
adc
push
adc
cld
sarl
inc
js
call
dec
lods
or
pop
and
xchg
mov
or
mov
rcll
dec
cmp
das
lret
cwtl
sub
pop
pop
pusha
push
loope
imul
adc
push
test
or
add
test
into
push
dec
les
mov
jg
and
or
sub
mov
inc
lock
aas
enter
dec
pushf
mov
sbb
and
add
and
and
subl
push
lods
orl
jo
pop
cwtl
or
dec
faddp
rol
sar
sahf
or
sub
mov
outsb
shl
incl
push
push
pop
nop
call
mov
or
adc
mov
or
mov
xlat
push
and
and
push
hlt
dec
sti
popa
xchg
loopne
sbb
fcomp
or
int3
push
push
dec
test
mov
pop
adc
out
inc
jmp
ss
jb
jecxz
test
outsb
movsl
je
test
dec
int3
dec
pusha
jns
sub
or
push
dec
and
xlat
inc
stc
dec
lcall
mov
sub
xchg
nop
adc
dec
xchg
cmpsl
or
xchg
js
push
xchg
jl
cmp
out
fimuls
dec
or
and
lods
sub
or
adc
sub
movsl
dec
test
adc
shll
enter
mov
out
aad
dec
lods
and
pop
dec
cwtl
xchg
daa
enter
movsb
test
mov
insl
xchg
and
jb
test
dec
mov
bound
cmp
mov
xchg
pop
dec
pop
and
aam
adc
shll
xchg
add
pushf
pop
add
dec
jle
cwtl
pop
mov
rcrb
lods
push
sbb
pop
test
pop
fiadds
adc
cmc
jg
push
in
daa
push
jbe,pn
xchg
imul
push
cmp
call
push
test
mov
jo
and
jp,pn
xchg
or
lods
bound
push
add
mov
add
ret
mov
clc
dec
xchg
jne
popa
clc
outsb
fldcw
add
cmc
icebp
dec
mov
cmp
adc
adc
mov
push
sbb
push
js
mov
les
les
and
inc
xor
mov
iret
imul
and
mov
xor
in
xchg
push
xchg
rorb
test
push
shrb
les
in
mov
outsb
xchg
leave
adcb
push
mov
and
mov
and
pop
mov
scas
shll
mov
push
push
adc
push
sbb
push
test
loopne
add
adc
push
jo
xchg
aam
outsl
mov
and
movsb
xchg
stc
mov
test
mov
subb
jo
iret
sbb
fldl
int3
dec
out
cltd
add
inc
test
cld
dec
and
sbb
call
add
stos
push
outsb
dec
adc
shlb
jo
push
and
inc
mov
add
mov
lods
or
jo
adc
insb
mov
cmp
and
loopne
mov
inc
stos
rolb
adc
xchg
sbb
add
cmp
sub
adc
mov
jo
and
inc
movsb
and
inc
mov
out
push
sbb
rorl
lea
sahf
sbb
lahf
xchg
pop
push
test
jns
adc
sbb
mov
pop
bound
je
xchg
or
cmp
dec
mov
push
nop
lret
std
mov
subl
sub
push
mov
pop
movsb
cwtl
loopne
test
inc
popf
xchg
fiaddl
add
int3
addb
ja
loope
mov
fists
inc
adc
dec
mov
jbe
out
les
fimuls
inc
add
mov
adc
lcall
test
add
insb
push
jl
mov
adc
lock
adcb
dec
mov
push
cs
add
mov
leave
cmp
andb
xchg
mov
sub
xlat
test
rclb
fsubrs
test
add
mov
xor
add
lahf
es
lods
sbb
jl
inc
leave
adc
push
cmp
cs
mov
mov
pop
test
cld
add
les
adc
and
dec
ljmp
or
cmp
or
push
rcl
add
ret
lods
or
xchg
test
adc
fmuls
add
dec
mov
enter
sbb
fnsave
inc
xchg
adc
push
fmuls
fs
push
push
and
mov
fistpl
cld
inc
pusha
adc
insl
pushf
test
dec
jnp
rorl
add
or
shlb
enter
adc
lods
mov
add
icebp
lods
dec
idiv
xchg
dec
sbb
fisubl
ret
adc
scas
cli
test
sbb
push
and
dec
inc
test
aam
mov
jg
add
sbb
rcrb
inc
adc
mov
sub
lock
push
and
xor
sub
sub
sub
inc
push
push
add
fcom
and
add
or
xlat
or
inc
push
ret
adc
cld
cmp
mov
jo
bound
inc
sub
les
test
add
mov
push
adc
fiadds
sub
adc
push
mov
xchg
and
inc
sbb
lods
add
jb
adc
push
rcll
add
or
dec
out
adc
sub
adc
cmp
int3
scas
sbb
mov
sbb
call
test
mov
jl
and
add
repz
in
push
adc
out
rorb
cltd
push
aam
loopne
and
push
xchg
pop
inc
pop
inc
shll
adc
xchg
andb
mov
aas
das
fcoml
lock
in
mov
fidivs
mov
in
or
xlat
pop
push
add
cs
inc
jp
test
divb
mov
inc
insb
push
sbb
lock
push
xchg
push
mov
ss
ret
sbb
inc
popa
sbb
fstp
int3
and
int3
rorb
fiaddl
aas
jl
sbb
subb
shlb
pushf
subb
dec
push
outsb
dec
lods
mov
sub
data16
xor
and
dec
or
enter
fbld
int3
cmp
popa
loopne
scas
and
push
nop
nop
stc
repnz
or
and
sbb
push
pop
inc
mov
add
and
or
lahf
nop
xor
add
andb
in
subb
add
js
test
push
mov
xor
aaa
mov
test
sbb
push
mov
cmp
dec
mov
or
pusha
je
sub
mov
mov
scas
dec
mov
imul
and
or
and
cmpsb
mov
or
or
adc
mov
mov
fadd
dec
xor
hlt
mov
pop
ja
mov
mov
js
adc
repnz
mov
sbb
inc
nop
or
cmp
mov
xchg
jl
push
clc
xor
lds
jl
dec
xchg
mov
imul
adc
rcll
and
adc
rcrb
inc
jge
add
or
cmpsl
jl
mov
cmp
lods
and
and
addl
sub
and
inc
jbe
or
pusha
outsb
sbb
dec
fsubrs
xchg
push
decb
int3
fs
and
add
out
test
inc
mov
sbb
std
negb
sub
pop
add
je
lock
jo
jb
pushf
clflush
sub
xor
nop
lret
aam
daa
ret
pop
add
je
ds
jmp
test
cmp
je
push
ljmp
test
add
aam
lret
mov
jno
push
lock
movsl
cltd
movsb
shrb
xchg
push
adc
iret
jnp
sub
push
mov
cmc
daa
xor
pop
mov
push
add
jno
push
test
push
mov
sahf
icebp
xor
clc
lret
or
or
adc
push
add
fcoms
iret
pop
pop
data16
sbb
sub
call
rclb
mov
push
jl
cld
inc
or
insl
inc
das
push
add
or
xor
fmuls
mov
data16
and
sub
xchg
add
faddl
inc
enter
int3
fmull
pop
nop
nop
or
enter
cmpb
inc
jns
mov
cmovb
xchg
xor
or
test
or
push
mov
inc
fwait
dec
adc
cmp
pop
ret
inc
cwtl
ss
in
fildll
pop
pop
push
cwtl
jns
scas
mov
sbb
jge
lahf
lods
test
dec
push
das
sbbb
ss
xchg
pop
enter
add
test
pusha
mov
xchg
sub
subl
aad
xlat
adc
adcb
pop
add
fisttpl
pop
add
mov
stos
cs
xchg
sub
dec
pop
jae
mov
aam
orb
sbb
sub
cwtl
cld
jne
sbb
sub
dec
or
jo
mov
add
stos
mov
test
pop
and
psllq
or
mov
xchg
pushf
xchg
or
rolb
mov
push
shlb
jbe
arpl
and
pop
frstor
fbld
aad
in
cmp
sub
imul
aaa
roll
pop
add
push
pusha
jae
gs
outsl
js
hlt
adc
repnz
pop
iret
push
lock
les
add
xchg
add
mov
je
or
add
dec
jmp
mov
cs
push
mov
pusha
and
add
es
xchg
pop
add
clc
pop
popf
dec
sbb
sbb
je
clc
push
testb
dec
test
test
inc
and
cmp
lods
es
test
cld
dec
sbb
mov
roll
and
or
xor
call
inc
push
push
cli
jecxz
mov
mov
xchg
mov
or
mov
aas
popl
call
fistpl
ret
out
mov
xor
xor
push
mov
scas
fmuls
loope
xchg
jl
pop
clc
fsubrl
push
enter
push
pop
sbb
mov
and
sub
daa
pop
enter
or
and
adc
dec
jecxz
and
cmc
andl
dec
mov
jecxz
orb
mov
push
push
repnz
sbb
mov
mov
cs
rcll
adc
enter
popf
xchg
je
jne
mov
lea
out
popf
je
aad
sahf
loopne
inc
mov
out
inc
xchg
mov
mov
mov
sbb
fsubl
push
stc
adc
mov
xor
pusha
pop
filds
sub
push
les
aam
xchg
andb
push
xchg
inc
sub
or
push
fimuls
aad
mov
and
mov
cmp
outsl
js
mov
je
sbb
or
sbb
stc
pop
sub
mov
ficompl
cmpsb
enter
dec
pop
push
xor
lds
push
hlt
cwtl
ret
add
lods
les
cmp
ljmp
call
dec
sub
mov
inc
mov
dec
push
adc
mov
mov
inc
fs
test
jns
cli
lock
imul
mov
loope
or
add
sbb
pusha
cltd
clc
into
cwtl
mov
or
je
lods
push
inc
les
add
adc
inc
movsl
test
sub
push
xchg
inc
or
fmull
lock
add
scas
sbb
int3
int3
push
loopne
mov
clc
fidivs
decl
and
dec
outsl
sub
mov
repnz
inc
adc
jbe
inc
jae
mov
movsb
je
or
test
shll
dec
cwtl
mov
inc
sub
sar
jo
and
testb
inc
clc
test
call
adc
and
pop
add
lret
shlb
mov
mov
inc
int3
pusha
hlt
mov
outsb
fcoml
inc
xchg
in
pushf
push
loope
push
int3
bound
or
pop
pusha
inc
data16
fisubs
sub
inc
flds
adc
pop
add
pop
cmp
push
loope
dec
or
roll
mov
sbb
and
pop
mov
and
and
ret
or
nop
jae
jmp
pop
inc
push
or
push
aam
push
pop
xor
hlt
jl
or
nop
lds
mov
pushf
add
jo
pop
adc
adc
jne
jns
push
pushf
cmp
sbb
inc
mov
add
pop
inc
cmp
and
adc
mov
ret
mov
sarb
hlt
xchg
jno
cmpb
inc
mov
addl
outsl
shll
or
das
adc
flds
in
or
xlat
and
and
xor
int3
rolb
xchg
mov
adc
ds
call
sbb
ret
mov
inc
or
aas
in
xor
repz
push
lret
cli
repz
adc
and
xor
mov
mov
jg
js
inc
sub
pop
ja
xor
test
sub
push
lock
fstps
test
or
hlt
cmovbe
leave
adc
jecxz
nop
mov
je
mov
test
inc
shrb
mov
or
and
xor
in
pop
bound
int3
sahf
orb
xor
push
test
mov
cwtl
jnp
pusha
push
jmp
jl
push
mov
push
out
fptan
lods
sbb
dec
and
nop
sbb
clc
fsubs
fdivl
mov
mov
pop
dec
bswap
xor
adc
or
rcll
sbb
aam
sub
mov
call
mov
xchg
les
mov
mov
and
test
dec
test
pusha
mov
loopne
jbe
sbbb
add
pop
dec
cwtl
pusha
add
jle
jg
rolb
inc
cmp
mov
insb
pop
sub
pushf
dec
hlt
je
push
shll
mov
sub
mov
sbb
and
test
cld
pop
in
cwtl
rclb
jo
aas
xlat
ljmp
stc
jbe
and
inc
or
xchg
adc
mov
cmp
and
daa
stc
stos
jle
adc
inc
dec
mov
mov
jle
test
rorl
call
stos
sbb
das
sbb
jns
mov
inc
je
mov
pop
outsb
orb
adc
push
and
idivl
inc
mov
push
push
sub
mov
pop
and
loopne
call
xchg
dec
mov
aam
jo
xchg
cmp
mov
dec
jb
mov
xor
push
push
fimuls
pop
add
loopne
out
hlt
ja
jge
pop
fsubs
jns
cld
pop
add
addl
repz
lock
pop
add
int3
sarb
test
dec
mov
hlt
and
dec
sbb
aam
mov
xchg
icebp
outsb
shl
andb
or
and
and
add
mov
aam
adc
and
sub
adc
xchg
in
in
fadds
enter
cs
mov
int
sub
leave
add
jmp
fs
add
pusha
in
test
inc
lods
sbb
inc
add
imul
adc
mov
cs
add
imul
xchg
movsb
push
mov
xor
pushf
or
cmp
hlt
loopne
and
out
fadds
pop
adc
push
mov
pop
inc
and
mov
jae
mov
enter
xor
bound
mov
mov
dec
or
dec
mov
add
stc
sbbl
aam
pop
mov
in
fs
mov
or
loope
add
lahf
add
fsubr
adc
push
xchg
fs
or
or
inc
mov
xchg
mov
test
inc
and
outsl
jo
popa
inc
inc
and
xchg
jmp
or
pop
push
dec
xor
outsl
daa
pop
push
pop
movsb
xchg
bound
add
jl
cld
mov
cmp
iret
or
jo
push
test
mov
inc
add
cs
jp
and
or
fisubrl
je
adc
adc
jp
dec
mov
xor
sbb
rcrb
inc
dec
xchg
out
pop
adc
cld
ret
jno
mov
movsl
jb
and
daa
and
or
lret
leave
sbb
mov
cs
mov
lea
pop
pop
loopne
pop
adc
jge
or
add
mov
xchg
dec
stc
adc
xchg
jns
hlt
sbb
pop
pop
inc
lock
cmp
inc
les
dec
sub
dec
fs
shl
mov
enter
ss
cmp
inc
sub
aaa
xchg
inc
sti
icebp
adc
pop
nop
pop
ds
stc
adc
notb
sbb
jnp
xchg
push
popa
pop
and
and
and
rorb
mov
push
test
jl
push
dec
jp
hlt
bound
xchg
ds
mov
inc
and
nop
cmp
enter
in
call
adc
dec
jg
adc
jbe
not
adc
sarb
fwait
mov
pop
dec
clc
adc
mov
cld
adc
xchg
idivb
shl
out
mov
hlt
mov
aas
or
mov
adc
mov
add
cmp
cmc
les
push
add
ds
into
or
adcl
pop
jno
xor
nop
addb
hlt
nop
imul
notb
sub
adc
clc
and
sti
xor
jmp
std
sub
adcb
add
cmp
cmpsl
or
je
incl
aas
mov
test
dec
cmp
dec
mov
mov
fdivp
leave
or
jno
mov
test
out
jnp
add
pop
fcompl
scas
cmp
adc
jle
in
xor
dec
dec
xchg
stos
or
mov
insl
lret
dec
mov
out
pusha
scas
bound
test
je
fisubs
fidivrl
xchg
outsb
push
xlat
ret
nop
aam
imul
sbbl
scas
sahf
inc
sbb
pop
or
cmp
push
pop
insb
cwtl
dec
outsb
pop
call
sbb
shlb
test
jbe
jge
in
add
pushf
test
adc
enter
scas
jle
repz
add
mov
push
lock
push
sbb
rcll
inc
dec
iret
adc
mov
scas
and
adc
adc
in
lea
sub
inc
nop
outsl
and
inc
cwtl
and
mov
repnz
adc
sbb
or
mov
xchg
nop
clc
cmpsb
mov
sbb
jns
sbb
call
sbbl
loop
cmp
sbb
je
pop
ror
lret
mov
cmc
add
xor
jno
rcrl
rorb
inc
fcoms
cmc
or
test
and
xchg
int
push
inc
jmp
jmp
xchg
xchg
sub
fildl
aas
or
push
cli
pop
or
add
adc
daa
and
loopne
lods
or
adcb
cmp
pop
sbb
mov
cmp
hlt
push
jbe
pop
shll
mov
sbb
add
lret
inc
inc
lret
push
xor
xor
lods
mov
add
call
push
jmp
fs
push
cmp
mov
les
or
leave
or
push
sub
popa
pop
sbb
das
mov
ss
mov
sub
cmp
scas
leave
negl
dec
jne
enter
mov
add
mov
loopne
cmp
js
add
pop
pop
and
push
fdivr
insl
mov
or
or
stos
shl
lods
mov
cmp
lods
les
sub
fmuls
sbb
ret
ficoms
out
fisubrl
scas
fxch
inc
lods
daa
add
or
icebp
mov
jns
rorl
in
jo
xor
xchg
cmp
inc
pusha
pop
jne
nop
rcll
and
aaa
test
enter
repz
xchg
mov
shl
insb
js
add
add
jp
sub
cld
pop
adc
jo
jnp
sti
push
push
add
or
das
add
dec
in
inc
xor
push
xor
add
lret
push
xchg
xchg
cmp
push
aam
insb
lods
mov
sub
pop
insb
outsl
cwtl
adc
dec
and
pop
leave
cmp
clc
xor
ja
inc
jne
lcall
xor
or
lock
sbb
push
dec
jo
in
pop
push
cmc
push
or
lret
daa
mov
or
push
inc
lods
aam
sub
and
lret
js
mov
mov
repz
imul
ret
enter
repnz
lret
mov
call
popa
lock
cmp
mov
adc
cwtl
enter
fnsave
inc
sbb
lret
jno
or
dec
lea
jno
test
push
rorb
xor
into
inc
pop
nop
dec
sub
pop
xor
xchg
xor
xchg
pop
mov
inc
daa
xchg
xchg
movsb
jne
mov
enter
mov
and
rcrb
push
loopne
das
jo
into
jl
xorps
call
adc
and
add
mov
rcl
push
clc
daa
jecxz
push
mov
cs
loopne
outsl
sti
jb
and
pop
cmc
icebp
or
add
flds
adc
movmskps
iret
imulb
and
push
mov
rorb
cmp
xor
sub
adc
or
inc
xlat
mov
add
xchg
and
pop
fcoms
sti
jae
popf
pop
xor
idivl
cli
xchg
loope
outsl
dec
mov
jl
jp
dec
dec
shlb
in
roll
dec
pop
jne
cmp
pop
mov
mov
mov
jl
xor
add
xorl
test
jnp
sub
mov
xorb
leave
pop
inc
insb
adc
xor
js
pusha
idiv
mov
call
jg
test
jp
sub
add
cmp
sbb
cltd
cmp
call
pop
mov
int3
inc
sarb
test
out
xchg
fs
pop
rolb
pop
jg
in
mov
inc
mov
and
and
pusha
push
xor
orb
pushf
dec
fildl
ret
adc
sahf
mov
arpl
cmp
sub
adc
lock
push
or
clc
cmpsb
push
lret
cmpsl
sbb
movsb
out
test
or
mov
xor
fstpt
push
ljmp
xor
and
push
cmpb
mov
mov
enter
add
push
decb
add
mov
mov
xor
push
add
pop
or
xchg
add
pop
fldt
jl
jmp
notb
mov
mov
cltd
sbb
sub
call
test
xor
mov
out
push
sbb
xor
inc
adc
dec
add
sub
mov
pop
or
adc
sbb
mov
fmuls
sub
and
xchg
xor
lcall
adc
cli
rclb
stc
mov
sub
and
dec
test
stc
popa
cmp
dec
or
clc
ret
dec
sub
clc
test
or
pop
decl
adc
dec
mov
lock
mov
mov
jo
js
push
xor
test
pop
cli
or
mov
mov
jo
mov
adc
xor
enter
sti
test
mov
roll
mov
adc
adc
dec
loopne
ds
test
in
cmpb
mov
fisubrs
call
out
rorl
sub
jnp
sub
iret
jecxz
hlt
push
loopne
add
stos
cld
cld
adc
xor
add
rclb
cmpsb
stc
lea
pop
sub
xor
sar
or
xor
repz
inc
or
adc
mov
add
inc
xchg
xchg
or
inc
fsubl
xor
jmp
mov
mov
cmp
xchg
mov
dec
cmp
mov
mov
push
sub
add
pop
add
loope
sub
clc
lahf
add
cmp
rcll
xor
cmp
movb
adc
enter
xchg
aam
cld
leave
das
add
std
jno
fs
aam
push
call
fldt
add
jae
pop
add
sahf
push
cli
pop
sub
xchg
mov
dec
xchg
or
lret
and
pop
sbb
sub
mov
sbb
inc
icebp
push
repnz
lock
xor
sbb
mov
cli
add
adc
or
and
aam
push
xchg
rorl
jo
imul
xchg
add
aam
xor
mov
hlt
add
mov
inc
mov
sub
add
adc
jne
adc
in
pusha
int3
mov
les
popa
dec
insb
dec
sub
subb
add
je
fcomi
push
jg
adc
push
sub
xor
test
cs
into
insl
and
adc
sbb
bound
imul
lock
sbbl
insb
sub
add
and
mov
pop
testb
enter
jl
arpl
mov
fdivr
dec
mov
in
sub
xchg
mov
les
xor
cld
mov
dec
pushf
push
call
mov
adc
pop
cmp
sbb
pop
fmull
adc
jecxz
mov
cmp
loop
and
inc
adc
in
mov
je
out
iret
xor
movsb
and
jmp
fsubr
push
push
fistpll
sbb
adc
xchg
inc
lock
pop
repnz
pop
lock
pop
shrb
jno
pop
lock
dec
adc
lock
cmpsl
jp
les
mov
pop
mov
push
jmp
cmp
and
fs
sub
pop
or
nop
loopne
in
cmp
xor
repz
jmp
and
scas
es
adc
or
dec
hlt
dec
inc
pop
mov
out
sub
add
adc
icebp
fldenv
xchg
test
out
and
sub
cwtl
xor
lock
jb
imul
and
mov
test
cmp
clc
aam
mov
shrb
stc
loopne
out
push
sbb
xchg
scas
sub
and
sbb
dec
leave
jns
pop
les
out
mov
adc
and
cmp
cmpsl
pop
and
icebp
and
pop
js
push
fbld
pop
inc
sbb
fstl
adc
shlb
mov
pop
push
and
dec
sahf
mov
lret
lahf
test
mov
popf
mov
lret
inc
adc
mov
and
sti
and
nop
pop
xor
cs
pushf
cli
push
popa
and
jb
xorb
add
or
inc
pop
or
inc
fadds
in
add
jl
add
std
or
ja
js
das
or
add
xlat
pop
or
xchg
cmp
sub
mov
pop
test
cs
or
inc
mov
test
inc
sbb
push
or
decl
xor
and
or
sbb
mov
dec
test
insb
sub
fs
mov
lock
sub
hlt
mov
inc
mov
xlat
or
nop
adc
mov
xchg
pushf
or
xchg
adc
test
in
lret
nop
sub
xchg
dec
adc
nop
enter
or
fwait
adc
xchg
je
lcall
push
sarl
sbb
adc
xor
sahf
or
adcl
dec
sub
jg
adc
lock
insb
pushf
push
test
mov
faddl
lock
and
mov
or
mov
jbe
mov
fldt
adc
add
ret
cmp
adc
adc
in
icebp
and
fmuls
stc
pop
mov
pop
in
dec
int3
in
cs
sub
or
or
xor
hlt
loope
cmp
loop
and
or
add
cltd
call
rorb
mov
and
in
dec
adc
and
fstpl
jb
and
xor
pop
xchg
add
and
popa
popf
xorl
or
mov
lock
sbb
xchg
mov
loope
daa
adc
sbb
leave
cmp
das
sbb
xchg
mov
jo
out
pmaxsw
adc
sbb
cmc
sbb
pop
test
inc
mov
jno
sub
mov
jns
test
repnz
adc
mov
dec
sahf
mov
lahf
mov
movsb
pushf
lock
xchg
fs
mov
lret
mov
adc
ljmp
andl
mov
cmpsl
loopne
mov
mov
sub
hlt
mov
mov
fadds
push
mov
or
das
loope
stc
ja
or
int
mov
mov
push
sub
inc
add
dec
pop
scas
pop
sub
jne
test
cmp
pop
test
adc
test
cs
pop
pusha
inc
loopne
inc
or
mov
test
das
xorl
sbb
test
inc
sub
fcomps
xchg
sbb
lock
pop
and
inc
test
or
out
inc
adc
dec
adc
int3
or
push
fmull
cs
nop
pop
dec
dec
adc
orb
adc
in
push
push
dec
adc
ja
sub
xor
outsb
add
adc
js
fdivl
inc
aaa
lret
rcll
enter
sub
fdivrl
sub
mov
cmp
pop
sub
pop
mov
in
jo
aas
adc
lock
adc
add
jl
hlt
rorl
or
mov
inc
cmp
fisttpl
cmp
clc
and
nop
or
inc
adc
scas
and
sub
dec
mov
addl
or
loop
mov
dec
aam
or
xor
or
push
fisubs
mov
sub
js
cmp
mov
xchg
sahf
aam
and
scas
sub
push
or
jns
inc
cmp
inc
dec
add
push
lds
sub
xchg
or
or
cld
gs
xchg
mov
or
push
jb
cmp
xchg
or
mov
in
cmp
xchg
or
and
in
cmp
popl
adc
push
mov
pop
adc
push
push
sti
and
push
outsl
stc
mov
xlat
jb
pop
pop
or
adc
test
popl
push
test
or
test
popa
or
pushf
or
mov
test
jae
add
pop
stc
sub
cli
inc
dec
mov
push
pushf
std
cmpsl
adc
xchg
bound
dec
add
adc
out
push
pop
loope
adc
nop
in
sub
jecxz
xchg
out
nop
in
adc
nop
in
jb
in
je
out
mov
nop
sub
adc
insb
add
cmp
js
pop
jmp
jmp
dec
adc
cwtl
sub
adc
ljmp
and
cmp
bound
adc
shlb
push
rclb
cwtl
jo
movsl
adc
roll
pusha
cmp
sbb
mov
xor
ds
jno
xchg
xchg
or
mov
aad
jae
or
test
dec
pop
or
push
fisubrl
xlat
ja
clc
push
mov
dec
dec
lret
or
adc
or
jecxz
mov
inc
cwtl
pop
xchg
fisttps
adc
enter
or
inc
fmull
test
cmp
test
test
xchg
cmp
push
adc
mov
pop
frstor
cs
and
mov
push
int3
js
adc
mov
xor
addr16
cmp
and
and
adc
pop
pop
enter
or
cld
and
sbb
nop
jns
adc
sbb
cwtl
add
fstpl
mov
jno
sbb
or
sbb
inc
fcmovu
and
sbb
xchg
inc
fcmovb
push
pop
stc
cmp
xchg
fimuls
cmp
and
nop
mov
lcall
inc
stc
and
and
xchg
pop
test
or
aaa
mov
cwtl
or
or
mov
in
or
sub
jno
push
test
or
cld
stc
test
inc
adc
xchg
mov
adc
sbb
adc
push
in
nop
inc
xchg
leave
loopne
and
cmp
push
adc
xchg
adc
mov
mov
jb
nop
inc
cwtl
enter
dec
adc
je
popf
pushf
adc
nop
xchg
pushf
cmp
push
sbb
test
sahf
sub
xchg
adcb
adc
pushf
addb
ret
in
adc
adc
std
adc
xchg
jb
or
adc
mov
mov
and
mov
cmpsl
add
shl
mov
shll
pop
jecxz
rcr
and
clc
pop
or
arpl
mull
iret
adc
rol
add
mov
test
cmp
sbb
sub
or
xor
cs
ret
and
xchg
cld
mov
pop
xchg
dec
lahf
or
enter
loopne
push
and
cmp
inc
clc
stc
xlat
movsb
cmp
push
cmp
cmp
inc
popl
xor
mov
fcoms
js
inc
cmp
pop
xchg
cmp
lds
lahf
or
sub
dec
sbb
insb
js
dec
movsb
rorl
dec
mov
cmp
mov
sbb
rorb
and
fs
cltd
enter
cmp
enter
mov
out
xchg
lock
orl
mov
jb
adc
xchg
in
mov
pop
fimuls
or
clc
in
sub
pop
cs
or
push
mov
pop
mov
push
test
or
push
mov
sub
out
adc
mov
rclb
mov
or
push
movsl
clc
push
dec
cli
jno
pop
inc
or
cli
inc
pushf
inc
xchg
adc
push
mov
stc
jle
push
dec
dec
adc
push
les
clc
mov
adc
subb
adc
adc
inc
dec
enter
dec
adc
je
test
inc
xor
test
adc
adc
jmp
in
mov
pop
pop
and
cmp
lock
pop
cmp
mov
adc
adc
out
sub
xchg
aas
sub
cmpsb
jo
ds
or
xor
pushf
cmpsb
pop
cmp
enter
out
inc
shrb
mov
popl
adc
icebp
movsl
lcall
clc
jg
adc
das
sbb
xchg
lret
and
sub
and
adc
outsb
sub
push
or
or
nop
or
fcomps
or
inc
or
push
mov
dec
mov
lock
mov
inc
clc
cs
sub
js
cmp
xor
pop
inc
es
outsb
sub
adc
or
repz
test
clc
ret
imul
sarl
sbb
or
cwtl
xchg
stc
mov
in
cmp
xchg
adc
clc
enter
aas
bound
and
nop
mov
pop
test
clc
cmp
enter
push
test
or
adc
test
or
test
test
or
mov
test
clc
push
repz
push
or
xor
sub
cld
jb
repnz
movsl
adc
into
and
sub
adc
xlat
sub
jecxz
adc
and
cmp
addr16
sub
adc
lock
in
adc
je
out
adc
mov
adc
add
nop
in
push
in
leave
hlt
jns
inc
in
sub
out
sub
jae
adc
adc
std
adc
sub
pop
rcll
fildl
cmpsb
jo
aad
xor
or
cmc
lret
fs
insb
adc
testb
sbb
sbb
or
inc
nop
and
mov
rcrb
adc
lods
adc
and
mov
lret
rcll
add
pop
sub
and
add
rcll
ret
pop
lods
xlat
cmp
ret
add
cmp
adc
nop
sbb
adc
jmp
lds
and
movl
clc
ret
mov
push
dec
adc
sbb
ds
clc
mov
sbb
call
sub
cmpsl
rclb
push
imul
mov
mov
sahf
mov
jle
xor
add
mov
push
push
push
lock
add
xor
icebp
xor
xor
add
mov
mov
mov
ret
enter
les
hlt
xor
mov
pop
outsb
xchg
mov
bound
test
inc
or
arpl
push
sub
in
mov
insb
or
arpl
mov
mov
jno
xchg
sub
scas
cwtl
aam
push
in
aas
jecxz
popa
sub
mov
or
hlt
sbb
inc
notb
sbb
out
faddl
adc
sub
mov
cwtl
fimull
mov
sbb
mov
cmp
dec
call
mov
dec
and
repnz
popa
sub
adc
nop
mov
jg
sbb
or
call
js
push
mov
dec
test
es
test
pop
pop
jno
daa
rorb
pop
sbb
fstpl
jo
sahf
add
sub
and
adc
arpl
shll
aam
rolb
daa
out
xlat
pop
sbb
sbb
bound
and
sub
ret
push
clc
mov
inc
sahf
or
mov
hlt
jo
mov
ds
push
add
pop
push
push
inc
pop
mov
or
js
mov
push
fdivl
jg
push
insl
js
nop
xor
cld
push
test
jl
push
pop
jne
js
dec
nop
into
cld
push
add
mov
fsubl
test
add
add
cmp
movl
and
push
push
fbstp
add
mov
dec
jne
pop
adc
pop
pop
pop
inc
dec
inc
adc
add
xor
and
in
mov
lret
cli
add
mov
stos
int3
dec
add
lds
movsb
and
or
bound
sbb
mov
insb
adc
add
xor
scas
push
data16
xchg
incl
aam
fwait
adc
sbb
test
and
push
cmp
leave
or
push
jmp
inc
in
or
push
loopne
mov
test
xorb
aam
outsl
fstpt
rcr
jno
andl
dec
mov
lods
fnsave
subb
movaps
push
mov
or
jl
push
shl
inc
pushf
scas
andl
scas
into
mov
sbb
or
cld
test
xchg
pop
dec
push
lods
push
cwtl
inc
xor
mov
cld
pop
daa
xchg
cli
adc
or
jae
mov
cmp
hlt
enter
cltd
test
push
adc
call
lock
sti
scas
xor
aas
sub
jnp
add
xchg
cli
add
pop
mov
inc
cmpsb
push
jns
popf
fcmovne
xor
mov
or
and
mov
dec
into
in
push
cltd
add
inc
cwtl
dec
enter
sbb
lds
mov
sahf
xor
mov
push
or
push
and
mov
or
and
mov
push
inc
mov
push
adc
sarb
add
xchg
cmovp
in
inc
cmp
or
push
test
test
add
mov
mov
add
push
pop
and
sbb
xor
push
ljmp
fdivrs
fistl
or
cmp
movsl
pop
xorb
mov
cmp
mov
mov
fucomp
inc
addr16
popa
test
pop
xchg
sbb
xor
adc
cmc
out
jno
xchg
xor
repnz
sub
test
mov
aam
dec
and
repz
xor
imul
insb
sub
xor
inc
negl
shll
sti
push
dec
push
cmp
mov
lods
mov
call
dec
inc
push
dec
mov
push
add
icebp
add
imul
sbb
and
cmp
or
mov
pop
add
cmp
push
scas
sbb
add
or
or
sbb
jp
jne
xor
xor
iret
xor
dec
push
pop
jo
cmp
cwtl
and
mov
in
xlat
inc
and
mov
and
jl
xor
ja
mov
jl
and
add
adc
jae
dec
sbb
xor
lock
add
sbb
mov
test
jo
nop
test
add
lea
adc
repnz
filds
xchg
hlt
cmc
call
leave
jne
inc
nop
push
add
ss
addb
add
sub
mov
mov
adc
addr16
loopne
clc
fists
mov
lock
daa
out
push
int3
or
xchg
leave
aad
loopne
pop
sbb
addr16
or
pop
jmp
cmpsb
inc
xor
xchg
lods
je
or
xor
push
inc
or
hlt
aam
stos
jae
js
fistps
mov
mov
fs
mov
lods
or
jo
dec
movsb
pop
les
cmp
mov
jmp
inc
sub
or
enter
pop
sub
or
push
push
add
stc
push
cmp
adc
hlt
adc
dec
push
lds
test
les
add
sub
add
or
adc
cmp
pop
jg
lea
clc
shl
inc
fcmovu
and
xor
pause
shrl
mov
and
push
mov
pop
pop
sub
push
mov
lods
cwtl
repnz
mov
xlat
mov
pop
push
inc
mov
adc
in
das
je,pn
addr16
or
aam
fdivp
add
pop
mov
sahf
scas
fstpt
xchg
test
or
push
sti
sub
mov
shrb
imull
nop
addb
fnstsw
out
cmp
int3
js
and
les
xchg
int3
mov
push
sbb
sbb
jbe
mov
or
lret
mov
mov
je
fdivp
and
outsb
pop
shrd
das
add
mov
add
add
jl
icebp
cs
lret
cmp
add
inc
lock
pop
inc
cs
cmp
insb
inc
xlat
mov
pop
sub
test
pop
mov
faddl
push
mov
test
repnz
nopl
test
sub
adc
or
and
add
fadds
pusha
sbb
push
and
enter
cmpb
push
fsubp
and
lret
and
enter
pop
add
lret
mov
and
mov
pop
inc
pop
jmp
and
bound
imul
inc
pop
icebp
int3
ss
sub
and
inc
xchg
data16
les
adc
clc
or
push
jo
pop
inc
xor
pop
adc
jbe
out
xchg
dec
adc
inc
jne
xchg
mov
sbb
and
icebp
jns
int3
mov
inc
push
in
inc
sub
push
pop
call
test
inc
cmp
jl
mov
lcall
in
pop
lods
sbb
test
gs
sub
lods
enter
mov
jbe
jbe
mov
push
xchg
imul
jl
es
fdivrs
test
push
pop
push
push
imul
outsl
in
or
outsl
mov
pop
adc
adc
xchg
insb
inc
imul
push
adc
clc
push
inc
data16
addr16
sbb
and
jo
and
fsubrs
bound
pop
lcall
int3
jle
enter
test
inc
or
jl
idivb
jge
bound
inc
and
lock
xchg
js
adc
inc
xchg
jo
jbe
fists
je
sbb
pop
mov
jb
les
sub
push
pop
call
popl
inc
cwtl
and
mov
xchg
pop
nop
mov
in
inc
mov
xchg
mov
int3
adc
mov
sub
xchg
mov
cs
stc
or
mov
mov
xorl
pop
mov
mov
popf
sbb
sub
pop
pop
shll
cltd
push
les
adc
push
pop
call
inc
xchg
mov
xchg
or
dec
push
cmp
jmp
and
pop
mov
les
scas
push
fists
lods
lods
sub
test
xchg
ficoml
push
stos
cmp
pop
stos
lods
pop
push
pop
pop
mov
push
cmpsb
xchg
cmpsb
adc
rcrl
movsl
push
les
pop
call
mov
shll
imul
test
pop
dec
imul
cmp
sub
lods
cwtl
push
pop
pop
mov
mov
mov
sub
push
pop
rorl
mov
les
sub
push
pop
call
and
fdivrs
bound
and
int3
and
lret
ficoms
shl
ss
test
fists
lods
sub
pop
mov
test
adc
lods
call
pop
aaa
jo
shr
out
fcomps
pop
dec
loope
call
insb
inc
fnsave
mov
adc
push
inc
fdivs
pop
push
ds
mov
bound
jl
out
imul
fmul
out
test
pop
and
cs
hlt
and
in
fdivrs
test
pop
popf
pop
cmp
jmp
les
clc
fdivs
xchg
out
nop
call
fwait
loopne
xchg
loop
bound
mov
fildll
cmp
ret
mov
decl
les
dec
sub
push
adc
std
in
jl
cli
mov
pop
lods
fwait
loopne
data16
xchg
notb
je
leave
mov
hlt
setg
enter
js
flds
mov
or
xor
or
ret
pcmpeqb
or
jl
push
or
int3
or
adc
jno
ret
sbb
inc
push
loop
add
adc
in
lods
loope
mov
inc
aas
testb
mov
pop
inc
leave
loop
dec
adc
negb
push
sub
pop
shll
es
not
and
pop
mov
sub
jbe
call
adc
adc
adcl
adc
lods
cwtl
inc
pop
stc
test
adc
es
icebp
sub
and
xchg
loope
sub
les
adc
je
cmp
ret
push
setl
push
and
and
cmp
test
push
popf
pop
cmp
rcrb
push
and
jl
test
pop
and
cs
jo
mov
add
adc
and
or
mov
fcompl
push
subb
add
aam
xor
add
add
jle
imul
or
pop
or
lea
popa
xor
lock
rcrl
push
aaa
dec
int3
into
push
xchg
xchg
das
adcl
xor
push
repnz
add
push
int
loopne
jle
mov
dec
call
pushf
adc
nop
add
jo
xchg
xchg
xor
dec
pop
xchg
lods
fs
lret
jns
xor
dec
jg
xor
loopne
or
add
and
xchg
xor
add
stos
sbb
add
push
cmp
and
or
lahf
push
and
or
pop
cmp
adc
add
or
mov
rcl
inc
in
repz
xor
shlb
push
mov
addl
repnz
lahf
inc
pop
les
in
xor
cmp
test
fcoms
jp,pt
inc
lret
push
add
xchg
ret
pop
test
xor
adc
sub
in
jnp
inc
sub
clc
mov
cmp
movsb
mov
sub
xchg
js
mov
dec
fdivp
dec
xor
push
int
and
or
and
lret
mov
adc
scas
sbb
nop
loop
movsb
or
xor
mov
js
pop
test
sbb
aas
mov
sub
test
xor
xchg
lock
jl
and
sub
lea
fistl
lock
test
popf
rolb
mov
and
add
je
test
jbe
inc
xchg
mov
icebp
xor
loopne
rolb
clc
fadds
xlat
clc
inc
test
mov
inc
js
push
mov
aad
adc
jbe
aam
adc
scas
and
and
fldcw
jl,pt
mov
ja
dec
pop
daa
sbb
icebp
addb
dec
adc
std
mov
mov
lock
daa
or
je
pop
loope
ficomps
outsl
call
ret
pop
in
xchg
sbb
sub
sub
jne
dec
test
xlat
mov
frstor
adc
mov
ficoms
clc
js
or
mov
rcrb
mov
xlat
ret
daa
and
sub
repz
pop
out
nop
mov
pop
out
push
leave
sbb
rclb
and
mov
and
aaa
or
loope
sub
adc
jae
shrl
mov
mov
adc
or
int3
pop
and
xchg
adc
sbb
adc
jo
xor
pusha
or
mov
int
cmp
stc
or
push
ds
adc
jo
rolb
and
test
xchg
adc
lahf
ds
fistpll
jl
test
dec
sub
cmp
inc
push
or
mov
push
adc
lock
or
sub
jae
adc
loope
rorb
adc
fimull
stc
or
mov
sbb
dec
movsl
adc
in
loopne
sub
adc
popa
add
xor
pop
adc
inc
xor
dec
test
int
xchg
mov
or
outsb
and
jl
adc
sub
call
mov
adc
sbb
mov
adc
mov
and
or
adc
and
rclb
xchg
adc
movsb
mov
int
fldenv
pop
in
xchg
sbb
sub
sub
mov
mov
xchg
out
shrb
sub
xchg
adc
pop
cmp
or
test
and
daa
adc
test
push
adc
repz
repz
pop
mov
fstps
xlat
jp
enter
push
jmp
xchg
lock
or
and
sub
xchg
adc
adc
mov
mov
test
or
pop
test
mov
stos
mov
adc
dec
mov
cmp
fadds
mov
or
lahf
jmp
adc
xchg
and
adc
xchg
and
adc
cs
ds
xor
scas
mov
cwtl
jo
mov
sbb
sub
aad
pushf
inc
or
xor
lods
fst
and
jg
inc
stos
add
call
aaa
sahf
jne
sbb
nop
outsb
andb
pop
add
dec
enter
sub
outsb
mov
pop
xchg
or
insb
fsubs
jnp
and
mov
mov
popf
icebp
lods
xchg
in
or
test
or
adc
cmp
pop
jmp
test
lds
or
ljmp
call
inc
inc
mov
sbb
or
xchg
inc
cwtl
cmp
add
jbe
pop
call
fwait
pop
adc
out
or
and
jbe
sbbb
cwtl
enter
aas
mov
jo
int3
rdtsc
mov
mov
add
xchg
dec
mov
ss
call
pop
std
in
aam
xlat
pop
and
adc
insb
cmp
mov
int3
push
xchg
xor
mov
sub
mov
sbb
sub
rorl
shrb
cmc
jb
sti
adc
sbb
ds
fwait
add
and
test
sbb
xlat
pop
shl
sub
or
sub
add
mov
rcl
les
sbb
pop
cmpsb
lcall
mov
xorl
or
ds
jne
cmp
mov
push
sti
jnp
call
mov
push
adc
sbb
pushf
addl
rolb
shlb
leave
outsb
test
sub
pushf
push
jmp
mov
and
mov
add
or
dec
jns
lret
mov
add
sbb
push
js
mov
notb
mov
rcrb
mov
push
enter
js
or
inc
add
cmp
cmp
icebp
and
mov
sti
add
inc
inc
fwait
mov
test
stc
cmovo
test
fs
adc
cmp
out
insb
inc
cld
punpckhwd
or
dec
adc
leave
xchg
into
fdivs
cmp
mov
add
in
shlb
adc
cwtl
shrb
mulb
les
mov
and
pop
les
loop
cwtl
or
je
add
adc
adc
pop
or
and
jb
cmp
mov
mov
adc
or
ja
sub
arpl
add
mov
add
shl
cld
mov
dec
or
subb
enter
addl
decl
push
fmuls
cmp
data16
bound
and
mov
aam
inc
aam
mov
or
mov
fdivrs
fbstp
fs
in
adc
add
push
adc
add
push
fimull
jle
push
add
push
xlat
pop
cld
jbe
mov
and
mov
or
pop
adc
sahf
sub
fists
incl
cld
rorb
addr16
pop
dec
or
ja
sub
adc
stc
call
in
pusha
add
leave
sbb
pop
push
cmpsb
adc
push
test
adc
lods
pop
lock
subl
mov
mov
insb
repz
mov
mov
or
jo
mov
lcall
inc
sbb
add
sbb
push
xchg
pop
add
dec
ljmp
adc
push
scas
mov
addr16
les
scas
add
add
cwtl
mov
push
cltd
xor
inc
or
cwtl
mov
pushf
mov
and
scas
or
jo
xchg
fdivl
push
push
insb
sub
pop
loopne
add
pop
mov
dec
frstor
pusha
and
neg
mov
cld
push
inc
or
cmp
jo
incb
or
adc
ret
stac
mov
sub
add
lea
jmp
or
out
mov
and
lods
testl
enter
addr16
dec
mov
push
push
loope
mov
ror
mov
or
nop
in
lcall
movsb
sbb
sbb
lods
mov
sub
sbb
add
rol
xor
jmp
in
dec
jl
in
outsb
test
add
dec
call
xchg
test
inc
adc
and
sub
test
in
or
or
dec
sub
rcpps
push
iret
pop
adc
add
xor
push
xchg
sub
mov
adc
or
push
or
cltd
pusha
mov
fnstenv
not
sbb
push
mov
and
andl
cs
mov
add
inc
nop
push
add
popa
js
pop
lds
ss
add
es
insb
pushl
push
push
subb
adc
movsl
add
mov
mov
movsb
jmp
inc
mov
and
mov
pop
mov
mov
mov
ds
pop
shll
lods
pop
dec
xchg
mov
dec
xchg
popf
je
ja
sbb
sahf
lret
cmp
inc
sub
test
outsb
fists
lods
sub
in
pusha
test
rcr
mov
fidivrl
mov
or
add
sub
cwtl
xchg
es
push
js
lods
lods
and
inc
ljmp
dec
sub
or
pcmpeqw
lods
rcrb
inc
dec
in
cmpsb
test
in
into
pop
popf
push
iret
and
mov
addb
pushf
test
mov
cwtl
and
mov
ss
or
cmp
jl
mov
mov
jmp
fistps
jne
fs
jno
cmp
and
add
idivb
fmulp
sarl
or
xchg
mov
in
pushf
cmp
jg
shrb
leave
pop
andl
and
and
repz
and
adc
stos
sub
mov
xor
jns
xor
mov
pop
mov
ud2
mov
jbe
pop
or
sbb
inc
sub
sub
inc
andb
mov
add
adc
mov
mov
bound
jns
popf
das
mov
adc
pop
or
out
inc
out
xchg
mov
mov
adc
mov
mov
imull
lock
cmp
push
leave
dec
jns
inc
add
mov
mov
and
dec
dec
and
imul
mov
cmp
leave
scas
or
inc
mov
xlat
sti
and
andb
mov
les
call
call
inc
xor
add
out
sub
or
insb
push
add
scas
push
loopne
and
in
push
inc
fs
inc
mov
add
add
rcrb
inc
jmp
cmp
das
mov
aam
orb
or
leave
adc
enter
rcl
or
enter
or
jl
ja
mov
frstor
mov
pusha
sub
or
or
mov
inc
sbb
push
sbb
xor
dec
loopne
stos
dec
adc
iret
lds
cld
test
fists
xchg
dec
les
dec
inc
nop
and
shrl
das
jp
lahf
adc
mov
adc
pop
nop
cld
inc
in
int3
mov
aas
nop
dec
or
pushf
and
lock
xchg
pop
int3
pop
clc
in
dec
adc
fmul
insb
nop
dec
mov
imul
mov
je
test
pop
bound
and
sbb
mov
dec
and
les
lahf
inc
xchg
mov
jl
push
sbb
dec
fldl
inc
sub
xchg
mov
call
test
sbb
icebp
ds
pushf
jne
xchg
xor
clc
or
cmp
pushf
jae
mov
mov
dec
sbb
adc
fldcw
lods
add
out
dec
rcl
pop
or
nop
ficompl
je
iret
adc
lret
and
push
fadds
lcall
sub
or
or
pop
enter
add
fdivrl
dec
ds
sbb
clc
push
lret
dec
stc
jns
nop
inc
in
js
mov
push
popl
out
jl
dec
jl
cmp
sbb
pop
sub
push
pop
in
out
mov
test
or
adc
add
test
call
adc
arpl
add
je
shrl
adc
mov
call
sub
push
shr
sbb
cmp
pop
or
scas
hlt
in
adc
ret
mov
lret
lods
cmp
sbb
mov
adcb
or
lret
inc
rorb
mov
cld
xchg
add
ljmp
add
movsb
xchg
rcll
out
mov
xor
loopne
rcrb
pop
loop
push
inc
imul
outsl
and
iret
mov
sbb
dec
adc
cmpl
xchg
clc
cld
push
xchg
sahf
sar
fadds
rcrb
push
jle
xchg
into
mov
nop
or
pusha
inc
fmul
push
mov
xor
das
pop
push
cmp
sub
xor
loop
mov
mov
sahf
and
cmp
sub
adc
cmp
inc
test
sub
lahf
or
push
lock
xor
rcll
decb
and
mov
cmp
rolb
cltd
in
enter
pushf
mov
enter
dec
cvttps2pi
roll
mov
cmp
mov
and
jo
push
inc
jle
xor
lods
sbb
test
lock
inc
adc
mov
bound
cmp
cmp
outsb
inc
loope
cmp
sahf
push
sub
subl
adc
and
int3
mov
push
and
sbb
push
or
sahf
nop
inc
call
adc
xlat
popf
sahf
shrb
mov
pop
and
pop
push
inc
or
loope
es
jns
or
lcall
imull
add
cltd
fcoml
adc
sub
push
push
sti
shll
mov
cmp
sub
test
sub
dec
mov
add
std
pop
cmp
mov
adc
pop
push
std
lods
cmp
mov
inc
sub
inc
mov
leave
mov
cmp
enter
aas
cmp
cmpsb
lret
cld
pop
and
das
andl
mov
aas
mov
mov
das
mov
mov
in
mov
repnz
js
repz
imulb
or
rorb
adc
cltd
and
and
xchg
fstps
xchg
mov
jecxz
lds
fwait
pushf
mov
push
lcall
ds
inc
orb
pushf
adc
mul
jnp
mov
js
and
popf
pushf
rorb
mov
or
int
icebp
mov
inc
adc
add
faddl
mov
in
mov
adc
lahf
mov
add
bound
add
and
xor
mov
mov
addl
mov
or
or
pushaw
mov
cmp
lret
aam
mov
or
xchg
fdivrl
nop
inc
shl
cwtl
ljmp
rcrl
addl
aam
sub
pop
nop
sbb
mov
mov
faddl
inc
shrb
adc
test
or
adc
shrb
xchg
in
or
mov
mov
push
loop
adc
lods
push
icebp
stos
add
pop
xor
out
sub
adc
out
andl
cmp
sub
movsb
xorl
movsb
xchg
add
xor
mov
into
les
mov
pop
mov
add
fdivl
daa
mov
repz
movsb
call
xchg
ret
inc
adc
incl
int
sahf
pusha
sahf
lock
out
add
sahf
insb
js
das
scas
push
sub
nop
mov
and
add
hlt
cs
and
pop
push
cs
add
lds
push
loope
lds
or
outsb
cld
inc
ror
ret
test
xchg
inc
inc
std
fwait
pushf
cmp
sbb
inc
adc
mov
cld
adc
or
inc
pop
movsb
and
hlt
loopne
add
cmp
inc
sub
push
aam
adc
fwait
test
xor
sbb
lahf
les
xor
push
jle
mov
inc
mov
pop
test
push
sub
sbb
fadds
push
and
cltd
mov
iret
rcll
sub
shrb
mov
out
push
and
pop
xchg
dec
mov
fdivrl
push
sbb
cmp
sub
mov
adc
xlat
fbld
test
dec
mov
pushf
push
pop
and
jge
and
jne
adc
leave
sar
push
adc
xor
mov
add
mov
das
lods
mov
add
bound
test
jo
dec
jmp
inc
pop
popf
pop
imul
pop
fcompl
or
std
adc
fsub
xchg
push
push
or
jmp
lock
jne
mov
and
cmp
inc
add
cwtl
sbb
pop
or
inc
sub
lods
cmp
cmpsl
clc
push
mulb
nop
lods
mov
fcomip
test
pop
push
scas
fiadds
and
call
test
cld
sub
inc
daa
js
and
rcrb
dec
nop
pop
loope
jnp
subl
sbb
cltd
add
sbbb
xorl
adc
sbb
mov
pop
into
aas
cmp
sbb
dec
push
fwait
lret
lcall
or
pop
enter
pabsb
pop
and
xlat
adc
and
movsl
push
clc
mov
icebp
dec
inc
or
adc
pop
mov
ret
cld
movsb
lret
hlt
icebp
mov
sarb
movsb
fildll
pop
ss
dec
pop
and
iret
cld
pop
fucomp
jp
mov
iret
rcrb
faddl
push
lcall
pop
dec
adc
sub
pop
lret
mov
cwtl
and
test
aam
pmulhuw
int3
sub
jg
inc
loopne
pushf
and
dec
fcomps
inc
mov
xchg
int3
lock
pop
inc
fnstcw
sbb
push
ret
xchg
adc
jecxz
pop
xchg
aam
mov
std
dec
mov
or
jns
shl
lds
test
clc
stc
xor
jmp
xchg
jo
pop
inc
sbb
xchg
mov
inc
rol
xchg
cs
mov
in
into
adc
fistpl
daa
clc
sbb
pop
negl
enter
ljmp
sub
lret
js
dec
enter
or
or
scas
pop
scas
cmp
dec
and
icebp
dec
test
insb
fcoms
mov
add
adc
mov
push
outsb
ss
lock
mov
test
xor
xor
cmp
dec
dec
hlt
jg
js
or
inc
imul
out
dec
test
addr16
call
mov
cmp
push
mov
sbb
xchg
xchg
je
adc
std
pop
pop
js,pn
out
fisubl
hlt
loopne
cmp
push
fistpll
add
call
nop
jae
or
leave
or
push
ds
testl
das
jl
and
sbb
ljmp
xchg
and
jbe
inc
scas
adc
mov
add
cs
into
sbb
cmp
mov
dec
test
int
pop
mov
mov
adc
sub
enter
cmp
andl
icebp
mov
les
in
in
sub
dec
adc
push
inc
pop
mov
cmp
add
inc
cmp
movsb
rolb
add
sbb
jecxz
roll
pusha
and
and
or
ljmp
adc
add
rclb
mov
inc
cs
and
dec
fs
jp
and
push
mov
mov
loope
sbb
cltd
fstpt
pusha
aam
ss
pop
fcmove
and
add
std
mov
repnz
adc
aad
je
sub
mov
test
mov
cmp
sbb
movsl
stos
sbb
add
jnp
pop
cmp
fdivl
into
lret
pop
into
adc
and
inc
mov
sarb
adc
int3
loope
loope
mov
sbb
icebp
sub
int3
xchg
stc
push
fists
mov
jno
add
int3
cmp
inc
adc
cs
cs
fdivl
and
mov
inc
or
and
cmpsb
xor
dec
outsb
pop
push
rcpps
adc
in
cwtl
rcll
dec
and
movsb
xchg
pop
add
and
jg
xor
repnz
mov
shlb
xchg
icebp
les
push
lock
mov
popa
popl
mov
jl
add
icebp
and
push
and
bound
jnp
nop
inc
mov
stc
xchg
and
roll
adc
xchg
pushl
dec
push
divl
arpl
mov
inc
mov
adc
data16
inc
push
int
lock
aas
hlt
lock
popl
inc
and
int3
xor
jmp
cmpsl
inc
mov
sbb
xchg
das
ljmp
jmp
add
pusha
imul
xorb
inc
mov
hlt
cmpb
push
xorb
repnz
sbbb
out
addb
outsb
pusha
pop
lret
aam
js
pop
imul
unpcklps
or
dec
and
les
daa
idivb
add
adc
ss
out
push
out
sub
loopne
stos
sbb
and
dec
push
jmp
test
movsb
sbb
call
fldt
loope
test
jne
cli
loop
add
adc
lahf
clc
mov
xchg
les
pop
jg
push
lock
or
je
inc
adc
mov
movsb
cmp
jmp
loopne
mov
or
aad
adc
or
je
dec
fdivrl
je
cld
or
hlt
ret
in
adc
adc
or
loope
hlt
repnz
mov
cltd
or
pop
aas
loopne
mov
mov
je
pop
cmp
hlt
cmp
ret
bound
mov
dec
stos
lret
hlt
pop
dec
test
popf
pop
test
insl
pop
fcomps
pop
xor
sub
repz
or
dec
fwait
jo
lock
inc
ss
into
jmp
xchg
int3
sti
add
or
push
or
outsl
adc
mov
mov
pop
inc
fsubs
jns
add
jecxz
int
fwait
adc
xor
cmp
mov
fwait
sub
mov
xchg
xor
mov
push
or
in
or
orb
sti
cmc
xchg
lahf
sbb
mov
dec
or
rolb
stos
lahf
inc
push
aam
mov
cmp
cmp
push
nop
cmp
lea
xchg
sub
stc
rcrl
arpl
mov
jle
inc
push
movss
mov
insb
push
js
sbb
lods
adc
mov
xor
add
cmp
out
xlat
jno
add
icebp
ja
nop
fcoml
imul
loop
movsb
mov
inc
and
pop
mov
fisttpl
pause
xor
sbb
dec
test
push
cmp
xchg
xchg
sub
jnp
mov
mov
jne
push
xchg
push
and
addb
and
adc
cld
pop
mov
les
jl
rclb
add
xchg
sub
add
nop
pushf
dec
pusha
mov
dec
dec
cmp
pop
call
cmc
sub
daa
xor
xchg
loopne
cli
addb
pop
push
jl
nop
push
mov
nop
shrb
gs
push
sub
adc
dec
mov
test
mov
jne
push
rolb
mov
dec
aaa
adc
xlat
popf
add
dec
mov
in
cmp
add
ja
sbb
shlb
sbbb
jnp
xchg
ficomps
and
fsubrl
rorb
or
jg
mov
loop
adc
jmp
lock
xchg
shl
jg
dec
incb
or
mov
xor
adc
cmp
adc
ret
add
fwait
add
mov
sub
or
xchg
mov
push
and
adc
xor
test
out
ret
mov
inc
dec
inc
dec
mov
mov
sub
inc
les
rcl
add
and
inc
or
pop
icebp
push
clc
aad
rorb
pop
mov
jo
xorb
nop
push
dec
scas
fldenv
pop
jp,pt
dec
shll
ja
mov
push
xor
push
ret
xor
push
inc
mov
xchg
ljmp
mov
cmp
mov
xor
rcrb
sub
pop
jne
jne
lret
lock
or
xor
adc
fldcw
xchg
inc
or
adc
fcom
cltd
inc
pop
ljmp
xor
sub
mov
push
sub
pop
lods
insb
adc
add
or
xor
dec
cld
imul
push
push
mov
sbb
pop
inc
cmp
xor
xor
or
cld
mov
mov
push
je
or
cmc
adc
xor
mov
mov
xchg
and
cmpsb
in
outsb
jecxz
dec
outsl
inc
in
ljmp
repz
mov
sub
test
stos
mov
out
cmpsl
add
mov
enter
and
daa
das
stos
cmp
pop
and
push
pop
fimuls
sbb
jae
pop
xor
adc
out
mov
or
add
nop
aas
and
and
mov
mov
sub
fidivrl
mov
inc
call
sbb
sbb
xor
out
repnz
in
cli
dec
mov
xorb
sub
daa
adc
jnp
out
lret
mov
data16
pusha
xchg
inc
dec
lds
pop
mov
aaa
sahf
cmp
inc
adc
lahf
sbb
sbb
pop
dec
add
sub
dec
fisubrs
push
push
adcl
inc
push
adc
into
mov
dec
fsubrl
pop
add
add
hlt
out
add
push
in
addb
push
std
sti
and
pop
sbb
in
jecxz
loopne
push
loopne
stos
push
pop
mov
add
cmpsl
mov
add
push
mov
nop
fimull
mov
adc
icebp
xor
bound
or
sub
inc
xor
es
ret
cmpsl
fs
cmpsl
dec
dec
push
xchg
clc
push
leave
push
push
pop
cld
sub
loopne
andb
test
ss
add
mov
and
adc
sub
pop
pop
hlt
mov
andnps
daa
and
and
in
repnz
cld
inc
mov
repz
mov
jno
lods
sbb
movsb
sbb
and
out
lret
pop
jns
dec
addr16
cwtl
inc
dec
pop
xchg
or
popl
xor
mov
sub
and
mov
dec
jo
ja
dec
dec
xchg
mov
aad
insb
or
clc
push
mov
cmc
je
push
xor
mov
push
jle
ret
and
pop
mov
jne
xlat
push
cwtl
pop
int3
les
std
mov
out
mov
and
jl
das
fistpll
inc
push
enter
sbb
jg
and
test
sbb
call
lock
cmp
xchg
sub
movsl
jo
or
cmp
aad
dec
sti
xorl
pop
inc
dec
and
jmp
mov
outsb
in
cmp
push
and
jl
push
subb
mov
or
jl
aas
es
sti
icebp
mov
and
push
mov
mul
ss
inc
mov
cmp
add
scas
pop
sub
sub
outsb
or
lret
aad
xor
movsl
jns
mov
js
inc
sti
and
add
subb
hlt
add
cmp
call
js
mov
xchg
add
jmp
push
adc
add
add
cmp
pusha
add
in
mov
mov
or
push
xchg
das
lret
insb
cwtl
add
nopl
rorb
aam
cwtl
push
adc
btc
mov
adc
and
mov
ret
bound
or
add
lock
adc
sbb
mov
loopne
cmp
or
sub
jecxz
int3
in
cmp
mov
sub
insb
fwait
add
inc
push
or
mov
sbb
in
push
add
mov
mov
mov
mov
cwtl
pusha
or
inc
push
or
leave
and
call
xor
addb
add
outsl
and
mov
jl
sbb
push
sbb
jo
cli
clc
xor
push
mov
and
int3
pop
out
xchg
or
loopne
aas
fistpll
les
add
inc
or
loope
dec
dec
cwtl
jns
je,pt
add
xchg
sub
negl
or
or
imul
fucomi
popf
push
icebp
cmp
pop
and
aaa
lahf
adc
aaa
stc
imul
inc
mov
enter
sbb
scas
sub
mov
xor
sub
dec
sbbl
popf
xor
and
pushf
push
aad
repnz
mov
or
shlb
xor
push
orb
fcomp
stos
inc
adc
and
add
into
sti
xor
or
lret
mov
jnp
or
mov
adc
jl
pop
in
das
add
ficompl
sbb
and
push
adc
or
add
lds
ljmp
cmovnp
data16
fistpl
jl
lock
cld
test
mov
or
fsubl
hlt
pusha
xor
shrb
enter
pushf
or
and
and
lods
pop
add
pusha
add
pop
loope
pushf
and
lock
and
mov
and
movsb
cwtl
and
sbb
and
push
and
and
push
push
xor
nop
lea
aas
and
pop
adc
xchg
adc
lock
cmp
pop
dec
pop
roll
movsl
nop
adc
cmp
sbb
pop
inc
jp
cmp
out
push
test
and
inc
je
cmp
push
mov
fbstp
loopne
push
add
repz
dec
add
and
test
outsb
lods
cld
adc
pop
sbb
or
lods
aam
jge
addb
and
sub
ret
cli
lods
or
xchg
sbb
ja
call
pop
xor
imul
mov
or
pop
adc
jp
pushf
xor
mov
dec
inc
adc
arpl
enter
add
jo
sub
dec
lret
mov
ficoms
push
mov
cltd
adc
mov
xor
in
mov
pop
pushf
data16
add
int3
das
xor
notb
inc
add
pop
ror
aam
and
sbb
lret
test
and
add
stos
and
orl
bound
xor
bound
mov
hlt
rol
and
adc
and
and
xor
or
lock
les
popa
pushf
push
dec
rolb
xor
hlt
std
add
and
jge
adc
fdiv
jp
and
xchg
inc
cmp
adc
sub
jo
cmp
xchg
sbb
shlb
pop
test
icebp
pop
push
aam
push
mov
and
sbb
lock
les
pushf
pop
dec
rolb
xor
hlt
fldl
push
adc
sahf
sbb
out
and
lock
sbb
fwait
loopne
fisttpll
add
jg
decb
pop
push
mov
rorb
pushf
xor
sub
shlb
pop
adc
and
xor
sbb
jo
mov
or
jle
sub
sahf
mov
test
mov
cmp
mov
push
and
pop
xlat
pop
cmp
test
test
inc
pusha
xchg
push
paddd
in
xor
dec
add
sub
lea
xchg
std
outsb
jp
sub
dec
call
xor
icebp
cmp
repz
mov
and
sti
insl
pop
dec
push
add
dec
outsl
pop
daa
xor
push
shl
cmp
cltd
jl
fistpl
stc
mov
push
scas
mov
cmp
mov
insl
push
sbb
shrl
push
add
adcl
xchg
out
leave
jmp
sar
mov
movsb
mov
push
inc
xchg
lret
cmp
add
jno
xchg
nop
jae
mov
pop
cmp
pop
cmp
ret
test
mov
inc
std
push
and
push
or
xchg
sub
hlt
sub
adc
dec
rolb
xor
sbb
lock
sub
pop
and
fbstp
or
mov
sbb
out
pusha
outsb
imul
mov
inc
ret
call
inc
rorb
and
add
std
jne
ss
repnz
inc
in
mov
inc
ret
mov
std
inc
mov
cmpsl
nop
adc
mov
nop
shll
std
cmp
sub
aas
sub
pop
setg
and
inc
cs
or
add
les
sub
push
clc
js
jns
xchg
add
aad
adc
jmp
and
adc
aaa
push
insb
add
push
enter
ja
cmp
cmp
daa
add
adc
mov
add
add
xor
mov
pusha
or
andb
mov
outsl
fisttpll
movsb
jge
adc
add
icebp
test
and
mov
or
enter
dec
pop
sbb
cmp
cld
jo
pop
push
aaa
fs
fldz
push
push
dec
pop
dec
or
or
das
mov
push
sub
sub
xchg
inc
adc
and
cmp
push
cmp
decb
mov
adc
mov
aad
dec
pop
sbb
pop
adcb
jno
add
clc
xchg
cmp
cmpsb
cmp
pop
hlt
mov
stos
movsl
lock
dec
add
or
mov
js
pop
cld
jae
mov
stc
xor
dec
add
and
inc
rol
or
push
pop
pop
inc
es
push
xchg
dec
popf
push
and
rclb
clc
dec
sar
xor
test
into
and
mov
dec
inc
cld
inc
inc
clc
mov
nop
fs
rorb
dec
cs
add
mov
adc
xor
adc
cmp
mov
cmpsb
fdivrs
sarb
in
pop
js
pop
lods
cmp
pop
loopne
push
add
enter
or
pop
dec
loop
xlat
mov
fdivp
ljmp
xor
and
addb
inc
pushf
lret
out
xor
mov
add
imull
sbb
or
fcomps
subb
sub
loop
inc
in
xor
les
mov
in
add
inc
ja
mov
lds
outsl
sub
ss
push
jbe
sbb
sbb
push
or
pusha
insb
or
lods
sub
or
cmp
xor
add
rorb
cmp
push
xchg
inc
std
std
jo
aam
rclb
mov
lret
pop
enter
mov
mov
or
mov
movsb
cs
mov
xor
add
and
add
push
adc
push
jl
enter
hlt
les
js
pop
ffreep
leave
cmp
daa
dec
cs
sub
outsb
sub
adc
popf
ret
pusha
jno
add
dec
out
je
mov
push
inc
or
or
cli
fiadds
das
mov
mov
mov
lds
lock
pop
add
xchg
repnz
je
popl
inc
jno
sub
aas
inc
and
sub
xor
jmp
cmp
adc
fcompl
fstpl
cmp
dec
or
scas
xchg
cmp
or
jo
cmp
dec
mov
fcompl
add
sbb
repnz
fsubl
stos
and
xchg
or
add
add
sbb
sub
sbbb
cmc
roll
adc
sbb
lret
jo
mov
clc
out
mov
js
pop
nop
movsb
das
add
pushf
xchg
and
cwtl
movsb
je
adc
mov
push
ljmp
xlat
xchg
inc
mov
pop
ljmp
pop
dec
push
hlt
add
jo
dec
cmpsl
nop
add
fidivs
and
push
lret
xchg
mov
add
or
sbbl
inc
sbb
sbb
or
mov
dec
fidivl
xor
add
fistpl
adc
enter
dec
and
les
pop
add
push
and
add
nop
shlb
push
adc
cmp
mov
sti
adc
test
sahf
pop
ret
and
xchg
dec
add
mov
sbb
add
push
popa
repnz
cmp
jp
inc
sub
sbb
pop
or
cmp
mov
push
dec
dec
mov
mov
es
nop
mull
loopne
frstor
popa
out
xchg
adc
add
jnp
mov
cmp
mov
cltd
lock
xor
enter
iret
or
sub
add
mov
mov
add
or
mov
push
inc
fisubrl
xchg
push
inc
lock
pusha
sbbb
cli
out
pop
xor
or
dec
add
add
andb
sub
mov
popf
mov
call
sbb
leave
sti
push
mov
and
add
enter
push
call
add
icebp
push
sbb
xor
mov
shlb
adc
pop
sub
popf
push
lret
adc
sub
and
jecxz
inc
rclb
das
xor
sti
js
cmpsb
mov
push
leave
insl
ds
insb
and
mov
xor
cmp
pop
das
mov
cld
xor
addr16
outsb
adc
nop
push
subb
lret
sub
pop
and
aam
add
xor
sub
incb
sbbb
iret
xchg
adc
dec
sub
dec
test
inc
jne
mov
add
and
fwait
in
add
pop
cltd
xor
ds
mov
adc
sub
inc
pusha
add
jecxz
dec
or
scas
sbb
push
loopne
adc
lods
clc
cmp
and
imul
lds
cli
sar
mov
lods
mov
xor
nop
fcmove
or
call
inc
push
in
add
and
inc
daa
and
orb
adc
add
xchg
cmp
cmp
or
mov
in
pop
mov
add
cltd
sti
mov
or
cwtl
pop
inc
xor
cli
xchg
sub
dec
xchg
enter
mov
mov
negb
out
fadds
daa
push
mov
decb
stc
icebp
lods
push
enter
pusha
or
je
sbb
cmp
and
es
je
xor
sub
pop
call
mov
pop
aad
cmp
pusha
add
adc
je
mov
add
cld
mov
add
mov
fisubl
lret
ds
lock
cmp
outsl
test
pushf
out
mov
jle
jp
hlt
and
add
add
pop
and
and
dec
cmp
pop
mov
movsl
lods
cld
nop
mov
enter
in
mov
add
push
cmp
orl
add
xchg
push
iret
mov
icebp
addb
xor
sub
rolb
and
xchg
sub
jo
inc
or
dec
sub
fstl
push
xor
scas
lock
cmc
pop
lret
mov
mov
test
hlt
mov
add
inc
jmp
push
dec
add
xchg
and
or
sbbl
popf
movsb
mov
aas
mov
sbb
pop
pcmpgtw
mov
jle
test
jecxz
xor
pop
xchg
jmp
pop
bound
inc
cmpsb
adc
add
cmp
adc
fs
enter
mov
test
push
add
out
fdivrs
sub
xchg
pop
popl
icebp
aas
xor
dec
data16
mov
sub
sarb
cmp
call
scas
jne
rorl
dec
out
dec
sub
and
cld
popa
pop
rcl
mov
sub
outsb
inc
out
dec
dec
cmp
in
and
inc
dec
out
pop
shll
mov
test
inc
adc
jo
and
mov
add
jl
push
lods
aam
add
push
fstpl
test
cmp
mov
push
and
cmpsb
rcll
test
movsb
adc
xchg
and
or
popf
sub
dec
les
adc
inc
xor
mov
mov
push
cs
enter
jnp
inc
xchg
sbb
inc
and
inc
pop
js
cld
add
xchg
pop
inc
push
mov
xor
stc
mov
pop
sub
add
mov
mov
mov
sbb
fisubl
pusha
mov
jo
jo
cld
add
es
mov
nop
test
jo
dec
cwtl
mov
adc
int
mov
sahf
fsubl
enter
pop
inc
dec
cwtl
imul
pop
jno
cwtl
je
and
add
cltd
imul
or
jb
xlat
sub
cltd
lcall
inc
data16
mov
xor
or
adcb
inc
add
sub
jno
test
adc
js
cwtl
xor
in
xchg
aas
ret
and
aad
and
mov
mov
add
add
cmp
push
push
inc
dec
pop
pusha
pushf
and
test
inc
adc
rcrb
push
pop
lcall
mov
xchg
xchg
movsl
nop
xchg
xor
push
sbbl
loopne
adc
push
pop
pop
sub
cmpsb
sub
inc
sbb
mov
nop
mov
inc
popf
mov
inc
mov
lods
mov
or
adc
scas
gs
and
sbb
mov
mov
add
push
aad
or
or
lds
arpl
pop
mov
in
and
imul
mov
push
xlat
pop
sub
fwait
jg
je
sbb
mov
inc
ror
pushf
pop
push
in
and
pusha
xchg
shll
test
mov
push
and
es
sti
mov
jo
push
adc
mov
and
xor
adc
push
fisubs
sub
xor
jne
push
fildll
dec
hlt
inc
jo
xor
fmuls
and
and
fsts
jmp
mov
fs
pusha
sub
jae
push
or
loopne
fiaddl
add
inc
and
mov
in
and
rcrb
mov
lret
mov
push
dec
jnp
loope
add
add
stos
mov
sub
lods
add
inc
jg
mov
add
popa
add
push
dec
lock
pusha
sub
pop
inc
add
and
xchg
rorb
adc
push
inc
cmp
fsubl
aad
mov
mov
mov
xchg
sub
fldt
inc
imul
mov
mov
sub
fldenv
mov
jo
adc
sub
insb
xchg
jl
enter
mov
scas
and
jnp
into
pushf
adc
adc
sub
mov
inc
mov
xor
nop
jecxz
cmp
push
adc
and
loopne
mov
xor
pop
and
sbb
push
cmp
dec
mov
lret
test
arpl
mov
add
cmp
adc
cmp
adc
pop
jle
pusha
jno
add
mov
enter
out
and
xor
lods
and
push
cmp
fsubl
out
lods
sub
mov
in
add
xor
cmp
and
in
xor
fwait
sub
mov
sub
mov
mov
push
mov
in
fcoms
mov
inc
popf
pop
xchg
dec
cltd
sbb
inc
cld
cltd
in
adc
sbb
mov
dec
add
rolb
jecxz
mov
fsubl
pop
push
adc
lahf
and
adc
mov
push
mov
adcb
lds
cmp
push
and
dec
cmp
loop
ds
std
rorb
outsb
fisubs
in
sti
cmp
dec
push
lods
loopne
incb
cmp
add
mov
ret
sbb
add
sbb
cltd
pushf
out
push
call
es
clc
out
dec
mov
incb
pop
mov
jo
mov
sbb
outsb
roll
sub
mov
mov
rcll
mov
mov
adc
dec
in
jne
out
mov
imul
mov
adc
fs
daa
hlt
mov
jne
in
add
outsb
test
js
sub
mov
and
adc
enter
mov
test
lahf
aad
enter
sub
sbb
pop
add
mov
fbld
popa
lret
xchg
sbb
adc
movsl
inc
lock
push
cmp
adc
cwtl
rcrb
inc
add
push
mov
addr16
xchg
pop
push
shlb
les
into
out
inc
aam
xor
xchg
imul
subb
outsb
ficoml
nop
int3
dec
inc
mov
cmp
out
fists
jl
push
dec
dec
inc
and
or
add
dec
mov
pop
into
mov
push
and
push
repnz
push
push
lret
jg
inc
mov
inc
and
inc
data16
adc
and
in
and
and
sub
jne
inc
addl
sti
sub
add
inc
push
popa
jo
mov
sar
loop
fs
pop
sbb
adc
lock
push
decb
arpl
stc
sub
push
sub
mov
loope
dec
andb
test
es
pushf
inc
rolb
xlat
sub
xchg
in
cltd
das
sub
pop
out
xor
inc
mov
sub
pop
pop
jl
cmpsl
jo
mov
adc
out
fsubs
inc
int3
rcrb
nop
shrl
mov
and
aas
rcrl
sub
scas
add
mov
jge
or
and
shll
add
and
je
fcoml
shrb
push
sti
xchg
dec
jmp
and
adc
xchg
xor
fildll
xchg
pop
mov
fsubrl
fisttpl
and
inc
mov
add
fnstcw
sti
adc
fs
jge
push
sbb
scas
loop
pop
imul
inc
adc
in
fstps
nop
xor
and
inc
fstl
cmp
lahf
gs
add
sbb
pop
inc
stc
lret
xchg
inc
mov
dec
or
leave
addr16
pop
mov
xor
and
xchg
sub
mov
mov
add
mov
mov
fs
or
sub
xchg
push
insb
fs
sub
xchg
and
cmpsb
shrb
jge
je
sahf
rclb
movsb
enter
lret
mov
rclb
dec
ret
loop
inc
sbb
mov
rcll
sbb
mov
pushf
sbb
roll
fcoml
nop
mov
xchg
push
popa
rorl
sub
mov
cmp
arpl
dec
mov
adc
psubb
hlt
gs
aad
push
adc
cmp
adc
test
or
imul
pusha
dec
dec
adc
pusha
les
mov
sub
inc
ds
insl
adc
mov
xchg
pusha
and
outsl
fsincos
in
mov
xchg
pusha
push
sub
rclb
fidivl
pusha
push
inc
fcmovne
xchg
jo
push
test
push
fildl
adc
pusha
mov
adc
push
fsub
fs
popl
fldl
xchg
fwait
pusha
mov
pop
fiadds
mov
push
in
mov
lahf
pusha
push
int3
pop
test
pop
fists
loopne
addl
orl
int3
or
sub
adc
inc
ret
xchg
or
push
inc
ret
xchg
adc
mov
enter
or
pop
lea
adc
push
mov
lds
inc
je
sub
inc
mov
sbbb
adc
mov
in
sbb
and
and
leave
mov
shll
cmp
mov
sub
inc
lods
sub
dec
int3
xorb
adc
xchg
fdivrl
push
aas
int
adcb
and
lds
push
arpl
and
test
adc
rclb
loopne
addr16
or
daa
xor
mov
adc
sub
fiaddl
or
or
xor
xchg
rclb
mov
xor
cmp
outsl
push
and
xor
push
push
pusha
inc
sub
shlb
ret
adc
adc
inc
cwtl
and
mov
js
inc
push
test
sbb
pop
push
cmp
lret
pop
push
add
test
cmp
pop
mov
in
sub
push
cmp
lret
pop
push
rolb
sbb
sbb
cld
lds
cmp
and
andb
in
sub
test
dec
inc
loopne
push
adc
add
inc
ret
adc
pop
aas
inc
mov
addb
mov
push
dec
jnp
test
daa
cmc
or
les
xor
pop
pop
je
addb
incb
dec
out
pop
dec
sbb
and
xchg
loop
jmp
pushf
dec
popl
fadds
imul
push
push
and
sub
lods
sti
daa
ja
fs
stos
add
adc
pop
pop
add
adc
bts
and
int3
sbb
iret
xchg
xor
fadd
adc
and
clc
es
xor
jns
nop
inc
popf
ljmp
sbb
sub
enter
es
and
pop
repnz
mov
out
xchg
inc
mov
pushf
pop
test
shlb
test
pusha
inc
cmp
in
or
shrb
and
or
adc
sub
enter
sub
or
sub
adc
push
and
push
push
fsubrs
mov
lcall
mov
sbb
xchg
or
fsubrl
dec
andb
pushf
cmp
pusha
adc
das
shlb
inc
shrb
add
cmc
sub
ret
cwtl
push
and
cs
rol
adc
inc
sarb
mov
and
cmp
ror
adc
inc
shlb
lds
lret
add
push
sahf
sbb
fmuls
or
into
adc
and
pop
pusha
mov
push
and
test
out
xchg
cs
test
adc
sbb
mov
add
lods
push
sub
shl
pusha
mov
push
sahf
js
sub
adc
or
inc
sub
mov
sahf
clc
jno
pop
pusha
mov
or
js
pusha
mov
push
pusha
mov
pop
scas
and
lock
enter
or
in
nop
mov
hlt
in
cwtl
shll
stos
add
inc
pushf
sub
mov
and
bound
dec
pusha
adc
sub
add
cld
pusha
push
mov
push
sub
movsl
pusha
or
push
xchg
pop
mov
pusha
sbb
or
loop
sub
sub
in
int3
pop
pusha
lcall
pusha
inc
cs
xchg
or
call
cs
sahf
or
cmpsb
orb
in
dec
pusha
jnp
push
test
xchg
and
push
sub
push
addb
xchg
sub
shlb
push
mov
movsl
adcb
mov
pop
dec
pusha
and
mov
sub
movsl
pusha
or
add
jo
xchg
loopne
fdivrl
cld
inc
add
jb
sub
xchg
jne
rol
adc
ss
ret
adc
ja
inc
les
jp
push
pusha
inc
sub
inc
push
test
add
enter
sub
push
jp
enter
or
pusha
jnp
add
movsl
pusha
mov
mov
and
fs
loopne
mov
subb
or
xchg
loopne
mov
repnz
adc
push
dec
pusha
adc
push
cmp
mov
mov
inc
and
or
outsb
popa
sub
mov
push
push
bound
addb
push
arpl
mov
mov
sub
push
dec
gs
mov
xchg
pusha
and
inc
pop
gs
inc
movsb
mov
pop
mov
cmpsb
sub
movsl
rorb
cmp
test
mov
es
mov
inc
imul
setg
sub
scas
cmpsl
rclb
loopne
nop
pusha
push
in
jne
in
iret
and
or
dec
insl
xchg
adcb
test
movaps
insl
xorb
dec
dec
outsb
xchg
pusha
pop
cwtl
and
cs
dec
outsl
inc
xchg
lcall
dec
push
sub
pushf
movsl
pusha
nop
mov
sahf
ret
adc
xor
and
test
ss
push
and
push
adc
add
test
or
push
pusha
inc
xchg
push
sub
mov
push
dec
loopne
mov
insb
push
adc
and
mov
mov
or
sbb
add
mov
mov
into
shll
cli
add
pop
dec
mov
and
jne
test
into
sub
add
pop
dec
push
out
cmp
scas
push
test
lahf
xor
add
sahf
mov
dec
mul
sbb
xor
inc
movsl
jb
or
add
sbb
adc
pop
inc
and
sahf
lds
enter
lods
arpl
push
repz
inc
adc
and
pusha
pop
inc
pop
loopne
shlb
inc
lret
pop
pop
jns
add
cld
adc
pop
loop
dec
add
pop
fsubrs
pusha
xor
pop
ss
sahf
xorb
or
push
cmp
dec
jne
shlb
cmpl
in
inc
rcr
pop
jp
pop
push
rol
xor
and
int3
jnp
push
dec
mov
add
and
dec
mov
shrl
rolb
imulb
xlat
sub
and
pushf
mov
bound
mov
adc
xchg
orb
push
test
mov
sub
in
and
add
xor
pop
std
add
adc
dec
fwait
xor
aad
jbe
stc
xor
loope
cmp
filds
sbb
mov
ds
fisubrl
call
mov
aas
mov
int3
xlat
mov
mov
xchg
lret
sub
adc
pop
add
outsb
in
mov
mov
icebp
mov
cwtl
or
daa
or
nop
push
mov
movsb
mov
sbbl
push
add
and
out
xchg
sbb
mov
ret
out
xlat
sub
add
dec
lret
loopne
pop
and
les
push
outsl
xorl
jbe
cmp
inc
roll
xor
mov
fisttps
jl
out
or
xlat
dec
sbbb
jl
orb
add
fldt
sahf
sub
add
out
cmp
in
pusha
imul
or
call
test
cmp
sub
pop
outsb
loope
nop
add
inc
popf
cs
mov
pop
add
jge
test
xor
mov
add
mov
and
fnstcw
xchg
cmp
add
xor
dec
test
or
jg
jo
aam
gs
loopne
adcl
or
cli
or
jno
mov
xor
cmc
and
in
or
and
add
iret
adc
out
mov
in
push
outsl
mov
and
mov
mov
sub
roll
imul
adc
ss
or
mov
or
pop
lock
aas
sub
lret
daa
mov
jg
sbb
clc
jmp
and
leave
js
sbb
rorb
lret
sub
aaa
xor
jae
add
enter
or
cmp
push
decl
pop
movsl
mov
xor
dec
jg
cwtl
adc
and
sbb
or
adc
cwtl
paddd
pop
fsts
cmp
ss
ljmp
sbb
adc
or
fucom
insb
adc
or
int
push
insb
lret
test
add
pop
lock
lods
test
mov
mov
inc
mov
enter
push
clc
cmp
andb
mov
mov
les
mov
mov
scas
pop
and
mov
outsb
xchg
lock
mov
ja
add
in
insl
mov
sarl
push
arpl
shll
sbb
out
ror
jmp
fwait
adc
xor
movsb
xchg
lods
and
cs
inc
add
inc
add
mov
and
mov
subl
movsb
xor
push
mov
adc
mov
and
mov
adc
add
inc
inc
sbb
or
mov
dec
fucomi
mov
inc
cmpsl
out
js
bnd
mov
xchg
sub
and
and
imull
ret
and
lods
xor
dec
or
int3
adc
or
int3
sbb
xor
push
mov
cmpsl
lock
call
ss
scas
push
std
add
pop
push
sbb
lret
mov
mov
cmpsb
outsl
xlat
sahf
sti
adc
dec
mov
cmc
inc
test
sub
dec
xchg
fsubs
add
add
je
mov
lcall
sbb
test
and
inc
inc
ret
sub
xchg
or
or
sbb
push
mov
or
data16
jo
jns
fwait
sub
lret
cwtl
imul
stos
push
dec
fwait
xchg
mov
push
mov
fmuls
loop
pavgw
add
add
lahf
sub
or
fsubp
mov
ds
inc
push
orl
jno
lods
push
inc
add
add
sti
and
lcall
ret
cmp
mov
inc
jbe
pop
push
pop
data16
mov
jo
popf
xchg
push
and
lret
push
or
push
dec
push
jmp
decl
xor
and
dec
ficoml
lea
or
cmp
sti
and
dec
mov
fidivrs
or
or
into
and
add
or
call
int
cmpsb
and
addl
push
pop
inc
inc
mov
inc
or
inc
xchg
inc
adc
push
inc
adc
mov
jo
adc
cmpl
dec
xchg
mov
aad
js
push
inc
je
push
or
adc
repnz
xor
mov
sub
xchg
js
xchg
or
loope
add
rol
adc
sbb
jns
aad
push
adc
data16
and
and
jg
and
or
mov
sbb
lods
add
sbb
je
xor
mov
adc
loope
sub
sbb
lds
inc
adc
push
pop
xor
bound
adc
and
or
or
mov
leave
push
cmp
aas
xor
aas
xchg
popa
add
and
dec
lock
or
dec
shlb
aam
xchg
add
ret
dec
and
dec
xorl
adc
das
js
sub
mov
mov
and
mov
or
push
bound
pop
or
jns
sbb
adc
stc
and
dec
adc
pop
sub
inc
add
adc
push
and
and
adc
lock
xchg
adc
xor
icebp
test
xor
aam
and
nop
push
mov
das
std
stc
ja
faddl
mov
icebp
or
jo
xchg
dec
loopne
ret
hlt
jmp
pushf
pop
sub
mov
dec
lret
pop
mov
xchg
cs
je
in
fistpl
or
cld
insl
inc
push
and
sarb
je
adc
pop
icebp
nop
pushf
add
mov
test
push
iret
arpl
mov
sub
and
enter
test
out
inc
das
xchg
add
push
mov
je
dec
cli
pusha
sbb
lcall
add
xor
pop
lock
dec
andb
scas
mov
inc
sbb
inc
adc
adc
adc
inc
clc
or
mov
cmp
scas
sub
das
xor
dec
sub
test
sub
lock
pop
fmuls
outsb
sbb
mov
and
or
cmp
or
sahf
enter
adc
shll
mov
cld
push
gs
sti
shlb
cltd
leave
xor
inc
jno
adc
adc
xor
lcall
icebp
mov
sub
mov
imul
je
mov
leave
or
dec
popa
out
in
imul
pop
data16
and
or
nop
movsb
or
and
push
and
pop
and
jbe
dec
add
cli
call
and
leave
mov
ret
lahf
sub
repnz
adc
push
jno
xchg
shrl
sbbb
xor
mov
ficoml
mov
jnp
daa
daa
xlat
inc
int3
hlt
cmp
inc
loopne
pop
sti
push
es
inc
cmc
icebp
push
cltd
andb
jo
adc
daa
icebp
xchg
mov
xor
sub
pop
sbb
flds
or
sub
shl
movsb
in
div
imul
push
les
mov
stos
test
sbbb
or
inc
mov
adc
cmp
inc
les
outsb
push
or
jno
xchg
inc
movsb
stos
mov
iret
aam
xchg
scas
fwait
les
out
push
test
add
mov
add
scas
fst
cmp
fs
ljmp
mov
or
xchg
ret
js
je
sub
mov
mov
xor
shll
jnp
mov
loop
hlt
ljmp
js
adc
mov
xchg
adc
adc
test
and
sbb
cmp
jmp
je
fdivrl
adc
adcl
lea
pop
rcrl
into
and
xchg
mov
cmp
jo
or
cltd
cli
xor
and
jno
test
inc
aas
jl
mov
movsb
fdivl
lret
call
pop
mov
push
loopne
aad
scas
les
sub
or
mov
xchg
and
and
mov
inc
lds
stos
sbb
popa
in
mov
xor
jecxz
or
add
dec
cmc
shlb
movsb
enter
clc
xor
scas
cmpsl
mov
mov
sbb
fdivrl
pop
or
dec
adc
mov
je
dec
adc
iret
je
pushf
or
xchg
incb
xchg
sub
inc
xor
addr16
mov
pop
pop
mov
enter
adc
fcoml
mov
sti
adc
push
jle
lret
push
je
add
or
scas
aad
sbb
ret
or
inc
test
cmp
pop
es
std
subb
inc
jo
or
addb
inc
cltd
clc
xadd
push
jo
mov
xor
mov
test
or
shll
jp
jg
js
pop
and
in
or
mov
dec
stc
jl
jo
mov
vrsqrtps
decb
cld
cmp
enter
dec
add
and
fbstp
mov
jo
push
repnz
push
ret
cwtl
lret
xchg
cmp
popl
push
xor
inc
jno
test
xchg
nop
adc
cwtl
xchg
ljmp
jns
ds
and
dec
add
inc
out
mov
pusha
sub
insb
inc
dec
mov
add
xlat
fisttps
out
or
decb
fcomps
scas
push
dec
push
adc
jl
pop
cltd
clc
add
and
je
rclb
out
lret
scas
enter
jo
push
pop
xchg
mov
mov
push
add
loop
mov
sti
loope
mov
fidivrs
mov
mov
fsubs
and
inc
shlb
mov
add
fwait
dec
or
fs
shl
das
icebp
xchg
pop
add
mov
adc
dec
mov
fs
out
sub
pop
imul
sub
pop
inc
les
mov
push
xchg
jle
jl
xor
or
mov
mov
cmpsb
add
ja
sub
xchg
in
mov
popf
fldt
pusha
or
cmc
sarb
mov
dec
fcomip
addb
push
xor
sahf
hlt
ss
cltd
scas
and
and
push
call
outsb
and
push
dec
mov
lock
or
pushf
add
icebp
sub
xchg
fcmovb
imul
hlt
icebp
mov
shl
out
mov
xor
push
fidivrs
in
cmp
add
ljmp
call
lods
or
ficompl
pop
sbb
insb
repnz
fiadds
stos
lcall
aam
adc
rclb
cli
mov
xchg
fiadds
fcomip
pop
or
sahf
or
fmul
fildll
pop
lock
pop
lods
jmp
cmp
inc
add
jmp
adc
inc
sbb
mov
mov
incb
sub
or
add
push
mov
call
sub
mov
mov
xor
sbb
jo
or
test
mov
and
sub
ja
xchg
mov
dec
inc
adc
repnz
aaa
add
adc
add
mov
pusha
xor
jo
add
mov
fcoml
add
sarl
out
pop
into
fcoms
lods
mov
enter
xor
xchg
cmp
decb
mov
or
sbb
sbb
dec
pop
fs
cs
sbb
rcl
int
push
cs
mov
cmp
xchg
nop
or
sub
adc
sub
sub
add
out
xchg
push
mov
mov
fnstcw
scas
add
fisttpll
hlt
and
jmp
adc
faddl
clc
testl
xor
cld
inc
fldl
push
push
pushf
mov
sbb
mov
addb
xchg
imul
jle
sub
fcoms
addl
adc
xlat
sub
jne
pop
scas
imul
mov
ljmp
cwtl
xchg
lcall
add
add
and
fs
push
scas
test
lock
mov
push
add
adc
loope
out
add
sahf
mov
pop
jmp
lahf
mov
push
fistps
lret
fsubr
int3
lods
in
jge
dec
cld
lds
pop
ss
mov
out
and
add
sarl
mov
add
fsubrs
add
pop
fs
push
adc
das
xor
hlt
or
sub
xchg
cli
loope
or
pop
inc
or
mov
mov
sbb
adc
sub
and
enter
or
sub
je
or
push
dec
movsb
and
sub
dec
adc
sti
mov
dec
or
mov
lods
add
or
cli
pop
jnp
and
add
cmpb
dec
or
es
pop
and
sarb
lcall
sbb
outsb
mov
cwtl
inc
add
fistl
or
mov
dec
loopne
mov
push
outsl
add
xor
inc
fs
testb
das
cmp
mov
rorl
mov
add
out
mov
lret
push
ret
data16
or
hlt
fildll
lret
mov
out
xor
xor
add
in
mov
pop
ret
jbe
push
out
cwtl
mov
sbb
push
and
inc
or
add
pusha
xor
pop
frstor
adc
and
pusha
and
dec
or
dec
sub
stos
mov
stos
or
sub
sbb
mov
dec
or
sub
cmp
mov
scas
mov
arpl
xchg
push
lcall
orb
mov
jb
pop
frstor
jle,pt
dec
in
xor
gs
mul
lret
test
mov
mov
push
add
and
lret
clc
xor
mov
pop
enter
lahf
ret
sbb
pop
aas
xorl
ja
fsts
inc
lret
mov
mov
and
adc
and
ss
mov
mov
inc
popf
and
or
pusha
dec
and
pop
dec
pushf
xor
lahf
mov
pusha
inc
sahf
and
and
adc
mov
and
sbb
pop
adc
pop
and
xchg
xor
lcall
pop
ficoml
sti
lds
mov
imul
lcall
mov
int
fisubrl
lock
fsubs
jo
ljmp
mov
insl
pop
add
loopne
sbb
mov
push
add
pop
mov
cmp
cs
mov
in
mov
mov
adc
jno
xor
adc
jae
xor
adc
jne
xor
xor
xor
adc
jns
xor
adc
jnp
xor
mov
lods
mov
clc
iret
repz
add
adc
mov
pop
in
mov
cmp
jmp
mov
push
xorb
inc
scas
add
in
mov
sub
test
jmp
lret
clc
or
cmc
cmpsl
inc
push
pop
inc
dec
ficompl
movsl
jae
lods
call
pop
push
add
int3
incb
cmp
add
aas
or
adc
sbbl
fdivrs
clc
test
adc
fcoms
in
lcall
push
sbbb
cmp
das
cmpsb
rcrl
xchg
add
in
leave
inc
nop
stc
insb
xchg
jg
movsb
and
add
adc
das
stos
mov
adc
adcb
mov
call
dec
cs
in
adc
mov
adc
rolb
lahf
push
jecxz
std
mov
pop
and
cmp
jmp
aas
jle
jns
clc
or
mov
in
lock
or
in
stos
lock
lret
aad
paddb
jmp
pusha
lock
pop
or
push
mov
lret
hlt
enter
xor
pop
pop
inc
invd
push
ret
jmp
cmp
shl
sbb
mov
mov
roll
mov
dec
sbb
sub
cmp
or
sbb
inc
sbb
or
pop
out
lock
call
mov
mov
mov
rcrb
popa
subb
inc
xchg
inc
xchg
cwtl
cmp
roll
fsubrs
mov
sub
pop
jo
test
cmpb
mov
xchg
sarl
leave
lcall
jmp
imul
sbb
xchg
mov
sbb
sub
das
mov
add
jecxz
jae
mov
inc
add
cmovbe
inc
xchg
mov
or
cwtl
or
sbbb
mov
in
stc
sarb
inc
call
dec
cli
adc
mov
dec
xor
and
mov
aam
sti
loope
adc
pop
sub
aam
or
sbb
inc
dec
add
cwtl
enter
dec
imul
push
sbbb
arpl
or
insb
jne
add
cmp
pop
or
and
add
add
xor
cltd
push
shlb
sbb
cmp
mov
cmp
xor
add
inc
adc
out
pop
popaw
sbb
sbb
out
push
data16
and
cwtl
mov
add
mov
push
cli
add
cmp
pop
mov
pop
and
stos
mov
out
jno
adc
ljmp
mov
in
clc
or
lahf
push
aaa
popf
cld
mov
loopne
stos
jl
and
imul
mov
push
inc
inc
shlb
sti
or
mov
adc
mov
mov
sbb
pop
adc
or
push
out
int
rol
xchg
or
mov
xor
add
outsl
scas
xchg
test
shrb
dec
inc
aas
mov
std
push
sub
push
jo
adc
jmp
nop
adc
push
fs
repnz
xor
cmp
xchg
mov
push
push
decb
jmp
scas
insb
faddl
outsb
xor
push
loopne
out
push
jbe
adc
sub
add
mov
adc
test
jne
mov
mov
pop
sub
mov
out
or
xchg
pop
lahf
mov
push
nop
scas
and
dec
jo
or
push
mov
in
dec
inc
daa
xor
and
jge
pop
outsb
sub
scas
leave
add
ficomps
jl
push
push
sub
mov
int3
pop
stos
aas
outsl
ss
push
jo
scas
clc
insb
sub
mov
cmpb
call
test
inc
fcompl
xor
add
in
clc
mov
and
cli
cmp
dec
fnstcw
sbb
pop
add
lods
lret
pusha
test
or
nop
aam
pop
pop
pop
fsubrs
mov
sbb
sub
xchg
mov
mov
inc
push
cmpsb
jl
ds
mov
pop
sub
in
xchg
pop
out
mov
add
rclb
sub
sub
adc
or
out
mov
cwtl
test
pop
push
hlt
sbb
pcmpeqb
or
mov
shlb
in
cmp
add
mov
dec
loope
scas
into
and
or
adc
test
add
test
pop
and
pop
cwtl
dec
daa
cmpsb
into
pop
shlb
mov
movsl
fisubs
mov
dec
sub
movsb
mov
push
cmp
lock
mov
xchg
imul
cld
daa
pop
pop
push
inc
loopne
dec
test
inc
fisttps
test
xor
cmc
xor
sti
pusha
xor
sub
pop
xor
das
mov
insb
adc
mov
cmp
mov
movsb
rcr
icebp
mov
mov
popf
dec
lods
add
push
pop
xor
inc
dec
fstpl
xchg
fistps
xchg
fisttps
repz
dec
or
mov
ret
jl
nop
dec
push
iret
test
lret
rcrb
insb
sbb
int3
and
or
js
and
cmp
cvttps2pi
enter
xchg
ss
pusha
ss
jo
add
outsl
xor
fnstcw
andb
mov
pop
cmpsb
sub
cmp
dec
push
adc
in
nop
inc
test
mov
dec
add
mov
sbb
es
outsl
iret
mov
daa
add
bnd
int3
and
lds
repz
jo
nop
js
fcoml
lahf
xorl
sbb
imul
pop
arpl
stc
mov
daa
je
or
rcll
clc
arpl
jo
sti
movb
outsb
pop
mov
add
pop
cmp
jne
cmp
add
mov
push
add
sub
je
test
add
and
sarl
mov
ljmp
pop
dec
cmc
add
aam
push
or
pop
scas
add
adc
shrl
addb
dec
leave
pop
inc
pusha
pop
rorb
call
test
gs
out
pop
hlt
shrb
mov
and
dec
mov
and
rcl
std
or
lret
arpl
sbb
stos
cmp
movsb
dec
or
xchg
enter
inc
or
jo
push
repnz
pop
xchg
enter
mov
push
fsub
bound
inc
clc
bound
repnz
negb
cltd
mov
adc
or
mov
mov
addr16
les
sbb
jbe
out
rcrb
mov
sub
add
addl
dec
and
adc
fs
repz
or
jo
sbb
push
inc
pusha
test
das
adc
and
and
or
mov
cld
xor
lret
cmc
cmc
subl
repz
jnp
or
pop
push
cli
pop
sarl
push
lea
sbb
jo
xchg
rolb
inc
and
pop
aas
test
adc
std
add
inc
nop
andps
or
test
fidivrs
pop
std
icebp
cli
mov
pop
ds
das
jmp
add
mov
out
sbbb
pop
jmp
push
add
sti
icebp
insl
ja
or
mov
xor
cmp
push
aam
or
or
popf
stc
cmpsl
cld
in
pusha
lds
mov
out
int
sbbb
call
mov
in
sub
cmp
xchg
scas
mov
pushf
and
inc
fcoms
into
test
mov
jo
outsb
push
dec
cmp
or
inc
mov
lock
movsb
call
sub
add
add
and
push
push
addl
pusha
pop
dec
cmp
mov
pusha
enter
loope
adc
add
or
jno
adc
movsb
push
and
fs
push
loop
cmp
inc
js
loopne
and
sub
and
mov
adc
jne
adc
or
or
push
in
mov
xor
pop
lock
push
cmp
xchg
lods
and
pushf
ss
inc
xchg
ljmp
filds
sar
pop
rcrb
mov
cmp
pop
push
mov
mov
sub
jg
inc
mov
mov
jb
push
movsb
dec
mov
adc
sbb
sub
jl
add
sub
jo
ret
bound
loopne
outsl
test
ret
mov
scas
jmp
dec
cld
sbb
jb
jg
dec
jle
sarb
insb
add
sbb
scas
ret
mov
sub
fs
xchg
jecxz
insb
xchg
sub
adc
xor
mov
sbb
sub
sub
std
mov
jo
dec
add
sub
adc
sbb
pop
or
and
jmp
push
dec
inc
xor
add
test
and
inc
stc
pusha
xchg
push
or
call
adc
xchg
and
xchg
add
xor
adc
add
rol
les
clc
shr
push
xchg
xchg
dec
ret
adc
inc
ljmp
test
mov
cwtl
das
cmc
enter
mov
add
push
add
dec
mov
jns
aam
jo
jne
pushf
nop
je
push
sub
cltd
pushf
adc
pusha
sbb
dec
inc
jecxz
ds
push
mov
sub
call
sub
dec
incb
mov
decl
adc
imul
adc
inc
mov
add
jmp
daa
clc
jae
and
mov
pusha
mov
dec
or
or
adc
and
into
loopne
sbb
orl
sahf
and
jp
leave
popa
add
inc
loop
jne
push
cmp
testb
cs
pusha
add
fwait
sbb
or
mov
mov
xorb
pusha
xor
outsb
lahf
xchg
and
cmp
inc
in
pop
insb
ljmp
sub
and
imul
mov
add
xchg
mov
push
jo
mov
and
add
scas
insb
into
sub
lea
xchg
sahf
mov
add
push
dec
popf
adc
mov
mov
mov
fiaddl
insb
lock
mov
rolb
xor
test
jl
sub
adc
rcrl
pop
and
test
cmp
dec
imul
ficompl
push
adc
sbb
mov
test
pop
or
adc
outsb
fnstsw
hlt
inc
pop
sbb
jno
sysenter
mov
inc
fistl
mov
sbbl
sbb
jo
and
pusha
or
pop
inc
or
movsb
imul
pop
inc
sbb
jae
inc
mov
sti
xor
mov
push
test
add
xor
outsb
adc
insb
loopne
out
cmp
push
dec
pusha
fidivrs
push
mov
hlt
xor
stos
push
adc
popw
xchg
rcrl
and
push
testl
adc
cmp
ds
push
or
scas
mov
pusha
lret
shrb
mov
cld
mov
hlt
mov
xchg
cmp
aam
jns
movsl
mov
xor
adc
ficoml
jns
push
mov
out
cwtl
les
into
shrl
dec
cmp
pusha
pop
outsb
nop
cwtl
cmp
pop
xchg
adcb
dec
mov
outsb
loopne
pop
dec
sub
in
add
pushf
cmp
fucom
orb
and
add
ja
adc
adc
jecxz
test
std
fs
adc
cmp
inc
in
out
cwtl
adc
and
lahf
out
mov
jnp
ror
hlt
pushf
add
leave
popa
cld
rcll
mov
or
das
jl
decl
clc
or
enter
cmp
cmp
fucomip
pushf
out
lods
test
inc
test
dec
scas
sbb
or
jno
add
js
lcall
test
xor
push
sub
and
inc
cltd
or
aas
orb
add
cmp
sub
add
lock
cmp
movsb
dec
test
sub
add
in
es
mov
adc
mov
mov
mov
xchg
sub
xchg
or
pushf
add
orb
mov
outsl
stc
inc
sub
movsb
pop
mov
sbb
das
movsb
nop
jl
sbb
es
fcompl
je
movsb
jg
xor
sbb
cli
xchg
fsubs
xchg
mov
and
and
or
push
and
es
pop
les
js
push
aam
adc
push
push
push
add
push
cs
add
les
sbb
push
or
mov
push
add
pop
add
mov
mov
cs
xor
sbb
jbe
xchg
adc
dec
sbb
nop
pusha
std
loop
sub
insb
adc
bound
adc
sbb
pusha
rcrb
inc
adc
nop
lods
inc
adc
movsl
sbb
nop
mov
xchg
sbb
nop
test
adcl
cmp
cld
push
mov
out
mov
push
mov
and
mov
test
test
test
adc
cld
or
notl
xchg
add
push
cmp
add
aas
xchg
pop
dec
pop
jo
ljmp
ret
push
xchg
mov
pushf
das
or
adc
mov
jmp
or
pushl
lock
xchg
mov
and
repnz
mov
sub
xchg
mov
shl
jmp
sub
cmp
js
loop,pn
and
cmp
fdivl
mov
and
test
in
or
xchg
scas
dec
adc
call
std
inc
testl
cld
mov
ds
pop
push
in
add
test
mov
mov
leave
jne
sbbb
int3
cmpsb
roll
mov
push
mov
push
mov
adc
pop
gs
sub
jecxz
push
xor
icebp
xor
mov
test
test
mov
lds
call
pusha
sarb
dec
shll
adc
xchg
adcb
push
loop
pop
push
cmp
lock
call
in
scas
loopne
rorl
leave
into
xchg
push
xor
fs
push
or
dec
adc
push
or
dec
mov
or
push
iret
xor
push
mov
or
push
popl
push
je
rcl
mov
mov
xlat
js
fs
lock
cmpb
or
xor
ficoms
idivb
jo
into
loopne
adcb
bswap
pop
fdivrs
adc
rclb
nop
pop
out
clc
je
mov
dec
mov
cld
or
pusha
or
dec
hlt
jo
mov
rolb
mov
aad
and
inc
imul
fwait
pusha
jae
adc
push
loope
add
loopne
cwtl
xor
es
sub
mov
dec
pop
mov
xor
pop
mov
xor
test
adc
xor
cwtl
sub
mov
or
add
ret
inc
add
add
into
movsb
outsb
mov
push
cmp
fwait
xchg
iret
ret
push
or
sbb
inc
fcoml
mov
cmpb
call
test
push
je
in
aas
hlt
aam
push
fs
push
stc
mov
sahf
scas
shl
mov
dec
scas
pop
popa
push
dec
movsb
cmp
xorl
leave
lock
inc
pop
mov
fadd
enter
push
cmpb
jb
pop
mov
push
dec
mov
sbb
adc
cmp
dec
mov
stc
psadbw
pop
leave
hlt
xchg
jo
mov
rcrb
mov
js
sbb
push
scas
inc
and
scas
or
test
aam
mull
cwtl
outsl
and
inc
sbbb
insb
cmp
lfence
pop
mov
xor
sub
cmpsb
mov
aas
ds
iret
stos
andb
xor
add
rcrb
sbb
sub
pop
pmaxsw
cmp
jp
pop
cmp
addb
cmc
xchg
andb
movsb
mov
nop
mov
cwtl
out
cmc
add
scas
setne
mov
cmp
std
out
aam
sbbb
scas
decb
jl
adcb
mov
xchg
nop
push
dec
outsl
cmp
fcoms
mov
addr16
inc
movsb
add
lret
addr16
cmp
loop
repnz
add
je
mov
dec
adc
or
out
and
sub
jo
arpl
inc
sub
or
loopne
add
dec
push
fidivl
push
xor
pop
jle
dec
je
push
push
dec
outsb
mov
add
push
movsb
pop
push
and
cmp
mov
inc
pop
test
fdivs
loop
not
xor
aaa
dec
mov
mov
lcall
hlt
lock
push
and
pop
inc
sti
pop
in
jg
mov
cmc
xor
mov
add
inc
mov
or
xor
popw
in
push
mov
imul
jo
xlat
movsb
pushf
mov
and
flds
jl
cmp
lret
pop
lock
icebp
mov
jg
int3
in
repz
pop
pop
rolb
mov
dec
sub
push
pop
stc
mov
xor
push
fiaddl
xchg
add
dec
sub
fadds
aam
outsb
mov
cmp
in
jecxz
jmp
cmp
add
mov
or
es
pop
les
lea
clc
sub
call
or
test
mov
call
inc
push
or
push
xchg
adc
mov
sti
xor
fistps
mov
das
adc
and
inc
xor
aam
lret
andb
arpl
pusha
call
or
mov
pop
cmpl
push
les
cmp
adc
fsubr
mov
and
fisttps
ret
jbe
das
cmp
add
push
outsb
fnstsw
mov
fdivl
or
not
xchg
push
pop
or
popf
and
add
out
inc
mov
lret
mov
mov
mov
mov
hlt
inc
mov
dec
imul
cwtl
xchg
enter
sbb
adc
test
adc
nop
out
push
shrb
sub
loopne
daa
cs
insb
mov
dec
cmp
or
outsb
in
xor
ret
dec
push
pop
sub
push
lods
cwtl
mov
mov
inc
lahf
jecxz
and
add
cmp
adcb
adc
shll
lods
sub
add
add
mov
mov
mov
adc
inc
adc
sub
stc
scas
fldt
movsb
mov
mov
lods
and
push
inc
arpl
mov
pop
sbb
sbb
ret
jnp
jg
push
xchg
mov
lods
mov
or
cld
subb
and
cwtl
and
test
add
push
leave
pop
mov
nop
addb
mov
sahf
add
dec
aad
js
gs
or
outsb
push
mov
mov
mov
ficoms
mov
push
mov
fbld
push
mov
std
int3
adcb
lgs
fsubrl
sub
pop
add
test
add
and
icebp
or
mov
fisttpll
pop
xor
add
sti
out
adc
pop
cmp
cmpsb
test
pushf
insb
bswap
dec
or
sub
push
cmp
inc
imul
adc
das
push
sahf
jle
add
and
add
and
test
int
shlb
sub
prefetchw
mov
dec
dec
lock
pop
add
adc
push
sub
pop
in
mov
mov
subb
jl
test
sahf
pop
and
sbb
movmskps
push
mov
shrb
jne
add
fidivl
mov
pushf
push
aas
nop
or
idivl
adc
iret
jecxz
adc
fisttps
rclb
push
sub
out
dec
cmp
jge
scas
push
mov
jns
lea
testb
sbb
add
adc
or
out
and
xor
push
push
decb
or
shlb
mov
jg
movsb
push
pop
hlt
mov
jo
sbb
cmp
popf
add
and
dec
dec
out
cmpb
fidivrs
and
pushf
push
nop
ret
hlt
shrl
shrb
add
add
nop
and
loopne
or
or
push
ljmp
pop
add
ds
push
jle
ds
mov
mov
call
mov
jb
aad
cld
or
ss
mov
cmp
out
and
and
jg
js
or
mov
cld
sub
xor
aad
enter
mov
sub
mov
enter
lods
push
cltd
sub
add
xchg
popf
pop
inc
rclb
nop
adc
and
mov
or
clc
js
in
push
push
inc
dec
cmp
rclb
add
push
stc
fiadds
mov
jne
sbb
xor
enter
js
sub
add
out
ss
lods
hlt
pusha
dec
inc
cli
or
imul
enter
sub
or
add
fcoms
clc
adc
test
fwait
xchg
test
xchg
jg
pusha
dec
jo
lods
test
scas
cmpsb
dec
or
adc
push
js
aam
aam
insb
adc
ds
jp
test
add
xlat
sbb
push
mov
add
or
testl
push
sbb
pop
call
jge
pop
scas
mov
sbb
clc
in
xchg
leave
movsb
and
in
sbb
stos
and
ficoml
mov
ds
xor
cmpsb
shr
mov
and
lods
sub
movsl
sub
mov
mov
lret
inc
mov
nop
and
inc
xlat
out
inc
sbb
aad
and
out
add
mov
fimull
fs
push
rolb
adc
test
fldt
shrb
cmp
sub
jmp
jb
mov
sub
adc
fsubrs
filds
call
sbb
push
outsl
sub
sub
jl
add
pushf
lods
fmuls
push
imul
roll
lret
rol
mov
sub
push
add
cwtl
out
aad
dec
push
call
adc
or
pop
pusha
mov
inc
lods
mov
jl
cmc
xchg
stc
iret
sbb
aas
pop
or
adc
push
shlb
or
les
cld
imul
inc
mov
ret
adc
repz
dec
adc
out
div
mov
cmpsb
sub
pop
sub
pusha
add
add
mov
adc
mov
or
xchg
and
sbb
hlt
adc
into
insb
add
dec
xor
add
fadds
ds
aad
dec
je
loope
fcomps
jo
add
mov
mov
pushf
loopne
push
pop
aam
dec
sti
add
cs
bound
rclb
push
cmovnp
mov
das
add
imul
pop
jo
add
push
xchg
add
orb
adc
or
sbb
pop
push
call
test
sbb
pop
add
mov
test
das
dec
cwtl
jge
in
mov
add
and
gs
inc
shl
push
inc
inc
or
loope
and
inc
pushf
subb
lods
xchg
jmp
dec
shrl
pusha
movsb
cmp
js
mov
lahf
rcrb
dec
mov
add
lret
add
add
loope
dec
cltd
mov
pusha
dec
mov
push
xor
call
mov
jne
cmp
dec
mov
aad
call
sub
incl
enter
es
push
push
and
inc
mov
adc
and
data16
outsl
shll
mov
mov
cmp
adc
adc
test
test
fsubs
rcr
ret
mov
in
mov
neg
sub
imulb
shll
outsb
pop
xchg
pop
and
xor
ljmp
mov
jmp
dec
aas
cld
ret
fadds
test
mov
std
and
inc
jo
adc
not
test
rorb
cmp
lahf
add
pop
test
cs
or
js
sub
push
call
cs
add
movsb
in
push
hlt
and
sub
push
enter
adcb
test
sbb
inc
lret
mov
and
and
sub
lock
adc
mov
pusha
cmp
xchg
sub
icebp
sub
inc
jo
pop
test
cmp
jb
mov
add
push
rcrl
dec
lock
shll
nop
test
push
test
push
or
ja
push
mov
in
xchg
or
es
dec
xor
enter
cmpsl
sub
bound
xor
push
mov
inc
inc
add
sbb
mov
insb
xor
push
test
inc
sbbl
or
xor
or
xchg
push
pushf
movsb
pop
or
test
dec
test
jo
adc
nop
jle
and
sbb
ss
aas
push
imul
adc
pop
add
out
std
daa
and
lahf
mov
aad
test
pop
loopne
inc
cmp
js
add
fsubr
aad
fmull
push
mov
cmp
loopne
js
pop
dec
lahf
and
jp
jo
dec
je
sbb
push
cmpl
cwtl
shl
sub
add
mov
inc
push
lret
mov
nop
add
push
push
mov
ret
mov
adcl
mov
mov
push
mov
and
sbb
mov
sub
inc
fdivrl
mov
mov
pop
scas
sub
jmp
notl
add
fwait
mov
clc
lea
sub
or
adc
mov
and
or
inc
repz
adc
int3
sbb
push
inc
and
mov
add
test
add
sbb
ss
data16
aaa
pop
push
cmp
hlt
adc
dec
xchg
and
xchg
test
push
add
in
std
fistpll
or
enter
add
xor
roll
inc
aaa
xchg
fdivrl
jl
xor
std
insb
rolb
cld
mov
jmp
mov
xor
xchg
pop
add
pop
pop
jo
push
nop
pop
out
lock
and
in
adc
pop
outsb
mov
int3
hlt
mov
ds
or
fldl
cmp
add
in
cs
pop
int3
mov
or
imul
into
clc
or
movzbl
dec
test
call
cmp
lcall
shll
cli
mov
pusha
sub
pusha
mov
lret
mov
pop
lahf
jne
add
aam
ret
mov
mov
xchg
dec
or
ffree
add
push
call
icebp
inc
int
ret
mov
loopne
inc
inc
xor
mov
out
shlb
sbb
in
push
xor
lods
push
lock
push
push
mov
stos
mov
das
sub
xchg
and
stos
lods
mov
aam
test
dec
rcl
cmp
mov
mov
sub
adc
or
test
insb
mov
add
add
jg
andl
xchg
lods
je
sbbl
mov
jo
popf
into
adc
ss
scas
data16
push
adc
faddl
mov
rolb
mov
xchg
dec
xlat
call
loope
insl
lock
mov
dec
mov
pushf
sbb
dec
shrb
pop
ret
cld
xchg
or
push
inc
lods
or
xor
sub
xchg
adc
push
jne
mov
xor
dec
test
sbbb
data16
sub
insb
add
sbb
in
scas
inc
pushf
pushf
test
jl
pop
test
pusha
out
aas
sub
repnz
insb
cld
xor
or
xor
outsb
call
sub
xlat
pusha
mov
nop
ds
xchg
adc
push
inc
in
and
or
or
mov
cmp
xor
stc
pop
in
and
add
aaa
cwtl
push
sahf
push
test
nop
xchg
dec
rcrl
pop
push
xor
mov
pushf
push
jl
inc
pop
inc
in
loop
add
sub
and
addr16
lret
ja
pushf
adc
adc
adc
mov
icebp
dec
rcr
push
lods
dec
jl
mov
inc
sub
scas
push
and
out
nop
push
sub
pop
jb
insl
or
sbb
fcompl
sub
sbb
push
iret
mov
je
dec
sub
fists
rcrl
jl
pop
mov
pop
sbb
icebp
je
je
test
dec
pop
jae
mov
fcomps
movsl
inc
clc
xchg
cmp
mov
js
lahf
scas
or
fcoms
adc
dec
push
inc
ret
sub
sub
repz
pop
and
stos
adc
dec
pop
inc
jne
sbb
jnp
test
sub
dec
and
push
enter
in
dec
and
fisubl
mov
push
out
pushf
or
pop
cmp
sbb
sub
nop
clc
ja
test
jbe
das
test
xchg
adc
xchg
cmp
pop
jecxz
in
lock
test
ljmp
fs
mov
stc
repnz
leave
sbb
pop
js
sbb
pop
adc
adc
push
or
mov
inc
shlb
inc
and
aad
inc
mov
sbb
ja
pushf
test
sub
leave
sbb
push
adc
stos
inc
jp
inc
pop
jns
add
icebp
ja
mov
adc
stos
cmp
pop
and
scas
cmp
inc
push
stc
or
outsb
das
stc
or
mov
stc
repnz
leave
sbb
pop
jnp
sbb
xor
or
adc
push
clc
nop
stc
or
inc
adc
pop
inc
mov
xor
pushf
or
pop
cmp
sbb
sub
movsb
clc
jge
test
jl
in
icebp
push
or
jne
pushf
sub
movsl
cmp
mov
js
pop
loope
rorl
pop
inc
push
and
mov
push
and
pushf
adc
out
nop
mov
inc
popf
cs
mov
gs
or
pop
sbbb
sub
pop
inc
je
mov
dec
xchg
popa
je
jno
dec
xchg
add
pop
dec
movsl
rcl
cmc
mov
ret
or
sub
fmull
mov
mov
adc
pop
and
pop
xor
sub
adc
push
int
push
push
cmp
les
aam
pop
adc
in
mov
mov
idivb
jl
xchg
fldenv
sub
pop
and
add
xchg
cs
sbb
pushf
sub
adc
xchg
pusha
jle
jnp
imul
mov
and
jp
mov
pop
jo
dec
push
jle
add
mov
cmp
sbb
and
enter
sub
mov
push
sbb
ja
push
xchg
mov
or
push
cmp
push
mov
scas
pushf
xor
xchg
les
jo
or
mov
mov
adc
cs
in
xor
pop
cmp
add
lock
sbb
inc
and
push
sbb
subl
xchg
rol
jle
xor
pop
pop
or
fs
fwait
jae
test
adc
sub
inc
adc
cs
push
lock
pop
in
shl
test
adc
loopne
adc
in
or
pop
in
js
pushf
and
push
add
in
mov
and
in
mov
adc
test
sub
sbb
test
sbb
popa
fcoml
push
int
popa
or
and
inc
and
imul
loopne
mov
fwait
xchg
xor
test
sub
and
sbb
fcmovnu
shlb
fistl
sub
clc
je
insb
js
adc
and
and
jmp
jo
mov
aaa
dec
cltd
rclb
adcl
iret
dec
jmp
into
and
xchg
adcb
imul
adc
sahf
sub
call
rorl
dec
test
sub
outsb
mov
push
cmpsl
jge
rol
push
call
fisttpl
sub
das
les
cmc
cmp
repz
cmpl
fdivrl
outsb
dec
mov
movsb
scas
nop
cmp
jae
popf
notb
pop
xchg
cltd
nop
inc
test
inc
lods
aas
les
icebp
jb
mov
mov
mov
pop
xchg
sub
mov
mov
fstl
das
test
dec
cmp
fistl
test
add
jbe
jne
mov
sbb
sbb
daa
shr
and
pop
jns
xorb
dec
mov
fdivrs
addb
fdivrl
movsl
hlt
aam
daa
dec
sbb
nop
pop
xorb
pop
cmovno
xchg
movsl
inc
pusha
cmpb
and
icebp
push
popa
fisubs
mov
push
push
adc
push
test
and
cmp
jg
jmp
xchg
cmpsb
dec
sbb
cmp
inc
loopne
adc
cli
inc
in
dec
jne
mov
imul
mov
adc
or
call
dec
test
add
sub
cwtl
adc
push
pusha
scas
mov
or
inc
call
fisubs
int
lods
lret
mov
and
add
adc
dec
clc
je
sbb
sub
cli
adc
mov
and
sbb
push
or
lock
fsubs
filds
andb
nop
sbb
loopne
pop
cwtl
add
fsubp
mov
add
mov
inc
ds
scas
mov
mov
sub
adcl
out
lods
add
int3
add
adc
lods
bound
or
outsb
push
in
es
and
jns,pn
xchg
pshufw
sbb
loopne
sahf
or
mov
cltd
xlat
add
sub
push
sbb
xor
dec
popf
aam
bound
loop
push
inc
pusha
outsb
nop
sbb
xor
or
mov
sahf
cmp
lahf
pop
or
loopne
sti
outsl
clc
sbb
mov
nop
pop
js
cmp
smsw
sub
jl
je
dec
dec
leave
leave
scas
mov
dec
push
je
mov
imul
test
test
push
mov
pushf
rolb
or
leave
xor
sbb
aas
jmp
sbb
add
pop
adc
mov
push
pop
loope
aam
and
inc
andl
mov
mov
adc
ss
adc
out
or
es
adc
adc
dec
xchg
cmc
je
aam
dec
movsl
jbe
adc
adc
aad
mov
rcll
and
mov
sub
mov
popa
lret
aaa
inc
mov
andl
inc
xor
inc
cmp
nop
or
fldcw
out
mov
bsf
push
adc
icebp
les
addr16
in
or
inc
pusha
push
add
or
out
sbb
pop
cmp
inc
pusha
mov
pop
or
sbb
pop
or
iret
push
out
cmc
xor
cmp
aam
mov
push
push
mov
or
rcrl
cmp
fdivrs
cmp
int3
and
adc
mov
mov
shll
adc
jns
js
sbb
xchg
and
add
nop
xchg
loopne
fistl
sub
adc
fs
xchg
adc
cltd
inc
hlt
popa
sub
inc
pop
xor
adc
or
mov
add
pop
jle
cmp
cs
aam
or
sbbl
sbb
sbb
or
dec
scas
or
loopne
jl
xor
push
push
sub
adc
add
fcoml
push
or
mov
and
das
inc
mov
out
ret
stc
hlt
pop
fistps
fdivl
or
loope
adc
mov
inc
sub
je
scas
push
das
orb
js
out
adc
mov
fmuls
jo
mov
pop
pop
inc
sbb
pop
and
sub
outsb
inc
mov
jl
pop
pop
adc
jg
sub
mov
rcr
mov
sar
pushf
sub
pop
adc
shrb
pushf
xchg
out
mov
pop
jg
mov
mov
negb
push
adc
mov
hlt
sti
movsl
call
push
js
ss
into
out
lret
cwtl
vcmpps
addr16
lods
inc
sub
test
or
mov
leave
adc
lods
cmp
push
push
js
cli
sahf
loopne
sbb
popa
lock
adc
mov
fs
clc
cwtl
jmp
lock
test
push
adc
mov
and
sub
lods
push
mov
and
mov
xchg
sbb
faddl
pop
and
and
mov
mov
repz
sbb
inc
sub
xor
test
adc
sahf
pusha
fucomp
mov
lds
andb
add
adc
mul
mov
cmp
rorb
fidivrs
sub
scas
xchg
and
sbb
or
inc
adc
hlt
sbb
inc
push
add
loope
scas
imul
xchg
and
sub
jle
cmpb
jns
lahf
fidivrs
adc
push
pushf
clc
outsb
idivl
in
nop
mov
pop
and
pop
xchg
test
fdivs
jno
adc
aas
jmp
sar
push
jmp
pusha
cmp
xchg
das
lahf
fiadds
outsb
aad
push
mov
out
daa
cmc
mov
or
das
jg
test
out
fdivs
dec
insl
jo
adc
sub
in
dec
movsb
jno
and
pop
scas
sub
stos
cs
add
pop
or
inc
cmp
sbb
sbb
mov
mov
nop
adcl
adc
aad
add
push
inc
hlt
enter
mov
adc
xor
cmpsb
adc
cmp
arpl
push
ss
push
lahf
nop
cld
mov
push
dec
xor
or
sbb
jg
jo
enter
nop
pop
scas
or
jl
dec
sbb
jecxz
inc
pop
imul
jo
dec
pushf
cmp
add
push
cld
fidivrs
into
clc
or
std
sbb
sbb
mov
shlb
jnp
lret
andl
shrd
push
les
add
into
loopne
std
xchg
movsb
aaa
dec
cmc
pop
push
movsb
pop
push
call
jae
scas
int
inc
rolb
in
aam
and
adc
ret
ret
ret
in
inc
in
mov
inc
pop
and
shlb
lods
add
cmp
js
jecxz
sarb
insb
and
and
sbb
aam
flds
or
call
push
inc
lods
test
repnz
xlat
pusha
mov
sbb
addr16
adc
adc
mov
cmovo
pop
sub
adc
sbb
xor
fdivs
insl
ja
rclb
cmp
pop
shr
call
jge
jo
aam
lock
jge
enter
ret
xor
orb
inc
jne
inc
icebp
cwtl
jns
aas
rorb
jne
xchg
icebp
mov
in
or
add
sub
sbb
jns
test
and
fcmovb
mov
xor
dec
add
out
shrb
mov
jns
rorb
cmp
and
add
out
adcl
mov
dec
push
mov
adc
push
iret
add
cmp
or
in
sub
out
mov
and
add
out
push
cmpb
rolb
xor
in
jb
inc
add
cmp
cmc
rcll
jns
and
inc
cmc
icebp
add
jb
cmp
and
or
in
adc
xor
enter
fsubp
inc
mov
add
jb
xchg
inc
inc
iret
dec
and
je
push
int
loop
add
adc
je
scas
rolb
cmp
popa
enter
or
sbb
test
xor
leave
cmp
add
add
rorb
cmp
jb
sub
hlt
xor
add
aam
insb
xchg
pop
mov
sbb
or
test
pop
mov
xlat
das
arpl
sbb
sub
sub
inc
pusha
xor
hlt
int
cmp
cld
mov
daa
pop
mov
jmp
or
je
adc
pop
and
push
test
xchg
shrl
nop
sub
call
mov
lahf
inc
jo
inc
nop
or
adc
and
add
scas
add
xchg
loop
hlt
dec
dec
or
shll
add
pop
add
ljmp
aam
clc
or
sub
adc
int3
push
or
daa
push
nop
int3
scas
sbb
pop
mov
sbb
jp
mov
mov
movsbl
cmp
push
xor
push
inc
sbbl
sti
out
psubsw
nop
adc
adc
aam
call
xchg
out
shll
lock
repz
dec
mov
scas
aas
xchg
or
out
cwtl
lock
add
lcall
xchg
js,pn
pop
test
jne
jl
push
bound
test
and
add
inc
hlt
sub
inc
inc
pop
loope
or
je
pop
call
ds
xor
xchg
movsb
xchg
mov
jle
and
jge
xor
test
icebp
sbb
add
das
ret
int3
mov
nop
data16
dec
test
sbb
inc
xchg
sarb
pop
cwtl
sub
xor
iret
add
xchg
jb
add
xor
repnz
sub
nop
mov
sub
jmp
add
cs
cmp
inc
sti
pop
js
int3
and
mov
adc
clc
nop
jne
pushf
xor
ret
xor
pusha
sub
hlt
lods
mov
add
data16
popf
call
repnz
or
sti
and
stos
test
mov
orl
out
pusha
outsl
push
and
or
sbb
aas
and
cmp
pop
loop
adc
hlt
in
adc
fistpll
mov
addps
dec
fstl
scas
pushf
rolb
sub
ret
loop
pop
push
pop
add
call
shrb
adc
push
xor
jl
cmp
sbb
shl
lods
mov
jo
push
or
subb
mov
daa
xor
add
mov
push
jo
adc
adc
sbb
shr
and
add
icebp
add
je
add
sti
hlt
push
rclb
fistps
jo
xchg
dec
movsb
or
js
enter
pop
and
add
pushf
mov
addl
dec
mov
pop
mov
mov
repz
mov
fcoms
movsb
and
xor
adcl
mov
int3
xorb
inc
or
rol
cmpsb
nop
add
sbb
gs
mov
test
xchg
add
cld
nop
or
xlat
cs
in
testb
and
sub
outsl
test
pop
or
dec
xchg
mov
xchg
jnp
cmpl
jo
mov
rolb
push
frstor
sbb
jo
outsb
pop
and
or
outsl
xor
subb
int3
cld
sbb
lcall
insb
je
jl
pop
js
pop
pop
push
jmp
jo
cmp
ds
push
push
push
pop
sbb
jo
test
cmpl
inc
mov
dec
add
push
ficomps
pop
call
sbb
push
popf
jb
and
mov
and
call
cmp
push
outsl
es
add
mov
mov
adc
negb
dec
or
mov
adc
xor
js
popa
loopne
xor
add
sub
jecxz
add
mov
lods
jl
adc
push
les
xchg
nop
jno
push
or
mov
scas
repnz
scas
adc
icebp
add
fsubrl
clc
mov
fisubrs
aam
imulb
inc
push
jno
jb
push
xchg
adc
andb
push
pandn
jo
test
add
mov
jle
cmp
xchg
inc
dec
sub
pop
les
pop
sbb
or
xchg
ds
enter
loope
mov
outsb
lods
lret
fs
mov
mov
adc
sbb
rcr
iret
ret
or
inc
pop
push
mov
push
push
sub
iret
jge
adc
inc
and
in
xchg
ljmp
je
cmp
popf
ret
sub
sub
movsb
cs
jae
sub
test
add
add
pop
cwtl
mov
jno
hlt
test
test
hlt
pop
iret
mov
mov
sbb
dec
and
dec
or
sbb
jmp
adc
add
cmp
adc
add
lea
mov
or
mov
push
or
sub
loopne
rcrl
jnp
push
add
mov
les
mov
or
cmp
pop
mov
xlat
fsubs
add
adc
jbe,pn
movsl
or
and
or
aas
push
fisubl
in
jo
inc
mov
nop
jl
icebp
push
dec
pusha
addb
xor
test
xchg
pusha
inc
ret
mov
pushf
mov
mov
jnp
test
das
rcrb
dec
adc
js
rclb
adc
adc
sbb
les
dec
jne
js
das
sahf
push
fdivrs
inc
shrb
xchg
cwtl
add
xor
add
or
clc
sbbb
mov
pop
sub
rolb
enter
add
cmp
mov
push
xchg
ljmp
and
cwtl
aas
dec
out
cmp
fs
xchg
sbb
add
loop
je
pop
mov
and
cwtl
pop
jo
jae
add
mov
push
scas
mov
pop
int3
das
addr16
pusha
and
pop
idivl
ss
imul
jge
push
mov
and
inc
cltd
je
dec
xchg
xchg
in
rclb
adc
les
add
dec
loope
xchg
push
mov
int3
loopne
leave
mov
push
pop
or
aas
jl
xchg
lods
add
popf
insb
pop
fidivrs
test
xor
adc
movhps
xchg
or
pop
dec
jl
lret
xor
xchg
push
imul
push
cmp
adc
push
lds
xchg
inc
add
add
mov
add
aam
adc
ss
jne
adcb
insb
push
dec
mov
mov
outsl
add
push
test
in
jecxz
in
jmp
call
lods
ljmp
movsb
or
pop
push
pushf
inc
dec
push
in
xor
inc
push
adc
scas
test
test
ret
push
andb
mov
mov
push
hlt
rcrl
add
aam
sarb
fsubr
insb
clc
push
mov
adc
mov
jbe
into
call
xor
rorl
sbb
clc
popa
add
rol
cltd
out
inc
fsubs
dec
lret
dec
sbb
mov
or
ds
sahf
in
add
mov
lea
pop
pusha
pop
push
fistpll
inc
mov
pusha
jmp
or
push
or
andb
dec
out
pop
sbb
pop
mov
dec
add
rcrb
mov
push
dec
ss
rclb
aad
pop
nop
int3
lods
inc
xchg
jo
clc
dec
clc
add
stos
jno
sbb
jo
push
dec
sub
cwtl
pusha
adc
push
scas
mov
adc
leave
mov
ret
dec
dec
inc
nop
push
addb
jb
push
mov
shrb
in
or
dec
enter
add
lds
or
xchg
cmp
loopne
or
xor
stc
leave
lock
mov
rcl
bound
jo
jl
xchg
fmuls
sbb
inc
imul
sub
or
lock
aas
sub
mov
adc
add
adc
or
and
inc
subl
mov
lods
push
inc
dec
mov
sub
test
ds
sarb
shl
adc
push
adc
pop
test
dec
add
adc
cwtl
aaa
cmp
cmc
pop
and
aad
mov
sub
jb
adcl
mov
test
aas
jns
sbb
pusha
mov
or
fadds
out
jno
mov
and
add
fwait
rol
sub
in
call
dec
das
push
mov
jnp
adc
mov
sbb
mov
cwtl
push
jl
ret
dec
enter
pop
shl
add
mov
sub
mov
mov
mov
lock
mov
das
fistpll
clc
je
orb
jbe
lcall
enter
fs
pop
das
pop
add
xchg
inc
sub
and
pop
dec
and
xchg
cmpb
pop
sub
pop
lret
or
cwtl
cmp
lcall
stos
mov
mov
fdivs
in
cmp
sbb
sub
dec
lret
lods
cmc
lds
cld
jo
in
xchg
inc
test
pop
les
inc
les
mov
pop
stc
lock
lea
cmp
movsb
xchg
hlt
call
cmp
xchg
push
inc
push
dec
pusha
mov
lods
daa
jmp
sub
ret
adc
pop
jo
inc
pushf
lods
inc
jns
and
adc
ret
adc
mov
sub
add
inc
lock
ds
je
and
outsl
cltd
add
sti
add
adc
scas
adc
pop
mov
fstl
adc
test
inc
or
ja
pop
push
cmpsb
nop
fimull
cmp
pop
clc
adc
cwtl
subb
lds
add
orb
or
icebp
out
pop
arpl
fcompl
lock
sbb
or
nop
add
and
hlt
pop
cmp
sub
and
aam
mov
insb
and
ja
rorb
jo
or
adc
out
andl
add
ret
xor
mov
pop
sti
clc
sbbl
es
push
jle
fsubl
adc
or
or
push
lea
aad
nop
and
cmp
pusha
bound
sbb
sbb
or
and
mov
cmp
pop
insb
cmc
pop
test
push
add
pop
das
punpckhbw
pop
pop
and
mov
aam
mov
loope
imul
js
inc
push
push
xchg
mov
pextrw
sahf
mov
and
mov
add
mov
cmpl
es
sub
dec
outsb
sub
xchg
sub
fdivrs
lock
pop
push
or
js
push
inc
add
sub
pop
or
pop
xor
std
sub
sub
cwtl
add
fstps
dec
or
pop
inc
test
dec
sub
adc
xor
outsl
jmp
jmp
lahf
fwait
pop
and
lret
lea
sahf
es
fdiv
or
sbb
lods
mov
fsub
sarb
sub
mov
and
je
pop
in
cmp
or
scas
je
and
pop
notl
test
adc
loopne
test
cwtl
rclb
enter
mov
lret
xor
pop
outsb
adc
and
xchg
and
pop
outsl
dec
cmpsb
out
and
mov
dec
xchg
test
inc
ss
aaa
idiv
xor
lret
xor
push
xchg
test
mov
pop
xor
or
jp
push
dec
push
insb
or
test
xor
dec
rcl
hlt
in
add
shlb
xchg
aam
stc
in
stos
adc
scas
mov
and
push
les
adc
or
push
in
dec
or
inc
fs
inc
add
cmp
insb
call
xchg
notl
mov
testb
and
dec
es
ds
xor
or
fsubl
enter
int3
add
insb
pusha
scas
es
sbb
mov
xchg
mov
ret
or
in
xchg
add
adc
clc
aas
add
sub
add
aaa
push
popa
sub
js
mov
inc
sub
cwtl
clc
dec
dec
incb
shr
mov
andl
rcrb
rclb
add
or
shr
and
mov
and
dec
test
mov
loopne
in
dec
dec
and
mov
or
ljmp
xor
sete
imul
or
add
adc
dec
pop
lock
repz
and
in
lds
and
lods
shll
into
lahf
ret
nop
pop
or
mov
loopne
mov
adc
cmp
cli
sub
lcall
rorb
stos
dec
pop
or
xor
fdiv
adc
shrb
fmull
add
xor
mov
test
or
in
mov
pop
insb
mov
cmp
push
inc
add
fdivrs
and
mov
cli
and
xchg
mov
nop
test
jae
notl
rol
xor
and
add
push
jo
add
pusha
movsb
and
test
mov
sub
push
jno
leave
mov
rcl
mov
loopne
push
cmc
shlb
ss
fcompl
test
cmp
push
jp
sub
sub
mov
hlt
stos
rcrb
xchg
icebp
pop
arpl
jno
setg
inc
adc
imul
xor
xchg
idivl
pushf
jge
mov
loopne
orb
bound
hlt
add
into
inc
nop
dec
and
cmp
mov
and
fdivr
xchg
xchg
sub
sbb
xchg
loop
sbb
jo
ss
repnz
and
sbb
dec
or
push
dec
sbb
or
push
adc
mov
or
addr16
pop
shl
mov
dec
syscall
cmp
loop
mov
jb
and
push
pop
push
ficomps
shl
test
mov
insb
mov
insb
add
dec
lds
add
adc
out
test
dec
inc
popa
adc
cmp
mov
iret
add
adc
add
sbb
push
xchg
addr16
rcr
pop
outsl
push
daa
or
aas
mov
add
pop
xor
enter
xor
add
dec
xchg
pop
andb
push
scas
popf
dec
incl
shrb
sbb
enter
inc
into
outsb
adc
push
sub
xor
jl
and
cltd
shlb
dec
adc
fcmovnbe
dec
icebp
mov
inc
sbb
push
rorl
inc
pop
or
pop
sbb
dec
cmp
inc
clc
jne
pop
xchg
jo
or
sub
push
sub
sub
xor
mov
cmp
das
xchg
inc
jl
inc
std
mov
add
sub
or
push
add
adc
clc
sahf
mov
mov
cs
pop
push
fsubr
xchg
insb
pop
pop
push
inc
popl
cmp
stc
ljmp
out
adcb
test
sub
mov
loope
push
adc
nop
sub
aas
jg
loopne
fisttpl
insb
pop
mov
lock
mov
and
test
or
jo
mov
notl
in
mov
hlt
push
fwait
jno
or
mov
sub
les
or
xchg
push
mov
inc
sarl
negb
dec
dec
mov
mov
add
mov
adc
xor
outsb
fisttpll
add
adc
lds
mov
dec
or
jb
pushf
inc
jl
add
xor
sub
insb
hlt
test
push
loopne
push
sub
xor
push
xchg
hlt
xchg
je
pop
xchg
mov
or
xor
stc
fnsave
fcoml
aad
call
das
or
fiaddl
mov
int3
cmp
inc
pop
jle
loop
add
pop
or
mov
repnz
push
xor
mov
pushf
jge
pop
pop
mov
lods
push
out
lcall
or
push
xor
mov
std
mov
dec
mov
add
and
cmp
call
pop
idivl
pusha
addb
lods
in
dec
inc
and
pop
pop
rcll
pop
ret
cld
inc
add
push
sbb
add
or
cmp
in
dec
ss
cwtl
push
outsb
das
lock
lcall
push
js
std
loopne
addr16
mov
pop
mov
mov
cmp
or
fadd
cld
and
and
addb
cwtl
jb
popf
pop
fs
mov
add
out
lea
inc
pusha
mov
adc
pusha
movsl
add
cmp
test
lds
xor
out
xchg
addl
and
addb
lret
sub
je
dec
clc
adc
dec
dec
pusha
add
cmpsb
hlt
mov
insb
cwtl
popa
mov
aam
push
sar
add
mov
adc
push
shrb
xchg
loopne
or
dec
sub
jge
fs
push
push
lock
mov
addb
inc
lcall
aas
stos
push
mov
inc
xor
sbb
add
nop
and
mov
test
inc
jecxz
mov
add
xorl
mov
fidivs
sahf
xchg
pusha
andnps
mov
call
push
das
mov
sahf
jl
js
pusha
sbb
ss
scas
cltd
js
xor
and
push
pop
nop
repnz
add
repnz
fbld
or
inc
cmp
mov
clc
inc
inc
fsubrl
adc
aas
push
mov
test
cmpb
pushf
out
jmp
and
enter
lcall
ss
sub
in
cmp
mov
and
mov
sbb
xorb
dec
pop
jo
jbe
loopne
mov
push
add
cld
mov
mov
add
push
je
jle
cmp
cwtl
pop
inc
inc
cmc
loope
jg
and
pop
int3
ltr
cmpsb
lcall
clc
xchg
decb
jmp
cmp
das
test
rorb
mov
movsb
mov
xor
pop
xchg
mov
and
and
int3
popa
sbb
or
test
dec
jns
movsl
js
xlat
mov
lock
nop
into
inc
fwait
mov
int3
push
je
loop
mov
pop
cmp
inc
push
and
and
xchg
mov
repz
mov
dec
inc
rolb
mov
movsb
in
test
push
les
or
sbbb
aad
xchg
and
loopne
jg
lock
sbb
mov
sahf
dec
pusha
mov
jge
popf
jno
mov
orb
pusha
lret
mov
scas
jge
jl
xchg
mov
or
mov
mov
xor
xor
loope
push
xor
je
add
sar
push
repnz
jp
mov
mov
lret
mov
in
adc
xor
sti
mov
jns
pop
or
add
jbe
pop
push
push
dec
push
mov
pop
test
cld
outsl
push
sbb
inc
les
in
dec
xor
mov
loopne
movsb
adc
mov
inc
mov
mov
adcl
sub
mov
outsl
inc
aaa
dec
repz
pusha
mov
add
or
fsubs
lret
sub
add
or
push
pushf
sub
inc
adc
adc
fsts
dec
les
mov
xchg
ficoml
ja
test
lahf
insb
xor
and
add
shll
push
mov
ds
cmp
and
in
cwtl
test
fs
xor
cmpsl
push
and
test
aad
cwtl
inc
adc
mov
xor
sbb
jle
fidivl
mov
push
es
out
xchg
or
sbb
mov
fcoms
xor
aam
nop
nop
mov
mov
test
ds
add
inc
in
mov
mov
cmp
adc
test
inc
pop
incb
stc
add
adc
push
flds
lock
mov
xor
xchg
fs
push
mov
fsub
mov
mov
bound
jmp
dec
fs
imul
mov
or
jle
jno
pop
sbb
inc
int3
pop
mov
mov
fisubrl
popf
pop
push
clc
test
mov
xchg
xor
popa
inc
mov
push
and
shrl
xchg
pop
cmpsb
popl
cmp
icebp
push
mov
andb
push
push
mov
cmp
sub
cwtl
lret
cmp
mov
inc
mov
sub
xlat
and
dec
inc
push
pop
orb
das
push
jnp
mov
mov
cmp
and
and
pusha
push
pop
mov
or
sbb
push
les
xchg
dec
sbb
les
sub
in
mov
out
sbb
test
push
inc
std
and
mov
out
dec
test
or
and
dec
add
push
inc
cld
or
ficoms
sub
inc
and
cmp
les
ja
cmp
cmp
mov
and
call
xchg
call
loopne
loop
cmp
jl
add
sub
inc
pop
rolb
mov
ds
push
shrb
xchg
mov
shl
sub
jge
cli
cmp
adc
gs
jmp
jle
adc
repz
shrb
mov
jns
adc
push
push
fstp
pop
ds
jl
push
stc
cld
sub
insb
push
pop
ss
int3
push
xchg
loopne
loop
jae
dec
add
and
int3
sub
js
addb
gs
mov
sbb
xchg
add
mov
sub
shll
je
pushf
and
cli
aad
pop
or
xchg
pusha
xchg
dec
sbb
into
add
js
mov
cmp
sti
mov
int3
nop
shlb
subl
mov
sbb
lock
sbbb
dec
addb
nop
out
clc
cld
mov
lcall
pop
inc
pop
hlt
fcmovu
and
xchg
adc
loopne
add
xchg
mov
and
hlt
pop
clc
adc
fsubrs
inc
jo
in
or
xchg
in
adc
cltd
fmul
inc
test
mov
push
addb
inc
addb
mov
xchg
hlt
add
push
jne
loopne
cmp
add
cltd
inc
pop
in
jo
fistpl
pop
cmpsb
adc
test
mov
scas
inc
cmp
add
xchg
sbb
enter
adc
add
movsb
or
enter
sub
sbb
sbb
pop
dec
call
mov
mov
and
cmc
cld
push
call
std
or
sbb
add
scas
mov
mov
mov
pop
push
xor
dec
xchg
rcrl
lods
hlt
add
mov
cmp
pop
mov
sbb
cld
das
stos
cld
nop
add
or
dec
negb
dec
pop
lret
cmp
or
rcrl
adc
lcall
sbb
sub
cli
sbbl
lahf
lret
fsubrl
sub
je
fdivrs
push
xchg
dec
int
insb
dec
ljmp
cld
sub
test
cs
mov
sbbb
js
mov
push
or
xorb
movsb
mov
or
inc
mov
dec
jo
rol
push
pusha
jmp
or
mov
pop
or
add
mov
xor
push
nop
or
xorl
and
addr16
pusha
or
mov
or
cs
pcmpgtb
fdivl
pop
das
xchg
test
shrb
xor
xchg
pop
add
lea
cmp
jne
les
mov
aam
test
adc
pop
in
or
call
dec
mov
mov
mov
test
and
aam
ds
jnp
dec
bound
lock
sbb
stos
cmp
in
inc
out
mov
sub
rcr
pop
nop
inc
jo
cmp
sbb
rcrb
mov
pop
orl
inc
mov
arpl
mov
in
fdivrs
sahf
push
pop
clc
mov
cmc
jo
ljmp
mov
je
add
je,pt
sahf
push
aam
daa
inc
cmp
sub
hlt
inc
fwait
stc
fs
xor
or
test
inc
push
sub
jbe
push
pushf
lock
sub
jl
xchg
mov
mov
xchg
cmpsl
mov
sahf
ss
and
add
jl
add
or
and
rorl
cmp
xchg
fistpl
fcomps
jecxz
or
or
js
aad
clc
fnstcw
mov
aam
jmp
add
iret
mov
fdivrl
ds
dec
mov
rcr
push
mov
inc
cmp
cmp
mov
adc
cwtl
push
jmp
js
dec
fdivrl
and
jnp
xorb
gs
shll
loopne
js
fistpll
pop
fs
mov
xor
pop
adc
stos
shlb
jge
in
lahf
push
sub
xchg
nop
fcomps
sti
sub
mov
fmuls
leave
fiadds
jle
leave
cmp
roll
aad
jg
pusha
xchg
call
leave
mov
lods
mov
cmp
popf
or
cld
or
icebp
idivl
mov
test
pop
add
sarb
pop
inc
rcrb
insb
outsl
xchg
aam
in
scas
or
pop
das
rcrl
and
pop
cmp
add
mov
int3
jmp
lret
inc
xor
dec
leave
pop
add
fnstcw
jge
dec
sahf
mov
shll
fwait
cld
das
repz
adcl
call
in
loopne
mov
push
jns
aam
aas
icebp
dec
push
mov
xor
ds
popf
movsb
xor
pushf
cwtl
andl
cld
jae
in
xor
shr
ljmp
aam
push
fcompl
and
rcrb
mov
aaa
pop
xor
jg
inc
lret
cltd
rorl
adc
sbb
insb
fbstp
and
mov
inc
fldcw
in
inc
popf
jl
add
push
sbb
xchg
int3
addl
sahf
mov
das
adc
add
or
and
data16
jae
or
je
add
shr
add
cmp
cmp
or
mov
adc
pop
les
std
nop
add
aam
mov
js
outsb
aas
mov
lcall
scas
and
popa
clc
loopne
incl
jae
mov
mov
pop
adc
rolb
test
xchg
cli
sbb
pop
test
and
insb
fwait
cmp
cld
or
xorb
add
inc
shlb
lea
add
hlt
xor
sbb
sbb
rolb
or
mov
jo
and
xchg
push
add
or
les
or
cs
outsl
or
dec
sub
js
test
pushf
adc
movsb
add
xor
inc
mov
pop
ds
push
push
pop
shlb
ficoms
sbb
push
mov
sar
mov
add
rcl
je
fists
mov
int3
and
imul
test
adc
mov
add
repnz
sbbb
in
sbb
dec
cmp
enter
mov
das
mov
add
out
test
mov
les
stos
cmp
aam
push
popa
jmp
das
test
test
and
adc
jp
adc
into
pop
adc
std
pushf
ret
push
int
lods
fistps
mov
test
fsts
and
xchg
in
leave
jle
test
and
fmuls
aam
adc
add
insb
inc
mov
popf
dec
add
inc
cltd
xor
dec
or
pop
jecxz
adc
data16
ds
neg
mov
mov
mov
lock
push
test
iret
jecxz
mov
mov
mov
and
add
imul
add
insb
jbe
test
and
dec
lcall
xor
mov
rcrb
mov
and
push
leave
pop
int3
test
mov
out
or
lock
dec
cs
add
cmp
pop
add
imul
sub
shlb
ss
or
cs
cltd
jmp
insb
dec
sbb
jl
incb
lahf
rclb
pop
xor
pop
vcmpps
pop
and
lock
push
sbb
mov
sbb
inc
test
or
mov
sub
pushf
dec
inc
es
cmp
or
mov
les
mov
sub
push
js
dec
and
fsubl
aaa
jbe
mov
add
in
mov
jle
inc
test
pushf
xchg
fwait
scas
aas
lock
stos
adc
stos
fists
and
push
push
ret
push
pop
pop
push
sub
es
add
ja
mov
sub
sub
add
gs
adc
and
pop
fdivrl
stos
sub
inc
pop
sbb
jbe
inc
ljmp
dec
or
add
cmp
sub
mov
cmpsl
test
insl
push
mov
psubsb
cmp
or
and
sub
mov
sub
pop
mov
movsl
fisubrs
hlt
mov
std
cmp
add
mov
packssdw
and
hlt
or
das
dec
cmp
push
sbb
mov
loopne
cmp
int3
xor
mov
pop
or
bound
adc
ds
aas
mov
xor
xchg
icebp
test
mov
ds
adc
push
fsubs
clc
hlt
dec
xor
mov
sbb
clc
ja
cwtl
and
jne
xchg
add
or
mov
adc
mov
jno
iret
push
pop
ds
mov
addr16
push
in
inc
clc
sub
mov
mov
add
or
js
std
jecxz
dec
mov
dec
or
lds
pop
mov
mov
and
lea
test
and
dec
sub
sub
out
inc
movsb
test
jg
cwtl
jno
and
push
push
dec
sub
cld
pop
and
xchg
add
imul
and
cmc
test
outsb
mov
pop
mov
push
adc
sub
inc
or
iret
sub
xor
hlt
pusha
loopne
mov
call
fcoml
xor
or
cmp
cmp
leave
pop
rorb
int3
pushf
das
test
jmp
inc
out
inc
sub
shll
movsb
pusha
sub
scas
aam
cmp
mov
aas
lock
lcallw
hlt
add
push
add
and
cld
dec
xor
fs
adc
mov
scas
aas
clc
js
push
fistpl
sub
and
jmp
sbb
xchg
mov
mov
ror
mov
adc
xchg
les
push
enter
xchg
lods
pop
loopne
mov
shlb
test
xchg
sarb
les
mov
mov
insb
push
sahf
mov
xchg
adc
add
dec
cs
fisubl
add
xchg
stc
inc
sbb
cmp
cmp
cmp
cmpsb
nop
sbb
pop
pop
push
cs
lret
mov
add
test
popf
dec
push
hlt
cmpsb
or
or
add
or
iret
push
mov
jmp
dec
dec
lods
pop
mov
xlat
xor
jne
mov
mov
and
push
cmp
dec
push
mov
dec
in
add
jno
mov
jecxz
ds
ja
push
add
rorb
jnp
add
out
jnp
enter
or
pop
jo
push
lods
adc
insb
mov
pop
add
lret
fimuls
push
cmp
fcoms
es
mov
xor
cwtl
hlt
add
mov
dec
mov
and
cmp
das
sbb
insb
lock
ret
mov
scas
cwtl
sub
lret
outsl
jmp
mov
mov
jne
int3
movsb
xchg
pop
inc
sbb
icebp
sbb
sbb
arpl
add
cmp
dec
adc
clc
call
call
enter
call
mov
cmp
clc
add
pop
shll
out
fcoml
add
mov
push
or
mov
dec
xor
pop
js
sub
fs
mov
dec
push
rolb
pop
xlat
orb
mov
add
stos
sub
fwait
mov
jl
lret
ja
or
stos
jg
pop
mov
or
sub
cmp
loope
das
jecxz
test
call
loopne
ss
in
ficompl
mov
xor
out
in
sti
cmp
mov
xchg
out
mov
hlt
ljmp
inc
cmp
inc
add
sub
or
test
jb
xor
push
push
pushf
fldl
and
or
cmp
scas
push
je
jmp
sbb
fisubrl
rcrb
inc
hlt
stos
mov
mov
add
cmp
call
clc
xchg
mov
ret
dec
clc
rcrb
sbb
jmp
lcall
push
inc
int3
bound
jne
pop
dec
jg
xor
cmp
cmpsb
pop
push
movsl
cmp
pushf
movsl
sbb
xchg
xor
int3
jbe
xchg
xor
jo
xor
mov
aam
dec
fwait
ja
dec
leave
movsb
clc
pushf
dec
jp
scas
out
nop
sub
call
cld
and
cmp
jmp
mov
mov
inc
sbb
push
cmp
shrb
cmp
jecxz
js
pop
xrelease
inc
shll
and
push
rcrl
sbb
arpl
mov
ss
cmpb
call
ja
in
push
adc
call
lock
addl
cmp
or
mov
cmp
push
stos
call
xor
jecxz
pop
mov
in
or
jne
mov
xchg
pushf
add
adc
out
inc
sbb
sbb
push
mov
sbb
inc
jmp
mov
lea
push
xchg
in
loop
cmp
movsb
test
xor
test
cwtl
add
daa
mov
or
add
mov
mov
mov
mov
mulps
notl
and
sbb
pop
push
push
sbb
adc
mov
subb
xlat
or
jge
sbb
pop
popf
repz
addb
sub
jb
lds
or
jae
jp
gs
sbb
adc
cmp
pop
push
add
pop
mov
or
aaa
mov
fcom
adc
dec
fstps
dec
outsl
in
or
jae
or
dec
ljmp
clc
pushf
inc
sbb
inc
xchg
sbb
test
inc
sub
sub
mov
cli
sub
or
movsl
sbb
sar
divl
and
push
or
adc
pop
or
adc
loopne
inc
cmp
mov
in
pop
cld
adc
divb
sarb
push
in
fdivrs
fwait
sub
or
and
in
xor
sbb
mov
aad
in
test
inc
arpl
sub
out
and
jno
adc
sub
mov
call
dec
sub
jns
je
pop
inc
lods
pop
xchg
push
adc
dec
mov
mov
adc
clc
mov
movsb
idivl
xor
pop
test
pop
and
sbb
dec
and
mov
or
fidivrl
rcrb
adc
xor
adc
lret
andl
into
les
dec
out
lahf
les
sti
jmp
pushf
jae
cmp
mov
out
cs
dec
and
sub
cmpsl
leave
adc
add
and
cld
xchg
or
jbe
push
ss
aam
dec
fwait
xor
dec
js
clc
push
or
cs
mov
xchg
pop
clc
scas
add
pushf
push
dec
cmp
pop
sub
mov
movsl
fists
xlat
cmp
pop
xor
cltd
pop
js
mov
or
das
call
cltd
add
inc
adc
add
and
inc
adc
xchg
fbstp
lods
add
popf
sub
test
adc
pop
xchg
adc
xor
cmp
mov
pushf
into
or
add
dec
cld
movsb
mov
es
add
cld
mov
cld
loope
sub
pop
shlb
call
mov
dec
cli
lcall
popa
sbb
adc
jecxz
je
xor
push
jbe
inc
loop
inc
dec
dec
mov
pop
and
je
add
jp
pop
sbb
add
cmc
mov
sub
pushf
or
loop
adc
push
test
or
mov
lock
int
cmp
cli
cltd
call
xor
adc
or
mov
adc
and
dec
sbb
test
cmp
xor
inc
test
faddl
push
shlb
shlb
jo
mov
pop
jnp
call
pushf
adc
pop
nop
adc
fs
fs
xor
inc
push
scas
das
sub
call
sub
sub
test
xchg
loope
mov
loope
imul
pop
adc
clc
jl
inc
push
sub
and
sti
int3
lods
ja
nop
or
pusha
nop
push
push
cmp
mov
add
lea
mov
xor
mov
pop
in
inc
cmp
mov
das
aas
out
adc
or
call
xchg
pop
loopne
cmc
insb
mov
aam
sub
adcb
pop
rorb
imul
push
imul
stc
adc
sub
orb
clc
imul
add
shlb
xchg
adcb
int3
inc
leave
mov
inc
mov
into
dec
lret
test
push
pop
test
scas
fisubrs
dec
xchg
and
cld
inc
or
inc
and
mov
lods
sbb
mov
notrack
add
jno
mov
jae
daa
adc
sbb
cld
xchg
scas
sub
or
sub
dec
pop
xchg
sahf
das
cmp
rorl
mov
rcrb
inc
jae
shrd
arpl
mov
inc
jo
pop
call
pushf
rorb
fwait
in
call
les
popf
adc
ljmp
les
popf
call
dec
pop
or
push
fcoml
mov
push
jo
call
mov
clc
push
dec
pushw
les
xchg
dec
nop
xor
xor
add
test
cmp
dec
icebp
mov
jmp
add
les
mov
or
dec
in
addl
testl
xchg
pop
movsl
cli
sub
xchg
jo
inc
mov
xchg
mov
imul
adc
cmp
test
push
fsubp
mov
pop
das
jno
xor
aam
xchg
arpl
scas
leave
rcl
jne
or
insl
adc
in
out
pop
fmuls
pushl
xchg
or
xor
scas
push
inc
clc
or
mov
std
mov
mov
lahf
cmp
pop
or
cmp
push
les
pusha
rcrl
add
stos
out
mov
jo
testb
dec
and
lea
pop
push
mov
loop
mov
pop
das
dec
cmp
fdivrs
add
pop
addl
or
mov
dec
mov
fs
pop
out
dec
fisttps
sti
dec
push
daa
dec
les
cmp
pushf
movsl
and
int3
dec
cmp
ds
mov
sti
xor
jmp
and
or
mov
xchg
mov
xchg
or
fcomps
add
pop
fdivrl
daa
or
mov
fidivl
cltd
ss
test
xor
add
lea
repnz
andb
int
or
incl
sbb
daa
mov
inc
mov
adc
orb
and
mov
fstps
sub
andb
inc
sbb
mov
fnstsw
addb
es
dec
hlt
or
cmp
dec
sarb
incb
aas
push
inc
cmpsb
mov
jecxz
inc
outsl
and
xchg
mov
fisttps
mov
fstps
stc
outsb
es
jl
add
push
add
push
jno
or
mov
cs
loopne
fistpl
mov
dec
jo
mov
xchg
icebp
and
dec
stos
js
adc
fisttps
sti
xor
adc
rorb
mov
lods
dec
add
push
and
adc
mov
clc
clc
leave
lds
xchg
pop
mov
push
es
lock
mov
or
andl
mov
ret
lock
add
daa
aad
ss
sub
fsts
xor
es
and
movsl
mov
mov
adc
dec
pushf
push
ss
pusha
cmp
xor
add
lret
shll
sbb
aaa
xchg
out
and
lret
in
xchg
sub
mov
nop
psllw
sub
sub
adc
add
mov
orb
rorl
sbbb
pop
mov
xchg
inc
xor
or
ror
call
mov
push
mov
daa
test
push
xor
xchg
push
add
loope
mov
cmc
inc
cwtl
mov
pop
push
mov
push
shlb
int3
subb
cmp
dec
loopne
sbb
mov
mov
test
mov
ss
jo
pop
aaa
mov
sbb
scas
insb
push
out
mov
lds
sub
sub
dec
imul
lods
push
mov
pop
xor
pop
and
mov
mov
and
sarb
mov
sbb
call
andb
movsl
jl
add
insl
cmp
or
xor
in
cmovg
and
mov
in
fstps
xor
scas
call
mov
dec
inc
mov
lock
es
dec
inc
xor
adc
rolb
filds
push
jmp
cmp
lea
adc
gs
push
and
inc
cmp
sub
js
or
adc
pop
add
jo
pop
or
sti
ret
xchg
add
in
xor
nop
rcrl
dec
divb
inc
dec
adc
pop
xor
cli
out
imul
add
flds
out
es
inc
cmp
ds
mov
mov
scas
inc
or
xchg
xor
cmp
sarb
add
movsb
sbb
and
fnstcw
cs
adc
cld
loopne
ja
xor
mov
mov
push
fwait
or
cmpsb
jl
inc
mov
mov
pop
and
xchg
fbstp
add
and
sti
pop
inc
add
std
push
cmp
bound
pop
or
and
comiss
pop
negb
or
cltd
or
mov
xchg
jmp
rcl
pop
or
rolb
sbb
loopne
add
xchg
inc
inc
add
fisttps
enter
mov
add
imul
jno
pop
or
adc
cmp
ja
pop
clc
or
cmpl
push
jno
inc
xchg
xchg
cmc
cmp
punpckhdq
movsb
sar
pop
aas
sahf
test
into
pop
scas
mov
mov
sbbl
ja
decl
push
sub
push
hlt
int
add
xor
adc
loopne
lret
jne
mov
cwtl
insb
xchg
dec
rorb
jae
lahf
cmpsl
fistpl
pop
jle
pop
das
das
sti
mov
ja
sbbb
mov
add
lret
shll
pop
fnstsw
push
xor
jmp
testb
stc
ds
call
or
adc
fwait
pop
adc
ja
add
dec
cmp
pushf
ja
sbb
clc
mov
push
mov
push
pop
sti
mov
or
mov
dec
pcmpeqw
or
add
or
jmp
xor
push
aam
call
aas
cmpsl
pushf
cmovle
or
xchg
add
decb
or
xchg
jmp
repnz
ret
dec
mov
or
pusha
push
paddd
ja
cmp
or
ljmp
test
dec
inc
mov
imul
in
sahf
mov
inc
leave
orb
or
inc
or
cmp
add
pop
and
pop
jle
cmp
cltd
add
pop
xor
fdivp
int3
dec
stos
cmp
leave
adc
adc
or
hlt
adc
lds
hlt
and
ret
mov
cwtl
add
in
xor
repnz
je
mov
popf
cmp
mov
sahf
in
add
jg
int3
dec
sub
dec
sti
cwtl
insb
setne
add
insb
lret
push
loopne
lods
and
out
xchg
roll
lds
cmp
cld
mov
or
jne
xchg
and
test
inc
inc
mov
adc
lods
in
sub
xlat
jb
movsl
mov
add
insl
xor
xchg
sub
mov
sub
aam
pop
push
add
cmp
ret
xchg
push
pop
push
cld
in
push
cmp
lods
rorb
aam
ljmp
pusha
mov
jle
lock
inc
mov
movsl
aas
cmp
ror
push
add
adc
ret
add
ret
pop
int3
dec
cld
in
adc
pop
rorb
add
lods
add
adc
inc
jmp
imul
lret
push
cmp
mov
inc
mov
add
nop
call
add
bound
addr16
ljmp
sub
adc
cmp
xor
sbb
je
or
test
xchg
jl
or
test
xor
punpcklbw
xor
ds
nop
push
in
sbb
cmp
js
leave
prefetchnta
cs
mov
imul
loopne
shlb
fs
adc
jmp
jl
ret
js
mov
add
adc
sbb
dec
cmp
ljmp
cmp
jg
inc
inc
loopne
shrb
pop
clc
add
int3
and
or
fnstcw
imul
lcall
xor
mov
dec
inc
push
lcall
mov
mov
ja
cmovle
or
jl
lcall
or
cmp
mov
xchg
add
mov
or
sti
and
int
inc
dec
pusha
inc
pop
xorl
jle
fs
mov
cmp
add
xor
push
sti
je
pop
cwtl
and
mov
pusha
cmp
inc
shll
cmp
cmp
mov
fadd
jl
mov
mov
add
or
fadds
ds
adc
and
idivl
or
dec
push
cld
cmp
nop
dec
mov
and
es
add
xor
std
xor
dec
and
adc
lods
push
js
pop
fcmovne
scas
shl
and
and
leave
adc
fmuls
add
cmpsb
and
or
pushf
dec
fisubs
lods
pushf
dec
hlt
je
adc
mov
mov
in
mov
xor
fwait
pop
mov
lods
hlt
add
jecxz
sarb
mov
mov
add
mov
test
in
jno
mov
sahf
adcb
adc
ss
and
fimuls
lea
push
sahf
into
mov
clc
pushf
push
in
xchg
sbb
xchg
ja
mov
insb
cmp
adc
outsb
in
add
or
xchg
pop
cwtl
add
pop
mov
lea
aas
sbb
daa
dec
jo
push
jns
mov
addb
sub
fidivs
jne
push
sti
sti
aam
inc
cmp
push
mov
loope
aam
or
add
sbbl
icebp
mov
and
sbb
std
mov
imul
syscall
mov
mov
clc
jge
mov
lahf
and
imul
loopne
dec
push
scas
add
loope
and
inc
dec
sbb
sar
mov
ret
dec
sbb
clc
lahf
fs
loope
xchg
push
xor
and
sarb
xchg
mov
outsl
fstpt
or
clc
adc
jge
movsb
dec
and
ja
popa
mov
mov
jmp
mov
cld
pop
add
mov
adc
js
lret
scas
add
aam
inc
cmpb
and
fcomps
sub
adc
inc
adcb
imul
mov
sbbb
aas
stos
mov
js
cmp
frstor
lret
sub
mov
sbb
nop
and
push
inc
dec
xorl
jecxz
pop
test
mov
mov
dec
lcall
popa
push
fidivrs
mov
sbb
adc
pop
iret
xchg
adc
insl
mov
inc
mov
ds
rcrb
or
or
pop
or
sub
int3
cltd
adc
aaa
pop
cmp
pop
call
mov
adc
jno
dec
fidivl
mov
cmp
push
lock
scas
or
enter
nop
pop
adcb
add
xchg
movsbl
jecxz
jo
es
std
mov
loopne
cwtl
inc
push
add
test
dec
out
aam
popf
je
mov
jl
dec
lret
enter
fldenv
push
out
mov
pusha
test
jmp
stos
xlat
adc
mov
ss
or
or
add
jecxz
fmull
in
add
hlt
push
or
dec
movsb
mov
add
mov
push
sti
pushf
and
jge
call
jl
push
aad
dec
cld
push
ja
enter
mov
xorb
pop
iret
shlb
pushf
sbb
rcl
push
outsb
popf
xchg
cs
iret
xchg
cmp
clc
adc
dec
adc
add
pusha
les
mov
push
test
outsl
loope
xchg
dec
icebp
add
out
mov
leave
pop
cs
rcrl
pop
rcrb
mov
cmp
pushf
mull
cmp
insb
sbb
dec
int3
adc
les
or
fldt
adc
test
std
and
push
pop
out
shrb
pop
mov
sti
movsb
cld
mov
rclb
dec
or
mov
push
mov
add
push
lcall
cld
dec
call
fldl
ret
inc
inc
sti
and
andl
push
mov
push
nop
or
cs
push
jno
or
incl
call
sbb
adc
or
inc
ljmp
loopne
adc
subb
mov
jo
sbb
pushf
int3
pop
sub
mov
pop
dec
or
cwtl
cwtl
mov
stos
je
leave
xchg
or
imul
rcrb
adc
pop
test
inc
sbb
loop
mov
or
inc
mov
les
push
sub
lcall
fistpl
test
sbbb
push
cmp
mov
and
dec
jno
jle
call
addb
fsubl
sbb
mov
mov
mov
and
nop
push
pop
sub
fldt
hlt
sub
push
out
lock
jg
pop
add
and
leave
push
fidivs
fsubl
jg
dec
and
lods
lods
sub
cmp
fucomi
xchg
xchg
add
mov
and
test
loop
rcrb
fdivrs
inc
nop
lahf
jb
lahf
jnp
nop
push
add
adc
pop
mov
inc
scas
and
pop
cld
sarb
mov
add
xchg
les
fadds
repz
je
xchg
jmp
push
adc
xor
lods
push
lods
and
inc
fistl
outsb
mov
pop
bound
dec
xor
mov
dec
mov
dec
movsl
lds
std
pop
mov
sub
out
stc
push
out
fmuls
lods
xor
js
xor
mov
xchg
sub
or
xor
push
pop
out
push
fcompl
sub
push
and
and
fbld
or
cld
add
shll
cs
add
jmp
adc
lods
and
into
pop
pop
lods
inc
lods
in
or
in
xchg
sub
sub
or
add
in
jmp
push
jne
mov
popf
add
iret
fbld
sub
je
rcl
icebp
or
cmc
and
lds
mov
or
push
pushf
test
fsubs
and
data16
add
push
and
popf
mov
sti
cwtl
lock
mov
mov
mov
daa
lret
inc
mov
dec
call
or
add
sub
dec
or
shlb
pushf
mov
push
pop
mov
inc
mov
test
outsb
mov
jne
fsub
ror
test
cmp
sbb
lods
aam
bound
xor
insl
pop
cmp
xor
push
jnp
cld
les
clc
and
stc
inc
xchg
sbb
sbb
dec
and
popf
xchg
dec
icebp
mov
xor
push
pusha
in
add
adc
fwait
add
and
outsl
xor
cmp
dec
mov
mov
lret
jge
nop
adc
dec
in
or
pusha
and
bound
fadd
mov
aad
or
ds
cli
mov
sbbb
pop
mov
fildl
stc
or
sub
shll
das
mov
jo
test
push
dec
nop
js
and
rcll
mov
mov
sahf
inc
push
ss
mov
lods
sbb
xorb
dec
in
add
or
mov
pushf
add
insb
xchg
aad
outsl
sarb
pop
ss
subb
pop
mov
ds
sbb
jb
enter
pop
mov
ja
sbb
sahf
adc
mov
sub
mov
mov
imul
je
ljmp
xchg
and
or
lock
stos
mov
push
aaa
popf
mov
push
push
es
add
pop
andb
aas
out
cli
jle
loopne
sbb
out
inc
add
sub
and
xor
cmp
pop
xor
add
mov
hlt
rolb
and
mov
add
xchg
fcomps
popa
sub
in
adc
sub
pop
jne
xchg
pop
xor
push
rcll
mov
jo
mov
mov
mov
or
outsl
inc
push
pop
or
inc
or
or
xor
loopne
mov
cwtl
js
cmpsb
pusha
fistl
push
ret
add
stos
enter
negb
inc
rclb
xor
addb
mov
cmp
dec
in
fs
pop
xor
rcrl
and
adc
add
xchg
or
fwait
pop
cld
out
mov
stos
mov
cmp
mov
std
mov
test
vorps
sbb
dec
mov
adc
adc
scas
fimull
push
dec
es
cltd
scas
jo
add
or
jo
enter
jno
xchg
jl
lret
cmc
gs
mov
call
pop
push
imul
xchg
jp
icebp
scas
mov
and
push
mov
xor
push
loopne
push
sub
lcall
lods
jno
pusha
or
push
lcall
leave
push
test
fwait
or
cs
rorl
pop
pop
sub
cmove
sub
insb
xlat
inc
in
pop
or
sub
add
or
loopne
jmp
lds
or
pop
mov
inc
fists
imul
jle
imul
pushf
pop
pop
push
in
out
mov
hlt
add
fmuls
mov
or
push
outsb
shlb
jo
mov
ss
call
pop
adcb
jae
scas
jbe
adc
je
mov
pop
xchg
sub
fs
leave
icebp
pusha
pop
mov
or
les
sbb
mov
push
dec
les
pop
adc
jne
fmull
fucomip
pop
cld
lods
lock
lret
addb
fdivl
icebp
mov
cmp
and
xor
or
test
aas
sub
icebp
notl
mov
lret
rolb
pusha
add
int3
rclb
jb
sub
mov
adc
mov
je
fsubrl
push
jne
sub
push
mov
stc
push
mov
scas
mov
push
icebp
and
mov
scas
les
cs
test
adcb
pop
scas
iret
mov
mov
mov
and
mov
and
push
sbb
lahf
xchg
inc
sub
test
sar
out
mov
push
mov
pushl
movsb
hlt
adc
decb
pushf
adc
inc
cmp
hlt
xchg
and
or
dec
dec
add
push
daa
lock
push
pop
pop
insb
inc
dec
sub
mov
dec
or
adc
cmp
inc
add
xor
inc
clc
pop
pushf
fimuls
aad
mov
test
or
hlt
inc
fcompl
cs
out
lock
scas
or
sub
mov
call
dec
or
xor
or
aam
nop
xorl
push
pusha
jl
enter
cmp
lods
cmp
iret
push
xor
adc
and
loopne
es
adc
jno
adc
ds
cmp
call
cwtl
les
add
aam
sbb
repz
adc
sbbb
stc
mov
enter
jns
ds
fdivrs
pop
add
int3
addl
test
add
cmp
add
cmp
data16
and
adc
jae
inc
fs
sbb
sbb
inc
aam
fcoms
shr
popf
clc
hlt
dec
call
cmp
fsubrs
dec
imul
js
dec
scas
test
pop
push
lahf
lock
dec
cmp
mov
test
sub
cmpsb
adc
orb
add
addb
inc
or
jo
inc
jle
push
inc
fsubrs
cmp
pcmpgtd
xchg
nop
cmp
loopne
mov
mov
push
and
mov
or
in
push
je
lock
add
add
mov
mov
mov
push
mov
in
add
ret
add
stc
push
ret
pushf
pop
lret
or
mov
jmp
pusha
fs
adc
orb
enter
add
imul
jne
add
sbb
and
adc
inc
pusha
add
mov
sbb
cs
and
adc
cs
pop
test
jl
cmc
xchg
dec
mov
sbb
push
or
icebp
push
mov
pushf
mov
mov
or
call
sarl
jp
inc
ljmp
inc
sub
rolb
pop
push
fsubrl
or
cmp
orl
mov
inc
push
xor
push
lahf
data16
fyl2x
insl
inc
mov
sbb
cltd
xor
pop
test
js
pop
rorb
fs
addb
ret
orb
cmp
pop
nop
pop
push
adc
xlat
repnz
lea
nop
add
stc
dec
inc
js
mov
mov
mov
add
pop
ds
xor
out
cmpsb
adcl
lea
inc
test
sbb
jg
or
inc
mov
or
rcrb
lret
icebp
pusha
test
andl
adc
inc
push
adc
sub
into
inc
subl
nop
sbb
sbb
outsl
testl
or
fistpll
add
adc
ret
fcomps
jb
mov
in
jmp
fcoml
pop
push
enter
pushf
stos
mov
pop
cmp
adc
xor
aas
imul
adc
dec
adc
add
jl
std
sahf
adc
fistpll
inc
xor
hlt
mov
ss
or
clc
cli
in
je
sbb
sub
sub
imul
cwtl
add
or
decb
data16
test
das
out
dec
jge
je
inc
mov
insb
stos
shrl
daa
mov
add
sbb
test
lea
popf
ljmp
in
xor
cmpsl
pushf
mov
mov
add
loope
mov
jmp
mov
negb
add
add
fcoml
mov
jecxz
mov
or
scas
mov
inc
pop
lds
xchg
mov
pushf
mov
pusha
dec
cli
and
dec
cmp
aam
mov
imull
test
notb
sub
dec
in
sub
call
xor
les
cmp
ja
lock
pop
call
loopne
sub
adc
push
xchg
dec
cld
les
fcomp
out
stos
je
cwtl
mov
push
inc
lods
rcrl
ret
pushf
in
push
sub
scas
mov
stos
nop
xor
outsb
call
ret
inc
pusha
lods
sbb
pop
xor
repz
push
jno
sbb
stos
sub
xor
pushf
or
ja
fistpll
dec
cltd
adc
imul
pop
testl
pusha
adc
add
das
adc
pop
dec
jmp
adc
and
aaa
dec
and
add
push
test
add
leave
dec
aam
test
jb
mov
sbb
dec
es
sahf
cmp
stc
lods
push
in
add
lcall
insb
sti
xchg
adc
push
pop
fcoms
loopne
inc
and
cli
divl
pop
mov
imul
int
mov
jg
mov
fldcw
out
lret
or
loop
pop
inc
cld
sub
in
adc
cmp
out
push
stos
in
test
pop
or
loop
pop
lock
xchg
cmp
pop
orb
adc
rolb
addb
and
jl
fsubrs
enter
lock
xor
hlt
xchg
cmpsl
xchg
dec
mov
mov
xchg
mov
rcr
xor
adc
mov
ds
push
cld
cltd
clc
add
divps
shlb
outsb
or
mov
jmp
mov
mov
add
sub
add
cli
sub
lcall
sarb
ficoms
pop
mov
clc
sbb
cmp
dec
mov
mov
adc
daa
hlt
in
adc
add
sbb
mov
je
add
cmp
ljmp
pop
sbb
call
xor
and
push
or
fst
clc
pop
mov
jl
aas
loop
sub
xor
enter
push
sub
xor
dec
lods
stc
fs
repnz
mov
push
imul
rclb
nop
loop
lahf
and
and
push
or
in
dec
pop
test
or
lock
push
js
xor
fdivr
ror
push
pop
pusha
mov
mov
dec
xchg
xchg
clc
pop
sub
fs
cmp
sbb
mov
insb
jns
outsb
aas
pushf
add
mov
pop
repnz
lock
mov
call
stc
sub
loop
adc
or
clc
add
push
inc
outsb
jl
mov
push
shr
mov
dec
sarl
adc
faddl
addb
sub
fwait
jmp
jl
je
outsb
xor
xor
ds
push
xor
icebp
xor
fidivrl
dec
adc
adc
mov
arpl
inc
icebp
enter
rorb
stos
test
xor
cmp
out
sbb
and
hlt
inc
in
inc
xor
cmp
inc
clc
and
inc
inc
rclb
add
dec
call
pop
imul
pop
sbb
mov
icebp
mov
dec
sti
or
and
enter
and
test
mov
pop
pop
sub
int3
loope
lea
jmp
mov
in
decl
push
in
cwtl
mov
pusha
movsb
mov
mov
and
cmp
jo
mov
nop
mov
dec
std
xor
es
lcall
ss
mov
and
out
lret
in
mov
inc
inc
in
outsb
jecxz
cmpsl
ret
andl
mov
lods
push
inc
push
adc
movsb
repnz
enter
push
add
push
ss
pop
lods
cmpsl
jmp
push
jle
enter
mov
sahf
adc
cmp
jle
in
push
add
clc
nop
jne
jge
nop
inc
popf
sbb
lods
inc
into
or
fstl
dec
add
lret
adc
adc
dec
daa
dec
xchg
repnz
sub
dec
pop
sub
std
mov
sbb
lock
shll
or
sub
jle
lock
call
pop
lahf
mov
rcrb
adc
ja
xchg
add
xchg
sub
aaa
int
xor
cmp
mov
clc
jle
cli
inc
add
push
addl
sbb
mov
add
and
sub
push
sahf
negl
or
addl
mov
pop
das
pop
clc
jo
mov
test
adc
fcompl
movsb
enter
clc
dec
xor
jmp
jge
add
cmp
xchg
mov
sti
mov
andb
cwtl
or
mov
in
and
mov
test
call
or
mov
add
rorb
mov
adcb
push
mov
push
adc
lea
je
adcb
jmp
cmpsb
pushf
mov
mov
aad
jb
mov
xor
xor
test
stos
nop
pusha
mov
dec
xchg
inc
sbb
mov
leave
outsb
add
shr
cmp
push
pusha
push
cmc
or
pop
mov
enter
movsb
jo
or
testb
sbb
or
adc
xchg
and
fldenv
adc
adc
nop
inc
mov
add
movsb
loopne
nop
mov
mov
test
dec
mov
sub
fcomps
pop
test
add
add
test
add
cmc
subb
jmp
in
mov
pop
ss
mov
mov
sub
and
nop
xchg
stos
or
das
push
mov
je
mov
add
shl
scas
pop
mov
xor
xor
pusha
adc
xchg
add
clc
test
imul
rorb
pop
mov
cmpsl
and
sti
fstp
push
cwtl
hlt
nop
xor
pop
dec
adc
testl
rcrb
cmp
inc
xchg
daa
push
or
leave
adc
sbb
clc
add
pusha
cmpsb
jo
mov
faddl
outsl
pop
or
ja
sbb
xor
add
mov
mov
lods
sti
faddl
movsb
sub
adc
cmpsl
mov
mov
inc
mov
push
clc
pusha
or
add
pusha
call
fadd
mov
xchg
orb
mov
xor
and
pusha
inc
lds
jne
add
cltd
vcvtsi2ss
add
ret
inc
adcb
inc
dec
les
adc
loopne
xlat
sbb
sbb
pop
or
insb
xorb
adc
ss
sbb
and
jo
imul
push
xchg
mov
jo
mov
sbb
push
in
sub
mov
mov
pop
mov
popa
xchg
repnz
xor
loopne
jne
sbb
ljmp
orb
orl
add
dec
mov
repnz
lcall
and
mov
or
dec
inc
push
sub
rorb
ds
fcomps
mov
push
or
lods
nop
lahf
fisubrl
mov
add
rol
mov
sub
rcr
push
mov
xor
outsl
mov
jmp
ret
add
in
sub
or
push
pop
incb
and
push
xchg
dec
sbb
xor
fists
adc
shlb
mov
xchg
mov
loop
or
mov
and
and
push
inc
pop
xchg
adc
and
ds
into
xor
and
add
sub
insb
faddl
pop
mov
adc
popf
mov
sub
add
jmp
cmpb
pop
or
insl
loopne
mov
rclb
dec
jo
orl
rcll
dec
mov
pop
aam
push
jmp
pop
cmp
push
add
dec
jo
sbbb
and
cs
les
mov
jo
add
and
rorb
or
add
push
adc
je
mov
ret
call
xor
jecxz
aam
flds
or
sahf
fwait
cmp
adc
fcomps
inc
or
inc
or
or
fcoml
outsb
aam
mov
pop
lds
inc
insb
into
cwtl
lock
add
dec
aad
lock
ja
or
push
xor
dec
and
pause
push
adc
cwtl
leave
xor
data16
xchg
adcb
dec
mov
hlt
leave
call
sub
aas
out
andl
jo
mov
imul
rcrb
lds
call
or
dec
mov
and
sub
pop
mov
les
add
dec
aas
scas
icebp
jnp
pop
sarb
mov
dec
mov
xor
fistl
in
sbb
push
call
pop
mov
adc
jbe
je
mov
pop
hlt
insb
pop
cwtl
pushf
hlt
sub
das
mov
scas
inc
in
test
pop
xor
jecxz
inc
nop
adcb
adc
xor
pop
adc
adc
add
sarb
dec
mov
mov
sub
cmp
js
cs
xor
nop
mov
push
adc
and
sub
adc
and
push
or
push
repnz
mov
push
pusha
in
and
adc
adc
xor
sbb
and
sbb
inc
mov
into
fmull
jge
sub
lds
test
inc
cli
daa
js
mov
sbb
xor
adc
sbb
das
in
or
xchg
lcall
mov
out
mov
out
rolb
pinsrw
or
or
mov
mov
ds
in
fwait
jb
add
cwtl
pop
fdivs
mov
pop
xchg
pop
loopne
shrb
add
pop
or
or
ret
and
movsb
or
cmp
xor
out
pop
cmp
lock
aaa
call
sar
in
adc
das
loop
sarb
push
adc
repz
movsb
jns
cs
xchg
pop
xor
push
stc
insb
clc
pop
cmp
push
dec
enter
daa
out
jo
xchg
fidivrs
dec
test
add
pushf
and
mov
ds
imul
shrb
adc
sbb
sub
adcb
push
aas
popf
sub
pop
or
and
outsb
add
rorb
lods
and
sub
dec
insb
sbb
in
loopne
push
and
or
xchg
push
sbb
sbb
pop
or
and
mov
xchg
add
xchg
mov
shl
push
cmp
dec
add
shrb
add
repz
push
mov
dec
or
pop
dec
shll
sub
push
cmp
mov
push
aad
rclb
add
outsl
mov
adcl
jo
jg
mov
idivl
pop
cwtl
ud0
fs
sbb
outsl
andb
cld
jb
pop
fildl
push
in
push
lock
pop
and
inc
clc
add
pop
push
and
aam
hlt
iret
sarl
add
in
adc
fcoms
push
js
push
pusha
inc
push
jmp
jae
add
cmp
testb
mov
mov
add
xor
fldt
sub
adc
cwtl
add
mov
cld
rolb
jle
mov
cli
inc
je
and
enter
pop
mov
mov
inc
dec
cmc
sub
ljmp
mov
dec
add
andl
mov
lahf
es
ss
pop
or
and
sbb
aas
imul
dec
mov
js
inc
es
rorb
stc
and
pop
sub
sbb
fcmovbe
dec
push
xor
outsb
lret
mov
je
rclb
ret
fisubrs
push
data16
add
push
sahf
das
in
jle
cld
pop
or
dec
ds
cmp
add
stc
jo
leave
add
inc
xchg
repnz
adc
je
jmp
jo
inc
or
jns
mov
mov
inc
sub
mov
add
mov
mov
sbb
jb
or
mov
pusha
pusha
inc
adc
mov
adc
or
clc
ja
or
xor
movl
xchg
shlb
fnstenv
ds
jl
cltd
sub
push
dec
xor
int3
mov
jl
in
pop
mov
push
das
mov
jnp
jo
inc
sub
xor
shll
jo
dec
or
repnz
pusha
pushf
dec
fiadds
sub
and
movsl
and
shlb
call
popf
push
sbbb
mov
out
and
adc
adc
xchg
xchg
call
sub
fidivs
or
cwtl
add
xchg
mov
jne
sahf
xor
push
rorb
push
pop
jmp
mov
jno
nop
cmp
mov
daa
nop
movsl
jg
xor
dec
mov
lahf
leave
loopne,pt
jns
test
clc
jne
or
dec
jmp
push
lea
clc
push
lret
cmp
loopne
aas
jne
ficoms
or
es
movsb
sbb
mov
jl
jne
les
pushf
inc
ja
lock
lea
lcall
roll
movl
push
xchg
into
loope
mov
dec
or
cmc
mov
jle
sub
mov
mov
mov
jle
adc
scas
push
inc
ja
pop
call
adc
mov
mov
shrd
jg
dec
push
stos
mov
adc
dec
arpl
xchg
inc
dec
lock
js
and
scas
push
add
movsb
je
ds
jbe
or
lret
push
xor
lcall
or
pop
jle
cmc
scas
adc
scas
mov
xchg
ja
arpl
icebp
jp
mov
add
and
or
jl
mov
test
sbb
jbe
pop
les
test
loopne
mov
add
adc
hlt
push
call
mov
sbb
cwtl
test
xor
xchg
ret
mov
or
jle
dec
and
jl
dec
shlb
push
sahf
in
test
mov
xor
roll
nop
popfw
rclb
int3
dec
cltd
sbbb
mov
lods
mov
nop
add
fsin
xor
and
jo
add
addr16
pop
pop
sbb
cld
push
into
pop
mov
filds
dec
mov
cmp
dec
std
mov
movsl
dec
leave
call
or
add
nop
rclb
xchg
and
test
cmp
icebp
ret
push
xor
dec
push
mov
or
test
mov
xor
jl
sub
xchg
push
add
pop
test
aad
and
xorb
cmp
xor
push
mov
shld
ret
in
sbb
shll
test
xchg
movsb
mov
mov
enter
sarb
pop
bound
std
adc
push
push
mov
hlt
pop
adc
add
fimull
jnp
mov
xorb
push
jb
or
inc
rclb
and
loopne
pop
dec
leave
inc
insb
or
inc
add
sub
inc
leave
cs
jns
loopne
aam
xor
aas
nop
lret
iret
mov
loopne
ret
fwait
add
lret
push
cmp
enter
xor
clc
pop
and
sarb
or
mov
push
and
add
pop
ljmp
mov
fwait
cmp
xchg
adc
test
inc
mov
add
sub
clc
mov
or
insb
std
loope
fmull
lahf
daa
mov
popa
cld
dec
cmp
fs
jmp
push
or
cwtl
testb
dec
imul
mov
mov
loopne
xor
adc
jo
push
add
es
popf
xlat
adc
mov
call
adc
pop
enter
fsubl
push
mov
nop
sbb
call
jno
push
mov
cld
dec
mov
add
dec
enter
cmp
sub
ror
sub
dec
add
aad
popa
repz
add
sub
rcrb
jl,pn
cmp
xor
cwtl
fcompl
dec
push
shlb
sahf
push
call
lcall
cmp
movaps
push
fmuls
add
jmp
lock
fdivrl
xchg
cmp
test
in
mov
pop
lret
adc
movsb
inc
fsts
push
mov
loopne
xchg
popf
stc
pop
inc
pushf
push
push
inc
pusha
push
in
pop
ds
dec
fidivrs
or
push
inc
int
ss
mov
pop
jo
push
pop
dec
xor
pusha
insb
enter
adc
cmp
mov
mov
add
scas
fprem1
inc
les
loope
dec
dec
add
push
dec
rolb
mov
outsb
clc
ret
xchg
add
mov
jmp
das
pop
and
in
loope
add
cmp
cltd
mov
dec
test
outsb
call
cmp
cmp
icebp
cmp
and
icebp
xchg
push
adc
mov
pop
setb
icebp
xor
pop
jo
cmpsb
sub
cwtl
dec
inc
cmp
pop
or
mov
adc
nop
or
outsb
aad
dec
test
dec
enter
out
cmp
pop
push
mov
out
xchg
cld
mov
outsl
push
sti
xchg
xchg
sar
rorb
mov
add
cli
jle
add
sbbl
cld
shll
shll
orb
arpl
aam
outsb
cmpsb
test
add
call
fdivrs
sti
ss
stos
pop
fcoms
es
and
dec
inc
add
pushf
ficoms
addb
lock
push
inc
xchg
cwtl
cmp
inc
sub
jbe
or
jge
lea
and
stos
xor
xlat
adc
nop
adcb
and
and
and
xor
les
mov
or
push
mov
dec
xchg
fsubl
add
push
lds
data16
and
mov
adcb
movb
pop
dec
mov
push
pop
add
and
xchg
fcomps
sbb
adc
cmc
cmp
jb
das
dec
mov
or
push
mov
dec
es
jp
mov
inc
jg
insl
add
jo
repz
add
xor
xor
cmc
pop
adc
jae
sti
sahf
add
and
add
inc
paddb
sar
imul
aaa
pop
cmp
mov
loopne
imul
aaa
push
xchg
popa
dec
sbb
fs
xchg
sub
cmpsl
and
jne
cmp
dec
and
loopne
inc
pusha
or
cmp
dec
mov
mov
bound
sub
aad
adcb
jle
jns
mov
pushf
and
test
push
jmp
js
out
addb
addr16
push
cmp
sub
inc
add
or
add
add
add
jno
and
call
add
push
and
cmpl
and
xor
sbb
push
dec
fistpll
xor
or
stos
add
sub
xor
scas
and
lea
rclb
ljmp
aaa
pop
icebp
sahf
int3
inc
jle
xlat
fsts
pop
cmc
lods
add
ss
repz
jo
mov
and
dec
pusha
add
sbb
andl
test
add
repnz
xchg
add
cs
adc
js
sub
addr16
add
adc
rol
and
mov
mov
rcl
cld
stos
push
inc
adc
rolb
nop
filds
cmpsl
push
cli
lret
shl
jle
addr16
mov
adc
and
xchg
call
and
aam
out
and
add
adc
adc
and
js
in
add
in
dec
push
hlt
in
mov
sbb
rcrl
mov
xor
pop
sbb
faddl
call
inc
jo
in
pop
mov
sub
repz
enter
xorb
sbb
mov
rcl
sbb
in
pop
incl
mov
call
test
add
push
mov
mov
jg
test
rclb
cmpsb
add
mov
cmp
insl
scas
push
add
pop
push
divb
jge
xor
int3
es
enter
sbb
jle
mov
jecxz
sub
out
and
or
mov
jo
xor
push
mov
fldl
mov
ret
pop
cmp
ss
adc
mov
sub
mov
lods
hlt
cli
call
and
lds
dec
out
adc
loop
adc
inc
mov
lret
push
add
dec
ljmp
or
cmp
and
and
mov
mov
cmp
adc
movups
jns
dec
xchg
and
out
fdivrl
loopne
nopl
seto
test
mov
cmp
notl
addl
pusha
add
movsb
xchg
test
call
mov
add
lret
add
xor
ljmp
mov
call
fmuls
lods
adc
and
cmp
mov
adc
mov
mov
ds
shrb
cmp
fdivrp
xchg
dec
sub
jbe
cmp
dec
js
jg
xor
adc
lods
dec
bnd
or
pusha
and
icebp
adc
mov
push
mov
xchg
loopne
cmp
or
pop
scas
add
mov
jbe
push
sub
test
in
in
hlt
push
lret
pop
sub
add
or
mov
xor
and
dec
push
pusha
adc
sbb
jl
dec
test
dec
mov
pushf
dec
ret
or
popf
jo
imul
xchg
xchg
divb
adc
or
inc
loopne
mov
cmp
stc
add
cld
jmp
pop
push
aaa
jge
pop
cs
addb
dec
aaa
push
pop
mov
lret
sti
sbb
push
pop
or
mov
je
jbe
ss
inc
and
cmp
cmp
pop
gs
pop
and
lcall
adc
push
sbb
lock
add
add
and
mov
icebp
in
adc
mov
mov
imul
aad
jmp
mov
mov
jp
je
lods
movsb
or
adc
ret
adc
xchg
lret
push
add
inc
xchg
ds
mov
js
jno
jp
repz
mov
push
pusha
in
cwtl
mov
mov
push
data16
es
fldcw
cmp
das
xchg
jns
lock
cmp
xchg
mov
xchg
sbb
ds
inc
les
pushf
pop
push
jbe
mov
jmp
popa
mov
adc
movsl
test
fadds
inc
dec
mov
movsb
aad
add
jl
adc
inc
mov
mov
faddp
or
jp
adc
mov
std
lcall
sbb
pushf
and
lcall
dec
movsl
sub
mov
dec
mov
aam
test
adc
and
andb
mov
push
pop
sbb
xlat
icebp
aam
cwtl
outsb
mov
dec
lret
sbb
mov
xchg
jp
mov
jge
add
push
cmp
out
mov
lock
or
cld
adc
dec
sub
cmp
push
or
mov
mov
cli
adc
xor
sub
loope
mov
adc
ret
fcoml
pop
and
frstor
js
jbe
mov
mov
sti
bound
push
lret
add
pusha
repnz
imul
adc
sbb
hlt
lods
loopne
andb
or
testb
fdivl
sbb
les
push
imul
and
push
mov
mov
xchg
add
push
sbb
fdivrs
mov
add
ds
nop
xor
cwtl
shrb
jb
test
iret
repz
cmc
push
outsb
mov
imul
push
adc
sbb
push
and
mov
xchg
mov
mov
pop
in
push
cld
sahf
add
mov
sub
call
lahf
mov
add
mov
sbb
loopne
or
jnp
pop
rcrb
pop
in
call
adc
cmp
sarb
and
lods
xchg
ror
adc
fldenv
icebp
stc
sub
add
adc
js
or
jne
mov
addb
es
scas
pop
into
sbb
adc
mov
outsl
cwtl
inc
incl
cmp
dec
or
push
xor
lret
in
je
xchg
push
adc
or
les
mov
add
jle
xor
test
inc
dec
mov
mov
and
inc
add
xor
lcall
pushf
addl
push
addb
mov
mov
out
and
notl
sbb
push
dec
push
mov
add
paddb
aas
mov
jns
sub
and
xchg
enter
push
mov
push
xor
mov
negl
nop
jae
mov
fucom
subb
fcomps
push
push
jecxz
imul
in
dec
inc
adc
cmp
push
add
push
cmp
sub
enter
lahf
add
dec
test
adcb
lods
xor
out
daa
wrmsr
enter
mov
hlt
lret
sub
dec
out
push
outsl
cmp
int3
test
loop
add
and
cs
pop
pop
nop
clc
jmp
sahf
insb
or
push
inc
cmpsb
add
in
xor
xchg
sbb
add
add
aam
fnstsw
pop
fimull
stc
shl
cmp
inc
jecxz
nop
dec
push
mov
mov
mov
lock
out
inc
mov
push
sahf
inc
mov
int
ds
and
add
roll
je
sub
pushf
lock
aas
dec
add
mov
sbb
std
data16
mov
sbbb
sbb
xor
fbld
mov
mov
gs
add
mov
adc
jmp
je
stos
jns
adcb
jecxz
and
jmp
push
push
sub
fmull
icebp
or
outsb
sti
cmovs
xor
aas
mov
add
icebp
mov
das
hlt
lods
test
bound
sub
iret
and
test
sti
jns
nop
mov
sbb
popa
jno
and
jo
push
test
sbb
jo
mov
and
xchg
pop
loopne
in
mov
jmp
inc
pop
mov
or
add
add
dec
pusha
xchg
xor
push
sbb
aad
sar
ljmp
sbb
arpl
sti
cmpsl
mov
addl
popf
nop
xchg
insb
leave
fidivs
mov
hlt
js
add
pop
enter
jo
flds
mov
dec
sbbb
xor
mov
xorb
dec
scas
xor
fstpt
call
orl
aas
out
fcompl
dec
xorb
lock
mov
push
imul
mov
mov
loopne
jo
sahf
xchg
fadd
shll
ja
xor
mov
jmp
and
stos
pusha
dec
cld
popf
xchg
loopne
and
je
add
popf
dec
or
cmp
aas
leave
movl
in
mov
dec
mov
shr
xor
adcb
clc
inc
sbb
sti
fidivl
or
ja
pop
add
dec
cmp
cmp
call
sbb
or
push
inc
enter
cmp
nop
enter
jno
xchg
push
inc
cld
pop
movsl
mov
cmp
sbb
and
cwtl
es
pop
sub
add
mov
dec
in
dec
lock
add
sbb
insb
cmpsl
aad
mov
xchg
pop
imul
push
inc
xchg
inc
shlb
push
cmp
iret
divb
adc
dec
mov
mov
sbb
inc
push
repnz
or
or
and
mov
mov
hlt
mov
adc
imul
mov
cwtl
pop
push
icebp
sbb
xchg
cmp
lcall
or
and
inc
stos
mov
push
xor
imul
addl
jle
adc
xchg
daa
orb
inc
pop
or
push
jl
in
lea
inc
xchg
ret
mov
xlat
rol
sbb
inc
jge
xorb
les
sbb
pusha
ror
cli
sbb
and
cwtl
xorb
loopne
pop
call
incb
iret
repz
hlt
sarl
cmpsl
stc
mov
and
fdivs
or
xor
and
mov
js
in
jmp
cwtl
pusha
mov
and
in
sub
mov
dec
and
mov
push
sahf
or
rolb
and
pushf
add
cmc
and
stos
dec
and
call
cmp
mov
dec
int
leave
push
or
mov
xchg
call
filds
cwtl
in
popf
xchg
add
out
dec
incb
mov
cmp
add
sub
fisttps
xor
inc
movb
dec
in
sbb
xchg
xor
leave
fs
mov
xchg
inc
xor
popf
or
nop
mov
push
dec
pop
in
je
pop
in
pop
adc
xchg
push
clc
lea
test
pop
shr
call
xor
inc
or
mov
jg
insb
ffree
leave
and
shl
and
adc
pop
xchg
fldenv
test
jl
mov
loopne
loopne
mov
loopne
mov
sbb
xchg
sub
ret
xchg
adc
xchg
push
and
in
in
sbb
clc
insb
cld
cmp
mov
lock
sbb
ljmp
sbb
rcrb
inc
nop
dec
fisttpll
pop
sahf
ss
lods
scas
pop
and
mov
xor
fsubr
dec
stos
push
in
sbb
mov
std
popa
or
mov
jo
push
pushf
mov
inc
xor
pusha
or
cmp
dec
ss
xchg
jmp
jno
push
fs
pop
cmpsb
lahf
inc
or
sbb
dec
sbb
cmc
push
orb
pop
data16
stc
ds
daa
push
mov
lahf
cmc
mov
int3
decb
add
add
ds
test
inc
leave
add
mov
fistps
das
repnz
dec
inc
int3
add
cli
or
and
push
sahf
xor
cmp
fcoml
int3
sub
fs
jns
stc
xor
stos
popf
fsubrl
adc
xor
add
inc
ss
in
or
inc
xchg
andb
lods
xchg
aas
or
cmp
pushf
add
in
or
add
loopne
iret
pop
aam
jnp
out
mov
repnz
push
jo
xor
mov
jne
xor
cmp
lods
aam
popf
jns
rorl
xchg
mov
cmp
in
cmp
mov
mov
push
aas
push
inc
dec
ja
cmp
xor
inc
mov
and
add
je
mov
clc
sbb
push
mov
imul
and
cmp
pop
scas
hlt
ds
inc
fldcw
dec
jecxz
mov
addl
inc
nop
jge
dec
psubq
push
jl
mov
push
mov
mov
push
daa
and
cmpb
add
pop
dec
rorb
adc
and
movsb
aaa
ljmp
jo
adc
enter
jmp
addl
xchg
lock
cs
les
ljmp
sbb
mov
xor
stos
bound
pushf
cld
push
mov
subb
pop
pop
jo
or
push
sahf
jg
xchg
dec
test
addb
jae
xchg
cld
and
dec
in
push
js
add
sbb
leave
fiadds
push
mov
mov
inc
adc
mov
out
rolb
dec
call
nop
popf
ljmp
mov
insb
push
jle
insb
dec
push
mov
fsubrs
sbb
xlat
jmp
rolb
or
pop
cwtl
xchg
pushf
out
xor
aas
cmpsb
and
ret
mov
push
shrb
popf
dec
mov
loopne
enter
sub
mov
movsl
sub
or
scas
inc
aam
faddl
fldenv
popf
and
mov
xor
sbb
in
cmp
push
mov
push
andl
mov
lock
cmpb
or
icebp
pusha
daa
leave
xor
and
push
xor
arpl
lock
lea
jg
pushf
push
mov
subb
mov
sbbb
adc
add
cmc
or
addl
jmp
inc
leave
aaa
imul
add
nop
ret
dec
inc
out
fmuls
ljmp
lret
insb
pop
dec
outsl
js
pop
add
sti
xchg
dec
push
mov
and
mov
lods
and
dec
iret
add
jnp
imul
cmp
or
pop
mov
mov
dec
pop
movsb
daa
jle
mov
sbb
out
movsb
jp
pop
and
negl
jl
rorb
push
dec
and
cli
es
pushf
es
scas
imul
cmp
pop
add
xchg
outsl
shl
add
mov
push
push
popl
adc
cmp
rorb
dec
add
jle
jne
and
jo
and
mov
push
jo
into
sar
icebp
xchg
hlt
mov
pop
ja
add
in
out
sbb
mov
push
adc
call
mov
loopne
out
mov
aas
cs
sub
push
aam
in
mov
insb
adc
mov
push
les
mov
add
dec
cmp
adcb
pop
pop
jg
cmp
fisubrs
or
mov
push
mov
and
lock
mov
and
add
cmp
subb
out
adc
xor
je
pop
in
pmullw
add
cmp
pop
ja
jge
ss
lds
rorb
ds
sbbb
pusha
sbb
les
add
xchg
jb
add
dec
dec
add
xor
hlt
leave
pop
fwait
jns
nop
jo
jo
jno
test
mov
mov
in
out
mov
loop
jne
mov
mov
je
and
mov
add
or
clc
mov
mov
push
cmp
mov
test
inc
faddl
dec
ret
arpl
add
pushf
test
sbb
mov
mov
es
movsb
or
inc
xchg
dec
dec
add
xchg
iret
imul
es
pop
in
cmp
gs
shlb
shr
in
xor
cld
mov
xchg
in
mov
sub
or
dec
push
cmc
jne
movsb
inc
xchg
or
and
mov
mov
jo
nop
dec
sub
mov
add
mov
sti
popa
iret
add
hlt
mov
mov
add
in
orb
aam
or
call
mov
inc
test
push
sub
lret
cmp
shrb
pop
mov
pop
pop
pop
lods
bound
mov
andb
les
mov
or
fildl
mov
es
or
adc
inc
xchg
xchg
push
adc
mov
mov
ftst
or
cld
nop
int3
ret
fiaddl
not
sti
hlt
add
mov
hlt
mov
or
dec
pusha
add
fmuls
pop
mov
cmp
pop
insb
aam
or
imul
lea
cmp
insl
and
mov
popl
in
ljmp
or
add
fcompl
pop
insl
jnp
es
hlt
out
notb
aad
inc
dec
dec
adc
mov
or
or
test
jne
mov
rcr
enter
mov
or
cwtl
dec
xor
push
xor
push
cli
inc
or
repnz
pop
dec
and
ret
add
lock
dec
insb
nop
mov
mov
out
pop
cwtl
scas
jno
or
pop
rcll
adc
mov
xor
mov
mov
add
adc
es
sub
push
lret
add
or
nop
push
cltd
iret
push
mov
loop
xchg
mov
mov
xchg
lahf
push
and
sub
out
lods
cwtl
push
add
push
sbb
xor
add
xor
cmpb
addb
out
aaa
test
fnstcw
aad
xchg
sti
aas
test
in
mov
insb
sub
out
mov
rol
and
popa
mov
mov
fildll
xchg
mov
cwtl
and
hlt
mov
jg
xor
aam
jbe
xorb
test
adc
push
movsb
fmuls
add
mov
mov
out
xor
jecxz
push
addl
jb
xchg
fistl
xor
dec
mov
mov
lea
pushf
insb
cltd
dec
fucomip
xor
xor
orb
daa
mov
or
dec
xorl
adc
mov
pop
or
lock
mov
pop
push
out
add
test
shll
cs
test
lods
add
int3
dec
xor
fists
inc
and
cmc
mov
fnstenv
insb
or
mov
mov
lret
test
sti
xchg
enter
shr
lret
sub
xchg
mov
jo
sarl
mov
repz
push
mov
jne
dec
xchg
or
mov
in
nop
sub
xchg
adc
ja
lahf
inc
xchg
and
jl
and
aas
fnstenv
mov
addl
rcrl
cs
test
frstor
clc
xchg
add
add
aaa
pushf
sub
icebp
push
sub
add
fidivl
dec
add
pop
jae
inc
cld
cmp
inc
popf
adc
movsb
add
add
rorb
add
cmp
sar
sti
push
fs
stc
pop
jne
or
adc
mov
jnp
movsb
jmp
push
mov
cld
fs
jp
mov
cwtl
movups
sbb
adc
rcll
mov
imul
das
push
sub
jae
inc
jg
pop
pop
mov
xor
insl
xchg
add
push
or
icebp
iret
fldt
pop
call
jmp
or
fs
aaa
scas
add
rcl
dec
test
jno
dec
jmp
inc
jle
mov
cs
cwtl
inc
stc
lods
adc
clc
or
jl
test
cmp
rclb
roll
push
pop
pop
repnz
in
mov
shrl
or
mov
pusha
add
push
pop
repnz
inc
pop
outsb
mov
push
pop
add
jnp
mov
sahf
adc
push
movsb
mov
sbb
pusha
imul
int3
xchg
cmp
insb
cs
ret
add
pop
sub
cld
lock
call
aaa
cmp
loope
cs
lret
mov
xchg
and
popf
call
pushf
repnz
imul
pop
push
rclb
fmull
mov
mov
or
cwtl
xchg
test
adcl
into
insb
push
cwtl
push
dec
rorb
mov
sub
mov
push
enter
xchg
cld
in
lock
or
sti
leave
test
int
movsb
xor
dec
pop
inc
sub
aam
loop
insb
mov
cld
xchg
je
mov
mov
mov
or
or
xchg
mov
pop
mov
inc
push
lret
in
nop
pop
jg
jp
adc
push
sbb
mov
cmp
pushf
cmc
mov
hlt
mov
fcoms
hlt
dec
push
mov
jbe
mov
mov
xor
mov
cmp
add
mov
cwtl
and
add
inc
jns
nop
or
mov
pop
out
mov
sbb
mov
shrb
aam
ret
cmp
cmp
fdivs
lods
call
mov
mov
lock
icebp
into
mov
cmc
pop
or
rorb
mov
jmp
addl
inc
push
stos
nop
push
add
ss
mov
call
hlt
pushf
lahf
mov
cmp
xor
dec
push
dec
mov
push
jnp
mov
sbb
je
pushf
sub
jmp
add
xchg
xchg
xor
mov
imul
fmuls
mov
pop
pusha
stos
push
or
and
or
popf
mov
push
scas
cmp
scas
rcll
add
and
mov
add
imul
push
shrb
fistpll
push
xlat
lds
and
inc
dec
rcll
and
adc
sbb
mov
shlb
dec
vcomiss
mov
add
enter
imul
add
mov
add
or
xchg
lods
sub
mov
nop
mov
fsubs
add
pusha
aam
sbb
pop
xor
push
sbb
into
lret
test
xchg
mov
adc
or
pop
push
jmp
adc
inc
mov
or
cmp
pop
incb
in
mov
outsb
cli
push
mov
ja
roll
or
pop
adc
das
pop
or
push
jg
test
jo
test
pusha
aad
jge
xchg
ret
shll
inc
add
lock
nop
cmp
or
sub
negl
pop
xorb
out
add
xor
and
jg
or
jnp
sbb
sahf
and
jmp
andb
aad
sti
imull
test
xor
lods
push
pop
xchg
fsubs
fmull
cmp
sahf
jo
jo
out
adc
insb
push
and
pop
inc
mov
sub
lret
add
mov
outsb
pusha
test
push
add
mov
stc
add
xor
orb
outsb
add
mov
rorb
mov
pop
dec
add
lret
sahf
cmovle
or
mov
out
inc
rcll
mov
or
and
sub
cmp
imul
cwtl
out
enter
and
arpl
ret
mov
sbb
cltd
outsb
push
loop
pop
in
sbb
call
push
test
test
in
dec
sub
or
enter
xchg
add
add
and
jnp
add
ficoms
fnsave
mov
sbb
push
sahf
xchg
ss
clc
and
test
fs
cmpsb
out
push
pop
es
fsts
scas
das
fnstsw
mov
xor
hlt
add
fmuls
mov
cmp
mov
lods
popw
jo
cmp
push
xor
sub
adc
push
iret
add
dec
sti
pop
inc
pop
mov
dec
mov
adcb
add
pop
mov
cmp
adc
add
sbb
orb
inc
mov
negb
adc
mov
xchg
scas
inc
aam
mov
leave
push
ljmp
stc
outsl
in
icebp
add
push
inc
sub
rcl
loopne
insb
or
js
jp
mov
rorb
scas
cwtl
mov
adc
insb
xchg
lods
mov
sbb
cli
mov
loopne
add
cmc
rcrl
test
and
push
xchg
mov
and
jne
loopne
je
add
shrb
lret
xor
sahf
mov
pop
mov
shl
push
subb
dec
mov
je
and
rcl
and
add
pushf
cmc
dec
pop
lret
cmp
pusha
xlat
mov
inc
packssdw
adc
ds
dec
pop
adc
fcoms
mov
or
jle
adc
mov
mov
sub
enter
sub
ds
sub
movsl
shlb
mov
outsl
fldt
sti
test
and
mov
dec
and
cmc
gs
je
or
out
shlb
mov
dec
xor
sti
xchg
adc
aaa
popf
sarb
repnz
add
mov
pushf
ret
jecxz
mov
cmc
mov
leave
adc
and
jo
sarb
or
push
cmp
insb
sahf
add
add
cltd
or
rorb
fdivrl
ret
push
and
or
inc
push
rclb
cmpsl
sbb
lret
outsb
mov
addb
adc
repnz
push
xor
in
clc
and
sbb
loop
rol
push
cmp
rclb
js
sub
addb
adc
or
stos
pop
sub
orb
xor
je
adc
or
or
push
mov
push
stc
add
jl
push
outsb
and
insb
enter
sbb
xchg
adc
sub
cmp
mov
cld
adc
or
or
mov
inc
push
hlt
je
es
push
test
lret
push
push
fcompl
cmc
sti
mov
imul
shl
mov
or
shlb
add
inc
cmp
loopne
aad
push
enter
and
mov
mov
mov
or
aad
or
jne
mov
fnstcw
cmc
add
and
sbb
or
test
add
hlt
cmp
pop
into
pusha
test
js
xchg
push
mov
cwtl
sbb
mov
sbb
rclb
xchg
fimull
mov
inc
enter
in
sub
test
or
xor
stc
loop
jne
test
stos
xchg
add
push
add
pusha
and
push
or
stos
hlt
in
pushf
popf
mov
sub
push
call
inc
mov
cs
mov
test
jo
stc
inc
inc
int3
orb
sub
cwtl
pop
add
adc
shrl
insb
pop
clc
mov
mov
xor
mov
push
jne
pusha
add
repz
cmpsb
jl
mov
call
jno
mov
fstpt
sahf
pop
pop
enter
add
adc
lret
lahf
mov
cmc
pusha
nop
rolb
mov
mov
testb
add
je
lock
cltd
mov
fs
mov
lods
fldcw
out
jmp
pop
xor
dec
mov
in
fs
jecxz
les
int
das
and
lcall
and
push
lcall
negl
dec
mov
cmp
lret
sub
cmp
das
pop
jl
dec
mov
loope
je
inc
test
int
outsl
or
mov
mov
nop
pusha
cmp
inc
cs
mov
gs
adc
adc
les
xchg
xor
xorl
xor
inc
stos
mov
mov
int3
sub
std
lds
add
mov
test
xor
cld
jmp
test
push
adc
adc
mov
cld
imul
dec
mov
push
repz
mov
jne
popf
mov
mov
adc
pop
jmp
adc
push
cmp
test
or
inc
xchg
mov
jmp
mov
lret
call
outsb
mov
cmp
mov
popa
rcrb
test
inc
mov
and
incl
xchg
dec
enter
xchg
mov
mov
sbb
lods
pop
sahf
cs
inc
dec
or
add
mov
addb
inc
stc
sub
lret
movups
pusha
int
mov
push
pop
outsl
push
ret
loopne
or
inc
pushf
cmp
xor
pushf
test
in
rolb
or
xchg
xor
cmp
pushf
cld
movsb
jl
and
xchg
pop
add
cmp
lahf
insb
pop
clc
iret
mov
inc
jns
ret
pop
xor
add
cwtl
hlt
pop
cmp
imulb
cli
shlb
mov
cli
in
sbb
mov
or
iret
nop
add
sbb
xchg
cltd
push
mov
repnz
insb
sbb
mov
inc
das
xor
or
adc
add
mov
icebp
adc
sbb
lods
cmp
aam
or
arpl
call
clc
add
mov
add
cmpsb
lret
jo
and
leave
nop
mov
sahf
jle
shll
jmp
or
ror
mov
in
cld
dec
jmp
insb
mov
adc
cmp
add
ljmp
add
mov
mov
and
pushf
add
dec
push
shrl
add
sbb
scas
dec
dec
mov
inc
pop
imul
cs
leave
mov
hlt
seto
ds
add
test
mov
cmp
decb
fisttpll
ss
mov
pop
push
inc
cwtl
pop
jmp
clc
pop
dec
pop
clc
fcompl
sbb
imul
jo
insl
dec
cmp
mov
rolb
mov
or
jge
sub
stos
call
or
fcmovb
clc
xor
push
sbb
push
sub
jmp
mov
loop
add
mov
inc
in
rcll
les
test
sbb
das
sbb
adc
ror
lock
jg
icebp
nop
pop
cli
mov
and
jmp
pop
mov
cs
shrl
push
scas
stos
lea
shll
and
imul
pushf
fmuls
shlb
fmull
std
in
adc
les
jns
lods
jne
sahf
and
mov
jmp
cld
jl
pop
or
daa
cmp
pop
or
in
mov
push
es
add
jg
les
mov
pusha
pop
mov
setnp
std
cltd
add
or
or
sar
push
jns,pt
ret
xor
inc
call
and
out
loopne
sahf
adc
mov
inc
dec
fcompl
inc
xchg
ret
loopne
out
outsl
add
mov
push
and
adc
or
insb
cmp
testl
lods
mov
ds
xchg
xor
daa
cmp
xor
pop
mov
or
add
pop
jge
test
cmp
cmp
add
callw
and
out
movsl
add
inc
adc
sub
ret
addb
mov
push
fdivr
jo
int3
push
test
das
dec
imul
aad
cwtl
in
sub
mov
insb
fildl
or
pop
and
lock
or
and
mov
add
xchg
loopne
mov
mov
fdivrl
xchg
hlt
movsl
jne
js
push
add
clc
or
push
mov
and
add
pusha
in
hlt
and
loop
je
test
and
add
fcom
ds
stc
inc
cmp
dec
mov
fsub
add
or
xchg
hlt
push
pop
xor
jl
lcall
out
inc
push
imul
cmpsb
cmp
mov
cmp
testl
les
or
dec
mov
sahf
jp
rcrb
pushf
push
test
or
adc
cs
adc
push
inc
pop
xchg
call
sub
mov
popf
mov
or
nop
dec
jo
loope
or
mov
mov
push
add
loope
or
or
in
xchg
nop
pop
fmull
dec
rcr
cmp
inc
jno
xchg
push
add
imul
xor
ret
loop
jg
pushf
xchg
test
mov
aas
iret
ret
jb
imul
pop
jge
mov
mov
mov
dec
or
shr
push
test
popf
sub
shrb
xor
jl
mov
sub
cld
rcrb
insb
fnstcw
mov
mulb
mov
aas
inc
nop
add
inc
ss
outsl
jmp
daa
clc
mov
aam
sub
cmp
push
mov
stc
add
cld
xchg
push
aaa
int3
xchg
cmp
fldenv
jo
mov
daa
pusha
and
mov
fcomps
inc
mov
sarb
bound
jo
push
rcrb
pusha
inc
or
or
shll
sub
call
push
loopne
pop
imul
ds
mov
popa
xchg
popa
outsl
fmuls
loopne
xor
int
and
xchg
sar
mov
and
or
pop
leave
clc
adc
dec
mov
dec
pop
or
mov
cwtl
cmp
pop
and
ja
push
out
movsb
scas
movsb
lds
mov
les
sti
jno
inc
lahf
int
push
adc
lret
cld
dec
push
sbb
mov
adc
adc
sti
xor
fstps
mov
insl
nop
mov
iret
sahf
and
bnd
mov
and
or
jmp
popf
loop
orb
sbb
xchg
cmpb
mov
lods
movsl
stc
add
or
or
enter
xor
sbb
rolb
mov
les
xchg
stos
scas
cmp
xor
adc
pop
in
jecxz
add
sbb
mov
inc
ror
das
andb
adc
pusha
cmp
pop
cwtl
clc
or
ja
add
cmpsb
push
dec
pop
stos
cltd
push
jnp
xchg
cmpsl
inc
push
in
lock
fxch
adc
mov
inc
cld
pop
xchg
mov
mov
ja,pt
jl
pop
mov
mov
outsl
push
stos
or
cmp
mov
mov
repnz
dec
and
subl
loopne
lock
or
xlat
movsb
sbb
add
cmp
outsl
mov
fnstcw
nop
lock
mov
inc
into
fnstcw
scas
xor
andl
inc
call
push
push
jl
mov
jbe
inc
cmp
dec
rep
mov
pop
mov
pop
imul
mov
add
push
ja
cmp
pushf
int
sbb
pop
adcl
or
mov
jb
ja
leave
pop
lahf
rorb
pop
mov
xor
pop
fdivr
pushf
jp
das
fninit
sbb
scas
push
test
sti
test
mov
pop
mov
addr16
push
sub
or
dec
lock
jnp
es
pop
push
mov
push
insb
rcl
leave
pusha
popa
hlt
scas
and
or
or
decl
ret
call
sub
and
mov
sbb
mov
lock
icebp
or
mov
dec
mov
push
ja
es
mov
test
mov
xchg
adc
aaa
fiadds
push
aas
popf
add
push
lahf
mov
xorb
fcmovb
xor
dec
pop
rcrb
push
mov
adc
dec
scas
xor
push
in
add
fwait
dec
jg
mov
xor
adc
add
adc
mov
adc
mov
test
add
cs
loopne
or
loopne
xor
mov
pop
dec
push
push
test
inc
fsub
movsl
mov
test
or
push
push
out
aad
daa
repz
aam
xor
cmc
rolb
add
jae
push
test
xchg
call
fs
inc
cld
inc
mov
lds
push
dec
push
push
in
aaa
jae
dec
cmp
mov
xor
mov
add
push
add
mov
xor
xor
ljmp
mov
sbb
add
icebp
xor
mov
sbbb
or
testl
rclb
jl
scas
cs
mov
addb
loop
mov
out
add
fwait
into
andb
mov
outsl
inc
and
ficomps
xor
int3
test
shlb
daa
lret
dec
inc
cwtl
mov
push
push
mov
ss
test
and
dec
outsl
lock
jp
icebp
mov
sub
push
or
push
add
scas
fmull
andb
add
aad
mov
arpl
adc
test
bound
pusha
aam
jmp
dec
xor
jno
loopne
addb
pop
hlt
or
lods
dec
jle
mov
xor
mov
hlt
or
xchg
dec
das
jge
mov
cmp
mov
mov
inc
fcomps
adc
pop
sub
imul
inc
leave
jmp
lahf
in
add
jmp
cmp
and
xor
sbb
rolb
mov
stos
dec
in
jl
jne
fdivp
jp
test
xchg
out
sbb
pop
push
or
sbbb
pop
shlb
les
xchg
dec
arpl
loopne
mov
stos
enter
and
test
mov
pusha
mov
push
push
jle
add
insb
rcll
imul
stc
in
insb
ret
add
flds
inc
sbb
cld
jb
movsb
mov
xor
js
in
out
test
mov
sub
les
fidivs
inc
pop
or
add
faddl
mov
sub
testl
mov
inc
jns
cmp
pop
sbb
add
fistpl
mov
sub
movsb
inc
cmc
mov
pop
inc
mov
sti
pushw
push
in
andb
and
mov
sbb
ret
push
cwtl
dec
es
xchg
ds
push
mov
int3
cmpsb
pop
outsb
cwtl
mov
inc
push
test
or
add
inc
mov
cmp
adc
push
cmp
call
sbb
sahf
hlt
pop
lcall
loopne
aam
imul
test
dec
jg
jo
push
addb
fsubrs
add
and
or
or
jl
mov
and
sbb
add
lahf
cmp
jl
adc
mov
mov
pop
pusha
lock
jle
add
or
sbb
sub
adc
pusha
clc
pop
jl
add
mov
lods
aas
pop
or
and
mov
scas
lods
and
jae
lock
loop
loop
xor
xchg
add
sub
xchg
repz
add
mov
jle
lret
and
jo
and
and
inc
sub
inc
and
mov
dec
adc
xor
or
iret
jecxz
andb
mov
adc
loope
mov
xor
dec
test
mov
push
mov
add
jge
or
call
cmp
push
adc
scas
nop
and
add
daa
xor
mov
jne
push
add
or
nop
cmp
or
sbb
dec
mov
sti
or
clc
add
push
mov
dec
stos
hlt
xor
inc
add
inc
fcoms
fdivl
jg
cwtl
fsubp
int3
and
dec
jb
aaa
call
adc
js
shl
and
pop
out
clc
xor
or
xchg
in
and
pop
mov
sbbb
mov
or
shll
push
test
pop
adc
repnz
insb
inc
lock
cmpl
call
repz
xchg
imul
cs
adc
or
inc
bound
lock
adc
and
mov
shl
dec
jmp
stc
dec
icebp
mov
push
add
sar
pop
pusha
inc
cmp
icebp
dec
inc
mov
das
hlt
sar
add
insl
mov
adc
pop
ficoms
das
int3
xor
mov
mov
scas
inc
mov
js
cmp
mov
ds
cwtl
mov
stos
add
ret
sbb
js
flds
scas
inc
adc
push
xor
out
add
xchg
loopne
cli
cwtl
sbb
or
in
push
push
imul
mov
fimuls
leave
adc
fnstsw
or
push
mov
mov
je
push
lret
xchg
cmp
xlat
xchg
int3
mov
pop
cwtl
add
hlt
inc
shrb
imul
cmc
dec
xlat
loopne
adc
call
push
ret
push
mov
sbb
outsl
jmp
icebp
xor
das
lods
lods
mov
mov
dec
adc
mov
cmp
pop
outsb
mov
je
push
adc
les
out
addl
jmp
fdivr
add
push
adc
jo
add
mov
js
lret
dec
dec
mov
ss
or
jg
in
push
push
mov
gs
jo
into
dec
sti
clc
hlt
add
cs
sub
loop
adc
adc
loope
sub
mov
sbb
cmp
cmp
adcl
ds
popa
pop
in
sbb
pushf
and
xchg
xchg
or
add
subb
jb
push
push
in
test
and
lret
cli
hlt
mov
cmp
sti
in
xor
pop
sub
and
adc
mov
out
dec
mov
mov
in
cmp
sahf
mov
mov
pop
fistl
subb
xor
pop
xor
lret
sub
test
lahf
push
and
push
dec
and
std
movsl
jo
push
dec
dec
in
insb
push
test
cltd
jg
xchg
pop
scas
enter
mov
jle
test
adc
rcrb
lret
add
loopne
cwtl
lds
push
lods
jge
mov
push
sti
add
mov
adc
xchg
cmpsb
jmp
lock
add
testb
out
cltd
or
fs
inc
dec
lock
or
mov
lret
mov
push
xchg
lahf
xor
lahf
test
add
push
cmp
or
shlb
out
pop
jge
push
lahf
rclb
movsb
mov
or
sub
mov
cld
and
popa
les
popf
push
cmp
lds
pop
pop
mov
push
pop
cmp
fstpt
addb
sub
mov
and
xlat
adc
sarb
lock
lods
push
dec
adc
das
jae
dec
mov
adc
lret
out
jns
into
jmp
inc
or
jl
stc
ds
jo
fisubl
mov
ja
sti
xor
pusha
or
push
sub
xor
inc
pop
popf
sub
pop
mov
enter
add
popf
inc
popl
xchg
clc
clc
mov
xor
add
sbb
cmpsb
movsb
sbbb
leave
pop
jp
adc
mov
rorl
pop
fmuls
and
clc
pop
roll
sub
fisubrs
mov
dec
mov
insb
mov
adc
shll
shlb
ret
imul
add
adc
mov
in
push
lret
clc
mov
xor
cmp
fsubrs
or
loop
jge
je
pushf
lahf
adc
adc
dec
stos
lods
xor
and
jg
adc
push
dec
lods
clc
hlt
rcl
imul
xchg
mov
repnz
loopne
stc
pop
hlt
stos
mov
adc
in
fadds
pop
jo
cli
fsubrs
mov
sub
mov
nop
mov
adc
mov
mov
pop
and
cmp
cmp
hlt
insb
push
xchg
adc
shrb
xchg
pop
push
repz
nop
mov
inc
sbb
and
subl
cmp
adc
mov
js
fldcw
aam
cmpsl
loope
cli
or
pusha
stc
xor
mov
push
loope
and
add
cmc
shrb
clc
nop
mov
cmp
hlt
mov
in
pop
sub
aam
lock
mov
sarb
test
mov
or
xor
jno
mov
fidivrs
je
mov
push
sub
sub
and
mov
add
mov
mov
push
inc
or
mov
jl
rclb
lcall
pop
jnp
mov
in
test
mov
fcoms
clc
enter
into
cmp
push
add
mov
adc
xchg
and
add
enter
fistps
data16
add
ja
dec
sbb
mov
sbb
xor
cltd
sbb
cmc
mov
mov
test
cmp
xchg
mov
in
rcrl
cmp
mov
loop
nop
or
pop
push
lds
xchg
stc
push
inc
lods
cltd
inc
adc
movsl
out
data16
adc
sbb
dec
or
cmp
inc
call
pop
adc
sub
ljmp
xor
mov
ljmp
mov
add
pop
ljmp
mov
idivl
jbe
pop
stos
dec
nop
in
add
mov
mov
or
repz
inc
mov
and
add
and
mov
int3
push
adc
mov
scas
mov
jbe
or
call
aaa
sbb
dec
sub
mov
scas
inc
fsubrl
pop
dec
lods
cwtl
leave
adc
push
xor
mov
or
faddl
stos
insb
push
pop
push
stc
adc
and
mov
lods
dec
add
mov
xlat
rorl
push
imul
das
pop
clc
adcb
das
pop
mov
imul
enter
pop
adc
stos
sub
inc
mov
or
faddl
push
je
push
xchg
jp
rolb
mov
and
out
cmp
xor
inc
mov
outsb
loop
les
adc
add
addl
pop
push
push
rol
mov
push
xchg
mov
test
decl
outsl
and
popf
cmpsl
fs
push
test
sub
mov
xor
cmp
test
add
scas
lcall
scas
sahf
and
cmp
sbb
in
and
cwtl
or
mov
loope
fisubrl
jp
or
and
fwait
add
imul
rcl
push
dec
or
ja
call
lds
pushf
out
inc
and
insl
mov
shlb
adc
loopne
xor
inc
icebp
test
scas
inc
sub
das
sub
push
jae
pop
pop
xlat
or
jmp
cmp
fadd
pop
add
push
push
mov
mov
or
mov
jg
dec
mov
aad
inc
or
in
push
andl
add
fcompl
mov
mov
rcrb
inc
fcompl
adc
push
sti
clc
adc
insb
call
scas
lock
dec
aad
pushf
shlb
scas
jbe
cmp
es
repnz
pop
addl
mov
jp
dec
mov
add
cwtl
add
movsb
in
jg
xchg
sub
pop
aam
js
lock
and
scas
cmpl
cmp
or
shll
pop
adc
aas
outsl
test
icebp
lods
andb
scas
xchg
subb
addl
shrb
insl
idivl
test
mov
cmp
xchg
mov
xchg
adc
push
je
fistps
cmp
cmpsb
pop
shlb
nop
rorb
iret
xchg
out
push
cs
mov
mov
nop
les
les
out
inc
dec
or
fisttpll
sbb
je
or
mov
hlt
mov
and
push
xor
add
mov
pop
mov
int3
or
fs
sti
xchg
push
cmp
jns
push
push
cmp
movsl
xor
in
or
inc
fstpl
aam
rcll
jp
adc
jmp
cld
popf
je
cmpsl
hlt
aam
imul
shl
mov
dec
test
mov
adc
testb
imul
ljmp
xchg
push
add
insl
sub
dec
mov
lcall
xchg
mov
lahf
mov
fs
ficompl
mov
insb
in
sbb
movsl
push
mov
nop
add
call
lahf
nop
pop
inc
imul
add
mov
jl
jl
or
sbb
xor
popl
movsl
cli
mov
xchg
add
outsb
mov
lret
push
sbb
xchg
call
dec
mov
add
sub
out
loopne
aad
insb
aam
shll
andb
dec
xlat
icebp
testl
add
or
addb
rol
ss
xchg
add
fimuls
pop
mov
and
and
in
mull
fmuls
mov
mov
insb
mov
mov
or
jne
mov
xor
xchg
jae
add
lret
inc
pop
movsl
cli
adc
iret
add
pushf
inc
xor
test
cmp
mov
or
xor
push
mov
cmp
fldt
mov
and
push
add
mov
js
mov
pusha
pop
ja
lock
and
test
ret
and
pop
stc
lods
and
call
ja
repnz
cmp
and
std
in
jge
adc
adc
aam
add
stc
or
je
out
push
leave
cli
mov
lds
adc
or
xor
rolb
mov
cmp
add
mov
in
push
notl
xor
jo
adc
lret
fisttpll
stos
pcmpeqb
popa
rcr
jl
inc
movl
in
mov
lock
adc
inc
adc
and
pusha
add
dec
inc
sub
add
jno
push
inc
mov
scas
or
inc
mov
cmp
call
inc
addb
push
shlb
in
cmp
mov
adc
add
aaa
jle
sub
xchg
and
nop
xor
mov
mov
and
shl
push
dec
into
out
daa
pop
nop
xor
mov
push
andl
fwait
add
lods
sti
add
xor
scas
inc
mov
push
je
inc
xchg
mov
mov
cmp
aaa
xchg
out
jo
push
or
fidivrs
nop
jge
xchg
mov
shl
adc
mov
dec
cmp
and
dec
das
enter
pop
insb
lods
add
in
xchg
addl
push
lods
mov
or
ret
or
adc
sub
push
pusha
jmp
and
rorl
lods
pushf
sbbb
sbb
sub
mov
movsb
in
pop
mov
sbbl
and
cmc
in
dec
cmp
fld1
jg
inc
xchg
sti
jo
lods
sbb
rclb
stos
jno
push
imul
add
add
push
in
mov
fdivr
mov
loop
adc
add
lock
jp
xor
push
popl
or
rorl
mov
cmp
ss
fs
or
loopne
addl
std
into
push
rorb
mov
mov
sbb
out
cmp
repnz
jp
mov
call
adc
sti
mov
sub
orb
pop
pop
and
inc
push
push
xchg
mov
pusha
popa
jnp
lods
mov
cwtl
sub
xor
xchg
jns
sarb
or
dec
or
lods
nop
mov
rolb
mov
add
cld
push
insb
cwtl
bound
push
adcl
jns
mov
mov
int3
sbb
and
xor
mov
add
fcmovb
fs
mov
add
hlt
xchg
cmpb
ja
or
add
and
add
int3
mov
push
rolb
mov
shrb
pop
push
xchg
and
stos
add
dec
shr
xor
and
je
lock
mov
push
adc
cli
loop
pop
cwtl
inc
orb
jno
js
test
inc
push
push
jo
and
popf
push
aam
add
xor
ja
dec
and
push
pop
inc
test
test
xchg
xchg
xchg
ret
mov
ret
mov
popa
jbe
or
insb
inc
xor
scas
sbb
or
xchg
scas
and
and
outsb
sbb
push
inc
xor
xchg
cwtl
or
cli
xchg
add
jo
xchg
mov
fs
inc
mov
fdivrl
sub
xor
nop
aam
xor
js
rolb
das
jns
int3
sti
push
or
add
out
rorl
mov
adc
dec
in
inc
sub
mov
repz
pusha
dec
mov
sub
push
jne
lods
add
mov
pusha
xor
in
add
aas
push
push
insb
push
sub
mov
or
pop
les
mov
pushf
test
cmp
cmp
jl
add
ror
sub
sarb
sbb
cmp
ret
xchg
mov
movsb
movsl
pop
cmp
mov
jp
or
and
popf
adc
inc
fs
mov
mov
pop
push
movsb
add
push
lods
rclb
in
outsl
pop
hlt
cmp
xchg
jb
bnd
rcll
and
adc
pushf
jo
dec
inc
nop
pop
inc
setg
and
add
movsb
cmpl
rol
adcb
lock
test
shlb
clc
adc
loopne
in
sahf
or
push
dec
xchg
out
les
insb
and
add
xor
leave
mov
shlb
or
push
ljmp
xor
cld
add
push
dec
call
dec
call
xor
add
outsb
adc
mov
movsb
adc
xchg
jl
push
and
pop
mov
and
pushf
push
test
dec
std
cld
add
stos
xor
addb
dec
pop
and
movsb
xchg
imul
or
push
aam
adc
mov
add
sahf
dec
mov
dec
xchg
cmp
sahf
push
mov
sar
or
and
xor
push
and
and
fs
shr
xchg
cmpsb
scas
inc
insb
xlat
pop
cmp
mov
test
xor
int3
call
add
iret
fisttpl
sub
cltd
nop
test
aam
sahf
es
loopne
dec
xor
vmread
sub
aam
and
sti
mov
mov
lret
enter
or
push
lods
adc
jae
and
call
and
add
inc
in
inc
jl
xchg
and
lods
xor
fdiv
xor
lock
and
cmpsb
pop
loope
repnz
pushf
mov
sub
mov
scas
push
inc
add
out
stos
ror
lods
and
cmpsb
push
and
sbb
movsb
and
xchg
in
cmp
xor
imul
enter
or
shlb
cwtl
push
pusha
and
je
sti
mov
add
test
adcl
enter
or
mov
or
xor
sbb
adc
sub
adc
dec
push
movsl
aam
test
fwait
push
and
clc
ljmp
mov
sub
pop
ss
nop
xchg
outsl
sbb
lock
mov
mov
mov
push
pop
mov
lock
push
sub
add
addr16
dec
je,pt
cmpsb
fld1
and
mov
in
outsb
adc
rolb
push
inc
mov
add
in
or
test
jns
mov
xor
clc
cmp
xor
cmpsl
ja
cmpb
adc
in
orb
hlt
dec
outsb
or
sbb
call
mov
or
jo
scas
and
orb
lahf
rclb
and
pop
fldcw
pop
or
faddl
mov
jmp
xor
push
repnz
popa
iret
and
clc
xor
add
mov
dec
sahf
lods
aam
sub
popa
adc
cld
push
mov
jecxz
addb
mov
dec
sub
add
jl
inc
aam
mov
mov
lods
or
jge
pop
mov
icebp
or
xor
scas
orb
jno
adc
lea
or
mov
add
cmove
negb
das
dec
or
test
dec
xlat
inc
dec
outsl
add
jo
nop
push
lods
test
or
sarb
jns
pop
adc
cmp
movsb
add
fstps
add
mov
dec
pop
adc
pop
pushf
sbbb
fsubrl
popf
je
jno
push
pop
aas
push
fs
popf
cld
jge
xchg
nop
dec
pop
cmp
addr16
adc
mov
and
pop
cmp
std
mov
arpl
jnp
cmp
loop
sub
call
dec
cmp
out
scas
sub
or
lahf
fistpll
fldt
sub
mov
cld
movsb
inc
in
fidivrl
int3
mov
add
jb
fisubl
enter
xchg
adc
je
adc
das
or
or
mov
mov
sarl
cmpsl
pop
insb
loopne
in
es
add
adc
xor
js
push
mov
cltd
pop
es
outsb
dec
or
cwtl
lahf
inc
aam
rolb
pop
jno
lcall
adc
rclb
and
mov
in
add
leave
fadds
repz
ja
sub
and
and
dec
sahf
lock
pop
cld
add
cwtl
inc
insb
daa
lock
imul
add
pop
enter
fs
in
mov
ret
fistl
xchg
jl
cmp
loopne
xor
adc
sub
std
out
add
shlb
or
xchg
sbb
pop
inc
jo
dec
add
cmp
das
sahf
or
add
push
and
mov
pop
push
inc
mov
add
dec
pop
adc
xchg
mov
movsb
and
jp
outsb
push
push
inc
xorl
pop
das
mov
ss
add
lods
divb
mov
xor
pushf
pusha
xchg
imul
inc
lock
outsb
test
lcall
adc
cwtl
inc
mov
call
pop
add
inc
les
cmp
and
cmp
pop
stc
insb
xorb
or
rclb
in
fidivrs
stos
add
enter
adc
dec
lcall
js
call
and
sbb
icebp
or
mov
sub
push
daa
inc
movsb
andl
daa
leave
push
repnz
and
dec
cmp
pop
and
into
pop
mov
jl
nop
or
ds
sti
inc
aam
pop
xor
mov
mov
fsubl
mov
mov
cwtl
add
stc
or
add
pusha
nop
or
call
pop
aad
scas
mov
bound
push
dec
stos
xchg
shll
cli
cld
cmpb
inc
inc
mov
mov
mov
mov
add
xchg
cmpb
cltd
or
mov
rolb
aam
jns
mov
or
lahf
dec
mov
mov
fwait
sub
cmp
and
mov
cmp
aaa
in
xchg
setne
or
sbb
push
push
orb
mov
jge
dec
push
popf
les
mov
addb
lahf
dec
mov
test
out
jl
cmpsb
faddl
and
jge
stc
hlt
shll
fs
and
cmc
out
scas
push
xor
das
stc
xorb
and
lock
fisubs
jo
movsb
pop
call
mov
aad
xchg
imul
fstpl
stc
jne
mov
push
and
pop
cwtl
adc
pop
mov
pop
jecxz
gs
out
jo
in
adc
mov
cli
push
das
clc
sub
inc
ftst
bound
mov
mov
or
jl
add
adc
sbbb
negl
ljmp
adc
insl
add
ljmp
sbbb
idiv
jo
and
add
or
lcall
mov
or
sub
and
mov
sbb
push
scas
mov
std
ljmp
xchg
dec
and
add
add
fwait
cmpsb
mov
fcomps
cmp
lret
loopne
jns
loopne
dec
xchg
push
ds
mov
pushf
add
dec
fscale
and
pop
adc
loopne
insb
or
jp
nop
imull
loop
add
sbb
sbb
push
mov
sti
out
popl
je
pop
loope
or
xor
or
pop
jmp
or
push
cld
sbb
jge
inc
mov
popf
fstps
rcll
xchg
repnz
add
inc
outsb
sahf
jle
nop
lock
or
dec
or
iret
ret
adcb
and
add
push
stos
scas
mov
add
jnp
mov
test
scas
lods
mov
sub
mov
pop
in
inc
sub
dec
mov
mov
add
adc
mov
jns
mov
test
push
out
movb
das
add
mov
pop
scas
pop
or
push
mov
pop
inc
or
pop
ds
add
imul
jle
xor
movsb
jl
fdivrl
ss
lock
sub
pop
jo
xor
sahf
cmp
or
out
lahf
and
jp
add
add
loopne
dec
mov
push
dec
out
mov
fsubrl
insb
cmpsl
pusha
clc
movsl
jmp
push
mov
shl
mov
dec
jne
xchg
cmpxchg
xchg
sub
or
ljmp
pop
mov
enter
adc
adc
insb
xlat
add
outsb
jno
xchg
cmp
add
dec
js
sbb
ds
enter
mov
push
dec
test
push
scas
lds
jmp
mov
xlat
out
jo
xor
dec
and
movsb
inc
pop
push
push
inc
fwait
add
addr16
and
add
xchg
fisubl
push
push
das
mov
cmp
std
inc
dec
mov
push
loope
cld
or
add
pop
data16
lock
call
test
push
faddl
lret
jle
xor
inc
dec
mov
adc
mov
incl
add
push
les
arpl
jbe
and
jo
inc
ds
and
sarb
aam
scas
iret
loopne
ficomps
pusha
adc
cmp
aad
sbb
add
aam
out
int
lock
push
mov
push
fcoms
ret
in
icebp
stos
test
mov
and
fsub
aas
mov
fisttpl
aaa
cmp
out
ficompl
mov
mov
scas
pop
and
pushf
sbb
outsl
fisttpl
sub
adc
cmc
pop
call
sbb
les
out
enter
add
push
mov
mov
in
mov
and
adc
outsb
or
push
call
mov
or
mov
rcll
cld
mov
bound
jp
add
dec
imul
jmp
outsb
imul
mov
lcall
inc
sub
scas
mov
scas
mov
mov
testb
pop
mov
shrl
in
mov
mov
add
lret
das
cmp
insb
mov
mov
aas
andb
adc
call
cld
push
test
xchg
mov
js
cmc
adc
xor
lods
jns
popf
js
push
jns
andb
mov
mov
je
sub
fisttpl
loop
je
xchg
sbb
lea
mov
cwtl
or
hlt
push
pop
xchg
or
fwait
clc
movsb
andb
or
popa
or
adc
jmp
add
mov
sbb
or
pop
pusha
inc
cltd
pushf
and
in
xchg
xor
jnp
fisubrs
adc
in
insl
cmp
sbb
aad
mov
xchg
jo
mov
iret
fdiv
lods
or
xor
push
add
inc
fldcw
inc
and
loop
mov
fs
shrb
adcl
push
rol
lret
inc
fstl
in
dec
loopne
push
fnstsw
and
xchg
add
add
in
dec
mov
and
adc
sub
xor
xlat
ljmp
fcmovne
add
out
add
and
das
fwait
add
xchg
xchg
sub
icebp
jmp
pusha
push
clc
loop
lock
clc
dec
sbb
xor
pusha
cwtl
cs
mov
lods
xor
ds
push
aas
sbb
add
bound
add
xchg
xor
and
pusha
jae
xor
inc
aaa
sub
pusha
int3
xor
andl
outsl
and
sbb
and
notl
sbb
xor
jb
sbb
pop
popf
imul
inc
mov
jmp
int3
xor
mov
fsubs
push
push
fdivl
out
jne
mov
sbb
add
add
ret
mov
scas
or
nop
sub
add
inc
clc
scas
mov
std
sbb
inc
ficomps
enter
push
fisttpll
jne
and
sbb
push
mov
bound
add
jg
cmp
inc
add
in
push
jnp
ret
xor
add
and
mov
enter
sarb
xor
pushf
and
mov
and
ret
rcll
test
jnp
xor
inc
push
dec
sbb
adc
rorb
fcompl
test
insb
or
iret
sbb
push
sub
mov
and
rcrb
push
mov
fbstp
inc
ficomps
pop
push
scas
dec
int3
in
jl
arpl
sarb
ds
loope
pop
push
pop
mov
int3
adc
andb
mov
repz
cmpsl
or
jl
xchg
out
out
add
xor
xchg
mov
lods
inc
cmp
out
hlt
lods
stc
cld
adc
push
fisubs
shrb
pop
mov
pusha
mov
cmpb
pushf
push
and
jp
fs
loopne
pop
loopne
pop
inc
test
inc
sub
xor
dec
sub
adc
test
xchg
lds
jl
add
push
add
mov
aas
loope
mov
sarb
inc
es
inc
cmpb
cmp
adc
cld
mov
and
sub
pusha
sbb
add
andb
aaa
xor
xor
loopne
pop
cmp
xor
cwtl
adc
push
adc
mov
lret
pop
adc
dec
mov
cmp
cmpsl
js
cmp
adcb
lea
fwait
cwtl
push
dec
daa
mov
dec
adc
jl
imul
aas
xchg
dec
mov
mov
mov
xchg
pop
xor
adc
iret
and
into
mov
loopne
adc
je
and
in
dec
mov
xor
add
adc
lcall
mov
jp
lods
aas
mov
xchg
lret
sahf
es
dec
clc
jle
sub
lea
in
xchg
push
jl
and
xor
nop
cwtl
mov
adc
pop
or
pop
clc
add
push
mov
fs
mov
iret
or
pushf
mov
sub
inc
adc
adc
xchg
mov
dec
inc
inc
fdivr
mov
test
add
aas
addr16
sub
and
ljmp
out
in
les
out
and
fs
scas
repz
loopne
inc
push
mov
mov
je
mov
or
and
push
xor
push
rcrb
stc
lods
inc
cwtl
unpckhps
cmp
shlb
inc
bound
adc
xor
out
adc
jg
fsubr
test
lret
jo
mov
pop
aas
movsl
enter
adc
push
fs
push
jo
stos
push
adc
or
in
pusha
scas
mov
xor
insb
adc
into
xor
sarb
lock
push
sub
pusha
jno
mov
mov
movsb
outsl
call
xchg
and
and
mov
insl
add
fucom
dec
cltd
pop
lret
fdivrs
mov
fcmovnbe
nop
mov
cmp
stos
ret
jne
sbb
or
and
xor
bound
cli
pusha
and
mov
loop
addb
sub
pop
pusha
imul
push
xchg
cmc
or
leave
jle
inc
hlt
mov
mov
inc
aaa
pop
sub
push
mov
add
adc
sbb
pop
out
sarb
insb
inc
push
dec
jo
mov
pop
test
sbb
mov
ret
add
mov
mov
cmp
daa
mov
push
or
js
add
and
mov
lock
inc
sub
xchg
jo
and
xchg
jne
hlt
pusha
pushf
fmul
and
sbbl
mov
je
ret
es
or
je
outsb
adc
test
sub
pop
btrl
sub
or
hlt
or
cmc
and
cmpsb
xor
enter
enter
mov
mov
adc
ffree
enter
mov
xor
andb
dec
out
jg
push
bound
iret
enter
loop
pop
jo
sbb
sub
ffree
enter
add
xor
cmpsb
stc
cmp
jmp
xorb
fstp
jnp
mov
push
cmp
adc
mov
pop
aas
push
pusha
jmp
mov
adc
jmp
ljmp
js
fmull
movhps
icebp
stos
jno
andb
mov
mov
jl
dec
fisubrs
nop
int3
xor
xorb
pop
sub
xchg
out
orb
mov
sbb
mov
shlb
test
test
add
xchg
das
dec
cmp
dec
outsl
sbb
scas
cmp
pop
xor
add
popa
loopne
movsb
sbb
jge
inc
and
adc
outsl
cmp
rclb
pop
mov
or
jne
ss
stc
call
jo
xchg
sub
lock
cmp
xchg
sahf
mov
pushf
adc
je
mov
rcl
jmp
pause
fs
sub
inc
mov
inc
inc
ds
or
mov
inc
idivl
lock
mov
adc
fisttps
adc
xchg
sub
mov
or
inc
nop
es
inc
pop
mov
dec
mov
jo
adc
add
inc
add
rorl
insb
int3
mov
pop
adc
mov
add
addb
push
mov
sub
cmpsb
inc
dec
push
push
movsl
push
cs
lock
mov
add
jmp
mov
fdivl
inc
xchg
pop
adc
pop
inc
nop
lret
jo
or
ljmp
sub
aas
push
xor
inc
cmp
adc
stos
andb
xor
mov
dec
push
popa
fcoml
xlat
add
pop
lahf
push
inc
fs
xchg
pusha
adc
insb
aas
sbb
cmp
and
jg
mov
push
int
jb
aam
pop
sbb
inc
adc
dec
out
inc
push
mov
sbb
adc
mov
add
out
imull
ljmp
and
inc
dec
mov
adc
lahf
sbb
jnp
dec
mov
fs
pop
push
and
push
leave
cmp
mov
mov
or
out
jecxz
adc
pop
mulb
pop
or
jb
stc
cmp
mov
shrl
nop
and
or
add
pop
mov
adc
popf
ljmp
jo
lods
adc
xchg
mov
or
pushf
jg
adc
movsb
pusha
xchg
pop
popa
lret
shr
add
fprem1
ljmp
add
ds
pop
arpl
div
jp
fsubrp
aam
lods
mov
cmp
movq
dec
lock
add
mov
out
incb
adc
lret
or
push
or
inc
push
cmp
cmp
lea
movsl
frstor
sbb
mov
arpl
xor
repz
mov
out
imul
lcall
mov
bound
scas
add
popa
cmpsl
icebp
xor
push
test
nop
xchg
xchg
mov
xchg
push
and
mov
adc
roll
lds
in
pop
cwtl
adc
push
and
fst
rcrb
push
or
outsl
subb
call
jl
mov
jno
fnstsw
xor
sub
ds
roll
scas
icebp
inc
jns
xor
fsubs
sub
sbb
dec
xlat
lock
xchg
aas
jne
dec
push
or
adc
hlt
popf
loop
imul
inc
cwtl
ret
std
adc
inc
or
rolb
loopne
inc
jl
inc
pop
out
mov
mov
jo
pop
inc
or
fldl
rsm
lods
hlt
and
dec
and
andl
outsl
xor
dec
outsb
fsub
shrl
je
test
insb
dec
fwait
dec
dec
loop
test
and
adc
push
add
inc
mov
adc
xchg
hlt
adc
test
add
dec
incl
clc
les
pushf
adc
mov
sti
aas
mov
scas
leave
inc
mov
fcomi
push
daa
or
jl
rolb
xor
ficoms
fstp
ss
jo
mov
loopne
je
scas
and
int3
enter
ja
cwtl
mov
movsb
inc
cmpsl
ds
inc
or
dec
imul
mov
lock
ljmp
cmp
ret
in
pop
xchg
out
lock
pusha
test
mov
xor
addl
push
fbstp
sub
jecxz
mov
sarl
push
or
ds
mov
inc
cmp
dec
mov
add
jb
jno
add
mov
add
mov
inc
fnstenv
out
jecxz
push
sub
les
mov
cmpsb
popf
out
mov
pop
add
enter
aam
sub
pop
jecxz
nop
cwtl
and
cs
mov
sub
sub
sbb
nop
mov
jmp
cld
push
call
mov
push
xor
popf
stc
cmp
jge
pushf
addl
add
jle
lret
mov
pop
add
cmp
mov
add
aam
outsb
inc
mov
xchg
fadd
jle
jge
mov
out
cld
test
push
mov
mov
lret
sub
adc
push
adc
jl
mov
mov
fsts
mov
push
and
test
push
and
xchg
or
inc
cltd
je
inc
xchg
mov
mov
add
add
in
das
or
add
push
mov
sti
fsub
add
and
loopne
and
nop
mov
les
pmaddwd
jno
inc
jnp
adc
notl
fsubrl
fiaddl
mov
inc
enter
jo
add
cmp
dec
test
xor
and
adc
and
xchg
push
jo
call
outsl
or
pop
and
int3
enter
es
pushf
stos
pusha
insb
inc
outsb
test
dec
cmp
add
int3
dec
lock
mov
adc
rclb
mov
lock
pushf
fs
pop
sub
adcb
les
mov
push
outsb
cwtl
and
subb
sbb
hlt
and
add
pusha
xadd
add
push
jns
ja
js
pusha
xchg
mov
add
mov
pushw
adc
test
in
fsubrl
sbb
sub
test
int3
and
icebp
dec
cmp
inc
jmp
rcrb
test
xchg
js
mov
push
lock
add
pushf
imul
sbb
filds
inc
pushf
dec
scas
cld
insb
inc
cmc
shr
call
adc
lods
add
fstl
mov
jne
and
push
or
or
in
pop
sub
mov
xchg
rolb
scas
or
cmp
lock
clc
orb
arpl
cmc
jmp
mov
xchg
fdivrl
add
fs
in
pop
adc
mov
jns
jo
mull
cld
pusha
test
pop
push
out
jge
xchg
pusha
mov
bswap
add
dec
push
dec
jnp
mov
test
and
adc
lret
mov
sbb
or
decb
out
cwtl
add
ss
add
fwait
adc
jmp
lret
dec
lock
mov
add
mov
inc
or
and
push
mov
cmp
sahf
jecxz
xor
jns
mov
and
adc
jmp
lods
lea
xor
mov
mul
sti
dec
push
jmp
lods
add
rorb
andb
xchg
rol
mov
push
test
inc
rorb
cmp
fldenv
int3
mov
or
fwait
jne
inc
outsl
sbb
andb
adc
and
mov
add
cmp
lock
push
loop
rorb
xchg
ret
dec
or
dec
push
out
insb
pop
pop
lret
stc
in
push
mov
add
mov
jl
push
mov
rcrl
mov
cmp
sahf
nop
enter
add
xchg
clc
xor
adc
lds
push
pop
in
ja
rorb
test
adc
sub
loope
inc
aam
leave
outsl
lods
sub
mov
lock
aam
mov
pop
les
cmpxchg
jo
mov
fwait
jnp
or
push
cmp
cmp
and
add
push
dec
bswap
xor
lahf
add
or
pop
insb
add
out
rclb
or
add
pop
test
mov
adc
mov
dec
outsb
clc
cmp
mov
add
push
lock
mov
das
push
sub
dec
clc
jle
dec
sbb
or
sub
sbb
jp
fsts
sbb
push
adc
push
out
mov
adc
hlt
ja
sti
lock
mov
lock
idivl
mov
fs
testb
mov
sub
mov
pusha
call
mov
push
push
sub
cld
or
daa
dec
pop
xchg
jge
mov
lret
or
xor
sub
inc
pop
iret
xchg
ret
imulb
scas
xor
mov
sbb
popa
xor
cmp
pop
scas
outsl
sub
sub
leave
mov
rolb
mov
movsb
adc
add
rorl
xchg
xorb
lcall
cmpb
insb
ss
sub
pop
mov
loopne
sarl
lret
enter
int3
push
cmpsb
fcoml
pop
aas
repz
pop
cmp
ffree
loopne
and
pop
add
inc
xchg
hlt
dec
mov
int
jg
cld
in
lret
add
cltd
cmp
dec
jl
inc
clc
sub
dec
adc
xor
cld
in
push
jo
in
call
add
adc
in
aas
dec
nop
inc
inc
mov
and
movsl
push
bound
adc
inc
add
and
je
stos
mov
push
pop
js
clc
ret
or
cmp
fistpll
mov
sub
add
or
mov
xchg
xor
jb
sbb
loope
sub
sar
cmc
icebp
xchg
pop
pusha
jno
dec
cmp
adc
lea
inc
int3
shlb
push
ds
daa
and
hlt
shrb
inc
hlt
xchg
stos
flds
sbb
hlt
dec
fst
test
pop
sbb
dec
inc
sti
test
shrb
jl
cs
mov
shrb
pusha
push
lret
add
nop
orb
mov
xor
insb
test
fisubrs
add
mov
enter
mov
or
pop
in
push
mov
add
test
and
dec
aad
sub
cmp
sbb
inc
xchg
enter
cmp
cmp
mov
sbb
out
shlb
fwait
dec
pop
nop
out
sub
pop
sbb
inc
not
sahf
repnz
mov
mov
lock
adc
inc
icebp
xor
add
xor
jle
xor
nop
cs
pop
xor
iret
mov
pushf
out
inc
ret
push
adc
test
adc
scas
imul
enter
xchg
push
out
rcrb
mov
or
ret
fnstenv
or
mov
sub
test
push
jno
jl
mov
sarl
sbb
mov
jne
lock
dec
add
adc
pop
and
inc
pusha
adc
rorb
sbb
xorb
pushf
divb
leave
inc
cmp
hlt
add
call
movsb
adc
pushf
addb
jne
movsb
adc
addr16
adc
mov
ds
fs
pop
pop
movsb
rcr
mov
mov
nop
inc
stos
rol
scas
or
mov
ds
and
icebp
mov
sbb
push
jnp
pusha
mov
addb
aaa
int
and
pop
mov
xorb
cld
fs
pmulhuw
dec
stos
mov
insl
lock
or
inc
xor
push
xchg
xor
push
das
pop
xchg
cmp
pusha
stos
mov
movsl
stc
cmp
pop
mov
pusha
popa
xchg
in
pop
add
mov
cli
insb
or
xorl
add
xchg
adc
push
mov
lock
enter
hlt
mov
sbbl
in
sbb
mov
lock
jl
xchg
call
mov
jl
es
xchg
jnp
mov
movsb
mov
jne
loopne
pop
push
sub
sbb
jge
outsb
xchg
lods
push
pop
outsb
adc
xchg
pushf
es
sahf
sub
add
aas
repnz
push
add
xchg
mov
fmuls
sub
mov
sub
add
mov
jns
leave
xor
or
loop
fisubrl
fdivrs
and
and
sahf
dec
add
dec
add
dec
xor
inc
dec
aas
inc
sbb
loope
idivb
loopne
jge
or
insb
sub
shlb
sub
push
imul
sub
movsl
test
rol
out
cltd
push
adc
adc
add
add
push
das
adcb
out
bound
and
out
ret
adc
and
test
inc
mov
mov
mov
mov
test
rorb
adc
jl
lods
mov
dec
loopne
pop
cld
xchg
jo
inc
and
les
xchg
cmpsl
xchg
sub
loope
push
ds
mov
push
addl
adc
or
inc
imul
js
xchg
inc
andb
icebp
push
imul
jne
test
sub
into
lods
and
pushf
mov
test
xchg
loopne
fiadds
mov
subb
pusha
es
pop
jle
sti
add
add
pop
adc
pop
bound
xor
sbb
fdivs
mov
mov
enter
dec
popf
pop
adc
leave
out
inc
nop
mov
xchg
push
pop
or
call
mov
and
xchg
push
rcrb
sub
sete
mov
lahf
dec
lret
push
jl
or
xorb
mov
in
repnz
cwtl
mov
mov
sbb
inc
mov
add
testl
jl
sub
rcrb
mov
enter
cmovns
or
mov
or
mov
sbb
psubusb
dec
mov
jl
sysenter
adc
add
and
push
jge
or
and
movsl
and
add
jle
cwtl
inc
repz
push
mov
addl
add
cmp
cmc
dec
ja
test
push
fstl
sbb
cs
nop
pusha
adc
movsl
push
je
cld
push
inc
and
mov
cmpsb
inc
xlat
dec
jns
xor
push
sub
pop
fsts
cwtl
out
je
out
popf
outsl
xchg
hlt
adcl
dec
pop
dec
cmpb
sub
cmp
mov
test
dec
xor
adc
mov
je
adc
lock
and
add
mov
push
jle
les
adc
je
inc
fadds
xchg
lds
mov
mov
mov
sub
inc
test
adc
add
pop
fcomps
cmp
lret
pop
pop
sahf
ljmpw
sbbb
cld
dec
test
sub
mov
pop
sbb
test
and
pop
add
push
xchg
je
add
int3
push
and
dec
fcomps
and
clc
dec
add
xchg
sbb
jns
shr
pop
bnd
sub
leave
push
nop
xchg
call
movsb
movsb
pavgw
pop
pusha
push
shl
loope
cmp
mov
stc
test
mov
js
or
data16
adc
jae
sub
xchg
jo
pop
xchg
jle
cmp
or
push
insb
jge
add
shrb
adc
daa
popa
mov
ret
pop
mov
xlat
push
pop
ret
inc
push
fstpt
sub
mov
pop
pushf
out
push
cwtl
push
mov
incl
mov
push
out
rcrb
sar
icebp
stos
and
push
movsb
lds
pusha
push
sbb
dec
or
jge
dec
adc
cmp
dec
mov
dec
dec
std
add
cwtl
dec
sbb
cwtl
fadds
in
cli
adc
stos
popf
nop
mov
pop
or
ror
mov
jge
dec
xchg
lcall
push
test
and
imul
pop
sbb
adc
lods
sbb
or
in
mov
push
xor
mov
test
in
add
add
popa
mov
lods
int3
add
add
adc
mov
dec
mov
insl
call
int
out
xchg
leave
adc
je
fdivl
rcrb
loopne
inc
ret
mov
divb
test
pop
shll
shlb
inc
outsl
mov
sbb
mov
mov
pop
cmc
add
mov
and
dec
pop
mov
fdivrs
adc
jge
f2xm1
les
mov
sub
rclb
lret
fstpl
hlt
das
or
repz
push
mov
xor
mov
lcall
fidivrs
hlt
mov
inc
and
repnz
cmp
arpl
mov
xchg
fs
add
pop
gs
test
and
test
out
mov
or
push
or
sub
test
add
test
mov
ljmp
mov
div
mov
pop
cmp
cli
std
dec
popf
shlb
and
jle
adc
add
inc
into
sub
in
lret
sahf
faddl
inc
dec
popf
jne
int3
addb
fcmovb
arpl
hlt
insb
adc
mov
cld
lret
aam
dec
jo
fisubs
ret
pusha
dec
leave
push
and
dec
test
or
inc
in
test
jmp
movsb
add
rcll
cmpsb
fmull
push
sub
loopne
or
mov
outsb
repnz
adc
cmp
or
cmp
mov
sbb
mov
lock
adc
add
xor
ret
mov
cmp
lods
push
fmull
mov
insb
push
mov
test
and
repnz
add
out
orb
lock
fcompl
data16
and
or
pop
test
je
adc
clc
inc
and
xchg
shll
inc
lods
mov
mov
lret
clc
inc
add
and
jmp
mov
inc
adcb
aas
nop
popa
in
pusha
aam
stc
sbb
repnz
out
subb
cwtl
add
in
testb
sub
and
dec
mov
mov
call
in
sub
push
and
pushf
xor
outsl
mov
dec
dec
mov
push
mov
push
aas
lret
lret
clc
and
cmp
or
or
frstor
mov
data16
add
mov
outsb
push
sbb
xor
enter
fcoml
into
addb
scas
movsb
add
inc
xchg
imul
lock
iret
adc
out
testb
lret
rorb
or
or
lahf
jge
add
stos
xor
lock
sub
loop
out
movsl
pop
call
nop
and
mov
out
repnz
push
jecxz
sbb
pop
ja
pop
lods
js
andb
add
xor
cmpsb
dec
mov
push
lret
mov
push
pop
imul
or
aas
pop
push
inc
paddb
dec
je
lock
cs
cmp
add
cltd
dec
mov
push
push
lock
mov
and
outsb
mov
push
aam
mov
sub
and
mov
aad
je
mov
push
out
inc
shrb
in
xchg
add
mov
ud0
test
fs
adc
outsb
pusha
inc
mov
lcall
inc
psubb
add
inc
subb
add
jg
std
icebp
pop
jmp
in
dec
xchg
nop
lahf
add
shll
je
mov
and
lock
sbb
incb
jno
dec
movsb
movsb
adc
pop
subb
push
xchg
je
aam
ss
add
pop
bswap
cwtl
xchg
xlat
sbb
sbbb
dec
sbb
enter
adc
ss
pmulhuw
icebp
mov
insb
in
clc
add
movsl
inc
movl
into
test
nop
aas
lods
cmp
mov
xchg
sti
js
andb
jo
outsl
sbb
movsb
pop
jo
gs
sub
or
adc
mov
outsl
pop
fcoms
imul
sub
stc
add
fldcw
push
rcll
enter
xor
xor
xor
inc
push
std
lods
xor
sbb
pusha
mov
adc
shl
nop
ljmp
mov
pop
xor
test
or
fists
mov
inc
mov
sbb
ds
std
sbb
jbe
jp
js
pop
testl
stos
mov
jl
mov
or
cmp
in
and
fdiv
cmp
lock
xor
popf
xchg
cmp
inc
cmc
repnz
test
hlt
test
loop
add
out
cmp
nop
jb
ret
push
icebp
pushf
dec
and
inc
xor
popa
jbe
rol
jecxz
lea
int3
cltd
cli
add
lods
rorl
repnz
or
xchg
pop
in
mov
adc
enter
mov
pop
push
cmpsb
js
pop
stos
or
xor
pop
popf
or
addb
hlt
adc
xchg
or
mov
xchg
push
inc
pop
mov
or
jl
shrb
lock
fmull
push
xchg
ret
mov
ja
iret
int
repnz
ja
and
aad
xchg
mov
jl
mov
sbb
dec
daa
outsb
movsb
and
mov
dec
hlt
jo
add
mov
add
mov
loop
pop
push
mov
xor
test
jbe
push
or
mov
mov
push
pop
and
mov
cmp
mov
je
push
pushf
dec
add
enter
sahf
add
or
jl
loop
mov
jl
xchg
hlt
ffree
addb
cmp
sbb
inc
into
aas
or
or
pop
cmp
pop
pop
enter
inc
adc
pop
mov
or
add
jle
or
add
les
daa
dec
fcomps
and
fdivr
sbb
add
adc
push
mov
pop
test
mov
shl
int3
pop
jmp
rorl
adc
or
and
mov
xor
add
mov
jl
adc
or
cmpsl
jb
adc
sarl
mov
adc
lret
jns
adc
mov
ret
iret
and
stc
repnz
push
es
cmp
add
pop
jo
out
cmp
and
and
cmp
in
sbb
aad
or
iret
mov
sahf
cmp
adc
lahf
dec
incb
cmc
outsb
mov
adc
cmc
cmpb
xchg
das
jns
inc
pop
mov
insb
mov
fsubl
js
decb
push
repnz
mov
call
push
scas
mov
add
cmp
addb
mov
sbb
xor
pop
add
subb
dec
or
iret
mov
daa
or
add
mov
mov
cmp
inc
pavgw
and
rorb
mov
ficomps
or
fcompl
xchg
or
xchg
mov
mov
and
add
adc
clc
rcrl
jecxz
xor
pop
scas
add
mov
add
xchg
mov
mov
xor
hlt
add
add
test
mov
cwtl
xchg
dec
mov
add
xor
lock
xor
lret
push
mov
imul
push
pop
mov
imul
pop
and
scas
and
call
in
add
or
or
add
push
pop
adc
fsubrs
ja
pop
dec
psraw
fs
cmp
inc
mov
sbb
xchg
push
sbb
push
lock
dec
adc
test
pusha
call
mov
aas
lods
addb
add
or
add
sbb
sbb
inc
mov
lock
sub
add
or
add
jb
jle
sub
xchg
push
dec
add
enter
in
js
sub
lar
add
mov
add
mov
dec
subb
rorb
add
test
pop
inc
hlt
sti
adc
inc
in
or
icebp
dec
adc
adc
lea
jne
lock
push
dec
stc
cld
add
and
xor
jle
mov
pop
inc
or
popa
fcoms
pop
pop
mov
cmp
scas
mov
cmp
lea
mov
das
outsb
mov
mov
mov
jbe
call
adc
adc
outsl
sbbb
pop
sti
in
fwait
sbb
clc
loop
mov
dec
sub
nop
cmc
fdivrl
shr
ds
mov
pop
cmc
mov
xchg
dec
pop
mov
scas
add
xor
rolb
cli
test
or
ret
add
ss
jns
movsl
mov
insb
pop
cwtl
or
push
push
mov
or
jmp
and
or
mov
xor
int3
sub
and
hlt
mov
push
mov
subb
dec
cmc
mov
rep
mov
pop
je
es
lods
mov
dec
pop
jecxz
sub
cwtl
loopne
dec
lret
cmpl
or
incl
ds
mov
fcompl
inc
adc
push
popa
jl
shl
dec
shrb
clc
gs
push
and
jge
cld
xchg
idivl
jmp
jge
loopne
push
jmp
and
lret
inc
daa
push
fdivrl
and
mov
push
pop
xor
test
loop
push
mov
pusha
fdivl
int3
sbb
add
cs
fsubl
in
sahf
fwait
mov
inc
cmp
lahf
sti
loopne
roll
fsubrp
sub
add
in
pop
popa
cmp
mov
test
adc
cli
and
mov
enter
mov
pop
pop
loop
jl
mov
mov
subl
inc
sub
icebp
pop
fprem
nop
aam
xchg
out
jb
xor
adc
aam
insl
daa
cmpsb
stc
hlt
call
pusha
or
scas
xchg
lock
hlt
cmpsb
jge
dec
push
mov
adc
add
out
xor
push
popa
jo
pusha
lods
mov
div
fcmovb
mov
cmc
loop
push
jo
mov
shrl
push
movsb
leave
pop
and
int
push
icebp
cwtl
or
pop
mov
and
or
and
pop
shll
gs
repz
push
push
sti
out
insb
and
pusha
mov
push
cmp
mov
cld
add
pop
insb
cwtl
ja
sub
aam
ds
inc
js
subb
inc
xchg
aam
mov
shll
out
mov
mov
out
rcl
jecxz
lock
push
mov
xchg
dec
add
push
push
call
aas
cmpsb
sarb
test
rclb
test
addb
push
aaa
pop
xor
cmp
mov
dec
andb
jmp
fincstp
in
sbb
pop
add
mov
mov
pop
mov
andb
popa
cmp
mov
mov
lods
push
push
repz
enter
cmp
add
lea
inc
xor
adc
inc
insb
mov
into
mov
adc
cltd
inc
mov
int3
les
push
sbb
pop
negl
dec
cmp
js
push
in
clc
add
rorb
push
adc
add
push
enter
jo
mov
ret
jne
cmp
pop
nop
fnstcw
xchg
loopne
push
dec
lret
mov
sahf
mov
xchg
or
and
ja
mov
or
insb
data16
ret
adc
cmp
push
pop
clc
lock
cmp
mov
xor
lea
dec
cmp
aaa
pop
sbb
shrb
or
add
push
jo
jg
xchg
jle
or
movsl
xchg
test
dec
andl
push
jns
pop
adc
clc
insl
push
mov
stos
jge
mov
notl
in
stc
lods
inc
scas
insl
inc
sub
or
or
lock
icebp
push
and
nop
inc
dec
pop
inc
scas
mov
das
and
inc
pop
cmpl
xchg
fdivrl
jecxz
scas
lea
or
call
lods
ds
adc
add
inc
fcoml
add
inc
mov
fs
pop
testl
inc
xor
inc
cmp
adc
movsb
mov
cmp
mov
add
cs
jl
sbb
insl
push
movsb
cmp
das
inc
add
andl
mov
outsl
pushf
add
loopne
out
mov
xor
pop
lret
movsb
int3
xor
pop
fsubs
fildl
test
dec
loopne
pop
inc
add
call
or
adc
pop
jne
loopne
int3
add
leave
pmaddwd
sti
test
pop
icebp
xchg
je
cmp
das
dec
xchg
loop
data16
aas
push
test
sub
je
scas
push
ja
rorb
adc
xchg
in
push
add
aas
out
sub
insb
in
xchg
sub
add
aaa
mov
cmp
add
xor
sbb
outsl
xchg
cmp
and
add
lods
bound
push
cmp
add
inc
pop
jo
outsl
or
or
repz
sub
sbb
add
in
mov
xlat
mov
xor
mov
shlb
test
pusha
add
push
pop
je
push
cmc
enter
je
fisubrl
jbe
mov
dec
xchg
jg
rclb
call
push
inc
xor
inc
sarl
mov
in
nop
adc
aas
mov
mov
shll
mov
sub
or
jecxz
xchg
cs
loopne
or
unpckhps
mov
cmp
call
sbb
pushf
mov
pop
and
flds
loopne
shl
mov
or
imull
cs
les
testb
in
cwtl
mov
adc
lahf
pop
mov
xchg
sub
mov
aam
paddb
pop
cmp
inc
mov
cld
or
xchg
lret
sub
and
add
aas
inc
inc
pusha
lcall
push
outsb
cmpl
fsubl
push
popf
and
push
jecxz
lock
xchg
insb
sti
test
stos
repnz
and
push
xchg
call
mov
and
inc
lahf
loope
outsb
xor
push
sahf
xchg
add
sbbl
dec
sub
int3
dec
adcb
rolb
xor
insb
pop
adc
cmpb
add
jns
and
adc
jno
xor
mov
incb
dec
xchg
cmp
mov
fs
shlb
enter
inc
imul
adc
and
aas
lea
add
or
push
in
imul
jo
sbb
mov
and
lods
fs
dec
add
lds
mov
movsb
adc
add
inc
imul
add
call
insb
les
xchg
shlb
adc
mov
mov
fisubrs
enter
mov
lock
push
fucomip
test
cld
sub
lock
mov
or
sahf
cmp
mov
clc
in
icebp
sub
xor
scas
sub
loopne
das
push
or
and
inc
leave
ficoml
mov
imul
xchg
cmp
adcl
test
mov
add
test
inc
int3
loopne
mov
add
adcl
sub
add
arpl
jno
lods
dec
ljmp
test
mov
sti
sbb
sbb
and
xlat
mov
mov
mov
mov
je
cli
pop
mov
outsb
call
add
jg
pop
mov
shl
mov
nop
test
fucomp
mov
ret
or
or
mov
sahf
ss
in
add
out
movsl
ja
shrb
pop
je
lcall
sbb
pop
nop
inc
xchg
cli
daa
inc
test
ret
aam
movsl
fsubrs
les
clc
testb
mov
add
dec
test
ja
push
add
or
test
inc
fstps
lahf
test
mov
adc
inc
push
push
lret
lcall
data16
rol
jo
jns
sbb
bound
outsl
bound
nop
mov
or
aad
ret
popf
mov
sbb
inc
aam
xchg
nop
xchg
es
inc
adc
movsl
mov
lret
pop
lcall
jge
dec
xor
push
pushf
push
daa
adc
fmuls
add
mulb
loopne
or
loop
loopne
add
cmp
sbb
sbb
jnp
fisttpl
and
xchg
push
lock
jmp
xor
and
lock
fbld
test
jl
and
mov
test
shl
cmp
fwait
xchg
inc
icebp
mov
push
lods
or
into
mov
push
lock
adc
pop
enter
push
adc
lea
lds
stc
xor
mov
jecxz,pt
fdiv
sti
and
cmp
ja
and
shll
dec
inc
mov
ror
push
divb
pop
into
mov
fsubrl
adc
fildl
sub
nop
xor
addr16
mov
shlb
ret
sbb
call
adc
cmpsb
adc
push
scas
fistps
pop
fs
inc
sbb
inc
jo
cld
dec
in
cmpsl
push
leave
dec
test
xchg
fs
adc
bound
sbb
sbb
jle
ret
sbb
call
push
movb
hlt
repnz
call
xor
xchg
mov
in
orb
lock
pop
adc
in
push
gs
xchg
lock
push
mov
shll
mov
comiss
mov
shlb
xchg
dec
pop
inc
xorb
cmp
mov
lds
cld
dec
sub
cmp
mov
cmp
repnz
sub
in
xchg
shlb
or
mov
inc
sub
jle
push
dec
mov
xchg
sbb
push
ror
clc
jl
call
enter
in
mov
inc
insb
cmpsl
or
mov
aad
push
adcb
jns
mov
push
in
lea
fisttps
dec
mov
imul
jo
inc
fsubr
outsl
into
ror
test
les
aam
mov
sarb
pop
push
mov
sub
mov
mov
push
negl
les
aam
mov
sbb
or
fdivr
mov
mov
mov
scas
mov
xchg
xor
xchg
mov
mov
inc
push
fwait
mov
push
scas
mov
mov
xchg
cmp
clc
cmp
dec
test
add
inc
xchg
push
or
mov
and
mov
fdivr
or
cld
or
push
sbb
loopne
cwtl
pop
add
xor
mov
fadds
mov
dec
mov
daa
in
push
cwtl
push
add
pop
popf
xor
cmp
clc
pop
in
call
mov
fwait
dec
or
pop
fucomip
and
addr16
mov
mov
cld
adc
shlb
inc
or
add
cmc
xchg
fs
test
push
dec
test
jno
mov
aam
call
pop
xchg
mov
or
pop
setg
cld
loope
lods
mov
pop
mov
and
jl
or
loopnew
insl
adc
pop
repnz
adc
mov
test
jle
cmpsb
mov
push
push
mov
enter
and
int
das
lods
js
jns
popf
pop
cwtl
xchg
pusha
dec
and
pop
lahf
xchg
inc
imul
cwtl
jns
xorb
xchg
push
mov
cmp
mov
mov
mov
lods
fdivs
cwtl
mov
cwtl
insb
pop
cmp
mov
sbb
adc
xchg
out
shlb
pop
jbe
dec
js
call
fs
and
jne
xchg
xchg
mov
pop
in
sbb
xor
or
js
dec
or
mov
mov
into
xor
sub
rcll
mov
fimuls
inc
les
push
push
add
icebp
inc
pop
shlb
cmp
dec
or
mov
add
or
mov
icebp
jp
xchg
out
mov
mov
add
cmpl
mov
cmp
xorb
dec
sbb
mov
cmc
das
sub
adc
mov
sbb
add
jno
les
push
sti
pop
fistpll
insb
push
inc
cmp
pop
in
mov
pop
and
mov
inc
arpl
push
inc
test
pop
sarb
fs
and
pop
xchg
or
push
cmp
adc
and
xchg
pop
xor
in
pop
es
mov
sbb
cwtl
orl
test
test
mov
mov
addb
push
dec
sub
add
add
jnp
dec
pusha
out
cmp
sub
sub
pop
mov
test
aam
sahf
jge
push
mov
rcrb
and
leave
out
dec
mov
push
adc
dec
mov
dec
js
cs
xor
inc
pop
cs
lret
out
sbb
les
in
sub
scas
mov
insb
les
ss
fnstsw
out
rolb
pop
mov
data16
mov
xor
rcr
add
mov
lahf
add
mov
mov
pop
je
clc
mov
adc
mov
loopne
sub
inc
jns
cmc
cmp
popf
rorl
sbb
lea
jmp
jbe
jb
cmp
sar
sub
dec
clc
stos
in
pushf
test
stos
lret
jl
mov
imull
pop
les
emms
pushf
sbb
sarb
clc
mov
les
sarl
push
in
xchg
stos
cmp
enter
rolb
xor
push
dec
push
sbb
in
jl
test
hlt
mov
outsb
xor
add
dec
je
and
add
daa
push
or
js
or
xor
jmp
and
rolb
andb
mov
fs
xor
xor
out
cwtl
sub
or
add
mov
inc
sbb
jle
ljmp
or
push
and
push
lret
xchg
sbb
in
adc
in
aaa
nop
rcrb
xchg
and
mov
out
pop
xor
outsl
sahf
push
mov
ja
fmull
mov
and
xchg
scas
pop
clc
inc
aam
jbe
mov
lret
lds
cld
nop
in
mov
fsubrl
add
imul
adc
or
ja
and
xor
cmc
sub
popf
in
xchg
lcall
movsb
ficomps
cwtl
mov
or
arpl
and
sahf
dec
insb
jg
pop
sarl
add
and
rcrb
iret
or
out
pushl
ss
hlt
jo
test
xor
fldenv
unpckhps
sbb
pop
xchg
pop
mov
cmp
add
cmpb
xor
daa
fdivrs
dec
jo
cmp
mov
adc
sahf
cmp
shl
or
sbb
andb
pop
pop
pop
xor
mov
hlt
ds
add
sbb
jp
nop
push
and
inc
je
out
cltd
mov
or
dec
test
stos
sbb
stos
jl
push
loop
insl
bswap
inc
mov
pusha
ret
push
enter
mov
or
ss
add
or
clc
cmp
push
mov
je
ja
xchg
inc
add
mov
mov
mov
das
xchg
add
fists
mov
xorb
add
jmp
icebp
or
test
adc
sbb
xor
add
mov
pop
cs
mov
dec
pusha
jnp
jl
inc
sbb
mov
pop
popa
mov
pusha
pop
leave
leave
gs
inc
lock
and
aam
js
stos
cmp
sub
adc
cld
cmp
add
or
test
fdivrl
ffree
popf
loop
mov
mov
es
cmp
or
sub
ss
or
dec
push
addl
int3
and
xchg
push
push
and
sti
mov
jns
rorb
add
in
jge
popf
jle
or
leave
push
xchg
les
cli
fs
mov
mov
fdivs
jbe
nop
and
jg
xor
aam
stos
mov
pusha
rolb
getsec
insl
ds
xchg
mov
imul
or
mov
pop
jne
pop
push
lret
and
or
mov
rcrl
rorl
push
or
mov
or
or
data16
dec
adc
mov
icebp
je
pop
fstpl
mov
cld
notl
movsb
les
mov
and
fistps
decb
push
mov
push
push
or
aam
test
dec
ret
sub
lcall
lods
pop
shlb
and
add
sbb
adc
mov
pop
aam
and
out
cld
loopne
and
sets
mov
cli
sub
loopne
stos
mov
sbb
sbb
inc
or
std
push
mov
mov
jp
jbe
and
jge
test
dec
push
sub
xorb
sbb
push
push
xchg
ficompl
loopne
pop
lods
mov
cmp
outsb
mov
mov
cmpsb
xchg
dec
icebp
push
jo
add
les
insl
sbb
push
hlt
add
jle
xor
and
cmp
add
mov
fmulp
push
xor
mov
daa
stos
mov
mov
bound
pop
add
push
sbb
rorb
icebp
xlat
xor
ss
dec
add
inc
fadd
lods
or
shlb
mov
addb
push
stc
icebp
mov
nop
adc
push
add
test
bound
lds
jo
xchg
xorb
pop
push
mov
test
paddd
mov
or
lock
movsb
std
loope
mov
js
mov
jbe,pt
test
not
stos
add
jg
cld
leave
mov
nop
add
add
adc
xlat
aam
andb
andb
add
and
fcoml
xlat
sub
sub
inc
xchg
or
adc
mov
cmp
aas
jge
sub
lret
mov
std
and
push
adc
xor
mov
pop
and
pop
cmp
push
and
push
test
push
scas
jno
cmpsl
lahf
add
fmuls
cmp
mov
add
jp
outsb
addr16
incl
push
rcrb
pusha
lock
loopne
scas
ret
js
ljmp
xchg
cld
push
daa
push
jnp
in
xlat
xchg
cmp
cltd
or
into
cmp
mov
call
js
or
xor
jmp
insl
push
loop
add
loop
xor
shl
dec
mov
jl
jl
add
push
sbbb
push
adc
push
fldt
push
jg
and
push
or
mov
or
mov
fcoml
es
clc
sub
sar
inc
adc
mov
js
or
bound
mov
xchg
xchg
dec
loopne
xchg
push
or
mov
aam
shrb
xor
int3
popw
fcom
aas
pop
xchg
xor
inc
push
push
fcoml
xor
stos
push
and
add
add
je,pn
and
adcb
out
or
dec
sbb
pop
dec
nop
repz
out
in
fsubrs
jne
sbb
sub
inc
mov
imul
loope
add
mov
adc
subl
leave
mov
xchg
cmp
shlb
cld
into
repnz
jnp
cmpsl
sub
shlb
inc
mov
mov
jmp
aas
xor
xor
xor
mov
jo
or
jecxz
aam
add
dec
mov
negb
sub
add
pop
and
cmp
mov
push
push
mov
fsts
adc
sbb
out
or
and
adc
pop
mov
enter
add
xchg
popf
xor
adc
pop
xchg
or
shlb
add
mov
ss
fcomps
xchg
mov
orl
jmp
cmp
xchg
mov
xchg
add
leave
mov
and
out
test
imulb
iret
add
int3
daa
dec
pop
jg
push
lea
pushf
xchg
inc
xchg
mov
and
lods
fstl
loope
mov
and
sub
adc
outsl
adc
mov
sarb
fimull
les
call
aas
adc
cli
cmp
aam
scas
dec
inc
movsb
mov
add
iret
adc
sbb
add
pop
or
scas
cli
sbbb
rcl
das
hlt
mov
movsb
popa
pop
pop
and
adc
add
or
daa
icebp
shll
sti
scas
cmp
arpl
bound
mov
push
sbb
and
xchg
dec
xlat
bound
inc
movsl
es
cmp
xor
xor
dec
jmp
lock
hlt
push
add
sub
xchg
sub
cmp
push
pop
mov
xchg
pop
stc
fdivrs
ficoms
jl
arpl
les
or
les
pop
nop
mov
dec
mov
inc
fs
nop
hlt
push
iret
lret
sub
arpl
pop
movsl
xlat
lock
dec
adc
dec
ljmp
sti
push
mov
xor
push
sbb
pop
and
push
jo
sub
arpl
add
sub
adc
mov
jecxz
pop
push
and
mov
shlb
mov
jne
xchg
add
or
or
adc
test
adc
rorl
pop
inc
sbb
inc
pop
mov
mov
test
pop
hlt
inc
xchg
xor
pop
dec
inc
mov
push
sub
fs
lret
mov
fdivrs
add
testl
popa
push
shlb
test
addr16
test
sbb
cwtl
xor
add
xor
cmp
sub
adc
ret
xor
cli
xor
jns
rcll
mov
and
mov
mov
lret
cs
adc
decl
shlb
cmp
outsb
add
mov
push
dec
mov
sarb
inc
add
aas
in
and
adc
incb
dec
add
jnp
push
adc
push
jnp
shrl
sti
and
cmp
inc
aaa
cmp
pop
hlt
rclb
daa
xchg
test
jle
inc
xchg
mov
adc
xchg
cli
or
push
xchg
adc
stos
fs
mov
sbb
inc
adc
dec
mov
adc
dec
and
cwtl
mov
fdivl
dec
push
test
add
sub
sarb
sub
sarb
fnsave
and
lahf
shrb
jns
adc
jecxz
fiadds
fsubs
inc
xchg
sbb
stc
fs
xor
xchg
ljmp
mov
push
mov
stos
jp
add
sub
or
sbb
and
ret
mov
pop
dec
sbb
xchg
mov
and
and
adc
je
mov
clc
int3
add
mov
lcall
idivb
in
popf
pusha
adc
fisubs
adc
sub
and
jo
pop
push
jo
cmp
and
jns
das
mov
xchg
cmp
call
add
and
or
imulb
ja
hlt
push
enter
adc
scas
push
mov
lods
push
xor
pop
xor
es
and
xorl
sbb
xor
stc
mov
inc
mov
pop
pop
pop
subb
or
test
push
xor
adc
flds
stos
stos
or
xor
mov
pop
cltd
ret
add
mov
gs
or
adc
or
add
jae
nop
inc
ljmp
or
enter
and
cmpb
fdiv
adc
addb
lea
sbb
adc
mov
inc
fnstenv
adc
cwtl
dec
lock
adc
mov
jbe
sub
or
test
inc
xchg
ss
cwtl
lret
aam
or
popa
add
pushf
test
cmp
movsb
nop
aaa
adc
inc
inc
test
rcll
aam
mov
insb
fsubs
enter
das
xor
cmp
push
push
das
movsl
cld
push
nop
hlt
lret
ffree
rcrb
mov
or
push
push
leave
push
mov
dec
push
jl
mov
das
or
or
mov
neg
push
je
daa
pop
push
faddl
fstps
iret
das
rorb
jo
cli
cmc
xchg
rolb
aam
xchg
sahf
xor
loope
inc
cmp
fdivrs
out
subb
stos
inc
fadds
sub
and
inc
clc
dec
sti
fs
repz
inc
enter
lods
mov
cld
adc
out
xor
pop
mov
ljmp
div
and
pusha
mov
pusha
dec
and
pop
push
aaa
in
call
or
mov
push
lock
adc
fstp
je
cld
adc
ss
cwtl
cmp
test
cmp
and
ds
lret
jns
fs
in
aam
mov
and
push
mov
dec
pusha
mov
fistl
notl
sarl
add
pop
or
mov
vprotd
mov
mov
lret
nop
scas
scas
mov
push
out
add
jnp
sbb
testb
and
imul
test
pushl
pop
cmp
cld
dec
push
push
mov
xchg
out
sub
stc
js
int3
sbb
icebp
and
ss
xchg
adc
cmp
jge
lcall
cmpsb
stos
dec
int3
inc
or
or
cmp
inc
jl
pop
add
sub
sbb
loope
lods
push
imul
cltd
mov
sbb
rolb
paddusb
popf
and
inc
dec
sti
ljmp
pop
jo
inc
dec
adc
push
pop
mov
mov
jo
mov
adc
mov
mov
aas
call
xor
or
push
mov
cmpsl
imul
jecxz
mov
lahf
or
xchg
enter
mov
ljmp
out
es
cmp
mov
pop
mov
adc
sub
lret
adc
dec
push
jmp
lods
test
sti
sub
loopne
xlat
js
dec
lods
push
in
jge
daa
cltd
xor
inc
or
fidivs
xor
sbb
adc
int
imul
repz
xchg
inc
xor
in
test
sub
cmp
xchg
push
daa
stos
and
sub
pop
lods
jo
or
xchg
cmp
mov
dec
cmp
lcall
call
stos
jge
sbb
popa
push
imulb
sbb
cmc
push
add
dec
or
xchg
or
in
or
enter
enter
jg
mov
xchg
add
cmp
ret
push
jl
mov
inc
adc
loop
lods
ss
pushf
cltd
fs
cwtl
ljmp
dec
icebp
ret
cmp
adc
popf
sbb
jo
jge
out
mov
movsl
xor
adc
mov
adc
iret
fdiv
orl
mov
insb
loop
pop
push
pushf
fcomps
jo
sbb
dec
mov
mov
lret
and
cmpsb
pop
cmp
into
push
shlb
xor
mov
les
and
mov
or
pusha
cmp
sub
idiv
fdiv
aam
clc
pop
les
popa
imul
push
jb,pn
mov
daa
add
idivl
lods
idivl
or
ja
push
sbb
in
scas
pusha
lods
icebp
aaa
ss
fwait
out
cmp
adc
add
cmp
repnz
pop
lods
mov
cmp
imul
es
ljmp
je
fcomi
cmp
push
in
ss
scas
call
sbb
ds
cmp
and
mov
add
mov
ja
in
pushf
jns
out
or
das
cmc
adc
les
push
popf
stc
shlb
cmp
cmp
pop
xor
xor
mov
outsb
push
push
xchg
ljmp
inc
sbb
shll
fdivl
pusha
add
adc
adc
push
nop
mov
cmp
mov
cmc
mov
adc
nop
sbb
in
cmp
adc
lods
pop
jg
pop
and
cs
mov
adcl
andl
xor
push
shl
cmp
shlb
jno
pusha
outsl
push
mov
cli
lock
fidivl
mov
jno
pusha
mov
push
sbb
push
leave
push
mov
aaa
nop
add
rcrb
aas
add
outsl
je
jmp
adcb
jecxz
rcrl
sub
out
dec
and
or
pop
insb
fcmovnu
stc
sub
mov
add
lock
fdivrl
int3
sub
xlat
mov
or
dec
mov
mov
xlat
mov
rorl
sub
daa
aam
inc
shrb
mov
fcoms
sub
jnp
pop
inc
loope
std
xor
clc
and
cmpsb
test
mov
xor
mov
or
adc
cmpsb
xchg
cmp
ss
lock
call
or
mov
mov
or
jne
add
les
sub
mov
pop
and
sbb
xchg
mov
add
das
add
mov
stos
clc
in
movsb
adc
lahf
add
pop
je
push
push
xor
adc
add
sub
aam
rclb
test
fstp
cmp
sbbl
popf
int3
xchg
inc
stos
jno
xorb
les
adc
cmp
pop
or
in
push
mov
adc
test
inc
and
jl
push
cmpb
mov
cmovo
ss
lret
sbb
inc
mov
and
in
push
or
aas
or
add
sbb
jl
push
and
rclb
fldenv
add
inc
and
prefetcht1
ret
mov
inc
and
or
sub
mov
pop
fsubs
sub
shlb
fcoml
loopne
sbbb
das
sbb
pop
in
fistps
inc
js
rcr
pop
gs
pop
mov
sub
inc
and
repz
cmc
inc
adc
add
mov
mov
stos
push
and
or
mov
in
int3
dec
ds
mov
inc
or
lods
cmp
in
or
pop
mov
shlb
rorl
sbb
cwtl
cmp
insb
cmp
xchg
mov
mov
adc
testb
push
cmp
shlb
out
xor
mov
str
arpl
mov
and
adc
and
cmp
shlb
mov
pop
loopne
mov
add
insb
add
mov
cmp
aaa
shll
mov
push
cmp
lret
xchg
pushf
mov
repnz
andl
xchg
push
in
inc
jnp
pushf
push
mov
jl
jns
inc
inc
aam
dec
or
aam
inc
mov
popa
jl
test
lods
jb
fcomps
cmp
sbb
rolb
popf
dec
nop
daa
inc
imull
sub
rclb
nop
xchg
enter
add
pop
jg
mov
outsb
push
pop
ja
inc
lods
test
add
sarb
sbb
dec
fwait
adc
mov
in
lahf
cmpsb
add
outsb
mov
and
and
mov
and
insb
add
lock
lods
and
pushf
add
out
xor
jnp
mov
and
push
orb
test
hlt
push
imul
inc
or
or
loopne
loopne
test
outsl
sub
std
fcomps
arpl
hlt
and
and
dec
mov
add
jne
les
fs
insb
pop
dec
dec
enter
ja
or
and
imulb
and
das
jne
or
mov
mov
outsb
cmp
pop
cmc
lock
push
sub
cltd
add
fnstenv
or
add
mov
cmp
mov
mov
xchg
pusha
pop
push
cmp
ds
dec
rolb
push
mov
sub
mov
shrb
push
xchg
lock
lea
insb
rcrb
shrb
push
and
hlt
mov
cwtl
roll
fsin
andb
mov
loopne
orb
insb
or
pop
fs
add
test
outsb
lds
and
cld
pop
cmp
push
int3
xor
adc
das
pop
cwtl
or
pop
out
pop
clc
lods
or
imul
mov
sahf
aaa
xchg
scas
and
in
sbb
push
rclb
addb
aas
sti
ja
sbb
out
sub
nop
loopne
sarb
jecxz
mov
add
push
push
test
cs
add
orb
pop
fdivrl
popf
fmul
inc
mov
mov
pop
pop
out
and
push
fcos
or
lock
aam
inc
xor
xchg
jbe
inc
jg
lock
test
sub
cmp
xchg
nop
imull
test
lods
daa
sub
add
xor
mov
lea
fmull
adc
push
push
cwtl
pop
xor
movsb
fdivs
push
sbb
jne
ret
repz
jmp
mov
fadds
lds
loope
sub
pusha
pop
dec
mov
outsb
aad
aad
fsub
imul
and
cmp
dec
cmpsb
push
adc
std
cwtl
movsl
mov
je
not
call
mov
lea
pusha
mov
and
arpl
jne
mov
popa
cwtl
roll
mov
and
popf
adc
or
adc
inc
loop
mov
and
pop
outsl
inc
addl
in
inc
add
in
sti
mov
adc
lret
cmp
cmpb
pop
jecxz
add
mov
cs
lret
push
rcr
test
dec
lods
mov
aad
enter
cmp
pop
mov
nop
sub
fmull
lds
add
mov
pop
test
xor
rolb
js
les
pop
fs
call
xchg
or
cmc
adc
or
hlt
add
sub
lret
sar
pop
jle
insb
adcl
xchg
push
push
mov
lock
adc
loopne
or
add
cmc
push
push
les
and
cwtl
aam
pop
cwtl
cwtl
or
ja
and
xor
mov
ror
rorb
cmp
or
inc
sub
aam
add
and
xor
sbb
icebp
mov
loop
in
gs
mov
mov
xchg
cld
adc
dec
sub
xor
fsts
shr
push
inc
sbb
cmp
cmp
sbb
sbb
pop
inc
jecxz
dec
sti
in
cwtl
shll
repz
fldl
sbb
push
xchg
test
jnp
mov
add
xor
sub
loope
inc
dec
movsb
add
and
jge
or
rorl
xchg
das
push
mov
add
mov
add
leave
sub
push
adc
sbb
pop
push
add
cwtl
sti
xlat
call
cmp
push
adc
je
mov
push
fwait
sbb
sub
daa
bound
dec
in
je
jae
sbb
sbb
inc
dec
shlb
mov
or
pop
imul
pop
inc
mov
adc
lea
clc
inc
push
or
cmp
mov
nop
test
call
dec
mov
sti
pop
mov
pop
push
or
mov
sti
lock
mov
xor
cmp
lods
and
jge
mov
arpl
je
ja
xchg
adc
add
lahf
pop
mov
and
mov
adc
lea
clc
fsubrs
out
cmp
jle
mov
inc
sbb
arpl
clc
cld
xchg
inc
push
daa
cmp
scas
push
hlt
lea
cwtl
and
adc
cmp
mov
ret
or
mov
nop
and
movsb
xor
mov
jo
out
enter
mov
pop
sbb
push
out
jne
mov
inc
pop
leave
or
loop
xor
adc
mov
rcl
push
mov
push
and
or
pop
mov
mov
dec
mov
dec
sub
cmp
adc
mov
lret
nop
xchg
in
or
inc
mov
aam
mov
or
jae
shrl
mov
icebp
mov
sub
cli
mov
sub
ficompl
xorl
mov
sbb
call
popa
hlt
and
je
out
or
mov
mov
aam
js
lret
sahf
mov
cld
push
xor
adc
xor
ret
sbb
or
and
pop
sarb
mov
sub
push
jg
sbb
mov
pop
push
je
mov
pop
xchg
xor
movsl
mov
insb
xchg
ss
mov
sbb
pop
xchg
jbe
jb
nop
loopne
addr16
or
nop
pop
adc
push
sahf
or
and
add
mov
add
add
xor
pop
rorb
rolb
decb
mov
or
push
ljmp
push
and
pushf
int
addr16
add
out
push
mov
stos
mov
sub
push
push
and
or
inc
int3
mov
iret
les
adcl
in
lahf
push
inc
movsb
jl
bound
mov
mov
psubusb
mov
adc
and
or
xlat
lods
repnz
xchg
mov
rclb
ja
adc
daa
inc
decb
adc
push
xor
adc
stc
sbb
in
mov
fimull
mov
es
imul
cmp
stc
mov
xchg
cmc
xchg
fdivrs
xor
mov
sub
or
les
std
cmp
lods
xor
xor
pop
int3
adc
fwait
decb
dec
adc
add
sbb
inc
andb
add
pop
cld
cmp
mov
inc
adc
aas
cmp
xchg
mov
add
or
icebp
loop
mov
jg
hlt
out
enter
sbb
mov
das
add
ja
mov
ds
or
push
popa
mov
add
dec
inc
sti
pop
in
cmp
mov
sbb
cli
and
sbb
pop
add
cltd
addl
aad
xor
lea
clc
and
add
pop
adc
ret
out
add
adc
xor
inc
dec
or
cwtl
adc
adc
les
jnp
xchg
fdivrl
sub
orb
mov
lret
xor
pop
push
pop
icebp
push
pop
dec
inc
rclb
jl
fmull
add
and
xchg
adc
pop
into
je
js
add
pmaxsw
insl
inc
cli
in
enter
shr
sub
mov
add
add
pop
les
notl
hlt
or
xor
sub
mov
inc
aam
add
sar
pop
mov
mov
xor
sbb
pop
jg
cmp
outsl
jmp
popa
sti
hlt
fmull
xlat
aad
pop
jmp
lret
lock
rcrb
leave
test
add
out
into
lods
pop
mov
jnp
stos
ret
pop
push
into
and
pop
cwtl
jl
out
or
mov
add
adc
test
js
cs
movsb
rolb
es
gs
pop
jle
ljmp
jo
pop
mov
dec
add
push
les
ja
pusha
push
ret
mov
sarb
mov
rcrl
add
sub
repnz
dec
mov
dec
mov
popf
jl
je
sti
dec
pop
add
sbb
mov
inc
pusha
pusha
mov
pop
test
sub
and
xor
mov
lret
cmp
lock
cmpb
cmc
add
in
mov
fistpl
clc
pop
aam
sub
shrb
je
push
xchg
mov
cld
test
rcll
aas
nop
dec
mov
and
add
mov
ds
inc
push
fcmovb
arpl
stc
lds
je
lret
frstor
and
and
mov
push
mov
lock
and
push
out
test
or
test
adc
sub
xchg
jl
xor
add
and
sti
rcll
or
and
jns
ret
adc
push
popf
aam
pop
popf
dec
adc
loop
mov
scas
jecxz
dec
pusha
leave
adc
xor
push
repnz
lret
sub
xor
mov
mov
pop
mov
pop
jbe
sbb
lea
pusha
pop
inc
mov
leave
xorl
jbe
sbb
in
and
mov
or
lahf
clc
leave
push
scas
fisubrs
sbb
or
jge
pusha
push
fcoml
pop
mov
add
in
and
and
mov
sub
and
movsb
sbb
or
fidivrl
xor
rclb
xlat
pop
dec
dec
cmp
scas
pop
sbbb
lret
inc
jg
mov
hlt
rcr
push
xor
outsl
cmc
mov
adc
mov
push
xchg
test
sub
lock
push
push
leave
cli
clc
adc
mov
scas
add
icebp
or
testb
je
fstpt
jnp
cmp
loopne
inc
add
nop
daa
mov
js
das
push
cli
dec
add
hlt
stos
or
in
xor
clc
dec
sarb
xor
xchg
mov
clc
fstl
inc
sub
repnz
enter
daa
push
mov
sub
xor
mov
cwtl
push
lcall
dec
adc
mov
jl
add
das
sbb
arpl
adc
shl
adc
pushf
and
push
fsubrs
roll
outsb
addl
hlt
decb
push
jl
push
push
in
mov
lock
enter
xor
and
mov
in
repnz
hlt
add
xchg
push
sub
pop
lods
add
xchg
fidivrl
jnp
fdivl
fdivrl
push
mov
outsl
inc
out
xchg
lock
sub
pop
xor
sub
pop
sbbb
ja
mov
adc
or
lods
loopne
std
cmp
inc
loopne
push
pushf
adcl
lock
and
xor
out
xor
test
pop
and
dec
hlt
rorb
or
push
xchg
mov
dec
inc
and
andl
xchg
cwtl
fsubrl
incb
repnz
or
push
fldl
adc
and
dec
repnz
pushf
sbb
add
sahf
push
jo
mov
les
push
mov
adc
cmp
sub
sub
pop
xchg
or
aas
push
addb
inc
ds
mov
jbe
and
add
xchg
andb
push
enter
pop
push
aad
pop
shr
stos
dec
cs
mov
je
jl
or
xor
add
je
fwait
fsubl
xor
mov
add
sbb
xchg
pop
xor
dec
sub
xor
sub
enter
sbbb
std
mull
or
fcomps
test
enter
cld
add
daa
std
add
and
or
cli
mov
adc
or
imull
icebp
in
or
pop
pop
or
sti
pop
test
ljmp
rcll
sub
in
push
xchg
mov
adc
and
jne
mov
xchg
cmp
add
bound
xlat
mov
or
or
or
xor
pop
ja
pushf
daa
mov
sarb
fsubrl
and
adc
push
or
or
mov
subl
xchg
daa
or
pop
mov
pusha
int3
inc
pusha
jo
push
rolb
sbb
sbb
pop
fdivr
inc
cltd
inc
or
fadds
push
pusha
xchg
ja
clc
xor
mov
or
adc
ret
xchg
mov
loopne
mov
and
fisubrs
call
mov
mov
rclb
inc
hlt
and
pop
fadds
pop
ja
xchg
mov
xorl
aam
jle
pop
mov
add
les
stos
pop
dec
sbb
shrb
inc
or
sbb
and
adc
test
test
xor
pop
nop
jo
pop
aam
ss
pop
push
dec
rorb
pushf
xchg
pusha
fsubrp
adc
lahf
pop
nop
sbb
sub
adc
ja
adcb
and
cmp
add
push
pop
dec
cld
or
mov
hlt
jle
mov
inc
add
sahf
imul
and
cmp
and
das
xlat
iret
pop
and
pop
test
aaa
dec
hlt
pop
add
push
dec
pop
add
iret
add
dec
xlat
sub
nop
int3
rcrl
dec
and
in
test
push
imul
clc
and
les
incl
add
cmp
pushf
add
test
lock
out
iret
xchg
mov
xor
test
sti
test
push
xorl
in
sub
xchg
sub
insl
or
xlat
fiadds
fisubrl
aas
out
iret
adc
push
pushf
rcrl
and
int3
push
shrb
cld
popf
aam
insl
or
rcr
outsb
sub
js
and
cmp
je
call
xor
std
push
mov
pop
pop
jmp
outsb
pop
dec
push
xchg
es
mov
pop
shrb
icebp
rclb
std
adc
fdivrl
mov
sub
fidivl
xor
cli
and
ffree
call
orl
js
push
cli
test
inc
out
xor
clc
dec
call
outsl
pop
ds
sbb
test
ljmp
mov
cmp
push
push
les
mov
mov
mov
out
mov
mov
pop
add
and
aad
cwtl
call
bound
in
pop
enter
add
xorl
pop
or
inc
mov
push
clc
inc
push
jl
mov
test
mov
icebp
xchg
xor
inc
lock
aam
mov
lds
shlb
xchg
inc
clc
cli
jecxz
nop
adc
in
dec
sub
and
in
test
addl
orb
push
call
add
iret
sbb
fimuls
shll
jg
dec
or
push
nop
out
adc
mov
movsb
mov
nop
lods
repnz
inc
sub
xor
add
inc
insl
add
sub
and
cmp
mov
adc
dec
add
or
push
dec
rol
pusha
popl
push
lret
mov
jmp
xchg
mov
xchg
xlat
popf
nop
nop
ret
push
jo
or
sub
insl
jo
mov
aas
nop
mov
scas
sub
pop
jnp
push
pop
pop
inc
jo
jbe
cli
mov
scas
popf
movsb
sub
aam
or
inc
pop
fwait
pop
sub
xor
fnstenv
stc
std
or
imull
cwtl
cwtl
jnp
sarl
loopne
aaa
xor
sbb
addr16
call
leave
cmp
and
xchg
push
mov
test
in
in
jbe
rorb
xor
jg
js
jns
add
repnz
pop
and
dec
clc
mov
hlt
pusha
sub
push
movsb
out
divl
repnz
push
and
or
or
popf
mov
cwtl
add
fcmovnu
add
arpl
push
in
or
pop
mov
or
mov
xchg
push
add
xor
movsb
mov
add
pushf
or
lcall
pop
addr16
sbb
xor
das
std
mov
call
enter
adc
pusha
test
les
je
shll
add
in
pusha
push
rorb
scas
cmp
adc
or
je
dec
shrl
add
scas
cmp
add
std
mov
pop
ljmp
mov
ret
pop
sarb
add
in
inc
pop
sub
mov
inc
adc
inc
andb
jno
jnp
loop
pusha
add
bound
or
ds
pop
dec
aad
scas
leave
mov
add
mov
mov
fadd
and
repnz
pop
stos
mov
sbb
mov
sbb
es
or
xor
and
in
or
stos
jb
pop
popf
test
push
pop
push
mov
and
push
nop
jp
ljmp
or
mov
ljmp
xchg
and
push
xchg
jmp
adc
and
push
sbb
repnz
faddl
shll
mov
popa
and
jno
imul
and
or
fs
scas
aam
orb
cmc
dec
ror
or
mov
push
sub
leave
repnz
sub
repz
std
popa
in
pop
push
nop
sub
cld
jl
scas
sbb
scas
sahf
orl
pusha
adc
lods
adc
sbb
inc
cs
sub
push
mov
test
ret
inc
test
sub
cmp
sbb
push
and
adc
ret
aam
lret
ret
jns
add
pop
and
inc
subb
faddl
jle
push
or
add
xor
inc
or
and
adc
adc
dec
in
roll
into
or
adc
mov
jb
adc
fists
mov
and
or
cmpb
fisubrl
mov
mov
push
into
and
icebp
ja
lock
inc
js
mov
add
mov
fmuls
inc
cmp
sbb
push
push
xor
mov
xchg
je
cli
imulb
loopne
sbb
and
je
test
cld
loop
test
cmp
add
stc
or
lds
cld
push
int3
int3
xchg
or
inc
daa
lea
xor
mov
movsb
or
push
push
out
pop
dec
dec
es
mov
sti
or
cmp
xor
cwtl
sbbb
mov
xchg
adc
inc
pop
mov
nop
mov
stc
test
popa
les
in
pop
add
sbb
xor
pop
jo
mov
jnp
int3
in
int3
xor
pop
adc
lds
inc
inc
inc
and
jl
sbb
inc
mov
imul
cmp
stc
or
out
adc
or
call
mov
es
xchg
jnp
sub
jns
push
and
movsb
xchg
dec
rolb
xor
mov
cmp
clc
push
push
stc
call
and
or
orl
nop
je
in
test
dec
mov
cmp
out
push
cmp
push
jbe
xor
mov
call
push
pop
fisubrs
fmuls
xchg
mov
leave
orl
fwait
cmp
call
movsl
pusha
cmc
mov
rcrl
inc
adc
mov
aad
mov
lods
gs
test
pushf
or
and
sar
enter
fstpl
pop
nop
sarl
jno
imul
dec
fldl
pop
addb
and
mov
dec
fldcw
hlt
sbb
cwtl
call
push
sbb
mov
jb
mov
cmp
sub
add
aaa
fimuls
pop
out
push
pop
int
push
xor
add
addl
scas
fnstenv
pop
test
lret
push
leave
lock
test
iret
repz
enter
mov
or
push
mov
cwtl
jns
mov
mov
sbbb
cld
jbe
es
lahf
push
mov
test
fisttps
stc
mov
cs
add
sub
and
push
icebp
fsubp
mov
mov
adc
rclb
shlb
loopne
xor
enter
adc
shrl
inc
or
rolb
adc
insb
lahf
sub
or
push
xor
mov
or
pushf
mov
or
inc
movsl
adc
fs
les
xor
shlb
sub
daa
push
jle
fcoml
cmp
scas
inc
pop
adc
outsb
imulb
sub
test
mov
mov
add
xchg
clc
adc
push
xchg
and
insb
jb
rcll
push
mov
rorl
js
lret
and
les
add
in
mov
sbbb
dec
sti
lret
imul
cmp
or
insb
adc
subb
sbb
push
cmp
jo
mov
mov
xlat
cmp
cwtl
dec
outsb
cmp
sub
sahf
sub
cmc
aam
mov
hlt
add
ficoms
sarb
std
and
sub
jae
pop
xchg
mov
sbb
fsubs
aam
push
les
bound
pop
push
add
es
sbb
or
aaa
mov
cmp
add
pop
and
lods
add
adc
dec
aaa
or
mov
cmp
ja
lock
adc
mov
shrl
add
incl
mov
push
mov
lods
mov
jmp
jbe
sbb
xchg
and
jl
adcl
adc
add
aam
mov
pop
mov
addr16
cwtl
inc
pop
popf
popa
inc
inc
jno
add
cld
or
adc
das
inc
and
stc
add
push
pop
adc
enter
push
hlt
xchg
scas
nop
pusha
mov
or
adc
and
sbbl
loop
and
cmp
jg
fs
lods
mov
sbb
adc
lock
nop
call
push
lock
mov
popa
xor
insb
lock
mov
pop
jmp
cmp
pusha
dec
pop
addr16
xor
jne
cmp
fsts
dec
mov
sbbb
mov
and
or
mov
or
sbb
adc
dec
dec
imul
mov
fnstcw
roll
adc
rclb
lock
adc
adc
cli
test
cmp
dec
dec
aas
in
leave
cmp
add
icebp
movsb
ds
pop
vprotw
daa
pop
push
push
mov
out
and
add
adc
cs
sar
inc
and
cmp
fistpl
test
je
aas
fsubl
mov
sub
xlat
inc
sbb
je
loop
sbb
ret
pushf
pop
inc
push
add
scas
pushf
pop
fcompl
and
push
sbb
xor
adcb
rcrb
mov
nop
push
es
inc
xor
add
dec
pop
jo
push
xlat
rol
push
pop
clc
inc
cli
dec
mov
jo
lods
xor
or
and
jns
nop
xor
add
jmp
rolb
mov
and
adc
nop
push
pavgb
cld
pushf
mov
adc
orl
xorb
pop
cmp
jecxz
adc
pushf
or
sub
cwtl
sub
or
pop
sub
daa
jge
nop
mov
cli
in
adcl
jl
push
mov
pop
cmovae
and
inc
cmp
das
jmp
jo
arpl
movsb
and
popa
fnstsw
ret
sub
scas
jge
addb
mov
jl
and
js
push
mov
and
scas
cwtl
enter
mov
add
and
or
jo
inc
rolb
mov
xor
lds
sti
adc
pusha
xor
mov
rorb
add
scas
int3
lods
mov
jae
mov
sbbb
or
adc
inc
enter
loopne
ret
mov
cmp
fisttpll
jle
inc
sbb
xor
ficoms
movzbl
or
sub
and
mov
fs
and
dec
push
ds
cmp
enter
ret
cld
in
add
pop
imul
loop
nop
and
or
mov
inc
aam
hlt
imul
ret
ss
test
and
mov
inc
add
dec
add
cmpsl
movsl
shlb
call
add
inc
dec
mov
lods
dec
sub
mov
xchg
and
sahf
daa
mov
push
hlt
lahf
jl
or
fisubrs
xor
cs
leave
adc
adc
or
sub
insb
dec
xor
cld
es
adc
mov
enter
sub
xchg
mov
push
pusha
orb
nop
inc
sub
and
dec
or
das
divl
jo
in
or
aad
mov
or
cmp
push
fwait
adc
mov
xor
jns
ljmp
lods
mov
xorb
jae
rclb
add
mov
sbb
stc
int3
adc
sbb
subb
mov
mov
mov
adc
enter
mov
mov
scas
push
aam
loopne
subb
stos
cmp
xor
push
push
outsl
or
mov
sub
insb
sbb
sub
insb
adc
dec
mov
std
call
pop
test
add
rcl
adc
sub
imul
inc
push
inc
mov
lcall
or
or
cld
mov
sbb
and
sbb
jecxz
cmc
addb
add
clc
xchg
cs
addb
adc
fs
or
cmp
add
mov
cmp
filds
pop
stos
mov
adc
add
xchg
insb
inc
jns
dec
inc
dec
xor
dec
and
add
inc
add
and
mov
es
mov
jne
clc
lret
and
adc
mov
scas
in
sbb
cltd
sbb
ds
pop
imul
xchg
mov
mov
cwtl
adc
push
mov
mov
loopne
aam
shlb
mov
push
push
sbb
scas
sbb
mov
xor
cmp
cmp
inc
lods
and
push
ljmp
and
sbb
ret
cwtl
pushf
es
push
jl
shrb
rcl
add
leave
ficomps
xor
or
adc
push
jns
sbb
cltd
push
daa
and
adc
mov
sub
sub
loopne,pt
jle
jp
push
test
insb
movsb
and
cld
dec
mov
mov
push
and
push
pushf
pop
sbb
pushf
inc
xchg
test
clc
sar
outsb
mov
or
add
add
iret
and
rcr
pusha
mov
mov
xchg
sahf
stos
xchg
jo
jne
in
push
aam
inc
xchg
popa
test
push
movsb
mov
or
mov
mov
or
sti
nop
or
dec
xchg
das
mov
inc
inc
xchg
pop
dec
xor
js
dec
mov
rorb
fisttpll
movsl
add
jge
mov
mov
push
xchg
ficoml
or
cwtl
and
or
cmp
out
popa
mov
out
sbb
xor
insl
adc
jl
nop
sub
cmp
cmp
mov
and
adc
ja,pt
lock
jp
loopne
test
mov
add
mov
pop
jmp
enter
xor
or
cli
movsl
mov
adc
xchg
mov
mov
or
mov
lock
cs
or
outsl
sbb
pop
clc
in
lahf
loopne
jp
es
push
lock
ja
push
lods
and
call
add
push
mov
push
cmc
jmp
aad
add
add
xchg
pop
inc
pop
xor
or
adc
aas
lods
add
adc
sbbb
fisubrs
mov
mov
stos
push
pusha
scas
add
jns
sub
push
ds
test
dec
sub
rclb
movsl
scas
adc
add
fdivs
xchg
jns
pusha
icebp
push
roll
ss
icebp
inc
sbb
add
add
in
pusha
jl
sahf
nop
cmpsl
xlat
mov
cmp
pop
in
lock
inc
scas
xchg
filds
clc
stos
fadds
xchg
jnp
in
movsb
fisubrs
push
mul
or
clc
sbb
inc
sar
outsb
mov
mov
pop
les
nop
jo
lock
pop
hlt
loopne
lret
dec
sahf
lods
inc
mov
mov
sbb
or
inc
mov
xor
ljmp
jle
inc
sub
pusha
hlt
sbb
add
mov
push
cmp
and
push
mov
pcmpgtb
dec
shlb
fsubs
lahf
pop
fs
dec
mov
push
mov
or
push
sahf
shl
dec
add
dec
enter
mov
sub
in
push
gs
sub
iret
add
xchg
mov
mov
sub
and
pop
cmp
xchg
adc
mov
scas
movsl
adc
in
add
rclb
sub
repz
movsb
or
in
push
mov
ljmp
fs
adc
or
add
xchg
push
jns
xchg
jno
xor
inc
push
mov
add
stos
sub
xlat
push
push
mov
rorl
sahf
sub
add
das
adc
jo
mov
xchg
faddl
call
push
test
in
or
rorb
sub
sub
insb
dec
call
xchg
push
push
lret
dec
mov
rcrl
sub
hlt
add
push
sub
mov
inc
sub
cmp
push
adc
bswap
push
fdivl
xchg
inc
xchg
sahf
pusha
jns
inc
stos
or
jnp
pop
std
or
mov
and
ret
rclb
ror
mov
lods
pop
jo
push
jge
hlt
add
in
pop
cmp
pop
mov
pop
orb
and
mov
je
test
lods
enter
and
pop
xchg
js
adc
or
xchg
xchg
pop
dec
movsb
sub
or
andb
inc
jmp
lcall
push
repnz
sbbl
pop
sub
insl
mov
fsub
enter
sub
test
shll
mov
add
adcl
mov
and
adc
inc
pusha
mov
outsb
loope
jle
cmp
shrl
add
mov
test
loopne
das
cld
or
in
adc
out
scas
test
push
out
jle
sbb
cld
mov
andl
jmp
mov
test
bound
mov
inc
and
pusha
push
cmc
or
xor
jge
out
dec
lret
mov
xor
pop
int3
add
add
lret
sbb
loopne
ds
or
xchg
push
sub
negb
ret
fwait
xchg
enter
add
call
scas
jne
lock
dec
mov
adc
add
push
rolb
dec
jo
in
test
fs
push
add
mov
mov
add
add
xor
repnz
adc
mov
add
adc
xor
xchg
les
scas
sbb
pushf
adc
or
push
mov
pop
mov
mov
push
mov
inc
and
lahf
pop
rorb
mov
pop
xchg
clc
mov
das
jne
xchg
cmp
out
lahf
push
cwtl
jmp
add
adc
inc
lret
mov
push
and
or
popa
mov
scas
mov
mov
nop
dec
stos
or
in
out
lea
jl
insb
das
loope
rol
push
and
inc
fadds
add
sahf
jo
xchg
xchg
js
mov
inc
out
enter
ljmp
insb
mov
mov
stc
int
out
and
stc
xchg
test
xor
lret
sbb
jbe
push
pop
push
add
pop
sub
fmuls
mov
out
mov
add
stc
je
pusha
cmp
addl
mov
cmp
sbb
mov
rorl
insb
enter
mov
cld
enter
mov
or
xor
xor
test
and
pop
sbb
mov
push
test
dec
mov
testb
pop
inc
stos
or
je
inc
cwtl
adc
and
inc
clc
cmp
or
out
push
jmp
lods
mov
mov
call
or
pop
and
add
cmp
sahf
push
inc
push
fcomps
xchg
test
push
inc
add
es
adc
jo
jo
or
fs
leave
ja
or
je
mov
pop
push
je
aad
and
and
or
add
mov
mov
dec
fsts
out
lock
cld
xchg
or
lret
dec
sahf
sub
in
mov
xor
int3
fwait
xor
sub
lret
pop
es
in
mov
push
sbb
xor
pushf
orl
rclb
mov
inc
pop
cmp
jne
mov
sahf
dec
cmc
test
add
insb
pusha
lods
shlb
or
mov
mov
inc
loopne
lock
cmp
mov
cmp
pusha
cld
jno
out
test
push
hlt
clc
adc
arpl
mov
cmp
xchg
mov
or
push
cmp
cld
xor
movsb
test
fstpt
cmc
add
fs
dec
fdivr
lret
mov
adcl
lock
jbe
arpl
xchg
insb
jl
dec
jnp
push
sbbl
xchg
and
call
xor
call
cmp
adc
push
or
mov
adc
jl
push
mov
jne
imul
adc
jo
lock
and
push
bswap
xor
enter
push
xchg
cld
sbbb
mov
icebp
nop
dec
test
and
xchg
add
movsb
and
andb
clc
adc
mov
xchg
icebp
xor
hlt
dec
xchg
nop
sub
mov
add
lock
and
in
js
add
pop
xchg
xor
add
or
push
xchg
cmp
test
or
push
mov
test
test
or
xchg
or
mov
adc
enter
stos
andl
or
push
nop
out
or
sbb
repnz
je
ffreep
inc
inc
fisubl
push
jg
fsubrs
hlt
adc
lahf
ror
iret
xchg
pop
int3
dec
or
jo
test
or
cmp
fwait
jns
andb
mov
dec
lds
cs
dec
add
je
adc
mov
lock
pushf
cmp
and
cltd
and
push
test
lret
and
mov
adc
orb
xchg
add
loop
xor
mov
mov
sbb
std
mov
rclb
into
or
sbb
inc
add
and
xchg
push
add
mov
int3
push
cmp
pop
fdivrl
sbb
xor
sahf
andb
xor
or
or
fs
push
mov
add
cld
movsl
jl
push
mov
and
add
pop
lret
iret
loopne
mov
adc
dec
pop
ljmp
nop
cmpsb
add
dec
pusha
xchg
lods
inc
loopne
and
stc
incb
inc
push
daa
mov
pop
inc
das
adc
pusha
cwtl
lods
jno
add
int
dec
js
fstpt
cmpsb
sub
mov
jne
cmpb
clc
in
or
mov
xlat
cmpl
sub
mov
sub
loop
mov
sub
imul
out
fistl
xchg
add
insl
scas
stos
push
jecxz
adc
enter
mov
lods
add
xor
mov
or
aas
fistpl
and
daa
stc
pop
outsb
enter
lahf
sub
test
ret
mov
push
jbe
pop
mov
enter
pop
loope,pt
dec
push
sbb
hlt
roll
and
les
test
jns
fsubrp
sbb
or
xchg
mov
or
or
nop
add
adc
clc
hlt
les
mov
lahf
adc
add
mov
pop
jno
push
ret
push
cld
or
push
test
inc
jecxz
adc
xchg
and
push
push
inc
sub
test
movsb
hlt
and
clc
cmp
fs
push
xor
adc
dec
adc
xor
test
mov
mov
add
test
xor
and
repz
add
mov
push
lea
dec
mov
push
inc
mov
sbb
addb
mov
sar
push
pusha
push
jo
sub
mov
gs
ja
xor
and
icebp
dec
adc
and
xor
mov
push
fsubrs
or
pop
sbb
cld
cld
xor
mov
shll
nop
inc
popf
aad
cmp
pusha
and
imul
mov
mov
adc
sub
inc
xchg
das
push
mov
xor
rcl
cmpsb
int
add
sbb
or
jmp
popf
mov
pop
inc
fmull
hlt
repnz
add
mov
out
mov
pop
nop
rcl
pop
and
sub
push
in
mov
std
adc
inc
sub
or
push
mov
xchg
js
jmp
aam
xlat
and
or
loopne
mov
push
sub
lret
in
mov
inc
or
int3
or
std
and
call
leave
mov
ds
sbbb
add
adc
xlat
add
jl
add
push
popf
sti
push
repnz
stc
nop
lret
push
mov
rcrl
add
mov
notb
dec
jmp
insb
inc
test
and
pop
jno
scas
inc
adc
xchg
pop
cmp
nop
lret
mov
mov
aaa
push
sbb
dec
loopne
hlt
push
imul
jl
jle
call
adc
fadds
sbb
mov
pop
mov
aas
or
into
clc
sub
rorb
scas
lock
lret
cld
mov
fs
cmpb
shlb
dec
test
push
add
jl
pusha
fisubrs
mov
push
flds
aaa
lock
nop
dec
jle
ret
mov
mov
dec
mov
leave
xor
sbb
mov
sub
add
inc
sbb
jecxz
sub
repz
test
lds
cli
add
xchg
scas
js
adc
popa
or
dec
push
fdivrl
clc
add
push
add
inc
hlt
orb
das
stos
inc
stos
mov
sbb
mov
repz
mov
jge
hlt
xchg
cld
adc
add
aam
rcr
inc
fsub
outsl
mov
les
pusha
into
inc
jo
sbb
enter
adc
pop
xor
pusha
jg
insb
dec
inc
mov
in
mov
mov
sbb
sbbb
pop
jns
outsb
or
ja
or
mov
dec
lock
add
je
out
mov
and
outsl
faddl
xor
popl
push
mov
push
push
dec
cmp
xchg
cwtl
xor
pop
in
lret
lock
insb
or
les
stos
inc
adc
cltd
add
test
mov
movsl
xchg
jg
adc
iret
sar
cld
xchg
jb
mov
mov
jecxz
add
lahf
shlb
jo
sarb
push
nop
mov
stos
inc
sub
das
push
dec
outsl
pop
mov
insl
notb
mov
sbb
push
lods
std
pusha
push
sub
mov
push
sahf
shrb
pop
mov
dec
pop
dec
fbstp
mov
mov
mov
add
test
add
lahf
jne
stos
inc
hlt
mov
sub
mov
xchg
mov
outsl
lods
aam
mov
pushf
movsl
lock
in
inc
fstpl
orb
fiaddl
aas
lods
dec
pushf
scas
clc
xor
dec
rorl
jo
push
mov
scas
push
in
push
mov
insb
ss
jo
jle
cmp
xor
push
in
test
adcb
idiv
out
lock
push
lock
in
rcll
fistpl
xchg
lcall
enter
sbb
push
adc
xchg
sub
pop
push
shlb
hlt
sub
shll
test
ds
or
or
scas
stc
nop
mov
add
sahf
or
adc
push
out
sbb
mov
dec
add
jo
enter
outsl
fisttpl
cmp
push
xchg
jmp
push
faddl
hlt
adc
jmp
adc
ds
inc
and
jb
add
xchg
pop
push
mov
or
add
lock
les
pop
fildll
mulb
adc
xor
mov
push
fdivl
jne
inc
add
shlb
xor
daa
insb
and
mov
loop
sub
mov
sbb
hlt
jp
mov
or
je
mov
add
and
dec
ds
ret
mov
xor
push
adcb
js
int3
or
cmp
xor
jo
pusha
mov
push
add
cmp
outsb
addb
out
lods
pushf
ds
outsl
mov
inc
das
add
adc
xor
lods
push
xchg
push
fsubl
out
inc
xor
sub
mov
insb
push
push
push
pop
fmul
pop
pop
in
or
xor
rorb
stos
emms
pop
xor
sbb
stc
jl
mov
adc
clc
or
mov
cld
mov
ja
call
es
xor
jle
call
pop
adc
push
nop
test
jae
sbb
js
js
cltd
mov
cld
mov
loope
shrb
jb
mov
out
lods
mov
mov
mov
pop
faddp
aas
outsl
imul
sbbb
push
xchg
idivl
add
int3
mov
popw
jl
dec
push
push
xor
pop
and
cwtl
loope
mov
mov
and
add
xor
loopne
jg
or
call
sarl
fadds
clc
fsts
popf
fdiv
inc
or
mov
sub
mov
cli
call
shrl
and
or
sbb
sub
cmp
sub
mov
les
pop
ja
pop
shrl
insl
mov
cmpsb
adc
popa
les
dec
add
push
and
movsb
fidivl
nop
mov
fadds
std
test
enter
nop
lods
or
cmp
int3
movsl
sub
mov
enter
or
push
mov
add
mov
es
xchg
and
mov
mov
mov
mov
mov
sbb
hlt
xorb
dec
cmp
sub
push
push
or
ds
movaps
xor
pushf
or
push
out
xor
mov
adc
sahf
es
adc
adc
add
sub
xor
rclb
cmp
popl
aam
adc
mov
lahf
push
add
add
addr16
xor
loop
mov
sub
sbb
push
and
popa
push
test
je
das
and
loope
adc
add
mov
adc
dec
shl
enter
mov
rolb
or
adc
mov
imul
movsb
cld
test
pop
loop
loopne
scas
xor
push
push
outsb
dec
jp
test
add
inc
insb
and
lret
add
or
pop
inc
mov
push
mov
push
inc
and
hlt
jp
or
dec
fsubl
mov
cmp
enter
test
cmp
orb
push
push
bound
cs
xor
adc
ja
adc
popf
mov
dec
mov
mov
mov
push
sbb
repnz
les
pop
add
hlt
mov
jl
xchg
push
xor
dec
sbb
add
mov
or
and
fstpl
in
sub
xor
fcomps
and
adc
mov
push
stos
mov
or
dec
pop
add
movsb
setns
xorb
insb
sahf
lock
adcb
sbb
sub
scas
sbbb
add
sub
push
fs
loopne
mov
cmp
lods
ret
cld
push
sbb
mov
push
xchg
jp
lods
aam
add
cmp
jae
int3
and
out
jno
inc
inc
bound
adc
xor
xor
push
and
cld
mov
jge
scas
pushf
movsb
inc
push
sar
rclb
js
mov
push
sub
test
jecxz
insb
fcompl
mov
sbbb
scas
cltd
loopne
adc
or
xor
sub
or
repz
movsl
clc
fists
inc
cmp
push
pop
repnz
out
xchg
sar
shl
daa
pop
jle
cmp
ret
loopne
mov
jne
push
andl
or
adc
loope
push
mov
adc
add
or
repz
xor
jo
or
insl
push
lahf
pop
cmp
loop
sub
mov
loopne
mov
pop
ficoms
lahf
push
push
adc
nop
test
icebp
mov
pop
adc
add
push
shl
jmp
in
je
and
pushf
push
ja
add
mov
mov
aad
adc
sbb
scas
js
je
mov
or
lea
mov
mov
mov
test
dec
dec
lods
and
cltd
call
sarl
mov
add
mov
fidivrs
push
stos
pop
inc
xchg
add
mov
shr
dec
inc
lods
xchg
daa
ss
cmp
sub
xor
and
mov
outsl
ret
mov
movsb
add
mov
jns
add
ret
fdivp
sub
add
nop
lods
adc
bound
mov
pop
loop
sbb
inc
mov
fildl
fsub
jno
popa
sbb
sarb
popf
sub
and
push
sub
and
dec
add
lods
movl
adc
mov
push
add
jle
insl
es
push
aas
call
adc
fiaddl
sahf
push
nop
add
ds
imul
rolb
mov
mov
push
sbb
mov
pop
adc
loopne
and
es
popa
cmp
and
sbb
push
mov
mov
mov
dec
outsl
ja
and
fisubl
pop
daa
xor
lcall
in
ja
int3
lret
test
cmp
sub
mov
dec
aas
push
mov
cmpb
pop
jbe
ret
icebp
add
mov
subb
or
lss
push
loopne,pt
xchg
fs
out
or
sbb
lea
push
xor
dec
lds
mov
or
add
push
setle
sbb
or
nop
or
cld
xchg
add
xchg
inc
inc
fisttps
repnz
daa
cmp
push
ja
push
movsl
imul
popf
xchg
cwtl
pop
fs
sbb
add
mov
loope
cmp
test
mov
xchg
insb
add
add
jle
sub
outsb
jbe
cwtl
add
push
rol
lock
sub
int3
ljmp
jmp
ret
test
sbbb
fsts
lret
lods
push
pusha
mov
aam
das
jo
xchg
xor
mov
pop
sbb
or
out
cltd
sub
jle
insb
dec
dec
loop
xlat
ljmp
push
xor
inc
fadds
jns
xor
scas
nop
and
mov
sbb
loopne
clc
imul
outsb
cmp
push
lock
je
ljmp
mov
icebp
and
sub
sub
pop
or
push
in
push
push
ds
xchg
mov
add
and
shrl
hlt
dec
out
sarl
lea
push
mov
pop
mov
and
sbb
fisttpll
out
push
add
cwtl
push
loopne
test
scas
and
scas
movsl
outsl
push
mov
das
test
orb
push
sub
cli
or
loopne
and
imul
push
or
aam
cmp
pop
xlat
jl
cmp
loope
and
xchg
push
das
jno
fcmove
dec
cmp
push
mov
add
mov
sub
es
je
ret
mov
inc
loope
mov
sbb
call
inc
clc
inc
into
push
in
call
fstps
sbb
dec
mov
xor
dec
in
hlt
nop
or
add
xchg
pop
ss
cwtl
stc
shrb
add
sahf
lock
pop
mov
push
xor
dec
adc
pop
adc
mov
inc
lock
add
mov
mov
mov
mov
add
cmpl
jae
adc
push
xchg
loop
sbb
mov
mov
js
add
mov
test
in
or
dec
mov
jo
shll
scas
sub
sbb
dec
adc
test
inc
or
lahf
add
in
push
sub
jge
incl
push
in
push
outsb
data16
arpl
sub
popa
cmp
pop
sbbl
fs
insb
je
or
dec
sbb
fcomps
pop
jo
push
mov
pop
adc
mov
mov
jle
add
sbb
lret
in
push
ljmp
push
push
roll
mov
sti
aam
adcb
adc
add
adc
std
cmp
hlt
js
add
andl
lods
sbb
aad
aad
cmp
stos
sbb
sbb
loopne
stos
popa
test
pop
enter
and
or
or
ds
dec
dec
cltd
dec
outsb
mov
or
mov
test
popf
xchg
sub
cmp
movsb
xor
fwait
ret
loope
or
movsb
mov
adc
movsb
jmp
mov
sub
add
addl
adc
push
js
add
imul
andl
icebp
push
mov
sbb
popf
jae
addb
clc
add
lea
subb
dec
and
movsb
aam
sahf
mov
cld
inc
add
in
xor
pop
jmp
mov
lods
xchg
shlb
pusha
pushf
sub
add
mov
cmpsb
sbb
and
dec
mov
cwtl
xchg
sub
mov
frstor
sub
adc
mov
cmpb
int3
sbbl
loopne
aam
rolb
dec
push
subb
add
adc
xchg
das
mov
or
mov
add
or
and
jbe
lds
pushf
faddl
shr
push
mov
fadds
imul
sub
lods
rcr
test
fcmovbe
cmp
lock
push
pop
dec
imul
or
rolb
and
mov
add
cmp
add
xor
flds
neg
rol
lret
int3
cmpb
inc
clc
mov
mov
xor
pushf
pop
in
out
test
cmp
or
lahf
add
dec
xor
add
arpl
push
and
add
xchg
shr
pop
and
pop
in
add
imul
sarl
les
mov
push
mov
sub
out
or
movsb
mov
mov
mov
mov
xor
and
push
mov
sub
mov
fildll
insb
dec
and
mov
aas
sub
inc
mov
rolb
push
mov
sub
stc
adc
adc
mov
int3
inc
cmp
dec
addb
mov
mov
jbe
adc
mov
cltd
push
fisubrl
jo
adc
ss
push
sub
enter
push
fildl
mov
inc
mov
nop
fs
dec
mov
push
and
ret
cltd
push
aad
test
mov
push
pcmpgtb
mov
psubsb
xorl
in
xlat
icebp
inc
push
fisttpll
push
lock
push
call
rorl
inc
lret
pushf
or
mov
ja
push
gs
sar
or
adc
icebp
pushf
js
jne
mov
les
mov
pop
dec
mov
adc
dec
mov
sysenter
fdivl
jb
nop
ret
bound
or
cld
mov
pop
dec
outsb
cwtl
mov
jo
dec
xor
push
xlat
xchg
sbb
fdivrl
hlt
and
popf
pop
adc
leave
or
mov
inc
inc
rol
arpl
popf
mov
jg
mov
cld
mov
lahf
lock
sbb
test
jb
mov
mov
in
fldenv
jle
clc
fistl
ds
ret
dec
cli
fs
mov
or
sbb
inc
adc
stos
xor
lods
adcb
xor
adc
adc
xchg
hlt
mov
add
and
add
and
pop
mov
cld
fisttpll
mov
mov
fistpll
addb
ljmp
jo
pop
add
imul
aam
mov
lcall
cld
dec
in
xor
xor
pop
add
mov
je
mov
add
icebp
pop
insb
cmp
push
adc
imul
pusha
mov
mov
data16
cwtl
jbe
cmp
test
hlt
cmp
sub
cmp
sub
add
pusha
cmp
add
push
test
insl
xchg
cmp
dec
cmpsb
mov
loopne
jmp
rolb
adc
popf
mov
mov
inc
mov
or
pop
mov
add
loopne
mov
lahf
hlt
push
mov
pop
dec
fdiv
pop
repnz
pop
add
xchg
loopne
pop
cmp
sbb
leave
jl
jne,pn
mov
stos
sub
loopne
cwtl
scas
sub
dec
stc
pop
adc
lods
test
sub
mov
dec
xchg
mov
inc
lods
out
push
loopne
mov
add
dec
or
repz
sbb
mov
add
mov
add
mov
mov
je
pop
xchg
cwtl
pop
lret
call
mov
mov
adc
push
lret
je
in
pop
cli
shl
pop
jge
movsb
nop
inc
mov
xchg
js
xchg
test
inc
push
jmp
adc
fadds
scas
divl
out
call
lods
or
call
lock
pushf
mov
ss
loopne
orb
mov
sbbl
adcb
in
dec
add
mov
lahf
push
xchg
lret
pop
lret
mov
and
lahf
std
test
loopne
lret
mov
lods
xor
cmp
call
lock
mov
adc
into
dec
and
fadds
mov
inc
fs
dec
imul
and
negl
out
add
cmpsb
mov
fcompl
xor
movsb
xchg
ja
mov
jmp
pop
mov
mov
and
out
test
inc
xor
sub
push
mov
loope
imul
mov
add
out
shll
nop
push
push
mov
sbb
xchg
add
mov
mov
andb
mov
stc
add
xor
push
xlat
dec
popf
xor
sarb
add
push
cmp
inc
pop
in
pop
push
mov
and
dec
xor
sbb
or
mov
mov
mov
mov
inc
lahf
fiadds
inc
fdivrs
push
sbb
test
xchg
test
add
push
mov
xlat
sbb
push
xchg
or
add
add
or
mov
pusha
ficomps
jns
mov
jle
adc
jl
sbb
add
dec
sbb
sub
loop
rcrb
insb
inc
jo
jg
call
test
xor
out
push
pop
xor
xlat
out
push
mov
push
or
add
xor
mov
lea
mov
push
clc
cld
add
sti
xor
mov
and
and
or
pop
and
pop
cmp
ret
xor
lds
pop
jle
xchg
adcb
xor
dec
sub
add
imul
add
test
mov
xor
cmp
xor
mov
lock
es
insb
or
decb
sti
ret
outsl
mov
out
xor
push
outsb
jnp
ljmp
mov
inc
lea
cmp
inc
addb
ret
add
push
or
shlb
ret
and
push
aas
mov
mov
testb
cld
inc
lods
push
cli
add
adc
mov
insb
jp
cmpb
adc
cld
rcrb
inc
nop
inc
idivb
xchg
std
xor
push
inc
inc
fmul
or
push
mov
cmp
rolb
push
inc
ss
xor
lcall
pushf
sub
jnp
cmp
scas
out
ret
mov
or
mov
mov
xchg
sub
jbe
nop
adc
pop
mov
mov
mov
mov
jo
pop
push
mov
sub
cmp
lock
inc
nop
stc
bound
pop
add
arpl
nop
les
inc
mov
or
push
jle
sub
mov
add
nop
push
push
into
push
ja
js
fcomps
lret
mov
mov
or
cwtl
daa
push
cltd
test
adc
fs
add
jo
push
rcrb
add
sahf
mov
mov
jno
nop
xchg
mov
fstl
and
nop
lcall
sub
in
pusha
inc
test
mov
push
or
sub
dec
mov
jo
stos
and
mov
xor
addb
loop
shlb
or
sti
enter
cs
imul
fmuls
lcall
or
adc
and
xchg
add
sub
cld
and
hlt
mov
xlat
fnstcw
test
cmp
add
dec
ss
subb
inc
sbb
sarl
addb
mov
push
and
int3
or
icebp
mov
add
imul
sub
xchg
stos
jne
incl
cmp
loope
ret
insb
cwtl
test
jle
or
or
fadds
adc
dec
fsts
fs
push
sbbl
fstps
inc
into
push
inc
sub
sub
fs
push
sbbl
cwtl
cltd
sub
or
into
mov
adc
mov
adc
sub
into
mov
push
inc
mov
adc
and
into
adc
lock
adc
outsl
sub
mov
es
push
inc
shl
cld
sub
mov
sub
mov
and
or
roll
sub
inc
rcrl
push
sub
and
xor
or
or
push
enter
into
adc
lock
adc
outsl
sub
mov
es
push
inc
fsubp
aas
or
in
das
push
or
adc
and
or
sub
sub
into
mov
mov
mov
sub
mov
jno
add
or
into
dec
push
fidivrl
cmp
push
xchg
xor
repnz
inc
jmp
push
fs
dec
jle
xor
sub
out
sahf
push
sub
ret
jmp
test
cs
aas
add
jae
lret
loope
or
or
repnz
gs
add
mov
add
push
sbb
bound
adc
ret
xchg
rorb
mov
jg
xor
lock
jbe
subb
or
and
xchg
es
adc
adc
xchg
sub
cmpsb
adc
iret
inc
sbb
in
testb
xor
adc
and
xor
mov
in
inc
aad
decb
mov
or
push
add
sub
fprem
dec
jbe
cmpsb
movsb
stc
popa
mov
jbe
push
stos
dec
scas
paddsb
out
adc
je
pop
cmp
jmp
addr16
sti
or
dec
lods
mov
sahf
xchg
loop
add
lods
mov
push
push
fcomi
dec
idivb
pop
es
packsswb
pop
roll
pop
shrb
mov
push
sbb
loopne
lsl
iret
push
popa
lock
inc
cmc
add
cld
and
or
aam
sub
adc
les
push
add
inc
adc
push
jecxz
ret
jo
push
inc
sub
jb
dec
mov
inc
dec
or
add
or
clc
jnp
cmp
jge
dec
mov
fsubrl
cmpsb
sbb
push
imul
insb
sti
pusha
mov
add
pushf
scas
sbb
and
test
insl
fwait
dec
add
cmp
mov
and
arpl
sbb
das
icebp
pop
filds
adc
jbe
rcll
or
shlb
pusha
lret
cmp
dec
fldt
xor
cmp
add
sub
mov
sbb
ds
fildl
mov
jle
inc
pop
jb
push
mov
mov
add
repz
xorl
aas
test
mov
lret
sbb
lock
inc
rcrb
je
jns
add
pop
mov
adc
lds
xor
in
and
call
add
in
cld
out
mov
or
jl
mov
lahf
push
inc
fs
cmp
add
xchg
and
jl
dec
push
fildll
sbb
or
sub
pop
mov
xor
loopne
sub
jl
add
daa
mov
pop
xorb
mov
or
mov
adc
mov
loope
rcrb
in
or
rorb
aaa
mov
sub
das
lahf
andb
mov
mov
mov
add
into
dec
xchg
sbb
scas
lock
cmc
pop
std
sbb
insl
lret
clc
or
push
nop
jg
sub
mov
cmp
jmp
jle
adc
jl
push
inc
enter
xchg
fidivrs
das
push
ret
mov
cmpb
push
pop
add
mov
pop
mov
sbb
inc
lock
fprem1
xchg
in
push
leave
mov
pop
lods
cli
out
adc
xchg
rclb
jge
mov
lahf
call
jl
push
xchg
mov
add
int3
adc
mov
in
sub
mov
mov
xor
mov
or
mov
pop
lret
in
inc
add
mov
mov
and
add
stc
stos
or
inc
les
sub
xorb
xor
call
lock
rcrb
xor
jne
xor
mov
pusha
aam
dec
dec
insl
mov
test
rcr
inc
xor
rolb
sti
scas
movsl
push
xor
adc
dec
mov
fmuls
push
add
add
push
aam
outsb
push
push
add
rclb
push
int
lods
les
cmp
mov
mov
pop
sbb
add
sbb
cmp
sub
push
and
in
outsb
mov
shrb
mov
xchg
mov
pushf
es
inc
and
sbb
out
push
push
loop
dec
mov
push
mov
ror
jmp
in
mov
nop
cmp
and
xor
jne
js
or
out
jo
pushf
inc
ds
popa
jno
add
int3
mov
outsl
fsubr
and
pop
stc
mov
scas
inc
mov
push
notl
pusha
adc
test
inc
jp
fxch
mov
pushf
andb
add
or
dec
jbe
xchg
inc
jo
jmp
or
adcb
ret
fmull
xlat
add
or
xlat
pushf
dec
inc
sbb
ds
es
push
pop
fdiv
cltd
mov
sbb
and
mov
jl
add
mov
pmaddwd
lock
ljmp
pushf
js
inc
xchg
shrl
inc
sbbb
xchg
lea
mov
or
mov
lahf
fildl
mov
lock
push
push
add
out
mov
mov
lods
add
push
adc
pop
mov
loope
stc
add
fcoms
inc
mov
mov
mov
push
mov
or
daa
push
stos
or
inc
mov
scas
dec
lret
loopne
push
dec
add
jle
pop
ret
cmovb
mov
cmp
scas
pop
out
inc
inc
cld
mov
out
negl
inc
fisttps
scas
mov
cmp
inc
fs
inc
ds
mov
fcoms
inc
movq
jbe
cwtl
outsb
adcb
jo
je
jmp
pop
les
mov
xchg
add
mov
adc
xor
jmp
pop
or
ror
or
adc
mov
push
iret
inc
stos
lock
push
sub
daa
xor
push
xchg
popa
inc
mov
shrb
inc
add
pop
mov
pmaddwd
and
aas
pop
push
aam
cwtl
add
xchg
fadds
push
or
mov
arpl
enter
clc
mov
outsb
fiaddl
dec
add
xorb
cld
or
loopne
xchg
inc
cmp
and
mov
xchg
int3
xor
insb
push
mov
rol
and
add
pushf
mov
push
fcomi
pop
dec
cmpsb
xchg
add
adc
fmull
mov
mov
dec
jl
xor
and
adc
lret
xor
mov
sbb
fwait
rolb
mov
add
shlb
cmp
fmuls
insb
js
push
push
in
sub
add
insl
push
inc
icebp
test
add
mov
or
mov
mov
fsub
mov
call
sbb
shlb
test
sbbb
push
pusha
cmp
add
or
test
lods
adc
adc
xchg
dec
push
mov
sysenter
adc
mov
aam
xchg
movsb
pop
xor
push
and
les
lock
shrb
add
in
test
icebp
adc
ds
ficomps
or
and
icebp
push
cmp
loopne
mov
loop
daa
mov
shlb
lahf
inc
fdivl
loopne
movsb
or
mov
push
mov
mov
jnp
shrl
call
loopne
xor
fiadds
nop
sti
pop
enter
mov
jbe
and
add
xchg
hlt
das
jo
mov
fldl
mov
push
dec
subl
enter
mov
add
or
sub
imul
mov
dec
cli
movsl
cwtl
sub
mov
add
mov
clc
inc
add
imul
push
iret
js
mov
push
or
pop
aad
in
mov
daa
sahf
inc
insb
leave
jle
cmp
cld
jge
je
push
loopne
push
jg
push
cwtl
pop
subl
jae
dec
lods
nop
pop
mov
call
sub
xchg
xorb
ljmp
cmp
scas
orl
icebp
in
fadd
sbb
or
push
jle
rcrb
push
enter
cld
test
scas
cmpsb
dec
nop
unpcklps
stos
shrb
add
xor
test
js
xor
fistpll
sarb
pop
add
and
or
movsl
pop
cld
test
and
pop
aas
test
jno
pop
ds
dec
hlt
cs
and
mov
dec
pusha
dec
popl
lcall
xchg
faddl
sbb
lock
imul
push
sahf
mov
push
test
icebp
xor
inc
add
out
xchg
cmp
test
pop
orb
xchg
or
aad
nop
adc
pushf
test
pop
and
iret
dec
push
lret
push
mov
call
sbb
int3
daa
popa
jo
pop
mov
and
add
cld
mov
mov
sbb
mov
test
adc
call
push
por
nop
mov
inc
pusha
shrb
dec
add
pop
add
sahf
fiadds
aas
mov
outsb
cmp
insb
adc
movsb
adc
pop
and
int3
ss
add
inc
xchg
js
mov
aam
mov
push
mov
adc
lea
add
or
stc
daa
cli
push
popa
push
sub
dec
or
sbb
cmp
fstpt
pushf
sub
jno
dec
add
cmp
inc
cmp
add
mov
add
sahf
mov
push
ud2
pop
xchg
ret
lock
lds
aas
test
and
xor
xchg
push
lock
fldcw
mov
xor
out
mov
xchg
clc
inc
sbb
add
push
test
add
push
cs
leave
add
imul
fdivr
push
andl
mov
and
nop
lods
movsl
sbb
sub
mov
adc
sbb
mov
add
dec
shll
pop
cmpb
xor
popa
push
and
dec
imul
push
add
xor
mov
adc
cmp
xchg
call
and
in
cltd
pop
or
pusha
or
add
in
adc
xchg
cli
mov
and
orl
jb
adc
mov
or
enter
add
aad
add
ss
mov
lock
hlt
adc
push
inc
shlb
dec
test
inc
ret
popa
xor
push
aas
mov
dec
xor
insb
and
int3
pop
cwtl
and
inc
mov
sbbb
xchg
ret
pop
lods
decb
sub
imul
add
dec
sbb
insb
sti
jno
jp
pop
insb
jg
sbb
pop
mov
dec
mov
dec
mov
push
repnz
test
add
xchg
jno
and
push
push
aam
sub
xchg
sub
mov
adc
xchg
cmp
inc
jl
cmp
jmp
test
lret
ljmp
push
push
jo
dec
les
in
lock
mov
pushf
adc
das
or
test
pop
sub
or
xchg
add
scas
mov
pushf
andb
iret
cld
push
cmp
lods
xor
push
dec
mov
inc
inc
sub
fisttps
inc
je
or
and
mov
push
pushf
xor
repz
pusha
dec
jle
enter
insb
ss
add
lret
xchg
fcompl
adc
mov
jecxz
loopne
mov
cmpsb
in
inc
mov
nop
push
mov
sub
add
fnsave
pop
lret
lds
mov
cwtl
push
xchg
pop
push
or
pop
dec
mov
mov
je
xchg
push
lea
test
lahf
xor
scas
int
xchg
adc
loopne
popa
add
or
fistps
repnz
inc
dec
cld
mov
pop
dec
sbb
les
in
fsubr
adc
lret
push
or
aad
mov
into
or
cmc
cld
scas
add
push
stc
adc
and
adc
je
decb
in
leave
ds
lret
out
xchg
jl
mov
and
sbb
dec
xor
mov
push
aam
inc
sbb
cld
pop
mov
cmpsb
lret
jno
cmp
add
stos
and
xor
mov
aaa
adc
fdivs
js
pop
or
or
push
push
fimuls
loop
xor
push
cmp
xchg
dec
push
fdivs
cmp
call
add
sub
add
gs
push
mov
lret
aas
loopne
jge
add
test
ss
xchg
sub
push
adc
adc
lds
push
xor
mov
popf
cmp
adcb
fmull
dec
cmp
add
add
ret
and
cli
inc
pop
or
stos
int3
mov
dec
xor
es
clc
xchg
or
out
cwtl
cwtl
scas
xor
mov
mov
adc
or
cs
mov
or
dec
xor
jo
sub
or
dec
in
jmp
int3
mov
push
fildll
lods
ds
xchg
adc
sbb
add
adc
jmp
mov
popf
js
push
add
ja
adc
lds
xlat
movsl
sub
xchg
aas
xchg
mov
icebp
loop
fiadds
bound
dec
iret
cmp
hlt
enter
add
into
lea
pop
mov
clc
mov
ljmp
or
stos
jns
sbb
fs
xchg
push
sub
iret
lret
or
push
mov
in
aam
leave
incl
xchg
xor
or
xor
and
sysenter
xlat
rcl
aad
pop
mov
fisubrl
fcomp
pusha
sbb
push
call
fisubrs
inc
push
inc
clc
xlat
clc
add
inc
les
rclb
lods
sbb
push
insb
cmp
cmp
fldt
out
test
cld
push
jno
adc
dec
or
pop
pop
sti
and
xor
or
movsb
add
dec
sets
or
das
pop
rol
push
add
dec
cli
push
fadds
add
jmp
push
pushf
sahf
pushf
sub
pop
or
pop
push
push
enter
inc
cmp
adc
test
pusha
dec
cltd
gs
sti
adc
mov
das
mov
mov
add
mov
fwait
scas
mov
lea
add
nop
pusha
mov
js
test
mov
mov
movsb
enter
cmc
adc
enter
inc
mov
popl
pusha
cmp
lahf
push
fstl
shr
mov
pushf
xchg
add
or
cwtl
mov
cmp
dec
and
inc
adc
add
dec
and
mov
call
aas
and
xor
pusha
pushf
xchg
lret
xchg
movq
mov
dec
cmp
call
ja
dec
mov
mov
cli
out
cmp
fldcw
rol
and
add
lret
int3
gs
or
jg
pop
and
jmp
dec
add
enter
or
lods
jmp
fstpt
xor
sbb
mov
hlt
lahf
sahf
outsb
mov
push
push
out
add
jl
dec
sub
push
push
sub
inc
and
orl
jne
cwtl
test
loopne
cmpsb
ds
lahf
mov
je
mov
addl
out
and
clc
dec
push
roll
dec
or
lret
jl
jg
mov
xor
add
lock
cmp
mov
ret
adc
hlt
adc
xor
and
push
pop
add
nop
mov
xchg
push
dec
add
xor
mov
mov
insl
add
and
dec
adc
or
outsb
xor
pop
adc
fmuls
add
out
mov
xor
lds
xchg
cmp
out
or
push
push
adc
pusha
daa
je
popa
cmpsb
push
jle
sbb
lret
add
pop
insb
cwtl
jns
jge
cmp
fdivrs
sti
adc
add
mov
add
pop
or
add
addb
inc
jae
inc
dec
mov
jl
icebp
mov
movsb
push
nop
adc
or
dec
add
sbb
push
fsts
jno
movsb
and
sbbl
test
lret
adc
pop
ds
cmpsb
and
js
sbb
test
inc
add
call
sub
sar
clc
sbb
sbb
jo
mov
and
outsl
dec
jnp
inc
sbb
cmp
mov
xchg
cltd
jg
repnz
pop
scas
in
or
dec
inc
lock
ja
dec
adc
addb
or
jp
and
add
sub
adc
push
es
pop
add
movsb
lret
xchg
dec
inc
xor
insb
sub
mov
popf
enter
ret
cltd
or
inc
pxor
imul
mov
nop
cld
lret
mov
mov
out
xor
mov
clc
sbb
or
mov
lock
dec
adc
mov
xchg
icebp
mov
push
das
outsb
cmp
aas
mov
add
jecxz
stos
mov
shl
stos
dec
cli
call
rolb
cmp
mov
cmp
insb
inc
sub
call
enter
add
cmp
inc
rcrl
test
add
in
aad
call
cmp
cmp
inc
mov
adcb
sahf
sbb
aam
add
mov
idivl
dec
mov
or
mov
andb
jg
sbb
or
sbb
xor
pusha
mov
sub
jnp
and
addl
popf
add
nop
jo
shrl
fs
cmc
rcrb
sub
jo
add
movsb
inc
faddl
pop
mov
add
dec
xchg
fdivrl
lahf
push
stos
jo
or
pusha
xchg
push
mov
mov
pop
inc
jg
and
aas
and
cmp
iret
addl
cmp
lea
cmp
jecxz
and
jo
mov
dec
add
shrb
and
out
rcrl
pusha
sbb
pop
loopne
pop
or
dec
inc
insb
add
xor
popa
leave
shlb
mov
into
mov
rorb
pop
or
ds
xor
jns
addb
lods
sub
out
mov
add
xchg
clc
lret
sahf
xor
xchg
fists
xor
cmpsl
jg
pop
ljmp
jl
lcall
arpl
rcl
dec
or
push
mov
pop
push
pusha
jnp
loopne
add
testb
add
aas
mov
icebp
adcl
xor
cmp
pop
xor
stos
xor
add
inc
add
lret
jge,pt
xor
xor
push
inc
push
rcl
data16
adc
cmpsb
and
js
aaa
imull
clc
push
dec
sarb
inc
add
loopne
nop
clc
loopne
cs
sub
sub
inc
xlat
dec
or
lock
dec
ffree
add
out
ret
dec
fld
pushf
jne
cmp
mov
mov
je
inc
push
int3
rolb
sti
mov
adc
movsb
jbe
xchg
push
das
add
shl
mov
int
pop
push
inc
xor
and
nop
jae
mov
or
jnp
js
pop
xor
jo
and
arpl
cwtl
stos
xchg
fsubl
pop
orb
mov
mov
add
push
xchg
jl
pusha
rolb
aas
inc
fcomip
dec
or
mov
or
jl
pop
sub
int3
popa
add
push
sub
fdiv
mov
lock
lods
and
cmp
leave
or
push
js
or
xor
mov
push
or
fmuls
ret
out
shrl
clc
push
andl
ds
clc
stc
xor
mov
add
mov
mov
push
push
in
ljmp
push
lock
mov
push
popf
push
sub
rclb
loopne
rorb
mov
iret
mov
stos
or
push
insb
les
call
dec
subb
mov
loopne
inc
insb
test
mov
shll
sbb
mov
pop
mov
seto
xchg
andl
pop
andb
dec
add
add
rclb
pop
sub
subb
or
sub
jbe
add
adc
or
sbb
rclb
je
sbb
js
pop
adc
add
js
rolb
orb
das
insb
rolb
mov
xchg
clc
and
mov
int3
dec
mov
cmc
ja
add
mov
mov
popa
mov
lods
sarb
or
push
adc
mov
dec
xchg
cmpsb
shll
inc
push
fs
ret
jo
pushf
std
test
mov
jmp
loopne
pop
out
add
inc
xchg
iret
dec
push
jb
prefetch
or
adc
jmp
mov
fsubl
push
dec
push
lea
push
and
adc
add
shlb
mov
mov
and
inc
fcompl
mov
xlat
mov
sbb
adc
iret
ret
fucomip
adc
xchg
pushf
loopne
stc
mov
lods
popa
and
add
xor
push
xchg
push
sub
adc
sbb
mov
sbb
mov
cmp
push
and
inc
hlt
inc
cmp
push
repnz
cltd
pusha
call
add
or
pop
mov
fdivl
push
test
dec
stos
sbbl
mov
add
bound
or
xchg
mov
jg
test
sub
mov
cli
mov
and
nop
pushf
sbb
rorb
iret
rcl
and
nop
mov
inc
roll
pop
js
scas
cmp
dec
lods
stos
sarb
loope
mov
xor
shrb
push
roll
ja,pn
jnp
sub
sub
cmpsl
jne
nop
adc
or
mov
out
inc
ret
sbb
test
imul
rorb
outsb
add
lret
insl
push
add
roll
adc
dec
inc
mov
push
pop
pop
jl
pusha
mov
dec
add
mov
test
cld
out
std
inc
ret
mov
test
adc
adc
mov
imul
add
xchg
add
pusha
fldcw
aas
xor
pcmpgtb
dec
clc
add
ret
add
pop
arpl
pop
pop
pusha
test
inc
popf
push
orb
xchg
call
mov
sbb
add
push
mov
pop
push
outsb
lea
stc
or
jl
sarb
repz
mov
inc
sarb
mov
test
je
add
sub
jle
lods
aas
pop
leave
int3
mov
sub
cmp
es
sbbl
dec
and
std
in
add
push
aad
imul
push
mov
aaa
loop
push
xchg
jl
daa
fiaddl
add
jmp
pop
mov
pop
add
push
movsb
incb
mov
xchg
icebp
sbb
movsb
sub
pushf
add
push
xor
push
or
call
sbb
idivl
cmpsb
rcl
data16
in
jnp
movsl
nop
sbb
repnz
test
and
dec
hlt
dec
jno
sub
mov
sbb
clc
fistl
dec
xchg
ret
add
mov
jo
fcmovnb
add
in
push
push
cwtl
inc
adc
dec
in
mov
jne,pn
je
dec
dec
call
les
jmp
jo
imull
inc
adc
jp
ljmp
icebp
test
insb
xor
push
add
aaa
cs
and
pop
call
and
sub
clc
jecxz
icebp
add
lods
pushf
push
aam
sub
and
ret
mov
ffree
and
ret
add
daa
and
mov
xor
lods
or
pop
mov
jmp
in
xor
mov
pop
arpl
inc
mov
cwtl
or
inc
clc
mov
and
inc
or
and
adc
cwtl
lret
mov
mov
push
push
fdivr
fadds
ljmp
jmp
or
or
dec
push
jge
enter
aas
hlt
inc
dec
popf
push
adc
push
add
adc
fldpi
orb
dec
mov
cmpsb
and
and
in
pop
dec
orb
std
fs
or
dec
sub
aad
cmp
mov
out
adc
das
mov
xor
xor
fwait
int3
std
ja
pop
movsb
dec
mov
scas
or
mov
mov
mov
xchg
sub
dec
ss
jle
dec
daa
jmp
cwtl
ret
mov
insb
add
push
xchg
test
repz
and
push
adc
aam
orl
in
pusha
cmp
lret
aas
fnstcw
xchg
mov
ja
mov
in
data16
orb
push
arpl
lret
jo
inc
in
and
sarb
insb
jne
rcr
adc
sarb
xor
jmp
inc
push
add
loopne
xchg
js
repz
mov
hlt
and
daa
stos
int3
cmp
sbb
sahf
pop
shld
jb
dec
shl
mov
add
cs
cmp
mov
call
repz
mov
or
push
pop
adc
mov
sbb
lea
xchg
pop
lods
mov
adc
mov
pop
mov
lock
jg
in
add
pop
or
and
add
test
les
push
or
cmpsb
inc
adc
cmp
mov
mov
fidivrs
mov
adc
cltd
pop
mov
dec
pop
rclb
add
ret
paddsb
cwtl
je
or
push
nop
loopne
pop
sarb
xor
mov
fcomps
loop
mov
xlat
rorb
imul
mov
icebp
adc
popa
add
xchg
dec
stc
clc
insb
nop
xchg
lahf
inc
fcomps
sbb
inc
jo
cs
clc
add
mov
or
lret
enter
int3
push
dec
adc
adcl
mov
mov
aas
rorb
cmp
stos
and
jle
or
dec
jmp
pmuludq
testl
sarb
or
dec
imul
mov
out
mov
inc
mov
push
rclb
or
rorl
aad
sbb
jle
je
push
push
dec
mov
dec
sbbb
xor
adc
call
or
xor
sub
inc
cmpsb
mov
inc
and
dec
push
or
mov
aam
mov
je
push
mov
add
or
push
jle
xor
rcrl
and
adc
mov
pop
nop
test
push
sub
outsl
pop
add
xchg
subb
pop
je
xchg
lock
add
sub
pop
ret
jle
sub
fnstcw
cld
inc
shl
inc
cmpsl
fsubrs
push
mov
cmc
aam
push
cmp
rolb
mov
dec
push
pop
pop
and
clc
push
pushl
jbe
orb
pusha
push
rorl
mov
scas
sbb
lds
mov
sbb
popa
jo
imul
cltd
adc
insb
dec
add
andb
lock
rclb
or
jno
mov
xchg
jnp
pop
js
add
ja
sbbl
or
or
in
mov
mov
mov
xor
mov
pop
xor
imul
cmp
sbb
das
pop
or
aaa
adc
push
xor
pushf
outsl
add
cmp
aad
add
mov
mov
xor
mov
jle
or
mov
mov
jns
mov
negb
mov
fs
or
ss
adc
mov
mov
xor
xor
mov
adcb
ss
outsl
into
add
mov
push
cwtl
insb
jle
in
addb
add
pusha
inc
mov
xchg
push
mov
mov
mov
mov
je
insb
fstpt
subl
and
dec
sahf
je
pop
fiadds
je
cmp
xchg
pusha
dec
push
xor
push
call
