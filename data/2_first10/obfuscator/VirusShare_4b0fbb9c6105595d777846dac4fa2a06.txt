pop
sub
aam
cmp
pop
push
push
push
dec
push
cli
mov
dec
push
add
mov
mov
std
les
rep
cld
adc
pmulhw
addl
faddl
ljmp
clc
pop
sub
les
orl
rolb
push
call
into
push
mov
insl
jge
call
je
pop
xchg
add
ds
mov
and
xchg
icebp
dec
out
mov
pop
add
jg
scas
idiv
cmp
aam
cs
cmp
mov
stc
lret
dec
xchg
xor
push
cwtl
xor
pop
inc
xor
enter
pop
movsb
sbb
popf
xchg
cli
pop
fisttpl
cmp
jle
repnz
xchg
addr16
sti
test
jno
xchg
cmp
movd
jae
shrb
and
rolb
push
inc
jb
jl
mov
loopne
insl
mov
push
cmpsb
xor
push
or
pop
sub
das
jmp
adc
adcl
mov
xchg
popl
adc
stos
inc
mov
movsl
push
mov
mov
imul
out
lock
sub
xor
outsl
lock
cmp
insl
inc
push
imul
inc
add
enter
cli
test
inc
dec
xor
pop
add
jmp
cmp
pop
out
fdivl
out
sbb
gs
mov
loopne
sub
or
and
add
popa
std
das
mov
adc
sub
les
std
mov
adc
std
xchg
jmp
popf
mov
xchg
push
mov
dec
xchg
cmp
mov
je
hlt
inc
clc
and
dec
mov
mov
rol
rcl
iret
push
and
rcll
mov
call
pop
mov
fisubrs
int3
orl
xor
fdiv
sub
jbe
cmpsb
imul
xchg
cmp
and
popf
mov
stc
test
ret
inc
test
push
add
out
je
xor
popa
adc
popa
jno
imul
push
xchg
adc
in
fstps
inc
sarl
fdivrp
adc
xor
int3
push
sbb
xchg
js
fcmove
imul
sbb
pop
movsb
mov
aam
ljmp
push
test
loop
out
push
sbb
jle
out
fldpi
mov
sbb
sbb
mov
cmp
mov
dec
outsb
cmp
scas
fcoms
mul
mov
cmp
fcoms
jo
xchg
mov
xor
and
xorb
sbb
adcb
inc
ret
sbb
pop
ficoml
cmpsl
jp
je
sub
mov
and
xchg
inc
lahf
push
dec
inc
nop
mov
mov
push
adc
push
xchg
or
push
fnsave
mov
loop
es
incb
cmp
pop
xchg
lret
pop
inc
and
mov
xor
pop
jnp
sbb
pop
pop
fbld
fwait
imul
int
imull
inc
xor
ret
mov
pop
lods
adc
inc
pop
sbb
cs
adc
pop
dec
fistpll
addr16
in
sub
inc
xchg
in
in
xchg
or
push
notb
push
jbe
ret
cmp
decb
andb
cs
xlat
lds
or
mov
lds
jge
jo
rolb
push
pushf
xor
mov
andb
pushaw
in
loop
adc
xor
add
subb
in
pusha
in
inc
fwait
pop
fcoml
mov
lods
jle
idivl
jo
sub
xchg
adc
bnd
sti
jbe
pop
cmp
cmc
mov
in
cmp
jo
adc
divb
inc
jns
call
outsb
popf
pop
add
add
mov
cmpsl
clc
fcom
mov
add
push
xchg
scas
test
fucom
push
xchg
jg
lret
sub
jl
mov
enter
ret
lea
lret
inc
lea
mov
ja
inc
ljmp
and
push
pop
rcrb
sti
rclb
movsl
sbb
push
movsb
inc
mov
sbb
add
mov
rcll
jbe
jecxz
push
and
xchg
xchg
add
push
jo
sbb
push
ljmp
adc
add
push
fwait
lock
call
xchg
jno
mov
lret
add
sub
xor
mov
adc
aad
push
aad
cltd
push
sub
shlb
les
pop
std
push
adc
out
pop
stos
push
and
xor
xchg
mov
imul
add
push
jns
stos
mov
xchg
xchg
or
testb
or
add
aam
repnz
jmp
and
push
je
sbb
lcall
pop
cltd
inc
jns
lahf
fisttps
sub
xchg
pop
mov
gs
sub
cmp
aad
mov
imul
iret
lret
xchg
xor
sbb
cmc
xor
mov
sti
jmp
test
jecxz
fs
or
dec
mov
xor
cmp
loopnew
into
dec
pop
es
stc
cmc
nop
cmc
stc
pusha
test
push
push
push
xor
pop
pop
pop
nop
clc
rol
mov
xchg
jo
and
rol
or
or
stc
nop
nop
mov
xchg
and
lea
push
movzbl
jle
push
push
mov
pop
pop
test
inc
dec
loop
pop
rol
sub
call
push
jo
sub
pop
or
push
push
jae
add
pop
pop
clc
cmc
mov
inc
inc
inc
inc
jl
jae
push
push
pop
pop
ja
jle
cmp
jns
push
add
pop
or
test
push
add
pop
jo
xor
jg
sar
jle
sub
test
test
cmp
cld
mov
xchg
jmp
dec
adc
dec
push
fistpll
lcall
or
jne
sbb
mov
test
std
cmpsl
jb
cs
cmp
sub
scas
sub
dec
xchg
push
and
ds
hlt
mov
or
add
pop
jbe
push
test
pop
push
call
js
mov
sub
cmpsl
stos
push
add
div
jmp
mov
lock
xchg
pushf
sbb
je
iret
jb
mov
xor
add
loop
jecxz
cmpsl
mov
rclb
int3
rol
xor
outsl
imul
pushf
or
add
fsqrt
out
pop
sbb
pop
and
cmp
jne
jmp
push
push
test
pop
pop
push
inc
pop
push
cmp
pop
push
mov
pop
jne
shl
push
add
pop
jmp
out
aad
movsl
add
lds
xchg
or
push
loop
rorl
hlt
scas
fsts
nop
arpl
pop
mov
lret
dec
daa
lods
ret
adcl
sahf
xor
jmp
aam
pop
adc
add
in
mov
imul
lret
ds
cmp
jbe
lahf
ret
fmulp
divb
or
negl
jl
or
mov
out
xchg
mov
pop
push
call
and
in
movsb
aas
pop
jns
bnd
lcall
jae
mov
dec
loop
xchg
jb
js
std
push
mov
or
cs
adc
and
stos
xor
aas
repz
pop
mov
bswap
add
add
pop
inc
push
push
ror
pop
pop
jmp
pushf
push
cmp
sub
jg
in
fcoml
sbb
out
inc
ja
jp
inc
sub
leave
pop
nop
rclb
hlt
fistps
jp
jne
ror
lea
nop
clc
loop
jecxz
sub
or
and
or
push
cmpsl
adc
push
insb
xor
out
popa
test
pusha
icebp
mov
icebp
cmp
insb
out
out
pop
ja
dec
fcmovne
imul
inc
push
inc
xchg
pop
push
dec
inc
loop
jecxz
ss
cmc
mov
and
cmp
pop
jnp
jnp
jp
sub
sub
pop
push
insl
xchg
lret
sub
fdivs
mov
std
stos
cwtl
fsubrl
inc
add
add
mov
sbb
in
push
dec
aaa
xchg
push
xor
cmp
test
inc
out
outsl
dec
sbb
push
dec
ret
and
xor
leave
lea
mov
mov
inc
push
push
or
pop
pop
push
jne
push
add
pop
loop
jecxz
ret
fdivrs
sbb
inc
pop
xor
jle
add
jnp
adc
fnstcw
mov
mov
mov
rclb
or
cmc
fmuls
pop
xor
pop
iret
jb
dec
sub
je
xor
stc
lret
ja
xchg
call
fsubr
inc
jmp
rol
cmc
cmc
cmc
and
imul
ds
jl
or
mov
sbb
mov
les
push
jo
daa
xchg
jecxz
jne
cmp
popa
dec
rcrb
imul
lods
dec
pop
movsl
cltd
pop
pop
loope,pt
cmp
cmp
adc
aad
out
dec
outsl
pusha
ficompl
pop
int3
aad
xchg
in
and
into
int
or
cmp
or
push
into
fsubrl
les
adc
stos
xor
sbb
push
leave
push
mov
lcall
mov
in
mov
mov
in
xor
inc
dec
nop
fmuls
xchg
pop
into
dec
sub
sub
sub
pusha
cli
fnstsw
cs
scas
mov
cmp
sub
xor
jge
dec
out
insl
mov
test
sub
stc
inc
inc
push
push
lea
lock
lock
dec
in
pop
lret
mov
jne
in
fwait
lock
push
or
xchg
push
in
pop
insl
in
clc
push
sbb
dec
stos
lcall
mov
xor
xchg
js
xor
orb
jp
mov
adc
sub
add
mov
mov
jbe
daa
adc
pop
call
fisttpll
push
cwtl
mov
sub
mov
mov
int
hlt
pop
stos
sbb
fldpi
js
xchg
cmp
jl
adc
adc
sub
lea
jge
rorl
scas
jb
sub
dec
in
cmp
mov
sarb
add
out
jo
loope
push
loopne
jbe
sbbl
dec
rcl
pop
addb
push
les
xchg
sub
jns
cli
jp
inc
sbb
push
outsb
sbb
and
dec
mov
in
pop
dec
in
lods
and
pop
xor
inc
mov
inc
or
filds
je
jae
lcall
bound
sub
cltd
xor
inc
xchg
or
and
push
add
mov
fidivs
jne
ret
ret
sub
lods
and
dec
inc
mov
push
jb
inc
je
test
mov
pop
push
push
pop
pop
pop
add
hlt
jl
cli
xchg
pop
stc
arpl
xlat
scas
xor
testl
push
int
aam
ret
adc
scas
dec
into
mov
jp
mov
out
notl
xchg
testb
test
sbb
fsubrl
movsb
repz
aam
ret
and
and
mov
iret
xchg
or
inc
loope
adc
and
in
in
sbb
js
jle
push
mov
movsl
stc
and
pop
add
mov
pop
jb
or
add
ja
loope
mov
push
add
andb
clc
insb
arpl
jmp
call
nop
es
push
cmc
shrl
mov
push
add
jbe
test
cwtl
mov
ret
jle
mov
push
ret
cmp
xchg
mov
xorb
push
sbb
repnz
out
movb
push
test
push
js
xchg
nop
pop
lods
test
popf
mov
pop
jp
pop
sbb
inc
pop
push
call
cs
pop
push
xchg
sbb
cmp
popf
les
mov
dec
adc
loop
sti
jg
mov
outsl
lret
xor
stc
or
push
andl
pop
pop
test
sub
mov
ss
fwait
and
ljmp
out
int3
xlat
loop
test
mov
shl
out
adc
inc
jle
or
mov
xlat
clc
cld
push
sti
mov
sub
mov
inc
xchg
sub
sub
loop
and
stos
test
add
cmp
mov
mov
movl
das
mov
add
push
enter
fdivrp
dec
or
loope
cmp
mov
ja
pop
fwait
dec
inc
rorl
xlat
add
jge
sub
jae
leave
stc
push
push
sub
pop
pop
dec
and
nop
mov
cwtl
rcl
dec
push
mov
call
mov
shll
pop
dec
lret
fcompl
loop
repz
dec
stos
cmc
les
sbb
jcxz
pusha
mov
mov
mov
pop
xchg
fcomp
jle
pop
push
inc
ljmp
push
or
xchg
push
lcall
mov
jge
testb
inc
cs
inc
dec
add
mov
mov
shll
mov
sub
dec
lea
fidivrl
mov
in
sbb
mov
or
xchg
call
test
jge
adc
mov
jge
icebp
gs
arpl
mov
repz
inc
xchg
dec
pop
xor
mov
jg
jno
mov
scas
call
stos
fcoms
jns
pushf
ret
movsb
test
imul
jge
stos
dec
std
push
cs
int3
imul
imull
push
mov
mov
rorb
fcomps
ja
xor
test
xchg
cmc
push
and
bound
mov
cld
mov
shrb
adc
mov
xor
pushf
rolb
push
in
dec
mov
loop
jns
je
out
push
loop
dec
cmpsb
mov
or
add
icebp
aas
dec
adc
push
mov
fwait
pop
outsb
cmp
cmpb
std
mov
sbb
pushf
imul
fdivrs
das
pusha
aad
es
enter
repz
lahf
das
into
pop
or
pop
push
push
xor
cmp
mov
stc
push
fwait
movsb
xchg
shlb
out
shr
ud2
mov
mulb
add
popa
popa
dec
add
movsb
jle
aam
cwtl
mov
out
cmp
ja
mov
insb
dec
in
pop
sbb
inc
add
cmp
or
or
push
fmulp
and
fs
jns
sub
sbb
mov
cmc
into
dec
pop
xchg
push
loopne
es
add
negb
repz
inc
xchg
daa
mov
push
cmp
jle
dec
xor
andl
mov
mov
loope
imul
lea
cmp
and
xor
xor
insb
xor
mov
out
mov
jp
dec
test
aas
dec
xor
cmpsb
sbb
sbb
rolb
insb
rorb
pop
in
sbb
xchg
and
loope
hlt
inc
pop
jbe
adc
sbb
aaa
insl
scas
lock
mov
cmp
rcr
xchg
xchg
in
push
loop
stc
pop
xchg
pop
shlb
loope
pop
mov
dec
repz
or
push
jp
ja
rol
cmpsb
sub
dec
out
inc
mov
mov
out
ret
xchg
mov
mov
xchg
push
imul
jo
mov
add
data16
mov
loope
mov
pop
push
andl
cmpsl
dec
push
out
insl
cs
sbb
enter
jg
add
adc
jl
xlat
sub
outsb
xchg
dec
mov
mov
mov
mov
sbb
add
or
cmp
mov
mov
mov
push
jle
jge
js
dec
fwait
mov
inc
xchg
out
out
sbb
and
cwtl
mov
out
push
clc
mov
jmp
ljmp
ret
and
in
aam
mov
dec
cmp
inc
adc
inc
int
inc
into
jge
mov
xor
push
out
inc
inc
push
outsb
ja
scas
dec
sub
ss
gs
mov
inc
pop
mov
mov
das
decb
and
and
in
sahf
push
mov
es
lds
inc
mov
ljmp
xor
ds
xchg
cli
xchg
mov
rcrb
shlb
ljmp
test
std
jno
push
inc
imul
sti
fwait
xchg
mov
out
cmp
push
shll
mov
xchg
pop
lock
sub
jae
push
push
mov
test
xchg
jb
mov
stos
jp
inc
ljmp
mov
mov
mov
stos
gs
adc
mov
pusha
pusha
out
out
ja
and
mov
sahf
out
adc
js
arpl
sbb
lcall
mov
incl
aas
ss
add
xchg
mov
in
adc
insl
mov
pop
dec
inc
adc
lock
lret
or
inc
dec
insl
popa
pop
or
xchg
inc
push
call
jmp
xchg
cmpl
jecxz
jnp
std
mov
mov
imul
mov
pusha
shrb
mov
test
movl
movl
adc
bound
jnp
cmp
or
fucom
mov
cwtl
outsl
add
or
icebp
jge
scas
adc
jmp
bound
neg
aas
out
mov
jecxz
repnz
jae
or
or
arpl
into
sbb
popf
mov
mov
stos
lods
mov
mov
cld
mov
lock
jne
in
jl
xchg
push
jne
popa
and
mov
aad
lret
add
mov
xchg
add
int3
sbb
xchg
sub
jmp
fcoms
in
or
movsb
adc
ljmp
sbb
out
es
in
jo
push
movsb
movswl
loope
test
aas
dec
test
add
inc
xchg
inc
ret
and
jbe
sahf
jb
and
sub
and
imul
into
dec
jge
jno
stos
iret
gs
xchg
pusha
xor
lret
push
fnstenv
push
std
lods
and
pop
repnz
push
cmp
fisttps
adc
outsb
ds
in
test
imul
ds
jp
clc
jp
mov
xchg
dec
fs
jae
mov
popf
add
adc
push
test
sahf
xor
inc
scas
mov
xor
mov
incl
and
jae
dec
sarb
out
fldl
push
xor
add
shlb
int3
outsb
fisubrl
push
pop
add
movsb
aaa
cmp
and
out
adc
negb
adc
scas
or
movl
mov
into
jl
aas
dec
fnstsw
cmpsl
movsb
in
xor
mov
lds
mov
int
movsb
rorb
mov
arpl
test
xor
popa
push
testl
adc
xor
inc
add
cmp
lcall
rcrl
cmp
nop
fisubrl
scas
call
sbb
mov
rol
fistl
or
test
inc
add
dec
xchg
dec
sub
mov
cltd
hlt
sbb
nop
aaa
mov
adc
sub
xchg
jle
pop
hlt
lret
mov
mov
mov
daa
pop
std
mov
je
fcmovne
jno
loop
sbb
hlt
push
fiadds
jae
scas
imul
pop
inc
aam
pop
and
sbb
out
push
xchg
inc
xchg
mov
jne
inc
cmpsl
mov
adc
call
iret
lods
adc
sahf
cltd
scas
mov
jne
sub
fnstcw
popa
xchg
pop
jns
mov
jns
push
mov
mov
mov
mov
mov
pushf
out
pop
mov
daa
sub
add
cmc
adcl
fldt
lea
fidivl
rolb
jbe
in
ret
inc
loope
cli
pop
in
dec
int
ret
imul
jne
pop
push
arpl
jl
jle
hlt
lahf
push
mov
ret
adc
mov
dec
fwait
push
imulb
fwait
je
loopne
mov
aam
mov
mov
inc
and
and
test
cmp
dec
psllw
out
test
xor
mov
flds
in
dec
xchg
pop
stos
xchg
mov
int3
xlat
mov
xor
cmp
sub
lds
sahf
aam
insb
and
divl
xor
cmp
mov
xchg
outsb
and
mov
xor
inc
ljmp
jbe
mov
dec
sub
sti
aam
aaa
lods
adcb
pushf
shll
and
dec
cwtl
lret
mov
outsl
hlt
sub
xorl
aam
pop
inc
test
inc
les
mov
xchg
fucomip
cltd
sbb
popa
mov
jno
pop
xchg
addr16
scas
imul
xor
inc
stos
or
mov
jno
mov
iret
sub
push
iret
inc
insb
fcmovne
je
cmp
jbe
xchg
cmp
sub
loope
sti
addr16
jnp
pushf
sarb
sub
int
test
insl
pop
pop
mov
xlat
ficoms
gs
mov
lods
lcall
das
pop
lcall
and
xchg
xchg
addb
divl
notb
jo
cmpsl
inc
xchg
icebp
iret
xor
inc
lret
popl
test
popf
ss
cbtw
jmp
jno
adc
mov
xchg
add
cltd
sbb
push
dec
insb
mov
add
pop
jns
cmp
xor
stos
enter
add
adc
push
out
dec
int3
push
fucomp
popf
cmp
popf
or
mov
or
pop
leave
int
add
add
or
or
add
xor
out
adc
addr16
out
addr16
xor
bound
rcrl
sub
sbb
sti
dec
xor
into
cli
popa
cmpsb
ficoms
inc
popf
xchg
cmp
and
lcall
movsl
lret
mov
enter
sbbb
jb
rcll
sarb
pusha
jnp
or
and
imul
lcall
adc
push
out
jp
call
loop
pop
cs
sahf
xchg
sbb
push
mov
xor
adc
std
adc
insl
adc
repnz
inc
ret
sub
mov
stos
mov
inc
mov
icebp
iret
mov
ret
adc
das
cmp
cld
mov
dec
push
insb
or
cs
push
mov
fwait
lds
xchg
pop
mov
lcall
mov
cmp
std
sub
adc
cmpsb
orb
cmp
clc
xchg
mov
lret
xlat
cmp
inc
mov
sub
mov
clc
cmp
adc
dec
mov
sti
sbb
inc
scas
lods
daa
leave
inc
and
add
dec
loop
shll
movsl
and
sarb
mov
stc
hlt
lcall
inc
xchg
in
sti
inc
fs
mov
lret
int
mov
sbb
mov
pop
mov
xchg
or
lock
mov
xchg
fcompl
call
mov
rorl
in
adc
pusha
or
adc
jnp
adc
jl
pop
and
sub
aad
and
adc
sub
sub
push
mov
lea
pop
inc
push
fidivrl
imul
ret
xor
cmp
cmp
out
call
adc
dec
repz
jle
mov
rcl
arpl
pusha
adcl
adc
pop
mov
cmp
std
add
call
pusha
sbb
push
bound
pop
popf
lds
adc
sbb
cmpsl
and
dec
xchg
stos
int3
add
push
mov
mov
fs
es
cmc
insb
xchg
xlat
add
mov
mov
and
add
xor
lea
or
mov
iret
jno
iret
fidivl
xchg
xor
dec
das
into
jb
and
jl
fsubs
lahf
jae
and
dec
lahf
sbb
sbb
orb
rol
cmpsl
test
adcl
pop
xchg
mov
inc
int3
sub
js
sub
scas
aaa
inc
mov
rclb
sbb
inc
clc
lahf
outsb
jge
dec
push
add
arpl
in
mov
insl
outsl
out
and
faddl
inc
adc
push
mov
jecxz
scas
mov
gs
shll
fcmove
mov
lret
fwait
aam
sub
movsb
jg
jmp
pop
sub
jg
mov
imul
mov
push
jl
push
in
pop
dec
pop
sub
inc
xor
shll
hlt
and
stos
and
imul
ds
adcl
and
xor
fnstcw
jns
jp
repz
out
int
addl
sub
sbb
int
fsubs
jp
lar
cmp
ror
mov
jne
outsb
les
popf
inc
pusha
cltd
jp
sub
sbb
lods
imulb
sub
add
push
test
mov
adc
fimuls
mov
arpl
add
inc
push
pop
mov
cld
lea
xor
mov
inc
loope
xchg
rorb
cmp
rcll
mov
sbb
mov
pop
pusha
fildl
roll
inc
cwtl
fimuls
dec
sarb
mov
lods
ljmp
pop
dec
jp
push
loope
mov
mov
xor
and
dec
lds
stos
pop
xchg
mov
push
sub
arpl
xor
adc
mov
lcall
sbb
andl
repz
lods
aaa
shl
mov
push
pop
and
adc
lock
ljmp
xchg
cli
aaa
cld
fdiv
jle
bound
push
push
scas
movsl
or
inc
dec
arpl
jecxz
jb
mov
inc
cmp
and
insl
fisttps
popf
jns
stos
xlat
sbb
repnz
xchg
lret
add
pmulhw
add
js
push
mov
imul
push
lea
js
aam
js
cmpsl
mov
push
sarb
arpl
sub
mov
xchg
cmc
outsb
add
dec
mov
dec
inc
inc
sub
hlt
mov
imulb
cli
cvtdq2ps
sub
add
rolb
pop
arpl
sahf
flds
mov
push
cmp
fldcw
jmp
fstpl
pop
push
sarb
dec
xor
sbb
mov
jbe
ror
push
sahf
mov
dec
jns
pop
sti
cmp
push
mov
jae
dec
mov
xchg
pop
mov
movsb
pop
fstpl
test
push
mov
mov
jae
mov
sub
sub
sbb
test
cmp
movsl
mov
or
and
mov
xor
out
mov
hlt
pop
inc
fsub
fs
mov
xor
add
and
inc
sti
push
xchg
insb
sbb
jo
insl
adc
xchg
lock
scas
pop
mov
dec
pop
aad
fisttpll
xchg
mov
xchg
hlt
cmpsb
cltd
mov
int
and
dec
adc
gs
jle
sahf
sub
andb
xlat
jle
dec
mov
loopne
stc
pop
sub
mov
and
jl
imul
ja
ret
cmc
bswap
lods
arpl
lods
add
sbb
cmpsb
mov
rcrb
push
ja
mov
icebp
dec
adc
push
loope
xor
pusha
mov
inc
add
js
or
std
push
pop
std
push
cmpsw
inc
imul
stos
outsb
cld
loop
add
xchg
or
adcl
fnstsw
lret
sbb
push
xlat
adc
jg
out
decb
add
mov
cwtl
orl
adcb
cltd
lret
mov
mov
je
lea
lods
test
pushf
jns
cmc
popa
test
dec
xor
call
lods
test
sbb
and
cld
cmp
pop
add
popf
aas
xchg
push
sub
jo
push
sbb
imul
into
ror
mov
xor
xor
jl
jmp
push
and
test
mov
push
loopne
lahf
mov
dec
push
jns
pop
popa
fidivrl
cld
sbb
sarl
push
xor
mov
add
hlt
ljmp
xchg
mov
test
call
and
fnstsw
sub
cmc
daa
cmp
loope
sub
cmc
jbe
mov
notb
scas
mov
test
cmpl
cs
and
sbb
ret
test
sti
imul
mov
mov
jns
xchg
pop
nop
mov
mov
push
sbb
cmp
mov
mov
jae
lret
outsb
mov
push
jle
dec
std
aad
addr16
ljmp
pop
decl
out
push
ds
arpl
push
ss
sti
mov
lds
jae
push
jne
push
add
xchg
std
pop
or
lds
and
mov
orb
xchg
movd
bound
pop
cmovnp
in
int3
insb
or
xchg
mov
hlt
out
data16
adc
fcoml
mov
faddl
pop
shlb
cmp
mov
test
cmp
movsl
and
cwtl
or
test
cmp
cmc
ret
inc
mov
xchg
pop
outsl
xor
cmp
or
fnstsw
imul
das
imul
and
lldt
dec
adc
sub
push
popa
dec
aam
jne
adcl
sub
mov
shlb
jecxz
adc
rcr
cwtl
fildl
jg
scas
js
ja
stos
inc
jae
sub
movsb
pop
jns
sub
push
push
pop
ljmp
mov
test
pop
xchg
push
sbb
das
xchg
int
sar
push
dec
dec
pusha
inc
lcall
adc
loop
mov
dec
adc
jmp
lcall
lret
loopne
scas
push
xor
aad
inc
mov
cmpsl
and
mov
adc
jle
in
iret
push
add
es
jge
dec
inc
aad
out
sahf
into
iret
fdivr
adc
mov
mov
pop
popf
mov
movsl
leave
in
mov
sub
cmc
daa
adcl
jne
push
push
inc
sbb
sbb
jne
inc
pop
fmul
cmp
ficoms
sub
push
dec
fs
je
out
xchg
pusha
imul
nop
shll
xor
mov
orl
pop
ja
out
mov
out
dec
shl
pop
jecxz
arpl
push
test
adc
inc
fs
int
pop
xor
jl
mov
rcll
fwait
xchg
jmp
adc
push
ljmp
repnz
jg
push
add
sarl
push
add
icebp
iret
pop
jmp
bound
pop
mov
aas
fsubrs
movsb
aam
inc
lret
jmp
test
push
out
ljmp
pop
or
pop
jecxz
sbb
mov
aaa
mov
int
fbstp
xchg
test
lods
xor
andb
je
lods
jge
imul
sbb
cli
and
fs
mov
push
cmpsl
xor
adcl
sbb
lock
in
xor
js
mov
push
das
rolb
jl
adc
stc
add
and
repnz
aad
sub
add
test
sub
jno
pop
fdiv
mov
xor
mov
add
mov
out
mov
sarl
aaa
lods
test
in
orl
xor
fimuls
pop
leave
daa
in
dec
movsb
in
pop
and
sbb
repz
pop
pop
rcrl
or
mulb
or
sti
or
lods
out
xor
xchg
add
add
mov
mov
xchg
jae
jne
lea
pop
inc
mov
sub
fistpl
push
push
dec
adc
clc
inc
mov
sub
adc
dec
mov
inc
loopne
and
pop
mov
inc
in
cli
or
icebp
cwtl
cmpsb
sbb
aas
jns
inc
das
push
fmulp
int3
push
iret
jp
stc
ret
fwait
dec
ret
sub
xchg
jecxz
sarl
pop
add
fcoms
out
les
ljmp
or
nop
pop
adc
leave
dec
pop
mov
aam
sbb
popf
mov
test
cmp
cmpsb
fwait
cmp
mov
out
ret
test
sbb
add
add
stos
xchg
inc
pop
push
cmpl
out
mov
push
pusha
xchg
rol
ret
fmul
daa
push
jmp
movsw
fisubrl
add
roll
loopne
mov
out
pop
sub
jp
push
cmpsb
test
sbb
xchg
pop
mov
imul
mov
subb
rcll
sahf
lahf
in
mov
adc
xorl
jns
push
sti
arpl
dec
dec
cmpsl
push
mov
lret
add
and
das
or
xchg
shrb
outsl
dec
rorb
ret
sub
sub
xlat
sbb
mov
mov
icebp
fwait
inc
dec
loope
jb
lods
xchg
xchg
mov
pop
inc
fsts
fwait
loopne
nop
dec
xchg
dec
iret
stos
out
xor
or
xor
push
inc
ret
stc
enter
aam
scas
mov
enter
les
mov
xor
rcl
scas
jp
jnp
xchg
jb
ss
pusha
pop
xchg
adc
sbb
xchg
fcompl
fimull
push
xor
pop
push
mov
clc
arpl
in
scas
movsb
icebp
add
xchg
orb
test
jno
rolb
xor
stos
or
mov
lea
inc
mov
and
cmp
push
arpl
mov
xor
and
psrad
xor
icebp
push
push
push
in
xlat
or
jo
out
lahf
rcrl
aam
pop
setne
push
push
or
out
jp
loop
loop
testb
xor
sar
xchg
pushf
imul
or
sahf
fistps
xchg
les
pop
cmp
ret
fsubs
pushf
mov
out
movhlps
fnstsw
cmp
outsb
add
test
roll
adc
lea
loope
jb
pop
iret
gs
add
test
adc
lods
xor
sbb
and
stos
cmp
jb
movsl
hlt
int3
movzbl
repnz
cli
insl
aad
jge
bound
adc
or
and
xchg
loop
add
aas
fisubs
stos
loope
popf
push
js
pop
mov
das
sub
add
add
dec
dec
pop
lds
out
ds
outsb
out
es
sbb
or
jl
cmp
mov
imul
dec
rorl
vunpcklpd
xlat
xor
and
lret
je
pop
sub
jmp
aad
sub
int3
fiadds
in
popf
pushl
out
mov
xchg
mov
mov
or
divl
mov
cmp
insl
jne
pop
into
ss
sbb
repnz
lods
dec
cmpsl
or
push
pushf
test
jns
sub
stos
out
inc
sbb
jbe
loop
dec
pop
mov
mov
cmp
inc
pop
push
rolb
arpl
icebp
shrl
int
orl
dec
push
cmp
test
adc
out
shll
in
je
xchg
mov
out
lds
in
or
adc
push
out
cwtl
sbb
test
loope
movsl
mov
xor
sbb
push
or
fcomps
inc
sbb
push
aam
mov
jl
jge
sbb
mov
or
mov
sub
ss
mov
insl
jge
icebp
in
out
js
imul
fstpl
rcrl
popa
dec
hlt
adc
sub
ljmp
jb
xchg
lods
adc
out
jge
jg
dec
xchg
and
adc
inc
mov
lods
iret
outsl
loope
and
jae
jno
pop
sbb
sub
filds
icebp
jne
daa
add
xlat
seta
jge
iret
arpl
scas
lret
jmp
mov
add
mov
repnz
lods
je
sub
les
xor
push
and
and
and
shlb
inc
in
inc
ret
jp
ret
out
fdiv
aas
int3
shlb
pop
cmp
xor
pop
mov
cmp
adc
sub
aam
icebp
cltd
into
in
sub
pushf
test
clc
xchg
scas
xchg
int3
push
shrl
mov
jnp
pop
mov
sarb
inc
inc
jecxz
pop
pop
sub
adcl
inc
popf
hlt
xor
mov
das
xor
call
xor
push
mov
sub
push
out
dec
lea
mov
xor
and
push
sbb
jne
arpl
jae
out
add
fnsave
cmc
add
xchg
push
pop
jge
jb
mov
jg
lods
cmpsb
inc
adc
nop
neg
in
jmp
mov
dec
fwait
or
xchg
adc
icebp
test
push
mov
out
mov
xchg
faddl
xchg
je
cmpsl
out
inc
lock
mov
mov
push
or
scas
in
push
pop
lods
loope
xor
xchg
pop
js
aad
xchg
and
mov
adc
pop
pop
sub
pop
ror
scas
dec
imul
loope
dec
adc
loope
addl
jl
jl
jbe
add
jmp
jl
pop
push
xchg
out
stc
popa
fcomp
push
into
dec
rolb
xchg
push
rorw
scas
lcall
cmp
lea
dec
seta
or
stos
pop
or
stc
rcr
in
adcl
pop
jne
cmpsb
or
adc
movsl
dec
mov
icebp
sub
test
cmpsb
pop
sub
inc
add
sti
adc
sub
clc
es
fsubl
adc
movd
jecxz
mov
test
in
inc
shrl
ja
pop
xor
addr16
or
xchg
scas
push
fs
insb
jecxz
dec
loop
leave
out
jb
inc
mov
ljmp
dec
hlt
dec
inc
scas
inc
jmp
or
testb
mov
cld
lcall
xor
xor
pop
cmp
fmuls
lock
fisttpll
cmc
xchg
outsl
cmc
pop
and
loope
inc
cmpsb
stos
cmp
xchg
push
stos
cmp
out
mov
jnp
cmp
mov
mov
add
das
inc
pop
pop
pop
add
mov
dec
push
push
enter
scas
add
and
in
sbb
and
push
data16
out
movsl
push
ficompl
fwait
jnp
pusha
jl
cmp
ret
in
add
jb
ja
dec
mov
out
ret
adc
xlat
adc
dec
xchg
lock
jmp
xor
out
push
xchg
cs
xor
sbb
fwait
shlb
sbb
out
dec
push
or
jne
ja
sbb
bound
cmp
std
jp
lcall
test
or
push
xchg
sub
movsl
testl
mov
xlat
mov
pop
xor
out
push
lods
adc
clc
lods
adc
sbb
out
gs
add
adc
arpl
xor
insl
jecxz
lahf
dec
inc
sbb
mov
aam
cwtl
cld
adc
inc
ljmp
sahf
adc
dec
xor
je
xorl
mov
push
jns
xchg
push
rcll
xchg
shrb
sbb
add
or
xchg
cwtl
push
sbb
cmp
or
cmp
push
mov
subb
push
push
cmc
adcl
mov
mov
inc
dec
in
push
icebp
dec
xchg
jmp
lret
popf
and
ljmp
ja
lea
inc
das
dec
or
aaa
lret
xor
pop
sbb
lock
std
push
nop
ja
add
imul
dec
dec
mov
push
in
icebp
mov
jg
int3
movl
fisttpl
cmpsl
inc
cmpxchg
xchg
fs
movsb
movsl
sti
into
xchg
adc
or
jno
adc
aas
jnp
jae
adcb
cltd
adc
adcb
push
imul
pusha
enter
je
jns
mov
sbb
lahf
adc
pushf
int3
or
xor
add
cmpb
in
nop
ja
lahf
sub
ljmp
jg
xor
scas
pop
ljmp
popf
jle
stos
out
imul
dec
inc
cli
in
je
popf
bound
jns
aas
rcll
and
jle
cmpsl
push
mov
cmp
call
or
ja
movsb
pop
aam
js
mov
test
or
loopne
ret
or
cmp
xor
jle
inc
and
push
imull
and
mov
aaa
mov
in
adc
orl
push
inc
icebp
pop
mov
pop
push
lret
mov
lcall
fstl
repnz
sti
add
or
push
xor
fwait
xchg
aad
adc
das
fwait
sti
std
lahf
sub
push
cld
sbb
es
jmp
push
shr
and
xor
mov
lock
negb
jle
dec
mov
std
add
in
cli
movsb
loope
clc
das
push
mov
imul
in
cmp
push
stc
mov
xchg
push
iret
scas
mov
out
xor
mov
inc
dec
xchg
popf
push
rol
test
mov
lock
xor
jb
movsl
add
push
clc
in
stos
ret
call
mov
fisttps
cmpb
rorb
xor
add
ljmp
cli
ljmp
aas
iret
dec
adc
int3
out
mov
mov
repnz
cltd
test
outsl
dec
mov
lcall
dec
imul
hlt
std
jae
call
incl
jge
and
adc
arpl
jns
mov
call
int
sub
or
lock
xchg
movsl
pushf
sub
mov
dec
xor
xlat
rorl
jb
mov
dec
lcall
arpl
xchg
adc
lock
dec
std
test
push
in
xchg
arpl
jnp
roll
xchg
mov
cld
ds
pop
cs
mov
lahf
and
cmp
rclb
pop
andb
mov
jg
push
pusha
mov
pop
xchg
mov
add
arpl
mov
sbb
cmp
dec
sub
ret
jg
ret
sbbl
icebp
cmpsb
lock
lcall
outsb
mov
addr16
popf
push
cltd
call
mov
sub
sbb
dec
fmull
mov
xchg
push
mov
aaa
divl
lret
inc
aad
mov
out
dec
jg
dec
jo
cmp
addb
pop
jg
add
fldl
jae
or
fisubs
cmc
xor
call
xchg
dec
lret
xor
sub
outsl
push
scas
push
out
mov
xlat
sbb
xchg
out
out
or
push
sub
sbb
sub
mov
inc
xor
xchg
sbb
sbb
sub
sub
sub
jo
adc
dec
aaa
out
bound
rclb
sbb
mov
push
ficompl
jecxz
jg
testb
cwtl
mov
adc
or
test
lock
push
pop
and
push
or
xchg
mov
cld
cmp
leave
sbb
icebp
cmpsl
xor
push
mov
xchg
mov
xchg
add
mov
shl
dec
es
xchg
es
incb
arpl
les
inc
scas
mulb
sbb
mov
lea
test
inc
mov
cltd
out
and
dec
jp
std
sbb
cmovbe
mov
adc
aam
dec
loope
mov
adc
cmp
mov
call
mov
lock
inc
sbb
mov
into
mov
sbbl
insb
cmp
adc
and
testl
sarl
fwait
inc
mov
mov
xchg
sbb
mov
mov
in
ret
int
sahf
mov
clc
mov
fstpt
sti
xchg
adc
iret
je
jno
inc
adc
loope
shrb
push
lret
push
lock
xlat
sbb
bound
mov
push
sahf
divb
sub
sahf
ss
cmp
mov
call
mov
repnz
push
scas
cmp
mov
outsb
sbb
push
outsb
aas
pop
jl
mov
xor
mov
xchg
ss
push
lea
fcompl
loop
adc
inc
idivb
loop
bound
adc
div
cmp
ret
sbb
fisubs
or
sbb
orb
andl
lds
hlt
out
pop
push
mov
xchg
sbb
ret
lcall
in
test
aad
std
clc
pop
stos
mov
into
sub
jmp
add
dec
mov
in
add
scas
xchg
inc
loope
mov
xor
icebp
call
imul
jb
fcom
sbbl
jb
and
pop
pop
pop
pop
push
jae
sub
cmc
jl
ret
adc
pop
or
insl
pop
stos
fsubrp
out
or
mov
in
pop
aad
mov
mull
fdiv
push
jge
loopne
aaa
ds
iret
ds
mov
adc
rcl
std
filds
cmc
pop
cwtl
into
dec
pop
pop
sub
addb
lock
aas
mov
add
push
add
fnstsw
es
or
sbb
cs
dec
lahf
or
fnstcw
xor
cmc
or
shl
subl
pop
push
popf
fwait
xchg
sbb
and
dec
sbb
out
pop
aad
into
mov
ss
cmpsb
jbe
mov
xor
cmp
jb
hlt
jp
pop
fdivl
das
pushf
es
repz
mov
lods
lock
ret
test
dec
daa
cmp
push
std
fldl
jo
mov
shlb
inc
inc
sub
and
fs
or
lret
xor
sarb
scas
jg
inc
scas
test
adc
mov
pop
cld
push
std
xor
aad
inc
sub
mov
fimuls
out
roll
mov
inc
je
orb
sbb
sbb
push
rorb
stc
movsl
ret
mov
xor
inc
fistpll
adc
fs
inc
push
mov
icebp
pop
adc
pop
mov
push
xor
dec
rcrl
mov
out
sbb
fld
fistl
sbb
unpckhps
movsl
mov
push
inc
sar
or
in
lods
push
xchg
xor
cmp
sub
movsl
test
cwtl
sbb
cwtl
cs
shrl
lahf
into
lds
cmp
pop
push
jecxz
push
push
cmpsl
ljmp
sti
mov
dec
jl
scas
fdivr
aas
sbb
pop
lret
ds
and
mov
sahf
mov
adc
cmpsb
test
cmp
test
mov
mov
adc
movsl
mov
or
into
pop
sub
mov
aaa
lods
mov
and
int3
std
dec
dec
xorb
test
adc
out
in
std
lods
ret
fwait
inc
fs
fildll
inc
or
sarb
dec
test
jns
dec
orl
out
call
iret
push
lcall
jmp
add
inc
in
cmp
adc
hlt
cmc
test
fs
mov
jbe
mov
mov
jl
rolb
adc
jmp
outsl
xchg
push
imul
sub
cmpsl
add
jbe
rcrl
pusha
pop
jmp
rorb
add
int
mov
inc
cmp
pop
xchg
inc
subb
insb
inc
test
xchg
cli
jle
clc
dec
fisubs
sti
jmp
xor
clc
lods
adc
and
adcl
xor
fwait
xlat
pushf
jbe
idivl
push
mov
test
pop
popf
es
cmp
pop
xor
add
jl
ljmp
aaa
and
jbe
pop
push
adc
pop
mov
repz
jnp
dec
mov
loop
mov
aam
mov
dec
inc
and
addb
add
outsl
sub
adc
cwtl
fsts
inc
sub
out
adc
sbb
push
push
mov
bound
lods
mov
shlb
xor
sub
mov
or
push
and
sub
fs
div
inc
or
lods
push
sbb
xchg
pop
cmp
aad
jnp
and
xor
mov
push
adc
test
and
dec
and
xor
mov
pop
cli
loope
stos
inc
xchg
pop
in
xchg
test
xchg
jns
cs
adc
cmp
bound
xchg
push
mov
adc
mov
ret
daa
out
scas
seta
out
pushf
xor
in
add
enter
cmc
jp
cmp
or
adc
cs
call
push
iret
pusha
sub
stos
popa
push
cmpsb
ret
imull
sahf
add
adc
mov
mov
sbb
sti
bound
jb
jbe
jmp
push
mov
pop
mov
aam
stc
mov
mov
je
pop
and
mov
nop
xchg
mov
mov
jnp
test
ret
int
les
mov
fs
cld
or
jg
subb
fnstenv
push
and
fwait
push
mov
insb
aas
int
xchg
push
repnz
and
cmc
enter
repz
mull
lods
in
pop
test
fimull
mov
inc
and
jge
and
sbb
xchg
into
je
adc
adc
xchg
mov
mov
call
fidivrl
js
enter
xor
cmc
dec
add
push
add
dec
loop
fnstenv
jae
mov
dec
push
xchg
fwait
jae
dec
sbb
add
or
fucomi
std
pushf
imul
jae
out
int
sti
out
imul
std
sahf
xchg
mull
fs
mov
popa
jnp
cld
test
cmp
sub
sub
arpl
pop
add
push
rorl
out
sti
xchg
out
int3
inc
leave
mov
push
push
xor
outsb
cs
movsl
ret
out
ret
bound
arpl
xlat
mov
test
outsl
cmp
into
flds
jno
icebp
dec
icebp
fsubrs
push
mov
cli
roll
or
jge
mov
arpl
add
push
mov
adc
inc
lret
fdivr
push
sub
movsl
pop
imul
push
sub
rol
mov
push
mov
inc
lock
dec
stc
mov
cmp
adc
cmp
xchg
push
jl
hlt
add
xchg
enter
lock
mov
adc
fadds
and
mov
jp
stos
fildll
mov
mul
mov
pop
push
push
sahf
sbb
iret
push
pop
clc
nop
clc
pop
sbb
je
xchg
push
xor
push
fisttps
mov
inc
sbb
push
cmp
jb
fnstsw
shrl
pop
in
push
mov
out
test
xchg
dec
lds
push
cli
adc
int
cld
dec
leave
pop
mov
pop
inc
push
mov
cli
popa
insb
xchg
outsl
lcall
jp
fstps
ds
xlat
add
dec
or
imull
shl
in
cmc
mov
fsubl
mov
in
inc
xor
xor
mov
sub
test
imul
sahf
imul
shll
fs
xorl
inc
pop
pop
xor
or
in
nop
sbb
outsb
lods
or
loopne
dec
and
ljmp
jne
adc
ret
or
movsb
cmp
jno
add
mov
push
jne,pn
inc
mov
sahf
loope
pop
pop
mov
add
dec
cli
xor
into
cmp
aad
ret
rorb
dec
inc
mov
iret
jae
xor
jbe
mov
push
adc
in
movsb
inc
pop
inc
sbb
mov
and
fs
pop
sub
mov
sbb
cmp
xchg
cmpsl
push
outsb
adcb
in
add
sbbb
test
or
ja
js
sbb
in
rclb
mov
pusha
xor
or
inc
aaa
lret
and
push
pop
insl
cld
mov
lods
mov
leave
mov
fwait
shl
xor
lcall
adc
or
cmp
iret
inc
dec
imul
and
dec
dec
jmp
xchg
sub
fdivr
aaa
jl
das
fildll
add
adc
in
xchg
xor
jp
add
sahf
dec
inc
je
push
je
lods
hlt
outsb
je
mov
sbb
pop
adc
sar
push
pop
and
mov
rcrb
add
mov
xor
inc
mov
inc
jo
inc
mov
xchg
inc
sbbl
das
add
mov
adc
or
mov
loope
jp
or
dec
into
cmc
leave
fiadds
pop
pushf
jnp
push
jbe
pop
stos
mov
addl
or
adc
out
or
test
add
jne
pop
fstp
xor
daa
inc
pop
cmp
or
scas
or
mov
into
add
xchg
rorl
jo
inc
stos
jmp
adc
ljmp
stos
push
ljmp
mov
addr16
cmp
add
cwtl
mov
xchg
sahf
jns
mov
cmp
cld
lods
test
and
sti
or
add
aas
cmp
mov
pop
hlt
imul
push
add
pop
jle
mov
jns
loope
lds
mov
in
pop
xor
push
jmp
sub
cmp
test
incb
cmp
pop
or
sbb
std
movsb
loope
sub
shl
mov
lret
into
dec
or
jb
ss
int
push
lods
sbb
mov
loop
mov
jle
mov
rcrb
push
xchg
ja
mov
pop
out
sub
test
daa
and
insl
or
insb
out
popf
sti
rcll
lea
xor
ficomps
jnp
adc
jl
or
aad
in
xchg
mov
std
cltd
and
ret
addr16
fsubrl
inc
xor
mov
ss
mov
push
les
mov
into
mov
pop
pop
jno
cmpsb
cmp
fwait
ljmp
mov
inc
mov
sbb
xchg
arpl
push
dec
iret
sub
pushf
inc
mov
add
and
es
lcall
lcall
jbe
xchg
idivb
xchg
mov
stc
xor
jno
jmp
dec
pop
sbb
sbb
dec
mov
xchg
inc
jle
xchg
xchg
mov
into
aas
outsb
out
jge
xlat
sub
add
insb
arpl
outsb
mov
leave
stos
xor
in
inc
push
lahf
orb
adc
dec
cmp
daa
dec
lods
sarb
enter
das
cmp
push
in
shlb
je
fwait
pop
lods
inc
cmp
scas
jecxz
push
jae
mov
mov
cmp
xor
and
pushf
outsl
out
mov
mov
xor
dec
aas
enter
int
das
sub
add
out
push
in
sbb
les
fsubrl
mov
push
mov
sbb
movsl
clc
in
or
lock
xor
sbbl
les
inc
fisubrs
xchg
xor
inc
out
je
int3
bound
jl
add
dec
gs
addl
xor
insl
ljmp
incb
mov
mov
les
add
push
imull
or
imul
stos
test
mov
arpl
dec
xor
addl
adcl
inc
sub
add
pop
cld
sub
adc
movsb
fisubs
lret
call
cmpsl
mov
push
rcrl
push
jnp
sbb
pop
inc
push
inc
add
mov
int3
nop
mov
adc
cmpsb
xor
inc
adc
outsl
scas
repz
add
clc
mov
mov
aam
add
and
popa
js
aaa
mov
shr
jbe
pop
pop
xlat
push
in
scas
lahf
rclb
cmp
outsl
pop
enter
inc
aad
xor
lret
js
adc
test
fisttps
push
mov
mov
lret
jp
movsb
in
enter
xchg
fcmovu
adc
jle
pusha
pop
jo
xchg
push
lret
pop
push
fnsave
orl
mov
mov
arpl
xchg
mov
bound
jbe
lret
sbb
fiaddl
dec
jp
and
jnp
bound
pop
pop
mov
sbb
lret
dec
outsl
scas
xchg
mov
scas
clc
and
negl
dec
shl
jo
and
mov
outsb
std
shrb
aam
cmp
lds
add
xlat
cld
mov
adc
rcrb
cld
mov
in
mov
pusha
mov
jno
sbb
pop
and
mov
sbb
mov
xchg
and
test
inc
jecxz
stc
fidivrs
js
mov
sahf
jl
push
adcl
fldl
in
outsb
mov
aas
xchg
divl
je
pop
js
subl
xlat
sbb
addr16
or
and
daa
loope
xor
mov
ret
inc
adc
shlb
cmp
sub
cmc
shrb
ret
inc
into
mov
pop
into
mov
rorb
loop
push
adc
fcmovnb
add
xlat
jl
call
hlt
and
or
mov
popf
and
jl
shll
jmp
movsl
notb
decb
dec
xchg
in
imul
xchg
popa
in
pop
inc
es
ret
outsl
ss
les
xchg
mov
subb
popf
stc
sbb
adc
inc
lock
xchg
imul
iret
sub
dec
pushf
pop
jns
das
add
cltd
repz
jb
icebp
fildll
rcrb
filds
repz
loop
adc
inc
int3
test
outsl
sti
jl
lock
les
imul
dec
test
jne
jl
jmp
stos
fs
mov
loopne
orb
fiaddl
xlat
fcmovbe
dec
add
cs
nop
mov
push
movsb
jle
xchg
stc
mov
xlat
into
repnz
dec
mov
cmp
push
test
jg
sub
daa
mov
cmp
cli
or
mov
add
std
ljmp
mov
cmp
inc
bound
dec
sub
jl
loopne
and
mov
test
xlat
sbb
out
arpl
hlt
jo
dec
adc
fidivrl
cli
cmp
ja
push
dec
mov
enter
stos
xchg
popa
cmp
and
stos
mov
inc
std
xchg
repnz
lods
mov
stos
jns
push
std
mov
fmuls
mov
nop
arpl
mulb
xchg
jnp
cld
adc
inc
inc
decl
dec
ds
into
sbbb
mov
sahf
lcall
adc
add
push
sub
sub
ds
scas
fwait
leave
mov
outsl
into
push
push
nop
ljmp
movsb
cli
in
xchg
mov
mov
imul
clc
sub
push
push
mov
in
fs
cld
mov
shlb
sbb
inc
cs
adc
roll
stos
pop
into
lret
pop
sub
xor
out
cwtl
ficomps
or
mov
icebp
in
addr16
or
cmp
xor
or
dec
sbb
icebp
mov
push
mov
jge
inc
lds
jnp
faddl
cld
jge
mov
cmp
scas
outsl
dec
shll
dec
aaa
aam
xchg
mov
inc
popf
xchg
std
inc
pop
push
push
outsl
add
repz
jno
inc
loope
inc
pusha
insl
xor
mov
xorl
nop
insb
ficomps
adc
popl
ljmp
ret
mov
push
popf
jbe
stc
stos
hlt
and
loope
aas
xor
xchg
popa
fldl
sbb
xchg
mov
in
scas
loope
and
out
add
mov
xchg
inc
movd
dec
aam
jecxz
pusha
cmp
outsl
pop
clc
sub
cmp
insb
or
cmp
lahf
and
xlat
sarb
ja
jmp
cmp
mov
cmc
jp
rcrl
sbb
push
cmp
cmp
mov
xchg
inc
mov
mov
int
out
mov
stos
out
clc
int
pusha
sbb
das
or
or
pop
push
add
shl
sbb
fiadds
orl
dec
mov
inc
cmpsl
mulb
fs
stos
sbbb
xchg
cmp
in
or
or
mov
sub
insl
add
xchg
inc
cli
push
jl
lea
push
lret
imul
mov
and
ficompl
push
push
xchg
fwait
ljmp
pop
lret
inc
stos
push
lods
mov
movsl
adc
jae
mov
mov
cmc
cmp
jge
call
push
enter
fisubl
or
pop
sbb
lock
pop
sbb
mov
rolb
ss
data16
cmp
mov
lock
mov
fimuls
aad
mov
fldcw
push
and
xor
testb
jmp
jns
inc
loope
lods
lds
pop
hlt
cmp
scas
ret
ret
push
outsb
imul
insl
push
xchg
in
ja
sbb
sbb
xchg
dec
pushf
pushf
scas
in
xchg
jns
jb
xchg
movsw
lahf
mov
xchg
xchg
xlat
outsl
mov
cli
mov
xchg
pop
out
cld
icebp
mov
addr16
inc
xchg
daa
and
xor
test
pop
pusha
add
mov
and
test
fcoms
mov
and
cmp
mov
pop
xor
mov
rcrl
cmc
xlat
loopne
data16
xchg
movsl
push
popa
loope
aaa
cmp
xchg
sub
mov
fsubrs
sbb
fidivrs
popa
mov
push
adc
loope
sbb
pusha
pop
fmull
push
dec
sbbl
fcomps
cmp
mov
imul
std
jmp
lahf
outsb
pop
cltd
xchg
fwait
push
xchg
cmp
js
das
pop
mov
or
xor
or
xor
xor
in
dec
scas
adc
hlt
adc
out
mov
pop
pop
pop
lods
jmp
push
push
fidivl
test
mov
das
push
int3
jne
mov
inc
sbb
mov
scas
fsubrs
sahf
jns
lods
push
push
pop
in
and
sbb
xlat
or
daa
icebp
in
sbb
mov
push
sbb
dec
jbe
push
out
pop
mov
push
xchg
push
inc
clc
jl
aaa
mov
mov
stos
mov
mov
lahf
push
dec
sbb
inc
mov
arpl
out
scas
adc
fs
rcrl
nop
pop
inc
sbb
or
fcmovu
dec
clc
fwait
mov
sub
hlt
sbb
inc
cmp
adcb
outsb
inc
data16
imul
outsb
pop
push
into
bound
push
add
test
xor
push
xor
xor
ja
out
subl
or
jns
repnz
xor
mov
pop
bound
aad
test
mov
pop
xor
aas
cmp
mov
sub
push
in
in
insl
stos
dec
xchg
insl
sarb
push
das
sub
lahf
add
xor
jns
mov
push
or
jecxz
mov
dec
mov
out
mov
xchg
loop
fwait
arpl
pop
jmp
inc
mov
jno
insl
lea
out
fldt
loop
cmp
insl
jecxz
adc
mov
mov
test
sbb
in
sub
rorl
mov
and
imul
mov
dec
in
test
pop
pop
jo
or
sub
sub
loope
xor
inc
rcrb
xor
movsb
lahf
insl
mov
inc
fcmovnb
ss
popf
loope
aad
jmp
roll
dec
enter
xor
cli
stc
arpl
adc
push
mov
or
and
cmp
pop
imul
shlb
xchg
aas
ss
push
jmp
xor
adc
fistpll
xchg
mov
fmull
iret
movsb
ljmp
test
pop
hlt
or
jb
js
imul
sbb
xorl
rcr
lret
cmp
ljmp
or
fwait
insl
add
adc
push
in
sub
roll
sbb
ja
add
xchg
sub
addr16
ja
test
push
lea
fldln2
inc
mov
dec
adc
pop
mov
lods
xchg
test
ret
jg
push
xlat
pop
scas
sbb
add
mov
mov
outsl
cld
imul
dec
add
sub
dec
clc
test
sbb
cmpsl
xor
xor
fcoml
mov
push
mov
cmpsl
pop
push
repz
mov
pop
push
in
jmp
push
mov
and
mov
inc
in
loopne
jp
mov
xor
and
mov
pop
or
ret
pop
loope
xor
aam
mov
aam
andb
insb
sub
push
ljmp
movb
mov
ja
dec
ja
les
int
popf
dec
test
mov
push
sar
add
call
xlat
jmp
shll
mov
push
xchg
fs
int
xor
mov
cld
xchg
mov
lods
jg
inc
sub
pop
inc
je
mov
dec
adc
xlat
xor
sarl
and
aas
sbb
jle
sub
shll
cli
lret
dec
shrl
xchg
mov
inc
push
cmp
ds
insb
xlat
xlat
ret
dec
imul
arpl
push
mov
faddp
jl
mov
mov
enter
clc
fmuls
test
mov
mov
inc
xor
insb
pop
das
ret
sub
adc
xchg
jmp
arpl
clc
and
shlb
aas
mov
adc
mov
jno
out
sbb
shll
pop
mov
mov
add
movsl
or
mov
jg
repz
inc
dec
cmpsb
cltd
sbb
lods
jb
fbstp
movl
inc
frstor
pop
leave
inc
icebp
test
push
jae
jb
out
mov
push
cmp
cmc
xor
or
xor
add
or
lret
lock
add
fadd
lea
or
gs
ja
into
adc
pop
in
sub
cmp
popa
test
jmp
cltd
andb
adc
push
mov
std
sbb
popf
mov
pop
push
and
gs
iret
jg
xchg
mov
add
or
cmp
pop
xchg
xor
popa
jne
xorb
mov
dec
icebp
popf
call
sub
and
fmull
xor
xchg
mov
mov
clc
mov
call
xor
test
sub
js
arpl
dec
pushf
mov
add
cli
scas
push
gs
mov
xor
mov
cwtl
or
adc
xor
dec
repz
dec
lock
loop
pop
out
ljmp
sar
push
rorb
inc
pop
fldl
fwait
xchg
inc
dec
clc
outsl
push
fbstp
jg
scas
push
roll
ret
mov
fisubs
outsl
sbb
ds
imul
out
sub
dec
add
push
mov
test
nop
bound
pop
stos
inc
jb
out
and
int
shr
out
fbstp
aas
pop
pop
push
mov
push
lcall
sub
clc
dec
lcall
jno
cmpsb
ret
pop
ja
push
fdivrs
mov
out
cmp
mov
pop
fwait
imul
imul
jg
xor
lods
or
mov
mov
push
andl
and
xchg
imul
sub
mov
inc
or
shll
lret
loope
and
sbb
outsb
jle
add
cmp
fstpt
adc
mov
jnp
push
test
xchg
mov
sub
imul
js
lods
es
adc
mov
movnti
add
ds
xchg
xor
xor
dec
fistpl
dec
popf
xor
outsb
mov
popa
mov
cli
loop
jae
fsubrs
push
add
hlt
js
rcl
loopne
bound
cmp
xchg
mov
push
lock
push
sbb
xchg
mov
dec
xchg
cmp
das
or
or
shll
shrl
push
fisttpl
out
mov
jne
jmp
popf
out
push
mov
push
in
push
shrb
adc
fstl
jo
xchg
sbb
lds
fidivrl
pop
cld
out
lret
in
andl
pop
mov
fs
pop
cltd
add
push
push
mov
sub
cld
push
or
repz
xlat
movsb
aad
cmp
fldcw
pop
fstpl
jmp
mov
pop
sub
push
jmp
loop
push
icebp
mov
add
xchg
repz
mov
mov
addr16
sbb
ret
cmp
add
pop
repnz
cmp
or
fs
pop
adc
decl
and
out
sarl
and
sub
sbb
jae
push
push
imul
lcall
fucomi
mov
movsb
pop
mov
dec
sub
adcl
and
cmp
iret
in
xor
xor
ret
xor
shr
xchg
adc
lds
rcrl
mov
mov
sub
mov
add
or
cmp
sbb
fadds
aam
pushf
ret
enter
cli
dec
and
jb
mov
lea
lea
push
pusha
dec
sbb
cmpsb
xor
pop
pop
lcall
push
adc
mov
cld
sub
pop
lret
mov
jg
inc
adc
lea
jg
out
sbb
pop
sahf
cmp
lock
push
push
leave
incl
rolb
cwtl
outsl
inc
fsts
sbb
adc
rcrl
scas
mov
push
push
addr16
andl
mov
lahf
or
inc
shrl
popf
xchg
add
lret
jnp
mov
js
push
lods
pop
dec
dec
les
push
jnp
aas
mov
mov
popa
data16
ja
dec
mov
mov
lret
pushf
jbe
mov
cmp
sub
sahf
jecxz
fisttpll
inc
lods
xchg
shrb
popf
inc
xchg
dec
fsubrs
cmp
test
lea
cs
adcl
jmp
xor
pop
adc
addr16
and
mov
out
call
jle
sbbl
pop
pop
addr16
push
cmc
push
jp
clc
and
and
jne
sarl
loopne
idivl
iret
fisttpl
fdivs
mov
mov
cltd
test
notb
popf
add
pop
sbb
mov
arpl
push
mov
sub
loopne
icebp
sbbb
dec
xchg
ljmp
push
cltd
mov
scas
mov
mov
or
mov
fwait
sti
out
adc
xchg
push
mov
dec
mov
xchg
repz
fldcw
call
mov
pop
sbb
xchg
insb
lds
and
in
jp
push
in
negl
jge
aaa
cwtl
xchg
mov
dec
cmp
xchg
cli
xchg
xor
push
sbb
sbb
fwait
std
jno
jg
lret
cli
jns
sbb
loop
cmp
aaa
les
cmp
stos
repnz
outsl
fsubs
pop
test
test
sbb
enter
or
xchg
xor
cmp
lds
sbb
fsubr
push
xor
scas
add
inc
sahf
test
dec
inc
je
push
int3
mov
les
repz
js
push
outsb
lret
aas
xchg
add
ljmp
out
push
jo
cmpsb
loopne
mov
imul
in
inc
mov
inc
pop
arpl
out
lcall
jg
pop
arpl
je
cmp
ljmp
subl
cmp
dec
pop
lret
aad
es
rorl
mov
ja
pusha
sahf
dec
call
cmp
outsl
enter
pop
sahf
outsb
call
mov
movl
sahf
xor
mov
jmp
testl
mov
mov
nop
in
cmp
inc
push
repz
fstpl
in
inc
pushf
cld
aam
xchg
loope
and
xor
push
xchg
jecxz
push
loopne
lret
test
imul
or
test
test
push
xchg
fs
push
dec
push
mov
ljmp
sbb
xchg
mov
xchg
jo
sbb
xor
outsl
pop
mov
shrb
dec
and
or
ja
mov
lods
out
inc
jl
push
xor
insb
dec
das
sbbl
popa
test
pushf
sub
inc
mov
cmp
scas
push
sbb
lods
insb
fs
pop
cs
je
mov
orl
or
fistpl
adc
pop
and
sub
aas
push
jns
mov
lahf
cmp
xchg
out
repz
sbb
push
in
mov
insb
rep
or
out
adc
push
jo
push
cmp
pop
cmp
sub
lcall
adc
mov
mov
or
aas
int
mov
xlat
ret
dec
notb
sarl
dec
rorb
xchg
add
sti
mov
sub
inc
mov
jg
mov
test
xchg
sub
push
xor
xchg
popa
or
xor
hlt
das
adc
push
pop
mov
pop
jle
scas
xchg
or
jp
pop
xchg
or
outsb
ret
roll
xchg
pop
lods
or
insl
cmpsb
or
push
add
aam
and
fcmove
inc
fs
out
ret
scas
cmp
shl
cmp
pop
cmp
clc
mov
pushf
in
cmp
dec
and
push
jne
inc
mov
es
out
inc
pop
les
rcll
sbb
out
adc
mov
pop
ret
pop
imul
int3
dec
mov
fildl
test
push
test
sbb
stc
mov
pop
jg
cmp
pop
mov
imul
fidivrl
pop
in
loopne
stos
inc
adcl
mov
sub
pusha
inc
nop
xor
mov
aas
sahf
cltd
loope
push
dec
fnstenv
add
sub
repnz
leave
das
push
lcall
out
inc
out
aad
sbb
int
cmp
xchg
mov
outsb
and
dec
or
or
scas
mov
sub
shlb
xchg
dec
into
in
lea
jo
xor
pop
cmp
add
into
lret
lock
mov
or
add
rclb
outsb
mov
pop
fiaddl
cmc
mov
shlb
dec
cmpsb
jns
mov
inc
lods
rorl
pop
cmp
xchg
inc
js
gs
dec
scas
cmp
lret
cmp
int3
shr
pop
dec
and
nop
fstpl
sub
xchg
mov
arpl
mov
add
sub
dec
lahf
int
shrb
fldl
pusha
loope
mov
test
cwtl
lret
mov
pop
push
jae
es
out
scas
imul
cwtl
sub
sub
sbb
or
mov
cmp
pop
dec
in
inc
shlb
mov
mov
int
mov
je
pop
pop
sbb
cli
pop
fsubr
dec
pusha
pop
inc
push
jp
dec
or
jecxz
js,pn
xor
repz
imul
push
jl
sbb
aam
jle
daa
xchg
mov
shlb
adc
cs
jne
orl
cld
and
nop
movsl
negl
add
sub
xchg
mov
mov
das
mov
cld
adc
ss
xor
call
push
and
fstpl
leave
cmpsl
xchg
roll
mov
pop
push
sub
mov
xchg
imul
lock
outsl
retw
adcl
stos
out
push
icebp
inc
in
cmp
xchg
push
jmp
lret
adcl
call
fidivs
pushf
mov
push
stos
jno
bound
loop
aas
dec
rcrb
mov
sti
lods
add
imul
je
jg
clc
inc
aas
decb
inc
pushf
push
xchg
fcoms
jmp
addl
sub
lea
leave
sti
sub
sbb
cmp
adc
push
in
or
ja
lds
add
int
push
cmpsl
mov
dec
mov
cwtl
sub
pop
enter
insb
int
les
xor
mov
jns
xchg
sarb
pop
mov
sbb
mov
dec
xor
das
in
and
jb
sbb
int
cmp
in
cmc
xor
dec
mov
mov
jno
adc
xchg
and
xchg
or
sbb
mov
scas
mov
adc
enter
xchg
sarb
out
sub
pushf
ret
repz
push
lea
cltd
pop
cmp
jbe
jbe
rclb
jbe
mov
inc
sub
orl
mov
push
jl
and
adc
push
mov
pop
add
xchg
loop
bnd
pop
push
jecxz
xchg
rorb
in
arpl
dec
mov
popf
inc
push
bound
xchg
stos
cld
or
or
xchg
push
sahf
mov
cmpsb
adc
insb
add
pop
jbe
into
push
ffree
in
pop
xchg
test
lahf
jmp
mov
or
pop
subl
pop
or
pushf
jmp
and
arpl
pop
shl
adc
sub
shlb
scas
into
push
pop
pop
ret
out
jbe
cmp
sub
hlt
fsts
addl
xchg
mov
or
test
cli
int
cmpsb
lock
adc
imull
add
sbb
inc
loopne
xor
arpl
jmp
out
and
cmpl
lret
outsb
enter
cmp
add
xchg
fisttpll
or
clc
inc
mov
les
adcl
fisubl
loop
mov
jnp
into
or
cs
gs
cltd
bound
mov
leave
iret
or
movsl
or
imul
sub
inc
add
mov
clc
pop
addb
ljmp
and
mov
add
popa
mov
js
inc
jp
call
fwait
jp
pusha
fimuls
jnp
div
bound
pusha
pop
sub
std
cmp
cmp
jnp
and
cmp
dec
sarl
mov
insb
loop
push
cmpsb
addr16
sub
into
lcall
and
jae
pop
es
or
sbb
aad
ljmp
movsb
mov
and
outsl
dec
movsb
jae
dec
add
insb
sub
outsb
mov
call
aaa
lcall
ss
push
iret
pop
bound
lds
in
dec
addl
dec
and
test
sub
pop
popf
popa
inc
jl
mov
popa
lods
push
mov
xor
shrl
xor
pop
arpl
icebp
in
jg
mov
in
xor
sbbb
xchg
push
or
add
fistps
andb
inc
ja
mov
mov
inc
add
pop
in
pop
xchg
inc
testl
inc
mov
push
add
movsl
lahf
inc
pop
aad
pushf
test
sarb
xor
decl
mov
mov
imul
dec
cmpsl
insl
push
roll
mov
lds
enter
shrl
pop
jp
or
mov
xor
push
movsl
int3
xchg
xlat
mov
int
cmp
jo
aad
add
push
push
ja
push
nop
lock
stc
mov
pop
mov
dec
subb
in
sbb
int
daa
repnz
div
or
sbb
xchg
repz
adc
mov
inc
mov
inc
rcrb
and
mov
inc
arpl
cltd
movsb
jmp
push
push
inc
cli
es
testl
addr16
pop
ja
pushf
fsubs
mov
data16
and
loope
pop
and
mov
shr
gs
sub
inc
push
cli
cmp
rorl
stos
out
xor
xlat
pop
or
addr16
dec
fwait
mov
mov
addr16
mov
and
cmpsl
fsubs
dec
mov
aaa
mov
call
mov
jae
mov
push
jae
ret
add
xchg
push
mov
stos
xchg
mov
inc
cmp
pop
inc
out
gs
mov
fsts
inc
jmp
icebp
pop
ljmp
xchg
adc
fwait
cwtl
dec
sbb
push
add
aad
sti
das
mov
push
inc
and
nop
xor
movsl
lret
mov
xchg
dec
push
lock
mov
mov
xor
cltd
outsl
pop
mov
cwtl
cld
jmp
add
pop
xchg
pop
pop
icebp
adc
mov
push
or
test
jecxz
inc
push
fadds
xchg
push
jecxz
movsl
or
fsubrp
sub
jmp
mov
mov
mov
xchg
dec
je
and
push
xor
sub
mov
jp,pn
add
fimuls
push
cmp
sbb
add
test
push
gs
mov
jnp
jg
mov
es
adc
imul
clc
inc
sub
mov
fistpll
les
testl
sbb
pop
cmp
faddl
outsl
xchg
xor
add
lret
mov
sbb
dec
int3
es
jecxz
or
stos
sbb
out
repz
push
pop
mov
cmpsl
xchg
add
sbb
and
test
enter
in
mov
in
xor
jg
std
out
sbb
repnz
xlat
daa
dec
cmp
test
mov
dec
sbb
arpl
mov
test
cwtl
ficoms
imul
sub
hlt
mov
and
hlt
dec
xor
arpl
in
inc
dec
mov
iret
add
push
jecxz
mov
cltd
out
jbe
add
sbbb
fisttpll
xlat
out
xorl
xchg
lock
mov
nop
or
mov
out
das
and
dec
pusha
pusha
push
mov
in
cs
push
movsb
stos
push
icebp
leave
dec
mov
lea
xchg
gs
mov
pop
mov
jae
push
stos
push
jo
mov
aam
push
add
mov
mov
scas
arpl
mov
out
cmp
lcall
jbe
adc
lret
gs
fstpl
into
pop
mov
insl
add
jge
in
dec
or
fisttpll
idivl
push
addl
lahf
mov
out
or
std
addr16
jecxz
ljmp
rcrl
mov
jge
out
sbb
imul
and
lret
adc
rcrl
movsb
lock
loopne
std
mov
pushf
pop
js
mov
mov
push
or
jno
jbe
xchg
dec
pushf
sub
fldcw
inc
test
push
and
enter
mov
mov
insb
mov
lea
cltd
decb
std
imul
mov
movsl
or
rcrl
or
aad
mov
jb
sub
xchg
fsts
cmpb
sub
sbb
push
in
aaa
orb
mov
xchg
push
dec
arpl
pushl
jge
push
sarb
mov
push
rclb
or
jmp
mov
pop
add
adc
adc
sub
pop
adc
insl
cmc
pop
dec
dec
hlt
lods
sbb
cld
pop
pop
pushf
je
das
push
and
mov
sub
imul
test
jmp
out
dec
add
jmp
mov
adc
dec
xlat
test
dec
cmp
xchg
jecxz
pop
sub
jbe
mov
iret
sbb
inc
mov
or
fucompp
xchg
nop
jp
adc
fs
adc
add
mov
lds
popf
insb
dec
pop
cmp
push
cmp
dec
push
or
xchg
jp
int3
jg
je
adc
mov
lret
dec
insb
inc
inc
ds
xor
mov
nop
data16
jle
mov
cmp
add
cltd
imul
jl
dec
mov
jg
sahf
pop
push
dec
dec
mov
shll
mov
iret
repnz
test
out
jne
jnp
mov
sti
push
stos
dec
rcl
inc
lcall
xchg
dec
or
mov
hlt
pop
xchg
in
adc
ret
lea
push
xchg
out
push
mov
xchg
clc
xor
adc
mov
xchg
rcrb
pop
or
sbb
adc
add
repnz
pop
cli
ljmp
jle
pop
mov
jne
add
inc
or
test
push
mov
mov
fldl
ss
std
add
ja
shll
and
push
xchg
mov
add
test
into
inc
fst
insb
dec
pop
mov
jp
fs
mov
int
out
hlt
testb
push
pop
js
pop
std
cmp
inc
mov
add
fs
repz
cmp
sub
jmp
scas
jp
hlt
adc
dec
and
pop
push
shlb
add
inc
xchg
sbb
and
clc
push
sarl
xlat
stos
js
addl
xor
je
lds
cmp
lods
loopne
sbb
cmpl
fcomps
je
loop
dec
jno
lahf
xlat
imul
inc
xor
dec
sbb
xchg
inc
fildl
mov
or
stos
push
test
stos
test
pop
mov
cli
push
push
inc
adc
repnz
push
lock
pushf
mov
les
pop
or
inc
dec
imul
mov
sub
jns
sbb
push
roll
add
mov
mov
sbb
call
sub
push
fldt
cmp
add
cmc
or
mov
mov
aam
push
subb
and
push
mov
lahf
arpl
in
inc
jle
sub
adc
mov
in
sub
popf
xor
xchg
pop
xchg
mov
mov
subb
or
adc
mov
fcomps
xor
aam
push
add
andb
out
in
adc
sti
sbb
cmp
lcall
jl
call
bound
rorl
ds
mov
pop
push
xor
cli
xchg
pop
mov
xlat
cmpsb
push
pop
idivb
pop
add
add
ret
leave
push
pop
inc
dec
cmpsb
add
push
inc
cltd
lahf
sub
xchg
out
loop
xor
cmp
xchg
mov
aas
inc
sbb
mov
stos
mov
repz
pop
jns
bound
mov
movsl
jnp
lods
negb
cmp
xor
push
xchg
test
pop
stos
flds
pop
pop
or
cmp
insl
sti
push
out
and
xchg
push
add
sub
cmp
fcmovbe
jb
adc
inc
cld
fs
mov
push
adcb
movl
popl
mov
mov
jae
movsb
pop
lret
xchg
dec
imul
and
ja
push
inc
aas
pop
inc
or
fsubs
xchg
fcmovb
rorl
mov
adc
imul
shrl
jo
aad
inc
pop
sub
cmp
cmp
inc
or
hlt
xchg
push
mov
xor
outsl
in
dec
fisubl
in
or
mov
xor
sub
sbb
sub
mov
adc
subl
sahf
pop
pop
jl
outsb
bound
xchg
mov
dec
dec
addr16
cmp
les
mov
mov
mov
test
test
pushl
push
pushf
xlat
jecxz
pop
das
sbb
std
popf
int3
das
mov
add
or
xchg
adc
sbb
mov
dec
add
push
or
repz
shlb
out
mov
lret
filds
or
lods
iret
mov
pop
ljmp
mov
and
popf
test
loopne
sbb
popa
push
daa
inc
and
sbb
xchg
and
pop
xor
sbb
imul
psraw
push
adc
inc
or
movsl
mov
jae
pop
insl
push
mov
pop
in
movsb
push
adc
out
add
xor
in
xlat
insl
fidivrs
jecxz
mov
add
repz
jno
iret
mov
adc
scas
sbb
scas
hlt
pop
pop
mov
cltd
test
dec
inc
cmc
cmp
adc
xchg
push
mov
imul
jle
subb
pop
test
sub
stc
sub
fstps
push
cmc
cwtl
fnstcw
jne
push
pop
icebp
popf
bound
daa
xchg
jbe
mov
jmp
xchg
adc
rorb
pop
imul
dec
lods
imul
mov
dec
mov
push
lahf
push
inc
sbb
cmp
pop
push
out
leave
adc
push
sbb
push
hlt
lcall
pop
jns
mov
punpckldq
outsb
mov
xor
movsl
xor
mov
pop
mov
lret
sbb
or
test
fisttpl
sti
pop
imul
pop
testl
test
dec
popa
inc
pusha
add
adcb
xchg
xor
scas
addb
stc
mov
inc
ds
lea
imul
adc
movsb
dec
mov
mov
push
mov
fmul
xorb
in
push
fs
shlb
fwait
mov
lock
andb
add
sti
fdivl
movsl
push
cld
add
push
fstps
cvtps2pi
jecxz
repnz
ljmp
pushf
iret
mov
mov
mov
dec
dec
xor
adcl
mov
dec
in
gs
xor
dec
fwait
test
and
sbb
arpl
sbb
data16
push
mov
dec
cld
push
sbb
and
jae
jl
push
jl
pop
lock
roll
in
ret
scas
iret
dec
push
enter
mov
repz
and
jnp
out
into
push
cmpsl
add
sbb
jmp
jl
sub
sti
cld
shll
cmp
pop
xlat
jp
test
dec
icebp
sbb
lock
mov
loopne
adc
cmpsl
or
xchg
gs
out
mov
mov
mov
data16
or
pop
pushf
outsb
xor
xchg
enter
push
jbe
push
cld
pop
aam
subl
add
pop
addl
rorb
xlat
xor
and
push
fnstenv
in
jle
and
jmp
jg
outsl
xor
out
dec
cmp
lods
xchg
les
jecxz
mov
hlt
or
lds
in
dec
enter
xchg
rclb
inc
pop
sub
sub
je
test
les
popa
cmp
lods
jnp
push
scas
rorl
inc
push
sti
inc
dec
jecxz
lock
sbb
gs
cli
mov
aam
aam
jo
sbb
fwait
sbb
pop
xor
pop
shl
les
sbb
jecxz
ficoml
jb
dec
mov
les
mov
jl
les
xchg
sub
stos
mov
inc
jmp
mov
fidivrs
or
mov
popa
or
ljmp
ss
push
cld
shr
mov
stos
and
arpl
push
insl
jbe
inc
or
aam
scas
out
jae
mov
lods
outsb
or
xor
out
or
mov
or
or
and
addr16
or
xlat
xor
pushf
push
in
xchg
fistpl
divl
xchg
mov
cmp
in
movsl
fistpll
xchg
adcl
inc
mov
mov
jae
aaa
adc
ret
idivb
negb
mov
mov
mov
daa
repz
ss
jg
mov
sub
sti
dec
mov
cmp
xor
fisttps
and
call
mov
jecxz
wrmsr
mov
dec
repnz
push
cmp
or
xchg
push
sub
insb
out
and
inc
fwait
insb
test
inc
adc
sub
sub
outsl
xchg
xchg
push
sti
push
gs
push
mov
pop
in
and
popf
push
roll
lea
dec
dec
movsl
hlt
jbe
mov
push
arpl
lret
pop
mov
imul
cmp
cltd
test
into
out
pop
scas
stc
xchg
addr16
inc
lea
cltd
mov
cmp
xchg
dec
mov
js
sbb
pop
jp
sbb
ret
xor
hlt
dec
or
aam
or
mov
ja
mov
iret
inc
mov
jbe
xchg
gs
jmp
ljmp
push
sbb
inc
cmp
mov
lret
mov
int
sub
adc
outsl
jmp
pop
xchg
xor
jno
or
out
in
mov
call
cmp
call
adc
aaa
push
xchg
xorl
push
lods
test
fadds
jnp
pop
sbb
jg
xchg
clc
cmpsb
jo
push
inc
add
adc
mov
inc
or
mov
bound
div
cwtl
aad
pop
mov
fwait
ss
add
sub
int3
cmp
jge
mov
or
lahf
sub
popa
dec
pop
xchg
rcr
pop
mov
jecxz
adc
clc
nop
mov
shrl
lahf
iret
adcb
cld
dec
clc
lods
sub
lahf
cmp
add
div
sub
shlb
mov
jne
int3
push
mov
icebp
dec
je
shrb
inc
mov
out
es
aam
loop
insl
push
mov
xor
insl
cwtl
arpl
fs
aad
ds
loopne
lret
outsl
addl
cltd
fldl
and
push
xlat
in
pop
fwait
popf
je
add
jle
dec
push
sbb
pop
cmp
push
or
push
enter
xchg
mov
scas
and
mov
sub
lahf
push
in
pop
mov
popf
ror
push
rcl
sub
sbb
jl
lods
xchg
ss
mov
ljmp
lret
out
adc
jo
cld
inc
cmpsl
movsb
jnp
pop
cmp
cwtl
cmc
dec
mov
inc
sub
lcall
movsl
jb,pt
pop
push
rcrl
xlat
cs
dec
hlt
sbb
arpl
loopne
fld
in
imul
test
adc
icebp
stc
aam
push
gs
out
rcll
fwait
push
pop
mov
push
or
cmp
pop
and
stc
out
fwait
out
jecxz
and
lods
rorb
inc
outsb
cltd
fmull
jge
or
test
test
dec
sbb
pop
xchg
xchg
hlt
mov
outsl
in
pop
dec
out
cwtl
aas
and
in
and
dec
shll
sahf
lret
dec
and
xchg
pop
or
jecxz
xchg
push
dec
out
ds
jo
les
sub
pop
std
ja
adc
sbb
mov
xchg
cmp
negl
xchg
ja
testb
aas
jle
pop
rolb
addb
mov
jns
add
xchg
movsb
sar
test
loopne
xchg
inc
sub
push
jmp
stc
mov
pop
stos
ds
jmp
sub
mov
sub
ret
outsb
and
cmpsb
cmpb
outsb
jecxz
out
outsl
shl
sbb
cld
jp
xchg
add
aad
push
xchg
mov
icebp
xor
ret
pop
xchg
mov
mov
mov
dec
fwait
add
sbb
jg
push
dec
add
sbb
dec
out
call
ret
inc
ror
ret
push
dec
pop
or
into
dec
mov
sub
push
stos
test
in
iret
ficoms
xchg
in
push
and
cli
shll
cmpsl
dec
lds
sbb
cmp
cmc
jb
popa
pop
and
xchg
jne
lret
ljmp
andl
repnz
sub
sbb
mov
les
mov
dec
or
fcoml
mov
push
and
cmp
mov
mov
jno
or
dec
lret
ds
pop
loop
hlt
sub
call
lods
lods
add
inc
rorl
jo
jb
sub
push
mov
mov
addr16
jbe
jnp
adc
xchg
dec
fwait
push
mov
and
mov
cmpsb
jbe
out
or
adc
test
dec
mov
adc
leave
outsb
inc
inc
add
and
lock
mov
std
pusha
pop
fcom
xor
dec
jl
notb
pop
in
popf
cs
push
icebp
pop
dec
test
rcr
cmp
pop
sub
mov
mov
sbb
push
xchg
mov
mov
sub
pop
jno
and
mov
lahf
int3
mov
lock
repnz
callw
stos
lcall
xchg
mov
mov
cmp
lcall
mov
lea
pop
jne
cmpl
push
pusha
popa
add
pop
lods
xor
out
adc
mov
outsb
sub
loopne
inc
cmpsl
mov
mov
ljmp
or
push
shl
mov
pop
stos
adc
xlat
pop
in
daa
shlb
fcomps
outsb
pop
cmp
sti
mov
lcall
add
push
jl
test
in
repz
dec
aad
shl
jle
imul
cltd
popf
cmp
shll
lods
stos
xor
xor
andl
aam
test
push
mov
mov
daa
cs
js
jp
adc
test
mov
repnz
and
arpl
mov
sub
setnp
inc
popf
insb
stos
or
dec
push
add
ret
outsb
idivb
xchg
push
pusha
pop
cli
dec
pop
sbb
cmpsl
and
pop
fwait
mov
dec
push
jb
cli
and
addr16
sbb
mov
add
add
pop
arpl
rcl
cmc
dec
scas
pusha
fsts
jmp
xor
mov
call
xchg
mov
xlat
and
mov
or
out
push
cmp
jmp
cld
add
divl
inc
scas
ja
out
int3
inc
int3
adc
pop
pop
fs
mov
xchg
gs
xchg
xor
jne
adc
pop
jbe
hlt
std
std
sub
cwtl
adc
mov
pushf
adc
xor
ficoms
mov
out
fwait
sahf
sub
xchg
mov
xchg
xor
es
fs
fwait
mov
push
mov
nop
lret
pop
xchg
jns
jb,pn
xchg
sub
cmpsl
stc
pop
neg
mov
and
jl
mov
addr16
leave
lock
and
int3
clc
cs
push
loopne
sbb
xchg
das
outsl
push
xchg
mov
xchg
inc
mov
or
mov
mov
repz
daa
pop
fs
adc
hlt
in
andl
pop
inc
jb
popl
pop
push
inc
pusha
push
nop
xor
add
push
hlt
test
lods
xor
mov
mov
decl
aas
dec
cmc
daa
clc
idivl
jp
cltd
or
icebp
loop
mov
xlat
xchg
stos
and
gs
adc
dec
or
lds
push
cmc
pop
fnstcw
js
pop
jno
fnstsw
stos
or
mov
dec
pop
inc
into
sbb
cmp
pop
or
mov
xchg
pop
ja
or
pusha
jne
jge
jns
or
and
mov
aas
push
out
loopne
js
fisttpl
jbe
lods
std
in
lods
or
xchg
sub
lret
dec
mov
mov
sbb
clc
mov
sub
mov
sub
sub
sti
sub
mov
test
out
mov
cmp
out
mov
jae
adc
sub
out
enter
jecxz
cld
sbb
push
push
cmp
sbb
jl
icebp
les
cs
and
ficomps
ja
jp
cld
cli
std
mov
outsl
aas
mov
rclb
inc
popf
or
dec
cwtl
sarb
cmp
dec
and
and
arpl
dec
dec
test
in
lea
pop
loop
pop
xchg
movsl
loope
sub
popa
dec
xchg
push
cltd
jge
aaa
add
add
std
fcomps
and
insl
in
mov
comiss
sarb
push
in
gs
sahf
out
mov
out
push
pusha
mov
cwtl
es
cltd
ss
in
adc
inc
aas
push
cmp
cmp
aas
iret
mov
jo
dec
dec
cmp
popa
xchg
les
leave
inc
xor
push
pop
clc
push
and
dec
test
cld
aaa
cmp
sub
jmp
adc
push
mov
das
cmp
mov
movsl
jge
sub
sbb
push
out
push
pop
aad
out
dec
movsb
insl
jmp
cli
rclb
ds
ljmp
sbb
inc
repnz
add
xor
or
jnp
icebp
mov
pop
sub
push
test
test
xor
push
and
jb
jnp
movsb
mov
incl
lret
jecxz
je
jo
nop
loope
icebp
repnz
fisttpll
adc
sub
xlat
repz
arpl
test
ret
lds
sbb
xchg
mov
popa
js
int3
cmp
mov
fsubrs
jle
jne
cmc
mov
mov
roll
movsb
or
shr
sub
rcr
or
ja
iret
test
add
lret
push
std
gs
push
dec
popf
faddl
pop
je
aaa
int
fmull
mov
inc
in
cmp
pop
push
jmp
icebp
mov
sbb
and
mov
fildl
enter
push
fisttpl
cmp
fstl
aad
mov
or
cmpsl
ljmp
and
push
js
fwait
jno
fsubl
cmp
pop
inc
loop
dec
jg
cmp
fs
mov
clc
stc
pushf
pop
cmp
pushf
pop
gs
sbb
pop
jno
imul
lahf
enter
push
rorb
mov
into
hlt
jo
std
fcompl
das
es
incl
pushf
les
inc
loop
out
add
push
pushf
fwait
jp
mov
mov
int3
sub
mov
rorb
cld
add
cmp
clc
mov
dec
imul
dec
int3
shll
jnp
les
xchg
adc
fnstenv
lcall
pushf
mov
adc
cld
filds
out
inc
cmpl
push
jae
and
ficomps
dec
out
mov
ficompl
cmpsb
frstor
sub
cmp
sahf
sbb
mov
lahf
jl
push
jns
fimull
sub
add
and
inc
push
dec
inc
mov
lock
ret
adc
in
lods
add
fbstp
xor
mov
push
or
sahf
arpl
and
es
jno
cwtl
cmp
add
in
cmc
daa
sarl
sbb
jmp
mulps
jp
xchg
insb
jmp
imul
push
sahf
rcrl
jg
xor
inc
cmp
fs
bound
sbb
sbb
mov
lret
jbe
sbb
or
xchg
int3
mov
lea
sub
out
dec
add
xchg
fdivs
mov
lds
enter
icebp
or
lret
xchg
lods
or
or
cmp
jg
xchg
in
fisttpl
lahf
xor
daa
test
and
test
mov
push
lret
aas
jns
cli
push
fadds
mov
jb,pn
and
sbb
faddp
and
ds
push
sub
pop
out
mov
mov
xchg
and
push
pop
or
test
sub
xlat
dec
hlt
inc
ret
gs
inc
and
jnp
clc
push
and
xchg
repnz
fnstsw
xchg
outsb
pop
mov
xchg
mov
cmp
sbb
adc
out
jnp
popf
pop
in
daa
in
mov
push
xor
mov
ds
inc
iret
inc
rcll
pop
xchg
bound
lahf
adc
sbb
cmpsb
aad
stc
cmpsl
into
shlb
bound
stos
icebp
imul
add
sbb
cmc
insl
pushf
cmp
push
push
mov
sub
or
daa
ss
bound
in
pop
sub
mov
push
fmulp
mov
mov
lds
andl
xchg
push
clc
scas
shlb
sub
addr16
jnp
stos
pop
jae
lret
mov
ds
push
stos
pop
cmp
mov
out
xor
pop
pop
mov
pop
mov
lods
inc
inc
xor
xchg
das
lret
addl
and
test
pop
cs
inc
aad
or
adc
inc
out
loope
push
mov
enter
push
inc
xor
je
push
pop
cmp
inc
sub
dec
sub
es
inc
xchg
mov
jmp
enter
and
into
jno
das
dec
shl
sub
pusha
jmp
je
jge
and
or
inc
cmp
push
pop
ds
divb
push
mov
scas
ret
sti
adc
into
mov
mov
mov
inc
jno
cwtl
xchg
insb
outsl
es
sub
lahf
insb
push
push
cltd
hlt
int
dec
scas
mov
movsl
sti
jmp
loop
popf
jne
push
sbb
add
out
mov
das
jae
cld
out
test
jb
xchg
sti
mov
push
sti
das
or
dec
pop
jno
xchg
ds
mov
loop
sbb
jns
sub
mov
ret
jl
pop
mov
outsb
js
mov
xor
push
mov
push
mov
inc
std
xchg
sahf
insb
sbb
and
sti
mov
xchg
add
repz
loop
pop
orl
lahf
inc
hlt
aas
cmpsl
orl
jnp
and
jge
inc
push
aaa
or
and
jo
insb
add
leave
mov
iret
daa
or
mov
imul
or
mov
fstpt
adc
testl
das
shlb
xchg
leave
mov
cmpb
push
rcl
or
push
xchg
jecxz
in
cmp
jmp
test
fstps
inc
sub
ds
adc
imul
xor
xor
in
xlat
pusha
addb
mov
xchg
push
js
ljmp
lahf
fnstsw
push
ror
and
xor
mov
fadd
dec
push
iret
xlat
adc
ja
std
sub
fnsave
bound
insl
pop
xor
clc
ret
cmp
vcvtss2sd
push
inc
repnz
jl
js
dec
jae
adc
lahf
sub
inc
shrl
jno
mov
xchg
daa
cmp
mov
or
sub
jne
lcall
inc
fld
shlb
and
shl
xchg
push
mov
cmp
pop
xor
push
repnz
loop
add
push
jmp
xor
bound
fcmovbe
pop
xchg
jns
jecxz
pop
movsl
lods
cmp
mull
pusha
mov
pop
fdivrl
push
popf
mov
mov
dec
add
gs
lea
pop
shl
popf
dec
test
daa
jg
push
gs
sub
insb
imul
stc
rcll
stos
enter
fistpl
inc
mov
and
fstps
lods
xor
pop
mov
gs
lcall
stc
adc
shlb
push
jmp
fildll
cli
mov
add
cli
in
in
sub
imul
push
xchg
pop
or
pop
inc
mov
movsb
out
or
ret
sub
out
sarb
movsb
mov
div
adc
adc
xor
cmp
adc
inc
mov
pop
cmpb
or
push
and
fcompl
or
scas
sub
lahf
and
in
outsb
push
xor
sub
jmp
lahf
sub
scas
jo
xor
xor
sahf
jno
push
and
sub
ss
pop
xor
fcmovb
or
rcll
mov
jb
mov
xor
lret
and
test
stos
xchg
jae
loope
mov
lcall
repnz
add
data16
insl
mov
daa
cmp
test
flds
or
or
out
idivb
insl
fs
mov
sarb
pop
xlat
cmp
pop
aad
mov
jne
call
cmc
dec
xchg
stos
mov
fstpt
dec
pop
rorl
js
mov
mov
andl
mov
sti
mov
aaa
sbb
mov
mov
movq
insb
pusha
jmp
mov
and
in
inc
pop
or
enter
insl
loopne
push
jl
shlb
pop
lods
sbb
fwait
pop
jmp
sbb
inc
and
and
mov
roll
notl
mov
sbb
mov
and
in
int3
pop
pop
mov
push
mov
fcomp
add
dec
pop
popf
test
mov
outsl
dec
mov
aam
xor
cmp
fiaddl
ficompl
mov
push
cmc
lea
cltd
xchg
imul
sbb
insl
sahf
adc
dec
fildll
outsl
data16
mov
pop
jecxz
fstps
mov
sti
and
int3
dec
out
mov
mov
mov
pop
lea
ror
mov
repz
adc
stos
nop
mov
inc
sub
add
mov
jnp
jns
movsl
movsl
les
stos
and
std
cwtl
ja
imul
add
xor
cmp
jns
cmp
pop
xchg
fs
inc
pop
fldenv
imul
pop
jne
test
xchg
rolb
xchg
in
jl
adc
cmp
or
mov
aad
iret
dec
adc
stos
daa
in
add
mov
ss
loopne
clc
dec
ret
xor
jnp
int
dec
mov
int3
sti
scas
fbstp
cmpsl
mov
push
stc
pop
mov
pop
mov
into
std
dec
bound
xchg
movsb
repz
aaa
and
das
ret
jp
imul
cli
test
jmp
test
push
movsl
xor
pop
leave
out
jne
push
sub
out
inc
push
push
aaa
add
sub
lahf
pop
mov
fiadds
outsl
jae
mov
punpckldq
hlt
ret
mov
scas
mov
lods
cmp
xor
mov
rorl
inc
jge
cmp
pause
stos
call
jne
and
or
sbb
jecxz
shrl
jbe
cs
sbb
cmp
and
out
add
gs
push
std
in
out
adc
pop
or
and
popa
popa
movsb
ss
div
insb
mov
nop
or
sti
lcall
or
cmp
testb
rol
roll
out
addr16
push
push
out
xchg
cmpsb
push
xor
cmp
mov
data16
bound
inc
dec
shlb
cmp
xchg
dec
out
sub
lock
mov
mov
dec
sub
sub
jns
lods
inc
sub
outsb
lods
xor
mov
fnsave
mov
stos
rol
lds
mov
and
loope
mov
push
jecxz
adc
xchg
xchg
sbb
in
cmp
xchg
dec
call
and
divb
lret
lcall
fs
pop
mov
add
push
push
push
adc
adc
js
inc
cmp
inc
cmc
dec
fmull
push
inc
inc
cmp
xchg
mov
push
xchg
ret
push
pop
or
fwait
cwtl
inc
mov
loopne
fildll
and
xor
enter
sub
or
stos
in
daa
mov
lea
push
pop
sub
shl
pop
push
mov
jmp
outsb
push
test
lea
inc
inc
lock
pop
fbld
mov
daa
imulb
shl
int3
in
sbb
cwtl
sbb
pop
pop
mov
hlt
inc
and
sub
push
sbb
add
cmovl
insl
bound
lahf
pop
mov
mov
sub
xchg
adc
fimuls
adc
adcl
repz
sbb
sbb
and
pop
popf
aam
call
dec
sub
arpl
stos
adc
repz
sti
js
js
xchg
dec
in
push
hlt
call
iret
mov
push
lds
mov
pop
pop
int3
out
lock
push
mov
xchg
fwait
dec
sbb
jp
xchg
jmp
iret
fcomps
jae
ret
mov
ds
pop
packsswb
fwait
clc
cmp
or
insl
paddusb
iret
cwtl
xor
cmp
pop
jne
in
mov
add
push
icebp
lds
scas
loopne
adc
xor
sbb
cmpsl
ret
or
in
mov
push
cltd
addr16
shlb
cmpsb
test
daa
std
sbb
push
or
out
xchg
jne
push
mov
fidivs
stos
jb
lods
inc
shlb
lds
cmp
lds
xchg
fwait
jp
push
cmpsl
cmp
leave
or
in
jno
aas
push
jle
out
push
pusha
xchg
aaa
inc
test
pusha
xchg
push
jg
aaa
ret
xor
insb
pusha
mov
xchg
test
lret
cmp
pushf
adcl
pushf
push
mov
imull
ds
adcl
arpl
sarl
sub
int3
repnz
xor
pushf
pop
leave
outsl
cmp
mov
add
push
dec
sbb
mov
add
fdivl
adc
icebp
test
sbb
adc
lret
stos
je
enter
hlt
in
addl
xor
lods
lret
int3
test
jnp
xchg
mov
int
jnp
lahf
dec
mov
sub
jns
dec
jmp
xchg
test
loopne
jge
jno
incb
lds
rcrl
cwtl
lods
mov
xchg
arpl
dec
aad
dec
test
mov
fxch
mov
inc
dec
pop
inc
imul
sbbb
jmp
mov
popf
add
mov
aas
xchg
int
test
xchg
aad
mov
popa
or
test
jmp
jo
out
add
sbb
xchg
adc
jbe
popl
mov
xor
cmpb
or
adc
das
repz
pop
lock
ret
cwtl
xor
inc
inc
clc
adc
jge
hlt
iret
cli
jmp
xchg
jne
jp
mov
jg
push
pop
xchg
pop
ljmp
flds
xor
xchg
fsub
sbb
addr16
out
jmp
jle
pop
aaa
inc
je
mov
jecxz
cmp
int
add
mov
pop
imul
jae
sub
incl
adc
mov
push
cmp
jno
lock
lods
cmp
push
pop
pop
js
cmc
jnp
xchg
lret
pusha
testb
mov
adc
nop
xor
gs
imul
jns
rol
mov
xchg
insl
addb
fsubs
mov
rcr
imul
or
xchg
lock
stc
sub
cmp
nop
je
lds
cmc
leave
imul
add
je
lahf
out
test
inc
jns
in
xlat
enter
inc
ret
add
inc
jg
jae
mov
cli
dec
test
imul
inc
bnd
push
adc
jg
sarb
mov
aaa
cmp
cwtl
rcl
mov
mov
add
dec
nop
jno
das
int
decl
inc
test
add
pusha
fldcw
push
insb
push
out
jae
aam
cs
cmc
inc
xchg
jne
mov
add
test
nop
xor
sbb
push
in
mull
fstps
stc
std
mov
ja
lret
pop
xchg
jmp
adc
add
hlt
ljmp
cmpsb
mov
pop
jo
sbb
push
or
pop
lods
loop
ljmp
pop
inc
xchg
xchg
rcrl
js
out
add
or
xchg
les
pop
insb
int3
pop
inc
movsb
inc
mov
scas
lret
or
mov
popf
scas
sub
jne
adc
or
xchg
rclb
pop
and
out
mov
shrl
insb
je
add
dec
and
in
lods
push
call
into
loopne
dec
jbe
jge
test
movsl
inc
ds
adc
lahf
mov
adc
xchg
adc
cwtl
daa
jp
jg
es
jge,pn
stos
or
imul
incb
mov
aad
sbb
and
out
inc
xchg
add
lcall
scas
push
adc
sarl
jmp
lahf
or
movb
daa
xor
adcb
fbld
clc
xor
aad
lahf
or
fisubrl
and
mov
ds
inc
test
test
sub
fwait
sti
mov
fcoms
xchg
push
push
stos
negb
mov
stc
fisttpl
lahf
loop
sbb
stc
push
mov
mov
sub
leave
or
xor
out
js
rcll
cmp
xor
inc
call
out
call
dec
std
ss
cld
jle
movsl
jmp
pop
jno
mov
cmp
bnd
xchg
sahf
push
les
dec
icebp
lahf
popa
cmp
pusha
cs
aaa
sarb
push
cmp
daa
inc
jge
shlb
aam
fxch
scas
xor
xorl
subl
adc
in
or
sbb
divb
or
aad
test
gs
xchg
scas
shrl
cltd
inc
inc
push
jg
pushl
adc
or
jmp
inc
cmp
movsb
adc
jae
push
ljmp
sub
adc
lods
pop
cmp
xchg
pop
xlat
outsl
dec
je
dec
inc
sub
vpmacssdql
xchg
xchg
shll
fdiv
enter
adcl
outsb
dec
inc
or
fwait
cld
subb
cmp
out
stc
push
mov
mov
push
cld
test
inc
movsl
imul
aaa
ret
push
inc
mov
and
movsl
and
subl
lods
cmpb
shlb
xchg
sbb
adc
mov
mov
xchg
sarl
and
nop
cs
push
lods
stos
loop
ds
dec
sbb
inc
inc
test
dec
in
add
jp
test
fdivrs
fst
fwait
sub
pop
js
ja
insb
insb
shlb
mov
and
test
sub
lret
adc
push
jge
ss
bound
jno
mov
rcrl
xor
adc
jecxz
ret
sub
jl
fbstp
push
movsb
pop
push
and
cmp
outsb
int3
adc
lret
notrack
loop
sub
dec
jp
add
push
pushf
icebp
nop
and
cmp
ja
jae
cmc
mov
loop
into
push
xor
sub
divb
shl
fsts
repnz
cld
cmpsb
lret
rcll
and
les
xorb
pop
repnz
sub
mov
loopne
xor
dec
scas
sub
inc
xor
add
out
out
inc
fsubs
mov
lock
jb
int3
rorl
pushf
test
push
das
aaa
jo
or
push
imulb
and
outsl
xchg
imull
cltd
lock
rorb
mov
ror
pop
dec
sti
jecxz
xchg
add
lods
add
xchg
push
xchg
fsubl
cmp
ret
or
sbb
push
shrl
dec
adc
dec
lret
push
cltd
pop
xchg
loope
shlb
lea
cmp
sbb
push
pop
fimuls
xor
sub
jmp
push
pop
mov
mov
jge
cs
mov
add
sahf
mov
mov
mov
push
aas
cmp
sub
int
sbb
lahf
fbld
sub
push
adc
mov
pop
arpl
loope
cmp
je
push
push
pop
loop
out
std
inc
push
mov
out
pushf
outsl
and
jmp
out
shl
out
dec
mov
dec
jecxz
jecxz
les
xor
clc
jg
ss
push
mov
test
imul
lret
dec
xchg
push
push
shlb
sub
push
ret
js
cmp
cltd
shl
rcrb
cmpl
jl
jbe
test
jbe
mov
pop
jp
inc
pop
test
sbb
dec
mov
adc
cmpsb
pop
mov
daa
mov
mov
mov
push
mov
xchg
mov
mov
xchg
loopne
rcll
cmc
mov
inc
test
sbb
pop
mov
ret
pop
filds
xchg
xlat
adc
mov
mov
sbbb
jno
outsl
and
rcll
xor
pop
das
cmc
ficomps
pop
cmpsl
mov
orb
mov
out
mov
inc
daa
jmp
daa
dec
int
shll
and
cmp
flds
addr16
pop
dec
shrb
mov
lock
and
push
das
jmp
mov
fsub
sub
and
mov
push
cmpsl
fs
mov
mov
mov
mov
insb
mov
xchg
fcoml
xchg
jnp
dec
mov
ret
pop
sbb
xchg
push
and
data16
pop
cmp
subb
inc
fisttps
sub
jg
movsl
fstl
pop
mov
jne
int3
mov
xchg
out
fimull
lds
fcomip
xor
movsb
push
test
cltd
mov
xor
loopne
and
sbb
arpl
adc
test
cmpsb
xor
mov
loope
xor
mov
xchg
subb
nop
push
repnz
jno
ss
dec
lahf
or
mov
mov
icebp
ret
sub
cmp
sub
cmp
movsb
dec
in
xchg
mov
loop
cwtl
push
in
adcl
jo
lds
rcl
adc
mov
jo
stos
std
cmp
add
lods
sbb
push
arpl
adc
inc
mov
mov
loope
insb
cmp
push
fs
insl
das
fldl
jns
test
or
cmp
cmp
iret
dec
lret
ss
fs
adc
jne
jge
cmpsl
jnp
mov
es
stc
xor
sarb
pop
xor
sarl
mov
fists
jle
inc
aaa
roll
push
xor
adcb
out
lret
out
jp
divl
pop
inc
ja
sub
insl
dec
test
scas
fisubs
imul
ja
mov
in
stos
push
cwtl
jle
inc
int
cmp
test
jne,pn
adc
subl
inc
sub
adc
adc
sbb
cmp
fsubl
mov
push
pop
pop
or
inc
pop
sbb
subl
js
mov
aam
in
lods
call
das
jne
xor
dec
add
mov
fbld
inc
in
cmpsb
dec
xchg
movsl
fsubs
out
sbb
sub
mov
or
mov
ja
mov
mov
imul
stc
or
xor
loope
int
cmc
inc
pop
cmpb
xlat
lock
test
sbb
mov
push
outsl
push
ficomps
sti
or
out
ljmp
push
pop
xor
clc
mov
std
imul
sbb
pop
mov
ret
icebp
jo
scas
out
or
shll
ja
push
and
pop
js
enter
in
jo
lods
pusha
lcall
lea
add
push
hlt
jge
pushf
out
inc
add
addb
mov
sub
push
outsl
mov
push
outsl
adc
jmp
xchg
icebp
test
mov
push
int
in
idivb
iret
lahf
jns
dec
mov
movsl
xor
ret
hlt
cwtl
inc
xlat
gs
adc
cs
iret
std
and
fistpl
mov
in
xor
pop
jb
mov
int
jo
int
jne
cmp
hlt
pop
mov
mov
inc
hlt
cmp
loopne
nop
in
fs
inc
cmpb
ss
stc
adc
cwtl
insl
aaa
insb
mov
in
sbb
inc
mov
mov
mov
cmp
jle
push
xchg
imul
push
push
scas
je
lret
clc
dec
jle
outsl
inc
addr16
lea
inc
mov
mov
out
fistps
aad
clc
and
push
jno
pusha
and
mov
push
ret
pop
sub
xor
cmp
pushf
inc
inc
pop
cmpsl
sarl
sbb
bound
push
idiv
mov
cli
sbb
xchg
or
and
and
cmp
and
call
or
sti
cmp
pop
sti
arpl
imul
mov
sbb
and
sbb
loop
bound
test
xchg
add
pop
cmp
or
or
inc
fwait
pop
push
out
cli
mov
pop
fwait
add
add
sti
lret
test
lods
lret
in
rcrb
loopne
pop
dec
push
outsb
mov
lds
and
inc
iret
pop
mov
shlb
add
das
clc
in
pop
add
lods
es
fidivs
mov
cli
inc
movsb
enter
mov
or
imul
xchg
jge
inc
faddp
inc
js
mov
mov
cmp
mov
sti
imul
ja
nop
push
ja
das
and
mov
cmpsl
nop
mov
push
pushf
mov
lret
dec
incl
scas
adc
xor
cli
xchg
cmp
push
movsl
aam
or
mov
jp
dec
adc
xchg
xor
shlb
ror
jle
les
leave
adc
stc
mov
jp
pop
arpl
sub
lahf
loop
adc
push
adc
into
mov
fnstsw
pop
cwtl
cmp
mov
inc
ret
pop
mov
dec
inc
push
jg
add
xor
push
mov
xor
loope
rcll
and
mov
sub
sbb
fwait
dec
push
pop
mov
pop
add
jg
cmp
dec
mov
in
mov
insb
shlb
adc
pop
dec
lcall
xor
mov
inc
cmp
clts
jae
xchg
xchg
popa
aaa
or
dec
das
xor
dec
jno
icebp
cmp
out
inc
mov
pop
adc
adc
icebp
sbb
sub
pop
cmp
adc
sub
lds
push
mov
xor
xchg
mov
clc
mov
mov
jae
fisubl
or
jnp
cmpsb
lret
lea
jecxz
aad
js
or
and
jmp
fcmovnu
in
cmpsb
or
js
inc
add
aam
in
jmp
outsb
jo
fdivs
jae
adc
mov
and
jmp
push
jb
rcll
push
mov
testb
les
push
mov
pusha
xchg
jbe
pop
adc
dec
pushf
lea
outsl
orl
dec
xchg
sbb
xor
fs
fcoml
or
cmpsb
pop
mov
mov
insl
aad
into
andl
push
loopne
cmp
mov
xchg
insl
mov
pop
push
sti
push
cld
sub
das
lret
jno
stos
inc
rcl
dec
cmp
stos
mov
stos
mov
cmp
out
movsl
cmpb
insb
and
aad
adc
inc
xor
stos
jecxz
mov
hlt
sbb
sub
mov
mov
int3
pop
fwait
jnp
push
jmp
shld
ss
imull
rcr
das
fidivrl
movsl
mov
mov
pop
or
and
pusha
clc
mov
push
scas
clc
in
jge
daa
test
or
sub
xlat
int
mov
jecxz
push
pop
mov
jle
jns
repnz
nop
lds
mov
sub
call
cmp
mov
lea
push
call
icebp
loop
mov
xchg
aad
jb
out
dec
adc
mov
dec
dec
gs
cwtl
ljmp
sbb
push
xor
dec
imull
cmp
out
cmpsl
pusha
test
andb
mov
dec
cmp
ret
mov
je
adc
outsb
xor
sub
ja
mov
mov
leave
push
shl
or
push
out
xchg
in
loopne
out
nop
repz
jmp
out
ljmp
cltd
daa
adc
mov
push
push
xor
mov
jmp
push
sub
mov
hlt
lahf
dec
adc
inc
push
dec
and
test
in
inc
arpl
int3
lahf
sbb
xchg
push
adc
divb
pop
ljmp
cmpl
mov
dec
pop
mov
push
pop
test
sbb
adc
sub
mov
jbe
std
cmc
rcll
movsl
popf
pop
xor
je
add
mov
jb
jg
inc
or
push
and
int
push
inc
dec
mov
test
lea
loope
jle
mov
lea
ja
or
xor
mov
enter
add
mov
add
sub
cli
cmp
fs
lock
out
ds
cltd
in
sarl
add
js
je
roll
data16
sbb
cmc
ret
iret
gs
push
jle
or
lret
scas
push
outsb
or
push
mov
jno
sarl
add
cmp
jo
in
inc
dec
push
pop
clc
iret
mov
stos
shll
out
or
mov
sbb
mov
pop
notl
shll
in
fsubl
pusha
cltd
and
lods
dec
sub
aaa
into
les
cmpsb
lcall
daa
stc
inc
inc
xor
xor
fwait
loop
push
lret
xchg
jmp
pop
fmull
xor
cmp
clc
arpl
outsb
orb
sahf
js
mov
inc
mov
sbb
xchg
bound
int
dec
clc
mov
fsqrt
xchg
sub
sub
cmp
mov
pop
xchg
push
clc
clc
add
out
and
cmpsl
fwait
es
push
data16
and
dec
incb
data16
pop
cld
dec
ss
fisubs
mov
sbb
mov
xchg
jmp
xor
daa
ret
add
or
xchg
jno
nop
xchg
inc
mov
enter
sti
pop
jo
xorl
push
pop
jae
adc
sarb
adc
xchg
or
stos
subl
aam
push
pop
imul
sub
or
pop
and
cmp
jae
addr16
repnz
fildll
pop
mov
je
sub
repz
add
xor
xchg
mov
imul
jecxz
pop
mov
je
in
add
mov
popw
cmpsb
push
and
cmp
mov
decb
dec
jns
shll
rol
dec
ds
fstps
mov
roll
cmp
test
mov
cwtl
sbb
jp
add
stc
ret
pop
aad
clc
jns
aad
in
hlt
or
jne
fsts
or
lock
and
jne
lcall
ljmp
sbb
push
push
sub
inc
or
fwait
jge
lret
ja
test
mov
lock
sbb
stos
pushf
das
cmp
pop
sub
sub
push
sub
test
xorb
xchg
push
cmpsb
fcoml
sti
ja
cmp
ret
adc
js
fsubs
ret
or
jg
mov
shl
fildll
sti
or
cmpsl
das
push
loopne
test
daa
js
das
sti
ret
nop
and
mov
jns
divb
loop
jae
cmp
out
ljmp
dec
sub
mov
loop
inc
jnp
stos
push
cltd
push
shll
cs
mov
sti
sbb
sub
fadds
out
mov
data16
js
mov
mov
pop
and
hlt
sbb
dec
into
mov
cmp
pop
push
js
push
mov
imul
or
lahf
dec
sub
mov
imul
jb
pop
in
jmp
jg
push
incb
shr
iret
inc
adc
mov
bnd
sahf
pop
jno
in
inc
addr16
pop
mov
and
insl
aad
adc
cmp
stos
mov
aas
addr16
imul
popa
inc
xor
orl
sbb
push
inc
or
and
dec
jecxz
mov
repz
dec
leave
repz
xchg
xchg
xchg
mov
add
or
aam
dec
cmp
pop
in
adcb
mov
fisttps
pop
out
xchg
fimuls
adcl
add
xor
or
es
xor
incl
out
loope
sahf
push
inc
mov
and
loop
xorl
sbb
pop
pop
and
test
fdivr
jge
sbb
and
std
or
or
mov
dec
mov
mov
mov
xchg
test
scas
xchg
into
xchg
std
imul
fcmovnb
xor
pop
mov
add
cld
into
lcall
icebp
lret
pop
je
insl
jo
jl
push
dec
dec
in
fstpt
mov
inc
push
clc
data16
clc
cbtw
mov
in
adc
int3
bswap
enter
jbe
sbb
mov
cmpl
or
pop
xor
in
jo
mov
xorb
mov
jbe
and
fdivr
jae
aad
jnp
dec
jle
and
mov
mov
fsubrl
pop
jb
inc
clc
push
pop
inc
in
out
add
leave
jns
setge
and
and
dec
cmp
jmp
xchg
cmovg
jge
mov
popf
rep
out
fbstp
pop
jne
add
xor
popf
pop
enter
inc
xchg
or
ss
cmpl
loope
fiaddl
mov
std
xlat
pop
inc
mov
adc
adc
pushf
add
inc
jns
mov
sar
imul
cltd
and
mov
inc
rorl
add
rolb
daa
add
ds
or
pop
ja
and
xchg
mov
push
adc
pop
pop
scas
mov
sub
cs
dec
mov
inc
outsb
or
sbbl
mov
mov
gs
cmpsb
jae
fwait
mov
rcrl
mov
aaa
repnz
cmpsl
jns
add
daa
shl
outsb
add
mov
pop
aaa
cmp
push
xchg
movsl
and
shrb
lods
add
in
cmp
sub
push
lret
adcb
push
mov
data16
sbb
adc
cmp
xor
xor
sub
jnp
mov
aas
faddl
jae
js
cmp
bound
das
push
sub
xor
add
stos
rcrb
mov
fdivrs
ss
movsl
adc
fnstsw
jecxz
shrb
or
adc
cli
mov
lret
push
xchg
jae
shr
jo
pop
adc
jbe
hlt
push
xor
push
sub
mov
pop
adc
lock
jle
dec
xor
mov
sub
push
jno
mov
popw
or
aam
fstpt
jae
or
xchg
dec
push
rcrl
push
mov
out
adc
sub
lods
imull
arpl
mov
hlt
std
fstp
push
jp
lds
add
test
push
cli
or
mov
cwtl
mov
enter
jecxz
push
test
rcrb
movsl
inc
add
inc
jnp
xlat
loopne
adc
pop
push
decl
cmp
jbe
out
xlat
repnz
andl
mov
mov
xchg
iret
ja
popf
cmp
movsb
daa
fcompl
in
jae
lods
stos
nop
dec
filds
test
pop
mov
sbb
jb
icebp
mov
cmp
xchg
repz
loop
or
flds
xor
ficoml
in
lret
ds
dec
outsl
cs
sub
mov
and
aam
hlt
aad
cmc
shl
int
cmp
cmpsl
or
cli
ljmp
sub
inc
imul
mov
scas
fsubrl
mov
xorl
cmp
adc
sbb
xchg
sbbl
outsb
mov
add
aam
fnsave
pushf
mov
test
mov
mov
test
xor
dec
std
cmp
sub
lahf
addl
add
ss
lods
outsl
inc
fdivrl
or
sub
ja
in
inc
sub
mov
push
in
loope
cld
cmpsl
ss
add
xor
testl
jb
mov
imulb
repz
inc
pop
inc
popf
adcb
mov
popa
jecxz
fimuls
mov
push
out
pushf
andl
pop
imul
arpl
inc
mov
stos
nopl
rorl
in
mov
lea
push
gs
cmp
lcall
jcxz
test
mov
mov
iret
fadds
mov
push
test
sbb
int
jns
xchg
pop
in
sbb
lret
xchg
mov
rorw
jns
dec
xchg
xchg
sub
arpl
out
add
sbb
sti
jmp
or
push
mov
xchg
xor
xchg
data16
xor
aad
cmp
mov
cli
scas
mov
pop
jb
int
sub
lock
mov
jmp
test
popf
mov
mov
sti
fldl
dec
adc
mov
and
aad
xchg
dec
sub
sub
iret
mov
popw
fnsave
pop
xor
fprem1
xor
add
jp
adc
fstl
sbb
mov
aad
push
outsb
pop
shll
mov
rol
or
mov
cmc
imul
popa
mov
and
lock
outsb
jo
jmp
and
fistps
scas
mov
daa
sbb
mov
mov
mov
rcll
rcrb
adc
add
sbb
outsl
in
jecxz
iret
mov
popa
gs
outsb
push
sahf
in
out
je
lcall
sbb
cmpsb
idivb
repnz
repnz
push
or
out
shll
dec
mov
lods
test
jmp
cld
sbb
sbb
imul
jp
jl
test
mov
inc
aam
loopne
ss
cs
push
or
mov
nop
jle
push
dec
cwtl
andl
mov
jbe
loop
in
add
lock
fldenv
out
aad
imul
or
adcl
stos
and
inc
pop
in
leave
add
aas
xchg
mov
punpckhdq
or
pop
icebp
test
pop
ss
in
mov
mov
sub
dec
xchg
rclb
mov
lcall
add
push
jae
insb
hlt
jno
adc
rcr
sbb
pop
lcall
pop
sahf
cwtl
sbb
adc
scas
call
sub
popa
cmpb
ds
push
pop
fwait
push
lret
and
lahf
ret
xchg
les
xor
sbb
lea
insb
hlt
leave
xchg
pop
mov
inc
test
cli
mov
into
fmuls
mov
and
pop
pushf
mov
sbb
neg
clc
in
cs
or
cmp
or
mov
pop
pop
fistps
or
iret
shll
xor
loopne
pop
and
ja
aas
mov
cmp
sub
vmovntps
loope
in
adc
and
inc
mov
jge
leave
mov
mov
or
pop
pop
add
sub
pop
dec
and
ja
xorb
dec
pop
test
add
out
outsl
dec
xchg
xchg
cld
mov
lods
imul
xor
and
arpl
adc
data16
pop
mov
push
inc
sahf
push
push
mov
and
test
and
xchg
xchg
in
xor
es
push
pop
inc
sbb
dec
neg
cmp
imul
lea
jl
mov
sbb
mov
pop
sti
mov
fldenv
aad
dec
and
pop
fcmovnbe
pop
add
jne
and
test
add
cmp
fildl
add
jmp
mov
mov
sub
jge
popa
cmp
mov
enter
out
xchg
stc
out
popa
or
add
jo
mov
mov
inc
lods
scas
rorl
or
daa
test
out
cmpsl
loopne
lods
pop
xor
dec
xor
lods
push
add
dec
stos
orl
loopne
push
imulb
int
es
out
mov
sti
push
xchg
push
sub
stos
sub
inc
pop
insb
inc
xor
fcmovb
add
in
xchg
icebp
push
test
cmpsl
inc
jae
push
mov
sti
popf
ficompl
adc
stos
xor
cmc
enter
in
daa
inc
fadd
std
enter
cs
or
aad
adc
mov
and
or
xlat
jbe
outsl
push
jecxz
daa
or
push
sbb
orb
leave
dec
mov
outsb
shll
xor
call
or
or
inc
xlat
jno
jp
pushf
push
cltd
jo
ja
orl
push
movsl
sti
pop
int
fsubrs
pop
jg
gs
int3
pop
mov
or
inc
jnp
pop
call
xchg
or
call
shll
pop
lods
ja
lock
or
test
enter
xchg
mov
movsl
popf
pop
in
in
in
sbb
clc
mov
xchg
inc
mov
cltd
rorl
test
call
fstpl
ljmp
xchg
ds
fistpl
data16
push
xchg
cli
ja
sbb
sbb
dec
xchg
push
lea
or
jle
push
jmp
jae
gs
mov
imul
cmp
aam
das
adc
adcl
mov
out
and
adc
call
lea
cli
push
inc
dec
test
adc
nop
shlb
cmp
cmpsl
or
mov
repz
sbb
cli
xor
inc
adc
jno
insl
hlt
cmpsl
xchg
sub
and
add
jb
pop
cmpsb
sub
mov
mov
sbbb
popf
or
cmc
leave
or
popf
std
loopne
int3
addr16
andl
pushf
add
push
sbbl
lahf
sub
mov
es
nop
mov
fisttpll
inc
mov
aaa
jae
dec
lods
in
inc
cmp
addl
fadd
inc
iret
jp
mov
ret
mov
push
inc
push
fiaddl
out
inc
mov
adc
sahf
stc
pop
inc
push
sbb
lds
and
sub
fnstcw
lods
push
fcomi
and
xchg
dec
adc
stc
or
push
outsb
jp
lcall
jle
out
imul
ret
push
jmp
imul
andl
or
mov
lods
rcll
and
push
loope
decl
sbb
xchg
mov
outsl
hlt
inc
vcomisd
cmp
outsl
out
pushf
pop
cmp
outsl
mov
je
cwtl
addr16
movsl
repz
xor
cmp
fcmovbe
xchg
dec
mov
xor
push
jmp
lahf
push
leave
jp
pop
jecxz
test
pop
mov
imul
std
outsb
cmpsl
or
shll
jl
push
sub
rorb
test
mov
dec
lock
cwtl
sub
pop
rolb
mov
cld
mov
clc
and
mov
out
in
mov
enter
lcall
into
lret
mov
fisttpl
sub
dec
jbe
xchg
mov
addr16
pop
inc
insb
pop
jnp
insl
adc
sbb
cltd
ljmp
cli
out
test
cmp
xchg
iret
aad
cmp
inc
popa
test
inc
dec
mov
jbe
push
rolb
jl
jge
mov
push
push
cmpb
or
push
xor
add
pop
dec
mov
adc
jo
mov
add
push
js
nop
push
rcr
pop
mov
loop
pop
mov
and
sbb
insl
outsl
add
add
orl
push
outsl
aas
mov
sahf
les
fs
int3
xchg
xor
add
das
xor
pop
stc
sahf
pushf
sbb
pop
ss
shrb
pop
out
and
adc
cmp
call
loop
hlt
int3
xor
lds
fs
sbb
call
xchg
icebp
cmp
push
mov
leave
sbb
aaa
sbb
add
call
cmc
cmp
cmp
sahf
sub
push
mov
mov
lods
js
fists
mov
push
lds
rorb
ret
inc
mov
dec
jo
popa
xchg
pop
mov
sub
fs
xchg
insl
inc
in
aam
xor
jp
lods
ficompl
push
lahf
mov
jbe
scas
jp
stos
arpl
lahf
pop
insl
dec
inc
add
ljmp
rcll
ja
pusha
xchg
sub
pop
adc
push
dec
cmp
movsl
clc
cmpsl
push
popa
lods
notl
repz
fldt
push
insl
rcrb
sbbb
pop
cmpsl
stc
repz
mov
xor
mov
sub
ja
and
mov
inc
cmpsl
and
and
popw
mov
stos
xchg
push
pop
adcl
add
mov
mov
xor
cli
adc
push
lcall
mov
dec
push
in
dec
xor
ljmp
in
mov
add
adc
sarl
rcrb
cli
and
clc
cmc
jb,pn
cwtl
and
lret
cld
les
icebp
add
movsl
jne
adc
insl
imul
mov
xchg
repz
stos
mov
imul
pop
lds
inc
sbb
xlat
in
pop
push
adc
sub
xchg
jl
or
push
cwtl
and
cmp
mov
or
arpl
push
pop
clc
mov
xchg
aas
add
test
lds
pop
push
es
mov
in
mov
inc
xchg
dec
jns
loopne
pop
mov
iret
testb
inc
repnz
pusha
xchg
lea
pop
push
lods
sti
test
mov
xchg
ss
test
addr16
mov
lret
ja
sbb
shll
loopne
aad
lcall
mov
nop
mov
and
add
int
adc
add
sbb
or
fldcw
fsubrs
test
aas
int3
in
sbb
mov
js
loop
push
icebp
dec
test
repz
cld
lods
imul
cltd
and
sub
pop
imul
xchg
sub
repnz
pop
add
adc
mov
pop
mov
pop
xlat
js
inc
int
and
scas
inc
mov
and
push
cmc
pop
jl
sub
inc
test
mov
xchg
lret
or
mov
mov
cli
aaa
mov
test
out
push
lods
or
and
outsb
xchg
fbld
mov
jae
mov
push
xor
push
mov
jmp
push
sbb
ljmp
or
es
and
xor
data16
jge
ret
adc
xlat
std
sub
rcl
fistpll
clc
push
rcll
push
les
pop
sarl
outsl
sbb
jge
nop
jge
inc
xchg
or
add
jl
out
dec
xchg
dec
xor
adc
sbb
xor
aaa
jb
cmp
fsts
cmc
mov
test
clc
push
lods
lods
loopne
mov
dec
xchg
pop
sbb
pop
fwait
lret
sbb
mov
adc
repnz
push
or
imul
jnp
rcrl
insb
fstpt
mov
imul
test
jb
insl
jecxz
aam
xchg
subb
ja
pusha
push
cmp
mov
arpl
push
cs
bnd
jb
mov
add
jle
push
cld
jno
mov
loopne
adc
out
pop
emms
lret
shlb
xchg
movsb
icebp
mov
inc
int3
xor
jmp
loopne
int
cmc
scas
leave
cmp
movsb
lahf
or
repnz
jecxz
iret
fldt
sarb
dec
cli
inc
icebp
sti
jo
into
adc
scas
ja
lds
popf
xchg
clc
loopne,pn
xchg
push
push
add
inc
dec
cmpsb
sub
add
mov
roll
dec
insl
subb
inc
addb
ficomps
jae
and
ror
call
icebp
adc
jp
lahf
jle
je
push
lods
cmp
icebp
out
pusha
push
icebp
pop
dec
adc
je
loopne
ja
dec
pop
arpl
push
rclb
lcall
push
push
gs
ljmp
fstpl
in
inc
loopne
fldcw
idivl
gs
push
or
shll
es
iret
push
mov
lds
mov
add
out
roll
inc
outsb
in
mov
adc
negl
movsl
das
lret
hlt
push
sbb
push
inc
xchg
test
xchg
js
mov
clc
ds
or
pop
ficompl
scas
xchg
lds
and
popf
or
hlt
mov
add
dec
jb
xchg
mov
mov
icebp
insl
subb
sahf
cmp
in
pop
mov
and
scas
mov
mov
ss
sbb
push
pop
xor
aam
mov
cmp
call
dec
lods
fidivs
adc
inc
push
fisubrl
or
and
pop
call
in
in
pop
pop
imul
mov
pop
cltd
gs
imul
pop
call
xchg
and
sbb
sbb
rol
fistl
arpl
cmp
dec
or
adc
add
xchg
push
pop
push
mov
xchg
mov
mov
sub
loopne
mov
insb
out
inc
lods
pusha
adc
push
arpl
out
adc
push
jae
or
mov
in
push
xchg
xchg
xchg
mov
mov
cmp
sbb
cmp
mov
es
adc
push
cmpb
pop
aaa
outsl
inc
xchg
adc
and
cli
dec
sub
jb
push
repnz
std
leave
and
jne
andb
xor
imul
and
mov
or
sti
sub
xchg
cltd
xchg
aam
pop
leave
in
test
repnz
pop
repz
imul
inc
push
inc
rcrb
sub
cs
movsl
jle
push
adcl
rclb
mov
dec
dec
iret
and
or
dec
rolb
das
int
cmp
pop
add
mov
pop
or
bound
aaa
xor
and
loope
xchg
pop
es
loop
lahf
add
jecxz
pop
jb
imul
and
out
mov
xor
hlt
and
mov
push
out
jns
mov
sbb
fnstsw
mov
mov
std
je
push
push
sbb
and
insl
out
cmpsb
cmpsl
fmull
xchg
lods
outsb
movsb
jge
mov
cmp
rcrb
js
inc
outsl
das
and
fnstsw
xchg
test
jmp
sahf
repnz
adc
cltd
jae
lds
int3
cltd
xor
in
push
mov
test
notb
sub
add
xor
stos
stc
dec
loopne
mov
mov
imul
xchg
loope
lret
push
pop
je
add
push
and
sub
repz
mov
sbb
xor
add
enter
jecxz
mov
std
cmpsb
xor
mov
jae
jne
clc
setp
cmp
repnz
data16
jecxz
lea
xor
push
sbb
in
push
pop
cwtl
ret
fildll
rol
push
ret
imul
mov
sti
in
or
xchg
popa
out
inc
jbe
xchg
enter
jbe
test
out
fimull
movsb
aam
pusha
xchg
or
jmp
rcrl
test
sbb
fsubrs
out
jmp
lods
movsl
test
filds
xchg
insb
inc
lahf
les
mov
sub
movsb
divl
cwtl
xchg
mov
ss
mov
andb
push
pop
jg
pop
cmp
in
fdiv
and
in
mov
shll
jmp
xor
popa
pop
xchg
nop
fldenv
xlat
pop
dec
sub
fildl
and
ja
roll
sahf
ds
imul
pop
jb
mov
lock
jg
shll
paddb
push
mov
push
mov
adc
enter
movsl
add
insb
fwait
inc
cltd
lret
ret
jb
push
pop
rolb
mov
jmp
jno
pusha
dec
cmc
sbb
shl
inc
scas
add
push
cmc
mov
adc
loopne
popa
in
insl
mov
mov
loop
xor
cmp
xor
jle
push
test
xchg
in
xchg
sbb
adc
ret
fucomp
push
cmpb
pop
and
hlt
test
lcall
leave
mov
call
push
clc
pop
daa
pushf
add
fistpll
inc
sti
xor
stc
and
popf
rcll
aas
loop
inc
push
sub
mov
lea
or
inc
out
mov
jnp
loopne
sti
ret
in
jb
jno
jnp
inc
scas
mov
fisubs
rcr
sti
push
jne
sub
pusha
xchg
add
inc
lock
scas
xlat
pop
xchg
inc
pop
jmp
mov
lahf
xchg
aas
dec
push
out
mov
stos
fdivs
pop
jno
packssdw
pop
andl
lods
ret
call
xchg
scas
test
arpl
add
sub
push
sahf
fidivrs
cwtl
and
dec
inc
dec
pop
pusha
and
jne
lods
aad
pushl
dec
dec
cmpl
mov
xor
out
loope
cmp
pop
arpl
stc
adc
jo
push
pop
adc
push
xor
fsub
movsl
push
inc
pusha
idivw
xor
inc
sbb
xchg
inc
xchg
aam
mov
sub
dec
add
xchg
pop
filds
imul
pop
pop
push
leave
sub
push
sahf
cmpsl
dec
ret
movl
insl
dec
mov
ss
lcall
ret
mov
out
scas
es
arpl
arpl
add
add
mul
ret
data16
shrb
aaa
inc
and
and
clc
xchg
lcall
fmull
call
jbe
dec
fidivs
and
mov
ret
aam
cmp
jb
into
lahf
add
sarb
xchg
enter
loope
es
es
pop
sub
inc
cwtl
push
lahf
xor
xchg
cmpsl
push
pop
test
aas
push
push
lods
mov
mov
popf
jno
push
imul
out
shrl
sarl
jae
lods
xor
push
or
lret
dec
pop
hlt
push
sbb
dec
ljmp
pusha
addb
outsb
inc
addr16
pop
ret
cmp
push
bnd
sub
cmpsb
cld
push
mov
in
mov
or
out
test
push
push
xchg
js
push
test
lret
ds
push
xor
add
scas
in
bound
jo
jmp
jmp
fdivr
push
stc
mov
sbb
sahf
push
mov
xchg
fimull
sarl
aaa
add
sub
popa
dec
imul
or
lods
lcall
lods
popa
push
popa
imul
aam
cmp
xor
cmp
outsb
cli
test
call
test
movsb
push
testb
or
lds
push
jnp
mov
sbb
imul
mov
ja
cmp
jnp
or
cmpsl
test
sub
or
out
push
sub
xorb
sub
mov
fistl
out
fidivl
call
push
pop
sahf
leave
push
fisubrs
or
lods
inc
xor
mov
push
lahf
dec
ss
fnstsw
pushf
je
cmp
dec
int
cmp
inc
mov
pop
icebp
loope
pushf
mov
sub
adc
out
pop
mov
push
call
out
in
pop
fnsave
cmpb
loopne
sub
pop
or
pop
inc
pop
push
push
jnp
dec
aaa
add
dec
mov
outsl
dec
and
or
dec
mov
cs
and
mov
fsubs
movsb
out
and
test
inc
cld
sub
xor
fsub
jp
sbb
mov
sbb
xor
jmp
inc
movsl
dec
xchg
mov
adc
mov
andb
adc
or
mov
loopne
add
jle
add
mov
fstl
sub
inc
or
mov
and
jge
mov
and
mov
pop
jg
adc
or
loope
in
push
out
push
fbstp
dec
jmp
call
push
rcl
or
movsb
adc
adc
fadds
lock
inc
lcall
mov
clc
mov
das
mov
cli
mov
adc
flds
xor
popa
sets
ret
sti
mov
lret
std
ret
mov
sbb
sub
cmp
ret
push
arpl
push
dec
les
movsb
and
sahf
adc
shll
loop
aaa
sbb
bound
cmp
pushf
jl
adc
loop
nop
pop
outsb
inc
aaa
clc
mov
mov
lods
in
xor
add
xor
add
lods
dec
mov
push
movsb
imul
ret
ret
dec
fnsave
pop
dec
aas
sub
sub
jmp
adc
adc
ljmp
into
mov
aaa
jae
cmp
je
andb
sub
xchg
adc
enter
sbb
je
pop
lea
xchg
jmp
sar
lcall
out
mov
cmp
lock
fs
ret
push
stc
dec
rcrl
lcall
incl
jo
out
and
andb
sbbb
inc
sbb
pop
and
mov
jge
into
mov
in
int3
sub
dec
gs
insl
dec
xor
fdivl
add
mov
sahf
neg
push
cmp
hlt
push
ud0
lods
pmulhuw
pushf
popa
enter
enter
call
inc
aas
fnsetpm(287
xchg
add
xchg
inc
imul
lock
mov
cmp
loop
das
subb
cltd
dec
clc
push
movsl
test
mov
clc
jmp
nop
icebp
push
pop
arpl
push
mul
push
lcall
dec
cli
imul
stos
lods
cmp
mov
sub
imul
out
mov
xchg
adc
sar
aad
mov
loope
mov
adc
ss
and
and
jns
lea
push
add
ja
xor
or
scas
sbb
and
mov
jmp
jnp
out
mov
sub
aas
cwtl
in
and
mov
leave
or
dec
arpl
nop
jno
fcmovne
test
into
add
mov
ja
mov
lea
sbb
std
in
add
push
jp
inc
or
fdivrs
push
enter
xchg
jp
or
adc
mov
in
test
aas
mov
inc
cwtl
inc
mov
pop
push
loopne
test
sub
and
mov
add
inc
repnz
mov
sbb
cld
jo
les
xor
sub
cmp
mov
add
or
and
lcall
lret
loop
mov
mov
mov
dec
or
and
cmovl
mov
inc
xchg
xor
dec
sbb
cwtl
call
adcb
movsl
mov
aam
loope
in
jmp
and
and
push
xchg
iret
aaa
jbe
and
sub
rcrb
call
ret
shr
gs
sub
test
mov
popa
movsb
adc
dec
xchg
dec
andb
mov
imul
out
mov
dec
jbe
ficoms
fistpl
cwtl
loope
or
pop
pop
ja
fwait
adc
movsl
and
and
xchg
jo
outsb
pushf
or
pop
xor
ljmp
int
andl
pop
aam
xor
sahf
adc
or
sysenter
data16
popf
out
dec
aaa
mov
popf
xchg
mov
iret
xchg
pop
xchg
add
dec
test
push
inc
popf
test
pop
xchg
nop
and
xor
jbe
popf
xor
sbb
in
and
cli
arpl
ss
jo
mov
jmp
adc
pusha
ss
lock
xor
cmp
jnp
repnz
cmp
lret
xor
leave
sub
jno
fmuls
xchg
fwait
mov
std
adcl
adc
inc
scas
pop
pop
pusha
cld
sub
test
enter
cld
mov
sti
sbb
pop
inc
lret
jle
sub
and
iret
les
add
leave
inc
push
xlat
rclb
cmp
xchg
jne
ficomps
test
and
loope
inc
push
dec
fs
enter
enter
dec
xchg
mov
roll
les
dec
jnp
nop
loop
aam
aas
and
scas
push
test
stos
jmp
or
xchg
adc
mov
aaa
repz
xchg
jmp
xchg
mov
push
and
scas
or
push
sbb
add
adc
faddp
imul
dec
aam
lret
leave
fimuls
sbb
sbb
fcoms
or
mov
pop
call
jno
jns
ss
xor
push
or
mov
mov
or
lahf
cmpsl
out
shlb
in
pop
pop
std
test
out
mov
xchg
sub
mov
mov
pusha
sbb
out
xchg
mov
int
rcll
cmp
pushf
mov
js
xchg
mov
pop
push
aad
sbb
cmc
roll
dec
lea
jne
movsb
inc
pop
repz
cmp
sbb
lea
adc
mulb
sbb
jo
ret
add
loop
dec
sub
or
mov
aaa
mov
xor
loope
inc
inc
loope
subl
jo
mov
mov
mov
and
mov
mov
jne
mov
das
cmc
fwait
inc
jmp
push
inc
sub
add
dec
lret
mov
xor
lret
push
sub
pop
cmpsb
sbb
adc
scas
mov
ret
mov
pop
mov
xchg
ja
out
mov
jge
lock
mov
out
bound
pop
ficomps
out
dec
or
sub
sub
push
dec
pushf
insb
jae
or
mov
dec
sub
cmpb
lret
xorl
mov
sub
mov
outsl
mov
hlt
cmpb
or
lds
aas
in
std
xor
mov
lds
gs
lock
bnd
jo
jg
cmp
mov
out
inc
and
aas
lcall
test
pop
mov
sbb
insl
jge
lock
add
xor
and
loopne
adc
js
ljmp
cmp
mov
in
xchg
popf
pop
bound
push
mov
mov
adc
sub
inc
jle
clc
mov
sahf
inc
loope
and
aas
bound
mov
jo
sub
adc
icebp
dec
xchg
sbb
mov
movsb
arpl
lock
mov
xor
pop
push
add
sbb
xlat
std
sbb
pop
add
fs
out
bnd
jae
sub
add
mov
push
dec
out
stos
inc
xor
push
push
mov
pushf
jle
jbe
imul
enter
inc
add
adc
lods
xchg
stos
and
lret
insl
mov
imul
lods
xor
jno
mov
enter
mov
test
mov
cmpsb
inc
fcomps
and
push
movb
xlat
xor
stos
scas
mov
daa
pop
repz
cmp
notb
stos
ret
test
sub
test
bound
push
lcall
mov
xor
sbb
inc
sarl
pop
and
sti
and
ret
pop
rcrb
pop
inc
jne
test
push
pop
xchg
pop
and
movsb
inc
dec
daa
lret
push
lcall
repnz
inc
xchg
test
cmp
ljmp
cmp
xor
repnz
lea
ret
aad
push
and
adc
jp
xor
out
xor
and
push
and
mov
sbb
push
ljmp
jmp
and
lret
aaa
or
mov
cmpsb
arpl
dec
xchg
call
cmpsb
or
adc
fs
int3
xchg
pop
jbe
in
imul
dec
fs
pop
pusha
cs
mov
cmp
int3
std
shl
scas
test
scas
push
pop
jne
mov
ja
mov
ret
xor
pop
out
pop
adcb
aaa
clc
jnp
xchg
loop
jne
jmp
pop
jmp
pop
fisubrl
pop
inc
dec
dec
fxch
inc
bound
test
in
stos
xchg
scas
add
and
cld
jmp
fadds
mov
je
dec
mov
fnsave
add
pop
and
mov
sub
push
cld
mov
dec
shlb
popa
mov
push
sahf
shlb
clc
ja
nop
dec
mov
and
pop
push
js
jge
outsb
imul
into
out
shl
mov
cmp
mov
negb
or
mov
in
outsb
lahf
sahf
fdivp
pop
test
pop
add
out
cmp
push
imul
repz
or
test
push
loopne
dec
cmp
push
outsl
push
push
mov
rorl
out
into
cs
mov
imul
and
xchg
jo
xchg
jae
rcrb
sub
mov
jne
sub
sub
mov
cmpsb
lea
imul
sbb
and
xchg
mov
outsb
out
and
insl
sbb
mov
cmp
mov
adc
fwait
jae
adc
cwtl
add
clc
and
mov
imul
mov
lahf
jns
test
insb
jg
cld
mov
and
sbb
jnp
lcall
or
test
leave
cmp
popf
xchg
ljmp
add
pop
xchg
jbe
and
lock
shrl
xor
nop
adc
cld
and
rcl
sub
repz
adc
cmpsl
and
nop
btr
out
pop
stos
daa
mov
pushl
or
sub
pop
fmuls
dec
adc
sub
cmc
jmp
insl
push
xor
movsb
mov
dec
jp
sub
or
sbb
cmpsb
out
ss
pop
pop
cmp
ss
outsl
jmp
iret
push
mov
jno
dec
fsts
call
dec
mov
je
mov
lcall
decb
jp
pop
lds
stc
das
clc
mov
loopne
add
out
xchg
mov
ret
sub
dec
das
jns
leave
loop
dec
adc
call
jge
ds
rorb
xchg
mov
xlat
in
xor
pop
std
xchg
fs
pushf
push
cld
mov
push
aad
lret
in
cmc
mov
fwait
xchg
pop
mov
sbb
xorl
sub
imul
mov
aam
mov
cltd
mov
or
jl
fwait
ss
ja
sbb
je
lea
dec
aas
jecxz
inc
and
popf
push
xchg
pop
add
out
mov
sub
cmpsb
popa
and
das
fsts
or
sarl
cwtl
cwtl
dec
test
push
loope
pop
shlb
push
xor
outsl
loopne
jge
xor
test
icebp
test
subb
lret
inc
les
fidivrs
ja
repnz
insb
jno
leave
andl
mov
mov
js
pusha
shll
stos
mov
addr16
dec
out
shr
jge
adc
xor
lahf
pop
mov
sub
cltd
in
inc
mov
shlb
jno
dec
xchg
mov
repz
cmc
add
lock
aam
dec
insl
insl
int3
inc
leave
inc
jne
xchg
out
inc
repz
ljmp
mov
dec
shlb
xchg
dec
pusha
fcoms
inc
jne
cmc
loopne
leave
mov
fistpl
sahf
dec
and
sti
xlat
mov
push
and
add
lahf
cmpsl
sub
subb
iret
leave
ljmp
btr
add
push
cmpl
fldt
dec
clc
inc
or
fisttpll
xor
cli
add
std
jecxz
test
jle
roll
jge
pop
pushf
nop
xor
push
inc
aad
mov
xchg
cmp
loop
cld
rcl
and
sti
cmp
jb
push
inc
xlat
ja
push
icebp
jno
jb
stos
andb
cmc
jle
and
in
sub
lret
loope
repnz
scas
ja
jge
shll
jo
xor
ret
sbb
or
adc
add
dec
pop
xlat
sbb
xor
jno
push
les
in
fisttpll
dec
out
int3
les
enter
add
inc
push
je
push
aaa
fisttpll
jp
push
clc
inc
cmp
cli
pop
je
out
stos
add
sub
cmpsl
mov
mov
fistpll
fucomi
xchg
xchg
xchg
dec
jno
add
and
push
loop
cmc
jecxz
mov
fdivl
sub
add
orl
push
int
and
js
dec
sub
sub
lods
lods
stc
lods
mov
addr16
cmpsb
inc
push
mov
stos
xlat
push
mov
mov
sub
fst
sub
sub
inc
test
mov
sbb
and
inc
sbb
xor
loop
scas
scas
in
sub
push
pop
inc
inc
inc
notl
cld
pop
xor
movsb
js
out
cmp
add
xor
stos
and
cld
push
jmp
imul
fstpt
lret
scas
mov
push
cmp
popa
mov
push
cmp
add
push
ds
push
rorb
mov
fcmovnu
movsb
xlat
out
out
inc
push
inc
into
cmp
jle
rclb
xlat
jo
mov
push
in
repz
out
stos
icebp
xor
adc
imul
lret
jo
and
outsl
mov
test
outsb
outsb
popa
mov
hlt
in
mov
ret
lahf
outsb
mov
lock
mov
mov
fcoms
sar
xchg
jmp
aad
cmp
imul
cmpsl
lods
orb
jl
pop
movb
and
loope
add
fisubs
dec
mov
pop
cmp
int3
dec
jl
push
loop
sub
das
nop
fstps
or
adc
xlat
push
call
push
xchg
rol
cltd
mov
adc
mov
inc
push
stc
and
xchg
stc
and
inc
push
pop
add
jg
mov
lcall
adcl
sbb
jns
into
in
and
test
negb
ja
pusha
mov
in
mov
jge
mov
inc
push
stos
pop
inc
adc
pushf
loope
fcmovbe
jl
and
jmp
cmp
sbb
mov
shlb
out
hlt
mov
call
dec
xor
clc
ret
negl
lahf
aam
ss
stc
xor
lcall
add
sub
out
call
xor
scas
mov
dec
pop
mov
sbb
aam
cmpsl
pop
jle
mov
fldenv
jb
add
daa
add
shl
push
cli
sbb
or
and
fs
push
cmc
and
cmp
pusha
lret
and
dec
fmulp
jg
inc
mov
ret
jns
pop
pop
in
aam
pop
fdivrl
pop
pop
jecxz
cli
loop
int3
out
dec
jno
or
dec
stc
movsl
loope
mov
ds
sbb
sub
stos
mov
lahf
js
stc
sbb
adc
test
or
or
aam
daa
pop
pop
in
and
sub
lods
sbb
xor
add
add
xorl
sbb
fs
les
ficoml
test
rorl
lods
shlb
cmpsl
cmc
and
mov
iret
sub
inc
iret
fst
std
je
mov
arpl
rorl
arpl
ds
and
mov
stos
leave
fcomps
arpl
pop
add
or
stos
jle
jmp
popa
fbstp
lret
arpl
mov
push
int
movsl
cmp
imull
or
idivl
add
xor
mov
add
jbe
or
pop
jb
lahf
and
or
daa
mov
in
push
mov
aam
loopne
sti
test
xlat
out
mov
rorb
cmp
fyl2x
dec
in
fisubrl
cmp
or
and
leave
add
dec
flds
cmp
outsb
and
fwait
repz
lods
repz
jmp
sub
push
nop
icebp
testb
aaa
mov
mov
movsb
jp
inc
jmp
dec
pop
inc
or
and
sub
imul
in
mov
les
enter
mov
dec
gs
shlb
mov
bound
mov
aam
jo
test
lods
cmp
sbb
addr16
sarl
jae
xor
cmpsl
or
andb
cmp
insb
mov
std
or
xchg
mov
push
ret
ds
mov
jae
test
inc
bnd
scas
bound
movsl
hlt
insl
in
push
lcall
push
cltd
in
leave
mov
and
and
and
mov
addr16
or
aad
mov
loope
in
pop
mov
addl
scas
fidivl
int3
test
imul
push
mov
jbe
adc
hlt
add
inc
jno
cmp
inc
xchg
cmp
or
jmp
fimull
jns
sahf
jecxz
lret
gs
cmp
test
out
mov
push
ror
or
pop
out
xchg
nop
sub
cmp
push
cmp
ja
fdivrp
add
inc
sbb
dec
lret
cmp
dec
sbb
fcmovnbe
mov
mov
push
lods
adc
mov
movsb
push
inc
aaa
mov
test
and
cmpsb
pop
rolb
cltd
jmp
push
jne
xchg
lret
and
fisttpll
adc
rcrb
mov
and
xlat
movsl
xor
addr16
in
shrl
clc
lds
aas
mov
fwait
dec
mov
adc
cmp
popf
lea
dec
rcl
pop
inc
fwait
jl
les
int3
sbb
loope
dec
test
cmpsb
into
ss
xor
mov
shl
and
notl
lret
mov
mov
adc
rcrb
cmpsl
jae
addl
inc
sbb
push
fmul
and
stc
shll
nop
mov
aam
or
fs
jl
loopne
mov
sub
aaa
lret
inc
icebp
gs
xchg
mov
hlt
xchg
xor
daa
hlt
ret
dec
mov
or
mov
sbb
inc
divl
jno
cmp
dec
sub
mov
mov
ljmp
push
std
xor
cmc
pop
pop
fists
cmpsl
mov
mulb
add
fistl
dec
rorl
int3
pop
loopne
pop
mov
imul
adc
clc
lods
pop
pop
dec
sbb
xchg
repnz
pop
push
adcl
insl
gs
sub
xchg
sbb
mov
test
sbb
jne
xchg
gs
adc
lods
addl
jns
pop
adc
adc
out
inc
scas
ret
in
mov
ss
pop
ja
jg
sub
out
mov
and
out
pop
das
sub
int3
jge
in
inc
pop
sbbl
lock
aaa
jno
test
and
inc
out
inc
cltd
pop
mov
pop
sbb
pop
or
or
xor
or
psadbw
popl
inc
cmpsb
loop
dec
pop
mov
sub
dec
mov
push
icebp
cmp
and
fmull
pop
imul
pop
fs
in
loop
xor
mov
mov
jae
jne
daa
inc
xor
lds
sbbb
add
cli
fdivl
enter
pop
jmp
sahf
xchg
insl
movsb
sub
gs
call
mov
dec
sbb
cltd
xor
cmp
in
sbb
pop
mov
xchg
mov
pop
cmp
les
dec
sbb
gs
test
push
rcll
gs
icebp
mov
mov
insb
and
mov
in
push
jae
rorb
sbb
cs
dec
sbb
sbb
out
xor
mov
pop
mov
shrl
xchg
cli
sub
in
push
fstpl
out
lds
or
ds
mov
xchg
pop
mov
xchg
das
inc
sub
sti
sbb
push
xchg
cmp
xor
jno
adc
xor
enter
aad
lcall
or
imul
cmp
inc
ffreep
mov
and
hlt
xor
mov
or
add
push
outsl
xor
in
xor
les
lods
sbb
test
jmp
dec
adc
dec
rcll
in
fmuls
xlat
mov
pop
std
or
inc
shr
rcll
clc
fcoml
cmp
add
xchg
push
pop
xchg
or
addb
stc
dec
nop
xchg
sbb
pop
cmp
pusha
mov
dec
xchg
xor
cmp
icebp
mov
xor
xchg
inc
ret
cmpsb
jle
push
jmp
aaa
jno
insl
sbbb
mov
lock
push
push
xor
mov
or
dec
test
lods
push
jl
out
dec
xor
jo
comiss
mov
outsb
cmp
mov
adc
int3
aaa
jmp
jge
ret
and
inc
scas
leave
int3
les
arpl
dec
lcall
adc
fprem
leave
pop
xor
xor
ret
aas
sbb
sti
shll
movl
or
in
sbb
pop
mov
mov
xchg
fnstsw
inc
pop
scas
jle
mov
push
mov
push
xor
mov
jbe
aaa
push
jle
sub
mov
fcomps
movsb
cmc
es
jbe
adc
xor
lock
cmpsl
outsl
jecxz
mulb
imul
int
pop
ljmp
rcr
adc
jo
cmp
push
and
mov
xchg
rep
stc
lret
cld
cmpsb
sbb
popa
in
or
pop
imull
add
inc
outsl
jg
push
sbb
enter
sar
outsb
xlat
mov
fstl
push
outsl
jno
push
sub
xchg
adc
dec
ja
iret
std
add
insb
inc
pop
push
jmp
inc
mov
push
cmp
pop
ja
sti
mul
aas
dec
push
add
insl
fwait
sbb
push
je
inc
xchg
cltd
aas
clc
sbb
arpl
in
jg
int
or
jge
icebp
outsl
decl
cmpsb
mov
imul
pop
shrb
popa
test
out
adc
out
aas
fdivs
jne
ss
cmc
xor
cli
lods
aam
xchg
push
jge
jo
shll
pop
inc
push
jp
data16
imul
daa
jnp
popf
jecxz
cmp
inc
dec
insb
dec
mov
jo
pop
jg
pop
out
sub
inc
in
loop
xor
inc
mov
add
and
cmp
test
lea
loope
add
adc
jb
sub
inc
mov
mov
add
cmp
test
popa
adc
sbb
add
cmpsl
sub
xchg
pushf
ja
inc
out
adc
outsl
dec
mov
pop
mov
ljmp
sub
sbb
lret
and
mov
sub
sbb
cltd
push
popa
mov
mov
aas
dec
mov
sub
push
lret
into
stos
xor
jns
ljmp
nop
js
cmp
push
psubsw
jb
mov
rol
arpl
sub
fsubr
add
out
std
dec
lcall
push
push
leave
jne
jge
dec
dec
movsb
push
insl
jge
fisttps
mov
mov
cltd
addr16
jl
adc
inc
mov
addr16
jmp
movsl
and
adc
inc
sbb
pusha
inc
rcll
sahf
xchg
xor
sbbl
insl
call
mov
mov
daa
nop
mov
fcmovb
out
add
mov
mov
ret
sub
dec
insl
jo
out
retw
js
into
movsl
pop
adc
or
xchg
clc
ss
jp
loope
into
enter
add
sub
inc
pop
addr16
in
mov
push
pop
cmc
add
add
xchg
lahf
bound
dec
cmp
mov
rorl
subb
cmp
lods
addr16
and
ljmp
add
mov
adc
cwtl
or
adc
mov
mov
fisttps
ds
add
icebp
inc
or
and
lcall
jne
push
lods
sub
imul
jmp
jne
jge
jge
popa
inc
pop
add
mov
fstps
push
mov
movsl
add
push
test
xor
push
decl
shrl
jmp
mov
mov
fsubs
ret
das
mov
ficomps
cmp
mov
inc
pusha
push
iret
fdivrp
cli
insb
sbb
pop
cmp
push
lahf
inc
pmulhuw
shlb
aaa
or
cli
jne
and
xchg
adc
inc
cmpsl
sbb
insb
sbb
pop
insl
jns
in
and
cltd
das
scas
fisubs
cmp
sub
fiaddl
cwtl
bnd
das
arpl
fs
std
enter
sub
lcall
push
jb
or
sbb
pop
inc
pop
xchg
pop
add
xchg
push
cld
cmp
jmp
or
dec
imul
cltd
pusha
jne
rorl
sub
in
mov
push
pop
sub
fldcw
push
std
mov
scas
pop
mov
fmull
dec
mov
jne
xor
fsub
add
leave
xor
inc
mov
call
jne
dec
or
in
add
pop
ret
xorl
mov
xor
cmp
inc
mov
or
mov
dec
xlat
inc
add
jecxz
mov
lds
stos
mov
rorl
jmp
xor
add
adc
add
mov
push
mov
jecxz
insb
sbb
inc
push
sbb
xchg
ds
jae
pop
cltd
push
push
enter
movl
notl
scas
mov
test
push
dec
add
mov
mov
enter
iret
in
jge
xchg
daa
mov
scas
ss
and
lock
inc
mov
cmpsl
adc
jp
mov
lds
or
jo
add
sti
inc
xchg
sti
lea
iret
sub
stos
dec
rcrl
or
mov
sub
mov
add
xor
mov
or
xchg
push
movsb
jb
jns
ffree
cmp
xbegin
cmpb
push
ds
add
repz
cmp
popf
daa
out
shll
push
or
imul
es
pop
lret
mov
adc
and
dec
push
cmpsb
push
stos
inc
add
loope
int3
icebp
popf
push
and
fiadds
outsb
je
lret
xchg
xchg
bound
mov
lcall
push
scas
pushf
add
out
push
pop
mov
adc
int
pusha
inc
xchg
int3
jae
dec
jecxz
adc
scas
movsb
divl
inc
lret
pop
or
ret
scas
leave
push
rcl
loopne
sti
fs
movsl
cmp
mov
xor
lcall
je
mov
sarl
lahf
cmp
ss
push
pop
out
jmp
add
test
mov
stos
fwait
notl
push
dec
push
mov
loope
shl
test
adc
cwtl
mov
and
push
jle
jbe
icebp
mov
adc
xchg
cmp
xor
pusha
rorl
imul
mov
inc
xchg
mov
mov
mov
sahf
mov
adc
cmpsb
insl
jne
xor
ffreep
imul
jmp
int3
std
xor
sub
inc
icebp
and
xor
lret
fldt
jge
addb
push
mov
icebp
push
cmpsl
scas
in
data16
sub
pusha
sti
xchg
aad
std
pop
jne
mov
cld
inc
popa
cli
daa
addr16
mov
and
cmp
pop
sub
imul
pop
and
jbe
test
sbb
mov
leave
mov
mov
sub
ret
cmp
rolb
cmp
scas
loope
jl
sub
movsb
add
sbb
addr16
xchg
jecxz
loop
mov
loopne
or
ds
enter
out
or
mov
adc
stos
in
mov
and
adc
test
dec
sbb
sbb
cmp
mov
lock
popf
mov
mov
sub
add
push
sub
cmpsb
roll
outsl
shl
mov
aad
xchg
adc
aam
je
pop
cli
jb
cli
lea
fistpl
sarl
add
sahf
inc
sahf
and
jo
pop
xchg
les
cltd
dec
push
sbb
mov
ds
rclb
std
out
or
adc
std
pop
aas
and
test
fwait
sbb
jp
js
mov
inc
xchg
out
dec
insl
cmp
test
loopne
inc
jg
xchg
into
repnz
jnp
pop
xchg
pop
inc
and
push
push
jmp
mov
les
incb
lret
push
cmp
adc
jp
fcompl
dec
sub
cld
out
ljmp
lcall
xlat
cld
and
dec
xor
mov
dec
outsb
es
inc
xor
mov
push
cld
dec
cmp
xchg
push
add
sti
sub
push
orl
cld
cmpsl
inc
jle
push
cs
sbb
push
ficoml
add
ss
push
mov
mov
lea
jbe
rcrl
lcall
daa
and
pop
jbe
add
xlat
pop
jle
xlat
adc
dec
inc
sbb
mov
insb
cmpsl
cmc
adc
daa
dec
lcall
inc
pushf
push
mov
inc
inc
popf
cld
sub
adc
stos
ret
mov
xor
movsl
fidivl
icebp
adc
ficoms
jnp
sub
imul
stos
push
inc
mov
scas
add
mov
push
adc
daa
cmp
ficoml
mov
out
rcl
icebp
or
loopne
pop
orl
mov
adc
mov
cs
mov
fcoml
dec
sub
out
popf
xchg
fdiv
ficoms
fnstsw
arpl
pop
cmp
dec
mov
xchg
cld
ds
mov
or
or
dec
repz
mov
test
ret
lret
push
out
std
mov
mov
data16
mov
std
cmp
xor
sahf
ljmp
jns
sahf
mov
arpl
inc
push
inc
sti
xchg
iret
mov
shrb
mov
inc
add
loopne
adc
ret
cmp
mov
and
jns
add
loopne
pop
inc
cmp
jae
addl
mov
cmp
mov
loope
test
lea
jg
sbb
mov
mov
int
sbb
push
imul
inc
jo
adc
adc
and
ret
je
std
das
stos
push
push
xor
popa
sbb
xor
adc
lcall
cmp
ret
inc
das
jg
mov
ss
imul
pushl
cmp
daa
stc
add
loop
jmp
add
fdivs
es
pop
push
sti
dec
add
push
and
decb
fiadds
lods
in
jecxz
jbe
lret
cwtl
push
mov
test
mov
and
popa
iret
jne
cmc
data16
push
xorl
imul
scas
out
push
jmp
pop
mov
xchg
outsb
icebp
pusha
jnp
in
pop
out
ror
pop
add
lret
jo
mov
inc
jecxz
mov
mov
dec
stos
clc
mov
pop
fildll
arpl
enter
aam
adc
es
int3
xchg
fists
or
cld
jb
int
leave
ret
pop
mov
lret
sbb
xchg
pop
sub
xchg
sub
sarl
jl
hlt
sbb
cltd
adc
cli
xchg
div
or
push
inc
push
push
sub
inc
mov
lds
in
aas
inc
push
mov
imul
mov
je
hlt
mov
push
pushf
xchg
insl
out
mull
adc
stos
in
ljmp
cmpb
roll
pop
or
push
rcr
add
imul
dec
xchg
stc
loopne
dec
sub
fcmovb
push
gs
adc
push
mov
inc
loop
imulb
fcmovnb
pop
test
or
sub
enter
sbb
data16
test
int
dec
in
out
js
lds
iret
scas
mov
cld
cmp
jno
push
cmp
push
push
adc
cltd
sub
sbb
cltd
xchg
sbb
int3
je
add
mulps
xchg
push
or
lods
loopne
and
adc
out
mov
mov
inc
ss
movsl
or
sub
getsec
dec
movsl
pop
xlat
inc
add
or
adc
add
push
jns
subl
add
dec
dec
fidivrl
insl
repnz
xchg
hlt
mov
adc
xor
ljmp
fcoms
ret
das
sbb
jae
lea
adcb
mov
dec
arpl
inc
sti
dec
and
sub
push
inc
shll
jne
dec
adc
repnz
adc
jge
sbb
or
pop
mov
enter
jno
test
xchg
pop
mov
stos
dec
scas
adc
sbbb
push
icebp
gs
nop
clc
outsl
out
cmc
fldt
xorb
outsb
mov
mov
out
adc
dec
adc
inc
xchg
mov
inc
in
aas
mov
xchg
jb
push
pushf
into
cmp
out
ja
xor
dec
ja
sbb
ljmp
cmpsb
cmp
sbb
movsl
mov
loop
pusha
scas
cmp
rolb
outsl
dec
jg
xchg
loopne
pop
daa
jne
xorl
movsl
pop
dec
push
xchg
and
or
mov
iret
mov
mov
bound
cmp
dec
rcl
sti
insl
xorb
cmp
and
out
and
jmp
mov
lods
inc
push
cli
ret
mov
orl
clc
jle
iret
test
xchg
cmp
lods
mov
fstps
add
push
mull
pop
pop
dec
ret
mov
jnp
adc
loope
push
cmp
mov
sub
in
fadds
push
sarb
pushf
adc
push
or
pop
adc
push
and
push
ljmp
mov
pusha
daa
popf
sbb
add
ret
arpl
in
pop
push
test
push
and
cs
pop
ja
test
pop
jecxz
stc
mov
jns
shlb
repz
fidivl
mov
push
aam
xchg
or
or
hlt
leave
add
cli
or
pop
and
add
mov
mov
mov
xor
std
mov
xchg
ud1
int3
pop
aaa
xor
adc
xchg
scas
jecxz
mov
push
iret
je
jbe
lods
xchg
lret
xchg
cwtl
push
inc
dec
jl
bound
idivb
hlt
xor
push
arpl
shrl
rclb
add
gs
outsl
mov
lods
repz
aaa
je
xor
sti
mov
and
dec
jp
mov
mov
xchg
xchg
ss
xchg
sub
and
sub
pop
dec
fldl
push
nop
push
stc
inc
icebp
adc
jb
pop
push
or
xchg
aam
out
mov
fwait
mull
pop
jl
mov
mov
push
xchg
sahf
lods
and
mov
test
xchg
pushf
loop
inc
ljmp
or
js
adc
cmpsb
pop
sbb
leave
pop
mov
xor
outsl
pop
mov
push
in
mov
sub
adc
cmp
ljmp
jl
test
sbb
pop
sbb
insl
insl
dec
lret
xor
push
lret
nop
dec
hlt
mov
fisttps
and
lods
fistpll
imul
inc
mov
ja
dec
shll
or
ss
ja
add
add
inc
insl
imul
pushf
js
mov
cmp
je
mov
lcall
js
sbb
mov
into
fidivrl
inc
adc
shr
dec
jg
xchg
inc
cmp
fs
pusha
add
or
jp
out
int3
jg
data16
jns
jge
inc
stos
mov
stos
mov
cmpsl
lods
sub
fcmovbe
cli
pusha
lea
add
in
adc
pop
lods
iret
mov
jmp
mov
mov
adc
lcall
pushl
shll
aam
lods
aaa
sub
test
stos
jnp
push
dec
movsl
cmp
or
stos
push
dec
jnp
out
gs
and
inc
insl
aaa
jns
sub
pop
sbb
out
mov
adcb
lret
or
jmp
xor
call
and
and
dec
xchg
push
dec
inc
add
or
or
sahf
or
mov
fiadds
adc
or
loop
cltd
mov
xlat
call
fsubs
out
rolb
into
cmp
xor
jbe
pop
inc
hlt
jb
sbb
fcoml
lods
mov
add
dec
hlt
xchg
cwtl
lods
in
rcl
jp
cs
sub
sub
fwait
out
fs
sbb
rcrl
pop
loope
loope
adc
fwait
xor
lods
jo
pop
or
adc
loop
loope
mov
xchg
pop
in
xchg
jb
pop
inc
add
push
aam
imul
xchg
mov
jecxz,pn
xchg
jae
pop
xor
notl
inc
xor
outsb
push
enter
adc
cmp
dec
das
jae
sub
sbb
push
sti
movl
icebp
fsubr
stc
loop
jno
cmp
adc
jnp
stos
mov
sbb
call
mov
push
add
push
push
mov
in
lods
test
stos
xor
pop
not
data16
cs
cmp
push
hlt
mov
clc
xchg
lds
decl
xor
lds
sbb
shl
add
xchg
es
xchg
in
les
or
xchg
adc
or
aad
int
cmp
cmpsb
lret
mov
lahf
inc
mov
int
jae
movsl
and
or
sub
das
xchg
fcomps
push
ffree
js
es
cmp
xor
push
and
hlt
mov
jmp
icebp
addb
loopne
mov
cmpsl
jg
call
ret
out
movsl
pop
lret
rorb
int3
ret
mov
out
aad
lds
mov
cmpl
rcll
aas
xlat
dec
xchg
inc
adc
lea
pushf
inc
dec
fbstp
out
call
stc
jnp
mov
fptan
rorl
outsl
xor
jo
and
and
mov
lock
jle
scas
daa
shll
or
fiaddl
xor
cld
mov
pop
adc
push
lahf
into
cmp
cmp
out
negl
mov
lahf
cli
roll
fidivrl
fwait
mov
mov
out
pop
push
adcl
mov
ss
pop
push
mov
mov
loope
cmpsb
xor
xor
and
mov
jl
icebp
lods
popf
jbe
sti
sbbb
iret
mov
loop
and
int
jbe
cld
xor
push
repnz
cmpsl
js
xchg
jno
push
sbb
shll
shrl
sub
inc
adc
pop
add
add
cmp
addl
movsb
rcl
add
mov
pushf
mov
sbb
scas
xor
xor
jae
bound
shll
push
mov
adc
push
loopne
out
pop
test
inc
cmc
arpl
in
xor
mov
cmp
scas
out
popa
test
xor
data16
push
pushf
push
inc
loope
pop
mov
xchg
mov
inc
fdivs
mov
adc
sub
and
mov
mov
dec
cwtl
je
sbb
fwait
inc
jnp
push
dec
sti
sub
jp
sti
aaa
cltd
scas
int
mov
cmp
std
pop
loop
pusha
mov
sbb
stos
xchg
jmp
dec
gs
movsl
mov
or
jmp
ja
sbb
add
rolb
mov
cmpsb
bound
aad
pop
sbb
xor
mov
mov
and
das
mov
ror
nop
rcr
adc
mov
dec
mov
add
test
outsb
rolb
fisubs
adc
pop
mov
int
mov
jmp
out
add
cmp
jmp
jge
imul
pop
clc
cmp
lret
lret
testl
cmp
sbb
xor
out
iret
pop
push
mov
pop
pop
idivb
push
in
movsl
mov
jae
or
movsl
nop
sbb
jnp
lock
or
insl
mov
sti
mov
mov
bound
or
outsl
inc
add
setnp
out
pop
mov
mov
fidivs
jp
cli
or
dec
lock
dec
bound
or
jno
gs
sti
jns
loopne
jb
sbb
add
jae
popa
test
gs
js
push
scas
xchg
fiadds
mov
cmp
or
std
leave
in
xchg
out
jmp
jl
shll
je
shlb
imul
shrb
sbb
xor
in
test
sbb
xchg
aaa
sbbl
rclb
je
jbe
mov
aas
jmp
dec
sub
fmul
or
lock
int
lcall
push
shl
xchg
pop
inc
repz
nop
push
fisttps
xchg
pushf
pop
cmp
mov
leave
xlat
in
xchg
push
dec
dec
or
into
cli
cmp
cwtl
shll
sarl
cmp
push
aas
aaa
stos
xor
out
xchg
popf
addr16
loope
stc
sub
inc
cmp
shlb
xchg
xchg
je
daa
fidivrl
iret
test
dec
inc
scas
addr16
mov
or
fldt
sbb
aas
mov
lock
iret
add
pop
out
pop
xchg
mov
leave
push
dec
xchg
push
mov
adcl
xor
jns
pop
or
sahf
mov
stos
out
adc
fsubrl
add
es
adc
pop
aam
js
push
mov
jo
cmp
push
aad
and
pop
xor
daa
in
in
loope,pt
in
lahf
sbb
ja
mov
lret
repnz
pop
mov
mov
shl
inc
push
test
in
ret
out
push
or
inc
jnp
sub
pop
or
lret
fwait
mov
mov
xor
push
dec
sub
lret
mov
mov
int
fdivrs
sub
into
and
jne
lods
lea
jno
xchg
loop
imul
jg
ret
iret
mov
pusha
inc
lahf
add
inc
inc
xor
mov
mov
mov
and
mov
out
inc
repnz
rcll
rclb
lds
sbbb
push
mov
in
hlt
fnstcw
pop
mov
mov
js
jecxz
test
and
mov
lods
in
xchg
pusha
fdiv
cmpsb
add
ret
mov
jecxz
cwtl
jnp
cmpsb
je
xchg
addr16
inc
loope
mov
mov
ret
sbb
push
pop
hlt
mov
mov
insb
or
inc
loop
push
in
dec
push
test
push
negl
pop
lods
or
sub
sub
mov
fwait
sub
push
rdtsc
mov
out
pop
pop
xchg
pop
xor
int
jae
dec
mov
xchg
jno
adc
insb
sahf
xchg
call
rcpps
lret
mov
adc
aad
out
into
cmc
loope
js
jne
mov
pop
adc
mov
adc
dec
xor
div
insl
add
jbe
jp
pop
ljmp
mov
arpl
add
movsl
xor
cmp
popa
pop
sub
jbe
andb
sarb
mov
pop
cmc
sahf
je
pop
std
clc
inc
cmpsb
roll
in
std
sbb
into
jns
lret
xchg
push
add
or
insb
pop
test
popf
mov
cvttps2pi
jo
pop
jbe
daa
popa
mov
insl
outsl
pop
pop
in
loop
xor
std
push
add
je
stos
movsl
mov
push
add
inc
rclb
fwait
les
sub
jne
repnz
lock
xchg
jo
lahf
adc
pop
cmpsl
ds
stos
dec
jbe
lods
mov
jne
mov
and
xchg
test
es
jnp
imul
sub
dec
push
cltd
adc
mov
scas
sar
push
mov
mov
lahf
addr16
mov
jmp
or
arpl
mov
daa
clc
pop
fnsave
lea
les
sti
ja
mov
mov
fistl
sub
sub
sub
aam
in
dec
addr16
out
or
inc
mov
xchg
pop
sbb
cmp
xor
xor
or
or
loopne
push
cld
or
mov
imul
pop
enter
cmp
xor
enter
and
xor
insb
mov
inc
pop
adc
fwait
pop
push
push
imul
add
push
decl
fs
add
push
cmp
jmp
push
ja
inc
and
in
mov
push
mov
or
and
jne
sub
loopne
insl
jns
mov
test
cmc
movsl
cmpsl
pop
and
adc
gs
lds
adc
int3
push
dec
cmp
fistl
xchg
xchg
das
xchg
dec
loop
sub
lock
rcl
loope
sub
or
sbb
dec
pop
lret
out
push
and
notl
adc
push
insb
daa
cmp
mov
int
es
movntps
sub
or
in
sbb
sbb
xor
pop
mul
mov
scas
lea
std
scas
mov
and
mov
mov
outsl
xor
orl
fld
and
adc
mov
xor
push
repnz
dec
ret
or
fwait
lret
xchg
cmp
mov
push
xor
adc
add
popa
fwait
or
sub
scas
out
dec
pop
cmp
push
push
sahf
arpl
add
mov
pop
arpl
or
fisttps
sub
jo
sahf
pop
xlat
pusha
ret
pusha
cltd
cmpsb
xor
or
inc
std
and
cmp
mov
cli
add
add
cmc
xchg
mov
imul
mov
dec
push
scas
dec
rorb
sti
mov
lea
mov
cmp
jp
repnz
sbb
xor
inc
jmp
scas
or
rclb
mov
in
adc
push
or
popa
fdivl
sahf
rorl
fdivl
outsb
adc
xchg
data16
test
pop
je
sbb
mov
and
cli
mov
out
mov
sahf
sbb
out
out
rorl
jnp
je
cmp
pop
lcall
jg
mov
inc
push
rcr
hlt
xchg
icebp
or
int3
mov
mov
sub
lods
or
fwait
xchg
int
hlt
movsb
jb
sub
test
pushf
scas
mov
inc
and
sub
hlt
shll
dec
jb
adc
adc
icebp
andl
pop
nop
cmp
pushf
xchg
dec
lret
add
pop
mov
int3
hlt
in
in
rcl
jecxz
xor
aaa
jno
xor
sahf
test
mov
jl
stc
stc
and
dec
mov
sub
inc
xor
jp
lret
movsb
ret
mov
xchg
popa
cmp
jmp
stos
xor
test
xchg
jmp
push
lds
and
aad
iret
mov
inc
js
cmp
call
int3
arpl
pop
adc
les
inc
fisubl
stos
sub
lods
incb
xlat
jge
push
dec
loopne
jmp
adc
loop
out
popf
and
sarl
and
ss
sarb
cmp
mov
sbb
push
push
jl
loopne
inc
int
mov
xor
xor
iret
ljmp
shll
icebp
popa
and
dec
cmpsl
xchg
test
sbb
jns
push
sahf
imul
rorl
repnz
mov
ret
stos
shll
add
negl
popl
mov
addr16
sub
test
fnstenv
shrl
jae
mov
pop
andl
mov
push
xor
push
adc
in
xchg
loopne
cli
sbb
std
popf
push
xchg
xchg
leave
adc
hlt
push
sub
jnp
orb
mov
outsl
sahf
mov
sti
scas
subb
int
test
test
stos
add
jmp
pop
xchg
lods
mov
mulb
mov
imul
dec
loope
insl
stos
insb
stc
jmp
test
cs
scas
fwait
aam
test
cli
dec
cld
pop
hlt
test
adc
aas
cmp
shlb
fiadds
inc
mov
add
aas
jno
hlt
jle
mov
mov
les
fidivrs
iret
incb
or
jno
lret
aam
cmpsl
jns
jle
cmp
xor
addr16
add
dec
pop
jno
dec
lock
sbb
mov
xlat
scas
or
cmp
pop
stos
sbb
mov
scas
mov
stc
stos
sub
dec
mov
iret
test
roll
mulb
hlt
and
mov
jge
and
inc
lret
test
shr
les
into
sub
sub
jb
push
aaa
inc
jne
in
aam
xor
test
and
sbb
xchg
ja
jp
and
xorb
pop
dec
add
icebp
mov
test
xchg
sahf
push
sbb
les
jnp
sbb
ss
push
jge
sbb
notl
pop
xchg
stc
cmp
mov
leave
mov
lods
loopne
sbb
inc
shll
fldt
stc
outsb
inc
insb
jecxz
std
adc
or
imull
mov
sub
and
cmp
sub
addl
sub
inc
fsubrp
push
call
cmpsb
ret
fistps
sbb
iret
pop
fcompl
cwtl
or
loope
jl
mov
adc
int3
push
popf
aas
cmpsb
jnp
sahf
inc
sub
out
or
inc
bound
int3
out
inc
shlb
mov
stc
push
add
es
adc
jb
xchg
in
dec
mov
push
pusha
inc
push
repz
push
stc
inc
insb
inc
mov
jle
push
lret
stc
es
ss
jb
mov
push
jae
ret
mov
orb
dec
sarl
push
pusha
fcomps
sub
shll
push
test
js
jge
push
dec
cltd
jge
push
adc
or
and
jae
mov
fimull
or
inc
or
dec
xlat
xchg
lods
xor
subb
sahf
dec
mov
adc
xchg
mov
push
orb
sti
cmc
rorb
dec
shrb
das
adc
mov
xor
adc
sti
inc
or
push
jae
je
iret
shll
mov
icebp
mov
scas
cmpsl
xor
in
inc
inc
mov
or
inc
arpl
fcomp
sahf
ljmp
insb
lret
or
mov
fs
or
or
jne
xchg
fisubl
outsl
jg
xor
shl
out
test
jg
mov
divb
stos
mov
imul
fcomps
arpl
cmp
mov
popa
test
mov
in
adc
push
pop
sub
push
mov
mov
dec
inc
filds
or
insl
sub
cmp
mov
adc
mov
add
repz
sub
jp
mov
icebp
test
into
sub
sbb
cmp
xor
in
popa
mov
clc
mov
dec
and
adc
push
dec
jbe
mov
pop
fistpll
dec
pop
add
push
adc
xor
jne
push
shlb
cmp
pop
dec
mov
pop
cmp
js
lret
not
fwait
ss
cmpsl
mov
sbb
rcl
ja
and
inc
push
cli
xchg
roll
sub
stos
loope
lock
cld
int
sbb
hlt
frstor
imul
insl
fistpll
pop
std
std
mull
cmp
aaa
mov
fwait
in
jne
xlat
sbb
inc
rorb
xchg
bound
or
or
mov
test
sub
push
adc
movsl
dec
mov
push
adc
or
pop
scas
sarl
jmp
sub
inc
xchg
adc
xchg
out
jmp
jns
and
pop
loope
push
mov
push
push
pop
xor
jl
mov
popf
rolb
inc
push
stos
jne
sbb
mov
add
nop
cmp
jp
popf
mov
lea
mov
arpl
nop
jmp
lcall
sbb
fwait
sub
mov
pop
lock
jbe
ja
inc
dec
jecxz
xchg
sub
out
clc
sub
cmp
std
and
xlat
pop
and
mov
xchg
fsubrl
mov
push
add
adc
cmp
pushf
push
fnstenv
mov
cmp
decb
and
in
mov
xor
nop
push
mov
adc
aas
cmp
insb
lds
add
cmp
int
imul
lds
mov
movsb
gs
mov
repnz
pop
xor
setge
mov
or
pop
fnsetpm(287
fxch
push
cmpsl
test
or
aam
in
and
imul
xor
jmp
popf
jne
filds
sahf
xchg
addb
ds
int3
loop
push
add
movsb
mov
mov
pop
mov
jnp
push
push
inc
inc
int3
xchg
int3
cmp
xchg
mov
lret
test
movsl
pop
pop
ffreep
push
pop
sbb
out
add
fisubl
rolb
movsb
aas
sbb
popa
adc
pop
jmp
inc
xchg
jne
add
adc
pop
rcrb
push
dec
ss
jmp
adc
adc
pop
sbb
pop
xor
adc
pop
or
scas
repnz
in
jg
inc
outsl
push
test
pop
nop
ror
xor
mov
mov
pop
iret
out
and
xchg
mov
mov
mov
bound
dec
stos
mov
sbb
cmpsl
jne
dec
cs
xchg
ss
inc
xchg
pop
cmp
push
dec
jecxz
inc
in
pop
cmp
lahf
divb
inc
pop
and
jb
or
xchg
imul
mov
sti
jmp
mov
push
mov
shlb
fmulp
out
cmpsl
orl
scas
pop
push
and
dec
scas
xor
or
stos
mov
pop
xchg
pop
out
fisubrs
push
aad
and
and
mov
sub
push
jnp
push
rol
cmpsb
mov
sti
fwait
xchg
outsl
mov
xchg
out
pmovmskb
imul
bound
aaa
inc
dec
pop
and
push
push
cmp
xorb
sub
jecxz
or
jo
mov
out
add
pop
mov
clc
pop
stos
or
mov
jp
test
mov
lret
test
frstor
je
mov
in
jp
jb
addr16
mov
dec
ljmp
rorl
mov
daa
aas
xor
dec
dec
mov
inc
jno,pn
test
shl
js
ret
fwait
jmp
sbb
sbb
or
mov
or
and
inc
into
pop
or
pushf
push
cs
aam
aas
adc
xor
or
xor
mov
jle
fidivl
or
sarb
mov
sub
clc
xchg
mov
xchg
rorl
dec
mov
lret
clc
cmp
pop
mov
mov
push
jbe
jecxz
fimull
je
cmc
pop
pushf
shl
lahf
push
daa
ja
pop
xchg
jne
outsl
iret
aaa
in
mov
add
cmp
and
mov
push
jb
mov
outsb
ja
push
into
sbb
repz
dec
pop
ja
stos
xor
mov
push
sbb
add
out
push
repz
ficoml
out
jbe
xorb
ret
out
ret
repnz
stc
lahf
insl
mov
ret
add
adc
and
sbb
loopne
repnz
mov
mov
stos
scas
rolb
or
add
dec
push
mull
negl
lods
xchg
sub
shll
bound
mov
push
cld
mov
or
push
loope
xchg
jbe
jo
mull
mov
js
mov
pop
mov
leave
xchg
dec
fdivl
mov
adc
xchg
es
pop
sub
fidivrs
pop
jnp
dec
xchg
pop
add
cmc
rol
movsl
sbb
lahf
jle
je
and
scas
lods
ss
fldcw
mov
cmp
movb
sub
dec
pusha
out
cmp
pop
jnp
sbb
cmc
pushf
orl
movsb
xor
out
and
arpl
mov
scas
sub
push
pop
or
fnstenv
xor
into
iret
jge
clc
ret
shrl
adc
jae
js
cmp
js
fldt
inc
cmp
mov
scas
dec
fdivrp
sbb
jb
mov
sub
cmpsb
push
pop
push
les
xbegin
and
sub
sub
xchg
mov
mov
in
cmp
push
out
sbbl
dec
out
les
idivb
pop
sub
aas
das
mov
fwait
notl
dec
sahf
enter
addb
mov
jecxz
fldcw
mov
imul
jg
ret
or
cmc
and
mov
dec
mov
xchg
inc
push
inc
jmp
push
mov
cmp
fcoml
mov
sub
mov
pop
aas
imul
jge
dec
and
pop
or
xchg
je
pop
push
xor
xchg
leave
movsb
xchg
jnp
mov
adc
and
inc
dec
loopne
sbb
adc
lea
lret
int
inc
leave
jge
pusha
aaa
mov
pop
and
adc
cmp
out
xchg
pop
mov
add
fstl
ljmp
out
js
pushf
push
mov
mov
ret
jp
test
repnz
js
pop
in
mov
shrb
insb
and
loope
nop
mov
mov
sbb
imul
test
pop
push
hlt
mov
add
push
insb
cmp
test
dec
xor
pop
mov
in
mov
adc
cmp
ret
test
jl
dec
imul
notl
outsb
mov
clc
rorl
leave
sub
dec
into
sub
pop
push
mov
stos
clc
xorb
psraw
pop
dec
push
in
mov
addr16
iret
inc
in
sarb
xchg
push
and
cs
mov
shrb
fisttpll
sub
mov
adc
mov
sarb
pop
in
rorb
hlt
jmp
adc
pop
cmpb
js
cmpsb
ss
cmc
in
push
lods
mov
test
lret
pop
pop
mov
stc
pop
sub
cmc
and
mov
iret
xchg
jns
push
int3
test
pop
jne
dec
insl
jns
test
inc
xchg
jae
int3
xor
cmpsb
push
fcmovu
sbb
outsl
mov
das
mov
xchg
mov
sub
push
les
mov
adc
dec
in
stos
test
ljmp
add
nop
xchg
push
mov
data16
mov
push
lods
jmp
mov
xlat
das
pop
sbb
fcomps
xchg
add
xor
cld
jmp
add
fwait
add
sbbl
aaa
push
mov
clc
or
and
pop
add
cmp
outsb
lahf
pop
pop
lcall
mov
fdivrs
dec
inc
clc
fwait
xlat
pushl
cmpl
stc
ret
call
xchg
jmp
sahf
jmp
pop
push
mov
xor
sbb
dec
inc
push
xchg
adc
pop
mov
mov
sub
sahf
jb
xchg
push
ror
sub
push
and
loop
fisubrl
xor
cwtl
aas
outsb
push
lods
cmpsb
cmpsb
jae
jo
hlt
xchg
cwtl
int3
popf
cli
push
jo
rorb
rcrl
fsts
enter
mov
outsb
in
rcrb
aad
add
pop
insb
inc
pop
in
scas
popa
pop
scas
jb
cmp
xor
into
mov
ret
in
and
xchg
dec
pop
xor
and
ret
insb
cwtl
aas
xchg
pushf
stos
sbb
cmpsb
xchg
sbb
test
dec
mov
lcall
add
ja
xchg
jmp
loope
loopne
cmp
call
scas
nop
fwait
xor
dec
pop
xchg
add
jne
aas
stc
pop
lret
mov
pop
nop
mov
out
enter
xchg
jnp
or
dec
das
or
jo
leave
and
pop
jge
inc
add
push
out
mov
stc
fs
pop
scas
cli
inc
dec
jecxz
ss
cmpsl
xchg
push
dec
test
dec
xchg
mov
pop
push
nop
mov
or
push
push
mov
dec
stc
cmp
sbb
pushf
push
xchg
mov
out
sub
adc
xchg
fsubrl
mov
adc
push
cmc
out
and
mov
add
pop
pop
sahf
mov
mov
push
leave
mov
push
pop
sub
push
sbb
out
mov
sub
mov
out
and
cmpsb
add
out
cmp
add
fisttps
fists
aaa
jecxz
in
jmp
push
jl
or
xchg
lods
pop
sub
notl
aas
push
push
inc
pop
inc
jg
aam
push
ss
mov
cmp
int3
aad
push
xchg
push
sub
sub
mov
int
xor
mov
loopne
dec
and
int3
shrl
cmp
sub
add
and
sti
imul
sub
and
pop
movsl
adc
clc
inc
sbb
add
inc
repz
js
das
loopne
pop
or
pop
mov
push
mov
jb
setg
xor
add
mov
and
jge
inc
sub
or
aaa
add
test
and
pop
cmp
jo
adc
imul
sbb
pushf
push
fdivrs
add
push
push
jns
sub
cltd
mov
or
mov
pop
mov
jo
roll
adcl
mul
pop
stc
cmpsl
dec
mov
add
outsb
mov
test
arpl
cmp
enter
bnd
data16
inc
push
pop
outsl
sbb
xchg
pusha
adc
mov
lcall
jmp
fdivl
jae
add
test
and
int3
cwtl
adc
push
aam
and
mov
loop
xchg
lods
pusha
mov
sub
jne
ja
push
mov
xor
in
loope
adc
fsubrs
sahf
xchg
cmp
mov
in
pop
cmp
xchg
sbbb
pusha
inc
add
repnz
std
sbb
pop
mov
sub
popa
loop
add
loop
jecxz
cmc
jae
fistps
cs
iret
lret
cmp
and
mov
and
into
mov
pop
xlat
push
mov
mov
pop
int3
sbb
loope
push
and
loopne
xchg
mov
pop
or
mov
into
inc
jmp
loopne
fistps
imul
mov
dec
mov
pop
dec
sbbl
push
sbb
mov
sub
dec
lret
mov
fidivs
and
jge
imul
xchg
add
inc
je
and
das
mov
insb
mov
inc
sbb
sub
xchg
aam
shrl
test
daa
inc
cmpl
into
les
cmpsl
inc
xchg
sub
cmp
shl
sbb
lret
sbb
shll
mov
mov
xchg
lret
or
jae
mov
push
mov
aam
pop
cltd
ds
mov
imul
dec
in
mov
mov
push
jmp
aas
dec
cmp
ljmp
loope
dec
mov
jg
mov
add
add
push
push
fisttpll
mov
mov
sub
lods
cs
adc
mov
andl
and
fidivrl
lea
mov
stc
data16
aam
shlb
pop
cmp
aam
mov
pop
ror
adcl
xchg
addr16
stc
scas
das
pavgb
icebp
lret
push
add
dec
scas
sbb
lret
mov
rol
ljmp
shlb
and
xor
mov
sbb
cmp
jp
mov
mov
cwtl
aad
orl
bound
dec
jmp
dec
push
leave
ljmp
mov
test
scas
cld
int3
imul
xchg
pop
push
jl
subb
xor
mov
pop
cmc
add
push
popa
sbb
pop
int
roll
sub
data16
inc
push
mov
data16
ja
orl
sbb
fcomps
mov
rcrl
ja
jmp
cmpsb
pop
jbe
pusha
mov
repnz
adc
sarb
stc
sbb
sub
jns
hlt
shlb
and
jmp
loope
push
lock
gs
dec
pop
scas
push
ds
dec
insb
sbb
stc
pop
push
out
fst
cmp
lock
dec
outsl
mov
loop
stc
jecxz
leave
cmpsl
ret
js
mov
outsb
xchg
fcomp
icebp
mov
je
lea
inc
lret
jbe
and
and
mov
ljmp
into
icebp
movsb
sub
mov
ja
jecxz
dec
jge
ds
shrb
fcos
out
pop
adc
stc
mov
call
fldcw
cmp
in
dec
cwtl
lods
mov
sub
cmp
inc
push
les
ja
mov
ja
xchg
fwait
sub
shl
lret
or
call
inc
daa
enter
ja
nop
popl
cld
iret
mov
push
add
xor
or
or
stc
rcrb
inc
es
std
xchg
push
enter
and
adc
adc
jmp
insl
cmp
movsb
xchg
mov
xchg
arpl
ror
ds
ret
xchg
data16
xchg
dec
int3
jne
rcr
or
lock
rcrb
and
or
cmpsl
mov
mov
inc
lods
dec
bound
add
cld
jle
dec
push
xadd
and
cltd
out
adc
or
mov
scas
inc
dec
sub
adc
jge
movsl
cmp
sub
jecxz
test
mov
sub
lods
ss
xlat
mov
mov
enter
incl
mov
mov
lahf
sahf
lea
in
add
and
sbb
jle
cmp
mov
loopne
inc
and
fildl
mov
push
xor
pop
icebp
rolb
add
shll
out
or
pop
imul
ljmp
push
pushf
fildl
das
mov
xor
cltd
push
mov
jp
lods
cltd
pop
stc
inc
dec
or
mov
mov
ret
pop
mov
hlt
sub
cmp
mov
in
lods
notl
cmp
insl
add
push
adc
fnsave
data16
mov
fisubs
cmc
dec
fmuls
sub
movsb
fdivr
clc
adc
ja
mov
movsl
stos
and
dec
jo
mov
push
and
rcrb
adc
dec
mov
xchg
scas
jbe
lahf
mov
xor
pop
imul
jns
gs
mov
add
fcoms
mov
cwtl
cmp
pop
jb
push
shll
dec
cmp
int
flds
sub
lods
xchg
inc
push
mov
add
and
les
movsb
inc
dec
sbb
cmp
nop
inc
das
mov
pushf
imul
inc
nop
bound
ret
xchg
fstpt
mov
mov
sub
adc
or
inc
cmp
test
notb
or
shlb
loop
leave
popa
xchg
xor
andl
sub
dec
or
adc
pop
lret
mov
in
xor
push
mov
mov
push
loopne
and
mov
mov
xchg
xor
mov
lock
pop
mov
hlt
into
xchg
loope
sub
inc
mov
xchg
xlat
pop
inc
or
sub
std
popa
pop
das
xchg
mov
push
aad
push
push
mov
cmp
adc
hlt
rorl
push
add
pop
add
mov
push
nop
outsb
dec
enter
xchg
scas
aaa
xchg
nop
leave
xor
movsb
ja
adc
lds
testl
shl
mov
sti
lret
subl
lret
xor
adc
or
mov
dec
loop
mov
mov
stc
shl
popf
les
loop
add
lret
addl
cmp
je
jno
pop
adc
call
mov
cmpsl
add
cmc
or
xor
jae
ret
sub
dec
sarb
imul
mov
jge
sub
mov
sbb
xlat
lods
in
or
sbb
add
stc
sarb
push
and
dec
lahf
movsb
es
and
mov
lcall
adc
mov
push
pop
pop
xchg
dec
cmp
dec
inc
out
push
xchg
xchg
fpatan
lcall
loop
xchg
lock
cmp
lret
jne
inc
cmpsb
add
mov
dec
repz
mov
in
fldt
or
lahf
outsb
xchg
fdivl
inc
je
push
cmpsb
dec
insl
xlat
cmp
xchg
dec
popf
test
in
xor
mov
jno
xor
xchg
inc
int3
cmp
xchg
cwtl
int3
adc
adc
testb
or
bnd
stos
jae
xchg
mov
sub
jecxz
mov
jge
cli
int3
sbb
xchg
add
sarb
inc
adc
mov
adc
mov
movsl
mov
repz
sub
push
out
pop
or
xchg
cmp
lods
rcll
loope
mov
lea
hlt
addr16
pop
cltd
pop
add
enter
mov
cmpsb
dec
dec
icebp
push
adc
rorb
mov
mov
cmp
sbb
imul
and
out
pop
lret
aam
mov
scas
arpl
mov
incl
loop
push
push
cmp
dec
movsb
pop
mov
into
adc
xor
xchg
aas
cwtl
or
movb
inc
test
add
aas
inc
or
cmpsl
lahf
or
dec
movsb
les
push
xchg
loope
shlb
aaa
push
out
stc
and
je
outsb
sbb
cmc
xchg
adcb
mov
mov
ror
test
add
stos
test
iret
or
cmp
add
sub
frstor
cmpsl
pop
cmp
sbb
dec
aaa
ret
stos
and
mov
mov
jno
xchg
and
mov
pop
bound
jne
mov
jmp
or
imul
mov
jge
daa
pusha
cmp
mov
mov
testb
pushf
cmpsb
int3
aad
out
sub
and
sahf
dec
sahf
cmp
adc
lret
fadds
aas
jae
js
aaa
xchg
stos
xchg
add
nop
mov
adc
adc
jmp
or
es
xor
mov
lret
xor
and
mov
fildl
repz
dec
mov
dec
cltd
mov
inc
div
sub
movsl
and
adc
pop
push
mov
loopne
and
sbbb
repnz
loope
sbb
movsb
cltd
lods
inc
xchg
loop
and
jg
sub
xor
outsl
popf
push
sbb
or
push
cmpsl
add
cmp
insl
jnp
push
lods
xor
icebp
rcll
push
mov
jl
call
call
lret
fwait
bound
fisubrl
out
cmc
push
push
adc
bound
shll
pop
sbb
adc
sub
add
adcb
add
push
aam
loope
dec
stc
out
xlat
mov
cmpsl
mov
add
stc
ds
sbb
out
std
mov
mov
jp
out
xchg
xchg
nop
fwait
inc
add
sub
ret
movsb
jb
lfs
out
out
adc
or
push
cld
cs
into
fcoms
pop
dec
loop
and
push
in
adc
dec
sub
push
xor
inc
pop
mov
ja
dec
insl
and
cmp
repz
je
ret
xor
mov
xchg
pop
movb
xchg
push
or
jg
add
jne
lahf
aam
stc
hlt
jg
jb
push
mov
not
orb
stos
lret
stos
out
mov
notb
mov
mov
aas
sahf
xlat
ret
sahf
vpsllw
xchg
hlt
jo
dec
jg
xorl
movl
adc
xor
clc
andb
out
xchg
jnp
testl
push
jbe
push
xor
jbe
mov
xchg
and
cltd
ret
in
fists
cli
mov
fisttpll
and
fsubs
pop
arpl
inc
jmp
clc
sbb
pop
fs
inc
mov
imul
into
lcall
lcall
xchg
pusha
xchg
jbe
sahf
inc
inc
cmp
dec
je
sub
mov
pop
out
and
sbb
sbb
mov
maxps
cmc
jns
lret
test
out
xlat
add
xchg
add
incl
pop
ds
mov
mov
leave
xchg
or
imul
mov
mov
fildll
pop
mov
xchg
gs
dec
or
and
jmp
cmp
adc
insl
jne
jns
fsubl
push
mov
sbb
rorb
jae
jno
fcoms
sbb
ss
incb
das
sub
scas
stos
and
icebp
jo
nop
out
dec
mov
and
ret
mov
rorb
mov
and
pop
mov
push
sbb
mov
pusha
rcrb
nop
int
ret
gs
arpl
dec
or
jecxz
gs
aad
cmp
and
sbb
push
pop
inc
adc
and
mov
inc
cmpsl
add
xor
test
mov
xchg
sub
pop
mov
inc
ja
adc
lret
push
cmp
jb,pt
addl
fwait
popf
xchg
push
lea
add
daa
das
rcr
outsb
mov
xor
xchg
xor
or
adc
mov
jmpw
push
push
mov
in
pop
sub
jno
pusha
enter
in
mov
jp
leave
jmp
jecxz
jmp
dec
lcall
fwait
xchg
cmp
jl
push
mov
cmp
or
sub
inc
lds
push
mov
enter
mov
pop
daa
inc
dec
add
repz
dec
outsb
sub
jle
in
sbb
int3
shrl
mov
dec
lret
mov
leave
mov
cwtl
sbb
popa
or
sbb
clc
jmp
mov
fildll
jns
sarb
inc
into
in
nop
mov
outsb
lods
scas
push
adc
pop
sub
pop
xchg
cmp
imul
jne
mov
mov
popa
stc
push
in
or
adc
sub
mov
data16
inc
loop
ret
cmp
cmp
das
imul
loopne
lods
ret
dec
mov
cli
push
xchg
and
or
jbe
pusha
pop
lods
shlb
cmp
jbe
push
test
fmull
fxch
shlb
int3
aad
int
nop
add
xchg
jnp
sbb
aad
movsb
mov
lea
aaa
int
arpl
das
cltd
sub
and
and
in
nop
cmp
outsb
push
jl
xchg
icebp
pop
mov
imul
iret
sbb
in
sbbl
or
pop
stos
stos
adc
pop
jmp
pop
jo
dec
xor
arpl
or
mov
or
or
inc
in
xchg
pusha
cmp
mov
bound
add
lea
rcll
fwait
insb
fnstsw
loopne
jmp
jne
sahf
sbbb
mov
mov
pop
jmp
shr
repnz
int
shll
int
adc
sub
or
dec
mov
mov
ret
jp
pushf
pop
cwtl
mov
movsl
add
push
mov
ret
dec
inc
xlat
inc
xchg
movsb
test
xor
pusha
and
or
outsl
cmp
jns
pop
push
adc
popf
test
inc
icebp
inc
sbb
popf
lahf
imul
lret
sti
leave
cmp
push
mov
push
or
es
mov
pop
cmpsb
pop
cs
loope
pop
cmpsl
and
repz
decl
scas
cmp
mov
ss
xor
xor
cmp
int
pop
or
xor
sbb
insl
test
push
fisttpll
daa
pop
and
aad
in
xchg
xor
mov
call
in
sbb
dec
mov
mov
sbbb
sbbl
addb
xchg
mov
xchg
jns
pop
sarb
arpl
sbb
dec
mov
xlat
mov
xchg
jl
dec
adc
fst
into
aad
lahf
into
insl
cli
shrb
sub
push
sti
sub
mov
test
pushf
rorb
mov
je
test
fistpll
lds
stos
dec
inc
bnd
test
or
cmp
jmp
imulb
sub
pop
aam
shll
rcll
add
aaa
push
cmc
jge
sbb
test
adc
push
mov
add
aad
dec
sbb
jl
xor
and
loopne
add
and
add
lahf
jns
and
push
adc
add
outsb
sarb
mov
jp
lahf
mov
pop
pop
clc
movsl
roll
orl
cmpl
or
imul
jle
repz
push
dec
and
lds
mov
sbb
pop
lods
movsl
out
mov
xchg
push
mov
xchg
sarl
push
add
decl
jae
add
enter
inc
lcall
and
loopne
loope
test
mov
inc
mov
mov
pop
jb
in
outsl
shll
inc
enter
xchg
inc
lret
lods
ljmp
mov
sbb
mov
jns
jno
pop
jge
inc
xorl
cmp
cmp
mov
daa
into
repnz
mov
adc
mov
inc
shlb
sub
add
xor
mov
inc
popf
mov
out
cs
adc
push
test
jg
repnz
and
das
pop
push
movsl
ljmp
add
incb
pxor
push
dec
lret
pop
popa
mov
andnps
pop
jne
icebp
push
jbe
das
cli
cwtl
push
dec
xor
sub
les
push
icebp
aam
lds
mov
inc
stc
push
out
rcl
dec
dec
xchg
xchg
fcoml
outsb
shrb
es
and
push
arpl
data16
sbb
rep
or
dec
add
and
lret
push
mov
jb
xchg
jecxz
dec
lods
cmc
mov
roll
push
outsl
inc
imul
mov
cltd
loope
lods
push
push
push
js
popf
mov
dec
mov
mov
popf
loop
in
pop
xchg
loopew
fistpll
mov
push
movsb
cmp
pop
out
add
outsl
xor
sub
ret
int
shr
jg
adc
mov
lds
fistl
dec
xchg
add
inc
repnz
ss
test
rcrb
jp
gs
add
leave
pushfw
loopne
xor
adc
fildll
pop
sarl
mov
pop
pop
sub
jb
pop
cmp
mov
test
xorb
loopne
mov
mov
je
in
jo
out
add
jae
stos
xlat
divl
enter
shr
mov
lock
maskmovq
negl
les
sub
inc
js
xchg
mov
out
adcb
push
and
pop
psllq
fisttpl
cmp
push
arpl
adc
movb
scas
insb
xchg
mov
mov
js
or
cmpsl
sbb
in
and
jns
daa
fists
inc
in
jns
push
negl
and
pop
xorl
sahf
addl
int3
rorl
outsb
js
adc
push
mov
into
into
adc
movsl
dec
jnp
and
jmp
inc
and
and
fwait
xor
imul
orl
mov
in
push
jmp
add
test
and
test
mov
add
sub
xchg
lods
dec
fwait
xchg
push
iret
inc
cmp
add
sub
adc
xor
push
dec
xorb
sbb
or
push
ss
cmp
mov
mov
push
call
push
mov
push
mov
inc
cs
dec
rorl
test
cmpsl
pop
sbb
rcrb
rcrb
in
pop
out
jle
aaa
adc
orl
mov
outsb
jmp
rcrb
mov
cli
add
inc
xchg
cld
push
pop
in
and
mov
jg
jecxz
xor
bound
sub
ret
mov
and
add
ljmp
mov
dec
xchg
clc
sti
jle
jge
mov
daa
pop
mov
push
mov
outsl
and
lcall
roll
imul
and
call
push
push
arpl
dec
cs
mov
sbb
or
push
push
xchg
push
sub
rcrl
les
jmp
pop
cli
sbb
cwtl
mov
orl
lahf
ror
pushf
dec
push
sub
adc
mov
fnstcw
xor
mov
arpl
push
dec
xchg
mov
or
cmp
outsb
sbb
pop
mov
pop
jecxz
idivl
mov
fildl
stos
aaa
scas
xchg
and
aad
sbb
jmp
ror
aad
pop
push
sbb
cmp
inc
mov
popa
cli
test
es
aas
sub
dec
and
inc
dec
enter
add
jbe
shll
decb
cli
loopne
pop
mov
test
fsubrs
enter
mov
iret
test
out
cmp
les
cs
or
es
lods
roll
push
leave
faddl
out
mov
jbe
cmp
jnp
xchg
mov
push
add
mov
nop
push
mov
sbb
mov
fiadds
pop
cltd
in
sbb
inc
in
dec
testb
data16
mov
xchg
inc
jb
ljmp
aas
adc
popf
and
dec
movsb
cli
testl
sub
cmc
mov
test
scas
dec
add
dec
cld
jo
flds
pop
or
sbb
test
jnp
fsub
jmp
or
pop
push
xchg
out
push
xchg
lret
les
mov
xor
push
add
push
repz
hlt
lcall
mov
add
arpl
xchg
mov
inc
sbb
aas
fcomps
xor
rorb
dec
roll
xchg
stc
in
inc
mov
xchg
sbb
sub
out
add
sbb
in
test
stos
mov
bound
push
dec
push
xchg
sbb
jle
pushf
movsb
or
cmp
dec
lods
inc
fists
rclb
fisttpl
in
cwtl
and
lahf
jcxz
hlt
adcl
and
jb
outsl
sti
inc
pop
pop
or
pop
xor
fnsave
clc
jp
insb
aad
pop
jle
or
xchg
xor
pop
dec
leave
mov
sbb
xchg
mov
cli
dec
stos
insl
adc
mov
stc
dec
inc
fwait
jae
ret
adc
cs
pop
inc
mov
dec
icebp
sbb
inc
fmull
in
or
mov
jmp
xor
aaa
adc
jp
mov
and
cmpsb
sub
dec
loope
test
sar
dec
mov
cmp
or
jl
sbb
in
sbb
sub
sti
push
adc
mov
jns
imul
push
jge
aas
add
adc
cmp
and
iret
out
insl
sbb
dec
out
push
cltd
sub
mov
sbb
mov
cmp
jne
lea
fadd
inc
or
mov
xchg
mov
mov
jbe
fidivl
lods
add
dec
jmp
call
xor
je
ret
push
lock
or
dec
mov
cmp
adc
jb
xchg
lahf
imul
scas
popf
in
mov
scas
mov
mov
adc
inc
loope
mov
mov
mov
sbb
movups
xor
cmp
cld
pop
stc
inc
mov
sub
inc
mov
adc
aaa
inc
dec
jo
mov
cmc
test
xchg
sbb
pop
iret
shll
inc
scas
xor
xor
xchg
enter
pop
in
addr16
adc
ss
xor
jmp
mov
or
adc
ret
dec
aaa
stos
fcmovnbe
dec
adc
mov
push
arpl
sbb
jne
shl
jl
js
jle
sbb
xor
mov
sarl
xchg
rolb
in
push
push
adc
sbb
jmp
sbb
cwtl
adc
mov
popf
inc
cwtl
cmp
test
popa
jo
jb
popf
andb
out
push
leave
in
pop
dec
js
sub
add
pop
data16
shr
jge
in
or
push
in
pop
sub
lret
pop
repz
pop
shll
mov
int3
push
and
lcall
mov
push
mov
and
pop
sbb
sub
in
ljmp
mov
sbb
aaa
and
adc
dec
jp
cmp
jmp
mov
rclb
in
bound
xor
dec
pusha
or
push
lods
mov
repnz
xor
popf
call
dec
mov
hlt
in
or
mov
dec
lret
mov
mov
ret
shl
cmp
arpl
setle
call
or
dec
lods
loope
and
jmp
jae
pop
or
pop
lahf
sub
sbb
scas
gs
add
fsubl
outsl
loop
jmp
jge
outsl
dec
mov
pushf
inc
cld
push
out
cmpsl
mov
cmc
negb
sub
fdiv
cmp
pop
js
into
shlb
in
jmp
xor
push
inc
into
fs
mov
add
add
in
xchg
adc
lahf
mov
add
add
pop
xchg
loop
ja
sbb
out
or
xor
rorl
dec
sub
mov
mov
adc
xchg
pushf
xor
ss
fdivr
cwtl
push
pop
mov
fildll
imul
inc
int3
std
outsl
and
jb
mov
mov
dec
cmp
sti
arpl
std
jnp
sti
push
mov
xchg
scas
jns
cmc
lret
cmp
into
aaa
mov
mov
sub
cltd
aam
addb
stc
andb
cmp
adc
in
js
int3
outsl
imul
push
lret
outsb
cwtl
scas
in
imul
add
gs
shll
dec
test
daa
pop
mov
aaa
dec
push
add
jecxz
dec
sub
clc
push
adc
dec
in
ss
ds
fs
jno
ficomps
jne
xor
xlat
xor
or
inc
mov
cmpsl
emms
mov
xlat
pop
iret
sub
shll
jecxz
sar
jb
rcrb
dec
sbb
clc
sbb
mov
outsl
inc
push
fwait
dec
popa
cmp
fs
out
mov
add
add
and
pushf
movsl
mov
ja
test
jg
test
cs
mov
pop
popf
andb
xor
and
and
loopne
adc
in
cmp
or
fs
insl
cwtl
lds
fiaddl
adc
mov
andb
jp
push
js
jbe
insl
and
xchg
sub
cmp
cmpsl
jae,pn
sub
mov
dec
rcrb
out
xor
mov
jb
pop
mov
in
movsl
addb
mov
test
or
xor
inc
pushf
dec
jp
lcall
movsb
xor
sarl
mov
xor
jl
fdivrp
mov
int3
jg
jecxz
push
mov
jle
iret
mov
ret
rcll
jge
pop
mov
sub
ror
aaa
hlt
inc
movsl
mov
sahf
dec
adc
decl
fucomip
jecxz
inc
sub
cmpl
xor
jno
mov
int3
and
xchg
std
aaa
nop
movsb
and
xchg
push
mov
test
or
nop
sub
adc
and
jnp
incb
mov
xchg
dec
lods
cmpsl
push
into
mov
insb
xor
sub
stos
arpl
mov
mov
push
sbb
clc
mov
int
sbb
pop
mov
repnz
in
sbb
sbbb
ret
inc
fsubrs
push
cs
push
popl
sbb
lock
fs
movsb
xor
push
iret
fistps
nop
fwait
lret
jmp
pusha
fsubl
call
fisubl
testl
add
dec
xchg
stos
lret
daa
insb
mov
or
sub
hlt
lods
popa
xor
js
popf
rcrl
dec
sahf
sub
in
nop
dec
jnp
push
cmp
push
push
jo
add
or
fcomps
sub
outsl
out
lods
fiaddl
lahf
out
sbb
lods
mov
fdivrs
mov
enter
add
adc
cmp
test
shrb
sub
sbb
pusha
fidivl
add
into
jecxz
std
fs
mov
imul
pushf
loop
xchg
and
sub
in
inc
pop
popf
enter
out
adc
ret
inc
iret
lods
push
xor
jle
sub
xchg
pop
ljmp
dec
insb
pop
hlt
mov
rorl
jbe
pop
push
xchg
dec
cmp
imul
and
push
mov
out
dec
mov
adc
push
or
xchg
cmpl
mov
sbb
inc
icebp
ja
cmp
jp
rorb
aaa
imul
or
lea
jg
mov
mov
jmp
xor
push
cmc
adc
out
dec
fists
and
jl
cmp
sub
push
sub
and
inc
ret
and
fst
push
or
jecxz
adc
stos
jmp
jecxz
push
out
fstpt
mov
and
sbb
sub
std
sub
or
hlt
mov
test
insl
stc
mov
xchg
orb
stc
xchg
std
xor
sti
fidivrs
aas
pop
lret
inc
or
add
sti
xchg
xor
popa
in
js
and
ret
xor
sub
aad
in
xor
xchg
call
dec
fcmovb
aad
sahf
mov
and
jb
xor
pop
mov
push
mov
jo
jne
and
sbb
push
lret
xor
shr
ss
pop
fisttpll
inc
jge
and
jl
ret
xchg
bound
rclb
and
ffree
pop
pop
jb
mov
jmp
sbb
subb
lret
dec
xor
fst
aam
push
cmp
jmp
arpl
mov
daa
faddp
pushf
push
and
inc
xchg
cld
inc
nop
xchg
sti
push
jge
jo
jns
pop
adc
repz
pop
jg
int
lahf
shlb
xchg
xor
dec
dec
mov
mov
je
cs
add
push
pop
clc
mov
aam
out
mov
xchg
int3
mov
xlat
push
push
loope
loope
pop
fnstsw
inc
rcrl
je
lods
ljmp
mov
xor
movsb
push
addb
pushf
cmp
fs
push
fildl
cmpsl
inc
int3
xchg
imul
jg
lds
adc
testl
fcomps
xor
add
les
xchg
in
cmp
js
xchg
mov
roll
mov
fnstenv
sbb
in
xor
push
inc
lods
add
or
mov
mov
dec
shl
test
sub
sahf
pop
jg
aas
jge
xor
dec
add
inc
data16
adc
xchg
sarl
xlat
mov
pushf
push
out
cwtl
xor
stos
mov
cmpb
outsl
push
scas
lds
std
nop
xor
cmp
js
xchg
dec
cmp
sbb
shrb
mov
push
fs
stos
or
push
jg
jmp
mov
iret
negl
rol
sub
jle
mov
cmp
fadd
mov
xor
add
fbld
call
aaa
scas
leave
push
insl
sbbb
push
dec
mov
push
fwait
bound
scas
mov
js
testb
sub
adc
mov
pop
fcoms
adc
mov
int
inc
stos
and
dec
add
xor
mov
mov
jecxz
cltd
mov
in
int3
test
stc
int3
pop
push
and
add
hlt
int
mov
ds
sar
sub
ja
mov
jle
add
or
movsb
dec
jae
movsb
stos
inc
add
pop
push
xlat
in
sahf
neg
sub
sub
push
sti
or
shll
scas
sti
adc
jbe
lock
pop
lea
sbb
sub
push
enter
and
cli
sub
mov
popa
cld
jno
jmp
mov
and
mov
daa
cmpsl
or
mull
or
sub
mov
jo
in
xchg
dec
xchg
test
sub
lcall
xlat
push
jae
pop
mov
dec
loopne
rorl
and
xchg
xlat
mov
nop
or
lods
sbb
loopne
pop
push
push
daa
pop
imul
dec
sub
daa
divb
and
rorl
aaa
xchg
mov
sbb
outsb
inc
mov
ljmp
cltd
in
mov
jg
cmp
push
and
add
cs
xlat
jl
or
repz
jbe
pop
push
ds
ja
jo
sar
lock
cmp
dec
loope
adc
xchg
adc
arpl
ret
fldenv
popf
call
mov
jno
jbe
mov
mov
in
sbb
iret
hlt
fmuls
insb
mov
insb
das
fidivrl
cltd
mov
inc
jp
sbb
lahf
dec
jl
push
xor
scas
mov
mov
jp
lret
cmp
xor
ret
mov
add
lahf
pop
cwtl
xchg
pop
add
fs
xchg
in
mov
mov
cmp
jno
pop
add
dec
mov
outsl
rcrl
add
push
push
iret
in
test
mov
aas
mov
xchg
pop
inc
mov
lcall
sbb
lahf
scas
divb
inc
mov
pop
mov
shrl
lea
cmpl
sub
aad
pop
xchg
sbb
fwait
xchg
sbb
ret
imul
push
daa
mov
mov
test
cmc
arpl
lock
test
xchg
xorl
jbe
js
inc
cli
sub
test
outsl
popf
repnz
add
shl
lea
std
mov
mov
pop
fdivl
adc
jae
idivl
push
dec
faddl
rcrl
int3
sub
nop
rclb
ljmp
cmp
cmp
sbb
adc
push
cltd
jne
pop
mov
ret
fbstp
shr
pop
inc
sub
mov
mov
int
loopne
addl
lret
fs
push
jno
adc
cmp
data16
cmpsl
add
push
sub
rcrb
push
dec
cmp
lcall
das
mov
inc
sbb
test
dec
ret
pop
add
pop
mov
imul
pop
xor
ja
push
mov
lods
icebp
push
mov
sarb
out
cwtl
mov
mov
jnp
dec
sub
jge
cwtl
xchg
loope
nop
dec
push
adc
mov
jle
js
shll
in
ffreep
xchg
testb
mov
bound
jnp
sub
add
shr
test
ljmp
pop
inc
sub
test
inc
stos
push
jmp
rcrl
jne
mov
mulb
sbb
mov
xor
or
aas
or
sti
mov
add
xor
iret
out
inc
dec
jg
fwait
mov
int3
push
cmp
dec
add
js
in
sub
pop
push
mov
scas
dec
fisubl
mov
cmpsl
push
aad
xchg
cmp
jo
fwait
jae
in
xor
jmp
jmp
adc
ror
inc
lret
adc
or
pop
int3
daa
jl
mov
iret
data16
lods
jns
inc
adc
cli
xor
inc
sub
or
fistpl
and
mov
xchg
inc
inc
adc
jmp
ss
xchg
add
mov
in
add
mov
pop
cmp
lret
dec
push
xchg
into
jge
shr
mov
movsb
mov
out
scas
loopne
sbb
rclb
jnp
gs
sbb
sbb
loope
mov
xor
mov
leave
push
pop
adc
lcall
imul
sbb
xchg
stos
test
mov
es
mov
imul
adc
sub
mov
inc
pop
enter
mov
pop
cli
dec
rcrl
dec
add
push
jle
lahf
cmp
ret
bswap
push
scas
das
test
test
inc
insl
or
add
or
aaa
xchg
jg
jne
dec
inc
sub
xchg
out
pop
mov
mov
or
pop
sarb
setno
xor
push
test
mov
xchg
xchg
orl
jmp
loope
pop
mov
icebp
add
mov
imul
xchg
cmp
test
push
lcall
lret
fnstcw
aas
mov
nop
jb
xor
movsb
adc
jne
mov
pop
rcll
mov
jmp
mov
sub
outsb
cmp
mov
dec
loop
rcrb
loope
cmpsl
and
sbb
sbb
in
push
jle
dec
fisubrs
gs
xchg
ret
dec
push
push
and
mov
loopne
loopne
xor
add
pop
jl
xlat
inc
mov
push
jle
cs
push
jmp
iret
cmc
cmp
insb
ret
mov
sbb
sub
movsl
cld
inc
push
push
mov
inc
inc
nop
outsb
dec
cwtl
mov
sti
jae
mov
aam
or
sub
or
fs
adc
jo
in
test
fwait
hlt
repz
jg
and
lret
mov
mov
pop
pop
scas
mov
shll
je
xor
add
adc
movsl
pop
test
testl
xor
scas
sti
inc
add
lea
imul
push
pop
lahf
adc
or
gs
or
in
xor
jecxz
mov
cmp
sub
enter
lahf
incb
add
out
int
in
jns
sahf
jecxz
jmp
add
hlt
bound
shlb
cmpsl
rorb
add
cwtl
xchg
lods
aam
push
or
sbb
jne
insb
pushf
lock
mov
mov
xor
cmp
push
sbb
stc
jnp
fstpt
out
mov
sub
mov
push
or
or
adc
insb
sahf
jno
pop
add
fldt
mov
mov
sbb
movsb
inc
jns
es
rclb
lock
push
mov
and
shlb
sub
pop
ret
fbld
cmp
sti
dec
jno
in
push
pop
dec
int
inc
jle
daa
or
pop
lret
repnz
je
ljmp
aad
xor
add
lret
hlt
cmp
xor
jecxz
js
dec
out
push
decl
add
repnz
in
jg
sbb
sbbl
jnp
push
or
lcall
xchg
jecxz
sub
popa
sbb
gs
cmp
mov
outsb
rolb
leave
cmp
push
rclb
sbb
adc
xor
ret
js
sbb
ret
stos
lahf
jbe
into
mov
xor
insb
sarb
je
nop
es
or
and
xchg
aad
cmp
inc
cmp
scas
insb
cwtl
in
mov
or
aad
mov
fidivrl
sub
mov
mov
xchg
xchg
adc
out
mov
cmpsb
loope
mov
insl
or
add
cmp
jmp
mov
lahf
jl
sub
int3
xor
mov
inc
add
dec
mov
or
mov
int3
lods
nop
jecxz
dec
lods
adc
jl
outsb
loope
sub
xchg
stc
mov
outsb
sbb
or
ret
in
xor
jns
mov
cmpb
add
shrl
lods
or
addb
sub
fildl
ljmp
add
xor
sbb
and
sbb
pop
jmp
in
fadds
dec
pushf
inc
or
lods
push
insb
movsl
dec
aam
loop
jmp
xchg
jb
enter
jg
mov
cltd
adc
inc
out
pop
pop
loopne
inc
mov
sub
fnsave
inc
xchg
call
dec
xchg
hlt
es
lods
hlt
pop
aaa
adc
test
test
popf
cmc
add
cld
cltd
in
push
add
inc
pusha
in
js
stos
push
mov
cmp
pusha
mov
jg
or
loop
xchg
cli
push
pop
jge
push
mov
ret
nop
es
sbb
pop
pusha
aas
cmp
cmp
jns
push
dec
testl
mov
dec
sbb
insb
repnz
push
sahf
cmp
je
negl
pop
xor
push
inc
add
je
mov
mov
outsl
inc
cmpsl
push
lret
xlat
cmp
push
lret
mov
fadds
loope
ds
push
hlt
jno
test
loope
or
adc
sahf
inc
popa
repnz
les
pop
sti
out
gs
out
lock
sbb
out
mov
sbb
cmp
pop
jne
jo
call
push
push
cmp
add
rclb
cli
loopne
lret
fs
outsb
and
jg
sub
pushf
cmp
jle
jb
mov
negl
stos
push
enter
jne
aaa
negb
cli
bound
insb
insl
or
lret
leave
lcall
fcompl
stos
or
xchg
cmp
ret
and
push
pop
xchg
mov
aas
jne
add
xchg
mov
rolb
les
rorl
sub
cltd
mov
mov
mov
cmp
mov
mov
xchg
mov
pop
pop
repnz
add
je
mov
stos
jne
sbb
pop
adc
add
iret
fstp
inc
pop
sbb
mov
xchg
es
pop
shlb
mov
test
clc
loope
outsb
fldt
inc
inc
pop
adc
js
subb
mov
push
jp
xchg
jae
jns
add
sbb
jb
xchg
lods
cmc
loop
rcrl
xchg
aad
push
mov
dec
pop
dec
test
inc
roll
inc
ja
and
push
dec
xor
push
das
xchg
mov
sub
adc
hlt
int
add
test
out
into
sti
fisubs
shrb
lret
imul
or
sub
notb
inc
inc
ret
or
incl
test
add
je
int3
adc
cmp
fistpll
xchg
les
push
pushf
in
xchg
lcall
sbb
lds
or
mov
aam
pop
into
jb
nop
and
jne
in
loopne
jecxz
or
push
dec
movl
or
cltd
add
add
add
sbbb
lock
mov
les
aam
jo
int
mov
inc
and
xchg
stc
hlt
mov
or
scas
cld
xlat
icebp
adc
fwait
jne
xchg
pushf
jo
es
push
fs
xor
xor
push
mov
div
and
ret
pop
mov
jge
addl
add
mov
fsubr
adc
sbb
mov
in
int
jmp
into
or
ret
xchg
nop
adc
push
data16
sub
cmp
gs
mov
cmpsl
xlat
jno
dec
ja
pusha
sbb
stc
inc
jnp
test
rcrl
inc
cld
dec
xchg
lahf
insl
xchg
jecxz
daa
outsb
test
xor
int
jo
lods
mov
out
aad
out
and
cmc
mov
arpl
movsb
fwait
push
mov
dec
cld
sbb
je
jae
jecxz
pop
push
xlat
andl
repnz
clc
pop
es
repnz
addr16
sub
mov
sbb
jae
sbb
jmp
jbe
cltd
mov
orb
mov
fbld
pop
fstpl
fs
ret
jge
add
add
cmp
push
pop
xchg
jns
aad
lds
push
xlat
mov
mov
push
loopne
sbb
rclb
aam
imul
sub
stos
stc
adc
mull
popf
sub
int3
jle
mov
mov
js
stos
push
sbb
js
or
rclb
rclb
mov
ja
jb
sbb
shlb
mov
cli
aaa
mov
jecxz
inc
sub
and
call
sbb
pop
and
cmp
inc
and
adc
clc
push
enter
gs
jl
add
das
fwait
imul
sarl
mov
mull
popf
pushf
xor
ljmp
push
sbb
popf
inc
jnp
adc
cmp
cmp
xchg
rolb
ret
mov
out
lea
inc
push
xor
dec
push
sub
jl
enter
cmpsb
nop
popa
cmp
sti
sbb
adcl
into
je
ljmp
fmuls
lret
or
lret
popa
fs
mov
pop
icebp
sub
mov
push
jecxz
aas
sub
stc
repnz
jne
test
in
icebp
jmp
cli
adc
push
or
fwait
cmpsb
xchg
in
mov
inc
sub
sub
sbb
clc
dec
pop
mov
jb
or
cmp
stc
out
mov
mov
pop
xor
push
xchg
add
testl
adc
incb
sti
xchg
hlt
lock
mov
lds
xchg
lds
push
inc
mov
call
cmp
and
add
cmp
repz
loop
icebp
inc
orb
mov
dec
test
imul
cli
sub
test
jbe
out
push
daa
adc
cmp
inc
pop
enter
mov
shl
insb
in
into
fsts
repz
scas
sbb
xor
sahf
or
call
inc
add
add
jecxz
sub
sub
mov
mov
test
loopne
pop
aad
notb
cmp
pi2fw
in
mov
sbb
orb
and
inc
lcall
and
cmp
test
mov
je
xchg
in
pop
mov
inc
bound
int
and
jb
xchg
ss
lods
sarb
ss
pop
sarb
xchg
pop
cmp
and
orl
push
bnd
lahf
push
pop
scas
or
push
mov
and
or
test
pop
dec
xchg
jae
test
push
hlt
sub
pop
mov
iret
outsl
cli
int3
dec
mov
push
push
push
shrl
jecxz
mov
push
xchg
bound
hlt
mov
or
int
mov
test
or
or
push
outsb
mov
sbb
pop
loop
arpl
jg
outsl
and
mov
mov
pop
pop
mov
pop
lock
xchg
xor
adc
ljmp
aad
negb
inc
cld
std
popa
adc
out
cmpsb
or
loop
mov
jns
fists
lds
cmc
mov
pop
mov
enter
dec
sar
add
in
dec
shll
stc
dec
add
and
inc
or
push
mov
cmc
push
insl
or
mov
dec
fdivrl
cmpsl
es
jge
xchg
bound
rorb
fiadds
mov
cmpsb
xchg
stos
pop
call
sub
test
dec
dec
clc
lock
in
popl
sbb
jl
cmp
sbb
xlat
jmp
rorb
in
cmpsl
add
xchg
out
mov
sbb
pop
lahf
xchg
icebp
jecxz
sbb
pop
aas
sub
ret
aam
mov
cmp
and
out
ljmp
mov
xor
in
xor
fucom
or
fcmovnu
push
xchg
fwait
jb
shll
fmuls
jns
sbb
jnp
jno
mov
dec
out
call
mov
push
jo
jb
xchg
mov
xor
dec
repz
insl
fnstsw
cmpsl
xor
mov
mov
dec
jp
insl
jbe
push
cmp
push
pop
and
cwtl
outsb
icebp
dec
sub
enter
pusha
dec
sub
add
adc
xor
imul
cmp
or
cmpps
mov
jnp
or
or
pop
add
shlb
lds
mov
fildl
imul
stc
call
sahf
jno
mov
jecxz
fwait
cmpsl
jmp
jne
cmp
aad
and
out
mov
fiadds
mov
inc
addr16
push
mov
ja
push
sub
inc
or
sbb
and
and
gs
aas
lahf
ret
sahf
lock
repnz
jae
sahf
in
sbb
sbb
inc
cmp
push
jnp
jns
je
sahf
out
xchg
sti
xchg
mov
mov
adc
aad
in
dec
mov
bound
and
cmc
repz
cmp
pushf
rcrl
out
inc
iret
addr16
lock
xor
mov
mov
shrl
lods
scas
and
popf
cmpsb
xchg
xor
adc
mov
incb
add
repz
pop
nop
pop
call
das
std
insl
dec
xchg
insb
inc
xor
ret
sbb
cmp
dec
repnz
hlt
xchg
loop
loopne
or
iret
inc
xor
add
popf
jo
sbb
xchg
inc
mov
stc
mov
lret
pop
fwait
lods
mov
dec
and
lcall
jne
jns
lock
pop
into
pop
cld
addr16
mov
mov
lods
lds
xor
mov
dec
rcl
call
cmpsl
and
aas
int
add
decb
or
add
notb
lock
je
pop
xchg
xchg
jbe
push
xchg
outsl
dec
in
ja
sub
inc
dec
inc
pop
and
and
adc
adc
adc
cmp
fistpl
push
push
rcl
mov
push
push
add
xor
mov
aad
std
int
sub
lods
mov
mov
fyl2x
mov
lret
cld
xchg
test
repz
lods
xchg
lcall
or
sbb
xchg
dec
sbb
sbb
xchg
gs
or
and
cmc
mov
mulb
adc
out
andl
xor
add
sub
lahf
ret
dec
jns
jmp
daa
sub
push
dec
sub
sbb
fsubl
inc
xlat
jns
movsb
into
inc
jnp
cmp
dec
pop
dec
push
add
jmp
mov
or
test
pushf
mov
fwait
jg
sbb
xchg
jge
mov
xchg
sbb
rcll
mov
mov
test
fidivrl
in
mov
xor
xor
add
mov
pop
in
dec
popf
jno
sti
jno
ss
xchg
pop
jb
aad
push
cli
mov
movsb
icebp
mov
mov
jp
loopne
test
xlat
jl
push
fwait
leave
popa
lcall
xchg
sub
imul
stos
fdiv
inc
cld
push
push
sahf
lock
push
stc
mov
jmp
imul
and
dec
aas
or
xor
adc
mov
insb
xor
push
xchg
push
inc
rcrb
push
dec
mov
adc
stos
rcll
fwait
mov
lock
dec
ffreep
adc
lock
or
cmp
ror
pop
dec
gs
push
sub
pop
ds
mov
jns
dec
mov
test
jecxz
add
fnstsw
sti
add
mov
jo
jp
pop
iret
pop
pop
dec
test
and
popf
ret
rclb
rolb
pop
rcr
mov
jo
sub
repz
imul
xchg
and
pop
popf
sbb
adc
adc
xor
stos
pusha
xor
in
aad
mov
repnz
or
pop
and
mov
rorl
jno
outsl
mov
jo
xchg
adc
pop
leave
fld
or
rclb
xchg
inc
int
sahf
daa
fimull
decl
xchg
push
xor
es
das
cmp
dec
jp
sbb
fwait
scas
xor
andl
das
orb
jne
popf
inc
mov
div
and
and
fistpl
into
jo
enter
jp
xchg
mov
xor
or
push
pop
mov
decl
loopne
in
fcomps
nop
int3
lea
mov
sbb
js
rorb
popa
jecxz
pop
aaa
pop
inc
int
xchg
repz
cmpsb
pop
sbb
insl
nop
cld
outsb
mov
lahf
scas
dec
lods
mov
lods
dec
inc
dec
jnp
jne
fdivs
mov
inc
fs
mov
pop
and
sub
aaa
push
mov
inc
jae
mov
call
rcr
jp
aas
or
or
sbb
adc
ds
cmc
daa
xor
imul
insb
push
cmp
negb
fbld
leave
icebp
fsts
xchg
xchg
shl
jbe
xchg
adc
js
mov
lds
in
push
cmpsb
fsubrp
mov
in
mov
sti
sub
inc
lock
add
mov
lret
inc
and
dec
mov
lcall
sbb
in
xchg
cmp
push
cmc
test
clc
or
in
outsb
ret
shll
out
jl
dec
inc
les
dec
dec
push
mov
ljmp
sbb
movsw
mov
mov
pop
xchg
shll
jge
mov
pop
pop
test
push
push
mov
cmp
les
jae
fstps
in
push
xchg
jne
nop
lss
xor
sub
push
fsubs
pop
movsl
pop
cmp
adc
xor
jno
ss
sbbb
leave
mov
int3
shrb
jbe
iret
xchg
jecxz
ja
movsb
nop
fsubr
popa
rcr
fbstp
fdivrs
scas
lock
jl
inc
sbb
dec
in
xchg
pop
jmp
aam
outsb
dec
jae
or
insl
xlat
pop
jle
test
push
cmp
rclb
neg
test
shlb
add
mov
test
cld
pushf
push
aam
rcl
cli
outsb
mov
add
pop
jne
mov
or
adc
lcall
loope
insb
xlat
fnstenv
lret
pop
ret
lock
push
negb
adc
jl
clc
stc
cmp
lahf
shlb
fnstsw
fbstp
loop
fistps
inc
jno
stc
fldl
jg
pop
aaa
in
dec
orl
xor
insb
or
xor
fimull
loop
test
in
xor
fimull
and
sub
test
inc
dec
dec
int
jmp
xchg
in
stc
jl
xchg
inc
in
movsb
iret
mov
aad
xor
stos
movsb
push
jg
fbstp
sbb
mov
repnz
mov
adc
loope
add
aam
mov
pop
adc
lds
movsl
addr16
push
test
pop
cmp
sbbb
cltd
jp
pop
mov
xchg
icebp
aad
mov
or
add
insl
out
adc
push
fiadds
push
inc
shl
xor
rol
ficompl
jle
into
fwait
adc
pop
cmpsl
sbb
cld
jg
fsubrp
cmpsl
test
mov
jp
mov
add
pop
scas
add
lock
fdivrl
push
inc
pop
cmc
mov
cwtl
sbb
jne
fsubs
scas
insl
push
xchg
pop
jno
sbb
cmp
nop
jae
mov
or
sbb
movsl
mov
sub
sbb
cmp
push
xchg
imul
jae
rcrl
fwait
xchg
add
test
xor
or
dec
dec
xchg
sbb
mov
adc
aas
xor
xchg
lods
cmp
in
or
sti
push
sbbb
cmpsl
repz
push
dec
int
adc
pop
arpl
mov
mov
insb
jno
jle
scas
xchg
in
mov
rcrl
movsb
sbb
dec
dec
jl
jl
jecxz
mov
repz
dec
stos
mov
and
mov
mov
xchg
insl
pusha
nop
sti
adc
xchg
mov
leave
jb
scas
mov
jg
stos
xchg
add
mov
sub
lds
int
push
mov
cmp
in
outsb
xchg
sub
inc
mov
idiv
addr16
pushf
out
lds
shlb
test
and
push
pop
jle
inc
mov
push
sub
pop
jo
mov
push
xchg
repnz
dec
stos
inc
xor
pop
cmc
jecxz
jp
pusha
movl
mov
lret
dec
and
fsubrs
les
stc
or
dec
jnp
insl
sub
pop
jle
sub
pop
sarl
ret
cmp
les
sbb
into
es
add
jg
xor
movsl
orb
xchg
xchg
dec
pop
cli
inc
je
sbb
test
fisttpll
mov
outsl
ja
jecxz
ror
outsl
jecxz
repnz
stos
mov
rolb
xchg
mov
xor
mov
out
or
lret
xor
mov
mov
adc
mov
mov
xchg
in
sbb
shl
and
aam
lret
push
repz
push
sarb
pop
cmpsl
push
ja
or
jbe
shrl
mov
add
inc
gs
xor
jp
fdiv
movsb
test
cmp
and
fsubr
test
push
dec
xor
push
pusha
inc
mov
adc
mov
pop
int3
xchg
mov
push
pop
movsb
xchg
enter
xor
jbe
dec
dec
mov
negl
daa
stc
test
fsubl
ret
int
cltd
xor
xchg
add
xchg
jbe
imul
xchg
pop
insb
addr16
xchg
mov
mov
popa
out
pop
dec
mov
fistpl
or
fs
test
out
fstl
loopne
and
mov
pop
push
inc
loope
push
lret
mov
push
push
dec
cmp
cs
pushf
cmp
dec
daa
sbbl
aam
adc
or
fildll
ja
mov
mov
jnp
mov
push
sbb
scas
mov
xor
repz
int3
fadds
outsl
add
outsl
andl
sbb
aad
or
push
lret
xor
lods
cmpsb
lods
add
jp
or
mov
cmp
mov
and
enter
out
lds
pushf
les
cmc
lea
mov
mov
lahf
xchg
push
fdivp
xor
mov
adc
in
push
scas
jge
dec
stc
adc
and
adc
mov
jnp
sub
loope
inc
nop
data16
sbb
xor
xor
mov
fadd
xchg
and
shl
pop
sbb
push
scas
in
xlat
test
sbb
mov
test
push
cmp
pop
bound
xor
push
test
or
test
je
mov
xchg
mov
pop
inc
jmp
pop
stc
sbb
leave
sub
pop
shlb
test
dec
jp
orb
loopne
lcall
stos
popf
lock
hlt
out
mov
hlt
loopne
cmp
pop
outsl
pop
pop
test
aad
mov
adc
inc
dec
out
jg
push
and
jns
psadbw
lcall
lret
pop
ds
jo
xlat
jnp
and
or
out
mov
push
call
push
cmp
xor
test
dec
fdivp
sub
and
xchg
stos
push
sub
jae
sbb
cwtl
inc
mov
mov
jo
scas
fsts
xor
add
xchg
pop
mov
ret
daa
test
mov
mov
dec
scas
push
or
mov
dec
adcb
out
push
cmpsl
pop
jae
inc
xchg
popa
sub
adc
in
pop
xor
jne
dec
test
pop
add
stos
add
fs
out
call
inc
dec
jb
push
mov
adc
pop
fistl
sbbl
jo
cltd
sbb
add
popa
add
mov
cmp
sub
movsl
out
and
into
push
xchg
xorl
mov
daa
daa
cmp
xor
sub
fiadds
push
and
sub
or
imul
cli
and
jno
jg
daa
dec
or
rorl
fidivrs
ret
sbb
xchg
sbb
xchg
int3
dec
scas
and
xor
and
add
add
or
cmc
loope
mov
add
add
and
in
adc
ja
mov
mov
jns
sti
mov
adc
addr16
pop
inc
popf
sbb
mov
out
in
add
adc
jo
mov
push
cli
jbe
sbb
sub
out
jp
jno
dec
xchg
xchg
jns
add
lods
or
pop
bound
pop
jno
push
iret
pop
adc
sbb
sub
mov
and
xor
pop
andl
stos
jge
cltd
and
xchg
imul
aaa
pop
nop
inc
push
dec
test
dec
adc
lock
mov
mov
push
mov
add
outsl
mov
mov
jl
daa
and
dec
push
jecxz
jnp
sub
cmpl
mov
push
push
sti
lods
push
sub
jg
cltd
cld
or
jp
int3
add
and
ja
fildl
xchg
dec
out
mov
jbe
sub
pop
jecxz
xchg
pop
hlt
cwtl
dec
ss
adc
loopne
push
test
fstpl
jns
add
roll
adc
mov
push
mov
hlt
mov
xchg
sub
in
cs
mov
mov
adc
movsb
jg
addr16
cwtl
or
out
idivb
push
dec
insb
pop
faddl
jg
inc
sub
sbb
out
nop
fistps
lret
dec
repnz
or
push
sbb
repz
lea
mov
adc
inc
add
adc
in
jle
gs
insl
ljmp
mov
fisttps
fs
push
nop
pop
bnd
mov
mov
xor
ficoml
mov
fimuls
xlat
and
callw
sahf
arpl
out
mov
xchg
push
cmp
xchg
push
lock
push
pop
jns
push
xchg
mov
or
leave
xor
pop
imul
push
or
enter
push
dec
push
pop
lret
inc
sbb
fisubl
xor
push
add
lock
es
cltd
and
outsb
cld
cltd
int3
inc
movsb
jmp
dec
inc
imul
test
adc
or
sbb
jp
xor
sbb
stos
sub
in
pop
sbb
jns
daa
pop
and
in
lock
jle
fimuls
push
sbb
jnp
push
fistl
cmpl
cmp
mov
jne
nop
mov
add
data16
lods
xchg
mov
in
or
adc
xor
clc
ds
insl
sahf
jecxz
into
and
xor
faddl
fwait
xor
addr16
in
push
lea
cltd
mov
lds
sub
popa
ficoml
loope
scas
pop
out
and
dec
sub
sub
ds
in
lds
mov
dec
and
hlt
or
enter
hlt
pop
or
xlat
ljmp
fidivl
cmp
and
push
repnz
push
push
call
fs
subb
add
lret
cmp
and
mov
inc
mov
sahf
add
jae
les
cmp
arpl
jb
lods
cli
aas
fldl
pop
inc
outsb
mov
fistps
add
lock
jae
test
rorb
xchg
inc
or
inc
push
jp
out
enter
sahf
mov
xchg
cli
jae
dec
fs
jo
fsubl
push
test
pop
scas
dec
aaa
xor
imul
add
jecxz
fdivs
jmp
arpl
jo
mov
mov
mov
enter
inc
inc
mov
or
pop
ja
mov
jmp
push
sub
xorl
inc
push
cmp
sbb
mov
xor
roll
jb
cmp
inc
cld
repnz
in
jp
mov
decl
dec
push
shr
or
jle
loop,pn
pop
adc
mov
pop
clc
sahf
or
imul
inc
sarb
pop
adc
pusha
mov
sti
outsl
push
sub
les
jo,pt
cltd
daa
roll
rol
jl
dec
divl
xchg
out
and
and
push
aad
add
fnstenv
call
adc
push
jno
into
loop
mov
aaa
xlat
cs
push
mov
imull
add
fidivrs
icebp
push
push
into
insb
push
sbb
stos
mov
jns
jns
push
mov
jno
cmp
mov
mov
push
je
xor
out
lret
add
jp
clc
rcll
inc
mov
xchg
jbe
fsubrl
mov
adcb
out
pop
push
sub
mov
pushf
mov
mov
aad
sahf
push
call
inc
in
jl
fdivrl
pop
and
out
mov
pop
repnz
bound
cmp
test
cmpsl
xor
test
inc
mov
movsl
mov
fisubrl
decl
mov
and
inc
adc
sub
xrelease
xor
nop
pop
push
rcrl
call
hlt
push
aas
adc
jae
movsb
mov
aam
mov
cmpsb
mov
jb
mov
jge
jno
sbbl
xor
cli
jo
iret
pop
aas
nop
mov
ds
mov
jmp
int
push
clc
mov
popf
fcmovnu
test
sbb
jmp
test
pop
dec
loopne
sub
aam
ja
cmp
out
push
pop
popf
aad
add
pop
ja
xchg
xchg
pop
pop
out
cltd
cmp
mov
mov
div
cmp
mov
testl
mov
xchg
mov
jl
pop
sub
imul
dec
fsubrs
jg
xorb
imul
cmp
loopne
outsb
push
cld
inc
fcmovbe
les
dec
jnp
stos
out
jg
cltd
lods
xor
cmovns
jnp
testb
jne
inc
fdivr
fisttpll
adc
out
scas
int3
jo
jnp
data16
or
and
add
iret
sub
or
stos
xor
jns
sub
ds
xor
add
xorl
mov
push
pusha
add
pop
xchg
push
hlt
xor
and
lret
fucomip
ret
stos
pop
call
sub
mov
dec
xor
and
push
jle
add
inc
sti
mov
pushf
out
test
mov
stos
mov
mov
out
shl
push
fnstenv
fsts
shrl
and
mov
cmc
or
xor
xchg
lret
inc
cld
pop
pop
sar
cli
mov
stos
push
in
jmp
and
cs
jecxz
les
fsubrp
cmpsb
or
pop
fs
push
lret
jp
adc
push
jne
and
insl
pusha
ljmp
insb
xchg
sbb
and
jl
cli
out
out
fcomps
addr16
rcrl
out
sub
daa
adc
xor
mov
aaa
sbb
xchg
pop
mov
in
sub
scas
mov
out
aas
adc
cltd
lds
jns
jl
pop
daa
stos
rclb
ret
insb
and
ret
sbb
mov
jnp
in
lock
jle
xchg
pusha
aam
rcr
inc
add
xor
inc
inc
clc
xlat
xchg
test
cwtl
pop
sub
xlat
inc
mov
dec
fwait
jbe
aam
sbb
mov
mov
sub
jo
in
xchg
jne
out
into
int3
cmp
or
insl
lea
or
rolb
out
stos
sti
lods
sti
adc
jo
and
xchg
roll
movsb
int3
cld
dec
xlat
inc
sbb
and
outsb
es
add
outsl
mov
pop
mov
out
fisubs
mov
pop
addr16
jecxz
or
loop
xor
sbb
and
push
in
lds
xchg
xchg
iret
ljmp
inc
push
or
mov
or
push
in
sub
into
pop
outsl
inc
jle
out
leave
das
hlt
cmpsb
jo
enter
addr16
cmp
daa
jne
mov
pop
cld
imull
andb
xchg
in
mov
lcall
lds
push
pop
add
jb
addr16
bndstx
xchg
inc
popf
sbb
inc
inc
push
ret
cmp
jb
pop
mov
or
scas
bound
das
insl
rol
mov
xor
lea
xor
leave
inc
jb
push
test
jmp
or
pop
ds
push
adc
lds
sbb
mov
fnsave
xchg
int3
fsubrs
mov
enter
xlat
fs
pusha
jecxz
es
mov
leave
fstps
push
fsubl
enter
dec
cmp
push
out
adcb
fisubrs
jp
jecxz
push
ja
and
sbb
xchg
and
pop
test
fisubl
jno
leave
adc
adc
ret
lods
lcall
sbb
lea
fst
movsl
bswap
mov
outsb
add
sbb
mov
mov
loope
and
fimuls
jo
cmc
or
pusha
sbb
movsb
jmp
in
adc
mov
fwait
cmp
idivl
push
dec
inc
mov
jmp
lret
pop
jecxz
adc
js
cs
clc
in
adc
inc
outsb
enter
shll
pop
xchg
lock
adc
gs
jmp
sbb
xchg
jg
arpl
aas
add
jns
cmp
or
jl
roll
popa
std
jg
clc
push
xor
inc
xor
mov
pop
xchg
adc
add
mov
js
push
pushf
cli
movsl
or
dec
adc
xlat
aas
sahf
imul
sbb
in
cmc
fnstenv
aam
daa
js
pusha
out
addl
mov
lods
jmp
std
dec
aam
cmpsl
out
jbe
inc
jno
test
mov
inc
pop
flds
jl
cld
lahf
call
mov
call
mov
stos
and
arpl
or
xor
jmp
sub
movsb
roll
dec
push
in
xchg
mov
dec
push
addr16
inc
call
mov
mov
and
xor
stos
xchg
cmp
push
mov
mov
aad
or
sub
push
mov
inc
sti
push
pushf
repz
dec
movsl
push
adc
lock
nop
inc
or
mov
push
jg
fists
jp
mov
xor
add
sub
std
test
and
adc
dec
clc
jnp
shrl
jp
int3
jo
in
stos
stos
pushl
iret
and
sahf
ljmp
mov
add
jge
cmp
adcb
mov
ret
adc
push
repnz
cmp
cltd
fadd
xchg
cli
arpl
xchg
fcmovne
mov
enter
fistl
ss
mov
and
aam
movsl
cld
xchg
divb
ds
pop
sbb
sbb
jge
addr16
repz
mov
xor
sub
data16
push
xchg
adc
in
mov
mov
orl
test
push
xor
cwtl
add
mov
pop
std
xor
rclb
test
test
stc
jp
js
sar
mov
mov
and
mov
rdmsr
iret
sbb
sub
daa
mov
pop
cmpsl
aad
js
xor
mov
int
cmc
cmp
sub
scas
add
clc
cmc
out
adc
das
lahf
sbb
shrb
ret
movsb
cmpsb
sub
push
add
les
add
lcall
lods
nop
xchg
aam
je
and
xchg
mov
fnstsw
leave
inc
call
xor
jp
add
inc
mov
in
repnz
sub
int
mov
inc
fadds
jl
lcall
sbb
test
xor
aas
fwait
lods
jl
mov
sbb
stos
adc
das
daa
and
add
imul
lds
popf
pusha
into
aas
mov
icebp
jbe
xor
data16
lods
pop
stos
dec
jl
sbb
xchg
and
push
int3
sbb
adc
and
aad
enter
xchg
and
mov
cli
push
lds
adc
mov
jp
inc
mulb
xor
push
repz
mov
add
sub
scas
nop
xchg
arpl
in
fcmovb
dec
outsb
fistl
test
aad
pop
sub
test
xor
mov
xlat
cmp
rcrb
mov
pushf
or
mov
add
dec
out
dec
inc
push
jge
aam
jbe
fcompl
js
adc
inc
lock
xchg
lods
ljmp
sahf
adc
jle
push
arpl
add
pop
mov
or
jecxz
enter
aas
mov
push
leave
fildll
pop
add
pop
stos
pop
fidivl
mov
mov
mov
enter
xchg
cmc
xor
flds
cmovle
lcall
ljmp
inc
testl
stc
les
bound
push
push
adc
cmp
push
jne
pop
adc
faddl
enter
shrl
sub
xchg
add
mov
ss
sbb
adc
stos
xor
sbb
push
in
inc
jo
out
das
or
fimuls
cmpsl
mov
mov
sub
daa
pop
std
insb
test
int
fs
cmpsb
bound
add
inc
mov
loope
lcall
push
xor
mov
aaa
or
daa
cli
stos
pushf
push
adc
lds
jmp
dec
adcl
gs
loope
adc
scas
ret
mov
inc
cmp
enter
jmp
cmp
xchg
mov
js
addl
mov
push
nop
adc
mov
in
lret
bound
push
xchg
lret
es
mov
jne
dec
push
bound
addr16
inc
sahf
out
sub
jmp
pop
mov
pop
inc
inc
pop
add
cmp
sbb
lods
test
mov
add
jo
int3
mov
push
popf
lock
inc
test
xor
mov
dec
and
xlat
in
mov
roll
jp
bound
mov
push
cmp
sub
add
push
mov
jns
int3
mov
std
aaa
jnp
sbb
mov
sbb
mov
ret
add
les
dec
jl
lret
mov
mov
push
adc
lahf
xchg
mov
lcall
into
fcoms
inc
push
xor
xchg
or
push
sub
fistpl
mov
mov
outsb
push
or
add
dec
cltd
jbe
xchg
out
jge
testb
clc
push
pop
ret
jns
adc
jnp
mov
xchg
test
inc
jbe
push
push
xor
adc
adc
lds
push
rolb
lock
movsl
cmc
lret
outsl
and
sub
pop
ret
and
fcom
or
push
jae
ja
test
lahf
popa
mov
ficoml
xchg
sub
lret
ror
data16
push
pop
arpl
or
loope
cmp
sub
cmp
fdivr
xchg
jo
xor
push
ret
sub
stc
jns
sub
in
sbb
stos
sbb
dec
push
sbb
lea
test
ficoml
and
pop
cmp
xchg
mov
xor
sbb
jge
imul
xchg
add
insb
add
cltd
jle
hlt
adc
jmp
pop
outsb
and
aam
pop
xchg
add
inc
sub
shll
imul
cli
xchg
leave
xchg
sub
pop
dec
mov
loop
stos
lcall
pop
inc
ret
or
adc
shll
bound
dec
and
xlat
scas
cmpsl
fs
into
xor
push
enter
in
int3
xchg
ljmp
int
stc
jge
mov
cmp
or
jb
nop
aaa
in
and
and
lret
push
int3
ss
sub
cmp
push
fs
lods
mov
sbb
addr16
cmc
hlt
in
inc
push
cmp
xor
fs
or
mov
dec
insb
xchg
dec
sub
outsl
imul
add
add
jae
dec
xorl
mov
adc
out
jno
lcall
std
outsl
sub
xor
mov
xchg
call
test
rorb
negb
xor
insl
pop
ficompl
into
cmp
push
testb
cmpl
lea
jge
sub
sbbl
rorl
jge
inc
jmp
addr16
repnz
cli
xor
adc
mov
pop
dec
popl
jns
cli
jle
cltd
fdivrs
or
orb
cmpsl
movsl
test
mov
jae
add
fsubrl
pop
adc
sub
bound
push
dec
ja
sub
in
pop
movsb
sub
fsubrl
lea
dec
jecxz
popa
push
daa
or
lret
cmc
lea
mov
out
add
push
add
or
pop
fldt
ret
outsl
jg
stc
out
inc
test
inc
xor
push
add
push
andb
inc
in
jnp
lock
jle
movsb
sub
mov
jnp
mov
call
xor
dec
rorb
xchg
cmc
mov
jge
scas
fiadds
in
sbb
outsl
test
and
pop
lds
mov
sub
mov
add
push
push
inc
leave
xchg
jmp
mov
mov
push
cmp
in
cmp
or
push
xchg
pop
push
mov
inc
out
push
adc
mov
loopne
test
sarb
and
push
ficomps
and
aas
mov
rorb
inc
lea
push
mov
insb
inc
shlb
lock
test
ret
xor
pushf
outsl
inc
call
movsl
clc
cmp
sub
dec
insb
dec
inc
push
ja
xchg
add
dec
out
adc
sub
jg
sbb
stc
sub
sarl
mov
lock
ja
xchg
xor
inc
in
mov
jle
pop
mov
repnz
push
es
nop
ret
mov
mov
mov
rorb
ret
mov
lahf
sbb
cmp
ret
dec
jge
fdivs
je
sub
dec
mov
ret
push
pusha
jno
scas
inc
adc
xor
push
leave
mov
das
and
imull
add
add
cwtl
lods
mov
push
movsb
mov
cmc
dec
and
call
icebp
cs
mov
fnstenv
pop
scas
int
cmpl
movsb
out
sub
or
jne
pop
sahf
andl
stc
outsb
and
cmp
sbb
mov
sbb
mov
fcomip
iret
in
pop
pop
or
sub
adc
adcl
in
cltd
das
testl
push
dec
gs
mov
imul
pcmpeqb
imul
sub
xchg
mov
adc
pop
inc
xor
sbb
push
iret
mov
jge
stos
mov
cld
outsb
stos
outsl
movsb
inc
mov
cwtl
outsl
xor
jno
and
inc
rcrb
dec
test
mov
mov
xor
addr16
cmpl
fwait
sub
mov
adc
sbb
cmp
test
and
test
or
xor
aam
mov
add
mov
dec
outsb
jnp
mov
idivb
dec
int3
jge
fwait
xchg
xchg
out
es
jns
repz
pop
vpsrlq
jmp
push
sti
push
mov
call
movsb
sub
xchg
jno
jl
add
aad
push
jb
or
aad
mov
jnp
push
loop
iret
inc
xchg
adc
in
xchg
int3
fcomps
rsqrtps
mov
adc
mov
or
jl
mov
lea
rclb
movsb
cmp
mov
call
xlat
sbb
nop
inc
or
sub
jge
insl
xor
aad
mov
stos
cmp
das
jbe
sub
imul
shll
nop
ss
enter
fmull
mov
mov
dec
outsb
push
mov
inc
xchg
pop
jecxz
ret
imul
cmp
xchg
mov
pop
inc
in
in
repz
stos
sub
ss
cli
lret
and
sub
cwtl
imul
mov
stc
mov
lods
adc
in
cs
test
cmp
aam
xor
cmp
inc
push
mov
in
pop
adc
jbe
jle
jns
jle
mov
cmp
cmp
ja
ds
loopne
fcmovu
adc
or
add
cmp
xchg
aad
adc
mov
add
popa
sub
mov
arpl
repz
nop
push
cmc
in
xorb
rol
adc
push
sti
mov
bound
jl
cmp
jmp
cmp
push
jne
outsl
insb
daa
or
inc
fdivs
mov
push
fdivl
cli
aad
sbb
fstpt
fidivrs
test
push
je
or
sti
mov
fstl
cmpsl
stc
and
dec
sub
icebp
cmpsb
pop
push
loope
data16
gs
outsl
fs
dec
cmp
sbb
loop
or
into
and
std
icebp
xor
dec
xchg
add
xlat
sarl
lcall
and
in
inc
dec
xor
jo
mov
mov
push
mov
cmp
lock
xchg
insl
ret
cltd
ret
inc
pop
xor
mov
arpl
sbb
mov
or
mov
in
shll
or
arpl
test
pop
mov
adc
xchg
ljmp
out
into
sbb
sti
lock
cli
fprem1
add
cwtl
and
jg
stc
inc
jecxz
xchg
in
cltd
fs
and
or
or
ds
sub
pop
xchg
mov
movsl
aas
addl
jbe
xabort
adc
cmp
lcall
icebp
jbe
lock
cmp
sub
mov
sbb
scas
inc
cld
jp
lock
rorb
subb
scas
mov
ja
daa
mov
xor
loopne
jl
lret
sub
outsb
xor
add
mov
add
add
add
adc
inc
lock
jmp
cmp
out
imul
imul
add
inc
subb
sub
fisttps
les
in
mov
adc
dec
rcl
xor
cld
jg
mov
jns
and
and
adc
cmc
mov
into
mov
bound
inc
push
loop
lcall
imul
mov
lret
jge
add
pop
xor
push
xchg
ret
xor
ja
cs
lods
dec
add
xchg
or
test
stos
xor
or
jmp
aas
and
mov
push
xchg
arpl
sahf
loop
adc
mov
add
mov
dec
call
and
push
sahf
inc
push
mov
shrl
mov
pop
mov
lods
add
sti
or
aad
bound
outsb
cmp
int3
cmpsb
call
loopne
push
fcoml
daa
xor
or
lret
fyl2x
dec
fidivrl
xlat
cltd
stc
incl
mov
pop
mov
cmp
adc
jb
ss
sbb
inc
add
aaa
add
clc
mov
lret
jecxz
repnz
in
outsl
mov
mov
nop
cmp
insb
movsl
in
test
jnp
loope
and
movl
int3
mov
cmp
xchg
aam
cwtl
jbe
pop
lcall
sbb
cltd
data16
das
dec
add
inc
jmp
ds
fidivs
ljmp
std
mov
cmp
jmp
imul
mov
scas
add
in
movb
fsubrl
orl
ds
inc
mov
xor
mov
out
inc
sbb
stos
mov
mov
inc
js
push
cmp
loope
in
out
mov
es
or
fisttpl
in
jo
xlat
mov
stos
sbb
fs
lods
mov
cmp
mov
call
lock
sbb
loope
xlat
xchg
jmp
fidivl
push
repz
jl
cmp
loope
cmp
mov
mov
insb
add
xchg
mov
test
out
inc
bound
add
mov
inc
mov
stc
or
or
pop
add
lahf
add
pop
mov
lock
inc
inc
adcb
call
outsb
fxch
out
jge
adc
mov
fldl
movsb
or
and
adcl
dec
loop
leave
mov
addr16
sub
les
iret
ja
mov
jnp
mov
scas
inc
iret
push
add
dec
adc
and
stos
mov
ret
dec
jns
out
out
lock
dec
jmp
fistpll
xor
hlt
out
fstl
rcrl
sbb
shll
sbb
int3
sbb
xor
fwait
aaa
movl
inc
lock
fs
mov
mov
pushf
pop
dec
jbe
push
adc
repnz
fstpt
push
sbb
jmp
push
pop
rcrl
mov
pop
jmp
dec
mov
mov
lret
add
insb
cwtl
fisttps
rcr
mov
adc
xchg
adc
pushf
pusha
and
daa
das
jecxz
out
fsubl
sub
cmp
push
push
or
adc
xchg
mov
xchg
icebp
test
mov
gs
xchg
and
jge
xchg
jb
test
mov
adc
jp
xchg
inc
lds
lea
scas
sbb
lret
jge
pop
addr16
add
fisubl
cmp
notl
jmp
outsl
and
cmpl
mov
cmp
andl
cltd
lcall
imul
sbbl
ds
pop
imul
inc
cltd
pop
dec
pop
push
aaa
sub
lods
add
sub
push
add
dec
aad
loopne
lret
shlb
lock
js
xchg
aas
loop
push
pop
imul
pop
jne
pop
or
subl
push
int3
into
pusha
lret
arpl
cmp
jmp
leave
or
test
push
jle
cld
cmp
faddl
ret
cmp
repz
sbb
in
popf
sahf
and
leave
mov
test
mov
xlat
xchg
xchg
pop
fidivrl
lock
sbb
push
inc
outsl
pop
test
and
jecxz
fidivrl
cli
jnp
push
arpl
jne
aad
fbstp
xor
lock
aas
dec
xor
mov
in
mov
inc
idivl
les
lods
idivl
and
leave
mov
mov
ret
loop
cli
daa
mulb
scas
mov
xchg
rcrb
int
mulb
bound
xor
repz
pop
add
in
repz
pop
sub
pop
inc
sub
insb
popf
dec
daa
push
or
ss
dec
dec
arpl
and
mov
sbb
insb
out
lcall
adc
adc
xor
pop
arpl
mov
mov
insl
mov
out
push
mov
sbb
xchg
cmp
adc
stc
fdivrl
iret
addr16
mov
mov
mov
mov
hlt
sbb
inc
or
xchg
push
mov
lods
inc
je
jo
imul
repnz
inc
cmp
dec
lahf
push
mov
mov
js
mov
outsb
sti
jl
jp
mov
in
add
test
add
jp
pop
test
jbe
bound
pop
cmp
imul
pop
pusha
mov
fmuls
hlt
mov
sub
or
or
pop
aas
and
je
push
dec
sub
mov
int3
xchg
inc
lret
das
popl
add
jnp,pn
pop
rolb
add
sbb
sbb
push
sub
sbb
jae
iret
addr16
push
pop
loope
push
faddp
adc
int
adc
call
mov
inc
or
cs
push
js
jb
mov
pop
add
rorl
sbb
pop
mov
lea
es
push
xchg
dec
adc
and
sub
std
mov
inc
mov
out
mov
xlat
jns
movsl
xor
cmp
rolb
mov
dec
and
sub
sarl
jmp
mov
push
sub
pop
inc
in
sub
push
out
ret
jnp
adc
dec
movsl
push
clc
enter
bnd
jge
jmp
fsubp
outsl
xchg
inc
or
sahf
mov
adc
lods
add
negl
cmp
enter
jns
xchg
inc
pop
inc
xor
add
incl
movsl
pop
ret
inc
or
pop
pop
jle
in
mov
dec
lcall
imul
pop
into
lcall
mov
fisubs
mov
in
aaa
jl
fstl
std
lods
ret
divb
cmpsl
adc
push
je
js
push
inc
jo
stc
xchg
push
std
lods
jns
pop
pop
mov
xchg
sti
pop
pop
dec
out
fwait
inc
inc
call
inc
or
pop
jl
pop
pop
fadds
xchg
xchg
push
fcomip
inc
ja
fists
sub
mov
ds
into
aaa
cmpsb
scas
xchg
dec
imul
pop
sub
mov
mov
and
out
mov
fldl
ja
mov
cmp
hlt
dec
or
lock
sbb
rcr
dec
fiadds
mov
clc
xchg
pop
pop
pop
and
sub
clc
ss
xchg
ret
enter
repnz
out
imul
sub
mov
dec
hlt
dec
aaa
loope
jl
test
xor
shrl
and
and
imul
jb
adc
sub
push
faddp
xor
stos
xor
je
dec
in
jl
lret
aas
in
mov
pop
fmull
push
mov
add
and
pop
imul
imul
rclb
and
jg
lahf
add
push
mov
xchg
mov
xchg
out
pushf
rcll
mov
and
iret
icebp
fistps
stos
sbb
sbb
sbbl
in
cld
jle
sub
idivl
cmp
cmpsb
lahf
and
cmp
pop
int
push
mov
scas
jbe
push
arpl
outsl
shrl
pusha
lcall
test
jns
out
and
inc
push
cmp
lret
cmp
and
mov
push
inc
mov
xchg
leave
sbb
cmpsb
sbb
inc
xchg
pop
loop
aaa
fstpt
loope
addr16
jno
aas
lock
cmp
jge
jg
push
push
jle
mov
or
xchg
xchg
stc
sub
cwtl
mov
mov
jnp
mov
sbb
push
mov
mov
nop
and
hlt
push
adc
mov
cmp
rolb
lret
rolb
pushf
jnp
cmp
jb
inc
repz
push
add
cmp
cltd
jecxz
call
dec
dec
fcomp
in
mov
mov
xchg
mov
icebp
dec
cmp
je
xchg
lret
and
addr16
pusha
jb
or
xchg
ficoml
jae
sbb
insl
sub
jecxz
jb
hlt
xchg
int3
mov
cli
and
push
sub
cld
jmp
test
hlt
in
xor
bound
or
cmpsl
mov
xchg
dec
shl
dec
or
sub
movsl
jo
sub
dec
dec
ljmp
xchg
arpl
cwtl
ret
scas
nop
pop
enter
les
popa
and
mov
cwtl
stc
cmp
stos
sbb
aaa
xchg
mov
adc
pop
pop
inc
xor
rorl
push
call
push
adc
sub
dec
push
pop
decl
add
insb
aas
xchg
push
pop
pop
sarb
bound
rcll
lcall
cmp
in
das
dec
stc
int
xor
and
sar
cmpsb
rclb
xor
lcall
mov
pop
and
sub
dec
fistps
out
ret
decb
addl
xor
and
inc
xlat
sbb
or
xor
pop
xor
and
jae
add
jo
shll
mov
mov
cmp
xchg
pop
jge
xchg
in
mov
sub
clc
in
stc
mov
leave
imul
fwait
pop
mov
out
dec
cmp
cmp
mov
mov
pop
push
scas
fisttpll
dec
jecxz
jp
mov
adc
mov
push
adc
pop
mov
inc
mov
int
cmpsb
in
dec
sbb
xor
and
pop
xchg
adc
adc
rorl
and
aas
pop
je
push
js
mov
negl
sahf
ret
fadds
mov
adcb
lret
sub
daa
cs
xchg
rcrl
pop
test
and
jbe
inc
sti
sbb
mov
and
imul
mov
mov
ja
test
mov
je
clc
xchg
ja
lock
jae
inc
cs
out
add
gs
sbb
fistpl
sti
scas
aam
xchg
frstor
fcmovbe
or
jno
inc
cmp
pop
adc
xchg
mov
mov
loopne
in
andl
jne
xlat
frstor
jmp
adc
mov
and
outsl
movsl
imul
jge
push
loop
ret
inc
dec
dec
mov
pop
scas
lret
pmullw
iret
push
nop
andl
xchg
testb
iret
rcll
lock
movl
or
mov
mov
add
cwtl
daa
adc
pop
cmp
pop
dec
inc
dec
and
push
pop
stos
mov
jo
mov
pop
cs
fisubl
jno
cmp
jmp
push
dec
mov
pop
mov
xor
dec
fadds
orb
popa
subl
inc
jbe
mov
sbb
or
popa
int
ja
aaa
in
push
jge
pop
bound
repnz
inc
incb
mov
shlb
xor
roll
and
into
inc
add
dec
xchg
adc
stc
lock
pop
jo
push
sarb
loopne
jmp
ret
pop
movsl
test
subb
imul
imul
int
popf
push
cltd
stos
jno
fcoml
popa
sub
insb
xor
push
cmp
maxps
mov
cmc
scas
dec
sub
das
lret
jbe
push
lods
iret
ja
mov
jle
rolb
adc
push
push
ljmp
iret
jae,pn
sub
dec
sbb
into
or
outsl
les
das
loopne
mov
sbb
xor
std
das
adc
sti
fs
popf
in
popa
aaa
xchg
ret
dec
or
ja
loope
pop
jns
pop
sbb
std
mov
inc
mov
loope
push
push
test
xor
pop
dec
and
lret
xor
add
xchg
and
and
push
or
out
rol
adc
or
cmp
mov
or
imul
aam
in
mov
or
or
xchg
adc
add
lretw
inc
xchg
sub
push
and
lcall
es
cmp
scas
cmp
pop
repz
aam
push
add
mov
adc
adc
mov
bound
test
xchg
xchg
xlat
mov
pop
lods
fsubrl
jp
aad
jb
cmpl
ljmp
adc
jns
jp
mov
imul
scas
xchg
inc
xchg
xchg
ss
lock
and
leave
mov
mov
divl
lods
cmp
adcb
test
dec
push
ss
gs
jl
out
inc
lahf
add
pop
xchg
sbb
sbb
push
imul
push
cmp
jo
mov
pop
mov
mov
pop
out
dec
pop
arpl
fcmovu
pop
sub
sub
ja
js
hlt
push
out
popf
xchg
repz
aad
int
subb
les
lahf
push
pop
mov
sets
int
subl
std
push
sub
out
addb
pop
decb
or
clc
mov
lds
xchg
jns
in
into
decb
push
cmp
roll
or
lea
dec
scas
inc
mov
ljmp
js
dec
clc
lea
sti
push
or
add
cmp
aas
repz
sbb
jle
sub
xor
sbb
inc
pop
cmpsb
or
jg
arpl
test
imul
mov
fimuls
xchg
mov
jne
push
xor
ljmp
xor
daa
add
jge
sub
pop
sub
andl
cmc
adc
pop
and
pop
in
divw
inc
cs
dec
cmp
imul
add
pop
push
repnz
daa
xchg
mov
aas
xorl
out
cmpsl
jmp
hlt
lret
and
daa
xchg
shl
imul
inc
inc
xchg
out
nop
mov
push
outsb
in
fmuls
mov
inc
sahf
repz
stc
scas
into
sbb
or
inc
stc
push
flds
lock
pop
leave
fldt
cs
mov
dec
pop
cmp
js
sub
shll
inc
cmpl
shl
lea
add
adc
inc
das
xchg
jle
scas
mov
lahf
dec
aas
mov
or
mov
rcr
clc
sub
mov
movb
xor
insl
sti
pushf
bound
inc
icebp
mov
pop
imul
test
jo
xchg
dec
int
push
xchg
cmp
mov
jle
xchg
mov
mov
aas
into
nop
mov
bound
cmp
xchg
imul
rcrl
dec
xor
jno
je
jle
out
les
ja
mov
addl
rorl
or
lcall
sahf
les
sub
sub
and
push
or
xor
xor
adc
pop
addr16
dec
je
testb
in
push
sti
dec
push
in
adc
xchg
xor
mov
cmpsb
imul
addr16
sub
inc
jmp
loope
jns
in
dec
cmp
imul
push
stos
lods
sarl
adc
sbb
ret
inc
push
sub
mov
xchg
adc
movsl
xor
add
xchg
into
into
jecxz
mov
lret
es
jne
pop
jno
stos
fsubr
push
sbb
aaa
mov
jne
rcll
xchg
pop
jne
xlat
cwtl
or
push
adc
pusha
jge
lds
jmp
sbb
call
rorl
inc
push
mov
stos
test
cltd
push
int3
add
xor
in
daa
repz
dec
sbb
push
or
sahf
hlt
mov
pushf
pop
dec
out
mov
fists
ret
rcrl
jl
ret
pop
into
mov
mov
shrb
push
sti
iret
and
ds
push
adc
jge
shrl
mov
adc
adc
sbb
cmp
lods
inc
icebp
cmpb
pop
dec
push
aas
lods
lahf
mov
sub
push
mov
xchg
mov
cmpsb
ret
sbb
lock
xchg
rcrb
mov
or
fcomp
dec
inc
push
into
xchg
addr16
fldcw
dec
rcr
fcmovbe
test
push
into
sub
xor
movsl
shr
jb
inc
cmc
pop
inc
int3
dec
or
repz
jbe
lcall
sbb
mov
add
repnz
dec
outsl
sbb
mov
fcoml
inc
mov
xchg
mov
pop
movsb
inc
addr16
ja
sub
xchg
insb
adcb
or
cmp
cmp
or
xor
mov
add
jmp
lea
xchg
icebp
subb
lret
xor
adc
cmp
adc
jnp
mov
into
cmpsb
fwait
ret
insb
cmp
cld
jmp
mov
jb
cmp
and
imul
fldenv
movsb
cmpsl
mov
es
xchg
dec
sbb
lock
icebp
sub
outsl
out
nop
jmp
mov
jge
xlat
pushf
or
stos
or
fwait
cmp
stos
lods
rclb
das
pushl
iret
dec
push
mov
ljmp
fidivrl
cli
fwait
jle
std
or
mov
incl
ja
cmpsb
mov
clc
pushf
or
test
mov
inc
xor
xchg
and
rorl
xlat
ja
jb
mov
and
pop
xor
push
sub
and
in
inc
lret
xchg
addr16
fisttpl
mov
adc
ja
stos
test
xchg
mov
stos
mov
adc
add
push
movsl
movsl
push
cld
adc
lock
cmp
mov
ljmp
or
test
rcll
sbb
inc
cs
in
inc
pop
pushf
std
add
rolb
mov
fwait
inc
clc
add
std
jb
addb
sub
push
xchg
adc
cmc
jne
rcll
andl
cmpsb
sbb
add
xor
mov
xchg
shll
sar
rorl
lret
loop
aas
xor
shll
in
push
push
or
mov
out
in
push
sbb
mov
push
or
pop
sarl
test
pop
mov
lods
sbb
add
xor
mov
push
fnstenv
filds
sub
lret
in
ret
add
dec
mov
and
nop
jnp
aaa
jne
pusha
xor
mov
test
movsl
pop
pop
pop
movups
xchg
mov
popa
or
sbb
pusha
and
cmp
sub
popf
adc
mov
insl
or
push
rorl
outsb
cmp
inc
test
sub
cmp
adc
add
das
or
push
fs
scas
xchg
fwait
loopne
sub
aaa
mov
imul
mov
cmp
out
test
leave
lods
mov
xor
sub
mov
sub
dec
repz
xor
mov
test
jae
imul
lcall
sbb
cmpb
push
pusha
repz
jle
push
sahf
hlt
and
addl
lods
scas
jns
mov
cwtl
inc
popa
sbb
les
fstl
fwait
mov
movsl
mov
fistpll
push
jo
push
mov
or
adc
std
add
mov
jo
rcrl
sti
int
xchg
ja
and
cld
mov
int3
pop
popa
cmp
lahf
out
or
jg
iret
lds
ret
add
jnp
jecxz
sbb
movsl
xchg
pop
pusha
push
imul
jge
testb
xchg
hlt
xchg
pushf
cmpsb
jb
in
popa
icebp
xor
mov
jl
shr
mov
dec
fcompl
jb
push
pop
jo
or
jecxz
cmpsb
pop
mov
std
xchg
mov
add
testb
and
inc
loopne
or
fdivp
and
inc
rolb
xorl
loopne
add
add
rolb
fisttpl
cld
sub
mov
pop
xchg
jns
push
sub
sarb
insl
sbb
or
shlb
mov
add
fwait
adc
call
mov
lock
adc
jmp
mov
outsb
inc
subl
ds
dec
add
adc
out
dec
nop
xor
repz
add
push
push
sbb
int
jne
out
sahf
and
inc
sahf
stos
adc
shlb
fwait
and
add
cmp
idivb
call
cmp
xchg
cmpsb
adc
dec
cwtl
mov
rcr
xor
pop
inc
js
adc
test
into
mov
mov
dec
js
push
mov
xor
jp
cmp
mov
jmp
addr16
inc
in
mov
imul
xchg
sahf
sbb
push
dec
or
and
inc
or
or
rorb
ret
cmp
mov
arpl
scas
test
out
dec
leave
xchg
shll
xchg
add
das
fistps
lds
mov
shrl
adc
sub
out
add
push
dec
inc
pop
popf
out
hlt
sub
sbbl
ja
add
adc
mov
mov
mov
pop
enter
test
aad
out
add
outsl
fildll
es
sub
cmpsb
out
sahf
stc
push
mov
mov
lock
jecxz
fcomip
nop
les
das
mov
mov
popa
push
in
pop
cmpsl
sub
xchg
in
ret
mov
js
insl
enter
stos
jl
lods
popa
inc
loopne,pt
xor
mov
loopne
push
pushf
jecxz
sbb
mov
addr16
xchg
or
sbb
dec
cmpl
push
in
push
popf
cwtl
push
movsl
adc
sti
cmp
dec
or
xor
pop
arpl
fmulp
aas
out
pop
push
pop
push
xchg
dec
adc
dec
scas
xor
sahf
sarl
in
inc
shrl
jno
fdivl
mov
in
pusha
adc
jns,pn
dec
iret
sbb
cmp
xor
jnp
in
dec
jae
pop
iret
lcall
leave
lea
mov
test
jp
inc
adc
xchg
mov
cmp
lock
push
mov
pop
and
int3
insb
jns
popf
ja
inc
mov
fcomp
not
add
mov
dec
inc
xor
sbbb
iret
dec
fdivrl
jns
aam
shl
mov
jg
adc
xchg
je
and
jle
lret
or
stos
aaa
bound
jmp
push
out
divl
rol
movsb
fldcw
imul
mov
loop
imul
test
ljmp
daa
scas
test
je
adc
mov
notl
mov
clc
les
mul
jae
mov
xchg
or
inc
adc
mov
inc
jns
inc
xlat
pop
shlb
fisubrl
xorb
loop
pop
jmp
into
cwtl
jnp
fwait
stos
adcb
sahf
lret
dec
cltd
or
mov
outsb
addr16
out
sbb
andb
das
pushl
dec
jnp
jle
fbstp
rcrl
pop
rcrb
lods
fidivl
xor
outsl
jo
cmp
filds
mov
push
mov
sbb
nop
cs
repz
pusha
pop
sbb
bound
dec
jecxz
daa
mov
or
sbb
push
inc
test
repz
popa
cmc
jbe
pop
out
fsub
jmp
es
jns
inc
xor
push
push
xor
mov
pop
fidivrl
xor
mov
jnp
mov
lea
rcrl
lahf
sub
sarl
lods
mov
cli
push
sarl
arpl
inc
sub
bound
pop
add
mov
or
xrelease
loop
dec
inc
loope
pop
mov
popa
and
cmp
in
aaa
aaa
loope
lea
loopne
lods
cmp
outsb
into
mov
arpl
xlat
cmpl
movsb
cwtl
sbb
xor
fidivrs
push
dec
inc
data16
mov
mov
xchg
aam
insl
stc
xchg
adc
pop
sub
arpl
fildl
sbb
mov
fsubl
cltd
xlat
ret
push
cmpl
rcr
lret
dec
lods
in
int3
test
push
mov
aad
and
inc
push
rorb
and
mov
sahf
cmp
pop
aas
je
mov
stos
jnp
jne
push
call
fnsave
adcl
push
and
and
lret
out
cmp
lock
dec
jge
push
fxch
leave
mov
popa
pop
add
xlat
adc
and
push
or
fs
sarb
xchg
shl
mov
call
pop
xchg
mov
xchg
lea
mov
push
dec
popa
push
dec
inc
sbb
loopne
push
adc
rcll
mov
incb
sub
jbe
xor
loopne
iret
das
test
push
pop
pop
xchg
push
mov
xor
push
in
jbe
nop
cmpsl
lcall
mov
mov
mov
dec
inc
and
pmulhw
fdivp
push
add
into
out
popfw
lock
inc
cmp
imul
dec
enter
subl
adc
imul
bound
outsl
adc
adc
xor
xor
jecxz
push
lahf
imul
mov
stc
fwait
mov
mov
mov
mov
sbb
mov
sub
rorb
outsb
dec
stos
xchg
inc
loope
test
pop
js
fstpl
test
push
iret
xor
push
xchg
jo
jg
dec
mov
sbb
je
int
sbb
cmc
shll
cmp
je
in
popf
clc
and
cli
xchg
mov
rcl
mov
subb
cld
lret
cwtl
sub
sub
add
test
imul
cmp
and
jecxz
jle
fwait
jns
xchg
lods
arpl
xchg
mov
xor
fdivs
push
sub
xchg
and
lahf
popa
sub
xchg
and
mov
mov
setp
cmc
std
call
dec
test
fwait
and
bound
or
dec
sbb
in
ja
icebp
xor
or
out
xchg
les
jmp
arpl
add
add
add
mov
lods
insl
cmp
lret
lret
or
xchg
mov
arpl
lock
push
shl
leave
out
adc
mov
or
mov
shll
jo
sbb
inc
mov
or
enter
and
jmp
sbb
jmp
or
push
add
add
inc
mov
and
dec
mov
push
mov
fisttpll
mov
pop
adc
sbb
outsl
loop
inc
in
clc
lds
and
pop
jecxz
or
loope
pop
adc
fsubrs
stc
in
jmp
jnp
jl
push
in
test
incb
pop
outsl
movsl
sub
mov
jl
push
jo
arpl
rolb
push
movsb
iret
ljmp
sbb
inc
and
mov
fmull
and
adc
dec
imul
nop
loopne
aad
mov
shl
dec
or
faddl
dec
fimuls
shr
out
and
pop
add
inc
xchg
xor
adc
sub
xor
insb
inc
in
jo
test
or
lods
popa
sbb
cli
leave
adc
mov
pop
sarl
mov
cmpl
adc
and
lds
in
xchg
rcrb
cs
cmp
pop
ret
ret
iret
scas
push
sbb
pop
inc
and
stos
rcll
xor
sbb
fisttps
mov
lahf
jl
shlb
std
repnz
mov
jb
jmp
in
jp
sbb
imul
std
xchg
lcall
test
mov
popa
and
scas
or
test
jl
mov
imul
lcall
jge
sub
fwait
loop
int3
and
pop
pop
adc
lds
lods
fnstcw
stos
xchg
pop
push
imul
in
aam
cmc
mov
gs
push
fcmove
mov
fsubp
dec
imul
out
in
or
add
fwait
enter
push
fisttps
xchg
cld
sbb
out
sbbl
pop
pop
popa
movsl
and
mov
xchg
imul
push
popf
xchg
in
pop
cmp
dec
push
das
mov
mov
mov
push
movq
cltd
push
mov
cmpsl
bound
add
mov
or
add
icebp
push
sub
rolb
or
mov
shlb
out
mov
outsb
xchg
cmp
inc
sub
nop
mov
popf
jmp
xchg
mov
mov
fsubrl
lods
mov
pop
sub
push
push
loopne
dec
cwtl
int3
fsubrp
dec
sarb
cs
mov
xor
push
xchg
fmul
mov
mov
dec
fldt
sub
jg
shll
shll
pop
or
and
mov
ja
sbb
test
fs
mov
pop
sub
ds
mov
mov
aas
inc
pop
int3
loop
fstp
add
inc
xchg
imul
jb
mov
iret
xor
cmpsl
jl
mov
ffreep
xor
mov
or
ja
sub
push
jge
popf
popf
sbb
dec
mov
jmp
inc
fwait
mov
inc
push
fisttpl
jno
pop
je
jne
jnp
inc
adc
jns
into
loopne
fwait
testl
arpl
mov
inc
movsb
sub
mov
je
jns
mov
dec
dec
pop
repz
mov
in
lahf
lret
add
jns
adc
fidivrs
dec
push
and
xchg
sub
out
pop
adc
data16
insl
rolb
push
sbb
vfmadd132ps
adc
movsl
paddw
sarb
jb
cmpsb
dec
stos
clc
ja
mov
or
cmpb
ljmp
inc
in
sub
pop
mov
dec
out
shrl
sbb
sti
push
or
cmpsb
mov
imul
pusha
test
mull
sbb
and
push
inc
xor
pushf
pop
cmp
jae
loop
jg
sbb
pop
pop
test
xor
lcall
adc
fiadds
sub
cmpsl
adc
sbb
sbb
aaa
mov
xchg
loop
xchg
lret
mov
sti
dec
ror
ret
or
xchg
test
nop
jo
sbb
clc
sub
xor
dec
jmp
push
adc
push
mov
hlt
inc
adc
jnp
push
hlt
stos
pop
lea
and
fwait
mov
ds
inc
roll
sbb
dec
push
mov
xor
add
xchg
addr16
test
shll
xor
mov
mov
hlt
add
push
insb
fisttpll
cmpsl
fstpl
mov
mov
mov
pop
xchg
mov
push
push
jp
iret
in
js
adc
ror
inc
add
es
nop
out
out
dec
out
lret
mov
push
mov
jne
shll
in
pop
aad
pop
push
lret
cmp
clc
mov
hlt
imul
add
pop
mov
loopne
cmp
cmp
cmpsb
jmp
mov
push
add
mov
ja
sarl
or
hlt
and
xor
push
popa
adc
mov
loopne
inc
nop
roll
and
mov
pop
jae
loop
ja
enter
xchg
daa
sub
test
in
adc
loope
es
jl
mov
mov
and
and
and
sub
mov
or
cmp
subb
sub
sbb
sub
jecxz
dec
std
pop
sbb
imul
rep
stos
mov
pop
ljmp
in
into
mov
ret
cmpsb
sub
mov
lods
gs
int3
mov
in
stos
mov
ret
dec
push
loope
fsubs
fdivs
mov
mov
ret
pusha
mov
sub
imul
push
mov
push
mov
mov
mov
into
movsl
mov
dec
icebp
inc
sti
dec
test
cltd
cmpsb
movsb
push
inc
daa
mov
xchg
xor
dec
inc
outsb
mov
xchg
adc
icebp
dec
pop
mov
or
and
call
mov
dec
cli
ss
sub
movsl
loopne
in
outsb
pop
inc
imul
sub
sarl
add
adc
repnz
add
xchg
jbe
outsl
and
inc
add
sbb
movsl
mov
mov
xchg
sti
mov
out
sbb
push
cmp
cmc
repz
xchg
bnd
push
stos
cld
pop
loope
add
mov
fistpl
adc
imul
jp
les
out
sbb
fcoms
stc
push
into
adc
dec
xlat
and
sbb
cmp
lret
mov
aaa
jne
test
enter
dec
pop
out
xor
insb
jb
xor
lahf
gs
cltd
stc
sub
outsb
inc
enter
popaw
add
pop
mov
pop
nop
lret
rol
lcall
call
int
andb
imul
test
sub
mov
xchg
xlat
mov
inc
pusha
popf
push
es
cmpsb
cmp
xor
mov
push
les
push
pop
lock
fs
pop
jbe
or
inc
cli
test
mov
jbe
pop
sub
mov
frstor
out
xchg
mov
or
mov
adc
jl
fimull
and
repz
mov
fs
pushf
notb
jge
fwait
sahf
mov
jp
pop
insb
jecxz
ja
jmp
test
icebp
and
lods
and
ds
mov
daa
cmpsl
lds
enter
popf
imul
icebp
or
and
sub
into
xchg
cmp
rolb
int3
mov
bound
test
mov
sub
xlat
push
sub
ret
ret
pop
sti
add
dec
lods
pop
mov
jns
mov
jp
loopne
jle
xor
lcall
in
fcmovnu
fadd
add
daa
aam
notb
and
push
mov
dec
mov
out
in
dec
pop
pop
mov
fsub
push
fucomip
dec
shrl
lret
xchg
dec
outsl
dec
andb
lcall
jge
outsb
pop
mov
push
and
add
cli
jb
lods
fwait
push
stos
lcall
add
xor
mov
mov
rolb
mov
mov
add
jecxz
inc
adc
aam
out
and
es
add
sub
push
out
out
jbe
mov
pop
inc
mov
arpl
jp
mov
mov
rcl
push
loope
mov
out
fbstp
cmpsl
adc
xor
xchg
mov
push
cltd
mov
mov
push
or
int3
incb
xor
cmp
dec
aas
cmp
enter
mov
in
xchg
inc
xchg
orl
mov
icebp
jb
rorb
cmpsl
add
inc
aam
arpl
jns
rcl
jnp
cmp
sub
fs
ret
adc
jne
icebp
xor
pop
mov
or
inc
add
imul
sbb
loope
dec
sbb
xlat
pop
scas
leave
je
nop
mov
in
cmp
lcall
inc
inc
or
push
pop
test
add
pushf
cmp
jp
mov
fdivrl
and
jmp
pop
jmp
fimull
sub
aad
mov
push
push
repnz
inc
daa
test
push
cli
iret
hlt
aam
sbb
add
outsl
aas
pop
lcall
push
jo
adc
ror
iret
insb
imul
mov
add
xchg
xchg
ret
lret
rclb
and
jecxz
push
xchg
sub
mov
mov
jae
jno
push
jp
rcl
push
jg
cwtl
inc
test
cmp
add
jge
mov
xchg
fsubr
cmp
outsl
fsts
das
and
mov
sub
mov
bound
popf
jmp
push
pop
mov
inc
fs
ret
aam
fimuls
push
cmp
add
xchg
sub
setbe
in
adc
mov
cmc
test
in
outsl
push
xchg
fiadds
inc
dec
mov
mov
push
jo
jbe
mov
jg
mov
mov
pop
incb
xor
dec
mov
adc
cmp
xchg
and
sbb
stc
and
pop
popa
lds
adc
and
xchg
iret
push
adc
rol
bound
cmp
mov
or
ret
xor
rcrb
mov
mov
movsl
mov
mov
sbb
cmp
sub
sub
js
push
xor
mov
mov
jns
cmc
rcl
mov
orb
nop
enter
scas
mov
ror
or
jl
dec
mov
daa
ficoms
shld
ljmp
int3
mov
push
sarb
outsl
imul
lret
push
fisubrs
inc
cmp
pop
inc
cmp
xor
sub
leave
add
adc
les
fwait
sub
ficompl
mov
jle
aaa
cmp
cwtl
cmp
cmp
mov
sbb
pop
cmp
outsl
loope
jecxz
paddsw
mov
mov
xchg
mov
or
insl
and
pop
mov
lahf
fcompl
popa
cli
adc
push
out
enter
sahf
add
mov
lahf
fs
mov
sbb
or
push
lcall
jnp
dec
inc
adc
divb
push
xchg
jns
repnz
imul
xchg
in
fmull
mov
inc
mov
push
sbb
sbb
jp
jno
rcll
scas
bound
mulb
rolb
pop
push
jle
pop
jbe
push
xchg
mov
xor
ljmp
jmp
repnz
test
scas
aas
cmp
es
daa
hlt
jnp
and
out
sbb
ljmp
sbb
xchg
and
into
sbbl
xor
orl
fsubl
sub
cmp
aad
cli
sahf
jl
out
ja
ret
mov
mov
out
scas
fsubr
inc
int3
pop
or
add
stos
lret
pop
or
das
test
js
fisubl
rcrb
in
push
iret
jo
je
dec
out
add
pop
mov
andb
push
flds
push
ret
clc
mov
cltd
dec
add
or
mov
push
adc
push
mov
add
push
and
pop
out
shrb
push
jns
test
cld
and
cmp
dec
add
pop
fsqrt
add
dec
push
add
push
cmpsl
mov
loopne
ss
das
in
mov
pop
cmc
divb
ss
sub
sub
fistpl
in
fsubl
mov
jbe
test
out
fsubp
jnp
or
xchg
inc
mov
jbe
negb
cmpsb
and
jp
or
ret
das
flds
cwtl
ja
jge
addr16
xor
fdivs
test
cmp
jg
enter
test
and
add
aam
mov
xchg
inc
pop
sub
mov
leave
leave
arpl
int
xchg
fldt
jmp
out
xor
pop
add
dec
mov
shll
mov
iret
adc
enter
pop
movsb
lock
mov
push
aaa
loopne
je
cmp
ljmp
scas
addb
push
jg
rcll
call
dec
pop
fdivp
sbb
popf
adc
movsl
push
adc
dec
and
mov
cmp
or
sbb
jg
jo
add
leave
aaa
hlt
sub
repz
jmp
mov
ja
sbb
and
fistps
adc
mov
addr16
int3
push
stos
lret
xchg
xlat
daa
pop
dec
out
mov
cmp
mov
mov
int3
fnstcw
outsb
cmpsl
xor
cmp
shl
mov
cmpsb
push
pop
sbb
repz
loope
add
mov
push
stos
mull
dec
cltd
es
iret
fnstsw
pop
imul
push
scas
movsl
mov
daa
sbb
push
jae
ret
push
push
enter
cltd
jo
xchg
pop
dec
test
insl
cmpsb
pop
inc
popf
jno
sub
xor
pop
jb
jae
push
lods
sub
aad
pop
push
or
lret
push
sahf
loopne
les
dec
mov
push
insl
mov
jmp
pop
movsb
push
cld
xchg
lcall
jge
inc
into
dec
or
ret
pushf
sub
imul
stc
xchg
dec
out
xchg
add
lcall
xchg
pop
sarl
pop
rcrl
call
movsb
fidivl
add
fbld
roll
shr
sbb
fisubrl
bound
or
ds
jnp
mov
les
inc
dec
mov
xor
inc
repnz
stos
shrl
and
push
rcrb
xlat
mov
sbb
mov
dec
pop
fidivl
dec
sub
sbb
enter
xor
btr
repnz
pop
cmp
ret
inc
push
daa
insl
mov
inc
popf
adc
and
pop
js
mov
das
add
xor
mov
xor
jno
iret
dec
push
jge
lds
xchg
jmp
jmp
xchg
push
pop
mov
jnp
mov
pop
pop
xor
push
adc
test
adc
movsb
mov
lret
sub
pop
fadds
pop
rcl
mov
or
push
xor
push
mov
repnz
dec
in
fnstenv
aad
jo
xchg
mov
push
and
pop
popa
dec
mov
cli
jbe
xchg
cmp
push
jne
ret
into
into
cli
mov
loop
cltd
ja
test
repnz
pop
jns
lahf
or
popa
mov
repnz
int3
mov
dec
jb
cmp
pop
cmp
push
lock
mov
sub
sarl
push
mov
ret
adc
outsb
rcr
gs
jae
mov
in
test
mov
imull
ffree
push
push
dec
mov
mov
mov
adc
test
pop
pop
popf
rclb
shlb
inc
into
call
stos
movsb
sbb
ret
mov
sahf
cwtl
fisttps
mov
mov
xchg
repz
insb
insb
sti
mov
or
ljmp
mov
add
inc
and
push
pop
sbbl
or
or
push
pop
mov
mov
cli
loop
inc
mov
pushf
insl
mov
hlt
mov
xchg
jae
ljmp
jo
push
mov
mov
dec
inc
push
pop
xchg
xchg
push
lods
cmp
or
ja
or
mov
lret
inc
and
ss
cld
and
mov
add
adc
adc
test
mov
mov
fstpl
lods
push
mov
sub
test
mov
mov
or
sub
fdivrs
jle
pushl
adc
pop
add
cltd
sbb
sub
dec
sbb
or
jle
add
cmp
aas
cld
stos
inc
andb
push
or
data16
js
popf
aas
inc
cmpsb
sub
inc
rorl
jecxz
je
iret
add
and
jb
popf
pop
insb
xor
std
sbb
imul
add
push
roll
imul
lcall
or
mov
fld
cmp
loop
popa
pop
mov
fidivrs
jae
fstpl
das
pusha
gs
pusha
push
jbe
pushf
or
dec
sti
subl
mov
jnp
jb
sub
call
sub
pop
stc
rorb
pop
ljmp
movl
push
das
orb
icebp
repnz
push
enter
int
lret
push
cmp
fiadds
scas
loope
cmp
enter
pop
lods
scas
jo
push
loope
divb
fwait
xlat
mov
gs
and
pop
daa
xor
loope
pop
mov
aaa
cmp
dec
test
pop
testl
jo
mov
pop
out
jbe
push
fcompl
push
mov
fs
mov
stos
insb
popa
inc
xchg
fdivrl
es
adc
idivl
jmp
sub
icebp
andb
testl
jo
mov
out
jl
out
movsb
push
gs
cwtl
jecxz
ret
xlat
and
std
mov
xchg
pop
ljmp
cmp
xor
pop
dec
or
mov
dec
ljmp
pop
sub
cld
popa
adcl
aam
mov
sahf
dec
xlat
pop
inc
and
and
sbb
inc
stc
sbb
rolb
test
jns
mov
ds
fldcw
mov
andl
or
xchg
xor
nop
imul
aas
pop
add
icebp
mov
jbe
fdivrs
push
jg
jo
lcall
push
add
daa
dec
es
or
outsb
or
test
mov
cltd
test
hlt
lea
push
adc
dec
daa
mov
adc
popa
pushf
sub
push
mov
fistps
pop
inc
sbb
sahf
sarb
adc
sub
dec
movsl
cmp
xor
cltd
pop
jge
test
lock
movsb
ficoml
mov
and
xor
leave
fisttpl
push
push
fiaddl
cs
imul
jmp
pop
or
xchg
adc
les
jle
pop
dec
orb
shlb
inc
lret
stos
movsb
addb
pop
fidivrl
push
jb
push
in
sbb
les
outsl
pop
insb
dec
or
dec
loop
or
add
cmp
mov
in
push
mov
mov
lds
or
xchg
cmpb
arpl
dec
sti
and
push
jnp
stc
outsl
pop
jae
cmp
sti
jne
lock
stos
dec
jnp
mov
add
enter
je
in
add
dec
mov
jle
insl
mov
int3
fdivrl
shr
xchg
mov
inc
mov
pusha
and
or
xchg
sbb
fsubrs
scas
fisubrl
incl
xchg
ds
push
popa
mov
jmp
lods
ret
jmp
jmp
mov
adc
rclb
pushf
add
in
imul
adc
or
shlb
mov
mov
andb
ret
inc
sarl
pop
jmp
mov
xor
mov
xchg
bnd
mov
sbb
inc
push
sahf
push
addr16
and
mov
lret
sbb
or
mov
jl
xor
daa
fucomp
push
push
cli
xlat
cmpsb
xor
movsl
int3
fistps
pop
cmp
or
cmp
push
adc
adc
hlt
cld
cmp
adc
cmp
mov
aaa
movsl
mov
mov
pusha
mov
dec
lock
loope
push
fst
ret
cmp
add
xchg
and
mov
push
shl
sbb
dec
cmp
enter
push
and
mov
push
dec
sub
cltd
add
sub
inc
mov
lea
pop
adc
push
mov
cmpsl
fdivrs
loopne
insb
insl
mov
push
ret
mull
sbb
xchg
mov
inc
inc
test
cmpsl
movq
sarb
inc
pushf
idiv
scas
js
fistps
ljmp
cmp
jns
adc
pushl
pop
ss
shll
and
mov
test
in
inc
icebp
sub
add
xlat
cmp
push
in
icebp
inc
in
pop
ja
insb
adcb
mov
aas
jbe
cmp
push
inc
dec
test
dec
jnp
fsubrl
mov
ds
push
mov
push
shll
add
mov
das
gs
adc
cs
jge
xor
not
pop
jo
lcall
je
and
cwtl
insb
loope
jo
sub
pop
xor
cmpsl
int
push
outsl
cwtl
xor
lods
xchg
enter
mov
das
add
inc
stos
sub
xor
fisttpll
or
xor
push
popf
adc
fcompl
dec
xor
sbb
into
adc
jno
pushf
pop
xchg
cmp
call
pop
sub
cwtl
push
and
arpl
and
sub
push
fucomp
rcr
nop
scas
xor
sarl
dec
push
dec
push
shlb
loope
xchg
mov
out
jl
mov
sub
fstl
fsts
shlb
andb
movsb
jns
cmpsl
push
cwtl
repz
loopne,pt
sar
cs
jno
adc
test
mov
jmp
faddl
inc
addr16
jns
dec
sub
movsb
pop
add
xchg
mov
push
dec
cmp
pop
jecxz
jmp
test
std
and
in
das
jp
roll
cwtl
mov
sbb
jge
sbb
imul
xor
xor
add
add
xchg
es
jo
dec
or
int3
push
mov
add
in
mov
mov
iret
xchg
jge
dec
ljmp
xchg
mov
pop
cmp
cmp
outsb
dec
xchg
lock
dec
dec
mov
jl
cmc
cmpsb
adc
xchg
and
lea
dec
wbinvd
out
push
dec
dec
sub
add
pop
pop
fcomp
fisttpll
push
outsl
pop
sub
push
leave
adcb
add
and
jbe
push
test
mov
sti
sahf
pushf
mov
je
idivb
int3
test
dec
push
dec
std
scas
pop
testl
out
inc
lock
pop
repnz
pop
pop
mov
jb
dec
xchg
sbbb
nop
outsb
jge
mov
xchg
fbld
outsb
jge
jne
es
sti
mov
and
mov
push
pop
dec
cmp
das
pop
sub
lret
add
xor
jbe
cmpsb
and
lods
push
fbld
ds
jecxz
or
shrl
pop
jecxz
mov
lret
scas
rorl
decl
lcall
xchg
test
mov
mov
xlat
pop
jg
fs
jmp
add
fmul
push
testl
jp
mov
movsl
mov
push
test
or
insl
sub
jno
popf
repnz
adc
add
adc
repz
fwait
fs
jo
push
in
mov
std
movb
and
in
cmc
xor
add
and
movsl
cmp
mov
repnz
test
cmpsl
and
sub
mov
cld
mov
lea
dec
pop
mov
mov
mov
test
js
popa
inc
pop
aad
and
ret
mov
ret
mov
inc
ja
subb
mov
outsb
add
jg
cmpsb
in
in
push
scas
hlt
adc
movsl
gs
and
and
mov
leave
xlat
mov
outsl
test
sbb
mov
mov
movsb
mov
or
sbb
sahf
rcl
inc
cmpsl
das
pop
lods
sti
push
push
xor
je
adc
cwtl
scas
dec
fisttps
sahf
xchg
sub
push
sbb
out
sub
jg
int3
mov
mov
lret
mov
rorl
or
out
pop
loope
mov
pop
mov
cmp
jns
xchg
pop
scas
push
rcrb
mov
std
dec
push
or
and
outsl
xor
or
insl
sub
add
push
and
or
daa
add
jns
xor
std
mov
xor
inc
ja
mov
call
loop
nop
lcall
test
pop
fsubrl
lods
xor
loopne
push
lods
push
jbe
cs
fistl
sub
sahf
cmp
mov
adc
mov
xchg
dec
movsl
mov
int3
pop
mov
xlat
ret
in
mov
das
aad
aas
push
sbb
test
jbe
mov
lods
mov
mov
rorb
ds
cli
and
scas
scas
leave
nop
enter
aad
and
in
mov
ret
loopne
nop
inc
daa
fldl
jg
mov
popf
imulb
lret
cmp
pop
lock
adc
push
loopne
jne
arpl
pop
or
pop
cwtl
fwait
iret
fmuls
xchg
cmp
dec
adc
mov
cmp
ss
ds
pop
jle
jg
dec
pop
sahf
fsubr
xor
add
ds
ret
sbb
adc
mov
ljmp
les
outsb
pop
or
adc
pop
int3
or
leave
lret
repz
cwtl
cld
adc
or
xlat
scas
addr16
cmpb
xor
clc
adc
stc
xor
jb
inc
xor
dec
xchg
lods
cmp
into
push
ds
mov
aam
xor
fstp
add
xchg
jne
shrb
fidivl
push
out
xor
cmp
add
pop
mov
or
and
scas
out
mov
and
inc
fdiv
outsl
lcall
cmp
adc
lahf
push
js
out
cmp
cmp
das
sbb
and
pop
push
lds
push
add
mov
dec
add
scas
pusha
cmpl
scas
xor
iret
or
xorb
pop
mov
icebp
mov
push
ss
add
cmpsl
or
mov
inc
dec
jne
popl
xchg
add
sub
iret
jno
cmpsl
cs
cmp
aam
push
pop
push
aam
pop
or
sub
lds
jg
test
out
or
adc
mov
jl
mov
dec
xchg
pop
and
addb
or
enter
mov
loop
dec
test
mov
inc
pop
push
xchg
inc
sbb
sub
cmp
es
mov
and
cmpsb
pop
jnp
lods
dec
clc
fidivl
sbb
adcb
cmp
addr16
cmc
cmpsl
mov
aad
mov
mov
pop
xchg
ret
shrb
cmc
movsl
into
sahf
xor
jg
mov
push
lods
push
aad
imul
dec
mov
dec
or
pop
adc
sarb
mov
xor
sahf
jle
lock
pushfw
sbb
push
push
rolb
cwtl
dec
out
sub
mov
out
sbb
loopne
mov
adc
mov
jns
in
out
cwtl
aas
jno
jp
xor
fbld
ja
jp
pusha
fldcw
in
loope
mov
pushl
ss
xchg
dec
mov
jge
mov
mov
out
je
or
dec
das
inc
or
imul
mov
hlt
xchg
xor
sub
cld
xchg
sbb
xor
scas
mov
popa
imul
fwait
mov
push
xchg
fdivrs
and
fdivrl
mov
jne
sahf
cmp
lock
idivl
jae
add
mov
out
pop
sub
scas
outsl
cmp
loopne
popa
fistpl
movsb
push
xor
lock
sbbb
pop
dec
sbb
adc
jl
fnstcw
sbb
xor
in
fwait
xor
sahf
cmc
fdivrs
adc
movsb
fstl
cmp
cmpsl
dec
repnz
dec
imul
out
or
das
lahf
scas
lock
mov
rcrl
cmc
xor
push
int3
adc
mov
mov
sub
jle
sbb
jg
mov
lret
nop
cli
in
sbb
aam
insb
divb
jl
aaa
loop
mov
or
xchg
les
mov
lret
cs
aam
mov
mov
push
mov
decl
xor
inc
mov
jns
add
sbb
sbb
aam
pop
loop
cmp
and
xor
in
insl
jecxz
aaa
jne
jmp
out
fchs
decb
decb
inc
subl
mov
cmp
cld
sub
aam
cs
ja
inc
xchg
imul
mov
or
sahf
pushf
into
roll
dec
dec
and
mov
add
add
cmp
and
xor
push
mov
add
mov
repz
jp
sarb
je
dec
mov
outsl
pop
cmpxchg
imul
cmpl
jne
push
push
xchg
cmpsb
mov
sbb
iret
ret
fiadds
lock
fnstsw
pop
push
mov
mov
push
lock
je
push
mov
repnz
ja
movsl
in
shll
sbb
mov
insl
xchg
sbb
arpl
cltd
dec
mov
outsb
push
fsubp
int
sbb
sbb
test
movsl
out
pop
int
int3
shlb
adc
je
int3
fcoms
jbe
data16
jo
js
fsubrp
ret
movb
aas
pusha
insb
cmpsb
pop
mov
outsl
dec
jnp
data16
fmull
outsl
mov
loop
add
insb
cmp
test
clc
scas
mov
loope
add
je
out
call
aaa
rorb
sbb
sub
dec
pusha
out
add
inc
movsb
pushf
js
cmc
neg
sbb
sbb
ret
in
inc
cmpsb
movsb
sarb
inc
inc
jne
imul
lahf
jo
pop
movsl
cmp
lods
dec
mov
lret
stos
hlt
jp
clc
test
cmpsb
mov
mov
jae
pop
cli
xor
xchg
insl
add
insl
in
cmp
push
scas
flds
pop
gs
test
insl
xlat
adc
dec
sub
push
call
cmp
fs
lret
stos
insb
pop
push
outsl
cli
mov
fs
fldl
or
into
loopne
sbb
mov
push
add
iret
ds
push
insb
dec
in
or
sbb
lods
aam
bound
adc
ljmp
xor
aad
push
rcll
and
int3
scas
push
pop
jecxz
call
push
test
xor
pop
ror
ljmp
mulb
int3
test
in
pop
mov
lret
ja
push
nop
les
xor
neg
adcl
dec
out
xchg
cmp
sub
popf
or
sbb
cltd
ret
in
pop
sti
mov
mov
bnd
mov
or
jae
pushf
mov
mov
xor
and
js
sbbb
lcall
xchg
dec
sbb
ss
lods
invd
jns
cmc
inc
mov
sbbl
xor
test
sub
xor
sar
add
and
lea
dec
sub
lcall
mov
lea
sbb
mov
mov
push
cli
mov
adc
std
orb
loope
push
jmp
das
or
imul
mov
mov
cmc
adc
sbb
or
add
ret
mov
out
out
inc
rorb
pop
adc
jnp
push
and
inc
xchg
divb
loopne
cmp
mov
jl
sarl
push
xchg
out
xchg
and
test
popf
xor
pushf
or
jp
inc
pop
clc
cmpsl
add
clc
mov
inc
or
loopne
adc
ja
xor
int
jno
sar
sub
jl
xchg
lret
mov
jo
jne
jbe
adc
push
insb
sub
andl
imulb
mov
jb
sti
movsl
test
in
loope
push
xchg
or
or
inc
mull
fsubl
popa
les
adc
xchg
aam
in
subl
push
push
dec
mov
fstpl
add
test
dec
leave
movsb
ds
or
out
out
mov
jmp
mov
pop
fcmovbe
and
pop
lds
jns
mov
out
jecxz
std
inc
orb
out
xchg
xor
xchg
or
sbb
inc
clc
push
mov
mov
ret
or
in
add
sbb
dec
jne
fnstsw
insb
popa
daa
out
loopne
in
loop
aam
mov
cmp
es
std
xchg
mov
in
or
popa
push
daa
sub
or
mov
xor
jne
stos
fdivs
and
mov
sbb
push
sbb
or
test
das
cmp
sub
jecxz
pop
pop
mov
inc
adc
pop
aam
mov
lahf
sti
pop
jnp
out
adc
gs
dec
adc
mov
in
enter
add
cmp
xor
rcrl
add
add
push
scas
or
xchg
lahf
fcmovb
xor
cwtl
aas
mov
inc
mov
pop
dec
pop
xchg
push
inc
in
mov
daa
rorl
test
mov
cmp
mov
bound
fmull
sti
dec
adc
int3
xor
call
and
and
mov
push
pop
imul
xchg
scas
cmp
sbb
sub
jae
xor
jnp
or
adc
fdivl
pop
idivl
xlat
cmpsb
lea
ja
test
or
and
pop
mov
int3
xchg
cltd
mov
imul
test
cmp
fiadds
and
call
dec
pop
ret
mov
push
test
sbb
neg
jno
aam
xchg
lret
popf
shr
fsubs
push
adc
sub
sbb
lock
scas
test
divl
inc
jl
leave
cmpsb
dec
push
inc
int3
mov
int
jne
ljmp
dec
or
stos
jmp
imul
mov
xor
add
mov
mov
imul
loope
xor
push
enter
xor
push
cmp
jl
jmp
mov
aas
pop
je
je
mov
push
mov
test
insl
stos
insb
and
xchg
lea
or
lret
xchg
add
ror
out
mov
sti
cmpsb
int3
clc
pop
cmpsb
les
dec
shll
je
mov
outsb
inc
cmp
insl
jnp
push
das
inc
loopne
adc
aad
add
cmp
xlat
aam
push
sahf
xchg
shll
lds
mov
jmp
nop
imul
and
scas
lds
repnz
aaa
sarb
mov
pop
xorb
test
xchg
mov
les
daa
ficoms
mov
insl
mov
push
or
jo
add
mov
or
push
sbb
addr16
mov
rclb
je
outsb
xor
inc
pop
cltd
jecxz
cmp
mov
inc
je
cs
jmp
dec
adc
idivl
divb
and
push
adc
sbb
insl
mov
test
xor
sbb
shrb
std
push
mov
in
aas
js
cmp
popf
vmovaps
jns
mov
jle
mov
pop
pop
sub
je
cmc
xchg
sub
mov
lods
imul
xchg
or
and
popa
mov
and
pop
cli
ljmp
in
cmpsl
mov
aaa
adc
lods
les
add
cli
cmpsb
mov
jg
andb
inc
jns
add
ds
out
cld
xor
mov
jmp
ljmp
int3
and
pop
adcb
dec
adc
cltd
popf
mov
stos
mov
cmc
jle
and
popf
aam
or
test
fisttpll
pop
lret
pop
insl
ja
mov
sub
push
push
jno
sti
test
lret
pop
jecxz
aam
fdivrl
dec
fisttps
adc
pop
fnsave
stos
cmc
outsb
push
mov
sbb
jge
jb
jecxz
dec
mov
and
push
push
xchg
push
dec
lret
stos
testb
in
mov
out
jl
mov
sub
out
out
into
outsl
popa
mov
jnp
push
pop
adc
orb
or
dec
insl
icebp
fiadds
jge
mov
jge
daa
jns
xchg
addr16
aad
and
test
jg
ds
popf
out
push
iret
lock
dec
lds
add
push
sbb
int
mov
xlat
nop
jg
push
jge
lahf
rcrl
cmp
mov
dec
mov
xchg
aad
inc
cmpsl
ffree
push
adc
popf
xchg
inc
aas
fcomps
adc
ljmp
xchg
into
lds
pop
lds
ret
xchg
aam
into
and
clc
or
mov
test
pop
adc
sti
jo
pop
pop
test
mov
or
add
sbb
mov
push
out
int3
xchg
sbb
jns
xor
test
fs
sets
pop
push
lea
out
mov
stc
in
push
stc
stos
mov
in
sub
cmpsb
xor
rcll
mov
inc
imul
pop
pop
mov
loop
fadds
pushf
adc
je
scas
xchg
mov
pop
xchg
xor
jno
call
mov
jmp
mov
and
jnp
or
fcomp
icebp
fildll
lock
jbe
in
in
lcall
mov
roll
push
xchg
fdivrs
mov
adc
nop
enter
inc
mov
loopne
sub
mov
imul
mov
adcb
cmpsl
scas
test
div
rclb
mov
sub
outsb
xchg
in
push
sbb
jmp
mov
test
xor
nop
push
push
rcr
js
xchg
inc
pusha
sbb
push
adc
mov
push
arpl
add
daa
test
push
lcall
push
xchg
push
lods
jnp
push
inc
cmp
xor
stc
out
int3
inc
xchg
bound
es
mov
test
pop
xor
push
fs
enter
shr
sbb
inc
fdivrs
jnp
ds
test
and
mov
pop
fidivrs
push
aas
mov
sti
hlt
mov
cs
dec
jb
cltd
dec
add
push
adc
ret
mov
pop
jae
sbb
rcrb
cld
mov
xchg
repz
call
inc
add
stos
mov
data16
dec
daa
add
bound
mov
jno
xchg
bound
xchg
mov
inc
and
mov
xor
xchg
inc
xchg
mov
loopne
ss
or
mov
ret
cltd
push
cld
out
fwait
pushf
dec
call
cmc
jns
jnp
xor
fwait
sub
ds
es
jge
mov
lret
xchg
mov
sub
sub
sub
das
add
jg
arpl
imul
loope
sbb
or
xchg
sub
fcoms
mov
insl
iret
dec
mulb
iret
jp
push
add
ds
aad
jmp
cmpsl
int
jns
out
xchg
cs
inc
push
mov
test
add
push
andb
jnp
jnp
or
cmp
loop
push
add
fisubrl
pop
inc
mov
adc
push
fsubrs
push
inc
inc
gs
cmp
inc
imul
addb
lcall
jmp
push
in
sbbl
or
mov
aam
es
mov
loop
and
jb
fwait
aaa
mov
rcrb
push
add
movsl
stos
xor
push
dec
xchg
and
mov
mulb
add
in
roll
push
add
movsl
push
test
loopne
jecxz
and
jns
sbbl
sub
add
imulb
push
ljmp
pop
lods
sbb
loopne
in
pushf
xchg
sub
adc
das
adc
mov
into
xor
add
pop
or
xor
in
and
sub
push
stc
xor
dec
sub
pushl
lahf
inc
jnp
dec
jns
push
xchg
jge
out
test
sti
test
rcll
insl
insb
fistpll
xchg
or
cmp
push
das
mov
push
daa
mov
es
push
rcrb
ljmp
imul
cmpsb
inc
ficoml
or
in
ret
mov
or
dec
subb
test
lds
rorb
in
push
stc
jecxz
xor
sbb
pop
paddd
sbb
inc
mov
push
cltd
xchg
repnz
inc
fcmovne
adc
xbegin
sub
mov
xchg
and
pop
rcll
sub
pop
dec
cmp
mull
dec
dec
adc
and
sub
push
pop
call
pop
insl
sub
mul
lahf
push
pop
ja
or
push
push
ficoml
sbb
popf
std
sub
icebp
mov
mov
push
xchg
xor
or
push
fs
stos
sub
mov
imul
sbb
arpl
fs
cmp
xchg
mov
popa
xor
add
in
push
mov
inc
into
test
stos
pop
cmc
cld
push
mov
dec
pop
std
cmp
das
rolb
push
push
add
cmovge
lret
push
insl
lods
add
xor
push
mov
insb
dec
enter
push
sbb
xchg
push
add
mov
inc
jns
xchg
je
jno
inc
lahf
bound
pop
dec
movsb
xchg
sbbl
scas
mov
lds
std
insl
jnp
stos
or
and
es
xchg
xchg
jecxz
dec
xchg
xor
cmc
je
adc
add
icebp
ja
xor
and
sbb
testb
inc
mov
insl
std
cmp
jp
xchg
sub
fdivrl
and
push
shlb
cli
rcrb
push
insl
push
repnz
mov
loope
imul
lods
push
idivl
pop
fisttpl
inc
icebp
fcoms
out
aaa
psrlq
ret
mov
xchg
jns
cmpsl
inc
outsb
movsb
orb
push
lea
jae
in
adc
out
push
jp
lcall
jmp
xor
or
imul
push
sub
and
mov
sarl
push
sbb
dec
jp
popf
add
inc
fcmovnu
lret
mov
aam
sub
inc
inc
insl
sub
pop
xchg
xchg
pop
aam
outsb
jp
lods
sbb
or
jns
jmp
mov
push
mov
pop
cmp
inc
add
in
imul
mov
addr16
dec
es
or
dec
sub
fbstp
punpcklwd
dec
mov
mov
movsb
in
adc
daa
arpl
stc
dec
fcomps
mov
leave
movsb
cld
adc
addl
mov
movsb
je
mov
ficoms
pop
std
into
out
mov
xchg
js
jmp
xor
aaa
fidivrs
mov
push
notb
outsl
cmp
dec
xor
jbe
int
sub
ret
mov
imul
insb
adc
mov
in
addr16
jnp
mov
add
pusha
int
stos
fcomps
cli
sub
cmp
jno
xlat
pop
lea
pushf
xchg
sub
pop
out
pop
or
ret
call
or
pop
mov
push
inc
or
fdivr
jo
pop
in
xorb
xchg
lods
shll
xlat
cmp
push
jge
cmp
xchg
out
jbe
cs
push
adc
adc
cltd
ret
xor
cmp
xor
lret
sbb
iret
jmp
and
dec
lahf
add
stos
jg
push
xor
adc
cmpsl
mov
ljmp
jne
jb
enter
jp
dec
out
aam
push
and
dec
lret
dec
and
orb
rorb
movsl
push
pushf
jl
aam
mov
adc
incl
aaa
stos
loope
or
xchg
mov
lret
int
dec
pop
or
ljmp
adc
lcall
sub
movsl
pop
and
hlt
pop
movsl
cmp
cmp
mov
mov
test
rcrb
cltd
dec
inc
fldt
add
adc
cli
stos
jmp
or
vpshufd
xchg
bound
push
rcl
movsb
into
ficomps
pushf
loope
daa
lcall
and
jmp
cmp
inc
out
jle
jb
sarl
lcall
sub
dec
insl
mov
fcomp
lea
pusha
adc
push
mov
je
call
bound
cmpsl
imul
rcll
js
addl
xchg
mov
pop
in
subl
add
test
mov
mov
nop
jecxz
jnp
cld
pusha
addr16
push
stc
inc
push
shlb
mov
lahf
lea
loop
add
pusha
iret
and
add
clc
xor
mov
aam
mov
in
mov
push
jo
pop
leave
or
lahf
les
xchg
and
sbb
push
lock
inc
fst
movsb
mov
les
xchg
shll
add
lock
dec
rcrb
push
in
arpl
push
es
ljmp
mov
pop
pop
in
cmpl
add
and
lcall
xchg
jnp
shlb
push
jbe
jmp
dec
out
pop
xchg
mov
xchg
inc
jo
fmull
fwait
loopne
jno
push
dec
mov
cmp
sbb
data16
mov
xchg
out
clc
lahf
ss
sbb
xor
sarb
sbb
cmpl
inc
jno
cmpl
inc
pop
loope
pop
test
and
jge
popa
pop
mov
sub
jle
js
mov
ficompl
in
mov
rclb
fmul
adc
fsubrl
in
mov
push
mov
cmp
adc
jae
fisttps
sub
popf
ja
mov
iret
xchg
arpl
les
pop
mov
hlt
cmp
movb
lds
rorl
push
in
jmp
add
jecxz
or
insb
in
xor
adc
xchg
loopne
aas
orb
push
cltd
icebp
cmc
ds
cmp
stc
push
cwtl
imull
cmp
dec
dec
loope
outsl
add
jns
or
mov
leave
int
lds
xchg
jmp
cmp
stos
push
ret
enter
xor
fcmovu
mov
dec
xchg
mov
sahf
leave
dec
xchg
or
xchg
mov
mov
mov
aas
mov
push
sub
divb
cmp
ds
inc
adc
call
mov
xchg
push
inc
sahf
loopne
lock
adcb
ds
mov
cmpsl
lock
mov
leave
cli
jae
imul
and
testl
and
fwait
sub
dec
push
xor
cltd
clc
lret
fsubr
fimull
cmpsb
add
inc
push
or
dec
lods
mov
sbb
cmpb
aas
rorl
adc
cld
pop
ja
adc
out
fcomi
insl
pushf
rcr
repz
in
ret
outsl
ret
sbb
aas
jo
jne
ss
cmpsl
push
jge
stc
loope
daa
xchg
mov
dec
data16
mov
inc
mov
fsub
imul
and
mov
divl
dec
mov
fisubrl
sub
mov
mov
push
sbb
mov
mov
insb
jg
stos
adcb
icebp
addb
adc
or
ja
dec
shll
in
mov
insb
and
shr
loopne
push
adcb
jae
mov
pop
stc
jmp
movsb
adc
adc
ror
test
incl
ja
pop
cmpsl
cmpsb
out
lds
aad
mov
inc
inc
sarl
push
push
mov
out
hlt
xor
aas
mov
or
icebp
in
cwtl
mov
fcomip
ret
jae
inc
and
jecxz
ret
inc
test
sbb
or
hlt
or
gs
insb
arpl
pushf
sbb
push
movsl
into
mov
shlb
in
in
mov
ret
and
sbb
call
dec
adc
imul
or
arpl
fidivl
idivb
jmp
adc
dec
movsb
fucomi
frstor
dec
fmuls
fistpl
jecxz
repnz
sbb
mov
xor
push
add
push
loope
cmp
inc
mov
inc
lcall
jg
pop
inc
mov
push
jns
fistpll
mov
xchg
sarb
inc
push
bound
cmpsb
js
pusha
pop
mov
inc
pop
adc
int
jecxz
sbb
int3
sbb
sbb
stc
fcmovnb
lods
sub
push
cmp
popf
aas
aam
stos
sbb
lods
test
push
mov
popa
push
adcb
xor
pop
jecxz
or
adc
inc
icebp
xchg
lods
xor
out
imul
or
repz
adc
popa
adc
fdivr
idiv
and
fisttpl
mov
xor
jb
push
or
mov
mov
jns
out
pop
decb
add
dec
pushf
out
xchg
adc
mov
pop
mov
push
nop
mov
ret
pushf
fsubrp
aas
insb
aad
dec
cli
push
sbb
movsl
xchg
hlt
xor
pop
pop
cmp
xchg
xor
push
pop
push
out
xor
lcall
mov
push
dec
cwtl
in
das
push
xor
ret
stc
insl
and
mov
xchg
out
lahf
jge
cmp
push
xor
push
cmp
jle
pop
xor
sbbl
sbb
arpl
mov
aam
mov
jne
mov
or
pop
or
daa
cmp
inc
push
and
or
mov
add
adc
and
sub
loopne
and
mov
fdivp
push
daa
mov
je
in
mov
out
mov
rcrb
repnz
sbbl
pop
jp
lret
repnz
sbb
pop
lcall
std
dec
in
int
sub
popf
gs
repnz
fstpl
inc
fsubr
sub
pop
sub
shrb
wbinvd
mov
pop
aad
fnstsw
rcrb
inc
dec
call
mov
popa
push
int
sbb
and
xorb
ja
into
or
pop
jecxz
cmp
shll
xchg
fildl
and
jbe
sub
sub
push
lcall
sbb
movsl
test
jle
lcall
mov
or
xor
mov
xchg
inc
bnd
inc
push
adc
jl
dec
push
lahf
push
adc
clc
add
sub
stc
aas
xor
fisttps
pop
mov
jg
mov
jno
push
shll
and
aas
push
inc
mov
stc
push
mov
aad
dec
pop
xchg
fsts
rol
int3
xchg
adc
add
sub
and
adc
test
push
js
inc
sub
test
and
jnp
sub
push
xchg
dec
fcomi
popa
lret
hlt
push
jle
nop
rcrl
xchg
dec
aam
push
test
adc
xor
shll
aad
pushf
add
push
cltd
popa
xchg
insb
ja
and
and
and
test
lods
outsb
in
test
inc
or
in
ret
jbe
or
fs
movsb
cmpsb
ljmp
add
push
and
and
xor
jae
ret
repnz
ret
inc
shlb
in
push
sahf
outsb
mov
lret
jnp
rcrb
sub
in
pop
test
cmp
sarl
and
in
ja
cwtl
outsb
mov
outsl
cmp
jae
fnstcw
lcall
out
cmp
cltd
dec
xor
loopne
mov
mov
mov
push
dec
pop
xchg
scas
sbb
pop
stos
pop
es
cmp
jl
inc
mov
cmp
data16
iret
xchg
leave
in
data16
movsb
fmul
mov
aam
ljmp
mov
loope
cli
stos
dec
mov
mov
push
jge
push
call
ss
xchg
pushl
es
inc
in
jl
cmpsl
push
mov
stos
adc
iret
sub
and
pusha
adc
jo
ficomps
mov
mov
or
pop
xlat
adc
test
mov
fs
lds
add
xchg
or
adc
insb
sahf
inc
xor
mov
repz
in
mov
xchg
lds
test
push
fdivrs
out
mov
mov
stc
fwait
adc
out
jno
pop
mov
mov
add
push
repz
aaa
fiadds
jns
shrb
push
cltd
test
in
xor
lock
ss
sahf
mov
mov
cmp
jg
xchg
out
jp
stos
pop
jmp
test
sub
push
in
rol
inc
lret
mov
lret
ja
imul
negl
mov
mov
fwait
jp
mov
mov
xchg
lcall
dec
pop
addr16
jae
adc
data16
lods
cmp
add
jecxz
insl
jbe
mov
arpl
adc
aam
in
in
and
cmpsb
js
inc
stos
out
jg
pop
xor
loopne
movsl
shlb
lods
or
fbstp
pop
sbb
imul
sti
cs
pop
xchg
add
push
in
add
jg
jle
negl
cmpb
enter
mov
addr16
jns
sbb
cmp
aas
bound
fs
sub
or
jle
mov
jle
fs
push
mov
jnp
lahf
ret
cmpsb
daa
rcll
or
les
sub
add
dec
in
jg
dec
in
mov
loopne
mov
bound
movsl
push
lea
sbb
dec
jnp
out
sub
popa
mov
std
xchg
or
fwait
int
fidivl
mov
popf
mov
xchg
jo
push
stc
cmp
enter
jmp
ffreep
sub
leave
adc
rolb
adc
and
fdiv
shr
test
stos
jecxz
ret
xchg
decl
cmc
sbb
sbb
push
mov
mov
lods
lea
sub
pusha
pop
adc
jle
jecxz
pop
jle
fcompl
rcrb
cwtl
mov
fimuls
jo
or
mov
dec
mov
or
or
or
adc
xchg
call
adc
mov
xchg
shll
loop
jne
jo
sbb
mov
mov
inc
hlt
and
addl
mov
out
pop
jbe
pop
xchg
dec
imul
repnz
fs
inc
and
out
in
push
mov
test
xchg
out
insl
daa
add
add
push
xor
imul
das
and
dec
jle
mov
cwtl
mov
movsl
mov
pop
push
jl
adc
push
scas
pop
insb
jnp
daa
fnsave
xchg
push
push
xchg
add
icebp
xchg
add
cmp
xor
fldcw
addl
mov
ret
jmp
in
clc
pop
cmp
stos
pop
mov
in
cmp
adc
jbe
jmp
out
loopne
xchg
leave
push
popf
les
test
xor
in
fbld
ds
mov
das
repnz
es
add
adc
xor
cltd
lea
pusha
lock
xor
or
pop
addr16
mov
fadd
cld
and
fnsave
sub
cmp
addr16
jae
int3
test
das
add
xchg
dec
sub
js
mov
int3
dec
addr16
insb
stos
push
fldenv
mov
mov
mov
cmp
mov
popa
jbe
hlt
cmpl
out
pop
dec
push
mov
les
dec
mov
sub
pop
ret
and
fstl
and
dec
mov
lods
popf
mov
mov
sti
sbb
dec
sbb
aas
jo
jmp
xor
sbb
imul
cmpb
enter
mov
push
gs
jle
xchg
sub
push
xchg
popa
ja
add
xchg
inc
rolb
mov
lcall
sbb
jns
lods
sbb
cltd
lcall
jp
mov
dec
mov
or
mov
nop
fprem
pop
sub
cmp
jo
xchg
cli
push
das
adc
mov
xor
push
inc
mov
push
stc
andl
cmp
jp
leave
sub
mov
divb
pop
sbb
lahf
push
jns
jle
mov
sti
xor
or
fnsave
dec
cmpsb
cmp
sbb
mov
mov
fcmovbe
and
adc
adc
sbb
mov
push
repnz
and
in
push
jle
jle
stos
leave
test
xchg
sti
repz
aas
jb
mov
xlat
lea
add
cmp
mov
sub
cltd
mov
xchg
test
jp
cli
es
pop
sarl
mov
mov
lret
mov
mov
orl
les
dec
imull
idivl
ficomps
loop
sahf
or
mov
inc
sbb
mov
push
enter
aad
andb
inc
xchg
adc
fwait
ret
insl
in
inc
nop
out
pushf
inc
xor
sub
lahf
sub
and
aas
ret
rorl
subl
stos
mov
imul
addb
pop
inc
fwait
movsl
lret
and
and
inc
arpl
and
popa
pop
arpl
es
stc
loope
out
ret
pop
xchg
rcrb
movsb
push
and
fucomip
je
mov
sbbb
stos
aaa
sub
and
jl
out
or
sbb
loopne
addr16
xchg
cmpsb
pop
scas
fsubr
pop
adc
sar
mov
inc
imul
popa
cmp
cmpsb
push
add
xchg
mov
push
data16
icebp
xchg
fwait
test
sti
pusha
aaa
mov
cmc
nop
aas
fwait
dec
in
in
jmp
call
std
jg
cmp
inc
or
repnz
popa
lcall
add
jmp
rcll
out
js
outsl
jmp
xlat
and
cmp
or
xor
jle
sub
out
mov
inc
std
mov
jb
mov
jnp
ljmp
fldt
rcll
push
scas
xchg
mov
inc
cwtl
in
jmp
push
das
popf
pop
daa
cs
mov
outsb
xlat
xchg
sub
mov
adc
mov
and
and
push
pop
sub
mov
jo
jnp
fnstenv
or
xor
or
xchg
test
push
loopne
mov
enter
xchg
lret
mov
pop
xchg
jae
mov
into
cmp
inc
sahf
push
stos
movsl
mov
push
nop
mov
xor
loop
movsl
enter
std
jnp
repnz
shlb
cmc
jg
mov
mov
jg
das
fstps
int3
inc
lods
fisubrs
ret
xchg
xor
andl
repz
sbb
mov
or
ds
lret
xor
hlt
push
or
out
in
dec
jg
add
repnz
into
enter
fcoms
adc
lret
rcr
fcompl
or
cmp
pop
sarb
in
and
xchg
mov
inc
cltd
pop
mov
leave
sub
mov
lcall
fsubs
into
insl
pop
and
dec
xorb
dec
xor
lret
mov
ja
push
outsb
cld
xchg
aaa
or
jg
test
lret
cli
fimull
in
xor
push
out
jnp
cmc
loop
sub
mov
or
lods
pop
daa
jb
mov
cs
xor
call
stc
bound
ljmp
xchg
and
leave
addr16
das
shll
popa
mov
xchg
cwtl
pop
scas
jnp
cmpb
xor
stc
inc
adcl
sbb
jae
dec
sahf
xchg
inc
mov
pop
mov
dec
push
popf
and
cmp
hlt
jb
insl
clc
inc
dec
aaa
dec
shlb
inc
inc
cwtl
fisubl
hlt
mov
out
sbb
jae
inc
cs
mov
mov
mov
jg
shrl
call
shl
daa
xchg
push
push
xchg
sarl
inc
ja
adcl
inc
les
pop
in
jl
lret
sahf
negb
cwtl
ret
divb
out
or
test
movsl
mov
movsl
fidivrs
rolb
pusha
push
add
mov
sub
sbb
cmpsl
std
out
lahf
lds
filds
testl
lahf
imul
inc
inc
xchg
nop
repz
daa
lahf
cmp
inc
lock
cmpsb
lret
jns
xor
test
pusha
fistpl
jmp
lea
enter
testb
movsl
add
pusha
cmc
and
lret
mov
mov
stos
imul
inc
mov
imul
xor
pop
movsl
pop
cs
sub
push
xchg
add
and
pop
jmp
push
mov
adc
sbb
lret
shl
sub
jg
ret
fsubrs
cmp
jmp
mov
es
stos
std
adc
push
in
movsl
fdivp
jno
xchg
push
mov
jp
mov
call
daa
test
jg
mov
mov
mov
cmc
dec
pop
into
ljmp
fwait
cmp
xor
add
scas
or
std
add
mov
aas
sbb
mov
mov
out
add
movsl
pushf
jb
jb
sbb
fstps
jbe
add
test
xchg
fsubl
cld
inc
int
cmp
repnz
mov
test
dec
idiv
pop
adc
inc
inc
and
xlat
cmp
xchg
xchg
mov
mov
xchg
fs
aam
or
mov
in
xchg
rdmsr
pop
scas
mov
jmp
cmpsb
push
cmp
scas
add
jmp
and
xor
clc
cmp
push
pop
int3
jge
into
das
mov
pop
and
fistps
test
rcr
call
les
mov
shl
sub
mov
push
sbb
or
cmp
xchg
inc
ja
shld
bound
psubb
adc
mov
fistl
jne
ja
sahf
adc
add
je
sub
sub
jb
add
jne
and
test
sub
sbb
adc
push
shrl
dec
into
mov
mov
sbb
mov
ljmp
cmp
popl
push
pop
inc
lcall
mov
pushf
cmp
es
sti
inc
js
aas
and
mov
cmp
dec
mov
pop
mov
mov
in
and
inc
pinsrw
in
daa
pop
jb
inc
ret
sbb
push
push
push
jl
addr16
cmpsb
mov
inc
xchg
insl
xchg
cltd
cmp
aaa
ss
push
inc
push
or
hlt
push
es
dec
ficompl
stc
imul
sub
cmc
in
leave
xor
frstor
xor
movsl
rcll
sti
xchg
xor
aaa
loopne
fdivrp
roll
leave
push
xchg
cmp
mov
sti
pop
mov
cmp
mov
call
pop
mov
jecxz
lds
xchg
ror
mov
and
fs
idiv
notl
sbb
dec
sbb
int
outsb
jle
xchg
arpl
ljmp
xchg
shl
aad
popf
mull
inc
or
ja
adc
rcrb
pushf
neg
ljmp
fwait
mov
fistpl
movsl
in
inc
sbb
loop
pushf
mov
jb
jle
sti
into
aas
and
aaa
xor
fstpl
jns
fwait
add
pusha
pop
or
cmp
inc
cwtl
inc
rolb
jmp
testb
jmp
inc
jb
jg
mov
rorl
adcl
inc
or
repz
mov
pop
inc
xor
in
cmp
and
jp
mov
xor
ja
push
xchg
inc
test
mov
lea
pushw
arpl
xchg
in
addl
sbb
in
mov
dec
shl
inc
in
pop
push
popa
xchg
scas
adc
subb
push
cmpsl
in
add
jbe
loopne
js
and
cld
or
roll
xchg
insb
test
pushf
adcl
fcmovu
inc
dec
lods
stos
in
mov
add
cld
loop
shrb
add
dec
jo
push
jle
lcall
jnp
sub
gs
stos
add
jg
push
sbb
or
mov
movb
fimuls
mov
mov
enter
ret
pop
sbb
push
push
mov
dec
mov
lock
pusha
ds
jmp
andb
xchg
pushl
xchg
push
jmp
lret
jl
adc
cmp
repz
cmp
lds
lock
dec
adc
or
lret
pop
cld
fcoms
out
faddl
adc
add
inc
cmp
push
hlt
or
push
push
ret
outsb
xchg
or
mov
or
shlb
cltd
mov
pop
adc
std
xchg
sub
movsl
std
pop
xlat
jg,pn
or
das
stos
xlat
dec
jp
mov
adc
sub
lds
xchg
pop
cs
cmpsl
daa
and
inc
add
cmp
sub
push
cltd
or
xor
xlat
jp
xor
lock
stos
add
ja
mov
mov
push
lods
mov
int3
sbb
mov
mov
insl
je
pop
pop
sub
cmp
and
xchg
and
push
ss
or
jb
pop
inc
mov
in
out
xor
mov
cld
pop
mov
dec
adc
and
js
int3
adc
xor
mov
sub
jecxz
out
cs
mov
or
and
xchg
dec
dec
cwtl
jge
sub
mov
stos
addb
in
push
cli
ret
js
lret
inc
inc
add
fstl
xor
sbb
xchg
push
mov
aad
xchg
sbb
mov
nop
imul
test
imul
frstor
push
inc
popf
push
fcoms
repnz
jmp
mov
loopne
clc
shlb
pop
jbe
inc
cs
cld
push
rcll
in
popa
sbb
or
mov
lret
cli
int
cmpsl
loop
sbb
ds
or
addr16
jp
bound
mov
mov
nop
in
add
icebp
ret
dec
ficoml
ficomps
mov
mov
in
inc
test
cmpsb
cmp
divb
stos
push
mov
cmpsb
sub
cmc
mov
inc
sarb
mov
iret
roll
loopne
jg
add
pusha
cmc
cmp
loop
std
pop
add
push
pop
pop
mov
je
pop
out
dec
jle
jbe
dec
test
add
xor
fstps
and
jb
int3
add
sti
xor
push
push
ljmp
mov
mov
cmpb
mov
imulb
mov
sub
test
xchg
add
fadd
shrl
mov
mov
push
mov
test
and
mov
pop
movsb
jne
fwait
dec
sub
push
push
aam
hlt
test
sub
repz
int3
xor
jo
ret
jns
dec
pop
lods
fistpll
data16
and
inc
out
jl
mov
jo
scas
mov
or
fcom
push
add
mov
dec
add
dec
add
push
add
negl
jnp
xorb
xlat
jecxz,pt
repnz
and
adc
addb
and
cld
andl
movsl
aad
sar
and
insl
xor
sub
pop
dec
inc
repnz
xchg
sbb
sahf
dec
adc
xchg
push
dec
fcoml
xchg
les
dec
xchg
cmpsl
push
add
stos
inc
sahf
mov
inc
icebp
loopne
or
sub
add
cli
dec
mov
fiaddl
jne
test
pusha
cmp
mov
pop
jo
int3
loop
jnp
sub
cmp
sbb
nop
or
enter
inc
xor
add
or
fs
xchg
out
mov
push
addr16
xor
jnp
pop
push
xchg
in
cmpsb
mov
lea
ja
mov
add
mov
pop
mov
sub
push
jno
jae
lret
xchg
or
jbe
dec
xchg
jge,pn
bound
scas
jmp
xchg
das
popf
fists
xor
inc
dec
xchg
cmpsb
jb
sbbl
cld
sbb
or
push
dec
sbb
imul
sbb
fisttps
xchg
dec
arpl
push
pop
lea
leave
add
cld
lods
imul
push
addl
icebp
mov
aaa
or
push
inc
lock
jp
and
push
cmp
jb
or
pop
mov
push
lods
loop
adc
cltd
enter
push
mov
sbb
pop
adc
popf
pushl
icebp
xchg
jae
sub
movsb
xchg
xor
mov
jp
js
mov
jne
sbb
push
xchg
pop
cmpsb
cltd
inc
pushf
std
sbb
cmp
icebp
scas
sub
icebp
pop
jns
cmp
in
inc
ret
lcall
sub
dec
pop
stc
mov
popa
fisttps
adc
addl
cmp
pushf
shll
sbb
push
loope
out
test
loop
aad
ljmp
icebp
mov
inc
stos
xchg
aad
dec
adc
adc
shrl
aaa
jge
insb
adcl
mov
mov
cmp
push
je
mov
popa
add
cmpsl
xlat
xchg
sbb
data16
mov
int
cmp
lcall
adc
dec
gs
and
ret
pop
test
cmc
lahf
and
pop
roll
push
pushf
js
xchg
cs
push
repz
movsl
fildl
cmp
jmp
sbb
jmp
add
inc
add
mov
test
push
add
and
pop
xchg
rcrb
call
mov
mov
or
cmpsl
sti
dec
fistps
test
std
mov
mov
lea
dec
lock
add
jg
imul
cwtl
cmp
push
outsl
pusha
add
adc
mov
jo
jmp
inc
fidivs
mov
cmpb
stc
inc
push
sub
into
inc
pop
and
lret
imul
push
jmp
test
jg
xchg
adc
imul
dec
mov
fcomps
fcomps
jl
mov
push
mov
ljmp
mov
or
inc
andb
cwtl
lea
out
xchg
add
mov
cwtl
call
fmuls
dec
mov
inc
adc
movsl
and
jecxz
sub
xchg
flds
cmova
mov
nop
cmp
es
bound
std
repz
std
hlt
dec
sbb
rdtsc
aas
fisttpll
loope
push
cmc
push
leave
xor
push
test
xchg
popa
dec
stos
sbb
mov
shlb
fdivrs
mov
stos
or
inc
loop
lock
pushf
pop
adc
xchg
sub
cwtl
dec
daa
push
sbb
int
mov
daa
mov
jmp
jp
xchg
jmp
rclb
pop
xlat
push
stos
push
scas
cmp
call
shlb
clc
jne
cltd
xchg
divl
cmp
cmpsl
cmp
xor
adc
mov
mov
mov
cs
shlb
out
jb
repnz
fs
sbb
sti
pop
mov
mov
mov
pop
cmc
pop
and
push
mov
cmp
jno
xchg
jbe
mov
jbe
or
aad
cli
mov
cmp
push
inc
push
push
jmp
lcall
clc
and
dec
mov
movsb
lea
cmpsl
jge
clc
jp
jecxz
movsl
call
add
push
xor
clc
cmpsb
pop
sti
stos
std
cmp
in
dec
sub
xor
arpl
xchg
decl
push
roll
xor
inc
xchg
jp
push
sbb
imul
imul
push
enter
xor
push
xchg
call
mov
xor
jge
in
mov
add
out
xchg
pop
mov
add
cmpsb
and
lock
adc
jecxz
pop
loope
mov
add
mov
outsb
push
addr16
aas
outsl
loopne
outsl
adc
test
imul
mov
scas
addb
movsb
aad
scas
mov
sti
xor
adc
mov
push
and
jo
repz
cwtl
test
popf
mov
and
call
sahf
dec
add
xor
fdivp
out
insl
mov
xchg
mov
cmp
cmp
mov
dec
rcl
jae
or
movsb
les
cmc
movsl
cmpsl
cmp
arpl
shll
push
sub
mov
mov
dec
fistps
popf
push
hlt
scas
jecxz
lret
pop
hlt
pop
stc
out
xor
les
cltd
lea
lahf
out
aaa
add
lods
sahf
xor
cmpsl
das
cld
pop
xor
cmp
pop
sbb
insb
dec
and
pushf
enter
loopne
sub
jne
pusha
clc
add
push
pop
imul
dec
testl
fxam
dec
add
clc
into
mov
push
jae
cmpsb
push
xchg
imul
std
into
xor
jae
fldl
loope
jge
icebp
lea
aaa
imul
jbe
cld
jg
out
lods
loop
rclb
mov
inc
addr16
add
cmp
pop
cmp
inc
xchg
mov
dec
cmc
jl
mov
stos
jmp
mov
mov
push
je
fsts
pop
or
sub
jb
inc
aaa
mov
push
jbe
xlat
fistl
sbb
hlt
xchg
jno
cmp
mov
enter
dec
cli
neg
push
xor
cld
push
je
cwtl
pop
aas
loopne
lea
int
xor
xchg
mov
mov
ret
repz
cmpb
mov
mov
fwait
sbb
stc
sti
in
aad
add
in
lret
sub
dec
fwait
or
shlb
fldenv
dec
lret
fiadds
sbb
out
shrl
jge
mov
cmp
pop
xor
push
pop
sbb
loopne
mov
and
shll
jno
dec
push
cmp
pop
push
inc
shlb
jecxz
push
outsl
mov
data16
popf
xchg
jno
cmp
cmp
out
dec
jns
cli
out
cmpsb
out
idivl
icebp
push
fmuls
test
xchg
outsl
mov
loop
cmp
jl
jno
sbb
fiadds
lret
sahf
dec
or
mov
mov
outsl
dec
das
mov
sub
in
mov
mov
push
in
shr
sahf
or
push
cmp
jne
sti
cmc
es
aam
adc
sbb
jg
sbb
movsl
rclb
fwait
cmp
ds
xor
loopne
daa
pop
scas
mov
sbb
stc
cli
stos
mov
push
cs
jne
leave
insl
jl
jmp
mov
inc
pop
scas
dec
mov
mov
call
movsb
scas
inc
out
popa
out
push
cmp
pop
jae
push
and
dec
shlb
iret
and
pushf
push
fnstsw
and
negb
mov
mov
jo
addr16
fisubs
add
enter
int
and
add
push
sub
xor
lcall
inc
jg
inc
pop
adc
xchg
mov
int
push
sysexit
and
mov
movsb
xchg
ret
rorb
dec
xor
xor
je
and
pop
sub
xor
pop
andl
push
outsl
ja
fnsave
sub
mov
jne
leave
int
mov
and
pop
addr16
stos
ds
sahf
xchg
inc
sub
or
leave
or
aam
fldl
jmp
cmp
lds
aas
movaps
fidivl
scas
test
out
adc
sbb
repz
push
ds
cmp
loopne
movsb
xlat
repnz
popf
jb
or
ret
dec
lods
mov
mov
dec
jae
sahf
loope
inc
dec
xchg
push
xorb
pop
push
rorb
sbb
loop
std
inc
cwtl
fistpl
ret
ljmp
fistpl
jl
adc
andl
cmpsb
xchg
cld
or
adc
ds
push
adc
mov
pop
mov
test
in
and
mov
add
mov
mov
xchg
dec
cld
fdivrl
xchg
mov
and
cmp
sub
dec
mov
scas
or
loope
mov
into
fldln2
xor
pop
mov
std
xor
mov
pop
xor
pop
ljmp
cmp
jne
xchg
decl
inc
jle
sub
cmp
cmc
out
jge
sub
mov
mov
flds
push
fldt
adc
lret
rcr
test
test
pop
bound
xchg
mov
dec
dec
push
jecxz
jno
mov
imull
dec
lret
cmp
add
jl
insb
mov
inc
lods
add
mov
inc
pop
add
xchg
jle
cmp
inc
sbb
mov
pop
sbb
cltd
negb
adc
jno
mov
push
adc
ljmp
lahf
hlt
push
adc
arpl
fs
push
mov
rcr
fsubrs
and
sub
fstl
mov
scas
push
ljmp
iret
rorb
cmp
faddl
cltd
sbb
sub
dec
and
mov
ljmp
inc
pop
push
sbb
es
sub
fwait
sub
les
adc
gs
add
test
call
idivl
push
jbe
cwtl
and
jmp
inc
out
mov
aam
ljmp
addl
outsl
mov
sarb
popf
sub
jmp
pop
adc
std
mov
inc
xchg
lret
lods
sbb
aaa
insb
push
movsb
inc
cmp
cmp
mov
cmp
push
repnz
and
jmp
addr16
dec
clc
mov
test
in
fidivrl
jmp
push
idivl
jl
sti
lahf
jmp
add
push
jl
fcmove
push
rorl
jne
inc
clc
mov
lcall
push
lahf
jmp
sbb
lret
sti
testb
sub
lea
int
arpl
xchg
adc
cmpsb
sub
adc
mov
daa
mov
push
xchg
sub
inc
jnp
jmp
arpl
pop
test
cmp
mov
pop
lods
in
dec
and
jnp
stos
ret
sub
popa
popa
or
pop
mov
inc
gs
mov
aaa
and
push
adc
adc
addb
das
adc
inc
pop
and
pop
out
push
sub
mov
incl
cmp
aad
or
dec
das
decb
aam
or
icebp
fcompl
test
cmp
scas
outsb
pop
add
adc
push
mov
lea
and
xchg
in
lret
mov
lock
pop
mov
in
stos
pop
andl
sub
dec
enter
add
dec
mov
pop
mov
or
mov
cmp
sarl
pushf
and
xor
orb
jecxz
xchg
es
xchg
ficoms
sbb
jbe
cld
shr
aaa
xchg
fs
in
or
dec
clc
mov
ret
rcrl
aam
push
pop
nop
adc
rclb
movsb
arpl
sbb
shlb
addr16
ret
cwtl
xor
outsb
std
shlb
repnz
out
in
cmp
dec
jne
lods
out
mov
pop
xor
mov
dec
push
dec
nop
push
sbb
repz
lods
nop
test
jge
push
pop
dec
int3
mov
xchg
scas
ficoms
repz
mov
aam
xor
mov
jae
mov
cltd
inc
sub
popa
jae
add
mov
jae
sbb
mov
cmpb
inc
cmp
and
pop
adc
add
inc
xchg
int
ljmp
or
dec
pop
in
rcrl
pusha
push
aam
loope
movaps
mov
pop
cmpsl
pop
pop
jno
xchg
and
push
push
xchg
lods
jge
add
sahf
aaa
mov
push
sbb
push
xchg
inc
push
pop
and
lret
jg
repz
mov
jns
mov
ret
cld
test
shlb
xlat
push
je
sub
add
add
add
inc
mov
add
or
dec
mov
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
