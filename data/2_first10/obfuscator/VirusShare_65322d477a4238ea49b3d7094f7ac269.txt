test
ljmp
xor
das
das
outsb
lock
mov
mov
dec
pop
mov
push
dec
cmpsl
addl
add
shlb
or
adc
es
addr16
xlat
imul
je
addb
jnp
mov
pop
aad
cmp
repz
pop
jbe
adc
ja
xor
xor
addl
testb
jp
push
daa
mov
push
pop
jne
gs
stos
lret
scas
scas
mov
ja
test
pop
add
mov
jmp
sbb
add
scas
push
sub
dec
xor
jg
mov
clc
add
inc
cmovl
into
loope
inc
outsb
or
xchg
in
insb
sahf
jne
lods
push
inc
mov
shlb
jmp
lods
cmp
jg
orb
cli
xchg
jb
ret
xchg
aaa
jmp
cmp
xlat
xor
in
dec
fdivrl
dec
test
pop
test
add
in
sti
imul
pop
jge
xchg
scas
and
and
mov
dec
xchg
daa
or
or
mov
cli
adc
mov
les
push
jno
test
imul
call
push
xchg
loop
scas
mov
gs
hlt
and
cwtl
mov
mov
adc
cld
pop
dec
cld
lds
mov
jmp
test
stos
pop
adc
in
rcl
int3
xlat
pop
sbb
lods
push
in
ret
jge
sub
insl
sub
jmp
stc
and
mov
push
cmpsl
adc
xlat
lret
push
sub
ds
stos
push
adc
jp
mov
add
sub
jne
loop
sub
fisubs
aas
cs
jg
rorl
and
push
adcb
out
movsb
rdtsc
mov
mov
out
cld
int
lcall
idivb
xor
aam
rdmsr
pop
imul
repz
lcall
adc
in
jmp
xor
dec
loopne
mov
jl
ljmp
adc
jae
cwtl
dec
sub
enter
cli
or
xchg
popf
loope
push
sub
out
inc
and
or
add
push
add
xchg
push
push
jle
dec
inc
iret
cmpsb
inc
mov
xor
movb
cwtl
push
xchg
pop
inc
nop
sub
pop
hlt
jnp
scas
jl
pop
mov
and
lods
and
mov
stos
rorl
shll
lcall
adc
shl
call
enter
sbb
lds
sub
lcall
aas
mov
lcall
xorl
or
insl
xor
addr16
filds
pop
js
dec
sbb
ror
mov
pxor
dec
mov
inc
mov
lods
mov
stos
xor
add
fmuls
cmp
out
mov
call
shr
fcmovu
clc
lcall
lret
jp
dec
call
loopne
fsub
movb
adc
clc
aam
jbe
push
das
add
enter
cmp
in
inc
mov
cltd
out
mov
and
mov
cli
pop
cmpsl
xchg
faddl
inc
jg
sbbl
add
or
clc
mov
xor
sub
adc
movsl
xor
int3
jo
mov
xchg
dec
out
add
xchg
mov
and
sbb
clc
sti
jnp
ja
inc
aad
or
movsl
cld
outsl
push
mov
lea
xor
mov
loop
mov
movsb
xchg
mov
sbb
adc
fcomp
cmp
mov
and
cmpsb
lods
fdivrl
mov
cmpsl
aas
out
mov
aad
hlt
sar
ret
and
sbb
jmp
mov
adc
jae
je
inc
and
fisttps
jg
and
push
in
arpl
das
je
xchg
inc
pop
pop
push
orb
mov
cmp
jae
push
testl
loope
loope
pop
mov
push
inc
daa
jg
sbb
pop
rorl
jmp
js
fcompl
mov
stos
pop
mov
hlt
xor
ss
mov
mov
fstps
sbb
adc
cmpsb
pop
sbb
push
mov
xlat
js
or
push
adc
nop
out
pop
insb
pop
sbb
and
inc
in
scas
jo
push
xchg
cmp
aaa
in
gs
cmp
movhps
mov
jl
sbb
sub
shr
adcb
test
cmpb
mov
jb
ror
dec
sbb
xchg
push
jp
inc
loope
cltd
xchg
lods
test
push
jne
add
aas
mov
or
addb
clc
fsubs
out
cld
push
mov
sub
in
bndldx
mov
in
sbb
add
jnp
mov
add
dec
cmp
fwait
test
ds
ja
sbb
nop
dec
or
lods
out
rorl
stc
shlb
sahf
and
outsl
js
loope
cmpsl
xchg
inc
fstpt
inc
and
in
jno
jl
push
ret
bound
mov
pop
adc
pop
je
iret
and
repnz
pop
mov
pop
bound
adc
sub
popf
sub
mov
mov
mov
xchg
fdivrl
dec
pop
data16
testl
icebp
stos
inc
fsubrp
add
sub
pushf
push
jne
add
ss
sbb
ljmp
pushf
aam
repz
xor
dec
icebp
dec
cltd
add
xchg
and
sub
ljmp
jmp
push
pop
andl
jl
cltd
push
call
xchg
rep
iret
inc
outsb
inc
push
xchg
lock
loope
cmp
cmc
sbb
fidivs
mov
sbb
xchg
lret
mov
bound
ret
jmp
lcall
clc
pop
ret
pop
adc
mov
or
pop
movsb
xor
mov
int3
in
std
sahf
pop
push
or
test
stos
cwtl
jb
xchg
clc
sti
test
and
in
push
lods
push
inc
addr16
sub
icebp
arpl
sbb
add
xchg
jnp
sbb
call
popf
scas
stos
cmpsl
pop
daa
or
dec
push
dec
stc
push
pop
rcr
cmp
xor
shll
aad
push
neg
sbb
cmc
insw
push
cmpsb
sub
cmp
jnp
in
popa
test
mov
xchg
sbb
addr16
subl
into
pop
pop
rcrl
and
shlb
stos
mov
dec
movsl
add
mov
cwtl
cs
insb
sub
inc
inc
mov
leave
mov
mov
xor
ds
leave
push
jl
or
insb
mov
dec
call
mov
das
out
mov
leave
ror
xor
les
jmp
dec
fucomip
push
mov
imul
xchg
cs
arpl
dec
pop
xchg
jae
mov
push
lock
add
mov
adc
jl
incb
cmpsb
out
cmp
es
cmp
push
mov
add
imul
jns
mov
out
jecxz
arpl
shrb
and
fildll
insb
sbb
ljmp
or
push
cltd
xchg
lret
xor
sahf
and
lret
inc
roll
mov
dec
cld
xchg
push
mov
movsb
es
scas
xchg
jb
fwait
ljmp
into
mov
jbe
cld
inc
push
or
and
les
jg
lds
in
cmp
test
int
in
std
xchg
popf
push
sbb
out
xchg
mov
sbb
cmp
inc
movsb
test
jmp
mov
jo
cmp
jns
sbb
test
test
mov
shll
or
sbb
adc
out
cmp
cmp
stc
xchg
in
xchg
ret
in
dec
inc
sub
iret
leave
cmpsl
in
or
jnp
sbb
adc
imul
mov
sbb
jo
add
out
add
cmp
repnz
jecxz
push
xor
mov
mov
pop
rcrb
pop
push
push
fbstp
cld
cmp
negb
xchg
pop
loope
out
nop
mov
add
sub
xchg
mov
inc
push
cmpsl
fistl
lret
cmc
in
insb
inc
sub
dec
test
push
cmp
out
cmp
inc
out
jmp
mov
hlt
ljmp
push
inc
push
xor
mov
in
loop
add
daa
adc
mov
sbb
xor
mov
xor
hlt
imul
jo
js
jp
loopne
pop
test
les
pop
dec
loope
push
mov
fisttps
mov
in
cltd
push
dec
push
xchg
adc
adc
push
cmc
adc
fadds
xchg
xchg
test
jb
cld
aas
mov
repz
lcall
dec
mov
in
pop
fs
nop
pop
hlt
adc
push
jge
jo
aaa
cli
xchg
xor
imul
dec
push
gs
filds
outsb
mov
add
add
js
push
cmp
inc
movsl
loopne
xchg
fistpll
mov
lods
lds
or
pop
xchg
inc
xor
pop
cmp
popa
or
adc
out
out
movsl
pop
jb
and
or
and
sarl
into
insl
loopne
notl
daa
mov
orb
loopne
sub
test
inc
outsl
das
out
xchg
rorl
outsb
cld
clc
shll
jmp
fldt
sahf
mov
push
push
sbb
repz
imul
mov
and
cltd
push
testl
jb
cltd
pop
outsl
or
xchg
imul
aaa
push
rorb
sub
fdivrl
movsl
addr16
lret
lods
add
xchg
pop
jg
push
jmp
push
adcl
dec
cmp
leave
out
in
adc
sbb
rcll
fmuls
jae
xor
and
aaa
in
dec
mov
sarl
push
stc
push
insb
aas
test
ss
sub
sahf
fs
mov
sub
movsl
and
sar
mov
mov
jl
sti
cmc
dec
arpl
jmp
es
cwtl
cmp
out
nop
mov
call
sbb
inc
loop
mov
dec
jle
mov
and
mov
lock
sub
out
inc
mov
adc
ret
cmp
sbb
call
and
push
jmp
data16
fistps
ljmp
fsts
sahf
bound
aad
jmp
or
testl
jo
aam
cld
or
mov
inc
xlat
stc
mov
fsub
xchg
adc
pusha
xchg
mov
das
xor
shll
shll
jnp
jne
les
aam
cmpsb
mov
add
lret
jle
mov
xchg
pop
frstor
outsb
sbb
aad
test
lahf
sar
sbb
fisttps
ja
adc
pop
leave
cmpsl
mov
mov
rorl
fnstcw
outsb
inc
mov
cmp
sub
repnz
mov
fisttpl
and
in
je
or
sbb
cmc
and
inc
or
lock
cs
sti
cmpsl
cmp
adc
sti
cmpsb
dec
cmp
daa
fisttpll
lock
mov
push
lods
and
pop
mov
mov
imul
adc
fs
dec
repz
daa
movsb
outsb
sbb
pop
stos
cmp
mov
and
pop
sarb
ljmp
outsl
enter
int
ja
inc
data16
pop
push
mov
in
data16
ja
lea
and
mov
mov
out
sbb
sahf
push
cmp
sahf
int3
mov
rcl
or
push
jae
xlat
cmpl
fiaddl
push
scas
fildll
or
xchg
and
lret
jae
gs
subl
pop
cmp
mov
lods
dec
dec
mov
mov
cltd
bound
fisubrs
stc
ffreep
sbb
das
addl
loopew
xchg
aas
xchg
add
out
jge
scas
insl
je
sub
pop
call
outsl
rcr
push
or
jmp
cmpsl
fs
mov
pushf
push
push
adc
int
xor
mov
push
shl
jne
lret
inc
adc
call
dec
mov
out
and
notl
cmpb
or
ficomps
in
mov
imul
xor
leave
xchg
orb
aam
push
and
dec
sbb
cmpsb
pop
jb
faddl
push
pop
jae
pop
inc
mov
sub
int3
insb
push
adc
popf
test
mov
out
mov
shlb
push
sbb
dec
mov
ja
lea
lcall
inc
shlb
popf
and
scas
push
fcoml
sar
sets
inc
dec
inc
cmp
mov
mov
adc
sbb
mov
test
ja
icebp
push
mov
repnz
jae
test
in
adcb
leave
fcmovne
jp
sub
inc
decb
jae
loop
mov
inc
aas
das
dec
mov
setno
sub
dec
jl
mov
mov
push
xchg
xor
inc
dec
jg
jp
and
cmp
dec
test
dec
xchg
lret
sbb
daa
repnz
shl
xor
sbb
scas
mov
xchg
add
and
in
xlat
push
dec
mov
adc
negb
psubusw
es
cmp
pop
dec
lcall
es
push
int3
mov
inc
pop
shrb
push
xchg
fxch
mov
or
in
xchg
xchg
in
jnp
mov
out
lods
add
add
insb
lods
out
cs
sbb
xchg
hlt
or
sbb
lea
nop
xchg
push
es
in
cld
add
mov
mov
inc
mov
xchg
dec
xchg
ss
and
sbb
mov
adc
gs
inc
addb
mov
test
frstor
outsb
jne
test
xlat
pop
fidivrs
decb
jo
sbb
out
jae
mov
mov
in
fdivrs
jle
test
mov
testb
add
inc
cmp
sbbb
and
mov
xchg
out
adc
jns
fcompp
push
scas
lret
popa
cwtl
and
out
in
icebp
inc
rclb
into
sbb
ret
mov
push
pop
sub
jp
mov
push
inc
dec
adc
lcall
add
push
bt
clc
pusha
mov
shld
mov
cmc
cmp
push
push
lea
jbe
or
mov
adc
mov
pusha
add
bswap
movw
pusha
neg
mov
bt
not
add
movzbl
bswap
movl
shr
shld
lea
mov
add
cmc
cmp
pusha
lea
jo
jbe
shld
mov
sub
bswap
bswap
mov
dec
mov
bsr
add
pushf
shr
test
clc
mov
adc
add
bswap
mov
lea
pushf
jmp
mov
movb
pushl
ret
lea
jne
btr
mov
neg
adc
mov
or
sub
clc
lea
mov
rcl
mov
shl
and
seto
mov
shrd
mov
stc
movzbw
inc
shl
mov
pusha
movzbw
mov
rcr
cmp
sub
rol
and
btr
stc
mov
lea
cmc
inc
sar
clc
mov
shl
bts
sub
clc
and
bsr
bts
setno
stc
mov
call
pusha
pusha
mov
pushf
mov
mov
push
mov
jmp
movb
lea
ja
push
mov
jmp
add
pushf
movb
sub
call
movzbw
mov
xchg
movzbw
mov
movzbl
bswap
pushf
call
jmp
movsb
sbb
jne
cmp
mov
imul
iret
outsb
adc
outsl
in
jne
or
cmpb
cmpsb
les
xor
popa
jns
sub
pop
push
and
aaa
pop
nop
loopne
push
div
push
inc
sbb
sarl
shrb
dec
pop
xrelease
fs
in
push
bound
push
cwtl
lret
mov
push
add
loopne
mov
fwait
ret
loop
inc
add
cmp
mov
sahf
gs
jp
in
add
mov
push
mov
mov
xlat
fistps
hlt
je
stc
test
pop
sbb
sti
lret
push
inc
dec
icebp
cmpsb
push
jno
cmp
xchg
outsl
daa
negb
mov
push
pushf
cmp
dec
mov
inc
out
add
sbb
das
loopne
shlb
int3
xchg
and
pop
sub
add
icebp
adc
je
cmp
js
jp
fcoms
push
and
mov
repz
xchg
xor
out
pop
lret
ftst
push
adc
sti
dec
bound
jp
pop
adc
cmp
aam
jge
ret
jbe
mov
xchg
jne
xchg
jge
lret
push
jo
je
cmp
mov
enter
dec
xchg
mov
adc
add
adc
sarl
sbb
loop
jge
test
jge
cltd
sub
add
xor
icebp
pop
sbb
cmp
call
pop
jae
aas
cld
mov
sbb
or
jb
fs
mov
inc
mov
imul
and
lods
les
cmp
mov
push
mov
sbb
iret
pop
push
aam
fsts
jge
mov
fisubs
loopne
jg
arpl
dec
and
sbb
jp
repz
movl
cmp
pop
je
andb
scas
push
cmp
outsl
or
push
adc
pop
pusha
push
dec
ret
out
pop
and
iret
notb
addl
ss
bound
scas
cs
fldt
jbe
pusha
cs
decb
pop
mov
das
in
pop
push
mov
dec
out
pop
je
adc
xor
mov
pusha
movl
pushf
mov
push
lea
jmp
pushf
movzbw
movsbw
movb
bswap
mov
movzbw
jmp
jmp
mov
pushf
lea
jmp
jmp
cmp
push
call
pushf
lea
jne
xchg
bsr
sets
mov
sbb
sub
shl
adc
bts
bt
mov
cmp
cmp
clc
cmc
sub
test
bt
call
sub
jmp
ljmp
add
cmp
add
add
pop
and
add
jb
cmp
add
add
xor
sub
add
add
cmp
add
add
add
add
add
add
add
add
pop
cmp
loopne
sub
mov
sub
push
mov
add
cmp
add
add
pop
arpl
test
scas
in
mov
mov
jmp
dec
sarb
pushf
ja
test
es
leave
sbb
shrl
dec
test
cmp
mov
pop
popf
hlt
sub
jle
popa
jnp
push
push
adc
or
outsl
sub
cwtl
add
mov
and
inc
imul
scas
or
aaa
es
or
std
test
jle
cwtl
daa
push
cltd
cmp
mov
ficompl
pop
stos
lds
test
jl
add
mov
call
mov
adc
add
inc
outsl
dec
outsb
imul
add
jno
adc
scas
inc
dec
jno
cmp
add
arpl
jge
mov
mov
push
and
shl
fcompl
sbb
icebp
dec
sub
sar
scas
xchg
dec
sbb
and
daa
shll
jmp
pop
xor
sub
push
sbb
sbb
in
cmp
mov
sbb
xor
push
aas
stos
mov
push
sti
dec
adc
cmpsl
int
xchg
jbe
fnstsw
lock
adc
sbb
aam
inc
add
es
mov
fnsave
outsb
inc
mov
dec
sahf
cmp
add
lods
lock
lcall
in
xchg
cmp
mov
xor
lret
sarb
sbb
cmp
sub
or
or
mov
rcrl
or
push
sub
or
jg
xchg
mov
jecxz
add
int
adc
mov
cwtl
imul
arpl
sub
leave
push
in
cmp
sbb
mov
outsl
dec
inc
sbb
jb
dec
test
mov
xchg
iret
inc
inc
aad
adcl
jo
test
test
adc
mov
jns
push
add
pusha
mov
dec
shlb
push
fadds
dec
push
loopne
xchg
ret
fwait
ret
jmp
loop
popf
mov
cmp
inc
xchg
icebp
enter
fists
and
mov
jp
sub
or
xchg
adc
and
sub
and
xchg
dec
jnp
ficoml
les
push
sub
das
cs
ficoms
fsubr
rep
lea
mov
pushf
pushf
mov
setp
mov
pusha
jmp
not
stc
sub
jmp
bt
jmp
pusha
test
call
test
fiaddl
daa
mov
xorb
fstl
jno
adc
push
push
faddl
cmpsb
in
xor
dec
test
je
arpl
ret
and
dec
test
jno
or
daa
inc
cmpsb
and
cmc
mov
pushf
and
or
dec
lcall
push
mov
xor
aas
push
mov
pusha
sub
jecxz
stos
cmpsb
xchg
pop
xorl
cmp
jne
jmp
and
inc
xchg
xchg
sbb
dec
sbb
jl
mov
dec
push
fistps
mov
or
ds
fs
add
movsb
pop
cmc
dec
in
sbbb
jl
into
call
int
xchg
xor
mov
adc
in
int
nop
rcll
insb
pop
popa
sub
jbe
idiv
mov
jmp
mov
jle
cmp
enter
andb
movups
push
mov
icebp
add
mov
rcrl
fcomps
int
pop
int3
cmpl
xchg
xor
fsubl
test
mov
ja
adc
pop
xor
or
sti
jg
xchg
add
icebp
js
test
push
sub
scas
out
lods
mov
jno
jne
das
std
sti
jg
imul
ja
movsb
fisttpl
lods
dec
out
xchg
add
and
imul
aaa
movsl
dec
lds
add
fcompl
mov
test
mov
std
adc
jmp
call
pop
in
repnz
adc
lahf
mov
mov
cmp
daa
mov
add
or
movsb
and
sub
in
or
sub
aas
jne
add
sar
push
cmc
sub
test
bt
shl
jmp
xchg
cmp
cmp
jno
add
pop
jns
adcl
jb
jle
mov
lods
jne
outsl
and
dec
nop
dec
mov
push
loope
popw
fisttpll
mov
pop
stos
les
jns
mov
imul
inc
xchg
push
mov
add
mov
and
mov
test
mov
js
xchg
xor
hlt
sub
sub
add
pop
cmp
adc
mov
cmpsb
push
xchg
push
into
out
xor
or
dec
cmp
repnz
adc
cld
adc
adc
out
xor
pop
add
and
xor
scas
fs
xchg
sbb
push
or
mov
imul
bound
adc
push
mov
nop
out
mov
xchg
pop
mov
add
fimull
xlat
lea
jb
btr
rcr
movzbl
test
jmp
clc
mov
mov
ror
jmp
call
lea
movb
lea
jmp
jmp
push
push
pushf
lea
call
push
adc
push
pushf
lea
jb
cmp
xor
push
call
call
test
push
movl
shl
pusha
add
call
mov
pushf
bswap
lea
pusha
movb
movl
lea
call
clc
cmc
jmp
pusha
jmp
call
stc
xadd
pop
cmc
pop
aad
jmp
imul
clc
jmp
jmp
jg
mov
out
mov
xor
mov
sub
cmp
cs
xor
and
repnz
xchg
cmp
pop
test
iret
jg
sti
cmp
mov
mov
aad
imul
xor
mov
in
lcall
iret
sub
mov
mov
inc
mov
mov
sbb
cld
xor
add
pop
scas
enter
add
popa
insb
inc
jb
gs
and
cmp
jl
scas
mov
inc
jge
rcll
scas
cmpsb
add
subb
or
test
mov
outsl
mov
movsb
mov
imul
fs
mov
mov
iret
xor
pop
push
sub
rcrb
scas
loope
arpl
dec
out
push
stos
sbb
adc
das
jbe
add
stos
pushf
pop
mov
movzbw
pop
cwtl
pusha
setle
push
lea
mov
push
lea
call
call
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
movsbl
mov
pusha
push
call
lea
jb
pusha
cmp
pusha
cmpb
push
movb
pushf
push
lea
jne
or
mov
stc
pusha
add
bt
movzwl
shrd
mov
pushl
call
sbb
and
aam
cmpsb
pop
test
adc
lods
add
imul
sub
pop
mov
add
dec
mov
in
call
sbb
cs
roll
roll
sbb
xchg
shlb
jl
pop
repz
inc
bound
int3
xchg
jmp
xor
lahf
xchg
adc
das
xor
sbbb
xor
dec
inc
jecxz
mov
mov
test
fisubrs
imul
clc
iret
lds
daa
scas
sub
add
int3
dec
jae
push
call
ret
pop
cmp
lcall
les
mov
std
int3
pop
in
and
push
mov
pushf
repnz
enter
and
mov
xchg
test
rorb
rolb
cltd
lock
push
add
mov
xchg
xor
loop
clc
idivl
cmp
pop
pop
subl
cvtpi2ps
xor
inc
add
lret
pop
and
push
adc
cmc
xchg
dec
leave
lods
jbe
test
mov
jb
dec
xor
sub
cmc
andb
in
clc
out
cmpsb
mov
out
mov
insb
cmpsb
rcll
hlt
mov
rcll
stos
inc
dec
fldl
lods
mov
call
cmc
clc
pusha
add
pusha
cmpl
pushf
call
cmp
cmc
jmp
movl
push
pushf
push
lea
jmp
cmp
bt
cmp
cmp
pushf
pusha
lea
jb
sbb
bsr
mov
rol
mov
pusha
cmc
jmp
cmpb
jne
shll
shll
push
lods
ror
xor
rol
add
mov
pop
ret
ret
js
cmp
and
loop
fdivr
cmp
in
imul
mov
inc
div
mov
and
mov
sub
pop
mov
add
xlat
fdivrs
popa
in
cwtl
push
push
jo
or
sbb
mov
iret
gs
dec
ret
andb
sbb
dec
pop
adc
icebp
cmp
bnd
outsb
lods
movsb
pop
jge
cmpsb
or
dec
dec
or
add
cwtl
mov
pushf
lea
jmp
fistpl
inc
test
cmp
add
inc
xchg
test
push
mov
jg
fcomps
ret
in
push
dec
adc
cmc
std
mov
scas
push
adc
pcmpeqw
insb
cmp
dec
aas
sub
jle
pop
mov
sbbb
movb
cli
or
roll
outsl
jle
les
pop
cld
push
push
std
aaa
sub
xchg
mov
out
enter
test
lret
jae
xchg
in
pop
fisubl
inc
stos
rorl
adc
iret
add
inc
sbb
hlt
aaa
jecxz
mov
dec
fsubr
std
mov
inc
xchg
out
cmp
test
popf
push
and
mov
or
lock
add
push
test
xor
and
sti
mov
repz
cmp
xor
dec
out
mov
mull
xor
push
out
adc
sub
jl
mov
ret
inc
lahf
loopne
xor
inc
inc
test
inc
movlps
mov
testb
das
xchg
clc
jb
rcll
in
sbb
popf
mov
je
fwait
imul
loopne
sub
in
jg
cld
inc
and
cmpsl
data16
add
or
cli
int
rcr
mov
loop
cmp
cmpsl
rcrl
cmpsb
sbbb
popa
inc
sbb
mov
je
fidivrl
iret
ss
es
or
movsl
mov
mov
add
lea
call
pushf
pushf
lea
jb
movzbw
das
rcl
rol
movzbl
pusha
shr
pusha
btr
bt
cmc
imul
shl
bsr
sbb
lea
push
clc
clc
mov
cmp
add
xchg
stc
rcl
ror
mov
shld
mov
jmp
pushf
mov
sub
jg
cmc
cmc
pushf
cmp
jmp
pop
jmp
mov
pusha
xor
in
addr16
stos
inc
cmp
push
and
fisttpl
push
test
rcrl
scas
out
and
lods
fcmovnbe
jnp
xchg
add
popa
jge
jecxz
loopne
and
jo
ss
lods
lds
iret
dec
jmp
je
mov
fisubrs
inc
sbb
xchg
add
mov
out
and
sub
cmp
ret
bnd
sub
inc
jmp
test
sub
sarl
pop
ss
outsl
loopne
push
sbb
xchg
stc
jns
outsl
or
cmp
or
inc
xor
test
mov
movsb
cwtl
loopne
mov
pop
lea
mov
mov
pop
mov
push
inc
jg
push
and
lret
clc
das
sbb
enter
mov
pop
adc
jmp
jno
jmp
inc
push
mov
sbb
repz
stos
push
pop
sbb
inc
imul
out
and
fisubs
cmp
pop
lods
scas
scas
in
xchg
xchg
adc
inc
roll
pop
cmp
iret
pop
jge
aas
incb
pop
mov
dec
push
fisttpl
fisubrs
sbb
pop
ret
rolb
arpl
stc
cmp
jle
mov
xor
js
jmp
lock
mov
out
stos
push
xor
fisubrs
fsubrs
cmp
les
xchg
and
push
orl
inc
lock
inc
or
stc
sbb
sub
push
repz
dec
or
pop
imul
rolb
xor
mov
mov
inc
in
in
or
or
ds
or
je
pop
push
mov
sbb
movsl
push
aad
scas
add
and
dec
in
sbb
jl
data16
in
lcall
addr16
js
cli
gs
push
jnp,pt
mov
pushf
dec
and
add
add
cmp
pusha
call
lea
jb
cmc
cmpb
push
lea
jne
add
btr
mov
cmc
add
bt
cmp
push
bt
movzwl
rcr
btc
cmp
mov
cmp
cmp
bt
add
clc
movb
clc
mov
pusha
test
jmp
call
pushl
popl
clc
pusha
pusha
jmp
lea
jne
rol
mov
cmp
add
stc
movzwl
ror
shl
rcl
rol
mov
clc
cmp
pusha
add
sub
bt
mov
stc
clc
cmc
cmc
test
call
aas
gs
inc
test
mov
xor
sbb
xchg
iret
cmc
leave
in
or
jl
sub
hlt
and
das
imul
test
mov
push
test
lcall
fstpl
xchg
cli
xchg
xchg
int
inc
test
stos
mov
pop
stc
and
xchg
jno
sti
push
add
and
repnz
mov
insl
js
and
sub
pusha
pushf
pushf
jmp
jmp
movsl
jecxz
inc
test
cs
mov
das
dec
cmp
fcom
jecxz
adc
sahf
mov
add
f2xm1
add
mov
ja
pop
sbb
push
mov
xor
fsubs
xor
stos
adc
jecxz
mov
mov
aam
subb
lcall
and
cmp
lahf
ret
mov
xchg
aaa
out
xor
push
or
sub
sbb
int3
ds
bt
bt
pusha
cmp
jmp
in
outsb
inc
test
mov
fs
jle
aam
sub
popa
pusha
inc
jmp
dec
scas
fisttpl
lock
cli
xchg
or
popa
and
into
movsl
ja
lods
int3
push
repnz
fildll
and
and
hlt
call
insb
pop
inc
test
lds
ds
shlb
jae
imul
mov
out
popa
mov
sti
xchg
mov
xchg
xchg
cmpsb
cld
mov
inc
mov
jge
fcomip
shlb
imul
jb
mov
sti
in
sub
xor
pushf
js
push
fildl
nop
ret
mov
push
push
mov
enter
rorl
and
xlat
cli
add
mov
in
bound
clc
fwait
push
add
mov
call
call
mov
push
movb
mov
pushf
pushf
mov
pusha
pushf
pushl
ret
das
dec
jle
lods
movw
pushf
bts
rcl
ror
add
js
lea
btr
shl
xor
bts
movsbw
mov
rol
btc
cmc
add
dec
xadd
movsbw
xor
not
mov
je
mov
pusha
lods
clc
ror
call
lea
jae
pushf
pusha
cmc
sub
jmp
movl
movl
pusha
call
jmp
call
bswap
lea
lea
push
jmp
mov
push
lea
je
cmc
sub
cmp
js
pushf
cmp
push
call
sbb
pusha
push
call
jb
pushf
lea
jb
btr
rdtsc
inc
daa
movzbl
shrd
movzbw
shr
bt
movzbw
movzbw
jmp
lea
call
bswap
lea
pushf
movb
push
pushl
lea
jmp
shlb
dec
test
loope
lahf
mov
lock
movsl
in
clc
inc
lcall
ficompl
xchg
ss
dec
xor
hlt
add
ss
dec
ljmp
jne
push
xchg
pop
repz
sbb
or
sub
data16
cmpsb
xor
cmp
dec
mov
xchg
lock
inc
out
int
mov
xor
push
adc
lret
jmp
adc
nop
lahf
lea
ja
cmp
sar
sub
neg
adc
xor
add
neg
xor
and
mov
and
not
pusha
cmc
mov
call
movb
mov
call
lea
call
jmp
sbb
call
out
cmp
dec
test
shll
push
pop
push
mov
mov
pop
adc
rcl
rol
hlt
sub
aam
xor
mov
xor
pop
sbb
shlb
sub
js
sbb
ljmp
ljmp
das
lods
mov
ss
inc
imul
cs
push
inc
int3
push
mov
je
adc
in
mov
jae
fldenv
insl
pushf
movw
lea
call
push
pusha
call
jmp
jmp
pushf
pusha
pushl
lea
je
call
sete
lea
mov
mov
call
sbb
dec
test
mov
mov
std
adc
insl
mov
push
popa
cmp
stc
push
jle
dec
cmpsb
je
jecxz
popa
mov
mov
push
shrl
imul
mov
cmp
add
lods
enter
or
fwait
rorl
mov
popa
inc
lods
mov
jo
cwtl
fmuls
dec
fcompl
mov
stc
stos
mov
push
call
cmp
jbe
mov
in
rcll
shrb
push
and
call
clc
call
sub
push
mov
cmp
cmc
cmp
pushf
pushf
pushf
jmp
call
sbbb
test
ret
push
cmp
dec
iret
out
fldenv
in
xchg
pusha
jg
adc
leave
push
dec
gs
fs
sbb
ficomps
bound
jbe
dec
mov
push
lret
hlt
out
bswap
scas
jge
cmpsb
out
out
xchg
les
jecxz
lods
push
scas
or
add
dec
fsubrs
iret
cmp
call
push
clc
sbb
adc
push
dec
inc
dec
xor
cs
dec
dec
add
pushf
ljmp
adc
sub
mov
jo
jno
out
push
out
push
xchg
sbb
scas
mov
aaa
push
push
cwtl
mov
fdivrs
pop
pop
push
orb
iret
rorb
dec
pop
dec
lods
pop
mov
test
lea
xchg
jl
xchg
jnp
arpl
addl
adc
dec
sarl
loopne
pop
out
or
sub
sti
sbb
scas
in
mov
adc
iret
mov
cwtl
push
add
push
or
aas
into
scas
mov
jmp
sbb
jae
test
lahf
es
test
insb
out
mov
push
pop
shr
out
or
mov
into
sbb
sbb
xchg
and
aad
stc
lds
add
pushf
inc
sti
arpl
insl
addr16
fbstp
cltd
dec
mov
cmp
popa
xor
or
ja
ss
mov
repnz
push
ret
cmp
and
xchg
sub
sbb
dec
sahf
sub
lret
pop
pop
inc
scas
jecxz
mov
and
sbb
stos
ficoms
xorl
pop
cmp
push
call
lret
das
shll
sahf
inc
gs
dec
pop
leave
aaa
stc
inc
into
push
insl
mov
sub
mov
mov
loopne
clc
sbb
mov
mov
jmp
xchg
cmc
xchg
punpckhdq
inc
dec
ds
cmp
loopne
or
push
std
imul
adc
push
pop
fstp
or
jo
outsb
imulb
out
jg
pop
push
sbb
scas
lret
fildl
jne
pop
pop
pusha
mov
bnd
addr16
fdivrs
xlat
jg
sti
jb
pushf
ljmp
xchg
sbb
lea
dec
lea
dec
aaa
mov
nop
clc
insl
fs
out
fbstp
fistpll
inc
ss
je
jbe
imul
sbb
popf
xor
out
inc
fstps
add
mov
push
pop
je
stos
fs
inc
test
pop
es
or
mov
insl
std
sub
frstor
bound
xor
movsl
cli
or
shlb
push
jne
xchg
imul
jge
les
mov
dec
ss
movl
mov
mov
pop
insl
aas
shrb
xchg
fwait
sbb
pop
xor
out
lret
or
add
lods
cmpsb
mov
push
xchg
movsb
sub
jno
adc
cmpsl
and
enter
mov
xor
js
es
mov
and
push
push
popf
cmpsb
mov
je
sbb
addl
shlb
push
rorb
mov
call
out
test
in
jae
jmp
pop
imul
jnp
push
imul
xor
sub
xchg
cwtl
insb
lods
add
ret
add
adc
dec
cmp
shll
fs
gs
xor
cmp
cli
loope
fisubrl
fidivrs
push
aaa
adc
lods
insb
cld
ret
mov
jl
mov
cmp
int
into
fildl
mov
adc
js
cmp
and
dec
mov
cmp
mov
inc
in
aam
mov
pop
incl
fiaddl
mov
int3
fincstp
rcr
pop
in
mov
ds
outsb
push
pusha
out
fcoms
icebp
mov
into
add
lock
adc
push
in
int3
xchg
ret
jge
pop
aaa
mov
lea
xor
adc
mov
mov
lea
push
jge
sub
pop
xchg
xchg
sbb
sahf
outsb
adc
or
sarb
lock
adcl
shlb
or
lods
std
data16
xchg
test
cwtl
push
movsl
fstl
sub
jo
lds
jb
hlt
lret
mov
inc
imul
inc
sub
xchg
xor
inc
repnz
inc
xchg
mov
add
gs
mov
cltd
ret
int
mov
in
push
loope
jg
int
mov
mov
enter
push
sub
es
out
jno
pop
out
mov
andb
js
out
decl
pushf
std
push
aas
push
dec
mov
es
jno
repz
icebp
push
cmpsb
popl
mov
cmpsl
or
or
jecxz
mov
scas
pop
push
shlb
ret
pop
cli
jmp
insb
adc
fs
fs
fsubs
cld
daa
je
adc
mov
mov
sub
das
inc
loopne
sub
xchg
mov
orl
and
out
ljmp
jns
lods
lahf
mov
fs
jno
xchg
add
dec
dec
filds
insl
xor
ret
push
and
data16
xor
cmp
sbb
cwtl
leave
cmp
int3
popf
in
movsl
mov
leave
xchg
cmovne
cwtl
ss
lcall
pop
mov
mov
into
mov
dec
xorb
add
mov
mov
fwait
push
jae
adc
pop
cld
test
lret
inc
dec
push
call
loopne
out
xor
pop
fs
lods
movsb
in
and
int3
push
sbbb
add
fbld
into
popf
lcall
loopne
xor
fimuls
pusha
stos
icebp
mov
je
pop
cwtl
jno
js
orb
nop
icebp
addr16
fcoms
adc
mov
outsl
cmp
test
jae
mov
gs
pushf
xchg
mov
cli
mov
add
xor
inc
ja
stos
mov
inc
insl
sbb
imul
mov
shlb
hlt
sbb
cs
nop
xchg
cmp
ret
cmp
push
daa
mov
mov
in
sbb
jo
icebp
out
iret
iret
rcrl
cltd
and
push
dec
lret
mov
clc
inc
push
sbb
aas
xchg
and
sbb
cmp
add
sub
dec
fnsave
mov
adc
xor
ja
pop
push
push
cmp
addr16
mov
or
jmp
pop
faddl
mov
call
cltd
mov
dec
bound
inc
fwait
ljmp
fwait
popf
hlt
push
ljmp
mov
in
sahf
push
and
lret
xor
push
add
jno
mov
jp
sbb
cwtl
add
ret
sbb
sub
popf
fldcw
push
in
pop
inc
rcr
mov
or
or
out
inc
cmpsl
ss
sub
cmc
xchg
iret
and
xor
pop
jecxz
add
fists
outsb
cltd
stos
pop
jmp
jl
pop
int3
sbb
or
fisttpll
ljmp
jp
xor
shrl
fst
sub
mov
stc
adc
xchg
ds
pop
jle
movsl
sbb
add
sti
in
rcll
int
mov
loope
jl
mov
pop
arpl
mov
sbb
push
add
stc
pop
movsb
mov
mov
xor
sub
outsb
inc
dec
pop
add
and
nop
sub
imul
lock
fimuls
lods
popf
lcall
xchg
out
in
add
push
addl
xchg
or
stc
test
aam
pushf
sbb
cmp
add
xchg
pop
mov
inc
cwtl
es
and
mov
push
clc
lods
sbb
push
pop
dec
sub
in
pop
cwtl
or
mov
xchg
cmp
test
daa
and
leave
xor
fucomip
jae
push
daa
iret
ret
insl
mov
add
sti
push
rcl
and
xor
jmp
xor
arpl
mov
xor
jae
cmp
inc
cmp
add
and
adc
imulb
in
sti
out
pop
lock
lock
xor
out
inc
adc
out
clc
sbb
or
cmpsl
repnz
mov
add
leave
jge
jle
mov
scas
shrl
pop
push
xchg
clc
jno
jb
lret
inc
dec
jecxz
outsl
js
pusha
dec
cwtl
push
stos
out
mov
xlat
xchg
cmpsl
popf
test
push
push
xchg
cmpsb
jb
pop
divb
mov
xor
xchg
clc
add
pop
push
cld
cltd
inc
cli
pusha
sub
scas
sub
mov
sub
xchg
xor
jge
mov
mov
cmp
or
sub
data16
inc
push
sbb
cmp
jae
xchg
sahf
mov
pop
sub
pop
aas
cmp
out
and
sub
sub
into
stc
push
insl
stos
or
push
xor
xchg
mov
or
ret
or
mov
scas
mov
test
stc
jne
sarb
insl
push
insl
loopne
adc
movsl
ja
mov
sbb
dec
dec
mov
sbb
sub
cmpsb
andl
xor
mov
in
fxch
pop
gs
aas
cmpsl
lret
sbb
push
push
cli
adc
and
insb
lcall
and
inc
and
adc
jp
add
cmp
movsb
in
dec
adc
sub
sahf
mov
mov
mov
sbb
lahf
or
mov
dec
cs
enter
adc
cli
mov
test
xchg
add
pop
dec
insb
insb
sub
shrl
push
xchg
aam
xchg
pop
mov
mov
jns
xor
sub
push
pop
int3
inc
jbe
in
and
cmpsl
leave
lar
inc
ficompl
aad
idivl
aad
dec
add
pop
dec
pop
xor
lea
jge
test
inc
sbb
mov
jo
dec
dec
inc
lock
cwtl
dec
push
in
iret
push
jns
cmc
dec
lock
lds
jnp
lods
ret
adc
data16
sbb
mov
lds
pusha
sub
dec
jnp
scas
inc
and
stos
out
sub
test
test
cli
lods
jno
inc
jae
mov
push
add
iret
jnp
pop
xor
repz
push
aad
out
xor
sbb
push
pop
shrl
xor
mov
std
scas
or
push
add
and
sbb
pop
aam
and
cmp
ja
pop
or
and
mov
test
xchg
inc
popf
push
mov
mov
push
mov
nopl
pop
movsl
cwtl
xchg
pusha
and
push
es
mov
add
sbb
pop
jns
fistl
adc
mov
movsb
es
jecxz
lods
icebp
nop
pop
jae
mov
popa
insb
push
test
xchg
inc
daa
outsb
test
aas
mov
jbe
jne
sbb
mov
inc
loopne
pop
xor
jl
and
sub
inc
jmp
push
inc
addr16
push
cmc
in
shll
ficoml
ret
and
and
dec
xor
jge
sub
int3
fcoms
jae
cmp
or
mov
fistps
rorb
ja
aas
mov
jle
or
or
mov
movb
cmp
push
shl
pushf
lea
pusha
jmp
jge
mov
sub
mov
mov
lea
outsb
pop
lret
fdivrs
pop
cmp
sub
loop
fcoml
testb
cmp
push
sti
bound
shrb
lcall
pop
mov
sbbb
add
lds
jle
adc
inc
sti
xchg
xorb
shlb
xchg
dec
or
call
jnp
jp
or
mov
sub
jle
or
rcrb
sub
call
or
call
pusha
pushl
lea
jbe
xor
dec
test
sar
sub
not
shr
call
sub
lahf
call
mov
cmp
insl
pusha
inc
push
adc
push
jl
xchg
loope
inc
or
insb
inc
arpl
shr
mov
out
pushf
pop
addr16
cmc
imul
mov
inc
popf
fcompl
cmp
mov
sbb
mov
and
dec
or
rolb
xor
ds
dec
jmp
or
mov
sahf
fs
ret
mov
xchg
daa
sbb
xchg
hlt
movzbl
mov
jmp
sub
setnp
call
pusha
sbb
call
cmp
cmp
test
fcompl
fld
jecxz
sbb
jnp
insb
mov
test
push
xor
dec
pushf
fmuls
xlat
and
mov
cs
adc
je
dec
push
rolb
add
and
sub
mov
cmp
add
mov
popa
adc
lret
repnz
lret
in
dec
arpl
pop
pop
xchg
sub
xchg
lret
jns
pop
fisttps
orl
xchg
xchg
loopne
daa
cmp
push
repz
dec
and
jl
add
xchg
jbe
dec
sub
xchg
leavew
mov
xchg
xor
adc
jbe
mov
xor
jae
gs
cltd
loopne
dec
xor
pusha
lea
jmp
call
sbbb
js
shlb
je
jp
js
cmp
mov
nop
shlb
imul
in
and
sbb
popa
xchg
fldenv
add
mov
pop
jnp
sub
pushf
pop
dec
fimuls
das
add
adc
fwait
mov
mov
and
inc
sti
pushf
cmp
scas
mov
jae
inc
sub
stos
pop
clc
icebp
loopne
mov
and
mov
ljmp
pop
mov
ficompl
shl
pushf
clc
push
mov
clc
cmp
push
pushf
lea
jae
pushf
pushf
clc
sub
mov
cwtl
lea
movb
mov
lea
call
clc
btc
sar
pusha
add
clc
pusha
daa
daa
mov
cwtl
shr
mov
movb
cmp
push
sbb
jmp
lea
call
stc
cmp
pushf
push
mov
clc
jmp
lea
jb
aad
neg
add
bsr
mov
and
xchg
xadd
not
mov
pushf
add
jno
mov
btr
add
lea
push
bswap
setb
lea
setae
lea
jmp
mov
push
pop
test
add
loopne
aad
jl
shll
call
lods
sub
cmp
outsb
adc
push
jecxz
and
in
jae
sub
scas
cmp
or
adc
adc
test
or
outsl
sbb
les
lods
and
das
shrd
shl
rcl
mov
mov
btc
mov
bts
or
shr
mov
pusha
clc
stc
bt
xor
bt
jmp
call
dec
jecxz
pop
test
jne
pop
xor
xchg
jbe
mov
xchg
push
push
iret
outsb
shrb
js
xor
push
rol
cmp
lds
mov
xchg
dec
xor
sub
loopne
repz
dec
les
xor
push
push
enter
out
scas
cmp
push
or
sti
imul
in
mov
inc
push
loopne
outsb
sub
add
dec
xor
divb
push
mov
add
jecxz
lahf
andb
push
push
mov
or
pop
push
stc
mov
jne
mov
and
shl
mov
pusha
cmp
cmpb
call
xchg
push
out
inc
je
lock
adc
ret
divl
xchg
mov
jbe
mov
stos
mov
out
sahf
insl
scas
push
fmull
jb
add
mov
push
in
out
out
pop
std
das
push
jle
adc
cmp
inc
sti
mov
fisttpll
or
and
outsl
mulb
mov
rolb
pop
mov
add
btr
bsr
shl
mov
test
bt
test
test
movb
lea
je
btc
and
dec
add
btr
shld
mov
mov
stc
add
pusha
test
mov
movzbw
pushf
mov
test
bt
cmp
pusha
pushf
jmp
pusha
pushf
jmp
mov
cmp
mov
xchg
lahf
cmp
sbb
jmp
push
out
and
pop
lods
jae
xchg
sbb
dec
inc
inc
push
and
sbb
sub
cs
enter
push
iret
mov
loop
and
xor
or
push
sar
test
test
mov
fdivl
or
outsb
fs
fsubp
adc
outsb
sub
and
add
shrl
mov
adc
lds
adc
sbb
cli
jo
call
out
push
pop
sub
xchg
sub
out
cmp
push
pop
loop
andb
cmp
cmp
jo
jno
scas
sub
daa
out
and
std
xor
pop
test
xchg
fs
loop
int3
pop
out
adc
cmp
faddl
fucom
ja
and
inc
and
dec
std
dec
mov
adc
push
loopne
out
adc
or
pop
sbb
fbstp
popf
mov
shll
sbb
les
ret
pop
pop
imul
cmp
fsubrs
pop
xchg
sub
mov
cwtl
stos
lahf
push
loope
cs
xchg
into
insl
jne
iret
mov
mov
dec
iret
push
cmp
mov
lock
jbe
popa
decl
sub
lds
mov
or
sbb
pop
leave
lcall
loop
ret
sub
cmp
pop
add
inc
sbb
inc
adc
mov
dec
not
mov
push
clc
cmc
cmp
add
push
pushf
movb
mov
lea
jmp
call
lea
je
pusha
cmc
sub
test
bt
test
clc
cmp
pushf
jmp
movzbw
pop
mov
push
pushl
pushl
ret
mov
call
cmp
pushl
sub
cmc
stc
push
clc
shl
mov
cmp
mov
stc
jmp
lea
jne
rcr
dec
movsbl
jmp
pop
push
sbb
test
add
push
sbb
sahf
xlat
lcall
and
pop
or
sbb
mov
rcl
shrl
mov
loope,pn
push
or
jo
mov
dec
std
fnstsw
loopne
cmc
fdivrp
mov
mov
push
aam
jno
addr16
mov
in
push
add
test
adc
cmp
mov
jge
and
jmp
aam
sub
adc
add
arpl
and
sub
insb
inc
faddl
lcall
pop
jecxz
pop
popf
xor
xchg
hlt
cmp
sub
call
sahf
iret
test
insb
test
mov
mov
add
mov
roll
cmc
fcomps
sbb
jp
setno
pop
lea
movsbw
lea
movb
movb
mov
call
lea
ja
pushf
pusha
push
imul
bt
add
pushf
movb
lea
jmp
cmc
stc
rol
stc
not
bt
bt
call
cmpb
pushf
jmp
jmp
bsr
mov
seto
mov
movl
mov
xor
pusha
repnz
call
lea
pushf
movb
movl
movb
lea
jmp
cmp
pushl
popl
push
mov
clc
push
cmp
push
pushf
jmp
or
dec
push
add
push
jge
dec
dec
and
dec
jmp
cwtl
loop
or
push
mov
lods
mov
inc
dec
pop
add
mov
dec
inc
mov
btc
bsr
not
call
bt
cmp
mov
pushf
call
adcb
imul
jo
in
dec
leave
lcall
inc
cmpsb
xchg
inc
pushl
inc
cltd
inc
jg
adc
mov
inc
jp
ret
lods
push
cmp
sub
out
ffreep
jns
pop
push
mov
sbb
jns
scas
scas
cmp
fcoms
or
movl
push
jecxz
push
sbb
in
inc
push
xchg
jecxz
hlt
gs
les
mov
repz
test
mov
nop
adc
mov
mov
arpl
mov
dec
inc
ja
or
lret
ud1
mov
and
rorl
or
jle
push
stos
sub
fwait
in
pop
xchg
push
lods
push
mov
popf
sub
xchg
sbb
xchg
popf
push
sub
xchg
sub
add
add
push
lea
jae
cmc
bt
jmp
cmp
jmp
push
push
and
cmp
adc
sbb
dec
sti
mov
push
mov
dec
jo
loope
sbb
rcrl
pop
xor
stos
mov
mov
out
mov
fisttpl
xchg
add
cmpsl
pop
mov
in
nop
gs
dec
mov
xlat
sub
insb
jae
jl,pn
pushf
adc
call
add
movsbw
pop
mov
call
scas
stc
hlt
and
cmp
ret
xchg
cmpsb
aad
clts
jns
addr16
push
mov
lcall
mov
mov
pop
inc
push
xchg
cmp
repz
or
sarl
testb
jns
lret
ds
shll
push
cmpsb
arpl
jnp
cmp
rorl
mov
popa
pusha
out
sbb
mov
jge
pop
out
mov
push
push
sahf
fs
xor
mov
adc
adc
xlat
and
arpl
and
jge
sti
jg
repnz
lcall
cmpsb
jle
nop
pop
pop
mov
in
adc
sub
pop
xor
mov
mov
inc
xor
test
bound
xor
jne
pushf
and
js
cmp
jae
fcompl
das
scas
dec
fistps
cmp
imulb
dec
movsl
mov
mov
mov
push
or
jl
cmp
jbe
inc
sbb
pushf
stos
inc
mov
jecxz
xor
push
inc
sub
push
mov
mov
or
inc
xor
inc
sub
sub
fwait
pusha
sbb
add
jge
mov
out
iret
sahf
pop
xchg
add
mov
fimuls
xor
sarl
jmp
mov
popf
stc
iret
pusha
jo
outsl
inc
sahf
cmc
sti
sub
jmp
xor
insb
sbb
jnp
mov
repz
jmp
ret
sub
adc
pop
fisubrs
push
lods
or
loope
je
shlb
ret
ds
pop
xchg
add
or
into
jmp
mov
cwtl
movsbw
lea
pushf
pusha
jmp
test
pushf
add
stc
test
mov
bt
test
push
lea
je
pusha
pushf
pusha
pushf
lea
jmp
push
clc
and
sar
pop
pop
xor
std
pop
aam
jo
push
or
add
in
mov
and
push
and
fmuls
pop
sbb
mov
mov
gs
shr
mov
mov
rcrb
cwtl
add
rorb
jb
in
xchg
fwait
sbb
push
mov
dec
xorb
or
mov
mov
stc
daa
btc
ror
add
pushf
not
seto
setb
bswap
jmp
rcll
test
mov
imul
popf
imul
jne
popa
xorl
jne
mov
popf
imul
insl
popf
test
mov
popf
mov
mov
inc
aaa
cmc
repnz
push
lea
jne
shl
shrd
bsf
mov
rol
shrd
sub
sbb
shrd
pushf
movzbl
lea
stc
sub
jmp
mov
pushf
pusha
call
fcoml
and
idivl
add
xchg
sbb
outsb
add
ja
rorl
inc
js
imul
sarb
out
push
xor
rol
mov
sahf
lods
mov
cmovbe
pop
lret
and
sahf
rcrl
add
cwtl
fbld
sub
pop
fwait
lds
pop
jbe
sbb
icebp
aad
fidivrl
xchg
movsl
inc
sti
push
enter
adc
pop
jnp
imul
cmpsl
lret
push
call
scas
adc
push
in
xorl
add
or
add
adc
ljmp
clc
pop
ret
push
lock
std
std
mov
jl
dec
cmp
outsl
cmp
mov
pop
add
xor
ficomps
dec
lea
sub
rcr
inc
sbb
pop
lret
add
in
daa
adc
test
inc
fstl
add
hlt
inc
push
sbb
xchg
popw
mov
js
jb
push
enter
aad
pop
lret
test
test
inc
jbe
lods
push
repnz
dec
insl
jo
mov
scas
lea
lea
jno
bnd
test
dec
cmp
push
lcall
xchg
fsubl
nop
enter
ljmp
in
mov
into
lahf
fcompl
xchg
outsb
pop
mov
lods
sub
cs
xchg
loopne
jns
inc
pop
add
sbb
imul
jg
mov
cli
mov
clc
mov
insb
test
mov
ds
sbb
xchg
xchg
fwait
and
jno
sbb
xchg
cmp
test
jns
xchg
xchg
rorl
test
sbbb
xchg
jnp
test
mov
lret
and
lods
ds
test
mov
xchg
xchg
test
pop
adc
lea
dec
xchg
xchg
arpl
push
imul
mov
fldt
pop
add
lea
js
lods
insb
enter
and
sbb
aam
xchg
mov
cmp
xchg
xchg
pop
and
mov
cmp
test
inc
into
mov
fidivl
or
int
xchg
mov
ljmpw
xchg
mov
ds
adc
sbb
test
push
xchg
xchg
or
push
jno
adc
lea
adc
lea
mov
xchg
mov
dec
xchg
add
cmpl
inc
test
and
adc
xchg
adc
push
test
lahf
mov
sbbl
push
cmp
aam
sub
cmp
push
sub
js
and
push
push
ljmp
cmp
ficoml
add
sub
shr
mov
push
pop
jns
xor
jmp
test
fmul
fstp
mov
dec
pop
push
es
out
clc
aas
inc
int3
aas
insl
add
mov
push
cld
insl
test
shrl
and
lcall
jp
or
dec
add
dec
mov
data16
xor
mov
mov
andl
fs
jb
shr
mov
shld
bsf
bts
mov
cmc
cmc
call
mov
lea
call
push
test
mov
cmp
clc
cmp
call
lea
jb
bt
push
cmpb
movb
lea
jne
mov
mov
jmp
movzbw
bsr
mov
cmc
not
rol
push
mov
xadd
add
movzbw
call
push
lods
call
call
lea
lea
jmp
rol
call
movl
pushf
pusha
lea
jmp
lea
jne
bswap
jae
mov
bt
stc
pushf
movb
add
clc
movzwl
lea
bswap
bts
mov
pushf
cmc
add
cmp
lea
jg
mov
stc
stc
pusha
test
pushf
lea
je
cmc
add
pusha
clc
call
xchg
jmp
lea
jbe
sar
sub
call
adc
clc
cmp
sub
stc
pushf
jmp
xchg
test
aad
push
dec
lds
jae
popf
mov
and
ds
pusha
jae
outsb
inc
xchg
loopne
fs
and
clc
inc
jge
aad
xor
out
inc
push
adc
dec
dec
test
xchg
fwait
negl
sub
mov
cmp
jb
aam
leave
mov
repnz
insb
testl
insb
mov
sub
cmc
push
clc
clc
not
pusha
sub
clc
stc
cmp
lahf
pop
lea
cwtl
call
rcll
popf
imul
popa
xorl
jne
mov
popf
imul
insl
popf
test
mov
popf
mov
mov
inc
aaa
pushf
pushl
lea
jl
pushf
mov
bswap
movsbw
cwtl
lea
pusha
call
mov
cmp
fidivrl
mov
ret
scas
push
jle
nop
roll
repz
cmp
scas
mov
push
push
push
shll
out
loopne
mov
add
popf
mov
push
bound
cmc
cmp
enter
or
ja
lea
movsl
jo
push
mov
push
pop
cmp
std
mov
test
fs
jb
bt
inc
test
rol
movzbl
not
shr
call
jmp
pushf
pushf
pusha
movl
jmp
jmp
mov
push
lods
jmp
pusha
jmp
push
cwtl
mov
lea
call
testb
test
xchg
cmp
mov
call
pop
and
fs
ficoms
out
mov
in
in
std
push
fiadds
ss
mov
lret
out
push
jb
mov
int3
ljmp
popa
inc
push
cs
lock
and
jmp
test
aaa
jle
subb
and
xor
pop
mov
push
js
xchg
pop
mov
jne
and
lods
jmp
bound
sbb
lret
fildll
and
push
mov
cmp
fcmovne
cli
jle
mov
into
cmpsb
out
test
mov
fwait
dec
sbb
into
je
sub
push
sbb
dec
sub
pop
push
sti
xor
sbb
sti
cmp
sub
lahf
xor
and
inc
fisubrs
sbb
in
mov
dec
push
rorl
cmp
mov
mov
cmp
and
dec
sub
push
mov
push
pusha
int3
xchg
mulb
test
pop
clc
dec
add
int3
movl
vmovlps
mov
or
fwait
imul
pop
out
pop
out
push
inc
sbb
push
and
xchg
mov
imul
dec
outsl
adc
mov
xor
xchg
xchg
mulb
imul
pop
mov
pop
inc
call
test
jmp
jg
push
sub
stos
inc
jle
and
fisubrl
imul
or
dec
xor
sub
xchg
call
push
shrb
cmpsb
add
xor
mov
fisubrl
sub
and
sbbb
jge
lahf
lret
mov
push
dec
or
dec
pop
and
mov
lock
jle
sub
test
insb
ret
loop
inc
xor
cmp
fwait
jp
xchg
cs
push
popa
outsb
lss
xchg
jae
repnz
shl
adc
and
pop
xor
mov
decl
cmc
push
in
pushl
ret
dec
pushf
leave
jns
pop
lahf
out
orl
add
xchg
xchg
repz
inc
sbb
jno
inc
std
jbe
test
sbb
daa
dec
fdivl
ret
xor
dec
xchg
or
mov
xchg
inc
cmp
dec
aam
jne
scas
test
and
shl
rcr
mov
jmp
add
ljmp
add
cmp
add
add
pop
and
add
jb
cmp
add
add
xor
sub
add
add
cmp
add
add
add
add
add
add
add
add
pop
cmp
loopne
sub
mov
sub
push
mov
add
cmp
add
add
add
add
test
pushf
movl
push
mov
pushf
pusha
lea
jmp
popf
pop
dec
aaa
test
shll
insl
pushf
mov
test
fs
fsubs
add
jmp
mov
test
push
pop
push
dec
and
adc
imul
cmp
lods
jmp
in
dec
mov
stc
inc
push
cmp
cmp
in
jg
pop
repz
fcoms
jne
out
xor
adc
dec
dec
aas
pushf
push
lea
jae
pusha
test
mov
adc
sar
adc
mov
bt
xor
shld
sar
mov
pushf
movsbl
cmp
call
lea
ja
pushf
stc
call
sbb
test
mov
jno
mov
pop
xor
fwait
jmp
pop
fsubr
rcrb
add
pusha
adc
out
pop
push
or
mov
cmp
jp
mov
pcmpgtd
jae
adc
cmp
insl
movsb
enter
push
mov
ret
fdivrl
pushf
stc
mov
lret
add
loopne
add
push
sti
xor
popf
fisttps
add
push
movl
pushf
push
mov
pusha
pushl
ret
popf
and
xor
clc
dec
xor
in
or
lss
popa
scas
ja
and
outsb
f2xm1
cmp
xchg
sbb
sbb
and
and
icebp
cltd
add
sti
lret
adc
cld
popf
and
push
das
mov
xchg
and
mov
loop
dec
into
pop
mov
add
xchg
lock
shrl
aad
dec
out
mov
and
xlat
lret
dec
cmovno
sub
or
adc
stc
clc
cmp
jmp
pop
bound
push
pop
pusha
jg
jns
sbb
and
lods
rcrl
cmp
pop
int
inc
xor
int
mov
mov
sub
xchg
fwait
in
jno
jle
pop
imul
and
rcll
hlt
xor
mov
jbe
std
sbb
or
dec
pop
test
aad
or
mov
lods
ret
cmp
mov
mov
xor
inc
enter
jns
int3
sbb
jge
mov
mov
sbb
pop
dec
pop
stc
addr16
xlat
xor
std
int3
adc
mov
mov
enter
lcall
and
adcb
js
cmpsl
push
adc
lea
into
xchg
popa
jo
jae
or
mov
xor
xor
xlat
xchg
loope
jno
add
int
int3
rol
and
cltd
arpl
and
repnz
repz
shrl
sbb
mov
jne
mov
pop
sbb
cmp
sbb
repz
pop
lea
xchg
add
ljmp
aam
in
xchg
jb
movsb
inc
add
mov
xor
xor
iret
ja
lcall
in
aam
lods
xchg
mov
inc
mov
xor
xor
sub
push
mov
xchg
mov
xchg
lods
jmp
ds
xor
jp
movsb
fwait
loop
testl
pop
push
out
sbb
in
das
dec
xchg
mov
push
mov
sbb
sub
and
jo
mov
push
xor
pop
mov
pop
push
xor
mov
into
xor
lahf
shrl
sub
test
test
shl
bt
push
clc
pushf
mov
jmp
mov
cmp
jne
outsl
mov
test
shr
stc
jge
push
icebp
clc
adc
lock
rol
and
shr
je
xor
inc
fbstp
sbb
mov
btl
cmp
jae
clc
jb
lods
pop
mov
mov
clc
fldt
shlb
and
sti
jle
xor
push
xor
push
insb
fwait
rorl
xchg
xor
mov
cmp
mov
es
into
xor
and
push
xchg
rcrl
xchg
jge
dec
out
sub
js
xor
mov
inc
bound
or
stc
add
stc
or
cmc
xor
lea
jo
mov
pop
subb
push
adc
xchg
js
xor
inc
bound
xor
mov
or
faddl
add
popa
rcr
cmp
scas
add
ds
add
push
jo
mov
pop
js
les
ljmp
call
pop
jns
jmp
shll
mov
push
inc
inc
pop
rorl
lea
orl
push
mov
xor
popa
add
icebp
push
adc
aaa
ret
xchg
mov
clc
sarb
adc
popa
mov
and
cmp
fimull
icebp
xor
xor
adc
in
push
dec
out
jg
add
cmp
sub
jno
inc
pop
xchg
sbb
out
fisubrs
xchg
fcmovnbe
jle
xchg
mov
aaa
jne
push
or
sbb
out
sbb
adc
lea
insb
or
scas
mov
inc
fistps
mov
jge
and
hlt
jae
loope
out
cltd
cld
cmp
adc
mov
loope
lcall
popf
inc
popf
mov
inc
popf
jne
mov
jns
jne
mov
dec
push
xor
lock
fistpll
sub
bswap
movl
outsb
cmp
pop
rorl
inc
or
jecxz
or
ret
xchg
jns
std
pop
je
xor
mov
sbb
xor
ret
push
xchg
xchg
out
stos
xchg
pop
push
ljmp
cmp
ljmp
fisttpl
ds
pop
call
lods
testb
push
pop
pop
and
xchg
lock
push
gs
aas
inc
xchg
cmc
mov
cmp
inc
negl
fnstenv
inc
cmp
shl
rorb
xchg
rorb
xor
pushf
lea
jmp
fistpll
test
cmc
xchg
mov
add
inc
or
in
out
cli
push
dec
push
sub
add
iret
mov
jmp
mov
sbb
in
or
push
dec
scas
movsb
xor
dec
xchg
cmp
xchg
jns
or
in
sbb
xchg
xor
xchg
daa
testl
add
mov
cmp
inc
mov
pushf
mov
xchg
jmp
cmp
aas
test
mov
jp
pop
inc
rcrl
pop
push
xchg
xor
mov
insb
leave
jp
jl
push
mov
jae
mulb
or
in
mov
pop
or
push
adcl
insl
sub
outsl
jae
sub
jg
jge
sbb
out
jbe
in
or
jge
mov
xchg
and
adc
test
out
or
cmp
add
outsb
sarb
ret
dec
mov
xchg
push
jecxz
push
pop
into
dec
faddl
jge
adcl
sti
xor
dec
insb
cmp
lcall
cmp
add
mov
or
inc
lea
mov
inc
xchg
stos
mov
xchg
lcall
shrb
mov
mov
and
cmpsb
or
jo
and
sahf
lods
out
cmp
loop
inc
push
ficoml
leave
pop
fcoms
sti
arpl
mov
lods
out
test
cmp
inc
xchg
jp
push
lods
daa
adc
sarl
xor
adc
js
mov
mov
add
loope
pushl
clc
not
clc
clc
ror
mov
cmp
neg
clc
push
jmp
pushf
lea
je
bt
sub
clc
clc
cmp
pusha
mov
lea
ja
pushf
imul
call
sub
rol
bswap
mov
rcr
pushf
shr
add
call
movl
pushf
push
push
lea
jmp
lcall
push
pop
dec
push
pop
in
sbb
daa
push
scas
popa
and
rorb
mov
jmp
jge
loopne
fstl
rcll
addb
sub
lea
sub
xchg
data16
or
ffree
mov
jecxz
popf
inc
pop
js
dec
das
xor
in
jbe
inc
enter
aas
popf
mov
fimull
fldl
icebp
js
xchg
pop
mov
daa
sub
and
pop
sub
es
and
cmp
test
mov
dec
push
jl
mov
xor
cltd
sbb
imul
mov
add
hlt
or
xor
lret
adc
jl
test
cs
mov
stc
cmpsb
in
add
popf
lods
cmp
cmp
mov
pop
jbe
mov
mov
test
incb
movsb
daa
cmpsb
jns
fwait
mov
push
push
fdiv
cmp
call
adc
ljmp
stc
pop
ret
enter
out
cltd
and
out
outsb
loope
sahf
or
or
lock
ds
xchg
fiaddl
add
orl
or
jbe
mov
add
and
fsubl
call
mov
pop
and
push
fs
lods
mov
icebp
cmp
pop
jmp
sbb
mov
fmuls
cs
push
lret
pusha
pop
stos
call
xor
lret
cwtl
pop
pushf
clc
int
xchg
leave
sub
movsb
outsb
mov
lea
fmuls
xor
cmp
sub
inc
imul
mov
lods
test
daa
xchg
sahf
add
enter
dec
xchg
cpuid
sbb
push
addr16
addl
jmp
rorl
mov
cmc
pop
ja
mov
mov
jg
cmp
imul
push
cmp
mov
fdivrs
stc
jge
jg
aaa
inc
sbb
dec
cltd
scas
cmp
jmp
out
inc
or
jns
out
cld
cmp
in
vpsubb
popa
mov
out
xor
xor
cltd
popa
loopne
sti
sbbb
jbe
jo
inc
add
andl
jbe
scas
sarb
ret
xor
adc
and
mov
loopne
scas
inc
dec
xchg
rolb
xor
adc
leave
ds
sarl
mov
mov
repz
lret
jno
bound
or
xchg
jno
ret
imul
add
mov
jns
hlt
bound
xlat
sub
jae
fcmovnu
mov
test
icebp
pop
mov
mov
loop
pop
push
call
cli
in
sbb
ret
mov
std
adc
cltd
push
lds
ror
mov
cs
pop
mov
lock
xchg
cs
push
out
stc
jae
mov
loope
call
in
std
push
inc
xor
icebp
clc
mov
mov
push
mov
mov
scas
cli
enter
jb
sub
and
repz
lea
push
lret
xor
jmp
mov
sub
lods
stos
sub
ret
flds
outsl
lock
pop
test
lea
pop
mov
jg
dec
in
push
adc
dec
adc
push
loopne
push
int
mov
fs
or
push
push
sbb
xchg
lods
notl
xor
pop
xchg
and
xor
inc
js
pop
ljmp
xor
ds
jmp
addr16
mov
xlat
cmp
xor
gs
ret
pop
mov
repz
add
push
hlt
push
cmc
sbb
dec
sub
lods
stc
outsb
out
in
inc
add
xchg
bound
xor
xorb
mov
xor
icebp
xchg
pusha
arpl
and
and
jmp
imull
push
inc
xchg
jns
in
adc
adc
jbe
and
push
mov
mov
adc
add
jmp
dec
cmp
or
popw
xor
xor
dec
nop
scas
push
push
je
insl
mov
jae
dec
outsl
xor
and
aam
cmp
push
jg
sub
push
mov
out
cmp
sti
popf
push
mov
jmp
and
stos
mov
insb
out
xchg
ljmp
adc
cwtl
pop
sub
mov
lock
pop
push
addr16
mov
stc
pushf
mov
cmp
shll
lret
dec
scas
insl
xchg
negl
aad
cli
hlt
xor
mov
in
pop
repnz
fsts
xlat
fs
out
add
aad
sbb
mov
loop
dec
hlt
sbb
sub
add
into
call
enter
mov
xchg
imul
adc
addb
bound
cmp
pop
enter
mov
add
jp
scas
in
dec
inc
fisttpl
sbb
inc
sahf
pop
lret
xchg
dec
das
gs
ret
in
fs
mov
roll
and
inc
sub
ds
ds
pop
in
les
sti
mov
jge
inc
imul
scas
mov
inc
dec
popa
ret
repnz
les
mov
push
lcall
call
mov
jg
lods
push
lahf
aas
cld
out
pop
dec
mov
movl
clc
mov
bt
bt
test
pushf
movb
lea
je
call
inc
dec
dec
inc
push
dec
xor
cs
insb
add
imul
pusha
add
pushf
lea
jmp
lods
sbb
pop
test
or
adc
mov
sahf
iret
cmc
lea
add
inc
jmp
jecxz
daa
pop
jecxz
mov
and
xchg
mov
popa
sbb
mov
mov
xchg
fistpl
add
imul
int
imul
decb
jecxz
imul
bound
sahf
pop
jmp
jle
cld
fwait
adc
jo
js
inc
and
jge
scas
sub
fsubl
jb
and
int
lods
and
jb
mov
test
pusha
pop
sub
rorb
jge
fiaddl
cwtl
pop
gs
lret
insb
and
nop
jbe
das
xchg
cld
cmp
xchg
cmp
mov
pop
lock
lea
mov
rcrl
xor
mov
xchg
sbbl
jo
push
in
or
das
jbe
enter
js
dec
imul
adc
seto
fnsave
iret
aaa
mov
lock
adc
lods
and
inc
fcmove
push
test
fwait
lods
jo
gs
add
in
or
int
mov
mov
dec
cmpsb
fists
test
popa
sub
cs
xchg
jl
mov
data16
stos
mov
fs
clc
inc
and
popf
push
jo
out
jns
sub
pusha
pop
xor
jle
idivl
pop
aam
push
das
dec
cmp
arpl
ja
ds
call
lcall
inc
cmpsb
mov
push
and
movsl
scas
and
xrelease
dec
push
movsb
idiv
andl
lcall
inc
cmpsb
push
mov
xor
or
mov
mov
mov
dec
mov
sub
std
and
stc
mov
orl
cmp
or
mov
iret
dec
lret
sub
mov
dec
add
and
in
push
lahf
lret
sub
adc
mov
pop
add
mov
sbb
sub
jmp
pop
imul
add
loope
and
mov
push
dec
loopne
das
inc
jle
sub
add
ret
hlt
into
stos
pop
push
shr
add
xor
fwait
inc
ljmp
jle
push
xor
jnp
ds
mov
hlt
outsl
sub
mov
jl
jnp
ss
fsubr
push
mov
pop
repz
push
cmp
and
mov
xor
jge
pop
cmp
lds
add
call
add
pop
ret
push
inc
dec
add
cmp
xor
push
push
lods
outsl
lds
shll
add
inc
or
sbb
into
std
pop
mov
sbb
loop
hlt
outsl
xor
sahf
ljmp
ja
xor
lret
push
test
push
ljmp
pusha
xchg
loopne
call
jb
mov
jl
testl
mov
addr16
pop
mov
inc
insb
in
push
call
jecxz
pop
test
stos
out
in
outsb
add
mov
mov
push
mov
mov
mov
clc
jmp
call
push
lock
std
std
mov
xchg
adc
out
jge
test
and
mov
pop
ss
ja
insb
cmp
xor
dec
dec
fbld
aam
pop
lds
ljmp
xlat
test
inc
lods
popf
xor
pop
and
pop
lahf
inc
inc
xchg
mov
xchg
push
mov
adc
ss
pop
or
mov
cld
adc
loopne
cmp
movb
lea
jae
pusha
cmp
movb
call
cmc
xor
bt
not
test
test
test
clc
neg
stc
rol
test
cmc
jmp
push
jge
add
xor
mov
in
das
cmp
push
or
cld
aas
pop
pop
addr16
hlt
out
pop
jg
add
stos
push
fsub
sti
cmp
fisttpl
out
mov
cmc
xchg
inc
imul
in
push
sub
xchg
jbe
xchg
inc
out
lahf
test
dec
dec
mov
add
stos
pop
add
mov
adc
mov
adcl
fbstp
push
mov
jmp
int3
and
cmp
test
stc
mov
test
test
pushf
pushf
push
lea
je
pushf
bt
clc
stc
add
clc
cmc
pusha
pusha
cmp
push
mov
lea
jb
cmc
cmp
pusha
pusha
cmp
call
cmc
push
add
movb
lea
jmp
pushl
jmp
and
lcall
lahf
mov
mov
icebp
jmp
adc
mov
jno
cmpsl
addr16
lea
repz
cmpsb
clc
push
cli
push
dec
mov
aam
sbb
in
subb
jae
adc
sub
repz
fstl
inc
pop
push
movsb
inc
or
in
aaa
push
dec
xor
xor
rcl
mulb
mov
add
mov
mov
leave
pop
dec
pop
cmp
jmp
fdivs
jno
add
cmpsb
bound
shll
cmp
sub
out
push
fwait
jae
lds
sub
push
insb
mov
adc
shlb
xchg
rolb
dec
jnp
jg
fldl
outsb
sub
cmp
xchg
std
or
inc
pop
sahf
jne
test
fcmovb
aam
fs
call
call
or
cmp
clc
pop
push
rcrb
jp
movsb
out
in
add
int
mov
push
in
outsl
testb
sbb
mov
fidivl
inc
repz
xor
sub
dec
cmp
mov
ljmp
jnp
sbb
ja
and
pop
push
mov
inc
adc
add
je
pushf
call
lea
pushl
pusha
lea
jmp
xchg
push
pushl
call
lahf
lea
jmp
push
cmp
int3
data16
sbb
inc
pop
inc
insb
push
mov
adc
ljmp
pusha
xchg
sarb
fcomi
out
push
in
or
cmp
xchg
sbb
test
mov
and
pop
ja
push
mov
lahf
mov
insl
mov
pop
xchg
sub
decl
stos
orb
imul
test
cmp
imul
stos
adc
dec
out
movsl
pop
mov
pop
push
pushf
lea
jb
pusha
test
bt
pusha
cmp
pushf
pushl
call
lea
jae
cmp
push
add
pushf
mov
pusha
push
movb
pushf
lea
jmp
lea
pushf
pushf
mov
mov
lea
jmp
sub
clc
push
cmc
not
cmp
cmp
movw
sub
cmp
pushf
pushf
cmp
not
lea
not
not
bswap
mov
mov
mov
pushl
jmp
adc
mov
pusha
cmp
shr
call
movl
pushf
call
pushl
lea
pushl
lea
call
cmp
add
shld
shr
pop
pushf
daa
adc
mov
mov
movw
clc
clc
cmp
push
jmp
imul
sets
lea
or
bts
sub
stc
push
cmc
and
push
xchg
bswap
clc
shr
bt
mov
adc
shld
mov
pusha
jmp
loop
fisttpl
test
inc
outsb
or
fistps
enter
push
push
mov
jae
mov
imul
or
xchg
test
xchg
add
pop
sarl
scas
sub
imul
dec
into
jns
and
mov
jle
loop
shrl
cwtl
add
insl
outsb
out
fstpl
lock
push
sub
and
lods
jl
mov
hlt
addr16
gs
inc
fwait
xor
loop
xor
dec
lds
lret
mov
jae
jae
cmp
repz
rol
xchg
int3
add
cmp
dec
xchg
dec
sub
ja
ds
mov
test
pop
and
xchg
xchg
shll
repnz
dec
cmc
movsb
iret
push
rep
mov
loopne
fs
adc
inc
pop
ja
add
cld
xor
bound
xor
cmp
cmpsl
ljmp
sub
and
cmp
mov
cmpsl
pop
arpl
jnp
cli
je
lret
and
lods
lcall
or
jge
sti
pop
cli
lods
mov
stos
shll
loop
mov
orl
out
popf
mov
xor
mov
sti
test
scas
push
lock
addb
jbe
mov
stc
cmp
js
sub
cmc
scas
jne
ret
jae
icebp
jl
rcrb
xchg
idivl
andl
cs
pop
or
mov
movd
in
and
pushf
cld
push
mov
sbb
jecxz
test
data16
jmp
sbb
mov
jecxz
dec
test
and
jmp
ja
pop
mov
ds
test
outsl
push
fsts
cmp
dec
mov
jo
ss
popf
sbb
xchg
and
sub
cmc
mov
shrb
mov
incb
mov
into
das
push
pop
jecxz
push
stos
in
add
sbb
or
fldl
jnp
ficoms
mov
ja
add
mov
hlt
jg
cmp
sub
add
fs
call
rcr
btc
add
bts
pop
bt
cmp
pop
cmc
cmp
pusha
pusha
call
not
stc
bt
call
clc
clc
mov
cmp
movb
call
testb
cmp
push
add
pop
pop
cwtl
in
fcoms
add
aad
jp
xor
in
add
loope
dec
xor
push
lea
mov
sti
leave
add
and
insb
daa
icebp
mov
dec
mov
fcomip
addr16
in
jne
sbb
cli
es
outsb
pop
add
sbb
or
mov
cmpsl
dec
adc
lret
push
iret
xlat
sar
shrb
out
push
cmp
rolb
daa
cmp
leave
call
std
in
push
sub
cmp
movsl
xor
scas
ror
inc
shll
xor
adcl
lret
push
test
mov
out
mov
in
imul
sub
jae
jl
lret
mov
sarl
xorl
loopne
loop
fcmovbe
or
mov
xchg
xchg
adc
xchg
mov
and
sub
das
mov
sbb
rep
xchg
mov
ljmp
push
mov
mov
add
mov
dec
ja
adc
shl
lahf
scas
xchg
lret
cwtl
and
sbb
jno
push
push
in
add
lods
insb
mov
adc
jb
cmpsl
pop
lds
mov
enter
js
push
mov
ret
fidivrs
cmp
adc
inc
mov
sub
xchg
cli
stos
inc
or
aam
xorl
mov
jge
repnz
out
add
sti
fcoml
jnp
push
sub
test
cmpsl
fdivrl
cmp
into
les
fsubl
mov
pop
mov
cmp
xchg
lds
xchg
push
cmpsl
in
fbstp
dec
pop
jns
repz
std
lock
jbe
push
jecxz
pop
or
ljmp
pop
jl
pushf
movw
lea
jne
movzbw
movsbw
cwtl
call
push
pop
pop
or
add
sub
das
push
push
lds
insl
mov
and
jecxz
mov
dec
fnsave
lret
inc
mov
dec
in
push
test
xchg
and
arpl
pop
iret
sbb
adc
mov
pop
jecxz
icebp
pop
inc
bound
dec
iret
repz
std
xor
jne
push
xor
test
cmp
add
and
xchg
insl
mov
dec
and
cwtl
dec
mov
cmp
hlt
out
and
cmpsl
lods
ljmp
imul
roll
js
push
xor
push
fs
ret
inc
mov
scas
add
adc
and
adc
in
nop
xchg
sbb
push
stos
adc
dec
fadds
cli
xorl
lea
jae
test
push
pusha
cmp
sub
pushf
mov
push
setne
lea
movb
movb
lea
call
add
bsf
and
add
aaa
bts
xor
neg
pop
movsbl
shr
stc
pop
stc
clc
cmp
call
xchg
hlt
repz
test
mov
mov
daa
mov
popa
iret
data16
arpl
cmpl
popa
imul
lcall
pop
sbb
lods
pop
jae
test
lcall
push
leave
xchg
ret
mov
popa
jle
mov
mov
xchg
mov
ret
xchg
and
add
into
jge
ja
test
inc
or
cmp
mov
sbb
mov
fcomps
add
sbb
adc
mov
dec
push
sbb
pop
cmp
mov
test
mov
push
insl
jmp
in
rorb
xchg
inc
outsl
inc
pop
xchg
aas
call
mov
push
jecxz
and
std
mov
test
cmp
or
in
cmp
mov
pop
inc
outsl
inc
sub
cltd
sbb
je
testb
loop
mov
jne
pop
pusha
idivl
shl
dec
lahf
jns
rorl
leave
or
stos
mov
mov
jg
adc
mov
xlat
std
cmpl
jns
loop
clc
pop
jp
fs
dec
xchg
dec
sbb
mov
xlat
bound
pop
test
gs
or
sub
jmp
xchg
xchg
jo
in
stc
pop
clc
jl
outsl
inc
sbb
repz
adcl
pop
or
rcrb
cltd
imul
adc
sbb
lods
daa
loope
mov
push
push
push
cltd
mov
mov
adc
inc
mov
pop
inc
imul
sti
test
sub
mov
pop
adc
jg
cmpl
cltd
cltd
mov
mov
push
leave
mov
cmp
xor
bt
cmp
xor
stc
not
call
call
dec
cmp
test
sub
clc
push
push
mov
rorb
fs
push
stos
inc
push
mov
add
mov
mov
jb
loopne
jmp
mov
lea
mov
push
incb
xchg
rcr
pop
sub
inc
scas
push
jns
ret
fnsave
gs
stos
mov
mov
inc
sbb
xor
jo
out
jns
jns
add
mov
movl
push
lea
jmp
lea
jae
jmp
lea
ja
sbb
inc
sub
ror
bswap
btr
add
rol
mov
jmp
cs
push
test
out
icebp
and
xor
stos
shlb
ja
inc
add
inc
pop
sbb
fld
out
fmull
mov
repnz
mov
xlat
sahf
xor
mov
mov
cwtl
mov
jne
adc
cltd
les
add
loop
add
pushf
bt
mov
jmp
cmc
add
test
jmp
lea
call
call
jae
not
cmc
movsbl
mov
shl
sbb
neg
mov
bt
pusha
shrd
call
mov
btc
add
movzbw
setb
lahf
lea
jmp
lea
jb
aad
mov
bt
cmp
cmc
cmp
shl
clc
clc
bt
add
call
inc
xlat
rcll
iret
mov
sbb
pusha
adc
sarb
rorb
mov
daa
out
xchg
sbb
push
es
or
sub
outsl
in
xor
hlt
push
outsl
dec
dec
fimull
fsubp
push
je
repz
cmp
push
mov
clc
or
and
cmc
push
cmpsl
xor
das
mov
and
call
jmp
cmp
pusha
bswap
cwtl
mov
pushf
pushl
call
stc
pushf
cmp
not
call
call
pop
push
add
jo
push
jecxz
movsl
js
das
pop
xlat
rorb
jl
and
test
push
pop
repz
xor
jmp
jb
sbb
mov
lock
int
jnp
gs
or
jns
mov
pop
mov
pop
xchg
push
cmp
shr
cli
xchg
adc
stc
push
pushf
pusha
clc
mov
test
movb
test
cmp
pushf
lea
jb
pusha
xchg
bts
bsf
mov
rcr
rcr
xor
cmc
mov
clc
clc
call
ror
adc
mov
mov
mov
das
cmp
addr16
and
jo
lcall
hlt
mull
sub
and
xchg
mov
insb
jns
sbb
iret
xor
lret
add
xor
test
les
out
adc
ja
fcomp
mov
mov
xchg
mov
loope
daa
sub
movsl
out
iret
xor
inc
jns
adc
pop
push
mov
movd
sbb
pusha
aam
mov
popl
mov
sahf
aas
mov
xchg
jbe
cmp
adc
mov
pop
outsl
pop
mov
add
or
fwait
sbb
add
mov
xchg
push
fdivr
pop
jg
adcb
push
dec
loopne
inc
aam
adc
in
pop
push
ss
pop
roll
fimull
sti
lahf
push
jno
test
mov
inc
sbb
popa
pushf
cmpsb
adc
sbb
sbb
or
into
and
dec
lods
shll
xor
mov
das
daa
lea
sub
xchg
mov
mov
sub
inc
push
mov
iret
push
xchg
out
inc
out
sti
jg
into
jnp
pop
repnz
sub
dec
dec
sub
in
jle
and
pop
scas
or
xchg
fstl
pop
stc
rcrb
cmp
addb
fisttpl
test
jns
adc
movb
call
xchg
pusha
mov
pushf
mov
not
bswap
mov
movw
lea
pop
sets
xchg
not
pushl
pop
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
inc
adc
stos
pop
int3
fstpt
popa
enter
jg
jg
in
jno
lcall
sarb
nop
xlat
mov
xchg
inc
lods
xorb
and
add
cmc
inc
add
movsb
popa
imul
lret
cltd
jb
or
repnz
inc
fwait
sbb
and
dec
enter
or
push
dec
jg
inc
pushf
call
cmp
bound
xchg
xor
mov
push
repz
push
nop
dec
test
dec
loope
aas
xor
int
dec
lret
push
sub
add
rcll
out
jp
mov
pushaw
sti
add
sub
dec
xchg
sbb
xlat
loopne
bound
movsl
or
ret
stc
popf
in
push
mov
push
xor
nop
das
mov
inc
je
movsb
mov
fs
out
cmp
sub
jbe
mov
dec
out
sbb
popf
and
scas
mov
testl
mov
cld
js
pop
aaa
sbbl
jns
dec
nop
push
popf
sub
test
test
ja
imul
in
push
sarl
pop
fidivl
mov
test
mov
xchg
dec
mov
mov
and
fadd
mov
jge
jnp
sub
repz
outsl
roll
sti
push
add
or
pop
xor
jecxz
sbb
xor
pop
mov
push
pop
sbb
jg
jle
xchg
push
ficomps
cs
dec
adc
aam
les
jmp
std
xor
inc
mov
sbb
push
gs
or
jecxz
je
cbtw
jo
sub
enter
punpckhdq
sub
je
push
in
dec
cmp
les
js
xchg
imul
mov
add
cmp
add
clc
cmp
pusha
lea
ja
adc
setae
inc
call
lea
jb
das
bt
jmp
jmp
call
call
mov
lea
jle
cmp
pushf
pusha
mov
pushf
lea
jb
movsbl
rol
add
mov
sete
mov
pusha
shr
jmp
or
cmp
add
aaa
outsl
mov
js
popf
mov
sub
jp
adc
pusha
and
hlt
jecxz
rcll
pop
mov
mov
mov
pop
and
adc
outsb
sbb
movsb
xchg
stos
adc
sub
mov
jb
js
push
jo
mov
xchg
sbb
mov
cmp
loop
stos
cmp
add
popf
push
lods
dec
and
repnz
push
test
pop
mov
adcl
fimuls
fcoms
aam
cmp
jb
mov
pop
fwait
stos
dec
fs
outsb
ret
jg
pop
sahf
xchg
push
outsb
enter
push
adc
and
sar
in
pop
jl
xchg
inc
jnp
ja
cmp
mov
xor
sarb
pushf
mov
pushl
push
lea
jbe
shld
adc
pushf
sub
adc
not
mov
add
mov
rcr
clc
xchg
rcr
add
rcr
shr
jmp
lea
ja
pushf
pusha
call
lea
jae
push
movb
push
push
lea
jmp
loope
dec
push
test
push
out
jo
popa
cltd
loope
ret
jge
pop
orl
push
cmp
dec
or
jmp
dec
xlat
cmpsb
aad
cs
mov
shll
mov
ja
xchg
fcompl
xchg
pop
or
repnz
lods
fldt
and
or
scas
mov
mov
dec
gs
sub
push
mov
repnz
adc
and
adc
cmp
sbb
in
js
imul
adc
jge
or
mov
mov
fildl
push
cs
inc
mov
push
outsl
cmc
sbb
fistl
fidivrs
ja
sub
pop
dec
or
movsl
pusha
add
cld
xor
movsl
adc
pop
mov
test
call
repz
inc
adc
lds
test
repnz
xchg
cld
mov
lret
lods
cmc
popa
and
sbb
jb
ficoml
mov
repnz
jns
xchg
outsb
fwait
loop
mov
test
push
test
arpl
dec
pop
sub
scas
dec
sbb
aad
gs
mov
xchg
ret
aam
repz
out
mov
cmp
ds
adc
divb
cmp
adc
mov
cmp
ror
mov
sbb
test
sub
shlb
mov
call
inc
cld
mov
pop
mov
add
cmp
int3
cmpsb
ljmp
das
xchg
jecxz
mull
popf
push
wrmsr
loop
inc
push
loop
inc
and
mov
je
mov
les
iret
std
fsubs
add
add
daa
xor
fcompl
and
inc
jae
sbb
jl
daa
sarb
lret
add
lods
roll
insb
shll
mov
ror
int3
adc
jmp
push
pop
sbb
pop
lahf
mov
mov
mov
lock
fcompl
dec
or
testb
xor
jo
gs
sbb
stos
mov
sahf
jno
outsl
push
cmpsb
jne
add
in
iret
sub
loope
adc
lds
fistps
or
mov
int
push
das
mov
in
or
add
icebp
lret
testl
les
pop
sbbl
mov
lret
lahf
clc
daa
push
bt
daa
sar
mov
dec
lahf
sub
adc
stc
or
jmp
adc
out
xor
sahf
aam
movsl
xor
lret
bound
ds
pusha
mov
push
aad
push
jl
scas
daa
and
into
cltd
aad
jo
adc
jne
sub
out
dec
and
mov
scas
and
das
test
and
stos
rcr
jbe
mov
stc
mov
jae
add
push
sbb
mov
fwait
lds
xchg
rorb
adc
jmp
pop
sub
test
and
dec
adc
jb
xchg
dec
push
shl
movsl
cwtl
mov
sbb
div
or
cwtl
and
ljmp
mov
addl
mov
cmp
fiaddl
xor
je
and
cmp
add
jmp
aad
sahf
jno
adc
or
jo
adc
lahf
and
and
push
mov
mov
dec
jmp
xchg
stos
pusha
imul
cmc
cmc
add
movb
pushf
lea
jmp
call
mov
call
lock
loope
test
add
out
inc
into
cmp
sub
xor
out
cmp
sub
addr16
outsb
mov
dec
cmp
stc
xor
andl
cmp
jns
or
dec
sub
mov
inc
roll
mov
test
cli
jl
xor
incl
mov
fidivl
cmp
dec
aam
cmpsl
cmp
cmp
cmc
add
sbb
in
les
mov
jns
int
sbb
ja
scas
inc
mov
pusha
sbb
pop
jle
sbb
push
push
cmp
movsl
push
xchg
add
out
enter
lock
aam
xchg
mov
jl
lret
in
xor
or
icebp
xchg
imul
mov
movsb
pop
ljmp
movsl
jne
adc
fsubr
inc
cli
in
imul
sbb
lock
fwait
jne
andl
sub
push
mov
adc
adc
pusha
imul
loope
shl
sub
xchg
dec
add
movsl
dec
cmpsl
fnstenv
jb
mov
pop
stos
mov
repnz
sbb
mov
xchg
out
add
fs
xor
dec
aam
or
int3
mov
hlt
xchg
sub
add
jmp
rol
mov
inc
roll
inc
pop
ja
adc
hlt
stos
xchg
loopne
sarl
mov
scas
sbb
xchg
and
scas
out
test
je
popa
inc
pause
xchg
pop
sbb
lret
scas
loopne
setne
popa
push
push
jp
push
stos
cmp
stos
cmp
push
inc
repnz
stos
movl
pushl
push
call
push
call
aad
cli
sbb
out
cmp
jl
andb
ljmp
popf
jb
adc
out
mov
inc
add
and
xor
cld
movsb
stos
sub
push
movsl
in
stos
repz
mov
xor
mov
push
mov
leave
clc
or
sbb
ljmp
je
sbb
call
cmp
clc
es
inc
iret
sub
or
pusha
ja
or
in
adc
js
lds
add
cmp
mov
mov
xchg
loop
aaa
push
and
in
icebp
js
sbb
mov
or
dec
push
xor
loope
inc
or
jae
adcb
cmp
mov
andb
cli
in
mov
inc
dec
fstenv
push
jb
cld
daa
ficomps
test
pop
mov
icebp
cmc
jmp
or
jo
pop
mov
jne,pt
mov
lea
ja
jmp
ja
je
movzbw
rcl
mov
movsbw
bts
shl
add
bsr
pushf
shl
mov
cmc
test
test
pusha
lea
je
call
mov
cmpsb
out
cmp
xor
out
mov
lea
mov
jg
mov
mov
mov
inc
xor
ljmp
test
or
mov
in
mov
addr16
stos
cmp
imul
in
pop
clc
add
repnz
xor
cmp
jp
ss
inc
dec
sub
testb
mov
inc
in
icebp
adc
movsb
rcll
push
and
jle
add
lea
jne
call
lea
call
clc
pusha
call
pushf
movl
pushf
lea
jmp
call
mov
cmp
aaa
xchg
leave
mov
fwait
jle
movsb
lret
test
es
mov
mov
hlt
xor
mov
ja
repz
push
sbb
pop
int3
mov
sahf
sti
add
js
cld
repnz
adc
add
in
mov
clc
andb
cmpsb
inc
or
cld
xchg
mov
mov
mov
pusha
mov
push
mov
nop
push
mov
imul
sbb
xchg
push
xchg
js
xchg
cmc
hlt
outsl
ret
mov
in
ljmp
mov
dec
push
pushf
lea
jmp
bsf
mov
stc
push
cmpb
mov
jmp
and
ds
cmp
dec
je
xor
pusha
repz
cmc
and
add
pop
cld
cmc
mov
test
lock
jbe
cmp
movsl
iret
xchg
mov
lret
xor
mov
jo
jae
mull
jne
sbb
sub
xor
dec
clc
loop
and
or
mov
and
push
push
movsl
or
mov
cwtl
inc
stos
xor
add
cmp
push
mov
xor
dec
rcrl
ret
fbstp
pop
mov
in
test
cltd
es
xchg
daa
repnz
addr16
loopne
push
adc
or
sbb
sub
ret
fdivl
or
icebp
cmpsb
xor
mov
cwtl
push
je
imul
cld
repnz
push
les
frstor
xlat
add
mov
lds
dec
cli
adc
dec
mov
and
je
mov
movsbl
xchg
mov
mov
bswap
call
push
sub
jmp
push
pushl
call
pushf
pusha
lea
call
push
mov
push
lea
jb
aaa
cmp
mov
pusha
sbb
lea
movzbw
lea
pushl
not
mov
pushf
mov
push
jmp
cmp
call
add
movsbw
btr
mov
pushf
pusha
call
pusha
xchg
pop
jecxz
cmp
sub
pop
mov
mov
sub
jne
sub
mov
insl
cmpsl
rorb
ljmp
pop
movsl
mov
pop
nop
mov
mov
push
push
xor
test
sbb
push
popl
inc
les
mov
or
sub
xchg
and
push
in
pop
aas
cmc
clc
xchg
pushf
mov
lea
xadd
mov
shr
dec
mov
call
pushf
lea
mov
movb
call
movl
pushf
pushf
push
mov
lea
jmp
mov
pushl
lea
mov
lahf
lea
not
movzbl
lea
pushf
call
mov
cmc
push
aam
adc
ror
bts
mov
pusha
push
bt
test
lea
ja
pushf
movb
push
lea
je
rcl
cmp
bsf
add
mov
dec
shl
sub
add
sar
not
movsbw
movzbw
mov
cmc
test
call
pushf
lea
jne
adc
sub
bsr
mov
push
movzbw
sar
mov
xadd
and
clc
rol
sub
push
shl
inc
bswap
mov
inc
mov
shl
mov
bswap
btr
movsbw
mov
sub
mov
sbb
mov
bsf
shl
bswap
sbb
mov
pop
adc
btr
sub
setno
test
mov
test
adc
mov
movzbw
setge
daa
rol
sub
pushl
bsr
dec
aam
and
aam
mov
cmp
pusha
pushf
shl
mov
push
add
jmp
jmp
sbb
shl
test
ds
mov
rcl
sub
lret
pushf
ja
jb
mov
mov
out
out
in
or
addr16
and
push
push
sbb
cld
test
arpl
in
sub
push
jae
aam
xchg
adc
mov
sub
inc
cmp
mov
jl
sub
data16
daa
mov
push
jbe
sbb
lea
je
pushf
mov
push
pushf
lea
jmp
mov
mov
mov
pushf
setns
mov
push
lods
bt
xor
stc
stc
not
bt
cmp
neg
pushf
lea
jle
cmc
bt
rol
push
not
call
mov
loopne
cmp
pop
mov
mov
mov
sbb
into
sub
cwtl
push
jmp
daa
jp
es
cmc
adc
lock
pop
orb
xor
or
addr16
cmp
push
sub
lods
mov
insl
mov
cmp
lock
xchg
mov
ret
fs
mov
or
test
inc
mov
aad
movzbw
mov
mov
push
mov
call
lea
mov
lahf
seta
jmp
clc
jge
loopne
cmp
push
outsb
movsl
lods
xchg
into
rcl
adc
sbb
hlt
sub
data16
mov
and
sub
out
and
pushf
pop
sub
cmpsb
ss
pop
or
mov
jl
call
adc
rorl
push
xlat
cmp
mov
mov
or
jb
adc
lahf
ljmp
ds
imul
cltd
cli
mov
cmpsl
mov
mov
dec
or
cli
mov
push
insb
jnp
pop
dec
arpl
inc
mov
ret
lret
jbe
mov
loop
lret
ss
je
add
fs
jb
bsf
mov
cmp
call
lea
call
cmp
add
bt
stc
pushf
cmc
cmpl
pushl
push
movb
lea
jne
cwtl
xchg
movsbw
pop
pusha
pushf
sets
sets
mov
pushf
mov
bswap
cwtl
pop
jmp
bswap
movzbw
push
mov
pusha
jmp
xchg
movsbw
btr
mov
neg
rcl
jmp
jmp
mov
cmp
int3
iret
out
adc
cmp
cmp
fimull
insl
imul
cmpsb
mov
dec
push
fwait
je
push
add
mov
test
xchg
xchg
jle
push
mov
xor
adc
dec
and
cs
inc
cmp
sub
fmull
dec
sub
mov
insl
mov
jne
inc
pushf
movw
lea
jmp
push
xlat
shr
test
mov
stos
loope
xchg
adc
int3
enter
jnp
xchg
jae
sbb
mov
fadd
cs
push
cmp
pop
out
idivb
jge
mov
int
in
shlb
ljmp
hlt
mov
pushf
inc
test
pop
add
dec
xchg
push
fstl
pop
ljmp
js
cmc
jo
mov
out
inc
addr16
and
sub
cmp
inc
loopne
cld
jmp
in
add
icebp
je
push
jae
sbb
xor
lret
stos
xor
shlb
xchg
mov
sub
mov
stos
mov
popf
sbb
adc
nop
or
and
xchg
pop
notl
push
out
cmp
test
imul
filds
sub
xor
sub
pop
imul
push
mov
das
dec
nop
out
or
mov
mov
mov
jns
in
out
pop
cmpsb
add
or
dec
lahf
cmpb
gs
pop
push
ret
fs
mov
mov
push
jns
add
rorb
test
and
in
es
test
jno
repz
jmp
mov
repnz
loopne
js
outsb
test
mov
outsl
rcrb
sbb
scas
imul
call
dec
cmp
test
and
ret
repz
dec
stos
and
dec
inc
pop
sbb
rorb
inc
mov
in
jno
nop
jp
test
ret
xchg
shll
mulb
or
jge
and
jne
ret
xchg
movsl
call
in
test
mov
mov
add
lret
es
cmp
mov
sbb
mov
mov
pop
jno
cmp
lea
out
adc
mov
das
push
mov
sub
adc
scas
sbb
jnp
sbb
mov
push
and
xor
sbb
cld
mov
loope
xchg
sti
xchg
dec
cmpsl
pusha
lea
jb
neg
cmp
lea
pusha
lea
setne
sbb
pop
pusha
cwtl
setl
lea
cwtl
jmp
add
inc
gs
outsl
fs
gs
imul
add
cmp
mov
and
scas
movsl
mov
mov
rorl
div
pop
mov
out
pop
add
cmp
bound
popa
mov
add
sbb
pop
pusha
ljmp
loope
pop
loope
test
adc
clc
inc
js
cltd
jl
pop
dec
fmull
sub
pop
mov
and
shlb
arpl
mov
push
mov
push
negl
btc
inc
xchg
sbb
neg
xchg
lea
not
shl
test
shl
mov
not
xor
not
adc
dec
pushf
add
jmp
lea
jb
push
pusha
cmc
bt
xor
jmp
jle
imul
test
sbb
loopne
or
nop
xchg
stos
fcoms
push
cmp
xchg
cmp
outsb
adc
enter
arpl
stos
jge
jmp
cmp
lret
mov
mov
ss
jmp
push
and
push
pop
scas
jle
or
mov
cltd
push
pop
dec
jl
pop
mov
inc
mov
pop
mov
scas
jb
pop
cli
in
fs
mov
pop
inc
pop
repnz
fisubs
mov
and
loope
mov
out
xor
test
jge
out
and
add
inc
xor
fsubl
inc
xchg
int
mov
aam
add
sbb
dec
add
ja
dec
jae
fstpt
leave
in
fs
clts
pop
sbb
testb
ficoml
dec
hlt
xor
mov
fcmovnbe
dec
ds
in
cli
add
mov
cmp
add
dec
pop
jmp
pop
adc
xlat
xor
mov
es
lock
ljmp
and
popf
add
scas
test
sbb
lds
cmpb
mov
xchg
lahf
xor
xchg
add
mov
ret
repnz
iret
jmp
enter
cli
das
jmp
addl
pop
in
stc
in
outsl
rcl
ret
cld
sub
iret
xor
mov
aam
mov
enter
inc
outsl
jp
lea
lcall
xor
sbb
js
push
fwait
popf
repz
lahf
inc
movsb
in
lods
aad
cmp
add
dec
add
imul
jae
fildll
sbb
stc
jo
les
std
xor
fiaddl
fdivl
push
pop
fidivrs
int
sbb
dec
in
roll
push
in
repz
and
ss
mov
std
push
aam
xor
insl
imul
add
cmp
push
xor
add
pusha
fsubl
inc
mov
sbb
in
and
xchg
aam
push
xor
mov
xchg
mov
outsl
ljmp
popf
push
push
or
jecxz
cmp
fstl
jge
jle
shr
sub
inc
sbb
or
cmc
mov
cltd
cmp
ret
fistps
jecxz
loop
out
mov
cmp
push
jb
and
cmp
xor
mov
xor
xor
jnp
jmp
jecxz
jmp
imul
subl
aaa
sahf
insl
imul
sbb
gs
test
outsb
pop
jl
ds
jl
in
mov
push
test
dec
inc
aaa
dec
fdiv
mov
enter
mov
dec
mov
bound
sub
add
ja
sub
dec
lods
popf
cmp
hlt
push
es
pushf
jge
pop
dec
xor
gs
mov
jl
and
jmp
push
lock
int3
push
sti
inc
dec
shl
out
popa
outsb
cmpl
fstpt
movsb
xor
pop
ret
test
rol
popa
jp
add
push
pusha
sbb
movsl
sub
in
adc
inc
sbb
or
pop
lods
and
push
xor
and
int
into
xchg
ds
xchg
jbe
iret
cmp
mov
xor
in
add
mov
ljmp
mov
lahf
push
jne
sub
xor
shll
mov
shll
dec
test
push
hlt
sahf
xor
repnz
out
lcall
dec
lea
mov
cmc
shll
shll
mov
movb
pusha
clc
not
cmc
test
pusha
neg
call
cmp
cmp
stos
orl
mov
or
cmp
sarl
mov
in
push
pop
imull
or
popf
pop
aam
mov
sbb
imul
dec
xor
add
jb
dec
or
loop
lret
cmpl
xor
pushf
mov
pop
fdivl
pop
sbb
add
xor
js
cmc
sbb
int3
add
lods
adc
jne
lret
and
test
xor
or
xchg
xlat
pop
mov
inc
add
sahf
sub
stos
in
mov
and
testl
mov
push
push
pop
sbb
dec
ja
js
xadd
mov
out
fcomps
hlt
aas
ret
sub
mov
sub
shr
cmpsl
sbb
addl
ljmp
subl
jnp
loope
nop
xchg
jl
mov
cmp
test
out
insl
or
pusha
mov
push
pushl
pusha
movw
lea
jmp
jmp
movsl
mov
cmc
test
pop
or
pop
loope
push
lret
leave
pushf
dec
xor
test
cltd
and
shlb
pop
aam
fdivrl
cmp
in
mov
shll
jo
add
popf
negb
cli
int
cmp
xchg
repnz
bound
adc
iret
jns
cwtl
dec
jg
pop
dec
or
jbe
inc
gs
jbe
rep
stos
cld
fwait
push
dec
xlat
sub
les
scas
adc
repz
mov
lea
mov
rolb
test
dec
push
jno
shll
push
in
mov
scas
xor
cmp
hlt
hlt
lock
sbb
shl
inc
sbb
imul
idivl
rol
sub
in
ja
or
dec
cmpsl
dec
adc
pop
lcall
push
sti
pushf
outsb
dec
pop
movsb
popa
imul
mov
and
daa
jp
les
xor
pop
cltd
push
aas
inc
mov
or
xchg
in
pop
dec
mov
mov
xor
xchg
inc
cld
sti
aas
inc
fisubrs
cvtpi2ps
cmp
inc
jae
xor
fiadds
mov
push
mov
in
data16
jmp
adcb
mov
call
jne
and
cmp
mov
jo
pop
shl
jmp
lea
call
shr
adc
add
daa
bsr
pop
movzbw
pop
cmp
bt
clc
cmp
pushf
pusha
sbb
pusha
pushf
jmp
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
lea
call
mov
pushf
pushl
mov
lea
jmp
lahf
and
repz
aam
cli
icebp
pop
mov
and
scas
std
add
and
icebp
sbb
mov
and
dec
push
cmc
xchg
xor
mov
rclb
dec
stos
fistpl
sub
outsb
xchg
adc
test
push
mov
add
mov
fisttpll
repz
or
imul
cli
je
icebp
mov
inc
lock
outsb
push
repz
cmp
jecxz
aad
dec
sub
jecxz
mov
mov
pop
cmp
and
and
jmp
enter
cmp
fincstp
mov
sbb
ja
mov
lock
icebp
adc
jp
enter
std
stos
or
fbld
push
movsl
jge
push
sub
call
pop
jne
dec
cmp
xor
loope
mov
xchg
insb
xchg
mov
call
sar
arpl
fwait
or
sbb
mov
testl
sub
btr
arpl
outsl
dec
lods
repz
iret
jp
lret
mov
and
add
jns
lods
lret
shl
push
ljmpw
jb
add
and
mov
jbe
ljmp
out
cmc
adc
aas
loope
loope
aam
mov
in
pop
popf
bound
add
xchg
pushf
sub
cmc
sbb
lods
fsubr
push
push
jg
pop
iret
leave
push
push
into
mov
mov
and
inc
sarb
push
scas
lret
push
fisttpl
aad
mov
push
jae
pop
mov
xor
and
movsl
leave
pop
aam
jg
arpl
mov
dec
push
mov
int
out
mov
mov
gs
ja
jmp
inc
sbb
scas
add
jge
xchg
jl
into
lret
cmpsb
sbb
jmp
fsubl
inc
scas
sbb
jmp
in
or
push
cltd
test
hlt
xchg
push
addr16
jl
loop
mov
outsb
jne
loop
cli
adc
add
or
orl
cwtl
push
scas
xor
rcll
ja
sub
adc
test
ja
jl
outsl
jl
jo
or
sti
out
adc
in
mov
dec
push
fsubrp
dec
mov
cmp
inc
stc
insb
loop
dec
ficompl
rcr
or
and
push
mov
add
cmp
sti
rorb
cld
cs
push
xor
mov
cmp
pop
mov
rorb
mov
cltd
cli
jmp
mov
sbb
mov
inc
push
aas
add
jb
mov
cmpsb
jb
std
mov
cmc
dec
sarl
add
jae
or
int3
popa
fldcw
cwtl
jle
rcll
fs
insl
sbb
ds
in
sbb
mov
test
mov
and
sub
pushf
mov
cmp
repnz
mov
push
out
pop
sbb
push
pop
or
sub
roll
and
into
dec
and
popa
cmp
divb
xchg
xchg
push
pop
sbb
sbb
and
sub
in
mov
and
mov
icebp
ja
fdivrl
and
mov
int3
sbb
insl
push
imul
outsl
mov
add
push
idiv
std
mov
jp
pop
inc
icebp
daa
mov
outsb
imul
push
fwait
adc
std
push
or
test
lods
pop
subb
pop
fdivrs
int
mov
jnp
push
dec
jl
icebp
inc
inc
scas
mov
push
lahf
ljmp
sub
movsb
test
repnz
pop
mov
in
inc
daa
stos
jnp
sub
shlb
xor
sarb
popw
pushf
mov
sbb
cmpsl
adc
xlat
xchg
lret
push
and
sarl
jecxz
outsb
sahf
adc
and
das
adc
int
mov
jb
push
enter
pop
popf
es
push
sub
insl
inc
xchg
int
je
mov
fisubs
sub
aam
xchg
mov
pop
sub
mov
pushf
shl
popf
add
adcb
adc
xchg
ficoml
dec
xor
mov
lret
inc
lret
adc
enter
nop
cmp
ljmp
jle
jp
iret
dec
or
xrelease
ret
inc
popf
jle
es
fisubs
mov
subb
xchg
cs
je
test
pop
xchg
inc
repz
jns
cmp
in
and
xor
insl
pop
sti
inc
jae
jo
push
lock
testb
adc
push
insb
ret
mov
jl
iret
mov
enter
push
stos
aad
sub
das
sub
ljmp
pop
out
inc
push
dec
imul
aad
pop
jmp
push
jb
mov
inc
scas
push
out
insb
push
sbb
iret
jo
bound
lock
jecxz
popa
loop
add
repnz
aas
cmp
and
loope
push
ret
pop
cmpsb
add
insb
dec
sahf
jbe
and
fstl
mov
fisubrs
pusha
popa
xlat
xor
cmp
dec
fstps
cmp
jmp
xlat
repz
stos
jmp
add
shrb
insb
lcall
leave
push
fidivl
aam
add
and
sbb
lods
aaa
test
xor
mov
sbb
stos
jge
cmp
and
mov
sbbl
mov
jle
mov
sub
mov
and
pop
int
push
dec
mov
movsb
push
xor
aad
popa
jecxz
or
cmpsl
rcll
cltd
add
sti
mov
adc
and
mov
mov
out
shrb
vmovss
cmp
push
stc
outsl
sbb
pop
mov
popa
mov
adc
roll
xor
scas
fstpt
test
iret
add
xchg
je
sub
adc
lds
lahf
xchg
push
jg
add
xchg
movsb
add
sbb
mov
or
xor
or
js
loopne
xor
jo
stos
lods
mov
fisubrs
aaa
imul
fldcw
popa
inc
das
scas
stos
stos
push
call
sbb
add
lea
int
test
and
mov
pop
sub
shlb
dec
fdivrs
jg
add
dec
jo
sub
inc
pop
mov
dec
enter
and
es
aas
aaa
or
gs
lcall
jns
mov
test
mov
dec
inc
add
and
fldcw
sub
jmp
cmp
cltd
add
icebp
sub
and
aas
sbb
sub
call
xor
mov
mov
loopne
nop
mov
es
stos
lret
mov
cmp
jmp
lds
sbb
cltd
xor
pushf
or
dec
je
mov
push
cmpsb
roll
xchg
dec
fnstcw
popa
and
lods
inc
jp
icebp
pop
daa
fiaddl
inc
imul
sbb
ljmp
loop
lods
add
jno
cmp
int3
sub
aaa
sub
cli
enter
xor
push
add
cltd
jg
pop
mov
mov
inc
ljmp
popa
imul
dec
enter
cmp
clc
hlt
dec
jp
imul
xor
imulb
xchg
jmp
jp
mov
lods
push
mov
mov
push
enter
insb
push
mov
insb
mov
stc
cmp
pop
xor
test
daa
fcmovbe
ljmp
or
adc
mov
jno
and
jo
sub
xchg
inc
inc
pop
jecxz
imulb
inc
in
ret
jp
cltd
mov
std
jns
push
sub
je
in
inc
mov
sub
add
add
pop
cmp
sub
int
in
subl
jb
xchg
xor
aam
ret
jb
jg
out
daa
repz
pop
inc
addb
cmpsb
sbb
mov
ret
scas
sub
int3
push
aaa
daa
aam
lock
enter
imul
sub
mov
roll
xor
outsb
cs
jbe
out
xchg
std
insb
xchg
ret
fistpl
xchg
pop
test
es
push
outsl
jl
mov
add
xor
sahf
mov
stc
ja
xchg
js
xorb
rol
and
dec
mov
lahf
call
dec
in
imul
and
mov
push
dec
inc
push
xlat
jecxz
push
fsubrl
das
push
stos
es
add
mov
sub
cltd
add
pop
outsl
dec
pop
xchg
sub
sbb
dec
into
ret
popa
jnp
or
pop
cltd
shlb
mov
and
pop
adc
adc
call
sbb
or
mov
inc
mov
scas
in
insb
jmp
adc
push
add
pop
mov
notl
lret
or
lret
jg
mov
rcr
pusha
test
push
mov
xor
dec
fwait
loope
add
mov
std
mov
add
pop
dec
fcmovb
jne
cmp
aam
dec
jle
in
or
cltd
cmpb
push
mov
sub
inc
lods
lods
stos
cmp
mov
push
in
xchg
shrl
dec
dec
mov
mov
scas
pusha
mov
dec
shrb
fstp
jno
dec
mov
mov
cmp
shl
pop
std
dec
mov
push
movsl
ljmp
imul
das
subl
stos
xchg
pop
jb
pop
out
inc
mov
lea
jae
cmp
jb
mov
clc
lcall
adc
mov
mov
pop
cmp
stc
ljmp
mov
int
sti
enter
bound
push
test
mov
sub
jne
das
popf
aas
sbb
jp
and
xchg
lds
bound
sbbb
and
dec
mov
lret
lock
xchg
push
xor
add
xchg
int3
test
sbb
adc
shrb
fsubrs
mov
mov
scas
sbb
cli
stc
jno
iret
jo
dec
add
lret
mull
dec
lock
add
fxam
lods
jle
mov
jns
add
ljmp
test
es
loope
sti
imul
test
das
repz
sub
popf
inc
push
dec
inc
loope
clc
xchg
sar
mov
imul
dec
fsubrl
or
jne
xor
sbb
jle
test
or
push
sarl
loopne
andl
in
push
repz
and
push
movl
sti
and
int3
mov
fwait
cmc
sbb
mov
mov
adc
push
jl
jecxz
clc
mov
sbb
sub
stos
xor
pushf
mov
sub
adc
push
pop
cld
jo
in
js
push
inc
es
dec
out
int
std
mov
sub
sub
mov
add
out
pushf
stos
popa
rol
or
sbb
lret
mov
xchg
subl
cmp
add
add
fwait
and
adc
fisttpll
xor
adcl
dec
pusha
and
divl
inc
sti
pop
mov
dec
fildl
jno
xchg
out
cmp
fstl
shrb
into
addr16
into
push
push
bound
and
sbb
loope
ja
add
sub
lahf
pop
pop
xor
shlb
dec
ret
mov
daa
in
adc
adc
pushf
xor
lods
inc
scas
xchg
test
sbb
mov
add
loop
rcr
ljmp
gs
repnz
mov
movsl
or
push
iret
iret
repnz
orl
lret
or
push
jl
arpl
cwtl
xor
lea
pop
pop
inc
xor
xchg
jp
cltd
movl
rcl
mov
mov
and
daa
popa
orb
mov
sub
sub
repnz
push
pop
sub
fwait
test
xchg
lods
inc
ret
jns
adc
test
and
mulb
jle
js
xchg
mov
push
mov
es
push
mov
pop
mov
out
fstps
pop
clc
int
mov
and
sub
push
sbb
lret
xchg
insb
mov
pop
cmpsb
xchg
and
lock
aas
mov
cli
mov
int3
popf
cmpsl
pop
addr16
loop
pop
mov
sbb
inc
and
ss
xchg
pop
or
frstor
xor
dec
fs
push
push
mov
mov
inc
sahf
fldenv
mov
movsb
mov
sbb
pop
or
jge
fnstsw
or
iret
jb
lret
inc
and
and
mov
lock
mov
outsl
test
sub
shrl
mov
rolb
int
in
lcall
dec
lret
sbb
mov
inc
dec
pop
sub
jnp
in
xor
dec
jns
adc
loope
jg
stos
mov
out
sub
push
add
aas
clc
mov
push
mov
xor
mov
sbb
popl
sti
xchg
stos
dec
inc
sahf
push
aam
insb
dec
negb
xchg
insb
mov
inc
xchg
cmpsb
sub
sub
cmpsl
inc
outsb
les
pop
fimull
je
inc
push
pusha
pop
insl
jg
add
adc
sahf
jnp
jnp
add
xchg
es
scas
ror
lock
bound
in
cmp
inc
mov
push
inc
xchg
subb
push
mov
frstpm(287
jno
cmp
ljmp
and
xor
jp
lods
mov
mov
pop
cmc
push
in
cmp
push
mov
adc
cmp
fsub
pop
stos
pop
rcl
mov
outsb
jl
mov
and
sbb
fwait
jg
jno
fistps
sahf
inc
xor
icebp
jge
repz
pop
mov
dec
ja
push
mov
scas
jl
xor
in
add
pop
push
jmp
sbb
inc
sbb
repz
mov
push
mov
dec
jae
test
push
sub
pop
jo
jle
xchg
aam
or
push
hlt
sarb
rolb
and
stos
fdivp
cmp
jmp
xor
dec
shrb
cwtl
sbb
outsb
rcr
cmp
std
jns
cmp
test
dec
add
rcrl
mov
ficomps
adc
xor
mov
add
test
pop
in
mov
and
pop
std
dec
loope
enter
push
cmp
cmp
scas
add
dec
xchg
test
sar
in
rol
ja
inc
jmp
dec
cld
mov
pop
inc
lret
lods
test
in
pop
in
xchg
ret
adc
jle
popf
push
jecxz
nop
inc
cmp
les
testl
adc
mov
rorl
jno
std
repnz
shrb
mov
aad
mov
mov
mov
imul
xorb
jge
cmp
stc
sbb
or
push
divl
push
dec
mov
lcall
cltd
jg
and
jns
out
hlt
sub
lds
jmp
jp
xlat
xlat
imul
int3
push
pop
jbe
fsubl
adc
mov
and
sti
in
sti
std
or
shlb
in
and
fcomip
xor
cmc
hlt
mov
cmp
push
inc
and
sub
sub
arpl
add
pop
ds
jne
push
mov
cltd
jno
mov
xor
xor
mov
sub
arpl
movsl
scas
push
ljmp
xor
gs
gs
sbbb
enter
mov
pop
xor
xrelease
popa
dec
xchg
pop
mov
lahf
fs
push
iret
fcompl
les
dec
cli
sub
shll
cmp
int3
add
mov
lods
inc
or
xlat
fs
and
push
lods
lods
push
mov
movsb
pop
jp
pop
mov
clc
test
rclb
push
faddl
jle
sub
in
lods
adc
jl
arpl
daa
push
ds
xchg
mov
lret
jns
jmp
push
bound
push
mov
shll
push
dec
push
repz
xchg
cmp
jne
mov
sarl
repz
jp
xor
std
cltd
mov
sbb
insb
imul
push
cmc
dec
mov
js
lds
jge
inc
das
stos
inc
adcb
js
popa
cmpsl
mov
lds
insb
adc
cmp
pop
adc
push
inc
mov
std
hlt
int3
add
ss
lods
cmc
pushl
popf
and
adc
test
fisttpl
inc
loopne
sarb
mov
insl
mov
mov
and
js
push
jle
xchg
adc
cmp
out
cs
sub
js
pop
push
pop
popa
mov
mov
mov
cmc
dec
sarl
popf
bnd
insl
mov
mov
stos
pop
test
fdivs
sub
sub
daa
imul
cltd
and
sub
cmp
dec
xor
lahf
cs
mov
mov
xor
dec
and
and
xlat
enter
pop
lods
push
movsl
cmp
outsl
mov
mov
push
dec
push
sbb
outsl
xchg
xchg
cwtl
mov
repz
cmp
mov
pop
sub
xor
adc
lcall
xchg
adc
ret
iret
xchg
inc
push
xchg
mov
xor
out
push
push
mov
mov
loope
cmc
add
rolb
rcll
scas
in
pop
fmul
sti
je
nop
add
call
xchg
mov
add
mov
clc
scas
or
cmpsl
jne
pusha
jge
les
sub
icebp
and
xlat
inc
dec
insl
or
mov
mov
imul
and
fcoms
mov
and
xchg
inc
or
popl
inc
mov
js
insl
mov
add
jp
testl
ret
popa
pushf
in
push
xor
rclb
in
addr16
or
scas
mov
aaa
ror
mov
xchg
cmpsl
push
icebp
icebp
mov
test
test
int
cs
lcall
lock
push
jmp
out
add
sti
rcr
dec
aam
fwait
jl
ja
nop
mov
dec
and
jne
icebp
icebp
mov
or
psubw
filds
inc
jbe
fwait
rcl
adc
loope
mov
pop
inc
or
ds
pushf
mov
stc
pop
pop
jle
mov
dec
push
pusha
mov
cwtl
push
testl
loope
ljmp
es
add
popa
inc
dec
addr16
lods
repz
push
or
insl
xchg
movl
mov
xchg
repz
xor
xchg
andl
adc
in
mov
jne
push
test
bound
les
rcrl
cmpsb
push
clc
nop
js
push
fs
or
sbbb
nop
frstpm(287
xchg
add
lods
jbe
fcoms
or
jno
xor
push
xchg
js
dec
cmpl
clc
sbb
fistps
pusha
jl
inc
insl
lods
testl
adc
dec
loope
jbe
xchg
mov
insl
xor
sti
sbb
lods
ds
call
pop
fiaddl
lock
and
add
and
daa
cltd
inc
mov
std
sub
or
sub
mov
mov
ficompl
repnz
das
inc
test
divb
jnp
fists
arpl
pop
push
mov
int
xchg
popf
push
inc
sti
jecxz
sbb
pop
outsb
xor
mov
cmc
dec
and
aaa
or
js
push
pop
pop
aad
jo
pop
xchg
ficompl
mov
jl
repz
xlat
jne
push
mov
push
imul
xchg
je
cli
dec
movntps
inc
xchg
sar
out
jecxz
pop
test
outsb
mov
pop
in
sub
jno
dec
inc
push
and
js
jbe
les
cmp
in
popf
inc
es
testb
rorb
xor
inc
add
mov
xchg
mov
sbb
stos
ljmp
jecxz
jmp
mov
and
fdivrs
in
push
fnop
push
push
out
jae
mov
adc
mov
sbb
mov
jb
lret
lcall
mov
pop
shl
mov
ja
addb
fiadds
je
into
ret
and
scas
bound
ret
jg
mov
enter
mov
es
sbb
or
pop
jne
int
dec
add
or
add
cmp
outsb
cvtps2pd
jno
xchg
pop
mov
and
push
sbb
test
push
insl
movsl
inc
mov
dec
lret
push
sbb
out
mov
xlat
aaa
pop
ret
inc
or
jb
push
adc
pop
int
xchg
dec
adc
and
lret
mov
add
fdivrl
ja
xchg
sbb
aaa
xor
and
sub
imul
xchg
jae
pusha
out
push
mov
push
fldt
clc
xor
ror
and
sbb
cmpsl
cmpsl
pusha
loope
lds
sbb
jle
sbb
jae
movsl
test
xor
divb
pop
sbb
pop
test
mov
scas
xchg
cmpsl
test
iret
inc
int
or
and
mov
push
je
cmp
divl
js
xchg
add
sbb
xor
clc
fildll
lahf
dec
mov
iret
dec
sbb
push
icebp
ss
loope
dec
les
inc
dec
nop
and
mov
arpl
xchg
and
pop
jmp
cmc
addr16
out
dec
inc
mov
aam
mov
mov
cmp
mov
push
int3
ss
insb
xor
test
ss
or
inc
xchg
bound
cmp
xor
cs
dec
nop
pop
rclb
cmpl
mov
add
clc
rorl
adc
mov
jns
inc
cmp
mov
outsb
mov
and
outsl
popf
test
clc
sahf
mov
sub
bound
inc
pop
xchg
in
xorl
jne
push
pushf
dec
mov
mov
and
shll
xchg
adc
scas
cltd
leave
stc
jp
gs
xchg
xor
ja
aad
out
push
add
fdivrl
jle
paddsb
mul
add
jp
ret
inc
add
mov
stos
inc
mov
xchg
adc
jae
and
rorb
outsl
je,pt
and
sub
pusha
sub
pop
rcl
cmp
xchg
ss
pop
loopne
pusha
cmp
movsl
xor
imul
clc
test
dec
mov
mov
sarl
bnd
rcrb
jmp
aam
hlt
scas
sti
sbb
pop
lret
iret
lods
cmc
popa
and
les
js
inc
pushf
mov
mov
jne
loope
mov
inc
sbb
inc
cltd
jmp
xor
ret
cmp
ja
stc
cmc
cwtl
xor
pop
sahf
push
dec
sbb
popa
and
rolb
pop
popa
into
je
fdivr
lahf
push
lds
sbb
xchg
test
xor
jbe
stos
shrl
test
mov
in
repz
aam
sub
mov
fcmovnu
or
hlt
loopne
push
mov
scas
jbe
cmp
dec
insl
mov
add
jle
inc
sti
or
sbb
call
and
dec
xchg
or
mov
cli
andl
xchg
pop
cmpsl
es
xchg
or
stos
lock
out
push
stos
lock
pop
push
sbb
mov
xlat
mov
arpl
je
leave
dec
lret
jo
insl
call
inc
inc
fldenv
fsts
int
mov
jg
add
mov
mov
jb
scas
pop
psubusw
cmp
xchg
cwtl
mov
dec
movsb
mov
jb
aas
inc
cli
mov
inc
push
fimull
jecxz
imul
out
mov
mov
sarl
sbb
xchg
pop
addr16
xlat
dec
ljmp
mov
inc
jo
inc
mov
push
mov
bswap
add
inc
fwait
lret
pop
inc
jae
pop
cld
and
xor
stos
jbe
mov
hlt
arpl
mov
sub
xchg
xchg
test
inc
push
xor
inc
inc
xor
popa
dec
fbstp
in
loop
pusha
pop
sti
cltd
dec
aam
adc
jmp
sti
rclb
imul
sbb
outsb
mov
test
pusha
insl
xchg
pop
out
inc
adc
or
xor
and
loop
je
dec
ljmp
sbb
mov
sub
dec
push
dec
pop
cltd
shl
pop
push
outsl
incl
pop
std
nop
sub
pusha
xor
ljmp
test
stos
jl
inc
cmp
fistpl
jmp
xchg
jp
jle
test
test
pop
push
jne
fld1
into
daa
ss
fdivrl
shll
rorb
sub
insb
xor
cli
data16
jb
mov
pop
and
xchg
xchg
lods
imul
ljmp
ficoms
jnp
stc
cli
fcmovu
subl
push
push
lcall
leave
test
inc
leave
outsb
dec
cld
fcomps
inc
iret
sub
test
movsbl
sbb
inc
push
shll
loopne
int
push
or
sub
fdivr
adc
sbb
dec
xchg
add
pop
or
jns
outsb
adc
sub
dec
std
aam
cmp
jge
lea
add
in
sbb
lahf
jnp
test
insl
and
add
push
xor
cmc
ret
aaa
jb
fistl
adc
cmpsl
pop
aad
test
mov
pusha
sti
pop
jnp
sbb
scas
dec
xor
jmp
das
adc
loop
jle
mov
and
std
bnd
cmp
mov
notl
cmp
adc
cmp
insl
adc
mov
es
or
xor
loop
scas
stos
dec
cmpsb
push
inc
mov
cwtl
jnp
xor
add
jp
faddl
cmc
mull
cmp
test
push
pushf
pop
push
or
mov
jnp
loop
lcall
insb
shrb
mov
insl
push
xchg
in
mov
inc
ret
sub
jmp
push
cmp
int
hlt
aaa
xchg
gs
xchg
js
aad
repz
iret
mov
jmp
cmc
mov
pushf
mov
cwtl
push
or
ficoms
test
popa
xchg
cwtl
mov
nop
lods
sbbl
add
or
pop
sub
lds
xchg
mov
nop
mov
repz
pavgw
aam
push
pop
mov
arpl
or
movsb
mov
xchg
mov
pop
in
push
outsl
pop
sbb
insl
ret
mov
aad
pop
rolb
sub
jo
dec
bnd
jb
out
ja
mov
or
outsb
loop
mov
arpl
mov
push
dec
cmp
or
push
pop
mov
sbb
xor
or
mov
loope
jns
or
mov
mov
mov
clc
ret
inc
nop
movsb
or
xlat
mov
lds
mov
xchg
and
and
in
push
mov
addr16
scas
aas
cmp
pop
pop
fwait
push
fwait
sbb
cmp
jge
push
xchg
dec
lcall
and
cmpsl
mov
jecxz
ljmp
ret
ds
mov
sbb
bsf
sti
pop
nop
in
xchg
punpcklbw
cmp
sub
mov
push
sbb
call
dec
pop
sub
mov
pop
add
sahf
aam
aam
jo
dec
stc
dec
add
lods
cmp
cmp
lock
add
pop
stc
cmp
out
notb
pop
xbegin
lret
jae
fistl
in
addr16
cwtl
mov
and
aam
clc
imul
mov
xor
lock
push
xchg
and
fstl
aaa
pop
mov
sbb
into
mov
dec
cld
pop
das
push
jo
push
jo
loop
mov
or
insb
fdivrs
or
xchg
mov
test
in
in
fsubl
jle
dec
and
sub
inc
orl
stos
and
mov
jecxz
jno
cmpsl
icebp
mov
pop
rcll
hlt
lds
jb
sub
mov
cld
or
or
pop
ljmp
je
fdivs
lds
ljmp
sub
fldt
call
mov
inc
mov
cmpsb
rorb
mov
arpl
jle
pop
rcl
repz
pop
mov
jle
mov
out
xor
ret
cld
shrb
pop
fs
xchg
je
mov
mov
lret
push
mov
jecxz
cmp
mov
imul
rcll
popf
test
push
sub
cmpsb
inc
sbb
std
inc
push
or
xchg
dec
mov
mov
jge
adc
adc
push
xor
insl
mov
mov
into
add
push
inc
mov
inc
ljmp
mov
lret
xchg
mov
into
adc
cmp
or
sbb
inc
iret
js
inc
aas
push
xor
jb
aaa
mov
out
or
mov
or
inc
lret
mov
loop
push
sub
fisttpl
es
pop
movsl
add
mov
insl
push
xor
jbe
pop
xchg
cli
clc
xchg
ljmp
pop
cmp
mov
push
mov
int3
iret
je
fimuls
into
dec
pop
xlat
mov
sub
je
out
jp
xor
lods
sub
arpl
ja
call
je
pop
inc
adc
fldt
jecxz
arpl
into
push
imul
push
dec
shrl
and
jns
add
ja
xlat
add
sub
add
jno
mov
hlt
mov
mov
testb
sbb
xor
push
mov
cld
dec
jnp
dec
cmp
icebp
les
call
mov
test
mov
or
push
fnstenv
stos
sub
aas
dec
data16
ret
sar
xchg
sub
es
xorb
imul
es
scas
xor
sub
mov
repnz
das
dec
pop
cmp
push
es
jae
push
cmp
push
test
cmp
call
add
imul
jo
pop
cmp
dec
pop
lret
jle
push
jne
in
addb
or
mov
push
dec
roll
mov
mov
push
and
jno
cmp
push
mov
adc
repz
orb
inc
rorl
movsb
fstpl
inc
mov
out
jp
int
cli
rolb
push
or
fs
pop
jno
inc
mov
ja
adcb
jo
cld
xchg
vmwrite
dec
dec
repnz
pop
push
and
cltd
imul
fwait
pop
fucomip
ror
aas
xchg
testl
adc
lea
gs
cmc
push
inc
add
shrb
addr16
sub
iret
xchg
mov
gs
aam
outsb
out
lret
arpl
scas
fimull
imul
or
xor
sub
int
jnp
xchg
xchg
push
stc
inc
lcall
lret
retw
xor
sub
and
pop
xor
leave
ss
test
mov
movsb
push
mov
add
lods
add
sub
scas
popa
fdivrs
mov
mov
dec
adc
clc
cld
mov
and
inc
movsl
sbb
inc
jmp
testl
mov
dec
mov
inc
sub
sbb
fisttps
dec
mov
hlt
cmp
cltd
cwtl
pop
xor
leave
mov
lods
push
test
rcrl
mov
or
mov
push
int
das
pop
test
out
mov
bound
cmpsb
xchg
adc
pusha
or
es
into
pop
pop
addl
mov
sub
jne
or
push
push
xchg
pop
in
cwtl
mov
cmpsl
in
nop
stc
dec
mov
sub
fdiv
loop
call
push
dec
xchg
sub
or
xchg
mov
sti
push
fisubrs
pop
fxch
aas
xor
jl
push
pusha
push
pop
and
orb
shll
xchg
in
fcmovbe
sbb
iret
ljmp
imull
and
jmp
fisubrs
cwtl
bound
push
aad
adc
mov
cmp
push
test
inc
mov
sbb
dec
sbb
cmp
cmp
add
mov
out
cmpsb
sbb
in
adc
xor
in
je
int
call
mov
xchg
scas
jg
shl
pop
fs
dec
push
mov
mov
dec
dec
push
mov
dec
lret
mov
std
push
lret
mov
push
repz
cmp
lds
sbb
dec
arpl
aam
mov
shl
ss
aad
sub
xor
cs
out
das
cwtl
or
insl
loop
mov
and
mov
jmp
leave
test
mov
or
inc
out
and
call
into
jb
pop
imul
test
inc
test
mov
push
inc
sub
mov
inc
mov
ja
mov
stc
pop
pop
push
xor
jecxz
outsb
stc
or
xchg
sbbb
shrb
and
cmp
ja
xchg
cmpsl
xchg
leave
push
lret
aam
scas
or
sti
dec
jnp
jb
imul
jmp
jo
jge
arpl
jne
jmp
xor
repnz
pop
xor
lcall
adc
test
cmp
lcall
jns
mov
mov
in
repz
jbe
ret
fs
insl
cmp
mov
mov
mov
cwtl
cmp
mov
mov
movsl
push
jle
pop
enter
mov
cwtl
mov
sbb
mov
hlt
stos
test
pop
aad
std
push
enter
xchg
sbb
leave
sub
add
icebp
enter
imul
sub
bound
test
dec
sar
xchg
adc
add
lret
loope
add
lret
adc
in
and
cld
in
sbb
sbb
js
andl
pop
dec
dec
gs
mov
sbb
jno
lods
iret
xor
or
mov
sbb
movsl
jns
push
popf
inc
add
loopne
or
cmp
scas
and
lds
add
fidivl
mov
scas
and
imul
adc
fists
sbbb
enter
out
fwait
cmc
fwait
adc
push
mov
dec
push
lea
mov
adc
rolb
ret
jecxz
sbb
dec
roll
xchg
mov
xchg
xchg
xchg
fwait
sub
jnp
and
jge
ljmp
sub
sub
xchg
push
pop
push
stc
pop
iret
notl
daa
in
xor
xor
movsb
scas
cmp
stos
jl
and
sbb
lret
cmpsb
sbb
xchg
cmc
and
outsl
xchg
loope
lds
push
cwtl
aas
fsubs
dec
ficompl
pusha
iret
loope
pop
sti
jle
dec
adc
bswap
lods
dec
cmp
mov
sahf
aad
pop
lods
and
das
adc
fnstsw
nop
loop
repz
mov
mov
enter
imul
dec
mov
inc
xchg
ret
fnstcw
push
mov
push
and
mov
pop
fisttpl
jne
xor
jnp
push
icebp
xchg
test
pop
mov
das
inc
loopne
into
mov
mov
sub
cld
xchg
cmc
jmp
inc
or
xor
mov
jmp
cmc
jnp
dec
sub
mov
and
or
mov
jae,pn
or
in
cmp
int3
dec
and
jl
jb
addb
mov
cmpl
shlb
fidivs
jno
and
loopne
mov
cli
xchg
jbe
adc
hlt
std
sti
ret
ds
adcb
jne
test
xor
data16
pop
mov
xchg
es
sbb
cmpl
sbb
push
jbe
lods
jg
pop
cld
jl
cmp
imul
popa
stc
sub
and
cmp
call
scas
out
adc
sbb
loop
insl
or
mov
test
mov
cltd
es
adc
cmp
pop
in
mov
leave
and
push
loop
dec
hlt
notb
xchg
xchg
and
mov
enter
bnd
xchg
dec
add
rep
mov
mov
stc
gs
cmpb
dec
loop
or
pop
inc
and
arpl
imul
xor
stos
mov
js
loope
push
sub
repnz
bound
pop
sbb
test
jg
inc
sub
and
jmp
inc
jbe
mov
dec
fcompl
cmc
sub
test
dec
out
and
push
jbe
ret
pushf
xor
pop
mov
lcall
xor
mov
xchg
out
fs
mov
in
push
sbb
cltd
mov
sbb
out
pop
cmc
fs
aad
pop
lods
gs
testb
fisubrl
xor
pop
enter
inc
out
push
jne
mov
jno
push
cmp
daa
stos
xor
jp
lods
shll
cmp
nop
iret
jbe
rcrb
popf
adc
aad
test
push
cld
jbe
xchg
scas
add
cmpsb
xor
lds
adcb
add
mov
pop
mov
das
mov
pop
sti
pop
test
sub
ror
pop
cmpsl
sub
outsl
out
xchg
adc
movsb
pop
xor
loop
dec
out
es
pop
mov
inc
jb
sbb
je
adc
cs
pop
inc
scas
es
push
inc
int3
in
dec
mov
sbb
leave
pop
mov
shrl
pop
out
in
mov
repz
ss
and
pop
aam
mov
icebp
shr
cmc
aam
jge
xchg
int3
ficomps
jo
xor
cld
jae
movsl
lods
push
lahf
lds
shrb
cmp
xor
jo
adc
pop
push
dec
icebp
out
in
int3
nop
icebp
imul
fsubrp
xlat
ja
fcoms
dec
jbe
xor
xchg
pop
scas
mov
fistl
xchg
ds
xor
sbb
and
mov
ja
jecxz
mov
sbb
pushl
push
push
cwtl
shlb
mov
movsl
mov
lret
push
and
jae
mov
test
leave
iret
mov
and
test
inc
add
imul
sti
imul
ljmp
cmpsl
icebp
scas
sbb
fisttps
mov
mov
mov
clc
mov
pusha
fsubrs
xchg
shr
test
jns
dec
pop
cmc
mov
cltd
mov
jno
or
mov
lea
add
push
jbe
aam
aaa
fadd
mov
cmc
call
jmp
lock
cmp
or
mov
mov
sub
test
adc
arpl
jge
jnp
stos
negb
mov
rcrb
cmp
xor
dec
outsb
xchg
je
mov
and
mov
adc
dec
fidivs
push
aas
jmp
fisubrs
in
hlt
stos
addr16
xchg
inc
fmul
xchg
xor
dec
inc
push
sbb
imul
in
mov
add
les
fcmovnu
or
repz
ljmp
push
add
sbb
pop
ja
xchg
adc
cmp
fwait
xchg
mov
insl
daa
pop
xor
sub
sub
mov
js
xchg
scas
mov
adc
xchg
add
mov
push
sub
pop
cmp
dec
sbb
pop
lea
jle
insb
lret
xor
mov
add
rcll
cmp
repz
enter
xor
lcall
mov
subb
and
cli
inc
ss
cmp
xchg
fsubs
cmp
xchg
push
std
push
mov
lret
xchg
mov
xor
int
test
mov
scas
or
and
insb
aas
or
sarl
add
stos
mov
sub
push
sub
add
inc
les
stc
lret
arpl
cmp
sbb
or
insb
mov
jo
outsb
xor
in
add
push
xor
inc
jp
push
and
ljmp
dec
test
sub
ljmp
sarb
lock
cmpsb
cld
add
xchg
lock
ds
aam
add
inc
push
cmp
push
push
cmpsb
sbb
fcoml
cli
daa
cmp
js
test
sub
shlb
add
adc
popf
int
fdivrs
lret
mov
iret
and
adc
jnp
dec
and
cmpsl
enter
imul
test
shrb
inc
das
popl
inc
rorl
pop
es
inc
in
fisttps
mov
bound
or
sbb
enter
jmp
ljmp
pop
and
rorl
ljmp
mov
shrl
mov
cld
fwait
mov
cld
testl
fildl
push
xchg
dec
jnp
movsl
or
loop
cmp
dec
adc
std
pop
xchg
sub
mov
aad
sbb
movsb
sub
mov
add
out
dec
xchg
add
mov
ret
test
xor
cld
xlat
pop
repnz
or
fcomps
decb
ror
outsb
jge
scas
cmc
ret
fistl
jo
jp
out
inc
dec
inc
and
sub
ja
dec
adc
stos
pop
mov
cmp
and
xchg
enter
not
dec
or
cs
rolb
aam
dec
sub
sbb
or
jne
std
xchg
test
pusha
nop
ret
pop
or
insl
pop
xor
mov
mov
jne
sub
int
jbe
and
jns
sarl
xchg
insb
popf
and
imul
pop
jmp
jmp
mov
push
repz
sub
jecxz
cmp
push
faddp
and
dec
xor
jmp
cmp
xchg
leave
push
jnp
mov
fimuls
hlt
or
mov
jl
std
dec
test
mov
arpl
sbb
add
xor
insb
cmp
imul
ror
or
stos
pushf
jns
scas
imul
and
lods
in
xor
and
and
sbb
movsb
cmp
inc
pushf
push
sub
mov
xchg
jno
movsb
in
pop
cmp
pushf
lods
insl
mov
fisubrl
bound
lea
jge
push
xor
push
pusha
dec
dec
dec
mov
pop
loop
adc
fcoms
out
mov
xor
outsb
xlat
leave
fldenv
dec
cwtl
pop
fwait
in
inc
cmp
jns
mov
push
or
imul
inc
andb
pop
and
adc
jbe
add
vunpcklps
or
push
or
sub
jecxz
out
jl
xor
cmp
jae
por
aad
xchg
pop
jns
sti
incl
jo
pop
shl
dec
xlat
mov
sbb
jae
push
ds
sub
cmp
jp
int
and
and
xchg
sub
push
dec
lods
mov
adc
and
pop
xor
jo
aad
cli
mov
jno
loop
xor
gs
add
adc
push
fwait
lea
and
mov
mov
test
inc
in
daa
push
fs
loope
add
push
inc
push
mov
div
lods
pop
or
ljmp
adcl
idivl
pusha
xchg
into
lret
cli
jno
icebp
and
sub
add
loope
dec
jmp
mov
or
adc
out
imul
arpl
insl
adc
andb
sbb
pop
cmp
test
mov
movl
call
push
add
stc
pusha
jmp
notl
js
dec
jns
imul
cmp
int
sub
jns
push
lock
dec
push
leave
iret
cmpsl
sbb
stos
jne
notl
or
add
jns
hlt
lds
sahf
jg
in
js
push
notl
adc
mov
popa
jae
add
dec
push
add
lods
leave
cmp
fs
stos
push
lods
arpl
fmull
cltd
mov
dec
xchg
decl
cmpb
add
mov
push
mov
pusha
call
lea
jmp
pusha
lea
jmp
je
cmp
call
clc
shl
pushf
mov
call
lea
jb
call
jnp
test
sub
jmp
lea
jb
btc
sub
mov
pusha
sub
jmp
pusha
jecxz
mov
mov
jg
xchg
mov
out
leave
jp
xor
pop
xor
iret
add
shlb
push
mov
fisttpl
in
lds
add
push
dec
or
pop
enter
add
add
fsubrs
inc
or
xchg
das
mov
lret
xor
js
xor
jg
push
adc
pop
out
mov
bt
test
cmp
pushf
pushl
lea
jb
bsf
shrd
mov
shr
setb
not
and
shl
inc
pusha
mov
shr
setnp
xor
add
bswap
push
pop
pop
setb
pusha
lahf
movzbw
movsbw
lea
push
movb
lea
jmp
pushf
push
pushl
popl
movw
movb
pushf
mov
pushl
ret
clc
jmp
jmp
mov
cmp
and
jns,pn
outsl
stc
clc
sub
div
repnz
mov
inc
push
out
jecxz
ror
mov
sub
aas
leave
in
inc
stos
push
cmp
push
add
imul
push
xchg
or
addr16
fs
jo
jmp
cwtl
sarb
jne
test
sbbl
in
push
ja
int
pop
loop
cs
and
jp
jne
ret
insb
add
int
scas
ljmp
stos
stc
add
movsbw
lea
lea
call
mov
pusha
cmp
stc
pushl
cmp
movl
movb
pushl
push
lea
jb
sub
shl
btc
bts
mov
neg
mov
cmp
shr
push
jmp
rorb
scas
test
dec
int3
pop
ljmp
div
push
pop
cmp
es
add
sbbl
pop
pop
mov
ret
inc
jmp
pop
testl
jle
add
push
sbb
loopne
decl
push
or
pushf
sub
test
inc
loop
je
dec
aam
ficomps
xchg
push
pop
rcl
bound
jmp
cmp
out
xor
lea
call
adc
ror
stc
cmc
mov
cmp
bt
pushf
shl
clc
clc
test
pusha
add
movzbw
lea
call
pushf
stos
movl
mov
mov
pushf
lea
jmp
not
call
add
sub
mov
push
sub
dec
adc
add
add
add
cs
sub
mov
add
sub
ss
cmp
nop
push
sub
pop
adc
add
add
add
flds
add
adc
add
add
add
pushf
push
cmp
mov
adc
add
add
add
pop
cmp
test
sub
jae
sub
push
xor
add
adc
add
add
add
push
xor
add
adc
add
add
add
mov
push
sub
add
pusha
pushf
lea
jl
call
call
lods
lock
cmpsb
scas
xchg
cmp
daa
push
ljmp
push
lret
xor
sub
divb
loopne
jb
or
mov
inc
jns
push
pop
mov
insb
jns
xchg
insb
or
test
push
xchg
mov
fmuls
xor
mov
loope
sarl
sub
sbb
lea
and
or
or
mov
pop
imul
jno
dec
movsb
sti
mov
lcall
test
cmpb
xor
orl
sar
test
movsl
push
enter
scas
lret
icebp
xor
sbb
and
cmp
fsts
int
xchg
sti
fwait
ret
jmp
push
mov
fisttpll
adc
cld
fmul
test
nop
inc
dec
sub
mov
ret
inc
add
or
popf
adc
sbbl
fs
or
ret
sbb
dec
lods
xchg
sub
dec
and
pop
arpl
rcr
jnp
in
cmc
cmp
pusha
lea
ja
pusha
jmp
into
xor
lods
test
jecxz
xor
ljmp
jmp
in
out
xchg
cld
gs
sub
rorl
xchg
iret
ss
aad
or
push
jecxz
fs
inc
jp
dec
push
ja
mov
inc
or
mov
jnp
repnz
push
and
mov
lea
test
xchg
or
jecxz
je
sbb
clc
add
shll
lret
xlat
push
lods
enter
adcl
push
jmp
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
pusha
mov
movl
call
dec
mov
das
mov
cmp
sub
dec
or
js
loope
mov
or
leave
cmp
mov
sbb
fnstenv
jbe
dec
sub
cmp
xor
addr16
dec
dec
add
lock
add
xchg
xor
mov
and
data16
stos
test
les
add
fnstsw
pop
mov
jb
dec
mov
xlat
lock
fwait
jne
xor
add
or
jo
add
in
out
push
in
test
fsubrp
add
in
std
ffreep
lods
inc
jb
out
iret
push
or
or
cmp
xchg
mov
dec
jmp
add
cmp
lcall
xchg
mov
popa
add
das
mov
pop
push
outsl
sub
adc
dec
iret
jne
and
lods
inc
fscale
fwait
and
shr
inc
and
xchg
add
push
popa
inc
mov
sbb
xchg
out
lret
in
xlat
mov
pop
mov
mov
inc
js
jnp
mov
mov
mov
fs
pop
inc
jno
add
xor
out
fs
dec
jmp
insb
xchg
cmp
ficomps
insl
sahf
aaa
mov
fstpt
pop
inc
or
dec
add
add
cmp
or
push
leave
mov
sbb
hlt
movsbw
rol
inc
rol
add
shl
xor
pop
mov
jmp
cmp
pusha
mov
pushf
lea
ja
push
bt
imul
test
clc
stc
add
movb
mov
pusha
mov
lea
jmp
cmp
pop
aam
bswap
sub
pop
shr
pop
bt
pop
bswap
xor
xadd
pop
ror
rcr
pop
btc
add
jmp
enter
or
inc
fmuls
lret
cld
sub
mov
aam
in
cmp
fprem
jg
jmp
fsubrs
cmp
push
xchg
lock
icebp
loope
andb
jecxz
inc
cmp
push
or
sub
push
mov
pop
xchg
pop
mov
xchg
push
in
cmpsb
rolb
pop
jno
jns
or
scas
pop
dec
and
lret
mov
push
lock
adc
hlt
add
push
dec
push
je
mov
adcb
ds
cld
pop
xlat
aas
test
cli
and
adc
mov
add
xchg
scas
and
or
xor
out
sbb
jle
int
add
movsl
adc
call
fiaddl
mov
and
call
mov
es
push
out
out
adc
dec
lds
divb
icebp
cmp
dec
lock
movsb
push
add
pop
inc
aad
adc
cli
mov
xchg
hlt
enter
mov
scas
mov
gs
mov
jbe
mov
jo
ja
mov
mov
sbb
mov
inc
and
mov
loopne
lods
push
cmpsl
jae
insl
sbb
mov
pop
or
inc
push
andl
and
push
ljmp
or
faddl
sbb
pop
xor
mov
adc
fiadds
add
mov
int3
js,pt
popl
fdivl
insb
pusha
sub
push
jbe
cld
arpl
ret
pop
clc
cmp
test
loope
mull
adc
arpl
pop
and
arpl
mov
lret
jae
push
adcl
mov
pop
mov
mov
dec
std
add
aam
mov
test
adc
rcrl
adc
inc
adc
xlat
xor
lret
fldcw
or
fs
aad
out
sti
idivl
inc
lods
clc
push
fidivrs
jecxz
lods
pop
outsb
out
out
mov
add
aaa
fidivrs
shlb
es
add
lahf
outsl
or
addr16
iret
fsubr
aad
xchg
aas
fstpl
scas
addr16
xor
sub
cmp
cmp
jg
pop
xor
in
shrb
mov
dec
cmp
jmp
dec
notl
xor
sbb
xchg
adc
adc
jno
sahf
mov
pop
sub
hlt
pop
bound
xor
push
arpl
dec
sti
mov
popf
lods
pop
test
xchg
test
mov
and
test
insb
pop
sbb
repnz
das
aad
jp
aaa
inc
jno
nop
inc
movsb
std
mov
and
mov
xchg
jmp
out
cmp
pushf
and
mov
adc
popf
mov
imul
sub
push
mov
clc
xchg
pop
out
dec
push
jecxz
fdivrl
ret
scas
inc
dec
or
testl
cli
adc
sub
sbb
decb
ja
mov
cmp
push
xor
mov
sahf
popf
mov
push
cmp
lcall
jmp
nop
popf
sub
pop
int3
adc
fsubl
cmp
xchg
test
mov
or
inc
and
idivl
xchg
jmp
xchg
nop
mov
xchg
loope
pushf
mov
pop
pop
xlat
jns
enter
jge
loope
adc
or
push
daa
inc
fwait
adc
dec
gs
in
cmp
add
stos
or
mov
lods
cli
aaa
mov
ror
in
enter
repz
mov
js
arpl
fxch
adc
test
sbb
fs
or
push
xor
inc
add
repnz
mov
adc
mov
or
int3
out
dec
repnz
fcompl
dec
dec
sub
jb
ret
cmp
pushf
ficompl
add
mov
push
sbb
and
pop
flds
insl
hlt
repz
out
mov
pop
or
lret
and
mov
fs
push
mov
ret
fs
pop
fdivs
add
ljmp
ret
inc
inc
sub
cmp
cmp
icebp
pop
inc
cli
loop
or
sbb
rcrl
jae
or
dec
pop
inc
add
adc
pusha
movsb
xor
push
in
mov
hlt
xchg
js
mov
mov
shll
push
in
and
and
push
mov
lret
popa
ss
stos
mov
inc
cmp
mov
push
sub
dec
and
cmpl
xor
popf
loop
push
jnp
cmpsl
ret
icebp
inc
iret
int
rol
dec
les
xchg
and
in
dec
mov
addr16
inc
mov
test
ds
cs
mov
add
in
inc
add
adc
adc
jb
jge
mov
sub
dec
fwait
je
sbb
in
mov
iret
cmpsl
repnz
sahf
jg
xor
xor
xor
or
inc
adc
test
mov
adc
sub
pop
in
pushf
enter
xchg
pop
or
das
arpl
js
loop
xor
insl
js
stos
xor
test
outsb
jecxz
ljmp
loop
fadd
mov
xchg
pop
adc
xor
push
out
in
loope
in
xor
sub
pushf
jg
mov
into
stc
push
inc
ljmp
enter
push
ds
jae
sbb
testl
mov
sbb
adc
insl
fsubrs
and
je
gs
pop
pop
xchg
jae
sub
xor
sbb
jne
inc
sub
shr
inc
inc
lea
popaw
lods
cmp
jns
scas
and
and
cmpsl
mov
sbb
push
inc
ja
mov
mov
rolb
mov
push
cmc
jecxz
lcall
adc
lahf
add
cmp
inc
jmp
es
cmpsb
iret
adc
lods
dec
lahf
sbb
lods
sahf
iret
jbe
jns
data16
mov
add
enter
scas
loope
inc
ror
je
int
xor
movsb
push
clc
sbbl
dec
mov
aas
pop
clc
lret
and
adc
mov
push
lea
jo
es
inc
push
jg
sbb
adcb
jno
push
xor
out
push
std
jnp
xor
enter
sub
push
lret
out
enter
add
out
stos
repz
js
mov
sarb
cmp
test
pop
mov
cwtl
push
je
enter
adc
xorl
xor
inc
or
pop
iret
add
stc
aad
xor
sbb
jmp
sub
sub
jg
fs
inc
mov
fcos
dec
clc
or
sbb
xor
xchg
cmp
mov
scas
sbb
jmp
pushf
js
add
movsl
outsl
ret
mov
fsubs
rorb
or
ljmp
test
pusha
mov
adc
inc
js
xor
lods
xchg
aam
js
test
loop
mov
xchg
fidivl
pop
adc
xchg
add
in
add
cmp
loope
lods
sbb
add
add
addr16
fwait
cmpl
cmp
push
cwtl
test
mov
mov
and
jb
lahf
mov
stc
and
incb
shlb
shrb
lods
jo
and
cmp
pop
or
orl
out
outsb
outsb
pop
and
xor
mov
lods
mov
mov
add
jne
ljmp
sbb
pop
loope
fcoms
ror
adc
xor
fwait
daa
bound
imul
iret
push
sub
lret
xchg
dec
push
adc
roll
push
inc
outsb
repnz
mov
js
xchg
push
dec
and
popl
ss
push
xchg
xchg
adc
dec
sbb
add
out
xchg
pop
adc
xchg
jecxz
stc
xor
clc
subb
mov
add
outsb
mov
ljmp
daa
clc
mov
adc
xor
mov
out
mov
dec
std
scas
push
sub
imul
mov
cwtl
adc
push
dec
and
push
call
cli
xor
jbe
out
jp
in
in
or
in
inc
sbb
and
ljmp
sbb
mov
or
sub
dec
in
xchg
jg
sti
shl
lock
push
out
in
mov
mov
jecxz
jo
cmp
jge
je
outsl
inc
pop
inc
loop
test
mov
mov
arpl
xor
dec
and
mov
mov
fisubrl
mov
push
fidivrs
in
sbb
repz
and
push
icebp
or
push
mov
jecxz
push
loopne
lret
mov
ss
jb
sub
or
orl
or
leave
pop
out
xlat
and
add
lods
sbb
add
scas
out
xor
loop
call
ret
shrl
pop
imul
dec
inc
sarb
fiaddl
jmp
xchg
imul
and
scas
ret
push
xchg
mov
push
test
in
pop
pushf
cmc
mov
jmp
or
cmp
xor
xor
push
in
imul
fisttpll
or
rcr
cmp
scas
shrb
aam
jbe
aaa
pop
jne
rcll
pop
test
lret
xor
push
out
test
es
pop
loop
cld
sti
jg
leave
adc
aam
dec
imul
push
push
and
in
mov
cmpsl
mov
jbe
pop
test
or
cmp
clc
xor
mulb
aaa
fucom
adc
addr16
inc
dec
aam
stc
leave
mov
dec
iret
mov
jle
cld
inc
aad
pop
sbb
shrl
pop
mov
cmovle
sub
push
addb
in
adc
lock
mov
xchg
pop
mulb
lret
inc
xchg
je
push
popf
jle
push
das
insb
mov
xchg
xchg
or
and
jo
loopne
inc
mov
inc
fnstcw
ds
pop
and
mov
push
xchg
std
adc
pop
sub
cli
mov
lods
int
rcl
fidivs
or
lretw
fldcw
das
pop
adc
mov
js
fs
nop
and
mov
jecxz
and
out
pushf
push
icebp
repnz
jg
popa
adc
pop
fs
fistpll
push
lcall
stos
inc
mov
out
inc
sub
outsb
imul
fsubl
out
pop
xchg
ss
cmp
or
lock
jmp
cltd
xchg
cmc
fnstsw
xchg
sbb
mov
pop
ficompl
daa
rclb
mov
push
jp
fnstenv
arpl
aam
mov
pusha
lds
leave
lods
pop
or
push
cmc
jbe
shlb
fucomi
std
inc
fidivrs
fucomi
mov
imul
mov
and
add
test
adc
mov
clc
sbb
les
pop
sub
addr16
test
lods
add
scas
inc
jns
iret
repnz
xchg
data16
inc
sbb
xlat
cmp
add
or
dec
je
sbb
scas
gs
adc
ret
sub
sbb
or
mul
bound
xor
out
rclb
jnp
or
mov
lock
add
mov
push
xchg
mov
dec
ret
mov
lahf
inc
sahf
sub
and
lds
mov
lret
test
add
cltd
test
pop
pop
mov
cmp
xor
mov
sbb
lock
xchg
test
cmpsb
pop
nop
add
add
sbb
adcl
dec
mov
scas
movsb
fwait
negb
jmp
xorb
jle
mov
xchg
mov
add
imul
mov
cmpsb
jae
sbb
out
and
ret
inc
loopne
out
out
sbb
or
mov
cmp
adc
inc
ja
shll
and
icebp
out
fidivrs
pushf
fistpl
mov
xor
add
cmp
lea
int3
fucom
fwait
daa
aas
jno
jae
outsl
pop
out
add
xchg
xor
ret
sub
inc
mov
cli
pop
mov
dec
enter
iret
int3
fdivp
sub
add
shlb
out
shl
fiadds
stc
cld
cmpxchg
mov
dec
icebp
mov
loopne
shrb
and
stos
xchg
ljmp
sbb
jb
mov
mov
xchg
xor
sub
xor
leave
xor
test
es
negb
lcall
push
ss
gs
out
dec
xchg
movsw
ljmp
jl
push
sar
icebp
ljmp
or
insl
inc
fildll
adc
test
cmp
cmpsl
pop
ljmp
cwtl
add
movsb
andb
sub
cmc
lret
stc
test
pop
mov
out
xchg
fst
dec
mov
mov
add
push
iret
adc
jge
jle
mov
jo
int3
push
pop
mov
mov
mov
fisttpl
adc
fptan
inc
xchg
ss
push
ds
push
mov
leave
daa
lods
sahf
xorb
adc
pushf
xchg
mov
pop
xchg
xor
fidivs
in
jae
ficoml
insl
fldt
cmpsb
aad
call
test
test
data16
aad
dec
es
insl
adc
rcrb
enter
movsl
adcl
js
add
iret
jno
fs
push
xor
add
leave
push
sub
icebp
or
ds
lret
jg
jl
scas
and
scas
xchg
out
lcall
dec
adc
fwait
leave
dec
jle
adc
fs
out
sbb
add
loopne
rcrl
test
pushf
inc
data16
and
mov
jg
shll
lods
movsl
mov
pop
js
xor
mov
in
or
ds
adc
push
shll
or
cmp
jno
roll
push
pop
dec
stc
int3
jge
mov
xchg
mov
lret
mov
subb
xor
in
sarl
dec
rorl
inc
mov
roll
lods
movsb
daa
add
in
adc
pop
cmp
pop
test
loop
mov
clc
jns
int3
jne
lds
fnsave
adc
mov
aad
sub
sarb
adc
out
inc
sub
test
pop
xlat
iret
enter
sub
out
int
lret
and
push
imul
loop
imul
sbb
inc
pop
pop
or
push
aad
bound
int
xor
mov
or
fstpl
mov
sti
mov
icebp
ja
mov
sbb
nop
ja
or
bound
add
popa
jl
inc
jecxz
fldt
jo
mov
negl
sahf
jle
add
mov
rorl
scas
push
sti
push
cwtl
sbb
test
repnz
movsl
push
xor
outsl
int3
sub
rclb
or
mov
cmpsl
addr16
xchg
pop
es
or
pop
cwtl
lock
fabs
push
mov
dec
out
push
inc
pop
sub
aaa
sti
in
negl
mov
outsl
pop
mov
dec
mov
inc
ljmp
stos
cmp
loopne
dec
fisubl
shr
movsb
aam
pop
ljmp
sub
inc
push
jecxz
xor
jnp
push
mov
xor
lock
adc
lea
and
sub
mov
xorl
or
loope
mov
mov
cmp
cltd
cmpsb
xor
xchg
jb
sbb
aas
test
pop
cwtl
out
lods
add
cwtl
movsl
sub
jle
and
xlat
stos
mov
or
mov
pop
cmc
mov
cwtl
pusha
lods
jmp
repz
sbb
ja
orb
or
je
out
dec
mov
adc
sahf
mov
pop
in
add
and
lods
ret
fistps
std
xorl
mov
test
xor
mov
xchg
shll
cmpb
cmp
outsl
dec
cmp
rclb
mov
dec
mov
out
fmull
jbe
popa
loopne
push
rcrl
les
test
inc
js
aaa
aam
push
dec
es
loop
mov
sbb
jne
es
jle
or
jnp
mov
xlat
mov
xchg
push
dec
sbb
push
pop
cmp
mov
jg
push
mull
adc
sti
out
test
dec
add
and
lods
mov
jno
cltd
movsb
inc
jp
sub
add
cld
cmp
je
lods
mov
stc
jle
cwtl
dec
jge
pusha
into
cwtl
mov
jb
mov
pop
or
push
push
mov
movsl
cltd
push
fbld
inc
dec
les
ds
sbb
repz
sub
testb
mov
or
inc
aaa
sub
or
out
mov
stc
or
pop
and
jb
into
mov
outsb
pop
xchg
ret
movsl
outsl
xlat
pop
xor
or
adc
mov
rcr
in
imul
mov
xchg
test
insb
xor
sti
jp
popa
out
aas
fdivl
push
dec
inc
ds
mov
xchg
ret
jecxz
or
mov
pop
mov
repz
adc
out
push
stos
movsl
nop
out
int
ja
xor
outsl
and
ss
ret
cmovge
xchg
push
fildl
pop
fbstp
adc
jecxz
imul
int
inc
sub
test
adc
sub
sbb
int3
es
or
in
pushf
sbb
xchg
fldcw
dec
adc
fcomps
addr16
adc
jle
loope
stos
aaa
fmull
adc
push
cs
aam
dec
addr16
mov
sbb
lods
fstpl
sub
in
push
push
arpl
pop
xchg
rcl
cmp
pop
cli
js
adc
ds
pusha
cmp
rclb
inc
xchg
mov
cmp
jnp
cmp
cmc
push
ret
scas
jge
xchg
icebp
jae
mov
lods
xor
push
add
push
mov
sbb
xchg
test
xchg
mov
mov
bswap
jno
into
fcom
stos
ficoms
push
stos
jg
sbb
mov
mov
jnp
push
lahf
sti
pop
dec
in
push
pop
and
test
or
mov
sub
cmpsl
xchg
sbb
and
mov
call
aam
dec
and
or
sub
ficomps
das
cld
shl
aam
cli
mov
push
mov
cmp
mov
mov
test
inc
xor
and
add
pop
mov
stc
cli
dec
push
inc
dec
push
scas
decl
mov
jg,pn
ret
repnz
imul
sub
lcall
mov
test
out
xlat
test
jbe
pop
mov
and
daa
xor
push
fcomps
push
lret
jbe
f2xm1
movsb
mov
lods
jnp
jae
jns
push
popf
and
xor
xchg
xchg
xor
scas
imul
push
sub
stc
xchg
ficoms
outsl
call
bound
or
or
mov
mov
xchg
in
adc
pushf
rorb
push
into
sti
ret
mov
sbb
xchg
jbe
xchg
and
arpl
pop
cmc
and
bound
jbe
push
int
push
sub
push
push
arpl
fldl
clc
mov
jge
push
jecxz
push
fiadds
outsl
andl
jecxz
xchg
jle
xchg
lret
jnp
adc
lea
ljmp
push
fisttps
mov
mov
fdivrp
daa
adcb
jae
fistps
fucom
mov
push
clc
dec
imul
imul
test
pop
xchg
aas
pop
pusha
adc
push
cwtl
jo
in
adc
out
cmp
mov
jle
push
mov
push
scas
cltd
xor
xor
shlb
fdivs
xchg
aas
and
cmp
int
inc
mov
adc
pop
or
sbb
cmp
jno
mov
and
sub
mov
in
xchg
dec
xchg
lahf
fimuls
add
and
pop
stc
rcll
mov
dec
adc
sbb
pop
les
icebp
lret
mov
test
popl
lret
cmc
and
imul
jno
sub
mov
movsl
inc
repnz
lock
cmp
leave
in
dec
in
adc
lret
sub
out
add
ss
fisubs
jge
inc
xor
shl
pop
in
sub
sub
or
adc
add
pop
adc
ds
mov
jmp
nop
repnz
jle
popf
jl
inc
je
mov
mov
jno
pop
orl
imul
and
mov
jge
rorl
les
movsl
mov
inc
nop
lret
leave
not
testb
or
fnsave
dec
shrl
ja
ret
out
xchg
mov
mov
pop
or
inc
inc
lods
ret
mov
es
sti
xchg
inc
and
int3
or
cmp
jnp
or
xor
mov
cltd
dec
xor
pop
sbb
cwtl
mov
es
aaa
inc
pop
jne
pop
adcl
cmpsb
pop
pop
fs
or
aam
mov
pop
imul
aaa
xor
arpl
loopne
sbb
add
and
insb
xorl
pop
enter
aad
or
pop
fdivrl
inc
mov
sbb
out
cmp
call
mov
scas
xor
push
ja
lods
adc
gs
xorl
iret
mov
fdivrp
in
sub
int
jg
xchg
mov
loope
outsb
in
or
xlat
cmp
out
xor
dec
mov
and
xchg
cmp
and
fwait
or
les
enter
or
sbb
inc
lds
jo
aas
push
add
adc
ja
lret
cli
or
repnz
xchg
adc
cmp
stos
loopne
lds
xchg
fdivrs
mov
into
lcall
mov
ret
xchg
xorl
xlat
out
cltd
sub
cmp
iret
pop
pushf
mov
dec
jmp
xchg
stc
outsl
mov
dec
out
mov
subb
mov
icebp
ficomps
add
add
xor
push
cmp
fists
sub
stc
int3
test
test
inc
in
test
mov
ficoml
mov
ljmp
out
pop
mov
mov
lods
addr16
pop
xchg
ja
fwait
pop
out
aad
dec
cmpb
and
outsl
inc
push
hlt
xchg
and
add
cmpsl
mov
mov
hlt
sarl
add
jne
xchg
hlt
mov
scas
xchg
cmpl
cmpsl
mov
push
mov
xchg
mov
ljmp
js
xor
xor
inc
push
jl
pop
stos
test
push
pusha
fbstp
or
pop
jmp
addr16
shll
aas
sub
fldl
ja
push
pop
sbb
xor
cmp
xor
mov
lcall
inc
mov
add
mov
cltd
repz
mov
push
movsb
add
test
push
aad
es
icebp
dec
inc
aam
ret
in
and
adc
push
push
rcll
jne
mov
dec
push
mov
mov
and
fbstp
out
lret
inc
push
mov
add
xor
mov
push
mov
pushf
cmp
mov
push
clc
mov
fcoml
std
mov
jg
xchg
popf
mov
mov
stos
pop
dec
popf
inc
movsl
ljmp
insb
pop
sbb
push
repz
lods
and
cmc
jae
mov
repz
push
mov
iret
ljmp
gs
inc
mov
mov
sub
add
xor
jns
lret
mov
and
jle
push
cmp
stos
movsb
loopne
adc
movsb
add
arpl
sub
cs
stos
adc
and
int3
cmp
divl
lods
sbbl
mov
and
loopne
scas
jo
push
rep
and
idivl
jnp
sbb
dec
cmc
dec
inc
xor
add
in
xchg
dec
xor
dec
sub
xchg
daa
pop
lahf
ffreep
mov
leave
xlat
xchg
jnp
roll
and
jnp
or
jecxz
pusha
fcoml
or
sbb
pop
jmp
xchg
jo
dec
aas
adc
cmp
mov
pop
inc
sub
nop
push
sbb
lahf
popa
nop
push
jmp
jge
cmp
mov
xchg
push
test
adc
or
mov
xorb
fcoml
mov
icebp
dec
dec
bnd
lods
arpl
shlb
adc
push
and
jmp
rcrl
mov
sarl
repnz
dec
xchg
leave
cmp
mov
cs
test
add
xchg
mov
int
clc
xor
sbb
cmpsl
xchg
inc
mov
sahf
push
pushf
test
jbe
adc
insb
jmp
pop
movsb
xchg
push
cmp
dec
push
aas
jmp
addb
cmp
add
stos
push
pop
roll
inc
fwait
stos
out
rorb
lcall
loopne
cmp
push
sbb
pop
and
enter
in
sahf
insb
stos
xchg
or
neg
mov
push
sub
mov
add
test
adc
lahf
repz
jb
dec
aas
loopne
push
cmpsl
xchg
cmp
xor
in
push
movb
jb
cmp
pop
aas
enter
sub
out
mov
iret
test
mov
repz
add
in
cmp
int3
gs
sub
pushf
inc
std
cmp
xor
push
cltd
sahf
mov
ds
sub
or
or
movsl
ja
ljmp
mov
adc
popl
in
sub
mov
jg
lcall
test
push
jo
push
cmp
mov
cs
and
rol
pop
mov
jo
sub
das
int3
jb
lods
ss
movsl
repnz
fcom
cmp
push
in
inc
xchg
lods
mov
or
xchg
addr16
test
inc
sbb
adc
xor
jl
sti
lock
test
movsb
and
movsb
xor
loopne
xor
addr16
arpl
outsl
jne
add
push
test
stc
pop
mov
cmpb
adc
sahf
push
cmp
popa
dec
sbb
inc
sub
shlb
xor
ljmp
mov
jp
inc
xchg
fsts
aad
loopne
clc
dec
jae
sbb
daa
cmp
sub
xchg
and
outsl
dec
subb
or
lods
sub
cld
sar
jmp
sbb
pop
inc
sbb
sub
and
scas
je
lret
cltd
mov
xor
inc
mov
pop
mov
cmc
adcl
fnsave
aad
and
pop
sahf
xor
add
jbe
xor
in
lahf
andl
inc
inc
cltd
test
jge
mov
cmpsb
sarb
insb
jb
adc
test
testb
inc
push
push
fdivr
rcll
inc
pop
mov
cmp
add
xchg
push
sbb
and
cmpsb
push
repnz
loop
bnd
dec
es
push
lret
add
cs
mov
push
mov
in
test
cmpl
aaa
add
mov
mov
insb
ret
addr16
inc
jb
and
add
mov
sub
ret
into
movsl
imul
sti
aad
loop
mov
mov
mov
shll
dec
adc
test
inc
ljmp
pop
xchg
testl
aad
jl
mov
add
loope
jbe
pop
mov
xchg
push
jp
inc
ret
adc
sub
cld
mov
lock
push
lods
jae
mov
mov
lds
xor
cs
je
push
rorb
xor
push
dec
subb
daa
xor
jo
je
mov
inc
xchg
shll
push
dec
je
mov
push
lret
cmp
cwtl
xor
fcompl
out
in
and
dec
mov
sti
or
xchg
sbb
repz
adc
or
xchg
in
cmp
lahf
mov
sub
adc
mov
mov
into
outsl
mov
loop
out
loopne
inc
out
add
iret
add
sub
push
les
inc
popa
inc
sub
imul
mov
sbb
lret
aaa
lock
data16
jno
xor
or
outsb
or
sahf
sub
fnstenv
sbb
stc
push
pop
dec
sub
mov
ss
xor
stc
enter
mov
mov
cmpsl
cli
insl
loope
jo
or
jge
jmp
cmp
cmp
test
lods
xchg
mov
ret
fistpll
leave
lret
xchg
xchg
in
pusha
mov
and
mov
cld
push
mov
xchg
hlt
insb
lret
mov
push
sub
cmp
mov
rsqrtps
add
dec
mov
cld
iret
pop
sti
mov
add
pop
cmp
pop
loope
mov
pop
push
xchg
roll
outsb
repz
outsl
or
mov
push
pop
pop
add
add
std
add
sbb
popf
mov
stc
and
fisubrs
aas
xchg
cwtl
ss
scas
aam
mov
dec
push
mov
adc
xchg
mov
mov
cmp
jle
imul
cmp
jge
ljmp
pop
dec
hlt
addr16
jg
nop
jb
jp
mov
jns
pop
and
imulb
jle
mov
popf
lods
mov
arpl
scas
mov
jae
pop
aas
or
ljmp
ss
icebp
mov
sbb
or
fcompl
jno
out
sbb
orl
cmp
cmp
and
dec
fldt
mov
cwtl
data16
mov
xlat
push
pop
fcomp
fnstenv
jle
dec
int3
pop
mov
xor
aaa
xchg
push
rol
icebp
imul
lods
scas
lds
nop
inc
outsb
cld
lret
dec
sahf
lock
andl
arpl
mov
insb
fsubl
push
cmp
adc
jnp
xchg
xlat
aas
shll
loopne
insl
mov
je
ss
scas
clc
loope
stos
cmp
sub
loop
pop
enter
jle
lret
mov
push
lea
inc
pop
pop
sub
icebp
loop
in
fildll
cmp
and
push
loopne
iret
test
clc
pop
pushf
push
shlb
rcrl
outsb
jmp
or
jns
out
mov
push
sub
adc
pop
jno
flds
movsb
mov
sbb
inc
sub
mov
inc
popa
das
push
repnz
sub
mov
jmp
add
imul
lahf
xchg
lret
fidivrs
push
out
inc
ficoms
push
mov
loopne
xchg
mov
in
and
add
and
xchg
fimull
cmp
xchg
adc
add
testb
cmp
cmp
dec
push
push
push
cmp
inc
push
loope
aad
add
adc
ss
pop
sub
jecxz
or
push
xor
mov
pop
movsb
rcrb
jbe
dec
cmc
adc
movsl
mov
cmpsb
cmc
lock
adcb
fwait
lds
movsb
out
sarb
and
arpl
fnstsw
cli
clc
aam
sub
dec
loopne
dec
outsl
shl
pop
mov
aam
mov
adc
mov
pop
xor
loope
push
mov
rclb
pop
or
int3
enter
pop
sbbl
iret
jo
xor
gs
dec
loop
add
sbb
and
fsubrl
leave
dec
and
repnz
imul
mov
in
call
inc
inc
repz
movsl
loop
jo
cmp
enter
xor
fsubrs
ret
adc
add
lret
setb
stos
lods
pop
mov
mov
pop
popf
xor
lods
dec
dec
jnp
clc
mov
std
push
jbe
mov
leave
cmp
insb
fimull
leave
xchg
fistl
ss
sub
inc
fmull
cltd
fnsave
sbb
addr16
add
sub
jb
arpl
mov
jg
push
hlt
iret
pop
pop
je
fcomi
sarl
xor
cmp
ljmp
sbb
lret
in
inc
ret
lret
std
dec
rolb
scas
cs
aaa
xorb
repz
ljmp
dec
pop
jmp
jne
push
enter
cmc
xchg
test
inc
fcompl
push
nop
movl
cmpsb
insl
cli
sub
rorl
sub
enter
repz
pop
push
xor
lahf
sbb
fsubs
dec
mov
in
mov
nop
xchg
mov
insb
in
xor
push
in
rcrb
outsl
cwtl
or
sbb
sbb
ret
jae
andl
sub
cli
mov
lods
inc
es
xor
sub
jl
lods
jle
ja
mov
push
sub
mov
add
xchg
xor
mov
sbb
or
mov
lahf
xchg
push
jmp
or
push
in
clc
out
mov
stos
xchg
mov
rclb
mov
mov
xor
enter
mov
hlt
xor
push
enter
or
repnz
gs
cmpsb
xchg
jecxz
mov
push
xchg
mov
movsb
les
sbbl
pop
in
bound
add
pop
pop
scas
nop
or
aad
push
xor
pop
loope
into
out
push
add
sbb
mov
mov
xchg
bound
jg
cmpsb
aad
jno
push
dec
sbb
imul
adcl
stc
push
test
mov
jl
iret
int
push
push
lret
dec
out
aaa
pop
test
fdivrl
jmp
subl
dec
les
jbe
push
sub
xchg
xchg
adc
aas
dec
adc
adc
dec
enter
adc
lret
or
loopne
les
mov
js
rorl
andl
mov
inc
dec
push
fsubs
dec
pushf
movsl
add
jnp
loope
mov
add
sahf
mov
cwtl
xchg
roll
gs
and
orl
jecxz
sbb
dec
enter
xor
and
mov
aaa
outsl
pop
mov
xchg
lcall
popf
sbb
push
clc
mov
sub
mov
sub
sbb
dec
in
xor
stos
or
cmp
test
pop
pop
das
pmullw
sub
pop
cmp
cwtl
pop
mov
ja
mov
xor
cltd
iret
lods
push
pop
mov
arpl
insb
in
lahf
dec
mov
sub
jne
jnp
mov
mov
sbb
mov
das
lret
pusha
cmp
sbb
lods
sbb
adc
jge
sub
out
sub
sbb
dec
int3
mov
dec
push
mov
jp
or
mov
nop
xchg
push
xchg
mov
sub
mov
push
fidivrl
out
dec
cmp
imul
inc
jbe
mov
scas
lahf
dec
lea
out
add
outsl
mov
add
mov
sbb
jecxz
fmul
rcll
movsl
fs
stos
add
popa
aas
cmp
inc
pop
stos
lods
dec
scas
les
push
and
mov
xor
insb
sub
sub
test
or
mov
sbb
lods
subl
inc
add
std
jge
sahf
enter
or
rcll
mov
and
inc
cwtl
idiv
xchg
jg
nop
xor
or
mov
inc
lret
iret
shrb
mov
xor
out
ror
mov
xor
nop
fisttpll
in
or
test
shrl
leave
add
test
jmp
fs
pop
stc
mov
fsubp
test
adc
sbb
jge
ljmp
pop
ret
cld
lods
popa
push
lcall
js
cmp
lret
add
adc
xchg
jnp
sub
pushf
hlt
andnps
cmp
leave
dec
stc
xor
insb
loope
scas
cs
or
push
add
and
xor
push
mov
aam
inc
out
jp
repz
repz
test
adc
mov
adc
jmp
mov
addr16
jecxz
ret
jl
mov
leave
enter
inc
adc
loopne
jns
mov
push
ss
cmp
cltd
or
jns
xchg
push
sar
int3
pop
cmpsb
or
ds
sbbl
mov
call
push
out
xor
jl
test
mov
add
pop
or
or
int
xor
mov
sub
fadds
mov
pop
add
js
punpcklwd
adc
xor
loope
xor
mov
adc
sbb
jno
std
push
or
ljmp
cmpsb
inc
js
orb
sub
mov
repnz
insl
lds
jnp
loopne
jb
and
xchg
sub
orb
dec
enter
add
das
dec
add
xchg
xchg
and
fsubrs
xchg
call
jno
push
aad
mov
pusha
idivb
test
loop
dec
dec
gs
dec
ss
mov
dec
mov
jl
test
ss
in
iret
cmovae
adc
fistps
pop
cmpsl
das
add
sub
cmp
xchg
inc
test
dec
pop
incb
jecxz
ja
movsl
push
mov
inc
xchg
or
rcll
rcrb
es
fisubrs
cwtl
dec
push
fs
mov
dec
imul
dec
stos
jns
inc
mov
cmp
or
xor
cmpsb
sbb
icebp
pop
movsb
fwait
jne
lahf
loope
mov
pop
out
push
cmp
cmp
mov
pop
and
sbb
bound
mov
mov
cmp
lods
mov
lahf
arpl
push
push
lods
push
arpl
pop
push
and
popf
arpl
cmp
das
adc
push
inc
cs
mov
pop
mov
push
pop
xor
arpl
clc
jbe
sar
imul
pop
add
das
pop
mov
push
sbb
sub
mov
or
mov
sbb
jmp
popa
xchg
movsb
pop
mov
push
fnstenv
and
mov
leave
adc
or
clc
pop
sar
mov
dec
sub
xchg
addl
in
lahf
imul
ret
mov
adcb
xchg
loop,pt
outsl
cmp
incl
xchg
fcomps
mov
mov
mov
xchg
add
test
mov
cwtl
fdivr
jne
sub
daa
sub
test
push
adc
fs
pop
imulb
push
inc
add
gs
jp
push
add
cmp
in
add
adc
mov
push
xor
cmpsl
mov
movsb
cmp
mov
sub
pop
mov
mov
std
jb
push
repnz
lahf
mov
repnz
mov
iret
pop
das
mov
rorl
orl
cltd
iret
mov
in
leave
xchg
mov
pusha
mov
push
imul
mov
inc
pop
cmc
push
jnp
xor
je
fs
lds
mov
in
lods
mov
cli
loopne
or
mov
cmc
lds
cltd
mov
xchg
and
xchg
insl
adc
dec
in
jbe
popf
int
pop
pop
fs
in
movsl
test
mov
call
and
push
pop
lods
lock
and
iret
or
aam
out
scas
jg
jl
push
xchg
sbb
mov
in
mov
or
and
mov
in
lahf
rcll
subl
popa
pop
repz
out
pop
add
dec
ss
inc
add
lahf
int3
xlat
add
in
jno
sbb
nop
mov
sbb
stos
insl
mov
scas
int
mov
pop
or
lahf
cmc
push
jbe
inc
ljmp
lods
mov
hlt
jge
mov
lahf
sub
xchg
int
cmp
imul
dec
into
jns
daa
sub
mov
push
xor
aas
jb
icebp
push
addr16
dec
jne
add
or
jl
jmp
xchg
jno
dec
mov
fdivl
dec
pop
add
mov
mov
jp
pusha
out
adc
ret
xchg
and
adc
rclb
mov
imul
repz
shll
lahf
fildl
cld
xor
cli
test
xor
lea
mov
sbb
aaa
hlt
mov
xchg
fwait
arpl
push
loope
int3
xor
pop
mov
into
jl
cmp
and
mov
loop
jns
and
cmp
jp
mov
jl
mov
cmp
mov
lcall
fiaddl
dec
push
fidivl
push
data16
dec
and
mov
jp
ja
mov
shll
hlt
es
sbb
repz
jle
fstps
pushf
sbb
orl
int3
test
in
out
outsl
mov
mov
nop
idiv
cmp
inc
xor
push
pop
and
jg
xchg
cmpb
inc
push
cmp
dec
call
sbb
sti
cmp
popa
or
cmp
xchg
add
test
lods
movsb
imul
nop
stos
cwtl
dec
add
shrl
cmpsb
insl
cmc
xor
loope
xchg
int3
cltd
adc
xchg
hlt
shrl
sub
or
scas
push
jmp
test
sbb
xor
jb
lods
scas
xchg
xor
pmaxsw
sub
mov
push
mov
jecxz
pop
test
call
test
or
mov
xor
add
push
ret
cld
inc
fwait
and
arpl
cmp
fcomp
pop
and
jno
into
mov
xor
xor
test
adcl
pop
enter
loopne
cmp
jo
in
outsl
sbb
mov
shlb
push
mov
push
jns
jb
mov
fldt
daa
mov
jg
daa
fdivrs
pop
jg
cmpsl
jp
popa
sub
dec
shrl
sub
adc
mov
jp
sub
xor
test
push
ret
lds
repnz
add
ljmp
test
mov
mov
pop
and
loopne
cmp
push
test
jg
jbe
push
pop
sub
cli
mov
cmp
icebp
sub
addr16
jge
inc
or
mov
outsb
or
mov
and
cmp
arpl
lds
inc
push
int
push
ja
imul
cltd
add
xor
push
cs
rcl
lds
ja
xchg
mov
jecxz
sub
add
or
loope
movsb
imul
addr16
mov
cmp
mov
mov
jmp
cmc
jns
test
adc
cli
xchg
fidivs
stc
xor
les
push
dec
in
mov
mov
or
sub
out
cmp
out
sub
lea
xor
adc
cmp
add
xchg
lock
jo
or
adcl
push
xchg
cwtl
xchg
mov
push
xchg
in
cmpsl
cmp
popf
aas
xlat
ss
shll
stos
dec
xchg
fadd
lret
js
jns
call
push
ds
jae
std
push
andl
push
mov
cld
push
adc
cmp
fstp
xor
inc
out
inc
pop
mov
inc
inc
in
in
lahf
hlt
jmp
pop
push
or
lret
pop
mov
hlt
sub
aad
cwtl
sbb
xor
xchg
jae
or
stc
xchg
pusha
jge
fdivrl
xor
push
xor
sub
mov
lahf
mov
add
xor
scas
mov
lock
shlb
push
adc
mov
rcrl
fdivrs
cmp
mov
jmp
inc
call
cmp
jae
xchg
pop
js
xchg
stos
xchg
enter
mov
data16
sahf
push
lock
outsl
jl
test
xor
idivb
clc
push
xor
lea
lret
scas
inc
jecxz
rcrl
in
pop
lret
mov
clc
cmp
jb
in
jle
scas
sbb
add
inc
or
dec
and
sub
repnz
in
mov
aad
push
sbb
cmp
xor
mov
fnstenv
std
cmp
xorl
mov
es
fsubs
dec
dec
test
adc
gs
xchg
adc
jecxz
inc
or
pop
adc
sbb
xchg
es
sub
jb
test
add
dec
jg
mov
loope
rol
mov
in
insb
xchg
mov
aad
dec
daa
xor
iret
mov
push
add
idivl
fs
mov
fdivr
pop
sbbl
aam
mov
dec
jnp
xchg
pop
or
aam
sbb
setno
and
push
push
mov
xor
addr16
jmp
loop
cmp
fisubrs
shl
xor
popl
mov
lcall
daa
push
mov
sbb
push
mov
adc
or
cmp
bound
inc
lahf
cmp
inc
xchg
pop
addr16
add
and
clc
xor
loope
sti
scas
push
mov
arpl
lret
xchg
and
js
xor
mulb
sub
mov
xchg
pop
leave
inc
adc
movsb
jae
fcmovb
adc
movsb
xor
outsb
inc
or
aaa
push
es
stos
mov
dec
in
pop
add
push
test
dec
iret
add
movsb
xchg
aaa
push
ljmp
mov
test
subl
fwait
inc
sub
movsl
sbb
sub
jo
out
sub
sbb
mov
into
loop
inc
repz
or
pop
xor
mov
in
roll
inc
or
mov
aaa
jmp
sub
sarl
xor
fdivrp
pushf
imulb
out
lods
jno
clc
sbb
nop
pop
leave
inc
mov
xor
mov
xor
jge
testb
orb
call
clc
scas
and
aam
push
dec
clc
mov
dec
mov
jmp
pop
fs
mov
leave
lods
subb
fsubrs
fwait
adc
or
int3
pop
mov
jbe
test
xchg
jne
imul
divl
mov
lock
xchg
cmpsl
ror
and
arpl
xor
or
sbb
push
xlat
inc
cmp
mov
pop
add
cwtl
push
jae
mov
xchg
loope
ret
stos
ret
jb
add
push
inc
into
push
aad
lods
cwtl
clc
xchg
test
dec
out
xor
cmp
pusha
cwtl
aad
jbe
movsb
mov
insl
dec
or
imul
add
shll
fldenv
xor
stos
inc
xchg
rclb
aad
sti
ret
pop
push
mov
out
jno
movsl
fstpl
dec
pop
or
cmp
jp
int3
add
inc
mov
fs
pop
scas
popf
aam
add
adc
hlt
stc
mov
mov
hlt
xchg
mov
lcall
sbb
cli
daa
sbb
arpl
fwait
adc
popa
push
cmc
mov
inc
enterw
mov
sub
or
cmc
out
ljmp
mov
ja
add
lds
inc
mov
insl
cmp
sbb
mov
xor
iret
mov
pop
mov
push
repnz
lret
xlat
hlt
pop
mov
cmp
sbb
movsl
test
ss
adc
call
add
dec
loopne
test
add
jg
cmp
flds
inc
movsb
fidivrl
in
jecxz
test
fld
stos
xchg
mov
cmc
dec
sub
or
popa
mov
mov
mov
push
or
lea
jb
testb
lods
stc
call
stc
orb
flds
xor
cs
jmp
xor
icebp
or
lret
push
push
adc
pop
daa
lret
push
sbb
out
out
inc
pushf
cmp
adc
mov
inc
pop
clc
lret
lcall
sub
insb
cmp
ja
clc
mov
in
jmp
dec
aaa
or
divl
pop
mov
mov
sub
inc
cli
and
repz
jmp
adc
push
insb
jo
repnz
icebp
mov
jecxz
lahf
stos
cltd
ret
lahf
pop
addr16
lret
hlt
fst
add
cmp
scas
or
jns
pop
sbb
adc
push
adc
push
and
xchg
js
shl
lea
sbb
mov
adc
andl
js
lret
jp
sbb
pop
iret
in
pop
inc
adc
inc
mov
jo
sub
dec
scas
rcll
sarl
and
pop
dec
dec
adc
fcompl
jnp
imul
add
xchg
cmc
in
mov
rorl
popf
pop
inc
jne
sarb
dec
mov
aam
cwtl
aam
ret
ror
xchg
ljmp
mov
fnstenv
mov
pop
mov
dec
icebp
je
loopne
xchg
xor
mov
sbb
and
gs
mov
pandn
add
lret
adc
inc
lahf
cmp
dec
sbb
fwait
test
les
arpl
pop
jno
aas
imul
je
insl
inc
gs
push
lods
inc
jmp
mov
mov
and
es
aas
or
lods
jg
ror
pop
icebp
jno
mov
scas
daa
push
or
shl
daa
gs
push
test
lret
dec
dec
add
in
push
xchg
inc
dec
orb
push
test
sbb
sbbb
dec
rorl
aam
sub
fistpll
popa
xchg
movsl
je
incb
jnp
adc
dec
pushf
repnz
jp
fcmovu
das
mov
ret
or
sub
sub
les
mov
xor
push
arpl
xlat
ss
cmp
cld
aam
xchg
int
scas
add
enter
jle
pop
mov
int3
testb
cmpsl
xlat
inc
push
mov
mov
pop
movsb
cmp
lds
jmp
or
pop
mov
test
xchg
stos
xor
mov
cmpsl
hlt
sub
loope,pn
popa
pop
xor
jl
loope
in
ljmp
xor
iret
std
rolb
mov
xor
add
out
and
or
aad
jp
loop
mov
sbb
aaa
pmaxsw
mov
lods
mov
mov
dec
mov
icebp
test
stos
pop
movsl
inc
mov
sti
les
mov
fldl
xchg
sahf
inc
and
mov
pop
dec
lds
sub
xor
dec
sub
mov
push
inc
in
leave
das
mov
stos
loopne
push
in
shrb
fstps
pop
outsb
pop
or
cmp
push
loop
in
in
xchg
aas
inc
mov
cli
push
push
mov
int3
imul
shlb
sub
jbe
xor
mov
fxtract
mov
mov
inc
push
ret
scas
test
shl
adcl
jb
std
subl
scas
insb
mov
out
lea
pop
outsl
sbb
sbb
xchg
pop
dec
xchg
add
int3
ret
or
je
les
int3
aas
rclb
loope
hlt
cmpsb
jns
enter
xlat
cli
iret
dec
movsl
loopne
cld
or
adc
loope
lcall
mov
mov
mov
xchg
mov
sub
cmpsl
inc
sar
mov
les
push
sub
xor
sub
movsl
mov
fildll
lahf
jmp
jge
imul
dec
mov
icebp
and
cmc
pop
pop
es
outsl
adc
fldt
add
jecxz
pop
adc
add
xchg
js
sbb
lcall
insb
and
add
shr
dec
mov
jne
out
mulb
push
cmp
pop
cmpsl
pop
outsb
loopne
mov
cltd
and
fcoml
and
jmp
lods
fmuls
sti
push
pop
icebp
cmovp
add
pop
fcmovnu
fwait
ds
jo
jns
xchg
xchg
pop
push
mov
xlat
push
adc
inc
shl
test
pop
inc
addl
arpl
fildl
lret
sbb
mov
jbe
repz
mov
dec
xchg
or
lock
negl
fnstenv
out
xor
jb
mov
leave
mov
shrl
or
and
lea
in
jmp
jb,pt
fs
pushf
popa
lret
dec
push
imul
or
sub
inc
imul
pushf
daa
inc
mov
sub
mov
loope
cld
xchg
ljmp
push
clc
fmull
mov
pop
mov
enter
pop
push
sub
mov
outsb
push
and
dec
in
add
fdivl
cwtl
mov
adc
jne
bound
ljmp
inc
aad
imul
leave
ret
ljmp
add
jno
es
xor
adc
xor
popf
fmul
rcll
sub
cmp
and
sbb
mov
scas
xchg
inc
aad
mov
loope
push
pop
std
jae
out
push
loopne
pushl
pop
cmp
loop
push
loopne
cmp
ret
shrl
jecxz
cltd
pop
pop
xor
push
pop
mov
xor
test
dec
lods
test
scas
push
orl
loope
loope
stos
jmp
push
aam
pop
push
fsubl
dec
dec
movsb
xchg
cmp
jo
movups
mov
std
ret
idivb
cmp
scas
sarb
out
lret
xor
add
mov
daa
repz
jp
jp
add
sub
iret
push
pop
jo
in
pop
add
dec
inc
icebp
out
js
dec
xchg
mov
jo
test
stc
negl
mov
mov
imul
shrl
pop
iret
mov
pusha
xchg
out
inc
mov
cvtps2pi
out
pop
mov
sbb
stos
adc
mov
and
and
loope
push
jno
scas
cs
mov
inc
out
lahf
mov
fisubrs
jge
pop
xchg
cwtl
mov
pop
jae
pop
jecxz
mov
push
iret
jae
ss
es
rclb
mov
or
into
dec
or
pop
inc
into
sub
rol
xor
mov
add
sub
jnp
xchg
test
rorl
jo
aaa
ljmp
sbb
pop
into
gs
data16
popf
xor
out
imul
loop
leave
scas
sbb
loop
shll
adc
aas
mov
xchg
mov
push
sbb
fisubs
push
and
adc
add
sarl
std
pop
out
jns
xor
in
aam
lock
in
pop
jecxz
xchg
mov
ror
insl
outsl
push
sbb
inc
or
sahf
js
stos
imul
and
pop
push
push
xchg
inc
cmpsb
hlt
frstor
jo
jns
in
sahf
sar
imul
sub
sahf
out
in
push
in
in
xchg
rorb
jbe
xchg
aam
out
dec
call
cmc
cmp
cmp
push
jmp
mov
mov
movsb
xchg
jecxz
in
mov
mov
sbb
movsl
sub
adc
out
psubb
lods
sub
call
imull
mov
pop
add
pop
sub
addr16
push
jecxz
imul
iret
dec
push
and
icebp
movsb
xchg
jne
test
iret
mov
loop
inc
in
lods
adc
or
add
mov
xor
jae
aaa
mov
jp
or
push
gs
xor
and
ljmp
stos
mov
in
push
jne
insl
add
bound
test
jns
mov
inc
in
adc
xchg
pop
adc
dec
lcall
in
sub
add
mov
jo
fs
into
int3
shlb
mov
push
mov
xor
sub
ficompl
stos
aaa
xchg
test
fildl
or
in
xor
pop
ds
call
and
push
test
jle
jecxz
push
out
mov
js
test
add
rcl
hlt
fsubp
lret
jp
pushf
out
mul
ljmp
dec
ss
xchg
mov
ss
dec
arpl
daa
sbb
push
jg
dec
pushf
lods
mov
outsl
mov
cmp
jl
mov
xchg
fimull
adc
or
test
xor
push
fs
push
or
inc
mov
dec
repz
dec
xor
aas
xchg
std
pop
xor
orl
repz
movsl
cmp
mov
insl
lods
movsl
in
fnsave
jbe
das
push
mov
pop
insb
push
mov
xchg
mov
xlat
cltd
cmpsb
fidivrl
cmpl
jns
pop
inc
insb
rorb
stos
lds
xchg
mov
fs
pop
repnz
scas
loope
pop
out
dec
jmp
out
pop
fdiv
iret
mov
repz
add
lock
data16
or
jbe
enter
pop
inc
movsb
cmp
cmpsb
push
sbb
xor
sbb
xor
enter
xlat
fsubp
outsb
cld
sub
pop
fildl
and
fs
das
in
icebp
xor
scas
es
push
aas
or
insb
jmp
jno
incb
ret
add
xchg
ds
sbb
or
lea
in
sbb
pop
dec
clc
pushf
add
or
jp
mov
pushf
and
popf
sbb
pop
mov
pop
and
pop
inc
dec
sbb
notl
call
mov
pop
roll
or
out
cmp
out
andl
pop
sub
inc
nop
cmp
or
repz
inc
cmp
int
xchg
dec
imul
adc
arpl
lret
cmp
cmp
aad
mov
clc
out
loopne
jmp
pop
or
movsb
andl
mov
stc
into
xchg
fwait
xor
aad
test
icebp
pop
decl
lods
xor
jle
mov
jmp
movsl
xchg
orb
dec
lea
fildl
lock
pop
push
aam
adc
push
cli
xchg
fiadds
push
cmp
xchg
les
shll
stos
and
xor
fnstsw
dec
adc
sub
loop
mov
pop
push
aam
pushf
jg
push
jo
ss
or
jne
jbe
je
or
dec
dec
mov
xchg
test
xchg
aas
sub
jo
or
mov
mov
mov
call
dec
or
sbb
push
inc
insl
js
push
xchg
and
rol
fsubs
add
ss
jmp
fbstp
in
cltd
aam
test
fisubl
jg
pop
das
pop
pop
xchg
cmp
movsb
ds
sub
or
aas
ror
xchg
jl
push
pushf
test
mov
jmp
lock
mov
movsl
ret
sbb
sbb
repnz
or
sahf
cmp
aaa
or
aam
mov
neg
inc
sub
in
out
int3
dec
roll
js
loopne
ds
je
and
fldt
xor
xor
jge
mov
stc
int3
call
inc
ret
push
xor
cltd
faddl
push
cs
dec
les
or
out
cmc
in
mov
int3
inc
sbb
outsb
jbe
xor
sub
push
sti
push
ret
mov
mov
rcll
les
outsb
jo
test
test
fwait
xlat
insb
pushf
popa
mov
cs
test
aaa
je
pushf
and
xchg
or
out
jg
xor
mov
lea
fisubl
fs
lahf
cmp
jno
in
test
inc
ret
xlat
out
data16
mov
mov
inc
std
adc
mov
fistps
adc
push
push
jbe
test
push
in
aam
es
adc
stc
xor
fcmovnb
ret
or
cwtl
cli
xchg
xor
mov
daa
jecxz
cld
in
popf
pop
jne
lahf
jmp
mov
insl
test
mov
or
mov
in
push
cmp
mov
adc
xor
out
xchg
push
repnz
ja
xchg
les
lcall
sbbl
inc
popa
inc
inc
push
sub
and
xor
xchg
add
jnp
aas
int
fsubrs
repz
xchg
lret
dec
push
lret
dec
bound
mov
xor
pop
ds
arpl
add
mov
stos
mulb
cmc
jge
cltd
xchg
sbb
data16
rolb
mov
xlat
jle
pushf
xchg
mov
xchg
fidivl
cmp
sahf
xchg
mov
jo
mov
test
lret
dec
lock
xor
data16
adc
adc
push
shlb
in
jl
or
scas
and
mov
jo
sub
jmp
out
pop
andb
cld
and
fnstcw
dec
push
adc
test
inc
push
inc
push
or
jp
in
cli
leave
cmp
ficoms
popa
je
mov
insb
sarb
enter
xchg
insb
jle
xor
aaa
ds
or
popa
cmp
mov
jge
hlt
or
sub
sti
gs
jb
xchg
or
pusha
inc
jmp
xchg
pop
push
jo
gs
mov
and
push
jp
or
aaa
addr16
arpl
sub
jb
fnstcw
iret
mov
sarl
pop
fbstp
adc
mov
or
cmp
mov
leave
stos
scas
xchg
mov
popl
jp
mov
jne
vcomiss
sub
mov
movsb
lahf
aas
and
adc
sub
repz
push
fistps
sub
or
loope
xor
shr
push
dec
mov
iret
lods
out
xor
jo
sub
sbb
inc
std
test
popf
pop
in
insb
xor
frstor
pop
or
std
cmp
je
fucomp
movl
stc
mov
add
test
inc
es
ja
out
mov
mov
fwait
cmp
lahf
xchg
aas
loop
aad
data16
js
ror
test
out
dec
or
sbb
pop
insl
push
lahf
movsl
js
out
sbb
prefetchw
or
xchg
scas
dec
xchg
mov
inc
std
mov
mov
lahf
enter
out
rcrb
push
fwait
loopne
sub
mov
mov
dec
icebp
sub
and
std
fistpl
test
xchg
mov
mov
mov
pop
cmp
iret
js
adc
xor
ficompl
into
test
stos
in
aaa
fildll
inc
mov
daa
inc
cmp
in
addl
lahf
scas
adc
push
lret
cmp
cmc
mov
jge
xchg
and
shrb
mov
popa
in
rcl
cs
ja
pop
or
aas
and
or
cmp
push
adc
repz
sbbb
jnp
mov
mov
imul
jg
mov
sbbl
out
sahf
inc
lea
push
call
js
push
and
inc
xchg
sahf
movsl
and
aam
inc
imul
js
pop
aad
repz
or
add
flds
std
pushf
mov
aas
call
add
outsb
sti
sti
or
xchg
inc
dec
lea
jg
lods
orb
push
xchg
adc
movsl
aam
or
mov
push
shlb
mov
mov
mov
mov
imul
andl
lds
loopne
dec
enter
call
and
stos
and
fsubrs
mov
lods
das
and
arpl
or
pop
cld
fbld
pushf
repnz
inc
xchg
pop
mov
and
js
or
xlat
xor
test
int3
cmpb
mov
lods
lret
push
add
leave
mov
test
jns
mov
ficompl
push
in
ficoml
cmp
xor
mov
add
add
roll
xor
pop
dec
dec
ljmp
inc
fs
out
or
cmc
pop
mov
pop
mov
xchg
enter
and
cmp
inc
and
or
enter
lods
divl
xchg
xchg
sarb
mulb
test
out
mov
mov
in
dec
dec
sahf
lds
xor
inc
into
ror
stos
or
sbb
mov
sbb
jne
pusha
ficompl
mov
pop
stos
push
mov
in
pop
jae
cmp
push
jno
add
std
push
xor
push
gs
dec
dec
and
sbb
jle
repnz
mov
orl
dec
mov
dec
xchg
fwait
bound
popa
lret
dec
jmp
rcr
movsb
mov
xchg
inc
loop
add
jge
int
mov
fstpl
sub
push
insb
pop
push
in
lock
cmp
mov
sbb
push
and
dec
repnz
sbb
jecxz
sbb
es
imul
push
mov
or
dec
movl
fsubrl
pop
and
jg
or
aaa
hlt
xchg
xor
pop
jne
iret
inc
inc
mov
movl
jb
adc
add
xchg
in
pop
xlat
lret
inc
jns
mov
pop
filds
in
xor
aas
jle
fwait
gs
mov
xchg
mov
mov
cli
insb
mov
idivl
rcr
call
shlb
fdivrl
out
inc
mov
inc
rol
pop
cmp
hlt
sub
xchg
push
sbb
adc
out
stc
xchg
sub
loopne
sub
in
xchg
mov
or
clc
mov
or
push
popf
adc
add
divl
mov
repnz
call
stc
jle
mov
inc
loope
in
jecxz
mov
mov
cwtl
sub
outsl
loopne
and
xor
ljmp
mov
test
ss
in
outsl
stc
lods
aad
fbstp
psubusw
and
jl
jae
lea
outsb
ss
push
pop
sahf
inc
dec
sub
lret
push
jbe
mov
mov
cmp
sbb
ror
inc
fs
test
scas
rcrl
sbb
movsl
movsb
and
mov
sub
push
sbb
xchg
popa
xor
out
jg
mov
jno
inc
lods
movsl
push
repnz
addb
faddl
fcmovu
inc
out
in
push
nop
pushf
xchg
enter
lret
adc
lds
jmp
inc
push
jo
gs
add
adc
idivl
out
repz
mov
stos
adc
out
mov
test
outsb
add
mov
or
cmp
sbb
pop
popa
sub
sbbl
or
fwait
jmp
cmp
mov
dec
jmp
push
jl,pn
fstps
hlt
xor
push
mov
mov
push
mov
fstps
jns
or
jg
pxor
out
pop
stc
push
or
xor
fadd
cmp
outsb
mov
enter
imul
push
stos
xchg
scas
fisubl
add
pop
lods
pop
push
fstpl
repz
lds
imul
in
lahf
push
xchg
or
pusha
lret
push
jle
jl
dec
mov
int
lods
stc
pusha
lret
dec
arpl
incl
sbb
pusha
dec
cmpsb
lods
or
dec
sbb
fisubrs
mov
inc
mov
adc
and
inc
mov
push
insb
hlt
lret
lds
inc
shll
rorl
push
lea
out
mov
in
inc
mov
in
in
pop
pop
stos
aad
pop
bound
pop
mov
rcl
arpl
cmp
les
lds
out
push
sbb
arpl
bound
dec
cmp
xchg
or
movsl
and
mov
mov
mov
scas
inc
pop
dec
mov
xchg
sub
xchg
fwait
sbb
stc
push
add
cli
mov
repnz
inc
scas
cmp
imulb
and
or
aam
in
shl
pop
push
inc
sub
repnz
mov
push
mov
decl
xchg
test
mov
mov
scas
mov
in
add
pop
lock
add
faddl
sarb
fmulp
outsl
arpl
jmp
cmp
fwait
add
les
lods
leave
lahf
stc
aam
pop
adc
cs
adc
movsl
pop
jb
notb
adc
enter
xchg
fisttpll
xor
mov
out
xor
stos
adc
fidivrs
insl
jae
push
icebp
mov
cmp
out
stc
bound
push
das
add
xchg
mov
ss
leave
movsb
arpl
repz
cmp
sbb
testl
adc
fistpl
jecxz
xor
sub
push
mov
and
test
aad
call
jno
push
add
or
push
jmp
sbb
or
fldcw
rclb
inc
hlt
and
mov
add
push
sbb
cli
lods
mov
insl
jno
insl
in
push
and
ss
stos
xor
cltd
popf
jmp
add
push
popf
jg
push
mov
dec
pop
sbb
popf
lea
push
sub
cmpsl
inc
sbb
xchg
lods
in
cmp
xor
mov
loope
or
call
ss
and
popa
loop
xor
rep
mov
push
inc
int
push
je
fwait
sbb
movsl
movsl
push
loope
pop
fidivrl
mov
stos
adc
mov
inc
and
or
or
mov
or
lret
mov
mov
dec
lods
xrelease
imul
fisubs
clc
push
jne
ret
fld
add
in
out
or
test
or
mov
int3
or
jbe
subb
dec
jae
or
lds
mov
inc
sbb
cmp
lahf
mov
gs
jb
loope
pop
aad
sbb
insl
push
loope
cmpl
lea
mov
out
sahf
icebp
adc
mov
add
clc
rclb
cmp
add
mov
jmp
jne
popa
jp
push
jg
addr16
ljmp
dec
sub
shll
fsubs
outsl
inc
imul
insl
add
mov
mov
jo
adc
push
loope
aas
and
in
mov
cmpsl
mov
outsl
cmp
lcall
dec
iret
push
sbb
call
jb
xor
dec
and
push
out
xchg
push
cmpsb
movsl
int3
add
mov
stos
pop
movsb
jle
fstpt
in
into
inc
mov
std
out
xlat
shrb
cmp
push
mov
loopne
shll
xlat
mov
and
fs
inc
rcrb
xchg
in
loop
jp
cmpsb
popa
das
nop
call
popf
inc
xchg
aam
leave
sbb
into
shrb
mov
sahf
enter
push
pop
call
stos
aas
adc
pop
xchg
push
push
or
mov
push
push
mov
mov
push
pushf
pop
push
les
sub
test
sbb
mov
push
push
stos
xor
xchg
push
adc
and
jl
pusha
or
mov
loop
jecxz
cs
shrb
aam
add
stos
repz
xchg
pop
mov
loopne
xchg
lods
jg
pop
push
add
mov
das
mov
and
mov
shrd
mov
adc
insb
jle
jns
adc
xchg
aad
dec
cltd
cld
aas
test
das
clc
push
xor
loop
inc
xor
cld
jae
xor
push
mov
ja
mov
jl
dec
jb
xor
jns
sub
neg
lods
jns
arpl
and
mov
rcll
or
bound
and
pop
pop
or
xor
sbb
hlt
std
fisttpl
mov
adc
pop
jo
fisttpl
jp
pop
das
mov
pop
adc
in
mov
test
daa
loopne
fs
fcomps
aaa
mov
lret
xchg
mov
lods
jle
xchg
adc
inc
xchg
outsl
inc
leave
pop
sub
sub
inc
inc
in
fnstenv
xchg
movsl
pop
pop
and
mov
mov
lods
out
inc
mov
pop
popa
add
stc
int3
xor
xor
jo
mov
sbb
inc
adc
ficomps
jl
mov
iret
xor
aad
inc
cmp
cltd
jns
daa
and
dec
adc
sbb
sub
aam
add
std
jmp
xor
cmp
inc
pop
and
imul
lret
lahf
pop
jo
mov
sahf
repnz
pop
sbb
cld
sarl
stos
mov
adc
sbb
rcl
aad
jns
jne
das
fwait
or
movsb
add
aam
sbb
jo
mov
stos
in
jo
je
in
mov
pcmpeqb
test
lods
push
mov
sarb
dec
test
cmc
cmp
xchg
ljmp
dec
cmp
jmp
jecxz
fdivs
sbb
xor
ret
fs
add
test
or
fimull
pushf
cmp
cmpsl
shlb
mov
mov
sub
mov
or
push
lcall
sti
out
jo
mov
out
jecxz
mov
cmpsl
dec
sti
aas
mov
jmp
fcompl
pop
in
xchg
and
lods
and
fcom
subl
shll
je
mov
push
sub
fnstenv
sbb
jecxz
dec
xchg
dec
inc
insb
dec
outsb
adc
and
jmp
add
insb
mov
xchg
jnp
mov
pushf
ss
sarb
mov
add
sbbl
push
push
mov
fdiv
xchg
xchg
mov
fs
add
mov
and
adc
jb
cmpsb
mov
lea
jg
xor
sahf
mov
mov
pop
mov
xchg
mov
test
in
push
mov
nop
sub
adc
add
sub
nop
fsubl
mov
pop
xchg
jbe
pop
pop
fnstcw
shll
shlb
mov
icebp
inc
popf
or
xchg
lahf
cmp
mov
dec
addr16
jl
sub
inc
dec
testl
inc
gs
jge
cmp
adc
dec
lea
fidivs
mov
mov
in
outsl
xchg
aad
or
xchg
out
mov
pushf
inc
xchg
or
add
dec
out
lods
fcoms
movsb
cmp
cmp
gs
adcl
out
ficoml
negb
rcrb
pop
fisttpl
pop
insl
dec
pop
jnp
dec
test
mov
in
cmpl
pushf
push
xor
dec
repz
jae
xor
dec
pusha
add
movsl
sub
scas
int3
dec
and
mov
xorb
imul
movsb
jmp
pop
js
movsl
xchg
ss
pop
imulb
mov
and
insb
test
add
mov
dec
cmp
adc
xchg
adc
das
in
dec
or
xor
f2xm1
clc
sahf
jecxz
stos
repz
xchg
sahf
mov
mov
mov
cmp
push
dec
int
add
inc
repnz
mov
cmp
inc
and
call
push
mov
daa
lret
movsb
adc
add
cmpsb
jg
or
aaa
jae
ret
xchg
mov
int3
jecxz
loope
ret
inc
lret
stos
and
inc
fsubrp
cli
sbb
js
push
xchg
pop
jnp
jne
testb
mov
in
xor
push
fbstp
xor
fisttpll
push
fldenv
jno
or
dec
push
aaa
hlt
xchg
cmc
or
adc
mov
insl
fcmovnu
inc
adc
pop
aas
sub
xchg
rcl
mov
pop
hlt
loopne
movsb
bound
jo
jge
mov
pop
dec
jae
shl
inc
jle
push
rcll
or
jmp
je
iret
jne
addr16
imul
lock
sbb
ret
push
jno
adc
popf
xor
repz
xlat
sarb
cmp
push
push
std
sbb
data16
cmpsb
xor
pop
xor
push
lds
repnz
jo
enter
ja
push
cs
xor
out
jl
or
add
call
imul
inc
lcall
inc
adc
mov
sbb
fmuls
or
pop
push
sub
test
insb
rcrb
xchg
ret
addr16
ret
ja
sub
xchg
mov
and
add
cmpb
sub
out
push
cld
lahf
adc
stos
lret
cmp
sub
test
mov
stc
xor
xchg
push
cli
and
insb
jb
in
sub
aam
xchg
sub
mov
imul
and
cmp
loope
push
icebp
addr16
out
dec
jnp
mov
in
push
mov
rcll
fdivs
pop
inc
sub
cmp
jne
mov
jae
mov
in
xchg
mov
stos
dec
jl
dec
in
or
dec
lret
sahf
das
jge
hlt
pop
aaa
or
xor
loop
movsl
insb
inc
jmp
ret
fs
pop
jmp
jne
add
mov
insl
and
jbe
mov
gs
mov
out
adc
popf
into
pop
cmp
xchg
jb
leave
movsb
adc
lods
test
testl
inc
adc
mov
mov
push
incb
scas
dec
das
adc
popf
arpl
cmp
adc
adc
scas
shl
stos
lcall
imulb
pop
dec
sub
andb
mov
lahf
jae
pop
stos
mov
std
lret
sbb
adc
cmp
and
popa
loope
in
lcall
es
mov
cmpsl
insl
inc
std
mov
jmp
test
js
movsl
xchg
cmp
les
fs
iret
lock
adc
push
mov
in
leave
scas
cmp
insb
inc
sbb
lret
ret
jp
dec
mov
xor
cltd
xchg
pop
imull
jo
push
pop
xchg
movsb
cli
popa
push
jb
daa
pop
jmp
dec
add
xor
daa
xchg
xor
fdiv
pop
ss
or
sub
xor
fs
jno
push
jmp
decb
mov
cli
mov
incl
aad
outsl
bound
xor
sub
sub
int
imul
subb
bound
sbb
mov
subl
into
or
inc
and
pop
ss
mov
mov
lret
mov
test
xchg
ljmp
mov
jg
mov
jo
cld
aas
mov
fld
inc
push
rorl
xor
cmpsb
into
add
ja
cmpsl
out
sbb
les
push
xchg
push
iret
iret
inc
push
and
cmp
pop
sub
fimull
cmp
stc
fisubrs
jl
pushf
dec
mov
pop
mov
pop
movsl
xor
push
or
add
addr16
dec
stc
mov
sub
cmp
pop
fs
arpl
jmp
subb
cs
jle
sbb
adc
mov
sti
fisubrl
sti
test
movb
sub
lods
pop
mov
adc
popa
jmp
scas
push
iret
and
add
jg
aas
in
xor
inc
popf
pop
mov
push
loop
xchg
jb
inc
stos
mov
mov
cld
das
aaa
loopne
into
dec
std
xchg
add
jnp
sub
aas
fucom
fucomp
idiv
mov
insl
mov
mov
mov
iret
lds
pop
or
dec
push
add
add
push
rcl
adc
sbb
scas
xor
call
inc
add
mov
std
fistl
sbb
fldcw
sti
out
pop
mov
stos
sbb
ret
adc
out
push
insl
push
sub
xchg
das
adc
dec
lock
pop
or
mov
mov
outsb
and
sbb
pop
or
dec
mov
xor
fwait
ret
aaa
cld
lret
adc
test
int
fcompp
dec
xor
adc
lods
je
scas
mov
cli
dec
push
push
mov
xchg
shll
popf
mov
mov
jge
aam
outsl
in
fimull
leave
sbb
adc
inc
psllw
dec
cmpsb
jae
out
popf
sub
stos
and
mov
bsf
jns
xor
icebp
scas
mov
sub
pop
add
sbb
jb
mov
mov
shlb
pop
dec
push
push
int3
mov
les
lret
mov
mov
fadds
rolb
sar
mov
notl
push
pop
jbe
cmpsl
popf
je
jbe
roll
lea
cmp
cmpl
mov
mov
push
aas
or
jb
jg
addb
sub
imul
mov
pextrw
fwait
cmp
aas
cmp
js
test
aad
std
fsubr
add
pop
mov
jge
fsubl
or
xor
jp
cmpsl
xchg
pop
subb
push
cmp
cli
sub
icebp
jl
inc
xchg
mov
xchg
fbstp
das
adc
hlt
inc
mov
stc
and
sar
push
insb
sbb
add
sti
sbb
sbb
dec
xor
ffreep
xor
or
add
rcrb
sbb
and
xor
pop
adc
pop
subl
adc
inc
pop
xor
insb
pop
push
ds
sbb
xchg
inc
add
mov
je
aaa
out
sub
adc
lods
jo
cli
outsl
push
idivl
xor
and
lods
adc
std
loop
pop
cld
adc
lret
jge
pushf
or
or
fidivs
push
dec
cld
cmp
in
mov
pop
xlat
dec
mov
and
pop
jae
inc
imul
sar
vdivpd
pop
inc
mov
ljmp
xchg
mov
clc
cmp
cmp
sbb
pop
pop
add
out
jae
outsb
aas
ret
mov
andl
jae
jge
iret
lcall
xor
cmpsl
xchg
cwtl
jge,pt
into
pushl
int
pop
aad
xchg
jo
push
inc
push
mov
imul
fsubl
fisubrs
pop
adc
call
cmpsb
test
mov
ds
pop
dec
loope
or
inc
add
dec
adc
leave
mov
sbb
xor
gs
pop
sbb
jne
push
and
out
ss
or
add
mov
imul
sbb
mov
dec
fistpl
sub
cmp
add
xchg
sbb
push
fcmovnbe
mov
cmp
sbb
das
adc
or
inc
adc
inc
xor
pop
push
or
xchg
adc
or
inc
mov
mov
pop
mov
aad
xor
in
sar
fcoml
or
ljmp
fiaddl
scas
cmp
arpl
sbb
jne
test
mov
cmp
sbb
sti
pop
or
into
jg
into
mov
lods
out
loope
add
shrl
mov
and
in
in
or
es
out
mov
inc
jb
jae
imul
out
sti
and
enter
push
and
lcall
sbb
mov
cltd
fwait
jo
mov
mov
int3
sarl
sub
in
push
mov
mov
in
and
outsb
jmp
sbb
out
push
xlat
lods
xchg
or
lcall
leave
jl,pn
data16
adc
movsl
movsbl
aas
and
outsb
xor
push
data16
out
int
cmc
mov
inc
ret
mov
les
inc
jbe
fisubrs
cmp
into
cmp
idivl
mov
xchg
xor
pop
fimull
mov
xor
mov
cs
push
or
and
pop
mov
push
imul
mov
sub
push
push
and
shll
jle
data16
or
or
incl
ret
inc
cwtl
je
lret
pop
out
sbb
imul
insl
outsb
dec
stos
scas
mov
pop
fmuls
in
jns
cmpsl
sub
out
inc
fdivrl
adc
test
je
dec
mov
es
sti
enter
loope
mov
sbb
sub
xor
or
loop
in
mov
sbb
cld
outsl
jno
xchg
add
sub
testb
xor
push
jge
pusha
mov
sbb
cmp
jp
je
mov
sarb
mov
lsl
inc
leave
cmp
and
mov
ret
stos
pop
ret
dec
lcall
cmp
mov
jl
cmp
ja
aaa
push
mov
icebp
stos
adc
jb
cmp
mov
fs
xor
adc
xor
push
movsb
fs
cmp
push
xor
addb
sbb
aas
and
test
mov
xchg
xor
mov
cmp
pushf
mov
push
ja
cmp
sub
fsubrl
call
lods
xor
jg
insb
ficoms
movsl
pop
push
mov
inc
mov
pop
mov
mov
mov
cmp
cmpsl
leave
adc
dec
stc
pop
cmp
movhps
dec
call
mov
sub
imul
dec
ds
in
push
add
adc
xchg
idivl
and
sti
sbb
int
mov
pusha
call
sbb
jnp
cmpsb
repz
push
push
mov
sub
cli
mov
call
jae
jbe
mov
in
not
sti
mov
cs
test
nop
mov
and
into
cltd
or
stos
adc
adc
pop
daa
cld
aad
aaa
mov
fldcw
ficompl
std
movsl
xchg
mov
jmp
cli
into
sbb
adc
sub
xor
ficoms
adcl
incb
fmul
cmpl
pop
xor
jo
pop
les
xchg
int3
xor
xchg
dec
aas
sub
mov
push
outsb
es
dec
push
push
add
cmpsb
inc
mov
gs
fists
mov
xchg
sbb
loopne
test
ja
mov
pop
add
jl
mov
mov
mov
andl
icebp
cmpsb
aaa
push
call
repnz
xchg
push
ljmp
std
sbb
rorb
sub
inc
adc
or
push
orl
and
inc
dec
jae
jns
das
call
lahf
ss
mov
outsl
mov
repz
push
mov
in
divl
insl
mov
jo
movsb
jb
andl
and
jmp
pop
mov
xchg
popa
mov
test
jl
dec
mov
test
mov
pop
mov
dec
jmp
mov
jecxz
mov
inc
popf
inc
push
jb
mov
pop
mov
xorl
xchg
mov
pop
inc
add
stos
pop
int
lods
sbb
fnstsw
mov
add
in
sub
sahf
mov
pop
imul
int3
in
ss
xchg
or
or
fwait
cltd
pop
ficoml
pushf
dec
mov
loope
cli
dec
xor
mov
les
mov
dec
leave
sbb
insb
rcrl
pop
cmpb
cltd
rol
dec
fiadds
ljmp
scas
push
fnstenv
movsl
mov
jl
cmp
xorb
push
and
mov
imul
mov
jo
sub
pop
jno
sbb
test
outsb
inc
mov
popa
ds
fmuls
pop
mov
xor
loop
nop
jecxz
in
adc
int
gs
fisubrs
scas
icebp
adc
mov
inc
sti
push
lock
lret
mov
adc
pop
shl
cmp
icebp
cmp
mov
xchg
xor
sbb
mov
mov
in
mov
or
rcl
or
ljmp
pop
adc
aam
xchg
pop
fwait
jbe
hlt
xor
jno
divb
pop
inc
inc
shrb
mov
xor
les
push
aaa
sar
inc
jbe
push
mov
loop
add
dec
cs
data16
and
aas
outsl
pop
mov
dec
dec
negl
mov
push
and
cmp
pop
mov
mov
or
cmp
mov
add
mov
pop
mov
add
xchg
int
dec
ljmp
in
shrb
scas
shl
jl
cmp
jge
sub
loop
std
stos
mov
insb
leave
clc
xor
stos
cmpsl
xchg
imul
sub
push
mov
jno
cmp
and
mov
imul
pop
loop
sub
pop
jno
dec
je
pop
rorl
enter
xchg
inc
scas
dec
inc
in
mulb
jl
push
push
imul
jae
aaa
adc
lahf
cmpl
add
and
lds
sbb
roll
inc
ss
xor
sub
outsl
daa
sub
mov
imul
dec
dec
iret
mov
xchg
xor
stos
std
clc
test
jae
sbb
lret
mov
sub
mov
shl
fists
jge
lcall
arpl
mov
arpl
xchg
push
rclb
inc
sbb
sbb
fbld
xchg
mov
adc
xchg
inc
or
insb
outsb
push
pop
inc
imul
push
out
push
xchg
stos
sbb
daa
and
dec
adc
popf
pop
jbe
jle
aas
out
inc
mov
loope
ljmp
data16
pop
jle
cmp
decb
fisttps
add
jge
push
lods
cmpsb
sbb
imul
mov
pop
pop
mov
rcrl
out
dec
pop
push
imul
pushf
repnz
leavew
pop
in
stos
jg
pop
shlb
sbb
dec
jecxz
dec
leave
sbb
xchg
push
add
xchg
xlat
sbb
push
stos
stc
adc
insb
adc
cmp
das
dec
cmpsb
inc
in
nop
lret
mov
push
into
fsts
mov
cs
or
jg
xor
movsl
fwait
push
push
adcb
cmp
imul
inc
xchg
out
ljmp
fs
icebp
sahf
or
jmp
lahf
and
cmc
sub
mov
xchg
subb
jbe
adc
xor
jno
ret
sub
xchg
xchg
cmp
mov
stc
sub
xchg
xchg
jns
pushf
cmp
popf
aam
flds
fcoms
cltd
aas
and
ficoml
sbb
push
xchg
inc
arpl
and
or
pop
mov
cmp
push
jns
push
pop
pop
int3
shl
lret
mov
pop
mov
jecxz
hlt
adc
cmp
xor
test
or
loop
int3
mov
std
add
xchg
fs
shll
push
fcomps
fcmovb
xchg
xchg
jle
stc
push
mov
cld
mov
mov
pop
sbb
adc
leave
pop
in
push
sub
adc
pop
outsb
inc
mov
adc
fdivrl
pop
daa
xor
sbb
pop
dec
enter
mov
jb
and
xor
clc
dec
or
push
aas
loop
dec
call
inc
bound
push
mov
idivl
add
bound
add
scas
int
inc
inc
loope
or
mov
xor
xorl
push
jno
jle
jl
scas
and
lahf
subl
int3
jno
lods
mov
cmpsl
sahf
sbb
icebp
mov
clc
inc
scas
aad
adc
ret
pusha
xor
push
pop
je
scas
push
mov
js
in
inc
inc
dec
ljmp
iret
pop
push
dec
dec
pushf
mov
shlb
popa
push
sbb
pop
sbb
in
xchg
pusha
xchg
or
mov
xchg
push
popf
dec
aaa
idivl
dec
stos
testl
jne
xorl
popa
xor
push
xchg
fxch
push
adc
jmp
cmp
mov
cmp
test
dec
idivl
adc
or
insl
out
pop
push
sub
and
out
jg
ret
pop
push
mov
add
lcall
repz
cmp
adc
xor
xor
and
mov
inc
cltd
adc
and
pushf
rorl
aam
mov
mov
inc
incl
sti
movsl
addr16
mov
es
xchg
xor
sub
subb
movb
xor
sbb
leave
cmpsb
lret
stos
ret
into
xchg
mov
mov
subl
stos
mov
test
add
cld
ret
xchg
push
adc
and
sar
sub
es
pop
roll
cmp
addb
fs
outsb
cmp
and
inc
mov
add
out
lret
out
leave
xchg
add
jo
mov
dec
mov
xchg
jp
push
daa
outsl
mov
lea
cmovnp
sub
sub
imul
or
aad
std
fistpll
mov
jle
and
xchg
lods
dec
sti
and
ja
push
nop
adc
push
and
dec
lea
cmc
jge
mov
inc
and
xor
daa
clc
xlat
ljmpw
test
stc
fmull
push
mov
and
popf
int
imul
testb
sub
test
dec
mov
nop
fistps
push
push
mov
test
pusha
inc
mov
ret
rcrl
and
ljmp
in
xor
arpl
push
jbe
push
lret
xchg
sub
inc
adc
mov
sub
loopne
or
add
leave
js
xchg
das
add
cltd
sti
popa
sbb
test
and
popa
or
dec
lock
xor
dec
push
in
dec
lretw
loopne
test
mov
scas
sbb
pop
in
lahf
cmp
jnp
jne
sub
mov
jecxz
cmp
popf
and
pop
and
mov
dec
stos
fmulp
repz
push
rcrl
xor
dec
dec
mov
outsl
test
nop
mov
dec
jb
dec
push
je
lcall
jmp
movsb
sarb
adc
mov
xor
inc
cltd
lods
jp
push
dec
mov
cld
jge
fidivrs
mov
sarl
mov
pop
aad
jecxz,pt
push
jmp
mov
jae
pop
add
add
fdivs
xor
mov
mov
mov
sbb
push
add
jno
nop
loopne
es
imul
inc
ja
fmull
sti
iret
dec
call
call
out
mov
cld
sub
push
cmp
js
inc
or
jecxz
int
xchg
loope
sbb
les
icebp
pop
arpl
insl
mov
pusha
data16
leave
adc
add
push
outsb
push
popa
jne
mov
mov
aaa
outsl
lret
test
mov
cs
test
sbb
sbb
orl
push
les
cmp
aam
pushf
inc
jle
subb
mov
mov
inc
imul
pusha
pop
xor
outsb
sbb
add
rcrb
dec
mov
jp
mov
mov
sbb
jmp
outsb
or
adc
pusha
shrb
xchg
mov
popw
iret
xor
sbb
jae
adc
mov
addb
lods
xchg
mov
cmp
inc
mov
sbbl
xor
xor
and
mov
mov
shll
sub
fldt
stc
aaa
add
or
mov
ljmp
inc
xor
dec
stos
or
push
mov
jg
repnz
mov
add
jge
adc
mov
test
jns
std
xchg
inc
je
or
mov
aaa
addr16
push
sti
sub
push
movsl
shlb
xchg
je
loopne
inc
pop
cmpsb
jne
inc
jecxz
cmp
js
lret
xor
dec
sub
leave
dec
or
push
nop
fiadds
push
cld
arpl
pop
cmp
shrb
jnp
iret
lods
gs
push
ficoml
dec
leave
mov
in
xchg
mov
or
cld
push
fs
std
lock
loop
dec
mov
mov
and
aas
jns
pop
inc
push
scas
mov
dec
mov
cltd
jecxz
mov
mov
gs
leave
push
cmp
mov
xorb
add
dec
loope
and
sbbb
inc
sbb
mov
aad
mov
sar
add
ret
rcrl
ljmp
repnz
mov
jb
xor
push
cmc
cwtl
in
xchg
sarb
and
pop
imulb
cmp
sub
enter
movsl
sahf
jb
addb
mov
cmp
int3
or
mov
jle
cmp
testl
xchg
out
call
mov
loop
shlb
pusha
add
adc
aad
cmp
dec
or
pushl
js
ret
pusha
lock
adc
mov
js
or
movsb
mov
std
dec
add
sub
ret
ljmp
fdiv
aas
cmpsb
cld
mov
adc
call
sbb
movsb
add
mov
stos
cmp
mov
sahf
jne
pop
cld
push
pop
mov
jmp
loope
in
fstpt
cli
bound
clc
repz
ror
ret
jp
cltd
insl
mov
mov
mov
orb
mov
or
adc
sub
jl
cmpb
das
xorb
in
xor
sbb
mov
add
inc
and
jo
in
mov
pop
pop
mov
and
imul
iret
inc
pop
jno
or
popf
leave
cmpsl
pop
sub
sbb
xor
lcall
std
sahf
xchg
aam
xor
iret
dec
jb
andb
cmp
or
int3
jb
add
mov
daa
lret
xchg
or
or
daa
push
jp
xchg
jp
std
mov
pop
ret
dec
cmp
sub
cs
mov
mov
mov
dec
and
cmp
sbb
sti
test
sub
add
xchg
repz
hlt
imul
sbb
mov
pop
push
imul
in
and
push
sbb
cwtl
lea
ja
outsb
outsl
xbegin
jno
mov
add
mov
inc
addb
clc
leave
pusha
push
aaa
lds
subb
call
jae
push
push
jecxz
fsubrl
into
fidivrs
fwait
les
pop
popf
fbstp
push
mov
pop
and
clc
and
inc
outsl
icebp
jo
sar
push
sti
pop
adc
fwait
push
pop
out
cli
movsb
aad
xchg
out
xchg
xor
and
push
cs
cmc
lret
repnz
xchg
xor
aam
xchg
inc
lods
push
jge
cmpsl
dec
mov
inc
in
lods
pop
lret
das
xchg
dec
inc
mov
lahf
scas
in
les
adc
xchg
pop
scas
rorl
dec
mov
inc
pop
mov
or
mov
mov
push
es
mov
sbb
lea
and
inc
jne
out
cs
jge
popf
jecxz
xchg
rcll
sbb
shlb
lods
test
xor
inc
imul
jl
int
sub
sbb
lret
pushf
daa
je
ja
cltd
pop
out
daa
mov
mov
push
test
xor
aam
iret
push
mov
mov
pop
lock
loopne
push
pop
xchg
out
out
aas
pop
adc
daa
out
lret
mov
inc
jmp
push
and
adcl
repz
std
sbb
in
ret
call
push
fwait
mov
test
imul
mov
pop
xlat
jns
sbb
xor
mov
aam
mov
cmp
sahf
das
push
cmp
mov
add
movsl
loop
pop
in
popf
pop
push
or
cmp
jb
push
inc
das
pop
adc
mov
dec
mov
push
aad
inc
movsb
test
add
mov
sbb
cmc
dec
mov
lds
dec
repz
fsubrs
cmpl
pop
or
stos
mov
dec
dec
mov
imul
push
sbb
fwait
movsb
mov
mov
fdiv
sbb
outsl
stos
lock
imul
test
popa
cmp
leave
enter
sub
js
xchg
daa
pop
add
and
leave
pop
ror
test
cmpsb
mov
aas
adc
cmp
icebp
fistl
cmp
and
sbb
test
add
lods
ljmp
rcrl
sub
sbb
adc
push
lcall
in
les
fwait
dec
xchg
ja
bound
insl
ss
pop
rolb
shlb
pop
xor
clc
scas
sub
cld
push
sbb
out
movsl
or
lods
push
cmp
insb
pop
cmp
mov
xchg
shll
stos
ficoml
gs
enter
sbb
pop
outsl
inc
xor
arpl
aad
pop
jg
jl
stc
or
add
dec
in
lahf
loope
lods
mov
pop
mov
stos
mov
push
and
repz
subb
inc
dec
rcrl
mov
rclb
mov
jns
mov
fiaddl
fistpll
inc
and
cvtdq2ps
cs
push
mov
pop
pushf
xor
popf
frstor
sbb
mov
inc
ret
jnp
inc
mov
clc
xchg
xchg
imul
stc
xchg
call
mov
jnp
adcb
imul
imul
stos
pop
pop
mov
adc
mov
mov
jae
xchg
pop
cmpsb
push
ret
cli
repnz
cmp
nop
dec
add
sbb
adc
mov
mov
mov
adc
out
lcall
xor
daa
push
xor
popa
xor
into
shll
adc
into
sarl
pop
xchg
xchg
lret
faddl
rolb
xchg
sbb
ss
idivl
jg
mov
xchg
insl
sbb
jnp
dec
ret
shlb
xchg
push
or
int3
xor
jae
out
xchg
xchg
or
pop
cmpb
or
cld
jle
lock
sbb
xor
jle
cs
xor
sbb
cwtl
shrb
sti
mov
je
in
pop
sub
inc
pushf
jg
hlt
push
jae
call
aam
mov
dec
dec
bound
mov
sbb
hlt
idivb
inc
in
divb
outsb
aam
mov
call
mov
xchg
dec
cmpsb
les
gs
pop
shll
sbb
negl
mov
push
xor
push
xor
sahf
insl
popa
clc
mov
sbbl
inc
movsl
adc
shll
mov
mov
jge
fwait
hlt
movsb
addb
adc
dec
fnsave
repnz
xchg
gs
push
out
aas
jmp
xor
data16
std
addr16
ja
mov
push
mov
enter
mov
sbb
jge
call
add
push
rcrl
and
hlt
sbb
out
sbb
icebp
int3
lock
dec
pop
or
inc
in
test
pusha
cmpsb
imul
sbb
jo
out
icebp
xchg
loope
inc
lock
cmp
fldl
and
jne
push
xchg
adc
jge
ret
out
into
add
movsl
fisttpl
gs
add
push
jo
and
or
rol
mov
sbb
jo
nop
imul
enter
out
mov
adc
push
jmp
mov
test
insl
jns
aaa
jge
imulb
or
das
call
insb
add
pop
gs
xor
and
dec
xchg
inc
mov
shl
mov
jb
push
rolb
sbb
mov
adc
cmp
loope
std
rcrl
mov
dec
sub
push
xor
sbb
lock
inc
test
push
push
push
inc
or
outsl
sbb
int3
sbb
leave
addr16
cltd
sub
mov
push
pop
clc
adc
push
xor
les
fsubr
cmpsb
ret
xchg
rcl
and
dec
and
mov
jl
push
das
push
or
and
outsl
xchg
leave
push
ficoml
mov
cmp
inc
or
inc
mov
dec
daa
adc
mov
or
jo
movsl
push
cwtl
push
pop
or
lods
sbb
add
fcomps
mov
mov
imul
xchg
popf
jle
mov
and
sarb
adc
jge
scas
mov
cmp
in
or
inc
xor
imul
mov
adc
push
inc
add
or
in
xor
xlat
fwait
inc
sub
popf
xor
jae
push
cmc
adc
xor
push
mov
mov
add
flds
jno
jl
jge
mov
movsl
pop
sub
loope
adc
sbb
fsubrs
inc
mov
xchg
inc
jae
sbb
adc
cltd
jmp
bound
ret
dec
fdiv
lcall
stos
mov
test
popf
sbb
mov
or
dec
out
fldt
hlt
adc
inc
xor
pop
cmp
and
sti
xchg
jmp
cltd
mov
mov
sbb
or
mov
mov
sahf
shlb
ja
push
insb
js
mov
cmp
pusha
js
xchg
ljmp
add
imul
outsl
adc
scas
cmp
xchg
inc
push
inc
movsl
rcl
dec
jecxz
sbb
xchg
mov
pop
pop
sarb
pop
mov
or
and
cmp
xchg
inc
and
ret
bound
cmp
ss
dec
call
dec
lret
dec
xchg
mov
push
out
push
jp
cmp
test
mulb
or
ljmp
negb
mov
out
cmpb
incl
add
sbb
cltd
mov
jnp
push
xor
enter
xor
shl
jge
pusha
aad
mov
call
loope
repnz
pop
das
js
mov
iret
adcl
push
inc
enter
or
popa
in
clc
mov
pop
xchg
inc
in
xor
mov
pop
or
and
jmp
pop
push
push
fsubrs
push
cmpsl
loope
fidivrs
cmp
adc
cmp
idivl
sti
mov
push
pop
pop
out
cld
dec
inc
xchg
sbb
cmp
push
pop
push
inc
pop
stos
lret
lcall
xchg
fwait
push
mov
mov
cmc
push
mov
add
dec
sbb
out
jnp
pop
out
stos
push
push
std
mov
inc
stos
rolb
aad
mov
addr16
xor
or
stos
pushf
scas
sub
dec
mov
rcr
nop
das
xchg
cltd
pop
sbb
outsl
fnstenv
jo
sbbb
test
pop
add
addb
mov
pusha
es
adc
fs
adc
arpl
rclb
mov
fstl
xchg
pop
lahf
jl
jmp
out
ret
cmp
and
xchg
into
jmp
sub
push
add
mov
cmp
xor
cmp
fisubrs
stc
in
cmp
loopne
les
mov
les
es
iret
and
lds
add
dec
aaa
mov
js
sbb
cmp
xor
mov
jbe
jo
xor
cmp
xchg
rcr
jne
push
jno
fwait
aaa
es
push
mov
xchg
mov
jbe
leave
cs
sbb
lahf
insb
pop
inc
jb,pt
sub
and
sub
cwtl
icebp
lret
test
imul
ret
dec
movsb
jnp
inc
jne
cmp
adc
xchg
aam
fs
in
adc
jl
mov
cmp
shrb
ja
mov
cmp
mov
mov
aaa
stc
cmp
mov
leave
stos
std
fdivs
leave
and
xchg
sti
out
jae
out
inc
mov
testb
mov
inc
jae
sub
pop
xchg
jbe
jns
std
jge,pt
movsl
sub
inc
sub
xlat
js
fs
insl
sub
cli
popf
mov
cmc
push
adc
jo
xchg
int
inc
fwait
pushf
or
and
sub
int
jg
out
jb
cmpsl
sbb
cmpsl
add
and
cmpsl
bound
lock
dec
setl
cmp
jp
pop
inc
jo
or
xchg
inc
inc
sbb
aaa
decb
mov
arpl
mov
mulb
aas
push
mov
es
add
push
jle
call
push
mov
imul
xor
into
mov
pusha
add
jmp
dec
imul
mov
cmc
fs
cld
push
data16
sti
cmp
and
mov
push
inc
cmc
jmp
in
jl
xchg
push
jmp
mov
js
fucomip
int
pop
jns
rcrb
dec
out
addr16
movaps
outsb
sbb
and
mov
inc
lods
call
shrb
in
inc
aaa
nop
sub
jg
dec
fcos
mov
mov
adc
push
adc
mov
mov
add
jb
and
cmpsb
pop
xor
andb
leave
xor
or
in
test
into
movsl
xor
push
cld
mov
dec
jb
aam
inc
sub
mov
shrl
movsl
lods
jp
pop
and
test
xchg
lahf
mov
adc
push
dec
sbb
add
in
fbld
inc
mov
mov
lods
dec
dec
adc
cwtl
mov
pop
dec
sub
loope
sbb
pop
push
das
ficoms
jmp
out
jns
imul
jb
pop
cmpsl
adc
js
xchg
push
sahf
mov
outsl
mov
dec
scas
add
cmpsb
in
int
mov
pop
addr16
iret
dec
push
adc
or
ficoml
cmp
jbe
dec
push
mov
es
mov
sbb
mov
mov
inc
imul
loope
xor
fidivs
std
enter
xor
pop
inc
stos
xor
icebp
jmp
mov
in
and
les
daa
pop
icebp
out
xor
outsb
xchg
mov
lods
fs
cmp
push
movswl
or
mov
mov
jmp
cmpsb
pop
mov
in
xchg
cmc
out
xchg
and
pushf
mov
leave
xchg
inc
aas
cmp
ror
js
int
inc
mulb
mov
mov
cmp
notl
test
movsb
fadds
in
popf
add
insl
sbb
adc
fsubl
xchg
pop
imul
cld
push
rcll
movsb
and
pop
stos
pop
xchg
jl
out
jnp
in
lret
ret
imul
pop
std
and
xchg
push
mov
hlt
addr16
insb
push
lcall
xor
in
ficoml
lea
inc
popa
fsubr
mov
jge
mov
fcmovne
lret
test
pop
adc
mov
adc
and
jno
or
adc
test
out
stc
movsl
and
inc
mov
mov
mov
das
push
mov
addr16
and
cld
jp
in
std
dec
pusha
cmp
mov
pop
pop
and
lahf
dec
push
adcb
push
mov
cmp
pusha
in
les
pusha
mov
sub
data16
daa
jnp
fldenv
into
push
pop
push
sbb
test
cmc
clc
mov
js
mov
lock
pop
jg
push
inc
adc
loop
scas
xor
sub
pop
mov
sub
xor
iret
imul
leave
lret
imul
fcmovnu
dec
imul
cmp
scas
movsl
into
pop
sbb
push
out
in
imul
push
imul
mov
ret
xor
push
fs
adc
or
mov
pop
in
sbb
int3
repnz
xchg
adc
pop
xchg
jo
lds
ficoml
in
faddl
inc
sbbl
push
xor
aad
push
sbb
push
cmpb
addr16
cmp
das
dec
incl
dec
add
cli
cmpsl
rcll
aaa
lcall
xor
mov
les
and
ss
aam
es
mov
sbb
in
dec
mov
mov
inc
imul
sub
mov
lret
pop
std
mov
imul
pushf
lods
clc
dec
rol
cs
lods
sub
leave
sub
int
sbb
mov
dec
sbb
rolb
xchg
sbb
pop
jge
mov
in
repz
jp
pushf
movsl
push
mov
pop
aas
daa
faddl
shlb
cltd
jmp
movsl
xchg
jl
jb
add
pop
sbb
call
in
rcrb
sbbl
dec
adc
push
sbb
xchg
mov
mov
cs
rcll
add
inc
call
lods
jo
nop
ret
xor
stos
idivb
lret
mov
mov
ret
sub
ds
gs
lcall
cmp
xchg
xor
add
sub
mov
push
popa
or
andl
cmpsl
andb
jmp
inc
push
push
fcoms
cwtl
xchg
mov
test
cmp
inc
push
xchg
sbb
mov
in
sbb
mull
fsubl
fimull
and
hlt
xor
cmp
mov
imull
sub
dec
mov
in
cmpsb
add
call
lock
sub
popf
sub
imul
cmp
xor
mov
or
push
sbb
popa
push
xchg
dec
fistps
les
push
daa
insb
lcall
xlat
cmp
scas
inc
idiv
addr16
push
fmul
mov
fcomp
pop
jge
sub
js
ljmp
loope
aad
sub
lock
ret
mov
mov
ficoms
jge
and
andl
xchg
and
lret
sub
gs
insb
loopne
mov
pop
xor
inc
test
mov
rorl
out
xlat
fdivrs
or
iret
in
jmp
insl
jle
popf
mov
pop
add
shlb
std
fldl
dec
mov
xchg
jno
sarl
cmp
imull
pop
les
push
mov
pop
out
add
dec
push
push
cmp
leave
push
mov
cmpsl
in
lods
cmp
dec
lret
jo
inc
cli
repz
dec
pusha
mov
jmp
mov
dec
data16
mov
push
shlb
add
call
aaa
jmp
and
hlt
lods
enter
and
int
push
mov
fs
lds
mov
push
adc
das
sub
pop
jle
dec
mov
fidivs
xorb
je
push
std
mov
movnti
inc
pop
push
cmpsb
gs
cmp
mov
sar
push
mov
popf
pop
fldt
out
iret
sub
aam
dec
push
std
sbb
stc
cs
ficoml
in
fs
pop
cwtl
movsb
mov
pop
sub
add
cmp
outsb
outsb
stos
jmp
pop
push
or
sahf
xchg
lcall
dec
sahf
cld
mov
popf
dec
inc
pop
arpl
sub
xor
fldl
ja
mov
fidivrl
ror
shl
ret
sbb
subb
inc
jecxz
mov
pop
test
cmp
and
mov
daa
cwtl
ljmp
loop
mov
jbe
mov
xchg
ror
and
data16
pop
scas
xlat
push
fdivrs
sub
test
add
dec
js
mov
jb
loopne
test
sbb
subl
push
pop
je
xchg
push
push
inc
push
mov
mov
sarl
in
mov
in
in
jmp
gs
xchg
notl
shrb
loope
nop
icebp
push
or
xor
or
cli
mov
aas
or
sbb
and
lret
neg
loope
and
jo
jl
sti
imul
mulps
out
jl
push
pusha
push
mov
orl
cmp
sub
lahf
push
iret
pop
int
mov
leave
inc
mov
add
int3
std
or
jle
adc
popa
mov
push
dec
cltd
icebp
push
sub
repz
xor
je
adc
xchg
add
addr16
xchg
jmp
mov
mov
jb
mov
cmp
stos
test
arpl
aas
xor
add
adc
mov
adc
js
enter
dec
jmp
cmp
push
pop
mov
mov
mov
aam
push
out
xor
in
or
shll
scas
pop
in
rorb
mov
shr
cmpsl
pushl
out
xchg
xor
xchg
cmp
jmp
mov
dec
mov
out
add
inc
insl
popf
pop
es
or
sti
push
lret
mov
stc
sbb
add
inc
aaa
outsl
loope
add
arpl
jnp
and
outsb
mov
dec
mov
aaa
int3
mov
movsl
cmpsl
sbb
jle
cli
cmpb
add
dec
xchg
cmpsl
test
loopne
dec
xor
dec
fst
mov
sbb
mov
push
push
jmp
jae
int
ja
pop
mov
popa
movsl
mov
pop
xor
leave
xchg
xchg
lcall
insb
xchg
mov
adc
sub
push
out
push
fwait
scas
mov
cltd
sub
cmp
ljmp
jle
es
shrb
stos
add
lcall
lret
mov
dec
cmc
jl
sbbb
test
adc
leave
pusha
or
in
scas
mov
inc
push
ret
mov
inc
in
cmp
js
fsub
mov
mov
sub
mov
mov
cmpsl
bound
cs
mov
add
sbb
mov
push
les
test
repnz
lahf
sti
insl
aad
imul
out
dec
adc
push
imul
outsl
addr16
mov
int3
sbb
int3
lea
push
test
xchg
pop
std
or
lahf
in
mov
mov
push
mov
add
je
inc
pop
pop
sub
push
push
lcall
mov
cmp
in
out
rcrb
push
push
stos
add
sub
cmp
xchg
pop
call
repnz
daa
test
mov
mov
inc
push
adc
loope
jae
cli
cmp
popf
movsl
jne
jb
xchg
adc
push
pop
pop
pop
cmp
cld
idivb
adc
lods
cwtl
pop
mov
push
int
pop
arpl
cmp
jno
pop
jp
popf
mov
inc
lahf
mov
es
mov
sbb
cli
lahf
fisttps
jo
movsb
je
data16
xorb
incb
sbb
dec
mov
sub
insl
daa
rclb
cmp
or
imul
das
lret
or
out
and
push
call
and
std
jle
mov
insl
out
mov
orb
adc
daa
dec
lock
and
test
ret
push
adc
push
pop
and
inc
cmpsl
mov
mov
daa
xchg
push
inc
xor
pop
stos
jl
loope
dec
mov
repnz
es
rcll
popa
aaa
dec
clc
cmp
outsl
insl
mov
leave
es
or
push
inc
stos
adc
ss
inc
scas
fistpll
outsb
xlat
pop
push
cli
inc
adc
xchg
or
movsl
imul
xlat
jnp
or
flds
pop
lock
or
rcl
lods
ds
mov
or
cli
or
mov
cli
lret
insb
gs
inc
mov
lret
adcb
bound
imull
mov
fwait
inc
jmp
xor
lods
pop
imulb
cmp
movsl
test
and
add
xchg
mov
insl
jge
hlt
dec
pop
pushf
and
jb
sbbb
cmp
sub
enter
push
fdivrl
ret
cmp
in
sarb
rolb
cmp
test
xor
adc
stos
adc
mov
jno
xor
rcll
jbe
inc
lcall
dec
pushf
push
sahf
lret
hlt
in
sub
je
push
cmpsl
pusha
xor
int
daa
inc
pop
fsubr
push
mov
frstor
mov
lods
sbb
enter
mov
loop
pop
ret
test
testl
in
stos
mov
dec
mov
movsl
inc
add
jo
aaa
pop
sub
imul
das
xchg
inc
pop
push
pop
shl
sbb
inc
flds
out
stos
xlat
mov
xchg
adcb
lds
rol
and
sub
sarb
inc
cmc
mov
shrl
inc
lret
add
add
sbb
xlat
mov
lods
push
add
lea
add
sub
sub
or
push
sti
lods
push
test
or
lcall
std
pop
sbb
negb
dec
xchg
push
out
js
lret
lahf
cmp
push
into
and
dec
notl
cmp
ret
jle
stos
xlat
aam
dec
les
xchg
add
mov
xchg
int3
int3
and
and
cmp
add
nop
lock
mov
hlt
push
nop
push
cmp
test
adc
jmp
pop
shl
mov
mov
aad
shlb
test
arpl
or
outsb
in
repnz
pop
repz
dec
nop
lcall
inc
fs
sub
ret
lock
fidivrs
in
in
mov
into
roll
aas
mov
pop
push
cmc
notl
cmp
lret
xchg
mov
inc
jno
pop
cltd
out
les
pop
shl
out
cmpsl
mov
icebp
sbbb
dec
dec
sub
push
lock
lret
dec
cmp
aam
gs
stos
clc
cmpsl
adc
dec
das
cltd
sub
lahf
enter
add
sbb
inc
out
and
lods
loopne
arpl
xor
pop
or
shrl
mov
inc
aas
mov
ror
add
dec
ficompl
loopne
cmpsb
fdivr
xchg
mov
bound
lods
mov
test
pusha
push
xchg
xchg
outsb
xchg
je
enter
jb
push
sub
arpl
mov
sti
jge
and
jns
es
in
lods
xchg
call
and
outsl
mov
xor
push
mov
arpl
ljmp
mov
mov
sbb
mov
lods
xchg
lret
adc
and
xchg
dec
add
adc
cmc
xor
pop
dec
cmpsb
out
mov
cmpsb
into
aad
sti
add
insb
jmp
shlb
rclb
test
cmp
push
mov
inc
repz
mov
inc
cli
cmp
jb
les
scas
out
xlat
inc
mov
pop
mov
ds
std
repnz
sub
mov
out
jne
xorl
push
inc
loop
xchg
pop
inc
push
sub
and
pop
dec
js
add
push
fidivrs
rcl
mov
xchg
add
xor
mov
mov
cwtl
jno
stc
add
rorl
cmp
jnp
in
pop
inc
incl
add
add
cmpsb
xchg
mov
aam
and
lcall
out
or
push
faddp
repnz
fistpll
fimull
mov
sub
pop
in
pop
gs
lcall
mov
cltd
jge
cmc
mov
xor
xor
dec
pop
inc
rol
stos
sbb
lret
xchg
les
jno
leave
shlb
mov
xor
cwtl
rolb
jg
dec
mov
push
fs
sar
jl
cmp
xchg
scas
mov
adc
leave
adc
xor
icebp
push
ljmp
fnstcw
decl
lock
pop
xor
pop
mov
ds
hlt
fdivs
cmp
xchg
pop
sahf
test
and
rcr
out
mov
xor
or
jmp
and
mov
testl
sbb
lds
mov
push
inc
mov
fildll
xorb
pop
sub
xchg
dec
mov
outsb
mov
js
cmp
pusha
inc
cmpsl
jbe
subb
xchg
sbb
sbb
out
imul
mov
cltd
mov
inc
aaa
ljmp
sbb
jbe
jmp
cmpsb
repz
lods
pop
inc
daa
or
push
mov
xorb
insl
mov
iret
sti
push
or
or
mov
fsts
mov
bound
testb
jno
xor
mov
mov
mov
or
cld
cmp
xchg
xlat
pop
addl
inc
fwait
pop
and
cmp
or
cmpl
push
or
sbb
add
shl
pushf
push
or
mov
lods
outsl
cmp
scas
testl
inc
sub
inc
jae
jl
xchg
icebp
dec
rcrl
xchg
jmp
bound
decl
adc
sbb
incl
das
ret
fisubs
pop
dec
dec
mov
push
enter
push
adc
jmp
sbb
ret
stos
inc
cmp
add
nop
pop
incb
aas
mov
popa
mov
sub
cltd
dec
in
mov
mov
clc
or
dec
xor
in
mov
mov
mov
xchg
xchg
add
push
inc
push
sbb
xor
xchg
mov
jb
cli
push
into
push
stc
inc
sbb
rcrb
les
sahf
push
out
and
cld
and
sub
or
roll
ret
movsl
sarb
xor
cmp
cmp
sub
inc
cmp
fisubs
xchg
or
xchg
inc
fwait
mov
push
push
push
add
push
out
mov
push
sti
cltd
pop
or
mov
jp
ja
test
or
inc
xchg
ficomps
stc
popa
and
js
cli
mov
cmp
sbb
je
lods
pop
xlat
daa
add
movsb
test
push
enter
jne
sbb
pop
dec
jecxz
inc
sbb
repz
pop
cmp
dec
mov
mov
outsb
cmp
pusha
call
ss
push
inc
adc
stos
inc
into
notb
inc
pop
shlb
inc
cmp
push
arpl
out
lahf
mov
fcoms
lret
jnp
mov
ljmp
imul
jle
inc
inc
jl
jb
xchg
into
into
mov
ret
dec
stc
das
mov
pop
fs
idiv
int3
lcall
adc
popf
push
inc
loope
pusha
fisttps
scas
push
leave
inc
xchg
or
stos
xor
pop
mov
xchg
adc
shll
sbb
and
xor
sub
sub
popa
ret
pop
sahf
call
xorb
mov
sub
mov
lret
pop
loopne
in
adc
cmc
js
mov
and
dec
out
daa
das
xor
lock
mov
dec
push
jmp
loopne
xor
pop
loope
mov
pop
out
popa
ss
lcall
dec
adc
sbb
gs
mov
pop
pop
jbe
movsl
fcompl
pop
out
push
xchg
push
into
fwait
jmp
sbb
or
mov
arpl
or
ds
popa
mov
mov
and
in
sbb
push
mov
cmp
xchg
dec
nop
inc
sub
pushf
out
cmpsl
adc
das
lcall
and
pusha
fwait
jae
shr
cmpsl
push
out
inc
rcl
stc
push
nop
aaa
movsb
loopne
out
jg
scas
not
add
add
add
mov
imul
or
fwait
pop
movsb
xchg
popf
gs
mov
pop
pop
test
sub
stos
mov
push
test
mov
or
push
jo
das
push
popa
dec
ja
outsl
xchg
push
mov
pop
pushf
movsl
mov
cmpsl
rorb
mov
es
xor
ret
movsl
cmpsl
lahf
jns
insl
stos
push
mov
or
mov
and
test
test
stos
mov
hlt
push
clc
imul
and
cmp
xor
popf
stos
mov
add
xor
dec
pop
enter
mov
cltd
mov
negb
push
enter
xor
add
mov
stc
or
xchg
fucomi
dec
addb
inc
les
mov
mov
cmp
loop
int3
in
stos
dec
sahf
test
sbb
mov
mov
pop
jno
fstps
lcall
or
in
xchg
pop
out
add
sbb
jg
stc
aad
out
js
daa
jge
lods
stos
dec
cmpsl
add
sub
fsts
xor
pop
cli
mov
icebp
pop
jp
mov
jmp
mov
lea
inc
push
xor
mov
shrb
cld
lods
mov
lret
stos
jp
adc
stc
rolb
cmpsb
test
jg
push
adc
out
pusha
icebp
xchg
jecxz
dec
enter
or
mov
sub
lcall
or
dec
xchg
test
sub
cmp
pop
sbb
push
fistl
lret
iret
sahf
sbb
sti
push
outsb
into
add
imul
fsubrs
cmp
mov
xlat
push
sbb
xor
fidivrl
jge
pop
cld
jmp
mov
xor
mov
jns
xlat
hlt
ret
sti
mov
into
and
jecxz
push
xor
push
jae
mov
sub
dec
lea
clc
jno
cmp
and
xorl
cmp
add
cmc
clc
xlat
mov
ja
jmp
jg
cmp
adc
fisubs
dec
sub
bound
fsubp
push
or
sbb
fs
mov
repz
pop
mov
iret
out
jb
xchg
int
into
outsb
and
jg
jl
mov
inc
out
mov
aas
jge
add
aaa
in
dec
cmpsl
shrb
sub
ror
mov
and
push
iret
pop
mov
cwtl
pop
in
sub
jp
pushf
inc
cmp
sub
mov
adc
pop
jecxz
push
adc
pop
add
mov
jg
inc
hlt
push
in
fstps
into
lret
mov
jb
jp
push
xor
xchg
xchg
xchg
sub
cmpsl
xchg
cmp
or
jns
mov
sbb
leave
sbb
jge
aas
repnz
jp
mov
jle
jmp
xlat
inc
ret
fcoms
push
jecxz
test
test
iret
dec
xchg
shrb
inc
test
mov
xor
imul
pusha
or
stos
mov
jbe
sti
sub
pmullw
pop
mov
inc
inc
pushf
push
pop
outsl
lret
repnz
cs
and
cld
cmpsb
mov
and
dec
decb
test
dec
and
movsb
je
xor
lret
mov
fbstp
pop
repz
add
push
cmp
add
mov
and
hlt
not
mov
aam
sbb
imul
inc
mov
scas
fidivrs
push
cmp
fdivl
fidivl
repz
inc
and
mov
in
mov
jl
loop
or
ss
nop
cld
leave
mov
adc
enter
add
loop
sahf
mov
jne
push
add
ret
push
jmp
shrl
std
sbb
movsl
inc
add
cmp
xchg
jp
addr16
push
loop
inc
loop
adc
fwait
inc
out
fcmovnb
jo
or
ds
sub
lea
add
mov
jno
jmp
das
aas
mov
and
adc
sarb
je
jle
lock
adc
push
arpl
jne
lods
jno
xchg
inc
dec
or
out
icebp
push
popf
aaa
ret
xor
data16
mov
sbbb
xor
fildll
push
insb
lahf
inc
mov
mov
fidivrl
nop
mov
test
mov
dec
sarl
out
mov
pop
cltd
sub
xchg
das
jbe
es
sub
push
xor
xor
insb
movsb
cli
decl
call
cmpb
fstpl
test
scas
lret
mov
incl
push
subb
mov
dec
fwait
ret
sub
xor
jbe
jl
pop
inc
push
lret
ret
ja
daa
sbb
and
mov
xchg
jbe
into
outsb
pop
fistpl
data16
add
scas
ret
mov
jbe
inc
or
push
rorb
add
xchg
lods
loopne
xchg
and
or
jno
cmp
stos
popf
negb
mov
and
mov
push
pop
jo
lods
sub
fmul
xchg
sub
xlat
cld
pop
cld
jno
mov
push
loop
and
mov
lods
icebp
pop
fs
ficoms
movsb
xchg
add
cmp
cmpsl
packuswb
mov
scas
cmpsl
mov
mov
pop
pop
jno
add
xchg
jmp
out
frstor
dec
dec
ficomps
aad
cmp
ret
test
mov
xchg
jnp
incb
data16
sahf
xchg
in
add
gs
bound
les
xor
jno
shlb
mov
movsb
mov
inc
and
dec
and
cmpsl
mov
in
inc
or
sub
inc
cmp
cld
pop
cs
aam
fistps
jmp
arpl
test
pushf
pop
sub
jae
das
dec
push
dec
clc
mov
stos
jnp
mov
icebp
es
and
leave
inc
int3
and
and
inc
dec
mov
xor
push
stos
pop
test
loope
rolb
jae
es
inc
or
in
pop
mov
jmp
sub
jecxz
les
mov
lods
ret
or
adc
mov
jno
push
pop
jbe
and
xchg
pop
pop
arpl
es
cmpsl
mov
stos
dec
and
js
jge
dec
push
adc
mov
sbb
inc
jbe
xor
dec
loop
mov
fisttpl
pop
orl
mov
jae
ljmp
pop
inc
inc
mov
xor
push
gs
mov
mov
imul
dec
sub
loop
pop
hlt
clc
xchg
in
xor
test
mov
inc
dec
outsb
adc
and
ret
pop
push
push
adc
adc
adc
inc
jne
rcrb
push
sub
cmp
leave
xchg
int
sub
pushf
inc
out
mov
push
jno
lret
scas
jo
xorl
xchg
scas
ret
push
movsb
ret
add
stc
rclb
xchg
test
xchg
jnp
dec
popa
cmp
sub
push
inc
jg
add
push
fidivrs
pop
dec
incb
rclb
popa
mov
lahf
lret
rclb
xchg
pop
jnp
aas
jp
es
test
pop
inc
jo
dec
adc
xchg
bound
movsl
inc
xor
cmpsb
arpl
out
add
push
xchg
outsl
ss
or
movsb
cmp
pop
adc
mov
shll
mov
add
imul
addr16
in
jge
adc
jmp
call
mov
push
pop
and
lea
dec
dec
or
mov
aam
aad
adc
pop
loopne
push
mov
mov
lcall
jge
out
push
pop
mov
shlb
sbb
les
ja
ss
dec
rol
sub
lahf
push
aaa
sub
cmp
mov
sub
fiadds
push
inc
mov
add
jae
xor
mov
add
rcll
in
and
xchg
sarb
call
test
mov
dec
pop
fs
mov
sub
jns
in
stos
jle
jecxz
sti
jno
lds
jne
or
adc
cmc
mov
ret
sbb
sahf
clc
xor
xchg
pop
jae
jno
fdivl
sub
jg
add
andl
mov
ja
xchg
repnz
jnp
mov
rorb
pop
xchg
cmp
jns
imul
xchg
fldlg2
sbbb
jnp
inc
ret
fwait
xchg
insl
xchg
xchg
push
xor
cltd
fsubl
cltd
add
push
scas
scas
push
fwait
insb
add
ror
aaa
scas
lods
dec
int3
cwtl
stos
and
jmp
sub
aas
call
xchg
jmp
call
das
lods
pushl
sub
cltd
mov
das
jle
cmpsb
and
sahf
clc
mov
repnz
out
mov
rorl
int3
loope
and
pop
cmpb
cmp
mov
pushf
test
mov
sbb
stc
or
mov
iret
push
sbb
push
in
jnp
xchg
or
out
mov
jns
rcr
out
sbb
arpl
or
insl
pop
push
pushf
push
mov
cmpsb
mov
mov
and
lods
rcl
dec
cltd
scas
aam
push
decl
les
and
in
leave
fists
into
repz
jecxz
adc
cmp
cmp
and
aad
notb
test
in
inc
xor
insb
inc
add
sbb
jl
fildll
and
sbb
jp
lahf
loopne
mov
cmp
out
jl
adc
jecxz
insl
fs
addr16
or
jp
mov
gs
test
xor
leave
xor
xchg
jo
addr16
daa
mulb
ds
xor
call
adc
lods
mov
xchg
gs
xchg
pop
int3
inc
pop
add
push
mov
xor
add
fisubrl
lcall
vpslld
xchg
push
outsl
test
shll
cmp
dec
aaa
ja
pop
mov
arpl
out
xchg
inc
sahf
sub
lds
jo
test
cli
or
pop
mov
pop
out
xchg
js
mov
je
aam
mov
stos
clc
xchg
shll
daa
test
pop
or
pop
shl
push
arpl
xor
and
aas
adc
dec
mov
icebp
push
adc
push
sbb
mov
mov
mov
sub
cs
sub
and
lret
je
sbb
pop
in
fs
sub
cltd
or
add
ja
inc
fiaddl
xor
ss
addr16
pop
dec
out
popf
push
jl
fnsave
les
push
push
xor
add
outsb
inc
sub
shrl
addb
test
out
dec
dec
and
into
or
mov
ja
or
repnz
mov
mov
xchg
jecxz
mov
push
pop
xchg
ds
lret
popa
lahf
sarl
push
loop
or
mov
sarl
xor
bound
dec
adc
adc
test
sbb
xor
mov
daa
stos
lods
and
outsb
fcmovnbe
xchg
mov
inc
les
into
cmp
cmc
inc
jp
sbb
mov
aaa
mov
test
sbb
jle
push
mov
xor
cld
andl
pop
jmp
addr16
jp
add
lods
ret
inc
push
push
xor
xchg
xchg
push
push
jns
xchg
sahf
ret
sub
scas
adc
push
les
push
jle
outsb
xor
mov
adc
mov
bound
sti
lret
fnstenv
or
pop
ljmpw
shlb
out
dec
cmp
test
sahf
sub
in
mov
mov
scas
inc
adc
mov
jl
out
rcrb
sahf
shll
out
add
mov
push
mov
mov
outsb
add
mov
test
shrl
sub
mov
data16
bound
lds
and
aad
mov
pop
lock
lret
xor
xchg
xorb
push
xchg
or
adc
out
dec
icebp
fsubrs
jns
cmp
dec
or
adc
pushf
jae
mov
mov
pop
sbb
ret
cmpsl
push
and
pop
adc
popf
andl
jno
dec
in
dec
add
sahf
mov
sbb
les
sub
pop
mov
sbb
and
mov
push
inc
xchg
mov
outsl
mov
pop
lahf
and
fmul
sub
inc
cmpsb
adcl
pusha
lds
cmp
jnp
or
jl
cltd
cmp
sahf
xlat
int
sbb
inc
shlb
test
popf
sbb
xlat
outsb
in
mov
sbb
dec
mov
ret
push
shl
ret
lret
jmp
stos
cmp
out
stos
test
sub
popl
pop
or
dec
jmp
fcoms
cmp
fidivs
dec
dec
xchg
push
sbb
dec
fisubl
jbe
inc
mov
and
xchg
push
or
cmc
popf
mov
add
sub
or
pop
push
rolb
cmp
and
jge
adc
push
xor
adc
cmp
icebp
loopne
lcall
xor
pop
mov
outsb
ja
test
call
cmpsl
push
lahf
fcoms
stc
test
xor
lock
cmp
movsl
repz
inc
shl
pop
lcall
mov
scas
push
das
mov
lods
clc
sbb
das
jns
rclb
dec
add
sar
mov
scas
mov
ds
sub
and
inc
or
pop
ja
sbb
ret
lahf
mov
adc
push
adc
inc
movsl
adc
cwtl
pop
mov
inc
mov
xorb
daa
push
fdivrl
ss
mov
sub
inc
and
pop
daa
das
mov
inc
adc
and
daa
xchg
scas
mov
dec
ss
cmp
and
cmp
sbb
inc
data16
xor
das
lea
fwait
insl
rorl
ret
mov
pop
inc
daa
testl
mov
notl
sub
jnp
ja
aam
fstpt
imul
lds
or
les
or
cltd
and
dec
mov
mov
mov
pop
shlb
ret
jae
inc
repz
xchg
xchg
in
xchg
std
out
cltd
inc
xchg
bound
jecxz
ret
out
cmp
inc
xchg
dec
outsb
adc
and
sbb
sub
adcb
mov
in
popa
aaa
or
loope
fidivrl
stc
jnp
push
pop
cmp
and
data16
les
cmp
ljmp
mov
lods
jns
cmp
aas
je
das
inc
inc
sbb
repz
aas
imul
jno
mov
push
jl
nop
push
cmp
lret
lods
mov
pop
add
and
mov
dec
sti
cmp
les
and
or
call
mull
es
jmp
imul
ret
lret
cmp
and
sub
inc
xchg
mov
xchg
dec
adc
xor
int3
add
sbb
mov
and
sub
rorl
jle
imul
add
mov
cmp
and
in
xchg
aam
add
mov
int3
jno
pop
inc
pop
xor
jp
jle
stc
inc
iret
dec
jns
dec
sub
lods
xchg
lock
fmull
mov
inc
adc
lea
push
lock
test
push
inc
popl
lds
mov
nop
push
xchg
sbbl
sbb
dec
push
std
xadd
vcvttsd2si
mov
or
mov
xchg
mov
rcrb
xlat
cs
and
add
daa
lret
movsl
jnp
or
and
fdivs
sub
or
mov
adc
repnz
cmpsb
jmp
enter
fsubp
add
adcl
cmp
sbb
movsl
leave
in
insb
inc
dec
lret
jge
mov
es
mov
mov
and
test
test
movsb
movsb
mov
adc
jbe
inc
pop
ljmp
and
mov
and
jl
stos
mov
decb
mov
les
aas
fnstsw
mov
out
and
incb
or
jo
insl
mov
jae
fdivrs
xchg
mov
jne
sub
push
jge
jmp
xchg
sub
mov
xchg
cmp
rcrl
aas
je
test
mov
ljmp
mov
mov
sbb
add
add
mov
es
xchg
outsb
xor
test
push
inc
dec
cli
lds
cmp
in
test
js
cltd
int3
jno
repnz
loop
cmp
pop
incb
cmpsl
inc
add
or
std
sbb
push
shrl
xor
sbb
jo
or
inc
into
shll
jmp
icebp
dec
loopne
sbb
inc
sahf
mov
shrb
out
pop
pusha
stos
xor
cmp
mov
xchg
into
jmp
mov
mov
jbe
in
mov
add
xchg
push
adc
or
sbb
cmp
pop
xor
xlat
fsubl
idivl
es
jne
fs
mov
ja
mov
xchg
in
or
add
test
xor
xchg
shlb
sbb
and
pop
shrb
in
push
out
mov
aam
inc
xor
pop
pop
ja
cmp
icebp
add
sub
mov
rcrl
adc
inc
out
inc
mov
pop
xor
sbb
les
loopne
adc
shl
xor
sbb
shlb
movsl
mov
lahf
pop
sub
dec
int3
roll
lds
xor
xchg
sbb
xchg
cmc
xor
cmpsb
inc
lret
mov
cmovge
adc
inc
cmp
loope
sbbb
aad
leave
sbb
fwait
pop
jno
or
and
push
xor
xor
aad
cld
pop
pop
lea
enter
or
pop
cltd
and
or
in
enter
imul
test
sbb
dec
mov
andb
inc
xchg
hlt
or
ret
inc
jecxz
loope
push
in
push
out
lcall
xchg
cmp
shlb
inc
rcrb
mov
xlat
subb
rcll
rorl
dec
sub
and
and
mov
mov
daa
scas
fsubrp
test
shl
es
push
sub
jbe
sbb
dec
or
jl
and
and
dec
add
cld
mov
sbbl
das
std
mov
mov
xlat
cwtl
jecxz
mov
pop
fstps
pop
mov
ss
pop
mov
dec
push
sub
pushf
div
dec
and
push
xor
leave
cli
imul
jge
xor
adcb
leave
jno
ds
arpl
sub
cltd
xlat
pop
fisttpl
in
mov
cmpsb
mov
jo
outsb
je
in
mov
add
pop
adc
jmp
nop
mov
dec
adc
pop
jae
clc
aas
fsubrp
push
std
or
pop
cltd
jmp
cmp
mov
xor
loopne
cltd
sbb
ss
ss
testb
xor
xor
clc
pusha
sub
lds
call
iret
sahf
test
cmp
pop
jnp
dec
jle
stos
addr16
fisttpll
in
ds
cmpl
mov
lds
mov
push
cmc
sub
cmp
pop
sub
mov
adc
mov
sub
cmp
pop
stos
cmp
mov
jnp
ret
rdtsc
xor
fisttps
inc
or
or
push
movsl
sbb
nop
arpl
fsubr
sub
fidivrs
call
push
cmc
mov
repz
test
mov
or
mov
adc
fsubrs
and
cld
inc
pop
loopne
loope
sub
in
ss
nop
push
and
mov
dec
jo
cmp
cld
lock
push
add
popa
repnz
jge
rorb
dec
ret
decl
stos
inc
xor
push
popa
xchg
test
xor
and
imul
js,pt
cmp
xor
sbb
dec
in
rsm
fsubrl
cmp
xor
mov
or
adc
sub
insb
dec
andl
add
sarb
mov
adc
xor
int
std
cwtl
lahf
pop
in
dec
add
inc
and
xchg
loope
cmp
daa
ja
test
cmp
jnp
std
outsl
push
push
push
inc
push
sti
mov
mov
loop
aad
cli
out
popf
imul
cli
scas
jne
push
cli
cld
fs
outsb
mov
xchg
xchg
aad
xchg
aad
rcl
xor
cmc
inc
mov
cmp
lds
jecxz
loope
repz
jbe
fs
push
repz
sbb
and
pushf
xor
movsl
mov
cmp
std
pop
nop
cmpsl
xor
cmp
in
push
mov
mov
cmp
adc
jmp
and
cmp
rorb
fldenv
subb
dec
and
popf
cmp
mov
sti
add
xorb
into
fsubrp
mov
push
inc
inc
fmull
cmp
or
mov
pop
loopne
adc
push
xchg
cltd
into
in
jecxz
mov
mov
fnstsw
fistpl
inc
fdivrs
sti
mov
jno
bound
test
sub
xor
push
cmp
mov
orb
sub
add
negl
push
ds
int
pmaxsw
and
popf
fs
mov
lcall
sbb
in
sub
iret
and
stc
hlt
syscall
mov
mov
xchg
sarl
ret
insl
call
jmp
clc
enter
hlt
mov
mov
stos
mov
mov
or
pop
outsl
xchg
ds
fdivrl
and
mov
adc
int3
insb
lret
movsb
sbb
mov
daa
sub
pop
cmp
add
daa
stos
jns
xor
in
cmp
insb
in
fistpll
jo
lds
pusha
imul
mov
sbb
mov
sbb
xchg
imul
add
cmp
int
loope
stc
aaa
sbb
pop
in
loopne
popl
inc
int3
cmp
inc
int
repz
mov
push
jp
cmpsl
pop
xlat
and
es
push
into
pop
stos
cmp
imul
lret
test
mov
loopne
inc
push
pop
and
shrb
repz
loopne
leave
xor
shlb
mov
mov
pop
stos
lahf
out
push
loop
mov
cmp
inc
push
sub
or
nop
rclb
dec
add
jg
ret
adc
dec
jg
push
pop
add
cli
popf
icebp
or
and
stos
jne
mov
mov
stos
xor
push
roll
jp
and
sbb
mov
mov
push
mov
mov
bound
sbb
xchg
push
stos
push
es
aaa
stos
jge
repnz
jns
jmp
out
popf
or
stos
mov
hlt
adc
pop
mov
loop
push
xor
xor
mov
xchg
mov
sbb
test
xchg
loop
mov
outsl
xchg
in
test
add
shl
cmp
mov
out
pop
daa
adc
lods
insb
xchg
sub
mov
aaa
std
hlt
sub
xchg
insb
jl
cltd
es
add
lods
add
daa
xor
ljmp
or
rcrb
cmp
jg
enter
lock
and
mov
add
dec
xchg
stos
ret
push
rcr
cld
loop
jnp
pusha
lcall
push
in
pop
jle
imul
popf
stos
cltd
pop
cmpsl
jmp
or
and
xchg
nop
cmp
or
mov
int
pop
mov
dec
mov
daa
adc
push
inc
dec
adc
test
push
out
sub
cmp
lods
lahf
mov
ds
xor
mov
mov
pop
lret
jp
mov
or
sarb
dec
dec
pop
adcl
lcall
lock
adc
jp
in
rcll
add
add
inc
nop
jmp
inc
push
cli
out
dec
test
mov
sub
push
xchg
add
add
and
iret
mov
mov
lret
lds
jl
cmpsl
mov
pop
sbb
pop
outsl
or
test
mov
or
mov
test
push
adc
sub
or
repz
hlt
nop
cltd
rcrl
and
gs
sbb
mov
fwait
add
pop
push
out
cwtl
jl
jbe
fdivrs
ja
int3
adc
les
dec
push
mov
scas
mov
dec
pop
aad
push
jnp
je
mov
insb
adc
add
xlat
adc
adc
subb
mov
movsb
mov
pop
outsb
into
cli
xor
dec
jbe
cmp
test
add
jl
sub
push
loop
gs
mov
pop
and
pop
aas
bnd
inc
mov
push
pop
sbb
inc
xor
cmpsb
push
xor
pop
daa
sbb
movsb
sub
popa
or
bound
add
stc
scas
enter
jecxz
mov
cmp
jbe
cwtl
arpl
inc
jp
pop
stos
andl
rcrb
add
movsl
ror
jge
mov
mov
push
es
adc
daa
adc
icebp
xor
aam
adc
bound
mov
outsb
add
bound
mov
jo
add
sarl
inc
jmp
pop
jmp
stos
jl
sbb
inc
mov
jl
mov
dec
rol
xor
or
or
or
fnstsw
and
rolb
inc
add
pop
bound
jge
loope
je
inc
loope
or
push
lahf
std
xchg
inc
mov
movsb
rolb
test
mov
cld
movl
es
neg
setg
fmuls
xor
mov
rolb
jnp
leave
repnz
ljmp
adc
add
push
fdivrl
add
std
push
mov
bnd
push
pop
mov
stos
mov
pusha
dec
inc
mov
mov
cmp
sub
lcall
insb
jmp
xor
fldt
sbb
addr16
mov
push
fidivrs
lahf
aas
pop
or
cmp
fnstsw
adc
xor
jg
cmc
aam
les
jl
cli
and
jp
pop
lock
jae
das
aam
inc
cs
push
loopne
movsl
loope
icebp
xlat
fcompl
jle
andl
jbe
cmp
cltd
sahf
cld
mov
dec
and
jmp
shrl
jg
repnz
shll
sahf
daa
mov
inc
pop
cwtl
push
and
inc
out
jo
repnz
jno
and
inc
fisubl
mov
cmpl
bound
ja
inc
sbb
fstp
sbbl
mov
mov
jo
jmp
into
adc
push
idivl
cmp
mov
incb
aad
ss
js
push
cmc
and
pop
jno
sub
sub
scas
mov
inc
inc
sbb
push
out
lods
addr16
adc
sarb
mov
inc
lret
mov
repz
add
lahf
call
pusha
cmp
push
fbld
hlt
or
sbb
aad
push
repnz
dec
insl
es
and
jb
pusha
push
pusha
fistps
mov
push
cmp
sbb
cs
lods
inc
loopne
out
lret
loop
hlt
cmp
jo
loope
jnp
nop
mov
fs
jmp
ss
sub
push
pop
mov
cwtl
mov
jbe
aad
data16
adc
and
str
jmp
jnp
cmp
std
and
cmp
adc
int3
mov
aad
inc
pusha
sahf
mov
push
call
xlat
enter
mov
mov
out
addr16
aaa
cmp
xchg
xor
push
jb
mov
test
icebp
mov
mov
cmp
ss
xchg
and
mov
inc
jne
xchg
cli
mov
jl
fsubrs
fadds
lds
outsb
lods
mov
cltd
cmc
mov
cmp
xor
xlat
shll
das
pop
icebp
sub
push
and
cmc
xor
sub
test
fisubrs
sbb
bound
int
cmp
mov
inc
mov
out
enter
lock
imul
add
scas
loop
jecxz
push
insl
mov
or
mov
cmp
xor
mov
push
adc
pop
idivb
test
jg
mov
pop
pop
sub
inc
inc
cmp
xchg
gs
cmp
pop
mov
dec
cli
std
inc
adc
xchg
inc
dec
test
cmp
jp
out
int3
arpl
sub
xchg
loopne
add
outsb
je
jno
sub
xlat
ss
dec
stc
dec
mov
loope
and
sbb
sbb
arpl
cli
pop
xchg
mov
sbb
shll
push
ds
jecxz
sbb
cltd
loop
rol
inc
jo
fs
jbe
pushf
aam
dec
push
lds
std
lcall
mov
push
xor
lcall
jl
sahf
daa
sbb
test
sbb
cmpsl
xor
xchg
add
mov
out
test
nop
push
mov
lahf
fxam
add
out
ret
xchg
pop
add
adc
xor
popa
ss
bound
fs
or
dec
mov
movsb
sahf
rcrb
jo
jb
insb
fs
lret
rcl
push
mov
fs
test
cmp
cltd
cmp
adc
lahf
push
test
mov
cmp
cmc
divb
mov
adc
ret
mov
push
dec
movsl
aaa
popf
stos
sahf
outsb
lock
add
xor
mov
movsl
xor
jb
adcl
mov
aam
out
ja
loop
sar
pop
pop
xor
enter
sbb
movsb
sete
cmp
pop
pop
jno
loopne
stc
and
cmp
lcall
dec
outsb
rclb
bound
cmp
lods
pop
dec
movsl
sub
mov
aas
mov
mov
imul
and
push
sub
dec
fcomp
adc
jno
mov
popf
imul
ss
cmp
xor
sub
dec
mov
xchg
pop
popf
jl
xor
mov
insb
rcl
popa
pop
push
mov
push
imul
push
sub
test
mov
pop
lock
pop
jo
cmpsl
adc
addr16
fisttpll
xchg
popa
lea
jno
popf
in
inc
andb
push
mov
jne
sub
sarl
adc
stos
jg
add
or
in
int
cmp
jbe
mov
cmpsb
add
mov
push
and
add
lahf
inc
test
leave
pusha
adc
push
mov
repnz
pop
sti
cmp
fiadds
icebp
push
or
pop
adc
dec
cld
stos
fistpl
or
sub
inc
movsl
std
xchg
xchg
sub
jmp
dec
push
movsl
loope
push
fs
movsb
sub
xor
xchg
aas
movsb
adc
popl
jg
insl
aaa
mov
das
or
adc
and
or
xchg
jecxz
xchg
xor
incb
test
fs
into
xchg
sbb
lods
push
enter
jl
pop
enter
jne
jns
adc
inc
push
inc
out
outsb
mov
ret
mov
rcrb
mov
lahf
mov
dec
dec
xlat
repnz
push
adc
addl
sbb
inc
test
imul
in
lahf
xchg
xor
sbb
pop
imul
jnp
into
pop
lock
sub
jo
and
pushf
add
es
mov
pop
push
hlt
jl
ss
mov
pop
sbb
xchg
add
jb
lock
std
sub
mov
lret
repnz
cmp
stos
adc
fnstcw
shlb
cld
imul
jg
out
jns
pushf
daa
ja
pop
push
mov
out
push
sub
hlt
pop
subl
inc
fcmovnb
repnz
and
mov
femms
xor
lods
xchg
push
add
nop
push
or
insb
call
sbb
shrb
sub
push
stos
js
daa
std
popf
dec
adc
mov
shlb
arpl
scas
lods
loopne
add
psubusw
add
and
jnp
stc
mov
jge
mov
je
inc
aam
jns
insl
cmp
ljmp
ficoml
pop
or
mov
adc
stos
out
pop
and
cmp
in
jge
push
idivb
js
fcmovnb
dec
sbb
cmc
fisubs
push
sbb
gs
inc
adc
cmp
shlb
out
cwtl
shl
or
ja
cwtl
movsb
int
xorb
inc
popf
push
fsts
imul
jns
in
adc
test
fdivrl
ret
sbb
pop
gs
sub
out
adc
push
mov
and
jmp
mov
pop
push
sbb
adc
daa
int3
push
out
xor
pop
lods
inc
mov
push
test
mov
inc
shr
lods
sbb
xlat
and
mov
cmp
pop
sub
push
inc
mov
mov
stc
out
sbb
in
test
mov
aas
add
pop
add
shl
ljmp
pushf
jns
lret
rclb
mov
pop
cld
test
dec
mov
fdivrl
jb
xchg
aaa
and
lods
jbe
xchg
out
jne
in
mov
test
aaa
loope
hlt
push
out
push
gs
sub
and
stc
xchg
and
inc
pop
cmp
test
jo
or
cmpl
dec
mov
cmp
pop
mov
scas
jno
scas
sbb
inc
xchg
fldt
mov
aaa
add
sbb
movsb
or
imul
stos
cmp
test
xchg
fdivrl
mov
movsb
push
subb
dec
in
pop
pop
xor
cmpsl
jbe
dec
inc
jg
jg
icebp
out
cmp
imul
sbb
and
pop
fwait
out
sub
mov
fwait
rsqrtps
xchg
ret
fcomp
and
scas
dec
out
shlb
loopne
mov
push
xchg
push
sub
fstpt
inc
jp
adc
movsb
push
aas
ds
push
in
dec
adc
test
cmc
idivb
mov
dec
lds
push
stos
push
enter
cmc
inc
stos
divb
dec
cmp
sbb
lea
sahf
pop
orl
flds
rcrl
stos
jmp
dec
jmp
jae
arpl
sahf
push
xchg
push
cwtl
cmc
sbb
sti
cwtl
movsb
aad
int3
ljmp
rol
push
pop
js
push
testb
movsb
cltd
jb
jg
sbb
xchg
and
xchg
clc
fs
push
inc
sub
fstpt
out
jae
cli
and
aad
loope
pop
ss
and
cmp
ret
push
and
dec
mov
sub
jecxz
pop
imul
call
aad
sbb
mov
xor
jmp
into
out
hlt
pop
mov
push
inc
push
outsl
or
pop
ja
lea
dec
ret
sbb
sub
jns
dec
adc
fwait
xchg
js
sub
mov
js
push
xor
into
xchg
out
jecxz
sbb
xor
mov
add
outsl
fiaddl
xor
sbb
popf
rorl
mov
pop
mov
jbe
push
scas
shrb
pop
shr
popa
add
push
iret
mov
nop
xchg
cmpsb
arpl
and
aad
sub
pop
sbb
add
dec
fsubrs
jg
lock
cmp
fdivl
int
sbb
jmp
insl
lock
into
push
das
test
loop
sbb
cmp
jnp
les
fnsave
gs
test
out
lret
pop
mov
test
out
lea
jne
andb
mov
sub
test
jne
nop
aad
mov
inc
add
adc
adc
out
xchg
and
icebp
dec
mov
inc
xchg
mov
dec
cmc
push
fsqrt
cmpsl
mov
adc
or
inc
outsb
fdivl
dec
xchg
push
fs
imul
cli
popf
call
xor
or
jmp
clc
lret
xor
adc
lahf
jmp
inc
sbb
mov
pop
repnz
sub
loopne
push
push
jns
mov
je
and
fstl
push
mov
int3
lahf
jb
loopne
sub
pop
scas
mov
push
push
sti
js
cltd
adc
pushf
arpl
iret
fchs
dec
pop
push
xchg
icebp
mov
xchg
clc
lock
cmp
jns
scas
mov
pop
repz
aaa
outsb
push
cmp
pop
stos
ret
cltd
sti
mov
leave
and
mov
adc
inc
mov
xor
punpckhwd
inc
jbe
jns
testb
insb
push
lods
mov
jecxz
stc
pop
push
pop
shll
fbld
pop
add
pop
xchg
sbb
jp
jl
cmc
sub
sub
xlat
jg
ljmp
int3
pop
movsb
xchg
js
push
add
bound
mov
pop
or
jo
adc
bound
xchg
imul
std
jo
xchg
and
and
inc
pop
les
lahf
sub
dec
daa
sbb
daa
dec
jg
test
dec
cs
sbb
xchg
test
in
mov
aam
jg
out
mov
dec
push
mov
imul
xor
into
repnz
inc
cltd
dec
hlt
pusha
mov
jno
push
push
sub
mov
jl
xor
cld
or
cltd
test
mov
rclb
lcall
adc
fisubl
out
push
out
push
dec
test
aaa
lock
enter
test
push
mov
jns
aaa
in
sbb
mov
xchg
mov
add
pushf
out
pop
flds
outsb
jp
int
testb
mov
stos
mov
gs
push
mov
out
cmp
push
data16
push
orb
xchg
adc
test
sub
idivb
push
or
dec
or
icebp
lods
sub
icebp
push
int3
enter
sub
dec
es
aad
mov
mov
popa
xor
mov
sbb
in
xchg
fnstenv
cmp
lret
mov
mov
aad
xchg
dec
xchg
int3
je
jo
sbb
xor
test
fdivs
mov
test
push
lret
cmc
mov
ja
push
or
mov
ja
notb
shlb
in
arpl
cmp
mov
scas
ja
aaa
cwtl
idivb
ret
jmp
and
and
xchg
cmp
stos
adc
call
and
stos
push
push
pop
fcmovb
fisubl
adc
xor
cmp
pushf
ds
ja
fildll
cwtl
pop
sbb
inc
pop
cmp
xor
xor
lret
popa
stos
sbb
test
adc
cmp
fs
mov
andb
fnstcw
fsts
xchg
jge
adc
inc
dec
and
rorl
jno
mov
andl
dec
mov
stos
add
repz
add
cmp
add
mov
xchg
in
inc
mov
in
sub
mov
inc
xchg
xchg
xchg
sbb
push
test
ljmp
fistps
mov
out
testl
orl
cmp
in
dec
test
dec
in
or
sbb
movsb
out
cltd
and
add
outsl
mov
push
dec
inc
pop
push
push
xlat
rorl
sbb
mov
add
jnp
mov
jl
dec
outsl
cmp
movsb
jb
mov
les
lcall
movb
inc
adc
xchg
cmp
jecxz
add
outsl
jno
in
leave
lods
jb
mov
xor
in
xchg
sub
scas
cmc
js
xlat
cmp
sbb
jle
adc
pop
cmp
sub
mov
sub
pop
insl
cs
imul
sub
ds
aaa
fnstenv
lret
test
in
dec
mov
aad
popf
jne
cmpsb
lret
sahf
jnp,pt
pop
fwait
cld
or
enter
xchg
icebp
test
mov
int
andl
jcxz
mov
xor
cmp
out
mov
nop
lahf
mov
jno
mov
mov
repnz
mov
fiadds
adc
adc
pop
push
jo
cs
pop
out
into
or
ficomps
pushf
daa
aas
rcrl
lcall
push
sub
pusha
test
dec
push
popa
sub
xchg
std
ljmp
push
je
loopne
cmp
jecxz
rcll
cltd
pusha
fwait
sub
fildl
push
pop
fcomi
aam
mov
xorl
jbe
js
lock
cmp
stos
out
mov
stc
jmp
pop
sahf
jno
pop
xchg
sub
mov
mov
stc
dec
faddl
push
sub
cmpsb
int3
xchg
cs
dec
imul
outsl
xchg
fdiv
sti
sti
dec
mov
push
cld
mov
xor
mov
popl
orl
jmp
xor
stos
mov
ret
hlt
add
push
out
repz
dec
xchg
inc
sbb
sub
cwtl
ror
jmp
sbb
or
andb
fnsave
add
adc
pop
in
pop
push
push
stos
cmpsl
js
in
lods
or
mov
ss
mov
jns
pop
mov
loope,pn
enter
ja
pusha
loop
xchg
inc
movsb
lcall
adc
cwtl
loopne
in
test
mov
int
dec
arpl
mov
and
les
sub
sbb
inc
xchg
cmc
xchg
rorb
test
addl
adc
xlat
adc
cwtl
sbb
xor
jno
ret
incb
fstps
or
out
add
lret
hlt
ret
mov
outsl
inc
and
or
add
adc
push
hlt
sub
cwtl
lret
cmp
xchg
push
push
sub
mov
sub
scas
std
test
mov
mov
mov
mov
daa
sub
stos
xor
or
jbe
dec
test
cltd
mov
push
xor
lret
adc
lret
andb
shlb
or
jo
into
out
xor
pusha
aad
pop
std
aaa
jle
push
xchg
or
enter
inc
push
sbb
xlat
xchg
jecxz
inc
sbb
and
insl
in
cmp
pop
push
mov
rep
xchg
mov
cmp
jb
fiadds
push
pop
jo
and
pop
pop
pop
adc
into
or
inc
jmp
jmp
or
mov
mov
jne
cmp
add
movsb
jb
pop
mov
cmp
mov
hlt
cs
shrb
rorl
ret
pop
mov
fisubs
jno
mov
push
into
imul
out
insb
lcall
add
push
mov
or
push
mov
xlat
jnp
imul
notb
lock
inc
lock
fwait
mov
lods
arpl
icebp
mov
pushf
mov
add
js
mov
inc
push
sub
pop
pop
pop
mov
fistps
and
js
or
cmpsl
insb
mov
scas
popf
pop
add
jp
call
push
mov
push
pop
iret
adc
into
outsb
int
rcrl
jmp
add
rclb
shll
or
out
clc
inc
xorl
into
jae
sub
hlt
jmp
pop
sub
sti
mov
cld
push
push
push
mov
lock
in
cs
gs
cs
jbe
xorb
cmpsb
sub
mov
stos
jne
dec
adc
test
fsts
and
dec
jl
add
cwtl
xorps
and
fcmovne
shll
mov
leave
arpl
push
dec
ffree
js
rclb
mov
fcompl
test
ljmp
into
lea
aad
iret
gs
stc
jb
rcll
cmp
lods
pop
xchg
jle
cwtl
ljmp
es
loope
xchg
add
jle
sbb
mov
lea
sub
test
out
mov
aaa
inc
mov
in
int
movsb
push
xchg
in
pop
mov
mul
arpl
sbb
and
ret
ds
aad
pop
or
enter
mov
repz
xchg
push
mov
xor
mov
dec
xchg
clc
adc
pop
je
and
loopne
push
out
jecxz
xchg
push
fwait
mov
mov
inc
push
mov
fisubrl
cmc
pop
jge
mov
inc
and
or
mov
xchg
loope
jle
iret
arpl
jno
jns
mov
popa
mov
mov
leave
push
or
mov
ror
mov
add
movsl
out
orb
mov
jae
mov
and
into
sub
inc
lds
jecxz
inc
shlb
fisubl
cmp
aaa
enter
mov
cwtl
dec
push
mov
iret
test
mov
ror
mov
aas
test
clc
mov
cs
out
mov
sbb
adc
pop
in
mov
notl
test
scas
jge
insl
lret
adc
jns
jp
ror
lock
lods
adc
jno
xlat
mov
jne
xchg
orl
stos
aaa
sbb
mov
enter
lret
mov
mov
cli
bound
pop
in
cmpsl
push
mov
add
fucomi
movsb
testl
cmp
jge
sub
test
cmp
popa
pop
add
jge
mov
sub
inc
adc
dec
inc
ss
or
or
xor
test
cwtl
pushw
repz
aaa
test
in
pop
cmp
test
mov
mov
rolb
sbb
mov
out
or
cmpsl
dec
cmpsb
or
inc
in
inc
loopne
ja
adc
push
sahf
icebp
das
sub
pop
das
pop
in
pop
out
test
and
or
pop
jge
push
sbb
xchg
imul
js
movsb
data16
jns
and
and
push
repnz
inc
adc
fstps
jl
fnstsw
stc
test
fisttpll
test
pop
addr16
sbb
pop
adc
mov
sub
pop
outsb
in
test
dec
jnp
repz
adc
ret
jo
xor
insl
adc
lods
leave
pop
mov
outsb
inc
mov
lods
pop
ret
xor
sbb
cltd
dec
daa
inc
test
ret
add
pop
test
adc
pop
or
adc
clc
pop
add
mov
aas
pop
shrb
sti
jo
pop
pop
dec
adc
test
pop
ficompl
cmp
out
mov
loop
idivb
bound
enter
ret
sbb
test
das
jge
jle
dec
std
loopne
loop
jp
pop
fdivrl
push
pop
mov
outsl
pusha
addl
rcrb
or
ret
call
xor
stos
xchg
add
and
jo
mov
xchg
jns
adcb
loop
add
ss
mov
mov
scas
add
aam
xor
pop
jg
pop
push
sbb
xor
dec
mov
add
cmp
sub
adc
mov
sarb
cmp
decl
stos
icebp
mov
outsl
sub
jae
das
push
jno
mov
lods
mov
cmpsb
lods
fsubs
jle
push
add
mov
out
cmpsl
mov
fwait
imul
adc
pop
ss
in
dec
enter
xchg
push
jg
out
ret
sbb
cmp
sub
adcl
fisubs
dec
shrb
mov
cmp
lret
shll
and
xorl
xchg
inc
lds
nop
repnz
push
daa
addr16
cltd
pop
daa
jmp
sub
test
neg
loopne
mov
push
out
in
inc
sbb
xchg
popf
and
out
sub
mov
repnz
pop
movsb
fidivrs
scas
lock
jbe
icebp
sbb
mov
adc
add
xchg
push
lcall
jne
xchg
adcb
shll
ss
push
sub
leave
cmp
pop
aad
jb
outsb
lret
add
xor
dec
pop
sti
jecxz
jno
or
mov
iret
pop
mov
xor
lock
sarl
dec
adc
adc
dec
inc
cwtl
mov
add
movsl
xor
xor
in
push
orb
out
movsb
or
stos
das
adc
dec
outsl
lods
rorl
jmp
and
jo
inc
dec
mov
and
adc
pop
push
fcmovu
sub
jo
idivb
xchg
sbb
push
adc
iret
fsts
mov
xor
xor
mov
mov
pushl
mov
xchg
decb
inc
adc
pop
jne
pop
or
test
pop
add
les
xor
rorb
aam
push
repz
mov
call
xchg
cli
lahf
aad
push
aam
in
mov
scas
mov
or
xor
mov
mov
lods
sbb
inc
lods
push
mov
addr16
cmp
dec
cld
xchg
push
mov
sbb
ja
mov
jecxz
sub
jb
fcoml
inc
mov
sbb
jg
inc
or
jle
mov
sbb
mov
cmpsb
fwait
push
sti
adc
pop
movsl
sub
lods
jns
ds
cmp
or
out
cwtl
imul
inc
shl
push
test
mov
pop
xchg
xor
or
jp
fcom
cs
orl
xor
pop
jl
fstps
cmpsb
int
out
xor
xchg
adc
lret
mov
pop
dec
xchg
pop
jae
dec
sbb
movsl
lahf
cltd
jmp
and
sbb
and
mov
or
movsb
cwtl
cmp
lahf
cmp
pop
sbb
cmp
pop
aas
dec
movsl
call
adc
aaa
arpl
popf
push
jne
dec
jmp
and
or
inc
xchg
sub
insb
jle
mov
jg
les
and
stos
pushf
fnstenv
pusha
mov
sbb
jns
mov
mov
aam
out
stos
in
push
xlat
lret
incb
mov
into
sub
popa
sub
inc
mov
cmp
ret
lock
out
cmpsl
mov
dec
cmpsl
and
xor
cwtl
push
mov
ds
andb
fdivp
aam
jbe
outsb
aam
insl
sbb
ret
lahf
or
pop
lahf
pop
pop
dec
jns
lret
es
sub
dec
in
loope
mov
dec
repnz
pop
pop
xchg
test
dec
loopne
bound
sbbl
scas
mov
jb
out
insb
shll
shlb
pop
push
push
jp
mov
ds
leave
push
into
rcrl
pushf
addb
ja
xor
adc
rcrl
cmpl
test
jg
sti
lds
into
sahf
pop
shll
dec
mov
xchg
jb
xchg
jl
fistl
cltd
sbb
scas
das
ljmp
hlt
adc
mov
pop
pop
out
jo
aad
push
xchg
pop
ja
gs
nop
int
jb
sub
fstl
dec
mov
push
fistpll
clc
out
bnd
in
cmp
jns
mov
mov
and
leave
or
mov
mov
mov
nop
cld
fdivrl
and
out
dec
daa
push
scas
mov
and
sbb
daa
push
xchg
cmp
xchg
sbb
push
cmp
les
loopne
xor
push
adc
push
adc
mov
lea
cmp
lods
push
xor
mov
gs
dec
imul
fidivrl
leave
cld
adc
je
jecxz
mov
adc
jne
iret
mov
andl
hlt
push
xor
enter
in
push
out
mov
mov
xchg
cli
clc
sub
es
xchg
push
cmp
cmp
movsl
loopne
inc
sbb
outsl
mov
jge
mov
js
cmpsl
mov
dec
jge
inc
outsl
sahf
cmp
adc
adc
dec
enter
adc
scas
xchg
lret
or
xchg
popf
iret
lds
or
and
adc
sub
jae
sub
ret
mov
ja
xor
fistpll
jae
xchg
mov
ret
or
or
cmp
add
jae
mov
les
xchg
loop
in
test
popf
jl
clc
rolb
cmpsl
mov
dec
push
ljmp
adc
cmp
cmpsl
xor
sbb
add
jmp
mov
negb
fcmovnu
sbb
jns
imul
ja
sub
mov
cmpsb
push
outsb
in
xchg
dec
shll
push
xor
fsub
gs
pop
movsl
sahf
add
mov
pusha
dec
lds
jecxz
pop
inc
adcb
addr16
jns
push
arpl
outsl
out
insb
mov
sbb
fbld
push
jecxz
in
sarl
dec
icebp
pusha
jno
push
lods
shrb
cltd
loope
pop
mov
out
dec
rep
scas
outsl
adc
in
or
leave
lock
jg
mov
push
push
ss
aam
pop
xor
sahf
sub
loop
mov
mov
or
roll
inc
imull
push
and
or
out
shl
mov
cltd
xor
add
out
cmp
sub
sbb
cmp
fisubrs
je
mov
notl
nop
es
pushl
imul
fsubrs
sahf
test
pop
inc
or
xor
push
fnstcw
xchg
rcrl
cwtl
add
inc
sub
pop
xchg
adc
and
test
xchg
jmp
jle
dec
pop
imul
cmp
mov
xchg
mov
xor
jmp
enter
lods
xchg
push
sbb
ljmp
xchg
cmovb
out
inc
push
hlt
std
and
adc
jmp
test
aam
add
pop
push
insl
xchg
arpl
jne
cmc
je
jge
and
ja
pop
cmp
aaa
push
pop
cs
cmp
dec
adc
and
in
push
pop
hlt
xchg
jne
icebp
imul
pop
xchg
mov
mov
sbb
cmp
imul
imul
out
das
scas
sbb
test
fisubl
xchg
imul
mov
dec
icebp
dec
jle
test
adc
ret
call
loopne
dec
or
cmp
cld
lcall
pop
or
mov
addr16
das
xchg
xchg
cmc
sbb
or
aaa
push
nop
lcall
lcall
repnz
testl
adc
cmpsb
mov
scas
cld
sub
pop
adc
sbb
rcl
jnp
sub
aam
xchg
das
out
bsr
sub
cmp
add
in
xlat
push
outsb
pop
in
jnp
scas
jno
xchg
daa
cmpsb
lds
outsl
inc
push
adc
adc
clc
jl
shll
gs
aad
inc
into
inc
ja
mov
xchg
lcall
mov
inc
sub
pmaddwd
mov
pop
inc
push
add
push
gs
and
mov
jb
cltd
push
aad
sarb
xchg
mov
xor
sbb
dec
lods
mov
stc
nop
pop
repz
andb
cmp
dec
xchg
push
loop
ljmp
adc
cmp
add
adc
fsts
test
popa
mul
cmp
movsb
repz
cli
ds
adc
out
mov
iret
cli
push
lret
xor
sub
mov
add
das
add
adc
fsqrt
inc
add
pop
cwtl
xchg
mov
mov
stc
lret
mov
dec
mov
cs
add
ss
pop
dec
rol
lahf
dec
adc
daa
dec
mov
js
cltd
movsb
sbb
sbb
sub
sar
loop
cs
cmpsl
add
jno
pop
mov
or
cmp
sub
ds
jp
arpl
mov
push
xchg
cmp
imul
push
arpl
mov
ret
and
outsl
xchg
movsl
mov
and
xlat
je
xchg
pop
or
push
imul
jmp
cs
ficoml
mov
lea
dec
iret
popa
scas
aas
int3
aas
inc
leave
into
loop
push
test
mov
inc
dec
lahf
pop
or
into
arpl
inc
push
sbb
mov
movsl
pop
test
and
jmp
jne
in
movl
fs
mov
push
inc
into
or
leave
mov
or
insb
mov
in
ret
sbb
nop
pop
mov
mov
xchg
fwait
loop
sbb
xchg
test
es
or
push
lret
mov
test
ds
pop
pop
mov
adc
xchg
lods
cwtl
cs
or
inc
pop
cmpsl
loopne
shll
lea
leave
or
or
sub
push
and
xchg
or
and
cli
loopne
mov
rolb
sub
je
push
sarl
xor
cwtl
mov
pop
or
addr16
inc
push
and
inc
test
dec
dec
popa
test
or
and
push
sub
xor
xor
pusha
std
lods
jbe
lcall
cmp
mov
push
leave
bnd
pop
and
es
pop
sub
xchg
xchg
mov
inc
jmp
movnti
mov
test
cmp
jg
mov
mov
mov
lret
stc
daa
scas
pop
mov
and
ljmp
mov
fsubrl
ss
add
add
negb
jge
dec
pop
jnp
sbb
cltd
pop
mov
inc
mov
cmp
mov
mov
inc
test
mov
mov
adc
cwtl
sub
loop
jnp
sbb
mov
ret
add
ja
jg
push
mov
mov
out
mov
mov
mul
insl
sbb
dec
repz
inc
mov
lahf
lods
fs
or
jnp
inc
xchg
fcoml
fs
fdivrs
nop
lret
xchg
pop
popa
aas
push
cld
xchg
jge
add
add
mov
movsl
repnz
or
repz
mov
sbbl
add
roll
dec
mov
push
rcll
sbb
adcb
lock
adc
stc
cmp
push
insl
and
sbb
or
adc
dec
or
js
add
cmc
sub
xor
insl
add
js
inc
stos
sub
sub
jbe
das
mov
sub
xchg
cmp
adc
iret
lcall
fcmovu
in
sub
mov
loopne
lret
jbe
and
sub
and
int
lahf
cmp
nop
das
mov
int
dec
mov
mov
and
push
push
mov
xor
out
iret
inc
mov
mov
mov
insb
outsb
and
mov
fldt
adc
push
mov
lods
push
outsl
fwait
loope
add
testb
mov
sbb
lea
mov
das
mov
iret
inc
xchg
jb
int
pop
movl
push
hlt
daa
in
inc
fildll
sarb
xor
insb
cmp
ljmp
push
fsub
js
inc
iret
or
or
jp
loope
dec
lods
in
aas
add
dec
lods
cmp
mov
test
pop
in
sub
and
es
adc
out
jecxz
jle
and
jg
hlt
sub
mov
pop
push
das
mov
int
and
add
add
or
jno
stos
sarl
jb
push
cmp
punpckhwd
leave
cltd
shrb
jle
push
cld
arpl
mov
imul
rcl
out
xchg
sbb
cld
je
add
in
inc
or
pop
push
jb
fnsetpm(287
adc
ds
cmp
inc
pop
sub
mov
ret
mov
mov
add
cli
repz
cmpb
xchg
pop
fstpt
sbb
pop
push
or
push
mov
in
popf
test
int
pop
mov
xchg
or
jg
xchg
fbstp
arpl
outsl
cmp
fisttpl
jle
call
lret
call
lahf
adc
mov
jge
in
in
and
icebp
imul
add
test
into
lahf
jae
xor
les
lods
xchg
or
pop
dec
sqrtps
cmpsl
pushf
insl
dec
mov
or
add
jg
push
push
loope
mov
or
test
lahf
sarb
xchg
adc
xor
leave
mov
outsl
mov
sbb
add
pop
xchg
push
push
sbbb
std
imul
addr16
cmp
or
rcrb
sub
leave
loop
ds
and
call
sub
fisubs
nop
mov
daa
ss
ljmp
je
cmp
mov
cltd
xchg
je
addr16
in
xor
mov
and
sub
lds
fstpl
xor
xorl
lock
inc
sbb
scas
roll
lds
fstps
imul
shrb
jnp
mov
mov
mov
push
and
ds
jae
es
cmp
xchg
xchg
mov
loopne
in
fnstsw
std
cmp
adc
in
int3
sub
cmp
mull
leave
jp
fldt
lds
adc
stc
stos
clc
jge
loope
fdivrs
lret
or
sbb
jno
sti
add
xchg
cmp
dec
test
dec
cld
imul
test
jns
pop
das
lret
in
jle
adc
dec
lret
adc
add
xor
sub
and
pop
cmc
fnstcw
ret
xchg
cs
jl
lds
in
or
xorb
shll
sbb
dec
les
adc
pop
andb
not
fs
or
jne
aad
sub
cltd
pushl
adc
mov
pop
ret
cmpsl
movq
add
adc
add
fistpl
dec
and
push
push
lret
lcall
jg
mov
jg
push
push
int
daa
add
sbb
lcall
mov
into
cwtl
add
pop
and
fwait
mov
sbb
jge
fcmovnu
xchg
lahf
das
mov
movsl
loopne
bound
push
and
cmp
sahf
shrb
aas
sbb
inc
arpl
movsb
repz
daa
mov
rcl
jmp
pop
mov
call
jecxz
xchg
jb
cmpsl
xchg
push
adc
cwtl
fwait
xchg
sbb
sub
out
and
movsb
adc
xchg
sahf
dec
shrl
ret
inc
ljmp
cltd
dec
pushf
out
stos
movsl
pop
mov
pop
adc
add
inc
jmp
fisttpll
mov
mov
cli
and
cmp
inc
xorl
icebp
pop
jmp
sti
ss
sub
xor
and
jmp
inc
fxch
dec
orb
push
aam
stos
repz
cwtl
mov
roll
cmp
push
sbb
jmp
call
mov
cmp
shl
shrb
or
cmp
cmp
mov
iret
mull
cmp
push
les
inc
dec
pop
dec
mov
lock
dec
and
xchg
xchg
mov
cli
clc
stos
dec
xchg
and
mov
xchg
mov
sbb
xor
pop
roll
pop
mov
jle
lcall
out
fmuls
dec
push
push
add
clc
or
rclb
lea
xor
mov
adc
and
sub
or
pop
push
dec
push
add
test
fisttpl
sub
push
push
arpl
stc
adc
adc
ficoml
mov
dec
cmpsl
or
loope
sub
adc
xchg
ret
lret
or
and
lock
fwait
dec
ljmp
cmp
daa
xchg
out
sbb
jg
pop
sbb
xchg
in
push
mov
or
test
jbe
or
inc
es
roll
cli
popa
push
sub
fld
ja
popf
mov
mov
shll
cmp
imul
rorl
dec
mov
outsb
fmul
xchg
push
add
cmpsl
and
sub
sar
sbb
test
call
aas
int3
xor
movsb
adc
aam
fisubrs
inc
mov
dec
icebp
js
aad
shl
stc
xchg
push
pusha
add
xor
mov
popf
push
shrb
jg
add
pop
sub
movsl
pop
stc
std
hlt
fs
iret
sbb
mov
push
inc
test
lahf
mov
sarl
lcall
insb
adc
in
add
lret
jl
xchg
test
adc
into
rcl
inc
sub
pop
pop
pop
jb
mov
je
xchg
jb
lods
imul
xor
loopne
lahf
pushf
lods
mov
movntq
or
pusha
lods
xchg
adc
add
or
into
fidivl
popf
int3
daa
push
out
and
es
push
jle
inc
out
loop
adcb
xchg
mov
jmp
dec
aaa
pop
bound
dec
aam
push
mov
pop
adc
xor
jno
imul
mov
cs
push
fmull
and
stc
cmpsl
push
sbb
in
mov
loope
scas
add
ljmp
ret
mov
out
or
jb
mov
test
push
mov
insb
jb
clc
enter
jae
adc
test
pop
cwtl
insl
adc
adc
ja
xchg
cmp
push
cmp
in
jne
jo
mov
sub
bound
stos
xlat
dec
or
pop
push
test
jl
mov
stc
imul
orl
xor
pop
stos
mov
mov
mov
in
add
cmpsl
cld
mov
jp
dec
sbb
out
in
sbb
inc
sahf
sub
sub
sbb
and
mov
stc
les
repnz
cmp
ljmp
ljmp
pushf
sbb
out
mov
adc
or
pop
xor
adc
cmp
push
clc
call
adc
in
loope
xlat
adc
pop
aam
pop
add
push
add
dec
aaa
arpl
repz
fstpt
int
cld
and
adc
out
aaa
pop
xor
outsb
and
out
push
adc
into
sub
xchg
pop
das
inc
jne
or
sbb
pop
sahf
ljmp
jle,pt
fs
in
cmp
std
stc
movsb
movsb
adc
aaa
pop
ds
push
and
adc
rol
fadds
stc
loopne
stc
dec
pop
mov
sahf
cmp
js
fwait
enter
mov
mov
and
mov
call
stc
call
movb
test
cmp
push
sbb
pusha
lea
sub
clc
stc
clc
push
movzbw
call
push
stc
pushf
cmp
jmp
jecxz
cld
lret
pushf
dec
push
dec
nop
fldt
cld
pop
cmp
andb
adc
adc
fisttpll
xchg
push
into
hlt
xchg
jno
je
in
add
lret
add
lock
bound
rcll
icebp
dec
or
mov
mov
outsl
leavew
xor
sub
cmp
clc
xor
and
decb
mov
pop
negb
push
test
aam
mov
imul
dec
sbb
es
ffreep
aam
in
pushf
pushf
pusha
jmp
mov
shl
bt
mov
add
clc
call
adc
leave
xchg
mov
adc
mov
ret
push
and
mov
jecxz
dec
fcoml
push
mov
lods
xchg
std
aas
mov
mov
jne
pop
cmpb
mov
leave
nop
inc
push
in
dec
imulb
es
in
mov
pushf
movsb
inc
add
lcall
pop
fs
in
sbb
or
push
popf
test
or
test
pushf
push
cli
shll
sarb
pop
lea
jae
mov
pushf
xchg
lea
jmp
mov
adc
xchg
jg
or
lods
mov
cs
dec
loopne
sbb
pop
jae
adc
hlt
adc
or
fucomi
cmpsl
mov
fbld
outsb
inc
loop
jge
lods
jne
movsl
push
or
mov
popf
push
dec
pop
aad
movsl
inc
xchg
stos
adc
xor
stos
in
data16
xor
bound
lcall
xchg
cmp
cmp
pop
pop
mov
and
add
mov
sub
xor
xchg
enter
dec
sub
adc
rorb
pop
xchg
ljmp
sahf
xor
ljmp
outsl
xchg
xchg
push
sub
fwait
dec
pop
mov
sbb
mov
shll
fildl
and
or
mov
inc
shl
je
pmaddwd
icebp
sub
lahf
out
addr16
repz
icebp
xchg
fsub
lods
jo
sbb
arpl
or
cmp
xlat
xchg
addr16
icebp
and
outsb
sub
adc
in
inc
or
push
dec
mov
inc
movsl
xor
shl
adc
addb
jne
cld
rol
leave
cmp
jle
or
aad
pop
sti
in
push
pop
mov
call
adc
movsb
xlat
dec
addl
sbb
push
mov
es
ret
inc
mov
cmp
xchg
xchg
hlt
mov
scas
xchg
mov
jb
sbb
pushf
lea
jne
lea
lahf
bswap
pop
pusha
mov
mov
pushf
mov
mov
mov
lea
cwtl
lea
pushf
mov
mov
push
movl
push
pushl
popl
pushl
pushl
ret
pushf
pushf
xchg
mov
movw
lea
jnp
push
mov
movw
pop
call
popa
or
xchg
add
sbb
inc
nop
inc
lcall
gs
inc
mov
shll
fwait
gs
into
lahf
add
sbb
sub
xor
int
mov
add
xor
outsl
test
dec
push
imul
shlb
std
push
aaa
pop
cmp
aad
clc
inc
add
mov
jno
dec
sbb
mov
inc
test
jl
mov
sub
sbb
push
mov
mov
or
mov
dec
fldt
ljmp
xchg
imul
pushf
jae
ret
dec
push
push
pop
imul
shll
xchg
das
pop
test
push
add
sbb
mov
add
or
mov
out
inc
cmp
mov
xor
mov
fisubrs
pop
dec
bound
imul
xchg
out
dec
xchg
cmp
out
cmp
into
xlat
les
cs
add
ror
sub
jne
lods
fbstp
call
jbe
jno
sbb
push
jne
ret
or
add
cs
ret
push
les
mov
pop
jp
lods
dec
jo
filds
rcrb
mov
test
cmpsl
jp
xor
xchg
imul
pop
out
bound
daa
sbb
sub
inc
push
xor
cmp
xchg
xor
arpl
sarb
cmp
jge
mov
inc
add
push
fs
xor
xchg
sbb
movsb
idivb
out
lcall
test
or
pop
xor
dec
lret
ret
pop
cmp
push
cmp
inc
filds
ljmp
movsl
mov
push
cmp
pusha
imul
fidivrs
fisttps
inc
dec
pop
outsl
aas
cmp
shrl
xchg
lods
push
pop
fucom
adc
fsub
adc
mov
mov
mov
fbstp
aam
ffreep
add
xchg
pop
cwtl
out
jecxz
es
movsb
flds
lods
xchg
ret
nop
pop
jnp
and
mov
add
repnz
loope
jb
inc
stc
inc
outsb
pop
jne
gs
cmpsl
cld
xor
jmp
imul
nop
fs
mov
push
add
in
mov
jne
mov
inc
push
icebp
lock
daa
push
aam
xchg
xchg
aad
je
push
jno
push
pushf
icebp
shl
out
xor
scas
sub
stos
sbb
mov
movsl
std
xor
jae
bound
mov
sub
jmp
mov
sbb
test
xor
dec
add
loop
sbb
xor
mov
icebp
adc
inc
cs
xor
and
add
fcompl
push
xor
fdivr
cmpsl
sbb
push
sbb
pop
imull
fucomip
or
mov
imulb
mov
dec
mov
xor
inc
in
jns
add
and
cli
inc
mov
fsubrp
ret
idiv
adc
cmc
and
lds
add
or
call
lret
adc
lret
push
outsl
mov
popf
fdiv
pushl
out
mov
xchg
jae
xchg
data16
xorb
mov
dec
cmp
ljmp
xchg
insl
cmp
jb
imul
leave
adc
out
mov
mov
test
enter
mov
test
jl
adc
xchg
pop
xchg
jne
out
inc
mov
out
movsl
jle
sub
lret
sarl
jecxz
dec
movsb
pop
pop
lret
scas
jne
xchg
cmp
cmpsb
int3
and
dec
orb
scas
popa
orb
incb
and
gs
pop
lahf
test
negb
es
pop
pusha
inc
rcrb
and
sbb
mov
cmpsl
jg
dec
cmp
jo
addb
loop
mov
cltd
pop
cmp
imul
push
hlt
xchg
insl
in
into
jae
loop
std
push
scas
xchg
insb
xchg
hlt
roll
jae
xchg
in
dec
push
iret
cmp
test
sub
push
mov
shlb
cmpsl
int
popa
cmpl
mov
jp
dec
dec
rolb
push
mov
jo
mov
out
xchg
jb
out
icebp
or
cld
scas
add
or
mov
int3
stos
test
fisttpl
xor
adc
push
orl
and
pusha
ja
outsb
loop
outsl
inc
add
and
sbb
mov
out
jge
push
sbbl
add
pop
pop
cwtl
enter
jp
adc
pop
fcmovu
dec
shll
call
test
sahf
cmp
xor
push
jns
inc
cwtl
mov
and
in
out
dec
out
push
sub
adc
mov
sub
adc
dec
jg
shrl
ljmp
aad
add
mov
inc
lds
mov
mov
dec
imul
adc
jne
aad
das
popa
into
pop
mov
call
inc
cmp
aaa
push
jle
into
add
shrb
lahf
mov
mov
push
push
sbbb
xchg
popf
sbb
rclb
push
aad
aas
ss
pop
outsb
test
les
js
enter
jb
or
lret
sbb
aad
in
dec
adc
push
lret
and
push
pop
adc
cmc
outsl
push
out
pop
jg
push
and
shrl
bnd
mov
and
sub
shlb
test
in
mov
outsb
mov
sub
cmpsl
mov
xchg
lock
shrl
pusha
addb
sub
dec
push
mov
jl
fcmovu
inc
jae
jbe
in
and
scas
or
and
adc
ss
mov
imul
iret
enter
dec
cltd
in
sar
mov
and
aam
invd
aaa
adc
popf
test
test
sub
decb
xlat
inc
enter
aad
scas
push
into
gs
cld
movsl
mov
test
mov
fldz
dec
aas
sbb
push
mov
jb
adc
lods
cmp
out
pusha
bound
or
lahf
fistps
fcoml
insl
ret
int3
inc
out
mov
jge
inc
dec
and
enter
imul
das
jecxz
sub
fcmove
cmp
test
leave
pop
rcl
jecxz
fbstp
xchg
sahf
pop
arpl
adc
movsl
sti
mov
lcall
cmp
jl
aaa
aad
out
jbe
mov
ja
jle
and
push
pushf
ljmp
adc
lahf
inc
hlt
sub
inc
in
push
adc
into
inc
mov
repz
adc
inc
fistpll
pop
sbb
bound
mov
stos
repz
cmp
movsl
dec
push
pop
xchg
xchg
pusha
sub
ljmp
es
pop
je
xor
lds
stc
call
jmp
lcall
mov
insb
mull
inc
lret
ret
jns
jmp
mov
add
cmp
mov
mov
fdivr
test
sbb
dec
std
repz
adc
adc
mov
push
cmp
jle
mov
punpckhdq
les
xor
sbb
jge
xchg
nop
push
mov
mov
xor
pop
notl
aad
jno,pt
pushf
les
sub
rclb
mov
lcall
and
fidivrl
dec
stos
rolb
xchg
lock
sbb
adc
add
sbb
arpl
std
xor
pop
jbe
add
jbe
dec
and
mul
mov
jmp
imul
aas
mov
movsbl
shl
cmp
enter
mov
mov
int3
sarl
add
jmp
jo
das
rcrl
mov
fwait
sbb
push
dec
cwtl
mov
pop
lds
test
adc
into
jle
sub
dec
inc
ja
inc
and
out
std
push
popf
mov
cwtl
xchg
shr
int3
int3
push
jno
sbb
xchg
pop
inc
push
ds
cmp
and
enter
add
mov
and
popf
add
jno
adc
test
adc
in
outsb
sbb
imul
dec
or
xor
cmp
enter
aam
loope
or
pop
cmp
jmp
or
and
sub
pop
sbb
xchg
js
xor
jns
adc
cmp
jecxz
inc
scas
daa
adc
jns
cmc
aad
and
sahf
sub
pushf
mov
lret
xchg
lds
add
jne
push
push
push
into
mov
sbb
sbb
sbb
pushl
sbb
pop
fwait
out
imul
pop
and
js
je
testb
adc
popa
jge
ret
dec
mov
mov
popf
mov
rolb
mov
add
cmpsl
loope
dec
add
jno
or
lods
aad
ds
in
mov
and
inc
push
jmp
mov
das
pop
out
loope
insl
fsubrl
out
adc
add
nop
pop
mov
mov
push
xchg
repnz
pop
and
inc
int3
bnd
es
or
insl
push
cs
cmp
andl
sbb
lea
push
pushw
push
pop
mov
and
push
sti
adc
or
xchg
push
sbb
stos
jae
push
dec
out
mov
dec
push
aaa
mov
inc
jle
test
into
pop
outsl
subl
stos
jo
xor
cmp
sti
push
dec
xor
push
shll
adc
push
nop
lcall
xor
mov
arpl
push
xchg
jnp
sti
lret
sub
push
cmpsl
adc
jo
pop
andb
ja
sbb
stos
cmp
pop
call
fistl
ret
adc
add
or
push
mov
mov
sbbb
mov
mov
fld
stos
mov
std
mov
push
outsb
mov
out
xchg
cltd
iret
aad
rcrl
cmpsb
cmpsl
xchg
and
jg
popa
pop
cmpb
cmc
fs
mov
fsubrs
add
xchg
aas
push
add
cmc
loope
and
pop
lret
gs
cmpsl
adc
inc
xchg
jb
xor
inc
loop
add
adc
aas
inc
ss
sub
mov
lds
pop
push
dec
cmp
jge
dec
push
or
add
xchg
std
mov
aam
shlb
out
and
mov
mov
sti
xor
adc
addl
movsl
cs
lret
iret
movsb
mov
or
adc
push
int
add
pop
aas
mov
mov
cmp
add
mov
dec
pop
add
aam
mov
fcomps
mov
or
mov
and
pop
xchg
cmpsb
mov
js
jmp
outsb
jb
stos
add
push
jecxz
mov
dec
inc
push
loop
mov
mov
or
pusha
inc
mov
mov
sbb
insl
sub
enter
dec
and
fists
cmp
mov
nop
es
jge
into
xchg
jecxz
call
enter
negl
dec
cmpl
in
pop
jns
xchg
xlat
pop
gs
outsb
data16
xchg
add
pop
imulb
insb
xchg
scas
adc
cld
fidivs
mov
outsl
arpl
adcb
cwtl
pop
dec
push
xchg
xchg
push
pop
mov
imul
mov
mov
cmc
xor
out
mov
mov
bswap
notl
push
lret
ljmp
testl
pop
repz
adc
dec
lea
mov
cwtl
outsb
lahf
in
and
cmp
inc
movsb
shlb
xor
mov
xor
dec
movsl
adcl
in
jbe
sar
sub
sub
test
js
mov
fldl
aas
jp
sub
frstor
xchg
je
jmp
scas
mov
push
inc
push
sub
jbe
adc
adc
mov
loope
in
mov
daa
fsubrs
insb
sub
mov
jmp
lods
dec
lods
xor
xchg
or
fdiv
pop
mov
lock
in
fiadds
imul
dec
test
inc
push
lea
aad
adc
and
or
int
cmp
jmp
repz
push
inc
push
xchg
test
push
jne
std
pop
sub
insb
pop
jecxz
sub
cmc
jo
aad
or
jp
xchg
in
call
das
in
inc
imul
aas
pop
fdivl
pop
mov
aas
enter
sbb
mov
jae
pop
mov
nop
stos
test
pop
mov
push
inc
mov
movsl
out
cmp
mov
jecxz
push
inc
push
in
je
jecxz
and
push
cmp
out
test
mov
clc
xchg
ficoms
sub
imul
js
push
dec
js
push
movsb
sub
adc
inc
xor
dec
ss
je
dec
mov
hlt
mov
sub
mov
push
imul
out
mov
test
dec
ja
in
mov
xchg
sub
jb
sbb
idivl
mov
stos
movl
dec
sbb
fisttps
mov
pop
push
sub
std
fldt
paddb
aaa
add
mov
push
in
sbb
xchg
pop
mov
sbbb
pop
jmp
lea
ret
xchg
iret
xor
xchg
shll
push
add
in
jae
pop
adc
xor
data16
inc
dec
mov
jecxz
scas
shld
stos
mov
pushf
xchg
bound
es
or
xchg
sbb
mov
add
shl
jns
inc
fcomi
mov
lcall
and
rorl
enter
cltd
dec
cli
imul
fidivrs
cmp
addr16
pop
imul
outsl
cmpsb
mov
mov
sub
mov
jb
mov
or
pop
test
cwtl
clc
test
xor
lock
mov
jle
pop
lds
dec
or
data16
xor
jmp
push
mov
dec
and
add
loopne
inc
mov
mov
test
pushf
cli
cmp
mov
mov
xchg
dec
in
lods
sahf
push
fstps
nop
sarb
enter
dec
pop
push
ds
lcall
push
repz
mov
mov
fwait
sub
xchg
cs
into
sbb
mov
mov
cltd
dec
scas
out
mov
lret
mov
aad
outsb
jo
aas
scas
movsl
movzbl
mov
in
push
or
clc
cmpl
mov
dec
mov
push
jp
dec
pop
loope
mov
pop
sbb
sub
test
sarb
mov
stos
loope
mov
pop
xor
mov
mov
pop
xchg
jb
int
jbe
sahf
inc
lock
loope
ret
inc
ljmp
imul
sbb
sbb
adc
sub
xchg
repnz
das
adcb
fwait
inc
pop
adc
xor
aas
xlat
fs
stc
mov
fistps
rolb
aam
mov
jbe
es
dec
pop
sbb
ret
cli
imul
std
mov
imulb
mov
popf
inc
lods
jnp
es
les
imul
and
jbe
ja
mov
or
cli
movsb
les
jecxz
sub
rorb
mov
mov
sbb
imul
mov
es
xchg
ret
call
out
dec
or
mulb
or
cmp
pusha
inc
mov
add
sub
cs
and
push
adc
in
enter
lcall
xor
mov
int3
popf
cmp
inc
push
cmp
rcl
inc
sbb
imul
out
ret
dec
fwait
mov
scas
and
int3
add
lahf
fstps
jae
pop
push
int
mov
fdivrl
mov
push
and
lea
inc
xorl
fsubrl
cmp
cld
jns
aaa
cld
sti
dec
inc
mov
dec
fcmovnbe
push
mov
mov
sarl
ret
sbb
and
vshufpd
mov
cmp
add
lcall
push
dec
push
pop
sub
shlb
pop
inc
mov
push
ljmp
or
cmp
aam
push
sub
test
in
les
lds
imul
mov
push
pop
inc
push
dec
sub
jg
cwtl
sub
push
cli
cltd
cltd
push
push
test
or
insl
xor
and
and
movsb
mov
jno
adc
dec
lret
mov
xor
js
notb
loopne
fdivs
std
sbb
lock
rorl
stos
mov
je
sub
pop
add
test
pop
sub
adc
fcmovbe
lahf
xor
and
lea
mov
cltd
mov
sbb
jo
lea
outsb
or
sarb
divb
pop
inc
inc
stos
js
or
push
outsb
mov
xlat
mov
adc
cmovnp
dec
mov
mov
pop
xor
dec
mov
jb
mov
and
sub
xor
arpl
cmp
out
push
inc
test
sbb
imul
cld
jne
inc
pop
inc
mov
imul
enter
xchg
jbe
jmp
adc
mov
push
inc
pop
test
pop
pop
out
insl
ret
push
dec
inc
add
mov
cli
cs
push
cmc
mov
mov
cmp
cmc
repz
mov
scas
push
inc
popa
and
sub
add
movsl
call
dec
jge
inc
outsb
rdtsc
jmp
and
push
or
xlat
jae,pt
cmp
in
cmpb
nop
pop
cmpsb
xor
jae
icebp
ljmp
out
addr16
fcmovnb
icebp
mov
add
sar
pop
lahf
subl
rorl
adc
sbb
or
xorl
sub
xor
movsb
jne
inc
stos
stc
mov
push
loop
sub
dec
out
cmp
movsb
dec
test
push
jnp
adc
cmp
mov
mov
insl
in
xchg
clc
call
stos
xchg
mov
aam
addr16
push
mov
js
lahf
push
sub
pushf
clc
xchg
add
mov
mov
std
outsl
test
daa
mov
dec
or
and
in
jbe
into
in
call
xor
ja
push
dec
scas
mov
repnz
movsl
jl
xrelease
shlb
cltd
mov
inc
iret
test
jge
push
jle
or
cld
cmp
dec
pop
pop
call
loope
jb
fcoms
sbb
cltd
outsb
sbb
cmpsb
inc
lret
imul
inc
mov
xor
sub
jno
popf
pushf
push
add
sbb
vshufpd
mov
repnz
sub
out
mov
jno
or
icebp
lahf
push
push
mov
dec
jmp
inc
aaa
jge
xchg
mov
lods
fistps
fistps
adc
cld
fsubrl
aam
test
pop
or
dec
mov
jbe
lea
xor
add
add
outsl
lea
add
repz
gs
mov
imul
and
inc
adc
div
clc
inc
aas
aas
mov
js
out
dec
xor
pop
pop
lret
popf
sahf
pop
xlat
mov
mov
mov
sub
test
mov
das
mov
insb
jmp
push
stos
rcll
bound
pop
in
fs
inc
sub
orl
jnp
aaa
std
push
dec
addb
shlb
aam
call
iret
add
push
hlt
test
aad
negl
rclb
loope
adc
jg
in
in
aam
push
insl
pop
adc
bound
and
or
pop
mov
sbb
repz
xorl
sbb
mov
push
add
js
adc
mov
ja
ret
out
push
testl
xor
stos
fsubl
xlat
add
jne
inc
mov
pop
mov
pop
lock
mov
ljmp
and
xchg
jp
pop
xchg
adc
lds
out
fsubrp
dec
xchg
ja
jl
push
lods
push
push
leave
movsl
lods
inc
sub
inc
adcl
sbb
in
sbb
roll
aaa
adc
ret
andb
movb
add
push
and
mov
subb
mov
insl
std
lods
jnp
pop
int
add
xchg
popa
cmp
pushf
jns
inc
adc
mov
arpl
lret
push
test
mov
jl
pop
fstpt
xchg
ljmp
insb
cmc
xchg
cmp
pop
or
in
xchg
movsl
rcr
or
daa
imul
lcall
dec
pop
arpl
out
fstpl
or
cmpsb
shlb
xlat
cmpsl
ja
addr16
lret
testl
or
clc
xchg
mov
mov
stos
and
dec
dec
rcrl
dec
out
inc
fisubrs
test
and
adc
xlat
cmp
xor
sahf
push
push
adc
das
sti
and
mov
xor
fnstcw
push
cmpsl
dec
sub
clc
adc
sbb
mov
mov
mov
stos
push
out
jl
fwait
add
leave
int
mov
mov
test
pop
or
ret
loopne
sub
fisubl
jp
sub
loop
push
shrl
mov
dec
test
in
sbb
je
mov
sub
arpl
mov
roll
popa
jae
insb
push
test
outsl
mov
push
arpl
mov
inc
lcall
xor
insl
mov
cmp
daa
mov
pop
sbb
add
jp
lret
mov
cmp
dec
push
lods
adc
push
and
jmp
ret
nop
pop
pop
mov
mov
out
dec
outsl
push
xlat
xchg
xor
inc
inc
dec
clc
jmp
in
mov
enter
push
jge
ss
mov
rorb
les
mov
in
cltd
xchg
leave
lods
push
lahf
cli
dec
push
jle
sub
jae
js
push
push
les
mov
mov
adc
jle
mov
stos
xor
dec
pushf
lea
icebp
out
outsb
jbe
sub
iret
jbe
iret
sub
xor
in
test
ret
inc
xchg
stos
sbb
sub
xchg
add
ret
mov
pop
and
pop
lahf
ja
leave
cmp
jg
or
jae
push
jecxz
jns
inc
mov
es
lahf
loope
sbb
inc
jb
push
jo
jbe
mov
or
lret
in
and
adc
loope
mov
xchg
push
xor
sbb
aad
mov
aas
jecxz
fistps
aad
xchg
mov
xor
subb
mov
cltd
or
push
sarb
cmpsb
clc
pop
xchg
mov
inc
pminsw
cmc
jecxz
cmp
daa
sbbl
out
pop
sbb
push
repnz
sbb
dec
movsb
sbb
dec
xor
filds
in
imul
sub
sbb
js
loopne
pop
sbb
gs
dec
adc
ds
pop
xchg
fisttpll
sub
push
mov
sbb
mov
sub
jno
jbe
cmpl
dec
mov
jmp
mov
sbb
insb
mov
mov
repz
add
loop
jno
cmpsl
mov
loopne
fimull
movsl
fbld
in
ret
arpl
or
loop
xchg
jl
inc
jo
in
fiaddl
push
push
jae
xchg
pop
popa
sbb
xor
in
dec
adc
push
xor
ja
dec
xchg
cmpb
pop
int3
add
dec
add
stos
sub
or
xor
insb
mov
or
push
int
inc
aas
pop
neg
mov
repz
mov
jo
cmpsl
sbbb
repz
cmp
mov
cmp
xor
xor
ret
mov
jl
mov
divb
fs
mov
je
enter
push
push
inc
inc
mov
xchg
imul
outsb
jnp
insl
mov
jbe
dec
push
or
xor
mov
pop
pop
adc
push
jo
mov
aaa
loopne
insl
scas
dec
sbb
mov
popf
or
int3
lcall
shlb
dec
pop
mov
int
fimull
or
lret
mov
cmp
jl
dec
test
and
jl
out
loopne
and
add
push
xor
les
int3
or
call
test
and
movsl
add
pop
out
fwait
psrad
icebp
jecxz
rolb
pop
push
adc
pop
pop
cmp
inc
fnsave
repz
push
mov
push
jb
push
add
pusha
fisubl
dec
cli
xchg
jbe
insb
add
pusha
xchg
gs
adc
mov
and
arpl
mov
out
test
enter
fucomi
cmp
mov
in
aaa
test
mov
pop
xchg
jne
test
jge
xor
daa
push
imul
adc
or
ret
test
sbb
loope
into
add
test
loop
int3
lock
mov
fistl
rolb
adc
inc
or
mov
mov
call
aam
test
aam
dec
lcall
ficoml
fs
xchg
ljmp
xor
xchg
aad
outsb
adc
fisttps
movsl
push
push
mov
sbb
xor
sbb
dec
shll
lods
push
lods
mov
inc
and
push
and
mov
daa
cmp
cwtl
sub
sub
imul
pop
js
fwait
xchg
mov
inc
jge
popf
push
icebp
gs
xchg
in
nop
cld
sbb
lods
xor
mov
aas
aas
jge
mov
xor
aas
in
movsl
lret
cmp
jo
shlb
sub
repnz
jle
xchg
dec
push
movsb
loope,pn
sub
jae
pop
test
out
xchg
stos
and
jae
arpl
mov
ret
add
mov
push
mov
fs
jno
jnp
dec
jno
test
lahf
push
xchg
mov
add
loop
rclb
mov
jle
stos
mov
movsl
xor
sbb
arpl
sbb
divb
ljmp
mov
arpl
or
test
add
mov
jno
fcomi
push
out
inc
mov
pop
rcrl
shll
jl
dec
cmc
rolb
adc
inc
hlt
negl
mov
jle
and
and
jmp
bound
negl
dec
aas
pop
adc
out
mov
sbbb
dec
push
and
push
add
in
jmp
fidivrl
fidivrs
in
imul
pop
shl
repnz
jge
test
mov
push
adc
mov
into
jge
xchg
cmpsl
lahf
sub
repnz
cmp
test
movsb
mov
inc
test
aam
lahf
testl
fdiv
add
je
sti
mov
mov
sar
push
push
ret
fmuls
pop
popa
lret
mov
int
fidivrs
and
xor
or
dec
imul
cmpsl
fs
xchg
pop
jbe
mov
jbe
mov
fbld
or
sub
repnz
je
dec
js
imul
aam
lods
stos
mov
push
mov
aas
aaa
inc
jmp
pop
sbb
pop
cmc
xchg
xor
decl
xchg
or
mov
test
mov
in
mov
fisubl
xchg
xor
jnp
pop
dec
inc
push
enter
xor
sbb
dec
ret
inc
xchg
adcl
sbb
ret
pop
mov
lcall
mov
aaa
iret
scas
sub
fbstp
pop
sbb
and
mov
inc
ret
mov
sub
ja
mov
test
daa
or
jno
out
lods
mov
cwtl
push
dec
and
mov
sar
push
repnz
mov
sbb
mov
pop
sbb
fs
loope
and
or
repnz
std
xchg
jo
cmp
cltd
xor
or
int3
add
jp
or
shrl
xor
push
daa
jne
ret
jno
clc
or
inc
add
imul
mov
shrl
dec
push
test
pop
test
leave
add
roll
jb
nop/reserved
mov
stos
dec
out
push
push
bound
fnsave
scas
subb
mov
js
fcom
scas
adc
repz
arpl
mov
sbb
push
insb
cmc
and
and
adc
rorb
lds
inc
or
adc
enter
or
xchg
stos
imul
jnp
xchg
out
jb
xor
out
cmp
sbb
dec
dec
fdiv
into
loop
xor
aaa
or
lds
push
sbb
faddl
xchg
out
inc
pop
inc
push
les
or
iret
in
sub
negl
pop
or
pop
jmp
pusha
xchg
fs
fs
jo
or
shl
xchg
xchg
ret
jg
xlat
mov
js
pop
sub
inc
call
xor
cmp
sub
in
mov
push
call
add
push
loopne
lahf
sub
sub
stos
addb
in
out
ret
pop
les
imul
ret
shll
push
mov
jbe
fwait
aaa
xchg
cmp
je
pushf
lea
out
das
ja
push
cli
jp
enter
out
jmp
mov
xchg
sbb
jecxz
jns
jns
mov
daa
and
in
ds
shrb
mov
rcl
and
test
leave
xchg
pop
sbb
jo
test
jle
and
dec
cmpsl
lret
mov
les
sub
insl
popa
mov
data16
or
adc
cmp
adc
jg
pop
pop
push
sub
sbb
xor
jns
fcoml
pop
sub
mov
xor
or
pop
pop
add
pop
xchg
fldenv
outsb
scas
lods
call
aad
fnstsw
shll
dec
xchg
nop
popa
mov
gs
mov
enter
lds
je
mov
add
dec
lcall
push
out
jg
jae
jg
repnz
push
in
sub
push
fldt
pop
adc
mov
mov
dec
adc
dec
scas
jle
shll
lcall
in
push
fstpt
push
ret
dec
mov
adc
aas
repnz
loope
test
xchg
lods
bnd
scas
aaa
sbb
pop
sub
push
jbe
test
not
mov
adc
daa
jge
xchg
mov
push
jmp
subl
sbb
pop
mov
ds
ficompl
inc
repz
inc
sub
or
cwtl
cmp
jg
inc
xor
orl
xorb
adc
xchg
mov
inc
sub
mov
repnz
sbb
sbb
shl
mov
and
inc
jp
or
cwtl
popa
mov
andl
push
cmp
xchg
in
or
xchg
mov
icebp
int
mov
adc
pop
in
arpl
push
sub
sahf
push
or
ficomps
call
nop
jns
cmpsb
mov
je
movsb
test
adc
test
insb
dec
cmp
push
in
popf
repnz
cmpsb
mov
mov
pop
shlb
aas
push
jae
insl
outsb
xlat
popf
xor
inc
decb
out
sbb
out
cli
cmpsb
pop
dec
lret
xchg
cltd
mov
in
add
push
ficoml
ja
pusha
push
adc
cmp
and
jns
sub
test
xchg
jbe
loope
adc
pop
mov
push
dec
dec
and
or
inc
sub
jge
outsl
jns
sub
test
xchg
xor
mov
enter
iret
and
sbb
incb
out
aam
ret
fadds
dec
in
icebp
push
sub
and
pop
push
ret
mov
paddq
imul
insl
mov
xor
sub
loope
fildll
jmp
pusha
repnz
aam
pop
je
movb
xchg
ficomps
rcrl
andl
mov
inc
and
aam
dec
dec
mov
sub
xor
sbb
push
pop
roll
fsin
adc
mov
xor
xchg
fnstenv
leave
jns
xor
mov
jnp
mov
sahf
unpckhps
sub
sahf
rorb
lret
pop
out
fnstenv
dec
mov
xor
mov
in
mov
adc
je
sbb
das
sbb
pop
mov
pop
pop
sbb
mov
mov
loope
lods
test
adc
add
fdivr
outsl
and
mov
rorl
jp
ljmp
sahf
les
scas
loope
sub
and
orb
mov
push
jb
out
sahf
inc
jb
add
push
out
xchg
std
mov
add
sti
stc
add
cmpsl
jg
jno
sbb
mulb
pop
dec
jns
mov
cmpsb
xchg
pop
stc
xor
movsb
push
shll
push
dec
push
adc
mov
in
cmp
ja
sub
iret
shr
push
outsb
add
fsubr
or
data16
sub
nop
push
in
xchg
inc
sub
fcmovnbe
inc
mov
xchg
xchg
adc
stos
jb
pop
mov
inc
or
mov
lcall
jno
mov
mov
push
shrl
pusha
add
sub
xor
pop
clc
pop
sti
mov
jno
addr16
adcl
jae
ljmp
movsb
and
and
jp
das
jge
lods
aaa
or
fisubs
shlb
push
mov
cld
bound
clc
cwtl
jb
lea
xchg
jle
arpl
adc
xor
inc
sbb
inc
xor
data16
mov
insb
xor
rcll
adc
and
sti
cld
cmc
fstpt
rcr
mov
jp
cmp
lds
jo
repnz
add
mov
stos
inc
out
cs
inc
pushw
nop
int
outsb
hlt
push
pop
pop
mov
adc
notb
dec
lea
sbb
test
sbb
push
cmp
hlt
subl
enter
movsl
add
cmpsl
inc
xchg
dec
out
out
ds
mov
add
inc
add
enter
sbb
inc
lods
jae
sbb
fs
xor
call
icebp
mov
dec
sahf
cmp
scas
dec
movsl
xchg
sbb
out
fwait
adc
and
aas
jle
add
loop
jo
pop
imull
fs
xchg
bound
push
and
cmpsb
sbb
pop
clc
mov
sub
aam
sti
mov
bnd
mov
mov
out
fucom
fwait
jg
cmp
in
add
inc
pop
add
sub
mov
lock
push
lods
and
les
jmp
jle
sub
dec
insb
xchg
scas
aad
fwait
jmp
and
inc
xchg
outsb
sub
je
es
push
stos
or
mov
cmpsb
hlt
push
in
rol
insl
push
mov
xor
lock
out
or
pushf
lret
push
sbb
les
std
push
std
xchg
push
or
xchg
lcall
fistpl
xchg
xchg
sar
pop
jo
xchg
cmp
mov
pop
inc
inc
lods
pop
jge
cmp
fmulp
lds
push
mov
enter
add
popa
mov
add
adc
lds
push
mov
popa
inc
mov
fisubs
rcll
pusha
mov
jns
pop
pop
add
pushw
jae
imul
dec
fistpll
xor
or
pop
cmp
mov
test
mov
sub
stc
mov
sahf
lret
fdivl
lret
xchg
xchg
aaa
sub
aas
xchg
test
push
jmp
xchg
dec
je
and
dec
das
xor
or
loopne
xor
pop
mov
xchg
int
lods
fildl
dec
mov
stos
jb
sti
xchg
xchg
jb
lcall
aaa
movsl
mov
dec
mov
iret
jb
push
or
sahf
fistpll
mov
pushf
push
movsb
sub
inc
adc
sub
shrl
lcall
or
test
xor
arpl
imul
pushf
adc
xchg
or
fadds
in
inc
shr
push
lea
dec
inc
je
jmp
push
inc
cmp
sub
mov
loopne
fmul
xor
enter
push
fdiv
ret
leave
or
push
out
imul
js
test
inc
scas
xchg
lock
into
arpl
push
mov
xchg
ror
stos
sub
xor
in
pop
movsl
or
clc
xchg
mov
pop
pushf
int
ret
push
shll
adc
decl
aam
dec
lods
jno
repz
mov
rcr
mov
and
idivb
pop
cmp
in
pop
pop
cmc
sub
mov
sti
arpl
or
insl
dec
sbb
pusha
inc
lret
or
pop
sbb
add
dec
jns
mov
ficomps
xlat
mov
mov
or
rorl
imul
outsl
or
push
sbb
ljmp
jae
insl
jmp
das
into
push
sbb
dec
sub
leave
out
sbb
inc
cli
and
arpl
addl
pop
and
out
adc
sbb
shl
xchg
in
and
xor
aad
adc
out
sub
out
pop
fcomp
ret
test
mov
lods
push
add
xor
cld
sbb
es
inc
sbb
aas
mov
push
jle
pop
mov
repz
adc
loope
fisubs
jge
dec
pop
popf
mov
mov
int3
mov
cmc
test
sub
pop
mov
xchg
xchg
xor
push
jl
ljmp
lret
test
xor
xchg
lret
pop
add
inc
repnz
insl
fs
xchg
insb
inc
call
sub
mov
aas
adc
adc
add
add
pop
xor
fisubrl
sbb
and
repz
sahf
loop
ljmp
out
scas
fwait
push
out
call
xor
xor
in
outsl
cmp
pop
push
or
inc
loopne
push
sti
lods
adc
add
cmpb
xcrypt-cfb
cmpsl
daa
hlt
insl
into
mov
xor
jg
xor
inc
sub
cmp
aas
stos
es
jl
in
lcall
pop
stos
push
sbb
mov
js
pop
or
dec
imul
mov
incb
std
cwtl
sar
sub
sbb
xchg
pop
dec
xchg
fcomps
push
imul
jbe
out
dec
add
rcrl
les
dec
pop
sbb
icebp
pop
add
lea
test
rorb
adc
sbb
xchg
outsb
lret
test
xchg
mov
pop
jbe
pop
adc
enter
sbb
jl
pop
daa
dec
xchg
cwtl
mov
pop
out
xor
xor
inc
rcrb
xchg
add
inc
push
jmp
test
es
mov
sahf
fwait
sub
cmpsb
lea
mov
popa
add
sbb
stos
mov
icebp
or
ret
insb
hlt
fcmovne
imul
xor
push
sbb
test
jo
push
mov
mov
xchg
jae
sbb
lods
cmpsb
push
sbb
jge
push
add
or
or
jae
popf
inc
lods
xor
loopne
or
jl
mov
in
sbb
jmp
fmulp
sbb
jb
pop
fsts
xor
fs
loope
mov
xchg
xor
movsl
cmp
jbe
insl
icebp
imul
shrb
iret
cmp
leave
xchg
test
mov
cmpsl
jb
cmp
shll
push
addr16
jbe
inc
jbe
data16
xchg
cmc
mov
pop
lods
roll
ja
or
pop
lods
loope
sbb
add
cmp
xchg
sub
pop
pop
icebp
fwait
push
mov
gs
aas
mov
inc
insl
ret
jmp
out
inc
pop
ret
jo
lret
stos
adc
mov
xor
adc
adc
mov
inc
adcb
jae
mov
test
cmpsl
xchg
cmp
clc
xchg
add
or
jl
pop
xchg
mov
imul
daa
fidivrs
jo
nop
mov
sub
jae
jo
test
sbb
inc
ficoml
adc
add
mov
stos
adc
inc
aaa
jne
test
movhps
mov
iret
out
lcall
mov
inc
fisubl
dec
fisubrl
or
xor
push
notl
outsb
loope
jns
sbb
jae
push
subb
or
inc
pushf
cmp
cmp
int3
xchg
pop
mov
out
stc
mov
add
or
test
push
in
rcrb
pushf
mov
cwtl
out
mov
adc
jmp
hlt
push
jg
sbb
leave
inc
xchg
cmp
cwtl
xlat
outsl
out
lock
or
movsb
xchg
lock
cs
mov
ds
mov
std
ja
jns
paddusb
jl
cmp
push
test
push
loopne
lds
rclb
pop
jle
ret
lods
inc
push
mov
cli
sub
pop
cli
enter
outsl
xor
int3
adc
inc
ds
and
inc
test
mov
jge
cmp
xchg
adc
les
jns
test
jge
js
fisubl
fld
and
jbe
cs
std
aas
and
test
idivb
jae
mov
or
pop
imul
jno
cs
sbb
push
cmp
and
repnz
or
test
pop
or
into
xchg
adc
aaa
lods
jb
xchg
sbb
inc
push
shlb
jbe
pushf
arpl
add
pushf
loop
sub
and
adcb
aad
mov
dec
mov
cli
jb
pop
pushf
lods
and
aaa
and
adc
movsl
js
movsb
sub
data16
and
pop
jo
dec
pop
xor
ds
sub
xchg
mov
sub
out
xchg
mov
test
sbb
push
pop
sub
test
add
lcall
sub
fs
mov
movsb
inc
sub
push
mov
test
pop
sub
fsubrl
insl
int
les
stos
shll
dec
inc
insl
fwait
std
ja
es
ja
pushf
pop
and
arpl
notl
je
jno
pop
jmp
shrl
fs
mov
out
push
jb
das
aaa
xchg
pop
xchg
jb
int3
gs
xchg
insl
mov
xchg
dec
lret
repz
fs
sbb
imul
sbb
decl
bound
fs
dec
mov
mov
rolb
fnstcw
mov
stc
jmp
xor
mov
xchg
pop
adc
lock
add
or
mov
dec
rcrl
andl
test
repz
cmp
repz
sbb
xchg
add
loopne
test
push
ret
dec
mov
jne
out
xchg
aad
xchg
xorb
mov
hlt
and
std
cmp
in
insb
movsb
iret
in
jae
movsl
xchg
sub
pop
fstpt
fmull
sub
inc
jmp
test
push
pop
mov
into
mov
mov
inc
xor
cli
mov
mov
gs
inc
out
pop
pop
test
scas
sub
sub
fldl
mov
in
les
mov
shl
push
hlt
jl
ljmp
mov
mov
filds
pop
je
jmp
fstl
bound
cmp
pop
popf
push
negb
lea
and
cltd
xchg
imul
mov
out
xor
inc
push
negl
ljmp
sbb
movsl
cmp
in
hlt
imul
ret
in
insb
adc
xor
das
scas
mov
pushf
mov
je
push
ss
jg
jmp
loope
mov
out
add
stc
dec
lahf
jo
inc
or
loop
jnp
bound
fnsave
push
lock
jge
or
sbb
ficomps
sbb
push
or
popa
shrb
and
repnz
call
sbb
scas
push
rolb
and
arpl
fisubs
xchg
inc
cwtl
aam
adc
jb
xchg
fidivs
shlb
sub
add
and
shll
fisubrs
fstpt
mov
aad
fcoms
lret
jno
jae
push
fisubs
iret
xlat
popf
into
aas
bound
aaa
mov
pushf
fistps
ja
stc
sub
into
mov
jg
mov
lods
je
or
push
movsb
push
sbb
into
out
adc
lret
stos
inc
mov
out
and
adc
pop
cmp
push
inc
sarb
das
outsl
xchg
stos
push
inc
cmp
push
lock
dec
and
gs
ljmp
pop
adc
xor
pop
mov
push
sbb
xchg
js
punpckldq
ja
xchg
lret
cmpsl
dec
inc
add
mov
mov
mov
or
lret
pop
inc
imulb
aam
adc
xchg
js
xchg
jmp
call
cmp
push
cmp
mov
sub
int3
pop
xchg
shrb
dec
jnp
cmp
jb
mov
sub
xor
sti
dec
pop
or
sti
jg
xchg
subb
push
out
pop
bound
mov
cmp
sub
lods
mov
aad
adc
jno
pop
int
lods
js
pop
fists
insb
xor
inc
imul
and
popl
pop
fmull
jmp
lahf
push
xlat
iret
xchg
xchg
test
xchg
add
jb
ljmp
sbb
lds
adc
pop
std
inc
mov
outsl
mov
and
imul
fucom
pop
jmp
sbb
push
jg
cmp
ss
push
mov
xchg
pop
cmp
out
mov
popf
xor
pop
test
pusha
bound
outsb
mov
movsb
dec
fidivs
addl
sub
jle
icebp
movsb
push
xor
aam
or
or
mov
cmp
lods
mov
mov
jecxz
push
int
mov
in
test
mov
push
stos
jae
push
lods
adcb
mov
je
int
mov
mov
scas
jbe
cwtl
stc
out
aam
jecxz
push
das
mov
sub
lds
mov
or
push
jge
adc
dec
mov
or
add
aad
pop
fstpt
sarb
cld
cmp
jb
movsl
push
rcl
out
dec
dec
lods
fnstcw
ds
xor
cmp
iret
mov
xchg
mov
inc
inc
das
sahf
roll
and
enter
aas
imul
nop
and
pop
fistl
movsb
xorl
add
cmp
iret
fldenv
fdivrl
test
rorl
push
fsubrs
push
pop
fsts
enter
aam
push
xchg
mov
and
movsl
into
movsl
sbb
mov
xchg
pop
mov
cmp
jae
in
mov
sti
add
jb
stos
repz
lea
mov
lret
or
aam
in
sub
sbb
in
pop
aaa
out
mov
mov
mov
pop
sbb
push
pop
pop
fdivrs
fdivr
out
sbb
out
insb
xor
mov
mov
jb
push
mov
js
adc
frndint
ljmp
xor
xchg
and
push
add
cld
cmc
lock
push
mov
sarb
inc
mov
push
dec
xchg
add
js
ffree
xchg
ret
cltd
or
mov
sub
inc
and
cmpsb
lcall
into
sbb
dec
mov
xor
push
lds
push
sub
jae
adc
mov
bound
or
cmp
lds
mov
roll
loop
ljmp
fidivrl
testb
or
ret
add
into
cltd
cs
popa
movsl
bswap
and
mov
cmp
fsts
rol
inc
ficoms
clc
xor
lea
mov
or
mov
movsb
or
mov
add
iret
fadds
cltd
nop
test
cmpsw
sbb
push
fdivrl
or
aam
cli
ss
pop
adc
sbb
lcall
lcall
xchg
dec
mov
hlt
and
test
sbbl
stc
stos
mov
push
sub
push
dec
xchg
lock
or
inc
fdivs
cli
movsl
outsl
mov
jnp
lret
call
daa
in
jmp
andw
xchg
mov
and
scas
arpl
call
ds
jne
hlt
xor
lret
aam
pop
adc
jns
mov
mov
cmp
fidivs
je
shl
jne
lods
std
dec
pop
lahf
and
arpl
mov
xlat
xor
and
jecxz
dec
aaa
xor
cmp
mov
aas
mov
std
dec
jns
push
push
stos
push
rcrl
and
sub
cwtl
xor
outsb
lea
jo
mov
dec
xor
and
jle
mov
mov
sbb
cmp
stc
out
push
inc
test
dec
les
hlt
inc
cmp
sub
clc
jnp
lret
rorl
out
fildll
lods
sbb
mov
inc
mov
loope
lret
loop
xor
add
adc
cld
mov
push
dec
test
inc
or
repnz
cmpsl
std
push
aaa
push
sbb
push
cmp
pop
ljmp
jge
and
aas
inc
adc
jmp
imul
inc
incl
idiv
pop
xchg
or
ds
xchg
insb
incl
cmpsb
push
repnz
subl
xchg
out
mov
incl
lahf
mov
sbb
xchg
pop
add
clc
adc
stc
lea
dec
or
cmp
sbb
sub
leave
inc
push
mov
or
cltd
mov
xlat
pusha
dec
rol
call
xchg
xor
and
jge
cmp
pop
je
jmp
fimuls
sbb
pushf
xor
test
stos
sti
sub
popa
outsb
fwait
shlb
xchg
out
cltd
lods
dec
jge
adcb
adc
inc
das
ret
dec
vxorps
sub
movsl
xchg
clc
clc
mov
xchg
sub
or
lret
mov
popf
fnstcw
mov
and
mov
jne
pop
ficoms
pop
movsb
cld
fcompl
inc
shll
add
jge
jge
dec
addl
fs
lahf
pop
adcl
data16
out
and
cmp
sbb
icebp
xchg
adc
mov
fucom
nop
lret
and
cli
test
daa
dec
sub
sbb
es
outsl
push
aam
nop
add
mov
sub
dec
lcall
mov
imul
xchg
into
mov
inc
rclb
fsubl
xor
mov
pop
bound
mov
nop
and
cmpsb
pop
loop
test
pop
and
push
ja
pop
into
mov
mov
push
movsl
xchg
movb
iret
mov
add
scas
push
cmc
dec
aaa
jae
sbb
lea
mov
nop
cmp
or
push
pop
scas
inc
rclb
inc
jae
in
sbb
inc
jae
mov
sbb
mov
rcr
stos
fists
shlb
pop
daa
cmp
push
add
fs
dec
in
rcll
cmp
lcall
rol
daa
fstps
nop
mov
xchg
loop
leave
cli
cmpsl
into
mov
sbb
inc
xchg
into
xor
out
mov
mov
add
rcrb
imul
xor
iret
jne
dec
movsb
and
cmpsl
ficomps
aam
es
jge
adcb
dec
cltd
cmp
cmp
std
fcompl
aad
push
scas
xor
adc
aas
sbb
popl
sbb
jbe
mov
adc
fs
and
jbe
push
and
rorl
adc
push
add
in
mov
enter
inc
jo
aaa
push
rcl
and
dec
fcmovnb
push
and
lds
mov
repz
xchg
and
fcmovnu
mov
mov
mov
sub
mov
bound
adc
aam
mov
pusha
imul
inc
jecxz
or
xchg
pand
dec
cld
push
in
outsb
sahf
mov
stos
mov
xchg
mov
lds
push
leave
daa
or
jg
xchg
sub
movsb
inc
push
cmp
testl
jo
adc
inc
fidivrl
rorb
je
lret
inc
loopne
icebp
cmp
in
mov
pop
fistpll
cs
popa
iret
push
orl
add
xor
pop
xor
fsubs
aaa
test
in
pusha
insl
divl
mov
pop
mov
stos
insb
jnp
test
ret
jle
mov
cmp
xchg
jnp
std
gs
push
push
mov
adc
jns
movaps
sti
out
jmp
mov
repnz
cmp
jbe
sbb
jl
fisubrl
outsl
inc
outsb
test
xchg
mov
pop
stos
ja
insb
aad
mov
jne
mov
icebp
inc
mov
mov
addr16
push
fs
xor
cmp
js
fmulp
pop
scas
xchg
adc
ss
mov
or
cld
inc
shlb
inc
pop
mov
sti
in
xchg
cmp
neg
outsl
pop
push
call
and
test
inc
mov
mov
in
mov
fsts
int
dec
add
fstl
mov
into
sbb
push
mov
push
lock
shll
add
std
dec
mov
ffreep
ss
stos
aad
lahf
in
popa
mov
lahf
xchg
out
loope
es
adc
icebp
pop
stc
jbe
insb
pop
test
lods
mov
aas
ja
adc
out
and
cli
sbb
sbb
cmp
cld
sub
out
inc
test
fdivr
or
add
ja
mov
aad
mov
out
mov
jo
mov
std
incb
sub
sbb
inc
sbb
rcrl
fmull
lret
cld
mov
fs
xchg
ficompl
call
imul
xchg
not
push
push
cmp
mov
lea
push
xchg
insl
pop
pop
adc
nop
aad
push
lods
or
cmc
imul
xchg
adc
push
jl
movsl
into
cltd
add
pop
mov
cmc
sbb
int3
pusha
jecxz
and
inc
push
inc
mov
dec
cmpsl
cmpsl
add
roll
cld
inc
rcrl
clc
pusha
inc
mov
in
push
rclb
mov
adc
test
mov
enter
icebp
popa
push
jae
push
addl
ljmp
mov
and
js
iret
inc
inc
xchg
mov
mov
sub
add
push
in
adc
jb
push
jns
sbb
daa
xchg
negl
loope
ljmp
incb
popf
inc
jo
dec
pslld
mov
pop
pushf
mov
pop
test
cmp
mov
sub
das
xor
inc
push
pop
insl
shlb
mov
sub
fidivl
int
xchg
and
and
fidivrs
pop
add
and
lahf
icebp
mov
nop
xchg
fcomi
cmpsb
pop
lcall
mov
pop
sub
mov
out
push
fs
mov
inc
enter
mov
and
dec
jl
jg
nop
xchg
sti
lcall
das
lock
dec
cmp
adc
push
mov
add
jmp
xchg
int3
and
fnsave
add
jmp
sahf
or
fbstp
xorl
ss
jne
or
lea
mov
daa
movsb
mov
mov
dec
out
cld
shl
inc
fwait
scas
pop
imul
shlb
out
sbb
insb
push
push
aam
dec
add
adc
cmpsb
mov
push
ret
inc
or
rcrb
ss
ret
sub
mov
insl
add
test
cmp
lods
and
jo
outsl
xor
out
ret
iret
lret
clc
add
testl
pop
pusha
iret
test
add
jmp
mov
and
mov
loopne
add
mov
mov
rcrl
and
mov
in
jle
popa
sahf
divl
nop
mov
sub
pop
sub
adc
in
mov
mov
xor
mov
lahf
std
pop
push
sets
lcall
pusha
rorl
ja
das
sub
sub
inc
movb
add
add
ljmp
jnp
push
push
mov
pop
je
inc
push
ja
mov
mov
cs
pop
fmuls
and
enter
xchg
loop
outsl
pop
mov
add
adc
rcrl
cli
es
clc
mov
shll
sbb
fidivl
pop
sub
lret
sahf
clc
mov
xchg
sbb
inc
xchg
add
out
sbb
cs
pop
lods
sub
dec
jge
pop
out
mov
sarb
xlat
insb
notl
fidivrl
xchg
or
sarl
jp
sub
stc
out
sub
mov
sti
xchg
fwait
insl
sbbb
stc
push
cmpl
xor
fcoml
sarl
subb
std
pop
add
rclb
jbe
xchg
dec
adc
loop
pop
xchg
push
pop
loope
hlt
notl
jle
int3
fisubl
push
cmp
jge
mov
lods
push
dec
rolb
out
sbb
push
adc
cs
or
cmp
sbb
sbb
mov
mov
mov
std
push
mov
scas
lods
xchg
xchg
xor
cmp
pop
aas
loopne
outsl
dec
dec
or
adc
rclb
repz
dec
mov
ss
out
and
repnz
add
subl
je
lods
push
sub
sub
cld
ret
cmp
jb
mov
adc
sbb
rcl
push
pop
fisttps
rolb
push
pop
jge
sbb
ljmp
jae
xor
sub
movsl
xchg
xlat
jp
sahf
push
insl
jge
test
or
fidivs
adc
mov
jl
adc
xchg
fdivs
push
inc
dec
js
rcrl
sarl
lock
and
cs
or
data16
cmc
mov
lahf
out
sarb
mov
clc
push
adc
adc
cmpsb
dec
scas
inc
mov
inc
xchg
inc
jb
call
xor
ljmp
or
outsb
push
xchg
push
imul
inc
cmp
dec
in
mov
mov
cmp
xor
aas
mov
jge
loopne
push
repz
or
jmp
dec
dec
call
adc
lods
sub
sbb
xor
pop
sub
add
jl
sbb
sub
and
xor
mov
adc
call
aam
push
jecxz
int
lods
xlat
out
dec
popf
mov
pcmpgtw
negl
ss
xor
push
inc
sub
dec
lds
push
add
push
add
ficoml
std
test
fnstenv
test
call
add
stos
adc
pop
sbb
dec
jecxz
loopne
in
adc
dec
xchg
xchg
inc
insl
dec
mov
sub
and
or
mov
adc
lret
call
sbb
jbe
in
mov
mov
and
add
inc
daa
hlt
leave
xchg
cmpsb
outsl
jmp
sbb
mov
fisubs
push
mov
pop
sbb
cmp
loope
repz
lret
and
ror
mov
enter
repz
sti
out
fdivrs
add
jle
mov
adc
pop
addr16
test
add
cli
imul
in
pop
add
std
imul
inc
adc
inc
mov
lahf
mov
lods
stos
push
and
sar
out
lea
popf
adc
push
xchg
and
mov
ja
fstps
bound
notl
or
cmp
movb
or
xchg
loop
dec
imul
pushf
or
sar
cwtl
push
jo
out
shr
jo
and
xchg
insb
push
out
lock
pop
inc
dec
jae
mov
push
sarl
scas
inc
jbe
daa
shr
mov
mov
fisubrl
mov
cmp
out
add
insw
sbb
fwait
push
adc
mov
mov
stc
cs
leave
std
and
xor
rorl
data16
mov
and
int
inc
dec
dec
add
push
pop
mov
or
pusha
lods
into
jnp
xlat
cmp
ss
xchg
adc
lea
mov
xor
and
and
push
xchg
andl
outsl
sub
push
and
push
or
flds
push
cwtl
pop
jmp
jbe
cmp
out
cltd
popa
cld
jbe
cltd
daa
sti
jecxz
fdivr
adc
iret
mov
or
in
test
or
cmp
inc
and
and
insl
adc
shl
add
push
mov
lock
xchg
rorl
adc
ja
push
lds
lock
out
cmp
and
adc
push
and
dec
int
in
inc
jnp
or
pop
add
int3
les
cmc
add
sbb
add
cmpsb
fs
repnz
test
std
adc
mov
popa
fcmove
out
stos
gs
adc
xchg
and
push
shlb
sub
and
pop
push
or
jbe
push
pop
fisttpll
iret
aad
push
pusha
sbb
and
mov
and
dec
ret
lods
rorl
cmpsb
outsb
enter
add
or
adc
and
or
sbb
jecxz
xchg
and
sbb
cmc
loopne
sbb
imul
pop
data16
dec
cmp
pop
push
ljmp
push
add
popl
in
xchg
int
shr
aas
cwtl
cmp
cmp
ret
push
add
rcl
lods
add
jmp
and
dec
push
cmp
push
clc
mov
gs
test
cld
js
jecxz
jp
mov
insb
mov
in
mov
mov
inc
inc
pop
xchg
sahf
popa
out
sbb
daa
in
sbb
adc
sti
std
mov
or
xchg
ds
mov
bound
sub
sbb
mov
aas
lods
movb
leave
in
test
frstors
lds
adc
in
pop
and
add
mov
movsb
jns
ss
push
adc
xchg
std
movsb
xchg
add
outsb
xchg
ljmp
jae
orb
xchg
and
push
dec
push
add
sub
and
dec
push
inc
fdivl
cmpb
push
ja
and
movsl
mov
jns
push
xchg
adc
mov
aaa
and
add
sarb
out
imul
movsl
lcall
dec
sbb
cmp
sbb
sbb
aad
jne
ret
pushf
shrb
adc
mov
addr16
hlt
lret
inc
mov
mov
ss
jmp
test
cli
lahf
dec
xchg
cmpsb
jnp
sbb
and
sbbl
shlb
je
lahf
push
jnp
pmaddwd
jae
out
pop
stos
or
xchg
add
xchg
ss
or
aas
pushf
lret
data16
push
mov
dec
jns
dec
dec
adc
add
pop
push
enter
rcrl
mov
shl
imul
and
mov
mov
std
xchg
dec
out
int
and
mov
loope
jne
inc
dec
loopne
fsubl
push
xchg
and
or
pcmpgtw
lcall
out
pusha
mov
addb
lret
rol
scas
adc
push
dec
dec
std
shll
fstpt
cmp
frstor
mov
add
lahf
mov
jno
jecxz
call
mov
in
pusha
addb
cs
jmp
movsl
mov
cmc
cwtl
inc
lahf
mov
rorb
jne
push
mov
popa
iret
in
sbb
add
scas
xlat
les
and
lret
loop
push
adc
mov
test
sbb
push
push
xchg
jno
mov
insb
sub
cmp
and
loopne
fisubl
add
mov
jge
stos
pop
aad
insb
ficomps
clc
fs
icebp
int
sbb
ret
adc
test
xchg
lret
push
cli
mov
paddusw
sbb
mov
pop
dec
addl
scas
imul
out
aam
xlat
push
push
out
xchg
insl
mov
fwait
or
cld
inc
ds
mov
cs
popf
or
xchg
sbb
xchg
test
js
outsb
inc
adc
ja
jmp
addr16
dec
test
ja
dec
xchg
jns
rcrb
cmp
orb
mov
ja
stos
sbb
fsubrs
mov
call
sub
mov
sbb
adc
adc
xchg
xchg
pop
outsl
cs
mov
fstp
cmp
push
pop
and
iret
mov
xorb
sub
push
lds
mov
lods
lahf
rcll
xchg
jecxz
mov
jmp
in
and
insb
mov
dec
xchg
lret
push
data16
push
xlat
ret
jg
mov
out
mov
mov
cmp
enter
mov
stos
lcall
jmp
adc
mov
xchg
movsb
cmp
out
lret
aad
sub
jg
cmp
mov
stos
dec
mov
lcall
out
inc
repz
push
mov
dec
inc
and
lret
or
adc
push
pop
inc
jecxz
adc
sub
ja
xchg
or
stos
xor
xor
mov
push
jge
outsb
iret
decl
add
sbbb
lock
fst
test
inc
lock
push
test
fucomi
sar
testb
and
ret
jle
prefetch
add
jno
into
xchg
jmp
daa
andl
jo
xor
repnz
lcall
push
add
jl
xor
aaa
es
imul
sub
mov
add
repnz
int3
movsb
aad
xchg
notb
flds
dec
jecxz
push
xor
arpl
xor
mov
in
xlat
aad
xchg
sti
outsb
fldln2
sub
lds
sub
adc
mov
cmp
iret
out
and
push
outsb
stos
arpl
mov
mov
inc
loopne
les
xchg
dec
cs
xor
inc
pop
js
jg
add
sbb
xchg
test
push
roll
ljmp
mov
nop
pop
cmp
inc
sub
pushf
repz
pop
cmc
xor
pop
sub
jo
jecxz
icebp
lock
into
insl
jo
and
add
loop
mov
jno
jg
incl
mov
jg
pop
ss
inc
pushf
cmp
sahf
into
or
jle
inc
pop
cli
sub
std
mov
adc
js
inc
mov
cmpsb
xchg
leave
lea
fnstenv
pop
mov
ds
std
nop
aaa
fldl
sbb
xchg
aaa
loope
cmp
fstpl
adc
inc
mov
mov
push
pop
mov
xor
mov
ret
int
jo
out
out
rcll
insl
insb
push
fisttpll
rcrw
sub
jp
add
call
stos
mov
lcall
clc
adc
fisubl
add
jno
jb
ss
pusha
xchg
ja
fxtract
sub
push
xchg
insb
rorb
pusha
push
popa
int3
xor
aam
jbe
lods
push
stos
or
pop
ret
bound
les
add
xchg
jle
cli
pop
mov
lret
cmp
cltd
aad
rcrb
stos
or
push
inc
cmp
and
clc
mov
cs
pop
mov
mov
stc
sbb
divl
int
inc
arpl
orl
adc
pop
sahf
fnsave
inc
insb
pusha
pop
std
adc
cmpsl
xchg
dec
xchg
lcall
inc
sbb
sti
lret
je
clc
cmp
or
out
movsb
jno
and
mov
popa
sbb
push
jo
xchg
inc
dec
mov
jp
xchg
mov
loop
gs
mov
cmp
imul
xor
andb
out
dec
filds
repnz
sub
mov
lcall
in
es
xchg
cmp
mov
push
lds
mov
into
rolb
aam
push
repnz
or
adc
repnz
out
in
jne
or
cs
jnp
stc
out
rcr
and
pop
pusha
test
mov
aam
and
push
sarb
dec
imull
iret
add
jno
mov
pushf
cmp
aaa
xor
mov
cld
and
lods
ret
dec
vaddps
mov
cmp
cmpsb
cmp
ds
addl
test
mov
test
loope
into
fdivl
mov
les
negb
pop
mov
hlt
lock
std
mov
mov
adc
cmp
push
xchg
pop
xlat
pop
xor
mov
adc
aaa
and
cli
lods
pop
xlat
adc
test
das
pop
movsl
nop
js
adc
mov
in
inc
jmp
mov
inc
stos
cmc
sbb
push
inc
imul
push
push
pop
xor
mov
adc
pop
jae
fisttpll
mov
test
pop
jmp
sahf
int
mov
and
test
sti
or
fistpll
scas
ss
pop
mov
pop
mov
mov
push
mov
out
bound
out
push
shll
cs
dec
cltd
push
pop
fstps
imul
mov
xor
hlt
jnp
in
test
sbb
popa
mov
enter
push
les
cmc
pop
xor
mov
mov
es
loopne
sahf
mov
mov
dec
into
push
adc
mov
or
xor
fsubs
push
mov
leave
les
mov
iret
adc
iret
sarb
sub
xchg
inc
fstl
shrb
or
or
test
sbb
dec
loope
lods
dec
clc
adc
mov
iret
lock
hlt
sbb
mov
sbb
jecxz
rcrl
ljmp
adc
lret
jmp
push
scas
or
sub
push
add
and
mov
cmp
movsl
mov
lret
aaa
insl
inc
push
xchg
iret
ds
cmpsl
leave
pushf
mov
pop
cli
xchg
gs
and
mov
xchg
int3
pop
xchg
xchg
inc
decl
notb
mov
add
dec
stos
outsb
push
sbbb
pop
jb
pop
and
fisubrl
dec
repz
push
test
push
push
push
dec
sub
rcrb
or
cltd
dec
ljmp
loopne
in
lock
push
mov
scas
inc
xchg
inc
xchg
pop
push
and
shll
mov
stos
sub
out
mov
lock
sub
lock
leave
add
insb
mov
fs
xor
aas
addl
mov
lret
orb
mov
xchg
mov
adc
stos
call
mov
mov
jne
mulb
out
push
sub
and
push
cld
leave
add
sub
pop
jae
test
push
mov
cld
or
loop
mov
jg
and
xor
nop
aas
out
mov
adc
adc
hlt
xor
push
imulb
sbb
jb
ret
pushf
adc
jmp
mov
xor
inc
or
sarl
aam
mov
test
cs
std
xchg
cmp
and
sarl
test
fistl
inc
shlb
out
mov
out
push
loope
push
loope
or
nop
add
mov
arpl
pop
lret
jge
addr16
gs
cli
rorl
in
xor
dec
imul
mov
shlb
stos
sub
fldcw
rorl
adc
pop
jae
das
fisubs
mov
fistpl
insl
sbb
out
into
scas
xor
lds
inc
mov
adc
leave
dec
sub
std
das
cli
add
pop
lds
gs
aam
and
std
dec
cli
addr16
xchg
sti
clc
fsubs
lea
adc
mov
mov
xor
adc
xor
outsb
inc
fisubs
mov
jecxz
test
xchg
mov
mov
sbb
inc
jo
sbb
or
imul
mov
shlb
punpcklbw
push
rorb
sub
mov
pop
push
test
out
xchg
mov
jp
orl
mov
loop
push
inc
aad
mov
dec
or
leave
jns
jle
push
or
dec
xchg
sbb
clc
sub
jecxz
mov
lods
addr16
stc
push
and
sub
push
cmpb
mov
dec
in
mov
test
pop
ret
scas
pop
pushf
mov
push
mov
mov
fildll
adc
les
pop
test
xlat
push
rcrl
call
adc
int3
loope
add
leave
mov
mov
sub
imul
test
xor
mov
fstl
or
nop
test
xchg
pop
test
std
jge
aam
adc
nop
and
xor
scas
xchg
xor
mov
sub
imul
sbb
lret
subb
fistpll
insb
mov
arpl
call
es
xchg
ja
push
fwait
jl
jmp
push
mov
push
into
and
cli
scas
jno
cmc
not
mov
loop
xchg
shrl
out
nop
inc
insb
mov
sub
inc
cmp
pop
cmc
loopne
xchg
push
fimull
sbb
xchg
mov
mov
inc
mov
pop
lea
or
lea
add
and
mov
lock
pop
mov
sub
xchg
movsl
arpl
adc
outsl
dec
push
aaa
cmp
adc
and
loopne
add
add
popa
jo
mov
add
cld
xor
ja
adc
cmp
sahf
mov
and
push
lock
loopne
repz
lcall
push
jnp
stos
hlt
and
add
stos
mov
popa
bound
fcmove
pop
add
fstl
pop
cmp
addl
pop
jge
sub
call
mov
xchg
sub
out
in
je
out
cwtl
pusha
sub
mov
push
inc
push
test
push
mov
mov
add
lcall
testb
ss
sub
repz
add
stc
hlt
test
sti
lea
daa
sub
loopne
test
mov
adc
insb
pop
je
insl
xchg
hlt
popf
push
add
movl
sub
int3
cli
mov
jg
push
ret
idivl
or
sbb
mov
repz
mov
dec
ja
je
es
sbb
jb
push
jno
xor
outsb
sbb
sti
adc
orl
pushf
mov
adc
or
inc
adc
push
popa
xchg
rclb
add
mov
jecxz
and
pop
mov
mov
jo
add
pop
xchg
push
and
into
mov
iret
push
add
and
mov
pop
cld
jbe
loop
mov
lods
dec
test
fs
inc
dec
push
inc
in
cmc
retw
push
outsb
ret
fsubs
mov
arpl
adc
jne
sub
lret
int3
mov
and
dec
jp
add
ret
dec
mov
test
dec
cwtl
cmp
loope
jl
jno
rcrb
adc
loop
out
arpl
mov
cmp
lea
fisubrl
dec
inc
jae
test
jl
sbb
popa
lcall
iret
adc
jne
dec
out
or
jmp
cmp
jle
popa
inc
cld
call
push
and
loopne
sub
fst
les
ret
repnz
jno
xorl
mov
int
test
enter
loop
sbb
mov
sbbb
pushf
rclb
and
push
mov
mov
pop
lahf
sbb
test
lcall
mov
dec
loopne
mov
or
daa
jae
dec
outsb
das
fidivrs
pop
xchg
inc
xor
adc
and
scas
loope
dec
lcall
cli
scas
andl
push
cmp
pop
xchg
sub
or
call
push
test
dec
lods
scas
push
cmpsl
xchg
rcrl
or
data16
lock
cli
push
imul
lock
loope
inc
xor
stc
notb
les
lahf
push
cmp
jae
mov
mov
into
std
je
sti
inc
xor
sbb
cmp
adc
loope
cmpl
cmp
jns
leave
mov
addr16
ss
push
mov
sbb
js
hlt
into
incb
movsl
cmp
jne
adc
call
sbb
inc
push
dec
sbb
sub
dec
sub
movsb
push
add
es
test
hlt
push
pop
shlb
inc
sahf
sahf
jmp
adc
lret
aaa
mov
dec
cmp
and
fcmovnbe
cmpsb
sbb
dec
out
arpl
mov
pop
scas
loope
dec
adc
das
outsl
aaa
jecxz
add
jae
ret
cs
paddsb
test
imul
ds
sbb
inc
popa
cwtl
fcoms
in
stos
xchg
aad
mov
mov
stos
add
mov
jmp
lock
or
loop
ret
fadds
mov
inc
ret
add
callw
cwtl
and
dec
aaa
cmp
aas
into
enter
std
pop
ss
xor
fxam
or
mov
push
cwtl
pop
inc
sub
test
cmp
outsb
mov
jl
inc
mov
push
xor
sbb
lods
insl
out
xlat
test
in
add
or
pusha
popf
daa
test
or
mov
lcall
mov
dec
xchg
or
call
mov
into
inc
out
push
movsl
push
outsb
push
test
sbb
daa
add
in
sbbl
pop
xchg
and
jle
jno
es
xchg
loope
push
icebp
mov
cmpsl
jmp
aad
in
mov
add
adc
xchg
mov
push
test
jge
or
cmpsl
dec
insb
lcall
pop
jb
daa
pop
scas
out
leave
sarb
push
imul
sbb
jmp
xchg
popf
dec
jo
jbe
fwait
in
ficompl
fcmovnbe
ret
pop
push
mov
pop
stc
icebp
fidivl
xchg
pop
sbb
sbb
xor
out
cwtl
jnp
xchg
es
sbb
or
mov
or
out
mov
pop
das
cmpsl
mov
sahf
jp
mov
or
mov
js
add
lcall
mov
arpl
cmpsb
or
lcall
and
incl
sbb
cmp
out
and
xchg
xchg
sbb
sti
adc
mov
imul
repz
jle
out
ds
cmp
mov
dec
jno
pop
cmp
jge
push
or
nop
cmp
pop
dec
mov
mov
pushf
insl
jge
clc
rolb
int3
test
outsb
push
cmp
mov
adc
call
test
mov
lret
scas
push
sarl
in
into
mov
sub
cvtps2pi
or
arpl
ja
in
iret
and
sbbb
sub
jnp
xor
daa
in
inc
inc
and
mov
addr16
mov
int3
fmull
das
sub
in
xchg
cmp
inc
or
inc
sub
inc
flds
jecxz
jmp
push
in
sti
in
jg
es
nop
sbb
ja
cmc
ja
push
xor
int
jb
nop
orb
or
xor
rcrb
mov
cs
xlat
sbb
gs
in
xor
sti
add
into
push
sub
mov
inc
ret
ret
ljmp
push
push
jle
jno
sbb
imull
dec
ret
out
testb
icebp
cltd
int
mov
mull
sub
cmc
test
mov
negb
xchg
insb
and
roll
or
mov
bound
push
test
xchg
filds
jnp
mov
pusha
scas
mov
out
popf
mov
mov
sbb
daa
xchg
xor
inc
sbb
icebp
adc
sbb
iret
dec
nop
lcall
sbb
imul
mov
in
adc
in
enter
sub
mov
dec
pusha
adc
mov
insb
and
out
mov
pop
cmpsl
and
rclb
aas
mov
imul
cs
mov
ja
adc
xchg
sub
lcall
push
add
jnp
lods
les
aam
outsb
sbb
push
insl
pop
add
je
mov
bound
lods
inc
xor
xchg
fwait
lret
mov
jge
popa
cwtl
jg
or
and
lock
jae
imul
sbb
mov
mov
dec
xchg
lret
push
insl
pop
xchg
mov
lret
cmp
or
test
fidivrs
leave
repz
fwait
emms
jp
jg
addb
sqrtps
lcall
cli
jb
ffreep
dec
jl
mov
icebp
addl
repz
les
daa
pop
add
cmp
icebp
popf
fcomps
xchg
xchg
sar
pop
scas
add
xchg
call
adc
pop
sub
mov
into
inc
lock
or
mov
aas
cltd
fstl
pop
push
test
jae
lahf
jns
inc
into
nop
jb
adc
imul
sbb
xchg
pop
std
push
hlt
mov
scas
push
cmp
pop
jae
insl
mov
push
push
fbld
pop
or
repnz
fwait
popf
test
jne
mov
fmul
out
or
repnz
ljmp
mov
lret
incl
nop
lret
adc
or
pop
and
nop
pusha
stos
bnd
cld
sub
call
mov
test
mov
outsb
ja
jo
pusha
add
fsubs
fwait
dec
mov
ljmp
sbbl
add
popa
insb
into
subl
into
inc
movsb
rcl
in
addr16
jp
rcll
inc
dec
cmpsb
lods
pop
dec
xor
mov
dec
push
pop
pusha
inc
nop
adc
push
nop
lds
imulb
rolb
xorl
or
scas
pop
sub
push
mov
adc
gs
mov
push
mov
bound
out
loop
aam
fdivr
or
mov
jg
repnz
xor
mov
lcall
cmp
out
cmp
sbb
fists
std
push
xlat
adc
inc
ret
mov
xor
adc
daa
mov
jno
insl
add
pop
out
movsl
test
pusha
pop
data16
add
pop
jmp
insl
push
repnz
out
in
clc
sub
cwtl
and
addr16
fnsave
jo
filds
into
sahf
in
mov
testl
add
jl
jbe
popa
clc
int3
es
add
pop
in
ljmp
inc
lods
into
popa
xchg
pusha
sahf
popf
fisubrl
outsb
mov
fcoml
mov
repz
xchg
add
pop
mov
jmp
mov
addr16
imul
mov
pop
cs
jecxz
add
push
movsl
pusha
jecxz
scas
sbb
dec
dec
sub
push
jne
ret
loopne
push
xlat
sbb
int
sub
add
test
cmp
adc
daa
jg
or
xchg
movsb
lods
mov
and
sahf
jo
js
test
add
into
inc
push
inc
inc
mov
enter
int3
xlat
push
test
gs
bswap
or
cmp
dec
cmpsl
sub
test
mov
pushf
popf
gs
sbb
adc
pop
lea
cli
pop
cmc
jns
pop
js
xor
jle
sbb
mov
pop
hlt
jae
sub
jmp
movsl
and
test
push
fisttps
enter
in
or
add
push
aas
or
rcl
mov
push
and
sub
mov
push
push
pop
jbe
arpl
and
rorb
mov
mov
hlt
iret
cmp
aad
mov
sbb
push
pop
jae
cs
movsb
jno
stos
push
daa
xor
adc
xchg
movsb
add
add
pop
dec
mov
jl
adc
daa
ffree
and
mov
iret
inc
sbb
xchg
fwait
dec
mov
mov
mov
or
iret
mov
mov
es
jno
addr16
add
lods
les
ficompl
add
cmpsb
lcall
mov
xor
jge
sub
push
push
insb
push
jl
add
and
xchg
mov
push
sub
jno
mov
mov
in
cmpb
std
lahf
repz
loope
push
leave
adc
les
dec
sti
mov
or
sbb
aas
pop
into
mov
sti
and
insl
div
je
dec
jmp
xor
in
dec
jno
fimuls
push
or
mov
push
in
pop
pop
push
xorl
lahf
and
adc
int
sbb
push
jle
mov
clc
pop
popa
pop
jg
mov
push
popf
mov
and
repnz
inc
push
iret
sbb
enter
dec
cmc
sub
andl
ret
adc
das
bound
push
jecxz
mov
xchg
es
fstps
dec
decl
iret
mov
idivl
dec
rcrb
inc
cmp
daa
push
scas
scas
js
push
lods
fidivl
in
int
or
mov
push
je
mov
clc
xor
daa
addr16
rorl
scas
jp
aam
push
lds
push
fldl
mov
clc
sub
loop
sti
sub
xor
loop
dec
and
sbb
hlt
test
mov
icebp
inc
fsubs
jns
incl
lahf
popa
push
mov
push
xchg
aas
adc
scas
jno
rolb
pop
sub
mov
cmp
insb
add
jg
cmp
cmp
push
pop
aam
pop
push
mov
hlt
mov
pop
lock
orl
cmpsl
lds
lahf
stos
pop
rclb
stos
scas
movsb
std
out
add
dec
or
pop
and
stc
pop
aas
jl
add
push
fcoml
push
mov
pop
pop
jg
inc
dec
aaa
pop
mov
iret
mov
jp
fdivl
ss
xor
popf
cmp
inc
dec
popf
or
popf
das
add
jg
push
jl
popa
mov
aad
cmpsl
sbb
das
shll
adc
sub
in
daa
cli
mov
jnp
pop
cmp
negb
jg
mov
ljmp
gs
jnp
xchg
daa
mov
pop
ret
cmpsb
out
ss
ficoms
psubusb
dec
adc
jle
cmp
sbb
fisttpl
pop
jne
rep
in
orl
add
ljmp
cs
push
jecxz
mov
outsb
aaa
cmp
lahf
loop
inc
pop
aad
subl
fwait
movsb
loope
mov
sbb
dec
out
fs
iret
enter
pop
jo
pop
mov
push
lret
inc
xor
outsb
ficoms
pop
shl
sub
in
inc
push
push
shrb
jle
mov
mov
inc
xor
ss
inc
xchg
jbe
and
hlt
xchg
cltd
inc
icebp
sub
andb
mov
ficoml
scas
faddl
pop
or
sbb
movsl
inc
pop
mov
mov
mov
xchg
jne
pop
arpl
aam
out
arpl
faddp
jno
or
or
mov
test
aas
in
mov
aad
sti
xchg
or
imul
jae
aam
imul
in
enter
adc
jge
and
stc
or
mov
mov
mov
nop
adc
fdivrl
adc
repnz
jo
js
movsl
dec
addl
in
push
mov
test
cmpsl
aas
pop
xchg
int3
test
int
or
and
shlb
push
lods
inc
mov
mov
out
mov
in
repz
or
jmp
push
insl
cmpsb
das
insb
and
xor
cltd
pop
outsb
push
sub
popf
scas
inc
xchg
inc
leave
mov
and
dec
into
pop
fdivrs
test
sti
lret
cmpsl
cmp
jl
sbb
sbb
jmp
sahf
or
or
and
and
mov
test
inc
lret
stos
push
push
in
cmp
lods
inc
adc
pusha
push
cmpsl
add
add
mov
stc
mov
scas
add
movsb
inc
out
xchg
in
femms
pop
iret
es
xor
addr16
sti
dec
shl
nop
cld
xchg
js
dec
test
sub
jbe
jmp
int
xchg
sub
movsl
adc
jg
or
xchg
push
xchg
arpl
mov
jecxz
mov
adcl
dec
push
jns
inc
jl
and
jl
ds
into
add
sbb
jg
mov
cltd
mov
rclb
mov
loopne
out
out
mov
and
test
cld
call
cmpsb
jo
into
ds
push
xlat
stos
mov
lret
push
sahf
ljmp
or
or
jl
sub
lea
lret
mov
jle
or
and
mov
cli
in
dec
loope
hlt
and
mov
shrb
out
out
add
mov
test
cld
std
push
mov
cmp
xchg
sub
cmp
mov
or
inc
mov
outsb
dec
jnp
lahf
push
add
lcall
insb
das
sub
iret
shlb
dec
sbb
out
clc
fstpl
adc
mov
adc
fs
mov
jo
xlat
sbb
idivl
call
push
push
xchg
movsl
push
cmp
lds
xchg
insb
cmp
mov
mov
adc
outsl
inc
lock
sub
lret
add
jl
scas
cmp
mov
mov
fs
test
or
int
pop
idiv
or
in
push
mov
es
adc
les
mov
inc
xchg
cmp
jp
lret
jno
mov
mov
mov
push
scas
daa
sub
cwtl
lock
test
test
adc
scas
ficompl
out
clc
bound
and
fildll
xlat
dec
and
daa
mov
lods
mov
push
iret
stos
bnd
movl
aaa
mov
xchg
testl
jl
push
int
in
xor
mov
xchg
pop
mov
loopne
not
addl
stos
xchg
add
mov
xor
lods
test
es
push
fmul
rorb
call
daa
push
scas
sub
pusha
xor
sub
inc
sti
incl
push
std
push
mov
dec
jp
inc
pop
mov
add
jg
fs
push
pop
sti
dec
mov
std
mov
and
popf
addr16
rcll
fwait
subl
ss
loopne,pt
pushf
mov
jmp
mov
pop
fcomps
outsb
iret
lahf
es
fs
hlt
sub
movsl
les
mov
jne
fadd
daa
sub
push
loop
in
pop
xchg
jns
cld
cmc
mov
std
push
bound
sbb
ss
adc
loop
inc
popf
hlt
mov
adc
add
stos
in
test
das
jl
ljmp
pushf
and
sub
push
das
xchg
es
leave
push
xchg
out
mov
test
insb
xor
push
mov
movsl
ds
dec
xchg
shll
hlt
lcall
mov
pop
dec
or
add
mov
stc
inc
rclb
in
dec
scas
xchg
loope
ret
mov
lret
pop
jmp
stos
mov
stc
xor
jns
and
jg
pop
push
lock
out
loopne
mov
adc
and
xor
ds
stos
xchg
fsubl
cmp
call
push
rorb
rcll
xchg
fisubrl
lret
insl
mov
test
jo
mov
shll
out
cmp
lcall
std
jae
std
rorl
into
addr16
mov
jmp
sbbl
repz
mov
sub
mov
cmp
sbb
push
jle
add
push
jle
or
push
or
adc
mov
shll
bound
sbb
int
sti
into
pop
mov
fmul
xor
xor
dec
push
sub
cmp
cmpb
fwait
adc
pop
pop
call
push
clc
inc
enter
jbe
mov
xchg
jecxz
test
int3
les
aas
aam
sub
jle
imul
mov
incl
mov
pop
push
jne
dec
fistpl
stos
inc
loopne
ds
adc
adc
add
jg
dec
loope
out
mov
inc
notl
cmp
iret
sub
push
and
sbb
jb
xor
test
xorl
mov
xor
mov
movsb
adc
scas
sbb
fidivrs
mov
insl
mov
xor
repz
ja
mov
jo
mov
sbb
js
mov
test
cmpsb
mov
push
cmp
sahf
or
sbb
and
fcomps
fistpl
lret
pop
xchg
daa
inc
cmp
dec
cmc
mov
stos
in
jo
adc
mov
movb
in
sub
hlt
insl
sbb
es
inc
data16
fists
sub
sub
xchg
jo
xchg
cmp
mov
jg
jg
fsubrs
or
xor
jns
lock
sbb
sub
push
fs
dec
mov
pop
or
stos
inc
xor
inc
sbb
lds
mov
inc
sbb
aad
das
clc
test
shlb
cs
sub
insb
mov
loop
roll
loopne
mov
shlb
mov
lods
sti
dec
push
loope
mov
int3
mov
aaa
cmp
push
in
push
xchg
pop
out
shlb
adc
mov
fsubrl
add
mov
test
cmp
clc
jmp
jb
add
adc
add
mov
sub
jp
std
fwait
stc
fstp
or
lock
stc
push
jecxz
xor
add
lahf
add
cmpsl
es
jmp
cltd
lcall
sub
and
aaa
xor
test
lcall
xchg
jl
in
xor
pusha
imul
test
aaa
inc
bnd
pop
xchg
jl
les
stos
adc
mov
inc
stc
mov
test
in
jae
pop
out
int
pop
insl
fadd
add
or
mov
xchg
mov
sub
adcb
sbb
lock
loop
movsl
int
test
call
xchg
fdecstp
mov
pop
stos
js
out
xchg
lret
repnz
popf
mov
jns
adc
sbb
inc
sub
adc
inc
out
popa
arpl
jecxz
pop
and
clc
xor
jbe
mov
push
std
xor
push
adcb
ret
xor
mov
popf
cld
pop
mov
and
ret
movsb
test
js
mov
add
or
das
outsl
in
mov
jmp
xchg
int
stc
xchg
int3
and
sbb
fsubr
or
sahf
addr16
cmp
or
or
jae
out
adc
push
adc
stos
loop
imul
cmp
sarb
xchg
out
dec
mov
mov
rcll
dec
pop
pop
hlt
and
cmp
jmp
inc
or
cs
jnp
jno
push
adc
sub
push
push
and
pusha
aas
jp
push
xor
adc
orb
int
fmul
dec
inc
push
inc
ds
and
sub
cmc
mov
or
les
in
mov
rorl
jns
dec
test
ja
dec
xor
lcall
lret
xor
pop
loopne
les
fs
add
push
cld
enter
loop
or
mov
or
repnz
and
sar
das
dec
in
inc
xor
adc
dec
ljmp
scas
fdivrs
out
add
out
mov
mov
mull
jg
xor
fcompl
clc
lret
sahf
fiadds
push
mov
mov
push
sahf
or
mov
jle
xor
push
shlb
dec
mov
pop
popf
pop
sbb
and
andl
mov
xchg
jge
sub
push
pushf
scas
pop
popa
cli
addr16
add
outsl
inc
loope
ja
push
imul
fs
xor
aas
into
imul
xchg
jp
pop
adc
push
jg
sub
rolb
cmpsl
push
and
jl
lcall
frstor
or
pop
lea
pop
dec
mov
xchg
xchg
out
jo
mov
mov
pop
inc
add
mov
and
dec
add
call
mov
cltd
ds
jo
jl
cmp
pop
xchg
sbb
popa
filds
popf
inc
jae
fidivl
aam
or
jge
mov
lret
scas
pop
mov
into
imul
xchg
sbb
pop
dec
mov
loop
loopne
or
dec
enter
dec
pop
and
or
vpsubsb
mov
fnsave
js
orb
inc
push
fwait
xchg
into
mov
add
push
popf
rcl
inc
fildl
cmp
hlt
insb
xchg
push
loopne
insl
mov
inc
sbb
and
pushf
jg
lds
ret
or
gs
cmp
ljmp
sub
mov
jg
or
inc
out
cmp
test
enter
and
out
enter
lret
cmpsl
icebp
out
iret
mov
xor
imul
mov
push
pop
jno
mov
movsl
das
inc
jnp
cmp
xchg
cmp
lcall
sbb
push
pop
cmp
into
inc
call
lea
repnz
or
jle
mov
das
hlt
dec
ret
cld
pop
test
push
push
ss
jns
pop
mov
bound
sbb
aas
cmp
test
loop
ret
sbb
mov
nop
repz
cltd
fcompl
filds
jb
sbb
popf
mov
scas
lds
xchg
jl
leave
or
push
pop
and
or
sbb
cmpsl
sub
leave
repnz
in
pop
sub
cmpsb
cwtl
insb
push
lods
pop
or
sbb
lcall
or
stc
stos
mov
cs
ret
mov
int
lahf
int
adc
adc
lret
fcomp
enter
lcall
jae
test
pop
adc
lods
xchg
out
mov
cwtl
dec
test
sub
fiaddl
mov
mov
push
sub
js
out
dec
les
aam
int
adc
negb
shlb
es
sahf
sub
adc
xchg
out
sti
dec
lods
fisubs
dec
shll
push
dec
xor
les
mov
cmp
jmp
adc
mov
mov
mov
add
and
pop
inc
in
and
js
in
popf
add
lea
pop
mov
jl
or
in
pushf
lcall
or
stc
cmp
add
pop
lock
pop
ss
pop
and
adc
sub
lods
mov
add
push
stos
mov
jbe
jae
arpl
push
xchg
mov
pop
mov
adc
mov
or
xchg
or
pop
inc
and
into
jnp
sbb
in
xor
ja
inc
std
mov
ret
pop
scas
mov
lods
and
aam
aas
jo
out
out
inc
ds
mov
out
or
dec
mov
enter
sub
fldl
and
or
ds
mov
ret
mov
shl
rcl
subb
and
mov
out
sbb
or
out
rclb
add
dec
xchg
call
dec
enter
ss
push
push
jl
inc
hlt
fucomi
fidivrl
adc
daa
mov
and
sbb
xor
jp
mov
dec
lret
in
rolb
lea
push
int3
or
xchg
movb
jnp
sbb
daa
push
mov
cmp
in
jge
xchg
jmp
or
sub
nop
outsb
mov
repz
dec
jmp
cmpsb
and
loopne
mov
jl
jo
jmp
inc
pop
insl
aam
dec
inc
inc
mov
jl
push
pop
cmpsb
pop
and
mov
cltd
mov
mov
add
mov
arpl
fisubs
mov
add
repnz
outsb
dec
jnp
push
arpl
cmp
sti
shlb
dec
inc
and
pushf
xlat
movsl
repnz
pop
mov
addr16
loope
mov
mov
sbb
pop
pop
mov
in
test
xor
mov
xor
adcb
or
imul
mov
lret
push
mov
mov
or
xor
in
push
into
gs
and
push
push
aad
dec
leave
mov
mov
dec
int
fmull
popa
mov
loop
scas
sahf
inc
sub
out
or
mov
out
in
ret
mov
xor
cld
mov
andl
cld
cmp
or
jne
das
sub
mov
lea
dec
dec
add
pop
aad
scas
add
stos
push
xchg
jo
mov
loop
ljmp
dec
push
clc
dec
add
idiv
in
cmp
cli
jecxz
sub
lods
lret
add
inc
jge
cmp
cltd
push
scas
push
imul
xchg
sub
inc
dec
dec
mov
pop
xchg
shrl
loope
and
js
inc
sti
sbb
pop
das
mov
or
out
jge
xchg
mov
lret
dec
xchg
pop
push
or
add
rorb
pushf
xor
jno
ss
add
mov
stc
stos
cmpsl
in
add
lea
fcompl
ja
movsl
cmpsl
push
lahf
mov
cmp
pop
fs
sbb
jno
test
enter
lret
and
pop
insl
mov
into
pop
xor
inc
and
sub
and
push
and
xchg
bnd
lahf
add
or
or
add
cmp
pop
bound
inc
test
sbbl
test
aaa
xchg
xlat
mull
and
mov
cmp
or
pop
sbb
sub
adc
mov
and
repnz
or
fdivs
pushf
outsl
jmp
xchg
stc
leave
inc
push
add
test
out
jno
test
fcmovu
and
pop
or
lahf
out
into
or
test
cmp
movsb
dec
je
rcll
add
shl
sub
fwait
jg
dec
andb
ret
loope
jp
xchg
push
nop
push
addr16
sub
rclb
jmp
arpl
dec
cmp
inc
sub
cmp
sub
xor
xor
leave
dec
sub
push
cmp
sti
sbb
adc
fisttps
clc
xor
fs
cmp
sbb
mov
inc
xor
in
lods
clc
inc
movb
stc
jae
jo
mov
mov
sahf
int
lahf
and
in
inc
aas
or
loope
pusha
pushf
shlb
loop
add
pop
xor
sub
stos
mov
packuswb
out
xlat
xchg
adc
xor
leave
sub
adc
out
mov
mov
les
dec
imul
out
jns
sbb
iret
stos
sbb
sbb
and
cmp
sub
pop
adc
adc
or
pushf
das
test
sbb
push
fs
mov
fstps
and
mov
aam
and
ror
movb
lock
insb
lahf
cltd
in
rorl
mov
filds
fmul
ljmp
shll
leave
push
subb
cmc
ljmp
xor
and
ljmp
test
rorb
pop
push
lds
ds
iret
mov
imulb
pop
aas
dec
jmp
mov
xor
fdivs
xor
test
push
pushf
mov
jae
xchg
sub
push
ljmp
popl
shlb
aam
fdivs
sbb
dec
xchg
repnz
xor
adc
mov
xchg
fs
or
push
mov
jp
lds
fwait
vpcomd
adc
pop
outsb
add
inc
mov
and
push
pop
sbb
xchg
std
sbb
pusha
dec
mov
inc
pushf
es
sub
ret
sbb
int3
cmp
jo
fs
mov
adc
xor
or
in
xor
inc
fsts
mov
and
mov
es
xchg
mov
adcb
loop
push
sub
outsb
ds
addr16
xchg
sub
scas
mov
push
repz
jbe
in
loop
rcrl
inc
xchg
xchg
cmp
fs
ljmp
andb
fdivrs
shl
int
incb
js
ljmp
xorl
mov
pop
aas
shlb
enter
bound
add
testb
lods
mov
stos
mov
or
call
or
add
xor
xor
push
dec
inc
js
mov
jno
jge
mov
jge
adcl
mov
out
lret
push
cmp
nop
add
mov
movsb
jl
gs
pusha
loope
insl
push
cmp
sbb
mov
scas
sub
jbe
adc
rolb
add
in
or
movsb
mov
and
ljmp
in
push
sbb
sub
sub
jge
clc
jne
jae
dec
ljmp
sbbb
jmp
xor
mov
pop
rcll
jge
pusha
sub
pop
shlb
outsl
mov
fs
add
iret
hlt
mov
jns
cmpxchg
push
cmp
rcr
shrl
out
icebp
xor
stos
shll
sbb
aaa
xchg
subl
pushf
mov
jmp
daa
ja
sbb
out
mov
pop
mov
inc
xchg
das
or
sbb
xor
testb
mov
arpl
adc
sbb
jle
iret
add
sub
clc
data16
sahf
jns
into
icebp
test
les
arpl
cmp
adc
movl
add
scas
lods
xor
lret
movl
push
adc
jb
cmp
cwtl
les
mov
stos
inc
aaa
scas
xchg
pushf
or
outsb
stos
sub
insl
mov
cltd
test
push
xor
fimuls
sub
int
pop
loop
lret
jbe
add
je
or
mov
mov
js
dec
test
je
push
mov
std
je
xchg
ja
jae
adcb
sub
jns
sub
jmp
mov
jne
mov
xchg
das
xchg
cmp
test
pop
js
dec
and
insl
js
xor
out
cli
mov
sub
inc
xchg
xchg
ficompl
shlb
push
inc
sbb
or
dec
lods
and
fadd
lock
push
fs
inc
dec
mov
movsb
aad
xchg
pop
iret
in
sub
xor
mov
or
xchg
add
xor
mov
cmp
pushf
xor
add
std
and
and
inc
adc
andl
pop
xor
xchg
sub
mov
cmpsl
or
rcll
movsb
imul
je
adc
scas
scas
cmp
xchg
mov
aaa
xchg
rcrb
ror
aam
js
clc
push
add
ja
cmp
ljmp
scas
jbe
lcall
jle
incb
arpl
or
cmp
enter
sub
mov
fiadds
pusha
cli
fidivrl
out
lock
int
mov
xchg
mov
mov
jge
fnstcw
mov
jne
cmc
aad
sub
add
xorb
sub
pop
xor
jmp
fiadds
jle
sbb
out
dec
mov
popf
mov
lcall
jmp
jb
int
int3
and
cmpb
adc
pop
inc
mov
es
sbbb
into
out
ss
stos
lock
adcl
cltd
icebp
cli
orb
cmp
test
cmp
cltd
dec
mov
ret
ja
fdivr
push
lret
adc
jl
in
xchg
out
xchg
xorb
xor
jl
stos
leave
add
pop
xchg
in
in
out
out
and
push
adc
aam
cmp
or
fsubs
inc
shl
icebp
mov
cmp
lds
cltd
mov
xchg
adc
jg
dec
in
jmp
sbb
jae
pop
jbe
mov
mov
add
mov
loop
movl
dec
adc
dec
out
mov
xchg
mov
lcall
pop
inc
or
pop
movsl
sub
and
mov
mov
pop
faddp
jnp
dec
or
dec
jmp
bound
ljmp
mov
cmp
loopne
mov
dec
mov
cmp
enter
sub
sub
stc
lret
mov
fs
add
roll
ret
cmc
and
jae
fildll
inc
rol
xchg
insl
cmp
test
mov
xchg
lret
mov
mov
roll
dec
and
bnd
fadds
xor
test
adc
int
mov
adc
push
and
les
cmp
jmp
fildll
pop
lds
jg,pn
ss
bound
or
movsl
mov
lods
cmp
adc
xchg
clc
push
popa
loope
dec
lcall
rcrb
push
pop
out
dec
pop
xor
rorl
or
or
xor
rorl
std
inc
mov
ret
sub
xchg
js
loop
jmp
or
mov
nop
out
mov
mov
mov
cwtl
aad
inc
add
xchg
mov
lcall
fsub
in
jnp
sub
mov
jno
out
mov
mov
push
mov
jae
xor
add
or
xchg
mov
dec
jl
xor
pushf
loop
ret
cmp
sub
push
sub
cmp
ret
sub
rolb
std
push
inc
sbb
xchg
adc
sbb
hlt
cmp
jge
push
pop
in
ret
dec
xor
rolb
out
out
mov
out
xor
mov
jge
popf
mov
xchg
or
mov
fstpt
je
aam
jp
add
test
lret
jbe
lods
mov
mov
push
mov
lea
test
and
in
and
iret
push
jg
cs
inc
mov
xor
subb
jg
and
pop
lods
xchg
int3
push
loopne
inc
jae
add
sbb
cltd
es
addr16
fadds
ds
rol
cmc
ret
insb
shl
daa
pop
enter
cmp
outsb
jno
pop
rorb
push
cmp
roll
lock
lods
xor
lods
add
ret
add
jl
sub
inc
xor
push
xchg
dec
out
pop
pop
add
dec
mov
movups
nop
sub
and
ss
add
stos
push
aam
or
lcall
call
push
or
loop
out
sbb
or
mov
xchg
xchg
mov
pop
enter
or
pop
int3
xor
adc
int
mov
push
fcompl
add
cmp
je
nop
cli
sbb
addl
and
cmp
enter
and
push
mov
add
shll
add
in
adc
mov
mov
icebp
outsb
andl
xchg
dec
pop
jl
mov
and
aad
and
sub
push
cmp
xchg
mov
repz
mov
aas
scas
push
lods
sti
xor
icebp
cwtl
cli
lock
or
loopne
jbe
addb
daa
cmp
icebp
pop
mov
jle
jnp
pushf
loopne
and
nop
xor
fisttps
xor
enter
mov
out
das
cmpsl
in
aam
in
add
das
jmp
into
mov
mov
push
std
cmp
test
mov
roll
pop
movsb
cmp
mov
pop
arpl
sub
sbb
cli
and
fcoml
fiadds
pop
xchg
mov
pop
mov
xor
sarb
mov
mov
xor
dec
mov
aaa
insb
sarl
decl
pop
inc
sub
sub
aaa
cmp
outsl
ss
xor
jl
das
jecxz
insl
xchg
outsl
mov
inc
mov
in
mov
dec
ret
das
outsb
or
adc
sbb
aad
xor
pop
ret
jae
negl
push
fwait
lods
loopne
jg
enter
popa
push
push
ret
push
add
fs
daa
add
xlat
int3
pop
int
sbbb
stos
jl
fs
divl
ret
mov
je
int
repz
ja
mov
mov
test
push
inc
mov
cld
add
or
pop
cmp
jns
arpl
mov
insl
xlat
jne
pop
add
or
scas
pop
push
stos
int3
xlat
push
sti
mov
imul
jb
int3
sub
sub
test
fsubs
sti
cmp
nop
pop
repz
iret
sbb
lret
and
dec
push
fs
fsubrl
xchg
shlb
add
mov
or
repnz
jns
cltd
aas
daa
sbb
rorb
hlt
outsb
lods
xchg
scas
inc
jnp
loopne
aas
jecxz
push
andl
mov
int3
outsl
push
rorl
scas
shll
inc
mov
lea
jne
ja
js
icebp
adc
loopne
dec
mov
popa
jb
mov
loope
cmp
xchg
lock
inc
inc
leave
mov
add
add
js
je
pusha
xchg
sbb
rolb
xchg
cltd
sbb
cmp
in
int3
andb
sbb
add
xlat
jno
ss
jecxz
mov
lgs
imul
push
sub
stos
cmpsl
nop
sarl
dec
out
jne
cld
aaa
fwait
movsb
out
pop
addr16
or
in
fldt
push
sub
xchg
mov
jmp
mov
loop
dec
std
sti
fisttps
push
and
or
pop
and
xchg
sub
fmull
mov
fs
mov
dec
popa
lea
mov
pop
xor
push
mov
aaa
dec
cltd
in
jmp
mov
notl
adc
imul
enter
add
outsb
add
jp
lea
sti
fsts
fmull
jb
les
push
ljmp
and
dec
xor
pop
faddl
imul
mov
mov
jg
sub
sub
add
pusha
or
xor
pop
or
or
and
insb
inc
ds
insl
sti
pusha
dec
cmp
stc
push
scas
out
cmp
lock
ret
scas
jge
clc
xor
add
mov
lods
push
mov
inc
pop
jbe
pop
jb
lods
xchg
movsl
pop
fwait
jecxz
nop
test
push
mov
mov
pop
add
adc
popf
mov
jno
mov
lret
hlt
cli
push
jo
call
int3
push
arpl
sub
inc
mov
and
popa
mov
adc
adc
xchg
mov
imulb
jo
aad
enter
fsin
xchg
xor
xchg
mov
mov
push
dec
and
scas
orl
nop
cmc
repz
inc
in
add
outsb
scas
shrb
sbb
stc
lea
xchg
arpl
lea
or
sbb
jne
test
mov
call
sahf
mov
xor
mov
std
jecxz
jge
xor
incb
add
nop
xchg
out
scas
adc
jecxz
lods
fisttps
xchg
repnz
cmp
mov
cmpsl
js
sti
test
into
imul
xchg
mov
pop
popa
movsl
in
jae
add
xor
psubb
xchg
xchg
sbb
or
pop
lea
cli
aam
xor
daa
sbb
sahf
and
das
adc
pop
movsl
and
lret
jbe
fldl
mov
in
mov
adc
jecxz
lcall
shll
xchg
cmp
imulb
add
pop
or
int
jae
cs
mov
in
sbb
xchg
ret
pusha
cmp
xchg
push
sbb
dec
fsubl
daa
sub
cs
dec
test
xor
adc
mov
nop
mov
rol
in
and
or
dec
mov
push
fmulp
sbb
loop
mov
ss
out
xor
xor
loopne
test
enter
lahf
push
inc
daa
test
xor
std
mov
imul
jbe
and
in
out
jge
ret
pop
xor
das
stos
das
mov
fadds
mov
mov
add
fs
mov
sub
mov
and
fisttpl
cltd
sysenter
sbb
xchg
rcrl
mov
mov
mov
or
or
mov
jmp
nop
push
inc
rcr
and
inc
pop
lea
aam
mov
jle
jmp
adc
add
push
inc
jle
adc
test
xchg
pushf
jae
rcrb
test
sbb
hlt
dec
lret
lcall
or
test
cmpsb
mov
xchg
push
sbb
mov
sub
sub
out
imul
scas
sbbl
jo
pop
repz
pop
jge
cwtl
fs
and
cmp
in
and
xchg
cmp
imul
enter
repnz
cwtl
mov
jb
fsubr
jns
xor
xchg
leave
dec
adc
jg
dec
clc
xchg
dec
lcall
mov
shr
cmp
push
sbb
push
push
mov
add
std
test
mov
sbb
push
lock
pop
jmp
mov
lds
push
cmp
lock
mov
cltd
lock
cmp
adc
mov
loop
ret
fidivl
inc
cmp
flds
out
lods
out
lret
pop
xchg
mov
lcall
mov
sti
cmpsl
daa
add
sarl
adc
push
enter
testb
xchg
aad
shlb
mov
repz
pop
xor
and
adc
pushl
cmp
and
sbb
movsl
sbb
mov
imul
mov
shll
pop
jg
pop
mov
jns
mov
xchg
mov
sbb
mov
xchg
push
fistl
pop
fwait
aam
cmpsl
mov
or
adc
xchg
arpl
aas
and
js
fldt
inc
mov
std
fwait
movl
test
movsb
and
mov
jp
adc
cmp
addl
aam
test
and
insl
mov
cltd
sub
dec
scas
out
int
cmc
push
mov
push
rcr
ret
fs
outsl
push
lock
xchg
mov
out
add
or
stos
xchg
jp
mov
inc
or
int
movb
inc
test
test
sbb
mov
mov
dec
pushf
push
mov
in
push
and
cmpsb
lcall
fs
sbb
lahf
xchg
pop
arpl
add
cmp
iret
scas
sahf
cmpsl
hlt
pushf
and
mov
cmpsl
push
xchg
fcmovnb
das
adc
call
inc
jp
mov
repz
mov
or
wrmsr
rolb
clc
into
push
cmc
test
pushf
sbb
mov
jns
loopne
sbb
xor
inc
cmpsl
sub
lds
push
inc
cmp
sub
fbstp
inc
fwait
inc
jmp
mov
add
pop
xchg
call
or
add
adc
hlt
call
daa
adc
or
cmp
gs
xchg
xchg
loopne
pop
inc
movsb
xorl
jae
sysenter
in
mov
lods
inc
mov
sbb
in
adc
jae
and
in
lods
aas
loopne
lret
adc
adcl
xor
sbb
mov
dec
or
cmp
jmp
xor
fs
xor
adc
jp
add
sbb
pop
scas
or
mov
aaa
ret
mov
push
out
pop
testl
dec
pop
xor
jecxz
xchg
cmp
xor
out
sub
and
push
scas
loope
outsl
lock
sub
std
out
gs
dec
pmaxsw
adcb
out
sbb
pop
jno
ret
je
and
enter
xchg
sub
sbb
xchg
dec
adcl
xor
pushf
mov
add
test
orl
xchg
andl
les
popf
test
and
jecxz
mov
lods
inc
cmpsb
jae
aaa
repz
mov
pop
mov
pop
testb
aam
or
adc
lods
int
jle,pn
pop
je
inc
or
mov
and
pop
mov
jge
pop
and
movsl
jo
repnz
aad
fidivrs
je
popa
ret
mov
gs
std
ret
shll
pop
push
adc
loopne
in
pop
inc
or
adc
lahf
fdivrl
frstor
jno
sub
and
xor
mov
or
insb
test
cmp
mov
or
mov
std
and
test
dec
inc
jns
fs
xorl
mov
adcl
lods
jnp
stos
dec
and
cmp
mov
jb
cmp
cmc
cmc
and
repz
adcb
cmc
lds
pop
lret
in
in
pop
jbe
inc
mov
add
adc
data16
mov
jg
jbe
pop
mov
or
leave
int3
adc
cmp
daa
popa
decb
les
adc
push
lea
mov
xor
mov
jp
xor
das
out
movsb
test
aas
adc
add
jae
imul
push
out
stc
mov
xchg
vmovdqa
out
pop
push
pop
jl
mov
cmpsl
mov
push
jle
outsb
aam
cmpsl
popa
movsb
xchg
dec
popf
sub
icebp
xchg
lcall
sbb
push
jnp
rcrb
inc
es
call
fwait
cmpsb
xchg
jecxz
jae
add
push
sbb
inc
mov
std
das
adc
hlt
ds
gs
cld
jmp
inc
pop
or
adc
sbbb
sbb
mov
test
add
xchg
or
and
sti
and
mov
icebp
insb
mov
mov
xor
lea
in
jo
in
add
cs
add
xor
adc
mov
hlt
repnz
xlat
cmc
pop
cmp
mov
out
lods
pop
das
add
cmc
cmp
dec
lahf
push
scas
xor
in
cmp
subl
inc
inc
add
pusha
xor
adc
sub
mov
jp
dec
es
sbb
test
xor
enter
push
ja
xchg
addr16
aam
ss
loope
stos
sti
rorl
cmpsl
cmp
xor
adc
push
lods
loopne
sub
dec
jns
push
jbe
xor
repz
cld
fildl
iret
adc
sbb
test
lods
mov
mov
xchg
push
xchg
adc
lds
jnp
inc
mov
cwtl
rcrl
sti
pop
mov
push
jnp
mov
gs
adcl
out
mov
lcall
mov
mov
hlt
add
fs
sbb
inc
push
dec
mov
pop
add
ret
cmp
adc
rorb
lds
xor
mov
stos
pushf
iret
sub
scas
xchg
adc
cmp
adc
xchg
dec
and
loopne
and
xor
movsb
sarl
and
in
adc
jmp
xor
dec
je
pop
fldt
mov
shlb
ret
test
mov
outsl
xor
ja
scas
dec
jecxz
push
mov
sub
inc
dec
int3
ja
adc
jecxz
aas
outsl
stos
push
insb
mov
loopne
mov
daa
add
icebp
mov
cltd
xchg
sahf
into
jl
insb
lds
add
sbb
hlt
rol
mull
in
adc
xor
mov
push
test
mov
xor
scas
lahf
xchg
je
in
pop
movsl
lods
push
jae
mov
sahf
jge
push
in
mov
sbb
push
push
sbb
jle
sub
scas
and
lcall
cmpsb
jle
cs
sub
push
mov
inc
push
mov
pop
xor
fs
aas
xchg
xchg
mov
cmp
sub
and
cltd
or
dec
inc
das
push
ret
xor
les
dec
out
pusha
inc
mov
gs
out
loope
or
inc
pop
loope
or
lcall
sbb
dec
test
loopne
adc
dec
mov
ss
jb
adc
xchg
shl
jnp
add
dec
clc
ljmp
shl
pusha
push
add
arpl
out
mov
add
push
or
out
push
cld
mov
sbb
sub
sbb
and
mov
xchg
inc
mov
xlat
inc
mov
jg
inc
gs
mov
dec
mov
scas
enter
inc
push
fimull
add
sahf
cmp
or
and
popa
jge
fucom
rol
jle
repz
jmp
pop
mov
cmp
xor
aad
bound
adc
mov
loope
lcall
xor
jb
jmp
lret
sahf
push
stc
testl
movsb
sbb
arpl
aam
mov
lret
pop
jp
inc
pop
sub
nop
test
and
xor
ja
lds
adc
jno
mov
pop
cwtl
jecxz
xchg
stos
test
mov
test
or
xchg
xor
pop
call
iret
cmp
xor
sbbb
mov
ljmp
ss
mov
xor
mov
mov
jno
sahf
sbb
or
dec
ret
iret
aad
inc
mov
jb
fs
aam
fsts
add
call
divl
mov
iret
js
inc
gs
repz
cmp
xchg
mov
xchg
jbe
sbb
adcl
adc
cmc
out
lret
push
ss
fidivl
and
sbb
mov
repnz
inc
sub
fucom
mov
mov
andb
sbb
pop
mov
mov
or
push
and
sub
xchg
loop
and
pusha
sbb
int3
nop
lds
movups
daa
and
and
pop
jecxz
and
cmp
jae
mov
sub
pop
les
cmp
cmp
xor
ret
lcall
pop
dec
in
xchg
inc
fadds
fmull
and
dec
in
outsb
enter
enter
daa
loopne
mov
add
sbb
adc
insl
mov
lcall
and
in
aad
addr16
inc
sbbl
pop
movsb
fdivrs
movsl
ljmp
jb
test
fisubl
pop
hlt
sahf
and
jle
push
cmpsb
inc
xchg
popa
jne
lahf
mov
dec
leave
iret
gs
shr
mov
ficoml
push
in
sahf
pop
cltd
ret
jno
jmp
mov
aad
and
cmp
lods
stos
jns
orl
ret
and
xchg
jmp
in
fimull
jnp
mov
push
ret
lahf
cmp
repnz
ss
sub
int
xchg
xchg
hlt
aad
xchg
fiadds
fsubs
push
push
in
sbb
adc
push
aad
sbb
cbtw
or
dec
jg
movsl
movsb
inc
mov
cs
hlt
ss
push
push
in
add
adc
pushf
jl
icebp
or
shr
or
sbbl
movsb
jecxz
out
popf
adc
rcrl
pop
and
or
mov
int
imul
enter
pop
xor
jle
fsubrs
outsb
jmp
cltd
and
loop
test
jmp
rclb
lods
cmp
movsb
pop
pop
jp
mov
imul
shrb
jle
sti
leave
test
imul
outsl
mov
mov
js
sub
dec
test
and
nop
lcall
out
clc
loopne
xor
bound
inc
loope
push
out
xchg
jl
adc
clc
jb
mov
into
push
cmc
popa
or
jae
enter
push
pop
popa
push
ljmp
sti
out
jne
xor
movsb
sub
rorl
pop
daa
loop
cmp
lock
cmp
leave
in
js
or
into
inc
inc
or
fwait
ret
mov
addr16
arpl
popf
movsb
lahf
and
mov
mov
mov
popa
rolb
inc
sbb
jne
push
xor
movsb
add
add
mov
cmp
das
lods
pop
sti
dec
cmp
push
jmp
rorl
movsl
test
xor
mov
and
insl
inc
shl
and
lret
pop
mov
mov
inc
rcrl
push
pop
xor
lea
jge
stos
mov
add
jle
lcall
stos
xchg
and
lods
push
int3
xlat
add
xor
pop
add
cmc
inc
outsb
mov
dec
xor
xchg
pop
mov
bound
es
sbb
sbb
and
je
arpl
ds
lock
out
lods
xchg
in
mov
cmpsl
test
or
lcall
xor
mov
xchg
arpl
add
popa
lret
flds
dec
ljmp
pop
push
xor
jg
jb
ss
xchg
fsub
mov
in
test
sbb
mov
dec
imul
mov
inc
and
inc
xchg
leave
cs
test
decl
jnp
or
pop
inc
das
lret
mov
push
nop
daa
cmpb
neg
adc
jne
fnstcw
fbstp
dec
ficompl
push
sub
mov
add
adc
clc
xchg
les
cs
adc
sub
arpl
dec
test
pop
pushf
jmp
mov
xchg
cs
xbegin
ja
pop
pop
aad
push
adc
mov
or
mov
adc
call
fistpl
mov
sbb
out
adc
jp
cmp
and
movsl
lods
pop
sti
or
loopne
pusha
cmp
je
mov
push
scas
cmp
jbe
push
mov
mov
jmp
cltd
mov
movsl
push
dec
inc
dec
jbe
dec
push
imul
lock
push
jp
add
add
iret
cmp
cmpb
xlat
dec
fistpll
pop
fstp
cmp
js
cli
outsl
and
push
in
push
jne
jb
inc
loop
outsl
psubsb
ret
mov
repz
jnp
mov
popa
sub
inc
fs
xor
jle
xchg
hlt
stc
shl
inc
shll
mov
xchg
adc
xlat
jle
sbb
or
dec
mov
sbb
xor
fs
dec
movsl
jae
mov
adc
push
push
lods
inc
cmp
adc
add
adc
mov
dec
push
icebp
rcll
imul
sub
mov
addr16
cltd
sbb
dec
inc
add
cmp
stos
scas
or
cwtl
cld
pop
inc
sub
sbb
mov
cmp
mov
rcrb
les
push
mov
mov
repz
cmp
repnz
jbe
shrl
inc
arpl
push
lahf
pop
pusha
xchg
mov
xor
aaa
jns
inc
and
repz
mov
xor
rcll
pop
push
rorl
push
push
gs
dec
lods
and
xchg
jle
adc
adc
aas
xlat
xchg
jo
jecxz
mov
mov
mov
shll
fsubs
std
or
popa
dec
fsubs
adc
and
fucomp
jp
mov
and
and
mov
nopl
sbb
sub
xchg
xlat
mov
mov
jle
pop
aas
lea
lahf
cmp
mov
in
adc
mov
insl
sbb
push
jle
in
jge
repz
outsb
xor
xchg
fisubl
cmpsl
insl
cmp
adcl
ror
adc
in
mov
out
orb
aas
mov
mov
loope
sub
in
mov
addr16
jnp
adc
pop
or
pop
sub
aas
int3
bound
xchg
fsubrs
iret
push
cli
adc
jp
inc
sub
movsl
push
fidivrs
dec
ljmp
jne
pop
xchg
je
and
pop
pop
lods
repz
pmovmskb
aam
call
jo
mov
sbb
shrb
int
loope
mov
mov
ficoms
aam
sbb
cmp
leave
jno
push
and
fsub
ds
push
or
push
mulb
jge
push
int
lock
lods
pop
mov
rorb
lret
add
clc
lcall
mov
pop
loop
xchg
data16
cmpsl
push
insb
sub
int3
pop
sub
adc
mov
inc
xor
jno
pop
fsts
cmp
lods
cmpsl
jecxz
mov
flds
fcomps
popf
cmp
pop
loop
rcll
or
mov
sub
aaa
movsb
xor
pop
in
fisttps
hlt
out
scas
movsl
outsl
mov
cmp
rclb
pusha
xor
inc
les
mov
fdecstp
dec
jae
and
jno
jg
dec
add
push
push
push
inc
mov
loope
jmp
jp
dec
add
mov
es
adc
mov
in
loopne
sti
jae
pop
dec
mov
jne
or
or
outsl
ljmp
das
stc
out
fldl
ja
in
push
sbbb
sbb
cmp
jp
ds
outsl
flds
xchg
mov
bound
dec
hlt
stos
fsubs
or
testl
jb
bound
fbld
rol
cmpsl
xor
call
mov
shr
mov
mov
mov
pop
test
lods
push
jbe
push
and
mov
xchg
push
jo
mov
mov
aad
jle
test
int
lret
dec
sarl
repnz
lea
mov
jle
mov
cmpsl
dec
cmp
out
jnp
fcoms
xor
lcall
inc
ss
ss
push
xchg
mov
lret
mov
push
les
mov
push
in
inc
lods
in
xor
push
cltd
pop
insb
dec
aas
call
or
jnp
mov
mov
nop
lods
fnstcw
ljmp
mov
and
scas
imulb
inc
call
nop
stos
jbe
stos
mov
cmp
add
dec
sarb
mov
dec
les
cld
pop
mov
fs
pop
sub
push
loopne
nop
mov
out
je
jp
adc
lahf
aad
aaa
xchg
scas
movsl
pop
lret
movsb
mov
jae
stos
sahf
sub
mov
shll
mov
gs
or
inc
in
adc
jbe
test
cmc
inc
add
aaa
stos
and
push
pop
cmp
and
fstpt
in
jp
loope
shl
test
cmp
xor
cmc
dec
dec
pushf
push
xchg
push
sbb
push
lods
xlat
inc
xor
mov
cmpl
mov
in
stos
outsl
call
xchg
xchg
adc
xchg
dec
pushf
rclb
push
inc
popl
push
sub
int
inc
lcall
test
cmp
jno
call
lods
enter
xor
lea
negb
cmpsb
dec
add
mov
add
and
jge
fists
mov
int3
ret
push
mov
lods
mov
flds
mov
sbb
movsl
repz
push
push
xor
cltd
dec
fstps
and
lea
or
xor
outsl
jle
out
aam
mov
jnp
je
dec
xchg
or
sbbb
jg
push
dec
inc
imul
jae
ds
xor
popa
fisttpl
sbb
mov
jp
iret
fcmovnb
cwtl
addr16
mov
mov
xor
pushf
shll
dec
mov
jecxz
cld
into
push
or
mov
and
push
cmp
xchg
and
jmp
jae
xchg
push
out
pop
loope
ret
std
test
sbb
movsl
xchg
outsl
and
sub
xchg
lcall
imul
mov
mov
add
push
shll
cmp
ja
leave
mov
out
cmp
inc
ret
movsb
inc
inc
pop
sub
mov
jmp
repz
pop
leave
lahf
mov
pushf
push
lods
push
push
iret
push
in
insb
repz
push
push
mov
mov
pop
pusha
lcall
out
push
popa
dec
imul
kmovb
jl
out
fcoml
xchg
jg
pop
dec
xchg
push
cmp
mov
popaw
std
add
adc
inc
aas
fs
daa
int3
shll
aaa
call
cmp
shl
ret
cmc
mov
or
sti
or
pop
mov
rol
shlb
leave
cmp
push
adc
push
mov
dec
ret
aas
and
mov
xchg
popf
ficoml
jb
xor
mov
fidivrs
jnp
xor
push
sbb
lret
pop
xchg
pusha
das
or
mov
sub
inc
sbb
adc
xchg
lahf
adc
mov
pop
imul
jne
mov
mov
mov
push
orb
mov
dec
shl
mov
sub
cmp
jmp
pop
jo
jnp
and
movl
mov
call
add
or
int3
cmp
jg
sub
mov
push
push
sbb
adc
jns
adc
movsl
and
fsubrp
ret
mov
sti
xor
add
ret
loope
xchg
lds
mov
out
push
insb
out
cs
scas
arpl
pop
jg
mov
shlb
out
sub
cltd
fdivr
roll
dec
cmp
mov
jno
add
in
mov
hlt
or
jmp
sub
xor
pop
daa
jmp
mov
mov
mov
popa
inc
pushf
cwtl
pushf
in
and
inc
mov
gs
and
xor
call
mov
and
popa
pushf
and
jns
outsl
jne
lods
adcb
sub
cmpsl
stos
pop
mov
lcall
andb
sbb
cmpsb
ror
mov
rorl
mov
imull
mov
dec
mov
cmp
cmp
add
mov
rclb
cmpsl
cld
xchg
and
mov
test
ret
popf
cmpb
pop
cwtl
bound
sbb
fiaddl
into
ds
les
or
inc
and
mov
test
lahf
and
or
out
test
stos
out
mul
sbb
xchg
sti
nop
icebp
adc
dec
pop
inc
icebp
roll
pop
fwait
std
pusha
xlat
add
add
popa
lods
test
out
inc
bound
mov
pop
iret
out
mov
mov
lcall
dec
nop
mov
xchg
div
push
les
mov
inc
mov
ljmp
sub
out
pop
ss
add
sbb
jp
mov
dec
hlt
push
cmp
fdivr
xchg
in
fdivs
in
push
out
cltd
pop
pop
dec
xor
add
roll
leave
gs
sub
in
aaa
aas
sahf
fmull
mulb
push
xor
fdivs
mov
lret
xchg
mov
dec
pop
pop
lea
out
cld
aas
or
data16
pop
or
jnp
xor
mov
sysret
lods
sarb
xchg
jmp
fsubrl
push
shll
pop
testb
sbb
rclb
jae
jmp
mov
dec
cmp
push
push
and
insb
or
add
cld
frstor
adc
cmpsl
xchg
and
pusha
cwtl
or
cmp
test
lock
adc
cmp
sarl
int
es
in
mov
and
ss
leave
add
pusha
dec
mov
fisubl
arpl
loope
jp
das
and
nop
sub
pop
mov
pop
test
adc
add
push
sarl
dec
mov
add
jne
ss
push
ffree
mov
in
pop
add
ss
out
negl
dec
mov
jns
rcl
data16
push
xchg
adc
cmpsb
stc
jno
test
xchg
jle
loope
and
lahf
jp
iret
pop
pusha
out
xor
sub
bound
test
in
inc
jnp
jns
fs
div
popa
jmp
push
mov
cmp
mov
nop
les
and
mov
jns
mov
mov
lods
pop
mov
or
fs
std
mov
inc
cmpsl
push
clc
mov
arpl
fimuls
xor
nop
mov
mov
push
sub
out
idivl
pop
fwait
cs
xchg
fistpl
adc
mov
adc
adc
sarb
cltd
and
subl
je
or
rolb
divl
imul
not
adc
push
jl
adc
mov
push
leave
loope
cmp
ss
popa
push
xchg
mov
and
adc
icebp
pop
fcompl
inc
push
jne
sbb
lock
mov
movsb
jnp
out
sbb
aas
jns
clc
xor
adc
and
insb
mov
pusha
inc
cmp
xchg
adc
andl
dec
xchg
lret
ds
sub
push
xor
jnp
les
dec
lods
and
jne,pt
sub
push
push
add
sar
nop
xor
add
fildll
and
out
and
sbb
bound
dec
loopne
jp
sub
adc
inc
adc
loop
mov
pop
into
mov
in
mov
daa
cmp
decb
rep
inc
jns
mov
mov
es
xchg
inc
fwait
std
mov
add
mov
scas
inc
les
in
xlat
push
dec
dec
insl
jp
mov
fadds
jp
ret
xor
data16
iret
jl
and
sub
add
xchg
mov
jecxz
pop
push
cmp
inc
fwait
push
daa
sbb
rorl
jo
push
jp
inc
mov
test
cs
aas
sahf
push
cmc
ds
sbb
push
sub
and
xchg
test
je
sbb
mov
in
sbb
jae
js
cmp
push
adc
sbb
dec
mov
lods
lods
jg
in
fnstenv
icebp
jl
scas
sbb
in
pop
outsb
jmp
scas
and
adc
adc
and
push
aaa
mov
mov
cltd
push
dec
xlat
fisttpll
pop
mov
sub
mov
or
jnp
leave
ljmp
scas
mov
scas
movsl
repnz
adc
adc
pop
fs
mov
js
dec
aad
mov
dec
je
rcr
mov
xor
mov
fdivrl
pop
ret
push
out
cmpsb
push
cmp
mov
fnstcw
sahf
jns
mov
in
inc
scas
jbe
jg
jecxz
xor
push
imul
adcb
add
and
inc
cmpsl
adc
xor
jg
mov
hlt
pop
adc
xchg
mov
pusha
jb
scas
dec
cld
repz
fistpl
lea
jp
sbbl
xchg
cmp
mov
ss
loop
pop
aas
out
inc
xor
stc
lea
out
cmp
and
adc
mov
ja
jge
rorl
xor
fbld
je
push
fnstsw
lcall
mov
push
ss
jno
pop
xchg
sbb
jg
outsb
pop
push
and
pushf
shl
movsb
insl
push
je
movsb
sarb
insl
mov
sbb
loop
addb
aaa
pop
cmp
adc
scas
imul
mov
adc
insb
sub
sub
insl
ljmp
fisubrl
jl
movsl
repnz
mov
icebp
add
xlat
cltd
enter
jne
push
mov
mov
hlt
mov
data16
popa
rorl
sub
and
ret
push
stos
pusha
sti
jno
ss
xor
lods
scas
sub
in
or
pop
das
insl
scas
and
ret
ret
pop
xchg
mov
les
mov
sahf
ja
loopne
test
out
push
leave
xchg
loope
pop
add
xchg
test
into
mov
into
mov
insb
mov
pop
test
lret
mov
push
push
ret
popl
fstl
push
fstl
shrl
rcll
pop
sub
rcrl
inc
js
inc
lret
sub
sub
fistpll
repz
loope
scas
stos
xor
lea
jp
dec
fwait
loop
loop
sbb
adc
lock
xchg
pushfw
sub
sti
std
jmp
add
imul
js
je
data16
pop
xor
addr16
scas
mov
xor
xchg
xlat
in
out
push
and
lea
dec
into
and
push
inc
hlt
mov
loopne
pop
jo
lds
repnz
or
push
sub
shll
insl
enter
dec
jp
jle
xor
adc
push
aad
cmpsl
pop
cmp
enter
pop
sbb
dec
xchg
dec
push
sbb
xchg
jmp
jne
mov
push
fsub
cmp
pusha
add
jnp
add
data16
jnp
ret
jnp
je
mov
cli
sbb
push
loope
cs
in
sbb
mov
negb
lahf
push
adc
mov
sarb
pop
push
lods
dec
adc
jecxz
sbb
mov
inc
or
push
cs
clc
add
leave
jnp
or
mov
mov
cmp
sub
jne
mov
mov
ss
pop
pop
in
icebp
imul
es
ds
xor
add
mov
pop
aad
dec
int
inc
jle
pop
fwait
adc
out
cmp
orl
sub
call
pop
jmp
test
push
sahf
cmp
cltd
xor
in
hlt
mov
and
loop
fcomp
mov
fildl
scas
jae
push
push
jmp
mov
cs
gs
mov
dec
add
clc
lods
add
fiadds
xor
popf
xchg
inc
jecxz
rcll
fs
and
rcrl
insb
push
adc
ss
push
repz
adc
xor
jmp
cmp
lret
testl
adc
mov
out
and
mov
enter
xchg
add
or
or
or
inc
adc
xchg
out
xor
pop
jo
mov
jno
mov
outsl
std
icebp
loopne
mov
push
fmuls
push
stos
call
repnz
pop
mov
fwait
jg
std
call
jg
cld
cmp
mov
xchg
inc
jge
out
daa
test
cmp
xor
lods
outsb
mov
imulb
stc
xor
sub
je
jno
pusha
inc
insb
lahf
and
add
pop
cmp
push
pop
mov
mov
decb
bsf
sbb
popa
jecxz
cmpsl
sti
lea
mov
jmp
call
adc
arpl
inc
xchg
test
xchg
dec
lahf
push
inc
in
inc
push
jg
out
xchg
loopne
ret
hlt
push
pusha
xor
ret
sbb
and
call
jbe
lea
sbb
xchg
mov
enter
int
scas
xchg
mov
setge
outsb
or
jo
xchg
mov
dec
fdivp
imul
push
and
add
push
arpl
mov
movsb
sub
add
mov
pop
mov
test
pop
jnp
or
mov
ja
int3
and
aaa
jae
cmpsb
sbb
cli
add
dec
inc
hlt
insb
cltd
pushf
push
inc
loopne
push
out
fbstp
adc
mov
fisubs
xor
mov
and
sbb
aaa
ret
sbb
add
pop
into
adc
pop
out
ja
movsb
and
add
mov
fldenv
mov
repnz
adc
dec
or
movsl
sbb
les
fwait
popf
clc
testb
cmp
add
xchg
and
and
mov
inc
sub
dec
sub
iret
xor
xor
cmp
mov
test
push
mov
mov
add
ret
daa
sbb
in
and
int3
pop
pusha
and
lcall
popa
jg
cwtl
data16
out
xlat
fcmovb
xor
and
shrl
icebp
cs
in
add
outsb
jle
mov
imul
xchg
xchg
xchg
sbb
mov
insl
inc
inc
xchg
xor
mov
cmp
es
mov
add
mov
add
cmpsl
out
iret
pop
inc
mov
push
hlt
sti
movsb
jg
gs
cli
popa
cmc
add
idivb
in
rcrb
push
fstpl
dec
mov
repz
jle
mov
mov
and
pop
inc
or
add
fwait
sti
or
add
pop
inc
int
stc
out
mov
sbbl
out
fwait
xchg
sub
test
incl
or
pop
push
jns
mov
cmpsb
pushf
loope
cltd
sahf
lret
call
pop
push
xchg
iret
in
fbstp
mov
add
daa
pop
cld
pop
inc
clc
in
dec
cmp
xchg
xor
idiv
ret
fnstcw
cs
mov
jl
dec
mov
add
mov
and
out
mov
icebp
pop
dec
scas
es
mov
cmp
inc
push
mov
xor
pop
sbb
pop
inc
int3
cmp
inc
dec
pop
or
or
xchg
std
mov
and
xchg
mov
js
arpl
adc
orl
cltd
sbb
xor
mov
cmp
imul
movsb
xor
mov
in
gs
dec
pop
leave
mov
cmpsl
or
jmp
and
icebp
mov
mov
rclb
scas
pushf
fwait
dec
mov
jno
sub
popf
jge
test
push
jle
cmp
adc
mov
sub
inc
push
loopne
mov
cmpl
xchg
inc
dec
cmp
hlt
bnd
and
xchg
lea
inc
adc
rorb
and
orb
sbb
aas
xor
push
in
ss
dec
dec
add
adc
mov
xacquire
mov
aam
fiadds
subl
iret
mov
sub
shlb
sub
dec
pushf
xlat
aam
dec
cmpsb
pop
subl
sub
sti
out
sub
sub
out
es
push
sbb
xchg
stc
mov
ljmp
mov
shll
add
sbb
jmp
mov
call
sub
aam
scas
lds
cmpb
nop
test
sarb
dec
lods
jp
lds
test
xor
inc
inc
cmpsb
leave
lahf
loopne
push
inc
into
mov
clc
loop
lea
add
std
lods
ja
lret
ja
mov
lock
popf
in
popf
xor
push
incl
sub
cmp
test
jmp
in
inc
iret
paddd
stc
or
push
sub
inc
mov
jge
push
xchg
push
loop
gs
fwait
xchg
in
jnp
pop
xor
xor
rclb
push
rorb
sbb
adc
filds
sub
and
inc
lcall
push
xor
flds
mov
in
data16
jge
ret
loopne
xor
mov
lods
sbb
xchg
lret
imul
ds
add
xchg
adc
incl
test
fcmovnbe
negl
adc
out
cs
int
mov
lods
mov
inc
rcr
popf
pushl
mov
es
sbb
lods
mov
mov
or
inc
cmp
aad
pop
mov
inc
mov
jae
mov
les
xlat
pop
out
lcall
adc
push
xor
pop
xor
sub
ljmp
pop
sbb
and
mov
out
incb
scas
cmp
test
jmp
adc
or
sahf
mov
adc
push
lahf
fs
movsl
pop
movsb
mov
push
test
scas
or
jnp
mov
add
out
and
dec
mov
adc
in
cmp
mov
pop
mov
sbb
out
mov
and
adc
mov
bound
call
outsb
insb
data16
jnp
jmp
push
dec
mov
add
xchg
pop
xor
xor
sti
scas
jmp
fsts
aad
aam
enter
cs
and
push
mov
es
aas
inc
cld
cmpsb
xor
sti
insb
xchg
mov
adc
imul
mov
ja
ja
ret
dec
fbstp
out
fidivl
add
push
loope
or
pop
and
stos
aad
add
mov
inc
aaa
repnz
jb
fwait
test
sbb
push
insb
or
pop
arpl
mov
inc
inc
test
push
cwtl
cmp
imul
xchg
stos
fnstenv
mov
xchg
ss
out
sbb
xchg
aad
mov
jb
lds
in
pop
pop
mov
adc
cli
iret
push
dec
dec
idiv
cmp
mov
inc
mov
out
lahf
pop
gs
inc
xchg
leave
mov
or
pop
fcoms
frstor
lret
les
arpl
popl
mov
fdivrs
adc
push
inc
aaa
int
adc
fwait
adc
popl
dec
aas
lock
in
xchg
push
pop
jnp
lret
sub
ss
xchg
fs
adc
aaa
sbb
dec
in
and
mov
out
and
and
sbb
pushf
insb
push
adc
jo
add
fwait
in
sbbb
mov
stos
mov
roll
ss
mov
sbb
imull
xor
or
les
and
push
pop
js
lods
insl
pusha
mov
inc
pop
fisttpll
cmp
fnstenv
loop
inc
pop
xor
xor
data16
mov
popf
ret
push
mov
mov
or
das
les
add
xchg
cmpsl
scas
pop
fnstcw
in
inc
aad
push
sbb
pop
mov
and
sub
lds
jns
dec
push
popa
push
ret
shrb
sahf
stc
lods
js
sbb
adc
mov
shll
sti
mov
rol
mov
mov
test
or
sbb
dec
cmp
iret
adc
ret
jno
pop
enter
push
xchg
sub
xor
sub
fs
mov
mov
pop
lret
mov
cmpl
mov
incb
pushf
cmp
xchg
lods
or
into
into
mov
mov
cld
fld
arpl
sub
outsl
or
xor
aad
dec
in
push
and
adc
andl
out
test
pop
jbe
aaa
sub
mov
push
les
add
sub
out
xlat
jge
xchg
jge
xchg
rcl
mov
loope
sub
sbb
add
adc
pop
inc
mulb
pop
dec
and
mov
xor
xchg
push
filds
lahf
mov
insb
jp
add
js
and
mov
mov
pop
add
and
int
mov
sbb
addr16
int3
sahf
dec
sbb
adc
dec
cld
mov
addr16
sbbb
cmovg
decl
repnz
test
mov
mov
rclb
mov
mov
mov
jne
mov
dec
mov
dec
shll
dec
lock
xchg
aad
js
cmp
jbe
mov
out
nop
xchg
cli
test
xchg
aad
jnp
ja
cmp
int3
and
pusha
popf
fistl
int3
in
movsl
sub
adc
cmp
sub
adc
orb
or
or
fs
fidivrs
or
movsb
leave
adc
xorb
rolb
xchg
or
sbb
mov
dec
pop
and
xor
call
sbb
dec
fisttps
push
mov
mov
mov
adc
rcll
ficoms
cwtl
cmp
mov
push
xor
cli
cmp
adcb
mov
fucom
pusha
pop
jo
xlat
and
xchg
cli
je
and
adc
mov
cmp
sbb
in
int3
scas
popf
ret
push
orl
fisttpl
mov
mov
mov
push
xlat
shlb
add
xchg
dec
pop
mov
xor
jecxz
inc
out
scas
add
cltd
xlat
pop
pop
popa
fdivl
jmp
aas
or
cmp
lods
add
call
adc
incb
cmp
insl
sub
or
dec
int
pop
lock
inc
es
stos
xchg
lods
xor
push
int
dec
js
push
mov
pop
in
repz
stos
and
jecxz
lods
jle
mov
adc
or
imul
push
xor
push
scas
cmp
loop
testl
add
add
popf
xlat
jmp
mov
call
mov
daa
test
add
rorl
add
push
pushf
push
jl
repz
push
jmp
jg,pt
push
icebp
mov
outsl
nop
push
orl
stos
inc
cmpb
lret
into
pop
pop
xlat
int3
js
insb
jle
cmpsl
adc
sar
stos
cmp
out
dec
sahf
out
and
enter
jb
or
sti
outsl
cmp
adc
mov
pop
add
aad
pop
insb
push
orb
outsb
invd
cmc
lea
cwtl
lods
lea
scas
jmp
sub
mov
daa
jg
xchg
sub
ss
cmpsl
test
xor
adc
mov
jb
adc
adc
ret
pop
jg
pop
addr16
insl
pushf
jae
lock
xorl
data16
adc
xchg
test
repnz
adc
pop
shll
xchg
add
lret
call
xchg
pop
mov
fbstp
sub
outsb
cmp
sti
sahf
push
std
js
mov
das
dec
cmc
and
arpl
xlat
testb
sbb
mov
cld
dec
xor
leave
data16
mov
mulb
mull
mov
jmp
dec
in
mov
xor
fisttps
pop
rol
ss
imul
dec
mov
inc
test
xchg
push
js
cmp
mov
sbb
inc
daa
dec
jbe
mov
shr
mov
imul
or
je
ss
xchg
dec
addr16
popl
sub
push
outsb
jle
xchg
leave
bound
pop
cmpb
negl
mulb
ljmp
xor
pop
or
popl
int
outsb
ds
jge
shl
pop
scas
jnp
pop
cmp
scas
push
out
xchg
push
pushf
xchg
lock
aas
dec
daa
outsl
test
pop
mov
jns
pushf
or
ds
scas
xor
je
inc
insl
inc
adc
pop
stc
xor
shlb
mov
ja
iret
jb
fbld
dec
bound
mov
push
loopne
push
fmull
into
in
stc
fwait
or
push
dec
jg
xchg
fwait
sbb
gs
inc
cwtl
push
push
in
xor
fidivl
pop
rcrb
sti
mov
data16
sbb
cltd
sbb
xor
pop
pop
mov
mov
inc
mov
loope
enter
dec
roll
stos
js
or
sahf
jnp
jl
add
icebp
test
pop
jne
out
shl
cmpl
ja
shr
ret
incb
and
imul
stc
mov
sti
xchg
inc
sub
fidivs
jns
cmp
mov
hlt
push
ret
add
mov
testl
mov
rolb
and
lock
jae
inc
mov
leave
or
sbb
jno
fwait
mov
and
and
dec
xchg
xchg
arpl
adc
mov
loopne
sub
rcrb
pop
inc
in
movb
sbb
xchg
or
mov
aam
adc
bound
pop
add
push
sub
js
outsb
sbb
cld
sub
push
sbb
cltd
roll
popa
js
aam
inc
cmp
idiv
jae
mov
jg
adc
nop
int
add
mov
rcl
mov
mov
sub
jle
xor
sbb
sbb
xchg
pop
cmp
imul
jbe
adc
sbb
jmp
pop
and
pop
mov
sar
jecxz
aas
cltd
insb
mov
adc
add
adc
aad
cmp
ret
dec
mov
and
cld
sarb
mov
xor
xchg
sbb
shlb
mov
sbb
cmp
and
and
adc
sbb
shrb
mov
into
bound
fsub
add
push
loop
mov
test
cmp
cmp
adcb
in
lret
dec
test
push
das
cmp
and
jge
adc
aas
arpl
in
std
push
neg
fimull
pop
ror
sub
cwtl
sbb
and
into
dec
inc
xor
mov
cmc
test
push
mov
and
lret
and
fstpl
mov
cltd
dec
cmp
push
shl
fnop
imul
imull
mov
mov
shlb
mov
call
push
lods
pop
addr16
rcrb
mov
and
hlt
rcr
cmpsl
imul
jg
out
dec
jge
jns
or
bound
popa
push
mov
jnp
lret
cli
jae
mov
fistl
arpl
adc
inc
movsb
dec
in
movsb
push
add
cmp
pop
ret
add
and
sbb
jmp
repz
add
inc
fistpl
in
xor
adc
push
add
cmpsb
push
pop
clc
add
test
call
in
xchg
add
int
dec
jne
jne
adc
out
std
mov
les
test
xor
bound
and
mov
mov
push
scas
mov
in
or
push
push
cli
testl
popf
xor
mov
and
push
shl
pop
repnz
test
imul
imul
stc
cmp
js
jnp
icebp
jmp
jecxz
cmp
lock
sbb
loope
mov
adc
mov
jg,pt
sub
fistl
lea
enter
nop
insl
push
movsl
xchg
cmp
sub
push
mov
sub
mov
or
out
xchg
and
mov
shl
out
bnd
addr16
dec
lock
inc
loopne
inc
pushf
mov
lcall
inc
sbb
mov
mov
ret
mov
xor
pop
out
pop
jbe
ds
loopne
in
cmp
mov
mov
adc
cmpsb
outsb
arpl
or
mov
cltd
adc
adc
inc
fdivl
cwtl
lea
pop
sbb
dec
hlt
movsb
cld
ja
cmp
fdiv
cmp
lds
push
lahf
mov
sub
xchg
pop
push
mov
mov
cmp
loop
int3
adc
sub
adcb
add
lcall
add
mov
inc
mov
lds
mov
fidivrl
cmp
push
jecxz
xchg
pop
nop
fidivrs
lods
addr16
movsb
leave
aad
jecxz
daa
and
adc
in
cmp
int3
dec
fdivl
inc
fnstenv
popa
cmpsb
fdivs
adc
scas
fidivs
mov
lods
cwtl
sub
and
cltd
cmp
dec
pop
mov
xor
pop
jnp
xor
and
int3
aam
sbb
pop
outsb
sub
jae
imul
add
xor
pop
jae
xlat
jo
std
jno
nop
popf
aad
push
xor
sbb
imul
loope
test
xchg
pop
jle
aas
je
sub
ja
jle
enter
mov
and
xchg
xchg
aas
dec
jmp
mov
push
fadd
or
xor
push
mov
xchg
imul
cmpsl
pop
das
cli
xlat
fucomip
test
inc
cmp
inc
sti
dec
push
dec
push
jmp
push
aaa
or
xlat
test
pop
outsb
cld
pmullw
fnstsw
mov
push
pop
in
out
xor
mov
mov
or
repz
xor
cmpsl
and
adc
sub
scas
cli
testl
clc
xor
push
add
pop
lcall
cltd
add
outsl
pminsw
xchg
inc
and
mull
movsl
aad
andb
cmp
push
push
arpl
mov
jg
popf
or
insb
pop
mov
fidivrl
in
xchg
xchg
pushl
out
push
stos
test
jae
in
rolb
in
ret
out
leave
dec
mov
mov
rcrb
inc
rol
xor
das
xchg
or
sti
test
mov
mov
dec
cmp
xor
loope
repnz
mov
inc
cmp
or
xor
das
adc
xchg
dec
cmp
fdivrs
or
mov
jl
and
movsl
jno
mov
es
push
pop
xor
pop
mov
shll
out
lret
xchg
and
outsb
outsl
inc
je
push
push
jmp
mov
bound
sub
mov
cmp
adc
mov
scas
in
mov
imul
sub
mov
dec
icebp
sarl
lods
adc
jne
and
pushf
ds
sub
mov
int
lahf
sub
pop
pop
faddl
pusha
and
dec
stos
inc
dec
rorb
test
push
loopne
pop
mov
in
rcrl
inc
ss
pop
lahf
sbb
divl
sub
dec
and
xor
out
in
lds
orl
xchg
mov
inc
cld
cmp
xchg
movsl
arpl
add
rcll
rclb
cmp
sbb
mov
loop
insl
push
fdivs
and
loopne
mov
cmp
call
shl
leave
rcrl
js
mov
nop
adc
fwait
and
sbb
leave
sbb
pop
mov
icebp
inc
jo
push
ja
nop
call
dec
xchg
mov
mov
ds
sub
mov
icebp
pop
jae
pop
popa
mov
imul
pop
ljmp
dec
push
mov
test
add
fldenv
sub
jge
cmc
fidivs
mov
cs
jp
dec
pop
outsb
pop
loopne
jnp
xchg
aam
cmc
shll
lcall
leave
dec
loopne
cmc
les
jnp
mov
in
inc
inc
imul
repz
push
push
push
inc
data16
jo
xchg
popf
add
aam
imul
dec
push
add
not
xor
sbb
aaa
and
in
mov
add
lahf
xchg
into
popa
dec
sbb
fidivrs
sub
cltd
xor
notl
sub
add
mov
adc
and
mov
pop
push
pop
jge
test
xlat
in
jp
pop
adc
lret
into
mov
pop
cwtl
push
ficomps
fwait
lods
les
int
sbb
pop
mov
int3
mov
xchg
jl
mov
xchg
sbb
xchg
pop
cmc
cli
xchg
add
push
outsl
mov
fsubl
jmp
jne
cli
scas
xor
sub
and
mov
add
fs
dec
xchg
hlt
sahf
outsb
shlb
and
xlat
pop
mov
xor
mov
mov
cmpsb
sbb
mov
push
mov
mov
xchg
hlt
or
pop
add
push
testl
mov
lds
dec
adc
enter
cmp
popa
lahf
test
cli
push
xchg
lret
jb
jnp
sbb
addr16
inc
hlt
lret
push
adc
sbb
notb
ss
and
loope
adc
add
dec
aad
sub
iret
sub
cmp
inc
cmp
or
inc
mov
mov
popf
mov
leave
ret
pop
sub
xchg
adc
cmpsl
dec
mov
and
and
cs
loop
scas
push
iret
loopne
fmuls
fimull
lret
mov
xor
xchg
adc
loop
mov
xchg
pop
sub
sbb
sbb
sub
pop
mov
push
and
jmp
mov
xor
pop
int
aad
sub
and
sub
xor
push
cmp
imul
xchg
jns
clc
jp
lock
push
or
pushaw
daa
fmul
xor
das
xor
inc
divb
and
dec
inc
test
xor
js
in
ficoms
push
jae
arpl
dec
lcall
push
bound
cmpsl
mov
bound
adc
jl
mov
mov
mov
scas
mov
pop
dec
adc
test
out
jbe
cli
or
inc
rcrl
es
xor
jecxz
xor
idivb
movsl
and
add
fsubl
cld
cld
pusha
negb
lret
in
les
ja
outsb
shll
arpl
call
pop
xor
test
mov
clc
add
incl
lahf
dec
scas
hlt
push
jnp
dec
lods
jo
icebp
es
shll
lea
into
cmp
notl
pushf
jo
inc
icebp
nop
scas
cli
inc
push
push
sbb
push
mov
mov
add
jg
rcrl
insl
mov
mov
es
gs
inc
cmp
lods
scas
out
in
jo
or
pop
fsubrl
dec
popf
nop
mov
movsl
fstpt
lret
loop
out
mov
xchg
mov
sbb
adc
mov
mov
sub
aas
and
ret
popf
mov
imul
mov
mov
test
lcall
outsl
adc
sti
les
out
inc
pop
xlat
in
enter
push
add
push
push
js
js
int3
loop
or
or
sub
clc
shl
mov
inc
arpl
mov
sbb
mov
pushf
and
jg
mov
outsl
outsl
out
push
aas
into
mov
out
or
jno
mov
negb
mov
out
adc
mov
mov
arpl
xchg
pop
insb
stos
cmp
sub
aad
cwtl
lock
push
and
dec
xchg
inc
jle
dec
push
or
or
out
fcompl
push
ret
push
push
enter
arpl
lcall
add
inc
popf
out
sbb
rcrb
pop
inc
sub
xchg
cmp
mov
xor
sub
mov
pop
mov
xchg
cmpsb
ret
rolb
aas
enter
jecxz
jle
xchg
and
add
mov
shl
mov
mov
fcoms
push
fs
inc
inc
or
loop
adc
push
mov
jmp
push
stos
cmp
stc
jb
mov
pop
pop
inc
mov
or
xor
xor
jp
jl
xchg
xor
inc
scas
push
lock
add
push
ret
jg
test
xchg
clc
dec
mov
lea
ds
lea
cs
push
out
add
loopne
xor
test
call
or
aaa
in
sbb
sub
inc
in
add
shll
cmp
cmp
dec
cmp
sbb
cltd
cmp
sbbb
sahf
popa
adc
ja
mulb
cmp
scas
mov
test
dec
mov
sbb
leave
jle
stos
mov
push
mov
push
xor
shll
loop
cld
mov
xor
lock
pop
adc
mull
stc
mov
aad
and
jp
cmpsb
jg
ds
xor
mov
jmp
imul
test
fbld
jno
je
arpl
rcrb
mov
das
sbb
fyl2x
xchg
call
pop
mov
in
repz
or
daa
sar
mov
adc
shlb
cmp
push
aam
mov
pop
lcall
mov
in
and
pop
lret
out
push
xchg
sbb
ret
cli
fsubr
mov
pop
test
das
in
push
js
add
mov
mov
fsubl
xchg
cmpsl
push
hlt
in
cmp
out
ret
shrl
add
add
jmp
fsubrl
enter
dec
enter
fnstcw
lcall
xchg
cld
xlat
imul
push
inc
in
mov
and
pop
shll
sub
push
xchg
push
test
or
arpl
pop
adc
pusha
test
mov
jns
andl
ds
pop
sbb
cwtl
mov
xor
lahf
ja
jl
fsubs
add
or
cs
jns
mov
icebp
jns
xchg
mulb
repz
addb
sti
shll
sbb
js
and
fildl
pop
cmp
fstpl
sbb
out
pop
nop
sarl
jb
test
xor
jle
or
sahf
das
and
and
testb
out
xlat
xchg
cmp
out
add
jle
mov
fsts
leave
int3
and
add
sub
pop
xchg
sbb
notb
jp
shlb
cmc
lahf
pop
fsubs
cwtl
leave
and
andl
sti
inc
sub
sbb
xchg
xchg
and
dec
leave
push
xor
imul
jne
pop
mov
xchg
nop
out
or
mov
inc
sahf
mov
sub
loopne
pop
je
sti
jmp
mov
loop
int
shll
xchg
sbb
cmpsb
dec
dec
fldenv
cld
pop
jp
in
mov
sub
cmp
out
inc
lds
xchg
imul
xchg
arpl
fstl
shrl
das
xor
pop
inc
mov
mov
jl
jp
push
lods
test
sti
lock
adc
jmp
enter
pop
xchg
ss
test
jl
movups
mov
pop
fcmovbe
mov
mov
fstpt
and
movl
pop
out
shl
int3
pop
jno
jge
mov
in
push
and
test
ret
or
mov
inc
jne
pop
repnz
mov
in
lret
cmp
imul
cli
movntps
daa
jecxz
std
cmp
data16
fcoml
lods
push
mov
in
aaa
or
push
cld
ds
sbb
xchg
mov
rolb
repz
rcll
lret
sbb
in
adc
icebp
ja
cmp
mov
sbb
dec
std
mov
xor
popa
push
mov
mov
mov
dec
jno
push
jae
cli
ja
inc
jp
xchg
call
je
mov
inc
xor
out
cmc
cmp
adc
push
movl
jge
jbe
js
mov
inc
xor
and
movl
pop
out
in
push
add
xor
nop
mov
loopne
imul
jb
jmp
lock
mov
pushf
test
xor
push
addb
cmp
aad
adc
jo
inc
sub
insl
xchg
pop
les
and
jmp
and
mov
dec
addl
xlat
outsb
jp
ret
dec
inc
aaa
push
xchg
cmc
in
mov
popf
and
mov
out
bound
jne
in
xor
xor
out
movsb
into
mov
add
lahf
push
in
mov
xor
dec
in
inc
loop
jle
add
imul
movsb
stc
and
inc
cmp
pop
sbb
iret
mov
and
dec
push
ss
push
scas
ss
pop
icebp
xchg
sbb
mov
pop
mov
loope
loope
scas
sub
jb
ja
in
lret
jge
push
rcrl
sub
cmp
jl
inc
xchg
inc
pusha
and
insl
dec
push
popa
sub
push
pushf
rolb
lret
mov
pop
mov
fsubrs
push
inc
call
idivb
imul
mov
gs
cmpb
hlt
pop
popa
out
xchg
jmp
clc
add
sbb
jae
adc
mul
out
inc
stc
mov
push
fisttpl
sti
pop
mov
xor
leave
repz
fidivs
imulb
add
andb
and
mov
ja
movsb
cs
and
dec
aaa
sbb
mov
cmp
pop
mov
repz
jge
jbe
xor
enter
xor
jnp
bswap
movb
stc
popf
dec
int3
insl
enter
mulps
jo
dec
mov
in
and
adc
push
add
dec
or
dec
int3
xlat
stc
fmul
xchg
fld
mulb
enter
je
loope
pop
mov
out
int
xchg
out
test
cmp
or
cld
clc
fsubrl
aas
sub
daa
mov
push
and
mov
aaa
fildl
sbb
mov
sub
mov
nop
cs
movsb
out
mov
push
jns
in
xor
pop
push
cmp
scas
idivb
jp
adc
loope
adc
scas
push
movsl
pop
cmpsb
sub
lods
xor
mov
sti
hlt
cmp
mov
cli
mov
xor
mov
out
xchg
mov
push
insb
adc
dec
dec
dec
push
inc
adc
or
jae
lds
je
in
or
pcmpgtd
jb
inc
lods
int3
arpl
cmp
fistpl
pop
cltd
adc
xor
jno,pt
idivb
xchg
and
add
arpl
cmp
xchg
stos
mov
cmp
sub
das
xchg
int
in
stc
sbb
jp
int3
xor
jecxz
add
les
cli
cli
jb
movlhps
outsb
cmpl
stc
clc
stos
sbb
sub
aad
popa
mov
ljmp
in
add
or
adc
cmp
repz
sbbb
outsl
sub
les
clc
mov
sub
ljmp
cmpsl
lods
ja
jns
add
fmulp
mulps
fbld
rorb
enter
inc
ss
inc
adc
int
push
dec
fiadds
mov
in
adc
pop
push
in
shll
sbb
push
mov
jbe
loop
push
jno
rcll
bound
insl
and
scas
test
pop
push
mov
push
incb
and
sti
arpl
repnz
sub
sbbl
mov
and
test
lahf
sbb
ret
repz
mov
jns
sbb
xor
adc
aas
push
add
aam
or
cmpsl
push
clc
ja
mov
inc
mov
aas
test
mov
faddl
sbbb
jno
jl
andb
xchg
mov
scas
hlt
cmp
push
sar
sub
xchg
mov
inc
lods
xor
bound
dec
lret
lock
jae
movsl
loopne
pop
popa
clc
xlat
int3
add
aaa
xor
mov
pop
jno
ljmp
subl
insl
jno
xchg
sar
stos
test
pop
xlat
mov
pop
dec
roll
xchg
sub
fiaddl
jmp
pop
inc
les
test
ds
inc
sbb
aad
les
dec
push
movl
add
or
xchg
fstl
mov
lret
inc
push
inc
sbb
addr16
cmp
out
jne
out
xchg
loop
hlt
lret
mov
jne
xorb
iret
push
jle
pop
stos
outsl
aas
jne
movl
xchg
pop
stos
push
repnz
and
leave
xor
inc
jle
call
mov
xor
xlat
orl
enter
or
movl
pusha
pop
jne
mov
stc
adc
xor
push
test
jbe
push
cmc
cmp
jno
in
add
sub
inc
mov
push
ds
mov
lcall
sbb
xor
lds
ficoms
mov
gs
out
push
push
jb
sub
orl
or
iret
repz
dec
jbe
loope
inc
bound
outsl
mov
pop
xor
dec
popa
jno
jl
cmp
jp
movsb
sub
into
inc
les
lret
add
adc
inc
scas
lods
inc
roll
sbb
fcomps
jg
jns
xchg
pop
mov
enter
cmp
jl
sbb
stos
mov
shrb
rcll
jbe
xlat
and
call
dec
gs
dec
sbb
lea
jle
lea
neg
push
jns
ret
sub
and
adc
imul
mov
ja
mov
jno
movsb
test
sub
cmp
push
stc
pop
cli
xchg
jmp
ljmp
in
push
enter
jp
cltd
ret
fildl
and
dec
call
sarb
dec
push
inc
mov
or
sub
in
jecxz
jno
bound
ds
cmp
test
inc
or
and
dec
push
je
jge
and
jb
int3
xchg
std
or
adc
aad
jge
jb
sub
push
mov
adc
fdivrp
mov
inc
stos
adc
mov
les
and
add
enter
and
inc
and
rcr
pop
out
loop
pushf
sub
cwtl
mov
cmp
sarl
inc
cmpsb
xor
shlb
mov
inc
mov
scas
loopne
inc
or
pop
push
out
sbb
sbbl
lret
les
in
cmpsl
mov
sub
mov
pop
scas
mov
rorl
hlt
push
jbe
mov
cmp
pop
jge
rep
cmp
lret
inc
lret
pop
lea
inc
inc
pop
ljmp
gs
std
test
imul
push
mov
cld
add
pop
pop
pop
mov
dec
mov
shlb
mov
je
xsha1
cmpsb
dec
jb
sub
in
pop
adcl
mov
mov
mov
pop
stos
pop
jl
pop
sbb
sub
mov
cli
in
clc
pop
icebp
cmp
inc
ficoml
je
or
fbld
lret
xchg
mov
jecxz
fidivl
inc
mov
ret
push
testl
xor
mov
mov
sub
add
sbb
adc
fistps
out
cltd
bound
mov
mov
dec
jmp
jno
jno
xor
or
mov
sbb
lock
and
xor
adc
dec
lods
jae
bswap
out
das
cmpl
lea
aaa
loopne
inc
jbe
imul
lret
dec
mov
pop
and
ret
mov
or
add
xchg
aaa
div
pop
sahf
add
add
int3
ljmp
push
mov
adc
fistl
xchg
dec
cwtl
dec
ret
je
lahf
mov
mov
jge
test
lods
out
dec
sub
mov
dec
jle
add
ret
pop
into
jmp
fildl
sub
subl
pop
hlt
aas
jno
sbb
cmc
je
inc
test
or
jmp
mov
dec
mov
filds
das
adc
shlb
aad
mov
cmp
fcomip
scas
outsl
xchg
mov
jge
out
jno
cmp
push
jge
sbb
in
test
push
pop
xchg
pop
and
sbb
push
and
cld
test
clc
xlat
push
outsb
inc
dec
clc
sbb
ljmp
adc
mov
jb
dec
enter
and
sbb
mov
inc
sbb
movsl
dec
shlb
push
popf
mov
or
mov
subl
xchg
inc
lret
test
loope
jo
lret
pushf
lods
ret
mov
jp
popf
xchg
sbb
mov
jb
subb
in
adc
cltd
mov
ljmp
xlat
lock
sbb
or
ret
jecxz
test
xchg
push
adc
mov
and
xchg
rcrb
push
inc
dec
and
out
mov
push
sub
dec
lret
out
sbb
outsl
fdivs
inc
popf
sbb
mov
das
sbb
cmp
nop
or
imulb
cmp
mov
adc
pop
mov
ret
xchg
cmc
gs
outsb
in
pop
jno
addr16
xchg
jp
fiaddl
mov
sub
push
lret
mov
out
inc
adc
je
inc
stc
fyl2xp1
sar
sbb
arpl
imul
pushf
mov
inc
lods
movsl
je
dec
or
or
xor
cmpl
or
movl
sar
or
add
movsl
xor
js
out
adc
push
lds
lcall
shl
mov
xor
hlt
dec
movsl
sbb
pop
push
lea
sub
and
inc
add
push
or
int3
in
divl
dec
movsl
xor
mov
cmc
xchg
xor
addr16
add
cmp
sub
out
sti
iret
pop
sub
sub
iret
and
imul
sar
or
adcb
cs
add
and
xchg
mov
pop
imul
scas
cmp
popf
jp
shll
mov
push
fbstp
rorb
mov
push
push
cmp
pop
pusha
or
xchg
in
leave
subl
mov
fistl
hlt
rorl
fwait
rcll
clc
pop
xor
cmpsb
leave
cmp
mov
sti
adc
xchg
mov
or
jp
ret
test
call
jle
mov
inc
sti
sbb
stos
jae
xor
cs
imul
xor
pusha
xchg
pop
xchg
pusha
pop
mov
jo
fiaddl
inc
call
xor
sbb
sub
lods
repnz
movsb
or
pop
push
mov
dec
ljmp
insl
in
testl
mov
outsl
sti
or
lods
lcall
addr16
cmp
shll
int3
xor
inc
jae
test
lret
rorb
jle
mov
imul
adc
sbbb
imul
stc
repnz
jmp
inc
lahf
mov
jmp
add
xor
inc
stos
in
repz
xchg
pop
lret
jae
out
test
rcll
cmpsb
mov
pop
filds
fistpll
bound
push
test
pop
xchg
aam
pushf
xor
push
xchg
jp
scas
pop
out
jmp
scas
and
pop
jo
jo
andb
out
in
movsb
cmp
jp
ret
cmp
push
in
cmc
loope
test
test
in
adc
insb
data16
cmp
outsb
mov
push
jl
lock
xlat
or
imul
pop
lret
roll
dec
lret
sub
jns
sub
mov
and
and
out
aas
f2xm1
mov
add
mov
cs
jnp
dec
daa
cmp
xchg
rcrb
or
adc
adc
addl
jae
mov
add
stos
cmp
sarl
leave
jbe
out
aas
push
lahf
push
pop
sub
sti
mov
xchg
fistl
icebp
adc
xlat
decl
ds
into
and
jmp
sbb
bndstx
aas
xor
adc
test
daa
sahf
jmp
icebp
jnp
mov
cmp
pop
push
jg
dec
xor
mov
test
dec
ret
or
shrb
jmp
aad
jp
mov
add
sbb
mov
into
mov
cmpsl
daa
fidivl
shl
inc
cmp
lcall
sub
dec
stc
in
outsl
imul
push
inc
adc
stos
xchg
pop
push
leave
mov
fmuls
flds
sub
in
test
adc
dec
sbb
cmp
push
lret
fs
jno
adc
aas
pop
shll
das
repnz
lcall
pusha
cmp
mov
mov
cli
or
cmpb
jmp
cmpxchg
sub
or
jmp
push
jl
cmpsl
int3
adc
lret
je
pop
std
stc
lods
loope
or
inc
inc
jno
sub
mov
insb
popa
frstor
jo
sbb
call
movsb
jecxz
adc
cld
std
push
gs
sarb
jmp
xor
add
xor
enter
std
inc
sub
jnp
je
push
push
jge
xor
or
pop
out
mov
xchg
ret
push
daa
test
shrl
scas
jbe
outsl
sbb
jmp
frstor
les
mov
cmpsb
je
mov
fisttpl
into
adc
in
fsubrl
jbe
push
inc
test
xlat
mov
es
sub
push
mov
pop
dec
jns
cmp
jg
jbe
or
xchg
pop
cs
cltd
lods
mov
cmp
push
and
jp
add
shl
dec
mov
adc
stc
out
xchg
ss
mov
aam
into
inc
sub
aad
nop
jno
movsl
dec
push
call
add
leave
adcl
jb
dec
lea
rcll
in
ds
inc
inc
hlt
mov
fucompp
clc
bnd
jns
inc
mov
jo
fcmovnu
popf
dec
push
rcl
push
mov
sub
ds
mov
pushf
mov
add
repnz
cli
sbbb
cld
mov
sbb
mov
repz
push
pop
mov
push
adc
or
stos
lock
sub
pop
and
aam
adc
mov
dec
xor
and
fidivrl
rorb
lcall
je
push
jb
mov
out
fnsave
fldl
lret
add
outsb
jbe
adc
mov
fs
inc
push
cli
clc
adc
push
pop
and
outsb
cmp
push
out
lahf
pushf
jle
repz
rcll
or
leave
xchg
scas
cmp
jnp
imul
popf
sub
popf
mov
es
inc
fwait
testl
popf
in
divb
and
sub
push
in
addl
enter
out
jl
sbb
call
jmp
cmpsb
jns
mov
insb
lds
adc
push
xchg
ljmp
mov
or
push
rcrl
or
and
lahf
mov
enter
pop
insb
and
xor
scas
xchg
pushl
cld
call
jbe
xlat
adc
add
fcoml
out
mov
subb
sub
mov
adc
es
mov
mov
jo
dec
jg
and
in
lea
scas
into
mov
cli
rorl
cwtl
int3
pop
lahf
popa
test
dec
xchg
sbb
lods
adc
test
scas
add
mov
sub
pop
xlat
mov
cmpsl
xor
cwtl
add
pop
in
fldt
adc
aaa
jecxz
xor
pop
js
mull
addr16
xor
inc
pop
xor
test
divl
mov
push
or
dec
rolb
jno
and
sbb
movsb
cld
adc
sbbl
and
push
sbb
stos
adc
cmp
xchg
lret
sar
xor
das
sub
add
test
mov
aaa
sahf
inc
mov
pop
stos
add
and
adc
lods
add
inc
into
gs
push
cli
mov
fimull
fcompl
sar
fsubrs
dec
or
lds
push
andl
aam
in
jno
mov
stos
shll
enter
push
jge
jmp
arpl
in
dec
pop
roll
data16
jmp
mov
daa
pop
mov
ret
iret
sbb
repnz
outsb
test
test
and
jae
ficoms
mov
imul
push
orb
fdivrl
push
aam
data16
shlb
sbb
shll
sub
test
jno
cmpl
rcrb
inc
incl
or
xchg
pop
mov
gs
je
jno
mov
js
jbe
mov
adc
sbb
fs
pushf
testb
incl
sub
pusha
cmp
inc
addr16
xchg
cmp
pop
pop
out
test
test
pop
push
jle
call
dec
adc
sbb
idivl
dec
ds
gs
cmp
mov
pop
loope
sub
inc
push
aaa
xor
fiadds
mov
leave
push
mov
jb
ret
push
ss
jno
mov
push
icebp
add
inc
jb
xchg
mov
mov
sub
cwtl
sub
aas
shrl
mov
or
pop
in
sbb
adc
repz
cld
add
loop
adc
xchg
xchg
or
mov
and
jl
aad
js
ds
xchg
mov
and
loop
sub
rclb
loopne
push
or
inc
mov
mov
inc
lea
daa
clc
sub
xor
mov
pop
xchg
sbb
sub
cltd
push
jle
stos
out
xor
ja
aam
add
clc
mov
xchg
frstor
int3
jbe
adc
shll
ss
xchg
inc
mov
pop
dec
or
in
stos
push
ficomps
call
or
test
lret
xchg
adc
cli
popl
sbb
les
nop
test
andl
int
nop
dec
popf
sbb
jmp
mov
rorl
jns
sub
imul
jmp
xor
movsl
fsubr
jno
jl
mov
out
loop
pusha
je
mov
ret
dec
xor
popa
adc
inc
adc
jp
push
sub
jmp
inc
popf
ret
jl
rcr
loope
xor
and
cmpsb
fidivs
cmp
pop
jle
pop
pop
pop
sbb
loopne
push
int3
outsl
stos
sbb
movb
rorb
mov
xchg
cs
rorl
sahf
mov
lock
repz
push
jmp
xchg
cmp
jmp
mov
inc
iret
fmuls
sbb
inc
stos
ffreep
push
add
push
leave
mov
leave
xchg
pop
inc
pop
test
cmp
test
repnz
adc
jg
xor
jno
mov
dec
push
lods
jae
stos
nop
xchg
int3
cmpsb
push
push
pop
or
fstpl
aas
je
dec
in
push
xlat
test
pop
xchg
pand
add
cmpl
loop
jle
jp
mov
in
xor
test
outsl
in
xchg
gs
jb
add
out
in
cmc
sarl
push
dec
in
adc
pop
and
nop
mov
insb
cltd
pop
mov
lcall
inc
sub
jno
push
test
int3
add
pop
call
imul
add
je
std
data16
movsb
and
xchg
push
daa
push
ljmp
into
mov
mov
pop
stos
rol
fdivs
jp
jns
inc
js
jp
sbb
pushf
inc
push
lock
jge
imul
leave
and
outsl
rcrl
jmp
sub
sub
pop
outsb
mov
out
sbb
push
mov
mov
int
enter
push
xor
in
lret
jne,pt
ret
xchg
mov
into
mov
lret
lahf
inc
je
insb
jno
jle
push
scas
lcall
inc
stos
lods
push
pushl
sub
mov
shl
int
lea
mov
dec
push
xchg
inc
mov
dec
cld
bound
sti
adc
clc
jle
jb
imul
mov
pushl
call
subl
stos
orb
mov
push
push
ljmp
mov
mov
or
mov
out
lahf
push
jp
out
cmp
je
pop
mov
xchg
shll
xchg
int
jne
imul
pop
xchg
push
add
push
sbb
dec
repz
mov
sub
cld
enter
nop
or
test
cmp
mov
mov
std
mov
sub
lds
dec
rclb
jmp
hlt
fiaddl
pop
pop
adc
test
push
inc
inc
into
jne
or
lcall
mov
mov
rcrb
xchg
push
push
xchg
mov
mov
popa
sbb
jle
subb
not
dec
inc
and
sub
int3
mov
cmp
popa
mov
fisttpl
out
push
jecxz
push
icebp
int3
ja
int
sbb
push
daa
pop
int3
out
xor
adc
push
mov
cld
mov
mov
cmpl
and
mov
clc
mov
mov
jle
sbb
es
ret
out
int3
push
mov
adc
sub
pop
iret
xor
xlat
js
mov
jno
test
repz
es
popf
push
jb
and
push
sahf
pop
push
iret
popf
push
test
lcall
and
push
mov
xchg
sbb
insl
loopne
inc
test
lods
mov
andb
xchg
sub
inc
inc
iret
fwait
mov
shrb
jb
mov
dec
dec
sbb
pop
cmp
sub
imul
es
in
fidivrl
xor
push
outsl
push
or
sub
andl
out
test
xchg
xchg
lds
das
adc
nop
sub
in
add
fwait
rcl
shlb
rorl
push
loop
ret
subl
repz
sub
cmp
addr16
loopne
movsl
xor
adc
push
push
bound
jp
popf
pop
push
lods
aam
adc
je
pop
rorb
jb
push
jno
adc
jecxz
sub
test
push
int3
push
fsubrl
push
je
inc
fcmove
push
jge
ljmp
and
test
fldcw
popa
xor
fistpll
dec
push
inc
sbb
inc
je
shlb
push
cmc
lret
pop
lock
adc
mov
mov
sub
ljmp
fisubs
dec
mov
pusha
or
ss
sahf
jecxz
mov
and
inc
rcrl
mov
sbb
pop
loopne
dec
out
sbb
xor
test
ds
imul
jns
imul
cmp
dec
rorl
in
testb
sub
pop
stos
clc
xor
add
mov
xchg
popa
push
sub
loope
jne
and
in
pop
mov
scas
inc
lret
pop
add
flds
inc
or
cmpb
inc
add
mov
bound
aad
psrad
cmp
pop
gs
jle
inc
mov
rclb
jecxz
outsl
add
or
or
shll
imul
sbb
sbb
sahf
or
lret
fcomps
sbb
test
inc
pop
sub
incb
mov
call
add
pop
inc
subl
mov
dec
or
and
sbb
lcall
es
fildl
add
jae
dec
in
loopne
dec
push
xlat
jb
jns
push
adc
sarb
inc
pop
loope
lahf
out
xchg
sub
scas
jb
or
mov
or
xor
adc
pop
stc
inc
sub
gs
leave
hlt
mov
or
pop
adc
cmp
rcll
jp
inc
in
cmp
pop
mov
decl
testl
lcall
mov
cmp
ret
xor
mov
xor
pop
pusha
sub
jecxz
and
dec
mov
lods
sub
xlat
in
call
mov
in
xchg
test
mov
jecxz
stc
sbb
mov
aaa
xchg
jae
fstpl
add
cmc
int
sti
xorb
ffree
lds
or
iretw
mov
call
out
sarb
inc
or
ljmp
dec
sub
pop
sti
adc
or
addr16
and
fwait
shl
xchg
ret
jg
int3
mov
inc
pop
mov
cli
push
mov
jmp
jnp
lods
add
jo
fst
mov
or
test
pop
mov
in
sub
test
add
imul
mov
mov
inc
sub
dec
pop
mov
rclb
lret
in
jg
iret
jp
imul
rcrl
sub
test
push
mov
das
jge
dec
fld
xor
jecxz
scas
jmp
out
insl
es
or
shr
or
mov
sbb
sub
subb
mov
add
aam
jg
mov
jae
int
lock
int3
enter
aas
sbb
adc
inc
and
lret
in
movsl
xchg
test
adc
dec
jge
fxch
lds
stc
and
bound
jmp
into
imul
pushf
dec
jmp
out
jb
enter
sub
arpl
cmp
jle
ret
mov
mov
shl
pop
dec
idivl
adc
mov
xchg
std
dec
iretw
into
stos
dec
mov
call
cs
adc
sub
xchg
ret
mov
dec
cwtl
xchg
jne
ret
sbb
movb
stos
jb
push
add
mov
lahf
xor
push
not
shr
lcall
jge
in
loope
test
stos
xor
adc
stos
hlt
mov
add
and
and
pusha
out
adc
inc
lock
dec
sub
fdiv
jge
mov
cmp
and
cmp
push
idivb
pop
inc
dec
in
xor
adc
cltd
lea
mov
pushf
pop
ret
cwtl
adc
jbe
arpl
or
push
arpl
jmp
test
addr16
dec
ret
push
pop
insb
cmpsb
pop
xchg
int
clc
test
sbb
cli
adc
insb
add
fdivrl
mov
xchg
pop
repnz
jns
int
mov
xchg
in
adc
jle
push
and
icebp
pusha
negl
testl
pop
mov
es
bound
nop
lahf
insl
cli
mov
jnp
mov
popf
rolb
js
in
enter
xchg
hlt
lret
shll
lahf
shll
aaa
jp
hlt
arpl
mov
adc
testb
les
test
subb
and
aaa
pop
jne
fs
mov
sub
pop
mov
pop
stos
jl
mov
je
mov
sti
jne
adc
mov
and
pop
jae
push
xor
out
jecxz
ds
adc
ret
adc
movsl
in
inc
xchg
adc
mov
jl
cmp
push
dec
out
sbbb
loopne
stos
sbbl
jo
cld
test
std
repz
xchg
stc
push
mov
push
fistl
lea
sub
and
movsl
pop
push
leave
pop
lods
mov
pop
test
fnstcw
popa
lret
and
dec
in
push
cli
clc
inc
ljmp
adc
ficoml
lods
pop
jg
lea
rcll
dec
pop
lea
int
xor
add
push
fcomi
mov
ror
jmp
xor
jp
mov
int
insb
jmp
loopne
cmpsb
dec
mov
push
hlt
shll
add
loop
imul
daa
and
sbb
add
sub
mov
and
adc
sbb
cli
shll
push
imul
add
jo
dec
les
cld
mov
pop
push
and
xor
or
sub
fwait
xchg
xor
stc
fadds
jle
push
xor
jbe
sub
and
mov
lret
shl
xor
aas
sbbb
ficompl
fsubr
xor
cmp
shlb
out
mov
sbb
ds
and
mov
fs
inc
cli
or
xor
fldenv
gs
mov
pop
mov
dec
mov
mov
mov
push
fwait
jmp
icebp
je
call
gs
in
jns
inc
popa
popa
dec
lds
bound
in
mov
pop
jmp
inc
mov
pop
xchg
lret
test
mov
inc
cltd
pop
lea
hlt
aam
adc
sub
fists
mov
push
adc
cmp
jmp
add
testb
add
and
lock
stos
stc
fstpl
cmpsl
xor
roll
push
xchg
cli
insl
sbb
pop
stos
add
stos
roll
and
push
add
aad
ljmp
call
sarb
imul
stos
or
inc
jl
pop
fsubl
or
bsr
add
ss
sub
ret
lods
outsl
mov
xor
jae
dec
dec
outsb
mov
pushf
mov
inc
insl
stos
xor
add
xchg
scas
mov
dec
mov
or
in
sbb
or
jae
jb
cmpsb
ja
xchg
movl
pop
es
xchg
adc
sbb
ds
pop
dec
imul
or
insl
xor
ret
pop
inc
lret
je
aas
mov
mov
es
mov
adc
or
data16
lcall
bound
push
insl
mul
pusha
cwtl
lret
dec
push
dec
mov
pushf
xchg
aaa
xchg
fldcw
fstps
add
cli
subl
sbb
xchg
repnz
push
call
in
lods
pushf
xor
jmp
adc
sub
imul
cmpsb
push
test
shlb
add
imul
in
pop
sbb
popf
out
daa
mov
and
pop
ljmp
dec
dec
cmp
pop
and
xchg
sbb
mov
mov
mov
sti
mov
inc
iret
dec
push
sub
xchg
aam
movb
and
push
push
popf
into
cmp
and
xor
sbb
stos
incl
fcmovbe
jg
push
or
pop
shlb
xor
lods
dec
pushf
fidivrs
repz
fwait
sub
fs
xlat
push
iret
icebp
fs
mov
in
cli
adc
outsl
xchg
stos
mov
jbe
or
pushf
mov
jp
clc
test
jb
or
jno
and
dec
cld
sbb
mov
xchg
push
dec
imull
das
sti
fld
stos
sbb
lcall
push
and
cmp
faddl
cs
imul
bound
stc
pop
mov
leave
sti
cmp
movsb
xchg
notb
xchg
movsb
jp
pop
sub
and
sub
cmp
mov
aaa
xor
dec
mov
daa
jns
int3
sahf
sub
cmpsl
icebp
inc
xor
lret
lods
adc
pushf
xor
push
rcr
aam
rep
dec
mov
jg
pop
and
popl
scas
rcrl
std
jmp
jmp
movsl
and
fmull
jmp
mov
and
out
rcr
ficoml
mov
icebp
fistps
into
ds
add
sub
jl
addl
in
sub
arpl
lods
test
mov
xchg
jmp
mov
mov
cli
in
push
inc
cmpsb
mov
inc
or
and
dec
scas
sub
xchg
scas
sbb
insb
dec
movsl
mov
lcall
lds
cmp
addb
and
std
pop
pushf
inc
add
lods
sbb
mov
sti
das
les
mov
sub
rcrl
push
and
add
imul
xor
std
inc
aad
inc
push
movsb
xchg
sbb
push
cld
mov
and
cmp
xor
xchg
es
lds
xor
push
mov
clc
outsl
dec
popf
sub
push
dec
hlt
out
data16
inc
out
jl
pop
jge
loop
jno
scas
in
add
cmc
dec
sbb
fistps
scas
stc
daa
aam
insb
xor
movsl
pop
popf
lock
insb
jmp
and
or
pop
ret
mov
int
test
adc
jp
cmp
dec
imul
pop
mov
test
dec
and
aaa
faddl
fdivrs
jae
bound
das
xchg
or
rorb
enter
mov
mov
imul
out
cmp
pop
pushf
testb
shrl
in
cld
and
das
lcall
cmp
aas
mov
shrb
mov
fnsave
and
arpl
cmp
ret
leave
mov
jbe
pop
mov
sti
ss
inc
stos
aam
add
mov
ret
sti
addr16
cmp
in
outsl
pop
negl
movsb
jno
ds
addb
sbb
adc
repnz
in
pop
cmp
outsb
cmp
mov
dec
inc
test
pop
sbb
jae
mov
mov
sbb
pusha
push
outsl
iret
aaa
adc
outsl
mov
bound
pop
or
xchg
xchg
leave
insl
pushl
test
add
scas
into
int
pop
dec
ss
mov
push
jmp
pop
insl
inc
fstps
xchg
xchg
icebp
mov
mov
pop
lcall
aas
adc
int3
ficomps
xchg
xor
aas
and
jp
xor
gs
pop
add
push
cmp
jns
aam
mov
daa
std
mov
lret
pop
pop
and
imul
je
adc
or
cmp
adc
mov
aam
pop
pop
test
js
das
and
jecxz
xchg
mov
repz
mov
dec
adc
jle
xchg
add
push
mov
adc
daa
adcl
push
push
imul
popf
shrl
sbb
pop
mov
in
popa
pop
cwtl
repz
pop
adc
js
ds
adc
and
mov
inc
xchg
in
fisttpll
push
pop
mov
pop
shrl
dec
adc
mov
xor
and
xchg
cli
daa
fs
sarl
add
cmp
movsb
push
push
scas
mov
mov
addb
pop
or
loopne
pushf
push
nop
and
jo
pop
mov
jg
outsb
or
imul
in
lahf
jno
repnz
fistl
mov
out
leave
mov
ds
sahf
cmp
ljmp
inc
xor
jp
xchg
pop
icebp
scas
push
mov
dec
outsl
or
push
sbb
sahf
aad
loope
push
sahf
inc
xlat
fmull
add
js
add
into
ret
cmp
cmpsl
mov
and
insl
insl
nop
lcall
mov
jle
nop
dec
jle
xchg
xor
aad
aaa
and
mov
jg
imul
mov
dec
sbb
xor
out
xor
decl
sbb
movsb
outsl
xor
jne
cs
and
jge
push
mov
inc
jns
sbb
jge
lret
movsl
push
dec
aad
mov
stos
push
push
xor
mov
aaa
das
repnz
jno
hlt
push
les
icebp
dec
ret
mov
push
push
out
nop
xchg
push
and
jo
jg
add
test
or
xchg
in
sbb
xor
sub
shll
xor
xchg
inc
mov
xor
mov
mov
sub
das
mov
push
out
nop
pop
push
hlt
push
imul
pop
negb
mov
adc
int3
ficoms
popf
add
aam
fistps
mov
lret
popa
mov
lahf
scas
cmp
jns
mov
jecxz
add
dec
dec
sbb
movl
cmp
je
and
xchg
call
js
adcb
mov
and
inc
sbb
and
cld
lahf
cmp
andl
mov
or
sbb
arpl
cmp
testb
cwtl
dec
jae
pop
aam
je
and
bound
or
inc
lret
roll
roll
and
fimull
cmp
mov
hlt
xor
dec
push
mov
test
dec
insl
mov
loope
mov
cmpsl
pop
lret
add
cmp
fidivrl
mov
or
lods
stos
xor
mov
push
mov
sahf
cmp
xchg
rcr
addl
in
add
sahf
hlt
test
push
mov
pop
mov
push
fs
dec
rcll
or
xchg
mov
push
and
addr16
out
pop
push
mov
loop
cmp
movsl
xor
mov
cmp
mov
jns
cmp
fnstsw
pop
cmp
inc
xor
push
pop
repnz
ss
sub
inc
ret
loopne
cmp
push
cmp
bound
aas
mov
jmp
pop
add
push
xor
xchg
fdivrs
aaa
cs
xchg
mov
push
test
dec
mov
outsl
out
push
xchg
mov
repnz
std
mov
inc
addr16
pop
sub
sub
jl
inc
es
adc
out
xor
pushf
mov
data16
js
push
or
cmp
mov
fisubs
pop
les
jbe
jmp
int
shll
test
xor
inc
mov
in
fcompl
lcall
enter
dec
inc
into
ret
out
pop
dec
inc
push
insb
out
into
movsl
adc
insl
iret
xor
aam
sub
popa
fdivrs
jae
scas
xor
adc
subb
xchg
jp
lcall
daa
ret
imul
mov
add
fsubrs
test
sub
mov
and
enter
clc
inc
cmp
sub
pop
mov
sbb
pop
cmp
stos
sbb
adc
cmp
xchg
scas
imul
adc
aad
lret
mov
xor
xchg
add
fisttps
push
xchg
ss
outsl
in
adc
jae
imul
inc
fildl
xor
mov
cmp
cld
lock
and
shlb
mov
xor
nop
cmp
inc
xlat
cmp
bound
fdivrl
stc
mov
lret
scas
imul
jbe
mov
mov
pop
xchg
loop
repz
fwait
jp
dec
in
jbe
mov
and
fisubrs
push
addb
notl
sub
sub
dec
or
jmp
notb
out
aas
xor
jecxz
pop
aam
push
mov
gs
fidivrl
test
mov
and
flds
leave
push
add
dec
mov
jno
mov
sub
stos
jne
mov
arpl
aas
and
int3
jge
or
push
adc
es
mov
xchg
and
and
and
xchg
out
push
pop
pusha
lods
xchg
cwtl
jp
adc
xchg
outsl
adc
out
icebp
xor
fdivrl
fidivrs
sqrtps
mov
inc
add
inc
fcoms
push
enter
xchg
cmp
iret
lods
jl
inc
enter
pop
scas
adc
lods
inc
in
loopne
ret
push
movsl
jne
sbb
das
mull
das
or
or
daa
das
and
daa
sub
imul
and
jae
mov
mov
sub
pop
inc
sbb
adc
aad
xchg
jg
mov
push
mov
sti
test
pop
sarb
add
std
stc
jecxz
pop
mov
adc
arpl
je
dec
sub
outsb
add
push
repnz
jb
mov
outsl
adc
shlb
faddl
cld
out
test
or
sahf
ja
mov
sub
cmc
pushf
fists
inc
push
test
inc
push
inc
add
pmaxub
hlt
sarl
mov
js
dec
bound
out
call
mull
xor
mov
cltd
jno
in
sbb
dec
ret
mov
adc
call
mov
out
inc
clc
pop
gs
and
dec
sbb
mov
sbb
sbb
mov
icebp
ljmp
call
pop
into
dec
pop
push
movsb
jl
repz
cmpl
aaa
popf
imul
ds
pop
shlb
out
pusha
into
outsb
aad
enter
pop
add
cwtl
sub
nop
pushl
sub
sub
out
mov
hlt
and
jae
fisttpll
mov
dec
jg
sub
aam
arpl
lret
pop
lods
and
fwait
or
or
dec
call
popf
xchg
or
not
fadd
inc
hlt
leave
pop
enter
mov
mov
js
lds
or
outsl
sti
es
mov
outsl
fnsave
mov
mov
data16
adc
fimull
imul
jle
jmp
inc
push
or
test
ds
mulb
cmpsl
push
xlat
mov
scas
adc
mov
xchg
test
mov
xchg
sub
mov
jg
mov
mov
and
enter
or
push
and
repnz
cli
js
nop
mov
push
sbb
or
inc
jns
push
xchg
dec
lahf
and
gs
pop
jle
sbb
mov
pop
jo
sub
cmp
xchg
and
xchg
push
fst
bound
xchg
cltd
lods
or
imul
xor
sub
or
and
rcll
sbb
adc
mov
setnp
mov
adc
inc
xchg
out
sbb
mov
sbb
mov
dec
cmp
fisttpll
lock
jl
pop
icebp
add
loop
cmp
cmp
in
or
movsb
cmp
out
int
mov
xchg
sbb
push
pushf
mov
pop
pop
in
cmp
jl
mov
adc
int
imulb
fcomps
push
xor
xchg
xchg
sar
cmc
testl
aas
mov
je
repz
roll
add
pushf
mul
sub
lods
xchg
test
mov
inc
call
imul
cvtdq2ps
mov
inc
add
mov
testb
hlt
js
cmp
sub
mov
movsl
popf
cmp
sub
adc
es
fdivl
or
pop
lret
fucom
add
sub
test
jp
xchg
test
or
inc
mov
lret
enter
aad
push
ds
xor
inc
fimull
ds
pop
cmpsl
pop
pop
xchg
insb
stos
adc
cmp
in
add
fistpll
inc
inc
jge
push
shll
iret
lahf
lock
pop
leave
enter
bound
adc
mov
pcmpeqw
cmpsb
in
push
xorb
mov
push
cmovb
call
in
mov
fs
ss
fcompl
inc
mov
push
sub
cs
sub
icebp
notl
out
mov
add
outsb
sarl
inc
jecxz
dec
clc
gs
notl
outsl
pop
sahf
loopne
xor
push
cld
clc
adc
mov
add
je
or
or
clc
mov
pop
orl
push
les
adc
pop
jnp
jp
dec
in
test
and
push
mov
subl
fsubr
imul
leave
fdivl
mov
fwait
adc
mov
ds
test
jp
fwait
cld
cld
jp
pop
lret
repnz
add
jecxz
insl
ja
xchg
push
pop
xor
xchg
jp
dec
pop
fdivl
stc
leave
adc
mov
insl
jmp
mov
xchg
pop
and
mov
or
lds
cmp
inc
push
jns
fs
and
push
adc
dec
and
adc
les
popa
test
outsb
cmp
pop
lahf
mov
imul
jp
out
push
leave
cld
std
sub
pusha
cmpsl
scas
inc
aam
sbbl
mov
int
jo
cmpsb
add
fwait
loope
mov
ds
jne
test
mov
adc
mov
and
popf
addr16
in
jne
loopne
daa
and
push
fmulp
add
dec
add
mov
repz
sahf
out
lret
pop
enter
std
mov
mov
xchg
ljmp
aaa
jo
sbb
adc
sbb
stc
mov
adc
mov
push
sahf
mov
fstps
sub
sub
pop
jbe
jl
lcall
addr16
fldenv
mov
inc
test
aaa
and
stos
jno
flds
clc
mov
insb
data16
xchg
stc
std
mov
sub
mov
mov
outsl
fsubr
mov
repz
scas
and
jo
in
aad
jb
push
xor
jns
cli
or
and
not
pop
shr
adcb
test
jle
lea
stc
jmp
popf
cltd
sti
cmp
mov
arpl
or
jl
iret
and
cltd
cmpsb
mov
pop
jl
test
dec
mov
jge
mov
inc
cltd
js
ret
and
std
xchg
dec
mov
jns
add
add
cmpsb
mov
mov
insl
push
xchg
pop
mov
lcall
dec
adc
loope
bound
add
jae
mov
mov
push
and
aad
and
lds
jo
sbb
and
pop
inc
xchg
cs
mov
cmp
test
dec
lds
and
adc
mov
jle
in
adc
adc
xchg
fs
sub
sbb
ficoms
xor
xor
push
mov
ljmp
sub
dec
aas
push
mov
sbb
aad
add
in
or
jne
test
inc
adc
sbb
pop
popf
push
arpl
aas
mov
jg
out
aaa
mov
insb
cld
cld
call
push
xchg
sbb
inc
lods
std
push
into
xchg
dec
xor
pop
cli
cmp
mov
std
cs
cli
sub
mov
aas
mov
push
push
popf
push
int
sahf
lcall
repnz
bound
psubsb
xor
scas
movnti
div
inc
add
push
cmpl
adc
mov
enter
sarb
dec
adcl
movsb
subl
cmp
mov
arpl
sti
jle
mov
add
jmp
shrl
jo
cmp
sbb
out
sahf
scas
aam
cs
jmp
push
jb
mov
inc
sub
ljmp
jp
xchg
push
jmp
out
ret
sub
andb
outsl
ljmp
mov
call
pop
inc
xchg
xchg
inc
adc
and
jae
ret
in
mov
cmp
lods
scas
mov
adc
mov
sahf
aas
fdivl
adc
arpl
mov
xchg
inc
and
push
imul
ret
lahf
inc
test
pop
or
pop
fdivp
mov
xchg
pop
lahf
mov
push
xor
fcompl
jmp
outsl
sub
iret
aad
mov
out
mov
lcall
test
mov
or
stc
dec
loop
int3
sbb
hlt
aad
mov
push
mov
insl
xor
xor
pop
imul
mov
bound
xor
shl
imul
pop
gs
scas
dec
lea
test
out
shlb
jno
push
xor
sub
je
cmpsl
scas
add
mov
add
or
fcompl
jns
call
xchg
push
pop
dec
jecxz
test
clc
pop
xchg
xchg
inc
sbb
inc
xchg
xchg
push
mov
push
cmpsb
pop
push
in
inc
jns
dec
imul
adc
fsubrl
sbb
daa
enter
pop
arpl
or
adc
imull
sti
pop
pop
loopne
mov
cmpsb
aaa
lahf
ljmp
pop
jb
in
jb
push
loop
push
xchg
in
push
loopne
call
jbe
push
cmp
cmc
leave
leave
addr16
xor
cmc
xchg
add
rolb
pop
jne
addr16
imul
clc
adc
sbb
dec
cli
pop
imul
mov
mov
lcall
push
repnz
aas
incb
pop
rcr
and
and
add
cmc
cmc
or
fnstcw
out
ss
adc
test
out
movsl
lea
in
and
repnz
add
cmc
or
xor
lods
lret
ds
adc
cmp
cmp
pop
jo
fcoms
pop
xlat
ret
push
jnp
sub
out
pop
scas
sub
hlt
push
shl
inc
fwait
outsl
imul
movsb
jecxz
outsb
int3
repnz
jle
sar
enter
cld
idivb
stc
sub
sti
js
adc
loop,pt
repnz
jg
fistl
add
faddl
lock
in
mov
sub
lcall
push
mov
cmpsb
cs
mov
mov
dec
cmp
out
dec
mov
ficompl
xor
sub
inc
lods
xchg
mov
mov
or
xor
push
cld
or
enter
mov
movsb
mov
inc
adc
mov
push
fisubrl
jb
inc
and
iret
popl
mov
xor
data16
inc
xchg
adc
mov
test
dec
lock
xchg
cmp
iret
aam
clc
leave
push
lret
cmovle
xor
fstp
hlt
cmp
aam
pop
jl
aaa
inc
movb
ds
mov
pop
adc
pop
lods
mov
pop
pushf
lret
mov
scas
jno
push
cmp
nop
adc
int3
sbb
ss
mov
jne
xchg
mov
dec
dec
popf
add
into
dec
xor
dec
mov
nop
cmp
stc
cmpsb
mov
sub
mov
sarb
add
mov
imul
inc
push
push
inc
mov
imul
mov
insl
stos
push
clc
bswap
call
cmp
out
mov
push
sub
lret
adc
outsl
out
and
cld
scas
ret
aas
xor
mov
lcall
fistpl
imul
stos
sub
ret
loop
pop
int
insl
jp,pt
arpl
inc
scas
push
mov
push
dec
push
and
mov
out
and
or
movsl
adc
std
les
mov
and
aas
dec
inc
adc
xor
std
stos
dec
arpl
stc
mov
and
std
push
gs
popa
leave
movsl
add
pop
aaa
mov
and
jmp
out
and
and
enter
data16
push
iret
jle
xchg
fidivs
sbb
outsl
or
aad
sti
inc
and
xchg
mov
mov
bound
daa
std
stos
iret
test
scas
sarl
pusha
push
mov
pmulhw
mov
adc
int3
sbb
mov
sti
rcrb
mov
push
adc
mov
insb
popf
xchg
pop
xor
call
mov
out
stos
and
sbb
jnp
fs
jo
adc
clc
xchg
jecxz
mov
insb
cs
and
pop
adc
or
shrb
dec
jg
inc
iret
jb
and
cmp
addb
pushl
inc
insl
iret
mov
iret
sti
fidivrl
je
jo
inc
fldt
or
push
or
cld
in
jg
rorb
lret
push
les
adc
inc
jp
idivl
cld
or
pop
pop
add
inc
adcb
lahf
insb
test
test
mov
inc
push
in
sub
in
dec
mov
daa
daa
lahf
mov
jno
loop
cmp
sbb
lods
fidivs
jp
and
jne
jecxz
adc
mov
mov
adc
mov
jge
inc
hlt
jne
int3
aas
daa
sti
in
mov
testl
out
and
addr16
add
out
outsl
pop
xlat
fwait
pop
push
js
xchg
pop
fcoml
insb
cli
adc
cmpsl
jno
jne
out
jmp
loop
test
notl
cmpsb
jl
push
jae
nop
and
lods
xchg
push
ffree
sub
push
sti
iret
arpl
mov
or
push
mov
xchg
add
movsb
inc
mov
test
adcl
dec
jge
mov
xlat
push
dec
mov
sub
cmp
lods
cmp
push
xchg
push
cmp
std
mov
mov
aaa
stc
popf
nop
jg
into
mov
pop
jne
shll
dec
pushf
mov
clc
dec
jecxz
scas
mov
std
sub
cmpsb
sub
or
fisttps
ja
sbb
movsl
add
jle
rcrl
inc
cmpsb
aad
pop
and
cmp
nop
popa
push
or
mov
cmp
jns
xchg
int3
jl
int
pushf
popa
sub
sbb
xor
pop
xlat
push
in
mov
mov
arpl
call
jae
loopne
mov
jne
mov
das
loope
data16
leave
and
push
pop
les
mov
dec
cwtl
pop
add
popa
inc
out
push
dec
xchg
mov
out
jg
pushf
inc
movsb
mov
mov
sbb
add
ret
shrl
insb
ss
inc
push
sbb
push
call
lods
add
add
pop
push
test
into
cs
mov
jne
add
sti
lcall
mov
or
fdivr
and
pushf
jns
cltd
ret
cmpsb
mov
out
jp
mov
sbb
cmpb
sub
cmp
cmp
xchg
lret
pop
jp
fdivrs
mov
jecxz
xchg
mov
fwait
xchg
das
test
orb
pop
out
push
je
jns
or
sub
and
es
rcll
repz
push
dec
sub
mov
gs
xor
and
insb
stc
jl
pop
cltd
imul
add
in
mov
popa
xor
ss
xchg
dec
pop
xchg
push
jno
lds
imul
adc
push
dec
xor
je
int
add
push
dec
cmpsb
aaa
shl
imul
inc
into
mov
fnsave
aam
xchg
add
fbld
icebp
jnp
push
in
leave
dec
lea
pop
fmulp
les
and
inc
std
leave
rcrb
pop
pushf
and
mov
sbb
cmp
push
gs
sbb
in
lea
inc
subb
pop
xor
lock
pop
ficoml
mov
push
repnz
push
mov
xor
call
adc
jg
dec
mov
test
jp
sbb
rol
iret
in
sub
and
sub
xor
adc
aas
mov
loope
int
int3
insb
divl
jno
sub
cmp
add
jbe
bound
rorb
mov
cmpsl
mov
jp
insb
enter
ljmp
out
add
addl
jg
faddl
aad
shrb
lock
aam
cs
inc
cltd
pushf
dec
inc
fwait
popf
movsl
mov
add
outsb
or
xchg
repnz
test
push
popa
jb
xor
rclb
fnstcw
sub
mov
push
cld
ja
pop
xchg
sub
mov
ja
add
adc
cmp
ret
xchg
cli
sahf
jbe
pop
dec
insl
test
sbb
insb
push
ret
or
es
and
inc
cli
xchg
xor
inc
in
insl
andl
lods
dec
mov
mov
xor
cmp
push
sbb
mov
rol
and
scas
addr16
mov
scas
push
pop
adcb
cmp
cmp
mov
xor
jge
or
in
int3
inc
popa
mov
cmc
lock
std
mov
lcall
int
add
mov
mov
scas
pop
std
stos
lds
jp
cltd
addl
hlt
mov
test
das
pusha
xchg
aad
ret
lds
mov
les
and
inc
sbb
cmpsl
inc
xchg
jnp
ficoms
xor
dec
pop
addr16
movb
adc
mov
mov
bound
xchg
inc
mov
aaa
cmp
pop
fisttpl
inc
xchg
jae
ret
push
out
sarl
xchg
pop
hlt
mov
sbb
gs
xchg
aaa
repnz
jb
or
xorb
mov
lea
rorb
adc
scas
mov
das
repnz
addb
cmpsl
xchg
dec
jge
in
jl
test
cwtl
inc
daa
mov
test
push
add
mov
mov
hlt
jecxz
push
andl
scas
insb
xor
loopne
inc
fs
push
dec
sbb
mov
dec
mov
subl
sbb
test
lods
xor
pushf
repnz
cmp
cltd
test
imul
mov
shr
jg
cmp
push
jmp
xchg
inc
sbb
ret
adc
and
leave
push
test
imull
push
stc
or
sub
sti
loop
pop
sbb
xchg
push
or
push
loopne
mov
xor
mov
cmpsb
sti
popa
lcall
inc
inc
lahf
and
outsl
jb
cltd
pop
jle
add
sbb
cmpsb
jns
int
push
add
mov
mov
hlt
push
into
leave
aaa
pop
xchg
mov
rcr
mov
ret
sub
popf
and
loopne
sub
sbb
mov
clc
sarb
out
sbb
ljmp
pop
stos
xchg
pop
xchg
lret
outsl
jle
mov
icebp
lea
std
gs
scas
lea
test
inc
xlat
aam
pop
adc
push
adc
aaa
and
je
push
inc
add
adcl
movsb
lahf
es
jle
ja
xchg
sar
and
pop
fnstcw
lret
inc
sbb
xor
notb
cmpb
inc
mov
jl
jle
cmp
shrl
or
iret
arpl
les
sub
jbe
sub
enter
push
xlat
cltd
inc
xor
add
test
clc
jb
sbb
pushf
mov
pusha
cmp
push
addr16
inc
jg
cld
pop
stc
lds
dec
pop
sbb
dec
shrb
dec
out
mov
push
ja
imul
sbb
repnz
test
sub
aas
or
mov
data16
jge
test
call
lock
mov
aas
test
imul
loopne
push
or
mov
aam
adc
and
jns
add
leave
xchg
call
lock
bound
mov
jo
xchg
mov
pop
dec
push
aad
xlat
and
in
mov
insl
lcall
sbb
jmp
push
add
gs
fcompl
push
cli
xor
mov
in
mov
sbb
or
lods
fninit
sbb
xor
jb
inc
aaa
jae
push
mov
jle
mov
inc
adc
adcl
mov
fstpl
pop
cwtl
data16
pusha
jns
jmp
fisubrs
push
fwait
adc
call
out
test
cmp
xchg
iret
pop
divb
jb
leave
xchg
or
inc
iret
pop
push
xchg
xor
xchg
leave
inc
bound
jno
inc
mov
jle
rcr
and
addr16
out
mov
lret
ja
mov
push
nop
cli
adc
mov
rcr
xchg
sub
inc
stos
mov
mov
in
sub
insb
std
mov
dec
xchg
xchg
or
cmp
ret
jl
pop
rcrl
cmp
add
mov
fs
subl
sarb
jmp
gs
enter
mov
in
mov
fiadds
jg
in
mov
mov
add
repz
xchg
jge
outsb
int
push
fwait
pop
lock
inc
push
lahf
push
in
cmp
pop
xlat
lods
xchg
add
repnz
movsb
rcll
pop
sub
push
outsl
mov
jl
and
dec
out
mov
and
adc
jne
jae
push
scas
insl
mov
mov
pop
xor
cmpsl
cmp
mov
psrlq
mov
xchg
adc
xchg
xor
mov
dec
xchg
cli
jecxz
mov
divl
hlt
cmpsb
not
and
enter
jmp
std
push
push
cmp
lods
cmp
cmp
sbb
mov
andl
mov
dec
stos
jo
mov
ljmp
sub
jge
sub
mov
daa
xchg
addr16
movsl
ds
mov
test
push
xlat
divb
pop
in
aas
lcall
ja
shrb
jecxz
dec
lods
add
or
push
lea
call
pusha
mov
lds
daa
mov
inc
pop
int
xor
xor
mov
jno
push
push
jb
aaa
inc
inc
lock
test
in
mov
add
inc
jp
xchg
inc
mov
or
cmpsl
sbb
pop
clc
fiaddl
cwtl
sbbl
sarl
push
dec
clc
jecxz
push
mov
test
pop
mov
leave
xchg
cmp
or
jo
jae
sub
add
or
and
sbb
fdivs
int3
add
test
aad
mov
xor
xchg
pop
xchg
pop
in
pop
sbb
add
shl
cmp
cli
pop
mov
fsubrl
xor
popa
dec
pop
shrb
xor
xlat
test
mov
push
and
inc
pop
out
bswap
sarb
and
sbb
ja
xor
jle
rol
fcoml
add
add
xor
divb
cmp
pop
push
jmp
xor
loopne
xor
mov
mov
pop
inc
pop
faddp
cmpsl
jecxz
and
shlb
fndisi(8087
imul
push
pop
sub
inc
cli
mov
push
loope
cwtl
mov
scas
sbb
jno
cmpsl
dec
sub
dec
jns
dec
pop
fdivrs
push
jmp
xor
sahf
ss
pop
cmpsb
lcall
clc
xchg
add
ja
loope
das
xor
cld
je
xor
fcmovu
or
mov
mov
jae
pop
dec
scas
add
cmp
imul
jge
sbb
fbld
cmpsl
sbb
bound
mov
pop
rolb
jbe,pt
push
mov
jb
mov
jo
jae
ja
jo
jb
icebp
mov
push
loop
add
cmp
movsb
add
pop
lret
mov
push
popf
popl
dec
loop
xchg
add
xchg
cltd
xor
cmc
jns
dec
testb
leave
push
dec
pushf
mov
sub
popf
movsl
mov
jb
push
xor
adc
movsb
pop
sub
cld
outsb
xchg
dec
mov
inc
fmuls
enter
sub
push
fimuls
pop
add
add
fdivrl
imul
inc
sbb
stc
push
notb
cltd
xchg
stos
mov
inc
outsb
dec
into
pop
outsb
out
or
xchg
add
enter
shrl
dec
andl
stos
scas
mov
imul
inc
popa
cmc
vpextrw
lds
std
xor
popa
mov
scas
insb
lahf
xchg
arpl
in
call
adc
jecxz
sti
cmp
sahf
stos
icebp
mov
mov
pop
aam
jecxz
xor
cmc
ds
fdivs
mov
popf
and
dec
test
dec
and
enter
xor
lcall
inc
mov
sarl
xchg
nop
add
pop
jae
cmp
imul
push
outsb
scas
jp
pop
aas
fimull
out
jl
mov
jnp
fcoml
test
cmp
add
rorb
fiadds
sbb
das
mov
adc
out
out
pusha
sbb
mov
push
push
stc
aaa
inc
lds
mov
xchg
pusha
mov
insl
mov
add
scas
push
icebp
sub
test
xor
mov
inc
not
xlat
shll
push
mov
push
dec
sub
dec
xor
scas
hlt
shll
mov
xor
sub
push
cmp
add
lds
gs
orl
mov
hlt
popa
lock
das
daa
pop
and
out
xchg
xchg
das
push
js
jle
shr
cmp
leave
cmp
pop
mov
mov
popa
jecxz
push
cmp
insb
push
cmc
rcll
cwtl
jne
pushf
mov
insb
dec
xchg
jns
mov
and
jg
jle
jl
loop
push
sbb
cmp
push
mov
and
jge
fsubrl
cmp
call
fnstsw
add
xchg
in
push
outsb
jl
movl
inc
sti
test
pop
jp
jno
jge
mov
dec
subl
mov
add
jg
mov
lret
add
and
xchg
int
in
fs
ds
out
adc
pusha
mov
lods
mov
mov
enter
mov
xchg
cmpsl
mov
aam
cmp
cmp
aas
jbe
ror
push
movsb
inc
insb
test
jb
add
dec
add
popf
sbb
gs
sbb
jle
mov
jmp
shlb
push
stos
pop
clc
jo
sub
push
in
mov
and
scas
xor
push
loopne
and
iret
in
mov
into
inc
enter
cmp
push
daa
xchg
out
xchg
lods
out
addr16
dec
movsb
pop
ja
cli
popw
lcall
inc
mov
fdivrl
test
mov
adc
mov
fstpt
lods
sbb
add
mov
mov
test
lcall
test
push
mov
adcb
cmpsl
mov
pushf
movsb
fstpt
and
call
ret
daa
and
jbe
mov
mull
push
fnstsw
push
pop
pushf
shrb
std
mov
add
outsb
push
jno
movsl
and
inc
imul
sahf
add
push
int
push
or
pop
lcall
mov
cmc
int
mov
scas
fisttpll
test
sbb
loop
fcoml
jnp
pusha
pop
scas
mov
add
pushf
in
jno
sub
cs
jl
push
jg
out
jge
cmpsl
cmpsb
pop
mov
jge
push
push
dec
dec
or
push
imul
push
xor
fdivs
xchg
and
dec
sbb
cld
imul
pushf
adcb
nop
cmp
adc
fnstenv
mov
jp
repz
adc
cmpsl
out
or
jns
mov
cmovbe
jae
cmpsl
jg
pusha
mov
dec
mov
ret
and
mov
sub
xchg
xchg
lods
cli
push
cli
add
cmp
mov
xchg
or
rcrl
jcxz
cmpb
getsec
mov
rcl
mov
inc
or
jns
dec
sbbb
inc
das
xor
and
in
pop
sbb
mov
sub
xchg
cmp
mov
push
and
mov
repnz
lret
push
pop
add
cmc
cs
icebp
loopne
iret
call
cmpl
mov
int3
mov
pusha
xchg
xor
fnstcw
adc
jo
sbb
sbb
je
in
pop
shl
jne
or
jo
loop
push
push
xchg
sub
cmc
sbb
xor
dec
inc
push
mov
sbb
bound
jecxz
and
fiadds
cwtl
xchg
dec
add
pop
and
sbb
inc
cwtl
sahf
adc
pop
xor
lock
sti
mov
imul
cmp
movsb
jmp
mov
push
push
push
cs
aam
sub
pop
std
jbe
fnstsw
sub
cmp
fstp
cmp
bswap
adc
pushf
mov
push
std
shll
loop
push
sub
dec
sbb
push
fdivrp
or
scas
jno
push
dec
mov
sub
mov
mov
dec
movsb
aad
in
jge
mov
les
das
sarb
in
pop
adc
pop
cmp
xlat
mov
ret
and
xchg
pop
jae
dec
xor
ljmp
es
adc
fdivrs
repz
adc
mov
pop
ljmp
lods
cmp
imulb
adc
add
mov
dec
sarl
cmpsl
jne
cld
or
dec
add
cmpsl
xchg
xor
dec
adc
in
dec
xor
into
mov
cwtl
pop
mov
xor
lret
mov
cmp
mov
pop
mov
push
mull
add
sub
shl
nop
scas
je
mov
mull
cmp
xor
mov
and
xchg
mov
jecxz
mov
test
out
fcom
cwtl
dec
lds
cmp
pop
subl
mov
lods
cmp
xor
sbb
adc
enterw
adc
pop
lret
mov
jb
and
dec
pop
cmc
mov
sub
sub
or
in
je
aas
mov
push
cmp
fnstcw
shrl
insb
enter
push
test
mov
ja
dec
xorb
lcall
cltd
jp
loop
insb
pop
push
dec
push
xor
shlb
pop
push
lods
pop
inc
pop
pop
out
outsl
rclb
jns
pop
xchg
dec
xchg
stc
ss
filds
adc
dec
sbb
push
mov
and
or
aaa
cmpsl
inc
aad
cs
sub
cmc
mov
inc
addr16
data16
int3
jb
adcl
stc
sbb
in
inc
add
pop
test
push
xchg
addr16
enter
mov
aaa
lahf
fists
mov
sub
jmp
mov
repnz
and
daa
xlat
aad
rol
sub
or
mov
lret
adc
inc
fistpl
xlat
into
int
iret
or
pusha
pop
insl
xlat
out
icebp
mov
pop
jg
loop
repz
adc
inc
adc
jno
inc
add
mov
lahf
xchg
std
popa
and
fs
cmp
outsl
dec
aad
jecxz
sub
inc
mov
stos
pop
mov
or
test
sbb
lock
adc
sub
dec
or
inc
mov
dec
in
jnp
mov
aaa
mov
lcall
jb
cmp
mov
push
fsub
ss
and
lods
mov
popa
ljmp
jg
ja,pt
adc
stos
lods
xchg
shlb
dec
ficompl
lahf
inc
sti
movsb
into
xchg
mov
xor
dec
sub
jg
jns
xchg
les
lcall
sbb
shll
push
cld
nop
add
cmpb
daa
xor
mov
xchg
push
faddl
stc
jl
xlat
aam
cltd
inc
rcr
cmpl
lods
mov
jge
or
push
cmc
sbb
ret
inc
or
clc
lock
inc
mov
loopne
in
pop
cltd
xchg
add
jg
cmp
nop
repz
cmp
cld
fnstcw
pop
or
cmp
setnp
cmp
popf
iret
jmp
and
mov
xlat
sbb
test
push
sub
push
imul
gs
cmp
divl
fs
in
push
pop
cmp
add
jns
fsubr
inc
es
mov
aam
pop
jl
cltd
sahf
ret
lods
ret
inc
ljmp
movsb
fnstenv
mov
out
adc
stc
pushf
mov
pop
and
mov
mov
scas
or
shl
sbb
mov
dec
cmpsl
shrb
cltd
push
pop
orl
mov
cltd
jb
sti
adc
push
sbb
cmp
ja
stc
hlt
mov
enter
nop
movsl
mov
hlt
or
and
test
or
pop
cwtl
pushf
stc
call
xchg
or
pop
jmp
jns
fiaddl
adc
mov
into
xchg
sbb
dec
adc
gs
adc
aas
daa
mov
scas
js
cli
xlat
or
sub
clc
xlat
lcall
out
sbb
jmp
mov
ret
sub
popa
imul
divb
inc
rcr
xor
pop
fdiv
ljmp
daa
sahf
insl
cmp
jb
pusha
test
punpcklbw
ret
cmp
and
cmp
push
inc
jo
inc
in
pop
pushf
mov
js
mov
pop
fcomps
sub
scas
push
cs
push
mov
push
inc
hlt
jle
je
adc
mull
cli
jbe
outsb
push
in
inc
addr16
frstor
and
cwtl
popa
jne
scas
sahf
hlt
cmpsb
sub
pop
sbb
es
and
sti
insb
ficompl
decb
mov
xor
cmpsb
daa
arpl
sarb
push
pushf
loope
fsubrs
sbb
mov
inc
mov
pop
scas
cmpsl
cmpl
out
in
cmp
xchg
adc
jle
ds
xchg
jge
ja
push
pop
jle
addr16
daa
xchg
ja
mov
and
into
push
adc
add
or
sub
frstor
aam
cmp
dec
js
push
pop
insl
mov
add
sbb
scas
sbb
cmp
sub
adcb
jo
fmuls
mov
sub
jnp
push
mov
mov
push
outsl
add
xchg
fcoml
arpl
sub
dec
loope
xlat
xor
mov
test
fwait
les
test
jae
jle
push
pop
repnz
jne
jecxz
pop
push
mov
mov
fwait
lods
push
mov
mov
pushl
jae
inc
dec
mov
push
pop
stc
lock
dec
jno
adc
rol
sub
mov
xor
stos
jns
mov
sahf
movsl
addb
xor
insl
mov
les
outsb
dec
iret
pop
sub
outsb
cld
lea
sub
cmpsb
inc
lds
and
xorb
les
subl
mov
bnd
mov
and
aaa
xor
fidivl
mov
mov
imulb
test
repz
notl
push
scas
cltd
pop
and
lcall
jno
aaa
and
and
rclb
mov
xor
jb
cmp
mov
add
or
les
and
adc
push
testb
rcrl
inc
jno
cmp
fwait
je
cmp
aad
mov
nop
scas
mov
les
jmp
aaa
sbb
sbb
and
dec
dec
mov
xchg
loope
add
ja
xchg
add
mov
jbe
xchg
repz
sub
jo
adc
add
ret
fldenv
and
jbe
dec
cwtl
add
scas
and
dec
popa
mov
jg
shrl
adc
in
mov
cmpsl
out
pop
lahf
ss
test
in
jge
jmp
and
push
sbb
sbb
aad
push
mov
sbb
cli
mov
mov
dec
in
add
loop
mov
test
jge
adc
pop
lcall
pop
jmp
lods
mov
jne
jne
xchg
fistpl
pop
scas
imul
scas
shrl
jle
insl
out
pop
xchg
inc
gs
pop
in
push
int
sbb
repnz
test
dec
mov
sub
ss
mov
pop
test
jecxz
jg
add
lock
mov
xchg
mov
cmpsb
push
fwait
dec
ret
cmp
cld
mov
xor
mov
arpl
jo
sti
sbb
mov
mov
push
aas
jae
shrb
out
dec
sub
gs
scas
cmp
adc
popf
int
dec
push
mov
push
cmovl
aad
adc
imul
bound
cld
aaa
jg
sti
inc
xchg
stc
inc
fmull
mov
movsb
sub
add
iret
sub
cltd
mov
enter
mov
in
add
sbb
dec
int
data16
lcall
les
outsl
ss
aam
jo
xorl
xor
div
lods
test
ffreep
lahf
fistps
mov
jns
call
inc
inc
xchg
mov
pop
pop
mov
and
sub
pop
push
mov
jl
mov
popf
in
fistps
xorl
pop
mov
daa
imul
mov
leave
and
adc
xchg
sub
mov
imul
adc
in
xchg
loope
jne
xor
cs
push
in
and
cmp
cmp
stc
xchg
push
or
add
decb
lea
xchg
insl
xchg
pop
fsubs
pcmpgtw
sub
or
jno
mov
movups
jo
test
outsb
data16
jle
push
jl
filds
inc
xor
jge
mov
mov
mov
push
outsb
mov
cwtl
xor
xorl
xchg
cli
jbe
sub
stc
sarl
xchg
cmp
cmpsl
add
jp
and
cmp
sub
cltd
std
jns
push
mov
add
test
mov
dec
xchg
jg
jecxz
pusha
pop
push
jo
pop
cmp
ljmp
in
push
rolb
dec
jns
adc
je
mov
cmp
push
insl
pusha
add
stc
inc
xor
pop
out
xchg
addb
loopne
sub
insl
cmp
jp
daa
loopne
popf
into
bound
mov
mov
pop
jecxz
ja
dec
jns
mov
sti
stc
push
pop
push
cli
sahf
push
mov
mov
movsb
push
repnz
push
add
out
hlt
test
inc
pop
xchg
pop
push
push
out
jb
or
pop
cmpsl
lock
and
cmc
es
inc
push
push
adc
dec
jb
adc
mov
orl
jb
xor
sub
outsb
int
flds
inc
mov
adc
int
xchg
ficoml
inc
outsb
out
dec
push
ja
push
lea
aam
jp
sub
xchg
push
inc
nop
jg
repnz
dec
dec
xchg
jns
fists
xor
and
add
les
xchg
imul
xchg
inc
cmp
fistpll
xchg
aad
xchg
imul
dec
lahf
fmull
es
mov
outsl
ret
inc
inc
adc
daa
aad
inc
pop
mov
stc
sbb
pop
add
shlb
jg
add
add
add
aas
jb
pop
arpl
aad
pop
lcall
popl
in
lea
push
shl
or
pop
mov
inc
shl
sbb
mov
cmpsl
inc
sbb
enter
leave
data16
xchg
sti
out
add
pusha
jb
shr
jo
dec
fistl
aaa
shll
push
adc
jp
ret
cmp
in
fbstp
insl
filds
cltd
andb
icebp
mov
mov
fidivrs
orb
andl
cmpsl
cltd
imul
das
pop
jno
xor
inc
and
ret
xlat
jle
jge
push
sub
dec
pop
mov
fildll
leave
int
pop
cmp
leave
add
mov
subl
std
sub
aad
lods
jp
xchg
or
sbb
cli
insl
dec
push
pop
aas
pop
jbe
mov
shrb
sarb
pop
enter
fbld
aaa
inc
push
in
or
sbbb
add
int3
inc
je
sub
mov
pop
dec
and
cmp
mov
and
dec
jbe
rolb
call
add
mov
pop
inc
into
popf
daa
outsb
js
rcr
xor
lock
and
and
jg
mov
pop
iret
sub
or
cmp
inc
fnstcw
jmp
xchg
or
pop
fwait
imul
in
lds
pop
cltd
ret
cmp
jae
jecxz
sub
adc
xor
jne
lds
pop
lock
cs
loopne
popl
mov
xchg
jmp
sub
pop
cmp
stos
xchg
cmpsl
je,pt
in
movsl
dec
fimull
test
inc
xchg
push
inc
push
mov
std
lods
mov
sbb
push
xchg
dec
mov
inc
mov
mov
shl
sub
pop
repnz
add
inc
sub
iret
mov
enter
mov
outsb
sbb
jo
and
popf
test
sbb
pop
mov
add
dec
or
loop
outsb
cmpsl
lahf
out
mov
in
cwtl
ds
sub
ret
int3
sbb
dec
xchg
in
scas
insb
jecxz
movsl
inc
sub
out
popa
call
sub
add
sub
and
xchg
xor
imul
out
or
movb
mov
cmp
mov
pop
xchg
dec
lret
dec
imul
dec
push
test
add
mov
jo
inc
scas
cmp
test
loop
dec
xor
ret
pop
xchg
or
ds
sbb
dec
mov
pop
sbb
int3
shll
cmp
adc
test
pop
mov
lret
in
out
inc
das
jl
push
and
cmpsl
and
pop
xchg
loop
pop
dec
sbb
adc
and
adc
mov
push
mov
sub
jecxz
inc
add
dec
clc
les
push
mov
add
mov
idivl
fwait
adc
mov
adc
pop
or
aam
jmp
pop
mov
lods
or
adc
push
sarl
pop
dec
in
lock
scas
xchg
loop
cs
push
stc
call
outsl
and
add
mov
jecxz
scas
ss
int3
push
or
adc
in
lock
mov
out
fcomps
inc
cmpsb
xchg
aam
lret
scas
xor
add
loopne
xlat
jo
and
test
or
add
and
inc
stos
jmp
outsl
mov
mov
or
cmp
int3
pop
fists
pop
jns
pop
xchg
in
xor
loope
pop
xor
in
adc
loope
loop
add
push
cmpsl
cmpsl
in
xor
mov
js,pt
dec
dec
ljmp
rorb
pop
sub
push
ret
xor
jp
cmp
lods
sbb
pop
adc
inc
leave
cmpsl
stc
adc
call
sub
lock
add
inc
imul
sub
xor
mov
mov
js
dec
mov
xor
imull
pop
lahf
xchg
mov
inc
loope
fcoms
test
sti
insl
jmp
sbb
dec
push
les
stos
xor
push
mov
mov
out
imul
cs
push
loopne
daa
cmpsb
mov
popl
stos
lret
fisubl
sahf
loop
adc
pushf
insb
lods
mov
fnstsw
cltd
xchg
add
inc
xor
mov
ja
movsb
ret
or
subl
mov
fs
lds
pop
inc
addb
sbb
int3
js
inc
and
adc
adc
jo
popa
ret
mov
mov
cld
in
movsw
pop
test
test
fnsave
cld
or
int
out
cmpsb
or
push
mov
sbb
lds
cmp
mov
rcrl
jle
jbe
cli
inc
mov
sbb
cwtl
xchg
js
push
into
xchg
insb
stos
jo
add
daa
sahf
inc
adc
loopne
cli
push
out
push
cmp
cs
cwtl
dec
test
inc
adc
jmp
jmp
rorl
test
lcall
sbb
dec
and
sub
jo
mulb
lods
dec
ret
xlat
jmp
push
dec
xchg
cmpsb
mov
inc
lods
les
scas
xchg
loopne
fst
pop
insl
xor
loop
add
push
xchg
or
cmp
lods
cs
js
leave
repz
xchg
pop
arpl
mov
stos
imul
call
clc
stos
loope
add
or
les
arpl
push
sub
icebp
jae
inc
xchg
aas
repz
leave
pop
xor
push
loope
fdivrl
pop
mov
mov
cmp
rcll
add
pop
and
adc
sbb
cmp
and
es
mov
mov
cmp
sbb
jmp
or
cwtl
xor
test
jp
jo
pop
jae
fs
or
dec
cmp
stc
mov
iret
out
fimull
stc
add
in
sti
out
jle
addb
leave
fadds
daa
cwtl
aas
sbb
or
xor
mov
add
lret
pop
cmc
mov
nop
rolb
add
push
sub
fwait
adc
loopne
xchg
pop
dec
or
xchg
stos
jo
shl
pop
pop
xchg
call
adc
int3
jp
sbbl
cmp
je
gs
jmp
sahf
push
xchg
or
sti
fdivrl
cmp
ret
dec
cli
shlb
mov
fnstenv
pop
bound
jmp
clc
int
bound
pop
inc
push
mov
ds
mov
dec
lcall
in
pop
pop
and
cmpsl
out
aas
repz
call
jmp
sbb
shll
cld
xor
pusha
in
pushf
fdivs
lock
std
pop
ret
mov
xchg
mov
mov
int
ja
inc
xchg
addr16
push
cwtl
push
fwait
dec
in
jne
pop
es
aam
mov
inc
divl
jne
and
lock
fistpll
int
repz
jle
iret
ret
dec
xor
fnstcw
dec
testl
jbe
js
lods
imul
ret
int
xor
leave
gs
or
sbb
jge
fsubs
call
inc
ljmp
out
fistpll
sbb
pop
stos
jne
pusha
cli
xchg
imul
je
jp
mov
into
xor
and
cmpsl
enter
sub
add
and
pop
lahf
aaa
lret
mov
cmp
sbb
sbb
test
mov
shrl
cwtl
scas
mov
aad
loope
out
and
test
xchg
fisttpll
xor
mov
outsl
int3
sbb
fs
add
mov
dec
push
shlb
mov
mov
mov
outsl
lods
in
out
add
adc
fisttpl
fsts
mov
jp
icebp
rolb
cmp
cli
xchg
paddb
cmpsb
rcl
xchg
xchg
fimull
pop
jbe
test
dec
sub
or
pop
push
inc
lea
pop
mov
pop
push
jne
das
cmp
mov
push
jg
lcall
stos
shll
shlb
insb
ficoml
cmp
cmpsl
cli
push
in
clc
adc
lret
fistps
int
movsb
pop
jmp
or
sub
pop
bound
shl
dec
xchg
jge
push
mov
in
adc
cmp
pop
jmp
lahf
cld
push
pushf
cs
cmp
mov
out
fs
sbb
add
xchg
mov
mov
add
ss
loope
or
xchg
jns
call
ja
or
ret
mov
push
fnstsw
subb
pop
jnp
mov
cs
ret
lock
nop
sbb
lea
or
jns
decb
mov
push
sbb
daa
insl
inc
ret
sti
or
and
inc
ja
aad
rcl
icebp
ja
int3
arpl
cmp
jns
ficoml
adc
je
data16
pop
jmp
fdivp
sub
pop
adc
hlt
ja
jae
dec
cmp
push
les
adc
lds
adc
xchg
lock
aam
cwtd
jp
fs
rorl
sub
enter
sub
jb
jb
and
in
shll
lock
lret
call
pushf
push
ss
jno
pop
jle
fidivrs
mov
cld
pop
push
lods
lret
xor
pop
adc
rclb
pop
and
nop
xlat
jecxz
idivl
int
cltd
or
push
pop
stos
sub
cli
dec
sahf
mov
sti
outsl
repz
xlat
jb
xchg
lcall
push
sarl
mov
or
push
test
push
hlt
test
arpl
push
icebp
repz
movsb
je
lret
sarb
loopne
cli
add
in
and
pop
push
andl
mov
pop
push
add
inc
cld
lret
cmpsl
fisttpl
xchg
and
sub
adc
inc
iret
add
imulb
bound
icebp
popl
mov
addr16
in
sub
sub
or
lea
fcomp
and
movsl
pop
jnp
push
mov
addr16
imul
fistl
aaa
fbld
in
cmpsl
in
push
lods
ljmp
stc
in
mull
inc
adc
inc
add
mov
push
adc
sub
jbe
sbb
dec
fcmove
inc
data16
repnz
pop
out
pop
mov
enter
sbb
cmp
pop
leave
int
xchg
pop
hlt
sub
and
adc
pop
int3
sbb
xlat
stos
dec
cli
mov
repz
lods
dec
pop
xchg
out
sbb
orl
sub
mov
xor
pop
sbb
loop
cmpsb
arpl
scas
das
popf
xor
mov
fdivrs
add
int3
inc
js
and
shrb
inc
mov
out
cli
xchg
sub
mov
aaa
jnp
aaa
xchg
mov
push
test
pop
or
mov
mov
es
imul
jp
or
and
adc
sub
in
test
clc
out
cmp
mov
sbb
and
add
lock
in
decl
inc
sbb
adc
in
push
aas
mov
mov
outsb
adc
scas
mov
or
cmp
pushf
addr16
lock
andb
ds
xchg
cmp
add
incb
xor
aas
lret
repnz
int3
js
hlt
iret
pop
cltd
add
or
jmp
dec
repnz
mov
cmp
push
out
push
arpl
scas
inc
sbbb
repz
mov
xchg
ficompl
out
xchg
cmpsb
xchg
je
mov
fdivl
xlat
ljmp
xchg
lret
repnz
stos
add
jnp
jg
imul
frstor
js
xor
jl
fidivrs
adc
mov
dec
mov
out
pop
xchg
cld
sbb
pop
add
loope
pop
xchg
pop
jmp
fwait
decb
xchg
icebp
rorl
imul
push
clc
mov
iret
mov
jae
dec
pop
movsl
sub
invd
inc
test
fcmovnb
or
add
cmpsl
push
xchg
mov
imul
or
xchg
or
push
mov
push
loope
scas
dec
mov
rcrl
xchg
je
inc
stos
push
nop
mov
push
insb
dec
cmc
or
jae
push
jo
pop
jge
cmpsl
xor
out
add
xchg
or
inc
lods
hlt
call
adc
mov
add
jl
push
imul
fsub
xchg
mov
sub
xchg
fnstenv
fs
popf
cmpb
inc
jg
xor
push
cmp
push
xchg
pop
sub
repnz
xchg
movsl
cmp
mov
data16
aad
leave
dec
sbb
loope
push
rcrb
and
bound
push
outsb
out
dec
dec
mov
lods
and
lock
idiv
cmp
loop
mov
pop
and
xchg
xor
mov
iret
xor
std
fdivrs
cmp
in
imul
xchg
sbb
lods
push
xchg
sub
jne
jo
mov
inc
cmc
cld
outsl
dec
pushf
pop
addr16
push
daa
add
stc
push
scas
hlt
lea
adc
sahf
and
push
or
imul
dec
and
pop
inc
mov
imul
adc
mov
dec
and
outsl
push
repnz
out
adc
inc
mov
rcrw
leave
adc
lret
into
xor
insb
idiv
imul
add
insb
pop
hlt
inc
addr16
or
pop
mov
jmp
or
mov
lea
cmc
mov
and
and
ret
mov
inc
fidivs
xor
subb
push
call
loope
loop
mov
out
mov
loop
insb
mov
lds
arpl
shlb
xchg
rorl
cmp
sahf
lds
int
ljmp
loopne
movsl
jl
iret
jmp
daa
mov
ret
mov
pushf
iret
xchg
pop
leave
jle
xchg
add
aam
enter
push
mov
outsb
es
xchg
and
lcall
in
test
sbb
and
shl
xchg
ss
push
scas
arpl
cs
jg
xchg
xor
lds
mov
jle
dec
xchg
shll
out
fisubs
ljmp
xchg
aam
and
and
sbb
mov
loop
adc
sub
xor
xorl
aaa
jle
xchg
loopne
push
cmpb
fcmovnu
mov
pusha
imul
mov
push
xchg
repnz
ja
add
fstps
hlt
mov
in
jmp
pusha
ja
mov
ja
or
fcmovnu
mov
jb
outsl
xchg
mov
addr16
jmp
or
inc
or
cmp
xchg
stos
and
push
in
sub
out
sti
call
sbb
or
pushf
mov
divb
push
call
inc
mov
mov
inc
inc
and
nop
mov
in
sub
pop
mov
ret
mov
xchg
out
mov
stc
pusha
jp
ret
push
dec
inc
pop
inc
jle
rclb
out
push
loop
mov
arpl
clc
scas
or
hlt
and
jmp
mov
stc
insl
xlat
pop
pop
push
bnd
or
add
fsub
jmp
xor
push
dec
popf
scas
fcompl
loop
scas
les
ret
xchg
jle
movsl
or
lock
pop
and
and
mov
loopne
outsl
mov
cmp
mov
cltd
inc
fwait
pextrw
mov
mov
stos
pop
add
hlt
xor
lea
cmp
dec
in
lods
insl
inc
pusha
add
adc
mov
int
in
jl
aas
add
push
dec
xor
xchg
les
lods
cmp
hlt
mov
test
enter
fiadds
jbe
adc
nop
sbb
xor
push
xor
sub
loope
inc
dec
scas
lret
jp
cld
es
cmp
pusha
aas
mov
sbb
jnp
hlt
lret
cwtl
or
lcall
inc
shl
lea
ss
sub
dec
lret
data16
das
jae
or
lds
and
cmp
lds
movsl
xchg
cmp
cmp
jno
cmpsl
shll
dec
push
divb
cmpsl
scas
pcmpgtb
sahf
test
in
fidivrl
loopne
mov
mov
pop
lods
xor
jb
pop
stos
fwait
xchg
repnz
ja
xlat
cmp
dec
pop
mov
fistpl
shlb
loop
dec
lahf
dec
jg
test
lock
repnz
pusha
mov
cmp
cmp
dec
dec
mov
and
call
loope
pop
inc
push
push
pop
or
push
out
jb
inc
lret
or
jo
push
add
sub
and
out
cmc
cmpl
insl
mov
mov
sbb
outsl
loop
mov
and
jns
jnp
inc
xchg
insb
lods
shlb
push
pop
outsb
shrl
or
pop
in
cmp
cmp
data16
sub
dec
pushf
dec
lret
mov
scas
adc
inc
pop
jno
out
add
pop
fimuls
stos
adc
pop
cmpsl
lcall
call
mov
mov
imul
inc
insl
pop
mov
out
xor
jne
es
pop
call
fcomps
xchg
cmp
inc
loop
fnstcw
lds
into
mov
add
ja
and
outsb
jge
rorl
out
xlat
sti
push
iret
int
push
aad
fwait
lcall
bound
jle
push
mov
les
dec
inc
xlat
lret
pop
jnp
icebp
je
mov
lea
xchg
cli
in
pop
les
repnz
and
gs
es
push
add
push
into
pop
and
xchg
shlb
adc
adc
insl
mov
jp
popa
cmp
pop
pop
inc
shll
push
inc
jne
ja
dec
pop
jbe
cmp
cmpsb
fwait
insl
scas
push
mov
mov
sub
in
adc
jae
int
mov
ss
dec
mov
cmp
mov
pop
mov
cmpsb
push
sbb
sbb
popf
add
mov
enter
incl
fildll
loope
add
or
or
das
cmp
mov
cltd
inc
push
sti
pop
pusha
dec
aad
repnz
fsubl
in
adc
cld
sti
sbb
xor
cmp
jp
lret
mov
gs
adc
movb
out
mov
sahf
inc
push
xor
stos
mov
mov
sbb
iret
mov
add
inc
xchg
xchg
fstps
dec
push
pusha
add
sbb
fucom
andl
jnp
xor
hlt
cmpsb
mov
pop
or
and
mov
scas
jg
and
lret
xlat
xor
or
mov
mov
mov
fsub
jecxz
sbb
or
jmp
popa
sarl
mov
xor
out
shll
scas
in
sub
sahf
mov
sarl
decl
mov
adc
dec
or
add
test
imul
sarl
mov
cmc
ja
pop
fstpl
mov
add
outsb
cs
cs
mov
call
sti
mov
ljmp
push
out
int
add
push
dec
cmpsb
in
jp
mov
into
leave
mov
lea
mov
insb
popa
shll
lahf
cmpsl
dec
inc
mov
adc
in
dec
stos
pop
pop
nop
mov
sub
clc
enter
push
cmpsl
fs
mov
cmp
mov
rcl
xor
into
in
insb
pop
sub
and
fnsave
into
faddl
xor
or
aam
mov
es
pushf
mov
adc
push
mov
aad
xchg
aad
mov
xchg
mov
xchg
dec
adc
or
shr
mov
cmpsl
sti
xor
rolb
inc
add
jmp
sub
push
push
rcr
lock
filds
dec
sub
mov
jecxz
sub
into
mov
mov
push
mov
mov
dec
sub
cmp
aad
mov
push
sarb
test
jne
sbb
or
push
mov
cwtl
pop
in
lahf
adc
rcl
add
int
adc
je
ffreep
push
in
scas
jecxz
xlat
cmp
adc
mov
xchg
divl
sti
or
and
pop
and
cs
cmp
mov
inc
jbe
inc
sub
cmp
inc
pushf
or
cwtl
repz
and
mov
pop
test
inc
add
iret
sub
jp
sbb
scas
pop
xchg
adc
or
cmpsb
adc
pop
mov
mov
mov
pusha
jbe
mov
les
xchg
cli
xlat
cmp
jmp
add
or
lods
lods
ja
shrl
mov
bound
jno
cmpsl
sbb
test
mov
clc
dec
lock
pushf
stc
repnz
cmp
pop
xchg
dec
and
push
push
xchg
inc
inc
push
je
in
fldt
jmp
mov
mov
and
xchg
jbe
cmp
jmp
ftst
and
push
stos
cmp
je
push
xchg
pop
xorl
dec
cmpsb
andl
stos
xchg
cmp
mov
rcrl
sbb
les
xchg
jmp
mov
mov
js
fmuls
mov
idiv
faddl
shll
outsl
bound
jecxz
js
xor
xor
ljmp
fs
cli
stos
dec
mov
out
lcall
mov
addr16
call
shrb
pop
cmp
add
xchg
scas
xor
or
shl
inc
xlat
mov
rclb
bound
or
mov
sbb
push
pushf
bound
dec
sbb
xchg
idivb
push
mov
lahf
jg
and
in
or
xchg
jae
shlb
or
aam
lods
dec
arpl
add
mov
mov
mov
mov
mov
cmp
mov
rcll
mov
cmpsl
push
inc
add
ljmp
std
leave
dec
inc
mov
pusha
in
xchg
fs
add
pop
mov
or
inc
out
je
dec
sar
jg
sub
pusha
pop
mov
push
and
xor
ja
add
mov
mov
out
xlat
mov
xchg
adc
stos
fdivs
in
testl
or
lahf
aaa
std
out
jmp
pop
enter
add
ret
adc
ficompl
aam
ffreep
xlat
jno
or
aad
daa
mov
in
sahf
fisttps
shlb
mov
sub
clc
icebp
sub
pop
es
inc
jmp
loope
test
nop
fldcw
pop
pop
ss
cmp
movsb
jge
xor
jae
mov
inc
lea
sti
push
mov
xchg
arpl
dec
lret
push
push
push
or
push
gs
arpl
pop
aam
inc
out
scas
mov
push
xchg
nop
mov
xor
and
lock
leave
aam
sub
in
js
adc
int
ret
int3
lock
movsb
push
sti
push
xchg
or
push
jp
decl
push
in
push
xor
or
aam
popa
fsubl
ja
cmpsl
int
adc
cmp
xchg
xchg
lahf
imul
fildll
mov
or
adc
popa
mov
test
xchg
jb
fstps
lret
fimuls
fs
adc
push
mov
mov
jmp
push
leave
and
stos
hlt
icebp
into
out
inc
mov
sbb
and
jne
or
xor
xchg
cmp
aaa
enter
pop
je
test
or
sarb
jmp
scas
jl
dec
fwait
lcall
prefetcht2
xor
scas
cs
xchg
inc
pop
fwait
aad
mov
mov
les
pop
ja
sahf
lret
aas
push
sbb
lret
int
ds
xchg
scas
jg
cmc
inc
or
subl
loop
js
jb
aad
mov
mov
jle
in
popa
jmp
and
ds
mov
adc
sub
int3
cmpsb
scas
or
pop
xor
std
fcoms
call
push
cmc
push
mov
ljmp
adc
adc
cmp
imul
cmpsl
jns
jnp
test
hlt
repz
xlat
out
xor
dec
or
test
js
jge
gs
push
ds
sub
cmp
push
and
pushf
repnz
mov
iret
das
out
xchg
rcrl
or
aas
stos
pop
mov
cmp
mov
dec
outsl
lea
xchg
jnp
inc
jns
xlat
lret
mov
stc
jb
push
into
mov
push
mov
mov
test
or
ss
lea
cs
imul
mov
jno
mov
lahf
scas
movsb
inc
lods
gs
cmp
adc
aad
ljmp
and
popa
aaa
enter
mov
out
mov
cmpsl
mov
fsubr
ret
ds
stc
mov
sub
or
in
mov
mov
ss
cmpsb
jne
inc
andb
pop
jno
scas
mov
mov
xor
pop
push
mov
fs
adc
lods
adc
xchg
pop
xchg
cmp
mov
ret
movsb
scas
pop
mov
lret
cmp
or
imul
pop
xchg
and
inc
pusha
jno
dec
mov
incl
mov
cs
aaa
hlt
orb
push
add
jmp
ljmp
sahf
mov
push
add
lret
stos
mov
xor
and
mov
lods
lret
cmp
iret
mov
dec
mov
jg
mov
bound
into
clc
mov
mov
mov
add
push
in
push
fcompl
dec
call
in
mov
add
or
pop
adc
mov
sub
lret
ss
adc
add
sub
pop
xchg
incb
push
mov
and
mov
adc
and
sbb
and
mov
sti
lret
sub
repnz
into
scas
shll
dec
out
orl
inc
cld
xchg
imul
sub
mov
sbb
pop
aaa
imul
cmp
or
arpl
shl
aam
or
lea
sbb
jp
inc
repnz
mov
scas
sbb
and
add
bound
add
push
outsl
push
and
rclb
mov
pop
cmpsb
in
sub
incb
mov
mov
mov
mov
jo
aad
roll
adc
dec
pop
and
daa
xor
pop
mov
in
rep
sarl
push
dec
push
out
fbstp
mov
cli
mov
lea
testb
mov
jmp
inc
dec
pop
jle
xchg
sahf
xchg
lahf
cmpsl
jle
xchg
test
negl
pop
insb
es
insl
fiaddl
shl
pop
out
loopne
lods
and
mov
mov
dec
out
mov
iret
ret
add
test
loope
repz
call
popf
jae
adc
inc
mov
xchg
pusha
sub
iret
dec
popa
add
and
sbb
fisubl
adc
mov
mov
xchg
xor
jecxz
pop
xorl
fwait
pop
inc
push
test
push
cmpsl
mov
cmc
negb
ljmp
mov
adc
ljmp
daa
push
enter
push
popa
cmp
dec
imul
aas
inc
xchg
jmp
loop
test
cmp
or
xor
inc
mov
popa
insb
pop
add
testl
mov
fistpll
mov
jl
mov
repnz
inc
repnz
pop
mov
push
cmp
js
pop
push
outsl
rclb
out
cmp
data16
mov
jae
cmp
sub
jbe
out
xchg
movsb
xchg
leave
rcrb
leave
mov
adcb
push
mov
leave
arpl
roll
enter
jb
cwtl
into
mov
pop
jne
sti
pop
dec
jge
not
xchg
xor
cmc
jno
int
pop
ds
pop
pop
pop
test
and
add
or
push
xchg
mov
push
xchg
addl
mov
or
jo
adc
inc
xorb
xlat
popa
adc
lods
push
sbb
ljmp
int3
stos
mov
cltd
sub
xor
push
mov
mov
repz
xchg
inc
inc
mov
mov
loope
jno
cmp
incb
mov
lcall
push
sub
jg
jb
pushf
add
gs
add
mov
dec
or
and
ss
adc
push
lds
fadd
jo
cwtl
popf
mov
mov
lcall
call
mov
and
inc
pop
xchg
mov
ficomps
add
jb
sub
fimuls
add
jle
add
ljmp
xor
or
sbb
ret
push
adc
or
mov
push
push
das
lret
addb
mov
cwtl
decb
mov
test
test
mov
pop
xor
popa
test
sbb
es
sbb
jb
mov
aas
test
sbb
outsb
fwait
loop
cmc
cltd
push
jge
lret
xor
clc
push
aas
xor
hlt
adc
cmpsb
sbb
and
dec
xlat
icebp
sti
mov
adc
int
xor
push
movsl
rcrl
out
mov
dec
mov
les
fidivrs
xor
mov
stos
cmp
fwait
out
fnclex
mov
cmpb
stos
xor
lcall
adc
add
ret
out
clc
in
rorb
sub
int3
lahf
nopl
jp
push
push
rcrb
cld
in
ljmp
lret
inc
adc
mov
adc
stos
and
dec
insb
mov
sti
icebp
inc
mov
cwtl
push
fdivr
jne
or
fwait
out
and
fidivs
jno
mov
sbbl
pop
ret
imul
nop
int
jmp
jle
inc
ds
push
adc
jg
push
lcall
mov
daa
mov
insb
sarb
inc
or
or
imul
mov
clc
cli
mov
jno
lds
cli
inc
arpl
or
mov
dec
add
xchg
sub
mov
jge
mov
push
cmpsb
push
mov
cmpsl
insb
xor
sbb
ds
lods
dec
jns
jg
jnp
fs
lock
loope
ljmp
push
leave
push
sbb
int3
call
add
inc
mov
insl
pop
cmpl
loop
sbbl
aam
pop
sbb
inc
shr
adc
orb
ljmp
imul
mov
mov
mov
add
scas
inc
lahf
sti
sbb
mov
jno
add
mov
pop
sbb
cltd
xchg
int3
push
aam
fcoms
std
or
mov
pop
jne
in
sub
lcall
cmova
cld
mov
inc
xor
sarl
mov
push
sub
or
adc
outsb
inc
dec
mov
addl
lods
jle
fwait
mov
mov
aad
inc
push
pop
xor
sub
js
dec
add
pop
jge
and
popa
aad
lret
nop
lea
repnz
lock
std
sub
cmp
dec
loop
mov
loop
fstl
scas
das
sub
inc
rorl
mov
pusha
mov
add
into
fucom
clc
jge
lahf
lcall
popa
pop
xchg
out
push
iret
dec
rorb
pop
pop
out
sbb
cmp
xor
loop
pop
pop
push
std
popa
sub
rol
imul
add
or
and
out
cwtl
sub
or
lods
xor
int
adc
cmc
stc
add
std
gs
sub
sbb
add
int3
insb
cmp
adc
frstor
sub
fidivrl
add
movsl
pop
xor
xchg
xor
adc
lods
adcl
pop
icebp
popa
je
and
add
adc
adc
test
nop
cmpsl
and
xchg
push
and
lret
adc
rcl
mov
js
paddq
sbb
les
inc
sbb
outsb
inc
movsb
adc
loope
aaa
repnz
mul
mov
cmp
pushf
push
or
pop
and
sbb
push
stos
mov
outsl
ds
jae
push
inc
gs
idivl
dec
cmp
mov
mov
insl
jle
jecxz
push
int
xor
lcall
jne
out
sub
imul
inc
cmpsl
sbb
or
inc
popf
sub
pushf
xor
into
call
pop
pop
data16
dec
sarl
outsb
pusha
movsb
push
pop
pop
psadbw
push
lahf
cmp
sub
push
and
mov
add
aas
inc
adc
mov
idiv
fsubrl
and
cmpsb
inc
mov
mov
xchg
jl
adc
testb
stos
cmp
xor
pop
mov
daa
hlt
bound
add
cmp
cmp
mov
sahf
jg
push
mov
ret
pushf
dec
mov
add
lds
and
cltd
or
insl
aaa
push
mov
lods
lds
test
gs
mov
push
push
xor
decl
mov
scas
and
jge
vmwrite
push
sbb
iret
inc
scas
jb
fcomp
xchg
adc
xchg
fsubrs
std
cmp
jne
sbb
xor
sti
lret
dec
pop
xchg
out
js
dec
push
lret
test
sahf
sbb
mov
jne
cli
lods
outsl
pop
mov
or
inc
test
fildll
and
dec
mov
fcmovnu
xchg
cmp
mov
outsl
dec
mov
mov
jle
aas
es
and
pop
cltd
aas
xchg
dec
scas
inc
sub
scas
push
jae
pop
into
fistpl
push
pop
push
or
and
cli
dec
xor
imul
and
xchg
jns
std
lret
lret
cmp
es
adc
fsubrl
dec
push
sub
xchg
pop
adc
dec
and
rcr
movsl
dec
mov
inc
pop
add
jo
jno
gs
test
incb
imul
ja
and
adc
mov
push
sarl
aam
dec
jecxz
mov
popa
add
or
imul
icebp
shlb
out
pop
mov
xchg
jb
loope
xchg
aad
lods
mov
push
pop
mov
xchg
cmp
bound
sar
in
cwtl
add
cwtl
es
in
push
data16
repz
and
sahf
stos
or
mov
mov
push
pop
push
imul
push
push
pushf
pop
cltd
fstpl
sbb
push
adc
inc
cmp
and
cmp
ljmp
xor
pop
ret
and
jmp
loopne
add
or
imul
adc
std
cmp
out
ss
xor
pop
adc
xor
andl
inc
push
mov
jne
stc
mov
jne
cmc
mov
loop
dec
pop
lods
out
adc
add
sub
add
mov
scas
ljmp
xor
cmpsl
mov
mov
adc
lods
sub
fldl
and
int
movsb
xor
insl
pop
mov
xchg
xor
cmovs
dec
jae
lret
dec
lret
fs
lcall
xchg
std
imul
mov
cli
rorl
adc
push
dec
jecxz
int3
mov
dec
test
insl
lahf
push
loopne
mulb
xchg
fists
outsl
add
iret
test
in
sub
xor
mov
and
pop
sbb
cmp
xchg
push
popf
sbb
add
mov
jno
int3
gs
xchg
mov
scas
shlb
push
adc
inc
stc
jle
nop
test
rol
mov
xor
movsl
dec
imul
out
test
pop
stos
je
xlat
lahf
mov
aam
fidivl
xchg
mov
sbb
pusha
shlb
push
nop
sub
cmp
jns
aad
iret
jb
sbb
pop
push
or
arpl
push
dec
ss
lods
ja
mov
fwait
pop
cmp
lods
insl
repz
in
and
nop
cmpsl
push
out
mov
scas
call
jo
sub
pop
andb
xor
lret
jecxz
pop
fldl
mov
mov
shll
and
sarb
pop
push
mov
pop
mov
lds
adc
loopne
lds
push
pop
or
add
dec
lods
cmp
xchg
out
xor
or
xchg
cmp
in
outsb
cmpsl
mov
inc
dec
or
or
inc
or
inc
icebp
inc
lcall
shll
clc
or
decb
mov
adc
scas
adc
cs
loopne
add
out
int
or
cli
cmp
adc
jae
adc
enter
mov
fsts
mov
inc
or
std
fsubrl
inc
sub
mov
cmpsb
add
sbb
stc
xchg
mov
arpl
in
mov
mov
in
insl
addr16
lock
in
and
fwait
add
jecxz
jns
inc
out
mov
pop
push
inc
mov
xor
mov
test
lods
movsl
data16
int3
pop
popa
aam
mov
jecxz
mov
and
outsl
ficoml
adc
cmp
ja
sti
loopew
fcoml
add
scas
push
sbb
mov
pop
sbb
jnp
jo
out
rorl
mov
pop
cwtl
add
test
sub
popa
lea
insl
mov
sub
loop
pop
faddl
mov
push
cli
ds
and
inc
mov
xchg
cmpsb
aas
shrl
hlt
mov
cmp
sbb
popf
dec
ficoml
pop
jbe
xlat
je
xchg
fistl
adc
sbb
adc
stc
rcrl
movsb
cmc
pushf
cmpsb
xor
push
xchg
or
es
lret
in
rorb
mov
hlt
faddl
lock
pop
enter
push
aam
leave
jb
lret
aas
int3
cwtl
divl
ljmp
push
xchg
or
inc
movsl
pop
cmpb
push
xlat
push
push
adc
lahf
les
stos
lods
mov
add
pop
popa
jae
ret
imul
push
test
or
sbb
adc
xchg
daa
out
adc
inc
adc
ror
dec
rclb
fsubrs
push
dec
jg
shlb
test
or
mov
dec
xchg
xchg
inc
movsl
std
pop
jg
cltd
insl
sbb
lods
push
or
jmp
shlb
outsb
dec
pop
dec
dec
hlt
fistps
xor
sti
lret
cmc
loop
lods
cmc
rorb
jo
mov
pop
sbb
jno
dec
fbld
mov
dec
add
call
sbbb
inc
sbb
das
iret
ss
adc
push
or
add
out
scas
inc
push
and
inc
shl
xor
cltd
stos
test
popf
js
es
jmp
sub
cwtl
sarl
cld
test
cwtl
insb
in
stos
js
lods
cmc
mov
maxps
shl
mov
lock
imul
mov
dec
cmp
sbb
aas
fidivs
xchg
xchg
fistpll
mov
push
scas
loop
outsb
pop
lock
stos
adcb
mov
leave
push
adc
loopne
icebp
js
xor
mov
test
xchg
mov
or
mov
cmp
test
cmp
ret
xchg
shrl
push
lahf
mov
lahf
adcl
lds
test
jo
mov
cmpl
adc
cltd
push
jno
std
push
in
jnp
lea
mov
clc
pop
xchg
pushf
mov
jmp
and
out
lock
out
xchg
jecxz
subb
in
inc
lods
sbb
and
hlt
jge
fcoms
add
add
xor
mov
icebp
pop
arpl
cmc
out
push
cmpsl
adc
loope
mov
sbb
cmpsb
pop
popf
adc
lods
popf
or
xchg
repnz
jno
xchg
lods
mov
or
les
mov
or
cltd
das
mov
aaa
cs
push
cmp
mov
lods
sub
arpl
cli
enter
shr
ret
mov
xor
or
loopne
addr16
and
pop
inc
pop
jo
sbb
push
movsl
in
fwait
insl
jecxz
and
xor
subb
and
xor
add
rorl
inc
jb
mov
in
dec
sbb
inc
mov
inc
sub
xchg
test
cli
out
jp
mov
mov
pop
aas
dec
sarl
addr16
insb
add
loop
jle
ja
ss
imul
add
inc
hlt
cli
jmp
mov
imull
test
adc
jbe
repnz
push
aaa
pop
sbb
mov
mov
pcmpgtw
rcl
mov
jbe
outsl
sbb
into
inc
jnp
xchg
or
call
bt
dec
sbb
cmc
push
sahf
shlb
jge
mov
fildl
xor
lahf
pusha
mov
cmp
sub
imul
mov
imul
sti
mov
mov
insl
out
mov
shrl
pop
push
push
lcall
int
xchg
and
add
inc
xchg
lahf
loop
lret
insl
add
enter
mov
fmuls
xchg
roll
push
jp
insl
out
fcoms
mov
pop
or
dec
clc
cmc
ret
sbb
xor
cld
add
mov
mov
pop
ljmp
dec
je
jl
pop
iret
rcrb
daa
push
push
ljmp
out
scas
inc
xchg
mov
xchg
addr16
les
in
fnstcw
in
mov
imul
in
loop
push
jecxz
cwtl
cmp
stc
test
xor
shrb
fcmovne
mov
sbb
cmp
out
adcb
sbb
test
sub
mov
sub
xchg
test
jne
and
push
test
jle
das
jge
push
shl
xchg
push
fs
mov
insl
or
inc
nop
sub
rorb
icebp
fsts
pop
loopne
notl
xor
mov
sbb
xor
lods
jg
aam
sub
mov
sbb
sbb
ret
xor
rcll
inc
lret
push
and
and
push
out
call
adc
lds
addr16
loope
fdivs
leave
inc
sub
cwtl
int
inc
add
aam
or
mov
inc
test
rol
arpl
mov
loopne
jp
add
adc
fistl
push
pop
add
mov
jns
add
push
int3
cwtl
js
xchg
sub
mov
xchg
lock
inc
paddw
popa
adc
test
cmp
fstp
push
mov
cwtl
pusha
sbb
push
aad
pop
aam
inc
sbb
cmpsb
push
add
or
pop
shll
jmp
lock
adc
dec
xchg
and
xor
push
scas
pop
cmc
jne
xchg
jmp
or
test
xchg
dec
jl
lret
dec
jl
adc
sub
pop
mov
cmp
cs
ret
push
or
mov
pop
and
xchg
inc
push
lret
xchg
pop
push
jns
lds
jb
test
out
iret
push
out
inc
ret
aad
push
jne
sub
mov
clc
mov
mov
jo
xor
in
imul
sub
sub
mov
mov
into
dec
mov
ret
insl
ja
and
dec
sbb
adc
enter
lods
addr16
daa
inc
sbb
pop
js
push
jnp
cmpb
lahf
mov
test
fcoml
popf
pcmpgtw
dec
out
in
popa
dec
xchg
adc
inc
fimull
fcoms
je
cmp
data16
or
inc
xchg
les
jb
cmpsl
inc
enter
jle
loope
jg
cmp
rcrb
loopne
fdivr
adc
mov
jno
mov
xlat
cmpsl
ss
stc
aas
xor
inc
xor
pop
cli
into
nop
iret
inc
ljmp
out
mov
jo
aas
loopne
jb
adc
mov
sub
out
sti
mov
dec
or
cmp
pop
jle
and
dec
jns
push
jle
sbb
aaa
mov
insb
rcrb
flds
push
mov
inc
jne
mov
adc
mov
pop
and
add
fldenv
jp
dec
imul
ljmp
adc
inc
pop
pop
and
pop
inc
mov
insl
stos
inc
mov
js
or
jns
adc
sbb
adc
sbb
adc
jae
or
in
cmp
push
dec
xlat
les
add
mov
rclb
stos
add
repnz
pop
xor
mov
mov
fdivrl
leave
ds
adc
mov
adcl
arpl
xchg
and
imul
mov
mov
movsl
es
pushf
ds
adc
xchg
sbb
fimuls
dec
pushf
inc
and
out
inc
sarb
dec
mov
shld
xchg
shl
xlat
js
aaa
jns
and
aad
ret
hlt
xchg
jo
pop
or
into
je
jae
ljmp
cs
jp
ja
or
sbb
pop
jnp
in
shl
xchg
fadds
jae
jmp
jnp
lret
lock
fcompl
test
mov
mov
inc
push
pop
xor
ja
mov
add
es
cmc
fidivs
out
cmp
subl
outsb
pop
ljmp
repnz
jmp
adc
icebp
repnz
cmp
dec
fbstp
ds
or
mov
mov
testl
xlat
js
sbbl
mov
addb
sub
push
add
jmp
sub
jo
add
pop
outsb
insl
xchg
sub
dec
jle
aam
jnp
mov
adc
loop
cmpsb
inc
sbb
xchg
cli
fwait
add
mov
or
test
callw
mov
int
xchg
ss
outsl
mov
scas
adc
jmp
sbb
ja
rorb
inc
push
into
std
mov
inc
pop
lret
iret
pop
mov
xchg
sbb
mov
dec
imul
orl
mov
fcmovnbe
aas
sbb
xchg
jnp
pushf
mov
mov
mov
jo
adc
repz
cwtl
rorb
mov
xchg
pushl
cli
lock
les
inc
je
mov
fildll
gs
mov
xor
mov
sub
or
iret
mov
fs
pop
xchg
xor
jecxz
lret
shll
xlat
xchg
stos
push
pop
inc
mov
pushf
inc
jge
push
outsb
xchg
pop
icebp
notl
jae
mov
fadd
ret
js
cmp
inc
sbb
dec
push
pop
scas
je
dec
fnstcw
repz
push
xchg
out
fs
or
mov
push
test
pop
jmp
mov
fcmovbe
mov
mov
mov
filds
mov
stos
sbb
cltd
pop
xchg
les
daa
movsl
scas
pop
pop
sahf
sahf
filds
inc
stc
xchg
into
jbe
sbb
subl
and
jle
sbb
rol
push
lods
push
dec
in
jp
rcl
xchg
xchg
jle
std
pushf
xchg
mov
jo
cmp
adc
jmp
in
aam
sub
dec
mov
cli
mov
push
scas
sub
sti
pop
mov
xchg
fs
ljmp
cmp
cld
xchg
mov
mov
daa
xchg
test
arpl
inc
cmp
or
cmp
subb
arpl
jne
cmp
cmpsl
cld
cwtl
in
jge
or
out
sub
fisubl
aaa
ja
pop
in
add
in
fidivrs
rcrl
lock
movsl
xchg
mov
pop
jge
into
in
inc
push
inc
mov
sub
push
inc
mov
sahf
leave
mov
sub
lock
gs
call
pop
inc
insb
push
adc
mov
or
xchg
loope
dec
cmp
out
js
dec
in
sub
lods
in
ja
data16
insl
cs
in
pop
push
lret
xchg
imul
insl
mov
jl
fsubp
leave
scas
lret
push
clc
inc
je
leave
mov
lret
jo
fidivrs
jge
lods
mov
push
mov
and
mov
lahf
jae
sub
fidivs
in
jp
movsb
sbb
gs
ficoml
ja
pop
outsl
mulb
leave
pop
loope
loopne
and
adc
and
inc
stos
add
addl
rorb
cwtl
push
lods
xorb
mov
mov
shll
and
dec
dec
clc
lahf
dec
aam
movsl
repz
dec
adc
aad
sarb
jmp
repnz
pop
jae
cmp
push
sbb
adcl
pop
dec
and
filds
jp
mov
xchg
xchg
mov
adc
inc
lahf
cmp
and
outsl
testb
mov
out
jmp
testl
or
cmp
lock
dec
push
shrb
push
addr16
movsb
out
mov
and
cmp
push
add
jo
out
inc
xor
fidivl
jno
push
hlt
rorb
ffree
cli
mov
pusha
fldcw
out
jae
pop
aam
xor
in
sbb
mov
jg
add
jl
les
ds
xchg
push
call
inc
clc
inc
sub
jp
daa
fsubl
xchg
pop
dec
lods
or
push
adc
lahf
lret
inc
shl
push
subb
mov
test
dec
add
mov
sub
fidivs
js
shll
jnp
and
and
xchg
gs
dec
xor
pop
inc
fstpl
inc
leave
mov
xchg
sub
cli
movsb
pop
push
mov
test
cmp
in
mov
or
pop
out
repnz
inc
push
sti
leave
sbb
and
sbbb
pop
push
stos
jecxz
or
jmp
icebp
jecxz
mov
ljmp
pop
mov
and
addr16
dec
into
pop
call
imul
adc
jae
lahf
cltd
pop
mov
in
es
inc
xor
mov
ret
push
fs
sbb
in
dec
add
sti
leave
xchg
xchg
ss
and
lods
xor
pop
scas
xor
jl
movl
mov
adc
out
stos
push
xor
test
lods
jb
xchg
ret
aad
dec
pop
sbb
push
into
aam
xchg
outsb
fadds
push
xorb
popa
in
mov
cltd
lods
push
mov
js
bswap
or
and
aaa
sbb
mov
add
jae
mov
cmp
test
push
cmp
daa
ss
sub
xchg
dec
test
jl
mov
push
add
stos
pop
aas
sbb
inc
ljmp
jnp
test
fdivrs
pop
scas
push
push
sti
add
data16
out
push
mov
repz
js
data16
bnd
stos
xchg
push
cmp
out
dec
rolb
rcll
push
inc
scas
push
out
test
pop
lods
xor
fisubrs
xor
filds
cwtl
test
lcall
or
std
stc
mov
aaa
or
pusha
sbb
inc
cli
add
out
out
aaa
into
mov
sarl
lods
lods
aad
shrl
enter
stos
cmp
sub
mov
mov
mov
cli
cs
xor
inc
testb
pushl
push
out
ficomps
pop
adc
in
pop
sub
andb
lea
jb
dec
repnz
jp
xchg
es
lock
mov
mov
and
cs
mov
xchg
jp
inc
rep
push
jl
jbe
jbe
lock
jmp
test
icebp
and
out
xchg
clc
out
jns,pt
xchg
pop
push
ret
xor
push
pushf
mov
mov
lahf
jg
mov
jo
mov
xor
dec
negb
into
aad
push
mov
xor
ficomps
and
fcoms
int
adc
and
mull
shlb
mov
add
pop
push
aaa
inc
es
mov
and
lcall
mov
dec
lea
fistl
pop
or
movsb
out
jb
ss
push
test
test
insb
inc
mov
dec
push
cmpsb
inc
push
pusha
bound
mov
test
xchg
fisttpl
jns
or
push
push
dec
push
and
repnz
jns
fxch
lahf
das
push
fildll
inc
mov
frstor
mov
lcall
bound
cmpsb
cmp
int
mov
mov
rcr
or
push
stos
aaa
mov
and
push
ja
fisubl
push
pop
sub
fcompl
or
xor
mov
ret
js
inc
pop
pop
das
rcrl
xchg
scas
inc
popa
pop
mov
push
push
loope
jne
pop
dec
cli
pop
data16
jle
jnp
mov
xchg
jl
mov
lock
sub
inc
add
repz
pop
cmp
fiaddl
cmp
mov
inc
lods
fnsave
mov
rolb
shrl
scas
add
or
or
sub
push
les
xor
mov
fmull
and
jp
and
inc
push
push
jns
jbe
popf
mov
test
fwait
rolb
scas
loope
adc
pop
clc
or
inc
hlt
xchg
test
insb
out
div
sub
fcmovne
js,pt
in
shlb
pop
inc
cmp
or
dec
inc
push
test
xchg
insl
mov
jne
icebp
cmp
arpl
xlat
jmp
lds
xor
jns
pushf
sbb
test
sbb
loopne
std
ret
lahf
dec
jb
shll
daa
aad
ss
in
cld
in
dec
jp
dec
add
daa
sub
int
mov
or
out
cmpsb
ret
adc
adc
push
jns
sbbl
mov
mov
sbb
sarl
mov
push
test
lds
jnp
and
aaa
push
or
or
movsl
dec
enter
add
push
push
jmp
movsl
xor
imul
push
pushf
mov
mov
dec
ret
in
fbstp
pop
and
pushf
lock
xor
sahf
sti
aad
xchg
push
mov
stc
mov
mov
pop
jb
dec
pop
xor
and
cmp
int
cli
outsl
andb
and
jmp
mov
imul
aaa
fstl
mov
mov
fsubrs
repnz
add
jne
aaa
dec
cmp
iret
fwait
xchg
push
dec
je
cmp
cmpsb
test
sbb
je
aam
cmp
outsl
dec
in
push
mov
sbbl
mov
sbb
push
cmp
lret
cmp
scas
hlt
gs
cs
jmp
mov
cmp
test
call
test
ljmp
aam
xchg
mov
jbe
testb
dec
cmc
and
orb
lock
or
mov
out
punpcklbw
mov
daa
icebp
aaa
ljmp
divl
dec
sub
jb
call
dec
adc
lret
popf
jne
push
sbb
push
inc
or
and
cmp
sbb
xor
test
mov
loopne
dec
or
cwtl
mov
addr16
cmp
lods
adc
jb
fidivl
out
adcl
shll
test
arpl
jns
inc
cmpsb
push
imul
xor
lods
adc
aaa
cmpsl
mov
insl
sti
rolb
jl
repnz
iret
mov
adc
lret
mov
subb
inc
aaa
jb
xchg
pop
sub
push
mov
jno
mov
mov
pop
in
pop
lock
popf
out
loope
mov
adc
int3
rcrb
pop
mov
mov
in
cld
cmp
inc
movsb
imul
arpl
sub
mov
into
jmp
je
aad
jp,pt
mov
aas
mov
arpl
outsl
jp
jae
and
mov
mov
lret
lcall
fldcw
ret
cld
lret
sub
int3
jmp
jle
rclb
scas
andb
lret
sbb
sub
push
test
jb
push
repz
sub
inc
arpl
xorl
aaa
jle
jle
fcoml
orb
or
orl
aam
inc
sbb
imul
divb
or
ret
aam
and
js
aam
out
mov
push
aas
fdiv
mov
and
jne
phaddw
push
push
arpl
sub
iret
xor
ja
inc
sub
mov
js
inc
jle
lock
dec
fmull
push
inc
xor
cs
clc
sbb
ja
pop
je
cltd
sbb
fildl
mov
mov
pop
dec
lods
sti
jmp
mov
xor
pop
xchg
andb
es
sahf
ret
jo
cmpsl
imul
mov
or
dec
lds
mov
push
lods
push
ljmp
in
fadd
mov
dec
outsb
xor
loopne
pop
sti
xchg
clc
gs
int3
lret
pop
mov
mov
stc
push
std
rcl
or
xchg
xchg
lea
mov
test
jecxz
mov
aam
ljmp
push
movsl
push
lret
inc
cmp
xchg
push
push
pop
aas
cmp
pop
stc
cld
std
shrb
insb
sbbl
inc
pop
xchg
mov
mov
daa
rorl
push
stos
push
call
repnz
dec
inc
cwtl
fisttpl
hlt
inc
xor
aad
cmp
sbb
gs
jmp
cmp
repnz
scas
das
ljmp
test
movsb
sub
sub
nop
and
data16
movsb
mov
stc
push
pop
cmp
fwait
dec
out
jno
add
inc
mov
mov
fdiv
aaa
xor
imul
ss
push
fisubs
imul
dec
jl
out
in
mov
insb
enter
jmp
push
jmp
xchg
mov
roll
inc
dec
dec
mov
push
add
dec
in
fsts
mov
mov
adc
hlt
jecxz
bound
and
sub
mov
ret
aam
jmp
sbb
das
stos
mov
pop
sbbb
cmp
xor
pushf
mov
xor
mov
mov
lcall
jl
scas
popa
aam
and
xchg
mov
lret
or
mov
cmp
decl
repz
cltd
cmp
xchg
jno
fstl
push
push
jb
flds
or
mov
jb
add
sti
std
clc
xor
sub
rcl
mov
orb
scas
and
push
aas
sahf
inc
xor
mov
mov
xchg
int3
push
movsb
jno
xor
pusha
cmp
mov
xchg
adcb
or
lods
mov
popa
lret
sub
adc
inc
bound
add
pop
sbb
add
inc
ds
add
adc
pop
out
fcmovbe
gs
mov
or
xchg
cs
mov
iret
ret
in
xchg
mov
inc
ret
jb
jp
stos
xchg
sarl
sub
rclb
arpl
mov
mov
insl
int
xchg
dec
lahf
mov
test
int3
push
addr16
nop
mov
push
sbb
ds
fdivs
cwtl
and
addb
ljmp
fists
or
fisubrs
fwait
mov
add
xchg
push
aas
or
inc
add
aad
js
rorl
xchg
mov
mov
fcomp
iret
out
outsb
push
xchg
push
dec
push
push
and
push
imull
xchg
dec
mov
inc
push
call
pushf
dec
ds
mov
enter
addl
into
jnp
ljmp
into
jp
sbbb
mov
mov
and
popa
adc
and
stc
jae
loop
or
jb
aaa
hlt
push
fcompl
out
les
xchg
cld
push
lods
arpl
repnz
in
adc
jle
mov
cmpsb
jbe
mov
ficomps
int3
mov
jno
mov
lds
mov
sbbl
mov
cwtl
inc
test
sub
push
inc
dec
addr16
push
aad
cli
in
sbb
movl
mov
cmp
gs
insl
lods
xchg
or
fwait
mov
jae
ja
int
imul
xor
push
sub
insl
and
sahf
aam
jne
lods
inc
inc
xor
mov
xor
pop
jge
mov
lods
or
cmp
cmp
lret
mov
stc
push
popa
xor
mov
sbb
repz
sarb
xchg
cmpsl
sbb
ret
push
add
push
ss
testl
fidivs
xchg
cmp
push
cmpsl
fmul
sub
stos
sbb
in
in
icebp
adc
pop
fnsave
push
mov
sbb
push
insl
sub
das
mov
mov
sar
push
faddl
and
test
pop
out
xor
sub
inc
das
scas
fadds
xchg
popf
mov
mov
mov
fldt
leave
sbb
xor
or
push
adc
sub
aas
lret
cli
mov
cld
fs
sbb
std
in
push
and
mov
and
mov
sbb
cmp
jecxz
inc
cltd
or
stos
xchg
sbb
mov
jl
jl
ja
jmp
xor
mov
inc
dec
jo
lods
or
out
lcall
inc
mov
sub
lock
notl
inc
jecxz
jb
pop
sub
jbe
push
sti
aaa
clc
xchg
ficompl
and
mov
or
add
dec
sbb
cmp
cmp
adcl
cmp
xchg
ss
inc
pop
inc
mov
jno
sub
or
rcll
push
jl
cs
das
subl
and
mov
jmp
adc
mov
add
pop
adc
sub
mov
mov
cwtl
insb
ss
popf
nop
dec
fucomp
cmp
andl
scas
sbb
adc
pop
scas
lods
pop
hlt
test
ja
adc
pop
xchg
fs
inc
lret
push
fmuls
insl
das
in
sarb
xchg
or
adc
cmp
jb
out
in
adc
roll
addb
mov
jmp
fisttpl
scas
xor
test
pop
insl
pop
ja
cltd
cmp
lods
hlt
mov
sbb
mov
nop
repz
aas
out
leave
hlt
stos
cmp
adc
mov
outsb
add
adc
cmpb
dec
sbb
dec
and
dec
mov
xor
jge
pop
adc
pop
lahf
xchg
add
xchg
fbstp
mov
rclb
ret
push
mov
jbe
push
xor
cmp
xchg
push
xchg
xor
pop
in
cs
jns
test
movsb
inc
hlt
adc
mov
lahf
stos
test
inc
jge
mov
enter
inc
xchg
inc
mov
ret
clc
clc
jg
arpl
daa
adc
add
mov
cmpsl
outsb
sub
xchg
xchg
push
inc
std
inc
lahf
cli
loop
das
pop
and
xor
call
pop
popa
xchg
pop
aad
push
stc
dec
sar
add
or
out
les
pop
pop
add
pop
imul
mov
insl
scas
mov
push
push
sub
ret
inc
stos
leave
adc
jns
push
jnp
arpl
shlb
pop
mov
and
mov
and
imul
loopne
dec
jge
dec
sbb
push
scas
and
sbb
jle
adcb
push
push
push
adc
das
popf
out
fcomp
int3
loopne
xlat
sub
inc
gs
push
sub
je
jl
mov
notl
leave
mov
ret
dec
xchg
sub
push
mov
dec
sbb
sbb
fwait
lods
fdivl
ljmp
jnp
push
pushl
enter
pop
inc
cmp
mov
outsl
lods
xor
push
mov
mov
out
popf
aam
mov
lods
das
xchg
pop
dec
mov
inc
ret
mov
jmp
out
sbb
lret
jmp
sub
mov
ja
inc
fs
mov
ss
movl
mov
test
pop
jecxz
aam
repnz
sub
int
or
cs
stc
iret
inc
lret
mov
mov
cmp
fsubrp
and
xor
pop
orb
int
scas
push
push
sbb
jne
mov
cmc
leave
pop
lret
adc
mov
xchg
pop
jo
xorb
or
pop
mov
jmp
xchg
pushf
ror
leave
mov
nop
mov
sbb
lds
cltd
ljmp
popf
mov
inc
adc
sti
or
xor
mov
movsl
js
lea
dec
mov
push
dec
jne
jnp
sbb
cmc
or
sub
sbb
and
jle
jo
dec
fistpl
cmpl
mov
xor
repnz
loop
mov
daa
mov
arpl
fs
out
scas
fsts
xchg
ret
mov
add
mov
sbb
xchg
leave
imul
adc
sbb
mov
mov
imul
in
or
fdivl
push
es
lds
add
mov
xchg
mov
enter
xor
shlb
jge
xorb
lahf
cltd
test
pop
sub
mov
or
dec
jne
les
add
ds
incl
cmc
int
mov
sarl
mov
pop
mov
stos
push
sub
dec
dec
pop
jno
imul
jge
add
aaa
mov
inc
sub
pusha
std
and
inc
les
xchg
add
popf
mov
insb
push
mov
jecxz
pop
mov
adc
sub
insb
imul
adc
jns
in
and
mov
and
cs
push
inc
or
jnp
pusha
xchg
out
outsb
aam
mov
xchg
dec
lock
data16
pusha
mulb
jmp
push
stc
jg
push
mov
pushf
or
mov
sbb
test
jge
es
ljmp
sbb
mov
mov
clc
pushf
xchg
mov
ljmp
icebp
jecxz
ds
inc
dec
push
test
adc
sub
rcrl
pop
adc
mov
clc
adc
dec
scas
cmpsb
ss
mov
xchg
push
push
ss
dec
ds
ret
bound
outsb
jle
mov
adc
or
loopne
fiadds
ret
fiaddl
andl
or
lret
jge
mov
jo
jge
movsb
fnstenv
dec
insb
dec
out
pop
mov
std
in
movsl
dec
rol
lds
cmpsb
fwait
inc
adc
xchg
loope
insb
cmc
pop
mov
pop
push
and
das
movsl
or
movsb
scas
xor
cwtl
decl
push
imul
pop
dec
clc
push
xlat
push
inc
std
out
sub
in
cmp
cmc
xchg
pop
gs
data16
roll
push
stc
mov
mov
out
cmp
mov
mov
jb
inc
ret
lret
push
pop
jmp
test
repnz
gs
pushf
mov
inc
aas
nop
addr16
scas
gs
sarb
pop
sbb
iret
or
xchg
fnsave
lds
scas
pop
pop
scas
imul
push
mov
fsubrl
shlb
mov
lods
jne
jno
sarl
notb
into
pop
hlt
dec
das
push
and
cmc
adc
inc
xchg
adc
push
sbb
xor
pop
jo
in
inc
iret
xor
cld
cmp
jecxz
add
psrlw
or
mov
test
mov
iret
sbb
xor
jns
cmc
lcall
dec
cld
adc
mov
hlt
jns
pop
ljmp
out
push
vsubss
lahf
mov
lock
xor
fcmovnb
dec
notb
insb
ret
and
out
inc
jo
mov
inc
les
and
test
dec
scas
inc
mov
sub
sub
icebp
adc
push
adc
cmpl
and
xchg
adc
sub
mov
adc
lahf
movsl
idivl
sbb
lret
sbb
or
arpl
inc
cmp
cs
mov
mov
adc
jnp
xor
imul
lods
cmp
cwtl
mov
popf
shll
jbe
inc
cmp
imul
loope
repnz
inc
push
rorb
fstps
in
ja
dec
addr16
insb
cmp
fmuls
push
xchg
add
mov
add
push
aam
push
lods
mov
sub
mov
cmp
cltd
mov
mov
sbb
push
jo
mov
jne
cs
js
stc
push
stos
add
jecxz
cli
imul
iret
sbb
push
sbb
cmp
inc
pop
sbb
bound
cmp
popa
pop
or
push
aad
pop
lods
adc
adc
movsl
xchg
jb
int
mov
jae
cmpsl
add
inc
movmskps
sbb
icebp
pop
insl
call
dec
jne
out
mov
jbe
jge
pop
icebp
dec
or
xchg
insl
jne
fwait
arpl
outsl
or
sbb
sbb
int
rclb
inc
add
in
push
stc
cmp
inc
cs
sarl
push
cmpsl
gs
pop
inc
jne
or
movsb
rolb
adc
xchg
cmp
addb
cmp
in
mov
xchg
xchg
mov
mov
out
scas
dec
insb
dec
mov
aaa
and
cmp
cwtl
and
and
push
xchg
icebp
mov
mov
jno
dec
out
xchg
xchg
mov
pop
cmpsl
and
lcall
aaa
jl
adc
das
jmp
cmp
add
in
sub
pop
xchg
in
mov
adc
add
inc
xlat
test
xchg
push
sub
mov
dec
js
push
push
lcall
adc
jl
daa
jae
add
xchg
sub
data16
std
jp
jle
inc
clc
call
xchg
out
clc
xchg
arpl
pop
sub
inc
cwtl
xor
add
jns
test
sbb
dec
jne
out
inc
xor
and
mov
sti
mov
push
mulb
call
test
fstl
mov
arpl
sbb
sub
cwtl
push
sbb
and
dec
mov
in
aad
dec
pushf
int
mov
test
shrl
cmp
xchg
out
and
inc
dec
lock
icebp
mov
lcall
bound
mov
pop
imul
push
xchg
mov
mov
cmp
xor
pop
shll
bnd
ds
sarb
mov
pop
loop
es
int
popf
dec
lds
push
mov
lea
lods
jns
xchg
push
mov
xchg
ds
inc
addr16
dec
pop
repz
pop
mov
int3
pop
repz
cmc
jnp
insl
jecxz
mov
sahf
lret
into
push
lock
lds
xchg
rol
sub
jo
inc
lea
roll
xlat
push
out
notb
xchg
scas
add
push
adc
roll
sub
mov
jne
jge
js
add
imul
mov
pop
je
push
mov
sbb
lahf
xlat
add
xchg
pcmpeqd
lcall
and
bound
add
outsl
sub
ror
test
lock
imul
aas
push
mov
mov
adc
xchg
clc
sbb
cld
push
in
mov
aas
in
ds
sub
pop
fs
insl
inc
mov
sbb
incl
add
dec
xor
push
inc
xor
fisttpll
arpl
ss
and
mov
sbb
mov
pushf
ficoml
inc
je
leave
rcrl
push
sub
jb
or
stos
stos
push
shll
fsubs
xchg
icebp
jl
lahf
xchg
sub
sub
cmp
push
and
enter
dec
fisttps
cltd
into
jbe
mov
fs
icebp
cmp
fcompl
pop
insb
mov
cmp
or
mov
pop
rclb
xchg
aad
mov
test
cmc
mov
jmp
lcall
iret
cmp
mov
pop
pop
out
mov
mov
fwait
push
data16
xor
in
push
data16
es
mov
hlt
add
addr16
shrb
movl
insb
mov
dec
fstps
ja
and
adc
fldenv
xchg
pop
inc
adc
pusha
movsb
lcall
and
shrl
dec
mov
mov
dec
cmp
xchg
popa
lock
aaa
dec
in
pop
fsts
pop
push
inc
hlt
sbb
or
xchg
cmc
cli
cmpsl
ror
fstpt
pop
insl
loope
in
jo
lahf
into
mov
jge
jg
movsl
mov
int3
push
push
shlb
sahf
inc
mov
xchg
in
sub
cmpsl
aam
in
ds
je
and
daa
push
jns
inc
push
mov
cmc
xchg
adc
imul
and
shl
cmpl
pushf
jns
in
sbb
cmp
iret
or
push
cs
push
icebp
ret
lock
cmp
pop
scas
mov
xchg
push
pop
mov
or
inc
or
sbb
ror
adc
cmp
in
cmc
icebp
push
test
mov
test
mov
out
sarl
aad
xchg
pop
adc
test
mov
lods
test
cltd
and
mov
je
outsb
cmp
test
pop
and
add
mov
mov
inc
inc
gs
push
jne
test
testl
iret
sti
out
shr
lock
pop
fbstp
icebp
ss
rol
out
pop
adc
stos
cmc
lret
lcall
or
xchg
sahf
adc
add
sub
test
jns
enter
stos
call
pop
xchg
je
mov
or
in
lods
test
inc
xchg
js
pop
adc
or
ret
pop
in
pop
rcrl
adc
cmp
and
cltd
sub
int
pushf
arpl
xor
mov
mov
xor
jecxz
sbb
out
adc
mov
fwait
popa
inc
and
ret
mov
aad
test
xor
mov
inc
cmp
fsubl
outsl
or
in
pop
push
mov
popf
mov
je
sbb
into
jp
inc
push
insl
or
insl
stos
in
loop
push
imul
aaa
add
jmp
ja
jl
daa
and
sbb
jg
cld
xchg
in
jne
mov
adc
dec
push
cmc
pop
sbb
hlt
jnp
push
xchg
sub
cmp
pop
hlt
cmp
int
fists
mov
aaa
adc
push
leave
xor
inc
mov
dec
sbb
mov
pop
stos
into
mov
mov
bound
shlb
cmp
xchg
inc
jg
pop
imul
std
dec
xor
pop
mov
int3
mov
lock
cmc
subb
leave
inc
dec
sub
pop
cmp
ss
inc
adc
sbb
int3
lahf
insl
inc
popa
sub
int
dec
ja
repnz
xchg
lahf
or
rcl
xchg
aad
popf
cld
or
xchg
jne
stos
cmp
int
lahf
cmpsb
aam
xchg
or
mov
sti
push
or
xorb
mov
cmpsb
and
pop
and
aam
outsb
cltd
mov
and
push
pop
fdivrs
test
fisttpl
mov
orl
or
int3
pop
mov
cmpl
mov
sub
jmp
out
addr16
sub
mov
pop
and
and
stos
clc
cli
sbb
fcompl
push
cmp
rorb
xchg
sbb
clc
int3
add
jl
movsl
test
daa
xchg
in
cmp
xchg
mov
pop
mov
mov
mov
lahf
hlt
inc
jmp
loopne
rcll
mov
adc
jno
lcall
or
pop
sub
sbb
jp
mov
pushf
sti
test
dec
dec
xor
pop
insl
int
dec
dec
cs
sbb
xchg
test
mov
jl
mov
cmc
in
sahf
push
inc
cmp
sub
popf
call
stc
or
adc
pop
aas
push
or
test
xchg
mov
mov
mov
ds
sub
jbe
inc
test
push
xor
hlt
inc
imul
jge
cmp
add
sub
pop
sub
push
mov
nop
and
js
jg
sbb
push
push
add
mov
daa
cmc
repnz
mov
jge
repnz
in
push
out
lds
fnstenv
sub
xchg
push
mov
mov
push
sarl
adc
xchg
dec
ret
jle
out
repnz
popf
jl
test
adc
cmp
aaa
insl
xchg
sbb
inc
divb
fsts
push
in
sbb
mov
mov
shll
push
dec
cmp
add
jmp
lret
push
jmp
ret
pusha
inc
lahf
popf
inc
jle
or
leave
inc
imul
arpl
rcr
inc
xchg
rol
dec
stos
lcall
inc
dec
lods
lock
lea
xor
das
loop
scas
dec
outsb
outsb
mov
shrl
in
fiaddl
pushf
negl
fistpl
insl
arpl
gs
xlat
in
call
shlb
mov
fnsave
fimull
mov
icebp
das
add
or
adc
adc
sbbl
mov
jmp
mov
in
or
jmp
xchg
xchg
mov
sbb
addr16
cmp
add
push
inc
jns
and
pop
jle
or
cmp
pop
sbb
xchg
jb
cmp
insb
jno
xchg
dec
adc
arpl
cmp
mov
jns
jo
inc
push
xchg
jg
jbe
jae
cld
pop
mov
or
nop
dec
xchg
inc
fisttpl
adc
or
popa
ss
mov
icebp
lods
adc
jge
xchg
and
adc
adc
sti
out
insb
xchg
jns
pop
lods
iret
packsswb
mov
xlat
jnp
xlat
fwait
sbb
inc
add
int
pop
adc
aas
pop
mov
sub
orb
dec
ljmp
mov
shrb
jo
les
pop
mov
cmp
js
mul
in
mov
mov
rol
pop
lahf
push
cltd
les
fdivl
mov
cmp
cmpsl
jmp
out
hlt
out
sbb
lcall
icebp
dec
into
std
popa
imul
sub
and
jb
clc
jl
dec
fstl
inc
jb
add
sbb
push
gs
out
xor
dec
pop
cmpsb
aad
fiadds
push
jmp
mov
sub
push
insb
out
movsl
pop
bound
fnstenv
jp
xchg
sbb
sbb
fists
or
rclb
cmp
pop
cmp
xchg
mov
mov
jmp
std
lods
int3
fimull
cmp
adc
add
dec
cld
sahf
xchg
ss
sub
scas
sbb
push
jb
sahf
ja
sbb
data16
inc
pop
sub
mov
inc
xchg
mov
imul
ja
sub
jmp
in
shl
popf
aaa
popa
xchg
push
jns
inc
das
mov
test
cmp
cmp
cmpsl
and
pop
inc
xchg
cmp
xchg
push
ja
lcall
movsb
cmc
mov
inc
sbb
mov
xor
shll
jg,pn
ret
mov
push
test
ret
push
jecxz
xchg
mov
bound
push
jmp
lea
dec
sbb
out
jmp
sub
xchg
subb
ljmp
mov
fndisi(8087
loope
jecxz
sub
xor
daa
stos
sahf
inc
push
jg
cs
mov
pop
pop
clc
and
jg
mov
sub
inc
pop
xchg
je
xchg
push
popf
mov
mov
js
mov
gs
or
addr16
repz
in
push
inc
aad
dec
test
xor
or
popa
shll
xor
adcb
outsb
ret
in
addr16
mov
mov
cmpsb
out
inc
push
or
pop
loope
decl
mov
loopne
add
mov
pop
xor
add
mov
push
xchg
hlt
xor
scas
jge
mov
in
out
ja
mov
in
mov
adc
sbb
test
iret
sbb
lds
mov
add
loop
jle
movd
lcall
xchg
lcall
mov
mov
cltd
and
aad
mov
stos
mov
add
frstor
mov
lret
adc
cmp
mov
dec
inc
stos
push
mov
cmp
pop
lret
gs
mov
pop
xor
lcall
cmp
mov
and
mov
outsl
movsl
push
jno
xlat
arpl
outsb
cmpb
mov
sub
dec
dec
adc
std
mov
pop
and
push
push
icebp
int3
mov
xor
loopne
mov
mov
lods
and
xor
and
xor
add
in
sahf
leave
mov
inc
hlt
pop
mov
lret
cli
push
aaa
mov
inc
or
pop
rcr
cwtl
xor
imul
xchg
clc
ret
inc
fld
int3
int3
sbb
jae
sbb
loop
xchg
push
ficoms
lods
xchg
shrb
add
shl
mov
stc
mov
jge
clc
rol
push
and
jno
int
add
adc
out
mov
xchg
out
pop
mov
push
mov
stos
pop
jns
inc
lds
mov
test
icebp
cmp
pop
pop
xchg
lcall
jp
mov
jl
mov
lods
push
push
out
xchg
pop
lods
cmp
xor
sbb
or
pop
lret
add
fsubrs
mov
iret
call
xchg
test
std
lahf
idivl
adc
pop
add
popa
add
pop
in
sbb
inc
in
popa
mov
sbb
cmp
je
mov
pop
sbb
pop
cmpsb
daa
enter
sarb
xor
enter
jmp
andps
clc
xor
add
mov
stos
fs
pop
or
xor
push
sarb
dec
sbb
pop
test
pop
loope
into
pop
rorl
mov
mov
cltd
leave
ds
lret
insl
xor
lea
popa
jnp
mov
jbe
mov
xchg
inc
dec
mov
repz
into
andb
jg
inc
sub
fwait
pop
fcompl
mov
loop,pn
clc
insl
scas
cmp
lods
mov
jbe
rcll
je
lods
xchg
das
sarl
pop
cmc
jp
push
inc
pop
cmp
sbb
aas
mov
lods
lcall
xlat
mov
leave
push
outsl
jecxz
clc
ss
roll
add
and
leave
pop
mov
adcl
cmp
pop
cmpb
push
sub
xor
mov
outsb
xchg
mov
push
fs
in
clc
push
jmp
aaa
adc
mov
cmc
push
dec
out
jmp
adc
or
or
ss
sahf
fs
cmp
clc
xchg
in
ret
fadd
ljmp
in
in
cmp
mov
mov
inc
or
cld
int
and
fsubrl
mov
xor
pop
in
xchg
mov
fldenv
jg
fmul
test
jo
mov
jle
and
dec
or
mov
das
push
std
dec
fcomps
sub
sbb
in
stos
inc
out
sub
subb
xchg
daa
sub
cmp
fcmove
pop
aad
mov
lcall
ret
mov
mov
inc
dec
outsl
dec
pop
xor
icebp
test
lcall
shll
push
xor
dec
lea
lods
add
sysret
test
pop
fdiv
sub
pushf
lret
aam
push
out
or
mov
or
pop
test
or
xchg
and
js
sahf
dec
inc
mov
sub
cld
lea
xor
sbb
sarb
push
xlat
jns
aam
xor
adc
push
push
loop
and
out
fiaddl
fstl
inc
lods
aad
or
pusha
mov
ret
data16
rorb
fidivs
arpl
inc
cmp
mov
adc
push
notb
adc
std
jge
out
xor
mov
sbb
scas
sub
adc
mov
or
fidivrs
adc
fadds
jge
jnp
inc
popa
mov
ds
pop
and
jmp
cmp
lds
pop
mov
fnstenv
fisubrs
repz
mov
dec
mov
pushf
test
ret
add
sbb
mov
iret
dec
mov
outsb
clc
out
rorl
sub
shl
sbb
les
xor
inc
loope
orl
imul
test
inc
imul
xor
inc
out
fwait
cmp
insb
xor
pop
mov
out
cmp
imulb
out
cmp
cmp
add
lods
sbb
jl
bound
int
cmp
inc
dec
ret
test
sub
sbb
mov
repz
pop
add
cmc
mov
in
mov
xor
shlb
out
hlt
adc
adc
add
shl
cmpsl
inc
out
pop
inc
mov
xlat
movsl
mov
aas
pop
cltd
in
loop
in
add
fidivs
push
cmpb
movsl
pop
sahf
inc
pop
sub
test
fucomi
cwtl
push
push
mov
push
inc
sbb
xlat
gs
push
mov
mov
adc
hlt
sbb
test
xchg
cmp
xor
bsr
std
jge
inc
push
loope
mov
fisubs
pop
movsb
xchg
push
mov
pop
incb
stos
adc
push
pushl
ret
xchg
bound
sbb
push
sbb
fwait
cwtl
imulb
pushf
in
enter
or
sbb
movsl
out
mov
test
mov
adc
jmp
ljmp
aad
outsl
push
mov
and
ja
lahf
rcl
jb
mov
mov
inc
push
push
push
xor
xchg
lods
inc
adc
jae
movsb
daa
push
mov
repnz
loopne
mov
hlt
pop
adc
push
sub
xchg
and
test
push
cmp
mov
mov
fistps
jg
xor
fstpl
and
repnz
xchg
fisttps
lret
pusha
xchg
in
jg
sbb
mov
or
cmp
push
jae
mov
push
pop
out
xchg
out
xor
lods
pop
xor
bound
es
pop
clc
xchg
call
mov
aas
in
jno
inc
inc
or
roll
addl
push
and
inc
lea
lods
andb
inc
into
shlb
ss
into
nop
shll
mov
xor
mov
mulb
sub
dec
xchg
xchg
aam
xor
sbb
ljmpw
mov
imul
jo
rcrl
push
push
mov
dec
gs
stos
jl
aaa
adc
jl
add
cmp
lcall
stos
jb
add
xchg
add
sub
dec
lret
fnstcw
sub
jecxz
or
mov
jns
imul
leave
pop
xchg
insb
roll
adc
mov
mov
push
testl
frstor
push
sbb
or
push
or
stos
cwtl
mov
loope
or
cwtl
fcoml
pop
inc
dec
cld
mov
xchg
in
jp
lods
xchg
jno
jo
dec
fsubrp
std
mov
jmp
pop
popl
pop
mov
jmp
out
fildll
daa
sbb
ret
add
push
and
and
pop
mov
inc
iret
fdivrp
icebp
mov
and
out
aas
ja
loope
xchg
mov
je
rorl
data16
adc
cmp
daa
testl
leave
push
xchg
mov
inc
adc
scas
xor
cld
jne
aaa
sub
jge
add
out
xchg
fidivs
enter
cld
les
push
push
aad
xor
cli
xor
push
mov
lds
ss
in
call
xor
xchg
loope
shrl
fidivs
xlat
jge
out
push
repnz
mov
sbb
add
jne
in
inc
insl
adc
xor
xchg
out
cmp
fdivp
push
pop
movsl
or
mov
cmc
sbb
and
push
mov
ret
imul
push
adcl
insb
stc
dec
sahf
fidivrs
push
inc
mov
mov
or
add
flds
daa
cmp
lods
push
imul
mov
das
movsb
adc
push
cld
cmpsl
pushl
addr16
jg
sub
add
inc
or
test
rclb
clc
cmp
ficoms
dec
xchg
push
push
nop
push
mov
aad
test
push
and
adc
xchg
xor
dec
in
popa
xor
into
dec
popf
xchg
insl
ss
mov
les
das
test
lret
movsb
pop
test
movsl
jge
nop
enter
cmpsl
jae
and
add
call
mov
movsl
in
fcoml
inc
mov
into
pushf
or
adc
push
cmp
stos
hlt
mov
xchg
movl
xchg
mov
add
data16
insb
aad
test
mov
add
mov
add
push
clc
adc
xorl
cmpsb
push
inc
mov
bound
bound
stc
sub
sbb
neg
fs
cmp
add
fistps
cltd
repnz
dec
dec
dec
push
dec
pusha
repz
jns
adc
daa
dec
subl
dec
cld
int3
arpl
dec
fidivrl
repz
xor
mov
and
inc
lods
and
mov
mov
cwtl
fstpt
sbb
xor
je
stc
xor
push
mov
xorb
ss
mov
jae
xor
cmp
out
pop
cltd
ljmp
call
lcall
pop
jmp
out
in
lods
xor
fsts
ret
dec
sti
aaa
push
pop
xchg
push
or
mov
adc
in
ja
lods
loop
jge
jbe
sbb
jns
inc
add
in
rcrb
jg
insb
sbb
int
xor
mov
jecxz
fcoms
addr16
jbe
outsl
dec
popf
ljmp
bound
xchg
mov
jp
and
sbb
or
out
pop
adc
inc
dec
cmp
dec
dec
or
sbb
sar
push
sbb
push
jge
or
cmp
push
lods
adc
dec
jecxz
daa
jnp
jb
out
pop
lea
xlat
stc
jle
xchg
pop
cwtl
xor
popf
push
mov
cmpsb
int3
popf
popf
dec
movsb
gs
data16
xchg
xchg
and
jb
outsb
je
sbbl
dec
subl
fdivs
fs
push
dec
faddp
push
dec
aam
cwtl
inc
jae
in
mov
mov
data16
out
adc
jmp
cli
pop
cld
add
add
mov
adc
int3
dec
pop
data16
sti
push
leave
or
lods
add
rcrb
ss
popa
jecxz
clc
sub
aam
push
stos
out
ja
adc
mov
leave
mov
cwtl
xchg
adc
data16
jo
xchg
stos
negb
lods
add
addr16
add
ficomps
or
test
push
js
and
pop
shrb
xchg
cld
xor
cmp
jns
mov
add
out
cmp
jns,pt
adc
mov
std
sahf
loope
movl
lods
rclb
jbe
or
adc
and
mov
mov
cmp
in
cmp
mov
push
adc
dec
adc
addl
addb
adc
xchg
mov
or
je
inc
test
stc
clc
or
or
pop
roll
dec
fildl
shlb
mov
bound
lret
and
sahf
sbb
xchg
js
loope
add
mov
xchg
fdivr
xor
fimull
rol
lret
cmp
cmp
cmp
add
mov
mov
popa
adc
negb
inc
inc
lock
lock
pop
push
rolb
mov
loope
enter
cmp
int
dec
in
into
pop
or
fxch
cmp
sub
mov
jle
mov
mov
pop
dec
jge
rorb
sbb
sbb
pop
enter
pop
push
outsb
or
pop
aas
xchg
iret
jge
inc
mov
xchg
es
jmp
stc
in
pop
mov
dec
movsl
icebp
xlat
mov
mov
jnp
cmp
jae,pt
ljmp
iret
sbb
add
ss
dec
out
in
aas
rcrb
xchg
mov
js
inc
repnz
mov
pop
stos
push
aaa
hlt
sarl
mov
pop
lods
sbb
dec
and
test
sar
xor
orb
mov
jae
stos
push
test
jl,pn
data16
mov
in
cmp
test
jle
xor
fsub
mov
in
jne
or
xchg
mov
jg
push
jge
dec
cmc
nop
xor
inc
xchg
scas
insl
adc
adc
xchg
mov
cltd
aad
mov
mov
ja
mov
lods
dec
mov
mov
jnp
in
lea
clc
mov
movsl
aam
push
pop
nop
mov
rcrb
fwait
roll
sbb
repz
sub
cwtl
xor
or
pop
lds
jne
packuswb
and
xor
push
add
push
sti
xor
loope
xor
aaa
ret
in
shl
mov
fcoml
jns
ljmp
cmp
shlb
adc
mov
inc
pusha
inc
cmp
or
push
les
cli
inc
cmpsb
jnp
stos
inc
pusha
or
add
sti
sti
dec
and
lea
jne
cmpsl
iret
mov
jge
andb
push
stc
insl
and
repz
cmc
sbb
outsb
xchg
xchg
add
nop
dec
in
sub
sarl
sahf
fimull
sbb
enter
mov
push
cmp
or
rol
lret
sti
out
sbb
aam
sti
push
iret
lea
push
mov
popa
outsb
push
ret
jb
mov
adc
or
add
jmp
cmp
mov
outsl
cmpsb
lea
pop
inc
aam
bound
dec
add
xor
xchg
insl
pop
or
ret
mov
add
sahf
sub
inc
popf
movsl
repnz
movsb
stos
sbb
insb
arpl
xchg
repnz
cmc
fisttpl
sbb
arpl
addb
jbe
and
mov
xor
leave
test
les
cmpsl
imul
push
scas
xorb
inc
popl
lods
cmpsb
pop
loopne
xor
dec
bound
clc
divl
fwait
scas
xchg
sub
push
xlat
mov
out
cmc
push
cmp
inc
scas
mov
test
or
mov
xchg
cltd
fadd
cltd
pop
jle
in
sbb
add
jne
out
shlb
arpl
test
mov
ficompl
cwtl
inc
or
out
aad
ret
rolb
loop
push
fsub
sub
add
mov
std
mov
or
sbb
ds
insl
dec
out
ret
adc
jno
xchg
sub
xchg
pop
outsb
je
insb
lock
xchg
dec
cmpsl
xor
or
or
adcl
push
push
add
xchg
dec
jecxz
popf
sbb
push
cmp
test
cmc
mov
or
negl
cbtw
insb
cmpsl
cmp
jmp
adc
inc
sub
xchg
imul
jle
insb
push
test
stc
ljmp
jbe
cmc
into
pop
or
jp
out
cmc
xchg
mov
nop
lea
adc
mov
add
mov
hlt
jae
subl
and
pushf
sub
outsb
jne
jge
cmp
xchg
imul
xor
fs
iret
push
call
mov
insb
pop
inc
aaa
dec
push
jmp
mov
lock
stc
push
out
sbb
sbb
data16
xor
xchg
pop
loopne
iret
dec
xchg
xchg
imul
sarb
fisttps
inc
inc
imul
xlat
push
cmpsl
inc
sbb
or
mov
aam
cmp
pop
push
sub
jo
fnstenv
mov
arpl
jns
mov
push
jecxz
inc
dec
leave
es
sbb
pop
fsubrp
mov
mov
jmp
and
xchg
roll
movsl
ss
test
stos
inc
rcr
cmp
pop
mov
subb
test
and
xorl
adc
lea
adc
jbe
push
adc
ss
adc
xchg
sub
mov
pop
pop
and
je
adc
push
xchg
jne
cmp
int3
into
lret
pushf
lahf
fmulp
in
xor
mov
mov
cli
or
mov
lods
jno
sbbb
sub
movsb
jae
jns
sarb
xchg
mov
pusha
inc
or
inc
sbb
cmp
pop
stc
adc
adc
daa
das
int
cmp
rcrl
jge
cmp
loopne
and
cmp
rorl
xchg
dec
pop
rcrb
enter
xor
mov
mov
pop
add
and
pop
scas
mov
sub
mov
and
sub
movl
or
inc
dec
and
into
out
lea
mov
insl
push
shlb
sub
mov
je
fwait
leave
inc
mov
gs
pop
pop
jmp
stos
mov
lret
cld
cmpsl
mov
ret
mov
in
push
test
outsb
pop
rorb
cmp
xor
sub
jmp
or
mov
popa
sub
dec
adc
and
inc
cmpsl
cmpl
ss
loope
sub
mov
mov
jo
mov
mov
xor
sbb
xchg
or
add
cwtl
pop
mov
sbb
ljmp
cmpl
lods
leave
or
push
aaa
xchg
inc
xor
push
daa
lret
cmp
sbb
gs
inc
fnstenv
xchg
mov
fsubs
jmp
into
pusha
in
bnd
xor
or
xor
mov
fcmovnu
or
push
adc
xor
or
leave
mov
ss
mov
jnp
adc
sub
test
pavgb
test
and
jae
mov
hlt
imul
int
cltd
sbb
inc
scas
and
adc
inc
pushf
cmp
in
les
sbbb
andl
inc
or
sbb
adc
int
cmpsl
add
cs
cmp
fmulp
sbb
movb
and
sub
aas
outsl
rcl
jp
lock
fistps
jae
adc
popa
xor
pop
lds
movlps
aam
sub
in
inc
jbe
jg
sbb
xchg
fdivl
and
movsb
adc
rcl
xlat
jae
js
push
dec
cmpsb
mov
dec
clc
inc
add
sub
adc
arpl
std
or
bound
lock
loopne
adc
out
mov
pop
pusha
dec
lret
das
loop
add
sbb
inc
jg
lahf
or
mov
xor
inc
push
pop
cld
mov
jns
add
fistpll
xchg
xchg
gs
pusha
or
jecxz
push
push
pushf
rolb
sub
stos
jne
iret
jecxz
stos
cmpsl
clc
mov
leave
mov
sub
add
rolb
jge
dec
sbb
mov
mov
lods
shlb
daa
jmp
xchg
xlat
icebp
lcall
icebp
lea
inc
mov
inc
enter
sbb
imul
xor
iret
cmpsl
add
sub
rcl
aad
pop
imul
xor
push
incl
stos
imul
dec
adc
aad
pusha
mov
jg
ficomps
aas
shlb
cs
hlt
add
inc
ljmp
jmp
jne
enter
lcall
mov
mov
filds
jns
popa
xchg
pop
shl
xchg
mov
rorl
sbb
fnstsw
sub
fidivrl
mov
sbbl
mov
sahf
shlb
inc
lds
addr16
jg
outsb
mov
test
icebp
popa
inc
dec
push
cwtl
or
aas
out
jnp
sbb
and
xchg
std
ljmp
cmpsb
mov
jne
mov
in
ss
pushf
xor
or
in
std
jnp
test
test
adc
test
cmc
popf
jnp
repnz
popa
cmp
mov
sti
ret
adc
cmc
mov
lods
stc
xchg
cmp
cltd
push
adc
lret
rcrl
enter
out
loop
pop
push
lret
cmp
pop
lods
adc
mov
cmp
incb
push
mov
out
cld
test
mov
lret
mov
aad
sbb
mov
in
leave
xor
popa
repz
sbb
stos
mov
cld
aaa
outsb
out
add
push
aad
cltd
or
mov
adcl
mov
pop
popf
imul
repnz
hlt
test
aam
ret
add
mov
int
jb
xchg
xlat
xor
hlt
mov
js
mov
outsl
std
pop
jl
rclb
mov
mov
cltd
daa
lahf
cmp
scas
add
test
sbb
fnsave
popf
jecxz
lods
adc
push
sbbl
leave
cmp
or
add
mov
xchg
dec
cmpsb
mov
ja
or
fstps
add
push
cmp
stc
inc
movsb
andb
fldl
mov
lahf
test
fstpt
jbe
and
adc
fdivl
inc
movsb
lds
add
scas
lock
inc
push
jge
stc
addb
fwait
push
push
clc
mov
rcrl
mov
cmpb
inc
mov
inc
adc
andl
adc
add
xchg
inc
jecxz
lock
mov
mov
adc
jbe
filds
inc
cmp
popa
fcompl
mov
or
stos
xchg
or
inc
mov
pop
push
push
or
pop
dec
jg
mov
mov
fists
out
and
fs
or
mov
pop
nop
enter
adc
dec
cmp
cmp
incb
aad
sub
fs
pushf
jo
out
add
jecxz
and
push
xchg
popl
stos
pop
or
mov
icebp
pop
shll
jno
sub
sbb
sbb
push
enter
out
jge
push
ja
mov
or
das
aam
add
mov
repz
inc
mov
pop
aad
lahf
pop
mov
cli
add
jbe
addb
push
je
loope
mov
xchg
movsb
cmpsl
jmp
fildl
inc
fildl
push
fmulp
push
adcb
adc
test
lcall
cmp
cmpsb
dec
test
outsb
xor
xchg
cli
mov
lahf
mov
int3
int
jp
imul
je
add
push
pop
test
in
and
push
ljmp
repnz
cmp
mov
and
popa
adc
fldenv
mov
sar
lcall
sub
sub
aad
add
mov
rorb
xchg
adc
fwait
in
jbe
mov
xor
pusha
fmuls
xchg
or
insl
int
lds
inc
insl
fimuls
outsl
or
sub
lret
rorl
fdivrs
test
or
loop
fmuls
lahf
imul
sub
in
jo
pop
xor
xor
mov
and
inc
mov
mov
ljmp
sub
hlt
or
sbb
jecxz
add
mov
test
sbb
enter
out
xchg
lods
shlb
dec
test
icebp
addl
add
js
dec
mov
jne
xchg
out
cmp
lock
push
repz
out
test
fistpll
rcr
inc
add
fnstenv
or
adc
xchg
xchg
int
stc
and
mov
pop
arpl
pushf
shl
jae
or
sbb
cmpsl
sbb
shl
jo
insb
imull
mov
mov
jmp
call
enter
push
inc
shll
and
stos
inc
or
add
nop
imul
shl
paddsb
mov
add
mov
repz
xchg
lret
mov
cmp
testb
mov
and
jns
push
fildll
roll
mov
cmp
push
stos
je
sub
rolb
pop
movsb
push
jg
lods
cmp
rorb
and
rorb
pop
arpl
xor
lock
sarl
mov
in
xchg
out
inc
dec
fs
stos
adc
jo
cwtl
push
icebp
arpl
pop
decb
dec
insl
mov
sbb
lret
add
mov
je
insl
xchg
or
and
inc
pop
cwtl
jbe
or
outsb
sbb
xchg
mov
adcl
jmp
test
xchg
fbstp
not
or
enter
and
sbb
pop
lret
adc
aaa
in
call
ljmp
mov
das
sub
lods
jns
mov
and
mov
inc
leave
xor
into
out
and
dec
addb
xchg
jecxz
ds
jno
scas
aad
in
js
test
cmpl
adc
aad
add
add
addb
inc
xchg
out
ret
xchg
push
lods
xchg
inc
rorl
and
xchg
mov
in
rorb
jge
push
xchg
pop
outsl
pop
mov
cmc
or
and
push
push
pmullw
push
int
out
rol
xchg
mov
and
xlat
hlt
pop
pop
ljmp
addl
jno
in
cli
aaa
bound
movsb
in
push
push
insb
or
jne
imul
jne
dec
scas
pop
gs
mov
stos
cmp
jg
push
test
icebp
adc
push
decb
push
xchg
loopne
std
mov
mov
lret
mov
jno
xor
pop
movsb
dec
jle
fnstenv
dec
insb
xor
push
cmp
fistps
pop
xor
mov
xchg
iret
out
stos
mov
mov
cmpb
sbb
das
lock
cwtl
sub
rcrb
stc
mov
lret
mov
ret
repz
daa
loopne
jg
add
mov
je
jno
call
xchg
mov
ja
adc
dec
mov
lahf
push
mov
aas
ss
jae
or
test
dec
sbb
dec
cli
sub
rorb
mov
fcoms
popf
push
fwait
stc
fcomps
mov
or
insb
jno
mov
jmp
orl
repz
shrl
push
cmp
adc
gs
flds
fbstp
flds
mov
add
or
test
in
jle
movsl
xchg
xor
mov
ret
sub
mov
cmp
pop
push
cmp
sub
iret
lds
mov
or
dec
test
xchg
dec
ljmp
xorb
ja
jno
sbb
inc
je
stos
push
inc
xlat
lret
jge
and
mov
cs
push
mov
pop
cmpsl
mov
xlat
arpl
test
mov
cld
es
push
mov
mov
cmpsl
testb
sahf
adc
sub
fcmovu
daa
outsb
and
aas
insb
insl
mov
cmp
cmp
test
aam
mov
lods
mov
adc
arpl
scas
fwait
or
fiadds
sbb
lret
movsb
mov
sbb
cltd
pop
xchg
jbe
cmpsl
orl
pop
push
aad
cmp
and
dec
sub
pop
aam
sahf
mov
push
cmp
insl
lahf
cs
pop
jnp
repz
int
mov
inc
mov
out
mov
lahf
fistps
shlb
or
mov
mov
push
stos
adc
push
test
pushf
add
adc
push
insb
jl
add
xchg
jmp
scas
push
lcall
push
sbb
dec
xor
pop
sub
stos
adcb
bndstx
mov
daa
xor
jl
pop
movsl
mov
loopne
std
call
ficoml
into
add
cmova
pop
testl
sti
movd
mov
sub
mov
xor
outsl
mov
and
mov
lret
lds
pop
xchg
push
sbb
aad
loop
dec
shrl
mov
rcr
lock
js
mov
adc
mov
loope
cwtl
cld
scas
push
mov
icebp
cmp
push
xor
push
cs
sbb
push
ljmp
outsb
jnp
sub
in
cmp
sbb
call
mov
mov
or
mov
or
lcall
gs
arpl
jne
cwtl
mov
jge
imul
icebp
rorl
movl
pop
lock
pop
xchg
ja
xlat
pop
mov
jbe
int3
movsb
push
mov
push
cmp
dec
or
push
cmp
adc
pop
lods
stos
cli
sbb
fldt
aam
stos
mov
lods
lahf
movsl
arpl
mov
and
dec
in
jge
popa
jl
xchg
dec
ja
adc
push
rcrl
or
ljmp
and
mov
mov
push
push
xchg
fcmovbe
and
xchg
mov
mov
mov
call
mov
xchg
ret
mov
or
out
xchg
dec
dec
xor
psubsb
sub
stos
icebp
jnp
mov
or
out
cmpsl
sub
popf
in
loope
mov
in
dec
int3
inc
ds
dec
sti
in
xchg
sub
loope,pn
hlt
jecxz
push
pusha
push
inc
jne
fsubs
loop
out
or
cli
test
xchg
popa
xor
ljmp
imul
xor
aad
in
std
test
jmp
jle
sub
fmuls
sub
mov
inc
or
xchg
mov
jp
cltd
int
jae
lcall
pop
sahf
dec
hlt
les
inc
aam
pop
dec
xor
sbb
es
test
jg
mov
sub
and
insl
add
inc
sbb
lret
ret
mov
movsb
inc
addl
cs
adc
jno
fcomps
add
enter
and
hlt
pusha
xchg
in
jo
and
sti
push
pop
pushf
mov
movsb
js
fwait
jmp
rcrb
testb
in
fwait
in
mull
testb
sub
xor
mov
add
aaa
mov
not
in
movsb
inc
add
pop
cmc
gs
cwtl
mov
jl
cmpsb
gs
push
shll
ljmp
jmp
pop
movsl
pushf
repz
in
pop
loop
cmpsl
or
in
shll
push
push
push
outsl
lods
pusha
inc
xchg
mov
addr16
add
sub
adc
cmc
xchg
cmc
rcrb
jbe
or
lret
enter
push
xor
incl
mov
inc
loope
imul
push
ljmp
mov
adc
dec
sub
push
outsb
add
and
mulb
out
lret
fisttpll
cs
xorb
jo
xor
aad
imul
cli
xchg
or
pop
fs
nop
or
addb
ret
int3
cmp
inc
test
mov
std
loop
xor
es
rcr
pop
cli
in
inc
imul
mov
inc
mov
xchg
idivl
mov
sbb
mov
mov
cmpsl
lahf
loopne
jae
iret
outsb
negb
test
hlt
sbb
jmp
adc
pop
or
mov
or
adc
pop
mov
xchg
fcompl
mov
in
add
inc
inc
pop
xor
inc
mov
ja
ja
inc
cmp
unpcklps
mov
cs
and
or
lahf
ret
in
lods
out
test
call
dec
inc
inc
xchg
sbb
iret
cmpsb
xchg
bound
mov
sahf
inc
add
xchg
lds
push
shrl
daa
adc
mov
mov
mov
cmp
dec
push
aad
stos
inc
sub
ror
xchg
inc
mov
out
pop
scas
scas
rep
icebp
das
pop
dec
adc
xchg
jl
test
clc
stos
cmpsb
call
sub
push
inc
rcr
push
arpl
lea
das
pop
scas
mov
pop
out
push
mov
fs
fisttpll
push
test
add
mov
sti
pop
dec
imul
adc
bound
adc
insb
or
je
cmc
and
xchg
test
push
mov
push
adc
lret
outsl
dec
insb
push
popf
jne
adc
sbb
ja
das
xchg
dec
not
sub
or
into
and
out
and
mov
and
push
cmp
pop
push
repnz
pusha
lods
repz
cmp
mov
push
stos
xchg
cmpsb
das
pop
xor
xor
leave
dec
mov
pushl
xchg
and
iret
pop
out
imul
ja
cli
add
jb
xchg
std
nop
mov
clc
xchg
enter
xor
jp
fsub
repz
dec
scas
xlat
js
xchg
lret
lods
pusha
add
or
xchg
dec
push
and
add
mov
mov
push
mov
inc
or
sub
lods
mov
xchg
repnz
push
lcall
dec
mov
adc
push
mov
inc
adc
frstor
sahf
movsl
inc
daa
mov
inc
stos
pop
adc
or
sub
aas
push
rolb
adc
jne
cmc
mov
jns
sub
mov
cmp
insl
jno
mov
xchg
sbb
xchg
jae
jg
push
xchg
or
cli
js
cmpl
pop
lcall
push
and
daa
fdivrl
mov
cmp
inc
jle
and
mov
sbb
pusha
sti
stos
scas
mov
rcl
jo
jle
mov
xor
add
adc
lods
push
stos
add
pop
rorl
sbb
pusha
push
frstor
imul
stc
frstor
or
fisttpll
push
mov
lret
inc
inc
lret
cmp
pop
push
push
insb
loopne
and
push
adc
pop
js
int3
or
mov
cmp
cmp
loopne
pop
mov
mulb
pop
mov
pop
out
out
fs
ja
jl
push
jno
inc
loope
int3
mov
inc
cli
pop
loopne
jg
imul
mov
or
push
and
mov
int3
pop
push
xor
xchg
inc
inc
clc
ret
xchg
or
in
push
sbb
or
pop
enter
dec
and
outsl
pushw
xor
cltd
rcr
lret
jns
mov
mov
jnp
adc
cmpl
jl
add
cli
mov
lds
push
into
sarb
or
shrl
imul
adc
sbb
pop
adc
sbb
popf
test
subl
sub
sbb
arpl
jp
test
and
es
jmp
mov
jnp
pop
inc
fs
cltd
subl
and
xor
pushf
adc
jle
inc
push
jnp
int3
sub
push
imul
in
mov
inc
inc
adcb
xor
mov
fmull
sub
repnz
mov
add
loopne
dec
sti
dec
and
cmp
cmc
dec
les
je
mov
lock
pop
or
dec
fsubr
pop
sahf
imulb
mov
jmp
shll
js
insl
and
pop
inc
pushf
add
mov
pop
add
push
pop
or
stos
xchg
cwtl
jno
pop
dec
pop
fnsave
xchg
cmpsl
pop
mov
stos
outsl
shll
add
mov
lcall
xchg
jg
nop
aam
lods
mov
dec
pop
cs
or
cmp
mov
pop
push
or
test
cmc
ret
jno
dec
scas
cmc
in
sbb
movsl
pop
aam
adc
or
es
inc
popa
divb
adc
stos
outsl
and
jecxz
or
popf
popa
pop
push
jp
lret
cld
jne
fimull
push
lods
mov
insl
ss
push
ret
add
mov
cmc
sbb
or
ds
lods
cmpb
sbb
movsb
stc
inc
mov
mov
pop
fdivrs
xor
mov
mov
cwtl
andb
cmp
imul
mov
mov
pop
adc
popa
dec
dec
out
lods
sub
inc
insl
sti
push
push
or
and
pop
pop
imul
lret
rcrl
pop
test
lods
lock
sbb
movsb
cmp
jle
dec
mov
repnz
pop
notb
inc
decb
add
mov
and
cmp
mov
rol
jo
xchg
pop
xchg
or
fsubl
loop
lock
rorb
frndint
fs
out
mov
pop
mov
sbb
jmp
mov
in
push
daa
scas
pop
lods
dec
shlb
and
add
pop
aas
mov
outsl
push
lret
mov
aad
outsb
mov
into
inc
data16
cmp
and
ficomps
into
insb
jns
mov
inc
sub
aad
icebp
cmpsl
fidivl
inc
shr
in
inc
int3
repnz
pop
add
and
or
xchg
lea
dec
repz
rcl
mov
loope
or
aaa
dec
negb
add
jmp
add
sub
loop
jecxz
xor
loopne
outsl
mov
daa
adc
test
mov
loopne
in
int
insb
pop
into
hlt
push
lahf
pop
loopne
jns
dec
push
shlb
fwait
mov
add
or
cmp
mov
adc
push
lock
jnp
push
adc
jge
scas
test
lea
lock
mov
stc
adc
std
inc
inc
sbb
pop
mov
push
fiadds
insb
xchg
inc
inc
pop
sbb
mov
mov
xlat
sub
shl
into
mov
jo
push
cmpsl
les
mov
in
divl
sub
fistpll
bound
int
cmp
shr
les
sub
mov
fdivl
out
rcrl
or
outsb
add
out
lcall
xchg
outsb
jno
xchg
cmpsl
mov
aad
dec
loop
xchg
test
or
inc
dec
add
mov
outsb
push
sub
inc
aas
test
fsubs
dec
mov
cmp
out
adc
jno
insl
mov
out
imul
xchg
ljmp
js
xchg
push
andl
call
out
jnp
mov
test
xchg
inc
fdivrl
ja
mov
mov
fildll
mov
insl
or
enter
push
xchg
mov
test
xorl
ljmp
inc
xchg
mov
scas
out
pusha
jns
fidivrs
adc
sub
iret
cmp
std
mov
mov
add
inc
enter
or
mov
or
sbb
test
xchg
adc
shl
arpl
flds
cmp
sub
sub
lret
jecxz
sbb
fidivrs
aas
sbbl
xor
iret
mov
nop
push
mov
mov
out
aas
sub
je
or
dec
mov
stos
xor
xor
jmp
mov
sti
pusha
movsl
add
push
test
lret
mov
push
mov
in
jmp
sti
ss
cmp
das
inc
mov
outsl
ljmp
sub
insb
insl
ret
loope
jle
test
xor
pop
xor
ss
inc
icebp
and
xlat
push
cmp
clc
push
push
mov
pop
cmp
int
pop
jns
popl
sbb
or
fsubrs
xchg
sub
cmpsl
movsb
inc
cwtl
cmp
or
mov
xchg
inc
cltd
movsl
mov
fdivrs
push
aas
cli
sub
jno
sub
pusha
movsb
jns
loopne
adcb
rcrl
rolb
inc
fwait
aam
dec
add
xchg
push
mov
jmp
jp
mov
out
out
xor
xor
sub
dec
fists
out
cwtl
jae
lahf
in
mov
push
inc
scas
cltd
mov
scas
loop
adc
cmp
int
inc
ret
popa
stos
or
rorb
out
jecxz
mov
mov
aam
pop
aad
mov
xor
jno
cmp
movsb
loope
cli
loope
lahf
outsl
xor
mov
lcall
out
in
repnz
push
stos
jmp
orl
jne
out
aam
and
scas
es
ficoms
cs
les
pop
lock
sbb
or
mov
jno
lea
pusha
cmp
mov
out
jae
fwait
push
jb
hlt
int3
dec
xchg
and
xor
mov
pop
and
or
xor
fwait
and
pop
pcmpeqw
notl
loopne
xorb
sub
bound
iret
addr16
push
dec
lods
rclb
std
std
testl
fdivrp
out
mov
ret
fcmovnu
lock
lret
fisubl
push
push
sbb
xchg
sub
adc
mov
adc
pushf
daa
pusha
arpl
and
mov
fidivrl
scas
push
outsl
xchg
movb
mov
and
push
inc
subb
fnstcw
xor
xor
ds
cmpl
outsb
mov
vunpcklpd
cli
inc
fwait
imul
int3
cwtl
insb
sub
imul
aam
je
inc
xchg
fnsave
xchg
or
and
cmc
xchg
mov
sbb
sbb
movsl
push
jae
fcompl
cmp
jae
bound
and
stc
out
pop
in
dec
or
dec
addr16
inc
mov
add
psllw
xchg
jp
loop
rclb
sbbb
and
cs
mov
sub
int3
jo
shrb
imul
jle
xor
sub
and
sub
nop
daa
xchg
xchg
lret
out
push
or
add
mov
or
hlt
mov
xchg
aas
pop
test
lock
inc
std
or
xlat
repnz
xor
mov
sub
rorl
cmc
or
inc
scas
add
inc
les
shll
fistl
fucomp
scas
stos
mov
push
lods
loopne
mov
pop
xchg
dec
lret
data16
mov
xchg
es
dec
lret
fiaddl
push
or
pop
inc
lods
bound
mov
test
push
in
gs
aaa
int
jl
mov
jne
cli
cmp
jo
rep
out
push
add
mov
rcr
or
ret
leave
jecxz
fnstcw
cmp
cltd
mov
in
repz
icebp
jp
filds
and
insb
xchg
push
ret
into
enter
pop
and
mov
andb
xchg
push
xchg
popa
add
cmp
inc
test
push
jmp
das
cli
filds
movsl
sbb
lret
or
and
faddl
add
rcrl
push
mov
movsb
ljmp
dec
mov
iret
xlat
push
mov
adc
inc
adc
xchg
jno
sub
les
fists
adc
and
or
push
test
push
push
sti
cmp
ljmp
xor
scas
inc
push
hlt
lret
xor
pop
imul
sub
xor
cmp
roll
lock
sub
mov
xchg
scas
adc
aas
adc
ds
cmp
jno
jne
or
pop
nop
shll
icebp
inc
rorl
mov
cs
xor
andb
shrb
call
cltd
adc
ljmp
outsb
inc
mov
mov
out
iret
sbb
mov
pop
shll
inc
mov
xor
call
cmp
dec
xor
sar
rcrl
push
and
or
je
mov
ja
leave
push
mov
enter
pop
paddsw
cmpsl
ret
and
imul
rcrl
test
jge
inc
aaa
cmp
je
stos
sbb
dec
pop
mov
mov
jecxz
lcall
aam
push
ret
mov
pop
aad
fistl
and
stos
or
fdivl
scas
push
adc
ret
movsb
dec
dec
lods
dec
pushf
test
lret
mov
mov
lcall
nop
js
cmp
cli
adc
pop
loope
mov
leave
jno
iret
movsb
cwtl
push
sub
mov
push
cmp
imul
xor
jns
xchg
and
lret
xor
lods
add
pop
jg
mov
test
imul
cld
or
lret
push
test
cmp
rorl
fcmovu
xchg
mov
repz
aaa
mov
or
mov
in
pop
ljmp
test
add
fs
gs
mov
aad
ja
shll
fcoml
fiaddl
xor
cmc
cld
out
loope
cmc
add
ret
fdivl
int
loopne
xor
push
add
sbb
xor
mov
mov
xchg
sbb
adc
inc
jp
clc
iret
outsl
fsubs
cltd
sbb
cmp
push
cmp
inc
testl
mov
sub
in
aas
les
adc
repz
pop
inc
repz
xor
cli
in
mov
bound
movsb
lods
cmp
fwait
sbb
lock
push
imul
scas
insl
adc
push
sub
shrb
stos
mov
dec
pusha
pop
fisubs
cmp
push
aas
mov
adc
lock
cmovbe
mov
pop
inc
xchg
jns
insb
cmpsb
sbb
iret
int3
and
mov
cmp
into
int3
jecxz
shlb
outsb
push
insl
es
aad
push
addr16
cmp
or
cmp
jecxz
mov
and
mov
aas
adc
sub
and
push
enter
and
bound
sbb
mov
rol
gs
das
add
xor
ds
cmpl
and
or
mov
xor
pop
cmp
lods
icebp
dec
add
mov
cmp
in
bound
jle
loop
pop
add
cmp
push
ror
adc
xor
data16
sbb
gs
dec
std
cmp
push
test
aam
adc
mov
aaa
scas
or
arpl
inc
xchg
mov
or
ljmp
push
insb
adc
sbb
adc
ficomps
and
pop
dec
or
cld
inc
cs
scas
or
mov
fistpl
push
nop
fcompl
inc
in
leave
pop
std
call
andb
mov
inc
popa
bound
add
mov
sub
jo
std
sarl
test
pop
pop
jmp
int
mov
mov
add
jnp,pt
sbb
cmp
orb
push
lcall
xchg
cmpsl
das
divb
out
pushw
repnz
sbb
ret
cmp
repnz
rorb
cmpsb
adc
inc
icebp
jae
mov
hlt
fldenv
pop
mov
jmp
push
int3
mov
push
mov
ja
dec
jne
div
add
movsl
inc
ror
scas
scas
gs
in
lds
xchg
in
clc
fsubl
arpl
lahf
sub
ret
pop
xchg
pushf
and
add
rcrl
int
mov
mov
ss
or
mov
jmp
adc
pop
jge
add
sbb
shl
in
pop
mov
je
mov
pop
fwait
lods
inc
mov
jnp
adc
sahf
aad
mov
xor
mov
mov
insl
and
fwait
inc
aad
push
ret
xor
xlat
rorb
jecxz
jno
fldenv
out
fst
mov
mov
adc
pop
inc
subl
aaa
cmp
mov
adc
jle
sub
loope
lret
add
movq
xor
mov
movb
inc
std
xchg
cmpsb
xor
inc
ret
hlt
fstps
mov
sti
loope
jmp
incl
decl
loope
pop
lret
sub
iret
pop
pop
xlat
inc
push
sub
jmp
pop
out
jno
bound
cmpb
in
dec
fwait
stc
pop
test
dec
jle
xchg
test
mov
lock
repnz
int3
sub
data16
loop
leave
add
or
add
push
icebp
repnz
sbb
leave
mov
mov
fiadds
jl
inc
mov
jecxz
jno
push
jmp
sub
jl
pop
xchg
lret
sar
cs
dec
int
mov
push
sub
fcmove
xchg
mov
scas
mov
inc
xor
test
mov
push
in
stc
call
cmp
jae
cmp
push
loop
fiaddl
arpl
mov
inc
xchg
cmovno
cmp
adc
add
mov
lret
enter
adc
adc
rolb
jmp
ja
mov
jmp
stc
push
fsubrp
subl
inc
mov
sub
inc
inc
outsb
lea
out
xlat
je
out
mov
pushf
cmc
les
into
xchg
pop
or
sbb
dec
dec
mov
jp
mov
dec
lahf
sub
popa
xchg
iret
xchg
lds
mov
push
add
push
dec
push
pusha
shlb
lea
or
ljmp
insb
jne
lods
or
stc
ja
jns
cmp
cmp
es
push
faddl
sbb
rcrb
xchg
cmpsb
clc
sub
xor
call
arpl
or
mov
push
push
cmp
push
movsb
cltd
mov
cs
imul
test
xor
xlat
orb
sti
cli
and
aam
sarl
xchg
jle
ret
jg
mul
int
addl
lock
das
mov
test
dec
test
fdivrs
xchg
push
mov
add
ja
insb
xchg
xchg
jnp
mov
and
stos
imul
mov
aad
outsb
and
pusha
push
jp
mov
inc
add
pop
push
gs
fisubs
dec
les
push
lods
and
cmpsl
divb
jg
mov
lahf
lods
scas
shrl
sarl
mov
popf
ds
mov
push
pop
push
mov
out
jp
fnstsw
fbstp
inc
and
out
stos
sub
shlb
adc
sbb
stos
or
cltd
pop
lods
repz
sub
mov
js
inc
loope
dec
scas
sbb
lods
xchg
ficompl
daa
dec
fbld
adc
daa
cmp
push
pop
ret
jbe
cmp
push
sub
cltd
leave
sbb
gs
mov
add
das
bnd
xor
in
daa
xchg
mov
lret
mov
cmp
sbb
shll
mov
sub
in
push
push
cmp
pop
fldcw
mov
cltd
adc
jae
jnp
rcrl
push
mov
inc
mov
push
ror
dec
push
push
orl
stos
or
xchg
cmpsb
into
mov
xchg
lock
push
mov
or
mov
xchg
les
and
out
push
dec
es
jmp
sbb
pop
pop
jae
ljmp
lods
aam
das
jae
dec
jnp
in
or
int
jmp
pop
cmpsb
add
cld
lods
loop
imul
mov
int
push
fistpl
xchg
mov
lahf
add
aad
mov
sbb
ss
inc
push
ljmp
popf
mov
rolb
inc
aad
adc
fwait
push
stc
fxch
call
or
jno
adc
inc
inc
mov
push
xchg
stos
pop
push
test
dec
sub
mov
xchg
pop
jg
loop
cld
or
sub
aaa
mov
imul
push
shlb
mov
das
rclb
jno
int
test
shrb
push
sti
lds
cmpsl
popf
inc
lods
inc
add
xchg
jnp
cli
gs
add
and
mov
or
shlb
xor
sahf
mov
lret
clc
mov
cmp
sarl
sbb
mov
bound
adc
and
lret
and
nop
scas
sar
out
push
fcomps
xlat
cs
hlt
jmp
mov
filds
inc
xorl
push
sbb
ret
and
mov
mov
or
aad
push
dec
pop
fstl
and
jne
aaa
cmp
xor
mov
or
test
aam
mov
mov
loopne
mov
sub
add
subb
adc
add
xor
gs
ss
pop
dec
aad
sbb
aam
jle
dec
icebp
lock
mov
mov
scas
pushw
dec
adc
cmc
mov
jg
arpl
pop
lahf
add
fcoml
sbb
insb
adc
mov
sub
and
cld
outsl
stc
outsl
in
out
stc
push
and
sbb
js
lret
iret
rorb
and
and
addb
xor
movsb
mov
mov
push
int
shl
mov
xchg
jnp
js
xlat
dec
jae
mov
flds
dec
fs
daa
pop
pop
pop
cli
fistps
cmpsb
nop
push
mov
adc
ds
out
push
loopne
push
ja
sub
fbld
int3
aam
jnp
pop
cmpb
cs
ljmp
in
aas
ret
inc
fnstenv
xchg
xor
dec
sbb
push
sub
mov
jns
dec
fwait
mov
dec
mov
outsl
push
jbe
icebp
xor
shll
scas
sub
repz
test
inc
lahf
movsb
fwait
in
test
outsl
xchg
add
stos
xchg
adc
adc
fidivrs
dec
nop
pop
fs
lods
idivb
loope
pushf
cmc
aaa
insb
lret
sbb
fwait
and
mov
das
cmpsb
in
inc
cwtl
pop
shlb
shlb
push
out
xchg
js
push
cwtl
xor
ss
int3
push
and
sub
mov
inc
or
push
sub
movsl
fldt
pushf
lds
icebp
mov
ret
aam
setle
outsb
mov
out
add
jge
cmp
jb
loop
adc
clc
popf
loope
shrl
cmp
inc
xor
iret
sbb
dec
jecxz
dec
ret
jge
pmulhw
pop
mov
arpl
les
jb
mov
int3
orb
xchg
imul
into
xor
pop
adc
addb
lahf
mov
in
jb
mov
sahf
cwtl
mov
push
subl
add
insl
ja
push
scas
push
push
aas
mov
fcoml
mov
outsl
push
lea
mov
scas
cmp
ret
loop
pop
cltd
js
cmpsl
cmp
mov
add
aaa
cmp
jbe
pop
xorb
mov
pop
xor
adc
sub
out
mov
sti
pop
es
test
outsb
int
rcll
aaa
dec
outsl
jo
and
xor
sub
jge
add
jl
pop
mov
jmp
push
dec
mov
push
gs
pop
insb
daa
rorb
inc
aad
rcll
ret
fdivp
cmp
mov
aam
popa
sub
std
adcb
pop
loope
rcl
int
or
jmp
inc
aam
sbbl
xchg
mov
and
call
aam
es
fs
or
cmp
cltd
into
pop
push
fists
in
lretw
loop
notl
mov
repnz
out
or
add
test
out
sub
cmpl
jne
sti
in
sbb
jl
in
mov
push
daa
leave
cltd
and
ja
mov
movsl
sbbb
rolb
ljmp
inc
out
add
loop
xlat
dec
pop
xchg
sub
stos
insb
int
pop
jnp
dec
push
fldenv
ds
jae
cld
es
inc
imul
jg
lods
mov
jne
mov
lret
pop
push
cld
xor
pop
xchg
add
cmp
pop
or
mov
jmp
xchg
mov
cld
addr16
mov
xchg
jae
xor
mov
leave
jmp
mov
xchg
lock
push
lcall
fcomps
adc
sbb
scas
loopne
sub
sarb
dec
sub
imul
or
outsl
adc
lret
cwtl
inc
pop
push
roll
pop
popa
pusha
fldenv
push
cmc
loopne
loop
mov
sar
movsb
mov
mov
daa
pop
or
fisttpl
add
mov
push
push
adc
ret
std
fldenv
ja
xor
cmp
add
movsl
aam
clc
out
or
dec
push
push
mov
cld
sub
testl
mov
insb
in
or
ss
mov
pop
or
sahf
fbld
xor
sti
cli
cmp
lods
andb
xchg
sbb
or
mulb
test
sbb
push
cwtl
or
pop
lods
push
or
mov
mov
cmp
xor
add
mov
das
adc
mov
cmp
push
dec
sahf
fstpt
repz
jmp
cmp
mov
mov
xchg
inc
inc
cmpb
jb
idivl
mov
cltd
cld
inc
add
clc
movsb
paddb
xchg
push
pop
out
push
adc
stc
sbb
cmp
jbe
xor
push
cmp
mov
push
lea
test
xor
dec
adc
out
insl
lods
daa
mov
loop
inc
and
pop
aad
sub
xor
rorb
push
add
mov
pop
daa
push
fnsave
xchg
outsl
fsts
iret
xlat
cmp
cmp
imul
fmull
push
push
add
push
mov
repz
and
sub
push
sub
fiaddl
std
push
je
out
in
out
movsl
stos
push
or
lods
nop
xchg
aas
mov
test
mov
cmp
pop
lahf
pop
mov
jmp
pushf
pop
sbb
mov
inc
push
cmp
mov
jae
movsl
adc
pop
jno
jge
roll
xchg
clc
add
jmp
fcomip
cmp
xchg
nop
shl
icebp
lods
je
xchg
pop
add
js
lahf
jbe
adc
fwait
repnz
sti
out
rclb
push
fwait
pop
lock
enter
scas
rorl
and
inc
jp
mov
ja
xchg
and
sub
xor
subl
sbb
in
notl
pop
jmp
mov
fcoml
arpl
or
call
xor
inc
xchg
cmp
les
rcrb
test
stc
sub
sbb
cmpl
data16
and
xchg
mov
push
movsl
bsr
movb
or
sbb
jle
inc
dec
or
adc
cwtl
adc
jp
push
into
xchg
sbb
cmpsl
out
cli
enter
shrl
xor
jge
sbb
mov
jmp
adc
lock
dec
push
out
stos
dec
pop
insl
cmc
jmp
xor
inc
aas
cs
mov
jb
rcr
shrd
dec
aas
aam
adc
rorb
test
cmpsl
xchg
repnz
and
push
in
inc
mov
pop
push
cmpsb
mov
ss
jmp
jmp
nop
push
push
jno
mov
lods
xchg
fiaddl
out
xchg
pushf
push
loopne
cwtl
sub
in
mov
lahf
ret
fdivs
or
jb
adc
cwtl
rorl
jns
shl
xor
xor
int3
mov
ss
pop
mov
push
inc
lcall
mov
popf
pop
ret
dec
xor
dec
call
pop
sbb
pusha
inc
in
pop
sbb
jle
adc
ljmp
inc
jnp
lods
jmp
inc
test
mov
adc
xor
inc
xchg
mov
hlt
mov
cmc
cmp
mov
imul
add
mov
pop
hlt
subl
mov
lock
push
push
test
inc
out
pop
std
jnp
cltd
or
xlat
inc
mov
dec
in
ret
jbe
les
dec
jnp
cmpsl
xchg
mov
sub
push
dec
ljmp
xlat
xor
push
rcrb
xchg
push
scas
scas
mov
xor
pop
add
xchg
cmp
cmp
dec
adc
push
and
xor
test
or
push
popf
xor
iret
jmp
icebp
dec
popf
add
pop
int3
addb
cltd
jle
out
or
das
adc
mov
adc
lods
ljmp
lret
push
dec
adc
mov
sti
test
push
ljmp
btc
mov
jp
push
dec
cmp
or
test
inc
push
mov
cli
push
pop
cmp
call
aas
int
push
sbb
adc
in
iret
push
push
repnz
adc
in
jmp
dec
mov
cmp
adc
jp
and
xchg
insb
add
es
mov
xchg
shlb
test
cltd
leave
jp
xchg
arpl
cmp
inc
cmpsb
inc
sbb
arpl
sti
lock
lret
fcompl
fdecstp
mov
cmpsb
xor
aad
cmpb
inc
in
test
cmc
in
cmp
into
ret
cmpsl
cs
sbb
into
or
adc
push
mov
jecxz
inc
fdiv
pop
push
xchg
and
cmp
sub
ss
stos
pop
loope
outsl
js
mov
or
mov
addr16
fs
adc
xchg
sbb
gs
and
dec
inc
ret
push
cwtl
xor
push
stc
xchg
or
push
jnp
hlt
gs
pop
in
cmc
or
std
xlat
and
jp
jnp
and
mov
jns
and
fmul
xchg
stos
loop
sahf
aad
add
arpl
ja
icebp
int3
mov
lods
jbe
das
cmp
enter
call
pop
fsubrl
sub
out
xor
pop
mov
mov
lcall
das
call
gs
popa
rol
lcall
clc
sti
mov
mov
add
clc
push
in
ss
mov
imul
or
mov
in
add
in
test
push
test
cmp
cltd
and
sbb
add
pop
ljmp
mov
push
leave
or
mov
sti
or
dec
cmc
inc
ret
aad
in
mov
push
in
fcoml
movsb
sbb
and
loopne
dec
pop
in
adc
jmp
and
add
jl
xchg
pusha
loopne
rorb
pop
cmp
xor
loop
dec
pop
inc
sub
xchg
scas
sub
out
in
add
les
mov
aad
in
lcall
mov
pop
mov
xor
in
pop
ret
inc
arpl
sahf
out
call
js
daa
imul
sbb
xor
lock
cmp
or
inc
loop
xor
and
xor
dec
add
mov
int3
enter
por
in
dec
pop
xchg
mov
cmp
mov
mov
movsb
xor
jp
rcll
mov
mov
adc
or
mov
inc
ds
lahf
mov
xor
cmp
inc
mov
out
out
jecxz
es
sbb
lret
cld
add
pop
js
adcl
js
insl
fisubrl
lret
int3
push
sub
lock
jp
pop
pushl
inc
das
sbb
adc
mov
sbb
push
jp
push
mov
call
lret
int
pop
cmp
fildl
subl
mov
repz
ja
in
mov
sbb
xchg
rorb
js
mov
rorl
push
jmp
jle
lods
enter
and
adc
das
push
dec
or
cli
shrl
in
daa
fcmove
mull
scas
or
xor
and
test
int3
jae
mov
fimuls
and
inc
enter
lahf
or
push
add
es
dec
fcomi
xchg
xor
clc
bound
mov
lea
ret
xor
push
push
xor
xchg
inc
aaa
xchg
mov
mov
cltd
cmp
adc
mov
dec
pop
mov
stc
nop
gs
in
and
and
outsl
fcomi
imul
mov
push
xchg
or
pop
mov
cmc
je
mov
insl
pop
pop
mov
imul
inc
xchg
jo
lcall
push
sub
mov
and
clc
pop
xor
dec
fistps
add
movsb
cs
adc
lods
sbb
pop
addr16
into
xchg
cld
aad
icebp
test
add
das
cltd
add
in
hlt
xorb
cmp
mov
cmpsl
mov
bound
jecxz
mov
dec
pop
mov
aad
jle
clc
std
sbb
sbb
xlat
mov
dec
enter
pop
fwait
xchg
or
ds
push
jne
imul
stos
fwait
jne
call
arpl
sub
add
shlb
jns
mov
xchg
lea
sbb
cltd
addr16
call
mov
lahf
xchg
mov
sbb
dec
dec
ss
mov
mull
stc
xor
xchg
inc
ss
adc
imul
call
sub
leave
mov
test
aam
loop
sbb
call
adc
fdivs
mov
mov
mov
sub
in
fnstenv
adc
and
jbe
mov
cmp
shl
pushf
imul
cmpsb
jae
orb
inc
cmp
cmp
ds
jne
sahf
insl
inc
outsl
std
mov
jmp
and
push
mov
cmp
iret
dec
jo
xchg
inc
inc
jno
inc
mov
pop
push
lahf
adc
xor
cld
ja
mov
pop
push
pop
mov
faddl
pop
in
mov
mov
cs
inc
cld
jnp
fwait
enter
mov
addb
arpl
test
or
lds
es
clc
xchg
enter
lcall
sub
pop
or
rcl
js
stos
aas
add
in
in
enter
pop
jp
je
or
stc
jp
insb
addr16
push
cmp
aaa
call
fldenv
mov
cmp
adc
xlat
jae
out
jl
gs
aad
lods
mov
pop
jo
xchg
je
mov
xor
scas
imul
jl
mov
ljmp
push
mov
dec
aad
cmpb
mov
cmp
or
loopne
pop
xchg
call
mov
inc
cmp
setp
cli
xchg
icebp
inc
mov
mov
bound
popa
dec
not
call
inc
xchg
sub
pop
or
fs
or
jbe
and
add
call
lds
push
sbb
dec
mov
dec
or
xchg
xchg
xchg
push
mov
aad
add
fimuls
mov
xor
xchg
adc
mov
out
ret
cmp
loopne
fcmovb
pop
add
or
dec
out
cmp
roll
sub
test
in
pop
inc
test
cmp
xchg
adc
xor
add
xchg
jae
mov
add
mov
neg
adc
test
je
mov
rorl
addr16
or
cltd
mov
fldt
inc
lods
aas
pop
cmp
pop
adc
jle
mov
lret
pop
jnp
inc
jo
int
cmpsl
xchg
push
rcrl
adc
jbe
sti
stc
cmpsl
push
cmp
in
jmp
inc
mov
xor
je
movsb
push
mov
sbb
inc
dec
cmpb
out
cmp
push
dec
jnp
push
cmp
cwtl
sbb
mov
clc
popf
test
jnp
mov
jns
popa
in
jnp
xchg
pop
pop
outsb
iret
cmpsl
imul
stc
addl
imulb
sbb
add
ret
adc
int3
xor
out
mov
lahf
mov
mov
cld
insb
add
push
test
lahf
outsb
mov
or
jbe
pop
inc
mulb
mov
inc
cmp
cld
xchg
ss
mov
dec
push
push
out
cmp
lret
pop
mov
ficoms
inc
add
movsl
and
nop
insl
movsl
mov
inc
lods
loope
int3
stos
scas
dec
dec
cmp
dec
adc
pusha
push
dec
jmp
pop
and
loope
jae
lea
int3
add
mov
adc
pop
jmp
mov
push
dec
scas
sti
dec
xchg
shrl
std
aad
in
ror
into
xor
xor
pop
rcr
movsb
arpl
add
sbb
xchg
add
iret
adc
lea
sbb
inc
xchg
loop
xlat
sub
jle
and
jle
sbb
fsts
inc
push
data16
adc
xor
lods
pop
loope
sbb
mov
je
popa
jle
dec
push
push
les
push
das
loopne
add
sbb
sbb
movsb
lds
fstl
movsb
jb
pop
mov
outsl
sub
sub
adc
inc
insb
sbb
testl
cwtl
xor
popa
and
andl
cmc
sub
dec
xchg
push
lcall
stos
add
dec
inc
or
mov
adc
lret
fs
out
cmp
das
cmp
cwtl
xor
imulb
out
inc
mov
addl
lahf
push
fsubr
push
repz
jge
xor
jp
jg
fmull
mov
pop
mov
push
sbb
outsb
aaa
fcompl
rorb
jmp
in
mov
push
pop
repz
mov
lds
repnz
cmp
mov
xchg
test
movsl
add
push
mov
xor
jne
mov
jg
sahf
dec
mov
mov
ss
clc
inc
sbbb
xchg
loopne
sub
rcrl
cmp
testb
jbe
aad
sbb
rcr
insb
pop
mov
data16
mov
jecxz
pop
sbb
pop
fucomp
mov
xor
fwait
bound
ds
pop
sbb
push
or
and
cwtl
xor
js
dec
add
mov
push
push
push
sbb
adc
jae
mov
sbb
std
sub
sbb
jg
xor
inc
mov
fwait
repz
and
mov
mov
mov
cmp
imul
jae
fistl
lcall
addb
mov
lock
adc
lea
icebp
mov
cltd
dec
dec
in
popa
loopne
scas
jge
adc
add
notb
or
popf
inc
adc
push
iret
sbb
push
leave
push
inc
lds
or
pop
mov
cld
imul
mov
out
mov
xlat
scas
nop
dec
ss
fwait
rcrb
addb
add
jecxz
adc
mov
jge
movsl
in
je
int
xor
lahf
pusha
mov
int
cmp
stos
jno
into
jle
mov
stos
inc
jae
xchg
or
int3
ljmp
lds
cld
add
sbb
shr
jne
and
icebp
iret
popf
std
popf
loope
xchg
fldt
sub
pop
xor
jb
jecxz
fdivrp
insb
loop
cmp
pop
jp
mov
jne
imul
or
sub
mov
lods
or
push
subb
xchg
insl
jl
jbe
dec
in
mov
push
adc
cli
jb
mov
insl
dec
inc
mov
dec
mov
and
stc
mov
inc
ljmp
iret
push
lods
add
jbe
pop
sbb
inc
dec
cmp
insb
insl
and
in
jmp
or
js
push
xchg
mov
lods
cmp
inc
mov
shrb
mov
or
loope
cmp
iret
test
xchg
out
adc
xor
jmp
mov
daa
test
sti
mov
imul
mov
icebp
push
cltd
ret
pop
mov
aaa
pop
je
cli
jns
mov
hlt
jle
pop
imul
popa
aad
push
xchg
in
lret
loope
xchg
xchg
fs
add
fs
test
in
mov
sbb
jecxz
inc
xor
sarl
push
std
stc
mov
pop
cli
inc
mov
std
add
outsb
add
xchg
sti
cmpsl
push
cli
xchg
mov
xchg
and
pop
dec
sub
push
bound
lret
outsb
mov
jecxz
fwait
lret
lods
in
jo
lret
adc
mov
xor
dec
adc
leave
in
xchg
loop
test
mov
jo
ds
out
lcall
xchg
sbb
jp,pn
jg
mov
adc
jecxz
lock
xchg
jno
sbb
icebp
xor
inc
aaa
lock
lds
mov
fsubr
clc
test
repnz
hlt
push
in
aaa
cmp
pusha
lods
adc
repz
repz
add
imul
cmp
ja
pop
fwait
sub
aaa
mull
sti
sbb
ret
jl
sub
inc
or
mov
in
pop
test
and
cmp
ror
inc
jp
subl
iret
fcmovbe
call
jmp
jno
pop
push
test
repnz
cmp
iret
adc
push
jne
das
xor
dec
nop
xor
filds
push
or
into
pop
fsubr
lds
mov
cltd
or
and
sub
cwtl
mov
cmp
fdivs
add
ja
inc
into
mov
jecxz
mov
xchg
pop
inc
sahf
and
imul
mov
jge
jne
pop
mov
lock
inc
mov
mov
xchg
push
cli
sub
jae
pusha
bound
rcll
push
mov
mov
mov
sbb
cmpb
inc
adc
insb
fstp
les
addr16
mov
xor
xchg
dec
pop
test
xchg
mov
jb
cmp
ret
nop
in
xor
push
mov
jle
sbb
pop
sar
popfw
add
mov
lret
data16
ljmpw
lret
loope
lds
cmp
test
jno
and
dec
lret
jno
frstor
pop
push
xor
mov
je
jecxz
and
xor
sub
xchg
shll
mov
unpckhps
and
xchg
jg
and
mov
cmp
daa
clc
pop
jecxz
sti
call
call
mov
mov
mov
and
pop
fldpi
sub
lods
mov
xchg
fdivl
jmp
jmp
js
lds
in
cmp
cmp
test
xchg
pop
cmp
add
shl
dec
pop
ja
jae
xchg
pop
aas
dec
push
mov
stc
stos
sti
data16
bound
mov
fs
lret
xorb
out
rep
imul
sub
add
lret
sub
or
negb
add
outsb
lods
imul
sub
adc
cmc
mov
shll
mov
sbb
aaa
in
adc
ror
mov
jno
and
ja
insl
lock
ret
lcall
imul
or
int3
pop
xchg
pop
fwait
inc
push
call
insl
sub
push
xchg
scas
add
in
pop
sbb
and
lcall
cmp
jl
cwtl
push
aas
pop
mov
or
int3
testl
and
in
sarl
insl
mov
adc
movsl
mov
push
jne
sbb
aam
imul
adc
sub
jge
inc
xchg
fsubl
xchg
pusha
test
mov
test
pusha
xchg
push
cmp
insb
pusha
mov
out
movsb
inc
inc
ret
mov
inc
dec
movsb
jns
outsb
sbb
push
mov
popa
fsubrs
mov
mov
lcall
push
int
mov
pop
mov
cwtl
scas
push
and
les
in
outsl
hlt
jne
jb
or
lcall
mov
lret
popl
int
idiv
sub
or
int
loop
pop
out
fidivrl
sahf
aas
dec
and
rorl
imulb
add
movsl
xchg
jg
lods
in
mov
adc
les
mov
sbb
mov
pushf
mulb
clc
push
or
or
std
sub
or
stos
dec
aas
adc
sbb
mov
aas
stos
sub
fbstp
js
cmp
mov
sarl
mov
xor
pop
leave
pop
ficoml
sub
outsb
pushf
add
xchg
mov
pop
push
scas
les
mov
inc
lds
add
mov
dec
ljmp
std
mov
or
outsl
repnz
and
icebp
inc
orl
and
leave
or
in
sbb
push
into
and
sub
fisubs
pop
nop
ds
push
sbb
sbb
dec
and
shl
mov
in
xor
pushf
mov
sub
movl
cmp
jmp
imul
xchg
popa
pop
xor
xchg
pop
xor
adc
lcall
xchg
rcrb
mov
rclb
out
sub
shrl
cmp
repnz
and
in
pusha
jp
push
xlat
mov
and
je
jge
cmp
testb
cltd
jo
add
insb
test
and
std
mov
jo
add
pop
stos
rcll
icebp
bound
rcll
ficoms
lahf
sahf
test
jnp
cmp
add
adc
jg
mov
dec
push
dec
dec
arpl
bound
adc
add
addr16
jle
mov
mov
mov
cmpsb
dec
pop
mov
lret
stos
cli
or
clc
add
and
aad
clc
sbb
adc
xor
pop
xlat
jge
jne
mov
stos
mov
shl
pushf
arpl
gs
and
xor
and
push
rep
dec
pop
int3
lret
adc
mov
sbb
mov
out
test
dec
mov
xor
jp
lea
xor
nop
jne
jg
lods
out
inc
mov
adc
test
or
pop
out
loopne
repz
xchg
out
in
insl
xlat
ficoml
popf
xchg
and
xor
pop
cmp
adc
jl
sub
jp
ss
cwtl
jge
gs
mov
jle
addr16
jp
and
add
add
push
lret
jb
jae
jno
mov
nop
je
fisttps
jno
mov
pop
repnz
mov
mov
inc
push
sti
adc
sbb
daa
adc
fbld
mov
adc
xchg
inc
std
push
push
mov
sub
adc
inc
jg
je
stos
in
movsb
adc
jl
aas
and
mov
ret
xor
inc
cmp
lods
aad
sbb
cmp
shll
mov
imul
jne
sub
loop
xlat
or
popa
cltd
call
int3
or
adc
and
cmpsb
pushf
push
aas
dec
adc
jp
cmpsl
jnp
je
scas
xor
daa
pop
sub
rcr
call
xchg
inc
dec
je
push
mov
dec
xor
push
push
hlt
xor
outsb
out
add
push
xor
imul
mov
xor
das
cmc
xchg
jl
cmpsb
pop
mov
push
xor
adc
pushf
jg
lds
xorl
int
sbbl
sbb
mov
dec
je
cmp
inc
xchg
jne
and
pop
or
xor
fisttps
insb
sub
push
pusha
xor
push
sarb
adc
jle
mov
push
scas
and
jge
cmp
sbb
and
outsl
sahf
data16
pop
push
and
jmp
stos
push
add
in
and
je
adc
add
fnstenv
mov
imul
call
xor
fwait
and
lcall
push
fnsave
imul
add
xor
cwtl
ja
mov
and
ljmp
inc
sub
jae
imul
fcomi
adc
inc
inc
pusha
pop
dec
mov
sub
data16
movsb
stos
imul
adc
push
cmp
rclb
jno
inc
cmp
leave
rorl
cli
test
cmpsb
lret
dec
popa
lock
icebp
xlat
mov
lock
xchg
out
ja
xchg
pop
testl
jmp
mov
sub
outsl
xchg
scas
xchg
inc
sbb
test
and
lea
fisttps
inc
out
jae
repz
mov
aam
cltd
pop
mov
cmpsl
sbb
ficomps
or
push
sbb
add
mov
test
adc
fcoms
xlat
sbb
xchg
shlb
dec
fisubrl
fisttps
in
mov
inc
lret
cmp
add
dec
dec
insb
ds
pop
push
push
pop
jnp
xchg
add
fbstp
adc
push
inc
into
push
add
clc
mov
mov
mov
cmc
test
je
push
iret
sbb
adc
rclb
cmpsl
adc
inc
addr16
xor
imul
pop
jns
xorb
push
lret
push
sub
xchg
mov
or
mov
ret
jecxz
mov
cli
std
fimull
sub
pop
rorb
jge
and
add
and
inc
fsts
pop
mov
pushf
mov
loop
or
orl
hlt
fbld
mov
push
fs
pop
push
adc
into
and
jecxz
pushf
jo
jbe
das
add
adcl
xchg
jecxz
test
mov
enter
insb
sub
jo
nop
hlt
in
imul
sti
popa
lret
shrb
iret
aam
int3
mov
push
rorl
mov
sahf
add
frstor
adc
lods
xor
lds
jp
dec
mov
cs
jecxz
xor
pop
jb
adc
mov
or
add
or
xchg
xchg
lods
cmpsl
lods
mov
cmpsb
je
xchg
inc
add
test
pop
xchg
pop
int
mov
loopne
push
jne
ret
popf
jae
jecxz
repnz
mov
fcoml
stc
xlat
sarl
gs
testb
mov
sti
movsl
mov
and
das
mov
aas
and
cmp
flds
xchg
sbb
mov
inc
cli
ja
arpl
mov
xchg
fistpl
add
fwait
inc
test
and
stos
in
sub
cmp
xchg
jge
scas
mov
dec
dec
add
jns
xchg
repz
in
jecxz
jmp
sbb
sbb
test
dec
jle
movsb
ret
and
cmp
movsl
sbb
stos
lahf
inc
inc
jp
cltd
pop
mul
mov
pushf
pop
inc
push
mov
test
dec
push
mov
mov
adc
sub
lds
in
xchg
push
mov
dec
or
mov
xchg
jge
dec
jbe
fmuls
sbb
push
lret
bound
addr16
test
push
jb
xchg
pusha
jnp
add
das
mov
lret
sarl
sbbl
add
pop
xor
pusha
mov
andl
cli
adc
push
or
outsb
adc
cmp
mov
roll
fwait
into
push
inc
roll
or
or
cltd
gs
addr16
add
mov
adc
xor
sub
mov
jo
push
jle
mov
pushf
repnz
ljmp
ret
movsb
jnp
shlb
outsb
inc
fisubl
add
lds
aad
add
sbb
int
adc
in
ss
movsb
icebp
lret
jbe
mov
dec
or
arpl
clc
addl
inc
push
adc
dec
mov
loop
lea
add
js
or
cmp
js
xlat
mov
loop
xor
fwait
push
out
mov
lods
cltd
and
callw
mov
and
xchg
clc
xchg
pop
push
xor
lret
mov
push
test
insl
xlat
jae
idivl
adc
xor
shrb
adcb
add
aas
xchg
sbb
dec
or
xchg
out
das
and
int3
scas
test
and
popf
aam
dec
mov
fmuls
mov
push
jae
dec
mov
adc
or
mov
mov
mov
idivl
ret
js
sbb
add
negl
and
in
ss
mov
mov
pop
cltd
test
mov
out
adc
jge
jle
jns
dec
pop
repz
scas
dec
or
in
fisubs
xchg
aaa
xchg
mov
sbb
pop
lcall
mov
addr16
xor
push
xor
ret
rcl
cmp
das
loope
jl
in
xor
mov
stos
inc
int3
inc
lea
push
fdivrl
sub
loopne
in
out
dec
movsl
dec
cmp
lods
adc
insb
dec
sahf
sar
push
adcb
imul
addr16
popf
insb
sub
adc
jo
xchg
inc
mov
inc
sbb
movsb
fildll
mov
mov
notb
rcl
mov
mov
aaa
es
cmp
mov
xchg
popa
cmp
rcll
jno
or
outsb
addr16
dec
loopne
and
dec
or
fistps
ss
leave
jnp
sub
mov
pop
push
nop
ret
sub
add
test
mov
xchg
icebp
int3
xor
in
in
xor
jns
loopne,pt
std
divl
mov
cmpsb
stc
push
adc
sbb
push
adc
arpl
or
cmp
jns
subl
mov
mov
and
sbb
ret
orl
sub
lret
test
and
mov
mov
add
sub
cmc
sarl
mov
mov
push
lods
dec
or
mov
dec
xor
sbb
lahf
outsl
addb
mov
mov
xchg
and
daa
icebp
data16
mov
lds
inc
xchg
jnp
mov
xchg
mov
push
pop
push
jne
and
cmp
scas
ljmp
aam
push
jg
cmpsl
jl
loope
imul
stos
mov
xchg
or
push
ss
adc
or
icebp
ss
or
lret
fdivs
lret
push
jo
testl
rcrl
loope
adc
push
lds
sub
in
mov
adc
cmc
enter
push
lret
sbb
jmp
pop
lods
movsl
repnz
dec
popa
jmp
inc
xor
movsb
mov
scas
adc
sbb
rorl
mov
loope
mov
shl
xchg
or
and
dec
or
test
ds
enter
dec
out
stos
adc
and
xlat
in
lret
sbb
repnz
cmp
cli
xchg
shlb
mov
in
aaa
jo
push
push
insl
xchg
jl
lock
add
add
lahf
or
test
or
cmp
pop
test
pop
cmp
push
lods
mov
mov
in
adc
je
push
iret
repz
loope
stos
je
ja
clc
imul
scas
inc
xchg
shrb
rcrb
out
mov
cld
dec
cmpsl
in
outsl
lret
outsb
mov
in
jp
shrl
lcall
dec
stos
mov
mov
sbb
or
push
mov
add
pop
lahf
push
sahf
xchg
loope
cs
jbe,pn
inc
fisubrs
xchg
aas
adc
jmp
dec
push
push
push
shll
jg
sub
mov
daa
jne
rclb
ret
xchg
add
or
cmp
sbb
andl
loop
cmc
cmp
mov
mov
ss
mov
das
movl
mov
sbb
and
sub
outsb
and
pop
ja
out
inc
ds
inc
imul
and
mov
mov
xchg
pop
hlt
loope
cmpsb
and
xor
adc
jmp
xorb
lcall
sbb
and
in
and
cwtl
call
sub
jbe
cmpsb
pop
jle
dec
lea
push
fwait
shlb
sub
in
lcall
test
pop
jnp
cli
mov
xchg
lret
in
mov
pop
mov
loop
jg
fldcw
mov
je
sbb
jecxz
jle
in
jb
pop
push
out
or
test
sub
xlat
out
pop
xchg
addb
cmpsb
in
jp
into
sub
lods
push
aad
fs
jl
ficoml
mov
sbb
aaa
mov
jge
mov
sub
sbb
pop
mov
cmpsb
je
test
leave
mov
test
mov
xchg
pop
aad
pop
or
aad
xchg
aas
xor
jnp
xchg
imul
ds
movsb
aas
or
or
imul
push
mov
popf
stos
xor
out
jns
daa
jb
ficoml
push
push
sub
cld
mov
mov
mul
andb
rcrb
lds
pusha
repnz
mov
test
testb
add
xchg
out
mov
pop
jge
mov
sbb
les
push
out
scas
xor
insl
pop
cmp
xchg
jbe
jp
subb
divb
rcr
and
fwait
push
test
mov
fwait
scas
xchg
adcl
mov
movsl
xor
sub
mov
push
loope
cli
pop
xchg
iret
pop
fxch
push
mov
push
xchg
test
pop
push
mov
lret
pop
idivb
push
scas
fidivl
fstpl
and
add
pop
cmc
aam
cld
pop
sbb
push
and
scas
ja
nop
and
pop
fcmove
inc
rol
jo
std
xor
adc
push
lea
xchg
add
jb
push
cmp
stos
in
loop
xchg
rcll
enter
out
addr16
push
loop
mov
pop
mov
rcrl
inc
enter
mov
add
xchg
into
jl
aad
pop
ljmp
sub
pushf
mov
pushf
or
adc
adc
rcll
and
lahf
xor
mov
jno
pop
fidivl
mov
jecxz
and
xor
sbb
inc
sahf
fildl
push
pop
movsl
nop
ds
sub
adc
insb
xchg
outsl
fiaddl
or
cmpl
out
outsb
addr16
ljmp
push
dec
push
in
pop
sub
dec
nop
cli
push
loop
aas
dec
mov
iret
sbb
inc
dec
iret
push
cmp
push
xor
bsr
cmp
lsl
and
or
int
mov
xchg
inc
sbb
fdivl
mov
jo
int3
xor
loopne
inc
filds
mov
lods
lock
fsubp
cli
pop
test
mov
jmp
sbb
cmp
sbb
mov
lods
xchg
xor
cli
fisubrl
mov
sub
push
fwait
xchg
mov
dec
je
push
adc
sbb
jb
pop
daa
jmp
mov
mov
movsb
or
adc
adc
movsb
std
cld
fs
shll
test
scas
pop
icebp
inc
pop
int
fwait
pop
add
fldcw
hlt
mov
add
repnz
lods
loope
sub
gs
lods
or
gs
push
ss
or
or
pop
outsb
in
xchg
xchg
in
and
cli
push
xor
push
nop
dec
adc
loop
testb
lea
enter
lods
xor
adc
ficoms
sub
in
mov
mov
stc
fs
subb
add
mov
stos
insl
hlt
shl
cs
cmp
imul
mov
adc
fimull
xor
and
mov
dec
incl
adc
fstp
jb
enter
aas
sti
push
xchg
mov
jns
sub
nop
and
pop
mov
lret
mov
dec
lret
inc
lret
jb
test
cmpb
jbe
les
jnp
stos
loop
mov
aam
sub
in
in
pusha
jge
and
push
outsl
dec
dec
mov
push
es
mov
push
in
xor
sbb
pop
pop
sar
enter
mov
xchg
imul
cmc
sbb
push
xchg
out
cmp
xor
dec
aaa
adc
jmp
andl
xor
daa
shl
sub
leave
out
sub
sbb
daa
out
gs
inc
movsb
push
addb
mov
mov
sti
cli
shrb
or
jl
mov
lret
mov
mov
jl
jl
and
mov
push
mov
sub
insb
xlat
in
add
cltd
adc
ss
andb
shll
adc
or
xor
dec
sub
out
and
xchg
cli
bnd
xor
sub
or
imul
in
sbb
jns
or
out
pop
cmp
out
inc
out
inc
in
and
mov
popa
push
or
jae
xchg
fsubs
cmp
inc
out
lret
mov
adc
inc
inc
mov
cmp
outsl
test
xchg
pop
out
lahf
daa
add
sti
adc
pop
jno
insb
mov
iret
ljmp
sub
ret
mov
lret
jae
jns
hlt
jae
lea
sbb
add
lds
push
push
jb
mov
jne
dec
cltd
mov
jl
mov
imul
fwait
rcll
fnstsw
add
xchg
loopne
bound
xor
cmp
ss
inc
xor
adc
jne
sub
test
adc
popf
popf
insb
xchg
mov
jo
dec
pop
mov
mov
movsb
jg
jp
jbe
xlat
arpl
adc
dec
xchg
lahf
aad
add
mov
dec
mov
in
inc
sbb
imul
dec
mov
sbb
cmp
mov
mov
idiv
push
pop
call
mov
lock
mov
repnz
aad
mov
push
and
testb
add
addl
sub
adc
cmpsb
dec
int3
fbld
cltd
push
mov
xchg
mov
das
xorl
hlt
push
pop
fmull
aas
xor
sti
iret
loop
bound
pop
scas
roll
dec
sub
mov
rcr
push
or
out
sahf
mov
cmp
insb
lods
xchg
hlt
ljmp
mov
inc
pop
popa
inc
ja
pop
movsb
inc
xchg
sarl
xor
dec
push
and
shrl
push
mov
cltd
jmp
xchg
ds
push
ja
cmpsl
xor
mov
mov
adcb
sub
daa
jo
inc
and
push
movl
lock
loopne
jae
icebp
xchg
ss
cld
adc
loop
int
sbb
add
mov
xchg
add
pop
mov
cmp
rolb
adc
mov
add
pop
cmp
mov
push
lods
push
and
iret
push
sub
pushf
out
popf
aad
scas
dec
fmull
mov
andb
fsubrs
mov
fnstcw
and
push
xor
sahf
cmp
add
daa
mov
pop
sbb
cmp
push
hlt
out
movsb
cmp
test
cmc
aaa
inc
shl
cwtl
push
xor
mov
fs
sub
imul
xchg
fdivr
dec
xchg
fadds
inc
mov
ret
int
mov
sbb
leave
es
inc
pop
pop
int
push
outsl
cmp
and
loop
stos
jb
jge
lock
loope
mov
or
scas
loope
inc
cs
push
dec
or
jle
add
pop
sbb
ret
cmp
pop
inc
sbb
mov
mov
bound
lcall
adc
sbb
adc
or
outsl
mov
pop
jae
cld
mov
repnz
inc
push
push
lock
icebp
into
jecxz
mov
rcr
mull
sbb
mov
mov
sbb
xchg
sub
call
jmp
jecxz
movsl
mov
scas
add
cltd
adc
or
fdivs
pop
fwait
mov
sub
sub
jmp
rcrb
inc
or
add
and
ja
adc
jbe
sub
xchg
aaa
sbb
pop
cmp
fmuls
pop
fwait
pusha
adcb
xchg
pop
sub
jno
mov
mov
mov
dec
lods
adc
sahf
out
pop
ror
in
inc
cmpsl
sbb
std
or
jl
sbb
movsl
pop
mov
nop
jno
xor
add
aad
int3
lcall
leave
xchg
iret
fistpll
or
inc
xlat
jge
xchg
daa
cmp
inc
ds
pop
pop
out
inc
enter
mov
and
loopne
shlb
pop
adcl
subb
jp
das
testl
mov
xchg
cli
jb
dec
movsl
iret
rcrb
mov
movsl
lahf
mov
fwait
in
fsubrs
push
jge
popf
xchg
jmp
nop
xchg
jae
movntq
add
imulb
cmp
and
mov
xchg
adcb
cmp
je
aam
mov
mov
stc
dec
and
sub
call
ficoms
cs
inc
xchg
scas
mov
or
and
xor
dec
sbb
cwtl
mulb
int
outsb
fidivrs
outsl
lods
outsl
xchg
rcr
fildll
mov
adc
leave
sub
sarl
sbb
xchg
xchg
ret
cltd
mov
push
addr16
cmp
hlt
xchg
pop
jns
rorl
stc
xor
divb
sbb
stc
mov
test
jns
push
xchg
push
test
inc
xchg
push
iret
out
mov
mov
push
fsts
addb
hlt
push
and
arpl
mov
adc
in
xor
outsb
push
cmpb
pop
inc
dec
int3
adc
fsubrl
cmp
cmp
xchg
mov
ja
push
sbb
pop
out
test
lret
cmp
push
cmp
in
rorb
jge
rolb
lods
xor
push
inc
dec
cmp
arpl
in
dec
ds
jecxz
dec
push
andb
dec
aad
iret
lds
cmp
sti
lea
shr
pop
imul
sbb
xor
xchg
scas
push
lret
jl
xchg
test
push
nop
lahf
jle
mov
adc
jbe
adc
loop
scas
popa
mov
in
xchg
jp
and
push
cltd
adcl
loopne
lea
lret
or
flds
dec
sbb
sbb
scas
xchg
ret
jns
sbb
pop
pop
and
jnp
fisttpl
sub
push
int3
and
mov
jecxz
cmp
or
lcall
and
pop
and
fucomip
push
orb
fisubrs
jno
fisttpll
in
mov
frstor
mov
add
mov
jns
outsl
pop
pop
adc
mov
xchg
or
xchg
xlat
nop
mov
adc
cmp
insb
test
cmp
scas
outsb
xlat
shrl
les
dec
pop
inc
adcl
jmp
dec
into
sub
lahf
sub
push
enter
aaa
movsb
push
adc
fidivl
pop
int
cmp
adc
jp
addr16
bound
cwtl
mov
loope
pop
ret
stos
push
rcll
mov
cmc
into
push
inc
or
leave
notb
cmpsb
popf
js
or
lret
sub
mov
mov
fs
push
sbb
mov
jl
inc
mov
fwait
cld
lock
xchg
jne
stos
or
into
pop
add
cmp
inc
mov
imul
xchg
cli
je
test
pusha
insb
mov
ljmp
aas
push
loopne
fnstenv
stos
lcall
test
lds
inc
das
mov
jno
or
adc
das
push
jge
mov
popf
jge
xor
in
fwait
pop
mov
adc
xor
pop
jo
push
cmp
aaa
push
stos
addl
loopne
sbb
dec
mov
lahf
fwait
ret
fists
movsb
in
iret
clc
mov
es
pop
xchg
and
in
xor
outsl
pusha
lods
push
out
pop
mov
ss
cmpsl
decb
sbb
push
xchg
fistpll
mov
iret
inc
aad
push
inc
inc
ljmp
mov
out
aam
add
mov
mov
push
or
dec
pop
and
dec
and
jl
mov
inc
sub
sub
xchg
jb
push
pushf
outsl
dec
push
push
cltd
xchg
mov
dec
sbb
ljmp
lahf
lods
je
or
repz
lahf
int3
push
lret
fs
jb
adc
arpl
ret
xlat
notl
insb
sub
aas
pushf
sub
jb
inc
cmp
mov
jg
and
lret
sti
add
inc
call
lods
faddl
mov
test
lds
xchg
adc
fmuls
out
inc
in
std
stc
mov
jge
adc
cmpsl
jge
fiaddl
mov
ljmp
pop
mov
repnz
jl
mov
je
mov
or
or
xchg
mov
push
adc
jae
jae
cltd
or
pop
pusha
pop
mov
scas
xchg
rcrb
lods
pop
sahf
out
shll
push
sbb
add
xchg
in
test
sbb
xchg
std
pminub
jmp
sti
in
je
arpl
jnp
push
test
int3
fs
lods
pop
scas
dec
push
adc
xchg
outsb
int
cmp
add
pop
sbb
repz
sbb
mov
push
xchg
sbb
jno
shr
cmp
das
fsts
cli
dec
mov
push
cmp
cmp
das
mov
stos
lods
cmpsb
pushl
gs
pop
hlt
aas
bound
pop
mov
movsb
jns
dec
mov
shlb
stc
lods
add
test
inc
xor
push
je
cld
and
rcll
jmp
rorl
out
jb
and
xor
ja
sub
mov
cmp
xchg
mov
les
decl
sbb
push
push
in
sub
in
mov
cmp
pop
or
cmp
bound
adc
xor
mov
sbb
sarb
pop
xchg
inc
hlt
xchg
pop
cmpsl
scas
cmp
add
dec
fistpll
push
std
subb
xchg
cli
insb
in
mov
subl
sti
ja
mov
fadd
sub
rorl
jge
into
adcb
xchg
ss
and
push
nop
ret
fnstcw
out
test
pop
push
insl
adc
pmaxub
gs
in
jns
dec
sbb
pmuludq
aad
sub
int3
pop
mov
dec
xchg
jmp
cmpsl
push
xchg
jb
mov
mov
imul
jl
mov
adc
cltd
push
outsb
ficomps
test
and
xchg
movsb
inc
xchg
sub
stos
pop
dec
add
push
pop
sbbl
inc
mov
jp
inc
xlat
adc
push
sbb
dec
jo
into
cld
mov
adc
rcll
mov
push
add
mov
xchg
push
jl
inc
push
cmp
les
bound
out
outsl
addr16
jno
imul
xchg
popf
pushf
pop
aaa
dec
cwtl
and
dec
add
mov
pop
xchg
ficoms
cmpsb
push
dec
test
loope
inc
adc
xor
pop
adc
dec
pusha
push
jmp
scas
xchg
fcoml
xlat
test
mov
arpl
andb
in
mov
test
ret
dec
push
add
scas
xchg
add
dec
ss
gs
mov
adc
xchg
push
out
jg
mov
insl
mov
pop
cmovb
pop
es
rclb
rorl
inc
in
shlb
aam
test
mov
cmp
lods
xchg
push
lcall
arpl
or
addb
bound
aaa
icebp
push
jge
test
jp
lcall
mov
adc
shrl
lods
xor
mov
in
pop
jmp
and
arpl
popf
sti
xchg
sbb
iret
push
cmc
imul
test
loopne
in
add
scas
leave
orb
test
in
mov
dec
nop
cmp
popa
test
cmp
sbbb
and
cmpsb
imul
rorl
rcrl
daa
xor
mov
mov
adc
jp
test
ret
outsl
push
popa
cld
es
cmp
sbb
in
adc
jnp
pusha
jae
inc
fmul
es
adc
int3
out
add
or
xor
inc
cmpsb
pop
push
adc
stos
sub
cwtl
scas
dec
movsl
addb
xor
adc
aam
scas
inc
push
pop
dec
sub
fsubrl
sbb
or
fs
jp
sub
ss
fdiv
xor
nop
push
mov
lods
stos
add
ret
push
xor
dec
mov
xor
add
test
jp
push
dec
incb
or
jg
sbb
lods
or
call
and
and
push
ds
mov
sub
inc
push
xchg
shll
outsl
sub
sbb
dec
push
inc
and
xchg
adc
jp
stos
cld
cmp
mov
push
add
ds
stc
dec
pushf
inc
jg
adc
ljmp
in
and
fwait
lahf
shr
push
ret
pop
std
xor
lods
mov
inc
xor
ds
or
xchg
push
mov
fdivs
pop
mov
xchg
dec
icebp
pop
xor
push
sar
pop
out
jle
mov
lds
shrb
xor
inc
stos
or
loope
mov
mov
in
js
pop
movsl
dec
mov
mov
dec
sub
sub
mov
mov
dec
xchg
adc
sub
and
icebp
and
aaa
cmp
dec
rorb
fimull
mov
or
xchg
shrl
sbb
andl
stos
pop
cwtl
and
or
cmp
loope
jae
ss
xor
mov
fdivrs
mov
jge
rcl
push
sub
and
enter
push
es
lahf
loopne
mov
sub
jmp
cs
filds
and
daa
mov
adc
scas
stos
aad
sbb
inc
cmp
sarb
dec
test
xchg
mov
cltd
adc
or
aas
xchg
rcrl
sbb
sub
daa
dec
lock
sub
inc
cmpsb
inc
scas
dec
cmpsl
jbe
push
mov
loopne
inc
jmp
xor
jno
nop
in
jmp
dec
mov
cmc
shll
and
xchg
add
aaa
push
xor
andl
test
out
clc
mov
or
loope
inc
push
enter
repnz
insb
dec
inc
int3
sub
ja
mov
xchg
insb
jmp
sub
mov
fs
sub
subb
fisttps
mov
xlat
inc
clc
sti
fdivrs
ja
clc
in
arpl
cmpsl
mov
mov
push
movsl
shl
in
dec
jp
cmp
mov
inc
in
add
cmp
sbb
cltd
mov
into
lds
push
push
in
xchg
jmp
lea
dec
inc
loop
outsb
ret
inc
in
in
cwtl
outsb
cltd
pop
pop
mov
stos
imul
sub
cwtl
push
mov
mov
jne
adc
and
sub
sbbb
aam
inc
xchg
insl
cld
mov
aas
mov
pop
dec
jbe
cmp
xor
push
arpl
aad
add
ret
pop
inc
mov
addl
cld
jle
leave
adc
int
mov
push
push
in
xchg
into
ret
es
sbb
sahf
pop
out
adc
add
xor
jl
leave
xor
test
inc
pop
add
js
shr
push
add
stc
icebp
push
mov
adc
push
xchg
int
cmpsl
push
fcmovu
std
sarl
lea
cs
sub
std
in
and
clc
and
or
and
fsts
dec
fisttps
mov
inc
int3
adc
mov
push
loop
and
popf
inc
mov
mov
mov
jl
push
pop
sub
cmpsb
in
cmp
cwtl
and
mov
lahf
nop
loopne
or
cmpsl
stos
pop
mov
pop
push
xor
pop
fstp
and
push
cld
push
push
push
and
stos
mov
push
sub
sti
js
ss
notb
jp
inc
and
xor
jl
pusha
adcl
xor
pusha
push
push
add
aaa
repz
in
enter
repnz
fneni(8087
imul
fsts
mov
cmpsl
sub
movsl
mov
je,pn
fdivr
inc
cmpsl
xchg
xor
ret
lods
dec
stc
mov
jnp
push
mov
jnp
jno
pushf
decb
sti
bound
std
dec
sahf
jecxz
xchg
mov
sub
stc
leave
icebp
pop
dec
pop
mov
xchg
xchg
mov
leave
sahf
lret
and
imul
mov
xor
repnz
add
mov
push
jg
jmp
xchg
mov
xor
jp
test
mov
fdivs
lds
push
jno
test
dec
mov
cld
insb
aad
or
sbb
xor
insl
fsts
cltd
add
cmp
imul
xlat
xchg
shll
int
mov
sbbl
stos
loop
push
out
mov
push
and
mov
bound
lret
pop
jecxz
popa
xchg
mov
jecxz
test
inc
cmp
imul
push
cmpl
xlat
rcrl
fwait
jle
and
dec
popf
mov
outsl
or
pop
cmp
scas
cwtl
or
shlb
fs
mov
out
sbb
mov
lock
lods
notb
movsb
or
fwait
inc
and
xor
pop
inc
cs
popa
xchg
xor
and
pop
inc
mov
cld
sahf
add
jp
sbb
test
ds
call
xor
aam
insb
sahf
mov
addr16
lock
orb
sub
rorl
iret
test
xchg
enter
leave
or
inc
shrl
xor
fcompl
push
je
fdivs
fcos
xchg
mov
out
das
js
mov
xchg
iret
fwait
xor
mov
fistl
xor
sub
or
adc
mov
and
mov
cmc
fucomip
pop
in
in
clc
imul
cmpsb
xor
out
ja
mov
xor
mov
cmp
inc
dec
leave
fdivrl
and
mov
jo
stc
mov
stos
hlt
stos
or
dec
or
addr16
jne
sahf
jge,pn
mov
es
xchg
fucomip
popa
int3
arpl
or
jns
shl
mov
push
fs
xlat
xor
cwtl
mov
aas
lret
adc
jmp
std
mov
jne
pop
pushf
loopne
fildll
mov
push
jp
fsubl
mov
arpl
jecxz
push
pop
push
sti
adc
push
mov
leave
pop
mov
enter
xor
lock
int3
dec
out
mov
xchg
out
jne
cld
aas
and
test
sbb
js
imul
mov
xor
sahf
mov
iret
fs
mov
rcr
arpl
and
loopne
test
mov
stc
push
ret
fsubrs
add
insl
push
push
add
andb
cmp
and
ds
adc
jl
out
out
insb
les
das
and
mov
in
scas
and
aaa
inc
lock
adc
dec
ja
push
jb
sti
and
fstpt
push
jle
inc
push
mov
fwait
into
into
add
jnp
ficompl
dec
jl
xchg
push
push
es
imul
mov
xor
sub
add
jae
in
sub
sub
mov
enter
inc
push
fisubl
mov
push
mov
int
aaa
inc
cmp
pop
fimuls
mov
and
or
aas
and
adc
xchg
fidivs
shl
je
test
fistps
cmpsl
pop
in
test
sbb
mov
popf
test
insb
mov
mov
sbb
ds
jecxz
stos
mov
daa
ljmp
push
mov
and
push
mov
je
test
scas
sbb
cmpsl
cs
sbb
adc
arpl
std
push
cmp
mov
pop
xchg
out
cmc
orl
stos
sbb
cmpsw
mov
lods
pop
repz
xor
shrl
jl
popa
ficoml
push
mov
jno
or
in
clc
cmp
add
lcall
push
jbe
sbb
and
mov
xchg
std
js
xchg
shl
or
test
hlt
sbb
push
addb
pop
out
jnp
loop
ret
pop
out
push
mov
out
jl
sub
mul
mul
lea
rcrl
xchg
push
jne
push
jg
sahf
ds
stc
xorl
lea
js
mov
mov
or
jecxz
fisttpl
pusha
popa
ss
icebp
and
mov
mov
lret
notb
orl
or
mov
iret
movsb
test
push
push
pop
arpl
insb
aam
loope
mov
inc
cwtl
or
jb
lods
in
inc
arpl
sub
repnz
inc
jnp
sub
insl
sub
cmp
cs
es
or
idiv
jmp
sbbl
cmp
shll
mov
xchg
jecxz
xchg
xor
int3
cmp
data16
sbb
fldl
mov
bound
mov
in
mov
gs
or
push
leave
lcall
xor
sub
inc
imull
mov
scas
fisttps
out
fstps
je
gs
test
aas
xchg
aas
adc
pushf
jo
cwtl
mov
push
sub
scas
jmp
je
iret
cmpsl
xor
loop
jnp
popa
ret
pop
push
sbb
lahf
push
push
sbb
or
sbb
sub
sbb
es
pop
ret
sbb
jge
sbb
leave
es
adc
sub
test
fs
cmpl
mov
rcrb
aad
imul
push
loopne
nop
roll
fiaddl
popa
lods
sti
rcrb
cli
dec
outsl
adc
addr16
push
cmp
adc
sub
sub
and
jb
lahf
fldcw
jg
pop
or
and
or
xor
jae
push
pop
js
mov
inc
or
adc
dec
inc
and
fmull
imul
sub
xchg
cs
scas
xor
loopne
jbe
push
subl
push
enter
sub
lock
mov
lret
mov
pop
dec
mov
inc
das
cmpsl
ljmp
in
out
into
loopne
fsubrl
out
push
mov
lahf
or
insl
sub
add
insb
enter
insb
sbb
xchg
movsb
xlat
mov
loop
cld
ss
rcll
arpl
call
pop
stc
xchg
enter
add
xchg
push
fsubl
test
jbe
jl
sub
aas
xor
lods
and
jne
rcl
pop
mov
lods
adc
dec
lods
leave
mov
div
dec
inc
inc
cli
movsl
int3
fistpll
icebp
inc
jbe
or
je
das
mov
and
jo
add
loop
pop
jge
lret
bound
shrl
rol
out
pop
pushf
popf
nop
scas
imul
incl
or
lahf
adc
popf
mov
hlt
add
rclb
pop
mov
push
roll
jb
aaa
cmp
stos
adc
xorb
mov
pop
and
pop
xchg
js
cmc
push
hlt
jnp
insl
cmp
jp
lods
fsubl
dec
pop
jbe
sub
pop
mov
mov
pop
out
dec
pop
pop
daa
or
sbb
lret
pop
out
scas
cs
rorl
xchg
sbb
jns
out
sbb
scas
mov
in
js
jl
mov
jno
or
cmpsb
sub
mov
cld
xor
repnz
sbb
push
adc
std
daa
inc
adc
in
repz
addl
faddl
cs
inc
adc
adc
lcall
mov
sbb
push
fmull
repnz
mov
sbb
or
rolb
mov
sub
inc
adc
inc
sbb
cmp
cli
aad
xor
fs
sub
mov
imul
loope
ljmp
gs
addr16
cmp
paddsb
nop
dec
mov
cmp
enter
ret
jl
mov
enter
mov
sbb
dec
mov
pushf
jns
out
cmp
and
mov
in
rcrl
xor
cmp
adc
add
mov
arpl
sti
xor
ds
jo
into
dec
out
popa
movsb
das
out
inc
mov
mov
mov
xchg
outsb
xor
mov
clc
mov
or
push
sub
out
cwtl
jne
cltd
xor
outsb
sarb
arpl
cmp
mov
outsb
cmp
jno
popa
mov
or
jbe
sahf
cltd
mov
mov
das
fwait
pop
xor
lods
mov
je
mov
mov
sti
dec
ljmp
and
jmp
imul
fsubrs
repnz
cmp
not
push
xchg
stc
push
movsb
mov
sub
cmp
out
aas
jg
cmp
stc
sub
sbb
cmp
xorb
aam
pop
rcrl
insb
mov
xor
rorb
sti
movsl
test
int3
sub
xchg
hlt
ret
push
xor
push
cmp
aaa
rcrl
xchg
xchg
adc
shrb
and
sti
mov
mov
ret
xchg
loopne
pusha
inc
insl
cmp
loope
enter
movsl
popa
dec
sbb
xchg
or
cmpsb
jnp
cmp
ss
sbb
dec
loope
loope
lret
mov
scas
clc
or
mov
xchg
test
mov
xchg
lock
or
jp
es
jno
mov
jns
add
or
call
jno
dec
mov
push
femms
inc
cmc
out
pop
shr
into
xlat
and
outsb
std
dec
mov
or
les
adc
lods
push
es
test
push
cmc
mov
or
push
lcall
dec
push
inc
cmp
sub
or
cmpsl
loope
xor
lret
adc
rcll
scas
imul
movsl
xchg
ss
cmpsl
idivb
adc
cli
jg
idivb
pop
cwtl
pushf
jno
fiaddl
inc
sti
cmp
test
das
mov
pop
and
push
cmp
arpl
test
push
ljmp
mov
rcll
stos
movb
push
call
imul
inc
stos
popa
jns
insb
outsb
dec
jb
mov
push
ljmp
rolb
push
les
mov
add
add
mov
scas
pop
pushf
mov
sbb
pop
sub
aaa
shll
mov
push
ret
les
adc
sbb
call
std
je
sahf
push
leave
sbb
loopne
sub
xchg
jge
into
loopne
pop
pop
in
inc
loope
xchg
es
and
sbb
dec
cmpl
lock
xchg
push
sarl
adc
mov
inc
mov
mov
mov
fldt
inc
lods
outsl
jp
push
xor
jg
lret
std
jge
jg
lods
fsubrl
or
lds
sub
mov
popf
testb
jmp
es
pop
cld
cltd
fcompl
lock
in
in
mov
das
out
aas
je
insb
jg
mov
mov
nop
mul
xor
mov
in
in
cld
jnp
outsl
dec
mov
sahf
jp
fistl
clc
xlat
outsl
adc
js
adc
xor
push
cmp
stos
fisubl
aaa
xor
mov
push
dec
in
and
cwtl
mov
cmc
lea
adc
jl
cmp
mulb
test
shlb
and
notl
add
je
jnp
inc
pop
mov
xor
ss
xchg
into
inc
lret
lock
mov
fldenv
int
sub
xchg
or
sahf
in
mov
jp
mov
daa
pop
test
aam
aam
push
xchg
cmpsl
test
stos
jecxz
out
fimuls
mov
xchg
inc
mov
or
data16
or
pop
inc
jne
mov
rorl
inc
inc
out
and
sbb
popf
sbb
sbb
scas
addr16
js
adc
sub
dec
push
daa
and
dec
sbb
or
sbb
ljmp
andl
jge
cwtl
jb
xchg
test
les
add
or
mov
les
test
popf
lods
cld
insl
sbbl
mov
subl
sbb
loope
outsb
adc
mov
xor
sahf
cltd
stc
mov
adc
xor
sub
mov
popa
es
mov
arpl
jno
mov
es
test
jle
fwait
inc
and
int
pop
fcmovne
and
nop
push
cmp
mov
mov
mov
sbb
cmp
cmp
pop
outsb
insl
or
sbb
add
dec
lret
ficompl
inc
push
mov
and
dec
xchg
test
cmp
jns
ret
inc
addr16
lock
sarb
mov
xchg
fimuls
push
adc
aam
inc
mov
and
pop
xlat
sub
pop
mov
push
add
ja
mov
add
int3
jmp
fisttpll
pop
pop
jp
cmp
pop
daa
and
mov
adc
xlat
cmp
scas
pushf
loope
mov
or
and
lret
xor
lds
mov
pop
lret
dec
sbb
xor
sub
jecxz
out
pop
push
adc
xchg
and
cli
xchg
add
dec
lret
mov
mov
incl
pushf
mov
mov
or
imul
xchg
dec
jnp
sbb
ds
xchg
and
mov
jp
fst
sahf
push
sbb
leave
sub
daa
xor
adc
cmp
xor
fldl
ja
cli
fwait
lea
aas
mov
push
add
mov
sbb
ror
lret
rcpps
jmp
push
stc
repnz
or
cmp
ds
jl
daa
icebp
nop
dec
cmp
orl
or
xor
lods
call
ret
sub
jmp
test
rcll
sub
dec
repz
mov
inc
sbb
push
in
add
icebp
add
push
sbb
jp
jne
std
pminub
ror
js
popa
cld
ljmp
jl
bound
jl
sbb
cmp
out
out
daa
cwtl
dec
fsubrs
push
pop
sbbl
repz
pop
out
lret
loopne
cltd
dec
sbb
lods
pushf
mov
pop
dec
pop
lds
std
pop
add
call
or
loopne
dec
xchg
mov
push
addr16
mov
test
inc
pop
sbb
push
leave
sub
xchg
pop
addr16
sub
icebp
mov
jecxz
cmp
imul
sbb
repnz
cltd
das
jns
mov
cmp
int3
jbe
subl
or
cmc
mov
xchg
inc
scas
sbb
xchg
lock
pop
leave
cltd
repz
insl
sub
cltd
jmp
xor
data16
xchg
jbe
pop
jle
dec
mov
ret
cmp
test
jne
xor
fbstp
lret
in
xchg
jae
sub
pop
mov
mov
fdivr
jb
in
movsb
orb
inc
fcomp
nop
jno
add
xor
cmp
loope
sbb
sub
and
jo
or
lcall
imul
sub
push
pop
test
mov
mov
mov
or
cld
pop
cmp
clc
sbb
adc
rcl
stc
scas
stos
inc
aaa
lods
or
ds
call
jne
aam
fnstcw
lds
scas
or
cmp
fbld
sub
pop
inc
icebp
push
pop
aaa
ret
test
arpl
push
nop
and
inc
mov
out
mov
insb
pop
outsb
in
stc
lret
mov
xchg
xor
sub
jl
dec
movsb
xchg
mov
icebp
cmpsb
jle,pn
call
test
inc
aam
enter
rcll
dec
jo
cmp
add
mov
jbe
or
cltd
lea
pop
out
lahf
fnstenv
lahf
cmpsl
rorl
adc
mov
jmp
ljmp
repz
xchg
inc
cmp
fwait
sti
loope
pop
lds
idiv
jns
xchg
sub
jb
push
mov
insl
mov
xor
mov
out
pop
mov
add
lods
mov
and
mov
lea
loope
aad
shrl
sahf
stc
dec
stos
in
add
or
aam
push
adc
mov
test
inc
xchg
aaa
mull
insb
mov
push
and
cwtl
fstps
out
pop
imul
test
pop
push
and
in
sub
fdivrs
jmp
mov
stos
inc
int
ret
add
xchg
aaa
icebp
adc
repnz
adc
cmc
xchg
pop
xchg
inc
push
sub
ljmp
xor
mov
subb
daa
cli
mov
xor
dec
fneni(8087
cwtl
inc
iret
jns
fwait
cltd
std
stc
arpl
push
int3
in
cmp
loop
xor
sub
insl
dec
js
sbb
cs
cmc
jae
inc
jae
inc
je
cmp
mov
and
sub
out
fildll
fstpl
mov
dec
pop
or
adc
add
xor
dec
nop
sub
negl
jbe
clc
jbe
inc
add
gs
pop
subl
cs
push
push
lret
pop
jae
pop
out
push
ret
xor
sub
imul
stc
ljmp
jmp
repnz
aas
mov
int
aam
add
aam
outsl
bound
xor
ljmp
pop
or
popa
jno
xor
pop
and
fs
mov
mov
cmp
add
mov
shll
or
add
dec
andl
cmpsb
lret
outsb
xchg
mov
inc
mov
sbb
int
aad
cmp
call
enter
mov
mov
loope
jg
xor
clc
push
shr
jne
test
jecxz
sub
and
loopne
xchg
mov
xor
movsb
xchg
mov
cmp
mov
mov
int3
enter
push
fsts
jp
sbbb
xchg
pop
int3
or
test
pop
mov
nop
insl
cli
into
jne
push
insl
aad
orb
adc
xor
and
add
pop
jne
fs
sub
andl
mov
je
out
push
and
cltd
cmp
cmpsb
gs
out
and
mov
dec
xor
mov
sbb
repnz
loopne
mov
xchg
rorb
jg
pop
test
pop
xchg
dec
jne
test
mov
push
mov
jmp
loope
cs
in
sbb
jg
idivl
pop
inc
fcompl
in
or
mov
adc
sahf
shll
les
push
repnz
cmc
aas
pop
das
outsl
jl
or
jecxz
jp
add
pop
sbb
int3
in
gs
jno
push
cmpsb
ret
out
stos
sbb
or
andl
cmp
sbb
pop
jmp
or
mov
jb
jmp
movsb
cmpsl
and
bound
notl
ljmp
ja
rorb
xorl
mov
xchg
in
adc
xchg
xchg
out
push
pusha
xorb
lret
adc
loopne
xchg
or
add
loopne
jns
imul
lods
sbbb
inc
inc
cltd
jns
cltd
jns
pop
incl
jno
push
mov
add
roll
lea
sub
fstpt
sub
fldenv
loope
jb
dec
ljmp
xlat
pusha
mov
lahf
inc
hlt
adc
testl
xor
ljmp
rol
sub
mov
lock
int3
sbb
sub
and
cmpsb
scas
push
outsb
mov
insl
in
jnp
test
vpmuludq
testl
fwait
leave
push
xchg
adc
push
mov
mov
jae
push
add
add
sbb
aaa
jg
inc
cmp
or
dec
out
pop
jg
mov
jmp
push
adc
in
jns
adc
in
sti
and
arpl
pusha
cwtl
cmp
cwtl
pop
adc
in
sbb
or
and
jecxz
loop
push
and
ljmp
mov
testb
add
jbe
or
xlat
mov
std
jno
in
adc
lds
add
add
enter
cmp
mov
xor
outsb
pop
push
fistps
in
fnstcw
dec
cmp
pop
sub
mov
insb
adc
mov
push
sub
test
mov
jno
cmp
loope
mov
add
pop
pop
stos
add
stos
mov
add
shll
push
sub
fistl
sub
mov
adc
sub
sti
je
fstpt
lahf
mov
and
fsubp
dec
inc
cwtl
and
xor
mov
sbb
mov
inc
lahf
add
fisttpl
mov
push
imul
fs
push
repz
loope
fisubrs
popa
aaa
lds
cli
cmp
add
sub
imul
push
mov
push
out
rolb
aas
dec
cmp
out
test
inc
inc
inc
xchg
ds
mov
dec
das
sarl
or
in
test
jbe
cli
or
pop
and
fwait
movsb
push
mov
xchg
roll
mov
sub
mov
mov
add
xor
shlb
mov
in
mov
shr
fwait
std
rcr
mov
rcrl
or
cltd
push
sarb
and
out
sub
jmp
fwait
stc
mov
sub
aaa
insl
dec
xor
cmp
lcall
cmp
sbb
cld
out
push
mov
sbb
mov
or
sub
jo
roll
push
iret
inc
stos
inc
push
mov
popa
xor
jae
and
mov
cmp
push
call
pop
daa
push
mov
repz
imul
stc
mov
inc
xor
sbb
jmp
mov
rclb
xchg
rcl
cmp
push
pop
fstpl
mov
xor
leave
stos
mov
add
fisttpl
or
mov
sub
jg
add
adc
cltd
inc
xchg
in
cmp
pop
jecxz
or
pop
mull
aad
xchg
popf
or
loopne
out
xchg
lret
aam
cmp
sbb
or
lds
push
mov
inc
les
xchg
jo
sbb
jl
inc
adc
lds
clc
in
jmp
add
lods
jae
sbb
out
imul
out
enter
mov
xchg
mov
repz
imul
mov
mov
call
push
push
inc
push
fistpll
xchg
push
imul
push
add
std
or
pushw
or
js
in
je
daa
dec
xor
stc
sbb
ss
inc
cld
arpl
xchg
cmp
fsts
lret
sub
mov
pop
aad
scas
lock
sub
inc
aad
pop
sbb
mov
add
sub
addl
pop
mov
lret
lahf
push
mov
sub
ds
dec
cmp
mov
sub
scas
pushl
scas
add
icebp
mov
mov
movsl
mov
add
stc
popf
xor
inc
xor
and
and
add
movsl
mov
mov
cltd
aam
lahf
push
inc
inc
inc
test
mov
xchg
roll
add
mov
jl
stos
call
js
in
pop
out
data16
push
adc
sbb
rclb
in
cmpsb
fadds
rcrb
mov
ficompl
xchg
incb
outsl
dec
and
aaa
lods
mov
push
mov
inc
sub
mov
adc
out
mov
add
jbe
add
dec
cli
inc
sub
cli
addr16
mov
je
ja
adc
jecxz
and
pop
movsl
and
inc
out
es
xchg
pop
sar
add
repnz
pop
leave
mov
jbe
pop
jae
adc
mov
arpl
add
xchg
sub
jl
shll
aad
test
flds
fst
push
into
insb
in
sbb
sbb
mov
jle
mov
aad
xor
mov
lret
or
xor
sbb
shll
rcl
mov
int3
sub
sub
icebp
dec
fsubl
ja
push
lret
mov
pop
stos
jo
pop
outsb
inc
aaa
push
dec
xchg
sbb
lret
stc
xor
add
hlt
adc
push
jo
repz
inc
xchg
icebp
and
insb
mov
inc
lahf
mov
mull
inc
push
ficomps
mov
or
inc
pop
dec
shlb
mov
or
pop
pop
lock
lcall
pop
or
sahf
push
xor
sbb
add
dec
and
jecxz
pusha
mov
mov
xlat
cmp
pop
cmpxchg
jmp
and
shr
dec
inc
pushf
cmp
frstor
inc
lock
jo
jg
mov
sbbl
out
or
or
mov
cld
mov
jne
mov
icebp
pop
mov
mov
add
fwait
scas
inc
arpl
push
add
pop
sbb
inc
jecxz
testb
test
lcall
xor
mov
cmp
xchg
lret
out
fldcw
lea
imul
push
cli
mov
lock
pop
jo
mov
sahf
decl
call
das
mov
in
nop
and
insl
pop
shlb
fimuls
xor
adc
jmp
out
xor
xor
data16
dec
jp
insb
mov
add
test
lock
insb
jne
loop
cmc
cltd
lret
loop
cmp
push
or
cmp
pop
push
ffree
gs
adc
cmp
and
cmp
je
pusha
int
loope
pop
cmpsl
dec
inc
aad
mov
sub
iret
insl
daa
inc
sbb
iret
sbbl
ret
xor
in
and
addr16
xor
clc
std
insb
mov
jmp
out
xor
and
add
ss
sti
pop
adc
jl
mov
or
push
out
fmuls
mov
or
out
js
mov
cmp
inc
cmovo
xchg
bound
cli
mov
mov
sbb
cmp
popf
pop
inc
aam
mov
mov
or
inc
and
or
hlt
fdiv
cmc
adc
aam
mov
inc
in
push
cltd
fstpt
push
mov
lahf
test
add
movsb
fs
orb
dec
inc
stos
jg
mov
mov
jnp
xor
in
imul
jmp
stos
leave
icebp
lret
xchg
and
dec
rcrl
sbb
dec
mov
sbb
arpl
andb
rorb
aam
mov
dec
push
jns
fwait
in
and
jmp
in
sti
add
test
imul
adc
xchg
cmp
popf
xor
gs
jge
hlt
or
cmp
iret
outsl
sbb
jg
popa
jg
stos
fimull
vpmulhw
inc
cmp
add
je
fcomip
aas
bound
gs
subl
jbe
aaa
aas
xchg
xchg
inc
mov
getsec
pop
sahf
fimull
cmp
lret
xchg
les
adcb
std
adc
or
sti
sub
pop
aaa
add
fcmovnbe
sub
into
inc
int
jno
movsl
fnstenv
xchg
xchg
adc
adc
orb
inc
jo
call
sarl
pusha
push
sbb
lods
and
insb
push
xchg
repnz
add
mov
lea
mov
inc
daa
mov
js
xchg
test
stc
insb
cli
mov
mov
das
out
stc
jae
push
lea
cmpsb
ljmp
enter
fs
leave
iret
cmp
cli
fwait
mov
xor
movsb
pop
cmp
shlb
and
scas
ret
repnz
pushf
shll
lds
daa
xor
sbb
push
jbe
stc
inc
shr
pop
push
lret
inc
subb
mov
rcll
xchg
mov
out
pop
movsb
push
and
cmp
push
push
movsb
hlt
int3
sub
ret
inc
jmp
push
bound
pop
pop
dec
aam
pop
xchg
repz
sbb
jle
fiadds
je
shlb
adc
scas
add
orb
mov
in
dec
mov
mov
je
mov
xorb
sub
aas
dec
cld
push
ret
outsb
js
in
in
cltd
lahf
lods
fbstp
leave
outsb
or
lahf
xor
cmpsl
dec
in
fdivl
xchg
icebp
fcoml
dec
call
jns
pop
ja
jmp
mov
mov
jae
daa
or
ja
and
jo
mov
and
out
pop
je
ja
std
sbb
rcrl
adc
sahf
or
jne
inc
nop
test
or
loopne
and
bound
mov
aad
adc
mov
fistpl
mov
in
aam
xchg
pop
andl
in
jns
xchg
jecxz
xchg
adc
pushf
xor
push
xor
sbb
xchg
xchg
cmp
ja
in
lsl
test
adc
into
fcoms
out
js
mov
lret
or
jg
xchg
xchg
or
repz
adc
cmp
movl
inc
jmp
stos
fdivrl
repz
data16
mov
or
adc
dec
jbe
mov
add
sub
movsl
pop
jo
lret
lret
cmp
cmp
in
lcall
insl
xchg
fnstsw
pop
inc
movsl
pop
call
adc
test
jle
mov
dec
das
fsubl
fwait
pop
bound
in
push
adc
lret
rcl
imul
mov
fcoml
jbe
cmp
shlb
or
mov
inc
rcrb
dec
pop
std
lock
ds
lods
lock
and
inc
add
shlb
rcrl
xchg
mov
mov
divl
xchg
pop
lock
test
shll
lret
xor
adc
mov
subb
mov
push
imul
mov
jae
jns
arpl
adc
mov
mov
xchg
iret
aad
mov
out
out
inc
rorb
xor
xor
out
call
out
xor
flds
ss
jp
scas
jb
shrl
jb
sub
dec
sti
cmp
stos
call
add
aad
ljmp
shr
mov
cmp
add
inc
gs
dec
pop
cld
adc
lea
cld
pop
arpl
jmp
and
rcl
sub
pop
cmp
sbb
jns
xchg
mov
jl
nop
jmp
gs
movsb
inc
add
and
xor
movsl
dec
xor
push
mov
mov
mov
and
mov
xchg
mov
test
and
xchg
les
push
and
xlat
push
test
jne
pop
add
xchg
adc
add
in
push
lock
popl
fisttpll
into
out
add
or
repnz
notl
aas
sub
sarb
mov
push
cmp
scas
or
pop
and
inc
pop
cmpxchg
add
or
adc
lahf
insb
js
scas
lret
int3
mov
aad
mov
or
gs
add
out
add
pop
pop
shr
lds
or
xchg
das
or
mov
lds
sbb
jp
or
cld
rcl
mov
fimull
dec
add
dec
jno
sbb
inc
aas
call
mov
out
adc
incl
in
sbb
inc
mov
inc
adc
iret
inc
outsb
and
lods
xor
lea
shlb
mov
push
or
ja
orl
jecxz,pn
scas
rol
dec
push
ret
das
ret
pop
jle
dec
in
iret
mov
aaa
addr16
and
into
decb
jp
xchg
mov
xor
fisttps
sbb
or
inc
hlt
mov
out
inc
inc
inc
pop
jl
push
cmp
cli
dec
mov
stc
lcall
hlt
push
adc
mov
push
cmp
cs
enter
mov
sbb
call
sbb
fwait
or
cwtl
push
mov
insl
pop
and
shlb
inc
push
mov
mov
adc
dec
cltd
lods
cwtl
inc
push
out
imul
mul
stos
xor
loope
popf
in
cwtl
jo
fmull
aaa
imul
mov
cmp
icebp
cmpsl
ss
adc
ret
ret
addr16
mov
ret
xchg
lcall
or
sar
dec
dec
pop
sub
inc
inc
imul
jge
push
loopne
adc
push
sub
adc
pop
popf
xor
xchg
scas
xchg
add
test
je
jno
adc
and
adc
rcll
sbb
cs
jno,pt
add
sbb
int
sub
les
lods
lahf
jmp
sbb
fdivrl
ja
std
hlt
movsb
aad
push
test
and
dec
faddp
loope
js
sub
subps
sub
divb
loop
std
frstor
adc
push
or
xor
sbb
ja
pusha
ljmp
cmp
loopne
or
loopne
cwtl
fists
pavgb
je
sbb
jecxz
jnp
adc
pop
mov
sub
pop
sub
pop
xor
xchg
fdivs
test
jns
push
int3
jns
mov
pop
lar
rcl
in
arpl
daa
repz
xchg
rolb
imul
cwtl
std
push
fmuls
ss
and
cmpsb
cmp
or
mov
movl
inc
add
in
push
in
jmp
or
and
push
push
fsts
out
inc
mov
rorb
adcl
pushf
fcomps
pcmpgtb
pop
add
sbb
mov
loope
out
bound
or
shrb
fidivrs
stos
lea
insl
mov
mov
push
lret
shll
lea
dec
lock
add
in
das
jae
xor
imul
mov
pop
mov
xlat
jg
in
xor
stos
loop
push
out
jmp
lods
fiadds
mov
push
stos
mov
jp
loope
test
jae
fsubrp
lret
sbb
aas
push
cmc
jnp
popa
jg
clc
lods
movsb
jno
mov
test
cmc
ljmp
repnz
lods
lods
or
add
je
or
cld
leave
fs
pop
xchg
jne
xchg
rcrb
pop
sub
adc
mov
popa
xor
mov
fcomp
scas
data16
push
orb
add
cmpps
mov
jmp
fiadds
pop
movsb
in
test
add
jae
mov
test
cmp
faddl
sti
rolb
mov
data16
imulb
lret
xchg
repz
sub
into
jecxz
mov
lds
fdivrs
xor
ret
mov
ss
jns
aam
mov
test
adc
jnp
xchg
fdiv
xor
cmp
cltd
rolb
mov
push
gs
mulb
cmp
push
xchg
push
fwait
nop
jmp
loope
jno
lock
xor
gs
scas
loope
fldl
fwait
push
jns
pop
mov
in
arpl
in
pop
sub
adc
arpl
push
lret
adc
ret
cmp
cmp
fstps
stos
ljmp
out
call
mov
push
cli
adc
lcall
and
push
lcall
rcll
sbb
cmp
out
sub
xor
sub
inc
xchg
mov
push
inc
add
popf
jbe
push
jmp
inc
xor
lret
out
xor
push
shll
je
push
inc
lods
pop
sbb
adc
inc
mov
imul
sbb
jo
jne
sbb
test
mov
scas
dec
jle
sbb
sarb
subl
movsl
push
movsb
fucomip
gs
xlat
jns
fisubrs
outsb
mov
mov
sub
and
incb
xchg
inc
inc
es
xchg
push
mov
jns
aas
fldcw
xchg
call
nop
sahf
dec
add
test
xor
push
nop
inc
aas
add
pop
pop
sbb
das
jbe
or
mov
push
push
push
mov
xor
jg
cmp
mov
loop
test
inc
jae
outsl
mov
mov
mov
mov
ret
fistps
aaa
stos
adc
nop
and
sub
and
and
cmp
frstor
cmp
jnp
lock
push
xchg
mov
or
push
fs
jnp
inc
call
ret
cmp
dec
fisubrs
scas
aaa
orl
dec
push
scas
xor
scas
push
mov
aad
notl
rcrl
mov
jmp
push
jmp
add
sbb
shlb
push
push
dec
fisttpll
mov
cmc
loopne
adc
pop
mov
mov
xchg
les
aas
and
mov
scas
inc
push
mov
stos
cltd
std
popa
in
mov
rcr
dec
test
lahf
lret
ficoms
fucomip
mov
dec
xchg
outsb
adc
cmc
pop
mov
mov
es
inc
test
lds
push
loop
sahf
mov
inc
jae
and
and
or
ss
movsb
out
adc
movb
mov
pop
flds
out
dec
cmp
fildl
xchg
jp
test
insl
imul
lret
and
and
sub
enter
out
fnstcw
stos
mov
sub
mov
bnd
push
incb
cmpsl
out
aad
adcb
xorl
test
js
add
subl
mov
jae
scas
clc
bound
shlb
pushf
gs
popa
adc
inc
stc
xor
fdivl
inc
pushl
cmpsb
mov
dec
mov
inc
jecxz
pop
cmp
dec
inc
inc
jecxz
das
outsl
out
pusha
or
notl
lods
out
lods
mov
lods
inc
or
push
sarl
cmpsl
scas
lahf
xchg
sub
int3
jg
aad
shll
sbb
dec
xor
out
or
inc
movsl
hlt
dec
jns
sub
cs
inc
shlb
aas
stos
mov
ljmp
cmp
mov
out
cmpsb
movsb
push
ss
sbb
adc
fistpl
cwtl
sahf
adc
or
cmp
jl
push
adc
outsb
int3
sub
orl
pop
push
test
dec
popf
xchg
mov
inc
mov
or
test
cmc
out
iret
rep
xchg
cmp
leave
cmp
jns
jne
inc
iret
sub
cmpl
fcmovb
ljmp
enter
and
xor
out
shll
add
mov
test
xor
stc
mov
pop
sub
aas
push
push
filds
daa
cmp
repnz
loopne
test
test
in
pop
sbb
xchg
aaa
cmc
jae
sahf
imul
imul
mov
inc
jae
push
mov
test
sub
test
sub
mov
cmp
sub
arpl
sub
divb
jge
inc
aas
and
repnz
sbb
sbb
pop
nop
daa
dec
fs
or
dec
add
jecxz
adcb
jmp
loop
mov
je
dec
mov
push
pop
cs
push
pop
js
cwtl
loop
xor
jge
sub
push
and
iret
xor
test
jmp
cmp
pop
adc
mov
add
mov
cld
dec
jmp
loopne
subl
pop
sahf
xchg
adc
jp
pop
testb
stos
nop
jmp
sbb
jo
pop
or
push
pop
or
sub
hlt
mov
or
or
icebp
sbb
jo
dec
in
out
push
test
lahf
or
inc
js
push
inc
cwtl
call
lret
jns
push
mov
inc
pop
negl
mov
dec
stc
in
pop
jne
mov
xchg
loop
cmp
mov
sbb
fistpll
dec
jmp
mov
fiadds
mov
leave
add
push
mov
out
mov
xchg
mov
and
mov
mulb
mov
hlt
and
lcall
jge
fisttpl
add
mov
sbb
bound
dec
inc
mov
bound
jno
or
loope
je
in
stos
push
test
sbb
aaa
bound
push
lock
sub
shlb
fidivrs
and
movsb
xchg
push
sub
jg
adc
fdivrs
push
mov
mov
mov
into
cmc
gs
cmp
xor
sbb
fidivrl
loopne
shl
sub
xchg
sbb
aas
jae
fstpl
out
loopne
nop
aaa
dec
pop
test
jne
pusha
ja
dec
ljmp
xor
dec
sbb
mov
sbb
inc
scas
pop
in
lcall
pop
pop
and
mov
adc
xor
fnstenv
daa
imul
clc
or
and
mov
ret
divl
test
ror
dec
stos
xor
int
movsl
mov
push
out
leave
notl
or
mov
xor
mov
es
inc
lret
dec
decb
mov
icebp
ret
arpl
das
loope
sub
clc
mov
mov
sbb
push
movsw
jo
mov
movsl
pop
jae
mov
xor
push
cmp
mov
cltd
inc
test
push
push
lds
push
bound
lret
in
xor
mov
sub
push
out
inc
sarl
xor
rcr
mov
add
add
jl
cwtl
arpl
mov
push
xchg
je
inc
dec
push
mov
mov
pop
push
mov
adc
push
mov
inc
ljmp
pop
or
popf
ret
out
sbb
pop
mov
sbb
iret
and
push
orb
cmpsb
sahf
repz
xor
in
mov
arpl
bound
into
loopne
sbb
data16
fmull
in
cs
cli
inc
mov
jmp
jnp
cmp
cmp
data16
xlat
adc
outsb
pop
fadd
push
xchg
inc
sbb
ficomps
jns
xor
adc
xor
popa
inc
mov
mov
lds
or
sub
xchg
out
xlat
pop
fdivl
xor
push
insb
xor
add
loop
add
notb
push
cmp
adc
xor
inc
mov
aad
lahf
sbb
pop
inc
aam
dec
mov
xor
dec
mov
xor
sub
add
or
into
jns
jno
sub
cmp
dec
sub
jbe
in
fmul
mov
andnps
lret
mov
inc
jbe
cmp
repnz
push
test
mov
nop
cmp
cmc
shll
xor
sbb
test
xchg
jno
lret
cmp
das
sub
xor
popa
es
dec
fs
inc
push
push
ds
dec
movsb
xor
mov
into
outsl
das
adc
out
adc
jo
loop
imul
hlt
out
ss
push
add
aam
outsl
cmpsb
adc
adc
and
and
test
inc
rcrb
into
sbb
call
repz
leave
out
or
cwtl
std
push
mov
lea
pop
fs
mov
in
sub
rorl
dec
mov
xor
and
popf
test
pop
clc
xchg
imul
mov
xor
lea
mov
pop
jb
dec
daa
sub
push
pop
adc
lret
cmp
add
push
pslld
jmp
inc
test
pop
les
div
jecxz
mov
sub
gs
movsb
mov
xor
aas
call
loop
mov
sahf
jno
sbb
cpuid
fisubrs
cmp
add
scas
adc
gs
je
repz
arpl
cmp
cmp
jmp
cmp
push
ja
inc
jl
pop
movsb
push
fwait
add
jb
fcmove
call
mov
mov
ret
sub
fdivs
sbb
jle
out
pop
push
nop
inc
cwtl
push
mov
call
mov
cmpsl
push
push
xchg
sub
rcr
cltd
sub
sbb
int3
mov
ret
jp
loop
add
out
mov
mov
int
out
add
xchg
and
mov
add
popf
jmp
adcl
int
rorl
mov
cltd
cmpsl
cmp
push
push
push
jno
dec
sub
roll
mov
int3
xchg
repnz
inc
out
cld
mov
insb
repnz
fstpt
sub
xor
mov
xchg
mov
sub
sub
std
cmpb
mov
pop
push
jp
je
fs
rolb
push
mov
lret
lea
pop
mov
in
cld
mov
push
stc
mov
cmpsb
and
jl
pop
push
and
pop
movsl
fnstenv
incl
fmull
add
ror
cwtl
cmp
sbb
in
push
add
dec
push
mov
hlt
push
xor
cmp
in
xor
repnz
je
cmc
and
cmp
das
cmp
adc
lock
ficoml
cwtl
sub
pusha
cmp
pop
and
xchg
repnz
xchg
lods
jae
xchg
mov
adc
or
addr16
adc
and
cmp
popf
jle
mov
pop
cmp
push
xchg
out
jp
sub
addl
add
xchg
xchg
mov
xor
or
loopne
ds
jo
inc
mov
and
hlt
das
arpl
pop
mov
mov
pusha
mov
xchg
mov
mov
enter
push
cs
xchg
inc
jno
in
shll
add
jg
pop
xchg
dec
push
sarl
outsl
int
or
sti
lea
int3
insb
pop
gs
stc
cmp
cs
sbb
cltd
int3
ret
into
scas
or
xchg
insl
jne
lret
jp
adc
sub
cld
push
test
addb
dec
sub
and
push
popf
add
adc
dec
repz
scas
pop
shlb
dec
insb
fidivl
arpl
mov
dec
sub
in
iret
shlb
in
jge
stos
pop
repz
jnp
neg
nop
pop
mov
out
jbe
xchg
dec
sbb
loope
fsub
mov
add
inc
jle
cmpsl
movsb
mov
push
cltd
imul
mov
mov
mov
push
addr16
adc
out
mulb
int
mov
sahf
insl
outsl
seta
popa
and
push
xchg
dec
fwait
nop
fnsave
mull
jno
scas
fs
xchg
inc
sahf
out
insl
cmp
imul
dec
out
and
mov
and
pop
cmc
inc
mov
cmp
sarl
xor
fstpt
imul
lret
incl
popa
mov
jne
dec
cmp
cmpsl
xor
out
loope
gs
lret
sbb
je
lods
push
sarl
xchg
sub
out
sub
bound
cmpsl
daa
pusha
sti
bound
jae
mov
ret
fidivrl
mov
in
mov
aas
jge
push
sub
jno
imulb
pop
lret
pop
mov
mov
ljmp
aaa
into
push
push
lock
ret
retw
dec
xchg
in
pushf
sahf
mov
pop
sbb
sub
nop
lret
stc
daa
inc
add
cmp
cmp
mov
js
cmpsb
hlt
mov
pushf
js
pop
pop
inc
or
mov
pop
cwtl
andl
jnp
movswl
mov
sub
cmc
add
or
jge
cwtl
cli
gs
pop
and
sbb
jbe
pop
jno
loopne
ljmp
push
cmp
xchg
mov
rcrl
inc
cmp
sbb
inc
repnz
jo
jle
lcall
pop
out
loopne
cmp
pop
push
mov
jp
outsb
and
push
fistpl
pop
add
and
or
cmc
hlt
adc
pop
sub
add
dec
inc
xchg
ja
xchg
cmc
scas
add
mov
dec
jae
inc
pop
mov
bound
lcall
xchg
js
popf
mov
xchg
sub
lcallw
movsl
mov
scas
inc
cmp
cmp
push
push
push
sbb
aam
aaa
add
mov
sbb
sbb
adc
daa
mov
xor
pop
test
xchg
push
out
ja
scas
jb
pop
mov
and
mov
jecxz
jbe
jmp
and
mov
jne
in
inc
mov
outsb
xor
mov
insl
out
jne
aad
pop
cld
out
mov
pop
mov
xchg
pop
pop
je
shrl
and
inc
mov
mov
out
in
outsb
hlt
or
rorb
mov
add
sar
mov
mov
popa
mov
jb
icebp
mov
and
shlb
out
pushl
lock
push
jge
cli
mov
out
out
sarb
mov
sbb
dec
fisubrl
sub
movsl
xor
lods
push
push
in
pop
mov
cmp
jp
sarl
inc
scas
adc
lret
mov
mov
mov
add
sbb
jge
fiaddl
push
mov
and
jns
push
xchg
sbb
dec
aam
nop
aad
xchg
cs
in
xchg
jl
and
clc
test
push
inc
mov
mov
or
mov
or
lcall
mov
mov
enter
les
clc
mov
adc
mov
mov
adc
and
sbb
stc
cwtl
mov
hlt
jb
cmp
shrb
jg
cmp
cmp
call
xor
mov
xor
stos
arpl
aam
push
std
shl
test
mov
imul
mov
sub
repz
xchg
mov
sti
or
out
add
fisubrs
mov
imul
les
push
and
cmp
mov
xchg
adc
or
pop
in
lods
mov
or
push
lret
shlb
sbb
arpl
push
adc
cs
xchg
mov
cmp
je
xchg
lods
dec
jecxz
push
ljmp
dec
pop
ret
mov
push
sub
aas
add
std
sbb
add
pop
popf
shll
cmpsl
mov
out
jp
dec
push
dec
js
movsl
pop
and
js
outsb
push
fisubs
movsb
sub
mov
xchg
call
movsb
push
lods
outsl
push
push
mov
adc
dec
sbb
mov
sti
add
mov
jmp
dec
outsb
sbb
push
sarb
lds
lcall
or
ja
loopne
push
push
je
fstps
je
ret
lods
test
push
lea
ret
imul
fldenv
loope
jmp
in
push
test
mov
out
movsl
insl
ss
negl
xchg
lret
insb
push
scas
xor
jmp
and
sub
iret
in
push
xor
lds
mov
in
mov
enter
push
hlt
int3
pop
inc
call
or
lahf
xor
jp
cmp
mov
mov
inc
sub
ficoms
iret
clc
sub
add
jb
mov
cld
add
rol
mov
cmp
push
or
lcall
popa
rorl
ljmp
sti
or
insb
and
inc
jge
daa
xchg
mov
fists
sub
push
push
cmpl
cmp
cmp
push
ret
loopne
cmp
sbb
push
es
pop
test
xchg
stc
dec
in
inc
movq
cmp
jg
aam
xor
imul
leave
gs
into
inc
hlt
aaa
in
cmp
or
dec
or
fs
inc
inc
add
sbb
mov
cmpsl
xlat
push
adc
mov
sar
and
jno
fidivs
lahf
scas
inc
mov
sti
fsts
adc
cmpsb
lret
lcall
xlat
ja
pop
sbb
xlat
xchg
adcl
mov
aaa
lods
sbb
mov
sbb
test
mov
mov
xchg
int3
add
fdivs
pop
push
lods
dec
mov
cmp
pusha
jae
das
in
int3
test
loope
fsubl
lods
cs
scas
jle
mov
outsl
xchg
jg,pt
mov
add
jns
xchg
sarb
fdivr
jno
push
jl
cmpsb
mov
push
stos
inc
fwait
mov
xchg
lock
int
dec
xchg
cmp
xchg
cmp
dec
aam
cs
insl
je
test
lds
mov
imul
xor
nop
pusha
fsubs
add
mulb
test
jge
xor
popa
stos
push
mov
das
fildll
cs
xor
int
push
ds
aaa
mov
icebp
mov
aas
hlt
pop
rcrl
sarl
cmpb
adc
mov
mov
movsb
mov
movsb
xchg
repz
pop
notb
icebp
ja
dec
fidivrl
add
out
push
loope
adc
mov
sbb
das
cmpsl
lcall
jg
popf
push
pop
jp
mov
adc
cs
ss
sbb
int
jae
xor
mov
jnp
loopne
mov
mov
movsb
cmp
mov
out
test
repnz
outsl
mov
mov
ret
div
sub
and
inc
hlt
mov
negl
mov
dec
lock
sti
popa
adc
jbe
xchg
aam
mov
popf
jne
iret
push
xchg
das
pop
stc
add
and
sub
xor
dec
xor
fdivrl
mov
pusha
out
aad
push
loope
pop
push
mov
cmp
adc
rcl
xor
lea
jnp
xlat
or
imul
sub
stos
and
aaa
in
fisubl
push
iret
mov
cmpsb
adc
incl
pop
scas
sub
and
loope
push
add
shrb
adc
arpl
dec
mov
or
lods
bound
scas
stc
stos
cld
jae
adc
xchg
xchg
pop
pop
push
pfnacc
jnp
mov
or
aaa
xor
pop
pop
rcll
das
inc
pop
popf
std
dec
xor
push
ret
add
jae
mov
clc
mov
sbb
add
jns
push
jg
add
aas
cmpsl
aaa
sub
xchg
out
xchg
adc
lcall
imul
out
enter
rcl
and
fistpll
sbb
cld
es
gs
insb
push
test
inc
sub
sub
in
ss
xchg
inc
xor
incb
or
enter
in
cmpsl
mov
loope
outsl
stos
mov
shl
enter
push
mov
sub
mov
cmpsb
stc
ficomps
mov
dec
dec
js
jg
enter
call
add
lahf
enter
or
xchg
mov
fbld
jg
mov
sbb
scas
scas
lds
dec
stc
mov
rorb
inc
out
add
jbe
lock
xchg
xchg
adc
outsl
add
scas
dec
lods
and
pushw
scas
jg
pop
inc
adc
stc
mov
jno
je
push
or
jle
mov
cltd
jp
jp
iret
popf
sahf
dec
stos
jle
cltd
imul
dec
cmpsb
jg
ret
iret
out
dec
inc
subl
aad
mov
xorb
push
cmc
cmp
cmpsl
xorb
lods
sbb
filds
inc
popa
loop
test
aaa
lcall
mov
mov
fs
in
push
xchg
popa
mov
and
lods
sub
leave
fnstenv
mov
or
mov
movsb
das
add
xchg
hlt
mov
sub
ror
es
push
in
push
push
mov
dec
cmp
xor
out
enter
cmc
popf
xor
movsb
sub
xlat
leave
sub
push
jg
test
push
push
cltd
and
mov
push
test
mov
pushf
das
enter
mov
ficomps
andb
cmc
out
push
scas
hlt
jle
sub
xchg
add
mov
loopne
and
decb
cmp
sub
jne
leave
fidivrs
in
stos
xor
mov
pusha
sbb
out
rcll
pop
sub
negb
jle
push
icebp
ja
pop
add
or
adc
push
sbb
sub
jmp
xor
outsb
or
jo
fistps
lea
fwait
sub
pop
fistl
pop
xchg
cmp
mov
shl
mov
std
icebp
das
pop
das
clc
lcall
es
pop
ret
push
enter
and
xchg
push
add
adc
movsl
mov
mov
jg
cmp
movd
mov
push
or
lret
jb
cmc
clc
scas
sub
das
dec
dec
std
loopne
lret
and
cmp
jmp
mov
mov
pop
or
inc
xor
sub
sbb
inc
jle
js
adc
mov
and
dec
jecxz
mov
push
into
pop
pushf
cltd
pop
in
in
iret
les
pop
and
and
fidivrs
fildll
out
and
cmp
fadds
mov
dec
arpl
mov
insl
mov
jno
loope
mov
sub
lret
out
jo
bnd
mov
adc
push
std
lods
cli
ds
inc
sbb
xchg
mov
pop
or
insl
sub
push
add
je
dec
out
inc
jne
mov
adc
jo
repz
jecxz
adc
imul
in
test
or
lcall
dec
and
sahf
dec
ret
scas
movsl
cmp
rcll
cld
aas
in
pop
lret
or
imul
lret
or
add
fwait
imul
or
lods
pop
pop
adc
adc
pop
inc
push
sub
push
fistps
dec
sbb
adc
test
and
inc
mov
jno
mov
adc
jae
pop
inc
daa
jl
inc
nop
add
fnsave
mov
arpl
inc
jnp
push
jg
movsl
mov
in
and
pop
loopne
into
cmp
insl
arpl
pop
xor
jae
mov
out
sbb
mov
sbb
pop
cmp
jle
movsl
mov
add
mov
fcoms
inc
mov
or
sarb
dec
jle
fnstcw
fisttps
add
dec
sub
mov
jbe
inc
cmp
stc
cmp
pop
push
jb
mov
push
aam
sarb
or
push
mov
push
sbbb
pop
or
mov
in
mov
cmpsl
cmp
inc
dec
test
mov
sbb
iret
inc
cld
xchg
cmpsl
cmp
jmp
push
and
push
add
insl
fnsave
fwait
push
int3
popf
inc
xor
stos
fsub
cmp
cltd
shr
andl
lcall
mov
cs
mov
inc
ljmp
or
xor
loope
call
js
cmp
push
dec
mov
mov
scas
nop
mulb
add
loopne
adc
cmp
imulb
mov
and
cmp
add
popf
mov
ret
stos
lock
test
mov
pushf
rorb
mov
movb
mov
ret
inc
shll
stos
jae
push
xchg
fimuls
jbe
fsubrp
in
push
inc
fcmovne
or
orb
xchg
rclb
pusha
mov
lret
and
out
outsb
cmp
add
mov
dec
stc
jp
inc
sbb
pop
sub
sub
push
fistps
pop
dec
test
fscale
inc
xchg
repnz
add
scas
mov
push
jnp
mov
out
ret
js
adc
fisttpl
pop
push
into
jno
addr16
rcll
lahf
cld
fsts
sub
push
xor
mov
cmp
push
shrl
lret
test
adc
sahf
push
mov
inc
mov
mov
push
andl
jae
mov
adc
mov
dec
mov
dec
adc
out
push
sbbb
rol
cld
jae
mov
add
sub
leave
shlb
adcb
ja
es
das
cli
adc
dec
into
mov
push
sub
cwtl
popa
divb
pop
cs
out
push
push
pushl
and
enter
add
add
mov
nop
mov
push
add
sarb
and
out
mov
movsb
xor
push
pop
rcl
pop
mov
repz
dec
mov
mov
inc
dec
pop
les
insb
sbb
sbb
add
leave
cltd
dec
adc
adc
jp
loopne
leave
xchg
pop
pop
aas
and
stos
and
fldcw
das
imul
sbbb
add
xchg
in
inc
scas
sbb
hlt
gs
xlat
jbe
cmp
icebp
negb
push
jbe
mov
lcall
popa
out
push
mov
or
dec
cmp
outsb
sbb
xchg
popf
jno
rcll
cmpsl
daa
lea
orl
cmc
ftst
nop
hlt
inc
push
bnd
xchg
jmp
dec
ret
loop
std
mov
jl
add
mov
xchg
or
daa
and
adc
dec
roll
faddp
dec
aaa
adcl
icebp
in
sarl
xor
mov
ja
inc
cmc
les
mov
xchg
push
dec
aas
pop
orb
insl
add
mov
mov
cs
test
pusha
inc
sub
les
pop
jp
sub
xor
mov
enter
ss
mov
xor
push
loopne
into
sbb
mov
push
push
test
add
and
or
push
enter
lods
push
push
ljmp
adc
xchg
inc
fbstp
pop
mov
in
add
or
imul
int
jbe
repnz
pop
cmp
dec
dec
xor
pop
in
cmp
jb
mov
test
or
sub
mov
int3
lock
icebp
xor
mov
test
xchg
into
sub
imul
xor
je
pop
mov
cmpsb
xchg
pop
xor
push
sbb
sub
nop
in
cltd
jmp
movsb
pop
test
sahf
in
ret
data16
sbb
jb
fdivrs
sbb
dec
pop
mov
data16
adc
fisttpl
popa
xor
out
jb
cltd
jb
jge
inc
or
lret
xchg
push
mov
jnp
jg
cmp
fldcw
mov
mov
movsb
dec
fldcw
ficompl
jl
ds
pop
ret
pop
xchg
push
adc
dec
test
scas
ffreep
dec
xor
push
dec
sbb
ficoml
adc
push
ss
pop
enter
jp
into
ss
mov
cwtl
cmp
addl
cmp
sub
test
sbb
aam
jge
dec
fwait
add
or
cmp
daa
movsb
xchg
mov
cli
fst
add
inc
loope
xor
std
popa
adc
stc
cmc
pushw
ja
pop
sub
pop
inc
jg
inc
loope
mov
dec
adc
mov
ficomps
sub
and
ret
lock
aam
xchg
sahf
dec
mov
lret
cmp
mov
pushf
shll
dec
loop
aaa
pop
pusha
push
aaa
addr16
sarl
repz
cmp
mov
push
pop
rclb
cmp
lods
push
test
jecxz
movsl
lret
sti
test
fucomip
inc
push
push
call
add
or
stc
jg
into
lret
fldl2e
push
and
inc
lods
or
test
das
movsb
js
cmp
xchg
mov
and
rol
xor
loope
cltd
mov
mov
mov
arpl
aaa
and
push
ret
pop
shr
xchg
pop
lcall
mov
lahf
jb
dec
movsl
cmp
mov
xor
adc
test
ljmp
imul
inc
out
fisubrs
cmp
mov
pop
sub
mov
lods
test
loope
nop
dec
int
pop
inc
pop
jl
test
pop
cltd
arpl
dec
push
cmp
inc
rcll
pusha
cli
xor
es
js
loop
fs
push
xlat
in
lea
mov
xor
push
pusha
adc
fcompl
jle
sbb
add
rcll
push
ss
cwtl
sbb
xchg
dec
bound
hlt
xor
mulb
pop
xor
rclb
xchg
xor
and
std
or
xchg
fwait
push
mov
xchg
sbb
addb
ja
sub
icebp
inc
loop
into
test
or
add
in
aas
shl
xchg
shr
inc
adc
jge
xchg
enter
hlt
and
fisubrs
lret
enter
mov
or
in
push
inc
jb
dec
fisttpl
je
inc
cwtl
dec
mov
pop
xchg
xor
mov
test
mov
outsl
out
jae
jnp
xor
push
sbb
shl
dec
push
js
or
call
dec
add
in
adc
bound
imulb
push
aam
jmp
std
fcomp
nop
cmp
pushf
out
sub
sub
and
ss
cmp
aaa
fisubrs
add
bound
pop
and
sbbb
scas
cmp
and
call
leave
dec
push
stos
and
sbb
adcb
add
fdivrp
cwtl
cmp
sub
mov
outsl
nop
testb
sub
and
mov
cmpsl
mov
sbb
pop
sbb
stc
push
mov
jns
rorl
mov
mov
inc
xor
popf
and
into
xor
fwait
cmp
xchg
and
ficompl
loope
daa
xchg
sbb
push
sbb
xchg
xchg
or
mov
lret
mov
cwtl
out
cmc
push
cmp
fcompl
add
hlt
mov
add
mov
popa
or
out
cmpsb
data16
sub
xlat
cmp
pusha
imul
cli
jle
fbstp
dec
pop
rorl
shlb
lcall
cmp
call
or
bound
shlb
xorb
jns
outsb
in
repz
popa
jle
mov
sarb
mov
dec
loope
pop
adc
mov
loope
leave
push
loope
dec
int3
mov
shll
cmpsl
sbb
enter
mov
pop
mov
xchg
aam
push
xor
ror
shrb
xchg
loop
mov
cld
pop
sbb
and
fnstcw
enter
dec
imul
or
mov
xchg
dec
and
mov
insb
stos
out
mov
pop
sub
es
shl
push
es
repnz
or
hlt
loop
push
push
mov
mov
mov
sbb
sahf
loope
dec
repz
popa
pop
add
sbb
jge
mov
cltd
lods
popa
and
je
lret
push
fidivs
aam
out
push
push
leave
testb
mov
popa
pop
xchg
mov
xchg
shlb
sbb
imul
add
cwtl
dec
mov
jne
xchg
xchg
jno
jne
and
jp
sahf
pop
mov
jae
mov
dec
cmp
fcomps
jno
ja
into
mov
sbb
icebp
stos
mov
test
mov
add
sahf
xchg
push
and
push
push
addr16
cmpsb
pop
adc
das
test
popa
icebp
out
adc
adc
mov
fdivrs
popa
mov
popf
push
ss
lret
aad
je
cmp
jb
lret
mov
jns
jge
pop
adc
sub
mov
movl
dec
sbb
xlat
in
xchg
aad
sarb
in
test
adc
xor
add
push
lock
cmc
insl
push
lahf
cmpsl
fldcw
dec
repnz
add
icebp
lods
push
lods
repz
out
pushf
in
jg
lods
sub
xor
mov
jmp
fdivs
sbb
sub
ret
jne
inc
adc
fs
push
lods
idivb
out
mov
jge
jmp
cmp
rolb
out
dec
and
psubw
leave
fcoms
xor
add
mov
data16
pop
xchg
fistpl
imul
cmp
push
pop
out
or
test
mov
jbe
adc
push
iret
mov
mov
mov
jb
sti
pop
mov
cwtl
jae
sbb
leave
popf
jnp
mov
out
outsb
aam
shrb
std
xchg
fs
mov
aam
repz
test
out
and
testl
shlb
xchg
add
xchg
sbb
jbe
jno
push
jmp
jle
clc
lret
cmpsl
mov
dec
pop
dec
mulb
cli
mov
jecxz
enter
popa
sub
shl
mull
jbe
push
mov
push
mov
push
andb
insb
adc
cld
scas
int
sub
hlt
mov
cmp
jns
mov
xchg
mov
pop
push
aaa
push
lahf
outsl
jp
push
xor
das
cltd
cltd
out
xchg
in
jbe
mov
mov
and
in
mov
jg
dec
scas
pop
cmpsb
sbb
inc
test
rorb
xlat
mov
cmp
aad
mov
cmpsl
add
out
bound
bound
mov
lock
pop
nop
inc
repz
popf
jb
ljmp
es
fdivl
mov
aas
out
insl
add
rol
test
std
mov
mov
adcl
je
bound
test
jecxz
mov
push
mov
and
sbb
sub
and
mov
out
sbb
adc
popf
cmpsb
jno
cmpb
push
fisubs
or
arpl
dec
cltd
stos
ret
hlt
mov
cld
push
in
lock
cmp
out
movsb
lret
push
sub
jbe
mov
ret
ss
mov
shrb
mov
in
aaa
cmpb
jnp
mov
rolb
add
out
sbb
dec
xlat
jns
sub
push
mov
or
mov
mov
shl
cmp
aad
das
inc
outsb
sbb
add
ss
addl
mov
arpl
xchg
and
xor
cmp
ficompl
idiv
sbb
push
rorl
cmc
lret
fldcw
dec
in
xor
ss
mov
sub
mov
hlt
mov
pusha
xor
inc
push
and
inc
inc
pop
mov
cmp
mov
push
sbb
and
std
sbb
mov
psubusb
sub
adc
fcoml
cmpsl
dec
cmp
rorl
mov
add
jb
lret
pop
js
inc
xchg
adcb
cmp
lds
inc
insl
xlat
xorl
push
jb
stos
fs
mov
xor
cmp
loopne
jo
in
inc
daa
push
daa
xchg
data16
mov
or
cmp
out
sub
pop
pushf
xchg
hlt
sti
add
aad
cltd
daa
push
lds
pop
mov
fidivrs
push
add
add
adc
aad
addr16
and
mov
jae
jmp
jb
sahf
lea
shll
cmp
xchg
mov
out
and
inc
out
out
xchg
mov
mov
push
in
sahf
inc
mov
in
in
mov
dec
add
xchg
inc
cld
jns
push
inc
cmpsl
repz
dec
jp
and
mov
in
aas
inc
jne
inc
popa
xor
lods
addr16
lret
imul
rcrb
jo
and
sbb
jnp
repz
dec
lahf
cli
or
in
lock
inc
mov
test
xor
and
stos
jl
ja
pop
dec
aad
mov
pusha
and
add
cmpsl
stos
inc
std
cmp
pop
jl
xor
repz
push
push
or
pop
clc
sbb
ret
adc
ljmp
iret
inc
lahf
rorl
lock
sub
loope
adc
inc
clc
mov
push
mov
dec
xor
insb
insl
adc
mov
arpl
incb
nop
popa
mov
insb
jl
dec
test
and
and
xor
repz
xor
jmp
jl
iret
mov
adc
cs
jle
pop
ficomps
out
mov
aaa
fstpt
xor
dec
int
mov
dec
loope
jno
xchg
stos
xchg
kmovb
test
cmpsb
sti
adc
xor
cmpsl
mov
inc
test
mov
fildl
fsubl
das
aad
ret
add
mov
jae
add
mov
hlt
test
in
push
clc
jmp
enter
push
test
and
push
cmp
stos
cmpsl
mov
push
stos
icebp
ss
fdivrl
fwait
adc
pop
int3
test
js
dec
sbb
arpl
add
pop
cwtl
or
cmp
addr16
insl
or
adc
lods
ret
cmp
xchg
mov
sub
pop
mov
mov
hlt
jbe
fldt
mov
pop
sub
jle
pop
stos
fldenv
cmc
arpl
jge
pop
pop
jge
fmuls
mov
movsb
clc
push
cld
dec
popa
stc
mov
adc
sahf
pop
push
mov
int
andb
xchg
imul
mov
shlb
ljmp
in
pop
cmp
cmp
add
lods
sub
popf
mov
mov
mov
push
mov
xchg
dec
mov
pop
leave
insb
xchg
rolb
mov
fimuls
test
mov
jge
in
icebp
dec
push
pop
and
stos
jae
mov
je
dec
rcrl
nop
pop
mov
popa
mov
cmpsb
popa
cmp
mov
sbb
xchg
mov
cld
lods
in
jge
add
idivl
insb
push
sub
mov
xchg
imul
lret
push
dec
bound
mov
sub
or
xchg
jne
mov
mov
or
fisubrs
nop
mov
inc
sbb
jp
push
out
jb
inc
mov
add
push
aam
mov
mov
iret
sbb
xor
mov
sub
pop
test
sbb
push
push
add
aad
xchg
imulb
mov
mov
popa
into
jle
lock
lods
enter
add
sub
add
popf
mov
push
or
pushf
pop
jae
inc
pusha
fsubrl
mov
add
pop
andb
or
fsubr
imul
mov
pop
or
shll
xor
lock
pop
loope
push
adc
jno
repz
mov
xlat
inc
push
adc
mov
fildl
mov
std
cld
std
mov
lret
ja
es
jbe
xorb
loop
imulb
push
sub
lcall
data16
sub
lock
and
add
xlat
aad
stos
pop
or
out
jecxz
adc
add
test
mov
fidivs
dec
push
jno
repz
sbb
adc
andl
js
push
movsl
fs
cmpsl
mov
jg
sbb
push
jg
sbb
sahf
jecxz
test
xor
cmpsb
out
inc
dec
in
in
add
ret
mov
add
cwtl
or
cmp
arpl
jno
aas
or
mov
push
pop
ret
lea
sub
xor
es
xchg
cmpsl
sbb
jnp
adc
push
lahf
and
shr
rol
sbb
add
rcll
sub
sti
in
lods
or
lods
mov
jge
push
ss
in
pop
push
jge
mov
add
insl
mov
in
movsb
mov
cmpsb
pusha
stc
mov
pop
aad
stos
clc
jge
mov
popa
jg
pop
gs
mov
add
unpcklps
jmp
repnz
out
mov
or
loope
ret
xor
mov
mov
lock
fadds
outsb
inc
fistl
push
mov
sti
inc
mov
in
daa
mov
in
xchg
in
shlb
inc
cs
cwtl
fildl
push
inc
mov
or
push
mov
push
enter
sub
pop
imul
sti
and
sub
cmp
mov
mov
mov
test
xlat
push
and
stc
cmp
push
fstps
xorb
incb
je
movsl
mov
jmp
xor
mov
sahf
inc
mov
fisubs
fcmove
ja
pop
shrl
rcrl
mov
jne
adc
jbe
or
ds
jno
inc
xor
xor
add
jmp
insb
test
push
ds
cmp
popa
add
inc
push
jmp
test
pop
orl
cmc
jmp
popf
scas
dec
cs
inc
sahf
pushl
ret
push
sti
sub
bound
mov
int3
mov
enter
and
sub
clc
jo
xchg
jecxz
or
lea
rolb
mov
loope
les
pop
and
aas
cmp
xchg
push
pop
hlt
adc
add
insb
mov
test
xor
ds
in
pop
mov
arpl
and
add
dec
mov
les
add
xorb
sub
scas
or
imul
inc
loopne
out
dec
inc
outsb
jmp
pop
daa
lret
rcl
jecxz
int
mov
shlb
addr16
bnd
sub
dec
loop
ret
aaa
aas
cmp
jmp
push
nop
rcrb
cmp
aad
mov
jmp
lret
subl
in
sub
fists
sbb
pop
hlt
fcmovnu
int3
in
ss
mov
mov
dec
int
sub
jle
lea
hlt
or
cmpsl
sbb
lahf
in
daa
ds
jg
cwtl
jle
popa
cmp
jl
inc
shl
mov
pop
imul
pop
sti
fmuls
mov
rclb
sub
outsl
xchg
pop
and
push
test
add
mov
dec
icebp
pop
popa
and
push
or
add
add
ljmp
fs
pusha
jns
xor
xor
fcompl
jno
cmpsb
and
cmp
xor
adc
dec
cmp
push
push
test
fidivrl
push
add
shlb
mov
sbbb
mov
mov
scas
jg
cmpsl
push
inc
shll
fiadds
mov
jbe
jno
sbb
add
pop
ja
fmuls
push
ja
mov
or
push
jmp
or
cs
ret
xor
xlat
add
fcomip
nop
add
push
call
xchg
fwait
lods
pop
xlat
push
clc
aad
scas
and
clc
push
pop
mov
lods
js
jnp
xor
popa
enter
in
sarl
jns
mov
jmp
fmuls
add
repnz
in
lods
test
push
cmp
sbb
shl
or
xor
test
lods
lds
add
push
xchg
stos
loopne
and
push
ret
mov
xchg
push
jl
or
enter
push
adc
or
mov
push
push
sub
inc
ret
cmp
fwait
xchg
jl
sub
xchg
pop
push
je
aam
int
and
and
xor
out
stc
test
out
cwtl
stos
out
mov
loop
mov
and
in
popf
loopne
stc
mov
fistpl
movsb
dec
mov
dec
loopne
sar
and
bound
mov
lds
mov
test
dec
push
cmpsb
pop
out
leave
push
push
mov
jbe
cmp
sbb
outsb
adc
loope
cmp
bnd
adc
test
mov
cmpl
mov
stos
xchg
mov
mov
add
push
mov
cltd
enter
gs
cmp
and
mov
mov
and
sub
test
push
mov
lock
in
push
xorl
rcr
loop
mov
or
pop
jnp
sbb
cmc
add
mov
call
mov
test
xorl
daa
pusha
lcall
and
imul
adc
mov
aas
mov
aas
mov
int
mov
and
cwtl
arpl
sti
jnp
mov
push
scas
ret
dec
sub
outsb
sub
sub
enter
jge
pop
cmp
popf
ret
int
add
inc
dec
icebp
out
mov
jle
mov
movsb
addr16
mov
mov
rorl
hlt
cmc
push
inc
lods
ds
cmp
and
sub
icebp
rorb
imul
add
inc
ds
cmp
sti
dec
out
push
sbb
mov
xlat
mov
xchg
scas
cmp
cmp
icebp
pop
jae
sbb
xor
xor
xor
dec
jg
ja
mov
sub
push
cmp
push
jne
mov
pop
repz
aam
cmc
outsl
jp
imul
jne
mov
negl
mov
sbb
setae
leave
push
or
inc
sbb
cmp
mov
out
pop
xchg
daa
in
call
aas
or
out
outsb
ja
sbb
fsub
mov
pop
shr
xor
mov
adc
push
addb
mov
in
adc
loope
dec
jnp
mov
mov
popa
mov
and
jecxz
jne
ja
push
xchg
decb
outsb
aam
js
sub
aam
sub
pop
and
rorl
fcmovu
cmp
mov
imul
stos
ljmp
cld
adc
lods
shrl
scas
shrb
push
repnz
dec
pop
pushw
stos
lock
mov
arpl
push
mov
daa
outsb
add
cmp
xchg
mov
mov
pop
dec
pop
je
das
out
cmp
out
cmp
out
aad
push
in
mov
test
pop
popa
sub
jbe
imul
bound
jnp
and
fisubs
push
fisttpl
lock
sbb
or
pop
jno
cmp
imul
ds
pushf
pop
das
push
mov
imul
add
lret
pop
add
sti
sbb
hlt
push
push
and
push
cwtl
adc
mov
pop
lds
dec
dec
cmp
addr16
dec
push
push
jmp
pop
xchg
jo
aam
sub
and
mov
iret
push
mulb
and
scas
arpl
notb
fstpt
mov
push
je
jns
cmpsl
push
in
dec
mov
jp
jns
insb
lods
and
xor
jmp
stos
pop
xchg
out
mov
jle
data16
xlat
jle
das
cwtl
pop
mov
repnz
in
lock
out
jbe
ds
popa
dec
rclb
sbb
scas
jge
or
xchg
aas
mov
adc
push
dec
lods
mov
shrl
movsl
imul
jns
imul
xchg
fbstp
mov
mov
pop
test
test
repnz
cmp
jp
xchg
xchg
inc
pop
push
shlb
sub
daa
cwtl
fldl
xchg
xor
mov
hlt
std
mov
jl
cmpsl
insb
add
jle
shl
enter
adc
inc
mov
cmpb
push
ds
xor
jnp
scas
sub
aaa
mov
mov
cmp
mov
jle
inc
ret
stos
mov
mov
mov
js
call
xor
mov
les
or
push
mov
xor
push
ss
stos
ret
push
imul
or
xor
mov
push
jmp
and
cmp
repz
inc
dec
imul
push
xor
sub
call
inc
pusha
dec
xor
subl
xlat
aad
gs
loope
pop
mov
and
inc
pop
jne
adc
pushf
inc
xor
aas
enter
test
jno
mov
add
adc
mov
into
rolb
cmpsl
rorb
les
out
lods
sub
pop
pop
cltd
sbb
ret
pushf
mov
cmp
mov
mov
jo
rorl
icebp
lahf
aad
daa
pop
es
in
nop
imul
repz
mov
js
xchg
mov
jae
fstl
sub
pop
sub
in
std
aas
popa
lock
mov
ret
pop
icebp
je
sbb
out
rolb
cmp
push
pop
mov
test
push
adc
jmp
xor
or
out
pop
orl
clc
bound
fwait
movsl
jecxz
repz
aaa
xchg
dec
xorb
imul
enter
dec
out
pop
jno
std
mov
sbb
call
lods
sbb
pop
jns
pushf
rcrb
insl
fwait
dec
negb
stos
cmp
push
outsb
mov
mov
andl
push
jns
ret
mov
clc
jg
push
mov
mov
jmp
or
jle
ss
sbb
hlt
movsb
inc
stos
sbb
in
das
loop
inc
divl
jecxz
mov
daa
test
cmpl
sahf
leave
ret
clc
jp
mov
xor
aas
pop
push
cmp
add
and
ja
cmpsb
push
add
lds
pushf
les
shll
mov
add
adc
xor
adc
fstl
and
xchg
and
mov
int3
mov
std
adc
xor
in
addr16
ja
mov
gs
xchg
jae
inc
cmp
push
stc
cmp
in
adc
fnstenv
mov
fistpl
cld
outsb
and
xor
lock
aas
mov
lods
les
fcom
dec
pop
aad
ljmp
hlt
pop
dec
jns
data16
cs
sub
adc
fisttpl
push
rcl
xchg
inc
test
data16
add
repnz
xor
jno
pop
gs
or
out
daa
dec
ret
push
jne,pt
inc
mov
push
push
bound
dec
in
std
and
bound
push
aas
add
jno
mov
xchg
fisttps
mov
popf
div
in
push
stos
pop
insl
mov
fwait
add
dec
ljmp
add
push
subl
cs
and
stc
mov
sahf
lcall
cmpl
pop
dec
jecxz
cmp
add
out
int3
leave
lea
xorb
je
in
data16
sub
les
pop
xor
icebp
cmp
sar
lds
xchg
cmp
sbb
adc
inc
outsl
push
cmc
mov
cs
mov
pop
xchg
lea
popa
je
test
push
push
in
gs
call
roll
aad
or
cmp
pop
daa
cmpb
js
xchg
dec
or
fstpt
pop
sub
movsl
mov
sarl
lods
es
sbb
xor
jo
push
add
decl
mov
test
sahf
xor
or
test
scas
and
and
loopne
imul
adc
jns
sahf
daa
adcb
repz
mov
mov
adc
loope
xchg
in
stos
rcrb
sub
and
das
out
mov
and
repnz
sub
push
add
ret
movsb
push
jns
insl
add
mov
sub
shll
inc
movsb
or
xchg
pop
sub
sbbl
fcom
hlt
ret
and
mov
push
cmpsb
sti
adc
add
or
mov
and
fstpl
or
pop
sbb
adcb
and
cmpsl
je
xchg
jo
lret
scas
dec
mov
xchg
mov
xchg
mov
lock
and
std
stc
int
mov
addr16
mov
and
fs
out
add
loope
cld
subl
mov
add
clc
fwait
addb
dec
mov
nop
mov
lds
push
aam
rorb
add
std
imul
and
and
push
ss
add
repz
xchg
or
ljmp
movsb
fldt
sub
stos
sti
movsb
out
cmp
jmp
mov
push
xchg
push
cmp
retw
std
mov
jno
mov
outsl
je
test
add
decl
push
sub
sub
mov
hlt
ja
cmp
mov
in
and
lahf
mov
add
mov
pop
sub
scas
lret
adc
inc
push
push
jecxz
fcmovnbe
les
fsts
in
enter
scas
cmp
or
shrl
jo
data16
nop
jl
lods
ljmp
jae
adc
sbb
aam
out
jae
sahf
or
call
push
add
sub
pushf
icebp
out
call
fcmovb
xchg
orb
or
daa
std
jle
movsl
out
xchg
dec
movsl
out
cmp
fidivrl
adc
push
inc
push
mov
and
sub
nop
sub
adc
jle
pop
fwait
push
inc
out
add
cmp
pop
mov
arpl
xlat
jo
lea
scas
cmp
out
lret
cmp
loopne
sbb
xchg
pop
sbb
mov
xor
or
add
push
xor
popa
dec
sub
shl
ja
mov
jbe
xor
scas
pop
addr16
das
fldenv
pop
out
pop
or
push
mov
cmc
outsl
mov
or
adc
in
jl
xor
into
pop
daa
sbb
mov
lret
sbbb
mov
push
lods
mov
xchg
jne
mov
roll
lock
out
xchg
lret
cmp
cmpsb
sub
dec
push
pushf
or
icebp
ss
mov
fistps
mov
push
cmpsb
and
je
aaa
aas
cmpl
fisttpl
push
pop
mov
sbb
mov
sbb
in
adc
das
fisubrl
mov
adc
jns
aam
pop
cmpl
jae
pop
data16
out
or
pusha
arpl
cmpl
js
insb
xor
push
push
pop
in
outsl
stos
sbb
imul
data16
mov
fdivrs
hlt
adc
mov
addb
flds
cs
pop
xor
pop
and
xor
into
test
outsl
mov
xchg
jns
mov
aaa
pop
cmp
xor
jecxz
pop
xchg
and
leave
mov
into
cli
daa
mov
lods
std
cli
jle
sbb
add
sbb
dec
xor
mov
mov
sbb
mov
mov
push
lret
imul
outsl
pop
rclb
push
xchg
imul
pop
jl
dec
mov
sbb
mov
imul
xchg
push
push
cmp
adc
pop
mov
fucomp
xor
fadds
or
test
mov
xor
sbb
add
call
lock
pop
dec
push
adc
and
xor
xor
out
fdivrp
scas
push
push
adc
scas
out
mov
sub
orb
add
shr
loope
mov
add
js
adc
cld
xchg
add
insl
sub
popf
loopne
sahf
test
mov
movsl
clc
in
pop
out
clc
or
lock
mov
sarb
mov
aam
pop
int
xor
movsb
push
xchg
inc
adc
call
test
aad
push
push
in
dec
sbb
push
xchg
out
dec
lahf
and
xchg
mov
orl
cmpsb
xchg
or
call
jmp
insl
xchg
daa
scas
pusha
xchg
ds
push
outsl
into
jnp
pop
add
daa
loope
push
cmpsb
call
and
xchg
repz
push
test
cli
or
cld
fdivrl
mov
inc
xchg
push
ret
dec
lcall
insl
outsb
shlb
pop
mov
xchg
pop
dec
leave
inc
js
bswap
ss
xlat
xchg
pusha
dec
in
adc
pop
and
lods
add
out
dec
push
sub
xchg
xor
fidivs
mov
and
xchg
pop
sbb
sbb
fstpt
push
ljmp
inc
mov
push
xchg
arpl
pop
cmpsl
mov
pop
lods
loopne
cwtl
cmp
stos
and
xchg
frstor
jb
jge
or
aas
push
outsb
aaa
ret
xor
test
aaa
xor
das
popa
addb
jnp
cli
mov
outsl
movsb
mov
bound
fwait
jnp,pn
adcb
sar
stc
lahf
pop
lcall
mov
in
in
sub
int3
inc
repnz
mov
mov
out
xchg
cmp
int3
jmp
sbb
sub
rorb
xchg
inc
add
fs
loopne
xor
mov
sti
xchg
sbb
pusha
mov
cmc
imul
cmpsb
push
out
xlat
jbe
js
inc
mov
sub
jmp
mov
mov
lods
sbb
sarb
cmc
push
mov
enter
pop
mov
das
push
sbbl
push
aas
dec
jb
fwait
inc
das
out
xchg
shlb
in
in
je
mov
sbb
stos
bound
pop
rolb
mov
push
adc
into
mov
sub
or
leave
adc
sbb
push
cmp
jns
ds
lret
stos
mov
test
push
jae
adc
cwtl
bnd
jmp
sbbb
or
movsb
sbb
sbb
lods
xor
mov
mov
sbb
popf
insb
lahf
adcb
jmp
mov
aaa
jns
cmp
cmc
pop
or
fldcw
orb
mov
fdivrl
push
jle
dec
ss
inc
pop
outsb
cmp
dec
mov
mov
mov
jl
ljmp
push
jo
jmp
shrb
pop
add
jne
mov
push
jne
cld
mov
insb
gs
pop
push
push
fsts
scas
and
sbb
add
xchg
add
xchg
cld
pextrw
mov
add
mov
jb
loope
cmp
or
movsl
shrl
cld
enter
push
mov
mov
pusha
jne
xchg
lea
fstps
testb
out
lock
cmp
mov
add
and
sub
jno
xor
xor
cli
push
dec
jo
inc
pushf
dec
jle
pop
or
add
mov
adc
add
idivl
inc
mov
mov
lret
outsl
out
sub
or
aad
shl
shll
cmc
fildll
and
dec
les
xorl
pop
mov
repnz
sbb
mov
cwtl
js
pop
js
insl
and
xchg
push
in
push
cmp
gs
jnp
movsb
rcrl
aad
cmp
hlt
push
mov
add
shl
sbb
insl
ja
cmpsl
das
lea
in
inc
fs
js
enter
out
mov
imul
in
in
inc
adc
mov
inc
lret
pop
inc
pushf
mov
xor
push
inc
loopne
push
push
nop
test
in
and
andl
icebp
lock
mov
aaa
pop
andl
stos
std
shll
in
inc
mov
hlt
popf
dec
in
jae
xchg
mov
adc
inc
loop
pusha
fisttpll
pop
push
sahf
in
orb
daa
xorl
dec
jne
add
pop
pop
sti
das
pop
fildll
jl
in
mov
push
lcall
sbb
imul
out
call
mov
xchg
and
inc
jp
test
xchg
mov
push
test
push
cltd
fwait
adc
inc
add
lock
dec
xchg
jle
xlat
scas
sbb
lds
not
dec
cltd
push
sahf
fwait
jl
jecxz
in
pushf
cld
xlat
hlt
in
inc
movsl
and
cmc
movsb
pop
lock
stos
out
hlt
fistpll
adc
in
inc
mov
adc
mov
inc
scas
xchg
pop
ja
fisubl
adc
cmp
add
sub
push
mov
mov
mov
call
shlb
dec
addr16
push
jg
jo
xor
leave
rolb
xor
fimull
pop
loop
sti
ja
dec
add
jecxz
cmp
mov
xor
mov
mov
sti
lds
fidivrs
push
sbb
add
add
stc
mov
loopne
sti
xor
pop
sbb
scas
insl
dec
and
lods
lahf
jle
push
pop
mov
pop
adc
sbbl
cmpsb
xchg
cwtl
inc
cmpsl
jbe
and
rorb
jmp
inc
mov
or
add
pop
and
daa
jg
cmp
add
sbb
es
in
sbb
int
sub
std
das
push
add
mov
pop
ror
xorl
push
daa
ss
aam
aad
sbb
popa
pop
ja
icebp
lret
mov
lock
mov
cwtl
outsl
xor
popf
inc
cmpsb
inc
dec
or
inc
mov
or
rorl
dec
ja
jnp
out
fdivr
shl
jno
ljmp
or
out
mov
sbb
andl
xchg
inc
mov
mov
dec
jb
dec
dec
sub
pop
xchg
rorl
fisubl
cmp
shrb
rol
cwtl
jecxz
add
mov
and
lock
ljmp
xchg
sub
mov
or
pop
add
mov
rol
mov
adc
xor
iret
out
xchg
fidivrl
repz
push
fwait
jne
out
push
push
mov
mov
cld
mov
dec
scas
shlb
jp
rolb
ror
aaa
adc
call
xor
leave
xor
mov
pop
and
cmpsb
pop
push
test
jl
fiaddl
xlat
rep
inc
sbb
or
ss
loope
sbb
pop
scas
pop
sub
mov
iret
imul
popa
lret
jnp
test
les
das
popf
out
loope
sub
push
test
out
fists
jp
int3
add
nop
add
mov
jae
fsubp
loope
repz
ret
fwait
and
lret
out
and
xor
jmp
mov
addr16
sub
push
fnstenv
repz
mov
cmp
and
ja
movsb
adc
dec
fistpl
add
or
dec
push
push
in
aad
sbb
sub
int
cmp
inc
nop
ss
jl
pop
xchg
jp
imul
add
jnp
lcall
dec
push
push
mov
outsb
pop
mov
push
clc
fstp
movsl
push
arpl
jmp
sub
in
jnp
sbb
cltd
push
mov
loop
sub
and
xor
cmp
popa
jmp
mov
popf
aaa
scas
pop
jmp
inc
jnp
push
sbb
cmp
stc
inc
add
rcll
inc
mov
cs
clc
idivb
lret
xor
ds
xchg
ja
mov
sbb
cli
jecxz
cmpsb
cwtl
inc
les
xchg
push
xchg
mov
cli
push
push
out
adc
cmp
shr
or
sbb
and
lods
or
mov
push
test
sarl
lods
orb
cli
jg
mov
mov
mov
dec
and
jecxz
mov
pop
mov
lcall
loope
adc
decb
push
jbe
mov
lret
jge
loopne
mov
popa
imul
out
dec
jl
adc
sub
loopne
loopne
pop
les
cli
or
sub
sub
addr16
mov
fisttpll
mov
in
push
add
out
push
out
cwtl
out
dec
rolb
sbb
lea
stc
xchg
es
mov
mov
stos
sub
sub
movsb
pop
dec
shrl
sbb
sbb
rorb
cmpsl
outsb
pop
mov
push
outsl
lea
xchg
sub
arpl
loope
pop
stos
or
stos
jge,pt
mov
push
lret
shll
stos
jle
decb
outsl
mov
push
or
lods
in
push
stc
test
xchg
ljmp
push
out
ficomps
pop
dec
adc
xor
adc
push
fidivrs
jecxz
jnp
xchg
addr16
in
mov
std
cmp
outsl
xchg
movsb
iret
roll
sahf
cmp
scas
movsb
xor
sub
pushf
adcb
lret
and
or
mov
xchg
push
fstp
push
push
inc
and
iret
add
mov
mov
jp
push
mov
and
cmp
jl
pop
out
xchg
cli
ret
stc
inc
dec
out
repz
pusha
out
ficoml
mov
inc
pusha
popf
sbb
xor
dec
push
lahf
stc
gs
mov
jle
pop
scas
cmp
jo
mov
movsb
mov
hlt
push
mov
repz
xchg
pop
dec
lahf
in
daa
adc
inc
inc
loop
and
sbb
test
push
sbbb
cmpsl
cld
lcall
push
int3
mov
cmpb
sub
ret
push
sbb
mov
leave
push
pop
add
mov
jl
je
dec
scas
xor
mov
xchg
mov
pop
push
or
scas
imul
lea
pop
pushf
lea
pop
ja
outsl
movq
mov
lods
scas
or
mov
test
cmp
pop
arpl
cmp
in
cmc
mov
push
inc
or
mov
stc
ffree
pop
mov
and
inc
push
pop
sbb
mov
fwait
clc
inc
or
jge
cmp
cmp
fadd
lea
dec
cltd
out
dec
out
xlat
xor
or
aad
xor
jle
mov
out
adc
cli
sub
add
lea
loope
sbb
push
test
shll
shr
daa
cmpsl
fcmovne
in
iret
ret
xorb
int
ljmp
int
jns
sbb
sbb
stc
push
fdivs
cwtl
daa
aad
loop
xchg
xchg
faddl
xor
aas
xor
sub
and
mov
lock
mov
test
push
xchg
into
fwait
xor
sbb
js
icebp
or
outsl
xor
dec
adc
out
xchg
inc
insb
pop
mov
dec
sbb
lret
leave
repz
adc
pop
cmp
sti
ja
lea
dec
fistl
pop
pop
jns
mov
push
pop
sbb
sbb
and
pusha
sbb
jp
and
daa
push
aaa
test
imul
lds
push
cmpsl
mov
fldt
movsb
scas
call
dec
mov
jae
or
mov
aas
dec
sub
rol
mov
sub
movsb
cmp
inc
int3
adc
ffreep
sbb
repnz
fistpll
lcall
pop
add
mov
fsubrs
add
inc
push
and
testl
mov
cmc
mov
pop
mov
lret
sahf
push
mov
lds
icebp
xor
popa
xor
ja
push
fildl
inc
mov
je
fisubrl
cmp
or
xor
add
jne
in
icebp
ret
stc
mov
scas
mov
cmp
rol
adc
xchg
iret
in
mov
jp
data16
inc
adc
movsb
ljmp
cmpsb
das
xor
xor
fmuls
inc
push
lea
imul
mov
adc
mov
loope
pop
add
sbb
mov
bound
pop
repz
in
sub
adc
repz
sahf
xor
int
fcompl
inc
mov
es
enter
xor
pop
rcl
nop
mov
divb
xchg
jns
repz
mov
dec
ljmp
sbb
jno
xor
test
lcall
adc
ljmp
dec
cmp
inc
push
dec
pop
xchg
icebp
das
mov
lahf
leave
insb
aam
cmp
push
out
pop
nop
cmp
into
mov
daa
mov
aas
orl
mov
sbb
mov
jl
fs
xchg
sbb
adc
mov
or
and
pop
jge
xor
ja
enter
data16
call
idivl
leave
jge
push
xor
mov
adc
incl
int3
aad
fldcw
pop
push
jp
xchg
out
mov
push
xchg
std
xor
xor
and
enter
bound
dec
cli
daa
fwait
loope
dec
imul
mov
or
clc
push
lods
flds
and
pop
ds
jbe
mov
pop
orb
adc
ret
sub
int3
movsl
pop
push
repz
sbb
in
dec
mulb
xchg
cs
loopne
frstor
test
je
in
push
inc
int
lea
cmc
je
int3
adc
sub
or
arpl
iret
mov
test
mov
inc
jecxz
je
pushf
xchg
jge
mov
test
mov
loopne
mov
aas
mov
jbe
mov
mov
or
imul
int
movsb
cmp
add
pusha
cltd
aas
lret
mov
mov
add
sbb
mov
std
mov
subb
cwtl
cltd
and
inc
jae
popa
jns
sub
sbb
pop
sti
push
loope
inc
push
outsl
and
imulb
arpl
mov
xor
jp
fucom
lcall
sbb
xchg
arpl
mov
jle
sbb
push
lea
call
lret
in
dec
ss
mov
scas
popf
rclb
pop
mov
mov
cmpl
stc
dec
dec
adc
fs
add
lret
loop
ljmp
orb
cmc
pop
sub
xchg
add
xchg
sbb
rolb
sub
jmp
mov
outsl
fisttpll
sub
sbb
adc
shl
es
or
and
inc
gs
dec
mov
aas
sar
std
mov
sbb
cmp
dec
sub
add
int3
dec
ret
xor
dec
mov
xchg
add
cmp
pop
or
pop
mov
rolb
adcb
mov
mov
push
inc
xor
outsb
sub
mov
sub
mov
vsubpd
adc
adc
in
cld
cmpsl
and
sbb
orl
cli
lea
add
xor
bound
xchg
scas
mov
push
mov
les
fidivrl
and
hlt
shr
push
xchg
lahf
test
xchg
pop
dec
sub
cld
xor
pop
js
dec
cwtl
jge
sub
mov
lds
outsb
loope
mov
xchg
pop
insb
jp
lret
cs
scas
cmpsl
inc
sub
lahf
mov
mov
jmp
push
sub
gs
push
bound
movsb
sbb
mov
call
outsb
cld
push
cmc
push
jg
dec
add
sbb
mov
cli
fsubrs
dec
add
jge
cmp
shrb
popf
lahf
jbe
push
lea
ds
xor
es
in
jb
jmp
and
cmp
mov
mov
and
sub
push
movaps
mov
pusha
test
cli
imul
icebp
ss
bound
jne
sbb
push
add
mov
pop
aam
cmc
dec
hlt
sahf
and
xchg
loop
std
sub
fildl
shlb
aam
push
add
and
shrl
data16
mov
ljmp
mov
pop
mov
dec
xor
popf
jo
outsl
fisttpll
repz
out
daa
mov
lret
xlat
push
outsb
inc
adc
repnz
call
aad
xchg
insb
sbbl
sbb
std
push
out
sti
mov
in
popa
jne
push
icebp
cmp
pushf
fs
mov
fcompl
xor
imul
bound
sahf
dec
and
jle
push
fmull
cwtl
add
insb
mov
jno
arpl
xor
sub
jle
sub
cmp
mov
imul
cmc
xchg
enter
jns
push
test
outsl
mov
nop
enter
mov
movsb
movsb
movsb
dec
fs
adc
and
fs
pop
pop
fs
mov
mov
pop
mov
arpl
lahf
dec
and
xor
pop
sub
pop
inc
jge
rorl
dec
sub
mov
fimull
mov
in
xchg
mov
jb
add
mov
xor
sub
data16
vmwrite
imul
pusha
out
push
dec
mov
loopne
jmp
js
add
mov
pop
cld
repnz
in
pop
cmp
cmp
dec
or
pop
pushl
mov
push
insb
cmc
jno
fdivs
in
in
adc
pop
inc
sub
push
jne
rcrb
xchg
popf
jns
ja
lret
push
add
mov
mov
pop
add
jbe
cmp
jbe
dec
xor
adc
nop
xchg
jp
cmp
popf
sub
push
jl
cld
dec
aam
dec
jbe
int3
and
dec
rol
xchg
xchg
pop
mov
or
bound
fsubr
sbb
fcmovu
mov
sahf
out
xchg
jle
jne
dec
mov
mov
dec
aad
stc
dec
pop
jne
or
add
dec
stos
push
or
jmp
lock
cltd
xor
loop
mov
sub
push
or
xchg
sub
scas
sarl
pop
xor
mov
das
inc
subb
das
and
push
data16
jecxz
add
mov
in
pop
push
mov
daa
lret
sub
adc
xchg
sahf
repnz
jbe
cmp
mov
jno
out
pop
and
shll
jne
or
push
int
addl
stos
xchg
sbb
imul
sbb
mov
xor
call
push
xchg
sbb
sub
pushf
push
stos
into
test
inc
dec
cmp
mov
mov
pop
rdpmc
sti
push
movb
jecxz
mov
sub
repz
fidivs
mov
pop
addr16
xchg
xor
and
and
lods
lea
test
jno
inc
imul
aaa
pmovmskb
ja
mov
cmp
and
orb
negb
add
add
out
hlt
imul
cld
stos
imul
loope
dec
and
adc
test
adc
inc
jne,pt
out
pop
out
jae
and
dec
inc
jne
or
in
mov
test
or
aaa
aad
lret
rol
xchg
add
in
push
out
insl
sbb
add
test
test
pop
xchg
cwtl
cmp
pop
nop
mov
std
nop
shll
subb
test
push
mov
lcall
push
cmp
or
xchg
xchg
xchg
adc
pop
xchg
data16
aaa
mov
mov
test
insb
inc
rclb
aaa
jle
pop
or
call
adc
pop
ljmp
jnp
pushl
mov
ljmp
bound
push
popf
cmp
xchg
popa
cmp
jle
add
sbb
mov
fs
sub
add
fwait
data16
shr
mov
in
mov
scas
test
pop
sbb
mov
sub
rol
lea
push
iret
divl
jne
sti
shll
ds
mov
push
lret
aad
addr16
cmp
jge
repz
mov
push
dec
jmp
in
clc
xor
ret
aad
jno
xlat
pop
sbb
in
push
xchg
and
jle
aas
cmpsb
call
dec
enter
stos
in
pop
loopne
shlb
inc
movsl
or
and
andl
addr16
aas
dec
xchg
cmp
ds
push
cmp
xchg
lret
stos
sub
jecxz
sahf
loop
xchg
sub
out
movsb
sbb
adc
inc
xchg
out
nop
stos
aam
jo
cmpsb
inc
mov
lret
push
stos
lea
mov
cwtl
stos
xor
dec
scas
sbb
popa
leave
cmp
loopne
xchg
push
pop
mov
sub
xor
xlat
adcl
inc
jae
xchg
dec
sbb
pushf
leave
mov
jns
pextrw
adc
add
mov
bound
mov
sub
cmc
dec
cmc
pushf
mov
adc
add
imul
jbe
sbb
cmpsb
dec
adc
incl
inc
out
cld
out
loopne
sbb
inc
mov
div
push
pop
pop
inc
mov
out
lods
pop
leave
sub
mov
jb
add
loop
sbb
mov
call
mov
stos
insl
mov
sar
lds
jbe
nop
jae
loopne
adc
and
inc
inc
fsubrl
jecxz
mov
data16
mov
aas
inc
sbb
std
cmp
push
loopne
or
outsl
mov
ss
dec
xchg
and
lcall
jo
push
pop
inc
arpl
enter
std
gs
xor
jecxz
data16
inc
lea
rcrl
pop
xchg
lahf
and
cwtl
enter
shrb
dec
lods
fidivrl
inc
cld
arpl
lret
jo
fidivl
adc
jo
loopne
pushf
add
push
and
sbb
or
pop
sahf
add
push
sub
jnp
and
xchg
jnp
xchg
cmp
dec
xchg
jae
pop
ret
jecxz
jne
jp
divb
jle
mov
push
aaa
ret
push
insl
mov
jl
mov
push
fnstenv
sbb
xchg
mov
mov
cld
leave
mov
dec
adc
clc
inc
push
inc
xor
lret
pop
out
sub
aas
xor
das
je
fs
pop
fst
xchg
movsl
adc
sbb
lock
fcoml
sbb
test
dec
data16
fistl
xor
lahf
jns
rcrb
jns
test
xor
mov
jmp
pop
inc
mov
lret
fldcw
mov
out
loope
adc
sub
js
jns
lock
mov
mov
out
pop
mov
cmp
rcrl
mov
or
mov
leave
or
sbb
mov
mov
push
adc
xchg
cltd
push
push
jno
xor
loopne
aas
notl
xor
imul
pop
out
enter
and
or
jle
adc
repz
pop
inc
iret
mov
test
in
mov
insl
mov
fstpl
insb
ret
push
out
popa
inc
rcll
loopne
clc
xor
push
xlat
lret
xchg
jecxz
xor
mov
push
sub
mov
and
out
repnz
jno
pop
imul
jb
sbb
and
inc
adc
ret
out
add
lret
imul
sub
inc
and
shlb
movsl
push
insl
sbb
loope
adc
sub
fwait
jns
outsb
cmp
sahf
mov
ffree
and
pop
sbbl
xor
insb
hlt
or
out
into
rcl
dec
mov
dec
lret
mov
jne
pop
push
nop
orl
iret
addl
ja
xchg
popa
movsb
mov
shlb
jl
cli
xchg
lods
aaa
mov
out
icebp
xor
jo
add
push
jnp
push
cmp
cld
out
pushf
and
in
dec
xchg
decb
xor
pop
push
dec
sub
mov
add
in
and
pop
nop
jmp
mov
hlt
or
inc
mov
add
test
mov
push
addr16
or
int
icebp
sbbb
inc
lods
xor
cmp
mov
js
mov
sbb
xchg
imulb
stc
or
mov
stc
je
iret
mov
repz
lods
jbe
jno
loope
add
pushl
orl
in
or
aas
sbb
pop
adc
push
mov
adc
arpl
cs
mov
inc
and
fistl
mov
and
xor
std
sti
xchg
inc
mov
mov
jecxz
jno
xor
xchg
jmp
insl
test
jmp
ss
clc
mov
out
cwtl
arpl
rol
leave
jmp
xchg
inc
leave
jbe
fisubrl
xchg
lret
mov
push
pop
out
lcall
pop
push
leave
push
jmp
and
fsts
fstpl
imul
fwait
push
call
pusha
movsl
cmpsb
sbb
pop
push
test
or
popf
cltd
lret
cs
orl
push
fcmovnbe
arpl
pusha
out
adc
ja
cmpsl
repnz
leave
sub
es
xor
adc
sbb
jg
ret
inc
adc
scas
in
clc
or
call
mov
xor
fcompl
lret
fs
add
dec
aas
mov
arpl
popa
mov
pop
sub
leave
jle
test
into
add
dec
lds
roll
cmpsb
enter
pop
dec
popa
dec
and
cmp
addb
gs
sub
mov
dec
xchg
xchg
out
flds
lcall
pop
sbb
push
aad
push
lock
cmpsb
out
je
lds
xor
je
das
add
pop
xchg
pop
in
sti
aas
jmp
fwait
mov
cmpsl
incb
in
adc
mov
mov
adc
jns
mov
loope
lea
jecxz
mov
ljmp
popa
sub
enter
dec
sti
in
cld
je
adc
xchg
push
movsl
stc
repnz
pop
loop
push
insl
gs
mov
bound
data16
les
js
add
jb
in
pop
jo
sub
jecxz
xchg
in
jns
fdivp
push
andl
jg
and
cmp
mov
adc
stos
sbb
adc
out
decb
subl
adc
sub
dec
testb
adcl
dec
jl
jb
xchg
andl
and
inc
idivl
xchg
sbb
mov
fsubl
aad
insl
outsl
push
aam
insb
mov
shrb
nop
mov
xchg
cmp
mov
jmp
rcrl
ret
xchg
bound
sub
sub
push
xchg
sub
push
sbb
jbe
popa
popa
std
jbe
xor
mov
adc
in
fsubp
sub
jnp
frstor
mov
pop
jae
mov
mov
rorb
sub
jno
mov
mov
test
push
push
cmp
xchg
aas
lcall
cmpsl
in
or
call
xor
mov
stos
in
cmp
int3
pop
bound
jb
xchg
mov
adc
xchg
lea
dec
cmp
rorl
sub
cmc
mov
xchg
enter
movsb
adc
jecxz
cmp
pop
mov
inc
pop
xor
popf
insl
add
mov
dec
rcr
push
mov
jecxz
in
jmp
jnp
loop
sub
mov
mov
data16
mov
out
push
xchg
ret
mov
adc
fstp
cli
adc
xchg
inc
jmp
cmc
cmp
aas
jp
in
imul
scas
pop
sbb
aad
fsubrs
dec
pop
mov
pop
je
mov
cli
jbe
cmpsl
pop
pop
cltd
in
ja
test
jecxz
xor
xor
inc
sbb
push
add
dec
mov
aad
add
fucom
mov
pushf
loope
xorl
stos
mov
scas
hlt
push
lock
mov
inc
sahf
xor
in
push
and
pop
bound
shl
push
sbb
rcll
jne
in
inc
gs
je
mov
sub
xchg
cmpsl
add
adc
push
and
inc
xor
stos
icebp
dec
in
jp
enter
stc
outsl
cmp
ret
or
lock
inc
sub
mov
push
das
fidivs
addl
stos
push
bound
mov
jle
lcall
sahf
sub
cmpsl
mov
dec
xor
mov
lds
push
and
std
das
repz
mov
dec
lods
roll
mov
hlt
jmp
ljmp
xor
loop
adc
xchg
aas
sub
jle
lock
into
popa
xor
test
lock
loop
div
pop
jb
scas
clc
movsl
xchg
test
out
leave
mov
lret
cmp
and
shll
in
or
jne
decb
stos
test
popf
mov
sbb
mov
cmpsb
and
xchg
jb
add
jns
pop
xchg
push
mov
ret
inc
adc
mov
mov
or
popa
push
in
push
inc
fdivs
aas
ret
mov
fstpt
dec
insl
movsb
in
inc
mov
push
cmp
mov
inc
pop
aaa
ljmp
and
push
movsl
test
addb
dec
pop
lret
cltd
test
fs
push
xlat
add
lock
mov
add
cmpsb
int3
testb
sbb
cmp
call
pop
mov
insb
sbb
movsl
fwait
mov
xor
imul
adc
and
xor
mov
js
push
or
mov
xchg
dec
jecxz
cltd
and
pop
xor
stos
testb
push
insb
cmp
test
xor
jo
sub
mov
sbb
dec
lods
mov
adc
mov
fiadds
push
jne
roll
lods
pop
bound
in
shr
cmp
adc
xchg
testl
push
aaa
push
push
lahf
aas
out
lods
int
sbb
cmp
add
jae
js
ljmp
or
and
pusha
es
mov
xchg
icebp
dec
movsb
mov
jae
xchg
scas
jge
mov
cmc
xchg
shrb
int3
sti
nop
push
xor
push
dec
dec
pop
outsb
imul
je
adc
mov
icebp
jge
push
cmp
stos
xchg
into
push
bound
xor
ja
cmp
sbb
incb
xchg
out
xor
jle
or
xor
mov
negb
jg
xor
in
jg
lods
enter
in
repnz
insl
jecxz
popa
das
addr16
int3
pop
and
dec
jl
add
xor
in
fiaddl
adc
mov
fildll
ror
ds
cmp
jmp
psubusw
or
sahf
testb
cwtl
leave
add
xor
jp
inc
pop
dec
aad
sub
jmp
lea
lcall
dec
lret
sub
xsavec
add
xor
mov
jl
add
dec
outsl
aas
loopne
pop
mov
cmp
mov
dec
add
ret
cmp
cmp
adc
orl
xlat
xchg
xor
mull
insb
xchg
scas
or
inc
fildll
stos
lcall
lods
out
out
mov
lea
and
mov
pop
push
fwait
inc
mov
dec
xchg
je
sub
ret
cmp
xor
push
mov
jmp
mov
adc
adc
push
popa
or
fucomi
int
mov
push
or
pop
push
xchg
xorl
cs
mov
out
enter
aam
push
adcl
mov
xor
lds
push
hlt
pop
mov
inc
push
insl
push
xchg
mov
inc
sbb
inc
mov
adc
aad
insl
iret
bound
mov
stos
shr
cmpsb
jle
or
cmp
mov
pop
mov
ret
sbb
fwait
inc
in
movsb
jo
and
push
jb
aaa
mov
sbb
adc
pop
xchg
sbb
sbb
cwtl
leave
jecxz
lcall
mov
sbb
pop
push
incb
pop
cmp
out
addr16
and
sahf
lcall
addr16
mov
cltd
stos
shrb
cmp
inc
cmpsl
fdivrl
and
cltd
enter
inc
sbb
add
mov
test
or
std
test
dec
sbb
xor
add
cmp
ja
jbe
dec
std
xchg
xor
mov
cld
mov
push
mov
mov
sub
dec
mov
mov
gs
adc
push
enter
mov
rcll
popa
ljmp
pop
popf
sahf
jo
jecxz
adc
sbb
icebp
js
inc
cmp
loopne
inc
js
loopne
inc
push
outsl
aaa
in
ljmp
pop
loop
add
and
dec
test
lock
jno
vaddsubpd
mov
sahf
pushf
adc
jp
scas
mov
loop
lcall
mov
push
mov
add
sarb
xchg
or
pop
hlt
shlb
inc
bound
arpl
loop
fstpt
les
mov
insb
test
mov
scas
cli
or
or
aad
int
sarb
adc
sbb
xchg
loop
dec
fisubrs
jnp
xor
pop
sub
jmp
jmp
cmp
add
mov
and
fnstsw
inc
cmp
inc
insb
mov
cld
das
jecxz
movsb
xlat
mov
sub
aad
sbb
lcall
or
push
pusha
decl
in
mov
xchg
inc
mov
sahf
inc
ret
xchg
mov
out
hlt
inc
test
rcrl
cmp
jae
repnz
out
lahf
rorb
add
int3
daa
movsbl
hlt
and
les
mov
xchg
cmp
cmp
shlb
icebp
iret
push
rolb
jb
sbb
daa
mov
test
outsl
and
ficompl
xchg
push
add
add
pop
pop
xchg
popa
mov
gs
pusha
pop
movsb
aam
add
pop
cld
pop
aas
cmp
xlat
pop
repnz
outsb
jmp
add
popf
imul
pop
popf
cltd
mov
scas
addr16
out
inc
pop
sbbl
mov
xor
xlat
das
int
mov
add
shlb
stc
stos
and
jl
xlat
sub
clc
lret
movsl
xchg
pop
cmovb
movsl
pop
bound
test
cmp
mov
cs
movsl
imul
pop
cmpsb
roll
mov
pop
sbbb
or
std
mov
mov
cmp
push
gs
dec
pop
push
lahf
jmp
imul
and
pop
xchg
je
add
cmpsl
mov
adc
popf
fwait
imul
inc
or
mov
adc
data16
std
and
or
mov
xor
add
ljmp
ljmp
nop
fsubrl
xlat
aas
inc
sbb
lock
push
dec
jb
mov
jno
bound
add
dec
push
inc
iret
mov
mov
out
jp
pop
lret
add
xchg
cltd
fnstsw
fists
pop
sub
movb
fwait
sub
mov
or
push
add
rol
sti
inc
xchg
dec
xor
add
add
lea
cli
and
cmpsl
sti
mov
repnz
fimull
dec
ljmp
imul
inc
add
mov
cli
sub
frstor
push
out
pop
sarb
enter
ljmp
jmp
push
nop
pop
jle
ret
add
fsubs
push
jae
xchg
add
pshufw
cltd
lods
fwait
stos
adc
cmc
dec
mov
cmp
dec
cmc
popa
outsl
inc
bound
je
pop
jg
push
movsb
jle
and
daa
fidivrl
gs
mov
xorb
lods
jbe
mov
mov
rcrb
push
dec
mov
stc
mov
fdivrs
mov
sahf
pop
lods
jnp
dec
daa
add
lea
test
idivb
add
sbb
lcall
xchg
cwtl
es
js
dec
aam
imul
clc
inc
mov
sbb
jbe
and
and
lret
loopne
pop
ss
aad
pop
rclb
push
add
jbe
dec
sbb
mov
jp
lods
addr16
rcrl
jns
jb
ror
insl
pop
loopne
mov
cmc
fs
shll
test
outsl
dec
mov
xchg
jmp
xchg
hlt
mov
sti
mov
stc
jecxz
pop
cmp
adc
adc
aad
dec
and
add
inc
add
xorb
or
inc
cmp
mov
fadds
stos
push
lcall
xchg
xor
mulb
aad
nop
dec
in
adc
sbb
je
xchg
inc
es
or
pushf
clc
pop
stc
leave
and
bound
xchg
and
cmp
mov
jg
js
lahf
sbb
mov
int
movsb
mov
xchg
and
mov
mov
sub
lahf
sub
lahf
leave
jl
rcrl
insb
mov
push
hlt
sbbl
dec
pop
dec
push
xchg
add
pop
and
adc
pop
sbb
call
xchg
addl
insb
shl
adc
std
add
xchg
mov
xchg
sub
mov
sub
dec
sub
ficomps
test
add
cmpsl
icebp
call
jmp
mov
cmp
sub
xor
inc
pop
iret
push
and
nop
xor
bound
loope
adc
fsubrl
mov
les
sub
add
dec
aas
into
test
cmp
inc
sbb
mov
adc
cmp
sub
and
pushf
cld
scas
push
addr16
jge
cmp
dec
and
in
adc
mov
jg
pop
int3
adc
xchg
shlb
test
and
bound
add
stos
in
mov
addr16
add
jg
cmp
clc
out
adc
mov
dec
and
rclb
cmp
movsb
mov
pop
call
sti
xor
mov
jo
jnp
dec
cmp
jecxz
sti
test
sbb
mov
cmpsl
mov
movsl
enter
ffreep
mov
push
jno
xor
outsb
xor
add
bound
cmp
jno
adc
push
mov
ds
xor
insl
jns
xor
call
sti
call
lea
pushf
fnstenv
cli
mov
or
cmpsl
cmp
cli
or
imul
pop
popa
insl
push
aaa
and
adc
fwait
sbb
pop
push
push
in
add
sbb
in
lahf
dec
insl
jae
iret
mov
lret
rol
inc
pop
cmpsl
pop
dec
push
arpl
in
mov
inc
repnz
cltd
mov
enter
daa
and
sub
inc
call
mov
pop
mov
or
scas
in
push
loopne
jg
repz
jbe
cmpl
cmpsl
cmpsb
inc
push
movsb
nop
jl
adc
int
das
stos
sbb
iret
xchg
out
mov
ror
subl
or
cmp
inc
call
fisubrs
test
lcall
aaa
ret
ds
ror
ljmp
aas
inc
add
int3
add
mov
push
xchg
or
mov
in
dec
test
out
fbld
movsb
lods
lahf
stos
fs
call
sti
data16
jmp
mov
jecxz
mov
xor
mov
push
pop
jb
push
inc
jbe
imul
xor
sub
jne
mov
mov
out
push
push
push
les
addr16
and
dec
inc
mov
fwait
xchg
add
insl
enter
xchg
in
dec
xchg
sub
add
xchg
out
pop
sub
dec
and
mov
sbb
inc
xor
iret
mov
or
loopne
pop
aad
dec
xlat
sbb
xchg
rcrb
jl
inc
jae
fadds
push
lea
repnz
sbb
cs
stos
jle
pushf
lods
jbe
ret
hlt
cmpsb
outsl
sub
mov
ss
addl
mov
mov
inc
jae
adc
inc
jmp
aam
sub
inc
pop
sub
pop
ret
lret
pop
insl
cmp
adc
popa
xchg
sbb
outsl
stc
add
aam
mov
sub
clc
pusha
fs
sarb
inc
add
stos
sub
repz
int3
sbb
xchg
and
fwait
and
addr16
loopne
cmpsl
xchg
fisubrs
mov
adc
mov
imul
int3
fildll
mov
mov
das
adc
and
xchg
mov
movsb
loopne
cmc
mov
cwtl
jnp
push
mov
lret
cmpsl
jnp
gs
jno
bound
push
repnz
jle
adc
sbb
pop
dec
or
jmp
sub
pop
iret
sub
xchg
or
mov
xchg
sbb
pop
sbb
or
push
dec
jb
pop
add
addr16
xchg
shl
inc
sbb
leave
sbb
imul
into
movsb
testb
sub
mov
push
stos
pop
ljmp
bound
xchg
call
push
inc
cld
jne
jo
or
cbtw
sbb
xor
outsl
aad
cmp
fimuls
mov
or
adc
ss
sub
dec
and
push
lods
push
js
icebp
fcmovbe
stos
sbb
mov
je
mov
mov
push
mov
mov
jl
inc
xor
push
rcll
adc
lcall
or
xlat
cmpsl
dec
push
aaa
jge
cmpl
jmp
sahf
lahf
push
xchg
mov
std
mov
jmp
lea
lock
jnp
sub
rolb
test
cmp
dec
pop
add
jno
out
imul
shrl
sub
fidivs
mov
test
lcall
jp
pop
repnz
cld
lea
mov
ljmp
enter
dec
mov
mov
pop
ja
jg
push
jno
aad
test
arpl
scas
fimuls
jle
add
cmpsl
repnz
sahf
bound
loopne
push
hlt
or
fwait
mov
xlat
xchg
mov
pop
mov
mov
divl
jno
shrb
in
dec
mov
fsubrp
mov
scas
adc
cs
xorb
or
ljmp
dec
dec
jnp
lods
cld
add
and
ror
and
mov
out
adc
loopne
pop
lret
and
popa
xchg
jae
sub
xchg
pop
inc
pop
sbb
xchg
push
jae
cmc
mov
outsl
data16
mov
xchg
mov
lds
push
stc
decb
cmpsb
inc
lds
pop
jne
inc
ds
jecxz
xlat
insl
lahf
sub
xchg
int3
gs
push
dec
adc
pop
dec
and
filds
cmpsb
adcl
xor
rcrb
cmc
or
aam
mov
enter
lods
jge
sub
add
mulb
addr16
inc
in
addr16
sahf
add
inc
rcll
shrb
fcom
fsub
cld
bound
mov
lret
and
shlb
mov
lea
jmp
sbb
jo
xchg
xchg
rcrb
add
inc
jne
sub
fsubs
addr16
sub
js
and
adc
push
test
and
fs
loop
cwtl
divl
push
lcall
ja
and
enter
lea
roll
movsl
ds
jno
das
movsb
push
inc
bound
rolb
call
mov
mov
jmp
int3
xchg
xchg
xor
test
push
xchg
pop
int
xchg
decb
in
daa
outsl
add
mov
loop
jb
cmp
mov
jnp
cwtl
cmpsb
adc
cmp
adc
negl
in
out
or
dec
std
es
mov
popa
cs
mov
xor
xor
push
push
test
aaa
sbb
sbb
xchg
in
xchg
mov
xor
dec
mov
jnp
dec
out
jno
xchg
push
lret
pop
jbe
loopne
and
movsb
sarl
push
leave
rol
jb
fldl
inc
filds
cmc
xor
movsl
pop
cmpsl
cs
cmpl
xorb
push
mov
sbb
nop
jmp
fdivl
imul
lock
xor
mov
xor
pop
or
dec
seto
or
pop
incl
jecxz
or
out
and
mov
sbb
mov
jae
dec
xchg
sarb
jae
rcrl
jns
in
clc
xchg
mov
or
es
mov
xchg
xchg
sub
out
cmp
mov
test
push
sub
xchg
push
into
stos
mov
sbbb
es
or
loope
or
inc
leave
dec
das
xchg
hlt
repz
or
out
clc
movsl
aas
bound
lock
dec
movsl
push
fistpl
loopne
popf
scas
flds
int
push
sub
dec
and
xor
inc
sbb
test
fcomps
insb
ret
mov
cmp
lahf
xor
or
inc
aam
mov
mov
jne
addl
jbe
gs
or
nop
xchg
xchg
addl
sub
push
lahf
jp
clc
cmp
mov
pop
hlt
lock
push
stos
mov
jl,pt
loopne
in
or
shr
shrb
bound
mov
mov
inc
gs
cmp
ret
loop
jle
mov
lret
les
jle
sub
int3
mov
sub
scas
push
fsts
in
lods
push
lods
out
cmp
or
shlb
cmp
nop
std
outsb
fcmovne
sub
pop
cmp
in
xor
in
xchg
dec
xor
jle
dec
in
out
xchg
mov
hlt
decl
fsubp
pop
data16
xor
add
pop
inc
out
pop
jns
xchg
rorb
daa
xor
movsb
leave
sarl
or
icebp
pop
les
shll
data16
rorb
pop
fwait
xchg
cmpsl
pushf
aad
jecxz
outsl
cmp
popf
xchg
xchg
mov
add
hlt
nop
and
mov
mov
shl
push
repz
sub
outsb
nop
jnp
pop
mov
jbe
lahf
cmp
sti
add
and
stos
out
stos
mulb
pop
es
and
dec
stc
pop
mov
in
cmp
mov
sbbl
push
stc
outsb
outsb
repz
cmpsl
movsl
scas
stos
rol
into
stc
test
bound
imul
or
jp
cwtl
lock
jecxz
fxch
cmp
loope
mov
loopne
aaa
cmp
mov
dec
iret
and
das
push
pop
pop
adc
lcall
cmc
bnd
ror
bound
lea
cli
jbe
xchg
push
cmp
out
jae
jl
xchg
push
adcl
scas
pop
pop
xlat
inc
and
lahf
pop
sub
and
jb
push
xor
mov
xchg
inc
pop
jbe
and
adc
xchg
dec
dec
addr16
jbe
sbbb
shll
es
fstpt
jge
inc
jnp
mov
xor
popf
jle
fisubrs
fcoms
les
or
aad
test
outsl
stc
sub
or
test
and
aaa
ds
mov
and
out
mov
ds
mov
dec
inc
nop
mov
push
or
sahf
psubw
and
push
mov
andb
sahf
out
dec
pop
pusha
pop
add
ja
loop
mov
fcompl
mov
mov
xlat
pusha
sub
rcl
pop
sbb
imul
jg
lahf
mov
mov
mov
aad
js
shrl
jae
ja
lods
stos
ds
maskmovq
movsl
and
mov
mov
cmp
or
mov
mov
or
pusha
push
mov
jno
dec
sbb
test
push
pop
push
out
pushl
xchg
jmp
adc
rcrl
fwait
sar
je
idivb
jnp
pushl
das
out
pushf
xchg
and
scas
cwtl
cltd
lea
pop
cmp
pop
xchg
and
loope
pop
repz
mov
data16
imul
data16
cmpsl
adc
scas
sub
sub
ret
pop
ja
movsb
cmp
jmp
jne
and
dec
ja
jle
or
adc
dec
ljmp
dec
int
mov
push
nop
fimuls
in
dec
popf
mov
rcrl
dec
mov
dec
mov
call
sbb
in
pop
mov
lea
lret
jbe
mov
pop
jecxz
lcall
mov
adc
xchg
adc
dec
hlt
inc
and
jp
out
lods
lods
int3
add
int
loop
mov
mov
paddd
out
int3
stos
xor
dec
lcall
pop
jp
sub
or
es
and
repnz
lret
cmp
xchg
imul
add
shll
adc
push
inc
pop
push
into
dec
shll
xorl
testl
mov
inc
lcall
fcmovnb
inc
bswap
fwait
cwtl
repz
fiadds
xchg
ficoms
in
mov
cli
stos
lods
xchg
arpl
lcall
mov
pop
cmpsl
idiv
inc
rorl
xchg
push
mov
cmpw
add
cmp
push
icebp
insl
dec
sbb
mov
lret
cwtl
mov
inc
rorl
adc
dec
pop
test
outsl
inc
iret
mov
xchg
fnstcw
adc
pop
cs
daa
add
lods
add
and
and
xchg
pop
fwait
insb
aam
xchg
insb
lods
cmp
inc
pop
add
addr16
mov
adc
jp
cltd
outsb
icebp
aad
repnz
das
dec
push
imul
outsb
pop
jbe
dec
adc
dec
adc
dec
fsubl
lods
fwait
push
cmp
inc
or
mov
mov
or
xchg
jbe
out
out
cmp
loope
cld
std
cmpsl
push
clc
sub
push
jg
das
out
mov
test
xor
mov
arpl
adc
fmuls
and
mov
inc
scas
cwtl
js
push
mov
lret
sub
cmc
roll
inc
in
inc
xchg
data16
in
inc
sub
ret
jae
and
or
cmpsb
mov
sbb
leave
adc
and
neg
cli
mov
sbb
loope
in
test
pushf
xchg
mov
jle
xor
jbe
loope,pt
dec
pop
jbe
mov
inc
in
aaa
xor
jns
test
in
ljmp
cmpsb
jge
test
push
and
push
aaa
jmp
mov
add
jno
cmp
rolb
mov
mov
shlb
push
or
add
inc
push
mov
popf
inc
das
test
call
jge
mov
adc
xlat
xor
sub
jae
fistps
adc
movsb
in
inc
inc
aas
and
mov
fsubrs
add
and
lods
mov
jbe,pn
shrl
fwait
and
ss
xchg
and
in
dec
icebp
test
popf
mov
icebp
and
adc
mov
mov
cmp
dec
dec
jp
dec
or
pop
mov
cmp
pop
push
hlt
push
dec
cmpb
pop
enter
ja
cmp
mov
data16
insb
cmp
imul
ret
adc
subl
cmpsb
fisttpl
mov
mov
sahf
outsl
xchg
rcr
dec
mov
sahf
aam
cmp
push
sbb
ss
push
je
mov
popa
push
xor
mov
fwait
std
test
shlb
jnp
pop
and
mov
subl
xchg
pop
repz
repnz
mov
cs
cli
xchg
mov
outsl
sbb
or
add
or
pop
dec
stos
inc
out
jae
push
sub
out
mov
mov
ljmp
aam
dec
je
mov
sbb
and
pop
in
adcl
xchg
xchg
movsl
loope
jno
out
int3
sub
shl
mov
stc
push
outsl
mov
arpl
inc
mov
pop
outsb
orb
mov
lods
jle
clc
out
add
into
outsl
mov
pop
ficomps
cmp
mov
dec
cltd
jnp
ja
imul
and
sub
int3
fs
sti
and
ja
shlb
mov
inc
test
mov
jo
pop
xor
in
jmp
or
pop
or
sbb
cld
xor
inc
and
pop
push
dec
testl
call
das
cwtl
pop
inc
jecxz
cmp
call
pop
add
ljmp
xchg
adcl
mov
inc
xor
add
mov
mov
and
je
shll
rcll
pop
sar
fmull
mov
inc
mov
sbb
sbb
popa
adc
mov
cmp
in
in
xor
in
pusha
fcomps
lea
test
outsb
xor
daa
inc
adc
fisubrs
cltd
lea
fs
lret
call
scas
cmp
pop
dec
movsb
add
push
enter
jne
adc
jb
fidivl
test
aas
je
jp
and
and
movsl
sub
pop
fisubl
ret
int3
int3
int
cmp
test
or
jbe
std
mov
xchg
add
shrl
jg
sbb
loop
mov
shll
jnp
jmp
mov
push
cmc
test
lahf
mov
ret
scas
fsub
es
nop
xchg
cld
dec
mov
sub
mov
popa
lods
loopne
or
mov
cltd
push
std
jne
in
in
repnz
lds
mov
xchg
ljmp
fistps
ret
dec
pop
dec
aas
jo,pn
insb
data16
arpl
lahf
in
push
test
and
out
movsb
ret
xchg
mov
test
cwtl
sub
orl
ret
xor
mov
jl
add
shrb
in
jnp
jo
mov
mov
and
movsl
mov
jo
push
je
mov
and
shrb
outsl
mov
mov
push
and
into
out
xchg
orl
das
dec
dec
mov
in
jnp
es
dec
out
inc
dec
jg
jae
cmp
mov
xchg
inc
orl
add
push
xchg
iret
je
mov
cli
mov
xchg
adcl
inc
adc
mov
inc
testl
jb
int
aas
divl
sub
adc
pop
pop
mov
mov
sub
insb
jbe
mov
call
movsb
clc
arpl
in
in
lret
xchg
subb
pusha
adc
or
lock
mov
in
imul
movsl
cmp
sbb
dec
sarb
loope
inc
hlt
inc
ja
add
or
mov
mov
lods
std
sbb
cmpsl
dec
adc
mov
sub
cld
mov
pop
adc
aaa
pop
lock
icebp
enter
add
push
lahf
pop
mov
sbb
xchg
xchg
imul
lea
xchg
roll
dec
sub
push
out
scas
icebp
xor
mov
movsl
adcl
enter
in
or
es
sub
cltd
xchg
mov
lock
pop
mov
jg
pushf
inc
jb
xchg
dec
movsl
fnstenv
or
xchg
hlt
sub
xchg
aaa
fcomp
mov
xor
popa
scas
fisttps
cmp
mov
push
mov
cltd
xchg
adc
mov
or
mov
pop
mov
es
movsb
push
xchg
test
or
in
insb
or
insb
outsb
mov
shl
mov
sti
sub
jb
pushf
sbb
fnstenv
pop
lds
test
lods
cmp
rol
mov
or
out
popa
lahf
xchg
ds
mov
popa
xchg
lea
inc
adc
inc
xor
loop
add
mov
and
xchg
nop
cmp
stos
jmp
sahf
ja
pop
nop
mov
mov
xchg
lock
push
movsl
xor
sub
jecxz,pt
jne
mov
mov
and
roll
jp
lods
mov
daa
xor
dec
daa
cmp
push
js
test
aas
inc
call
cmp
dec
pop
mov
or
xchg
xchg
sub
sbb
sahf
sbb
dec
imul
inc
pop
push
daa
test
xor
mov
mov
jecxz
je
lret
repnz
lret
stos
add
es
fwait
ljmp
test
fsubl
in
jl
and
loopne
lret
ljmp
cmc
out
repnz
into
dec
scas
hlt
jbe
cmc
mov
dec
push
and
rorb
ret
je
cli
dec
dec
in
and
jnp
stos
ds
jo
mov
xchg
jno
enter
popf
cmp
add
add
repnz
movaps
test
push
decl
adc
mov
cli
add
cmp
incl
push
xchg
loopne
pop
push
mov
cmp
imul
bound
inc
in
inc
cmp
jecxz
ja
lret
notb
mov
call
mov
push
pop
rcl
fidivrl
clc
pop
ja
mov
lret
sub
jne
test
xchg
add
notl
daa
fnstcw
push
and
divl
xor
xchg
nop
or
daa
dec
std
add
cmp
fwait
shlb
in
mov
sbb
lahf
xlat
adc
xchg
sub
xor
jmp
push
sub
std
int3
xchg
mov
mov
pop
fiaddl
out
xchg
push
pop
push
pop
jo
cmp
or
mov
adc
mov
cmc
push
sbb
shrb
nop
pop
out
movsl
xchg
xchg
sub
in
jae
sti
or
std
test
mov
pop
sub
mov
dec
add
xchg
cwtl
insb
sbb
subl
call
push
xchg
test
cwtl
ds
mov
xchg
or
mov
jg
sub
sbb
scas
fbstp
jmp
es
pusha
lods
stc
movsb
jb
repnz
sbb
or
push
adcb
and
sub
mov
sub
jmp
nop
cmp
out
push
arpl
cmp
mov
cltd
jmp
mov
daa
test
ljmp
js
jb
out
std
in
adc
jge
fisttps
cwtl
cmp
jle
jecxz
pop
lds
insb
mov
dec
sub
lcall
iret
fcomps
movsb
ss
cltd
ficoms
out
push
sub
push
pop
sarl
sub
adc
adcb
push
out
insl
push
and
aad
insb
lods
lahf
pop
loop
fistpl
inc
sub
dec
std
sub
cltd
adc
cltd
pushf
idivb
sbb
sub
and
loopne
lods
enter
mov
sub
pop
sarl
jecxz
pop
inc
out
inc
push
xor
dec
sub
and
lcall
popa
dec
out
sbb
cwtl
mov
sbb
lock
xchg
repz
cld
pop
lret
popl
and
and
pushf
adc
std
mov
sbb
cmp
cmp
pushf
ret
fisttpl
fcmovbe
in
lods
int
lods
ret
out
push
inc
mov
loopne
mov
push
rcrl
jmp
mov
imul
adc
add
out
dec
rorb
int
mov
xor
movsl
xlat
loop
fistpll
pop
sbb
aad
pop
insb
cmp
arpl
push
rorl
decl
adc
add
lret
add
push
hlt
xchg
xchg
jae
int
loop
inc
adc
mov
mov
insl
incb
push
addr16
ja
js
repnz
insl
lcall
test
bound
int3
dec
addr16
jb
out
or
popf
jo
cli
popl
inc
and
leave
js
movsb
xor
out
lahf
inc
or
loopne,pt
int
add
cmp
mov
or
cmp
inc
jmp
pop
xchg
pop
lds
cmp
cs
sub
xchg
imul
mov
xchg
pop
cmc
iret
mov
pop
lahf
fwait
clc
push
stc
ret
fisubs
div
push
les
inc
daa
cmp
sbb
ret
icebp
fsub
jecxz
js
jl
push
loopne
es
repz
jp
dec
bound
xor
jmp
sub
pop
adc
mov
call
ror
pop
jns
jbe
insl
inc
and
dec
test
cmp
scas
and
aas
adc
lds
cmp
xor
push
dec
adc
adc
ja
push
pop
sbb
push
cld
nop
lock
cld
dec
cmpsl
jne
insb
inc
lcall
xor
rol
sbb
jne
pop
jns
test
out
adc
rorb
into
pushl
xor
adc
push
xchg
icebp
pop
or
cwtl
les
xchg
pop
xchg
icebp
jae
xchg
outsl
mov
inc
shl
cmp
das
dec
xor
jo
fisubs
xchg
push
inc
incb
out
and
jmp
and
jmp
rcll
xlat
sti
adc
push
imul
out
ljmp
cmp
and
enter
add
fwait
clc
mov
addr16
jb
iret
subb
inc
lret
mov
movsl
push
out
sarl
push
mov
js
aas
xchg
stos
push
test
bound
cmp
cmp
repnz
jge
xchg
add
adc
ret
aad
les
jns
aaa
hlt
cld
xchg
jb
xchg
or
ja
or
push
pop
push
sbb
xchg
into
aad
mov
loopne
add
lret
sub
movsl
sub
adc
adcb
inc
incl
add
ret
dec
xor
jbe
mov
adc
or
mov
fstpl
jno
jle,pt
arpl
dec
sub
rcrl
ljmp
cmp
fmuls
sbb
mov
sahf
aam
sub
inc
sbb
lahf
mov
adc
je
rcll
hlt
mov
jecxz
dec
in
jno
or
xchg
imul
push
into
add
outsb
bound
xchg
fbstp
mov
mov
ja
jne
push
js
mov
lods
call
inc
int
inc
fidivrl
and
repz
push
sbb
jne
jecxz
cmp
inc
imul
int3
push
insl
mov
test
push
or
pop
jnp
cmp
fdiv
mov
jecxz,pt
add
popf
popl
cli
dec
outsl
add
add
bound
adc
daa
cmc
inc
cmpsb
les
inc
and
mov
dec
nop
gs
movb
lods
jle
add
mov
or
mov
fucomip
sub
orl
cli
movl
pop
mov
and
mov
jp
xchg
fwait
dec
popf
inc
fwait
fwait
and
rorb
in
jb
rorb
push
and
mov
or
inc
jbe
add
cmpl
sub
out
test
and
inc
ficomps
fcmovne
add
call
lods
jle
mov
or
rorl
pop
test
adc
mov
sub
sahf
cmpsl
cmpsl
addr16
call
stc
fimuls
mov
ss
loopne
pushf
push
fcmovnb
push
inc
fs
jno
push
aam
arpl
aad
lret
dec
xchg
jmp
pushf
rolb
aaa
mov
leave
out
out
dec
push
mov
xchg
jl
aas
add
sbb
lcall
out
add
pop
mov
mov
int
jo
fidivrl
push
inc
push
adc
sbb
lds
out
cli
jl
inc
xchg
jmp
lea
jae
mov
and
jmp
mov
pusha
mov
loope
pop
jg
rolb
call
outsl
jnp
stc
mov
xor
mov
lea
mov
sbb
dec
mov
xor
xlat
inc
repz
shrl
ljmp
daa
lret
pop
sub
cwtl
fldl
jo
mov
pop
bound
mov
fnsave
cmp
cmp
ficoms
fisttpl
push
ficoms
dec
xchg
dec
jg
in
adc
push
neg
icebp
stos
cwtl
mov
cmp
jns
dec
sbb
push
popf
jle
out
push
gs
inc
jae
test
jmp
frndint
add
mov
movsl
pop
jecxz
inc
incl
lahf
jae
xor
icebp
fldcw
jmp
daa
or
in
jge
jp
cmp
xchg
outsl
pop
or
sar
in
mov
out
dec
stos
not
add
and
and
fs
cmp
lods
aas
sbb
je
psllq
dec
mov
fmull
add
in
test
xchg
mov
fcoml
mov
pop
xabort
mov
inc
ss
pop
sahf
jb
push
or
push
add
ds
lcall
mov
fadds
inc
jecxz
mov
add
pop
pusha
xor
loopew
mov
xlat
stos
sti
jg
jmp
push
mov
pusha
or
sbb
negl
fdivrl
test
pop
sub
leave
iret
out
mov
imul
mov
loopne
dec
mov
cmp
jge
or
idiv
xor
in
and
push
xor
mov
dec
jmp
shr
gs
push
andb
mov
aas
jbe
dec
cld
iret
sti
add
xchg
pushf
into
fwait
sbb
pextrw
nop
pop
ss
lret
cmpl
fs
push
adc
shr
dec
fsubl
call
lret
movsl
and
mov
mov
scas
sar
cli
sbb
xchg
mov
mov
es
mov
cmp
xlat
iret
xor
adc
xor
repz
dec
clc
xchg
fdivrl
inc
aas
pop
mov
jge
jae
out
loopne
or
outsb
inc
pusha
nop
cli
cmp
ja
sti
pop
mov
sbb
into
call
mov
imul
push
out
lcall
inc
mov
mov
xchg
xlat
mov
ret
xchg
aad
inc
sub
imul
xchg
jns
loope
test
dec
aaa
add
in
dec
mov
push
aaa
mov
addl
or
fidivrl
mov
cmp
orb
push
push
sbb
push
sub
and
cmpsl
sbb
mov
popf
lods
pop
inc
ret
test
xor
cmp
lcall
repz
pusha
cld
push
repz
shl
mov
mov
jecxz
jge
into
dec
fmull
sbb
rcr
ffreep
push
xchg
and
push
or
and
sub
pop
ja
bound
stos
aas
out
sbb
mov
fldl
jae
bound
sbb
xchg
jg
add
jbe
adc
mov
xchg
cmp
lcall
and
pushf
insl
add
xor
cmp
sbb
ror
cmpsb
mov
cmp
xchg
test
cmpsl
xorb
jg
push
rclb
std
out
add
sub
pop
sbb
fists
pop
mov
das
xchg
stos
jl
dec
cld
mov
add
xchg
sahf
cmp
inc
jl
cmp
mov
push
int
cld
xchg
orb
sbbb
mov
sbb
xor
in
outsl
rclb
inc
sub
enter
inc
sti
cmp
inc
movsb
xor
push
in
adc
enter
loopne
test
loope
jge
int3
dec
mov
sub
dec
mov
outsl
iret
xchg
mov
jmp
std
adc
pushl
cmp
cltd
fsub
xchg
push
xorl
pop
xchg
pop
push
or
add
cmpsb
iret
stos
xchg
jg
or
out
cmp
pop
push
or
aas
pop
rclb
xchg
add
inc
and
shlb
out
outsl
lea
and
push
jo
hlt
roll
in
scas
xchg
cwtl
ja
xor
imul
call
es
and
pop
xor
shll
push
xlat
xor
jo
insl
inc
push
into
pop
sub
xchg
jno
movsb
lds
jae
xchg
ret
jnp
cmpl
xchg
insl
pop
lock
mov
xchg
jno
and
mov
inc
fnstcw
scas
int3
and
adc
ja
cwtl
jnp
add
push
mov
bound
int
sub
sbb
adc
mov
dec
mov
sub
movsl
mov
sub
jecxz
dec
cmp
pop
iret
xor
std
adc
push
add
decl
xchg
ljmp
add
div
mov
stc
pop
out
cmpsl
adc
xchg
inc
or
mov
and
ds
xor
pop
jg
movlps
lods
in
fs
mov
cmpsb
inc
sub
addr16
jne
inc
and
in
cmp
aaa
push
xchg
aam
push
loopne
lahf
push
xchg
adc
jl
mov
xchg
jo
mov
sbb
jae
pop
fsubrl
jae
and
loop
loope
push
cmp
emms
or
jno
sti
mov
jecxz
jbe
adc
adc
pop
sbb
in
sti
stc
fadds
int
out
in
xchg
outsl
stos
push
mov
sbb
mov
hlt
les
aaa
xchg
ror
std
cmpsb
das
lods
or
cmp
xchg
lods
inc
repz
xlat
mov
mov
lret
ds
jo
aad
cmp
push
dec
pop
cmp
push
movsl
aad
jp
addr16
ret
aaa
pop
adc
pop
sub
dec
cmp
imul
std
mov
fisubrs
imul
loope
jge
mov
mov
nop
pusha
sbb
mov
or
push
xchg
int3
or
inc
sub
stc
mov
loopne
sbb
push
pop
out
mov
pushf
jbe,pn
and
popf
push
shrb
js
cmpb
dec
and
daa
test
clc
mov
push
xor
repz
or
jle
rclb
dec
push
xchg
jno
sbb
daa
mov
adc
and
sbb
mov
lea
inc
bound
cld
inc
cmp
cld
push
sahf
outsl
nop
or
sarb
dec
xchg
lods
shlb
out
cmp
mov
xchg
scas
out
inc
fdivs
sar
push
adc
push
subb
out
shr
inc
pushl
es
inc
flds
add
aam
sti
andl
dec
mov
lret
pop
sub
jbe
xchg
lea
aam
add
cmp
jno
mov
lock
cmp
or
push
sahf
cmp
xorl
sbb
dec
test
xchg
sbb
jl
xor
ret
sahf
imul
sahf
push
or
cmp
rcr
jecxz
cmp
dec
sub
inc
gs
test
outsl
stos
leave
fwait
ret
int3
pop
ljmp
popa
add
push
and
aam
dec
cwtl
lods
sti
cmp
mov
push
mov
dec
mov
jp
loop
bnd
stc
push
xchg
mov
xorl
out
dec
in
pop
cmp
popa
push
loop
jle
push
pop
pop
insb
outsl
lds
mov
idiv
inc
bound
aaa
leave
push
pop
mov
loopne
inc
inc
jle
xchg
shrb
mov
test
cmp
ret
mov
xchg
add
lods
popf
xchg
pop
hlt
xor
fwait
cmp
das
or
mov
sub
das
mov
cs
jge
outsl
icebp
jbe
fimull
cmpsb
pop
mov
or
or
lahf
pop
cmp
adc
pop
mov
pop
iret
lods
xor
shl
push
xchg
pop
loope
add
popa
sub
xor
xchg
daa
cmp
pop
test
pop
lret
mov
je
shrb
lods
mov
jle
xchg
arpl
lods
fwait
imul
nop
mov
fnsave
mov
test
jns
cwtl
push
sbb
ret
outsb
lea
out
sbb
jns
sub
xchg
fidivrl
xor
ljmp
fsubp
push
jae
xor
inc
jg
sbb
or
pop
xor
imul
or
pushl
push
push
jmp
or
or
aaa
test
aam
popf
add
out
xchg
adc
repnz
xor
mov
dec
xchg
icebp
in
xchg
xor
test
pushf
inc
cmp
dec
lock
adc
pop
fbld
iret
jno
js
cltd
push
sbbl
xchg
inc
and
add
mov
push
ds
negb
stc
and
loopne
mov
out
movsb
cli
ds
lahf
sub
jno
mov
mov
jae
aad
sbb
test
mov
mov
push
loop
stc
xchg
rorl
inc
rcll
xor
cmc
fs
xchg
inc
lret
dec
js
in
add
pop
add
testl
push
insl
push
shll
out
dec
mov
sub
jecxz
mov
inc
ss
aad
shll
push
mov
add
pop
xor
outsl
je
mov
adc
out
mov
mov
les
mov
cmp
lods
lods
and
dec
sar
jle
and
pop
clc
sub
cmc
lahf
incl
xchg
mov
sbb
imul
sbb
dec
outsb
lahf
push
out
sub
popa
pop
loopne
scas
out
sbb
pop
movsb
xchg
xchg
in
mov
jnp
out
lret
int3
roll
fstpt
rcrb
push
ljmp
scas
and
int
icebp
pop
out
pop
add
push
sub
in
cmp
and
dec
pushl
cwtl
jl
jo
loopne
les
pop
jae
fwait
mov
push
or
mov
stos
mov
test
lods
stc
jge
fistpll
data16
pop
insb
imul
pop
imul
addb
icebp
mov
push
mov
les
add
mov
loop
bound
out
insl
dec
add
in
fnstsw
mov
mov
pop
or
in
ss
ja
xor
adc
test
pop
stos
and
subl
add
cli
lea
scas
loop
inc
dec
dec
cld
mov
cmp
lret
push
fadds
negl
aad
xor
lcall
dec
push
lahf
jnp
mov
imul
std
andl
ret
pushf
in
and
lret
out
sbb
sbb
bound
scas
push
mov
lock
xor
hlt
cltd
cltd
push
addr16
movsb
push
push
ljmp
cmp
fs
and
aas
adc
scas
test
jg
push
xchg
andl
inc
sarb
gs
sbb
dec
and
ja
pop
sbb
shll
and
jno
dec
testb
loope
arpl
arpl
cmp
addb
out
outsl
out
cmp
dec
pop
iret
daa
pop
decl
jb
mov
popl
lds
movsb
fisttpl
push
cld
inc
mov
dec
enter
mov
adc
js
call
jne
push
sbb
inc
in
sub
pop
and
jle
call
cmp
cmc
movsl
or
scas
dec
fsubrs
push
hlt
mov
mov
call
jl
shrl
mov
test
or
std
jo,pn
or
shlb
movsb
lret
adc
jmp
cmp
dec
or
orb
test
in
sbb
and
jnp
dec
sub
xor
lods
xchg
data16
fdivrl
adc
fistl
dec
cmp
enter
xlat
jo
mov
ret
push
add
xchg
data16
cmp
push
out
scas
dec
push
fs
test
mov
sbbb
popl
repz
push
mov
sahf
mov
sub
je
pop
aad
mov
sub
cltd
xor
sbb
in
pop
js
hlt
gs
lea
push
fs
push
pop
lcall
ds
imul
pop
ss
add
add
vpaddsw
inc
xchg
sbb
loope
insl
sarb
sbb
pop
mov
pop
sbb
sub
stc
mov
inc
mov
cmpsl
xor
mov
cli
sbbl
sti
push
and
cmp
xor
cmp
dec
sbb
jb
xchg
jns
aaa
xchg
repz
adc
clc
faddl
out
jl
addr16
call
insl
pop
sarl
xor
aam
adc
movsl
add
mov
out
mov
inc
sbb
outsl
dec
clc
mov
ror
pop
jne
js
stos
lret
imul
cmp
stos
xor
adc
int
orb
jnp
adcb
outsl
outsb
and
int3
xchg
add
xor
push
cmp
arpl
xor
dec
push
in
cld
add
scas
addr16
or
lahf
hlt
movsb
cmp
pop
insb
sub
out
and
dec
mov
test
test
jg
dec
inc
inc
mov
push
push
addr16
jge
mov
in
pop
loop
scas
out
pop
fst
int3
popa
imul
cmpsb
test
lahf
inc
dec
sub
mov
rcrb
mov
and
pop
pop
fwait
mov
loop
pusha
mov
lds
dec
fs
lea
dec
aas
xor
popf
sarl
ds
cli
jb
js
shl
es
in
jo
sbb
cmp
and
push
cmp
mov
and
stc
xchg
cltd
lcall
gs
mov
test
jnp
xor
or
inc
push
sbb
add
inc
adc
hlt
jo
pop
sub
fwait
pop
mov
fcompl
xchg
loop
sbb
ljmp
add
cwtl
es
pop
sti
insl
xchg
fsubrs
and
and
addr16
addl
or
xchg
adc
enter
inc
dec
out
scas
mov
mov
xor
inc
dec
add
xor
inc
mov
cmpsl
add
out
sub
mov
sbb
lods
test
fcmovnb
pop
lcall
popf
mov
insb
cltd
add
and
mov
jecxz
in
or
adc
into
repnz
inc
inc
outsl
add
add
jg
push
dec
jb
idiv
loop
dec
lods
aad
inc
mov
dec
sbb
jo
push
cmc
std
mov
inc
lds
mov
or
xchg
pop
jbe
xchg
test
sbb
pop
test
sub
mov
cli
push
inc
inc
mov
aas
and
les
mov
enter
jecxz
mov
inc
pop
mov
xchg
mov
lret
mov
push
xor
fdivrs
adc
subb
and
push
lret
addl
mov
repz
mul
cmc
imul
jge
les
jno
cwtl
and
mov
aad
icebp
add
es
or
xlat
push
xor
cmc
movsb
call
jo
xor
int3
out
jb
mov
cmp
push
adc
mov
aaa
push
dec
sbb
push
mov
sbb
iret
sbb
inc
in
mov
jne
xchg
sub
popa
jo
fxch
mov
popf
sarb
int
cmpb
inc
repnz
jae
pop
dec
adc
popa
add
xchg
inc
fs
jge
cmp
bound
popa
les
js
mov
clc
out
mov
adcb
cltd
add
pop
adc
scas
xchg
mov
xor
ret
inc
xchg
movsb
int3
dec
mov
dec
mov
mov
lds
mov
sbb
out
rorl
push
mov
jnp
add
sub
aad
pop
sbb
jns
jecxz
and
pop
add
iret
jp
pop
mov
test
xchg
push
jg
add
popf
mov
pop
push
add
leave
ret
ds
pop
mov
push
insb
dec
or
negl
jns
rcrl
xchg
scas
push
mov
pop
dec
push
popf
inc
popa
sbb
jb
pop
cwtl
outsb
inc
jle
sub
ret
mov
inc
fadds
adc
iret
ret
and
add
cmpsb
xchg
addr16
dec
mov
jb
jne
insb
push
scas
lock
sbb
xchg
imul
outsl
sbb
lret
fsubs
push
jae
movl
lods
xor
jae
int
mov
add
mov
cmpsb
jle
imul
dec
xchg
cmp
ds
and
rcr
pop
xchg
mov
bound
jne
jb
inc
es
aaa
jno
add
and
xchg
cmp
es
sbb
mov
sub
dec
inc
inc
sti
pop
es
rorl
mov
or
xchg
adcb
and
mov
sarw
inc
jno
jp
bound
fsubrl
insl
mov
pop
lock
cmpsl
mov
xor
xchg
mov
push
xor
movb
mov
cmpsb
jb
push
push
cli
out
jno
push
fwait
rorb
out
jge
pushf
fsts
inc
scas
xchg
lods
adc
ss
mov
sbb
rcrb
hlt
dec
insb
cmpsb
out
sbb
fwait
es
cmpsl
rcll
jnp
popa
rol
mov
imul
inc
fcompl
mov
cmp
int3
pop
jle
andl
lret
mov
ljmp
add
pop
call
movsl
mov
jne
fs
mov
mov
sbb
dec
sub
hlt
push
pop
jl
adc
sub
mov
fwait
aam
aaa
aad
add
shlb
bound
lds
shl
mov
cmpsl
lds
adc
gs
sub
loop
pop
pop
mov
aam
int
imul
in
test
and
xor
pop
mov
pop
jb
mov
test
jg
xchg
inc
fcmovne
data16
and
scas
mov
fidivrs
jo
ud1
dec
cltd
popl
xorl
out
sub
in
arpl
pop
mull
sub
jae
cmp
push
push
test
fisttps
jmp
add
push
stc
pop
mov
xchg
push
incb
jo
xchg
xor
dec
push
fistpl
fneni(8087
push
lds
loope
nop
and
shll
mov
xchg
fnstsw
cmp
ficoml
les
rep
imul
adc
and
or
push
mov
imul
mov
call
repnz
mov
dec
inc
xchg
push
cmc
mov
test
mov
mov
xchg
shlb
pop
fcoml
xor
aaa
mov
int3
add
pop
push
inc
xadd
jge
insb
mov
xchg
int
sahf
fnstsw
adc
xchg
jo
push
mov
hlt
or
cmp
stos
test
jmp
aaa
sbb
jnp
dec
jns
or
mov
in
push
pop
xlat
call
test
daa
hlt
into
int3
scas
cmpsl
nopl
pop
out
cmp
loopne
test
scas
pop
movsl
lahf
inc
push
cmp
adc
xchg
push
ret
mov
push
push
lods
xor
insb
push
mov
fwait
cltd
popl
in
sbb
dec
adc
push
adc
dec
mov
jb
mov
leave
int3
mov
xor
xor
les
mov
jge
insl
dec
fsubr
inc
mov
lcall
in
adc
mov
outsb
mov
stos
rol
sbbb
inc
imul
ret
jp
mov
imul
jb
pop
lods
ss
pusha
idivl
lea
in
jle
int3
xchg
mov
pop
cmp
test
inc
mov
sbb
sub
inc
and
aad
or
inc
and
adc
das
cmc
mov
add
fs
das
dec
mov
clc
mov
out
adc
cltd
sti
sbbb
pop
cld
addl
inc
mov
push
popf
int3
xchg
das
add
stc
adc
xchg
lods
les
and
push
aaa
push
fstl
in
cmp
test
add
inc
mov
cmp
enter
xchg
dec
inc
or
fsubr
add
inc
out
push
add
push
fildl
mov
xchg
xor
cmp
sbb
dec
jae
xor
pop
or
pop
jnp
sbb
jno
lahf
ret
inc
jl
pop
cmc
or
mov
fidivrs
cltd
mov
pop
in
call
cwtl
push
push
mov
rolb
add
ja
clc
add
xlat
push
call
sbb
dec
fs
pop
out
push
sbb
jg
mov
jge
ret
jle
lds
sbb
xchg
subl
mov
mov
int
pusha
lds
mov
fiaddl
fldt
dec
inc
imul
jge
not
add
mov
je
push
push
scas
mov
cmc
andl
xor
cmp
in
mov
adc
pop
dec
lock
in
call
faddl
ja
rcrb
mov
test
sub
mov
jge
cs
mov
add
lea
pop
shl
popf
clc
fistpll
fidivl
bound
xchg
lcall
call
mov
push
inc
imul
xchg
sahf
or
pusha
sub
jb
out
xchg
push
clc
or
jl
cmc
hlt
push
inc
test
je
stc
push
cmp
lret
push
shl
imul
sbb
xchg
cmpsl
or
inc
ret
sbb
sbb
loopne
mov
into
xchg
rcrb
push
jns
jnp
jnp
or
mov
test
inc
jb
stc
std
sub
and
and
adc
cmp
or
pop
movsl
mov
dec
orb
mov
das
push
mov
insb
mov
or
xor
repz
and
push
mov
xchg
fmuls
out
dec
or
int3
mov
jecxz
loop
adc
repnz
adc
jg
inc
jae
push
pop
push
lahf
push
nop
sub
lret
inc
push
xchg
jae
push
gs
in
mov
js
jp
jmp
insb
bound
fdivs
sub
imul
mov
xchg
negb
add
xchg
or
sub
fadds
jnp
pop
int
lods
aad
xlat
lods
lds
xchg
mov
jg
je
and
leave
in
pop
test
imul
fisttpl
fcmove
movsl
mov
test
mov
int3
int
and
cld
cs
xor
push
sbb
aad
ss
sbb
mov
into
rcr
sti
mov
jbe
push
cmp
or
push
std
movsl
mov
out
mov
sahf
addr16
sbb
arpl
ljmp
mov
sti
daa
icebp
out
out
pop
int
aad
ss
sahf
ja
aam
xor
jns
jae
out
xor
shl
sbb
sub
and
and
xor
ljmp
pop
icebp
pop
push
jae
dec
adc
ret
sub
stos
cmp
cs
ss
ja
mov
test
je
adc
cltd
dec
cmpsb
lock
add
push
add
push
inc
je
rorl
xchg
rorl
ret
mov
ja
inc
sub
cltd
call
out
scas
push
or
ja
inc
push
jmp
mov
aaa
in
in
bound
outsb
pusha
cmp
imul
cmp
pop
mov
outsb
lret
movsl
adc
mov
iret
jb
outsl
jge
std
movsl
push
lret
out
int3
pop
push
enter
xchg
aad
fnstenv
xor
cmpsb
rcrl
mov
mov
adc
sbb
ja
dec
fs
mov
jo
and
pop
test
push
std
add
pusha
mov
or
sbb
aaa
xchg
nop
pop
pop
inc
jo
in
repz
push
cltd
lahf
cmp
push
in
sbb
cmpsl
cmp
fnsave
lods
andb
gs
xor
add
stos
inc
xchg
adc
ret
rcll
push
int
jae
sbb
nop
xor
pop
inc
leave
cmp
push
sbb
leave
sahf
cli
shll
out
sub
repz
jl
test
mov
jle
cmp
in
add
into
or
lahf
in
cwtl
sub
rol
push
mov
fidivrs
inc
ds
shl
inc
les
arpl
lret
add
popa
jmp
push
xchg
adcl
pop
mov
mov
loopne
jp
pop
fld
or
sub
push
xor
enter
push
and
pushf
pop
xor
xchg
push
call
inc
scas
pushf
shl
insl
sarl
push
mov
mov
fcompl
into
pop
push
fisttpl
or
in
jle
out
inc
loop
call
xchg
xor
and
xchg
mov
dec
mov
dec
ljmp
xor
not
out
mov
sub
lret
scas
mov
or
adc
arpl
mov
mov
outsl
jb
mov
jp
mov
aas
mov
testl
add
jle
dec
nop
sbb
out
xlat
push
adcl
pop
repnz
ljmp
loop
mov
xchg
sub
adc
popf
jle
pop
jl
fistpl
push
ljmp
mov
inc
xor
sub
push
mov
mov
dec
xlat
mov
adc
subl
sbb
pop
mov
insl
sub
lcall
push
or
mov
in
xor
mov
mov
add
dec
pop
jne
into
inc
es
movsl
loopne
dec
sub
imul
in
pop
cmpsl
sub
aaa
jnp
js
sahf
jmp
and
inc
inc
xchg
adc
lods
push
dec
pop
jmp
cld
inc
nop
jnp
xchg
je
inc
adc
cmp
gs
jno
fisttpl
loop
rol
rclb
mov
jecxz
jmp
pop
and
gs
lock
mov
adc
std
inc
mov
in
inc
cmp
pop
ds
add
lea
les
mov
add
jmp
out
imul
pop
or
pop
popa
ja
ret
mov
sbb
fisttpl
pop
ffreep
lret
mov
scas
mov
and
ss
xor
xor
cmp
mov
imul
adcl
jle
mov
push
pop
adc
stc
cwtl
xchg
cltd
xor
sarb
jo
mov
sbb
mov
loopne
pushf
jno
jns
js
push
mov
pop
mov
mov
sub
hlt
into
xor
adc
mulb
fisttps
lahf
out
dec
cwtl
pop
addr16
jg
mov
jnp
std
push
mov
inc
into
sub
push
mov
mov
cwtl
out
mov
fsubr
clc
jg
mov
xchg
mov
inc
enter
xchg
lods
inc
cltd
je
or
scas
push
cmp
xchg
mov
adc
addr16
mov
jo
cld
jp
cmpsl
cmp
ss
mov
int
adc
outsb
add
adc
cwtl
sub
mov
scas
cld
jge
sbb
pushf
mov
inc
in
popa
add
mov
cmp
fadd
mov
cs
inc
mov
jl
xlat
jp
cmpsb
cltd
loop
not
jg
dec
jae
and
in
or
jo
xor
xchg
aas
lock
mov
out
popf
ljmp
adc
dec
inc
adc
mov
xchg
outsl
aad
enter
bound
mov
or
xlat
popa
arpl
xchg
push
ret
sub
inc
add
cmpsl
lret
cwtl
and
dec
or
daa
sub
jnp
or
enter
jl
cmpsl
add
sbb
mov
push
cltd
and
mov
lret
and
pop
pop
in
inc
sti
push
fstps
add
repz
test
frstor
shl
in
sbb
movsb
push
jle
lret
lcall
jb
adc
sub
loope
lret
pop
shrb
inc
scas
xchg
xor
shr
inc
lahf
sub
enter
leave
xchg
je
adc
loope
add
xchg
xor
jbe
cmc
sub
test
dec
fwait
mov
lods
shlb
cli
ss
xchg
int3
xchg
popa
sbb
pop
ja
jbe
cltd
lea
scas
mov
orb
ss
sbb
dec
cmp
aas
sbb
mov
mov
pop
loop
shl
jnp
adc
pop
shl
add
cmp
fnstcw
shl
fs
out
adc
aam
mov
dec
adc
outsl
mov
adc
lret
inc
jno
mov
fsubrl
or
xor
pop
push
imulb
mov
test
je
cmpl
out
pop
repz
fldenv
fsubr
mov
jl
ret
or
rolb
in
push
nop
cltd
jnp
bound
xor
mov
loope
and
outsb
dec
in
mov
cmp
cmpsb
xor
dec
cmpsl
ds
push
jb
nop
shlb
jg
sbb
test
fyl2xp1
cltd
mov
mov
mov
xor
xor
or
into
xchg
jge
push
xlat
dec
cmp
adc
sub
xorb
test
mov
push
inc
mov
adc
mov
adc
clc
fldenv
xor
cmp
imul
cmp
cmc
out
stos
and
sub
scas
outsb
out
or
push
jl
sub
adc
movsl
aad
insb
inc
in
mov
pop
mov
xlat
jp
cld
sub
cmp
sahf
sub
pop
dec
inc
or
pop
or
hlt
inc
jo
or
std
adc
or
cwtl
adc
or
pusha
sbb
xor
dec
or
mov
xchg
adc
sbb
sbb
shl
sti
xor
enter
inc
dec
cmpsb
loope
jl
cltd
icebp
xchg
inc
jbe
test
xchg
mov
fnsave
adc
jo
jae
fiaddl
cwtl
jae
mov
mov
mov
ficoms
mov
imul
push
mov
shrl
push
or
ja
cltd
call
jbe
dec
aaa
cmp
push
roll
ror
adc
ret
test
lcall
push
inc
jb
mov
cmpsb
push
outsb
inc
and
arpl
mov
inc
add
subl
mov
movsl
jae
push
stc
xchg
and
jb
mov
stc
push
cltd
pop
cmp
jo
or
sub
mov
mov
mov
loop
xor
sub
iret
jo
pop
mov
cld
popf
or
push
mov
fisttpll
mov
in
test
les
fwait
aad
xor
push
push
dec
and
inc
add
sbb
ja
test
stos
test
mov
jecxz
sbb
mov
sti
lret
mov
in
cmc
stos
lcall
andb
xchg
xorb
es
sub
and
andb
and
xchg
jle
sahf
lods
loope
sub
jo
das
je
mov
shl
lcall
push
push
cmovge
add
insb
xchg
xor
pop
gs
push
aaa
arpl
cltd
and
sbb
ret
dec
imul
pop
nop
push
into
subl
jnp
or
orl
mov
mov
mov
cmpsb
jmp
pop
and
cli
adc
pop
add
and
xchg
mov
add
lret
adc
lahf
push
inc
xchg
arpl
cs
sti
fsubr
xchg
fistl
faddl
les
sub
cld
jo
mov
push
mov
insb
sti
notb
mov
ljmp
popf
imul
jl
push
decb
xchg
mov
cmpsl
pop
std
and
push
int
lds
pop
lods
pop
cmp
shl
push
ret
jno
inc
add
mov
scas
sub
sbb
xchg
pushf
ret
loop
add
mov
fisubs
movl
mov
aas
mov
dec
fldl
xchg
inc
outsl
sub
adc
mov
pop
add
pop
je
mov
or
jmp
or
xor
adc
push
add
xor
lods
mov
inc
mov
mov
mov
out
mov
sbb
lret
fistps
in
push
test
cmpsl
xor
sar
fs
insl
inc
push
sub
std
push
push
push
repz
subb
xchg
clc
push
or
push
mov
jbe
add
inc
sbb
out
jns
movsb
sbb
or
cltd
inc
popa
push
lahf
add
sti
les
cld
inc
lcall
pop
lcall
inc
shlb
jo
popf
out
mov
ds
jb
idivl
in
mov
cltd
and
mov
arpl
addr16
mov
pop
xor
int3
sbb
nop
cmp
mov
das
sarl
pop
xor
lcall
xor
test
push
cmp
or
xorl
jae
and
push
mov
add
pop
stc
pop
hlt
sub
lret
xor
movsb
in
daa
xchg
xor
inc
fdivr
cmp
lods
or
bound
adc
jp
sbb
in
push
outsl
cmpsb
pop
pop
jge
popf
out
dec
scas
inc
mov
lret
push
sub
les
outsl
sbb
cwtl
cld
adcl
or
repnz
iret
pop
ret
in
mov
mov
call
imull
cltd
push
add
rcl
inc
add
or
scas
and
out
fucom
inc
lret
and
xor
xchg
std
shl
fildl
cwtl
test
inc
dec
push
xchg
jle
fidivl
cmpsl
xor
xchg
push
jno
subb
pop
pop
repnz
xchg
stc
sub
cmc
dec
movsb
add
inc
xlat
lahf
jg
movsb
in
repnz
or
clc
pop
shl
jnp
subb
call
sbb
lods
sbb
loope
xor
add
ss
pop
jnp
out
cmp
push
lea
shlb
mov
out
popf
xchg
icebp
aaa
imul
xchg
sbb
push
in
jg
nop
mov
push
bnd
and
and
jp
xor
and
inc
and
push
iret
lret
lret
repz
fs
mov
aas
push
ja
iret
inc
popf
mov
dec
daa
push
fisttps
dec
fisubrs
xchg
mov
xchg
jecxz
pop
popa
xchg
dec
gs
notl
call
daa
xor
sub
mov
outsl
sbb
xchg
scas
inc
sub
and
jmp
and
xchg
outsb
jne
test
push
jb
cmpsl
test
fldcw
or
into
jo
rcrb
loope
ret
add
sahf
and
je
pop
and
push
jns
and
xchg
out
rcll
sbb
jno
add
and
lret
push
push
iret
inc
and
pusha
mov
insl
push
test
pop
jmp
and
pop
mov
pop
cwtl
ret
add
or
mov
popa
out
testb
int
aas
arpl
push
movsb
and
repnz
dec
fldt
out
jbe
arpl
jge
cmpsb
inc
aam
jmp
hlt
xor
out
dec
outsb
cmp
int3
movsl
and
out
add
xchg
mov
pop
or
xor
pusha
xor
adc
in
scas
leave
bnd
lahf
into
pop
and
jmp
repnz
add
and
adc
ret
pop
pop
mov
sub
pop
stos
test
xchg
xor
xchg
mov
ret
out
cli
mov
mov
in
xor
cmp
dec
into
xor
fistpl
push
out
ds
fdivrp
loopne
incl
adc
or
mov
aas
int3
mov
mov
into
mov
out
jp
xor
mov
lret
loope
mov
xchg
ds
fadds
mov
lret
push
cs
mov
sbb
cmp
jl
push
mov
xor
mov
push
xchg
aam
repnz
jo
out
aad
mov
mov
scas
popf
xchg
in
popf
push
or
cltd
adc
dec
lsl
ja
add
out
pop
ljmp
xor
insl
add
js
insb
and
aaa
sub
shrl
pop
inc
adc
and
outsl
pop
xor
inc
divb
insl
jnp
mov
call
push
test
sbbl
push
adc
out
xchg
dec
adc
addb
dec
mov
enter
insl
jnp
es
pop
mov
in
int3
mov
rcrb
cmp
lahf
into
push
sbb
pop
inc
pop
rclb
jbe
shll
rol
in
or
enter
aam
iret
jg
xchg
enter
adc
sbb
xor
mov
mov
jmp
add
cmp
xor
shlb
imul
das
and
or
dec
jp
sbb
lret
repnz
xchg
addr16
mov
stc
pop
pop
mov
fistpl
insb
cs
in
mov
pop
jbe
cltd
mov
popf
jnp
stos
xchg
nop
sahf
mov
push
jp
aaa
push
push
push
xchg
insb
mov
out
inc
xchg
maskmovq
notl
in
test
push
or
pop
xchg
cmpsb
divl
movsb
mov
sbb
pushf
cmpsl
xor
cmp
pop
cltd
and
stos
popa
dec
jl
sub
lahf
jbe
jmp
mov
mov
add
lea
inc
push
fdiv
bound
and
xchg
mov
fdivr
xor
enter
inc
fnsave
cltd
add
mulb
ret
sub
sbb
sbb
sub
test
lds
fnsave
pop
fucomip
dec
sbb
sub
add
divb
cmpsb
xchg
daa
shll
dec
jg
mov
test
xchg
lods
jne
sti
les
adc
lret
mov
fimull
pop
mov
push
jg
adc
inc
inc
push
test
loopne
or
sbb
or
movsb
cmpsl
cli
push
out
lahf
std
jmp
jmp
push
fbstp
enter
or
push
clc
push
mov
adc
inc
pop
imul
mov
adc
fnstsw
in
mov
icebp
adc
adc
les
mov
jbe
fdivl
les
je
adc
fstpl
test
daa
jle
and
cmpsl
cltd
cwtl
jne
rolb
lods
mov
sbb
or
sbb
jp
push
mov
or
dec
jg
dec
or
xchg
and
cmp
push
insl
xchg
scas
cmpsb
jge,pt
mov
mov
jnp,pt
nop
xor
inc
cs
es
rcrb
add
es
mov
sbb
push
mov
mov
xchg
cmp
movsl
repz
je
jo
fbstp
cmpsb
add
sbb
xchg
push
mov
cmc
inc
jle
sub
or
add
adcl
fcomp
lods
fwait
idivl
mov
sub
mov
ljmp
mulb
movsb
mov
cs
and
dec
and
or
dec
test
scas
orl
xchg
pop
int3
pop
sarl
int
jae
mov
lret
test
mov
out
movb
mov
lods
sahf
cmp
fstpt
cwtl
in
xor
push
lahf
adc
sbb
and
into
icebp
pop
daa
pop
jno
popa
lret
mov
inc
fdivp
dec
iret
mov
mov
int
xor
push
shl
and
and
ljmp
daa
aaa
pop
push
popl
or
cltd
int3
pop
inc
in
sahf
in
pop
int
dec
bound
pop
pop
add
inc
fcomip
dec
inc
pop
daa
mov
mov
mov
and
sub
andl
pop
inc
insl
jmp
lds
addl
mov
jbe
ficoml
adc
add
stos
add
mov
shr
repz
shrb
adc
jb
rcll
cs
cmp
sub
mov
gs
pop
inc
enter
and
mov
push
and
cmc
clc
and
out
rcll
xor
mov
shll
inc
jae
xorl
cltd
add
repnz
jle
movsl
xchg
push
adc
insb
push
pop
aas
rcrl
or
loope
pop
cs
mov
jb
out
adc
addr16
jmp
fcoms
into
imull
xchg
jl
insb
loop
xchg
mov
sub
aad
adc
nop
mov
mov
dec
mov
cwtl
gs
add
inc
cltd
cmc
enter
mov
push
pop
addr16
jns
push
repz
mov
js
stc
mov
jbe
fldenv
inc
enter
hlt
add
nop
cwtl
into
sti
movsl
mov
dec
jge
sahf
cld
cmpsl
popa
mov
pop
mov
cli
cmpsl
push
jl
pop
imul
cwtl
fimuls
cmp
xorl
cld
jl
xor
pop
shlb
lret
cmp
pop
test
jge
mov
push
cltd
dec
aam
pushf
repz
xor
dec
les
push
cltd
fs
cltd
push
mov
in
in
push
mov
in
rcr
jg
mov
aas
js
in
push
dec
shl
mov
int3
mov
bound
arpl
push
fwait
sbb
xchg
xor
inc
sbb
mov
lahf
aam
sub
loopne
mov
xchg
addr16
cs
rcrb
add
div
or
jecxz
jne
pop
dec
lock
mov
aaa
scas
ret
fsubrs
out
mov
dec
out
fldl
adc
lcall
stos
orl
addr16
mov
mov
mov
jg
scas
add
enter
push
pop
dec
bound
fcoml
lods
cmp
xchg
lods
cmpl
addb
mov
sarb
cmp
and
xor
repz
jle
sbb
jo
jle
pusha
cmp
fsubr
mov
xchg
mov
outsl
imul
dec
fisubrs
imulb
es
xor
adc
jmp
dec
ljmp
inc
out
mov
and
pop
xchg
arpl
orb
movsl
add
jp
cmpl
cmpsb
mov
in
mov
into
ret
sahf
mov
shrb
add
sahf
cwtl
fimull
in
pushf
cli
lret
jle
push
push
rclb
mov
fwait
sbb
and
aaa
push
hlt
jbe
inc
and
bound
xorb
pop
loopne
insb
xchg
das
xorb
or
dec
fimull
adc
pop
cwtl
cmp
orb
icebp
fistpll
div
cld
jp
or
ja
sbb
iretw
adc
mov
movsl
icebp
pop
push
das
lods
mov
mov
leave
les
mov
jno
cmpsb
jl,pt
aaa
fnstenv
xchg
or
or
ds
and
lret
fldl
cmp
or
enter
int3
sbb
jne
pop
cltd
addr16
xchg
incb
rcr
subl
pushf
cmp
imul
imull
imul
fstp
xor
fldenv
stos
ret
push
mov
lock
shr
sub
xor
mov
jne
cmp
test
arpl
lahf
add
inc
aaa
mov
fidivs
sti
push
inc
xchg
jne
dec
mov
cli
xor
pushf
push
sbb
andl
push
add
out
push
rcll
add
jg
push
push
sub
jmp
sub
xor
inc
mov
add
mov
scas
mov
xchg
jp
adc
in
cmp
iret
arpl
cld
ja
test
movsl
jae
in
aas
mov
les
adc
arpl
adcl
pop
fidivrl
repnz
mov
aaa
fsubs
stos
fdiv
in
scas
mov
fadd
fsubrs
xor
flds
jns
mov
jmp
add
rorl
and
loope
xor
sti
jne
in
movsl
aas
xchg
leave
loopne
lock
outsl
push
mov
and
es
divb
stos
into
ficoml
lret
int
jns
jae
lods
scas
call
repz
sub
lds
rcrl
loopne
imul
sub
ficoml
jo
pop
je
xor
mov
mov
jae
sbbl
push
push
dec
jae
lds
imul
test
std
fisttpl
fistps
jg
push
push
sbb
ds
ret
aaa
jmp
fidivs
ljmp
sub
push
push
cmp
or
insl
roll
mov
aas
repnz
test
push
xchg
add
add
mov
or
shr
hlt
add
int3
mov
addr16
sub
pop
aaa
sub
xor
test
pop
fs
lahf
imul
jnp
push
lods
pop
sbb
xchg
clc
sbb
sahf
mov
repnz
ficomps
jle
push
shrl
dec
inc
pop
loopne
imul
mov
xor
mov
jge
inc
daa
and
popf
loopne
movb
and
xor
nop
mov
js
movsl
into
jnp
dec
cmp
xor
insb
mov
fwait
sub
mov
in
sbbb
push
sub
push
mov
or
lahf
and
lea
loope
ds
inc
jae
cli
sub
sbbl
movsb
pop
cmp
dec
add
add
lods
addb
cwtl
add
hlt
shlb
ja
or
testb
loope
pop
or
or
jo
enter
jnp
sub
push
jp
aad
inc
lcall
push
aaa
or
shrl
and
pop
push
mov
sbb
xor
bnd
js
hlt
jmp
push
test
addl
les
pop
adc
push
pop
ja
and
sub
sub
inc
mov
jns
iret
les
jg
mov
pop
out
inc
inc
mov
repnz
les
into
js
jp
mov
mov
outsb
cmp
sete
jo
aaa
bound
cmpb
or
jae
ljmp
adc
rcrl
mov
xor
sub
inc
push
jo
insb
mov
or
jl
and
in
rorb
sti
add
jbe
in
inc
iret
adc
popa
jle
stc
cmp
push
out
push
jmp
out
out
pushf
xchg
dec
sbb
rcr
xor
mov
xor
out
push
and
jne
iret
fsts
lcall
aad
arpl
scas
sahf
aas
lret
lea
fbld
fcmovu
btsl
mov
push
cmpsl
ss
cmp
leave
inc
inc
je
mov
mov
sahf
xchg
add
aad
cmp
inc
dec
fldenv
idiv
mov
in
xchg
jmp
mov
mov
mov
mov
lock
sbb
test
jp
in
push
add
mov
jo
movsb
stos
insl
ljmp
sbb
or
test
sbb
xchg
add
clc
add
mov
shrb
mov
call
mov
lock
test
xor
and
loopne
jne
sbb
iret
xor
jne
jle
mov
les
jmp
sbb
lret
ljmp
faddl
adc
and
loopne
xor
sbb
lcall
cli
mov
les
incl
cmp
sub
aaa
cmp
pop
pop
dec
testl
xor
adc
cmp
jecxz
push
xor
mov
mov
push
xlat
push
pop
data16
clc
fs
scas
movsl
adc
mov
mov
outsb
push
insb
test
cld
js
stc
hlt
xchg
mov
push
imul
insl
cmpsb
loop
mov
cwtl
lock
jge
test
xor
jmp
daa
pop
fnsave
inc
inc
xchg
movsl
cmp
sarl
sub
xor
push
cli
das
in
inc
add
pop
lea
out
mov
adc
sub
aam
or
out
into
les
nop
aam
add
imul
push
in
cwtl
mov
and
ss
mov
push
mov
jnp
loope
add
inc
jne
fwait
xchg
test
aas
mov
adcb
mov
adc
mov
jne
jno
stos
jno
daa
dec
push
cmc
cltd
aas
fwait
imul
cmp
or
adc
pop
and
xlat
cmp
mov
shl
mov
out
push
pop
leave
ret
hlt
jmp
mov
cmpsl
adc
add
cli
add
outsb
xchg
out
rorl
push
jg
sub
mov
rclb
test
ret
fidivs
decb
push
mov
idiv
fs
imul
scas
xchg
aad
pusha
ret
mov
movsb
cwtl
sub
popf
subb
dec
rorb
enter
pop
xchg
scas
les
addr16
outsb
adc
adc
fcmove
lea
jmp
insb
ds
sbb
mov
inc
ja
into
test
loope
fdivrs
test
int3
and
xchg
pop
std
mov
mov
fnstsw
sbb
arpl
fs
fwait
ljmp
or
cs
adc
add
sub
inc
mov
mov
sbb
cmp
popa
cli
call
push
mov
out
mov
jo
pop
or
pop
xor
mov
mov
sub
adc
sbb
jne
das
clc
dec
pop
jl
das
aaa
push
push
xchg
add
xchg
and
add
es
aas
cmp
add
fcos
outsb
les
dec
push
or
dec
out
and
dec
adc
insb
nop
pop
cmpsl
mov
adc
mov
fiadds
pop
outsb
inc
cmc
pushf
pusha
xchg
sbb
mov
imul
cmp
dec
hlt
and
or
pop
push
lahf
dec
sbb
sti
and
clc
add
iret
imul
or
jp
mov
loopne
mov
jl
sahf
and
dec
sbbl
sbbb
in
jb
pop
mov
add
jbe
sti
lock
inc
cmp
out
in
mov
xchg
pop
inc
pop
fcompl
sbb
sbb
mov
xor
mov
cmp
pop
or
cmp
or
inc
sbb
adc
pop
and
jge
or
push
cmp
lock
add
adc
sbb
mov
subl
bound
xchg
and
sbb
inc
xchg
dec
fidivs
cmp
lea
adcb
pop
test
sahf
mov
mov
and
mov
iret
mov
mov
mov
jg
xorl
out
adc
loopne
push
push
repnz
mov
and
sti
pop
push
add
xor
or
ljmp
cmp
and
sbb
dec
mov
mov
sbb
xchg
out
mov
or
push
sbb
test
mov
push
fnstcw
pop
outsl
dec
hlt
cli
and
leave
add
sub
ds
adc
mov
dec
inc
pushf
jb
dec
jns
fildl
pop
sub
sbb
test
jle
pop
pop
cld
scas
jmp
adc
test
into
mov
icebp
das
mov
scas
push
sub
rorl
dec
aad
and
aam
mov
insb
cld
div
adc
mov
ljmp
dec
fmuls
cli
cli
lds
cmpsb
andb
mov
mov
shrl
jmp
cmp
mov
shl
nop
scas
push
loopne
jno
popf
mov
sbb
loop
insb
clc
xchg
test
enter
imul
jmp
sahf
mov
rorb
ffreep
jle
pop
dec
fwait
pop
fimuls
lds
rcrb
lock
and
push
inc
movsb
pop
jecxz
out
out
pop
and
movsl
or
pop
xchg
dec
lcall
incb
adc
into
aam
in
sbb
push
ret
xchg
loope
test
lds
cltd
fldl
pop
in
cmp
sahf
shr
pop
sub
add
loop
movsl
dec
in
dec
adc
ret
mov
dec
movsl
adc
mov
ja
inc
fdivrs
sbb
imul
xor
and
mov
or
subb
stc
lret
loopne
cmp
cltd
push
and
jle
mov
add
insb
lock
hlt
jnp
in
push
pop
rorl
pop
xchg
ja
jne
add
imul
sbb
and
xchg
pop
push
call
lret
cmp
mov
icebp
fs
pop
stos
enter
jl
mov
inc
sub
test
or
leave
mov
lcall
cmpsl
cmp
mov
push
out
shrb
scas
icebp
mov
or
pop
mov
movsl
mov
push
xor
mov
dec
movsl
ss
outsl
cwtl
jne
sbbl
mov
mov
shr
xchg
push
mov
inc
push
jl
mov
clc
movsl
fwait
or
cli
leave
in
cld
push
call
jno
adc
leave
add
xchg
cmpsb
fwait
sbb
and
and
loope
out
test
push
lahf
or
outsb
jg
push
fstpl
mov
push
mov
pop
aad
mov
shll
mov
cli
add
xor
or
pop
cmp
test
jo
jo
jmp
mov
int3
xchg
xchg
cmpsb
out
les
cmp
movsl
jb
pop
ljmp
push
sbb
dec
rcr
xlat
shl
aad
loopne
jb
push
mov
fcoml
pusha
aas
incb
fdiv
mov
pop
mov
aas
outsb
pop
or
xchg
cmpl
dec
outsl
rsm
push
cmpsl
push
mov
sub
int3
dec
in
loope
or
fistps
iret
xchg
adc
lahf
test
test
cmc
adc
ret
leave
mov
mov
push
popa
lahf
into
scas
mov
pushf
inc
bound
cmp
pop
data16
inc
mov
adc
cwtl
ror
mov
add
hlt
pusha
adc
mov
in
mov
movsl
dec
inc
pop
sub
nopl
pop
add
rorb
adc
cmpsl
dec
enter
lcall
daa
sbb
pop
ret
mov
movsl
xchg
jbe
lods
stos
or
push
sahf
jle
mov
sarb
inc
sbb
aam
mov
jmp
or
push
fildll
push
push
mov
mov
aas
aad
mov
out
and
push
jmp
cmp
pop
ficomps
not
popf
mov
fimuls
xchg
inc
out
outsb
push
popf
mov
sti
mov
pop
add
outsb
inc
xchg
pop
sti
fsubrl
lock
mov
popa
add
push
jnp
mov
es
mov
sbb
scas
sub
push
push
pop
rcrl
pop
xchg
aaa
dec
mov
add
out
or
pop
pop
mov
cmpsl
scas
lods
das
or
mov
mov
ss
mov
jmp
mov
ficoml
push
cs
inc
inc
inc
sbb
loopne
insb
in
shl
dec
bound
xor
fcoml
mov
and
inc
ret
push
pop
add
push
inc
jecxz
mov
inc
loopne
je
fstps
and
jg
lock
push
outsl
jnp
jne
jl
push
pusha
xchg
mov
test
pop
loopne
pop
mov
daa
insb
loopne
sub
sbb
inc
les
push
mov
push
sbbb
lret
xor
movsb
xchg
push
mov
outsb
mov
stos
stos
cmp
xor
jne
mov
inc
lcall
jle
or
lods
insb
sahf
mov
shrl
loop
sub
aas
pushf
cld
mov
pusha
leave
out
fcompl
mov
adc
cmp
shl
dec
mov
xchg
adc
popf
mov
clc
mov
shrl
adc
xchg
jnp
ret
inc
scas
pop
adc
fsub
idivl
mov
pusha
jno
xor
and
std
lods
inc
jmp
jbe
loope
cmp
ficomps
sub
lahf
add
dec
inc
pop
pop
mov
mov
aam
push
dec
sar
sub
scas
nop
dec
adcl
clc
fsin
arpl
mov
or
stos
xor
xor
js
xchg
pop
ret
pop
pop
or
loop
or
loopne
mov
mov
loopne
fists
daa
call
mov
in
or
leave
mov
repnz
push
shrl
rcr
xchg
or
sub
cmpsb
insb
je
or
sbb
push
xor
pop
stos
imul
daa
lret
jne
add
scas
cmp
shll
movsl
lret
mov
ret
enter
mov
mov
mov
mov
aad
jb
fsubl
mov
insl
repnz
pusha
aam
push
pop
cld
sbb
pop
mov
fldenv
int
in
adc
xor
ret
mov
cmp
dec
insb
and
or
and
cli
outsb
push
fbld
mov
xor
imul
push
mov
stos
inc
xchg
lock
sub
lret
mov
mov
lret
cltd
rorb
stc
in
cmp
mov
lods
fldl
fcomps
cld
jle
xor
push
lods
dec
sub
push
xor
lods
push
pop
push
test
mov
jns
push
and
lock
mov
popf
push
and
xchg
in
push
lcall
push
push
xorl
or
sub
loop
sbb
aas
into
bound
sbb
lret
jnp
movsb
add
ss
push
aam
mov
adc
dec
je
cmp
sbb
ljmp
pop
pusha
int
push
lock
sub
mov
in
clc
rol
icebp
push
mov
mov
and
subl
and
subb
xor
icebp
mov
popa
jg
mov
xchg
cmpsb
cmp
jge
cmp
ljmp
in
idiv
xchg
pop
dec
data16
sub
sbb
dec
mov
or
add
mov
mov
jl
or
dec
pop
movsb
test
or
ja
jb
sbb
mov
jns
cmp
roll
sbb
inc
scas
test
add
neg
mov
jb
adc
mov
and
mov
jp
test
pop
mov
inc
pusha
lret
mov
mov
xchg
shlb
out
jns
sbb
add
push
push
mov
dec
in
sub
in
adc
rolb
fidivl
or
lods
mov
out
pop
pop
ss
add
mov
sbb
fs
mov
xor
fisubrs
dec
iret
or
or
push
push
pop
iret
inc
jl
stos
xor
adc
pop
inc
mov
pop
pop
out
push
into
pushf
xor
add
mov
and
mov
dec
xchg
fistps
cmpsb
rep
dec
fcomi
lods
addr16
loopne
sbb
push
adc
fwait
int
lods
push
enter
jb
cmp
addb
add
adc
add
pop
inc
xchg
insb
in
sbb
sbb
sbbb
loop
cmp
pushf
notb
addr16
sarl
sub
push
in
in
mov
inc
out
jo
cld
jle
test
imul
pop
inc
lahf
cmp
sbb
xchg
sub
inc
cmp
push
fisttpll
adc
lea
repnz
test
test
pop
pop
xlat
in
out
push
js
insb
mov
jge
push
fldt
xchg
or
lods
dec
test
adc
sbb
adc
neg
scas
dec
mov
pushf
sub
mov
mov
rol
cli
push
mov
data16
push
es
imul
sub
sahf
lea
or
mov
cmc
xchg
fucom
xchg
xchg
loopne
mov
stos
jmp
cltd
je
testl
push
mov
or
sbb
sub
in
xor
xchg
fcomps
stos
push
gs
xchg
mull
add
aam
push
xchg
ret
imul
pop
repz
ds
addr16
filds
or
jmp
shl
and
mov
lods
push
roll
inc
cmp
xor
sub
lret
leave
bound
sub
sub
test
xor
lret
addb
mov
jno
scas
arpl
pop
jl
les
sbb
sbb
int
pop
mov
in
xchg
mov
and
outsl
mov
mov
mov
stos
subb
pop
pop
push
shrl
in
sub
movsl
xor
or
arpl
out
jae
inc
cld
in
jle
xchg
add
lcall
mov
test
data16
push
xchg
popa
cmp
daa
fcoml
mov
pop
xchg
arpl
inc
mov
mov
pop
mov
adc
mov
cld
popa
rcrb
push
cs
mov
and
stc
scas
in
mov
inc
mov
fcoms
adc
pop
fldcw
cmp
out
fsubrl
shrb
xor
pop
xor
xor
aam
cmp
ret
fsubp
inc
add
and
into
in
fdivr
jno
call
mov
lock
adc
lret
push
scas
enter
mov
lds
mov
fists
jbe
jmp
icebp
pop
pop
pop
mov
scas
inc
out
push
or
bound
ficoml
gs
jbe
cmp
lcall
mov
add
push
xor
movsb
leave
xor
push
cltd
jg
xlat
xor
adc
arpl
in
cmp
and
or
loope
and
add
xchg
lock
xor
xchg
push
loopne
bound
dec
fdivl
cmpsl
dec
push
fidivrl
repz
fstl
cmovg
xor
adc
mov
pop
mov
loope
jno
clc
sbb
add
jnp
cmp
jbe
or
addr16
cltd
sub
lods
cs
lea
filds
or
cmp
test
push
cmp
xor
cltd
loop
inc
arpl
sub
mov
mov
movsb
push
in
nop
push
es
pop
idivl
sbb
sub
pop
clc
fisubrs
inc
sub
test
push
inc
das
pushl
lcall
cmp
sub
mov
sbb
pop
push
mov
stos
jno
imul
sub
push
cmp
aad
orl
aad
mov
gs
mov
mov
dec
cld
mov
sbb
cmp
ss
insl
dec
add
lret
add
repnz
cli
jne
fs
xor
mov
stc
mov
mov
xchg
mov
mov
sbb
push
add
sti
mov
push
sti
test
cmp
es
jmp
imul
and
insl
inc
cli
xchg
lret
fdivrl
sub
dec
fs
mov
jnp
js
std
stc
or
rolb
out
push
je
xor
cmpsb
sar
sahf
mov
sub
movsl
bound
jecxz
sti
repnz
mov
sbb
enterw
arpl
arpl
mov
and
sbb
fimull
mov
pop
gs
std
iret
inc
xchg
cli
fwait
cmpsb
inc
adc
fst
daa
lret
jne
sub
addl
cs
inc
adc
jmp
test
pop
loop
mov
cwtl
push
push
fmul
notb
mov
xchg
lds
or
mov
jmp
lds
or
ret
lcall
pop
cwtl
push
pushf
mov
fwait
setl
sbb
and
mov
inc
cmp
sahf
add
jo
cli
sbb
flds
jb
sbb
cli
out
ja
pop
mov
inc
mov
pop
cs
mov
jne
lahf
xlat
in
nop
cs
fwait
call
cmc
xor
out
jp
hlt
popa
sub
jge
ljmp
jae
or
bound
rolb
sti
mov
cld
fildl
insl
mov
xchg
cmpb
ret
adc
popa
fisubrs
pop
jge
sub
mov
cmp
jecxz
test
ss
push
aad
mov
push
add
mov
pop
jmp
out
out
push
push
mov
imul
in
mov
stc
jns
mov
test
xor
jne
fidivs
dec
fwait
rcl
and
in
in
mov
xor
and
bound
jae
dec
mov
out
cmc
sub
test
faddl
lea
sub
into
stos
ja
sub
sahf
cmp
movsb
xor
mov
pop
mov
out
mov
jmp
adc
cmp
push
leave
out
dec
outsl
pop
mov
enter
stos
inc
pop
test
add
lods
leave
jg
mov
test
mov
nop
lahf
cwtl
lret
rorl
push
mov
sub
int3
cmp
testl
mull
fnsave
sub
or
ret
push
rcrl
push
cld
call
push
lea
push
ret
out
mov
add
sub
pushf
xchg
inc
add
mov
dec
pop
rclb
ljmp
sub
adc
cmp
ja
aam
xor
and
imul
cmp
dec
xchg
rorl
jne
push
mov
inc
aam
jnp
arpl
mov
sub
pshufw
bound
out
mov
cmp
adc
ja
mov
pop
icebp
std
loope
ljmp
loop
ret
out
sub
adc
inc
and
xorl
or
mov
and
lret
jns
js
arpl
out
adc
adcb
out
and
shlb
push
pop
lahf
shlb
push
lock
mov
xor
cwtl
jmp
jle
sub
add
xchg
mov
mov
cs
leave
sub
popf
jg
xorl
mov
pop
test
loope
jge
sbbb
out
ds
ljmp
cmp
out
sub
adc
cld
jne
cwtl
nop
xchg
dec
push
add
push
xchg
xlat
sete
or
sbb
sahf
xchg
xor
mov
hlt
out
sbb
mov
ja
enter
and
in
mov
mov
cli
cmpsl
orb
jbe
add
adc
mov
bound
jle
pop
sub
nop
insb
repz
inc
out
jns
push
mov
scas
adcb
pop
fisttps
mov
int3
std
daa
pop
test
in
sub
repnz
lods
lahf
xlat
iret
cmpsb
push
xor
mov
and
dec
xor
movsb
mov
fs
and
lods
mov
imul
cmpsl
mov
inc
popf
xorl
arpl
fnstsw
fdivl
cmc
add
cmovle
jmp
mov
pop
in
imul
mov
lods
fs
push
rorb
lcall
or
mov
pop
sub
push
hlt
sub
fs
mov
jmp
les
add
loopne
mov
jl
sbb
xchg
js
les
inc
inc
stos
push
push
rcrb
cmp
add
test
fsubrl
lcall
decb
jmp
icebp
push
call
cmp
loope
adc
sub
mov
fs
iret
divl
jae
mov
sub
sub
out
lock
jecxz
lods
lods
and
fucomp
ds
mov
in
or
xchg
fidivrl
pop
ret
mov
cltd
xor
pop
imul
pop
dec
add
adc
test
shll
xchg
inc
sbb
popf
iret
cs
jge
mov
sub
sbb
mov
cwtl
stos
fstpl
test
inc
mov
pop
adc
fstp
mov
lock
out
in
jns
xchg
pop
jecxz
add
push
push
mov
js
cmpsl
stc
insb
ss
jge
sub
inc
pop
out
sub
cld
mov
mov
int
xchg
dec
imul
repz
movb
dec
mov
add
xor
repz
sbb
cmp
lods
sub
int3
jg
jb
adc
lds
cmp
xchg
outsl
outsb
sbb
lahf
repz
inc
nop
fiadds
ret
and
adc
insl
mov
mov
and
xchg
loopne
push
sbb
inc
js
mov
or
jp
lods
je
hlt
bound
fldenv
cmpsl
push
aad
jg
xchg
movsl
aam
push
sub
lcall
cmp
orl
cmp
popl
addl
xor
push
sti
add
cmpsl
add
cmpsb
push
xor
mov
sti
push
and
jne
fcmovbe
xor
ret
or
aam
dec
push
fidivs
inc
cwtl
je
push
daa
mov
mov
movsl
mov
pop
ja
lahf
into
aaa
mov
add
sub
in
test
lds
or
dec
idiv
lods
dec
fs
dec
ljmp
pop
out
subb
dec
fcomip
adc
rcll
xor
sub
out
loopne
xchg
loop
cmc
jl
lret
mov
pushf
mov
das
lods
test
sbb
loopne
sub
shrl
fbstp
shrb
shll
mov
adc
clc
dec
jb
and
cs
mov
jno
push
mov
sbb
mov
jmp
mov
and
sub
lret
jae
push
cmp
fsubp
jmp
inc
das
insl
xor
xchg
testb
dec
ss
push
lods
mov
or
mov
aaa
mov
ss
ret
popf
push
pop
lret
shrb
imull
int3
pop
dec
jne
dec
test
lea
push
and
xchg
inc
gs
push
lcall
int3
inc
mov
push
push
lcall
fdivrl
nop
fistps
mov
frstor
inc
insb
sub
shl
test
jns
adc
jo
mov
mov
out
in
fs
jle
call
sarb
std
mov
adc
loope
call
ljmp
test
add
rorl
arpl
leave
int
iret
cmp
sbb
imul
ja
out
mov
rcll
ja
mov
call
in
fwait
test
adcb
pop
fwait
jp
lds
scas
int
jns
xor
test
and
mov
je
clc
test
adc
sub
prefetch
mov
sbb
aas
mov
mov
push
test
mov
ret
pop
adc
sub
mov
roll
movsb
testb
fcomps
ret
push
fld
push
rcrl
dec
sub
repz
dec
pop
push
inc
push
aas
mull
les
jecxz
sbb
insl
lods
je
gs
mov
xchg
xchg
mov
insl
cmp
mov
pop
mov
rorb
add
mov
daa
xor
mov
or
mov
inc
out
or
jmp
push
inc
mov
idivl
aaa
dec
and
sbb
lds
mov
ds
lods
or
mov
sahf
or
movsl
lret
addb
sbb
jo
iret
jp
add
jl
dec
xchg
xchg
inc
repz
push
arpl
stos
push
mov
insb
cmpl
inc
or
movb
push
sti
sbb
xchg
jmp
jo
pop
fdivl
in
shll
movsl
std
jbe
mov
fldl
cltd
ja
rcl
std
cs
rclb
iret
rcll
sbb
mov
adc
dec
dec
test
inc
xor
lcall
dec
or
xor
ja
data16
repnz
hlt
andl
pop
repnz
pop
dec
fcoms
mov
xor
push
gs
or
iret
out
xor
iret
sbb
out
stos
in
ljmp
sbb
sbbb
push
xor
push
cmpsl
and
push
jo
push
in
jg
lahf
push
adc
xchg
je
jge
jo
stc
mov
cli
mov
mov
andl
cmp
and
push
cli
push
push
jecxz
xchg
idivl
xchg
pop
out
add
pushf
ja
mov
scas
inc
mov
or
jbe
pop
adc
xor
arpl
dec
inc
mov
adc
sub
or
dec
iret
pop
or
loop
pop
outsl
sbb
mov
in
or
jl
lret
push
bound
hlt
mov
pop
arpl
cmp
sbb
xchg
ret
and
jbe
mov
adc
mov
cmp
or
lds
jb
in
inc
or
pusha
pop
fisttpl
jle
xchg
push
addr16
loopne
or
sub
clc
test
das
iret
int
jne
sahf
xchg
mov
fdivl
push
gs
repz
repnz
mov
lock
sbb
and
inc
int
mov
cmpsb
mov
ret
xchg
inc
mov
aas
into
fsubrp
loope
adc
sti
pusha
aaa
iret
andb
pop
push
loopne
movsl
orl
test
nop
comiss
stos
loopne
out
jb
xor
jno
frstor
push
aam
outsb
jnp
sub
outsb
jnp
sbb
mov
repnz
mov
stos
in
and
sbb
data16
mov
gs
mov
xor
lock
xchg
pop
loopne
or
mov
arpl
js
in
lock
xor
mov
lods
xor
les
adc
mov
xor
divl
mov
dec
loopne
push
iret
out
add
mov
mov
jp
fidivrl
out
sbb
in
cmpsb
push
ljmp
fstpt
das
shlb
pop
cwtl
cmp
fs
xchg
and
repnz
sbb
or
add
gs
mov
in
gs
jl
pusha
nop
je
pop
cmp
js
hlt
mov
mov
scas
stos
mov
push
lods
fmull
push
pop
leave
lcall
jmp
adc
push
push
js
fisttpll
idivb
and
adc
stos
hlt
pop
inc
add
jne
dec
dec
movsb
cltd
or
cmp
rcl
mov
xor
mov
sahf
mov
ret
push
mov
dec
das
daa
sub
not
ret
ret
addr16
fistl
stc
hlt
pop
add
mov
loop
jle
push
adc
jbe
mov
mov
mov
mov
xchg
xor
imul
push
pop
dec
imul
pop
push
xchg
and
jmp
mov
or
es
push
out
lcall
sbb
lods
jmp
imul
adc
sub
mov
fisttps
ss
lahf
jae
incl
fdivrl
xchg
sub
jmp
lret
cmp
mov
sub
or
inc
push
test
mull
cmc
mov
imul
cwtl
and
imulb
sub
push
clc
imul
in
mov
mov
xor
decb
in
inc
jne
inc
stc
mov
stos
push
push
dec
xlat
add
jbe
xlat
xlat
inc
sub
adc
mov
lcall
jbe
cs
in
stos
sbb
adc
mov
cmp
pop
das
leave
daa
mov
jne
imul
je
pop
in
dec
fs
pop
xor
add
or
inc
sbb
stc
cmp
add
sarb
mov
es
int3
pusha
pop
or
add
repz
mov
jg
inc
cmp
pushl
mov
adcb
cmp
pop
sbb
or
mov
addb
inc
or
lcall
sub
insb
pop
lahf
scas
xor
fiadds
inc
sub
mov
pusha
xor
and
inc
xchg
aam
cmpsl
xor
les
add
pop
sbb
jno
mov
mov
add
andl
out
movb
imul
push
xchg
stos
pop
sub
notb
push
pop
mov
dec
cmpsb
dec
mov
push
es
and
outsb
enter
push
or
xchg
inc
pop
adc
add
loope
lret
cwtl
movsb
or
pop
popf
test
pop
cmp
cmpsb
push
imul
sub
mov
sub
sar
subb
inc
jbe
shrl
pusha
inc
fmuls
mov
into
lahf
loope
and
outsl
cmp
loopne
fs
add
pop
icebp
dec
cmp
andb
or
gs
mov
jle
pushf
fwait
stos
loop
mov
lock
data16
call
dec
sub
jle
psllq
inc
mov
cmp
adc
nop
xchg
or
jl
jle
xchg
cmpsb
pushf
mov
fsubl
les
stos
int3
mov
xorl
fs
pop
je
pop
lcall
popf
into
push
pop
outsb
xchg
cld
push
out
clc
imul
pop
test
std
fimull
cmp
sbb
movsl
pop
das
cmpb
cmp
mov
push
mov
xchg
pop
clc
pop
and
lcall
hlt
cltd
stos
mov
push
inc
int
insl
push
loopne
pop
inc
ds
lret
fsubrp
in
idivw
and
stos
aam
es
movsl
test
dec
inc
jo
arpl
inc
sbb
add
rolb
jbe
dec
add
xor
test
cmp
adc
das
cmp
jg
mov
les
repz
aaa
sub
dec
int3
inc
std
or
dec
sbb
jl
scas
xor
ds
inc
lea
ja
mov
fwait
lret
push
mull
lods
movsb
sub
iret
dec
shlb
pavgw
pop
mov
push
adc
inc
gs
mov
and
dec
cld
or
sbb
cmp
inc
fisubrl
mov
leave
mov
dec
dec
psubb
push
xchg
fs
push
sub
ljmp
xorb
cmp
cmc
and
mov
add
cmp
int3
push
xchg
sbb
sbb
bound
add
xor
jbe
orb
xchg
sbb
repnz
sub
xchg
das
adc
mov
push
lock
es
mov
pop
imull
data16
fldt
lret
jecxz
xchg
dec
adc
push
push
cmpsl
ficompl
sub
popf
jmp
adcb
xor
aas
in
xor
sub
jle
repnz
sub
jmp
xor
std
add
mov
push
add
jl
push
fcompl
mov
mov
sahf
push
mov
add
or
push
sub
cld
push
divl
cmpsl
mov
sub
inc
pop
lods
sub
ds
cmpsl
push
fwait
insl
cmpsl
xchg
sub
int3
lods
lds
sub
sub
arpl
add
adcb
in
subb
iret
fucom
sbb
test
dec
addr16
and
xchg
or
cmc
dec
or
cld
imul
js
and
sarb
push
mov
icebp
dec
rolb
push
mov
arpl
dec
mov
cli
lret
dec
and
leave
andl
sbb
call
mov
add
call
dec
sub
sbb
pushf
cmp
mov
mov
adc
addr16
cmpsb
mov
cmp
and
jecxz
fadds
dec
jne
sub
add
dec
sahf
jae
adcl
xor
cmp
hlt
pop
les
dec
gs
pop
insl
out
call
outsb
xor
mov
mov
sub
pop
gs
aas
mov
dec
sbb
xor
in
mov
out
loop
lods
mov
cmp
popa
add
sti
das
lret
add
mov
enter
int
push
jno
nop
dec
loope
xlat
popa
out
nop
mov
jge
xchg
pushl
mov
inc
dec
into
scas
push
movsl
cwtl
pop
sub
mov
dec
cmc
inc
xchg
cmovge
mov
cmp
jb
jg
push
test
dec
das
push
and
jns
mov
dec
push
xlat
cmp
movsb
nop
mulb
fdivs
push
ret
cmp
sub
push
xchg
jmp
sub
mov
mov
jb
xor
loopne
xchg
inc
pusha
jo
xchg
mov
cmpsl
orl
pop
mov
mov
xchg
fxch
mov
add
and
push
jae
in
imul
fisttps
push
rcll
xor
add
sbb
mov
jg
adc
mov
xchg
cmpl
push
push
jge
push
xlat
es
xor
ret
inc
popl
dec
ret
sbb
mov
mov
adc
sbb
das
imul
inc
pop
lock
sbb
xchg
inc
xor
cmp
fs
mov
xor
inc
mov
jb
insl
rcl
xor
sub
repz
xchg
xor
daa
sarb
and
jno
mov
rcr
cmp
scas
mov
lret
push
cltd
push
adc
xor
fisubs
mov
fisttpll
lea
xor
arpl
outsl
and
insb
mov
push
jae
arpl
mov
test
jb
out
lret
andl
adc
push
inc
sbb
pop
mov
push
mov
pop
in
jns
sarb
push
mov
xor
add
fnstcw
mov
lock
pushf
fucomi
mov
sub
sbb
cmp
add
adc
test
es
xchg
in
data16
int3
pop
fwait
push
ds
test
push
add
gs
and
xchg
xchg
inc
repz
mov
jg
repz
push
mov
sbb
lahf
dec
xor
call
dec
pop
mov
lahf
gs
rolb
mov
jbe
mov
repz
inc
fsts
pop
xor
mov
xor
inc
inc
fstpt
into
xchg
mov
push
add
loop
dec
loop
pop
push
push
out
push
mov
movsb
ret
mov
sti
adc
lret
jb
scas
loopne
jp
fsubrl
addr16
pop
jns
adc
lret
enter
and
roll
movb
cs
nop
add
and
sub
mov
lds
ficoms
lcall
inc
outsl
dec
xchg
roll
mov
or
mov
mov
fwait
sarb
cmpsl
sub
rcrl
sub
sub
sbb
popa
in
mov
mov
inc
fisttpl
sbb
sti
jnp
or
lcall
mov
loopne
jl
leave
clc
jae,pt
inc
outsl
pop
stos
xor
scas
mov
imul
ret
jno
fsubrl
cmp
and
vmwrite
fnsave
int3
dec
stc
insb
daa
ret
test
call
popf
mov
push
push
sub
jo
mov
push
adc
call
push
in
pop
jmp
lahf
test
mov
fadd
pop
movsl
xlat
fistl
mov
or
arpl
push
or
sbb
movsl
fnstcw
or
mov
cmp
popa
push
and
or
inc
sub
divb
test
dec
loopne
scas
push
xchg
fdivl
add
mov
pop
roll
sub
in
shl
int3
stc
sub
or
sbb
push
sub
cmp
mov
insb
insb
sub
jg
lret
cmp
or
jecxz
pop
or
mov
xor
les
adc
push
pop
adc
or
stc
rcl
dec
cmp
pushf
mov
js
jl
out
dec
int
in
dec
pop
icebp
mov
xchg
aaa
mov
fadd
dec
stos
inc
mov
fmuls
inc
pop
cli
lcall
cli
cmp
movsl
rclb
out
neg
test
cld
aad
xlat
repnz
sub
je
sub
adcb
xor
push
push
add
inc
cmpsl
push
push
rcll
push
out
in
orl
mov
pop
push
dec
fstpl
sub
arpl
popf
mov
add
stos
xchg
in
lods
mov
push
sbb
jb
enter
mov
popf
sub
mov
insb
pop
call
jl
adc
sbb
in
xchg
xchg
and
pushf
push
push
cwtl
sahf
push
adc
cld
jbe
lods
xchg
mov
xchg
sbbl
lods
jb
dec
mov
push
lods
into
dec
mov
repz
xlat
outsl
out
scas
or
mov
fmuls
inc
pusha
xor
xor
dec
xchg
sub
push
int
inc
call
xchg
push
add
mov
adc
dec
push
and
shlb
lods
dec
data16
insl
sub
scas
scas
outsb
add
jno
das
stos
mov
call
aas
outsb
lods
faddp
mov
aad
cld
lea
fs
cld
mov
xchg
mov
ret
xchg
pop
rclb
dec
and
dec
das
mov
mov
cwtl
nop
ss
cmp
dec
cmpsb
adc
outsb
add
loop
jmp
popa
sbb
push
ss
fnsave
inc
iret
or
or
mov
decb
mov
mov
cmp
sbb
mov
xchg
pop
cmpsl
mov
pop
int3
xorl
stos
jg
sbb
sub
scas
sbb
and
push
shlb
rcrb
mov
lahf
xchg
pop
cmp
xor
test
cwtl
clc
lds
and
adc
mov
ret
cmp
dec
cld
inc
and
mov
ljmp
dec
loope
sbb
cli
add
xchg
cmp
inc
lods
xor
dec
leave
mov
test
xchg
dec
hlt
imul
xchg
out
dec
fsubs
or
cltd
icebp
imul
fisttps
je
lahf
add
adc
xchg
sub
and
jbe
cld
add
cmp
and
mov
xchg
cld
cmp
jno
push
inc
jmpw
and
outsb
sarl
inc
lods
ss
fwait
shll
cmp
out
scas
data16
jb
mov
cmc
inc
sahf
push
iret
xor
movsb
inc
out
push
cmp
cmp
data16
shrl
nop
inc
test
mov
pop
sbb
lock
cmp
insb
jo
mov
lret
lret
pop
lea
imul
and
iret
in
add
icebp
sbb
pop
or
inc
jae
shlb
cmpsl
sub
loop
addb
xchg
cmp
gs
and
adc
adc
inc
sbb
xor
pusha
data16
data16
inc
pop
call
mov
sub
int3
ret
pop
je
arpl
sub
psrad
adc
jle
push
sahf
or
pop
adc
popa
lods
push
push
mov
mov
jg
jmp
cltd
ljmp
xor
adc
cs
mov
pop
aad
dec
adc
arpl
cmp
jne
call
js
adc
adc
xchg
faddl
adc
lds
cld
mov
scas
out
jns
scas
jnp
insb
add
mov
test
pop
mov
icebp
and
fwait
xchg
lock
insb
add
rolb
and
popa
xchg
mov
iret
pop
mov
jae
dec
sub
push
stos
dec
shl
clc
loopne
add
adc
gs
sti
sbb
daa
aam
xor
in
mov
xor
mov
xor
out
sub
jge
cmovbe
imul
dec
jbe
sbb
push
push
push
dec
push
sbb
hlt
mov
sbb
fistl
mov
leave
pop
hlt
mov
push
out
pop
lods
loopne
add
pusha
stc
and
filds
fcmovu
mov
mov
aam
icebp
sbb
outsl
lret
bound
insl
test
jp
pop
mov
out
pop
jmp
xchg
sub
and
jnp
fs
js
add
xor
neg
mov
xchg
jo
jmp
popa
mov
mov
movsl
aad
pop
inc
loop
andb
cld
inc
jmp
daa
jl
inc
push
shrb
movhps
ja
push
sub
mov
mov
push
mov
adc
rcrb
and
sbb
cwtl
ds
mov
xchg
pushf
xor
sub
bound
gs
inc
jne
movsb
jae
pop
dec
popf
or
repz
mov
mov
add
inc
xor
loopne
pop
cmp
push
pop
push
jb,pn
imul
mov
push
movsb
loopne
sub
add
incl
mov
lods
jnp
sbb
mov
sub
cmp
loopne
int3
pop
add
xchg
test
arpl
nop
mov
mov
jge
push
cmpsb
into
pop
stc
push
xchg
inc
push
in
iret
lcall
nop
mov
int
repz
and
jae
scas
jmp
sbb
mov
dec
jns
sarl
xor
cmp
sub
pop
jb
jne
and
inc
xchg
pop
pop
aas
push
adc
dec
push
mov
xchg
xchg
cmp
add
lret
xor
jl
or
sbb
sbb
xchg
lds
sub
aam
cmpsl
idivb
inc
mov
cmp
xor
sbb
add
pop
xchg
and
mov
lods
mov
imul
jnp
cmp
sti
xchg
lock
dec
subb
cwtl
mov
mov
inc
xchg
jbe
sub
fistps
adc
mov
or
add
insw
aam
ljmp
pushf
rcrb
pop
cltd
and
icebp
dec
mov
aam
lea
jbe
shrl
dec
mov
xchg
pop
fidivrs
xchg
inc
sbb
fwait
icebp
je
cli
push
pop
sti
add
leave
sbb
xchg
mov
clc
stc
scas
pop
mov
or
inc
ss
aam
test
shl
push
fcmove
inc
dec
cmp
sbb
rol
jbe
int3
fistpll
xlat
lret
xor
dec
lea
rorl
mov
push
or
add
ljmp
fwait
imul
mov
insl
aaa
aaa
outsb
push
add
pop
cmc
dec
inc
pop
jbe
addr16
sbb
add
inc
and
mov
ret
out
push
mov
clc
mov
ret
add
lret
push
ret
imul
sub
jns
repnz
rcrb
dec
mov
icebp
ds
or
mov
cli
mov
cmp
movsb
mov
cltd
mov
pushf
or
push
lods
xlat
xor
inc
dec
fwait
ja
enter
jo
inc
into
leave
sbb
xor
sbb
int3
sti
test
mov
negb
or
mov
popf
faddl
lret
jns
mov
push
addr16
jmp
in
dec
popa
and
and
jmp
xchg
mov
sub
add
or
and
mov
mov
mov
pop
or
sti
in
cmp
and
xor
mov
mov
negb
aaa
loop
aaa
imul
ljmp
xchg
iret
jmp
sbb
ss
xor
sub
out
clc
or
ss
adc
mov
push
into
mov
sub
test
enter
push
dec
shrb
out
jle
imul
pop
das
inc
loope
jge
jae
mov
stos
or
out
inc
shll
cs
dec
fmuls
pusha
scas
les
aas
outsb
pop
js
mov
into
inc
addr16
inc
xor
rcrb
popl
inc
cmp
stos
icebp
jo
inc
aam
fcmovb
jbe
pop
cmp
fmuls
fsubl
lods
sbb
jne
jnp
les
sbb
ret
dec
mov
jl
or
into
jno
fadd
mov
pushf
mov
xchg
arpl
mov
jno
jecxz
pusha
repnz
ss
jp
jns
rcrl
sub
mov
and
jmp
int3
jo
sbb
clc
imul
out
or
into
clc
pop
sub
pop
xchg
dec
push
sbb
xchg
add
popa
data16
sar
movsb
into
enter
xlat
inc
cmp
mov
jmp
lock
call
push
adc
sub
mov
stos
push
pop
xchg
sub
dec
and
mov
popaw
inc
enter
xchg
movsl
xorb
sbb
xor
aas
in
mov
jle
and
xor
mov
sbb
mov
pop
ss
inc
in
jo
sub
mov
mov
xor
jbe
hlt
fdivs
sub
push
push
divl
out
cmpsl
sub
and
mov
addr16
xor
popa
dec
fildll
dec
adc
mov
mov
push
test
jle
pop
and
xor
je
daa
mov
test
ss
out
std
subb
push
fsubp
sahf
movsl
inc
int
adc
or
add
out
dec
jo
call
adc
js
and
out
sahf
aas
inc
dec
pop
adc
fadds
jae
subb
xor
add
les
xchg
ljmp
enter
jns
sbb
mov
sbb
ja
inc
mov
clc
xor
mov
pop
push
repnz
pop
sahf
dec
test
lret
inc
in
ds
gs
pop
addr16
lahf
lret
xor
fmul
push
std
add
divl
in
enter
icebp
lcall
dec
pop
jo
mov
loop
mov
mov
jmp
cmpsb
in
in
or
or
xchg
mov
into
iret
cmp
inc
mov
je
mov
mov
ds
push
jge
fsts
or
push
mov
mov
or
orb
lea
dec
lods
mov
add
sysenter
xor
enter
mov
push
adcb
pop
call
shll
inc
inc
insb
add
insl
cmp
push
adc
aad
jno
cmpsl
add
mov
sbbb
fcom
int
push
sub
xor
xchg
fisttpll
stos
fstpl
jp
popa
fxch
xchg
add
push
xor
or
imul
mov
and
dec
jge
adc
or
imull
jo
inc
aas
xchg
sbb
stos
jmp
or
push
pusha
mov
pop
loope
popf
faddl
jb
stc
mov
aas
loopne
xor
push
into
mov
rol
xlat
out
add
cmp
clc
push
mov
xchg
loop
ret
fimull
aaa
jbe
mov
and
lret
cmp
loope
lahf
aam
sub
jmp
mov
xchg
xchg
inc
pop
mov
mov
repnz
in
inc
ds
cs
shll
cmp
or
sbb
fisttps
cltd
ret
sbb
jbe
cmpl
dec
ss
fstl
add
es
repz
dec
iret
outsb
xor
and
shrb
mov
cli
mov
repnz
jae
cmpsl
call
sbb
push
pop
pop
jmp
repnz
mov
repz
mov
mov
dec
xor
sbb
into
lcall
rcrb
insl
ljmp
jne
xor
rcll
mov
dec
mov
and
cmc
cmc
cli
test
add
daa
sub
aam
mov
xor
pop
xchg
add
or
pusha
xchg
and
orb
paddd
add
movsl
pop
sub
add
js
cmp
fnsave
call
test
lret
xchg
jecxz
call
mov
sub
std
hlt
cmp
mov
ret
mov
mov
inc
mov
test
aaa
cmp
jnp
adc
testl
shrl
inc
pop
xor
sbb
mov
jg
adc
mov
cltd
sbb
add
sahf
pop
stc
adc
mov
into
sub
js
popa
adc
inc
shlb
or
inc
jmp
pop
jae
xchg
cmc
inc
or
das
mov
or
jp
les
push
cwtl
mov
sub
test
jmp
push
mov
nop
int
adc
inc
jae
sub
jp
lods
jb
jg
out
cmpsl
adc
outsl
sub
cmpsl
xlat
enter
clc
cmpsl
cmpsl
dec
adc
aas
lretw
subl
push
mov
sub
lea
cmp
jp
insl
push
int
sbb
orb
les
or
or
dec
arpl
add
lcall
mov
lods
jl
repz
cli
and
pusha
or
call
or
gs
mov
fcmove
mov
lods
mov
rorl
jae
std
imul
push
test
fdivr
pop
or
ret
pop
out
mov
nop
rclb
pop
push
pushf
cld
mov
mov
mov
int3
xchg
sbb
and
adc
adc
jp
aam
fnsave
sub
add
les
lods
daa
mov
subb
mov
leave
aad
jb
push
dec
jg
addr16
or
jae
pop
jecxz
fnstsw
test
and
xor
mov
arpl
pushf
iret
dec
test
scas
sbb
int
add
js
jno
jns
mov
cs
ret
cmpsb
cmc
sbb
mov
jno
sbb
inc
jg
dec
or
mov
fdivr
inc
dec
iret
cmpb
pop
xor
outsb
popf
rcll
lahf
and
test
sub
adc
in
jl
or
xlat
mov
out
push
jmp
inc
pushf
jp
es
std
cmp
sbb
shl
in
mov
cwtl
and
aam
cmp
inc
mov
add
mov
out
lods
insb
cmp
mov
and
sub
movsl
xor
mov
jle
cld
test
cwtl
mov
cmp
add
push
stos
orl
add
ja
in
inc
xchg
adc
repnz
push
xor
adc
dec
pop
ret
cmpsl
scas
or
sub
xchg
adc
fwait
and
loope,pt
inc
pop
xchg
sub
adc
fistpll
push
andb
push
jo
or
adc
mov
jecxz
jmp
sub
jmp
fucom
pop
pushf
push
and
imul
cmp
int
dec
lcall
push
ret
dec
push
outsl
ja
mov
movsb
repz
xchg
mov
and
mov
add
adc
pop
jp
push
cmc
jo
cmpsb
mov
in
aam
jge
bound
cs
pshufw
xchg
add
xchg
clc
movsl
div
outsb
mov
lcall
and
jns
call
bound
lahf
in
push
pop
mov
fimuls
cmp
jmp
push
inc
cmpsb
popa
xchg
adc
jecxz
js
gs
je
arpl
xchg
pop
cmp
dec
push
test
lock
xchg
imul
out
out
inc
xchg
test
pop
jnp
mov
rorl
les
jbe
les
out
jae
cltd
sub
call
jecxz
push
rcll
xor
test
xchg
add
or
jns
jge
push
pop
stos
or
das
insb
xor
or
pop
out
xor
js
sbb
pusha
mov
inc
mov
dec
repz
push
icebp
fxch
and
xor
pusha
mov
ret
test
mov
insl
dec
dec
adc
rcl
xchg
cltd
in
xlat
cmpl
push
iret
int3
icebp
nop
pop
popa
test
cmc
rorb
or
imulb
push
or
xor
lret
jo
xor
dec
pop
pushf
cs
add
jns
fincstp
mov
push
jmp
inc
iret
clc
ds
mov
xchg
cmpsb
in
testl
push
nop
xlat
fucom
sbb
ret
xchg
inc
pop
ret
cmpsl
push
lock
aam
movsl
inc
inc
ret
mov
loope
mov
mov
rolb
pusha
push
push
jmp
loope
and
cmp
jns
sub
xchg
je
pop
icebp
cs
or
xchg
inc
out
pop
cmp
ss
das
and
call
call
inc
aad
or
mov
add
imul
xchg
mov
pop
pushf
mov
insl
aad
pop
sub
into
sub
mov
or
movsl
pop
iret
nop
sti
xchg
mov
push
dec
int
cmp
mov
shrb
jb
xchg
dec
insl
xchg
pusha
mov
cmp
dec
fimuls
mov
mov
test
cltd
popa
sub
das
sbb
sbb
cmp
fs
jecxz
in
inc
ss
mov
add
push
lds
pop
iret
rcrb
dec
subl
push
or
addr16
outsl
cs
int3
adc
call
jns
xor
dec
mov
xor
fnstenv
seta
sarb
pop
jmp
in
hlt
int3
iret
leave
lret
sarl
xchg
out
xchg
ret
insb
mov
jmp
test
push
inc
inc
pop
pop
adc
mov
cltd
fildl
dec
inc
xchg
retw
cmpsl
insl
sbb
and
mov
jmp
jmp
lods
adc
sahf
mov
aaa
out
testl
adc
je
xchg
xlat
mov
xchg
data16
inc
mov
daa
rclw
xchg
sbb
adc
xor
jb
stos
pop
cmp
outsb
popa
cltd
push
mov
and
lret
push
imul
enter
jnp
ss
scas
pop
push
mov
pop
mov
push
xchg
lcall
push
xor
in
imul
xor
notl
mov
outsb
push
sub
or
xorl
add
mov
mov
test
push
insb
test
clc
push
mov
push
cmp
enter
notl
xor
sbb
inc
sbb
enter
sbb
sub
push
sub
out
pop
cs
or
out
jle
cwtl
jg
dec
pop
xchg
pop
mov
mov
cmpb
out
or
or
lcall
jp
xchg
pop
ret
aad
jns
xchg
and
sti
es
inc
ficoms
mov
jns
ffreep
sbb
and
mov
bound
pop
jge
or
ret
enter
ret
sbb
inc
jle
scas
cmp
sbb
push
mov
add
xor
out
fmuls
int
dec
cmpl
std
in
pop
adc
sub
jl
call
adc
or
push
out
cmp
std
int3
leave
cmp
xor
subl
sbb
and
sbbl
je
xor
push
test
push
outsl
push
mov
pop
and
mov
pop
movsb
jne
fbld
add
call
add
sub
sub
leave
adc
cwtl
setb
shlb
addl
jecxz
lock
or
in
xlat
mov
add
push
loopne
daa
mov
sub
lods
fisttpll
cs
xchg
mov
aaa
and
stos
pop
je
sub
mov
subl
and
imul
mov
sub
adc
cltd
int
mov
nop
leave
and
sbb
and
shl
bound
out
mov
xchg
daa
pop
cmpsb
ss
test
inc
ret
and
add
xchg
mov
inc
inc
daa
scas
in
in
jp
xchg
push
sub
inc
das
inc
xor
in
inc
ret
push
std
fwait
cmp
push
mov
mov
in
sbb
jns
xor
xchg
cmp
pushf
push
add
push
out
arpl
rorl
ds
mov
stos
stos
inc
stos
popa
pushf
xchg
inc
cmp
loopne
clc
push
push
dec
mov
push
pop
in
xor
dec
out
rorl
in
call
jns
aam
lock
xchg
xchg
ja
xor
iret
scas
stos
sbb
jo
rcl
jne
imull
lret
lods
mov
push
or
mov
in
jb
test
cmc
and
sub
das
jmp
repnz
cmp
dec
inc
cmp
xor
xchg
sub
xchg
push
popf
inc
jl
pop
aam
push
bts
or
sub
daa
push
xchg
bnd
mov
xor
add
mov
dec
addl
dec
mov
test
imul
negb
cmpsb
imul
out
aad
in
inc
test
pop
mov
push
jge
mov
adc
test
test
gs
dec
sub
std
jbe
jno
jg
xor
lret
pop
int
mov
stc
xor
xlat
mov
int
ljmp
jno
sbb
adc
loope
rorb
and
push
mov
das
loop
ja
sti
leave
cmp
sahf
xchg
lret
ret
roll
das
test
or
mov
das
in
sbb
jmp
stos
mov
pop
mov
dec
adc
push
and
mov
cmp
mov
sub
movsb
popa
in
cmpsl
cs
or
push
sti
out
inc
mov
adc
aad
enter
pop
lahf
js
mov
push
movsb
std
mov
sub
repnz
mov
movb
fsts
int
or
xchg
loop
insl
jge
aas
dec
jae
addb
data16
outsl
bound
inc
icebp
xlat
mov
mov
mov
xchg
lcall
jne
pop
movsb
lds
test
test
push
fldt
push
and
and
dec
out
push
pop
lret
cmc
shlb
mov
scas
inc
cli
dec
ja
sbb
jge
push
inc
clc
imul
mov
sbb
bound
pop
lea
sub
mov
lret
cmc
mov
fsub
sarb
cs
loop
xchg
movsb
and
xor
scas
arpl
sbb
roll
scas
sbb
push
rorb
int3
xchg
lret
call
ljmp
mov
aam
cmpsb
sub
pop
push
out
test
fimull
dec
aam
loop
test
fistpll
in
adc
jo
test
dec
out
cmp
pop
pop
outsb
xor
in
mov
les
add
popf
icebp
loopne
lahf
mov
sbb
les
mov
or
pop
std
xor
pusha
sahf
and
shll
jecxz
mov
jl
mov
mov
jge
dec
add
push
xchg
mov
inc
mov
cmp
cmp
adc
mov
bswap
bound
or
leave
dec
mov
fidivs
mov
mov
cmp
add
jbe
test
mov
sub
pop
sub
jp
mov
sbb
push
xorl
sub
adc
pop
xchg
push
sub
and
pop
mov
or
mulb
adc
adc
outsb
daa
rcrl
and
mov
not
inc
sbb
outsb
sub
pop
xchg
fists
mov
ficoml
cwtl
test
je
js
mov
jns
sub
ljmp
cmp
repz
mov
dec
and
inc
pop
and
add
lcall
ja
into
or
xor
jle
add
fmuls
push
mov
rcrb
pop
rclb
rcrl
pop
shr
sbb
push
dec
loop
inc
in
sub
scas
cmp
into
sbb
mov
sbb
aas
ds
fmull
sub
jns
enter
fadd
pop
js
lret
ficoms
push
and
movups
pop
xchg
cmp
fdivr
mov
sbb
lds
cmp
repnz
adc
jl
jp
mov
inc
xchg
push
cmp
adc
or
mov
mov
popa
push
sbb
shll
or
ror
sub
mov
aaa
fisubl
icebp
gs
sahf
lret
ja
sub
movsl
imul
lds
sub
iret
std
cwtl
push
xchg
push
das
movsb
clc
dec
imul
push
mov
testb
test
stos
mov
push
dec
dec
mov
les
xor
das
sti
pop
pop
sub
push
je
inc
mov
hlt
stos
mov
lea
jle
in
loopne
mov
fidivs
jo
insb
outsl
mov
jne
outsb
xchg
outsl
ret
testl
push
std
push
cmp
repnz
mov
sbb
cmc
loope
rorb
xchg
adcl
rcrb
sbb
shl
rcrl
inc
insb
or
pop
js
js
xchg
inc
mov
das
xor
mov
hlt
xchg
cmp
iret
cmpl
dec
xor
sub
js
inc
xchg
lods
jg
jge
lret
jecxz
test
stos
mov
pop
lods
push
cli
xchg
fucomi
xor
add
call
std
arpl
lds
mov
daa
mov
roll
dec
dec
lret
sahf
jl
sbb
ret
cs
push
or
mov
xchg
and
jnp
sub
jmp
enter
jle
mov
dec
mov
out
and
push
sub
shrb
inc
insb
mov
fwait
aam
add
dec
mov
nop
ror
leave
testb
xchg
dec
fcomps
jae
gs
cmp
xor
mov
dec
mov
push
ds
xor
dec
or
push
mov
or
rol
fmul
scas
mov
mov
sbb
insl
pop
pop
loopne
enter
std
sbb
ljmp
push
loope
pop
repz
cmp
sbb
negl
lret
fnstenv
xor
leave
xchg
inc
sbb
lods
mov
shrb
mov
sub
push
mov
int
cltd
sbb
insb
push
rclb
ljmp
insl
sub
mov
icebp
jae
ficomps
pushf
mov
imul
adc
stos
sbb
xchg
pop
adc
mov
mov
pop
add
mov
shrb
lret
or
jnp
adc
sbb
cs
or
or
push
inc
sbb
outsl
into
cmp
bnd
add
fisttpll
fstl
push
sub
scas
pop
add
fwait
mov
and
xor
stc
add
orb
dec
lret
pop
fs
add
sbb
loope
push
es
rolb
jae
sahf
xorl
xchg
lahf
shll
xchg
xchg
daa
negb
sub
mov
loopne
in
add
jo
movsb
xlat
dec
fmuls
scas
mov
cwtl
and
push
pop
sbb
lahf
je
gs
add
call
mov
pop
mov
outsb
shrb
outsb
daa
gs
fsts
out
pop
xor
fwait
cmp
cmp
jnp
mov
mov
mov
js
aad
insb
repnz
xchg
jl
repz
fxch
stos
mov
int3
push
pop
adc
inc
mov
xorb
test
push
in
aas
fisubs
and
pop
jbe
lock
add
mov
fsts
adc
xchg
cmp
xor
xor
addb
add
movsl
sub
aam
ret
sub
fnstcw
jl
shll
and
cmp
xlat
shl
outsb
ss
sub
push
in
test
ds
and
lret
std
dec
mov
mov
or
add
push
or
inc
mov
imul
scas
or
xchg
scas
dec
std
dec
push
mov
repz
lods
les
xorl
push
roll
pushf
add
pop
mov
mov
cs
pusha
jle
adc
adc
xor
mov
mov
jae
lds
jle
les
fs
mov
mov
mov
xor
sti
add
cmc
aas
popa
cld
xor
inc
xor
loop
xchg
mov
sbb
dec
xchg
xchg
pop
in
xor
in
dec
addr16
jo
inc
sub
fwait
push
inc
ja
call
jne
xchg
push
mov
aam
mov
ret
add
inc
push
sbbl
out
shlb
cmpsl
cmp
lea
fdiv
cmpsb
lods
test
out
xor
cmpb
icebp
sarl
out
sbb
push
sub
in
push
sbbl
xlat
addr16
ds
dec
repz
out
and
loopne
addr16
das
cmp
mov
aad
jp
dec
notl
incb
test
jle
int
repnz
js
adc
in
out
fsubs
add
adc
push
push
jnp
sub
lock
clc
dec
clc
dec
loop
addr16
adc
test
cmpsb
xchg
bswap
out
dec
xchg
push
push
lds
xor
dec
pop
pop
lret
jmp
out
mov
jns
xchg
icebp
pop
rolb
and
bnd
subb
pop
sti
std
lcall
xor
pop
or
lods
mov
sbb
mov
add
ss
mov
or
cld
sub
stos
and
sbb
daa
insb
popf
out
in
push
popf
cli
mov
leave
sti
cmc
sbb
ficoms
ret
rcl
cmp
loopne
jl
dec
fcompl
xchg
cmc
add
mov
pop
adc
cmp
in
lods
loop
fidivrs
mov
add
cmpb
bts
push
in
push
xchg
aas
iret
dec
inc
ret
cmp
out
xchg
mov
dec
mov
xlat
mov
gs
mov
ds
adc
dec
sti
bound
ficoml
and
rcr
cmp
jge
cmpsb
and
rorb
xor
dec
dec
setnp
call
mov
push
fdivrs
pop
dec
push
push
scas
pop
jl
and
repz
dec
inc
lds
shll
xchg
push
imul
inc
mov
xchg
outsb
rclb
cld
pop
lock
out
aam
dec
sub
fiadds
xor
add
add
in
outsl
jnp
icebp
mov
imul
lret
fnstcw
dec
ret
pop
jo
jnp
loop
xchg
xor
sub
jp
daa
fcoms
clc
xchg
test
out
in
fmull
lret
aaa
push
pop
xlat
rcll
push
movsl
lods
or
arpl
imul
in
push
cvtps2pd
pop
mov
arpl
stos
fcmovbe
jo
inc
xchg
sbb
cmc
stc
iret
test
push
mov
cmp
cmp
pop
push
jecxz
test
iret
add
pop
mov
cmp
jl
and
mov
sub
repz
int
xchg
add
add
leave
inc
cmp
jmp
rclb
cmp
scas
lock
cwtl
fisttps
inc
pop
pop
adc
xchg
popf
mov
pop
pop
out
dec
cld
lret
addl
add
insb
push
ljmp
lret
push
dec
push
dec
cld
rorb
aas
xlat
clc
int3
mov
mov
push
ja
push
xor
jg
lds
mov
dec
mov
lea
addr16
adc
rcrl
or
shrl
add
inc
mov
mov
push
xor
clc
test
or
popf
cli
sti
test
int
pop
jge
xchg
cmpsb
insl
xor
sub
movsl
jp
and
inc
push
lcall
xor
mov
lcall
imul
cld
icebp
pop
add
inc
cli
push
sub
aaa
call
into
add
loopne
push
mov
sbb
rcll
or
fwait
stos
or
mov
mov
fstps
lock
cwtl
aam
lds
jne
jne
pop
push
outsl
rcrl
pop
pop
xchg
mov
or
xchg
lret
sbb
sti
test
sub
sahf
hlt
push
repz
rorb
and
imul
pop
fidivs
add
in
xchg
inc
out
into
sbb
daa
inc
gs
lret
pop
pop
inc
push
shlb
jns
jl
push
les
fmull
xchg
sti
and
lcall
push
popa
out
inc
adc
ret
mov
inc
das
dec
out
sub
mov
adc
lods
repnz
jns
les
sbb
mulb
xor
scas
dec
cmpsb
mov
es
daa
xor
adc
daa
rolb
incb
lea
or
sti
push
jo
sub
push
add
xor
movsb
lahf
pop
cmp
jno
push
testl
and
dec
lret
inc
adc
and
add
push
and
cld
enter
fidivrs
xor
gs
adc
mov
out
data16
cwtl
clc
shll
pushf
fisttps
pusha
arpl
sub
add
mov
inc
sar
dec
xchg
int3
stos
jmp
clc
es
inc
rclb
hlt
cwtl
daa
jnp
aam
push
xchg
push
test
gs
int3
sarl
ret
or
in
mov
sti
push
jnp
mov
adc
leave
test
cmp
stc
cld
push
mov
adc
movsb
mov
pop
lcall
mov
aam
sbb
repz
lret
xor
int
push
sub
pop
add
insl
jg
mov
pop
dec
outsl
fwait
or
push
mov
add
push
xchg
xor
mov
and
out
lret
cmpsl
cmp
cmp
scas
push
sti
cmp
cltd
mov
das
rorl
sbb
in
bound
sbb
ljmp
in
mov
mov
outsl
imul
adc
pop
mov
sub
hlt
push
fisttps
in
cmp
iret
popl
pop
out
jl
int3
aas
mov
in
lea
or
je
cmp
jmp
dec
fildl
pushf
out
mov
cmpsl
sbb
out
or
add
add
jnp
and
insb
sahf
mov
aad
pop
fcomip
jns
mov
push
xor
popf
mov
je
push
jnp
inc
inc
pushf
in
ja
pop
mov
sbb
mov
sbb
adc
enter
and
adc
lcall
int
ljmp
pushf
push
and
scas
jp
sbb
xchg
sbb
into
lds
adcb
in
sub
test
xor
hlt
push
daa
fnsave
popf
pushf
lret
mov
ficompl
push
jnp
test
sbbl
sbb
fadds
lds
jg
insl
push
les
mov
add
adc
jno
dec
aad
enter
sbb
repz
filds
fcoms
inc
mov
notb
xchg
cmp
jb
mov
movsl
push
inc
xor
iret
xor
cmpb
adc
inc
jnp
adcl
out
rorb
adc
push
int
inc
inc
push
xchg
fs
xchg
mov
out
test
cmpsl
sahf
and
stc
xor
lods
fsubs
ja
adc
sub
in
decl
gs
jns
pop
mov
and
push
mov
inc
pop
inc
cld
jns,pt
xchg
lret
mov
pop
xor
push
ds
lret
jg
pop
dec
inc
loope
stos
and
push
popf
and
insb
xor
stc
in
mov
push
jp
xor
fs
ret
sub
movl
jp
sbb
jo
cmp
adc
fistpl
mov
int
data16
mov
int3
push
sahf
popa
lods
sti
push
push
mov
mov
bnd
cmp
cltd
cmovs
jae
repz
sbb
ljmp
push
adc
lea
stc
xlat
dec
aaa
jmp
pop
mov
xlat
mov
ja
out
xchg
and
mov
icebp
jns
andb
and
jnp
je
cld
push
fstps
xchg
pop
ret
fst
icebp
fsub
ja
jbe
xchg
in
movsb
sub
test
ret
sar
mov
xorl
or
lahf
push
cltd
jmp
jmp
mov
pop
imul
shrb
push
dec
mov
in
nop
mov
ja
mov
jnp
rcr
insb
jle
adc
pop
pop
cmp
in
ja
jp
repnz
xor
mov
pop
pop
fbld
in
xchg
mov
pusha
aam
loopne
dec
pop
sub
or
pop
leave
inc
add
imul
lret
sarb
loop
jns
push
push
loop
loop
inc
imul
jno
les
loopne
cltd
cmpsb
and
lahf
mov
sub
pop
gs
mov
testb
mov
stc
lcall
imul
ss
or
xchg
pop
fmuls
lock
mov
repz
push
xor
bound
sbb
inc
test
pop
ret
mov
push
dec
xor
jno
jae
xor
pushf
cwtl
ret
scas
jns
sbb
daa
call
fwait
jg
cmp
scas
roll
xchg
popa
and
int
mull
xor
xchg
sub
mov
std
and
jecxz
test
mov
jno
cmp
inc
das
pop
sub
mov
inc
out
fisttpl
adc
jmp
stc
and
nop
mov
gs
shlb
js
and
adc
mov
cmp
mov
adc
insb
xor
push
cmp
jge
adc
pusha
dec
push
sub
mov
fistpll
in
aad
jg
cmpl
pop
lds
icebp
sub
dec
stos
repz
mov
js
cmp
gs
iret
cs
jmp
popa
adc
add
cwtl
mov
ret
pop
jno
xchg
mov
icebp
push
in
jmp
push
filds
cmp
jecxz
in
pop
cs
mov
cmovne
loop
das
mov
push
cli
and
mov
out
jb
test
out
cwtl
ljmp
or
testl
test
xor
sub
js
ljmp
mov
cmp
pop
add
cmp
shlb
bound
stos
js
icebp
test
es
iret
xchg
cmp
shrl
mov
xor
dec
xor
ljmp
dec
into
in
outsb
xorb
subb
lahf
jbe
xlat
push
fisubrs
out
mov
dec
mov
cli
in
dec
test
dec
outsl
clc
movsl
or
sub
mov
jo
ljmp
xor
and
shrl
xchg
mov
mov
sub
push
push
push
dec
call
mov
mov
mov
aas
nop
scas
fwait
call
cmp
inc
jno
sbbb
adc
loope
fstl
pop
jle
xchg
push
mov
insl
mov
cltd
inc
pop
push
stos
mov
sbb
leave
adcb
loop
loop,pn
pop
push
insl
add
inc
push
jmp
add
jle
pop
inc
pop
scas
sbb
jbe
mov
adc
jb
and
xchg
je
jno
sub
jmp
cmpsb
and
out
mov
jg
roll
scas
jno
addr16
nop
mov
sub
test
lea
lods
jnp
ljmp
push
jecxz
imul
cwtl
mov
scas
xchg
int3
int
or
test
in
pop
loope
dec
jmp
add
aam
aas
mov
stos
pop
or
mov
sub
inc
pop
mov
cs
clc
inc
mov
inc
test
push
pop
imul
cmpsb
shrb
cmp
inc
jbe
shlb
lods
pop
test
inc
rclb
dec
outsb
add
addl
bnd
lret
scas
adc
ss
cld
in
dec
adc
mov
lds
sbb
sub
lock
xchg
cs
pushf
or
sbb
mov
adc
jg
xchg
mov
push
sub
les
es
or
jae
inc
mov
das
cmp
out
cmpsl
or
les
cli
push
lods
scas
testl
les
mov
adc
divl
and
xor
dec
cmp
inc
push
packuswb
leave
gs
push
test
fidivrs
push
icebp
lock
mov
jne
sbb
sti
xchg
lock
xchg
mov
stc
fisttpll
sti
push
sub
jo
ret
cmp
cmpl
popf
loope
sub
pusha
sub
js
aas
flds
sbb
insl
inc
lock
mov
xchg
stos
xchg
inc
mov
pop
sbb
fsubrl
push
xchg
test
cwtl
mov
lock
popa
mov
dec
lahf
int
inc
push
xchg
inc
jl
add
cmp
popf
cmp
mov
jmp
jns
fs
insl
imull
inc
shlb
jp
loope
fwait
ss
or
pop
inc
popa
aas
lret
pop
outsb
ret
fimuls
lret
lods
int3
enter
test
pushf
enter
cmpb
sbb
jle
adc
xor
es
ds
xor
jne
test
repnz
stc
mov
outsb
and
roll
jno
std
sub
imul
js
loopne
mov
pop
push
int
push
daa
in
nop
or
push
or
xor
outsl
ffree
sub
sbb
or
cmpsl
adc
sahf
fisubs
xchg
cmp
sub
mov
add
test
sub
fs
jns
dec
lods
jge
in
sbb
jb
out
cmp
xchg
cmpsb
cli
pushf
inc
xchg
xorb
dec
mov
fildl
mov
and
xor
sub
int
mov
pop
cs
xor
adc
and
jno
sub
mov
xor
cmpsb
movsl
xor
mov
aad
jl
mov
mov
pop
mov
add
pushw
or
fcoml
push
jbe
push
scas
jp
adc
ljmp
xchg
cs
scas
and
imul
jmp
imul
int3
dec
fadd
and
pusha
pop
gs
lods
mov
jae
lahf
xchg
js
mov
xchg
and
sbb
push
cmp
sbb
pop
xor
dec
mov
adc
lahf
into
arpl
add
ret
xchg
scas
cmp
xchg
sub
mov
repnz
nop
stos
mov
leave
movsl
iret
sti
popa
jae
push
fcoml
out
dec
xor
ja
mov
inc
inc
inc
push
insl
fdivr
es
ljmp
into
push
bound
adcl
clc
stc
outsb
insb
enter
mov
sub
mov
or
insb
mov
mov
xchg
in
cmp
jmp
xchg
loope
repz
iret
and
sbb
pop
fnsave
leave
push
push
dec
push
cmpl
and
fucomi
and
lcall
sti
pop
arpl
fdivs
gs
mov
aad
xor
sub
adc
int
cmpsb
out
cmp
repz
mov
xchg
mov
enter
js
hlt
test
stos
mov
sbb
adc
pushf
xchg
testb
fdivrl
ljmp
mov
cwtl
inc
pop
mov
jb
pushf
or
sahf
mov
repnz
add
in
lods
add
aas
sbb
sti
in
lds
mov
adc
adc
mov
mov
dec
and
stos
xchg
clc
xchg
outsb
stos
scas
mov
jl
xchg
adc
loopne
fwait
mov
data16
jne
mov
lods
push
gs
into
and
outsb
mov
cwtl
inc
in
movl
popa
in
cli
lds
push
loop
adcb
arpl
dec
loop
cmpsl
movl
shl
loopne
loop
sbb
jbe
sub
shl
xchg
outsl
out
aam
movsl
mov
mov
dec
xor
sbb
add
lea
testl
push
push
cmp
mov
mov
and
and
mov
jb
insb
mov
inc
inc
mov
sbb
cmp
or
test
mov
cmp
mov
rolb
lahf
inc
gs
mov
mov
jno
cltd
adc
lahf
mov
aam
mov
sub
iret
cmpsb
gs
mov
mov
inc
cmpsl
call
lods
scas
mov
mov
cmpsl
fs
sbb
fs
mov
xchg
adc
ja
test
dec
add
mov
pop
pop
xor
popf
cltd
cld
xor
out
shll
jnp
cmovae
inc
lods
testl
dec
mov
mov
leave
lods
insb
movsb
cmp
es
mov
iret
xchg
test
jp
fcoms
pop
jae
dec
inc
rol
xor
push
cmpsl
and
imul
mov
mov
push
bound
mov
dec
aaa
gs
jno
into
mov
out
cmpsb
and
cli
mov
leave
push
in
pop
mov
adc
xor
inc
mov
xchg
call
mov
les
cmc
addl
add
mov
scas
dec
jne
insl
js
test
pop
adc
fstl
icebp
adc
shrl
mov
cmpsl
aad
xor
les
test
add
pop
pushf
scas
shrb
rol
xor
aas
sub
mov
lods
mov
loope
les
lahf
jge
test
shrb
aas
xchg
fisttpll
lret
fdivrs
loop
imul
pushw
cmpl
mov
jae
mov
xchg
stos
and
xor
inc
xor
sub
and
and
sahf
xchg
adc
aaa
call
clc
ds
aas
cmc
inc
fdivrp
mov
jb
arpl
inc
daa
mov
enter
sti
mov
scas
sbb
loopne
jge
mov
push
mov
sbb
stos
inc
cmp
shll
dec
sbb
movsb
nop
daa
call
mull
jle
or
das
aad
mov
cmp
mov
push
movl
js
stos
roll
xchg
fsubs
loopne
test
jbe
sahf
sbb
dec
push
scas
lcall
mov
inc
jno
int3
ss
call
in
stos
lret
mov
push
in
aad
mov
jmp
and
lret
pop
inc
pushf
cmpl
int
push
leave
lock
add
test
js
dec
pop
stos
cmp
aam
jg
xchg
aam
movsb
sahf
je
fnstenv
int
or
xchg
or
jge
outsl
mul
popa
pop
inc
bound
push
jne
loopne
cmp
pop
ljmp
repz
cmpsb
jns
das
shr
fincstp
out
sti
jo
xchg
push
stos
scas
aam
sub
mov
xchg
mov
ret
lock
sbb
and
adc
pop
pusha
mov
and
movsb
adc
cltd
dec
in
jbe
ljmp
cmc
lcall
xchg
gs
test
pop
xchg
ja
pop
sbb
jo
icebp
shrl
pop
jbe
mov
testb
pusha
test
pushf
jns
xor
push
xchg
mov
in
cld
outsl
add
sbb
pop
fistpll
cmpsb
sub
add
push
dec
subb
fsubrs
sbb
xchg
or
push
push
scas
mov
inc
and
mov
inc
pushf
jg
aaa
push
mov
mov
mov
dec
fmull
lahf
subb
mov
mov
sbb
and
xchg
clc
ja
xchg
loope
push
mov
adc
and
aaa
sub
aaa
testl
movsl
push
pop
cmc
and
and
aas
or
aas
cli
push
je
push
mov
mov
add
xorb
out
pop
dec
mov
cmpb
lea
call
hlt
sti
ss
out
outsb
sub
inc
add
jno
out
xor
pop
jno
pop
mov
test
cli
mov
dec
mov
aaa
enter
sbb
mov
insb
cmp
das
in
popa
jno
fistps
sarl
push
movsb
sarb
popa
xchg
hlt
call
xlat
inc
push
scas
mov
cld
lret
sbb
push
jb
outsl
jmp
sub
push
lds
call
push
xchg
xchg
cmpsl
dec
popf
pop
mov
cmp
xor
call
and
jo
xchg
mov
add
cmp
je
fldl
imulb
xlat
inc
hlt
in
mov
cld
fsubl
movsl
mov
sbb
push
in
mov
ret
insb
outsb
mov
lock
mov
in
sub
inc
mov
and
scas
iret
and
push
movsb
jmp
and
sub
add
out
jb
ljmp
jp
xchg
inc
inc
sarb
sbb
mov
addb
aam
add
arpl
aaa
stos
mov
cmp
push
cli
stc
cwtl
mov
cmpb
pop
clc
and
adcl
and
fidivs
cld
dec
imul
push
push
or
pop
inc
jg
push
outsb
xchg
insl
insb
jno
inc
mov
test
mov
loope
in
cmp
pop
call
cmp
jno
mov
stc
mov
jl
mov
aad
sbb
pop
enter
data16
incl
movsl
sbb
cmpsb
mov
mov
mov
push
push
push
xlat
cmp
fists
pop
insb
pop
dec
mov
mov
xor
fmull
gs
inc
pop
aad
xchg
aaa
sub
cmp
mov
xchg
hlt
pop
daa
and
in
adc
xchg
out
push
ja
cltd
mov
rcll
sub
aam
ret
cltd
fcomps
dec
sbb
scas
dec
sbb
push
push
outsl
add
lcall
out
outsl
test
pop
cltd
dec
pop
std
mov
ja
aam
lods
sub
push
or
cmp
xchg
cld
shrb
adc
or
lods
jecxz
pop
xor
mov
mov
ret
insl
in
and
pop
mov
push
mov
or
and
pop
sub
insb
sub
jo
repz
int3
mov
daa
inc
in
out
rcll
ret
shrb
sahf
popf
dec
xchg
xor
inc
adc
out
mov
test
fcmovne
add
in
push
and
test
lock
mov
jne
pop
test
scas
test
dec
arpl
dec
push
pop
sbb
fbld
inc
stos
mov
mov
testl
outsl
sbb
sti
inc
pop
mov
into
mull
add
test
fmulp
dec
cmp
stc
int3
inc
add
xchg
std
shlb
ret
shlb
pop
lods
in
sub
out
daa
or
or
mov
mov
fwait
push
push
dec
xchg
cmpsl
push
xchg
testl
stc
ret
inc
sub
clc
data16
sbbb
and
sub
push
sahf
aad
data16
arpl
arpl
mov
clc
lods
or
mov
mov
push
lcall
cwtl
fmuls
popl
aas
ljmp
push
mov
mov
mov
jb
and
cltd
xor
pushf
pop
in
out
cwtl
adc
in
cmp
hlt
mov
mov
lcall
lds
imul
cmp
pop
sti
fs
negl
notl
nop
out
xchg
subb
js
mov
popf
mov
push
dec
jecxz
xchg
fidivrl
jle
rol
fimull
insb
jl
adcb
scas
dec
ss
roll
ljmp
icebp
mov
mov
or
pop
ret
loop
loope
call
cmp
into
mov
mov
cmp
fnstenv
inc
or
dec
push
lock
inc
cmp
divb
fs
fstp
ja
adc
xchg
push
aad
xchg
adc
movsb
dec
mov
jge
mov
jmp
stos
adc
popl
xchg
test
cmp
rcrb
je,pt
faddp
imul
lods
fdivrl
sbb
aam
shrl
mov
and
xchg
push
in
jae
adc
push
call
jge
ret
popf
ret
imul
cmp
sub
jge
inc
sbb
mov
popf
inc
mov
clc
lods
es
shrl
fdivrl
xchg
enter
ljmp
mov
daa
inc
lds
addr16
xchg
or
push
je
scas
or
cmp
pop
push
or
mov
push
sbb
or
or
pop
sbb
push
xchg
inc
add
pop
std
fsubrs
jb
sub
test
cli
inc
sbbl
scas
and
jbe
test
dec
in
dec
int3
adc
pusha
hlt
je
scas
cmpsb
pop
xchg
cmpsl
mov
lgs
test
dec
mov
cmpb
lods
stos
pop
dec
in
test
and
ficompl
loopne
sub
xchg
test
lcall
sub
sub
inc
popf
mov
jl
rclb
xchg
mov
daa
ret
fbld
mov
aam
xor
lods
adc
inc
mov
decb
pop
xchg
sub
inc
mov
or
jg
lahf
or
outsb
push
push
loopne
test
and
xchg
xor
sub
mov
int
xor
sbb
xlat
sub
mov
sub
iret
sbb
loopne
xor
pusha
mov
jg
pusha
imul
call
stos
ds
repnz
repz
jl
xor
push
fs
sbb
dec
movsl
xchg
mov
adc
orl
out
sti
outsl
popa
in
faddp
add
add
push
jge
jae
fbstp
mov
ret
cmp
subl
aaa
ret
out
in
push
outsb
ja
repz
imul
icebp
into
shlb
dec
inc
mov
adc
ss
add
push
outsb
jb
jbe
pop
jecxz
es
cmpb
cmpsl
add
shrb
jae
add
sub
mov
ljmpw
pop
jae
sbbl
movsb
adc
xchg
fadds
jbe
out
sub
fsub
cmp
repz
xchg
lahf
and
jae
mov
add
loope
icebp
dec
movsl
push
push
jl
sub
outsb
xchg
inc
jmp
hlt
dec
popf
jecxz
xchg
add
inc
andb
mov
push
js
dec
pop
lds
orl
xchg
fisubs
jle
sbb
std
sbb
lret
enter
pop
inc
inc
sub
outsl
mov
cmpb
outsb
pushf
clc
push
daa
fldl
xchg
sbb
dec
fists
jns
adc
fsubl
in
mov
stos
cmp
inc
imul
sub
cmp
icebp
fwait
or
push
xchg
inc
inc
dec
sahf
xor
sbb
pop
out
dec
sti
fmul
sti
lret
cltd
jl
xor
xchg
xor
into
push
out
sub
jmp
dec
aaa
pop
clc
int
inc
push
insl
add
mulb
repz
imul
scas
mov
adc
dec
dec
push
call
jo
jnp
or
xchg
sub
jns
mov
dec
je
scas
mul
and
or
dec
add
pop
dec
enter
adc
sub
inc
xchg
jg
loopne
mov
push
clc
or
jbe
xchg
or
sbb
push
call
cmp
loope
outsl
push
dec
testl
xor
add
cmpsb
call
adc
notb
lods
fimuls
out
cmp
xchg
es
popf
int
mov
pop
mov
or
out
repnz
arpl
mov
mov
addl
cmc
jmp
es
bound
pop
sub
fimull
movl
mov
mov
daa
dec
fistpl
pop
add
imull
insb
or
repnz
and
sub
shlb
test
pop
jne
cwtl
loop,pn
mov
sbb
arpl
ret
add
dec
pop
xor
loopne
mov
mov
mov
pop
push
add
cmp
push
les
out
ljmp
mov
jg
sti
popl
sarl
stc
pushf
out
fmuls
push
mov
inc
popa
or
cmc
outsb
adc
lock
pop
out
pop
cmp
sarl
push
lahf
xor
rolb
popa
lea
xchg
sbbb
xor
xor
in
push
push
test
inc
or
dec
fdivs
mov
repnz
and
dec
lret
lea
mov
mov
mov
xor
divl
je
cmp
mov
xor
lcall
fsubs
scas
lahf
pop
and
xchg
pop
pop
lea
pop
and
int3
sub
mov
xchg
sbb
and
bnd
cli
into
cld
dec
mov
and
call
imul
pop
lds
test
cwtl
fisubrl
shlb
leave
out
mov
imul
sbb
hlt
cmp
jnp
stos
mov
pop
sbb
xor
inc
lahf
outsl
cwtl
pushf
cmpsb
sbb
xchg
or
jns
sbb
or
xor
lock
mov
insb
daa
adc
mov
sub
sub
xor
jle
shll
inc
in
push
lcall
xor
stc
aaa
in
inc
hlt
dec
pop
scas
jp
xchg
outsb
xor
jmp
sbb
rorb
scas
mov
stos
jle
mov
leave
sbb
ljmp
ret
shl
gs
cmp
gs
jne
das
in
cwtl
adc
add
push
sahf
lahf
mov
adc
mov
pop
mov
cmpsl
add
push
jecxz
fwait
jmp
arpl
les
fwait
ljmp
hlt
insb
push
push
add
xchg
mov
cmc
gs
idivb
into
mov
leave
out
clc
dec
jbe
into
popf
sahf
hlt
mov
jp
outsb
dec
jg
cld
mov
cli
sub
mov
lods
outsb
mov
lock
add
cmpb
std
push
inc
lret
gs
clc
scas
pusha
lods
out
pop
pop
mov
xor
cli
dec
inc
jae
xor
jo
out
inc
xor
mov
les
sbb
cmc
jo
int3
std
ja
stos
insb
pop
sbb
inc
in
mov
mov
or
out
lcall
aas
xlat
jnp
out
jae
inc
adc
gs
sub
lods
push
mov
js
mov
pop
scas
stos
insl
push
jecxz
jnp
lcall
inc
mov
or
out
test
jl
jno
lods
mov
or
ja
adc
clc
sbb
pop
pop
imul
daa
push
movsl
or
jne
out
in
add
imul
test
repz
push
pop
xchg
pop
sahf
jge
hlt
fs
mov
out
lods
xor
test
testb
pop
mov
das
mov
call
lret
xchg
lods
mov
or
dec
roll
test
aam
loope
sbb
lea
and
sub
xchg
adc
mov
add
xchg
mov
mov
xchg
icebp
mov
mov
inc
pop
add
push
xchg
and
addl
cmp
pop
das
repz
fidivrl
test
loope
cmp
ret
xor
insb
fsubrs
add
xchg
shll
daa
inc
outsl
cltd
xchg
inc
jno
dec
ljmp
pusha
bound
push
mov
mov
mov
lahf
imul
cmp
lahf
lods
psubusw
push
fdivr
lahf
sbb
push
dec
inc
jle
hlt
pop
ds
ficompl
pop
cli
and
loopne
lret
mov
dec
insb
lds
neg
mov
adc
sbb
push
xor
clc
leave
mov
push
aad
out
push
push
je
xchg
cs
mov
xor
lcall
int
int3
sbb
ret
fld1
ret
std
ss
stos
movsb
cmp
or
mov
push
je
cld
cmpsb
xchg
fidivrl
pop
repnz
nop
xchg
push
rclb
and
sarl
movsl
push
cmp
ret
push
mov
into
push
std
cmp
mov
or
jne
push
mov
leave
ficoms
das
outsb
jb
mov
out
repz
jne
pusha
das
add
push
mov
dec
push
mov
cwtl
insl
pop
gs
mov
ret
repz
and
dec
flds
mov
xchg
aam
cs
repnz
cmp
out
mov
mov
add
leave
mov
add
imul
xor
popa
add
mov
xor
sub
pop
pop
xchg
sbb
jl
dec
movsb
sub
je
lcall
jae
movsl
loop
or
inc
add
cli
cmpsb
outsl
and
cmp
mov
dec
mov
faddl
sbb
mov
fs
pop
push
imull
ss
inc
push
repz
pop
and
mov
push
push
mov
orb
fdivs
insl
adc
sbb
push
jne
insl
lahf
dec
jb
leave
call
mov
xchg
and
push
pop
inc
xchg
cmpsl
arpl
push
fwait
lcall
and
ficoms
and
pop
adc
or
bound
jae
lret
jmp
out
dec
scas
sbb
ret
push
sarb
mov
popf
sub
pop
dec
stc
iret
push
scas
pop
popf
pushf
test
cmp
pop
cmpsb
or
call
jno
mov
and
jmp
mov
mov
xor
mov
lret
out
add
sub
ret
dec
les
aad
or
pop
testl
adc
mulb
xlat
nop
xchg
xchg
cmp
imul
je
inc
rcrl
hlt
pop
and
fildl
cld
ss
push
fsub
mov
lret
lret
jno
cmp
dec
sbb
icebp
shlb
pusha
sarb
xchg
lret
and
xchg
cmp
xor
cli
pushf
xor
inc
inc
pop
pop
mov
insb
adc
pop
mov
sbbb
das
cmp
sub
les
mov
lods
and
sti
fistps
sbb
pop
faddl
orl
fisttps
sub
fmuls
xchg
dec
pusha
fimull
push
fistl
sub
jne
imul
adc
outsb
mov
cli
shll
mov
push
sub
out
xchg
lea
mov
mov
inc
jmp
dec
inc
pop
shr
popa
lahf
jl
xlat
imul
sbb
data16
test
in
xchg
cmp
ret
aas
cld
sub
in
jg
out
test
mov
fisubrl
inc
cwtl
cmp
std
mov
ja
hlt
out
mov
add
push
mov
mov
cmp
push
lds
jnp
int
out
imul
je
sti
jle
mov
dec
add
hlt
dec
lret
and
xor
pushw
fcomps
inc
dec
inc
push
scas
dec
arpl
mov
adc
je
and
enter
and
mov
pusha
clc
jle
sub
ja
int3
test
inc
stos
sbb
stos
push
popa
cwtl
adc
xor
adc
dec
cmp
dec
inc
data16
dec
xor
cmp
std
gs
mov
xchg
pop
out
push
push
or
adc
pop
xchg
mov
fisttpll
jo
add
mov
xchg
xchg
push
loop
stc
xorl
sbb
lcall
aaa
addr16
xor
inc
fstpt
fdivl
mov
insl
cwtl
adc
push
icebp
adc
mov
daa
js
mov
les
mov
inc
push
loope
orl
js
dec
push
mov
frstor
add
sarb
and
xchg
ss
jl
xchg
cmpb
pop
push
pop
push
jne
negl
mov
inc
jo
test
data16
cmc
adc
push
ss
lcall
xor
mov
insb
xor
stc
ds
fisttpll
jl
mov
pop
xlat
inc
mov
popf
push
stos
push
mov
add
push
pusha
shl
jl
pusha
ljmp
rclb
cmc
dec
push
dec
cmpsl
sbb
nop
pop
outsl
and
xor
push
hlt
push
pop
add
jne
aam
js
inc
sbb
loopne
sbb
mov
subb
cmp
in
fwait
test
xchg
add
jp
dec
ret
jle
sub
sub
push
out
xchg
movsl
cmp
ficoml
fnsave
push
xor
cmp
popa
mov
out
pop
inc
sahf
les
jb
dec
test
aas
fidivrs
insb
dec
mov
push
mov
jno
sub
int3
pusha
sbb
pop
in
xor
jg
rorb
and
fcmovnb
out
test
test
int3
jne
mov
stc
add
roll
jge
addr16
rorl
and
add
sub
hlt
and
js
pop
mov
jecxz
push
lock
daa
ret
cmp
jp
push
mov
loopne
loop
pop
dec
popa
cmp
xchg
dec
jecxz
mov
test
cmp
mov
inc
mov
sub
sti
mov
push
enter
dec
pusha
cmp
mov
mov
mov
mov
mov
mov
inc
popf
mov
cli
in
inc
xchg
lret
loop,pt
stos
shrl
aas
scas
mov
mov
popa
popa
ds
repnz
insl
fs
jmp
aaa
clc
les
ret
stos
add
mov
jg
movsb
dec
fidivl
pop
or
ficoml
pop
xchg
jl
jmp
and
dec
inc
push
mov
mov
jl
sbb
fisubrl
cmp
cli
cli
dec
xor
pop
adc
stos
xor
xchg
or
fistl
insb
jg
mov
aam
pop
pop
aaa
in
pop
adc
imul
jg
and
arpl
push
adc
push
inc
add
pusha
jae
sbb
inc
rorb
scas
and
and
mov
add
je
xchg
hlt
sbb
mov
jmp
pop
add
push
push
adc
test
mov
clc
fnsave
cwtl
bswap
sbb
shll
int
or
stc
xor
mov
scas
sbbb
jp
addr16
out
mov
test
ljmp
mov
inc
lahf
movl
pop
fldcw
es
jo
xchg
push
fsubrs
push
jg
add
rorb
bound
or
nop
shll
fcmove
pop
xchg
lea
cld
or
push
mov
xor
xor
xchg
orb
xchg
pop
and
adc
adcb
mov
sub
mov
imul
xchg
test
mov
adc
out
lock
push
push
mov
adc
xor
inc
pop
adc
mov
xor
and
jo
loope
jb
sarl
fsts
or
stc
out
fwait
test
gs
pop
push
lahf
adc
sub
stc
dec
hlt
ss
ret
add
nop
xchg
mov
sub
icebp
add
jns
fiaddl
aas
or
rcr
shl
fnstcw
in
and
pop
ljmp
xchg
leave
jno
dec
clc
mov
fistl
repnz
lds
push
lcall
repz
and
xor
jne
sbb
mov
rcrl
xchg
ficompl
repnz
int3
xor
fcoms
leave
push
bound
scas
andb
sbb
dec
lret
push
mov
xor
pop
sbb
in
stos
xor
lret
ret
sbb
mov
pop
icebp
rclb
sub
push
sahf
pushf
add
or
push
rcrl
cmp
lahf
dec
call
cltd
fbstp
mov
aaa
pop
mov
cli
jmp
or
add
mov
sbb
aad
shrl
popa
push
addr16
sub
add
lods
and
sub
sub
out
cmc
mov
aam
sahf
mov
repz
fwait
pusha
mov
mov
divb
shlb
pop
pushf
roll
xchg
out
push
insb
push
jmp
add
dec
xchg
jo
xchg
js
ljmp
dec
and
cmpsl
insl
stc
lea
add
xchg
pop
mov
adc
roll
cwtl
out
xchg
insl
inc
inc
mov
dec
sub
pop
adc
jbe
cs
fistpll
mov
je
lea
cmp
jmp
fstl
rcll
add
lea
push
cmpl
stc
xor
or
inc
fistl
mov
xchg
pop
jg
mov
sbb
dec
or
mov
add
out
test
fstpl
call
out
or
or
inc
add
mov
jecxz
jle
scas
clc
push
mov
sub
aad
aad
xor
dec
push
outsl
in
or
and
es
loopne
js
add
jmp
pop
inc
xchg
into
xor
out
lcall
or
stc
sbb
mov
nop
insl
pop
das
fbld
xchg
clc
dec
je
jle
outsl
pop
clc
stos
lock
dec
jg
lock
enter
jg
xchg
lret
test
add
fidivrl
in
ja
mov
dec
sti
cli
fsts
imul
and
mov
scas
insl
test
xor
jp
jge
jecxz
or
lods
push
add
in
mov
fxch
shr
clc
rorb
mov
cld
arpl
pop
arpl
lods
lods
mov
cmp
or
out
pop
adc
imul
mov
sub
mov
fists
ficoms
enter
jecxz
rcrl
cmpsl
test
into
dec
movsl
add
adc
call
fdivrl
loope
fsubrl
mov
stos
std
add
daa
bound
adc
jl
xchg
test
js
or
test
xchg
pop
out
mov
jle
jecxz
or
imul
outsl
and
lret
push
ja
repz
out
addr16
sub
test
push
mov
or
mov
sti
lods
jecxz
aaa
sarl
popf
shlb
jg
popf
decl
cmp
repz
push
pop
repz
xchg
sbb
pushf
rcrl
mov
mov
cs
loope
lret
cwtl
jns
scas
data16
pop
hlt
ljmp
xchg
repnz
or
add
addr16
pop
inc
imul
jo
jbe
sub
mov
loopne
and
sub
push
insb
push
rcll
pop
test
popf
jle
repnz
and
cmp
lock
scas
mov
sub
scas
xchg
out
shll
inc
repnz
jnp
jbe
or
mov
or
cmpsb
hlt
fdivrp
lds
push
add
cmp
and
jns
rolb
movsl
stos
jecxz
out
imul
dec
sbb
arpl
ret
adc
mov
bound
mov
pop
mov
cmp
inc
ja
mov
xchg
enter
and
and
pop
arpl
and
push
cltd
in
rcrb
xchg
nop
xchg
and
jge
mov
addr16
push
idiv
sub
sahf
loope
lret
jo
sbb
es
push
roll
add
shll
dec
sahf
les
or
mov
mov
aam
adc
mov
cmp
jecxz
mov
outsl
xchg
jecxz
shr
into
aam
insb
lahf
mov
mov
inc
arpl
add
xchg
lret
inc
push
and
mov
sub
bound
stos
imul
fwait
or
pop
and
pop
xlat
negb
cmpb
insl
movsb
daa
sbb
pop
mov
mov
mov
xor
adc
js
jecxz
dec
sbb
fldcw
xor
xor
and
push
mov
rol
stc
gs
sarl
lods
hlt
jp
xchg
push
loop
jne
jle
sbb
aad
cli
in
push
mov
les
xor
sti
xchg
jp
xor
ror
adc
add
ja
lea
push
xchg
xor
mov
add
xchg
inc
dec
cli
mov
out
test
cmpsb
test
dec
cwtl
dec
scas
push
mov
das
insb
mov
or
ss
bound
dec
ret
out
mov
cld
push
outsl
pop
test
cmpsb
mov
lods
mov
jnp
push
or
xchg
scas
xlat
jno
xchg
shr
mov
ror
fdivr
test
inc
iret
out
and
mov
push
and
push
mov
shrl
inc
xlat
pop
cmpsl
test
test
lret
popa
cwtl
push
add
frstor
cmp
ja
push
pushf
jo
push
ret
fst
cmp
test
scas
inc
imul
jle
out
in
pop
adc
pop
lods
mov
sub
repz
in
pop
ret
or
test
jp
mov
rclb
cmp
xchg
jno
clc
cs
cmpsl
ljmp
dec
lods
xchg
inc
ja
cmp
inc
push
enter
mov
mov
cmpsl
dec
ret
call
mov
mov
dec
sbb
inc
in
cmp
or
bound
arpl
push
sahf
leave
add
dec
inc
or
inc
andl
dec
test
xchg
repnz
movsl
adc
mov
call
jbe
incb
shll
sub
data16
jmp
test
pop
cmp
push
or
and
in
mov
outsl
hlt
negl
subl
mov
test
sbb
das
pop
pushf
push
cmp
adc
jo
or
ficoms
in
lret
clc
addr16
ret
push
adc
or
sub
sarl
mov
inc
or
inc
hlt
lret
stc
push
rcll
mov
in
xchg
cmp
cmp
les
mov
fimull
fadds
shl
pop
ss
mov
and
out
sbb
pop
sbb
and
out
and
pop
std
loop
push
xchg
dec
mov
and
jl
ja
sbb
decb
mov
imul
or
pushf
adc
and
xchg
incl
dec
cmp
mov
inc
jne
mov
jae
jmp
mov
call
into
mov
cwtl
cs
push
sbb
in
adc
je
dec
stc
or
or
aaa
ljmp
jae
mov
js
aad
sub
push
shrb
sub
js
pop
mov
push
das
mov
rclb
mov
fs
cmpsb
inc
outsb
sub
shrb
ret
add
sbb
insl
mov
cwtl
mov
inc
sub
subb
inc
popa
jb
fmuls
and
mov
js
pop
jle
test
lahf
popl
retw
loop
xchg
dec
aas
out
and
movsb
xchg
fnsave
push
jle
sub
inc
jp
ret
xor
xchg
insl
xchg
push
jns
sub
das
in
mov
xor
jae
in
sar
pop
pop
ret
and
mov
rorl
sub
adc
testl
cmp
jmp
sarb
outsl
jle
repnz
orl
in
mov
dec
jb
scas
test
ja
sbb
movsb
int3
xorl
jbe
addb
cmpsb
or
iret
cmp
mov
ds
stos
cmpsl
hlt
or
mov
lds
mov
mov
sub
adc
addl
pushf
adc
test
out
data16
push
mov
jmp
js
jbe
test
jae
cmp
add
call
and
and
cld
add
scas
mov
add
or
movsb
imul
aaa
or
movsl
je
mov
aaa
fsubs
mov
hlt
stos
bound
pop
adc
adc
and
xor
jmp
loope
dec
mov
adc
out
arpl
cmp
push
sarl
xor
dec
sub
mov
pop
xorl
out
mov
dec
sbb
jmp
and
xlat
imul
mov
jp
lods
arpl
int
jmp
xor
cmp
shll
inc
sbb
jns
dec
sub
repnz
leave
test
out
lods
inc
jb
outsb
pop
jbe
imul
out
add
dec
push
or
arpl
add
push
jle
jg
lock
cmp
and
into
sbb
xchg
sub
mov
hlt
push
fwait
in
xchg
ret
xchg
xchg
xchg
mov
lret
or
xchg
xor
test
sub
out
sub
push
push
loop
or
movsl
adc
cltd
dec
adc
push
cmp
xor
push
mov
adc
loopne
or
in
sbb
xor
push
add
mov
inc
add
sub
jo
repnz
and
pop
sbb
enter
jnp
loopne
sbb
cmp
mov
mov
aaa
cld
jb
in
pop
bound
xchg
jne
cmpsl
ret
hlt
xor
leave
imul
mov
data16
dec
mov
lret
sti
xor
jge
stos
loope
xchg
pop
dec
aas
or
leave
push
fsubl
sbb
mov
cs
xchg
inc
pop
pop
jnp
push
mov
pop
adc
pop
fistpl
jnp
cld
enter
inc
adc
cmp
xchg
jb
cwtl
add
or
fiadds
jnp
sub
aad
test
int
sub
pop
int3
mov
filds
pop
shrl
mov
mov
lcall
jnp
xchg
pop
aad
jg
adc
push
xchg
inc
pop
cmpb
push
divb
aad
xor
repz
mov
loopne
pop
in
fisttpll
mov
adc
pop
pop
pushf
jmp
dec
fbld
fnstcw
rcrl
imul
out
xchg
je
iret
mov
es
insl
gs
shll
roll
sbb
in
daa
inc
sahf
cmp
jb
movsl
lcall
arpl
decl
aaa
jns
test
andl
es
pop
stos
aad
mov
sub
xor
push
aaa
add
int3
inc
mov
dec
cwtl
popl
sbb
ficoms
js
adc
rcl
xchg
mov
cwtl
xor
ret
insl
mov
in
and
aas
aad
out
push
adc
test
jno
cmp
add
add
inc
jno
sbb
mov
daa
mov
and
lret
neg
add
jmp
out
stc
loopne
stos
mov
les
rcrl
lods
fcoml
sub
fdivr
dec
push
jae
mov
mov
mulb
loop
cmp
arpl
xlat
fistps
xor
and
dec
lcall
dec
xor
fldl2t
xchg
mov
xchg
cmpsb
or
int3
sub
ljmp
cmp
inc
sbb
xchg
cmc
imul
nop
inc
cld
loopne
sbb
dec
mov
shlb
sub
cwtl
pop
in
fcomp
jge
fstps
jecxz
inc
mov
cmp
adc
lds
mov
push
jle
sub
push
cmc
mov
pop
or
das
mov
daa
test
fs
pop
subb
dec
call
mov
outsb
xchg
in
or
xor
mov
lcall
and
jbe
inc
inc
pop
aaa
mov
jg
cmp
mov
add
incl
pushl
cmp
rorl
out
add
int3
or
insb
jnp
js
int3
pop
sbb
xchg
lock
test
sbb
sub
adc
repz
xchg
jne
rcll
dec
jp
adc
lods
adc
inc
in
mov
movsb
call
mov
mov
and
cmp
dec
push
lahf
mov
nop
movsb
jo
xor
cmpsb
mov
ss
cmp
and
imul
arpl
xor
cmp
inc
inc
jne
and
cmp
sti
push
jecxz
push
cmpsb
cmc
psubd
push
jne
jae
adc
cmpsl
adc
in
xlat
fs
in
mov
std
nop
mov
push
xor
out
test
xchg
or
cmp
rorl
ss
je
call
mov
sbb
mov
or
fidivl
pop
and
gs
mov
xchg
mov
movsl
adc
mov
addr16
jmp
adc
jne
xchg
mov
push
cmp
inc
lahf
cmp
xor
sbb
lret
setne
xor
sbb
jo
pop
push
ljmp
mov
stos
cltd
ja
imul
sub
and
sub
insl
mov
push
cmp
ret
mov
test
mov
push
push
rcrl
test
int
jns
xchg
pop
or
imul
clc
mov
loope
push
sub
insl
and
pop
push
mov
inc
cmp
dec
sbb
push
int
jns
push
and
dec
jmp
dec
mov
xchg
add
dec
ja
xchg
sub
dec
popf
jb
testb
imul
stos
jae
jecxz
xchg
jl
jmp
mov
in
xchg
mov
stos
xor
dec
loopne
das
cltd
jecxz
addr16
test
leave
mov
out
mov
jb
sub
in
xor
cmp
push
add
fistpl
push
cmp
push
sub
mov
jo
mov
aas
sbb
leave
sbb
fmull
adc
lea
test
inc
mov
push
arpl
inc
jns
out
dec
sarb
sbb
sub
adcl
mov
pop
repnz
rcl
jbe
pop
ret
je
movsl
pop
loopne
mov
mov
and
fldl
lahf
movsb
add
lcall
js
addl
popa
mov
mov
mov
pop
bound
mov
cld
and
xchg
mov
push
lahf
add
arpl
shrl
fimuls
sub
dec
xor
dec
movsl
sbb
inc
fldenv
sbb
xchg
mov
or
cmp
mov
cmp
push
jns
pop
push
inc
add
and
icebp
cmp
int3
jns
hlt
inc
xor
in
leave
lret
sub
xchg
adc
shlb
popa
mov
sub
mov
call
sahf
inc
pop
inc
mov
inc
je
scas
xchg
mov
dec
outsb
orb
sub
pop
jp
les
add
imul
mov
sbb
xchg
outsl
xchg
andb
iret
fstpt
imul
jmp
scas
sbb
push
xor
mov
mov
jae
mov
pop
pop
das
ret
cmp
insl
xor
add
add
sbb
or
das
mov
ljmp
mov
inc
xor
pop
outsl
insb
mov
mov
imul
mov
out
jl
xchg
test
xchg
mov
xlat
jmp
mov
bound
push
aam
int
lods
adc
sub
cli
lret
xor
pop
fs
cmp
dec
mov
dec
push
dec
jmp
or
in
notl
cli
dec
sbb
sub
push
jb
add
inc
repnz
adc
loope
push
mov
sbb
sbb
mov
lahf
sub
mov
dec
in
nop
lcall
leave
fmull
insb
aam
gs
in
es
clc
or
mov
add
xlat
icebp
push
xchg
call
popf
xor
enter
mov
push
scas
imul
enter
andb
jl
int3
or
pop
repnz
data16
push
xchg
out
outsb
data16
cli
ja
std
je
push
inc
xlat
out
loope
je
loopne
pop
fimull
xor
xlat
icebp
sub
adc
das
hlt
push
add
sti
sub
xor
loope
pop
push
and
mov
jle
xchg
rolb
add
icebp
push
lock
sahf
imul
fcoml
imulb
fmuls
jno
and
nop
jp
cmp
gs
sarb
pop
in
shl
xlat
lahf
popf
mov
pop
lret
cmpsl
sahf
stos
add
jno
das
fisttps
es
or
add
jg
mov
ret
and
mov
lds
dec
and
pop
out
call
jae
xchg
jae
mov
inc
mov
into
jmp
xor
bound
test
fwait
and
scas
jne
and
and
pushf
ret
push
arpl
cmp
jo
incb
push
xor
xor
imul
jne
or
sbb
push
shlb
fistpl
mov
test
sahf
add
mov
fisubrl
adc
push
out
add
inc
xchg
das
ret
pop
push
test
and
lcall
fcom
lahf
out
sub
adc
mov
sub
ljmp
sub
mov
jle
testb
out
jo
jae
or
int
add
or
int3
adc
sarb
jbe
pop
add
scas
dec
fidivrs
push
fisubs
push
andl
push
xchg
fdivl
inc
add
sub
shl
cmpsb
insl
bound
inc
out
mov
xor
out
mov
push
jecxz
sub
mov
cli
push
sti
out
data16
shrl
inc
lods
insb
mov
stc
jne
pop
int
movsl
sahf
pop
mov
dec
repz
jb
loopne
arpl
inc
xchg
lahf
repnz
push
mov
in
imul
das
ss
loope
shrb
push
fcmovnu
jbe
cmp
js
cmpsl
jae
incl
mov
adc
mov
enter
jae
dec
push
in
push
mov
push
sub
mov
cltd
jb
imul
lret
fucomi
mov
xchg
fucomi
and
cmp
ret
xor
pop
jle
in
sti
in
dec
mov
push
addr16
push
loope
cmp
dec
or
mov
xlat
pop
jb
shll
lock
or
fwait
inc
mov
data16
xchg
pop
mov
mov
xor
xchg
movsb
mov
adc
insl
arpl
sbb
cmpb
mov
sahf
cmp
fs
fstpt
std
popa
mov
xor
xor
loop
jno
xor
jno
movsl
es
lds
test
push
lock
cmc
cmp
xchg
lods
mov
test
or
mov
scas
cld
repz
popa
movsb
mov
shlb
pop
dec
std
pop
mov
arpl
xor
or
bound
pop
push
mov
add
jno
test
inc
mov
sub
test
call
dec
add
shr
cld
pushf
sub
sbb
jns
pop
mov
dec
inc
fsubr
sub
add
imul
ds
sub
aad
and
imul
push
aas
jg
and
lods
adc
inc
lods
std
mov
jo
ret
lahf
cltd
and
ret
test
jns
shlb
insl
andb
mov
shlb
inc
jmp
pop
lods
pop
outsl
mov
dec
cmpsb
les
int
and
xchg
mov
jnp
lods
lret
pop
push
cltd
mov
sbb
mov
outsb
jge
and
fists
addb
gs
in
jecxz
mov
inc
cltd
mov
or
je
fisubrl
bound
sub
loop
sub
inc
xchg
lahf
flds
test
repnz
scas
cli
repz
test
shl
iret
sbb
loop
mov
adc
jbe
xchg
inc
mov
sahf
jb
xor
cli
inc
sarb
dec
test
cmp
pop
mov
fs
lahf
jp
scas
pushf
mov
les
sub
into
xchg
dec
mov
add
inc
xchg
filds
out
stc
popa
in
fsubrs
push
sub
cmp
in
cmp
stos
test
test
stos
inc
add
popa
sbb
pop
sbb
mov
mov
aas
nop
test
jp
xlat
pop
jg
aaa
ret
filds
push
jge
jne
push
sbb
jne
cltd
es
mov
pop
jg
cltd
push
cmp
dec
lods
lret
movsl
xor
pop
ret
fisttpll
popl
or
sub
lret
inc
dec
cmpsb
dec
popa
cmc
ret
dec
mov
inc
in
xor
hlt
dec
pop
push
cmp
aad
inc
xlat
mov
test
push
xor
dec
push
and
out
into
imul
out
dec
clc
and
inc
jp
pop
sbb
fcmove
das
pop
mov
mov
mov
mov
cltd
xor
mov
mov
mov
repnz
dec
int
push
pusha
popf
mov
mov
lock
push
push
out
loop
bound
xlat
ds
mov
mov
nop
leave
mov
cli
ror
clc
inc
adcb
lret
repz
sub
inc
fmull
cmp
push
sub
mov
hlt
cmp
cld
jb
test
dec
dec
jmp
pop
mov
cmc
pop
jmp
adcl
lret
leave
fidivrl
cmp
xlat
mov
mov
lret
mov
insb
shl
jne
ret
inc
addr16
adc
and
cs
scas
aad
lret
xor
xlat
fidivs
jnp
movsl
and
xchg
mov
or
sarl
negb
mov
nop
pop
or
xchg
stc
inc
mov
pop
jecxz
adc
lock
sbb
add
cs
sar
pop
fstpt
idiv
icebp
out
stos
les
test
and
out
movsb
stc
insb
mov
xchg
enter
sbb
out
shl
cmp
sbb
fisubl
sub
jno
xchg
fisubrl
inc
lock
xorl
jge
aam
pop
mov
fs
data16
daa
push
jge
mulb
mov
aad
mov
inc
jp
inc
shll
cwtl
cmpsb
sbbb
or
bswap
lret
xor
add
imul
ret
lret
into
dec
jl
jb
inc
inc
into
xor
in
scas
fistpll
test
aam
lcall
mov
and
dec
mov
sbb
daa
cmc
bound
clc
push
lea
inc
or
mov
mov
adc
fwait
shl
and
mov
int3
aas
popa
jmp
movsl
xchg
xchg
or
jg
add
sub
iret
or
sub
push
or
das
rcr
lret
mov
mov
fnstsw
lret
inc
cmpsl
and
cs
mov
jl
not
testb
rcrb
pop
imul
mov
push
shrb
push
cmc
shlb
xchg
aad
xor
push
fsubrl
sub
add
mov
push
jp
cmp
and
cmpsl
cmc
inc
xor
xchg
jns
xchg
aas
push
or
out
fcmove
fs
arpl
add
in
repz
pusha
ss
out
cmp
mov
rolb
jecxz
adc
and
imul
mov
in
out
adcl
inc
inc
fisubl
mov
mov
or
lods
fidivs
push
add
adc
ficomps
clc
mov
aad
inc
mov
add
sbb
pusha
pop
inc
cmp
mov
lods
lahf
divl
mov
fnstenv
fsubs
sbb
bound
ds
in
aas
dec
push
and
sbb
imul
call
add
adcl
adc
scas
popa
ds
xchg
pop
and
mov
mov
lods
fcomi
dec
or
inc
fwait
shll
pusha
ljmp
mov
xchg
push
xchg
lret
test
xchg
add
add
inc
iret
icebp
jbe
mov
xchg
mov
cmpsb
mov
bound
cmpsb
fnsave
lods
out
scas
xchg
pop
or
js
jmp
push
rol
lea
in
sbb
bound
mov
ret
mov
adcb
mov
jo
in
and
in
clc
and
arpl
insl
xchg
addr16
in
push
pop
and
adc
test
push
iret
stos
fsts
jg
xchg
rorb
jbe
dec
fiadds
in
dec
and
stos
cmp
or
mov
push
icebp
and
loope
inc
or
fnstenv
mov
stos
neg
imul
inc
or
popf
in
push
pop
rcl
out
daa
xor
cmpsl
jl
fildl
gs
push
xor
ja
mov
in
scas
sbb
ja
ds
sar
cmc
sbb
push
lcall
sahf
stos
add
push
nop
xchg
jno
mov
push
cmc
negb
inc
dec
iret
popf
insb
shr
fdivs
out
rcl
out
inc
dec
shlb
or
mov
nop
mov
jl
pop
in
inc
inc
jge
sbb
arpl
and
fs
repz
push
lods
sbb
stos
mov
mov
movsb
dec
daa
xchg
dec
fwait
and
mov
lahf
cmpl
insb
xchg
add
sbb
add
push
lods
pop
push
sub
cmp
nop
adc
addr16
pop
test
inc
inc
push
notb
std
mov
add
inc
sbb
pop
jl
mov
stos
arpl
gs
push
cmp
or
sahf
ja
xor
iret
sub
dec
pop
dec
movsb
cmp
xor
push
dec
cli
fidivs
sbb
lret
pop
fwait
xor
mov
cli
dec
stc
cltd
pop
push
cmp
add
lahf
pop
cmp
xacquire
fildl
lds
lcall
filds
xor
stc
gs
xor
icebp
pop
pcmpgtd
sarl
pop
lahf
mov
mov
xchg
sbb
mov
aam
add
test
pop
rcll
or
push
outsl
mov
sti
mov
push
leave
sahf
jmp
addr16
xorl
loopne
mov
mov
jae
dec
and
mov
xor
xchg
sti
mov
les
cmpsl
nop
and
divb
lea
leave
neg
sbb
mov
loop
and
in
sub
arpl
cltd
jne
movups
sub
setne
call
pop
scas
cli
hlt
movsb
cmp
sub
imul
notb
idivb
dec
fsubrl
popf
fsubrl
mov
jmp
mov
push
xchg
cmpsb
fstl
sub
or
mov
mov
into
arpl
getsec
and
mov
shr
add
mov
loope
adcl
pop
iret
jae
mov
mov
outsb
andl
sub
mov
pop
xchg
jno
lcall
pop
fidivl
lock
mov
cltd
mov
gs
sub
mov
repz
jbe
mov
cld
icebp
cmp
add
cld
cli
sbb
in
sbb
out
cltd
mov
lahf
pop
das
mov
aad
cwtl
andnps
cmpsb
jb
sub
sbb
and
xchg
scas
je
rclb
faddp
fiadds
out
lds
in
fdivl
jno
rorl
roll
dec
lcall
sbb
mov
fcom
jl
popf
pop
dec
xlat
shlb
adc
sti
sub
stos
mov
pop
xchg
or
bound
mov
mov
fistl
mov
cmp
out
aaa
add
in
test
iret
pop
mov
inc
mov
mov
add
imul
neg
inc
adc
and
dec
push
out
adc
jmp
loopne
cmp
ljmp
dec
mov
or
js
pop
mov
int
mov
nop
nop
mov
mov
fiaddl
in
test
nop
scas
adc
pop
fucomp
pop
add
imul
cwtl
ret
fnstenv
stc
inc
cwtl
addl
dec
sbb
jb
stc
in
rclb
cmp
insb
lcall
roll
xor
adc
rolb
int3
jne
and
insb
stc
pusha
and
cmp
clc
mov
add
imul
add
pop
jbe
lret
je
push
xchg
jl
cmpsb
subb
repnz
push
inc
push
loopne
mov
and
mov
movsb
inc
add
fwait
jae
fnstsw
outsb
scas
cli
movsb
notb
xchg
cwtl
cld
jge
loope
into
sub
test
xchg
or
lahf
div
pop
std
sub
lahf
pop
push
lret
adc
out
push
clc
push
sbbb
lods
pop
lods
xchg
rcrl
imul
cmp
push
fisttpl
into
mov
addr16
adc
ret
in
pushf
mov
ja
ret
mov
jae
outsl
or
mov
in
xor
pop
adc
int
adc
mov
cmp
inc
and
int
outsl
xor
std
or
dec
loope
in
push
sub
mov
pushf
fbstp
mulb
test
lock
mov
repnz
outsl
inc
sub
ret
jb
std
sub
xchg
xor
pop
or
fadds
movsb
testb
add
imul
fs
in
cmc
adc
mov
int3
pop
xlat
cltd
test
adc
testl
pop
mov
cmp
fs
lret
and
mov
adc
lea
shll
xchg
lcall
sahf
out
out
lods
dec
enter
xchg
cltd
scas
sbb
inc
scas
stc
sub
pop
xor
push
insb
xchg
push
and
lock
sub
dec
inc
mov
pop
sub
sbb
or
cltd
sub
adc
or
inc
xchg
pop
lcall
movb
push
iret
lea
mov
inc
mov
lea
pop
aam
lock
in
sub
test
insb
mov
add
ret
pop
ss
inc
lods
cmp
or
cwtl
push
outsl
rclb
lock
popa
loopne
mov
inc
pusha
movsl
mov
shll
mov
fwait
lcall
imul
mov
loope
test
aaa
and
jns
mov
notl
or
inc
adc
call
pop
lahf
push
jne
xor
orb
xor
scas
push
jno
mov
imul
cmp
mov
adc
fs
dec
sbb
dec
xchg
and
dec
xchg
mov
outsb
leave
dec
ljmp
inc
or
mov
jb
jmp
fbstp
push
push
cwtl
adc
in
jle
jl
sub
sub
cmc
mov
mov
or
ljmp
dec
jle
enter
mov
xchg
push
inc
lock
xor
rcr
es
xlat
cwtl
fildl
pop
jo
in
gs
fdivs
and
jmp
rcll
lds
dec
in
xchg
or
push
loop
jns
or
xor
cmpsw
xchg
xor
lcall
cmp
dec
cmp
jle
inc
rorl
scas
sbb
call
mov
inc
in
or
mov
push
mov
xchg
cmp
sub
or
dec
dec
rclb
pop
out
adc
je
das
jl
ret
sarl
fisubs
stos
dec
pop
mov
adc
push
mov
mov
out
pop
rcr
lahf
mov
stos
dec
nop
arpl
pop
sbb
sub
cli
out
jae
int3
dec
in
xchg
fcmovb
jl
or
notl
aam
idivb
mov
jle
loop
and
xchg
cmp
jbe
lock
push
ljmp
dec
pusha
sub
dec
mov
aad
imul
gs
cli
je
pusha
andl
sub
adcb
sbb
fldt
rcr
stos
ja
add
lds
xlat
adc
aaa
les
mov
stos
mov
sti
xchg
movsl
push
fiaddl
shrl
fldl
inc
pusha
into
pop
xchg
repz
cs
push
mov
cmp
lea
mov
inc
xchg
test
loopne
pop
fdivl
mov
insl
inc
out
pop
out
insl
call
inc
cmpsl
cmp
add
adc
mov
sahf
cld
cmp
xchg
psubd
lcall
addb
insb
je
inc
dec
aad
ja
or
lock
es
fbld
testb
out
dec
subl
inc
push
or
imul
xchg
inc
ret
mov
push
adc
xor
jp
pusha
pop
test
adc
xchg
loopne
mov
inc
mov
sub
pop
lcall
push
jmp
adcb
inc
pop
jns
jae
inc
daa
repnz
dec
sti
in
jae
jg
lea
int
daa
xchg
fisttpll
adc
push
outsb
inc
push
in
orl
dec
xchg
ja
xor
out
jle
inc
mov
adc
leave
in
add
mov
aad
mov
xchg
mov
movsb
jnp
pop
mov
in
iret
add
jmp
sub
or
shrb
les
mov
int3
out
inc
jmp
sbb
push
ret
je
lahf
lret
mov
push
out
xor
mov
or
add
mov
jmp
jno
xchg
push
cmp
fnstcw
cmp
sub
addl
test
dec
call
subb
pusha
rcrl
cmpsl
push
cmpsl
lds
lcall
pop
sub
xor
mov
xchg
sbb
lods
and
outsl
cmpsb
mov
aam
std
outsb
stc
dec
test
jo
sbb
insl
inc
dec
mov
xor
xchg
xchg
sub
aas
push
jo
dec
fs
repz
test
int3
cld
sbb
adc
mov
adc
or
jge
mov
outsb
inc
movl
jbe
dec
sub
rolb
fdivrl
pusha
pop
mov
lods
es
mov
sbb
faddl
filds
xchg
test
jg
mov
xchg
lahf
lods
or
pop
daa
subb
data16
and
lret
pop
cmpsl
shll
or
in
in
movsl
jne
and
inc
lods
inc
outsb
and
xchg
into
xchg
sbb
iret
shrl
lret
sub
cmp
popa
sub
lods
outsb
pop
cmp
add
sbb
insl
fsts
ret
mov
mov
and
pop
jp
xor
lods
jg
or
cmpxchg
xor
xchg
cmpsb
cld
xchg
in
fidivrl
push
iret
imul
and
dec
inc
sub
mov
testb
add
dec
rclb
sub
xchg
mov
daa
cwtl
adc
sub
lods
inc
mov
and
adc
lock
push
test
inc
loop
mov
lea
adc
xlat
add
add
out
addb
mov
ss
xor
jl
scas
xchg
dec
jmp
mov
add
scas
push
je
push
lods
aaa
inc
lods
pop
outsl
xchg
clc
lods
add
aas
jecxz
ds
sub
and
hlt
xor
lahf
cmpsl
leave
mov
push
jp
mov
jb
adc
sti
sub
pop
neg
dec
out
sub
cmp
pop
je
fadd
pushf
cld
pop
pop
aaa
adc
pop
jns
cmpsl
sbb
dec
mov
es
mov
push
push
lahf
pop
je
xor
xchg
testl
mov
dec
sbb
data16
mov
or
xchg
mov
jle
mov
xchg
cmpsl
cld
lods
mov
andl
mov
imul
or
dec
cmpb
push
cwtl
xchg
pusha
xchg
and
fmul
ja
lcall
hlt
adc
dec
mov
in
push
push
jb
jle
xchg
xor
mov
lret
lea
mov
cmp
adc
inc
dec
dec
mov
lahf
out
test
dec
mov
dec
inc
and
loope
js
mov
inc
mov
xor
adc
mov
xor
mov
mov
imul
incl
cmp
insb
cmovp
adc
sub
outsb
dec
scas
loopne
aad
adc
or
fistps
push
ds
pop
pop
and
and
enter
dec
adc
lahf
insl
pop
push
or
push
fdivr
pop
inc
repz
xor
fcomp
push
ljmp
cld
mov
inc
mov
pop
push
dec
sbb
into
divb
scas
and
and
xor
xchg
add
test
ljmp
xor
rcll
testb
mov
jmp
xchg
cs
daa
popa
jge
mov
cltd
mov
xchg
cld
push
shrb
mov
pop
inc
adc
mov
pop
cmp
addb
mov
sub
xor
and
insb
xchg
cmc
sbb
fnstenv
xchg
mov
imulb
into
dec
rcrl
cli
sub
ds
pop
mov
adc
adc
ret
addr16
jmp
lea
dec
jge
mov
lock
sbb
lret
pop
xor
popa
imul
pop
xchg
test
movsb
jo
xor
jne
scas
and
mov
movsl
mov
push
sub
lods
pop
sti
inc
stc
lahf
or
xchg
mov
pop
push
imul
out
push
aas
cs
outsb
fst
dec
subl
push
shrb
jmp
test
xor
ljmp
pop
inc
sti
sbb
cmp
cmp
and
push
mov
data16
pop
xor
pop
cwtl
lods
adc
inc
lret
mov
mov
aad
or
pop
in
adc
dec
dec
jb
xor
in
test
jne
push
bound
mov
repnz
fstps
mov
add
test
dec
jge
dec
adc
aad
push
shrb
mov
rcrl
cmpsb
xchg
enter
add
jne
jmp
push
aad
and
xchg
mov
in
ret
aam
negb
sbbb
out
in
idivl
frndint
imul
jnp
xchg
test
int
fidivs
les
cmpl
cmp
mov
sbb
les
xchg
mov
ds
mov
jne
dec
enter
and
mov
mov
test
inc
das
and
and
lods
daa
fadds
fnsave
cmc
pop
daa
test
hlt
fwait
pop
cmpsb
or
cwtl
data16
sti
push
imul
push
sub
inc
mov
popf
or
cmpsl
inc
repnz
hlt
inc
fstpl
int
cmp
mov
loopne
inc
dec
jl
push
out
pop
pop
imul
jp
mov
popa
fdivr
cmp
insl
stos
test
inc
fwait
in
sti
xchg
add
jae
xor
cmc
stos
test
xor
cmp
in
rcrb
lods
mov
adc
scas
rcrl
cmp
pushf
jo
lods
pushl
addl
loop
dec
sahf
mov
pop
sub
jnp
mov
xchg
cltd
lods
dec
dec
adc
in
pop
les
dec
cs
aaa
xor
inc
cmp
adcl
cmpsb
les
inc
cmc
test
sbb
gs
jmp
gs
dec
cmp
aaa
outsb
js
mov
mov
loope
sub
aaa
xor
test
jle
pop
adc
fs
ljmp
gs
insl
or
xchg
movsl
shlb
mov
testl
les
jecxz
jecxz
sbb
outsl
xchg
cli
cltd
push
jae
xchg
stos
aad
cmp
testl
push
mov
push
dec
sti
adcb
push
outsb
inc
push
jae
fdivr
xlat
pop
cmc
inc
leave
cmp
xchg
jmp
jnp
sbb
int
f2xm1
test
or
ret
jge
or
push
xchg
in
insl
jno
fcompl
mov
mov
xor
int3
pop
dec
xchg
shlb
mulps
cld
mov
jne
out
ljmp
lds
or
cwtl
fdivl
pop
in
mov
packssdw
imul
xor
in
sub
xor
push
lea
or
xchg
cltd
rcll
lcall
cmc
sbb
or
arpl
das
data16
ds
mov
xchg
pushf
lds
or
testb
add
sbb
pop
out
shlb
fcomip
movsb
xchg
fldt
cmp
lret
mov
inc
test
dec
dec
jnp
or
out
mov
jns
rcrl
add
sbb
cs
stos
pop
pop
cmp
pop
cltd
insl
ljmp
dec
orl
das
scas
ret
sub
jp
mov
js
test
cltd
adc
dec
icebp
hlt
imul
add
adc
cmp
lods
xchg
push
pop
xchg
add
sub
aas
xchg
fsts
shll
dec
mov
and
mov
mov
inc
fldcw
jg
jecxz
xchg
mov
addl
std
test
roll
inc
pop
adc
pop
aad
cwtl
mov
movntq
jge
mov
mov
addr16
jecxz
dec
push
dec
dec
mov
sbb
xchg
imul
scas
loopne
imul
xchg
cmp
adc
pop
adc
in
arpl
push
dec
inc
fwait
fs
out
jl
loop
lds
xor
lock
pop
ret
and
sti
les
subb
in
rolb
and
cld
shl
popf
outsb
lods
shl
xchg
daa
mov
sbb
in
in
mov
mul
jnp
dec
popa
pusha
xor
add
mov
push
jne
push
sbb
xchg
pop
dec
pop
pop
jnp
in
cmp
push
pop
out
or
xor
jnp
jmp
push
lods
fisttps
int
outsb
pop
xor
ret
push
push
mov
nop
ret
sbb
cmp
nop
pop
scas
adc
ss
sahf
dec
jge
pop
mov
mov
xlat
test
in
fucomp
jmp
mov
push
imul
add
cwtl
mov
rorl
mov
push
jl
fucomi
fs
scas
push
mov
movsl
incb
jb
test
mov
arpl
adc
outsb
push
xchg
out
and
adc
or
add
adc
jbe
aad
mov
movsl
ljmp
inc
mov
sub
add
jge
dec
je
mov
addr16
insb
mov
call
pushf
xor
or
lock
sbb
sub
sub
aam
cmpsl
and
ror
adc
dec
pop
cmp
mov
or
fscale
cld
call
mov
adc
sub
cwtl
repnz
sbb
lea
sub
dec
fbstp
roll
jnp
mov
push
aad
sub
das
inc
stos
adc
aas
fs
jb
out
stos
pop
shrb
mov
in
sbb
fwait
pop
xchg
rorl
jmp
mov
sbb
sbb
dec
mov
leave
jp
fildl
outsl
aam
sbb
sbb
and
rcrb
xchg
and
push
jecxz
jmp
xorb
js
or
stos
leave
out
or
cmpb
loope
cli
xor
dec
lret
stc
dec
in
cmpsb
data16
imul
stos
loope
aam
scas
mov
push
mov
lcall
mov
sahf
lret
xchg
dec
lret
fildll
push
dec
mov
cwtl
es
mov
mov
fnstcw
push
jmp
popf
cwtl
mov
fwait
mov
fcompl
sub
gs
pop
in
jbe
cs
movsl
pop
enter
hlt
cli
sub
loope
or
dec
fcmovnbe
mov
pop
mov
push
jmp
add
cs
loop
sti
insb
mov
insb
mov
sti
pushf
jp
stos
dec
movsl
fwait
sbb
jae
cli
movsb
sub
cmpsl
in
pop
into
shll
pop
fsub
out
pop
test
imul
adc
int3
lods
int3
and
mov
sbb
sub
je
icebp
mov
adc
jno
shr
mov
stc
mov
push
in
jecxz
mov
xchg
mov
decl
or
lea
xor
jae
movsl
inc
push
inc
xchg
cmpsb
or
and
sahf
inc
faddl
mov
inc
popa
ds
aaa
ja
mov
fnstcw
mov
ljmp
xchg
fnsave
test
mov
notl
xor
fcmovu
pop
push
jbe
cmp
pop
data16
mov
ljmp
adc
dec
adc
or
adc
rorb
paddb
adc
mov
inc
out
ficomps
xor
push
xor
pop
scas
sbb
fsubrs
int3
dec
outsl
add
dec
divl
rolb
cld
ja
cs
dec
push
jno
out
xor
cmp
sti
cltd
sarb
jmp
bound
sub
xchg
in
xchg
es
jp
stos
or
mov
dec
pop
sbb
xor
push
push
lahf
sub
xchg
mov
sub
cli
cwtl
push
and
xchg
dec
mov
sub
xchg
frstor
add
insb
xchg
sub
hlt
inc
out
and
in
pop
mov
xchg
lahf
mov
dec
imul
dec
dec
push
shr
xchg
xor
push
out
scas
mov
aad
fistl
and
les
jl
fildll
mov
ljmp
lods
cld
xchg
idivl
and
jae
pop
and
push
mov
movsl
sub
xor
mov
lcall
aaa
jbe
cmpsl
scas
lods
jo
add
xchg
sahf
dec
push
pop
pop
and
andl
int
dec
and
add
mov
xchg
int3
adc
out
cmp
sbb
jge
inc
adc
cltd
ss
vpmuludq
sahf
cmpsl
leave
xor
insb
mov
sbbb
mov
sbb
adc
lock
mov
xchg
xor
sub
pop
ret
in
jg
mov
ret
add
jb
dec
jae
push
movsl
cmp
cmp
imul
dec
aam
and
or
popl
inc
into
lods
in
adc
add
daa
clc
add
pop
push
or
subl
cmp
cltd
movsb
jnp
jp
add
mov
jg
loope
cmc
out
and
adc
repz
jno
cmp
mov
shll
cmpl
scas
dec
xchg
pop
and
inc
pop
fsubrs
jo
ljmp
cmpsb
fisttpl
nop
jecxz
enter
mov
lret
mov
cmp
sbb
repnz
mov
mov
in
pop
fnstenv
int3
jbe
test
adcb
fistl
cld
loopne
icebp
andl
adc
cwtl
mov
xchg
decb
fdivrl
test
nop
mov
inc
sub
jmp
shlb
loope
sbb
insl
out
sub
or
push
push
sub
push
pusha
test
inc
xchg
inc
push
or
cs
hlt
jo
mov
fimull
mov
or
cmc
jg
shlb
mov
fwait
mov
mov
or
lods
rolb
fadd
std
or
in
xor
lcall
ret
rorb
incb
dec
stos
stos
gs
push
lret
lods
jge
repnz
adc
cmpsb
fwait
lahf
lcall
stos
inc
test
movsb
inc
dec
mov
adc
add
je
push
pop
dec
stos
or
clc
pusha
xor
pop
xchg
sahf
subl
mov
stc
xlat
add
shr
sub
ss
inc
ret
mov
dec
pop
and
in
xchg
imul
idivb
mov
fwait
jle
inc
push
pop
outsl
mov
hlt
jmp
pop
mul
jmp
inc
xchg
xchg
mov
gs
push
daa
xlat
lret
jo
imul
les
test
cltd
call
or
pop
iret
enter
pop
shll
js
cmp
addb
into
stos
sbb
jns
xchg
in
je
or
xor
and
mov
in
mov
xchg
mov
xchg
js
and
mov
add
dec
nop
push
sbb
jae
add
mov
push
xor
dec
icebp
jbe
adc
mov
push
stos
fnstcw
sarl
add
gs
out
adc
push
call
aam
xor
cs
push
xchg
ds
in
push
pusha
cmp
pop
inc
dec
dec
mov
xchg
imul
inc
pop
cwtl
adc
dec
xchg
fsts
mov
push
in
xlat
sub
xor
mov
cwtl
testb
ret
out
adc
sbbb
mov
jl
mov
xor
sar
xchg
aaa
ja
push
mov
dec
pushf
cmp
jno
mov
shl
out
daa
jecxz
fnsave
adc
push
lods
ljmp
mov
mov
mov
aaa
inc
jb
inc
lcall
ficoms
adc
jne
imul
out
arpl
stos
adc
push
sub
pop
xor
pop
and
out
stos
adc
dec
sub
mov
cmp
cmp
test
pop
mov
sahf
repz
pop
imul
add
rcr
sub
mov
xor
int3
add
push
xlat
movsl
push
pop
cmp
adc
addr16
out
jae
nop
subb
ja
sahf
and
mov
cmp
or
or
fistl
xor
mov
dec
and
ret
mov
cmp
inc
pop
fiadds
mov
sbb
ja
sti
xlat
xor
push
lods
adc
pop
ja
jp
xchg
repz
mov
jno
incl
xor
or
int3
mov
xor
and
mov
jecxz
xor
popa
roll
mov
inc
dec
xchg
ret
rol
dec
rolb
mov
xchg
xchg
sub
jbe
out
mov
dec
cmp
mov
cmp
inc
dec
cmc
gs
mov
negl
aas
popf
shlb
sahf
sub
and
jne
lret
xor
stos
sbb
xor
cmp
inc
out
jle
jae
test
cmp
jp
cmp
loopne
data16
hlt
sti
pop
sub
jp
pop
lods
dec
subb
fnstsw
sti
jmp
inc
and
cmpl
xchg
mov
in
pusha
out
lret
fmuls
lock
insb
inc
jg
ss
xchg
sbb
gs
add
gs
adc
jmp
out
inc
xchg
push
mov
push
sarl
aam
xchg
mov
aaa
test
jno
rclb
in
inc
movl
fs
fwait
cmpsb
mov
push
inc
sbb
lods
sbb
jb
icebp
sub
cld
pop
sbb
inc
fists
lods
fcoml
add
rorb
dec
daa
in
ja
jne
lret
jb
pop
inc
dec
add
cmc
in
or
xchg
and
popa
mov
iret
bound
and
adc
loope
add
pop
imul
add
add
test
outsl
sarb
dec
mov
mov
int3
into
mov
idivb
inc
cmp
mov
adc
sub
mov
xchg
pop
faddl
ja
ror
faddl
cmp
ds
bound
fs
jb
add
jl
xchg
es
mov
mov
stos
mov
in
repnz
cwtl
test
testl
cld
mov
pusha
xchg
xor
das
cld
fnstcw
fwait
stc
je
and
les
mov
ret
aam
push
pusha
int3
addl
int
xor
frstor
mov
jno
outsl
cmp
lcall
cmp
cld
mov
or
out
cld
pop
ret
dec
mov
mov
imul
sub
inc
jge
push
pop
push
push
mov
cli
push
jns
sub
mov
sub
rorl
sbb
mov
or
out
sbb
test
shl
pop
jo
pushf
test
sub
icebp
inc
cwtl
inc
cs
xor
pop
aad
adc
xorb
jno
push
aaa
dec
push
push
sahf
xlat
clc
outsl
in
inc
mov
mov
add
cmp
subb
out
movsb
incl
cmp
cmc
mov
adc
adc
insb
lret
jge
push
pushf
push
aaa
add
mov
mov
or
pop
push
pop
frstor
popf
icebp
add
push
fldt
mov
mov
fnsave
lcall
dec
andb
leave
push
loopne
adc
out
or
jno
pop
sub
jmp
mov
cwtl
mov
pop
cmp
dec
add
sbb
movsb
push
and
sub
stos
rcrb
movsl
stos
scas
mov
fsubrl
stc
dec
int
repz
add
subb
loopne
add
fadd
out
and
insl
or
pop
mov
mov
into
insl
in
lods
aam
mov
loopne
jno
xchg
cltd
ret
scas
xor
cmpl
lods
xchg
shll
repz
lea
pop
or
cltd
pop
pop
loop
loop
adc
cltd
push
iret
fs
rorl
idiv
push
dec
pop
mov
or
out
js
lret
push
or
add
push
dec
leave
dec
add
out
mov
insb
or
daa
lods
ret
dec
addb
dec
shlb
mov
sbb
jnp
loope
dec
mov
mov
pop
add
out
inc
jns
shlb
mov
inc
pop
inc
mov
lods
and
out
scas
mov
stos
and
fdivrl
ds
sub
aas
jo
pop
in
int3
orl
mov
jge
adc
out
mov
and
pop
sub
popa
jae
shlb
mov
xchg
sbb
pop
lods
js
mov
lock
cmp
call
xchg
mov
sub
xchg
inc
push
sar
call
inc
xchg
sub
inc
cmp
div
jge
pop
sbb
shlb
jle
cmc
ror
xchg
adc
adc
or
divl
sbb
bound
into
dec
aas
cltd
clc
pop
push
imul
mov
inc
cs
aas
sbb
mov
pop
mov
push
lea
jmp
sbb
divb
je
leave
cmpb
mov
imul
adcb
pop
leave
cltd
jns
mov
ja
call
mov
push
push
lret
inc
xchg
scas
pop
mov
orl
in
adc
imul
cmp
pop
adc
lret
cli
leave
fld
jg
cmpsl
pop
or
pop
mov
leave
outsl
inc
fs
xchg
pusha
sbb
fs
in
cmp
cmp
ret
mov
shl
test
sbb
inc
xsha1
cmpsb
int
cmc
or
scas
faddl
aaa
imul
mov
std
shll
cmp
push
jg
sub
mov
inc
jo
add
mov
pcmpgtb
xor
jg
outsb
and
sbbl
cmp
xchg
loop
mov
ret
jno
pop
gs
sarb
insb
xor
xchg
imul
cltd
mov
movsl
pushf
ret
or
mov
je
sbb
das
mov
testl
andb
xchg
rolb
jb
addr16
adc
sahf
push
and
cmp
inc
pop
loope
cmp
and
xor
jo
xchg
mov
into
xchg
pop
sbb
pusha
movsl
js
mov
call
mov
cld
es
add
loopne
jle
out
sbb
out
push
mov
mov
adc
imul
mov
or
push
lret
mov
inc
int3
je
adcb
xchg
mov
sub
jo
enter
aam
xorl
xorb
cli
jp
inc
mov
xor
mov
imul
or
cltd
int
xchg
push
cwtl
insl
push
pushf
leave
cltd
jp
aam
inc
test
mov
leave
add
xlat
out
sub
pop
hlt
xchg
jl
sub
xor
call
cltd
loope
mov
mov
in
leave
and
int3
out
jmp
jl
xchg
cltd
xor
xchg
cld
in
in
test
movsb
and
scas
dec
or
lods
sbb
imul
pushf
cmp
mov
xor
mov
jae
fimuls
jmp
movsb
les
mov
iret
inc
mov
insb
add
int3
std
test
test
adc
icebp
fstpt
call
andb
in
insb
orl
inc
mov
dec
orl
addr16
sub
mov
nop
xchg
incl
imul
out
insb
pop
adc
ss
stos
stos
cmc
mov
mov
cld
test
sub
push
cmpsb
lods
inc
lods
movb
mov
mov
mov
sub
mov
jp
data16
pop
shl
dec
sub
flds
lret
adc
gs
inc
adc
dec
test
incl
outsb
notb
sbbl
call
scas
inc
lcall
pop
out
adc
dec
and
test
mov
jbe
push
dec
mov
adc
jmp
or
pop
xor
cmp
popf
insl
repnz
push
insl
pop
jge
push
and
rclb
popf
mov
repnz
in
test
enter
and
push
add
idivl
lret
push
popf
stc
add
cmpb
dec
mov
dec
xorb
jae
ja
xor
or
cld
inc
addl
aad
js
jp
fadds
mov
loop
dec
cs
stos
shr
sbb
jge
sub
imul
push
dec
push
pushf
imul
cmp
adc
pop
jns
int
es
and
xor
je
pop
mov
test
insl
push
and
sbb
filds
dec
jnp
xchg
bound
jmp
mov
xor
sbb
or
adc
lds
sbb
minps
add
int
sub
mov
loope
leave
xor
sti
ljmp
imull
xchg
sbb
mov
jecxz
pushf
mov
mov
test
push
addr16
xor
imul
ret
sbb
test
add
jecxz
fbstp
xlat
sbb
mov
push
andb
jl
mov
repnz
xchg
pop
jae
in
sahf
xchg
cmc
push
lea
cld
jmp
or
mov
push
ja
aas
xor
in
mov
add
mov
dec
add
pop
andb
jb
push
add
je
lea
push
sbb
inc
je
push
mov
inc
add
aas
testl
imul
pop
in
pop
aad
xchg
mov
leave
sbb
in
icebp
idiv
mov
sub
scas
clc
xchg
cmp
cmp
cld
xor
scas
lahf
push
mov
mov
inc
mov
es
mov
scas
ja
dec
jg
or
insl
test
fldcw
or
test
xchg
add
out
hlt
xchg
adc
je
pop
mov
jl
xchg
adc
and
push
mov
jno
mov
rcll
cmpsb
icebp
sbb
and
inc
sbb
jg
lods
imul
movsb
jle
jl
push
gs
aaa
arpl
fnop
xor
in
or
das
sbb
push
sub
mov
ret
xor
stos
in
fdivrs
lcall
inc
mov
ja
or
in
jl
dec
inc
daa
xchg
jo
add
and
xchg
xchg
pop
mov
jmp
pop
xchg
out
dec
lock
sub
push
inc
movsb
cli
jmp
dec
xchg
fldt
dec
pop
sbb
gs
pop
cmp
push
adc
in
xchg
ss
scas
push
in
fwait
lea
and
mov
imul
add
dec
out
jb
and
push
xor
fidivl
cmpsl
push
in
pop
push
and
out
push
das
or
pop
push
iret
inc
sbb
dec
sub
mov
jnp
adc
sub
or
pop
xchg
ret
rorb
out
cmp
push
lock
xor
jo
sbb
sti
js
pop
mov
inc
data16
fisubrl
push
fs
loop
fcmovnu
jbe
jge
and
and
mov
je
inc
add
insb
fiaddl
or
iret
pop
mov
lret
jae
jp
mov
in
iret
pop
pop
xchg
int
cmp
jle
pop
inc
fistps
pop
les
test
lcallw
rcrl
enter
add
in
cmp
sbb
push
aaa
mov
add
gs
mov
insl
jge
cld
xchg
test
sub
lods
xor
pop
jp
fdiv
and
inc
pop
in
imul
lea
mov
sbb
out
sub
sub
nop
insb
push
nop
dec
packuswb
fsts
in
xor
aaa
inc
add
adc
sub
fwait
lcall
mov
add
movsb
fs
push
clc
andl
stos
dec
cld
iret
nop
pop
cmp
mov
in
sub
xchg
mov
jg
out
sub
outsl
adc
lahf
fstl
push
dec
iret
mov
mov
aam
lahf
and
push
xchg
clc
das
popf
ljmp
les
adc
or
fbld
sbb
push
cmp
and
pop
lcall
sbbb
pusha
pop
ljmp
and
dec
pusha
xor
sbb
sbb
repz
cmpsb
lock
aad
aad
push
cmp
nop
mov
fsubrl
mov
mov
aam
inc
mov
imul
mov
pop
daa
or
dec
pop
xchg
das
enter
adc
test
sub
test
shrl
sti
ret
out
push
fwait
xor
in
pop
jo
jle
push
arpl
jmp
pop
adc
fisttpll
pop
add
mov
pop
cmpsl
fs
xchg
test
bnd
sbb
pushf
pop
jle
add
mov
test
adc
xor
aad
lea
xchg
adc
cmp
imul
push
rolb
or
push
js
xlat
cmp
adc
scas
jmp
jo
jmp
jnp
cmp
add
sub
push
sub
movsb
rclb
int3
jge
cmp
mov
stos
cltd
jnp
jns
cmp
jnp
stc
sbb
adc
loopne
mov
shrl
mov
pop
outsl
data16
mov
das
add
add
inc
iret
cltd
fidivrs
add
inc
out
lods
mov
cmp
adc
cld
stos
ficoms
rol
cli
jmp
inc
sbb
push
notb
add
jne
sti
push
xchg
enter
pop
stc
add
roll
xor
ss
sahf
pop
aas
jne
fucom
out
mov
push
jge
cli
fs
mov
dec
outsl
in
sbb
mov
clc
repz
je
dec
and
add
sbb
dec
mov
inc
push
mov
fistps
les
cmp
cmpl
lea
call
push
insl
dec
clc
stos
repz
sub
mov
cltd
xor
cld
adc
sbb
push
fnstcw
xor
insl
int3
add
ss
arpl
inc
mov
insb
test
imul
lcall
and
jb
daa
cwtl
mov
fwait
loopne
in
xchg
jnp
sbb
roll
lods
cmc
inc
add
add
xchg
mov
fldt
loope
icebp
mov
mov
imul
fdivr
cmc
inc
push
cmpl
insb
and
and
pushf
inc
pushf
push
adc
dec
movsb
incb
inc
fiaddl
gs
mov
int3
and
lret
xor
push
cmpsl
leave
cmp
leave
xor
and
jge
sti
jg
cmp
in
mov
jmp
xlat
hlt
push
lcall
push
testl
fisttpl
std
push
dec
js
sti
ret
gs
mov
cwtl
daa
xchg
fisubs
xchg
in
xchg
mov
and
mov
fwait
pop
push
or
dec
nop
push
xchg
and
imul
mov
mov
add
adc
clc
pop
shrb
jmp
adc
jle
and
loopne
fldt
int
in
cmp
outsb
sahf
rorb
lods
leave
cli
mov
lret
cmc
jle
shll
hlt
dec
mov
cmc
xchg
pop
pop
lcall
shlb
aam
add
lret
mov
or
sbbb
hlt
test
push
fimuls
ljmp
ret
popf
add
stos
fisubl
dec
inc
lret
aas
xor
outsb
inc
insb
sbb
jmp
rcr
cli
stos
movsb
sbb
push
fldcw
xchg
psllq
cmpsb
std
mov
xchg
aam
pop
int3
jns
jb
mov
push
aad
and
imul
out
addr16
inc
nop
sub
cmp
push
adc
test
push
dec
inc
xchg
dec
or
xor
cmp
idivl
repnz
sbbb
add
int
and
aam
stc
inc
insb
jl
push
mov
push
inc
sub
or
push
or
int
pextrw
inc
or
ret
cwtl
test
sbb
mov
inc
outsb
dec
xchg
dec
fstpt
push
daa
lahf
jmp
loope
out
adc
and
mulb
cmp
les
xor
ds
xor
scas
xor
mov
cmp
cmp
sbb
scas
jmp
sahf
sub
fmul
sti
jg
in
jl
sub
clc
mov
push
jo
inc
mov
and
aas
push
mov
ds
or
inc
jge
add
push
popa
mov
out
shll
loopne
dec
xor
mov
icebp
push
push
mov
dec
jge
popa
ljmp
or
adc
or
cmpsl
jecxz
inc
cmp
mov
faddl
sub
or
adc
inc
lahf
mov
and
int3
push
add
mov
mov
out
fs
cld
pop
dec
rclb
stos
repnz
aad
dec
cwtl
xor
lret
ret
jnp
gs
xchg
in
and
adc
aas
sbb
dec
mov
add
push
pop
xchg
test
test
mov
or
insb
xchg
out
jge
mov
jne
add
xchg
push
jge
les
ljmp
pushf
js
std
call
fisubl
cld
xor
pop
lock
add
lock
out
jl
lock
out
shlb
add
or
loope
out
and
ja
xchg
cmp
lock
sbb
arpl
roll
rcrb
int
jns,pt
xchg
and
cli
cmp
pop
xor
outsb
fimull
jae
icebp
sti
hlt
and
add
idivl
mov
push
cld
dec
popf
popf
xchg
mov
jmp
push
das
xor
adc
mov
cmp
jae
out
mov
pop
jl
jae
aam
add
insb
xchg
enter
ret
add
fdivl
shrb
jb
stc
mov
pushf
jb
cltd
add
lret
pop
fbld
movsb
xor
and
fucomi
lods
fnstenv
lcall
and
pop
push
mov
jecxz
push
xchg
xor
add
lcall
subl
cmp
push
stos
push
adc
or
jbe
inc
cmp
cmp
cwtl
aad
inc
pusha
mov
fstl
mov
mov
fsubrs
mov
add
push
or
and
dec
sbb
call
and
dec
pop
push
xor
push
xor
ficomps
fmuls
imull
jmp
jp
sti
in
mov
jns
inc
pop
jnp
decl
shlb
cmp
negb
dec
sub
mov
sbb
das
bound
sub
gs
pop
es
or
cmp
repnz
and
rcrb
mov
arpl
int3
mov
xchg
cmc
ret
mov
loope
shrl
and
or
cmp
ss
adc
lcall
scas
mov
add
dec
mov
dec
or
push
fiaddl
jp
adc
sub
pop
popa
test
cmp
jge
hlt
daa
add
cmpsl
mov
sbb
mov
call
cltd
arpl
jne
sbb
je
sbb
sbb
cmp
addl
or
rorb
or
mov
inc
out
scas
and
and
jo
mov
adc
xor
pushf
daa
mov
xchg
dec
mov
jnp
sub
jno
mov
inc
ds
cmp
sub
inc
lret
sti
ret
aam
dec
test
std
lret
add
jnp
imul
jle
mov
cmp
int
mov
mov
popa
jmp
adc
loope
nop
sarb
popf
pop
data16
enter
mov
lock
mov
and
imul
sub
add
ja
ret
out
jae
xor
and
imul
mov
das
or
mov
cmp
mov
mov
scas
into
adc
pop
mov
adc
jge
mov
or
sti
xorb
ljmp
ror
mov
lods
js
fistps
jp
pop
outsb
fs
or
sbb
pop
fucomip
pop
or
xchg
mov
jo
push
pusha
push
mov
jbe
lret
dec
mov
pop
fwait
loop
mov
inc
add
xchg
lcall
rcl
inc
repz
jo
push
xchg
push
mov
ret
sbb
cmp
jb
jp
sbb
faddp
jg
and
pop
mov
shl
jno
jae
leave
lret
ja
fcmove
sbb
xchg
mov
fldcw
inc
jne
lea
jo
int3
es
cmc
sbb
cwtl
pop
mov
xor
cmpsl
movlps
je
push
call
xchg
pop
xor
xchg
and
push
cmp
fdivs
movsl
sbb
pop
jne
loop
pop
mov
sbb
lret
imul
push
mov
mov
stc
mov
push
cmc
xor
movsb
mov
aas
in
jne
mov
cmp
push
xlat
js
arpl
mov
cwtl
add
loopne
bound
fdivr
push
cmp
in
mov
icebp
lods
inc
loopne
cmc
pop
outsb
mov
test
jne
cmpsl
dec
mov
and
je
sub
sahf
lcallw
inc
xchg
cs
lcall
in
out
stc
outsb
dec
sarb
xor
clc
rcl
or
gs
sbb
inc
outsb
or
aam
xchg
add
and
xlat
sub
push
pop
in
jmp
js
mov
mov
adc
sbb
fld
inc
cmp
daa
inc
pop
or
sub
push
imul
ret
inc
lahf
inc
mov
sarb
movsb
dec
cmp
mov
sar
jae
int3
sub
out
push
iret
mov
in
in
sub
int3
scas
xchg
or
fwait
pop
movsl
or
inc
pop
in
aad
data16
push
dec
iret
mov
dec
jp
and
pop
inc
mov
mov
fmuls
lahf
mov
fs
inc
test
add
sub
push
movsl
ret
jae
xor
push
scas
mov
mov
jl
pop
je
insb
xchg
lcall
movsb
icebp
jmp
add
jb
mov
insl
and
lahf
pop
mov
inc
xchg
pusha
lods
adc
test
divb
ret
cmpsl
sub
lods
push
test
in
add
inc
mov
or
in
dec
sbb
in
mov
or
fs
mov
or
out
icebp
push
lock
xchg
pop
sub
test
rcrb
int3
jne
popa
sub
jae
fsts
sub
pop
sbb
cmp
mov
ret
test
jb
add
imul
mov
ret
andb
aam
out
enter
mov
out
add
mov
outsb
inc
lock
jg
xlat
xchg
cs
mov
jl
dec
pop
popa
rorb
fdivrs
mov
repnz
add
jae
or
cs
mov
inc
mov
dec
jl
jno
dec
or
adc
jno
cmp
xor
xchg
call
cwtl
leave
jle
lea
and
insb
mov
jae
into
jb
addb
dec
int3
pop
pop
xor
fcoml
or
ffreep
jp
mov
sahf
leave
pop
shll
lock
scas
dec
insb
cmpsl
or
and
jge
sti
sub
mov
sbb
dec
push
hlt
sbb
inc
mov
sub
adc
mov
subb
pop
jns
ret
iret
bnd
lds
stos
cmp
sub
sarb
mov
xchg
scas
div
mov
sbb
icebp
and
xor
and
nop
inc
or
mov
adc
xchg
inc
mov
das
repz
push
pop
ja
adc
pop
push
mov
fs
sub
mov
mov
rcr
push
pop
clc
push
add
stos
mov
je
jbe
xor
ja
sti
or
pop
in
add
movsb
ljmp
or
outsl
stos
insb
pop
add
pop
jmp
std
shl
xchg
lods
fld
daa
iret
jnp
pushf
cli
sub
pop
or
jns
xor
mov
pushl
popf
sbb
aad
call
imull
jp
popf
stc
sbb
jl
add
test
subl
ljmp
aam
ljmp
rcrl
fs
inc
mov
dec
ret
xchg
mov
in
scas
out
loop
jnp
jle
jle
push
insb
mov
sbb
fistl
xor
je
movl
push
xchg
push
pop
dec
jecxz
aad
icebp
cmpsb
pop
fcmovnbe
mov
jmp
sbb
jae
inc
fisttpll
loop
mov
aaa
jno
cwtl
stos
in
sbb
stos
hlt
xor
mov
pop
mov
stos
in
mov
es
not
into
jae
or
repnz
in
outsb
dec
cmpsl
xchg
ret
xchg
loope
cmp
mov
lock
jae
nop
sub
mov
mov
sbb
shlb
jne
dec
lahf
mov
push
mov
jp
push
into
pop
dec
in
mov
jbe
inc
filds
mov
push
pop
add
ljmp
jnp
rorl
rorb
jns
xchg
mov
ror
aas
jb
aad
lock
mov
fimull
es
xchg
repnz
enter
scas
fwait
mov
scas
into
fcoms
cmp
mov
jge
scas
adc
aaa
mov
lret
ds
loope
and
in
adc
test
xchg
pop
out
dec
into
rorl
mov
into
rcrl
movsb
push
mov
pop
or
fcoml
jmp
mov
cmp
lahf
and
mov
push
fldenv
sbb
or
andb
sti
jo
xchg
adc
cmpsl
inc
in
jp
lds
xlat
adc
out
sub
shlb
popa
or
idiv
shrb
ljmp
or
je
mov
add
mov
or
dec
cld
negb
adc
push
push
int3
fmulp
lea
clc
icebp
loop
jg
jnp
add
and
cltd
sub
lahf
xorb
negb
rcll
jecxz
and
sbb
xchg
loop
mov
jbe
dec
adc
scas
enter
and
jnp
mov
btc
es
adc
xchg
out
inc
jge
xlat
shlb
cs
std
xorb
mov
inc
cmp
jo
pop
sub
addr16
mov
or
jbe
inc
inc
jg
adc
mov
jae
loopne
lock
in
jg
stos
jecxz
nop
push
pushf
adc
hlt
mov
sahf
push
adc
out
mov
jo
jmp
mov
leave
aas
adc
bound
clc
in
cmp
xchg
imul
pop
mov
jb
pop
test
or
push
add
xor
mov
and
sbb
inc
je
dec
test
and
mov
mov
add
pop
adc
shlb
decb
sbb
mov
cmp
xor
sahf
xchg
daa
outsb
scas
jb
test
jne
jbe
mov
hlt
push
lods
push
jns
or
pop
call
mov
xor
xchg
add
adc
push
std
in
cmp
mov
sbb
aam
outsl
push
xchg
sbb
in
jnp
cmp
aam
jnp
lea
daa
rcrl
fsubl
int
dec
cmp
int
insb
mov
movb
mov
out
insb
xor
jns
stc
push
fisubrs
int
sub
insl
cmc
or
repnz
sbb
iret
rorb
cli
pop
sub
clc
mov
je
ss
scas
cmpl
sub
cmp
mov
sub
inc
fsubs
pop
adc
sbb
int
pop
sahf
insl
mov
pusha
pop
mov
fwait
xor
adc
fists
cmp
test
in
push
inc
and
push
lcall
sbb
add
loope
mov
push
loope
mov
xor
insb
data16
rcrb
fwait
pop
adc
push
jbe
mov
fcoml
into
mov
mov
dec
ds
sbb
aaa
inc
out
mov
out
imul
rsqrtps
test
push
sbb
cmp
sbb
sbb
push
inc
cmp
dec
pop
xor
rcll
mov
mov
stos
xor
mov
push
cmc
push
push
addr16
lahf
pop
add
push
jmp
mov
jne,pn
pop
leave
gs
xchg
test
insl
das
push
aam
adc
xchg
or
dec
int3
out
stc
jb
mov
dec
shlb
clc
adc
aaa
cmp
out
pop
mov
les
push
push
les
pop
xchg
ljmp
hlt
sar
xor
adc
ret
cmp
xchg
outsl
jg
xchg
insb
fildl
dec
mov
in
sbb
push
sti
jbe
addr16
dec
cmpsb
or
jnp
mov
add
sub
mov
fidivrs
xchg
mov
adc
cli
loope
mov
xor
outsb
xor
push
daa
pop
pop
inc
movsb
mov
icebp
and
or
lock
push
adc
push
add
xor
jl
jmp
mov
shr
loopne
cwtl
inc
scas
sub
xor
pop
shll
push
mov
rcl
xchg
shrl
test
lea
cwtl
cmp
inc
lock
mov
pop
pop
push
out
aas
fwait
outsb
testl
call
jno
mov
adc
lods
cltd
cmpb
fnstcw
sub
dec
adc
stos
shr
sbb
lods
push
sbb
push
xchg
mov
fsts
cmp
insb
jmp
lock
or
jmp
inc
subb
jge
fimuls
icebp
dec
xchg
hlt
and
lcall
inc
dec
movsl
lock
mov
in
outsl
ret
ficomps
add
jl
in
or
idivb
inc
stos
loope
unpckhps
enter
mov
mov
sti
mov
sahf
sarb
aaa
add
mov
pop
sbb
xchg
pop
adc
cmp
bound
repnz
pop
enter
repnz
jne
imul
cmp
adc
movsb
push
push
nop
mov
inc
test
out
ljmp
out
xchg
enter
jle
mov
add
mov
mov
jo
jae
jne
shr
add
out
sub
inc
sahf
test
test
jae
xor
cwtl
sub
push
gs
shlb
xchg
inc
push
inc
inc
sub
lret
addr16
xlat
andb
push
or
or
pop
pop
pop
movsl
in
mov
or
jp
ja
daa
stos
push
imul
jns
mov
xchg
jo
shrb
outsl
in
test
sub
xchg
push
int
aad
lock
or
stos
aam
jae
or
adc
loop
add
call
pop
js
or
stos
arpl
or
mov
jne
inc
popa
imul
mov
jmp
rcrl
clc
stos
push
aad
outsl
inc
push
add
sti
sub
and
insl
lcall
jo
dec
clc
aas
pop
mov
cmpsl
ret
dec
out
inc
andb
jl
lret
xor
test
mov
mov
or
sub
sti
loope
std
mov
hlt
add
mov
mov
leave
xor
mov
sub
cmp
out
adc
outsl
and
add
mov
and
pop
das
repnz
jecxz
leave
out
push
jno
push
faddp
pop
mov
lret
outsb
sbb
movsb
adc
xchg
xchg
stc
out
and
push
and
ret
xchg
lods
test
sahf
fmull
and
stos
lahf
or
or
sub
sti
cwtl
sub
or
xor
xchg
and
jp
mull
dec
imulb
inc
add
cmpl
ret
cltd
push
loopne
mov
fmuls
test
lods
fildl
out
cmp
imul
xlat
out
inc
push
scas
addr16
add
jmp
xchg
jns
xchg
adc
int
mov
sub
in
js
repz
imul
cmp
pop
or
mov
or
outsl
inc
mov
cmc
jecxz
call
cmpsl
enter
loope
cs
and
mov
mov
sahf
fdivrs
scas
xor
cmpsb
js
and
ss
inc
flds
shl
push
xchg
into
adc
adc
lock
xchg
daa
idivl
andl
push
das
outsb
add
mov
cld
xchg
jbe
ret
mov
fcmovbe
or
jnp
leave
stc
fimull
and
idiv
cmp
lods
xchg
and
int
mov
cmp
hlt
jp
btr
hlt
imul
rorb
cwtl
push
je
and
icebp
ss
sub
inc
js
call
fisubrs
mov
push
mov
xor
sbb
fsub
out
idivl
sbb
imul
cltd
cmpsb
xchg
sti
mov
xchg
test
pusha
cmp
je
push
mov
aas
out
repnz
cmp
test
mov
orb
int3
cli
inc
add
inc
jle
fidivs
rcr
cmc
cmp
js
jb
and
out
adc
imul
lods
je
loopne
xor
sbb
lret
ss
and
cld
lahf
push
jge
or
ss
test
sar
aam
pop
jae
xchg
notb
outsl
inc
cmpsl
inc
stos
dec
sti
mov
lahf
xchg
sub
cmpsb
mov
aas
add
daa
and
movsl
jbe
jnp
jmp
sub
pushf
mov
popa
imul
or
ljmp
pop
in
loopne
jp
imul
pop
dec
test
xchg
out
std
sbb
out
ja
movsl
inc
add
inc
lea
lret
cmp
fistpl
xchg
mov
sbb
or
test
jae
dec
std
and
das
in
int
pop
ja
sub
jl
cmpsb
xlat
adcb
cli
in
pop
mov
sbbl
test
cmp
jp
sub
pop
fwait
test
roll
mov
out
sub
sub
pushf
jl
jno
scas
pop
ja
rcr
das
pop
xchg
aam
dec
das
stos
push
stos
dec
cwtl
cmp
fwait
mov
data16
or
jmp
imulb
addr16
das
jecxz
lret
pop
xchg
push
push
push
dec
adc
cmpsb
cmpsl
sub
jo
notb
ss
xchg
fcomps
cmp
mov
inc
jae
jle
inc
inc
jnp
hlt
dec
mov
fimuls
mul
data16
push
dec
frstor
push
or
sbb
pop
aaa
arpl
test
int3
bound
mov
pushf
adc
adc
jns
cmc
addl
fldt
rorb
sbb
dec
mov
insl
sub
or
mov
rclb
inc
pushf
fwait
add
inc
out
dec
xor
jl
sbb
inc
mov
loopne
out
ror
cmpb
ret
shlb
mov
leave
lock
xchg
gs
aam
fwait
call
ds
in
pop
roll
pop
and
shrl
xlat
nop
int
mov
cmp
repnz
into
cmpsb
loopne
cmp
cmc
jmp
lock
jo
jnp
cs
jno
popl
nop
movsl
inc
pop
push
daa
and
add
sub
push
xchg
push
das
push
dec
rcrb
lods
cmp
js
push
int3
into
sub
insb
outsb
push
mov
mov
or
sub
xlat
xlat
subb
jno
stc
inc
loope
jnp
nop
lahf
insb
cwtl
les
repnz
mov
xchg
clc
in
repnz
daa
inc
jg
inc
andb
pop
add
push
mov
scas
push
or
xchg
fidivl
xchg
cmp
cmc
pop
into
and
insb
sbb
cmp
sub
adc
cli
push
mov
mov
add
or
push
sbb
mov
ror
pusha
out
xor
mov
lcall
int3
int
fdivr
stc
sub
dec
lock
cs
inc
iret
dec
jmp
lahf
pop
pop
add
repz
sub
jge
cmpsb
addr16
cmp
jo
jcxz
ss
pop
inc
sarb
je
arpl
call
fidivrl
jmp
or
jmpw
xchg
in
jecxz
rolb
push
push
ss
out
or
inc
mov
inc
mov
add
push
cwtl
pop
jne
fs
addr16
and
rep
rorl
adc
cld
add
mov
mov
jmp
push
mov
cwtl
icebp
and
aam
cmpsb
ss
andb
jmp
mov
outsl
andb
stc
adc
cs
and
push
sub
xchg
cli
jnp
add
in
ret
jmp
and
xchg
loop
jne
popa
daa
and
dec
in
push
out
or
repz
or
mov
push
test
outsb
pop
cmp
push
cmp
fdivs
sbbb
and
and
sbb
adc
fisubrs
sub
andl
loopne
in
out
enter
mov
lret
data16
aas
xlat
or
rcll
or
es
cmp
xlat
std
ss
dec
mov
adc
popf
push
rcrb
aaa
pop
cmpsb
or
je
pushf
mov
fs
jge
xor
jo
fwait
xchg
int3
ss
jecxz
cmp
shrl
jg
sbb
push
sarl
mov
sub
inc
mov
jmp
jl
mov
mov
cld
push
out
dec
ret
add
cmp
and
xchg
inc
xchg
mov
faddl
iret
jge
test
cmc
push
adc
and
mov
jno
ret
loopne
mov
stos
or
mov
dec
mov
add
in
push
push
sub
xor
ret
inc
cmpl
icebp
xchg
mov
push
jno
inc
cltd
inc
push
int
add
test
xchg
mov
fs
push
inc
fldenv
stos
test
bound
fistps
dec
ss
fisttpll
dec
sub
popf
jge
scas
jg
mov
inc
mov
cmp
sub
fstpl
inc
push
cmp
fidivs
jge
mov
into
xlat
ret
sbb
sub
jle
adc
aaa
cmp
add
push
sti
push
ret
jle
push
xor
xchg
jns
decl
icebp
sbb
cmpsb
int3
cwtl
mov
stos
xorb
cmp
sub
outsl
pop
jnp
jmp
cld
ja
insb
xor
andb
loope
aaa
outsl
cmpsl
sbb
imul
mov
dec
test
pop
test
aad
mov
pop
test
sub
pop
sub
mov
dec
dec
jge
sub
fldcw
mov
xchg
loope
je
movsb
mov
push
dec
xchg
fwait
nop
and
and
icebp
or
outsb
and
and
lds
mov
orps
enter
and
out
or
mov
pop
or
cmpsl
outsl
iret
repz
sub
sbb
outsb
inc
dec
push
adc
push
cmpsl
in
pop
mov
mov
call
aas
test
sbbl
stc
hlt
mov
push
add
adcl
jno
cmp
mov
aam
sbb
sbb
sub
xchg
neg
movsl
xchg
or
and
insl
shll
mov
sbb
dec
sbb
or
pop
mov
adc
cmp
and
mov
jo
jae
inc
rcrl
jno
jnp
and
enter
xchg
fists
arpl
xchg
jecxz
jl
pop
stc
daa
lret
adc
cli
mov
aam
pusha
inc
xchg
ss
push
sub
scas
das
jmp
push
and
data16
mov
pusha
push
or
ret
and
push
or
mov
mov
sub
mov
shrl
cltd
pop
pop
mov
mov
sub
test
push
testb
scas
test
das
daa
jb
rcr
mov
pop
mov
lcall
arpl
fdivl
cwtl
xchg
in
and
icebp
add
and
mov
movsb
rcrb
sub
cmpb
lods
sti
xchg
jns
xlat
scas
addb
jne
js
jle
aad
pop
lods
nop
dec
or
dec
mov
sbb
add
ficoms
lea
testl
lods
jbe
addb
sub
inc
addr16
adc
add
xor
mov
add
dec
and
push
and
sbbl
push
jae
add
icebp
lods
mov
mov
mov
aad
into
fsubr
inc
addr16
sahf
and
aaa
fists
pop
xlat
jp
add
inc
addr16
lret
je
rolb
jo
and
ret
int3
or
rcll
mov
cmp
pusha
xchg
sbb
call
mov
add
jno
das
notb
xor
fs
push
xchg
data16
fstl
popf
xlat
es
cltd
dec
nop
cmp
je
int
fadds
inc
outsb
push
call
xor
sub
sbb
fists
cmp
add
mov
fbld
adc
ja
subb
adc
or
stos
addl
ret
data16
pop
pushl
jge
pop
ljmp
fstpl
lret
sbb
mov
lock
mov
mov
outsb
aam
lret
mov
pusha
xchg
aam
and
out
mov
add
arpl
inc
jg
jge
leave
icebp
xchg
out
jg
push
mov
xchg
cmp
enter
out
pusha
aam
fucomp
cmp
in
jae
jge
xor
mov
gs
jb
add
imul
sbb
sbb
pop
icebp
xchg
xor
xchg
push
div
push
xor
jle
addl
sahf
stc
sub
imul
gs
cmp
subl
jg
sub
jae
pushl
jo
and
pop
xor
out
add
outsl
cmp
jg
fldenv
out
testl
mov
ror
mulb
into
jl
sbb
inc
pushw
add
in
adc
cld
jge
cmp
jbe
xlat
subl
add
dec
dec
mov
inc
lret
cwtl
enter
sbb
inc
and
jge
gs
movl
mov
lcall
scas
sub
mov
insb
sub
subb
call
iret
mov
or
pop
imul
and
push
push
add
mov
aad
adc
scas
pop
in
xchg
xchg
aas
shrb
pop
arpl
subb
jl
xchg
pop
popw
cli
cmpsl
adc
sub
sub
jns
in
xchg
cmp
lods
aad
push
xchg
outsb
xlat
lret
into
adc
jp
cmp
popa
jns
aas
mov
xlat
sub
outsb
push
int3
in
mov
iret
mov
push
dec
into
aam
sbb
dec
jae
inc
dec
or
pusha
fidivrs
les
fdivrs
mov
out
mov
jmp
and
or
cmp
mov
jge
mov
inc
jmp
mov
jle
imul
call
pop
fisttpl
test
std
cmpb
outsl
stos
mov
push
push
push
int3
or
rcrb
mov
and
push
in
into
insb
add
test
pop
mov
lahf
sbb
inc
inc
dec
jmp
adc
sub
cmp
xor
jmp
cmp
stos
sub
data16
xor
sbb
and
rorl
bnd
ret
and
jl
inc
addr16
test
out
and
das
fcmovne
imul
pop
mov
mov
pop
mov
int3
ds
sub
inc
cmp
pop
add
dec
and
inc
cmc
and
testl
add
mov
add
sbb
dec
push
add
pop
aad
push
popa
rorl
out
pop
sbb
sti
mov
lret
repz
mov
mov
dec
mov
and
xchg
and
dec
stos
mov
add
es
push
mov
sub
or
mov
and
enter
mov
sbb
adc
dec
sar
mov
sub
movsb
rcr
cli
jle
adc
or
cmp
adc
mov
xchg
mov
fidivl
jne
into
cmpsl
popa
daa
xchg
mov
xlat
cs
andl
daa
pop
fwait
es
imul
adcb
dec
pushf
and
arpl
sub
sbb
lock
cmpsb
hlt
out
push
std
leave
lcall
lods
xor
mov
sti
aam
inc
sbb
and
lret
test
dec
es
push
xchg
sub
xchg
jg
dec
xor
imul
jge
mov
pop
pop
iret
pop
pop
push
cmp
push
xchg
mov
inc
lcall
imul
pop
cmpsl
mov
sbb
jbe
mov
cs
inc
stos
lret
adc
and
testb
mov
sbb
cmp
cmpb
ret
mov
testl
je
data16
push
fisubrs
fcoms
adc
mov
movsl
lcall
inc
mov
js
cwtl
mov
movsl
dec
test
xor
cli
and
jae
push
insl
mov
pop
cmp
ss
fisttpll
xor
xor
ror
xchg
jns
popa
dec
cmp
movsb
push
lock
mov
dec
adc
push
sbb
push
outsb
enter
mov
cltd
inc
fiadds
dec
aad
inc
sbb
push
test
lock
daa
xor
lock
sbb
out
inc
ljmp
fidivrs
xchg
push
xor
test
and
icebp
dec
sub
cmovae
cltd
and
gs
push
insl
addr16
ds
ss
pop
les
sbb
icebp
into
rcll
js
xor
clc
inc
sub
adc
es
xor
lods
popa
xchg
repz
stos
aas
xchg
in
push
fistpl
ds
push
movsl
clc
adc
push
mov
push
ss
inc
pop
dec
enter
stos
out
add
mov
lcall
jp
sub
dec
jp
xor
pop
push
mov
or
pop
dec
cmp
mov
push
ficomps
nop
ljmp
popf
pop
fsubrs
ss
dec
mov
fldcw
sbb
sarb
xchg
inc
sti
les
aam
jnp
push
xor
shrb
push
mov
dec
in
xchg
aaa
and
sub
mov
loope
mov
pushf
sbb
in
stos
or
or
push
sbb
into
and
pop
jmp
inc
dec
bound
ja
or
repz
xor
xlat
mov
or
jg
sbb
movsb
pop
sub
xchg
int3
mov
popa
iret
jnp
dec
test
sbb
push
popf
stos
es
sbb
mov
pcmpeqd
je
sbb
jne
jno
push
add
dec
rcrb
xor
xchg
fsub
mov
mov
cmp
cmpsb
stc
pop
enter
lods
adc
push
scas
pop
pusha
pop
mulb
imul
and
and
test
fldcw
mov
xlat
loope
ret
adc
or
push
adc
xor
test
ficomps
stos
xchg
sbb
sbb
push
inc
into
sbb
inc
fimull
int
leave
test
jns
sub
fistl
lret
test
push
jae
mov
enter
mov
testb
std
jg
enter
iret
jp
cld
push
adc
sub
rcrl
insl
xor
les
xor
xor
xchg
sbb
xchg
dec
cwtl
jmp
sti
push
jge
rcr
jno
mov
ss
scas
fimull
mov
sbb
call
out
mov
sti
pop
mov
adc
cmp
mov
push
pop
movsb
or
test
in
pop
ja
push
xor
push
insl
outsb
pop
insl
sbb
adc
scas
enter
idivb
outsb
jmp
mov
lock
inc
mov
inc
in
repz
xchg
cs
jp
and
shl
lcall
pop
iret
imul
fidivrl
adc
push
fisttpll
ja
mov
sbb
stc
xlat
insb
xor
mov
jno
addr16
push
stos
rorl
mov
xor
imul
mov
push
mov
mov
aaa
adc
mov
sub
fs
mov
in
cmp
dec
lea
adc
pop
or
mov
outsb
xchg
mov
fisubrl
or
mov
daa
cli
ret
dec
in
aas
jge
rclb
xchg
cmc
adc
mov
shlb
jmp
sub
mov
nop
hlt
mov
mov
mov
sbb
out
push
scas
inc
inc
pop
movl
out
jae
cmp
hlt
inc
xor
push
mov
inc
dec
mov
xor
add
call
xlat
stc
pop
mov
dec
in
lret
pop
rcll
out
inc
add
lds
mov
add
call
cmp
dec
adc
pop
shr
loop
jo
xchg
sbb
dec
or
push
cli
cmp
subb
mov
or
dec
add
mov
in
neg
or
and
out
dec
jnp
sbb
test
sub
dec
filds
es
fidivs
lret
inc
into
into
jmp
pop
dec
adc
dec
adc
lcall
imul
xchg
std
mov
sub
test
jmp
fnstsw
add
movsl
aam
popf
sbb
adcl
cmp
xchg
inc
push
adc
test
add
cwtl
daa
out
fwait
add
ds
fldt
loope
jb
inc
mov
lods
mov
xor
out
xchg
xor
jmp
add
mov
adc
adc
leave
sub
mov
mov
fistl
cwtl
out
xchg
arpl
nop
test
jmp
dec
adcb
xchg
sar
ret
adcb
fcoml
dec
stc
cmpsb
jnp
and
cmc
pop
popf
xchg
lret
mov
dec
repz
xchg
mov
mov
sti
jp
jne
lret
pop
fisubl
pop
pop
lods
dec
cltd
sbb
or
pop
loope
cmp
dec
cwtl
xchg
ljmp
stos
and
lods
sub
sub
mov
testl
cld
mov
cmp
out
jae
xchg
pop
inc
lds
sbb
and
loop
push
fimull
fs
sub
mov
or
jo
mov
iret
jl
push
fbld
xor
movsb
adc
out
lcall
test
cmp
mov
mov
pusha
or
fs
imul
aad
mov
mov
mov
mov
iret
dec
push
dec
xor
test
in
shr
cld
and
push
add
or
pop
cmp
adcb
orl
adc
dec
mov
mov
mov
jo
arpl
push
mov
icebp
das
push
sbb
add
adc
sahf
sub
add
mov
ss
shll
out
xchg
jns
mov
add
enter
add
out
jp
les
test
aad
add
xchg
fwait
adc
ret
adc
xchg
test
and
push
das
mul
mov
jno
jnp
mov
insb
outsl
outsb
and
mov
dec
pop
and
inc
adc
sarb
mov
pop
inc
lcall
aas
push
push
cltd
dec
mov
inc
bound
jg
ja
pop
jmp
in
sbb
fidivrs
jge
aad
push
data16
imul
test
jge
in
aam
inc
push
fldt
iret
test
mov
fs
xchg
lds
js
mov
sub
pop
jnp
out
hlt
xchg
sbb
in
lret
cmp
adc
pushf
mov
and
or
in
rorb
push
xor
push
mov
cmpsl
xchg
popa
dec
mov
push
pushf
mov
jnp
pop
divl
int
mov
aad
hlt
pop
push
das
mov
es
call
iret
sahf
or
adc
movsl
call
int
sub
inc
leave
xchg
push
and
insl
push
bswap
xchg
lret
orl
and
mov
insb
sbb
addr16
inc
pop
dec
add
pop
aam
and
aas
and
ljmp
aad
fiaddl
add
ret
push
sub
mov
cmp
xor
push
aad
outsb
inc
adc
pop
test
sub
fsubs
stos
sub
push
jo
mov
arpl
mov
movsb
push
push
lock
cmp
dec
ret
imul
cmp
inc
leave
mov
es
dec
arpl
pop
jle
jnp
xor
cmp
fcompl
lods
dec
leave
call
sbb
push
icebp
xor
sbb
xchg
das
lods
ror
mov
mov
xlat
add
xchg
insl
faddp
stos
les
ja
mov
mov
inc
cmp
arpl
sbbl
cmp
das
xor
in
test
pop
cmp
add
and
std
aam
lods
pop
loopne
icebp
add
mov
lock
das
sbb
cs
scas
cltd
aas
stos
or
leave
int3
dec
iret
pushf
jg
mov
lcall
bound
or
fnstsw
or
das
and
rcll
outsl
dec
pop
cmp
adc
cmp
lock
add
push
jnp
jge
push
jge
icebp
roll
fstpl
rolb
pop
bnd
mov
sarl
lods
aad
ljmp
jle
add
lock
mov
shl
in
ret
cmp
call
sub
jmp
inc
mov
cmp
loop
and
js
shr
fcmovb
sbb
shll
fwait
cmp
and
xchg
scas
cmp
mov
repnz
push
cmp
push
inc
adc
mov
scas
mov
dec
in
cmpsl
inc
inc
xchg
push
mov
xchg
cmp
xchg
cmpsb
fistps
mov
mov
sbb
mov
stos
sub
pusha
es
jno
cmc
lahf
or
jmp
xor
sub
fprem1
nop
dec
or
js
mov
mov
xorl
push
int
rcrl
ljmp
sbb
sub
aam
pop
and
inc
std
mov
jne
or
dec
out
mov
pop
sub
or
daa
push
cmp
std
sahf
add
add
mov
iret
mov
mov
repz
pop
push
addl
lret
ret
in
jl
clc
and
pop
arpl
jno
cmpsb
imul
out
test
mov
cmp
int3
ja
jecxz
sbb
xor
subl
xor
ljmp
imul
cmp
mov
adc
lret
mov
in
psraw
dec
add
loop
les
test
lahf
add
xor
in
jns
adc
or
mov
sub
fistpl
add
bound
insb
mov
jg
dec
push
sub
scas
mov
xchg
mov
mov
movsb
cltd
hlt
addb
mov
adc
stos
fildl
repnz
mov
int
cwtl
push
dec
lahf
popa
imul
shrl
xchg
shll
les
mov
arpl
push
pop
jle
ds
jmp
push
xchg
scas
push
jge
xor
mov
notl
test
add
arpl
test
iret
or
xor
gs
adc
out
sub
out
and
das
rcrb
xchg
outsb
mov
xchg
icebp
mov
xor
pop
add
cmpsl
sti
mov
pop
sarl
js
scas
daa
fadd
sub
out
jne
int3
lret
adc
fisttps
dec
xchg
add
js
xor
xor
pushf
dec
jle
jmp
daa
add
insb
xlat
cld
mov
popf
mov
dec
loop
test
pop
inc
cmp
sub
jge
icebp
dec
shll
idivl
inc
jge
imul
jb
xchg
sub
push
movsb
es
sbbb
mov
mov
push
sbb
xor
js
daa
pop
test
sub
rcrl
xor
jne
and
adc
mov
xor
sbb
mov
and
sahf
pop
push
add
xchg
mov
xor
lods
adc
fmulp
or
push
sbb
mov
fs
add
movsl
adc
inc
fisubl
jno
inc
dec
sub
lea
sbb
js
call
fldl
jg
inc
xor
rorb
sbb
imul
repz
xor
dec
push
test
testb
pop
cld
jmp
dec
stc
and
cli
inc
int
subl
fsubl
mov
cmp
push
lock
out
mov
sarl
inc
pop
sub
ret
cmp
in
jns
icebp
inc
fwait
or
xor
fdivs
int3
ror
or
cmp
push
lods
test
xchg
add
push
or
push
negb
scas
dec
cltd
push
pop
outsb
in
jg
sbb
cld
cmp
cmp
int
daa
sub
aaa
mov
cmpsl
in
or
in
fisttps
xor
testb
decb
and
cmp
mov
push
inc
mov
cmp
add
divb
das
mov
popa
fadd
decl
xor
loope
lret
into
add
icebp
data16
adc
and
adc
cmp
sarb
insb
push
lret
inc
xlat
in
dec
lea
jmp
mov
in
adc
aad
xchg
in
scas
dec
movsb
push
or
lret
mov
xchg
sub
pop
xor
push
xchg
dec
push
add
cmp
cmp
mov
scas
inc
iret
in
push
bound
scas
push
fs
cmp
xchg
adc
sbb
push
add
popa
mov
and
leave
jnp
call
sub
pop
lock
dec
jnp
sti
mov
pusha
jl
fdivrl
cmp
fcomps
xchg
push
addr16
adc
jnp
mov
pop
out
pop
test
sub
xchg
mov
stos
pushf
lea
cmp
lahf
xchg
cli
shlb
test
pop
data16
inc
in
sub
sahf
dec
mov
into
jge
and
mov
adc
repz
fcmove
shll
mov
std
fdivrs
jnp
push
lock
add
cs
out
in
sbb
cmp
push
add
cld
and
mov
loope
scas
out
xor
mov
or
jae
stc
sbb
es
inc
into
loopne
xchg
and
cmp
hlt
push
loopne
add
shlb
xor
cmp
dec
pop
icebp
je
loopne
in
xorl
dec
test
and
sti
add
shr
and
xor
rorl
xor
mov
imul
js
lea
dec
ror
and
lods
pop
cmp
leave
lret
jne
dec
enter
add
iret
inc
sbb
les
jae
les
dec
js
cmc
xor
lret
stc
and
jo
call
out
fisttps
mov
fisubrl
jae
cs
inc
sub
rcrb
sub
or
lahf
adc
lahf
movl
add
xchg
mov
mov
das
xor
cld
push
push
xlat
lods
add
scas
xchg
jns
push
movsb
iret
repnz
inc
cmpsl
dec
repnz
insb
sbb
fsubrs
test
adc
arpl
xchg
in
jp
and
into
fimull
scas
into
add
pop
movsb
testl
jbe
clc
fsubrs
std
rorb
shlb
fiaddl
lds
rcr
xlat
mov
icebp
cmp
cs
add
mov
xor
dec
rcrb
adc
pop
inc
pusha
add
add
out
mov
xor
adc
fidivrs
repz
cmp
sub
sbb
adc
lret
imul
push
out
int
mov
fldcw
or
adc
push
aad
and
insl
fs
sbb
or
mov
mov
xchg
es
and
push
paddd
out
and
pop
inc
ss
inc
popa
xor
fmuls
jnp
in
hlt
leave
in
pushf
and
rcr
loopne
inc
lea
pop
mov
mov
pop
add
inc
sbb
fcomi
sar
cltd
dec
daa
in
mov
icebp
cltd
adc
sbb
add
add
add
jp
imul
outsb
pop
pop
ja
jne
push
pop
pop
adc
push
cmpsl
push
add
lock
jle
sbb
xlat
xchg
daa
repnz
sbb
jecxz
inc
fiaddl
jnp
xchg
jmp
push
cmp
cltd
out
xor
pop
and
out
xchg
loopne
dec
cwtl
cmpsb
mov
imul
and
pop
push
loop
lahf
cltd
sahf
idivl
pop
add
iret
andl
ret
adc
inc
sub
mov
hlt
lods
mov
lcall
push
xchg
sub
add
mov
cmp
cmp
sub
jmp
xchg
popf
xchg
test
ljmp
aas
movsl
shr
jge
mov
fbld
sub
cmp
imul
xor
test
push
adc
pushf
adc
xorb
ja
mov
ret
xor
enter
dec
ret
adc
cwtl
push
mov
jecxz
movsb
dec
jnp
mov
adc
lea
lock
push
push
push
lods
fstpl
hlt
mov
xor
cmp
jg
test
pushf
push
sub
add
sbb
pop
cld
nop
cltd
jmp
das
add
cs
loope
testl
or
sub
das
mov
mov
cmp
das
mov
jo
out
sub
xchg
dec
inc
pushf
fadds
mov
mov
aaa
negb
add
inc
push
mov
or
xchg
stc
sub
jae
xchg
enter
and
fimull
out
jecxz
mov
into
ss
push
je
sbb
add
jns
int3
add
andb
out
sbb
push
mov
mov
xor
xlat
xlat
mov
jmp
loop
jo
clc
enter
lock
adc
jnp
ljmp
int3
mov
in
cltd
sub
cld
aam
sbb
jl
repnz
loop
pop
dec
jmp
out
xchg
xchg
repnz
pop
cltd
ret
std
stos
out
fwait
sbb
imul
lret
cmpsl
jbe
cld
icebp
mov
nop
in
dec
cmp
addr16
icebp
adc
xchg
shrb
scas
pop
jge
push
adc
ficoms
les
mov
mov
sub
xor
dec
mov
fldl
outsb
cli
fs
fs
sbb
dec
aad
sub
cltd
inc
add
add
ret
inc
out
jecxz
push
in
lds
out
inc
mov
shr
imul
repz
sti
add
and
sbb
iret
aaa
pushl
outsl
bound
dec
adcb
sti
adc
inc
and
inc
sbb
aad
insb
test
inc
movsl
cmpsb
cmp
cmp
imulb
pop
fmul
cmp
ds
ud0
sbb
add
xlat
inc
and
in
add
fmull
movsb
inc
add
pop
pop
dec
int3
nop
andb
sub
mov
lcall
lds
and
out
dec
lods
lods
int3
popf
cmp
xor
rcrl
imul
push
add
lea
adc
aas
and
insb
pop
in
cwtl
sub
mov
cmc
das
negb
test
mov
jecxz
fnstcw
dec
xchg
imul
lahf
sbb
decb
lret
or
in
pusha
inc
lret
add
pushl
xor
cli
push
cld
cmpsl
iret
lret
aam
add
dec
cltd
dec
les
mov
cmpsl
out
dec
mov
popf
mov
punpckhwd
rorl
jb
jmp
mov
das
es
sbb
push
and
roll
dec
push
dec
movsl
daa
mov
xchg
pusha
jae
ficoml
out
cmp
mov
out
xor
jle
mov
aam
and
mov
sbb
xor
aam
jo
jp
dec
jmp
call
fistpll
in
mov
aaa
sub
and
and
sub
ret
fldenv
insl
in
xor
pop
inc
xchg
add
adc
testl
dec
add
xor
push
idivb
add
sahf
or
xor
out
and
call
lea
xchg
leave
and
std
pop
mov
std
adc
xlat
pushf
cmovno
dec
mov
pop
xchg
jp
cld
ret
lds
out
or
in
sbb
mov
faddl
cmp
xor
fwait
dec
pop
es
out
stos
jae
add
adc
or
icebp
out
lahf
dec
jne
test
sbb
push
push
out
mov
aad
hlt
fstpl
les
inc
js
cli
push
rcl
xor
ret
sub
loope
in
pop
jg
in
jge
pop
inc
cltd
sbbb
in
jae
lahf
arpl
and
mov
dec
hlt
test
aad
ss
roll
sub
fsubs
push
push
push
out
xor
and
call
mov
stos
aad
out
lock
neg
sbb
pop
pop
popa
pop
ds
xor
push
xchg
cmp
hlt
sub
fwait
in
lods
mov
mov
test
loop
jbe
push
aad
insl
push
ret
in
ja
and
xchg
rclb
cmpsb
addr16
pop
xchg
fwait
loope
push
xchg
xor
scas
dec
add
mov
int
and
sub
or
stos
lea
dec
push
push
scas
cmp
lock
cmp
das
js
cmp
cmp
leave
pop
mov
lea
mov
popa
adcb
dec
inc
int
aaa
sub
mov
mov
jl
lds
lcall
jae
xchg
fbld
jb
mov
inc
lods
ss
sbbb
lcall
std
jecxz
in
adc
out
daa
shrl
fwait
mov
fcmovne
pop
stos
aas
xchg
push
add
jge
sub
loopne
in
jb
leave
push
xchg
sti
sub
xorl
imul
add
loopne
leave
inc
outsb
pop
fisttpl
inc
push
std
sub
fcmovnbe
test
stos
cs
sbb
lods
bound
out
cmp
xchg
lret
sub
sti
inc
mov
lods
mov
sub
sub
repz
adc
sbb
fmull
mov
repnz
pop
push
iret
test
cli
push
jnp
mov
sub
xchg
cmp
adc
add
inc
movsl
sub
cmpsl
repnz
data16
inc
movb
aaa
mov
mov
mov
lret
rol
daa
es
push
adc
test
into
sub
enter
mov
push
xlat
int3
pop
lea
idivb
push
push
push
push
mov
mov
sub
xchg
xchg
mov
push
xor
push
es
popa
ret
xor
mov
add
mov
or
insb
jb
push
cmp
mov
dec
adc
and
sub
fs
dec
pop
inc
xchg
cmc
sbb
test
sub
push
cmp
mov
rep
out
ss
roll
jl
into
psllw
jbe
mov
sti
int
xorb
insb
out
repnz
adc
cmc
mov
mov
into
pop
and
and
pop
addr16
ror
outsb
fisubrl
sub
push
push
repnz
mov
sbb
repnz
out
rclb
cmp
stc
pop
sub
clc
loopne
adc
test
cld
inc
mov
mov
inc
mov
mov
add
add
cmp
xor
fidivrs
xchg
adc
push
mov
aaa
or
fsubrl
adc
jo
insl
mov
push
sbb
inc
sbb
sbb
jp
mov
fcomi
fstl
xlat
fwait
outsb
sarb
dec
add
outsb
iret
or
ret
fistps
mov
stos
call
arpl
cmp
adc
cli
xchg
or
in
stc
call
dec
sub
jno
outsb
inc
mov
push
leave
inc
int
or
push
jb
push
xchg
inc
vmread
inc
mov
or
push
loope
mov
mov
aas
out
push
mov
push
popf
std
aam
inc
pop
ret
movsl
mov
ficomps
aas
cmp
gs
push
dec
ljmp
fistl
xor
and
sub
mov
jbe
lds
movsl
push
scas
sti
das
mov
sahf
jbe
rol
jns
xchg
in
xchg
mov
cmp
jns
adc
push
xchg
shll
jl
mov
js
loope
ss
inc
mov
sbb
cmp
dec
mov
lret
adc
aam
sbb
adc
mov
hlt
mov
pop
cmpsb
out
aam
aad
jge
imul
xchg
hlt
inc
sti
or
fsubs
imul
push
and
fnstsw
pop
mov
adc
sti
dec
pop
jecxz
stc
mov
test
loop
sbb
pop
sub
std
sbbl
insb
jl
jb
pop
xchg
in
mov
ja
and
call
test
sub
cld
scas
mov
sub
imull
jl
dec
cmpsl
jle
jo
xchg
xchg
or
lock
xchg
adc
aad
mov
mov
push
cmpsb
ss
aas
dec
in
push
jecxz
xchg
incb
mov
mov
inc
adc
pop
add
das
mov
pushf
js
lahf
push
fnstenv
pop
stos
adc
xchg
bound
fmuls
mov
mov
test
xor
adc
dec
leave
add
push
outsl
pop
les
jno
pop
jnp
dec
dec
aam
loop
sbb
adc
les
lcall
mov
stos
mov
sarb
fidivl
lea
lahf
les
in
sbb
test
lea
and
pop
std
push
fs
data16
sbb
and
pop
aas
and
xchg
pop
sahf
mov
sub
inc
pop
out
fdivr
fidivrs
ds
xchg
mov
dec
popa
fwait
sbb
rcrl
add
adc
data16
add
sub
mov
push
sub
cs
add
sbb
sub
out
xor
adc
xchg
outsl
push
scas
pop
test
in
cmp
sub
inc
xlat
call
ja
test
and
repz
sub
popf
jne
loopne
sahf
cmp
sub
cmc
lret
adc
mov
mov
sti
out
out
or
or
push
or
lcall
sti
ret
test
lret
jae
dec
cmp
or
inc
lds
sahf
push
scas
jg
sbb
or
lret
enter
or
jp
mov
jno
lcall
or
lods
in
sbb
inc
pop
push
mov
inc
jg
arpl
fiaddl
mov
insb
mov
inc
cwtl
mov
lret
pop
stos
or
mov
stc
imul
mov
sbb
sub
lds
nop
nop
arpl
lcall
jno
jmp
insb
fucomp
pop
out
mov
loope
sub
out
enter
rolb
rorl
shlb
stos
jo
add
rcrl
or
xor
jae
pop
push
icebp
out
sbb
mulb
xor
mov
jo
mov
imul
sti
xor
aas
jne
push
or
or
xchg
xchg
jmp
mov
sarl
test
les
pop
clc
ja
fiaddl
fs
popf
dec
jns
lea
inc
dec
mov
pop
stos
inc
dec
push
sbb
orb
loop
lcall
dec
xor
call
inc
dec
and
or
inc
addb
and
mov
sub
jg
inc
or
js
xor
out
mov
cltd
xchg
xor
jo
add
inc
sarl
add
dec
test
xchg
das
dec
sub
out
ret
inc
or
sub
dec
aad
mov
add
das
add
lock
mov
mov
sub
icebp
add
mov
imul
xchg
test
sub
or
movsb
jp
insl
aaa
mov
xchg
std
xchg
jg
and
cltd
sti
mov
fidivl
out
push
es
pushf
popf
pop
add
xor
icebp
cmp
sub
dec
loope
arpl
xchg
lret
inc
adc
or
mov
bound
inc
dec
les
jo
pop
dec
data16
mov
adc
sbb
rorl
jne
mov
xchg
pop
mov
mov
add
pop
xchg
sub
gs
pop
mov
sub
roll
xor
xchg
lret
in
mov
imul
inc
hlt
inc
std
dec
int
aad
adc
jbe
les
outsl
mov
add
dec
xchg
and
std
pop
dec
and
jle
cmp
in
mov
iret
mov
mov
xchg
loopne
push
add
or
pop
adc
popf
daa
add
push
in
sti
sbb
push
test
cltd
out
or
out
jmp
xor
cmc
fnstenv
adc
loope
vcvtss2si
mov
insb
sub
mov
out
sub
inc
je
mov
push
sti
cmpsb
adc
jecxz
clc
pusha
cmp
mov
xchg
mov
leave
clc
insb
and
push
stos
push
scas
mov
andl
loopne
xchg
aam
bound
lock
sub
push
sahf
stc
push
jb
lods
icebp
insl
lock
mov
outsb
xlat
mov
sub
sub
mov
sub
push
xchg
movsb
xchg
xor
push
inc
cmp
mov
push
and
aad
aad
iret
popw
in
and
push
xchg
stos
ficompl
fs
dec
push
mov
iret
mov
xchg
adc
cmc
outsb
add
ja
add
pop
jb
xchg
outsb
dec
cli
rorl
add
cli
stos
pop
ret
mov
cmpsl
mull
mov
sbb
jle
fnstenv
mov
xacquire
mov
cmp
and
adc
sbb
push
pop
push
adc
pop
mov
repz
jne
pop
add
int3
outsb
dec
cmpsb
ja
fdiv
adc
mov
mov
imul
in
dec
outsb
nop
adc
mov
push
js
pop
xchg
stos
push
int3
and
mov
out
pusha
and
adc
mov
or
mov
into
xor
mov
push
bound
dec
sahf
cmpsl
adcb
aam
mov
mov
dec
lahf
mov
adc
pop
out
ljmp
xchg
loope
fs
sarl
push
dec
jo
xchg
shlb
cmp
loop
jge
push
push
stos
leave
ror
pop
dec
dec
dec
adc
cmp
adc
sub
bound
add
xchg
cwtl
bound
fdivrl
call
xchg
out
lds
mov
lods
mov
push
pop
ret
mov
fwait
cmp
xchg
cmc
push
rcll
add
xchg
roll
das
fwait
xchg
psubd
cmc
std
lods
add
das
adc
aad
push
icebp
cmp
push
and
and
xchg
aam
dec
popf
xchg
xchg
in
insb
test
lds
mov
mov
pop
repz
push
mov
xchg
mov
ds
out
jmp
dec
inc
outsl
mov
orw
lret
push
jo
addr16
mov
pop
mov
mov
push
xor
imul
in
jmp
inc
hlt
inc
xchg
out
adcl
lock
scas
push
xor
cmp
jle
mov
lret
pop
lock
push
inc
scas
outsl
cs
testl
ljmp
xchg
and
int3
sub
ret
xchg
sub
pop
pushf
aam
push
jb
jmp
sbb
dec
mov
push
scas
aad
je
adc
mov
pop
pushf
add
pop
test
hlt
shlb
hlt
adc
dec
xorb
std
lahf
push
test
cltd
xor
cmc
lods
mov
int
sbb
push
mov
and
push
or
xor
adc
and
xor
lods
in
test
mov
adc
loop
inc
add
jns
pop
ds
dec
shl
adc
mov
push
pop
xor
pop
jg
xor
jge
cwtl
out
mov
xchg
jnp
mov
mov
xor
and
jnp
jl
sbb
xlat
add
xchg
or
and
into
inc
data16
or
aas
lret
ret
cmpsl
lods
test
movsl
in
shll
sub
push
ss
daa
les
insl
cmp
fdivl
enter
in
mov
dec
xchg
scas
push
mov
inc
arpl
out
sbb
das
daa
and
lret
jno
outsl
fs
pop
stos
push
gs
sbb
jns
push
cmp
inc
mov
sbb
leave
mov
inc
push
jns
fisttpll
ss
jl
mov
daa
push
cmc
cld
sub
jg
sub
hlt
in
test
cmp
imul
out
pop
pusha
mov
pop
mov
jo
leave
cmp
nop
out
push
stc
jp
inc
ja
jns
xlat
adc
inc
or
xchg
loope
dec
imul
xor
cltd
sbbb
jg
sti
jmp
mov
push
jne
sub
fbld
mov
aad
ds
ljmp
std
pusha
out
cli
mov
imul
test
dec
pop
shlb
add
call
mov
test
jbe
scas
sti
cmp
ss
inc
pop
daa
sbb
sbb
lods
in
push
adcl
fstpl
fstpl
lret
sahf
shlb
xchg
jae
sbb
lea
bound
lods
in
hlt
add
jo
imul
cltd
mov
divb
cltd
out
subb
mov
sbb
filds
mov
mov
addr16
iret
enter
cli
mov
das
sbb
call
jbe
dec
inc
push
sti
sub
pop
subl
mov
arpl
roll
xlat
mov
and
das
dec
pop
jp
int3
stos
pop
jne
push
dec
add
mov
fdiv
cwtl
push
sub
jno
xchg
rolb
xor
xchg
mov
movsl
in
dec
pop
gs
jl
mov
cmp
sbb
imul
mov
lahf
lods
mov
flds
jne
push
cmpsb
addr16
loopne
mov
fildll
mov
and
sub
xchg
in
test
ljmp
push
sub
sub
sub
inc
sbb
push
or
inc
jnp
sub
push
rcl
mov
outsl
mov
mov
push
lock
pop
aas
aaa
pop
mov
es
loopne
mov
and
ss
arpl
cwtl
mov
add
pop
testl
cmc
push
mov
push
je
ret
add
or
lods
sbb
push
nop
dec
sbb
lret
mov
push
mov
xchg
inc
pop
mov
std
sub
add
cli
test
cmp
scas
jne
subb
scas
cmp
std
inc
enter
mov
jo
sbb
test
cwtl
out
lods
stos
dec
repz
cmp
mov
mov
add
in
sarb
pop
jg
mov
cmp
fisubrl
out
jnp
mov
fwait
mov
sbb
cmp
gs
pop
push
mov
mov
aad
mov
inc
sbb
mov
ljmp
and
clc
ljmp
or
in
inc
cmp
aaa
out
rclb
mov
enter
mov
cmp
pop
hlt
jmp
or
mov
cmp
push
mov
mov
jns
scas
lds
imul
xor
rorb
test
jp
xchg
pop
sub
mov
mov
scas
push
les
jbe
mov
frstor
lods
jne
int3
fisttps
orl
test
inc
shrb
add
sub
into
out
or
and
dec
inc
scas
add
jnp
loope
add
sbb
dec
fstpt
js
mov
pop
hlt
xchg
sub
in
mov
add
jo
sub
adc
dec
mov
loopne
stos
or
xor
xor
and
sub
lds
test
bswap
lcall
and
into
rolb
inc
jp
or
ficompl
mov
test
in
and
mov
aas
sbb
mov
cmpb
inc
mov
jo
mov
aad
xchg
testl
sti
mov
ss
or
inc
pop
jbe
xchg
lahf
addr16
pop
cld
incl
fisubl
or
inc
test
mov
mov
insb
movb
daa
ret
lret
push
sti
cmp
cmp
loopne
mov
je
ds
out
sub
jmp
mov
pop
nop
hlt
fs
xor
xor
es
cmpsl
or
clc
cmpsl
xchg
sub
dec
popa
test
divb
les
add
outsb
pop
lret
or
add
adc
xlat
data16
cwtl
cmpsl
pop
cs
mov
out
xchg
xor
push
cmpsl
jo
mov
pop
into
stos
or
mov
pushw
and
mov
or
inc
loop
pop
in
and
ja
mov
jp
sub
popl
orb
xchg
das
es
pop
mov
aas
sahf
cmpsl
pop
sbb
imul
pop
mov
pushf
mov
inc
and
ljmp
pop
pop
or
and
test
mov
iret
cmp
ja
dec
xlat
jns
rol
pop
insl
cmc
ret
icebp
jp
mov
rorl
fwait
mov
repnz
pop
and
rcr
mov
repz
xchg
ljmp
push
pop
test
fwait
xchg
lea
hlt
insl
jno
ret
adc
and
push
sbb
movsl
je
outsb
mov
test
xor
sub
pop
enter
jbe
sub
cmp
aam
sti
out
imul
mov
stc
mov
mov
and
cmc
adc
mov
pop
test
jmp
mov
adc
add
mov
je
inc
test
or
test
push
das
mov
leave
or
clc
add
call
add
loopne
pop
adc
lret
stc
push
scas
in
lea
pop
push
in
rclb
adcl
int
leave
adc
cmpsb
mov
fistps
jb
mov
sub
pop
xchg
iret
push
das
mov
dec
sub
movsl
xor
sbb
xor
jnp
je
lods
testl
push
nop
leave
popa
sub
int
str
jg
in
sub
xchg
les
sub
mov
mov
or
addr16
aaa
dec
test
pop
int3
pop
into
test
xor
fwait
arpl
popf
into
cmp
repz
xlat
adc
es
xor
adc
icebp
cmpsb
mov
lcall
orb
mov
jecxz
cmpsl
mov
jmp
clc
adc
fcompl
adc
xlat
mov
lahf
cmp
and
mov
insl
data16
push
psubsb
jle
lods
int
dec
cwtl
ret
push
jo
loope
mov
mov
mov
cmp
repz
adc
rorb
enter
push
and
mov
add
mov
fistl
rcrl
adc
xchg
cmp
sbb
jno
pushf
int
jne
xchg
xchg
mov
mov
sub
sti
loope
jp
dec
push
sub
fnstcw
mov
scas
lahf
les
push
inc
push
movsl
sti
cltd
xor
in
push
adc
mov
and
ret
insb
cmp
add
leave
decl
ror
mov
sbb
mov
outsb
sbb
sbb
andl
mov
push
loope
sub
lcall
mov
jb
pop
les
std
pop
xor
ret
jle
test
add
mov
bound
popl
call
mov
sub
int3
shrl
in
sahf
testl
imul
ss
inc
jl
adc
and
dec
out
sbb
pop
xchg
mov
inc
daa
jb
xchg
push
xchg
das
dec
sub
cltd
xchg
imul
inc
movsl
stos
popa
loop
push
push
call
cmp
movsb
mov
test
pop
int
pop
jmp
neg
mov
mov
ficomps
xchg
popa
lcall
lock
sub
lret
jb
int3
dec
add
jmp
es
cli
mov
aaa
dec
clc
mov
xchg
jnp
add
pop
std
dec
lret
and
jae
pop
fcoml
psllw
sahf
inc
stc
stos
mov
pop
inc
push
add
jne
out
cmp
inc
push
cltd
iret
shl
sbb
jo
jnp
adc
dec
add
pop
mov
hlt
push
jmp
out
push
inc
lcall
and
mov
or
or
adc
cmp
in
cmp
inc
test
fidivrl
mov
sub
in
shll
xchg
sbb
jmp
pushf
cli
xor
daa
jl
lods
loop
xchg
pop
sbb
inc
jnp
inc
mov
outsl
movsb
mov
mov
subl
in
pop
push
ret
shlb
sub
js
imul
mov
addl
movsl
inc
in
pushf
and
mov
stc
mov
sbb
push
test
sub
mov
mov
jae
jge
push
imul
or
dec
adcl
pusha
cmp
mov
mov
sbb
les
orb
pop
jb
das
js
lods
pop
mov
xchg
vrsqrtps
mov
cwtl
repz
xchg
addr16
arpl
arpl
sub
loopne
push
mov
fsubs
jge
xor
inc
dec
cs
andl
lret
pop
aaa
adc
stc
aas
jg
sti
int
into
mov
out
loop
adc
inc
sarl
sub
cmp
loop
xor
xlat
mov
xor
ds
std
push
repnz
push
movl
dec
lret
pop
paddsw
jno
push
pop
ds
test
repz
into
and
push
es
dec
xor
daa
ret
cmp
cltd
fcoml
cmp
xchg
adc
in
jecxz
sbb
adcl
inc
pcmpeqb
push
adc
and
mov
push
pushf
pop
call
push
ds
xor
dec
pop
cmp
cmp
je
movsb
cmpl
xchg
dec
cmp
pop
lcall
jno
mov
imul
orl
movsl
sbb
jns
sub
icebp
data16
sub
fstp
and
arpl
std
mov
call
loopne
and
ljmp
loopne
push
inc
repz
pop
dec
loopne
push
cmc
add
mov
adc
sahf
jecxz
mov
popa
adc
adc
stos
adc
mov
fs
shlb
pop
add
jnp
ljmp
inc
mov
loopne
ret
out
mov
addr16
dec
pop
mov
and
inc
sbb
fadd
daa
rclb
data16
cmp
push
repz
pop
call
arpl
jno
pusha
aad
outsl
jmp
inc
rcrb
imulb
test
mov
pop
adc
or
stos
adc
aad
jns
ds
mov
cmpsl
jle
test
lock
test
push
add
xlat
pop
mov
push
stos
daa
sbb
repz
idivb
insl
lods
clc
rol
std
sbb
dec
out
in
mov
mov
mov
xchg
cwtl
jp
fs
push
mov
clc
scas
je
data16
jmp
fnstenv
mov
xchg
jmp
in
bound
jecxz
scas
filds
sbb
sbb
pop
std
add
hlt
adc
xchg
jge
arpl
and
arpl
imull
stos
add
out
or
mov
dec
ret
and
daa
sti
fsubr
sarl
adc
leave
sub
mov
xor
mov
xor
rcrl
cmpl
push
jle
and
clc
mov
insb
inc
dec
xchg
rclb
call
xchg
mov
jns
addr16
pop
aas
iret
cs
mov
jo
jl
mov
pop
mov
cmc
push
dec
jnp
test
stc
fwait
pop
inc
push
push
fcoms
test
not
pop
test
pushf
xchg
xchg
cmp
lock
lcall
stos
ret
pop
add
dec
push
jg
fstpt
in
pop
andl
and
or
in
popf
fwait
mov
call
jno
add
dec
arpl
es
shl
aam
xchg
xor
sar
sbb
inc
cmpsl
inc
inc
aaa
pop
sahf
and
movsb
out
xor
fistpll
aad
jns
in
data16
repz
div
xabort
lods
loopne
ljmp
int3
lods
jecxz
aaa
sbb
xor
jmp
jmp
cmpsb
jae
xlat
call
hlt
xchg
imul
fcompl
mov
gs
iret
imul
inc
enter
jle
adc
stc
push
out
push
out
ds
cwtl
jmp
sahf
shlb
out
rol
xlat
inc
mov
mov
movsl
xlat
mulb
push
push
mov
dec
cmpsb
dec
mov
xchg
xchg
inc
mov
push
jecxz
jnp
pop
and
push
pop
xchg
xchg
movsb
lods
cld
es
xchg
or
es
bound
xchg
hlt
cmp
mov
cmpsl
outsl
sub
sarb
jge
sub
and
or
ljmp
inc
or
pop
sub
mov
les
push
pop
ja
repnz
cs
into
lea
daa
cmp
jge
xor
in
dec
repnz
pop
and
insl
fnstcw
or
das
gs
fs
jecxz
xor
push
in
stos
ficoms
xchg
mov
test
aaa
adc
push
jp
or
sub
aam
mov
jg
icebp
push
or
sub
lahf
jnp
mov
test
lea
fidivl
pop
sub
pop
clc
jle
in
pop
pushf
movsb
ljmp
arpl
push
les
idiv
dec
sbb
cld
in
into
out
int3
stc
stc
adc
vmwrite
and
cwtl
jno
das
pop
dec
das
insl
addl
cs
inc
sub
push
lret
sbb
pop
outsb
sbb
bound
inc
add
cmp
push
aad
addl
sub
inc
cwtl
jne
ljmp
out
mov
xor
mov
ss
push
out
lea
and
sbb
cmp
fnstenv
push
das
jnp
pop
add
cmp
push
inc
jae
imul
and
or
pushf
sbb
xchg
out
mov
jno
pop
rcrb
mov
not
pop
jne
add
sbb
pop
repz
popa
movsl
inc
mov
enter
in
mov
imul
fs
mov
fwait
mov
xchg
outsl
mov
add
bound
xor
roll
rcl
shlb
scas
pop
xor
dec
cmp
out
cmpsb
push
xchg
outsl
stc
jg
arpl
jge
mov
cmp
inc
aam
pop
pushf
xchg
aad
adc
cmp
mov
mov
in
push
jge
add
or
or
inc
or
loop
sub
cld
cwtl
scas
mov
ss
mov
fisttps
pop
sbb
mov
mov
jp
arpl
and
lret
fcompl
scas
mov
fidivrs
xchg
daa
xchg
dec
stos
sbb
add
sub
inc
lahf
jne
imul
dec
mov
jb
pop
leave
pop
add
ja,pn
arpl
rcrb
cmpsb
and
pop
cmpsl
leave
or
or
dec
jae
fs
adc
bound
mov
mov
fwait
mov
jl
sub
jg
dec
xchg
sbb
popf
popf
mov
int3
cmp
lods
mov
sbb
cltd
aad
pop
loope
insl
dec
sub
and
out
inc
inc
dec
xor
jns
ret
mov
pop
mov
outsb
cmp
jp
pop
sti
lock
imul
leave
push
dec
arpl
lcall
fdivrs
jo
lcall
pop
cs
cmpsl
pop
out
outsl
mov
xchg
push
sub
pop
ds
filds
xor
sbb
jmp
push
mov
and
sub
jne
out
shlb
push
test
jl
add
jnp
mov
icebp
inc
fsub
cmpsb
das
outsl
lea
stos
xor
jbe
mov
xlat
outsl
sub
and
imul
mov
mov
fidivrs
jnp
jbe
aad
adc
pop
add
push
popf
mov
rcl
or
jmp
flds
jl
adc
cld
pop
cmp
dec
xchg
xchg
pop
cmp
sub
sbb
out
sub
or
addr16
xchg
das
out
sbb
inc
movsb
jge
out
jae
out
insl
inc
mov
mov
pop
es
xorl
dec
and
repz
jae
aad
subb
add
fdivrl
cmpsl
mov
fsts
cmpsb
add
xchg
cld
jbe
lods
into
mov
shrb
pop
adc
lret
stos
stc
xlat
js
xlat
out
cltd
adc
sti
jg
into
fucomi
stos
test
and
cwtl
subb
inc
shll
stos
sub
cmp
fidivrs
sbb
outsb
sbb
enter
arpl
fstpl
push
fdivrp
adc
enter
sarb
stc
shll
mov
xor
mov
xchg
pop
cmc
jo
cltd
pop
fnstenv
push
xor
xchg
pushf
decl
push
outsl
mov
cmpsb
and
xchg
and
imul
pop
out
les
scas
or
int3
in
mov
fwait
xchg
pop
xchg
sar
mov
pop
repnz
scas
pop
pusha
or
pop
in
in
or
and
push
and
ds
clc
mov
xlat
xor
icebp
shlb
jb
inc
in
shl
jp
dec
pcmpeqd
push
shll
leave
pop
adc
xchg
les
mov
xchg
test
and
inc
cmpsb
jbe
cmpsl
and
adc
stos
mov
xorb
jg
cmc
push
sti
adc
mov
data16
cmc
mov
push
stc
in
push
sbb
inc
out
cmp
inc
jns
pop
cmc
lock
int
push
inc
hlt
dec
mov
push
push
cmp
ficompl
test
xchg
sbb
les
lods
out
pop
dec
movsl
stos
mov
mov
jmp
aam
sub
jb
jmp
xchg
xor
scas
pushf
lock
jns
mov
add
ja
pop
jnp
inc
cmpsb
inc
mov
sbb
gs
cmpb
outsb
inc
out
out
pop
sbb
scas
jge
test
fbstp
add
ss
stc
fidivrs
popf
push
inc
ja
mov
jne
shlb
and
sbb
iret
leave
lret
lret
lret
or
das
clc
ja
sbb
xchg
shrb
mov
xor
xchg
dec
mov
mov
daa
mov
sub
mov
or
aad
lahf
or
add
sahf
dec
nop
push
std
mov
push
into
pop
dec
aad
stc
mov
inc
movl
stos
mov
insl
aam
xchg
xchg
mov
data16
cmp
mov
icebp
test
test
add
js
fcomps
repz
in
mov
jmp
roll
lea
mov
or
or
push
data16
jno
push
xor
jg
lahf
ljmp
xor
adc
mov
icebp
test
dec
pop
mov
mov
mov
es
adc
cmp
and
mov
outsb
test
jle
stc
sahf
ljmp
data16
hlt
fdivrl
mov
mov
fmuls
lret
fdivrl
cmp
mov
adc
mov
insb
pop
push
dec
add
xchg
cwtl
cmp
ret
sub
cmpsb
nop
xchg
push
push
fucom
shrl
in
pop
insl
lods
or
and
inc
ljmp
ret
inc
jb
imul
xor
outsb
ficoml
or
xor
loope
clc
js
xchg
inc
add
inc
xchg
jle
inc
jno
aaa
sub
call
push
je
out
xlat
test
int
gs
gs
xor
pop
jecxz
in
jne
add
pop
dec
jbe
dec
sub
int
xchg
icebp
imul
pop
add
stos
pop
push
cli
add
flds
leave
push
test
pop
stc
push
loopne
mov
test
sbb
test
pop
bts
sub
or
mov
xchg
jns
inc
jecxz
xor
dec
je
push
cmp
iret
lods
cmp
loope
cmp
cmp
fs
dec
stos
lods
in
xchg
mov
popfw
add
stos
mov
stos
sbb
cmp
aam
fstpt
jle
and
std
dec
add
add
lahf
pop
repnz
lret
in
les
xor
push
and
fdiv
sub
mov
mov
lods
mov
ds
xlat
or
mov
inc
ss
flds
ficomps
pop
pop
call
pop
xor
jecxz
es
test
adc
xchg
minps
or
repnz
scas
mov
imul
fwait
adc
jmp
push
inc
xor
gs
push
pop
stos
jb
push
and
dec
mov
fs
orb
dec
sbb
loop
lret
push
ljmp
mov
cmp
subb
mov
rcll
lret
or
mov
sbb
jle
mov
ja
jl
jb
push
mov
nop
enter
pop
aaa
andb
mov
imul
in
and
xor
insl
loope
sbb
pop
and
popa
xchg
pop
mov
xchg
repnz
cld
test
push
jae
pop
cmpsl
dec
lret
int3
insb
popa
loop
leave
jmp
jl
fsubrl
add
mov
mov
imul
test
cmp
in
mov
adc
sub
test
shll
andb
xchg
int
or
or
loop
add
sub
pop
push
jne
adc
ficoml
ljmp
out
mov
cwtl
xlat
mov
stc
and
cli
outsb
std
adc
and
test
push
adc
xchg
pop
rorb
sbb
sub
shlb
jbe
imul
adc
lret
push
test
lods
xor
pushf
cmp
cmc
std
scas
sub
inc
pop
shrl
adc
cmp
push
call
mov
mov
mov
inc
cbtw
jg
dec
ja
faddp
xchg
scas
daa
mov
adc
hlt
mov
shlb
iret
inc
mov
jnp
pop
xchg
mov
movb
pop
leave
add
mov
loopne
adc
jge
jns
sub
cmpsl
movsb
test
push
adc
icebp
cmp
jl
mov
mov
mov
insl
loop
test
push
mov
mov
mov
loope
jno
and
packsswb
add
mov
push
imul
cmp
mov
mov
out
pop
dec
jae
imul
cmovne
popf
pop
xchg
jmp
xchg
lods
cli
or
xchg
sub
lods
sub
ljmp
xlat
sbb
add
sahf
mov
adc
bound
insb
fwait
iret
lods
clc
sbb
dec
fisttpl
jecxz
mov
or
scas
and
push
lret
mov
sbb
aad
mov
cwtl
test
jns
xchg
lock
add
sbb
sub
orl
hlt
inc
sbb
dec
clc
inc
pop
push
pop
dec
stos
sbb
jb
rcrb
fimull
adc
idivl
inc
enter
push
aam
mov
cmp
shrb
jbe
pusha
inc
push
jne
je
jmp
aad
loop
sbb
fidivrl
add
xor
cmp
data16
pop
cmpsl
scas
xlat
sbb
das
xchg
xor
test
je
and
push
cwtd
test
fwait
outsl
xor
mov
test
and
add
lcall
lods
mov
and
jo
lock
lds
jo
aad
and
push
inc
cmp
jae
movsl
fidivl
mov
test
adc
and
push
mov
push
nop
push
or
mov
or
shll
inc
sub
adc
in
outsb
sbb
mov
mov
enter
adc
inc
jno
mov
scas
jns
jns
xlat
adc
mov
je
mov
lcall
push
repz
cmp
mov
out
sbb
inc
mov
movsl
arpl
std
aaa
jae
mov
push
cmp
add
scas
cltd
outsb
loopne
insl
or
cmp
adc
pop
adc
jle
xchg
mov
icebp
sbb
movsl
loopne
test
dec
pop
jge
and
or
cmp
sti
pop
mov
jge
add
daa
sbb
cwtl
arpl
and
inc
in
jge
mov
sti
orl
sub
mov
fstl
inc
subl
mov
scas
cmc
push
aad
xor
mov
cmp
stc
fisubrs
movsb
out
and
shlb
adc
jbe
out
pop
shl
repz
leave
dec
int3
or
jnp
fadds
add
iret
push
add
scas
cmp
rolb
sbb
cmp
lret
sahf
push
repz
add
inc
leave
mov
cmc
pop
pop
dec
inc
and
or
push
cli
movsb
sbb
add
into
push
dec
push
mov
sbb
loopne
push
jno
sti
sub
xchg
in
mov
roll
movsb
adc
cltd
outsl
insb
push
xchg
mov
outsb
cmp
xor
icebp
xor
inc
xor
jecxz
sbb
inc
movb
sub
movsb
outsb
bound
jbe
test
lahf
pop
xchg
in
xor
pop
cmp
rolb
aad
fildll
mov
outsb
call
jg
sub
sbb
ja
cltd
jno
lcall
push
sahf
mov
or
inc
stos
and
daa
pop
insb
lds
daa
inc
in
aad
push
std
jae
ret
lret
push
lret
movsl
pop
xchg
scas
xchg
push
mov
pushf
imul
aad
int
pop
sbb
insl
mov
mov
or
add
mov
fistl
cli
or
mov
stc
push
push
out
mov
in
fs
insl
adc
add
dec
xor
outsb
pop
popa
add
sti
icebp
push
cmp
lods
ret
mov
jge
sahf
int3
pop
cmp
test
loope
cmp
dec
push
rcl
in
mov
xchg
push
pop
mov
mov
cmp
icebp
mov
add
add
stc
dec
and
sub
sbb
aas
adc
mov
mov
sub
maskmovq
testl
mov
int
mov
or
add
fstl
pop
or
adc
data16
stos
xchg
rol
movsb
pop
aas
push
mov
push
and
mov
imul
into
pop
sbb
pop
nop
setge
inc
lock
jmp
pusha
cmp
call
scas
out
mov
addl
jo
cmp
lods
jl
popf
movsl
addr16
or
int3
orb
mov
iret
notb
mov
add
jno
clc
shlb
icebp
mov
push
int
push
sbb
popf
fmulp
int3
icebp
lret
sbb
mov
hlt
cltd
mov
adc
jbe
rcrb
mov
dec
adc
mov
dec
jecxz
inc
mov
je
cmp
dec
lcall
xchg
ljmp
cmp
inc
cmp
hlt
jbe
cmc
sti
pop
sbb
loop
fdivrp
push
test
xor
ljmp
mov
push
mov
sbb
cmpsb
insl
cmc
xor
jg
aad
fistps
dec
addl
aas
mov
jmp
into
jo
mov
pop
xchg
dec
shlb
push
and
xlat
mov
jmp
push
in
loopne
mov
adc
cmp
pop
jg
jle
lods
mov
jo
push
js
rcl
movsl
aaa
jge
cmp
mov
loop
or
loopne
xchg
loope
mov
xor
mov
dec
ret
les
pop
fstl
cmp
jmp
aam
mov
movsl
dec
fs
sbb
cmc
dec
push
cmpsl
mov
enter
adc
fiaddl
fistpl
loop
cmpsb
adc
xlat
mov
dec
jle
lea
mov
fistpl
daa
je
lods
les
sub
je
shlb
pusha
daa
xor
adc
arpl
push
popf
jge
add
sub
out
fisubrl
add
lret
jg
mov
xor
out
push
aad
dec
sbb
push
imul
or
enter
das
or
sub
fildl
adc
imul
mov
or
aad
rsqrtps
dec
mov
and
add
leave
sbb
subl
shrb
push
icebp
jmp
in
jo
das
stos
xchg
jb
dec
mov
ljmp
lahf
sbb
push
mov
data16
mov
mov
jno
fnstcw
pop
cmpsb
in
dec
repnz
and
clc
sub
out
push
ficoms
test
push
ficompl
sub
dec
nop
dec
daa
scas
jae
cmp
xchg
pop
outsl
mov
xchg
jb
in
mov
adc
jne
jb
in
repz
aaa
mov
xor
lock
ss
js
mov
bound
lret
and
cmp
pop
xchg
sub
notb
push
add
fnstsw
sahf
and
lods
push
hlt
xor
aam
jmp
push
or
addr16
lret
add
test
cmp
nop
mov
fldt
jnp
iret
dec
ljmp
gs
sahf
or
sbb
shr
push
dec
ret
mov
idivl
push
nop
and
leave
das
int
push
inc
popf
jne
idivl
add
mov
shl
mov
ljmp
mov
pop
adc
push
jbe
arpl
or
aaa
sbb
mov
outsb
push
nop
xchg
in
or
sarb
cmp
mov
and
rcrl
xlat
push
jns
pusha
ds
lahf
and
and
outsb
xor
lcall
lods
pusha
inc
dec
pusha
stos
sub
xor
and
inc
inc
jne
mov
sub
xor
or
pop
movsb
cmp
mov
lcall
out
icebp
js
cmp
lcall
cltd
pop
mov
jp
xchg
aaa
mov
aad
imul
adc
mov
clc
js
push
loope
pop
jle
mov
cmc
fistpll
mov
mov
xchg
cmc
cmp
js
or
popf
popa
outsl
dec
xor
cwtl
mov
mov
int
into
mov
inc
xchg
cmp
call
mov
lahf
fadd
les
es
daa
push
pop
les
mov
add
push
xchg
mov
push
sar
push
insb
add
outsl
iret
push
inc
aad
sub
dec
movsl
xor
data16
fbld
jne
ret
mov
int3
jge
jle
add
std
mov
into
push
add
fucomip
mov
fistpl
stos
pop
out
ret
xor
mov
clc
jmp
mov
xchg
icebp
sbb
xchg
mov
push
pusha
daa
mov
xchg
mov
addl
scas
adc
stos
es
jae
dec
ret
inc
outsl
cmp
or
sub
xor
js
sub
jns
arpl
mov
fsubr
leave
and
pop
out
ss
inc
push
aam
mov
or
adc
movb
lock
pop
test
or
mov
cs
incl
sbb
mov
addr16
xorb
pop
gs
lret
cmp
xlat
mov
icebp
fsubs
xor
xor
lret
inc
mov
sarb
adc
mov
in
fldcw
mov
test
pop
mov
push
adc
inc
gs
xchg
out
push
popf
jb
dec
int
mov
push
sbb
cmp
pop
pop
dec
cmp
mov
ja
adc
sar
cmpsl
in
insl
mov
icebp
push
popa
arpl
enter
sub
jmp
push
sbb
addr16
movb
or
or
lahf
push
and
and
dec
cmp
mov
arpl
cmp
in
fistl
call
in
mov
in
push
cmp
mov
fdivl
pop
lock
xor
push
mov
fldt
xchg
and
loop
mov
add
out
adc
movsb
and
cmc
pop
mov
or
out
cwtl
icebp
cwtl
mov
out
pop
mov
mov
push
dec
push
mov
cmp
xchg
imul
sbbl
int
jmp
and
jnp
push
fstpl
pop
fs
fidivl
cli
mov
jo
lcall
pusha
out
xor
lods
in
adc
pushf
cmp
jno
fwait
in
nop
mov
xor
repnz
mov
leave
pop
jno
loopne
cmpsl
add
xor
xor
xor
test
cmp
sbb
or
fwait
iret
push
inc
loopne
sbb
pop
adc
adc
scas
fldenv
jl
adc
outsb
push
mov
dec
out
fsts
das
fdivr
mov
mov
xchg
mov
push
stos
mov
jle
cmp
xchg
and
mov
testb
fdivrl
cmp
pusha
and
loop
outsl
xchg
xor
das
sahf
cmp
jmp
push
movsb
iret
inc
mov
shrl
xchg
mov
mov
xchg
mov
test
mov
sbb
xlat
sti
lds
push
jl
or
ds
sbb
inc
loope
lock
mov
jno
mov
push
aad
push
out
dec
xchg
inc
xchg
push
int3
cld
shll
call
jmp
out
mov
out
pop
data16
cltd
out
lret
dec
xchg
sbb
stos
popa
daa
jbe
xchg
xlat
jne
not
add
sbb
fisttpl
stos
cwtl
cmpsb
sub
paddb
aam
mov
pop
mov
jae
stc
dec
jne
movsl
imul
mov
dec
xchg
push
pop
fsubr
loop
xor
add
testb
scas
mov
test
pop
shl
jns
adc
into
mov
push
cld
nop
ret
pop
imul
push
push
pop
aas
mov
aam
sti
and
scas
add
dec
stos
cmp
shlb
sbb
mov
rorb
mov
data16
hlt
das
cltd
cwtl
push
in
cmp
fs
in
ret
mov
arpl
ss
add
sub
mov
sub
jp
pop
lahf
std
or
aas
into
add
cmpb
jmp
fwait
ljmp
jg
push
test
dec
cmp
sar
rorl
test
jae
scas
jge
out
xchg
sarb
cmp
cmpsl
rcrl
jae
dec
sbb
cmpsb
idiv
mov
ja
ss
jecxz
mov
punpckhwd
mov
es
cwtl
ds
test
mov
push
es
push
or
idivb
int
cmc
cmpsb
scas
pushf
xchg
cld
adc
ud0
sahf
cmp
dec
sub
pop
push
cli
mov
out
add
jo
dec
jg
push
sbb
and
jmp
enter
aas
mov
test
mov
int
hlt
jnp
aaa
int
pop
lea
jl
mov
movsb
scas
mov
out
dec
fwait
mov
jns
data16
dec
mov
inc
pop
frstor
addr16
fidivs
popa
cmovns
lret
stos
fcomip
out
sahf
sbbb
negb
or
out
shlb
inc
in
cmp
es
les
clc
repnz
adcb
add
rclb
mov
call
mov
or
inc
sub
ret
sbb
and
push
mov
into
sbb
lods
pop
push
push
or
aad
shrb
push
adc
std
pop
mov
mov
mov
push
sbb
lods
pop
push
mov
loope
mov
cli
addr16
repz
inc
fstpt
jnp
cmp
fdivs
sub
fwait
mov
xor
incl
xchg
lret
xchg
adcl
xchg
mov
mov
ret
mul
mov
fisubl
sbb
mov
mov
pushl
js
arpl
out
fwait
jnp
pop
mov
test
test
hlt
scas
pop
cli
cmp
pop
push
inc
adc
out
mov
xor
pop
sbb
addr16
inc
push
jg
xor
jne
push
call
fdivrl
cld
inc
push
nop
xor
jb
inc
xchg
jg
sbb
or
outsb
cmp
mov
xchg
hlt
add
ret
cld
test
cmp
cmp
js
fdivs
sbb
lds
shr
pushf
mov
cmpsb
test
out
and
inc
mov
pop
jno
repnz
jmp
and
inc
ljmp
push
add
lcall
mov
add
push
or
cmc
jnp
ss
push
pop
loop
xor
in
call
sbb
in
and
push
cmp
inc
cli
cmc
mov
mov
dec
es
inc
imul
sub
lods
iret
fsubr
mov
push
push
mov
pop
push
sarl
sub
or
mov
cltd
push
outsb
sar
sbb
scas
test
xchg
decb
mov
inc
fbstp
lcall
or
outsl
dec
inc
mov
popa
lret
pop
dec
cltd
xor
dec
ret
out
popf
adcb
in
push
iret
cmp
jns
mov
cmpsb
add
js
clc
lret
fcomp
or
xor
mov
aas
popf
pushl
cmp
xor
xchg
ret
push
jge
add
fnstcw
or
or
mov
xor
shl
jne
out
add
aad
in
in
int
daa
fwait
push
imul
imulb
sbb
sbb
ret
push
sub
cwtl
iret
jge
jbe
pop
push
push
jecxz
std
xchg
in
arpl
cmp
decl
popa
xor
leave
dec
push
or
sbb
insl
jecxz
inc
xor
xchg
ljmp
arpl
je
push
dec
rol
cli
pop
and
popa
into
jp
adc
repz
scas
fiadds
add
loop
sbb
sti
jp
hlt
or
pop
ljmp
dec
fistl
adc
mov
inc
in
jge
sub
mov
stc
in
or
scas
xchg
mov
push
push
or
mov
push
stos
in
ja
push
pop
test
mov
pop
sbb
lods
lret
scas
cmp
jo
stc
pop
inc
xor
cmp
push
or
ljmp
aaa
aam
mov
in
push
cmpsb
mov
xchg
dec
iret
repnz
dec
cmp
jp
repnz
sbb
dec
mov
push
adc
mov
sub
fsub
movsb
int3
in
lods
iret
add
inc
push
add
jno
sub
clc
or
mov
insb
pushf
dec
cld
dec
and
arpl
jmp
mov
xor
xchg
and
cmp
scas
je
push
cmp
sbb
push
and
ret
divb
sub
fidivrl
jno
fidivrl
adc
jns
jle
cmpsb
scas
ds
jl
iret
icebp
inc
aas
xchg
pop
adc
adc
cwtl
push
xchg
or
push
mov
js
out
and
cmp
or
mov
jno
or
xor
imul
mov
add
mov
shrb
iret
lock
xor
into
jp
dec
push
btc
cmp
pop
sub
cmp
sahf
cli
xor
popa
add
or
aas
aaa
inc
shlb
cltd
lock
xchg
stos
jmp
pop
pop
pop
pop
add
dec
add
sti
pop
pop
push
pop
sub
repnz
scas
ja
mov
sbb
add
cmp
add
xchg
pop
and
pop
outsl
lock
out
pop
jl
dec
ss
adc
sbb
scas
inc
sbb
cmpsb
bswap
lret
int3
push
stos
jmp
movsb
movsl
mov
daa
adc
stos
nop
into
lret
cld
loop
pusha
lret
jo
fnstcw
dec
xchg
mov
addb
notl
mov
push
push
pop
push
je
xchg
xor
cmp
mov
cmp
xor
outsl
jg
hlt
sub
mov
fldln2
add
movsb
sbb
fbstp
cltd
fisubl
cmpsl
push
fidivs
mov
cmp
push
sbb
adc
pop
push
push
add
pop
pop
xchg
mov
out
sub
mov
setb
xor
sti
mov
shl
mov
out
mov
rcl
inc
adc
pop
sub
xchg
cli
roll
mov
xchg
jge
outsb
mov
jle
arpl
xor
pop
and
rolb
and
add
push
lds
cmp
leave
popf
push
ret
shll
das
mov
jp
xchg
pop
xchg
dec
cmpb
int
ss
ljmp
pop
push
cmpxchg
pop
mov
popf
mov
loopne
invd
push
fildll
cltd
xchg
stos
lahf
js
dec
sbb
cltd
lret
pop
fmuls
mov
pop
ss
adc
cmpsb
mov
test
fldl
xor
push
and
dec
jle
pushf
and
imulb
fdivs
add
pushf
mov
or
push
orb
fdivrp
jmp
cmp
inc
mov
sar
jne
gs
dec
mov
test
enter
pusha
xchg
inc
lea
mov
dec
jecxz
jnp
mov
add
cld
lods
out
testb
xlat
fdivrs
aad
int
mov
ret
cs
sbb
ds
outsl
pop
fs
pop
cmp
jns
mov
xor
sub
ja
lret
out
subb
sub
mov
sbb
aad
stos
outsl
stos
movsl
movsl
roll
or
mov
lods
paddsb
insb
sub
sub
mov
aam
call
cmpsl
fisttps
mov
inc
decw
mov
cmp
jle
out
pusha
popa
adc
xchg
mov
add
dec
in
adc
lds
dec
nop
cmp
adc
fcoms
faddl
mov
popf
rolb
pop
jbe
fimull
arpl
pushf
cmp
jb
mov
inc
jmp
fwait
inc
shrb
push
scas
jae
jecxz
test
cltd
push
xor
adc
popf
pop
jl
mov
jecxz
cmp
mov
dec
mov
xchg
sbbl
xchg
into
testb
int3
and
xchg
or
pushl
or
loope
stos
sbb
jno
mov
xor
out
sbb
jbe
insl
daa
cmpb
loope
mov
push
push
sbb
mov
mov
dec
cwtl
jbe
add
sub
lea
add
lahf
aam
mov
lea
mov
adc
lds
sub
dec
sbb
enter
pop
sbb
xchg
adc
aad
xor
addb
mov
mov
and
lods
mov
cmp
dec
mov
cmp
jl
dec
mov
outsb
adc
stos
es
add
push
mov
daa
jge
fists
jo
push
sbb
cmpsb
cmpl
xlat
xor
mov
add
stc
std
loopne
fstps
push
cltd
adc
inc
and
mov
nop
push
insb
jle
hlt
pop
dec
daa
or
jns
outsb
loope
and
xchg
aam
pop
dec
sbb
push
dec
xor
mov
xchg
icebp
cltd
xchg
cld
cltd
pop
mov
test
push
popa
xor
xorl
idivb
sbb
dec
mov
fisubl
pop
xlat
add
pop
lock
in
sub
into
popa
inc
mov
mov
mov
aad
pop
sbb
test
pop
pusha
xchg
mov
stos
aad
iret
pop
inc
lret
test
jbe
repz
inc
xorb
sarl
sub
sub
xor
repz
in
jbe
lahf
movsl
and
mov
and
mov
fnsave
out
mov
ret
adc
lds
les
cwtl
cltd
xchg
loopne
push
es
push
repnz
lcall
fcoms
in
dec
setnp
movsl
in
dec
cmp
maxps
inc
push
xor
in
jecxz
sub
das
jnp
mov
sbb
xor
mov
call
loopne
cli
mov
jbe
decb
into
js
pop
xchg
popf
movsb
or
fbld
inc
dec
adc
xchg
testl
cmp
jns
sti
shlb
xchg
leave
jmp
pop
xor
mov
or
sbb
cmp
jo
xchg
cmp
sub
lock
aas
stc
dec
jg
mov
out
xchg
sub
fs
jg
fstl
jae
adc
std
pop
dec
xlat
popf
rorl
ljmp
mov
xchg
cmp
loope
sbb
push
outsl
or
xor
icebp
adc
mov
jno
std
and
push
push
inc
in
jno
dec
movsb
adc
sbb
sarb
rolb
out
call
mov
imul
int3
fs
pop
loopne
mov
movsl
aad
push
mov
testb
dec
jno
shl
sbb
ja
add
dec
inc
mov
pop
sub
int3
rol
out
dec
mov
jne
and
and
mull
bound
xor
lret
push
or
pusha
jnp
popa
lret
adc
lods
adc
xchg
add
or
fistpl
andb
adcb
das
xor
stc
adc
mov
lea
sarb
arpl
fsubs
cmp
or
xchg
mov
mov
dec
xor
ficompl
testb
mov
jge
sti
xchg
cli
sbb
xor
cmc
gs
insl
mov
or
movsl
pop
dec
mov
aad
loopne
inc
aaa
add
out
rcrb
adc
test
push
sub
xor
lcall
test
rclb
add
dec
nop
adc
popa
jge
dec
inc
xchg
xchg
or
pop
int3
and
into
sub
rol
inc
cs
or
jl
jg
leave
inc
ficoms
adc
or
int3
ss
mov
out
inc
rorl
das
shrl
call
mov
lea
shlb
int3
sub
fstps
imul
xorb
lods
push
dec
cli
bound
sub
lcall
and
jo
popf
and
xor
or
xchg
loop
adc
dec
jl
scas
inc
aas
dec
dec
popa
jno
ret
add
jae
xlat
push
and
cmp
sub
xchg
push
in
and
and
push
push
push
jl,pn
cmp
cmpsb
xchg
jo
cltd
jp
mov
pop
xchg
mov
jnp
aam
in
lahf
pop
mov
mov
cmp
out
in
dec
pop
cld
aad
cltd
ja
frstor
std
or
xor
xlat
stos
loopne
push
notl
xchg
test
aad
jae
jecxz
xchg
js
fidivrs
sub
xor
in
cwtl
sub
notl
pop
jp
inc
jns
cwtl
popa
xchg
lret
mov
pushf
mov
out
or
and
mov
push
cld
and
mov
push
add
and
cmpsb
mov
mov
mov
push
lcall
cmp
mov
pop
mov
push
stos
andb
sub
lods
lahf
jbe
mov
ss
imul
dec
jne
iret
pop
call
push
addb
mov
mov
mov
pop
mov
sub
fwait
xor
add
xchg
outsl
nop
ja
pop
pop
xchg
hlt
xorl
and
mov
add
jp
cltd
pop
sbb
arpl
xchg
jg
scas
add
or
cmp
out
imul
mov
jl
not
ja
xchg
jl
and
les
pop
pop
xchg
xor
ret
pop
jecxz
pop
ljmp
mov
aas
mov
and
mov
testl
fcoms
and
fisttps
add
add
push
xor
adc
cmp
push
lods
sub
jl
cmp
mov
push
rorb
outsb
cltd
adc
leave
andb
push
xchg
into
icebp
cmp
mov
out
mov
outsl
fadds
mov
pop
clc
leave
call
loope
fistps
mov
cmpsl
and
aaa
mull
cltd
add
push
cmp
into
xchg
sub
jbe
push
sbb
cli
sbb
xchg
mov
aas
push
es
jp
inc
push
lcall
mov
and
jbe
cld
or
stos
push
push
sarl
inc
xchg
adc
icebp
mov
mov
into
add
jg
movsl
push
jmp
popa
pusha
aam
hlt
psllq
cmp
daa
call
inc
aas
rcrb
lods
xchg
mov
test
adc
mov
adc
or
inc
pop
jl
data16
shrl
xor
out
insl
std
add
inc
push
mov
call
or
pop
dec
jno
sar
push
sbb
int3
mov
test
nop
setge
daa
adc
and
mov
add
flds
jne
jl
xor
lea
nop
lret
lea
mov
or
mov
fdivs
cmc
aaa
sub
out
stos
hlt
xchg
adc
mov
push
jmp
mov
js
cwtl
or
pop
jle
pop
filds
sub
and
test
xchg
aas
mov
cmp
jecxz
dec
sub
and
add
dec
loope
add
orb
xor
pop
inc
mov
mov
out
pop
clc
fildl
mov
cmp
je
lds
ror
xchg
popf
push
imul
inc
inc
cmpsl
les
lock
loope
inc
repz
repz
pop
push
popa
jno
lock
jg
notb
movsl
cld
jl
in
pop
push
sahf
adc
sar
jge
push
inc
dec
xor
popf
cmp
dec
enter
mov
js
add
int
lds
fldl
adc
cmpsl
mov
lods
jp
imull
xor
and
xchg
mov
test
aam
loope
sub
push
mov
call
mov
lods
out
pop
dec
aaa
dec
psadbw
js
xchg
std
mov
mov
xchg
pop
fcoml
testb
jg
mov
mov
scas
leave
insb
iret
daa
enter
pop
ja
movsb
sti
imul
loop
rclb
mov
jge
cmpsb
arpl
or
add
repnz
mov
das
adc
xlat
pop
mov
mov
testb
jne
cmpsb
mov
in
ret
out
or
and
mov
aam
shl
sub
and
lret
test
push
ret
mov
mov
into
repnz
dec
lock
jb
popf
cmp
cld
pop
ret
repz
in
mov
cmp
mov
lahf
call
mov
sbb
push
add
jle
dec
dec
lcall
push
inc
mov
movsb
xor
mov
mov
jo
or
mov
int
sub
daa
out
adcl
pop
cmp
mov
jl
clc
sub
ds
testl
push
inc
fildll
dec
inc
mov
leave
mov
int3
mov
pop
pop
push
pop
shll
adc
jle
mov
ficomps
jb
jmp
int3
sti
loopne
sbb
push
pop
enter
lds
das
jne
enter
xor
repz
scas
jl
ret
sbb
push
scas
mov
ss
cmp
addr16
movsb
in
out
movsb
adc
cmp
and
fwait
leave
int3
scas
jg
lcall
xchg
adc
xor
and
nop
cli
cmp
rclb
shll
mov
movsb
mov
fsubs
and
jg
fwait
push
sbb
lock
inc
or
das
mov
mov
push
jl
repnz
pop
outsb
mov
or
icebp
jnp
jle
mov
xchg
xchg
xorl
aaa
sbb
sub
xchg
or
sub
icebp
push
cmpsl
jg
jne
inc
sbb
push
pop
decl
out
lcall
es
jbe
or
lods
xor
daa
jle
sbb
jecxz
push
dec
jp
sbb
mov
pop
lods
lret
xchg
xor
out
inc
pop
xor
xor
jg
add
xchg
pop
call
pop
push
ja
incb
add
add
xor
add
fstpl
loopne
adc
xchg
push
popa
mov
in
adc
pop
out
and
inc
aaa
stos
jge
icebp
outsl
cld
popf
stc
imul
dec
js
repz
adc
add
pop
arpl
pop
std
mov
pop
add
pusha
pop
dec
out
inc
mov
aad
push
cmp
xlat
add
fbld
pop
in
push
call
orl
add
fldl2t
or
fisubs
sbb
movsb
push
test
mov
test
jbe
xchg
ds
aad
xchg
mov
lcall
arpl
repnz
mov
repz
in
ret
icebp
pop
jns
mov
pop
sbbl
jg
xor
jb
adc
mov
lret
stos
xor
sbb
inc
in
push
mov
adc
lods
int
ret
in
loopne
add
add
xchg
bound
or
sahf
popf
dec
and
js
movsb
push
lock
xchg
mov
xor
mov
pop
ficompl
jbe
xor
mov
outsl
add
jmp
shll
aam
out
add
xor
pop
aad
mov
or
pushf
cld
sbb
std
arpl
sar
mov
je
xchg
fcmovbe
fwait
cs
mov
pop
and
or
stos
add
cmp
adc
lret
jp
push
xlat
pop
in
iret
dec
dec
mov
mov
decl
xchg
cli
push
xor
add
icebp
loope
mov
or
jmp
sbb
pop
cli
push
xor
mov
neg
sahf
cmp
imulb
popf
inc
popa
std
addb
add
pop
jnp
loope
add
or
das
int
adc
sbb
xlat
inc
or
sahf
iret
test
pushl
repnz
jo
mov
jmp
mov
jp
inc
mov
or
lea
hlt
xor
lret
call
xchg
das
aad
int
inc
sbb
lahf
inc
shl
mov
mov
popf
das
ret
xchg
rcrl
jle
push
lahf
cli
scas
xchg
inc
cmc
sbb
ficoml
dec
sbb
mov
les
in
js
mov
mov
mov
jl
pop
mov
cmp
nop
and
insl
xchg
outsl
je
adc
xor
test
sub
dec
out
xlat
xor
test
pop
in
add
or
sti
idivl
xchg
push
stos
aas
sub
or
add
cmp
dec
push
call
cli
shrl
dec
lds
rcrb
jnp
xor
gs
hlt
insl
jb
mov
pop
mov
push
rorb
inc
loopne
xchg
lret
cld
imul
or
sbb
push
push
lea
mov
pop
add
jg
fsubr
pop
xchg
fnstcw
push
fstps
push
dec
sti
es
cs
add
sub
std
dec
push
sbb
add
jne
pop
jp
movsb
xlat
test
iret
push
clc
adc
int3
loopne
push
lds
dec
pusha
push
scas
mull
add
in
arpl
xchg
pop
pop
dec
loop
xchg
adc
mov
addr16
movsl
call
addr16
mov
gs
int3
push
mov
sbbl
dec
mov
sti
repz
test
or
shrb
loope
cmp
jbe
rol
sti
mov
idivl
imul
imul
test
mov
adc
lock
pop
xlat
out
in
imul
cmpl
jl
jmp
fdivs
pushf
sti
fildll
in
outsl
dec
scas
xor
xchg
or
pop
nop
inc
mov
loop
inc
mov
div
fcom
jae
mov
add
int
in
loope
stos
repz
push
movsl
lret
and
nop
into
addb
stos
daa
jae
cltd
cmp
jbe
jp
mov
loope
lahf
xor
shrb
out
pop
neg
xor
xor
jae
xor
xor
cmpsl
sbb
out
or
daa
xchg
cmp
push
dec
imul
jno
les
pop
mov
lods
nop
loop
mov
cwtl
jnp
and
out
rcrb
nop
ljmp
cmc
push
jle
fs
sub
or
cmpsb
adc
arpl
rcrb
add
jns
sbb
ljmp
lret
xchg
iret
es
aaa
adc
out
ss
imul
ds
mov
mov
js
in
std
or
imul
fmuls
fcmove
cltd
sub
test
dec
sbb
mov
jo
iret
test
mov
ljmp
pop
pop
sti
subl
xchg
adc
bound
mov
mov
not
push
mov
fcomp
cmp
loope
lock
xor
js
aaa
xchg
xchg
clc
xor
aaa
push
push
lea
dec
cmp
pushl
dec
push
insl
in
pop
rolb
xor
xchg
nop
sti
into
or
popf
inc
scas
aad
dec
test
cmp
xor
push
dec
dec
arpl
dec
fs
jmp
or
test
test
jmp
test
stc
jae
cmp
shrb
sahf
les
adc
mov
mov
int
dec
inc
add
cmp
add
pop
testl
dec
push
arpl
outsb
fisubl
sbb
mov
mov
repnz
inc
in
and
loopne
stc
push
in
xor
les
inc
mov
xchg
mov
icebp
or
repz
push
leave
addb
or
xchg
lock
stc
push
rcll
and
clc
sbb
xchg
mov
cmpsl
test
cli
sti
out
adc
dec
out
and
mov
sti
addl
in
jns
movl
push
mov
jne
jmp
ret
fs
les
ret
lret
je
outsb
jns
cwtl
mov
xchg
jmp
jb
incb
cltd
xchg
pop
jl
lcall
mov
push
fiadds
jge
gs
inc
imul
pop
jmp
mov
and
popl
rorl
jb
mov
push
add
ljmp
cs
sub
lods
mov
cli
inc
lea
int
mov
mov
xchg
movsl
cmp
fidivrs
ds
and
xchg
mov
outsl
xor
gs
addr16
sbb
pop
sahf
sub
hlt
iret
mov
out
inc
mov
mov
sbb
das
daa
ret
shlb
push
cmp
in
xchg
hlt
cwtl
xchg
pop
or
lret
pop
xchg
int3
dec
dec
sbb
stc
ljmp
js
inc
add
jb
dec
dec
imul
mov
mov
fisttpl
popa
call
mov
xchg
cmp
xchg
js
pop
gs
fisttps
daa
stos
negb
sub
dec
sub
xchg
in
cmp
xlat
or
addr16
mov
dec
or
xchg
call
mov
ljmp
pop
cmp
mov
adc
xor
arpl
in
iret
ret
inc
cld
ljmp
jge
add
dec
aam
ja
insb
ds
mov
mov
pop
sbb
popa
sbb
aas
fwait
add
pop
setae
cwtl
fwait
test
out
subl
leave
sbb
dec
mov
lret
out
out
inc
pop
das
jle
scas
sbb
cmp
push
fdivl
mov
cmp
shr
lods
ljmp
inc
adc
push
pop
stos
jecxz
sub
lret
push
cmpsb
clc
roll
cwtl
lret
cmp
out
sub
clc
push
push
test
insl
mov
std
fwait
movsb
inc
out
sub
in
roll
adc
xor
jno
je
cmp
stc
ret
stos
sbb
pop
std
mov
lods
arpl
popf
mov
mov
mov
and
inc
aas
pop
lret
push
ja
out
daa
es
and
or
and
addl
sub
stos
into
mov
ret
movsb
in
mov
dec
stos
adc
aam
lret
inc
out
shr
and
out
adc
int3
xchg
adc
sbb
repz
ljmp
mov
and
das
push
jg
and
test
and
inc
stos
repz
push
rclb
adc
rcrl
jnp
fs
popf
xchg
sub
addr16
iret
mov
adc
sub
or
lret
mov
insb
pop
addb
mov
xchg
pop
js
rcrb
push
add
inc
add
add
xor
pop
testl
scas
ja
dec
push
push
out
cmp
and
test
or
or
into
mov
xchg
push
test
dec
pop
push
jp
sub
outsb
jne
clc
push
icebp
sbb
sub
aam
fstpt
inc
repnz
aaa
movups
pop
iret
test
mov
dec
fdivs
sbb
cmp
push
jb
lret
pop
mov
test
add
sbb
ret
push
inc
stc
mov
or
insl
sub
in
sbb
aam
push
loopne
mov
lahf
std
push
orl
sar
arpl
bound
dec
push
and
imul
xlat
in
jl
addr16
mov
cmpsb
cmp
push
add
dec
pop
cmp
pop
add
add
cltd
mov
popf
lret
nop
cmp
in
es
pop
fcmovb
push
push
rorl
cmp
sub
out
fwait
call
mov
fmull
rcrl
popl
addr16
fwait
stc
cmp
ret
xchg
ret
arpl
dec
andb
push
in
rclb
cbtw
or
ret
jns
dec
iret
scas
or
stos
pop
cs
sub
es
lret
popa
faddp
mov
cmpsb
xchg
aas
das
push
push
fsubrp
or
mov
imul
insb
sub
and
mov
cld
call
es
mov
lods
into
in
pushf
mov
and
sarl
data16
add
ljmp
mov
inc
cltd
push
xchg
xchg
sbb
cmpsb
out
daa
or
inc
dec
or
cmp
xchg
push
adc
push
imul
clc
pop
imulb
sub
lods
cmpsl
rolb
subb
out
mov
cli
or
mov
cli
sbb
stos
dec
test
psubsb
cmp
int
jg
in
out
sub
push
jmp
lahf
lret
push
mov
sbb
inc
bound
sbb
into
xor
xchg
mov
pop
out
xchg
dec
xchg
cltd
push
push
lock
mov
mov
mov
sub
sti
test
scas
divl
pop
popa
xchg
adc
adc
or
in
insb
sub
xlat
clc
fwait
movsb
movsb
fidivrs
jo
pop
out
popf
and
sbb
sub
sub
mov
cmp
mov
xchg
gs
dec
adc
pushf
arpl
pop
dec
and
pop
xor
pop
adc
in
loopne
pusha
adc
inc
xor
dec
fsubl
roll
or
push
or
jnp
add
shl
ds
adc
iret
out
xchg
out
pop
or
sahf
imul
xchg
jae
lock
push
sub
insl
cmpsl
and
adc
sti
outsb
jmp
dec
jno
push
pop
mov
pop
cld
push
lock
xchg
pop
sahf
and
cwtl
cld
fcmovnu
cmpsb
lcall
jp
jp
xchg
mov
iret
jg
jb
push
xchg
add
sbb
sub
js
cli
mov
in
cmp
jmp
add
imul
jbe
cmpb
mov
mov
rcrl
pop
notb
int3
fisubs
loopne
fidivrs
push
add
loop
subb
shrb
clc
push
es
cmp
imul
cs
jmp
jle
cltd
pop
pop
ds
mov
cmp
sub
icebp
mov
aad
outsb
lret
stos
pop
pop
cs
dec
mov
mov
add
mov
inc
jne
nop
outsb
or
dec
ror
cmp
push
int
sahf
loope
add
add
pop
push
sbb
adc
cmc
add
sbb
push
into
xlat
stc
aam
sbb
adc
scas
fnstenv
xchg
mov
dec
pusha
btr
leave
and
sbb
or
adc
in
into
jg
and
mov
sub
out
enter
popa
xor
pop
sbb
fsubrs
push
loop
mov
mov
cmc
push
add
loope
orl
push
loopne
cmp
and
sbb
pop
and
fxch
cmp
mov
jmp
and
or
pcmpgtb
cltd
sbbl
sti
lds
jp
pshufw
movsb
repnz
mov
scas
stos
cmc
cld
imul
mov
jbe
fbld
mov
loopne
inc
mov
mov
xchg
pop
mov
or
xchg
faddl
sbb
pop
mov
mov
fimull
xchg
gs
aas
rclb
and
cs
leave
sbb
pop
mov
out
pop
pusha
sti
push
data16
xor
dec
mov
leave
stos
loopne
xchg
cld
popa
xchg
les
xchg
xchg
stos
lods
ret
movsb
adc
dec
add
jnp
and
loopne
lock
pop
sbb
dec
shll
mov
sti
stc
js
sub
ror
pop
jle
loope
lods
std
out
inc
adc
sub
dec
jne
sbb
imul
xorb
das
ss
movsl
jnp
add
adcb
in
cmp
rcll
push
clc
adc
cltd
xchg
fistps
out
popf
testb
jb
jb
les
outsb
and
loopne
push
icebp
lahf
mov
mov
cmp
mov
mov
and
movsb
loope
mov
and
add
push
subb
mov
rcrb
popf
outsb
pop
mov
mov
imul
pop
dec
xor
lret
je
push
ficompl
xchg
dec
frstor
cmp
fmul
in
jecxz
pusha
leave
push
mov
sarb
sub
pop
les
cmpsb
outsl
jge
ficoml
sub
mov
xor
xchg
inc
push
jbe
shll
cmp
negb
cs
outsb
movsl
sbb
mov
sbb
daa
cs
pop
in
mov
test
vpsubsw
leave
or
sbb
cltd
and
mov
movsl
mov
push
adc
cmp
les
test
aam
in
adc
dec
data16
mov
data16
addr16
movsl
pop
fldl
jecxz
popa
rcrl
iret
pop
movsb
fwait
imul
add
data16
mov
jmp
mov
lea
cmpl
dec
mov
xor
add
ret
repz
adc
mov
sub
cmp
pop
and
out
dec
xchg
loop
in
mov
lret
cmp
or
sub
pop
sbbl
out
pop
gs
add
or
cltd
cmc
rorl
push
ss
pop
mov
dec
mov
ret
jae
dec
ja
andb
jp
inc
test
push
adc
or
imul
adc
and
adc
ret
xor
jae
call
or
or
jae
imul
dec
xchg
cmp
mov
leave
dec
mov
push
mov
addb
jnp
int3
jle
mov
int
add
loop
ja
or
sub
test
jge
rep
sbb
xchg
dec
lret
mov
inc
push
and
pop
fmull
cmp
andl
lcall
imul
scas
out
lret
push
rorb
sbb
in
xor
insb
inc
xor
leave
push
pop
inc
cmp
xor
dec
push
dec
mov
loop
enter
imul
and
jb
jle
jae
daa
and
inc
scas
ds
jo
outsl
arpl
cmp
lret
inc
inc
mov
cmpsb
xlat
pop
dec
lret
mov
mov
push
cs
mov
jle
jo
jle
mov
cmp
xor
cmp
and
stc
cmc
out
or
sbb
enter
ja
inc
jne
add
or
jne
ret
or
outsb
icebp
icebp
sti
stc
loop
pushl
ljmp
stos
dec
lahf
or
in
loope
lds
insb
enter
outsb
sbb
and
jnp
jmp
mov
pop
rcr
mov
enter
sub
sbb
scas
enter
std
dec
mov
loopne
ljmp
daa
lret
fsubs
dec
adc
hlt
int
sub
push
cmc
fisttpll
pop
sti
xor
push
add
dec
shrb
sbb
mov
sarl
popa
repnz
out
add
sbb
out
popa
xor
mov
cwtl
rcll
pop
stc
lock
mov
shlb
pop
orb
rcrb
mov
jb
mov
subl
repz
popf
jge
popa
mov
lret
mov
sar
push
aam
jecxz
stc
and
and
sub
jp
xchg
mov
xchg
dec
ja
aas
push
inc
jbe
push
cs
xor
sbb
push
dec
notb
cld
xor
sbb
aad
dec
inc
push
jge
push
jne
das
cmpsl
and
adc
dec
fisttps
xchg
sahf
add
shlb
mov
test
cmp
cmp
and
lcall
cld
js
clc
test
inc
push
jbe
mov
outsl
jnp
ljmp
push
adc
add
push
push
add
movsl
mov
dec
je
arpl
add
in
fisttpll
fstpt
fsubr
jae
xchg
xor
scas
add
aad
xchg
and
xchg
lds
mov
lret
sbb
lahf
aaa
in
ficomps
lret
das
pop
xor
inc
adc
sub
dec
sbb
mov
xor
jmp
push
dec
mov
aaa
cmpl
jg
sub
cmp
scas
lcall
cltd
shlb
subl
insl
mov
mov
jnp
dec
dec
popa
aaa
int
out
in
xor
insb
loope
adc
jle
pop
imul
test
sti
pusha
add
or
sub
insb
lds
daa
cmp
push
push
in
mov
div
add
pusha
dec
sub
test
iret
jbe
xchg
mov
cmc
push
orb
addr16
outsb
popf
mov
cli
sub
test
fimuls
div
test
clc
aaa
outsb
icebp
mov
ret
and
inc
pop
sahf
mov
dec
mov
mov
sub
mov
mov
inc
sbb
cmp
push
jmp
adc
push
mov
cmp
loopne
xlat
adc
inc
cmp
nop
dec
and
hlt
outsl
xorl
out
xchg
and
fidivrl
xchg
sub
outsb
cli
and
push
mov
scas
push
mov
add
pushf
jno
add
js
jbe
pop
nop
popf
adc
movsb
xlat
outsl
sub
nop
adc
jnp
xchg
movsl
inc
adc
ljmp
xor
push
push
adc
outsb
dec
inc
mov
fldt
outsb
inc
and
mov
lahf
fs
lds
push
test
mov
dec
ds
mov
div
out
dec
dec
sbb
data16
aaa
icebp
cli
cltd
pop
int3
std
adc
mov
sbb
jg
rclb
inc
ss
fwait
movsl
cmp
fwait
cwtl
imul
lods
test
and
inc
xchg
inc
xchg
xor
inc
mov
adc
pop
push
mov
es
inc
xor
mov
xor
shll
dec
add
or
sub
xchg
cmp
ss
fisttpll
add
xchg
jnp
mov
cltd
sub
fildl
pushf
push
loope
ret
insb
jge
xchg
add
iret
inc
and
sbb
jbe
mov
xor
inc
pushf
adc
je
push
shrl
addb
add
or
popf
adc
add
lock
cmpsb
pop
adcl
mov
test
cmp
subl
sbb
jo
mov
daa
dec
jns
push
xlat
nop
data16
jo
and
lods
push
nop
sbb
mov
push
and
sub
fistps
loopne
out
dec
aad
jmp
mov
cltd
push
orb
jg
pushl
dec
mov
jecxz,pn
push
xor
xchg
lds
dec
ds
fdivrl
les
mov
fmull
clc
stc
das
sbb
xor
mov
sbb
or
arpl
movsl
aas
lock
es
leave
pusha
push
jns
ljmp
push
fnstcw
jmp
out
icebp
fimuls
add
and
in
sub
pushf
fdiv
sbb
ret
mov
mov
loopne
push
cmpsb
mov
xchg
xchg
idivl
stos
add
adc
ja
or
out
push
test
test
lea
jb
sbb
sbb
and
pop
xchg
out
andl
test
movb
or
outsb
fstpt
lahf
adc
loopne
dec
out
mov
mov
xchg
jns
fcomi
scas
or
lods
mov
aam
and
in
push
xor
or
mov
lcall
jle
sub
inc
jns
imul
aam
mov
in
or
fistpl
scas
fcmovnbe
pop
xlat
pop
pop
clc
inc
cmpsl
xchg
and
pop
lahf
insb
push
mov
lock
inc
xchg
pop
mov
xchg
andl
popf
adc
in
ret
sub
and
es
adc
dec
es
lea
xchg
fldcw
cld
or
dec
das
loop
sbb
repz
insb
lahf
test
xor
nop
or
neg
rolb
or
cli
jecxz
lock
loop
jle
cli
xchg
xchg
push
pop
sbb
jnp
dec
mov
std
and
push
inc
sub
cmp
sub
push
nop
out
js
cld
add
sbb
jns
pop
dec
push
lock
cmpsb
and
and
push
and
sub
rcll
mov
push
jmp
dec
insb
bnd
sub
inc
pop
sub
mov
and
mov
fmull
add
jmp
jmp
pop
imul
mov
movsl
mov
add
xchg
push
mov
shll
sub
fsubp
imul
cmc
push
repz
sbb
movsb
icebp
fprem1
out
mov
lahf
mov
and
repnz
cmp
call
aaa
xchg
dec
fwait
lcall
mov
or
inc
push
aad
ljmp
bound
and
inc
dec
ljmp
ficomps
sbb
mov
mov
cmp
dec
or
in
hlt
roll
cld
adcl
fistpll
iret
je
ljmp
into
fwait
adc
icebp
scas
xchg
jne
push
jl
mov
or
loope
sar
xchg
mov
push
adc
loopne
mov
push
sarb
aam
bswap
mov
jmp
mov
cwtl
fstpl
lcall
push
mov
inc
jnp
dec
hlt
in
dec
je
cmp
cmpl
lods
std
cmp
ds
aas
aad
shll
cwtl
mov
inc
xor
scas
xor
out
shlb
iret
mov
cld
and
aaa
enter
out
and
mov
mov
inc
shrb
jp
mov
sbb
sahf
or
push
mov
add
add
pop
mov
pop
ret
push
jnp
cmp
roll
mov
pushf
insb
scas
lods
loope
cmc
push
sbb
mov
and
lret
or
ja
loope
imul
js
mov
pop
daa
mov
andl
or
loopne
inc
xchg
and
push
push
call
call
aaa
pop
mov
outsl
es
inc
rcl
cmc
movsl
mov
add
jp
jnp
rcrb
jmp
dec
xlat
adc
rorl
jo
sub
cmp
xchg
fldenv
rcrl
ja
pop
pop
arpl
loope
popf
mov
dec
out
mov
cmc
mov
out
bound
mov
inc
rol
inc
jne
imul
ja
push
je
shrb
sub
ror
sahf
dec
aad
rol
fdiv
ss
jp
int3
dec
jns
flds
sbb
cli
mov
shrl
mov
popl
mov
imul
out
lods
mov
mov
fdivrl
adc
push
xor
hlt
pop
sarb
push
sti
push
cs
in
push
rcll
outsl
jo
and
mov
lods
xor
daa
shlb
inc
sbb
in
xor
cmp
outsb
imul
dec
stos
cs
cmc
dec
mulb
movsl
fcompl
shlb
jmp
pop
out
in
ljmp
je
lcall
xchg
pop
lock
clc
lock
jle
inc
jns
hlt
aam
test
inc
pop
pop
dec
pop
push
cs
xchg
cmc
gs
pop
int3
mov
rcll
cmp
push
iret
mov
pushf
stc
je
xchg
jmp
rorb
cmp
dec
inc
cli
into
or
sbb
scas
ror
pop
mov
pop
gs
mov
cmpsl
aad
and
lahf
push
sbb
icebp
in
add
cmpsb
sti
and
in
gs
sub
ja
xor
cmp
scas
adc
add
adcb
cmc
pop
ffreep
mov
scas
gs
stos
inc
mov
xchg
xchg
inc
repnz
sbb
mov
inc
repz
loop
push
mov
lea
or
xor
or
in
push
test
sub
push
xor
mov
xchg
mov
pushf
int3
stos
hlt
movsb
iret
movsl
cmp
lret
cmpsl
sbb
xchg
outsb
adc
in
and
lock
pop
dec
hlt
mov
das
pop
lea
and
add
add
out
adc
add
jp
popf
jb
imul
add
or
sbb
icebp
cmp
lcall
xor
push
stc
pushf
push
fisubs
xchg
es
jge
negb
push
loopne
je
insb
dec
dec
sbb
dec
orb
sbb
cmpl
dec
add
ljmp
mov
nop
pop
mov
inc
sub
dec
mov
fdivs
or
mov
cmp
dec
and
sbb
inc
faddl
fildl
repnz
leave
jl
jae
and
nop
jle
jecxz
or
mov
jae
iret
adc
adc
add
mov
scas
and
push
and
xchg
mov
pushf
mov
jmp
push
inc
ret
imul
fmuls
cmp
mov
jnp
cmp
xchg
fs
sub
pop
out
mov
inc
inc
pushf
jle
mov
jne
push
push
movsb
sbb
adc
inc
add
jmp
pop
mov
dec
push
pop
mov
int
mov
and
or
int
push
loope
adc
cmp
aad
or
lahf
mov
lea
shrl
popf
movsb
xor
pop
filds
hlt
cmp
leave
jmp
mov
jbe
mov
gs
out
adc
popf
mov
movsl
xchg
jns
jg
int3
aad
ljmp
push
inc
test
pop
inc
lods
pop
jmp
roll
push
inc
xchg
stos
sub
fsts
movsl
scas
ds
rcr
dec
fwait
repz
push
into
sbb
movsb
in
jbe
int
lock
scas
jl
popa
sahf
sub
stc
rcll
lret
xor
cwtl
jnp
push
xchg
fisttpl
adc
mov
mov
fwait
push
rcrb
push
sub
movsb
fdivrp
bound
movl
sbb
bound
int3
fwait
cld
jne
dec
mov
dec
cmp
and
mov
mov
fldl
lods
ret
inc
push
inc
pop
mov
sub
sbb
loopne
repz
rcrb
bnd
xchg
les
xor
leave
mov
rol
jb
rcr
stc
out
cmp
and
aam
mov
sbb
xchg
out
mov
je
cmp
call
repz
xor
jno
pop
push
mov
adc
pop
mov
fnstsw
sub
xor
mov
iret
mov
addr16
cld
out
push
clc
faddl
push
xorl
cmp
fsubs
and
popl
fisubrs
rcrl
or
pop
or
pop
adc
and
mov
jl
lds
mov
das
int3
add
mov
mov
inc
lock
mov
jle
ljmp
and
aam
loop
mov
movsb
outsl
lret
push
cmp
aam
sub
mov
adc
pop
movb
xlat
fnstsw
popa
jl
sub
test
mov
fs
push
mov
cmp
cmc
test
cmp
add
xchg
or
out
jae
add
out
dec
and
mov
popf
mov
loopne
ficomps
or
js
imul
lahf
gs
add
push
movsl
fisubl
movsl
fildl
rcll
ret
push
mov
scas
fistps
lods
jbe
cmpsl
jno
inc
xor
inc
dec
pushf
jnp
or
ret
cmp
jae
out
dec
push
sbb
xchg
ljmp
jb
lds
mov
sti
cmpsb
xchg
inc
xor
dec
add
lahf
xor
movsl
test
ret
sbb
jp
jne
add
aam
sbb
les
ret
lods
jg
pusha
addb
movl
or
out
fisubrl
sahf
dec
xchg
push
xchg
aas
pop
and
mov
loopne
shr
and
ret
add
in
pusha
dec
sub
jle
insb
xor
rcr
cltd
in
stos
pushf
and
repnz
fbstp
cmp
out
out
sbb
data16
or
in
pushf
add
jno
xor
mov
pop
test
lods
fiaddl
cwtl
call
mov
icebp
push
shr
fsubrl
xchg
add
lea
insb
push
mov
sbb
test
or
loope
arpl
inc
mov
int3
xchg
cmp
dec
stos
cwtl
jnp
dec
pop
ret
dec
pop
lods
inc
push
nop
push
cmp
xchg
add
cmp
xlat
mov
sub
out
xor
xchg
push
dec
imul
repnz
repnz
jl
cmp
std
inc
gs
mov
lcall
movsl
pushf
ret
ret
ds
add
cmc
xor
pusha
xor
sbb
mov
dec
push
dec
insl
test
ljmp
out
dec
std
push
imul
outsl
adc
sar
pusha
push
adc
mov
iret
xchg
push
cltd
into
or
imul
das
mov
cmp
repz
jno
fsubp
push
lcall
aad
mov
mov
mov
outsl
test
into
push
jecxz
and
js
in
nop
fiadds
pop
push
xor
jno
xchg
aam
std
jge
mov
sbb
sub
pop
mov
lea
sub
xchg
scas
test
pop
jecxz
ss
call
cmp
pop
loop
ds
lcall
movsb
imul
cmp
add
movsl
pop
aad
sbb
jbe
push
les
test
lret
ret
nop
pop
fisubl
cmp
faddl
clc
or
push
pop
outsl
out
push
adc
mull
sbbb
sbb
push
enter
int3
xchg
cmp
push
jbe
sub
shlb
aam
cmpl
cmpsl
cli
fidivs
inc
mov
cld
jl
push
lret
imul
adc
lds
mov
je
daa
int3
pop
inc
dec
and
addr16
mov
fcoms
leave
inc
or
cwtl
fstl
fs
push
pop
loopne
mov
and
in
push
lods
popf
test
test
adc
lret
cld
and
and
subl
pop
outsl
outsl
adc
insb
int3
xchg
pop
mov
mov
push
neg
mov
cltd
inc
in
mov
pop
outsl
ret
inc
clc
cli
cmp
mov
mov
and
lea
cltd
outsb
cmp
and
dec
and
in
je
mov
lea
mov
adc
mov
pushf
inc
out
fdivl
xor
arpl
mov
mov
in
push
and
fistl
lds
xor
popa
xor
push
jg,pt
mov
xor
push
mov
faddl
adc
add
ljmp
mov
push
xchg
inc
cltd
xchg
pop
lcall
or
outsl
pusha
cmpsl
jp
fs
pop
fcmovnu
bound
mov
cli
rcrl
mov
dec
fs
cmpb
fadds
xor
cmp
add
cmp
add
xchg
pushf
rcll
add
or
xor
xor
or
sub
jecxz
xchg
fcmovu
loopne
or
dec
pop
stc
js
adc
sti
sub
adc
lea
ficompl
push
jge
jo
xchg
nop
mov
roll
cmpsl
pop
imul
icebp
adcb
sti
cvtdq2ps
ja
ja
orl
push
add
mov
test
inc
into
push
fidivrl
pusha
enter
jbe
mov
mov
imul
out
inc
cmp
xchg
movl
lods
inc
pop
xor
loopne
int
and
iret
pop
lret
or
push
aas
mov
dec
or
mov
aad
sub
mov
pop
add
xor
fstps
push
sub
lock
xchg
mov
call
arpl
imul
sbb
xchg
jmp
int3
js
jae
bnd
je
insl
scas
lods
clc
repnz
jmp
movsl
subb
xor
xlat
push
mov
int
jae
pop
pop
fsubr
sub
fistpll
cwtl
test
sbb
add
pop
test
jmp
das
push
lods
sbb
or
and
xor
icebp
pusha
sbb
mov
pop
mov
sub
in
and
pop
inc
ficomps
das
cmp
push
add
test
fs
and
clc
inc
inc
xchg
aam
jp
mov
rol
push
mov
pop
pop
jmp
sbb
xchg
adc
int
adc
cs
and
jne
adc
fadds
outsl
xor
push
aaa
push
mov
mov
jne
pop
daa
and
or
mov
inc
test
fstps
cmp
pushf
in
lods
mov
mov
cmp
lahf
in
and
sbb
xchg
or
sbb
ret
jl
add
sahf
mov
mov
stc
adc
sahf
pop
js
cmp
scas
and
lret
mov
jecxz
and
inc
stos
mov
dec
fwait
cmp
cmpsl
add
imul
sbb
popl
dec
push
push
lods
shlb
cmp
dec
arpl
push
jg
cmp
push
jle
sbb
mov
and
les
add
cmp
jecxz
lret
sarl
movsl
movsb
xorb
adc
dec
cmp
sub
mov
scas
adc
pusha
into
xor
mov
mov
pop
inc
inc
or
inc
orb
cmp
or
shl
outsl
cltd
jl
test
bound
stc
jl
imul
repnz
adc
adc
sti
mov
pop
mov
inc
cs
test
xchg
adc
inc
or
bnd
cli
andb
adc
insb
lock
or
cmp
push
inc
fcoml
inc
pop
jp
inc
xchg
mov
dec
popf
shr
jge
shl
enter
sahf
addr16
fiadds
sbbl
jl
shlb
cmc
add
ds
xchg
lods
push
fwait
cmp
mov
pop
mov
div
test
into
sbb
fisttpl
jne
mov
rcrl
mov
lret
test
add
mov
mov
inc
fsubl
jp
jno
loop
add
pop
rolb
push
aam
stos
scas
sahf
lret
dec
rorl
push
xor
loope
cmpsl
mov
pop
mov
push
mov
cmc
clc
adc
sub
jg
clc
inc
stos
ljmp
sbb
je
enter
sbbl
cltd
jle
lahf
sbb
xchg
out
testl
add
push
fisttps
fbstp
or
mov
pop
adc
fadds
cmc
std
jno
xchg
dec
and
jecxz
jnp
popf
cmp
popa
aas
andl
aam
mov
dec
outsl
xchg
pusha
xchg
loopne
repnz
test
stc
cmp
sarl
xlat
subps
lock
mov
or
cmp
push
jle
mov
lcall
dec
cmpsb
or
push
mov
mov
pop
cltd
mov
enter
xor
stos
adc
xchg
in
out
fildll
dec
inc
popf
push
outsb
push
sub
xlat
sbb
mov
sbb
dec
xchg
in
pop
cmp
xor
scas
inc
fnstsw
leave
inc
scas
repz
and
stc
jns
sub
cwtl
ja
cli
sbb
sahf
leave
add
cmp
jl
sbbl
jmp
and
xor
nop
fsqrt
xor
dec
mov
xor
and
xor
ret
ret
xor
inc
pop
sahf
scas
jmp
inc
rcrl
mov
aad
push
sbbl
or
dec
inc
cltd
lret
loop
jp
jae
mov
lcall
mov
repnz
mov
repnz
jmp
mov
das
outsl
test
push
jns
daa
jecxz
mov
ss
out
xchg
cltd
cmp
adc
fisttps
dec
pop
ret
cmp
dec
movsb
mov
cmpsb
and
aad
cmp
fstps
es
lret
cs
and
jo
and
dec
xor
add
and
inc
push
xchg
mov
sbb
icebp
mov
inc
xchg
mov
ja
push
lds
sub
adc
iret
cmpsl
inc
lods
popf
push
mov
gs
sub
idivl
add
or
or
add
xor
rclb
cmp
add
mov
xchg
pop
sahf
frstor
fprem1
add
enter
push
lret
inc
aaa
loope
sahf
adc
outsb
or
call
adc
movsb
inc
lock
and
cmp
ret
or
std
das
cmpsl
dec
xor
xchg
inc
or
dec
cmp
movsl
cmpsb
stos
jp
mov
out
repnz
les
mov
and
mov
movsb
icebp
std
xchg
into
inc
pushf
loope
jnp
push
inc
push
ja
mov
mov
pop
cmp
push
push
xchg
loop
add
sarb
xchg
cli
test
mov
imul
gs
adc
inc
outsl
pop
in
cltd
adc
jns
sbb
rcr
inc
ret
or
ffree
std
mov
jle
mov
out
enter
mov
ret
lea
xorb
and
adc
mov
dec
pushf
add
mov
xchg
ret
push
stc
enter
or
aas
ds
in
leave
lods
iret
sub
pop
cwtl
and
sbb
mov
aad
pop
mov
sbb
scas
stos
mov
sbb
rcll
push
push
jle
movsb
out
jecxz
pushf
mov
ja
imul
cmp
lret
mov
lret
push
test
jl
shrb
les
jns
cltd
inc
inc
push
xchg
sub
mov
rcll
jnp
jno
cs
inc
mov
mov
mov
idiv
je
xor
and
xlat
xchg
mov
loop
ret
adc
popf
ja
add
or
push
xor
stos
mov
jb
mov
clc
push
lds
xor
add
insb
test
xor
jecxz
rorl
mov
mov
rorl
dec
mov
cmp
inc
xchg
popf
jne
inc
cltd
push
sub
insl
imul
xchg
or
push
cmpsb
add
aas
divl
subb
cli
icebp
mov
cmp
in
push
push
push
daa
in
xchg
int
and
push
xor
pop
mov
nop
mov
ret
push
pop
and
cwtl
test
adc
cmp
scas
test
mov
popf
jg
sub
inc
incl
mov
sbb
jg
out
sbb
mov
sbb
and
out
push
and
xchg
out
adc
lock
xchg
xlat
and
and
mov
ret
in
mov
push
insb
mov
sahf
decb
ss
push
inc
lods
add
xchg
jo
out
ss
mov
mov
fisttpll
les
es
addr16
sbb
int
inc
mov
int
cmpsl
mov
push
in
mov
or
nop
or
mov
mov
test
into
pop
sub
xchg
lahf
xorb
mov
push
xchg
push
mov
dec
xchg
adc
lods
filds
jo
sub
sub
test
sub
xchg
pop
pop
scas
pop
lods
ja
jmp
dec
fwait
and
inc
hlt
and
mov
push
ja
xchg
jge
test
xor
sub
fcmovnbe
add
pop
fs
adc
ljmp
xor
icebp
sar
out
aam
xchg
jb
cmp
into
js
repz
fwait
bound
adc
lods
dec
fwait
dec
arpl
fcoms
inc
adc
shll
push
sahf
ja
mov
sbb
out
call
adcl
in
xor
mov
cltd
pop
loopne
int3
sbb
stc
xchg
scas
pop
jecxz
aad
push
adc
inc
push
shrl
aad
popf
roll
push
mov
jl
pop
xchg
sub
lret
sub
inc
jmp
rcrb
iret
mov
xlat
or
or
adc
mov
ds
sahf
loopne
and
pop
sbb
dec
mov
test
aaa
lcall
out
jno
add
mov
pop
fisubrl
js
enter
fildl
or
mov
sar
or
dec
inc
iret
push
rcr
popa
dec
mov
sti
cmpsl
pop
in
mov
sahf
pop
pushf
push
scas
inc
outsl
pop
shll
punpckldq
clc
xchg
add
mov
cmp
sti
or
and
sti
cmp
push
in
paddusw
mov
gs
lods
mov
repz
fidivrl
and
xor
cmp
inc
std
push
outsb
mov
mov
and
rcrl
jecxz
lock
sub
hlt
leave
push
adc
loop,pt
inc
pop
jae
shrb
pop
and
movb
mov
or
lds
pop
and
cltd
gs
fistl
cmp
scas
icebp
sub
or
push
std
cmp
adc
mov
stc
xchg
test
sub
cmpsb
adc
insb
mov
testb
xor
stos
lods
mov
jmp
inc
popf
dec
jbe
dec
jne
jb
push
fsubs
jb
xchg
push
leave
pusha
jnp
imul
add
mov
testb
dec
add
movsb
inc
lcall
gs
in
dec
in
icebp
mov
pusha
dec
pop
roll
ljmp
ja
ja
jno
pop
stos
out
or
or
pop
aas
push
pop
push
xchg
cmc
cmc
adc
sbb
cmp
cli
dec
sbb
mov
mov
outsb
mov
xor
rclb
jge
dec
lret
mov
testb
loope
jns,pt
mov
pop
and
sub
insl
adc
into
cli
in
dec
mov
gs
lret
les
pop
mov
pusha
stc
fldt
or
js
xchg
int
pop
cmp
rol
sub
movsl
push
xor
xchg
mov
sti
scas
cli
pusha
mov
imul
popf
cltd
adc
mov
aad
loopne
pop
inc
int3
js
out
xchg
sub
shrl
sbb
jnp
js
aaa
cmp
data16
arpl
dec
rcrb
pusha
js
sti
mov
sub
jecxz
lds
sub
adc
out
dec
jae
arpl
mov
sub
out
lcall
mov
fcmovnu
jmp
lret
inc
mov
or
jmp
cmp
sub
shll
dec
mul
jb
push
jl
inc
subb
adc
push
aaa
outsl
or
fistps
incl
mov
mov
in
inc
or
icebp
jl
lock
and
mov
ja
jb
mov
mov
lea
icebp
push
xchg
rorl
adc
hlt
idivb
dec
mov
and
mov
cld
cmp
outsb
or
in
mov
insl
mov
jbe
lods
decl
je
daa
cwtl
xorl
into
adc
lea
rcrl
xchg
mov
push
lret
dec
pop
and
movsb
fnstenv
int3
mov
push
ja
mov
sub
pop
mov
sbb
mov
xchg
jg
mov
push
or
xlat
jae
hlt
fildll
push
je
push
adc
loopne
enter
dec
push
ret
jl
jne
ret
cmp
stos
fisttpll
mov
out
inc
je
bound
adc
loope
and
mov
pop
pop
push
out
test
push
cltd
jmp
or
push
inc
xor
sub
mov
insb
loop
and
adc
mov
outsb
repz
jb
cmp
sarb
push
ja
jns
push
leave
mov
mov
imul
daa
sbb
pop
leave
fbstp
cmpsb
xchg
nop
push
xor
cs
bound
mov
fs
rcll
adc
inc
or
inc
popa
imul
adc
mov
jl
xchg
insb
mov
test
xchg
stc
aam
std
stos
iret
fs
inc
inc
cli
lret
mov
test
mov
inc
aam
cli
lret
pop
push
cld
xor
push
sub
in
and
pushf
adc
call
in
arpl
js
inc
cmp
dec
notb
dec
ja
xchg
loopne
in
adc
push
xchg
cmp
pop
testb
imul
pop
popa
dec
mov
aaa
int
push
and
push
pop
scas
mov
inc
adc
pop
ja
mov
ret
and
and
mov
mov
test
fwait
cmp
and
jg
push
repz
cmpsb
pop
scas
aaa
sarb
mov
adc
sti
es
inc
hlt
push
cmp
xor
aaa
popa
mov
icebp
inc
jl
cmp
insb
inc
ja
dec
inc
lcall
jo
push
cmp
aas
stc
outsb
enter
into
adc
cli
int3
sbb
sub
enter
mov
xchg
inc
mov
inc
pushf
add
aas
mov
leave
inc
mov
cld
lret
sub
popa
push
adc
xchg
in
test
and
jnp
insl
js
cmp
cmp
mov
sbb
movsl
sbbl
enter
gs
call
shll
cmp
test
ljmp
add
pop
and
jmp
pop
mov
jns
lret
inc
push
jmp
jg
dec
sbb
pop
pop
pop
arpl
pop
mov
mov
and
das
andl
enter
or
cmp
inc
ret
inc
xchg
jnp
shr
mov
or
cmp
cwtl
push
sub
aad
pop
int
inc
pop
cmp
or
lods
repz
xchg
fdiv
xchg
inc
push
xor
data16
lcall
stos
nop
sti
movsb
cmp
mov
and
cwtl
add
sub
aas
fnstsw
int3
sbb
push
addr16
pop
out
dec
push
mov
daa
push
pushf
push
cmp
cli
cltd
xchg
stos
cmp
divl
sub
jbe
mov
pushf
mov
push
dec
adc
inc
das
punpckhwd
add
iret
ja
ficompl
adc
ja
sub
adc
adc
sub
pop
adc
gs
xor
jbe
jns
jns
and
loopne
xor
mov
lret
enter
sub
pop
sub
sbb
cs
enter
lahf
pop
adc
and
cmp
lods
push
pop
xchg
mov
add
inc
push
mov
repnz
mov
inc
out
scas
pop
cmp
enter
dec
jo
ficompl
adc
push
andl
nop
push
adc
dec
push
xor
mov
cltd
push
ror
ret
mov
dec
arpl
cwtl
mov
cmc
dec
test
mov
test
xchg
jns
adcl
inc
jb
cltd
popf
pushl
xchg
mov
sbb
mov
out
cmpsb
push
jns
js
cmp
jno
push
stc
mov
jae
pop
ljmp
mov
fdivp
mov
pop
jl
ret
push
aas
cmpsb
or
out
sti
mov
ljmp
sub
sub
push
filds
adc
bound
push
sbb
dec
das
jae
addr16
push
addr16
cmp
push
xor
xor
mov
push
stos
or
mov
add
jbe
icebp
push
cmp
sub
mov
incl
out
or
nop
jg
imul
xchg
adcb
loop
mov
push
sub
repnz
imul
adc
call
std
test
add
xchg
mov
inc
jae
jl
js
cmp
lock
add
int
push
fidivl
lahf
push
xchg
jle
aaa
inc
cmp
cmp
cwtl
add
inc
out
inc
mov
jle
mov
aam
inc
in
and
leave
pop
mov
pushf
call
mov
mov
or
clc
pusha
mov
sti
inc
aam
rolb
fwait
sbb
push
mov
nop
pop
pop
and
pop
and
push
xchg
or
in
cmpsb
sbb
push
mov
fnstsw
sti
dec
and
pop
cli
clc
test
adcl
push
imul
push
repz
jbe
xchg
icebp
das
fildll
pop
mov
dec
pop
fcoml
lret
pop
xchg
pop
dec
xor
lea
imul
jne
jg
jle
and
add
insb
push
popa
and
push
push
stos
adc
lret
repz
mov
mov
adc
lret
mov
pop
out
xchg
jge
dec
rolb
xchg
sub
push
sub
daa
outsb
xorb
dec
sbb
cmp
stos
mov
add
divl
pusha
xor
shrl
dec
repnz
orl
jo
sahf
clc
mull
xor
push
fcompl
pushf
imul
pop
cmp
lret
cmc
jno
mov
lock
test
xchg
jbe
js
addb
lea
lds
pop
jo
mov
mov
cmp
push
jb
xchg
cmp
js
pop
roll
or
push
dec
cmc
in
push
inc
cmp
inc
jae
and
icebp
out
mov
mov
repnz
iret
outsl
mov
icebp
sbb
pop
cmp
pop
mov
lea
or
ret
inc
sub
lahf
das
pop
cli
cltd
cmp
in
mov
pop
sti
ficompl
mov
lcall
and
and
and
mov
jbe
or
cwtl
cli
adc
lret
add
or
fstl
push
jp
orb
xchg
xor
lret
sbbl
fidivrl
icebp
adc
sub
ret
fcoms
add
bound
fldenv
mov
add
call
jmp
mov
mov
pop
scas
out
imul
mov
or
cmp
push
mov
adc
fcoml
movsl
enter
xor
pop
pop
pop
dec
and
loopne
and
rolb
aas
mov
jg
xor
aas
in
lea
gs
out
insb
jns
xchg
push
ss
ss
adc
daa
movlps
unpcklps
repz
sub
or
and
push
ret
lret
inc
shr
mov
test
je
out
xor
jbe
out
add
dec
call
das
sti
sub
push
pop
rorl
jle
rcrl
loope
lret
push
push
jecxz
push
mov
jg
gs
daa
cmpsb
push
in
repnz
xchg
jp
scas
les
xor
and
test
inc
insb
mov
lret
mov
ja
xchg
jbe
in
mov
xor
push
xchg
jmp
aaa
push
and
add
das
mov
stos
xchg
inc
pushf
add
aad
sub
outsl
mov
pushf
or
xchg
sub
push
int3
ds
jae
sub
movsb
insb
sbb
push
lea
inc
outsb
cltd
cmp
stos
dec
xor
sub
movsb
outsl
fwait
sbb
sbb
popa
cltd
or
dec
ds
out
icebp
test
out
ljmp
repnz
paddd
addl
stos
pop
mov
scas
test
push
mov
jo
xchg
xor
addb
mov
xor
stos
mov
fsubs
cwtl
pop
out
insb
xchg
arpl
push
mov
pop
sub
and
rclb
inc
nop
lea
dec
inc
dec
nop
lods
sbb
xchg
add
cmpsl
mov
repz
imul
ljmp
cwtl
cmp
sti
jb
in
shl
pop
mov
or
pop
aas
jmp
mov
fstps
lock
lods
inc
js
ds
arpl
sub
mov
push
pop
into
cmp
lds
lock
dec
jmp
sti
cmpsl
mov
sbb
and
add
pop
adc
std
mull
dec
notl
arpl
out
and
daa
sbb
hlt
popf
imul
clc
mov
fnsave
and
pextrw
rorl
jo
jb
notb
cmpl
adc
xor
add
or
xchg
push
add
out
inc
stos
das
sbb
ficoms
out
jae
call
jae
mov
test
loope
cli
jne
rorl
xchg
sbb
or
cld
and
cmp
mov
out
stos
out
inc
cltd
xchg
push
test
scas
xchg
addr16
jecxz
push
or
lret
pop
je
roll
scas
mov
shr
xchg
jmp
dec
movb
cli
arpl
jbe
mov
mov
inc
ds
pushf
cmp
stos
pop
mov
mov
mov
inc
decl
and
xor
dec
out
push
dec
ss
pop
push
leave
repnz
inc
mov
fists
in
leave
popf
pop
test
imul
push
xchg
and
outsl
out
sbb
or
jne
out
push
pop
sbb
mov
aaa
repz
xor
adc
mov
repz
mov
leave
xchg
lea
cmp
xchg
stos
push
xor
leave
cmc
adc
push
pop
cmp
inc
fwait
adc
clc
sub
inc
stos
popa
sbb
outsl
scas
fwait
push
in
aam
inc
test
pop
ret
shlb
push
in
xchg
lods
inc
push
fxch
pop
mov
stos
in
dec
mov
fldcw
adc
sbb
and
or
push
imul
into
aad
and
cld
sahf
jge
mov
data16
mov
pusha
xchg
addr16
daa
int
inc
lahf
call
or
orl
xor
cmp
pop
inc
mov
ret
aas
sbb
rcrl
dec
das
mov
xor
popfw
fcomps
fistpl
push
stos
cmp
jo
dec
or
xchg
stc
pop
push
lahf
dec
adc
ret
clc
mov
dec
cli
mov
pop
repnz
pop
adc
mov
push
adc
and
xchg
pop
adc
stos
les
rcrb
movhps
xchg
xchg
std
mov
pop
jmp
cli
repz
mov
jne
cld
inc
iret
in
imul
sub
dec
negb
icebp
jmp
bound
sub
test
sub
mov
mov
sti
jbe
pop
or
add
jae
dec
sbb
xchg
xchg
adc
add
cmp
stc
mov
aam
call
jmp
mov
fadds
daa
xchg
lahf
xor
jne
inc
dec
push
xchg
cmp
orb
fcoml
xchg
sub
aam
pop
mov
jb
pop
pushf
aad
lock
out
adc
sahf
mov
sbb
iret
mov
outsb
int3
lds
pop
lret
test
jne
and
loop
inc
inc
mov
fdivr
orl
out
enter
loopne
sub
jo
ds
dec
out
cld
jl
aas
popf
stos
stos
lcall
jg
adc
mov
xchg
loopne
mov
mov
sbb
sti
fbld
cmp
mov
pushf
stos
mov
ljmp
add
or
jno
add
fs
testl
rolb
mov
aad
fdiv
movsb
insb
mov
mov
adc
mov
cmp
and
xchg
adc
or
sahf
xor
aad
popa
cltd
btr
pushf
add
push
and
sarl
mov
and
and
mov
orl
inc
mov
cmpsb
inc
mov
scas
xchg
es
mov
insl
xor
addr16
fsubr
push
shlb
mov
xchg
stc
adc
jne
out
and
mov
inc
insb
sub
ret
stos
xchg
outsl
and
push
and
xchg
pop
sahf
arpl
dec
test
jb
int
xlat
aam
or
das
incb
xchg
scas
loop
inc
sbb
cmp
xchg
leave
out
sbb
in
add
fiadds
outsl
loopne
jmp
push
pop
stos
pushf
xchg
cmpsl
mov
fsubrl
mov
gs
inc
sub
adc
xor
xor
adc
andb
xor
xor
sarl
test
inc
xchg
les
sbb
fwait
pop
fnstsw
jbe
dec
sbb
cld
add
sub
adc
lds
out
xorb
or
inc
fisubl
iret
fists
popf
xor
fwait
outsb
js
in
mov
pop
sub
mov
mov
stos
sbb
imul
outsb
rclb
test
fidivrs
dec
lds
loope
jle
in
out
pop
shrd
shl
iret
and
and
jle
test
or
mov
or
jo
mov
or
pusha
sub
int
mov
roll
lret
decb
lahf
lea
sbb
outsb
sub
xchg
ret
sub
orb
sbb
ds
sarl
sti
popa
xorb
shlb
push
dec
dec
xchg
popf
adc
inc
jno
sub
sbb
pop
fs
pop
loop
xchg
stc
xchg
stos
cmp
gs
cmp
bound
dec
mov
outsb
dec
pop
sti
push
mov
mov
jo
cmp
push
and
sub
xchg
or
mov
adc
pushf
or
push
sbb
push
pop
pop
pop
lcall
or
or
adc
out
sub
outsl
pop
inc
push
xlat
lahf
dec
inc
mov
add
ret
stos
lea
jo
add
add
insb
xchg
aad
lods
xchg
jbe
and
cmp
or
mov
adc
std
cld
jnp
lods
mov
inc
ret
cli
cwtl
cs
dec
mov
cwtl
xchg
fmul
loop
div
mov
mov
add
insb
dec
push
stos
inc
cltd
xchg
adc
push
jb
outsb
xchg
jno
lret
das
adc
push
addr16
push
xor
shlb
clc
jecxz
mull
cmp
sbb
cs
cmpsl
imul
pop
gs
inc
call
mov
outsl
and
sti
pop
xchg
xor
push
mov
and
arpl
fxch
push
fstl
testb
xor
lahf
jb
sub
imul
jno
fidivl
cmp
scas
stos
aam
cltd
cmp
call
cmpsb
push
mov
mov
clc
jmp
aaa
into
ja
xor
icebp
push
jbe
push
rol
mov
add
mov
mov
mov
repz
inc
adc
dec
mov
lea
jne
rcrb
or
and
insb
aam
lret
aam
adcb
inc
mov
aad
pusha
inc
push
jecxz
jmp
mov
xchg
repnz
repz
shrb
ss
mov
aad
pushf
fists
fidivrl
jbe
cmpsb
mov
mov
adc
mov
data16
stc
and
add
out
out
lahf
idiv
add
insl
pop
fstl
inc
cwtl
cli
stos
mov
js
xor
test
fadd
and
lcall
cmpb
insl
hlt
add
lahf
dec
aaa
cld
xlat
xchg
pushf
or
push
out
lret
pusha
push
je
mov
test
lret
jp
pop
mov
dec
pusha
dec
pop
mov
mov
scas
cmp
hlt
rolb
rcrb
add
sub
cmp
jle
fstl
aaa
repnz
or
orb
sti
icebp
ljmp
dec
push
jo
dec
mul
subb
cmp
cmp
shlb
or
adc
mov
sbb
clc
jo
add
push
fisttpl
lods
dec
lock
aas
sahf
add
jne
xchg
xor
pop
pop
mov
rcrl
pop
ret
push
jg
aam
rcll
ret
mov
hlt
enter
pop
mov
mov
loopne
sub
adcb
or
test
hlt
xchg
push
jmp
maskmovq
movsb
add
pop
fisubs
arpl
leave
shrl
xchg
cwtl
cs
inc
jecxz
hlt
pop
push
inc
pop
arpl
ret
jo
pop
sbb
or
mov
movsb
cs
jae
inc
fs
and
sbb
lret
test
mov
pop
sahf
aad
xchg
movsb
sarb
and
lods
ss
dec
mov
lds
jl
mov
inc
ss
jecxz
xor
gs
mov
sbb
and
inc
aam
mov
fwait
sbb
xchg
test
out
popf
cwtl
sub
int3
push
outsl
jmp
bound
fisttpll
mov
or
sub
shlb
enter
mov
leave
or
adc
and
lds
lret
movsl
add
cmc
mov
aam
xchg
daa
and
shll
pop
repnz
test
mov
dec
fstpt
adcl
jno
sub
mov
ret
in
std
or
sbbb
sub
sti
pop
out
mov
push
push
mov
add
shl
sti
nop
or
pop
ret
hlt
rolb
jnp
test
fidivl
lods
pop
add
mov
dec
or
xchg
pop
inc
into
scas
loope
cli
ss
sub
add
xor
mov
movsb
dec
inc
mov
mov
sbb
or
xchg
xor
loopne
loope
jp
cld
or
sub
push
xchg
mov
xor
insl
bound
js
fidivl
xchg
jb
cmp
loop
stc
test
fistpll
loope
ds
sahf
sbb
push
inc
cmpsb
lahf
jns
pop
hlt
push
jg
mov
cmp
mov
sbb
jge
push
or
popl
in
dec
mov
push
scas
pop
addb
fcmovb
fwait
imul
cmpsb
pop
es
push
inc
jp
mov
data16
icebp
test
lds
sbb
add
test
negl
cli
cwtl
mov
aaa
testb
jno
and
add
lds
dec
out
cmp
fsts
scas
aas
frstor
xor
decl
jae
pop
clc
lahf
pop
adc
cli
imul
shlb
mov
jmp
lea
or
nop
jmp
inc
mov
ficompl
pop
adc
add
aas
lret
xchg
dec
push
shlb
cltd
push
pop
popf
cwtl
iret
sarb
mov
roll
jne
test
das
movsb
stos
and
sub
les
loop
in
test
jo
adc
sahf
mov
sub
add
pop
std
sub
fdivrl
xchg
lods
loop
imul
mov
fdivrs
ret
sub
shl
jae
arpl
jo
dec
mov
and
mov
push
ljmp
lret
push
cmp
fwait
mov
fnsave
cwtl
mov
dec
imul
push
mov
into
ja
push
mov
rorb
mov
cmp
mov
mov
xchg
lret
inc
aaa
shll
pop
and
divb
out
shl
sbb
cmp
cmp
je
xchg
and
jle
mov
or
xorb
out
test
in
fisubrl
pop
inc
jbe
xchg
adc
jp
imul
rolb
xchg
pop
es
fidivl
jns
fisttpl
jns
or
inc
mov
jg
stc
imul
mov
out
pop
repz
cmp
pop
das
lds
outsl
add
and
dec
addr16
xor
lcall
stos
cmp
dec
lods
outsl
shlb
xor
es
nop
out
xchg
ss
jnp
and
mov
adc
xchg
add
repz
out
jle
mov
movsb
mov
pop
jns
xor
stos
xchg
sti
pop
xchg
dec
or
sbb
xchg
push
xchg
mov
push
movsb
adc
nop
subb
gs
aam
popf
mov
and
dec
xchg
add
pop
mov
jmp
inc
pop
inc
loopne
adc
sahf
fcmovne
or
fwait
mov
aas
stos
out
ffreep
and
add
out
out
jmp
pop
clc
mov
mov
rol
adc
cmc
ss
stc
lahf
push
bound
testb
inc
or
mov
je
lods
xor
jl
inc
dec
daa
mov
and
dec
mov
in
and
fimull
in
mov
jecxz
jg
jns
rorb
scas
out
es
push
sarl
push
push
sub
cmp
xchg
cld
rcrl
cmp
jg
push
lds
and
sbb
sub
xchg
cmp
push
dec
cmpsl
outsl
sbb
into
pop
int3
sub
jae
xor
push
add
out
sub
cmp
xchg
fs
jo
adc
mov
mov
dec
mov
stos
dec
jp
icebp
out
xor
fnstsw
mov
inc
les
xchg
adc
mov
sub
data16
push
ds
jp
sub
stos
xchg
mov
adc
repz
dec
mov
orl
nopl
lcall
roll
repnz
sub
movsl
aad
cmpsb
pusha
and
dec
sti
inc
sub
mov
repnz
jmp
stos
scas
mov
dec
dec
inc
sub
dec
inc
call
aam
sub
sbb
nop
push
inc
xor
jns
std
jbe
mov
popf
or
pushf
mov
mov
popa
insb
xchg
add
loopne
xor
mov
dec
jne
or
repnz
sar
inc
lods
xchg
sbb
sub
jg
lahf
movsb
xchg
outsb
add
push
lcall
cmpsl
icebp
sub
loopne
andl
adc
push
ds
insb
sarl
out
lock
out
stos
inc
std
jb
jno
faddl
jmpw
addr16
pop
inc
out
hlt
lods
repz
aad
int3
xchg
test
test
lods
dec
out
pop
addl
aad
push
pusha
out
daa
je
test
lods
push
mov
or
mov
shlb
dec
sbb
jb
push
fistps
mov
movsb
movsl
pop
out
mov
pusha
add
cld
out
adc
cmp
jg
mov
xlat
sub
fnsetpm(287
sub
movsb
pop
mov
notl
cwtl
adcb
ja
in
jmp
xchg
add
lret
rcll
mov
inc
les
lods
ss
mov
inc
adc
scas
mov
xchg
mov
sbb
xor
fwait
call
test
fwait
movsb
fnclex
push
imul
add
xor
jmp
sbb
enter
push
inc
pop
loopne
push
or
shrb
sub
jne
inc
sbb
aam
call
and
xlat
mov
jmp
push
xchg
enter
adc
addl
and
loopne
pop
cmpsb
aad
or
xchg
leave
addl
leave
into
loope
dec
loop
xor
andl
xor
adcb
cmp
out
push
sub
call
and
sbb
xchg
adc
adc
arpl
add
mov
shrl
sub
dec
sub
push
mov
sbb
mov
mov
jp
cmp
repz
pop
out
ss
aam
data16
xchg
lret
ss
jp
push
or
dec
dec
sti
shrl
shlb
stc
sbb
leave
xchg
out
lods
dec
pop
insl
inc
movb
mov
stos
fisttpl
mov
jp
lcall
mov
jnp
mov
cmp
cwtl
push
jge
jns
and
je
imul
sub
cmpsl
fwait
xchg
jle
out
ljmp
pusha
and
add
mov
sarb
andb
mov
xchg
notb
inc
xor
push
dec
js
cmp
mov
push
sub
and
fildl
cmp
push
xchg
and
aas
sbb
ja
mov
inc
scas
test
hlt
push
jnp
lods
dec
dec
mov
pushf
loope
mov
cmc
sbb
jnp
inc
adc
jns
out
xchg
push
lods
aaa
jmp
pop
xchg
and
in
jmp
and
and
fwait
adc
daa
test
push
loop
cmp
push
shrl
ret
xor
call
pop
jmp
and
bound
dec
repnz
mov
mov
into
jo
mov
xlat
sub
aam
jbe
enter
fists
adc
ss
aas
jb
push
sub
cmpsl
repz
xor
test
pusha
inc
cmp
nop
pop
xchg
xchg
lods
push
and
mov
je
lea
popa
fnstenv
cmpb
unpcklps
mov
xchg
sbb
movsl
pop
addl
lock
dec
imul
push
or
cmp
leave
mov
pop
fcompl
insb
movsl
ss
mov
mov
mov
repnz
cs
lret
test
inc
test
jg
mov
scas
enter
pop
inc
je
mov
pop
fisubrs
mov
enter
pushf
jns
in
mov
std
add
dec
nop
fwait
inc
lock
int3
aaa
xor
neg
jne
push
insb
xor
push
pop
mov
add
xchg
lret
push
jle
jmp
shrl
ss
jns
adc
out
test
ds
repnz
aad
repnz
iret
mov
in
bound
pusha
aam
dec
aas
ds
filds
xchg
andb
xchg
cld
and
xchg
cmpsb
loop
in
jge
fcompl
and
fldenv
pop
push
and
sbbb
divb
in
out
and
jle
sub
sbbb
jns
sbb
sbb
xor
dec
mov
jb
inc
mov
ss
inc
outsl
mov
pushf
jmp
int3
in
in
mov
fisttpll
rcrl
ja
inc
dec
arpl
addl
lods
cmc
icebp
cmp
ljmp
inc
pop
dec
jns
test
xor
pop
rcll
mov
sahf
inc
xor
inc
and
add
push
pop
push
popa
adc
sbb
andb
push
sahf
stos
dec
mov
mov
gs
outsl
subl
stos
mov
std
jbe
inc
pop
jle
mov
add
sbb
push
sbb
pop
mov
shl
test
test
lret
pusha
sbb
enter
sub
sbb
idivl
xchg
call
sub
in
inc
adc
or
mov
and
pop
sbb
mov
jmp
stc
inc
loopne
ds
dec
aaa
cmp
mov
pop
xchg
xchg
pop
and
stos
es
cld
lods
sub
pusha
mov
jns
dec
shll
pop
push
repnz
cmp
in
fs
mov
xchg
push
or
fwait
stos
repz
adc
xor
xor
clc
gs
push
das
add
mov
cmp
jmp
jae,pn
adc
push
mov
push
repz
test
or
test
mov
cmp
adc
and
pop
mov
xorb
movsb
jl
jg
mov
or
adc
pop
jecxz
pop
lcall
imul
mov
loope
dec
clc
jnp
insb
mov
ret
test
push
and
jmp
dec
or
test
push
inc
mov
sahf
mov
mov
cmp
xchg
adc
adc
mov
adc
es
mov
imul
push
subl
xchg
in
lret
std
outsb
xor
adc
stc
mov
imul
pop
andl
iret
in
out
xchg
lahf
add
lds
mov
jo
loopne
popf
jmp
pop
jbe
lods
clc
push
adc
in
outsl
xchg
loop
xchg
iret
cltd
mov
push
or
outsl
adc
insl
xchg
jl
mov
jge
adc
negb
aas
or
lret
inc
mov
adc
jb
xor
shlb
xchg
pop
loope
mov
fdivr
add
xchg
fs
xchg
in
jle
xorl
iret
rcrl
pop
iret
pop
ja
jmp
add
arpl
fcompl
les
push
cmpsl
mov
popa
sbb
and
gs
repz
cmp
fsubl
fs
sub
sbb
in
pop
pop
adc
loopne
dec
sahf
jp
or
por
je
inc
mov
ret
ret
outsb
pop
lahf
dec
mov
sub
pop
jne
stc
stc
push
xchg
ljmp
mov
add
and
lahf
add
inc
mov
pop
rorb
test
loopne
mov
xor
inc
pop
dec
sub
std
sub
fwait
lea
dec
leave
xlat
sbb
adcl
imul
pop
adc
mov
mov
add
inc
roll
xchg
inc
sub
test
shll
mov
jl
call
mov
push
xor
and
pop
cmp
repz
movsb
push
and
out
lcall
scas
stos
cmp
imul
sbb
and
adc
js
arpl
mov
push
jne
es
mov
sub
add
cmp
cmpsb
pop
leave
adcl
fldt
in
and
stc
shr
adc
push
mov
shlb
adc
xchg
mov
xor
sub
fisubrs
in
data16
subb
in
cmp
sub
sub
rorl
jae
movsl
ds
lea
sub
mov
fmuls
or
jae
xor
pop
mov
cmpsb
notl
sbbl
pop
cwtl
xor
cmpsb
mov
inc
ret
lcall
mov
jne
enter
adc
push
call
jno
jl
xchg
loopne
mov
push
mov
add
lock
mov
add
sub
xor
lods
push
push
out
and
stc
inc
cmp
mov
rcr
cmc
mov
xor
outsb
pusha
mov
aas
sub
and
inc
in
out
sub
xchg
and
push
aas
sbb
out
enter
test
mov
or
jl
push
ret
pop
mov
lock
sub
orl
jnp
nop
cmpsb
inc
aaa
dec
sub
push
dec
pop
repnz
fistl
sbb
jl
fcmovbe
aad
add
mov
bound
sbbl
cmp
repz
adc
lock
mov
inc
in
lret
test
push
or
jp
dec
pop
jnp
cmp
in
out
cmp
mov
adc
fwait
decb
jl
imul
in
xor
pusha
mov
dec
rcrl
and
jnp
fadds
cwtl
push
pushf
mov
xorb
and
sbb
mov
or
enter
mov
cltd
fcomps
dec
repnz
cmp
outsl
lret
and
iret
sbbb
cmp
imul
mov
jne
mov
addr16
les
fstpt
mov
pop
push
sahf
subl
stos
add
inc
jge
cmc
xor
mov
jns
jmp
repz
add
mov
lods
sbb
mov
mov
adc
sub
sbb
lock
in
das
jle
insb
and
and
push
pusha
xchg
adc
push
idivb
bound
inc
out
pop
xchg
mov
fwait
sbb
adc
adc
inc
mov
jno
jecxz
and
nop
int
stc
mov
or
out
fsubrp
ret
sub
pop
lret
mov
xor
xor
into
jne
jg
fneni(8087
aad
mov
call
push
inc
pop
jae
jle
std
pop
jg
dec
cmp
enter
pop
test
or
pop
popf
jb
xchg
out
mov
cli
add
sbb
insl
add
mov
mov
push
mov
sbb
cltd
mov
mov
adc
cmp
popa
fimull
jle
pop
hlt
aas
outsl
cmpsl
test
fisttps
mov
daa
jmp
pop
adc
mov
test
add
lock
mov
jnp
pop
dec
push
lret
es
add
jo
cld
pop
add
sarb
sti
lods
pop
jecxz
add
sbb
cmc
xchg
movsl
pushf
jo
es
stos
pop
fwait
cmp
rorb
popa
jge
cwtl
jle
les
xchg
adc
stos
imul
les
inc
jbe
inc
test
or
fmuls
jmp
push
iret
push
mov
loop
sysenter
addl
inc
test
xor
inc
pop
loop
icebp
clc
adc
adcl
xchg
in
out
mov
inc
fwait
adc
and
inc
das
pop
ss
fs
je
mov
ss
xor
mov
jle
and
jl
insb
adc
cs
shll
xor
xchg
orl
add
inc
mov
adc
mov
mov
jns
pop
lahf
mov
cmp
das
add
cmp
xchg
xor
cmpsl
sahf
lea
fwait
mov
push
lcall
mov
cmc
es
jl
stos
xchg
arpl
inc
shlb
jne
cwtl
pop
scas
les
test
pop
ror
cld
or
jmp
cmc
mov
add
pushf
push
cmp
shlb
mov
jbe
sub
in
cli
pushf
int
inc
cmp
out
ja
adc
sti
mov
call
mov
lcall
mov
dec
and
ja
test
mov
nop
adc
dec
mov
mov
mov
push
sub
jle
cmp
bound
inc
mov
ret
jb
sbb
fstpt
cmp
inc
jecxz
cltd
jg
mov
push
arpl
sbb
into
icebp
sub
sub
xchg
push
cmp
fmulp
sub
adc
push
or
mov
pusha
les
pushf
mov
clc
mov
ds
mov
adc
xchg
call
xor
rcrl
cmp
insb
movsbl
hlt
pop
and
in
mov
mov
out
inc
mov
rcll
mov
add
inc
pop
cwtl
or
fildl
pushf
and
cld
shlb
dec
shl
movsl
inc
sahf
pushf
dec
pop
popf
inc
push
jae
test
mov
dec
ret
loop
mov
ljmp
fcompl
dec
xor
sbb
adc
stos
movsl
insl
push
xchg
cmp
out
add
and
mov
sti
jae
adc
call
lahf
test
jno
addr16
sub
fsubl
sbb
movsl
and
and
xchg
enter
fildl
iret
test
adc
cli
cli
add
shl
pop
dec
int
out
mov
mov
adc
and
aaa
loop
cmp
sub
and
add
or
aas
sub
xchg
ret
jae
xchg
jp
add
cmp
fstpl
push
dec
les
aam
dec
cmp
adc
mov
shl
inc
dec
pop
adc
xlat
sub
dec
pop
imull
outsb
loop
xor
xor
xchg
xchg
imul
xor
xor
jg
jb
movsl
dec
push
in
xor
xchg
adc
pop
xlat
xchg
rcrl
pushf
and
cmp
repz
push
cld
cwtl
frstor
push
std
dec
mov
enter
ss
lahf
nop
imul
sub
ret
and
xor
ret
mov
sub
scas
pushf
and
sub
leave
dec
xchg
mov
shll
pop
fbstp
sbb
and
add
mov
lods
cmp
cmp
dec
bound
xchg
fsts
sahf
repnz
xchg
dec
std
fwait
es
sahf
aaa
movl
cli
xchg
cld
mov
stos
pop
push
jg
sub
mov
dec
lea
mov
pop
inc
stc
mov
ds
mov
jmp
clc
mov
outsb
test
pop
cmp
jnp
dec
mov
fldenv
dec
call
jo
pop
in
mov
insb
notb
mov
pop
jns
and
jmp
mov
andl
scas
mov
push
out
xchg
adcl
cmp
popl
std
inc
fdivs
xchg
xchg
lea
test
add
xchg
jge
cmp
and
push
cs
pop
sub
movsl
inc
es
in
cmpsl
icebp
test
aas
mov
daa
sub
dec
mov
sbb
push
pop
cmp
test
data16
add
fistpll
ror
inc
das
shrl
xor
sub
arpl
pop
shrb
cmpsb
mov
add
fcom
pop
mov
fadds
mov
inc
pop
cli
in
jle
leave
popf
jmp
pop
pusha
adc
fisubrs
stos
cmp
push
pop
jle
std
sti
insb
out
mov
cmp
sub
lea
cmpsl
push
ja
lcall
push
lcall
rcl
mov
pop
test
mov
in
iret
rolb
xchg
cmp
fidivl
bound
lret
mov
pushf
je
es
jns
jbe
cmp
jmp
int
dec
xor
and
mov
fsubrl
mov
js
jne
hlt
je
lret
lret
das
cmp
stos
pusha
sub
and
aad
int3
jne
outsl
jmp
mov
mov
icebp
out
pop
pop
jno
and
aam
jge
iret
pop
inc
sarl
lahf
cmp
jbe
je
dec
and
mov
pop
mov
fucom
push
mov
sti
pop
jl
lret
loopne
xchg
mov
adcl
imul
xchg
or
movsl
adc
inc
rclb
mov
adc
nop
inc
inc
stos
or
cmp
sarb
xchg
test
rcrl
insb
xor
fst
fcmovb
adc
ja
jmp
sahf
mov
fwait
jo
adc
sub
xor
inc
ljmp
out
or
cwtl
jmp
sarb
in
hlt
rcrl
push
loop
es
lods
leave
je
add
pop
adc
xor
add
inc
or
shlb
pop
cmp
lods
data16
xchg
out
dec
lds
dec
lds
sbb
nop
div
das
mov
jno
aad
enter
stc
mov
cmp
cs
inc
mov
jl
pusha
ljmp
inc
inc
push
insl
aad
lahf
add
jo
jnp
test
xor
push
sti
sbb
cmpsl
jle
push
inc
in
outsl
xchg
test
mov
xchg
scas
mov
jne
test
dec
pop
aas
pop
jmp
mov
xor
mul
push
js
adcl
cbtw
pop
loop
xchg
sub
xchg
mov
in
mov
fwait
cmpsb
ja
push
push
and
jno
das
iret
mov
popa
sbb
ret
xor
dec
out
or
in
and
inc
and
scas
lods
jg
mov
aad
dec
popa
pop
mov
js
sub
or
add
sbb
add
mov
adc
dec
rorb
call
rorb
out
jne
mov
pop
psllw
jl
lock
js
pop
addb
inc
and
pop
xchg
mov
lea
mov
fiadds
leave
inc
lea
cmpsl
cmp
lock
mov
iret
cmp
roll
mov
xor
arpl
popf
xor
mov
sbb
in
or
stos
adc
push
push
mov
mov
push
cmp
cwtl
push
stos
cli
popa
ja
jns
push
sub
cmp
repz
imul
test
mov
mov
pop
adc
dec
mov
jae
fwait
push
ror
sub
push
and
inc
jmp
or
inc
jp
xchg
ret
jbe
jo
lods
cmp
out
call
lea
sub
and
jns
addr16
mov
ret
cmpsl
rclb
or
xchg
fsubl
sbb
jb
divb
mov
inc
pop
lea
fiadds
mov
jl
fnsave
stos
rorb
test
cli
arpl
pop
cli
sti
mov
mov
adc
dec
bound
xor
xor
test
mov
mov
sbb
shlb
or
push
mov
aam
decl
ds
dec
loope
pop
xor
cmp
or
sbb
push
xchg
cmpsb
gs
jae
add
mov
sub
inc
arpl
cli
movsl
cld
xchg
insl
sbb
shlb
push
int
inc
or
mov
pop
arpl
dec
jbe
and
add
add
insl
fistl
adc
mov
jge
cmp
sub
and
cmp
scas
lret
insb
adc
add
fld
test
int
mov
jmp
mov
sbb
cmpsl
mov
dec
out
je
xchg
adc
in
aas
sbb
add
andnps
idivb
ror
mov
inc
ds
lods
jmp
or
inc
jae
lcall
jl
push
xchg
cmp
sbb
push
add
sub
es
jp
or
outsl
cmp
mov
mov
pop
or
orl
lea
sbb
call
std
jge
xchg
out
push
das
cmp
cmpsl
iret
xchg
adc
out
push
sarb
pop
mov
js
fld1
pop
adc
jnp,pt
push
mov
into
dec
out
mov
sar
or
and
call
add
push
mov
mov
mov
popf
push
popa
arpl
imul
sbb
mov
inc
subb
inc
jbe
xorps
jle
sahf
cmp
fists
mov
nop
stos
shll
jbe
or
daa
xchg
repnz
xor
and
stc
mov
les
mov
cmp
sahf
lcall
jne
mov
mov
sti
int
sahf
testl
lret
dec
add
xchg
int3
repnz
xchg
inc
and
jns
or
xchg
inc
cmpsb
ss
add
add
add
jmp
dec
idivb
ja
lods
jl
and
outsb
xor
jae
lret
das
imul
popf
pop
loope
lret
loope
insl
xchg
cmp
adc
pop
mov
dec
neg
fidivs
inc
sub
testb
icebp
arpl
dec
pop
repz
mov
xor
int3
punpckhwd
dec
inc
lcall
hlt
nop
xchg
mov
int
ret
mov
enter
into
in
mov
std
sarl
int
insb
dec
lds
aam
adc
fdivrl
repnz
or
cltd
in
mov
fs
jle
dec
mov
inc
or
sub
add
cmc
test
jns
pop
pop
test
cmp
lret
or
jns
rcrb
test
js
std
lcall
push
call
mov
and
shrl
adc
pop
xor
fisubrl
jmp
jl
push
aad
leave
test
aas
cmp
inc
in
lea
sbb
cmp
xchg
adc
adc
fisubrs
outsb
sarb
icebp
fdiv
jns
call
dec
roll
stos
mov
inc
pusha
cmp
outsb
pop
pop
out
add
cmpsl
insl
cmpsl
jl
xor
xchg
adc
mov
popf
bound
or
shl
xor
jmp
add
lcall
push
inc
xchg
ret
inc
mov
pop
xchg
mov
cmp
jg
shlb
lcall
mov
fs
inc
xchg
cmp
or
adc
jne
int3
cmpsl
jmp
pop
cli
adc
xor
ret
out
sbbl
xchg
dec
ficoml
ffreep
addl
out
insl
xchg
insl
pop
xorb
mov
cmp
adc
lret
mov
inc
lcall
xchg
xchg
rcr
loopne
xor
call
and
or
xchg
cmp
call
ljmp
sbb
shlb
enter
inc
jg
push
shr
push
pop
clc
rorl
jno
add
or
cvtpi2ps
pop
mov
mov
iret
push
js
add
cmp
int3
pop
cmp
and
dec
hlt
test
or
scas
push
dec
sub
movb
rclb
and
test
sub
outsl
mov
xchg
pushf
out
add
push
fdivl
cmc
test
push
jl
outsl
and
xchg
mov
loopne
lods
inc
bound
lods
dec
adcl
movsb
xchg
inc
je
lret
roll
fnstenv
mov
and
dec
jge
jnp
fstpt
out
pop
fimuls
sbb
mov
jp
das
mov
sub
xor
cmp
mov
mov
mov
adc
fimull
mov
add
movsl
xor
or
mov
mov
push
sti
sub
fwait
pop
jnp
ret
sub
rcl
adc
mov
push
adc
bound
outsl
and
and
and
xor
hlt
xchg
loopne
pop
add
pop
fldl
and
push
adc
pop
test
dec
movsl
in
sub
cmpsb
rorl
pop
mov
cs
xor
adc
xor
not
mov
xchg
mov
test
iret
fistl
lock
and
scas
jg
or
jmp
dec
fdivrp
xor
aaa
mov
das
adc
inc
mov
out
and
test
mov
sub
fildl
mov
push
mov
mov
lods
or
jmp
jmp
test
sbb
pusha
add
sbb
leave
xor
cmpsl
add
adc
mov
add
aam
lods
mov
dec
dec
push
mov
cmc
push
inc
cltd
lods
daa
adc
mov
cmp
insb
cmp
sahf
ret
cld
xor
add
adc
stos
shrl
and
std
cmpsb
std
push
enter
addr16
mov
test
add
movsl
mov
push
dec
ss
pop
adc
stc
jb
filds
push
pop
pop
sbb
ret
add
or
adc
fwait
aam
xchg
jmp
ljmp
jmp
fs
add
xchg
dec
cld
clc
stos
add
sahf
dec
sub
int
js
in
adc
lock
add
ds
jge
and
lret
jnp
adcl
rclb
xchg
addr16
ljmp
mov
int3
mov
scas
loop
xor
add
scas
pop
jbe
sbb
cmpb
ss
add
mov
push
sub
sbb
js
das
mov
cmp
pop
sub
aaa
int
push
lea
mov
sub
cmp
clc
push
mov
or
ss
movsl
cmc
mov
dec
mov
inc
pop
or
lods
leave
mov
jmp
outsl
insl
push
jge
es
arpl
cwtl
or
jae
int
std
pause
pusha
pop
mov
insb
adc
mov
fidivrl
scas
mov
out
aad
mov
mov
mov
jge
cmpsl
adc
test
orl
fwait
xchg
push
pop
push
lods
push
or
das
cld
stc
xchg
ret
ljmp
adc
in
pushf
inc
pop
fnstcw
gs
repz
hlt
sbb
or
or
fcmovne
mov
stc
cmp
lds
jle
xchg
insb
push
xor
lret
mov
dec
pop
pop
xor
imul
mov
mov
outsl
add
push
mov
pop
popa
and
unpcklps
daa
jmp
add
lods
xor
xchg
sbb
add
cltd
mov
nop
aam
aaa
pushf
pusha
rcrb
mov
bound
mov
adc
lea
das
mov
fiadds
inc
cli
loopne
cmpsb
xlat
push
xchg
jne
jb
out
mov
fmull
mov
inc
in
pop
rol
xor
stc
mov
imul
outsl
jne
xchg
and
ret
call
ror
xchg
shlb
xchg
xor
push
add
sar
jge
pop
das
ret
ss
mov
sarb
test
insl
or
push
cwtl
mov
xchg
sbb
jo
sbb
not
repz
daa
mov
inc
mov
push
mov
dec
ffreep
push
dec
cmp
nop
es
les
lcall
mov
fcoms
xchg
cmp
cmp
loope
or
fbstp
lods
sbb
out
push
in
sbb
mov
psrlw
push
bound
jmp
mov
mov
scas
and
fnstcw
and
push
insb
aas
addl
ja
clc
dec
add
jb
out
jg
lret
xchg
mov
mov
cltd
mov
icebp
inc
dec
xchg
gs
sub
std
loopew
xor
sbb
mov
fsubrl
sbb
sub
cmp
lret
in
push
mov
pop
repz
das
insl
fdivs
sbbb
fwait
pop
push
pop
int
lods
xor
push
add
cmp
call
sub
jbe
xchg
push
push
lock
push
jne
ret
mov
cltd
pop
mov
sub
aam
cli
mov
test
bound
cmp
add
and
pop
negb
push
dec
sahf
int
sub
cmpsl
dec
and
mull
adc
in
push
pop
sbb
or
sub
inc
and
pop
dec
xor
dec
cmp
aad
andb
or
mov
out
cmp
mov
bound
mov
mov
movsb
movsb
lea
add
jecxz
and
mov
mov
jecxz
add
les
push
fwait
sub
push
pop
popa
cmp
les
mov
cmpb
sub
sbb
add
jb
adc
fisubrs
pop
mov
inc
push
les
mov
in
fimull
mov
insl
gs
les
ret
pusha
mov
adc
xchg
cld
and
dec
jno
idiv
pop
mov
mov
imul
mov
jmp
jecxz
jge
push
push
leave
sbb
fs
push
cmp
data16
jne
mov
mov
orb
movsb
subb
je
inc
add
pop
nop
xchg
shrb
pop
xlat
and
or
popa
negl
sub
outsl
rcr
std
add
test
xor
adc
iret
sub
insb
sbb
rolb
sbb
lcall
lock
adc
addr16
mov
lods
fwait
inc
xchg
xchg
dec
nop
add
ja
pop
out
pop
mov
adc
jbe
iret
loopne
ljmp
add
jecxz
fistpl
or
mov
dec
lcall
push
dec
int
shrb
jl
cmp
adc
mov
jecxz
xchg
xor
out
in
push
xchg
inc
in
cmpsl
out
pop
fucom
mov
fisttps
pop
push
ljmp
pop
rolb
sahf
cld
pop
popa
pop
les
mov
stc
scas
lahf
pop
sub
mov
popa
or
mov
dec
gs
aaa
dec
lahf
and
aam
shrb
cmp
sbb
pop
hlt
sti
add
cwtl
add
pop
dec
call
and
inc
push
lcall
sub
clc
shlb
loope
or
imull
pop
cmpsb
mov
incb
outsl
das
push
xchg
in
lea
out
push
out
stc
cmp
mov
cmp
mov
leave
outsb
and
xor
or
push
fwait
in
ficompl
jne
and
jl
mov
pusha
stc
mov
dec
ss
outsl
clc
jo
push
adc
mov
xlat
and
sub
loop
in
movsl
cmp
into
sti
aam
cmp
jle
arpl
add
cmpsb
pusha
add
inc
rcr
cmpsb
repnz
pop
lock
int
lods
ss
mov
and
dec
repz
dec
add
jmp
xchg
subb
mov
jnp
mov
gs
adc
int3
stc
mull
pop
outsb
push
insl
mov
pop
cmc
mov
daa
pop
inc
inc
pusha
sbb
fistpll
sbb
stos
and
xchg
enter
mov
pop
adc
aad
xchg
aas
pusha
sub
mov
dec
lods
mov
push
or
jae
mov
xchg
dec
push
cmp
sub
out
mov
cmc
xor
fists
in
mov
repnz
or
sub
aad
mov
inc
andl
test
mov
mov
aad
add
into
dec
scas
and
insb
xchg
in
inc
ss
or
stc
or
or
inc
sub
and
mov
mov
and
mov
sub
fadd
aam
xor
lahf
in
mov
mov
popa
add
mov
out
movsl
into
or
add
testl
out
gs
mov
lods
imulb
fnstenv
leave
xor
lret
dec
pushf
sub
add
sbb
out
hlt
rcr
inc
cwtl
jb
and
mov
lahf
cwtl
repnz
enter
scas
sti
and
sub
mov
shlb
sbb
repnz
mov
sahf
sbb
mov
test
cmp
mov
sarl
cmp
bound
push
fwait
xchg
rclb
cmp
shl
in
sbb
and
inc
repz
mov
cmpsl
or
fdivl
jno
arpl
xor
or
fucomp
mov
push
sarl
orl
dec
mov
je
xchg
ficoms
into
mov
push
setbe
fsubrp
rcr
cli
mov
push
insb
inc
jmp
dec
jge
test
jo
cmpsb
ja
dec
xlat
pusha
pop
rclb
xchg
sbb
shrl
jo
xor
sti
jg
mov
dec
int3
push
mov
jle
sbb
iret
leave
cltd
in
cmp
or
lcall
jl
out
dec
inc
cmp
jne
xchg
sub
lods
adc
xchg
addr16
ret
jmp
iret
loope
or
enter
inc
sbb
cmpsl
mov
push
dec
jecxz
add
imul
jl
push
jbe
sbb
aaa
xchg
dec
leave
pushf
cltd
push
dec
fisubrs
nop
jmp
pop
fidivs
and
adc
jp
movsl
mov
dec
and
adc
popf
dec
jle
ja
sti
or
xchg
inc
xchg
dec
lods
fistps
cmp
sub
outsb
adc
mov
outsb
enter
pop
iret
in
sbb
shlb
and
mov
imul
adc
cmp
or
fcompp
xor
inc
add
dec
dec
cs
imul
adc
hlt
lods
lds
lret
dec
out
lcall
rorb
inc
sbb
xchg
xchg
bnd
das
xor
xchg
mov
inc
test
mov
mov
cli
gs
dec
push
fwait
xor
sarl
mov
int3
pop
call
pop
out
jno
jmp
fldpi
ljmp
cmp
mov
jmp
mov
inc
push
aaa
pop
cmp
in
shlb
mov
test
mov
stos
add
add
push
or
mov
cmp
lods
xchg
add
cli
das
ds
mov
inc
or
cwtl
je
loop
ret
cli
jp
and
xchg
ret
xchg
loope
ret
inc
test
insb
leave
flds
xor
jo
scas
fisubl
pop
inc
and
jo
cmpb
mov
data16
dec
movsb
es
cmp
mov
pusha
addr16
data16
sbb
mov
stc
push
and
cmp
std
test
cmp
xchg
lods
and
das
fwait
sbb
aad
fwait
mov
xor
adc
mov
cmp
fsubs
sti
mov
lock
pop
mov
jg
fmull
in
dec
rcll
and
out
pop
push
mov
out
or
outsb
repz
add
jle
rcl
rorl
cmpsl
jne
loope
fwait
outsb
scas
dec
ds
cmp
mov
dec
sub
pop
push
aam
roll
call
out
in
outsb
pop
inc
fwait
mov
xor
push
dec
out
jecxz
fdivl
dec
xor
mov
repnz
pop
dec
inc
fstps
fwait
push
mov
lret
aam
mulb
and
jmp
xor
daa
inc
pop
adc
inc
dec
movsl
icebp
mov
mov
fcmovbe
push
roll
cmp
divb
jne
jnp
pop
jne
ljmp
fisubrs
je
int
pop
dec
xchg
loop
pop
add
in
int3
leave
aad
mov
and
push
and
sub
sbb
in
xchg
jnp
or
mov
sub
leave
add
sbb
mov
jp
outsb
aas
movl
shll
cmp
pop
test
inc
into
cmp
std
les
pushf
mull
dec
inc
jb
sbb
out
clc
mov
ret
test
or
jle
lods
mov
cmp
push
mov
cmp
vpor
daa
sub
jne
sbb
outsb
pop
test
lea
ljmp
xchg
mov
add
sub
test
push
mov
mov
lods
gs
jne
xchg
test
ror
and
sbb
ror
xchg
mov
mov
mov
adc
cmp
adc
or
fdecstp
pop
or
mov
scas
pop
mov
inc
imul
data16
dec
dec
pop
inc
jnp
mov
fmull
scas
mov
fidivs
push
call
cmp
ret
cmpsb
inc
jb
jns
das
and
mov
or
mov
les
push
jb
outsl
mov
jg
divb
mov
sub
lock
cmp
int
mov
mov
pushl
xor
mov
scas
stos
js
lret
aas
mov
xchg
imul
jge
int3
pop
mov
insb
test
lods
push
sub
pop
and
pop
sub
xchg
cmpsb
out
insl
push
xchg
sub
jl
xchg
push
lret
dec
inc
pusha
dec
and
ret
mov
popa
arpl
mov
out
xchg
pop
out
mov
push
lock
inc
sub
push
and
outsb
test
dec
xchg
scas
aaa
mov
and
stos
mov
xchg
or
arpl
shrb
pop
or
sub
sbb
pop
lret
or
inc
mov
lds
std
inc
jbe
jae
rclb
es
push
mov
in
fidivrs
sbbb
pop
jno
movlps
ret
test
mov
xor
dec
push
xlat
mov
fdivs
or
fstpt
push
leave
je
sub
pop
mov
sbb
ror
push
sti
xchg
fidivrs
pusha
add
jge
outsl
push
or
cmp
push
cld
mov
pop
dec
cmp
lods
std
movsl
dec
dec
inc
subb
jg
hlt
scas
push
sub
cli
jbe
aam
adc
sbb
pop
xchg
std
cwtl
notb
mov
fcmovnu
xchg
lret
mov
inc
cmpsb
out
pop
pop
in
push
inc
loop
jle
xor
push
push
filds
rclb
mov
adc
dec
add
dec
pushf
fs
xor
sar
and
inc
sar
cmp
test
aas
sbb
push
inc
int
aam
daa
dec
sub
push
cwtl
push
clc
js
sbb
dec
stos
hlt
aas
push
pop
enter
xchg
ret
sub
inc
lods
xor
add
jl
es
pop
mov
sbb
out
jo
pop
add
cltd
fmull
lret
jle
and
lcall
call
dec
sub
pushl
rcl
push
jnp
sub
add
addr16
rolb
pop
out
xchg
jmp
ret
rclb
test
out
mov
mov
sbb
and
jbe
cmp
imul
cs
jne
xor
add
gs
imul
mov
add
pop
mov
cmp
push
or
sub
lock
cmp
dec
pop
or
sub
dec
push
pop
out
out
fdivr
icebp
subb
shlb
jno
loop
xchg
add
and
cmpsb
ret
push
enter
scas
repz
jg
mov
adc
scas
adc
jg
sbb
sbb
lret
pop
iret
insb
jne
pop
je
jg
jno
lds
dec
xchg
jl
outsb
and
clc
fidivrs
or
ret
lods
push
mov
sub
mov
stc
rorb
sub
sbb
fmuls
xchg
popf
or
shrl
das
mov
or
addl
sbb
lods
jecxz
add
shll
mov
scas
popa
push
gs
pop
add
mov
das
int
shl
mov
mov
outsl
aad
popa
ja
sub
ds
dec
cmp
and
mov
shr
or
xchg
lahf
sti
add
lods
dec
cmp
adc
aas
sbb
xor
in
mov
jns
repnz
loop
mov
ret
aaa
sbb
mov
lods
loopne
push
push
add
jp
jno
mov
mov
push
mov
aaa
rolb
pushf
jae
jnp
push
movsb
lret
push
lods
push
popa
dec
or
pop
mov
jns
mov
inc
aam
inc
jo,pn
test
dec
push
sbb
mov
aad
mov
in
pop
mov
dec
daa
pop
mov
xchg
ja
add
fistpl
out
jmp
push
es
addr16
adc
adc
andb
add
push
sti
or
cld
test
imul
rorb
or
xchg
adc
lgs
and
sbb
and
test
mov
xchg
sbb
jecxz
sub
add
and
sub
and
sub
andb
inc
insb
clc
push
xchg
pusha
mov
scas
mov
ja
les
sub
rolb
mov
inc
sbb
test
mov
fwait
push
xor
xor
subb
cltd
sbb
dec
rol
outsl
add
xor
repnz
das
dec
cli
icebp
adc
cli
sub
insl
addl
stos
in
add
mov
xchg
add
psllw
jb
or
test
fistpll
repz
es
test
loope
mov
mov
pusha
std
cmpsl
adcb
cmc
mov
divb
stc
out
add
movq
mov
rol
ja
scas
pop
movsl
pop
data16
dec
js
fcmovnb
test
sub
add
mov
dec
xchg
insl
dec
insl
sub
push
or
dec
sbb
adc
fstpl
pop
mov
cmp
xchg
js
scas
xchg
push
ret
or
pop
mov
mov
xchg
sbb
cld
mov
aas
adc
pop
sbb
bound
les
mov
add
cmp
stc
mov
fdiv
xchg
dec
dec
aaa
sub
xor
cmpsb
push
xchg
dec
lods
mov
cmp
pusha
lea
push
sub
sub
inc
jecxz
cmp
jne
mov
and
jnp,pn
xor
jae
jno
test
pop
jbe
jo
sub
lods
cmp
stos
in
lods
movsbl
daa
ja
mov
movsb
icebp
pop
pop
cwtl
pushf
fisubs
out
mov
dec
shll
repz
into
xor
sbb
pusha
mov
rorl
lcall
add
add
ljmp
ficompl
xchg
icebp
lret
mov
and
popl
mov
shrl
push
or
pop
dec
cld
mov
clc
loop
push
imul
inc
addl
inc
push
mov
cmpsl
out
fcomps
lea
cltd
jnp
pop
cmp
cmc
or
ret
les
adc
int
sub
pushf
jb
xor
sub
lahf
xchg
subps
sub
inc
fmulp
mov
jns
jne
push
outsl
sbb
ficoms
sahf
xor
mov
jno
arpl
addr16
pop
lea
mov
mov
xchg
push
xchg
add
push
dec
add
sbb
adc
add
xchg
jg
lods
jecxz
and
cmp
xchg
push
push
add
std
pop
cmc
pop
imul
in
test
lods
popa
data16
aaa
pop
lahf
sbb
push
sbb
sub
xor
xchg
lahf
mov
int
xlat
popa
adc
in
mov
cvttps2pi
cs
pop
sahf
rcrb
xchg
jae
je
out
inc
add
xor
loopne
dec
mov
jae
xor
jle
fidivs
pusha
fistpl
into
loopne
sub
loopne
fiadds
shl
rorl
push
iret
mov
add
cmpsl
inc
push
cmp
in
add
jbe
push
int
sub
pop
into
adc
mov
jl
sub
int
mov
xlat
sbb
ds
out
fs
dec
lods
jecxz
rcr
jmp
popa
sub
fisttpll
xor
fstp
jne
pop
popf
push
push
fsubs
mov
adc
cmpsl
test
dec
adc
cmp
adc
adc
test
xchg
xchg
push
xlat
std
mov
dec
ja
xor
adc
frstor
cmp
sbb
ret
mov
int3
inc
sbbl
and
xor
clc
sub
mov
push
adc
out
add
adc
bound
dec
lret
inc
sub
xchg
sbb
fisubs
repnz
adc
das
mov
imul
sbb
inc
inc
pop
xor
hlt
mov
cmp
push
in
fmuls
pop
stos
rcr
dec
lret
popa
lea
inc
sub
fmulp
sti
int3
in
or
jge
mov
ret
jecxz
lret
shll
scas
and
loop
orb
mov
rorb
movsb
out
sarl
jnp
cmp
hlt
ss
xchg
sbb
jno
lods
cwtl
ljmp
sahf
js
loop
movsb
scas
xor
idiv
into
cmp
pop
jae
cs
mov
pop
fadds
dec
push
ss
out
mov
stc
out
repz
repnz
outsb
cmp
jne
into
jl
iret
js
mov
imul
push
cmpb
stc
push
jbe
push
scas
ret
dec
inc
lret
adc
into
scas
inc
lahf
jle
mov
ret
jmp
or
pop
pop
ret
in
cmp
pop
dec
push
std
ret
inc
push
xchg
and
jg
loop
pop
xor
push
jle
xchg
addr16
movb
sbb
sub
inc
xchg
mov
mov
popa
aas
and
inc
sahf
ficoms
ret
mov
adc
addr16
jnp
add
pop
fistpl
push
push
adc
out
push
xchg
pop
mov
add
lret
mov
mov
adc
imul
mov
adc
test
insl
cmp
and
cmp
and
dec
sub
push
jae
sub
lds
inc
nop
adc
mov
scas
fwait
out
les
loop
fwait
or
les
dec
je
lods
mov
jge
outsb
pop
sub
dec
pusha
insb
mov
cmpsl
lret
mov
icebp
loope
inc
bound
das
cmp
data16
mov
mull
mov
shll
adc
cmpsl
mov
pop
mov
cs
out
inc
jo
mov
sbb
dec
push
lcall
pop
mov
fidivrl
aaa
ljmp
repnz
fsubs
jb
mov
mov
ja
rolb
mov
fs
push
sti
js,pt
andb
gs
sbb
lock
and
sbb
inc
and
aam
jmp
stos
and
daa
sbb
das
gs
add
jo
adc
xchg
fists
imull
pop
mov
je
and
mov
adc
push
cld
les
dec
pop
xchg
xchg
into
loope
inc
xor
out
subb
pop
inc
dec
imul
test
jae
push
push
and
pop
sbb
sub
adc
pop
jbe
push
or
outsl
cmp
cs
mov
fs
and
aam
into
xchg
lods
mov
add
add
sub
cmc
sti
sbb
sub
lret
push
xchg
iret
lds
insb
popf
div
mov
call
xchg
sbb
aam
test
cmp
shlb
or
jae
lahf
and
pop
test
aas
mulb
sbb
mov
shll
cmp
xor
mov
test
mov
push
or
mov
lahf
sbb
sub
int3
mov
jne,pn
dec
adc
push
sub
sub
xor
jecxz
push
mov
xor
jmp
mov
fs
loop
xchg
pop
pop
cmpsl
ljmp
mov
sub
test
jl
imul
or
add
mov
roll
mov
and
les
jbe
dec
inc
outsl
popa
scas
cmpsl
cmp
pusha
popf
inc
jns
mov
sub
dec
jb
data16
outsl
xor
ss
scas
cli
ret
mov
std
add
mov
sub
push
frstor
fstps
adc
pop
dec
sub
les
test
inc
add
mov
sbb
scas
daa
inc
mov
mov
movsb
pop
lea
pop
sti
cld
mov
dec
pusha
xchg
lods
push
jmp
push
or
cmpsb
js
test
inc
push
in
test
fimuls
es
sbb
jnp
sub
add
lods
leave
call
cmpsl
xchg
outsl
or
mov
mov
test
dec
bound
cwtl
push
mov
mov
xchg
inc
cmp
movsb
add
jle
or
leave
arpl
push
cmp
or
mov
fisttps
or
movsl
loop
push
sti
pop
inc
sub
mov
scas
inc
jmp
lea
jae
pushf
or
icebp
dec
mov
jno
cltd
xor
dec
aaa
in
loopne
sub
imul
negb
mov
std
insb
test
imul
add
add
bound
jle
std
or
mov
mov
mul
cmpsb
inc
imul
add
scas
lods
shl
out
adc
push
sahf
mov
int
int3
sti
ss
xor
aam
lahf
out
sahf
rolb
push
ss
neg
dec
cwtl
loope
popa
orb
ljmp
lahf
pop
inc
sbb
pushf
popf
in
sbb
mov
or
in
stos
js
jge
jae
push
leave
pop
repz
mov
pop
xchg
ds
sub
xor
rcrl
out
mov
inc
pop
sbb
pop
jo
test
jnp
lahf
fdivrl
mov
sub
into
pop
xor
jge
inc
add
push
mov
lahf
scas
stos
dec
idiv
adc
push
data16
fcomps
xlat
orl
inc
test
pop
mov
mulb
adc
insl
imul
mov
jle
inc
jle
mov
mov
xchg
daa
out
jae
pop
ja
js
jle
jae
jno
dec
dec
and
inc
nop
dec
xor
pop
dec
mov
xchg
shr
mov
and
fisttpll
xchg
push
cs
jne
pop
cs
push
jmp
inc
sub
pop
cmp
mov
rclb
jecxz
push
fwait
orl
sbb
pop
cs
gs
dec
std
xchg
mov
insl
mov
jb
sbb
or
mov
aad
sbb
pop
jmp
mov
into
inc
sub
push
aam
imul
add
jle
xchg
loopne
mov
test
adc
mov
fildll
pop
test
mov
cmp
test
add
jp
fwait
sub
mov
movsb
dec
sbb
fistl
bound
jmp
pop
lret
nop
in
or
add
out
bound
call
fidivrl
aaa
or
les
xchg
repnz
icebp
dec
mov
aad
test
int3
mov
pop
shlb
mov
adc
ret
add
mov
ds
mov
cmp
pop
sti
insl
pushw
xor
loope
js
pop
in
pusha
loopne
das
insb
mov
pop
in
jo
push
scas
nop
cs
pop
es
jecxz
mov
lret
mov
xchg
dec
movsb
xchg
imul
mov
inc
insb
push
cmp
dec
sbb
repnz
loop
addl
pop
call
jg
mov
fimuls
xlat
sub
mov
inc
sub
cmp
mov
js
xor
lods
insl
push
popa
sbb
dec
xchg
jno
rolb
push
ret
xchg
cli
pop
movsb
fs
gs
imul
pop
out
lea
dec
stos
lods
loope
test
push
mov
mov
xchg
sub
pop
mov
mov
scas
sub
insl
inc
push
lret
mov
xor
sti
lahf
push
js
jp
je
rcll
loopne
push
push
addr16
or
lods
cld
nop
addr16
ss
insl
xor
fwait
and
leave
bnd
or
push
xor
ljmp
aaa
xor
jbe
inc
test
mov
push
fcoms
xchg
and
add
insb
push
sbb
xchg
in
test
or
fwait
insl
test
inc
stc
je
out
pusha
shl
xchg
pop
bound
sub
cmpsb
or
xor
das
ficomps
mov
jl
cmp
or
pushfw
xadd
shrb
sbb
test
mov
dec
daa
es
in
mov
mov
sbb
insl
test
cmp
inc
into
pop
mov
cmpsb
pop
jecxz
dec
jno
mov
cmp
rclb
imul
dec
enter
out
or
loope
jp
arpl
and
jp
mov
imul
mov
pop
sahf
sti
jmp
add
mov
dec
test
incb
adc
arpl
int
mov
add
jl
ss
rcr
dec
xor
mov
roll
jl
xchg
cmpsb
mov
into
mov
test
into
das
cmpsl
mov
jp,pn
repnz
pushf
jae
push
pushaw
dec
push
in
enter
push
insb
lods
outsb
push
cs
xchg
and
mov
pop
jmp
in
loope
pop
dec
pusha
out
imul
cmp
cmp
mov
pop
pop
cmp
sbb
popf
inc
pop
lret
das
push
push
cmp
sbb
lret
pop
mov
dec
push
cmp
scas
xor
dec
mov
data16
pop
add
shl
lds
pop
addl
pop
insl
inc
ss
inc
push
mov
std
loopne
ret
pop
in
aaa
pop
jg
pop
xor
movsl
test
ss
sub
icebp
xchg
push
cmp
xor
sub
sub
ret
dec
push
xchg
dec
fdiv
sbb
or
push
enter
jl
xor
les
popa
mov
mov
cmp
fcmove
aaa
xor
mov
fsts
ja
adc
xchg
lock
push
jl
popf
inc
sbb
mov
repz
push
xchg
shll
imul
sub
and
add
movntps
xlat
push
sub
mov
popa
daa
inc
enter
inc
pop
adc
adc
adc
ffree
lret
push
fwait
movl
add
jle
fwait
mov
xchg
gs
scas
lods
out
nop
out
jne
xchg
cpuid
cltd
jge
adc
imul
insb
leave
push
and
pop
icebp
iret
sbb
clc
sbbb
shlb
in
repz
jae
mov
mov
sbb
mov
add
enter
test
bound
push
roll
lcall
sub
jecxz
mov
sub
mov
push
and
or
das
sbb
cmp
movsb
int3
fsubs
push
jle
stos
gs
push
xor
daa
xor
std
lods
out
or
enter
mov
iret
dec
stos
js
dec
mov
pop
push
xchg
loope
or
jne
and
popa
xor
jle
and
inc
cmp
shrb
out
add
movsb
idiv
sub
cmp
xor
adc
cwtl
or
add
call
cmp
scas
pop
pop
popa
ficompl
or
and
popf
dec
pop
mov
and
sub
orb
sbb
cmpsl
push
sub
ja
mov
sbb
add
cmc
adc
push
stos
add
jecxz
push
mov
cmp
inc
lcall
push
jge
stos
stos
das
push
sbb
push
xor
mov
pop
ds
leave
das
sbb
inc
and
jae
mov
xchg
pop
push
jp
cmp
xor
mov
and
pop
lret
in
pop
mov
sub
jmp
loop
add
scas
mov
sub
jne
cmc
add
rorb
jbe
mov
push
push
fcompl
cltd
inc
lods
inc
ja
pop
out
adc
dec
or
scas
insl
sbb
push
movsb
outsl
addl
push
mov
mov
add
or
sbb
ljmp
and
jnp
jle
inc
ficompl
and
fnsave
jmp
or
test
aam
movsb
gs
cltd
mov
lret
addl
inc
paddq
cmp
mov
imul
imul
jo
push
test
in
bound
in
repz
adc
ret
cmp
or
in
repz
push
sub
xchg
les
adc
xor
pusha
push
clc
loopne
or
lds
subb
xor
sbb
push
sbb
and
mov
jp
sbb
xchg
xchg
mov
pop
jnp
sub
jb
mov
mov
xlat
ljmp
movsb
add
pushf
dec
cmp
push
mov
repz
push
fists
data16
inc
mulb
xchg
test
shrb
jne
lret
pop
sub
pusha
pop
int3
addr16
repnz
in
fisubs
xor
iret
adc
mov
cmp
inc
xchg
int3
and
mov
jne
ss
jmp
mov
lret
mov
mov
arpl
jo
inc
sub
push
out
daa
mov
lea
mov
sub
fidivs
dec
imul
scas
xchg
add
std
mov
stos
adc
jne
xor
dec
adcl
xchg
cmp
or
daa
loopne
lock
nop
adc
popf
les
fdivrl
pop
rorb
xchg
leave
lods
jns
dec
ja
push
imul
push
and
adc
repz
cltd
inc
dec
shll
pop
cmp
cwtl
dec
scas
add
cltd
sbb
xlat
loopne
pop
adc
xlat
and
lods
dec
mov
dec
aad
movsb
inc
adc
push
outsl
es
enter
jb
dec
aad
ss
add
cli
cmp
movsl
jmp
mov
mov
shrb
ja
call
jbe
subl
cmp
mov
pop
sbb
or
mov
pop
test
xchg
sti
xor
mov
ret
cmp
mov
mov
scas
daa
aad
cmp
aas
ret
faddl
std
in
mov
call
xchg
js
xor
bound
mov
sub
adc
aas
and
dec
ds
xor
mov
add
cld
jge
lret
adc
test
cltd
aas
cmc
jmp
aam
adc
cltd
jnp
pop
jp
mov
push
xor
push
push
adc
repnz
mov
movsl
cmovl
setge
sbbl
mov
fwait
xchg
lods
xchg
loop
mov
inc
enter
pop
dec
rcr
xchg
xlat
arpl
cld
into
sbb
ret
mov
ret
roll
adc
push
loop
mov
or
outsl
jecxz
pop
and
sub
mov
cli
nop
pop
imul
dec
adc
aam
nop
jns
cmpsb
test
movsb
subl
mov
push
call
shl
xor
notl
shl
sbb
ljmp
xor
cmp
ljmp
and
pusha
add
inc
push
movsb
or
les
sub
insl
popa
call
mov
aas
in
mov
sbb
inc
stos
ljmp
aam
repz
mov
mov
sub
or
sti
inc
inc
and
xchg
jns
adc
movsl
jl
sbb
loopne
mov
sub
sbb
mov
je
pop
mov
popa
sbb
ret
addl
mov
or
out
cmp
mov
mov
fldcw
add
mov
add
inc
call
aad
sub
cmpl
jg
and
mov
cmc
int3
icebp
xor
push
jae
daa
cmc
dec
in
leave
je
inc
out
xlat
shrb
in
mov
sar
xchg
pusha
mov
push
add
pop
inc
xor
pop
aad
aaa
out
push
je,pn
rorb
inc
xchg
add
mov
test
icebp
popf
mov
xchg
xor
notl
lcall
out
xchg
xor
mov
pop
fdivl
lea
inc
pop
lcall
jne
fisubrl
sub
stc
or
jle
xor
lock
mov
jg
scas
popf
pop
ljmp
out
popf
mov
fwait
movsb
flds
scas
clc
sub
and
dec
inc
mov
adc
in
aam
sub
and
mov
mov
push
movsb
xor
inc
lea
imul
cmpsb
cld
mov
sti
jae
loop
fwait
sbb
stc
cmpsb
outsb
mov
and
pushf
xchg
pop
fsubl
jmp
adc
enter
movsl
dec
sarb
lods
aam
add
addb
jae
xchg
cmp
lods
lock
ljmp
mov
subl
mov
cs
icebp
imul
shll
sar
aaa
cmpsb
xor
cld
mov
push
inc
sbb
cmp
and
fildl
daa
push
fst
hlt
in
cmpsl
push
and
push
cmc
loopne
in
aad
add
sub
pop
jmp
push
loope
xchg
dec
pushf
aam
rclb
push
add
push
fisubrl
push
sub
sti
data16
test
nop
jnp
pop
lds
out
sbb
and
lcall
cld
imull
sahf
lock
lret
loopne
sub
and
es
jns
dec
lret
dec
loop
and
rolb
pop
sahf
imul
out
jp
jl
lods
cmp
sbb
pop
out
sub
andb
push
rol
cmp
mov
test
inc
xchg
jl
pop
sbb
push
in
add
mov
sub
inc
push
fisubrs
xchg
bound
test
mov
outsb
xor
sbb
pusha
lret
outsl
and
sbb
cli
cmc
jge
xor
cmpl
jns
mov
or
sahf
pop
mov
int3
jle
test
aaa
lcall
aas
xchg
shrl
xchg
sti
adc
dec
pop
sbb
cmpsb
fmulp
aam
push
out
adc
shr
cli
mov
insl
lods
outsl
jo
adc
mov
ret
pop
pusha
mov
xchg
jns
xchg
mov
lock
ljmp
dec
ret
mov
outsb
dec
stc
cwtl
push
mov
stos
xchg
mov
les
lcall
xabort
adc
mov
imull
lret
popf
out
test
sbb
push
jne
add
ss
mov
mov
insb
dec
out
daa
inc
das
cld
test
cltd
adc
xchg
movsl
std
sbb
repz
jp
stos
repz
xchg
test
call
sbb
pop
jg
mov
test
cmp
adc
pop
ljmp
jl
hlt
and
xchg
nop
int3
mov
decb
out
outsb
inc
imul
sbb
sti
xchg
mov
fld1
jle
sub
loopne
mov
cmc
push
inc
shrb
jb
add
in
sbb
push
ficoml
xorl
clc
movsl
add
es
or
mov
pop
hlt
xchg
rorl
pop
inc
notl
js
sbb
add
jmp
repz
in
jnp
mov
jb
mov
in
dec
mov
mov
jg
fnstenv
sub
pushf
cs
movsl
mov
shll
movsb
and
lea
lds
lret
push
or
jnp
xchg
fsubrs
push
sbb
test
fdivs
mov
arpl
sarl
addr16
xor
mov
and
scas
push
mov
scas
mov
in
pop
jmp
in
lret
dec
es
push
mov
in
insl
in
cwtl
mov
add
sti
push
lods
movsb
fnstsw
push
movsl
cmp
fs
fs
aad
push
jl
aam
dec
xor
mov
and
int3
decb
mov
mov
lods
arpl
movsl
mov
in
ret
int3
mov
sub
mov
dec
adc
arpl
mov
shrl
repnz
fcomps
mov
in
adc
outsl
aam
inc
push
push
inc
push
sbb
iret
jno
adc
push
les
push
jecxz
mov
cmc
into
and
push
xchg
fs
push
cmc
hlt
sahf
lret
sub
jecxz,pn
adc
repz
mov
sub
fldt
ja
cmp
aam
mov
outsb
xor
xchg
xchg
shrl
mov
push
push
dec
cmp
outsb
data16
inc
dec
in
ret
repz
lret
push
gs
pop
mov
xchg
push
dec
pop
xorl
ljmp
or
and
inc
xor
sbb
lea
sahf
cmp
push
sbb
lock
xor
mov
inc
and
cmpsb
andl
cmp
lea
adc
je
jmp
fbstp
scas
dec
xchg
rcrl
mov
mov
adc
int
lcall
adc
inc
pcmpgtd
jg
push
pop
mov
out
mov
in
sub
xor
jae
lcall
push
push
xchg
addb
dec
xchg
out
insb
loop
lret
mov
add
cmpb
push
fidivl
cld
or
mov
sti
lock
mov
inc
add
dec
or
cmp
sub
std
or
xchg
lods
push
ret
sbb
out
addr16
mov
adc
out
adc
fldt
mov
and
arpl
jle
addr16
add
lret
mov
jae
lds
xchg
pushf
push
push
lcall
mov
ljmp
in
xchg
cmp
je
movsl
enter
lock
mov
jg
mov
adc
push
imul
lods
jbe
test
push
xchg
sbb
pop
lods
pop
das
mov
adc
pop
adc
and
dec
out
clc
ret
in
push
jb
scas
dec
aas
lret
mov
pop
jns
xor
dec
ljmp
bound
and
cmp
aam
into
cli
repz
ss
subl
inc
pop
and
mov
jb
pusha
lods
jbe
sub
inc
xor
inc
outsl
loope
dec
cmp
jge
notb
mov
push
xorl
or
adc
push
popf
fwait
pop
dec
lcall
xor
lret
pop
push
jno
push
pop
clc
daa
popf
pop
cmp
inc
fdivr
pop
pop
mov
int3
cli
scas
cmp
pusha
daa
fdivrl
loop
push
and
insb
xor
lods
lock
movsl
dec
pop
xchg
ret
scas
sti
or
fwait
sahf
push
insl
js
into
cwtl
out
lds
mov
sbb
loope
cs
arpl
or
in
out
jmp
js
cmp
clc
mov
xchg
add
or
adc
sbb
and
mov
pop
call
mov
xchg
mov
insl
cs
aam
add
add
sbb
mov
cmpb
imul
dec
idivl
add
out
inc
ret
cmpsl
push
jbe
push
stos
jecxz
adc
add
mov
movsl
ret
or
pop
cmpsb
lods
jle
test
fwait
loop
xchg
shl
enter
bound
repnz
pop
and
xor
push
test
push
stos
loope
jge
decb
imul
or
pop
pushf
xchg
xor
dec
jb
inc
rcrl
jl
ljmp
cmp
fsubs
mov
add
inc
xor
xchg
add
or
mov
or
and
inc
clc
sub
adcb
loope
and
scas
add
cltd
je
stos
adc
sbb
sbb
cli
pop
int
test
inc
jne
and
leave
pop
dec
or
inc
inc
mov
je
rclb
in
xor
mov
gs
rcrb
call
lods
dec
enter
in
xor
loopne
sbb
add
out
aam
sarb
leave
mov
call
adcb
lock
int3
push
mov
push
aam
in
out
add
mov
dec
pushf
repnz
mov
and
loope
addr16
mov
adcl
out
push
xchg
cmp
inc
lods
add
stos
rorl
inc
sbb
shl
inc
call
pop
push
jno
mov
xchg
sahf
hlt
cmpsl
out
int
dec
push
jo
jecxz
adc
cmpl
push
sbb
jp
iret
cld
in
pusha
fildl
jl
xor
sahf
divb
mov
dec
push
push
mov
das
fnstenv
in
pop
clc
mov
push
xrelease
mov
push
rcrl
pushf
cld
lea
imul
jo
jmp
test
xor
sysexit
rcr
in
ret
iret
jl
mov
xor
mov
js
xor
mov
pusha
or
and
in
mov
push
inc
sbb
mov
mov
pop
daa
bound
inc
fwait
push
inc
mov
inc
push
gs
mov
push
or
outsl
xor
sarb
mov
sarb
test
pop
push
test
dec
out
cmc
xor
cltd
sbb
daa
xchg
hlt
or
jge
push
mov
outsl
xchg
add
mov
in
js
call
movsb
cmpsb
jb
fs
inc
jnp
outsb
stos
or
fistpll
dec
insl
shrb
in
sub
xor
mov
mov
ja
in
adc
xchg
callw
ss
mov
jge
decl
fs
testl
gs
shlb
cmp
test
pushf
in
in
iret
mov
mov
sub
and
sbb
and
push
lds
add
imulb
mov
ds
mov
out
iret
aaa
hlt
xor
and
cltd
or
movsb
sub
stos
and
jae
mov
test
jle
insl
push
xor
test
push
stc
ds
add
pusha
fimuls
jmp
cld
sub
add
gs
dec
lods
jecxz
or
fstps
push
mov
dec
int
adc
aad
sbb
imul
imul
sub
xchg
dec
nop
push
jp
lds
shrb
movsb
pop
test
xchg
dec
mov
mov
notl
and
xchg
cmp
pop
test
inc
add
out
mov
lods
scas
or
xchg
jo
push
push
push
movsb
cmp
ds
aam
push
sbb
mov
add
xor
sbbb
cmp
or
xor
in
push
inc
jo
mov
rcl
cld
cmp
add
jns
pop
xchg
sti
jp
mov
cmpsb
les
pop
sarb
fists
loopne
mov
out
mov
xchg
test
test
daa
add
insb
div
fsubrl
jg
jmp
push
mov
cmp
and
inc
or
push
dec
shrb
jno
outsl
js
mov
dec
jbe
xchg
add
rclb
add
sbb
sbb
mov
jnp
andb
aas
xorb
jl
mov
xor
xlat
inc
xlat
or
inc
cmc
arpl
lahf
js
push
push
cmpsl
scas
and
pushf
out
loope
outsb
adc
mov
outsl
or
data16
call
sahf
adc
cltd
decb
jns
sti
push
sub
andl
jg
jle
xchg
ret
mov
rolb
dec
xchg
aad
ds
push
pop
pop
fisttpll
cltd
adc
ljmp
mov
xchg
std
xor
sti
rcrb
test
mov
es
pop
cli
push
sahf
stc
adc
inc
jg
inc
repnz
pop
mov
add
inc
cmpb
adc
sbb
xchg
in
out
add
add
std
and
imul
das
mov
add
sbb
repz
pushl
ss
xchg
mov
mov
mov
mov
xlat
ljmp
test
mov
mov
fwait
stc
fcomi
hlt
divb
aad
mov
and
xchg
mov
cmp
adc
jp
sub
jecxz
arpl
out
add
push
and
inc
fildll
add
out
cmpsl
sarb
and
in
add
je
cmpsl
push
mov
aas
fwait
jmp
xchg
or
add
mov
fmulp
mov
imul
push
and
test
fwait
and
sahf
shll
call
fbstp
ljmp
daa
mov
or
sbb
loop
ror
xor
loope
js
cmovno
pusha
dec
sbb
pop
inc
out
push
push
fimuls
lods
sub
pop
stos
pop
shlb
out
negb
mov
push
cmp
pop
ficomps
mov
xchg
std
movsb
cmc
cwtl
loop
std
rorl
lea
and
mov
std
mov
fadds
data16
inc
push
or
add
mov
cmp
xor
mov
cmp
sub
decb
arpl
add
popf
mov
notl
adc
inc
bound
pop
popf
ss
in
stos
pop
dec
sarb
cld
bound
and
xorl
aas
add
sub
imull
es
or
pushf
test
hlt
sahf
push
lcall
jge
push
jle
jmp
fbstp
jbe
push
mov
pop
cmpsb
sub
jno
or
fistps
dec
mov
xor
rcll
xchg
mov
xchg
enter
imul
dec
adc
cs
out
icebp
je
test
adc
ss
xorl
inc
cmp
xor
adc
ja
leave
daa
mov
pop
mov
lock
outsb
cmp
add
push
cmp
cmp
cmp
data16
sub
dec
jecxz
mov
mov
push
add
cli
push
enter
ret
xchg
cmc
outsl
push
sbb
ja
and
stos
fstl
cld
sbb
mov
and
xchg
loope
pusha
inc
lock
add
imul
add
xchg
in
lods
arpl
xchg
adc
xchg
mov
rorl
lret
aad
enter
loope
push
ffreep
cld
sbb
sbbb
push
push
sbb
xlat
jge
fdivrs
sub
and
mov
or
outsb
xchg
cmpsb
push
cmp
aad
les
testb
repnz
lea
adc
subb
mov
inc
clc
fwait
mov
div
popa
add
lods
sub
and
push
mov
movl
xchg
cmpsl
mov
sub
decl
cmp
inc
jge
scas
push
frstpm(287
shrl
mov
sub
loopne
cmp
cmpb
or
sbb
fisubl
or
push
andl
lods
adc
cwtl
adc
push
daa
vpaddsb
aaa
in
test
aas
jo
xchg
inc
pop
sbb
bound
ljmp
mov
insl
mov
sub
mov
cmpb
push
ror
jae
mov
sbb
and
inc
fldt
sbb
sub
leave
mov
adcb
gs
js
fldt
out
aad
pop
jnp
mov
sbb
aas
mov
fidivs
adc
jno
js
scas
cmpb
aas
dec
rolb
in
fwait
dec
nop
pop
out
mov
mull
inc
cmpsb
mov
gs
xchg
push
adc
xor
dec
leave
add
push
dec
push
pusha
out
add
out
les
fstpl
add
dec
sahf
jb
loope
mull
add
orb
enter
aas
cwtl
nop
enter
stc
test
cmp
test
push
mov
push
fstpt
outsb
and
ljmp
adc
push
movsb
sti
fbstp
inc
mov
nop
in
paddsw
xchg
inc
or
dec
adc
dec
pop
lahf
add
mov
sub
push
xchg
cwtl
rcr
cmp
and
fbstp
loope
add
repnz
inc
or
push
cmp
ss
movsl
pushw
aad
negl
jmp
pusha
leave
das
cwtl
std
and
int3
popa
call
jecxz
sbb
pop
std
lods
mov
dec
fnstsw
jns
cmpsl
les
in
sbb
mov
daa
pop
imulb
adc
mov
insl
inc
mov
fisttpl
mov
negb
fwait
jle
jecxz
and
bswap
scas
add
pop
adc
sbb
aas
addr16
push
repz
xor
add
push
clc
cmp
mov
jle
mov
inc
mov
in
ret
outsl
scas
ret
or
pop
fsubl
out
inc
repnz
jecxz
adc
adc
addb
icebp
stc
push
out
repz
cmp
pop
xor
repnz
and
pop
lcall
testl
dec
int
lret
mov
and
jl
xchg
adc
jle
mov
cmp
movsb
add
jns
sbb
and
mov
inc
jae
xchg
stos
pop
stos
sbb
imul
dec
lcall
sbb
jnp
pushf
inc
jne
xor
sub
sbb
cmp
jno
sahf
lea
ss
push
jae
shl
bound
loopne
pop
xlat
lret
rorl
jnp
push
out
mov
inc
xor
in
out
pop
jmp
push
push
stc
pop
sbb
pop
inc
dec
mov
xor
outsl
out
mov
faddl
imul
rorl
fcompl
je
jge
cmp
mov
and
dec
test
js
sub
cli
sub
cltd
jge
imul
loop
ret
and
mov
out
fidivrl
in
lds
or
xchg
clc
pop
out
dec
xchg
insl
pop
sub
mov
inc
cmp
ret
pushf
cmp
divb
hlt
jns
push
mov
add
push
mov
mov
xor
fidivrs
dec
cmp
xor
push
and
xor
mov
popa
fisttpl
ss
adc
or
or
dec
or
mov
insl
in
jno
pop
pop
mov
sub
push
inc
jae
insb
into
mov
sub
or
pusha
test
shlb
fdivrs
xchg
insl
inc
stos
adc
xchg
mov
push
add
jg
std
add
mov
inc
ret
adc
mov
jo
jb
push
bound
rcrl
fs
imul
ret
adc
mov
fcmovbe
cld
add
pusha
mov
mov
jbe
ljmp
decl
mov
xchg
hlt
xchg
and
xor
and
mov
pop
mov
add
cmpsb
mov
pushf
push
mov
fadd
idivl
cmp
push
jno
out
stos
iret
ret
out
cli
inc
jne
insb
lods
loope
idivb
cmp
mov
loop
das
mov
xchg
pop
mov
data16
das
jb
cmp
jmp
mov
xor
call
jnp
sbb
mov
pop
cltd
lods
icebp
push
sahf
mov
testl
out
mov
pop
or
sahf
subb
jns
lret
mov
rcrb
jns
enter
orl
fbstp
xchg
addr16
pop
cmp
jp
add
cs
in
sbb
or
mov
ja
lret
pop
xchg
inc
jg
cmp
jo
add
adc
xchg
into
pushf
mov
pop
lods
mov
xchg
mov
sub
mov
sbb
sub
test
dec
test
mov
adc
inc
mov
and
jl
out
mov
xor
arpl
sub
ljmp
ret
das
mov
icebp
pop
push
test
test
mov
jge
and
loopne
jnp
leave
and
cmp
aas
pop
sub
or
shrl
hlt
out
es
cmp
hlt
dec
xchg
xlat
jnp
lret
lret
aas
sbb
ss
mov
mov
jecxz
mov
into
pop
jp
int3
in
fsubs
ss
add
in
addr16
pop
cmp
mov
cmp
icebp
mov
aad
mov
ret
xorb
sub
ret
cmp
pop
fwait
into
loop
dec
cltd
scas
jge
clc
jmp
outsl
mov
popa
movsl
mov
loopne
int3
jns
adc
testb
imul
shrb
in
xchg
sub
inc
call
sub
lahf
enter
popf
push
or
shl
fs
lahf
jmp
or
lret
push
bound
mov
loope
mov
inc
pop
and
roll
xchg
mov
mov
outsb
pop
aaa
push
jne
mov
push
inc
sti
scas
adcl
shl
in
ljmp
shlb
lahf
mov
sti
mov
fsubrs
int3
ret
lcall
pop
jne
ret
aas
imul
pop
push
movsb
ret
pushl
sub
mov
jle
scas
mov
sbb
pushf
fldenv
lds
cmovs
jle
mov
lock
mov
das
jg
jmp
test
fwait
xor
pusha
dec
push
shrl
jae
add
mov
xchg
cmpsb
ljmp
in
pop
and
into
dec
jge
mov
lcall
pushf
shrl
and
push
pop
jmp
mov
cmp
xchg
jne
loopne
inc
xor
inc
mov
adc
add
enter
cmp
cmp
out
sarb
push
ret
insl
stos
mov
cmp
sbb
push
and
imul
imul
mov
iret
enter
pop
mov
les
rcl
and
mov
bound
out
aaa
jmp
push
jg
ss
pop
add
adc
ds
jge
jl
mov
dec
imul
pusha
in
cs
jns
pushf
mov
inc
xor
dec
lret
and
jmp
mull
mov
sti
mov
out
jns
xchg
pusha
mov
movsb
lahf
dec
push
aas
add
inc
rcrb
mov
call
pushf
movsl
shrb
add
xor
mov
outsl
iret
inc
dec
sbb
inc
jl
movsb
movsb
push
mov
shll
xchg
lds
push
lret
mov
push
imul
or
xor
outsb
jnp
dec
dec
xchg
je
mov
sub
stc
insb
sub
mov
pusha
sbbl
mov
rcr
pop
push
popf
pop
shr
mov
dec
into
lock
and
jae
loop
sub
scas
fidivrs
pop
add
sbb
cmpsb
sbb
ljmp
enter
adc
negb
mov
add
inc
dec
xchg
ss
call
out
insb
inc
mov
and
mov
iret
negb
cwtl
pop
xorb
and
add
sahf
jne
jle
jb
mov
mov
into
push
shlb
sbb
insl
aas
inc
cwtl
pop
push
int
xlat
fdivs
popa
xchg
iret
jnp
cltd
pop
js
rol
xchg
pop
or
xchg
jecxz
mov
aad
pop
shrb
sbb
sub
pushf
test
stos
xchg
ds
data16
jnp
std
jecxz
mov
in
fdivrs
jmp
push
lret
cmp
push
push
mov
dec
lret
hlt
repz
rolb
into
push
bound
xchg
push
mov
mov
addl
bound
push
repz
sti
sub
mov
dec
inc
cmc
dec
add
cltd
dec
movsb
jb
adc
jmp
repnz
mov
push
fwait
ret
push
add
xchg
push
jb
into
enter
fmul
inc
int
push
pusha
cmp
ret
nop
adc
jmp
adc
fdivp
mov
push
insl
gs
sbb
push
fidivrl
idiv
movsl
jns
sbb
push
hlt
inc
adc
cmp
or
cltd
inc
and
cltd
rolb
jb
pushf
mov
mov
mov
adc
in
test
xor
dec
sarl
mov
pop
cmc
cmc
popa
daa
sub
jg
fists
loope
test
in
mov
outsb
loopne
push
fsubs
push
and
jl
and
or
aam
xchg
pop
pop
aad
decb
jl
cmovg
inc
gs
xor
js
add
gs
mov
iret
in
sahf
xchg
xor
pushf
lods
xor
stc
xor
ret
fistpl
fwait
pop
jl
cld
or
cli
sbb
push
add
jp
pop
sub
push
jle
insb
cltd
or
orl
dec
es
or
cmpsl
ss
push
add
out
push
adc
mov
pop
daa
fsubs
or
pop
sahf
mov
jno
mov
jb
enter
sub
cmp
lahf
dec
xlat
mov
jbe
fimuls
test
arpl
inc
adc
mov
add
jo
dec
mov
and
sbb
rcrb
stc
jmp
shl
loope
xchg
pop
sub
or
dec
xor
mov
inc
es
mov
jge
arpl
xchg
sbb
cmc
movsb
scas
les
adc
push
ret
and
and
loopne
in
shlb
outsl
sbb
aam
popa
jno
out
aam
mov
leave
nop
es
mov
jle
add
ljmp
pop
pop
sub
sbb
into
test
xchg
test
mov
cld
mov
scas
out
lcall
xor
sub
shlb
testb
addr16
or
adc
push
xor
mov
mov
mov
out
mov
or
push
pop
rcrb
insl
mov
dec
sub
ret
mov
pop
xchg
add
je
adc
iret
addl
insl
cmpsb
push
cmp
push
or
and
or
fists
lgdtl
jb
or
or
mov
nop
test
aam
and
ds
data16
mov
sarl
cvtpi2ps
sub
adc
cmp
pop
add
fisubl
cli
fstpl
or
jnp
popa
out
mov
mov
cld
mov
loop,pt
daa
mov
ljmp
cmpsl
push
ja
out
das
stos
das
hlt
lret
cmpsl
pop
add
shl
jl
loopne
fcmove
pop
adc
in
test
movsb
insb
jg
ss
int3
xor
xor
xchg
cmp
cmp
popf
es
sub
leave
js
mov
iret
mov
int
repnz
repnz
xlat
orl
xchg
test
push
test
jo
fldl
xchg
ficomps
mov
sbb
ja
push
scas
dec
fisttpll
popf
mov
xchg
mov
mov
fwait
add
loop
call
cmp
mov
sub
jb
lahf
cmp
jno
lea
xchg
sbbb
sub
sbb
sbb
arpl
in
sub
sbb
scas
mov
sbb
addl
into
mov
pop
idivb
adc
dec
pop
lcall
fwait
xchg
dec
outsb
aad
push
mov
fnstcw
lock
mov
add
das
push
xorb
mov
cmp
out
xchg
out
jp
pusha
jg
ss
mov
dec
or
pop
sub
inc
jb
inc
ljmp
es
mov
push
push
sbb
leave
cmc
je
clc
fcomps
ret
sub
inc
out
imulb
pop
das
mov
cli
mov
sub
push
sub
mov
mov
mov
sub
and
mov
icebp
in
push
imul
inc
push
dec
and
fldenv
ljmp
add
and
ja
or
adcl
add
inc
es
xchg
add
push
test
aas
mov
lods
inc
pop
and
dec
push
arpl
dec
shrl
xor
xchg
and
cmpsb
jmp
lret
adc
sarb
test
lods
xor
adc
cltd
test
xchg
jno
mov
stos
lock
mov
jae
inc
lods
push
xor
imul
jbe
push
ret
mov
push
mov
mov
adc
xor
jo
push
test
cmpsl
pop
sbb
mov
cmp
aam
fsubr
rcl
mov
test
push
inc
or
xchg
pop
into
leave
dec
jae
outsl
dec
int3
in
add
ret
nop
mov
movsl
jmp
add
test
xchg
cs
push
in
inc
ficompl
push
movsl
push
aad
loop
pop
cltd
adc
mov
mov
stos
mov
andl
nop
jp
fidivs
xchg
push
add
out
aad
and
pop
movb
mov
mov
rolb
ret
js
dec
push
loope
add
lds
adc
pop
das
std
in
dec
jmp
mov
roll
fidivl
pop
popf
movsb
out
xor
int3
inc
dec
jne
fnstenv
hlt
movsb
test
cli
gs
push
dec
push
cmpsl
andb
pushf
cmc
pushf
test
mov
in
addr16
jp
push
pusha
lret
or
aas
push
imull
and
int
loop
xor
mov
orb
lahf
mov
aas
cmp
inc
dec
and
mov
fld
mov
cs
mov
test
push
sti
inc
es
popf
jle
shr
mov
sti
rorl
sti
std
lret
jecxz
xchg
paddsw
inc
daa
ljmp
xchg
xchg
jl
push
lea
stc
arpl
mov
mov
mov
inc
sbb
jp
xchg
nop
push
aas
lods
push
aam
jp
shrb
mov
leave
lods
sbb
mov
popf
lea
in
cld
mov
add
or
xchg
mov
mov
push
sub
sahf
fistpl
cli
and
adc
sti
imul
inc
mov
pop
out
push
imul
inc
ss
jne
mov
sar
jp
add
cmc
cld
push
pop
jge,pn
scas
inc
sbb
sub
bound
and
or
divb
movsl
sbb
add
in
jmp
mov
ds
cld
push
xchg
mov
lods
dec
ret
scas
push
add
int3
push
leave
pop
mov
xchg
cmpsb
sbb
dec
jl
mov
mov
inc
lret
leave
xchg
popf
sahf
dec
mov
test
xchg
loope
dec
mov
and
faddl
mov
imul
mov
sarl
xchg
mov
mov
or
hlt
or
xchg
xor
or
jb
sti
or
in
mov
xor
arpl
in
cmp
cmp
shlb
cmp
adc
jecxz
movsl
sbb
addr16
jnp
loopne
add
xchg
scas
and
jmp
jle
loopne
sahf
jecxz
lea
mov
pop
xor
nop
or
lods
mov
push
jmp
lea
xchg
aam
xor
push
sbbb
shl
dec
jp
test
mov
add
fcompl
sbb
insb
sbb
dec
insl
jns
lret
fistl
xchg
andl
add
subb
lock
out
push
dec
jp
imul
inc
sub
stos
sti
xor
xchg
vcomisd
lock
dec
lds
push
mov
lods
inc
cmp
or
cmp
pop
xor
clc
mov
mov
adc
sub
rcl
test
mov
rorl
addr16
ljmp
add
mov
cs
sbb
pop
push
addl
je
test
outsb
and
out
dec
push
das
jns
xor
jg
insb
addr16
shl
pushf
mov
push
sub
out
xchg
push
mov
xor
int3
ficomps
jmp
mov
bt
add
mov
adc
stos
cmp
lret
mov
addl
loop
out
leave
lret
es
call
mov
and
subl
sub
cmp
mov
in
sahf
jbe
cwtl
outsb
cmp
lds
shlb
inc
cmp
mov
mov
and
mov
loope
leave
in
jle
nop
insb
je
push
movsb
jnp
push
into
lret
lahf
es
adc
push
lods
add
xchg
adc
cwtl
and
add
push
mov
movb
call
push
mov
jb
mov
cmp
xchg
mov
adc
mov
sbb
jb
into
mov
fs
outsl
inc
bound
adc
cltd
and
andb
sti
data16
filds
ss
dec
or
xchg
sbb
fdivs
sbb
sbb
jp
lock
xor
pop
rcll
arpl
jno
rolb
and
push
add
xor
cld
inc
inc
clc
bound
push
xchg
aas
mov
and
shlb
stc
mov
xchg
ret
cmpl
ficoms
pop
xchg
jnp
decb
ljmp
pop
xchg
mov
mov
dec
imulb
fwait
push
mov
add
and
xchg
mov
pushf
push
popf
mov
cmp
subl
sbb
sbb
and
fwait
packsswb
pop
inc
mov
ja
stos
push
pop
jo
sbb
jno
push
jne
out
flds
gs
lods
cmp
cmpb
inc
xor
jmp
pop
mov
mov
cmp
faddl
or
push
or
jmp
call
shll
fisttpll
cld
cmp
dec
jecxz
mov
mov
add
and
call
jle
lahf
mov
fcoms
inc
inc
ja
stc
mov
iret
icebp
cmp
loopne
xchg
dec
ret
stc
imul
sti
outsl
ret
xor
dec
jecxz
mov
gs
push
popl
ja
loope
mov
xchg
pop
jnp
or
push
js
gs
mov
cmc
jge
sub
cmp
stos
adc
add
jmp
mov
mov
stc
pushf
adc
nop
jmp
xor
xchg
jne
push
push
mov
mov
stos
sub
inc
imul
jne
shlb
bound
sbb
pusha
push
test
mov
fiaddl
outsl
cmp
cmc
cmp
lret
mov
fdivl
fnsave
hlt
dec
pop
mov
inc
lods
xor
dec
push
sahf
add
testb
pusha
cmpsl
inc
mov
and
push
fisubl
push
or
and
sbb
add
push
add
push
test
dec
cmp
fidivrl
mov
dec
jns
xorb
bound
adc
call
xor
daa
jo
push
dec
popf
push
push
mov
mov
jg,pn
push
xchg
inc
icebp
movsl
sub
sahf
lods
xlat
jp
add
nop
cmp
jle
je
dec
jae
mov
push
inc
mov
lods
fistps
mov
inc
pop
mov
les
shll
dec
std
out
aam
sub
sub
fstl
dec
or
add
push
clc
sub
lods
sub
sbb
popf
cmp
cld
jno
sbb
loop
testl
adc
push
and
jns
hlt
pop
bound
inc
stos
scas
leave
push
xchg
in
mov
scas
mov
push
xor
xor
mov
pop
mov
adc
fisttps
mov
adc
xchg
dec
mov
icebp
fdivs
adc
xchg
sub
or
jge
repz
pop
lcall
pop
shlb
js
fldenv
js
rolb
lea
and
jg
and
jbe
imul
add
jle
popa
sbb
add
and
hlt
mov
xchg
icebp
and
ljmp
dec
adc
push
pop
loope
push
or
sub
mov
andl
imul
mull
mov
pop
ja
leave
jle
mov
lds
test
ss
mov
movsb
pop
ret
shrl
int3
jae
push
repz
test
pop
insb
shll
push
data16
inc
rcll
mov
scas
inc
out
xor
adc
aaa
push
test
mov
insb
daa
dec
rol
out
dec
inc
jle
dec
jne
lock
sbb
lcall
fmull
xlat
jge
mov
mov
fisttpl
push
stos
xor
jle
movsl
cmp
pusha
jecxz
test
inc
imul
mov
cld
mov
mov
sbb
mov
dec
scas
add
or
test
mov
aaa
and
rclb
and
xor
pop
out
fldt
inc
into
rolb
mov
imul
xor
cmp
jnp
jne
repz
jl
movsw
push
aad
cs
int
lahf
iret
fadd
test
fdivr
add
and
pop
out
mov
subl
jmp
or
jnp
mov
stos
lods
mov
sti
iret
ss
xorb
fnstenv
ljmp
xorl
push
stos
mov
aas
xchg
pop
jmp
sub
into
dec
sbb
rcl
cmpsl
das
popa
or
dec
xchg
dec
push
mov
adc
in
rcr
push
dec
shll
ds
loop
cmp
insl
push
or
jg
int3
pop
lret
push
sbb
js
dec
scas
jae
out
arpl
and
cwtl
inc
pop
jg
xchg
icebp
inc
xchg
movb
inc
scas
add
pop
jbe
fs
jge
stc
das
ficompl
pop
ror
das
aaa
in
fistpl
inc
es
icebp
dec
jle
movsb
pop
arpl
or
jg
into
or
cmp
popf
je
jg
lret
sti
mov
out
ljmp
add
std
mov
fcoml
arpl
mov
cs
xchg
or
cmp
aam
jmp
mulb
dec
xchg
jmp
dec
dec
insb
rorl
jb
pushf
nop
pushf
mov
fisttpl
cltd
inc
mov
out
mov
and
mov
sbbl
xchg
pop
inc
mov
sub
pusha
dec
fcompl
pushf
lea
ds
dec
fsubr
mov
push
fstps
cmp
rcll
and
loop
xor
mov
pop
push
mov
subb
aam
mov
mov
pop
daa
push
pop
jge
hlt
std
insl
aaa
jb
stos
stos
pop
and
sahf
test
mov
loope
loopne
call
ficoml
dec
aaa
pusha
lret
jle
fcomps
xchg
orb
mov
cltd
cmc
popf
fbld
hlt
cltd
push
cld
mov
iret
ret
jno
pop
cmc
inc
lahf
fildll
paddq
xchg
jecxz
push
ja
sbb
jnp
das
push
sbb
in
in
xchg
pop
jb
sarl
cmp
fwait
inc
pop
push
adc
lods
mov
test
js
cmp
jae
mov
xchg
push
pushf
xchg
into
ljmp
in
add
add
mov
pop
pushf
push
sub
add
sub
imul
data16
mov
xchg
jge
call
cmc
mov
iret
cs
xchg
sub
sbb
sub
sub
into
mov
sbb
sub
jne
rcr
jg
sub
cmpb
pop
stos
mov
adc
jecxz
xchg
push
gs
cmp
sbb
stos
xlat
pop
jno
push
ret
lea
jb
mov
jae
outsl
add
pop
push
inc
ja
mov
scas
outsl
dec
cltd
pop
sub
jl
movsl
mov
ds
lahf
hlt
subb
aam
fstl
nop
pop
mov
mov
mov
lods
jo
mov
dec
fsubs
sbb
movsb
push
rclb
ljmp
mov
adc
jne
jne
jae
cwtl
cltd
insb
lock
pop
pop
inc
push
imul
inc
mov
pop
add
and
push
fyl2xp1
das
xor
jne
popf
cmp
daa
push
sarb
imul
mov
test
shlb
dec
mov
sub
mov
jmp
out
jge
add
push
jecxz
and
addr16
lret
xchg
shrl
fsubrs
dec
sbb
xor
push
push
jnp
cwtl
shlb
adc
icebp
push
mov
jb
sti
sbb
lds
mov
lods
dec
and
push
outsl
in
mov
dec
xchg
sub
cmc
inc
push
fnstenv
in
pop
aas
add
mov
dec
xor
lea
ja
aaa
sbb
sub
push
aaa
es
add
vgatherdps
lea
and
mov
or
jecxz
mov
and
fdivr
jbe
inc
icebp
mov
xor
jne
in
jge
mov
subb
lock
xchg
add
jnp
inc
fstl
push
lea
movsb
insl
and
ficoml
js
xor
pop
xchg
ss
insb
std
imul
xor
push
test
mov
orb
or
jle
adc
std
cmpsl
std
sbb
dec
rcrl
push
mov
adc
fsubrl
lret
inc
jno
movsl
ret
lahf
xchg
call
test
mov
jae
push
stos
int3
mov
cmp
push
or
push
or
inc
out
add
lret
lcall
cmp
mov
imul
xor
hlt
in
cmp
jae
test
ss
jb
inc
pushf
mov
adc
insl
cs
testl
xchg
mov
dec
and
xchg
pop
repnz
hlt
inc
pop
mov
movlps
jmp
mov
decl
pop
decl
jnp
add
cmpsb
call
pop
or
jo
fs
loopne
bound
and
repnz
mov
push
mov
int3
jmp
add
imul
push
scas
decl
or
sahf
push
mov
jo
push
jne
stos
packuswb
mov
jbe
or
mov
lahf
mov
insl
outsb
pop
mov
dec
xor
rorl
xchg
or
jge
xchg
push
push
push
jae
scas
lret
sub
out
pop
push
sti
in
jge
mov
loopne
repnz
xchg
jle
pop
test
cmp
mov
dec
in
jle
and
jno
lret
daa
or
les
push
loop
int3
fwait
pop
cltd
add
cwtl
fwait
and
mov
inc
aam
pop
repz
pop
ds
push
xchg
mov
mov
lods
and
adc
sbb
lock
jo
cmp
and
js
push
cmp
js
xchg
in
mov
xchg
jb
ret
dec
repz
js
xor
xchg
push
mov
mov
inc
scas
js
inc
inc
out
sbb
dec
pop
pop
das
fidivl
xor
es
divb
pushl
stc
cmp
push
stc
sub
push
data16
out
mov
test
sbb
sahf
mov
das
or
in
cwtl
mov
add
xchg
push
dec
pop
cmpl
repz
in
stos
inc
iret
inc
jb
addr16
es
xchg
cltd
rorb
dec
xchg
mov
cmpsb
sti
mov
mov
xchg
xlat
loope
inc
imul
push
xor
jg
int3
fnstenv
add
lret
pop
xor
adc
fidivl
fdivrs
sti
insl
stos
sbb
add
inc
lret
fdiv
and
sub
cltd
sbb
aad
sub
and
and
jle
mov
jbe
mulb
stc
fcmovu
dec
fisubrs
cmp
leave
sbb
xor
cmc
arpl
aaa
std
es
pop
je
sub
jae
mov
dec
pusha
jl
jae
dec
daa
mov
mov
addl
mov
test
pushf
shll
lret
loope
mov
sti
je
sub
fwait
pop
mov
dec
sarb
shlb
pop
cmp
pusha
movsl
sarl
fbld
xacquire
loope
pavgb
xchg
rclb
add
clc
fucomp
test
cld
icebp
pop
and
nopl
cs
cmp
xor
jmp
push
gs
and
adc
imul
jp
sahf
rolb
xchg
in
pop
mov
push
mov
js
lcall
jp
sti
imul
mov
inc
jbe
pop
adc
mov
dec
pop
dec
cmpsb
fwait
cld
ja
aaa
cld
dec
popa
decb
xchg
aas
cmp
orl
icebp
mov
inc
add
pop
decl
pop
inc
dec
dec
adc
outsl
andps
inc
adc
cltd
subl
fsubr
pop
inc
sub
test
cmpsl
mov
stc
pop
adcl
adc
lds
cmp
arpl
cld
push
lods
sub
and
and
cs
cwtl
push
in
jp
lret
das
jo
push
mov
sub
jbe
fsts
fidivl
sbb
and
sti
fimull
test
call
pusha
in
adcb
test
in
xchg
and
stos
testb
add
mov
test
dec
int
jo
hlt
iret
xor
enter
adc
xchg
negl
in
pushf
jmp
icebp
xor
or
lret
sti
fidivrs
mov
mov
pushf
push
in
push
in
fldenv
xor
xor
pushf
stc
mov
jne
cwtl
hlt
pusha
xlat
out
std
pop
push
fcomps
push
ja
jg
lret
dec
aas
mov
fldenv
enter
mov
sbb
inc
loope
sahf
fbld
scas
push
add
dec
fidivs
lret
xchg
fstpl
add
ds
out
fs
mov
or
call
out
nop
lods
adcb
xchg
ffreep
xor
mov
fistl
imul
pop
jbe
push
inc
cli
test
lcall
orb
sbb
xor
sub
xor
ja
aad
sarb
ffreep
jno
adc
pop
repnz
out
push
cmp
mov
iret
push
mov
imul
stos
ss
jge
test
cmpl
push
setl
pop
jno
xchg
push
mov
jb
aad
fdivrl
mov
addl
xchg
data16
repz
pop
inc
xchg
leave
stc
loope
sahf
dec
jnp
hlt
mov
inc
out
pop
push
jle
cmp
push
gs
stos
cmp
sahf
xor
dec
inc
iret
das
sub
daa
sub
fdivrs
jo
mov
lock
jne
sbb
aad
inc
mov
push
mov
sub
dec
jg
inc
cltd
sarl
enter
sbb
in
andl
xchg
add
xchg
push
jecxz
jecxz
and
mov
fwait
rorb
xor
dec
or
stos
push
xor
inc
mov
dec
fmulp
mov
mov
sub
mov
mov
xchg
jg
addr16
inc
sbb
jo
shll
add
int
leave
pop
imul
bound
jno
popf
mov
xchg
stos
mov
sub
mov
xlat
cmp
lods
xchg
jp
cmp
test
xor
insl
stos
xor
sbb
fisubl
in
dec
sub
fcoml
fcomip
mov
out
pop
rcrl
sti
cmp
cmovs
xchg
fcoml
fnstcw
movsb
mov
ds
mov
push
xorl
xchg
fldt
cmc
lret
jns
out
das
rorb
sahf
xor
ljmp
add
std
push
fsubrl
insb
cmp
xor
test
or
pop
into
ret
loopne
popf
repz
jae
dec
enter
and
mov
xchg
inc
iret
sub
popa
xorl
pushf
sbb
fsubs
pusha
test
xor
or
pop
sub
xor
inc
jb
leave
xorl
hlt
xchg
lods
cmp
adc
dec
ljmp
and
and
pop
jns
xor
ljmp
daa
dec
pop
xor
idiv
jb
xchg
and
push
test
push
or
adc
cmp
mov
dec
jnp
inc
int
sub
lret
pushf
push
ret
cmp
lret
pop
push
clc
test
call
cwtl
mov
and
sbb
sbb
sub
test
outsl
xor
or
xor
aas
push
bound
repnz
jp
int3
dec
push
ja
out
ja
data16
jne
inc
nop
mov
dec
cli
or
frstor
lds
jo
mov
dec
int
xchg
aad
int3
sbb
ljmp
into
outsl
ss
sub
cs
testl
aam
aaa
and
dec
fiaddl
int3
jecxz
adc
adc
loope
add
mov
out
sbb
test
push
movsl
add
mov
jmp
jns
ret
fstl
lods
xchg
mov
jle
jne
je
cli
jecxz
mov
sub
mov
cmpsl
mulb
imull
icebp
push
mov
dec
cmp
repz
cmp
push
jecxz
or
sbb
cmc
push
sarl
add
xchg
mov
xchg
jp
pop
jecxz
cld
inc
aad
mov
dec
or
fmul
sub
mov
scas
sbb
js
insb
loop
jp
scas
push
push
fprem1
arpl
loop
jecxz
ret
das
mov
clc
ja
and
imull
test
push
or
xor
in
das
cmpsb
jne
dec
notl
inc
xlat
cmp
popa
xchg
pop
jp
sbb
scas
ss
arpl
icebp
mov
lock
push
adc
cltd
mov
aaa
pusha
movsb
mov
fcmovnbe
jb
rcrb
test
push
inc
out
cmpsb
js
cs
and
imul
mov
sbb
mov
jge
cmpsb
jo
mov
insb
inc
lds
lahf
and
adcl
pop
jno
ja
or
repz
insl
in
jnp
leave
sbb
testl
es
mov
bswap
sbb
out
dec
cli
xchg
xor
mov
lea
gs
xchg
push
cmpsl
push
pop
xchg
hlt
or
dec
shll
popa
scas
stos
jb
xor
rcr
mov
jmp
or
inc
and
adc
pop
in
pop
int
or
lock
sti
push
aad
and
xchg
push
test
inc
insl
imul
inc
iret
test
jg
dec
nop
jecxz
mov
fstps
sar
sbb
sbb
push
nop
repz
outsb
jnp
push
pushf
cmp
push
iret
jae
mov
insb
mov
push
je
mov
xor
and
je
sahf
ds
loopne
jl
repz
sarb
jns
inc
mov
test
or
rorl
fs
pop
clc
repnz
into
sub
push
out
or
outsl
dec
pushf
jp
jl
mov
fisubs
sbb
xchg
xchg
jne
mov
es
jo
loop
sbb
ja
ret
fdivr
cld
out
cmp
fsubr
adc
sub
jns
dec
or
cwtl
or
adc
decb
dec
rolb
or
cmc
das
les
cmpb
mov
arpl
ds
inc
xchg
cmp
in
fs
sub
call
adc
pop
jne
push
pop
jmp
loopne
scas
test
mov
add
sub
or
aas
adc
mov
fnstenv
mov
jb
mov
fnsave
mov
loope
inc
lret
popf
in
test
in
sbb
inc
cmpb
das
insb
cmp
or
mov
scas
nop
stos
rolb
cmp
ret
imul
cmp
mov
stc
loopne
shr
scas
and
cld
adc
in
fwait
in
xlat
fcmovb
cs
je
xorb
xor
jbe
xor
shll
ljmp
out
out
xor
leave
stc
int3
mov
jo
lahf
scas
jne
jo
push
jmp
push
test
cs
dec
cmp
lds
out
out
pop
cmpsl
lock
or
sub
adc
imull
out
xor
xor
daa
cmp
addl
lahf
add
inc
aaa
imul
xchg
mov
pop
dec
insb
adc
mov
add
push
lcall
cmp
in
inc
or
jmp
sbb
add
ret
or
leave
mov
insl
pop
aad
jecxz
xor
mov
shl
mov
loop
jecxz
cmp
adcb
mov
sub
push
mov
nop
in
push
jp
push
ljmp
imul
scas
xchg
ret
and
mov
sahf
lcall
orb
adc
push
xor
xchg
xchg
iret
mov
mov
ss
pop
outsb
out
idivw
lock
in
cltd
jle
mov
xor
sub
int3
ss
pop
inc
andb
fnstcw
fisttpl
test
inc
jbe
ja
pushf
into
push
mov
pop
jae
cmp
and
sahf
push
and
pusha
das
in
jle
cmc
mov
jg
xchg
push
mov
dec
rcrb
decl
into
pop
add
and
dec
sub
and
xchg
cmp
push
hlt
dec
movsl
hlt
fcmovnb
cmp
cmp
mov
aaa
lea
and
add
inc
pop
shlb
lcall
jns
call
test
adc
push
movsl
das
adc
mov
sub
push
popf
and
les
sub
inc
add
add
das
lock
add
pop
add
hlt
subl
pop
imul
or
jle
add
test
lods
mov
pusha
lods
cmp
xchg
ss
inc
cmp
ja
lods
mov
cmp
push
adc
out
mov
fdivrl
shll
jo
aad
les
test
pop
fidivl
es
repz
mov
adc
aas
mov
dec
cmp
adc
add
test
push
cmp
popa
and
or
dec
dec
mov
cmp
or
pop
cmp
mov
pop
cmpsl
popa
test
jno
repz
pop
sub
leave
fcomps
fbstp
lods
stos
sub
dec
mov
xchg
ret
in
adc
ret
rorl
int
and
call
loope
jno
les
popa
mov
and
mov
adc
dec
icebp
je
or
jge
rcrl
inc
xchg
in
xchg
or
insl
mov
fisubrl
mov
pop
test
scas
addl
clc
mov
mov
pop
push
adc
or
jb
lock
and
hlt
cmp
test
aas
cmp
testl
sti
fidivs
xor
fmuls
addr16
in
sbb
aaa
pop
lods
in
add
cmpsb
push
data16
sub
cmp
sbb
sub
cmc
mov
ffreep
pop
xchg
lcall
mov
or
xlat
mov
mov
xchg
mov
cltd
mov
insl
jmp
popf
mov
push
adc
dec
mov
mov
dec
jmp
jge
mov
jmp
or
and
aad
xchg
lahf
scas
fistpl
sub
pop
mov
push
mov
notb
pop
or
mov
sbb
xor
fldl
push
test
cwtl
jecxz
shll
jl
mov
push
mov
imul
mov
sbb
imul
call
fucom
clc
add
scas
xchg
ljmp
sbb
mov
popa
out
jge
mov
adc
addr16
push
aam
repnz
popa
lcall
jmp
lea
mov
lods
jno
out
int
ljmp
insb
or
aad
sub
pop
cmp
mov
xor
test
out
nop
xchg
cwtl
popa
push
mov
std
lds
mov
inc
pop
sub
aas
xchg
jge
push
jl
dec
mov
imul
add
daa
sub
dec
out
js
ss
mov
aaa
ret
int
cwtl
aad
mov
mov
loope
jne
shl
andl
gs
movsb
int
aas
mov
xor
loop
mov
movsb
push
fs
jb
loop
jno
pusha
xlat
adc
xor
into
add
pop
and
mov
cli
addr16
sub
add
sahf
sbbb
dec
adc
add
mov
pop
cmpsb
jp
cld
mov
outsb
or
aas
popa
add
leave
movsl
xchg
and
jmp
insl
ljmp
test
xchg
stos
cwtl
int3
jge
jne
push
fwait
xchg
jae
ret
push
out
iret
std
repz
and
inc
enter
or
nop
movsb
dec
mov
test
loop
push
cli
push
or
leave
out
call
leave
jne
testb
aam
aad
xchg
inc
push
ret
pop
aam
cmp
ret
cld
clc
push
std
push
addb
orl
push
inc
repz
punpcklwd
pusha
inc
xorb
xchg
mov
and
adc
imulb
pop
inc
or
into
add
cli
nop
push
lret
jb
das
inc
jge
shrl
lret
lahf
scas
mov
in
icebp
dec
sbb
lds
movsb
push
jecxz
mov
cmp
rcrb
jbe
fwait
mov
dec
mov
cld
sbb
mov
ret
pop
xor
mov
adc
jne
hlt
lea
push
sbb
lds
gs
cmpsb
sbb
aam
sbb
lods
pavgw
jecxz
cmp
js
jg
push
sbb
mov
mov
mull
jne
ret
and
or
xchg
or
cmp
test
xchg
pop
cmp
push
gs
out
push
cmc
out
adcl
sbb
pop
adc
dec
popf
pushf
cmpsl
repz
cmp
adc
inc
fadds
clc
fsubr
lcall
sti
cmp
js
dec
cmp
jno
int3
push
imul
inc
cmp
cli
push
mov
mov
aam
stos
sub
sub
outsl
xor
xchg
dec
pop
js
dec
mov
mov
mov
mov
lahf
stos
dec
cmpl
mov
jo
in
and
push
jl
sbb
subb
pop
jmp
lret
movsl
xchg
xchg
adc
jecxz
cltd
scas
pop
cmp
xor
test
shrl
jmp
and
pop
gs
sub
lahf
xchg
lods
cs
inc
adc
hlt
jge
xchg
test
jo
lret
testb
jmp
pop
sub
loop
dec
sub
xor
out
dec
xchg
jp
insl
negb
mov
add
add
cltd
fwait
add
ja
mov
incb
pop
sub
or
out
das
lock
imul
lcall
lcall
mov
outsl
aad
cs
repz
xchg
cmp
push
dec
daa
xor
in
fs
mov
xor
adc
mov
test
adc
das
xor
xor
std
loope
push
cmp
xor
cld
sarb
jae
cwtl
idiv
stos
inc
fwait
mov
push
mov
jnp
xor
mov
and
hlt
and
shrb
mov
pop
jo
pop
inc
sbb
faddl
fcompl
ja
xlat
lds
sbb
dec
mov
jne
mov
and
in
out
jge
jecxz
add
xor
and
std
cli
arpl
in
xlat
xchg
pop
inc
popf
push
mov
call
xchg
sbb
adcl
mov
lock
mov
fmulp
adc
xchg
and
jecxz
fnsave
jnp
adc
movsl
jle
mov
mov
jmp
cli
add
stos
arpl
push
inc
jg
and
jb
lret
sub
pop
xchg
add
push
clc
cld
dec
sub
push
mov
xchg
fistpll
inc
fbld
jl
mov
scas
cmp
aam
inc
pop
push
sub
jns
orps
xor
jbe
movsb
js
iret
stos
test
jnp
xor
lock
jns
cmp
lcall
je
xchg
imul
inc
jb
outsl
aaa
push
shlb
sub
in
xor
std
add
daa
or
bound
add
std
lret
mov
out
mull
adc
cmc
jp
jge
xlat
dec
adc
sahf
js
jo
cmp
scas
ret
andl
and
movb
loopne
mov
jbe
xlat
push
js
or
test
cli
cli
test
xor
enter
movsl
sbbb
inc
sbbb
pusha
sahf
sbb
push
cmpsb
cs
arpl
add
cs
sub
xor
orb
sub
aam
adc
jnp
and
cmc
add
popa
sti
mov
cmp
cmp
pop
sbb
jo
bound
ljmp
sub
pop
aam
int
cmp
xchg
or
and
sub
sarb
sub
dec
out
dec
rcl
dec
out
je
adc
mov
adc
ja
cmpl
insb
bound
stos
mov
popf
mov
xchg
jno
jp
lods
fidivl
or
mov
pop
push
pop
insb
outsl
paddusw
mov
inc
aam
and
rclb
inc
cmp
addl
pop
mov
fimull
add
es
push
sub
outsb
scas
xor
js
lahf
add
mov
fdiv
push
xor
mov
pushf
mov
addl
push
push
out
adc
jecxz
dec
dec
addr16
jmp
mov
push
sbb
aad
cld
sbb
pop
out
or
mov
add
ficompl
jo
mov
dec
mov
add
xchg
addl
xchg
in
jae
lcall
dec
mov
out
pushf
mov
sbb
add
mull
xor
xor
stc
pop
mov
cmp
xlat
fisttpl
add
ds
or
mov
adcl
fwait
xchg
mov
std
xchg
mov
imull
lcall
and
xchg
ret
xor
xlat
jo
stos
jmp
and
add
lret
aaa
jmp
cs
push
inc
test
aaa
out
or
push
or
sbb
xchg
lahf
push
and
adc
and
xor
jmp
addb
dec
fs
pusha
test
andb
bound
fwait
scas
inc
fiadds
sbb
dec
push
ljmp
jne
cmpsb
mov
adc
cmp
enter
push
mov
mov
lock
out
daa
mov
mov
dec
push
test
mov
cmp
in
notb
inc
fwait
icebp
jg
into
fmuls
daa
ja
xchg
in
xchg
inc
push
sbb
mov
sbb
add
mov
push
pushf
insl
icebp
adc
es
mov
not
shl
push
cmp
daa
repnz
pop
bound
inc
mov
lea
sub
stos
mov
xchg
mov
movsb
aaa
lea
jp
mov
add
push
jb
adc
jle
orl
mov
sbbb
out
dec
arpl
mov
mov
movsb
fdivp
icebp
mov
or
lcall
push
mov
xor
push
xchg
jecxz,pt
imul
mov
loop
pop
into
inc
gs
out
in
icebp
sbb
xchg
adc
adc
in
ss
pop
aaa
pop
jp
leave
mov
cmp
cmp
jp
sbb
int
inc
push
imulb
dec
push
fucomip
or
movsl
pop
ljmp
adc
mov
push
sub
sub
jne
jecxz
outsl
shrl
jmp
jbe
sbb
adc
or
hlt
popa
fisttpl
xor
hlt
clc
jl
pop
iret
data16
adc
stos
jo
leave
mov
mov
or
push
xor
int
shlb
cltd
pop
std
jno
pop
mov
repnz
in
or
pop
sbb
ds
cmp
stos
in
ficomps
jnp
dec
pop
jbe
imul
add
ret
aaa
shlb
sub
mov
mov
sbb
or
cmp
int
stc
push
stos
inc
push
mov
mov
xchg
pop
push
adc
mov
dec
ucomiss
andb
cmc
add
and
pop
or
insb
imul
fidivl
mov
lea
fcmovu
pop
push
xchg
pop
ret
repz
inc
pop
mov
xor
jb
jae
inc
cmpsb
nop
cmp
or
sub
or
ljmp
cs
adc
aad
sbb
push
add
inc
sub
mov
pop
adc
iret
xchg
leave
cmpsl
sub
mov
pusha
pop
xchg
lret
fmuls
movb
lret
aam
shrb
jmp
les
and
lret
push
mov
in
fbld
add
fs
push
movsb
adc
sub
das
imul
xchg
fistps
inc
mov
out
cmp
dec
fcomps
mov
icebp
out
into
repnz
push
add
dec
insb
add
out
add
adc
loopne
mov
jne
and
gs
pop
sarl
xchg
outsb
fcmovnbe
clc
xchg
dec
and
xchg
add
sub
cwtl
fimuls
jl
inc
imul
add
push
adc
repz
lods
pop
js
or
add
lcall
pop
lea
push
xor
jg
xchg
mov
push
push
ffree
adc
sahf
fwait
jnp
xorb
mov
cmpsl
xor
lods
lret
mov
xchg
or
insl
sbb
xlat
repz
shll
xor
inc
int3
int3
ds
outsb
pushf
add
out
cmp
addl
cmp
lods
mov
xabort
mov
lock
pop
dec
jmp
or
andb
stos
outsb
mov
adc
push
push
push
dec
and
mov
xor
xchg
nop
inc
pop
ror
in
fdivrs
mov
loopne
sbb
push
push
mov
fisttpll
xor
aaa
insb
push
pushf
stos
push
xchg
xchg
push
data16
out
jp
push
push
mov
jbe
int
popa
cli
mov
jp
je
push
movsb
ss
outsb
in
jg
fsub
jbe
or
mov
dec
add
mov
mov
xchg
add
stos
repnz
cmp
data16
jg
sbb
std
pop
filds
mov
xlat
push
lcall
je
push
mov
mov
jg
xor
mov
ja
lea
inc
popa
rcrl
cli
cli
mov
into
loop
test
leave
aaa
dec
mov
xchg
sbb
push
lea
in
lcall
in
inc
ret
rclb
sbb
aad
cs
jmp
out
movsl
pop
test
add
and
or
jb
mov
inc
mov
loopne
cmpsb
inc
rclb
dec
daa
leave
pop
mov
xchg
jns
mov
in
mov
dec
or
pushf
in
and
cmp
xor
inc
mov
pop
imul
pop
cs
cltd
stc
les
je
cmp
jo
shr
xorl
pop
xchg
mov
ss
scas
icebp
fdivr
pusha
dec
test
inc
pop
mov
in
dec
loope
repnz
iret
push
stos
mov
xor
inc
pop
xor
arpl
adc
cmp
in
mov
fs
daa
sub
cld
push
repz
mov
xor
fildll
jb
sbb
add
fbld
push
scas
sbb
push
dec
dec
loope
sbb
cmpsb
movsb
xchg
mov
test
outsl
fmul
lods
pop
sub
xor
fnstenv
mov
add
or
or
pop
or
movsb
xchg
push
pop
inc
dec
dec
aas
outsb
dec
cmp
out
dec
test
sbb
inc
inc
stos
bound
sub
add
push
loope
in
fyl2xp1
ljmp
xor
daa
aam
cmp
repnz
pop
and
xchg
ljmp
subb
xchg
loope
jl
mov
inc
mov
iret
movsl
sub
ss
or
imulb
pop
out
test
sub
mov
mov
push
push
adc
pop
or
xor
pushf
add
sub
les
or
xchg
fisubrl
ror
sbb
fsub
adc
adc
cmp
nop
or
mov
lcall
enter
out
jp
inc
sahf
int3
mov
dec
mov
add
dec
repnz
in
ret
mov
decb
push
jns
adc
mov
out
divb
int
shl
push
popa
mov
inc
xchg
out
or
sbb
sub
push
testl
jmp
divl
mov
mov
dec
mov
mov
lret
movsb
dec
in
push
mov
cltd
xor
push
jns
mov
sbb
stc
or
pushf
into
in
cs
jp
pop
push
cmc
push
jns
sub
pop
inc
cmc
mov
push
out
nop
lods
mov
xchg
mov
push
ljmp
or
cmpsl
push
loopne
out
cmpb
adc
out
stos
adc
imul
pop
fistps
ljmp
in
daa
into
sub
push
or
sbb
fs
dec
ficoml
jno
enter
cmp
jbe
je
shrb
adc
adc
xor
mov
pop
icebp
mov
xor
mov
and
inc
fnstenv
fs
out
sub
sbb
sbb
les
in
das
xor
push
or
nop
scas
cltd
xor
int
idivb
adc
mov
push
aaa
sub
test
faddl
dec
sahf
leave
sub
pop
rolb
dec
and
xchg
add
jg
prefetcht2
loope
xchg
addr16
leave
xchg
xchg
pop
rcll
cwtd
icebp
movsl
mov
cmpsb
push
sub
daa
sbb
pop
out
cs
call
mov
mov
sbb
adc
jle
fidivrl
std
notb
ds
lods
bound
push
test
fnstsw
ja
push
dec
jnp
add
je
pop
aad
out
arpl
inc
jnp
aas
movsb
mov
das
call
sbb
stc
outsl
xor
fnstcw
sbb
pop
nop
pop
mov
pop
int
jo
sbb
xor
stos
pop
test
jno
movsb
add
jb
subl
dec
scas
stos
push
iret
nop
sub
add
adc
leave
inc
xlat
and
and
jp
jbe
pushf
je
js
push
dec
pop
push
ja
stc
add
pop
stos
mov
jae
xchg
push
test
call
clc
pop
adc
stc
mov
data16
sub
add
add
or
scas
imul
shrd
movsl
dec
lods
arpl
sub
mov
enter
outsb
fildl
or
push
cmp
out
jno
ljmp
imul
push
ss
int
loope
ret
cs
fcmove
stos
dec
sbb
mov
mov
jne
cmp
stos
adc
xchg
shl
pop
iret
scas
fidivs
dec
sbb
cs
or
ljmp
jno
fdivrl
aad
loop
xchg
mov
and
xor
das
sub
inc
pushf
push
stos
xchg
test
cmp
lea
cs
pop
lds
jg
jb
into
aaa
lcall
pop
mov
xchg
hlt
call
and
cmc
push
mov
adc
dec
adc
push
xor
mov
sahf
mov
push
and
stos
xchg
shrb
ja
int3
push
lods
mov
mov
lahf
shrl
inc
cli
pop
mov
sub
cmpsb
xchg
jne
mov
lret
xor
add
testb
cmp
leave
mov
dec
and
jb
cmpsb
stc
xor
loope
xor
sbb
pop
xor
stos
mov
push
std
mov
jmp
int
icebp
jl
pop
and
mov
cmpsl
jno
fdivl
jge
pop
in
push
sbb
jmp
js
jmp
fs
pop
in
inc
mov
ret
fsts
pop
xor
inc
popa
movq
sbb
sbb
and
mov
pusha
incb
xor
xchg
insb
iret
jge
dec
repz
out
add
sbb
cld
cmp
das
pop
fcomps
scas
push
adc
mov
inc
adc
mov
and
stos
lock
jmp
adc
push
lahf
sub
sub
lods
lahf
adc
fstps
cltd
jmp
das
sbb
jb
jae
mov
hlt
test
test
adc
sub
les
mov
imul
xor
or
inc
mov
sbb
lcall
dec
dec
or
sbb
or
sbb
push
addb
pushf
bound
lods
mov
cmpsl
sub
lret
jg
sbb
out
imul
jmp
mov
daa
mov
jp
lahf
shl
out
cmpsb
sbb
mov
dec
in
repz
lods
ja
push
out
jmp
sbb
push
jo
dec
sub
xchg
cmc
pop
lods
add
das
sub
sub
jb
pop
mov
aas
call
jbe
pusha
pushf
aaa
inc
xchg
jmp
lds
mov
shll
test
iret
loope
jp
mov
mov
loop
stc
or
imul
mov
dec
or
mov
fwait
cmp
xor
xchg
rcll
sub
xchg
pop
or
lods
or
push
sub
negb
xchg
data16
test
adc
push
xchg
pop
ret
mov
mov
pop
movsb
sub
sub
add
add
sub
mov
xor
fidivl
int3
adc
jae
inc
scas
xor
dec
xchg
pop
pop
out
out
outsl
pushf
dec
add
sbb
je
repz
fidivl
cmp
dec
nop
filds
sbb
in
cmp
aas
decl
mov
in
xchg
sbb
dec
nop
mov
pop
cmp
jp
out
jns
xor
push
lret
jmp
iret
sti
inc
jecxz
je
jle
mov
or
mov
xchg
jnp
enter
fimull
and
add
sbb
ret
or
or
clc
xchg
inc
std
fsubrl
or
xchg
in
inc
mov
out
adc
ja
loop
pushf
mov
bound
lcall
sub
or
insb
aad
mov
pop
xchg
shl
jb
aam
clc
inc
paddsw
fwait
mov
pop
xchg
cmp
xchg
push
cmp
in
out
sbb
mov
adc
add
sbb
mov
stc
lods
bound
ret
arpl
mov
and
pop
jo
cmp
notb
sbbb
cmp
adc
sarb
pop
cmp
subl
in
jbe
aam
dec
js
sbb
adc
test
jecxz
fwait
add
ja
scas
mov
jle
les
push
inc
mov
dec
push
aas
or
fsubr
repz
or
cli
aam
aam
ja
dec
popf
pop
ret
sub
adc
pop
cmp
mov
sbb
mov
daa
cmpsb
jle
nop
imulb
or
adc
inc
lock
rcr
jp
xchg
mov
psrlw
add
outsb
mov
mov
stc
mov
out
inc
dec
cli
cmpsb
add
pop
or
mov
mov
dec
dec
scas
imul
mov
mov
and
mov
jo
mov
add
icebp
or
arpl
aam
add
mov
jne
in
hlt
jns
xchg
dec
sahf
out
xchg
fcomip
adc
xor
shrb
ljmp
jle
inc
stc
cmp
cwtl
push
aad
xor
movsb
adc
cmp
xchg
dec
test
jl
in
dec
les
sbb
mov
inc
sbb
xorb
jnp
push
sbb
div
jge
push
mov
mov
lea
mov
sbb
push
adc
dec
les
aad
imull
xchg
call
mov
mov
pop
add
inc
sti
jno
leave
mov
mov
cmpsb
cld
bound
pop
fstps
dec
fsts
pcmpeqw
jg
push
aaa
lret
sbb
mov
xchg
cmp
rolb
push
fs
imul
loop
das
js
xchg
out
pop
les
inc
mov
inc
loop
mov
lahf
je
fdivrl
xor
cmp
mov
xchg
arpl
push
int
popf
dec
lret
sbb
gs
dec
mov
lret
lock
jmp
ja
aad
inc
xchg
int3
in
rcll
sti
rclb
cmp
xor
rolb
push
outsl
mov
in
andl
dec
cwtl
push
mov
icebp
bound
dec
repnz
jecxz
loop
iret
pop
jge
aas
imulb
lcall
inc
cmp
push
rolb
mov
cmp
stos
sbb
shl
pop
jecxz
jns
stc
push
mov
lcall
in
loope
add
ja
or
xchg
arpl
aaa
xor
insb
jae
pop
icebp
inc
cmpsb
enter
mov
xchg
xor
and
in
xor
shll
and
push
mov
xor
movsb
inc
dec
xchg
loopne
and
and
push
push
orb
icebp
dec
fidivl
pop
mov
push
lret
sub
mov
in
sti
push
clc
xlat
in
or
jo
ja
pop
push
lcall
mov
mov
inc
ror
inc
mov
pop
add
add
insb
push
dec
les
adc
jecxz
adc
jp
cld
rcrb
aaa
rcll
mul
pop
rcrl
fstp
mov
xchg
jo
or
jg
and
mov
sub
push
decl
sbb
lock
rorl
test
outsl
or
je
cmp
nop
fdivrl
in
push
test
sarl
repz
mov
pushf
pop
sahf
mov
jmp
mov
sub
bound
jl
or
pop
shrb
jo
add
mov
push
mov
outsl
shlb
or
outsl
jae
loope
jle
icebp
dec
les
sbb
or
fmuls
mov
add
pop
pop
cmp
aam
adc
mov
dec
loope
lahf
mov
lret
jl
xadd
fwait
sub
push
mov
aad
cmp
stos
call
add
popf
cmp
mov
repnz
inc
push
idivb
xor
in
loope
hlt
mov
or
add
inc
addr16
mov
fwait
cmc
sti
push
in
push
push
cs
sbb
imul
sahf
xor
sub
jp
mov
lds
and
adc
sub
mov
inc
movsl
push
out
mov
or
sbb
mov
push
sbb
push
daa
loop
jmp
xchg
movsl
mov
add
sbbb
es
dec
xor
push
cmp
aam
adc
mov
jl
loope
insl
and
push
xchg
mov
or
mov
lea
mov
mov
inc
sahf
xchg
inc
nop
xor
jmp
inc
mov
imull
xor
sub
jecxz
jg
pop
mov
push
mov
mov
jns
jle
icebp
cltd
faddp
out
mov
add
mov
and
fnstsw
mov
lock
scas
push
adc
out
cwtl
mov
add
or
add
into
jle
shlb
imul
dec
mov
mov
test
xor
imul
incl
outsb
outsl
dec
dec
push
dec
orb
sub
add
stc
sbb
shrb
xchg
mov
gs
sti
or
in
lock
cli
into
add
jae
pop
sarl
pop
jns
xor
in
mov
aas
lds
rcll
dec
xor
pop
xchg
adc
out
les
sbb
jnp
dec
add
inc
imul
cltd
xchg
test
fabs
ret
sbb
mov
cld
cs
sbb
loopne
jbe
loope
mov
jno
es
ret
cmp
and
loopne
ss
je
in
test
ss
cli
andb
dec
cwtl
lret
sahf
sub
stos
add
lds
cmp
jg
movsb
mov
lret
stos
fdiv
repnz
sbb
out
gs
mov
jbe
inc
cli
sbb
out
mov
dec
pop
lahf
inc
mov
out
data16
popf
inc
call
rclb
sbb
mov
shll
imul
xor
dec
inc
xchg
xchg
sbb
es
aad
push
out
repnz
dec
mov
mov
dec
inc
out
xchg
pop
xor
das
fcomi
ret
jnp
and
je
and
sbb
push
push
mov
icebp
sti
jecxz
iret
and
test
cmpsb
dec
arpl
ds
mov
fmulp
mov
ljmp
adc
lock
lods
fbstp
jno
adc
jne
daa
ss
mov
scas
jb
jp
lahf
mov
mov
or
je
nop
stc
push
stos
inc
fdiv
pop
ficompl
cmp
jmp
sub
mov
in
pusha
iret
loopne
mov
and
cwtl
les
test
push
icebp
sub
dec
fs
nop
dec
mov
lea
adc
je
inc
push
add
pop
rolb
pop
push
sbb
dec
push
push
inc
arpl
sarl
xchg
scas
lret
push
mull
jmp
int3
xchg
mov
pop
xchg
adc
rol
pop
lods
cmp
fsubrl
mov
sahf
addl
ficoml
jbe
mov
clc
jle
inc
cli
scas
jmp
cmp
imul
mov
in
imulb
frstor
call
mov
repnz
aad
mov
sub
xor
mov
xor
xor
adc
mov
sbb
pop
push
adc
sub
sbb
cmp
popf
sub
mov
jno
inc
add
push
cmp
movsb
mov
je,pn
push
data16
testl
fildl
adc
mov
xchg
xor
mov
pop
lcall
pop
cwtl
cld
jg
lea
mov
jl
mov
push
xlat
test
out
fsubrl
dec
push
or
push
out
divl
pop
in
into
and
ss
pop
add
cli
jge
faddl
sub
mov
mov
mov
call
push
insl
pop
out
ret
dec
pop
adc
mov
lods
rcll
fidivrs
adc
iret
mov
cmp
or
cmp
add
mov
inc
mov
dec
mov
mov
jecxz
out
imul
aad
xor
cmp
nop
andl
mov
test
mov
cmc
dec
sbb
std
cld
jo
daa
push
xchg
js
fcmovbe
icebp
leave
lea
add
xor
loop
fiadds
call
hlt
pop
pop
cmp
and
jp
dec
scas
or
ret
rol
add
int3
cmp
cwtl
test
faddl
add
mov
sub
xor
orb
inc
cmp
shlb
outsb
pop
sub
or
loope
out
or
pop
jg
or
aas
aaa
and
out
shrl
dec
out
ret
enter
or
inc
push
aad
dec
mov
imul
or
les
inc
loopne
cmpsl
enter
subb
imul
pop
xorl
stos
jne
sbb
cs
lret
leave
je
rol
std
pop
xor
adc
cmpsl
jo
cmpb
jecxz
adc
and
cmpsl
or
lret
cmpsl
dec
in
iret
jecxz
notl
inc
cmpsb
decl
push
mulb
loope
movsl
sbb
daa
or
ror
imul
cmp
inc
xchg
or
sub
jp
push
pushf
je
sub
sarl
ficomps
cwtl
mov
fldt
push
test
mov
mov
fdivl
cld
pushf
jne
cmp
mov
in
adc
fs
mov
or
pop
and
js
sbb
pop
ljmp
push
fcomi
mov
lock
bound
jge
mov
out
cmp
lea
add
ja
addr16
jle
pushf
ljmp
std
xchg
or
jmp
mov
inc
push
push
inc
test
int
jle
add
mov
mov
rorl
outsl
aam
mov
and
addr16
cmp
dec
add
ret
pop
mov
push
imul
sub
daa
mov
push
mov
inc
pushf
ficoms
lods
sbb
push
loope
sbb
call
jb
jmp
lods
hlt
mov
dec
mov
mov
jmp
add
setns
das
or
push
es
lcall
lret
mov
pop
std
fists
jecxz
and
or
dec
or
xchg
mov
mov
sbb
cmpxchg
call
iret
inc
jno
les
outsl
iret
imul
ds
jbe
adc
int3
cmpsb
dec
add
fldt
mov
fidivs
mov
lahf
push
popf
jns
lcall
mov
lret
loope
data16
and
cmp
data16
push
dec
rorl
xor
into
sbb
movsl
insl
inc
xor
and
fsubrs
lret
aad
shrl
adc
popa
aas
ds
idiv
push
cld
mov
enter
ret
push
sub
dec
pop
call
mov
ret
add
dec
xchg
repz
jmp
arpl
aas
loopne
pop
ss
or
aad
push
mov
xchg
dec
dec
arpl
mov
xchg
sbb
or
xor
std
dec
shll
popa
mov
mov
push
dec
mov
leave
jg
cmpsb
aaa
pop
xor
mov
and
xor
adc
fmul
lcall
fnstsw
mov
inc
jmp
mov
nop
sbb
loopne
adc
std
adc
push
aam
pop
sub
cs
jle
sub
push
rorb
lods
jge
cmc
stos
sub
cmp
hlt
push
xor
nop
cmova
insb
xchg
mov
aam
inc
pop
xlat
mov
lods
xchg
cld
lcall
aaa
dec
push
pop
subb
mov
xor
outsb
sbb
xchg
idivb
mov
mov
jmp
pop
std
test
pusha
push
push
jbe
addr16
adc
ror
pop
or
mov
rcll
pop
out
xor
adc
sub
jl
ss
inc
das
test
adc
psadbw
dec
sahf
cmp
cmp
fldenv
iret
sbb
dec
pop
or
add
loopne
mov
add
shrb
pop
mov
pop
mov
jg
push
sub
dec
xor
iret
pop
inc
lret
xchg
jl
and
imul
xor
std
lcall
lds
xchg
sbb
cmp
jmp
stos
mov
ljmp
adc
in
dec
fidivs
jae
mov
nop
mov
pusha
push
mov
jmp
xchg
sbb
xchg
sahf
ja
mov
into
dec
mov
mov
pop
mov
in
into
aad
mov
add
lods
dec
mov
dec
pop
mov
fcmovne
dec
push
xchg
test
xchg
mov
jnp
mov
cmpsl
pop
cmc
sub
pop
jg
outsb
scas
pushf
or
hlt
ficomps
insl
pop
aas
and
stc
stc
shll
push
and
popa
clc
sbb
jp
je
arpl
fnstenv
adc
repnz
mov
mov
and
ss
pop
lock
xchg
mov
arpl
inc
pusha
leave
mov
iret
stos
xor
shlb
incl
out
sarl
fcomp
test
jle
mov
dec
mov
sarl
test
dec
popl
sub
sbb
sub
repnz
pop
xor
pop
nop
iret
add
jecxz
fstps
aaa
lahf
adc
cld
jbe
jg
add
sti
cmp
cmp
and
cwtl
mov
imul
into
les
gs
out
xchg
xchg
xchg
sbb
jle
inc
in
cld
loop
pop
aas
push
cmp
mov
add
xchg
adc
out
pusha
add
mov
or
adc
mov
push
jne
imulb
test
xchg
add
inc
cmp
dec
popf
test
pop
loop,pn
rorl
cltd
sbb
xor
insl
and
xchg
pop
mov
xchg
out
push
mov
psubb
aaa
lds
add
out
sarb
sbb
sbbl
xchg
repnz
push
ss
inc
div
mov
leave
in
ljmp
movsl
fidivl
addr16
inc
out
icebp
fs
pop
cmpsb
cld
movsb
jecxz
into
clc
or
dec
addr16
push
dec
sbbb
xchg
in
in
cmp
test
test
mov
shll
dec
arpl
mov
imul
add
mov
fwait
pop
out
stos
loop
sub
mov
add
and
push
sbb
test
fs
fisubl
cli
mull
ljmp
fmull
adc
cmp
insl
and
pop
jle
sub
push
retw
cli
cld
fs
in
inc
aaa
jge
popf
aas
cmp
into
inc
call
nop
dec
lea
js
pushf
fcoml
mov
shrb
push
loope
andl
fldcw
orb
mov
sub
adc
das
aas
add
xchg
divl
sbb
pop
add
inc
mov
test
mov
dec
pop
lds
or
mov
jmp
sbb
mov
jae
jle
push
inc
mov
leave
int
mov
dec
popf
add
int3
je
cmp
inc
dec
sarb
and
dec
leave
aam
push
adc
xchg
adc
push
adc
xchg
jl
sbb
bound
jo
popf
ljmp
pusha
ds
adc
repz
jmp
imul
scas
fldcw
mov
clc
loope
inc
mov
pop
int
sarb
out
testb
test
sbb
in
or
loopne
fisttpll
mov
je
sahf
pop
add
notl
dec
popf
sub
mov
fwait
mov
out
mov
jns
push
push
cwtl
mov
test
popa
lock
adc
sub
mov
js
mov
jle
jmp
dec
lcall
sub
pop
push
xor
or
fisttps
mov
rcrl
stos
ljmp
test
inc
popa
pop
cmp
scas
aad
sub
rolb
mov
stc
je
mov
out
adc
lods
push
add
or
repz
jne
movsb
xor
lds
stos
repnz
scas
xchg
adc
jp
dec
loopne
stos
out
test
lods
movsb
popf
xor
jnp
inc
inc
jl
rol
fs
mov
or
lea
mov
cmp
xorb
adc
inc
lret
add
xor
loopne
jb
mov
popa
adc
mov
mov
jns
jns
inc
inc
push
cmc
mov
mov
incl
loope
mov
pop
xor
fiadds
rcrl
inc
out
les
sub
daa
jne
aaa
out
or
sbb
jb
jbe
stos
adc
add
push
stos
test
mov
loope
lock
pop
mov
in
pop
add
mov
jp
stc
mov
ret
mov
fwait
in
add
xor
and
mov
sub
and
mov
xor
inc
addr16
push
cwtl
adc
xchg
mov
loope
imul
xchg
fstps
aas
aad
push
add
push
mov
pop
dec
cltd
mov
mov
sub
mov
sahf
xchg
test
or
and
das
dec
cmp
sub
sbb
jmp
dec
jae
inc
in
mov
adc
jg
add
fcmovb
dec
cmpsl
rcrb
lcall
ret
sub
scas
daa
pop
mov
jo
inc
lock
fnstsw
xor
lods
cltd
pop
mov
inc
push
inc
les
mov
shrl
jmp
push
shrb
ljmp
mov
add
jecxz
or
shlb
in
and
out
mov
subb
mov
rclb
or
ds
shrl
rclb
jge
mov
xlat
repz
push
cmp
pop
pop
movsl
sarl
insb
aaa
xchg
or
mov
push
push
das
je
pusha
mov
lea
sbbl
mov
cmp
cmp
fst
dec
sar
add
or
ja
pushf
cs
inc
pushf
pop
mov
sbb
cmpsl
movsb
inc
movsl
cmp
loopne
mov
addr16
dec
call
sti
cmp
adc
and
and
mov
int3
les
mov
dec
fcoms
mov
test
fisubs
cltd
inc
fwait
lcall
data16
mov
subb
xchg
pushl
xor
pushf
xor
mov
pop
pusha
inc
shl
stos
mov
shlb
push
xor
movsl
cs
or
or
fidivs
lods
addl
data16
inc
jmp
jnp
push
out
xlat
mov
adc
test
cld
cmp
xchg
jo
add
andl
lcall
push
or
and
dec
ret
ret
inc
imul
pusha
nop
sarb
mov
inc
push
xchg
sahf
fcomip
sub
rolb
mov
adc
lods
imul
call
jns
jmp
or
and
push
push
xchg
push
shlb
inc
ror
jecxz
mov
dec
fucomip
and
or
push
shr
adc
inc
mov
insl
sbb
or
cmpb
pop
or
in
jnp
add
loop
sbb
movsl
pop
jg
cli
or
bound
inc
rorb
push
xchg
xor
and
mov
aaa
dec
loope
cli
mov
jl
mov
imul
mov
inc
scas
xor
mov
mov
sub
icebp
cmc
test
lea
push
and
mov
out
roll
repnz
loopne
sbb
fdivrs
xchg
lds
and
jge
data16
xor
sub
aam
mov
lret
cmp
imul
movb
test
pop
xchg
mov
shrb
movsb
mul
fcomp
dec
loope
xlat
subl
push
sbb
pushf
pop
rcrl
js
scas
pop
inc
test
gs
loop
pop
test
fsubs
outsb
aas
sbb
inc
xchg
out
fs
ss
mov
insl
fsubs
in
fistpl
cmp
in
mov
cltd
es
fs
mov
das
mov
push
std
mov
inc
test
rcll
xchg
addr16
call
les
inc
push
fisubl
adc
pop
ss
hlt
test
rcll
pop
cmp
lods
js
imul
add
mov
jmp
or
add
fimull
push
subb
mov
mov
mov
addr16
popf
jg
xchg
mov
fwait
add
jle
jge
inc
push
lods
pmaddwd
add
or
jns
das
subl
int
repnz
je
sub
outsl
xorl
mov
xchg
xchg
clc
repnz
test
aaa
push
fwait
rcrb
dec
sub
mov
jns
fs
mov
mov
cmp
repnz
and
and
jbe
fstpt
ds
mov
or
aam
ja
and
fmuls
mov
adc
mov
jecxz
cmp
dec
andl
push
ss
outsl
ret
lret
pop
cmp
fdivr
or
inc
and
xchg
xchg
rclb
test
xor
mov
cld
sub
and
lods
les
rcl
xchg
add
push
xchg
cmp
mov
push
movsl
insb
imul
je
jg
jp
stos
sahf
loope
cmp
mov
sbb
add
out
lret
ror
out
jp
fimull
js
xchg
push
inc
or
add
inc
inc
ret
pop
icebp
sbb
sbbl
and
xchg
aam
xor
xor
and
dec
imul
cmp
push
movsl
es
loope
push
call
ror
loope
or
imul
push
test
out
repz
call
sbb
mov
xlat
xor
push
cmp
rcll
push
pusha
xor
and
aad
dec
pop
pushf
dec
pusha
jecxz
sti
outsl
mov
pop
lcall
sbb
jge
mov
insb
adcb
pop
xor
push
sub
leave
shrl
mov
add
and
inc
mov
cmp
icebp
in
inc
jp
xchg
inc
push
je
mov
push
jl
cwtl
stos
sub
or
dec
and
mov
aaa
sbb
push
pop
scas
mov
imul
je
lahf
and
testl
data16
sub
push
jns
jno
testl
scas
xchg
cld
mov
xchg
xchg
lret
pop
and
mov
mov
jns,pt
fldenv
aam
and
dec
push
mov
out
mov
add
dec
test
cmpl
pop
mov
lret
jnp
xlat
xchg
cld
cmp
and
mov
mov
dec
into
adc
push
rol
inc
push
imul
gs
push
je
aad
push
mov
xchg
in
dec
fsub
or
shll
pop
adc
shrb
test
xchg
aas
loop
cmp
adc
push
or
lahf
cmp
scas
stc
repnz
sbb
icebp
gs
inc
cmp
invd
lahf
mov
sbb
push
jmp
xor
and
fldcw
xchg
decb
aaa
sbb
and
mov
leave
xchg
shrl
xlat
stos
and
jns
inc
jae
mov
or
xor
mov
jmp
repnz
sbb
in
push
cmpl
leave
mov
arpl
push
jo
sub
cli
or
xchg
and
fs
push
dec
mov
pusha
mov
inc
ja
cwtl
mov
mov
pop
and
pop
int3
add
jmp
mov
sarl
adc
insb
jae
mov
cmp
pushf
nop
in
inc
int
inc
push
sub
cmp
cwtl
loop
add
insb
pop
movsl
popa
lcall
jne
rolb
subb
jno
push
pop
jle
add
lea
icebp
adc
cli
sbb
iret
mov
sub
sub
in
lods
push
mov
jge
adc
and
jbe
mov
xchg
push
add
test
aam
cmp
sbb
fwait
out
cmp
xchg
cwtl
in
outsl
cmpsb
mov
rcll
push
push
fsubl
andb
mov
add
addr16
rcll
dec
in
cmpsl
arpl
insl
pop
push
lock
popf
push
jo
mov
ljmp
mov
jle
int3
xor
outsl
push
xor
insl
data16
cwtl
popf
add
pop
fmull
lods
mov
or
dec
imul
mov
dec
out
dec
data16
jns
or
sbb
movsb
jge
aad
lret
sub
rcrl
push
sub
cmp
fcmovbe
cmp
test
jno
xor
mov
hlt
mov
cwtl
mov
cs
push
ja
test
outsl
mov
jg
insl
mov
negl
divl
sub
in
mov
inc
mov
or
clc
in
xor
pop
lret
jne
add
pop
fnsave
jl
outsl
or
push
dec
xor
pop
es
shll
pop
aaa
movsl
mov
stc
sbb
inc
dec
and
xor
mov
pusha
ljmp
xchg
pop
or
mov
push
push
xchg
jle
jae
sbb
aad
pushf
mov
lock
cmpsl
cmpsb
or
fisubs
orl
rcr
jb
imul
stc
lods
cmp
lret
inc
cwtl
sahf
test
arpl
movl
es
insl
xchg
lahf
jl
dec
lret
sbb
fwait
mov
inc
mov
ficoml
lahf
in
xor
or
test
jmp
out
imul
push
arpl
mov
adc
or
jne
pop
adc
or
popa
mov
pop
test
sahf
ss
inc
loop
push
popa
jns
dec
adc
hlt
je
and
movsb
in
nop
mov
inc
test
insl
sti
sub
es
jge
mov
lahf
xchg
iret
cld
dec
je
mov
xlat
es
leave
adcl
outsl
xchg
lahf
inc
icebp
add
inc
pop
sub
mov
pop
scas
cmp
or
mov
scas
and
stc
int3
out
push
rclb
sti
push
sub
pop
xlat
push
subl
outsl
pop
add
hlt
inc
je
popf
out
xchg
xlat
aas
loopne
ljmp
sbb
scas
mov
fs
cmp
fdivl
sbb
lea
sbb
push
or
mov
or
jle
or
and
inc
lret
cwtl
pcmpeqb
mov
aas
lods
xchg
jg
les
mov
out
xor
jbe
xchg
test
mov
fstpt
cmp
adc
out
insl
adc
test
out
repnz
jg
and
lods
mov
mov
pop
adc
ss
lods
and
ja
shrb
test
inc
mov
aaa
test
ljmp
add
int3
mov
sbb
xchg
dec
arpl
dec
stos
adc
push
adc
fs
xchg
pop
daa
inc
das
xor
int3
and
les
jns
stc
fwait
sbb
popa
jge
mov
or
les
scas
stos
int3
jnp
loopne
add
xor
push
add
add
or
adc
int
rcr
enter
enter
ja
pop
repnz
sti
fiadds
arpl
stos
push
into
jge
loopne
lret
add
mov
and
loopne
popf
adc
cmp
mov
jno
addr16
lcall
xchg
xchg
jecxz
mov
nop
ret
loope
or
incl
rcrl
cmpps
and
pop
add
mov
das
cmp
mov
or
pop
aas
pop
mov
cmp
xchg
lods
in
mov
call
add
test
cmpsb
jo
enter
sbb
cmp
out
sub
adcl
mov
sahf
pop
not
cmpb
mov
dec
pop
ret
jb
in
stos
sbb
shrl
enter
out
add
ds
and
outsb
or
or
lock
adc
jmp
dec
push
mov
xor
ss
int
jmp
sub
mov
xchg
fsubrs
mov
popa
mov
stos
and
mov
in
xchg
mov
daa
ss
xlat
xchg
shl
xchg
bound
imul
sbb
inc
sbbb
adc
fisubs
lahf
je
push
cmp
jo
out
outsl
out
xchg
movsb
xor
mov
mov
cwtl
je
mov
scas
mov
call
dec
cmc
sti
and
shll
dec
in
xchg
in
fsubr
pop
movsb
mov
addr16
xor
xchg
les
nop
daa
imul
andl
icebp
sbb
and
leave
jge
jbe
addr16
mov
sti
and
pop
mov
orb
mov
or
imul
fstpt
lds
aam
or
dec
jl
outsb
mov
mov
dec
mov
sarl
jle
pop
mov
pop
lret
xchg
mov
loope
ret
push
xchg
into
btr
in
fdivrp
push
inc
cmp
ja
lds
sbb
pop
mov
mov
dec
mov
mov
xchg
scas
lret
sbb
mov
mov
mov
inc
fsubr
cmp
incl
movb
icebp
mov
in
shl
cmp
xor
and
in
std
push
cmp
fadd
js
addr16
xor
loope
push
push
sub
pop
mov
xchg
fisubl
dec
scas
pushf
cwtl
sbb
rcr
loop
jne
dec
rcrl
inc
in
addr16
pop
xor
lret
notb
fldcw
sarl
xchg
fcmovnb
inc
add
mov
fisttps
jns
rcr
xlat
call
fcmovb
xor
sbb
xchg
insb
xlat
cmc
inc
mov
clc
scas
adc
mov
sbb
mov
or
test
cmovo
je
cs
stos
stos
ja
jmp
les
jno
aas
loope
test
inc
rcrb
push
stos
mov
in
insb
mov
lods
imulb
push
inc
cltd
out
add
push
aas
inc
testl
xor
sub
push
clc
fcmovu
add
push
jbe
and
loop
cmp
inc
mov
cli
test
dec
push
imul
aam
pop
xor
mov
cld
sbb
cwtl
popf
les
sbb
stos
fs
pop
cltd
lea
repz
and
mov
inc
rcrb
rcrl
push
cmp
sbb
or
pop
div
loope
sub
rorl
xor
pop
mov
jl
cli
in
inc
cs
push
mov
xchg
test
aam
in
ja
fcoml
mov
jae
mov
xchg
fcmovnu
popa
mov
pop
cwtl
jmp
xchg
inc
aad
jnp
sti
cmp
jo
ds
dec
xchg
jecxz
cmp
push
mov
rcl
xchg
pusha
in
mov
jnp
or
xchg
sbb
pop
jns
dec
xor
out
sub
or
push
mov
ja
push
and
fsubrl
fisubrs
and
pop
push
scas
push
jno
jl
jae
sti
in
mov
data16
rolb
icebp
inc
mov
and
xor
and
mov
sbb
imul
movsb
in
fldcw
adc
movsl
inc
add
out
sbb
clc
mov
xor
pop
push
add
outsb
shll
add
call
and
lods
clc
gs
fcomp
add
shl
aas
xorb
sbb
cmp
add
and
test
lds
pop
int3
test
cmp
pop
push
cmp
sbb
add
in
xor
mov
push
xor
test
ret
out
xor
lret
stos
inc
lcall
jl
je
adc
xchg
and
dec
cmp
push
xchg
rcll
outsl
les
les
mov
jne
sahf
add
lea
ljmp
jns
jne
pop
movsb
mov
scas
loopne
das
jp
das
mov
rol
cmp
imull
lds
test
sahf
aaa
jns
loope
jns
cwtl
xchg
jg
sbb
repz
bound
test
jne
insb
sub
dec
icebp
cmc
mov
das
add
insl
rolb
mov
xchg
repz
imul
cmpsl
xchg
fdivs
scas
lock
xchg
idivb
jge
and
sbb
push
cld
dec
ret
lret
fnstsw
and
sbb
lret
dec
adc
cmp
sub
ret
xlat
scas
shll
es
pop
cmpsb
jne
es
and
sbb
sub
mov
daa
mov
ljmp
out
fwait
test
enter
sub
pop
mov
sbb
xchg
adc
test
leave
test
sahf
sbbl
daa
cmp
jne
popa
mov
inc
and
lahf
adc
lock
ljmp
aaa
pop
sarb
mov
adc
and
mov
in
pop
adc
mov
ljmp
pop
and
mov
mov
push
pop
fwait
jae
es
mov
mov
inc
push
add
leave
aam
lds
dec
outsb
jo
cmpsl
mov
cmpsl
adc
sub
fiaddl
inc
add
adc
outsl
mov
mov
lods
or
icebp
popa
imul
xchg
xchg
lcall
pop
sub
pop
add
pop
ret
sahf
jecxz
scas
sbb
mov
hlt
pushf
xor
shll
jmp
cmp
mov
cmc
lods
icebp
jae
je
mov
push
stos
inc
mov
lods
ret
mov
pushf
dec
addl
xor
cmc
mov
sahf
push
cmp
cmp
jg
jmp
xor
stos
cmp
mov
adc
cmc
xchg
mov
mov
popf
sub
ret
mov
bound
std
cmp
xchg
fadds
dec
pop
dec
cwtl
inc
jbe
jl
jae
sbb
popa
xchg
shrl
in
out
pop
mov
fucompp
rcr
lods
pop
push
fimull
cmp
cmp
mov
out
push
jno
ss
iret
mov
repnz
or
fucomi
mov
push
inc
movsb
call
je
cmp
repnz
out
outsb
sbb
push
jle
or
dec
mov
mov
jae
fnstsw
pusha
or
cs
mov
or
add
or
dec
cmc
in
inc
push
fsubl
push
xchg
pop
mov
fidivs
push
cli
push
out
je
loop
test
lock
cmp
lods
ss
pop
jge
hlt
je
xor
sbb
dec
or
in
mov
fdivp
push
mov
fidivs
add
push
mov
mov
lods
dec
adc
filds
inc
or
outsb
push
movsl
pop
inc
sbb
cmpsb
mov
test
inc
fwait
test
cmp
pop
cmp
sub
sbb
cmpsb
arpl
sarl
call
push
rorl
xchg
out
and
mov
or
test
repnz
ljmp
lea
arpl
inc
aaa
cmp
scas
push
sub
in
add
cwtl
lods
rorl
sbb
addr16
jmp
mov
push
inc
mov
mov
xchg
sbb
cmpsl
xor
jp
enter
add
add
cld
xchg
cmpl
scas
pop
cmp
addr16
sbb
jg
xchg
push
loop
insb
ja
sbb
cmp
xor
inc
lea
cs
mov
pop
ljmp
shlb
icebp
mov
cld
hlt
pop
loopne
les
pop
adc
adc
xor
aad
jle
push
lea
cmp
sbb
fiadds
stos
mov
int
je
movsb
lahf
in
test
popf
fxch
cmc
nop
cmp
out
outsl
lret
or
out
pop
aaa
test
push
popa
xor
sub
icebp
jle
repz
push
add
lods
add
or
aad
jecxz
das
rcll
cmp
jns
int3
pop
jle
imul
cmp
or
adcb
inc
or
adcl
pop
sbb
push
mov
push
fmull
mov
inc
cltd
loopne
xchg
xchg
pop
dec
test
in
mov
push
imul
and
iret
mov
addr16
jmp
jb
mov
sbb
fstpl
mov
cmp
push
add
push
nop
fstp
inc
xor
test
xorl
cmpl
ss
addb
sub
nop
fisubl
or
in
dec
mov
popa
sub
fisttpl
mov
mov
stos
xlat
xor
insb
jnp
fs
or
and
pop
cmp
addps
push
or
test
adc
adc
mov
and
push
cmp
out
hlt
sub
mov
jb
cmpsb
movsb
popf
stos
jle
mov
lock
jecxz
cmpsl
ret
arpl
shr
icebp
cmp
repz
ljmp
test
jge
xchg
sbb
lcall
dec
dec
lahf
push
mov
jns
dec
fincstp
test
enter
call
adc
adc
aad
movl
imul
mov
cmp
push
test
sbb
mov
jbe
add
insb
iret
push
mov
pop
loopne
push
mov
and
popa
rolb
rol
orb
mov
dec
xor
lods
iret
lahf
insl
cs
into
mov
jmp
push
push
cmp
jle
das
aaa
cmp
mov
popa
scas
and
pop
dec
aaa
mov
das
icebp
dec
lret
dec
repnz
out
pop
sti
out
insb
dec
ret
dec
bound
popa
sbbl
popf
imul
cmpsl
jg
mov
inc
sbb
mov
mov
stos
nop
add
cmp
pop
cmpsb
pop
outsb
movsb
mov
push
rcrb
mov
push
mov
pop
xchg
repnz
cmc
clc
icebp
mov
aam
and
fidivrs
lret
mov
test
ficomps
in
stos
sub
movsl
in
xchg
cmp
dec
inc
or
lret
bound
jo
mov
leave
jae
cmpb
sub
sbb
call
loopne
loopne
xchg
sti
dec
add
movsb
imul
enter
ficoms
sbb
adc
jmp
sarb
call
push
mov
popa
xor
fwait
lahf
inc
daa
jnp
mov
xor
inc
jae
pop
pop
dec
mov
lods
cwtl
shll
jl
outsb
arpl
and
data16
shrl
leave
imul
fsubr
lret
shlb
xchg
and
push
shlb
jno
dec
mov
js
repz
push
aad
cmp
jno
xchg
mov
push
fstpl
sub
jecxz
mov
nop
movsl
jmp
data16
jne
pop
orl
imul
in
sbb
in
sbb
jge
adc
pop
adc
bound
mov
ja
pop
add
adc
arpl
das
mov
cmp
data16
or
scas
out
int3
xchg
or
jnp
xchg
test
aad
loop
xor
ja
sbb
xchg
stc
cwtl
sbb
insl
or
loopne
jge
jne
xor
mov
xchg
sub
mov
lcall
jb
mov
mov
cmpsb
lds
xchg
cli
dec
shrl
ds
aam
and
xor
fimull
in
test
lds
iret
fcoms
shrl
mov
jecxz
lea
push
loop
decl
outsl
cmp
sub
mov
addr16
xchg
xchg
push
mov
sbb
pushf
loop
add
jbe
shlb
scas
pop
adc
in
mov
sub
push
das
inc
icebp
in
lret
inc
nop
inc
push
jne
mov
xor
cmp
or
outsb
cmp
pop
out
mov
fdivrs
cmp
outsl
lret
out
in
ja
into
sbb
icebp
jbe
sub
lods
sahf
mov
pushf
mov
sub
movsb
sub
cwtl
fwait
repz
xor
cmp
sbb
pop
jg
enter
jo
xrelease
mov
leave
scas
inc
jp
pusha
adc
lahf
aad
movsl
fisttpll
jnp
inc
out
inc
add
jge
js
sbb
cmp
shlb
or
or
or
outsb
test
push
movsb
int3
xlat
movsl
xchg
sbb
test
sub
jno
stos
cmp
icebp
pop
dec
cmp
fisubl
and
adc
cmp
rcrb
loopne
mov
ret
incb
add
mov
sahf
push
loop
mov
mov
insb
bound
jb
mov
call
pop
inc
cmpsl
and
cmp
lds
fisubl
cmp
xchg
push
loop
cmp
push
imulb
cmp
aas
push
jge
dec
add
push
sub
lds
push
movsl
daa
jl,pt
jo
xchg
and
sub
into
push
mov
repz
cmp
xchg
jg
mov
cwtl
loopne
or
jns
cmp
stc
ret
test
push
jbe
or
add
add
enter
insl
movsb
mov
mov
and
pop
xlat
pop
jne
hlt
mov
mov
shll
mov
fisttpl
push
jcxz
idiv
pop
xchg
mov
cmp
pop
int3
mov
clc
push
es
ss
and
fwait
shlb
add
imul
cmp
cmpsl
movsb
cmc
or
xchg
je
test
fsincos
mov
adc
imul
mov
mov
xchg
cs
daa
and
xchg
xchg
shll
inc
pop
lret
xchg
sbb
jl
out
or
rcll
lds
insb
mov
aam
or
dec
xchg
inc
js
and
out
xchg
jmp
cld
sub
xchg
fimuls
test
mov
add
jmp
fldenv
orl
arpl
orb
add
lds
xchg
in
loop
jb
mov
jo
iret
mov
pop
cmpsb
adc
outsl
push
mov
and
out
mov
int
daa
fcomps
push
inc
ret
ja
movl
dec
mov
stc
fistpl
arpl
test
into
test
ret
fwait
or
jl
mov
cmp
inc
jle
nop
pop
test
inc
out
or
test
push
jl
addr16
test
sbb
mov
inc
int
dec
xchg
dec
adc
add
inc
and
int3
jl
cld
mov
loopne
pop
outsl
shrb
push
adc
xor
xchg
lret
xchg
out
data16
jp
dec
iret
hlt
lret
lods
sbb
lds
push
mov
adc
mov
or
orb
jo
in
mov
ds
sahf
clc
push
adc
and
sub
inc
orb
dec
ljmp
mov
into
xor
call
int3
sbb
in
xor
add
jnp
inc
in
ja
shlb
lcall
cltd
mov
dec
jns
cmp
push
mov
fidivs
pop
add
xor
jg
sti
lods
and
and
mov
mov
add
ja
mov
push
or
mov
stos
inc
adc
cs
cmpsl
push
mov
aam
inc
inc
lret
push
mov
or
bound
in
out
roll
fdivrp
mov
in
push
adc
das
test
ds
and
pop
jmp
push
mov
or
and
ja
sub
mov
xchg
jbe
push
pop
xchg
lahf
arpl
repz
push
into
repz
mov
sbb
cmp
or
sub
sbb
mov
jl
std
jp
sub
cs
cmp
or
push
testb
out
sbb
push
jns
lret
inc
xchg
setp
jmp
mov
daa
pop
jo
pop
mov
aaa
adc
push
pop
into
push
cmpsl
sbb
mov
fs
lret
js
fimull
mov
sti
and
push
ss
test
inc
dec
dec
fistpll
or
gs
and
lret
inc
inc
cmpsl
push
add
rcrl
mov
enter
mov
cmc
je
iret
or
popa
out
add
daa
ds
or
ljmp
lock
adc
cmp
jo
andb
mov
mov
cmpsl
aam
lods
add
ds
es
call
and
sub
test
pushf
das
and
xlat
shlb
loop
xor
jae
push
cwtl
xchg
cld
arpl
jmp
fnstsw
mov
icebp
mov
cld
iret
mov
jp
sub
add
push
lods
jge
test
inc
add
xor
pop
in
pop
and
xor
rolb
outsl
insl
and
pop
out
sbb
clc
add
fmul
hlt
lock
push
je
ds
mov
insb
daa
dec
lods
and
sbb
pop
pop
jl
jo
movsl
faddl
stos
out
push
sti
mov
inc
xor
in
push
repz
pop
mov
movsl
jmp
push
push
ja
nop
sub
add
push
addr16
arpl
push
cs
repnz
push
in
sbbb
fdiv
call
repz
and
or
pop
clc
loope
jmp
rcll
popa
pop
mov
je
pop
mov
cmp
mov
sbb
out
test
pop
hlt
fdivrl
bnd
aad
sub
xchg
insl
cmp
pop
jp
lcall
gs
sbb
mov
fnstsw
popa
or
xchg
out
xor
popa
mov
incb
mov
add
push
and
fadd
or
mov
sbb
inc
icebp
pop
and
pop
mov
incl
mov
xchg
jecxz
inc
sub
push
add
mov
sub
cmp
pop
pop
fsts
fdivr
pop
mov
cli
jle
in
movsl
jp
test
cwtl
push
or
fs
pusha
stos
jnp
pushf
out
pop
test
fbstp
inc
add
repnz
repz
mov
mov
lcall
xchg
imul
inc
cli
push
std
xlat
push
add
cwtl
sub
addl
mov
ja
daa
mov
es
lock
mov
dec
inc
mov
sub
adc
mov
push
or
mov
shrl
adc
stos
fsts
jnp
sub
cltd
dec
sbb
outsb
rol
je
mov
clc
sbb
fcmovnu
adc
and
into
mov
outsl
cld
inc
or
jb
sbb
dec
jno
inc
xchg
push
jecxz
imul
repnz
divl
adcl
ljmp
dec
cmp
nop
addr16
enter
daa
sbb
lods
jp
scas
push
subl
lods
add
stos
btrl
mov
or
ficompl
sti
inc
pushf
add
xchg
dec
and
int
mov
mov
cmp
sbb
rcrb
dec
add
inc
cmpsb
out
pop
or
lahf
fs
cmp
push
mov
sub
pop
rcl
sarb
or
std
imul
fst
jnp
shll
add
icebp
rorl
add
in
cmp
adc
sub
test
jle
mov
sbb
sub
adc
add
push
cmpsl
test
sbb
jl
outsl
inc
sbb
lret
cmp
pop
test
addl
out
adc
shll
xlat
mov
inc
subl
adcb
test
push
pop
jbe
jle
push
and
mov
lret
dec
movsb
out
pushf
xchg
sub
cltd
cs
xchg
pop
xor
mov
fdivl
in
push
les
pop
push
or
fmuls
pop
jbe
cmp
lea
xchg
sub
imul
iret
fimuls
pusha
push
test
int
push
xlat
adcl
imul
stc
mov
xorl
or
sbb
es
or
int
add
mov
xchg
sbb
mov
dec
out
test
add
adc
inc
xlat
mov
call
mov
fsubrl
and
xchg
jp
dec
xor
dec
mov
mov
fadds
push
cmp
stos
movsb
pop
scas
mov
adc
xor
rcl
enter
repz
shlb
jmp
sbb
xor
lret
jns
sbb
and
out
mov
push
jbe
addr16
cmp
dec
paddw
mov
lcall
shlb
test
pop
sbb
mov
push
ss
push
cmp
mov
add
push
test
dec
icebp
in
dec
imul
mov
mov
xchg
sbbl
mov
bound
repnz
daa
mov
lods
popw
fst
mulb
sbb
cmp
stc
pop
in
sub
dec
pop
add
movlps
lock
mov
push
or
add
push
push
sbb
xchg
jecxz
mov
imull
push
mov
popf
push
ds
hlt
mov
std
dec
js
out
xchg
jns
jle
insl
int3
cltd
les
pusha
mov
test
movsb
pop
or
stc
inc
xchg
xor
mov
push
sub
mov
leave
out
scas
ja
xor
stc
xchg
jg
cmp
ja
adc
inc
shll
fidivl
ret
cltd
and
push
adc
bound
cwtl
js
sub
das
jo
push
clc
lcall
sub
cmp
es
les
jb
pop
push
mov
pop
pop
lret
add
out
icebp
fcmovnu
movlps
daa
push
js
lcall
in
pslld
lret
lahf
xor
pop
int3
and
int3
push
in
pop
cmp
and
fs
lea
mov
or
pop
xchg
insb
mov
jbe
pop
push
push
pushf
scas
pushl
push
popa
or
popa
push
xor
mov
leave
sbbl
sbb
push
mov
test
mov
lret
repz
adc
aad
inc
xchg
divl
xchg
dec
lea
inc
cld
mov
sub
sbb
pop
sbbl
mov
xor
xchg
push
pop
daa
imul
pop
test
loop
adc
xor
pop
mov
xor
sub
push
repz
in
test
in
adc
push
out
leave
adc
adc
test
dec
cs
mov
stos
fcoms
lods
add
xor
pop
cmpl
jns
dec
mov
shrb
sub
or
fisttpll
xlat
popa
in
aas
cs
lcall
lds
sub
stos
jae
jge
test
jmp
or
test
mov
mov
notl
lds
sti
mov
stc
jns
add
hlt
mov
fwait
cmpsl
lods
mov
sub
mov
movsb
sub
shrb
lret
decl
scas
and
push
and
cld
adc
sarl
add
int
jbe
pusha
test
sti
jp
ret
dec
adc
outsb
mov
popl
and
jo
lods
aam
cwtl
dec
das
into
lock
data16
pushf
mov
es
outsw
mov
xor
fdiv
into
fs
pop
leave
les
ss
sub
mov
lahf
xor
aam
bound
mov
xchg
mov
negb
out
pushf
loopne
jns
ja
or
add
mov
bound
in
xchg
mov
pop
mov
push
adc
mulb
sbbl
pop
lahf
push
clc
jae
sub
lahf
jae
test
enter
sti
jmp
mov
adc
imul
fstpt
dec
enter
sbb
cmp
inc
mov
and
mov
popa
paddusw
jo
dec
xor
jl
lods
fisttpl
les
lahf
pushf
scas
and
sbb
out
nop
mov
or
jbe
adc
aam
cmp
cmp
imul
hlt
out
or
dec
mov
ret
sysenter
xorb
rolb
jmp
jns
data16
shll
outsl
xchg
repnz
cmp
cmc
rcr
icebp
out
cli
mov
jmp
lret
jo
lret
js
or
jne
inc
in
adc
or
outsb
das
mov
cmp
or
dec
pusha
inc
lods
loopne
fldcw
iret
jno
stos
lcall
or
push
pop
cmpb
lock
and
inc
jno
sub
shll
sub
xchg
arpl
jle
repz
inc
sahf
add
rolb
xor
repz
inc
sbb
adc
sbb
rcll
push
lods
mov
jle
insl
shll
pushf
add
js
int
les
cmp
jl
imul
icebp
rep
in
mov
mov
mov
sub
add
js
add
push
fnsave
arpl
hlt
xchg
adc
fnsave
dec
mov
cltd
sbb
xlat
popf
movsb
in
ficoms
inc
xor
lret
push
cs
push
pop
imul
cmpsl
sbb
sarb
insb
les
nop
fwait
mov
pop
sub
out
lcall
pushf
cmp
rorb
ds
push
scas
sbb
sbb
xor
aam
inc
mov
push
fistpll
push
xchg
bsr
pop
sbb
popa
pop
jp
sub
cmp
decb
push
loope
in
push
test
jmp
out
imul
cli
sub
cmp
aad
mov
aad
mov
xchg
in
and
mov
les
mov
pop
jb
clc
fnstcw
icebp
pop
xor
mov
dec
and
sarb
ja
gs
or
mul
in
pop
pop
jl
fidivs
mov
test
out
push
addl
dec
dec
and
mov
push
xchg
adc
ds
jmp
pop
in
pop
fidivl
push
dec
jae
mov
sub
outsl
push
xchg
xchg
lcall
push
fsubrl
popa
ret
cmpsl
icebp
xchg
les
push
and
or
jecxz
sahf
mov
xchg
iret
push
sub
cmp
outsb
xor
sub
and
sub
ret
mov
mov
insb
pop
xchg
push
incl
cmpsb
pop
push
mov
cmpsl
rol
dec
sub
pop
xchg
cltd
fs
cmp
xorb
pop
cmpl
fmull
das
dec
std
push
pushf
adc
or
je
cmp
pop
out
or
or
mov
and
rorb
pop
dec
fwait
sub
adc
movsl
mov
pop
div
xor
hlt
mulb
push
xchg
jp
xor
push
popa
cli
xchg
into
push
sub
cld
mov
sti
aam
clc
ficompl
sub
decl
fstpl
pusha
mov
daa
xor
enter
cmp
out
sbb
loop
pop
pop
inc
ret
inc
incb
push
subb
aaa
mov
iret
nop
push
outsb
xor
call
push
je
ljmp
pop
lock
xchg
mov
int
mov
mov
testb
js
jge
pmulhw
xor
pop
pop
or
loopne
mov
inc
es
into
sub
pop
repz
xchg
inc
xchg
das
and
fbstp
dec
pop
mov
mov
mov
inc
std
mov
sbb
pop
popa
inc
imul
icebp
js
fisttpll
sub
lods
xor
mov
imul
out
je
lahf
jb
jo
xor
and
in
addl
cs
sbb
xrelease
repz
mov
fs
addr16
or
push
movsb
testb
cmpsl
xor
and
daa
mov
mov
leave
dec
dec
fistpll
es
scas
push
sub
or
jbe
jmp
mov
add
rcll
int
fsubrs
pop
mov
mov
push
fnstcw
insb
mov
imul
adc
test
scas
sbb
jp
fadds
add
and
fstl
mov
mov
out
mov
adc
and
popf
mov
jmp
roll
mov
jns
and
inc
icebp
and
adc
std
pop
iret
mov
fsubs
hlt
loop
data16
sub
test
or
push
or
test
lahf
xchg
fildl
into
jl
aaa
iret
push
add
out
xor
mov
dec
mov
xlat
add
ret
fcmove
cmpb
mov
lret
add
mov
or
data16
add
popf
sbb
mov
adc
lret
ds
xchg
insl
push
popa
leave
lds
xchg
mov
fsts
mov
mov
sub
and
insb
add
sbb
cmp
shlb
mov
cmp
adc
aam
fsubrs
jmp
pop
sub
ficompl
mov
cld
ja
push
xor
adc
sbb
mov
add
popa
xor
cmp
sahf
hlt
or
push
mov
add
jp
sbb
xor
sub
sahf
lahf
ds
pop
enter
push
scas
addr16
jecxz
xor
rcrl
cmp
cmp
sub
mov
mov
cltd
test
rclb
lahf
jb
fldenv
jl
pusha
mov
js
loope
ret
mov
push
lret
push
sbb
xor
aad
inc
sbb
lods
aaa
arpl
push
ljmp
vprotq
in
or
fisubrl
pop
jae
push
pop
push
repz
aas
cld
movsl
xor
inc
jecxz
inc
cli
test
test
add
ret
mulb
and
mov
cmp
jne
cmpsb
mov
mov
pop
xor
stos
push
aam
cltd
mov
imul
loop
out
xchg
test
xchg
dec
imull
je
push
or
gs
test
test
notb
xchg
lret
cmpsb
jle
lea
daa
cwtl
sbb
es
orb
push
pop
sub
test
pop
jb
jp
fsubrp
aam
jmp
stos
fwait
dec
fiaddl
mov
mov
xor
pushf
adc
addl
push
push
outsb
or
fcomps
mov
mov
test
fs
mov
lock
shl
outsl
push
pop
js
shl
pushf
sbb
out
mov
gs
iret
mov
into
idiv
enter
mov
lds
jns
adc
mov
mov
jmp
jp
popa
loopne
imul
adc
pop
mov
jns
cld
push
movsb
xchg
call
inc
mov
mov
hlt
cltd
cmc
add
movsb
push
and
mov
out
and
push
or
dec
xchg
inc
mov
repnz
pop
rorb
cmp
cmpsb
mov
mov
or
jg
push
mov
loope
jl
sahf
jae
inc
push
sbb
push
dec
cmp
mov
push
cmp
loope
sub
sbb
das
xlat
sbb
mov
clc
daa
test
out
aad
pop
sahf
movsl
xor
pop
leave
inc
ret
cs
mov
cs
jno
xor
movsl
cli
sbb
add
leave
dec
leave
xchg
xchg
loopne
pop
push
sub
repz
pop
push
pop
and
push
and
sbb
cmc
mov
stos
fistps
fs
jmp
out
jmp
mov
mov
fsubs
scas
nop
mov
push
add
es
lret
sub
stos
insl
cmp
sub
inc
arpl
popa
sub
add
clc
mov
sub
out
xchg
mov
mov
dec
cmp
retw
xorl
movsb
stos
push
dec
mov
cmp
lods
into
pop
aad
in
into
push
push
repnz
orl
lret
lcall
test
push
push
inc
cmpsb
adc
jns
lods
push
lods
iret
mov
sub
fldenv
loopne
jmp
jmp
bound
inc
movsb
rcr
jecxz
or
je
addr16
movsb
lea
fiadds
loop
scas
pop
bound
jp
jge
lret
push
rcr
lret
dec
sbb
lock
or
sti
loopne
aaa
jecxz
shll
and
rcl
jp
rcr
stc
mov
es
pushl
daa
out
dec
mov
mov
pop
push
mov
test
push
mov
ss
sbb
mov
lock
clc
test
imul
fwait
ds
adcb
xlat
jne
push
mov
movsb
stos
movsb
arpl
xlat
movsl
cwtl
mov
cs
and
dec
testl
xchg
repnz
repnz
cmp
pop
dec
pop
add
jle
add
test
push
shrl
gs
mov
push
xchg
sbb
in
dec
jo
lds
add
outsb
addr16
xchg
lea
imul
out
mov
jmp
sbb
or
lea
in
in
mov
mov
xor
xlat
xor
int
mov
sbb
or
xlat
jae
cmp
mov
xchg
adc
iret
enter
and
sbb
cmp
mov
jno
jne
dec
roll
xor
pop
jecxz
push
lods
ficompl
sbb
outsl
xchg
sub
sbb
subl
xchg
or
outsb
ret
sub
add
xor
pusha
dec
jg
inc
lcall
cmp
aad
repnz
insb
cmpsl
xor
loop
pop
loopne
push
shl
pop
shlb
sbb
mov
sub
fistps
push
nop
inc
dec
add
imul
mov
adc
mov
mov
and
sti
xor
pop
cld
add
push
jecxz
aaa
arpl
cmpsb
std
int
sbb
mov
pop
es
sbb
jge
fldz
adc
das
push
mov
rol
lds
add
xchg
cmp
call
subb
sub
nop
or
add
outsl
jns
mov
jmp
cmc
jg
cli
inc
pop
sub
xor
inc
fldl
jecxz
inc
iret
pop
mov
mov
movsb
stos
mov
mov
stos
xor
insb
jbe
cli
or
cld
sbb
lds
subps
xorl
out
js
cmp
inc
insb
or
sub
push
jmp
cs
loopne
adc
mov
mov
mov
dec
cli
loopne
add
push
test
scas
mov
sahf
xor
cmp
mov
fsts
mov
pop
stc
jne
dec
icebp
jo
out
mov
mov
pop
push
sbb
arpl
data16
dec
sub
lcall
inc
dec
jo
gs
adc
inc
sbb
es
les
lahf
hlt
movsb
pop
fidivs
jb
dec
adc
cmp
fidivs
pushf
pop
xlat
jge
orl
jbe
mov
fldl
xor
sahf
jecxz
sbb
lds
insl
pop
jmp
pop
jb
adc
or
jmp
and
cltd
scas
push
adc
xor
cmp
push
insl
stos
add
cmc
pusha
add
xlat
xchg
dec
inc
lock
in
nop
dec
test
push
mov
adc
adc
ret
push
data16
add
push
insl
add
xor
adc
pushf
or
jno
pushf
push
pavgb
dec
or
in
fistl
mov
es
cmp
out
sub
adc
test
or
fisttps
xor
xor
dec
adc
dec
out
mov
jo
test
adc
cmp
sub
adc
fsubs
adc
jmp
mov
dec
test
cltd
je
push
add
fsubs
jp
jge
mov
gs
xor
fmull
sbb
push
popf
jnp
imul
push
es
mov
fmuls
scas
and
fisttpll
mov
pop
stos
cmpsl
insb
push
mov
jge
out
xor
repnz
out
mov
inc
dec
push
aam
pop
xor
js
mov
or
hlt
push
pop
mov
test
or
rorl
and
push
inc
jle
div
insl
and
add
mov
mov
mov
rorb
sub
sub
pop
clc
pop
loop
fmuls
fcomi
ret
cmp
lcall
bound
cwtl
rorl
push
pushf
xchg
dec
adc
sub
insl
inc
insl
into
adc
or
pop
inc
dec
mov
cltd
outsl
mov
or
adc
lock
popa
andb
push
ja
jmp
add
jecxz
das
popa
xchg
imul
mov
out
xor
outsb
dec
and
jns
or
mov
xchg
popf
sub
add
rep
loopne
mov
add
xor
inc
xor
push
xor
dec
test
push
out
cli
mov
adc
fdivl
push
mov
mov
or
fwait
imul
sub
test
sub
cld
jae
adc
push
inc
test
loope
in
mov
add
lret
inc
and
lret
js
push
xor
stos
ret
das
mov
bound
cmp
sbb
iret
xchg
pusha
outsl
cltd
mov
pop
mov
mov
xchg
sti
roll
inc
inc
mov
test
pop
inc
mov
mov
dec
cli
push
adc
cmp
inc
into
imul
and
mov
xchg
insl
scas
xchg
lods
insl
pushl
sub
ja
jns
std
sti
pop
pop
adc
add
add
scas
cmpsl
int3
dec
or
cmp
nop
dec
mov
xor
push
testl
adc
les
sti
pop
xlat
cmp
push
and
or
inc
fadd
sub
fnstcw
pop
bound
jns
lds
mov
dec
xorb
xchg
fcoms
sbb
cld
xchg
int
dec
mov
loopne
cltd
pop
cld
xchg
or
mov
pop
mov
icebp
dec
lcall
xchg
cmp
lds
fs
xchg
xchg
inc
adc
jle
push
sub
loop
xor
rorl
stos
das
jno
test
outsl
cmp
lds
push
mov
pop
test
cmp
and
dec
mov
cmpsl
xor
add
ljmp
pushf
sub
sti
push
fmuls
and
cmpl
push
gs
or
loope
addr16
mov
mov
out
out
insb
mov
pop
dec
enter
je
and
hlt
out
rorb
or
jge
pop
sbb
cli
scas
xchg
les
xchg
dec
inc
mov
es
test
mov
fldt
in
or
xor
int
mov
int3
sub
pop
ffree
cmc
pop
xchg
fistpl
fs
jg
pop
ja
mov
daa
sbb
test
cmp
sbbb
ds
mov
loop
jecxz
fildl
pop
out
pop
jle
pop
mov
testl
mov
popl
fs
pop
aad
lret
xchg
add
in
adc
flds
mov
jae
add
sahf
mov
hlt
jg
xchg
scas
es
mov
cmp
loopne
dec
push
mov
jns
mov
test
ret
dec
push
sub
inc
dec
inc
addr16
shl
inc
pop
pop
out
les
sarl
pop
jecxz
fwait
mov
call
pop
jns
imul
cld
push
movsl
imul
dec
ljmp
loopne
addl
fdivr
cmpsb
mov
faddl
xchg
and
jge
subl
jns
mov
repnz
xchg
mov
leave
call
call
stos
mov
in
rolb
cmp
les
out
adc
ret
mov
pop
sub
iret
mov
ja
dec
cld
lock
cwtl
sbb
pop
jecxz
cmp
lods
jp
mov
xchg
loop
movsb
jge
fldenv
cmovae
pop
test
pop
cmp
mov
popf
sbb
in
pusha
nop
jns
jb
xor
aam
scas
jae
popf
subl
jno
out
dec
call
loopne
repnz
subl
outsb
inc
dec
aad
shlb
les
add
and
xchg
shrl
jg
out
lahf
xor
js
lea
adc
or
loopne
js
sbb
cltd
push
incl
call
adc
enter
cltd
call
xchg
mov
mov
out
movsb
cmpsb
inc
int3
and
mov
and
cld
cmp
push
jae
ja
sbb
sub
jnp
jbe
andb
clc
std
ret
cmp
jg
iret
frstor
aad
push
jl
pusha
lret
in
das
icebp
dec
push
add
sti
scas
adc
dec
daa
push
repnz
pusha
aas
in
mov
jae
ljmp
push
out
mov
outsl
je
push
and
in
mov
cmp
push
gs
scas
ss
xor
ret
fnstcw
daa
push
xor
sub
movsb
cmpsl
xor
cmpsl
std
push
or
test
inc
cmp
mov
xchg
icebp
jnp
lock
int3
repnz
sub
test
scas
dec
daa
lea
mov
push
in
mov
aas
cs
mov
popa
mov
arpl
ds
mov
cli
pop
sub
imul
pop
xor
xchg
xor
push
jae
daa
pop
loope
cmpsb
sub
movsb
in
sbb
pop
mov
nop
inc
shll
sbb
pop
in
mov
sub
inc
test
insb
out
je
stos
and
cmp
out
jb
mov
cmp
data16
outsl
mov
das
mov
dec
std
pop
scas
in
mov
sti
arpl
mov
sbb
sahf
push
sbb
and
out
jb
rcrb
jo
mov
aam
cmc
sub
lret
jbe
mov
lods
inc
or
lds
cltd
daa
push
into
filds
xor
xchg
lods
arpl
xor
and
or
pop
dec
ret
xchg
pop
mov
pop
fisttpll
sti
test
cs
sahf
sbb
mov
xlat
sub
test
data16
mov
inc
cmp
lcall
cmp
dec
std
rcr
xor
dec
adc
dec
inc
mov
or
mov
aad
or
mov
jecxz
je
add
cs
sbb
cmp
add
test
outsl
ss
mov
scas
rcrb
cmp
sub
pop
and
imul
out
xchg
add
cmp
mov
bound
push
inc
in
out
xchg
or
mov
in
push
ljmp
adc
push
mov
ret
shlb
jne
cmp
imul
cltd
mov
mov
xchg
sub
rep
mov
movsl
or
push
test
pop
clc
cmp
stos
je
push
add
sbb
test
ret
daa
imul
lds
sbbb
xor
jmp
ljmp
pop
inc
pop
out
cmp
dec
dec
dec
icebp
cmp
jp
push
push
inc
iret
rcrl
cmpsb
inc
in
xchg
sub
adc
mov
shlb
js
into
mov
mov
lcall
cld
jne
push
in
cmp
cmp
cwtl
call
fwait
push
aam
addr16
push
clc
int
jae
test
jno
lods
pop
fcmove
test
fidivrs
cmp
out
mov
fstp
int3
inc
das
mov
in
adc
or
lea
das
cmpb
out
mov
mov
insb
xchg
loop
xchg
rclb
xor
cwtl
mov
je
dec
jnp
sahf
mov
imul
xor
rorb
inc
test
xchg
xor
or
push
lods
mov
popf
cmp
imul
xchg
sbb
cmp
adc
or
loopne
cmpsb
mov
stos
orl
lods
mov
mov
insb
mov
and
mov
sti
cmp
je
pushf
push
jmp
push
mov
mov
call
xchg
dec
test
or
pusha
pop
sbb
cmc
cmp
jmp
js
push
adc
cmpsl
adc
add
bound
push
or
repz
pop
movsb
mov
aad
mov
or
loopne
mov
sbbb
and
xchg
imull
sbb
inc
roll
cli
adc
mov
push
test
loopne
adc
xchg
rolb
pop
push
les
mov
add
sub
frstor
adc
popf
lahf
insb
fwait
rorb
or
add
int3
push
sub
xchg
xor
sub
std
rcll
push
inc
outsb
or
jns
jnp
aam
ss
mov
pop
clc
dec
mov
mov
fadds
xor
sbb
mov
fidivrs
or
es
pop
scas
mov
fcomps
and
ret
ret
out
mov
pop
jne
jp
mov
push
pop
das
push
sahf
shll
jo
lret
pusha
test
inc
orl
fwait
loop
stos
mov
or
test
sub
popa
cmp
in
lret
aad
dec
es
mov
hlt
lcall
clc
sub
clc
jnp
lret
inc
push
dec
push
inc
leave
mov
js
mov
mov
es
fldt
xchg
test
cmp
testl
insl
and
mov
fmull
data16
mov
jno
mov
add
test
outsb
insl
or
sub
out
mov
out
cmp
rclb
sahf
call
int3
xor
mov
sub
push
ret
mov
lahf
mov
loopne
clc
push
pop
int3
push
push
mov
in
cmpsb
iret
daa
xchg
inc
call
xlat
dec
ds
push
je
aas
stc
test
adc
mov
cmp
jg
out
clc
int
jge
das
or
negb
shrl
bound
cwtl
mov
cmp
pusha
scas
add
sub
jle
lahf
scas
into
inc
xchg
js
mov
mov
jmp
mov
fsubrl
gs
add
dec
add
mov
jl
loop
and
adc
stos
push
int3
loope
cmp
cli
sub
adc
fs
cmp
mov
xadd
loope
add
lds
push
je
mov
cli
outsl
test
mov
ds
xchg
stc
shll
jl
jl
mov
pop
xchg
dec
mov
fstpt
push
outsb
fstpt
ret
mov
test
in
js
xlat
enter
jae
push
jnp
aas
iret
stc
cmp
into
or
cmp
sbb
and
fdivrl
pop
mov
cmc
xchg
mov
mov
mov
or
clc
insl
sahf
stos
adc
decb
lret
pop
dec
push
test
mov
xchg
in
inc
xlat
jg
jp
repnz
xor
inc
int3
ljmp
sbb
nop
test
movsb
repnz
mov
cmc
jg
out
popf
cmp
mov
adc
fbld
fs
movsb
loopne
jno
std
out
idivb
xchg
xorl
hlt
arpl
add
outsb
out
fildll
repnz
fwait
stc
pop
das
add
shrb
sbbl
sub
cmp
cltd
icebp
iret
cmp
js
push
mov
icebp
lea
adc
fcomps
leave
stos
lcall
hlt
stc
les
mov
pop
lods
cli
fisubs
lret
mov
rclb
sbb
dec
sub
test
arpl
sub
shrl
jnp
icebp
mov
popf
jmp
frndint
jmp
subl
jge
mov
fisttps
xorl
xor
std
dec
popf
xchg
int3
fidivl
test
adcb
faddp
adc
outsl
lret
sub
mov
add
mov
pusha
mov
cs
inc
xchg
sbb
test
dec
shlb
dec
xchg
imul
outsl
fstpt
xor
inc
dec
aaa
clc
into
mov
push
push
arpl
es
enter
push
adc
out
cmp
cs
stc
mov
adc
lods
lea
sub
sub
adc
and
mov
in
mov
movsl
shrb
pop
xor
lds
outsl
push
addr16
jne
pop
inc
adc
adc
pushl
sqrtps
dec
sub
push
lahf
sub
mov
cli
sbb
cmp
xor
aad
mov
mov
jns
hlt
cltd
push
mov
dec
pusha
rolb
sbb
push
mov
insl
push
adcb
loope
push
and
mov
dec
sbb
cld
pop
test
shll
imull
jge
pop
rcll
inc
xchg
push
sbb
cld
jg
flds
faddl
jge
push
lret
lahf
xchg
notb
and
test
mov
iret
ss
mull
cli
jge
rorl
jnp
int
xor
inc
nop
jge
std
call
leave
inc
pop
hlt
mov
or
pop
inc
hlt
mov
push
pop
pop
pop
sbb
sahf
inc
addl
xor
push
cmp
sub
lods
xchg
and
pop
pop
pop
scas
pop
ss
and
dec
xor
or
add
lods
scas
in
ds
adc
pop
pop
cmp
mov
cmp
and
cs
add
ds
clc
push
mov
stos
int
pop
dec
add
mov
mov
fiadds
xchg
mov
stos
in
mov
add
leave
in
pushf
xor
push
mov
jo
aas
arpl
pusha
sarl
xlat
arpl
sahf
sub
movsb
into
xchg
xor
mov
nop
js
ds
sub
mov
faddl
cld
fsubr
lahf
cmovge
enter
mul
dec
stc
mov
mov
repnz
or
js
clc
adc
xor
xchg
sub
out
or
insb
je
push
mov
out
push
mov
mov
add
add
fmull
cmpb
jl
mov
push
dec
out
add
sbb
stc
scas
xchg
xchg
xchg
out
dec
loop
pusha
sub
loopne
mov
pop
push
adc
int3
clc
cs
dec
lret
sub
and
sbb
addl
int3
scas
dec
inc
fadds
inc
shl
outsb
and
daa
push
or
sbb
mov
sbb
bound
sahf
ss
lea
mov
pop
mov
jmp
push
rorl
imul
jmp
fdiv
lahf
push
test
loopne
jbe
daa
push
dec
lock
sti
pop
jbe
mov
or
pop
sbb
out
bound
dec
xor
or
ret
fnsave
jno
adc
add
cmp
dec
mov
in
daa
scas
xchg
cmp
or
iret
sub
insl
movsl
add
das
cwtl
leave
xchg
push
stc
inc
insb
mov
or
pushf
lods
mov
in
out
or
xchg
push
pop
sub
inc
dec
mov
into
ret
push
mov
sub
mov
mov
cs
cli
movsl
mov
jns
shlb
sub
mov
in
mov
mov
je
aas
cmp
inc
clc
insl
movsb
stos
std
mov
cld
test
fstl
pop
inc
aad
mov
push
jo
dec
mov
in
inc
test
fs
push
arpl
sarl
jge
pop
jecxz
pop
mov
scas
sahf
repnz
sbb
hlt
xlat
xor
lret
sti
pusha
movsb
mov
cmpsl
push
inc
in
mov
les
or
movsl
test
shrb
mov
sub
pusha
ds
fsubrs
sbb
lods
test
xorb
jg
rcll
ljmp
add
jmp
mov
arpl
mov
out
sbbb
jge
das
mov
ficoms
push
aas
xor
popa
lods
jae
or
push
or
fnstsw
pmuludq
lret
add
testb
sub
les
or
cld
fbstp
mov
dec
leave
inc
addr16
xchg
bswap
cmp
shrl
dec
xor
add
les
add
cmp
gs
mov
test
and
ss
pop
stc
popf
lcall
ret
dec
je
or
ds
in
jg
xlat
mov
fidivrs
or
sbb
dec
adc
insl
mov
pop
in
push
and
out
xor
inc
movsb
aaa
lods
enter
lcall
int3
mov
dec
dec
iret
movsb
mov
in
bnd
sbb
push
pop
flds
and
jp
out
dec
xchg
gs
or
sbb
xor
icebp
cmp
sub
pop
add
add
outsb
loop
popf
fwait
scas
aaa
cmp
jp
pusha
xchg
mov
das
xlat
or
adc
loope
add
mov
scas
cmpsb
stc
cli
jge
sbb
and
mov
popf
jmp
in
mov
pop
inc
rcll
popa
es
sub
fdivr
or
leave
xchg
aad
adc
xchg
cmp
daa
imul
lds
test
cwtl
or
fldenv
int
addb
mov
lea
data16
mov
push
jno
ds
in
rcll
sbb
cmpsb
out
les
icebp
or
push
xchg
xor
lret
fnstsw
rol
outsl
mov
insb
aaa
dec
pop
or
mov
inc
mov
mov
loopne
insb
lret
insl
sub
js
out
jp
iret
push
lret
mov
dec
sbb
push
jo
dec
out
add
insb
xchg
ljmp
dec
divl
xchg
push
sub
popl
into
inc
jmp
repnz
adc
out
sbb
sub
loopne
sub
push
cmp
adc
inc
movsb
push
cs
fdivs
addb
inc
cmp
push
jo
das
out
push
incb
add
leave
jae
inc
xchg
xchg
stos
in
outsl
ret
jecxz
scas
jb
addr16
clc
add
cmp
dec
hlt
mov
push
inc
pusha
jns
lock
sbb
cli
lods
jge
xchg
out
jnp
mov
lcall
xor
pushf
shl
xrstors
outsb
pop
xchg
imul
mov
or
je
lsl
je
cmp
mov
jno
sti
mov
stos
xchg
out
mov
sarb
or
add
int3
mov
and
xchg
xchg
sub
sub
xchg
mov
mov
cmp
cmp
outsl
xchg
push
dec
test
inc
in
ds
pushf
je
dec
push
lds
outsb
outsb
arpl
jge
xchg
das
add
clc
icebp
repnz
es
into
dec
cmp
inc
adc
xor
lahf
jmp
icebp
test
or
sahf
negb
xlat
or
mov
popf
test
mov
pop
mov
lret
fcom
xor
pop
sub
add
pop
jmp
adc
loop
leave
jmp
jp
packssdw
inc
repz
add
test
dec
sbb
aaa
xchg
lea
xor
pushf
popf
dec
in
dec
inc
mov
mov
das
sarb
xor
jl
adc
lret
enter
jbe
cwtl
xchg
jne
dec
pop
or
mov
lock
add
dec
dec
mov
sti
daa
mov
cli
not
push
push
mov
jns
push
dec
cmp
repnz
mov
ret
cmp
mov
je
fisubrl
dec
leave
shlw
xchg
shrb
fldl
xor
jl
adc
sbb
jno
aad
mull
inc
lcall
divb
bnd
ds
jle
mov
mov
mov
jecxz
mov
rcrl
sbb
movsl
iret
call
xor
sbb
inc
scas
mov
iret
insl
outsl
fs
xchg
jge
mov
stos
sub
jl
rcl
or
fwait
aaa
mov
mov
gs
jns
iret
jecxz
pop
cwtl
xchg
add
jae
sub
lret
sub
movb
inc
push
dec
bound
fdivrl
arpl
push
ljmp
lret
outsb
xchg
data16
push
in
stos
mov
jle
aaa
push
divb
in
mov
imul
movsl
sbb
lret
xchg
pop
dec
sbb
jmp
sbb
jl
call
push
cwtl
add
xor
out
pop
int3
int
push
daa
pusha
popf
push
aas
stos
mov
adc
fwait
mov
dec
rorl
add
push
fldpi
pop
mov
lret
lods
les
lock
cmpb
loope
in
out
dec
sub
hlt
pop
mov
adc
loop
sbb
ss
jb
sbb
or
cmp
cmp
xchg
out
pop
jecxz
fidivrl
push
in
movsl
mov
push
sub
insl
dec
enter
add
insb
or
stos
std
addb
cmp
clc
mov
push
dec
and
or
rorb
fdivrp
or
jb
ret
aad
mov
pop
test
dec
pop
dec
jo
and
push
gs
fisttpl
fcos
std
jg
mov
inc
mov
sbb
lds
jns
idivb
jne
inc
cmp
inc
rclb
xchg
xchg
pop
jae
or
mov
rcrl
mov
loope
jb
hlt
lea
xlat
xor
mov
pop
clc
mov
mov
sub
sbb
or
cmp
orl
cmp
fistpll
add
pop
add
cmpsb
pop
push
mov
sbb
mov
add
data16
imul
xchg
or
push
pop
test
sahf
in
xor
mov
jl
mov
frstor
arpl
push
mov
xchg
pop
inc
gs
fldcw
mov
dec
pop
hlt
mov
sbb
jno
ds
dec
das
pop
xchg
flds
stc
pop
push
lret
mov
push
cmp
addr16
rcr
push
cmp
inc
xchg
in
sarl
imul
cs
sub
sbb
dec
loope
mov
sbbl
pusha
xchg
repnz
adc
push
or
ds
lahf
mov
inc
cmp
arpl
or
inc
sbb
sbb
aas
insb
xor
cmpsb
sub
popf
or
xchg
jp
xchg
adc
fsubl
cmc
lret
push
orb
or
fadds
shrb
lret
inc
push
insl
mov
mov
testl
insb
pop
add
add
cmp
std
sbb
or
lods
subb
fisttpll
cwtl
std
in
sbb
ljmp
cmc
add
adc
pop
sub
push
dec
insb
and
add
dec
ret
dec
xor
sub
sahf
gs
push
jns
call
and
or
addl
in
adc
fidivl
pusha
jne
adc
push
mov
jl
dec
pusha
sub
out
push
dec
ljmp
push
movsb
xadd
hlt
sub
mov
mov
push
dec
pop
aam
shrb
inc
adc
mov
sti
imul
or
sub
or
push
ficoms
push
add
push
faddl
push
pop
push
mov
sub
sbbl
pusha
push
addb
mov
lcall
lock
es
inc
dec
pop
xchg
mov
fs
dec
ljmp
jnp
jae
movl
jecxz
lods
xchg
or
aas
push
push
mov
daa
or
inc
pushf
or
xor
jl
aas
gs
push
test
cwtl
mov
stos
mov
add
xchg
dec
mov
rolb
or
add
or
jae
mov
mull
jmp
test
and
lock
xlat
dec
pop
push
test
cmp
fwait
stos
xchg
mov
test
push
xorl
fimuls
pop
outsl
ret
adc
cmc
dec
lods
dec
jns
sbb
imul
pop
mov
sbb
xlat
sub
shrl
inc
scas
cmp
scas
stos
push
xor
or
fcmovbe
or
pusha
cltd
fwait
pop
sub
fmul
cli
data16
ljmp
loopne
push
jge
in
sub
sbb
in
xor
ret
addl
jmp
jmp
push
dec
insb
pushf
xchg
cld
imul
adc
cmpsb
rolb
jnp
lods
repz
add
push
and
and
mov
jg
or
mov
addr16
xchg
jb
testb
cmp
push
cmc
inc
push
sub
dec
xchg
cwtl
arpl
xor
lods
or
les
push
jg
lods
fs
rcl
lea
mov
aam
and
pushf
cs
sbb
cli
into
pop
sub
std
fstpt
xchg
cld
jb
test
out
aas
das
in
cmp
cli
es
adc
and
aas
or
shl
adcb
xchg
dec
xchg
ljmp
repnz
xor
xchg
vfrczps
xchg
push
mov
lahf
popf
jo
and
int
push
bound
pop
rcr
pop
ficoml
lret
stc
js
mov
std
loop
mov
std
pop
xor
and
sbb
mov
cld
or
jb
mov
lcall
mov
fwait
mov
iret
movsb
scas
lret
out
loope
dec
mov
in
push
adc
jno
cmpsl
jo
xchg
loope
mov
cvtdq2ps
sub
inc
out
andb
xor
bound
adc
xor
add
insb
xlat
lods
test
scas
xchg
cmc
xor
mov
fidivl
inc
pop
add
outsb
insb
push
pop
mov
jns
outsb
jnp
and
pop
dec
xchg
sbb
daa
out
pop
lahf
sbb
sti
mov
push
incl
cmpsl
cmp
int
fnstcw
adc
es
xlat
pop
lds
movswl
test
ss
andb
sti
jb
bound
out
jno
icebp
pushf
lret
rolb
dec
out
lret
in
mov
or
in
in
fldt
les
imul
stc
ja
mov
and
xlat
loope
aad
iret
pop
sbb
sbb
cmc
repnz
inc
xor
or
aaa
mov
mov
adc
sarb
sbb
jmp
and
mov
mov
push
adc
lret
stos
ret
add
out
or
mov
jo,pt
jns
and
std
pop
movsb
jno
mov
and
sti
repz
cmpsb
scas
sbb
loop
pushf
sbb
sub
jne
pop
sbb
lock
shll
mov
mov
scas
cmpsb
pushf
inc
jl
int3
mov
cltd
adc
dec
enter
xor
stos
push
je
out
fists
jns
xchg
icebp
dec
mov
inc
sub
shl
hlt
pop
sbb
rcl
pop
out
jne
outsl
leave
mov
out
push
in
mov
fwait
lods
xor
push
std
xchg
or
scas
push
stos
jnp
mov
shll
popf
jmp
loope
int
mov
pop
or
cli
dec
cmp
mov
pop
rclb
cmc
iret
mov
mov
inc
add
and
mov
int3
cli
ss
push
inc
ja
iret
push
fisttps
mov
inc
lods
adc
in
pop
xchg
stos
or
js
mov
insb
jg
mov
leave
pop
sub
aam
inc
sub
mov
dec
jo
fwait
out
push
loopne
push
test
repz
dec
and
adc
xchg
cmpsl
and
fwait
gs
mov
loopne
and
xchg
adc
mov
jecxz
iret
or
inc
fstpt
shrl
push
cmp
cmc
fisubrl
or
lret
jl
xor
test
stos
xchg
mov
jns
push
or
rorl
les
gs
jge
mov
push
ljmp
addb
std
add
xlat
mov
mov
xchg
add
jmp
div
inc
mov
ffreep
sbb
pop
scas
adc
sub
xor
cpuid
pop
test
jg
test
mov
dec
cmp
inc
pop
xchg
lea
xchg
inc
sub
xchg
cli
push
sbb
shll
or
cmp
jmp
mov
outsl
in
inc
dec
repz
es
sub
jle
hlt
fsubrl
jle
jcxz
call
jmp
xchg
adc
pop
add
jns
insl
icebp
pushf
push
sub
mov
xor
into
call
faddp
data16
mov
xor
repz
cmp
lock
lds
mov
rcrb
pop
out
and
cmp
mov
repnz
jne,pt
and
and
xchg
xchg
mov
mov
pop
sbb
mov
jge
out
pop
xor
notl
jno
mov
cmp
pop
cmp
jb
sub
fcomps
das
out
xor
push
adc
jecxz
sbb
or
jnp
sarl
add
pop
pop
in
cld
int
fnstenv
call
call
arpl
jne
shl
in
out
xchg
lods
push
jae
div
rsm
dec
and
xorb
out
test
mov
insb
in
lret
out
fsubrs
push
adcb
cmp
inc
jl
imul
or
inc
fidivs
daa
rolb
orb
mov
popa
in
xchg
jg
dec
xchg
xchg
jb
mov
int3
jmp
mov
test
mov
popf
inc
push
fwait
popf
xchg
cltd
dec
push
push
adc
iret
das
push
lret
scas
or
lcall
into
add
add
rcl
adc
and
xchg
test
nop
shl
adc
mov
add
mov
mov
lds
fdivr
lods
mov
imul
push
lds
add
das
fs
ja
imul
mov
or
sbb
pop
mov
adc
pop
xchg
or
movsb
adc
notb
jge
cmp
push
pushf
pop
adc
dec
cmp
adc
std
jo
push
aas
push
aaa
and
lahf
loop
or
shrb
leave
push
pop
out
jg
xchg
leave
loope
scas
add
sbb
es
das
cmp
jno
fsubrs
shrb
mov
lret
mov
loop
in
in
add
dec
sub
cmp
ss
mov
sbb
sub
addr16
int3
scas
ljmp
or
je
mov
push
push
leave
aam
aam
subl
dec
pop
inc
out
sbb
je
js
neg
add
stos
cmp
sbb
push
fbld
push
pop
push
enter
sbb
loop
mov
shrl
mov
cmpsb
or
prefetch
js
dec
aad
fildl
or
out
incb
pop
sbb
sub
mov
ror
dec
mov
test
sub
cltd
mov
scas
mov
mov
jnp
pop
call
in
in
scas
sbb
loop
cmp
enter
xchg
inc
mov
decb
mov
in
mov
pop
ljmp
shlb
cmp
das
test
shll
ss
xor
add
insb
push
cmp
dec
movsl
mov
sbbl
jne
dec
xor
lods
xchg
mov
repz
sbb
or
mov
idivb
clc
fdiv
and
push
pop
push
outsb
pop
sub
cmp
sti
adc
add
mov
inc
in
in
lea
int3
sbb
add
in
fcomi
xor
pop
stos
stos
push
lods
leave
movsb
std
imul
mov
imul
cmp
jnp
or
test
mov
out
lods
mov
iret
xor
pop
into
addr16
push
std
aad
pop
rcll
sbb
xlat
daa
push
fucomp
sti
icebp
pushf
jnp
repz
iret
cmc
cld
test
in
xchg
mov
xchg
stos
aad
add
or
mov
lds
mov
dec
xor
push
dec
je
mov
push
inc
scas
sub
mull
push
dec
mov
insb
push
jbe
lods
fcmovne
adc
push
or
dec
cmp
nop
aad
mov
mov
pop
sar
aas
jl
rorl
inc
mov
test
arpl
mov
jecxz
js
stos
inc
inc
cli
push
inc
shr
or
xchg
sbb
rorl
pop
in
mov
xor
add
cmc
stos
movsb
lea
pop
cmp
add
fwait
aas
fildl
pop
int
rcrb
mov
neg
std
pop
notrack
ficompl
sub
lahf
call
inc
pop
sub
pop
cmp
sub
cmp
lret
sub
ficompl
sbb
inc
cmpsl
ret
sbb
lods
loopne
aad
cli
repz
inc
out
test
xchg
testb
out
shrl
xchg
lods
ret
pusha
fistps
fimuls
scas
scas
or
fnstenv
push
jns
cs
icebp
or
mov
xchg
into
and
sbb
adcb
lea
clc
into
cmpsl
pop
pop
inc
daa
enter
scas
shr
shl
dec
mov
and
pop
pop
addl
mov
aas
push
mov
mov
sbb
pop
nop
add
loope
mov
mov
outsl
fwait
inc
pop
addr16
mov
out
xchg
fimuls
and
movsl
dec
push
pop
xchg
iret
lea
clc
pop
sahf
dec
adc
mov
dec
ret
mov
popf
insb
xlat
roll
fs
sbb
ficoms
and
addr16
cmp
cmc
into
test
xchg
xchg
dec
fstps
scas
dec
and
mov
cmpsb
lret
xor
pop
dec
lock
mov
aam
test
adc
dec
leave
cmp
sysret
sbb
pushf
test
out
pop
aas
cmp
rcrb
cmp
pusha
sub
adc
or
jns
imul
push
je
and
fdivp
clc
outsb
add
or
pmovmskb
fcmovnbe
xchg
in
mov
dec
sub
in
add
adc
cltd
in
xchg
ja
outsl
rcll
bndldx
movsl
test
mov
and
mov
aas
jnp
lret
mov
dec
insl
repnz
test
outsl
testl
pop
aad
sbb
pop
push
inc
cmp
mov
loopne
inc
out
dec
add
adc
fnstcw
xchg
scas
lcall
xchg
dec
and
and
add
pop
or
adc
and
or
shrl
cmc
dec
sub
mov
dec
movsb
pusha
jae
jp
faddl
and
xchg
outsb
jmp
sub
push
clc
or
cld
jle
mov
jge
data16
in
adcb
pop
adc
jnp
enter
push
cwtl
pop
shl
xor
mov
sbb
mov
and
cmpl
fsubrl
aas
mov
lods
gs
mov
dec
in
adc
mov
int3
push
test
or
gs
pop
shlb
push
xor
jge
mov
jle
or
sub
insl
packssdw
cmc
std
xor
dec
arpl
pushf
mov
shll
mov
dec
scas
jae
push
mov
adc
mov
cmp
lea
pop
adc
lcall
add
insl
out
fcoml
inc
pop
jns
loop
std
cmp
mov
movsb
fidivrl
push
mov
out
lret
dec
int3
dec
xor
fnsave
adc
cmp
push
mov
xchg
jp
clc
push
xchg
mov
fidivs
stc
add
xor
out
push
adc
mov
loope
adc
push
scas
push
leave
hlt
inc
sahf
jmp
mov
cmp
mov
dec
aaa
into
leave
adc
add
fidivs
leave
fsubrl
fs
jmp
inc
test
mov
mov
sub
adcl
popl
pop
imul
sbb
fnstenv
out
pushl
add
sub
pop
sti
jns
in
cmp
cli
pop
jle
xchg
aaa
inc
mov
test
test
mov
mov
and
shrb
xchg
adc
pusha
adc
dec
dec
cmp
into
dec
xor
iret
or
xchg
jbe
jle
pop
dec
adc
stc
xor
int
mov
inc
dec
mov
fwait
add
or
sbb
stc
int3
sahf
and
push
divb
jns
mov
mov
add
push
pop
mov
and
pop
cmp
in
dec
and
push
daa
invd
and
fsubl
add
and
jne
push
negl
inc
call
push
aad
cmp
xlat
sub
lahf
add
mov
xor
aam
cli
mov
xchg
movsl
mov
xor
dec
mov
push
mov
fisubrs
jp
aad
and
mov
jne
mov
pop
and
popa
fcmovne
test
jmp
test
in
push
mov
shrb
mov
out
in
js
cmp
loope
gs
adc
les
lock
xor
jns
cmp
leave
cli
mov
and
imull
movsl
std
inc
jge
adc
jb
orl
or
cmp
mov
adc
jp
ret
jmp
add
mov
repz
lds
cmp
inc
es
sub
adc
loopne
xor
inc
sahf
lret
xor
lods
inc
les
addr16
push
jbe,pt
cmp
repnz
lock
loopne
xchg
ret
push
in
into
int
dec
fstpt
mov
xchg
ret
ja
sbb
jecxz
sub
inc
je
shll
push
adc
and
sbb
rorl
scas
jne
xchg
insb
push
out
pop
bound
jns
cmpsb
add
bound
fnstenv
je
cmp
mov
loopne
mov
ds
insb
mov
ja
sub
dec
and
test
add
orl
push
and
lret
jmp
bsr
lret
xor
clc
popa
sbb
cltd
jg
sbb
stos
sbb
mov
sub
xor
ret
js
shlb
cltd
stc
cli
je
jg
int3
shrl
mov
ljmp
in
stc
lea
inc
mov
jp
insb
xchg
mov
push
pop
daa
stc
out
push
xor
adc
stos
out
xchg
or
push
lcall
adc
test
adc
js
add
nop/reserved
pop
movzwl
mov
mov
fisubs
push
arpl
pop
ficoml
addr16
jb
mov
sub
or
fcmovnu
sbb
inc
loopne
adcb
pop
mov
mov
ret
xor
out
mov
sbb
adc
cmp
jmp
ss
test
inc
ret
lds
stos
pop
int
adc
jecxz
pop
sub
cmp
jg
cs
adc
mov
xor
or
or
mov
fwait
xor
xor
test
stc
mov
xchg
rorl
js
mov
testb
aas
xchg
cltd
dec
pop
je
or
mov
test
cwtl
jb
fstl
ss
mov
dec
imul
inc
cs
dec
or
and
into
ret
cmc
scas
jecxz
lods
ret
lods
dec
mov
jns
mov
testb
cmp
pop
enter
mov
lods
mov
xlat
cmp
jmp
sub
jno
sbb
sbb
lret
xchg
cmc
or
lahf
xlat
js
nop
cltd
call
dec
add
push
push
sbb
push
push
or
dec
iretw
mov
xor
fcoms
dec
xor
loope
and
rcl
inc
pop
aad
xlat
movsl
fimuls
fwait
orb
xchg
fimuls
std
sub
add
mov
negb
jmp
sub
add
xlat
repnz
popa
in
or
dec
mov
fadds
scas
pop
sbb
iret
or
rcrl
add
push
clc
call
dec
push
les
mov
aas
push
xor
mulb
add
xchg
sub
add
ret
jno
sub
push
or
out
sub
xchg
fsubl
pop
lods
mov
push
fdiv
xchg
mov
mov
xor
mov
out
stos
jne
int
outsl
mov
jmp
xlat
push
cld
xlat
ret
das
cli
shrl
jmp
jo
loop
lret
mov
divl
dec
xchg
mov
cli
add
inc
pusha
pop
mov
loope
les
xor
adc
ljmp
add
adc
nop
push
in
scas
loop
mov
cwtl
mov
rcrb
push
sbb
inc
mov
nop
mov
sub
sbb
xor
testl
sub
imul
lret
adc
test
iret
pop
inc
xchg
aam
mov
cli
repnz
insl
jbe
stos
lods
adc
scas
push
push
orb
cli
push
sahf
mov
xor
xor
jl
mov
sbb
insl
push
and
sub
cld
test
pop
mov
sbb
adcl
mov
cmpsb
mov
loope
push
subb
pop
in
negl
dec
cwtl
push
in
cmc
test
ljmp
or
and
js
out
lahf
fistpll
ret
push
mov
mov
cmpsb
ja
mov
cltd
imul
dec
jae
gs
push
inc
pop
pop
popa
add
jmp
outsb
mov
rolb
jo
mov
push
int
in
pop
icebp
sub
in
mov
fcmovnb
sub
mov
sbbl
data16
inc
cli
sbbb
fs
popf
pop
shl
mov
popf
xchg
dec
out
test
and
cs
in
scas
ret
xchg
insb
jmp
mov
or
aam
dec
cmpsb
mov
lahf
shl
dec
cmp
and
out
stos
jp
out
testl
mov
loope
mov
fucomi
mov
jne
cmc
sbb
fistpll
cmc
lods
cmc
sbb
jp
test
fiadds
fs
out
mov
lods
imul
lds
jnp
das
adc
out
fnsave
pop
test
sub
imul
addb
std
lods
mov
pop
jmp
mov
in
mov
minps
mov
scas
add
aaa
xor
and
xchg
pop
xchg
jge
in
inc
inc
jl
mov
xor
and
and
sarl
mov
out
cmpsb
les
xchg
or
das
ja
sub
sbb
or
aad
movsb
jmp
loope
loope
mov
jo
xchg
push
xchg
push
nop
or
cmc
jge
testb
mov
pop
fs
inc
stos
pop
out
sbb
jbe
rclb
icebp
test
stos
push
popa
and
arpl
sub
sub
pop
pushf
scas
idivl
ret
and
and
pop
imul
adc
mov
or
mov
cmp
cmp
lahf
xor
in
pop
cmc
es
jb
icebp
lea
clc
jmp
das
mov
loope
pop
out
jecxz
mov
jp
repnz
sub
enter
dec
dec
enter
xor
sti
jns
fwait
pop
fsubp
aam
mov
mov
mov
std
movb
jnp
insb
mov
mov
leave
and
addr16
sbb
push
cltd
mov
mov
clc
cmp
sti
mov
mov
xchg
dec
jge
testl
stos
and
dec
cs
gs
stos
mov
mov
mov
xchg
xor
fsubrl
leave
jne
fidivs
fistl
sbb
out
hlt
and
es
push
push
decb
push
xlat
sub
leave
push
cmc
xchg
repz
mov
inc
xor
addr16
or
push
pop
cs
ljmp
int3
lea
rol
into
pop
xor
pop
mov
pushf
into
aaa
push
sbb
int3
lock
mov
push
daa
mov
in
xchg
fwait
js
imul
fimull
lds
stc
push
pop
jns
mov
sbbl
cli
imul
pop
aam
mov
push
xchg
jmp
clc
repz
cs
enter
test
outsl
inc
or
mov
and
movsb
adc
loopne
sub
adc
adc
cmp
les
daa
pop
std
or
push
sbb
fildll
loop
loope
mov
ficomps
dec
inc
popa
push
je
xchg
popf
in
sub
lahf
sub
call
pop
mov
inc
fldl
in
aas
push
addr16
pop
fdiv
inc
fucomp
jecxz
sbb
mov
or
lcall
lea
xor
dec
pop
push
int3
and
sahf
sbb
push
ret
popf
or
test
nop
cli
daa
and
fwait
push
pushf
lock
ret
mov
inc
mov
shlb
hlt
arpl
xchg
shlb
cld
out
iret
mov
pop
dec
xchg
into
pop
jbe
lret
jae
mov
inc
pop
jns
mov
push
adc
sbb
adc
mov
in
inc
hlt
add
lea
mov
mov
fwait
xchg
jg
fldl
fldenv
push
jge
mov
and
dec
rcrw
inc
inc
xor
ds
adc
sbbl
cmpsb
test
out
fnsave
mov
xor
out
xlat
push
mov
sbb
xor
push
add
mov
enter
jae
xor
in
sbb
ss
rcrb
test
insl
enter
and
scas
arpl
icebp
sti
shlb
nop
imull
fidivl
cmp
sbb
jmp
inc
shlb
sbb
stc
adc
mov
mov
or
push
push
jb
push
sbb
push
cli
cwtl
cmpsl
dec
lock
testb
or
mov
mov
mov
mov
pop
dec
pop
dec
mov
je
mov
fbstp
clc
arpl
xchg
insl
jns
mov
pop
iret
xchg
lret
cmp
dec
out
movsb
stos
mov
dec
mov
outsl
inc
pusha
scas
lret
test
cmp
repz
rcll
nop
into
xor
mov
push
mov
adc
xor
jns
arpl
mov
sub
xor
ss
or
add
inc
pushf
not
scas
pushf
inc
xchg
pushf
dec
adc
fs
adc
add
stos
sahf
fsubs
out
add
outsb
jns
es
insb
ja
pop
leave
push
inc
shlb
arpl
push
js
clc
xchg
pop
adc
jno
and
data16
in
test
mov
pusha
inc
mov
dec
pop
fisubrl
xchg
mov
jno
dec
roll
subb
mov
cmp
sbb
ret
rep
sbb
mov
cmp
hlt
in
stos
int3
push
lret
push
mov
and
inc
sub
js
nop
out
and
jbe
and
mov
mov
or
jo
repnz
or
loope
jl
xor
inc
jl
xchg
jecxz
imulb
lret
outsl
popf
dec
jb
test
mov
and
cmp
mov
test
jp
aaa
push
or
aaa
cmc
or
notl
fildl
ja
sbb
ja
adcl
mov
fstps
jne
ljmp
fisttps
in
shll
cmovo
pop
ret
mov
sub
stos
jbe
cwtl
icebp
fwait
cmpsb
out
pop
ja
sub
pusha
das
mov
jae
adc
mov
lock
arpl
xchg
ja
lock
mov
mov
gs
movsl
in
aad
mov
movsl
or
inc
sub
mov
push
addl
rcll
inc
nop
loop
adc
mov
inc
sti
outsb
test
ss
in
out
sbb
ds
mov
stc
insb
sahf
xor
lcall
sub
jg
or
xor
mov
and
mov
mov
popa
filds
inc
add
push
aaa
inc
pop
pop
clc
jne
jmp
adc
dec
or
sbb
dec
inc
push
fcomi
sti
imul
xchg
pop
inc
push
sahf
mov
out
jne
pop
rorl
ret
cltd
inc
sbb
stc
jecxz
pop
imul
push
pop
mov
data16
xchg
sbb
adc
or
inc
fsubl
xor
push
add
out
mov
loop
int
inc
xor
or
add
pop
fstpt
pop
mov
arpl
outsb
xor
mov
sub
push
popa
mov
mov
jge
fdiv
test
pop
sbb
inc
push
pop
ret
jle
lcall
imul
pop
xor
jne
scas
popf
nop
fs
or
sbb
mov
inc
hlt
mov
cmp
mov
loopne
lret
mov
es
sahf
bound
lret
cmp
xor
push
and
xchg
mov
jb
dec
inc
aas
xchg
ljmp
or
mov
icebp
popf
mov
mov
lret
sbb
pop
imul
push
and
es
inc
stos
mov
mov
sbb
cltd
or
push
add
iret
ret
mov
call
lock
dec
sub
repz
jno
lcall
or
les
adc
ss
sbb
in
jle
int3
cwtl
loopne
pop
rorl
adc
push
jl
or
frstor
xor
cwtl
adc
cmp
int3
or
es
lods
add
call
lret
das
ljmp
adc
insb
lahf
test
fmuls
aam
dec
pop
icebp
mov
aad
dec
stos
lret
repnz
sbb
add
and
out
and
dec
data16
dec
in
mov
imul
loope
das
mov
repz
es
cmc
loop
int
or
jbe
repz
test
adc
inc
push
xchg
mov
hlt
call
test
imul
negl
fs
jge
notb
int
push
push
andl
and
ror
stc
push
push
sbb
cmpsl
imul
fnstsw
ret
loopne
push
je
sub
clc
inc
and
sub
adc
sub
addr16
fwait
cmp
aam
lret
add
and
loope
repnz
hlt
lds
mov
movsb
jno
mov
filds
popf
or
in
inc
sbb
leave
mov
sub
and
daa
inc
cmp
or
push
push
shrl
fstl
cmpsl
dec
loopne
sub
jg
aam
push
hlt
outsl
test
pop
pop
scas
aas
mov
dec
or
fadds
in
cmp
sbb
subl
cwtl
cmp
or
pop
pop
in
pusha
jmp
lods
jno
mov
orl
repnz
ficoms
mulb
fs
inc
ficoms
out
and
mov
push
jle
dec
mov
addl
push
push
xchg
fsts
push
add
jecxz
mov
adc
popf
jnp
inc
push
mov
pop
ret
mov
out
sbb
adc
int3
enter
icebp
stos
test
inc
divl
ret
pop
pop
xor
sarb
je
pop
into
xchg
pop
mov
pop
aas
out
pusha
scas
mov
fnsave
and
xor
cltd
dec
inc
repnz
adc
loopne
pop
adc
lock
andl
outsl
dec
out
and
addr16
insl
sbb
subl
inc
aas
push
testl
inc
or
push
xchg
and
movsl
aad
pop
xchg
mov
push
ss
adc
leave
sti
jbe
in
or
stos
adc
scas
mov
adc
push
adc
lds
pop
push
rcll
and
pusha
sbb
xor
push
insl
push
dec
std
mov
xor
and
fmul
mov
mov
cmp
sub
shll
adc
into
push
je
fnstsw
cmp
mov
cmp
jecxz
sbb
xorb
cmp
shl
mov
testb
mov
lds
repz
test
les
cmpb
out
add
cmc
out
ss
mov
js
adc
push
lret
pop
cmpsl
ret
stos
mov
insb
xchg
out
test
aas
mov
pop
movsb
sub
insl
cmp
adc
iret
mov
test
lods
sbb
mov
xchg
out
std
jmp
dec
loop
and
push
push
jne
adc
dec
add
arpl
cs
dec
add
scas
adc
mov
dec
add
jnp
lods
mov
movsl
mov
mov
cwtl
xchg
mov
mov
mov
ret
sahf
xchg
leave
out
jns,pn
rcrl
cmp
mov
mov
aas
xor
lock
aas
fs
cmp
mov
cltd
mov
das
sub
pop
js
mov
xor
insb
sbb
loopne
or
idivl
fcomps
out
lock
aad
lds
push
aaa
rcl
jnp
out
pop
dec
sti
cmp
or
mov
in
clc
push
jmp
push
lret
jne
add
popf
test
cmc
xchg
sub
dec
call
xchg
lahf
push
mov
out
pop
daa
loop
jl
mov
jl
dec
into
pushf
inc
xchg
sti
mov
icebp
sbb
call
insb
xchg
inc
cmp
xchg
mov
mov
cmc
jecxz
rcl
inc
fidivs
jecxz
add
jnp
xchg
add
call
cmp
lret
data16
xchg
inc
dec
push
in
in
enter
or
xor
cmpsl
movsl
add
insl
lods
mov
das
sarb
and
hlt
or
inc
dec
andb
sbb
push
rcl
lret
sub
xchg
sbb
sbb
sbb
stos
insl
or
inc
lahf
mov
leave
icebp
and
cmpsl
fimull
aaa
sahf
imul
adc
adc
mov
insb
and
pushl
ss
sub
push
lods
mov
lret
das
or
loope
jb
mov
xchg
pop
scas
push
mov
sub
mov
out
fidivl
pop
test
mov
cld
jle
or
fimull
mov
adc
adc
adc
pop
icebp
jge
push
nop
mov
lcall
stos
or
push
adc
mov
inc
dec
bnd
and
inc
xor
dec
add
sub
les
push
dec
push
add
lret
jne
mov
mov
rolb
mull
adc
aam
pop
aad
sub
je
cwtl
xchg
fst
push
faddp
out
dec
repz
jecxz
sbb
xchg
cmp
and
cmpsl
mov
lret
xchg
into
in
jbe
fildll
sarl
loope
xchg
jg
sbb
fisttps
xor
cltd
mov
inc
jmp
into
stos
jne
fdivl
out
cmp
dec
imul
adc
lahf
xchg
or
jmp
montmul
cmpsb
inc
pop
je
mov
ffreep
xchg
pop
cmp
jae
inc
scas
mov
pop
cmp
mov
sub
mov
inc
in
pushf
push
jl
sub
push
sbb
gs
jb
ds
mov
lret
mov
cltd
jne
out
mov
xchg
jp
cmpb
rcl
mov
mov
mov
mov
dec
jl
cmp
mov
push
addb
xchg
sbb
mov
outsb
stc
out
pop
fadd
push
imul
push
popf
jecxz
cs
and
mov
popaw
and
movsl
cmp
sbb
jecxz
and
inc
adc
cmp
jbe
rol
int
ljmp
lret
dec
insl
mov
mov
fidivrs
arpl
cmp
aad
inc
mov
inc
add
push
cld
mov
lods
icebp
push
lret
push
mov
push
mov
pop
dec
loop
test
adc
push
cld
xchg
leave
xchg
and
mov
mov
or
xor
out
xchg
push
sub
mov
es
cli
popf
sbb
add
popf
xchg
inc
ret
xchg
repz
int3
aaa
jno
cs
cltd
adc
xchg
fisttpl
int
add
scas
les
dec
fucomip
call
or
sbb
and
mov
adc
lcall
pop
cmp
fdivrl
mov
test
dec
lock
jmp
call
js
xchg
pop
cs
rorl
jne
sbb
xor
out
mov
xchg
fwait
push
mov
fcompl
xchg
clc
imul
movsl
in
pop
mov
lds
push
push
test
nop
inc
in
sbb
xor
ret
cmp
fwait
mov
jns
cltd
adcb
fistps
hlt
pop
repnz
mov
or
lahf
mov
add
in
subl
cmpsb
mov
bound
fs
dec
loop
xor
js
lods
inc
iret
test
sbb
notb
rcll
push
cs
out
test
aad
sub
mov
cmc
cli
mov
xor
sub
add
dec
popf
lret
and
and
cmp
mov
push
in
sub
sub
sub
imul
stos
mov
xchg
dec
movsl
mov
fsubs
leave
in
jb
pop
xor
jge
adc
repnz
jae
pop
pop
cmpsl
xor
dec
outsl
jmp
xchg
mov
lds
mov
jae
ret
jmp
sbb
jb
test
jnp
push
nop
ljmp
stos
push
and
int
dec
jle
mov
push
dec
ljmp
xchg
out
inc
ss
rcrl
in
cmpsl
mov
sub
pop
sbb
in
jae
add
sti
or
mov
gs
shll
mov
and
mull
inc
scas
xlat
test
cmc
loop
lret
gs
je
xor
adc
arpl
and
jns
int3
dec
repnz
pop
or
cmc
ficomps
mov
or
das
lahf
add
add
adc
stos
ljmp
xor
inc
leave
pop
das
xchg
mov
shll
lea
ljmp
xchg
lds
xor
or
or
jnp
inc
mov
enter
or
push
pop
pop
mov
je
rolb
int
inc
loopne
dec
pop
dec
fxch
xor
and
sub
movsb
push
sub
pop
jns
jmp
push
pop
sbb
xor
stos
lahf
flds
add
movsl
out
push
dec
popa
jbe
scas
inc
jae
nop
icebp
and
mov
aaa
lock
aad
outsl
in
lahf
mov
cmp
jns
cmp
loop
ljmp
lret
cmp
sbb
pop
movsb
in
xchg
adc
dec
adc
inc
mov
nop
repnz
cwtl
gs
ficoms
mov
leave
add
push
mov
mov
repz
fwait
loope
leave
and
adc
xor
xlat
loopne
lds
pop
xor
loopne
pop
pop
insb
add
dec
mov
mov
std
xchg
push
lods
sbb
roll
dec
dec
sub
jg
sbb
and
inc
out
ret
daa
xchg
ret
add
cmp
ret
xor
aaa
outsb
fdivl
mov
out
xchg
mov
add
dec
popf
jl
lock
dec
subl
lods
jnp
icebp
loopne
lock
and
clc
mov
mov
mov
inc
mov
jmp
sti
insb
bound
inc
fwait
jecxz
outsb
sbb
movsb
mov
mov
sbb
aas
dec
jecxz
out
in
lahf
sahf
pop
scas
inc
lcall
ja
adc
sbb
scas
shr
and
rcll
sbb
out
addl
mov
cld
pop
pop
add
cmp
scas
ret
mov
adc
ret
or
pop
jnp
in
pop
cmpsl
stos
sti
inc
add
sub
mov
scas
cld
or
xor
test
push
push
push
pop
push
mov
inc
sbb
sub
inc
pop
adc
in
cmp
add
test
jb
scas
repz
sub
lret
out
jmp
sbb
ds
stc
or
ss
cld
sbb
outsl
movb
sub
test
cmp
sub
mov
jno
jmp
push
bound
sbb
ds
pop
fs
cmp
add
xorl
scas
repz
in
inc
in
or
subb
mov
adc
add
mov
ja
daa
jle
lahf
xlat
outsb
movsl
mov
xchg
push
cmpsb
lret
pop
int3
push
add
xchg
in
add
jb
sub
mov
fprem
test
in
mov
cmpsl
lret
adc
sbb
aas
test
mov
add
jge
dec
jge
mov
lret
sub
push
jp
push
mov
or
stos
test
or
xchg
and
mov
ret
repnz
pusha
jmp
out
or
xchg
jmp
in
out
gs
mov
les
inc
rep
mov
pusha
das
push
je
faddl
jecxz
bound
cmpsb
lods
inc
push
mov
outsb
xor
xlat
cmc
mov
movsl
in
inc
shll
jns
jecxz
inc
cmpsl
outsl
call
rolb
sub
xor
rclb
jbe
pop
inc
push
xchg
and
pop
cmp
jg
jbe
sti
jne
popa
test
dec
cmp
xchg
mov
adc
pop
lock
cwtl
jae
inc
add
nop
mov
cmp
clc
xlat
xchg
insl
decb
jb
sbb
sub
adc
push
cltd
lcall
sbb
xchg
lret
and
lret
mov
lret
sub
clc
and
jne
pop
ret
mov
adc
imul
data16
pusha
sbb
sti
lds
mov
cmp
inc
sbb
mov
xor
popa
addb
sti
cmp
inc
loop
loop
mov
jb
or
scas
or
adc
push
stos
mov
mov
imul
imul
sarl
repz
mov
push
ficoms
xor
les
xlat
xor
add
xchg
in
std
sarb
mov
fistpll
je
push
int
incb
mov
repnz
lds
xor
mov
push
mov
adc
pop
sbb
xchg
pop
out
repz
and
jae
cmp
push
dec
push
idivl
adc
ja
loop
push
loope
adc
inc
push
mov
fsubrl
pop
mov
mov
adc
xchg
mov
addr16
pop
mov
jle
fstpl
or
mov
push
aam
inc
cmp
mov
ljmp
imulb
pusha
cmp
in
push
daa
sub
push
mov
push
dec
mov
mov
jns
inc
mov
add
adc
fucomp
sbb
outsl
mov
lea
ret
push
sbb
das
stc
loope
xchg
ret
cltd
adc
xchg
dec
stos
pop
test
push
loop
out
mov
xlat
ficomps
mov
in
push
pop
call
xor
mov
xchg
int
xor
enter
adc
iret
into
mov
lret
pop
xor
testl
jns
push
mov
popa
pop
jne
stc
add
cli
fistpll
icebp
addr16
aas
mov
fsubs
xchg
dec
cmp
mov
xchg
in
push
mov
mov
push
cmp
shll
cmp
sbb
inc
shl
imul
les
jp
jno
cmp
push
ss
xor
push
mov
adcb
mov
imul
xchg
mov
daa
push
add
jle
imul
and
lret
mov
imul
xor
jmp
dec
xor
stos
cmpb
les
mov
adc
in
iret
mov
in
cmpb
or
mov
or
pop
out
das
iret
jns
rolb
sub
pop
add
nop
les
into
xchg
pushf
mov
mov
push
jae
gs
jbe
dec
aam
stos
lret
add
dec
add
push
fidivl
scas
jmp
pop
push
mov
and
sub
je
movsb
or
movsb
aad
stos
cmp
test
fs
jo
in
js
mov
push
cmp
jno
add
adc
out
push
push
fwait
psubw
scas
lret
push
adc
add
arpl
je
and
fwait
lret
in
fs
xlat
push
addl
sti
lahf
sub
mov
jecxz
test
adcl
mov
jne
inc
lret
mov
dec
ficompl
xchg
in
hlt
xor
je
je
sub
js
mulb
stos
mov
push
dec
insb
pop
push
jg
mov
ret
jnp
cmp
sub
nop
inc
mov
ljmp
ret
xor
scas
rclb
repz
shrl
mov
dec
mov
popf
jecxz
in
xchg
mov
bnd
in
into
mov
xchg
ds
push
lods
aam
dec
mov
cs
fcmove
lret
hlt
cmpsl
mov
in
jg
xor
xchg
mov
sbb
xor
mov
mov
sbb
pop
ljmp
lods
icebp
dec
pop
pop
xor
and
ss
xchg
push
adc
xor
jmp
or
in
mov
xchg
outsb
add
dec
in
shrl
mov
lret
sub
mov
xchg
fmuls
inc
aaa
jp
push
adc
in
iret
add
testb
fst
jl
lcall
rcrl
pop
inc
cmpsl
push
sub
sbb
jo
xchg
popf
mov
mov
xchg
mov
cld
jle
push
push
lret
cltd
andl
addr16
iret
loope
xchg
outsl
es
je
cmp
repz
mov
jg
scas
sub
out
pop
push
inc
hlt
sbb
int3
sbb
arpl
or
jmp
jae
sahf
pop
cmpsb
nop
iret
xor
lcall
imul
shrb
sbb
fnsave
loop
or
inc
push
pop
stos
movsb
cmp
sbb
rclb
jl
jmp
push
xor
orl
push
sbb
lret
jge
pop
xor
cs
mov
push
mov
js
out
adcl
fistl
xor
mov
push
stos
sub
outsl
push
outsl
adc
jb
adc
sbb
inc
js
gs
ljmp
scas
arpl
aaa
lret
repnz
mov
mov
out
inc
mov
add
sarb
aas
icebp
xor
pusha
iret
imull
stos
icebp
pop
lods
fimuls
cmpsl
adc
ljmp
or
and
loope
xchg
pop
dec
lcall
out
cmpsl
test
js
rcl
fyl2x
mov
push
xchg
add
add
sub
mov
cmc
and
sbb
icebp
jno
aaa
fidivrs
faddp
xor
int
int3
push
out
movsb
jo
mov
dec
push
subl
xor
jecxz
lret
push
cmc
jp
mov
cld
inc
push
into
loopne
outsl
cmp
xchg
push
sub
leave
or
push
jmp
ret
push
dec
xchg
nop
xchg
and
bound
aas
inc
cmp
or
stc
ds
cmpsb
insb
je
push
inc
loop
pop
sub
out
es
aaa
fisubl
pop
adc
mov
scas
pop
cmp
mov
mov
cmp
or
lock
movsb
push
xor
out
push
adc
lcall
pusha
dec
repnz
leave
clc
and
test
mov
stc
mov
ds
sbb
lret
lcall
pop
into
push
subl
fcoml
leave
lcall
dec
sbb
call
adc
pop
add
in
push
pop
push
xor
push
xchg
add
call
repz
inc
fwait
xor
int3
ss
pop
lods
or
pushf
jl
fimull
pushf
mov
pop
inc
fsub
and
or
outsb
rcrb
sti
adc
mov
stc
mov
popf
in
in
and
cmp
gs
mov
dec
es
and
cwtl
sbb
xchg
aaa
xchg
xor
ds
ss
daa
lahf
or
fsubr
push
xor
fisubs
mov
cltd
mov
cmp
loopne
mov
mov
xor
das
xor
cltd
daa
fadds
xchg
mov
es
icebp
add
push
aaa
test
pop
xor
mov
pop
xor
scas
popa
mov
sarl
jge
cmp
pop
pop
jge
mov
dec
adc
jle
mov
cmp
das
mov
pop
faddl
dec
xchg
scas
adc
sub
fistl
mov
icebp
lock
imulb
mov
fisttpll
aam
shll
pop
out
dec
and
xchg
nop
sub
push
inc
call
lcall
andl
mov
and
addb
lods
mov
imulb
mov
cwtl
push
adc
or
xchg
mov
xor
or
adc
out
sbb
mov
pop
add
jns
mov
jo
mov
mov
pop
push
adc
sbb
push
mov
push
int3
sub
push
pop
cmp
adc
fnstsw
sbb
push
mov
cmp
or
test
in
xor
inc
dec
sarb
imul
cmp
mov
pop
or
sub
add
pop
cmp
mov
insl
and
cmp
or
popf
aam
mov
loop
andl
mov
jecxz
push
jle
xchg
sub
push
xchg
jnp
cmp
into
shlb
sbb
icebp
movsl
popf
imul
dec
xor
sub
es
daa
dec
or
lods
pop
nop
xchg
int3
mov
and
adc
push
sub
add
jl
cmpsb
or
push
test
xor
into
pop
out
sbb
mov
ret
in
dec
sub
pop
mov
xor
shr
mov
pop
xor
xchg
rcrb
jle
pop
cmpsl
sub
xchg
shrb
stos
repnz
nop
push
mov
daa
adc
movsl
fwait
jns
pusha
xor
jecxz
cmpsl
sub
jp
inc
cmp
shlb
into
mov
adc
or
and
es
je
pop
out
cld
scas
pop
or
test
rcll
pop
and
mov
lock
add
sub
cmc
mov
jmp
mov
addr16
aad
cmc
or
test
or
fmul
outsb
pop
sbb
jb
jb
stos
cs
mov
in
bnd
lret
mov
xchg
dec
shl
cld
stc
outsb
xlat
mov
ss
jae
mov
mov
insb
mov
cmp
pop
sub
adc
test
adcl
lea
movsl
cmp
addl
pop
adc
mov
pop
push
pop
das
pop
xor
mov
imul
fsubrl
fs
bswap
or
sti
fmuls
xchg
test
mov
dec
dec
or
dec
bound
pop
mov
push
push
add
scas
pop
es
rep
push
fndisi(8087
inc
sbb
jl
icebp
in
movsb
shll
sbb
sub
xor
scas
add
enter
and
mov
cld
jl
xor
push
mov
sbb
pop
xor
daa
fs
ret
or
or
ja
sub
pop
sub
test
imul
out
mov
xchg
stos
scas
orl
inc
rcrl
js
mov
lahf
rclb
mov
add
inc
test
add
scas
mov
call
inc
pop
add
xor
andl
mov
xlat
xchg
test
mov
insb
lret
inc
adc
lock
dec
cld
sbb
adc
cmpsl
mov
adc
pop
imul
leave
or
fwait
call
stos
cmp
mov
mov
mov
mov
out
dec
lahf
jl
leave
aaa
dec
jbe
mov
rcll
sahf
push
dec
rol
dec
loopne
rcll
bound
pop
mov
push
mov
roll
mov
xchg
dec
sbb
push
and
loope
rcr
or
jmp
stos
sbb
jns
lcall
cmc
pushf
push
xchg
std
xchg
cld
push
dec
inc
sarb
xchg
adc
pop
or
inc
xchg
sub
outsb
cli
sar
movsl
das
dec
clc
push
loope
xlat
and
pop
gs
and
or
push
pushf
jnp
mov
cmp
cmpsl
test
jp
loopne
jp
sbb
loop
dec
lret
movsl
test
clc
lret
mov
add
orb
mov
fiadds
ret
fs
dec
gs
test
lret
stc
imul
lods
cs
or
jg
jl
in
adc
fdivl
pop
lcall
inc
jo
cmp
dec
xchg
xor
hlt
ljmp
andb
stc
loope
mov
test
dec
stos
sub
pushf
jno
stos
dec
scas
sub
mov
fcoml
add
lock
es
jmp
mull
sbb
insl
mov
inc
xor
neg
and
cwtl
imul
mov
adc
lahf
mov
pusha
xor
sbb
mov
pop
inc
dec
and
push
int3
cwtl
adc
pop
adc
xchg
icebp
sub
and
dec
imul
in
mov
movsl
or
xorl
lds
pop
roll
jle
imul
icebp
pop
sub
inc
mov
add
jl
or
mov
xchg
add
pop
call
push
test
vmovss
into
insl
cmp
mov
js
ret
cmp
pushl
jnp
inc
mov
push
cmp
and
arpl
or
ds
xchg
loope
mov
ret
dec
adc
popa
es
sbb
imul
adcb
dec
cmpsb
xor
pushf
je
and
outsb
ficoml
pushf
pop
in
std
cmp
push
xchg
inc
daa
scas
sub
dec
cli
pop
clc
dec
push
stc
loope
adc
dec
sti
mov
add
ljmp
sub
add
mov
out
pop
xchg
aam
ret
repnz
or
mov
and
xchg
pop
mov
dec
inc
push
jne
test
pop
push
and
cmp
push
out
xlat
xchg
test
pop
rcrl
or
sbb
push
icebp
jmp
insl
out
mov
xchg
adc
arpl
sbb
mov
enter
int3
movsl
jae
inc
loope
lods
cwtl
pop
mov
sbbb
inc
js
jecxz
js
ljmp
dec
dec
inc
pushf
push
or
rorb
push
dec
int
xor
loop
push
add
or
jg
lcall
test
mov
push
sub
cld
fsubrp
addl
in
testb
inc
xchg
es
shll
fstpl
xchg
jl
sahf
jne
and
xchg
or
aas
lds
ret
mov
dec
mov
inc
xor
add
cmc
aas
aad
dec
inc
divb
jl
xchg
sub
xor
stos
xor
in
mov
andb
mov
mov
mov
pop
aas
mov
imul
ss
inc
lret
ljmp
mov
arpl
xor
cmc
mov
mov
adc
lret
movsl
and
fstp
adc
and
scas
call
repnz
xor
aaa
xor
adc
fwait
sbb
inc
mov
add
jl
cmpsl
out
scas
aaa
stos
int
je
ret
cmp
int3
and
and
push
hlt
pop
cwtl
out
out
bound
rclb
stc
leave
ret
insl
mov
addr16
stc
pop
xor
rcrb
add
aad
fs
loop
pusha
push
jmp
cmpsb
sarl
xor
xchg
push
and
cmp
popa
test
ret
xor
mov
sbb
pop
mov
lret
and
dec
dec
faddl
or
pop
or
inc
flds
jl
mov
jae
fnstsw
pop
hlt
jecxz
push
push
insb
jg
cmp
stc
leave
cmpsb
stos
imul
subl
clc
cli
dec
sbb
inc
mov
getsec
stos
shrl
sub
mov
jl
fisubl
xchg
in
push
fidivs
mov
or
subl
mov
cmp
nop
clc
and
cmc
jns
fdivl
lds
inc
aas
fs
imul
jae
jmp
enter
dec
mov
fsubp
seta
xor
push
jbe
and
int
fwait
mov
jl
mov
pop
push
fisubs
or
fisubl
lea
xchg
xchg
lret
notl
inc
mov
inc
aam
fisubrl
out
cmc
test
out
adc
out
cmp
jg
xchg
xor
dec
ret
mov
loop
xor
dec
push
jnp
test
pop
lds
dec
inc
inc
jnp
ljmp
jl
scas
dec
dec
sbb
mull
out
add
inc
mov
popa
imul
ficomps
inc
jecxz
xchg
test
std
les
test
iret
ret
pop
shlb
fsubrs
xchg
int3
enter
xor
cld
icebp
jp
pushf
in
or
inc
xor
inc
jne
jle
adc
sbb
mov
stos
mov
iret
xchg
loope
xchg
mov
aas
mov
ss
jl
lock
dec
pop
lret
fsts
bound
and
cmp
dec
hlt
or
sbb
mov
cmp
xchg
test
jo
cwtl
push
sbb
push
loop
rcll
das
dec
push
cmpsl
cli
jmp
out
xor
dec
mov
lcall
push
imul
mov
fwait
add
sbb
xchg
lds
xor
xor
pop
push
pop
aad
and
jmp
mov
mov
mov
push
pop
fimuls
cmp
push
xor
jb
cs
xchg
xor
jo
jp
mov
adc
mov
and
mov
fmuls
mov
pop
les
xor
cmpsb
mov
pop
aad
mov
loope
icebp
xchg
mov
and
adc
lods
leave
jp
ds
inc
insl
pop
or
cmp
out
mov
or
fwait
pop
inc
inc
xchg
mov
inc
push
push
in
adc
es
mov
sahf
mov
pop
and
pop
insl
jecxz
pop
fwait
jne
pop
cmp
out
sub
icebp
adc
in
fsubrp
loopne
mov
cmpsb
mov
imul
enter
cwtl
add
mov
sbb
pop
frstor
cmpsl
and
jb
addr16
jne
and
push
dec
or
jnp
out
mov
mov
inc
stos
enter
lea
pop
and
pop
mov
dec
icebp
scas
in
inc
clc
jle
mov
in
popa
xchg
ds
push
clc
adc
lods
add
aas
add
cmp
pop
lock
lds
into
cmpsl
popf
arpl
aas
fldcw
add
cwtl
incl
pop
and
mov
dec
test
and
adcb
out
fwait
add
imul
add
pop
stos
roll
jp
lahf
jecxz
xchg
push
sub
in
cs
xchg
cmp
cmp
jno
add
mov
addb
mov
popa
sahf
shr
aam
inc
rolb
mov
sub
jne
repz
sub
add
leave
mov
cli
and
cmp
push
scas
push
in
cmp
mov
mov
pop
inc
pop
xor
pop
gs
movsl
leave
and
scas
jg
hlt
cld
incb
pushf
mov
jmp
test
pop
sbb
jmp
dec
mov
js
mov
dec
lods
cltd
mov
or
lods
and
xlat
cmp
popf
ja
dec
cmp
and
stos
cld
cmpsb
sbb
clc
mov
and
push
icebp
mov
sub
nop
adc
inc
pop
push
hlt
jecxz
jbe
idivb
xchg
cmp
test
inc
arpl
cmpsl
sbbl
jmp
outsb
xchg
and
leave
loope
xchg
add
sbb
push
ja
gs
incb
lock
cmp
shlb
sbb
rcr
fidivl
inc
xor
xchg
in
dec
mov
sub
cwtl
mov
fs
jmp
stos
cmc
sbb
popa
cli
gs
sarb
addr16
lea
subb
aas
push
daa
inc
daa
sub
insb
das
mov
outsl
ret
adcb
icebp
sub
roll
adc
or
push
jle
pop
ret
xchg
ja
sbb
sub
in
fstpl
mov
push
bound
pop
popf
mov
stc
mov
aam
inc
adc
adcb
inc
mov
push
mov
pop
ljmp
sub
call
aas
outsl
lods
dec
fcompl
fs
cmp
jbe
aam
mov
sahf
xchg
push
and
insl
cwtl
das
mov
or
adc
sub
out
jle
xlat
pop
inc
rcrl
or
cmp
dec
ja
outsl
mov
lods
inc
mov
mov
cmc
cmp
lret
xor
pop
jl
pushf
lds
xor
pop
aad
callw
xlat
and
sarl
inc
cmp
and
andb
aam
mov
das
sub
xchg
cld
jne
mov
aas
pop
xor
in
sbb
fcmovbe
daa
mov
add
mov
insl
xor
jno
aas
es
lods
test
fcmovnu
xchg
cs
enter
imul
out
xchg
mov
lcallw
cli
sbb
xor
test
sub
xor
dec
lret
inc
xchg
inc
loope
fnstenv
cmp
push
cmp
and
dec
pop
cmp
loop
pop
roll
test
pop
pop
js
stc
dec
popa
sbb
sbb
jecxz
scas
movsl
sub
jo
iret
sbb
int3
push
roll
outsb
xor
ret
push
jne
loope
jns
imul
sbb
push
daa
or
xchg
fwait
pop
cli
push
cmp
xchg
mov
mov
lahf
mov
push
sahf
sahf
in
sub
push
sahf
inc
mov
fs
jno
lock
xor
sbb
rcrl
xor
or
xorb
stc
in
dec
out
sub
mov
and
and
pushf
xlat
add
mov
push
jle
nop
dec
movzbl
mov
or
jns
orl
add
mov
xor
cmp
popf
test
mov
orl
mov
sub
sbbb
jb
mov
sbb
int3
ret
push
leave
hlt
orl
imul
shl
imul
stos
cmp
add
lret
push
push
stos
cmp
mov
xchg
je
shl
or
cmp
mov
js
mov
sub
or
insb
lea
imul
rep
stc
mov
es
or
pop
mov
add
dec
seto
sub
and
push
adc
mov
push
out
lods
idiv
int3
xchg
or
cmp
cmp
outsb
mov
jno
xor
or
sets
int
into
or
xor
leave
adc
int3
cmp
jbe
xchg
mov
adc
gs
mov
cmp
stos
out
pushf
pop
dec
sbb
cs
inc
std
jmp
mov
stos
mov
mov
adc
cmpsb
cmp
mov
mov
dec
ret
test
inc
and
stos
sub
sbb
cmp
not
or
out
int3
mov
fcomps
cmp
or
mov
jno
xor
in
ficomps
sub
aam
inc
hlt
es
xchg
mov
jnp
sti
xor
push
out
mov
mov
mov
icebp
and
dec
test
repnz
push
or
jne
shll
ja
insl
push
inc
cli
movsl
test
iret
insl
mov
dec
xor
dec
mov
adc
jecxz
test
mov
pop
jbe
ds
arpl
fisttpll
dec
imul
sub
popa
jbe
dec
in
dec
andl
call
std
pop
pop
dec
mov
mov
arpl
inc
test
fisubrs
or
ja
sti
cmp
xorb
das
mov
inc
mov
subb
pop
fnstsw
in
mov
cltd
mov
cltd
xor
js
mov
mov
cld
pop
mov
popf
movsl
jg
out
repnz
scas
dec
mov
cmp
pop
cmp
cmpsb
inc
mov
cmp
fwait
pop
xchg
lds
cmp
ret
dec
das
mov
and
icebp
dec
test
pop
add
sub
xchg
cmp
push
rolb
cmp
out
ljmp
std
sub
es
icebp
stos
mov
pop
jge
rol
loope
in
testl
push
pop
jno
dec
pop
sub
fsts
test
mov
adc
das
mov
add
push
mov
dec
fwait
mov
std
inc
jp
test
movsl
pushf
sbb
aad
cmpsl
into
rorl
dec
out
outsb
pushf
icebp
or
dec
outsl
hlt
jp
les
jnp
jne
mov
cmp
mov
jae
push
mov
cmp
cmp
add
lret
mov
xchg
std
int
int
dec
inc
push
cmc
sbbb
rol
enter
push
sub
fnstenv
lea
mov
movsb
daa
lods
and
loop
mov
cmpsl
lods
sbb
add
sbb
dec
aam
cltd
mov
pop
mov
cmpsb
cmp
lcall
mov
cmp
lock
daa
jecxz
pop
mov
sarb
cmp
mov
je
push
add
inc
popl
stc
jp
xchg
xchg
lea
int
adc
arpl
lods
in
shlb
in
mov
and
fists
dec
fmulp
sahf
jl
inc
fs
xor
jne
adcl
push
test
dec
or
jg
mov
pop
into
mov
scas
nop
fucomip
push
ret
stos
insl
cmp
rorb
push
sub
mov
mov
sbb
shlb
out
enter
push
cmpsl
push
cmp
mov
pop
jno
in
jb
sub
cmpsb
mov
or
cwtl
rolb
rcr
in
cs
test
cmp
inc
into
cmp
ficoml
call
adc
lea
xchg
push
mov
int
dec
adc
xchg
mov
adcl
xor
sbb
or
push
loop
dec
outsl
lds
fimuls
inc
add
jecxz
aad
or
out
or
push
mov
push
fcomps
movsl
lds
scas
pop
ss
daa
in
pop
clc
ljmp
mov
xor
aam
push
push
mov
xor
test
push
mov
mov
lcall
or
int3
div
mov
sub
sub
imul
cmp
inc
sahf
push
daa
rep
xchg
push
imulb
aaa
push
mov
fcompl
and
add
push
shl
xchg
xchg
out
fs
repz
xor
in
inc
daa
ja
and
and
pop
mov
mov
divb
push
pusha
leave
lea
sbb
add
pop
adc
push
test
xor
sbb
into
test
sub
movsl
les
or
insb
xorl
imul
inc
mov
cmpsb
cmp
mov
push
push
enter
fistl
pop
mov
sbb
cltd
inc
and
inc
pop
xor
and
pop
jecxz
ret
lcall
sbb
xchg
dec
add
enter
inc
lods
jns
push
das
jns
cmp
jge
or
ret
mov
mov
jge
jmp
ds
dec
mov
jp
and
push
or
stos
ljmp
dec
lea
int3
sbb
movsl
arpl
popf
fsub
out
inc
mov
jb
clc
cmpl
mov
jbe
mov
sub
cmp
jge
rcrl
dec
xchg
mov
mov
fidivrs
rol
cmp
lcall
psrlw
inc
mov
fwait
iret
mov
stos
push
push
ret
lock
scas
fsubl
add
fisubl
add
aaa
pop
das
mov
pop
jmp
mov
test
rcrl
cmp
rcll
xchg
sbbb
adc
fwait
pop
nop
in
mov
mov
mov
divl
mov
lock
fstl
or
dec
inc
mov
xchg
sub
mov
roll
cmp
scas
add
je
sbb
jmp
mov
es
fsubs
std
outsb
lods
mov
stos
jecxz
daa
enter
mov
mov
jo
iret
lods
mov
call
ds
adc
and
inc
daa
pop
xlat
jns
orl
sbb
jno
leave
scas
mov
xor
cmpsl
xor
jns
lret
lahf
or
jecxz
je
rcll
je
jecxz
sub
add
fsubp
mov
jecxz
nop
xchg
mov
roll
es
cld
push
rcrl
sub
mov
xor
push
push
popf
mov
push
lods
add
in
decl
cs
pop
outsl
adc
repz
pop
pop
insl
dec
mov
or
repz
dec
inc
jl
inc
jnp
mov
add
pop
cltd
mov
inc
fwait
test
mov
lods
frstor
push
das
and
jbe
or
lds
jecxz
jmp
cmp
lahf
xchg
push
aam
rcll
add
xchg
psubsb
dec
lcallw
scas
jg
loop
adc
daa
push
jmp
je
xor
dec
adc
repnz
int
push
xor
jb
jmp
les
fs
cli
adc
mov
mov
push
imul
shrb
dec
out
lret
push
mov
jge
rcll
mov
or
stos
les
xchg
movsl
loope
jnp
jae
pop
iret
cmpsb
push
mov
divb
push
mov
ss
mov
sbb
movsl
inc
sbb
lds
popa
shl
lock
insb
xchg
jnp
xor
sbb
jmp
fdivr
aad
aas
rclb
mov
jp
mov
out
test
fwait
je
js
orb
jle
in
inc
out
adc
out
aad
push
loop
ds
push
dec
scas
movnti
jns
xor
or
gs
xor
das
ret
popa
mov
into
in
iret
xchg
es
testb
sbb
cmp
orb
daa
cmpsb
fisubrl
les
adc
mov
clc
lret
cmp
xchg
or
jmp
sbb
in
or
xor
fiadds
sbb
into
and
imull
jae
dec
cmp
out
pop
jnp
mov
insl
mov
sahf
ja
insl
mov
aam
loop
push
xor
es
sti
pop
push
mov
loopne
cmp
adc
in
pop
test
or
sbb
paddsw
dec
clc
or
add
stos
aad
movsb
cs
sahf
fsubrp
dec
jecxz
rolb
sbb
out
push
push
in
sub
stos
icebp
rol
into
xchg
fs
lds
fsubr
sub
jmp
mov
in
mov
mov
cmp
push
movsb
cmc
int
fadds
stc
xchg
cmp
cmpl
adc
mov
cwtl
gs
xchg
and
pushf
pusha
sbb
xchg
imul
cmp
mov
xchg
push
push
stos
pop
jo
push
das
dec
sub
outsl
loopne
dec
cmp
push
push
add
loop
jle
xor
aaa
pop
lret
data16
dec
push
popa
fldenv
sbb
sub
lret
fbstp
loope
out
mov
lahf
repz
cmpsb
pop
cwtl
fcmovne
jo
adc
in
jb
test
lahf
test
addl
in
lcall
fbstp
sbbb
dec
dec
shl
movl
cld
cmp
add
push
dec
ret
rorl
adc
mov
mov
jl
xchg
cli
pop
inc
pop
jae
inc
mov
stos
mov
popa
arpl
adcb
loop
jl
sub
in
int
andb
cs
inc
and
stos
stos
out
mov
out
inc
insl
daa
leave
sbb
mov
ljmp
loop
push
testb
adc
or
mov
mov
add
jecxz
push
xchg
stos
stos
sarl
xchg
dec
sahf
lea
lds
adc
add
push
add
pop
fsubrs
movsl
roll
adc
mov
pop
aam
pop
popf
cmpsl
push
jg
xor
je,pn
into
shr
dec
and
rcr
ds
outsb
in
in
inc
jnp
and
jb
or
sti
mov
test
jg
mov
jae
ja
xchg
cmp
negl
jb
lock
dec
sbb
mov
cmc
xchg
push
push
dec
fidivrl
pop
dec
xor
mov
jo
sub
test
pop
fwait
fwait
imul
sub
test
mov
lock
ljmp
nop
fistps
fcoms
add
mov
sub
xor
scas
lods
fisttpll
in
xor
loopne
int
outsb
push
into
stc
pop
dec
add
in
sti
lret
mov
mov
sub
mov
cltd
jbe
jmp
test
sbb
movsb
in
mov
xchg
sub
mov
push
test
jno
cwtl
pop
dec
shlb
push
rcl
fildl
inc
jge
rcrl
rcrl
xor
xchg
inc
jae
loopne
lahf
ror
xchg
ds
add
addr16
lods
mov
mov
call
fisttps
lods
push
mov
xchg
or
scas
int3
push
out
sub
call
nop
push
sti
push
and
cmpsl
loope
mov
adc
sub
inc
inc
mov
mov
fdivl
cmpsl
cmpsl
jmp
cmp
add
pop
sbb
fisubrl
mov
mov
sbb
dec
dec
and
xor
sub
xchg
test
int
shl
push
in
fldenv
mov
pop
adc
std
ret
lret
add
jmp
gs
adc
push
sub
in
mov
loopne
mov
jo
adc
es
sti
cmc
jnp
pop
outsb
data16
xor
shl
sbb
adc
jo
sbb
xor
inc
push
pushw
pop
repnz
cmpb
jg
clc
gs
pop
jl
dec
jmp
or
add
ljmp
rcrl
movsb
push
mov
int
jecxz
push
lods
frstor
lret
lret
add
push
arpl
in
pop
lea
add
mov
lods
pop
xchg
and
mov
dec
mov
lea
sbb
sub
mov
push
popa
sbb
lsl
adc
xchg
pop
pop
stc
outsl
and
or
insl
cwtl
jp
jmp
pop
sti
repz
into
inc
lods
and
cmp
push
stos
and
push
movb
int3
xor
add
inc
clc
mov
push
lret
aad
fnstcw
jbe
xchg
or
push
cmp
fdivs
sub
test
xchg
sub
sub
dec
mov
cmp
cmp
jno
inc
adc
mov
shrl
insb
jmp
ficompl
inc
std
cmpsb
cwtl
in
xor
sbb
mov
pusha
sahf
and
arpl
lret
fcmovne
lods
hlt
ror
ret
dec
mov
movsl
add
fsubrl
and
cltd
push
or
das
cmp
xchg
cltd
adc
jle
test
cmpl
dec
pop
aas
or
psrld
cmpsb
pop
test
dec
jle
lods
dec
sub
aas
sbb
shl
jnp
xor
lahf
inc
mov
mov
enter
adc
das
lock
lock
pop
mov
adc
arpl
lret
arpl
push
and
sbb
ret
iret
outsb
in
push
adc
out
cmp
jge
jne
outsb
lret
loopne
lods
enter
and
mov
clc
das
notrack
jae
insl
lahf
mov
adc
pop
lods
scas
jns
mov
adc
jns
mov
out
std
cld
fucomp
shll
mov
outsl
jo
addr16
sbb
or
gs
int
ret
in
std
cmp
mov
mov
bound
rcr
add
dec
fcmovb
push
lods
sar
sbb
decl
ffreep
push
or
cwtl
sub
jp
jp
push
inc
adc
stc
mov
enter
mov
xor
adc
xor
jmp
mov
lret
lcall
pushf
sub
dec
lahf
stc
scas
out
sahf
cmpsl
out
jbe
jecxz
fdivrl
test
lods
mov
pop
inc
xchg
xchg
in
shrb
sub
fldl
shrb
cmp
add
xchg
outsb
mov
jecxz
fdiv
sub
cmp
test
imul
inc
mov
cmc
stc
sbbb
mov
outsl
xchg
mov
int
sbb
cwtl
loope
jne
jnp
pop
pop
push
pop
sbb
cmp
ljmp
inc
mov
adc
aaa
outsb
lret
aam
shl
mov
mov
xchg
test
call
pop
adc
notb
and
into
rcr
andps
sbb
daa
subb
inc
push
xor
cmp
cmpsl
sub
pop
xchg
fdivl
je
sub
rcrl
sbb
mulb
jb
push
jno
nop
test
ja
sub
or
rcrl
push
dec
insb
push
popf
sti
fsub
jmp
cmc
inc
cmp
outsl
jns
push
js
mov
push
inc
jne
xchg
push
icebp
out
jb
push
fwait
mov
jb
cmp
pop
add
sub
mov
rorb
jp
pop
repnz
jo
imul
pop
sbb
sub
pop
loopne
call
jo
lea
lahf
das
mov
xor
and
rcll
movsb
pop
loopne
sub
scas
lock
and
mov
into
out
or
lods
xor
sub
jge
and
add
xor
add
xor
cmp
pop
mov
dec
cmp
pop
sbb
js
mov
cmp
aam
addr16
xor
xlat
stos
rcrl
rcll
iret
and
inc
jl
mov
dec
insl
shll
mov
sbb
js
push
shlb
dec
cs
ljmp
rcr
repz
mov
push
push
push
lahf
shll
insb
lods
int3
push
dec
jae
js
insb
dec
lds
jle
testl
or
dec
xor
je
and
int3
xchg
jge
inc
and
push
push
push
adc
bound
and
pop
loope
cmp
mov
roll
mov
repnz
inc
fbld
cli
test
add
mov
dec
mov
inc
cmp
xorb
aad
pop
mov
cmpsl
cmp
aam
in
jno
psubusb
fimull
push
rclb
jmp
adc
mov
xchg
mov
fldt
xlat
jnp
sub
sbb
or
add
addb
xchg
addb
ljmp
xor
les
sub
mov
xor
push
mov
mov
das
int
inc
cmc
inc
lret
mov
incb
aam
pop
call
xorb
dec
inc
ret
daa
inc
dec
fsubp
icebp
aam
xchg
fdivl
shrb
xor
pusha
fwait
cmp
aad
loopne
rclb
subl
test
or
jle
ss
cwtl
or
jo,pn
xchg
pop
bound
push
movzwl
jns
lea
pushf
lret
push
ss
fistpll
hlt
adc
add
sub
inc
ret
mov
xchg
xchg
push
xor
mov
arpl
ja
and
rcr
adcb
xchg
jecxz
mov
fwait
cltd
leave
scas
cmpsl
add
and
rcr
mov
mov
mov
push
inc
push
push
cmp
icebp
sub
into
in
sar
into
sbb
push
andl
mov
orb
imul
repz
or
sbb
popa
or
inc
pop
sbb
mov
mov
inc
das
insl
testb
sbb
inc
push
stos
in
xchg
mov
cmp
fstpt
inc
pop
lds
movsb
imul
outsl
loopne
mov
int
pop
cwtl
mov
push
fcmovne
fbstp
sub
popa
ret
adc
pop
mov
xlat
dec
shll
push
ds
jno
jecxz
mov
mov
add
rcr
jo
dec
push
cmp
das
push
fistpll
sub
jne
flds
ljmp
insb
jnp
cld
push
mov
movb
lds
add
xlat
inc
add
int3
sbb
jbe
pop
cwtl
xor
fnstcw
inc
fmull
or
mov
adc
cmpsb
mov
gs
lock
jge
jmp
or
je
xor
mov
cmp
stc
and
call
out
jb
inc
cwtl
ds
imul
sub
and
jge
pushl
xorl
push
sbb
out
iret
sub
pop
sahf
add
sub
popl
cld
sbb
push
push
mov
daa
push
iret
add
xor
ret
insl
sbb
pop
or
sahf
pop
clc
outsl
mulb
inc
xchg
repz
lret
or
mov
mov
popa
ljmp
movsl
cmp
orl
adc
or
jmp
or
or
insl
fcompl
insl
mov
xchg
pusha
std
mov
fildll
sbb
push
pop
es
jl
lea
mov
stc
pop
pop
mov
fcoml
xchg
xchg
aam
pop
mov
cltd
lock
scas
ljmp
or
cmp
pop
mov
lret
cli
adc
lock
dec
sub
xor
and
gs
jp
and
and
or
or
or
aaa
or
jg
dec
or
addl
lret
sahf
add
ja
jecxz
out
out
movsl
mov
aaa
hlt
sbb
insl
push
loop
idivb
mov
ds
jnp
imul
testb
lcall
push
popl
mov
inc
icebp
jae
dec
mov
aad
mov
sahf
cmp
sbb
push
enter
lods
sbb
int3
jne
lock
pop
or
lds
cmc
test
into
sub
push
repz
les
and
adc
fildll
push
lret
xchg
addl
add
or
mov
ficoms
or
rcrl
je
sub
xor
jo
ljmp
and
pop
aad
adc
fcmovne
loopne
pop
into
adc
rol
pop
push
inc
seta
subb
xchg
pusha
sbb
out
lock
loop
repnz
mov
stc
and
test
mov
sub
push
jno
push
mov
cmp
jno
data16
cmp
pop
pusha
fsubrs
dec
mov
adc
mov
pusha
rcrb
jecxz
mov
jne
cmp
push
adc
jne
lods
xor
ljmp
sub
add
je
mov
nop
lahf
sbb
loop
pop
mov
and
pop
insl
imul
and
or
add
push
pop
sub
rcrb
dec
mov
gs
popa
xor
pop
sbb
xor
dec
sbb
xor
pusha
mov
mov
imul
loop
mov
mov
mov
pop
or
jmp
fisubs
enter
sub
sarl
jmp
add
popf
add
shr
in
es
adc
paddusb
mov
jb
dec
ret
stos
ds
scas
mov
mov
mov
adc
adc
push
jb
sbb
xchg
jl
pop
addb
push
pushf
adc
add
js
popa
jae
fdivs
dec
fwait
or
add
add
popf
xchg
or
add
lods
loop
outsb
cmc
jl
loope
nop
add
data16
lret
jo
inc
xchg
sbb
adc
jmp
pop
imulb
pop
sti
fwait
shrb
xor
adc
jecxz
sbb
pop
push
mov
ficomps
jg
sbb
push
das
inc
push
xor
scas
inc
test
aas
into
jae
adc
sub
mov
push
rorb
adc
or
movsb
addr16
adc
ret
cs
outsl
fbstp
fsubp
ror
push
and
xlat
or
ljmp
or
fs
fisubrs
insb
sbb
enter
mov
das
int3
imul
jne
sub
out
push
xor
lcall
push
push
cmp
and
xor
push
lret
fisttps
push
stos
es
jbe
push
and
pop
and
es
inc
in
and
ja
jle
adc
add
repz
cwtl
in
popa
sub
or
pop
push
clc
das
movsb
mov
sbb
je
dec
dec
rolb
ljmp
mov
ds
leave
mov
mov
fisubrs
or
jnp
sbb
or
or
push
leave
in
loope
divl
les
sub
fimull
leave
adc
and
int
mov
cmc
xchg
inc
scas
mov
or
mov
call
sub
movsb
fsub
jne
xchg
sub
sub
arpl
aas
or
mov
shrb
adc
outsb
mov
hlt
mov
lret
mov
dec
jo
jg
mov
xor
in
mov
pop
push
xchg
addb
iret
in
sub
dec
into
ljmp
sti
mov
jecxz
enter
arpl
mov
sbb
insl
and
add
sbb
cmpsl
sub
shl
jbe
cmp
pusha
add
adc
inc
sub
push
pop
mov
std
jg
movsb
lds
add
adc
mov
jp
cmp
xchg
pop
es
leave
pop
push
mov
lea
fstpl
mov
inc
sbb
fidivs
test
out
mov
cmp
fld1
inc
clc
mov
test
add
loope
dec
lds
inc
cli
fwait
pop
jp
in
or
inc
and
dec
and
leave
xchg
jne
sbb
push
sub
jns
push
dec
insb
jl
test
add
movsb
xchg
in
pop
seta
cmp
pop
scas
pop
mov
mov
add
ret
fidivrs
mov
es
or
or
ret
bound
dec
jo
xchg
enter
bound
mov
cltd
jbe
testb
js
pop
shl
fdivrl
iret
add
xchg
cmp
test
fldt
pop
inc
rcl
enter
fsubrp
xchg
ret
loope
iret
ljmp
push
dec
mov
add
inc
cmp
ss
lret
test
fisttpll
movsl
repz
pop
pushf
dec
sub
mov
push
fcomps
xor
inc
pop
outsb
stc
jo
int3
mov
vpsllw
pop
or
int
push
xchg
bound
stc
dec
sbb
mov
leave
pop
mov
inc
in
pop
cmpsb
mov
xor
fcomps
mov
lahf
cmp
call
pushf
shll
dec
test
add
jb
push
ljmp
hlt
rcrl
sahf
sbb
into
orl
adc
insl
xchg
pop
jmp
jle
jmp
jae
xchg
xchg
loop
stc
push
in
push
in
mov
fwait
sbb
jae
paddq
je
insl
mov
and
jbe
pop
psubsb
inc
cltd
fucomip
mov
pop
lret
xchg
clc
data16
add
loopne
push
and
inc
sub
clc
add
xor
subl
repz
jb
mov
and
mov
fstpl
dec
mov
dec
rorl
cmp
test
cli
pop
and
rcrl
xchg
mov
imul
ja
push
pop
xor
pop
mov
jmp
outsb
fcompl
enter
mov
push
pop
adc
mov
sub
and
and
mov
rorb
jmp
cmp
fisubl
cmc
movsl
sub
stos
call
je
add
mov
ja
pop
lods
mov
cli
pusha
dec
fiaddl
fmulp
push
aas
mov
std
aad
push
fnstsw
lret
ret
mov
shl
xchg
sub
ds
xor
inc
mov
repz
pushf
add
lock
xchg
lods
test
jmp
mov
aaa
out
fcoms
sub
xchg
dec
popf
mov
clc
aaa
sub
lahf
dec
jge
lds
mov
lret
xchg
into
test
jmp
mov
int3
pop
daa
mov
jbe
aaa
popa
cmp
lods
pop
ret
out
xchg
dec
and
cwtl
outsl
std
inc
jbe
mov
fdivrl
xor
sub
inc
mov
xlat
cltd
shrb
mov
jo
mov
fldenv
mov
and
dec
jge
outsb
mov
jnp
imul
mov
mov
inc
sar
stos
daa
push
inc
xlat
test
mov
inc
xchg
call
or
dec
pop
and
mov
movzbl
std
movsl
ss
shll
mov
es
dec
xchg
mov
xor
jns
pop
ret
pop
dec
mov
push
mov
jne
pushf
sub
jbe
lea
sbb
and
shll
in
adc
push
int3
fidivrl
dec
outsb
fiaddl
dec
ss
popf
mov
mov
sti
ja
jae
sub
xor
xchg
ret
push
pop
loopne
arpl
in
mov
shrb
mov
mov
fiaddl
popa
lea
jns
sar
mov
dec
push
aad
push
jl
sub
repz
aam
lret
mov
sbb
mov
sub
sahf
pop
adc
jmp
jb
mov
inc
add
lea
cmpl
aam
das
add
sarl
mov
sbb
pop
add
dec
std
outsl
rorb
jmp
push
add
dec
adc
sub
cwtl
lds
xchg
pop
jae
jl
dec
push
les
xor
rorb
pop
xlat
push
add
jmp
cmpsl
xchg
push
into
test
and
mov
ja
mov
pop
es
lret
fdivrs
lea
fwait
aaa
daa
divb
fistpl
mov
insl
orb
or
sbb
push
xchg
sub
sbb
clc
push
outsl
pop
testb
mov
jp
fists
dec
iret
sarw
add
fwait
lahf
hlt
add
ficomps
xorb
mov
mov
jo
sub
mov
shrb
popf
cs
pop
insl
sbb
ret
mov
jl
iret
pop
inc
cltd
adc
iret
inc
cmp
hlt
jns
mov
aam
ss
fstl
stos
into
rorl
jne
sbb
addl
adc
gs
pop
clc
shl
inc
inc
sbb
movsl
mov
lods
orl
mov
iret
icebp
push
adc
out
sbb
push
ja
push
adc
dec
es
and
push
fsubrl
xor
jp
cli
mov
mov
into
rclb
aad
dec
negl
push
xor
fwait
jo
popf
push
and
nop
push
call
or
lret
xor
test
inc
xchg
xchg
add
jbe
dec
test
loope
xor
mov
movl
and
jbe
and
cld
or
mov
inc
pop
dec
push
nop
dec
stc
data16
nopl
and
add
jns
dec
je
adc
sbbl
dec
rolb
in
out
push
je
in
nop
out
icebp
mov
inc
xor
clc
out
push
cs
adc
and
insb
icebp
loopne
mov
nop
rolb
enterw
enter
pop
jp
enter
pop
rcr
pop
mov
sub
push
lret
pop
xorl
mov
lock
inc
add
sbb
xor
mov
gs
jg
call
in
or
jp
enter
lods
movsb
fisubrs
lahf
pop
dec
xchg
ds
push
push
pop
jecxz
jmp
fs
push
pop
lods
enter
int
inc
lahf
push
movl
arpl
loop
scas
cmp
mov
pushf
cmc
pop
cltd
push
push
pop
and
cmp
nop
or
xor
pop
sub
js
jg
out
adc
ret
cmp
loop
add
loop
out
push
pop
inc
adc
aad
icebp
sti
jmp
sbb
push
sub
mov
scas
in
jae
mov
insb
pop
push
pop
aas
xlat
dec
andl
sub
fsubrl
sbb
or
xchg
pop
dec
cmp
lcall
sti
sarl
jmp
test
push
ret
ja
or
adc
in
out
adc
dec
and
mov
sti
cmp
xchg
icebp
xor
or
popa
popl
sarl
loope
adcl
imul
push
xchg
adc
inc
fsts
pop
xchg
ds
dec
dec
inc
and
lods
push
pop
mov
mov
and
sbb
and
std
inc
inc
test
inc
js
dec
xchg
in
test
and
js
aas
mov
jo
or
or
ja
cmp
pushf
movsl
movsl
cwtl
aas
sbb
filds
adc
int3
xor
icebp
imul
nop
xchg
mov
jnp
xchg
rcrl
or
mov
adc
cmp
pusha
mov
jge
addb
fsubrs
mov
pop
sbb
sbb
aas
mov
mov
mov
mov
das
psubw
adc
ja
push
xor
sbb
pop
cmp
lret
adc
adc
xchg
push
jge
scas
shrl
sarl
leave
and
rcrl
je
and
cmc
cmp
fwait
cmp
cld
sahf
xchg
test
je
out
leave
jo
mov
out
mov
or
mov
xchg
mov
sub
jp
inc
aad
jmp
out
add
push
and
push
mov
mov
mov
push
outsb
sbb
xor
leave
dec
push
sub
fidivrs
cmp
inc
loope
lahf
dec
adc
int3
jmp
imul
mov
inc
and
leave
stos
int
idivl
out
mov
test
xchg
mov
clc
inc
xorb
std
mov
repnz
adc
cmp
cmpsl
lret
sub
jno
xchg
and
outsb
and
stc
stc
or
mov
pop
add
sub
lahf
insl
and
movsl
and
in
jns
in
inc
gs
cmp
jmp
adcb
stos
out
jbe
test
ljmp
mov
sub
jo
mov
fadds
popf
js
iret
adc
ja
lahf
bound
testl
stos
data16
outsb
add
mov
xor
mov
pop
sti
aaa
add
and
pop
data16
inc
mov
mov
lret
add
in
pushf
mov
mov
inc
add
sbb
xchg
jl
cld
out
lock
std
dec
dec
mov
adc
adc
mov
filds
lock
lods
test
pushf
cmpsb
adc
icebp
xor
ljmp
iret
sbb
repz
xor
bound
leave
xchg
mov
adc
sub
push
repz
sbb
cmp
lods
lock
std
cltd
fwait
jo
test
add
popf
enter
movsb
push
and
sbb
cmc
xchg
adc
mov
arpl
mov
sti
jl
jno
xchg
stos
sub
push
inc
mov
pushf
push
addr16
sbb
inc
mov
mov
push
aas
sti
shl
inc
and
imul
or
cltd
ret
fsubrs
add
movsl
pushf
stc
mov
add
pop
sbb
cmpsb
cmp
lock
cmpsl
aaa
out
test
test
mov
inc
cwtl
push
lret
and
rclb
lcall
ljmp
cwtl
pop
lcall
sahf
push
pop
aam
lea
in
addr16
in
out
and
pop
dec
cld
icebp
push
dec
scas
cmc
mov
inc
dec
sti
pop
mov
in
movsl
xchg
xor
push
pop
lret
loopne
lahf
or
jg
cmp
ds
cs
mov
jg
in
inc
loopne
pop
add
scas
test
pop
add
xchg
xchg
pop
fdivl
rclb
push
mov
jle
cmpsb
mov
imul
cmp
push
loop
movsl
mov
push
inc
frstor
andl
imul
and
mov
cmpsl
movsl
pusha
gs
jmp
add
xchg
mov
inc
or
push
add
push
push
xchg
movsl
ds
push
add
daa
lods
js
cmp
cmp
arpl
push
ds
imul
add
jmp
sbb
jl
arpl
xor
xor
cwtl
cmp
ds
leave
and
jbe
sub
outsb
sub
stc
inc
pop
cmpsl
push
push
popf
cltd
lods
push
adc
fidivl
sahf
sbb
mov
mov
outsl
add
lds
negl
sbb
iret
arpl
inc
mov
popf
xor
leave
jge
pop
fisttpll
arpl
cmp
lret
dec
pop
cmpb
ja
pop
popf
les
nop
mov
push
mov
mov
cltd
mov
sub
movsl
ret
xlat
rcrl
mov
mov
mov
adc
in
lcall
jge
jnp
pop
push
sub
pop
sbb
cmp
pextrw
imul
sub
inc
into
dec
jg
scas
es
popf
and
loop
cli
adc
adc
jmp
ljmp
push
gs
pop
out
out
sbb
add
cld
popf
mov
mov
insl
xor
mov
push
mov
sbb
sub
repz
mov
test
add
hlt
push
sti
dec
add
lahf
dec
sbb
mov
scas
lods
pushf
enter
movsl
je
loopne
pusha
pop
xor
dec
inc
xor
mov
in
push
pop
sbb
push
xchg
xchg
stos
fdivp
inc
mov
mov
dec
fidivrs
movsl
mov
ljmp
js
pop
ret
xchg
push
mov
popa
out
push
xchg
ret
ds
sbb
movsl
sbb
push
mov
pop
add
pop
por
pop
stc
mov
mov
sbb
xchg
out
js
mov
mov
cmpsl
clc
adc
mov
mov
or
sub
addr16
jge
mov
adc
xchg
push
push
and
stos
fmuls
jbe
mov
mov
and
sbb
jns
cmpsl
add
push
stos
jae
movsb
cmpsl
pop
jns
dec
hlt
andb
sub
mov
ljmp
fpatan
inc
and
cmpsl
dec
nop
sar
and
jp
and
jne
dec
data16
loop
sar
pop
sub
outsl
cmp
push
insb
push
sbb
sti
jg
lea
or
lret
shlb
aad
xchg
mov
lea
fcompl
xchg
je
insb
ja
cltd
mov
xor
mov
lret
mov
or
out
in
jmp
mov
sti
push
rcrb
pop
ret
pop
aam
xchg
jg
jl
inc
outsb
push
incb
cmp
bound
pop
ljmp
jae
xchg
mov
mov
xlat
xor
dec
leave
xlat
ja
std
xchg
fistpll
sbb
mov
push
and
lret
adc
fisubs
mov
inc
aas
js
cli
imul
aas
das
dec
mov
fcoms
pop
shr
or
ds
mov
jmp
push
mov
push
test
inc
sti
fisubs
lods
stos
pop
adc
sbb
xor
xchg
js
bound
mov
bound
xor
mov
mov
ret
mov
int
dec
adc
sub
inc
adc
fwait
mov
add
xchg
test
add
add
cmp
jmp
push
lods
hlt
rcrb
nop
adc
cmp
addr16
lods
sub
outsb
inc
test
cmc
cld
and
mov
jo
ret
in
lret
jge
and
mov
mov
add
ljmp
aad
fisttpll
or
cmpsl
fdivrs
or
mov
xlat
shll
stos
mov
iret
shrb
shlb
gs
bound
xchg
ljmp
jg
mov
outsb
xchg
push
addr16
dec
and
sub
shll
add
push
imul
cwtl
mov
inc
imull
leave
les
dec
test
sub
jmp
sub
jo
mov
mov
mov
and
push
pop
sarl
mov
pop
daa
bound
mov
push
pop
daa
or
arpl
dec
pop
jp
int
mov
add
xor
fwait
jno
jno
fs
mov
mov
cli
sarb
shr
jb
sbb
ljmp
in
arpl
fidivrl
loopne
inc
mov
fwait
jle
cmp
sbb
negl
mov
test
popl
ss
outsl
scas
or
mov
jbe
mov
adc
pop
mov
test
shll
mov
and
mov
test
pop
es
push
out
mov
fwait
sbb
adc
sbb
call
ja
fbld
or
arpl
pop
rclb
icebp
jg
out
repnz
sub
sbb
lret
mov
dec
out
xor
sub
jge
movsb
movsl
jle
jmp
iret
add
sbb
xchg
loopne
push
jns
lea
cwtl
push
sbb
pop
loope
inc
adc
xor
fnsave
andl
dec
fwait
cmp
popf
popl
inc
mov
inc
js
sub
pop
mov
out
mov
xor
daa
mov
add
sub
xchg
mov
ret
sbb
xor
stos
sbb
mov
fwait
xor
int
fiadds
xor
mov
push
or
xchg
bound
xor
pushf
dec
inc
sti
ret
mov
rcr
xadd
xchg
jnp
dec
bound
and
cmp
jle
push
ds
dec
shrl
cltd
pusha
test
xchg
call
mov
or
pop
inc
xor
js
xchg
mov
sbb
rclb
lods
add
sbb
mov
notl
cmp
cltd
add
push
pop
push
gs
cli
ficompl
xlat
insb
shrl
lods
es
push
inc
mov
mov
stos
add
insl
arpl
movsl
ret
sbb
out
push
test
inc
xor
xchg
test
inc
push
jmp
or
mov
xchg
nop
in
faddl
inc
jp
out
mov
roll
push
out
mov
hlt
push
lret
aas
jl
add
scas
push
sub
xlat
push
popa
cmp
push
dec
push
outsb
cmpsl
dec
in
ret
je
mov
xchg
jg
aaa
icebp
push
push
mulb
sahf
xchg
pop
dec
mov
push
jns
jno
add
andl
scas
sub
dec
sbb
fmulp
addr16
aas
es
xchg
sub
ds
mov
jge
fcmovb
cli
rorb
repz
cmpb
inc
inc
push
fdivrl
out
std
mov
adcb
mov
jmp
rcll
and
mov
mov
testb
ret
outsl
fidivrs
jne
inc
test
sahf
test
sub
cmp
pop
inc
imulb
mov
int
sub
jae
mov
out
ret
xchg
sti
cmp
inc
popa
pop
repnz
ret
clc
cmp
mov
mov
mov
dec
or
jo
out
jmp
sbb
xor
add
push
ret
cmp
jp
repnz
jge
jle
mov
push
push
addl
cltd
mov
add
push
pop
xchg
fmuls
in
jbe
faddl
cmpsl
and
adc
or
mov
xchg
aaa
jae
mov
test
cld
adcb
push
addr16
cmpsb
mov
mov
push
inc
ss
mov
ljmp
adcb
in
pop
insl
pop
sbb
cmp
filds
or
insl
sbb
cmc
xchg
mov
add
stc
cmp
ljmp
mov
pop
xchg
cmpsb
shll
out
icebp
paddq
pop
ljmp
jnp
cmpsl
adc
in
jno
lret
push
mov
mov
push
clc
stos
xchg
push
xchg
mov
sub
lahf
or
mov
adc
movl
mov
cmpsb
pusha
stos
lcall
xor
loopne
repz
iret
cmp
mov
mov
mov
in
aad
es
pop
out
jle
fwait
push
inc
xchg
fsubrl
inc
push
jno
mov
fwait
xchg
jg
add
jle
test
add
sbb
hlt
into
mov
adc
push
ss
sbb
sahf
sbb
cld
loop
lock
test
dec
inc
les
daa
imul
subb
sahf
mov
negb
loopne
les
push
andb
sarb
sarl
cmpsb
sub
dec
and
pop
sub
mov
pushf
and
mov
mov
cli
lea
stc
mov
mov
pop
adcb
enter
orl
mov
dec
add
test
insl
loope
pop
shl
dec
pop
pop
stos
xlat
movsl
inc
and
inc
or
mov
nop
inc
mov
shll
sar
sub
outsb
pop
sbb
insl
and
cmp
xchg
cmpsb
mov
rcr
stc
dec
nop
push
dec
imul
leave
push
xor
xchg
lods
adc
sbb
inc
and
push
xor
addr16
adc
negb
loop
sub
out
fwait
inc
xchg
or
loopne
push
xchg
in
loopne
xor
inc
xchg
fs
lcall
roll
push
in
int
outsl
aas
arpl
inc
and
pop
and
adc
xchg
push
hlt
enter
fcomps
call
jnp
in
add
mov
cmp
outsb
inc
lock
sub
adc
sub
mov
ljmp
adc
cmp
xor
cli
fmuls
sbb
mov
mov
icebp
roll
rcll
lods
push
or
push
ss
iret
push
lret
sti
jle
stos
add
in
pop
adcl
cmpsl
rolb
stos
loopne
sub
loope
je
test
sub
or
iret
js
jno
mov
ds
flds
lret
out
xor
addr16
dec
cmp
cmc
dec
mov
stos
jl
shll
pop
sbb
mov
nop
push
test
pop
mov
fdivrs
and
xchg
jne
mov
adc
push
push
add
or
inc
in
mov
rclb
out
inc
xchg
xchg
inc
mov
movsl
in
mov
sub
lea
lcall
jmp
pop
ds
jne
aaa
testl
cmp
cmp
adcl
sbb
inc
in
into
jbe
push
push
sbb
loopne
dec
je
clc
jmp
outsb
dec
and
pop
repz
insl
lods
popa
sub
jbe
leave
pop
push
sarl
pop
sbb
fdivl
js
das
cs
out
jo
inc
hlt
jnp
loop
in
dec
or
std
sub
daa
fwait
push
and
fildll
ja
jo
dec
out
dec
mov
mov
mov
jb
jle
pop
pop
cmp
cld
pop
out
in
pop
jg
rcll
call
xchg
jge
jo
nop
mov
dec
stos
push
cltd
je,pt
les
icebp
pop
enter
pushl
or
jmp
jge
fldcw
les
or
out
subl
dec
jp
dec
in
cmc
cmc
adc
imul
loope
leave
mov
xchg
cmp
cmp
dec
push
repnz
cmp
dec
push
aaa
jne
insl
into
lds
mov
xor
and
leave
push
cmp
loop
xchg
cmc
bound
jno
xchg
sarl
lahf
aaa
xor
push
dec
shr
pop
inc
push
ret
mov
mov
dec
lret
mov
into
mov
jb
stc
dec
jle
pop
or
rcll
mov
mov
test
addl
pop
pop
push
adc
xlat
or
add
mov
jb
stos
sub
mov
or
je
pop
jne
testb
xor
push
cmp
xchg
adc
out
inc
lea
push
mov
sub
lahf
sti
mov
jne
cmp
mov
cmp
xorb
jle
fidivs
ficompl
ret
icebp
add
adc
std
loopne
ss
jb
jmp
mov
jge
xchg
stos
movsl
inc
xor
stos
pop
pop
insl
and
inc
or
test
sbb
ret
jg
pop
mov
test
repnz
cli
mov
out
and
scas
mov
mov
jmp
std
or
stos
xor
out
inc
pop
aas
enter
leave
iret
sub
mov
inc
cli
pop
call
fcmovne
popa
dec
jmp
mov
pop
or
dec
mov
xlat
leave
mov
inc
mov
xchg
outsb
fadds
fimuls
cwtl
or
push
dec
or
lret
jnp
adcb
into
mov
fisubl
or
aas
cmovns
outsb
add
sbb
xchg
sbb
daa
mov
add
in
adc
xchg
mov
es
arpl
xor
leave
push
test
pop
aas
daa
adc
call
andl
cmpsl
sub
repz
adc
push
push
jne
les
and
xorl
adc
loope
and
push
je
add
out
ficoml
sbb
outsl
pop
push
fimull
pop
push
aam
xor
adc
jne
push
adc
sbb
fbld
cmpsl
adc
mov
push
xchg
out
inc
movsl
icebp
cs
jmp
and
ds
xlat
divl
pushf
test
inc
rorb
cs
mov
adc
sub
lods
mov
push
mov
cmp
fwait
xor
fwait
push
add
lret
js
enter
lods
stc
mov
inc
mov
pop
lods
scas
lret
into
fdivs
sub
mov
js
pop
fs
call
imul
xlat
arpl
mov
or
jl
xchg
sti
shll
orl
cmp
pop
mov
pop
xor
inc
mov
add
adc
and
out
enter
mov
jge
cmp
test
pop
xchg
aam
shlb
mov
not
je
inc
notl
pop
pop
shll
sahf
sub
adc
bound
cltd
fs
mov
inc
or
jp
es
mov
mov
push
inc
test
jb
fsubrs
xor
enter
lret
out
aas
and
dec
xchg
fisubrs
and
lahf
pop
clc
ds
mov
mov
dec
mov
popa
cwtl
jbe
push
adc
test
lret
mov
mov
js
movsb
ds
inc
inc
pop
cmp
cmp
inc
insl
fbld
les
add
repnz
ret
psubw
ret
clc
rcr
mov
inc
inc
xorb
jae
scas
je
and
fstl
shrl
mov
mov
adc
mov
push
sub
data16
bound
add
in
push
push
push
mov
dec
mov
sub
cmp
out
xchg
fmull
ret
das
jno
cmp
push
sbb
inc
cltd
int
xchg
lcall
pop
out
and
xor
mov
push
pop
mov
push
cld
insb
mov
sub
shll
ja
sbb
and
adc
inc
scas
jae
sub
mov
add
lock
cmp
adc
adc
inc
inc
test
sub
push
outsb
pop
push
scas
inc
ljmp
lock
sub
ljmp
pop
mov
mov
jmp
test
filds
sub
jmp
outsb
icebp
test
js
adc
dec
adc
push
jns
xor
sti
mov
in
and
mov
aas
jo
fsub
push
fistpl
inc
sar
fsubs
mov
fcmovnb
out
fdiv
dec
add
popa
dec
sub
inc
mov
mov
shlb
cmp
icebp
loopne
add
lods
pop
test
push
mov
adc
adc
adc
subb
xor
pop
add
xor
xor
int
dec
push
push
xorl
or
dec
es
out
cld
ret
daa
bound
mov
mov
inc
not
shll
decb
sub
inc
mov
enter
inc
scas
inc
stos
mov
mov
sbb
fsubrs
xor
shrb
push
ficompl
out
cwtl
mov
fiaddl
aaa
cmp
jp
std
icebp
imul
xorb
sbb
sbb
sbb
std
cmp
mov
sbb
mov
or
mov
lds
xor
test
stos
cmp
test
out
stc
jp
arpl
or
repnz
jge
xchg
lods
pop
cwtl
cmp
xchg
rolb
fisubl
mov
aam
mov
mov
ja
testl
jmp
sbb
sub
xchg
repz
mov
adc
scas
push
cmp
jb
and
repz
add
or
movsbl
out
fnsave
mov
push
dec
aad
sbb
hlt
aam
xor
jmp
push
ljmp
mov
jg
mov
lret
mov
push
inc
jg
lret
add
jo
nop
lcall
pop
imul
sti
dec
sub
add
mov
xor
mov
test
mov
popf
leave
movsb
bound
jecxz
cmpsl
iret
lret
imul
mov
mov
mov
fcmovbe
pop
mov
mov
jecxz
mov
mov
mov
aaa
enter
insl
cwtl
xchg
mov
in
xor
add
mov
out
cmp
and
and
push
loop
mov
cltd
sub
in
add
cmp
jnp
sub
rcl
icebp
stos
mov
pop
and
js
mov
jae
xor
xor
xchg
push
dec
mov
jp
rcrl
push
xlat
mov
loop
and
shr
mov
cmp
aas
outsb
pop
call
out
cmpsl
push
data16
or
inc
ja
std
insb
fwait
stos
or
repz
lahf
cmpsl
inc
sahf
ss
mov
jp
subl
sub
xchg
and
bound
punpcklbw
icebp
aas
jp
fcoms
jno
pushf
call
mov
cmpsb
cmpsl
xchg
sub
sahf
mov
testl
insl
xor
push
jmp
loope
dec
mov
mov
ret
xor
xchg
sbb
mov
mov
push
push
hlt
xchg
lret
add
addr16
stos
pop
push
sub
aaa
dec
movsb
arpl
lahf
ss
test
or
lret
int3
test
sub
loope
pop
jns
or
jae
mov
stos
out
xor
sbb
sti
in
loope
pop
jmp
adc
in
cld
orb
push
mov
hlt
inc
cltd
mov
or
js
dec
arpl
insl
sub
aad
scas
fidivs
sbb
cld
xchg
mov
dec
fstps
jg
dec
in
aad
imul
jp
dec
xlat
mov
or
cmp
pop
push
fistps
mov
mov
lods
sub
push
mov
add
xor
das
add
xchg
inc
jmp
jnp
mov
mov
popa
bound
push
add
inc
ss
jb
cmpsb
push
mov
fwait
out
jae
mov
ljmp
inc
inc
call
mov
lret
int3
xchg
mov
lods
inc
fmul
jp
adc
jno
movsb
jg
int
mov
inc
cld
pop
mov
pop
sarb
mov
sti
jne
lret
subl
sbb
mov
push
das
loop
push
mov
out
mov
add
fucom
jno
cmp
mov
rcl
fdivrs
fists
leave
aad
mov
jl
xlat
ret
xchg
dec
call
jg
mov
inc
push
jp
mov
icebp
xchg
mov
clc
pop
push
test
bound
push
sub
jle
or
stos
movb
imul
mov
xchg
push
sbb
inc
dec
cmp
sub
and
xor
in
lret
in
scas
movsl
sub
fnstsw
dec
mov
aaa
lcall
popf
xchg
jge
loope
das
jno
loop
dec
pop
xor
jbe
fnsave
neg
into
push
js
sarb
out
fsubs
jecxz,pn
push
fnstcw
jo
xor
sbb
sbb
mov
insb
ljmp
jo
pop
lods
pop
adc
lret
incl
mov
mov
lahf
push
or
insl
inc
inc
out
mov
icebp
sbb
jmp
xor
lret
jg
sarl
sbb
push
jg
into
xchg
fwait
ret
hlt
mov
in
mov
fs
adcl
repz
movsb
mov
xlat
pop
stos
adc
adc
fwait
inc
bound
sbb
add
jb
shl
mov
cld
pop
xor
nop
xchg
lahf
fcompl
lods
xor
lock
in
dec
xchg
lret
jg
or
popf
push
add
mov
mov
cmp
add
loop
xor
pop
mov
jb
and
pcmpgtw
jnp
mov
fs
nop
adc
inc
jge
mov
xor
stos
mov
or
lret
in
lcall
adc
aas
sub
push
sub
mov
sbb
insl
movsb
lret
pop
mov
into
enter
sahf
sbb
mov
pusha
add
insb
pop
adc
jp
int
mov
mov
out
add
inc
lret
xor
cmpsl
pop
cmpb
stc
add
test
mov
mov
inc
push
icebp
add
mov
inc
jge
cmp
es
xchg
mov
sbb
push
sub
sub
and
stos
and
test
pop
stc
mov
push
mov
xchg
dec
aam
adc
xchg
mov
mov
fsubr
movsb
rcrl
imul
stos
inc
mov
mov
sbb
gs
into
adc
pushf
enter
add
shlb
mov
jl
ja
jbe
addr16
daa
adc
fistpll
push
shll
movsb
sarb
mov
dec
loop
mov
popf
imul
xor
and
bound
dec
or
ljmp
or
push
loope
jp
bndstx
pop
push
add
std
std
test
dec
int3
jge
inc
daa
mov
jno
mov
add
gs
aaa
nop
pop
fcoml
aas
jp
sti
fcmovu
orl
pop
xchg
xor
je
mov
stc
or
adc
test
dec
dec
cmp
mov
roll
sbb
adc
leave
fdivrl
pushf
mov
loopne
push
inc
add
stos
or
mov
or
dec
int3
sbb
xchg
push
repz
nop
test
addl
rorb
cltd
pop
bound
xchg
mov
pop
adc
pop
mov
pop
fists
cmp
adc
lahf
adc
sub
xchg
outsl
and
mov
sbb
push
mov
inc
inc
mov
inc
aad
adc
aad
xchg
adc
lcall
cmp
notl
adc
push
in
es
inc
mov
inc
out
xor
loopne
dec
jmp
cli
out
sub
outsl
jns
lcall
push
mov
sub
arpl
cmp
pop
fwait
movsb
xchg
subb
dec
insb
push
cs
cmpsb
mov
and
and
cli
mov
xor
or
push
adc
popf
dec
pusha
adc
mov
and
sti
arpl
push
cld
andl
jp
add
inc
fstpl
xor
std
adc
bnd
sub
xchg
fwait
xchg
xor
pop
rcl
fidivrl
xor
xchg
out
lock
add
sub
mov
iret
popf
aaa
xchg
sub
iret
push
ret
cmp
int3
inc
cmpsb
sahf
std
jae
test
inc
mov
sbb
lea
andl
sub
jg
fs
and
jb
gs
loope
mov
rorl
cmpsl
or
div
mov
push
xor
call
imul
lahf
inc
in
push
cwtl
inc
ds
lods
pushf
dec
jle
lcall
mov
mov
into
cmp
lods
loop
add
or
cwtl
fdivr
mov
movsl
mov
rcrb
jmp
lahf
pop
or
scas
call
rcll
mov
push
push
mov
and
sbb
lods
inc
mov
es
inc
aas
mov
fsts
in
aam
test
stos
fildll
fsubl
dec
jle
sahf
xchg
ds
mov
loopne
jge
xchg
inc
mov
xchg
push
jl
loop
mov
push
jmp
push
lock
les
inc
mov
push
loope
popf
xor
dec
sub
aad
push
inc
mov
insb
aas
int
adc
sbb
mov
sub
iret
mov
repnz
imul
int
inc
xchg
sbb
cs
mov
in
shlb
xchg
cwtl
mov
aaa
mov
push
and
inc
mov
movsb
je
jns
loope
fnstenv
xor
stos
fstpt
test
mov
inc
gs
sbb
mov
test
inc
stos
xor
iret
mov
inc
cld
lods
rclb
mov
mov
cmp
xchg
sub
loop
adc
jge
xchg
pop
and
dec
and
pop
rorb
fs
lret
inc
pop
orl
lret
leave
in
mov
fucompp
dec
jae
cmp
enter
cmp
mov
adc
mov
mov
fucomp
mov
inc
lcall
adc
pop
iret
enter
sub
out
mov
pop
cmp
jne
out
and
xor
shlb
push
lock
ss
sub
addl
fwait
pop
or
dec
mov
movsl
xor
sbb
sub
inc
bnd
pop
adc
or
out
cmp
sbbb
and
sahf
sti
adc
scas
jb
fwait
pop
add
xor
sbb
mov
std
ret
ja
or
ret
flds
out
jmp
ds
jmp
mov
push
pop
cmp
xchg
jae
cmpsl
test
insw
stos
jge
xchg
add
and
notb
xor
int
xchg
xchg
mov
outsb
scas
add
xlat
pop
mov
add
adc
lods
in
fldt
add
push
sbbb
in
fists
not
test
fcomp
dec
adc
in
movsl
jns
xlat
popa
sub
lds
lret
iret
jb
jle
xor
jae
cld
imul
loope
fistl
loop
mov
shll
pmuludq
stos
sbb
dec
pop
sbb
ljmp
push
lock
pop
mov
sti
and
out
outsl
clc
add
lods
and
sbb
repz
cmc
jae
jne
xlat
push
and
cmp
in
cld
rclb
jne
test
or
push
mov
aas
in
pop
inc
call
push
sbb
jecxz
mov
fwait
iret
xchg
pop
dec
dec
test
pushf
pop
sub
es
cwtl
shlb
mov
mov
lcall
cmp
jmp
fsts
xor
lds
repz
lret
mov
std
in
insl
jae
fadds
jno
pop
dec
stos
fbstp
mov
dec
sub
and
dec
sub
or
imull
or
stc
out
dec
xchg
std
fldl
sbb
xchg
mov
sub
dec
mov
push
cmova
fwait
and
mov
int
daa
outsl
inc
xor
xchg
leave
push
mov
jb
xchg
pop
push
push
xchg
add
dec
sbb
pop
cmc
cmp
jle
andb
rorb
push
dec
jle
rcl
jg
int3
push
push
mov
es
mov
add
xchg
lret
int3
inc
xchg
xchg
cltd
decb
push
and
out
pop
pop
mov
xor
roll
pop
mov
pop
inc
jecxz
sbb
out
push
adc
dec
scas
pop
inc
add
ss
push
sbb
sub
repnz
jmp
push
mov
mov
adc
mov
sub
iret
jle
sbb
mov
pminub
adc
bound
sub
pusha
ja
inc
mov
add
add
out
repnz
rclb
push
mov
insb
mov
xor
inc
xor
mov
addl
cltd
in
jae
gs
add
mov
arpl
jp
loope
xchg
sahf
ja
pop
ficompl
add
mov
out
lods
daa
lea
xor
loope
aad
addr16
test
rorb
pushf
test
cmpsb
and
daa
test
push
lds
dec
clc
mov
popa
cmp
and
call
xchg
add
xchg
xor
push
leave
scas
xchg
pop
sbb
jnp
scas
ret
xchg
xchg
clc
adc
idiv
imul
cmp
sbbl
mov
inc
pusha
popa
jmp
jae
dec
jl
addr16
sub
push
dec
sbb
mov
pop
aaa
xor
and
in
xor
cmp
jno
push
pop
and
or
popl
inc
sbbl
lcall
mov
pop
push
call
add
lock
or
xor
add
stos
and
adc
pusha
mull
jmp
cmp
leave
js
repnz
call
xchg
and
jnp
adc
sub
xchg
push
scas
cli
mov
mov
pop
inc
push
mov
rcrb
addl
or
dec
in
hlt
mov
lods
xchg
aam
dec
ljmp
shrb
add
sub
adc
stc
add
xor
dec
xchg
lahf
js
mov
mov
stos
xchg
and
movsl
xor
int
mov
sbb
mov
inc
inc
cmp
ret
sbb
or
dec
jecxz
aaa
dec
mov
setp
iret
jle
movl
xlat
mov
enter
pop
adc
or
subl
mov
bound
or
and
xor
mov
aaa
jl
cmc
test
inc
js
mov
pop
mov
stc
sbb
mov
xor
icebp
and
push
mov
lods
scas
sub
pop
and
repnz
daa
call
incb
jg
or
sub
jno
les
cmpsl
mov
jo
sbb
fmulp
or
push
daa
pop
sbb
movsb
gs
lret
hlt
test
ret
mov
cmp
test
addl
pop
out
jp
loop
or
fidivs
xchg
xor
nop
insb
add
jmp
sbb
xor
in
inc
inc
decb
mov
sbbb
sub
jg
mov
pop
push
xchg
std
mov
shl
adc
push
xchg
dec
cld
icebp
rorb
xchg
fdivrs
int
pop
adc
clc
cmp
loope
adc
and
and
jbe
ret
stos
mov
push
loopne
cli
adc
outsb
cmp
jge
mov
push
pop
push
mov
cmp
pop
sub
cmp
loop
mov
aad
adc
dec
out
inc
jmp
add
inc
lock
jmp
mov
hlt
jle
imulb
cmc
xlat
inc
adc
out
sbb
mov
mov
loope
push
dec
imul
or
popf
xchg
xchg
jg
mov
xchg
fs
jb
cmp
sub
xchg
mov
mov
lcall
jl
iret
push
cmp
and
insl
stos
shufps
cmp
roll
or
js
enter
fcomi
and
stc
sub
fisubrs
mov
mov
xor
aam
push
add
enter
jb
sbb
push
and
lahf
add
push
arpl
test
xlat
lods
xchg
inc
xchg
dec
outsb
sub
and
jmp
fcomps
ret
dec
mov
into
inc
dec
pop
cwtl
cltd
ficoms
or
mov
push
inc
rcrl
mov
add
testb
outsl
and
sub
mov
mov
roll
pop
push
je
ret
inc
in
or
sbb
and
mov
sub
cmpsl
bnd
push
imull
push
lods
jo
mov
inc
or
into
insl
dec
or
xchg
pushf
cld
test
add
dec
mov
push
xlat
pop
xor
leave
adc
out
fsts
aam
ds
cmp
and
loopne
xchg
and
cwtl
mov
jmp
insb
in
push
or
adc
xchg
xchg
insb
jmp
push
mov
orb
jecxz
cmp
stos
jo
call
push
jmp
addr16
jecxz
ja
in
fwait
fs
sub
dec
mov
ret
lahf
test
and
lcall
inc
sti
fdivrs
pop
or
lock
adc
aam
add
pop
xchg
push
addl
stos
dec
pop
xchg
mov
lock
inc
xchg
pop
pushf
adc
out
scas
mov
xchg
xor
icebp
cmp
mov
mov
jne
and
xchg
xor
sbb
les
mov
into
push
ret
mov
loope
scas
cmpb
sub
pop
aas
pop
mov
or
popa
stc
ja
iret
sbb
fldz
scas
cmp
pop
adc
inc
std
cmpsb
js
sub
sahf
shrb
sbb
mov
fldcw
loope
stos
fidivs
movsb
int3
fldt
add
xchg
inc
in
mov
sub
push
insb
mov
scas
xor
dec
xor
int3
push
lahf
sarl
nop
add
insb
pop
rolb
out
mov
outsl
sbb
stc
loope
sub
aaa
imul
aaa
movsb
mov
fisubrs
xchg
in
rcpps
pop
xchg
decl
dec
loop
je
daa
out
daa
sub
arpl
aaa
movsb
js
and
clc
cmc
mov
pop
jae
sbb
xchg
cmp
fidivrs
es
iret
push
sub
push
insl
and
ja
xchg
adc
sarl
ja
out
inc
adc
into
ds
inc
mov
cmp
or
scas
daa
push
or
pop
jmp
xchg
mov
idiv
outsl
add
dec
insl
pop
mov
or
jae
pop
dec
pop
mov
ret
div
pop
les
xchg
js
jae
mov
out
or
mov
std
push
fildll
sti
push
or
cs
rcr
rorl
cmpsl
mov
dec
or
je
scas
or
and
mov
cwtl
cld
test
mov
and
inc
das
test
gs
sub
jns
pop
cmp
ja
inc
jmp
aam
push
stc
and
push
aad
jl
inc
call
mov
dec
lock
and
push
test
mov
inc
mov
roll
mov
lods
pop
inc
outsl
cmp
jb
or
adc
inc
cmp
mov
ret
cli
in
subl
cmpsb
int3
mov
cmp
lds
inc
test
popa
pop
push
mov
sbb
aaa
and
push
sarl
cmp
sbb
lds
dec
jno
in
daa
pushf
fwait
inc
inc
jo
mov
inc
mov
xchg
loop
cmpsb
xchg
ds
loope
adc
mov
addr16
sahf
xchg
rorl
push
or
mov
ret
cld
push
mov
push
test
bound
xor
in
lods
lds
fiadds
mov
lcall
mov
mov
repz
or
into
leave
cmpsl
out
lods
inc
icebp
adc
in
test
stc
sub
or
js
fsubrs
rcl
adc
mov
mov
enter
push
inc
ja
cmp
push
and
push
lock
sar
push
push
xor
fwait
enter
out
and
pop
movsb
les
bound
lods
jp
mov
adcb
mov
out
and
ds
outsb
cmp
test
mov
sbbb
ja
cmp
dec
xor
dec
int3
adc
dec
adc
nop
pop
mov
pop
enter
jecxz
jae
stos
repnz
or
dec
lret
pop
mov
xchg
push
scas
lret
jno
jle
in
cmpl
int
addr16
enter
fwait
push
pushl
xchg
mov
cmp
iret
test
lahf
mov
push
mov
pushf
stos
xchg
mov
hlt
inc
and
cs
int3
les
data16
scas
test
cmovle
jle
inc
pop
sahf
popa
xor
jnp
mov
push
sbbl
xchg
daa
mov
fildll
add
int3
dec
fstpl
shl
inc
int3
dec
popa
lods
ds
js
clc
sbb
rol
pop
jle
cmp
mov
dec
add
and
sbb
ret
mov
ss
sti
out
dec
int
dec
xor
and
pop
out
push
mov
push
push
ret
mov
pop
mov
push
aas
shlb
xchg
sahf
sub
out
cmp
jnp
or
xor
movsbl
std
bound
lock
jno
mov
fwait
push
pop
pop
jge
push
jp
nop
or
push
inc
cmp
jbe
dec
imul
or
pop
inc
movsl
ret
enter
insl
fstpt
xchg
mov
add
std
pop
push
sub
inc
cltd
lds
inc
cmc
push
dec
popa
xchg
xchg
enter
clc
jno
jp
mov
andb
les
inc
inc
inc
mov
mov
jmp
xor
es
shl
ja
pusha
ss
inc
insb
xor
lahf
fwait
decb
dec
fisubl
movsl
jno
dec
dec
ret
call
out
lret
cmp
outsb
mov
xor
nop
mov
xchg
sbb
cli
inc
rcl
aaa
pusha
aaa
push
mov
cs
rol
xor
sub
pushf
cwtl
insl
out
jbe
xchg
xor
scas
push
mov
sbb
xchg
dec
int
cmp
std
jmp
divl
fwait
out
xor
push
mov
outsl
gs
testl
xchg
mov
fcompl
ret
out
addl
fmuls
outsl
mov
loopne
ljmp
sarl
int3
in
fdivl
pushf
daa
mov
and
ret
int
adc
mov
jmp
les
loop
push
hlt
cwtd
xchg
adc
sbb
jmp
and
push
cvtps2pd
mov
les
inc
xchg
pop
nop
adc
es
mov
addr16
outsb
xchg
cltd
cltd
jge
jmp
push
arpl
mov
ds
and
cmpsl
fsubl
or
insb
in
push
rcll
imul
push
rcrl
outsb
leave
push
mov
xor
sbb
jg
mov
rcr
and
cmpsb
orb
ret
test
fmul
xor
jp
jg
int
pop
mov
jge
mov
stc
das
rcll
and
mov
scas
negb
test
mov
mov
test
and
push
daa
mov
insl
cmp
movsb
pop
dec
mov
cs
push
mov
and
fstp
pop
adc
or
sti
or
and
inc
adc
dec
push
add
pop
loope
rorb
inc
movsl
loope
push
cvtpi2ps
dec
loop
repz
imul
in
cmp
mov
xor
jmp
dec
cmpsb
clc
adc
sub
jp
pop
sub
popa
sbb
pop
xchg
fisubl
outsl
mov
sahf
mov
or
icebp
add
addr16
bound
push
and
mulb
sbb
sub
and
jno
test
push
repnz
mov
xchg
xor
xchg
jecxz
sub
shlb
dec
mov
int3
dec
adc
and
pop
lock
or
pop
push
leave
lahf
in
jne
icebp
cs
xor
add
cwtl
jge
pushf
gs
hlt
cmp
sbb
cmp
or
popa
pop
cmc
push
jmp
and
scas
add
pop
daa
scas
and
push
push
mov
jl
cmpb
repz
push
sub
jnp
bound
stos
jae
dec
mov
adc
sbb
insb
xchg
test
out
cmp
daa
xchg
out
mov
push
fstl
lcall
or
sbb
lcall
rcll
andb
fcmovb
cmp
out
inc
cs
repz
jg
ss
out
add
sbb
mov
in
mov
sub
clc
push
cli
lret
bswap
mov
btrl
adc
ds
jmp
test
sbb
in
ds
mov
jg
xor
aam
add
xor
or
fnstsw
outsb
ret
pop
mov
leave
shl
movb
or
arpl
mov
psadbw
call
inc
mov
loope
data16
sbb
and
stc
and
inc
inc
mov
cltd
adc
and
xlat
mov
mov
insb
cli
loop
push
xchg
dec
jmp
and
xchg
shll
push
and
popf
add
inc
mov
dec
sbb
lods
push
inc
jg
test
sub
and
int
ss
pop
mov
test
repz
push
jmp
lret
leave
sbb
dec
fldenv
fwait
xlat
in
aaa
and
jb
cmc
jae
inc
mov
addr16
jns
ret
xlat
xchg
outsb
sub
mov
mov
imul
dec
sbb
sbb
dec
shrl
inc
sub
insl
mov
jne
js
dec
cwtl
xor
fldenv
jbe
int
popa
outsb
cmp
dec
and
ljmp
push
loope
cmp
jp
mov
and
push
loop
stos
jmp
dec
adc
mov
inc
or
push
xchg
xchg
lahf
dec
sub
imul
decl
scas
xor
pusha
insb
filds
sahf
or
mov
inc
pushf
pop
ds
loop
and
xchg
icebp
push
or
roll
jmp
cmpl
or
or
sub
xchg
or
cmc
in
out
test
lea
mov
pop
dec
inc
pop
push
enter
pusha
aad
push
pop
shll
pop
jecxz
lret
jg
jno
jmp
sub
dec
fistps
cmp
fnstenv
lds
enter
arpl
xor
pop
test
repnz
cwtl
xor
jle
push
repz
sbb
das
jo
lods
xchg
in
and
inc
mov
push
push
clc
loope
test
out
jno
clc
sub
data16
ljmp
adc
in
pop
mov
test
sahf
aaa
jmp
jae
dec
push
adc
popf
sub
pop
pop
inc
arpl
push
mov
mov
xor
mov
sub
or
lret
lcall
or
sahf
shufps
cmp
xchg
popf
hlt
test
cmp
pop
inc
cwtl
shll
jnp
mov
and
jecxz
adcl
call
and
mov
pusha
mov
jmp
test
ja
xorl
cmc
inc
adc
stos
add
push
lods
data16
bound
push
fidivrl
push
ficoms
cs
int
mov
add
push
push
cs
aaa
dec
ja
addb
mov
stos
decl
mov
mov
hlt
xor
and
mov
cld
push
xlat
dec
push
pop
aam
daa
lret
dec
aas
ja
or
repz
movsl
inc
sbb
ret
test
jmp
and
push
out
xchg
sub
add
sub
mov
mov
xchg
aam
push
sub
pushf
ficomps
and
sar
mulb
xor
ror
in
inc
inc
xor
pop
mov
std
xor
add
rcl
ss
xorps
loope
roll
sbb
test
fsts
imulb
loopne
pushf
push
push
mov
jge
mov
jb
stc
mov
dec
popa
mov
xor
sti
pushf
mov
int
movsl
nop
lret
lds
les
mov
loope
popf
sub
js
jbe
lds
xor
sub
aad
adc
ret
add
adc
and
sti
xchg
gs
ja
sub
push
add
mov
call
inc
leave
push
xchg
cwtl
adc
sbb
testl
aad
sti
andl
jne
jmp
xchg
mov
mov
sahf
cmp
fldl
cmp
je
cmp
filds
int
xor
aad
mov
mov
pop
ljmp
mov
fwait
xchg
jg
mov
add
mov
jb
data16
sub
cltd
cmpsl
lahf
lea
test
dec
cld
sbb
inc
ja
test
mov
sub
idivl
push
insl
shlb
in
mov
lods
xchg
xlat
cmpl
jo
inc
jp
fistl
shl
lock
mov
fadd
jo
push
sub
jl
inc
test
outsb
add
mov
les
call
cmovge
ljmp
pop
mov
sub
ret
cmc
or
xor
ja
loop
hlt
fidivrl
and
pop
clc
add
push
sahf
and
or
shlb
fisttpll
mov
subb
scas
scas
jno
loope
sub
and
jns
outsb
dec
cld
jge
xchg
mov
repz
or
fimull
lds
cmpsb
xor
sub
fcmovnb
inc
jne
add
data16
sub
add
sahf
adc
int
cs
xor
sub
daa
es
lcall
cmpsb
lret
push
gs
or
inc
push
xor
or
negl
cwtl
test
xchg
adc
and
and
lods
xabort
inc
add
rcl
std
fcmovu
sbb
add
jno
je
stc
icebp
lcall
ljmp
sub
adc
or
mov
push
bound
push
and
pop
dec
bound
cltd
mov
es
js
jge
cltd
cmp
or
int
adc
sbb
imul
movsb
inc
jb
scas
rcr
cmp
xchg
fildll
jne
push
mov
mov
pop
and
and
test
pop
in
popf
dec
in
pop
cmp
sbb
add
push
cmp
dec
xchg
lret
inc
jge
xchg
adc
push
shll
pop
xchg
imul
pop
mov
movsl
mov
fisttpl
rcrb
dec
incl
jne
xor
enter
cld
iret
sbb
cmc
in
add
adc
int
and
testb
jle
in
mov
push
mov
sub
jl
or
mov
mov
nop
scas
inc
push
add
lods
dec
xchg
inc
dec
xor
xchg
cmp
in
and
in
addr16
call
inc
std
xor
jbe
jmp
pop
aad
xchg
insb
out
xchg
das
test
lret
test
add
xchg
enter
iret
gs
push
jnp
clc
jno
push
jle
xchg
jns
int
out
jno
cmp
cwtl
out
shll
mov
sarl
fs
inc
push
int
xchg
inc
movsl
and
sub
xor
sbb
xchg
inc
std
sbb
int
gs
mov
arpl
sub
mov
lods
dec
loop
lahf
dec
insb
loope
xor
scas
ds
jl
sub
addr16
pop
lea
int3
add
fwait
dec
mov
movsl
push
push
xor
xchg
pop
or
shll
fidivl
in
xor
mov
pop
and
cwtl
fidivs
sarl
and
inc
add
or
imul
pop
add
cmpsl
aam
in
jecxz
loope
inc
xchg
rcrl
cmc
sub
xchg
cmpsb
loopne
xor
stos
xchg
icebp
sbb
inc
dec
pop
fstl
xchg
inc
outsb
iret
lret
jnp
fldt
daa
imul
imul
push
mov
adc
fildll
insl
lods
xor
cmpb
lahf
mov
call
inc
mov
mov
pop
aas
insl
sbbl
pop
nop
rcrl
cmpsl
xchg
pushf
add
sarl
pop
or
xchg
test
push
subb
pop
rorb
sbb
xorl
push
mov
jae
dec
mov
pop
pop
jbe
jbe
into
pop
fadd
and
sbb
mov
insb
lods
xchg
xor
adc
jmp
add
clc
scas
out
jge
inc
inc
iret
loope
pop
inc
lret
cmpsb
jne
cmp
xor
mov
inc
mov
leave
cmp
loopne
jle
cmpsl
push
mov
aas
cmp
fsub
sbb
inc
fcomps
aad
js
jmp
push
cld
jnp
push
push
lcall
adc
mov
loop
mov
and
js
pop
mov
mov
inc
aad
lret
pop
and
lock
or
insl
rclb
push
pop
fists
xchg
xchg
push
loopne
inc
aam
ja
xchg
outsl
add
pop
push
sahf
out
loope
sub
dec
js
dec
mov
or
inc
fldlg2
out
repnz
insb
mov
fadds
movsb
lods
aas
std
sti
pop
xchg
add
dec
or
repnz
sbb
cmp
xor
jne
pop
fwait
cmc
loop
mov
jne
subl
push
clc
xchg
int3
cmpsl
xchg
and
inc
adc
xchg
int
cwtl
xorb
inc
sbb
pushf
adc
pop
stos
cs
cld
std
pop
inc
pop
push
rorb
fldenv
pop
sbb
jne
inc
adc
cmp
pop
push
ss
mov
pop
dec
or
lahf
aad
push
into
pop
nop
jbe
fwait
mov
fdivrl
in
push
and
xchg
jle
and
push
insb
nop
in
jg
pop
decb
inc
xor
gs
xchg
call
cmc
stos
mov
mov
xchg
jo
push
mov
pop
imul
pushf
mov
fidivrl
cmpsl
pop
jge
lret
test
add
outsb
gs
mov
imul
push
mov
sub
jno
xor
push
dec
or
cmpsb
lds
fisttps
xchg
xor
or
mov
jae
sub
faddl
and
sbb
mov
int
add
dec
rol
sub
loope
or
and
data16
out
mov
addr16
push
inc
cwtl
pop
fisubrl
addb
add
fimull
pop
mov
and
aad
out
cmp
lret
clc
mov
xor
jmp
or
test
xor
xor
cmp
lcall
add
xchg
imul
pop
pushf
insb
or
repz
pop
pop
xlat
pop
sub
into
fwait
adc
movsb
push
add
int3
mov
mov
addl
aad
jg
cwtl
mov
adc
adc
mull
or
in
sub
shlb
mov
sub
addr16
cli
call
or
push
test
sub
cmpsb
aad
xchg
push
xor
stos
int
jae
stos
push
incl
jnp
sbbl
aam
push
adc
mov
fnstsw
push
jecxz
pop
dec
jle
imul
add
or
std
adc
loopne
call
mov
jle
dec
sub
aam
cmp
lahf
jns
xor
mov
test
sahf
mov
sub
dec
xchg
pop
ss
dec
sub
jecxz
sbb
repz
fsubrl
pop
cmp
iret
pushf
lahf
sbb
insb
mov
push
imul
xchg
xor
inc
mov
daa
iret
jo
push
xchg
inc
fstp
jmp
pushf
jge
push
adcb
inc
iret
and
pop
dec
inc
rcll
cld
imul
inc
inc
or
mov
push
cmpsl
mov
add
add
cmc
imulb
cs
sbb
mov
xchg
sbb
jae
and
sub
cs
mov
xor
icebp
jecxz
dec
xchg
lret
mov
pop
push
mov
mov
jecxz
inc
jne
add
push
mov
cld
ljmp
mov
jb
popa
push
pushf
inc
mov
or
sti
ret
add
lahf
sub
cmp
pushf
lock
insb
mov
dec
shll
adc
add
push
xorl
enter
sub
movsb
or
stos
int3
sarb
mov
cmp
inc
xlat
sub
xchg
into
sub
in
push
jmp
iret
push
iret
pop
mov
push
inc
insb
fdiv
movsb
jle
das
push
in
or
cltd
adc
lods
sbb
and
push
call
ss
dec
xor
cmp
xchg
sbb
repnz
nop
fwait
je
cmp
bound
fdivr
leave
push
xchg
jnp
or
mov
out
shll
dec
jmp
push
lret
leave
push
mov
cmpsl
stos
sbb
ficoms
scas
das
jp
mov
mov
cmp
push
jbe
fisttps
pop
lods
cmp
mov
sbb
stos
repz
loop
out
outsb
or
in
or
jecxz
or
mov
cmpsb
icebp
in
out
arpl
iret
das
adc
insl
mov
adc
cwtl
shlb
ret
mov
mov
sub
jl
dec
xchg
adc
xorb
jge
fidivs
in
mov
lea
pop
cmp
dec
xor
nop
loope
xchg
and
stc
jbe
leave
lahf
pop
cmp
push
hlt
outsl
push
or
repz
dec
sbb
adc
movsb
inc
or
std
fs
imul
jne
fs
mov
jno
jge
pop
leave
lds
stos
mov
lea
dec
adc
jmp
and
push
sbb
js
push
add
or
lahf
mov
mov
bnd
sbb
jecxz
in
mov
movsl
lcall
push
jae
mov
jnp
ret
dec
cltd
add
js
lret
outsb
and
or
jae
xchg
sbb
dec
sbb
fldenv
lock
insl
xor
fs
jne
fwait
imul
data16
std
in
sahf
loope
add
push
sub
insb
jmp
fiadds
mov
in
sub
pop
outsl
lahf
loopne
imul
nop
inc
push
sbb
outsb
cmp
jmp
shlb
adc
xor
pop
jle
sub
xor
fld
jo
test
rcll
mov
jl
int3
in
or
loopne
inc
out
repnz
push
imul
fs
stos
lret
sti
mov
push
scas
add
fwait
pop
movsl
call
ret
pop
je
in
and
lods
insb
lds
mov
std
add
jl
jge
bound
fisttpl
jg
push
pop
jmp
push
mov
cmp
fisubl
outsb
mov
xchg
dec
js
movsl
pop
lds
movsl
or
movsl
push
or
xorb
mov
out
shll
js
fiadds
add
stos
jb
shll
dec
es
jns
dec
dec
iret
insb
fsubrs
loope
lahf
outsl
movsl
loop
mov
in
cwtl
mov
jb
cld
xchg
mov
rcll
cmp
es
adc
scas
stc
push
in
lahf
xchg
push
jge
push
test
and
mov
xchg
inc
loopne
cltd
popa
adc
out
mov
add
xchg
inc
out
ficompl
dec
sar
je
cmpsl
jmp
sbb
add
lret
jno
cli
dec
push
nop
dec
dec
add
popl
xchg
fstps
outsl
sbb
and
pop
and
fcomi
or
mov
leave
dec
iret
ja
cs
in
out
fwait
repz
nop
fwait
out
fldl
xchg
push
das
addr16
adc
and
dec
pop
in
add
cmp
mov
sbb
dec
xchg
sub
in
jne
fcomp
adcb
push
ficomps
vmovups
sbbl
stc
and
test
push
aaa
sub
in
loopne
js
add
pop
test
mov
repz
adc
sub
aam
mov
jo
inc
call
inc
ret
insl
fwait
dec
push
cmpsb
adc
sub
inc
sbb
push
or
xor
xchg
lret
or
dec
shl
mov
inc
ret
mov
arpl
popf
iret
mov
add
lret
and
cmp
and
and
lahf
jle
and
cltd
mov
loope
test
pop
mov
mov
ret
push
test
clc
push
fbld
xlat
aaa
sbb
sbb
ss
addr16
push
call
cmp
mov
sbb
imul
dec
rcll
mov
adc
ss
inc
loope
test
sbbl
add
in
popf
mov
incl
jecxz
inc
sub
popa
xchg
jl
mov
adc
es
repz
sub
mov
or
test
jmp
jnp
cmp
pop
xlat
incb
pop
in
add
cmp
leave
out
ljmp
aas
dec
shll
pop
add
push
out
cmp
les
adc
movsl
and
sbb
pop
jb
add
fmul
aaa
jae
cmpsb
push
dec
or
sub
lret
xor
test
pop
mov
mov
fcoms
add
adc
cmp
xor
push
cmpsb
add
dec
imul
or
fisttpl
ja
jg
pop
iret
sbb
sbbl
mov
outsl
jo
lods
and
and
lret
pop
in
sahf
fists
and
cmp
and
push
rorl
popf
pop
stc
push
jns
dec
dec
xchg
lods
pusha
ljmp
sti
ss
sti
pop
adc
push
push
sbb
mov
add
mov
dec
add
inc
std
adc
dec
leave
mov
jbe
outsl
push
adc
rcr
cmp
into
jnp
out
adc
pop
xchg
popf
mov
pop
xor
cmp
jno
dec
sbb
sbb
lds
jp
xchg
mov
xchg
sar
lahf
mov
mov
dec
scas
add
xchg
adc
out
mov
decl
jg
sti
or
xchg
int
test
xchg
das
cmp
test
xchg
mov
dec
pop
inc
xor
iret
jne
sub
and
scas
loope
dec
lea
and
jno
mov
test
addr16
ds
pop
cmp
mov
fsubl
loope
mov
subb
enter
mov
mov
and
inc
sbb
inc
pop
xchg
mov
shll
and
imul
fcomip
subb
mov
mov
pop
push
mov
push
popa
xchg
cmp
pushf
sbb
inc
int3
mov
stos
test
dec
cltd
inc
call
mov
int
rcr
sar
in
mov
rolb
fsubl
adc
push
loope
fmul
cmpsb
outsl
lcall
jae
fst
movsb
stos
clc
test
sub
lods
mov
notb
stc
loope
rcll
lods
jbe
lretw
sbb
xchg
fiadds
push
xlat
add
sub
jle
outsl
and
cli
xchg
push
or
fnstsw
push
sub
inc
leave
mov
xchg
cmp
and
mov
jne
scas
pop
jle
int3
in
pop
and
fidivrl
cmpsb
or
mov
inc
test
movsl
and
cmp
hlt
repnz
ss
xchg
scas
cmp
dec
mov
xchg
mov
mov
fldt
sbb
xor
int3
adc
fsubl
cmp
fidivl
jp
fs
jae
adc
push
mov
ret
imul
xchg
or
inc
addl
xchg
movsb
jle
mov
xor
mov
xchg
insl
test
out
sub
in
pushf
mov
mov
cli
or
xchg
sahf
mov
dec
jne
mov
sub
xchg
lahf
cmp
scas
adc
xchg
cmc
mov
add
in
sub
xchg
and
mov
jbe
sub
test
or
popf
std
push
enter
sbb
push
mov
or
pushf
dec
xchg
test
cmp
fadd
add
pop
ret
rcr
out
push
push
sbb
mov
nop
xchg
arpl
xchg
mov
adc
mov
aas
mov
inc
test
lcall
sub
mov
cmp
or
push
xlat
dec
and
mov
lret
xchg
or
mov
sub
dec
test
popf
jns
rcll
inc
lret
jnp
outsb
or
cmpsb
mov
iret
negl
mov
or
ds
mov
dec
sbb
sub
outsl
repnz
pop
cmp
mov
clc
jge
push
in
imul
fisttps
out
sbb
xor
lret
imul
xor
int
sti
pop
dec
sub
mov
mov
lret
fcomp
and
mov
aam
adc
out
stos
fs
iret
lahf
mov
ret
push
mov
out
jl
jnp
pop
lods
nop
mov
repz
addr16
insb
cs
adc
add
scas
les
jge
into
mov
or
popa
xchg
xchg
das
out
sub
sbb
test
mov
call
mov
testb
push
test
icebp
pop
fisttpll
pop
jo
cmpsb
inc
sahf
movsl
clc
lock
clc
inc
mov
inc
stos
lods
ss
push
xchg
mov
ja
hlt
and
pop
stos
dec
pop
stc
mov
cmp
sarl
pop
mov
xchg
movsb
outsb
pop
inc
insb
aas
lock
insl
int3
jns
pop
xlat
sub
cltd
mov
es
dec
jns
jns
xor
add
lret
subb
xchg
cmp
mov
mov
movsb
cmp
fwait
add
mov
add
daa
mov
int3
mov
mov
imulb
sahf
ss
jmp
push
jp
test
shrl
jge
jg
push
das
pop
stc
mov
jmp
imul
ret
cmp
sbb
sbb
xchg
mov
push
add
inc
sahf
loopne
addl
jno
xchg
fadds
int3
loopne
dec
mov
mov
popa
pop
fimull
into
cli
sub
push
fs
adc
fwait
sub
inc
popf
pop
cmpsl
sarb
add
push
inc
push
outsb
inc
or
adc
push
out
adc
test
push
cmp
xchg
pop
bound
loope
inc
dec
sbbb
jl
in
or
or
jb
bound
or
lret
jbe
push
rorb
xor
sarb
outsl
int3
push
loopne
fsubrs
adc
rolb
test
imul
pushf
clc
add
pop
inc
mov
cmp
mov
hlt
ds
fwait
xchg
clc
gs
lret
push
sub
scas
xchg
push
ret
outsb
div
ret
popa
jne
push
lods
jmp
repnz
jnp
inc
cmc
add
jae
and
cmpsl
test
je
push
jbe
aaa
scas
mov
arpl
lods
stos
sarl
fistpll
test
scas
mov
and
in
insl
pop
and
fisubs
add
xchg
daa
pusha
cmp
mov
ret
pop
push
daa
cmp
test
mov
and
outsb
je
dec
jmp
inc
mov
out
cmpsl
stc
test
lods
jg
mov
jg
out
out
ja
test
shll
xchg
jo
pop
aaa
jo
imul
rcrb
jmp
inc
jb
out
sarl
call
sbb
push
pop
fsubrs
cmp
xchg
sbb
xchg
cmp
xchg
out
mov
jmp
jl
adc
je
jns
stos
mov
insl
test
outsb
pop
pop
mov
mov
aad
cmp
cmp
adc
dec
lods
add
xlat
ret
sbb
loope
les
insb
mov
bound
or
and
inc
jle
xchg
adc
ss
cli
fisttpll
pop
out
inc
cmpsl
in
call
jmp
dec
ljmp
cld
mov
mov
imul
add
cld
mov
lahf
sbb
loopne
fists
jnp
jle
inc
adc
rcrl
outsb
in
insl
jle
aas
add
fnstcw
lea
add
cmp
ja
add
mov
icebp
push
cwtl
stos
sti
in
stos
mov
inc
add
shll
into
aaa
jo,pn
cmc
xchg
ret
lcall
stos
jp
insb
divb
shlb
jnp
mov
or
xor
dec
nop
fdivrp
dec
scas
add
inc
es
and
ss
mov
jo
scas
mov
mov
mov
jge
cmp
outsb
xchg
jl
outsl
sti
pop
fisubrl
test
and
mov
mov
jg
mov
sub
out
fnsave
jns
nop
and
add
arpl
sahf
pop
push
jle
pop
lds
mov
rcrl
cmp
shll
and
push
cli
adc
add
inc
je
mov
hlt
sbb
les
push
pop
aas
push
int3
flds
call
xlat
jl
push
pop
arpl
xor
mov
sub
daa
xor
popf
addl
jge
imul
lahf
repnz
dec
xor
into
in
int3
popf
call
mov
mov
or
inc
popf
cld
sub
xchg
scas
add
sub
xor
xor
pop
invd
ljmp
xorb
push
dec
sahf
lret
jne
cmp
pushf
mov
loope
inc
aad
push
je
aaa
sbb
fs
cmpsl
loope
pop
push
xchg
addb
pop
cwtl
fsubrl
fld
pop
mov
inc
sub
mov
pop
nop
mov
int3
sbb
sbb
sbb
insl
sbb
xor
add
and
test
add
shll
loop
cmp
push
or
push
out
inc
mov
outsb
lret
cli
add
subl
ret
idivl
ds
mov
jle
repz
sbb
imul
iret
pop
pop
gs
test
mov
ljmp
lods
mov
hlt
cld
popf
in
stos
pop
xchg
push
addl
sbb
lahf
imul
or
mul
cwtl
out
jns
repnz
ljmp
rorl
push
cmp
xorl
ds
mov
in
lcall
imul
iret
subb
mov
sub
mov
arpl
repz
out
xchg
pushf
jg
mov
loopne
cmpsb
mov
aam
mov
lods
sub
loopne
adc
std
cmp
stc
push
int
mov
loop
je
mov
jmp
sub
cmp
jecxz
sub
ja
dec
daa
jg
cltd
fucom
idivl
scas
xor
pop
loop
jnp
cmp
cs
jmp
xor
mov
ds
jnp
dec
cs
mov
or
xor
in
or
rorl
gs
xchg
fiadds
mov
in
add
or
test
lock
lcall
push
add
mov
and
jae
and
test
and
add
mov
cmpsl
sar
fcompl
pop
mov
xor
add
ret
dec
sub
push
mov
addr16
sub
aas
sub
inc
mov
mov
out
push
insl
adc
jmp
in
movb
imul
testl
test
xor
mov
jbe
shrb
sti
dec
sbb
push
mov
or
or
add
iret
hlt
lea
bound
mull
test
aad
mov
jge
or
inc
and
das
lods
xchg
call
es
loope
sbb
jb
xor
mov
mov
xchg
xor
lahf
xor
cmpsl
insl
shr
incb
pop
cmpsb
sub
and
sbb
lods
sbb
jecxz
iret
fstpt
sub
jnp
imul
pop
push
pop
scas
adc
stos
mov
jge
jp
insl
pusha
pop
dec
mov
and
imul
aas
call
and
dec
inc
jp
bound
sub
shlb
jecxz
push
repz
mov
orb
adc
and
mov
arpl
cmc
int
pop
inc
jl
or
rol
sbb
movl
cs
mov
inc
jae
lcall
push
or
aam
push
es
pop
jg
in
and
in
or
push
push
adc
stos
push
in
repz
xor
xchg
aas
or
je
test
int3
pop
mov
mov
xchg
push
pop
pop
jl
out
xchg
sub
cld
mov
xchg
mov
data16
lock
pop
scas
jg
mov
mov
lahf
add
cmp
inc
repz
xchg
inc
jle
push
je
sub
lret
push
xor
das
mov
xor
lods
inc
inc
lods
jne
mov
dec
jno
and
and
mull
jb
mov
jecxz
out
dec
xchg
cmp
movsb
sbb
xor
das
data16
stc
inc
mov
pushfw
push
sub
shl
loope
fs
decb
dec
xor
jne
mov
xchg
and
stos
js
push
out
leave
clc
push
and
mov
push
ds
mov
je
push
inc
or
mov
shll
popf
dec
pop
orb
jbe
ret
push
in
lods
stc
pop
or
addr16
xlat
popa
pop
xchg
nop
subl
dec
andb
shlb
xchg
and
mov
test
cmpsl
mov
mov
or
scas
stos
sti
push
pop
les
ret
push
cmp
mov
mov
cmpl
jnp
add
dec
lret
dec
xchg
insb
gs
mov
mov
fdivrs
xor
add
push
adc
mov
scas
scas
add
push
add
xor
call
cmpl
fmull
push
xchg
add
addb
lahf
jg
mov
jae
or
lahf
enter
in
test
pop
out
sbb
aad
fiadds
loop
filds
enter
enter
jle
sbb
fists
xor
aas
add
pop
xlat
loopne
rcrl
into
mov
ss
sbb
testw
lret
jb
test
cli
mov
sbb
push
fldl
sti
cld
rcr
hlt
inc
mov
in
pop
mov
and
xor
mov
dec
in
andl
lods
lock
inc
and
or
xchg
and
xchg
push
mov
cmp
or
and
adc
and
mov
setne
xor
out
cmc
pop
in
jle
data16
jmp
mov
jl
gs
pusha
push
mov
mov
dec
xor
cld
stos
fcoml
sbb
xchg
jl
scas
xlat
dec
imul
bnd
push
and
inc
gs
call
loop
mov
mov
out
ss
mov
push
fdivl
fucomip
pop
mov
lret
xchg
sbb
inc
popf
lods
sub
cli
enter
and
and
cmpsb
outsl
add
push
push
sarb
js
jp
arpl
sbb
mov
and
mov
int3
enter
pop
mov
and
cmp
es
cmp
push
lock
repz
mov
inc
xchg
enter
adc
test
fbld
out
into
xor
adcl
inc
sub
inc
xlat
mov
push
mov
dec
xchg
push
ja
add
loop
ss
adc
shlb
aam
cmp
pop
daa
mov
pop
cwtl
loop
jno
fldl
inc
jmp
lds
cmpsb
and
test
fmulp
mov
stc
sub
jg
inc
inc
sbb
fstl
dec
sub
add
lock
scas
stos
std
inc
xor
adc
sub
dec
andl
mov
std
insl
test
adc
sub
mov
ficompl
push
test
mov
ja
dec
push
movsl
cmpsl
pop
xchg
out
test
mov
sbb
xchg
shrl
sti
mov
and
inc
dec
bound
cmp
test
lds
decb
call
pop
dec
jge
jl
cwtl
xchg
idivl
aam
push
inc
das
sub
or
cwtl
in
test
inc
xor
shl
hlt
adc
or
inc
into
xchg
dec
rcr
push
sbb
fldenv
lcall
dec
pop
push
shl
mov
out
and
mov
xchg
call
cltd
out
jecxz
mov
xor
inc
std
xchg
push
cmp
sub
fisubrl
mov
jo
int
iret
mov
mov
xchg
mov
mov
mov
jne
cmp
pop
mov
shll
dec
or
or
test
scas
jae
or
push
dec
cmp
lret
sub
subb
cmc
mov
xchg
lock
pop
cmpsb
cmp
xchg
fadd
or
popa
das
lea
push
rol
aam
push
data16
and
sub
inc
fstps
jnp
outsb
jle
and
mov
imul
add
pop
jns
lods
xor
enter
or
leave
bound
iret
push
push
xor
int3
loop
iret
add
stc
pop
jl
mov
and
add
les
jle
xchg
sar
mov
ret
bound
jp
fbld
andl
add
dec
test
loope
call
in
dec
mov
push
lods
cld
xchg
adc
jl
stc
jno
mov
mov
xchg
xchg
lods
add
ret
cwtl
push
inc
and
adc
int
test
mov
cmp
push
loope
loop
lea
pop
clc
jg
sub
xchg
xlat
clc
add
lds
inc
push
mov
loopne
leave
clc
stos
jmp
ficoms
push
in
mov
jns
loopne
jns
shlb
inc
jmp
pushw
jbe
jg
push
inc
ficoms
dec
mov
fs
icebp
das
xor
sub
mov
cs
adc
call
shll
mov
cmp
cltd
cmp
test
popf
push
cli
cli
mov
push
sub
cli
jnp
rclb
pop
aad
aaa
mov
and
in
enter
add
cmpsb
jne
rep
mov
mov
pop
jecxz
pop
repz
and
lcall
in
cmp
out
stos
xor
pop
mov
xor
xlat
or
and
inc
jp
iret
push
mov
adc
test
xor
cmp
iret
mov
test
lahf
nop
test
fcmovnbe
mov
cmp
fildll
push
arpl
fnstcw
jp
outsb
call
aam
mov
mov
shlb
dec
sbb
xchg
or
inc
mov
xchg
jno
add
lret
inc
fbld
cltd
push
loop
lock
xor
xor
jmp
das
aas
pop
in
lcall
pop
jp
pop
outsl
pop
or
test
pop
dec
dec
push
icebp
loope
out
adc
js
fucom
push
xor
and
mov
add
push
jo
or
fcoms
add
mov
repz
hlt
sbb
xor
inc
js
and
push
jo
jmp
scas
jnp
mov
popa
xchg
mov
xchg
mov
and
or
std
shrl
scas
pushf
pop
cmp
mov
or
jae
sub
in
pop
ja
jle
or
mov
jbe
cs
cwtl
jle
popf
ja
cmp
mov
jle
jle
sub
stos
call
jl
subb
notb
js
pop
lahf
enter
push
push
stc
jo
jns
mov
mov
push
xor
mov
test
xchg
add
push
into
in
mov
scas
jmp
push
sbb
push
or
daa
jnp
inc
cmp
in
lods
cltd
andb
mov
fistl
mov
loope
leave
pop
mov
cmp
xchg
xchg
cwtl
push
test
mov
in
pop
sub
stos
fstpl
lahf
sbb
pop
movzbl
dec
lret
movsl
imul
xor
aam
jg
movsb
leave
xchg
adc
cmp
cmc
out
push
and
dec
or
outsb
mov
movsb
pop
mov
fwait
negl
stc
lds
jp
mov
or
mov
clc
stc
jbe
aad
jge
mov
rorb
adc
cmp
dec
lds
push
fcomps
adc
mov
mov
jne
cmp
roll
push
lods
adc
outsl
or
mov
jecxz
or
mov
and
out
adc
faddl
int
imul
popf
cmp
xor
loop
add
jmp
adc
xor
pop
lahf
fcmovne
fcoms
jle
mov
insl
or
sbb
xchg
pop
mov
call
dec
xchg
test
jo
shl
adc
rolb
sub
xchg
and
or
loopne
push
pop
scas
or
lahf
lea
aad
mov
jl
andb
shrl
inc
jb
and
sbb
or
lret
mov
int
sub
insb
mov
mov
xlat
pop
fsubs
xchg
mov
add
test
fwait
cld
push
pop
ret
jb
sub
into
jmp
cltd
dec
outsb
adcl
iret
in
or
add
cli
add
jb
bound
aad
mov
fisttpl
dec
adc
jns
aam
mov
test
or
cmp
test
or
mov
icebp
sbb
add
push
mov
jno
fldcw
in
add
inc
outsl
pop
inc
mov
xor
sti
leave
sti
or
push
lods
and
nop
shrb
sbb
in
fsubrl
outsb
cli
push
cld
in
mov
fwait
enter
aaa
jg
jo
mov
sbb
repz
nop
dec
ds
add
mulb
popa
je
ljmp
pop
xchg
xor
fadd
add
mov
in
je
andb
or
inc
icebp
hlt
add
movsl
sbb
or
mov
sarl
imul
lahf
pop
jnp
push
sub
pop
repnz
xchg
sub
lock
sub
jge
sar
popa
cwtl
test
fists
dec
push
sub
jmp
inc
icebp
out
mov
push
jae
xor
fs
cli
in
cmpsb
lds
jge
push
sub
or
add
jne
into
xor
insl
mov
inc
jge
and
pop
push
sti
movsb
ljmp
rcrl
movsl
lds
jno
addr16
inc
sbb
pop
aas
je
ret
xor
repnz
fdivr
data16
mov
xchg
lret
push
jae
sub
fisttpl
sahf
cmova
pop
jno
sbb
std
push
push
test
fadd
pop
lea
xor
loop
push
pop
out
icebp
pop
mov
adc
out
mov
mov
xorl
or
idivl
xor
add
ss
outsb
fadds
aad
pop
push
sti
cmp
push
pop
pop
scas
dec
repnz
fwait
inc
dec
jo
xchg
sbb
push
in
les
mov
ss
adc
adc
and
cwtl
leave
pusha
push
pushf
add
inc
movlps
sbb
sbbb
cmc
ret
loopne
pop
pushf
jnp
inc
lods
fwait
les
rcrb
or
fwait
or
sti
cmp
sub
in
adc
pop
cmp
insl
aas
fistl
sub
jg
loopne
and
push
lret
lret
in
shll
mov
data16
lea
jg
adc
test
cmp
mov
inc
add
cmp
xchg
mov
jecxz
push
test
lds
sub
dec
sbb
adc
jbe
movl
mov
cmp
mov
xchg
pop
mov
xchg
in
cwtl
jne
shr
and
dec
in
rcl
xchg
and
xlat
in
pop
sub
aaa
pop
xor
jle
adc
das
sub
push
ja
xchg
add
pop
ja
sbb
imulb
lahf
add
mov
dec
and
scas
scas
jo
xchg
inc
movsl
fadds
fcomps
or
lods
fdivrl
mov
mov
mov
cmp
xlat
icebp
jle
add
push
xor
xchg
mov
arpl
add
int
test
cmpb
rcl
push
out
push
add
mov
bound
inc
push
add
subb
mov
fldenv
mov
push
cwtl
sub
adc
xchg
mov
aad
pop
jge
mov
shr
mov
add
inc
sbb
mov
dec
xchg
ret
dec
cltd
sbb
xchg
addr16
shll
lods
out
jae
rcrb
lock
xchg
arpl
sahf
jp
sub
xor
add
adc
pop
cmp
xchg
adc
adc
mov
insb
sub
push
jne
sar
inc
jae
in
jp
sti
js
pushf
ljmp
pop
notl
or
jbe
xlat
jo
loop
push
push
xchg
add
iret
xchg
popa
popf
cmp
data16
mov
aad
in
pusha
inc
pop
shrl
dec
divl
fs
fwait
ret
jo
add
inc
inc
add
pop
mov
inc
ja
add
or
mov
popa
jo
outsl
cld
lea
mov
jecxz
fisubs
cmpsb
mov
pop
adc
fcmove
les
scas
hlt
xor
and
mov
push
pop
cs
jecxz
xor
inc
out
add
push
idivb
dec
inc
clc
mov
add
pop
sub
jmp
cmp
lods
imul
sbb
dec
sub
out
or
add
daa
push
adc
push
cmc
mov
adc
mov
jecxz
dec
mov
es
sub
inc
jne
cmpsb
lret
dec
mov
jle
jbe
pminub
pop
sub
push
sub
pop
insb
xchg
cwtl
dec
xchg
push
xchg
lea
insl
jmp
sbb
fwait
inc
insb
mov
mov
mov
xchg
aaa
test
dec
xor
xor
inc
or
jl
arpl
lret
je
pop
imul
jmp
or
mov
pop
push
or
dec
call
fdiv
sbb
cli
dec
mov
lret
xor
jno
out
sbb
mov
ljmp
inc
lods
lret
adc
push
idiv
jmp
iret
jg
test
shlb
jge
fcmovnbe
add
les
jno
mov
inc
in
pop
lret
cmp
cmp
pop
std
push
addb
notl
adc
dec
and
in
test
mov
testl
mov
int
cltd
xchg
push
push
push
adc
loope
cmp
mov
cmp
enter
xor
mov
jp
dec
lahf
clc
mov
and
pop
xchg
js
dec
mov
nop
inc
fcmove
outsl
pop
sbb
inc
repz
jo
jg
jmp
rolb
push
cmp
subb
mov
inc
test
mov
fs
jp
cs
sbb
out
push
je
lahf
jne
lret
pmulhw
adc
jo
gs
inc
ja
jo
mov
mov
adc
mov
add
cmpsb
push
and
xchg
imul
shrb
jp
inc
aas
push
jecxz
mov
jne
cmp
xchg
int
sti
pop
inc
stos
aaa
mov
lds
test
fisubl
shl
outsl
in
sub
out
jno
ret
jo
and
call
cli
ja
mov
pop
cs
lock
lock
imul
sub
xor
aam
sbb
inc
mov
dec
dec
push
mov
ds
pop
jecxz
dec
in
out
iret
inc
push
out
in
pop
in
jne
fldl
lahf
add
bound
mov
xor
xchg
jle
cmp
xchg
mov
lret
pop
arpl
mov
xchg
movsb
orb
xor
ss
push
adc
scas
ret
test
push
pop
test
push
fdivr
gs
lret
pop
jle
push
mov
sub
ja
scas
xor
mov
mov
or
sub
out
fwait
cmpsl
jb
das
push
insb
push
fadds
mov
lret
fs
test
xor
cwtl
dec
xor
adc
inc
aam
xor
into
fxch
stc
and
pop
xchg
add
outsl
pop
mov
mov
into
or
jbe
fdivrl
push
cmp
or
in
in
xchg
pop
sbb
into
outsb
dec
and
add
fnstcw
sub
mov
test
andl
mov
mov
mov
add
mov
cmpsl
std
push
andl
ret
adc
daa
cld
lds
sbb
scas
ja
sahf
pop
mov
mov
cmpsb
mov
pop
pop
or
test
ret
mov
mov
xchg
xchg
fcmovne
mov
xor
es
sbb
mov
aam
push
xchg
lock
ds
adc
dec
mov
jmp
xor
hlt
insb
mov
or
das
bnd
lret
dec
cli
xchg
adc
dec
xchg
sub
out
xchg
jmp
mov
or
sbbl
mov
jg
mov
push
pop
cmp
dec
lods
test
negb
pushl
jns
iret
cmp
push
dec
inc
push
ds
enter
pop
in
test
cmpsl
into
in
clc
in
rcrl
inc
shrl
inc
jns
cmc
lea
jmp
jo
mov
shrb
scas
mov
mov
or
in
sub
mov
aaa
add
int3
xchg
pop
out
mov
jecxz
sub
mov
pop
mov
dec
sub
cmpb
and
fwait
push
jecxz
aaa
adc
lahf
push
bound
xor
pushf
jnp
mov
lods
mov
push
jo
adc
test
mov
add
sti
xchg
xchg
dec
cmp
or
aas
xor
lods
imul
add
jns
icebp
sbbb
out
mov
sub
sub
xchg
enter
push
dec
rcr
pop
inc
pop
pusha
lods
cmp
repz
pop
add
dec
sbb
mov
mov
jno
lea
pop
sbb
mov
lcall
push
mov
jo
sbb
clc
jle
cwtl
stos
frstor
dec
mov
jp,pt
mov
push
lea
mov
xchg
out
test
and
mov
imul
sbbb
das
cli
fsubs
test
jnp
inc
inc
jns
repnz
addb
lcall
inc
xchg
adc
int3
stc
repnz
push
stc
mov
lahf
cmp
cmp
and
jns
sbb
inc
imul
push
repnz
in
mov
mov
mov
mov
or
xchg
sahf
inc
xchg
jmp
or
push
lahf
call
repz
push
dec
arpl
xchg
push
in
or
lock
fwait
add
adc
stos
jle
movsl
in
mov
mov
mov
dec
cs
cmpb
add
inc
rolb
arpl
lret
xor
ja
sub
add
jb
adc
lret
sub
adc
rorb
mov
hlt
xor
int3
scas
adc
mov
jb
imul
fidivrl
mov
pusha
inc
xor
push
ret
hlt
push
cmc
aam
lds
sub
rorb
int
xlat
xor
das
add
test
into
daa
xchg
fstps
fbld
push
adc
addb
xchg
pop
aad
xor
imul
mov
mov
xchg
push
sub
xchg
xchg
fcoml
loop
mov
or
mov
fdivs
pop
dec
les
in
jl
movsl
dec
insl
pop
pushf
xchg
out
pop
in
pop
je
rcrw
cmc
dec
pushl
and
js
decl
adc
int3
dec
or
xchg
clc
and
js
pop
inc
push
mov
negl
cmp
cmp
ljmp
cmpsb
xchg
out
arpl
pop
jne
fcmovb
stos
jecxz
mov
shlb
aam
mov
fs
fs
mov
push
sub
out
add
jns
scas
adc
lods
or
push
xchg
jno
pop
lcall
jl
aad
test
xchg
inc
out
jmp
adc
cli
push
aad
and
xchg
pop
pop
xchg
fxch
jle
cli
stos
mov
in
fcom
and
movsl
add
sub
stos
ret
pop
jae
push
enter
or
ret
lods
js
fcom
cmc
sub
aas
push
pop
jg
ficompl
rsm
faddl
inc
xchg
addr16
rcrb
insb
sbbl
out
shl
aas
xlat
mov
mov
movups
add
aad
aas
fcomip
inc
hlt
outsb
daa
cwtl
dec
mov
cmc
push
mov
ljmp
andl
les
pop
std
cli
loop
push
fs
cmp
fsts
mov
jb
ret
add
and
in
mov
repz
ljmp
jge
imul
mov
leave
mov
cwtl
popf
es
push
xchg
iret
adc
test
sub
imul
cmp
ret
cmp
hlt
iret
xor
cmpsl
shlb
das
out
mov
xor
and
push
pop
mov
pusha
jmp
push
sbb
push
test
push
mov
in
adc
pop
add
jns
daa
dec
pop
aam
movsl
jo
mov
lods
xor
xlat
xchg
mov
imul
sbb
imul
dec
xchg
ficomps
pop
or
rclb
mov
lret
jmp
or
pop
fucomi
loopne
inc
call
xor
enterw
addr16
and
dec
inc
and
jae
andb
lods
lcall
push
and
sahf
test
sub
imul
lcall
sub
nop
rorb
push
pop
sub
test
xchg
push
shrb
adc
lods
jp
push
test
stos
in
into
sbb
xchg
lahf
jg
xchg
mov
xchg
mov
push
adc
add
cld
push
sahf
mov
or
sbb
addb
dec
or
jge
lea
das
shll
test
dec
fs
sub
mov
xchg
dec
xchg
pushf
rcl
pushf
xchg
sahf
push
pushf
push
shlb
mov
dec
and
jbe
mov
and
mov
mov
dec
popa
mov
or
bound
xor
fsqrt
aas
xor
sbb
cmp
inc
push
xchg
popa
mov
mov
aaa
or
push
push
push
icebp
xchg
rcr
loop
sahf
inc
xor
jb
add
inc
sbb
scas
xchg
ja
adc
mov
inc
arpl
shl
loope
mov
test
loope
call
and
jno
mov
pop
add
bound
stos
pop
mov
jmp
iretw
mov
inc
mov
mov
aas
add
xchg
mov
arpl
pop
xor
out
fnsave
inc
sbb
data16
bound
stos
shl
daa
mov
xchg
repnz
push
aad
inc
fwait
jg
inc
push
sar
stos
pop
addr16
mov
sbb
sbb
cmpsl
loopne
push
daa
daa
jmp
push
lret
int
jl
jg
pop
test
pop
loope
push
sbb
scas
or
cltd
cmp
lods
in
cmp
mov
aam
comiss
cmp
mov
jge
nop
cwtl
push
in
lock
in
repz
dec
cmp
xchg
xor
adc
imul
lret
cld
stc
and
rcrl
outsb
dec
ficompl
rcr
cmp
or
xchg
dec
xchg
sub
test
ficomps
test
cmp
pop
push
loope
xor
fisttpll
imul
pop
std
and
les
cld
stc
aas
loop
cmpxchg
push
cmp
loopne
xchg
push
jle
mov
int3
jne
cmpsl
dec
loopne
outsb
rep
dec
xchg
das
sbb
rcll
adc
push
cmp
mov
rcl
pop
or
es
fildll
test
insl
inc
jge
in
add
int3
clc
ja
addb
clc
xor
push
jle
or
pop
cmp
pusha
xor
rcll
adc
aam
fmuls
bound
je
mov
js
icebp
mov
mov
mov
cmp
test
dec
ret
repz
in
sbb
mov
xchg
les
cli
insb
mov
mov
movb
fsubrs
loop
mov
cmp
icebp
fldl
stos
sahf
jl
cmpsb
cmp
mov
sarb
ljmp
in
mov
out
js
push
xor
rolb
jb
lock
add
or
jmp
xchg
fwait
insl
adc
xchg
sub
shl
xchg
rcl
pop
xor
mov
cli
icebp
mov
cmp
cmp
inc
std
xchg
mov
fcoml
jmp
inc
xchg
sub
idiv
add
dec
dec
and
jmp
inc
jne
sub
add
mov
sarb
cmp
mov
gs
sub
mov
popf
xlat
testl
pop
push
sbb
dec
and
xchg
add
outsb
outsl
push
xchg
add
push
rcpps
mov
push
cmp
cmovno
fwait
dec
push
jge
out
mov
rorb
mov
inc
inc
adc
aam
arpl
aaa
addr16
movsl
sbbl
das
out
fiadds
popf
push
dec
rcll
fdivl
testl
xor
mov
ret
cmpsb
fldpi
xchg
mov
out
fdivs
push
pushf
sub
lcall
sar
daa
ret
and
xchg
jno
daa
pop
ret
xchg
pushf
sbb
inc
aad
in
fwait
popa
movsl
ficompl
shlb
mov
or
ret
mov
cmc
arpl
les
sub
les
stos
cmpsb
shl
jecxz
scas
insl
jmp
dec
adc
add
gs
xor
cmc
adc
and
adc
cmp
out
sbb
out
sub
adc
insl
ja
lds
mov
pop
cmp
and
inc
aas
lea
push
or
insb
add
sbb
enter
or
cmc
divl
add
clc
cmpsl
in
mov
popf
arpl
push
aam
and
and
push
int
lods
lret
sub
addr16
les
sbbb
repz
ret
ret
aaa
sbb
scas
mov
or
loopne
mov
add
adc
adc
push
jmp
hlt
mov
in
add
mov
pushf
imul
xor
fmull
mov
rorl
loope
lahf
pushl
jbe
pusha
loop
add
lock
pop
mov
lret
insb
jns
pusha
mov
aad
aad
adc
inc
pop
cmp
int3
fmuls
aad
mov
lock
pop
pop
xor
pop
mov
xchg
subb
pop
call
mov
pop
out
xchg
xor
push
enter
call
arpl
xor
pop
in
jl
push
ljmp
sbb
dec
es
fcmovb
rcrb
cs
ljmp
xchg
pop
cmpl
push
add
rorl
mov
stos
pop
test
xor
shll
cmp
popa
xor
mov
adc
call
ret
mov
repnz
xor
addl
push
adc
and
mov
imul
or
xchg
and
push
or
pushf
jmpw
pop
cmc
mov
add
movsl
xor
test
lret
fdivs
mov
mov
mov
insl
out
mov
subl
sbb
cmova
push
push
out
or
lahf
pop
sub
insl
lcall
lods
repz
ficomps
cmp
mov
popf
lods
mov
pop
mov
cmp
scas
mov
sub
mov
xchg
movd
inc
rolb
push
lahf
out
shll
dec
inc
push
jmp
cmpsl
adc
xchg
std
xchg
test
xor
push
cmp
mov
add
mov
test
lock
fwait
or
mov
dec
insb
outsl
add
aad
sub
and
push
lcall
cmc
mov
inc
scas
push
pop
or
mov
pop
mov
sti
aas
and
stos
stc
leave
xchg
dec
cmp
fwait
dec
rolb
sbb
stos
ret
pop
fwait
push
mov
sub
scas
mov
imul
push
mov
mov
stos
repz
inc
loope
fdivrs
icebp
push
call
leave
mov
push
lret
inc
inc
fcompl
dec
pop
xchg
loope
aas
addb
arpl
movsl
push
out
sbb
leave
push
in
sbb
mov
mov
icebp
xor
jns
mov
mov
loopne
fsubp
ljmp
inc
enter
sub
out
or
push
scas
lods
insb
push
les
je
xor
cmp
into
xor
sbb
pop
in
stos
mov
aas
rol
cltd
sbb
mov
ja
xor
jae
ret
es
mov
pushf
xor
lock
dec
fwait
add
in
mov
int3
sub
sub
jg
test
gs
shrl
in
mov
lds
cwtl
mov
lock
xorl
leave
mov
shl
sub
mov
es
fidivs
pop
add
mov
movsb
daa
or
fsubs
push
rcrl
rorl
or
int
test
stos
push
stos
lahf
pushf
mov
in
clc
test
into
inc
aas
jnp
and
scas
dec
push
push
jnp
adc
sbb
popa
mov
lret
adc
or
add
jl
inc
add
pop
pop
mov
call
push
xchg
mov
leave
adc
scas
mov
in
xchg
jmp
outsl
mov
inc
movsl
test
sub
mov
xor
lods
pop
push
ret
js
aam
inc
cltd
ret
in
add
mov
cmp
sub
insl
sbbl
pop
dec
dec
mov
add
pop
xchg
or
jp
aad
fsubrp
xor
scas
ss
int3
imul
dec
in
insl
mov
or
ffreep
add
cs
hlt
push
addl
sbb
cwtl
mov
inc
xchg
divb
nop
jge
or
mov
ss
inc
iret
add
cmp
and
mov
pop
cli
push
cmp
test
in
push
sbb
pop
pop
stos
fmull
scas
test
enter
mov
adc
dec
shrb
lea
jo
push
inc
in
das
into
insb
and
sbb
loopne
xlat
out
mov
push
sub
inc
sub
pop
subl
lods
mov
cmp
in
das
push
xchg
sarl
ljmpw
jnp
mov
cmp
xchg
dec
fsubp
pop
jbe
and
fs
dec
sbb
in
ret
mov
mov
or
cwtl
mov
arpl
mov
xor
out
sbb
mov
cmpsl
jl
sub
jae
jge
xlat
loop
lcall
repnz
fwait
add
jge
bound
jb
pop
outsb
in
loope
xor
cmp
push
inc
mov
xchg
popf
inc
jo
jle
scas
mov
cmc
pop
jno
cs
inc
xchg
cwtl
out
out
lods
std
sbb
push
xor
xchg
insl
cmp
andl
pop
and
or
or
sub
mov
mov
mov
cli
insb
test
pop
outsb
lahf
pop
sarb
shll
sub
xchg
loop
adc
iret
test
push
adc
rcrb
repz
gs
adc
dec
xor
rorb
fst
sbb
jae
pop
mov
mov
in
test
nop
stos
lcall
lcall
ret
xor
jmp
dec
push
sbb
into
mov
outsl
sbb
daa
out
jl
and
and
or
in
or
inc
cld
inc
dec
js
push
add
jmp
jge
loopne
adc
mov
and
call
sub
add
je
into
adc
mov
out
xlat
mov
xor
ds
xchg
fstps
aam
stos
push
test
popf
dec
movl
or
dec
cli
out
dec
dec
sub
mov
and
fbld
addr16
shll
mov
incl
sbbb
add
mov
cmp
jne
jnp
adc
cs
mov
and
fsts
adc
sub
mov
xchg
pop
mov
repz
mov
rorb
out
dec
push
outsl
fsub
sbb
add
dec
cmpb
das
mov
cmp
loop
popl
cwtl
sub
add
das
sub
xorb
push
pop
sub
inc
xor
lcall
lds
jle
insb
pop
mov
add
movsl
popa
push
stos
xchg
rol
mov
pop
mov
dec
bound
pop
ds
je
adc
xchg
mov
call
lret
xor
push
pavgw
and
cmp
adc
xchg
shll
ds
and
pop
fdivrl
stos
inc
push
xor
and
sub
pop
sub
xor
mov
mov
lods
pop
lods
dec
je
pop
push
ja
dec
mov
xor
cmpsb
xor
jge
int
and
faddl
xlat
sub
jne
push
fwait
xchg
mov
mov
cli
pop
aam
enter
adc
lahf
jns
cltd
test
sti
pop
mov
cltd
insb
popf
mov
pop
rol
cs
stos
das
or
adc
test
pop
out
fsts
mov
lcall
jecxz
and
dec
bound
pop
mov
sbb
lea
inc
arpl
std
loopne
lock
or
clc
ja
aad
insb
popf
jmp
mov
jo
fisttpll
ds
pop
pop
fsts
mov
cs
jne
fucomi
inc
add
jg,pt
add
adc
out
into
out
push
lcall
stos
pop
mov
imul
mov
push
lock
and
jmp
and
dec
mov
iret
xchg
pop
dec
xchg
and
fidivrs
push
push
jge
mov
dec
and
xchg
mov
insb
insb
incl
repz
bound
adc
and
mov
add
orl
xor
xorb
insl
stos
push
fnclex
scas
aam
jnp
mov
imul
jg
inc
push
xchg
sti
ja
daa
jp
xor
sbb
fidivl
les
dec
dec
or
in
pop
pop
cli
out
mov
sub
inc
inc
aas
mov
sbb
adc
sti
and
xlat
je
negb
cli
leave
add
and
pushf
repz
or
jp
pop
jl
add
and
loop
out
cmp
ret
inc
mov
mov
and
cmc
xchg
adc
rorb
dec
mov
mov
nop
mov
cs
push
jbe
popf
inc
fcomps
outsb
cmp
cmpsl
ja
and
dec
inc
xchg
mov
add
inc
cmp
push
in
pop
xchg
mov
mov
sub
mov
sahf
adc
daa
lret
sub
popa
push
arpl
je
out
jns,pn
mov
dec
sbb
lds
orb
sbb
ljmp
adc
push
add
imul
ror
pop
dec
sti
bound
pop
jnp
fsubrl
nop
lea
add
repz
in
test
cmp
inc
push
lret
addr16
mov
pop
inc
and
mov
inc
xor
and
aaa
iret
dec
adc
cmpsb
outsl
cmpsb
cmp
push
cli
push
in
add
popa
rcll
rol
mov
push
dec
add
fs
push
mov
test
rorb
cmpb
or
iret
fsub
call
push
cmp
shlb
add
pop
mov
push
pop
inc
shlb
sar
cmc
add
cs
testb
test
adc
add
nop
lret
sbb
mov
mov
dec
jno
mov
push
test
push
ss
repnz
and
sub
in
pop
fidivrl
es
out
cmpl
subb
push
pop
enter
inc
mov
sbb
adc
jb
dec
jp
mov
mov
in
and
cmpsl
add
xor
push
push
mov
and
insb
into
imul
pop
fcompl
sbb
push
fstps
repz
lock
jbe
cmp
xchg
int3
mov
fsubrl
xchg
mov
out
in
and
popf
test
jbe
filds
std
cld
adc
out
xchg
out
sub
xor
add
pop
in
sbb
adc
ss
rcrl
aas
push
jmp
mov
roll
cli
cwtl
int3
sub
jg
jnp
sbb
js
ja
sub
pop
xor
nop
aaa
fisubs
cmp
mov
inc
in
xchg
dec
dec
jno
cmp
jno
push
decb
test
fwait
iret
lods
out
add
pop
in
sbb
cmp
fnstsw
fildl
rcr
adc
mov
xor
sbb
test
shlb
cltd
xchg
cmc
fistpll
and
addb
retw
shll
decb
jmp
jb
jnp
andb
mov
imul
and
insb
mov
cltd
daa
or
clc
daa
push
add
jb
scas
out
xchg
sub
pop
mov
ljmp
rcll
mov
psubsb
stos
ljmp
jl
sbb
sbb
cmpsl
scas
mov
test
lock
jns
in
dec
pop
pop
pusha
cwtl
mov
lcall
or
sbb
dec
ja
adc
sub
add
scas
mov
je
rcrl
jbe
rclb
and
xor
loope
inc
xor
shr
imul
arpl
out
jb
iret
jne
or
xchg
jecxz
push
loope
inc
icebp
push
popf
daa
push
fidivl
sbb
aaa
jmp
inc
pop
dec
out
and
jge
lahf
int3
cmp
bound
gs
fldcw
mov
sbb
mov
inc
or
pop
out
pop
inc
sub
mov
mov
ds
mov
mov
pusha
mov
add
mov
das
lret
repnz
or
lea
sub
mov
test
mov
loop
add
push
cmpl
adc
cld
jb
mov
or
jg
and
add
cs
mov
jl
call
in
scas
adc
aas
inc
pop
mov
or
xchg
fists
inc
popf
neg
mov
dec
inc
stc
mov
jb
sbb
mov
and
push
and
cmp
fs
ljmp
push
lret
push
jno
or
sahf
aaa
loopne
sub
movsl
sahf
pop
call
mov
push
mov
out
mov
xchg
fadds
pop
stc
movsl
sub
in
cmp
ljmp
xorl
push
push
and
sbb
data16
fldt
mov
out
mov
cmp
xlat
jne
lret
and
loope
cmpsl
scas
mov
sub
ja
insb
pop
sub
xor
adc
je
nop
xchg
pop
fsubrs
cmp
cmp
shl
mov
mov
stc
repnz
out
mov
test
cli
xor
cmc
pop
add
mov
out
mov
outsl
and
icebp
ror
mov
sub
add
outsl
dec
pop
stos
cmp
leave
push
xchg
in
stos
sahf
int
jle
inc
movsl
add
shlb
shlb
fwait
pop
lret
nop
sbb
jge
popa
mov
mov
adc
inc
out
imul
frstor
enter
pop
fcomps
into
out
jle
or
cmc
sub
mov
int
lods
shlb
jmp
lea
xor
pop
lcall
notl
inc
mov
push
sbb
mov
xchg
sbb
mov
or
add
mull
mov
mov
sbb
movaps
mov
and
insl
aas
pusha
xor
mov
adc
inc
ficoml
adc
add
mov
sub
or
xor
daa
inc
dec
fwait
out
mov
push
adc
mov
sbb
mov
pop
adc
cmp
fiaddl
lret
hlt
test
dec
pop
cwtl
outsb
mov
sub
inc
repnz
mov
sub
lahf
jmp
aas
lahf
int3
jne
int
mov
push
outsb
mov
pop
sarl
es
adc
out
add
fs
shll
pusha
adc
sub
je
paddusb
inc
mov
sub
into
aad
or
sbb
cmp
mov
jecxz
push
notb
and
shll
jb
push
mov
mov
stos
jb
jp
xchg
pop
fs
mov
data16
jg
and
dec
inc
pop
adc
data16
je
jbe
cmp
or
inc
inc
hlt
ds
int
and
psubd
shll
lahf
outsb
inc
mov
sbb
pop
cmc
mov
pop
int
sub
dec
jne
add
outsb
xor
and
jbe
lret
mov
popf
popf
inc
mov
xchg
jp
jecxz
sbb
ffreep
add
jbe
or
mov
cmpsl
aas
xor
jne
push
pop
pop
mov
je
mov
add
das
ficompl
add
lods
mov
jnp
xchg
sbb
faddl
dec
push
inc
mov
adc
lea
leave
hlt
in
pushf
icebp
add
sbb
out
pushf
inc
mov
mov
cmp
adc
jp
jecxz
ret
stos
lock
popf
lcall
test
test
mov
ret
add
mov
imul
call
xchg
stos
sbbb
out
push
les
ffree
scas
xchg
pop
cmp
jle
in
mov
cltd
or
sbb
xchg
cmp
mov
out
xlat
push
or
jmp
sub
xor
mov
ljmp
movsb
and
xor
push
and
loopne
ss
push
mov
xorb
dec
cmp
inc
pop
nop
xchg
mov
add
mov
dec
fisubs
loope
test
push
rcll
movsl
jmp
and
xchg
sbb
ret
or
inc
cld
popa
ss
mov
dec
sub
or
in
ret
or
jl
xchg
sti
xor
les
arpl
repnz
dec
std
fsub
aad
shlb
mov
jp
stos
out
sub
and
mov
or
jnp
jae
cmp
addl
inc
mov
insl
xor
out
sub
test
fsubl
adcb
cmp
sub
sub
cmpsl
pop
jl
adc
mov
pushf
xchg
inc
xchg
mov
stos
sti
dec
pushf
fiadds
jg
sub
hlt
insl
ljmp
pop
mov
dec
repz
daa
xchg
dec
dec
scas
cmp
or
pop
pop
mov
aaa
mov
push
xchg
dec
cmpsl
imul
xchg
mov
xchg
add
inc
cli
and
mov
ret
ss
add
sbb
aam
xchg
mov
mov
sbb
push
sbb
dec
aaa
int3
pop
cwtl
arpl
in
iret
addr16
mov
xchg
jge
push
cmp
ret
scas
testl
stos
jb
push
pop
scas
add
push
mov
xor
loop
or
fmul
pop
xor
or
loop
sub
aam
cltd
cmpsl
push
push
sti
xchg
int3
es
mov
pop
and
lret
cmp
cmp
mov
or
or
in
lcall
and
cmp
scas
call
ljmp
inc
out
pop
xchg
push
jno
pop
imul
push
cld
popf
data16
mov
push
mov
or
pop
xor
mov
repnz
jno
arpl
xor
repz
loopne
popa
jge
into
mov
call
and
and
sub
icebp
jno
xchg
dec
hlt
pop
outsb
das
mov
repz
add
movsb
in
or
mov
adc
loope
add
mov
ds
cld
bound
mov
test
cli
pop
negb
stos
push
cli
arpl
incb
fcmovnb
stc
std
pusha
mov
fdivr
mov
or
out
mov
add
dec
test
dec
and
add
jb
jmp
fwait
cwtl
pop
push
add
lret
and
jmp
outsb
mov
jnp
je
js
or
sbb
ja
repnz
scas
mov
pop
jmp
inc
out
cmpsb
insl
jae
push
jg
xchg
mov
sarb
jecxz
adcb
scas
sbb
mov
ret
lcall
cwtl
mov
xchg
in
mov
aas
lods
inc
cmpsb
add
mov
gs
cmpsl
push
push
cmp
ja
mov
inc
xchg
into
dec
lret
enter
movsb
mov
sbb
loop
adc
test
pop
add
jnp
js
adc
push
xlat
push
ret
ret
mov
inc
test
iret
or
ret
sbb
mov
mov
iret
jns
sbb
ret
mov
or
mov
push
cmpl
pushf
xchg
push
jno
sub
add
scas
xor
push
mov
fstps
js,pn
imul
cltd
sub
push
rorb
iret
mov
repz
pusha
imul
pop
and
aad
lds
scas
adc
jb
sbb
shrl
pop
int3
jo
and
mov
jl
jp
lock
pop
mov
loope
push
mov
das
and
pop
sbb
pusha
jmp
out
mov
imul
adc
push
mov
aad
inc
cmp
leave
jmp
sti
sarb
cmc
dec
gs
loope
test
imul
ret
jle
test
xchg
iret
out
popf
rcl
sub
inc
and
aad
jl
xchg
and
dec
cli
or
mov
rcr
daa
inc
andb
aad
mov
sahf
dec
sar
cltd
xchg
and
mov
cmpsb
addr16
or
push
inc
cmc
aas
push
sti
sar
sub
pop
sub
scas
int
add
push
or
in
jle
popa
popa
xor
loopne
jg
dec
push
out
imul
jecxz
mov
mov
add
leave
loopne
cmpsl
dec
jno
mov
cld
xorl
pop
rolb
add
enter
mov
cmovge
jno
mov
cmp
or
push
loop
add
cs
mov
sbb
xchg
mov
or
test
int3
sarb
pop
jo
xchg
xchg
mov
xchg
lcall
ja
scas
add
push
pop
outsb
and
pop
shrb
repnz
in
xor
xchg
aas
je
xor
nop
mov
repz
pushw
ficompl
out
sub
aam
xor
jg
push
fistl
imul
add
xchg
push
fstps
cltd
xchg
cli
orl
add
popl
cmp
pop
out
add
adc
fcomi
mov
add
rorl
push
xor
mov
dec
xchg
pusha
lock
fdivs
lods
inc
iret
sbb
lods
jp
lahf
mov
test
push
divb
push
int3
movsl
out
test
test
mov
push
stc
movsl
pop
xchg
adc
mov
xchg
les
cmp
mov
shlb
dec
xor
dec
inc
jno
out
dec
lock
jmp
addl
cmpsb
inc
pusha
das
inc
cmp
sub
add
movsb
jne
arpl
cmpsl
sub
jl
imul
jae
mov
test
out
fxch
sub
xor
int
sti
inc
or
pop
icebp
cmp
or
jmp
fdivs
jb
insb
mov
das
push
pop
and
icebp
xchg
outsb
mov
xchg
insl
rcrl
mov
and
stos
or
aaa
repz
icebp
js
insl
mov
push
mov
cmpsb
add
aam
mov
inc
int
mov
enter
incb
jb
inc
cld
push
lahf
cmpsb
or
push
sub
sub
inc
add
xor
dec
inc
insl
je
cmp
mov
dec
loop
fsubl
lret
jb
pop
inc
test
push
pop
fucom
sti
xlat
in
lcall
fdivl
notl
cmp
inc
adc
call
sub
enter
xor
push
popa
dec
int3
out
xor
inc
jnp
sbb
jb
jp
push
xchg
mov
xchg
stos
pop
jecxz
add
jb
ljmp
jne
jmp
jnp
arpl
stos
lods
mov
cld
sub
das
add
or
arpl
xchg
sbb
fcomps
shr
mov
xchg
inc
lret
inc
sbb
add
cmp
mov
pop
inc
arpl
jp
and
pop
mov
push
add
lret
mov
xchg
pop
mov
stc
inc
test
in
sub
xchg
out
xchg
jne
test
daa
lret
jno
jecxz
inc
inc
lds
test
xorl
jecxz
or
rcrl
mov
jns,pn
adc
fnstsw
jb
pop
sbb
sar
inc
insb
stos
sbb
sahf
clc
fistps
push
je
loop
loop
lds
insl
lods
xchg
mov
jns
sbb
add
inc
cmp
inc
into
stos
popa
mov
inc
ja
pop
mov
pop
sub
mov
es
cmpsl
idivl
xchg
pop
aas
stos
mov
xchg
dec
es
push
mov
push
xchg
pop
cmpsl
aad
mov
mov
pop
mov
out
divl
fwait
lods
ss
jmp
mov
xchg
mov
inc
jbe
sub
mov
and
inc
and
fdivp
test
sub
cltd
mov
jmp
cmp
jg
mov
leave
push
sub
subb
adc
int
mov
aas
stc
mov
leave
adc
adcl
xlat
roll
in
aam
aas
popa
test
and
mov
ret
bound
repz
jg
jge
cld
lock
loope
enter
push
test
je
mov
sbb
cmp
stos
cwtl
cmp
fninit
pop
bound
and
rorb
push
vshufps
lds
cmp
rorl
test
inc
jae
adc
daa
test
xchg
insb
scas
jne
jl
movsl
inc
adc
and
sub
lahf
cmp
mov
stc
aam
xor
sub
jp
es
fisubs
dec
lock
jge
repz
fnstenv
push
jecxz
sub
test
lcall
and
nop
addb
push
adc
outsl
lods
push
mov
sarl
push
jecxz
dec
mov
sbb
out
mov
or
dec
and
xor
das
std
inc
loopne
stc
lea
test
inc
outsb
subb
dec
push
xchg
jb
lods
xor
int3
push
sbb
mov
pop
stos
adc
subl
leave
movsb
jbe
dec
adc
add
and
mov
jmp
mov
xchg
cs
jbe
ljmp
jb
sub
mov
or
insb
enter
pop
cmpsb
push
push
and
and
xor
mov
dec
and
das
negl
test
roll
or
fcoms
push
es
mov
arpl
sbb
xchg
inc
test
add
movsb
jp
shrl
adc
sbb
xlat
pop
cmp
fiadds
xor
xchg
pop
xor
imul
leave
push
add
pushf
mov
xchg
pop
dec
mov
add
push
sub
jecxz
jle
xor
and
xchg
mov
xchg
sub
mov
mov
adc
sub
push
int3
insb
push
outsb
mov
out
fwait
add
pop
xchg
jb
mov
mov
pop
insl
std
daa
ds
into
mov
cmc
cld
mov
mov
sbb
xchg
int
negl
mov
icebp
cmp
fwait
daa
xlat
xor
aam
test
jae
fdivrl
mov
in
ljmp
gs
pop
push
mov
test
adc
xchg
adc
sbb
inc
cmp
lahf
pop
std
shl
lock
push
loope
inc
gs
arpl
pop
push
lock
or
movsb
push
fisubs
cmp
mov
pop
ret
pushf
ret
add
sarb
inc
sbb
into
mov
or
mov
jle
xchg
lods
das
andb
loop
es
cmp
sbb
repz
adc
aam
sbb
ret
or
push
mov
shrl
lcall
push
mov
iret
iret
xchg
aaa
adc
shll
movsl
push
movsb
int
and
cmp
aad
mov
aam
rorl
repnz
movsl
pop
cmp
or
fwait
cltd
lret
mov
xchg
adc
push
insl
stos
ret
int3
cmp
test
add
icebp
jnp
mov
ss
mov
cmp
jge
icebp
mov
mov
daa
xchg
and
add
cmp
inc
les
into
pop
ljmp
adc
jp
repnz
sub
movsb
sahf
lret
insb
das
adc
aam
sbb
or
idivb
cli
pop
jmp
pushf
add
pop
and
test
subb
inc
jp
dec
out
gs
xor
test
jmp
push
lret
out
sub
lock
adc
push
sbb
notb
enter
stos
adc
orb
pop
popf
xchg
ds
inc
popf
push
inc
fadds
sub
or
and
mov
lds
adc
xchg
filds
inc
outsl
into
outsb
cmpsl
flds
out
sub
xor
popa
pop
inc
pushl
aam
add
cwtl
xchg
lahf
xchg
ss
add
inc
mov
lds
aam
mov
ret
add
imul
lret
jmp
popf
add
and
cmpl
mov
scas
mov
scas
xchg
popa
aaa
adc
inc
mov
cli
jb
repz
jnp
mov
sub
dec
orb
int
cld
std
inc
mov
ret
pushl
push
into
mov
hlt
enter
cltd
cli
stos
mov
cmc
ja
mov
andb
dec
mov
ja
out
adc
or
fcom
ret
mov
mov
int3
cmp
dec
xor
dec
dec
add
or
scas
jae
outsl
lret
xor
sub
scas
jne
out
dec
test
imul
into
les
gs
push
sub
mov
movsl
push
enter
cmp
hlt
and
cli
dec
pushf
movsl
ret
sbb
jne
fsubp
jecxz
xor
cmp
int
jnp
sbb
imul
adc
jle
int3
inc
mov
rcl
cli
push
fcompl
jno
add
adc
mov
repz
jp
xorb
pop
fwait
push
test
std
jle
mov
jl
inc
imul
and
cs
mov
repnz
add
test
sarb
daa
jnp
or
sahf
rol
mov
pop
inc
lock
in
pop
sahf
mov
lods
data16
or
insl
jbe
jg
in
xchg
dec
push
rcrl
fstps
clc
inc
pop
push
es
mov
cmp
mov
xlat
jecxz
xchg
or
int3
mov
iret
iret
fisubl
or
or
adc
push
cmpsb
push
push
sarl
xchg
mov
arpl
xchg
jecxz
ret
sub
add
test
stos
and
sbb
push
sub
js
pop
fstl
inc
fnstcw
scas
andl
push
je
or
mov
in
jb
lcall
add
add
sahf
out
cmp
push
pmullw
xorb
jg
or
cli
rcr
ret
mov
add
jl
movsl
data16
push
mov
int
lret
cwtl
nop
outsb
or
mov
call
dec
inc
sub
lods
loope
into
cmp
sti
sahf
jl
adc
arpl
push
xchg
xchg
mov
repnz
int3
repz
in
pop
daa
loopne
loope
or
sahf
sahf
icebp
inc
cmp
in
jns
imul
aas
pop
movsb
in
out
push
bound
jmp
test
push
or
lea
ljmp
call
ljmp
push
inc
repz
jge
imul
ror
mov
sarb
insl
outsl
xchg
add
test
aas
lret
lret
mov
push
mov
pop
icebp
sbb
test
insl
scas
pusha
inc
movsl
fstpl
jg
loope
and
movsb
pop
cmp
cs
je
aam
dec
js
in
lret
jne
je
push
lea
aam
imull
pop
push
mov
seta
adc
or
and
stos
jge
ljmp
sti
mov
jb
arpl
add
cltd
push
or
sbb
add
mov
imul
or
sbb
jbe
shll
sti
lods
and
bound
shll
adc
mov
int
cld
stc
mov
xor
jl
int
lret
sarl
sub
push
movzwl
std
cmp
out
and
lds
test
inc
mov
adc
imul
ja
cmp
je
xlat
lret
les
mov
mov
ds
insl
push
lcall
loope
dec
push
xchg
xchg
adc
mov
into
inc
subb
scas
call
clc
mov
js
cmp
popa
orb
mov
inc
push
and
dec
mov
rolb
xor
inc
fbld
push
dec
push
mov
fcoml
out
add
ret
lds
insl
call
inc
sub
xchg
cli
movsb
adc
divl
adc
lcall
xchg
gs
inc
lods
or
movsb
bound
lret
cmp
scas
and
mov
mov
adc
xorb
stos
sub
ret
xchg
incl
inc
or
jge
cltd
add
lret
pushf
or
mov
stos
mov
cmp
int
ret
mov
sub
pop
out
out
lret
pop
jmp
xchg
push
mov
out
mov
cmpps
dec
mov
iret
pop
pop
sbb
loopne
ss
xor
and
add
fs
rcrl
sbb
lret
or
sub
push
test
xchg
dec
sub
dec
add
popf
cmp
mov
mov
jecxz
ret
jmp
dec
sub
sub
add
rorb
dec
mov
int
xchg
jmp
fisubrl
in
sbb
cmp
loope
imul
clc
into
icebp
cmp
aam
lods
sub
push
out
sub
mov
push
cmp
sub
xchg
jnp
out
popf
inc
inc
lret
repnz
adcb
sbb
fdivp
or
pop
or
or
jo
lahf
sbb
test
or
dec
mov
xchg
mov
popf
sbb
sahf
daa
xor
sbbl
jp
sub
sahf
adc
icebp
rcr
icebp
rclb
dec
iret
or
add
popl
sarb
popa
into
mov
sbb
cld
jae
sbb
mov
sarb
cmp
mov
lret
dec
cmp
inc
int
pushf
mov
shlb
lcall
push
cli
movl
nop
fimuls
adcl
out
cwtl
in
movsb
push
out
pop
sbb
mov
push
xor
xor
cltd
test
dec
push
iret
jmp
shrl
xchg
pop
loope
pop
lcall
dec
fsubs
stos
xchg
iret
aam
out
pop
push
add
pop
dec
cmc
and
push
mov
cmp
and
clc
xchg
rcll
cmp
daa
fwait
cmp
shll
ret
mov
ljmp
insl
pop
ss
and
or
add
push
fisttps
jbe
ss
add
xor
adc
ret
mov
and
inc
jno
mov
cmp
mov
inc
inc
sub
adc
popa
xor
stos
or
dec
sub
mov
ss
mov
mov
jno
sub
loopne
inc
xor
lds
xor
repnz
daa
xchg
aas
inc
pop
jns
sarl
scas
aas
leave
sub
pop
xchg
aaa
loopne
bnd
mov
push
jb
xorb
rorl
pusha
lret
add
fwait
mov
jmp
mov
into
sbb
push
enter
mov
aas
shll
dec
dec
and
mov
dec
add
test
add
lds
xor
out
cwtl
dec
mov
mov
xor
jbe
inc
fistpll
xchg
aad
arpl
inc
and
adc
scas
loop
icebp
fstpl
movsb
loop
xchg
scas
lock
sbb
mov
pushf
loopne
cmpsl
mov
repz
pop
jb
dec
cli
shlb
mov
lahf
lret
test
xchg
ljmp
sub
in
les
mov
push
movzbl
sub
xchg
sub
jo
mov
aad
iret
xchg
outsb
loop
fwait
arpl
in
stos
push
sub
repz
in
mov
clc
cld
je
insb
mov
bound
jno
dec
repz
aaa
pop
pop
mov
jno
pop
xor
lds
popa
push
mov
dec
pusha
stos
popa
and
into
or
sbb
sti
fs
mov
lahf
cltd
and
mov
addr16
pusha
pop
jo
add
push
or
fisttps
pop
fistl
cmp
icebp
dec
or
cwtl
mov
imul
outsb
adc
or
push
dec
mov
push
xchg
loope
cltd
call
cmp
dec
add
movsl
cmp
popa
jmp
rorb
push
jb
aad
repnz
or
insb
and
xchg
ret
push
jmp
dec
mov
fucom
sbb
or
cmpb
es
add
insb
das
in
clc
lahf
pop
cwtl
cmpsl
hlt
or
ljmp
or
mov
jne
out
mov
mov
cs
call
add
mov
pop
sub
hlt
push
rcrl
movsb
or
xor
mov
lret
shr
jmp
mov
ja
xor
sar
leave
xchg
or
mov
popa
jb
cmpb
test
cmp
sub
cmpsl
fxch
cmp
and
adc
inc
test
sub
cmc
in
jge
xor
gs
dec
addb
shrl
ss
xor
fbld
stc
mull
jae
lock
xsavec
cli
xor
add
inc
xchg
jp
stos
dec
jmp
hlt
popf
pop
arpl
sbb
xorl
mov
movd
sarl
push
jmp
inc
in
push
pop
mov
xor
out
and
push
inc
imulb
stos
mov
cmp
sbb
pop
sub
iret
dec
inc
movsl
and
jne
insb
lds
dec
dec
adc
lods
sbb
fcomps
int
les
jg
fsubs
pop
cli
dec
mov
int
sbb
cmp
mov
jno
scas
in
or
mov
shll
shll
fmul
dec
into
inc
sub
sub
sti
cmp
addr16
jle
ja
cmp
mov
cli
fbstp
sub
imul
sbb
mov
jmp
adc
js
leave
cmp
add
cmp
fistpl
rcrl
xchg
jnp
inc
loopne
hlt
fisubs
movb
shlb
add
inc
lock
push
push
in
jae
jo
pop
inc
aad
clc
cmp
movsb
mov
jno
mov
jo
cmpsl
mov
pusha
inc
loop
adc
bound
and
fdivl
add
and
enter
int3
ret
repz
xchg
push
mov
fsubs
pop
ud2
cs
push
or
dec
rol
ja
pop
xor
mov
xchg
cwtl
cmp
in
mov
pushf
xor
mov
add
lea
adc
xor
insb
cmp
fwait
int
dec
sahf
fwait
shr
cmp
jns
inc
inc
mov
ds
aad
lcall
test
movsb
xchg
dec
sahf
inc
jo
jns
sub
hlt
push
mov
cli
lock
loope
push
dec
idiv
jp
scas
cmpb
sbb
mov
push
dec
scas
daa
mov
inc
test
and
scas
loopne
adc
push
push
cmp
add
mov
rorb
fnstenv
adc
sbb
or
icebp
outsl
repnz
test
pop
lcall
decl
sbb
mov
lock
pop
out
out
jp
or
xchg
xchg
in
adc
pop
lcall
push
or
lods
sub
icebp
push
inc
or
daa
inc
push
roll
mov
stos
pop
add
mov
inc
hlt
pushf
push
push
jno
sti
mov
aad
push
shl
xor
mov
cwtl
lcall
push
stos
pop
push
insb
sub
mov
mov
les
and
or
pop
pushf
mov
imul
andl
cli
pop
sbb
adc
leave
mov
or
push
sbb
arpl
cmp
push
rcrb
rorb
push
cli
sbb
rcrl
inc
test
sahf
fldl
leave
xlat
clc
out
hlt
aad
xor
in
xchg
leave
dec
or
mov
push
push
jmp
push
sub
es
gs
push
shlb
mov
lret
nop
insl
movsb
pop
dec
divl
movsb
sti
sar
push
mov
loope
xor
jbe
sub
pusha
xchg
jne
shll
scas
stc
mov
iret
xchg
repz
ret
ret
insb
pop
xchg
pop
ret
popa
cmp
out
mov
lock
push
cmp
fxch
ficompl
gs
mov
fisubs
clc
repnz
add
popf
mov
push
std
mov
add
inc
sub
lcall
jbe
jp
int3
lea
xchg
int3
xchg
pop
clc
shll
stc
pop
sbb
std
subb
jae
cmp
popf
or
rcll
dec
push
sbb
popl
imul
mov
lcall
jbe
and
inc
sbb
adc
sub
jmp
jg
int3
lods
in
cmp
lock
test
ljmp
xchg
pop
in
fimuls
cmp
jg
ja
or
inc
data16
je
pushf
int
mov
push
test
scas
xor
test
mov
into
es
shll
pop
mov
adcb
sub
or
in
mov
into
adc
sub
inc
sahf
mov
mov
pop
lods
pop
jae
mov
and
outsl
jle
dec
fdivrs
push
lea
imul
and
loopne
sbb
mov
mov
sbb
cmpsl
mov
es
cmpsb
lds
std
cwtl
or
mov
call
cltd
sti
jmp
outsl
adc
add
mov
mov
inc
xlat
jae
movsb
inc
rorb
shll
dec
in
inc
and
cmp
test
enter
xchg
cmp
in
fdivrp
jae
sub
cmp
mov
jns
lret
pushf
loope
pusha
pop
rcrl
or
push
pop
lea
insl
lds
gs
mov
cmp
adc
push
iret
cmp
mov
inc
bound
stc
jl
gs
shll
rcrl
cltd
scas
mov
repnz
xor
in
inc
inc
stos
or
and
in
mov
cltd
pop
out
insl
imul
sbb
xor
add
cwtl
repnz
jae
loope
insl
cwtl
int3
xor
lret
mov
add
mov
sahf
mov
push
in
loopne
insb
daa
ret
fcoms
notl
and
lods
pop
adc
out
fwait
add
xor
sub
es
icebp
lock
cmp
gs
testb
lahf
add
dec
pop
loopne
movsl
in
mov
push
push
push
fucomip
mov
mov
pusha
arpl
jmp
sahf
fiaddl
pop
pop
pusha
xor
gs
data16
xor
call
add
fdivs
aad
pop
jb
enter
xor
xchg
inc
xchg
andl
popf
and
adc
sbb
ror
push
xchg
loop
shlb
aad
and
lret
or
ja
in
in
mov
sbb
push
fldt
dec
rorb
jne
das
mull
bound
data16
test
cmpl
scas
mov
loopne
jge
negb
iret
cmc
pop
js
push
icebp
rcrl
push
xor
addr16
push
dec
mov
std
sti
es
sub
dec
pop
dec
dec
and
mov
lahf
adc
push
shrb
mov
mov
lcall
das
into
pushf
aam
aaa
rcrl
hlt
jbe
pop
cmp
add
mov
mov
fs
out
ja
cwtl
cmc
loope
hlt
fs
repz
mov
test
push
cwtl
stos
imul
sarb
push
test
outsb
loope
dec
pusha
jne
or
jno
cwtl
sahf
pop
lds
aaa
cmp
jns
dec
lock
mov
sbb
pop
sbb
test
outsl
adc
bound
cmp
cmp
data16
int
xchg
mov
imul
pop
test
pop
sub
pop
cmpb
aas
mov
xor
mov
and
stos
cmpsb
add
adc
cmp
mov
xor
hlt
or
out
mov
mov
xor
mov
and
adc
add
sbbb
movsb
sbb
enter
cwtl
inc
push
jns
mov
inc
pop
fadds
addr16
mov
rep
push
mov
ret
mov
add
repnz
mov
shll
dec
mov
loop
leave
es
sub
pop
cwtl
lcall
cmp
mov
dec
pop
cmp
insl
jg
pop
sahf
movsb
jno
pop
call
jg
loopne
mov
iret
iret
mov
pushf
push
pop
iret
or
clc
fs
xchg
push
repnz
inc
into
mov
cli
and
jmp
adc
push
mov
and
pop
fs
test
push
data16
outsl
insb
movsb
dec
mov
and
and
cltd
mov
stos
sbb
mov
arpl
pusha
hlt
or
add
repz
inc
aaa
adc
imul
test
loop
inc
imulb
cmpsb
and
or
jg
sub
outsb
push
sbb
and
loop
rorb
js
mov
es
jbe
frstor
imul
xor
test
and
in
mov
mov
pusha
sbb
cmpb
sub
jo
xor
shrl
imul
cmp
push
pop
js
stos
jbe
jns
dec
imul
insb
jmp
mov
push
push
dec
loope
sti
xor
pop
pop
addr16
inc
mov
cmp
cmp
and
stos
mov
rorl
ret
or
pop
gs
mov
inc
movsl
sub
or
and
lcall
push
testb
out
fstpl
push
lods
es
rcrl
xchg
lcall
cld
orb
insl
dec
xchg
sbb
adc
addr16
cmc
sahf
sub
stos
pusha
fiadds
dec
repz
xchg
out
or
popf
cmp
test
adc
mov
popl
leave
aaa
call
cmpsb
push
mov
scas
pop
cmpsb
push
cli
insb
inc
repnz
mov
stos
daa
cmp
xor
insb
jecxz
pop
or
aaa
call
sub
insl
mov
jle
and
mov
jle
adc
idivb
dec
xchg
int3
dec
jns
imul
mov
insb
mov
in
lds
jg
pop
push
cmpsl
mov
les
xor
mov
xor
mov
jne
movsb
mov
or
jge
std
push
mov
jno
adc
jne
pop
addr16
push
popf
mov
pop
stos
pop
inc
or
mov
sbb
fisttpll
dec
dec
xchg
lea
cmp
mul
outsb
incl
imul
call
je
fidivrl
jbe
fs
movsb
jno
mov
test
icebp
std
rcl
fistps
addl
outsb
es
lods
jl
orl
movsb
outsb
sub
cltd
push
pusha
pop
sub
adc
popf
nop
sbb
in
jmp
shrb
sub
sub
pop
pusha
xchg
jno
mov
loop
sub
sbb
pop
repz
jne
shlb
xchg
popf
jo
and
xchg
repz
sbb
mov
sbbb
call
mov
push
enter
out
push
mov
xchg
add
lahf
fs
icebp
xlat
cmp
mov
daa
out
test
test
int3
adc
fstl
push
jns
add
sub
ljmp
loop
stos
insb
ja
test
xor
push
inc
cmc
cmp
xor
xor
pushf
pop
mov
push
les
test
das
inc
fwait
and
fldcw
rorl
rclb
push
xor
scas
cmp
incl
pop
add
in
sbb
lds
add
lock
roll
jnp
push
mov
jg
pushf
popa
lods
aam
lret
movsl
ss
xor
jle
lock
popa
ljmp
rcrb
push
cmpsb
lods
mov
int
add
sbb
xor
sbbl
push
push
mov
fbstp
iret
jno
jno
xchg
pop
je
test
dec
push
fldcw
xor
jecxz
fnsave
sti
outsb
cld
mov
repnz
icebp
add
sbb
das
mov
faddp
mov
mov
shl
push
push
and
fcmovnb
mov
dec
scas
xchg
xchg
pop
dec
test
mov
in
sbb
add
mov
dec
ficomps
xor
es
jno
aam
inc
mov
orl
mov
stc
jle
mov
sbb
inc
and
jp
xchg
mov
dec
push
jge
inc
pop
aas
repz
neg
out
pop
inc
push
das
pop
xchg
cmp
int
aam
stos
jne
xor
cmp
orb
shrb
adc
leave
or
cld
mov
jne
aam
push
jp
repnz
jae
jae
sbb
repnz
pop
dec
fwait
sub
ficoml
out
cmp
mov
mov
jge
pop
cmp
inc
lahf
aam
popl
lret
mov
pop
jmp
cmpsb
cmp
int
mov
pop
scas
nop
pop
movb
mov
cmc
rclb
mov
scas
fs
jge
mov
fiaddl
xor
popa
cmpsl
cld
in
sub
cmpsb
or
adc
arpl
repz
mov
or
ror
ljmp
jo
scas
sub
xchg
aas
in
add
push
mov
pop
xorl
hlt
shl
xor
daa
adc
inc
inc
loop
mov
or
ds
loopne
jl
cmp
jns
scas
jnp
pop
push
pop
dec
adc
adc
xchg
pop
xchg
pop
rol
inc
push
add
jg
or
cmc
aam
or
daa
inc
je
adc
cmp
jecxz
or
mov
inc
pop
jns
ja
loop
mov
movsl
jb
push
adc
jmp
aam
ds
add
cli
adc
lahf
cmp
and
inc
ret
outsl
cmpsl
inc
int
cmp
icebp
hlt
push
out
dec
les
adc
out
into
movsb
ret
aaa
xor
ficompl
cld
sub
dec
les
out
or
bound
jl
cmp
movsl
gs
lret
and
jmp
cwtl
dec
adc
dec
aas
movsl
lea
iret
mov
xlat
mov
sub
lcall
dec
nop
je
pop
pop
arpl
push
and
push
out
fwait
sub
enter
or
add
xchg
jnp
cmp
mov
add
dec
pop
mov
leave
xchg
and
dec
shlb
jnp
jecxz
in
push
mov
lret
mov
aas
nop
sbb
dec
cmp
cld
xor
data16
mov
pop
push
sbb
mov
ljmp
pop
mov
pop
aam
inc
add
xchg
imul
ret
xchg
mov
dec
pop
imul
add
leave
mov
xchg
or
pop
cmpsb
xor
xchg
pop
jl
pop
pop
xchg
leave
pusha
push
bt
es
daa
pop
mov
or
popf
xchg
sub
jns
adc
das
movsb
ret
pop
sbb
mov
dec
hlt
adc
xchg
test
cmp
xchg
sbb
add
lods
mov
inc
in
dec
dec
pop
push
mov
jnp
cltd
mov
xor
adc
jge
jae
pop
mov
xor
push
pop
mov
mov
imul
or
xchg
sbb
and
into
mov
into
movsl
add
out
nop
jmp
pop
rcl
out
mov
pop
jne
lds
insl
fstp
cmovnp
cltd
dec
das
xor
push
test
and
popa
ret
add
cmp
adc
rcrl
inc
aaa
sub
mov
xchg
add
push
in
mov
push
movsl
add
xlat
jmp
dec
push
mov
or
jp
mov
sub
xchg
or
dec
in
push
sahf
test
fldcw
pusha
jo
and
or
dec
aaa
sbb
mov
sbb
stos
dec
jnp
fmuls
call
ret
mov
mov
outsl
loopne
adc
loop
hlt
push
fsts
xchg
jmp
or
cwtl
test
and
or
or
aam
cmp
or
lods
scas
mov
stos
data16
jo,pt
ret
fstpt
add
loopne
in
lahf
popa
pop
shr
xor
mov
leave
xor
enter
mov
xchg
int3
push
sbb
push
mov
mov
mov
dec
enter
ret
aaa
xchg
imul
sti
loopne
pop
mov
sahf
je
dec
mov
call
fdivrl
xor
push
int
sbb
jns
pop
shll
enter
dec
jl
mov
xchg
pop
dec
popa
lcall
insl
call
cs
xor
mov
xchg
mov
inc
mov
hlt
rcr
cmp
in
xor
movsl
sub
jle
movsl
in
jmp
leave
add
jne
nop
and
iret
icebp
mov
mov
mov
add
repnz
xchg
mov
xor
pushf
ja
and
jbe
subb
addl
addb
in
imul
push
mov
mov
shrl
popa
test
xchg
rolb
pop
cmp
es
in
lcall
scas
loop
mov
xchg
sub
sub
pop
pop
mov
pop
dec
outsb
or
sub
out
cmp
orb
stos
lcall
pop
xchg
lahf
xchg
cmp
pop
outsl
mov
int3
and
pop
out
imul
push
dec
int3
push
jl
dec
mov
cli
pop
mov
and
nop
lcall
insl
data16
gs
rclb
pop
loop
push
shr
and
movsl
fsts
imul
iret
subb
ss
mov
test
pop
mov
pop
jb
adc
xorb
xchg
cmp
cmp
cmp
push
dec
pop
sbb
push
aam
cmp
pop
mov
xchg
cli
lods
mov
pop
mov
jecxz
enter
pop
cmp
dec
pop
movsl
mov
lret
jns
cs
pushf
jbe
test
insb
stc
in
repnz
adc
add
scas
out
cli
icebp
sub
mov
in
and
dec
lock
dec
push
push
imul
xchg
cmp
or
out
mov
repz
fs
pop
mov
fsubrs
mov
push
iret
arpl
ds
mov
sbb
push
pop
push
into
fsubs
scas
fsub
bound
adc
mov
mov
mov
lret
push
test
xor
lds
pop
nop
bound
ja
mov
jbe
mov
push
push
mov
cmp
mov
and
or
outsl
push
and
out
mov
stos
cs
push
xchg
and
fstpt
daa
hlt
and
jnp
cmpsb
icebp
cmp
mov
cld
clc
jge
lahf
cmp
into
lret
pop
dec
sbb
mov
loopne
movsl
dec
ficomps
sub
mov
ficoml
cmp
or
mov
lods
inc
sbb
mov
cmpb
inc
adc
mov
insb
mov
cmp
ja
gs
adc
outsl
fyl2xp1
pop
lods
aaa
push
mov
insb
fimull
repnz
inc
push
xor
nop
xlat
test
cli
adc
dec
call
loope
aas
ja
test
sub
fs
xor
sbb
lds
cmp
stos
mov
dec
xor
test
mov
rcrl
mov
xchg
in
sahf
fnstcw
fdiv
rorb
aaa
pop
inc
scas
dec
mov
mov
jo
xor
xor
mov
fisttpll
adc
orb
mov
mov
jo
into
push
jp
movsl
jbe
sbb
test
xchg
into
ds
xchg
or
inc
push
dec
mov
stos
mov
test
fwait
fwait
in
fistps
lret
sbb
cmp
movb
rcll
test
cmpsl
pop
pop
jp
pop
gs
xor
and
divl
inc
or
nop
ficoml
mov
sbb
lea
jecxz
scas
popf
jno
or
idiv
sub
fwait
leave
pop
sbb
add
lret
sbb
push
jne
int
out
adc
movsl
bound
popf
lock
jb
pop
cmp
sub
outsl
pop
pop
mov
stos
adc
int3
sub
aas
xchg
dec
in
adc
out
mov
addr16
pop
sbb
jns
fucomp
inc
ror
mov
or
sti
pop
fimuls
lret
mov
imul
jg
stos
int3
mov
pop
sbb
mov
xchg
int3
and
jne
adc
loope
inc
push
insl
out
fldl
rol
sarb
cli
out
push
movsl
inc
das
daa
faddl
arpl
or
xchg
inc
pop
jo
testl
mov
sbb
dec
lahf
mov
mov
aad
push
lock
scas
loop
mov
iret
pop
loope
jp
lea
xlat
xchg
bound
test
sub
in
movl
add
push
fistl
mov
out
pop
xor
xchg
mov
imul
ja
ficomps
cs
inc
daa
shll
fs
addb
xchg
int
fdiv
add
bound
sub
sbb
sbb
out
inc
out
pop
dec
imul
cld
cs
aam
sbb
sbb
notl
sbb
add
xchg
arpl
sbb
icebp
sbb
test
xor
loopne
cmp
icebp
imul
add
adc
fldt
inc
subl
scas
and
mov
fmul
sahf
mov
xchg
mov
jbe
ss
fs
fs
sbb
loope
add
mov
cwtl
sbb
push
add
jmp
xchg
test
je
mov
lods
jle
in
pop
add
pushf
loopne
xchg
mov
push
xchg
xor
mov
jg
sub
and
daa
or
pop
sahf
adc
std
adc
call
xchg
repnz
mov
popf
leave
adc
mov
or
sub
sbb
fcmovnbe
fwait
lcall
cld
adc
inc
fs
push
lret
inc
add
mov
adc
xor
xchg
cld
mov
lahf
cwtl
jns
mov
mov
cmp
jno,pn
sbb
and
in
test
cmp
cmp
out
pusha
clc
mov
js
mov
cmp
leave
dec
popa
push
sub
cmpsb
sbb
pop
dec
in
mov
aad
pop
jge
mov
stos
xchg
insl
adc
cmp
lcall
movsb
jmp
lret
add
or
xchg
cmp
and
andl
call
adc
pop
scas
sarl
cld
mov
ret
aad
test
addl
inc
add
cld
push
ret
mov
mov
das
bound
and
lret
lret
addl
sbb
mov
daa
mov
mov
push
add
jmp
push
mov
je
dec
sub
idivb
jb
pop
add
sub
adc
mov
sbb
and
adc
rolb
in
lahf
sbb
cltd
xchg
adc
mov
outsb
push
pop
mov
or
aaa
sarl
pop
xor
jp
dec
adcb
cmp
xchg
pop
cltd
push
leave
repz
int3
mov
test
sub
mov
mov
cmp
pusha
sbb
loopne
lret
dec
mov
scas
je
lock
mov
repz
xchg
jno
out
daa
xchg
sti
repnz
sbb
mov
mov
jmp
and
mov
int
fldcw
loopne
or
pop
inc
mov
mov
lea
insl
mov
sub
loope
mov
test
inc
sbb
hlt
xchg
cmp
or
sub
cmpsl
mov
mov
pop
push
cld
push
sub
repnz
fimuls
mov
lea
cltd
out
mov
aaa
add
xchg
popf
mov
in
or
rep
shl
adc
dec
sbbb
int
push
cltd
xchg
sub
repz
lret
dec
mov
loope
das
cmp
xlat
mov
cmp
fwait
mov
mov
sahf
lret
outsb
push
or
pop
lods
scas
jne
add
cmpsl
icebp
addb
lret
imul
cmpb
mov
dec
data16
sub
jg
mov
jnp
sbb
fst
mov
sub
ja
in
cmp
and
roll
cmp
adc
jmp
push
mov
mov
add
loopne
sbb
fcomi
imulb
mov
sbb
ja
or
in
pop
mov
in
and
mov
daa
jnp
push
ret
sbb
xor
or
je
sar
dec
enter
pushf
jnp
test
push
sbb
dec
lret
ret
cmp
neg
sbb
int
aas
push
rclb
sbb
cltd
add
out
hlt
fmul
sbb
es
stc
cld
call
or
pop
or
scas
lret
ret
adc
mov
jg
popf
mov
repz
insb
jbe
call
notl
dec
and
jmp
or
aam
sarb
addb
int3
xchg
push
inc
pop
es
pop
decl
dec
push
arpl
das
or
data16
jb
lods
and
push
in
mov
dec
movsb
jno
int3
icebp
push
sbb
mul
in
js
mov
shrl
arpl
inc
inc
es
rolb
sub
cmp
push
fsubp
incb
mov
out
or
and
push
jecxz
sbb
test
dec
cltd
iret
cld
hlt
imul
inc
mov
loopne
sar
scas
push
aad
movsl
jae
push
jbe
push
ljmp
push
out
out
jo
in
jecxz
sahf
push
jge
xchg
leave
sub
xchg
rorl
jb
shlb
dec
js
or
and
inc
xchg
jnp
jmp
cmp
sbb
das
dec
dec
inc
call
pop
dec
mov
or
sti
mov
xor
test
jno
popf
pop
data16
and
mov
into
leave
sarb
ror
mov
pop
inc
lods
jle
pop
pop
lret
sub
adc
xchg
push
sbb
mov
jae
cli
push
jg
or
push
sbb
dec
in
int
mov
scas
fs
jb
and
fildl
adc
arpl
in
je
pop
cld
test
loopne
cld
xlat
data16
mov
ja
sbb
mov
shrl
in
or
xor
adc
fnsave
dec
popf
pop
and
inc
andb
sbb
or
pushf
aam
pop
xchg
pop
sbb
dec
inc
dec
mov
inc
cmp
pop
push
adc
lds
fwait
icebp
mov
jecxz
cmp
fnstenv
addr16
jo
sub
cmpsb
cmp
imul
pop
mov
lds
add
movsb
nop
leave
test
pop
and
fstp
push
add
mov
jp
jae
stc
push
pop
subl
mov
es
or
test
push
push
or
ja
jno
addb
dec
nop
in
sbb
aam
movsb
inc
pop
jae
addr16
jno
jno
sbb
push
js
fimull
lcall
lret
push
int3
inc
mov
sbb
sbb
sub
pop
dec
enter
adc
mov
mov
sbb
xchg
pop
dec
mov
orl
mov
and
inc
push
jl
ret
adc
clc
xchg
mov
scas
dec
daa
int3
ja
xor
out
mov
fmuls
mov
dec
dec
stos
sub
and
jmp
aaa
imul
lret
gs
mov
pop
fisttpll
pop
push
sar
adc
mov
inc
shll
xchg
add
cmpsb
repnz
jp
add
fst
cmpsl
pop
lret
inc
mov
mov
push
xor
push
js
or
mov
xor
jge
jbe
jb
jno,pn
negl
inc
add
cmp
jb
cmpsl
mov
push
sub
imul
int
push
or
sub
adc
mov
fwait
stos
icebp
jb
jp
xor
jp
add
cmpsb
inc
add
jae
in
negl
mov
shr
mov
pop
dec
cwtl
xchg
adc
cli
je
jecxz
lahf
fidivrs
js
jo
aas
sbb
push
add
add
push
jno
outsb
mov
adc
jo
test
push
fisttpl
addr16
idivb
jecxz
rcll
lock
ja
mov
adc
dec
mov
stos
xor
clc
sarl
or
sbb
push
lret
xor
fsubl
gs
popa
pushf
adc
pop
xor
std
dec
sub
mov
fldenv
ret
in
mov
mov
xchg
rolb
inc
fcomi
jg
fmull
movsl
mov
roll
cmp
stos
sub
sbb
in
jo
lods
pop
lock
dec
pop
clc
ja
divb
stos
sbb
push
test
and
mov
pop
mov
aaa
and
mov
jns
cmp
sub
xor
cwtl
mov
pop
adc
push
leave
or
xchg
mov
xor
and
xorl
push
loop
jecxz
inc
adc
out
addr16
and
mov
cmp
jns
jae
pop
or
pop
cmp
sbb
sbb
test
dec
inc
add
pop
fiaddl
jp
cmp
out
jb
cmp
dec
out
add
stos
popa
lds
rcrl
push
pop
inc
pop
push
or
shl
fs
fnstenv
cmp
out
fdivr
sarb
push
int3
lds
outsl
std
outsl
inc
xor
fs
dec
insb
int3
int3
mov
jmp
xchg
mov
mov
and
push
ss
and
ds
jne
dec
imul
out
incl
packuswb
xor
sbb
aad
inc
mov
sbb
sub
push
inc
mov
ret
insl
xor
shlb
sbb
pop
jae
push
xor
scas
cmpsl
xchg
rcr
push
orb
cmp
inc
ficompl
cli
mov
sbb
into
lea
in
inc
push
dec
push
xor
xchg
push
mov
nop
xchg
or
inc
inc
and
stos
mov
jge
cld
push
inc
xchg
je
ds
push
mov
int3
popf
rcll
outsl
pop
adc
inc
shrb
push
sub
adc
bound
aad
mov
lcall
or
test
pop
mov
cmpb
xchg
xchg
jnp
imull
jnp
imul
adc
mov
stos
pop
inc
lret
xchg
iret
fidivrs
mov
out
mov
imul
into
jb
xchg
mov
ds
je
mov
or
xchg
in
cmpb
pop
xor
aas
inc
pop
insl
cmpsb
sbbl
das
addl
negb
jmp
clc
sbb
testb
dec
stos
imul
cmpsl
jecxz
cmp
xor
ds
ficoms
sub
scas
jg
jnp
loopne
push
pop
dec
sbb
daa
mov
inc
or
mov
inc
cld
pop
add
movsl
nop
jl
xchg
ficoml
or
cs
lcall
push
push
xor
sarb
jae
cmc
mov
out
movsl
sbb
push
push
dec
sub
mov
loop
movsl
jmp
push
ret
divb
lahf
mov
push
adc
push
mov
out
testl
xchg
or
sub
ds
adc
inc
dec
frstor
out
xor
jae
pop
in
cs
inc
jg
and
ljmp
xor
mov
push
pop
lock
sub
mov
fstpl
decl
mov
dec
adc
loopne
add
xor
ljmp
pop
insb
sub
push
cltd
lret
xchg
cld
pop
repz
adc
fisubrl
into
mov
cli
add
and
punpcklqdq
insl
sub
pop
jne
and
jno
and
subl
mov
mov
dec
dec
sarl
dec
dec
jecxz
cmpsb
add
mov
push
insb
and
popf
mov
insl
call
pusha
movsb
rorb
xchg
mov
push
sarl
stos
push
dec
les
xchg
sbb
cmp
icebp
mov
push
inc
adcl
loop
outsb
and
insl
dec
test
outsb
sarb
sub
or
push
and
xchg
sbb
jmp
cmp
hlt
add
fs
insl
out
cmp
cld
ret
fistps
push
adc
sub
or
cmp
aad
mov
mov
xor
adc
mov
adcb
mov
add
dec
sbb
out
and
in
mov
push
mov
adc
shll
pop
xchg
pop
push
movsb
jecxz
inc
imul
gs
in
outsl
or
les
push
dec
push
add
pop
enter
mov
scas
addr16
out
push
popf
popa
cwtl
nop
adc
mov
clc
out
push
imul
jo
scas
inc
jge
popa
jo
movsl
cmpsl
inc
adc
mov
add
adc
aas
aas
jae
flds
addl
cltd
mov
lret
jge
dec
lock
fs
cmp
test
xchg
jecxz
popf
sub
cld
dec
mov
lea
popa
sbb
in
aam
inc
arpl
nop
je
arpl
cli
dec
testl
mov
add
inc
push
sbb
inc
je
jne
ret
pop
movsl
mov
jmp
push
ret
hlt
roll
xchg
stc
pop
xchg
loope
cmpsb
mov
adc
sbb
in
sti
sub
pushf
sbb
mov
int
insb
inc
ret
pop
outsb
jg
stos
dec
sbb
push
outsb
ja
pop
mov
adc
ljmp
and
mov
mov
mov
cld
insb
push
jo
sti
fbld
or
arpl
mov
fsubp
lcall
mov
xchg
shl
into
ffreep
xchg
nop
mov
mov
xchg
xchg
pushf
notl
push
daa
test
sub
ja
inc
jb
or
int
in
xor
out
dec
inc
dec
rcrb
mov
mov
xor
sub
sbb
cmpsb
aaa
and
push
cs
in
pop
shlb
push
incl
iret
cld
leave
push
popa
jle
xchg
imul
adcl
cwtl
movsl
mov
mov
mov
push
insl
ljmp
sub
adc
cmpsl
lret
rorl
rorl
sub
push
dec
adc
cmp
jno
pushf
mov
int
adc
testb
mov
loope
adc
push
dec
jg
les
pusha
jle
sbb
or
mov
xchg
or
mov
xchg
xchg
dec
adc
fimuls
add
cmp
in
rcrb
xchg
ljmp
sahf
stos
je
dec
mov
int
loope
push
cmp
jge
repnz
popf
cmp
inc
pop
adc
sahf
cltd
mov
repz
mov
sub
pop
out
xorb
clc
mov
shlb
sbb
cmpsl
push
cmp
das
mov
mov
daa
jae
enter
int
rorb
cmpsl
cmp
lret
pop
jmp
shll
lret
add
outsb
jg
sbb
or
sarb
mov
and
in
sub
in
xor
enter
add
cmpsb
xchg
jo
mov
inc
cmp
mov
inc
and
cmc
push
jno
cmpsb
mov
pop
ja
rcr
insb
xchg
int
xor
or
lcall
lret
sub
mov
jno
push
stos
pop
or
cmc
in
jmp
fs
pop
stos
into
in
mov
aaa
jecxz
aas
jl
jnp
mov
lret
stos
nop
pop
pusha
xorl
stos
jnp
ret
add
sahf
xchg
push
and
sub
pop
xchg
mov
dec
push
mov
enter
data16
xlat
mov
add
pusha
cmc
jmp
stos
cmp
pop
and
or
lcall
nop
dec
xor
pop
mov
mov
inc
leave
inc
test
stc
xchg
outsl
or
das
cmpsb
mov
xor
sar
xor
outsl
enter
add
push
mov
out
sub
fsubl
jo
mov
push
sbb
scas
in
ja
dec
ret
xchg
lea
nop
lret
dec
and
daa
dec
or
cwtl
sti
push
inc
popa
pop
cmp
imul
mov
test
sbb
sbb
in
dec
test
jne
cmp
add
test
cmp
dec
push
inc
fsubs
faddl
cmp
les
cmp
cmp
adc
pop
push
sub
out
stos
or
pusha
ja
ret
dec
aaa
push
sub
pop
cltd
int
pop
jo
dec
jne
and
aam
push
xor
sahf
sub
sbb
scas
setnp
add
mov
test
mov
jbe
pop
push
dec
bound
cwtl
push
dec
pop
mov
mov
shl
inc
es
imul
rcl
jne
fildll
cmpsl
mov
fs
add
les
in
pop
lret
dec
movsb
sbb
push
cs
out
out
fsubrl
outsb
xor
cmp
sbb
push
shrl
inc
pop
lahf
sbb
cmp
sbb
pop
pushf
rolb
and
push
cs
mov
jne
xor
dec
repz
push
in
outsb
jmp
sub
mov
lret
in
pushf
out
sbb
outsl
and
out
aaa
mov
add
mov
cs
shl
mov
test
and
sbb
aas
out
push
pop
mov
push
das
xchg
or
xchg
sub
add
mov
or
jb
fadds
out
fwait
mov
xchg
mov
lea
cmp
mov
mov
inc
test
outsb
jo
mov
fcomp
daa
adc
and
add
loopne
sbb
xchg
sahf
inc
subl
popf
push
test
adc
arpl
test
arpl
mov
iret
out
scas
jns
and
cmp
lea
xchg
xor
push
rolb
aaa
sub
adc
pop
mov
test
fwait
jb
cmp
jae
subb
data16
mov
repz
mov
sbbl
pop
jne
mov
pop
pop
mov
jne
out
mov
mov
mov
inc
or
sub
inc
test
inc
or
xor
ret
push
pushf
push
sbb
fisubrl
shrl
cli
and
dec
inc
mov
ret
mov
int3
cmp
mov
dec
adc
cmpsl
subb
dec
stc
mov
inc
jmp
pusha
mov
or
cmpsl
cmp
xchg
xor
sbb
imul
sub
mov
dec
pop
add
lods
clc
xchg
xor
jmp
push
sbb
cld
je
sub
jno
and
sarb
shrb
rorl
push
pop
sbbb
pop
rolb
mov
push
int3
ss
aam
inc
call
sbb
aaa
sub
pop
sbb
data16
insl
pop
sub
fwait
outsl
dec
jae
shrb
hlt
add
add
pop
fs
arpl
add
ret
insb
add
sub
mov
pop
imul
ret
xchg
inc
leave
xor
cltd
clc
jecxz
data16
push
rorl
pushf
add
xor
mov
push
push
xor
test
mov
in
or
jmp
jae
pop
push
xchg
rcl
fidivrs
or
testl
cmp
jnp
stos
mov
pop
push
int
cwtl
sub
dec
cltd
aam
fsubl
push
gs
cmpsb
pop
and
push
jae
mov
cld
in
mov
push
pop
pop
dec
ret
rolb
int3
insl
pop
sub
pop
mov
add
ficomps
cli
xchg
fwait
outsl
fsubl
decb
repz
inc
jne
popa
test
or
popf
cwtl
xchg
ret
or
push
sbb
adc
cmpsl
push
and
add
push
add
lcall
out
pop
movsb
gs
push
fwait
loop
push
ret
jno
mov
jns
jb
push
cmp
jns
or
cmp
pop
push
mov
jnp
dec
sub
push
xorb
outsl
jbe
jnp
mov
outsb
xchg
mov
orb
xchg
mov
mov
inc
jle
or
xor
sub
jecxz
xor
adc
mov
into
fisubl
loopne
jnp
out
cmpsb
cwtl
sub
sub
ljmp
daa
adc
repnz
test
mov
xchg
push
jmp
test
sbb
adc
xor
xor
lret
ret
dec
call
test
fmull
mov
sub
sbb
push
neg
int
inc
mov
xchg
and
jo
or
scas
add
or
adc
das
repnz
dec
data16
call
and
sub
pop
pop
cs
dec
addr16
xchg
call
fistpl
ss
dec
jecxz
xchg
sub
cmpsl
cmc
iret
cmpsl
hlt
lods
pop
inc
aam
xchg
call
adc
or
xlat
cld
aaa
bound
mov
mov
jbe
inc
lds
pusha
imul
stos
pop
mov
sub
dec
sbb
xchg
lock
cmp
add
enter
repnz
jnp
lock
cmc
sbb
ds
fs
fistpll
test
test
sarb
inc
sub
jle
sub
inc
jecxz
pop
scas
sub
xor
add
add
xchg
in
xchg
in
clc
add
push
mov
jnp
adc
mov
cwtl
jge
repnz
push
dec
mov
dec
xchg
outsb
int3
lods
mov
out
sbb
ja
jns
out
popa
mov
sub
mov
jle
sub
xchg
inc
test
add
add
and
stos
add
popa
aas
jne
xchg
mov
xchg
lcall
sbb
and
jle
sti
incl
jecxz
xor
fstp
add
loopne
xchg
adc
aam
and
mov
pop
mov
or
cmc
imul
or
jg
fwait
idiv
mull
push
in
cmp
hlt
insb
mov
shrb
idivb
leave
cs
inc
std
inc
ret
mov
inc
hlt
cmc
push
int
jne
xchg
imul
push
in
out
ljmp
cmc
xchg
lret
das
repz
mov
lahf
jne
inc
cmp
inc
pop
sbbl
lret
push
sub
dec
icebp
sub
dec
mov
cmp
sub
sbb
shll
push
faddl
push
mov
xchg
add
aaa
add
push
adc
mov
inc
or
adc
adc
inc
xchg
cmp
aaa
shll
jb
int3
cmpsb
jle
jno
aas
mov
push
mov
movsb
sub
sbb
nop
push
cmp
push
into
xor
imul
add
js
xchg
sbb
xchg
and
sbb
repz
repnz
or
adc
jnp
shl
popa
cwtl
sub
mov
out
clc
mov
je
push
and
or
imul
ss
out
test
mov
imul
pushf
mov
rol
pusha
lar
mov
in
sbb
shlb
pop
outsl
ja
out
jbe
dec
dec
sub
mov
jae
idivl
icebp
and
nop
mov
mov
xor
jge
mov
inc
xor
or
and
fbld
push
push
mov
mov
xor
mov
pop
lcall
jbe
sub
xchg
test
stos
sbb
ret
pop
enter
mov
dec
add
cmp
push
add
shlb
popa
mov
test
add
mov
jb
jmp
jmp
mov
mov
js
xor
mov
fidivrl
jo
mov
aam
jmp
out
add
in
ffree
pop
les
adc
into
ds
jl
sub
push
inc
fidivrs
push
shl
sub
and
push
sub
pop
mov
arpl
insl
jno
out
test
xchg
pop
inc
out
call
clc
pop
mov
insb
pop
jnp
cltd
daa
add
xor
add
xchg
jnp
das
scas
or
std
sbb
xchg
shr
push
sub
ljmp
das
cmp
mov
inc
add
lcall
jp
sbb
shrb
mov
or
lret
xor
testb
fcoms
std
mov
js
cmpsb
ds
iret
ljmp
sub
push
into
fisubrl
push
call
push
std
adc
pusha
fsincos
fadd
jnp
das
or
lea
in
adc
repz
cmp
rcrl
push
cmp
dec
xchg
ret
int
cs
mov
dec
loop
add
mov
subb
push
std
bound
rorb
movsl
cwtl
rcrl
call
pop
aad
jge
mov
aam
inc
push
mov
sub
ret
aas
jg
out
mov
jp
sbb
and
mov
cmp
mov
inc
pop
jg
sahf
int3
loopne
cld
fwait
outsl
fsts
jg
mov
pop
and
add
ljmp
pop
fbld
push
decb
xchg
mov
ds
mov
mov
sbb
add
inc
sbb
xchg
mov
daa
sbbb
mov
mov
outsb
lock
dec
stc
sti
inc
jo
xchg
popf
xor
fnstcw
test
push
cmp
loope
fcomps
in
cld
rcll
sub
add
xchg
subl
test
or
cwtl
dec
and
mov
fmulp
jns
imul
jp
push
push
push
daa
ret
add
js
shll
repz
cld
and
mov
scas
mov
or
inc
and
loopne
jge
push
xor
jae
jnp
mov
lahf
add
addr16
in
or
js
icebp
mov
cmp
fwait
mov
imul
mov
sbb
lods
cmp
pop
outsb
push
sbb
xchg
dec
push
push
fs
mov
jl
arpl
jecxz
lods
popa
in
adc
jle
outsb
ret
push
bound
mov
pop
or
push
mov
mov
mov
push
add
inc
mov
cmpsl
ja
mov
push
into
test
jp
je
pop
lock
inc
add
push
stos
adc
out
in
and
lods
fs
ljmp
jae
inc
cmp
mov
lods
sahf
insl
sbb
loope
test
pop
push
mov
mov
mov
nop
pop
imul
jge
insb
push
mov
push
repz
loop
ret
jl
je
out
cmp
cmp
outsl
andps
testl
movsl
dec
jo
in
inc
sbb
jne
xchg
cltd
cmp
es
popf
push
arpl
lods
jg
pop
mov
out
mov
xor
xor
into
push
mov
cmpsl
out
imul
mov
sbbb
dec
lcall
movsl
push
mov
jne
mov
jnp
aad
fiadds
jns
xchg
enter
leave
imul
data16
into
clc
cmpsb
adc
scas
adc
int3
cmc
andb
jbe
cmpsl
adcb
adc
push
loopne
cmp
mov
sub
int
das
add
lock
fnstenv
test
push
shl
outsl
fisubl
push
inc
sub
mov
push
ja
cmp
xchg
sbbb
or
cs
ds
add
enter
adcb
int
aas
add
cmp
sbbb
shll
daa
je
faddp
testl
inc
cmp
lods
and
lds
ljmp
sbb
push
sti
push
cmp
mov
mov
adc
popa
or
lods
js
xchg
les
popl
xchg
mov
mov
push
shrl
fisubs
fadds
jmp
out
add
imul
arpl
mov
or
mov
or
ror
sbb
ret
imul
stos
or
lahf
or
adc
insb
testl
nop
loopne
adc
jecxz
dec
pop
pop
ljmp
mov
jl
ret
in
xor
cmpsb
xor
cltd
ret
lcall
adc
mov
and
rolb
push
mov
fs
xchg
aam
xor
xorl
or
push
imul
int3
out
inc
negl
imul
in
gs
testl
fidivs
sub
nop
fistl
into
jl
cmp
xrstors
pusha
stos
sbb
pop
sub
sbb
mov
js
push
call
mov
gs
or
mov
add
cmp
sbb
inc
rol
andb
leave
sub
cmp
xor
cmpb
and
pop
ds
subl
aaa
iret
sub
stos
push
ss
nop
jne,pn
sub
lcall
lea
cs
and
pop
push
adc
inc
mov
les
xor
inc
fnsave
jg
and
lahf
push
std
or
fstpt
adcb
cmc
fldl
pusha
mov
add
pop
test
lahf
lods
mov
rcrb
int
dec
ret
out
je
xchg
add
mov
push
xchg
inc
pop
lods
pop
outsl
je
or
cmp
jne
mov
aaa
xchg
sub
push
std
lods
mov
mov
push
aam
sub
inc
dec
inc
in
gs
pop
ljmp
imul
outsb
or
jo
pop
test
fsubrl
xor
call
cs
and
sub
int3
lds
adc
sbb
xchg
xchg
movsl
sarb
rclb
adc
sbb
mov
mov
shlb
inc
mov
mov
sbb
or
dec
add
fistpll
mov
into
pusha
jp
cmpsl
test
mov
adc
mov
aam
sbb
cmp
andb
dec
mov
or
int3
dec
mov
xor
jbe
adc
xor
push
pop
inc
aas
cli
std
pop
jb
daa
in
aas
xchg
or
test
add
mov
inc
inc
mov
mov
mov
pop
loopne
aaa
jb
out
push
dec
jmp
cmp
repnz
and
out
jne
mov
movsb
jnp
aas
mov
xchg
adc
mov
and
outsb
mov
push
dec
hlt
cmp
lret
mov
cs
int3
adc
scas
xchg
fcmovb
push
fiadds
push
inc
cmpsb
and
cmp
gs
fwait
mov
adc
test
aam
pusha
fbstp
dec
lret
jle
insl
pop
mov
sub
repnz
loop
iret
jbe
adcb
outsb
fdecstp
inc
push
ljmp
push
inc
mov
xor
mov
mov
push
je
or
jnp
sbb
int
cmp
outsb
mov
enter
dec
gs
push
in
dec
fld
mov
and
into
arpl
popf
and
test
bound
ja
push
adc
mov
cmpb
ror
sub
imul
mov
add
dec
adc
cmpsl
ds
sub
aas
mov
rcr
jbe
cmp
outsb
imul
lret
int
cwtl
xchg
test
fisttpll
aaa
mov
cs
test
insb
sub
imul
ja
and
inc
xchg
inc
mov
sub
movsb
mov
xchg
inc
push
and
push
sbb
fs
xchg
sbb
push
cltd
lcall
mov
add
in
iret
rolb
jecxz
sub
adc
mov
aam
push
inc
jae
inc
xchg
xchg
loope
pop
adc
pusha
pop
bswap
lret
clc
repnz
push
inc
xchg
fidivrl
js
fidivl
out
cmpsl
pop
dec
mov
and
sbb
lret
dec
jno
mov
mov
adc
or
sbb
push
out
dec
xor
int3
cli
shr
out
lahf
sub
aam
push
jp
push
push
ds
js
xchg
dec
mov
mov
jle
sbb
aam
fimuls
jae
and
cmpsb
ret
dec
cmovle
imul
adc
inc
into
pop
xor
pop
mov
ror
sbb
enter
push
sti
aad
fiaddl
lahf
jle
pop
in
les
sarl
aas
sub
arpl
lods
pop
sahf
pop
sahf
sub
fsubrs
pop
lret
shrl
sbb
lcall
rclb
adc
mov
les
push
dec
jno
leave
sbb
addr16
aas
push
roll
inc
jnp
outsb
sbbb
xchg
push
xchg
sbb
shl
or
jae
fisubs
sbb
add
hlt
adc
bound
sti
adc
push
add
adc
scas
lods
cwtl
pop
sub
xor
out
add
cmpl
jae
lea
cmc
shrl
cwtl
fdivrl
mov
ss
or
iret
pop
or
addl
pop
pop
bound
pop
fidivs
in
lret
jmp
cmp
jo
lcall
lcall
shl
push
fsubrl
out
pop
mov
mov
pop
test
xor
pop
pop
fld
sbbb
hlt
movl
out
test
adc
mov
jb
xchg
inc
popa
pusha
test
in
and
or
jno
pop
fisttpl
clc
sti
xchg
orl
mov
sub
stos
lahf
and
mov
fildl
sahf
pop
inc
popa
loopne
fdivrl
sahf
jo
push
dec
test
sbb
sub
xchg
ja
push
add
adc
inc
mov
aaa
sti
mov
push
and
push
lahf
ja
and
sbb
fwait
jp
push
mov
sub
push
orb
mov
mov
cltd
lds
dec
add
add
adc
inc
mov
pop
cld
ljmp
fdivp
push
aam
stos
sub
push
roll
cmpsl
ret
dec
shrl
mov
push
push
mov
ljmp
lods
jns
mov
xchg
cltd
rorl
fisttpll
rcrl
cld
mov
pop
sub
push
mov
mov
mov
mov
mov
cmpsb
ret
pop
cs
lods
test
int
mov
je
push
add
pop
jmp
ds
lret
int3
cmp
pop
cwtl
cli
mov
jnp
lods
mov
popa
in
pusha
int3
cmp
add
jnp
mov
mov
je
inc
leave
xlat
stos
out
cli
add
and
inc
ljmp
pop
inc
ja
ret
adc
sar
mov
mov
pusha
imul
loop
out
push
push
sub
jg
sub
test
mov
mov
or
aad
mov
push
push
sbb
popa
and
jns
loope
sbb
add
jmp
pop
mov
test
ficomps
mov
and
ss
sbb
sbb
add
fwait
cwtl
xor
cmc
cmp
stos
xchg
jl
cmpsl
inc
sahf
push
into
lcall
pop
daa
ljmp
push
mov
xorb
or
rcll
les
stc
mov
stos
dec
clc
xchg
andl
test
mov
shlb
cld
jo
stc
or
sbb
jnp
enter
xor
punpckldq
pop
addb
shll
jge
mov
test
lret
fldcw
push
xchg
mov
jmp
inc
mov
insb
data16
popf
mov
adc
and
mov
inc
mov
bound
mov
add
insb
push
and
sub
pop
or
das
mov
mov
dec
aam
rcrb
movl
rorb
jne
leave
pop
pop
int
arpl
cld
lret
inc
lods
fisubs
mov
aad
mov
pop
repz
rorl
ss
movsb
mov
divl
insb
sarb
shlb
int
mov
dec
adc
pop
ljmp
call
mov
cmpsb
sbb
mov
sub
jbe
mov
adc
sbb
jecxz
mov
mov
push
out
divl
push
mov
call
shl
jg
jmp
pop
cmpxchg
inc
test
push
pop
and
pop
pop
xchg
inc
js
insl
aad
and
adc
sar
add
in
adc
adc
push
lods
dec
cmp
bound
pop
cmp
fidivs
or
sub
out
adc
jb
push
inc
mov
jecxz
push
inc
pop
push
outsb
mov
inc
xchg
and
dec
mov
pop
push
ds
cmc
and
ljmp
popf
pop
les
inc
jne
or
adc
sub
cmc
mov
gs
sbb
sbb
jnp
or
stos
rclb
movb
fs
push
xchg
jp
imul
dec
negb
hlt
cmp
adc
aam
fsubs
or
mov
out
loop
test
stc
adc
je
cmp
stos
into
scas
mov
bound
lods
mov
add
lret
cmp
enter
sbb
xchg
pop
movsb
int
or
enter
or
push
les
mov
roll
inc
ret
mov
lock
shll
mov
cwtl
test
imul
mov
cmp
and
cmp
jg
mov
mov
fnsave
sub
and
clc
add
enter
rcll
aad
aaa
and
pop
jno
imul
lcall
in
inc
leave
mov
fstpl
mov
adc
movsl
xchg
adc
ds
cmp
sub
mov
add
lahf
xchg
dec
or
add
mov
js
push
into
xor
test
cmpsb
add
mov
je
pop
movsl
ja
fwait
clc
jae
hlt
imul
xor
inc
repnz
sbb
dec
jbe
adc
clc
sub
dec
loop
sti
shrl
pop
icebp
adc
jecxz
mov
in
sbb
pop
push
decl
scas
sub
rorl
adc
addr16
xchg
jge
mov
jnp
lods
pushf
scas
in
pusha
jmp
icebp
xchg
inc
in
mov
mov
fs
pushf
xchg
das
icebp
aad
loopne
sbb
das
pushf
js
cmpsl
loop
iret
lods
in
adc
jg
shlb
push
push
ret
es
mov
and
gs
cmp
gs
in
xor
inc
fxch
jo
fcmovnu
aaa
pushl
mov
push
sub
ja,pn
in
addb
shll
sbb
mov
pop
stos
mov
mov
jo
or
ds
mov
insb
pop
xchg
sub
stc
jmp
lret
pop
add
mov
xor
ret
ds
add
popf
fldcw
movaps
add
jmp
xor
arpl
cld
notl
push
outsl
out
int3
mov
ljmp
daa
or
mov
cmpsb
stos
int
mov
lret
push
or
out
daa
jns
pop
pusha
lea
ds
lret
inc
mov
mov
scas
out
cmp
cmp
out
and
adcl
pop
jg
or
sahf
or
popa
adc
lds
cmp
and
push
loop
mov
and
or
or
mov
pop
in
xor
mov
loope
mov
cmp
jle
stc
mov
add
call
clc
iret
jmp
int3
push
ret
out
lds
pop
inc
mov
push
pop
adc
clc
adc
addr16
inc
and
cmp
mov
ss
sub
xchg
insb
push
jb
xchg
push
shll
lods
pop
in
xchg
les
stos
mov
fldt
xchg
push
mov
loopne
push
mov
ret
mov
mov
inc
jp
fs
scas
add
push
add
fwait
pop
fdivrl
jno
imul
jmp
mov
packsswb
mov
cmc
fimuls
or
add
push
lret
insb
icebp
out
or
mov
sub
mov
push
sub
and
mov
mov
xlat
lret
push
sub
ss
pop
mov
stos
jbe,pn
stc
xchg
push
pushf
pop
sbb
data16
sbb
add
and
lods
adcl
repz
cwtl
sub
rcrl
inc
xchg
push
and
and
push
out
or
fcoml
sub
loopne
mov
jp
ret
mov
pushf
test
and
jge
inc
xchg
pop
sub
insl
mov
push
add
and
and
in
adc
loopne
int3
iret
cmpsl
jmp
cwtl
enter
repz
push
sub
mov
jg
incb
out
pop
mov
lcall
fldl
mov
xchg
jb
scas
inc
add
mov
pmullw
jle
xchg
jb
inc
and
inc
add
dec
jae
icebp
sub
mov
clc
out
xlat
js
bound
sahf
inc
or
jo
mov
int
pop
inc
enter
jns
stos
test
gs
testb
in
xchg
adc
pop
outsb
cmp
mov
repnz
xor
pusha
aas
jecxz
and
mov
mov
adc
ret
mov
std
xor
mov
sub
mov
mov
int3
test
imul
add
push
jmp
popa
aas
jae
dec
mov
dec
or
cmpsl
add
pop
test
clc
or
xor
es
iret
in
jl
incb
xchg
js
and
inc
push
pop
jle
scas
pop
push
xchg
xchg
out
or
sti
or
dec
addr16
xchg
in
jle
roll
xchg
add
mov
jecxz
mov
push
jle
lock
dec
jnp
jbe
push
lea
push
jp
pop
add
and
leave
push
mov
out
mov
rol
jae
xor
shll
cltd
insb
dec
and
jns
les
pop
cld
sbb
sub
cltd
in
lea
pushf
mov
push
mov
mov
pop
stos
xchg
fsubl
setne
loopne
jp
sub
into
xchg
push
stos
in
mov
leave
arpl
push
fcomps
sbb
lret
out
ds
mov
mov
loopne
adc
xchg
mov
xor
adc
dec
add
dec
mov
js
pop
push
sbb
fstpt
adc
adc
push
pop
scas
daa
add
ljmp
iret
leave
xchg
int
push
mov
xor
lret
gs
sbb
push
cwtl
daa
ja
push
insl
jne
imul
pop
and
sbb
push
aam
rcl
push
adc
fwait
lcall
and
sub
xchg
adc
test
das
stos
js
dec
fdivs
in
lods
xor
aad
std
cwtl
arpl
inc
sbb
inc
push
repz
outsb
push
jnp
cmpl
sahf
mov
cli
mov
aas
and
jmp
sub
sbb
jns
or
int
add
add
push
add
xchg
cmp
pop
push
pushf
sar
rorb
call
and
jnp
mov
aas
inc
fsub
mov
aad
fucomp
mov
pop
loope
lods
jo
pop
mull
into
add
aam
mov
pop
fsts
pop
in
push
addl
push
aaa
movsb
jo
cltd
inc
dec
jle
lcall
ljmp
pusha
out
rcrb
mov
fldln2
int3
fsubp
int3
test
sbb
mov
in
mov
daa
cmp
pop
pop
xchg
std
cmp
scas
xchg
jno
fidivrs
int
lock
add
push
bound
xchg
and
cmp
sbb
sarl
or
jp
xchg
and
outsb
mov
imul
xchg
insl
sbb
int
repnz
push
cmp
movsb
fdivrl
mov
outsl
sub
mov
and
or
or
sub
inc
push
icebp
je
popa
je
daa
bound
jnp
frstor
jp
loop
xor
push
and
enter
aad
push
shll
fsubrl
int
pop
loop
jo
out
ss
cmpsl
pop
or
sub
and
mov
mov
push
push
and
or
cmp
outsb
push
loope
or
sbb
out
mov
cmc
stos
lcall
push
push
jge
xchg
cmp
mov
cs
scas
sar
mov
mov
push
mov
cld
xor
cmpsl
dec
les
mov
inc
adc
jp
mov
xor
jb
or
lock
push
adc
push
imul
or
leave
imul
cmp
adc
fdivrl
fmulp
jo
add
cmpl
mov
pop
imul
ret
pop
inc
iret
icebp
movsb
popf
mov
or
data16
jecxz
leave
adc
pop
mov
xchg
add
lock
and
rclb
cwtl
mov
cmp
or
mov
out
xor
sbb
inc
insl
or
iret
dec
sahf
leave
aaa
and
push
pop
in
pop
loop
inc
into
sahf
jle
jp
adc
dec
jge
inc
cmp
or
push
int
test
lock
push
sbb
fstpl
cltd
jge
out
mov
or
testl
sub
dec
and
addr16
hlt
out
jb
add
lock
xchg
addb
sub
mov
fsts
dec
stos
inc
imul
mulb
mov
arpl
stos
pop
inc
cli
cmp
and
aas
xchg
fsts
mov
shll
inc
inc
sahf
dec
pop
inc
out
dec
adcb
mov
imul
stc
mov
fisubrs
xor
mov
ret
aad
xor
mov
ljmp
bound
xchg
and
dec
mov
xchg
cmpsl
cmpb
jbe
scas
push
mov
inc
jb
test
fdivr
inc
das
sbb
dec
dec
mov
cltd
or
ja
shlb
pop
adc
aaa
subl
xchg
mov
testb
fs
add
pop
sbb
std
and
mov
lock
rcrl
aad
push
sbb
in
es
push
in
xchg
mov
sbb
push
scas
lret
fs
pop
jb
pop
mov
lods
pushf
test
and
xor
inc
hlt
addr16
imul
xchg
daa
imul
mov
stos
push
mov
mov
test
data16
stos
inc
push
ljmp
in
movsb
clc
mov
repz
int3
cld
add
and
sbb
sbb
mov
sub
and
out
or
and
add
inc
cmp
mov
mov
rclb
scas
add
fisubl
push
pop
outsb
mov
stos
test
outsl
push
cmpsl
loope
orl
adc
push
or
rclb
stos
xor
cmovns
call
push
into
ret
jnp
mov
or
loop
aas
pop
push
ja
push
sub
or
lods
jge
pusha
xchg
push
lods
dec
mov
hlt
imul
sbb
pop
nop
or
mov
dec
xchg
xchg
movl
fwait
out
mov
inc
int
cmc
jle
data16
or
jmp
pushf
shrb
in
sbb
int3
mov
adc
sbbb
dec
adc
xor
mull
pop
jo
push
clc
std
xchg
outsl
clc
popf
sbb
gs
jmp
pop
mov
dec
jbe
mov
fs
nop
adcl
and
mov
sahf
push
or
sub
dec
pandn
jae
push
das
dec
xchg
pop
inc
test
mov
xchg
mov
sbb
sbb
ja
cmp
dec
lods
dec
sbb
inc
mov
sahf
jmp
popf
arpl
aas
pop
mov
adc
and
pop
mov
adc
jg
mov
leave
out
mov
cmp
add
dec
shlb
shlb
xchg
or
dec
and
adc
sbb
ret
mov
mov
lret
mov
and
loop
or
or
ret
imul
jl
sbb
jae
adc
jne
push
out
mov
pop
sub
push
fcompl
mov
loope
jno
mov
cmp
testl
daa
test
add
mov
clc
mov
das
pop
lock
popa
cli
pushf
push
rol
jl
shll
nop
mov
outsb
sti
mov
in
fistpll
mov
nop
pop
faddp
sub
lcall
inc
xchg
fmuls
add
negb
in
push
mov
test
out
shlb
add
loope
jmp
cld
std
sbb
jae
dec
adc
xchg
dec
or
hlt
imul
xchg
add
adc
repnz
xchg
loopne
inc
repnz
push
daa
repnz
mov
push
sub
int
movsb
incl
dec
push
ja
pop
xor
shrb
stos
and
popf
mov
lret
test
pushf
cmp
jg
dec
dec
mov
xchg
shlb
inc
lahf
mov
adc
pop
data16
sub
pop
xchg
jp
xor
xor
push
sbb
fistl
xor
movsb
push
dec
lock
jge
nop
inc
test
mov
sub
jo
clc
adc
les
lcall
test
push
dec
jo
es
cmpsb
push
jmp
lret
sub
mov
pop
loopne
jecxz
out
fwait
nop
xchg
jbe
outsb
pop
orb
bound
dec
xchg
mov
mov
jno
cmp
mov
nop
mov
adc
mov
test
push
mov
pop
mov
sti
push
pop
dec
jl
jecxz
jo
pusha
leave
xchg
and
push
and
xchg
fiadds
mov
lahf
lahf
adc
xor
out
mov
popf
mov
lcall
and
mov
xchg
js
add
aam
ret
mov
into
outsb
mov
mov
and
push
xchg
add
lock
popa
push
jne
je
rorb
outsl
xchg
shlb
in
testb
inc
mov
arpl
loope
stc
pop
push
xchg
mov
mov
adc
jl
mov
inc
fidivs
mov
std
xor
ss
out
xchg
add
pop
addr16
cwtl
sbb
and
popf
push
enter
ret
int
sub
into
push
call
xor
pop
in
imulb
push
sbb
mov
xchg
repz
xchg
loop
and
xchg
cmc
subl
mov
insl
adc
sbb
testl
push
ficoms
into
mov
pop
shrl
int
xor
outsl
ja
fidivs
out
inc
test
jg
shrl
mov
cwtl
insb
cmp
xchg
dec
imul
mov
adc
sub
fldcw
shlb
xchg
cmp
dec
cmpl
ljmp
mov
dec
in
stos
scas
cmp
xchg
in
ja
push
xchg
aaa
add
xchg
call
xor
stos
pop
setbe
ret
xor
stos
adc
loope
lods
push
adc
iret
xchg
lods
xor
jle
add
scas
mov
outsb
out
xchg
push
cltd
scas
jge
mov
sbb
pop
mov
add
dec
outsl
xchg
cmpb
movsb
out
mov
out
xor
cmp
bound
or
mov
push
in
int3
mov
mov
adc
adc
iret
push
inc
cmp
out
mov
outsl
pushw
push
mov
mov
out
add
ret
fwait
outsb
leave
mov
std
mov
in
fwait
ja
pushf
mov
jp
fildll
pushf
bound
icebp
pop
xor
xchg
loope
das
pop
fistl
inc
sub
mulb
es
pushf
xor
xchg
add
imul
shrb
ljmp
out
bound
fwait
push
les
stos
cmp
fs
nop
in
imul
arpl
jmp
push
xor
sub
es
push
or
push
test
stc
dec
push
shll
jl
dec
lods
testl
xchg
cmp
stos
test
sahf
clc
push
add
xor
adc
lods
pop
jp
xor
pop
xor
fyl2x
fcoml
sub
out
mov
daa
movb
test
fmul
fs
or
or
xor
stos
dec
lock
out
dec
pushf
ret
hlt
inc
and
cmp
pop
repz
cmp
popa
je
ja
je
and
lock
pop
fstp
ret
pop
arpl
xor
out
aaa
scas
hlt
sbb
fwait
add
or
or
push
mov
out
pop
dec
jmp
inc
xchg
push
push
push
xchg
xlat
xchg
ret
sub
push
lcall
icebp
lahf
sub
lret
dec
pop
sahf
jle
adc
xor
pop
sbb
arpl
imul
repz
jo
imul
add
push
ja
sarb
push
shlb
xor
nop
inc
and
js
xchg
and
es
jo
dec
rolb
mov
pop
popa
test
jo
xchg
cmp
outsl
xchg
aaa
pop
les
mov
call
mov
and
xor
mov
cmp
lea
xchg
jne
fs
mov
mov
add
ror
sbb
pop
mov
pop
stos
mov
je
inc
test
addr16
mov
es
or
sbb
inc
loopne
pop
lret
inc
loope
push
stc
ja
ds
shlb
lcall
shrl
mov
lcall
mov
adc
mov
dec
pop
cmovle
dec
inc
push
pusha
out
jns
in
add
ret
sbb
in
in
sbb
cmp
mov
xchg
into
dec
cmovne
or
fbstp
into
dec
adc
outsl
pop
icebp
add
ljmp
lea
dec
xchg
in
dec
xchg
in
ror
inc
in
fwait
mov
add
lcall
ror
jb
dec
or
divl
dec
mov
push
push
popf
popf
pop
mov
sbb
mov
ret
iret
repnz
sti
hlt
add
lock
les
xchg
mov
inc
hlt
jge
cmp
call
daa
cmp
mov
les
ret
jnp
mov
pop
mov
or
jbe
push
nop
add
dec
cmpsb
loop
sub
mov
and
aam
int
xchg
repz
hlt
xor
pop
call
lret
adc
sbb
or
mov
lahf
loopne
in
out
mov
jge
lods
xchg
in
movsb
xorl
cmpsl
and
sub
and
insb
and
jne
stos
in
adc
sub
lds
int3
jmp
adc
aad
fbstp
mov
clc
insb
rol
mov
repz
inc
lret
mov
push
loop
in
xlat
pop
popa
sbb
mov
lods
scas
aaa
push
xchg
mov
pop
cs
push
jo
dec
ja
sbb
adc
xchg
mov
dec
push
mov
xor
loopne
lds
movsl
lret
xchg
mov
pop
sbb
icebp
xchg
test
jbe
pop
movsl
add
mov
mov
pop
sbb
int
mov
pop
xchg
adc
add
jp
into
and
popa
mov
dec
dec
rcr
add
dec
out
das
ficoms
test
pop
test
xor
push
mov
sahf
or
jmp
jmp
pop
jg
push
xorb
outsb
sarl
mov
fwait
jp
aam
insb
or
cmp
popf
jp
pop
ds
jb
xchg
mov
sub
test
ds
stos
jbe
loope
lahf
sbb
sbbb
fstl
xchg
xchg
int3
movsl
fisttpll
stos
fisttpll
movsl
addr16
adc
stos
sub
jbe
mov
int3
push
bound
sub
js
inc
in
pop
mov
and
iret
dec
fsubrl
ffreep
adc
ficompl
out
mov
and
and
fdivrl
fisttps
jecxz
pop
mov
enter
pop
push
les
cmpsl
mov
mov
fs
xlat
test
pop
std
sbb
outsb
inc
fimull
mov
in
hlt
aad
cmp
iret
jbe
xchg
push
int
dec
insl
pop
hlt
mov
sub
add
sbb
or
int
insb
imul
jbe
inc
add
sub
insb
sbb
cmpl
jp
addr16
fwait
push
push
in
out
xor
push
imul
enter
fstl
bound
scas
xchg
mov
arpl
fstpt
lea
dec
push
and
xor
pop
xchg
mov
mov
xor
aad
adc
push
pop
scas
inc
or
sbbb
daa
in
jne
aaa
dec
or
sahf
je
add
xor
sbb
xchg
jo
in
dec
lock
sbb
mov
push
scas
or
push
and
or
push
jmp
idivl
dec
cs
jno
lods
or
adcb
mov
stos
inc
push
jnp
xchg
dec
das
sub
sahf
repnz
mov
mov
sahf
idivl
dec
or
addr16
push
and
jb
dec
imul
mov
mov
stos
movl
push
sub
je
pop
pop
call
out
mov
fisubl
fxch
pop
xchg
dec
pop
mov
sbb
nop
lahf
lds
stc
inc
sbb
or
bound
pop
mov
pushf
insl
jne
and
mov
push
cli
test
mov
mov
aas
js
jbe
push
mov
jle
out
mov
mov
pop
adc
enter
sti
xor
movsl
xor
push
sahf
sbb
leave
mov
push
lcall
xchg
xchg
mov
pop
arpl
lret
out
push
cwtl
jns
jne
mov
repz
pop
mov
int3
adc
pop
fnstsw
xor
cmpsl
push
out
mov
notl
or
xor
mov
fdivrs
mov
sbb
inc
mov
call
aam
mov
neg
sub
icebp
dec
adc
je
pushf
add
sahf
push
test
stos
fisttpll
inc
clc
dec
inc
pop
andl
subl
mov
sbb
xchg
or
loopne
mov
sub
and
out
pop
mov
mov
and
dec
mov
in
jge
pop
femms
in
rol
aas
inc
push
nop
mov
les
lds
insl
mov
push
cli
test
mov
rclb
shrl
fwait
jnp
insl
lods
lret
in
arpl
push
sub
push
mov
test
dec
xchg
cmp
xor
test
add
bound
mov
jmp
fiaddl
sbb
dec
sbb
push
mov
sbb
inc
mov
cmp
test
loope
stc
mov
sbb
push
pop
fisubrs
mov
sub
inc
notb
pop
mov
or
jl
mov
sub
sti
xchg
leave
cld
adc
xchg
mov
or
je
rcl
mov
and
fdivl
cmp
xchg
fldenv
jecxz
xor
fcoml
pop
fisubrs
xchg
imul
gs
dec
adc
icebp
data16
inc
fs
scas
push
lret
lea
pop
stc
jne
mov
or
mov
loop
push
push
out
gs
stos
sub
dec
mov
and
int
xor
fs
call
mov
mov
pusha
fcmovne
push
push
fsubs
ja
jecxz
scas
ret
lds
mov
adc
push
cmp
lcall
xchg
imul
je
dec
dec
sub
sub
out
addr16
scas
inc
mov
dec
test
stos
cld
fstpt
dec
inc
dec
ljmp
and
xor
xchg
pushl
call
jbe
adc
addr16
cmp
jg
int
std
test
push
fadds
hlt
leave
dec
stos
in
add
shlb
dec
mov
shl
movsl
std
pop
in
fistl
push
pop
mov
fpatan
cmc
arpl
mov
shr
ret
xchg
mov
mov
push
fsts
gs
aad
jne
add
sbbb
in
in
pop
inc
push
lds
adc
lods
stos
hlt
xchg
xlat
stc
mov
add
roll
inc
stc
int
jecxz
addr16
xor
cmpl
js
xlat
into
ret
mov
mov
aam
int3
sbb
xor
adc
cmp
shrl
out
cmp
dec
xor
and
push
sub
jl
rcl
mov
cs
mov
jmp
imul
out
les
mov
jle
add
dec
xchg
dec
jle
push
ja
mov
sbb
pop
nop
pop
inc
xlat
and
jns
outsb
xchg
rcr
sti
mov
int3
test
scas
push
xchg
jecxz
xchg
push
pop
scas
idivl
lods
nop
mov
add
aam
mov
pop
stos
lea
int
mov
in
xchg
idivb
lahf
pop
xchg
sbb
xchg
test
inc
jnp
sbb
cmp
and
add
dec
mov
push
cld
pop
lret
jmp
push
je
ljmp
xor
cmp
sbb
je
in
inc
je
cmp
push
sarl
data16
jmp
nop
xor
dec
cmpsl
or
loopne
in
out
jg
push
mov
push
cmp
inc
das
cmpsl
inc
dec
cwtl
repz
xor
push
fwait
daa
repnz
dec
add
mov
mov
negb
xchg
adc
jne
xchg
shrb
xchg
inc
push
insl
inc
scas
pop
xchg
dec
and
mov
xchg
outsb
xor
mov
jmp
xchg
push
mov
das
sbb
daa
nop
and
adc
push
dec
jmp
outsb
clc
xchg
shl
stos
sarl
int3
orl
push
fildll
sub
stc
pop
push
or
insb
jg
decl
out
xlat
push
aam
adc
dec
movsb
jb
push
or
fnstenv
movsl
fsubl
xorb
aaa
xchg
loope
mov
daa
jle
fcomps
xchg
daa
ja
push
xchg
sbb
sbb
jle
loop
adc
cmp
outsb
mov
adc
cmp
or
or
ret
out
add
pop
aaa
sahf
mov
push
dec
ret
jp
popf
popf
adc
mov
mov
testb
fcmovbe
dec
jl
test
sub
fdivp
mov
in
idivb
xchg
jp
ret
push
data16
inc
push
xchg
xor
out
ds
pop
sbb
inc
cmp
scas
notb
push
clc
testb
shll
jmp
inc
leave
popf
push
fwait
xchg
add
in
jns
sti
sarl
dec
sbb
rorb
mov
popa
push
mov
add
dec
xchg
push
fidivs
mov
sbb
or
icebp
fs
push
shlb
adc
xor
out
push
insl
pop
cmpsl
daa
mov
mov
pop
push
adc
lcall
ret
ficoml
js
hlt
inc
sub
loopne
push
pushf
and
shrb
cmp
cmp
stos
inc
mov
push
loop
int
inc
arpl
outsl
push
adc
loopne
shll
movsb
dec
fsubrs
les
lods
and
jl
test
fmul
aaa
jl
nop
or
push
in
xlat
mov
mulb
mov
or
ss
adc
ljmp
lret
insl
pop
mov
loope
das
aam
jo
stc
inc
cmp
ja
std
lcall
sbbl
mov
cmp
mov
jecxz
fstpl
mov
push
adc
rolb
stos
mov
push
jl
test
loopne
stc
sub
jns
xor
mov
push
imul
movl
push
lods
js
std
in
sbb
loopne
mov
jecxz
sbb
mov
add
mov
push
jg
cmp
cli
sub
repz
mov
test
ljmp
adc
aaa
sahf
cmp
sahf
cmp
fsubrs
or
mov
xchg
rcll
cwtl
lret
jmp
in
sub
push
pop
fmuls
or
jo
jle
cmc
cwtl
sbb
aad
mov
ret
xchg
inc
and
add
sub
dec
lods
jae
mov
pop
cmpsl
rcll
imul
inc
int
pop
rolb
xchg
test
aam
xor
add
gs
sub
adc
or
scas
aam
inc
or
push
jnp
das
ret
xor
ja
mov
adc
jno
adc
dec
shll
adc
dec
jnp
lea
xor
lcall
sbb
arpl
cmp
mov
shrb
sbb
xchg
movsl
gs
lock
push
aaa
insl
or
cmp
and
push
hlt
mov
lret
ss
leave
or
xchg
movsl
cmp
dec
dec
mov
sub
pop
xchg
movsl
xor
xchg
jb
int
pop
sbb
into
test
jecxz
cmp
scas
out
or
inc
mov
fmuls
mov
leave
addr16
outsl
mov
rolb
adc
test
lcall
add
enter
jne
jno
aad
mov
imul
popf
jecxz
xor
aam
cmp
adc
aas
mov
fisubrl
cli
lods
jle
xchg
cmpsb
jbe
mov
icebp
and
jmp
jp
mov
mov
js
shll
ret
fxch
inc
sbb
push
cld
and
dec
inc
je
in
aad
int
ror
popa
pop
sbb
movsb
add
icebp
arpl
mov
jg
test
ljmp
js
insl
inc
fldt
xorl
mov
xor
xor
mov
dec
fisubl
cwtl
cmpsb
call
sub
jo
push
sbb
cmp
sub
loopne
lea
lcall
and
ja
adc
xor
xor
inc
add
ret
sti
sbb
jge
inc
mov
aam
out
ret
sub
fs
adc
xor
fwait
int3
enter
cmp
jle
dec
adcb
jle
test
iret
xchg
movsl
mov
fwait
outsl
test
repz
push
mov
dec
mull
add
xchg
push
fsubr
inc
xchg
lret
pop
clc
cltd
and
hlt
shrl
jge
mov
cltd
mov
shll
pop
mov
adc
cmp
cltd
mov
int3
ds
ja
popa
cmp
lea
dec
fldl
clc
mov
cmp
add
sti
pop
push
mov
daa
dec
ret
jnp
jbe
xchg
fwait
mov
test
lret
and
in
jbe
xchg
in
xchg
add
mov
out
mov
xchg
mov
jne
xchg
xchg
outsl
ret
push
push
incb
hlt
adc
hlt
dec
sub
push
repz
je
in
insl
pop
push
loopne
rdmsr
sub
add
js
test
or
mov
leave
cmp
mov
test
pop
jno
mov
xchg
clc
cmpsl
jle
xor
xchg
stos
stos
sarb
imul
loope
jecxz
mov
lcall
push
or
rcll
es
jae
jge
in
andb
and
xlat
and
dec
cwtl
mov
std
shl
pop
sbb
outsb
daa
ja
jne
xchg
or
dec
xchg
jns
rcl
bound
and
call
lds
addl
inc
mov
mov
rolb
cmp
fwait
cwtl
lcall
mov
xchg
lea
push
push
scas
and
mov
fidivl
in
fsubp
test
mov
ret
pop
pop
xor
cmp
cli
add
push
add
stc
sub
mov
push
loop
mov
daa
mov
sub
mov
cld
pop
sarb
pop
sub
bound
popf
sbb
dec
ja
mov
cli
push
rorb
sahf
or
dec
test
push
ds
pop
fdivr
add
jae
inc
push
imul
or
cmpsl
sti
insl
ret
sub
dec
std
loope
ljmp
mov
xchg
jno
inc
arpl
subl
push
negb
dec
pop
jmp
mov
xchg
fs
pop
sbb
je
cmpsl
jl
cwtl
ret
or
sbb
in
mov
dec
and
mov
mov
add
dec
dec
add
or
adc
out
jecxz
sub
cwtl
mov
int
adc
and
ret
call
cmp
popa
and
xchg
cmpsb
cmpsb
into
lds
cmp
fidivrl
or
clc
pop
sti
ljmp
sub
sbb
xchg
sub
xor
cmp
sbb
out
movsl
je
push
pop
mov
xchg
mov
inc
in
les
pop
or
xchg
cld
pop
popf
popa
jne
jo
cmpb
add
mov
fstpt
adc
js
jle
cmp
cmp
mov
lcall
xor
pop
adc
jmp
push
xor
popa
and
cmp
xchg
mov
iret
lock
sbb
enter
adc
pop
cmp
and
loope
and
dec
les
sti
mov
and
idivb
push
aas
sbb
fmull
les
pop
mov
mov
cld
and
je
push
mov
je
sbb
push
mov
shrb
jp
clc
push
xlat
in
dec
sub
sahf
pop
bound
adc
adc
sar
sub
mov
cmc
mov
and
push
mov
call
xchg
sub
jno
fcompl
lds
or
or
pop
or
repz
pop
jae
sti
mov
and
adc
cmpb
xor
loopne
sub
scas
fistps
or
dec
scas
push
cltd
dec
adc
mov
lds
inc
or
mov
aad
jg
out
cwtl
cmp
inc
stos
stos
jp
scas
cmp
iret
clc
nop
jnp
mov
push
addr16
leave
xor
int
call
mov
push
popa
ret
and
inc
movsl
lods
data16
pop
daa
shrl
arpl
or
je
movsl
jle
inc
inc
xchg
test
shlb
roll
jns
xchg
shrb
mov
adc
nop
dec
mov
sbb
popa
jmp
gs
lods
icebp
push
or
push
cmp
mov
lock
mov
enter
mov
pop
inc
dec
pop
jmp
jg
mov
je
and
aas
movsb
gs
js
orb
xlat
adc
push
xchg
dec
push
push
xchg
fs
js
mov
jp
loope
movsb
add
add
int
sbb
ja
ds
sar
std
cmc
out
ret
inc
daa
mov
repnz
ret
je
test
lea
jge
sub
mov
pop
icebp
inc
lds
aad
jns
ror
jl
lret
mov
imul
sub
bound
loop
inc
mov
jo
stos
dec
imul
push
sub
sub
push
loope
and
std
data16
adc
mov
mov
jle
jnp
xor
push
mov
stos
loop
adc
pop
sbb
inc
xchg
dec
dec
cmp
push
jl
xchg
das
push
adc
int
out
lea
adc
xchg
test
mov
or
or
in
cmp
ljmp
fdiv
mov
in
xor
js
orb
and
es
push
cltd
mov
fsubrs
mull
jbe
jecxz
vmread
ja
daa
aam
or
outsb
xor
jmp
ret
push
out
cld
rcrb
pop
fcmovnbe
xor
repnz
mov
jb
movsl
cwtl
lret
imul
int
call
push
pop
add
push
movsl
inc
xor
jae
mov
loopne
movsb
les
test
adc
mov
cwtl
sbb
cmp
lcall
pop
sub
das
test
sbb
inc
ja
scas
push
add
or
mov
or
adc
sar
lods
cmp
repz
imul
inc
pushf
inc
mov
test
fmuls
sbb
push
inc
stos
fcomip
rcr
add
add
add
and
int3
in
mov
ds
add
xchg
out
fsubrs
les
xor
mov
out
addr16
icebp
sbb
lcall
movsl
cmc
add
sahf
push
sub
jl
mov
push
mov
xlat
sti
fdivl
popa
add
testl
fistps
inc
fisubrs
cmc
xchg
mov
cmp
and
push
jne
adc
jae
dec
jg
push
call
loopne
pop
sub
cwtl
jae
pop
ljmp
xlat
test
aaa
dec
aaa
adc
int
push
loope
add
jecxz
std
or
adc
cld
test
push
xor
lcall
popa
jp
test
jl
mov
adc
add
loope
int
lods
sub
pop
iret
mov
pop
xor
inc
adc
adc
lret
js
idivb
sbb
enter
push
stc
xor
lahf
inc
push
mov
xor
sarl
rclw
push
aaa
adc
mov
xchg
cld
cmp
mov
xor
jae
cmpsb
insl
push
jecxz
cld
pop
dec
cmc
mov
push
push
test
popa
insl
in
mov
insb
push
and
lock
cmp
arpl
mov
repnz
xor
jne
dec
fs
stos
xor
xor
xor
arpl
push
push
arpl
arpl
mov
xchg
pusha
sti
xchg
push
loop
inc
ror
cmpsl
xor
add
inc
pop
lcall
dec
push
cmpsl
loopne
les
or
ljmp
pop
mov
mov
pushf
lock
and
and
mov
mov
stos
cs
insl
jno
or
stos
lock
sti
jle
fsubs
push
sub
inc
or
push
pop
sub
aas
pop
out
cwtl
popf
xlat
jmp
out
mov
pop
fstps
divl
call
inc
xchg
dec
add
mov
xor
pop
cmp
sbbl
inc
push
mov
jp
lods
sbb
xor
mov
data16
mov
xorl
ja
in
adc
popf
lcall
sbb
mov
jge
and
dec
sbb
mov
pop
pusha
sbb
mov
xchg
imul
inc
push
insb
mov
cmp
movsb
pop
arpl
int3
repz
in
pop
mov
rol
adc
inc
mov
jae
ret
sbb
push
mov
cmp
mov
aam
pop
cmp
xor
or
test
stos
sub
cmp
pop
add
mov
call
test
fistl
adc
cmp
and
and
adc
sbb
xor
cmp
add
jp
fdivrl
adc
aad
into
mov
add
setl
fistl
xchg
int
stc
insb
xor
mov
movsl
sbb
fldcw
fwait
cmp
jecxz
add
cmc
cmp
xchg
inc
cld
enter
pop
and
into
pop
push
sbb
call
imul
xor
sbb
mov
subb
aam
mov
andl
fidivrs
enter
movsb
dec
jo
lcall
rol
add
frstor
aaa
test
gs
rorb
orl
loop
sub
in
mov
mov
call
int
scas
insb
mov
jae
movsl
shll
lcall
push
aas
push
or
adc
xchg
leave
lods
cwtl
add
lcall
call
imul
loope
and
mov
fwait
cld
and
gs
nop
mov
lods
pop
loop
mov
sarb
mov
or
pop
push
scas
aaa
adc
lock
inc
mov
std
movsb
shrl
sbb
cmp
insb
cmpsb
pop
dec
xor
pop
std
mov
add
es
pushl
fldenv
xchg
cmp
cmp
test
cmpl
cmp
inc
xlat
jle
or
mov
lret
push
pop
pop
adc
fnsave
test
or
and
sub
mov
cmc
xor
sarb
gs
inc
ds
insl
xchg
outsl
in
mov
int
ret
dec
push
push
jmp
ret
movsl
xor
jo
pushf
push
xchg
imul
and
out
addr16
dec
icebp
and
pushf
ss
cmp
and
cmc
jl
subb
cmp
dec
data16
xor
aad
mov
ret
test
inc
pop
push
and
push
sahf
lds
sti
stos
sbb
hlt
lock
lret
lahf
sbb
out
pop
push
pop
cwtl
jnp
pop
ds
lods
pop
hlt
adc
aas
push
mov
push
movsb
bnd
xor
cmp
imul
add
test
cmpl
stos
xchg
repnz
dec
nop
lea
aad
push
leave
stos
loop
pushf
mov
std
daa
icebp
sub
and
mov
mov
push
gs
sahf
dec
test
mov
dec
lods
ds
mov
mov
mov
ss
mov
jmp
push
inc
rorl
jnp
or
inc
sub
inc
adc
jp
jp
sub
pop
adc
test
fists
jp
test
repnz
cli
int3
xchg
cmpb
ret
out
ret
std
or
xchg
in
mov
mov
or
imul
in
mov
ds
out
cmp
adc
fmull
out
inc
adc
jno
outsb
sbb
pop
dec
or
jno
and
imul
ret
popf
repz
loopne
mov
out
and
mov
cmp
dec
sti
or
into
ds
and
xor
arpl
add
shlb
cmp
push
lret
jmp
jecxz
adc
add
in
mov
fistpll
push
inc
movsb
outsb
ret
push
sub
push
add
mov
repz
leave
call
insb
dec
popl
xchg
mov
jo
ljmp
jno
sar
icebp
out
bnd
es
push
jbe
xchg
ret
into
andb
add
out
repz
push
in
int3
int
pop
mov
add
sahf
pop
cmc
loope
ret
imul
mov
lods
adc
pop
outsb
sbb
mov
insl
jae
insb
repz
mov
bound
shll
cld
cli
mov
dec
les
dec
icebp
mull
sbb
adc
jne
psubw
cld
jns
mov
leave
mov
lock
mov
into
addb
daa
mov
xchg
sbbb
mov
in
dec
sbb
lret
sbb
scas
scas
xchg
mov
in
das
mov
or
pop
lods
clc
cmp
add
add
add
mov
adc
lock
test
or
push
dec
ficoml
hlt
repnz
adcl
sbb
adc
fs
cmp
scas
mov
in
jb
sbb
cwtl
andb
xchg
sub
leave
mov
mov
sub
imul
xchg
jp
mov
jle
mov
cmp
push
mov
jne
lret
jno
push
pop
pop
call
fistl
push
mov
scas
jp
movsl
cmpsb
cmpsb
pop
mov
dec
mov
ror
in
dec
call
fwait
test
paddsb
lds
push
jmp
ret
mov
mov
cmpsl
and
push
lret
sti
call
les
ja
sti
out
jp
leave
jns
cmpb
mov
shlb
inc
jns
push
push
mov
jnp
xor
fld
test
jne
inc
push
pop
pop
mov
cltd
or
ljmp
sbb
aam
fcomps
fwait
das
jae
andps
mov
aam
mov
inc
push
mov
ret
mov
rcll
cmp
fdivl
movsb
adc
pop
pop
mov
ljmp
adc
cmp
dec
rolb
jecxz
xchg
cltd
jle
mov
pop
dec
scas
pop
cli
push
sti
cmp
mov
jge
imul
idivb
inc
dec
insl
adc
in
pop
in
sub
jl
add
lock
cld
push
ss
clc
lret
stc
sbb
movsb
rol
nop
test
aad
cmpsb
xor
add
pusha
into
push
ret
testl
sub
add
fs
cmpsb
or
rol
dec
roll
push
push
pop
mov
adc
lret
sub
int
lods
sub
dec
push
or
std
add
mov
mov
inc
rcrl
xor
int3
xor
fwait
fs
push
outsb
cli
imul
jbe
add
mov
mov
in
push
jl
mov
inc
nop
push
inc
cmc
ret
jb
sbb
or
mov
sbb
arpl
add
fsubrs
mov
mov
fsubs
mov
ucomiss
shrl
sahf
mov
in
push
jae
in
sub
dec
movsb
push
jnp
xor
cmp
cltd
out
cmp
jle
cmp
mov
jle
mov
aas
enter
aam
pop
scas
or
adc
xor
inc
pop
dec
sbb
and
or
test
test
mov
lcall
cmp
cld
into
hlt
fnstcw
ds
daa
inc
insl
adc
lret
sbb
pop
mov
xchg
ljmp
sub
movsl
int3
sbb
and
pop
xchg
or
rolb
ljmp
inc
hlt
scas
push
ret
imulb
sbb
jle
sub
cmp
aam
pop
fs
cmpsl
mov
mov
shll
lcall
lock
loope
xor
xchg
pop
inc
jne
xchg
test
mov
xchg
cltd
adc
mov
cli
mov
or
push
sbb
push
mov
mov
in
mov
push
out
or
cmpsl
pop
movsb
mov
add
shr
cwtl
push
rcll
xor
add
aam
arpl
inc
xchg
inc
ret
jge
outsl
dec
inc
push
lds
cltd
xor
sub
pop
mov
fisttps
mov
lods
in
call
lea
test
cmp
push
lea
mov
sahf
shll
rcll
push
das
repz
or
inc
lahf
or
lret
insb
push
mov
js
push
or
mov
mov
scas
ss
mov
cmpsb
lods
sub
and
mov
cli
in
mov
dec
fmul
push
add
adc
add
je
fdivrl
pop
mov
test
mov
xchg
cmp
clc
lret
lods
out
or
xchg
push
mov
cld
ret
pop
mov
ret
insl
jo
andl
cmc
in
mov
sar
mov
fcmove
sbb
push
jno
xchg
inc
mov
pop
sub
xor
push
push
inc
insl
insl
xchg
clc
add
movb
mov
and
in
mov
xchg
ret
inc
jl
inc
xor
test
sub
pminub
pop
icebp
inc
rorb
sub
fildl
sub
fiadds
rcrl
sbb
mov
mov
xor
or
inc
dec
push
fisubrs
cmpb
add
test
fsub
pop
enter
adc
arpl
imul
shrb
mov
add
xor
mov
xor
push
aaa
mov
rcrl
das
dec
mov
push
xor
xor
inc
add
ljmp
bound
inc
add
push
insl
jg
xor
mov
dec
inc
sbb
fwait
inc
insl
mov
in
test
mov
movsl
jg
jne
pop
adc
aad
sub
aam
outsb
jnp
ja
rcr
rol
add
sbb
pusha
arpl
mov
lcall
in
lahf
push
sub
adc
xor
add
mov
xlat
loop
push
jne
push
fwait
fwait
repz
mov
jbe
add
xor
ds
xor
dec
or
or
fcompl
inc
pop
add
outsb
out
out
std
xchg
rcr
repnz
dec
insb
mov
lret
orl
test
mov
repnz
std
stos
andl
xor
daa
cmpb
fnstsw
mov
inc
mov
sbb
lock
es
adcb
nop
jp
sub
mov
nop
jno
popl
std
adc
mov
sbb
das
push
ret
dec
loope
hlt
sub
sbb
dec
aam
pop
push
adc
loopne
sahf
cwtl
lret
jge
pop
push
in
shrb
aad
pop
add
js
aad
repz
iret
push
insl
in
mov
push
xchg
xor
push
fdivs
adc
outsl
in
mov
repz
enter
adc
dec
push
into
cli
jb
cmpsl
xor
xor
clc
or
bound
jecxz
adc
inc
or
mov
aas
data16
xor
in
pop
aaa
lods
cld
je
sub
test
sarb
dec
into
rcrl
sub
cmp
iret
movsl
push
or
scas
pop
pop
jns
icebp
insl
dec
vunpcklps
icebp
adc
enter
mov
repz
insb
pop
andb
adc
cmpsb
and
mov
dec
loopne
imul
pop
in
imul
mov
pop
adc
cmovae
lds
incl
icebp
repz
or
dec
xchg
xor
mov
stos
lds
adc
push
mov
leave
sti
dec
lret
loope
mov
xor
shrb
xchg
mov
pop
notb
mov
stos
add
test
stos
lods
push
jae
hlt
fbld
je
loope
adc
adc
adc
jle
mov
jnp
and
add
stc
ror
dec
test
cli
bnd
daa
int
xchg
cmp
mov
movsb
xchg
push
push
mov
mov
clc
out
pop
movsl
sub
jecxz
ss
imul
lcall
add
fiaddl
inc
or
test
mov
and
les
rclb
pop
pop
movsl
sbb
cltd
in
push
or
inc
pusha
test
pop
jo
pop
cmp
push
jbe
orb
pop
and
cmp
sub
xor
fs
adc
push
inc
xor
push
and
push
dec
stos
fwait
push
fstps
lahf
pop
push
mov
push
ja
dec
frstor
push
scas
jp
sub
jle
out
sbb
ljmp
jl
jp
pushf
inc
out
mov
xor
and
mov
mov
enter
pop
mov
in
popa
xchg
pop
cmp
pop
out
pop
pop
cld
xchg
mov
xor
fsubrl
out
adc
js
in
mov
and
xchg
inc
pop
add
push
into
movsb
dec
pop
jmp
and
in
iret
mov
dec
xchg
out
loopne
bound
inc
repz
call
fiadds
xor
mov
bound
lods
mov
out
clc
notb
push
aas
pop
cld
inc
lods
jbe
mov
jns
xchg
pop
mov
outsl
jecxz
test
dec
xchg
xchg
xchg
push
ret
imul
cmp
imull
lret
adc
cmp
fsts
pop
inc
out
xchg
ret
hlt
repnz
mov
imul
sub
push
lock
mov
or
adc
test
loop
dec
les
pop
xchg
mov
xchg
add
cmp
sarb
mov
ja
fcmovnb
fdivrs
lahf
aaa
adc
imul
popa
popa
jmp
xlat
or
or
adc
ret
inc
aad
repnz
xchg
fdivrp
mov
cmp
dec
mov
loopne
cmp
lahf
dec
dec
fiaddl
fs
das
and
addr16
bound
ss
imul
cltd
test
pop
fsubrs
mov
arpl
inc
fimull
push
outsb
int
push
test
jne
mov
jmp
inc
sahf
jbe
jmp
add
inc
mov
push
scas
xchg
xor
push
ss
clc
sbb
and
jecxz
and
sub
push
mov
outsb
test
push
pop
loope
popa
cmp
and
push
adc
pop
mov
push
inc
pusha
jl
and
sub
movsb
addr16
mull
hlt
ret
mov
lds
ljmp
sti
xchg
push
dec
imul
inc
call
lea
xor
das
mov
mov
out
ret
fbld
cmp
fnstcw
mov
xchg
mov
jo
push
in
rcrb
or
xchg
jp
aaa
dec
int3
xchg
insb
ja
repz
add
nop
sbbl
cmp
jae
adc
jle
gs
in
icebp
mov
outsl
je
into
jb
cmc
outsl
inc
adcb
mov
or
daa
sub
out
js
pop
jbe
xor
pusha
and
rorb
lahf
mov
push
or
je
xchg
in
in
jns
daa
std
popf
into
mov
test
test
push
pop
dec
jle
inc
lods
mov
dec
nop
lret
xchg
outsl
and
and
mov
movsb
cmpsb
mov
mov
xchg
inc
pop
idivb
mov
pop
jmp
jge
adc
subl
cmc
jno
push
daa
lock
loopne
sub
test
imul
shl
push
inc
xchg
stc
std
xor
icebp
add
stc
jno
rolb
push
add
inc
iret
or
xlat
dec
pop
cmp
shl
imul
inc
dec
and
sahf
test
daa
fdivrs
sbb
and
dec
ficomps
sbb
idivl
jno
inc
outsl
rorl
andb
das
insb
and
jp
lds
xor
shl
mov
movd
mov
ficomps
add
and
adc
push
xchg
jne
insb
inc
shll
and
inc
adc
push
xor
int
xor
shr
arpl
jp
addr16
shr
dec
lock
adc
xor
push
mov
es
pushf
lret
sbb
pop
cmp
ret
out
imul
fsubrs
jp
inc
shll
dec
mov
insl
repz
cmpsb
jecxz
jne
push
loop
pushf
in
nop
sbb
in
cmp
and
lds
sub
dec
xchg
fistl
xor
jno
or
cmp
lcall
stos
jnp
xor
pop
cmpsl
out
mov
mov
lret
or
or
and
in
aam
add
into
inc
imul
popf
repz
pop
or
adc
fstps
mov
pop
scas
sbb
push
shlb
mov
stos
jb
sbb
jp
repz
push
cmp
and
imul
cmc
and
fildl
es
cltd
aas
push
cmpsb
fmuls
mov
rolb
daa
jo
xlat
mov
xchg
and
ss
or
add
clc
dec
mov
loopne
push
lret
fwait
xlat
and
inc
push
mov
js
loop
dec
popf
xlat
mov
subb
mov
cmp
fdivrl
icebp
cwtl
das
imul
decl
add
movsb
and
das
mov
sbb
xchg
divl
xchg
outsl
int
fnstsw
dec
imul
ret
cmp
push
lea
xchg
shrb
pop
mov
jne
sub
inc
push
std
jmp
pop
xor
pop
adc
add
std
pop
cmpsb
ret
xor
aam
jb
arpl
and
push
push
adc
jecxz
pop
add
push
dec
push
push
ljmp
sub
mov
and
stos
add
jg
hlt
shl
pusha
sar
out
pop
pop
fldenv
prefetch
aas
addr16
test
mov
mov
insb
pushf
pop
lret
cltd
jle
xor
cld
jmp
jecxz
mov
ret
add
mov
mov
xchg
jle
xor
pop
jae
inc
out
popf
bound
pop
and
sub
mov
fiaddl
sbb
cmc
push
jp
and
push
xchg
pop
cltd
sbb
and
mov
lret
push
adc
dec
jecxz
or
test
data16
pop
jle
jae
outsb
xor
and
push
pop
xor
jp
cmp
mov
xchg
push
mov
lock
xor
ret
in
xchg
fmull
mov
dec
cmp
pushf
mov
jnp
aas
cltd
idivb
in
pop
ds
xor
nop
call
pop
les
and
add
cli
ljmp
cmpsl
sub
cs
ret
out
dec
xchg
fsincos
dec
cmp
leave
mov
mov
mov
lea
cwtl
push
sub
cmp
mov
cli
jne
fiaddl
xor
cld
into
mov
dec
pop
push
mov
insb
ds
add
sub
pop
inc
in
adc
jge
mov
sbb
test
pop
enter
fstps
movsl
mov
std
ds
pop
jecxz
add
add
push
adc
jecxz
imul
and
jp
push
pop
in
xor
xchg
jnp
lods
inc
les
mov
mov
jnp
sarl
or
push
push
fimuls
ds
std
loop
repnz
in
lret
jg
clc
inc
aas
jg
mov
pop
js
daa
sbb
push
lods
mov
jb
ja
pop
lahf
cwtl
mov
shr
inc
inc
test
inc
jg
ja
scas
fchs
jns
dec
xor
jmp
inc
cmpl
lock
adc
shlb
xchg
or
in
aam
hlt
dec
mov
dec
shl
out
dec
dec
push
stos
enter
xchg
int3
loopne
xchg
mov
js
lret
stos
jbe
test
mov
in
jp
xor
inc
mov
repz
mov
jb
adc
mov
enter
add
mov
push
sub
add
adc
daa
xor
push
ja
stos
ret
shlb
mov
sar
mov
aas
pop
and
ds
inc
push
push
mov
push
or
sub
addb
push
or
scas
ljmp
or
shll
nop
inc
jns
push
mov
jb
std
les
xor
cmc
or
das
and
adc
inc
inc
pop
xor
movsb
test
xchg
in
loop
and
mov
lea
xchg
add
arpl
insb
loopne
xchg
insl
jno
pop
cs
mov
cmpsb
add
push
xchg
cltd
cmc
push
mov
cwtl
inc
inc
ret
or
and
insl
fldcw
inc
fcoms
lea
lods
loop
lcall
push
cli
pop
addr16
sbb
enter
dec
cmp
iret
pop
sub
in
cmc
pop
lods
mov
add
mov
sbb
inc
insl
cwtl
adc
mov
push
push
mov
cmp
pop
in
test
pushf
call
xor
fisubl
xor
ja
sbb
into
cmpsl
leave
mov
shl
push
cli
and
sti
cld
xchg
dec
cmp
and
ret
mull
and
out
ret
testb
stos
xchg
icebp
stc
out
dec
adc
xchg
in
add
cmpl
dec
inc
in
inc
jp
ljmp
outsb
mov
mov
imul
test
dec
leave
out
mov
lret
mov
xor
and
into
xor
sub
bound
mov
sahf
and
data16
popf
mov
es
insb
cwtl
xchg
in
cmpsl
dec
or
adc
fcompl
or
xor
scas
jl
pop
push
and
and
adc
or
jno
inc
xchg
stos
les
and
fs
mov
data16
mov
or
lcall
ja
in
sbb
shll
pop
inc
mov
les
imulb
mov
cli
fld
jecxz
or
jb
adc
adcb
push
mov
fwait
push
int
dec
xchg
arpl
aad
aas
ret
lret
dec
in
int3
dec
insl
imul
add
inc
and
inc
xchg
jns
leave
dec
push
addl
mov
or
pushf
jnp
icebp
sbb
mov
adc
std
stc
pop
push
inc
hlt
daa
pop
icebp
in
shrb
lods
ja
addb
and
mov
movsb
and
mov
sub
fisttps
call
sbb
arpl
and
jle,pt
shrl
dec
enter
lock
test
in
sub
jb
sub
js
mov
mov
jge
les
addr16
sbb
pop
rolb
jb
xor
lcall
mov
lods
inc
push
pop
add
fsub
sbbl
in
add
sbb
add
pop
xor
mov
and
lret
pop
fsub
jge,pt
lcall
test
sub
adc
je
jbe
mov
leave
scas
rolb
imul
jmp
xchg
push
mov
jecxz
mov
into
test
andb
loopne
cmp
lock
fisttps
sbb
test
sbb
int
subb
or
lds
lcall
mov
lret
les
push
jo
dec
lods
in
add
fidivrs
dec
popa
mov
mov
sbb
inc
cld
loop
mov
std
mov
inc
and
divb
pop
mov
push
fadds
push
inc
push
scas
call
xor
into
xchg
into
test
inc
andl
mov
cmp
mov
mov
mov
rcll
lods
fs
cmp
xor
hlt
pop
sub
mov
adc
rorl
in
and
xorl
lds
inc
pop
fmulp
out
push
addl
stos
xorl
aas
leave
shrl
decb
fnstsw
and
into
das
push
movsl
in
adc
sahf
pop
mov
fcomi
xchg
insl
lea
dec
push
stos
push
dec
mov
addb
mov
stos
cld
dec
or
sbb
and
xchg
fwait
xor
sbb
xor
adc
mov
mov
sbb
pop
push
jb
xor
or
and
mov
adcl
sbb
loope
nop
imul
vunpcklps
cmp
and
add
int
cmp
push
jle
loopne
mov
ret
push
or
out
jno
les
pop
cmc
add
or
add
xorb
jne
jmp
es
push
fs
add
in
sub
shll
xchg
adc
out
cmc
cmp
dec
sahf
push
les
mov
testb
and
fidivrs
pop
cli
cmp
push
lahf
lock
ljmp
jo
inc
pop
sbb
sub
dec
iret
arpl
leave
adc
push
sub
pop
int
jg
in
es
add
hlt
je
mov
add
shrb
loop
fs
mov
push
aas
mov
les
xlat
icebp
data16
xchg
push
cmp
call
pop
popf
pop
add
sti
adc
xor
cmp
mull
cs
or
sub
stos
adc
in
stos
or
xor
pop
mov
sahf
xor
xchg
dec
mov
adc
jns
jae
mov
pop
sbb
aad
xor
scas
xchg
sahf
fildl
es
sub
in
lret
add
pop
test
jecxz
add
insb
mov
ss
xor
cmp
js
in
sahf
lahf
or
je
sbb
cs
out
fists
insb
push
mov
mov
fs
push
jb
cwtl
lcall
movsbw
shll
movb
jne
add
and
je
fildl
les
push
push
sti
insb
cs
iret
mov
nop
mov
lret
nop
adcb
push
mov
insl
xchg
adc
inc
jbe
sbb
pop
and
repnz
lahf
push
sbb
outsb
pop
pop
ficoml
aam
out
call
jno
mov
lock
inc
xchg
jmp
cmp
lret
xlat
push
in
lea
jge
add
dec
push
mov
and
inc
jbe
mov
mov
out
xchg
lods
icebp
and
pop
sbb
jo
loope
int
ja
dec
push
xchg
or
jae
das
or
mov
shrl
sbb
cwtl
movsl
popf
into
or
xor
and
lods
dec
add
test
jl
mov
cmpl
mov
pop
int3
pop
jne
sbb
push
adc
dec
test
rcrb
push
test
lcall
mov
xchg
lahf
or
mov
xor
mov
pop
dec
shl
mov
or
movsl
ljmp
hlt
mov
xchg
xchg
sbb
mov
ret
jle
lahf
mov
rclb
repnz
mov
ja
ja
sahf
sub
clc
mov
pop
shl
adc
arpl
fsubrl
stc
cmpsb
xchg
sub
lahf
mov
jne
test
jl
or
and
testb
test
or
dec
push
loopne
lea
jno
or
mov
inc
test
inc
andl
inc
xor
addr16
mov
lea
jne
jnp
sti
push
sub
push
xchg
push
mov
pushf
mov
outsb
xor
loopne
mov
pop
mov
mov
call
inc
clc
dec
jp
cmp
pop
xor
lret
iret
dec
setge
js
mov
pop
jl
cmp
out
fcoms
and
mov
je
mov
jle
aam
andl
mov
xchg
sti
mov
sbb
testb
inc
cmp
loope
sub
pop
nop
adc
mov
sbb
cmp
sahf
mov
test
xchg
pusha
lods
mov
xor
loope
jle
stc
lret
dec
das
or
jbe
ficoml
inc
in
jle
sbb
shrl
jno
jno
dec
loopne
inc
and
or
sub
add
dec
inc
sub
cmp
aad
mov
inc
xor
daa
pusha
pop
cs
roll
shlb
jle
xchg
imul
inc
test
pop
add
fistpl
sub
negb
or
cmp
iret
mov
js
pop
aad
pop
lea
cmp
rcrl
pop
aaa
stos
pop
fldt
push
cmp
mov
or
push
mov
mov
movsl
mov
mov
aad
out
mov
out
mov
jnp
jp
scas
cmc
clc
sub
jecxz
insb
bound
ss
dec
repnz
mov
icebp
sbb
xchg
push
popf
xchg
orl
mov
jnp
cmp
and
xor
adcl
jnp
cmc
in
push
mov
pop
push
xor
hlt
push
call
scas
psrlw
hlt
into
jmp
loopne
int
add
mov
mov
shlb
sahf
pop
test
out
dec
push
push
and
cmc
xor
call
into
rclb
movsb
and
int
fisubrs
xchg
repz
testb
xorl
and
popf
pusha
mov
jns
data16
and
hlt
jl
das
push
pop
adc
sub
insb
sbb
xchg
jne
sub
xor
mov
inc
xchg
sub
pop
inc
aaa
loop
sbb
cmp
test
jecxz
adcb
pop
ss
pop
mov
add
push
loope
enter
lods
xchg
ljmp
add
ficoml
in
mull
mov
pushf
or
dec
dec
call
lods
xchg
mov
scas
daa
leave
jae
cmp
fs
loop
repnz
jle
inc
es
add
pop
test
test
pop
push
decb
push
mov
push
aam
pop
xor
addb
jle
fs
mov
adc
test
lea
push
mov
fmuls
mov
adc
or
cmc
pop
dec
sbb
int
fisttpl
add
insb
mov
inc
sbb
mov
out
in
mov
cs
xchg
mov
mov
fidivrs
or
push
cmpsl
cmp
rcl
jl
mov
cltd
js
push
int
scas
ds
inc
lahf
or
es
shll
fildll
jmp
cmp
mov
in
scas
jg
sbb
and
aas
inc
sbb
mov
lret
push
jo
cmp
sub
stc
xor
pusha
jns
and
dec
or
js
jl
inc
pop
dec
adc
fdivr
or
push
push
mov
je
jge
aam
ja
jmp
pop
adc
fucomi
ja
xor
movsb
pop
mov
lcall
les
call
dec
outsb
ss
icebp
pusha
ljmp
mov
mov
cld
cli
lods
push
stos
movl
mov
pop
pop
movsl
in
or
xor
hlt
pop
or
rclb
inc
cltd
lahf
ss
sbb
int
sub
repz
pop
aas
add
ja
andb
sbb
mov
sbb
push
pop
pop
imul
ret
aaa
xchg
cmp
aas
pop
mov
sbb
inc
and
add
loop
cmc
jae
mov
push
lea
cmp
neg
lock
stos
enter
pop
sahf
jb
ljmp
sub
push
in
rcl
cwtl
out
cmpb
insl
shl
push
push
jne
jmp
clc
pop
call
or
dec
cli
mov
push
and
loop
sbb
mov
rcrb
jp
add
and
outsl
aas
clc
mov
les
adc
imul
jne
cltd
fildl
shl
xchg
pop
jp
xchg
sbb
or
mov
pop
fsubrs
insl
aad
addb
xlat
les
mov
or
fwait
loope
aad
cmp
cs
mov
inc
movsb
data16
jae
jp
xor
xchg
in
xchg
xor
out
mov
pop
out
pop
rclb
bound
cmp
movsl
push
mov
xlat
rol
push
aas
adcb
adc
leave
mov
push
int
add
adc
add
push
shlb
pop
fdivl
and
outsl
jns
add
fbstp
xor
sub
pop
mov
hlt
push
lret
insb
notl
inc
out
sub
nop
fimull
xor
sbb
xor
push
loope
scas
sub
out
xchg
lock
inc
pusha
add
or
sbb
lcall
mov
or
pop
lock
fcmovu
mov
iret
sbbl
hlt
xchg
lahf
push
xor
add
jmp
xor
adc
or
fcoml
ljmp
jle
push
xchg
sub
jb
jne
cli
sbb
icebp
inc
rol
pop
sub
cmpsl
mov
add
hlt
and
faddl
test
test
or
add
mov
cmp
push
xor
adc
jb
fsubrl
lock
sub
inc
or
scas
lea
sub
sub
es
pop
dec
push
or
repnz
loop
jbe
fwait
and
jle
gs
pop
aas
mov
push
and
jmp
cld
mov
jno
ljmp
sti
pop
xorl
and
orb
orl
bound
dec
adc
das
mov
adc
mov
imul
nop
cld
and
lock
addb
jle
or
mov
sbbl
push
mov
lret
cmp
jl
jmp
jl
pop
insb
int3
outsb
mov
cmp
jmp
mov
dec
jle
out
push
inc
inc
mov
jl
int3
icebp
in
int3
sbb
or
and
cmp
push
test
add
lods
push
pop
mov
or
dec
pushf
gs
sbb
mov
and
or
cli
fnstsw
sub
fstpl
scas
mov
or
or
xor
out
cli
lods
sti
fldt
dec
add
lods
repnz
lahf
cmp
or
xor
std
testl
pop
jnp
xor
leave
xor
sahf
addb
push
outsb
in
addr16
jo
inc
mov
mov
and
or
or
mov
inc
es
or
add
xchg
call
iret
sbb
dec
push
sbb
cmc
mov
sub
or
int
dec
ficompl
pop
mov
nop
dec
jle
je
mov
cli
pop
addb
pushf
mov
sub
dec
movsl
lds
sub
pop
cli
and
pushf
pop
mov
cmp
and
das
je
mov
orb
xchg
sub
addb
js
push
mov
addl
xor
adc
add
lcall
loopne
or
mov
gs
rcr
cmpsb
mov
iret
push
mov
push
dec
or
notl
mov
hlt
stc
out
or
aad
mov
add
xor
xchg
or
mov
cmp
or
sub
xchg
loopne
cmp
push
cwtl
insb
mov
and
leave
jmp
out
out
mov
cli
dec
cmpsb
insb
mov
movsb
xlat
and
or
mov
pop
and
lret
cmp
loope
ret
add
insl
lods
mov
cmp
xchg
lret
jge
xor
pop
inc
push
or
fsubrl
test
dec
fidivrs
rorb
lds
lahf
adc
sub
adc
sbb
and
mov
fdivrl
and
loop
push
push
xor
outsl
lret
xchg
mov
sub
sbb
inc
mov
mov
shl
push
add
lods
call
rcrb
xchg
imul
jae
jae
xchg
mov
insb
push
xchg
faddl
and
icebp
rolb
test
dec
jne
mov
jne
aas
pop
xor
inc
sub
fmulp
mov
pushf
and
faddl
lods
jl
rcll
mov
fisubrs
cmpsb
shr
pop
or
in
fbstp
clc
and
cld
push
adc
dec
shl
pop
enter
rolb
pop
xor
lods
popf
jecxz
mov
fs
mov
pusha
jmp
out
add
dec
je
mov
sub
push
or
push
xor
test
vcvtps2pd
jns
add
jl
fisttpl
clc
mov
xor
incb
mov
outsl
fldcw
dec
push
adc
movsl
sub
or
rcrb
sub
xchg
movsl
jnp
sub
incl
xchg
gs
lock
imul
or
xchg
mov
jl
xchg
xor
cs
push
push
aam
mov
in
mov
fbld
or
rorb
push
rcl
add
add
mov
jp
push
mov
jmp
cmp
and
pop
xor
add
adc
in
stos
dec
mov
pop
fs
js
negb
shrl
mov
or
xchg
ja
leave
into
shlb
mov
sub
push
mov
cwtl
mov
bound
pop
lret
mov
adc
inc
shll
outsl
mov
lea
xchg
xchg
aaa
sbb
mov
mov
gs
fisubrs
cmc
jae
mov
push
xchg
je
ret
inc
incb
icebp
addl
jecxz
and
andb
and
add
add
loope
sub
cmc
ret
jge
int
push
xchg
mov
mov
mov
ret
popf
sbb
sub
or
loope
cmp
push
lahf
dec
adc
jb
mov
and
sbb
sub
xchg
add
mov
shrb
push
xchg
jecxz
jp
testl
and
loop
push
sahf
loop
decb
xchg
rolb
in
sahf
xorl
repnz
shl
call
pop
dec
and
sbb
inc
cmp
imul
das
pop
inc
or
cmp
cld
ljmp
mov
xlat
add
nop
inc
jno
outsl
fcompl
cmpb
das
xor
pop
or
mov
xor
int3
cmpb
imul
cmp
cmp
cmp
push
push
sbb
pushf
ljmp
rclb
mov
stc
and
mov
jge
les
pop
into
sar
mov
inc
or
aad
lahf
sub
dec
out
cltd
jp
mov
lret
jne
dec
jmp
and
pop
popf
lea
xchg
jp
push
sbb
bound
xlat
ljmp
jne
pop
mov
mov
sub
gs
aad
xchg
xchg
dec
cmp
inc
mov
cmpsb
imul
flds
lahf
imull
daa
mull
mov
in
or
push
cmc
jne
std
cmp
leave
lahf
test
js
push
push
and
push
imul
push
pop
sbb
push
ja
fmuls
or
add
mov
pop
adc
test
hlt
dec
in
xchg
dec
dec
sub
push
xor
jp
pop
shrl
xor
mov
xchg
mov
test
cltd
int3
xor
lahf
xchg
jne
mov
outsl
cwtl
mov
out
xor
ja
cmp
sti
jns
fnstenv
insl
test
sub
int
lds
sub
call
mov
repnz
pop
sub
movsl
es
lret
adc
ds
clc
ret
movsb
mov
sub
adc
popf
xchg
cmpsl
imul
loop
negl
fdivl
adc
mov
into
mov
movsb
inc
mov
psrlw
inc
loop
dec
ljmp
in
xchg
into
pop
fldt
mov
mov
aas
adc
stos
rorl
xor
in
mov
xchg
in
hlt
fldl
aad
bound
or
mov
add
push
pushf
add
out
inc
sbb
test
imul
push
pop
stos
adc
decl
xchg
ds
repz
jno
xor
addb
and
cmc
scas
sahf
movsl
mov
mov
jno
dec
inc
mov
inc
add
std
lods
fcompl
out
adc
mov
cmp
inc
push
outsb
cltd
xor
pusha
das
inc
push
adc
pop
push
popf
sub
pop
mov
fiaddl
mov
or
arpl
cwtl
xor
enter
loop
fisubrs
and
fmuls
or
stos
cmpsl
adc
aas
xor
in
sub
jmp
cltd
movl
mov
lods
nop
loop
and
push
jo
in
popf
mov
test
sub
repz
mov
das
dec
xchg
push
pop
sub
mov
mov
cmp
adc
pop
push
add
pop
push
das
and
icebp
fsub
sarl
mov
mov
jp
xor
jmp
or
ret
or
cmc
pop
aam
jge
and
in
jg
icebp
notb
mov
xchg
or
cmp
xor
or
cmpsl
rolb
lret
stc
sahf
sahf
je
dec
test
xchg
ds
lea
mov
mov
sbb
pop
jne
adc
sbb
xchg
inc
bnd
lret
mov
shll
or
and
daa
aam
js
cmp
outsl
push
lods
daa
fs
dec
insb
aas
jl
push
ljmp
insl
out
jmp
stos
mov
mov
shrb
xchg
arpl
leave
andb
shll
mov
push
push
scas
push
xchg
fcomps
and
push
imul
ljmp
xlat
pop
adc
test
and
pop
and
pop
dec
out
ss
sub
sub
loop
add
pop
dec
rcl
cld
dec
cwtl
and
loop
repz
packsswb
cli
xchg
add
xor
dec
mov
mov
xchg
pop
sub
pop
cmp
lock
jbe
mov
imul
jg
cli
sbbl
repz
sahf
xchg
es
add
mov
mov
sahf
mov
pop
es
ja
stc
lea
mov
sub
add
ror
fsts
xchg
cmp
movsb
cmpsl
mov
loopne
sub
mov
insb
push
inc
cltd
pop
cmpsb
in
mov
aaa
push
push
jl
sti
xor
inc
jl
add
dec
cli
fwait
sbb
inc
ja
stos
sub
push
inc
stos
in
shrb
jmp
jl
xchg
push
cmpsl
dec
mov
loop
arpl
jge
rorb
jne
xchg
add
dec
lahf
arpl
and
lcall
cltd
mov
lahf
loop
sti
jp
fsubrp
cmc
push
pop
sub
mov
dec
out
push
push
or
pop
into
loop
cld
cmpl
dec
call
scas
pop
jno
cmp
mov
sbbb
mov
sbb
lock
cwtl
mov
cmp
fdivrp
jbe
ss
xchg
and
test
jb
jb
pop
xchg
lds
daa
testl
cmp
and
xrelease
mov
int
sub
daa
mov
and
sahf
arpl
mov
mov
sub
sbb
xor
push
insl
dec
out
inc
les
negb
cmp
int3
or
dec
xchg
test
in
jb
cmpsl
jns
imul
jecxz
test
leave
iret
push
aaa
jecxz
dec
gs
pushf
push
jbe
pop
out
jns
mul
rclb
or
lret
and
and
shll
sbbb
pop
xchg
inc
jno
sbb
mov
mov
stos
rorl
fistpll
cmp
pop
roll
test
addr16
addl
xor
shrb
jb
int
in
lock
out
or
jle
xor
lahf
inc
outsb
je
pop
sub
sarl
es
push
insb
inc
push
dec
jmp
xor
or
inc
pop
jmp
xor
push
lahf
leave
xchg
push
add
loop
ficompl
test
test
mov
lock
loope
mov
gs
push
sbb
lahf
orb
rorl
outsl
or
lods
fstpt
dec
add
mov
mov
sti
insl
jecxz
or
std
mov
lcall
lock
jl
enter
mov
and
or
xlat
jg
ja
movsl
fmul
adc
sub
stos
in
adc
inc
xlat
rep
enter
adc
in
add
sbb
rclb
push
out
cli
inc
data16
mov
jmp
dec
or
in
bnd
movl
jno
stos
aam
xor
xchg
test
dec
in
out
cmp
mov
fisubs
mov
sarb
ja
insb
jns
or
outsl
xor
jb
and
divl
fidivl
xor
loop
les
inc
out
decl
mov
scas
push
cmp
sub
js
jb
das
cmp
cmp
hlt
in
out
push
inc
lcall
sub
push
cmp
xchg
add
sbb
decb
jp
and
lods
cmp
xchg
lods
aas
sbb
dec
test
lretw
push
sbb
lahf
mov
push
or
lods
add
in
push
mov
testl
outsl
mov
fcoms
pop
outsb
sub
les
mov
dec
mov
lods
push
xor
aam
mov
sub
in
stc
rcll
jne
cmp
and
mov
dec
adc
pop
pop
inc
rolb
or
lret
pop
outsb
dec
mov
sub
adc
or
or
fwait
in
and
cmp
inc
int
in
stc
xchg
rclb
xchg
movsl
jp
push
ds
dec
push
adc
jle
inc
out
fldcw
out
pop
cld
mov
clc
dec
es
scas
jp
push
sti
cmp
repz
jg
fimuls
mov
fmull
cmpsl
jno
xor
sub
jp
cld
push
fdiv
add
dec
inc
sub
movsb
std
fsubrs
xchg
push
aam
mov
sbb
xchg
add
add
ss
lahf
sub
andb
jle
dec
lcall
scas
shl
rorl
pop
sarl
cmc
jecxz
outsl
fmuls
and
mov
stc
or
fcom
repnz
call
movsl
xor
fisubrl
lcall
xchg
pop
sub
fcoml
imul
mov
repz
ficoms
jle
pop
repz
out
out
lret
les
lds
lret
mov
cmp
rolb
push
mov
sub
pop
inc
dec
sbb
repz
and
inc
push
jge
mov
mov
sbb
dec
cmp
addr16
push
pop
aaa
jne
loope
daa
clc
shlb
mov
aas
decl
loopne
arpl
push
cltd
mov
mov
mov
data16
enter
cmpsl
gs
sub
sti
lock
ja
cmp
mov
cltd
lock
out
addb
lea
aaa
cwtl
inc
add
addr16
stc
xchg
js
push
or
test
dec
flds
enter
addr16
loop
adc
out
out
push
push
xchg
lcall
dec
mov
and
mov
add
js
je
stos
rorl
or
test
sbb
in
mov
scas
sub
adc
pop
or
mov
stos
int
push
pop
jp
lock
ljmp
loope
add
xor
lods
push
mov
imulb
pop
imul
addb
cltd
or
lret
jmp
pushf
loopne
lret
in
sar
jg
fstpl
ret
aad
fs
sub
orl
in
stc
bound
cmpsl
insb
rolb
inc
push
push
stos
push
xchg
test
nop
sarl
adc
xor
xchg
outsl
adc
sarb
push
js
xor
fidivs
xchg
sub
mov
imul
out
cld
jmp
nop
fs
and
movsb
into
rcrl
and
push
jbe
sbb
pop
ss
cmc
clc
in
adc
in
jo
icebp
cmp
mov
lock
jmp
inc
fisttpl
xchg
xchg
xchg
fs
and
lret
mov
sub
jmp
jns
loop
and
popa
push
add
dec
or
dec
sbb
mov
jne
lock
mov
into
ret
into
test
fmul
shlb
jbe
loope
fs
popa
sub
dec
xor
mov
iret
sub
rorb
mov
push
ficoms
daa
jae
inc
xchg
add
adc
int
lods
imulb
mov
pop
xor
mov
sti
enter
and
out
insl
test
movsb
lds
in
ss
and
dec
notb
movsl
mov
daa
cs
xchg
mov
mov
dec
sbb
pop
mov
dec
hlt
jl
inc
inc
mov
xchg
setle
sbb
lret
std
xor
inc
dec
inc
mov
repz
ja
fldl
sbb
cmp
sti
or
jle
out
xchg
adc
iret
int
outsl
cmp
inc
cli
enter
js
scas
nop
inc
and
sbb
or
xchg
aaa
dec
movsl
inc
push
pop
leave
and
sahf
dec
jmp
sbb
jno
cmp
inc
outsb
lock
mov
jge
clc
mov
bound
mov
mov
sub
aas
pusha
mov
push
jb
in
scas
jge
add
or
outsb
dec
mov
lahf
xor
mov
or
shll
int3
gs
outsl
imul
test
mov
jnp
fsubrs
stos
int3
dec
sub
mov
or
clc
addr16
fadds
cmp
xchg
rclb
call
add
mov
out
push
bnd
pop
and
mov
in
ja
and
jmp
pop
lret
int
push
fiaddl
scas
sub
add
mov
push
pop
fwait
fs
adc
xchg
dec
and
inc
lahf
clc
pop
jns
cmp
sub
push
mov
push
idivl
mov
fists
ret
das
mov
and
cmp
pop
out
xor
and
adc
pop
jle
daa
dec
and
pop
clc
mov
push
pop
sub
jns
scas
scas
and
push
xchg
cwtl
outsb
add
imul
daa
in
push
lods
mov
lods
sub
jge
cwtl
cmp
cs
imul
pushf
jno
int
dec
jp
cmc
roll
and
push
sahf
hlt
and
lock
rcrl
aam
sub
mov
or
pop
jnp
xorb
push
frstor
adc
jae
sub
sbb
jb
loopne
xchg
mov
loop
push
fdiv
ror
push
repnz
xor
inc
cmp
or
mov
dec
inc
add
sahf
icebp
cltd
lcall
inc
jb
cmc
popa
shrb
jg
or
jne
mov
adc
xchg
loopne
xchg
cmp
hlt
gs
imul
xor
shr
add
push
xchg
or
ljmp
cmp
or
push
sbb
rclb
pop
ror
fs
mov
push
xchg
fdivr
lds
push
xchg
rorb
inc
mov
lret
jb
fiadds
enter
or
lcall
ficoms
mov
xchg
stos
enter
mov
gs
mov
adc
cmp
push
pushl
dec
jb
adc
or
inc
cmp
mov
dec
mov
or
jns
sbb
adc
lcallw
mov
dec
dec
adc
jl
jmp
or
insl
xchg
sub
hlt
loopne
subl
sahf
inc
in
dec
cmc
lock
jmp
scas
jmp
out
sub
pop
aam
jb
dec
loope
mov
test
inc
mov
or
push
fs
subb
rorl
flds
inc
popa
ljmp
inc
dec
jns
cs
xchg
push
xchg
or
ja
gs
push
cmp
dec
xchg
shll
sub
ss
js
or
adc
lds
push
inc
daa
xchg
jl
cmp
pop
out
loopne
mov
je
push
pop
jge
mov
ret
cld
add
xlat
lahf
inc
jmp
lret
pop
mov
mov
lock
jb
fcmovbe
xor
or
lahf
pop
icebp
jno
popa
xor
or
cs
pop
pusha
cli
mov
dec
jmp
cmovge
inc
enter
mov
jle
jecxz
popl
mov
and
mov
icebp
mov
dec
and
out
out
jae
adc
push
jno
mov
push
fisttpll
mov
les
inc
pop
sbb
or
pusha
jmp
ljmp
cmp
mov
pop
scas
adc
jne
sub
adc
xchg
mov
xchg
pusha
aam
mov
mov
mov
ss
fwait
das
inc
roll
jns
jno
je
fwait
sbb
cmpsl
imul
pop
pop
mov
xchg
rol
fistps
or
jnp
mov
into
ss
and
push
push
and
mov
repz
pop
adc
xchg
jo
add
outsl
aad
in
mov
je
mov
or
cmp
add
mov
stos
aam
loope
test
in
lods
test
stc
mov
inc
aam
or
dec
cmp
sbb
sub
pop
scas
jecxz
aad
lods
sbb
add
sub
mov
fadds
pop
pop
sub
dec
bound
outsl
pop
xchg
lods
adc
pop
cmpsl
aad
dec
mov
mov
inc
popf
lods
lahf
lock
imul
leave
decl
dec
jecxz
mov
inc
mov
push
dec
fbld
mov
gs
in
cli
dec
cmpsb
sub
mov
mov
aas
cmc
ja
pushf
mov
gs
push
jnp
adc
jp
roll
xchg
sti
std
pop
inc
inc
pop
aad
sub
enter
call
jo
lret
push
insl
push
nop
cmp
jae
cmc
arpl
mov
lds
scas
rol
in
inc
sbb
lds
mov
cli
shrb
push
lret
push
jp
dec
or
jne
push
sbb
out
mov
or
in
inc
cli
dec
fimuls
mov
int3
or
lea
sti
pop
lret
out
push
out
jb
ds
fbld
and
cmp
jno
cmp
repnz
lret
or
push
out
mov
movsl
int
inc
mov
jb
xchg
jae
data16
push
adcb
sahf
adc
stc
ret
or
cmp
xor
dec
rolb
jo
mov
nop
loop
stc
bound
sub
jnp
je
ds
or
fnstenv
pop
sub
or
sbb
rcl
sbb
out
mov
mov
or
mov
pop
dec
mov
cmp
push
test
pushf
jno
cmpl
in
push
pop
mov
repz
std
mov
add
mov
mov
xchg
pop
sub
out
pop
or
pop
lret
or
iret
movb
mov
and
ret
ret
sub
push
or
loope
inc
push
pop
lret
lret
push
daa
orb
sub
push
arpl
jnp
xchg
mov
iret
dec
pop
xchg
pop
dec
int3
pop
pop
jge
or
and
cmp
mull
adc
and
push
pop
dec
nop
xor
jmp
lods
cmpsl
xchg
mov
test
sub
jb
std
insb
push
data16
push
out
cmp
stc
mov
popa
xchg
mov
pop
sar
pop
into
push
notl
sahf
jle
and
stos
pop
mov
sarl
sbbb
jns
cltd
dec
daa
sbb
jne
mov
std
lods
mov
push
sarb
or
ljmp
iret
mov
loop
rcrb
fwait
scas
imul
xor
cwtl
cmp
sbb
call
pop
or
or
bound
inc
ljmp
push
or
aad
cltd
in
xorb
inc
adc
popa
rcrb
enter
mov
jmp
sti
jmp
andb
mov
jae
pop
add
xchg
insb
xchg
and
pop
mov
bound
outsb
and
lret
mov
fs
mov
and
jae
jns
jae
int
out
mov
loope
lods
ret
or
cmp
inc
adc
ret
adc
clc
ja
xchg
fwait
adc
xlat
inc
mov
sbb
sbb
jbe
inc
fsubr
sbb
ret
inc
mov
out
loopne
jo
out
push
sbb
adc
incl
les
cmp
or
aad
data16
ret
filds
insl
mov
test
outsl
mov
into
repz
mov
nop
xchg
fisubrs
push
cmc
jge
testb
xor
repnz
inc
xor
aas
sbb
mov
stos
pop
pop
dec
cld
sbb
xchg
cli
fimull
add
bound
outsl
add
push
das
leave
outsl
pop
movsb
push
and
pusha
cmp
stos
or
imul
popf
xor
pushf
stc
jno
mov
mov
pop
mov
into
mov
jnp
popa
jg
push
mov
enter
mov
ret
frstor
hlt
inc
rcl
dec
pop
sub
pop
mov
cmp
mov
mov
cli
test
xor
mov
pop
mov
or
in
lahf
hlt
xor
mov
mov
cmpsb
icebp
fwait
push
rclb
pop
lock
insl
arpl
jecxz
lods
add
push
dec
pop
aad
mov
jmp
les
icebp
mov
fs
mov
mov
xor
ret
and
add
pop
pop
cmc
repnz
hlt
rolb
hlt
fwait
dec
pop
xchg
inc
mov
sahf
cld
outsl
ss
mov
add
call
sbb
mov
add
cld
jbe
jae
mov
ss
aaa
int3
inc
push
xorl
std
and
jmp
xorb
lret
mov
nop
hlt
push
mov
ffree
ds
in
xor
in
inc
pop
xchg
pop
mov
push
add
popf
pop
push
inc
xchg
rcrb
lcall
loop
jno
xchg
mov
test
es
and
divl
cld
mov
shlb
jmp
inc
pusha
ret
cmp
sub
stos
push
xchg
jb
cwtl
icebp
push
aad
lods
nop
lds
cmpsb
xchg
ret
xchg
lods
sbb
inc
cmpsb
xor
push
in
leave
sbb
dec
mov
add
les
sub
aam
orb
lods
dec
out
sbb
dec
sbb
std
mov
sub
push
shlb
lea
jbe
divl
cmp
subl
fcoml
out
sub
mov
push
out
jbe
arpl
pop
pop
sbb
push
cmp
test
cmp
cwtl
cmp
jecxz
sbb
enter
shr
in
stos
test
lret
popa
fcompl
out
in
push
cmp
lret
sub
outsb
icebp
scas
jp
arpl
mov
sar
mov
lds
loop
mul
push
outsl
add
aas
addr16
adc
and
or
outsb
fldl
adc
cwtl
mov
aaa
lret
int
and
movsb
jb
mov
rclb
cmpsl
aas
fidivrl
push
push
sub
fdiv
mov
push
repnz
out
aad
pusha
fldcw
push
cmp
stc
aas
pop
mov
inc
mov
or
mov
and
aam
int
sti
popf
mov
inc
push
into
fidivrs
cltd
idivb
aad
test
jp
ds
icebp
stos
jno
or
test
mov
pop
std
popa
lret
fcomip
mov
pop
dec
and
pop
addr16
push
jmp
and
arpl
sub
pushl
sub
andb
jmp
dec
lret
arpl
stc
inc
mov
cld
and
sbb
sub
pop
or
int3
push
out
lods
ds
inc
das
mov
aam
inc
verr
lahf
sub
push
mov
ja
fdiv
sub
cli
fs
loope
mov
pop
mov
push
lods
movl
inc
incb
mov
lock
mov
out
pop
sbb
mov
mov
cs
fst
andb
push
xor
popa
mov
insl
xchg
shrl
mov
mov
mov
icebp
sbb
add
cmp
dec
test
stc
test
mov
dec
imul
mov
jmp
sarb
push
decl
leave
sub
xchg
aas
popf
jnp
ljmp
mov
je
lock
pop
loopne
or
pusha
push
and
inc
mov
std
mov
xchg
into
repz
push
std
leave
xchg
push
rolb
jb
mov
dec
lock
call
inc
xor
lahf
ja
sbb
scas
lcall
inc
pop
cs
push
mov
mov
push
mov
popa
fdivrl
mov
jl
push
sub
xor
add
leave
cmp
loop
sbb
dec
out
imul
jbe
daa
sub
mov
jg
jnp
push
or
pop
rclb
adc
mov
in
sub
pop
cs
movl
jne
in
das
outsl
loope
jbe
fnsave
and
mov
jbe
into
lahf
pop
or
inc
aas
jp
dec
cltd
lods
in
pushf
push
cli
sbb
das
mov
scas
sub
xor
lds
inc
js
mov
or
outsb
push
mov
xchg
push
push
test
pop
xchg
inc
cmpb
ljmp
xchg
fldl
adc
mov
jle
add
popf
jne
and
bound
fs
les
lcall
stos
pushl
repnz
xchg
jmp
ja
add
dec
repnz
xchg
int3
shrl
jno
mov
inc
sbb
mov
xchg
jns
mov
gs
mov
arpl
cmpsl
test
xor
scas
ljmp
nop
push
push
and
sub
cmp
es
cmpsb
dec
scas
add
sub
pop
cmp
mov
sbb
jge
mov
and
es
hlt
push
inc
pop
mov
aam
push
les
mov
mov
mov
mov
sbb
jle
mov
jb
shrl
xchg
cmpb
sbb
aaa
sbb
test
xchg
in
test
or
dec
dec
mov
outsl
jnp
jbe
jne
inc
mov
dec
dec
push
test
mov
lock
test
pop
or
inc
pop
repnz
sub
cmpsb
adc
jle
shr
pop
add
loopne
enter
xchg
add
xchg
and
lods
adc
rcrb
mov
pop
aas
in
lret
sbb
jns
adc
dec
sbb
outsb
sub
cmp
andb
test
dec
into
sub
or
xorb
lahf
shrl
lds
add
bound
xor
jae
dec
outsb
je
xorb
pushf
clc
cmp
insb
in
pop
out
inc
inc
and
mov
loopne
fidivrs
enter
push
sbb
pop
cmc
push
jb
lods
add
dec
cmp
pop
push
jecxz
addr16
scas
stos
dec
cmp
add
sbb
pop
test
xor
xchg
in
jbe
jp
popa
xor
je
and
mov
adc
out
mov
push
pop
mov
add
or
test
rclb
cmp
inc
rcrl
xor
push
ds
in
cmp
xchg
mov
cli
add
and
lds
int3
rclb
cmp
xor
nop
ds
adc
and
sahf
xchg
sbb
fsubrl
les
inc
mov
pop
and
call
jge
cmc
icebp
lret
pop
jnp
ror
push
cmp
pop
inc
sbb
aaa
dec
mov
jns
pushf
popf
jb
mov
imul
pop
mov
jbe
pop
push
add
push
push
xchg
adc
inc
xchg
push
pop
jns
cmp
cwtl
add
dec
lock
insb
mov
cmc
xor
xor
imul
pop
in
mov
leave
lock
and
sub
push
icebp
mov
out
sub
sbb
and
add
xor
lea
outsl
aam
sbb
mov
movsb
out
sbb
xor
xchg
jno
mov
negb
pop
stos
dec
jmp
lock
ja
mov
in
adcb
and
dec
sarb
cmp
adc
and
ljmp
xchg
aam
nop
mov
mov
je
aaa
sub
adc
scas
pop
in
inc
push
int
popw
cmp
mov
iret
cmp
jg
or
clc
mov
lret
mov
mov
aaa
mov
movsl
hlt
pop
adc
xchg
jg
js
sbb
aas
push
daa
lret
mov
inc
dec
pop
jl
es
adcb
cli
sbb
test
repz
into
mov
sub
pop
pop
rcrl
jge
flds
adcl
jne
ljmp
ret
jno
rolb
movsl
mov
insl
pusha
xchg
jb
fidivrl
iret
inc
push
inc
pop
pop
fadd
jo
add
mov
pop
xchg
ret
shll
adcl
fidivrs
lock
shll
mov
mov
fisubrs
push
ljmp
xchg
push
and
cmp
push
xchg
adc
test
mov
les
mov
xchg
adc
jbe
test
int
call
add
inc
scas
push
mov
imul
push
ss
lret
cmp
icebp
mov
pop
add
andps
pop
push
adc
xlat
xchg
mov
ffree
daa
mov
mov
push
cmp
lret
adc
cmc
add
ficoml
or
or
or
mov
movb
aam
push
jns
jo
stos
mov
jb
addr16
jae
fbld
jmp
movsl
pop
push
sub
or
add
xchg
push
fwait
sub
xchg
cmp
sti
test
xchg
push
es
jbe
int3
and
inc
lea
std
ror
jp
sbb
bound
aad
push
push
adcl
jnp
fdivrs
cmp
aad
xor
inc
inc
daa
cmpb
mov
inc
or
inc
sti
shrl
push
sbbl
adc
push
in
insb
lahf
out
stc
out
lods
inc
mov
or
pop
cmpsl
inc
inc
pop
inc
mov
dec
mov
repz
clc
icebp
or
xchg
ljmp
int3
repnz
clc
or
pop
adc
sub
popa
repnz
clc
rclb
cmpsl
xchg
cmp
das
mov
adc
sbb
es
sahf
mov
adc
mov
sub
test
fstps
insb
xchg
dec
add
mov
dec
daa
mov
or
rorl
rcrb
mov
adc
scas
aam
dec
nop
adc
push
aaa
xchg
xchg
fdivrs
mov
xchg
inc
mov
xor
or
dec
lahf
xchg
mov
mov
push
ljmp
nop
stos
in
imul
insl
xchg
pop
fsubp
add
insl
pop
jl
push
add
xchg
push
pusha
inc
add
fisubs
xor
ljmp
rcrb
icebp
xchg
fsubr
xchg
dec
test
popa
pushaw
dec
int3
lock
sub
and
inc
or
nop
addr16
fcompl
xchg
dec
fiadds
int
mov
pop
push
fs
fidivrs
aaa
rcll
imul
sub
and
nop
mov
mov
mov
hlt
inc
popf
xor
rcr
add
fsubl
pop
cmp
imul
xchg
in
loop
dec
add
mov
out
cmp
mov
cmp
ja
loop
out
jle
jb
sbb
and
add
pop
xor
xlat
psrad
mov
push
mov
xor
int3
lods
inc
mov
adc
push
call
stos
cmp
push
cltd
cmp
fdivl
rcrl
jg
or
pop
xchg
je
jg
ret
testl
stc
scas
sub
cli
mov
sbb
xor
shr
xchg
sbb
pop
sbb
add
pop
sub
add
mov
cli
push
pop
xchg
sti
ss
insb
adc
fucomip
movsl
into
jo
push
xchg
xchg
sub
fisubl
xchg
mov
pop
xchg
cmpsl
add
jno
cs
out
in
dec
sahf
sbb
pop
fwait
repz
test
cmp
or
xor
insl
mov
adc
push
cmp
pushf
dec
lock
cmpsb
push
int
rorl
sbb
push
or
enter
add
leave
pop
push
or
add
jg
xor
push
pop
pop
movsb
push
imul
dec
and
sahf
push
lahf
and
in
and
mov
pop
lock
xor
aas
jo
call
jmp
fimull
test
mov
xor
jae
or
ljmp
dec
cld
loope
mov
lea
outsb
mov
pop
or
lods
mov
dec
lcall
jae
lea
xor
je
lea
stos
jo
inc
fdivrs
xor
jmp
addr16
cmp
or
pop
and
or
and
jmp
adc
rcll
mov
and
scas
lret
divl
shll
fwait
push
in
rclb
xor
push
aad
test
clc
lret
shl
dec
bound
fsubrs
scas
cmp
test
jmp
or
add
add
mov
jne
mov
mov
dec
push
fcomip
mov
push
aaa
lret
loop
add
push
sub
cmp
mov
shl
int3
inc
sbb
scas
xor
sub
or
repnz
dec
cs
or
sahf
pop
sahf
dec
xchg
roll
xchg
xchg
mov
jae
outsl
mov
out
int3
cltd
ficomps
mov
enter
cmp
mov
push
cmp
mov
or
push
aaa
adc
pop
jb
movsb
mov
les
xchg
jle
lods
xlat
dec
out
push
add
in
fldenv
jmp
outsb
sbb
fldcw
or
mov
loope
mov
pop
cmc
mov
cmp
add
add
cmp
std
out
sbb
cmp
mov
mov
mov
out
sub
sub
pushf
inc
jl
rcrl
mov
nop
aaa
push
sub
cmp
in
repz
add
stos
loopne
mov
sbb
cmp
rep
dec
add
xchg
sub
inc
pop
push
lock
mov
lret
aaa
ds
jp
push
rolb
sub
cmp
test
mov
and
push
sub
cmp
add
mov
std
insb
lret
test
xchg
call
int
jns
sahf
adc
push
xchg
xchg
mov
mov
dec
daa
inc
cld
cmpsb
lock
outsb
dec
adc
xchg
lds
or
sub
dec
sahf
stos
aad
decb
insl
push
jp
enter
pop
shrb
test
pop
cmp
scas
inc
mov
in
push
js
fisubrl
or
rep
pop
in
cmpsl
cmp
lods
mov
fcomps
xor
dec
nop
mov
add
push
mov
mov
dec
lret
jbe
std
call
stc
sti
insb
or
gs
inc
xchg
or
jecxz
rorl
shl
call
mov
jae
sbb
or
sti
cmc
pop
mov
out
sarb
loope
jg
adc
add
jo
sbb
and
pushf
mov
jle
adc
xor
ret
xchg
jnp
mov
rolb
push
xorl
in
mov
add
push
lret
repz
cvtps2pd
jecxz
mov
rcrl
or
push
jmp
ret
icebp
in
lods
pop
js
adc
ret
add
cli
addr16
vmovdqa
push
and
dec
je
pop
fldcw
mov
and
mov
cld
and
imul
js
push
adc
cwtl
mov
and
add
pop
cmp
imulb
sbbb
lea
sahf
insb
leave
add
pop
xchg
mov
fcomps
push
movsb
ret
lcall
repnz
dec
push
add
cld
stc
jle
adc
cmovbe
mov
jg
xchg
roll
and
push
mov
int
outsb
stos
mov
cmp
mov
scas
add
iret
jns
push
lret
icebp
into
sbb
test
or
xor
ret
test
and
xchg
mov
sar
in
or
ds
jg
ret
imul
unpcklps
pop
outsb
and
outsb
das
pop
sub
icebp
mov
xor
and
cmc
xchg
nop
sbb
mov
jns
mov
xor
xchg
inc
push
inc
nop
sub
mov
rolb
xchg
jo
test
pop
pop
and
lea
and
push
movsb
dec
loopne
imul
hlt
jnp
int
cmp
pop
stos
ja
mov
cmp
inc
and
mov
pop
int3
dec
cltd
adc
loop
pop
adc
leave
outsb
aad
sbb
aas
loope
sbb
push
mov
dec
cltd
out
or
mov
or
adc
mov
pop
jle
fcmovnb
mov
pop
sub
ds
mov
push
mov
pushf
pop
jnp
stos
incb
cs
or
adc
ss
inc
test
mov
lahf
test
inc
or
sub
mov
adc
lret
jecxz
xchg
push
in
mov
rclb
mov
sub
dec
jae
mov
xchg
and
or
xchg
xor
mov
mov
push
inc
lcall
mov
lock
mov
sub
mov
pop
ror
inc
cld
fcom
sub
sbb
jl
scas
adc
notl
mov
leave
inc
call
test
daa
dec
cmp
xor
pop
repnz
xchg
mov
outsb
pop
xchg
hlt
cmp
mov
xchg
and
mov
add
hlt
aaa
insb
das
sahf
jno
cmp
fbld
cmp
rcr
mov
int
lods
adc
mov
or
pop
fsubl
dec
cmc
xchg
cmc
push
leave
out
cltd
testl
pop
pushf
insb
and
ss
jnp
ret
adc
sbb
test
fcoml
and
aad
sbb
pushf
xchg
lcall
jg
xor
inc
lret
xchg
insb
lret
ss
add
mov
lret
xchg
xor
ja
in
shll
push
xor
inc
inc
cmp
jmp
in
int
lret
xchg
xchg
xor
mov
mov
in
pop
mov
les
mov
push
xchg
mov
cmc
les
mov
cmp
mov
sub
xchg
sbb
and
sub
nop
mov
add
ret
sub
sbb
xchg
stc
jge
divb
leave
or
repnz
les
push
pop
stos
stos
fwait
data16
push
test
xor
adc
pop
mov
pop
push
mov
dec
xchg
jecxz
adc
mov
push
xchg
cmc
jge
jle
sbbl
test
test
cmp
mov
xchg
and
fwait
mov
fidivl
enter
xchg
sbb
push
mov
push
test
inc
sti
sub
push
outsl
lods
andb
xchg
mov
icebp
fst
inc
vcvttpd2dqx
sarb
stos
in
ja
daa
mov
in
scas
dec
pushf
xchg
inc
data16
xor
and
adcl
jbe
scas
sbb
shr
repnz
or
ret
or
mov
dec
mov
mov
popa
lds
pusha
ss
negl
inc
mov
fstp
outsb
icebp
popf
mov
push
dec
dec
cmp
scas
mov
jns
jnp
flds
out
jmp
loopne
inc
loop
cmp
out
aas
mov
jge
sub
into
sbb
mov
in
mov
stos
mov
push
xor
inc
sahf
dec
jae
cmp
shl
inc
sbb
pop
test
mov
movl
loope
sarb
push
inc
sub
pop
in
fnstsw
add
in
inc
xor
movsl
sub
adc
stos
addr16
aas
in
aas
and
cmp
ljmp
mov
xchg
out
arpl
sub
mull
or
dec
jg
popf
adc
cmc
popa
xchg
add
test
adc
push
sub
in
jp
jnp
decb
inc
repnz
xor
shlb
js
andl
cmp
push
push
in
cli
test
dec
imul
ror
insb
enter
rorb
pop
sahf
push
sbb
test
cmp
cmp
fxch
xor
dec
dec
xchg
rcrb
mov
pop
dec
mov
push
into
popf
xor
xadd
clc
fimuls
daa
xchg
ljmp
inc
scas
pusha
mov
pop
lea
out
popa
idivl
daa
les
repz
sbb
inc
cmp
ja
ja
ret
adc
dec
mov
xchg
ja
or
mov
pop
push
jmp
ja
addr16
mulb
in
or
cmc
aad
jge
push
mov
nop
bound
inc
mov
push
pop
js
rorl
fidivrl
mov
mov
in
pop
mov
stc
and
or
push
xchg
push
sub
imul
push
orb
fstpl
jnp
inc
nop
pop
push
cmc
mov
adc
loopne
aaa
lret
jae
dec
and
add
es
adc
cmpsb
daa
push
int3
xor
dec
cltd
cmp
movsl
outsl
adc
jo
iret
ror
dec
std
sbb
dec
test
add
pop
xor
js
nop
lods
mov
and
mov
data16
incl
sub
sub
insb
dec
scas
jb
shlb
repnz
pop
stos
dec
cld
inc
dec
ficompl
cmc
pop
jnp
popa
xchg
test
jl
test
and
ss
hlt
gs
js
dec
ficoml
pop
addl
imul
dec
xlat
jp
in
mov
mov
bound
sarl
aas
imul
mov
or
inc
ret
push
lahf
adc
add
mov
mov
test
sbb
xchg
aaa
pop
xchg
sbbl
sub
cmp
movsl
adc
xchg
push
xor
mov
mov
xchg
inc
push
mov
ss
jnp
imul
scas
xchg
dec
sar
clc
jb
pop
enter
rcrb
sahf
add
hlt
ja
cmp
std
sub
jne
es
xchg
out
mov
js
xor
jo
bound
out
fs
lds
xor
push
fbstp
xorb
pop
cld
mov
repz
sbb
outsl
clc
and
icebp
test
inc
dec
xor
sar
cltd
fcomps
dec
and
shll
cmp
das
mov
lret
cltd
mov
mov
ss
scas
loopne
inc
push
sbb
cmpsl
bound
jno
das
in
mov
pop
or
rcrb
loopne
xor
sub
sbb
out
inc
pushf
mov
stc
xchg
jns
fdivrl
cltd
cmpb
into
dec
loope
pop
icebp
and
sub
lea
pop
lods
fidivrs
in
jmp
mov
shr
mov
xchg
xchg
sub
int
sbb
int3
add
test
pusha
cmc
cmpsl
or
insl
shlb
int
sub
repnz
sti
dec
or
mov
push
call
sahf
arpl
push
testb
int
adcb
ficompl
rol
lea
mov
loopne
jecxz
push
mov
jbe
jmp
mov
lcall
aam
js
les
movsb
popa
les
std
cmp
cmp
popa
loopne
icebp
rcll
pop
push
xchg
sub
les
push
js
repz
scas
adc
loopne
adc
jne
jmp
and
push
sbb
sar
out
jb
mov
dec
mov
ljmp
dec
cmp
or
shr
or
jmp
insb
xchg
outsb
jle
cld
hlt
loop
jmp
loopne
hlt
or
mov
xchg
xchg
ljmp
aam
loope
push
mov
lcall
idivb
cmp
xchg
in
xchg
push
or
std
sbb
and
ss
enter
jmp
repnz
in
push
xor
push
xor
hlt
mov
jle
add
lahf
in
pop
cmp
sbb
sub
jae
es
push
and
stos
cwtl
sbb
or
mov
int
mov
ljmp
cs
js
mov
fsubrs
inc
icebp
inc
les
addl
push
or
lds
xor
jns
bound
fwait
stos
fnstsw
cmc
sbb
jno
fisubrs
push
or
sbb
sub
out
popa
dec
inc
repnz
sti
bound
pushf
pop
mov
jbe
and
out
push
daa
outsl
or
mov
cmc
mul
adc
cmp
or
out
daa
pop
mov
lret
sahf
cwtl
jbe
ds
mov
sbbl
and
lea
cs
sbb
aas
xchg
xor
push
mov
sbb
sbb
addb
scas
adc
or
or
jo
sub
shrb
pop
aad
dec
dec
shlb
xor
into
imul
jb
lret
fdivrl
lea
bound
and
idivl
in
add
or
mov
mov
scas
lahf
sub
testl
jo
inc
adc
adc
bound
insb
jecxz
insl
and
push
jae
out
mov
mov
fucom
les
mov
inc
mov
jne
adc
fcoml
in
sti
ds
jne
cwtl
xchg
lods
cwtl
test
ret
inc
pop
out
aaa
sahf
dec
inc
pop
xchg
jbe
ret
out
repnz
pushf
insb
repnz
sbb
dec
in
cs
jae
rcl
mov
cmp
add
mov
adc
xchg
or
lods
cmp
aas
add
lret
pusha
popf
push
fstl
vpunpcklwd
dec
jns
jmp
mov
outsl
sarb
push
shrb
int
push
jmp
imul
xor
sbb
call
fildll
cld
jle
ljmp
mov
lods
mov
jecxz
mov
push
xor
hlt
xchg
sub
into
mov
mov
mov
out
std
clc
rclb
aaa
rorb
in
rcr
sub
outsb
cmpsl
adc
cli
jmp
pop
jo
shrb
inc
aam
lcall
es
rcl
and
sti
repz
push
mov
test
icebp
add
and
push
sub
mov
lret
repnz
jns
stos
add
push
out
sahf
sub
test
push
and
jnp
bound
add
movsl
dec
test
inc
mov
inc
mov
mov
popa
inc
dec
stos
std
add
fidivl
lods
aad
hlt
pop
test
jg
or
cld
jae
mov
loopne
dec
loope
or
dec
push
push
sahf
fwait
roll
movsl
inc
push
inc
push
push
ret
xor
jns
cmpl
out
aas
jp
cmp
and
cmp
in
aad
fcomp
mov
mov
push
pop
cmp
stos
mov
leave
mov
rcl
push
push
inc
xchg
ds
call
scas
divl
pusha
and
cs
js
test
push
cmp
dec
mov
mov
pop
adc
call
and
push
jecxz
add
fidivrs
jle
xchg
inc
xchg
pop
fmul
or
push
addr16
cli
lahf
sub
out
hlt
mov
fisttpll
stc
or
fildl
into
jmp
nop
lret
and
shrb
mov
mov
inc
jns
daa
inc
mov
jmp
sub
ror
add
pop
xchg
jecxz
push
les
call
adc
enterw
lret
stos
lret
fidivrl
jae
push
mov
inc
out
add
stos
xchg
ja
sbb
iret
fisttpl
inc
rorl
test
es
movsb
lods
pop
xchg
jbe
jp
mov
adc
mov
sub
sub
cmp
pop
out
dec
test
lods
pop
fdivrl
cmp
jae
or
in
bsr
push
test
sbbb
enter
push
jg
cmp
mov
in
and
mov
xchg
or
sbb
ss
jge
fbstp
sbb
or
jge
sub
pop
cs
cmc
inc
push
loopne
push
xchg
imull
out
cmp
jae
pop
lahf
jns
ja
push
test
and
sub
lods
jp
pop
pushf
dec
add
xlat
xor
xor
ret
cmc
sbb
jnp
test
aam
fdivrl
xchg
and
mov
scas
push
push
mov
mov
pop
or
cmp
mov
inc
mov
mov
or
cwtl
adc
imul
loope
mov
out
in
pop
pop
movb
loope
test
cmp
mov
andl
iret
inc
lods
into
xor
sub
mov
cmp
pop
and
fsts
xchg
cmpsl
cli
adc
cmpsl
inc
addb
mov
and
dec
inc
arpl
mov
dec
out
mov
fcmove
jo
cli
icebp
mov
imul
push
mov
insb
nop
out
iret
inc
xor
xchg
jp
adc
or
sbb
pop
mov
cmp
rolb
jo
push
sahf
or
imul
sahf
push
icebp
int3
ds
push
mov
fdivs
popf
pop
bound
adc
pushf
dec
xor
out
cltd
mov
insb
inc
push
adc
jp
scas
mov
jmp
cld
mov
mov
leave
scas
int3
jne
sub
out
icebp
stos
and
fwait
sbb
lcall
sbb
mov
ljmp
dec
fs
pop
mov
cmpsb
imul
fwait
pop
insb
mov
rcrl
rolb
imul
jge
aam
push
ljmp
testl
lods
repnz
xchg
cmpsb
push
mov
sbb
leave
js
mov
test
xor
sti
sub
out
lret
repz
orl
lea
jns
mov
mov
jg
loop
mov
lock
sahf
cltd
adc
rcrl
loop
dec
test
pop
mov
and
icebp
sub
and
adc
mov
fadd
mov
adc
out
nop
mov
mov
js
pop
add
dec
mov
cmc
sti
cmp
roll
popf
mov
fisubrl
fwait
or
cmpsb
nop
stos
cld
lret
lock
push
std
ljmp
ja
add
or
out
dec
mov
popf
mov
mov
or
or
add
ret
lds
sti
divb
jle
call
adc
cmpb
in
outsb
dec
add
gs
fiaddl
mov
sub
jmp
mov
inc
rorb
sahf
pop
in
cmp
es
fstl
mov
dec
mov
jo
jno
jns
loop
add
sub
lods
loop
add
ret
bound
jbe
dec
mov
push
negl
ret
dec
sbb
dec
push
cmp
xchg
out
adc
cmp
jne
jnp
push
add
pusha
in
call
out
je
stos
sbbl
subl
sbbl
andb
jbe
inc
adc
insb
push
pop
or
cmp
xchg
andl
int
cmpsb
mov
in
js
xor
mov
fadd
out
xorb
stos
add
xchg
in
push
adc
jae
outsb
mov
sub
test
movsb
adc
sub
out
loopne
stos
fnstcw
jne
into
mov
push
xor
dec
mov
jo
popa
mov
mov
enter
xchg
mov
jae
mov
lret
cmc
je
les
aam
push
fstpt
xor
aaa
jp
lcall
xchg
lcall
pop
fsubrl
lret
mov
push
cmc
dec
movsl
xchg
inc
or
pop
push
in
xchg
cmp
shlb
aam
cmc
cmp
adc
int3
jmp
xor
xor
adc
movsb
jne
inc
jbe
cwtl
rclb
movsb
adc
mov
iret
lcall
lock
movsb
mov
data16
and
lret
out
mov
mov
ret
push
data16
pop
cmp
jb
jnp,pt
loop
mov
push
shlb
out
push
mov
roll
es
mov
xchg
pop
ret
sbbb
les
add
sbb
push
or
and
sahf
mov
dec
adc
or
mov
push
push
sbb
mov
cld
adc
dec
xchg
cmp
sbb
inc
icebp
push
add
sub
bound
frstor
inc
push
rep
jp
and
cs
push
je
mov
or
push
pop
push
xchg
jmp
and
lahf
daa
pop
aad
ja
addb
push
into
xchg
fadds
push
mov
lcall
push
mov
andl
sub
or
mov
into
add
cmp
insl
jl
int3
sub
stos
leave
ja
insb
shll
mov
pusha
frstor
cli
ss
repnz
pop
jp
mov
fimull
popa
add
sti
push
mov
cmp
xlat
xchg
cmp
adc
addr16
pusha
jo
cwtl
cmp
imul
fildl
lcall
fidivrs
cmp
dec
inc
mov
ss
lcall
fucomi
cli
xor
das
and
add
lods
in
mov
lcall
aad
imul
mov
stos
pushf
rdmsr
insb
jg
daa
mov
loope
mov
mov
lahf
add
icebp
loop
fldcw
aas
addb
icebp
xor
bsf
adc
loop
adc
xchg
popa
je
dec
mov
pop
arpl
and
cmp
cmc
shll
lods
lods
ret
icebp
mov
or
xchg
pop
xchg
call
pop
adc
or
cwtl
fidivl
sub
test
das
les
into
bound
add
fldcw
sub
jmp
cmp
in
repz
lahf
sbb
cmc
and
xchg
inc
lea
adc
iret
sub
inc
mov
in
dec
lds
push
push
push
and
cmp
ret
in
negl
and
pop
mov
xchg
outsl
sub
fiadds
xor
mov
das
leave
jae
ret
lret
sub
lods
cmp
nop
xor
add
out
xchg
adc
inc
inc
scas
lea
div
rcr
cmpsb
arpl
and
stos
add
jp
mov
arpl
orb
mov
fisubrs
xor
mov
cmp
pusha
xor
xor
mov
outsl
pop
hlt
mov
mov
out
push
out
sub
add
pop
repz
cwtl
mov
movsb
mov
sti
lock
enter
mov
shrb
cmp
or
jmp
popa
xchg
mov
lods
sbb
jle
insl
mov
mov
sbb
xor
pop
mov
mov
jmp
cmp
hlt
fistpll
or
cmp
test
inc
jge
pop
es
fwait
pushl
idivb
pushl
inc
pop
mov
adc
fldt
je
lock
or
fidivl
inc
lcall
fwait
pop
add
push
dec
bound
sarb
lcall
nop
js
test
sbb
pushf
jo
adc
sbb
inc
pusha
dec
sub
jbe
adc
sbb
sbbl
jp
mov
enter
inc
mov
int3
stc
sub
xor
sbb
cmp
ret
fucomp
testb
xchg
sub
jle
lret
popa
xchg
mov
push
push
shrb
add
xor
xor
das
sbb
clc
mov
mov
mov
outsl
negb
aad
repnz
outsl
dec
dec
pop
push
jne
orb
leave
jecxz
cmp
xchg
adc
pop
sbb
mov
xor
jmp
add
mov
mov
add
xor
mov
mov
out
sbb
mull
ficomps
out
mov
mov
fimull
mov
imul
pop
in
out
fidivrl
mov
popa
test
adc
push
push
xor
faddl
ljmp
jne
push
std
jae
in
fdivrs
jl
stos
fsubs
mov
negl
rcrb
mov
stc
inc
xchg
setno
mov
push
aad
or
pop
into
push
jmp
sbb
cmp
or
xchg
dec
xor
mov
jp
cwtl
xor
out
sub
ficoml
ss
test
inc
or
popf
cmpsl
lfs
push
pushf
cmp
andb
and
shll
and
out
sahf
aas
inc
sarb
push
jg
test
mov
cmc
jge
cli
jne
adc
iret
cmc
add
dec
ljmp
outsb
jmp
pop
aam
loop
adc
ficomps
inc
ds
pop
pop
cwtl
mov
jl
push
daa
sbb
cmpsl
sarl
fwait
and
fisubrs
insl
adc
test
outsl
cmp
xchg
push
push
and
test
aas
pop
ljmp
enter
in
mov
mov
sub
mov
pop
inc
stos
leave
lds
push
iret
cmp
inc
push
int
call
out
rcrl
push
xchg
mov
adc
mov
inc
inc
inc
in
or
pop
vpaddw
js
adc
jge
outsb
jecxz
sub
sti
iret
call
hlt
es
ds
stc
das
xor
jo
movsl
fstps
add
addl
and
outsl
xor
xchg
pop
movsw
movsb
pusha
aaa
and
dec
mov
sub
cmc
lds
adc
mov
dec
mov
xchg
insl
mov
sub
jns
push
mov
xchg
lds
mov
or
jo
out
mov
mov
mov
jmp
adc
jnp
cltd
pop
cltd
pop
sub
inc
pop
dec
test
add
lods
incb
movsl
sbbl
sti
into
lret
std
jge
fcoms
repnz
jno
sub
push
in
and
das
sbb
xor
mov
fsubrp
mov
cs
inc
jno
dec
stos
fs
inc
mov
lods
inc
popa
mov
out
or
pop
or
mov
xor
mulb
in
cs
bound
mov
psrlw
sahf
adc
cmp
aaa
ror
dec
cmp
imul
xchg
sti
jl
pop
lea
icebp
xchg
or
out
xchg
push
dec
adc
or
or
or
adc
push
pop
imul
sub
out
adc
enter
and
mov
dec
int
xchg
inc
iret
mov
outsl
out
adc
sti
leave
sub
inc
mov
ja
dec
pop
pop
lret
out
cli
or
aaa
push
mov
push
add
sub
push
inc
outsl
in
aas
sbb
mov
fisttps
std
out
mov
xor
add
mull
pop
clc
daa
ret
sahf
cmp
aam
xor
das
sub
popf
shl
ret
xchg
jns
fcompl
xor
mov
sahf
je
jge
push
loope
xchg
push
dec
negl
aas
pop
or
add
mov
mov
fcmovbe
test
cmp
pusha
xchg
icebp
testb
mov
fs
cmp
xchg
push
scas
andl
dec
adc
mov
jge
jno
lret
sarl
repnz
jmp
jge
and
push
pop
cwtl
or
inc
ret
cmp
lret
push
xor
out
add
dec
in
dec
mov
cmp
sbb
push
js
add
mov
test
daa
adc
je
in
adc
push
dec
jnp
ret
loope
mov
daa
loope
cmp
jnp
hlt
test
jns
fnstsw
pop
mov
push
dec
jle
sub
xor
sarl
imul
clc
sub
fsts
ret
nop
add
rclb
pushf
dec
repnz
clc
jbe
inc
push
adc
xor
hlt
ja
or
fidivs
sbb
movb
xchg
lea
lock
sub
loope
dec
push
test
pushf
es
and
mov
sub
jg
xchg
jbe
sub
das
movsl
mov
ficoms
es
jge
dec
dec
sub
out
lret
inc
add
sahf
mov
out
ret
and
sarb
cmp
movsb
lret
mov
insl
lret
jbe
imul
lahf
outsl
mov
sub
ljmp
cli
push
and
mov
jge
mov
shl
fnstcw
das
test
jbe
icebp
sahf
or
fidivl
xchg
loopne
jg
adc
cmpl
les
adc
aas
arpl
xorb
shrl
jo
sahf
mov
pop
or
cmp
mov
push
cmp
pop
ret
dec
loope
mov
jge
adc
jmp
add
stc
ds
adc
mov
push
pop
subb
ret
dec
fsubrs
aas
icebp
and
push
aaa
aas
test
mov
in
rcll
sub
cltd
adc
mov
or
loop
pop
js
insb
insl
nop
inc
jne
cld
xchg
inc
and
cmp
xchg
pop
cmp
push
jo
pushl
xor
push
xor
fistpll
mov
movb
aam
out
gs
or
fucomp
and
adc
aas
cmpsl
je
push
jo
sub
inc
mov
jne
add
insb
jae
jmp
sub
or
repz
mov
xchg
stos
sbb
fs
mov
jno
addr16
leave
pop
adc
mov
lahf
push
dec
leave
movl
pushf
sbb
roll
jne
xchg
push
pop
cmc
cld
fsubr
sub
mov
imul
sub
sbb
adc
mov
outsb
xor
fisubrl
inc
popf
fstpl
andl
ss
jp
and
leave
push
or
xor
clc
in
das
dec
rcl
test
pop
mov
push
add
mov
mov
mov
jmp
lds
pop
jns
jmp
mov
lret
hlt
pcmpgtd
addr16
cmp
add
add
mov
int3
cmp
aas
mov
mov
cmc
dec
cmp
cmp
push
int3
mov
inc
into
sub
jl
cmp
xchg
add
pop
es
push
sub
mov
loop
fisubs
ret
xchg
aas
jl
pop
or
shr
mov
sbb
fcomps
mov
mov
ljmp
lret
pop
js
xor
mov
xor
sarl
pop
jp
push
cmp
in
push
nop
push
test
fcomps
adc
fldcw
pop
pop
jae
sub
inc
rclb
insl
mov
ss
xor
mov
or
push
or
movsb
inc
pop
mov
push
xorl
cli
jg
daa
mov
lcall
pop
pop
inc
sub
pop
inc
cmp
or
test
fdivrp
pop
dec
and
cli
les
dec
jns
add
stc
push
enter
shrb
sub
in
aam
pop
or
adc
arpl
bound
fadd
push
ret
cli
and
mov
or
lahf
xchg
enter
mov
push
adc
inc
dec
pop
pop
adc
cmc
add
inc
jmp
xchg
lahf
xor
mov
sar
push
cwtl
andl
test
jno
and
loopne
xchg
cmpsl
inc
and
jle
sbb
dec
notb
dec
add
jle
adc
mov
lahf
or
mov
adc
mov
pusha
mov
pusha
cmp
divb
mov
mov
cmp
fdivrs
push
stc
ds
ds
mov
stos
push
dec
ret
lds
imul
std
mov
mov
test
sti
leave
mov
cmp
push
fcom
push
cwtl
sub
test
dec
jl
sbb
push
je
cltd
inc
test
mov
mov
cmpsl
cmpb
push
lds
jne
inc
iret
and
push
pop
xor
push
aas
ret
jae
mov
sub
fwait
lret
xchg
sbb
sti
or
pop
ds
xorl
aas
jle
test
push
jge
shl
lds
jle
daa
push
pop
pop
push
adc
popf
pop
push
test
mov
divl
mov
daa
sarb
add
pop
fcmovnb
sub
dec
aam
pop
sub
sbb
cld
or
dec
mov
inc
popa
aad
xchg
in
sub
pop
rorb
push
fisubrs
push
pop
cmp
sub
jno
gs
xchg
flds
dec
mov
ret
xor
mov
push
in
push
mov
pop
push
and
ds
mov
lret
loopne
jne
enter
ljmp
mov
mov
mov
mov
stc
mov
cmpl
int3
adc
push
scas
addr16
les
aaa
mov
fs
sub
inc
mov
lea
daa
xor
push
leave
in
jmp
push
test
xor
cmp
sub
adc
les
mov
jp
dec
xor
insb
xchg
arpl
sbb
aad
jns
cli
pop
in
rolb
stc
xchg
adc
ja
dec
xlat
std
mov
cmp
jns
adc
mov
test
and
xorb
std
adc
push
xchg
inc
mov
nop
adc
jmp
scas
jb
xor
add
call
movsb
in
in
movsl
xor
mov
scas
mov
call
iret
outsl
mov
mov
mov
push
push
jb
imul
ljmp
aaa
lea
fwait
xchg
mov
mov
rcll
add
repz
pop
dec
cmp
mov
mov
xor
ljmp
sbb
movsl
and
movsb
fcomp
xor
push
add
sbb
test
jb
dec
sbb
mov
popf
out
cmp
jns
jo
sub
pop
cmpsl
cwtl
gs
push
pop
jns
int
lds
data16
pop
inc
subb
xchg
push
dec
aaa
jmp
arpl
loopne
xchg
xor
add
or
les
dec
dec
dec
mov
pusha
ret
mov
or
xlat
mov
test
ret
sbb
sbb
insl
jle
shll
sahf
xlat
mov
cmpsb
cmp
jae
rcll
arpl
add
or
xlat
in
orb
and
xchg
rcrl
or
push
stos
lods
push
notb
mov
or
xor
clc
lock
outsb
mov
sbb
nop
mov
stc
sti
and
dec
push
or
nop
dec
or
push
add
mov
xor
inc
cmpsb
mov
add
out
in
xchg
fnstcw
mov
lret
mov
and
jp
jnp
mov
jg
clc
and
sahf
or
int3
lods
push
scas
mov
inc
movsb
mov
js
outsl
xor
push
fisttpl
lahf
and
cmp
fcmovnb
xor
mov
mov
and
jno
mov
inc
dec
cmc
popf
inc
mov
jmp
nop
or
sub
ljmp
push
mov
sbb
lret
sub
jp
pop
ret
add
shll
adc
shrl
mov
ret
popf
mov
jp
out
push
pop
add
leave
mov
push
mov
and
mov
sub
dec
aaa
pop
jb
jno
rorl
mov
scas
popf
jp
and
sbb
shll
dec
aaa
xor
sub
insl
js
push
inc
call
cmpsl
loop
dec
jg
movsl
test
les
iret
push
mov
mov
fs
stos
je
xchg
sahf
sbb
cmp
pop
lret
jmp
lds
pop
mov
clc
into
cltd
sahf
mov
push
sahf
sahf
in
mov
push
xchg
es
dec
outsl
sti
sbbl
xorb
nop
mov
mov
dec
dec
and
xlat
cltd
inc
sub
xchg
xchg
fs
push
or
dec
rcll
in
add
or
xor
sub
mov
in
cmpsl
sub
daa
es
cltd
insl
lods
cmc
inc
sti
inc
rorb
dec
cs
adc
push
jae
arpl
arpl
lock
rol
ds
imul
add
stos
loop
dec
add
loopne
mov
stos
add
jnp
in
jle
loop
idiv
inc
or
inc
mov
adc
pop
sub
andl
cmc
sub
xor
cli
add
push
mov
adc
scas
or
cmp
inc
decb
push
dec
movsl
xchg
repz
add
icebp
hlt
ret
out
pop
lods
add
mov
mov
shrl
jg
jl
sub
push
or
lea
cmp
push
push
lods
dec
mov
fsubr
xchg
dec
mov
sub
cltd
enter
icebp
lea
or
push
insl
xchg
fnstcw
push
fldt
cs
call
dec
ljmp
mov
test
mov
out
jg
in
push
testb
push
add
loope
mov
xchg
and
idivb
push
sarb
xor
rcll
xor
or
lods
mov
jbe
aad
inc
outsb
cmpsb
in
sbb
cli
add
push
out
in
fstpt
inc
pop
inc
cwtl
aad
or
ljmp
adc
pop
pop
sbb
and
cwtl
xchg
push
mov
movsb
jl
cmpl
mov
int3
outsb
fscale
add
mov
jg
cmpsb
jnp
xchg
fs
js
scas
add
pop
stc
addb
sbbb
xchg
fistps
jl
mov
sub
adc
push
leave
cld
not
xchg
mov
inc
dec
push
scas
xchg
cwtl
inc
inc
jle
movsb
in
scas
iret
jle
mov
xor
cltd
push
insl
xchg
dec
rorb
out
ret
xor
scas
lcall
xchg
repz
cmpb
enter
mov
sub
ss
ja
inc
pop
je
ficoml
daa
push
sar
imul
and
xchg
jge
sti
jae
pop
or
xchg
add
pop
and
sub
cmp
and
xchg
aas
test
mov
pusha
nop
addr16
cmp
dec
fwait
pop
sub
stos
cmp
test
or
mov
inc
sbb
pop
jl
stos
je
fiaddl
push
jno
push
jmp
sub
sub
sub
daa
cli
cltd
into
stos
push
mov
cli
jp
pushf
push
inc
push
dec
imul
cmc
lods
jmp
push
in
inc
loope
sbb
jb
mov
leave
pop
ds
pop
out
in
mov
shr
shll
xor
in
inc
mov
sbb
pop
mov
xor
pop
inc
and
add
dec
pop
jp
cmpsl
mov
out
inc
xor
push
mov
sbbb
lret
xchg
sti
sbb
leave
sbb
xlat
fstps
nop
pop
push
xchg
jno
push
iret
xlat
pop
sarb
sub
or
pop
push
and
leave
shl
stc
jge
imul
fdiv
ret
dec
xlat
cmc
dec
cmpsl
insl
jmp
mov
mov
mov
outsb
adc
mov
jl
popa
out
loop
mov
dec
ss
in
icebp
insl
dec
sub
mov
inc
mov
shlb
mov
insb
jno
add
push
xchg
scas
pop
pushf
sbb
push
xor
mov
mov
adc
mov
pop
std
adc
inc
sub
test
stos
fsubs
enter
pop
fistps
adc
lret
add
mov
mov
icebp
inc
ss
aam
push
inc
addr16
icebp
mov
sbb
sub
sbb
movsb
sub
xor
mov
xchg
or
repnz
popf
flds
jmp
lea
lods
fs
and
test
add
into
inc
cld
fsqrt
cmp
into
sahf
sub
outsl
sub
shlb
jno
lea
sbb
fwait
xchg
pop
std
inc
iret
inc
jo
pop
mov
enter
mov
mov
mov
mov
movsb
shl
lea
outsl
mov
imul
mov
adc
stos
xlat
sbb
shrl
mov
cmp
aaa
in
dec
push
sbb
adc
lock
mov
pop
nop
and
or
cmp
xor
push
shlb
mov
lea
xchg
mov
orb
ss
repz
xlat
sbb
pop
push
dec
mov
sub
adc
dec
cmpsb
lcall
enter
mov
xor
mov
pusha
cmpsb
out
push
mov
dec
jp
xchg
push
mov
fsubs
pop
aad
mov
gs
ret
xchg
scas
jnp
add
subl
test
mov
cltd
pop
mov
inc
inc
test
scas
out
movsb
ret
adc
aam
in
inc
fistps
inc
mov
pop
int
das
bound
pop
in
xlat
jne
insl
xor
iret
stos
lods
into
hlt
movsb
leave
popa
mov
int3
lock
xchg
neg
repnz
mov
les
ficoms
movsb
mov
imul
jmp
jae
das
cmpsb
push
call
cmp
enter
pop
sahf
jnp
cwtl
pop
mov
pop
pop
xchg
das
daa
push
rolb
cltd
fcom
sub
xor
add
cli
or
lret
inc
out
dec
xchg
mov
ds
cs
sub
frstor
jge
lahf
xor
lret
pop
iret
stos
pop
insl
dec
mov
ljmp
adc
sub
push
sub
xchg
push
push
stc
subb
inc
dec
nop
jecxz
sbb
xchg
jecxz
mov
push
mov
cs
xor
mov
push
popf
arpl
js
xor
leave
cwtl
push
stos
out
mov
mov
xor
lret
mov
jl
sbb
cld
mov
cmc
add
daa
fisubl
mov
inc
gs
sub
inc
mov
mov
mov
mov
jp
in
in
out
xor
popa
scas
fcmovbe
test
repnz
sarb
jecxz
cmp
cwtl
pop
pop
fcmovnbe
push
lods
test
pop
inc
add
mov
push
cmpsl
mov
cmp
call
mov
mov
daa
test
pop
and
fs
inc
cmp
adcl
pop
add
dec
pusha
orb
lock
and
push
call
je
xor
mov
je
jno
or
xor
pop
dec
es
pop
or
stos
jg
xlat
imul
jp
dec
int
sti
negl
xchg
shrl
cmp
scas
and
cltd
jae
int3
fs
test
loop
lock
or
mov
adcb
repnz
adc
mov
mov
or
js
scas
mov
add
jae
and
pop
mov
adc
fcos
std
insb
btc
xchg
push
sbb
sub
push
in
mov
push
stos
leave
cmp
push
in
lock
pop
cmp
inc
sbb
push
jnp
adc
mov
lods
lcall
sbb
mov
shr
pusha
loop
ja
mov
cmp
push
daa
test
xlat
stos
movsl
pusha
sbb
or
add
lea
pop
lods
or
fcompl
not
test
lods
inc
jae
std
push
fmull
sbb
into
jp
sbb
rep
pop
fcoms
mov
dec
xor
mov
arpl
jg
in
fcmovu
rolb
jne
pop
in
aam
inc
sbb
ds
mov
mov
sti
cmp
loop
xchg
xchg
bound
mov
mov
fisubs
push
mov
adc
out
pusha
arpl
cmp
mov
adc
inc
int
clc
cmpsl
jl
aam
xor
setno
ja
loop
jge
jl
jmp
jne
push
and
punpcklbw
xor
adc
mov
and
loopne
bound
stos
add
add
push
fldenv
pop
pop
pushf
push
inc
add
cmpsl
and
xchg
into
lods
ret
bound
pop
mov
inc
mov
movsb
jne
insb
jae
sub
out
std
insb
mov
jl
add
or
or
push
xor
das
dec
push
out
adc
add
movsl
movsb
xchg
xor
sbb
fsub
fisttps
imul
cmp
mov
jbe
ja
adc
jecxz
icebp
loopne
ljmp
test
pusha
push
jge
and
lock
fildl
and
sbb
jne
cmpsl
mov
add
push
enter
xor
arpl
lods
push
mov
cltd
cmc
test
mov
jo
sub
push
testl
movsl
lret
mov
popa
jno
and
xor
nop
push
in
and
test
dec
mov
int
mov
or
cmpl
xlat
jge
or
mov
jne
jb
aam
lret
lock
fwait
mov
sub
clc
add
xor
pop
cmp
sub
xchg
bound
pop
cli
shr
pop
pop
jge
cmp
xor
lds
ja
sbb
sbb
mov
shlb
jg
push
mov
mov
or
loopne
insl
cmc
mov
dec
xchg
leave
dec
xchg
sub
push
xor
cmp
add
mov
xchg
mov
jo
or
outsl
lock
xchg
addr16
mov
mov
ss
pushf
dec
rcrb
scas
in
inc
sti
in
pop
cs
fistps
rcr
push
pop
loopne
jl
fucom
cltd
hlt
jg
jae
inc
lret
inc
arpl
stos
rcrb
stos
aad
push
jg
inc
sbb
mov
shrl
aad
sub
xchg
in
add
inc
stc
addl
insb
fiadds
pop
cmp
fmull
pop
cmp
cmpsl
stos
pop
in
push
idivb
xchg
aaa
sub
xchg
mov
test
mov
leave
dec
stc
stos
jmp
xchg
jno
lcall
push
sbb
rcrb
pop
dec
cli
or
stc
nop
imul
push
push
mov
mov
gs
jmp
inc
dec
sbb
pop
ret
pop
xchg
jo
in
and
cwtl
push
mov
jecxz
add
inc
out
xor
pop
int3
orl
test
pop
lea
jnp
sbb
dec
or
lds
inc
call
xchg
daa
mov
aaa
xchg
rclb
inc
sti
pop
mov
push
lea
loop
dec
xchg
in
in
xchg
sbb
sbb
fwait
cld
xor
adc
sbb
sub
jl
pop
loopne
adc
insl
pop
inc
push
or
sub
adc
scas
lret
xchg
pop
mov
ret
leave
mov
inc
stc
outsb
cld
je
rorb
push
popf
cmpsb
cs
add
fmuls
jge
inc
into
xor
mov
out
fwait
aas
fnstsw
cmp
imulb
cmpsl
scas
pushf
mov
scas
outsl
ds
cmp
xchg
adc
les
mov
repnz
xor
popa
adc
les
pop
inc
movsl
jae
hlt
adc
inc
push
leave
ds
mov
insb
cli
mov
ds
jns
xor
pop
mov
pusha
mov
jae
push
jle
stc
aad
fstp
sub
inc
sbb
inc
out
cmpsl
ret
jno
sbb
mov
push
sbb
sub
faddl
cmp
cmp
loop
loope
pushf
xchg
pop
outsb
mov
test
mov
in
push
inc
jmp
std
ljmp
xchg
fdivs
dec
push
dec
les
aaa
int
xor
cmc
mov
jle
daa
push
cmc
dec
ficompl
nop
pusha
mov
das
pop
pop
loope
dec
mov
sbb
inc
cmpsl
dec
push
pop
loop
insb
fsts
out
imul
pop
call
mov
iret
fs
or
in
mov
filds
cmp
xchg
sbb
stos
je
push
sahf
adc
arpl
mov
add
jp
sbb
inc
push
push
in
sub
bound
sbb
in
insl
aam
adc
add
movb
cmpsb
daa
jo
fidivrs
negl
fdivrl
lods
hlt
fwait
add
adc
int3
mov
push
std
pushf
sti
stos
into
cmp
xlat
jmp
push
add
add
push
pop
cld
xchg
inc
jae
mov
pop
jne
test
scas
in
mov
clc
sub
repnz
sub
sbb
scas
push
jmp
popf
movsl
int
dec
inc
popf
rolb
mov
sub
sub
xchg
cmp
mov
dec
out
test
dec
pop
add
push
jecxz
pop
les
aaa
dec
stc
add
push
jnp
mov
rorl
subb
das
stos
xor
sub
shl
push
push
inc
or
fwait
pop
pusha
push
inc
pop
and
cltd
push
jmp
loopne
popa
dec
sbb
and
sbb
movsb
mov
xchg
jle
out
das
jl
sub
stc
ds
mov
cmp
mov
jecxz
inc
addb
popa
out
mov
or
push
or
mov
xor
std
sarl
bound
clc
icebp
sbb
daa
outsb
cmpsl
xlat
push
pop
pop
test
filds
pop
es
cltd
sbb
fstps
add
pop
add
sub
jp
or
divl
xor
es
jo
lret
into
xchg
lods
cmp
loope
fidivrs
repnz
fists
adc
mov
xorl
ds
mov
scas
xlat
mov
loopne
xor
pop
bound
data16
lret
and
or
aad
xor
fbstp
shll
jge
add
or
pop
mov
push
or
xchg
fdivs
insb
scas
mov
sub
cld
out
fstps
into
loopne
mov
dec
ja
mov
sub
pusha
rcr
add
or
aaa
lahf
xchg
cmc
jp
ljmp
adc
stc
sbb
pop
sub
sub
inc
mov
je
loop
scas
js
jae
dec
cld
cwtl
mov
imul
mov
out
push
cli
push
pushf
das
pop
mov
jae
push
and
xchg
mov
inc
sub
imulb
js
adc
pop
enter
xor
pushf
jae
sub
out
loopne
jle
push
xchg
cmp
pop
cmp
outsb
dec
lret
or
jp
cmp
mul
cmc
pop
push
jno
dec
mov
cs
sbb
adc
sbb
mov
roll
pop
or
movl
sarl
and
push
cmp
cmc
subb
jne
xlat
sub
fldt
cwtl
out
in
mov
iret
adcb
xlat
arpl
cmpsb
pusha
jl
mov
fmuls
and
inc
adc
imul
enter
fwait
push
pop
cli
test
mov
add
cmp
es
stos
xchg
fs
outsl
lods
push
movsl
jbe
out
adc
jae
push
hlt
inc
lahf
adc
shll
pop
xlat
jns
mov
jno
mov
cli
lret
sub
cmc
shlb
mov
pop
dec
xchg
adc
shr
pop
movsb
mov
or
dec
push
pop
popf
dec
sub
pusha
adc
call
cli
lock
ja
jo
daa
xor
cmp
js
inc
mov
lods
fbld
mov
or
jnp
sub
sarl
pop
mov
ficoms
mov
ja
mov
aaa
addr16
imull
andb
das
imul
mov
jmp
stos
push
sub
cwtl
daa
xor
stc
sbb
repnz
ja
mov
sahf
outsl
fwait
lahf
outsb
lret
mov
into
jbe
mov
test
push
dec
and
sbb
xchg
lock
mov
add
push
outsl
sub
jbe
inc
or
repnz
and
aaa
imul
test
cmc
ret
sub
jle
arpl
mov
cmp
outsb
inc
repz
int3
out
xchg
shl
movb
add
hlt
bound
dec
xchg
adc
lea
jnp
imul
imul
out
out
push
jne
out
sub
mov
xlat
mov
xchg
xchg
loop
cwtl
dec
es
icebp
pop
pushf
sub
mov
add
jnp
test
pusha
jns
aaa
mov
call
pop
ljmp
out
icebp
les
mov
loope
dec
sub
jp
add
arpl
dec
jne
cmp
into
std
orl
push
xchg
cwtl
popf
testb
xor
mov
mov
sahf
mov
test
mov
add
outsb
cmc
pop
loope
data16
fnstenv
cmp
fstl
loopne
cmpsl
scas
jbe
jb
fmul
out
push
jg
movsb
sbb
push
lock
test
xchg
adc
and
add
add
push
ss
jmp
ds
rolb
imul
sbb
shl
dec
cwtl
lret
ficoml
dec
mov
fdivl
loopne
mov
icebp
gs
jmp
or
or
add
dec
leave
cmp
add
shll
sub
std
dec
inc
inc
cmp
cmc
xchg
es
push
and
fisubrs
movsl
add
jno
xchg
aam
insb
lret
popf
scas
icebp
mov
adc
sub
mov
cmp
lods
inc
inc
add
xchg
and
pop
ret
shlb
cmp
call
out
push
push
lret
fldcw
pop
shll
incl
mov
fsubrs
scas
insb
loop
js
adc
add
mov
fiadds
rcll
ret
inc
aam
sbbl
mov
mov
and
inc
and
add
lret
mov
push
sti
xchg
sub
les
inc
inc
add
data16
test
loopne
movsl
popf
dec
push
and
push
jo
xchg
mov
sti
fisubrs
or
mov
cmpb
dec
push
bnd
fisubl
outsl
push
test
xchg
and
sbb
jmp
testl
mov
es
ja
movsl
mov
shlb
pop
les
stos
cmp
jns
ss
and
push
insl
test
enter
shlb
or
and
lahf
cmpsb
or
xchg
cltd
add
add
fsub
adc
cltd
divl
ret
jbe
ss
mov
and
fstl
cmp
inc
jmp
sbb
push
mov
push
dec
outsb
adcb
jmp
cmpsl
loop
nop
cs
lock
gs
pop
fwait
shrb
mov
int3
mov
test
xchg
sbb
and
sub
push
push
stos
mov
adc
adc
jmp
test
mov
lahf
push
adc
xchg
andl
jbe
push
out
xchg
ja
mov
xchg
decl
jo
scas
pop
nop
push
sbb
mov
orb
setle
pop
sub
movsl
mov
popf
mov
jg
imul
jo
push
mov
and
data16
adc
cltd
add
ds
mov
jg
dec
push
imul
into
mov
test
add
das
lahf
fcmovb
movsl
std
lods
xor
ljmp
jl
jae
sbb
test
fdivs
jl
xchg
push
jmp
jns
pop
xor
mov
xor
hlt
pop
loop
mov
add
mov
aas
or
cld
cmp
call
fs
push
inc
orl
cltd
xlat
mov
xchg
cli
mov
pop
mov
add
push
dec
fs
les
pop
mov
pusha
mov
in
lahf
xchg
pop
push
sub
aam
roll
cld
test
int3
pop
les
sbb
jnp,pt
lahf
adc
jg
mov
pusha
xor
mov
icebp
pop
es
add
xchg
xchg
popa
loopne
jle
xchg
out
cmpsl
xchg
rorl
out
fiadds
js
xor
nop
jae
test
pop
sub
xchg
xchg
imulb
pusha
adc
stos
in
push
xlat
frstor
push
lahf
adc
cmpsb
push
xchg
xchg
daa
in
pop
push
push
imul
jge
movsl
lods
movsl
inc
push
and
xor
dec
pop
lret
shl
nop
lock
negl
pop
outsb
adc
lock
push
mov
mov
adc
out
push
popa
add
jg
loopne
cmpsb
movsl
popf
and
daa
mov
sub
xor
lds
push
push
loopne
sub
mov
cmp
cmp
pop
popa
pusha
fwait
mov
fcmove
xchg
mov
gs
insb
cmp
ds
or
mov
imul
lock
pop
imul
data16
rep
pop
test
pusha
in
es
mov
push
into
pop
mov
jae
pop
mov
stos
mov
jg
bound
ret
mov
repz
jmp
dec
pop
add
ficoml
push
das
jb
sbbl
cmp
xchg
adc
xor
mov
dec
arpl
lods
test
or
les
sbbb
call
xchg
sub
ds
or
jnp
in
and
arpl
lret
icebp
mov
icebp
or
lahf
xchg
or
and
mov
inc
xorl
push
lock
aam
inc
lret
jl
leave
out
dec
xor
add
cld
xchg
dec
enter
repnz
push
pop
and
push
movsb
pushw
lahf
outsl
jl
push
mov
sbb
pop
cmpsl
ss
lods
fwait
cmpsl
dec
stc
lcall
out
adc
dec
mov
xchg
mov
jno
mov
sub
lcall
pop
fadds
jp
into
sti
pop
roll
mov
outsb
mov
std
sub
hlt
rcr
les
arpl
mov
adc
cmp
fdiv
add
push
xchg
subl
sub
aaa
clc
xchg
jae
mov
movl
outsl
cmp
les
call
je
mov
pop
out
cwtl
xchg
xor
xchg
pop
pop
cmpsb
gs
mov
jns
inc
adc
dec
daa
outsl
sahf
jle
into
push
xlat
scas
cmpsb
das
jnp
sbb
mov
jmp
or
mov
seto
dec
pop
loopne
cwtl
orl
dec
enter
sbb
jmp
shll
movsw
jnp
pop
movsl
fmulp
int3
cmp
ljmp
aad
lcall
nop
sub
jbe
cld
insb
gs
sub
sti
or
push
sbb
mov
dec
sahf
aaa
repz
data16
test
imul
xor
cwtl
push
rcrb
pop
aad
fisubl
sbb
out
sbb
repnz
decb
jnp
hlt
push
xchg
mov
mov
ficoms
mov
and
dec
popa
or
vpavgw
out
dec
cmp
jmp
mov
divl
or
loope
in
repnz
int3
or
loope
adc
xchg
outsl
pop
in
jl
pop
repnz
scas
mov
cmpsb
push
pop
mov
jnp
int
cmpb
fisubl
adc
popa
imul
mov
dec
rol
adc
jbe
adc
out
sub
dec
jb
mov
stos
mov
mov
in
aas
inc
das
cmc
pop
cmp
adc
in
push
mov
sub
sub
pop
jb
lahf
xchg
cmp
aas
or
xchg
cld
stos
popa
outsb
pop
and
mov
jns
cmc
inc
clc
cmp
xchg
push
mov
inc
pop
sbb
insl
push
jp
pop
imul
cmc
pop
subl
mov
mov
sbb
add
push
push
and
add
mov
xor
sub
cmpl
in
divl
cmpsb
cmp
push
iret
xchg
pop
cmc
jno
inc
aad
ss
rorb
test
xor
mov
mov
cli
pusha
ljmp
adc
dec
mov
jne,pn
xchg
adcl
loop
scas
xor
sahf
xor
xchg
mov
inc
and
cli
cli
incl
mov
sti
add
adc
pop
push
lods
dec
cmp
add
pop
xchg
pop
sahf
imul
add
adc
ss
repnz
pop
dec
aam
push
into
mov
mov
fisubrl
mov
mov
or
call
arpl
lock
ret
jmp
das
in
dec
cli
push
nop
outsl
add
cmpsb
fcomps
xchg
pop
adc
cltd
pop
adc
sub
aas
insl
xchg
push
xor
jl
inc
xchg
jb
sub
js
xor
movsl
hlt
pusha
out
ljmp
sbb
sub
sub
imul
andb
mov
dec
lods
es
nop
mov
jmp
repnz
inc
jbe
repz
pop
rol
fwait
sahf
int3
jne
jg
movsl
xor
pop
adcl
test
adc
xchg
outsl
and
mov
in
stos
andb
mov
int3
popf
les
push
adc
mov
fldt
fstpl
cmp
lea
xlat
scas
popa
push
xchg
or
push
arpl
cmp
push
lea
xor
cmc
decl
adc
daa
xchg
test
stos
mov
fld
push
sti
imul
pop
sbb
xadd
sbb
shrl
sarb
jns
pop
inc
cmp
jbe
adc
mov
in
mov
cmpsb
add
sbb
mov
leave
or
add
or
mov
sbb
adc
ss
push
imull
lahf
pop
inc
mov
push
int3
jecxz
xor
pop
jno
sti
subb
addr16
out
cltd
je
add
cmpsb
enter
ja
je
ja
cmova
js
stos
andb
sbb
ret
mov
stos
pop
enter
or
je
dec
mov
imul
outsb
test
mov
das
repnz
cltd
mov
addr16
out
jmp
cmp
call
arpl
adc
push
andl
mov
add
mov
pop
fucompp
sbb
xor
dec
arpl
pop
adcb
subb
adc
pop
push
repz
inc
mov
mov
jmp
sti
leave
pop
shlb
mov
dec
adc
push
lea
pushf
loop
lahf
es
outsb
repnz
mov
add
repnz
sub
fld
lds
cmp
daa
lea
cwtl
push
add
inc
int3
out
nop
adc
ja
mov
adc
jo
out
dec
cmpsb
inc
xchg
fwait
test
das
xor
inc
mov
and
aaa
cmp
xchg
mov
xchg
dec
push
int
fldt
loopne
push
scas
divl
rolb
int
adcb
xchg
cmp
lret
popf
cltd
idivb
cmpsb
aad
push
ljmp
enter
push
or
or
mov
xchg
cmpsb
xor
mov
add
shll
lret
popf
loopew
add
xchg
loopne
jg
ss
cmp
pop
imul
fldl
cmpsl
push
and
in
stos
pop
fbld
lds
faddl
push
cmpsl
pop
in
jb
mov
arpl
aam
mov
shlb
pusha
movsb
push
test
leave
xchg
add
mov
xchg
out
mov
es
jl
jo
fisttpl
aad
sbb
fstps
adc
aam
sbb
scas
mov
add
mov
inc
cmp
sti
sahf
out
or
test
bound
outsl
scas
cmp
mov
enter
popa
pop
fcomip
andl
xchg
fldt
cmpsb
rcr
stos
cmp
pop
push
dec
pop
fimuls
repnz
lahf
sti
and
dec
call
stos
es
cmp
add
test
dec
std
js
xchg
cmp
or
jbe
fisubl
scas
inc
fsubp
jmp
fstpl
cmc
js
rorb
cmp
adc
add
sbb
cmp
fists
lea
mov
fisubs
das
or
lods
cmp
cmpsl
jbe
in
enter
inc
jmp
lahf
adc
inc
jae
dec
and
xor
pop
jp
mov
sbb
iret
ds
out
jg
jle
fdivs
lcall
cmpsb
push
pop
or
push
cmp
xor
ret
repz
inc
pop
nop
jne
frstor
sbb
inc
sbb
in
ds
clc
imul
lods
pop
pop
mov
and
cli
into
test
call
sbb
repnz
out
subb
xchg
cmp
push
outsb
push
or
cltd
ss
sbb
push
cmc
push
and
and
xor
sarb
popa
testb
or
jg
or
jae
xor
aam
test
push
push
leave
sub
xor
jb
xchg
jae
add
jns
push
sbb
sub
int3
pop
in
sbb
lret
je
push
leave
push
xor
jmp
in
sbb
inc
std
inc
imul
adc
cwtl
pushf
xchg
adc
jmp
xchg
add
addr16
add
xchg
mov
jle
imul
aaa
xor
add
xchg
loopne
sahf
out
pop
xor
repnz
lret
lea
fidivl
xchg
sub
sahf
jle
jle
sbbl
sub
xor
mov
fdivrl
cmp
mov
mov
push
xchg
out
mov
decl
arpl
inc
rorb
into
or
xchg
xchg
dec
orl
rclb
repnz
cmpsb
mov
push
dec
cmp
mov
fnstsw
fidivl
xor
xchg
jmp
sbb
xchg
ljmp
scas
cmp
mov
xor
cmp
cltd
adc
mov
fisttpl
lret
outsb
mov
adcl
xchg
sub
dec
adc
cmpsb
push
orb
pop
lock
inc
or
jo
sbb
xchg
stos
sub
xchg
jno
es
loopne
mov
xchg
cmpsl
or
xor
dec
push
or
cli
insl
xor
mov
les
dec
mov
repz
mov
loop
mov
das
in
jge
mov
push
sbb
push
jmp
mov
cmpsb
sbb
dec
sbb
mov
inc
pop
loop
movsl
inc
pop
sub
sub
mov
cmp
pop
daa
jae
push
call
imul
movsl
cmpsl
repnz
and
mov
xchg
mov
xor
jae
movsl
lcall
imul
pop
iret
lods
test
xchg
popa
jnp
xchg
sub
negb
cltd
xor
pushf
dec
sarb
sub
pop
cltd
outsb
push
dec
push
bound
mov
flds
mov
pop
push
xchg
cmp
adc
xchg
cld
dec
mov
or
mov
jo
add
lods
leave
inc
or
stos
iret
popf
pop
stc
test
aad
jp
pop
pop
shll
add
mov
jo
movsb
pop
mov
pop
or
mov
xor
insb
dec
movsb
or
add
mov
les
in
scas
sub
imul
and
or
test
cmp
mov
ljmp
in
fsts
or
test
add
mov
adc
pop
xchg
xchg
lds
mov
or
mov
pop
fwait
in
cld
lods
movsl
cld
jae
adc
pushf
dec
cld
xor
inc
call
mov
sbb
lods
test
pop
stos
popa
std
pop
orl
sbb
fstp
dec
inc
cmpb
mov
sbbb
mov
sub
fisubrl
xlat
mov
in
cmp
xchg
mov
stos
cmpsl
push
push
inc
xchg
mov
add
push
jbe
mov
cltd
pop
aas
repnz
mov
push
xlat
dec
stos
adc
fisttpll
inc
aaa
outsl
xor
add
add
out
cmc
test
push
mov
loop
jbe
subb
push
cmp
sbb
push
jmp
loope
xor
xchg
lcall
test
inc
decb
or
lods
and
pmaxub
push
dec
push
pushf
add
or
vpaddb
jmp
inc
inc
fisubl
pop
mov
mov
stos
movb
adc
fucomi
xchg
mov
jp
iret
xchg
adc
mov
mov
decl
cld
or
jnp
rcll
insl
push
in
int3
inc
xor
add
lock
inc
and
mov
push
fimuls
pushf
ucomiss
shrl
jle
dec
mov
mov
sarl
push
jmp
test
push
sub
and
sbbb
dec
lods
movsb
adc
push
add
mov
cs
or
inc
pop
testl
rcr
testb
pop
es
fists
or
sbb
mov
icebp
mov
xorb
cmp
das
xchg
jg
mov
imul
sbb
inc
hlt
push
cmpsb
jmp
or
or
mov
dec
into
dec
int3
pop
js
fwait
inc
and
pop
test
xlat
xchg
sbb
je
mov
mov
movsl
imul
pop
jnp
loopne
sahf
shrb
cs
lods
into
inc
pop
fs
mov
sub
sti
push
sbb
sbb
add
push
xchg
cltd
push
fimuls
and
push
jo
bnd
dec
and
inc
mov
icebp
repz
ja
inc
sub
jb
jmp
outsl
xchg
call
int
clc
sti
mov
cmp
lods
call
mov
ja
popl
adc
aaa
lret
sub
icebp
cwtl
push
adc
rorb
aad
shlb
sub
push
aas
enter
or
sbb
mov
aaa
pusha
sbb
xor
push
jns
in
icebp
sbb
enter
lea
mov
xchg
sbb
mov
mov
sbb
adc
mov
jecxz
mov
jo
std
jnp
iret
fbstp
stos
lds
int
mov
xchg
push
add
addr16
cltd
add
mov
addr16
neg
cmpsl
push
dec
pop
stos
and
std
stos
mov
inc
mov
pop
push
std
xchg
lock
sbb
cmp
dec
std
push
or
outsb
int
push
outsb
mov
pop
push
int3
and
outsb
mov
mov
cmpsb
xor
pop
lea
loope
loope
xor
icebp
push
insb
fisttpll
daa
sbb
add
xchg
fs
fdivr
add
stos
gs
mov
fsubp
pop
ret
lcall
or
jne
push
int3
sbb
xor
inc
ficomps
jns
icebp
arpl
sbb
xchg
test
pop
aad
inc
push
inc
out
lahf
sub
inc
jno
shlb
ljmp
pop
in
mov
inc
std
ret
xor
les
mov
lret
sbb
mov
sbb
pushf
fcom
loope
push
rol
mov
pop
mov
sbb
sahf
push
stc
in
or
push
pop
xchg
and
mov
fnstenv
lfs
xchg
pop
jnp
jecxz
lahf
mov
and
outsb
test
loop
jb
sbb
jo
out
cld
shll
xchg
movsl
rcl
adc
sbb
lret
or
mov
push
push
sbb
pusha
mov
ja
mov
ffreep
add
test
add
add
pushf
jo
ljmp
xchg
and
or
or
dec
pusha
cltd
rcl
pop
inc
xchg
daa
shll
inc
mov
shlb
stos
rorb
pop
sbb
pop
call
mov
xchg
subl
jns
cltd
in
xchg
and
and
les
stc
ficoml
mov
neg
or
sbb
imull
std
mov
and
mov
jp
fdivr
xor
inc
xchg
add
mov
imul
xlat
fisubrs
cwtl
xor
rclb
fwait
scas
ror
mov
adc
add
repnz
cs
cmpsb
push
lods
fst
sub
mov
lret
push
lret
adc
mov
jb
insb
lcall
call
mov
sub
lea
ljmp
lahf
xlat
pushf
mov
push
mov
mov
and
jnp
jge
push
mov
inc
xor
dec
stos
dec
inc
add
xchg
arpl
imul
js
sbb
and
sti
dec
repnz
fdiv
jmp
out
inc
testb
shl
cs
sbb
dec
push
insb
dec
or
fcmovb
sub
mov
xchg
mov
pop
add
cwtl
out
sub
jnp
stos
insl
ret
mov
or
pop
mov
and
pop
popf
push
je
mov
jno
mov
jne
lret
pop
icebp
lods
dec
mov
jns
mov
repnz
test
mov
push
mov
cmpb
bound
or
dec
iret
shll
pushf
leave
dec
pop
and
ss
jns
sub
dec
movsb
pop
push
and
xchg
sub
xor
mov
and
addr16
lods
idiv
mov
je
add
mov
movsl
mov
cmpsb
mov
rcll
push
sbb
aaa
gs
sbb
sbb
ja
add
std
mov
insb
rolb
push
mov
out
cld
lret
lock
cltd
mov
inc
stos
imul
ret
out
push
mov
mov
xor
xchg
add
adc
test
inc
sbb
and
insl
jns
add
inc
ja
add
das
roll
or
fnsetpm(287
inc
cmp
movsl
add
jle
inc
sbb
in
sbb
cmp
sub
jb
lea
addl
or
aaa
mov
sbb
sbb
inc
mov
cmpsl
sbb
push
mov
lock
scas
jno
sbb
adc
add
lret
sbb
cmc
popa
dec
outsl
fstpl
fcoml
sub
lods
sahf
mov
xchg
movsb
pop
arpl
cli
ret
xchg
test
sarb
cli
arpl
add
jne
mov
out
fisubs
cli
movsb
sbb
pop
call
roll
testl
loop
bound
mov
xor
loopne
mov
jl
push
leave
fadds
pusha
int3
add
inc
push
cvttps2pi
xorl
xchg
jne
dec
jo
dec
movsl
cmpsb
jge
inc
in
rcr
cmp
das
push
pop
mov
and
out
mov
scas
pop
lock
and
bound
lock
ss
jmp
aas
adc
inc
xor
arpl
test
loop
ds
mov
sbb
je
xlat
mov
inc
cltd
mov
push
cmpsb
push
dec
and
call
mov
xor
pop
imul
jp
cmp
lock
push
inc
test
data16
fisubrl
sbb
adc
addr16
and
shrb
call
nop
sub
add
dec
adc
int
jp
clc
mov
pop
loope
mov
sub
lods
mov
pop
push
andl
filds
sahf
jmp
sub
mov
or
adc
imulb
test
loopne
xchg
pop
and
lret
jmp
sub
push
or
loopne
ja
or
iret
xorl
popa
leave
out
into
roll
add
xor
pop
pop
stc
dec
and
nop
out
out
call
push
or
fldt
push
ss
movsb
push
hlt
jmp
pusha
jmp
in
inc
popf
cld
mov
and
pop
das
mov
aas
and
lods
fists
aaa
popf
shrl
mov
push
ljmp
and
push
jb
addb
les
lea
stos
xchg
push
mov
sbb
jb
out
fwait
pop
sub
jb
test
xor
inc
mov
stos
int3
lret
out
fists
out
orb
ret
clc
add
icebp
pop
imul
dec
cwtl
xor
lods
and
xor
push
pop
lret
loop
xchg
lea
jns
adc
aaa
sbb
stos
mov
sub
xor
je
sbb
inc
jg
pop
add
fldenv
sbb
mov
jno
adc
or
pop
adc
movntps
roll
mov
adcb
fs
and
mov
out
imulb
pushf
iret
xchg
jmp
inc
dec
int3
add
pop
imul
lds
or
dec
sarl
cmp
mov
add
bound
je
sub
std
call
int3
stos
sahf
enter
xchg
pop
ret
mov
dec
jl
call
push
ja
dec
std
jmp
pop
push
xchg
sahf
pushf
sarl
cwtl
jl
adc
push
aam
pop
cmp
add
mov
dec
stc
in
scas
and
insb
pop
sub
cld
jge
ficompl
lds
dec
icebp
mov
push
lods
iret
jae
es
fwait
sub
adc
mov
inc
nop
fnstenv
sbb
ss
xchg
push
testb
fwait
add
pop
sub
lret
sub
cmc
lret
dec
aam
add
or
adc
mov
pop
into
jmp
lret
stos
test
sbb
jne
gs
xchg
push
cmc
or
stos
lock
push
sbb
xchg
leave
mov
sub
pop
jmp
adc
or
pop
mov
adc
cld
sub
inc
xor
addr16
cli
sub
xchg
cmpsl
es
inc
lds
push
push
xchg
ljmp
faddp
stos
mov
mov
sar
test
lret
push
in
mov
jb
stc
sub
lock
loope
sbbb
inc
pop
scas
clc
je
aam
rcll
push
fs
mov
jmp
ds
cvttps2pi
sarb
dec
dec
dec
push
pop
cmpsl
hlt
inc
lods
push
outsb
fwait
dec
cmc
dec
dec
repz
cltd
js
call
lahf
jnp
scas
xor
or
in
gs
sbb
push
rorb
xchg
jge
jge
xchg
stc
rorl
inc
or
mov
pop
scas
call
rcrb
imul
and
cli
cmp
sub
pop
movsb
shll
in
pop
pushf
mov
mov
mov
icebp
gs
sbb
and
in
jmp
cmpsb
aaa
fs
mov
mov
and
pop
popa
pusha
sbb
into
dec
fdivr
mov
ficoms
jne
push
mov
xchg
je
lea
jbe
test
inc
adc
mov
push
ja
push
insb
ret
test
jnp
scas
jo
jl
inc
inc
dec
jae
data16
fucomip
into
sbb
jb
icebp
out
pop
insb
mov
popa
xor
mov
fisttpl
test
push
dec
test
add
bound
lahf
scas
rcrb
aad
lret
std
sub
xchg
xchg
or
pop
lahf
mov
movsl
adc
push
mov
mov
js
out
loop
jmp
pop
jl
ljmp
into
push
and
pusha
inc
int3
or
data16
test
shlb
dec
xor
dec
test
ss
bound
xchg
test
push
add
loopne
jo
das
sar
int3
xchg
jns
cmc
les
lret
cld
orl
sbb
ljmp
addr16
xchg
je
pusha
cmp
inc
mov
jg
mov
add
mov
outsl
sbb
in
mov
cmpsl
xchg
lea
push
repnz
mov
inc
sub
roll
pop
sub
jae
addr16
push
daa
sbb
aam
pop
ret
xor
imul
fcmovnb
scas
push
pop
shlb
dec
je,pt
shlb
jle
cmovne
cmp
push
lcall
daa
test
mov
dec
jne
mov
pop
add
and
ret
fnsave
xor
scas
jle
dec
inc
inc
mov
cmp
pop
pop
cwtl
and
fsubr
lcall
mov
divb
mov
push
cmp
push
mulb
imul
iret
adc
jnp
movsl
push
sbb
dec
push
sarb
hlt
mov
into
cmp
push
push
adc
leave
stc
arpl
test
daa
in
insl
stc
sbb
movsl
lods
xlat
add
sub
mov
mov
outsl
jno
sbb
jge
mov
lcall
push
mov
sbb
xchg
sbbl
dec
add
adc
aaa
jno
mov
mov
aam
inc
insb
leave
fcoml
mov
pop
popf
cmp
jle
mov
jnp
sarl
inc
xor
bound
repnz
arpl
aas
inc
mov
mov
lahf
stos
test
ret
pop
sbb
jnp
push
shr
mov
sub
fnstsw
aaa
sub
lcall
xchg
adc
sub
cmpsl
mov
shll
outsl
xchg
push
loopne
pop
inc
pusha
jmp
lahf
mov
jb
inc
cs
fistl
idiv
inc
fwait
push
ljmp
jno
push
sub
inc
mov
pop
fdivl
test
shll
add
adc
inc
shll
out
add
sbb
mov
lock
add
mov
xor
jmp
xchg
mov
jge
scas
xchg
test
ret
in
or
push
dec
cmp
aad
popa
pop
jecxz
add
sbbl
inc
out
sbb
insb
or
into
inc
push
pop
add
clc
movsb
data16
sbb
cs
movsb
negl
inc
pop
jb
jp
adc
sbb
cmp
jmp
cmp
mov
pop
mov
or
out
lret
dec
enter
sahf
or
pop
repnz
mov
les
je
lea
adc
clc
add
lods
xchg
xchg
hlt
adc
mov
popa
subl
test
pop
cmp
cld
and
cmp
pusha
rorb
test
lock
dec
or
xorl
andl
cs
sub
out
cmp
in
les
cli
call
cwtl
or
dec
insl
and
jmp
sahf
or
xor
inc
fs
stos
rorl
pop
inc
push
int
xlat
add
adc
sub
fsubs
scas
and
add
xor
jp
mov
mov
mov
xchg
mov
inc
orl
vmovhps
imul
pop
push
decb
mov
inc
pop
cmp
inc
aad
popa
lods
sti
sbb
xor
movsb
mov
leave
test
ret
xor
xchg
test
cmc
divb
mov
and
jb
sahf
shrl
push
or
xchg
inc
cmp
outsl
inc
jb
and
out
mov
adc
out
clc
in
xor
xchg
fsubrl
daa
mov
jne
add
pop
or
cmp
bound
push
sti
std
xchg
mov
sub
out
fnsave
dec
or
mov
fsubrl
mov
test
sub
or
in
aad
push
adc
arpl
add
mov
fst
sbbl
and
subl
dec
jb
loope
shrl
das
popa
xor
inc
mov
repz
xchg
adc
mov
sub
shr
popf
lea
clc
outsl
sbbl
lahf
jae
and
or
pop
and
sbb
in
and
aam
rorl
mov
pushf
lods
cmp
add
mov
push
sahf
mov
sub
adc
les
pusha
sbb
jnp
pop
sbbb
and
jae
ljmp
sbb
jl
insb
scas
inc
mov
xchg
enter
pop
cmp
jmp
xchg
cs
jne
cmp
pop
sbb
inc
nop
xchg
adc
mov
dec
or
sub
repz
or
pop
inc
fmul
test
dec
or
fsubp
cmp
lahf
push
pop
sub
fwait
xor
or
fcom
mov
imulb
or
repnz
arpl
or
xor
fwait
adc
jmp
out
dec
jp
cmp
cld
imul
stos
add
iret
addr16
jns
dec
adc
xor
subl
sahf
push
pushf
sub
imul
mov
and
psllq
or
mov
inc
and
outsb
cli
jge
repnz
movsb
inc
in
pushf
adc
add
sbb
data16
push
mov
pop
adc
cltd
xchg
xchg
jg
push
push
push
pushf
pop
enter
bsr
insb
ljmp
leave
lods
xlat
pusha
std
sub
sbb
aaa
pop
mov
fisubs
mov
push
bound
sub
fidivs
push
outsb
iret
pop
cwtl
stos
ret
add
in
push
cli
mov
adc
call
sub
and
psrad
rcrb
add
fsubrl
or
mov
push
adc
arpl
pop
shlb
dec
aad
mov
sti
in
jb
and
pop
shl
movsl
jg
pusha
cltd
xchg
mov
fdivrl
push
jno
push
call
jge
pop
in
adc
cmpsb
jle
fwait
iret
fcmovnbe
ret
pop
jecxz
repz
sbb
imul
or
xlat
je
bound
lods
fninit
adc
sub
push
sbb
mov
cmp
fwait
inc
addr16
insb
in
jno
xchg
cmp
adcb
loopne
inc
fsubrp
cmp
movsl
mov
mov
orb
sub
add
mov
jl
sbb
insl
mov
nop
or
mov
xor
dec
adcb
pop
pusha
movsb
aas
and
rcrb
pop
sub
inc
aaa
stos
pushf
stos
ss
inc
jge
add
cltd
insl
sub
mov
xor
mov
mov
ljmp
jge
xchg
add
pop
adc
or
fimull
mov
mov
test
mov
cli
or
leave
sub
push
sub
decb
cld
nop
test
call
pop
push
scas
rclb
insl
pop
xor
sbbl
imull
and
or
xchg
adcb
dec
das
ja
add
xchg
mov
mov
mov
mov
std
mov
sub
sbb
or
arpl
into
js
lcall
and
insl
adc
xchg
xor
icebp
pop
jb
rorb
fsubr
addr16
jne
lds
cmp
jl
mov
mov
xchg
or
xor
loopne
cltd
push
mov
add
addr16
shrl
ljmp
sbb
lock
add
mov
sbb
adc
push
mov
pusha
sbb
std
adc
lret
clc
or
popl
mov
pop
vsubsd
rolb
sahf
add
mov
orl
add
mov
sti
or
jnp
jb
repnz
pop
sub
xchg
push
fimuls
mov
sbb
sub
gs
sti
add
pop
stos
cli
shr
movsl
inc
jnp
in
push
imul
out
push
out
out
xchg
push
fidivl
mov
mov
js
and
sti
in
adc
enter
and
psrlq
xchg
lods
mov
out
insl
adc
inc
add
ja
sarl
pop
xchg
inc
outsl
icebp
out
pop
cmpsb
push
dec
inc
push
pop
mov
ss
sub
mov
mov
add
inc
cmp
in
pop
sbb
push
dec
das
outsb
ss
xchg
icebp
sbbb
mov
push
popf
shrl
stos
adc
or
jae
add
fwait
nop
jl
mov
lods
add
adc
or
shr
and
or
fildl
inc
outsb
rol
repz
lds
loop
fldl
xchg
les
and
mov
popf
jle
mov
mov
jecxz
not
les
pop
icebp
lcall
movsb
push
lods
xor
jae
testb
adc
sahf
movsl
js
add
shrl
outsl
pop
dec
adc
pop
loope
loop
xchg
dec
jmp
adc
sub
out
je
fcoml
mov
and
fcmovu
sbb
mov
xchg
pop
fadd
gs
push
jle
imul
loopne
xchg
mov
inc
sbb
gs
rorl
sti
repz
inc
stc
or
scas
or
cmp
into
cmpsb
sti
or
loop
dec
dec
lahf
xchg
testb
jge
xchg
pop
stos
pop
push
sub
je
push
xchg
test
cltd
and
push
imul
mov
outsl
lahf
adc
sbb
pop
mov
and
icebp
lods
sub
adc
add
lahf
pop
gs
mov
pop
cmpsb
xchg
rorl
and
imul
pop
scas
mov
sub
and
sub
inc
pop
adc
leave
in
and
jl
les
dec
ret
sarl
inc
bsf
pushf
push
out
or
sub
daa
stc
iret
inc
sbb
repz
cmp
test
sub
iret
das
sbb
bound
adc
aas
shrl
mov
push
pop
and
popf
and
fstp
xlat
fcoms
mov
cmc
lods
cmp
hlt
out
adc
jbe
nop
jp
int
xor
shlb
pop
aaa
imul
cli
mov
pop
mov
cmp
aas
inc
pop
pop
fwait
leave
or
jl
push
sbb
jle
add
scas
sbb
add
or
sub
iret
pop
jo
mov
mov
clc
mov
daa
cmp
xor
leave
push
jmp
shlb
cmp
add
stos
push
and
sahf
jnp
dec
fdiv
push
or
in
sub
mov
dec
mov
cs
es
daa
xor
popa
adc
mov
dec
std
movsl
mov
aas
jp
and
push
mov
rorl
call
sub
cmp
push
add
inc
mov
jbe
xor
fs
xor
fsubl
dec
insb
mov
into
stos
cwtl
test
mov
in
sbbl
xchg
mov
rcll
imul
dec
mov
dec
pop
mov
or
xchg
sub
popf
fwait
sahf
jne
or
shl
push
mov
daa
orl
js
jp
pop
test
mov
cmpsb
shlb
and
mov
repnz
push
shll
jb
outsb
mov
push
pop
xchg
addl
adc
les
out
aad
jne
aaa
mov
sub
fsubs
jmp
dec
push
jno
sbb
mov
mov
aas
fdiv
mov
adc
call
arpl
pop
mov
popf
pop
sub
add
mov
cmp
negb
andb
mov
xchg
adc
sbb
icebp
mov
out
fcmovnb
out
inc
or
out
jnp
cmp
inc
imul
imul
sub
imull
pop
mov
dec
mov
stos
dec
std
jp
push
clc
fldt
or
or
ffreep
pop
inc
ss
jno
jle
and
fdivp
daa
addr16
mov
popa
push
insl
ret
jp
shlb
daa
adc
cmpsl
adc
xchg
lods
leave
sub
xchg
xchg
test
adc
rol
movl
adc
xor
and
test
adc
mov
pushf
movl
xchg
xchg
pop
cmp
fst
push
sub
push
cmp
cltd
sub
outsl
mov
bound
rcrl
adc
and
push
stc
or
cmpsl
adc
mov
dec
push
leave
clc
dec
jmp
ret
lods
insb
lods
pop
cmp
xchg
dec
jecxz
pop
clc
test
imul
sub
iret
or
jnp
dec
stos
mov
xchg
loopne
xchg
not
adc
inc
movsb
cli
push
dec
add
adc
test
cs
push
push
js
lods
nop
push
mov
test
sbb
add
shl
shrb
ja
cmp
sub
mov
js
add
dec
sub
shrb
mov
ljmp
cmpsl
mov
test
cli
or
xor
dec
sarl
arpl
cltd
flds
lods
ss
inc
cmp
cs
jae
cmp
scas
cmp
cmp
fucom
mov
das
sub
or
loope
bound
out
adc
or
push
push
fwait
push
mov
insl
out
mov
mov
insb
xor
loope
aad
sub
dec
or
lahf
xlat
push
add
repz
enter
fsub
insl
xchg
jge
outsl
js
frstor
adc
cmp
lds
fstl
iret
lret
jle
aaa
imul
js
jb
pop
popa
adc
adc
aaa
daa
mov
jp
imul
xor
loope
lea
or
adc
pop
jns
sbb
adc
dec
into
movsl
in
add
inc
xchg
jnp
push
jge
pop
xchg
mov
adcb
cmp
repnz
jge
mov
insl
push
sbb
mov
add
dec
push
call
les
mov
mov
scas
inc
pop
push
inc
push
pop
xor
dec
jno
cmc
or
pusha
lods
sbb
ss
push
adc
sahf
bound
and
push
and
and
pop
into
lahf
mov
clc
loope
mov
test
jb
fnsave
pop
push
mov
or
dec
fwait
mov
inc
call
mov
and
and
lcall
mov
mov
call
jmp
nop
nop
jle
pop
lds
aad
xlat
subps
lret
mov
in
or
dec
sbb
inc
lahf
ret
sbb
int
or
rcl
sahf
jg
imul
popf
pop
or
xor
decb
sbb
popf
je
out
cmpl
sub
fsubrl
sub
inc
sbb
insl
movsb
adc
lcall
inc
iret
inc
mov
mov
push
jae
in
cmp
and
cld
addb
adc
lret
adcb
push
pop
js
sbb
mov
xor
sbb
rolb
push
lock
filds
ja
fld
pop
call
or
cmp
cltd
add
data16
or
mov
aas
push
out
add
test
mov
add
adc
or
dec
jle
lods
inc
add
dec
icebp
mov
cmpsb
mov
test
mov
or
push
arpl
adc
push
xchg
or
sub
dec
lods
add
or
mov
out
xchg
mov
js
push
test
push
xchg
or
or
iret
ret
aam
jb
or
xchg
add
add
loopne
arpl
popf
imul
std
mov
ja
fbld
pop
and
dec
jle
mov
xchg
pop
jge
decl
sub
sub
outsb
orl
xchg
pop
adc
int3
or
es
cwtl
popf
insb
dec
das
lods
xchg
or
mov
mov
push
mov
fistps
pop
jmp
mov
fistpl
inc
cltd
aas
movsb
stos
mov
jae
jne
lret
repnz
pop
dec
clc
adc
dec
nop
popf
lcall
das
or
cmp
imull
lock
aaa
inc
xlat
cmp
subb
xchg
icebp
mov
mov
and
push
test
pop
jnp
sbb
in
in
out
adc
sub
out
xorb
mov
test
sti
addr16
insl
addr16
aaa
jg
mov
add
out
js
pushf
mov
add
int
adc
xchg
repz
aad
mov
stos
int
je
push
enter
insb
pop
pop
daa
and
ljmp
xor
addr16
les
push
mov
sub
sahf
mull
pop
jle
xchg
jnp
into
ja
xchg
ret
int
shlb
out
movsb
shlb
jo
ja
jmp
add
mov
lahf
push
add
jg
mov
cmp
add
out
sti
dec
popf
fstps
push
mov
xor
sbb
js
mov
dec
sbb
pop
gs
movsb
movsl
dec
pop
rcll
or
sbb
out
sbb
sbb
aas
ret
popa
dec
push
mov
cld
inc
daa
pop
push
leave
or
scas
and
cmpsb
pop
aas
cmc
std
inc
roll
xchg
std
push
jo
inc
enter
push
stos
out
daa
inc
addr16
add
or
test
cmc
mov
cmpsl
pushf
cmp
sarl
movsl
addr16
push
mov
push
jge
sub
std
adc
imul
sub
xchg
dec
xlat
addl
and
jl
out
mov
rcr
pusha
inc
je
inc
lods
xor
jae
and
xchg
mov
push
daa
insl
negl
lcall
lds
add
mov
cmp
sbb
incl
pop
int
repnz
pop
outsb
movsl
pop
in
push
dec
test
imul
jno
jg
cmp
mov
mov
mov
xchg
stos
and
push
aaa
cwtl
into
mov
push
pushf
push
subl
push
and
adcb
nop
push
or
gs
mov
nop
sarb
movsb
pusha
testb
ja
scas
dec
sbb
mov
fwait
shr
push
push
movsl
inc
xchg
mov
or
mov
out
mov
xor
xchg
sbb
push
lret
mov
adc
xorl
cmp
movsl
jecxz
test
idivb
or
dec
stos
mov
out
sbb
adc
imul
cmp
inc
push
daa
mov
out
sar
xchg
dec
es
stos
xor
mov
jne
je
test
sbb
lretw
pop
add
rcrb
dec
sbb
ficoml
out
add
cli
add
jmp
mov
sbb
mov
and
xor
cltd
jno
repz
in
jl
inc
dec
mov
and
mov
leave
leave
xchg
fsubp
xchg
push
jbe
ja
or
imul
pop
cmp
xorb
xchg
cld
and
cwtl
cs
jle
or
out
mov
mov
popf
jno
jg
into
dec
jg
loope
ret
xchg
jmp
mov
push
scas
test
out
rcr
dec
pop
mov
or
aam
movsl
jno
xor
sub
roll
sub
xchg
inc
sar
es
pop
and
mov
mov
imul
insb
mov
ljmp
ljmp
test
test
fildl
xchg
mov
mov
or
mov
shll
cmp
dec
or
mov
ljmp
pop
lret
movsb
dec
adc
mov
out
test
arpl
add
push
pop
mov
cmp
lret
nop
fisttps
test
lcall
mov
jmp
mov
cltd
cmpsl
insl
push
sbb
jg
and
call
mov
ret
push
cli
push
and
adc
sub
es
int3
sbb
push
rorb
inc
in
pop
lcall
mov
hlt
dec
ret
into
dec
pop
int
add
xchg
mov
push
sbbb
or
push
xor
jo
push
sbb
lret
or
and
fisttpl
ss
ret
jne
pop
jbe
lods
movsb
mov
ret
int
inc
cs
ret
adc
in
arpl
lcall
or
stc
and
xchg
jmp
jnp
fs
rcrl
dec
mov
sub
mov
test
xor
pop
aas
js
pop
lods
cmpsl
daa
jae
sbb
mov
loope
or
dec
lahf
lods
paddd
xchg
ret
pop
aaa
adc
movsl
adc
test
mov
ret
and
rol
lea
pop
push
test
jnp
mov
mov
cmp
fiadds
mov
test
dec
popa
subb
clc
in
inc
mov
and
std
aad
push
out
push
pop
addr16
lret
dec
adc
mov
mov
test
pop
xlat
leave
jns
jmp
lods
lds
fidivs
cwtl
pop
test
leave
pop
and
jno
xchg
jbe
mov
inc
sbb
and
das
inc
in
sub
test
xor
movsb
lods
dec
ret
push
mov
mov
cli
in
mov
dec
pop
mov
push
and
stc
xor
int3
pop
or
xor
jecxz
fwait
xor
lods
aad
fists
clc
mov
jns
xchg
iret
jbe
test
or
pop
xor
or
arpl
or
push
add
hlt
mov
add
cmc
dec
mov
mov
cmc
in
push
rclb
mov
call
or
das
repz
or
movsl
adc
sbb
loope
push
xchg
mov
inc
out
jmp
lret
cli
dec
jl
aam
cmpsl
std
rep
call
test
jno
push
push
xor
push
sub
je
mov
addl
push
lret
xor
mov
into
and
add
cwtl
fcomi
nop
cmpsl
mov
into
lea
cs
xor
dec
pop
fsubrs
sub
pop
xchg
and
or
repz
sub
lcall
aad
js
sub
clc
mov
arpl
daa
mov
pop
fsts
pop
stc
and
push
clc
psllq
and
js
sub
repnz
les
add
je
and
push
fisubl
sub
testb
lret
in
out
cmp
inc
cmp
pop
pop
mov
stos
pop
mov
cmp
mov
jp
repz
lret
mov
fistpl
xor
inc
fst
dec
into
in
jmp
mov
sub
push
jge
sbb
pop
rcrb
pusha
mov
pop
sub
out
mov
mov
dec
xchg
mov
jbe
popa
xchg
in
xchg
lds
sub
out
mov
aam
scas
fst
push
xchg
cmp
mov
lds
inc
push
mov
add
arpl
scas
cmp
sbb
pop
push
mov
adc
mov
inc
daa
push
sbb
inc
xchg
or
mov
lahf
imul
mov
xchg
cltd
add
dec
rolb
mull
sbb
or
fmul
jae
jmp
es
bound
add
sub
scas
lret
fimull
rorb
jmp
adc
jns
std
lods
mov
add
dec
and
xlat
add
pop
pop
adcb
les
pop
inc
push
mov
or
sbb
cmp
pop
xchg
fiaddl
in
jnp
test
filds
xor
insl
xor
push
repnz
dec
mov
mov
mov
loop
repnz
mov
lret
pop
cmp
movsl
adc
inc
jmp
adc
loope
xchg
add
sbbb
cmp
in
neg
pushl
cmpb
adc
jp
pop
push
jp
xor
mov
sub
dec
push
sti
das
inc
ret
cmc
loope
push
lods
cwtl
jecxz
mov
sbb
mov
rorl
rcrl
add
push
loope
shrb
jno
lret
les
xor
stos
lcall
pop
ret
sbb
xor
xchg
push
jmp
xchg
outsl
testl
xor
pop
aad
mov
inc
ret
jge
in
xchg
dec
xchg
fisttpl
nop
faddl
pop
mov
dec
pop
lcall
lret
pop
sbb
mov
mov
shr
and
fistpl
mov
or
mov
hlt
push
sbb
cmpsb
out
pusha
jbe
mov
lret
jo
xchg
test
test
xchg
cli
movsl
int
jge
rcrb
movsb
icebp
es
shl
stos
pop
mov
sub
adc
movsb
dec
add
int
movsb
push
cmp
gs
push
mov
outsl
xchg
sbb
les
inc
xor
mov
jae
mov
mov
loopne
enter
sahf
lret
clc
xchg
out
push
and
sarl
push
xor
push
ds
popf
and
gs
lea
repnz
js
sbb
faddl
iret
enter
dec
fiaddl
jb
out
cmp
cld
test
adc
fsubrp
inc
mov
or
pop
mov
jnp
lcall
adc
ja
xchg
mov
movsb
add
jns
push
xor
sub
dec
push
test
mov
jno
sti
iret
cmpb
push
out
pop
pushf
aad
flds
out
mov
out
test
fstl
dec
cmc
xor
stos
stos
ds
popf
mov
adc
data16
cmp
mov
xor
mov
pusha
xchg
aas
out
sbb
mov
xchg
scas
jnp
nop
push
mov
pop
in
mov
xchg
or
movsb
mov
inc
outsl
rcr
add
cmpsb
inc
xchg
test
cli
mov
jno
cmpsl
mov
jl
add
ss
clc
test
pop
adc
mov
fsubrl
pop
jns
fsubrs
xor
cltd
xchg
arpl
push
sti
fdivrs
push
jns
pop
ljmpw
mov
push
push
fsub
jl
pop
cmpsl
sbb
pop
add
sub
mov
div
cmp
add
js
cs
fnstsw
imul
mov
fldl
dec
pop
and
cmpsl
xchg
cmp
fwait
mov
xlat
mov
insl
inc
cmc
fnstcw
outsl
stos
cmc
push
int
mov
xchg
repz
out
dec
mov
ficoml
mov
scas
fiadds
ret
data16
gs
jg
push
ljmp
cmp
call
add
scas
dec
inc
jg
or
xchg
int3
push
xor
lahf
fcomp
push
cld
mov
aas
cs
mov
shll
lods
outsl
aas
mov
push
test
in
sar
js
push
inc
mov
or
mov
add
mov
mov
sub
sbb
add
cmp
mov
pop
jg
mov
fmull
xchg
movsl
test
mov
jmp
orb
mov
mov
push
mov
addr16
mov
pop
xorl
pop
cld
push
fisubl
cmp
jle
push
mov
fidivs
push
mov
jb
inc
push
repz
test
out
xor
sub
andl
es
mov
pop
sbbl
fisttps
sub
dec
ror
cwtl
addb
jbe
into
jmp
stos
fisttps
and
mov
stc
das
pop
pop
push
ja
pop
mov
rolb
int
lds
ret
lock
popa
dec
sub
test
std
aaa
icebp
lock
push
mov
sub
push
sub
push
cmp
dec
sti
or
mov
xorb
aad
ds
jmp
ret
into
movsb
pop
jle
pop
pop
add
add
arpl
push
movsb
cmp
jne
int
pop
push
cs
pop
call
scas
fisubrl
and
fcoms
jns
jno
shlb
out
stc
jns
shll
mov
mov
stc
aas
xlat
and
sahf
xchg
out
xchg
jmp
xchg
sub
hlt
int3
es
mov
cmp
ds
fimull
aaa
dec
jle
out
arpl
sub
mov
jecxz
addr16
sbb
ds
mov
jno
pop
addr16
mov
push
push
pusha
stos
inc
xchg
xchg
cld
daa
and
and
aas
into
stos
daa
adc
mov
add
call
inc
scas
pop
in
sbb
movsb
fcom
jne
inc
pop
fbld
mov
rorb
inc
add
cmp
shll
cmc
inc
pop
add
sbb
and
inc
nop
xor
test
int3
xchg
movsl
fwait
mov
inc
loopne
add
inc
sbb
clc
loope
nop
fisubrl
lea
xchg
movsb
adc
xchg
xor
mov
dec
push
pop
xchg
lds
push
jle
push
sbb
lods
mov
in
rcrl
mov
fmulp
lret
pop
push
fwait
outsl
fldenv
jmp
loope
jns
push
fstps
inc
mov
lret
sbb
or
xor
ljmp
popf
pop
push
sub
push
inc
ret
mov
ret
jae
in
mov
fsubrl
dec
lock
testb
repz
insb
imul
or
mov
sbb
add
mov
jg
xchg
repz
test
js
lods
rclb
jmp
aam
sub
xchg
push
jo
add
mov
mov
or
add
rcl
mov
xor
xchg
aad
into
lods
sbb
mov
or
pop
xchg
and
jne
addl
xchg
jb
add
mov
sbb
push
imul
inc
stos
or
ror
pop
aam
jns
addb
inc
rclb
cmp
mov
jbe
sub
dec
lcall
iret
imul
ss
in
and
push
inc
sbb
xchg
xlat
lahf
or
jmp
dec
or
pop
jmp
sub
sbb
fildll
jmp
lods
rcrb
push
mulb
push
adcb
in
aam
mov
mov
scas
dec
or
ret
mov
lods
fdiv
rorl
fstpt
mov
dec
out
fcompl
add
int3
fcmovnb
in
fistl
test
in
lods
daa
sarl
mov
dec
mov
std
pop
mov
call
ds
xchg
and
sbb
push
stos
mov
push
idiv
jp
dec
mov
sbb
cs
jb
inc
pop
rclb
filds
dec
das
inc
add
les
cmc
sbb
icebp
test
pop
nop
jmp
fmuls
xorl
lods
fstpl
push
pusha
rcrb
iret
pop
sub
mov
mov
lea
ljmp
roll
flds
shrb
cmp
into
sarl
jl,pt
pop
and
sbb
fcom
fwait
dec
or
scas
pop
jb
sti
and
es
pop
jne
pop
cmp
mov
scas
jae
cmp
pop
data16
and
lds
add
out
jl
insl
push
arpl
stc
mov
outsl
pop
test
pop
ljmp
and
mov
out
jle
shll
mov
imul
std
aam
sub
test
loope
mov
inc
cmc
cli
pop
out
or
ret
je
aas
mov
push
lods
lods
scas
adc
pop
daa
and
ret
mov
clc
insb
jae
mov
cmp
jge
ret
sbb
movsb
orb
mul
cmpsb
int
and
cmp
jno
mov
es
xchg
cltd
loope
fimuls
pop
cmp
test
test
sub
fstp
jg
jle
les
outsb
cmp
sub
lahf
mov
ljmp
popa
pop
inc
cli
je
movsb
bound
scas
jno
pop
pop
lret
inc
jo
xchg
lds
and
push
push
mov
out
gs
jae
jb
sbb
mov
sahf
mov
outsb
jle
push
adc
jmp
into
in
xchg
js
mov
mov
std
cmp
and
cmp
mov
jo
pop
push
xchg
les
out
pushf
add
sub
xchg
in
or
aad
ja
cli
imul
jo
pop
fistpl
cmp
dec
jmp
cmc
jae
sbb
jb
cmp
jns
mov
sbb
pop
rorb
into
sub
roll
lds
inc
adc
sub
sbb
aaa
out
push
jae
jg
push
mov
mov
mov
sbb
lea
rcrb
clc
and
jb
and
inc
jp
pop
add
shrb
or
js
imul
pop
cwtl
cmpsl
xchg
fs
xor
mov
jge
cltd
gs
lea
sbb
insl
sbb
mov
dec
fwait
xchg
movsb
in
cmp
pop
and
cld
lahf
clc
mov
test
mov
insl
xchg
pop
push
xchg
int3
push
int
xchg
cmp
and
testl
out
das
mov
mov
movlhps
push
sub
xor
je
dec
pop
and
test
sbb
pushf
push
push
pop
xor
les
imul
cmp
push
mov
mov
shrl
out
cmpsl
loop
sete
push
rclb
jne
jle
cs
enter
stc
push
icebp
mov
cmp
loop
inc
adc
rcl
dec
repz
jle
mov
insb
pop
mov
fsub
inc
idivb
outsb
dec
jg
cld
mov
jg
push
movsb
add
inc
adc
iret
scas
push
cmp
out
orl
or
inc
cmp
imul
jl
cltd
sbbb
sti
shlb
cmc
sub
sbb
pop
scas
stos
data16
clc
fists
sub
notl
mov
push
xor
pop
clc
jno
outsl
xorb
repnz
fs
mov
sbb
es
xchg
scas
fs
enter
loopne
cmp
add
xchg
fdivs
icebp
sbb
in
fwait
sub
sbb
inc
call
cli
fmull
ficomps
pusha
xor
ret
mov
ljmp
aam
push
scas
stos
push
cli
dec
push
mov
loop
js
push
mov
shl
mov
adc
xchg
mov
xor
aaa
mov
movsb
mov
jbe
adc
xor
adc
insb
imulb
cmpsb
inc
add
jmp
and
xor
xor
dec
cld
aas
stc
add
cmp
cmpsb
lds
mov
out
push
lods
inc
mov
popl
outsb
es
bound
xor
sbb
int3
sub
subb
mov
mov
adc
or
adc
outsl
std
icebp
xor
push
insb
stc
out
cmp
out
mov
jns
sub
dec
mov
dec
cltd
and
pop
mov
jg
scas
pop
je
inc
sbb
mov
push
rcrb
repz
push
push
roll
loop
push
test
mov
icebp
lock
jb
hlt
cmpsb
outsb
dec
sbb
dec
xor
mov
rolb
ret
push
and
sub
repnz
mov
ret
lds
shlb
xor
sub
cmc
xchg
push
jecxz
sub
imul
insl
cmpsl
dec
mov
ret
sbb
insb
scas
mov
jmp
cmpsb
pop
and
adc
xlat
xor
fsubs
jb
nop
fstpl
es
xlat
int
mov
jl
jb
insb
jns
xlat
cltd
and
add
sub
in
cmp
or
lods
stc
pop
outsl
out
mov
ja
pop
test
cmp
mov
mov
adc
xlat
js
jl
imul
xchg
cwtl
addr16
cwtl
lods
cs
stos
lods
stos
cmpsl
jno
and
xor
fwait
cltd
mov
fsubrs
out
shrb
push
jnp
loope
cmp
pop
hlt
cmp
popl
mov
fs
mov
xor
daa
insb
xchg
enter
push
js
sti
adc
cmp
outsb
or
push
inc
les
shlb
pop
aas
inc
daa
fwait
mov
jp
rol
stc
jbe
fiadds
je
push
jp
sbb
jmp
cmp
cmc
dec
lret
faddl
fisubrl
enter
insb
lock
sbb
xchg
xlat
sub
dec
sbb
lods
mov
ffreep
mov
insb
and
fwait
jp
sbb
jge
lds
jae
std
xchg
imul
or
push
and
scas
sbb
movsb
push
inc
in
cmp
mov
sbb
or
mov
pop
jae
push
shll
cmp
pop
mov
xlat
decl
jp
out
mov
mov
xchg
out
in
scas
or
pop
lock
in
lret
xor
pop
push
and
jae
outsb
sub
lods
insb
outsl
dec
pop
subb
push
xchg
dec
mov
in
push
mov
inc
dec
mov
mov
fsubrl
ret
stos
or
pop
pop
cmpsb
cwtl
and
cmpb
push
push
cli
mov
pop
and
mov
movsb
sbb
inc
fwait
cmp
test
mov
cmp
push
mov
in
lcall
adc
je
push
imul
sti
ds
jecxz
mov
leave
adc
scas
sbb
add
les
mov
clc
mov
xor
sub
outsb
xchg
or
mov
std
dec
faddl
jecxz
outsb
sub
fcomip
popa
mov
adcb
mov
fildll
clc
fsubrs
mov
stc
sub
mov
push
imul
and
sarb
jb
cmp
mov
enter
popf
dec
fistpll
movsl
imul
or
cmpsb
jl
imul
popf
xchg
out
mov
imul
jle
xchg
loopne
bound
add
mov
xchg
add
insl
push
add
pop
mov
lcall
sti
xchg
insb
lcall
lods
ss
int
xchg
addr16
movb
push
nop
je
dec
add
mov
xor
mov
mov
mov
lds
mov
into
nop
inc
jnp
mov
mov
lret
mov
or
cmp
int3
inc
jns
and
sbb
xlat
xchg
out
popa
stos
sti
loopne
adc
shll
punpckhwd
movsl
lock
fisubl
mov
and
lcall
mov
bound
push
out
mov
sub
test
jecxz
pop
cmp
adc
sahf
mov
ret
fs
ss
add
ret
mov
ds
xchg
lcall
mov
add
mov
cmp
xchg
dec
adc
push
xlat
jg
adc
jns
loope
stos
in
into
jp
cmp
imul
add
push
mov
stc
push
mov
and
and
mov
xchg
mov
and
out
dec
stos
loope
ja
in
mov
dec
mov
sub
stos
cmp
shlb
inc
in
into
clc
pop
fs
inc
jbe
xchg
test
data16
pusha
dec
jne
jbe
xor
push
leave
in
lods
mov
inc
dec
push
idivl
mov
ljmp
adc
int
mov
ss
push
adc
pop
into
cld
nop
jbe
pop
jecxz
test
rolb
xchg
inc
mov
pusha
jbe
popf
mov
aad
mov
mov
stos
in
pop
data16
js
push
pop
in
and
fisttps
lds
mov
or
pop
flds
mov
pop
adc
lret
dec
push
dec
mov
xchg
xchg
mov
xor
mov
jge
dec
mov
mov
dec
enter
ja
jp
jecxz
xchg
test
aad
nop
mov
push
push
test
cmp
cmova
movswl
jno
and
inc
test
in
test
sub
stc
xor
stc
cltd
mov
sbb
test
imul
outsl
scas
pusha
mov
dec
xchg
inc
push
sarb
in
push
loop
pop
pop
push
bound
cli
cmp
data16
out
cltd
gs
outsl
adc
dec
std
mov
adc
push
sub
stos
push
mov
into
fwait
xlat
pushl
xor
add
mov
mov
andb
loop
sub
pop
in
popf
add
sub
push
jno
and
lods
push
popf
push
xor
xchg
and
xchg
adc
push
sub
fs
les
das
cld
rcll
inc
das
sbb
sub
repnz
pop
out
test
pop
push
sbb
push
je
sub
mov
inc
add
jne
cwtl
lahf
pop
out
xchg
xor
decl
and
and
pop
push
fnclex
pop
inc
out
dec
mov
test
mov
pop
mov
add
adc
into
in
ja
adc
inc
sub
test
pop
imulb
orl
adc
inc
xchg
sub
xor
xchg
insb
add
mov
add
cmp
jmp
cmp
ljmp
orl
jg
adc
xchg
jmp
sbb
push
lahf
jge
sub
sbb
cwtl
inc
clc
ret
daa
aam
pop
out
insl
mov
dec
xor
shll
hlt
xchg
mov
jae
insl
mov
mov
push
loope
ds
test
scas
shll
jle
lds
and
jle
and
aad
and
inc
sub
je,pn
push
cld
stos
mov
xchg
jmp
insl
cmp
cltd
sahf
push
clc
xchg
adc
xchg
aam
adc
xchg
lods
mov
jns
jge
jae
jmp
into
inc
pop
lods
or
ficomps
fbstp
jmp
add
and
pop
fldcw
cld
add
push
jnp
xor
push
push
mov
out
pushw
xchg
sub
adc
push
in
pop
je
stos
fistpl
jg
adc
inc
jmp
outsb
add
cli
and
stos
dec
mov
test
lock
or
bound
mov
lds
fcomip
and
cli
inc
bound
cli
cmp
jmp
lahf
das
sub
cmp
notb
iret
inc
add
lock
aad
mov
repz
mov
cld
add
lods
popa
jmp
insl
or
jae
jmp
stos
or
pop
or
mov
jne
inc
or
in
ficompl
or
dec
in
movsl
adc
xchg
aad
mov
idivb
jae
mov
stos
ret
mov
push
jnp
int3
mov
push
int3
dec
jge
xchg
adc
xchg
sub
pop
dec
add
mov
ljmp
jmp
lds
das
pop
sbb
cs
mov
pop
popf
daa
shlb
jae
out
mov
mov
pop
pop
and
jne
push
aad
test
push
inc
pop
pusha
loope
cmp
bnd
add
push
xchg
or
xchg
cwtl
xchg
xchg
inc
and
sbb
cmp
and
aaa
pop
jecxz
popa
and
fstpl
or
dec
lahf
sbbl
jno
jmp
daa
lock
inc
xor
ja
pushf
out
aad
cmpl
cmpsb
xchg
fcom
sbb
lret
fildll
out
jb
adc
sbb
lds
pusha
bound
sarl
dec
fldl
adc
dec
fiaddl
lahf
dec
cmpsb
mov
outsb
pop
cmp
jge
aad
outsl
mov
and
call
das
and
adc
mov
call
stos
mov
mov
and
cmp
orl
loope
notb
dec
cltd
rclb
push
adc
testl
inc
lods
cld
sbbb
shrb
dec
pop
push
sub
sub
jns
jp
cli
jnp
mov
popa
dec
ss
roll
mov
sarl
in
enter
xchg
out
jne
fs
push
pop
fiaddl
jo
in
dec
xor
xor
mov
sub
pusha
xor
mov
out
rclb
iret
outsl
or
cmp
popf
jno
jne
cltd
cmp
adc
into
inc
dec
inc
push
loop
fisttpll
dec
add
scas
cwtl
cltd
jo
and
pop
add
divl
and
lcall
jno
inc
mov
pop
or
in
sbb
mov
fcoml
xchg
sub
mov
push
mov
incb
lret
imul
lret
inc
lods
ret
iret
and
loope
push
jno
xor
xchg
inc
ret
inc
mov
mov
adc
imul
fnstcw
or
pop
clc
pop
fsubrl
mov
jp
movsl
xchg
subl
add
and
push
inc
xchg
lcall
fcmove
loop
or
fmul
cmp
xor
sbb
je
xorb
clc
adc
mov
cwtl
testl
pop
sub
lea
pushf
cmp
dec
adc
cmp
popa
sub
test
cmp
cmpb
inc
call
int
push
mull
sbb
or
retw
shlb
pop
push
test
and
imul
jno
or
fs
and
sbb
xor
inc
add
in
add
roll
ror
flds
mov
xlat
mov
mov
sub
les
out
sub
push
push
xor
loope
push
sbb
inc
pop
jle
push
jae
repnz
aas
xchg
scas
bound
mov
sub
ja
jb,pt
in
test
sub
cmc
sbb
push
or
pop
dec
in
cmp
jg
xchg
mov
cmp
xchg
ror
dec
arpl
or
push
pop
fldpi
adc
sub
ret
loop
push
rorl
repz
dec
mov
mov
shlb
lahf
int3
jns
leave
testl
adc
jmp
les
jmp
cld
sbb
js
jg
and
stos
adc
xchg
test
mov
mov
sbb
js
das
lods
lret
daa
test
mov
fisubs
xchg
jp
lahf
or
add
or
lret
inc
add
addr16
jb
cmp
pop
js
sbb
pop
std
pop
pop
inc
xchg
cltd
inc
in
jmp
mov
fidivrs
mov
mov
shr
jnp
mov
dec
lods
xor
jl
jo
push
scas
clc
adcl
sub
call
mov
les
daa
shll
scas
cmp
cmp
xor
cmp
mov
adc
inc
push
pushf
ljmp
cmp
xor
mov
mov
xchg
push
mov
cmp
jp
inc
fidivs
mov
xchg
es
lea
adc
imul
dec
and
arpl
mov
cmp
sub
dec
lea
lods
push
jmp
in
cmp
cmp
bound
and
add
rorb
dec
jno
xor
jmp
cmp
into
xor
xchg
mov
xor
cmpsl
dec
add
add
lock
flds
xchg
cwtl
int
in
sbb
inc
dec
jo
or
pushf
pop
add
add
add
and
xor
inc
mov
xor
sub
add
xchg
aad
sbb
lods
nop
insl
or
add
cmc
das
sbb
sbb
and
pop
sub
mov
push
adc
push
iret
sub
frstor
and
pusha
mov
adc
scas
sub
cli
fs
sub
pop
dec
xor
insl
jecxz
mov
pop
aam
popf
inc
mov
out
test
test
pop
out
fcoml
sub
das
lods
shrb
mov
jnp
fwait
int
mov
mov
sbb
cmc
int3
scas
sbb
movsl
mov
daa
lods
fistps
je
popf
std
push
and
cmp
mov
std
cmpsb
cwtl
aas
dec
add
push
dec
adc
inc
pop
jb
push
add
pusha
pop
jae
jl
or
xchg
xor
int
test
sub
stc
hlt
or
rolb
arpl
and
loopne
cltd
dec
repz
lret
pop
add
loopne
push
push
jmp
es
call
aas
fsubl
scas
xchg
jno
enter
jnp
mov
jns
jl
es
push
loopne
and
dec
jecxz
and
jecxz
sahf
cmp
pop
xchg
gs
and
mov
out
lahf
faddl
cltd
test
add
and
and
movb
out
or
sub
add
lods
test
stc
movsb
call
jp
fnsave
or
mov
xor
ret
test
pop
daa
jecxz
cld
incl
or
sub
and
inc
imul
test
test
jo
jnp
adc
cmpps
fstps
test
push
adc
mov
addr16
sbb
int
add
and
or
lds
dec
aad
pop
cmp
cmc
movsb
test
push
add
shrl
arpl
sub
mov
int
sub
adc
ret
push
lods
mov
dec
out
inc
pop
out
into
icebp
ja
test
jbe
imul
das
mov
sub
out
testb
in
or
ficompl
mov
mov
jmp
or
dec
mov
insl
lds
sbb
push
sub
jg
rorl
cli
pushf
sahf
arpl
outsl
sahf
out
test
cmp
lret
xor
into
sarl
movsb
inc
push
dec
dec
inc
bound
insl
and
cmp
dec
or
cwtl
xchg
inc
jne
daa
add
cmp
xor
lods
mov
jae
or
aad
dec
xchg
add
xchg
int
adc
xor
loop
mov
cmp
add
mov
mov
mov
push
popf
adc
loop
mov
sub
pop
jns
lcall
arpl
mov
mov
lds
mov
pop
push
xchg
lcall
xchg
jmp
xor
adcb
mov
rol
mov
push
movsl
test
daa
mov
cmpsb
icebp
andb
inc
sub
rorb
aad
lret
and
outsb
xchg
sub
repz
cmp
iret
sub
xor
fistl
jne
push
int3
testl
out
mov
inc
mov
loop
sub
mov
cld
inc
jbe
push
sub
je
mov
cmp
add
lods
adc
add
cmpsl
dec
shll
mov
pop
jp
scas
xor
bound
pop
inc
aad
ficoms
xchg
pop
in
jnp
mov
test
test
cld
mov
inc
sub
and
lret
std
jge
dec
int3
and
sub
jmp
test
jg
mov
arpl
fmull
adc
repz
bound
jno
icebp
cmc
xchg
xor
add
scas
push
leave
ljmp
jp
arpl
add
cmp
push
pusha
out
dec
mov
sti
arpl
inc
inc
das
mov
mov
mov
idivl
stos
test
jns
mov
adc
inc
mov
pop
and
xor
out
inc
mov
out
loopne
popf
pop
mov
sbb
jg
mov
clc
inc
sub
int3
push
push
out
sbb
scas
mov
pop
lods
push
add
sti
xchg
ret
mov
test
mov
sub
out
and
pop
jns
rcrb
xor
imul
lds
fdivl
ret
dec
outsb
inc
por
arpl
jle
mov
rclb
mov
xchg
jg
mov
add
roll
add
loop
jmp
dec
test
lea
inc
mov
mov
insb
clc
sbb
cmp
loopne
cs
and
aam
idiv
xchg
sti
and
rcll
or
das
and
cld
xchg
ja
push
and
out
out
scas
jge
clc
fdivr
jbe
jnp
stc
les
jae
insl
fnstsw
add
loope
sahf
cld
mov
pop
xlat
jb
and
in
sti
adc
lea
push
insl
lahf
and
mov
sub
nop
popf
xor
ja
movsl
scas
push
xchg
call
and
and
lret
jmp
popa
rclb
cmpsb
push
out
into
sbb
jnp
and
xor
inc
hlt
aas
cs
jmp
loopne,pn
sbb
mov
ret
dec
imul
clc
out
add
mov
add
dec
jg
inc
pop
mov
mov
cltd
mov
fdiv
xorl
ljmp
push
or
cli
int3
aad
xchg
mov
or
aam
xchg
pop
pop
fwait
shll
aaa
and
mov
and
push
clc
scas
lods
jecxz
jg
mov
pop
pop
cs
scas
inc
cltd
cwtl
dec
inc
dec
pop
dec
js
es
pop
lods
push
call
sub
pop
sub
addb
in
mov
add
jae
pusha
fwait
icebp
lret
movsb
add
push
jno
fsubs
mov
mov
popf
jmp
inc
mov
jmp
dec
sub
arpl
push
pop
pop
push
mov
add
subl
lods
sub
enter
fiaddl
outsl
fstpt
test
add
sub
repnz
subb
mov
push
outsl
add
rcrb
cmp
test
xchg
push
push
inc
jl
push
xchg
pop
cli
bound
jmp
movsb
cmp
clc
sarb
out
movsb
inc
andl
jecxz
lcall
sub
movsl
sbb
xchg
jmp
add
pop
std
jo
lret
stos
lret
stos
pop
sbb
jmp
dec
ss
jg
adc
push
js
outsl
fdivrl
push
icebp
pop
rcll
insb
or
outsl
cld
jb,pt
bound
sbbb
lods
jnp
or
jno
and
add
xchg
pop
add
in
sbb
xchg
enter
push
enter
push
in
sbb
cwtl
mov
fs
mov
in
adc
mov
xor
dec
stos
dec
xchg
and
push
mov
cmp
cmp
inc
outsl
outsl
divl
cmp
fdivrl
xchg
cmp
sub
leave
mov
es
xorl
pop
mov
jmp
inc
fdiv
inc
inc
and
pop
lahf
movsl
ljmp
in
xor
sbb
lea
out
xor
loop
aad
jno
outsl
rcrb
sub
or
mov
ret
cltd
jns
cmp
stos
imul
shlb
pop
jle
jle
fsubp
pop
jge
in
jae
out
verr
xchg
imul
pop
xor
mov
lods
push
and
mov
xchg
outsl
push
stc
mov
ret
adc
mov
inc
shl
shlb
js
outsl
fldenv
add
fists
test
jnp
pusha
and
dec
mov
cmc
mov
and
and
pop
ss
inc
or
push
cld
adc
xor
jbe
in
filds
sub
push
dec
das
insb
sarl
mulb
clc
out
fmuls
scas
sti
adc
dec
cltd
cmc
aam
sub
stos
inc
dec
popf
inc
mov
dec
push
insb
out
lea
mov
sub
lea
cmc
sbb
mov
in
rorb
adc
xor
clc
mov
je
mov
incl
push
xchg
cmpsb
pop
into
push
shlb
mov
jo
pop
or
xchg
mov
pop
int
fisubrs
jno
fsubl
imul
in
push
or
cld
or
test
inc
int
testb
es
sub
cmp
popf
fiadds
loop
das
es
fnstsw
rorl
xchg
cmc
push
add
jne
inc
rclb
sbb
ret
lods
mov
xor
fcomp
mov
dec
aad
add
xor
insl
ficompl
stos
push
sbbl
mov
insb
and
mov
mov
dec
sbb
lock
mov
adc
ret
mov
pop
popa
sub
add
enter
jmp
adc
xchg
mov
movsl
decb
in
enter
insb
xor
inc
rclb
push
ret
and
loope
adc
js
les
rol
ficoms
push
push
in
xor
in
repz
stos
dec
cmp
push
pop
sub
dec
imulb
or
mov
or
sub
cmc
push
adc
je
adc
in
push
pop
push
dec
clc
rorl
data16
clc
mov
mov
aam
jno
xlat
scas
push
out
mov
mov
cmc
push
das
adcl
cld
sub
ljmp
clc
xchg
out
sub
cwtl
cmc
cmc
jnp
xlat
or
mov
xor
pop
jle
in
gs
sub
popf
add
push
sub
das
movsb
popf
and
cmpsb
loop
repz
add
pop
jbe
push
mov
inc
push
jmp
or
push
iret
repz
stos
in
movsb
mov
or
insb
lock
adc
pop
das
in
aam
inc
xor
sub
mov
and
mov
adcl
jne
loop
cmp
lds
mov
mov
in
inc
push
popaw
and
pop
cli
cmp
ja
inc
xchg
out
clc
push
out
sahf
pusha
sub
loope
and
std
jns
pop
adc
or
inc
xlat
imul
popf
std
xchg
ss
adc
pop
cwtl
jne
aaa
mov
or
mov
push
je
xchg
pushf
pop
xor
and
or
cmp
push
ds
je
pop
xlat
pop
sbb
and
dec
repz
pop
std
inc
xchg
sub
clc
inc
xorl
test
push
sbb
and
insb
adc
xchg
xchg
ljmp
mov
pop
test
fwait
and
rol
movsb
xchg
mov
adc
push
movsl
jns
loope
fisubrs
push
mov
xchg
sub
mov
test
stos
shrw
xor
inc
aad
jne
shlb
inc
mov
outsl
int3
aad
dec
in
fistpll
in
push
sahf
adc
and
js
xlat
leave
dec
xor
rcll
mov
loop
shlb
jge
cli
mov
mov
cmp
xor
lcall
mov
adc
mov
lods
fs
popf
lds
mul
cmpsl
loop
stos
popa
mov
in
cwtl
pop
test
mov
jnp
xchg
jne
icebp
pop
int3
icebp
dec
mov
mov
mov
cmp
sub
push
orl
testl
aam
arpl
lahf
sbb
mov
lret
add
sarb
dec
lret
add
movsb
fcomps
outsl
cmp
cwtl
adc
pop
shlb
xchg
mov
or
fldl
mov
mov
call
mov
std
shrl
cld
or
sub
loopne
inc
dec
shrb
lret
je
stos
jle
lods
addr16
cmpsl
iret
cmc
mov
out
clc
and
and
daa
sbbb
ljmp
jmp
xchg
xchg
repnz
sahf
or
sarb
jle
out
push
push
mov
repz
loop
stc
in
mov
fwait
mov
gs
aam
xchg
adcl
mov
fstpt
lods
movsb
dec
das
call
and
xchg
arpl
xchg
sbb
xchg
push
ret
dec
xchg
dec
or
pushf
call
jl
jle
pop
imulb
jmp
jne
mov
adcl
push
push
mov
jmp
ret
cltd
xor
jge
shr
lret
xor
fs
sub
cmp
cmpsb
aam
enter
daa
or
cs
scas
cmpsb
mov
lret
push
dec
dec
je
dec
pop
xchg
xchg
mov
mov
or
and
xchg
inc
rcrb
push
sbb
out
stc
lcall
xor
int
jecxz
call
leave
pop
jbe
inc
shlb
dec
cld
mov
aam
adc
in
or
adc
dec
mov
lock
inc
lds
frstor
inc
addb
adcb
dec
jo
inc
fistps
xor
pusha
push
fstpt
push
jae
sbb
ret
cli
mov
iret
test
test
xor
test
cmp
push
cs
fs
mov
add
out
je
dec
shrb
out
data16
in
sub
fnstsw
sbb
imul
cli
sub
dec
cmpsb
sbb
dec
or
jg
xchg
lret
adc
push
test
dec
mov
or
lds
cmp
in
lcall
sub
xor
pop
mov
data16
idivb
clc
pop
mov
pop
repnz
xchg
enter
pushl
pop
rorl
sbb
dec
outsl
lret
pop
sub
xchg
pusha
jb
nop
js
add
mov
nop
mov
ss
je
outsl
or
push
mov
sub
loopne
fadd
pushf
outsl
fistpll
mov
adcl
cmpsb
xchg
adc
add
push
mov
jle
int
emms
loope
mov
fcoms
mov
cmpsb
dec
push
mov
outsl
std
ficoml
pop
ds
lods
xchg
jae
dec
push
js
cmpsl
xchg
mov
mov
fbld
aas
cmp
sub
mov
cmpsl
lcall
ja
shr
scas
push
sarb
add
pop
inc
mov
mov
pop
int3
push
dec
jge,pt
mov
push
ljmp
sub
imul
lea
pop
pop
ret
mov
and
and
test
repz
daa
hlt
fmull
or
mov
bound
shll
dec
and
sbb
lea
mov
insb
aas
push
dec
inc
testl
mov
mov
xor
ljmp
stc
aaa
lret
inc
add
pop
and
adc
std
in
or
sub
jp
pop
push
jb
mov
or
mov
fcom
push
loop
pushf
in
cld
mov
add
adc
sub
cltd
or
jg
adc
dec
add
int
pop
inc
mov
insb
or
and
mov
push
bound
inc
icebp
xor
add
jno
ret
dec
mov
mov
xchg
sbb
jl
push
das
test
dec
fnsave
xchg
in
dec
sahf
aaa
lods
dec
cmp
or
xchg
pushf
fisubl
cmp
rol
xor
scas
mov
add
dec
shrb
mov
and
and
pop
xor
addb
fsubs
lock
dec
sbbl
sti
lods
or
enter
lcall
stos
inc
pop
sahf
pop
leave
push
sub
pop
stc
divb
pop
jb
mov
cmp
pop
mov
cmp
sub
push
pop
push
cmpsb
out
cwtl
and
pop
cli
mov
jae
addl
pop
fcomip
xchg
clc
loop
mov
push
outsb
scas
mov
sub
cmp
mov
minps
adc
push
gs
jge
mov
leave
lock
xchg
test
pop
sbb
mov
and
test
dec
dec
cmp
lods
mov
inc
cld
sbb
and
xor
push
cld
dec
dec
daa
pop
mov
imul
int
jns
sub
into
sbb
xor
and
nop
je
xchg
dec
sbb
and
dec
cwtl
push
rorl
pop
fsub
add
call
lret
movups
addb
sbb
pop
jb
cmp
dec
cmp
cwtl
jb
ja
imul
imul
loop
xor
fsubrs
push
xor
insl
add
push
fbstp
out
mov
ror
shr
sub
xor
and
pop
mov
hlt
je
and
fidivs
jp
jae
les
outsl
sbb
push
lods
jecxz
mov
or
sub
aad
std
daa
mov
pusha
out
rcll
movsl
sbb
jg
stos
lods
test
pop
push
dec
and
jnp
movsb
cmpsb
sbb
jmp
idivb
xor
aas
testb
add
test
jecxz
leave
xor
mov
sub
xchg
loope
call
incl
scas
out
push
sbb
jo
jecxz
push
insb
cmp
out
jnp
enter
fisttps
dec
ds
aaa
xor
clc
mov
fs
jg
jb
jge
data16
adc
testl
insl
mov
jae
sub
scas
mov
fsub
aaa
mov
jl
jno
mov
pop
lock
ficompl
adc
es
adc
movsb
filds
out
pop
mov
pusha
rclb
mov
lahf
imul
adcb
lea
pop
xor
jae
pop
jl
int3
movsb
sbb
add
test
sbb
pusha
and
pop
inc
push
push
sbb
imul
lock
outsb
xchg
lret
push
bound
iret
in
ljmp
lods
aad
notl
lods
dec
faddl
shlb
pushf
xchg
jbe
clc
jl
mov
pop
pslld
or
jge
xchg
pushf
jns
xchg
das
pop
xchg
mov
inc
call
adc
jl
cld
mov
popfw
cs
loope
adc
std
or
les
pop
mov
add
or
loope
in
out
rcll
imul
ret
test
xchg
testb
jg
loope
stc
repnz
les
lcall
sbb
mov
push
mov
adc
push
inc
rorb
lds
jp
mov
or
xor
icebp
pop
add
adc
push
lcall
les
sar
jne
outsb
dec
xchg
mov
stc
loope
dec
adc
or
jo
pop
clc
shl
mov
or
jp
adc
jmp
dec
bound
mov
pop
jl
or
add
jp
add
cmp
scas
ret
xchg
add
mov
fcmovu
or
sbb
mov
rclb
or
xchg
aam
bound
inc
add
sub
inc
dec
cli
outsb
jl
jle
xchg
cmpsl
xor
inc
inc
cmp
test
inc
cmpsl
mov
test
cmpb
shl
fldcw
aad
out
pop
fists
bound
push
and
push
test
jb
in
mov
ficoms
arpl
xchg
ret
adc
add
inc
dec
xchg
mov
pushf
lods
mov
push
jecxz
repnz
mov
push
cmp
inc
fcomp
cli
cmp
stc
mov
mov
push
arpl
pop
loop
xchg
dec
mov
sub
js
inc
dec
sub
jp
lret
jg
pop
mov
mov
dec
dec
and
xor
popf
cmp
mov
jae
mov
cmc
inc
out
adc
cld
ret
daa
mov
push
cmp
pushf
xchg
push
and
shll
push
es
cmp
jo
lret
sti
shr
add
lret
pop
inc
xor
xchg
lock
add
cmovo
mov
testl
in
imul
xchg
dec
add
dec
subl
imull
mov
push
sbb
bound
lock
ss
inc
push
inc
add
lretw
pop
dec
jp
fs
scas
xor
jmp
stc
mov
leave
inc
aas
xchg
leave
repz
add
pop
xchg
cmp
loopne
ds
imul
push
in
les
xchg
sarb
adc
cld
mov
xchg
pop
jg
inc
mov
pushf
loopne
or
jo
cld
or
icebp
scas
lret
aam
pop
fldl
push
add
mov
adc
cmp
xchg
gs
jo
xchg
mov
mov
negl
jo
jno
cltd
fs
nop
pop
xchg
popa
mov
mov
inc
ja
mov
ret
clc
scas
adc
rcr
popf
outsb
shrb
push
test
mov
mov
je
mov
cmpsl
mov
pusha
fcoms
repz
inc
sbb
lahf
inc
cmp
mov
or
arpl
sbb
jge
fmull
push
cmpsb
add
out
lock
mov
andl
lret
dec
xchg
inc
xchg
mov
sub
sbb
popa
inc
call
cmovno
sbb
out
xchg
shll
pop
mov
int3
nop
dec
shlb
sahf
cmp
cmp
inc
loope
mov
pop
insb
mov
push
cmp
mov
xchg
cmp
xlat
andb
repz
pop
cli
xor
shlb
mov
stc
ret
scas
inc
jg
xor
ja
lea
cld
push
aas
shll
rcll
rep
jecxz
outsb
lock
and
push
jb
ffree
push
sti
and
dec
aam
mov
xor
dec
test
cltd
ss
add
mov
push
push
data16
cli
mov
mov
mov
jg
lods
jo
sub
sbb
int3
and
and
mov
call
adc
mov
and
ret
pop
out
push
or
pop
push
sub
sti
mov
mov
xor
lods
pop
repz
push
outsl
test
jge
cmp
les
in
imul
retw
jmp
lret
dec
jg
cmp
icebp
pop
and
ja
sub
lahf
out
push
push
pop
in
pop
sarl
sub
adc
sub
sbb
xor
mov
ja
dec
add
pop
push
adc
mov
fisubrl
negb
mov
icebp
cmpsl
mov
jae
xor
sub
insl
and
cld
sti
dec
xchg
sbb
icebp
testb
pop
addr16
jg
inc
or
insl
xchg
cmpsl
cmpsb
jg
mov
hlt
rol
les
jb
into
xchg
fwait
cmp
ss
mov
pop
sti
bound
add
sub
int3
ficoms
or
int3
mov
jbe
push
mov
jp
cld
fdivrl
pop
push
nop
jns
and
es
je
lods
imul
loopne
idiv
pop
sub
arpl
gs
mov
ret
inc
cmp
dec
imul
orl
icebp
bound
xchg
enter
jae
or
fmul
and
outsl
xchg
mov
loope
push
push
cltd
in
outsl
fisttps
inc
jl
xchg
aad
sbb
cld
js
mov
outsb
jne
je
insl
aas
ret
jmp
in
rorl
dec
xor
jae
mov
data16
mov
jo
lods
adc
jbe
leave
pop
xchg
call
cli
sub
rolb
push
sahf
cmc
sub
mov
add
fwait
scas
adc
xor
in
push
adc
stos
mov
xchg
mov
ret
mov
cmp
and
xchg
mov
push
cmp
xor
les
test
aaa
imul
repz
sbb
pop
cmp
adc
in
je
jno
mov
sbb
out
movsb
pop
mov
pop
daa
hlt
out
dec
stc
jno,pt
fbld
xchg
mov
jne
push
cmp
dec
add
xor
pop
movsb
fstl
mov
gs
inc
cmovg
jbe
jge
jmp
std
push
mov
sbb
aad
push
cltd
cli
outsb
lods
cmpsl
inc
nop
sarl
lahf
stc
xlat
sahf
cmpsl
sub
inc
fbld
xor
mov
movsl
mov
cmp
andl
mov
repnz
out
pop
in
int
orb
test
addb
insl
push
fwait
out
dec
aam
stos
call
fsubs
or
pushf
movsb
dec
sbb
or
pop
xor
fdivr
sub
fdivs
out
push
aad
stos
xor
imul
xchg
lock
pop
jne
fnstcw
add
test
inc
cli
mov
mov
stos
dec
aad
lret
roll
lods
fmuls
dec
arpl
pop
xor
adc
dec
dec
shl
sub
cmp
xchg
xchg
and
mov
adc
inc
test
jmp
pop
popf
leave
fsubrp
xor
mov
loopne
jbe
repnz
jp
insb
stos
ss
cmp
outsl
mov
out
cli
adc
aas
xor
and
stos
adc
test
xor
and
push
mov
jecxz
subb
loop
jo
push
push
jl
mov
push
adc
lcall
divl
mov
sbb
jp
aam
inc
not
aad
pop
mov
cmp
mov
lret
clc
shll
out
or
ja
adc
popa
test
xchg
xor
sub
sub
add
outsb
std
xlat
scas
adcb
xchg
xor
jg
jle
xor
mov
aad
sub
add
jle
sub
add
nop
jo
cmc
adc
cld
rorb
test
xor
cmc
je
repnz
rcrb
mov
shll
imul
xor
call
std
sub
inc
pop
or
into
outsb
mov
mov
dec
xor
scas
jne
imul
jle
and
pop
xchg
imul
sti
out
cmp
and
adc
jle
xor
cmp
movsb
xchg
push
jno
sti
fimuls
testb
shl
mov
push
jecxz
dec
test
cmp
xor
jns
inc
iret
lds
xor
adc
lret
ljmp
cmpb
pop
xchg
xor
jl
mov
shlb
test
mov
aad
popa
dec
ja
add
fst
aam
push
jmp
mov
loope
ds
mov
jb
dec
aam
aaa
mov
sti
add
lahf
or
xchg
adc
mov
pop
sbb
data16
rorl
insl
add
adc
sub
sub
mov
lods
push
les
dec
adc
inc
or
jne
insb
cli
lock
loope
outsl
andl
fiaddl
jp
jb
push
mov
dec
add
lods
aam
push
pop
in
add
xor
sbb
push
add
jl
sub
leave
je
ret
sub
cmp
adc
outsb
mov
cmc
lock
outsb
pop
push
js
sbbl
and
daa
movsl
stc
cmpsl
push
arpl
dec
movl
mov
hlt
ja
and
cmp
inc
enter
out
loopne
int3
icebp
lds
stc
icebp
xor
sub
and
fwait
in
stos
pop
fnstsw
push
jns
js
mov
xchg
mov
aas
sbb
aam
fwait
push
cmp
lret
aaa
stc
jle
adc
dec
mov
leave
push
jnp
pop
loope
gs
stos
pusha
mov
and
sbb
cltd
pop
imul
sti
imul
test
cmp
cmc
sbb
ret
cli
daa
mov
out
int3
je
ds
jmp
lahf
popf
push
cmp
aas
movl
mov
pop
pop
cmc
xor
mov
or
add
jl
sbb
mov
lock
popf
and
rclb
lret
xchg
test
mov
xchg
mov
xor
mov
jns
enter
add
psubw
fs
cmpsb
int
cmp
jne
mov
repnz
inc
into
jp
test
inc
or
sbb
cs
rclb
inc
imul
sub
arpl
dec
out
gs
sub
cld
je
or
cmpsb
fucomp
adc
loop
mov
mov
fwait
cmpsl
push
sbb
add
pop
sti
and
mov
adc
cmpsl
and
ljmp
pop
cmp
mov
xchg
mov
push
jno
movsb
std
jno
or
and
mov
xor
dec
adc
add
add
adc
addr16
and
dec
push
mov
popa
fstl
cmp
add
cmp
rcrb
dec
sbb
mov
mov
imul
pop
rorw
aam
cli
leave
mov
pop
sub
mov
jmp
ficompl
xchg
mov
xchg
push
mov
pop
pop
popf
push
imul
dec
out
cmpsb
cmp
lret
xor
jmp
push
cmp
sbbb
inc
stos
xchg
sub
mov
lret
lret
xchg
mov
mov
jl
ja
mov
jle
ret
sbb
or
ret
ds
fstps
cmpsl
mov
push
arpl
movsb
cmp
fistps
push
cmp
das
stc
pop
cmp
pop
sbbl
ja
cli
in
sbb
aad
sub
and
and
cmp
adc
mov
addb
pop
dec
or
cmpl
rcr
loopne
cmpsb
add
cwtl
fdivrp
rcl
and
into
mov
scas
std
add
fs
sar
dec
fistl
andl
add
lret
pop
enter
aam
cld
sub
fdivrl
cmp
xchg
aam
jmp
push
scas
sub
loop
rorl
push
data16
mov
inc
outsl
lds
inc
xchg
push
add
and
xchg
mov
xchg
xchg
aam
mov
mov
sbb
push
dec
push
inc
xor
jmp
mov
jp
pop
jp
imul
fdiv
mov
xchg
dec
movsb
jbe
mov
test
inc
lahf
lea
xor
icebp
inc
mov
popa
add
outsl
loop
cmpsl
sbb
xchg
mov
add
sbb
dec
pop
cmp
shlb
fsts
call
xor
xor
xor
bound
icebp
orl
cmp
or
pop
roll
test
or
int3
pop
lea
fwait
int3
inc
ficomps
pusha
loope
add
add
inc
sub
xchg
jl
aas
xchg
iret
xchg
xlat
das
pop
ret
call
xchg
das
sub
fs
repz
mov
cmp
mov
cmp
jmp
xlat
and
or
arpl
repz
or
mov
mov
lcall
shld
loope
popf
sub
cli
mov
mov
mov
xchg
pop
push
ud2
jmp
pop
adc
xchg
pop
sbb
mov
push
fistps
out
or
pop
mov
push
mov
inc
jo
xchg
pop
or
out
outsl
mov
mov
aad
enter
mov
xor
mov
imul
js
or
mov
pop
imul
cltd
cld
add
push
add
or
jmp
bnd
cltd
orb
jge
cli
mov
fwait
jbe
ss
dec
imul
mov
pop
sbb
jo
push
xchg
push
and
fdivr
dec
xor
cmp
dec
jg
and
add
xor
mov
xor
pusha
fcmovne
sti
mov
rcrb
aas
pusha
loop
xor
fs
daa
cmp
das
aaa
or
lods
sub
fstl
out
mov
or
fwait
mov
mov
cmpsb
outsb
jge
cltd
jnp
add
popa
stc
imul
xchg
lods
aas
aas
push
paddusw
inc
sbb
popaw
into
call
inc
in
ret
mov
mov
movsl
outsb
sub
or
push
mov
sahf
mov
sub
mov
out
sub
and
dec
add
test
enter
fists
adc
mov
cmp
mov
and
mov
mov
push
push
cmpsb
pop
mov
and
jle
or
mov
mov
dec
aas
pop
mov
inc
jnp
mov
mov
into
xchg
cmp
sub
test
cmp
lds
icebp
sbb
outsb
push
xor
mov
test
adc
lock
scas
mov
sub
pop
cmc
cmp
lods
xlat
icebp
xor
sarl
sbb
inc
mov
loop
lds
gs
daa
pop
aas
xor
adc
add
push
and
std
xor
xor
inc
lcall
sub
lea
push
scas
sbb
lods
rcll
data16
mov
inc
push
sub
in
aad
adc
mov
int
dec
pushf
hlt
lods
push
inc
scas
push
sub
xor
pop
push
bound
stos
xchg
and
sar
flds
out
xor
ljmp
loope
lret
push
cmp
in
push
adc
inc
lods
push
inc
sahf
mov
imul
imul
dec
cmp
inc
xchg
inc
lcall
sbb
addr16
sbb
add
sbb
dec
pop
xchg
subl
cmpsl
push
sahf
cmp
adc
cltd
mov
dec
inc
mov
sbb
sbb
sahf
pop
mov
adc
mov
sbb
inc
and
push
loopne
mov
push
imul
shlb
or
orb
das
sbb
icebp
mov
aad
sbb
inc
outsl
pop
pop
xchg
lods
repz
nop
pop
push
mov
pop
rcll
xlat
inc
jb
sbbl
pop
mov
js
stos
out
cmp
sbb
rcrl
nop
outsb
sub
pop
leave
xor
lods
outsl
sahf
sub
xchg
push
cmc
and
pop
jmp
sub
and
jb
sub
cltd
push
out
xchg
cmp
push
adc
and
test
mov
clc
xor
mov
pusha
adc
adc
aaa
sub
subl
in
mov
sbb
sahf
rolb
jne
pusha
stc
xchg
add
imul
adc
ror
mov
xchg
jg
in
in
cmp
xor
popa
add
push
or
aaa
dec
sbb
shlb
fwait
push
xchg
enter
lcall
lret
out
jo
popa
add
pop
cmp
lret
and
ljmp
roll
push
test
hlt
pop
push
loopne
jno
jae
fstl
decb
mov
pop
dec
cmpb
int
jnp
rorl
cmp
cltd
sbb
or
pusha
or
mov
pusha
nop
repz
mov
mov
cmp
adc
add
ret
outsl
inc
adc
or
push
sbb
push
or
adc
and
mov
imul
setp
adc
or
aaa
fldcw
xorb
jl
pop
or
iret
push
pop
and
incl
addl
inc
pop
mov
add
fnstenv
cltd
in
or
pushf
test
adc
push
repz
addr16
pop
lds
ret
sub
pusha
data16
pop
addr16
loope
mov
into
lock
cli
xchg
sub
and
stos
sub
stos
out
mov
xchg
movsb
push
jns
ljmp
add
and
das
adc
push
and
movsl
outsl
es
pop
adc
mov
insb
mov
sarb
mov
jg
sub
cmpb
dec
cmp
jmp
push
aad
popa
mov
sbb
inc
sbb
movsl
mov
aaa
cmp
push
inc
aas
push
lret
aaa
lods
or
mov
dec
xchg
push
clc
cmpsl
das
hlt
andl
pop
mov
test
dec
pop
or
popf
rclb
pop
sbb
add
add
mov
in
lea
decb
add
xchg
cmp
arpl
sbb
xchg
ljmp
test
push
mov
insl
sti
xor
jmp
repz
arpl
mov
ja
and
aas
inc
cmp
adc
xor
mov
pop
sbb
add
fcmovbe
dec
into
pop
inc
push
mov
pusha
push
cmpsl
adc
aas
xchg
out
or
dec
add
dec
pusha
sbb
call
lahf
pop
or
daa
add
pop
int
leave
push
pop
movsl
add
mov
mov
inc
or
add
mov
test
adc
mov
xchg
sbb
mov
xor
push
sbb
pop
pop
add
pop
aas
mov
mov
mov
cmovs
pop
adc
out
rcl
pop
and
in
inc
sti
jp
cmp
loopne
mov
and
ret
shl
data16
cmp
mov
mov
sbb
jl
mov
movsb
pop
mov
add
mov
xchg
adc
movb
mov
std
mov
addl
aad
xchg
or
fmull
call
rclb
or
xchg
jl
cld
mov
insb
xlat
mov
jge
es
xchg
mov
sub
in
push
mov
insl
outsb
ja
arpl
jb
jnp
inc
jno
mov
mov
ss
cmpsb
pop
pop
iret
in
pop
dec
adc
lds
lahf
ss
fnstsw
mov
repnz
push
jbe
sub
inc
stos
adc
jecxz
pop
adc
jb
add
xchg
popf
imul
fcoms
mov
xchg
outsl
adc
xchg
mov
adc
pop
fwait
daa
inc
js
xor
in
sbb
mov
adcb
shrl
je
mov
test
fisubrl
cltd
inc
icebp
out
fcmove
loopne
fsubrl
push
push
or
aad
test
std
xor
or
fisttps
mov
jns
int3
and
jl
in
push
pop
add
push
into
jge
dec
rorl
lahf
pop
adcb
lret
call
andl
adc
rcr
mov
push
lcall
in
loopne
data16
lods
jae
scas
pop
outsb
sbb
repnz
sahf
adc
and
sbb
cltd
test
jg
jge
xorl
add
es
shr
jbe
pusha
cli
mov
add
fistpl
jge
scas
lret
std
fimull
lcall
inc
inc
jno
jnp
arpl
daa
mov
pop
daa
cmp
pop
imul
jg
daa
ljmp
sarl
jle
lock
dec
lods
xchg
sahf
jge
in
cmp
mov
add
pop
jg
leave
push
mov
shl
rclb
aaa
mov
mov
pop
xchg
xor
outsl
sub
pushf
and
loop
cmp
imul
push
xchg
scas
inc
adc
jmp
aas
cmp
lea
bound
iret
dec
ret
data16
and
sbb
mov
push
jae
stc
je
insb
or
sbb
lcall
shll
fiadds
nop
pop
out
or
scas
in
cmpb
jns
icebp
or
jge
mov
xchg
jmp
movsb
lock
or
in
dec
or
pop
leave
mov
mov
and
or
xor
das
and
add
popf
cld
popf
lea
incb
mov
xlat
pop
add
mov
scas
jg
or
xchg
pop
sub
in
xchg
icebp
popa
push
rcll
shl
sub
xor
outsl
mov
enter
scas
call
inc
pop
inc
or
lcall
daa
testb
jo
ljmp
int3
sbb
xor
pop
int3
out
jb
pop
dec
mov
nop
in
inc
and
lsl
test
outsb
push
rcrb
inc
call
xchg
xchg
xlat
lcall
and
movsl
push
aam
cld
sti
leave
sub
daa
add
adc
fwait
sub
or
dec
inc
sub
dec
sbb
rcrl
sub
lea
lods
mov
or
cmp
xchg
mov
aad
addr16
jg
add
pushl
jnp
fildl
push
into
ret
cwtl
pop
imul
xlat
aaa
pop
movsb
inc
jecxz
out
fldenv
insb
out
lahf
or
push
negb
lds
int3
dec
cmp
mov
push
lret
and
mov
xor
test
jl
sub
jecxz
mov
in
dec
ret
insb
xlat
xor
sub
dec
push
mov
imul
popa
add
je
outsb
cmp
cmp
pop
ss
daa
hlt
adc
jg
out
mov
sbb
xor
rcrl
pop
sub
jb
repz
repz
sbb
je
push
sarb
popa
pushf
dec
pop
popa
jno
movsb
pop
push
bound
lock
fwait
jge
into
sahf
jae
dec
roll
add
pop
mov
xor
data16
outsl
andl
iret
insl
ja
inc
mov
push
fcomip
shlb
mov
push
mov
lods
call
inc
std
pop
punpcklbw
xor
movhps
sub
mov
aaa
int
into
jecxz
addr16
push
cltd
hlt
aaa
adc
and
fwait
fwait
add
fisttpl
adc
inc
jmp
cmpsb
mov
fimuls
shrb
inc
outsb
test
sahf
arpl
out
push
push
sahf
jnp
insb
mov
mov
movsb
mov
cmc
rclb
add
ret
pop
mov
fbld
mov
xchg
jae
sub
and
pop
aad
mov
scas
into
inc
and
lea
xchg
and
push
push
insb
popf
inc
stos
ret
add
inc
mov
xchg
loop
mov
xlat
sub
mov
rorl
fstpl
pop
aam
js
scas
mov
or
xor
push
push
push
jg
cwtl
rcrb
mov
sub
bound
pop
out
mov
stc
cmp
arpl
stos
es
flds
movsb
insb
fs
imul
jecxz
xchg
xchg
inc
sti
fists
inc
mov
push
inc
in
movsb
push
sahf
or
popf
movb
cmpsb
mov
lds
into
les
nop
lahf
lcall
push
or
je
adc
push
add
push
lahf
sub
push
mov
mov
js
cs
cmp
inc
sub
pop
and
inc
insl
inc
pop
jl
int3
dec
mov
ret
xor
ljmp
mov
mov
jl
add
nop
mov
sub
push
neg
pushf
xchg
adc
pop
dec
mov
imul
pop
jp
insb
repnz
in
fnstsw
ss
push
and
outsl
push
outsb
in
jecxz
out
push
dec
scas
subl
enter
mov
xchg
call
in
jbe
and
xor
les
in
add
push
into
stc
adc
insb
ss
sahf
pop
pop
test
leave
sti
push
out
push
fiaddl
sbb
pop
outsl
push
sbb
xchg
dec
xor
inc
xor
cwtl
and
stc
mov
sbb
pop
nop
sbb
mov
sub
push
out
jb
popf
push
mov
xchg
fisubrl
ss
cmc
mov
lods
sbbb
dec
pop
or
imull
xor
adc
push
stc
push
push
ljmp
adc
shl
fisubrs
jno
negl
or
cmp
gs
xlat
mov
adc
out
adc
jo
pop
out
mov
push
mov
rolb
pmaxub
pushf
inc
in
gs
inc
loop
mov
ds
ja
sbb
jae
sahf
add
lcall
outsb
inc
xor
xchg
inc
push
enter
lahf
pop
lock
mov
popa
ja
in
dec
add
mov
scas
add
call
imul
fldl
inc
out
and
cld
xchg
test
cmp
xor
das
jno
lds
testl
jo
js
or
xor
or
mov
outsb
lods
pop
leave
add
xor
dec
xlat
pop
in
out
adc
mov
jnp
shlb
xchg
mov
loopne
fmull
dec
xor
lahf
out
xor
xchg
and
push
adc
nop
arpl
icebp
push
mov
xor
pusha
sub
and
sub
lods
mov
pop
test
hlt
add
cli
inc
pop
push
hlt
push
loope,pt
fisubs
scas
out
jl
add
lret
add
fstl
out
lock
icebp
jecxz
and
fcom
adc
rcll
pusha
cvtps2pd
push
pop
jge
pop
shrb
ss
loop
or
je
jno
xchg
cltd
mov
bound
sbb
addl
addr16
pusha
insl
adc
scas
andl
jmp
int3
mov
jbe
lahf
dec
stos
scas
loop
imul
mov
movb
dec
mov
adc
xchg
xchg
cmpsb
leave
cmp
mov
pop
in
or
push
xchg
nop
mov
rolb
pop
es
test
mov
xchg
fmull
ror
push
int
inc
push
mov
push
xor
xlat
mov
adc
inc
xor
shlb
sarb
inc
push
xor
or
and
sbb
ss
iret
shr
cwtl
call
adc
in
icebp
xchg
sbb
mov
mov
dec
push
sbb
cmpl
dec
and
mov
cmp
shrl
inc
int3
fcmovbe
pusha
testl
gs
jo
sahf
lods
lds
dec
daa
lock
sbb
rcl
xlat
jmp
data16
adc
dec
je
icebp
dec
mul
inc
sbb
lds
jmp
into
loope
sbb
mov
out
dec
in
idivb
cli
test
and
mov
mov
cmp
test
jge
sti
sub
mov
xchg
xchg
jg
jno
int3
call
mov
fcmovnu
mov
inc
fisubrl
out
sub
cli
cmpsb
xchg
lea
mov
and
xor
jecxz
mov
sub
pop
and
mov
sub
rcrl
shl
bound
lahf
or
jo
leave
in
jae
aad
xlat
xor
dec
jecxz
adc
ds
inc
mov
push
mov
hlt
push
lret
in
sub
mov
sbb
sbb
mov
inc
or
outsl
adc
pop
sbbb
jbe
mov
and
bound
cmp
sub
movsb
dec
xchg
das
lahf
lret
xchg
sbb
adc
adc
test
jl
push
sbb
sbb
leave
aas
mov
out
jmp
sub
mov
cmp
movsl
testl
addb
push
mov
jne
xorl
loop
lods
cmp
pop
jle
fs
adc
movsb
xlat
jg
jae
rorl
in
xor
in
aaa
and
push
adc
aas
jbe
pop
pop
dec
xchg
mov
jnp
fimuls
fildll
call
clc
cmc
scas
std
add
mov
xor
mov
out
lret
mov
xchg
int
les
or
gs
cmp
inc
add
lahf
loopne
push
add
jns
insl
data16
out
loop
adc
cmp
fldcw
shrb
fcmove
popa
sarl
das
popf
lahf
or
cmpsl
pop
sbb
inc
jnp
or
pop
xchg
sahf
dec
scas
adc
daa
rcl
jnp
test
push
mov
push
mov
fdivrs
mov
sbb
mov
xor
fdivrl
test
dec
pop
dec
lock
pop
jno
sahf
xchg
out
sar
mov
les
push
sahf
daa
shl
loope
loope
fucomip
rcrb
cwtl
sub
jo
push
mov
aaa
mov
sub
sti
std
les
jl
mov
das
lahf
lahf
shll
lea
movsl
lea
sub
aaa
sti
cmpsl
sti
aaa
mov
daa
pop
jecxz
sub
test
fisubs
add
pop
push
and
scas
stc
ja
das
stos
mov
lahf
fcmovbe
mov
push
jle
or
in
mov
push
mov
mov
sbb
popa
test
in
shl
mov
add
adc
mov
mulb
fsubrs
pop
imul
mov
js
rcrb
push
adc
sub
in
inc
insb
pusha
js
mov
aas
aas
pop
jno
icebp
leave
push
ret
inc
fstpl
fstpl
push
sahf
ss
push
loop
jno
xorb
or
pop
fistpll
add
push
or
cs
sub
stos
cmp
out
stos
cmpsb
add
xor
ds
mov
pusha
and
loop
push
mov
iret
mov
shrl
or
sub
add
into
fnsave
jae
into
add
mov
shrl
cmp
mov
cwtl
xor
xor
mov
rcrl
jle
iret
test
aad
mov
insl
arpl
es
in
lods
lods
fistl
mov
add
jbe
add
incl
clc
stc
xor
ljmp
lods
into
frstor
rolb
int3
dec
xchg
call
sub
lock
mov
xor
dec
mov
lret
push
push
test
test
lcall
sti
adc
mov
xchg
enter
stc
pop
mov
jno
inc
push
pop
daa
and
mov
ficomps
sti
mov
pop
test
mov
cld
sub
xchg
xchg
pop
mov
pushf
stc
dec
popa
xor
adcl
clc
mov
aaa
push
xchg
pushf
fs
dec
jle
pop
adc
int3
gs
or
mov
cmpsl
addb
vprotw
pop
xchg
in
push
psrlw
and
jge
shll
cmpsb
lret
cltd
jno
inc
call
mov
rorl
jp
jmp
pop
jns
mov
lcall
mov
cmp
sub
call
sbb
scas
pop
mov
add
lods
xchg
adcb
fs
jmp
mov
imul
mov
push
mov
push
sbb
sbb
pop
mov
fisubs
dec
lock
scas
mov
mov
jnp
push
iret
rcr
out
sbb
aam
jmp
pop
pusha
and
mov
push
lret
mov
cmp
pop
cs
outsl
rclb
cmp
pop
aas
mov
mov
dec
ret
and
mov
fwait
pop
ds
mov
pop
mov
and
lock
lock
mov
ljmp
xchg
out
incl
add
clc
xchg
stos
movsb
adc
push
xor
xor
dec
je
fucompp
cmpsl
jecxz
push
icebp
add
sbb
mov
mov
pop
cmp
mov
add
inc
testl
cltd
repnz
pop
dec
es
pusha
dec
stos
jo
push
shlb
inc
cmp
es
gs
shlb
arpl
jp
cltd
and
loope
adc
xchg
out
fwait
je
pop
sub
shl
xchg
rcrb
push
out
xchg
fisubl
add
sub
or
push
xchg
mov
dec
xor
cmp
fwait
jl
ja
out
add
xor
and
cltd
mov
lcall
and
mov
out
pop
inc
mov
ret
lret
jae
xor
push
mov
cmp
fsubrl
cwtl
push
ret
xchg
mov
pop
dec
adc
jo
test
out
sub
xor
xchg
mov
sub
test
test
or
push
jo
out
xchg
imulb
xor
aas
sbb
sbb
test
push
cmp
cmpsb
mov
js
jnp
repz
mov
jl,pt
cmpsl
add
jg
aad
jmp
jg
sti
mov
cmp
lods
clc
mov
outsb
rorb
inc
in
push
sub
inc
sbb
ret
mov
stos
repnz
popa
xor
fildll
push
push
cmp
mov
mov
jbe
out
in
push
rcl
sub
fmuls
jge
xchg
in
jo
aad
cmc
jne
bound
pusha
rolb
loope
out
or
bound
add
jecxz
sub
sub
xor
jmp
xchg
fcmovu
jb
cld
sub
pop
cmpsl
sbbb
cli
mov
out
pop
jns
rorb
xchg
and
sub
or
xchg
mov
mov
jg
leave
int
or
sbb
and
jo
loop
ret
adc
push
jb
js
cmp
mov
cmc
and
xchg
adc
imul
and
cwtl
adc
mov
cmp
pop
call
xor
out
scas
add
iret
xchg
roll
insl
insb
sub
cmpl
test
push
mov
mov
iret
imul
pop
mov
scas
ret
inc
add
add
lea
cmp
or
mov
f2xm1
mov
aad
lcall
out
fldcw
and
movsl
lahf
inc
push
stos
mov
sahf
dec
jg
mov
pop
shlb
mov
int
push
dec
mov
lahf
push
xchg
hlt
pusha
scas
cwtl
cmpsb
dec
sub
aam
xchg
push
sti
cmp
xor
repz
push
cmpps
push
push
push
mov
inc
aaa
push
mov
movsl
xchg
or
shll
xchg
add
and
shll
push
push
dec
in
add
shll
or
test
or
bound
rcr
div
pop
out
popa
inc
insl
pop
dec
enter
push
jmp
jnp
ds
inc
mov
adc
mov
or
and
push
shll
fildll
inc
xchg
neg
mov
sbb
kmovd
or
and
out
test
lock
fdivs
jle
cltd
pop
push
ljmp
mov
ret
mov
in
int3
mov
add
mov
outsl
or
rclb
add
mov
roll
inc
inc
push
pop
pop
xchg
test
mov
test
mov
mov
jecxz
ja
xor
inc
or
or
push
and
and
insl
inc
add
lea
aam
stc
xlat
int
xor
pop
stos
into
test
add
insl
sub
xor
xchg
sub
dec
mov
push
lods
loop
and
jmp
and
sub
movsl
push
loopne
cmpl
sahf
and
cld
mov
cmp
imul
jecxz
popf
rorl
jmp
ljmp
not
stc
andb
scas
cmp
sub
pop
nop
jae
inc
xorb
movsl
rol
and
jb
xchg
sub
mov
inc
pop
movsb
lahf
imul
pop
sub
jae
push
xor
jge
rcrl
cmpsb
dec
sti
out
jle
sub
cmp
xchg
nop
mov
and
les
sbb
lcall
lods
test
sbb
dec
jle
repz
pop
adc
pop
or
in
fimuls
jbe
dec
es
jl
add
rcrb
imul
dec
lea
pushf
pop
and
adc
mov
mov
mov
lahf
stc
sub
jae
stc
mov
jno
push
lds
cmp
fidivl
fbstp
inc
sahf
jecxz
mov
xchg
jb
les
in
xchg
cmp
movzbl
cltd
imul
push
sub
addb
push
jge
ret
test
pop
pop
idiv
mov
fmul
stos
mov
lea
and
pop
push
stc
aam
mov
jg
das
lea
and
sarb
lock
cmp
sub
cwtl
pop
mov
cld
fisubrs
aaa
mov
mov
sbbl
inc
lods
out
fidivs
fidivl
fadds
xor
pop
int3
sub
jnp
pop
pop
and
xchg
push
add
pop
and
sti
jecxz
test
and
xor
fdivrl
add
sbb
imul
outsb
mov
jno
dec
nop
inc
lahf
shlb
jne
inc
push
add
icebp
test
mov
mov
je
sub
pop
ret
ret
inc
lds
xor
imul
pop
outsl
cltd
push
mov
out
mov
loope
adc
js
cld
jno
stc
push
int
dec
push
and
mov
mov
or
out
leave
jge
jle
test
or
jl
hlt
jb
ja
dec
sub
mov
aam
mov
mov
jns
shlb
xchg
cwtl
addl
ret
mov
sub
rorl
nop
mov
xchg
xchg
lods
pop
mov
dec
rcl
xor
mulw
sub
cmp
and
pop
mov
push
cmp
push
roll
dec
ds
push
sub
pop
inc
pop
mov
mov
into
aam
shrl
pop
out
mov
xchg
fmuls
shrl
and
in
rcr
aaa
call
mov
ja
fmuls
rcrb
mov
inc
shr
lret
push
xchg
dec
in
loop
shlb
imul
fs
adc
leave
pop
inc
out
rcrb
xchg
repnz
ret
push
cmpsb
mov
lea
lcall
jle
mov
jmp
adc
mov
cmp
adc
dec
das
fnclex
pop
jnp
jns
xchg
lcall
jp
add
jns
out
lret
mov
inc
lahf
mov
sti
ret
js
pop
mul
shll
cmp
cmp
in
mov
scas
negb
mov
loopne
pop
movsl
push
xor
mov
insb
xchg
gs
jb
jmp
pushf
sub
jg
scas
stos
lock
dec
fdivs
mov
outsb
dec
sbb
add
fsub
clc
push
loop
daa
mov
ret
pop
mov
mov
xchg
jae
cmp
xchg
popf
imul
shl
xor
mulb
cmpl
orb
cmp
in
in
aad
test
lcall
out
insb
mov
lods
push
xor
les
push
aad
fiadds
lock
pop
mov
dec
dec
insl
rcl
xchg
pop
call
xor
testb
pop
or
add
rcrb
push
push
xchg
sti
fwait
xchg
jb
xor
notb
jmp
jo
jne
sub
hlt
fwait
in
and
pop
js
sti
mov
xchg
xchg
out
les
jno
imul
mov
or
fcmovnu
cmp
mov
fbstp
iret
mov
jbe
into
xchg
pop
scas
in
out
cmp
shll
adc
shll
mov
adc
popf
or
add
stos
inc
and
dec
lahf
mov
inc
imul
sbb
add
pop
sahf
test
cmp
gs
xor
inc
loopne
icebp
repz
mov
icebp
jl
hlt
mov
movsw
test
jecxz
or
daa
cmp
inc
loope
aaa
jns
adc
mov
mov
jns
cld
sub
data16
mov
sbb
lods
mov
sbb
int3
cltd
adcb
dec
nop
aam
pop
or
jl
cmpsl
shlb
xor
dec
rol
cli
mov
imul
xchg
rcll
inc
jbe
sar
subl
push
fwait
aam
mov
int3
dec
mov
mov
stos
or
inc
adc
sbb
dec
mov
mov
movsb
test
outsl
or
lea
jae
stc
mov
pop
and
and
das
mov
rorl
daa
sub
ja
lret
mov
and
out
jmp
inc
sub
push
xor
insl
repz
inc
inc
ja
inc
pop
lret
lcallw
sbb
mov
jg
movl
push
je
xchg
mov
call
adc
icebp
mov
call
sub
or
xor
mov
inc
clc
or
sub
mov
shl
aad
sub
and
imul
outsl
xor
push
push
cmp
mov
or
call
pop
push
sub
flds
push
sbb
sti
fcomip
icebp
cwtl
xor
andl
ss
fnstcw
cmp
mov
mov
pop
into
jne
adc
orb
adc
xchg
mov
clc
cli
add
rorl
push
sub
roll
add
mov
testl
dec
xchg
dec
popf
xchg
xlat
pop
cmp
fstpt
dec
pop
push
test
dec
xor
mov
push
pop
dec
mov
jo
fmull
mov
test
push
sub
lods
add
int
ljmp
hlt
clc
inc
dec
aas
mov
rcrl
icebp
pusha
in
mov
rol
mov
ljmp
inc
xchg
pop
xchg
flds
push
jg
pop
jmp
das
xor
jne
cmp
out
fisttps
dec
call
push
bound
jo
inc
mov
push
test
inc
adc
in
lcall
inc
lcall
pop
outsb
lock
cmpsl
sub
pop
scas
lret
add
push
ret
dec
nop
outsb
and
lret
cmp
cmc
ret
lahf
lret
sub
jge
pop
jg
dec
icebp
mov
lcall
or
xorl
sahf
shll
mov
xchg
sub
mov
sub
rclb
mov
test
sub
sub
movsl
scas
xchg
mov
sbb
push
dec
les
repz
in
mov
mov
push
orl
or
pop
add
cmc
popa
aas
cmpsl
mov
lret
inc
dec
testb
out
mov
loop
loop
mov
mov
je
in
lods
outsb
stc
adc
call
inc
fwait
add
sbb
mov
test
mov
jbe
cmpsb
fisubl
daa
push
lahf
fsubrs
cwtl
mov
ja
ret
popa
mov
insb
mov
and
insl
movsl
xchg
sti
pop
pop
mov
xor
test
push
cltd
xlat
sahf
xor
sbb
xchg
or
movsb
inc
gs
test
ja
adc
call
adc
rol
iret
out
mov
mov
lds
stc
add
sub
movups
jg
dec
mov
sti
mov
xor
fidivs
rcl
pop
ret
cli
push
pop
cmp
cmpl
imul
subb
out
xchg
pop
and
icebp
lods
inc
loopne
popa
mov
mov
aad
dec
add
in
aam
ds
push
pop
in
add
lcall
lods
or
cmpsl
mov
adc
jns
test
xor
ret
sbb
jno
sbb
or
and
leave
popa
lcall
and
mov
sub
mov
mov
mov
cmpsl
inc
fsubs
pop
add
mov
sbb
jge
loopne
test
loope
push
les
pop
inc
dec
scas
sti
repz
push
mov
out
sub
jg
getsec
jg
mov
or
dec
xlat
cltd
ja
mov
lcall
adc
sub
pop
dec
or
mov
cmpsl
imul
ficomps
cmp
jg
and
out
popa
movsl
xchg
in
enter
int3
addr16
cs
cli
push
push
xor
aaa
pop
jae
imul
xchg
mov
and
jge
outsb
cmp
inc
lret
push
notl
cmc
idivl
mov
sbb
imul
mov
das
xchg
dec
xchg
jnp
mov
add
dec
pushf
cmpsb
mov
aas
out
imul
push
sub
pop
outsb
es
std
addr16
cltd
fisubrl
jp
dec
scas
inc
lret
ret
icebp
cmp
icebp
in
fnstcw
jp
mov
inc
jo
imul
and
lret
jl
xchg
jo
jno
push
out
xchg
in
loop
mov
and
sub
enter
sbb
sahf
test
xor
imul
mov
adc
out
je
mov
adc
repnz
fsubs
jns
xor
popa
jp
lea
sbb
jl
or
push
xor
xor
dec
fistl
divb
push
in
sbb
lods
data16
sub
mov
pop
inc
lcall
nop
clc
dec
aaa
xlat
inc
test
and
pushf
xchg
loope
dec
stos
je
cli
jmp
and
xorb
add
xchg
sub
inc
mov
pop
scas
cmp
stos
out
mulb
mov
fwait
pop
aaa
mov
mov
inc
mov
and
sarb
pop
cwtl
pushf
xchg
jns
insb
test
scas
add
mov
sub
test
mov
lahf
xchg
jb
mov
repnz
cmp
popf
mov
imul
push
mov
call
add
mov
fistl
mov
outsl
cli
xchg
xchg
out
xchg
push
xor
negb
lret
push
in
aam
or
loope
push
into
jg,pt
ds
stos
pop
in
jl
insb
out
scas
mov
mov
shll
popf
cwtl
push
pop
mov
xor
push
leave
add
cmp
seta
or
and
sub
sbb
lret
aas
add
jl
dec
pop
add
aaa
dec
xchg
push
sbb
pop
jnp
out
xor
inc
inc
xor
lret
mov
cmp
pop
xor
rcrl
in
push
mov
cmp
mov
lods
xchg
cltd
into
inc
jge
int
aaa
sbb
dec
shlb
leave
cmpsl
adc
les
mov
pop
jge
aaa
mov
leave
jecxz
and
sub
push
movb
jg
sub
pop
sbb
sti
jle
adc
sbb
inc
stc
insl
push
mov
outsb
pop
jne
out
jle
push
jl
sub
jp
dec
jae
xchg
sub
sub
cmp
out
mov
push
lea
cmp
ds
roll
xchg
xchg
mov
xchg
xchg
mov
and
sbb
jge
cmp
outsb
mov
in
call
pop
sbbl
xchg
lret
add
lock
xchg
sub
inc
xor
mov
dec
jb
rclb
icebp
push
or
test
inc
insb
movnti
mov
sbb
in
sbb
rcrb
ja
daa
mov
inc
push
mov
mov
loop
stc
or
lret
dec
pop
cmp
outsl
push
jmp
mov
xor
xchg
aaa
iret
pusha
mov
jp
or
push
xlat
cltd
jbe
xor
pushf
xchg
aas
xor
sar
gs
fdivl
push
in
cld
mov
push
jmp
xchg
mov
mov
out
lahf
div
aas
les
shrl
sti
data16
imull
pop
in
jg
lds
mov
mov
pop
mov
pop
movsb
pushf
adc
xor
cmp
rolb
add
cmp
imul
and
sub
cld
fnstenv
mov
dec
out
int3
lcall
xor
jno
test
test
cmp
cld
mov
push
mov
add
jno
jg
xlat
pop
sbb
and
nop
shrl
push
cld
nop
dec
jmp
stos
inc
push
in
fdivrp
out
and
sbb
pop
icebp
or
out
lcall
mov
imul
and
movsl
or
jne
test
mov
es
jbe
xchg
aad
cmpsb
or
rcl
leave
xchg
pop
and
shrb
sahf
cmp
cmp
or
add
hlt
push
pop
das
nop
or
mov
lcall
hlt
and
fimull
testl
enter
in
push
jle
fsubs
fisubs
adcb
xchg
xlat
push
stos
nop
or
push
stos
insb
inc
int
xor
andl
inc
mov
mov
loopne,pn
xchg
sti
xor
pop
nop
sub
addr16
insb
and
shl
loope
xor
lods
xor
in
mov
fdivrl
lods
jno
out
sub
inc
jl
dec
imul
push
test
loope
mov
test
jbe
andb
dec
fildll
pop
add
or
jecxz
xor
pushl
and
and
rcrb
fwait
jp
dec
cmp
scas
mov
dec
ss
adc
bound
imul
or
mov
stc
xlat
popf
mov
xchg
movsb
push
stc
add
xlat
ss
mov
in
js
or
adc
dec
xchg
test
cld
lock
pop
sbb
je
xlat
xchg
je
ds
aam
mov
inc
dec
dec
lods
mov
fildll
xchg
xchg
xchg
xchg
xor
out
xor
sbb
adc
mov
xchg
test
xor
cs
sti
rolb
sub
sarb
mov
call
xorb
push
jnp
jge
jno
sub
ss
incl
mov
inc
gs
fcomps
iret
inc
sub
mov
push
cwtl
clc
out
out
call
push
call
mov
cmpsb
inc
inc
stos
int3
movl
into
inc
dec
or
fisubs
in
push
mov
cmp
jl
or
mov
mov
push
sub
aas
clc
mov
adc
lock
jae
roll
pop
mov
push
jbe
dec
dec
cmp
pop
jle
lahf
loope
xchg
out
out
repz
sbb
mov
mov
aas
adc
or
imul
lea
mov
pop
repnz
les
sub
dec
dec
xlat
mov
inc
popf
ljmp
adc
jg
test
sub
jae
test
mov
scas
jl
int
jns
inc
andl
xchg
shrl
push
pop
add
and
mov
sub
es
mov
push
cmp
fldl
test
mov
cs
call
or
and
adc
int
mov
or
add
push
sub
sub
stc
xchg
or
jb
ret
dec
fstpl
pushf
fildl
mov
cltd
mov
inc
mov
arpl
adc
mov
xor
jbe
idivb
ret
sub
pop
inc
mov
lea
les
pop
das
sbb
rdpmc
jmp
xchg
push
hlt
mov
in
out
adc
and
loop
dec
dec
mov
pop
xchg
inc
add
out
dec
or
bound
out
shll
ljmp
aas
mov
je
and
mov
add
push
andl
sub
or
subb
push
mov
sbb
sbb
daa
fs
jbe
jg
add
cmp
je
insl
adc
dec
mov
sub
inc
rcll
mov
sbb
ss
inc
mov
ret
mov
int3
jl
std
pop
inc
dec
jnp
mov
pop
pop
inc
mov
imul
pop
inc
std
add
ret
test
test
fldpi
sbb
addl
pop
mov
sub
push
pop
and
lods
pop
pop
sbb
jge
or
jmp
add
lea
iret
fs
inc
xor
clc
sbb
cmpsb
cmp
iret
add
out
push
pop
lds
add
mov
mov
lods
rcrb
scas
test
pop
and
shrl
pop
or
iret
mov
and
xor
push
sub
add
dec
lock
inc
push
jbe
pop
shlb
lds
pop
cmp
int
sub
jae
xlat
sbb
mov
int3
adc
popa
aas
sub
mov
stos
aad
repnz
sbb
sbb
stc
xchg
adc
out
into
jecxz
push
iret
jge
call
mov
testb
xor
out
repz
cmp
pusha
out
stos
fisubrs
iret
mov
xchg
inc
xchg
outsl
pop
add
shll
popf
mov
fidivl
in
mov
mov
imul
mov
mov
inc
call
xchg
sbb
adc
lock
add
cmp
mov
cmc
ret
mov
enter
add
in
pop
adc
lcall
enter
jle
ret
hlt
js
ss
hlt
inc
mov
mov
loope
cmc
inc
ret
aad
movsb
cld
pop
adc
xor
xchg
cwtl
cmp
mov
test
ljmp
aad
movsb
cmp
outsl
push
mov
mov
and
sub
mov
popf
jo
dec
jmp
xor
bnd
cltd
sub
pop
push
inc
mov
in
rorb
or
bswap
hlt
jle
cli
arpl
dec
pop
pop
cmp
sbb
rol
push
xor
imulb
mov
jae
sub
cmp
jne
jnp
cld
loopne
inc
jmp
and
fisubl
jbe
mov
movsb
sarl
dec
fstp
enter
bound
cmpsl
out
push
iret
mov
mov
adc
call
cmpl
mov
fistpl
and
icebp
pop
mov
pusha
mov
and
fdivrl
int
scas
cmp
pop
sub
test
pushf
ss
or
fs
push
and
mov
mov
les
addr16
repnz
lahf
pusha
adc
or
mov
bound
jecxz
fbstp
bound
cltd
stos
mov
and
es
jmp
adc
ret
mov
hlt
out
call
push
loope
inc
leave
repz
push
push
insl
bound
andl
push
repnz
iret
out
cld
cmc
or
xor
sbb
cmp
enter
or
iret
xchg
cli
rcl
adc
sarl
sbb
js
jae
xor
ss
idivb
pop
adc
imul
mov
insb
lret
std
dec
inc
cmp
inc
insb
pushf
lock
lret
loop
or
hlt
adc
movsb
add
jge
mov
test
push
inc
cs
stos
sub
fidivl
mov
ret
jmp
push
je
push
outsl
add
test
adc
push
add
xor
xor
jmp
orb
leave
cmp
rorl
lahf
adc
mov
or
and
mov
das
in
jb
mov
mov
xor
xchg
jmp
arpl
loop
inc
mov
imul
pop
or
mulb
stc
jnp
jo
pop
dec
push
jbe
ficoms
movsl
push
mov
mov
xor
lret
imul
fldt
jb
aaa
push
pop
out
cltd
adc
push
loop
mov
movb
or
rcrb
hlt
movsb
jb
cmp
add
into
push
jns
xchg
aaa
sbb
notl
jecxz
dec
xor
insb
inc
mov
or
in
inc
lock
clc
out
push
mov
mov
subl
sbb
xchg
lret
pop
add
dec
call
cmovle
in
or
js
loope
loope
and
lcall
movsb
test
mov
dec
pushf
loopne
sub
sbb
mov
sbb
fbstp
jg
pop
inc
sub
aad
mov
incl
mov
or
add
push
sub
adc
sub
add
mov
aaa
jno
sub
movsl
inc
cmp
pop
adc
stos
ret
faddl
or
cmp
push
xchg
test
ret
pop
mov
xchg
mov
inc
sbb
adc
icebp
push
insl
inc
sbb
mov
jnp
push
mov
mov
cs
sbb
aaa
add
imul
cmpsb
pop
cmp
insb
mov
cmp
pop
sub
xchg
sub
jb
xor
stc
dec
ljmp
mov
push
in
inc
push
mov
shlb
lds
aam
sbb
ss
fld
fldenv
int
stos
into
test
sub
imul
test
and
pop
sbb
sbb
xchg
sub
flds
daa
fwait
fwait
jno
inc
or
adc
adc
inc
push
popf
inc
ljmp
addr16
xchg
orb
shrb
in
mov
xchg
fnsave
into
mov
fwait
int3
dec
pop
mov
sbb
pop
push
push
fwait
imul
data16
out
popf
mov
ret
test
cli
lods
or
jo
cmp
jecxz
clc
mov
jge
xchg
add
mov
mov
lahf
loop
repz
mov
or
aaa
imul
leave
push
clc
dec
jnp
pushf
fidivrl
and
sbb
or
pusha
push
sub
clc
push
stc
lcall
into
rcll
push
icebp
sbb
dec
arpl
arpl
mov
test
stos
fadds
push
mov
adc
pop
inc
in
xchg
or
je
int3
mov
sbb
jnp
jge
mov
cmp
xor
xchg
mov
push
insb
repnz
push
mov
outsb
sub
lods
pop
jp
icebp
idivl
cmp
lcall
stos
leave
stc
cmc
xchg
faddl
aas
bnd
test
cmp
hlt
insb
xor
mov
mov
cmc
dec
lahf
xlat
sar
call
inc
fdivs
xor
aam
in
in
test
or
push
push
iret
xor
ja
inc
or
rclb
inc
mov
pop
push
pushf
mov
adc
stos
push
testl
out
cmp
sub
out
inc
sti
loop
jno
sbb
shll
xor
add
push
add
loope
outsb
cmp
xchg
pop
cmp
mov
or
lods
movsb
notl
call
xchg
mov
jp
jmp
lea
mov
int3
push
ret
out
cmpsl
or
push
sbb
mov
mov
iret
dec
js
cmp
or
jle
sub
sub
dec
test
out
sbb
lret
hlt
add
fldt
mov
mov
pop
imul
cmp
rcrl
mov
mov
divb
das
cmpsb
ljmp
insb
mov
jno
push
xchg
lea
lahf
cmpsb
dec
xor
daa
xor
or
stos
in
pop
xchg
and
mov
mov
orb
fidivl
fcom
mov
ds
adc
nop
rorl
sub
shrl
and
ficompl
push
je
dec
mov
out
jo
loopne
xlat
call
cmp
and
jl
xor
or
and
inc
mov
inc
jno
fisubrl
xlat
mov
sub
mov
adc
in
push
fmull
loopne,pn
enter
xor
mov
js
add
data16
cmp
test
push
mov
out
pop
js
sub
lret
aam
enter
dec
add
in
mov
imul
sar
xorl
mov
xor
push
jge
inc
dec
stc
addr16
movsb
or
jno
aaa
push
sahf
adc
clc
inc
jecxz
jb
leave
pop
scas
mov
mulb
negb
sub
add
out
lock
push
ds
popf
lahf
push
loope
dec
and
lcallw
or
shrb
or
fadds
dec
movb
test
mov
mov
dec
xchg
out
iret
jmp
sub
mov
int
out
mov
lods
into
adc
dec
pushf
xor
leave
arpl
outsl
cmpsb
cmp
mov
xor
nop
and
inc
push
sub
ret
cmp
rclb
out
out
jb
adc
movsb
repnz
fsubl
fsubrs
popa
in
cmpxchg
pop
jg
shld
daa
out
dec
stc
fsubr
mov
inc
into
aam
outsb
aaa
ret
push
xor
xor
in
loope
out
outsb
push
icebp
mov
outsb
test
sbb
imul
jecxz
loope
in
adc
or
sub
call
idivb
xor
sbb
sbb
mov
enter
inc
xchg
or
push
pop
xchg
ja
jne
xchg
je
popf
pop
test
jo
or
cmp
fisubrs
test
loopne
mov
push
mov
add
mov
test
dec
imul
dec
xor
movsl
js
lahf
pop
das
fildll
xor
push
xor
pop
pop
push
xchg
aaa
mov
test
and
dec
and
rol
punpckhdq
fidivrl
mov
mov
push
popa
les
jmp
aas
js
inc
test
fwait
mov
dec
mov
xor
push
ja
xchg
xchg
andb
in
aad
pop
inc
ret
jo
jmp
lods
dec
push
or
pushf
xchg
stc
mov
mov
fcoml
inc
rolb
dec
mov
into
mov
jno
and
add
stc
test
nop
sahf
fiadds
scas
xor
dec
xlat
pop
out
jbe
dec
dec
movb
sar
sub
fiaddl
hlt
rcrb
and
xor
stos
loope
xorl
addb
push
add
xchg
cmp
test
jmp
xchg
push
xchg
adc
or
or
imul
jmp
push
sti
aad
or
xchg
imul
dec
outsl
loop
mov
dec
cltd
in
jge
int3
out
mov
mov
jno
aad
mov
pop
inc
pusha
stc
dec
popa
aaa
insl
mov
aam
popa
test
jno
push
or
rcll
push
popf
push
dec
sahf
and
imul
sub
dec
mov
inc
sbb
lea
movb
test
mov
stos
pop
inc
sarb
push
mov
fs
jmp
mov
cmpsl
into
movsl
mov
sbb
cmpsb
in
jae
inc
mov
mov
inc
jp
out
and
insl
dec
mov
mov
cmp
adc
push
icebp
xchg
daa
shll
inc
aaa
add
lea
dec
mov
pushf
sub
nop
fwait
mov
arpl
push
jno
in
adc
adc
cmpb
push
and
push
mov
outsl
push
adc
rol
popf
and
scas
dec
call
int3
dec
push
adc
imul
das
mov
xchg
xchg
mov
stos
xor
xor
jmp
mov
aaa
xchg
cld
cmpsl
lods
xchg
or
push
or
and
into
pop
mov
jns
icebp
push
jl
mov
test
adc
inc
mov
cmp
inc
add
test
mov
repnz
push
push
inc
add
xor
jae
jg
push
and
xor
cmp
ja
cli
xor
inc
jge
sti
stc
and
rcr
mov
testb
decb
ret
in
inc
icebp
dec
notb
jp
arpl
in
mov
mov
cmp
and
xor
push
movsl
add
scas
cwtl
call
leave
mov
push
sahf
frstor
jbe
jb
xchg
cmp
add
mov
dec
or
mov
sub
add
fndisi(8087
pop
xchg
negb
shll
fnstenv
mov
add
cmp
and
jg
js
fwait
sbb
imul
pop
insb
mov
jns
mov
addr16
sbb
push
mov
add
insb
fs
adc
cmpsb
jno
test
cmpl
insl
sub
sahf
mov
shrl
repnz
inc
pop
and
fnstenvs
cmc
jg
dec
rcr
loop
mov
push
fisttps
adc
test
stc
adcl
enter
les
lea
stos
xorb
sti
stc
jns
inc
xchg
aad
mov
and
jmp
mov
adc
movsb
pushf
push
mov
out
push
mov
lret
loopne
jecxz
adc
push
xchg
out
cli
add
inc
int
or
sti
imul
fisubrl
jno
mov
ljmp
test
push
sub
cmc
fs
pop
out
xchg
repz
lret
stos
lods
hlt
mov
xor
fdivs
test
ret
mov
sahf
in
std
or
int
push
out
inc
mov
xchg
fisubl
inc
scas
pop
sahf
add
in
sbb
js
in
mov
lcall
mov
push
fstpl
cli
imul
jbe
aam
push
inc
pop
insl
sub
inc
push
ljmp
iret
sbb
hlt
jae
pushf
jae
dec
rcll
xor
mov
sbb
leave
mov
xchg
xlat
jle,pn
xchg
lods
ss
ficoms
daa
mov
pop
movsl
div
add
and
aad
aaa
dec
mov
inc
insl
jmp
gs
out
cli
les
dec
or
push
or
dec
pop
push
or
mov
mov
dec
lahf
sub
pop
or
mov
jne
std
push
arpl
sub
scas
stos
jge
adc
cld
add
cmpsb
adc
sti
sub
xchg
lea
js
es
xchg
add
cs
pop
pusha
or
mov
xor
lret
sti
repnz
ret
adcb
inc
jnp
cmp
mov
out
ja
call
push
sahf
roll
xchg
cwtl
dec
push
dec
xor
sbb
lahf
out
pop
mov
rcll
adc
repz
pop
sbb
fsubrs
enter
test
add
dec
cmp
scas
test
shlb
mov
imul
pop
div
mov
inc
test
lea
pop
cwtl
cmp
dec
adc
imul
sub
daa
mov
mov
lods
cmpsl
xchg
cmp
cmp
and
fs
pop
lds
outsl
add
test
ljmp
or
xlat
xchg
mov
xrelease
and
sarl
or
ljmp
js
sub
dec
adc
and
and
jbe
call
dec
sbb
jmp
mov
sbb
cvtpi2ps
bound
sbb
pop
sbb
ficompl
das
lock
das
jg
dec
jne
rcl
adc
xor
or
jmp
mov
cmp
mov
inc
icebp
push
push
mov
jae
imul
dec
nop
fidivrs
and
and
lock
and
adc
cmp
sub
int3
xor
rcll
jg
jne
jmp
sbb
inc
fistpl
xor
adcl
cmp
out
movsl
sti
push
lods
aaa
lret
lret
add
data16
sub
or
jp
and
sub
mov
inc
ror
adc
imul
stos
sub
ret
cwtl
inc
mov
xchg
adc
or
dec
pusha
xchg
rcrl
jmp
jge
xor
outsb
push
xchg
jb
adc
push
or
jg
fsub
push
and
jno
push
bound
cmp
cmpsb
inc
cmp
bswap
push
enter
push
sub
jge
repnz
xlat
cwtl
mov
jp
pop
mov
pop
and
or
fiaddl
out
sarl
push
xchg
mov
mov
jge
ljmp
inc
lods
stc
ja
out
orl
mov
or
aaa
psubusb
jg
rcrl
push
adc
jmp
movsl
inc
sbb
and
popf
push
insl
cli
xor
add
cmpsl
cltd
xchg
push
xchg
lret
xor
negl
add
ja
fs
out
push
jno
stos
into
lods
fs
pop
ja
fcoml
push
cmp
push
xchg
and
sub
or
nop
sub
fs
push
push
push
jmp
imul
mov
xchg
mov
stos
in
fistps
push
ljmp
xchg
rcrl
push
data16
push
xchg
and
ja
dec
out
ficoml
push
adcl
hlt
add
cmp
mov
gs
adc
es
out
cmp
push
mov
or
inc
jbe
outsb
add
mov
adc
mov
xor
cmpsb
loope
jb
fidivrl
inc
imul
cmp
and
je
stos
add
sub
adc
es
and
adc
mov
movsb
or
push
into
cmp
imul
loope
xor
and
call
imul
test
test
jae
setae
sub
stos
inc
popf
mov
inc
and
js
and
dec
pop
pop
ja
mov
jno
repz
adc
daa
pop
setl
adc
jg
outsl
gs
xorl
in
xor
push
pushf
mov
jb
xchg
adc
test
stc
lret
dec
dec
fstpl
cmp
mov
in
cmp
mov
mov
jg
mov
mov
add
ret
mov
or
cmpsb
or
xor
push
ret
inc
mov
and
push
test
mov
insb
mov
and
inc
mov
enter
int
in
cmpsb
sub
lds
ficompl
fdivrp
cmp
and
mov
xchg
nop
push
movsb
inc
xlat
mov
mov
es
pop
xchg
sbb
push
aas
popa
les
dec
jns
lahf
int3
aaa
push
nop
xchg
ficompl
hlt
fdivl
mov
flds
sub
mov
or
imul
mov
push
and
mov
push
cs
iret
pop
mov
mov
fwait
jne
pop
sub
push
xor
stos
insl
in
jns
xchg
mov
push
or
push
mov
ficoms
push
adcl
sbb
and
jecxz
add
mov
cmpsb
fmulp
sbb
lds
inc
clc
sub
push
jle
fcoml
fstl
inc
rcll
out
idivb
or
adc
in
ljmp
inc
fcmovb
imul
push
inc
addl
xchg
mov
pushl
addb
pushf
inc
adc
in
popa
cmpsb
pushf
mov
cmp
sub
or
xchg
inc
mov
cli
movsb
add
push
mov
mov
inc
mov
cmp
call
adc
shlb
pop
shrb
xchg
lcall
mov
pop
add
in
jge
pop
pop
in
icebp
sbbl
cmp
cltd
mov
int
sub
inc
gs
mov
filds
int
jp
mov
and
push
xlat
add
cs
div
scas
mov
sub
push
loopne
cmp
or
rcll
aas
inc
popf
lret
imul
movsb
add
pop
scas
arpl
inc
jae
mov
mov
icebp
imul
jle
lods
pop
ljmp
fldln2
xlat
lds
lods
cmc
hlt
arpl
add
out
orb
je
mov
and
cmpsl
ljmp
mov
lds
sbb
ds
mov
fdivrl
aaa
xchg
fsts
sub
loopne
repz
aaa
adcl
pushf
mov
ljmp
les
movb
mov
pop
in
lcall
cmpsl
sbb
call
push
jne
dec
int
outsb
mov
pop
pop
les
loop,pt
or
sbb
outsb
inc
and
out
mov
imul
aaa
mov
xchg
cmp
mov
sbb
cmc
loopne
mov
cli
fmuls
sub
mov
je
shll
roll
mov
or
test
stos
xchg
xor
insl
xor
icebp
add
and
jle
push
nop
jne
stos
scas
mov
mov
xchg
jge
ja
jns
lock
mov
mov
cld
sub
rcll
mov
rorb
ffree
lock
pusha
or
dec
nop
gs
addl
fistps
je
subb
push
sub
sub
test
xchg
add
rolb
jg
jno
shll
push
stos
mov
in
mov
push
mov
stc
cmp
insb
xor
mov
into
inc
or
std
mov
shlb
xchg
fmull
sub
enter
pop
add
jmp
call
pop
std
pop
lret
orl
or
out
hlt
or
xor
and
inc
rorl
push
sahf
jno
or
out
jns
fs
push
jmp
ret
clc
mov
in
popa
cmp
mov
adc
ljmp
lea
push
push
aad
in
mov
imul
jae
push
mov
jnp
jge
call
sub
ficompl
and
xorb
sub
lock
add
jb
clc
mov
int3
test
inc
js
inc
push
jmp
imul
das
jp
or
cmpsb
lahf
or
mov
lcall
std
cmpsl
leave
jmp
add
cli
sbb
add
repnz
aas
movsl
pop
cmp
ja
fnsave
add
push
pop
mov
mov
idivl
dec
aas
push
dec
sub
jp
test
arpl
add
jg
xchg
sub
cmpb
pop
fisttps
les
pop
mov
test
loop
call
andb
push
sbbl
jl
bound
or
adc
mov
std
mov
pop
and
out
dec
dec
jns
test
fstl
sub
pushf
in
mov
incb
mov
xor
inc
mov
lret
leave
push
rcrl
xor
pusha
bound
jo
ja
pop
cmp
pop
dec
mov
notl
cli
adc
fwait
and
or
cmp
inc
adc
out
lahf
stos
mov
test
test
push
adc
ret
jp
inc
mov
clc
in
add
and
and
jne
rcrl
fs
rcr
popa
pop
sahf
sbb
shlb
inc
scas
stos
dec
stos
push
gs
shrl
add
pop
iret
jmp
xchg
or
cltd
outsl
ljmp
mov
test
mov
cwtl
repnz
addr16
jo
imulb
or
mov
mov
imul
clc
adc
out
test
testb
test
adc
cmp
pusha
cmpsl
and
xchg
xchg
imul
loopne
imul
ret
cld
jle
data16
or
inc
push
lods
xor
jge
in
push
add
loopne
jp
xchg
jp
out
cld
int
mov
hlt
scas
mov
jo
or
movsb
les
mov
pop
inc
js
mov
fmuls
dec
sub
and
sbb
sub
adc
icebp
mov
popf
xchg
xor
sbb
daa
shrl
pop
leave
mov
pop
lcall
mov
ficomps
das
shll
mov
sbb
cli
mov
out
fwait
insl
mov
mov
jecxz
fistpll
sub
lds
sbb
push
lfs
dec
int3
mov
push
mov
mov
mov
xchg
jge
jb
sti
test
xchg
jle
sbb
ds
sub
repnz
mov
data16
mov
jg
push
push
fwait
lcall
xor
xor
popf
push
push
lcall
jnp
imul
push
jb
mov
scas
jl
pop
adc
jl
push
stc
movsb
bound
mov
sub
iret
add
or
idivb
add
loope
scas
das
sbb
fistps
inc
test
repnz
ljmp
lods
repnz
adc
inc
outsl
mov
sub
inc
loop
inc
notl
xchg
pushf
es
sbb
insb
and
mov
mov
stos
fisubrs
xchg
pop
roll
popa
mov
loope
int
cmpsb
or
test
pushf
cmp
pop
nop
daa
adcb
xorl
cwtl
pop
hlt
cli
lea
adc
inc
addr16
push
pusha
andl
scas
into
dec
fcoms
fdivs
insb
mov
inc
mov
enter
or
movsl
in
or
loop
aam
mov
lahf
dec
push
mov
and
dec
popl
push
loope
sub
push
add
mov
xchg
lahf
or
jecxz
or
aad
rcl
aad
inc
jne
lcall
jmp
call
mov
outsl
bound
push
out
dec
push
push
jmp
int3
and
pop
jbe
push
int3
xor
out
pop
mov
xchg
popf
cmp
push
jb
fcomip
pushl
add
inc
push
adc
out
jecxz
jge
cmpl
incb
lea
cmp
or
pop
icebp
sub
movsl
cmp
orb
shlb
jl
sbb
out
jecxz
mov
adc
shr
mov
sub
and
stc
mov
add
sbb
je
mov
movsl
push
insb
dec
jb
xchg
mov
shrl
mov
xchg
push
or
dec
add
inc
add
cmp
lret
xor
gs
fucomi
mov
pop
popf
int
repz
sbb
adc
sub
and
sub
imul
fwait
dec
leave
movsb
mov
aas
mov
jl
scas
cmp
jnp
arpl
out
jo
mov
mov
cmc
lea
bnd
lods
rolb
inc
and
cmp
push
pop
shl
out
rorl
scas
lcall
or
lret
loope
out
xor
std
rcr
jecxz
bound
pop
mov
cli
xchg
cmpsb
inc
push
cmovne
xchg
arpl
and
je
adc
cmp
lret
mov
add
es
int3
or
mov
mov
mov
dec
ljmp
mov
cmp
xchg
xchg
ret
mov
adc
ret
fxch
and
lods
mov
lret
and
inc
rorb
les
pusha
arpl
aad
aas
test
mov
push
fiadds
or
cs
sbb
into
aas
hlt
hlt
sub
iret
test
jno
xchg
cmp
dec
lods
lea
xchg
mov
and
sahf
enter
push
fs
rorb
xlat
jmp
sub
fsubl
scas
mov
jle
cmp
popa
mov
mov
stos
sub
and
addr16
inc
int3
ret
or
adc
shlb
and
mov
scas
mov
jmp
aas
cmpsl
pop
mov
mov
das
jo
inc
mov
push
xchg
popa
xor
loope
mov
test
stos
sbbl
lahf
mov
jecxz
pop
sub
push
dec
shll
shrb
mov
xor
push
and
js
add
mov
sbb
std
popf
mov
pop
rcrl
shrb
lea
jnp
out
lcall
mov
lcall
leave
mov
or
lds
lcall
mov
and
clc
rcl
lods
js
or
or
outsl
jp
call
nop
and
xchg
hlt
nop
inc
mov
loope
mov
fisubrs
mov
jne
test
pop
jg
dec
aam
pop
rorl
scas
fucomi
inc
ss
test
add
data16
sub
lds
clc
jmp
movsl
dec
les
pop
insb
add
inc
lahf
xchg
out
sub
pushf
or
inc
negb
js
ljmp
pop
jp
ret
cmp
mov
sub
mov
pop
inc
fldenv
mov
inc
mov
test
mov
pop
adc
movsl
scas
fldt
sbb
jge
icebp
gs
sbb
je
lds
sbb
pop
out
inc
and
outsb
dec
sbb
xor
adc
into
adc
xchg
pop
inc
mov
jle
adc
sbb
out
lret
fdivrs
stos
icebp
lret
fiadds
xorb
pop
or
stc
mov
jecxz
jg
sbb
sbb
cli
push
cltd
adcb
fnstenv
push
rclb
jno
int
xor
mov
in
ss
add
loop
or
outsl
pop
loopne
pushf
adc
jbe
cmp
repz
popf
push
out
jecxz
cmp
sbb
leave
insl
sbb
loopne
and
shlb
seto
fwait
sub
popa
in
data16
dec
iret
xor
lret
gs
xor
testl
inc
mov
dec
stos
inc
lret
inc
cmp
mov
add
jecxz
mov
jmp
sub
push
hlt
pop
mov
fistps
dec
roll
ret
cwtl
pop
cmp
test
idiv
add
and
aas
pop
adc
push
iret
in
push
cmc
fistpl
push
pop
or
add
stc
cli
loop
fsubr
push
xchg
sbb
aas
jl
out
lcall
popa
jb
ret
leave
sbb
scas
push
icebp
loop
add
popf
dec
cmp
pop
pusha
movsb
or
push
ret
mov
pop
jnp
xchg
push
daa
jp
in
loopne
pop
mov
xchg
iret
lock
mov
repnz
jb
adc
pop
xor
pop
leave
cmpl
setae
insl
sub
adc
xchg
or
stos
cmp
and
push
sub
xor
inc
iret
dec
mov
inc
pop
out
xchg
adc
jb
push
lds
inc
scas
xchg
xor
bound
sub
movsl
test
idivl
pop
scas
adc
pop
cs
repz
cmp
inc
add
mov
in
push
fxch
mov
pop
push
out
fcoml
jecxz
aam
add
fsub
mov
push
xor
das
or
cmp
sbb
int
fmuls
cmp
pop
mov
sub
push
addr16
ljmp
xchg
jmp
sbb
xor
insb
lods
add
xor
xlat
mov
in
add
sbb
loop
es
push
sub
inc
pushf
ret
sub
jb
cld
jns
mov
xchg
mov
xchg
sub
in
shll
dec
lret
sub
pop
movl
dec
mov
hlt
pop
sbb
adc
push
xlat
push
int3
add
jno
jne
pop
mov
leave
push
xchg
mov
pop
adc
pop
scas
and
push
notl
lods
cmp
cli
jbe
imul
dec
insb
arpl
cwtl
ret
push
data16
jle
pop
add
cmp
push
mov
adc
nop
lcall
pop
aas
cs
insb
shlb
sbb
sti
add
push
ret
loop
pushf
addr16
enter
fwait
jp
fisubl
push
add
push
mov
inc
lea
mov
lea
cmp
cltd
add
mov
pop
sub
or
sbb
jge
inc
mov
cmp
shll
out
subb
mov
inc
jle
lret
loopne
dec
jl
pop
or
dec
aad
testb
into
mov
sbb
jge
dec
rcrl
add
dec
sbb
adc
jnp
hlt
mov
imul
pop
dec
jns
leave
ficompl
shll
push
add
push
in
es
scas
test
push
xor
and
push
test
cmp
inc
mov
lret
sahf
popa
popa
setbe
test
ds
addr16
mov
mov
sub
push
add
mov
and
mov
or
and
jl
pop
or
movsb
mov
in
sbb
dec
pop
daa
mov
test
cmp
pusha
insl
mov
cmp
std
faddl
mov
mov
rolb
jb
inc
aam
orb
or
jns
int
mov
and
es
daa
mov
clc
int3
pop
stos
mov
jp
jo
in
outsb
shrb
xchg
sub
fbld
loop
add
loope
jecxz
dec
add
and
mov
pop
fdiv
out
jl
mov
mov
jb
mov
loope
dec
or
aas
gs
and
push
mov
or
jmp
inc
sub
testb
add
sbb
and
sbb
fimuls
cltd
mov
mov
pop
dec
cld
test
popa
pop
fbld
lods
jle
cmpsb
push
fstl
adc
mov
jecxz
mov
into
xor
stos
scas
inc
or
and
out
push
scas
add
shl
movsl
shrl
cmp
sub
out
jmp
mov
mov
scas
in
vphadduwd
or
mov
dec
rcl
icebp
icebp
jp
add
sub
sbbl
and
cmp
mov
shrd
stc
out
fsubr
xchg
popf
xchg
js
mov
in
add
rcrl
sbb
lcall
xchg
inc
xor
loope
aam
cwtl
xor
push
pop
out
lret
xchg
xchg
mov
sbb
repz
or
xchg
test
mov
ja
fcmovb
fyl2xp1
mov
and
leave
xchg
jb
loopne
lcall
inc
gs
xor
pop
ret
fldl
mov
jb
jbe,pn
mov
test
pusha
mov
inc
jmp
loopne
loope
mov
push
cld
mov
mov
popa
mov
cmpsb
scas
movsl
cltd
cltd
lret
sub
mov
cltd
adc
push
mov
dec
mov
jo
xchg
js
movsl
sti
add
sub
xchg
ljmp
jecxz
fcoml
or
cwtl
sbb
or
stc
mov
pop
or
aad
ret
xor
int
pop
jmp
cmp
test
sbb
ja
cmp
stos
int
pop
add
lods
and
pop
fs
frstor
or
daa
cmpsl
iret
xlat
cmp
andb
ljmp
add
pop
pop
jl
dec
xchg
xchg
int
jg
in
js
mov
fldcw
dec
out
xchg
mov
loope
or
mov
xor
add
out
adc
sahf
and
pop
and
cmp
repnz
les
xor
fs
mov
or
mov
call
rcl
nop
push
or
out
cmp
mov
pop
xor
mov
dec
subb
dec
mov
rcrb
inc
cmc
lret
inc
mov
sbb
mov
fmuls
fimuls
aam
popf
movsl
lock
ficomps
loopne
add
sub
outsb
mov
ljmp
pop
fdivrs
xchg
xor
test
or
xchg
movsl
and
int
push
hlt
dec
push
out
clc
push
pop
pop
addr16
arpl
out
push
enter
sbb
loop
xchg
mov
fcmovnb
inc
ftst
inc
dec
test
test
adc
sub
push
lcall
int
addr16
lock
int3
jp
dec
cwtl
jecxz
fldl
aaa
adc
xchg
imul
and
inc
fbld
xchg
jp
mov
das
inc
adcb
fidivrs
mov
mov
sub
roll
and
data16
and
mov
push
into
and
in
add
test
cmp
dec
je
test
pavgb
jno
test
cmp
lret
pop
int
dec
pop
pushf
pop
dec
or
and
pop
fistpll
nop
loopne
pushf
pop
icebp
and
outsl
jp
js
xchg
scas
push
imul
adc
and
push
push
mov
mov
sahf
sub
push
sub
add
stos
jge
cmp
push
xor
call
fnstenv
xlat
jnp
pop
push
dec
popa
int3
and
enter
mov
call
into
orl
jne
sbb
inc
pop
xor
xlat
pop
mov
push
mov
adc
adc
push
faddl
notl
pop
jne
in
scas
in
dec
jae
jp
sbb
adc
add
mov
fnstcw
fs
cmc
int
out
sub
fcomps
roll
or
out
dec
je
in
add
jns
daa
mov
inc
arpl
test
pop
sahf
jge
out
mov
and
pop
aaa
mov
adc
pop
inc
dec
fistpl
adc
pop
nop
pop
ja
pop
dec
add
enter
cmpsl
adc
dec
push
shrl
scas
add
and
sbb
mov
mov
popa
cmp
jne
cld
mov
or
dec
add
int3
jmp
fdivs
lods
out
bound
sbb
fsubs
xchg
sub
xor
aaa
stos
ret
pop
and
mov
push
xor
pop
xor
aam
jae
lock
or
mov
adc
dec
jecxz
push
insl
xchg
ret
fmull
push
outsl
jmp
cmp
mov
xchg
jge
pop
sar
mov
test
adc
adc
push
cld
mov
out
mov
jl
adc
pop
jno
minps
sahf
rclb
push
push
pop
jbe
ret
sub
jmp
nop
adc
dec
mov
mov
je
das
jmp
ja
cltd
cmpsl
xor
mov
inc
cmp
sub
popf
in
mov
rdpmc
push
xchg
and
dec
test
mov
xor
adcl
decb
mov
imul
xchg
cld
cli
push
inc
add
scas
xor
lock
mov
aad
in
push
mov
paddd
imul
xchg
ljmp
sahf
adc
leave
mov
rol
mov
mov
mov
inc
inc
sub
sub
mov
lds
call
call
arpl
int
orl
jmp
lock
add
out
mov
xlat
addr16
gs
jge
sbb
mov
int
aas
sub
xchg
inc
hlt
pushf
xchg
in
lea
xchg
xor
dec
call
sahf
xor
les
sbb
orb
mov
lods
test
cmpsl
jae
repz
push
push
add
mov
ljmp
mov
xchg
push
stos
pop
xchg
xor
shl
xchg
das
imul
fildll
stos
or
xor
jns
adc
adc
fs
push
imul
loopne
cwtl
jo
or
push
mov
inc
les
cli
cmc
push
sbb
mov
adc
adc
add
mov
add
addw
hlt
mov
mov
mov
or
cs
pop
rclb
pop
bound
push
mov
sub
push
cli
lods
mov
jne
mov
or
jo
xor
popf
jae
leave
mov
bnd
test
mov
int3
xor
dec
sahf
lods
or
mov
pop
add
dec
inc
fs
outsl
dec
lcall
jo
mov
mov
jmp
push
add
xlat
fwait
sbb
inc
pop
scas
dec
int
sub
cltd
loopne
loope
jl
mov
fistpll
push
mov
lahf
cmp
push
inc
adc
in
lret
jne
mov
cmp
xchg
inc
cmp
pusha
push
mov
inc
push
or
jmp
and
jbe
xor
or
in
xchg
cmp
sbb
fmull
ja,pt
pop
ficomps
xor
ja
jp
lods
mov
rcll
dec
or
lret
sub
push
mov
mov
push
push
flds
jge
push
xor
xchg
push
cli
push
icebp
fmull
add
hlt
aaa
in
mov
push
filds
mov
or
pusha
mov
add
push
lods
cltd
push
cmp
xchg
shr
mov
cwtd
jmp
ret
loope
cwtl
xor
xchg
ret
je
adc
pop
sbbl
mov
cmp
out
fs
or
popa
push
out
fs
cmc
popa
jne
cmp
push
push
inc
adc
xchg
stos
mov
andb
int
sbb
cmp
test
mov
push
ret
sahf
ljmp
adc
jbe
dec
xchg
fidivl
mulb
ficoml
arpl
jl
repz
test
mov
fbstp
in
insl
filds
mov
fwait
and
cmpsb
insl
call
fadds
stc
jmp
inc
aas
in
push
cli
adc
and
scas
lahf
fdivl
lret
les
add
or
mov
xor
imul
xchg
sti
dec
add
std
xchg
and
je
inc
and
xor
lods
insb
jp
mov
lcall
or
lods
mov
pop
pop
dec
outsb
jl
in
ja
dec
ja
sahf
gs
pop
fs
test
std
cmp
ljmp
pop
jecxz
mov
or
dec
mov
add
inc
pop
xchg
or
test
xchg
data16
nop
and
pop
or
addr16
out
test
lods
xor
ret
fsubs
pop
pop
fdivl
fbstp
jp
xchg
sbb
push
add
pop
mov
jg
cwtl
imul
adc
jnp
icebp
pop
mov
and
adc
mov
mov
inc
pop
shrl
mov
cltd
jg
jl
or
jle
nop
jecxz
add
scas
push
and
inc
loop
imul
lahf
mov
mov
pop
push
jns
fistpl
push
enter
add
lret
mov
mov
lds
push
mov
incb
enter
icebp
mov
or
stos
call
jge
rolb
loopne
or
outsb
sarl
push
mov
push
fstpt
mov
mov
inc
xchg
dec
ja
adc
mov
mov
push
adc
mov
les
scas
out
mov
clc
fnstenv
jmp
outsl
mov
add
cmp
xor
xorb
popa
mov
jne
mov
push
push
lds
mov
fisttpll
cmpsl
mov
lock
loope
js
imul
cs
aad
cmp
sub
dec
pop
stos
pushf
das
push
mov
rolb
sub
mov
cmp
arpl
cld
daa
pop
lods
pop
ja
dec
repnz
or
adc
outsb
mov
sbb
sub
int3
shll
shlb
cmp
inc
mov
out
xor
dec
lret
jns
std
push
out
xchg
mov
test
jae
popa
pop
mov
enter
jns
aam
lods
inc
roll
mov
adc
popf
adc
pusha
sbb
or
xor
mov
data16
push
popa
xchg
outsl
stos
in
in
inc
mov
sti
sbb
add
inc
inc
jecxz
jmp
shl
out
inc
pop
ror
sarb
inc
push
fsubp
jno
fistl
repz
aaa
in
mov
adc
pop
mov
mov
sub
push
mov
sarl
push
lods
sub
in
pop
scas
leave
popa
adc
xchg
xor
ljmp
out
inc
int3
ret
in
aam
das
jl
push
mov
inc
add
fsts
mov
xchg
adc
pop
popa
xlat
cltd
sti
nop
mov
inc
cwtl
pop
ljmp
xchg
adc
hlt
and
xchg
pop
or
mov
data16
stos
push
out
lods
out
enter
fsub
icebp
push
lods
loopne
cmp
rcrb
ljmp
pop
adc
shll
add
jb
adc
fsub
xchg
push
mov
ret
xor
xchg
scas
xor
push
add
insl
push
loop
sub
insb
or
stos
pop
push
xchg
jmp
xlat
popf
jbe
sti
push
lods
xchg
ret
loop
inc
mov
inc
push
push
lods
add
mov
mov
lods
mov
lods
stc
and
stos
jg
stos
movsl
xlat
mov
cs
dec
xor
xor
jg
out
inc
loope
aad
push
cmp
xchg
icebp
in
leave
and
dec
or
cmp
gs
nop
leave
lods
add
test
mov
xor
pop
leave
and
sbb
pop
pop
adc
cs
fwait
stos
test
sub
mov
add
mov
cmc
mov
clc
in
mov
icebp
fnstcw
inc
call
in
dec
mov
cli
addr16
push
andb
mov
adc
cmp
aam
into
mov
imul
mov
enter
mov
sub
pop
sub
jnp
jno
dec
xor
insl
adc
jne
stos
pop
dec
push
cmp
add
loop
in
lock
imul
adc
dec
xchg
mov
fisubrs
leave
call
aaa
xorl
ret
jl
cs
push
jl
shll
mov
leave
insl
cltd
pop
test
in
inc
dec
imul
cmp
lods
loopne
ret
mov
lcall
xlat
inc
je
mov
mov
adc
ss
test
test
mov
pop
cmpsb
popa
mov
jae
push
inc
shlb
out
or
stc
mov
mov
test
in
mov
jo
or
iret
popa
test
dec
jmp
ss
xor
sbb
push
mov
cmp
push
pop
cmp
movsl
scas
movl
cwtl
dec
out
mov
push
in
xlat
cld
std
sahf
in
loope
insb
sub
add
sub
dec
cwtl
pop
roll
idivb
mov
ds
adc
push
int3
xor
xchg
mov
popf
test
mov
js
lahf
push
push
sbb
xchg
pop
faddl
imul
andps
mov
aad
out
push
mov
dec
les
pop
jg
mov
fwait
mov
nop
notb
fwait
mov
lahf
sub
and
cmpl
stc
fdivs
fnstcw
adc
mov
arpl
cmp
sarb
jle
push
add
jbe
insl
add
int3
add
jnp
push
or
jle
mov
push
and
enter
scas
push
cmp
add
mov
movsl
loope
push
xchg
push
mov
cmp
leave
les
or
jbe
loope
or
mov
sub
jl
and
push
mov
dec
xchg
adc
cmp
insl
push
push
dec
insb
xor
or
mov
int
int
fs
sti
add
adc
or
fnsave
enter
mov
pop
lret
lahf
ja
aad
ret
pop
jp
lret
call
adc
ror
sub
jae
fs
push
fsubs
dec
xchg
push
xor
xor
push
push
out
sub
not
imul
and
add
push
loope
leave
popa
leave
stc
push
push
call
cmp
pop
add
jle
std
cmp
iret
pop
mov
pop
enter
lods
std
xchg
aad
sti
fcompl
iret
pop
aaa
outsb
add
mov
icebp
xlat
ljmp
dec
imul
or
pop
jecxz
outsl
scas
xchg
repz
and
lock
inc
jg
push
xchg
nop
and
pop
gs
adc
into
data16
ret
push
in
inc
add
jmp
mov
xorl
movsl
sbb
rclb
mov
or
xor
push
and
push
adc
iret
arpl
sbb
push
aas
mov
les
xor
and
pop
sbb
and
rcrl
sbb
push
daa
stos
mov
pusha
fdivrs
data16
das
outsb
fbld
test
clc
loop
add
cli
xor
sub
pop
mov
jle
adc
mov
xchg
jno
loope
andl
sbb
sahf
push
test
mov
mov
and
mov
xchg
pop
jg
scas
xlat
push
sub
pusha
cltd
fcomps
sub
test
add
scas
test
mov
push
jo
cmc
sbb
iret
stos
cltd
sub
cld
cwtl
loopne
jle
jge
repz
into
lret
shll
dec
ds
inc
and
js
std
sti
call
inc
push
imul
xchg
mov
or
jae
push
lret
mov
pop
neg
or
loop
movsl
cmp
stos
loop
xchg
xchg
xchg
xor
dec
mov
cmp
jno
gs
repnz
sbb
out
in
mov
sbb
ja
adc
pop
and
fstpt
sub
iret
xchg
push
sahf
jb
inc
jo
dec
test
xchg
cmp
adc
das
clc
int3
pop
push
add
pop
jecxz
fnsave
fstp
cwtl
push
addl
inc
out
xor
lock
lea
mov
cmp
jl
ret
scas
dec
insb
loopne
hlt
sub
rdmsr
sub
mov
sbb
fcmovnu
inc
fwait
dec
dec
fnsetpm(287
jp
lea
xchg
xlat
jnp
cs
or
inc
in
xchg
cmp
mov
mov
mov
jmp
jmp
cli
jge
divl
mov
or
pop
outsl
pusha
je
popf
adc
xchg
repnz
loopne
hlt
mov
mov
gs
in
mov
jb
ljmp
out
sub
or
cmp
sub
ficoms
ret
test
xchg
push
lahf
inc
mov
lret
or
jecxz
leave
mov
out
push
xchg
lock
pushf
jae
movsb
lahf
les
inc
outsl
cmc
pop
push
inc
mov
ret
dec
fwait
stos
add
pop
xor
sub
jne
shlb
iret
clc
mov
rcr
sahf
das
repnz
les
jecxz
sti
pushf
cmp
je
fnclex
and
mov
insl
jg
jno
cmovg
cs
enter
cmpsl
daa
push
xchg
pop
push
iret
clc
xor
test
mov
bound
cmp
pushf
popf
pop
mov
fstl
sbb
adc
insl
push
pop
mov
enter
test
sub
insb
stos
jg
dec
into
dec
mov
pop
das
mov
sub
cmp
std
mov
aaa
jge
mov
out
icebp
shl
in
inc
decl
test
sub
mov
lahf
xor
mov
jecxz
les
xchg
frstor
and
cltd
mov
pop
cmpsl
imul
movsb
out
in
push
rorb
imul
and
pop
sarb
jb
dec
mov
sbb
pop
add
mov
cmp
jmp
rep
popa
mov
popa
mov
sbb
cmp
out
push
out
sub
xchg
mov
outsl
in
scas
push
in
mov
inc
push
je
test
rcrb
xchg
add
lcall
push
test
xchg
fnstcw
mov
or
ret
popa
lahf
inc
cltd
inc
aad
cmp
push
pop
adc
jae
loopne
mov
xor
popa
mov
adc
push
xchg
inc
enter
pop
ja
clc
pop
shlb
mov
and
ret
jbe
add
sub
pop
jp
shl
sbb
stc
and
rcrb
js
enter
jge
inc
movsl
stc
ret
ja
repnz
jne
jl
jno
scas
cltd
les
rcrl
fistpll
sarb
or
daa
sbb
add
add
icebp
icebp
out
addr16
rorb
mov
sbb
aas
adc
xor
test
xor
cmp
in
xor
movsl
push
ss
adc
xchg
lods
icebp
std
rcrl
cmpsb
stc
mov
aam
mov
add
pop
xor
xor
fmull
lds
xchg
pop
in
insl
sub
pop
arpl
outsl
pop
insl
popf
or
or
jle
out
ds
inc
addr16
pop
lock
lcall
icebp
sbbb
jo
fsubs
call
or
xor
cli
mov
and
mov
xchg
xchg
sbb
jle
ljmp
fcmovnu
or
movsl
sbb
sbb
mov
xchg
test
add
cmp
rcll
pop
pop
jp
out
mov
and
inc
jns
jp
mov
inc
push
popf
xlat
inc
mov
dec
sbbl
int3
sbb
push
repz
data16
or
dec
push
cmpsl
cmpsl
cmp
mov
mov
leave
push
test
sbb
push
stos
enter
movsl
xchg
push
lret
mov
dec
xchg
test
inc
mov
push
cmp
fisubs
popa
icebp
imull
imul
or
jge
xlat
jnp
ds
insb
xchg
rorl
sbb
leave
dec
fs
nop
mov
fldenv
or
and
pop
dec
pop
push
icebp
push
or
dec
adc
jge
popa
xchg
mov
jnp
adc
sub
lcall
subl
outsl
decl
fimull
stos
mov
pop
mov
ss
imul
and
add
test
push
xchg
loop
sub
and
sbb
or
in
xchg
cmc
mov
cwtl
push
fnstcw
iret
mov
inc
dec
daa
xchg
iret
cmp
mov
sar
clc
xchg
aaa
stos
sub
inc
test
fistpl
lods
adc
dec
ja
sbb
push
push
sub
jae
push
or
sub
add
jmp
int3
in
push
lds
loopne
testl
cld
dec
addr16
rcrl
pop
xchg
jo
sbb
js
sbb
and
lods
or
shlb
repz
inc
cltd
push
sub
fldz
mov
ds
adc
mov
xchg
mov
or
jle
cmp
jb
iret
inc
dec
ret
popf
cmp
sahf
push
mov
jmp
fildl
cmp
inc
mov
xor
push
xchg
div
pop
dec
jle,pt
push
or
fidivs
sub
hlt
inc
out
mov
cmp
test
mov
or
ror
test
insb
icebp
lahf
movsl
test
roll
fst
lea
or
lods
jns
mov
and
adcb
inc
sub
cltd
les
int
jmp
push
jno
xor
pop
mov
dec
jne
das
dec
imul
mov
or
into
xchg
sti
sahf
out
sub
sub
movsl
push
in
xchg
pop
stos
push
push
sar
and
mov
push
mov
xchg
or
orb
jne
xor
push
rcrl
popa
je
int3
lret
arpl
movsb
xchg
dec
aas
mov
pop
cmp
dec
test
out
push
sbb
lds
xchg
lret
push
mov
pop
stos
sbb
gs
aam
add
insl
pusha
mov
lret
das
lock
lcall
adc
xor
ret
cld
inc
and
jb
jge
stos
sub
push
jae
test
push
dec
adc
xor
repz
enter
ss
adc
sub
lds
cmp
aaa
and
dec
call
and
rsqrtps
adcl
xor
leave
and
and
stos
dec
neg
mov
popf
cli
jne
jo
mov
cmp
sub
sbb
push
jne
insl
pusha
bound
mov
insl
rol
jle
or
push
jne
fsubs
xlat
sbb
cwtl
sub
dec
xchg
xchg
mov
bnd
nop
inc
mov
adc
cmp
xor
iret
dec
sarb
push
xor
mov
shlb
loope
mov
rclb
jno
push
stos
jb
or
mov
nop
dec
inc
and
xchg
es
or
jno
push
iret
jge
or
lret
dec
clc
mov
icebp
mov
sbb
xchg
push
fldcw
jno
mov
orl
js
and
push
mov
es
iret
pop
mov
lcall
jge
enter
iret
mov
inc
lods
inc
jg
jae
cmpsl
call
mov
push
icebp
sti
mov
dec
in
push
pop
icebp
sub
das
xchg
test
lcall
inc
mov
mov
inc
iret
les
jb
lcall
jnp
int3
lret
fs
loopne
ret
outsb
cmpsl
xor
dec
pop
push
dec
insl
out
gs
sub
adc
cmp
int3
sbbb
mov
movsl
lret
insb
xor
lods
flds
lods
cmc
pop
inc
and
push
xor
or
scas
sbb
repnz
hlt
xchg
xchg
lods
jbe
cwtl
ja
xchg
nop
imul
popa
je
je
rorl
ja
adcb
pop
ljmp
sti
mov
stos
sti
xchg
or
jne
and
and
adc
lds
inc
mov
cmp
imul
jae
insl
push
ss
nop
fstpl
jne
xchg
movsl
or
cld
shr
xchg
cmpsl
or
mov
out
nop
in
sub
fs
cmp
lret
or
scas
or
cmp
sbb
lods
pop
pop
adc
clc
lods
mov
inc
popa
or
insb
jae
inc
ffreep
dec
xorl
sub
mov
mov
in
push
add
xchg
dec
cmc
lods
loop
das
pop
mov
sub
mov
cmp
add
or
aaa
xchg
push
mov
sti
test
or
pop
insl
push
pop
jo
and
shlb
xor
mov
test
aaa
jge
pop
popf
ja
cs
out
stos
xor
pop
fsubl
inc
sbb
inc
cmpsl
pop
or
sarl
push
sub
fldenv
mov
fsts
mov
or
shlb
pop
fs
or
imul
xchg
icebp
inc
leave
or
mov
test
dec
add
je
xlat
mov
adc
call
jne
add
ret
out
aas
push
mov
mov
pop
flds
xor
push
mov
inc
and
xlat
inc
fcmovne
imull
in
fcompl
pop
inc
imul
pop
inc
push
mov
in
cmpsb
je
inc
add
mov
in
xchg
adc
cs
incl
data16
push
adc
daa
dec
mov
mov
add
jl
fimuls
push
sbb
push
loopne
shl
push
mov
jne
into
gs
push
cld
jns
incb
jg
das
jg
sub
rolb
adc
jmp
or
shrl
jp
pop
adc
or
js
mov
sub
dec
adc
xchg
sub
sub
dec
jb
inc
mov
xchg
pop
popa
stc
xchg
ds
xor
int
dec
shl
add
mov
mov
inc
icebp
fisubrl
rclb
cmpsb
loope
sbb
xor
into
or
lods
cltd
lock
cld
sbb
test
repz
jb
add
and
dec
mov
lods
mov
jne
movsb
xor
cmpsb
pushf
cld
popf
bsr
adc
ja
push
xchg
mov
sahf
int
jg
das
or
aad
idivb
fcmovbe
push
xorb
mul
push
push
xor
lcall
dec
add
inc
pop
xor
adc
inc
pop
mov
adc
xchg
cmp
stos
and
stos
gs
mov
aas
mov
inc
xor
outsl
sub
or
dec
pop
adc
xchg
stc
inc
xchg
lret
out
pop
in
imul
push
les
mov
xchg
xchg
adc
jle
daa
nop
sbb
mov
dec
jns
cmpsl
mov
lret
outsb
mov
adc
outsl
mov
das
arpl
cmp
add
scas
jns
rcrb
cmpsl
fcomi
xchg
leave
pusha
imul
mov
repnz
in
push
jl
dec
push
aad
repz
outsl
hlt
pusha
jmp
and
pop
test
scas
mov
mov
and
sbb
mov
pop
scas
int
shlb
push
cli
and
ficoml
jmp
bound
lods
imul
jae
jg
pop
cld
cli
cmp
outsb
daa
push
lahf
sbb
xchg
dec
int3
push
test
clc
jp
dec
push
jb
cltd
ljmp
pusha
ror
jno
and
xorb
mov
mov
lret
rcll
popa
sbb
xor
sbb
cli
jbe
cmpsl
mov
or
sbb
cmp
cmp
push
out
mov
das
adc
scas
popa
add
jne
mov
dec
add
fisubl
js
repz
push
cmp
xlat
scas
pop
add
jg
test
stos
mov
sub
arpl
cmp
ret
enter
or
push
ss
ret
fisubrs
mov
sbb
mov
or
cmp
mov
cltd
in
xchg
test
xor
mov
add
cmp
push
cmp
xchg
push
mov
test
cmp
mov
stos
push
inc
cmp
mov
test
jb
outsb
mov
and
imul
mov
and
out
je
push
daa
dec
push
mov
push
mov
mov
mov
add
ja
mov
or
xorl
pop
push
sub
scas
mov
cmp
test
cmp
push
jecxz
ret
mov
cli
shll
jg
mov
lea
lea
cwtl
mov
jge
push
cmp
int3
es
test
sarl
lods
test
bound
inc
mov
xchg
jb
xor
lcall
xorl
pop
ja
jbe
cmpb
push
xchg
and
and
inc
mov
fsubr
mov
mov
jo
inc
sti
push
xchg
cmpsl
mov
cmp
adc
int
addr16
push
mov
inc
popl
adc
out
in
mov
push
scas
js
rclb
dec
xchg
into
sub
cmp
add
stos
cmp
add
cmpb
cmp
sub
loop
mov
shll
imul
ss
loop
leave
stc
pop
rcrb
jnp
test
dec
movsl
xchg
xor
imul
fcoms
aaa
stos
repnz
or
in
jmp
arpl
and
push
sub
cmp
ret
insb
sub
dec
push
xchg
enter
movsl
add
imul
xchg
mov
mov
roll
push
jno
inc
jne
inc
mov
dec
loope
push
maskmovq
imull
movsl
ss
das
decb
dec
dec
jp
psraw
popf
mov
and
call
adc
mov
outsb
pop
das
and
cmc
std
lea
daa
mov
stos
jmp
addr16
lfs
jge
test
fstl
and
stos
repnz
inc
dec
sti
xchg
sub
mov
leave
popf
xchg
shufps
stos
cmp
js
inc
and
insl
jne
xchg
fdivrs
popf
in
inc
xor
outsb
out
in
rcll
pop
fdiv
aam
outsl
outsb
mov
mov
in
aas
mov
push
stos
cli
add
cmp
lock
lods
jns
jo
loopne
nop
push
xchg
mov
push
xor
dec
mov
cmpb
fs
cli
popf
stc
popa
mov
hlt
rolb
test
push
hlt
sahf
das
mov
pop
mov
adc
mov
lea
call
and
addr16
aam
lret
or
jmp
add
psrad
and
xchg
add
add
xchg
mov
push
in
mov
into
or
pavgw
ret
cmp
or
fwait
cmc
jmp
mov
fisubl
or
pop
push
fidivs
jne
test
mov
ss
mov
cmc
stos
rcrb
je
mov
fs
orl
inc
ret
xchg
mov
fisubl
popa
pop
xor
cli
imul
ss
jecxz
sub
inc
cmp
fcomps
adc
rcll
dec
ja
cmp
jge
lret
insl
add
xchg
dec
pop
inc
mov
mov
add
ja
ds
sbb
or
push
mov
or
dec
jo
jnp
mov
adc
fwait
mov
xor
iret
test
lcall
push
lock
and
lret
mov
jecxz
imull
fcompl
mov
and
roll
or
lods
insb
dec
mov
outsl
outsl
or
sub
and
fisttps
cltd
mov
push
xor
fwait
jg
lds
cmp
in
sub
cmp
test
or
adc
mov
hlt
lret
or
int3
push
mov
inc
and
repnz
fsubs
add
dec
jbe
mov
jno
sub
xor
mov
push
dec
pop
das
jmp
scas
pop
dec
adc
sbbl
icebp
pop
fwait
lock
stc
lods
cmp
popa
hlt
fwait
imul
mov
xlat
ljmp
cmpb
push
and
sbb
leave
cmpsb
and
in
out
push
test
fdecstp
into
fiadds
xchg
test
xchg
adc
es
test
leave
add
adc
jb
mov
hlt
mov
les
pop
mov
inc
stc
push
mov
mov
test
out
std
xlat
mov
mov
or
es
push
insl
sbb
lods
out
mov
leave
xor
rorl
lea
cmp
push
pop
pop
test
xchg
mov
mov
cmp
jb
fiaddl
dec
mov
push
or
inc
jl
mov
or
cwtl
push
outsb
sbb
adc
sub
push
cmpsb
imul
nop
test
shll
add
imul
mov
xlat
sbb
rcrb
jge
aam
neg
or
ljmp
push
lahf
loop
push
xor
adc
in
int3
add
dec
mov
jbe
rorl
push
int
add
inc
mov
call
dec
push
lahf
inc
adc
adc
sub
ss
mov
cmpsl
lcall
int3
jle
lods
mov
push
adc
dec
mov
jp
fidivrs
shrl
dec
adc
sub
outsl
daa
and
dec
mov
icebp
dec
mov
fstps
lock
sbb
cwtl
jl
sbb
cmp
xchg
pushf
ss
and
mov
addb
adc
jno
push
loopne
add
dec
sub
lret
push
mov
gs
adc
les
xchg
jp
xchg
repnz
lar
add
push
xor
and
outsl
arpl
outsb
dec
add
jmp
jno
iret
pop
dec
mov
xor
or
xorl
ja
xchg
addl
mov
mov
mov
mov
jge
jae
jl
ret
repnz
in
insb
insl
ret
mov
cmp
xor
ja
cmc
pop
push
fcoms
mov
fsubrl
sar
add
add
push
pushf
mov
xchg
std
cli
add
fisttps
lret
xor
into
out
rcr
add
fcmovnb
fxtract
dec
xchg
sub
sbb
mov
in
sarl
pop
and
jbe
idivb
or
mov
loop
sbb
scas
and
int3
insb
loop
push
pusha
xchg
or
xlat
push
dec
aad
xchg
inc
arpl
mov
movsb
leave
movsl
popf
add
inc
dec
add
ja
ficoms
xor
in
cmp
aaa
lods
sub
leave
pusha
or
jns
rolb
sti
add
jge
fwait
lds
mov
xchg
mov
movsl
inc
mov
fistpll
ja
pop
mov
call
push
lret
jnp
xlat
repz
icebp
and
cmp
pop
decl
imul
ficomps
stos
or
shl
push
cli
ret
pop
sbb
dec
jo
icebp
xlat
es
inc
aaa
push
pop
jne
pop
cmc
and
pop
dec
stos
jmp
jp
lea
jno
iret
daa
addr16
add
lcall
cmc
insl
mov
stos
sti
cmp
nop
mov
push
out
push
cmc
jnp
mov
repz
jnp
lcall
bound
je
cltd
test
xor
jae
xchg
or
cs
mov
mov
dec
mov
shlb
jne
ror
jae
cmp
xchg
adc
in
sbb
or
int3
test
xor
js
es
jno
lods
scas
inc
insb
lea
in
test
arpl
cmp
loop
sub
xchg
jbe
shrb
scas
sbb
push
outsl
inc
int3
inc
leave
inc
adc
and
mov
mov
jmp
adc
jge
cmc
scas
push
cmp
push
fdivl
ss
ljmp
inc
adc
jae
aas
and
into
or
fsts
fisttpl
cmp
inc
xor
flds
xor
loop
mov
pop
into
fcompl
and
sbb
sub
js
scas
cli
jbe
xchg
lods
in
repz
cltd
inc
xlat
mov
js
inc
jge
and
cmpsl
add
cmpsl
inc
sahf
popa
push
mov
pop
cmp
pop
adc
adc
cwtl
movsl
hlt
and
mov
in
jmp
and
sub
sub
subb
add
mov
mov
scas
ja
jno
shll
cmp
setne
insl
ror
shrb
sbb
jp
gs
lcall
jo
inc
mov
repz
rorl
xor
cmp
fwait
and
adc
rcrl
push
cltd
mov
or
pop
xlat
mov
jnp
out
lock
addr16
push
adc
in
pop
cmpsb
repnz
add
jmp
mov
repnz
or
sahf
lret
pop
inc
dec
out
rcl
or
fstpl
leave
rcr
or
mov
mov
cld
cltd
xchg
es
push
and
dec
jmp
aam
xor
inc
rorb
pop
sbb
sbb
sbb
maxps
dec
outsl
mov
xorb
outsl
cmp
ficomps
sbb
pop
nop
in
xor
mov
push
or
in
inc
sahf
stc
mov
cmp
lahf
pop
lock
cmp
pop
rorb
push
sub
jns
lret
aad
loope
xor
add
and
cs
and
dec
fdivs
jl
decl
xor
sahf
imul
add
std
adc
mov
pop
inc
popa
aad
xchg
and
repnz
dec
dec
icebp
inc
clc
sbb
xor
xor
nop
inc
int3
rcr
push
mull
nop
sbb
and
or
mov
aam
sbb
jbe
mov
jns
mov
push
xchg
shlb
cmp
shl
xchg
pop
pop
aam
call
into
mov
js
je
into
mov
popf
xchg
sti
out
adc
into
lret
push
inc
popf
iret
jno
adc
pop
addr16
sub
inc
ret
cld
icebp
inc
inc
mov
fcmovne
push
adc
dec
popf
sub
lcall
js
pop
jmp
mov
and
int
mov
pop
xchg
imull
adc
lods
or
mov
fcmovnu
jae
cli
xor
pop
ljmp
hlt
mov
inc
ret
outsb
insl
xor
dec
sub
aad
inc
pop
aam
jecxz
xchg
std
pop
inc
mov
popf
movsb
mov
xchg
pop
add
lret
mov
or
xchg
aaa
dec
scas
bound
sub
scas
jge
inc
dec
sub
ret
cmp
insb
xor
sbb
lcall
out
mov
daa
lret
test
adcl
mov
adc
pushf
pusha
in
xor
inc
sub
mov
or
cmp
ror
out
daa
sub
cli
xor
dec
int
test
nop
outsl
sbb
pop
inc
pop
dec
xor
xchg
xor
imul
dec
adcb
mov
insb
stos
movsb
movsb
jb
cmp
mov
add
dec
test
sbb
mov
adc
mov
dec
cmpsl
xor
lahf
xor
lcall
inc
adc
push
xchg
xchg
mov
js
imul
dec
out
pop
inc
sbb
adc
mov
add
and
notl
sbb
sub
test
dec
std
pop
add
xchg
mov
sbb
push
fistps
leave
repz
push
mov
inc
mov
aam
insb
mul
add
inc
push
outsl
mov
or
lcall
inc
cmp
stos
jo
lds
and
imul
fwait
sub
jg
pop
outsb
pop
dec
cmp
icebp
sbb
pop
insb
inc
pushl
lret
jle
stos
or
idiv
or
les
testb
imul
or
jns
rorl
aad
aad
fldcw
or
vmovhpd
jae
jle
dec
sbb
icebp
fiadds
adc
xlat
das
ljmp
sub
pushf
negb
push
insb
loop
xchg
mov
pop
adc
pop
pop
jle
jo
pop
or
add
cltd
xchg
sub
xchg
xor
mov
pop
pop
sub
test
push
fbld
mov
xor
ret
shr
pop
xchg
push
xchg
mov
mov
mov
test
sub
jns
popa
push
push
pop
das
les
push
mov
or
shr
add
push
loope
pop
test
fcmovnb
pop
popf
icebp
or
imul
or
fstps
or
sti
lcall
add
iret
jecxz
mov
pop
adc
clc
outsb
dec
call
addr16
mov
out
jge
sbb
ss
sbb
sbb
add
rolb
xor
push
lods
lret
int
jno
pop
add
repz
xchg
adc
sbb
cmpsb
dec
pop
fbld
mov
pop
outsb
loop
push
jo
mov
cs
fadd
ss
push
jno
test
das
mov
xchg
div
scas
jle
and
push
jb
cmpb
call
dec
xor
mov
in
or
cld
mov
jg
jmp
xchg
cmp
or
test
int
sbb
inc
pusha
aas
in
ss
loopne
stos
inc
fistpl
xor
mov
out
and
push
scas
repz
mov
lock
js
std
jb
stos
adc
add
inc
fstpt
jmp
cli
aas
or
ficompl
lods
add
xchg
imul
lret
push
ljmp
popf
jbe
aad
movsb
outsb
popf
frstor
dec
lods
gs
and
push
mov
mov
and
and
push
pushf
mov
arpl
mov
adcb
jae
jg
or
xchg
movb
sbb
rcll
aas
rcr
lea
push
jb
push
iret
pop
mov
adc
je
decl
pop
sbb
pop
jmp
add
dec
cmp
int
pop
cmc
inc
mov
fidivrs
or
or
mov
les
es
ljmp
enter
mov
cmp
xor
dec
outsb
pop
add
fs
jecxz
rol
sub
push
jge
dec
push
arpl
pop
jae
sahf
in
mulb
aam
and
cwtl
cmpsb
dec
outsb
adc
ret
or
jmp
and
lret
pop
mov
mov
not
cwtl
iret
inc
rclb
enter
sbb
sub
pop
jnp
loope
pop
lods
mul
aas
cli
leave
jge
xlat
dec
mov
or
lret
dec
pop
std
ja
cmpsl
popf
std
cmp
sbbl
jge
jg
mov
push
cmp
jecxz
mov
mov
adc
das
mov
ret
add
lods
fmull
bound
xchg
jne
cmpsb
xchg
pop
dec
inc
lret
ret
or
pop
cmpsb
or
addr16
insb
in
push
mov
aas
lds
pop
pop
subl
dec
cmp
int3
mov
in
add
xor
lret
and
xor
stos
addr16
flds
out
sbb
pop
adc
pop
adc
adc
pop
jne
movsb
push
lahf
bound
aad
mov
jmp
int
repz
ret
lahf
out
call
xchg
cltd
push
mov
add
clc
icebp
cli
imul
outsl
fistps
idivl
lds
xchg
mov
pop
out
dec
ljmp
inc
pop
scas
fs
sbb
insb
adc
or
out
pop
les
lods
push
add
inc
inc
orl
js
divb
xor
cld
rcll
test
les
jge
mov
subb
cmpsb
iret
dec
sub
xchg
sbb
jg
jle
fst
shlb
aaa
ja
cmpb
pusha
out
int
add
mov
in
xchg
test
loop
dec
inc
dec
cmp
sub
push
orl
cmp
pop
or
sahf
dec
cld
mov
outsl
inc
dec
cmpsb
dec
mov
mov
sbb
add
cmpl
push
pusha
aam
aam
xchg
add
mov
ljmp
mov
dec
mov
or
cmp
cmpb
inc
loop
mov
push
test
fcomip
or
pop
sub
nop
cli
negl
pop
or
mov
and
fwait
sti
inc
lcall
pop
sbb
popf
ljmp
add
sbb
mov
aaa
mov
mov
cmpsl
lahf
mov
stos
test
push
cmp
or
xchg
or
scas
mov
test
xor
test
mov
pop
call
pop
push
clc
cld
dec
loopne
jbe
loope
adc
in
jns
xchg
mov
mov
outsl
arpl
shrb
push
jp
leave
out
xor
shll
jge
imul
inc
test
mov
mov
scas
aam
xchg
or
jmp
add
push
pushf
dec
xchg
idivb
dec
push
cld
push
popa
xchg
movsb
test
aaa
push
adc
xchg
leave
lret
sub
iret
lahf
dec
sbb
inc
test
inc
je
loopne
into
cltd
cld
cwtl
fwait
inc
mov
in
cli
adc
jbe,pn
dec
icebp
roll
movsl
push
ja
dec
lahf
mov
inc
repz
call
gs
push
pop
jle
adc
lret
add
adc
ficompl
fldl
and
sub
cmp
adc
push
gs
movsb
lock
adc
popf
mov
dec
dec
aaa
xchg
mov
dec
inc
xchg
mull
xchg
inc
push
movsb
inc
mov
comiss
and
loop
mov
jp
shlb
arpl
testb
mov
pop
mov
xor
push
push
xchg
dec
cltd
push
cmp
leave
cmp
mov
jecxz
mov
sti
daa
das
inc
push
pop
adc
inc
lret
mov
daa
pop
cmp
sbbb
inc
xor
movsb
inc
sbb
div
push
adc
test
jecxz
sbb
ret
cmp
aas
mov
mov
adc
jp
or
inc
lods
xchg
push
dec
jb
insl
loope
xor
test
fs
xor
jnp
mov
int3
leave
mov
mov
iret
popf
daa
mov
nop
es
jmp
sbb
inc
jno
mov
cmc
popa
clc
iret
sti
imulb
cmpsl
subb
sarl
xchg
push
xor
gs
fcompl
add
inc
nop
add
push
dec
cs
mov
inc
push
push
xchg
adc
pop
add
mov
mov
push
or
push
pop
pusha
outsb
push
mov
xor
rorl
loopne
push
popa
pop
in
cmc
repnz
repz
mov
test
xor
or
jb
int
cli
mov
inc
adc
lret
into
xchg
cmp
push
ror
sahf
sbb
insb
enter
cmp
mov
iret
pop
addr16
scas
mov
inc
std
xchg
or
lds
rcll
cli
mov
gs
int
and
ret
das
ljmp
addr16
inc
addl
pop
ja
sub
fsubrs
dec
cs
cli
cmp
add
gs
imul
mov
sti
jns
push
add
dec
mov
add
push
in
jb
imul
cmpb
das
xchg
sub
mov
out
mov
jno
adc
inc
bswap
repnz
stos
add
cwtl
adc
ljmp
pop
in
and
je
jns
daa
adc
mov
rolb
xchg
jb
dec
sti
pop
xchg
fnsave
inc
xlat
iret
pop
iret
sbb
lds
mov
or
cltd
daa
jns
inc
andl
add
mov
stos
scas
cmp
clc
xchg
jge
inc
fsubr
mov
cltd
jnp
sti
xchg
dec
into
repnz
testl
pop
adc
mov
jb
in
popf
adc
int
gs
and
lea
mov
xor
mov
jp
mov
mov
cmc
cld
or
fiadds
lret
add
pop
sarl
cmc
cmp
push
xchg
insb
pushf
inc
cs
mov
jge
jl
cmp
jge
or
add
aaa
xor
push
inc
mov
sub
mov
in
test
lahf
adc
cmpsb
ds
call
int3
inc
mov
pop
mov
test
test
jmp
mov
cli
sbb
cmpsl
cmp
sbb
xchg
adc
lret
push
and
jno
sbb
adc
mov
push
dec
sbb
insl
repnz
insl
mov
adcb
mov
jno
sub
fdivrp
sbb
icebp
in
ficoms
lock
push
jo
jl,pn
push
std
or
sub
scas
and
stos
popf
andl
xchg
inc
pop
ss
xchg
mov
sub
push
test
xchg
leave
and
addr16
in
push
test
jmp
insl
mov
js
push
lret
xchg
sbb
mov
and
mov
push
arpl
sub
cli
ret
inc
or
pop
mov
shrl
ret
mov
stos
pop
aad
cmc
pop
iret
mov
mov
xchg
js
pop
insb
shl
call
cmp
mov
cmp
fistpll
stos
popa
cs
loope
xlat
pop
js
int
nop
mov
mov
cmp
dec
inc
sar
push
sub
or
cmp
dec
inc
aam
add
or
xchg
xchg
in
in
out
jne
xchg
js
mov
jb
cmpsl
repnz
scas
mov
scas
cmp
inc
and
aas
jl
dec
or
in
sub
cli
xor
and
pop
xlat
andb
push
jns
icebp
adc
cmpsl
cmpsl
fsubp
insl
dec
add
imul
repz
add
jne
nop
sub
arpl
je
pop
cmp
cmp
jbe
pusha
in
fwait
xchg
in
clc
pusha
fwait
cmp
gs
sbb
pop
mov
jmp
mov
les
imulb
stc
lock
imul
rclb
cli
pop
pop
dec
push
sub
xchg
aad
pusha
mov
loop
inc
mov
push
and
shlb
adc
and
push
decl
cmp
test
xchg
ja
sarb
or
in
xor
xchg
ret
subb
xchg
or
push
dec
xor
mov
lds
mov
xchg
mov
scas
dec
loop
dec
les
push
cmp
xchg
pop
sub
mov
or
js
push
and
push
incl
test
ret
and
xchg
int3
insb
push
out
mov
subl
adc
jne
or
out
jbe
inc
xchg
data16
inc
or
sub
and
fwait
loopne,pt
je
ret
inc
rcrl
fistpll
or
test
mov
pop
jbe
adc
jl
pop
mov
adc
stc
sbb
les
je
aam
in
jns
add
hlt
fs
in
fdivrl
inc
cwtl
jnp
insb
push
xchg
shrb
test
or
outsb
fnstcw
mov
fs
jbe
pop
adc
lock
outsl
aam
vmovlpd
icebp
test
adc
push
push
outsl
and
das
mov
push
lahf
xor
jecxz
push
push
cmp
add
cld
icebp
popa
out
jo
mov
inc
xchg
in
insb
in
lods
sub
icebp
sub
pushf
xor
test
cwtl
lea
fisttps
leave
out
sarb
lret
or
pop
push
mov
sbb
outsb
out
mov
aam
out
dec
cmp
cmp
jmp
jnp
xor
adc
jo
inc
pop
jl
and
xchg
jno
cld
pop
jmp
mov
pop
inc
lret
dec
fistl
xor
fisttpll
mov
sahf
repz
les
push
es
insb
inc
jbe
adc
cmpsb
into
mov
dec
sbb
repz
mov
mov
incb
add
xor
outsl
adc
icebp
enter
aaa
jbe
inc
das
cs
in
daa
dec
scas
push
and
mov
push
pop
xchg
adc
sub
enter
cwtl
sarb
bound
enter
sub
lret
cmp
mov
xchg
mov
stc
mov
imul
pop
xor
movsl
inc
out
push
repnz
cmp
xchg
or
adc
cwtl
xor
cs
lds
lods
lds
daa
add
cwtl
icebp
lea
sti
sub
cmpsl
cmpsl
popa
subl
scas
push
jno
or
adc
fsubrl
pop
shlb
int3
or
and
sub
push
bound
in
insl
xchg
mov
fsubrl
jb
sbb
sti
rol
dec
sahf
divb
mov
xchg
xor
push
and
jp
mov
pop
pop
test
dec
mov
mov
cmp
push
iret
idivl
xchg
iret
iret
or
rclw
stos
aam
or
mov
and
popf
fwait
ret
mov
sbb
dec
fsubs
orb
enter
sub
jne
add
mov
out
lods
stc
or
mov
push
addr16
pop
mov
push
fistpl
pop
xchg
sbb
clc
or
pop
or
mov
sub
mov
inc
scas
xchg
into
shlb
data16
add
sbb
shll
clc
psrlq
outsb
jl
or
cmp
dec
dec
and
jge
jne
lahf
pushf
lcall
fdiv
push
aad
nop
int
repnz
mov
sbb
add
push
out
jg
cltd
mov
dec
adc
loope
rolb
pop
jbe
testl
psubq
clc
add
fadds
add
inc
mov
cmp
mov
sahf
jns
jge
jbe
shr
les
cmp
sub
dec
sti
xchg
dec
pop
inc
ja
pushf
push
cmp
jns
sbb
mov
or
xchg
nop
jp
loopne
jb
xchg
out
loop
shll
stc
ljmp
and
mov
push
mull
hlt
sti
inc
dec
addr16
sub
push
rolb
les
lcall
fs
dec
mov
into
push
xor
add
inc
icebp
jle
mov
jp
subb
lock
push
jmp
mov
add
or
cld
mov
repz
or
cmp
push
das
dec
xchg
subl
mov
sub
pop
inc
xchg
or
xorb
out
push
pushf
punpckhwd
lds
orl
dec
xchg
mov
rcrb
push
mov
jns
cmp
int
lcall
or
sbb
cmpsb
imul
movsl
push
push
sub
fdivrp
mov
jae
arpl
push
push
lahf
lcall
out
sub
jb
push
cmp
andnps
fidivl
cmp
insl
test
xchg
scas
bnd
fyl2x
lods
arpl
xchg
orb
setb
add
sub
loop
stos
sbb
inc
pop
inc
lods
xor
sbb
lea
add
xor
sbb
sbb
stos
push
push
mov
aam
jl
push
iretw
adc
mov
sbb
inc
inc
xchg
jl
cmp
mov
mov
in
sbb
je
xchg
sbb
cmc
and
int
stos
pusha
lcall
ret
and
jbe
push
leave
ret
cwtl
lcall
call
stos
cmp
bound
or
push
std
adc
repz
inc
inc
sbb
ljmp
addr16
repz
sub
scas
pop
pop
paddsb
xor
push
cld
mov
pusha
jmp
mov
pushf
fwait
and
in
test
push
orl
cmc
add
iret
mov
and
shrl
inc
fistps
shlb
ja
jns
adc
sub
repz
cld
push
pop
sub
push
inc
cmp
or
sbb
pop
jmp
xchg
mov
sbb
or
sbb
add
jae
aam
sbb
leave
lock
gs
into
movsl
loope
aaa
mov
test
leave
jbe
int3
push
jp
test
ds
jne
shl
ljmp
test
stos
mov
scas
fistpll
cwtl
jno
test
push
dec
lods
insb
push
stos
jle
mov
iret
cmpsl
fidivrs
dec
daa
shlb
in
mov
and
ja
rorb
fiaddl
mov
je
cmp
and
mov
fldcw
or
loop
fisttpll
jne
and
pop
xchg
or
jge
repnz
loope
jg
pop
mov
dec
and
xchg
and
sub
int3
pop
in
lea
lret
lahf
xor
out
or
xor
and
xchg
int
xor
mov
mov
sbb
push
jbe
arpl
iret
pop
mov
lret
dec
xchg
dec
test
lods
jl
in
pop
or
push
mov
adc
jmp
ficoml
inc
out
push
mov
ljmp
aas
xchg
dec
scas
sbb
es
mov
je
and
cmp
cmp
or
fs
data16
jne
arpl
mov
out
shll
pop
mov
jne
test
sbb
fdivl
jns
add
lcall
dec
leave
mov
xchg
in
pop
pop
xchg
int
xchg
stos
lea
lods
xchg
cmp
fldcw
cmpsl
and
loope
jbe
push
sub
mov
mov
adc
pusha
outsb
dec
or
int
out
call
mov
popa
sahf
dec
and
add
adc
out
cmp
fisttps
adc
jecxz
inc
in
aam
xor
lds
fnsave
mov
jnp
mov
shlb
cmp
inc
push
lcall
xor
dec
outsb
mov
mov
sub
rcl
test
jo
repnz
sbb
out
pop
and
xor
and
sbb
mov
flds
pop
sub
xchg
xchg
aas
out
subb
out
cs
inc
xchg
mov
loop,pn
xchg
pop
mov
sbb
popa
or
xor
outsl
pop
mov
imul
xor
aas
xor
mov
scas
or
aaa
xor
dec
push
dec
or
xchg
push
ds
add
add
je
push
std
mov
test
jecxz
repnz
test
add
dec
ret
nop
rolb
sbb
mov
xor
aas
out
push
or
add
inc
add
push
int
bound
xorb
fwait
push
jnp
jno
cwtl
xlat
sahf
adc
jl
mov
jp
fdivs
mov
adc
sub
xor
nop
mov
rorl
sub
jo
jb
add
and
fistl
sbb
sarb
or
sbb
shlb
and
or
shll
test
inc
lea
cmp
push
push
scas
mov
std
loopne
mov
stc
xchg
mov
add
loopne
push
push
lods
or
cmp
je
xchg
cli
cmp
repz
add
cmp
push
test
clc
xor
adc
push
cwtl
out
cld
jno
scas
xchg
pusha
mov
mov
ja
pusha
jo
adc
repnz
test
xor
and
push
loopne
cmpsl
mov
jo
test
dec
daa
aad
pushf
sbb
mov
push
jmp
fs
dec
test
clc
pop
int
gs
popf
sub
jnp
push
stc
pop
jmp
cs
add
repnz
imul
xchg
xorb
lds
iret
xor
les
subb
sbb
xor
jno
das
cmp
push
push
or
ret
roll
aam
or
shrl
cmp
push
loope
insb
scas
mov
roll
xchg
push
mov
add
cmc
push
adc
cs
lahf
dec
loope
rolb
lcall
shll
pop
outsl
shrl
push
jb
sahf
push
mov
leave
ja
push
adc
add
push
sub
jecxz
movsl
xchg
xchg
or
mov
inc
adc
and
mov
sbb
xor
fistl
ss
xor
pop
sbb
loope
scas
out
jb
mov
mov
leave
fsubr
pop
out
sbb
dec
call
mov
mov
pusha
movsl
enter
shll
mov
xor
outsb
ficoms
lock
cmpsl
dec
mov
ret
dec
jg
push
lock
sahf
cmp
dec
psraw
ljmp
negl
mov
xorl
cwtl
pop
add
mov
or
push
dec
sbb
add
mov
jns
jmp
push
ss
imul
xchg
mov
lahf
fwait
xchg
inc
lret
sarl
pop
rcr
sahf
scas
cld
fs
outsl
movsb
mov
push
adc
je
divl
fsubl
push
fs
pop
pop
jecxz
leave
scas
pop
mov
imul
xor
inc
loop
in
movsb
cmpb
daa
popa
fiadds
mov
mov
lret
cmpsl
xor
push
lret
test
inc
fsubl
xchg
fbstp
or
stc
or
sub
sub
sahf
push
out
daa
cmp
push
jecxz
and
xor
xlat
jno
das
sub
jno
fisubl
push
push
sub
jae
adc
das
mov
dec
adc
movl
inc
lcall
push
sub
in
cmp
aad
fidivl
push
push
cwtl
test
loope
pop
js
ljmp
insl
cld
insb
cs
lahf
daa
mov
cli
pop
sahf
outsb
add
pushf
or
out
mov
popf
xchg
xor
sbb
hlt
out
shrl
and
mov
mulb
lods
jae
ficompl
ret
aaa
je
fdivrp
mov
cmp
int3
mov
dec
inc
xor
fsubs
push
dec
or
and
out
adc
jge
inc
aas
out
rorb
push
and
int
cmp
adc
daa
iret
mov
dec
addl
xchg
aad
adc
shrb
mov
lock
movsl
mov
ja
cmc
out
xor
or
scas
push
das
nop
and
mov
pusha
jmp
mov
cmpsl
lret
popa
xor
gs
inc
adc
sub
jle
shrl
ffree
aas
mov
add
sbb
adc
add
movsl
push
inc
xor
dec
leave
aad
fsqrt
rolb
ss
xor
xor
xchg
rcrb
mov
rol
loope
mov
clc
add
dec
dec
and
mov
inc
push
push
scas
aas
mov
aam
mov
push
fsubrs
out
inc
cwtl
jnp
jmp
or
cmp
cmp
and
and
stos
jnp
sub
addps
pop
dec
cltd
popa
dec
cmp
mov
lret
sub
nop
iret
or
ljmp
mov
sub
in
aaa
sub
jmp
jae
pop
aad
cmc
cmp
rol
and
xchg
inc
sbb
lahf
push
push
adc
testb
repnz
cmpxchg
subb
mov
inc
xchg
or
fs
fwait
lcall
jne
insb
xchg
lahf
pop
rclb
push
lea
pop
test
out
xorl
movsl
sub
mov
xor
inc
shl
imul
xor
mov
pusha
rcll
jecxz
data16
not
mov
mov
xor
add
subb
ret
mov
and
test
dec
addr16
xor
dec
test
push
fprem
xor
mov
push
mov
and
nop
insb
xor
jg
call
mov
dec
pop
sub
jbe
popa
mov
jmp
nop
scas
movsb
test
loope
rcl
sahf
xor
add
int
fwait
cld
inc
xchg
mov
dec
test
jae
add
daa
cmpsl
dec
repnz
sub
bound
or
add
mov
push
pop
out
cltd
sti
roll
jp
sarl
add
dec
cmp
std
mov
jg
shll
xorb
clc
inc
add
in
daa
stc
sti
loope
popf
push
jae,pn
fbstp
add
xchg
cmp
add
xchg
aam
test
aaa
call
pushw
mov
pop
stos
fildll
divb
add
cwtl
xor
lcall
jge
addl
scas
stos
aad
sub
inc
test
out
mov
dec
mov
mov
and
outsl
push
jg
and
adc
repz
hlt
repz
jb
jne
sbb
pusha
or
js
es
daa
fnstenv
adc
xor
dec
popf
lahf
sbb
icebp
movsl
sbb
jp
es
scas
into
je
mov
stos
or
shl
push
jnp
and
mov
orl
push
popf
and
sub
ret
in
mov
ljmp
imul
xor
pusha
sub
es
andl
cmp
scas
movsl
into
mov
xor
push
inc
jbe
xchg
arpl
cwtl
mov
lcall
dec
je
xchg
iret
test
push
test
mov
pop
pop
call
jg
lahf
xchg
and
movsb
jg
mov
iret
or
enter
xchg
xor
scas
fucomp
jle
sti
jae
jmp
push
cmp
xchg
in
outsl
std
xor
loop
lods
inc
pop
and
rcrb
or
imul
jge
imul
mov
mov
sbb
add
xchg
sbb
jg
movsb
lahf
jmp
lahf
push
push
testl
fs
sub
out
rcrl
mov
aas
jge
pop
shll
xchg
or
leave
xchg
dec
roll
fstpl
shlb
xor
inc
loopne
pop
push
out
jne
inc
dec
stos
lahf
pop
jl
lds
nop
inc
aaa
lcall
daa
popf
mov
outsl
jne
sub
das
imul
push
outsl
cmp
clc
dec
jo
shrl
sbb
lock
js
mov
mov
cmp
mov
inc
outsb
cli
mov
mov
nop
xchg
sbbb
mov
mov
push
jae
arpl
sbb
jb
mov
mov
sbb
fcmovne
outsl
fsubrs
ret
mov
divb
mov
or
sbb
add
mov
addr16
mov
out
xchg
stos
dec
or
push
arpl
divl
loopne
fs
in
xchg
dec
ja
test
pop
movsb
loop
pop
cmp
js
aaa
dec
jmp
xorb
cmpsl
adc
lret
arpl
pop
dec
mov
sbb
cmp
inc
mov
insb
pop
pushf
pop
idivl
repnz
mov
stc
and
mov
add
jg
daa
out
push
push
mov
ljmp
inc
bound
xchg
jne
mov
mov
mov
jae
dec
and
popf
pop
push
push
cwtl
jno
out
aaa
divb
scas
fs
or
adc
adc
aam
mov
pop
gs
dec
lea
inc
bound
in
sub
xor
dec
jmp
in
inc
pop
iret
or
mov
inc
cmc
dec
test
stc
mov
je
adc
sbb
rolb
scas
jg
das
sar
andb
xor
adc
cltd
or
cmpsl
or
nop
jae
in
mov
addb
jle
jp
std
jl
cmc
mov
movsb
xchg
or
push
fcmovnbe
aam
out
test
push
jp
ret
push
jns
cmpsb
fdivs
mov
inc
add
ljmp
adc
xor
ret
pop
pop
xchg
lods
dec
lods
in
daa
adc
bound
clc
int3
es
sbbb
loope
adc
ljmp
push
lock
push
cmp
push
fs
xor
pop
nop
push
xchg
xor
int3
jnp
shr
std
pop
cwtl
fs
mov
mov
orl
addr16
test
fidivl
xlat
ror
enter
jae
jl
mov
arpl
jo
push
sub
xchg
ja
mov
arpl
sti
push
aaa
or
jp
decl
data16
data16
push
mov
dec
pop
dec
aas
mov
sub
lds
add
xchg
push
jg
popf
push
fcomp
ja
push
int
xor
dec
xchg
mov
test
icebp
fstl
out
arpl
pop
je
push
mov
pcmpeqw
pusha
hlt
mov
jnp
notb
sub
push
scas
or
mov
cmp
aas
aaa
sbb
or
jge
pop
or
das
jb
mov
outsl
mov
lahf
in
lock
push
jo
or
ds
into
sbb
mov
test
adc
iret
and
sbb
sbb
ss
mov
sub
fs
push
sbb
mov
and
aaa
cmpsb
xchg
jmp
or
inc
in
jo
jp
xchg
push
dec
addl
adc
push
outsl
mov
hlt
mov
test
mov
push
dec
mov
dec
jno
jg
xlat
xchg
xchg
in
pop
inc
lret
ljmp
popf
lahf
inc
andb
stc
cmp
lret
sub
dec
or
decb
sub
jo
push
ret
lahf
jmp
pop
bound
mov
rorl
gs
mov
loop
sub
or
jo
mov
ds
hlt
das
mov
aam
mov
push
and
xlat
cld
cmc
mov
ror
pop
psubusw
inc
aaa
lods
test
stos
xchg
mov
lea
jo
test
bound
repnz
add
inc
in
mov
push
cs
fildl
xorb
scas
in
xor
add
xor
xchg
les
or
cmc
std
or
jp
jecxz
adc
ret
daa
sub
jns
mov
call
lcall
les
sbb
or
mov
or
jo
push
shl
out
push
mov
fistpl
pop
fmulp
sbb
imul
cld
mov
outsb
dec
lock
push
sbb
sub
sbb
mov
push
enter
cmp
mov
mov
push
arpl
adc
int
jbe
lods
out
sbb
adc
pop
adc
jge
movsl
mov
push
mov
ja
nop
lahf
adcl
stos
daa
idivb
incb
add
dec
push
out
in
daa
mov
xchg
clc
pop
repz
daa
or
aam
hlt
mov
cmp
xchg
adc
out
lock
adc
loopne
dec
in
insl
cli
popl
pop
cmp
sbb
fdivrs
lahf
loopne
in
cmp
adcl
sub
out
and
push
inc
inc
rcrl
inc
adc
dec
xchg
outsb
cmp
in
test
jmp
xchg
pop
aaa
jecxz
push
je,pn
cmp
push
cwtl
or
and
inc
mov
scas
out
mov
dec
in
pop
inc
jns
dec
mov
jne
je
push
popf
xchg
test
jne
stc
xor
mov
int3
fwait
mov
xchg
cmpsl
xlat
mov
leave
scas
push
push
sbb
xchg
aas
dec
fninit
inc
and
xchg
mov
fbld
mov
popa
aaa
cmp
ret
nop
in
mov
fimuls
bound
imul
out
or
call
cmp
xlat
out
xchg
xchg
and
int3
test
inc
rcrb
arpl
popa
inc
cmp
dec
hlt
jl
xor
test
enter
and
mov
dec
inc
aaa
dec
stc
mov
fimull
sub
jnp
xor
aaa
shll
stos
add
aas
pushf
int3
roll
mov
or
ljmp
add
jb
push
addb
cmp
dec
xchg
or
dec
jl
fdivp
mov
js
popa
push
xchg
lcall
mov
mov
outsl
rolb
lods
out
outsl
inc
test
dec
cmp
xchg
pop
pushf
pop
dec
test
insb
adc
lea
roll
mov
dec
lahf
ret
mov
in
loope
dec
repnz
push
cwtl
lret
xor
mov
test
push
rcrl
imul
stc
xor
mov
loope
std
fcmovnbe
or
pop
insb
loop
sub
mov
sub
adc
xlat
adc
cmpsl
setns
add
nop
xor
iret
lods
fidivrs
mov
lea
mov
cmpsl
sub
fnstsw
rolb
push
xlat
into
lea
js
pop
push
mov
and
aaa
adc
dec
xor
es
fstpt
adc
js,pt
mov
or
inc
int
stc
gs
jo
sub
pop
test
xor
fcomi
adc
arpl
xlat
idiv
jne
lcall
cmp
xor
push
add
fcoml
push
cmp
pop
jno
fldt
roll
sahf
dec
or
sbb
inc
pop
aad
adc
cmp
mov
outsb
shl
adc
pop
inc
stos
or
xchg
aas
jb
mov
scas
out
popa
mov
adc
in
ja
pop
push
mov
add
scas
gs
jns
out
andl
cmpsb
push
rcrb
jmp
mov
sbb
inc
dec
sbb
jbe
movsl
jmp
lock
pop
sbb
sub
push
cmp
ss
jmp
mov
outsb
mov
mov
cmp
mov
pop
cmp
and
sbb
filds
adc
xchg
dec
xchg
fists
dec
mov
ffree
cli
out
ss
sti
mov
ds
lods
mov
and
mov
stos
iret
pop
repnz
sub
xor
jecxz
ror
adc
xchg
mov
nop
lcall
loope
cld
dec
in
xor
adc
stos
or
lret
pop
sbb
shlb
fwait
das
jno
pop
xlat
mov
out
lcall
ss
notb
xchg
lods
xchg
fadd
cwtl
arpl
sbb
cmpb
loop
push
ret
sti
pushf
jo
mov
pop
inc
sti
inc
mov
aaa
std
and
mov
cwtl
pop
faddl
dec
ret
fisubrs
int3
cmp
push
jecxz
sti
mov
sbb
int3
sti
aaa
movsl
int3
push
push
inc
imul
aad
enter
testb
and
test
cmp
subl
inc
fsts
lods
repz
mov
loope
enter
adc
adc
inc
dec
pop
popa
fwait
jg
lea
xor
inc
sub
xchg
int3
sub
jbe
ljmp
push
dec
repnz
das
popf
jae
jecxz
fsubrp
mov
add
shll
mov
addr16
hlt
and
sub
xor
cmp
xor
mov
sub
sbb
cli
push
pop
mov
pop
pop
sbb
out
sbb
shll
test
inc
ror
push
movsb
outsb
pop
sbb
dec
add
push
xor
xchg
cmpsb
jmp
mov
mov
cmp
scas
fldcw
pop
inc
inc
push
sub
jmp
inc
rorl
shl
and
mov
cmp
inc
lea
aaa
and
push
cld
sbb
enter
aaa
or
adc
xchg
jno
dec
push
mov
adc
cmp
mov
bound
pop
dec
loop
aaa
jecxz
inc
mov
lods
clc
mov
jae
movl
loop
adc
cs
xor
sbb
sub
into
jbe
mov
cmp
xchg
jmp
out
scas
pop
cs
daa
or
clc
sub
cmp
sti
jle
in
aaa
arpl
inc
sbbl
mov
js
ss
lods
stc
out
adc
dec
adc
mov
mov
out
int
aad
ret
fs
pop
aam
mov
fldl
mov
enter
call
inc
inc
cs
sahf
repz
out
mov
arpl
adc
fisttps
jae
push
sbb
rcrl
in
es
and
stos
int3
test
rcrb
inc
mov
inc
outsl
mov
outsb
outsl
test
dec
mov
jb
sbb
pop
sub
pop
inc
sub
data16
or
cmp
scas
test
dec
shlb
rcr
es
imul
lret
push
add
ss
iret
xor
repnz
mov
add
jno
pop
pop
sub
mov
push
cmpsb
and
sub
movsb
mov
lock
mov
pop
inc
mov
in
aas
flds
cmp
into
jb
sub
inc
aad
or
ret
mov
xor
pop
repnz
adc
testb
nop
enter
es
lods
mulb
addl
mov
inc
jne
adc
and
mov
and
adc
subb
push
into
iret
shll
jle
push
ret
mov
sub
xchg
lgs
out
in
mov
mov
adc
pop
inc
cmp
add
xchg
adc
scas
ficompl
mov
xor
mov
jae
repnz
mov
loope
cmpsb
pop
cli
xlat
jnp
xchg
flds
ja
imull
into
add
rol
cmp
mov
mov
pop
shr
outsb
shl
pop
loope
orl
int
and
gs
ret
add
in
aam
push
fistpll
push
push
jns
add
xchg
dec
mov
icebp
mov
or
mov
std
rclb
sub
push
inc
jno
xchg
aad
fdivl
push
popa
cs
ljmp
psubb
loopne
xor
jne
sub
cmp
in
lahf
jne
cltd
lret
mov
cmpsb
push
jno
sbb
inc
fldenv
insb
push
and
incl
ljmp
adc
cltd
aas
ss
aam
cwtl
dec
shll
xor
pop
loop
test
push
add
leave
cmpsl
push
pop
scas
nop
cmp
sub
inc
neg
add
adc
sbb
and
dec
sar
or
mov
or
rolb
pop
sub
imul
int3
pop
or
fldcw
sub
mov
repnz
push
mov
mov
dec
push
or
add
xchg
jle
ds
sub
or
push
mov
pop
in
cmpsb
xchg
call
sub
dec
roll
cld
xchg
xchg
add
dec
or
jg
popa
and
jle
fistpl
fcmovnbe
push
sbb
sub
push
cmpl
push
fidivrl
cmp
movsl
inc
outsb
in
cli
inc
xchg
inc
js
push
inc
das
nop
adc
je
out
jns
adc
push
lret
jecxz
popf
jmp
mov
mov
or
std
mov
movsl
cmp
sub
lea
loope
mov
push
mov
inc
pop
arpl
or
pusha
jnp
es
std
push
pop
pop
add
in
add
cli
inc
aas
sub
mov
dec
inc
pop
cmp
jns
sub
cmp
pushf
dec
lds
mov
mov
add
out
mov
out
aad
jmp
stos
out
sub
dec
mov
xor
sbb
sub
mov
int3
and
adc
shll
push
jecxz
push
mov
aad
mov
insb
jbe
lods
sub
mov
iret
je
sub
in
fnsave
aad
jb
xor
dec
cmpsb
ret
lcall
xchg
lods
add
negb
and
mov
int3
outsl
pop
mov
fsubs
mov
push
pusha
loop
jne
into
mov
mov
rcll
jno
mov
dec
aas
push
xor
inc
loope
insb
xchg
pop
cmp
std
lret
jl
jns
scas
pop
adc
scas
and
push
daa
arpl
inc
inc
dec
popa
pop
clc
hlt
inc
add
mov
test
outsb
sub
ret
mov
and
or
lret
outsb
inc
pop
and
imul
ret
pop
imul
rolb
and
xor
add
dec
sti
and
inc
xor
pop
jle
inc
inc
push
sbb
dec
scas
outsb
les
jecxz
pop
pop
fs
jg
xchg
mov
repz
xchg
mov
add
and
push
xchg
sbb
cmpsb
mov
aas
addb
neg
sub
xorb
loop
adc
mov
sub
adc
jge
fwait
enter
popf
ret
sbb
mov
ss
push
data16
mov
pusha
push
ror
aas
xor
xor
jmp
cmpsl
movsb
cmp
push
push
jne
cmp
xchg
or
jge
leave
mov
aaa
push
jmp
shrb
out
out
dec
test
loopne
sub
adc
test
xchg
sbb
sub
add
in
jno
push
push
add
sub
aas
dec
pop
outsl
or
int
lea
jp
ret
adc
push
mov
sub
dec
mov
test
push
add
in
out
lret
fsub
inc
nop
je
dec
popa
fidivrs
mov
addr16
and
cli
scas
push
hlt
cmp
dec
inc
push
testb
loope
sti
mov
xchg
rcrb
push
adc
add
sub
rorl
popa
pop
sbb
add
out
lret
ds
lock
into
and
aad
push
xchg
xor
js
add
push
jecxz
movsb
fbld
pop
sbb
cli
mov
jp
inc
push
jb
in
jbe
stos
std
jne
jne
pop
dec
fcmovnbe
inc
or
inc
xor
out
add
sub
into
sahf
stos
xchg
clc
stos
inc
cmc
push
sub
inc
cmpsl
or
out
sbb
leave
pop
push
push
lods
fstps
outsb
mov
dec
ja
fs
ficoml
ja
mov
sub
pop
in
sub
pop
shrb
out
cwtl
loopne
jecxz
pop
and
push
mov
test
rorl
push
push
iret
faddl
arpl
push
inc
pop
andb
popf
sbb
call
and
or
fwait
adc
int3
xor
shl
shlb
mov
and
lret
fwait
rorl
sbb
lret
and
mov
leave
adc
adc
int3
mov
imul
je
faddl
test
shl
sbb
gs
clc
fdivs
inc
ret
scas
cmp
jnp
in
add
xchg
cwtl
insb
add
loopne
or
scas
orb
sub
adc
jle
loop
int3
cmp
mov
push
addr16
fildl
push
add
lock
jb
std
and
cli
and
mov
insb
pop
adc
movsl
dec
popf
adc
addb
or
mov
mov
out
imul
sub
sbb
pop
in
mov
pop
inc
ss
xor
or
inc
xor
xchg
repnz
les
gs
dec
mov
pop
daa
adc
flds
and
mov
outsb
enter
push
aas
fnstsw
pop
movsl
pusha
sbb
into
lock
in
or
mov
out
jae
call
addl
pop
nop
jle
cmp
mov
add
int
out
test
or
sbb
xlat
popa
stc
mov
adc
mov
fistl
repz
lret
add
or
xchg
rolb
fldt
movsl
mov
pop
xor
or
adc
mov
ljmp
das
or
hlt
push
adc
out
ds
sbb
add
mov
cmp
mov
dec
fs
sbb
push
adc
xlat
loope
jmp
mov
hlt
lcall
cmp
mov
cmp
bound
fidivrs
push
into
mov
add
fimuls
ljmp
sbb
outsb
pop
xor
das
mov
cmc
lret
test
daa
jbe
imul
arpl
test
sub
sbb
jne
push
xor
data16
jbe
sbb
cmp
inc
sbb
push
test
push
sub
div
sbb
xor
push
sub
std
and
in
call
sub
movsl
adc
mov
xchg
mov
pop
pop
and
stc
mov
aad
pop
mov
lods
pop
gs
pop
cli
flds
lods
jge
pop
das
mov
pcmpgtd
xor
cmp
mov
sti
pop
xlat
cld
mov
add
add
dec
divb
pop
aad
test
adc
sub
mov
mov
adc
push
pop
mov
jmp
xchg
das
pop
fildll
testl
sbb
movsl
mov
push
pusha
xchg
adc
sbbb
icebp
int
ret
out
into
add
leave
aad
sbb
mov
mov
shll
push
fidivl
fdivs
and
push
and
aad
hlt
pop
ljmp
pusha
in
mov
cmp
shl
in
jns
std
inc
jle
mov
ss
jne
inc
xchg
pushf
mov
jo
xchg
lods
fistpl
int
popa
dec
cmpb
jnp
sub
xchg
inc
gs
push
inc
jne
lret
aaa
xor
sbb
es
outsb
adc
imulb
scas
add
lods
out
or
push
ficoms
jns
sbb
pop
mov
sti
loopne
jecxz
jne
sub
and
pop
mov
inc
xor
jae
dec
fstl
cltd
mov
mov
pusha
jle
and
add
xchg
imul
mov
pop
or
sbb
mov
add
addl
pop
adc
cltd
stos
lret
sahf
adc
std
es
xchg
and
push
pop
jmp
filds
mov
sub
loope
sahf
sbb
sub
dec
dec
adc
cmp
mov
lret
push
es
lds
jo
cmp
mov
xorl
lret
mov
ljmp
ljmp
gs
mov
sub
cld
mov
lea
into
adc
dec
stos
cmpsb
fsubrs
xlat
mov
push
loopne
fstps
xor
jge
dec
jbe
nop
out
cmpsl
xchg
cs
xor
xchg
aas
or
mov
jo
cmp
xor
xchg
icebp
mov
sub
dec
pop
mov
jge
roll
aad
fmuls
testl
out
fcomps
repnz
xchg
sub
add
and
test
lret
sbb
cmp
push
jge
iret
clc
aas
aaa
nop
dec
xor
les
jns
inc
add
mov
dec
xor
inc
std
mov
daa
lret
es
test
insb
sahf
mov
int3
lea
cli
adc
inc
data16
mov
cmp
xchg
mov
inc
out
je
cvtps2pi
xchg
lds
shlb
xchg
sbb
push
jecxz
lds
scas
dec
out
mov
sub
cmp
mov
test
into
xchg
add
mov
mov
xchg
and
fsubl
adc
xor
movsb
hlt
aam
jbe
inc
std
fists
shll
push
arpl
data16
inc
dec
xchg
mov
ljmp
dec
pop
ret
sbb
inc
mov
xchg
xchg
inc
filds
inc
and
mov
lods
dec
xchg
jecxz
jae
and
fisubs
sub
insl
pop
dec
cmp
outsl
or
sub
iret
mov
test
cmpsl
jae
inc
mov
jbe
xor
add
daa
push
repz
lds
dec
fisttpl
push
add
cmpsl
mov
sahf
movsl
xor
adc
jo
mov
jmpw
popa
lds
inc
xchg
nop
cmp
push
andb
mov
push
in
mov
pop
sub
fisttps
or
push
mul
jnp
lds
dec
movsb
xor
rol
int3
lret
xchg
jbe
movsb
add
loope
adc
ds
iret
xor
mov
insl
mov
cmp
sub
cld
test
out
and
add
scas
imul
xor
stc
pop
rorl
je
pop
or
push
pop
orb
lcall
cmp
lret
inc
pop
into
in
adc
sub
push
dec
mov
loope
jecxz
mov
add
inc
push
xor
je
movsl
push
fcompl
dec
fdivrs
addr16
loopne
mov
arpl
jns
in
adc
pop
enter
cs
jne
les
pop
mov
mov
js
inc
sbb
push
and
mov
add
jno
repz
fcmovu
dec
add
pop
inc
aam
jb
xchg
imul
stos
inc
test
and
lods
loop
shlb
add
mov
test
cmp
and
jle
clc
lods
pop
pushf
lods
mov
andb
xchg
push
mov
push
mov
nop
les
nop
xor
xchg
sbb
pusha
mov
xor
ds
scas
loopne
inc
or
faddp
stos
shlb
sub
je
aaa
std
cmpb
or
pop
rcrb
mov
fldt
rorl
push
inc
push
push
lcall
loopne
jnp
in
ret
xchg
mov
mov
mov
cmp
int3
test
ss
ror
dec
dec
cmc
mov
sbb
cmpsl
add
imul
xorb
jg
jle
movsb
loopne
jecxz
fcmovnu
ret
dec
dec
dec
push
mov
add
sub
ud1
xchg
sub
mov
xor
push
jp
push
sarb
add
daa
push
adc
imul
xor
jo
adc
aam
mov
stos
push
cmp
imul
in
lods
cmp
dec
cmp
xchg
pop
xorb
fcomps
add
push
pushf
lods
xor
jno
pop
pusha
leave
push
repnz
push
lea
scas
dec
sub
jns
push
inc
jg,pt
cmp
lahf
movsb
icebp
loope
xchg
sbb
inc
lods
aaa
out
pusha
mov
sahf
lock
add
pop
orl
pop
pop
mov
stc
movsl
jo
lret
mov
rclb
adc
and
and
inc
lcall
stos
and
mov
mov
xor
cmp
stc
jbe
loope
lock
cmpsb
enter
daa
or
imul
push
sbb
movsl
imul
imul
stos
inc
repnz
push
jmp
jnp
sub
ss
or
add
mov
xrelease
pop
push
jl
add
sbbl
lret
push
jno
cli
push
and
mov
or
jmp
aam
je
test
push
cwtl
mov
mov
sub
addl
pop
push
outsl
and
mov
gs
je
jae
out
adcb
in
or
xchg
jg
inc
repnz
mov
fcmovnu
push
xor
ret
adc
sub
pop
push
insb
adc
jne
jl
dec
cltd
or
sbbl
pop
sub
fs
mov
mov
pop
jmp
outsl
outsb
mov
xchg
jno
jnp
scas
dec
and
cmp
fadds
xchg
lods
push
mov
jno
push
add
lods
in
sahf
cmp
and
orl
fnstenv
lcall
mov
pop
and
mov
sub
iret
xor
lods
insl
mov
in
sbb
dec
and
inc
mov
mov
add
sub
lahf
lcall
sub
jnp
mov
cmpsb
call
mov
jnp
cltd
jne
das
mov
jne
push
jle
sbb
pop
xchg
jg
enter
dec
push
jp
mov
mov
orb
pusha
fst
pop
dec
pop
clc
dec
shll
mov
in
movsl
add
pop
out
pop
jl
rcrl
lret
and
fadd
mov
in
jo
pop
and
fcmovne
mov
inc
inc
xchg
pop
inc
jbe
out
or
lea
mov
test
fwait
mov
mov
fnstcw
jmp
inc
mov
mov
js
loop
outsl
ja
add
push
xor
fistpl
inc
rcl
rcl
sub
jle
adc
notl
add
pusha
dec
bound
rorl
ret
nop
adc
sub
cmp
or
or
inc
out
hlt
rorl
imul
pusha
mov
or
repnz
iret
dec
xor
mov
jae
jle
mov
cmpsb
pop
out
lods
pop
lock
in
push
cmpb
xchg
mov
xchg
push
pop
insb
or
mov
shll
adc
fisttps
subb
data16
and
cmp
ss
shlb
scas
mov
xor
int
cmp
or
out
call
mov
test
and
mov
orb
es
mov
jnp
or
fcomps
pop
xor
loop
or
adc
jmp
movsl
into
sbbl
ja
subl
orb
pop
and
push
outsl
dec
mov
sbb
imul
outsl
mov
push
jb
push
jne
ror
vmaxpd
movsl
mov
push
cmc
mov
mov
jmp
jp
pop
mov
ret
jmp
cwtl
push
stc
aaa
inc
add
push
inc
xchg
adc
repnz
popf
je
or
int3
lahf
add
mov
movsl
lods
push
mov
adcl
pushf
mov
rcrl
xchg
mov
mov
pop
dec
sahf
insb
mov
add
into
clc
into
cmp
out
nop
cmp
jne
fdivrl
roll
aas
push
test
in
jne
jno
jecxz
ljmp
aaa
sbb
les
dec
mov
jne
mov
xlat
sbb
and
repnz
fs
lret
leave
and
jb
popa
or
loope
sub
lahf
mov
into
in
mov
adc
push
adc
ret
and
cmp
ja
xor
cmpl
add
ss
or
icebp
arpl
ja
mov
jae
daa
jae
or
jno
fsubrs
cld
sub
mov
stos
mov
icebp
sbb
inc
or
add
push
pop
mov
mov
sbb
push
insl
popa
jmp
leave
in
jecxz
fnstenv
sbb
and
add
mov
test
movsl
fwait
fs
pushf
shrb
notb
dec
dec
fmul
dec
pop
sbb
stos
fimuls
xchg
adc
cmp
pop
push
cmp
push
adc
stos
adc
cwtl
mov
mov
add
inc
loope
je
push
insl
lcall
into
xchg
inc
adc
and
mov
fwait
mov
iret
cmp
aas
jge
jbe
ror
rcl
push
mov
pop
repnz
pop
test
or
loopne
jo
cwtl
cwtl
sbb
dec
pop
stos
or
adc
jne
gs
push
dec
xchg
lret
ret
jp
add
aas
mov
jg
push
dec
ret
std
jae
jge
jnp
cmp
cltd
jnp
pop
push
xlat
lds
mov
lds
notl
fisttpl
push
mov
sbbb
pop
outsl
sarl
cmc
and
imull
outsl
xor
xchg
cltd
mov
sti
xchg
aam
in
xchg
mov
and
sti
xchg
sti
mov
fstps
push
mov
es
mov
daa
xorb
movsb
sub
push
pop
pop
in
adc
pop
cmp
inc
mov
ljmp
call
push
inc
and
daa
cmp
or
enter
mov
loopw
lock
mov
aas
stc
out
mov
out
dec
push
aas
inc
inc
int3
addr16
into
mov
mov
es
mov
scas
mov
adc
and
sbb
and
inc
int3
out
add
dec
fbld
mov
cmp
push
pushf
shlb
jp
and
sub
inc
jno
and
pop
lret
push
push
pop
adc
repz
xor
mov
in
rcrl
loopne
stos
adcb
hlt
mov
xor
adcl
repnz
enter
cli
ljmp
rep
in
cmp
xrstor
mov
mov
sarb
sub
pop
cwtl
pop
ja
pop
inc
scas
adc
push
mov
xchg
movsl
adc
lcall
mov
iret
sbb
call
and
rcrl
or
push
jmp
shr
jmp
pop
mov
cmp
aas
push
mov
xor
mov
mov
movsb
jno
lcall
xorl
mov
js
ja
jnp
arpl
stos
mov
ss
pop
xlat
adc
adc
mov
adc
adc
mov
cmp
dec
dec
repz
les
and
cmp
add
sar
jb
rorb
push
push
test
in
paddusw
mov
arpl
jo
or
icebp
movb
repz
add
outsl
out
adc
icebp
mov
aam
cmp
xchg
pop
or
fstl
xchg
pop
mov
sbb
dec
push
loop
incl
mov
lea
scas
mov
orb
out
pop
mov
out
mov
push
scas
jno
push
pop
mov
shr
add
mov
add
push
or
sub
jmp
lea
xor
xchg
push
dec
sbb
je
mov
rcl
and
jmp
push
and
movsl
or
mov
jb
movb
mov
lea
mov
test
pop
popf
ret
lahf
adc
mov
lret
clc
sbb
stos
adc
mov
ficoms
jp
fiadds
nop
push
in
int3
js
popf
mov
sub
inc
divb
out
cld
add
mov
pusha
rclb
repnz
inc
dec
lahf
pop
mov
mov
outsb
rcl
out
test
lea
push
test
lcall
wbinvd
sub
or
sbb
filds
pusha
gs
and
sub
leave
cmp
ret
inc
fdivl
cltd
xor
ja
and
jns
jo
xchg
aaa
add
cld
mov
pop
mov
push
stos
push
cmp
lea
mov
sbb
mov
xor
leave
pop
or
mov
xor
jmp
int
rorl
ljmp
fidivrl
in
push
jle
pop
das
aam
mov
outsb
dec
push
adc
repz
mov
xor
jmp
fistpll
mov
push
repnz
loope
loop
movl
ds
and
rcrl
or
adc
cmpsb
push
mov
insb
mov
loopne
jo
inc
fstpl
das
lcall
push
lock
or
outsb
push
mov
adc
repz
outsb
jle
rcr
sub
pop
es
ljmp
pop
mov
lahf
lret
jmp
push
push
loopew
adc
xchg
inc
adc
cli
xorb
icebp
mov
mov
out
mov
pop
sub
xor
push
fisttpl
sbb
push
sbb
mov
scas
and
popa
pop
loopne
and
in
ret
cltd
inc
enter
inc
mov
into
mov
jmp
push
daa
jg
pop
sub
and
xor
lock
add
inc
ficomps
imul
mov
dec
and
cld
mov
fdivrs
pop
mov
xchg
fistpll
scas
jo
es
popf
faddp
inc
out
clc
xor
lods
dec
scas
mov
push
lret
and
icebp
mov
loope
jno
cmp
aad
mov
fwait
inc
add
inc
dec
xor
bound
scas
dec
fdivrs
cwtl
xchg
add
xchg
fdivrs
push
mov
lcall
test
js
mov
shrb
cmp
stos
add
cmp
jle
xchg
mov
sbb
mov
inc
cmpsl
cwtl
adc
xchg
dec
daa
mov
aas
jae
repz
jbe
roll
es
push
imul
sarl
test
lcall
mov
fadd
scas
xlat
xchg
push
pop
jecxz
ret
ret
push
sbb
jnp
aad
popl
xorl
mov
sub
cs
mull
mov
inc
jb
loope
lret
imul
cmp
movsl
lea
stos
scas
sbb
add
cs
inc
and
scas
sub
add
std
in
mull
push
dec
jecxz
push
dec
sahf
lea
int
stos
movsb
xlat
rcl
mov
sbbl
std
scas
daa
into
loopne
sbb
mov
push
mov
loopne
fwait
fs
pushf
scas
subb
gs
lods
loope
and
sarl
xlat
std
fdivr
jle
adc
std
loopne
lods
sar
cli
sub
ja
xor
push
lcall
pop
loop
in
add
fbld
dec
inc
xor
sbb
fisubl
add
mov
movsb
test
jmp
pop
shll
sbb
sbbl
jge
ss
inc
cmp
push
push
icebp
jno
cmpsb
jecxz
cmp
inc
imul
daa
test
scas
cltd
data16
sub
mov
lcall
pop
pop
cwtl
rolb
inc
fninit
sarl
push
ficompl
daa
dec
mov
movsb
pop
xchg
shrb
fisttps
jmp
stc
dec
call
push
adc
or
push
sub
push
int3
stc
jmp
mov
xchg
std
mov
push
sbb
jl
mov
orb
cmpsb
repz
fdivr
dec
mov
add
out
jecxz
aaa
insl
pop
sbb
mov
loopne
jecxz
push
mov
cmp
xchg
lds
pop
push
pop
adc
pushf
lds
daa
sub
jl
fldl
inc
pop
xor
xor
imul
mulb
and
jg
jp
in
popa
sub
mov
adc
and
push
in
pusha
mov
add
in
push
in
test
mov
push
loope
jns
xor
dec
mov
or
clc
sbb
rorb
je
or
aad
add
pop
sub
sbb
sub
bound
jns
pop
movb
sbb
cmc
jmp
dec
mov
xchg
mov
pusha
push
pop
cmp
pop
jbe
cld
call
adc
lds
mov
fwait
push
inc
push
push
cwtl
xlat
xor
outsb
xchg
sbb
pop
inc
mov
pop
fdiv
and
push
mov
push
mov
jo
cmp
inc
dec
ljmp
fldl
xor
rorb
cwtl
shlb
xor
mov
and
notb
xchg
or
xorb
mov
iret
loope
xor
repnz
sub
inc
sti
jnp
orb
mov
cli
fistps
or
shrl
enter
lods
imul
push
data16
ja
sbb
addr16
movsb
mov
cmpsl
in
push
jl
jb
andb
xor
xchg
push
sub
push
push
dec
mov
xor
hlt
data16
sub
cltd
lds
out
pop
mov
mov
mov
cmpsl
sbb
out
push
test
adc
test
mov
dec
outsl
out
adc
lock
pop
cmp
pop
fildll
sbb
or
mov
pop
jl
cmp
adc
push
ret
or
pop
ss
adc
cmp
fidivrl
jp
push
shll
dec
stc
push
aaa
mov
mov
mov
hlt
les
sbb
jle
xchg
mov
dec
in
in
dec
dec
mov
inc
fstpt
std
and
xorb
pop
mov
jmp
mov
nop
iret
xchg
inc
mov
repz
adc
sahf
pop
jb
sbb
adcb
mov
stos
dec
fdivrl
iret
pop
xchg
mov
ss
push
xchg
stos
aas
add
stc
xchg
inc
aas
xchg
push
stos
or
mov
adc
dec
stos
jno
mov
popf
frstor
ret
cmpsl
nop
sub
and
pop
lret
jb
add
pop
mov
gs
pushf
sbb
xchg
or
inc
sub
sbb
aad
mov
js
ret
fadds
shl
adc
pop
cmc
mov
and
sti
stc
jno
ret
lock
pop
es
inc
mov
lods
in
bound
mov
pop
ficoml
or
shl
mov
or
adc
jecxz
add
mov
icebp
dec
aaa
popa
out
int3
fdivl
cmc
sub
pusha
dec
movsl
pop
dec
xor
sub
inc
pop
js
inc
mov
adc
and
mov
into
dec
repnz
aad
inc
xor
sti
push
mov
jno
test
xor
divl
mov
scas
jno
or
mov
nop
sbb
jp
mov
lret
push
int3
mov
ljmp
mov
rorb
js
loop
mov
pop
in
cmp
xlat
cmp
sub
inc
aad
icebp
cmp
sub
push
jae
inc
ret
xchg
cs
pop
push
xchg
mov
and
add
out
nop
add
outsb
mov
adc
inc
push
inc
insb
dec
cs
inc
dec
mov
xchg
rorb
jnp
and
dec
inc
xchg
push
std
in
jmp
jae
je
sub
xchg
sahf
repz
mov
scas
xor
inc
test
ds
mov
xchg
push
scas
call
jne
dec
or
fcmovnbe
loopnew
xchg
adc
pop
iret
pop
mov
sahf
or
mov
push
test
lock
addr16
jns
rclb
ds
cli
bound
pop
add
sub
ds
or
sub
imul
leave
cmpsb
xchg
jne
or
adc
arpl
dec
outsb
cld
imul
mov
insl
dec
sbb
mov
mov
mov
dec
add
dec
out
out
push
and
in
ss
jbe
aas
add
xor
fisubrs
leave
es
dec
arpl
call
lock
repnz
loop
faddl
sbb
ss
mov
inc
add
orl
add
lea
cs
jns
fs
sub
lods
or
push
les
mov
imul
push
and
lea
inc
mov
pop
dec
bnd
sub
jp
pop
mov
clc
push
fdivrl
ficompl
adc
pop
push
mov
adcl
jle
push
xchg
adc
sti
jg
and
lahf
sub
or
jp
inc
enter
outsl
cwtl
popf
jmp
sbb
cmpl
outsl
mov
dec
jg,pt
push
adc
adc
loopne
xor
mov
sbb
or
add
movsb
leave
outsl
push
xor
jle
mov
mov
sarb
insl
loop
iret
popf
sarl
jns
scas
xor
xor
insl
inc
dec
ja
or
mov
mov
sti
cmp
sbb
push
int3
bound
jmp
and
pushf
adc
sub
pop
xor
xor
outsl
adc
xchg
jmp
leave
lcall
ret
or
adc
popa
pop
mov
addl
pop
push
scas
jmp
xchg
jns
out
arpl
inc
shrl
jl
dec
loopne
dec
in
into
into
xor
repnz
cwtl
pop
aas
pop
shlb
xor
aaa
scas
clc
or
adc
ret
lahf
aaa
push
ficomps
test
das
dec
pcmpgtb
enter
shrl
push
lea
rcll
pop
xchg
jge
sub
jg
xchg
pop
pop
pop
dec
pop
mov
fs
stc
add
push
cmp
push
jo
jecxz
and
mov
mov
mov
into
sub
xor
test
int
xor
sub
adc
mov
pop
xorl
mov
imul
fcmovnu
add
or
cwtl
jns
pop
dec
pop
fstl
jno
sbb
inc
in
jmp
sbb
cmpsl
addr16
popl
xchg
shlb
cmp
into
jae
cmp
inc
mov
pop
ja,pt
fsts
inc
xchg
lock
mov
add
xor
mov
aas
cmp
pop
sbb
adc
insl
xor
inc
addr16
push
hlt
fs
dec
pop
jb,pt
mov
sbb
adc
adc
jl
mov
or
mov
and
aas
int3
xlat
pop
push
scas
inc
ljmp
cmpsb
or
or
add
push
filds
mov
inc
cs
stc
dec
pop
push
jbe
xchg
or
adc
shrb
pop
std
pusha
dec
pop
cmpl
ds
inc
inc
push
jae
movsl
mov
pushf
inc
leave
sarb
fisttpll
mov
or
rorb
daa
push
cmp
dec
mov
or
push
repnz
rorb
pop
fs
inc
sarl
leave
je
xor
test
cmc
test
inc
and
insl
hlt
xchg
mov
inc
cs
xchg
jl
inc
jnp
inc
push
insb
fldt
or
fs
add
dec
clc
pop
out
jbe
das
aad
cmp
jmp
dec
fistps
adc
dec
xor
xor
add
mov
hlt
test
pop
inc
cmp
mov
and
psubusb
xor
lahf
pop
cmp
adc
cmc
shl
mov
cmpsb
sub
fsubrs
in
fwait
jmp
mov
in
xor
xchg
fwait
pusha
in
stos
scas
aad
test
xlat
mov
mov
mov
mov
hlt
push
cmp
imul
xchg
pop
jne
cmp
xchg
into
jg
insb
jbe
lea
sub
sbb
loop
dec
inc
push
pop
aas
push
pop
sub
sbbb
xchg
icebp
fdivl
push
imul
push
daa
arpl
pusha
cwtl
out
dec
sub
movsb
std
test
jno
push
inc
iret
rolb
xor
test
cwtl
jmp
xor
je
and
ret
pushf
push
and
negl
mov
movsl
rorb
arpl
push
add
xchg
fldcw
jp
jo
xchg
jle
xor
sub
mov
add
sbb
mov
mov
mov
sub
loope
ljmp
sti
aad
dec
mov
cmp
rcrl
inc
les
sahf
andl
fists
dec
inc
lahf
xor
jl
and
test
xor
in
xchg
dec
das
loope
xchg
es
cs
lcall
adcl
xchg
dec
in
stos
mov
jo
mov
lret
jae
push
pop
mov
mov
mov
and
cmpsb
adc
ret
in
dec
bound
ret
test
pop
or
idiv
mov
nop
rorb
mov
inc
jne
and
sbbb
scas
add
lcall
push
shrb
jnp
xchg
orb
mov
arpl
and
push
jmp
arpl
lock
sbb
mov
popf
mov
sbb
jb
jnp
jne
cmc
push
sbb
mov
ljmp
outsl
push
repz
nop
cmp
mov
cmp
pusha
filds
div
clc
loope
cmp
jb
jge
testl
dec
in
fisubl
std
mov
outsb
sti
push
daa
dec
cmpl
and
rcl
xchg
ds
cli
inc
test
jne
jbe
lret
iret
pop
mov
mov
push
cmp
push
lcall
dec
and
inc
jb
mov
mov
push
aam
cmp
insl
mov
repnz
imul
or
negl
shlb
mov
ret
ss
das
fs
fwait
and
sbbb
roll
leave
fwait
xor
inc
dec
push
jge
jno
pop
out
adc
pop
add
lea
je
andb
nop
out
mov
jb
aas
stos
push
jle
xchg
mov
mov
cmp
mov
aas
js
jle
and
xlat
pop
test
and
aas
xlat
int
repz
fcomps
jge
xchg
or
push
ror
mov
mov
adc
push
mov
jmp
or
test
dec
sqrtps
add
fisubrs
fdivrs
xchg
shrl
adc
xchg
scas
dec
inc
adc
stos
mov
fnop
jo
cmpl
xor
sahf
je
into
xchg
sbb
scas
push
enter
xchg
ret
jae
add
mov
ss
and
push
cltd
mov
jp
lcall
test
out
hlt
pop
inc
dec
bound
adc
sbb
add
loope
aas
ret
and
add
fmull
lods
in
adc
inc
nop
mov
mov
in
pop
jnp
dec
inc
pop
mov
or
arpl
cmp
out
or
scas
jmp
lock
nop
pop
jbe
outsb
mov
xor
into
add
mov
xor
push
dec
jle
mov
push
sub
fwait
inc
sti
add
ja
cs
mov
or
xchg
dec
inc
jge
scas
mov
cmp
jnp
xor
ret
add
aaa
jl
in
sbb
cmpsb
pop
inc
mov
dec
dec
fs
sbb
inc
pop
ds
and
jmp
iret
cmpsb
mov
jle
xor
pop
mov
sbb
ds
xlat
mov
sarl
jns
sarl
pop
push
push
in
mov
xor
mulb
cmp
cmpb
jns
repnz
bound
jnp
arpl
mov
clc
pop
inc
roll
aam
mov
adc
testb
cltd
xor
add
pop
lcall
sbbl
and
leave
std
and
push
and
pop
sahf
in
xchg
jae
and
jo
cmp
dec
and
je
rorl
repz
rcrb
cmp
xchg
add
outsl
sbb
cmp
pop
movsl
xchg
mull
lods
mov
pop
xor
in
cmpsb
ret
push
xor
xor
shrb
fs
inc
aaa
jmp
jns
cmpsb
inc
fsubrs
adc
int
test
push
mov
xchg
pop
xchg
sbb
loope
push
jg
push
add
xor
adc
dec
aam
movsl
mov
mov
mov
push
dec
jne
iret
cmp
inc
dec
push
jle
outsb
jb
cmp
mov
inc
addr16
mov
repz
je
insb
xor
sbb
sbb
xchg
push
push
test
xor
subl
pop
and
out
out
add
cmp
scas
mov
test
add
gs
xchg
lret
decb
hlt
dec
push
jne
mov
push
mov
sbb
jl
pop
cld
jno
mov
or
mov
flds
cmpsb
fiaddl
incl
jae
sti
mov
cli
add
push
inc
sub
mov
xor
lock
mov
jp
jge
push
pop
xchg
imul
out
lods
cmpsb
hlt
fsubl
shll
aad
add
mov
popa
out
lret
and
es
xchg
mov
push
ret
cld
jns
sbb
jmp
inc
xchg
stc
jl
jne
add
popa
lock
clc
movsb
inc
xchg
jmp
xor
outsl
test
shll
lahf
pop
mov
fidivrs
subl
inc
or
mov
jge
into
movsb
call
or
int
fisubs
add
jno
jge
sbb
pop
xchg
or
lcall
push
xchg
adc
inc
sahf
in
mov
insl
fs
xor
stos
pop
pand
sub
repz
pop
add
sub
push
iret
mov
xor
push
insl
jbe
adc
dec
stos
mov
gs
mov
mov
ret
cs
sub
pop
stc
mov
addr16
adc
jbe
pushf
dec
adc
mov
mov
push
mov
ljmp
add
mov
dec
xchg
inc
and
popw
mov
xchg
sub
test
idivb
jne
push
xor
dec
out
int
adc
out
fbstp
push
cmp
lret
pop
into
and
or
or
cltd
shr
sub
push
xor
dec
sub
or
cmc
mov
shll
inc
inc
int3
and
adc
dec
dec
dec
repnz
xchg
pop
sub
push
adc
jae
jns
jb
sarl
ret
dec
pop
aas
mov
add
xlat
sahf
inc
pop
or
dec
aaa
loope
or
push
or
mov
scas
cli
add
leave
xor
outsb
ffree
mov
lods
out
ret
pop
je
sub
cmp
or
inc
das
cmp
es
movsl
pop
push
push
ds
loop
pop
mov
imul
test
shrl
out
fwait
les
cltd
push
jo
or
fwait
shlb
dec
shll
cmp
in
jmp
movsl
cmpsl
nop
fwait
xlat
cmp
rorl
fnstsw
cmpsl
roll
cwtl
leave
sub
sahf
cmc
sub
adc
shlb
inc
jmp
mov
pop
push
push
out
inc
enter
fisubl
cmpsl
sbb
mov
inc
jne
jecxz
mov
adc
xor
mov
insb
popa
pop
repnz
cmp
jb
ss
cmp
xchg
subb
push
pop
push
jmp
jecxz
fwait
das
mov
incb
xchg
mov
rclb
sub
pop
cld
cmp
subl
xorl
and
imul
stc
mov
inc
popa
inc
repnz
dec
mov
faddp
fwait
hlt
popa
lea
adc
jmp
loope
add
pop
sub
or
xor
cmp
fcoms
cmp
lds
aam
inc
jecxz
add
bound
xor
movsb
add
jl
outsl
aad
or
aaa
or
adc
adcb
scas
mov
lods
xchg
scas
jle
sub
lock
repz
push
fdivp
add
pop
jp
loope
push
pop
dec
xchg
push
fidivs
jmp
stos
sub
mov
inc
int3
mov
imul
inc
or
and
pop
lea
pop
mov
pop
inc
xchg
xchg
xchg
xor
xor
aad
lds
sbb
mov
inc
mov
loope
jnp
cmp
cmp
sub
and
xor
arpl
jnp
fnstenv
mov
pop
dec
lret
jle
cmp
push
pop
xor
out
lods
cs
mov
mov
mov
adc
or
cmp
imul
mov
xlat
inc
mov
cmp
loope
inc
int
inc
sbbl
ds
cld
mov
jle
mov
loop
mov
jle
jb
add
pushf
cli
cmp
cwtl
lods
and
lods
mov
movb
js
pop
inc
int
aas
inc
mov
mov
pop
push
dec
sub
sbb
inc
daa
inc
imul
xlat
sub
jmp
xlat
mov
pop
xchg
or
into
push
xor
and
aas
iret
pushf
nop
insl
lcall
add
rclb
pusha
aad
imul
aaa
jge
std
je
jae
xchg
xor
sbb
jo
data16
mov
movsb
jb
sub
sub
testb
and
ds
negb
insb
xchg
insl
inc
xor
xor
mov
inc
iret
test
inc
outsl
jnp
and
movsb
in
insb
or
lea
adc
das
les
aaa
movsl
fwait
jae
mov
sti
aaa
out
xchg
movsb
cmp
cmp
pop
mov
sub
sub
sub
in
mov
pop
mov
add
xlat
sub
adc
xchg
mov
push
inc
bound
pop
jne
addl
push
jmp
daa
dec
arpl
outsb
pop
jno
ret
or
dec
roll
ret
lds
icebp
cmpb
lock
fstl
or
mov
xchg
and
jle
aas
xchg
int
xchg
push
push
dec
push
js
test
add
sub
xor
push
stc
mov
push
pop
xchg
arpl
pop
xor
loop
xor
dec
sub
xchg
test
or
xor
jae
mov
cmp
insb
xchg
notl
sub
repnz
xchg
xchg
sub
inc
pop
shrl
xor
mov
fldl
iret
sti
cmp
repz
sbb
sarb
xchg
outsb
cs
pop
in
pop
xchg
out
and
push
lret
je
xor
sahf
push
or
int
mov
pop
mov
rorl
in
jns
roll
rorb
sbb
mov
push
jge
cwtl
lds
stos
inc
jl
pop
insl
orl
lock
loopne
call
aad
aas
xor
inc
cwtl
mov
and
bound
dec
push
xorb
push
dec
repnz
xchg
xchg
ss
xchg
outsl
lret
xor
in
push
lret
shr
cmpsl
inc
push
sub
push
in
xchg
lret
clc
repnz
data16
imull
fcoms
icebp
or
dec
dec
int
inc
call
add
inc
nop
or
mov
arpl
jl
mov
or
rcll
loope
cs
fisubrl
inc
jmp
aaa
adc
divb
orl
mov
shl
push
jnp
movsl
mov
addr16
iret
add
sbb
movsl
and
pop
loope
and
fst
cmp
mov
sbb
dec
scas
pusha
imul
dec
inc
dec
sub
xchg
sbb
push
xchg
lea
mov
ds
jno
xor
pop
add
in
jmp
mov
xchg
push
mov
lock
out
pop
xor
sub
pop
cmpb
jbe
rcrl
pop
xor
pusha
fwait
sub
add
sbb
stos
and
jmp
mov
sti
inc
ljmp
lea
mov
cmp
roll
js
jecxz
push
cmp
mov
fxch
popa
sub
pop
stc
adc
cmc
pop
testb
xchg
pop
mov
push
mov
jp
fadds
enter
or
int
jmp
sbb
cld
out
es
adc
push
dec
jnp
aaa
xor
loopne
dec
inc
mov
cld
jns
aam
mov
imul
adc
sqrtps
ret
push
jno
and
in
es
pop
cltd
xchg
mov
pop
jno
ficoml
xchg
xchg
ds
ja
xchg
sti
push
outsb
mov
sbb
mov
out
dec
adc
cwtl
or
jb
add
adc
out
in
dec
fdivrl
mov
clc
enter
push
dec
jo
out
inc
int3
imul
xor
or
sahf
in
mov
xlat
and
clc
imul
aas
mov
test
nop
iret
push
sbb
fildll
aam
les
out
sbb
dec
fldenv
lret
jecxz
pop
lahf
or
sbb
push
mov
cmpsb
or
xchg
jge
inc
fnsave
adc
mov
adc
andl
dec
fidivrs
test
cmp
pusha
clc
rorb
out
scas
sbb
jbe
adcb
gs
inc
jmp
mov
mov
and
je
aas
cmc
mov
rol
inc
mov
jae
xor
mov
fsubrl
mov
and
xchg
push
xchg
andb
test
sub
push
fcompl
lret
sbb
pop
xor
icebp
or
lret
xor
sahf
mov
push
sub
sub
xchg
enter
dec
rorb
cmp
sub
add
fidivs
push
outsl
inc
and
divl
sub
sub
xor
dec
rclb
into
test
ljmp
inc
sti
sub
out
shl
add
mov
aaa
sub
testl
pop
add
inc
lds
fisubrs
mov
fnstcw
push
adc
xor
jnp
jno
movsl
lods
jbe
push
sub
jp
mov
and
push
or
addb
ljmp
xchg
nop
pushf
scas
mov
insl
push
ds
dec
pushf
sbb
mov
mov
loop
mov
mov
sbb
sbb
insl
jb
sbb
cmc
pop
jo
and
sub
push
dec
insb
insl
cmp
mov
jb
shrl
movsl
sbb
test
adc
sub
cmpsl
shlb
jmp
mov
cli
xlat
xor
jg
push
in
pop
jl
aam
adc
dec
lods
push
lret
push
lock
ret
jbe
dec
fiaddl
insl
cltd
sbb
aad
cmp
test
inc
xor
fsts
xor
push
mov
inc
sbb
std
adc
xor
pop
hlt
adc
mov
test
fistpll
sti
adc
sarb
add
lret
inc
std
pop
and
stos
mov
jmp
fsubrs
insl
sub
cmp
cld
mov
cmp
sbb
into
pop
mov
sti
pop
mov
push
js
out
leave
fbld
push
push
xchg
and
popa
sahf
and
lods
xlat
pop
pop
das
std
ret
pop
aad
push
ret
stos
add
add
xchg
push
ljmp
fwait
mov
arpl
jg
in
mov
cld
in
jno
scas
aad
or
mov
aad
xchg
ret
divb
sti
mov
clc
lods
pop
test
ljmp
sub
mov
add
pop
addl
lods
pop
mov
rorb
push
cld
xor
int
out
xchg
mov
inc
and
fildll
lds
lea
jmp
jge
and
push
xor
mov
or
or
inc
outsl
push
lret
jge
jns
pop
cmpsb
push
int
test
sbb
xchg
in
repz
mov
xor
mov
mov
cmpsb
sbb
mov
xor
div
loopne
dec
loope
ret
shr
mov
cmp
mov
ja
push
xchg
lret
adc
das
mov
adc
mov
arpl
and
jmp
pop
and
ret
ds
push
loopne
fstps
subb
and
loopne
adc
rcrl
dec
jae
pop
mov
cmp
fcmovbe
sub
adc
repz
pop
aad
and
xlat
aaa
je
rorl
dec
je
dec
dec
pop
mov
jno
mov
jns
xchg
imul
incb
pop
mov
lret
adc
or
cmc
push
shlb
mov
pop
pop
movsl
je
fidivrl
cmc
loopne
jecxz
sub
arpl
gs
fisubrl
call
out
push
out
mov
dec
stc
js
sbb
shrb
sbb
push
out
mov
jge
dec
aam
ret
adc
inc
mov
int3
lods
sbb
pop
adcb
andb
les
out
adc
pop
sub
popf
sbb
shll
stc
push
push
popf
mov
into
negl
bound
mov
jnp
jno
and
int
jmp
jecxz
aaa
push
sub
mov
add
adc
sahf
mov
xor
outsb
xor
mov
ret
ss
jmp
or
or
ffreep
dec
adc
ret
mov
sahf
je
or
xorl
xchg
pop
aaa
sbb
dec
pop
adcl
push
imul
pop
dec
cmp
sub
inc
jl
sub
in
stos
mov
out
pop
adc
xor
outsl
push
dec
jnp
push
xchg
inc
inc
mov
in
cmp
test
gs
xor
jp
xchg
int
aam
add
repz
rcll
and
sub
cmp
imul
rcrb
sub
push
dec
movsl
inc
xor
mov
jne
cmp
ss
mov
xchg
mov
adc
lret
daa
or
adc
ror
or
xor
mov
push
xchg
mov
or
hlt
jns
mov
das
test
jge
pop
sarb
inc
rcll
nop
mov
ss
jp
push
popf
sti
add
cwtl
pop
lds
test
pop
hlt
xchg
push
xor
cmp
and
nop
xchg
pop
loope
icebp
lret
ss
jmp
repnz
push
dec
int3
jp
pop
adc
xchg
add
pop
mov
sbb
pusha
addr16
xor
jb
ja
icebp
aam
sarl
or
sub
loope
les
das
mov
arpl
mov
xor
arpl
outsl
daa
loop
imul
xchg
push
mov
shld
leave
shrb
sbb
ds
daa
jb
or
test
push
leave
rol
xor
js
sti
jp
push
mov
sbb
popf
xchg
or
xor
pop
cmp
scas
movsb
mov
pop
mov
pop
mov
dec
add
iret
mov
in
lods
pop
jp
sbb
xor
fldt
mov
mov
test
mov
mov
push
cs
adc
cmpsl
mov
push
adc
mov
andl
pusha
pop
mov
sbb
jo
aad
jp
adc
push
ror
movsb
sub
lds
adc
movsl
and
xchg
add
push
inc
arpl
inc
dec
pop
cmp
xor
inc
nop
test
xor
jo
push
mov
sbb
test
dec
das
mov
jg
push
mov
popf
push
mov
mov
mov
pop
sub
xchg
dec
je
fisttpll
add
fmul
xor
jno
out
stos
xorl
and
or
imul
out
cld
je
mov
movsl
mov
int
ret
fidivrs
scas
cmp
loopne
les
nop
test
loop
mov
fidivl
fsubp
xchg
mov
or
test
mov
inc
fwait
outsb
add
punpckhwd
aas
ret
pop
dec
mov
jmp
fs
decl
and
in
push
out
and
fiadds
mov
push
pop
imul
inc
aaa
shll
les
cmp
data16
jl
pop
int3
int3
adc
sub
sbbb
xor
jno
lea
adc
pop
xchg
jmp
es
lahf
roll
jl
pop
gs
push
jge
cmc
inc
jns
loopne
sbb
pop
mov
lahf
addr16
dec
fstp
es
fidivs
in
std
stos
xchg
pop
push
add
or
or
pop
or
cmp
mov
cwtl
jbe
stc
xchg
dec
stos
push
stc
imul
inc
xchg
mov
popf
cmpsb
insl
mov
mov
lock
fisttpll
icebp
mov
sbbl
and
pop
repz
scas
push
clc
orl
js
mov
outsb
or
mov
inc
pop
mov
adc
mov
mov
cmpsl
pushl
fs
outsb
add
lds
jp
mov
sti
jle
xchg
mov
and
adc
jmp
or
ljmp
push
sbb
sub
jge
mov
roll
and
cltd
xlat
cmp
jbe
xchg
mov
push
cmpsl
std
jp
mov
mov
dec
xchg
test
add
in
inc
call
adc
rcl
scas
popa
jp
cmp
jne
fisubrl
stc
sub
add
jmp
std
sar
sbb
add
out
add
xchg
mov
in
mov
jnp
negl
sbb
arpl
aaa
stos
pop
int
add
test
aad
or
and
mov
xor
mov
dec
mov
mov
dec
inc
xor
lds
imul
fadds
pop
mov
push
xor
ja
push
ret
lret
pop
mov
jge
lods
jb
or
jle
ret
lock
test
jle
jge
xchg
js
jo
push
cli
fmull
mov
add
call
push
cmp
sbb
in
bound
cmp
aam
cmc
out
ret
ss
out
scas
push
inc
insl
popfw
cmp
and
xchg
call
repnz
roll
sub
test
mov
push
sbb
sbbl
mov
ljmp
cmpsl
push
in
loope
les
sbb
cmc
jecxz
pusha
xchg
push
mov
stc
sub
ficomps
sbb
inc
nop
jns
mov
xchg
mov
lea
pushf
mov
cli
dec
and
xor
mov
push
inc
push
jmp
or
dec
insb
fildl
jo
add
cmp
mov
cwtl
stos
xchg
add
jl
mov
sbb
mov
push
pop
in
test
stc
mov
add
movsb
fcmovne
cmp
pop
xor
jecxz
pop
mov
add
enter
imull
into
fiaddl
add
adc
xchg
addr16
mov
out
in
mov
mov
sar
scas
jge
mov
mov
or
loopne
pop
jb
mov
inc
pop
fimull
ficompl
and
iret
daa
pusha
sub
xchg
push
popa
fwait
shll
cltd
mov
popf
mov
testb
mov
daa
test
iret
shrl
mov
cli
imulb
jbe
lret
int
nop
cmp
pop
int
pop
pop
sbb
es
adc
inc
sub
xor
out
movsl
jnp
jns
cli
sub
notb
mov
stos
pop
mov
cmpsl
lret
hlt
insl
or
or
cwtl
lahf
push
xor
aad
jle
mov
xchg
les
pushf
rolb
mull
les
insl
shrl
les
scas
js
mov
test
cltd
pop
aam
or
sub
icebp
loope
idivl
shlb
push
sub
mov
orl
outsl
loope
sbb
mov
mov
adc
icebp
mov
mov
xchg
jmp
sahf
mov
lret
aam
xor
push
out
ja
xor
mov
loopne
scas
movsl
add
hlt
rclb
mov
mov
dec
ds
int3
scas
lret
xlat
in
stc
pop
movsb
xor
dec
jnp
idivb
dec
dec
sbb
adc
scas
fcmovbe
xor
add
mov
mov
jecxz
jl
notb
and
xlat
pop
xchg
ror
mov
fwait
subl
sub
arpl
iret
nop
out
inc
xor
push
sub
mov
idivb
mov
inc
push
xchg
sub
lea
lcall
sbb
cmpsb
ss
iret
rcrb
aaa
lret
sbb
mov
in
push
and
push
stc
adc
xchg
xor
fidivrl
pushl
or
inc
data16
adc
fists
mov
pop
sub
leave
dec
sbb
inc
adc
ds
fcmovnu
lock
jbe
mov
aaa
lods
cmp
inc
add
pop
lock
or
dec
arpl
cmc
cmpsl
popf
in
imul
lret
adc
xor
xchg
dec
sar
hlt
mov
or
pop
jle
popf
push
shl
and
pop
movsl
xchg
push
mov
daa
xchg
xor
push
push
push
or
loope
xor
inc
ret
push
arpl
mov
xchg
cwtl
ja
mov
or
enter
jns
je
outsb
cmp
push
cmp
aas
sub
bound
inc
out
sbb
divl
test
mov
lods
imul
mov
push
out
push
xor
or
jmp
inc
push
imul
xchg
pop
data16
data16
mov
mov
cmp
mov
ja
jmp
hlt
in
cmpsb
pop
sub
shll
jge
jnp
inc
jo
cli
add
iret
leave
pop
popf
mov
or
mov
mov
shrl
aam
mov
imul
repnz
fcomps
xchg
test
pop
aam
in
icebp
inc
pop
cli
mov
testb
sub
pop
out
daa
xchg
repz
cld
sti
pop
in
mov
xor
into
je
xchg
adc
and
or
into
jecxz
mov
sbb
sub
cmp
jnp
test
js
jg
adc
mov
pop
icebp
or
lods
pop
mov
lahf
mov
int
inc
add
jmp
adc
cmp
dec
es
sub
dec
pop
xchg
lea
and
inc
mov
aaa
hlt
pop
sbb
ret
inc
inc
mov
call
pop
sahf
jmp
pop
lods
repz
fsubr
pop
jne
mov
jne
mov
rol
sbb
mov
loopne
ret
andl
cld
jbe
xor
xchg
out
clc
fcmovb
jno
dec
pop
adc
cli
mov
je
xchg
int
xchg
repnz
pop
dec
ljmp
jae
in
xchg
jmp
idivl
outsl
outsb
daa
test
out
push
montmul
gs
mov
and
or
sbb
decl
sahf
adc
or
jne
cli
push
shl
mov
cmpsl
in
mov
dec
movsl
xchg
enter
mov
cmp
mov
or
adc
sarb
ljmp
movsl
pusha
dec
sub
test
push
enter
fidivl
std
push
outsl
push
into
imul
xchg
inc
aam
xchg
inc
lock
movsl
mov
ja
ficomps
dec
outsb
aam
inc
mov
ja
mov
jb
add
and
or
sbb
inc
cli
inc
adc
lock
xor
loopne
mov
cmp
repz
pop
sbb
mov
decb
sbb
leave
jmp
shll
jl
cmpsl
push
inc
mov
jmp
aam
lock
enter
cmp
jecxz
cmp
jae
mov
dec
ret
out
xor
loope
das
lea
mov
mov
subl
lahf
pop
lret
scas
ss
mov
imul
lret
and
insl
scas
subb
test
fimull
flds
dec
push
add
stos
rcl
cmpsb
nop
xor
xor
push
mov
pop
ss
jl
inc
inc
imul
into
mov
mov
out
stos
jae
rorl
mov
xchg
jne
push
and
jne
in
sub
scas
arpl
and
in
repnz
jmp
ja
xchg
scas
mov
aam
and
mov
add
fs
stos
out
push
cli
jl,pt
jmp
mov
lret
sbb
push
mov
and
sbb
lock
xor
fdivrl
rcrb
add
nop
bound
mull
mov
push
test
mov
dec
mov
sbb
xchg
jne
cmpsl
addr16
push
mov
inc
jbe
out
xchg
cs
pop
pop
add
sub
add
int3
xchg
jb
sbbb
js
add
fisttps
sub
jae
mov
sub
xchg
or
sub
pop
sti
dec
test
cltd
xor
sahf
and
mov
jl
dec
cmp
cmp
or
in
popa
cmp
into
ljmp
or
xor
sub
icebp
inc
xchg
cmpsb
pop
cmp
pop
adc
out
xchg
shlb
push
je
inc
push
adc
add
cmp
stos
dec
in
mov
push
icebp
insb
lcall
xor
divl
in
stc
xchg
sti
sbb
xor
mov
and
icebp
push
pop
inc
mov
arpl
mov
fs
push
fisubrs
aas
es
and
rcrb
jl
xor
js
in
fs
mov
insb
mov
xchg
cmpsb
aaa
jbe
or
xlat
add
in
je
jnp
mov
jg
in
scas
xlat
addb
jnp
mov
push
hlt
test
adc
shrb
mov
lcall
stos
pop
addl
int3
sub
mov
mov
outsb
dec
aad
stos
movsl
inc
subl
sbb
cmp
clc
adc
jns
inc
mov
jo
ljmp
dec
movsb
inc
xchg
out
dec
mov
test
inc
stos
addb
xchg
loope
repnz
cmp
pop
sbb
xchg
mov
mov
sarl
arpl
inc
sub
leave
clc
das
bound
lds
adc
jp
adc
pushf
mov
ret
lock
aas
push
sti
push
insl
jg
jo
push
pop
test
sbb
pop
add
bound
inc
jl
sub
les
mov
loope
ficompl
add
add
je
lahf
and
xchg
sbb
subb
pusha
adc
sub
mov
gs
jnp
push
cmpsl
pusha
popf
loopne
lods
jle
aam
jbe
loope
pop
or
cmp
add
mov
rclb
and
dec
jle
jnp
or
lock
xor
into
in
jbe
xchg
push
movl
inc
inc
sub
xchg
lods
inc
rclb
stc
lods
xchg
jbe
push
inc
mov
out
sbb
jl
mov
add
jne
jg
jbe
push
aas
mulb
push
sahf
jns
nop
mov
psubq
mov
jecxz
adc
jbe
std
icebp
call
movntq
inc
out
dec
dec
xchg
xlat
mov
cmp
imul
jl
lods
addl
ja
lcall
test
mov
out
sub
cld
mov
mov
mov
add
nop
pusha
mov
add
push
and
inc
jle
sbb
sub
mov
ja
aam
pop
mov
call
mov
adc
sbb
cwtl
adc
sub
in
arpl
mov
or
sbbb
int3
outsb
into
maxps
add
lahf
addr16
aad
sbb
xchg
or
lds
lret
cli
mov
mov
add
jg
shrl
and
test
adcb
test
and
sar
xchg
mov
outsb
loopne
sbb
push
add
add
mov
pushf
cmp
repz
int3
in
popa
lret
dec
inc
jg
ret
cwtl
push
loope
add
adc
out
repz
cmp
push
jno
movsl
xor
daa
sub
enter
ficompl
fisttpll
mov
mov
cld
aas
inc
jbe
sarb
xchg
movl
pop
rcrb
iret
pop
in
jb
inc
add
adcb
shll
inc
jl
add
ljmp
pop
or
xchg
mov
mov
popl
pop
xor
iret
adc
xor
cld
cld
clc
xchg
cmp
test
sti
in
fildll
cmp
xchg
pop
in
ja
cmp
and
repnz
lret
inc
test
add
psrlw
push
fcoms
mov
imul
mov
add
jbe
and
frstor
mov
mov
pop
push
jge
pop
dec
jnp
imul
mov
mov
cli
rcrl
push
rorb
mov
clc
out
bound
mov
fcoml
push
out
inc
inc
xor
addr16
in
sarb
mov
aas
sub
les
imul
repnz
add
outsb
push
xor
lret
and
es
and
xchg
jnp
nop
lret
aaa
mov
xchg
ljmp
pop
pop
imul
leave
out
int
dec
arpl
insl
mov
icebp
mov
pusha
bound
shll
gs
outsb
and
jb
popa
mov
xchg
jo
push
jle
in
or
pop
mov
mov
iret
in
test
fs
xchg
sti
int
stos
out
roll
cli
mov
lea
loop
lods
stc
xchg
cs
incb
scas
rol
and
aas
mov
dec
jo
lods
out
pushfw
adc
dec
sbb
rcrl
aaa
test
cmpsl
lret
cld
jg
stos
push
out
or
xchg
movsl
pop
imul
pop
lret
aaa
repnz
xor
fstl
repnz
adcl
pop
inc
pusha
out
or
sbb
insl
sbb
leave
xchg
pusha
loope
sti
mov
addr16
enter
repnz
idivl
mov
imull
lea
loope
imul
mov
cmp
sub
xor
in
jecxz
nop
or
jge
sti
or
sbb
fimull
xchg
and
sbb
repnz
mov
jl
ljmp
jno
push
sti
arpl
pop
lods
mov
inc
or
inc
dec
mov
dec
les
enter
aas
in
and
fnstcw
out
pop
repz
dec
out
subb
sti
sarb
mov
repz
lahf
xchg
inc
popf
ljmp
sbb
mov
pop
cmp
test
or
mov
jg
jmp
hlt
fs
push
pop
cmp
adc
mov
mov
or
xor
cmpsb
pop
test
xor
xor
dec
mov
adc
push
les
popa
std
jno
popf
xchg
rcll
xchg
jno
mov
out
xchg
cmp
gs
cs
mov
test
pop
pop
jp
push
push
xor
push
adc
out
out
pop
dec
ret
out
and
jmp
loop
popf
push
mov
pop
ja
fbstp
xor
fsts
mov
push
hlt
or
dec
push
std
or
xor
imul
xchg
mov
loopne
testb
movsb
sbb
cwtl
movsl
mov
shll
ljmp
push
pop
aaa
push
scas
cmpl
enter
sub
leave
adc
sub
adc
fistpll
addb
mov
xor
mov
mov
out
mov
jl
mov
sbb
arpl
xchg
lock
ficoml
dec
push
jl
xchg
xor
xchg
jmp
add
pop
aad
sub
aaa
inc
xchg
jecxz
adc
sub
cld
imul
shll
jns
push
push
scas
rclb
cs
inc
rolb
jne
dec
push
pop
mov
mov
lret
or
ret
mov
enter
inc
push
xchg
data16
cmp
cmpsb
test
stc
sarb
mov
rcll
inc
aam
ficoms
in
fadd
mov
sti
sahf
mov
push
dec
jl
arpl
aam
rclb
adc
mov
or
sbb
fistpl
sub
jns
xchg
sbb
fwait
add
stos
lahf
gs
sub
mov
dec
inc
rol
inc
and
or
mov
and
aas
add
sbb
ret
jno
int
imulb
addr16
xchg
add
mov
jg
adc
shr
inc
xor
dec
jmp
cmp
adc
sti
pop
push
aam
lea
sbb
mov
push
sub
addl
lds
inc
shlb
lret
cs
arpl
fldt
and
cmp
xchg
cltd
fsts
dec
in
lods
push
sbb
loopne
xor
mov
push
insl
xor
incl
shlb
sub
mov
testl
and
std
xor
sti
push
mov
push
sub
ja
push
or
je
jae
cmpsb
cmpsb
sbb
jns
mov
mov
repz
xchg
loopne
and
ljmp
aaa
or
das
or
inc
out
sbb
les
xchg
mov
push
flds
jo
pop
push
ret
push
sarl
sbb
mov
shl
movsb
push
jno
fdivl
notb
out
pushf
mov
sbb
cmp
add
inc
jno
pop
mov
ret
mov
rolb
or
add
ja
or
add
int
hlt
adc
jg
gs
sbb
cwtl
add
call
popf
xchg
divl
repnz
insb
mov
xchg
or
scas
incb
xlat
sti
scas
adc
inc
fadd
and
pop
cmc
jno
jmp
test
dec
adc
cmc
pop
push
into
jae
lahf
push
pop
cmp
adc
jno
adc
dec
lea
jl
ljmp
pop
shlb
jecxz
rcr
cli
pop
lret
push
push
idiv
lret
mov
xchg
outsb
or
and
adc
fwait
je
pop
jo
shll
daa
fcmovnbe
and
movsl
aad
add
mov
inc
clc
dec
cmp
xor
add
mov
dec
pop
hlt
mov
or
or
imul
xor
fcom
pop
xchg
testb
rol
xchg
gs
imul
call
arpl
or
xchg
xchg
pop
mov
movsb
lret
mov
std
lock
jns
cmp
cmpsb
cmpsl
sahf
das
leave
leave
cmp
push
enter
pop
in
xor
adc
dec
add
orl
jmp
xor
xchg
xchg
repnz
cmp
pop
xor
xchg
out
or
rcrb
outsl
outsl
out
jne
mov
mov
cmpsl
and
inc
and
mov
push
pop
mov
cmpsl
int
and
sbb
fs
leave
and
mov
dec
movaps
dec
sahf
shll
xchg
cmpsl
out
inc
xchg
popa
pop
lret
jmp
scas
mov
pop
out
sbb
or
stc
outsb
push
pop
mov
pop
cmc
xor
xor
mov
xor
fs
dec
test
loop
sub
xor
sti
idivb
sbb
xchg
int
jecxz
sbbb
mov
mov
shrb
jo
push
pushf
mov
lret
dec
lret
lods
sahf
in
dec
test
pop
jge
iret
stc
xlat
daa
int
fisttpl
push
sub
es
mov
xchg
jns,pt
mov
addb
xchg
inc
scas
cmp
andl
int
scas
adc
shlb
xor
in
push
lcall
fsubr
sarb
jge
and
pop
rclb
pop
in
cmp
sbb
fs
ffree
push
cli
les
cmp
imul
nop
test
mov
ss
shlb
andb
xchg
sbb
jae
daa
fs
pop
adc
outsb
daa
push
mov
fstl
or
jns
daa
aaa
inc
adc
lea
lret
aam
push
out
dec
pop
inc
mov
pop
lods
and
enter
dec
xor
inc
lret
lea
mov
js
outsb
mov
sbb
add
add
shrb
dec
cmp
push
xchg
stos
mov
mov
sbbb
pushf
xchg
push
cmp
or
aas
stos
push
push
in
sbb
dec
mov
cs
iret
mov
or
cmp
jecxz
sbb
add
xor
xor
pop
cmp
inc
in
pop
push
ret
add
push
xchg
movsl
fcmovbe
fcmove
or
call
clc
sti
adc
dec
fiaddl
stos
jle
les
pushf
mov
fucomip
mov
pop
je
mov
push
movsb
xorl
dec
lds
adc
leave
jae
mov
lahf
gs
fpatan
mov
xor
inc
sahf
clc
fistpll
js
fs
add
mov
imul
xchg
push
insl
fwait
stc
lock
xorl
sbb
and
addr16
sub
lcall
fldenv
dec
mov
stos
push
gs
push
inc
mov
inc
loope
xchg
clc
loop
jo
lret
sbb
mov
in
call
pop
loopne
ljmp
stos
adc
shl
hlt
shlb
add
xor
sbb
lret
push
imul
sbb
mov
insb
mov
into
or
clc
jne
jnp
fsubrl
sbb
sarl
add
xchg
sbb
push
and
cmp
mov
insb
cmp
clc
inc
rcrb
scas
pop
mov
add
ficomps
js
pop
mov
sub
inc
addr16
mov
push
mov
sbb
lahf
lock
jnp
cmp
clc
fsubp
fdivrl
xor
cld
lcall
push
mov
jo
xchg
in
mov
pop
out
scas
ds
mov
push
xor
inc
je
mov
jge
in
mov
into
fldl2t
inc
lock
outsb
cmp
add
jnp
mov
sub
fmuls
aam
inc
mov
push
push
movsl
inc
push
xchg
sub
mov
lcall
iret
push
fcompl
xor
mov
xchg
movsb
in
and
pop
jmp
mov
movl
repz
ja
pop
or
push
repz
in
push
adc
call
sbb
jge
stos
stos
imul
mov
std
dec
dec
mov
dec
push
sub
mul
jmp
into
mov
repnz
mov
scas
push
cmpb
rorb
pusha
mov
out
sbb
sbb
xor
xchg
dec
frstor
pusha
adc
jne
and
xchg
cwtl
mov
sbb
add
ds
mulb
mov
shr
pop
lds
mov
mov
dec
xor
mov
or
mov
cltd
sbb
insl
cli
icebp
out
or
jbe
or
and
jl
pushf
cmpsb
sbb
lods
lods
dec
sbb
popf
cmp
js
or
inc
movsb
je
cltd
in
lea
mov
cs
mov
xor
aas
cmpsb
scas
xor
pop
fcoml
mov
icebp
test
inc
insl
xchg
enter
leave
push
movsb
inc
outsb
outsl
testb
sar
pop
data16
xchg
mov
sub
cli
jo
dec
or
push
adc
ss
popl
mov
jecxz
cmp
dec
push
mov
dec
ret
imul
pop
movsl
sbb
cwtl
cli
in
cli
xchg
icebp
mov
cld
add
xchg
int3
sub
dec
mov
idivl
jmp
mov
pop
cli
shlb
mov
ja
fdivrl
dec
enter
or
xor
add
sbb
pop
mov
pusha
adc
ljmp
dec
and
push
movsl
mov
adc
call
mov
xor
jmp
stc
popa
test
insb
mov
movsl
adc
stos
stc
add
mov
dec
dec
dec
rol
in
inc
mov
inc
repnz
lods
shll
pushf
mov
jl
popa
inc
add
fcomps
cmp
pop
mov
sbb
adc
je
cmp
jbe
pop
push
out
cmp
cmpsl
inc
and
scas
mov
add
fwait
mov
mov
pushf
movsb
xchg
xchg
inc
arpl
fs
jg
mov
jge
cs
addb
sarl
mov
out
sub
xchg
fs
loope
loop
jg
add
pop
loopne
inc
sub
adc
pop
push
je
mov
pop
mov
mov
adc
ret
adc
aaa
lcall
ret
and
inc
or
cs
xor
pop
jl
lahf
loope
push
mov
popf
and
add
xor
ficompl
dec
and
testb
aam
inc
sbb
pop
cmp
xchg
ret
mov
push
inc
xchg
insb
mov
stos
mov
nop
push
mov
rcrb
ficomps
ret
push
and
xor
jp
sbb
rorb
sbb
dec
fldl
add
cmp
and
sahf
cmp
pop
lods
pushf
cmpsb
add
movsl
mov
fldl
or
sbb
inc
sub
xor
repz
subb
scas
mov
fwait
rcr
mov
in
sbbl
sti
lcall
mov
daa
adc
pop
fidivrl
xor
dec
add
add
xchg
pop
add
xchg
jg
sbb
sbb
mov
fisttpll
aam
sub
subl
lret
pop
sbb
or
pop
jg
or
call
insb
les
out
add
repnz
and
cmp
push
and
jmp
sar
aaa
pusha
mov
test
dec
out
in
xchg
iret
scas
ss
nop
jl
inc
or
arpl
dec
xlat
int
lret
pop
mov
ret
hlt
cwtl
push
mov
fld
shl
xchg
mov
je
sbb
test
call
scas
imul
test
xchg
das
subl
sbb
out
inc
mov
cmp
xchg
pushf
mov
popf
inc
gs
pop
nop
xchg
in
je
jge
adc
adc
loope
mov
adc
xorb
push
mov
gs
push
in
sub
clc
fstpt
lock
adc
mov
xchg
fucomi
inc
divb
ja
fsubrs
leave
test
xchg
popa
into
daa
add
iret
push
hlt
daa
iret
lret
aam
popa
xor
and
xchg
repz
pop
mov
scas
or
cmp
in
outsb
add
cmp
lods
xor
les
test
loop
test
aad
or
xor
sub
dec
jae
mov
add
in
mov
push
movsb
pop
outsl
cwtl
fwait
ja
cwtl
push
rorb
cli
movsl
inc
xorl
je
add
std
out
or
dec
je
ja
mov
push
mov
loopne
repz
fst
neg
push
push
push
mov
dec
and
bound
fimull
pushf
dec
popa
push
daa
icebp
inc
push
push
cltd
pop
mov
enter
cmpsl
aad
test
lret
push
ds
daa
mov
addl
cmpsb
sub
out
negl
and
leave
jnp
jb
lretw
dec
jge
icebp
mov
fwait
rcrb
andb
inc
push
cmp
push
or
push
ss
cmp
mov
addr16
rcr
sahf
mov
scas
lret
stos
aad
push
in
aad
mov
add
stc
pop
or
scas
xchg
pop
and
iret
mov
scas
sub
daa
sarb
and
sub
jmp
hlt
subl
mov
mov
xlat
pop
xor
mov
test
test
movsb
call
aam
add
push
add
mov
sarb
and
inc
into
cmp
lret
mov
xor
sbb
or
pushf
mov
dec
jge
outsl
ss
fcomip
fcomps
sbb
push
out
stos
mov
lea
outsb
test
mov
out
pop
push
and
mov
fmull
mov
xchg
adc
jbe
push
sbb
fisubrs
jp
stc
popf
jb
xchg
xchg
gs
ret
icebp
mov
popa
shll
jmp
test
add
mov
fwait
ss
lods
jge
add
cmp
cmp
pop
xor
movsl
ja
jno
ret
add
hlt
mov
xchg
lret
sbb
test
outsl
loop
outsl
fidivl
out
cld
fnsave
sti
cmp
sbb
fadds
insb
sbb
stos
add
jnp
aad
in
stc
das
push
fyl2x
cwtl
sub
xor
and
div
inc
mov
push
cmp
add
inc
sbb
mov
jbe
xchg
loop
xchg
into
sbb
sarl
pop
and
mov
movsl
sti
pop
inc
testl
sahf
mov
adc
stos
push
jne
sub
test
pushf
mov
adc
cs
cmpsb
xchg
cmp
mov
sub
inc
sbb
xchg
push
xchg
mov
jg
aaa
pop
xchg
push
jecxz
stos
repnz
fbld
lret
jmp
adc
faddl
dec
stos
mov
scas
push
sar
add
cmp
push
addr16
das
jmp
fdivrp
mov
push
dec
sbb
adc
dec
rorb
mov
pop
pop
inc
outsl
push
and
cli
inc
cmp
pop
adc
into
pop
aam
pop
inc
repz
xchg
mov
rclb
ret
pop
add
jge
push
test
and
mov
fistpll
mov
mov
js
push
out
sub
push
mov
std
imul
sub
adc
fxch
int
pop
cmpsb
mov
test
and
rorl
xor
cmp
addr16
lods
lahf
mov
push
jl
dec
mov
cmp
cwtl
ja
mov
or
or
fimull
or
inc
adc
gs
cmp
enter
es
rorb
cmpsb
cltd
in
sub
pop
out
notb
scas
xchg
mov
call
cmpsl
mov
jno
and
lcall
push
lea
ja
push
test
popf
jae
xchg
jae
and
incl
push
pop
jno
pop
lods
cmc
cmp
je
les
loopne
out
sbb
pop
dec
sub
pop
pop
sub
stos
add
and
ret
lock
jecxz
xchg
mov
fildl
sarl
or
fidivl
fisubs
inc
inc
xor
call
pop
xor
mov
sub
push
mov
mov
inc
scas
outsl
jbe
mov
pop
and
mov
ret
sub
hlt
or
std
ret
push
pop
adc
xor
lods
fsubrl
sbb
test
fstpt
aad
jmp
dec
mov
mov
cmp
mov
popf
jae
jns
push
pop
mov
xor
sarl
arpl
enter
jp
lods
sub
xor
xor
inc
pop
and
insl
subl
sub
jb
pop
and
push
out
icebp
in
pop
int
inc
add
sub
jb
sysexit
or
jb
add
inc
dec
jb
rcll
fisttpll
shrl
mov
xchg
movsl
fidivs
mov
clc
push
push
lcall
fcmovbe
loopne
mov
inc
push
xor
mov
jo
mov
ret
dec
dec
push
sub
cli
movmskps
mov
js
out
ficoms
daa
jmp
pop
xchg
inc
adc
dec
or
inc
push
mull
leave
sub
mov
call
hlt
sbbb
pop
sub
cmc
std
fcmovnu
and
mov
push
xchg
jbe
das
sub
fbstp
lahf
mov
fimuls
cmp
call
repnz
inc
inc
dec
in
stos
shrl
mov
ret
sub
sbbb
addr16
add
mov
imul
sub
sahf
lahf
inc
hlt
loop
cmp
js
mov
mov
cmp
and
ss
pop
mov
aam
sbb
mov
inc
jg
sub
pop
xchg
outsb
jecxz
loop
push
imul
jb
in
fldl
adc
cmp
mov
sbb
lods
bound
jp
push
dec
push
shl
addl
jno
dec
cld
stc
fcmovb
or
pop
sahf
jns
lock
mov
xor
imul
pop
cwtl
hlt
cmpb
and
leave
mov
lret
in
subl
sbb
adc
cwtl
mov
push
mov
sbb
or
sub
scas
and
aad
inc
mov
shll
jne
fisttps
sbb
dec
cltd
push
mov
and
pusha
into
push
adc
mov
ret
lea
movsl
jl
pop
or
sub
jno
loope
and
cmp
sbb
inc
std
data16
push
icebp
and
fisubl
xchg
xor
in
add
cmp
jg
add
xor
test
aad
fsubl
cmp
mov
cmp
cwtl
sar
mov
inc
pop
push
test
sti
mov
std
leave
pop
out
gs
mov
and
data16
add
xor
adc
jge
jg
cmpsl
cmp
xor
cmp
addb
stos
xchg
out
stc
jne
and
mov
and
scas
mov
imulb
xchg
adc
sub
jg,pn
mov
rclb
push
movsb
pop
dec
fstl
or
ljmp
cmpb
leave
mov
aaa
add
loop
cmp
push
inc
orb
sub
mov
dec
dec
push
lock
adc
push
int3
xor
add
adc
iret
sub
adc
rcl
fldcw
mov
scas
mov
jg
cmp
shlb
outsl
pop
sub
icebp
push
sbb
adc
testb
outsl
push
insb
xor
mov
inc
loopne
xor
ljmp
in
dec
mov
adc
dec
add
jmp
mov
pop
dec
out
int3
shlb
xchg
mov
ljmp
mov
aas
pop
test
insl
outsl
mov
imul
and
ss
jo
decl
ret
in
cltd
adc
pusha
popf
out
popa
push
sub
orb
sbb
subb
push
add
test
add
bound
enter
pop
pop
jecxz
add
lock
pop
in
pop
and
mov
sub
adc
lods
clc
and
loope
mov
outsl
rol
mov
pop
and
mov
add
adc
pop
sbb
fnsave
cld
nop
add
sahf
stos
adc
and
xor
insb
test
outsl
pop
aad
rcrb
mov
fwait
add
cmpsl
fisttps
clc
adc
aaa
clc
dec
outsb
dec
push
jns
in
xorl
xchg
ss
movd
in
push
outsb
xchg
xchg
pop
inc
mov
mov
stos
adc
in
inc
js
test
cmc
lods
mov
and
enter
add
mov
scas
cmp
pop
cli
sbb
mov
pusha
cmpsl
jmp
mov
das
mov
rclb
push
fcmovbe
je
push
or
cld
stc
into
addr16
pop
and
and
mov
mov
mov
pop
sub
into
or
cmp
repnz
aam
cs
pop
icebp
xchg
mov
jo
sbb
aas
aam
loope
sub
xor
or
loope
add
jb
das
jns
sti
mov
aaa
jae
f2xm1
mov
lcall
out
or
ret
je
mov
cmp
add
inc
or
test
icebp
psubq
push
adc
testl
pushf
sbb
aas
testb
pop
insb
sbb
add
clc
mov
mov
or
fsubp
cmpsl
mul
dec
push
sub
mov
push
push
inc
shrb
mov
mov
imulb
push
sub
fistpl
repz
lods
push
lahf
daa
dec
mov
or
bound
jns
cmp
enter
movsb
mov
std
leave
andl
mov
push
xchg
insl
roll
mov
testl
and
in
stos
dec
mul
das
incl
fstps
push
xor
jae
lods
add
sbb
push
cmpsl
push
ss
adc
jecxz
out
push
jo
jns
jne
mov
adc
addr16
in
nop
and
dec
pop
shl
je
cltd
mov
or
cs
pop
mov
cmpsb
sahf
in
pop
cmp
and
add
les
cmp
or
fbld
bound
dec
push
mov
inc
clc
inc
imul
fimuls
les
jae
fwait
adc
jp
cmpb
cwtl
pop
ja
xchg
lahf
jns
push
xlat
pop
mov
loopne
sub
or
xor
leave
jae
pop
adc
push
clc
push
iret
jle
mov
int
mov
jg
and
xor
jbe
fwait
in
or
loop
into
cmp
stos
call
ret
xor
sbb
jo
sbb
test
xchg
in
and
subb
nop
call
mov
scas
mov
lock
inc
cs
icebp
nop
xchg
sbb
or
sbb
arpl
lods
inc
aaa
mov
lods
stc
adc
jo
mov
es
pop
jns
xor
mov
jge
mov
sbb
in
pop
sbb
subps
inc
push
fdivr
cmpsb
sti
xor
mov
inc
mov
push
cmpl
mov
dec
pop
ljmp
push
cltd
mov
cli
mov
cmpsb
push
leave
roll
jno
fdivl
dec
add
int
fxch
fwait
or
out
xchg
je
add
jecxz
and
add
push
repnz
in
pop
imul
push
mov
jle
jle
push
fisubs
pop
xor
xor
xor
mov
jo
mov
cmpsb
xchg
or
mov
aam
in
lahf
cs
and
movsb
inc
and
loop
pop
notb
add
cmp
lods
ficompl
fcoml
xchg
data16
sbb
jno
pushf
dec
xchg
lea
xchg
test
and
jecxz
dec
fidivs
mov
das
fistpl
jnp
push
push
pop
or
mov
lea
inc
in
and
repz
outsb
int
stc
xor
xor
mov
fstps
push
test
xchg
xchg
ret
test
lret
jge
out
mov
in
lret
push
push
cmp
jp
inc
in
and
lcall
inc
xchg
jp
pop
fidivrl
pushl
cmp
andl
loope
xor
and
cmp
mov
adc
inc
leave
inc
in
pop
xchg
push
cmpsl
test
idivb
out
mov
push
jg
pop
mov
lahf
ror
or
rcl
aam
out
mov
std
shll
xchg
mov
loope
and
pop
std
adc
ds
sub
lret
je
scas
dec
and
subl
mov
hlt
mov
sahf
mov
dec
mov
xor
sti
stos
shll
xor
push
rcr
int
movsl
mov
and
mov
fcoms
adc
sub
roll
es
sub
in
or
jo
lea
pop
decl
push
ss
push
mov
aam
jno
gs
sarl
mov
xor
inc
jae
notl
daa
jnp
jg
sbb
cld
mov
out
stos
xchg
rolb
loop
dec
dec
jno
push
clc
enter
dec
out
int
divl
inc
pop
mov
lods
ss
inc
push
inc
inc
ds
pop
xchg
mov
cmp
call
rcrl
sahf
sub
sahf
adc
loopne
xor
dec
movsb
outsl
jae
or
sbb
jne
int
aas
popf
inc
pop
add
xor
add
xchg
pop
push
push
jo
mov
dec
adc
inc
icebp
fsubl
mov
dec
sub
insb
xchg
movsl
mov
xchg
dec
xor
sahf
leave
aaa
push
int
and
sahf
cmp
dec
sub
cmp
subl
cwtl
jae
sub
pushf
mov
lahf
out
es
out
dec
in
hlt
outsl
adc
andb
lods
cld
cld
jnp
rorl
cmpsb
lcall
movsb
push
push
add
stc
btc
outsl
clc
js
push
xor
push
fnsave
imul
sub
pop
out
dec
sbb
lcall
xchg
fmuls
mov
and
inc
insl
xor
jns
lret
mov
dec
aaa
pop
xor
add
psubq
aas
out
aas
fldenv
push
mov
push
pop
js
adc
jb
xor
loop
mov
ficompl
cltd
dec
dec
loope
or
mov
ljmp
mov
push
dec
dec
sahf
xor
addb
sub
xchg
and
ficompl
inc
mov
mov
outsl
fs
mov
fnstsw
out
jnp
cmpsb
adc
std
in
lret
jne
adc
lcall
ret
movsl
ret
mov
addb
addps
out
or
sub
mov
add
incb
cmpb
jmp
push
iret
lds
gs
mov
push
adc
stc
lcall
push
rolb
sbb
addr16
dec
mov
push
mov
rcrb
jo
dec
fwait
je
test
int
aad
popf
outsb
notl
pop
insb
leave
cmp
fiaddl
les
mov
mov
cli
mov
mov
push
inc
mov
sbb
cmpsl
dec
bound
loope
xchg
jle
hlt
push
push
mov
es
and
or
hlt
jb
mov
cwtl
jg
test
mov
mov
mov
cmpsb
mov
sub
mov
fistps
stc
aad
ret
mov
inc
jmp
fdivr
add
cmc
xchg
push
inc
mov
sub
xchg
mov
push
mov
fwait
outsl
mov
push
mov
call
mov
pop
insb
lcall
push
cmc
shll
fsts
hlt
jb
testb
clc
popf
mov
mov
lea
outsl
lret
in
jge
dec
in
xor
adc
jmp
arpl
mov
lret
cltd
in
sbb
int
outsl
xor
cmp
lods
mov
testl
mov
cmp
mov
lds
das
sbb
stc
pusha
shl
int
or
pop
pop
pop
call
add
add
xchg
jne
lret
mov
lods
inc
mov
push
popa
lods
enter
mov
inc
mov
cmp
mov
enter
mov
ljmp
add
pop
and
aad
hlt
lcall
add
jne
jmp
sarb
mov
push
lods
in
in
mov
xchg
add
adc
jb
dec
and
lock
enter
inc
inc
add
xchg
in
jne
test
add
arpl
or
xchg
dec
fsubs
lods
or
push
push
pushf
push
dec
dec
dec
lods
lods
jae
test
mov
popf
repz
jl
pop
cmp
and
outsb
pop
mov
dec
push
inc
in
sub
xlat
cmc
mov
jmp
out
mov
pop
movsb
je
sbb
pop
add
roll
add
jl
and
push
jle
mov
xchg
xchg
xchg
dec
push
aas
push
jns
sub
sti
cltd
pop
arpl
adc
mov
or
mov
repnz
fstl
adc
mov
movsb
sub
lods
mov
clc
movb
xchg
inc
pop
add
clc
add
mov
ja
gs
add
or
xchg
and
andl
lock
scas
and
inc
inc
mov
xchg
je
fldl
mov
test
add
aaa
shrl
xor
or
adcl
cld
ja
dec
fsubrl
and
add
cld
mov
pop
jae
addb
repz
test
out
std
inc
fwait
adc
lock
push
pushf
jns
cmp
lds
and
xor
popf
push
add
repz
push
mov
movsb
std
dec
sahf
rorb
fisubrl
jnp
fstps
cltd
dec
lahf
ret
dec
push
les
or
pop
test
in
gs
sub
roll
mov
jle
stos
jns
fisubl
jne
cmp
mov
jno
cmp
adc
ds
jmp
fdivs
add
xor
push
push
xchg
lds
jbe
out
clc
mull
das
sti
dec
fidivl
lret
and
sbb
dec
xor
out
insb
movsl
xchg
cmp
cmp
pop
push
xor
sbb
rcr
movsb
mov
imul
fistpll
dec
inc
test
and
add
sbb
mov
inc
pusha
sub
lock
push
enter
cld
or
lods
xchg
cwtl
add
aam
pop
xor
or
and
out
pop
cwtl
popa
sub
mov
and
les
incb
add
add
dec
adc
lods
jmp
rclb
sub
add
ja
or
mov
pop
in
test
jecxz
adc
clc
mov
inc
jl
in
xor
cltd
mov
sub
shlb
push
or
ret
xchg
push
cs
js
jno
lea
xchg
lahf
ljmp
pop
movsl
dec
lock
popa
jo
in
mov
jg
inc
popa
jb
cli
loope
jb
fwait
rol
fldenv
cmpsl
jb
pop
clc
mov
sbb
jae
int
ret
and
scas
dec
and
and
movb
cmp
sbb
into
dec
gs
lods
popf
lock
fidivrl
mov
adc
outsb
mov
dec
ds
cltd
lret
pop
xchg
fstl
lods
fcompl
repz
sub
movb
mov
je
sub
dec
les
or
fwait
jmp
push
aaa
jne
cli
xor
mov
imul
arpl
xchg
lcall
push
xor
add
or
or
add
add
movsb
inc
mov
add
in
sbb
add
mov
add
pushf
testb
ja
into
xlat
and
inc
xchg
push
mov
push
ja
mov
pusha
lahf
jae
lods
fs
mov
or
arpl
cmp
subb
add
cmpsl
xchg
push
scas
rol
cmp
xchg
scas
insb
cmp
in
insl
jp
push
out
sbb
data16
mov
sbb
mov
push
nop
sub
mov
sub
sub
jnp
mov
dec
or
inc
add
mov
inc
sbb
xor
ret
jae
stc
pop
lcall
pcmpgtb
jp
clc
cltd
mov
and
enter
cwtl
das
sub
mov
mov
xchg
aaa
mov
and
jb
or
xchg
clc
jb
push
test
adc
cmpsb
in
sbb
fs
repz
mov
and
out
and
test
lahf
mov
adc
int3
in
or
adc
aam
mov
in
jbe
lods
cmc
inc
inc
ljmp
push
dec
jnp
aad
push
popf
insb
jecxz
inc
pop
lods
push
sub
sub
das
and
std
lea
pushf
dec
loopne
cmp
jmp
cmp
inc
pusha
cltd
sub
popa
pop
adc
mov
pop
iret
add
mov
mov
rclb
pop
es
leave
sti
aad
lds
aam
lds
or
shlb
out
cmp
xchg
push
in
rol
xchg
push
jecxz
in
xor
dec
loopne
arpl
jge
push
push
jno
mov
push
push
aas
xor
mov
shll
and
jo
inc
mov
mov
xor
xchg
data16
push
bound
push
push
test
js
movsl
imul
ljmp
arpl
xor
xchg
loope
xlat
mov
mov
pop
inc
pop
in
xor
adc
sti
xor
adc
add
jnp
aad
dec
jle
adc
xchg
aad
jnp
sub
fcoms
daa
pusha
push
mov
aas
out
test
jne
in
insb
stc
lea
shrl
dec
mov
jbe
insl
or
adc
push
jb
xchg
mov
subl
xor
pcmpeqw
xchg
jge
loopne
and
mov
fbld
sub
fsubrl
push
mov
aam
push
push
sbb
unpcklps
arpl
cmp
in
xor
mov
xchg
rcr
push
and
in
ja
jbe
int3
enter
or
and
loopne
add
daa
mull
xchg
testl
sub
xchg
mov
dec
lret
mov
pop
stos
push
pop
dec
in
push
cltd
data16
imul
mov
sbb
and
test
in
insb
popa
xchg
outsb
mov
rcrb
movsb
dec
lcall
sbb
jae
pop
loope
push
lcall
mov
test
pop
ja
add
push
push
scas
lcall
jne
xor
pop
fucom
dec
out
dec
inc
sbb
cmp
jnp
or
lods
add
lock
xor
and
adc
in
cwtl
lcall
cmpsb
dec
jno
dec
jnp
cmp
enter
insl
pusha
pusha
cltd
pusha
xchg
mov
add
insb
ret
shl
aam
sbb
or
fisubl
push
jecxz
mov
cli
sub
xchg
out
mov
in
scas
stos
enter
cmpsb
mov
jg
cltd
repz
or
insb
push
mov
or
shll
cli
and
mov
mov
xor
int3
and
push
js
int
cmpsl
adc
jl
mov
xchg
cld
mov
pop
lret
or
in
in
lahf
xor
cmc
imul
push
ja
mov
xchg
pop
mov
adc
js
ret
cs
dec
jnp
imul
push
and
jecxz
lods
mov
push
rcl
push
out
adcl
das
pop
fsubrs
xchg
icebp
and
mov
or
imul
pop
outsl
das
cmc
sub
ret
add
and
fistpl
push
leave
pop
sub
and
cld
lret
out
insl
imul
pop
pop
test
cmovs
ret
xchg
dec
ds
xchg
out
mov
in
pop
jns
mov
mov
cmc
add
cmp
scas
jno
sub
ljmp
imul
nop
fiadds
jp
lock
dec
add
add
pop
sarb
inc
xor
and
cwtl
pmullw
mov
sbb
cmpsb
sahf
cltd
call
inc
outsl
sbb
addr16
cmp
or
test
mov
jne
decl
xchg
mov
sbb
pop
dec
mov
push
sar
and
add
mov
jge
int3
mov
cmpb
push
mov
jb
in
and
mov
jle
sub
fmul
xchg
filds
and
jbe
mov
pop
add
mull
out
in
add
stos
cmp
fadds
push
out
test
jae
test
mov
cli
cmpsl
std
mov
jns
aas
xor
out
enter
sub
addr16
mov
xor
sbb
push
sahf
pop
and
xor
sub
inc
pop
add
xor
dec
jb
aad
push
jae
popf
outsb
pop
xchg
int
push
mov
xor
cmp
in
add
lret
clc
lahf
cli
or
stos
sar
jns
cmp
subb
sbb
test
xor
xchg
mov
sub
std
cmc
xchg
enter
mov
mov
mov
dec
ljmp
popf
lods
or
cltd
sti
arpl
sbb
inc
repnz
insb
stos
gs
shlb
cmpsl
and
popa
andl
punpckhdq
sbb
pop
in
jg
and
test
mov
stos
mov
mov
inc
push
mov
stos
sub
scas
cmp
add
lods
ljmp
cmpsb
icebp
sub
jno
outsl
repz
nop
mov
mov
out
sub
cmp
mov
int
popf
mov
mov
in
dec
inc
stc
cmp
popf
repnz
jns
push
shl
pop
cwtl
jmp
mov
push
jb
repz
fs
leave
xlat
jecxz
fstpt
neg
pop
dec
gs
push
fnstcw
dec
pushf
popa
mov
mov
xchg
fincstp
mov
dec
push
jo
adc
imul
rolb
mov
ds
lods
xchg
adc
aad
cmp
sub
cwtl
inc
pmaddwd
inc
enter
jae
sub
test
jae
jp
clc
cmpsb
aam
and
in
stc
lret
gs
imul
aaa
pop
in
loopne
mov
cmp
sub
test
arpl
outsl
cmp
xor
sub
jo
cmp
jg
push
dec
mov
mov
movsw
loopne
cwtl
cmp
push
jae
clc
cmp
sub
lock
mov
pop
sbb
mov
int
icebp
enter
clc
cmp
imul
movsl
lods
add
mov
test
divl
or
jae
add
arpl
mov
xchg
popf
pop
add
jne
adc
insb
pop
sub
enter
mov
sbb
sub
scas
stc
dec
loop
and
test
push
jge
push
lret
in
push
jno
xlat
jo
push
stc
jns
sbb
mov
stos
aas
xchg
adc
fwait
call
mov
jnp
test
xchg
clc
cmp
cmp
sub
std
cmp
cmp
in
repz
ret
sbb
lcall
add
push
jp
mov
pop
sub
lret
push
pop
adc
adc
leave
mov
stos
and
pop
xchg
sti
in
push
cmp
mov
pusha
and
push
notb
push
xor
xchg
push
lahf
jns
mov
testb
stos
and
jo
push
mov
mov
or
jb
adc
pop
and
xor
scas
pop
jb
aaa
and
dec
pop
sahf
mov
test
cmp
add
sub
lret
inc
jns
shlb
jnp
lods
inc
xchg
out
and
icebp
push
aad
out
nop
xchg
jb
xor
jae
push
sub
aam
test
sti
jo
push
lds
jg
pop
sbbl
and
sbb
add
push
popa
into
push
cmp
jne
xchg
inc
outsl
push
mov
inc
cs
in
iret
aad
les
jmp
xlat
loop
adc
std
adc
stc
mov
inc
inc
and
imul
addr16
sub
push
sub
fcmovnbe
xchg
mov
and
scas
sub
sbb
jg
inc
cmpb
lds
mov
mov
ret
xlat
call
pop
sbb
pop
cltd
vaddss
add
xchg
mov
adcl
sbb
push
js
jmp
cwtl
adc
pop
cmp
sub
mov
daa
mov
test
imul
pop
test
or
xor
xor
lea
notb
out
cmpsl
test
outsl
sub
inc
mov
sub
mov
mov
nop
sbb
inc
pop
mov
pusha
jnp
xchg
and
sub
test
mov
or
inc
jmp
cmpl
je
mov
mov
imul
addr16
movsb
jo
or
sbb
lcall
inc
stc
mov
fiaddl
cmp
js
xchg
pop
mull
mov
sub
test
sarl
movsl
arpl
and
nop
pop
xchg
and
cwtl
sbb
mov
sarb
mov
mov
cwtl
mov
fs
xchg
pop
mov
insl
lret
xor
pop
adcl
arpl
mov
adc
xor
stos
lds
adc
imul
mov
sahf
dec
and
ja
ja
testb
js
imul
in
pop
data16
pop
rcrl
incl
addb
cmp
mov
inc
jge
jecxz
adc
mov
inc
nop
sbb
jnp
sub
loopne
in
je
cwtl
mov
movsl
bound
out
xchg
mov
xchg
inc
orl
mov
negl
cmc
add
imul
loopne
mov
cli
mov
lret
mov
clc
in
adc
and
mov
dec
icebp
push
bound
out
sub
in
sahf
adc
dec
movsb
insb
loop
mov
repnz
icebp
inc
cmp
or
mov
pushf
adc
xchg
scas
mov
nop
negb
repnz
mov
pop
orl
imul
in
pop
shll
mov
push
repz
cmp
mov
arpl
adc
jns
leave
iret
aad
scas
sahf
sub
push
cmpsb
js
repz
pop
lret
mov
and
aad
xchg
mov
jae
push
sub
bound
or
mov
aad
dec
mov
lret
jb
pushf
enter
rdmsr
inc
pop
xchg
add
cmpsl
repz
insl
xor
mov
fidivs
movsl
rolb
aad
pop
cmp
mov
add
sahf
and
or
dec
mov
cltd
pop
imul
and
xor
xor
dec
or
push
cmp
jg
icebp
test
inc
add
mov
dec
mov
mov
mov
inc
out
and
std
scas
mov
mov
sub
test
add
rclb
xlat
movsb
lahf
nop
jb
mov
mov
flds
movsb
mov
xchg
push
pushl
inc
rcr
jmp
pusha
xchg
gs
jge
jne
jge
sub
add
add
jno
and
sub
cmp
jo
es
inc
push
repnz
dec
pop
and
je
mov
and
sub
iretw
jmp
adc
data16
cltd
mov
cmp
mov
mov
jmp
and
adc
sbb
call
jg
fcoml
mov
lods
cmp
push
mov
imul
jb
or
cmpb
pusha
sbb
cmp
enter
mov
and
scas
rclb
sbb
jl
divb
xchg
pop
stc
sbb
inc
inc
lcall
cmpsl
mov
cmpb
ficoms
fimuls
or
lcall
mov
adc
lea
andb
inc
arpl
lds
negl
outsb
xlat
daa
push
imull
jge
jb
fst
xor
leave
jne
adcb
lcall
sbb
out
dec
adc
cmp
enter
adc
adc
sbb
push
test
nop
jge
and
movsb
shll
dec
jmp
sti
xor
xor
or
or
sbb
ja
sub
xor
cmp
and
cmpl
ds
data16
sbb
cli
ja
and
loopne
pop
imul
inc
in
fdivr
xor
call
sub
sub
cmc
mov
push
add
cmp
dec
dec
sti
cli
mov
ss
icebp
lret
aad
sarb
nop
outsb
adc
push
std
dec
mov
mov
es
sub
mov
and
nop
and
jb
sbb
cmpsb
fnsave
imul
cli
je
jp
popf
dec
pop
add
pop
xchg
xor
mov
shl
adc
push
movsb
and
sbb
int
add
lahf
dec
dec
fnstenv
xor
test
mov
sbb
repnz
int3
jg
inc
xchg
stos
or
xchg
pop
jl
mov
movsl
push
fisubs
push
loopne
movsb
test
mov
mov
insb
dec
into
dec
inc
push
jno
mov
fucomip
adc
sub
push
mov
insb
in
addr16
xchg
xor
jo
cmc
mov
nopl
outsl
jns
add
pop
adc
ss
scas
mov
mov
pop
ds
stc
lret
js
adc
cltd
int
clc
pusha
jl
or
jmp
lea
and
mov
mov
push
adc
push
push
and
insl
mov
cmp
ds
dec
lods
push
xchg
repz
push
iret
rcrb
negb
lahf
test
stc
jl
int
sbbl
stos
data16
mov
and
or
pop
mov
dec
pop
dec
cmp
addr16
inc
jne
inc
mov
push
sarl
lds
jl
mov
pop
fisttps
mov
lcall
cmp
movsb
push
sarb
mov
sub
mov
movsb
gs
mov
ljmp
inc
cmp
sub
mov
dec
pop
cmpsb
xor
loopne
sub
adc
pushf
int3
push
push
lahf
mov
lret
mov
lds
adc
inc
xchg
pop
cmp
clc
mov
adc
push
lret
cmp
xchg
add
aad
shlb
rolb
enter
mov
fstpt
jp
cmp
out
push
adc
movsb
sbb
repz
idivb
andb
and
jns
rcr
shl
pushf
mov
leave
test
adc
sub
mov
pop
test
add
push
leave
and
enter
ljmp
subb
inc
sahf
inc
push
aaa
jne
and
scas
loop
dec
ja
cmpsb
enter
lret
popf
arpl
nop
or
jnp
xchg
test
mov
sbb
fildl
jg
pop
inc
shrl
test
pop
adc
fistl
xchg
pop
push
sbb
iret
push
add
std
sub
jo
movsb
sbb
cmc
rclb
sub
xor
mov
adc
dec
push
mov
xor
mov
add
jb
sbb
jns
xchg
in
addr16
data16
adc
jnp
add
adc
jbe
dec
mov
data16
test
mov
xchg
push
cmp
jl
jne
mov
mov
insb
mov
add
icebp
fistpl
pop
enter
push
cmp
mov
shlb
sbb
sbb
jns
xor
cvtpi2ps
cmp
ffree
add
and
movsb
test
or
lahf
push
adcb
cmp
imulb
dec
pop
xchg
popf
fiadds
decb
dec
or
mov
push
dec
lods
pusha
movaps
cmp
push
fisubl
sarl
sbb
int3
and
adc
mov
jbe
gs
out
pop
push
shl
test
xor
jg
adc
and
sbbb
push
gs
mov
or
xlat
mov
jecxz
push
and
pop
std
jns
pop
filds
andb
aaa
adcb
jno
mov
mov
mov
bound
dec
sbb
fiadds
jp
or
or
xchg
sub
push
sbb
sbb
pop
call
xchg
sbb
cmpsl
jae
pop
xor
xchg
cmc
mov
and
popf
push
cmp
xchg
fildll
mov
mov
stos
jmp
orb
out
and
or
xchg
and
adc
xor
mov
jl
adc
nop
and
movsb
push
das
orb
lods
int3
lret
adc
xlat
dec
mov
xlat
stos
das
jno
popa
fstps
ficompl
or
lds
jmp
adc
addr16
lcall
or
sahf
or
pop
clc
adc
and
shl
rcll
mov
addr16
cwtl
add
movsl
jecxz
lods
xchg
aaa
lds
mov
inc
mov
pop
loop
shll
lea
sbbl
push
xlat
icebp
test
mov
push
adc
mov
cmpl
mov
mov
mov
mov
int
adc
or
sub
push
mov
add
mov
pop
mov
lret
scas
and
add
lock
nop
inc
call
clc
lds
je
xor
cs
mov
mov
ljmp
jmp
loop
popf
jae
std
mov
aaa
lds
notl
sub
mov
shlb
fs
bound
cwtl
jns
sub
jecxz
mov
gs
mov
test
mov
add
stc
xor
out
add
add
stos
lock
or
sub
adc
jecxz
test
xlat
inc
loop
iret
jecxz
icebp
mov
pop
fwait
mov
fildl
jmp
movsb
icebp
aad
adc
lods
test
xchg
stos
js
test
and
test
inc
adc
jns
xchg
mov
ret
mov
sub
lock
push
jno
je
xor
xor
pushf
mull
andl
imul
xchg
rclb
cmp
cmp
sarb
cltd
pop
aad
sub
sub
mov
aam
cwtl
clc
test
mov
and
jecxz
inc
pop
sub
in
sbb
adcb
daa
mov
icebp
fdivp
jno
xor
mov
int
orb
fwait
insb
mov
mov
push
out
push
and
xlat
or
out
insb
call
xorl
mov
xor
push
sub
outsb
repz
jge
into
ds
inc
pop
test
test
lret
jp
or
mov
cld
fnstsw
cmp
repz
js
into
cmp
les
in
js
iret
add
xchg
in
inc
sub
jl
or
add
in
sbbb
mov
pushf
mov
mov
mov
test
push
enter
movsb
or
aas
dec
sahf
push
sbb
xchg
imul
sbb
addl
repz
xor
enter
adc
xchg
pop
xor
cwtl
lea
rcrb
in
jno
add
jl
shrb
std
inc
sub
xchg
jno
cli
xor
sbb
in
or
sbbb
sti
and
push
fbstp
dec
loopne
aam
pushf
cmpsl
xchg
add
test
cltd
add
pop
cmp
fwait
insb
fimull
xchg
iret
insb
in
addr16
pop
xor
dec
mov
push
push
ss
push
dec
dec
pop
out
push
dec
adc
mov
int
pop
je
push
pop
and
fstpt
out
mov
ds
mov
out
jnp
add
loopne
fs
outsl
dec
and
stc
fnstcw
pop
dec
add
or
mov
jo
push
clc
divb
cwtl
push
cmpsb
fidivrl
xchg
cmp
add
jecxz
hlt
cmp
lods
mov
imul
and
sbb
int
lret
rcrl
popf
fiaddl
mov
lcall
repnz
jle
out
xor
pop
push
lea
dec
xchg
mov
jg
mov
rcl
inc
push
xchg
dec
sahf
ffree
loop
sbbl
ret
out
mov
or
aam
enter
iret
leave
mov
mov
js
mov
test
push
mov
aas
add
dec
mov
xchg
out
cmpsb
sbb
call
dec
or
movl
adc
gs
push
jo
mov
add
mov
mov
inc
jmp
mov
xchg
int
mov
iret
aad
sti
mov
jbe
fildll
adc
das
jne
xor
fsubr
pop
and
dec
push
fildll
mov
mov
lcall
gs
movsl
add
cmp
clc
int3
sub
loope
jb
jns
test
insb
dec
fnstenv
ret
popa
adc
movsl
sbb
gs
jo
xor
out
cmp
sub
xchg
and
pop
add
xlat
hlt
mov
les
inc
mov
movsb
and
add
fldcw
testb
imul
in
inc
insl
xor
mov
and
adcb
push
mov
lods
inc
cmp
or
jbe
aas
out
enter
loope
jno
xor
add
or
sub
shlb
sti
das
push
fucomip
sub
out
stos
ficoml
jnp
xor
das
es
das
and
in
jl
mov
mov
adcl
andb
gs
adc
inc
push
ljmp
cltd
jne
dec
cmp
sbbl
out
imul
dec
ss
sahf
fs
jo
and
sahf
imul
cmp
dec
sahf
cmp
cli
mov
mov
push
add
xchg
jge
fs
pop
lea
mov
dec
pop
test
dec
out
testb
xor
mov
pop
dec
ljmp
imul
and
or
dec
sbb
fiadds
xor
call
jp
lret
mov
mov
jg
jmp
pop
adc
or
clc
mov
sbb
mov
les
mov
mov
push
test
ret
mov
mov
stc
push
out
or
rol
pop
mov
mov
stos
mov
adc
scas
lods
sbb
jl
imulb
or
inc
addb
gs
loopne
aad
std
sbb
insl
sbb
popa
lock
fwait
pop
imul
lret
jp
and
xchg
fcoml
jnp
jo
mov
add
mov
inc
fwait
inc
fsts
jnp
jns
out
pop
ret
cltd
pop
adcl
bound
fwait
lock
and
test
fsubl
push
mov
mov
daa
incl
fld
cltd
push
mov
sub
mov
xor
pop
call
jb
loopne
mov
es
mov
cmp
clc
fucomip
iret
bound
repnz
push
clc
aad
xchg
cmpsb
jbe
shrl
pop
mov
sbb
adc
jecxz
sub
mov
dec
adc
movsl
hlt
pop
cmp
xchg
out
scas
xchg
insl
xor
gs
push
push
or
cli
daa
ds
outsb
mov
mov
outsl
insb
dec
pop
jo
out
sbb
jbe
pop
adc
jg
cld
hlt
out
mov
push
pop
fldcw
adc
inc
mov
iret
insl
xor
fisttps
jne
inc
out
in
ja
lea
lret
mov
je
mov
push
jg
imul
dec
jg
test
outsb
cli
sbbb
push
push
cmp
pmulhuw
divb
push
mov
outsb
imul
cmp
mov
push
push
in
add
popf
xchg
les
ja
fcomip
cmp
pop
sbb
jae
iret
out
stos
pop
jb
fisubs
and
cwtl
ljmp
pop
imull
sbb
cmpsb
int
xchg
jmp
test
or
out
insb
jb
shrb
inc
and
cmc
xchg
mov
adc
cmp
sarb
mov
adc
adc
pop
popf
and
movsl
inc
sub
or
xor
stos
or
xor
in
loop
push
repz
sbb
popf
bound
mov
push
cmpsl
imul
cs
ja
jg
jne
push
lea
push
or
in
out
outsb
xor
mov
mov
push
out
mov
and
cld
fmuls
sbb
inc
cmp
mov
pop
in
inc
outsl
or
std
sbb
or
scas
jo
out
lods
mov
dec
bound
lods
cmp
jnp
out
mov
mov
mov
mov
es
pop
jle
fucomip
lods
insb
fstpt
push
add
or
testl
dec
movsb
mov
fstpt
in
add
jp
xchg
insl
ss
in
daa
in
scas
mov
pop
les
add
and
add
fxtract
out
add
shlb
imull
dec
inc
add
outsl
add
inc
sub
sbb
sub
daa
lahf
inc
mov
and
add
pop
add
and
xchg
subb
repnz
rorb
je
mov
pusha
idivb
pop
jns
lahf
stos
cmpsl
xchg
adc
add
sbb
es
mov
jns
mov
aas
sahf
xor
mov
add
fwait
inc
aam
push
fsts
and
test
add
enter
pop
inc
cmp
fs
out
pop
xor
dec
insb
int3
ds
shlb
sbb
jb
pop
cld
adc
insl
test
data16
push
pop
pop
ss
sub
and
mov
mov
xchg
xchg
dec
insl
or
rdpmc
mov
dec
mov
cwtl
jbe
andl
inc
cmp
mov
add
js
ja
loope
jo
rclb
outsb
ljmp
add
mov
jno
push
sbb
sbbl
insl
gs
inc
and
dec
popa
jg,pn
cltd
pop
out
arpl
sahf
ljmp
call
add
push
test
mov
pop
xchg
or
daa
das
test
lods
xor
test
enter
mov
ror
fsubl
cmp
nop
inc
push
outsb
jne
push
jae
xor
int3
mov
loope
aam
stos
les
pop
nop
mov
adc
or
push
popf
jno
out
and
dec
push
sub
sub
pop
mov
divb
sub
push
popl
inc
cmp
rolb
ret
push
mov
adc
pop
pusha
stos
pushf
add
and
push
add
les
lahf
mov
loope
mov
sub
xchg
out
jae
out
test
sbb
jle
xchg
xchg
dec
mov
xchg
insl
xlat
or
and
loopne
dec
sbb
push
xor
das
in
pop
out
jmp
lds
sub
adc
mov
mov
test
adc
push
daa
sub
stos
cmp
sbb
adc
sub
aad
mov
das
ja
popa
ja
dec
lret
daa
xchg
cmpsl
mov
dec
cmpl
jae
cmp
sub
loope
push
pop
mov
ret
xchg
scas
ret
cltd
les
dec
daa
inc
repnz
hlt
inc
push
fdivrs
and
or
icebp
inc
popa
lods
pop
in
popa
lods
mov
subl
outsl
imul
push
jnp
insb
mov
dec
adc
lds
dec
push
sbb
xchg
cmp
int
ss
int
and
cmpsl
inc
popa
push
mov
dec
dec
cmp
sbb
and
mov
mov
cwtl
out
xor
movsb
inc
push
mov
jl
inc
repz
mov
sub
pop
popf
mov
js
and
loope
sbb
push
jne
shl
mov
adc
insb
and
enter
out
stos
pop
ret
mov
dec
dec
sti
dec
push
imul
pop
add
mov
jmp
sub
cmp
push
fsubrs
adc
jo
lods
add
cwtl
lock
frstor
mov
stc
rcrl
movb
sbb
push
cmp
es
mov
push
mov
aad
push
jecxz
rcr
pop
sbb
lods
xchg
sti
fnsave
jae
test
rcrl
inc
sub
lret
movsb
and
lock
dec
or
and
and
mov
leave
jnp
pop
xchg
lret
mov
fwait
cmp
inc
stos
iret
mov
adc
sub
test
jg
pop
cwtl
jae
xlat
inc
push
nop
call
cmp
movsl
sub
jns
cwtl
inc
mov
xchg
js
push
sub
cmpsl
test
loop
push
xchg
inc
mov
dec
xchg
and
jo
out
sub
mov
pop
xchg
mov
fisttpll
mov
and
das
add
ds
push
pop
push
push
orl
or
jo
bound
jno
cld
xchg
xchg
mov
sub
add
dec
shlb
dec
std
lcall
or
xor
aas
mov
add
or
testb
push
dec
xchg
scas
outsb
mov
jg
jle
mov
dec
inc
leavew
or
dec
pop
fcompp
inc
dec
sub
repz
ret
call
cltd
in
insb
out
test
fadd
or
add
adc
stos
mov
fadds
les
push
push
sub
jne
mov
mov
scas
mov
or
fdivrs
jmp
out
xchg
repz
in
jg
xchg
loop
and
adc
fsubrp
xchg
jae
repnz
cmp
out
adc
aas
mov
insb
mov
imulb
fsubs
mov
outsb
mov
lcall
out
sub
xor
popf
xchg
fcomi
jmp
arpl
mov
inc
mov
add
xor
xchg
mov
inc
scas
in
sub
call
xorl
out
inc
sbb
nop
into
decl
mov
xorl
in
or
idivb
sbb
fcompl
fwait
mov
into
mov
sbb
jb
pop
add
inc
pop
cmp
sahf
rclb
pop
adc
mov
or
jns
popa
cmp
xchg
xchg
jg
cs
push
jmp
dec
imul
out
sub
fsubl
enter
or
sub
push
push
jmp
daa
xchg
adc
jns
xchg
add
and
inc
add
jo
out
jb
push
in
lcall
repnz
shll
std
fs
fwait
push
call
out
cld
fidivrs
aas
lret
stos
fidivrl
rcl
mov
xlat
and
xchg
jl
inc
and
fiaddl
inc
ss
cltd
sbb
and
mov
dec
shlb
iret
aaa
outsl
rolb
cmp
mov
rorl
xor
jg
movl
jge
mov
sub
jmp
mov
push
notl
sar
test
stos
fisubrs
adc
mov
sub
loopne
dec
push
mov
pop
mov
xchg
or
cmp
pop
mov
sarl
imul
and
mov
lret
mov
push
or
mov
jl
adc
add
jge
inc
sbb
aaa
jmp
shll
push
cmp
test
dec
fdivl
pop
int
add
pushf
test
mov
scas
int
mov
dec
call
cmp
inc
sub
mov
jg
mov
inc
dec
or
out
inc
add
mov
sar
mov
lea
and
cmp
fidivs
mov
jge
and
add
movsl
inc
test
jo
mov
jle
adc
jl
jge
pop
aad
dec
int3
and
push
inc
pop
inc
mov
mov
ret
cmc
and
pop
jo
mov
daa
dec
or
push
lods
imul
jmp
inc
fcmovnu
mov
dec
cmpsl
sbb
pop
push
aas
loope
loope
push
pushf
xor
lods
loopne
add
dec
movsb
data16
jmp
xchg
inc
addl
sub
lods
out
sarl
mov
test
xlat
fidivrl
push
out
js
cwtl
ret
enter
out
clc
cltd
push
cmp
test
sbb
insl
and
sbb
into
inc
std
xor
sbb
into
xor
out
popa
jns
xor
mov
ret
jbe
mov
sbb
dec
xor
stc
ds
decb
mov
inc
or
mov
inc
add
pop
mov
and
jp
sbb
push
cmpsb
scas
sbb
imul
inc
sub
cmpsb
jnp
and
sub
mov
mov
mov
mov
mov
aas
xchg
fs
into
call
scas
loop
fcoml
lea
push
test
or
jg
push
xor
repz
pop
add
inc
repnz
inc
fdivs
xor
xchg
xchg
ret
out
dec
in
lea
pop
fwait
mov
jecxz
jbe
popf
cmpsl
xchg
lds
cmp
mov
addb
lock
mov
push
ljmp
jl
jae
out
dec
or
movsl
imul
lds
inc
sahf
xor
sbb
es
dec
and
std
push
cmc
cmp
mov
pop
imul
notl
lods
sbb
pop
iret
cmpl
pop
adc
lds
push
mov
xor
pusha
push
mov
push
test
rcrl
or
daa
mov
hlt
lahf
add
and
adc
sbb
imul
popf
cmp
inc
pop
jp
and
jo
push
pop
loope
and
outsl
jne
xlat
notl
lods
iret
mov
loope
addr16
ljmp
push
mov
mov
gs
lea
push
pusha
repz
adc
pop
mov
sbb
roll
arpl
push
cwtl
sbb
sbb
pop
inc
aam
or
call
jb
fldenv
cmp
xor
nop
orl
fcoms
pop
mov
xorl
xchg
scas
inc
and
es
das
lods
out
jl
scas
fwait
push
enter
ds
cmp
pusha
je
iret
add
movsb
ja
imul
int3
out
call
adc
nop
stc
jne
sbb
xchg
movsb
mov
lret
cmp
or
pop
mov
pop
and
push
dec
or
mov
enter
movsb
das
clc
mov
cmc
aam
hlt
cld
icebp
jmp
ror
add
xor
mov
out
sub
enter
fcomp
call
into
jae
arpl
notb
lahf
push
stos
dec
xchg
mov
out
cs
jnp
into
loop
shrb
inc
aam
or
mov
inc
add
lahf
jge
ret
push
nop
inc
jb
orb
lods
sbb
nop
pop
fmuls
add
sub
icebp
insl
in
scas
pop
mov
and
push
jne
mov
adc
mov
xchg
inc
mov
xor
xchg
lods
out
pop
add
or
int
push
xchg
push
dec
out
sbb
pop
and
inc
and
pop
roll
je
jb
dec
pop
dec
test
or
loope
push
hlt
lock
jnp
mov
sbb
dec
adc
imul
mov
lret
mov
mov
push
hlt
sbb
loop
mov
mov
sbb
add
and
mov
add
adc
jns
rorl
mov
cmpsl
aas
and
stos
imul
pop
jp
xchg
jl
dec
mov
cltd
imul
aas
mov
fildll
or
lds
adc
xor
sti
and
repnz
cmp
leave
scas
lret
pusha
fldt
clc
out
mov
xor
mov
mov
add
popf
sub
mov
push
ret
push
dec
sub
cli
js
fdivrl
shrl
enter
add
leave
add
js
sahf
outsl
lahf
sub
sahf
cmp
lret
ret
fnsave
xor
out
lcall
jge
mov
enter
je
push
mov
xor
jecxz
push
mov
push
inc
scas
mov
jnp
sub
imul
or
mov
rorl
inc
xor
jbe
inc
adc
fcoms
ds
xchg
insl
push
es
push
sbb
iret
sub
sub
aam
push
pop
sarl
mov
sbb
scas
xor
dec
fndisi(8087
sahf
sub
push
xchg
fsubrp
and
xchg
les
xor
cld
pop
repnz
jae
and
add
loope
fwait
dec
inc
or
aad
adc
loop
inc
in
add
pop
mov
pop
mov
cwtl
stc
stc
mov
test
jp
fnsave
iret
pop
outsl
lret
pop
mov
push
in
les
pop
outsl
jecxz
xchg
sar
push
pop
repnz
popf
jbe
jb
dec
dec
and
shrl
inc
bound
fimull
pop
ret
lret
insb
idivl
pop
test
loopne
ret
pop
mov
cs
jae
out
sub
shlb
out
cmpb
aaa
rorl
xchg
ljmp
dec
outsb
in
pop
int3
loop
or
repnz
add
cli
int3
xchg
push
mov
testb
mov
int3
call
daa
fimuls
pop
xchg
dec
fnsave
rorb
mov
fistpll
add
addr16
xchg
push
pop
mov
cmp
cmp
push
rolb
mov
jecxz
repnz
popa
lret
rcrb
ror
shll
gs
sub
push
test
inc
enter
cwtl
add
xchg
out
add
or
pop
sub
inc
xlat
push
sub
and
sub
popf
jg
xorb
push
ret
dec
jmp
imul
sahf
pop
aas
cmp
or
xchg
xor
xchg
jmp
xor
fldenv
and
lock
pushf
mulb
or
sbb
jmp
push
sarl
jb
push
push
push
pop
ret
fs
je
mov
leave
sbb
cmp
sbb
cld
sahf
rcll
dec
cmp
les
ficomps
sub
mov
out
mov
push
dec
jne
shlb
add
dec
xor
xchg
mov
pop
in
mov
out
mov
add
je
ss
xchg
push
cmc
mov
je
xchg
or
test
into
fildll
xor
stc
dec
loop
into
mov
jecxz
xlat
push
inc
jbe
dec
div
lods
popf
inc
push
jne
mov
cmp
andb
jb
negb
xchg
mov
lcall
mov
push
adc
dec
cli
mov
push
dec
push
push
pop
addr16
enter
dec
aas
ja
incb
jns
adc
push
adc
cld
mov
sbb
int
inc
cmpsb
mov
xor
mov
test
je
sbb
adc
pop
inc
sar
lea
pusha
push
stc
call
sahf
pusha
iret
dec
mov
mov
mov
fsubs
pop
lcall
push
push
xchg
stos
xchg
adc
sub
ss
push
in
add
fisubs
mov
iret
mov
mov
cmp
jle
scas
xchg
mov
inc
jo
fildl
out
mov
xlat
inc
loop
dec
es
mov
pop
push
addr16
add
rolb
repz
je
sbb
enter
cmp
lret
in
hlt
or
add
mov
pop
nop
loop
gs
adc
jns
dec
jns
xrelease
xchg
daa
les
fmuls
jp
fcomps
dec
iret
scas
dec
mov
add
insb
imul
mov
mov
pop
test
xchg
sub
insl
mov
and
mov
scas
cmp
jnp
call
jns,pn
fwait
bound
pop
data16
arpl
mov
sbb
cld
lahf
stc
push
mov
pop
add
mov
test
push
arpl
jnp
lock
rclb
pop
loop
push
ffreep
cmc
sub
cs
mov
int
push
scas
jl
in
push
inc
fdivl
inc
xchg
ret
lock
sbb
ss
cmp
dec
sbb
mov
jecxz
mov
je
mov
mov
jbe
push
bound
dec
mov
ja
add
scas
or
lock
push
lock
mov
fs
leave
inc
pushl
fucom
mov
mov
in
int3
out
ss
or
movsl
rol
push
cmp
gs
clc
xchg
cmp
je
pop
jns
in
mov
cmp
int3
mov
lret
iret
out
xchg
std
sub
inc
jmp
stos
aad
rolb
xchg
cmp
inc
inc
ficoms
adc
xchg
cmp
lcall
xor
shlb
cld
les
xor
adc
imul
jmp
dec
add
sub
adc
rclb
xchg
insl
enter
mov
movsl
xor
jle
mov
pop
jnp
loop
mov
sbb
cld
imul
iret
gs
adc
ss
mov
ljmp
ret
add
scas
cltd
ret
imul
lods
jge
ljmp
xchg
fwait
pslld
jmp
add
out
pop
xchg
jmp
xor
sbb
sbb
mov
ljmp
sbb
xor
mov
cmp
xor
pop
inc
inc
int
jne
cmp
es
mov
loopne
xchg
pop
xor
sub
lock
je
cwtl
cmp
cld
and
hlt
jae
arpl
inc
leave
jg
cmp
cmpsb
out
pop
pop
xlat
xchg
cwtl
inc
fcmovbe
iret
jne
push
hlt
pushf
dec
or
psubusb
int3
mov
loopne
je
add
das
popa
pop
ljmp
mov
xchg
dec
jp
dec
sbb
sbb
cld
shrb
ljmp
push
mov
or
jb
xor
shlb
mov
in
fcompl
aaa
inc
add
je
scas
sbb
adc
lods
jae
cwtl
adc
lret
jne
stos
jbe
or
jle
lds
jns
insb
push
jle
xchg
mov
rclb
jle
cmc
subb
repnz
stc
xchg
xchg
jg
fcom
pop
clc
sub
addr16
push
cmp
fnstcw
jmp
out
mov
arpl
loope
test
inc
fadds
repz
adc
lea
adc
add
and
mov
pop
stc
pop
mov
inc
sub
sub
xchg
data16
mov
ficoms
nop
int3
push
cmp
inc
rcl
jbe
jns
fisubrl
xchg
int3
icebp
ret
insb
lret
rcll
lahf
loopne
std
jno
out
insl
jb
nop
out
jle
inc
pushf
ret
fwait
pop
xor
repz
dec
jne
sbb
mov
stc
inc
repnz
and
add
mov
mov
lret
jg
add
fmulp
iret
mov
xchg
les
and
inc
stos
movl
sub
jl
mov
mov
sub
adc
xor
push
ret
jae
push
mov
xor
stc
call
push
cmc
push
addr16
fadd
stos
add
pop
or
dec
js
testb
adc
andl
outsl
mov
or
int
mov
lret
push
or
xor
fisubl
popa
int3
push
cwtl
outsl
test
movsl
xor
shll
inc
adcb
in
es
loop
jg
cltd
std
out
mov
or
insl
mov
jecxz
pop
scas
ficoms
inc
mov
je
xchg
test
sub
pop
int
and
xchg
divl
and
iret
xor
rorl
sbb
mov
lods
shlb
inc
cld
loopne
jge
jp
es
mov
or
xchg
jge
push
sub
mov
fstpl
add
out
mov
ficoml
inc
in
pop
xor
sbb
mov
into
stc
mov
call
inc
outsl
xor
sti
jne
inc
dec
or
xor
xchg
ret
fldenv
sbb
sbb
ficomps
movl
or
clc
fadds
mov
fiadds
dec
addr16
les
insb
call
jle
push
pop
lret
cmp
loopne
adc
test
cmp
mov
movsl
rol
mov
xor
sub
outsb
xlat
mov
mov
or
dec
and
repz
add
push
inc
cmpsb
push
cmc
pushf
movsb
aam
inc
sbb
das
dec
je
shl
les
add
lahf
cmp
outsb
lea
add
dec
repnz
push
sbb
inc
inc
cmp
xor
lods
pop
pop
lahf
outsl
push
jl
or
jg
addr16
out
mov
or
and
dec
adc
data16
lret
cmp
dec
imul
inc
mov
nop
lret
aad
xchg
fwait
and
cmp
shrl
dec
clc
xor
fld
mul
lret
jecxz
outsb
push
add
out
dec
xchg
jnp
mov
mov
push
out
outsb
push
dec
xor
pop
adc
cld
les
adc
pop
adc
dec
nop
ljmp
cmp
sahf
jmp
iret
and
jecxz
xchg
xchg
leave
sub
mov
ja
out
dec
inc
mov
cs
imul
rcll
shrl
fnstcw
fsubrl
mov
popf
pop
inc
loope
jge
dec
aad
lcall
shll
fs
xchg
ret
and
add
jecxz
mov
shll
mov
push
jno
jl
mov
push
or
or
add
push
ljmp
inc
mov
sub
push
in
outsb
jle
lret
adc
test
push
pop
dec
cmc
and
sub
dec
loopne
add
xor
mov
out
mov
or
dec
aaa
xor
jmp
cs
outsb
test
or
lock
aas
aas
mov
push
adc
jmp
cmpsb
movsb
mov
add
mov
out
sahf
std
mov
mov
xchg
je
add
push
les
orl
mov
jne
in
outsb
mov
mov
imul
nop
mov
xor
add
cwtl
xor
or
cmp
cmp
fstl
inc
sub
pop
mov
movsb
daa
icebp
add
ret
jl
mov
andb
mov
adc
push
pop
jno
sub
push
cmpsb
and
push
test
xor
mov
fimull
movsl
xor
movups
jmp
or
pop
fidivrs
inc
or
or
adc
outsl
jl
fwait
inc
arpl
std
pop
rclb
sbb
pushf
cmp
es
push
push
fwait
xchg
loope
loope
xchg
pop
in
xchg
sbb
xor
mov
cmp
sahf
faddp
dec
imul
pop
mov
push
xchg
mov
pop
sbb
lret
pop
push
sub
lea
xchg
xor
lahf
andl
mov
test
imul
mov
sbb
lcall
jmp
dec
mov
mov
loope
cwtl
inc
add
mov
adc
mov
incb
mov
and
icebp
cs
xchg
mov
sub
cmp
aad
add
mov
cmp
jno
movsb
testl
and
or
mov
or
rcr
mov
hlt
mov
fists
xchg
lcall
in
sbb
stos
cmp
jnp
test
xchg
arpl
push
lcall
sub
mov
xchg
out
and
addr16
pop
push
sbb
movsl
mov
mov
int
je
mov
xchg
or
push
inc
or
bound
dec
aaa
lea
adc
inc
cmp
xlat
stos
das
rorb
push
in
stc
or
popa
push
shlb
inc
xchg
pop
adc
pusha
jnp
aaa
cmp
or
xor
pushf
jg
out
or
je
xchg
cwtl
add
xor
jmp
mov
cmp
xorb
adc
ljmp
hlt
out
xchg
mov
jo
out
movq
rcr
ret
push
adc
shll
cmp
es
ret
pop
test
stos
test
lret
imul
mov
dec
shlb
andl
out
dec
xchg
inc
or
movsb
lret
sub
xchg
hlt
or
xor
je
rcl
push
push
js
repnz
sbb
inc
lock
lret
xor
gs
and
fists
xlat
jb
and
pop
inc
push
adc
hlt
sbb
add
mov
xchg
and
hlt
movups
mov
cmc
jbe
adc
mov
cs
xchg
adc
stc
leave
adc
xadd
jecxz
sub
sbb
in
cmp
jmp
sbb
mov
adc
mov
ss
stos
or
addr16
das
test
xor
mov
and
ret
pop
xor
push
or
movsb
cmpsl
mov
sahf
sahf
cmc
push
mov
cmpl
push
out
hlt
mov
pushf
sub
popw
xchg
push
inc
fmulp
ret
mov
mov
icebp
push
dec
hlt
fstps
xor
xlat
or
sti
jnp
push
jmp
mov
test
xchg
shlb
cwtl
lods
js
fs
int
inc
jge
adc
lds
stos
loop
jecxz
dec
in
sbb
inc
out
add
sub
jb
add
jne
divw
test
mov
imul
cmc
les
pop
leave
inc
cwtl
push
push
push
pop
xchg
in
mov
and
dec
xchg
push
and
clc
lcall
sub
jbe
lods
outsb
out
add
adc
movsl
pop
and
push
es
aad
pop
push
fcomip
mov
adc
push
loopne
lcall
push
xor
movsl
adc
jecxz
cwtl
or
cld
in
ljmp
fidivrl
into
iret
lret
lahf
out
int
cmp
mov
mov
dec
imul
test
aam
das
cmp
pop
into
ret
stc
jl
jp
sub
orl
clc
out
stos
pop
out
inc
test
lock
dec
imul
cltd
jle
xor
stc
scas
mov
insl
sub
add
xchg
xor
jbe
jmp
sub
aas
cmp
idivl
push
jecxz
push
lods
ss
addr16
in
mov
cmp
lock
ss
lret
mov
into
jg
inc
push
ret
mov
and
cmp
std
lods
or
mov
lods
aam
mov
rclb
adc
and
popf
add
scas
jno
pop
inc
ficompl
mov
xchg
add
icebp
lods
cmp
in
imul
push
cmp
mov
ljmp
add
mov
dec
ljmp
xor
call
mov
icebp
cmp
test
pusha
sbb
rolb
push
inc
push
rcrl
into
inc
sahf
xchg
inc
scas
imul
mov
jmp
push
out
into
std
or
fwait
cmp
dec
mov
xchg
cmp
push
loope
scas
xlat
adc
leave
xchg
jns
xchg
inc
out
test
cmp
gs
lret
pop
jno
jge
mov
cwtl
sub
push
xchg
lds
xchg
pop
mull
cmp
nop
hlt
test
and
xor
iret
dec
insl
lahf
mov
pushf
mov
mov
jo
repz
js
insl
and
cmpsb
jp
bound
arpl
inc
lods
pop
pop
rclb
les
call
es
or
cld
daa
ficoml
cmp
cmp
sahf
ret
mov
mov
sub
test
jno
mov
bound
push
in
aaa
xor
movsl
ds
inc
or
xchg
aam
aas
repz
lret
inc
mov
imul
adc
mov
push
dec
enter
cltd
pop
out
xchg
mov
push
out
xor
icebp
repnz
jno
push
pusha
daa
fs
mov
iret
pop
cmp
add
sti
push
jge
dec
orb
pop
aad
mov
leave
mov
jp
mov
int3
or
into
lretw
or
jecxz
push
pop
test
pop
cmp
scas
aas
inc
push
mov
sub
mov
leave
fdivrs
test
jb
add
in
lret
mov
leave
sbb
push
mov
mov
les
daa
scas
cltd
sub
jbe
push
mov
jnp
mov
cs
push
add
imul
xchg
fcoml
mov
xor
add
mov
cmp
cmpsb
mov
xchg
jp
jmp
xor
dec
mov
add
stos
dec
jle
enter
je
push
adc
aaa
inc
bound
arpl
push
adc
icebp
xorb
jmp
cmp
xchg
flds
xchg
iret
mov
add
es
cld
jnp
mov
push
std
stos
sub
and
sub
jne
add
inc
test
mov
sub
cld
stos
or
cmpl
adc
xor
sarb
subb
sub
hlt
inc
gs
mov
cmp
loop
test
pusha
fmuls
xchg
xor
in
pop
movsl
lcall
pop
inc
sub
mov
lret
push
mov
rolb
push
xor
cmpsb
adc
push
sbb
fsubr
adc
mov
and
cmc
pusha
push
repnz
adc
out
leave
addb
mov
je
fwait
das
lock
out
add
jg
rol
mov
in
mov
into
adc
arpl
fisubrl
sahf
add
nop
dec
pop
incl
cmpsb
idivb
pop
cmp
cmpl
xor
pop
outsb
pop
mov
mov
cmp
mov
test
sbb
std
add
cwtl
in
jp
in
lret
jb
sub
xor
mov
sub
ljmp
xchg
inc
cmp
pop
cmp
mov
ret
aas
inc
mov
sbb
pusha
enter
xchg
push
and
and
or
push
mov
mov
subl
or
pop
test
mov
or
shrl
jns
scas
jmp
jae
cltd
sqrtps
sub
fwait
movl
xor
inc
ret
jp
clc
lahf
mov
sub
or
inc
in
dec
sbbb
lods
pop
adcl
cmp
push
add
in
data16
jne
bound
bswap
and
in
adc
inc
clc
cmpsb
loop
sbb
xchg
jno
mov
fdivs
mov
js
lds
sahf
sahf
pop
cmp
icebp
mov
xchg
mov
in
jmp
pop
mov
jo
aad
es
sub
cmp
jne
lret
or
arpl
xor
loopne
dec
lods
sbb
mov
xchg
adc
bound
mov
xchg
or
dec
insl
push
enter
ret
ret
mov
scas
cmp
shlb
xchg
pop
cwtl
mov
lock
lds
ds
test
push
mov
jge
xor
sbb
test
ljmp
inc
cmpsb
adc
push
sbb
in
stos
push
xor
bnd
jnp
mov
outsb
loopne
hlt
xor
mov
dec
loopne
adc
pop
mov
xchg
and
xchg
mov
mov
mov
push
jnp
sub
icebp
push
push
cmpsb
xchg
icebp
dec
lea
dec
cmp
stc
lock
mov
mov
push
adc
and
movsl
pushf
push
mov
js
scas
jbe
enter
push
fildl
push
mov
mov
lock
mov
cmpsb
andb
mov
cmc
cmc
dec
ret
es
nop
shl
sub
mov
outsb
sub
icebp
sub
or
into
pop
cli
mov
subb
lea
in
dec
lods
ret
inc
bound
das
and
pop
aam
lcall
fnstenv
and
mov
repnz
sbb
stos
sbb
sarb
cli
jnp
mov
in
loope
jae
out
iret
test
add
dec
push
in
sub
inc
or
enter
jns
lret
inc
cmp
arpl
and
sbb
and
lret
mov
add
sub
cmp
add
lret
std
ljmp
ljmp
cmp
adc
adc
push
or
push
in
cltd
sbb
xor
add
push
shlb
bnd
sbb
xchg
fcmovnu
int
repz
mov
cli
repz
mov
dec
add
fsubl
xor
loopne
adc
add
jnp
sbb
das
mul
shrl
fistpll
fildl
sub
xchg
cld
js
rorb
cmp
cmp
mov
stos
clc
mov
sti
cmp
dec
in
outsb
and
faddl
add
inc
into
xchg
push
repnz
mov
das
mov
or
mov
mov
fistpll
lcall
fldl
push
aas
arpl
mov
mov
push
or
clc
sub
adc
push
inc
cmpsb
add
not
lcall
rolb
xchg
popa
xchg
xchg
adc
xor
and
cmp
push
jne
push
jle
or
lcall
xor
add
add
xchg
das
cld
gs
gs
outsb
test
hlt
mov
out
xchg
insb
mov
call
outsb
sbb
or
out
mov
mov
mov
fisubrl
inc
cmc
xchg
nop
xor
inc
xor
adc
out
fbld
xor
pop
dec
pop
xchg
mov
inc
sbb
ss
mov
mov
xchg
push
xor
inc
add
or
out
inc
pop
jl
fpatan
dec
and
lcall
push
shlb
sub
and
addr16
and
cld
push
sbb
mov
rep
mov
repnz
jns
push
cmp
mov
xchg
outsb
scas
push
clc
sbb
xchg
je
push
sbb
sub
add
jle
fsts
fdivrp
cld
ficomps
xchg
mov
daa
xchg
orl
aas
movsl
pop
and
and
in
jnp
cmc
lret
and
mov
pusha
xor
cmp
loopne
xchg
in
mov
test
lds
jns
pop
inc
out
out
std
add
ficoml
push
xlat
xchg
negl
sbbb
in
mov
scas
mov
push
out
and
pop
xor
sbb
in
add
mov
jne
shll
out
cwtl
popa
jmp
push
pop
xchg
adc
in
jae
popf
jp
fcoml
mov
and
inc
adc
pop
jl
sub
addr16
ret
in
scas
sti
in
int3
pop
in
movsl
jae
loope
push
xchg
dec
aam
pop
or
push
mov
jnp
in
xchg
add
and
mov
mov
repz
xchg
les
sub
mov
sbb
xchg
icebp
inc
enter
adc
mov
mov
sarl
sbb
test
lock
mov
mov
push
imul
cwtl
dec
or
popf
divl
pusha
add
data16
jp
pop
sbb
and
insb
movsl
rclb
inc
inc
adc
xor
jbe
bound
dec
std
icebp
shlb
add
out
add
lcall
pusha
sub
pop
popl
add
mov
cs
dec
repz
pop
cs
enter
ja
add
imul
dec
xchg
pushl
stc
js
lret
pop
jmp
xor
fwait
das
les
sbb
repz
loope
push
cmpl
push
out
pusha
ja
or
xor
ja
mov
loopne
or
shrl
xor
cmp
lock
lock
call
mov
push
or
lea
jmp
sbbb
push
out
test
ret
lock
into
in
push
lahf
in
sub
es
enter
idivl
decl
mov
lock
cmc
cmc
pop
dec
sbb
mov
pop
push
test
aam
shrl
je
popa
test
sub
lret
enter
or
pop
push
cli
xor
fcomip
dec
cltd
or
cmpsl
aam
sbb
sub
popa
push
pop
sbb
and
pop
xchg
repnz
mov
leave
and
fidivrs
sti
mov
inc
ret
lahf
cmpsl
or
gs
leave
popa
sahf
adc
add
aaa
enter
jg
movl
inc
fwait
adc
in
cs
sub
and
loopne
in
rcrl
and
sbb
ja
cmp
psrlq
lcall
jp
mov
loopne
add
in
lock
ret
mov
push
push
jae
mov
mov
push
pop
and
jp
push
and
xchg
push
popa
mov
lds
mov
inc
je
dec
and
inc
repz
xchg
mov
shll
jbe
shrl
pop
cmp
cs
scas
je
iret
popl
lcall
sbb
adc
add
mov
xor
xor
outsl
fstpt
and
xchg
scas
out
pop
vmovdqa
loop
pop
mov
jbe
push
icebp
js
outsl
ljmp
stos
or
fiaddl
dec
cmp
int
mov
mov
mulb
mov
pop
cmp
lods
inc
out
xor
xchg
or
and
imul
cmpsb
test
cwtl
lods
shll
orb
adc
cmpsl
lahf
pop
lods
lds
je
and
xrstor
mov
loop
cltd
js
jg
add
jae
prefetch
cmp
sub
aad
stc
mov
stos
sbb
ret
sub
test
add
imul
lea
xchg
xor
lods
cmp
scas
sub
push
sub
int3
stc
sarb
pop
mov
test
jnp
jmp
pusha
ud2
scas
xlat
test
push
cltd
lds
orl
jecxz
test
stc
jb
test
aaa
addr16
insb
cwtl
mov
inc
push
popa
mov
shlb
pop
or
gs
cli
subb
jge
push
inc
das
add
scas
or
in
sbb
adc
adc
pop
push
sub
out
dec
out
xor
add
movsb
cli
stos
mov
mov
xor
arpl
loop
imul
adc
mov
cmp
push
or
lret
loope
sarl
cmc
mov
jnp
out
subb
adc
pop
in
sarb
mov
mov
ret
inc
fcomps
fdivl
idiv
out
fldenv
push
stos
stc
frstor
out
fcomi
mov
cmp
add
stos
imul
fwait
aad
in
push
push
cli
jno
xor
jle
mov
inc
sub
test
xor
lods
push
and
in
push
negl
addr16
or
adc
ja
pop
in
xor
clc
lcall
fcomps
jecxz
lods
and
cmp
insl
mov
sbb
cmp
es
jo
mov
pop
jmp
pop
stos
inc
bound
push
or
jno
push
fdivrl
into
movsb
pop
loopne
dec
sbb
in
bound
and
jnp
fs
aaa
xchg
outsb
add
push
sub
insb
sbb
jp
mov
jae
mov
push
sti
ret
aaa
into
xchg
repnz
sahf
lret
push
jecxz
je
push
cmp
jne
xchg
jmp
fnstenv
push
ja
jb
int
jae
adc
not
roll
repnz
icebp
lods
sub
inc
mov
adcl
hlt
lods
mov
inc
dec
enter
lret
mov
andb
cmpsb
loopne
pop
xchg
ds
xchg
cmp
ss
jmp
adc
shll
xor
insl
add
orl
jp
cmpsb
repz
adc
leave
and
mov
pusha
sub
pop
xchg
enter
bound
xchg
lock
ror
movsl
inc
int
test
popa
je
movsl
xor
repnz
push
jbe
cmc
jbe
inc
bound
jl
jb
xchg
jp
rcrl
ret
fmuls
rclb
fmul
scas
cs
insb
scas
dec
mov
fimuls
test
fistpll
mov
loop
xchg
mov
jl
jecxz
clc
xchg
rclb
out
outsl
call
shll
xchg
rcrb
sti
inc
jp
clc
in
ljmp
cmpsl
fcoml
xchg
and
notl
notl
push
sub
lods
in
jb
pushf
and
sarl
repz
jmp
mov
ret
mov
movsb
mov
mov
sub
aaa
and
ret
aaa
adc
je
out
inc
mov
inc
sub
subb
dec
mov
pop
add
rol
dec
roll
cltd
adc
xchg
stc
xor
data16
and
leave
xor
in
insb
pop
lods
stos
lret
and
xor
sahf
cltd
xchg
sub
push
push
inc
nop
mov
js,pt
clc
xor
inc
shll
xchg
push
sbb
pop
lahf
or
aaa
mov
repnz
loope
inc
sahf
popf
lret
hlt
aaa
sahf
pop
test
add
inc
adc
xchg
shll
aas
cld
xor
mov
mov
sub
mov
sarb
dec
mov
mov
mov
dec
outsb
jge
mov
cmp
ds
lds
dec
jmp
or
fwait
imul
inc
dec
data16
loopne
out
or
gs
bnd
mov
or
mov
sti
scas
inc
scas
call
add
repnz
movb
sbb
icebp
cmpsb
xchg
sub
rclb
out
das
inc
in
push
pop
mov
sub
and
clc
cmp
jno
scas
mov
popa
add
popa
mov
jo
xchg
fcmovu
jns
fcomps
lahf
fldl
sub
inc
cmp
mov
arpl
and
push
cmp
xlat
call
out
cmc
pop
cmp
or
sub
add
push
ss
scas
test
adc
add
addl
lods
cmp
xor
or
or
jno
sub
mov
xlat
aad
sub
adc
jns
les
push
xor
sbb
movsb
cmp
out
movsb
ficompl
fistpl
cmp
xor
adc
rol
fldt
shrl
or
ret
inc
mov
jb
popa
sub
jl
jnp
rorl
arpl
sbb
and
dec
lahf
inc
mov
cmp
pop
repnz
or
roll
mov
or
jne
ljmp
in
dec
jno
addr16
jl
outsb
ret
sub
das
pop
pushf
and
or
in
dec
sub
mov
pusha
cmp
cmp
shr
fidivrl
dec
sub
and
js
test
push
shrl
das
lcall
jg
pop
or
popl
mov
or
sbb
dec
adc
sar
and
jae
inc
out
inc
adc
mov
mov
ljmp
lods
jl
add
testb
inc
jecxz
mov
cmp
push
mov
mov
cs
cli
sub
or
jns
and
sbb
add
mov
cwtl
cwtl
imul
pop
stos
fdivrl
sbb
imul
stos
add
adcb
xor
xor
ljmp
cmp
sbb
xchg
lods
lds
xchg
aam
xchg
cmp
lcall
js
std
pop
hlt
out
adc
dec
xor
gs
jbe
call
rcl
mov
or
xor
adc
aas
sti
pop
nop
add
jae
dec
mov
adc
ds
scas
lds
sahf
xchg
pushf
mov
or
mov
lds
pop
cmp
je
lock
shlb
jno
jo
jmp
xor
mov
mov
out
enter
dec
cld
setp
testb
rolb
and
mov
jno
ljmp
sub
push
cmp
test
mov
push
ja
inc
stos
loopne
lods
dec
xlat
adc
jmp
arpl
dec
xchg
or
jno
pop
shlb
jmp
in
or
or
adc
arpl
push
jmp
in
mov
and
mov
push
and
test
pop
sahf
jmp
xor
cmpsl
ja
out
jp
shr
push
divb
xchg
cs
js
imul
and
je
push
push
pop
std
pop
popa
sub
fistpll
add
add
sub
test
xorl
pusha
push
verr
xchg
ljmp
out
or
cmp
cld
or
mov
pop
mov
mov
sbb
inc
mov
mov
xor
cmp
xchg
divl
push
fldenv
mov
clc
inc
mov
movsb
lds
xchg
iret
mov
xor
dec
or
lea
movsl
xor
sbb
push
push
cwtl
lcall
rorb
adcb
mov
jbe
mov
sbb
dec
stos
xchg
pop
addr16
enter
jp
push
pushw
in
mov
pop
add
or
into
or
pop
sbb
pop
push
addl
and
and
movsl
jae
pop
in
aas
jae
cli
xchg
cmp
punpckldq
xor
enter
jle
loop
jmp
lcall
or
call
les
fcompl
xor
adc
mov
mov
mov
push
mov
jge
ret
fwait
icebp
inc
dec
or
cli
sahf
mov
fmull
ret
icebp
mov
dec
iret
inc
xor
sbb
insl
xlat
mov
insb
add
mov
lods
lret
cmp
test
cmp
mov
lret
sub
mov
inc
arpl
lahf
std
jne
lahf
cs
daa
scas
pop
nop
jmp
inc
mov
int3
ljmp
pop
bound
pop
pusha
sbb
arpl
fs
mov
hlt
pusha
ror
cmp
jns
mov
add
mov
mov
rcl
xlat
pop
ja
jge
arpl
adc
xlat
mov
enter
cs
push
or
popf
mov
mov
movsb
adc
popf
cmpb
mov
nop
pop
dec
sub
mov
aaa
lahf
int3
lods
push
and
jmp
push
and
frstor
lret
pusha
call
add
jle
pop
bound
das
mov
enter
stos
int3
sbb
in
pop
lods
ret
lds
pcmpgtb
mov
in
and
mov
psllq
enter
subl
pop
xor
xchg
inc
ret
xchg
lock
lea
dec
imul
nop
pushf
sbb
xchg
test
loop
mov
add
pusha
insl
not
je
cmpb
mov
fiadds
je
cmpsl
mov
in
lea
add
inc
sbb
xchg
mov
daa
mov
cmp
adc
fidivs
xchg
or
dec
adc
cmp
repnz
out
orl
jle
jl
pushf
and
inc
xor
out
xchg
std
pusha
jmp
cmc
mov
pop
xchg
or
add
in
mov
jne
jl
jbe
lcall
loopne
roll
out
fnstenv
xor
pusha
inc
and
aaa
sub
push
flds
sbb
sub
xor
xor
xlat
push
pushl
dec
or
fists
jne
push
pop
pop
fnstenv
int3
idivl
xchg
pop
fadds
sbb
inc
cmpsb
adc
bound
mov
jle
push
sbb
lret
sbb
mov
cld
mov
ss
hlt
jp
ljmp
xor
lcall
sarl
xor
xchg
nop
xchg
cli
pop
sub
push
mov
mov
push
fwait
add
mov
or
lods
adcb
mov
fadds
cmp
negb
push
outsl
or
pop
or
xchg
sahf
mov
bound
adc
adc
push
or
xlat
fdivrl
icebp
mov
popfw
xchg
cmp
push
dec
rcrl
dec
xchg
adc
scas
and
loopne
xor
xchg
fdivrl
dec
inc
jp
sbb
ret
or
pop
ds
mov
and
popa
repnz
loop
cmp
mov
adc
popa
sbb
and
jne
ret
cmpb
adc
jle
pop
mov
pop
insl
sbb
jns
out
sbbb
dec
dec
imul
jno
fcoml
add
cwtl
js
sub
fnstenv
scas
dec
in
dec
in
xchg
into
or
fwait
mulb
pushf
ret
pop
push
dec
ja
or
cli
adc
xchg
xchg
mov
push
orb
adc
mov
inc
setg
push
adc
test
imul
mov
mov
cmpsl
ja
es
aam
sarb
xlat
push
outsb
loopne
mov
fldenv
test
sbbl
push
imul
jmp
std
shl
gs
fbstp
jae
xchg
push
insl
add
movsb
das
push
push
sbb
popa
mov
ss
inc
mov
stos
lret
pop
pop
cld
jmp
xor
cmp
push
jbe
stc
add
cmp
test
cmc
cmovno
pop
and
mov
cmp
cmp
ficomps
imull
stos
and
xchg
mov
or
push
pop
ds
add
aam
shr
inc
loop
sti
in
orl
pop
and
sbb
cs
add
arpl
fcoml
arpl
test
aas
movl
addr16
pop
sarb
dec
fisttpl
or
pop
dec
aaa
mov
stos
jae,pn
xchg
lcall
xlat
stos
sbb
adc
adc
loopne
scas
rol
jno
leave
loop
mov
popa
sub
and
ljmp
nop
sub
push
mov
shlb
clc
jg
jp
and
fadds
add
shlb
adc
dec
inc
loopne
mov
out
dec
inc
loopne
fstpt
jp
pop
adc
or
push
xchg
sbb
das
insl
inc
mov
sbbl
fidivrl
fiadds
adc
or
pop
repnz
jge
inc
jmp
enter
mov
and
add
inc
pop
sbb
into
fcoms
divb
popa
xchg
pop
pop
cld
test
xor
loopne
push
cs
mov
into
mov
cli
xor
cmp
pop
lds
cli
mov
test
jo
hlt
cli
fstpt
in
mov
cltd
int3
cmp
in
mov
js
aam
out
jo
jno
push
popl
cmpsb
daa
popa
push
adc
jg
testb
sbb
jle
arpl
in
dec
push
jl
aas
pop
xchg
in
mov
xchg
inc
cmpsl
adc
shlb
pop
js
inc
sahf
imul
ss
scas
xchg
mov
dec
adc
dec
rcrl
cld
std
cmp
lret
mov
es
push
jmp
xchg
test
fwait
outsb
stos
xlat
mov
xor
cmpsl
jo
mov
les
sub
sbb
pop
inc
adc
mov
cmc
js
adc
mov
mov
lret
xchg
hlt
scas
shlb
ljmp
sub
and
mov
jbe
add
adc
mov
out
add
xchg
jo
sub
mov
dec
mov
cld
ja
jns
inc
leave
stc
mov
jge
pop
adc
iret
loopne
enter
jb
cmp
inc
push
mov
pop
jge
and
or
mov
aas
or
outsb
aas
sbbb
cmpsb
loop
push
fstpl
xchg
push
in
cld
scas
or
test
jno
pop
std
sarl
sbb
dec
std
xlat
add
cmp
mov
sahf
mov
mov
sub
rol
and
insb
imul
jae
jmp
jns
movsb
movsb
out
cmp
sbb
lcall
in
dec
imul
mov
push
test
cmc
xor
jne
pop
stc
data16
add
sbb
mov
imul
imul
ja
xor
xchg
loop
popaw
xor
sbb
iret
or
call
jbe
movsl
shll
ficoms
pop
mov
arpl
inc
js
aad
lret
jnp
pop
cld
cmp
add
jle
mov
fistps
cmp
lea
les
push
xchg
pop
jnp
or
adc
jge
jp
rorl
out
sbb
lahf
jmp
pop
mov
mov
adc
mov
ror
subb
mov
fmull
mov
cwtl
or
cmc
add
sub
cmpsb
das
or
addr16
or
sub
icebp
insl
cmpl
adc
jl
loopne
sub
cmp
mov
cmpsb
sbb
xor
cmpsl
pushf
mov
jmp
jbe
xchg
ds
push
xor
push
mov
push
dec
dec
std
dec
mov
imul
iret
jmp
xlat
pop
scas
and
pop
dec
leave
inc
cli
sub
aad
mov
mov
adc
in
jle
cmp
inc
pusha
iret
lret
cltd
adc
ret
mov
push
fisubrl
adc
pop
cmp
arpl
pusha
jmp
adc
mov
nop
loop
ljmp
scas
sub
add
sti
aas
adc
enter
xchg
iretw
in
loop
cmp
xor
aad
mov
popa
xchg
imul
jnp
sbbb
pop
idiv
sbb
sub
fwait
stos
jae
xlat
xor
fcomp
xchg
add
or
and
jle
pusha
mov
fwait
sub
jnp
outsb
bound
sbb
shr
pop
outsl
pop
nop
dec
dec
movsl
out
movsb
mov
cwtl
imul
mov
push
adc
loopne
out
dec
xor
dec
pushf
lods
je
add
and
icebp
inc
pop
or
les
ret
or
lds
fisubrs
xor
mov
inc
lcall
inc
pop
in
stc
mov
dec
sub
mov
jns
movsb
xor
loope
adcb
cmpsl
and
inc
push
clc
or
pop
lods
test
scas
jne
aas
in
lcall
jmp
xchg
jl
fadds
fwait
stos
insb
stc
pop
ss
cmp
mov
loopne
or
pushf
pop
scas
push
outsl
cmp
xor
push
adc
xor
bound
adc
test
in
pop
jmp
dec
mov
adc
popa
lahf
pop
mov
movsb
mov
mov
dec
push
and
or
aas
aad
mov
aas
mov
add
aaa
xchg
jae
not
pop
add
aad
pop
xor
adc
lea
rorl
cmp
push
cmp
cmpsb
mov
icebp
and
pop
std
push
sbb
push
es
adcb
mov
ds
sub
aaa
gs
push
jno
call
xlat
sub
jae
in
mov
mov
push
mov
movsl
out
xor
dec
dec
and
push
xor
xchg
cmp
dec
insl
lods
jb
sbb
scas
test
es
scas
out
mov
add
or
les
test
repz
fneni(8087
jne
xor
adc
inc
jns
jp
retw
xor
mov
fyl2x
lds
cwtl
mov
iret
lahf
fcoms
adcl
xor
fsubrp
sub
out
outsb
mov
dec
adc
ds
or
or
and
rorl
incl
into
cmp
inc
xlat
jmp
test
or
pop
and
in
sbb
sbb
xor
pop
or
cmpsb
leave
lods
jnp
pop
in
insb
and
adc
in
sub
lahf
push
andb
mov
pop
adc
lock
push
dec
mov
inc
dec
push
loope
lahf
loop
fists
push
add
jl
jmp
xor
movsl
insl
cmc
sti
xchg
push
mov
mov
mov
stos
sub
mov
cmc
sub
add
out
dec
cmpsb
mov
pop
sarl
lret
int
push
mov
scas
out
cmp
loopne
out
scas
dec
xchg
scas
sbb
jo
and
lea
jno
aam
mov
fnstsw
inc
outsl
icebp
std
sbb
iret
dec
ret
repnz
shll
sbb
push
ret
xor
xor
or
mov
decl
jp
and
je
xchg
lahf
push
mov
adc
lds
ret
nop
mov
testb
inc
mov
mov
xchg
inc
mov
dec
scas
mov
js
xchg
inc
lea
xchg
ljmp
loope
pop
test
jecxz
adc
add
scas
cs
arpl
or
xchg
je
out
pop
and
adc
xor
jge
call
and
test
in
aas
mov
pop
lods
into
jo
fsubr
mov
into
pop
and
popa
push
inc
push
in
pop
das
and
pop
scas
outsl
in
inc
mov
out
inc
pop
aad
aad
ret
fs
sbb
out
repnz
dec
xchg
pop
or
push
shll
fs
sahf
outsb
repnz
out
movsb
cmc
imul
ffree
xchg
in
sbb
popa
add
outsl
scas
insl
sub
dec
test
cmc
inc
xlat
cmc
loope
mov
popf
jnp
mov
jno
or
decb
mov
dec
pop
ja
mov
push
cmc
or
inc
pop
sub
sub
movsl
daa
repnz
stos
aas
xor
mov
xchg
in
fwait
ds
sub
push
dec
loopne
add
xchg
shrb
xor
dec
ficoml
mov
xor
ret
mov
aas
mov
inc
pop
fistpl
add
fldl
adc
test
out
div
jbe
add
jo
pop
push
repnz
stc
cmp
mov
test
aam
out
push
movsb
push
stos
xchg
add
cli
cmpsl
jmp
rcr
dec
mov
cwtl
imul
fcomp
push
out
rcrl
int
loop
jb
andb
dec
adc
pop
dec
inc
or
sar
cmp
or
jnp
or
xlat
mov
add
push
aad
inc
lret
insb
sbb
lret
push
cs
mov
or
mov
imul
dec
jb
std
test
sub
jp
pop
test
fiadds
fs
in
scas
lahf
push
sbb
sub
movswl
cmp
cmp
jl
out
gs
hlt
xchg
cmp
icebp
inc
pushf
scas
add
add
insl
xchg
outsl
outsl
sbb
push
popf
arpl
mov
cmp
or
addr16
les
arpl
pop
lahf
cmp
push
inc
notb
dec
neg
cmp
movsb
popf
pop
rcr
push
or
movsb
pop
mov
aad
fistps
mov
sbb
lret
lds
lock
sub
mov
lock
sbb
call
xchg
mov
test
sbb
inc
andl
std
lret
jg
cli
or
sub
pop
ds
push
jle
fs
popf
out
pop
xchg
inc
push
je
xchg
int
and
negl
arpl
mov
insl
sub
aas
or
and
daa
xchg
jmp
or
daa
mov
loopew
scas
repnz
dec
jb
xchg
icebp
fcmovbe
movsb
dec
dec
hlt
sti
loop
cltd
cmc
test
orb
and
pop
mov
cwtl
daa
mov
rcr
push
xchg
shrl
jne
cmpsl
fcmovne
cmp
mov
dec
adc
dec
push
test
dec
lds
sbb
mov
xchg
hlt
inc
sbb
push
dec
add
cmp
out
and
cmpsb
sbb
jne
ret
cwtl
outsl
je
test
pushl
pop
hlt
addl
rolb
sub
jmp
std
mov
out
push
pop
filds
or
cltd
rcr
mov
pop
fiaddl
or
and
movsb
iret
into
or
xchg
dec
sub
mov
iret
dec
inc
inc
test
lds
sbb
repnz
iret
out
arpl
mov
dec
jno
push
ja
sbb
or
dec
mov
xlat
adc
and
jl
push
xchg
sbb
negb
mov
fisubrl
cs
cs
mov
adc
push
out
dec
movsl
cmpb
or
xor
test
add
jne
jno
lahf
mov
mov
push
inc
sub
out
shrb
enter
scas
aam
jle
fistpll
cmp
dec
adc
mov
push
fsubrl
xor
mov
push
push
adc
cmp
lock
mov
in
bound
sbb
test
sub
cmp
or
cwtl
jns
lcall
push
adc
jo
cmp
xor
push
jle
mov
push
fsubrl
loop
outsl
popf
sub
push
imul
sub
in
add
xor
sbb
dec
inc
cmp
inc
xchg
inc
clc
xchg
popa
arpl
sbb
jecxz
ret
jo
add
and
ds
jo
mov
insl
addr16
lea
out
xlat
das
roll
loop
push
adc
mov
rclb
dec
push
sbb
cltd
inc
loop
adc
test
inc
add
jmp
imul
mov
std
iret
add
jp
jbe
cmp
xor
movsl
pop
shl
dec
xor
inc
add
cmp
jle
jecxz
adc
jo
jle
mov
inc
rcll
cltd
aam
iret
xlat
loop
sahf
sbb
dec
sbb
or
dec
sbbb
inc
ds
pop
cli
mov
add
push
pop
stos
and
scas
xchg
outsb
scas
push
push
sbb
sahf
fdivrs
out
loopne
jge
cmp
push
xor
xor
and
shlb
adc
out
xor
imull
push
or
xchg
mov
or
xchg
fcomp
das
rclb
or
in
pushf
dec
sub
cmp
inc
sbb
lret
jmp
dec
xlat
dec
or
push
cmp
add
cmp
insb
in
sub
out
es
xchg
fsts
or
idiv
out
popa
sbb
insl
test
and
adcl
and
pop
fsincos
stos
jmp
hlt
icebp
xor
cmpsl
addr16
xchg
lret
test
cmp
adc
jg
xor
mov
sub
fstpl
sti
fisubrs
mov
in
xor
enter
movsl
add
shrl
test
sbb
inc
cli
cltd
sbb
andl
cltd
push
pop
hlt
mov
cwtl
pop
jbe
push
js
push
ja
jo
shrl
mov
xchg
pop
sahf
mov
push
lock
mov
sub
mov
mov
and
jecxz
icebp
sbb
aas
sub
fistl
imul
cmpl
sbb
xorb
pop
sub
inc
lods
and
mov
stos
add
inc
push
das
mov
data16
pop
push
push
jns
sbb
ljmp
inc
mov
fdiv
imulb
mov
dec
jnp
inc
push
push
xchg
sub
aam
es
cmp
call
sahf
mov
imul
out
mov
xor
movsb
push
clc
call
test
mov
or
pop
push
addr16
pop
sbb
rcll
bnd
pop
les
mov
pusha
and
cwtl
jb
mov
cmp
aad
and
pop
rcrb
mov
popa
sbb
rclb
sub
jmp
xor
sbb
xor
fldt
into
in
ror
dec
pushf
jne
mov
divb
aam
fsts
inc
leave
inc
mov
out
jbe
rcrl
shlb
xor
push
ret
adc
mov
dec
sti
mov
fcompl
nop
xchg
jmp
mov
imul
sahf
cmc
das
or
arpl
popf
mov
out
aad
lea
lods
ret
xor
cli
mov
adcl
xchg
mov
fdivrs
xchg
xchg
and
cmp
dec
fistl
inc
shrb
pusha
push
cmp
pusha
jl
div
dec
add
js
xchg
pop
jno
out
repnz
imul
clc
and
into
cwtl
clc
test
mov
push
and
push
inc
sbb
lea
clc
pop
ret
into
nop
adc
in
daa
pusha
add
mov
das
mov
mov
call
or
fdivrl
out
cmp
in
xor
cs
sub
mov
daa
shlb
loopne
in
inc
je
popa
xchg
in
add
mov
cmpsb
cli
mov
jo
inc
int
xor
clc
sbb
sub
sar
aas
dec
pop
ljmp
mov
jne
and
in
jnp
inc
fiaddl
and
or
xor
out
inc
fs
enter
jb
adc
scas
mov
dec
ss
mov
push
dec
jmp
cmpsb
ljmp
sub
repnz
sbbb
imul
push
mov
push
daa
xchg
adc
inc
cmpsb
insl
loopne
sbb
mov
or
mov
repnz
xchg
xchg
insb
xchg
sahf
mov
jmp
and
jo
and
nop
push
popl
das
mov
jge
lret
push
lcall
call
in
repnz
mov
pop
pushf
mov
inc
sar
xor
xlat
and
clc
imul
cli
mov
lods
jecxz
mov
jg
addr16
cmp
inc
or
in
push
push
icebp
jle
sub
ja
xlat
cltd
lret
mov
mov
inc
and
jno
sarl
push
sub
stc
pop
jmp
int3
mov
test
arpl
stos
sub
pop
jne
jp
push
lahf
lahf
jmp
cli
sti
pop
push
aad
pop
lahf
loope
lock
in
test
aad
push
roll
cwtl
xchg
pusha
mov
mov
in
pushf
popf
mov
lods
inc
jb
hlt
cmp
xchg
cld
sarl
xchg
push
mov
lret
sti
inc
or
sub
add
cmp
lods
jp
popa
loop
jne
hlt
test
lcall
rcr
cltd
dec
dec
cld
lahf
or
cmpsl
sbb
movsb
push
and
push
adc
out
popa
jno
dec
dec
aam
inc
aaa
cmp
das
add
cmpsb
stos
nop
mov
stos
scas
loop
mov
movsl
sbbl
sbb
jns
aaa
push
mov
push
xor
aam
leave
int3
cmpsl
rcrl
adc
mov
cmp
mov
and
imull
lds
sub
cs
jp
xor
pop
incl
ds
jmp
stos
stc
test
mov
adc
jo
lahf
nop
and
int
das
aad
fs
stos
fs
or
mov
lds
imul
mov
fwait
xor
jle
outsl
mov
jecxz
jge
adcl
dec
aaa
jbe
dec
cmp
ja
mov
dec
sti
or
aam
mov
sub
jb
enter
int3
sub
rolb
xor
adcl
xchg
xor
js
enter
adc
add
in
pop
mov
jmp
je
pop
lock
xchg
jae
lea
imul
or
push
jb
mov
mov
mov
add
ret
xor
shrl
inc
mov
rcrb
ret
aaa
movsb
subl
xchg
cltd
lahf
mov
pop
loopne
jle
xchg
xchg
xor
mov
test
xchg
leave
test
lret
outsb
xchg
aaa
cmc
sbb
mov
mov
les
loopne
push
lock
faddl
push
js
xor
xchg
movb
or
mov
jne
push
out
jae
std
fsubrs
hlt
test
adc
mov
mov
sub
cmpsb
or
loop
add
lea
gs
sub
in
rcrl
xchg
mov
xor
pop
sbb
push
cmpsl
jmp
jbe
mov
adc
add
mov
sti
adc
inc
mov
jne
hlt
xor
mov
pop
sbb
sbb
push
fbld
rolb
mov
call
lock
mov
shrb
xchg
add
pop
mov
insl
pop
fs
mov
popa
shlb
cmp
out
rorl
dec
xor
ds
movsl
inc
push
ret
les
jo
adc
das
push
pop
jp
jae
out
mov
clts
inc
cmpsb
or
into
dec
icebp
and
repnz
in
push
lret
inc
jns
jne
mov
fsubl
jne
sbb
pop
pop
mov
out
jle
pusha
stc
cmpsb
scas
js
pop
test
xor
out
loop
adc
dec
icebp
push
sbb
dec
jnp
xchg
js
scas
mov
and
int3
out
dec
lea
jno
lret
in
lods
outsb
mov
xor
dec
roll
xchg
arpl
popa
fildl
jge
fldl
int
clc
imul
in
jp
push
ljmp
jmp
shll
stc
in
fsubrl
iret
push
add
mov
negl
cld
int3
and
scas
mov
dec
xor
push
test
adc
lahf
or
mov
push
aad
push
mov
fildl
fidivs
std
test
add
xchg
push
test
and
push
jg
mov
adc
xor
and
pop
push
repz
jb
xchg
mov
push
inc
ret
cmp
jns
shlb
mov
mov
xor
test
imul
imul
shl
fsts
cs
aas
push
gs
fisttps
inc
cmp
pop
into
in
movsb
nop
xchg
add
pop
xor
jbe
adc
inc
in
movsb
movsl
in
mov
xor
sbb
ret
add
jecxz
jno
inc
inc
dec
adc
sbb
push
push
outsl
mov
ja
outsl
jl
mov
loopne
xchg
cld
rclb
popf
sbb
xor
jo
cli
shrb
fcomps
xchg
into
or
mov
arpl
xchg
push
dec
out
adc
jno
enter
xchg
jmp
popa
fiadds
pop
aad
test
push
pop
test
push
pop
xor
pop
mov
xchg
add
pop
mov
cmp
push
add
sub
and
xlat
std
lds
test
popf
mov
imul
dec
stc
clc
out
cmp
and
cmp
sbb
loopne
aaa
sbb
adc
xlat
int
bound
pop
fiadds
xor
inc
cmpsb
mov
daa
lods
or
jns
fsts
test
icebp
add
adc
loopne
xchg
in
loopne
pop
add
pop
pop
mov
cwtl
mov
push
insl
inc
test
aam
arpl
fbld
mov
xor
mov
or
jge
in
lds
and
aam
loop
sbb
pxor
push
push
dec
imul
dec
jne
mov
dec
gs
nop
shll
sub
dec
add
scas
shrb
dec
or
push
fstps
fst
or
inc
pusha
xchg
adc
sbb
pusha
mov
enter
push
int3
fs
stc
rcrb
and
pop
leave
clc
out
hlt
lret
leave
push
inc
adc
sub
and
sbb
lods
xor
sub
jnp
jns
or
jne
cmp
fidivs
shrl
pop
jb
dec
push
push
out
jmp
mov
call
or
xorl
mov
sub
push
repnz
mov
leavew
dec
sub
mov
es
and
div
pop
sub
cmp
add
jg
pop
cmc
es
enter
dec
idivl
push
lret
inc
adc
mov
and
cmp
imul
cmp
rolb
jmp
nop
jnp
and
scas
mov
cmp
fnsave
push
popa
push
outsb
xor
jg
xchg
divb
cmp
aaa
adc
call
push
pushf
add
xor
dec
push
add
lods
sbb
pop
mov
cmp
mov
xor
push
xchg
inc
mov
xchg
into
lods
sbb
cmp
pop
into
aas
test
xlat
inc
cmp
ja
or
bound
pop
out
jb
mov
sbb
xchg
push
int
push
test
xor
das
adc
or
mov
dec
push
ret
jne
bound
imul
and
sbb
xchg
dec
pop
or
sbb
scas
icebp
xchg
inc
imul
lds
push
or
mov
inc
outsb
push
pop
push
xchg
popa
std
xor
jne
loopne
lret
cli
pushf
fs
lret
daa
mov
fcompl
sub
in
loope
scas
ds
cmp
mov
sarl
int3
cmp
jno
pop
adc
ret
pop
xor
sub
sahf
fdivrs
sbb
pop
mov
scas
fisubrs
push
mov
lea
addr16
mov
inc
ss
jns
les
add
xor
adc
jo
daa
pop
daa
es
add
js
scas
into
adc
cmc
mov
loop
inc
mov
add
jg
mov
pop
mov
add
cmpsb
jb
mov
loopne
or
push
mov
or
out
flds
jl
sahf
pop
outsb
pop
loop
mov
aaa
push
xchg
adc
addb
cmp
outsl
testw
sbb
aad
mov
or
inc
aam
push
ljmp
in
mov
mov
lcall
jns
cwtl
aaa
xchg
es
in
push
ret
jg
jns
and
addr16
stc
lea
cmc
rcrl
add
inc
stos
jle
or
bound
inc
clc
push
xchg
jb
int
xor
loopne
push
stos
sbb
xor
fucomi
adc
push
add
xchg
outsb
repz
je
xchg
pop
pop
cmp
sti
add
jae
adc
data16
out
sarl
shll
lds
jp
mov
inc
adcl
int
jbe
mov
lret
test
inc
sub
pop
movb
outsb
pushf
mov
pop
jbe
je
enter
bound
fadds
sub
xchg
scas
add
aam
push
scas
inc
mov
jle
xlat
cltd
add
sarl
push
repz
sahf
cmpsb
rep
scas
les
mov
loope
push
mov
jbe
mov
je
test
test
and
lods
movsl
add
sub
stos
das
pop
xor
sahf
sbb
jecxz
mov
sub
push
fdivl
mov
or
mov
stos
jg
xor
cmp
jb
add
jmp
push
cmpsl
xchg
ret
fs
arpl
sbb
rorl
mov
dec
dec
pop
fidivrs
cmp
jns
lea
xchg
or
sahf
cmp
cmp
cmpsb
xchg
mov
push
cltd
or
ss
cmp
mov
push
mov
enter
in
test
mov
lret
xlat
sbbb
mov
push
imul
jl
sub
inc
ss
fisttpl
add
scas
inc
adc
pop
loope
int3
out
shlb
dec
pop
cwtl
test
xor
jp
lods
sub
adc
test
mov
push
push
jae
ds
les
in
or
add
mov
into
xchg
and
push
fcomps
loopne
pop
mov
inc
xchg
cmpsl
adc
lea
dec
out
or
fadds
test
test
repz
sub
sub
addr16
das
adc
push
das
push
dec
lods
adc
mov
push
sub
pop
push
test
cli
cwtl
dec
aam
scas
mov
aam
or
mov
in
fsub
jg
xchg
pop
add
mov
jecxz
fisubrl
in
push
push
jo
stos
sbb
jbe
inc
out
pop
mov
nop
pop
lods
fwait
push
movsb
dec
mov
cli
mov
ljmp
fwait
jge
clc
mov
popa
scas
cli
adc
cmp
xlat
cmc
rclw
das
lock
sub
jae
adc
xor
shlb
sahf
jo
or
in
sbb
mov
fdivrl
cltd
repnz
or
mov
pop
xor
cmc
loope
call
cmp
jne
xchg
inc
in
sub
or
fldcw
test
stos
nop
or
push
xor
adc
insl
popf
mov
mov
scas
xchg
pop
mov
mov
lods
sub
orl
lods
push
adc
sti
mov
and
xor
es
pop
or
xchg
jnp
and
push
repz
mov
pushf
mov
sub
mov
mov
cltd
cmc
jb
gs
mov
sub
rorl
pop
mov
popa
adc
inc
sbb
lods
mov
dec
imul
shrl
ret
sub
or
push
xchg
movsb
xchg
sahf
xor
dec
testb
inc
aas
shld
push
inc
lahf
sahf
imul
pop
ds
jae
dec
sbb
rclb
cmc
aas
push
fcomip
pusha
loopne
js
repz
mov
xor
movsl
jne
add
sub
sub
clc
dec
and
insb
sti
lcall
mov
imul
xchg
jb
testl
or
je
scas
mov
popa
lret
dec
pop
vpacksswb
aaa
push
xchg
push
clc
add
das
push
pop
add
adc
aaa
sub
mov
aas
sub
sbb
xchg
mov
sbb
ret
lock
lret
andb
jae
test
out
sbb
and
mov
mov
pop
pop
jecxz
inc
pop
pop
dec
shrl
xor
fs
popaw
lret
int3
xchg
xlat
pop
mov
test
mov
dec
andb
ret
das
movsb
outsl
sub
cs
jl
add
into
mov
ljmp
push
repz
adc
dec
loopne
push
out
pop
push
fldl
call
sub
xchg
insb
sub
push
ret
mov
sbb
outsl
incb
inc
add
or
and
cmpsb
addr16
sbb
and
scas
fmul
sbb
ljmp
and
mov
push
dec
fisubrs
dec
xchg
lcall
push
andl
add
outsb
fbstp
icebp
cwtl
push
cmpsl
loop
and
rolb
push
into
mov
stos
out
shrb
pop
xchg
aam
mov
scas
xchg
dec
pushl
dec
sbb
dec
jo
ss
jl
imul
in
orb
jg
adc
or
aad
sub
sti
cmc
test
push
push
cmp
and
pop
xchg
stos
cmpsb
in
out
push
xchg
rclb
dec
stos
and
in
sbb
mov
icebp
cmpsl
daa
lahf
push
inc
movsb
sbb
mov
push
mov
dec
sub
xor
and
inc
xor
aam
add
les
scas
jg
lea
sub
adcb
in
int
cmc
lods
xchg
xchg
call
sbb
pop
adc
ljmp
mov
xor
xchg
pop
das
jp
std
jo
dec
jne
mov
push
fisttps
push
cmpsb
xchg
ds
in
and
in
and
pop
push
xchg
hlt
dec
sahf
push
cmc
xchg
xchg
adc
sbb
mov
push
es
cli
pop
jne
inc
jp
testl
out
dec
jg
int
mov
cli
mov
iret
sbb
xchg
sbb
xor
push
pop
push
adc
push
insl
jmp
out
in
cs
xor
and
js
aam
mov
stc
lods
pop
stos
xor
mov
sub
out
adc
sbb
aam
repz
lock
enter
insl
inc
inc
out
fs
mov
cli
and
dec
sub
push
xchg
cmp
dec
jecxz
inc
shll
cmc
mov
push
cmp
push
and
push
sub
mov
xchg
aam
stos
in
test
cs
rcrb
call
sub
adcl
movl
dec
test
fstl
call
push
les
and
ret
cs
push
jns
lret
cmp
scas
stc
fisttps
inc
mov
push
mov
add
lret
xor
jp
int3
push
arpl
out
add
dec
mov
push
popa
test
inc
pop
leave
dec
push
stos
add
lcall
arpl
shrb
lock
lods
sub
shrl
mov
pop
es
in
lds
inc
or
pop
or
jnp
lret
cmpsb
insb
mov
icebp
aam
or
mov
push
mov
in
rorl
pop
xchg
test
fwait
bndstx
popf
imul
jmp
mov
sub
loope
cltd
ss
cmc
test
ljmp
pop
xchg
cmp
and
lret
jno
pushf
shrl
out
jecxz
push
adc
repz
mov
stc
lret
mov
dec
lock
xchg
and
push
xor
popa
inc
cmp
xor
mov
push
clc
lret
test
popf
imul
lret
fadd
pusha
inc
mov
pop
jae
loope
jnp
push
pop
fsub
xchg
or
loope
mov
lcall
cmp
mov
faddp
stc
jge
xchg
jecxz
enter
test
out
fbld
lods
sbb
xor
test
dec
gs
dec
xor
mov
sub
or
mov
mov
xor
jno
sbb
bnd
popa
mov
movsl
pop
jb
mov
je
fdivs
insl
gs
xchg
gs
lock
and
pushf
or
mov
push
sbb
les
and
incb
pushf
cli
stos
imul
imulb
enter
mov
jmp
mov
das
repnz
xchg
mov
test
mov
outsb
decb
jmp
dec
shll
or
adc
scas
rcll
shr
mov
iret
and
out
adc
lods
pop
mov
xor
pop
inc
faddp
cli
or
test
insl
pop
add
dec
rclb
push
stos
data16
mov
je
ds
test
test
inc
das
jbe
je
xor
jmp
push
sbb
ja
xchg
lret
repz
orl
sub
add
and
cmp
iret
orl
sub
cltd
int3
insb
leave
dec
or
mov
sub
push
stos
fstl
mov
aad
das
fwait
movhps
inc
insl
jp
ret
mov
aad
sbb
movsl
fldt
dec
loope
jle
xsavec
cmp
scas
cmpsb
jg
dec
jle
mov
ret
add
adc
pop
lret
sbb
fadds
cld
negl
pusha
mov
sub
lahf
xor
push
ljmp
popa
xor
popf
pop
mov
mov
add
mov
xchg
mov
mov
or
test
cmp
test
inc
mov
xor
pop
inc
lds
addr16
dec
inc
fsubp
enter
vmread
icebp
push
mull
xor
jecxz
into
movsl
push
pop
insl
les
stos
inc
push
and
mov
fwait
aad
cmpb
rol
jmp
outsb
inc
inc
push
das
mov
cltd
je
sub
scas
xor
insb
xor
push
mov
jg
in
lcall
inc
ret
xor
and
jmp
inc
mov
test
jl
dec
dec
jmp
add
jl
push
out
mov
and
leave
jecxz
push
jns
addb
bound
xor
push
clc
mov
scas
iret
push
mov
mov
je
fisubrs
addl
fnstsw
imul
push
xchg
xchg
pop
icebp
imul
cmp
push
repz
shr
fbld
lret
cmp
cmp
mov
cmp
test
cmp
mov
in
test
and
inc
repz
and
pop
das
aad
ret
adc
out
add
cmp
xchg
or
lahf
sbbl
negb
ja
mov
add
clc
jp
rclb
loop
into
jecxz
jns
mov
out
dec
pop
xchg
insb
mov
popf
scas
or
repnz
ja
sub
lahf
lods
sbb
sub
jl
xlat
dec
inc
icebp
andb
enter
scas
mov
sti
push
mov
shlb
fs
or
push
in
mov
mov
out
hlt
add
aaa
icebp
mov
shlb
jb
cs
jnp
int3
gs
inc
enter
xchg
sahf
inc
xchg
mov
mov
jle
repnz
add
cltd
xchg
jge
fwait
push
ljmp
shrl
and
add
jb
addl
xor
push
dec
int
js
mov
addr16
into
adc
cmp
mov
sbb
inc
sub
cmp
xor
xchg
scas
insl
lcall
cmpsl
and
lcall
sbb
mov
fwait
out
xchg
ficompl
roll
mov
push
frstor
outsl
mov
outsb
inc
int
push
and
into
bound
or
insb
jmp
xchg
rcll
addr16
test
mov
test
mov
aaa
jle
xor
add
fists
bound
test
movsl
ljmp
das
cwtl
clc
push
pop
test
pop
and
inc
cwtl
fucomp
lods
cmpb
ljmp
adc
repnz
bound
movsb
sub
dec
fisubl
xor
pop
or
mov
dec
cmp
adc
aas
dec
pop
adc
jb
pop
mov
mul
or
or
repnz
push
popa
xor
cmc
adc
imul
leave
adc
push
rcrl
mov
aad
cmc
pop
clc
insl
sbb
xor
idiv
mov
ds
or
inc
mov
add
popf
das
and
fbld
jge
into
fldpi
subb
loop
xor
insb
cmp
mov
sub
xor
popf
outsl
jmp
sub
mov
mov
in
add
cmp
jl
lods
or
mov
lret
mov
cmpsl
loopne
mov
mov
clc
nop
adc
adc
adcl
dec
xchg
lcall
add
bound
sbbb
pop
fwait
sbbl
stos
movntps
or
fs
fcmovne
jmp
in
aaa
add
and
xor
lods
mov
adc
out
fbld
push
mov
pop
cmp
mov
adc
out
push
psraw
int3
leave
cmp
ja
xor
clc
and
loop
repnz
mov
xchg
or
mov
in
pop
jecxz
pop
inc
clc
mov
pushl
inc
pushf
xchg
test
inc
push
adc
popf
mov
mov
js
data16
aad
mov
xor
mov
inc
test
rcl
pushf
aam
repz
loope
mov
or
xor
adc
shrb
pop
adc
in
test
mov
das
xlat
filds
mov
inc
scas
lea
enter
cmpsb
pusha
sbb
loop
dec
adc
cmc
dec
pushf
enter
jle
adc
lods
lret
pop
insb
inc
inc
ret
scas
stos
cmp
add
xlat
adc
stc
jns
pop
shll
lahf
lods
test
gs
dec
adc
out
xchg
nop
stos
mov
sub
rol
test
gs
les
clc
sti
mov
jno
ret
push
into
push
pop
iret
insl
and
add
dec
inc
aas
lret
in
movsb
popa
cwtl
out
mov
lcall
mov
jbe
and
jl
mov
rorb
pop
mov
leave
subb
lea
fadds
cld
das
inc
lret
cmp
test
sbb
idivb
das
int3
pushf
sbb
pop
adc
or
enter
es
push
mov
jbe
mov
cmp
push
push
ss
ffree
scas
hlt
push
nop
dec
or
sub
loopne
gs
pop
jne
xchg
aaa
fisubrs
mov
push
xor
mov
add
pop
push
lret
lds
jo
mov
leave
mov
jecxz
ret
test
adc
dec
mov
fmull
or
sub
xchg
shrb
mov
pop
scas
dec
and
out
fdivrs
lods
in
pop
xlat
loope
scas
cs
add
cmp
sbb
gs
out
pushl
pop
pop
enter
cmp
push
stc
aam
in
cmp
js
sub
jns
pop
mov
imul
jo
cmc
aad
lds
mov
or
mov
adc
frstor
jp
mov
sbb
push
mov
repnz
shl
xor
cmpsl
insb
adc
inc
mov
in
lds
push
push
jae,pn
jae
lods
mov
xor
int3
loope
enter
lods
xor
lahf
das
into
dec
sub
adc
out
jle
icebp
loop
imul
lods
add
lea
dec
fisubrs
fists
xchg
xchg
push
lods
aad
dec
xchg
or
and
ljmp
xchg
loope
xor
andl
mov
imul
mov
pop
pop
lods
inc
pusha
jne
repnz
mov
mov
jno
pop
or
in
movsb
push
gs
mov
pop
dec
fmuls
jge
movsb
or
les
loope
inc
popa
and
test
dec
bound
jg,pt
or
out
dec
add
sub
mov
dec
pop
mov
xchg
dec
outsb
ret
sbb
lret
push
xchg
mov
ret
xchg
mov
push
dec
pop
in
dec
mov
sbb
or
or
inc
push
bound
js
clc
dec
gs
push
sub
mov
fcoml
hlt
fyl2x
cmp
and
jnp
out
push
or
pop
lret
add
fwait
imul
push
daa
test
mov
loopne
into
imul
jnp
fisubs
rol
mov
test
fucomp
adc
and
xor
call
add
int3
fildl
xchg
sub
in
mov
and
mov
cmp
popf
add
ja
mov
pop
jae
mov
into
jae
and
cmp
mov
inc
sti
mov
fdivrp
popf
out
sbb
call
stc
jo
cmpsb
push
je
and
push
and
mov
fists
lods
inc
mov
imul
mov
pusha
nop
xor
fstpt
daa
xchg
xor
ror
lea
es
stc
sbb
inc
jp
leave
stc
ret
mov
dec
imul
mov
lea
arpl
out
ret
and
repz
sti
mov
rclb
sub
cld
addb
lret
outsl
sub
push
mov
movsb
pop
jl
ret
xor
add
popa
and
mov
fsts
daa
jp
pusha
int
out
xchg
sub
mov
jg
sbb
mov
imul
mov
bnd
push
dec
xchg
aaa
sbb
addr16
push
into
mov
xorb
xchg
dec
shlb
fnstsw
iret
aam
xchg
imul
xchg
lret
or
adc
cltd
mov
sbb
xor
in
or
xor
xor
test
jne
test
cmp
cmp
sub
mov
in
enter
adc
data16
xor
mov
or
adc
enter
xor
nop
or
negb
push
aam
add
out
or
cmp
dec
jle
mov
cmpsl
sub
popa
je
sbb
and
je
jmp
cmc
enter
out
lahf
pushf
push
jl
fistl
mov
mov
adc
int
push
cmpsb
shl
jo
jno
mov
push
cmp
push
cld
dec
inc
mov
xorb
mov
fstpt
xchg
inc
and
cmc
inc
inc
cltd
sub
icebp
and
in
ja
cmp
pop
and
outsb
add
jb
xchg
and
out
adcl
outsl
jg
cmpsb
mov
hlt
inc
jno
push
ret
mov
in
jns
push
mov
popf
mov
jnp
mov
aas
loop
xor
mov
xchg
cmp
mov
inc
loopne
jl
inc
in
mov
add
loope
pop
add
lahf
mov
xchg
in
xchg
push
pop
imul
xchg
xchg
shll
mov
fdivr
jb
test
adc
call
dec
sbb
and
arpl
insb
repnz
sahf
cmp
popl
outsl
dec
cwtl
loope
iret
mov
js
adc
push
outsb
ljmp
test
and
sub
sti
jne
shll
dec
sub
inc
jl
mov
dec
iret
repnz
out
mov
daa
rcll
lock
push
daa
push
sub
rorl
lea
sbb
cli
sbb
push
jge
inc
aam
shrb
inc
sahf
add
sub
dec
test
jno
addr16
notb
push
jge
and
dec
insl
cmp
jmp
inc
mov
mov
mov
cmp
or
scas
out
movsl
cmp
adc
fcoms
xor
imul
add
adc
pop
and
push
fs
aas
cmp
aam
cmc
push
pop
sarb
mov
cmp
mov
cmp
loopne
cmp
rol
rsm
aaa
mov
dec
pop
das
mulb
cltd
sbb
push
lds
or
xor
pop
aam
inc
mov
xor
inc
rcrb
pop
mov
nop
rcr
pop
addr16
pop
push
in
std
in
in
lret
jbe
pushf
mov
andb
mov
je
jb
mov
cmp
in
jecxz
daa
and
lock
loopne
jmp
pop
pop
push
rorl
jmp
mov
mov
cmp
and
xchg
lea
inc
dec
push
mov
cmp
addr16
and
mov
addr16
sarl
lock
mov
sahf
inc
rcrb
and
ljmp
xor
sub
mov
mov
mov
nop
mov
stos
mov
cmp
jo
jmp
xchg
in
jae
inc
stos
xor
js
jecxz
outsl
out
pop
scas
fs
ffreep
or
sub
fisubl
push
fstpl
inc
and
ljmp
xchg
mov
xor
jge
fs
movsl
das
fdivrp
aas
pop
jmp
mov
xor
bound
and
sbb
lret
dec
sbb
inc
and
pop
xchg
enter
lods
inc
cmp
pushf
cmpb
or
dec
add
jno
es
into
das
sub
dec
je
fsubl
add
mov
sub
in
imul
dec
test
loopne
jl
lcall
xchg
mov
cmp
mov
dec
and
fcoml
lret
idiv
cmp
jg
cmc
std
fists
sti
jp
lock
pavgw
xorl
test
out
outsb
in
movsl
divl
loope
ljmp
jb
test
xchg
out
adc
leave
sahf
pop
jb
adc
inc
xchg
popa
push
js
cmpsb
push
and
dec
icebp
shlb
scas
mov
mov
or
inc
dec
dec
negl
aad
fidivrl
movsb
cltd
mov
insl
cmp
cmp
cld
mov
test
xchg
mov
imul
mov
fwait
mov
in
jg
lret
jecxz
cmpsb
and
sbb
popa
sbb
popa
test
sub
adc
out
pushf
pop
or
add
add
std
test
call
mov
ret
mov
dec
pop
adc
mov
arpl
test
add
fadds
in
fs
push
sbb
xchg
int
cli
sub
pop
xchg
aad
xchg
cs
mov
mov
mulb
or
loop
faddl
lock
jle
ficomps
inc
lods
sbb
push
daa
inc
test
mov
lods
bnd
dec
ds
pop
xor
inc
mov
mov
xor
mov
push
ret
addr16
mov
hlt
fs
adc
inc
jg
scas
mov
inc
cmp
jb
push
movsb
cmpl
outsb
adcb
js
lock
icebp
mov
arpl
push
jle
cmpsb
sarb
cli
rcl
mov
mov
movb
stos
ss
inc
xchg
sub
and
push
mov
jle
and
mov
dec
dec
mov
rorl
addr16
ds
out
outsl
push
lahf
mov
or
lahf
and
data16
sbb
mov
in
data16
mov
cwtl
cmp
mov
push
xor
aaa
mov
fldl
dec
push
and
dec
mov
cli
add
jl
push
jecxz
call
imul
dec
ret
jns
push
sbbb
cmp
icebp
xorb
push
jne
cmp
divl
insl
fmuls
in
call
mov
push
cli
mov
or
fs
add
sbb
fildl
or
xor
das
pop
fbstp
test
inc
cld
cmp
leave
pop
mov
xchg
cmp
dec
mov
movsb
xor
stos
js
mov
imul
jns
sub
movsb
es
les
fnsave
int3
fdivs
and
sarb
add
clc
xor
ljmp
add
fadds
xor
inc
add
pop
or
or
xchg
xchg
adc
inc
imul
jb
das
mov
es
pop
pop
jmp
frndint
pop
mov
test
dec
jl
xchg
dec
add
test
push
dec
out
fld
data16
inc
adc
fistl
inc
repnz
xchg
xlat
outsb
std
fimuls
jp
insb
pop
frstor
xchg
repz
addb
mov
adc
cmpb
adc
add
push
xchg
or
in
pushf
mov
pop
pop
cmpsl
data16
out
aad
or
call
jae
inc
arpl
add
icebp
and
push
or
subl
arpl
rol
or
sub
push
pop
adc
xchg
subb
inc
pop
repnz
mov
sub
rcrl
mov
mov
xor
mulb
pop
subb
xor
mov
jmp
int3
jbe
push
push
das
jb
arpl
push
jbe
outsb
inc
xchg
aaa
outsb
out
daa
sahf
out
aam
into
nop
xchg
xchg
popa
sti
jae
mov
mov
sbbl
es
sub
mov
out
pop
sbb
sbb
pop
fdiv
xor
push
jmp
shlb
cmp
or
pop
dec
into
test
jo
pop
test
clc
pop
repz
inc
jne
inc
dec
loop
dec
loop
test
push
add
test
popf
popa
mov
cmpsl
mov
push
add
mov
sbbl
insb
sbb
stos
pop
cmp
movsl
pop
pop
std
leave
cmpb
clc
rolb
imul
cmpsb
in
fcoml
mov
fiaddl
outsl
int
mov
mov
nop
fcoml
xchg
enter
dec
and
sti
and
sahf
mov
push
enter
xchg
mov
and
push
cltd
scas
testb
fisubrs
les
push
cmc
push
pop
dec
hlt
push
leave
or
push
xchg
jge
fsub
sub
pop
mov
mull
push
prefetch
mov
or
test
mov
rcrb
and
int
test
pop
mov
cli
mov
pop
xchg
in
mov
data16
fidivl
leave
push
xor
cmc
ljmp
test
jmp
das
lahf
fcos
int
dec
cmc
shl
cmp
xor
mov
push
sub
loope
jbe
mov
insl
addr16
rol
repnz
pop
adc
cltd
push
loope
addr16
lds
cmp
test
pop
in
in
mov
out
sub
popa
lea
ficoml
stos
out
pop
and
jmp
jp
cmp
and
jg
xor
xchg
mov
mov
sub
push
mov
cmpsl
pop
adc
cmp
mov
cmpsb
fwait
cmpsl
cmpsb
pop
pop
and
pushf
dec
fwait
or
stc
out
sbb
test
xor
jge
mov
pushf
or
stc
cmpsb
cwtl
adc
mov
pop
jl
lods
pusha
inc
lret
fadds
or
lods
into
pop
cmp
loopne
sbb
dec
pop
mov
hlt
nop
xlat
repz
mov
dec
push
mov
nop
aad
or
mov
stos
adc
jmp
mov
push
lahf
out
mov
mov
push
xchg
ja
cwtl
fisttpll
xor
jg
or
ficompl
adc
in
push
adc
loopne
xor
rcrb
adc
cmp
rolb
icebp
sarb
repnz
shlb
mov
gs
das
jle
fadd
xor
out
jno
mov
inc
pop
add
shl
pop
aas
les
mov
cs
lods
das
push
lret
xchg
lock
pop
gs
rol
repnz
ja
jno
lds
arpl
movl
les
xchg
cmp
xchg
jmp
jnp
dec
sub
insl
xlat
and
ret
jbe
enter
mov
cmpsb
lcall
lods
adc
cmpsl
xor
jp
repz
shl
jp
test
rcrl
and
cmpsb
jmp
popa
xchg
movsb
or
cmp
sub
pop
in
xchg
cmpl
pushf
add
pop
and
bound
lahf
dec
mov
dec
push
pushl
sti
popf
shrb
push
xor
pop
cmp
jne
out
push
push
sahf
sti
outsl
outsl
xchg
std
test
outsb
pop
sub
xchg
push
and
in
cmp
jl
sbb
or
insb
jno
notl
insl
lahf
testb
aam
loopne
into
aad
or
jecxz
sub
or
sub
xchg
mov
lret
scas
iret
hlt
iret
insb
adc
ljmp
gs
aaa
adc
jae
test
jecxz
les
mov
repnz
shrl
and
out
mov
mov
xor
out
cmp
imul
lds
pop
scas
jecxz
movsl
arpl
mov
add
push
cmp
iret
jbe
sbb
xchg
jnp
sub
in
xor
out
movb
and
add
fmuls
loop
pop
jle
jne
jle
lds
xor
sbb
out
cltd
sar
fwait
push
mov
int3
mov
add
test
push
fbstp
and
aam
pop
popl
ss
rcll
add
orl
test
push
xor
jnp
adc
inc
xor
add
imul
jecxz
add
push
in
and
lock
data16
movsl
lahf
mov
push
pusha
sub
outsl
lods
out
ret
xchg
clc
jne
sbb
fldcw
aam
push
jecxz
sarl
mov
scas
cmc
mov
mov
loop
add
testl
push
js,pt
sbb
rorl
in
popa
sbb
or
stos
pushf
insb
cmc
imulb
nop
mov
jge
ljmp
andb
jno
dec
test
call
cltd
xchg
pop
jns
jno
ds
test
jmp
inc
aam
adc
and
cld
imul
push
cmp
sbb
sbb
into
sub
pop
mov
fdivrl
push
into
stos
mov
add
stos
fistl
jmp
jg
js
fs
cmpsl
jns
add
pop
shrl
mov
outsl
insb
or
pop
int
mov
mov
rol
sub
inc
dec
mov
sub
cli
mov
dec
xchg
roll
aad
das
mov
and
add
cmp
adc
into
sahf
add
push
sbb
and
out
cli
or
jnp
dec
mov
cld
sbb
shlb
and
xchg
jbe
in
rorb
and
shrb
scas
icebp
sub
xlat
and
sub
lcall
inc
aam
decb
fsubr
pusha
or
out
insb
scas
into
cmp
sbb
gs
add
cmp
add
inc
les
int3
aas
mov
mov
sti
pop
ljmp
cwtl
fwait
sub
test
cmp
jmp
and
push
pusha
mov
in
jo
mov
cmp
out
insl
test
dec
aam
add
xchg
cmp
and
sbb
lea
sbb
xor
ror
sbb
dec
xchg
add
mov
xor
pop
out
push
sbb
push
add
xchg
daa
and
xchg
push
sub
dec
cmp
mov
aad
sub
dec
push
into
jo
cmp
aam
or
xchg
rcll
js
and
and
xor
sbb
sub
rcr
pop
movsb
sar
mov
and
sub
mov
lea
sub
lds
in
test
adc
shl
fcmovnu
subl
dec
ret
add
xchg
adc
jge
cltd
dec
sbb
sub
stos
insl
add
xlat
mov
mov
mov
jp
std
xchg
aaa
enter
dec
fcompl
fdivrl
sub
inc
lcall
inc
in
lret
popf
aas
int
orb
adc
mov
lds
sub
jbe
out
dec
jl
and
mov
or
fisttpl
inc
cmp
leave
mov
push
lock
fiaddl
push
sbbb
loop
dec
mov
xchg
into
cmpsb
lds
jecxz
jge
pop
adc
cmpsl
fidivl
pop
dec
es
xor
sub
out
xchg
test
inc
mov
xchg
mov
imul
mov
sbb
out
ret
sbb
mov
add
xor
or
push
push
add
dec
movsb
cld
ja
inc
mov
lds
adc
inc
sub
jmp
testb
sbb
push
push
xchg
pop
test
mov
jns
iret
fstps
push
lds
dec
and
inc
popa
js
dec
pop
jge
pop
ljmp
mov
push
cli
and
dec
jmp
repz
test
add
scas
les
push
and
jmp
add
jnp
js
imul
cmpsb
push
adc
sbb
mov
xor
mov
fstpl
in
gs
test
sub
xchg
sub
lret
daa
xchg
sub
cmc
inc
dec
jle
push
sub
mov
or
lods
push
aam
cmp
push
inc
push
ret
xchg
add
lds
ret
jno
sbb
lahf
adc
mov
leave
push
rcll
mov
cmp
cmp
lods
cmp
jl
arpl
xor
mov
nop
movsb
rcr
es
shlb
jmp
outsl
les
aad
xor
std
out
inc
pusha
xor
mov
jg
pop
mulb
jmp
cli
or
and
cmp
mov
fcmovnu
es
push
aad
push
idivl
adc
add
or
mov
imul
mov
nop
pusha
lahf
xchg
push
shll
movsb
stos
divb
push
adc
sbb
nop
sub
scas
push
jg
stc
cmp
sbb
jo
and
test
fucomi
xlat
xchg
inc
test
adc
mov
je
out
adc
push
enter
popa
arpl
adc
push
stc
cmp
fildll
push
sbb
mov
scas
int3
ljmp
and
aam
mov
xchg
push
cmc
xor
ja
dec
nop
ss
pop
push
shll
cmc
push
add
mov
inc
sub
test
pop
or
pop
and
add
shr
xchg
sub
aaa
mov
add
xchg
jne
xchg
jge
bnd
push
data16
jne
sub
sbb
mov
in
dec
fmull
dec
xchg
lahf
add
sbb
push
out
in
adc
into
xchg
stc
pop
sbb
aad
pop
mov
lods
mov
and
repnz
cmc
daa
jge
lock
movsl
mov
and
mov
les
movsb
popa
mov
jp
inc
mov
out
sbb
or
arpl
mov
mov
or
insl
push
lock
push
mov
xor
leave
jge
je
shll
ret
cmp
fsubl
sub
sahf
rcll
sub
pop
inc
cld
call
push
lret
ds
mov
iret
mov
and
aam
rolb
cmp
aas
mov
stos
adc
shrb
jge
mov
add
xor
push
fildll
idivl
xor
int3
mov
pop
popa
shll
movsl
sub
les
popa
inc
jmp
out
jl
push
adc
jg
fmull
test
cmp
out
cmp
aam
xor
push
jbe
sti
sti
push
test
xchg
fmull
lret
hlt
jne
cmp
into
xchg
jo
rcr
mull
push
mov
mov
mov
negl
cmpsb
ljmp
nop
jmp
das
notl
mov
adc
mov
lahf
cmpsb
stos
lcall
adc
rorb
sub
pop
outsb
cmpsb
outsb
rcrl
sub
xor
ljmp
and
cmp
gs
xchg
idiv
lret
test
call
aas
rolb
mov
adc
fisubs
cli
jmp
push
lods
push
pop
mov
or
es
pusha
jmp
pop
sub
cld
mov
mov
xor
jmp
push
cmp
inc
cld
dec
imul
adc
adc
xor
stc
test
jge
aad
outsl
or
fwait
ss
int3
cmp
push
mov
adc
fistpll
in
xchg
fprem
ret
sub
dec
or
lock
lods
cmpl
or
in
or
call
test
jae
imul
inc
out
int3
call
adc
loopne
fcomps
imul
test
dec
test
adc
std
out
pop
rcr
sbb
mov
pop
dec
dec
dec
movsbl
push
xor
data16
jo
rcll
arpl
lcall
out
and
outsb
inc
sub
fs
rcrl
cli
popf
mov
sahf
mov
or
inc
lcall
xor
jnp
insb
jl
sbb
es
pop
test
dec
int
mov
adcb
lcall
lahf
adc
sbb
jo
fwait
stc
jle
xorl
cmc
push
std
je
roll
test
popa
mov
cmp
mov
or
sub
jbe
sbb
push
lods
push
into
mov
jbe
cmpsb
repz
shrl
data16
cwtl
mov
push
fsubrl
lds
and
stc
loop
mov
loop
in
insl
mov
ds
xor
ret
mov
add
int
cmp
cmpsl
cwtl
dec
or
ret
imul
ret
mov
inc
les
add
mov
pusha
arpl
jl
xor
loop
xlat
cltd
mov
push
add
cwtl
test
mov
bound
jge
bound
fcom
out
mov
pop
inc
in
aaa
dec
pop
fldenv
test
stos
mov
lret
jne
mov
movsb
cmc
add
bound
push
fprem1
iret
out
pop
jae
test
add
pop
xchg
fidivl
scas
fildll
push
push
sbb
in
cli
dec
mov
mov
sbb
pop
dec
jecxz
sbb
or
jge
jb
das
popf
dec
out
sbb
shll
dec
mov
push
jg
or
and
in
popf
push
gs
in
mov
lods
or
pop
in
jae
out
push
rdmsr
pop
shl
dec
cmpsl
cmp
xchg
pop
outsb
jmp
sbb
and
sub
loope
inc
xor
fsubrl
push
push
push
fnstcw
add
sub
xchg
sahf
faddp
cwtl
mov
sub
dec
sbb
dec
push
arpl
sbb
jmp
enter
sub
stos
sub
adc
jae
jmp
cmpb
push
xchg
mov
sbb
and
mov
daa
push
outsl
or
mov
enter
cmc
or
jbe
dec
mov
js
sbb
cmp
les
pop
sbb
mov
sbb
push
in
jns
sbb
mov
pop
cltd
or
lods
insb
cmp
sub
push
mov
in
leave
call
test
dec
in
scas
test
sub
inc
push
mov
pushf
mov
inc
test
mov
add
adc
jg
bound
mov
pop
xor
xchg
mov
or
fs
fstl
mov
inc
pop
sbb
jne
inc
mov
dec
cmp
lcall
data16
push
dec
ja
or
inc
push
push
mov
mov
adc
xchg
mov
cmp
push
mov
jmp
xchg
mov
int3
inc
add
add
jl
adc
dec
cmp
popa
mov
cmp
test
dec
out
cmp
jecxz
test
add
mov
je
rcl
jmp
lds
inc
xchg
sarb
icebp
sbb
stc
push
movsb
sbb
mov
arpl
sbb
inc
fwait
xchg
sub
dec
or
in
and
lods
or
xor
mov
pop
ss
fisubrs
add
movsb
sbb
gs
jae
out
mov
outsl
mov
sbb
fimull
sahf
pop
insl
cmp
test
push
ret
repnz
rclb
sbb
push
mov
and
decl
sub
push
sbb
xorb
mov
mov
sub
int3
xchg
push
mov
xchg
movsb
lds
mov
mulb
xchg
addb
test
cwtl
aam
adc
xchg
mov
jge
hlt
add
push
test
and
push
in
out
xchg
lea
out
adc
fdivs
push
pop
pushf
ret
out
jecxz
loopne
sub
lds
and
cmp
fmull
adc
push
cli
jp
sbb
sub
pushf
adc
mov
les
xor
in
stc
lret
mov
rcrl
mov
pop
inc
jg
xchg
jne
mov
test
loopne
sbb
and
int
stos
jl
jmp
push
sub
and
les
push
clc
cmp
add
xlat
popa
rorb
mov
pop
mov
scas
stos
decl
inc
loope
dec
ficompl
in
test
sbb
mov
jge
js
in
jnp
test
pop
push
and
push
sub
cmp
pop
pop
fstp
jmp
pop
rcrb
dec
add
cmp
jg
decl
pop
sub
or
jno
sbb
into
xchg
jno
rorl
dec
jns
xchg
shll
xlat
hlt
push
loopne
int
loopne
sarb
cld
rorb
movsb
xor
lock
das
adc
and
outsb
fcmovu
push
dec
mov
mov
push
cwtl
aaa
mov
xor
int
dec
je
dec
test
xor
loopne
scas
and
dec
insl
or
out
add
cmpsl
cltd
and
roll
sub
mov
xchg
in
dec
orb
xchg
jo
pop
ljmp
pop
jle
cmpsb
push
lahf
jmp
push
movsb
fucomip
sahf
aad
test
mov
push
je
lods
xorb
pop
mov
push
push
loope
and
sbb
add
mov
ljmp
js
mov
rorb
repz
jae
aam
inc
nop
cmp
mov
inc
mov
popl
int3
push
and
mov
cli
mov
xchg
lods
jl
sub
ret
sub
cmp
mov
inc
or
mov
lds
imul
negl
add
arpl
push
fisubs
cmp
or
lds
imul
ljmp
mov
jp
or
xor
xchg
or
int
popf
xchg
and
repnz
sub
clc
inc
cli
mov
sahf
lret
push
pop
fs
fbstp
mov
xchg
js
pop
fs
adc
cmp
mov
inc
adc
mov
jl
mov
cmp
pop
sahf
inc
cs
pop
add
subb
jae
lahf
mov
stos
ficoms
xor
int
ficompl
mov
hlt
in
jns
push
jne
aad
mov
lret
daa
idivl
xor
mov
lret
mov
dec
push
jne
pop
repz
sarb
mov
jo
outsl
test
mov
out
repnz
or
addl
pop
rcl
pushf
rolb
sahf
adc
xchg
inc
in
lret
xchg
sbb
sbb
push
js
popf
inc
push
dec
xchg
repnz
jb
in
dec
sub
das
xchg
push
xor
cmpl
addr16
js
outsl
mov
sbb
or
jns
mov
sub
sub
pusha
add
push
test
ss
fcmovnu
shr
inc
push
cmpsb
pop
scas
jo
push
movsb
das
outsb
stc
push
cmp
testl
pop
cltd
mov
sbb
add
or
pop
shr
jl
jg
les
xchg
movsl
mov
mov
inc
adc
ret
cmp
mov
hlt
mov
xchg
adc
push
sbb
push
repnz
mov
mov
sbb
inc
dec
jnp
cli
xchg
std
jmp
je
mov
lret
xor
mov
lret
adc
or
iret
arpl
mov
insl
xchg
imul
pop
cmp
cmp
inc
rcrl
bound
sub
test
cmp
jo
xlat
adc
add
or
or
pop
aaa
arpl
push
lds
lods
bound
cwtl
mov
cli
sub
lods
ljmp
push
pop
pushf
aam
iret
or
icebp
push
ja
dec
sbb
hlt
mov
mov
loop
mov
mov
movsl
jbe
mov
inc
lds
fwait
adc
gs
fdivrs
dec
add
cmpb
aad
in
lods
loope
icebp
dec
mov
sub
scas
and
ror
pop
icebp
cwtl
dec
inc
test
and
shl
iret
xlat
jl
stos
pop
fwait
add
mov
shrl
nopl
add
imul
jle
adc
adc
lods
add
loop
lock
xchg
testl
jle
cmpsb
xchg
pop
rcrb
scas
inc
pop
int3
in
sub
adc
ret
dec
sub
fsubrl
dec
mov
xor
hlt
pop
jp
imul
pop
aas
imul
jns
fdivl
stos
in
pushf
jne
arpl
mul
scas
pop
mov
sbb
dec
scas
movsl
sub
add
or
nop
inc
aaa
js
and
push
imul
sti
xchg
or
push
loop
test
and
push
test
leave
xor
dec
xchg
and
mov
push
pop
push
icebp
loope
mov
push
scas
ds
jl
in
sbb
outsl
xchg
xchg
and
loop
jl
popf
test
orb
jne
pusha
scas
xor
mov
out
cmp
outsl
mov
mov
loop
rorl
fcmovu
in
push
or
repz
jo
sbb
mov
arpl
cltd
sub
hlt
repnz
aad
mov
jbe
in
repnz
add
jbe
and
add
xchg
daa
fnsave
imul
push
rolb
cmp
int3
cld
or
mov
xchg
movsl
fmuls
jnp
jo
pusha
movsl
or
sub
sbb
pop
xor
pop
or
ret
cmpsb
pop
xlat
int3
pop
lods
insb
or
scas
xor
or
in
and
jp
out
mov
rolb
leave
pop
test
shll
out
imul
stc
ret
std
or
jno
xor
ja
mov
sbb
xor
pop
sahf
push
jbe
inc
dec
push
pop
mov
test
jo
mov
push
xchg
xor
push
inc
inc
dec
fwait
pop
mov
out
dec
inc
jae
inc
pushl
les
notl
mov
das
out
mov
mov
fadds
enter
aam
aad
adc
fsubs
and
stos
inc
scas
inc
xchg
orb
movsl
shl
js
or
jmp
mov
mov
das
cmp
mov
adc
loope
inc
xchg
sti
fistpll
lock
push
repz
mov
sub
jns
inc
lret
cmp
pop
pop
mov
lret
xlat
ret
lret
push
sbb
in
xor
push
das
ss
stos
repnz
daa
sub
lahf
aaa
sbb
sbb
push
sbb
xchg
test
sub
out
push
jmp
stc
imul
clc
pushf
leave
inc
xor
sbb
xor
mov
add
decl
sahf
push
mov
mov
daa
or
nop
mov
sub
into
sub
push
fisubs
lea
adc
adc
sbb
paddusw
mov
mov
pop
dec
stc
cmp
jnp
mov
cli
ljmp
out
sub
push
xchg
insb
add
xor
outsb
test
mov
sbb
push
ficoms
push
out
in
add
testb
into
stc
inc
or
inc
lcall
cmp
jle
js
cmpsb
sbb
inc
fcoml
mov
lret
popa
mov
mov
xor
or
mov
lods
mov
push
mov
sarl
jbe
addr16
jbe
lea
sub
push
adc
insl
movsl
or
fs
jle
clc
add
mov
sbb
mov
push
popa
daa
popf
in
and
push
scas
stos
sbb
ja
ja
jl
bound
roll
lock
int3
test
mov
cmc
xor
push
outsl
in
dec
dec
les
adc
cltd
nop
pop
mov
cwtl
repnz
hlt
outsb
mov
stos
xor
popa
in
movsb
add
fs
in
cli
int
mov
int
repnz
fnstsw
hlt
lahf
iret
mov
dec
sub
scas
enter
mov
sub
mov
xchg
test
pushf
xchg
imul
pop
mov
and
nop
lcall
in
in
outsl
cs
cmc
pop
or
lret
enter
adc
aas
iret
jae
shlb
xor
cltd
mov
xchg
push
dec
movsb
sbb
into
xchg
subb
cld
loopne
fildll
xor
adc
jge
or
inc
push
mov
push
sub
adc
lcall
cli
sub
addr16
aaa
xchg
icebp
test
or
xchg
cmpsl
jae
sarb
cld
xor
les
test
xor
in
in
xorb
test
lea
jp
sti
xchg
and
sbb
mov
jne
ds
cmp
call
out
clc
rclb
imul
mov
pop
aam
shll
int
cmp
inc
lds
push
insb
mov
daa
cmp
stos
lea
call
repz
mov
inc
pop
jmp
scas
mov
std
lahf
icebp
ja
dec
inc
movsl
xchg
test
mov
jns
imul
popa
ja,pn
lds
jmp
or
loop
sbb
and
mov
ja
mov
push
jp
mov
or
sbb
mov
jle
scas
test
push
imul
jo
pop
cmp
sbb
sahf
lret
popa
xchg
xor
out
pop
adc
dec
jg,pn
idivb
pop
mov
jns
sbb
push
das
xlat
sub
ret
mov
pop
pushf
inc
cwtl
out
xor
aaa
cmp
cmc
jecxz
push
popa
mov
jmp
push
mov
inc
xlat
mov
jnp
sbb
xchg
fmull
and
cwtl
loope
popa
or
cs
das
in
imul
and
xor
inc
inc
pop
mov
xchg
adc
int
push
adcb
sahf
pop
call
sbb
insb
cli
add
adc
sub
fldt
dec
mov
addr16
mov
bound
mov
xchg
cmp
roll
jo
iret
inc
pop
push
je
sub
and
fstp
test
nop
cmc
jns
lret
inc
add
sarb
stc
daa
dec
cmp
mov
sbb
add
push
and
pop
adc
hlt
jecxz
push
fmuls
pop
cld
dec
pop
xchg
loopne
add
xchg
shlb
inc
inc
add
fnstenv
imul
call
or
into
leave
int3
testl
cwtl
mov
insb
jmp
dec
stc
mov
clc
sub
xor
add
test
mov
cli
mov
mov
xchg
sbb
inc
jmp
out
push
jge
mov
xchg
xchg
xchg
pop
scas
cmp
or
loope
mov
jecxz
jge
imul
shll
mov
je
roll
mov
xchg
movsb
push
jle
int3
lret
mov
arpl
in
jp
xor
xorl
inc
mov
xor
icebp
adc
stos
push
shrl
fidivrl
inc
mov
pop
add
jns
icebp
xchg
shlb
jnp
jne
adc
rcrb
iret
xchg
and
stc
int3
ret
xchg
std
pmullw
and
test
jecxz
mov
pop
mov
sub
and
mov
sahf
mov
mov
dec
xor
jns
pushl
sbb
shll
sbb
pop
lds
inc
sarl
mov
mov
test
pusha
pop
enter
mov
or
mov
repz
sahf
test
inc
mov
mov
stos
inc
sbb
out
shrb
insb
jl
sbb
mov
add
shrb
pop
ss
pop
test
xchg
inc
in
push
aad
pop
pop
scas
lods
mov
and
dec
push
sbb
addr16
pop
xlat
jns
in
cmp
push
int
push
loop
mov
rol
mov
sti
outsb
xchg
push
mov
ret
pop
fidivrs
lds
mov
xor
dec
mov
fincstp
push
xor
addr16
ficoms
stos
cmp
popf
mov
setno
outsl
jecxz
inc
push
mov
pushf
cli
push
into
fnstenv
ds
adc
or
shlb
andb
sarl
scas
add
loop
mov
cmc
sbb
shrb
inc
or
loopne
sahf
xor
stos
xchg
dec
xchg
in
in
xor
jnp
or
adc
cmc
xor
insl
push
or
fldenv
cwtl
adc
cmpsl
inc
cmpl
sbb
xchg
fldt
inc
jmp
jnp
jne
mov
add
mov
repnz
xor
cli
mov
xor
aaa
cmp
cltd
jmp
idivb
lahf
clc
lcall
jmp
fldcw
les
dec
push
cmp
push
xchg
cmp
vunpcklps
add
sbb
loopne
int
test
push
mov
and
pop
mov
xchg
mov
cmc
push
vmovaps
or
mov
xchg
lea
stos
adc
arpl
add
fisubrs
popf
sbb
add
in
pop
pop
add
jl
stc
cmp
xlat
aaa
pop
push
sbb
jmp
sbb
or
xor
and
and
ds
mov
mov
dec
data16
dec
add
pop
jecxz
jmp
invd
fistpll
insb
in
mov
sbb
jne
cmp
aas
add
jge
shll
mov
mov
roll
imul
sub
je
daa
into
loope
in
imul
or
loope
pop
mov
mov
out
mov
repnz
jge
pop
int3
enter
mov
enter
add
mov
jmp
decl
les
sub
add
mov
imul
or
flds
xchg
in
mov
xchg
test
push
test
sbb
push
fsts
das
cmp
inc
and
inc
mov
mov
sub
sub
cwtl
cmc
mov
add
jle
xor
loopne
or
fisttps
pop
aam
pop
or
and
mov
jb
test
cmp
inc
sub
add
pcmpeqd
aaa
in
mov
push
xor
fs
test
dec
push
push
adcb
mov
fwait
or
cmpsb
out
js
or
sbb
lret
jg
inc
mov
pop
cmp
push
popf
leave
mov
adc
add
xor
ds
push
push
roll
into
test
push
ss
in
jbe
push
aas
ds
pusha
sbbb
leave
cmp
ror
or
nop
pop
fiaddl
push
int3
stos
leave
lea
jg
mov
and
inc
mov
cltd
pop
fldl
mov
aas
push
divl
lret
into
lods
mov
mov
pop
loopne
inc
dec
in
mov
lret
in
or
jne
inc
mov
jl
jb
mov
and
int3
jo
out
adc
pop
lret
adc
popf
and
mov
mov
pop
cmp
pusha
rclb
jbe
out
pop
fcomps
and
sub
cltd
xchg
cmp
add
sbb
cmc
aas
lods
push
outsl
push
lret
test
je
std
sarb
pop
lahf
mov
mov
sbb
imul
popa
stos
jae
mov
and
push
cmc
xchg
sar
push
push
nop
pop
insl
mov
lret
and
gs
jle
add
xchg
in
jnp
push
fsubrs
xor
jmp
cmovb
es
shrb
popf
adc
xor
mov
mov
jecxz
add
sbbl
mov
cli
pusha
jo
push
adc
nop
in
or
add
daa
sub
outsl
jmp
rcll
and
jp
xchg
cmp
cmc
cmp
std
mov
xor
nop
clc
mov
mov
ficomps
or
sarl
std
mov
shlb
sub
addr16
mov
dec
xchg
dec
inc
addb
ljmp
movsl
jns
cmc
out
xor
xor
scas
test
std
jle
add
fldcw
mov
aam
mov
bound
test
sub
out
shll
or
xchg
aad
daa
loope
sbb
cmp
inc
rcl
aad
insl
jl
adc
dec
clc
push
sbb
sbb
mov
dec
cmp
pop
add
pop
fcompl
cmc
rsm
cmp
mov
in
aaa
push
out
push
xchg
fdivrl
popa
inc
push
add
push
jl
stc
xorb
sbb
call
popa
mov
cmc
jg
rcl
inc
add
hlt
mov
adc
test
and
add
fiaddl
and
or
push
mov
mov
mov
inc
adc
ja
shr
pushf
fadd
popa
ljmp
mov
imul
inc
fwait
cmp
sti
aas
enter
sbb
mov
int3
jb
mov
aaa
dec
insb
add
shlb
movl
or
xor
push
faddl
sub
or
push
mov
shrb
es
inc
mov
stos
pop
lods
mov
add
into
aaa
je
push
aaa
aam
test
jbe
or
imul
mov
andl
ja
test
data16
cmp
or
xor
aam
test
daa
std
dec
iret
and
inc
aam
fwait
mov
sub
stc
xchg
dec
add
dec
xchg
pop
dec
add
add
pusha
das
arpl
cmp
subb
mov
pop
aaa
pop
pop
fnop
call
mov
cmpsl
scas
das
jns
sbb
mov
arpl
sbb
dec
sbb
call
jle
ds
test
mov
enter
stc
negb
rcll
ror
js
sbb
cwtl
adc
test
jb
push
dec
gs
cmpsb
sub
lock
stos
pop
data16
or
mov
xchg
cmpsb
imul
rcrl
mov
sbb
fstps
ds
pop
cmc
outsl
mov
sub
out
imul
dec
ja
outsb
jmp
sarb
mov
lret
adc
add
scas
stos
insb
xchg
inc
rorb
xchg
outsb
addb
push
cs
jno
lahf
sbb
jo
enter
mov
xorb
mov
arpl
inc
mov
mov
sbb
mov
or
mov
pop
dec
ja
adc
or
arpl
inc
mov
mov
xor
xor
dec
sub
pop
jne
lahf
push
sub
call
lock
cmpsl
sbb
sbb
pushf
xchg
or
xchg
lds
cwtl
ficomps
int3
and
sbbb
jno
iret
rorb
adc
outsl
pop
and
and
testb
movsl
cmp
shlb
sub
sarb
sub
rcrb
jmp
sub
inc
pop
shll
jmp
push
les
mull
lahf
xor
stos
lret
adc
fsubl
cmpsl
int
cmpsb
insb
cmc
sbb
add
adc
lret
insb
pusha
test
sbbb
sub
test
bound
sbb
inc
stos
movsl
js
and
and
fistpl
mov
adc
pusha
mov
fisubrs
xchg
mov
movsl
imul
out
mov
pop
mov
lods
push
mov
in
inc
or
sub
pusha
into
mov
lahf
xchg
pop
mov
ljmp
push
xchg
in
fsubrs
ljmp
cmp
clc
add
movsb
and
inc
or
pop
lods
ret
mov
dec
stc
inc
in
int3
add
mov
lods
push
lds
idiv
xchg
xchg
out
leave
ret
enter
inc
sub
gs
jle
jno
arpl
into
sahf
mov
add
jge
pushf
add
inc
insl
ret
sbb
dec
jl
mov
adc
pop
push
pop
pushl
addr16
pop
pop
lea
dec
or
inc
jl
stos
mov
cmc
hlt
inc
push
dec
inc
into
sbb
or
sbb
pop
shlb
push
in
and
cmp
cmp
mov
inc
mulb
fnstenv
xchg
dec
cmp
adc
sti
data16
icebp
imul
cli
sbb
icebp
cs
mov
leave
or
sahf
mov
popl
xor
push
fisttps
sub
std
mov
test
loopne
push
cmpsl
jl
mov
jae
adc
loope
jmp
ret
push
xchg
mov
xor
das
mov
inc
pop
xor
inc
inc
scas
out
movsb
gs
jge
lds
icebp
lcall
or
xor
cmpsl
xchg
mov
mov
cmovo
das
loopne
fstpt
loop
jne
repz
leave
jne
lds
stos
sub
dec
sysexit
pop
cs
xor
ret
adc
mov
jns
add
enter
xchg
out
call
das
setb
mov
lods
les
repnz
sub
lcall
pushf
cmc
jmp
add
mov
add
xchg
incl
bound
fcmovnu
mov
cld
stos
push
sbb
in
loopne
mov
rolb
dec
mov
pop
pop
inc
lcall
movsl
out
or
cmpsl
mov
jp
out
or
iret
nop
imul
sub
test
dec
jb
sub
jmp
rcll
jns
jns
mov
push
mov
mov
sub
inc
ficomps
gs
inc
cwtl
adc
push
dec
xchg
fidivs
or
inc
daa
leave
lock
xchg
and
hlt
repnz
jp
stc
push
fcoms
imul
stos
mov
mov
divb
jle
insl
popf
clc
push
test
xchg
pop
aaa
push
insb
xchg
sub
fsubs
mov
es
out
sub
mov
xchg
push
scas
fs
xor
or
xchg
imulb
pop
bound
xchg
bound
jo
jno
push
pop
ficomps
int
and
adc
add
pop
aaa
out
lret
cli
jp
sub
sahf
aaa
in
jb
rorl
iret
fsts
ljmp
and
in
sub
not
mov
fs
arpl
enter
out
xor
add
inc
mov
jo
imul
or
xchg
fnsave
ds
daa
pop
xor
js
dec
addr16
lds
mov
and
dec
push
scas
mov
pop
or
into
fisubl
lcall
mov
outsl
add
ret
not
push
dec
stos
mov
dec
rclb
js
push
stc
addr16
pop
enter
xor
dec
inc
ret
sbb
mov
dec
test
add
aam
hlt
mov
dec
cmpsl
inc
jg
fstps
insb
int
xor
push
aas
mov
add
mov
pusha
je
ja
loopne
adc
insl
insl
cmp
cmpsb
and
cmp
shlb
les
int3
pop
sbb
shll
andb
dec
dec
je
sbb
push
dec
stos
mov
test
shrb
and
shlb
adc
mov
in
lahf
stos
or
nop
adc
mov
out
jbe
push
bound
add
iret
dec
je
cmp
call
cli
dec
xchg
sbb
and
fiadds
psubusb
pop
pushf
scas
popa
mov
adc
mov
add
mov
sti
xchg
les
vmovdqa
xchg
cwtl
fldl2t
push
cmc
jb
loopne
loopne
addr16
push
aam
xchg
mov
mov
inc
sti
test
out
mov
into
push
mov
cmp
iret
scas
or
scas
loop
in
imul
and
and
jnp
out
push
inc
daa
fistpl
sbb
mov
sub
ja
push
inc
cmpsb
cmp
xchg
lea
jne
int
cwtl
sub
mov
ja
push
xchg
lock
jbe
repnz
xlat
or
in
adc
pandn
mov
xchg
ljmp
jnp
inc
fstpt
into
out
xchg
adc
jnp
add
rcrb
push
cmc
fwait
add
and
leave
and
gs
jg
loopne
mov
adc
hlt
xchg
jecxz
outsl
dec
or
inc
push
mov
dec
push
xchg
insl
jae
xor
dec
in
dec
mov
and
incb
xchg
in
sub
add
cmp
les
xchg
outsl
daa
mov
lods
rol
mov
or
jecxz
int
jno
les
mov
out
xor
adc
cltd
inc
jecxz
bound
add
out
push
push
cli
lahf
in
cmp
fcmovnu
dec
bound
aam
mov
push
jecxz
sub
testb
sbb
jle
aad
sub
xor
pusha
xor
cmp
fimull
ljmp
inc
cmp
pop
jns
ljmp
inc
call
push
lods
ret
cmpsb
lods
jmp
push
pusha
push
ret
sti
mov
sbb
in
jne
call
popa
mov
pop
add
push
imul
and
daa
mov
leave
jecxz
dec
outsb
clc
sbb
add
stos
test
adc
jp
aad
mov
pop
mov
insl
lret
ss
adc
push
push
push
mov
push
imul
shlb
mov
jl
sub
clc
mov
mov
dec
xchg
hlt
push
jl
loope
dec
cmp
jb
mov
iret
sbb
mov
out
stos
dec
push
mov
sub
fucomp
add
lods
ret
xor
test
add
cmc
mov
push
mov
jo
pop
jge
fstps
push
mov
jmp
adc
or
xlat
mov
cmp
pushf
mov
or
push
aam
inc
testb
sub
add
pop
shrd
rcl
out
pop
andl
testb
testb
pop
aaa
add
testl
cmp
aam
pop
cmpsb
jb
and
jb
addr16
stos
or
js
or
pop
lret
cmp
jb
push
aas
rorb
mov
mov
push
sub
push
jne,pt
repnz
inc
orl
mov
test
inc
inc
mov
jb
cmp
stos
xchg
insb
and
jbe
inc
ds
outsb
mov
inc
ljmp
cld
cmpsl
fimuls
push
sub
dec
fsubl
push
fs
aam
jb
sarb
jl
xor
sub
js
and
lret
ret
push
add
insb
cwtl
add
jbe
pop
stos
repz
and
and
jae
add
mov
mov
and
ss
xchg
or
pop
addr16
aaa
outsb
xor
add
in
add
mov
fs
pop
imul
jae
or
sbb
push
mov
cmp
fisubl
sub
jle
add
xchg
in
cmp
xchg
sub
mov
aam
stos
pop
sbb
xchg
mov
sub
push
es
push
leave
pushf
add
mov
in
xchg
mov
xor
sub
pop
ss
iret
jecxz
pushf
mov
pop
xchg
fsubl
sti
inc
jb
pop
mov
rorl
aam
xchg
cld
imul
xor
push
mov
add
loope
adc
push
data16
jg
nop
add
mov
andl
pusha
mov
and
iret
insl
mov
mov
xlat
mov
lock
inc
test
int3
adc
shlb
mov
sahf
mov
fdivrs
jecxz
mov
in
xor
imul
movsb
pop
xchg
adc
sarb
fldl
ja
andb
xor
fbstp
mov
iret
sbbl
xchg
lcall
bound
ret
xor
loop
bound
mov
mov
jno
sub
pusha
mov
popf
push
cmpsl
xchg
jmp
xor
push
test
pop
lods
or
jns
pop
out
xor
mov
daa
inc
pop
roll
rclb
pop
xchg
daa
popa
les
push
dec
ljmp
es
push
or
add
mov
mov
xchg
cmc
shl
push
lods
add
test
dec
ret
and
fcompl
push
push
fcomps
sbb
push
mov
jg
sbb
add
rol
mov
scas
lcall
in
imul
pcmpeqb
dec
or
aam
enter
loopne
fimuls
jecxz
fnsave
inc
add
inc
ds
add
push
xchg
jnp
mov
test
das
leave
cmp
fisubs
cmpb
pushl
inc
adc
ss
sbb
or
sbb
out
pop
mov
add
push
xchg
aam
inc
lahf
roll
movsb
into
stc
call
pop
sbb
cmp
adc
mov
rcrb
mov
lcall
rcrl
les
aaa
movsb
inc
xor
ds
add
cmovge
les
cmpsb
adc
iret
mov
loop
rcr
jecxz
sbb
pop
test
mov
lcall
fdivrl
insb
pop
into
mov
adc
outsb
push
jo
rcrl
loope
cmp
les
cmp
jae
sbb
pop
mov
insw
jle
test
fstps
imul
leave
neg
std
lods
call
ss
xchg
pusha
mov
sbb
mov
mov
cmp
les
pop
popl
push
mov
push
aas
jnp
add
xchg
add
ja
ret
insl
add
cmp
js
push
popa
pop
or
aam
fsubrs
out
xchg
scas
inc
gs
push
in
out
lret
movsl
ret
mov
mov
sub
cmp
xor
inc
daa
push
repz
lea
jmp
frstor
adc
push
leave
mov
pop
push
add
cmp
and
int3
or
mull
inc
dec
faddl
add
stos
pop
push
mov
or
push
ss
lcall
fcmovnu
fwait
repnz
movsl
jg
pop
sbb
int
incl
fistpll
shrl
sub
mov
movsb
movsb
test
dec
push
loopne
stc
sarb
mov
pop
mov
iret
cmp
cs
insl
in
fisubrs
ljmp
xchg
hlt
and
mov
xor
mov
data16
pop
mov
fidivl
nop
pop
sub
pop
adc
imul
std
add
jb
sbb
push
xchg
out
in
repz
add
sub
aad
sahf
jp
ficoms
test
hlt
mov
mov
insb
sub
add
scas
das
and
jecxz
testb
push
into
and
ret
out
stos
loop
cmc
sub
dec
call
es
cmc
cmovg
sbb
adc
fnclex
or
rorl
ljmp
dec
dec
inc
push
xor
dec
dec
nop
push
adc
fimull
jnp
std
mov
out
cmp
and
in
out
add
mov
out
pop
leave
inc
add
test
push
enter
push
rcll
cmp
outsl
adc
sahf
outsl
movsb
loope
adcb
or
fcmovnb
xor
mov
frstor
pop
mov
mov
cld
mov
sbb
int3
or
xor
add
loop
pop
mov
jl
push
movsl
mov
add
fwait
sarl
scas
push
xchg
mov
pop
xchg
sub
pop
xor
sbb
sub
cmp
or
push
adc
push
pusha
sub
mov
and
xchg
inc
adc
out
add
outsl
add
movsl
push
dec
out
lcall
xor
nop
or
fistps
adcl
or
dec
repz
call
gs
fnsave
xchg
mov
insl
push
pop
inc
pop
mov
cmp
arpl
aad
pusha
pusha
in
fnstenv
xchg
inc
fs
lret
aaa
push
xor
adc
and
xchg
aas
data16
mov
jmp
xor
cltd
ret
sbb
bound
sbb
es
dec
cmp
js
pop
and
pop
fwait
pop
fldl
bound
mov
stos
cmp
jns
jae
je
jno
pop
mov
sahf
shlb
ret
lret
mov
dec
inc
ficoml
icebp
jp
xchg
sub
push
js
mov
lret
lret
add
int3
xor
cmp
fdivrl
outsb
lcall
push
scas
out
call
popa
jp
pushf
fldenv
cltd
push
icebp
mov
xchg
clc
and
imul
in
mov
cli
push
mov
sub
lea
and
mov
adc
insb
xchg
scas
sbb
sub
push
jb
mov
in
mov
stc
pop
rcrl
icebp
sub
fistpl
pop
or
adc
je
popa
in
xor
aam
gs
push
mov
rclb
mov
repnz
xchg
roll
test
fsubp
cmp
outsb
and
rorb
jnp
inc
add
out
dec
aad
cmp
and
int
ja
mov
xor
pop
insb
out
mov
push
or
aad
push
push
mov
insl
stos
and
add
stc
mov
adc
fs
pop
ficoml
push
cli
push
and
sar
bound
push
clc
movsl
cmp
iret
pop
adc
out
les
cld
das
or
add
push
mov
jno
pmaddwd
jb
loopne
shlb
add
test
jbe
xchg
imul
ret
dec
out
fsubs
inc
pop
xchg
xchg
adc
sub
jge
rcll
cld
lret
cmp
dec
pop
push
fldl
pushf
pop
xor
inc
cmp
inc
sub
bound
jge
sbbb
aam
mov
loope
mov
dec
flds
sahf
mov
cmpsb
sub
mov
out
dec
imul
movsb
nop
bound
clc
shlb
push
jns
out
add
xchg
jae
push
lret
aam
lcall
aam
sbb
inc
aam
inc
pop
push
pop
sbb
ljmp
inc
push
add
scas
inc
xor
jae
in
icebp
in
jbe
sub
mov
cmpsl
lock
lret
and
push
xchg
decl
sub
cmp
push
pop
ret
out
imul
jns
cmpsl
or
and
scas
push
pop
jo
xchg
sbb
add
test
aad
mov
or
adc
xchg
stos
movsb
cli
or
mov
push
dec
popa
orl
int
sub
lahf
ja
push
in
jns
lods
clc
push
out
cmp
out
cmpl
or
inc
leave
dec
xchg
push
jb
jo
int3
call
adc
pop
clc
nop
pop
pop
and
mov
test
fldt
in
inc
jo
sbb
adc
sub
js
or
xorl
xchg
mov
push
adc
clc
xchg
xchg
loope
mov
or
and
sbb
test
leave
mov
add
dec
xchg
jbe
xchg
aad
xchg
cmp
pop
cwtl
or
adc
cmc
mov
cmp
pop
sub
or
lret
cmpsl
xor
in
xchg
mov
mov
xchg
pop
mov
sub
xor
mov
shr
mov
rol
fimuls
sub
popa
pop
lcall
xor
cmp
sub
push
cmpsb
jp
cwtl
pop
popa
insb
and
push
outsl
adc
popf
add
ljmp
mov
sub
push
hlt
outsb
sbb
pop
mov
outsb
lret
mov
ret
mov
pusha
cli
in
and
sub
fdivl
das
dec
inc
notb
xchg
jae
fwait
fs
cmpxchg
stc
shrl
mov
xchg
in
push
dec
shlb
sub
scas
sub
rolb
call
xor
mov
stos
aaa
mov
cs
fcomps
gs
mov
cwtl
push
jmp
jne
mov
dec
mov
dec
mov
lods
outsl
mov
pop
jno
jne
lods
pop
inc
ds
hlt
or
ret
push
mov
adc
andl
addl
mov
add
push
shll
shl
cs
lcall
or
pop
addr16
ret
out
pusha
arpl
cmp
imul
mov
outsb
jle
or
dec
pop
rcr
inc
sub
or
xor
push
dec
fistl
test
mov
or
mov
sahf
repnz
cmp
cmc
movsl
dec
adc
inc
mov
lret
or
imul
fcoml
icebp
movsb
cmpsb
daa
mov
icebp
lret
nop
and
pop
test
std
sbb
xchg
aas
add
sarb
inc
imul
scas
fdivrp
leave
jb
into
cmp
mov
mov
adc
dec
enter
push
jmp
jp
mov
sub
bound
lret
bnd
enter
imul
cmp
sbb
xchg
xchg
inc
mov
push
std
mov
popf
fdivs
or
sub
jge
ret
xchg
sbb
lods
mov
ljmp
jecxz
cmp
insb
sbb
jno
test
adc
into
arpl
repnz
dec
mov
les
sti
cmp
and
cmp
inc
push
mov
jbe
jae
stos
add
addr16
adc
je
adc
cwtl
add
aad
fisubrs
je
xchg
cmp
cmp
inc
dec
push
xchg
xor
movsl
mov
lock
cmp
cs
mov
lods
out
lods
lahf
mov
pop
inc
in
mov
dec
jge
mov
daa
or
jmp
mov
mov
cmp
inc
lods
lods
cli
outsb
divl
scas
rolb
pushf
xlat
xor
fstpt
mov
xor
adc
cmp
push
fwait
mov
arpl
mov
xor
jmp
aad
push
pop
jbe
lret
inc
cmp
cmp
js
test
js
pop
arpl
stos
lods
aas
in
div
adc
nop
repnz
rcrb
pop
mov
aaa
gs
sbb
pop
mov
and
pushf
inc
lea
push
sbb
icebp
sbb
movsb
imull
addr16
mov
stc
xor
jge
mov
aas
insb
push
pop
add
pop
sub
cmp
sub
inc
inc
sbb
cld
ret
loop
loope
or
out
lods
adc
push
add
xchg
sbb
sti
ja
mov
adc
cli
sub
mov
int3
xor
sub
imul
sub
and
push
insb
xor
dec
xchg
stc
stos
icebp
dec
sbb
add
fsubrl
stc
mov
decl
sahf
and
mov
pop
es
outsl
rolb
notl
fsubrs
jge
and
jo
fstp
scas
inc
pop
sub
adc
clc
xchg
cmp
gs
fstpl
bound
sbbl
xchg
cmc
fucom
scas
and
xchg
nop
push
sub
leave
xchg
mov
dec
inc
jne
rorb
popa
fstpt
mov
lahf
inc
or
push
dec
lcall
jecxz
test
faddl
movsl
stc
xorb
mov
stos
scas
insb
sub
jle
push
xchg
push
or
outsl
cli
mov
subb
daa
inc
cmc
popa
inc
and
testl
nop
sub
pop
push
xor
stc
adcb
fidivrs
cmp
jecxz
push
cwtl
jb
and
push
std
add
aam
unpcklps
mov
jnp
mov
and
scas
fadds
pop
gs
fwait
daa
dec
nop
inc
mov
lret
fs
cmp
mov
mov
push
dec
adc
pop
xchg
stos
inc
mov
mov
inc
adc
cmp
mov
mov
or
pop
popf
jno
push
fsubp
sbb
xchg
addb
add
lock
outsl
add
pop
inc
test
pop
insb
notb
dec
fucomi
mov
mov
and
sbb
xor
scas
mov
fstps
je
divl
cmp
arpl
inc
pusha
fidivl
decb
aas
and
pop
cmc
jbe
add
in
jns
sbb
push
mov
pop
pop
aam
enter
add
adc
pop
das
pop
fmul
ljmp
pusha
add
aam
sub
cltd
mov
mov
arpl
ret
addb
push
push
int
loope
or
sub
push
jl
mov
pop
sub
sbb
xlat
gs
push
and
movsb
ret
jnp
popa
pop
or
cmpsl
push
pop
sti
sbb
cwtl
pop
dec
pop
dec
push
fcmovnu
add
outsl
add
pop
cwtl
enter
xchg
lahf
out
jle
cwtl
ja
mov
push
fs
dec
push
sub
mov
cmp
xchg
sbbb
push
push
sbb
insl
shll
pusha
scas
mov
or
dec
ficompl
lods
dec
or
out
js
movl
repnz
cmp
or
lahf
xchg
mov
adc
imul
sub
cli
mov
jnp
fimull
aam
cmp
lcall
add
xor
hlt
pop
sahf
shll
pop
xor
xchg
sbb
cli
push
insb
mov
aas
dec
insl
ret
mov
fcmovne
test
popl
mov
jmp
dec
int
fcmovb
adc
push
shlb
and
cltd
jns
arpl
pop
cmp
sub
pop
jnp
cmp
ret
lods
mov
mov
inc
mov
jg
out
and
lods
lods
xor
ja
mov
and
jle
push
pushf
lea
adc
and
sub
cmp
xchg
clc
stos
lock
or
push
add
sti
into
push
lods
addr16
loope
stos
and
sti
add
test
jo
rorb
pushf
ficoml
jo
inc
jmp
xor
cmp
add
dec
insl
xor
pop
xor
jns
fsubr
mov
sbb
mov
pop
lds
pop
jae
in
fnstcw
aam
push
mov
popa
sbb
lods
cmpsb
sub
mov
cmp
xlat
cld
pushf
insb
xor
bound
and
pop
in
ret
dec
jo
sbb
pusha
mov
fs
popf
mov
jae
adc
lahf
dec
xchg
dec
test
mov
daa
jl
jg
xchg
xchg
cmp
cwtl
dec
pop
test
xchg
mov
jg
repz
xor
xlat
jmp
dec
inc
mov
aad
outsb
add
lret
ret
pop
in
fisubrs
mov
jge
mov
lds
pusha
outsb
packuswb
seto
clc
outsb
cmp
jns
pop
add
pop
sub
xor
sub
rol
and
dec
inc
adcb
pop
pop
fwait
out
dec
xor
sbb
jg
jns
lock
or
in
fstps
jle
in
xchg
add
call
mov
je
push
xchg
les
movsb
dec
or
mov
sub
sub
cmp
mov
mov
ja
push
lds
fstps
call
clc
sbb
stos
cmp
test
mov
xchg
xor
mov
gs
stc
int
repnz
xchg
or
xchg
cltd
subb
ljmp
jne
lahf
out
xchg
hlt
mov
mov
ja
inc
dec
mov
pop
sbbl
sbb
xchg
jb
xchg
jnp
gs
push
pop
lods
mov
or
popa
mov
push
sti
fsubrp
sbb
iret
push
insl
sbb
movsl
scas
add
into
jno
out
jnp
stc
mov
les
out
loope
pop
pop
lods
out
jp
cwtl
das
adc
pop
repnz
popf
fimull
pop
insb
mov
adcb
jge
xor
aam
sbb
repnz
orb
punpckhdq
mov
ret
and
adc
rol
je
jg
test
pop
mov
out
ss
add
rorb
inc
test
mov
mov
or
xlat
testl
pop
cmp
push
inc
imul
mov
dec
mov
add
cld
in
sub
jp
lea
mov
or
push
nop
lahf
pop
sub
dec
lret
inc
dec
jmp
mov
or
data16
mov
push
sarb
mov
pop
inc
and
rcrl
addl
mov
fldt
inc
mov
sbb
and
movsb
aad
sbb
mov
mov
out
xchg
dec
add
dec
fistpl
push
mov
adc
fsubrp
mov
xchg
xlat
int
outsb
and
in
sub
and
ja
mov
push
arpl
sub
test
jle
or
cmp
cmpsb
add
fnstenv
ds
mov
sub
push
loop
push
stc
ficoms
data16
sub
ljmp
sub
mulb
push
push
mov
pushf
fistl
popf
pop
rcr
shld
fdivs
ds
cli
dec
dec
adc
jg
cmp
dec
push
pushf
test
sbb
inc
sub
add
mov
cmp
inc
inc
adc
out
cmp
jns
push
push
loopne
ret
cmpsb
pop
xchg
pop
repnz
ret
insb
jb
dec
into
pop
xchg
jp
cmpl
loope
xor
cmpsl
shrb
lcall
sub
sti
pop
mov
gs
adc
out
dec
in
dec
sbb
add
cmp
sub
cltd
sahf
aaa
lods
dec
leave
cmpsl
mov
loopne
mov
cld
test
insb
cmp
leave
je
cwtl
pop
daa
xchg
inc
ljmp
rcr
add
mov
adc
sub
mov
ljmp
mov
or
test
sbb
repnz
cmp
push
or
sbb
or
mov
loop
int3
scas
test
push
xchg
icebp
jae
movsl
outsb
mov
lds
push
push
push
and
mov
fwait
cmp
push
cmp
push
mov
popa
push
test
gs
mov
repnz
add
scas
xchg
mov
adc
aad
xchg
shlb
adc
xor
push
add
scas
movsl
out
pop
or
aam
lods
or
aad
xchg
loope
mov
inc
adc
ljmp
jnp,pt
dec
inc
pop
stos
and
daa
cmp
shll
movsb
cmp
xor
fdivl
jns
in
inc
leave
pop
dec
in
sbb
sbb
mov
or
les
inc
and
scas
mov
xchg
add
lds
stos
out
sbb
and
jmp
push
ds
sbb
push
mov
and
sub
out
test
or
and
sub
sbb
dec
xchg
addr16
xor
sarl
jge
adc
jo
inc
inc
icebp
mov
sub
adc
out
lret
mov
or
push
sbb
adc
imul
lea
test
sti
xchg
xchg
test
or
lock
outsb
out
bound
nop
or
ss
inc
and
pop
xchg
inc
pop
icebp
seta
push
cli
stos
cmpsb
and
out
cld
fdivrl
mov
sbbb
bound
dec
push
aas
iret
adc
and
in
scas
mov
mov
loop
sub
xchg
cld
repz
dec
pop
cmpsb
inc
xor
sub
faddp
xor
leave
ss
cmpsl
xor
dec
jmp
jo
repz
inc
jecxz
dec
or
mov
push
int
push
mov
cmc
pop
xchg
mov
lock
aad
test
adc
and
clc
adc
xchg
jecxz
xchg
push
sub
jne
outsb
inc
or
dec
fidivs
cli
aaa
dec
fstpt
dec
mov
loope
sub
lods
sbb
out
aam
ret
jo
cli
cmpsb
aaa
pop
arpl
nop
mov
fdivr
mov
mov
movsb
faddl
inc
or
test
pop
and
scas
ds
in
orb
enter
adc
fisttps
imul
mov
xor
fildll
aad
jmp
loopne
and
lahf
mov
addr16
xor
mov
xchg
xor
pop
fisttps
cmp
xor
hlt
out
les
data16
add
inc
mov
pop
arpl
sub
mov
fmull
les
sbb
bound
fcoms
sub
addr16
pop
mov
dec
dec
in
scas
pop
orl
inc
enter
dec
push
test
mov
decl
lock
ds
sbb
addr16
or
popf
iret
loop
test
ds
adc
test
fadds
or
mov
lods
mov
adc
mov
jge
fistl
shlb
pop
in
or
adc
scas
aad
xor
dec
insl
adcb
pop
ljmp
cmp
gs
sub
dec
mov
inc
xchg
inc
xor
xchg
mov
mov
push
or
xor
push
sub
dec
and
pop
pop
pushf
mov
xchg
popf
cwtl
sub
scas
cmp
lret
inc
adc
ds
imul
inc
mov
push
push
jno
loop
or
ljmp
call
cmp
mov
in
and
in
sub
push
les
mov
into
sub
add
xor
sbb
sti
pop
push
out
xchg
in
xor
jge
repnz
maxps
mov
pop
hlt
outsl
jge
aaa
add
xchg
pop
popf
cld
pop
inc
and
sub
xchg
mov
das
xor
test
ds
dec
cmp
in
es
sub
mov
push
lds
mov
jo
cmp
loop
dec
sub
mov
adc
aaa
xor
mov
mov
cmp
mov
insl
push
repnz
cmp
ja
lods
leave
aas
ffreep
in
test
cmc
mov
stos
mov
jae
mov
mov
pop
pop
jbe
mov
mov
out
xchg
pop
mov
sahf
jne
std
sbb
xor
pop
and
pop
xlat
sar
clc
lea
inc
sarl
pusha
fwait
add
in
mov
icebp
sub
jl
or
mov
cmp
test
lock
mov
sbb
dec
fistps
loop
aad
sub
aas
cli
inc
or
dec
sbb
arpl
mov
inc
add
mov
dec
clc
inc
test
mov
pop
jmp
or
xchg
sbb
jnp
push
adc
jo
lock
jge
ror
push
pop
and
adc
lahf
and
xchg
mov
rcl
mov
or
rcrb
jecxz
dec
cmpsl
call
and
cltd
mov
ds
arpl
cld
pop
or
or
in
adc
loop
pushf
shrb
xor
cmp
and
mov
test
ja
int
aam
mov
mov
subl
pushf
adc
cmpsb
xlat
sbb
pushf
cltd
repnz
scas
xor
push
movsl
lods
sti
adc
rolb
mov
movsb
or
mov
ljmp
push
jge
lcall
aam
cwtl
lcall
push
je
imul
js
jmp
subl
add
sub
mov
ret
ret
add
iret
scas
add
cli
push
pop
push
add
arpl
loop
add
cld
mov
lcall
pop
mov
sub
test
dec
adc
dec
add
repz
mov
ljmp
pop
sbb
scas
ds
push
clc
pusha
dec
ficompl
jg
jns
sub
jae
sahf
out
jecxz
cltd
mov
cmpsb
adcb
nop
jg
test
jge
imul
outsl
xchg
in
fistl
mov
test
jb
xchg
repnz
xchg
jmp
jle
jmp
pop
dec
adc
sarl
pop
imul
lcall
gs
clc
jecxz
ficompl
pop
sbb
sarb
inc
xor
mov
jp
inc
push
add
adc
push
push
adc
sbb
aaa
mov
jo
mov
push
inc
shlb
sbb
popf
xchg
popa
jmp
cmp
jae
movsl
subl
sti
inc
adc
xor
lahf
nop
xchg
inc
leave
sub
xor
lock
gs
arpl
test
add
mov
loopne
sub
dec
notb
repnz
outsl
or
hlt
mov
clc
pop
push
sbb
add
xor
cmp
xor
sub
das
test
fstpt
mov
lahf
aam
mov
lods
dec
js
clc
test
mov
push
pop
xor
lods
fmul
mov
dec
cmp
pop
stos
mov
xchg
push
ljmp
xchg
outsl
pop
rorl
in
das
or
inc
and
popa
mov
sbb
sbb
cmp
fistps
pop
mov
lcall
into
negb
out
ja
dec
jp
add
js
add
push
ret
andl
ja
aas
xor
outsb
dec
icebp
xor
test
imul
or
mov
mov
push
repnz
push
mov
aaa
sub
test
nop
adc
xor
popf
mov
dec
adc
fdivrs
dec
inc
test
outsb
sub
cmp
sbb
jmp
mov
pusha
in
sti
push
inc
sub
sbb
lods
xor
mov
or
and
jb
xchg
outsb
push
ss
mov
repz
out
add
xchg
int
cmp
shlb
iret
scas
sbb
mov
test
enter
inc
scas
and
test
in
push
out
dec
imul
mov
out
mov
xchg
xor
ds
lfs
xlat
pop
add
aas
pusha
popf
and
fisttps
sub
sub
push
add
xchg
pusha
shll
mov
xor
pop
sbb
sub
dec
pop
lret
enter
jmp
mov
jb
mov
push
sahf
in
pop
adc
ja
mov
fstps
outsl
mov
inc
mov
adc
pop
mov
sbb
push
jnp
jo
test
mov
push
mov
add
enter
sbb
jp
outsb
xchg
repz
and
cmp
inc
std
call
push
pop
cltd
neg
jne
stos
xor
aad
inc
cmpsl
imul
sub
mov
pushf
cli
sahf
les
add
imul
sub
sub
xor
out
inc
stc
or
popa
cs
aam
push
add
das
js
mov
cmp
jmp
fidivrl
mov
insl
jns
lcall
fidivrl
cltd
cmpb
int
add
stos
pop
sub
pushaw
cmp
mov
aas
addr16
ret
addr16
xchg
mov
push
jo
xlat
pop
imul
lahf
xchg
out
fisttpll
test
nop
lret
push
sub
imul
shrl
aam
sahf
mov
jp
push
sub
aam
xchg
push
xchg
or
add
pusha
or
mov
daa
aaa
dec
dec
push
adc
and
inc
insl
daa
sbb
mov
cmp
lahf
fisubrs
fdivrl
subl
mov
outsb
mov
push
fiaddl
outsl
fbstp
xchg
or
rcl
in
xchg
aad
pushf
cmp
mov
jp
dec
gs
jmp
cwtl
fwait
aam
sbb
push
xorb
pop
mov
xor
jns
mov
lret
add
push
jo
pop
lahf
ret
pop
push
inc
push
loopne
and
cmp
rol
mov
adc
add
push
mov
adc
sti
int3
sub
popa
add
add
jbe
lds
dec
xor
inc
pop
scas
pop
mov
or
pop
mov
scas
arpl
xchg
nop
mov
cmp
adcb
xchg
insb
mov
add
mov
and
and
adc
push
push
mov
mov
lahf
mov
jnp
jmp
insb
mov
sub
xchg
test
or
mov
rclb
cmpsb
fwait
loop
adc
icebp
add
xchg
jnp
ljmp
push
inc
add
cwtl
dec
subl
mov
rorb
icebp
pop
adc
std
cwtl
push
push
mov
enter
xor
out
in
out
rorw
in
les
pop
xorl
fisubrs
loopne
cmpsb
ds
loopne
sub
and
jmp
push
adcl
add
mov
adc
mov
repz
mov
mov
daa
imul
psubd
fcoml
dec
pushf
xchg
fisubs
repnz
jne
sub
sbb
jno
mov
rorl
lds
int
insl
inc
sbb
test
int3
pop
jo
cmpsb
push
shlb
adc
mov
fs
mov
fidivrs
cli
test
in
xlat
andl
cmpsl
or
or
mov
cli
mov
ffreep
es
lahf
mov
xchg
push
mov
cmp
sbb
pop
out
fldenv
sbb
sbb
sbb
xor
or
pop
inc
mov
popf
nop
movsb
sub
add
testb
jb
dec
fstpl
jg
arpl
push
aaa
int3
arpl
mulb
jns
jle
movups
fistpll
in
outsl
add
cltd
dec
jne
cmp
sbb
popa
pop
xor
and
jo
ret
xchg
insb
stos
andl
divl
jge
xor
shr
or
shll
fwait
int
xchg
mov
std
push
or
inc
lret
adc
inc
divl
dec
pop
cmp
push
into
push
mov
xor
sbb
sarb
imul
sub
xor
orb
std
fnsave
adc
je,pn
cmp
lods
out
jnp
mov
jns
sub
sbbb
rcrb
cmp
pop
dec
mov
pop
jg
lea
push
js
int3
add
push
sbb
test
mov
in
mov
leave
pop
lret
sub
xchg
imul
xchg
fcmovu
es
jge
jge
aas
daa
inc
popf
or
cmp
cwtl
js
or
jle
push
sub
push
mov
xor
ret
and
das
adc
adc
xchg
lea
lcall
mov
push
lods
add
jne
mov
xchg
push
es
lcall
pop
inc
aas
dec
xor
xor
jmp
lods
cmpb
out
xchg
out
adc
in
cs
jmp
mov
mov
pop
or
dec
cmpsl
xor
fidivl
mulb
cmp
icebp
popf
jb
out
jle
xor
dec
insb
jno
sbb
cmp
in
clc
fidivrs
sub
fisubl
lea
cs
stc
sbb
mov
stos
mov
lcall
sbb
outsb
and
imul
mov
push
sahf
push
lcall
or
inc
sbb
subb
or
jecxz
aaa
dec
stc
shll
jp
mov
cmc
mov
xchg
addb
sub
xor
xor
add
jg
test
pop
inc
shlb
jp
test
enter
and
mov
sub
push
aam
je
rclb
dec
sbb
shlb
inc
xchg
ret
or
push
mov
stos
scas
push
cs
bound
mov
adc
lea
xchg
js
mov
insb
sti
cmp
rcl
sbb
jecxz
addr16
cmp
stc
xor
jo
pop
sub
cmc
mov
dec
pop
loope
push
inc
popf
sahf
sahf
insl
cs
mov
dec
mov
dec
icebp
fwait
and
sar
sbb
xchg
inc
outsb
jne
cmpsb
mov
addr16
mov
lahf
in
stos
les
jnp
cmpsl
push
xchg
cld
and
cmc
inc
subl
jnp
cld
lcall
mov
and
sbb
mov
icebp
cmp
jbe
icebp
add
cmc
and
adc
dec
test
repnz
add
out
arpl
sub
mov
jnp
aad
push
cli
mov
jbe
es
jo
sub
mov
ss
cmp
or
or
pop
pop
dec
add
sub
lret
das
mov
addr16
fs
imul
jns
pop
cli
test
lret
mov
xchg
pop
stos
or
mov
cmpl
fimuls
add
add
xor
repz
cld
cmp
dec
loopne
nop
pop
dec
mov
loop
push
aas
and
data16
mov
cld
and
iret
sbb
sbb
jle
cmpb
imul
jl
add
jg
movsb
sub
push
addl
cmp
and
out
lret
and
adc
jl
dec
push
pop
les
popf
mov
push
sub
bswap
sub
push
icebp
dec
loopne
push
stc
cs
mull
add
fldl2t
in
push
aaa
aad
xchg
scas
xchg
mov
jg
imul
xchg
dec
hlt
insl
cmpsl
xchg
mov
push
jbe
fstpl
inc
pop
ret
shl
lods
xchg
sub
sbb
pop
pop
or
jno
popf
lcall
jmp
xchg
jle
ret
mov
and
test
mov
sbbl
nop
xor
das
imul
cld
lea
enter
jp
xor
mov
mov
push
add
jno
sub
lahf
mov
shrl
xor
data16
mov
fidivrs
mov
shl
lods
cmc
inc
dec
repnz
and
movsb
lods
cmpsl
and
push
frstor
xor
fsubrl
sub
mov
mov
mov
mov
in
cmp
and
lret
daa
stos
pop
pusha
mov
sub
sub
js
fisubrs
xorb
stos
daa
xlat
out
ds
pop
in
xor
lock
idivl
je
and
inc
es
and
push
jb
or
stos
gs
sub
or
and
loop
ret
pop
inc
cltd
push
push
cmpsl
push
add
dec
and
fs
das
dec
sbb
aas
jl
rolb
test
wbinvd
and
pop
cmp
std
outsl
shlb
xchg
in
popa
orl
lret
repz
and
aam
xorb
nop
je
lret
push
jmp
fsqrt
aas
inc
nop
in
mov
lret
mov
xorb
stc
fdivs
mov
das
mov
into
rorl
mov
nop
fimuls
ja,pn
and
cmp
jbe
popf
lods
pop
fcoms
xchg
mov
and
sub
pop
mov
out
rolb
pop
lret
repz
mov
mov
adc
cmp
test
push
test
mov
jmp
int3
or
push
xorl
das
mov
or
fwait
daa
pop
mov
jecxz
cmp
daa
fwait
imul
out
aaa
mov
sbb
out
fildll
out
out
mov
mov
repnz
clc
sbbl
in
sti
or
stos
lahf
sub
bound
stos
add
push
mov
jo
mov
xchg
pop
jge
jb
out
ret
sbb
fisubl
adc
nop
flds
imul
cwtl
jbe
das
add
je
js
or
mov
mov
cld
aas
dec
push
insb
adcb
mov
jmp
inc
insl
daa
lds
and
out
pop
mov
lret
adc
xorl
jmp
rorb
xchg
xchg
stos
cli
xor
or
push
sbb
cmpsb
sub
or
les
mov
test
sbb
sub
mov
sbb
aas
or
movsl
push
loope
ljmp
mov
subb
fsubr
inc
mov
sbbl
or
adc
mov
in
jne
je
sub
xor
fbld
sbb
in
sbbb
fwait
out
leave
into
fwait
add
ja
mul
mov
push
xor
adc
rcrb
ror
dec
mov
sbb
mov
push
mov
lret
shr
adc
sbb
insb
loope
adc
pop
xor
lret
jbe
addr16
adc
sub
movsl
hlt
jnp
push
lcall
pop
adc
aad
adc
loop
and
dec
shl
and
in
mov
pop
in
mov
int3
jecxz
xor
push
lock
cmpl
sub
ret
insl
lret
push
xor
enter
and
sbb
lcall
repnz
mov
cli
push
jae
mov
sbb
mov
push
outsl
lods
jbe
cmpsb
add
mov
sbb
gs
test
in
xchg
inc
fs
mov
push
test
rcr
xor
out
jp
mov
mov
jns
out
jb
xchg
xchg
mulps
movsb
mov
daa
mov
pop
fstps
clc
clc
push
xor
lahf
test
outsb
pop
mov
jb
mov
push
mov
xor
or
in
shlb
pop
xor
mov
sub
xchg
xor
mov
push
pop
sbb
aam
jl
push
xchg
iret
stc
stos
push
sti
pop
loopne
fwait
insl
sub
mov
data16
add
lcall
jmp
push
mov
enter
xor
ret
or
jbe
jns
sbbb
sarl
sub
add
mov
cmp
jge
std
pop
mov
add
jp
sbb
cmpsl
xchg
inc
pop
adc
mov
jae
sbb
adc
jnp
dec
push
jmp
gs
in
sahf
xor
xor
aam
adc
sub
mov
mov
bound
in
and
les
and
sub
pop
out
xchg
cs
pop
dec
fldenv
adc
xchg
pop
mov
sbb
add
mov
add
add
pop
das
push
xchg
jo
fs
or
xchg
repnz
and
or
pop
and
inc
rcrl
arpl
int
subb
in
je
and
mov
adc
out
sub
lcall
mov
lock
pop
cld
fs
dec
cmc
ss
jge
popa
jmp
fists
test
sub
imul
xor
cmp
jno
pop
je
mov
sbb
and
xchg
xor
ss
xor
mov
pushf
lahf
cmp
imul
cli
xchg
dec
adc
inc
in
pop
xchg
lcall
out
lds
inc
push
lea
mov
inc
mov
add
dec
sbb
lret
mov
inc
leave
insl
jge
xchg
xor
add
sarb
hlt
inc
push
pop
jns,pt
xchg
adc
sub
loop,pt
in
out
inc
mov
xchg
lods
push
push
nop
cltd
scas
xchg
add
jg
pop
rcr
xor
sarb
sub
loope
jmp
aas
add
enter
mov
mov
repnz
cmpsl
inc
stc
sahf
test
out
mov
sbb
rclb
mov
imul
push
jo
sbb
sbb
ljmp
push
popf
loopne
out
pop
mov
not
pusha
mov
cmc
and
inc
and
xor
sarl
rorl
lea
xchg
test
daa
pop
xor
addr16
test
sbb
xor
inc
or
jnp
popf
dec
mov
mov
pop
or
mov
push
inc
xlat
hlt
loopne
mov
cmp
insl
testl
dec
push
jecxz
jmp
mov
imulb
fcomps
xchg
arpl
fsubrs
add
iret
loopne
inc
push
mov
and
scas
faddl
test
xchg
jmp
rorl
lcall
xchg
mov
jge
jle
ljmp
scas
sbb
xor
cmp
xchg
xchg
lock
iret
pop
test
nop
xor
js
hlt
xor
sub
addr16
pop
add
icebp
or
sub
jg
xchg
and
rolb
fcoml
adc
jge
imul
push
pop
adc
mov
jnp
dec
inc
dec
cmp
adc
fisttpl
or
or
out
call
cmp
repnz
mov
jne
aas
fldt
xchg
cmp
xchg
out
add
mov
das
aas
xchg
rol
loopne
jns
ret
popf
les
sub
sub
aam
push
sub
ffree
repnz
gs
pop
or
enter
mov
paddsb
sub
fcompl
sbb
push
sbb
test
aad
cmp
clc
rorl
dec
pop
dec
mov
divl
cwtl
mov
mov
dec
es
movsb
dec
in
or
mov
rorb
push
rdmsr
mov
mov
sarl
xor
lods
xor
xor
push
test
mov
data16
inc
mov
lret
sbbl
out
jnp
push
push
xchg
sarb
jb
mov
xor
loope
inc
mov
sub
test
je
push
shrb
inc
popa
or
xor
xchg
call
sub
in
adc
jo
nop
mov
inc
push
push
into
cmpsb
test
mov
loopne
cmp
jecxz
subl
inc
lods
out
movb
mov
movsb
hlt
cmp
dec
inc
mov
pop
out
add
cmp
repnz
ds
or
cld
xchg
rclb
stos
ret
or
pop
ret
sbb
inc
inc
jbe
mov
sar
dec
mov
jmp
cmp
mov
xchg
in
test
sub
xchg
dec
icebp
or
or
cmp
icebp
ja
pop
mov
push
pusha
rcrl
cmp
push
xlat
cmpsb
xchg
in
xorl
sti
dec
mov
push
jecxz
into
outsl
jg
iret
dec
sub
arpl
dec
mov
sub
in
xchg
sbb
pop
and
in
push
mov
push
and
sub
and
out
xchg
pop
lds
or
mov
mov
sub
ret
dec
add
rclb
movsl
xlat
sub
push
popa
nop
jne
sbb
cwtl
xchg
stc
movsl
ficomps
xor
loopne
lea
in
or
lea
or
ja
loop
mov
jecxz
adc
fsubrl
sbbl
adc
mov
stos
mov
dec
out
enter
dec
xor
xchg
lds
xchg
fwait
ds
xor
mov
pop
mov
test
pop
in
outsl
lock
sub
jge
int3
dec
int3
data16
push
aaa
or
jno
push
jg
imull
pop
dec
insl
ret
dec
sbb
cld
test
inc
mov
pop
pop
pushf
push
pop
cmp
fisttps
in
xchg
add
test
xchg
test
inc
mov
push
out
lret
ss
add
jg
pop
jns
sbb
mov
push
xchg
xchg
cmp
int
push
aas
scas
jecxz
cmpsb
push
les
adc
shl
sarb
jno
mov
mov
or
cmc
dec
sub
xchg
mov
mov
jo
rcll
jge
add
testl
fwait
push
add
in
fwait
push
fnstenv
pop
mov
roll
mov
cmp
ljmp
clc
in
ret
inc
jnp
lods
mov
adc
sti
movsl
inc
leave
bound
into
xchg
mov
fistpll
pusha
cmp
pop
jg
dec
sub
mov
sti
sub
jne
loopne
stos
pop
sarl
inc
das
pop
movsb
stos
jae
movsl
sub
arpl
imul
cs
ret
jb
jp
push
hlt
in
push
inc
adc
int
dec
pop
mov
dec
stos
jg
pop
jns
add
out
sbb
sbbl
pop
and
adc
lds
jl
ret
mov
ret
sbb
adc
pop
or
mov
nop
mov
les
sub
addr16
nop
pusha
out
std
jae
and
repz
into
mov
jp
lahf
adc
jmp
sub
mov
cs
dec
lcall
adc
fnstenv
int3
in
or
adc
enter
mov
xor
cltd
pop
mov
mov
clc
sub
ds
inc
lret
push
inc
xorb
mov
cmovns
rol
ljmp
xlat
inc
pusha
push
sbb
test
push
je
mov
in
nop
in
xchg
xor
js
xlat
rorl
pop
push
lahf
pop
jmp
sub
loope
sar
mov
iret
outsb
mov
movsb
lret
clc
in
mov
adc
test
out
xchg
add
xchg
aam
je
es
sub
add
rcll
ret
sti
stc
sub
mov
mov
mov
enter
adc
outsb
aam
sub
out
push
mov
jle
add
pop
outsl
mov
popf
outsl
pop
xchg
lcall
adc
cmpsl
lahf
dec
xor
adc
dec
add
xor
out
sub
scas
or
xchg
andl
jl
push
cmp
or
push
adc
pop
adc
mov
roll
pop
jmp
and
dec
push
mov
pop
std
into
add
movsb
xor
bound
in
shrl
inc
in
std
and
push
sub
rcr
dec
shr
or
sub
testl
and
xchg
filds
cmp
inc
mov
sbb
ljmp
mov
sbb
dec
dec
push
dec
push
movsl
lea
pop
nop
lahf
bound
adc
enter
lahf
stos
arpl
mov
test
jb
mov
mul
xor
pop
jge
repnz
es
sub
stos
test
push
lds
and
fsts
scas
push
pop
adc
sbb
les
mov
popf
mov
cli
inc
nopl
pop
cmp
pop
mov
mov
push
mov
pop
into
mov
push
adc
sbb
pop
xor
fwait
adc
sbb
inc
popa
sub
xor
andl
imul
jb
outsl
jno
outsb
adc
mov
sbb
dec
out
daa
test
mov
inc
jmp
lea
jecxz
in
mov
or
sbb
adc
jbe
and
mov
addl
fs
iret
insl
pop
pusha
adc
stos
xchg
and
cmp
lcall
pop
outsl
imul
jne
bound
mov
and
repz
xor
inc
scas
lret
scas
scas
adc
insb
mov
cs
jmp
lea
dec
push
jmp
dec
subb
xor
mov
jne
sti
rol
jne
inc
addr16
sub
fidivrl
mov
lods
add
dec
fwait
aam
xchg
out
push
mov
aaa
mov
pusha
in
lea
push
inc
test
add
xchg
stos
stos
push
add
inc
das
dec
movsl
loope
push
insl
rcll
insb
lahf
aam
mov
bound
mov
inc
inc
mov
push
cmp
and
mov
pushf
jo
fisttps
mulb
cmp
paddusw
lahf
outsl
mov
repnz
mov
shl
bound
push
mov
test
mov
pmaxub
mov
lods
repz
sarb
out
jp
push
mov
clc
lds
jl
xchg
mov
xor
jnp
pop
ds
and
inc
loope
sub
clc
mov
and
jp
jmp
aad
ret
mov
add
push
lods
push
fcom
pop
cmc
pop
addr16
xchg
jp
and
push
movsb
fs
notb
sbb
in
cmp
mov
jnp
jo
fs
and
fwait
cwtl
les
sti
rolb
pop
mov
and
mov
xchg
vmwrite
jg
add
sbb
mov
and
jle
adc
cltd
adc
and
lret
or
sub
or
mov
push
pop
inc
fdivs
cmpsl
sbb
gs
int3
pop
sbb
fnstsw
pop
call
test
xchg
pop
pushf
push
les
es
cmp
dec
fcomps
and
xchg
lcall
sub
jmp
enter
jo
leave
pop
aaa
or
iret
in
lea
popf
faddl
push
aad
out
aaa
push
mov
hlt
ljmp
push
rcrb
in
fsub
filds
xchg
jmp
adc
jno
or
mov
or
movsl
mov
jg
pushf
lods
pop
mov
adc
jnp
lret
std
pop
xor
stc
enter
or
cmp
mov
cmp
mov
jl
ljmp
cmp
jae
and
jle
add
cwtl
add
pop
or
or
cmp
jl
mull
sti
insb
test
cld
mov
imul
jmp
pushf
popf
repnz
cwtl
popf
jb
xor
aam
jno
ljmp
out
test
inc
mov
cmpsl
adc
adc
xor
mov
ret
xorb
dec
stc
out
lods
xchg
add
mov
adc
ret
mov
lods
scas
and
xor
cmpsl
es
xchg
sbb
push
mov
mov
leave
clc
aaa
mov
pop
adc
inc
icebp
inc
dec
addr16
int
and
mov
enter
add
push
lcall
xor
xor
bnd
xchg
int
gs
xchg
out
jns
push
jns
movsl
jae
pop
cmp
sahf
inc
roll
outsb
add
js
cld
out
jg
lret
or
in
mull
int3
fnstsw
and
mov
clc
mov
jg
add
rcrl
and
dec
js
jecxz
fs
popa
shrb
fdivrl
inc
push
cltd
cmp
xchg
xchg
or
xchg
sub
mov
ret
andb
ror
mov
jnp,pn
stos
mov
xchg
sbb
movsl
loope
push
mov
movsb
sub
sbb
sbb
into
mov
popa
and
int
loopne
add
ss
test
jecxz
mov
hlt
inc
call
dec
or
pop
aaa
mov
mov
push
xchg
fwait
xor
in
imul
jg
enter
pop
sub
mov
jb
cmp
in
jb
in
mov
lock
add
jmp
ja
loop
aam
adc
sbb
push
dec
or
ja
pop
std
sbb
push
inc
jb
call
cmp
fs
push
inc
mov
ret
and
es
stos
mov
jge
addr16
loopne
stos
mov
inc
dec
xor
and
loopne
dec
js
bound
xor
in
or
pop
gs
jbe
adc
sbb
push
mov
iret
sub
mov
bound
cltd
es
fnstenv
into
pushf
and
cmp
cld
pop
mov
pusha
gs
push
pop
pop
in
adc
xchg
or
xlat
repnz
push
or
sub
dec
add
stc
mov
lock
pop
movsl
pop
out
adc
leave
fs
in
loop
xlat
insl
into
sarb
daa
jnp
sbb
roll
or
pop
xchg
enter
iret
lock
leave
sbb
mov
mov
lods
stc
push
cltd
pop
inc
cmp
sbb
int3
dec
scas
roll
aas
mov
scas
scas
arpl
jmp
cmp
mov
in
sahf
lahf
push
hlt
jbe
nop
or
cmpsb
jge
dec
cli
call
inc
outsl
lods
pop
sbb
cld
les
pop
mov
cmp
sbb
nop
pop
leave
loope
scas
lea
sbb
cli
mov
incb
mov
sbb
mov
jnp
push
jae
lods
outsb
cli
sbb
jmp
adcb
inc
lock
xchg
daa
xchg
xlat
cmp
xchg
iret
mov
inc
mov
inc
daa
mov
out
add
rcrb
xchg
ljmp
jl
imul
aaa
adc
and
sbb
in
or
add
lret
adc
push
xor
clc
sub
ja
lock
scas
scas
jle
sub
mov
insl
into
sti
and
iret
inc
dec
data16
mov
enter
fdivs
ret
and
in
sahf
nop
jmp
cmp
mov
jns
insb
cs
je
inc
push
dec
mov
arpl
inc
pop
out
cli
lods
push
inc
xchg
fdivs
adc
jo
pop
mov
jp
cli
filds
fldt
sbbl
pop
mov
cmc
jle
in
xor
xor
cld
pushf
mov
jne
arpl
movsl
push
sbb
loopne
imul
mov
int3
cmp
xchg
adc
shl
add
adc
xchg
cltd
or
ljmp
cmp
jns
or
sbb
mov
inc
mov
nop
das
or
jno
dec
jle
inc
repz
mov
mov
lahf
jbe
dec
and
xchg
mov
adc
adc
ja
sbb
dec
mov
add
inc
lods
push
fwait
fimull
push
xchg
jns
cmp
mov
cmp
push
dec
nop
pop
mov
mov
ljmp
xchg
or
dec
mov
ret
ja
inc
std
lahf
or
sbb
mov
shll
mov
push
inc
scas
test
es
hlt
mov
mov
sub
push
pop
sarl
add
imul
mov
inc
pop
jnp
and
pop
lret
inc
push
add
pusha
and
pushf
mov
leave
or
pop
inc
scas
nop
and
pop
or
jne
jbe
jo
out
adc
mov
or
cltd
fsubp
xor
je
dec
xchg
sbb
xor
out
repnz
mov
pop
jp
and
mov
inc
mov
adc
movsl
and
mov
sarl
loope
test
lcall
arpl
mov
or
pop
jno
pop
and
add
cld
and
mov
std
gs
inc
dec
cmp
popf
add
jp
and
mov
loope
adc
nop
daa
sub
sbb
and
ljmp
mov
xchg
faddp
jl
cmc
mov
rclb
sbb
jmp
movsb
xchg
cltd
cmp
scas
popa
pop
mov
lods
xchg
pop
outsl
cmpl
cmp
jnp
and
mov
in
sbb
xor
adc
call
lret
cmp
es
es
stos
sbb
ret
dec
lods
xchg
in
jle
bound
ljmp
push
or
mov
aad
mov
fisubrl
in
or
ljmp
shll
pop
ja
sub
xor
lods
fstpt
test
cs
inc
cmp
mov
movb
dec
add
loopne
scas
shrb
out
mov
rcr
test
lea
xchg
cmp
cmpsl
or
bound
xchg
mov
mov
pop
divb
dec
mov
dec
lock
in
mov
out
ljmp
pop
sbb
jmp
pop
mov
lods
out
and
xor
sti
dec
mov
sarb
mov
xor
sarl
in
clc
mov
orb
les
jle
pop
fidivrs
shll
jb
jge
out
stos
sbb
xor
aam
rolb
daa
mov
rclb
mov
cmp
je
jg
scas
sti
orl
popl
fimull
cmp
pop
xchg
push
cmp
out
repz
inc
jae
sbb
nop
fldt
and
xor
and
in
jl
arpl
cmc
stos
or
sub
pusha
sbb
xchg
jae
leave
lret
xchg
xor
pop
or
out
out
add
sbb
mov
mov
add
in
push
call
scas
insb
adc
xor
xchg
loop
mov
inc
sub
lods
xchg
mov
repz
pop
dec
rolb
push
nop
clc
mov
dec
mov
bswap
xor
orl
or
fistps
sub
fimuls
nop
inc
adc
cmpsl
aas
mov
xor
inc
lcall
insb
push
mov
dec
and
xor
push
sbb
aam
cmp
enter
stos
out
pop
lock
addr16
pop
jns
adc
loope
dec
cld
jg
das
rcll
aam
xchg
adc
aam
insb
jl
mov
dec
in
fs
inc
leave
dec
hlt
shll
push
and
loopw
lcall
cmc
aaa
jne
jle
and
mov
shrl
dec
in
cs
sbb
push
insb
pusha
xchg
jns
add
or
cli
addr16
fs
sub
iret
add
lds
mov
loopne
repz
mov
sarl
scas
mov
outsl
repz
fbld
int3
dec
xchg
das
jp
adc
aam
xchg
cmp
mov
mov
inc
iret
push
cmpsl
std
insl
gs
mov
or
inc
jae
sbb
or
or
aaa
cwtl
mov
out
or
arpl
insl
cltd
js
in
push
add
push
pusha
and
cmc
pop
push
pop
or
dec
cmp
push
data16
sub
sbb
add
xchg
clc
jno
inc
addr16
sub
aas
xchg
mov
jecxz
imul
lods
arpl
out
enter
dec
add
mov
in
dec
inc
push
lret
sbb
jle
mov
mov
xchg
xchg
loopne
lcall
adc
and
popf
mov
mov
mov
or
mov
sub
xor
aam
sahf
cmp
push
fbld
mov
inc
cmp
lods
inc
mov
icebp
js
dec
dec
mov
inc
cmpb
or
mov
adc
dec
pop
and
jbe
sbb
push
lret
iret
xor
into
jns
arpl
pop
arpl
idivb
sub
enter
test
imul
shl
xchg
xchg
xor
stc
jmp
out
lds
mov
and
loop
pop
jno
cli
mov
mov
add
ss
lea
jge,pn
pop
inc
xchg
je
pop
jb
es
xchg
cmc
inc
jg
pop
sub
xchg
rorb
jmp
add
mov
test
insb
cmc
sbb
or
and
test
repnz
jo
dec
aam
mov
fnstsw
mov
and
loop
shll
xchg
adc
add
fcoml
pop
popa
andps
jns
lods
jb
cltd
add
sub
cmp
xor
pop
stc
mov
inc
mov
sbb
dec
pop
xor
push
std
test
imul
sbb
push
xchg
mov
out
lret
in
lea
faddp
mov
aad
cmc
jne
cmp
push
add
xor
nop
mov
popf
iret
outsb
in
adc
fucom
push
jo
lret
lea
stos
fimull
mov
cmpsb
fnstsw
dec
out
jbe
xchg
iret
lahf
jno
lcall
scas
js
inc
pop
xor
btc
push
enter
cld
stc
adc
inc
mov
or
or
daa
stos
xchg
rdmsr
pop
ss
cwtl
mov
addr16
xchg
adc
lcall
and
sub
xchg
in
punpckhwd
addr16
popa
xchg
mov
xchg
cmp
cvtps2pd
pop
push
push
aad
loope
cmp
daa
frstor
push
fisttpll
pop
fcoml
jnp
dec
loope
pop
sub
ja
insl
shl
xor
mov
out
ja
enter
push
push
aaa
je
in
jbe
icebp
leave
and
xor
jns
negl
jns
mov
aam
cmp
mov
jo
mov
sub
loop
cmp
lods
dec
iret
aad
pop
lods
push
or
lret
xor
dec
popf
test
pop
push
das
mov
jae
sbb
push
fbld
pushf
loope
in
mov
out
dec
cmpsb
and
outsb
or
stos
sub
push
outsl
xchg
test
cld
es
je
bound
addr16
adc
ret
push
das
jnp
jnp
push
or
loop
pop
adc
mov
f2xm1
shlb
ret
push
cwtl
xchg
adc
in
dec
pop
ss
xchg
xor
inc
inc
or
fiadds
arpl
push
add
dec
jg
pop
or
loopne
rorb
enter
push
jae
inc
adc
add
sbb
sti
sbb
js
adc
add
jecxz
les
lock
fst
fdivr
out
lahf
sbb
sub
sti
dec
in
sbb
xchg
push
daa
mov
mov
scas
or
out
sub
outsl
pop
movsb
mov
inc
sbb
inc
mov
ljmp
inc
cmp
push
xchg
push
mov
ret
inc
mov
add
or
cld
mov
shrl
repnz
or
out
jae
loop
gs
pop
sarl
movsl
loop
sbb
iret
xor
push
cmp
xchg
inc
add
and
out
movb
aas
inc
sub
cltd
jns
add
in
adc
and
or
mov
lcall
aad
pavgb
in
cmp
mov
enter
aam
xor
cmc
mov
mov
push
loope
pop
jmp
or
stos
cld
scas
mov
gs
cwtl
cs
mov
dec
mov
adc
hlt
mov
add
mov
inc
daa
mov
in
dec
mov
mov
hlt
fs
and
push
mov
fistps
xor
test
sub
ljmp
into
cmpsl
sub
out
lret
lods
jb
cmc
out
outsl
adc
mov
cmp
imul
jle
out
jne
aas
push
or
sub
pop
inc
lcall
push
xor
mov
or
dec
adc
xchg
popa
jnp
adc
cmc
cli
pop
push
jl
pop
mov
aas
stos
mov
faddp
sbb
jns
addr16
dec
inc
or
and
jle
push
jb
pop
in
cmp
shrb
sbb
test
mov
pop
add
loop
mov
pop
testl
iret
jnp
dec
jmp
xor
rol
ss
lret
jno
fmuls
mov
dec
dec
adc
add
cmpsl
lods
sbb
popl
aas
xor
push
adc
daa
and
lea
loopne
aaa
outsb
mov
lods
xchg
add
xchg
jp
mov
pop
inc
sub
or
ret
std
inc
or
addr16
ljmp
push
dec
fwait
sub
test
jge
cltd
sub
rcrl
repnz
jge
add
mov
xchg
sbb
out
or
add
fbld
rclb
jae
fwait
loopne
scas
cld
std
mov
pop
inc
ret
push
jb
test
jno
and
dec
jge
mov
les
pmaddwd
cmpsb
adc
mov
xor
jnp
fs
ficoms
mov
cmp
dec
sub
fcmovu
push
aas
pop
jno
ret
and
push
mov
mov
cmp
or
push
test
jne
out
ss
stc
insl
add
xchg
data16
jl
push
sub
push
in
xor
xlat
jbe
imul
and
out
jl
nop
cmp
pop
ja
xchg
call
inc
mov
cwtl
nop
ret
scas
add
xchg
inc
mov
clc
sti
or
loop
outsb
aam
ficoms
lods
hlt
mov
add
mov
dec
mov
push
andb
jbe
leave
mov
mov
gs
fisttps
ret
xor
cmc
fdivp
sub
inc
cmc
stos
movsb
test
lea
fwait
out
jmp
jns
fs
mov
mov
xchg
pop
cmp
popf
pusha
in
scas
jns
xchg
xor
ficomps
push
add
fldl
dec
push
mov
scas
or
mov
jnp
pop
aaa
xchg
cmp
xchg
pop
sbb
sbb
mov
or
ret
cmpsl
das
movd
mov
or
in
in
cmp
push
pusha
xchg
push
mov
push
out
test
sbb
xor
outsl
dec
inc
jnp
fimull
inc
loopne
push
dec
loope
cmpsl
sub
or
mov
cmpsb
imul
int
pop
push
or
test
and
jnp
call
pop
adc
mov
jge
mov
nop
and
in
and
inc
and
cmp
mov
xor
stos
fs
sub
jg
ret
jbe
dec
nop
push
in
xchg
lret
imul
mov
sub
in
xor
pop
add
imul
inc
jne
sbb
into
adc
mov
fisttps
repnz
gs
pop
mov
adc
scas
in
cli
inc
inc
mov
jle
icebp
divl
dec
cmp
arpl
cld
roll
orl
imull
add
push
inc
movsl
das
insl
cld
lret
or
or
xchg
or
in
push
mov
pop
and
xor
jns
add
sbb
into
cmp
ficomps
js
dec
es
push
mov
out
decb
aas
jnp
addl
addl
pop
xor
xor
sar
mov
loope
xor
loopne
push
les
scas
cmpsl
lea
and
push
aam
cwtd
ret
and
push
testl
daa
lods
ret
mov
lock
loop
fsubs
arpl
cmpsb
fstpt
dec
lock
jne
jae
mov
xor
inc
pop
push
xchg
addl
cmc
shll
jo
mov
dec
pop
and
stos
xor
push
pusha
movsl
and
loopne
mov
inc
into
in
adc
or
xchg
lahf
jle
pop
xlat
pop
pop
andb
push
ret
movb
push
xchg
inc
xor
and
dec
and
test
sub
out
cmc
cwtl
out
outsl
add
aaa
xor
aad
and
std
mov
and
xor
mov
mov
sti
data16
push
rorb
push
sti
ja
sbb
jns
jbe
cld
int3
jp
stos
sub
cmp
jnp
mov
inc
stos
xor
mov
push
jp
mov
mov
data16
inc
fwait
xchg
cltd
daa
jl
fsqrt
call
mov
adc
in
pop
mov
ljmp
or
push
inc
xlat
inc
hlt
std
xchg
cwtl
sbb
mov
and
testl
lret
test
pop
jno
sbb
popa
fisttps
push
dec
icebp
fsubrs
sahf
roll
xchg
jle
add
movsb
lahf
jns
outsl
pop
maxps
or
mov
dec
cld
push
pop
sbb
dec
scas
xor
pop
mov
imul
setae
push
cmp
int3
add
mov
sbbb
pushl
cs
mov
or
pusha
mov
jb
sub
add
cltd
enter
mov
sahf
adcl
push
cmpb
or
nop
fisttps
imul
sbb
test
nop
pop
adc
add
cwtl
scas
push
dec
je
mov
cld
push
inc
mov
imul
add
sub
les
or
divl
test
iret
xchg
xor
jp
andl
test
adc
pop
insb
add
jnp
dec
xor
sub
xor
cltd
sbb
add
aaa
fmull
push
and
sub
jne
mov
jmp
pop
hlt
xor
adc
push
nop
xor
test
mov
cmp
and
int
test
sub
pop
cmc
inc
cwtl
jbe
daa
lods
shrl
jo
hlt
jp
xchg
iret
and
sti
insl
cld
cltd
xor
xchg
testl
inc
lahf
out
mov
dec
in
push
push
movsl
or
enter
mov
dec
xchg
mov
mov
push
pusha
sub
add
mov
popf
or
notl
adc
mov
stos
and
sahf
xchg
jge
aam
inc
xor
adc
pop
xor
scas
sbb
mov
test
add
xor
jp
leave
shlb
xor
add
xchg
ljmp
popa
xor
jmp
mov
inc
cmp
or
sbb
out
arpl
shrl
pop
insb
addb
inc
xor
and
aaa
je
xor
adc
jmp
test
adc
loop
and
icebp
inc
das
jge
or
inc
addr16
ds
mov
in
adc
in
sub
jo
cmpsb
jge
jne
fistl
imul
lds
ret
or
loope
jae
mov
les
dec
in
mov
notb
sahf
in
scas
dec
dec
lods
lea
mov
add
fimull
inc
leave
andb
mov
mul
pusha
push
rcrl
test
dec
inc
fs
in
pop
push
xchg
dec
xor
test
in
outsb
mov
out
popf
push
adc
mov
cmp
icebp
push
adc
sar
aad
fldl
dec
adc
lods
sahf
sub
sti
add
lods
hlt
gs
pop
sub
mov
lock
mul
bound
pop
loop
sbb
cld
pop
cmp
inc
repz
scas
gs
mov
lods
leave
jecxz
jnp
sub
mov
stos
adc
push
xchg
pop
mov
ret
and
fwait
mov
mov
mov
add
aas
outsb
push
mov
mov
repz
fisubrl
nop
jg
repz
lea
idivb
mov
and
jle
or
ret
push
lods
add
pop
ja
decl
outsb
jmp
or
je
mov
jnp
lods
std
cld
mov
jle
sub
cmpsb
adc
repnz
int3
int
call
or
rcll
jge
iret
xor
stos
mov
push
cmpsb
movsl
inc
cs
xchg
or
stos
insl
out
jmp
fsubs
mov
imul
mov
ficoms
push
jbe
jg
xor
cmp
mov
push
ficoms
fxch
push
into
add
arpl
lret
pop
pop
test
dec
dec
inc
inc
adc
mov
xchg
int
adc
orb
pop
cmpsl
sub
fiadds
loop
jmp
and
out
and
out
outsb
ds
test
nop
in
mov
movsl
bound
xchg
jle
jb
cmp
dec
int3
xor
aaa
sub
push
xor
xchg
lret
mov
or
aad
push
jb
or
and
out
lods
dec
dec
aaa
inc
jg
ja
add
jo
cmpsl
arpl
cmpsb
decl
repnz
adc
test
or
mov
push
jecxz
movsb
loop
inc
pop
or
mov
and
dec
push
adc
mov
lods
or
cmp
popf
aas
pushf
repz
lods
in
and
clc
stc
ret
addr16
std
pop
lret
and
outsl
xlat
lods
inc
or
jl
lods
dec
cwtl
jmp
dec
add
lcall
push
mov
jnp
mov
fadds
inc
push
jo
ret
fdiv
mov
test
jmp
out
pop
and
fnstsw
dec
daa
js
js
cltd
movsb
push
inc
aad
sbb
orb
in
sarl
call
nop
out
movsb
cmp
jmp
add
pop
cmc
loopne
push
iret
xor
mov
leave
aad
xor
test
adc
fnstcw
fs
adc
add
push
cmp
daa
aaa
sub
mov
and
das
pusha
jns
aaa
pop
lods
or
jbe
mov
pop
loope
test
icebp
mov
jne
push
mov
xor
cwtl
js
cld
xchg
mov
loop
sahf
add
sub
es
dec
call
adc
cwtl
adc
pushf
push
adc
pop
outsb
movsl
or
fsubrs
jnp
sbb
jne
xor
arpl
and
out
jmp
jle
pop
jb
xor
mov
loope
nop
mov
mov
bound
shr
fbstp
rol
pop
call
and
mov
mov
cmp
out
push
addr16
adc
ds
or
mov
sbb
mov
jno
cmp
xchg
add
mov
ljmp
pushf
mov
mov
es
sub
sbb
insl
sub
sbb
or
pop
pop
pop
lods
lock
dec
mov
lods
jg
out
data16
dec
xchg
repz
addb
repnz
dec
imul
xor
ud2
lock
leave
xor
cmp
sub
adc
stos
imul
push
pop
arpl
sahf
mov
test
outsb
mov
test
push
and
mov
jne
nop
cmpsl
jne
sarl
jbe
sti
aas
gs
sbb
stc
jns
stos
sbb
outsl
jns
dec
ret
movl
and
lock
mov
sbb
test
and
xchg
sti
cld
and
aas
bound
mov
mov
sub
jg
mov
add
dec
jle
inc
jnp
jae
outsb
or
lcall
and
cltd
mov
jne
mov
orb
int3
mov
es
pop
test
lods
push
test
jl
add
shr
or
jae
fists
sub
add
mov
rcl
outsl
push
push
cmp
dec
adc
xchg
mov
shrb
xor
int3
adc
stos
lods
dec
in
das
xor
pushf
pop
sub
mov
and
cmp
ret
movsb
mov
dec
jns
push
ret
and
cmc
adc
and
xchg
or
sbb
and
scas
inc
orl
inc
xchg
pop
push
adc
int
pop
aaa
lds
sub
ds
dec
rorb
jns
out
pusha
stos
mov
out
mov
mov
mov
loope
jbe
jp
and
iret
xor
xchg
iret
and
jecxz
xlat
mov
inc
sbb
sti
and
icebp
gs
in
fdivrs
sub
int
scas
xor
or
mov
sbb
imul
cmpsl
popa
mov
add
jmp
or
mov
push
mov
push
bound
sbb
mov
sbb
fs
xor
xchg
idiv
xchg
es
rclb
xor
inc
sub
pop
das
dec
lods
in
int
shrb
mull
imul
mov
push
xor
movsl
xor
test
or
pop
sbb
gs
dec
int3
mov
and
push
push
mov
sahf
sbbl
lds
push
je
sar
or
and
mov
xor
lret
test
or
idivl
jle
push
fsubl
mov
or
xchg
xlat
xor
hlt
sbb
mov
and
dec
bound
jae
ficoml
ja
jmp
jl
sbb
mov
xchg
or
xchg
and
mov
inc
mov
jnp
testb
xchg
push
xchg
movsl
addr16
mov
mov
xor
hlt
sarb
dec
aaa
loopne
cmp
sbb
incb
popf
lea
lea
cwtl
mov
sahf
pop
cmpsb
iret
pop
dec
dec
cmp
and
jae
xor
xor
dec
clc
push
movsl
jbe
cmpsb
pusha
mov
repnz
loopne
stos
or
jb
mov
bound
dec
or
das
push
dec
dec
mov
sti
outsb
push
scas
andl
inc
popf
push
mov
rorl
add
pop
xchg
das
push
data16
jae
pop
inc
sub
ret
shll
adc
notl
sti
pop
fisubl
mov
mov
mov
repz
add
loope
mov
ret
jmp
jge
inc
fstps
mov
mov
pushf
loop
push
jns
call
push
loopne
das
jb
mov
xchg
jge
repz
addr16
pop
push
mov
push
rorl
inc
add
or
out
sbb
sti
push
cmpsl
and
sub
repnz
cmp
and
fstp
or
and
outsb
mov
js
shll
pop
mov
push
fwait
or
xchg
dec
sub
sub
mov
cmc
dec
fbld
pop
aam
inc
lods
cli
adc
add
ja,pt
cmp
repnz
sub
aas
and
cmp
xor
add
mov
sub
adc
mov
es
pushf
aam
inc
or
es
fisubl
es
xor
fimuls
pop
pop
sbb
jbe
nop
mov
push
adc
push
jp
sub
ret
mov
scas
pop
imull
sahf
adcl
int
or
jle
std
sub
popf
fidivrs
fstp
push
pop
repnz
xchg
test
cwtl
test
cmpsl
and
mov
xchg
sub
add
repnz
xchg
in
add
cltd
cs
insl
rolb
adc
lret
movsl
jg
jmp
nop
inc
mov
or
lahf
icebp
lret
dec
test
imul
clc
push
mov
cld
popf
and
jmp
inc
mov
ja
cmc
push
clc
add
imul
pop
sbb
addr16
inc
fisubs
outsb
mov
call
dec
sbb
jecxz
stos
addr16
dec
add
push
mov
or
xchg
sbb
iret
aas
fbld
push
in
push
xchg
orl
jge
in
sub
xor
lods
sbb
decl
sub
out
cwtl
mov
push
inc
xchg
push
jmp
rcr
mov
lds
push
and
div
insb
inc
pushf
lds
mov
sbb
mov
aad
add
xchg
lret
jnp
imulb
fists
cs
push
lds
cmpsb
mov
pusha
in
loop
mov
das
out
nop
cmp
mov
aad
nop
xor
jl
jle
inc
jns
and
pop
adc
fistps
jle
int
mov
or
movsb
adc
lock
stc
pop
push
cmp
imul
mov
lcall
xchg
sbb
orl
dec
lods
xchg
dec
push
lods
add
sub
sbb
jecxz
bound
movsl
stc
call
add
js
outsl
cmp
jnp
std
jle
scas
sarl
cmp
jg
insb
in
xchg
adcb
scas
cmc
mov
xchg
add
mov
sbb
push
mov
push
jno
jns
mov
inc
lret
cmpsl
or
mov
test
out
mov
cmp
sub
cmpsb
xorl
call
hlt
stc
cmpsb
imul
int
sbb
in
jnp
roll
xlat
and
outsb
mov
ret
das
xorl
push
std
adc
stos
in
adc
add
add
adc
mov
sti
jno
inc
mov
dec
xor
mov
jle
mov
mov
add
pop
orb
stos
sahf
lahf
aad
xor
les
lahf
or
in
mov
xor
add
jmp
movsb
jnp
ja
xchg
orb
outsb
stos
inc
and
daa
hlt
sbb
lods
dec
hlt
xchg
dec
aas
lcall
mov
lds
add
lahf
je
mov
xor
mov
add
push
fdivl
dec
cwtl
xor
test
xchg
iret
push
and
xlat
out
or
jns
int3
mov
adc
or
sbb
and
push
fisttpll
sub
fisubl
jne
fldt
push
cli
push
xor
dec
insl
out
cmp
mov
filds
addl
sahf
and
cmp
xchg
sbb
jne
bound
scas
and
pop
sub
xchg
push
pop
mov
sub
clc
jne
pop
scas
scas
or
sub
or
int
fisubl
ja
daa
cmp
bound
shlb
inc
cmpsb
add
cmp
pop
ret
insb
sbb
lods
cltd
and
shll
sbb
std
sti
fwait
pop
jbe
adc
inc
insb
mov
lret
mov
dec
mov
mov
inc
pop
out
lcall
mov
push
cmp
mov
mov
sub
cmp
cmp
jbe
dec
add
and
inc
push
sahf
pop
addb
notl
sbb
inc
popf
push
adc
jns
insl
popa
xchg
dec
pop
xorl
and
xchg
nop
or
xorb
iret
jnp
adc
orl
andl
add
push
cmp
mov
add
push
mov
jbe
jbe
ficoms
push
and
addr16
ss
pop
and
imul
sbb
dec
into
shlb
jb
dec
and
mov
cmp
push
into
rorb
lods
fsts
rcrb
add
mov
mov
cli
sbb
xor
push
gs
lock
fdivrs
and
sbbb
xchg
cmp
push
dec
imul
ljmp
icebp
iret
push
sbb
xchg
ror
sub
mov
fistps
add
pop
cmp
leave
adc
lock
cmc
mov
out
push
jmp
aad
lods
and
or
mov
jecxz
jg
mov
xlat
or
push
xor
addl
xchg
out
xor
mov
idivl
in
adc
pop
hlt
rcrl
test
rcr
push
aaa
push
in
iret
jmp
jg
sahf
lcall
ss
sbb
in
std
popf
or
mov
lcall
cli
stc
notb
into
inc
js
xlat
jg
xchg
pop
jae
push
push
add
loope
or
dec
mov
xor
mov
fiadds
mov
sbb
mov
test
jne
cmp
das
mov
mov
faddl
xlat
lea
or
lods
or
sbb
loope
sub
xchg
ja
and
adc
jnp
fs
jae
andl
mov
ret
lods
or
and
jecxz
sbb
mov
test
arpl
and
mov
sub
shll
jp
fnstenv
insb
xor
mov
mov
push
fwait
adc
sbb
int
add
push
mov
add
addb
sub
addl
pop
jecxz
fnsave
mov
sbb
int3
leave
dec
mov
mov
jb
fidivl
js
ret
sbb
sub
sbbl
cmpsl
inc
lods
test
dec
std
icebp
sub
das
das
mov
fwait
mov
pushf
stc
adc
fs
in
cmp
pop
mov
mov
mov
jge
pop
sbb
adc
mov
cmp
adc
insb
xchg
mov
xlat
repnz
or
cmp
add
xor
cmpl
push
gs
cmp
mov
jp
loop
jecxz
je
push
movsl
cmpb
shlb
and
mov
dec
cltd
mov
xchg
or
cmp
outsb
mov
aaa
sar
mov
mov
sub
popl
clc
std
lds
jmp
lret
out
mov
jp
add
add
sbbb
stos
lahf
rcrb
clc
in
xor
loop
jl
dec
ret
aad
sbb
sub
out
pop
lods
jbe
and
mov
dec
in
test
shrl
into
rcrb
in
xor
inc
sub
fs
mov
test
pop
sarb
sub
pop
push
rorb
leave
lret
mov
sti
mov
mov
das
push
out
mov
push
mov
cmpsb
or
out
les
cmp
jb
cmp
mov
ja
dec
cmp
shrb
gs
dec
inc
ja
insl
mov
out
fcmovnu
push
popf
sub
push
popa
sub
mov
push
dec
js
and
sub
cmp
inc
cli
cs
pop
mov
sarb
add
pusha
lret
mov
push
in
orb
imul
lret
lret
jecxz
lahf
push
loope
xchg
bound
xchg
cmp
push
pop
leave
hlt
dec
incb
loopne
mov
mov
aam
push
mov
push
stos
jge
popa
dec
dec
jne
push
sub
int
dec
arpl
xchg
daa
xor
sub
xor
sbb
js
dec
push
int3
mov
or
out
testl
mov
mov
and
imul
out
dec
sub
movsb
repnz
push
bnd
inc
outsl
cmp
sub
loope
pop
shlb
pop
pop
push
fdivrl
popa
jns
mov
pop
stos
mov
push
add
or
add
testl
adc
push
cmp
in
je
xor
adc
pop
pop
inc
fcmovbe
xchg
addl
mov
pop
xchg
pop
mov
arpl
in
pushf
rorb
mov
push
dec
sub
out
aas
rcl
add
jae
clc
adc
mov
mov
ja
fsub
mov
xchg
cmp
jno
xor
mov
enter
sbb
jle
lret
in
lds
fwait
mov
lea
js
mov
fistl
sub
push
lea
pop
pop
lahf
lds
adc
adc
xor
mov
mov
sub
pusha
add
or
or
aad
jnp
fld
adc
loop
push
test
or
sub
rcrb
cwtl
mov
inc
dec
mov
int
xchg
test
insb
inc
jnp
scas
or
int3
dec
std
std
mov
xchg
fimull
mov
in
cmp
lock
lret
aam
cmp
xlat
add
mov
ret
push
or
xor
je
xchg
insl
das
ljmp
cmp
mov
out
mov
outsb
xor
add
jle
inc
and
pusha
mov
mov
mov
mov
sbb
mov
sbb
xchg
jae
hlt
cli
cmpsl
fdivl
push
mov
lahf
sub
divb
mov
jle
xor
add
sbb
lods
pop
movsb
sbb
mov
aas
ss
xor
js
jae
les
test
xchg
add
mov
cmpsb
test
dec
gs
mov
push
dec
mov
std
xchg
xchg
xchg
fldcw
fsubrs
icebp
testb
cmp
scas
xorl
arpl
mov
sub
fdivs
jae
imul
popa
or
and
add
sub
mov
jae
loopne
pop
lret
andb
aaa
sbb
push
pop
adc
jae
sub
and
sub
mov
ja
cli
mov
pop
je
cmp
test
imul
out
loop
sub
fs
dec
or
aaa
std
mov
iret
das
ds
mov
nop
push
mov
mov
cmpsb
xchg
mov
jecxz
cmpsl
mov
icebp
int
rcl
rorb
bound
int
popa
fmul
sti
push
jle,pn
push
push
out
mov
cmp
in
fstps
aam
jl
out
popf
das
mov
dec
mov
addr16
xchg
xlat
push
in
add
rclb
inc
mov
xchg
mov
aam
inc
push
jge
mov
add
inc
mov
jae
jl
scas
in
fs
pop
movsl
inc
mov
sbbb
jle
sbb
pop
movsb
jl
pop
rep
aaa
scas
clc
mov
in
pop
sti
inc
je
scas
jle
dec
int
xchg
shl
sub
sahf
clc
mov
jmp
int3
pop
enter
pop
scas
jnp
in
cmp
mov
jmp
mov
mov
mull
in
lea
gs
bound
loopne
shrl
pushf
mov
xchg
mov
adc
push
xor
mov
in
cmpsb
or
repnz
test
xorb
xchg
xor
xchg
cpuid
adc
dec
icebp
mov
mov
sbb
addr16
and
cli
aaa
xchg
pop
lods
stos
jl
mov
xorl
and
cs
sarl
mov
inc
stc
and
add
dec
stos
xlat
testl
test
pop
fcomps
addr16
pop
add
mov
inc
jno
in
int3
mov
stos
xchg
aad
inc
cmc
push
faddp
int3
xchg
aaa
movsb
repz
movb
mov
push
fsubl
xlat
jae
push
jmp
les
pop
lahf
fcoml
cmc
in
jbe
js
mov
mov
xor
cmpsl
iret
pushf
cmpsl
ficomps
insl
cmpsb
dec
xchg
mov
jmp
lret
mov
fbstp
dec
add
inc
sti
add
andl
repnz
iret
out
pop
adc
in
mov
and
pop
push
loopne
popa
hlt
push
mov
outsb
dec
dec
push
xor
out
dec
sahf
dec
sub
sbb
hlt
fmull
test
push
xor
cwtl
sbb
sbb
mov
sub
inc
cmp
pop
fcmove
cmpsb
repz
inc
outsl
imul
sub
and
jno
cwtl
adc
in
mov
mov
call
push
jle
dec
mov
dec
xor
pushf
sbb
lds
pop
cmp
popf
test
push
imul
sbb
xchg
stos
mov
stos
sti
mov
jno
clc
cmp
loop
mov
xor
stc
and
gs
bound
insb
fsubrs
sub
jo
push
xor
arpl
sti
inc
cmp
mov
call
mov
aas
int
mov
adc
sub
jae
lods
and
sbb
mov
mov
int
push
xor
or
pop
sbbl
mov
adc
or
test
inc
xchg
fcoml
mov
xor
int
cltd
stos
xchg
cmp
xchg
sub
mov
sub
sbb
adc
xor
int3
sbb
pusha
xchg
repnz
je
data16
push
aas
outsl
popa
stos
push
pushf
in
mov
dec
rolb
add
mov
cmpl
stc
pop
repnz
dec
jne
sbb
mov
das
lods
jne
insb
xchg
arpl
pop
and
addr16
outsb
aaa
pop
cmp
iret
inc
sub
xor
push
adcb
jle
add
pop
cmp
roll
mov
add
sub
mov
sti
cld
mov
aad
or
das
pop
pushf
aas
ficomps
jg
shl
fisubrs
cmovp
pop
cmp
jmp
mov
inc
dec
add
mov
add
into
loopne
cmp
rolb
cltd
popf
push
or
xchg
aaa
xor
aas
mov
bound
hlt
pushl
pusha
aas
sbb
in
call
inc
inc
cmp
rep
mov
addr16
in
test
in
sbb
movb
mov
sti
xchg
icebp
mov
out
cmp
ret
mov
push
xchg
lret
sbb
scas
fs
lret
mov
pushf
cmp
add
xchg
mov
add
jb
xchg
sbb
je
pushf
pop
lcall
adc
jbe
xchg
call
jae
fsubp
std
dec
popf
sub
ret
jmp
jae
ljmp
pop
sub
pop
push
push
testb
stos
sub
pop
sub
xor
mov
iret
mov
mov
sbb
cs
dec
daa
sub
ror
mov
idivl
sub
negl
imul
pop
and
fs
scas
in
push
mov
iret
xchg
sub
sahf
push
cmc
stc
adc
popa
sbb
mov
aam
dec
dec
call
fs
sub
mov
or
or
scas
jge
arpl
fbld
iret
lea
ds
sub
ret
xchg
or
pop
inc
enter
push
adc
fucomp
mov
adc
fs
sahf
jo
sub
and
test
or
std
jmp
mov
lea
lret
inc
fsts
push
ret
movsl
inc
dec
push
push
mov
call
fmuls
out
jge
mov
into
jno
fistps
lcall
std
fadds
scas
xlat
mov
cmp
sub
sbb
sarl
call
mov
cli
adc
cmp
jp
adc
arpl
int3
adc
testl
add
or
cmpsl
or
lds
shrl
cmp
mov
mov
pop
lods
cmp
mov
adc
movsb
inc
cld
in
dec
and
aas
es
mov
les
fldln2
add
add
inc
mov
pop
push
mov
sbb
cmpsl
out
cli
std
js
mov
pop
cwtl
test
aam
cli
xchg
jle
je
lahf
dec
pop
add
push
inc
mov
jmp
xchg
and
jnp
addr16
fsubrl
call
pop
lret
mov
add
fsubr
std
dec
ds
pop
movb
mov
cmpl
xchg
cmp
adc
fcmove
sahf
or
xor
rol
inc
fwait
stos
pop
retw
cli
pop
jbe
in
add
jns
dec
dec
inc
add
ss
jae
loop
adc
lea
xchg
or
in
dec
adc
xor
sahf
jb
mov
jecxz
sub
cmpsb
pop
sbb
sti
or
mov
popf
jecxz
pop
jno
nop
mov
pop
mov
stos
pushf
outsb
sbb
sahf
inc
adc
rorl
repz
aaa
out
idiv
inc
ljmp
divb
push
je
xor
icebp
adc
or
push
addr16
stos
jo
mov
jecxz
leave
add
pop
pop
mov
sbb
push
aas
and
ret
fchs
loop
xchg
in
xlat
xchg
mov
out
mov
outsl
cmpsb
push
mov
mov
imul
xchg
cmpl
lret
into
icebp
mov
fsub
pop
sti
or
in
mov
lret
nop
add
leave
lods
test
push
inc
xchg
imul
mov
push
pop
lahf
adc
leave
lret
dec
icebp
dec
out
pop
push
fisubrs
shl
push
daa
pop
jecxz
clc
cmpsl
xchg
in
jbe
movb
ljmp
addps
adc
addr16
ret
push
dec
mov
adc
and
out
sub
mov
sub
mov
inc
jno
mov
hlt
sub
add
mov
lret
fstps
fistpll
les
inc
pop
mov
jp
pop
cmp
fcomps
mov
in
test
add
testl
pop
hlt
and
sbb
rcll
movsb
dec
xchg
rcl
je
stos
or
jns
mov
xchg
or
enter
test
incb
scas
ficompl
ret
lods
movsb
add
mov
lret
adc
jnp
pop
cmpsl
lds
sti
stc
push
dec
sub
movsl
in
sub
mov
xchg
push
faddp
popf
xchg
push
sub
sbb
adc
sbb
jne
mov
dec
rclb
in
mov
cs
add
sub
sbb
inc
cmpb
stc
mov
into
or
mov
gs
rol
jle
shll
inc
adc
adcb
popa
shll
fmul
fcom
fs
or
inc
je
lock
iret
pop
xor
call
and
and
dec
out
adc
scas
dec
out
xor
push
leave
test
push
insb
loopne
pop
aam
shrl
mov
popa
test
lds
dec
mov
jb
sub
pop
scas
add
xor
xor
ss
dec
cmp
pop
pop
mov
lcall
in
pusha
pop
push
mov
mov
loop
cmp
fs
jno
xor
jae
sbb
adc
mov
mov
ret
add
adc
xor
hlt
lock
sbb
inc
sub
adc
mov
roll
sbb
mov
shlb
cltd
cli
loope
out
push
xchg
cmpsl
or
inc
iret
mov
sub
aas
cmp
xor
jae
fsubl
das
dec
lret
roll
sub
aad
push
xor
sahf
lods
loop
cmp
and
mov
fidivs
aas
push
mov
xor
in
mov
scas
sbb
or
and
mov
in
mov
adc
cmp
lret
inc
popa
xor
pop
leave
ret
out
mov
repnz
push
sbb
xchg
mov
pop
leave
fdivrl
sbb
idivb
pop
jl
popa
insb
popf
push
mov
and
lret
out
inc
rcrl
or
mov
adc
xchg
sbb
out
hlt
push
cwtl
inc
sbb
cli
ret
or
pop
lret
aad
or
fmull
xor
lods
es
pushl
adc
je
rolb
or
cmp
xchg
inc
js
mov
movsb
sbb
pop
mov
int3
ret
ret
push
jne
pushf
dec
sbb
bound
ret
lock
dec
daa
sarl
ja
mov
cmc
pop
loop
mov
lock
lahf
sbb
sub
pushf
pushf
mov
mov
imul
aaa
mov
mov
mov
sbb
push
mov
push
add
mov
call
dec
les
add
xor
mulb
imul
lret
movsb
test
and
push
ja
inc
mov
or
into
out
cmpb
out
lods
mov
mov
cmpsb
pusha
pop
xor
call
shrd
stos
stos
rclb
dec
jno
fs
push
sbb
push
sbb
adc
mov
jnp
jg
jo
mov
inc
lret
mov
jns
jge
lcall
cmpsb
cmp
adc
clc
cmp
fisubrs
scas
lock
mov
imul
rcrl
xor
push
cmp
xor
mov
addr16
adc
xchg
lods
lret
mov
enter
enter
imul
bound
adc
jle
push
iret
and
dec
and
adc
mov
jp
aam
sub
jnp
push
shll
sbb
pop
lret
data16
nop
out
mov
fiaddl
inc
outsl
pop
stc
sahf
xor
xor
mov
pop
push
sub
push
fildll
out
mov
lret
pop
lock
les
mov
iret
mov
mov
divw
and
out
loopne
outsl
test
push
add
daa
pand
dec
lret
sub
out
push
fcompl
pop
lods
push
lret
pop
sbb
cmpsl
jo
xchg
sub
xchg
fcmovb
jmp
cmp
adcb
sti
mov
jmp
adc
jl
mov
cld
jl
outsb
mov
jb
vcomiss
dec
pusha
std
jns
test
lahf
or
data16
xor
jno
pcmpgtw
jnp
bound
jb
xor
rclb
scas
sbb
add
pop
cmp
repz
add
adc
xchg
ja
mov
or
mov
mov
adc
fdivl
pop
inc
push
bound
xchg
push
mov
popa
sbb
fisttps
dec
ret
or
dec
aam
or
jecxz
popf
das
data16
push
inc
mov
mov
mov
mov
jo
pop
sbb
push
repnz
xchg
arpl
jns
jb,pn
jg
adc
xor
jecxz
pop
sbb
out
aad
dec
pop
scas
and
pop
jl
adc
cli
sub
cld
xchg
sub
inc
xor
inc
cmp
mov
mov
xor
aad
adc
mov
pop
shrl
xchg
rcll
xchg
das
push
pop
data16
sbb
testb
pop
lahf
add
inc
mov
adc
shrb
jg
subb
jns
mov
int
test
xchg
or
imul
movsb
xlat
add
inc
jno
or
in
ret
or
pushf
xchg
jnp
sbb
pop
jb
ss
fstps
or
adc
pusha
push
out
sbb
dec
xchg
push
push
pop
cmp
mov
or
cs
mov
shrl
rclb
mov
sbb
jns
in
jp
and
jae
outsb
and
jl
lock
add
dec
xchg
lahf
sub
push
aaa
mov
jg
jl
sub
sbb
mov
cmpsl
or
loop
popa
ds
rclb
lods
vsubps
fwait
add
mov
ss
pop
repz
rclb
mov
popf
push
or
push
xchg
fs
inc
dec
mov
sbb
out
out
dec
push
cltd
push
dec
or
sar
into
das
push
mov
ror
push
cld
ss
push
or
pushf
testb
sbb
iret
into
pop
in
out
or
addl
movsl
cmpsb
nop
cmc
lret
dec
popa
sub
dec
and
push
dec
pop
enter
xchg
and
pop
out
js
jmp
outsl
xchg
cmp
call
push
pusha
lock
dec
jne
adc
stos
xor
mov
push
or
fs
add
arpl
xchg
fisubrs
add
int
scas
imul
lea
out
mov
lods
int3
ret
dec
scas
jecxz
mov
mov
ja
sbb
out
scas
inc
and
sbb
adc
jmp
shlb
ds
mov
scas
lods
inc
rclb
std
jbe
popa
and
mov
jp
ret
and
or
dec
icebp
ds
jg
cmp
pop
sbb
idivb
mov
test
pop
daa
ss
jge
test
or
cmp
inc
aaa
inc
jns
in
popa
test
push
stc
xchg
daa
inc
fdiv
cmp
insb
test
int
adc
stos
or
popa
jmp
mov
js
xchg
nop
imul
cmp
inc
sti
movsl
or
mov
sbb
inc
out
scas
pushf
sub
cld
mov
pop
and
repnz
insb
into
inc
and
cwtl
call
mov
mov
repz
out
das
mov
mov
ds
inc
add
push
and
and
aas
sbb
hlt
jbe
sahf
imul
jne
mov
pcmpgtd
cmp
pop
imul
push
les
and
or
add
adc
cmp
imul
lret
xchg
mov
and
sub
fadds
popf
pop
fst
xchg
push
test
imulb
not
xchg
jb
pop
cwtl
jle
in
or
lea
jno
mov
sahf
add
repnz
jge
or
xor
jp
xchg
mov
enter
jns
jmp
clc
inc
jne
sbb
out
fistpll
rolb
lea
mov
xor
mov
aaa
jne
xor
icebp
push
pop
cmp
jne
loop
sub
inc
arpl
inc
add
sub
add
mov
sub
and
xor
push
cmc
xchg
jge
sbb
mov
leave
mov
inc
push
pusha
dec
stos
cmp
andb
jae
and
fstps
sbb
fsubrp
mov
jp
mov
xor
adc
mov
cwtl
imul
jp
add
mov
inc
lds
jnp
scas
aas
aam
shrb
jbe
out
sub
xchg
pop
call
dec
je
pop
sub
sub
out
dec
loopne
and
leave
push
stos
jnp
cmp
int3
jg
add
test
popa
mov
rolb
inc
push
mov
sbb
fs
mov
push
add
push
hlt
xchg
jo
cmpsl
dec
lea
mov
aas
adc
scas
and
scas
and
jbe
lea
loopne
iret
in
pusha
jbe
add
mov
inc
dec
jns
imul
popf
aad
sbb
push
jp
std
in
inc
mov
push
push
sbb
pop
mov
or
xor
shll
rorl
mov
je
adcb
add
add
jl
loop
arpl
mov
push
pusha
push
jns
and
xchg
je,pn
sub
int3
adc
cli
cwtl
das
movsb
xchg
lods
filds
int3
roll
mov
pop
cmpb
adc
jns
test
incb
insl
mov
test
pushf
mov
sbb
pusha
mov
jae
lret
or
sub
test
cmp
inc
icebp
loopne
fisttps
sbb
daa
and
mov
decb
fsqrt
mov
xor
ds
mov
add
hlt
mov
icebp
lea
scas
cmp
nop
cmp
cs
pushf
sar
iret
cmp
test
mov
jle
stc
shll
cld
add
push
int3
sub
mov
add
jl
faddl
push
sbb
inc
mov
jbe
dec
cwtl
scas
inc
xchg
in
jmp
jb
fimull
clc
mov
push
ret
or
fdivs
mov
js
popf
pop
xchg
pop
sahf
out
xchg
cld
xor
dec
jmp
aad
push
ret
arpl
mov
sbb
sbb
push
mov
adc
mov
add
fstps
sbbb
sub
std
jp
ret
or
mov
ret
sti
enter
lods
inc
inc
into
test
xor
or
out
popa
notb
add
fstpt
mov
inc
jne
pop
mov
cmp
sbb
jb
scas
outsb
mov
scas
pop
inc
addr16
mov
inc
mov
pop
daa
and
jne
lcall
dec
sbb
adc
push
out
adc
pop
aam
push
add
mov
daa
adc
mov
or
shll
cmp
insl
cwtl
xor
sub
sub
int
push
add
jb
pop
jb
sti
out
dec
fs
mov
pop
pop
xor
push
test
and
enter
mov
lock
popf
neg
out
aad
pushf
in
sub
sarb
mov
mov
push
popf
stos
mov
jno
sarl
fistpl
xchg
maxps
imul
or
pop
jnp
fs
push
insl
ds
lret
push
cmc
hlt
xorl
pop
scas
sub
or
xchg
mov
js
lock
mov
and
lret
adc
cmp
mov
inc
int
mov
xor
sbb
xchg
shl
fsubl
mov
and
cld
mov
jb
scas
push
dec
shl
xchg
jne
popa
add
imul
cmp
cmpsl
jnp
cmp
push
jbe
mov
pusha
imul
out
mov
mov
cmp
icebp
xchg
scas
cmp
mov
sbb
mov
popf
pop
push
pop
xor
out
dec
inc
sbb
enter
pop
cmpsl
xchg
push
add
sub
mov
in
std
lahf
test
and
pushf
cli
popa
sub
das
add
lret
xor
xor
out
jns
adc
pop
jbe
fs
gs
pop
lcall
cmp
test
cmc
daa
sbb
xor
cs
test
cmpl
push
mov
je
push
out
hlt
in
shll
push
fmuls
mov
and
mov
inc
dec
push
sub
pop
stos
repz
clc
testb
in
cmpsl
sub
mov
inc
mov
cmp
ljmp
repz
movsb
dec
cmp
sbb
imul
repz
cmpsb
mov
xchg
jg
pop
aas
push
stos
pop
inc
lret
sbb
cmp
mov
or
sbb
lret
jb
xor
mov
push
loop
pop
mov
push
out
lea
adc
lret
jno
mov
faddl
sub
mov
aam
mov
add
jb
loopne
lods
and
movsl
das
int
cmp
sbb
and
call
es
xchg
inc
xchg
inc
pop
xchg
in
xor
mulb
dec
rolb
mov
int3
enter
inc
xchg
jno
ror
lahf
xchg
out
or
add
fistpl
or
int3
insb
xor
popa
mov
sbb
movsl
sub
daa
mov
scas
test
and
in
adc
ret
test
and
xchg
test
dec
sbb
sbb
dec
cmp
xor
jo
sub
mov
mov
mov
mov
shlb
mov
inc
dec
mov
xor
xchg
int
mov
mov
xor
pusha
out
bound
pushf
mov
mov
push
shrb
push
mov
call
test
sbb
inc
neg
push
inc
aad
jno
sub
xchg
or
notl
jp
jne
dec
jno
hlt
mov
lcall
push
fistpll
ret
push
adc
outsl
xchg
movsb
jl
cli
mov
sti
xchg
lds
jge,pt
iret
mov
mov
mov
ljmp
enter
sub
jae
jle
addb
clc
mov
sub
pop
sub
sbb
or
std
cmp
adc
mov
xor
dec
jecxz
dec
hlt
lods
lods
pop
push
inc
fcmovnu
rorb
clc
xor
jp
aaa
cmp
test
pushf
inc
push
cwtl
push
sbb
aad
imul
lcall
daa
pop
das
repnz
jle
inc
mov
xor
out
icebp
rolb
aad
rcll
dec
mov
or
jnp
mov
cmp
outsl
pop
test
daa
jg
jnp
inc
inc
shll
ret
aaa
mov
pop
int3
rcrb
std
icebp
fistpll
or
pop
inc
call
inc
int3
add
sub
mov
pusha
stos
and
ja
jg
shll
jne
pop
sub
gs
dec
sbbb
fs
pop
out
mov
xor
fidivl
or
push
mov
jl
data16
sub
mov
add
sbb
mov
xor
loope
stos
pop
mov
xor
and
inc
xchg
mulb
scas
jnp
inc
xor
pusha
stc
or
pop
outsl
ret
push
mov
scas
pop
cmp
popf
and
adc
adc
sub
lret
push
fstpl
cmpsl
jae
jb
cltd
es
adc
sub
fildll
int
dec
lds
lcall
popf
inc
ret
ljmp
add
shlb
mov
sub
mov
and
cmc
fistpll
hlt
add
negl
sbb
sbb
mov
push
call
jmp
jecxz
out
loop
inc
or
mov
fnstcw
lahf
xor
sbb
stos
in
adc
test
stos
inc
jns
mov
and
mov
jmp
push
fildll
xchg
lahf
cmpsl
out
add
pop
add
pusha
mov
idiv
daa
add
cltd
or
push
mov
pop
jp
xor
jnp
insb
inc
jo
fwait
or
data16
cmp
lds
scas
in
push
ljmp
mov
dec
clc
cli
mov
mov
pop
adc
or
aaa
pop
lds
dec
outsl
fnstcw
movsl
and
jnp
test
nop
loop
add
mov
jbe
popa
xor
xchg
es
test
sbb
xchg
cmp
mov
aas
pop
std
das
add
sub
in
sbb
add
movsb
or
arpl
scas
jb
aam
sub
shl
subb
mov
rcll
pop
push
outsb
xor
and
dec
adc
daa
add
push
mov
inc
mov
lahf
mov
cmpsb
test
loop
mov
pop
pop
dec
into
cli
aas
and
add
roll
popf
fisttps
out
mov
sub
pop
inc
push
adc
das
loope,pn
cld
test
cmp
jge
push
iret
scas
push
xchg
and
jo
nop
pop
push
lock
dec
les
aas
xor
cmp
nop
inc
and
or
inc
and
jb
packssdw
sub
mov
fcmovne
lock
stos
test
jle
adc
push
addr16
and
pusha
aas
bound
mov
or
pop
fimuls
mov
dec
jecxz
lret
inc
cmp
sbb
aas
data16
lds
push
stc
xor
shlb
push
test
xchg
add
mov
out
stos
cs
mov
out
movsl
sub
lea
sbb
push
mov
jle
and
xchg
cmp
addl
add
jne
and
clc
notl
insb
repz
loope
sarb
popa
pop
and
mov
push
cmpsl
in
and
lcall
out
imul
and
ss
in
push
dec
int
ljmp
mov
insb
mov
outsl
add
or
inc
dec
jl
lret
dec
stos
or
outsb
jmp
pop
xchg
bound
or
lea
xor
mov
cmp
pop
hlt
insl
inc
add
gs
popf
fwait
sub
inc
jns
addr16
adc
fdiv
push
add
xchg
hlt
fsubrs
or
daa
das
sbb
xor
push
dec
mov
shll
aad
pushf
clc
inc
dec
dec
jns
cs
dec
xlat
rcrb
mov
sub
in
shrb
test
cmp
dec
dec
movsl
mov
out
cwtl
bound
push
int
or
mov
inc
lods
inc
inc
or
loopne
mov
inc
or
rcr
xchg
mov
cmp
mov
rclb
mov
jnp
test
movsb
bound
in
cmp
jmp
fistl
push
popf
icebp
lcall
ret
cmp
inc
testb
fucomp
cmp
mov
dec
cmpsl
lods
repz
stos
jns
add
shlb
inc
or
pushf
inc
pop
fcoml
adc
or
cmp
aad
jecxz
imul
inc
cld
sbb
jno
pushf
enter
jmp
push
mov
cmpsl
inc
and
inc
mov
and
imul
mov
add
ret
in
lret
testl
push
and
in
pop
adcl
ds
outsb
gs
mov
xor
out
mov
ja
jmp
int3
addb
cmpsb
scas
scas
out
push
gs
cmp
jp
push
add
lret
mov
pop
movsb
sub
sub
jno
ljmp
lods
jo
lock
sbb
sub
imul
or
rorb
pop
icebp
cld
add
repnz
sahf
xor
cld
pop
xchg
jmp
mov
jbe
shll
pop
cmpl
rolb
in
cmp
sbbb
testb
or
push
into
xor
cld
jg
ljmp
inc
or
sar
nop
xor
or
clc
mov
or
div
andl
icebp
stos
mov
arpl
add
add
in
stos
dec
lea
pop
and
push
std
rorb
push
push
mov
dec
ljmp
test
xor
int
call
xor
flds
push
test
int3
add
mov
pop
shl
xchg
mov
ffree
mov
movsb
iret
and
mov
dec
mov
cli
dec
call
and
inc
jl
push
push
mov
subb
mov
arpl
adc
mov
or
dec
add
test
mov
stc
fbld
cmp
mov
notb
adcl
into
iret
repnz
icebp
push
cmp
fisubrl
push
mov
xchg
popa
sub
mov
dec
int
lods
loope
lret
sub
outsl
jns
stos
sub
lods
cmc
shlb
imull
stos
xor
dec
aad
add
jg
adc
xlat
cmp
inc
ret
push
jne
insb
xchg
inc
mov
push
ror
jg
pusha
ljmp
fdivrp
inc
arpl
rorb
and
cmpl
sub
and
jl
and
mov
jo
cld
cmp
in
mov
loope
arpl
cwtl
subb
xlat
sub
jge
xchg
rcrb
stos
lret
sbb
cmp
movsl
in
push
das
jp
sar
stc
mov
popf
cmp
iret
jnp
sub
jle
and
std
popa
stc
sbb
mulb
addl
ror
mov
push
std
add
mov
pop
scas
pop
daa
xlat
loop
cmp
add
lods
add
pop
push
lcall
imul
cmp
fistl
xchg
jecxz
fimuls
mov
push
cmpsb
test
cmp
fcoml
lcall
adc
pop
push
mov
inc
rolb
mov
fildll
outsb
shrb
push
imulb
mov
adc
add
insb
addr16
mov
jl
sbb
push
fisubrl
push
lret
push
mov
ret
pop
cmp
rorb
sbb
fmuls
xchg
sub
mov
pop
push
jle
dec
movsl
xchg
push
aam
fwait
sbb
popa
pop
add
and
sub
rolb
cltd
in
lock
add
adc
out
adc
int
pop
or
cmp
or
icebp
pop
inc
jne
sbb
pop
mov
in
mov
ss
push
push
insl
mov
inc
inc
dec
dec
lds
cmp
aam
fstps
jmp
int3
ret
call
iret
cld
xor
xchg
mov
pop
rcrb
cmpsl
sar
roll
popa
dec
int
rcrl
lea
fstpt
add
mov
push
jp
movsb
push
test
test
add
lds
into
or
icebp
sub
inc
into
jle
xor
jmp
pushf
dec
mov
pop
fcmovnu
movsb
or
xchg
dec
loope
xchg
jo
call
mov
cmpsb
cmp
xor
dec
test
out
or
push
inc
aas
pop
or
iret
je,pn
enter
mov
cmp
push
ret
into
movsl
mov
jno
push
jmp
pop
sub
pop
lcall
mov
sub
xlat
and
mov
cmc
xchg
addr16
mov
jne
push
mov
out
vrsqrtps
dec
std
mov
cmpsb
lahf
push
sub
gs
mov
mov
repz
loope
int
out
cmp
lea
std
mov
mov
jno
sub
and
stc
lds
adc
jns
jbe
jmp
faddl
movsb
pop
jge
dec
out
pop
and
lods
inc
inc
mov
mov
pop
inc
mov
movsl
adc
jo
call
shrb
test
in
push
push
cld
and
mov
cld
scas
test
pop
sarb
mov
imul
jmp
fsubrl
jmp
lods
aas
jecxz
mov
jmp
push
test
pop
les
into
inc
jne
inc
sbbb
jns
xor
xchg
mov
xchg
mov
dec
mov
push
add
mov
mov
push
icebp
sarb
mov
andps
js
ret
jle
fs
xor
or
arpl
stos
mov
ret
add
arpl
testl
jb
movsl
mov
mov
cmp
xchg
cmpsl
pop
jnp
adc
pusha
fadds
test
outsl
dec
pop
aaa
lcall
sbb
pop
divb
mov
mov
popa
fildll
mov
dec
mov
sub
out
fs
cli
pusha
inc
sub
movsl
and
sti
leave
ds
mov
sbb
lret
imull
ljmp
inc
sahf
jecxz
loop
or
lea
decb
mov
mov
pop
fstpl
and
fs
push
mov
iret
pop
mov
dec
loop
sbb
vmovntpd
adc
push
mov
xchg
btr
sahf
mov
inc
iret
push
movsl
pushf
shrb
add
in
lds
bound
xor
mov
jo
int
sbb
xor
lock
aaa
pusha
fdiv
lods
inc
xchg
pop
and
push
pop
fwait
add
pop
mov
test
pop
add
mov
fidivl
out
push
push
push
push
push
lahf
push
cmp
xchg
fisubrs
jo
sbb
mov
ret
pusha
and
jbe
inc
xchg
outsl
call
ret
and
push
dec
dec
cmp
fnsave
hlt
lret
pop
loop
and
loopne
shrl
repz
cmp
jecxz
mov
mov
xchg
ficomps
mov
xchg
and
in
popf
js
cmp
sub
push
out
jno
shl
fsubs
fnstcw
add
ds
jne
jbe
mov
push
jae
mov
test
cld
insl
imul
or
adc
mov
dec
pop
data16
ja
loopne
and
xor
jge
es
mov
jns
jne
mov
mov
mov
mov
mov
imull
hlt
test
loope
jae
ja
xor
hlt
inc
mov
int
add
out
xchg
mov
out
imul
int
push
sbb
mov
arpl
inc
inc
cmp
sbb
cmp
sbb
fiaddl
pop
imul
inc
mov
scas
and
pop
hlt
jb,pn
cld
push
xchg
pop
fcompl
jmp
subb
shrl
loope
mov
movsb
data16
and
inc
or
leave
fsubl
insl
mov
dec
jl
pusha
push
adc
mov
fimuls
in
cmc
js
inc
mov
mov
iret
fiadds
xor
out
or
xchg
dec
fsub
icebp
ljmp
push
mov
test
jnp
dec
aad
es
push
mov
pop
xor
std
dec
adc
idiv
adc
aad
cmp
mov
shlb
or
mov
push
dec
fwait
xchg
lods
outsb
adc
push
fisubl
lods
adc
sub
jbe
pushf
arpl
pop
sbb
lock
cltd
mov
xchg
add
hlt
xchg
and
push
sbb
mov
loope
inc
fildll
inc
fs
arpl
cmovb
push
mov
test
aas
push
ljmp
push
orl
mov
jecxz
jmp
mov
imul
mov
inc
push
rorb
lds
jae
jb
jmp
pop
fsubrs
mov
pop
lods
xor
lock
jnp
stos
and
mov
sbb
mov
rcr
push
dec
popa
push
mov
sbb
clc
sub
add
sub
inc
test
loopne
inc
or
lds
hlt
sub
paddusw
xchg
outsb
dec
mov
sub
sub
jge
mov
fs
into
enter
push
xor
subb
mov
inc
test
xor
mov
jle
scas
lret
cmpsb
lcall
xor
sub
idivl
cli
fistl
sbb
lahf
es
out
ja
mov
int
test
ret
mov
push
add
xchg
mov
push
dec
fwait
adc
dec
mov
cmp
xor
sti
push
jb
or
lcall
fdivrl
inc
mov
mov
mov
mov
aad
sub
js
cmp
and
push
cmp
add
or
and
lock
lahf
inc
fs
call
mov
adc
sbb
inc
insb
test
ljmp
inc
mov
mov
addb
jno
cmp
jg
mov
or
test
mov
popf
in
pop
in
cmc
xor
adc
cmp
incl
and
les
in
pop
inc
std
push
es
sbb
outsb
mov
out
dec
inc
lahf
cmp
sarb
repnz
sti
mov
ss
je
sbb
aas
out
incl
dec
mov
clc
inc
lds
std
insb
into
gs
dec
fisttps
ljmp
pshufw
iret
cwtl
dec
jl
mov
pop
mov
jmp
dec
add
jb
mov
cmpsb
mov
mov
sbb
call
xor
mov
addb
loopne
shl
test
stos
cld
xor
out
hlt
lcall
mov
cmp
mov
xchg
jo
jo
cmp
clc
ss
clc
iret
or
les
add
xor
cmp
push
jg
sti
mov
das
stos
stc
mov
shll
xchg
pop
inc
jmp
push
outsl
and
xlat
mov
js
jmp
rorb
jne
inc
xchg
xor
imul
jne
popa
mov
ret
add
rcll
bound
es
es
mov
fs
push
call
adc
sarl
push
xchg
xorb
lret
cmp
dec
ds
leave
mov
orb
lods
cmp
sub
fs
xorl
outsl
dec
xor
mov
add
or
pop
xchg
insl
xchg
xor
cmc
mov
insl
mov
stc
mov
jno
adc
push
push
mov
jg,pn
dec
jecxz
bnd
jnp
cmp
cmp
lods
and
or
pop
cltd
cld
xor
inc
fdivl
or
les
xor
jb
mov
and
fildll
inc
dec
jbe
mov
es
insl
cwtl
ljmp
push
js
cld
call
and
aam
movsb
addr16
add
clc
mov
xor
ja
mov
inc
test
add
jo
nop
enter
jnp
popa
icebp
adc
in
sbb
pop
xchg
ret
inc
xchg
lock
mov
lea
fldl
adc
aas
jae
popf
fmul
cs
aad
mov
rclb
cmp
xchg
sub
iret
xchg
add
jmp
iret
cwtl
jne
sub
addr16
inc
fadds
dec
cli
cmp
cmp
push
test
dec
add
std
add
or
cmp
inc
mov
repz
inc
sahf
mov
aam
cmp
mov
or
or
dec
jge
loope
pop
das
pop
push
add
lods
jnp
mov
dec
lods
sahf
pop
imul
add
cltd
dec
push
inc
push
pop
push
pushf
mov
sub
sbb
jno
das
sub
ret
out
nop
ret
fidivrl
sub
into
lahf
stos
ja
push
sub
popf
sbbb
pushf
dec
repnz
sub
mov
andb
jg
xchg
adc
dec
lcall
sbb
adc
pop
js
aad
stos
stc
cs
movsb
ss
outsl
or
or
xchg
out
jecxz
pop
daa
fsubrl
popf
and
pop
push
adc
sbb
repz
inc
push
or
ja
xor
mull
adc
sahf
dec
sub
jmp
js
push
cmp
dec
pop
xchg
pop
mov
push
or
mov
out
xchg
mov
subb
push
mov
and
test
sub
push
or
dec
lods
or
movsl
mov
out
imul
jecxz
cmp
sti
data16
aad
and
les
andb
test
cmpsb
jmp
outsl
ficoml
mov
inc
add
rcrl
orb
out
ss
xchg
movl
or
mov
popa
imul
dec
bound
dec
loope
add
push
nop
sub
add
or
int
cmc
ss
mov
mov
fsubl
push
mov
jne
test
and
or
jmp
cmp
loop
andb
xchg
dec
ret
sbb
mov
lods
or
jp
sahf
in
pop
xchg
aam
sahf
mov
jmp
ss
ret
cmp
cmpb
sahf
add
cmp
or
lret
movsb
mov
sub
push
or
pop
notl
adc
push
orb
gs
sub
pop
cmc
cmc
cmp
jg
pop
push
loop
inc
repnz
adc
jp
callw
fwait
leave
mov
push
sbb
fwait
int3
icebp
mov
setp
rcrl
loopne
das
test
add
jbe
mov
pop
and
push
push
into
jecxz
xchg
lret
adc
jns
xor
mov
loope
jmp
mov
mov
and
cli
mov
pop
aaa
das
mov
xchg
mov
xchg
xor
lods
sub
pop
xchg
in
push
push
imul
xchg
nop
std
lods
mov
rcll
xchg
mov
cld
repz
bound
dec
sub
movsl
mov
fiaddl
add
rcl
fistpll
mov
test
jb
enter
pushf
pop
mov
pop
out
cwtl
roll
sahf
push
mov
push
or
in
lcall
data16
dec
adc
aam
aas
nop
jg
lds
stos
sbb
pop
push
mov
dec
shll
enter
mov
add
pop
pushf
sbb
add
cltd
push
cmp
mov
and
outsl
jnp
jb
jbe
mov
lods
shll
jle
jns
xchg
mov
test
sub
adcb
or
pop
cmp
int3
aad
jae
add
jp
mov
loope
sub
dec
mov
dec
rol
mov
xchg
cmp
addl
cmpb
or
cmpsb
adc
mov
adc
mov
add
or
gs
outsb
sub
mov
adc
or
dec
jno,pt
hlt
mov
lret
dec
adc
mov
and
sub
adc
xchg
lret
leave
dec
sbb
scas
push
imul
xor
les
je
mov
dec
xchg
aam
fbstp
int3
pop
call
les
add
repnz
pusha
sti
out
cs
push
ret
sbb
in
int
xor
jb
imul
mulb
rcr
std
lret
testl
pop
cmpl
fdivl
cmp
aad
mov
jg
setg
fwait
push
push
stos
daa
icebp
jmp
pop
mov
out
lret
sbb
pop
int3
addr16
xchg
sbb
add
repnz
xorb
push
and
cmpsb
dec
inc
adc
inc
push
jb
fiadds
jp
outsl
sbbb
lods
je
leave
or
popf
icebp
out
das
xlat
sbb
jge
mov
jb
in
push
dec
inc
cmpsl
ja
pop
or
or
icebp
notb
push
pop
sub
arpl
test
divb
cmp
cmp
icebp
pop
loope
pop
cmpsl
bound
jge
lcall
std
jge
mov
shrl
icebp
add
loopne
mov
lock
in
xor
stc
pop
lret
outsl
xor
filds
movsl
xchg
jbe
lods
pop
aad
scas
ret
std
in
in
addr16
adcl
push
mov
loope
cmp
push
popa
lock
add
dec
sub
sbb
push
sbb
gs
aaa
inc
ret
ljmp
jae
rclb
jecxz
or
and
or
dec
js
dec
pop
and
dec
sbb
notl
sub
arpl
pop
mov
in
mov
icebp
sahf
clc
stos
cli
push
scas
cmc
dec
negb
jbe
pop
ja
lahf
sub
rcrl
sub
xor
inc
in
ucomiss
push
sbb
les
frstor
or
test
lahf
push
bound
or
jnp
das
divl
add
sbb
push
xchg
dec
lods
dec
les
addb
ja
sbb
lods
pop
push
jmp
testb
lods
add
sub
dec
lret
adc
std
das
in
dec
push
pop
fwait
adc
rclb
std
aas
mov
lret
cmp
je
sub
xchg
je
sahf
push
dec
das
imul
outsb
imul
or
hlt
mov
inc
jne
mov
jmp
pushw
mull
add
jne
pop
push
cmpsb
fisttpll
aam
js
aad
test
out
pushf
cmp
or
jge
push
inc
sti
push
add
rcr
cmp
bound
imul
in
pop
or
sub
ret
insl
mov
or
sub
cmp
mov
imul
pop
sti
pop
or
cmp
iret
sub
das
mov
sahf
jo
sbb
nop
mov
mov
jp
or
cmp
bound
mov
pop
inc
cmp
push
cmp
mov
and
pop
and
mov
in
into
push
aad
lea
sub
xor
lea
cmp
mov
pop
lods
mov
loopne
aas
in
negb
loopne
repz
leave
adc
arpl
shrl
movd
mov
ja
bound
push
insl
lock
cmp
sub
jge
adc
and
rcll
pushw
mov
or
lret
std
lods
subb
fwait
xchg
pusha
push
jnp
xchg
push
push
dec
add
inc
jl
xor
pushf
and
and
mov
inc
pop
adc
lret
xor
aam
shlb
push
push
push
test
and
mov
fsubrp
xchg
arpl
mov
jmp
adc
mov
xchg
iret
fbld
dec
mov
dec
cmpb
xchg
push
jne
sbb
cmp
shl
out
popa
pop
ljmp
inc
cmp
dec
fwait
mov
inc
pop
lcall
test
dec
sbb
pop
lods
jp
mov
bound
dec
addr16
cmc
lahf
ret
and
add
xchg
mov
imul
sar
ja
rcrb
jp
cmp
pop
imul
leave
fs
ja
loop
pop
loop
in
pop
and
mov
dec
pop
push
dec
jle
gs
adc
movsl
mov
push
call
pop
sarl
xchg
mov
push
cmc
jmp
js
sbb
outsl
jmp
pusha
insl
cmp
mov
rorb
insl
in
pop
jecxz
xchg
stos
pop
icebp
or
add
adc
dec
ds
ljmp
xor
xchg
push
ss
ss
xchg
repz
and
ja
push
daa
jg
iret
fcoml
addr16
xlat
ljmp
out
shr
movsb
mov
shufps
cltd
imul
std
dec
cmp
adc
xor
dec
xchg
xor
je
jb
xor
cld
stc
inc
out
adc
cmp
out
rcr
inc
cmp
jecxz
mov
icebp
mov
in
mov
cmp
add
mov
xor
jp
in
mov
ss
outsb
dec
mov
lods
jb
dec
or
pop
ret
idivb
dec
pop
mov
mov
xchg
imul
dec
cmovle
int
xor
xchg
sub
xor
push
or
jnp
cmp
pushf
insb
imul
in
mov
fs
push
adc
xchg
mov
pop
adc
pandn
cwtl
mov
push
jno
les
dec
call
fistpll
adc
push
mov
aas
inc
mov
mov
fsubrl
push
jp
and
cmp
pop
mov
cmp
decb
fwait
icebp
arpl
push
pop
xchg
jae
pop
mov
add
pop
lods
andl
and
mov
jge
xchg
shrl
testl
les
fwait
xchg
sbb
xchg
rcrl
int3
pushf
sahf
out
clc
sbb
sbb
sar
fcoms
xor
stos
sbb
xor
jno
sub
rol
cmpsl
mov
iret
xchg
fcmovnu
mov
jmp
jp
dec
das
and
jl
or
dec
and
mov
fsubs
aad
xchg
mov
fsts
xchg
inc
ds
nop
xor
or
call
fcos
mov
mov
pop
pop
cwtl
xchg
adc
testb
adc
cmp
push
pop
inc
pop
mov
notl
inc
and
mov
repnz
sbb
shrb
shrl
sub
sbb
imul
jecxz
icebp
sarl
fwait
mov
push
sbb
loope
inc
xor
xchg
pop
lret
sub
pop
dec
and
dec
int
es
sbb
and
movsl
push
stc
outsl
test
mov
stos
or
mov
mov
or
ja
ret
scas
shll
add
sub
jle
dec
pop
icebp
in
repnz
jge
stc
loop
inc
dec
imul
fsubrs
lods
ds
inc
push
ss
or
fimuls
xchg
shrb
clc
pop
leave
lcall
and
dec
aas
xchg
dec
xchg
icebp
scas
push
popa
mov
adc
dec
sbb
icebp
push
adc
xchg
jae
xlat
cltd
sub
cmp
cmc
push
xchg
sti
dec
mov
mov
xor
lahf
pop
gs
cli
mov
and
repnz
cli
lea
std
mov
and
sub
repnz
fisttpl
push
or
clc
jge
les
imulb
aas
cmp
jp
insb
into
ret
mov
aam
pop
int
jno
mov
and
ss
pop
inc
notl
jp
mov
ja
fsts
mov
fcmovu
adc
popa
or
jle
cmove
xchg
loope
into
gs
test
push
and
imul
scas
adc
sub
push
push
sarl
test
sbb
mov
jmp
pop
jmp
inc
orb
out
mov
sub
insb
out
in
mov
xchg
push
jge
fs
int
in
call
arpl
fiaddl
pusha
mov
repnz
xor
cmp
pushw
mov
jg
cld
push
das
dec
push
add
cmc
test
addb
ds
xchg
lcall
data16
movsl
or
in
movsl
mov
jl
pushl
mov
cmpsl
out
jnp
sti
fmull
sub
mov
gs
and
cli
shrb
mov
add
or
outsl
mov
mov
shrb
jle
ret
push
inc
test
adc
test
mov
xor
inc
dec
scas
lods
and
mov
je
xlat
movsb
mov
popf
imul
sbb
imull
cmp
inc
in
pop
jmp
pop
std
add
sub
int3
or
mov
add
cmp
inc
jo
data16
cmp
pop
roll
pop
js
mov
iret
out
imul
dec
cmp
mov
mov
cmc
sti
clc
clc
xor
out
cmp
aad
xchg
lods
sbb
lret
popa
adc
inc
movsl
xor
inc
mov
push
jo
sahf
push
inc
xchg
das
xchg
jl
xchg
cmp
sbb
mov
daa
push
clc
mov
insl
in
movsb
mov
shll
jmp
fwait
sub
into
mov
push
adc
adc
xor
jo
or
jno
pop
jmp
popf
out
push
fwait
xchg
inc
xchg
add
sub
jno
mov
and
sbb
outsl
push
ljmp
in
cmc
mov
mov
outsl
shlb
mov
arpl
xchg
push
movsb
lds
xchg
dec
xor
scas
in
lahf
subb
jge
out
pop
std
cmp
loopne
mov
pop
cmp
xchg
push
jno
mov
mov
js
cli
adcl
in
aas
xchg
cmp
test
icebp
mov
ds
mov
fdiv
push
mov
mov
add
gs
mov
test
sbb
rcrl
aas
push
jno
xor
leave
ljmp
faddl
int3
ljmp
outsb
push
push
and
es
aam
sub
das
pop
ss
jno
nop
ds
in
pop
jno,pt
scas
insb
sub
andb
sub
sarb
push
cmp
cmpsb
mov
xchg
push
dec
jecxz
out
mov
xor
test
fdivl
or
cwtl
xor
in
jmp
clc
or
or
or
push
ficoms
mov
je
in
outsb
mul
aam
test
test
leave
xor
add
fstpl
out
dec
and
jecxz
std
pop
push
rcll
mov
xchg
sahf
outsl
lret
pop
jae
popa
sbb
cli
push
inc
cmp
sbb
fnsave
cmp
sbb
xchg
popa
popw
jp
subb
jge
outsb
and
sub
sub
mov
mov
sbb
nop
adc
stos
cmpsb
inc
test
je
jno
inc
jne
jo
inc
incb
stos
push
sbb
fstpl
sbb
fisubs
jl
mov
in
jnp
out
add
lea
scas
sahf
aad
adc
pop
push
pop
dec
fs
and
adc
js
outsl
mov
jl
cld
ret
jmp
mov
jne
or
add
je
cmpsb
sti
arpl
test
adc
gs
or
lods
mov
fcoms
inc
stos
and
enter
fpatan
xchg
dec
repz
adc
xchg
icebp
and
in
cmp
inc
mov
or
in
xchg
in
xchg
lret
cmpsb
inc
xchg
jmp
jo
inc
out
fldt
fnstcw
sbb
or
push
and
mov
sar
push
je
fcmovnb
inc
mov
pop
imul
clc
mov
bound
in
pop
push
push
test
sahf
push
mov
inc
ja
cld
scas
push
jns
incb
jne
xchg
jbe
xor
mov
popf
subl
xchg
push
adcb
adc
jmp
mov
dec
cmc
or
inc
lret
pusha
in
nop
jno
mov
and
mov
pushf
rep
imul
mov
lea
cmp
aaa
sub
mov
out
and
mov
xor
sti
jno
rclb
cmc
xchg
int3
xorl
push
imull
mov
mov
inc
lahf
sbb
loop,pn
mov
test
repnz
cmp
cmpsb
fcmovbe
dec
call
sub
sbb
cmp
sub
lods
push
pop
int
orl
pop
pop
xor
dec
push
lahf
mov
out
scas
xor
movsl
cmp
ja
popf
in
mov
jns
dec
jo
jl
push
mov
push
test
xchg
and
and
dec
out
js
xchg
jno
mov
fs
iret
inc
cwtl
addr16
repnz
icebp
jno
cmpsl
cmpsb
xor
pop
mov
leave
or
scas
bound
aad
or
les
out
repnz
stc
inc
aaa
test
test
outsb
dec
pop
adc
in
mov
loope
scas
popa
stc
xchg
inc
or
mov
or
nop
mov
pusha
sbb
lock
or
shlb
test
push
imul
out
les
fmuls
cmp
xchg
imul
xor
ss
shrb
jbe
xor
mov
lods
ret
aad
pop
cmp
add
lcall
or
sub
and
dec
out
int3
call
fildl
cmpsl
pop
aam
sar
lret
stc
sbbb
add
sub
mov
cmpsb
int
mov
call
call
inc
fidivl
push
fadds
push
pop
sbb
or
add
inc
clc
cmp
imul
insb
mov
js
jg
mov
arpl
mov
mov
mov
aaa
test
movsl
popf
jae
push
fldenv
push
adc
jb
add
out
sbbb
push
cmp
add
cld
stos
xchg
dec
xchg
lret
fidivrs
or
adc
stos
shlb
adc
jmp
fisubrs
push
adc
sarb
sbb
push
xchg
bound
movsb
pop
sub
jge
pop
or
movsl
cmp
rcll
stos
nop
mov
or
shl
xchg
addr16
ficompl
ds
mov
lods
ret
mov
pushf
sub
add
xor
pop
jne
mov
ds
insb
jnp
cmp
jmp
jecxz,pt
pop
rol
add
pop
nop
mov
les
adc
shr
js
iret
pusha
test
fs
ss
or
cmpsl
xchg
daa
pushf
mov
ljmp
out
pushf
test
test
pushf
mov
leave
mov
push
call
jno
mulb
push
stos
daa
repz
mov
std
xchg
sbb
scas
stc
mov
sbb
xchg
hlt
sub
inc
push
leave
mov
push
aaa
outsb
and
jmp
dec
pop
out
mov
or
mov
lcall
subb
adc
iret
xlat
mov
add
mov
dec
or
arpl
jg
sti
push
stos
and
xchg
clc
dec
mov
sub
mov
and
sub
and
nop
push
cltd
fwait
adc
or
dec
pop
mov
and
jmp
mov
fisttps
sti
sbb
push
jb
xchg
lret
xor
repz
lret
xchg
roll
mov
lret
outsb
sbb
cmp
add
leave
pop
pushl
cmp
adc
test
xchg
insl
push
iret
je
xchg
xor
sbb
bound
sbb
adc
and
shr
jne
and
je
clc
mov
sub
or
pop
loopne
xor
adc
shrl
mov
sbb
out
cmpl
mov
insl
in
cli
dec
repnz
outsb
mov
jmp
or
push
mov
andb
ss
sti
inc
mov
inc
adc
and
fmuls
daa
rcll
out
stos
mov
jno
out
ljmp
sbb
cmp
inc
aaa
mov
pop
adc
repz
mov
stc
mov
outsb
cmp
sar
inc
push
xorl
xorb
into
mov
subl
lea
sbb
push
or
ljmp
bound
or
add
adc
xchg
ljmp
ret
aam
loopne
imul
leave
mov
sbb
insl
int
arpl
xchg
inc
push
push
cs
mov
mov
sti
mov
loop
sar
mov
sub
test
ds
test
push
mov
repz
and
lea
insl
shlb
push
in
adc
push
popl
loopne
dec
leave
cwtl
cmp
ja
ja
movsl
hlt
mov
xchg
xchg
push
mov
data16
sub
pop
ss
cmp
add
jne
xchg
dec
cmp
and
cmp
push
movsb
pusha
out
inc
add
les
movsl
xchg
pop
push
sub
add
mov
xchg
movsb
les
sti
pop
adc
inc
or
add
add
or
jb
lods
test
addr16
inc
cmp
movsb
iret
sbb
push
pop
pop
addr16
adc
mov
dec
test
xor
push
repnz
js
or
repnz
cmc
jl
push
pop
outsb
loopne
pop
push
adc
arpl
pushfw
add
dec
in
sbb
xchg
sub
movsb
jnp
adc
mov
scas
stos
retw
in
aas
push
xor
add
addl
pop
add
sub
cmpb
mov
and
cmp
enter
sub
lods
ret
pop
mov
push
test
rorl
mov
push
sbb
xchg
test
sub
fisubrl
rep
mov
xchg
dec
insl
ss
mov
push
jns
pop
aaa
cli
fisubrl
stc
ljmp
push
jmp
lcall
push
cmp
push
cld
adc
inc
dec
mov
jg
popa
push
cmpsb
outsb
movsb
add
lea
fisttpl
iret
push
add
out
pop
aaa
mov
mov
rcll
arpl
repnz
out
push
outsb
std
adc
fimuls
mov
cmp
sub
or
or
cmp
pop
jg
bound
ss
mov
mov
sbb
mov
cmpsb
hlt
jnp
sub
lods
daa
lock
xchg
cmpsb
inc
aas
cli
dec
fiaddl
mov
insb
pop
int3
mov
push
dec
pop
jg
sahf
movsl
add
int3
dec
mov
filds
mov
lret
add
aam
or
test
sub
test
push
and
les
xor
shll
mov
sbb
std
clc
cld
mov
mov
gs
iret
inc
jmp
or
stos
xor
dec
sbb
adcl
insl
sbb
adc
jecxz
mov
mov
sbb
ficoms
cmp
inc
jl
sbb
and
jmp
rcr
inc
and
mov
and
sub
mov
push
jmp
scas
mov
leave
push
sub
adc
add
into
test
out
adc
lret
pop
jbe
xorl
out
in
out
sbb
or
sar
pop
or
lret
leave
das
mov
aad
add
pop
sar
inc
jo
jae
fs
or
cmpl
mov
lods
insl
and
adc
cmc
mov
out
sub
mov
mov
int3
mov
fists
xorb
pop
mov
scas
push
scas
loopne
loop
push
test
lahf
dec
mov
test
inc
adc
pop
mov
fists
lahf
bswap
sahf
push
xor
loope
xor
int
sbb
push
adc
int3
lods
push
data16
mov
sbb
das
and
stos
fsts
mov
jmp
ret
sub
sub
jbe
call
test
enter
xlat
cltd
inc
les
gs
adc
repnz
sub
mov
or
dec
sbb
sar
rcrl
dec
scas
push
pushf
ds
xchg
adc
inc
shrb
xchg
test
loop
jmp
and
push
mov
out
lds
and
sbb
loope
or
stos
add
push
mov
push
hlt
push
loopne
loopne
xchg
mov
sub
imulb
and
xchg
gs
xor
mov
sbb
xchg
inc
pushf
xor
ljmp
jle
lret
lock
pop
loop
jge
add
add
clc
leave
dec
push
cli
xlat
imul
inc
mov
loopne
loope
xchg
dec
pop
dec
pop
cmp
pop
push
mov
rorl
ret
stc
xchg
mov
cs
xorl
mov
cld
push
cmc
fwait
test
push
jne
fwait
mov
mov
test
mov
pop
sub
sti
loopne
jnp
arpl
lods
rcr
jo
inc
jge
xchg
icebp
or
and
addl
leave
sahf
iret
adc
fbstp
push
repz
dec
mov
and
inc
std
xchg
xchg
cmp
add
in
push
mov
jbe
leave
stc
cmp
shrb
pop
shll
lahf
pusha
inc
sbb
movsb
cmc
sbb
and
imul
incl
jne
pusha
inc
mov
ret
out
mov
repnz
pop
adc
and
enter
dec
lcall
xor
mov
mov
in
mov
mov
push
pop
sub
out
mov
and
pop
xor
int
lds
xor
sbb
sub
popf
and
push
mov
add
daa
jecxz
in
loope
dec
imul
jg
sbb
cltd
pop
fisubrl
jg
fxch
adc
stos
xchg
ljmp
pop
add
push
dec
inc
dec
outsb
or
xchg
lock
xlat
les
aaa
sti
test
inc
cs
int
sub
or
sub
cltd
sbb
das
push
pop
jno
pop
movsl
out
loope
adc
shrb
cltd
aad
mov
and
adc
repnz
in
adc
jge
mov
cmpsb
mov
or
lods
xor
popf
lods
sbbl
lcall
add
push
popa
out
pop
shll
bound
xor
aaa
cmp
jg
sbb
push
insb
and
xor
dec
pop
mov
cmc
ljmp
xchg
or
xchg
aad
subl
add
popa
push
outsb
pop
cld
mov
ret
clc
push
jge
jae
ss
sbb
mov
add
push
and
das
scas
sti
xchg
sbb
aad
or
cmp
arpl
mov
aam
ficoml
dec
pushf
out
add
ljmp
or
cmc
pushf
fmuls
stos
jnp
mov
jle
mov
mov
clc
mov
add
mov
mov
out
or
pop
jmp
xor
int
mov
gs
or
jo
pop
push
out
jg
test
xor
mov
cwtl
ss
dec
mov
sbb
adc
enter
jns
lods
cmp
xchg
lahf
fildl
in
mov
fimuls
mov
cltd
dec
add
xor
push
ja
mov
fcomps
aas
xchg
pop
pminub
add
sub
popf
fiaddl
xchg
out
adc
adc
orl
fs
addr16
lahf
mov
or
lret
mov
outsl
test
inc
jg
in
push
or
jle
adc
nop
dec
sub
cld
sub
xchg
insb
pop
repnz
incb
aaa
sar
pop
leave
movsb
in
fsubs
rclb
enter
data16
jg
out
push
sbb
aaa
cmc
and
xchg
rol
jne
jp
dec
pop
and
mov
stos
into
mov
pop
imul
aad
insb
sub
cmc
or
jne
repz
mov
pop
fwait
cli
outsl
popa
insl
sbb
push
fwait
push
loope
push
mov
add
loope
lret
jmp
popa
inc
clc
push
int3
scas
lds
mul
in
sbb
ljmp
into
pop
test
das
sub
cwtl
repnz
adc
dec
mov
pusha
movsl
adc
adc
sbb
cli
lret
cltd
popa
xchg
mov
push
push
xor
jno
xlat
or
clc
lea
aad
and
daa
mov
xor
cmp
mov
add
mov
fnstcw
push
rol
scas
dec
mov
outsl
je
insl
xchg
lcall
mov
xor
mov
xchg
outsl
lret
loop,pt
sub
mov
imul
xchg
mov
inc
jb
push
enter
pop
call
add
mov
stos
lret
inc
mov
xor
fcmove
les
and
push
inc
imul
clc
fdivl
jns
divl
ret
nop
inc
ret
cmp
add
fcoml
dec
sbb
mov
ja
jp
jl
lcall
inc
loope
das
sbb
cltd
repnz
test
sub
repnz
fs
pop
sbb
pop
or
lock
mov
push
mov
xor
repnz
mov
daa
or
add
aas
add
out
mov
and
pop
fwait
mov
scas
adcb
popf
sub
cld
sub
pop
outsb
pop
push
add
xchg
jno
imull
lret
cmp
test
mov
mov
inc
les
cmp
sub
es
cmc
lahf
je
cmp
imul
mov
arpl
mov
mov
jl
daa
test
imul
rorl
shll
filds
mov
call
and
push
fstpt
ja
ret
std
repz
pop
decb
adc
push
mov
test
mov
push
aas
imulb
and
xchg
fwait
insl
inc
insb
mov
or
jl
mov
daa
incl
xchg
inc
cmpsb
pop
add
popf
loop
cmp
sub
pusha
inc
popf
add
mov
dec
mov
pop
call
hlt
aam
jge
loop
pop
mov
cmp
dec
test
cmp
fidivrs
ret
mov
leave
xchg
jp
pop
sahf
push
jae
sbb
inc
xor
xchg
dec
mov
xor
or
push
xorl
cmp
int
lahf
dec
xor
push
aad
dec
sub
xorb
jecxz
or
insb
pop
push
aam
scas
xchg
arpl
jae
push
inc
lds
push
mov
xor
imul
jle
hlt
xor
xor
push
fcomps
cmp
push
stos
clc
insb
loopne
lods
jecxz
mov
sbb
lret
xor
rcll
jb
adc
xchg
add
sub
add
mov
ja
push
cli
ja
push
xor
test
fstps
mov
sbb
jae
cwtl
pop
dec
cmpsl
iret
add
aas
adc
dec
dec
dec
mov
imul
call
jl
fucomi
pop
xor
ret
shl
outsb
cmc
stos
or
and
inc
dec
xchg
mov
and
mov
xchg
gs
or
xlat
mov
mov
repnz
in
xor
stos
mov
idivb
mov
lcall
stos
test
inc
fwait
sub
insl
into
dec
push
aad
gs
push
mov
lea
loope
outsb
pop
lahf
pop
adc
imul
sub
lock
xor
flds
mov
xchg
adc
roll
mov
sbb
lods
add
xor
fwait
inc
lret
xchg
push
rorb
loop
mov
jb
xor
push
icebp
xchg
test
test
pop
std
es
mov
fstps
scas
jmp
mov
inc
and
addb
jle
clc
cmp
jae
pop
cmp
out
push
push
popf
sahf
inc
cmpsb
push
push
xchg
pop
shlb
jmp
dec
xchg
xchg
or
dec
dec
mov
lock
dec
cmpsl
insb
xchg
adc
xchg
sbb
xor
ror
push
cmc
sub
sbb
shlb
scas
mov
sub
lret
int3
inc
push
xchg
pop
jp
push
push
inc
ds
cltd
pusha
mov
mov
and
sbb
mov
xchg
cmp
push
pusha
lahf
cmpsb
add
test
push
iret
xlat
sbb
int
fstp
je
pop
cmpsb
aaa
aaa
cmp
jmp
mov
pop
lret
or
movsb
add
mov
xchg
inc
shrl
idivl
roll
inc
dec
movb
inc
pop
iret
xchg
les
popa
sbb
adc
outsb
icebp
popf
out
imul
imulb
cmp
pop
adc
xor
ds
popf
xchg
lret
repnz
pop
xor
js
les
in
cltd
cmpsl
push
scas
repnz
cmpsl
aad
mov
mov
push
and
xor
jge
daa
jge
movsl
xorl
stos
daa
cmc
sbb
adc
or
idiv
das
lahf
sbb
sub
in
outsl
jl
xchg
stos
gs
xchg
sbb
or
ret
push
call
loopne
inc
cltd
lret
clc
repnz
mov
out
sahf
test
or
xchg
cmp
sub
in
popa
dec
xchg
xchg
hlt
jne,pt
dec
nop
xor
cwtl
sbb
sub
pop
std
loope
mov
in
push
pop
cmp
out
cld
imul
cmp
scas
pop
lock
push
cltd
mov
xchg
jo
insb
pop
jne
sbb
sub
and
out
ret
sbb
out
bound
fcoml
pop
lahf
lret
push
sbb
aas
and
fisubl
stos
xchg
outsb
mov
mov
mov
or
movsb
fs
iret
cmp
mov
jo
push
insl
add
ds
popf
mov
insb
fiadds
out
inc
dec
data16
shrb
sbb
push
movsl
sbb
ljmp
mov
push
icebp
or
push
sar
sbb
mov
in
popa
scas
movsl
xchg
xchg
paddusb
push
mov
dec
insb
fiadds
cmp
jp
cmpsl
dec
push
fmul
scas
dec
repnz
sahf
xor
push
pop
mov
movsl
inc
xor
nop
jns
in
jmp
mov
lret
sahf
cmc
and
sbb
inc
movb
cmp
xchg
roll
mov
mov
cmpsb
jl
js
data16
int3
out
popf
fwait
inc
push
lock
jns
jnp
icebp
ja
mov
jns
pop
shrb
jmp
imul
push
ret
dec
out
lods
test
or
leave
xchg
jmp
add
stc
sahf
adc
imul
mov
and
in
mov
pop
cwtl
xchg
in
fwait
adc
xchg
add
jb
jbe
push
jl
jae
mov
push
aad
jns
add
aam
or
iret
sbb
iret
push
xchg
xor
or
mov
mov
or
pop
cmpxchg
mov
outsl
xchg
xchg
aaa
mov
cmp
jb
scas
jnp
dec
mov
in
inc
cmp
lcall
stos
ret
jg
dec
jecxz
mov
inc
sbb
stos
push
insl
aaa
mov
fcmovne
pop
sub
movsb
xchg
mov
jae
loopne
dec
xchg
cwtl
and
in
cs
jmp
sbb
sahf
or
movq
pusha
mov
mov
ud0
xor
pop
addr16
int
dec
insb
jo
lods
or
out
cmp
fbld
loop
das
jmp
insb
jbe
sub
xchg
in
nop
mov
mov
mov
mov
ja
sarl
sub
sub
or
lahf
mov
inc
and
pop
fistl
push
xchg
icebp
jo
mov
xor
inc
out
mov
mov
into
cmp
out
mov
xor
jae
add
xor
pop
mov
fcompl
jl
les
jle
cmp
mov
xchg
sbb
adc
pop
and
sahf
iret
cmp
es
adc
dec
or
data16
ss
pop
push
movl
aam
fnstcw
sbb
in
xor
inc
insl
sub
inc
jns
lods
std
push
mov
daa
mov
jns
in
scas
cmp
mov
push
nop
xchg
jo
fwait
xchg
fdivrl
push
mov
add
loopne
lock
movsb
fst
or
scas
pop
lock
push
cmpsb
push
adc
in
or
pop
mov
popa
cmpsl
and
push
xor
iret
mov
sbb
scas
mov
dec
stos
add
cltd
int
fstpl
movsl
repz
push
xchg
ret
push
xchg
fs
mov
cmp
ss
and
and
ret
push
cmpsl
in
mov
adc
cs
jge
pop
je
pop
ds
pop
shlb
ljmp
pop
jmp
push
mov
xchg
scas
in
sahf
int3
jo
shl
jo
dec
or
data16
pop
stc
fimull
mov
sub
or
cmpsb
incb
mov
and
sbb
jp
in
pop
xchg
test
imul
fidivs
jne
test
loope
ret
cbtw
ret
add
sti
mov
jbe
adc
inc
cltd
sub
add
mov
int3
lret
sub
xor
add
sbb
addr16
shl
xchg
scas
popf
pop
jecxz
int
popf
xor
dec
cltd
sbb
lock
inc
in
ret
dec
sahf
or
fdiv
xor
mov
push
pop
dec
fsts
pop
popa
mov
dec
xor
pop
inc
sahf
call
adc
iret
xor
xchg
adc
xorb
rorl
iret
push
sub
pop
divb
sbb
hlt
xchg
add
sbb
jg
popa
sahf
pop
cmpsb
dec
adc
cmp
xchg
imul
mov
jne
loopne
sbb
stos
adc
jo
jns
aad
aad
mov
shld
push
rorb
add
xor
sbbl
out
cmpb
xor
js
cmp
mov
daa
lds
mov
sbb
fistpll
nop
aam
ss
push
adc
pop
call
leave
scas
or
bound
lock
in
mov
push
xchg
insl
cld
jnp
out
arpl
in
adc
sbb
movsl
in
dec
lods
imul
mov
pop
shl
addr16
movsl
scas
cmc
push
jg
mov
dec
push
cmpsb
adc
daa
lcall
movsb
add
pop
push
loop
mulb
icebp
jg
cmp
aaa
mov
mov
jnp
cmp
inc
fcomps
xorb
arpl
dec
jge
jo
stos
mov
aaa
repnz
div
popa
xor
xchg
orl
cld
or
stos
je
mov
pop
aam
lahf
popf
mov
insb
sti
push
aaa
push
test
mov
jp
jg
xor
push
mov
inc
pop
mov
test
jae
aas
mov
lock
daa
add
add
pusha
lock
jecxz
popl
xchg
and
movsb
test
pop
push
mov
lods
dec
inc
fisttpl
jle
xchg
repnz
loop
adc
sbb
ret
loopne
ret
imul
enter
rol
dec
mov
rol
jge
rclb
js
je
enter
and
push
popa
inc
xor
scas
xor
loopne
inc
sbb
mov
cld
xor
inc
pusha
cli
repnz
jmp
push
addb
sub
mov
mov
push
xchg
or
xchg
xchg
ds
test
mov
mov
xorl
mov
loope
push
sarl
es
mov
or
adc
and
mov
and
aad
in
mov
sub
dec
sbb
mov
aam
popf
or
out
jg
scas
imul
lods
adc
mov
xor
xor
sbb
cwtl
or
xor
sub
cmpsb
mov
push
jo
stos
inc
iret
lcall
push
xchg
insl
lock
jl
int
shl
mov
and
aas
jge
cmp
inc
jne
fisubs
aad
add
mov
inc
sub
insl
call
sbb
inc
std
sbb
xor
xchg
test
xchg
loopne
ficomps
out
push
mov
xchg
xlat
in
adc
push
js
add
cmp
push
jb
fwait
sbb
pusha
cmp
xchg
fwait
xchg
pop
jl
push
leave
lret
iret
jl
pushf
sbb
pop
sub
dec
pop
dec
aad
sarb
inc
repnz
xchg
out
test
or
jno
shlb
xchg
popa
jp
mov
pop
jnp
dec
shlb
mov
mov
xchg
test
clc
mov
fs
mov
mov
outsl
xchg
dec
xlat
xor
adc
push
shll
sbb
sub
push
cmp
and
xchg
inc
dec
jne
add
and
mov
test
push
jmp
out
push
cmp
dec
xlat
outsl
add
nop
push
aaa
in
out
cwtl
and
arpl
inc
je
jnp
andb
sbb
gs
les
int3
cmc
andb
clc
bound
outsl
cs
insb
pop
xchg
rclb
data16
xlat
pusha
ljmp
lds
aam
test
dec
repnz
scas
loope
inc
cmc
mov
push
int3
aam
std
aas
inc
dec
ss
and
out
mov
mov
jbe
pop
jnp
cld
add
stos
bound
pop
pop
rorb
test
fwait
and
sub
pop
jbe
mov
stc
test
push
ds
out
jge
sbb
imul
adc
ljmp
std
and
lods
stos
jmp
das
rolb
mov
andl
sbb
test
lods
loope
and
mov
lret
imulb
inc
fmul
sbb
jg
sub
add
jns
es
adc
cli
loope
dec
push
ret
scas
and
filds
outsl
rorl
movsb
push
cmp
pusha
int3
mov
enter
jnp
fistps
jp
cmp
push
in
add
dec
in
nop
add
jmp
cmc
ret
lahf
int
lcall
clc
int
rcrb
ja
out
loop
imul
nop
lret
xor
fs
mov
cmpsl
scas
cmp
sahf
mull
in
jae
into
and
push
sbb
mov
jg
mov
jnp
pxor
sahf
popa
fcmovu
aam
out
dec
push
lcall
sti
or
pop
xor
scas
aaa
cmp
cld
inc
lcall
pop
loope
icebp
jbe
enter
mov
fnsave
addr16
lcall
nop
and
mov
pushf
cmp
and
push
bound
lret
lret
cltd
js
imulb
mov
sahf
lods
addr16
shlb
es
fbld
xchg
mov
aas
xchg
cltd
add
icebp
ss
or
fistps
pop
stc
mov
jae
push
jae
imul
push
pop
js
cld
lea
arpl
cmpsb
sti
jnp
imul
mov
ljmp
jecxz
pusha
mov
adc
ret
gs
cmp
or
repz
inc
inc
jb
ljmp
push
and
fstpt
pop
jg
dec
adc
mov
cmovp
fnstenv
mov
inc
cld
mov
pop
cli
cli
xor
cmpsb
js
in
fs
ja
and
and
ret
movsl
pop
mov
push
popf
fimull
mov
sub
pop
xchg
inc
das
mov
les
adc
negb
and
sbb
lock
xchg
mov
xor
pop
xchg
pop
dec
adc
pop
std
in
insl
lahf
outsb
jecxz
dec
call
loop
mov
push
mov
mov
adc
loop
push
xchg
int3
jmp
inc
mov
inc
jmp
sar
call
mov
cld
in
js
popa
hlt
aas
imul
fsubp
lahf
jle
lock
xor
adc
ss
ja
jae
mov
ja
movsl
push
shrb
xor
inc
mov
lcall
ds
jo
pop
loopne
dec
sub
adc
jnp
lock
or
push
add
dec
pop
mov
and
or
pushf
push
dec
and
test
call
fwait
dec
or
insb
int
das
mov
stos
scas
pop
scas
push
sbb
adc
clc
mov
dec
loop
cmc
mov
fwait
adc
lock
insb
mov
add
into
ljmp
xchg
sub
push
repz
sbb
loop
loop
push
hlt
jmp
cltd
cwtl
push
stos
xor
jmp
aaa
xchg
adc
aad
xchg
lock
loope
rorl
sahf
fs
adc
sarb
cltd
dec
jmp
fwait
adcl
dec
orl
outsl
pop
push
sahf
jne
bnd
dec
lret
in
mov
pop
int
push
imulb
mov
jge
adc
cwtl
dec
jo
dec
fistps
lret
adc
jmp
test
jmp
sub
cmpsl
push
incl
xor
push
mov
push
sbb
std
push
imulb
int3
mov
sahf
cmp
bound
mov
cmovle
call
push
mov
lret
mov
pop
subb
loop
xor
pop
mov
pop
test
or
ds
sbb
popa
push
fidivs
les
lea
lcall
jo
lock
inc
mov
ljmp
adc
dec
gs
shll
mov
adc
fnstcw
xchg
add
es
mulb
cmp
shll
das
lds
fidivrs
dec
and
xor
aaa
push
cmp
jbe
loop
or
adc
sbb
inc
or
inc
lods
sysenter
lcall
xor
xor
movb
xor
xlat
dec
adc
int
insb
or
clc
sbbb
lcall
sti
push
xchg
pop
mov
aaa
push
mov
or
mov
pop
dec
lret
ljmp
pop
or
dec
push
imul
das
insl
mov
rcll
popf
push
int
out
sbb
jo
sti
loop
stos
push
sub
and
rorl
cmp
jl
lods
aad
popf
push
mov
mov
ds
in
fildl
add
repz
push
xchg
roll
cmpsb
rcrl
lcall
std
xchg
movsb
loop
fwait
xchg
and
sub
cmp
inc
sub
push
xor
pop
adc
jecxz
add
mov
gs
adc
dec
push
or
push
adcb
lret
test
mov
or
sbb
test
push
cmpsb
or
push
int
and
sbb
push
rcrl
xor
jnp
dec
jl
push
and
sub
subl
sub
xor
clc
aaa
sub
stos
icebp
es
mov
sbb
pop
cmpsl
sub
adc
jp
in
and
xchg
cmp
nop
movsb
es
cli
pop
mov
dec
push
push
cmpsl
fwait
xchg
add
popa
mov
xor
mov
nop
test
out
cli
aam
sahf
sub
ss
jmp
comiss
je
addr16
std
mov
incb
jne
sbb
mov
add
pop
fld
push
inc
pop
cmp
andl
shll
js
push
push
out
into
mov
or
cmp
sbb
xor
cmp
dec
ljmp
sbb
xchg
mov
popf
adc
xor
scas
dec
imul
cmpl
add
or
jl
mov
pusha
stos
popa
out
in
rorl
xchg
push
inc
mov
pop
cli
incb
sbb
push
imull
icebp
shlb
loop
nop
adc
inc
in
das
or
pop
inc
cmp
and
or
xor
je
or
xchg
shll
cmp
mov
popf
sarb
out
dec
out
adc
adc
scas
sti
push
xor
sbb
sub
loope
inc
ljmp
or
cmpsb
cli
ljmp
ds
pop
inc
popf
int3
lock
sub
inc
inc
lret
xor
arpl
bound
std
dec
mov
sbb
cmp
outsb
inc
out
mov
not
popw
pop
mov
in
mov
dec
ljmp
or
push
das
fidivrs
popf
xor
jne
movsl
daa
repz
xor
adc
cmp
int3
mov
jno
bound
sahf
or
add
sar
cmp
icebp
jb
lds
pop
or
lcall
cmp
mov
add
jmp
xchg
out
adc
fsts
ret
jl
loope
pushf
dec
pop
das
ficomps
mov
addr16
js
daa
add
divl
adcl
test
add
and
dec
sub
rorl
and
fdivs
fs
inc
lods
into
enter
fisubrs
dec
outsb
mov
cmp
mov
jne
sbb
xchg
adc
lret
insb
lods
out
jno
jb
inc
ret
dec
inc
lcall
out
lcall
pop
add
and
fmuls
fimuls
dec
divb
call
inc
push
xor
sbb
scas
or
fisttpl
test
jle
scas
mov
in
lcall
fst
pop
arpl
ss
push
scas
mov
mov
cmpsl
fnstsw
movb
icebp
lret
cmp
mov
mov
in
mov
inc
sub
test
mov
cmp
mov
inc
push
iret
xchg
lret
inc
js
call
dec
xor
sbb
inc
ret
sub
mov
sub
les
aaa
cmpsl
call
inc
adc
call
lods
js
lcall
jb
fdivrl
popa
jge
mov
mov
and
inc
in
sbb
stc
jle
insl
push
adc
in
jno
jmp
lock
xlat
test
faddl
dec
mov
rorb
dec
ficoms
mov
mov
cmp
xchg
clc
add
out
xlat
lahf
test
mov
je
pop
cmp
push
sbb
mov
adc
stc
add
xlat
scas
neg
in
adc
sub
mov
lock
mov
cmp
push
adcb
test
jnp
sbb
idivl
or
inc
rep
xor
hlt
hlt
dec
cltd
sub
movsl
push
dec
ficoms
sub
mov
pop
push
mov
call
cld
add
repz
stos
jns
js
outsb
lods
lret
in
xor
xor
sbb
mov
sub
int3
xchg
pop
sbb
es
cmc
cmpsl
mov
test
dec
insb
dec
xor
or
js
or
stos
add
jecxz
popf
lahf
rorl
andl
xchg
ja
sbb
mov
dec
mov
sbb
roll
pop
pop
xchg
in
push
je
icebp
rorb
jg
ffree
lret
lea
clc
cmc
js
add
sub
jae
das
pop
test
inc
aas
insl
flds
push
mov
xlat
test
loop
test
push
movsb
or
lds
adc
iret
divl
inc
rclb
jb
mov
cmp
or
outsl
repnz
popf
adc
loope
lods
test
push
das
mov
sbb
mov
aaa
loopne
jecxz
inc
adc
jge
stc
imul
pop
cmp
add
repz
xor
fstpt
cli
enter
or
and
push
jbe
ret
or
fbld
mov
std
mov
mov
in
loop
scas
lcall
mov
push
push
cmp
aas
cmp
jae
pop
mov
gs
fcmovb
sbb
cmp
in
daa
das
xchg
mov
xor
mov
push
xchg
data16
cmpsb
jmp
mov
cmp
jo
mov
sti
decl
cmp
ret
int
lock
movsb
or
cltd
cld
lock
dec
movsl
jle
cwtl
add
xor
xorl
pop
inc
xchg
mov
outsb
mov
rcrb
cmc
jo
cmpsl
lret
lahf
inc
xor
adc
jmp
mov
cmpsl
dec
imul
and
mov
insb
cmp
inc
cltd
adc
or
pop
xor
jmp
outsb
imulb
cli
das
movsl
loope
loop
mov
jno
mov
mov
lcall
and
out
jl
test
xor
shl
adc
or
and
iret
adc
in
push
cmpsl
sarl
adc
test
add
popa
insb
mov
mov
xor
and
inc
and
arpl
out
pop
push
aad
adc
cmp
and
adc
movl
into
cmova
lock
inc
cmpsl
and
fdivrs
repnz
fdivp
mov
push
xchg
sub
out
addl
in
adc
and
push
stc
pop
cmp
adc
les
fcoms
pop
pop
pop
jbe
push
aam
popa
mov
rcr
add
xchg
inc
test
sub
and
fildll
sbb
std
jmp
ret
mov
xor
fistpl
movsb
sar
mov
lock
pop
cmovnp
xchg
mov
lods
inc
mov
into
hlt
mov
sti
or
adc
insb
adc
insb
jmp
push
mov
clc
les
sub
mov
jle
je
insb
sub
jnp
push
lret
test
aam
lods
cs
in
fsub
sbb
xchg
imul
mov
flds
pop
das
inc
cmc
xor
push
icebp
xchg
lea
pop
push
loopne
lods
pop
inc
test
xchg
cmpsl
mov
or
ss
ret
jne
or
loope
leave
lcall
in
ljmp
lock
dec
sbb
fistl
cmpsl
ja
or
call
loopne
movsl
and
jns
popf
in
lock
or
mov
popa
or
or
addb
pop
xchg
insl
outsb
fsubs
into
movsb
pop
sub
sti
add
jge
xor
and
les
jle
shl
shll
xor
test
movsb
outsb
push
lahf
loopne
adc
inc
sahf
inc
inc
push
pop
mov
xchg
in
lret
or
repnz
mov
out
cmpsl
jmp
mov
xor
les
hlt
test
icebp
mov
pop
mov
jae
jmp
lret
ds
fisubl
mov
jb
mov
into
adc
ljmp
mov
cmp
jnp
dec
insb
xor
pop
and
fcomps
insb
in
or
out
jl
daa
cmp
test
mov
aas
sub
push
adc
inc
or
adcb
out
jbe
inc
lret
cltd
mov
ret
sub
loop
mov
int3
sub
jo
cmpb
lea
sbb
add
sbb
mov
mov
mov
or
push
in
and
ret
mov
cmp
dec
mov
jecxz
pop
invd
repz
adc
pop
pusha
ds
insb
cmp
mov
push
out
in
test
push
fldcw
jg
stos
test
addl
stos
xchg
insb
mov
xchg
stos
cs
cld
inc
xchg
fstl
lahf
stos
test
int
xor
mov
lahf
pop
ljmp
nop
js
psrlw
adc
sbb
dec
xchg
fcmovu
adcb
pop
sbb
cli
leave
insb
fstps
sarb
mov
clc
or
inc
in
rorl
or
pop
jecxz
clc
or
fwait
aam
cmp
push
sti
dec
lea
fs
or
and
lock
ss
mov
shl
push
pop
jno
adc
mov
jecxz
jo
in
ror
push
rcll
xlat
pop
jecxz
sbb
and
test
jecxz
cmc
xor
mov
push
ja
xor
hlt
sahf
cmp
jo
and
push
mov
cmp
sti
mov
push
arpl
dec
iret
and
cli
sub
aad
addl
cmc
je
dec
inc
cmp
push
imul
enter
roll
popf
and
cld
dec
pusha
mov
ja
nop
xorb
cmc
and
outsl
jno
lds
mov
dec
shl
jp
imull
or
out
shll
push
or
mov
shll
or
cs
add
cmp
cmp
xor
pop
push
xchg
xorb
jbe
jne
mov
cmp
sbb
stos
repnz
mov
xor
cld
jnp
fistps
ljmp
icebp
jnp
mov
out
fdivs
and
mov
and
xchg
jno
adc
inc
inc
push
pop
rclb
imul
call
inc
repnz
jb
xchg
sarb
sub
pop
mov
inc
pop
jle
push
scas
and
leave
and
dec
popa
mov
jo
mov
dec
mov
dec
or
jg
mov
clc
pop
pop
cmpsl
push
mull
pop
inc
cmp
std
lods
and
mov
and
ret
das
push
mov
xor
dec
sti
stos
or
jge
ja
sbb
lods
aam
arpl
ja
jne
cmp
mov
repnz
fwait
adc
or
add
cwtl
roll
call
lcall
push
push
mov
sbbb
or
jno
pop
loope
fst
push
ret
cli
pusha
push
sti
js
adcb
dec
clc
cmp
repz
sub
pop
jno
cmp
shl
shr
and
rcrl
insb
bnd
fcompl
sub
pop
icebp
jmp
push
sbb
imul
or
out
mov
out
bound
outsb
inc
imul
fildll
rclb
fidivs
aam
ret
mov
repnz
mov
add
adc
or
lods
and
jne
test
test
adc
sarl
push
mov
repz
das
lret
mov
inc
dec
in
inc
pop
pop
repz
xchg
push
mov
push
popf
mov
pusha
pusha
adc
jnp
loopne
pop
negl
cli
and
xchg
mov
jo
popa
mov
dec
orb
dec
aam
dec
popa
jge
rcr
jb
jnp
push
xchg
call
dec
and
aas
push
popa
xor
js
inc
int3
pop
inc
hlt
mov
push
sbb
test
movsl
cmpsl
jnp
testb
lods
rclb
cmpl
pop
out
jp
sub
nop
ja
hlt
in
imul
lret
jecxz
xchg
inc
push
adcl
dec
mov
lret
mov
pusha
xor
xchg
adc
ret
rcrb
mov
inc
mov
push
xchg
sbb
sbb
getsec
or
in
inc
pop
leave
sub
sbbl
lcall
and
push
inc
inc
lock
sub
cltd
adcl
fidivl
mov
cli
jbe
aas
mulb
jge
and
leave
rcrl
pop
pop
aam
cmp
sbb
pop
es
lock
in
test
xor
inc
xor
adc
fwait
pmaxsw
mov
pop
mov
repz
cmpsb
cmp
ds
jle
add
rcrb
negb
adc
jge
and
push
shll
mov
fildl
dec
sbb
jb
or
adc
sbb
mov
xor
or
aas
cwtl
xchg
out
jg
fsts
repnz
push
adc
sbb
aad
stos
arpl
sub
stos
jg
push
call
fsubs
ss
and
xchg
ret
mov
movsl
fimull
adc
pop
cmpl
dec
jnp,pt
mov
mov
aaa
cmpsb
lcall
xlat
ret
out
sbb
rcrb
push
outsl
xchg
outsb
sbb
inc
nop
test
dec
stc
mov
jl
imul
pop
out
push
mov
ret
lds
mov
xor
insb
and
cmpsl
loop
sti
inc
iret
add
pop
add
mov
push
in
xchg
aam
les
xchg
loop
es
xor
sbb
cmp
fdivrs
jecxz
sub
rcrl
and
sbb
loop
jmp
mov
add
test
cmpsl
mov
sbb
arpl
jns
imul
test
fwait
gs
pusha
mov
fnstenv
sbb
add
mov
mov
popa
dec
add
add
ss
dec
js
clc
pop
fdiv
repz
outsb
arpl
iret
pop
sub
pushf
fisttps
nop
imul
adc
scas
lret
call
mov
cmp
push
dec
jg
xor
daa
outsb
xchg
out
mov
outsb
and
jae
loope
out
outsl
mov
mov
cmpsl
insl
jo
adc
cli
scas
or
rcrl
mov
data16
repnz
loope
sbb
in
jmp
das
mov
inc
and
scas
sub
push
and
ja
cmp
test
cmp
or
cmpl
push
mov
ret
cmp
pop
mov
ficompl
bound
xchg
cwtl
mov
cmc
out
inc
add
stos
ret
lods
cmp
decl
pop
jno
pop
and
std
adc
xchg
pop
scas
sbb
pushf
sbb
jl
fwait
enter
hlt
add
loopne
xor
cli
mov
lock
shll
pop
and
add
cltd
call
cmpsl
imul
jns
in
cmp
or
and
push
outsl
sub
adc
and
rorl
imul
rcll
or
cli
xchg
hlt
push
add
incl
mov
xlat
insl
xchg
lahf
or
fst
mov
nop
addr16
cmpsb
das
xorl
imul
jb
jl
loop
adc
arpl
dec
mov
fbstp
mov
sbb
jle
or
pop
das
xor
sub
pusha
cmp
lock
pop
add
push
jle
mov
mov
sub
xor
ss
stc
iret
mov
push
movsl
fistpl
mov
or
inc
js
cltd
pop
cmc
out
out
xchg
popf
mov
bound
loope
lret
jl
repnz
dec
push
dec
push
xchg
in
daa
bound
pop
add
and
pop
lods
imul
out
aas
pop
jbe
aaa
rcrl
not
gs
in
ja
add
imul
les
cmp
inc
mov
xchg
lcall
shrl
add
rorl
pop
mov
inc
adc
lea
xor
mov
subb
push
sahf
enter
cmp
enter
jl
sar
sub
mov
icebp
jecxz
ljmp
inc
andb
or
stos
mov
lods
repz
xchg
fistl
add
rclb
pop
in
dec
sti
mov
mov
xchg
icebp
sub
int3
lds
pusha
or
cs
cmpsb
mov
xchg
insl
les
fdivrl
popa
xchg
repnz
push
fidivrl
push
lret
cmp
fstps
mov
jo
xor
pop
flds
fsubp
out
inc
ror
ret
mov
in
pusha
out
adc
push
test
xor
xor
insl
cltd
inc
mov
push
mov
jg
mov
repz
sbb
es
andb
mov
enter
loopne
call
iret
xchg
inc
fnstenv
mov
std
and
xor
sbb
cwtl
xchg
push
fs
push
filds
jne
aam
mov
mov
les
mov
jle
loop
aam
push
push
mov
adc
and
jno
sub
inc
xlat
cli
push
pusha
stos
xor
shll
loopne
sub
imul
mov
outsb
mov
pusha
mov
arpl
xchg
loope
out
inc
aam
adc
fidivs
sti
lcall
in
out
sub
jge
fcmovb
lods
or
lahf
int3
stos
dec
mov
in
test
jns
jp
stos
sti
in
xchg
bnd
dec
popf
inc
loop
stos
data16
sarl
shlb
fcoml
add
push
add
je
jbe
xor
sub
fmul
mov
jp
sub
cwtl
xor
push
insb
xchg
sahf
je
pop
sub
jbe
or
rcll
js
jecxz
nop
xchg
jl
leave
cwtl
cmpsl
out
cli
cmpl
xlat
pop
and
xchg
pushf
subl
push
sub
xchg
scas
test
pop
push
cmp
adc
pop
push
push
daa
mov
dec
sbb
add
sbb
scas
adc
ja
not
dec
sahf
pop
stos
mov
jp
mov
mov
scas
sub
div
sti
pop
addr16
jbe
mov
mov
cltd
xchg
mov
stc
or
out
iret
std
cmp
push
scas
pop
or
push
mov
jno
and
imul
mov
jns
pop
adc
dec
mov
ds
cs
sub
mov
or
cmpl
adc
push
dec
test
pop
push
adc
test
adcl
je
mov
test
loope
fstps
cltd
dec
mov
inc
jnp
mov
ja
xor
imul
inc
loopne
adc
xchg
sar
cld
jle
cmc
adc
lahf
mov
repnz
mov
mov
add
mov
push
cmc
cmp
aas
jns
popf
aad
insl
mov
add
dec
leave
ss
cwtl
nop
movsl
inc
and
add
mov
cmp
inc
cmp
lret
inc
xor
push
mov
stc
clc
rorl
into
unpcklps
adc
out
pop
xchg
push
pop
ret
adc
or
ljmp
aam
add
je
aas
mov
jne
xor
outsb
cmp
mov
adc
cmpl
xchg
jmp
ss
push
xchg
jg
dec
push
popf
add
xchg
divb
xchg
int3
cmp
movl
mov
ret
xchg
lock
pushf
repnz
into
adc
sub
push
inc
mov
inc
push
xor
lcall
pop
and
call
test
cmpsl
pusha
arpl
mov
cmp
jne
pop
mov
xor
mov
mov
addr16
mov
jmp
rcl
cwtl
sbb
daa
mov
faddp
das
push
sub
pop
clc
lcall
loope
int
sbb
mov
mov
sbb
fwait
cltd
loop
ret
push
sbb
sbb
stc
add
mov
push
stos
test
xchg
test
daa
lds
movsb
adc
clc
xchg
cmp
stc
adc
aas
aaa
jne
flds
jb
shr
mov
mov
adc
add
mov
xor
stos
mov
sub
rcrb
xor
ret
lret
or
addr16
mov
mov
std
mov
aaa
mov
cltd
jo
mov
idiv
hlt
out
mov
mov
dec
add
mov
or
mov
fnstsw
or
push
aad
or
ret
shrb
ret
inc
jg
int
lock
add
out
xchg
lret
inc
rolb
mov
repnz
dec
aaa
je
pop
lahf
out
std
fidivl
cmp
push
or
lods
mov
jo
xchg
aad
mov
dec
ja
adc
outsl
lcall
mov
sbb
add
pop
cmp
pop
cmp
daa
repnz
push
pop
mov
inc
dec
mov
mulb
ljmp
push
lock
jns
or
dec
dec
or
imul
mov
outsb
pop
leave
mov
jns
add
jle
addr16
jp
hlt
xorb
mov
adc
hlt
std
fcompl
xchg
jne
test
add
mov
jbe
fimull
imul
inc
mov
popl
cltd
jp
int
inc
push
mov
movb
inc
mov
aad
push
inc
jg
mov
jmp
push
cltd
iret
ret
fistps
mov
pop
cli
xchg
out
test
test
jne
xrelease
sub
sbb
inc
sbb
mov
add
call
pop
out
xor
cmp
pop
popa
mov
data16
sahf
imul
add
mov
xor
and
jns
mov
and
clc
mov
dec
movlps
fsubrs
stc
dec
jg
aad
sub
mov
cld
sbb
and
push
rorl
ds
add
pop
pop
dec
int
adc
cld
rclb
imul
fnstenv
and
ret
aas
imulb
mov
lret
adc
sbb
jge
and
dec
mov
stos
pop
lret
cltd
lods
cs
mov
add
xchg
ljmp
push
jmp
jnp
cmc
cmp
cli
mov
add
xchg
push
test
jl
fwait
movsl
xchg
fldl
xlat
jns
xor
pop
jp
cmpb
jg
pop
hlt
out
fildll
out
imul
push
sub
xchg
bound
adc
mov
test
std
add
xchg
insl
or
roll
mov
sbb
outsb
mov
shlb
subb
mov
mov
mov
xchg
cmp
and
addr16
sbb
inc
lods
call
cltd
xchg
out
popf
inc
jmp
sbb
sbb
adc
arpl
push
inc
out
inc
mov
jbe
repz
mov
cmp
pop
jge
mov
lret
and
out
loop
repnz
cmpsb
xlat
mov
shrl
xlat
dec
mov
push
push
pop
xor
sub
cli
sti
adc
cs
js
mov
out
xchg
xor
std
clc
mov
loopne
lods
dec
cmp
adc
dec
vpsubd
es
xchg
pop
sahf
outsl
xchg
push
adc
lret
pushf
push
test
mov
stc
fld
xchg
loope
push
add
aam
add
mov
fisttpl
pop
mov
dec
out
scas
mov
jge
in
adc
ja
xchg
jg
mov
mov
push
push
icebp
mov
push
dec
mov
pop
add
into
mov
sbb
adcl
stc
xor
shlw
cmc
cmp
notl
pop
cmp
mov
mov
cmp
xchg
mov
push
mov
sbb
xchg
and
outsb
mov
rol
sbb
sbb
pop
out
mov
sub
es
push
or
add
imul
aaa
ret
mov
std
movsl
sub
mov
add
arpl
mov
xchg
mull
jo
fisttps
sahf
popf
and
in
push
sub
stc
lcall
xor
jle
inc
es
mov
fists
out
movsb
and
push
push
out
sub
xor
inc
jmp
pop
call
inc
ds
xor
das
dec
fisttps
cmp
lock
xlat
pop
pop
mov
dec
rorl
pop
rcll
push
xorl
and
in
ja
outsl
jecxz
mov
stc
insb
dec
ficompl
popf
gs
out
sahf
aad
adc
xchg
punpckhbw
sbb
aaa
lods
sbb
xchg
hlt
outsb
jge
subb
int
xor
xchg
cmpl
out
xchg
decb
andl
dec
push
movsl
sub
push
mov
je
mov
inc
inc
push
jns
fsts
flds
dec
push
ret
outsl
fcomps
adcl
cmp
lods
push
sbb
jno
jnp
inc
dec
and
xor
ja
jmp
pop
shll
enter
out
inc
ja
xchg
mov
sahf
insb
adc
and
fcmovbe
inc
popa
testl
inc
fsubrs
adc
clc
mov
pop
ret
dec
sbb
int
out
sub
push
repnz
stos
popf
mov
leave
int
movsb
mov
or
loop
incb
test
stc
flds
ja
jle
sbb
pop
nop
test
pop
dec
inc
sub
mov
add
sbb
gs
jge
fsts
loop
movsb
and
lea
sub
ficoml
sbb
push
insl
std
int3
imul
and
lock
insl
push
mov
add
test
filds
fidivs
imul
out
adc
nop
cmp
popf
inc
adc
push
sbb
pop
mov
push
ja
addr16
lods
cmp
push
jl
mov
pop
in
sub
cwtl
adc
push
cmp
xchg
mov
divb
and
aas
push
sub
aaa
xor
mov
mov
and
sub
fdivrs
jmp
shll
outsl
sbb
pushf
push
insl
stos
data16
and
call
pusha
and
repz
popa
pop
xchg
and
pop
insl
xor
cs
inc
jp
insl
sbb
add
pusha
mov
daa
out
or
test
lock
add
push
mulb
ret
jno
pop
les
push
jae
scas
jmp
push
mov
out
lock
lret
push
shlb
sbb
and
outsb
xor
jp
jl
mov
insb
push
sbb
into
sbb
cmp
xchg
sub
pop
cld
xchg
push
and
jle
push
jmp
sbb
sub
sbb
push
xor
xlat
mov
lds
je
sbb
inc
mov
popf
xchg
pusha
cmpsb
mov
popa
adc
jbe
or
test
fldl
pop
xor
addr16
jo
nop
fwait
shll
xchg
inc
lcall
dec
inc
mov
gs
lret
ss
fistl
in
loopne
mov
xchg
es
loopne
xor
push
jp
jb
dec
sub
xor
cld
sub
in
inc
xchg
and
fsubrl
pop
testb
jne
push
leave
pop
dec
stc
mov
lds
pop
rol
push
add
mov
insb
mov
sbb
add
inc
xor
out
cmc
jbe
inc
xchg
jle
sub
js
subb
jle
insb
insl
addr16
lret
xchg
insl
fdivrs
test
outsl
mov
mov
mov
jle
and
testb
pop
out
xor
mov
pop
out
dec
dec
dec
shlb
pusha
je
inc
popf
popa
aad
sti
orl
enter
repz
sbb
lret
jle
pop
lock
adc
xchg
mov
or
push
in
mov
divl
pop
dec
dec
xor
mov
dec
push
pop
push
ret
sarb
fldl
xor
jns
icebp
cmpsl
fcompl
mov
iret
inc
scas
imul
out
test
cmp
cmp
adc
aas
cmp
xchg
mov
sub
pop
mov
enter
add
loopne
xchg
pop
cmc
xor
pop
adc
bound
jle
icebp
sub
mov
mov
sbb
mov
int3
sub
fwait
cld
sbb
lock
xchg
hlt
push
test
jg
scas
call
fcmovnb
adc
xor
jg
test
ret
js
jecxz
inc
and
imul
dec
jae
pusha
lods
popa
add
xor
sub
fs
shlb
pop
dec
mov
cmp
mov
lahf
les
and
dec
xor
into
cltd
add
push
stos
pushf
pmulhw
stos
mov
fnstcw
loope
inc
dec
mov
cwtl
inc
sbb
mov
test
dec
add
js
loope
inc
dec
scas
leave
popf
pop
mov
or
add
mov
je
mov
aaa
xor
fsubl
sub
sub
xchg
in
pusha
push
dec
push
testb
xchg
sbb
push
or
mov
enter
inc
in
xchg
stc
inc
imul
inc
mov
jmp
lret
ja
adc
sub
test
push
and
dec
cwtl
sti
std
push
xor
popf
inc
pop
add
adc
or
add
cmp
loop
inc
jmp
outsb
or
scas
in
aad
sbb
mov
jb
sbb
stc
bnd
clc
sbb
aaa
popa
add
hlt
cmp
pusha
leave
xchg
jg
cmpsb
leave
pop
adc
mov
imul
dec
outsl
adcb
mov
ss
and
clc
add
and
arpl
jmp
das
mov
jmp
or
dec
jnp
push
aam
sub
out
add
imul
jae
xor
sbb
hlt
dec
mov
pop
mov
leave
mov
fistps
mov
sbb
mov
jb
sahf
pop
ja
movsl
or
das
push
cmp
hlt
push
xor
fsubs
lock
movl
jo
mov
pop
lret
outsb
add
or
mov
pop
mul
test
decb
push
mov
push
cwtl
inc
je
jno
cmp
arpl
cmc
sub
inc
mov
add
lahf
jae
scas
jg
add
out
or
pop
cmpl
mov
inc
jnp
inc
inc
adc
pop
jb
xchg
inc
add
sub
or
int
mov
jns
inc
addr16
push
js
aam
and
out
movsb
push
pop
cltd
scas
fstpt
fldl
outsb
jb
xlat
dec
add
fimull
popl
adc
push
push
call
cmpsl
fmull
int3
ret
loopne
mov
ljmp
mov
xchg
xchg
ds
push
mov
xchg
dec
push
dec
sarb
or
arpl
add
and
sub
sub
jae
hlt
and
test
stc
lods
sbb
jb
jo
loop
cmp
scas
xchg
imul
addr16
mov
and
sar
mov
sbb
repnz
lahf
out
rcrl
sbb
sti
xchg
shrl
bnd
sbb
inc
or
xchg
cmp
jmp
mov
jae
jge
cmpsl
ret
je
icebp
xchg
jge
fildl
testl
xchg
gs
sub
sar
mov
sub
std
push
dec
jle
icebp
sbb
insb
daa
cmc
mov
popf
pop
add
push
xchg
pop
adc
sbb
das
xchg
dec
ds
or
cmp
add
push
adc
js
xchg
insb
sbb
out
sbb
add
dec
dec
outsl
test
rorb
inc
ds
mov
rol
mov
imul
adc
mov
jmp
int3
jne
jo
mov
jo
pop
pop
sbb
repnz
ds
add
in
mov
mov
xchg
xor
inc
icebp
adc
aam
inc
jae
xchg
mov
jge
daa
or
test
imul
mov
test
loopne
mov
dec
sbbb
xchg
scas
loope
mov
and
popa
xchg
xchg
iret
mov
cmp
insl
ss
push
ss
aas
pop
ficoms
ds
in
pop
xor
sahf
push
je
or
mov
mov
xchg
pop
mov
mov
and
inc
xchg
mov
jae
inc
pop
cltd
jmp
push
xchg
cmp
jne
fsubs
ja
mov
inc
outsb
xchg
aam
mov
scas
xor
mov
aas
pop
outsb
xchg
movsl
cmp
sub
adc
cmpsb
mov
nop
mov
or
or
fnstenv
adc
adc
push
xchg
xlat
test
test
pop
or
subb
cmc
icebp
push
jmp
xlat
adc
pop
jle
sbb
or
leave
dec
mov
push
push
aad
inc
fmulp
push
adc
push
sbb
mov
cli
aaa
das
js
int3
inc
add
sub
test
lahf
mulb
push
dec
push
iret
lods
dec
jno
xor
lret
mov
rorb
das
shlb
mov
stc
test
in
mov
call
cmp
rorb
adc
je
mov
cmpsb
jl
call
xlat
xor
jae
insb
in
outsb
xor
gs
sub
xor
and
jge
rorb
pushf
jae
pop
push
icebp
sub
push
sub
test
outsb
pop
mov
inc
cmp
ror
cmp
daa
mov
jbe
test
rcrl
xchg
fdivs
pusha
mov
test
int
pop
jbe
sahf
lea
mov
test
pusha
divb
pusha
sti
and
imul
push
or
lret
mov
negb
lret
dec
shrl
mov
pusha
ret
pop
or
push
add
push
cltd
jae
jmp
nop
adc
jecxz
xor
mov
popf
mov
cld
nopl
and
pop
xchg
scas
and
cmp
and
jae
fidivs
rorl
sub
add
gs
jecxz
fimull
fists
jecxz
push
and
push
std
push
inc
notb
in
aas
xchg
dec
clc
mov
cmp
scas
pop
cmp
mov
pop
or
aaa
and
lret
and
dec
ss
outsb
push
cmpb
jge
jg
add
test
movsl
ds
imull
pop
subb
popa
int
or
or
cmp
dec
call
stos
popf
aas
sbb
lds
sbb
stos
hlt
mov
xor
das
adc
dec
push
ljmp
test
cmp
or
xchg
xchg
jl
test
push
shl
sub
movsb
jl
sub
inc
pusha
pop
dec
sub
xor
xchg
mov
popa
mov
or
inc
outsb
inc
cs
insb
xchg
insl
cmp
shll
pushf
push
pop
inc
add
pop
in
push
push
mov
xor
idivl
sarb
outsb
outsb
iret
sbb
jb
out
mov
mov
mov
cwtl
push
pop
mov
mov
xor
inc
adc
jne
sbb
imul
mov
int3
mov
sti
mov
ljmp
push
sbb
aaa
sub
aas
shll
cmp
and
add
scas
cmpsb
es
iret
leave
add
hlt
or
or
cmc
cmp
adc
pop
iret
hlt
cwtl
adc
push
movsl
xchg
pop
mulw
retw
push
inc
divl
out
mov
cs
adc
or
aas
add
lahf
jmp
lds
stos
add
or
pop
outsb
pop
jno
sti
notb
shl
push
bound
scas
lods
add
sbb
pop
jae
cwtl
inc
jecxz
xor
fwait
addl
movsl
sti
fdivs
add
call
xchg
insb
cmp
pop
adc
inc
pop
or
icebp
pop
inc
jne
daa
lods
push
mov
rorb
icebp
sahf
push
fsubrl
adc
and
xor
cmpsl
or
sbb
aaa
into
lds
je
leave
stos
aad
dec
movsb
inc
push
dec
add
jg
mov
cli
ret
push
fsubr
or
dec
mov
pop
add
leave
mov
or
adc
pushl
pop
aas
leave
xchg
out
call
sub
jo
sub
xor
and
mov
daa
loope
leave
and
jmp
dec
sbb
test
mov
imul
adc
cmp
jmp
mov
add
incb
lret
lahf
ljmp
test
stc
cmp
lds
cmp
lods
sbbb
ret
cld
fs
cs
out
lret
cmc
int3
push
mov
imul
fcompl
call
loopne
dec
cmc
sbbb
mov
cltd
adc
pop
addr16
mov
insb
scas
jl
sti
cmp
mov
out
mov
sbb
aas
insb
iret
inc
cmp
daa
xorb
rolb
inc
and
clc
add
aad
sarl
or
rcr
sahf
fs
adc
cwtl
jae
mov
jg
jno
cmpl
cmpsb
sub
in
pusha
les
xchg
test
inc
outsb
and
outsb
or
movsb
inc
loop
and
fidivrs
mov
cld
push
lock
divl
adc
lock
icebp
repnz
aam
add
adc
or
pop
jge
dec
push
pop
ja
repnz
sbb
jge
scas
push
adcl
xor
pop
vmwrite
sub
adc
fcmovne
setb
fwait
test
rdpmc
jns
jns
adc
shll
stos
pusha
scas
fmul
and
mov
sbbb
sarb
hlt
in
adc
sub
fcmovu
aas
lret
mov
les
xchg
test
fstpt
mov
push
xchg
icebp
dec
adc
orl
in
outsb
ja
stos
aas
daa
cmpsb
dec
enter
xor
xchg
push
ret
lret
push
xor
aam
pop
dec
daa
out
sarl
push
fsubs
jl
and
lahf
insb
jns
pop
popl
dec
xchg
outsl
icebp
mov
in
xchg
and
mov
daa
movsb
es
shll
xor
mov
hlt
ret
push
jnp
int
shlb
fwait
adc
data16
pop
xor
mov
loop
sahf
xchg
mov
jnp
inc
repnz
sbb
into
ficoml
fwait
cmp
cmp
inc
xor
mov
dec
lock
imul
mov
mov
lds
movsb
nopl
pushf
sub
dec
sub
ja
push
pop
inc
movsl
outsl
cs
repz
xchg
enter
sub
aaa
xor
sub
mov
repz
mov
setns
pop
mulb
std
pop
rolb
cld
ljmp
push
popa
daa
out
push
jns
dec
sub
push
dec
int
imul
stos
sub
mov
cmp
adc
mov
or
xchg
rolb
xchg
movsl
loopne
push
outsb
mov
test
push
xchg
stos
mov
out
jb
mov
push
mov
xchg
cltd
dec
add
ljmp
jno
mov
sti
ja
pusha
jnp
insl
out
ficoml
push
inc
push
test
data16
pop
mov
dec
xor
cld
repnz
jge
test
subl
jecxz,pn
call
or
test
push
cmc
xlat
xlat
nop
repz
dec
pop
loopne
sahf
cld
adc
pusha
sub
xchg
jle
adc
inc
mov
int
insl
leave
in
ret
cmp
mov
xor
in
jg
fs
add
sbb
adcl
mov
xchg
les
dec
pusha
mov
sub
sahf
imul
lods
dec
sub
cmp
inc
add
sbb
shlb
sub
xor
push
shrb
insb
addr16
sbb
in
and
repnz
ljmp
mov
dec
stos
mov
repz
pop
icebp
cmp
push
lds
mov
adc
and
or
or
xor
je
pop
sub
sahf
mov
mov
test
cmpsl
cs
fwait
jmp
loope
out
rcr
mov
ss
add
lea
fsincos
lret
sbb
ret
pop
mov
lcall
pop
dec
fadds
adc
xchg
jmp
hlt
push
push
cmp
inc
mov
add
add
bound
push
sarb
cs
sbb
mov
lods
das
xchg
add
adc
mov
push
add
add
inc
lret
mov
arpl
mov
xchg
insl
mov
adc
mov
pushf
jg
pop
push
fisttps
lods
cmp
iret
andl
jae
xchg
xchg
aaa
and
adc
std
sbb
mov
lock
je
repz
gs
dec
cld
cmp
loopne
stc
push
fiaddl
orb
adc
repnz
mov
or
cmpb
xchg
sbb
mov
data16
lcall
movsl
ret
loopne
inc
cwtl
cmpsb
mov
jb
dec
cmp
cmp
push
mov
sbb
popf
mov
cmp
pop
add
dec
rorb
test
inc
cmc
aam
jl
in
and
sub
mov
cmp
mov
lret
mov
jne
add
mov
ss
sub
and
or
xchg
add
test
xchg
scas
les
cld
lods
stos
cmpsl
xchg
push
push
mov
out
xor
sbb
xchg
adc
adc
fwait
dec
popf
add
sub
pop
pop
push
mov
xchg
mov
sub
in
enter
lds
and
in
cs
push
insl
inc
jbe
push
mov
and
iret
cmp
cmpsb
push
call
arpl
out
mov
jecxz
test
or
imull
rcrl
pop
xchg
jns
lock
xor
inc
adc
fidivs
cmpsb
mov
xchg
scas
js
push
pop
jno
xchg
shlb
pop
push
jbe
pop
call
dec
inc
fwait
push
cmc
test
cmc
push
aad
pop
inc
stc
int
lods
rcrb
inc
xor
sub
repnz
push
add
pop
mov
xchg
ret
loopne
les
idivb
loopne
cmp
xchg
xor
sbb
test
pop
dec
cmp
push
subl
fisubl
jno
sarb
inc
and
ss
int3
adc
jno
inc
pop
scas
dec
pop
lods
or
mov
inc
and
cmp
sub
cmp
jge
les
xchg
ficoms
nop
mov
out
pop
xor
call
test
adc
mov
push
mov
ds
sub
adc
push
push
out
fs
in
cmpsb
add
push
push
jnp
paddusw
inc
push
mov
adc
adc
jle
push
lahf
push
es
mov
xor
sbb
push
pusha
push
dec
push
int3
scas
and
fbstp
dec
aaa
es
cmpb
in
jnp
pop
lock
gs
int
pop
out
jle
jmp
pop
mov
cmp
cmp
mul
ja
mov
outsl
mov
aaa
out
pushf
enter
adc
cltd
mov
and
jl
dec
lret
xchg
pop
ds
inc
pop
dec
and
xchg
adc
aas
jno
cmp
call
sbb
dec
inc
jbe
push
sub
mov
mov
ja
mov
xor
and
sub
push
sbb
stc
push
in
icebp
popa
pop
pop
fcoms
ss
push
movsl
lds
push
jge
and
pop
xchg
inc
test
sub
adc
scas
add
adc
or
lret
lahf
inc
nop
sub
in
iret
inc
mov
mov
dec
ja
stc
lods
cli
add
cmp
fiaddl
jg
pop
push
push
mov
hlt
jg
push
fs
add
cmp
icebp
jb
xlat
std
sbb
loopne
pop
push
push
pop
cmpsb
jge
adc
pop
je
fsubr
mov
mov
xchg
add
mov
out
fwait
mov
sbb
daa
lahf
rcpps
add
xor
adc
ljmp
mov
sbb
inc
inc
jo
sbb
fildll
pop
xor
mov
xor
inc
or
cmp
mov
and
sub
xor
xchg
inc
push
sub
fdivrs
les
push
jbe
call
inc
dec
pop
fiaddl
push
lahf
in
lcall
scas
in
test
ficoml
push
jecxz
loopne
das
xchg
lahf
loopne
push
inc
xor
ds
sub
rorl
popf
outsl
into
cmp
nop
pop
push
std
dec
test
addr16
xor
add
xor
push
mov
dec
jp
lods
and
xchg
leave
imul
outsb
adc
add
dec
mov
sub
into
dec
lret
inc
xchg
jmp
or
sbb
je
icebp
repz
test
xchg
inc
dec
andb
and
push
jb
int3
jo
xorb
jae
mov
pop
call
test
inc
jo
out
loop
xlat
sbb
mov
je
add
cmp
push
xchg
shrb
cli
and
dec
cmp
push
dec
cmpsb
xchg
stos
push
daa
vmwrite
add
or
add
push
or
imul
push
jb
lahf
cltd
icebp
in
lcall
js
mov
ljmp
xchg
pop
mov
fbstp
dec
mov
inc
in
add
xchg
pop
in
dec
fisubrs
popa
push
or
mov
test
and
fldcw
lods
sub
add
je
xchg
inc
or
mov
inc
in
dec
test
hlt
pop
cwtl
jmp
in
sbb
push
jb
repz
xchg
cmp
lret
jns
push
xchg
ret
cltd
push
fiadds
dec
fnstenv
iret
nop
pop
mov
es
movsb
sub
inc
xchg
popa
mov
sbb
aas
dec
adc
xchg
pop
xor
popf
push
cmc
push
or
inc
or
test
adc
scas
pushf
punpckhbw
push
mov
fsubs
sub
out
mov
mov
xor
xchg
daa
jmp
mov
ret
mov
test
push
in
test
xchg
stos
mov
stos
in
test
lret
xor
pop
jb
dec
pop
mov
xchg
cmp
fidivl
cwtl
mov
or
in
test
inc
pusha
fcoml
int
mov
js
mov
lds
add
push
rcll
dec
jmp
imul
lret
jae
loope
hlt
sbb
fwait
fwait
inc
adc
repnz
xor
jne
rcr
loop
mov
sbb
jae
ret
inc
sahf
mov
and
xor
dec
in
pop
mov
mov
cmp
jnp
pop
fsubrl
jb
das
xchg
pop
pop
adc
out
pop
jg
lret
push
mov
shl
rorl
arpl
rcr
inc
je
icebp
es
iret
sbb
cltd
jle
nop
shll
fdivl
and
jo
jne
cmp
cmc
ss
repnz
pusha
or
lret
loope
aam
rolb
popf
nop
mov
ljmp
fwait
fwait
mov
sbb
imul
movsl
pop
cmp
add
out
push
cwtl
and
mov
add
mov
xchg
sub
sub
push
imul
or
pop
fstl
and
cmpsb
lret
aas
xchg
jecxz
mov
fcomps
out
or
orl
sbb
mov
or
xchg
inc
add
mov
pushf
mov
lock
sti
mov
lods
mov
outsl
and
or
ljmp
ret
inc
jmp
rcrl
daa
xchg
push
fcmovnb
push
jnp
mov
fcompl
je
js
pop
cmpsl
mov
pushf
iret
or
add
jne
mov
call
mov
stc
jl
add
push
dec
shll
mov
jge
sub
pop
xor
sbb
xchg
sbb
adc
sbb
sbb
mov
les
aam
adc
push
sbb
clc
fdiv
mov
movsl
sarb
mov
cmp
fldl
mov
fisubrl
ja
mov
mov
pop
lahf
idivl
xor
sahf
fucompp
dec
aam
xchg
stos
scas
es
std
dec
aam
mov
movsb
sti
shll
cmpl
sub
stos
movsl
fimuls
inc
cltd
mov
add
fwait
or
push
xor
jecxz
cli
xor
ja
std
les
ss
ljmp
mov
scas
imul
aas
xorb
add
fstl
jbe
sub
cmp
fwait
xor
fldenv
or
notl
das
ret
loop
cwtl
test
adc
pushf
fcmovnb
stos
test
mov
loope
shlb
dec
xchg
jg
cmp
adc
or
mov
stos
add
mov
xor
xor
jge
mov
test
and
bound
or
test
fldcw
lahf
lret
daa
cmp
jb
xor
or
arpl
or
test
lock
sub
scas
stc
je
dec
sbb
cltd
dec
xchg
push
xor
and
mov
nop
cltd
mov
out
imul
scas
mov
sbb
ret
xlat
dec
sbb
inc
repnz
inc
add
or
rorb
rol
fwait
sahf
negl
push
pop
addl
fsubs
mov
mull
ret
mov
repnz
sarb
mov
inc
lock
jmp
dec
sahf
cmp
mov
ffree
jo
in
filds
cmpsl
ljmp
mov
mov
jge
popf
ss
pop
ljmpw
fs
pop
pop
xor
fcomp
insb
lock
push
xchg
add
dec
bound
mov
or
inc
xchg
and
inc
sahf
iret
je
outsb
and
fsts
xchg
pushf
fbstp
pop
push
outsl
dec
pop
loope
adc
adc
mov
sub
jo
aaa
add
xor
addr16
and
lcall
cmp
movsb
sub
or
xchg
fstps
push
add
rep
cmp
sbb
push
jecxz
or
inc
xor
das
nop
loope
cmp
mov
icebp
jl
mov
and
jb
inc
inc
imul
sti
jo
pop
cmpsb
lds
call
pop
setbe
sbb
mov
in
push
mov
dec
movsl
and
xchg
fidivs
xlat
loop
xchg
or
sbb
daa
rcrl
lret
repnz
setg
test
js
mov
jbe
dec
push
pushf
fimuls
int
stos
arpl
movl
fstpl
xchg
mov
shll
and
leave
pop
sub
lret
pop
sub
cld
in
inc
jne
xchg
arpl
jbe
and
mov
mov
mov
iret
sub
repnz
inc
jg
dec
pop
lcall
and
jbe
mov
dec
cwtl
mov
mov
pop
test
jg
mov
add
rorl
mov
pushf
jge
mov
inc
pop
xchg
les
cmp
pop
pop
jo
mov
shlb
lock
imul
ss
aas
aad
xor
shll
flds
pop
insb
outsl
fs
cmpsb
mov
enter
leave
jnp
mov
jae
jno
push
test
add
xchg
push
into
int3
dec
jle
sbb
shll
dec
pop
hlt
and
iret
jle
jb
testb
call
iret
dec
outsl
into
out
mov
stc
xor
push
or
and
inc
insb
test
xor
or
pop
inc
mov
sbb
test
rep
and
cmpb
jnp
or
inc
shr
adc
mov
inc
xchg
addr16
inc
in
rcrl
pop
andb
ud0
in
inc
bswap
jns
mov
adcb
aas
push
cmp
mov
xacquire
loope
fnstenv
xor
xchg
mov
xchg
inc
jg
loopne
clc
popa
leave
and
repz
cli
lret
data16
icebp
bnd
mov
pop
jge
lds
inc
inc
pop
pop
xchg
test
dec
imul
mov
fwait
xor
sbb
pop
clc
popf
pop
jbe
in
mov
adc
aam
inc
or
mov
dec
mov
popf
mov
sub
fstps
mov
pop
cmp
or
cmc
stos
aad
je
js
addr16
sbb
pushf
xchg
or
xor
fmull
addl
leave
pop
pop
outsl
jl
sub
mov
movsl
mov
out
popf
adc
xchg
enter
daa
xorl
mov
lahf
cmp
add
dec
adc
mov
inc
addr16
or
test
xchg
addr16
xchg
pop
popa
adc
jno
loopne
fmull
scas
mov
jle
dec
idivl
jbe
scas
and
inc
add
dec
xchg
mov
xchg
js
fstpt
mov
imul
js
pusha
push
or
std
add
sbb
pop
xchg
push
das
pop
push
add
mov
mov
and
mov
sbb
pop
jno
scas
out
jge
and
adc
mov
xchg
outsl
pop
nop
push
sarb
adc
test
or
xlat
out
mov
mov
pop
xchg
pop
cmpsb
push
sbb
mov
mov
dec
cs
fsubl
sahf
out
pushf
xor
cmp
mov
enter
fcompl
jae
xor
mov
mov
mov
loop
cld
xor
adc
adc
adc
mov
mov
shrl
stc
lods
pop
in
rorl
cmp
pusha
pushf
mov
cli
or
cmp
loopne
jno
arpl
cs
popf
rolb
dec
push
xchg
and
sbb
adc
roll
push
push
inc
inc
cmp
cmp
pop
stos
dec
pushf
cwtl
push
movl
fwait
cmp
fs
cwtl
cmpb
movsb
incl
into
mov
xor
aaa
ss
add
ss
lods
mov
arpl
rcll
dec
out
lods
dec
jecxz
mov
xor
xor
fcomps
scas
add
rcrb
adcl
rclb
stos
or
int
insb
xor
lds
inc
mov
sbb
insl
adc
aaa
imul
in
mov
fwait
add
add
adc
or
mov
inc
and
test
cld
repnz
mov
fmuls
popf
je
jo
dec
add
jp
and
inc
sti
xchg
out
aas
cli
cmpsb
mov
sub
cmpsb
inc
dec
hlt
dec
mov
mov
mov
xorb
imul
cld
mov
add
xor
lahf
add
icebp
in
jbe
pusha
xchg
es
xchg
add
clc
movsl
in
cld
mov
jecxz
xor
adc
mov
aaa
xchg
inc
add
aas
andl
and
adc
dec
out
ds
adc
rclb
xchg
mov
sub
jns
lock
dec
mov
inc
rcrb
lea
rcrl
xor
xchg
hlt
ja
and
test
mov
push
mov
lds
cli
mov
movsb
and
mov
fnsave
inc
push
pop
in
sub
lret
cmp
js
repz
adc
cld
pop
xchg
sbb
cs
mov
push
xor
mov
push
aas
cwtl
xchg
cmpsb
lds
inc
or
xchg
out
xor
push
adc
push
jne
popf
lcall
outsb
xchg
sbb
repnz
pop
fisubrs
push
popa
bsr
push
jl
inc
bound
fistl
lret
loope
jge
mov
shlb
les
mov
add
cli
data16
addr16
loop
adcl
inc
enter
inc
leave
into
shll
aaa
gs
lds
out
in
shrb
xorl
sub
adc
or
fcmovnb
addr16
dec
mov
pop
mov
cmp
cmc
mov
cli
std
andb
push
cs
imul
adc
xor
cmp
int
mov
and
stos
mov
stc
push
and
push
andl
xchg
out
mov
rolb
lcall
sbbl
loopne
div
lods
sub
xchg
in
lahf
leave
xchg
xchg
mov
add
add
push
mov
adc
into
mov
sar
dec
mov
jns
lea
pop
and
bswap
mov
xor
shrl
sbb
cmp
fdivl
repnz
std
adc
popa
jge
mov
sub
movsl
cmp
and
cmp
jnp
cltd
mov
jno
int
lcall
or
fcomip
and
daa
pop
push
sbb
repz
mov
stos
sbb
and
popf
cmp
sub
mov
mov
cmp
sub
es
lret
jno
out
sbb
aas
hlt
in
aam
pop
sbb
mov
inc
fimuls
ret
jg
push
scas
mov
or
fldt
repnz
in
inc
in
ret
imul
insb
xchg
scas
mov
faddp
ljmp
loop
bound
pushf
sbb
mov
shll
mov
scas
cmp
subl
inc
or
cltd
ljmp
out
push
pusha
aas
mov
subl
into
aas
jns
sub
xchg
in
rcr
aas
xchg
mov
popa
push
aaa
lock
in
rcrb
pop
jmp
imul
push
sub
jle
out
mov
mov
ret
fs
fcomps
rcrb
push
add
sub
sub
sahf
xchg
hlt
out
scas
mov
or
inc
mov
into
xchg
lcall
push
pop
dec
sub
mov
jg
sub
cmp
test
cli
xchg
cmc
dec
shr
inc
lahf
mov
test
out
jecxz
dec
pop
or
xor
cli
xchg
mov
cmpsb
imul
jae
xor
ljmp
test
adc
xchg
push
jnp
jo
popf
xor
push
lods
ds
mov
cwtl
fdivrs
add
subb
mov
sbb
adc
sti
jbe
inc
sub
adc
shll
sub
adc
dec
cmp
orb
and
aas
push
add
cwtl
adc
fdivrp
lock
sti
sub
and
idivb
scas
mov
mov
data16
ljmp
mov
pop
inc
jecxz
jg
mov
jmp
ja
xorb
add
xchg
rcll
pop
sub
adc
mov
rcr
sub
popa
xchg
mov
shl
imul
or
fwait
mov
mov
or
inc
icebp
subb
and
out
mov
push
sub
in
add
mov
mov
xchg
mov
mov
das
imul
xchg
sub
test
ds
addr16
mov
int
scas
mov
push
push
adc
lock
cmp
lods
cmp
out
jg
imul
fwait
iret
pop
inc
xchg
andl
jmp
rcrl
cli
lods
adc
addr16
cli
insb
xor
js
push
shrb
mov
xor
and
xchg
nop
imul
and
mov
cwtl
mov
mov
fdivl
sar
pop
dec
push
in
cmpb
dec
fstps
push
loope
adc
das
popw
inc
jo
push
pop
push
insb
sbb
dec
or
dec
dec
jo
inc
or
cmp
loop
mov
cmpsl
adc
jne
movsb
fnstenv
cmpb
cmp
pop
pop
sti
lods
cmp
pop
mov
popa
jne
cmp
inc
push
test
loopne
movsl
xchg
test
in
pop
jnp
add
scas
lahf
aaa
sub
inc
cmp
addr16
jge
in
insb
or
sarb
cmp
repz
push
mov
push
int
in
mov
mov
push
fs
sbbl
int
adc
enter
adc
cmp
pop
sbb
int3
mov
mov
scas
xlat
negb
cmp
pop
in
rorl
or
in
pusha
cld
or
imul
jge
sbb
stos
push
push
filds
ds
or
add
repnz
movsb
adcb
and
nop
aam
inc
pop
adc
aaa
gs
inc
daa
jp
lahf
nop
mov
lods
mov
sbb
mov
jno
mov
lea
popa
lods
mov
inc
and
outsb
pop
negl
sahf
push
pop
lods
fwait
pop
loope
ret
movsl
sbb
push
loopne
fdivrs
movups
loopne
fldt
popf
in
rol
cmp
xor
dec
sub
jg
cld
loop
jmp
and
in
sbb
mov
je
fdiv
inc
lret
xchg
cmp
mov
shrl
pop
mov
push
jbe
or
mov
mov
mov
pop
add
hlt
ja
inc
push
sbb
dec
and
enter
scas
dec
push
cmp
sbb
push
jl
lock
fimuls
pop
das
jle
pushf
cmp
push
jno
inc
push
sbb
ds
movsb
sbb
pop
xor
fimull
cwtl
jecxz
sbb
cld
shlb
divl
add
sbb
cmp
iret
ret
or
ljmp
lock
xor
fs
sub
or
mov
dec
inc
sti
ja
dec
sahf
arpl
sbb
testb
sub
cmp
sar
lds
jbe
shl
sub
nop
jl
inc
shl
ret
push
shl
sbb
popf
jg
jns
fidivrs
mov
sti
sbb
addr16
pop
nop
mov
ds
dec
mov
inc
iret
fmulp
inc
or
cld
popf
adc
fisubs
fdivr
cmp
sub
dec
cld
jp
sub
scas
ss
push
daa
jge
jle
inc
xor
mov
inc
lock
test
hlt
ja
dec
aas
pop
mov
test
shlb
lahf
loope
jbe
adcl
push
out
mov
in
mov
jge
push
int
add
je
jae
sub
add
dec
lret
ljmp
add
sarb
enter
sbb
inc
cmpsb
subl
mov
jg
test
test
and
sub
xchg
imul
ss
mov
cmp
in
pop
fwait
xchg
sbb
mov
push
fwait
mov
lods
sti
stc
push
mov
and
adc
pop
sbb
xchg
in
clc
xchg
sub
lods
stos
cmp
inc
fs
mov
cmp
or
push
push
cmc
jae
imul
pop
clc
mov
pop
xor
adc
andl
jmp
and
ljmp
mov
dec
aas
sbb
lahf
sbb
lods
inc
or
jp
out
stos
sbb
or
and
sub
xor
ret
call
xchg
mov
dec
out
loope
pop
pop
pop
pusha
loope
cmp
push
push
daa
aam
dec
js
mov
adc
pop
roll
jg
bound
mov
mov
mov
dec
mov
xchg
mov
hlt
add
jl
stos
clc
jnp
push
adc
mov
lcall
imul
sub
movl
dec
ret
out
xchg
add
add
jmp
mov
xor
and
pop
jmp
inc
push
mov
mov
out
and
dec
repnz
adc
add
push
lahf
xchg
insl
jo
outsb
and
in
js
push
outsl
jb
mov
jae
xchg
sbb
lds
insl
dec
adc
fdivrl
cwtl
lods
in
adc
enter
mov
cltd
out
mov
scas
addl
cmpsl
sbb
imul
or
mov
mov
enter
pushf
mov
add
cmp
mov
dec
jne
xchg
lret
clc
pminub
cmp
loop
mov
jae
mov
fxch
inc
lret
cltd
xchg
sbb
mov
int3
nop
mov
in
arpl
pop
cmpsl
adc
sbb
insl
les
cmp
daa
pushl
and
cmpsl
mov
cmp
aas
dec
cli
dec
in
in
jmp
lds
movsb
inc
mov
out
xor
sbb
xor
repz
inc
out
jb
cmp
shll
mov
aas
mov
mov
adc
sub
ja
icebp
popa
out
sahf
jmp
orb
sub
fisubrs
scas
mov
inc
jo
dec
mov
push
cmp
mov
push
jae
xchg
cmp
es
mov
push
scas
add
push
mov
filds
jne
outsl
and
jl
dec
ret
jmp
pop
pop
inc
scas
sbb
shlb
jmp
dec
mov
jae
push
inc
push
mov
jge
rolb
cltd
and
icebp
jo
lods
push
cli
aas
add
shrb
inc
mov
inc
orl
push
sti
nop
sbbl
mov
mov
inc
pop
stos
pusha
sub
out
push
add
push
fimuls
inc
fadd
popa
push
popf
pop
jl
enter
rcll
dec
mov
iret
js
adc
and
push
pop
inc
adcb
rcr
add
jmp
inc
hlt
fldl
outsl
mov
mov
jbe
outsb
into
pusha
push
cltd
jmp
aam
insb
loop
mov
cmp
dec
cmp
and
testb
cmp
int3
pop
sub
es
pop
mov
fdivrs
scas
mov
js
fstp
jo
cld
xor
push
movsl
push
xor
mov
fsubrl
ds
push
xchg
push
push
sbbl
lods
sarb
imul
or
add
add
fwait
decl
dec
pop
ror
add
movsb
adc
or
cmp
nop
es
inc
fsubrs
jns
add
aam
fcoms
dec
add
mov
sbb
jecxz
dec
lock
pop
or
mov
js
popf
sub
cmc
xor
xchg
clc
adc
stos
xchg
push
mov
pusha
aas
sub
leave
jle
jg
cmp
xlat
push
es
and
inc
gs
inc
jne
pushf
adc
into
mov
xor
mov
aas
jns
arpl
inc
addr16
push
adc
jecxz
inc
loope
jmp
test
in
outsb
jecxz
aas
cmp
repnz
cmp
jl
inc
loope
add
stos
push
aas
sub
xor
cmpsl
dec
into
dec
fmull
rolb
adc
movsb
aas
les
jl
scas
adc
add
mov
fbstp
jmp
mov
lahf
loopne
shll
sub
imul
scas
inc
inc
jg
divl
inc
test
or
mov
mov
xchg
sub
cmp
clc
lret
fwait
xchg
leave
inc
push
xlat
pop
sbb
daa
xchg
aas
out
roll
stc
cmp
xchg
testl
inc
arpl
or
cmpsb
gs
jne
xchg
push
sbb
or
stos
adc
and
or
mov
push
mov
int3
mov
xchg
dec
ret
pop
xchg
insb
cmp
and
dec
scas
jnp
test
mov
push
pop
mov
jecxz
sub
sub
fiadds
lods
leave
or
push
push
ficompl
hlt
sub
popa
int3
mov
nop
pop
in
push
pusha
mov
mov
cmpl
test
or
repz
inc
in
mov
inc
sbb
int
repz
stos
lahf
jnp
loop
push
mov
leave
jecxz
shrb
xor
loop
ds
cmp
jne
cmp
out
or
and
jmp
inc
mov
ja
out
out
add
lock
jecxz
dec
add
popa
pusha
imul
dec
popa
jle
pop
xor
sbb
clc
repz
je
test
and
js
stc
lret
insb
packssdw
push
sbb
js
decl
cs
jmp
shl
lock
mov
jle
cmp
jge
xchg
ret
jns
fcoml
mov
repnz
dec
fdivrl
pop
popl
mov
int
mov
adc
sbb
jb
push
inc
test
and
out
sub
adc
cwtl
cmp
rolb
gs
push
push
xchg
aas
adc
xchg
pop
jb
clc
loopne
pushf
mov
in
ret
jb
mov
flds
out
mov
lock
cmp
clc
add
push
fcmovbe
addr16
sbb
scas
arpl
imul
aaa
shll
xor
fwait
xlat
mull
cmpsl
push
or
rcll
loopne
in
jmp
push
sub
dec
push
xchg
adc
ja
sbb
rcll
mov
test
stc
mov
mov
push
xchg
sahf
pop
dec
in
subl
sub
pop
mov
lock
mov
mov
xchg
mov
icebp
pop
mov
insb
dec
bound
inc
rolb
mov
rcrl
pop
ret
and
mov
dec
xlat
add
imul
cmc
int3
push
andl
aaa
sub
xorl
cs
push
sub
mov
lock
int3
cmp
out
cmpsl
lret
add
mov
daa
movsl
mul
les
xor
jge
fisttps
test
sub
iret
mov
or
pop
notb
or
stc
mov
fldcw
jg
movsb
aas
mov
scas
data16
addb
mov
subb
inc
ljmp
cmpl
lret
dec
sbb
into
dec
and
mov
sub
pop
mov
lcall
ucomiss
sub
dec
cmp
pop
pop
push
adc
out
inc
mov
repnz
scas
sub
mov
test
inc
push
repnz
imul
lock
dec
dec
mov
xor
mov
mov
out
jecxz
testl
fldenv
popf
ret
shr
pop
pop
pop
inc
dec
dec
xor
mov
rolb
jnp
cmpsb
nop
add
sbb
rcl
mov
pop
push
push
in
sub
sub
pushw
les
fucomip
or
cs
mov
icebp
lcall
cmc
shll
fwait
cmp
dec
and
rcrb
inc
inc
inc
mov
pop
pop
add
add
sbb
jbe
rcl
xlat
lods
dec
cmpsl
pushf
movsb
mov
rcrb
xlat
pop
pop
cs
lar
lret
int3
mov
pop
lock
popa
or
subl
mov
dec
sub
jge
inc
mov
fdivr
in
cmc
mov
mov
or
jge
out
mov
add
outsb
push
jae
push
arpl
faddl
sti
push
icebp
enter
cmp
mov
out
out
mov
int
jbe
bound
ret
addr16
xor
push
pop
outsl
mov
rsqrtps
adc
xchg
faddp
fcmovne
push
mov
in
jnp
pushf
lods
jecxz
mov
mov
insl
or
cmpsl
xchg
and
add
scas
mov
mov
lea
xor
pop
cmpsb
push
iret
fdivs
push
or
or
push
lcall
pop
mov
cmp
mov
xor
int
pop
in
sub
jno
out
test
test
pushf
clc
xor
lret
pushf
lods
call
mov
sub
das
add
int3
rcll
jns
xchg
ret
data16
fbstp
push
leave
jb
jl
out
fcmovne
loopne
cmp
lods
dec
inc
pop
pop
push
mov
sub
sar
adc
cmc
jmp
std
sbb
fdivs
push
pop
add
pop
cs
and
std
int
adc
imul
xchg
push
or
ret
mov
je
jle
lcall
in
cld
fimull
jmp
mov
pop
sub
movl
push
shll
popl
das
xchg
in
stos
popa
inc
pop
lock
cmp
sbb
push
sub
scas
lahf
std
lods
and
push
mov
dec
aam
pop
jae
push
sub
mov
mov
into
xor
mov
sbbb
jb
dec
das
or
jno
pop
xchg
out
mov
sarl
push
pusha
addl
mov
sti
rclb
and
inc
rclb
rcrb
sub
xorb
arpl
jmp
insl
mov
mov
inc
pushf
sti
sub
jno
div
sub
mov
mov
jle
testl
int3
mov
ja
ljmp
lods
add
leave
ljmp
xlat
mov
notl
adc
loope
popf
jle
sub
test
mov
xchg
or
jg
push
add
mov
das
mov
mov
sub
cmp
inc
sub
mov
lods
imull
xchg
xlat
pop
pop
push
cli
je
in
inc
mov
xchg
int3
shll
adc
out
shrb
fsubrs
data16
sti
movsl
xchg
add
inc
fists
insb
and
push
jg
test
scas
xchg
adc
jb
aad
jmp
int
add
adc
ret
mov
mov
out
roll
lret
fwait
push
fisubrl
mov
pop
add
iret
fdivr
fistpll
das
jnp
iret
andb
rclb
in
imul
int3
jb
fadds
sbb
imul
scas
addr16
out
adc
inc
add
rcl
lea
jle
dec
dec
dec
pop
movsb
fstps
mov
mov
mov
xchg
jbe
lods
adc
jno
popa
xchg
mov
xchg
loope
in
je
cmp
adc
or
and
imul
and
jae
and
mov
mov
adc
inc
jnp
sub
test
jno
mov
dec
mov
lock
jp
pop
xor
add
std
mov
lods
sbb
jns
xor
mov
pop
pop
mov
mov
in
mov
pop
xor
fsubl
dec
fwait
or
dec
ja
and
pushl
cmc
lock
sbb
dec
test
and
int
mov
mov
jne
test
mov
mov
adc
arpl
aas
clc
inc
gs
leave
mov
repz
notl
sub
mov
jecxz
ds
nop
mov
sub
incl
xor
cmp
lret
fxtract
and
pusha
xchg
enter
cs
xchg
mov
mov
inc
jae
lahf
ss
mov
mov
or
or
jnp
int
fnstenv
cmp
fsts
add
loopne
jmp
or
stos
pushf
mov
jmp
adc
and
or
inc
or
sti
lahf
mov
pop
push
jo
imul
mov
repnz
ja
inc
cmpsb
mov
pop
aas
push
mov
aam
cmc
outsb
dec
mov
pop
int3
and
sbb
cs
jne
mov
xor
stc
or
icebp
lods
fstpl
xlat
ljmp
dec
push
jbe
xor
mov
fwait
les
sbb
sbb
add
push
aas
and
mov
or
imul
push
cmpl
dec
rclb
push
jnp
movsl
and
in
es
sbb
fstl
fstps
mov
rcrb
dec
outsb
movsl
ret
int
pop
push
adc
jle
mov
je
mov
out
arpl
cmpsb
dec
ds
push
xorl
or
push
mov
add
mov
inc
aaa
inc
inc
inc
cmpl
sbb
jmp
fdivr
fcmovnb
sbb
jno
aad
outsb
cmp
aaa
mov
ja
mov
push
and
pop
sbb
loope
mov
jne
fsts
mov
xor
inc
cmp
je
repz
lret
push
and
push
dec
imul
pop
div
in
mov
dec
add
test
movzbl
and
jg
pusha
or
adc
xchg
xor
idivb
sti
loop
inc
dec
lods
pop
cmp
push
mov
bound
jg
sbb
repz
cmp
push
mov
sub
movsl
sub
push
imull
sahf
xlat
leave
xchg
push
cli
mov
or
pop
test
add
sbb
push
iret
sbb
sub
xlat
mov
mov
cs
push
std
add
mov
pusha
inc
cmp
mov
inc
mov
add
sbb
scas
dec
repz
scas
xor
pop
xchg
lret
and
sarl
and
add
fwait
fs
pushf
cmp
xor
pop
jno
cs
sbb
in
mov
or
frstor
pop
mov
mov
loope
loop
vmptrst
jecxz
ja
push
ja
popa
lcall
into
test
loope
shll
fs
imul
cmpl
fcom
xor
inc
push
bound
sahf
int
pop
test
lret
pop
inc
inc
push
in
outsl
cmpsb
mov
sub
sbb
push
cmp
push
sub
add
adc
sti
mov
imul
mov
jge
xchg
inc
out
out
cs
jle
popf
xor
push
adc
mov
cmpsb
or
push
fnstcw
add
test
jmp
xchg
insb
mov
or
mov
in
cmp
sub
fwait
sub
push
or
mov
xor
jle
xor
dec
lcall
outsb
test
xor
dec
ja
in
mov
dec
adc
xchg
test
call
lock
push
or
mov
sbb
cmp
and
or
add
dec
out
fldt
add
push
sbb
rorb
fldenv
mov
dec
xchg
push
cmpsb
lods
add
lea
cmpsl
mulb
fsubs
sub
cmp
jge
push
mov
out
sbb
outsl
mov
pop
cmp
or
es
in
dec
sbb
loop
enter
mov
sbb
add
jg
rcrl
lahf
out
jne
cmpl
leave
dec
lock
ja
add
out
push
xchg
daa
nop
cmp
jmp
cwtl
movsl
loop
lods
mov
and
pop
mov
dec
nop
in
jb
cwtl
push
xchg
xlat
mov
sbb
insb
sar
push
sahf
fisubrl
cli
cmpsb
loopne
xor
push
out
insl
cltd
sbb
xchg
iret
sarb
andb
fldt
sub
fists
push
cmpsb
sbb
shll
or
ret
popf
xchg
orb
mov
mov
enter
dec
jmp
mov
sub
addb
mov
jbe
xchg
loope
fs
ds
dec
aad
and
pop
aam
faddp
sbb
xchg
cltd
fs
mov
pop
or
sub
mov
into
ljmp
fwait
jp
loop
mov
jnp
icebp
faddl
mov
icebp
mov
jge
inc
dec
push
add
pushf
sar
pushf
dec
hlt
stc
call
and
sbb
dec
das
xchg
push
test
dec
mov
jno
jmp
loop
stos
enter
scas
clc
lock
aam
jp
xchg
mov
sbb
mov
aam
aaa
mov
or
cs
into
dec
dec
es
mov
imul
jb
mov
stc
mov
xchg
ret
movsl
mov
mov
inc
call
xchg
pop
mov
fstpt
cmp
cwtl
fistl
das
mov
xor
mov
xchg
popf
aam
xor
rorb
mov
jo
jb
mov
cmpsb
xor
add
gs
inc
inc
sarb
mov
jecxz
pop
mov
fwait
dec
mov
add
sub
dec
fistpll
push
mov
push
mov
jns
rcrb
daa
aam
and
and
in
js
fsubrs
cs
lret
iret
hlt
and
mov
push
lahf
loopne
mov
jo
pop
sahf
je
les
shl
cwtl
or
cmp
xor
jp
cwtl
cmp
inc
sbb
add
mov
test
xchg
xchg
stc
loop
es
dec
into
adc
push
mov
pop
arpl
adc
mov
outsl
jecxz
xchg
call
and
dec
adc
mov
pop
xlat
adc
rcrl
repnz
movl
cmp
lret
cmpsb
cli
sbb
jnp
adc
sub
bound
cltd
outsb
push
out
fdivrl
insb
sub
or
adc
outsb
leave
cmovbe
iret
and
fbstp
jmp
sbb
dec
mov
xor
sub
xchg
mov
inc
pop
adc
popf
jne
cmp
imul
sbb
stos
outsl
xchg
fimull
adc
in
jmp
xchg
sahf
mov
jl
sbbl
andb
bound
xchg
jg
out
pusha
cmc
cmc
adc
xlat
mov
icebp
dec
aam
enter
sbb
cli
xchg
adcb
and
push
xlat
push
testl
fwait
dec
mov
jge
lds
test
scas
in
cmp
adcl
mov
lods
cmp
and
sbb
rclb
jo
repz
push
push
inc
sub
les
sbb
sbb
mov
mov
scas
mov
mov
aad
sub
adc
test
mov
add
data16
outsb
popf
mov
push
addr16
xor
sub
mov
pop
jb
gs
enter
pushw
mov
call
daa
inc
ret
orl
xchg
mov
scas
popa
lahf
sbbb
aam
ja
push
sub
inc
insl
jns
mov
lds
pop
jecxz
mov
sti
dec
adc
pusha
mov
adc
les
jmp
dec
mov
jno
mov
arpl
int3
push
mov
cwtl
loopne
adc
jmp
fistps
lods
std
jg
into
inc
aaa
add
xchg
or
aam
out
fs
xor
gs
mov
out
adc
incb
push
mov
adc
xchg
xor
popf
mov
xchg
push
jmp
enter
rcll
and
fwait
and
add
jge
fnstcw
cld
stc
xstore-rng
cmpsl
push
sbb
lods
repz
mov
pop
stc
cs
inc
mov
xlat
popf
push
mov
scas
dec
pop
pusha
xor
xchg
test
sbb
xchg
std
lods
ja
jo
nop
popa
clc
mov
mov
pop
push
xchg
xor
outsb
imul
adc
and
ds
ret
ret
mov
and
ljmp
mov
xchg
stos
mov
insb
test
xchg
cmp
xchg
mov
jae
lods
mov
out
push
pop
pop
xchg
xor
sub
and
mov
add
lods
stos
cmpl
jb
dec
lea
mov
dec
test
insl
rclb
movsl
mov
adc
arpl
fwait
nop
es
pop
imul
xchg
and
jmp
inc
clc
jl
add
inc
stos
sub
ret
dec
aas
pop
lcall
addl
sub
xchg
xlat
inc
xor
test
jle
mov
jp
fs
std
jmp
add
or
divb
in
out
sti
inc
push
sbb
jo
ret
cmp
or
mov
push
push
add
jo
mov
jb
mov
xor
jnp
icebp
and
xor
push
dec
ds
add
cli
movsl
paddw
xchg
cmp
lahf
push
xchg
into
fisubrs
and
xorb
pop
mov
sti
mov
loop
scas
jmp
movsb
pop
lods
fidivrl
xchg
mov
into
leave
pop
dec
sbb
scas
pushf
insl
push
adc
in
mov
and
fidivs
jne
add
popa
xchg
or
icebp
and
mov
adc
mov
stc
mov
dec
dec
ror
lcall
fcmovnbe
stos
push
mov
and
mov
mull
ljmp
dec
jg
jecxz
test
in
rorl
ss
jp
cmc
mov
hlt
mov
filds
mov
test
cmp
cld
inc
or
sub
pop
mov
xchg
mov
jno
sub
xchg
sbb
scas
mov
js
inc
mov
inc
jns
pop
and
mov
pop
rclb
sub
jno
sahf
mov
xor
fcoms
pop
mov
mov
into
je
sub
stc
ss
mov
mov
adc
cltd
lods
add
sub
pop
pop
mov
cli
mov
and
dec
js
fdivl
jb
and
outsb
movsb
ficoms
adc
xlat
jmp
stos
pop
mov
and
xor
cmp
idivl
mov
dec
jl
and
aas
pop
jle
out
xchg
in
inc
sbb
std
jns
jo
pop
repz
mov
jle
lret
and
xor
sub
test
outsb
repz
imul
test
fisubl
add
mov
out
cmp
jl
aam
or
fs
pop
xor
jge
aad
cmp
js
pop
sti
dec
pop
cld
mov
pop
fldt
icebp
lcall
pop
xor
in
xchg
movsl
push
sarl
xchg
lahf
xor
pop
pop
mov
sti
xor
jge
call
shll
add
xchg
push
inc
repz
sti
and
mov
cmp
mov
fnstcw
jg
sub
mov
ss
sub
out
and
mov
ds
push
testb
adc
test
lds
jle
jecxz
flds
mov
loopne
xor
mov
xchg
add
and
push
pop
dec
sbb
cmp
test
and
test
out
pop
push
nop
pop
das
imul
sub
and
pop
add
xor
push
int3
cmp
sub
cmp
xor
cltd
inc
add
push
test
mov
sub
jp
repnz
icebp
sbb
das
adc
dec
insl
out
movsb
fnstenv
inc
cmpsb
js
xor
fs
dec
push
sub
js
test
pop
call
in
and
rolb
sub
les
jbe
mov
lea
insb
pop
inc
int3
mov
imul
xor
cmp
fidivl
in
cs
cld
sbb
insl
ret
cld
xchg
mov
sbb
mov
lock
in
loope
adc
aas
dec
cmp
sbb
idiv
sub
xchg
mov
pop
iret
inc
cmpsl
in
and
mov
les
scas
mov
pop
mov
movsl
add
adc
popf
test
mov
mov
aam
std
fxch
pop
cmpsb
rclb
cmpsl
xor
cwtl
push
dec
add
mov
push
push
jecxz
test
inc
xchg
mov
cmp
xchg
mov
xor
data16
mov
in
pushf
pusha
lods
jge
mov
lret
lret
inc
cmp
stos
loope
or
insl
cmpsb
pop
pushf
xlat
xorb
xor
sub
hlt
call
and
nop
shlb
incl
adc
push
cmp
fisubl
sbb
jb
pop
lea
mov
fidivrs
nop
testb
add
mov
fs
xor
or
or
cli
nop
dec
dec
mov
in
cmp
int3
jge
loopne
insl
cmpsb
push
jns
cmp
push
adc
sub
add
fisubs
aas
add
aad
inc
in
stos
push
ficomps
mov
pop
add
inc
sub
scas
push
pop
pop
and
sbb
sub
mov
pop
lock
dec
and
repz
testl
lahf
repz
test
inc
mov
adc
jmp
push
and
pop
in
xor
inc
cmp
cmpsb
scas
pop
mov
pop
mov
add
sbb
and
and
jl
sbb
out
add
cmpsl
cmc
les
out
dec
fstps
xlat
stc
or
adc
fstl
into
lret
insw
lret
test
sub
add
leave
sub
dec
hlt
sub
jbe
and
cmp
cmpsb
mov
dec
cmpsb
lahf
mov
pop
aam
int
test
push
dec
repz
jl
test
sbb
fidivrs
push
aas
pusha
adc
in
popa
push
test
jno
jecxz
je
aad
adc
mov
sbbl
jnp,pt
cmp
mov
and
pop
sti
push
test
mov
jg
loope
pop
cmp
leave
std
popf
pop
ss
in
fnstsw
adcb
je
pop
outsl
cltd
jae
jbe
and
jl
fdivs
push
adc
sub
push
inc
inc
arpl
negl
jmp
and
lds
xchg
dec
and
dec
sbb
mov
cld
add
add
cmp
sarb
mov
or
lods
je
icebp
and
xor
lcall
repnz
pop
add
mov
dec
xchg
or
pop
inc
mov
hlt
and
bound
cmpb
js
movsbl
mov
lret
cmpsl
test
std
xchg
test
sti
movsb
jne
out
xor
mov
in
cmp
das
cltd
fdiv
cwtl
shlb
sarb
mov
push
cs
sti
rcl
movsb
xchg
jge
xor
sahf
sub
mov
stc
pusha
jmp
addb
icebp
xchg
mov
lcall
out
cmp
ja
push
call
add
and
push
sbb
dec
push
out
dec
jmp
leave
icebp
mul
jbe
gs
lds
jl
push
add
shlb
stos
clc
movsb
aad
adc
adc
xor
arpl
push
sub
shll
ljmp
dec
or
cmp
insl
cld
inc
or
and
add
mov
xlat
push
imul
cmp
mov
aas
pushf
cmp
adc
dec
push
xchg
cwtl
popf
add
icebp
add
in
dec
iret
std
leave
popa
aam
int3
sub
mov
xchg
cmp
int
or
jae
xchg
mov
lcall
mov
adc
ret
test
adc
add
nop
out
stos
jne
cmp
adc
or
das
std
push
enter
inc
mov
adc
sbb
gs
popl
insl
xor
inc
sbb
xor
xchg
int3
idivl
cltd
es
mov
mov
push
push
aad
cli
mov
orl
sbb
mov
xorb
stos
push
dec
test
xchg
cld
pop
in
rcl
push
jl
cmc
adc
fwait
adc
sbb
addr16
dec
bound
jb
or
nop
mov
mul
inc
cmp
jecxz
dec
fbstp
push
frstor
fs
mov
loop
mov
in
stos
mov
imul
addr16
add
jmp
push
mov
fisubrs
subl
fdiv
add
add
test
addr16
or
cmc
popf
dec
mov
push
mov
xchg
ror
adc
scas
xchg
lcall
imul
sub
out
pushf
popf
mov
outsl
adc
lods
dec
mov
stos
add
enter
enter
mov
test
nop
addr16
pushf
sbb
cmp
and
xor
addr16
mov
fwait
cmp
push
stc
ljmp
inc
push
cmp
push
mov
rcll
fwait
cld
xchg
je
scas
inc
push
or
nop
popa
pop
or
adc
not
lret
mov
call
sbb
cmp
xor
lea
or
inc
push
jecxz
pop
mov
dec
xchg
daa
add
mov
mov
push
aam
and
ret
cmpsl
xchg
cmp
push
sahf
test
cmpsb
pop
inc
mov
out
xchg
mov
lcall
mov
add
dec
and
pop
sbb
aad
fadds
lea
out
push
push
lods
sub
inc
cwtl
aam
lret
jnp
dec
mov
cwtl
repz
pop
fstpl
jg
adcl
jmp
jae
out
test
test
push
cmpsb
or
sahf
mov
add
inc
inc
mov
add
or
daa
sub
call
adc
pop
sub
es
in
mov
jb
clc
jnp
clc
pop
insb
hlt
pop
xchg
inc
and
sbb
movsl
add
out
sub
scas
xchg
mov
xchg
add
stos
shlb
cmp
sahf
mov
inc
mov
dec
inc
sub
outsl
sbb
test
scas
sarl
popa
mov
inc
std
sub
fsts
jl
add
popf
fisttps
ljmp
testl
in
stc
add
mov
adc
movsb
inc
bound
lea
cmp
or
lret
stc
cmp
lock
int3
and
stc
jl
ss
aas
pop
mov
xchg
push
insb
sub
add
and
ljmp
xchg
add
fisttps
xor
or
cmp
dec
dec
cmpsb
gs
out
mov
rcll
or
jecxz
loope
mov
mov
dec
roll
ja
sahf
or
ljmp
inc
imul
cli
bound
repnz
rolb
sbb
lock
mov
dec
test
inc
or
adcb
stos
jae
xchg
sbb
into
adc
mov
inc
inc
xor
gs
sub
fs
mov
loop
test
insl
les
push
and
mov
iret
mov
or
je
pusha
scas
jb
add
and
jp
mov
fbld
lahf
iret
xchg
imul
ja
cmp
jo
test
cmc
xchg
mov
jnp
inc
aad
xchg
jnp
jmp
repz
movsb
mov
jnp
jbe
xor
loop
sub
jne
xchg
daa
xchg
and
cltd
xchg
mov
or
ja
repz
sti
ljmp
test
out
mov
pushf
mov
repz
into
lock
outsl
sbb
add
lcall
lock
out
jle
movsb
popa
leave
cmovae
sbb
enter
mov
pop
xlat
sbb
cmp
push
enter
movsl
inc
push
jp
push
mov
popa
pop
mov
sbb
push
scas
sbb
jno
mov
mov
mov
lea
mov
mov
and
inc
push
sti
jns
ss
pop
xchg
xchg
jp
cs
jae
out
insb
fisttpll
mov
fildll
sbb
mov
rol
or
in
movsl
scas
mov
pop
dec
popl
jp
mov
ss
gs
imul
aam
xor
leave
mov
pop
mov
cmp
aas
xchg
pop
mov
adc
and
jecxz
cmp
loopne
jnp
das
pushf
cmpsl
mov
jl
add
mov
int3
mov
xchg
hlt
add
fwait
inc
and
das
fcom
pop
jle
sub
fisubrs
inc
and
addl
inc
das
and
fdivrs
jae
sbb
adc
sbb
out
mov
mov
aaa
lds
xchg
cwtl
lret
xor
sub
mov
pop
sub
hlt
add
roll
xchg
sti
jecxz
clc
mov
cli
jae
dec
jecxz
aaa
jnp
shlb
pusha
or
xor
inc
and
xor
nop
out
jno
outsb
imul
pop
mov
pop
inc
push
cmpsl
mov
jno
leave
xchg
cmc
xor
and
test
mov
xchg
push
inc
adc
or
test
inc
insb
jo
jg
test
es
jg
cmpsb
movsl
inc
pop
faddp
xchg
mov
lahf
and
cs
test
xor
sub
movsl
mov
inc
out
movsl
jne
aad
pop
adcb
fcomps
inc
mov
push
out
insb
xor
sbb
sbb
lahf
inc
mov
mov
adc
mov
mov
jbe
movsl
xchg
jns
jno
mov
sub
push
fdivrs
pop
sub
scas
sbb
into
je
imul
rcrl
jne
dec
sub
cltd
popf
adc
cmp
pop
adc
xor
and
insl
ds
sub
int
lock
or
xor
int3
pusha
enter
cs
inc
mov
les
sbb
loope
loope
xchg
inc
jmp
loop
repz
pand
adc
sbb
in
je
cmc
cmp
mov
pop
push
enter
mov
fldenv
push
test
movaps
nop
inc
pop
aad
add
lahf
daa
dec
or
loope
cmp
xchg
stc
dec
dec
stos
jecxz
popf
mov
jbe
inc
xchg
icebp
mov
fcomi
cld
jmp
pop
mov
andl
fnstsw
mov
xchg
inc
fistl
pop
push
or
xchg
pop
popw
aad
clc
shl
data16
mov
sub
sub
or
cmpsl
adc
cwtl
iret
enter
ss
insl
test
mov
jne
shrb
sbb
in
pop
stos
divl
inc
leave
sbb
in
sbb
rorb
mov
push
add
jle
jno
dec
or
jae
xor
ret
sub
xchg
xchg
adc
out
push
jge
sahf
fcos
movsl
mov
sub
push
mov
lret
jae
in
imul
xchg
jl
mov
jo
mov
cmp
inc
and
push
out
xor
shlb
movb
movsb
inc
in
clc
enter
lret
mov
inc
sbb
imul
fadd
inc
and
xor
gs
mov
mov
xchg
ljmp
inc
std
mov
lcall
fs
add
fisubs
mov
pop
mov
imul
pop
lods
enter
pop
lock
repnz
lods
add
ja
pop
inc
jmp
filds
test
xor
bound
jno
xlat
add
sbb
dec
fistpl
and
xchg
jl
gs
loop
ss
es
test
push
or
inc
aas
pop
hlt
pop
push
mov
dec
shlb
fiadds
jae
xor
lock
adc
loopne
mov
xchg
lock
pop
sarb
add
inc
sbb
ficomps
outsb
lods
clc
sbb
mov
or
lahf
mov
js
mov
and
adcb
mov
pop
cli
mov
mov
std
mov
insb
push
pop
xor
test
add
sub
fnsave
leave
in
in
xchg
pop
xchg
fcoml
sub
xchg
sti
stos
jne
pop
mov
cs
iret
pusha
cld
push
cltd
sub
imul
jl
jo
aas
cld
and
jle
adc
sub
pop
sub
aam
in
adc
movsl
out
fcoms
jge
mov
pop
lea
out
leave
add
lahf
in
sahf
sbb
stos
mov
add
mov
cmc
dec
aaa
mov
cld
cmp
add
pop
or
xchg
ss
sbb
push
insb
pop
es
dec
push
fists
mov
jno
stos
sbb
adc
mov
push
out
stos
aam
pop
push
inc
dec
dec
sti
add
int3
inc
xchg
neg
inc
sub
adc
mov
dec
and
push
ret
insb
popa
jnp
mov
out
adc
loope
call
mov
pop
cmpb
xchg
mov
pop
int
pop
mov
js
shrl
adc
push
ficomps
cmp
in
mov
inc
stos
inc
in
jns
or
sbb
pop
pop
arpl
xchg
mov
dec
cmp
mov
int3
int
in
popa
sbb
or
ret
pop
pop
and
filds
jo
jbe
adc
jb
sbb
inc
cli
inc
mov
sub
mov
add
mov
adc
pushf
xchg
sub
loope
pusha
in
cmpsb
ficomps
mov
dec
mov
mov
outsb
scas
in
inc
fwait
lods
mov
push
cmp
cmp
ficompl
jmp
pop
jno
popa
adc
popf
int
fs
pop
xor
fwait
jle
inc
cld
ljmp
call
std
cmpl
xchg
cmp
mov
and
fldt
jp
jns
test
out
xchg
test
lods
cs
shll
pop
imul
lods
out
inc
pop
out
inc
mov
popl
mov
fdiv
stos
lds
sbb
jle
mov
jp
aam
jno
scas
test
sahf
pop
dec
sahf
mov
gs
scas
dec
in
imul
fsubp
dec
xchg
inc
notl
jo
lret
jo
mov
orl
int
xchg
dec
dec
and
ljmp
mov
mov
mov
jl
test
ret
cwtl
std
nop
dec
scas
loope
mov
ja
daa
pop
hlt
push
inc
push
add
loop
push
test
cmp
ljmp
or
sbb
adc
scas
sub
out
movsb
stos
mov
mov
aas
dec
jg
mov
xchg
fbstp
movsb
push
sbb
fwait
mov
sbb
imul
sub
mov
fsts
mov
roll
push
icebp
mov
and
or
add
sbb
sbb
cmp
aad
jl
lds
scas
add
stc
and
cmp
jne
ljmp
mov
rol
mov
and
pop
sbbl
jge
loope
add
jb
fiadds
xor
and
sbb
lret
inc
sub
aam
dec
lea
mov
sahf
dec
in
out
out
call
pop
xlat
addb
push
push
cmp
outsb
cltd
cmp
scas
push
or
iret
loope
int
xor
pop
or
push
sti
subb
push
xor
mov
aam
ffree
outsl
ja
scas
popa
mov
jg
jbe
mov
dec
add
lds
nop
fs
cmp
mov
dec
fwait
add
mov
scas
out
dec
popa
adc
and
lret
xor
loopne
push
arpl
adc
aad
lret
rorl
cmp
push
gs
testb
mov
repnz
pusha
pop
iret
stos
inc
jne
mov
cmp
inc
jb
xchg
mov
iret
repnz
push
andl
inc
fs
addb
fs
adc
push
jp
pop
jp
lods
test
das
or
cmp
cmpsb
loop
sub
pusha
pop
add
stos
shr
xor
stc
or
aad
sbb
mov
sbb
pop
shl
and
inc
jmp
jo
add
add
or
push
xchg
push
push
nop
aas
xor
shr
sbb
mov
jns
aas
xchg
push
test
sbb
loop
push
mov
jg
aam
sbb
mov
mov
in
sbb
add
or
pop
test
scas
out
into
sbb
and
scas
push
inc
outsl
negb
push
xor
add
pop
cmpsl
xlat
cmpsl
pop
loop
sbb
ss
sbb
mov
cmp
ffree
fsubrs
mov
out
pop
jo
ljmp
jae
in
mov
jo
jae
xchg
add
cmp
pop
xor
lret
push
push
cltd
xor
sub
in
stos
dec
test
sub
lcall
aad
mov
fisubrl
jae
cmp
pop
pop
sub
inc
sahf
sub
lcall
cmp
pushf
pop
arpl
xchg
add
pop
pop
pop
std
dec
scas
lods
mov
sbb
cmp
sub
push
jae
fildll
test
pop
std
mov
cmp
cli
and
add
mov
scas
push
xchg
aaa
in
or
jne
pop
mov
mov
movsl
cwtl
cmpsb
adc
rcrb
adcl
sub
xchg
outsb
cmc
icebp
mov
cwtl
je
sub
scas
cmp
cmp
cmpsb
jecxz
rorb
dec
mov
shlb
jnp
adc
inc
ret
and
add
inc
mov
faddl
in
test
push
jmp
clc
mov
xchg
xchg
inc
mov
leave
dec
xchg
xor
sub
sbb
aam
xor
pop
mov
cmp
lret
outsl
mov
loopne
push
in
jg
cmc
imul
icebp
stc
test
inc
les
pop
push
leave
xlat
fimull
pusha
ret
lock
jg
adc
imul
mov
js
and
sbb
lea
mov
jae
movsb
dec
xchg
adc
loopne
inc
mov
aas
aad
inc
push
leave
xchg
xor
les
jno
push
jge
adc
fidivrs
xchg
xchg
inc
pop
or
sbb
fs
cmpsl
mov
cmc
sub
fstpt
pusha
lcall
xchg
inc
mov
pop
push
stc
movsl
jnp
xor
loop
adc
pop
into
pop
dec
in
mov
nop
cmpsl
lock
mov
add
sbb
dec
aas
add
leave
xchg
leave
les
ss
inc
and
pop
mov
mov
adcl
inc
aaa
pop
test
xor
aad
lret
cmp
xchg
lea
sub
divb
aaa
js
pushf
add
aam
ret
adc
pop
sub
cltd
hlt
fadd
adc
mov
ret
hlt
fistpl
xchg
cli
add
adc
pop
test
jne
lcall
pop
mov
pop
adc
xchg
cli
ret
adc
outsl
stos
popa
pop
sub
jp
cli
inc
mov
or
pusha
xchg
out
mov
cmp
stos
mov
aam
sarl
pop
lahf
cmp
mov
dec
ljmp
pusha
in
gs
cmpsl
jg
push
pop
pop
push
dec
leave
pop
test
xchg
push
or
cmp
mov
push
pushf
adc
andl
in
scas
mov
xor
jle
lret
shrb
and
mov
das
outsb
out
dec
popf
push
arpl
gs
cmp
jp
xchg
xchg
adc
fdivl
mov
push
ss
ficoml
add
sub
mov
in
mov
xchg
and
lcall
ds
ss
push
je
mov
jp
iret
cmpsb
xchg
lods
out
jno
or
inc
jmp
xor
sub
ss
pop
inc
rolb
and
sbb
lret
in
ret
gs
sub
loopne
xor
pop
add
add
inc
stc
icebp
xor
mov
les
shll
sbb
push
xor
adc
lods
clc
xor
mov
sbb
cli
jo
add
mov
lret
aaa
jmp
cmc
cmp
imul
cs
stos
mov
xchg
rclb
dec
mov
imul
jmp
and
pop
lds
inc
sbb
mov
jae
mov
xchg
cltd
xor
dec
iret
sarb
es
pop
mov
fs
inc
int3
mov
imul
sbb
sbb
shrb
dec
imul
add
pop
mov
pusha
call
add
xchg
push
xor
cwtl
mov
xor
pop
dec
or
sti
mov
add
es
into
mov
or
aas
stos
pop
lds
fistl
pop
jno
jecxz
jns
inc
push
pusha
lea
lcall
xchg
out
inc
into
inc
sarl
mov
nop
lods
mov
sti
fs
repnz
jb
movsl
subb
cmp
mov
xor
aaa
inc
stos
adcb
sbb
jns
mov
sub
jle
movsl
mov
jle
sub
fs
push
lea
out
lods
sbb
jae
or
cmpsl
or
mov
sub
lock
test
iret
pop
fmull
inc
mov
xor
or
push
in
out
xchg
pop
cwtl
sbb
pop
pop
cltd
push
jns
push
pop
repnz
iret
xor
inc
js
daa
shll
mov
loope
jns
add
cmc
cmp
push
testl
adc
stos
fisttpll
pop
sbb
xchg
and
adc
mov
incl
xchg
iret
add
inc
loope
xchg
cld
cli
fwait
xchg
into
in
sbb
xor
xor
sbb
push
jae
inc
scas
mov
les
inc
ja
data16
aaa
loop
add
pop
addr16
push
push
mov
data16
lret
pop
fcomps
and
mov
jmp
jb
adc
xchg
push
call
mov
adc
cmp
fsubrs
xchg
add
mov
push
aam
xor
je
rcrl
pop
movsb
dec
sub
bound
ret
leave
out
cmc
popw
stos
jecxz
or
mov
in
aaa
ficomps
jecxz
lcall
mov
xchg
sbb
mov
lods
sahf
mov
andl
jge
push
imul
mov
push
push
das
mov
pop
aam
mov
pop
push
iret
mov
aam
mov
lea
rcl
cmp
popf
add
fsubrl
cmp
test
xchg
add
xor
sbb
mov
or
les
push
mov
xchg
jb
ds
incb
test
xor
scas
sti
xchg
add
shlb
mov
mov
aam
jge
mov
inc
call
jbe
adc
jmp
xor
push
cld
or
add
aad
js
xor
dec
es
jge
fisubl
aad
dec
hlt
add
sbb
lcall
iret
adc
add
jae
popa
leave
imul
cmp
push
jne
fcompl
aaa
fisttpl
sub
shr
add
mov
stos
imul
xor
dec
insl
nop
jge
std
pop
or
fdivs
mov
fidivrl
sbb
repz
or
push
lahf
stc
fs
in
ret
xchg
daa
mov
clc
jle
jmp
aam
mov
popf
lret
loope
sub
jge
or
dec
mov
sub
cmpsb
movsb
mov
mov
sbb
sub
scas
enter
fwait
xor
xchg
gs
ljmp
repnz
cmpsl
es
ret
ss
adc
aam
push
or
adc
push
jge
lods
sti
mov
pop
loope
push
sarl
add
add
stos
mov
ja
dec
popa
dec
shl
ljmp
insb
sbbl
shlb
push
aas
pushf
sbb
inc
push
dec
daa
jbe
movsb
out
jbe
into
cmp
mov
mov
cmpsl
dec
xor
jne
stc
adc
push
lds
mov
add
xorb
sub
add
pop
xor
or
ljmp
jnp
jae
mov
jecxz
jo
cmpsb
mov
enter
dec
leave
js
fbstp
inc
xchg
mov
js
inc
sbb
pusha
daa
adc
rcrb
xor
mov
int3
repz
out
clc
out
movb
aaa
popf
jp
iret
fs
in
lods
mov
std
aaa
dec
jp
pop
lret
jge
fldt
sarb
mov
cmp
and
stos
fs
xchg
test
jnp
fimuls
sbb
push
jge
push
or
jl
test
out
std
inc
sbb
push
les
fstpl
jp
pop
inc
loop
push
and
and
push
pushf
gs
jbe
es
ret
lods
push
imul
rolb
push
shlb
sub
in
imul
jno
cli
addr16
pop
test
mov
inc
fcom
dec
push
cmpsb
aad
lcall
mov
add
mov
adc
push
xchg
jb
mov
mov
mov
daa
push
out
stos
sbb
dec
stc
push
out
decb
mov
je
push
mov
xchg
fsubs
mov
dec
outsl
mov
mov
mov
mov
mov
mov
dec
dec
mov
cli
xor
mov
xor
shrl
jo
dec
cld
cmpsl
inc
and
mov
dec
lods
mulb
adc
or
xchg
fbstp
call
push
or
xchg
iret
jg
aas
cld
jno
stos
pop
mov
outsb
lret
xchg
repnz
inc
popf
adc
mov
in
add
cmp
dec
repnz
xor
lret
mov
pushf
mov
cmpsb
or
imul
repnz
clc
xor
inc
push
inc
pop
leave
out
mov
or
repz
jl
adc
xor
or
cmp
shl
int3
push
fsubrs
scas
adc
xchg
idiv
subl
or
sbb
lock
lahf
dec
sbb
jge
imull
sub
mov
sbb
sbb
insw
pop
cwtl
clc
xor
lcall
int
rclb
mov
mov
adc
pop
mov
test
bnd
or
sub
dec
mov
movsl
imul
push
xchg
mov
and
push
dec
pop
pop
leave
mov
xor
inc
aad
icebp
aam
mov
mov
mov
cmp
fisubl
adc
mov
pop
loopne
dec
push
add
inc
repnz
xchg
aam
jns
js
cs
and
leave
sub
fsts
xchg
int3
mov
mov
dec
jle
lret
sub
cmp
mov
popa
hlt
jle
mov
fildll
cmpsb
mov
fwait
mov
mov
pop
sbb
scas
mov
add
and
mov
add
push
lds
or
testl
push
dec
insb
xchg
and
sahf
negb
or
jbe
sbb
sbb
and
sbb
or
iret
xchg
out
and
in
jae
dec
andb
push
loop
scas
stos
es
js
inc
push
pop
mov
jmp
inc
rcl
inc
jmp
mov
cmp
into
scas
imull
xor
jns
jo
pop
sub
add
scas
clc
xchg
es
imul
shll
aaa
das
xor
add
test
addr16
mov
in
adc
pop
lds
xchg
sbb
push
cwtl
xor
popf
cwtl
test
sbb
aas
mov
lret
rclb
rorb
pop
mov
jge
call
lret
pop
rep
js
inc
jb
aas
scas
adc
add
fisubrs
mov
push
std
rolb
adc
sti
mov
cmp
sbb
sub
fxch
dec
push
ja
dec
jg
neg
mov
jns
mov
out
mov
fldenv
mov
mov
mov
clc
cmpsb
jnp
movsl
jnp
shrl
and
popf
shll
mov
xchg
mov
dec
loopne
push
push
adc
mov
xchg
mov
sbbb
repz
movsl
add
mov
popl
jle
xchg
das
xchg
or
cwtl
or
ret
mov
jae
je
sub
ret
rorl
popa
icebp
adcb
insb
dec
icebp
add
mov
xchg
inc
jecxz
cmp
cwtl
orb
push
mov
xchg
mov
mov
or
clc
sub
adc
add
mov
mov
mov
mov
inc
mov
dec
dec
in
xchg
mov
sub
out
add
inc
sbb
or
repz
mov
push
dec
push
or
scas
std
push
mov
pop
xor
adc
cwtl
or
insl
ds
sub
fildl
rcrb
mov
std
addr16
sub
imul
jge
aam
out
pusha
test
push
or
in
jmp
in
push
cmp
nop
or
push
jo
inc
pop
xlat
push
xor
jae
es
pop
jmp
aaa
inc
xchg
les
mov
cwtl
je
dec
or
loop
pop
inc
xor
mov
bound
add
xor
cmp
dec
scas
and
les
sub
mov
imul
adc
add
test
push
test
lds
pop
stos
fistps
addr16
in
inc
popf
in
sti
inc
and
int
dec
into
add
inc
fsubrs
sub
xchg
sbb
pop
jl
or
mov
sbb
icebp
in
in
jnp
or
gs
ret
hlt
jnp
pop
in
mov
je
pop
shr
testl
lcall
lret
push
mov
mov
xchg
dec
js
and
add
je
pop
xor
jp
adc
mov
cli
mov
arpl
xchg
cltd
add
xchg
push
lods
push
xchg
mov
iret
inc
jb
inc
pop
data16
jge
daa
xor
push
adc
loop
jp
or
xor
insl
mov
mov
xchg
and
ret
mov
cmpsl
lods
mov
cmp
mov
mov
pop
mov
movsl
push
jg
bound
pop
fcomp
and
shll
pushf
fucomip
icebp
inc
js
int
js
xlat
xlat
roll
mov
xor
negl
cli
sti
xor
sbb
jp
mov
sub
mov
sbb
adc
jo
rorl
adc
sbb
sbb
sbb
mov
mov
push
sub
lods
sub
add
mov
xchg
push
lret
movsl
ljmp
ja
xchg
adc
lcall
dec
xchg
xchg
xchg
arpl
fucomi
test
push
inc
or
je
cwtl
sbb
push
pop
pop
push
fisubrs
cmp
jne
mov
sbb
cld
bound
test
mov
stos
add
mov
jne
and
outsl
mov
mov
jg
cmp
test
mov
mov
imul
dec
divb
icebp
pop
mov
xchg
jge
push
scas
mov
in
adc
hlt
imul
xchg
sub
dec
jno
adc
cltd
pop
xor
stos
cmp
arpl
out
inc
push
mov
push
mov
jle
xor
or
hlt
addb
aaa
xchg
cmp
or
bound
repz
cmp
incb
sbb
pop
sub
jg
dec
mov
cld
jecxz
jo
adc
mov
les
je
mov
arpl
notb
pusha
xor
call
cltd
and
mov
rcrb
inc
sbb
add
mov
push
pop
or
pop
inc
and
sub
push
add
and
xchg
and
push
sti
lcall
pop
mov
mov
sti
push
and
popa
mov
sarb
mov
pop
sbb
jnp
add
jp
addr16
sub
cmp
push
je
stos
sub
cld
dec
andl
xchg
xchg
push
pop
xor
mov
add
push
loope
aad
rcl
pop
and
sbb
insb
sub
xor
insl
sbb
ljmp
subl
mov
sbb
add
lret
xchg
cmpsb
iret
mov
int3
xchg
idiv
imul
lcall
inc
add
or
ret
add
xchg
rol
in
xor
push
push
cmp
dec
orb
add
or
or
dec
add
shll
dec
mov
adc
dec
cld
pop
mov
or
sarb
clc
dec
sbb
add
sahf
ljmp
fcomps
inc
and
jmp
xor
cld
fists
in
push
push
cmpsb
testb
aad
dec
xchg
sub
lds
jp
icebp
dec
sarl
dec
jae
imulb
movsb
dec
push
scas
push
and
sub
rcrb
popa
andb
sbb
into
nop
movsb
clc
push
insl
rcrb
push
dec
push
fcompl
loopne
mov
stos
sar
cmc
out
pop
fiadds
sub
test
fstp
stos
shll
movsb
xor
js
and
push
add
inc
daa
movsl
arpl
scas
push
cmpsb
adc
or
sub
insl
pop
loopne
iret
xchg
add
or
and
sub
xchg
pop
jp
hlt
pop
pop
ljmp
push
ljmp
repz
add
adcl
in
jno
xor
fldcw
and
icebp
jae
or
jl
push
stc
ror
das
outsl
push
ss
test
pop
sahf
mov
imul
and
out
xor
mov
xchg
jne
test
push
out
in
cmp
sub
stos
add
shrl
jg
sti
bound
cmp
cmp
imul
movsl
xor
jb
pop
shrb
sub
test
enter
mov
nop
jo
adc
mov
ja
mov
out
mov
test
sbb
imul
cltd
mov
mov
add
mov
les
inc
jge
mov
incl
pop
stos
adc
xchg
mov
mov
and
or
lods
cmp
dec
lahf
outsb
movsl
in
push
std
movsb
cmp
outsl
mov
ljmp
aam
addr16
jns
aad
xor
push
adc
out
mov
xor
aam
jmp
int3
and
push
jno
rcrb
push
out
loope
stc
or
outsb
loopne
push
jae
xchg
lcall
dec
inc
lahf
jne
add
inc
popf
scas
or
mulb
mov
mov
cs
sub
lret
mov
xor
fcoms
testb
mov
cmp
ret
jae
mov
pop
js
pop
and
mov
or
es
inc
xchg
rclw
jae
xor
bound
xchg
mov
test
sub
sub
xchg
stc
and
or
in
cwtl
rcll
xor
mov
lret
mov
jo
ja
out
mov
lods
ret
xchg
cmc
cmp
mov
mov
dec
out
dec
in
pop
into
int3
test
jbe
imul
adc
adc
jae
movswl
and
pop
out
cld
mov
xor
xchg
xchg
mov
xchg
cmp
adc
fnstcw
cwtl
xor
roll
add
sub
mov
mov
data16
mov
es
sahf
loop
sarb
add
into
mov
sbb
push
iret
sbb
sbb
and
mov
pop
or
sub
push
out
or
imulb
ret
mov
cmp
dec
mov
ja
xchg
aas
divb
mov
adc
nop
inc
pop
outsl
test
or
test
pushf
add
into
cmp
cld
cmp
push
pop
lds
jne
popa
rep
mov
dec
mov
sti
adc
add
iret
cltd
add
xor
insb
push
jl
fldenv
sub
dec
push
rorb
sarb
dec
dec
jl
inc
pop
push
inc
inc
cmp
mov
dec
leave
push
aad
lret
jl
adc
and
jae
xchg
stos
sbb
adc
mov
push
fldt
push
pushw
cmpsb
sub
xchg
and
xor
mov
adc
test
rol
sbb
mov
jle
or
xchg
pop
sti
push
xchg
jmp
sbb
sub
mov
jae
fistpll
pop
dec
aad
xor
stos
cwtl
aad
inc
imul
dec
outsl
adc
in
inc
mov
dec
mov
pop
xchg
mov
adc
repz
pop
out
dec
inc
jne
aam
push
push
rcl
mov
lea
push
xchg
arpl
xchg
push
ret
push
iret
hlt
push
mov
ljmp
xchg
mov
and
repnz
and
int
and
sahf
jne
mov
cltd
mov
cmp
push
jns
xor
jbe
push
mov
test
sbb
mov
dec
popa
pop
scas
adc
mov
std
inc
sbb
jmp
sti
dec
cmp
stc
cmpsb
repnz
loop
jl
mov
add
xor
cmpl
adc
test
sti
nop
xor
mov
shlb
cmp
push
jae
mov
add
xor
xor
adc
jecxz
jbe
out
xchg
ljmp
adc
xor
enter
sub
or
stos
xor
mov
pop
mov
das
fucom
and
cld
add
pop
adc
in
outsl
testb
int
orl
xchg
push
push
add
jmp
les
dec
xchg
push
test
addr16
pop
in
mov
in
stos
jmp
and
xchg
pop
jne
sub
inc
lahf
jle
dec
jo
fcomp
or
mov
scas
push
in
mov
pop
jne
lahf
add
sub
add
lret
adc
and
fcmovu
sarl
stos
movsl
inc
popa
pop
into
rolb
mov
cmpsl
stos
jbe
mov
ljmp
imul
and
in
mov
inc
movsl
daa
xchg
sti
stc
test
fsubrp
adc
xor
in
and
mov
inc
sbb
xor
xchg
fsts
std
mov
ljmp
pop
mov
ss
add
dec
aam
jno
xchg
and
mov
mov
and
push
ljmp
lea
imul
mov
mov
dec
xchg
lea
orl
jg
sbb
jmp
roll
dec
mov
inc
iret
fnstsw
sub
sbb
jbe
xor
stc
iret
pop
dec
sbb
pusha
mov
push
xor
mov
jl
dec
xchg
cmp
test
hlt
xor
pop
add
jno
in
push
outsl
mov
sbb
push
daa
lea
pop
nop
mov
add
adc
notb
lret
dec
dec
lahf
and
sbb
adc
test
les
mov
or
push
pop
fldl
push
roll
inc
mov
stos
lret
xchg
fs
aad
popa
jmp
push
pop
movsb
sub
push
test
mov
std
sahf
add
bound
inc
pop
fwait
cmp
arpl
lds
xchg
fiaddl
xchg
test
mov
lock
into
pop
addl
xlat
adc
cmpsb
or
mov
jecxz
dec
lcall
out
cmc
add
jge
adc
test
outsb
stc
lcall
cmp
sub
imul
data16
pop
mov
fcmovne
das
xor
adc
lret
leave
lret
adc
adc
mov
inc
and
mov
les
mov
filds
mov
add
adc
xor
push
mov
xlat
jbe
add
out
and
mov
or
cmp
rorb
dec
sub
sub
or
add
xchg
dec
ja
jl
jo
pushf
lods
cmp
jg
pop
lcall
repnz
das
inc
cld
dec
inc
addr16
fdivs
pop
js
bound
xchg
xor
std
and
je
outsb
fsubrs
cmpsw
fnstcw
cmpsb
mov
popa
or
fs
jg
ficoml
dec
roll
dec
mov
ret
addr16
xor
dec
mov
dec
dec
lret
push
lods
mov
testl
adc
pop
mov
sub
sub
pushf
inc
sti
in
jae
enter
test
mov
outsl
jb
fs
daa
xor
sbb
pusha
outsl
addr16
jo
ljmp
cmp
leave
mov
xchg
leave
popa
fwait
outsb
sar
mov
push
and
jl
pop
loopne
clc
jmp
adc
in
adc
out
in
jns
pop
ret
fidivrs
xor
jae
xchg
sbb
std
push
cli
xor
sti
icebp
sbb
mov
js
xor
repnz
nop
bnd
xchg
or
push
and
mov
scas
pop
mov
int
mov
pop
adc
xchg
outsl
js
xchg
int
iret
test
jecxz
mov
jne
cmpsl
jmp
xlat
leave
push
cmc
cmp
mov
xchg
pushf
mov
adc
inc
scas
xchg
imul
mulb
rorl
cmpsl
pop
idiv
xchg
mov
sub
sub
inc
setbe
xchg
ja
dec
and
push
movsl
pop
shlb
adc
ret
add
push
cmp
std
scas
scas
push
push
mov
sub
cmp
out
neg
mov
imul
mov
cmp
mov
or
jmp
xlat
fisubl
lods
stos
mov
mov
xor
js
mov
outsl
sub
fisttps
hlt
xor
repnz
mov
inc
jns
and
sub
iret
mov
sti
push
jns
sbb
sbb
lahf
imull
jp
fimull
cmc
cmpl
in
inc
push
lret
push
movsb
enter
mov
out
jge
sbb
nop
incb
fstpl
dec
jb
sbb
scas
test
lret
sbb
jmp
dec
pop
and
scas
adc
ds
jo
dec
js
div
xchg
sti
cmp
scas
lock
popa
jl
bound
xchg
jp
mov
pop
mov
mov
dec
sbbb
or
call
or
jge
nop
notb
jp
cmc
and
pop
dec
call
arpl
outsb
stos
mov
je
inc
pop
xor
pop
out
or
cmp
mov
push
hlt
jl
outsl
fdivs
cltd
add
outsl
or
les
adc
pop
inc
ds
stos
xchg
cmp
dec
jmp
mov
cli
or
iret
cmpsb
repnz
inc
xchg
cmp
mov
ljmp
imul
rclb
out
sub
add
xlat
enter
les
call
adc
cmp
jnp
sbb
aam
pop
iret
mov
mov
or
clc
or
sbb
xchg
add
lcall
cwtl
push
adcl
negl
pop
fs
into
enter
mov
ss
xor
ljmp
lret
sbb
aad
pop
stc
add
xor
pushf
inc
imul
adc
popf
mov
insb
jnp
out
cmp
xchg
xlat
outsl
inc
and
or
js
push
fadds
shll
jns
dec
aad
push
mov
mov
mov
divb
xor
add
mov
out
loop
out
xor
push
lds
xor
dec
push
les
movsl
add
adc
repz
mov
mov
mov
jae
in
and
addr16
cld
dec
pop
add
sbb
push
sbb
mov
jbe
mov
xor
fdivs
sbb
ret
subl
jp
or
icebp
inc
cmp
push
mov
cli
mov
dec
and
push
or
push
sub
leave
sbb
cltd
rcrb
out
or
sbb
out
adc
or
adc
sbb
cs
inc
addr16
decl
fmuls
push
je
or
addr16
sbb
cltd
mov
insl
or
and
cwtl
mov
cmp
into
cld
xorl
movsb
sub
rorl
stos
push
jbe
or
xchg
fcompl
mov
xchg
mov
subl
icebp
add
scas
imul
aad
cmpsl
leave
cs
aad
mov
sub
xlat
push
pushf
rorl
adc
in
sub
stos
popa
test
leave
repz
aad
cmp
pusha
push
sub
arpl
imul
add
cmp
mov
in
fisubs
push
aam
ja
lret
xchg
mov
xor
aam
adc
xchg
sbb
sub
jns
js
fsubrs
dec
mov
jno
cltd
mov
ljmp
adc
or
sbb
das
imul
jge
loope
sbb
mov
aas
sbb
mov
xor
cmc
jmp
out
int
insb
push
mov
in
mov
out
dec
addr16
aas
mov
push
pop
and
fiadds
sarl
hlt
dec
push
pop
adcb
or
test
jnp
inc
lea
pop
push
cmp
adc
or
jp
push
mov
insb
test
out
xor
xchg
mov
in
roll
aaa
pop
sub
xrelease
outsb
das
and
scas
xchg
cmp
mov
mov
mov
or
jg
bound
fldl
cmp
xlat
icebp
insl
mov
and
jge
aaa
mov
xor
inc
call
mov
mov
sbb
repnz
aas
pop
pop
mov
call
mul
cmp
cli
mov
jg
or
xchg
xchg
je
cli
sbb
lea
jno
test
loop
mov
adc
mov
dec
rcll
in
cmp
inc
shrl
rclb
cmpl
lcall
inc
jl
mov
aad
sbb
mov
adc
xchg
sbb
pop
xchg
inc
lods
pop
jp
inc
push
and
aaa
out
push
jno
out
and
out
and
pusha
inc
adcl
pop
pushf
sbb
into
and
fisubrs
add
imul
lods
das
jae
sub
adc
mov
daa
or
mov
les
aam
add
sub
cmp
pusha
cmp
lds
xchg
jecxz
faddp
test
in
cmpsb
jg
xchg
out
lcall
or
inc
loope
dec
xlat
test
or
stos
repz
mov
out
push
mov
push
mov
stos
fsubrs
and
xchg
sahf
adc
dec
mov
push
xorl
lcall
es
mov
push
dec
pop
cmpsl
push
in
push
push
dec
xchg
or
insb
and
leave
push
outsl
arpl
shr
xor
add
sub
adc
lds
std
mov
mov
adc
push
scas
dec
push
call
jno
lds
jl
int3
cltd
sti
cmpb
pop
out
mov
xchg
xor
daa
das
and
push
mov
mov
fiaddl
push
scas
or
imul
dec
test
xor
fistpll
pushf
push
mov
fnstsw
jl
and
scas
and
dec
xchg
enter
test
enter
and
aam
jno
and
inc
xor
add
stc
outsb
push
aas
in
xor
lods
fisttpl
rclb
sub
cmp
pop
mov
push
fs
mov
out
dec
cmp
cwtl
ret
add
pop
sahf
inc
in
sub
mov
fisubrs
out
in
ret
adc
test
pop
adc
enter
jbe
sahf
push
inc
jnp
xchg
cmp
sbb
cmpsl
shll
pop
mov
sbb
adc
dec
out
pop
lea
or
mov
push
xor
icebp
mov
out
lcall
mov
lret
pop
jg
push
mov
dec
pop
mov
movsb
push
or
inc
testl
insl
mov
fwait
mov
xor
push
pop
subb
pop
sbb
cs
jmp
aas
mov
clc
or
and
pushf
mov
test
imul
xor
cmpsl
adc
cmp
mov
sbb
inc
mov
nop
into
push
mov
sbb
dec
sbb
test
or
les
aad
lds
in
mov
jbe
stos
mov
cmpsl
and
adc
cmc
add
sub
dec
hlt
out
jp
xchg
cmp
cmpb
xchg
xor
pop
sbb
adc
mov
movsb
pop
pop
add
xchg
dec
jge
xor
sbb
sbb
mov
mov
push
sub
sub
aam
stos
movsl
jg
jl
cmpsb
pop
push
decb
sbbb
popa
push
pop
ss
imul
mov
test
mov
sarb
push
sub
mov
cltd
loop
inc
popf
imul
add
out
fucom
sbb
sbb
and
notb
ljmp
xchg
stos
pop
push
or
fs
ss
pushf
or
pushf
lret
imul
and
pop
mov
jg
inc
rorl
cli
pop
mulb
xchg
inc
add
adc
int3
sbb
test
int
push
jg
in
mul
jno
and
pop
scas
jle
popf
sbb
jno
lahf
cli
sbb
sbb
lods
mov
jnp
lahf
pop
adc
icebp
call
daa
xlat
mov
and
cmp
xchg
xlat
nop
mov
lahf
sahf
inc
pushf
and
daa
jae
into
mov
cltd
dec
cmpsl
repnz
adc
sbb
add
dec
aam
cli
test
sbb
xor
lahf
mov
jg
stos
outsb
adc
lahf
mov
sbb
xchg
fsubs
pop
imul
mov
jl
adc
mov
sub
scas
pop
sarb
outsb
mov
out
ss
push
inc
lods
fnsave
popf
test
jg
sbb
push
push
add
test
repz
mov
sub
adc
mov
sub
xchg
push
push
fdivrl
popf
cmp
or
adc
es
mov
jl
outsl
jp
addr16
xor
sub
repz
loopne
pop
xchg
out
cmpb
mov
push
cwtl
sbb
xor
scas
and
inc
out
cmpsl
aas
sbbb
sbb
cmp
pop
cmp
std
jo
in
aas
scas
dec
mov
pop
and
inc
cmp
push
hlt
cwtl
inc
dec
icebp
fsubp
dec
push
add
jl
sub
xor
lds
testb
ss
push
and
ret
gs
cs
and
cmp
sarb
ds
cli
cmc
jg
jnp
add
xor
push
cmpsl
jl
stc
insl
subb
into
mov
cmp
sub
ficomps
out
pop
pop
or
jo
subb
push
inc
cmp
test
aaa
fiadds
or
cmp
testb
in
movl
jge
in
dec
jmp
sub
cs
ret
testb
out
jl
mov
and
xchg
addr16
test
pop
pushf
clc
hlt
shll
and
hlt
ljmp
mov
cltd
test
xchg
pop
sbb
push
and
insl
xlat
mov
xor
loopne
xchg
xchg
xchg
cld
lods
test
leave
adc
pop
mov
stos
jno
out
cmpsb
scas
mov
sub
dec
nop
inc
ja
mov
stos
pushf
inc
pushf
push
and
test
outsb
lea
rorb
dec
lret
insl
outsl
cmp
mov
cwtl
outsl
inc
cmp
fidivs
xchg
xchg
scas
add
imul
cltd
and
icebp
sub
mov
mov
push
mov
popf
pop
jne
sub
or
insb
movsl
imul
inc
mov
psllq
xor
cld
stos
or
jne
cmpsb
outsl
add
add
sbb
push
jne
add
add
pop
jbe
cld
ffreep
loop
xor
push
frstor
push
dec
sbb
es
add
into
aas
xlat
push
add
lock
bound
ficoml
clc
cmpsb
rcrb
outsb
aaa
xchg
sbb
push
test
or
pusha
dec
and
push
movsb
mov
popf
enter
xor
ret
jb
std
add
and
mov
or
lcall
sub
pop
shrl
push
rcll
and
mov
test
pop
sbb
xlat
xor
cmp
ret
lcall
or
or
fiadds
repz
jbe
fldt
addr16
dec
out
dec
mov
es
jbe
inc
mov
sbb
push
fidivl
test
packssdw
ds
xor
out
gs
pop
insl
xchg
dec
mov
stos
jmp
cmp
inc
jns
cmp
and
add
rcrl
fcomps
jne
andl
dec
add
hlt
cmc
xor
jno
or
mov
pop
add
outsb
mov
xchg
test
mov
test
add
lahf
nop
test
or
push
and
push
adc
inc
mov
or
sub
add
xchg
mov
dec
sub
push
int3
cli
repnz
push
pop
insl
fcomps
adc
sub
xchg
xchg
outsl
mov
std
jns
addr16
push
adc
insb
pop
push
pop
sub
push
js
push
test
sarl
push
mov
add
ret
aad
in
jnp
mov
insl
pop
cmpsb
cmp
in
or
push
in
sub
adc
pop
pop
pop
cmp
movsl
lds
lahf
fistpl
test
push
fsubrs
xchg
dec
dec
push
mov
mov
jge
add
push
popf
pop
xchg
adc
mov
add
mov
pusha
jl
testl
mov
adc
add
fcmovne
jb
aaa
test
lock
cmc
sub
and
push
lahf
sbb
mov
int3
cmp
inc
push
push
mov
add
mov
mov
lea
sub
test
xchg
pop
sub
or
xor
add
ja
fcom
cli
jns
hlt
pop
xor
data16
outsl
int
cmp
mov
ret
xchg
fisubl
xor
inc
sahf
push
mov
push
mov
jnp
jmp
lret
xchg
sub
fwait
push
jnp
fimull
xchg
mov
jecxz
sbb
jecxz
lcall
mov
fldl
cmpl
out
in
adc
jmp
jp
loopne
push
data16
mov
sub
jno
in
sub
adc
test
jb
or
fwait
ret
push
out
adc
push
fstpt
xor
movsl
pop
sahf
imul
mov
fsubrp
xor
push
mov
pop
jns
adc
inc
mov
sarl
mov
test
ret
out
cmc
mov
jno
arpl
sbb
aas
lods
insb
push
mov
pop
lea
inc
sub
bound
push
imul
adc
mov
mov
jbe
cmp
cmpsl
ds
ja
sub
aam
push
mov
cmp
loopnew
stos
fimull
scas
jle
adc
add
push
mov
mov
movsb
adc
pop
flds
ret
mov
lret
jp
decb
sub
lret
mov
int3
outsl
push
mov
fstps
xchg
mov
xchg
add
hlt
test
inc
scas
inc
lock
shrl
or
fistpl
sub
das
fs
and
test
in
cs
sub
lea
xor
das
jl
fsub
jl
in
sbb
add
sub
and
loopne
xlat
call
xlat
xchg
imul
insb
rcr
cmp
in
add
mov
push
sub
xor
xchg
in
xor
pop
jne
and
mov
js
or
pop
inc
sbbb
test
popa
pop
jmp
inc
jmp
jmp
sbbb
lds
movsl
insb
or
jns
add
popa
xchg
mov
cmp
push
lds
jae
leave
mov
adc
sahf
scas
xchg
mov
jae
sbb
mov
int
mov
movsb
clc
fildll
jmp
inc
mov
int
pushf
ja
js
adc
je
dec
decl
out
addr16
dec
repz
aaa
mov
xlat
pop
jne
insb
fisttpl
jo
and
outsb
mov
gs
into
pop
push
adc
cmp
out
mov
sub
imul
and
dec
mov
stos
jl
mov
nop
add
js
lret
mov
incb
sahf
xchg
mov
sahf
mov
arpl
fwait
insb
pop
pop
mov
pop
push
jp
adc
dec
jp
dec
movsl
fcompl
xchg
and
xchg
insl
inc
lds
pop
xor
xchg
into
xchg
mov
pop
push
push
je
sub
sti
lahf
dec
jbe
and
cli
push
pusha
jno
jo
push
fs
push
lahf
mov
lret
xchg
jge
inc
jo
inc
nop
mov
jecxz
push
insl
sub
push
jns
jo
push
in
jp
adc
mov
pop
loope
add
adc
cmc
jns
mov
dec
enter
roll
rolb
and
into
data16
pop
sbb
dec
fadds
popa
mov
test
push
loopne
idivb
and
stos
adc
cmpsb
test
dec
jo
dec
lret
sbb
out
sbb
mov
cmc
jle
sbb
mov
xor
add
inc
mov
cmpsl
outsl
scas
lret
loopne
out
and
mov
sub
std
andb
xor
iret
mov
scas
das
dec
loope
pushf
movsb
sbb
add
aam
enter
call
jns
rcr
or
lods
adc
and
adc
adc
out
push
outsl
rorb
in
idivb
inc
fdivl
mov
xor
loopne
cmp
gs
sar
roll
xchg
cmc
mov
push
rolb
cmp
xchg
adc
push
add
stos
mov
or
test
push
xor
add
dec
mov
or
push
jmp
sbbl
mov
or
aas
jnp
testl
and
jg
jb
data16
adc
add
cmp
ja
nop
sbb
in
stc
into
jge
xlat
enter
mov
xor
test
jl
into
loop
or
incb
loopne
rorb
mov
nop
mov
dec
cmpsl
sbb
outsl
jo
cltd
insb
pop
inc
jmp
jg
mov
fnstcw
inc
aas
cmp
hlt
or
or
or
ret
addb
xchg
adc
out
fs
out
loopne
push
test
hlt
mov
das
jge
mov
daa
sub
mov
gs
pop
testb
xchg
add
add
mov
roll
jo
rolb
or
rclb
mov
adc
adc
icebp
iret
xchg
xchg
pusha
jl
xchg
pop
adc
decl
push
push
sub
jmp
fwait
mov
xor
stc
hlt
jns
lods
outsl
jo
int3
jno
imul
or
push
rclb
std
mov
sar
jg
sub
addr16
addr16
cmp
cmp
test
add
lock
pop
test
fldcw
leave
jno
test
dec
filds
dec
rorb
jnp
ja
bound
sbb
pushf
mov
fcmove
andl
ds
jne
mov
nop
push
sarb
test
cmc
test
jae
hlt
shr
or
filds
jp
shl
sbb
data16
jle
mov
jbe
dec
ss
gs
inc
shl
js
or
js
stos
pop
mov
sahf
rcrl
push
mov
cli
test
or
js
or
push
push
icebp
repz
jb
fxch
rol
push
cmpsl
inc
dec
nop
pop
dec
ds
ret
xor
pop
and
in
wbinvd
ds
and
std
movsl
je
inc
push
mov
and
sbb
dec
sub
lock
lods
movzbl
enter
fwait
pushf
sub
adc
ja
test
repnz
push
fs
mov
bound
ret
cmp
shrl
mov
je
ja
leave
cmpsl
xchg
rcl
push
das
lahf
cmp
mov
lahf
pop
ret
mov
fdivs
jnp
fildll
inc
enter
aas
dec
lods
sub
cmp
data16
cli
cli
and
in
cs
mov
sbb
push
int
pusha
pop
pop
cmpsb
adc
xor
dec
jno
adc
add
pop
stos
inc
mov
pop
call
jbe
fisttpl
xor
int3
fs
jno
popa
pop
dec
jl
testl
jecxz
xchg
mov
push
mov
in
inc
push
jbe
cmp
sub
aaa
cmpl
gs
sti
loope
jle
adc
cs
rorb
sahf
aaa
inc
xor
jl
pop
pushf
jl
jo
stos
push
mov
jg
clc
xlat
popa
push
cmpb
loop
cltd
mov
dec
pop
mulb
out
bound
inc
push
sbb
add
loopne
ds
rclb
sbb
ja
push
subb
test
or
les
test
es
pop
pushf
jmp
ljmp
xchg
xorl
bound
mov
movsb
fcmovne
pusha
sti
jle
out
loop
pop
inc
sub
push
pushf
mov
adc
rorb
dec
mov
rolb
add
or
xchg
xlat
xchg
jns
inc
call
hlt
and
leave
out
push
push
jnp
imull
mov
out
rcrl
je
leave
xor
dec
popf
mov
sbb
aam
jl
pusha
mov
push
xor
push
xor
lods
out
aaa
unpckhps
mov
dec
es
cli
cmp
stc
mov
mov
loopne,pn
dec
fisubs
jge
loope
adc
pop
dec
out
pop
inc
std
mov
test
mov
hlt
call
and
fcoms
je
das
mov
nop
push
ret
sbb
push
push
mov
cmp
sbb
in
xor
xor
jae
stos
fbstp
or
ret
mov
and
out
outsb
lods
xor
mov
xor
ja
adc
xchg
inc
gs
enter
adc
bswap
repz
push
mov
cmp
and
or
push
fdivs
fbld
cmp
jle
loopne
dec
pop
pop
rcrb
cwtl
sub
ret
fs
mov
je
mov
loop
int
xor
das
cwtl
test
es
enter
mov
iret
xor
ficoml
mov
jb
pop
repnz
dec
mov
fisubs
pusha
insl
adc
jmp
cmp
mov
hlt
xor
cmpsb
and
cmc
pop
jns
rcrl
xchg
dec
rolb
cli
stc
nop
sub
mov
fsubrs
pop
orb
lahf
add
mov
sub
rclb
in
imul
sbb
push
mov
pop
adc
xchg
test
sbb
das
inc
cmpsl
pusha
push
flds
mov
sub
add
sub
jb
cmpsl
aas
aaa
sbb
in
mov
xchg
jge
adcb
out
pusha
in
icebp
movsl
mov
ror
xor
loop
jl
lahf
vmwrite
mov
test
or
call
mov
fcoml
les
and
stos
insl
inc
push
jno
idiv
nop
or
addb
pop
in
addr16
pop
shll
sbb
aam
xor
fcomps
jge
scas
ret
outsb
adc
aas
movsb
mov
popf
add
pop
cmpl
into
adc
mov
hlt
fisubs
das
aam
lcall
insb
and
popf
jnp
nop
outsl
sbb
push
and
mov
pop
mov
mov
sub
stc
jle
mov
mov
dec
pop
stos
push
mov
add
stc
out
out
mov
movsb
jae
pop
call
add
ret
pop
mov
adc
push
icebp
add
insl
add
sub
lds
inc
mov
xor
scas
mov
mov
mov
fisubrs
jmp
xor
pop
test
fs
mov
sti
fwait
stos
mov
icebp
in
inc
aas
ja
push
or
fistps
dec
lea
dec
mov
test
and
xchg
pop
in
jg
aaa
js
test
gs
das
out
cmpb
repnz
jbe
loop
das
les
sbb
hlt
xor
cmpsb
push
lcall
or
mov
stos
jo
jmp
mov
lods
add
inc
jae
and
inc
iret
and
arpl
sahf
mov
aas
pop
or
xchg
mov
cmpsl
sub
xchg
mov
xor
and
mov
aaa
dec
popf
popa
cwtl
cmp
loope
aas
ds
sub
pop
js
lods
mov
jnp
add
xchg
pop
jo
popf
test
jb
pop
push
ret
repz
xchg
and
lret
jne
mov
pusha
or
fwait
or
xor
and
movsb
xor
shll
xor
jb
bound
cltd
outsb
lock
loopne
mov
das
or
mov
mov
dec
out
lahf
repz
or
filds
in
aad
nop
push
cmpsl
mov
lock
push
sarl
pop
add
xchg
adc
add
pop
insl
test
mov
rolb
mov
mov
push
daa
jo
bound
xor
aam
cmp
inc
add
and
cltd
add
pop
fwait
adc
xchg
es
cs
pop
jg
sbb
in
mov
shr
jl
xor
orl
dec
mov
bound
stos
or
sbb
les
fs
dec
sbb
adcl
test
inc
hlt
vpand
flds
idivl
push
push
shll
mov
aam
inc
ror
mov
mov
dec
lea
sbb
push
leave
call
out
dec
ja
dec
cwtl
movsl
or
test
jo
into
cli
jnp
mov
dec
mov
ljmp
inc
scas
jae
mov
push
scas
add
xor
mov
cmp
loopne
add
jo
ja
xchg
cmp
cs
fidivl
xchg
lea
ljmp
ror
sub
fdivrs
xlat
and
push
jb
int
daa
sti
xchg
pop
mov
mov
push
mov
lds
adc
fnstcw
bound
faddp
or
xor
xchg
dec
inc
mov
push
sbb
xchg
jmp
fucomp
enter
frstor
sbb
xchg
sbb
xor
inc
dec
dec
or
shl
mov
mov
fidivs
scas
push
sbb
and
push
dec
fmul
push
dec
in
inc
add
sahf
call
ljmp
jmp
popa
fcomip
jne
jl
aam
les
adc
fs
jmp
out
jne
mov
dec
xorl
xchg
cmpl
inc
mov
or
mov
adc
leave
call
mov
mov
dec
mov
pop
sti
scas
fs
out
and
pop
aad
inc
cmp
out
test
pushf
mov
pop
jecxz
and
dec
dec
push
push
fisttpl
add
sub
fwait
ja
xor
sbb
iret
js
outsb
ret
mov
or
and
fcmovne
pop
popa
out
pop
rcrb
push
mov
addb
add
mov
and
fwait
lahf
test
add
cmp
cld
hlt
sahf
pop
fnsave
mov
loopne
xor
pusha
xchg
sbb
pop
adc
lock
add
pop
bound
fwait
xor
leave
mov
mov
adc
rolb
in
loop
jo
pop
mov
mov
mov
pop
gs
int3
pop
fsubs
add
jge
pop
and
popf
push
orb
mov
xor
fistpl
stos
cmp
jecxz
ficompl
fpatan
adc
movsl
cmp
dec
ja
repz
pushf
fwait
shll
jbe
sub
add
push
and
aaa
jnp
iret
push
and
fstpl
shl
adcl
push
and
shll
sbb
sub
cmp
in
out
sub
ss
fcoml
push
or
cmp
adc
daa
iret
sbb
addr16
push
pop
int3
push
mov
loope
testl
fldt
hlt
cmp
gs
lcall
lock
flds
mov
or
jl
je
bound
mov
push
pop
sbb
fsubs
rcrb
add
test
bound
pop
cmp
divb
inc
outsl
mov
aad
add
inc
xchg
aas
dec
fstpl
adc
jp
lods
movsl
sarb
pop
sti
pmulhuw
fstpt
pop
pusha
movsl
ds
pop
xchg
push
xor
sbb
mov
out
pop
aad
pop
js
sub
xlat
popa
jbe
mov
inc
lret
inc
adc
mov
push
mov
cmp
cmp
xchg
sub
or
adc
jg
push
dec
sbb
add
cmp
adc
shll
push
mov
xchg
dec
add
inc
ds
sti
mov
daa
mov
and
sbb
bound
jmp
les
cmp
xor
ret
adc
sub
fwait
cwtl
sahf
lods
repnz
hlt
adc
test
and
jnp
adc
std
andb
and
pop
outsl
into
das
daa
daa
or
add
je
scas
arpl
sbb
shll
leave
jno
jmp
js
jns
mov
or
mov
outsb
js
scas
out
xchg
or
je
dec
adc
jae
add
jl
push
adcl
fxam
ret
add
lods
mov
adc
xchg
push
or
stos
imul
fisubl
cmpsb
repz
dec
iret
fstl
ret
cmc
or
mov
rol
jno
cmp
pusha
test
xlat
mov
call
push
mov
nop
mov
dec
fimuls
mov
sub
shll
adc
test
push
sub
stc
inc
xor
popa
sub
sbb
aaa
ret
frstor
push
out
repnz
test
addb
test
outsl
mov
inc
sub
dec
fsub
sbb
xor
pop
dec
jecxz
jnp
sub
nop
int3
add
inc
loope
xchg
adc
ds
mov
fists
sbb
cli
testl
and
jmp
aam
dec
add
mov
inc
aaa
or
push
movsl
pushf
int
mov
xor
les
pop
xor
outsb
mov
repz
in
movsb
dec
mov
and
je
imul
ja
orl
fs
push
fstpt
fs
rclb
dec
jp
out
jnp
mov
jbe
push
leave
mov
inc
retw
imull
into
push
pop
xor
mov
pop
outsb
sahf
jg
jne
add
scas
lret
dec
ja
mov
cmp
and
scas
inc
sbb
cmc
pop
jmp
jge
hlt
ljmp
cmp
pop
mov
mov
jg
jb
addb
and
fmull
or
mov
push
mov
leave
jns
in
aas
mov
test
and
adc
pop
and
xor
icebp
xor
movsl
cmpsl
out
int3
in
cmp
cld
movsl
jns
push
rcll
jl
and
loop
xor
out
mull
push
inc
sti
cmc
shlb
sub
and
scas
and
sbb
imul
and
inc
call
add
lahf
outsb
cmc
add
in
jp
jae
mov
or
ret
test
sub
stos
jge
and
mov
dec
repnz
shl
xchg
arpl
adc
xor
mov
scas
pop
push
jl
out
mov
push
mul
test
xchg
hlt
adcb
adc
mov
jge
jp
dec
sahf
jle
add
aad
mov
outsl
sarb
jg
mov
pop
lds
push
or
sahf
call
jp
mov
jne
adc
mov
insl
movsl
pop
std
mov
adc
pop
scas
call
sbb
test
sarb
mull
cmp
sub
sub
mov
adc
out
mov
aaa
into
notb
push
dec
cmp
ja
pop
adcl
sbb
scas
insb
push
xchg
les
dec
bound
sub
das
jnp
ret
pop
insb
sarl
inc
imul
sbb
add
jle
mov
shlb
push
add
cmp
mov
pop
sahf
insb
outsb
fidivrl
mov
xchg
popa
in
js
loop
xlat
sbb
mov
jnp
xchg
lcall
ja
lods
pop
mov
mov
or
mov
scas
adc
dec
fldt
jne
fnstcw
repz
outsb
sarl
stos
mov
lea
iret
movsb
inc
scas
xchg
stos
dec
dec
ficoms
dec
push
xchg
jb
add
xor
les
lods
or
mov
cmp
movsb
push
push
shrb
lcall
int
pop
jae,pt
adc
fwait
lcall
xchg
cmp
into
sar
sub
repnz
cli
sbb
and
pop
add
inc
jecxz
cmp
pop
adc
clc
jae
repnz
ss
ds
popf
leave
test
mov
imul
mov
pop
roll
movsb
mov
lahf
inc
iret
adc
jno
cmp
decl
std
adc
iret
into
add
cltd
pop
imul
add
movswl
jecxz
dec
jns
inc
jle
imul
lcall
mov
sub
add
xor
push
add
add
adc
outsl
js
in
mov
repz
push
push
push
sub
lret
xor
lds
adc
clc
mov
dec
pop
testb
push
movsl
dec
movsb
mov
lds
pop
dec
enter
loopne
cwtl
andb
int3
lret
gs
es
pop
pop
sub
pop
das
lods
notl
jmp
lcall
pop
dec
mov
xchg
mov
push
fstpt
inc
addr16
lret
add
inc
sbb
inc
mov
push
jbe
pop
rcr
push
dec
sbb
xlat
mov
inc
das
popf
sbb
mov
or
xchg
in
negl
push
xor
test
out
cwtl
dec
test
sbb
sub
loopne
gs
adc
xor
sub
loopne
hlt
stos
js
mov
mov
and
mov
and
xor
lods
sub
in
push
sti
lods
mov
xchg
test
or
xchg
push
arpl
data16
imul
insl
mov
push
sbb
jb
xor
pop
fs
and
pop
jmp
lahf
mov
loopew
pusha
jb
in
sarb
call
dec
mov
loope
mov
mov
call
imul
mov
xchg
in
loop
cs
out
test
shr
andb
pop
sub
das
ret
cltd
js
int
dec
add
in
push
das
and
lcall
add
movsb
mov
pop
je
ret
loopne
push
mov
mov
or
data16
add
push
mov
imul
outsb
dec
dec
pop
dec
mov
adc
out
jecxz
mov
mov
popa
or
test
push
aad
out
mov
add
mov
sub
pushf
mov
pop
and
mov
fmull
inc
inc
shll
dec
xor
push
ljmp
xlat
ds
xchg
loopne
sbb
in
sbb
cli
or
dec
fisubrl
ss
scas
dec
adc
dec
lahf
pop
xchg
xor
push
xchg
xchg
or
testb
push
daa
pushf
rcll
cwtl
cmc
push
popa
pop
push
add
lods
dec
and
mov
lock
sub
inc
xor
sub
loop
test
daa
mov
jle
sub
popa
or
testl
mov
inc
rcr
add
adc
mov
rcll
pop
outsl
xor
lds
sbb
add
pop
out
pop
loop
ds
mov
sbb
outsb
or
iret
and
jl
arpl
push
cmp
iret
mov
xor
test
das
or
aad
outsl
inc
sub
icebp
dec
fdivrl
sbb
jle
jecxz
pop
push
inc
stos
and
pop
mov
shr
mov
cld
insl
adc
jo
inc
les
sub
pushf
lods
mov
pop
cmpsb
or
or
mov
push
pop
repnz
stc
decl
popa
fdivs
sub
push
mov
xchg
cli
mov
jno
ret
fcmovbe
xchg
jge
leave
lret
out
cmp
out
fiaddl
addr16
nop
and
int3
push
xchg
dec
dec
add
popf
xchg
mov
jecxz
mov
add
add
pop
test
bound
pop
cmpl
xor
mov
sbb
aas
add
insl
jl
xor
push
aam
xchg
sub
lahf
adc
cmovbe
lods
or
rcll
mov
fdivr
push
inc
dec
mov
mov
mov
aam
test
lahf
dec
push
adc
cmp
sbb
mov
ficoml
or
jns
icebp
clc
iret
dec
jmp
inc
movsl
jmp
cld
add
cmpsl
orb
xor
inc
add
xor
mov
mov
lock
rcrb
scas
xor
cwtl
das
jmp
xchg
or
jp
pop
jle
gs
repz
roll
outsl
aad
dec
or
dec
pop
cmp
pop
mov
sarb
sbb
in
sbb
aaa
ret
xchg
lret
push
xchg
push
adc
sbb
je
out
ljmp
inc
mov
sub
enter
dec
popw
cmp
jne
mov
lahf
out
jle
or
scas
dec
in
sbb
mov
mov
xorl
mov
rorl
mov
ss
imul
or
mov
cmc
lods
bndldx
xlat
outsb
push
frstor
sub
push
or
push
add
orl
out
pop
test
jmp
or
mov
movsl
jle
inc
mov
aam
cmp
sub
stc
out
mov
bound
push
jg
das
cmp
and
or
mov
loop
int3
das
push
push
jae
mov
dec
mov
jo
stos
addl
sbb
jbe
cmp
jne
push
and
dec
sub
movsl
negl
sbb
dec
xchg
out
ss
les
or
mov
mov
mov
sbb
jg
pushf
mov
sbb
dec
repnz
inc
adc
mov
inc
and
adcb
push
or
aas
dec
lock
aas
into
mov
mov
inc
jge,pt
push
cmp
push
daa
dec
shll
dec
sub
fstp
fcmove
nop
jecxz
in
jmp
hlt
sub
push
dec
data16
jne
mov
leave
stos
mov
xchg
lret
sarl
sub
sbb
jno
pop
outsb
ss
outsb
cmp
cltd
mov
je
nop
mov
cmp
daa
loopne
daa
cld
leave
scas
push
adc
out
call
ja
popl
jp
cmc
cmp
mov
and
lret
out
jns
insb
dec
into
cld
jmp
test
out
mov
jmp
test
fistpll
outsb
int
or
mov
push
iret
cmc
mov
mov
mov
push
mov
jb
js
shll
adc
push
loopne
out
dec
push
mov
mov
pop
sysexit
mulb
shll
out
fadds
int3
imul
test
jo
hlt
jle
fmuls
daa
das
add
daa
jbe
mov
je
xchg
jge
clc
jmp
loop
xlat
int
stos
enter
imul
mov
dec
add
xor
rcrb
mov
lock
imul
rcl
sub
mov
mov
jmp
aam
cmpsb
and
mov
fld1
mov
inc
hlt
add
aad
mov
dec
je
jno
scas
inc
jo
insb
lock
lods
ljmp
sub
cmp
cs
fldenv
fildl
movsb
push
insl
gs
insb
mov
loopne
adc
xor
cmp
sbb
std
cmp
negb
pop
sub
inc
sbb
inc
inc
stos
popl
dec
lock
mov
dec
frstor
ja
lcall
mov
add
das
adc
push
mov
push
mov
repz
mov
cmp
ds
xor
enter
mov
lea
xchg
nop
test
pushf
pushf
push
icebp
or
pop
mov
sbb
scas
add
inc
or
or
add
jne
or
adcl
js
dec
fwait
cmp
and
dec
pop
data16
js
push
lods
mov
imul
imul
push
out
dec
mov
cmp
and
inc
movsb
jmp
in
xor
mov
pop
std
mov
andl
stos
nop
mov
sbb
push
adcb
jb
scas
inc
outsl
dec
std
sub
pop
test
push
mov
mov
dec
mov
mov
inc
out
orl
mov
shll
sub
mov
repnz
mov
or
and
dec
inc
dec
and
arpl
das
xor
aad
xor
shll
stc
mov
xchg
repnz
cmp
rcr
arpl
dec
and
sub
das
mov
and
and
rolb
inc
lock
scas
popf
std
sahf
mov
das
gs
test
icebp
aaa
iret
inc
lds
aas
or
push
dec
stos
xchg
xchg
lods
jo
mov
aaa
jae
nop
or
rcrb
mov
push
nop
sbb
je
pop
sbb
pushf
add
jmp
arpl
mov
es
jmp
in
stc
les
bound
and
shll
repz
mov
clc
out
daa
xor
cmp
nop
nop
cmp
jmp
aaa
xchg
fnstsw
pop
loop
sub
push
inc
xchg
push
test
cld
adc
mov
test
cmp
mov
cmc
mov
out
mov
mov
or
xor
jp
in
pushf
jle
xchg
cwtl
cltd
dec
fiaddl
or
rcll
inc
xrelease
mov
aad
add
das
ljmp
dec
lods
fists
jns
cld
pop
dec
in
int3
loopne
insl
pop
push
movsb
and
inc
scas
jl
push
jnp
aad
push
jp
fs
or
jl
and
pop
add
roll
in
xor
pop
jmp
xchg
sub
insl
mov
xor
jl
dec
xchg
cmpsb
mov
arpl
sarb
mov
jns
clc
jecxz
push
addb
repz
test
add
mov
add
add
aas
scas
push
adc
loop
cltd
mov
xlat
lcall
mov
sbb
dec
cmp
loop
out
aam
decl
outsl
and
bound
scas
mov
ficoml
mov
xlat
xor
pop
fimull
xchg
and
fimull
fstl
out
jmp
jg
sbb
in
test
add
add
stos
push
lret
dec
or
ret
pop
and
lahf
add
cwtl
out
lahf
sbb
xor
idivl
inc
gs
cld
fs
cmp
mov
pop
daa
repnz
push
in
sbb
xor
xchg
out
mov
movsb
add
adc
push
push
into
cli
repz
rorl
inc
fimuls
jns
jl
lcall
clc
cmp
sbb
inc
scas
sti
nop
fcmovnb
pop
fldt
imul
adc
xor
xlat
subl
push
adc
push
insl
or
jmp
fiadds
rol
in
int3
add
mov
popa
aas
dec
frstor
push
add
outsb
repnz
add
cmp
ss
icebp
stc
call
cmp
or
mov
mov
sbb
mov
push
insl
xor
pop
xchg
sbb
adc
add
cltd
mov
jle
fwait
out
pop
ja
add
cmp
mov
ljmp
iret
mov
lret
inc
or
imul
std
mov
mov
lods
dec
fildl
pop
xor
out
inc
jle
sti
pop
out
mov
and
push
outsb
sub
xor
ret
lcall
mov
test
lods
push
jp
xchg
stos
xor
push
mov
imul
jno
into
fwait
jns
repz
mov
push
das
js
daa
inc
xchg
fcmovnb
and
mov
mov
cmp
lahf
sahf
push
je
cmpsb
sub
jg
movsl
bound
sub
and
rolb
loop
push
mov
add
sti
sbb
in
mov
cmp
sbb
test
jb
xor
stos
int
into
in
push
inc
imul
scas
pop
daa
pop
xchg
fwait
in
cmp
inc
insl
das
sbb
cmp
jge
je
xlat
mov
xor
leave
push
out
mov
call
pop
movsb
shlb
aam
pop
add
mov
stc
cmpb
insl
dec
iret
jns
rol
or
ret
pusha
adc
into
add
int
xchg
jle
adc
outsl
xor
pop
adc
popf
mov
pop
mov
fwait
and
scas
stc
lcall
cwtl
popa
inc
fsub
into
int3
sub
les
sbb
pushl
and
add
andl
fs
push
stos
inc
popf
add
in
sbb
lahf
jg
sti
pop
xor
das
add
sbb
and
aaa
pop
cmc
jle
fsubr
lret
xchg
xchg
adc
pop
imul
xchg
dec
xor
cltd
xchg
xchg
int
sbb
cltd
icebp
mov
cmp
dec
aaa
scas
push
mov
shll
bound
jnp
loop
sub
lods
rcll
pop
pop
xchg
scas
mov
sub
ja
or
jae
outsb
hlt
lods
stc
int
daa
out
lods
sbb
cmp
loope
xchg
sbb
mov
arpl
loop
repz
ret
jl
mov
inc
xor
jge
xchg
cmp
mov
mov
es
je
in
sub
cmp
xchg
out
gs
mov
mov
rorl
out
jecxz
xchg
and
flds
roll
add
popf
pushf
stos
arpl
inc
xchg
repz
cmpb
in
arpl
notl
jle
out
mov
jo
shlb
movsb
push
out
sbbl
xor
movsb
ds
add
cmp
inc
lahf
test
imul
and
loopne
insb
mov
jbe
in
dec
adc
mov
sub
mov
mov
gs
out
xchg
aas
dec
mov
mov
imul
sarl
scas
popf
inc
icebp
pop
cmp
jne
pop
rcll
mov
cmc
data16
and
mov
ja
into
ljmp
test
lods
jno
movsb
out
mov
popa
xchg
sbb
sbb
mov
sub
and
cld
dec
jb
dec
vmwrite
adc
push
or
mov
mov
push
into
bound
daa
cmp
push
and
xor
sbb
inc
pop
fidivs
pop
sbb
mov
jns
dec
sahf
lods
fidivrs
jo
dec
mov
test
push
orb
cli
imul
xchg
sar
cmp
fwait
cmpsl
insb
out
sbb
ja
adc
icebp
sub
sub
into
xor
stos
dec
dec
cmp
cld
cmpsb
in
mov
insl
insl
jl
outsb
mov
ret
inc
and
adc
add
sbb
add
enter
dec
shl
icebp
xchg
sarl
ja
adc
inc
orb
mov
xchg
stos
inc
ret
or
push
pop
and
dec
and
jp
inc
std
mov
jbe
mov
or
add
jle
mov
insl
xlat
mov
dec
daa
xchg
pop
sar
cmpps
enter
shl
push
jg
inc
pop
lds
stos
dec
fprem
lcall
adc
cltd
aad
outsl
adc
loope
push
test
mov
mov
in
idivb
cmpsl
add
jle
pop
pop
jp
popf
push
mov
loope
dec
rolb
aas
hlt
push
mov
cmpsb
lods
shrb
jl
mov
adc
mov
fsubr
das
ljmp
dec
xchg
in
and
add
add
pop
adc
fisttpl
js
or
rcr
lea
insb
jns
push
push
in
lods
and
cmpsl
sub
arpl
xchg
mov
jp
jae
mov
sub
lods
mov
ds
lods
mov
ud1
negb
mov
pop
push
and
pop
adc
lds
out
jp
and
mov
and
and
adc
lock
shl
addr16
faddl
inc
xchg
push
imul
pop
mov
cmp
int
call
lods
aas
out
es
mov
rolb
xchg
inc
das
push
sbb
xchg
push
dec
cmp
stc
mov
inc
sbb
fcoml
mov
or
push
mull
jmp
cmpl
push
push
sbb
in
sbb
xor
push
pop
test
push
in
mov
rcrb
js
lods
in
xchg
pop
fildll
popa
jl
outsb
mov
pushl
roll
dec
arpl
mov
ret
and
adcb
cwtl
jb
insb
cmpsl
inc
data16
add
xchg
sbb
sub
cld
ret
je
sub
mov
pusha
xchg
enter
icebp
xor
addr16
in
inc
les
in
fs
xchg
leave
jl
adc
imul
stos
fstpl
popf
sbb
rcrb
in
jne
mov
sub
in
pusha
jnp
pop
shll
outsb
lods
gs
mov
shrl
adc
inc
or
jl
loopne
push
mov
xchg
pop
push
sbb
je
clc
ss
ljmp
jne
testb
cmp
and
cli
or
xor
or
cmp
xchg
loope
popa
and
orb
fsts
xchg
mov
arpl
mov
es
imul
call
test
jnp
push
or
test
adc
adc
or
fimuls
or
jp
hlt
xor
adc
shrb
push
testb
mov
pop
mov
add
jp
fidivrs
nop
test
aaa
lds
mov
jae
cs
jns
data16
scas
mov
lahf
ss
repz
mov
out
stos
int
lock
jae
out
mov
sub
xor
cwtl
loopne
rcrl
jb
xor
dec
push
fsub
aas
or
pop
xor
mov
pop
shll
scas
fistl
dec
or
xor
lea
cltd
loope
mov
or
daa
nop
cli
shrl
dec
hlt
in
push
imul
decl
sub
sub
movsl
jo
or
hlt
cld
loope
xor
jae
out
cli
ss
or
rcrl
mov
or
inc
fmull
dec
fcomip
add
pusha
test
divb
js
sub
dec
ljmp
int
fs
mov
movsb
pop
std
clc
int3
and
mov
mov
cld
dec
xchg
push
and
jmp
addb
xlat
movsl
cmpsl
inc
stos
mov
dec
daa
sub
fstpl
jl
cmp
mov
mov
lock
sbb
push
aam
frstor
jle
lds
pop
pushf
fisttpll
outsb
fs
and
adcb
ret
rorl
lret
cmp
xor
insl
dec
adc
cmp
lret
jg
mov
lret
es
push
repz
xlat
idivl
ret
dec
push
cmp
ja
stc
ror
int3
inc
cmp
or
add
out
mov
gs
inc
mov
inc
das
fcoml
dec
sub
push
mov
mov
ret
loop
pop
jne
ret
or
adc
jo
add
add
push
xchg
pushf
call
dec
sub
jl
inc
iret
xchg
add
mov
fisubs
add
push
mov
mov
jmp
into
stos
inc
dec
mov
sbb
cmpsl
and
and
out
mov
rcrb
in
and
inc
ret
or
mov
sub
dec
subb
rclb
sub
xor
mov
jmp
add
imul
cmp
aaa
scas
or
or
inc
xchg
cmp
mov
pop
movsl
xor
pusha
sbb
icebp
out
fwait
mov
pop
popa
add
sub
mov
adc
cli
mov
test
mov
jle
sub
fwait
stc
add
fxch
inc
sbb
fmul
mov
mov
js
inc
testb
je
pop
cmp
fiaddl
mov
or
lods
call
cmc
ja
cmpsl
call
clc
roll
lods
xor
and
cwtl
hlt
loop
js
pop
scas
cs
sarl
lds
stos
mov
pushf
xor
sahf
stc
sbb
jp
sbb
pop
xchg
xchg
scas
dec
test
xorl
sub
ret
adc
icebp
sbb
lahf
mov
pusha
mov
sbb
lds
das
in
jae
cmp
pop
jmp
fwait
daa
xorl
ss
and
pop
loop
pop
pop
mov
ret
push
push
sub
xlat
lret
mov
pop
push
jecxz
outsb
cmp
lea
sbb
mov
push
add
push
lcall
gs
add
mov
mov
jecxz
rcll
test
xor
ds
pop
sub
mov
lret
xchg
or
adc
test
ds
dec
imul
jo
rol
xor
xchg
dec
popf
jmp
inc
mov
mov
pop
mov
loop
in
dec
mov
jb
push
pop
cli
cs
icebp
das
sub
adc
mov
push
cmpsb
jle
aaa
shrb
int
push
in
loop,pt
cwtl
je
sbbb
pop
pop
add
dec
lcall
cmpsl
mov
loop
imul
jne
inc
imul
sbb
ficompl
xlat
pop
in
bound
test
dec
cltd
movsb
fnstsw
out
pop
ret
or
sub
cmp
jae
cld
mov
popf
sti
cmp
icebp
cmp
mov
ds
aas
sub
les
adc
xchg
sub
fsubl
scas
pop
adc
icebp
mov
sbb
cmp
sahf
cmp
in
pop
in
jg
aad
mov
and
sub
fcmovnb
cmpsb
or
iret
adc
jns
adc
int3
sti
xchg
les
call
push
cmp
xchg
shll
or
cs
push
mov
adc
cld
mov
adc
add
adc
js
cwtl
sub
inc
mov
stos
in
dec
sub
sbb
inc
fcmovnb
stos
jns
in
insl
test
push
cld
xchg
sub
inc
inc
pop
inc
xchg
out
loope
push
jne
xchg
mov
call
cmp
cmpsl
cmpsl
sbb
xchg
and
pop
popa
jo
sub
mov
iret
inc
sbb
cmp
out
xchg
jl
jle
aaa
jge
data16
xlat
push
push
addr16
lcall
outsl
jge
cmpsl
outsb
aam
nop
cmp
mov
xchg
jbe
mov
fmull
cltd
leave
add
adc
and
in
mov
fnsetpm(287
or
pop
outsb
popf
incb
jns
fcmove
rol
adc
jne
adc
jb
outsb
mov
fs
gs
cmp
lds
mov
in
std
jbe
lods
les
cmp
pushf
mov
or
dec
xchg
push
sti
mov
iret
adc
sub
pop
mov
mov
dec
push
cmp
sbb
enter
mov
or
mov
mov
shll
mov
sbb
mov
arpl
push
or
inc
push
jb
jp
push
iret
jno
aaa
cli
fbld
adc
es
scas
add
aam
inc
subl
or
sbbl
test
aad
mov
enter
rorl
scas
insl
inc
aaa
es
je
mov
sar
xchg
sbb
dec
mov
inc
adc
sahf
xchg
mov
inc
or
add
mov
add
and
and
pop
mulb
ss
xor
mov
pop
push
add
sahf
or
xor
test
jne
cmp
push
sub
mov
aaa
or
loope
push
push
jae
mov
xchg
push
push
and
ror
stos
push
in
inc
arpl
or
sahf
outsb
insb
andl
or
clc
xor
scas
fwait
xchg
iret
sbb
add
cmpsl
pop
cmp
stos
test
into
and
fildl
push
popa
sqrtps
or
mov
lods
pop
test
dec
and
rcl
testl
mov
call
fdivs
cmp
add
pop
or
decl
outsb
jle
add
loopne
inc
movsb
aaa
dec
xchg
sbb
rclb
rcll
mov
addr16
shll
dec
jle
sbb
inc
push
sbb
and
orl
pop
or
add
mov
mov
rcl
and
push
adc
insl
popa
fwait
or
mov
ficomps
lds
popf
stc
xor
cmp
jb
mov
iret
cmp
push
and
inc
leave
add
gs
loop
push
xchg
dec
in
ja
and
push
lret
rclb
or
outsl
push
xchg
dec
aad
xchg
adc
mov
shrb
pop
mov
inc
sbb
cmpsb
mov
xchg
push
lock
cmpsw
in
mov
inc
jb
loopne
jae
push
mov
or
jle
cmpsl
lods
leave
es
fwait
fwait
int3
dec
and
lods
rorl
lret
jbe
addb
ret
cmp
jp
ljmp
arpl
mov
pusha
dec
out
push
fdiv
cmpsl
out
gs
lret
scas
aas
or
outsb
movlps
mov
std
fldl
shlb
sbb
add
enter
rcrl
pop
add
xor
or
sub
sti
loopne
out
sub
cmp
popf
jns
outsb
popf
pop
mov
stos
dec
outsb
jne
inc
aas
ret
mov
mov
addr16
inc
dec
mov
lods
repnz
or
sbb
jp
cmp
das
jo
add
int
ja
icebp
ss
call
cld
mov
js
fcos
lahf
adc
scas
inc
filds
pop
icebp
shll
jae
adc
inc
outsl
mov
jg
mov
cmc
shr
es
dec
mov
in
aad
cli
cmp
pop
cmp
div
enter
sub
xor
out
bound
cld
test
bound
xor
adc
adc
and
xchg
mov
add
add
jb
shl
mov
mov
dec
jne
loopne
xor
fistps
imul
dec
scas
rep
in
push
hlt
mov
clc
inc
pop
icebp
decb
test
dec
loop
jbe
pusha
dec
scas
into
push
jno,pt
int
jl
dec
lret
cltd
aad
mov
sub
gs
mov
clc
sub
enter
or
xor
lods
dec
or
mull
fwait
popa
dec
cmpsb
inc
icebp
shlb
lret
or
xchg
adc
dec
addr16
jl
aam
dec
pop
lds
pushf
insl
xchg
cmp
sbb
push
mov
jle
jle
or
insb
rolb
and
scas
imull
por
decl
jge
fildl
xlat
sbb
popa
cs
shlb
and
sbb
jbe
cmc
aaa
andb
scas
jl
in
fs
aad
pushf
mov
popa
hlt
push
shll
jecxz
mov
pushf
orb
pop
adcl
int
popaw
inc
icebp
cmpsl
int3
and
and
repz
add
lods
xlat
dec
push
mov
mov
push
xor
idiv
mov
jg
rol
dec
cmpsb
stc
bound
lock
into
dec
mov
pop
cmpsb
sbb
sti
std
test
mov
xlat
lods
test
test
sub
and
pushf
loope
shrl
test
or
loope
sti
mov
pop
mov
sbb
popf
jb
in
data16
push
addr16
xchg
cmp
or
sub
xchg
clc
aad
scas
pop
or
fstps
out
add
cltd
pop
in
mov
dec
ljmp
aad
aas
or
pop
cltd
sbb
lods
sbb
mov
sub
mov
sbb
and
flds
cli
sar
dec
xchg
push
scas
cmp
std
call
aam
je
aaa
sub
movsl
movsl
xlat
inc
out
stc
sbb
mov
xchg
mov
or
notl
dec
ljmp
insl
pop
push
dec
repnz
cmpb
add
outsb
or
dec
mov
sbb
fwait
outsb
cmp
jmp
std
ret
mov
test
and
aad
inc
or
fstpt
mov
add
and
lea
int3
in
adc
aas
into
sub
jnp
inc
shll
js
push
aam
test
stc
je
jmp
lock
shrl
mul
iret
in
addb
daa
bound
push
pop
loope
inc
rcrl
arpl
sarl
setno
cmp
add
ror
in
ficompl
and
inc
sub
cs
test
push
fmuls
mov
add
xor
loope
aaa
sbb
pop
outsb
add
add
sarl
insl
jns
mov
sbb
xor
or
mov
mov
mov
out
jo
and
xchg
popf
cmc
and
js
inc
pop
pop
or
sbb
aam
jnp
pushf
iret
inc
aas
adc
or
dec
clc
dec
push
mov
aas
jno
es
or
fdivs
cwtl
aas
subw
and
out
jns
gs
in
lea
mov
push
outsl
roll
pusha
sub
lock
fs
xor
addb
pushf
nop
out
pushf
inc
xor
sti
cmp
stos
mov
push
adc
inc
jns
pushf
insl
daa
xor
cmp
mov
iret
stos
test
popf
mov
adcl
mov
dec
int3
dec
jno
out
jmp
cwtl
pop
or
push
dec
cli
lret
pop
pop
push
popa
jns
cltd
out
stos
xor
scas
mov
ret
inc
stc
hlt
push
or
lods
cmp
cmpsl
stos
in
dec
in
mov
xor
fisubs
out
mov
adc
xlat
mov
inc
in
push
push
add
mov
loope
in
inc
dec
movsl
pushf
repnz
add
add
fildl
inc
xchg
mov
xchg
mov
das
bound
aas
test
andps
xchg
pop
pusha
push
aad
ficompl
add
lds
insb
mov
push
dec
scas
daa
add
mov
lret
pop
dec
inc
dec
mov
jl
inc
xchg
out
mov
jecxz
in
mov
int
sbb
lods
imul
pop
leave
outsb
ret
xor
pushf
pop
stos
jns
shlb
iret
fsubrs
xor
jo
adc
cmp
fcompl
test
insl
into
mov
sbbb
jns
push
out
mov
int
das
ret
mov
cltd
stc
push
loop
test
imul
and
movsb
arpl
dec
idiv
jns
add
xor
mov
mov
cmc
mov
mov
jle
jo
fcomps
in
mov
std
pop
pushf
lahf
dec
enter
mov
jo
insl
xchg
mov
adc
std
add
ret
adc
clc
out
push
add
pop
aam
call
and
int
in
lret
mov
cmp
and
jmp
mov
xchg
dec
sbb
push
shrl
aaa
in
mov
and
cmpsl
jg,pt
fistpl
add
iret
jmp
mov
dec
aad
dec
adc
push
sub
xlat
pop
mov
jmp
es
repnz
lahf
jecxz
xchg
outsb
mov
mov
lods
outsl
mov
pop
je
imul
repz
stc
fimull
les
cli
pop
sbb
dec
pusha
jmp
xchg
pop
nop
or
rorb
inc
shrb
mov
ds
outsl
loop
xor
daa
in
push
pop
arpl
sbb
push
jecxz
mov
out
or
or
fisubrl
lahf
scas
jae
insl
out
xorl
push
cmpl
in
mov
mov
out
and
jno
mov
inc
jmp
loopne
add
xor
pop
and
jl
mov
sub
cmp
or
adc
ret
outsl
push
dec
push
xchg
loope
push
sub
popf
jno
mov
sbb
jae
repz
inc
add
dec
jmp
mov
outsl
pop
pop
arpl
fidivrs
fnstcw
imul
and
pop
lods
adc
mov
cmp
aam
lods
sbb
lret
xchg
aad
xlat
clc
push
push
in
cs
inc
inc
cmpsb
stos
aaa
adc
ret
push
mov
pop
xor
jge
jecxz
insb
mov
int3
push
or
push
sbb
adc
cmp
push
orb
movsl
xchg
js
enter
or
ss
xor
pop
inc
es
xor
ret
jecxz
push
pop
cmp
inc
sub
outsb
sbb
or
xor
inc
test
add
pop
pop
iret
dec
aad
xorl
inc
lea
jno
sub
addl
jnp
pop
jle
xor
push
push
roll
or
clc
add
out
int3
mov
cli
test
daa
adc
sti
add
mov
ja
std
sub
stc
jb
pop
imul
gs
and
out
push
mov
cmc
out
pop
push
sub
hlt
mov
dec
xor
fidivl
pop
xchg
rcr
add
and
jb
std
adc
pop
dec
scas
mov
pop
add
xchg
cmpsl
jecxz
in
out
shlb
lret
add
sub
inc
push
insl
dec
xor
pop
adc
addb
inc
in
in
sub
out
add
xchg
nop
mov
aad
jne
icebp
jno
mov
mov
push
in
adc
test
pop
cmp
push
inc
rolb
lds
movsb
dec
push
adc
adc
ljmp
push
lods
icebp
cwtl
insb
inc
xchg
mov
jno
popa
cld
pop
stos
dec
pop
insl
fimuls
sub
clc
add
mov
push
into
mov
fdivrs
dec
sbb
xchg
imull
inc
loope
xchg
ret
cmpsl
mov
pop
mov
sbb
outsb
test
fnstcw
jnp
adc
leave
pusha
ds
inc
dec
and
movsl
xor
mov
xchg
fsubrl
jno
adc
jecxz
aas
sub
adc
clc
bound
mov
inc
push
mov
mov
outsl
and
andl
pop
ja
or
fstpl
cmpsl
jecxz
xchg
movsl
xchg
cmp
in
imul
mov
fwait
sub
cli
dec
ret
in
or
fs
adc
mov
sub
mov
movsl
pop
adc
xchg
inc
push
rcrl
repz
movsb
pusha
inc
int3
mov
inc
sub
in
lcall
and
add
mov
lods
insl
or
xor
fcmovb
adc
pop
les
mov
or
movsb
jbe
xchg
xchg
sub
out
arpl
test
pushf
pusha
sub
add
xor
mov
jmp
mov
push
mov
leave
dec
xchg
test
dec
test
scas
push
aam
lods
gs
aas
aas
push
test
or
dec
cltd
pushf
call
ja
imul
xchg
sahf
jecxz
cmpsl
or
xor
mov
cmp
and
mov
push
mov
inc
in
jmp
mov
and
jle
push
sub
sbb
stos
cli
xchg
adc
push
cmp
fbstp
repnz
inc
out
lret
dec
das
adc
enter
cs
mov
inc
mov
and
addb
je,pt
mov
fcompl
lds
mov
dec
out
pop
mov
sub
xchg
push
mov
ficoms
jmp
adc
clc
out
push
ljmp
leave
leave
adc
pushf
jp
cwtl
repnz
cli
lods
lret
arpl
hlt
orl
imull
dec
jecxz
dec
dec
lods
loop
add
pop
aam
pop
push
sbb
insb
push
fstp
repnz
sarl
lret
ljmp
icebp
adc
xchg
test
mov
loope
out
mov
mov
push
jge
jl
popf
or
inc
int
push
jae
hlt
gs
out
loop,pn
mov
wbinvd
adc
sub
dec
cld
std
cs
and
pop
dec
jae
mov
mov
mov
mov
aas
mov
xor
dec
pop
fdivrl
fsubrl
stos
idiv
ljmp
mov
and
jle
insl
sbb
pop
add
je
fisttpl
mov
mov
mov
xchg
pop
push
or
mov
sbb
sbb
lods
xchg
nop
gs
xlat
xchg
arpl
pop
pop
push
adc
jmp
sti
lods
pop
mov
inc
sarl
test
adc
pop
inc
rcrl
mov
and
pusha
cmp
inc
xchg
pop
push
xorb
rcrl
jne
in
and
push
jns
cmp
das
add
xchg
clc
outsb
and
lods
inc
andl
push
cmpsb
mov
loope
enter
inc
std
gs
cs
mov
clc
in
and
sub
pop
das
jae
mov
popf
inc
lahf
cmp
and
iret
mov
push
jmp
xchg
push
clc
inc
mov
push
cltd
add
clc
out
lea
rorb
cmp
mov
pushl
adc
sub
pop
jge
dec
jbe
add
mov
pop
sbb
imul
or
cmp
shr
fsubrl
aad
and
dec
in
rcl
rclb
in
push
loop
adc
mov
repnz
push
add
lods
std
mov
sbb
out
scas
push
test
sahf
lods
pop
sbbl
mov
test
add
sbb
aad
leave
mov
cmp
testl
or
lret
cmp
rorb
shrl
mov
aad
sbb
fsubr
cmp
xchg
sub
jl
adc
pop
mov
or
pushf
pop
sub
push
xor
dec
cmp
loope
xchg
data16
std
cmp
repnz
pushf
pop
std
inc
xchg
sbb
cmp
dec
dec
daa
shrl
pop
test
pop
addr16
xor
cmp
clc
cld
xor
roll
cmc
dec
adc
int3
push
dec
cltd
xor
mov
stos
or
icebp
std
out
insl
jnp
loope
or
add
mov
add
jae
aad
or
ss
movsb
jne
in
rorb
out
sarb
mov
sbb
lret
aam
das
and
adc
xor
stos
sub
jp
xor
inc
and
and
popf
xchg
jae
hlt
inc
adc
jo
loopne
in
mov
sub
cmp
sub
cmpxchg
jp
mov
mov
xor
jecxz
data16
push
pushf
pop
jbe
add
dec
inc
cmp
mov
push
sub
loop
fcmovbe
ret
adc
cmp
iret
roll
repz
fiadds
repnz
xor
flds
dec
cmp
imul
mov
ss
cli
cmc
cwtl
jmp
adc
mov
mov
fidivs
sbb
scas
insl
push
imul
jbe
std
repnz
test
nop
push
addr16
jns
inc
inc
nop
stos
mov
andl
jnp
mov
inc
add
dec
hlt
dec
aad
sub
pop
out
mov
cmp
sub
gs
mov
cs
add
es
out
pop
cli
into
lock
mov
inc
lods
sbb
lret
adc
jecxz
repnz
push
mov
cmpsl
lcall
loop
adc
jmp
pop
and
and
xchg
repz
fwait
push
insb
xor
cmp
jo
push
jo
push
loopne
cld
sub
vpsrad
ret
inc
leave
aas
mov
sbb
push
icebp
sub
inc
roll
std
inc
ja
push
push
vpunpcklwd
xchg
lds
pushf
lock
pop
mov
negl
mov
and
fwait
popa
sub
cmp
ds
push
or
jae
mov
or
sub
mov
mov
push
xchg
call
xchg
push
aaa
xor
pop
jmp
adc
inc
std
mov
mov
dec
or
scas
fldenv
or
pop
adc
mov
inc
or
aas
movsb
fimuls
and
add
or
pop
stos
push
lcall
sub
fidivrl
adc
pop
loope
mov
ljmp
push
xchg
ja
mov
test
int3
mov
adc
adc
xchg
jnp
mov
mov
push
inc
hlt
subb
fnstenv
cmp
mov
repnz
xor
stos
xchg
mov
and
movsl
or
sub
adc
jb
je
mov
cli
outsb
stos
inc
sbb
sahf
lret
fcoml
push
cmp
sbb
xchg
insb
pop
loopne
sub
popa
xorl
jmp
test
enter
scas
sub
sbb
sub
mov
mov
jle
push
xor
add
mov
inc
xchg
adc
std
adc
jmp
xchg
sub
sub
int3
pop
or
insl
out
mov
gs
out
xchg
pop
orl
pop
push
clc
adc
push
sbb
hlt
inc
xchg
or
lock
push
lods
movsl
mov
jmp
mov
mov
sahf
ret
sbb
adc
xchg
adc
test
jbe
xor
cltd
ret
mov
and
sbb
aas
dec
mull
jbe
mov
sub
jmp
outsl
call
lcall
push
pop
nop
mov
das
in
adc
mov
mov
sbb
out
mov
and
sahf
ljmp
jns
fs
lock
dec
les
pushf
sub
push
int3
adc
mov
repnz
fwait
cwtl
push
loope
xor
mov
cs
inc
pop
test
cmp
jno
loop
or
inc
dec
lea
xchg
jnp
in
xor
leave
xlat
fldcw
xchg
pushf
cmpsl
arpl
dec
cmpsl
cld
xor
jnp
jae
ret
leave
in
jns
lods
lahf
fs
push
jl
push
or
outsb
gs
or
clc
daa
adc
call
sbb
pcmpeqb
mov
loope
insb
xor
into
xchg
ret
cwtl
jp
cmpsl
mov
fisttpl
int3
fcmovne
cmpsl
add
inc
jg
test
adc
mov
shlb
call
les
and
mov
mov
sub
jmp
sbb
push
xchg
jo
add
jp
cld
inc
mov
rcrl
pop
xor
insl
jo
adc
jns
pop
imul
adcb
adc
dec
inc
sub
or
inc
test
push
mov
cmc
inc
sbb
mov
inc
xor
push
call
jb
ret
loop
jecxz
jne
jl
repz
repz
clc
js
into
out
rolb
mov
sub
sub
inc
out
stos
push
jg
or
dec
pop
das
bound
aaa
adc
mov
lea
andl
in
test
inc
sbb
sub
or
adc
loope
cmpsb
les
fmul
push
xor
imul
push
test
enter
or
into
ds
cmpsl
mov
jns
aas
addr16
popa
divb
mov
xchg
sti
xchg
add
jmp
push
xchg
aad
lret
loope
mov
sub
cmp
sub
es
xchg
cltd
xchg
xchg
jbe
mov
jnp
out
dec
and
dec
sbb
lcall
pop
push
mov
sub
cmc
std
nop
das
lock
pop
imul
xor
inc
mov
xchg
pop
shlb
je
test
packssdw
pop
sub
das
aaa
dec
inc
sarb
push
mov
sbb
or
cmp
cmp
and
addl
xchg
adc
es
dec
push
insl
das
popa
or
mov
add
mov
test
arpl
lock
ret
lret
mov
mov
daa
xchg
hlt
adc
jb
scas
loop
ds
js
add
xor
cmpsl
inc
push
mov
jae
loopne
fistpll
xchg
ja
data16
mov
mov
xor
out
push
addl
mov
jmp
cmpsl
and
shrb
jecxz
sbb
loope
cmp
jnp
mov
cli
hlt
and
dec
dec
rcr
test
aam
or
mov
shrb
lods
pop
outsl
scas
bound
jno
and
ret
data16
cmc
out
cwtl
test
aam
fistpll
jge
arpl
out
jo
cmpsb
adc
data16
test
dec
xchg
pop
gs
lcall
mov
and
sbb
inc
pop
add
and
daa
or
out
pop
push
test
or
cmpsl
mov
add
ret
call
fimull
filds
pop
cmp
rolb
lea
rclb
fimull
or
bound
popf
lret
fistps
pop
jns
bound
sbb
dec
test
insl
andl
dec
jp
xchg
lret
iret
add
repnz
aas
mov
mov
sub
xchg
cmp
cmpb
jle
pop
inc
mov
inc
mov
mov
and
or
cld
lods
fnstsw
out
rolb
add
jne
daa
movsl
add
in
imul
jmp
sahf
popf
clc
and
cwtl
mov
mov
subb
push
aas
xor
fwait
mov
mov
xchg
lahf
mov
fmul
mov
or
outsl
inc
jno
mov
fnstsw
add
or
xor
mov
inc
push
xchg
clc
lock
mov
and
inc
aas
lods
xor
aaa
sarl
mov
out
imul
push
imul
cs
adc
sbb
pop
jb
xchg
sub
pop
xor
sbb
xchg
inc
push
pop
mov
cmp
lcall
lods
out
test
push
and
jbe
pushf
popa
loope
push
ret
mov
mov
addl
int
mov
lods
int3
push
inc
cmovns
scas
call
out
insb
lcall
sub
movsb
adc
xor
and
insb
test
add
lock
cmp
inc
and
das
test
enter
add
movsl
inc
pop
lret
xchg
fildll
dec
jae
es
xor
mov
int
mov
std
orb
or
mov
stos
fcmovnb
lcall
mov
std
xorb
ret
add
cmp
cmp
inc
or
ret
addr16
fildl
push
inc
popl
jbe
adc
push
push
out
ja
hlt
shll
pusha
imul
cmp
cmpsb
test
mov
push
inc
aaa
xlat
stc
cmp
add
push
adc
push
jg
adc
pop
sbb
mov
inc
mov
mov
lea
lret
xchg
fiadds
mov
shll
cld
cmpxchg
sub
push
or
push
pop
xchg
imul
jnp
adc
mov
xlat
lds
stc
adc
enter
movsb
inc
leave
xor
test
enter
pusha
mov
add
sbb
flds
add
fistl
sahf
and
fidivl
roll
and
push
fldt
dec
mov
gs
fs
sbb
push
mov
loop
jge
push
fwait
mov
mov
cwtl
movsb
xor
xlat
dec
jae
jo
cmp
sbb
insl
pusha
jnp
leave
clc
or
push
cmp
lret
hlt
lods
imul
pop
decb
push
in
dec
lods
jae
or
call
test
sbb
int
mov
fisubl
ret
mov
iret
pop
daa
xor
fsubrl
mul
xchg
and
xor
int3
sbb
sub
test
test
xchg
inc
xor
cwtl
insb
rorb
adc
sub
js
sub
rcll
cld
xor
push
movsl
std
adc
gs
ss
mov
lds
push
mov
fistpll
cmp
mov
xor
add
mov
adc
mov
sarb
add
lods
enter
nop
sub
loopne
dec
and
cmp
jb
aad
or
test
rolb
cmp
or
fs
sbb
mov
xchg
mov
sub
stos
adc
pop
adc
pop
mov
std
aas
xchg
adc
mov
pop
sti
outsb
enter
mov
int3
leave
xor
ficoms
ret
dec
push
icebp
xlat
lods
in
mov
push
dec
and
xor
push
lods
std
jo
push
pop
cvttps2pi
xor
and
sbb
aam
xchg
jno
imul
scas
push
shrb
insl
leave
lods
mov
sub
xor
xchg
nop
in
stos
cli
outsb
incb
sub
xlat
mov
lahf
cmp
mulb
out
das
or
cli
outsb
push
jno
cmc
sub
adc
mov
inc
push
inc
je
xchg
inc
stos
sti
mov
loope
lcall
jae
js
cmp
push
xor
mov
test
dec
jbe
adc
jo
jnp
mov
addl
daa
push
pop
xor
js
out
out
dec
popa
fwait
mov
int
or
jg
adc
mov
pop
mov
push
cwtl
xchg
inc
loope
sti
push
jbe
or
les
jbe
mul
jno
jnp
mov
rol
adc
xor
or
pop
jle
sub
inc
movsb
mov
and
jne
arpl
mov
test
mov
jbe
cmp
pop
lods
adc
enter
xchg
cmpsb
push
addb
sarb
mov
inc
dec
or
gs
xchg
mov
cmp
adc
andb
mov
jae
bnd
es
lcall
xchg
and
mov
adc
popa
push
fcompl
pop
stos
std
lret
in
repnz
fsub
fwait
shl
mov
inc
push
mov
fstl
packsswb
cmpb
mov
sub
cmpsl
cmp
imul
push
add
or
mov
adc
lea
int3
mov
xor
addr16
xchg
outsl
fucomi
int3
cli
ficoml
jae
adc
dec
mov
jb
dec
pop
ja
jb
lods
push
pusha
adc
xchg
scas
cmp
je
xlat
xor
mov
aad
xchg
or
mov
or
aaa
les
pop
dec
sbb
ja
cmp
je
test
add
xchg
sbb
int
mov
cmp
adc
cmp
arpl
push
sub
push
stos
dec
rolb
pushf
outsb
dec
or
cmp
mov
popa
es
adc
pop
pop
icebp
add
leave
push
imul
lods
xor
jnp
pop
xor
sub
dec
pop
xor
add
stos
scas
mov
jge
push
jecxz
mov
cmp
inc
mov
xchg
jb
or
mov
cltd
or
lock
mov
dec
sub
or
push
add
adc
dec
xor
into
jge
sub
add
repz
ret
sbb
sbb
dec
movsl
jecxz
nop
xchg
adc
push
mov
or
cltd
cmp
leave
test
adc
pop
mov
test
xchg
pop
xor
add
repz
enter
addb
fldl
shl
xchg
rep
int
fcoml
pop
fsts
cli
insl
pop
fdivrs
sbbl
sar
idivb
cs
dec
or
ja
jmp
ffree
jp
cs
sbb
call
lds
xor
stos
cltd
xchg
test
lahf
iret
jnp
pop
mov
pop
iret
cmp
pop
or
nop
push
jp,pn
jnp
ds
xor
aad
int3
xor
sub
aam
xchg
and
aaa
mov
xor
mov
adc
imul
inc
jns
mov
inc
sub
mov
int
ficomps
push
inc
pop
outsl
xor
mov
ret
add
sub
or
mov
mov
jle
jecxz
mov
and
fndisi(8087
xchg
mov
jbe
push
lahf
bound
out
jne
mov
dec
xor
sbb
das
notb
dec
mov
cmpsl
mov
pop
loop
push
addr16
cmp
xchg
pop
hlt
sbb
lock
xchg
aam
cltd
insl
test
and
loopne
dec
mov
out
and
loope
in
sti
or
xchg
pop
mov
mov
sub
jle
les
mov
mov
xchg
aad
lret
pop
in
mov
mov
sbb
bound
enter
xor
dec
test
mov
push
xlat
push
data16
xchg
cmpl
andl
add
xor
xor
mov
scas
data16
cli
push
hlt
adc
cs
adc
idiv
faddl
sub
cmp
jl
repnz
push
out
mov
inc
mov
mov
lcall
loope
cmp
ja
sahf
mov
movntps
sub
xchg
dec
push
cmp
or
gs
clc
push
mov
jle
or
fistps
mov
popf
popf
cmp
jbe
mov
xor
adc
fisttpl
bound
inc
dec
iret
ss
cmp
or
sti
pop
add
out
jmp
test
fimull
shll
push
inc
es
orb
scas
or
mov
mov
sbb
aam
or
mov
cmp
test
nop
pop
sbb
jmp
out
and
pcmpgtd
enter
out
add
rorb
test
pop
xchg
fdivrl
pushf
gs
sub
in
clc
xor
jmp
ja
enter
ljmp
pop
pop
mov
xchg
and
int3
sub
xchg
outsb
dec
insb
sub
aaa
jge
adc
dec
sbb
lods
and
inc
jns
fmulp
nop
daa
sahf
xchg
mov
mov
jns
pop
data16
jecxz
mov
stc
cmp
jae
stos
pop
cmc
xchg
mov
sbb
mov
test
addb
dec
sub
jp
mov
dec
test
loop
or
addb
iret
cmpsl
push
into
mov
out
sub
lds
lds
aam
adc
cmp
shll
mov
jmp
push
iret
fstpt
and
pop
cmp
mov
mov
push
or
orb
mov
pop
cld
mov
sbb
pop
adc
sahf
xchg
icebp
mov
daa
rclb
rcll
fwait
mulb
je
loopne
add
add
hlt
or
jmp
dec
push
inc
fstpl
jo
repnz
xchg
je
or
sub
sub
je
insl
mov
test
pop
outsl
sub
xchg
bound
in
push
ret
inc
cmpsl
rcrl
mov
inc
or
ret
lea
das
xchg
cmp
test
cmp
xchg
jo
imull
sbb
xor
loop
sub
cmpl
xchg
ljmp
repnz
int
and
std
and
jl
cmc
test
push
and
and
pop
cmp
jg
sarb
ret
stc
inc
add
ret
and
sbb
jmp
out
push
in
movsl
sbb
mov
push
je
xchg
je
mov
xor
pusha
or
or
in
pop
ljmp
jb
jno
stos
scas
stos
fstl
and
repz
jb
jae
jp
sub
js
pop
out
jmp
sub
push
mov
js
and
pushf
sbb
add
clc
pop
lock
ret
mov
testb
xchg
and
aam
pop
sarl
inc
mov
jno
je
clc
push
pop
mov
dec
pop
xchg
cmp
mov
stos
jb
icebp
and
lods
ret
bound
stos
push
insl
dec
push
push
inc
xchg
loop
mov
xchg
jo
and
add
int3
pop
stos
adc
xor
das
mov
sbbb
ret
inc
icebp
fidivrs
andb
js
cmp
roll
pop
cmc
dec
mov
mov
dec
enter
xor
stos
leave
push
mov
inc
test
mov
imul
mov
gs
inc
faddp
jg
add
shll
or
mov
push
aad
mov
cmpsb
jns
pop
mov
mov
out
push
dec
jle
xor
enter
inc
jl
push
cmp
xchg
test
repnz
and
pushf
aam
mov
or
push
popa
or
jmp
mov
or
dec
lods
sub
lods
std
outsl
arpl
bound
cli
push
push
mov
fimull
sbb
dec
aam
stos
mov
and
loope
les
fldenv
stos
aad
repz
cltd
dec
pop
mov
sbb
mov
or
insb
pop
pop
loop
sbb
dec
fcomps
insb
xlat
addr16
xchg
push
pop
xchg
shrl
clc
mov
test
aaa
lret
mov
push
mov
mov
or
xchg
insb
and
sarl
and
cmp
xor
rcl
cmp
mov
lea
leave
inc
mov
loopne
mov
out
mov
and
insl
adc
sbb
pop
sub
push
push
icebp
cli
push
xor
pop
shl
hlt
and
in
in
mov
sbb
xchg
sub
and
sub
push
outsb
lahf
iret
mov
mov
sub
add
int
dec
xchg
cmp
pop
adc
jmp
daa
jecxz
mov
jne
popa
in
stc
fidivrs
fstpl
imul
bound
dec
xor
adc
sub
xchg
or
push
pusha
cmp
fwait
sahf
inc
xor
cmp
lahf
mov
outsl
pushf
sbb
mov
lret
shll
lods
lret
cmp
mov
shll
sub
or
or
imul
xor
test
jno
or
subl
jle
std
push
repz
stc
repnz
pop
test
and
test
repz
jb
jns
jo
subb
lret
pop
nop
push
and
sti
lret
ljmp
adcb
cwtl
mov
push
cmc
lea
call
mov
stos
jae
xor
xchg
jne
repz
nop
cmpsl
call
daa
mov
xchg
or
lods
fists
leave
and
sub
ja
mov
dec
cmpsl
std
xchg
rclb
mov
arpl
and
movsb
or
push
es
movsl
or
sbb
cmp
sub
ret
xlat
out
dec
imul
sti
dec
dec
add
sarl
jmp
pop
cmpl
mov
and
mov
sub
gs
test
add
gs
lods
dec
rorl
pop
jmp
ljmp
loopne
xchg
pop
fcoms
pop
add
jne
xchg
or
mov
insb
cmp
pop
pop
push
sti
sbb
pusha
sbbb
jns
adc
push
mov
scas
idivl
adc
rorl
xchg
xchg
mov
test
sbb
jns
imul
mov
mov
addr16
clc
cmp
pop
ds
aas
and
lds
rcll
aas
dec
scas
mov
mov
sbb
push
inc
jne
inc
push
pop
mov
cwtl
pop
add
ljmp
popf
push
inc
test
mov
hlt
cltd
adc
hlt
enter
pop
rorb
cwtl
sti
xchg
int
push
jmp
iret
stos
es
cltd
es
jno
push
popf
cwtl
dec
lahf
pop
fnstcw
sub
vrsqrtss
push
mov
repnz
mov
mov
in
adc
cmpsb
lea
xorl
push
aas
mov
call
mov
sub
xor
and
mov
bound
in
mov
lods
jmp
popa
xor
rolb
pop
orb
adc
scas
inc
pop
inc
dec
rclb
sbb
lret
dec
or
ficompl
cmp
jp
inc
push
adc
sbb
xchg
jae
cmp
fs
jnp
sub
mov
or
jb
data16
jmp
fsubrl
pop
jb
sbb
adc
xor
sbbl
jno
shl
mov
dec
dec
pop
push
mov
mov
inc
loope
outsb
dec
daa
ljmp
add
mov
sti
call
je
mov
mov
orb
ja
mov
or
push
xor
scas
xor
lods
scas
dec
push
or
addr16
test
ja
mov
popw
pop
mov
dec
lcall
dec
cmp
sahf
or
sbb
add
ret
shrl
cld
addr16
lods
jle
aaa
pop
mov
inc
lock
mov
call
sbb
pop
mov
or
xor
dec
movsl
stc
add
ljmp
dec
rcrl
sub
mov
pop
inc
cmc
pause
lods
cmpsb
and
es
xor
das
mov
dec
inc
mov
mov
lds
inc
pop
repnz
gs
push
add
mov
inc
mov
leave
lock
cmp
dec
adc
pop
sahf
ret
push
xchg
pop
adc
mov
test
and
out
xchg
jae
adc
or
jne
inc
fnstenv
jp
ss
scas
inc
mov
inc
lods
outsl
leave
pusha
jb
jecxz
call
mov
inc
or
imul
stos
lret
push
leave
inc
adc
popa
scas
lahf
pop
xchg
sbb
pop
psllq
loope
mov
loope
sbb
sub
cmp
call
loope
add
lds
pop
pop
sbb
pushf
rcrl
fists
jle
cmpsl
jp
dec
cwtl
dec
out
clc
out
cmpsl
sbb
dec
push
push
and
pop
ret
out
arpl
pop
dec
sti
into
scas
mov
or
xor
dec
xchg
ret
inc
mov
xchg
cmp
pop
jnp
add
mov
in
push
sbb
jl
lock
xor
std
push
insl
aam
xchg
cmp
ja
jmp
call
mov
add
pop
push
add
lahf
mov
inc
lret
repnz
jns
or
lock
mov
imul
pop
add
stos
ljmp
mov
cld
sbb
mov
in
sub
lret
mov
xchg
sub
adc
test
js
mul
out
imul
and
int3
sti
mov
adc
je
cmpsl
fdivs
xchg
jcxz
idiv
ret
xchg
push
jns
arpl
test
sti
push
ljmp
jo
lret
fstpl
jno
inc
cmpsb
lret
inc
in
sbb
xchg
out
call
mov
push
and
mov
pop
mov
and
xor
rcll
test
jne
adc
das
into
mov
lods
loop
test
outsb
out
lahf
mov
inc
scas
mov
lds
fsub
arpl
daa
je
fwait
pop
adc
fdivs
and
push
lret
push
jecxz
pop
xor
hlt
scas
cld
sub
pop
in
mov
cmp
jne
jnp
mov
jg
in
push
adc
fbld
repz
cmpsb
rcrb
aas
mov
xchg
and
insb
out
jmp
std
mov
and
ffreep
test
mov
adcb
jbe
gs
inc
ret
mov
xchg
pop
jl
or
out
xorb
mov
push
mov
add
shrl
test
ja
add
es
sti
push
adc
rorl
sub
jg
mov
or
test
addr16
xor
mov
clc
fsubs
and
sti
faddl
pop
flds
pop
xchg
mov
cmc
arpl
fisttpl
push
push
repnz
jp
sub
xchg
dec
cli
aad
sub
sbbb
adc
out
pop
imul
adc
call
inc
enter
jp
stos
sub
daa
std
fs
inc
cmp
mov
jno
int3
data16
jg
sub
add
cmp
nop
sub
and
aad
jae
xor
cli
rcrb
mov
inc
cmp
xor
lods
sub
fmuls
jne
cmpsb
lea
lods
dec
adc
inc
addb
sub
fstl
push
out
testl
clc
out
in
mov
cli
xorb
outsb
popa
xchg
ja
fists
sub
out
ljmp
rcll
xchg
sub
cmp
pop
sbb
stos
pop
xor
out
push
into
sub
test
dec
and
pop
mov
xchg
paddusb
addr16
lods
hlt
fisttpl
fnstsw
inc
enter
cmp
in
jmp
je
xchg
add
sub
cmp
sub
lea
daa
pop
outsl
stc
lock
sub
mov
sub
lcall
xchg
in
mov
popl
addb
cmp
es
ret
test
mov
nop
dec
or
aam
loope
cmpsb
test
fs
jl
adc
imul
jmp
xchg
jb
or
ss
pop
xor
push
into
push
ror
mov
lcall
xor
adc
repz
insb
andnps
jno
xchg
xchg
sub
in
add
jo
inc
daa
pop
xchg
push
sbb
movsb
dec
jp
pop
push
dec
movsl
mov
adc
es
repnz
mov
movsl
aas
inc
out
jo
andb
mov
test
and
adc
ds
pop
aam
rcrb
sbb
mov
push
imul
insb
in
or
push
cmp
insb
or
mov
jae
add
int3
dec
lds
ss
push
sub
pop
ret
jnp
dec
cmc
jge
add
fwait
sub
dec
push
dec
xchg
xor
fidivl
int3
lea
ror
jns
repz
jae
inc
sub
pop
or
cs
sub
or
push
jae
xor
pushf
dec
aad
fs
sbb
mov
cmpsl
clc
fs
or
pop
rcll
lds
mov
lahf
and
mov
and
cld
outsb
nop
dec
fisubs
enter
inc
xor
jns
lea
stc
out
shrb
cli
fs
jecxz
fildll
dec
scas
push
out
jp
bound
call
sahf
pop
cmp
and
addr16
repz
dec
fldenv
fs
ljmp
dec
loope
or
cmpb
call
adc
xchg
je
push
jge
jle
mov
jnp
sbb
dec
sbb
imul
jns
ss
outsl
imul
dec
shrl
jmp
dec
hlt
insb
push
push
out
movsb
shl
mov
sbb
sbb
pop
adc
push
add
sub
hlt
or
daa
push
pop
pop
shl
pop
xchg
jmp
mov
stc
pushf
cmp
push
sub
pop
je
mov
xor
je
dec
mov
add
or
add
rorb
cs
test
or
mov
insl
adc
xchg
insl
dec
add
push
rcr
int
sub
sahf
paddb
in
cmpl
test
jmp
jne
pop
outsl
gs
mov
das
nop
fnstsw
ds
fdiv
and
push
pop
add
orb
hlt
fdivs
or
jns
sbb
pop
clc
or
mov
lcall
and
lret
and
mov
mov
inc
pusha
mov
fisubrs
loope
dec
das
ljmp
lods
lcall
loope
iret
sub
cmp
icebp
inc
negb
lods
sbb
xor
sbb
mov
lods
out
add
test
std
push
std
pminsw
xchg
aam
ljmp
mov
js
sbb
out
sarb
dec
xchg
dec
insb
jl
sbb
jno
in
ret
das
enter
dec
cmp
jge
fidivrs
pop
or
and
nop
inc
and
outsb
xchg
cmp
add
insb
loopne
cli
inc
icebp
je
add
aaa
adc
lods
cs
aam
adcl
cmpsb
cmp
jo
js
push
aad
sbb
ficoms
lcall
lcall
and
mov
or
test
sahf
jno
mov
sub
ret
cwtl
std
es
mov
push
mov
jmp
sbbl
mov
ds
test
dec
clc
je
push
sbb
xchg
mov
mov
ret
mov
je
inc
es
jne
test
xchg
in
and
mov
sbb
inc
pop
loop
dec
es
imul
xchg
ds
jbe
add
fnstenv
jns
jl
pushf
sbb
fwait
push
ret
sub
addl
mov
movsl
jg
cmp
les
inc
add
push
movsl
add
sbb
mov
lods
dec
cmpl
cmpl
xchg
cmp
cmp
jl
call
adc
inc
fsubrl
imul
add
jae
es
or
add
pop
jg
mov
daa
shrb
mov
daa
rorb
scas
jnp
shr
inc
aam
xchg
sub
cmp
ror
xor
out
in
push
mov
push
xor
pusha
jle
cmc
add
out
out
jae
xchg
fwait
js
mov
push
insb
jge
subb
push
insl
inc
inc
stos
mov
test
lods
rcrb
ficompl
repz
bswap
lods
adc
and
dec
es
pusha
pusha
fs
lcall
out
out
pop
fidivrs
das
xorb
push
lahf
adc
ffree
mov
shl
lea
adc
lock
lahf
xchg
fcoms
mov
lea
sub
push
cmp
jl
adc
lcall
stc
or
es
lcall
out
and
mov
xchg
dec
mov
and
dec
pop
inc
or
xorl
pop
adc
xchg
enter
popa
out
jl
add
and
vmovshdup
int
lahf
ljmpw
arpl
mov
es
arpl
pop
or
stc
and
fstps
push
cmp
and
jb
ljmp
lods
test
dec
pop
rol
or
neg
xor
mov
js
push
jne
aad
jecxz
cmp
xor
push
fbstp
push
cmpsl
xchg
notl
fistpl
pop
add
je
push
mov
xor
jb
js
rcl
jnp
mov
and
int3
int
xchg
cs
add
scas
add
add
jl
jmp
loop
out
aam
decl
popa
jecxz
mov
adc
mov
sarb
xor
lods
pop
jbe
popl
xchg
andb
cmpsb
aad
stos
in
jge
and
dec
pop
push
sbb
inc
sbb
cmpsl
or
xchg
xchg
push
jge
aaa
int
mov
cs
adcb
adc
cmp
mov
out
std
sbb
je
dec
jl
out
pop
cmp
inc
stc
xchg
push
leave
movsl
pop
ljmp
dec
enter
ja
fistpl
vmovdqu
in
imul
push
hlt
sbb
mov
inc
sbb
mov
js
bound
push
test
cmp
pop
xor
mov
popa
xor
shlb
sbb
lock
out
xchg
sub
pusha
das
loope
cmp
je
cli
or
incl
xchg
sahf
inc
insb
jmp
cwtl
add
xchg
std
mov
xor
aaa
dec
leave
aam
mov
push
ljmp
into
fcomps
push
cs
inc
sbb
sbb
cli
cs
xor
xchg
test
pushf
inc
mov
jmp
inc
js
in
in
daa
push
jo
mov
loope
bound
and
fidivrl
jo
ficoml
aad
dec
into
adc
loop
outsb
scas
xor
into
nop
fstl
jmp
cmp
hlt
jb
jle
push
or
mov
loope
mov
sbb
lret
pop
cmp
mov
jae
pop
mov
sub
jge
mov
call
xchg
rorl
add
aam
into
sar
lds
shll
cld
jmp
ret
sub
jmp
arpl
dec
fidivl
adcb
jno
shlb
sub
pop
jl
lea
cmpsb
dec
xor
push
mov
cmp
movsl
xlat
xchg
or
and
ss
scas
cmp
mov
inc
out
mov
test
inc
lcall
scas
mov
ret
pop
inc
or
arpl
mov
xchg
lahf
and
jmp
jle
pop
dec
inc
dec
cmpsb
ret
jg
jnp
repz
cmp
out
adc
fsubrs
inc
es
mov
mov
lahf
jle
mov
rol
inc
les
cmc
into
popa
mov
and
push
jp
cmp
test
sub
mov
push
xor
jae
sub
imulb
or
pop
lret
enter
xor
test
or
push
enter
and
xchg
xchg
inc
inc
sysret
sbb
je
int
outsl
mov
mov
pusha
iret
lds
jmp
jno
clc
fstps
enter
mov
inc
mov
mov
cmc
cmp
add
jo
sbb
jp
mov
inc
and
in
sbb
cmpsl
ss
movsb
or
mov
mov
jo
gs
xor
loopne
imul
jne
js
adc
call
sbb
or
lret
icebp
pop
sahf
add
dec
mov
jnp
lahf
sbb
into
push
pop
mov
inc
dec
je
cmp
xor
mov
mov
xchg
cmp
mov
xor
mov
and
into
pushf
in
fstp
jecxz
mov
jns
add
mov
cmpsl
insl
xchg
sti
mov
sarb
mov
add
pusha
out
mov
mov
or
xor
test
cmpsb
xchg
push
cmpsl
cltd
mov
add
pop
movsb
in
mov
sbb
adc
and
cmpsb
insl
dec
aam
jl
mov
bound
ss
pop
lock
cmc
dec
mov
into
movsl
ljmp
clc
mov
js
int3
and
rol
aaa
xor
dec
cmpl
repnz
dec
test
add
dec
lea
inc
add
xlat
and
mov
jnp
in
test
xchg
dec
popf
jne
cmp
mov
outsb
fisttpl
aam
outsl
jl
lds
movsb
and
fsubs
sub
fldl
shrl
sub
in
and
mov
mov
mov
cmpsl
sbb
js
ret
pop
mov
repz
dec
inc
push
dec
cld
orb
daa
mov
inc
stos
movsb
xchg
outsl
mov
mov
sbb
repz
dec
mov
pop
jae
xor
lcall
out
xchg
cmp
sbb
rclb
jae
or
lods
push
lock
adc
leave
jmp
xlat
cwtl
ja
outsb
outsb
mov
pop
scas
sub
sarl
add
lahf
sarb
js
outsl
adc
orb
cmp
adc
mov
sbb
out
cmc
pop
fdivl
jae
or
pop
or
imul
lret
inc
fcoml
sbb
es
addr16
rol
adc
mov
adc
inc
adc
nop
dec
outsb
add
or
flds
pop
subl
insb
dec
test
lret
ficomps
mov
lods
and
mov
cmp
mov
cmp
loopne
out
mov
xchg
dec
call
mov
mov
out
sub
sbb
inc
jecxz
mov
sarb
sbb
add
lret
aaa
xor
mov
add
aad
push
test
popa
pop
ja
fwait
insl
mov
push
stos
sbb
stos
je
and
sbb
lret
cmpsb
test
xchg
sbb
shll
or
repz
loop
loope
adc
mov
or
dec
adc
scas
sub
push
sub
out
lret
jmp
loopne
lods
js
mov
dec
bound
and
cmpsb
pop
shrb
lods
pop
cld
std
lea
xchg
dec
xchg
adc
in
or
or
xorb
inc
out
lcall
jg
out
push
push
cmp
dec
adc
fidivrl
or
popf
add
mov
mov
cmp
mov
out
cltd
fidivl
cmc
lret
test
out
and
lock
or
pop
pushw
das
leave
mov
add
repnz
scas
pop
popa
fwait
sub
push
aad
sub
notb
jnp
pop
pop
xchg
movsl
lds
out
subl
outsl
das
mov
ss
pop
dec
data16
lds
daa
jo
and
add
jbe
cli
cmp
adc
push
pop
mov
push
mov
jns
in
fcoml
cld
inc
jae
mov
fstl
loop
insl
rcrb
fistps
cmpsb
mov
push
clc
loopne
jl
dec
movsl
jle
fildl
leave
and
test
xchg
push
xlat
add
rorl
lods
pop
stos
or
repnz
and
mov
mov
mov
inc
push
in
das
xchg
and
sbb
jne
xchg
stos
shl
cmp
loop
lret
and
aam
mov
add
inc
inc
sti
stc
push
sub
scas
push
push
jns
ret
cmp
inc
xor
or
mov
sbb
pop
push
or
mov
movsb
push
mov
pop
loop
sbb
repnz
xlat
mov
pushf
mov
aaa
sbb
lahf
xchg
mov
xchg
cmp
fs
adc
sub
insl
sarl
inc
jo
push
add
sbb
lock
sti
jae
push
pop
shlb
mov
xchg
cltd
and
xchg
cwtl
pop
decl
icebp
xchg
mov
rorl
or
mov
std
popf
shll
pusha
mov
pop
push
or
ljmp
fcoml
dec
divb
int
or
pop
pushl
pop
jecxz
push
mov
inc
push
loop
pop
aam
shlb
xchg
mov
add
sbb
aad
gs
pop
pushf
cwtl
and
xchg
jae
xchg
std
out
shl
xchg
cmpsl
pop
fildll
test
jae
push
sti
lret
and
ret
push
push
pop
std
sbb
insb
jle
mov
mov
xor
push
add
pop
fidivrs
add
lods
pop
cmc
xchg
jbe
fs
sarl
lods
loope
sub
xor
inc
repz
incb
jbe
mov
arpl
adc
lret
inc
pop
add
xor
arpl
popf
pop
clc
int3
push
scas
mov
lds
fdivrp
push
push
or
pop
push
idivl
js
jg
fisubl
mov
enter
sbbb
fmulp
lods
add
js
pop
orl
movsb
sbb
mov
dec
xchg
cwtl
notrack
mov
jge
add
outsb
cwtl
mulps
jno
addr16
push
xor
out
ret
shrl
arpl
cwtl
adc
pop
or
jmp
jl
sbb
test
mov
cwtl
mov
add
mov
hlt
sub
mov
aam
xchg
jp
mov
dec
cltd
push
sub
sbb
sbb
xchg
mov
nop
daa
repnz
sub
cld
fisttpl
sub
test
mov
subb
mov
cmp
push
fstpl
xor
lds
addr16
icebp
adc
pop
push
roll
ret
or
in
imul
jns
cli
adc
ljmp
push
xchg
jecxz
das
aam
mov
pop
push
leave
inc
pushf
scas
mov
cvttps2pi
in
inc
sarb
adc
std
dec
xor
in
adc
mov
xchg
jge
outsl
mov
add
addl
fisubs
lods
out
mov
add
ss
fidivrs
fisubl
cmp
inc
cmp
xlat
mov
dec
inc
xor
insl
pop
ja
jecxz
push
pop
jne
mov
sub
movsl
dec
add
movsb
inc
push
pop
mov
dec
test
popl
jle
pop
sbb
imul
add
sti
xchg
mov
push
inc
xorb
adc
jae
bound
xor
subb
mov
mov
lret
mov
mov
test
clc
fcmovu
or
scas
sti
pop
ljmp
js
sbb
push
out
les
loope
call
dec
inc
shll
ljmp
gs
and
cmp
pop
xchg
in
repnz
xlat
dec
js
in
repz
xlat
mov
fdivl
fprem1
loopne
call
cmp
movsb
mov
push
adc
sbb
mov
dec
mov
jmp
inc
or
iret
mov
repz
cld
jle
imul
out
cwtl
insb
shr
cmp
dec
sub
in
pop
movsl
mov
repz
dec
lret
jmp
xor
inc
fimull
cmp
out
fisttpll
stos
push
cld
sbb
sbbb
pop
add
fistps
imul
aam
sub
add
sbb
jne
pusha
push
jg
push
push
cmp
sub
stos
jnp
sbb
fdivl
inc
or
mov
xor
xor
out
push
shlb
xor
fdivrp
jae
cltd
hlt
mov
xchg
mov
in
cmc
jne
test
lock
popa
dec
fxch
loop
mov
cld
pusha
add
mov
mov
dec
fldcw
and
xchg
mov
inc
sub
xor
test
loope
jnp
cmpl
ja
jp
scas
push
sub
push
or
mov
fnstsw
outsb
add
or
cmp
es
loopne
shll
mov
sarl
testb
push
sub
pop
aaa
cmp
and
lock
sub
cmpsl
leave
jmp
mov
outsl
push
xchg
orb
loop
sub
test
movsb
mov
sbb
ljmp
cs
push
lods
aam
into
fdivr
mov
in
push
inc
ds
xchg
xchg
jle
outsl
imul
std
lahf
jl
xchg
pop
dec
fmull
mov
push
out
fs
inc
lahf
push
push
aas
pop
sbbl
lds
or
add
outsb
and
sub
add
aam
mov
loopne
dec
insb
shll
outsl
dec
das
lahf
dec
repz
mov
pusha
outsl
sbb
inc
mov
add
add
hlt
in
add
testb
or
and
push
and
or
and
xchg
inc
xor
sub
dec
dec
dec
or
mov
and
and
push
jnp
dec
dec
shll
test
and
mov
mov
scas
xor
stos
addl
jmp
rclb
movsb
jbe
bound
jmp
arpl
cmc
scas
sub
mov
daa
dec
cli
jg
cli
mov
ljmp
insl
popa
aas
push
push
mov
test
bound
adc
or
push
or
mov
fdiv
cltd
cmp
or
push
add
shrl
jge
inc
sarl
nop
dec
or
adcb
push
pop
ja
inc
fcmovnb
incb
cmp
aas
pop
fisubrs
outsl
dec
bound
mov
ss
test
sti
lahf
mov
popf
mov
frstor
or
mov
les
cs
mov
sbb
dec
test
mov
mov
xor
aaa
insl
add
das
xor
frstor
bound
push
mov
pop
cmp
test
ficomps
xchg
nop
ljmp
pop
and
ss
jp
inc
icebp
in
sub
icebp
mov
inc
adc
lret
aaa
dec
cmc
mov
pcmpgtw
insl
pop
push
lea
test
out
mov
call
push
pop
mov
std
mov
fcmovnbe
or
mov
xor
inc
popa
js
hlt
jno
sbb
aam
add
cwtl
addb
jecxz
sbb
call
frstor
mov
fcoms
jge
divb
lea
pop
jo
lahf
and
adc
sbb
fldcw
pop
inc
push
je
pop
icebp
mov
leave
shlb
subb
cs
mov
lods
inc
mov
in
jge
add
cmc
dec
sbb
pop
jl
rclb
cmp
icebp
imul
push
and
pop
mov
addr16
xlat
fidivrl
bound
mov
and
incl
cmpsb
dec
pop
fwait
lods
fsubrs
pop
xchg
subl
test
add
lret
pusha
jnp
sbb
sub
loop
loope
push
in
ds
adc
in
cwtl
dec
sub
sub
jp
push
mov
and
shrl
cmpsb
lcall
xchg
ds
push
mov
add
cmp
jmp
cmpb
fwait
mov
lds
lret
sti
orl
clc
repz
mov
cltd
cmp
pop
int3
cwtl
mov
sti
dec
in
adc
push
xchg
dec
add
cmpb
cmp
int
pop
jns
mov
gs
fisttps
adc
jnp
outsb
dec
sub
in
mov
icebp
lock
cmpsl
xlat
icebp
and
bound
add
faddl
mov
push
jae
pop
hlt
ficomps
popa
or
out
push
xor
ja
jge
mov
mov
aas
xchg
repz
inc
ja
or
jbe
sbb
dec
lea
cmp
sti
push
mov
dec
scas
popf
dec
sub
push
adc
popa
or
je
dec
dec
pop
test
pcmpeqb
inc
xor
add
rcrl
jle
bound
cs
cmp
gs
pop
rcrb
imul
add
inc
mov
aaa
movsb
addr16
fdivrp
push
xchg
es
add
mov
cld
mov
adc
adcl
bswap
nop
out
jle
xchg
aad
je
mov
loope
cmc
sbb
scas
arpl
xor
stos
add
lahf
lahf
rcr
daa
and
cmp
push
xlat
mov
push
cmpsl
mov
out
xchg
add
adc
or
fistl
out
and
rcrl
sub
dec
lcall
scas
cmp
mov
cmp
cmp
add
stc
add
sub
inc
cmp
fldl
jo
cltd
push
xor
stos
sbb
push
sbb
jl
loop
lcall
in
ja
add
dec
push
cmp
mov
lcall
shlb
push
xor
sbb
int
pop
pop
inc
faddl
movsl
sub
adc
push
jl
mov
cld
or
inc
pop
push
mov
pusha
test
ret
ds
bound
je
mov
loopne
and
imul
adc
cwtl
mov
jl
or
rorb
jl
adc
rclb
outsl
push
or
jmp
dec
std
jns
fwait
mov
sub
int3
fcmovb
add
lea
xor
sbbl
adc
sbb
pop
out
add
movsl
ds
jg
ja
inc
mov
push
mov
add
jg
jae
test
daa
sahf
addr16
pushf
pop
xchg
into
mov
sti
stc
adc
mov
stc
lea
das
jmp
sub
jne
xchg
in
inc
mov
pop
xchg
aas
xor
sub
sbb
mov
xchg
push
push
or
aaa
adc
test
and
shl
push
add
addl
std
icebp
cmpsb
push
fs
ja
add
and
push
lea
and
sub
leave
xchg
jns
cmc
adc
lret
or
jns
fs
inc
jne
cmpsl
imul
pop
lds
xchg
or
ds
mov
or
hlt
mov
fistl
sub
push
xchg
pushf
int3
popa
clc
fsubs
outsl
fmull
cmpsl
mov
shll
test
and
scas
push
jno
clc
jg
scas
jmp
in
insl
cmpsb
mov
popa
int
sbb
sub
in
jp
scas
pusha
mov
jecxz
sti
stos
mov
leave
jp
pop
mov
neg
xchg
pop
xchg
loopne
ljmp
mov
rclb
data16
imull
sub
arpl
xorb
loope
lock
cmc
jae
je
jae
and
fidivs
insl
mov
jmp
pop
fstps
lds
ja
test
jmp
lods
push
leave
xchg
jnp
popf
adc
outsb
sti
push
push
push
pop
mov
idiv
xchg
sub
jl
shlb
call
cmovb
xchg
mov
ds
mov
shlb
test
sub
sbb
shr
or
mov
dec
sbb
testb
cmp
icebp
aam
ss
rorl
jno
into
aam
xor
cmp
in
mov
or
in
fs
xor
orl
push
pop
push
gs
repz
sbb
out
xchg
stos
pop
test
in
pop
gs
sub
jge
jmp
cli
test
repz
inc
pop
stos
dec
popf
add
or
pop
sub
in
push
scas
std
nop
addr16
push
and
mov
jmp
jo
insb
jg
int3
sbb
lret
and
add
lret
enter
cltd
sub
mov
loopne
sub
rcrb
aad
out
das
cmp
inc
icebp
in
sahf
loopne
rorl
imul
cmpl
and
shrb
lods
xchg
and
sbb
insb
cmpsb
pop
xor
add
popw
inc
dec
or
jo
pop
dec
hlt
xchg
sub
pop
jle
xchg
lret
scas
imulb
inc
and
mov
lahf
insb
sbb
dec
add
test
or
fsubrl
cmp
in
pop
xchg
nop
imul
inc
loop
jns
push
push
jne
cmp
test
das
pop
jmp
xchg
leave
pusha
cmp
add
mov
nop
sbbb
jns
pop
mov
mov
sub
sub
imul
cmp
lods
push
jbe
in
push
push
test
add
inc
cmovne
pop
pop
push
test
in
push
inc
mov
add
cmp
fbld
xchg
jg
mov
push
add
pop
mov
sub
lcall
lret
mov
adc
iret
sub
aaa
push
mov
adc
push
imul
inc
xor
dec
push
jp,pn
jno
and
enter
or
jns
or
push
ds
gs
pop
mov
mov
into
lods
jno
mov
lret
lods
xchg
addb
inc
xchg
inc
pop
jle
test
mov
jnp
mov
adc
push
nop
repz
lret
aam
pop
adc
push
int
sub
mov
adc
mov
aaa
idivl
ljmp
xchg
xchg
pop
imul
xchg
dec
aas
dec
addl
dec
shlb
icebp
ficomps
fwait
std
imull
sbb
lahf
jl
outsl
fsubp
xor
and
enter
jge
out
sub
shlb
sub
andl
adc
cli
add
pusha
das
andl
pop
mov
cmp
mov
das
es
shlb
adc
mov
fists
pop
mov
pop
call
or
mov
adc
lahf
lock
hlt
fstpl
xor
and
repz
mov
in
rcrl
std
fs
cld
sub
xor
mov
gs
outsb
arpl
notl
mov
lret
sbb
or
push
cli
dec
add
ljmp
mov
pop
call
xchg
fdivs
and
std
xchg
xchg
pop
dec
ret
jp
push
xor
push
aad
cmp
adc
sub
iret
popf
and
shlb
mov
xchg
cltd
jo
cmp
jmp
push
insb
adc
push
xchg
cld
test
ss
xor
sub
adc
or
jge
or
addl
mov
mov
lods
pop
xor
add
popf
shlb
mov
in
mov
in
pop
mov
in
inc
in
pop
inc
out
inc
mull
aam
xchg
outsl
jmp
inc
cmpsl
pop
push
lret
cmpsb
push
dec
test
dec
aas
xor
aad
jecxz
jge
cwtl
leave
cs
adcb
arpl
test
sbb
mov
or
and
push
pop
push
cwtl
sbbb
popf
ds
lock
dec
je
popf
xlat
and
mov
enter
fimull
nop
push
push
repz
jmp
popf
outsb
or
data16
push
hlt
sbb
adc
lods
and
jnp
sahf
pop
inc
lods
mov
pop
cld
cmp
xor
sub
cmpsl
inc
rolb
push
mov
push
mov
stos
or
cmpsb
xor
xchg
inc
adc
loop
insb
xchg
lahf
mov
cmp
stos
cmpb
and
or
jle
sub
shr
sahf
hlt
inc
aad
fdivl
dec
sub
xor
insl
jle
test
outsl
push
lods
test
xor
js
addr16
add
adc
xor
loope
xchg
sub
mov
or
fisubl
in
mov
inc
stos
jns
cmc
push
dec
fs
dec
jge
fidivs
ds
sbb
notl
repz
leave
cmc
das
lahf
sub
xchg
addr16
sbb
mov
nop
jo
mov
call
push
mov
fxam
add
xor
mov
mov
mov
incl
fdivl
cwtl
push
testl
xchg
aad
popf
xchg
repnz
loop
into
cwtl
pop
add
mov
aam
shrb
jge
fisttps
mov
and
xchg
in
aas
lods
nop
mov
inc
and
insb
rolb
out
outsl
inc
or
clc
jnp
stos
cli
faddl
pushf
lods
das
inc
inc
out
loop
pop
ljmp
fwait
mov
pop
jle
push
lret
pop
leave
cmp
sbb
sbb
xor
jecxz
cs
dec
dec
rcrl
ltr
jae
sbb
loope
or
sbb
xchg
jae
xlat
repnz
jle
xor
nop
aaa
dec
push
add
hlt
cmp
cltd
xchg
push
sub
xchg
xor
in
pop
dec
in
xchg
add
sahf
jle
inc
imul
jg
dec
ljmp
mov
cwtl
icebp
mov
fs
fdiv
fwait
lods
jmp
test
std
or
xchg
popf
mov
mov
mov
lock
xchg
add
dec
inc
mov
scas
in
lret
hlt
xchg
ss
mov
jns
jmp
cmp
push
xor
and
iret
or
imul
push
mov
mov
imul
add
repnz
shr
scas
pop
pushf
iret
mov
or
neg
loopne
fisubrs
jg,pt
sbb
xchg
jmp
jno
imul
sbb
call
xchg
cmp
iret
mov
in
xchg
je
iret
pop
cmp
idivb
xchg
sub
neg
iret
int3
jns
dec
xchg
int
pop
fbstp
jo
es
mov
loop
in
jno
jl
jnp
je
jg
enter
or
pop
adc
adc
xchg
mov
cs
mov
jns
and
scas
outsl
rcll
cli
and
add
lods
mov
add
shrl
pop
out
and
push
int3
adc
adc
sahf
movsb
push
inc
inc
sbb
pop
pop
addr16
call
mov
cmp
dec
and
inc
pop
push
xchg
pop
xor
enter
test
xor
bound
jb
negb
divl
mov
cmpsl
addr16
xchg
movsb
cmp
cmp
pop
sti
inc
imul
in
xchg
insb
pop
out
mulb
lcall
mov
ds
pop
push
push
in
push
and
lahf
xchg
push
mov
mov
loope
movsl
out
cwtl
add
or
out
mov
loopne
sbb
sbb
cld
mov
rcr
or
pop
adc
lret
sbb
add
add
icebp
add
loope
out
test
fidivl
mov
sbb
xor
mov
xchg
repnz
loop
xchg
or
xchg
cmp
testl
lods
out
inc
subl
adc
scas
iret
imul
cmp
jo
xor
loope
xor
call
nop
pop
inc
cmp
out
ds
sbb
and
pop
outsl
int3
out
or
xchg
leave
mov
xchg
cltd
cld
jmp
loop
mov
or
imul
xchg
mov
psubw
adc
or
push
jl
pop
and
hlt
lds
xchg
dec
pop
xchg
lds
aam
and
inc
or
cmp
cmpsl
mov
cmovp
push
xchg
mov
cli
sbb
ret
aaa
dec
jmp
lcall
xlat
jge
lods
in
adc
jg
fildl
ds
rcll
jno
sub
mov
lahf
jmp
add
push
xchg
loopne
rcll
repnz
movsbl
mov
inc
out
jne
dec
pop
cltd
jge
jnp
inc
inc
sub
push
jno
adc
paddd
outsb
jb
jno
test
pop
cli
leave
cmc
test
outsb
mov
pushf
jnp
pop
jmp
scas
mov
ljmp
push
push
dec
fs
lret
insl
cmp
nop
mov
popa
cmpsb
jb
push
out
jae
ljmp
dec
fidivs
outsb
pop
nop
or
mov
sti
into
sbb
repz
mov
mov
in
test
sbb
lahf
popf
call
inc
cmp
adc
pop
jge
cmp
xchg
xchg
pop
mov
and
cmc
and
loopne
into
jns
sub
push
mov
mov
mov
jmp
shll
ljmp
inc
pop
call
fstpt
in
sub
lcall
pop
add
dec
mov
jne
push
cli
lret
lea
test
dec
movsl
mov
push
rcl
xchg
fsubl
dec
or
add
pop
mov
push
sbb
mov
lret
adc
shlb
repz
jle
jne
nop
or
ret
adc
pop
jmp
mov
repnz
jl
orl
nop
call
mov
jne
aas
add
pop
and
mov
jle
or
icebp
cmc
push
rcrb
pop
outsb
and
adc
push
push
fs
dec
es
rcll
cmpsl
adc
inc
mov
inc
pcmpeqd
mov
pop
sti
push
loopne
arpl
out
lock
outsb
into
dec
fwait
push
mov
or
jns
aam
sub
cmc
mov
cmpsb
fimull
orl
bound
fwait
sbb
imul
or
stos
mov
into
add
jmp
pusha
int
jmp
sub
and
in
stos
mov
bound
and
movsb
fistpll
adcl
jle
call
and
fwait
sbb
mov
add
mov
js
xchg
arpl
popf
pop
cwtl
inc
lock
ljmp
or
xchg
dec
repnz
clc
and
orl
aam
mov
mov
sub
and
popf
in
cli
bnd
shll
or
push
scas
imul
pop
into
stos
aaa
xchg
in
mov
mov
sti
inc
sarl
es
push
cmp
sub
and
inc
loop
adc
adc
xor
cltd
mov
xchg
loopne
dec
inc
mov
fiadds
dec
xor
ljmp
ds
repnz
mov
xchg
fidivl
inc
movsb
add
aad
add
inc
and
int
dec
xlat
jb
push
aaa
loop
incb
lea
sbb
std
and
and
movsb
sub
mov
mov
ret
loope
scas
aas
add
jnp
jnp
jno
dec
push
mov
push
out
push
mov
or
pop
push
bound
push
or
in
mov
add
test
add
add
sbb
jnp
lods
sti
xor
inc
adc
in
mov
push
notb
jbe
cld
fisubrs
std
ret
lret
jmp
pop
fsubrl
pop
stos
and
repnz
and
push
fnstcw
enter
stc
lea
movsl
jmp
lcall
lods
adc
jnp
repnz
les
scas
sbb
in
hlt
add
test
cmp
js
pushf
cltd
xchg
jae
push
testb
push
pop
in
imulb
sbb
popf
inc
push
mov
mov
push
out
mov
shlb
dec
stos
dec
scas
xor
inc
mov
out
mov
imul
pop
dec
stc
sub
mov
cmp
xor
insb
jo
push
sub
pop
stc
jae
mov
imul
add
jmp
and
mov
sbb
out
dec
roll
stos
fwait
pop
xor
xchg
jno
dec
mov
call
mov
inc
pop
sahf
in
xchg
or
into
xchg
jg
popa
mov
push
pop
xchg
jl
xlat
repnz
sub
mov
jne
sub
push
mov
test
pop
shrb
test
add
dec
push
mov
add
testl
cmp
in
ljmp
shll
xchg
dec
push
lods
jb
hlt
adc
hlt
jge
jg
mov
sahf
add
into
mov
mov
mov
xorb
push
dec
fcmovnu
shlb
fwait
cmc
ret
jns
sbb
mov
fs
int
imul
or
jo
xchg
in
or
cltd
mov
test
in
loop
lds
adc
or
and
inc
jnp
or
cli
xchg
or
cmp
add
mov
and
insl
lret
adc
inc
js
leave
mov
iret
subb
movsb
fists
and
in
mov
jns
cmp
pusha
pop
push
insb
ss
and
mov
inc
pop
jbe
pop
cli
add
popf
cmc
cld
mov
in
xorl
outsb
fwait
mov
stos
jg
sarb
rcll
and
add
js
mov
aas
pop
inc
mov
out
lret
mov
and
fwait
push
jb
cmp
push
filds
jmp
and
mov
cmp
lcall
imul
cmp
cmp
push
cmp
and
pop
mov
lcall
fwait
andb
in
hlt
scas
jle
lret
rolb
bound
rcrl
push
sbb
fcomip
mov
push
push
inc
and
mov
js
mov
in
mull
and
and
pop
icebp
cs
dec
pop
int3
cmpsl
or
lds
pop
repnz
jnp
push
je
addr16
repz
fxam
frstor
dec
ret
jecxz
adc
cltd
rorb
data16
lods
notl
int
ret
dec
jo
mov
and
sti
inc
sahf
and
dec
sbb
push
divb
and
sub
jmp
xor
inc
les
mov
add
int3
lock
sbb
xchg
mov
jno
mov
push
scas
lods
scas
out
inc
pop
cmpsb
mov
or
cmpsb
leave
push
das
fwait
sysenter
mov
repnz
shll
into
cmp
lock
popa
cmp
inc
je
pop
mov
lods
mull
xchg
ss
outsl
sbb
jae
subb
movsb
out
mov
push
jg
movsb
sub
movsb
imul
sub
or
jge
xchg
push
push
addr16
xchg
sbb
adc
insl
or
jo
pop
mov
dec
or
and
mov
mov
jne
mov
jno
add
divb
inc
or
imul
xor
sarl
shll
outsl
das
loopne
push
jb
outsl
mov
inc
call
push
lods
push
mov
out
lds
and
fmulp
mov
test
imul
fsubs
int
rcl
add
aam
mov
lret
fistl
sub
xchg
loopne
subl
push
iret
sbb
mov
jg
scas
shrl
push
push
pop
insl
repnz
sub
insl
rorb
lcall
lret
pusha
cmp
jp
out
movsl
inc
jmp
mov
int3
add
add
or
jo
adc
repz
cmp
pop
pop
rolb
mov
add
not
xchg
mov
fcomip
inc
mov
pop
jne
cs
adc
sub
test
add
cs
loop
addr16
jns
sti
pop
mov
pop
mov
movsl
mov
cmpsb
movsl
mov
lods
push
imul
sbb
add
popf
idivb
std
ss
jbe
mov
mov
fidivl
pop
mov
in
adc
andb
jno
rorl
arpl
cmpb
add
sbb
push
and
mov
les
cmp
ficoms
push
fs
stos
adc
jo
imul
dec
push
mov
mov
pop
loop
gs
mov
dec
sub
and
loop
xchg
pop
sbb
push
jbe
fdivl
jl
mov
orl
cmp
cmp
and
mov
dec
xchg
shl
les
f2xm1
xorb
or
lods
push
and
or
lea
sub
cs
jb
xchg
add
push
push
je
mov
hlt
jbe
cmp
movsl
lods
mov
out
mov
xchg
int
inc
push
or
mov
mov
and
das
adc
insb
in
int
jno
cwtl
xchg
sub
aam
add
lods
mov
dec
lret
insb
iret
sbb
loope
cmc
ljmp
push
cmp
mov
and
xchg
lret
or
inc
xchg
push
subb
sub
jae
dec
xchg
imull
and
insb
lahf
cld
out
repz
stos
mov
dec
add
aas
repnz
test
rolb
jle
daa
push
mov
in
inc
loopne
mov
mov
adc
shl
ret
scas
mov
int
jmp
cld
xor
leave
imul
mov
cs
jb
mov
loope
xor
or
loop
fists
stos
js
test
pop
jb
loop
cmp
add
pop
xor
lods
push
frstor
add
add
in
pop
mov
sbb
sahf
mov
pop
add
mov
shl
ret
cmp
sub
push
jg
cld
iret
jl
popf
sbb
push
lcall
sbb
jns
lods
dec
dec
clc
orl
dec
aam
mov
jl
lea
mov
mov
xchg
push
mov
mov
and
jmp
aaa
int3
or
imul
push
jno
adc
mov
nop
fimuls
pop
test
cmpsb
dec
or
leave
push
or
inc
xchg
mov
cmp
jge
loop
jo
jae
and
rolb
mov
aam
dec
xchg
test
jne
jp
add
inc
or
lds
xor
call
push
and
imul
out
pop
cmp
add
mov
jbe
in
gs
adc
int3
ret
jno
outsb
fmuls
scas
jnp
adc
jns
xchg
xchg
jnp
stc
inc
pop
imul
xchg
mov
push
insb
inc
and
test
int3
lods
add
inc
fmull
arpl
cmpsl
pop
in
loop
jnp
mov
jmp
cltd
jle
mov
dec
cmp
push
cmpsl
mov
jnp
iret
and
inc
lods
insb
xchg
pop
bound
lret
leave
in
aas
cmp
pushf
and
push
mov
scas
add
mov
sahf
or
fwait
es
xor
scas
jmp
xor
or
aaa
jg
ja
pusha
imul
mov
rol
mov
add
dec
mov
xchg
pop
add
sti
addr16
sahf
xor
mov
mov
in
aad
les
xor
xlat
inc
cwtl
jmp
lds
aam
je
and
jae
push
ss
mov
les
push
adc
jp
push
and
xchg
push
aam
hlt
pop
mov
imul
ss
fsubs
pop
and
sarb
pop
inc
inc
sub
outsb
sub
mov
test
sbb
dec
iret
push
icebp
mov
test
or
popa
negb
lods
scas
cmp
inc
push
cwtl
lock
or
imul
scas
mov
xchg
test
andl
xchg
sub
push
or
movsl
mov
xor
mov
xorb
mov
rcrl
mov
nop
dec
mov
push
jp
pop
scas
jno
test
out
adc
jl
cmp
jbe
cmp
inc
jp
mov
divb
ret
xchg
mov
mov
out
adc
jmp
pushf
jl
mov
fs
repz
pushf
mov
and
sbb
dec
cmp
mov
mov
xor
imul
sbbb
sbb
roll
mov
mov
and
aad
std
das
sbb
pop
xorb
fyl2x
repz
mov
mov
pusha
xchg
cmp
int
xchg
mov
jecxz
popl
jne
mov
jo
jg
inc
push
adc
xor
lds
test
mov
add
xchg
inc
ret
or
jge
rcrb
out
jnp
int3
xchg
orl
je
mov
inc
pop
cmpsl
cmp
sbb
std
xor
add
std
dec
mov
pop
adc
xchg
cmc
cmp
aaa
btr
pop
loop
stos
adc
mov
mov
inc
xchg
xlat
mul
xchg
clc
scas
pop
ljmp
cwtl
cmp
dec
repz
push
movsl
xchg
lods
insb
insb
lock
mov
insl
cltd
and
cmc
hlt
cmpsl
cmp
ds
mov
stos
add
jmp
xchg
mov
push
je
mov
pop
subl
imul
or
or
xor
lea
leave
cmp
stos
xor
xor
cmc
pop
sbb
push
jecxz
out
xchg
mov
cli
in
dec
punpcklwd
mov
daa
loopne
std
sti
test
pop
inc
mov
mov
jecxz
adc
sbb
mov
and
scas
dec
iret
loope
inc
test
pop
xchg
cwtl
lock
jnp
add
dec
mov
dec
in
adc
and
push
adc
mov
dec
push
sahf
cmp
jecxz
cmp
fsubr
daa
pop
sbb
lods
bound
lods
data16
push
popa
scas
addr16
mov
sahf
adc
mov
adc
and
mov
add
mov
fldl2e
xchg
mov
icebp
cmp
in
imul
aas
dec
lods
in
or
mov
xchg
sub
bound
inc
hlt
jmp
popf
leave
cmc
aam
test
mov
cmpb
push
pop
cmp
jb
out
xchg
mov
insb
cltd
stc
adc
jns
test
add
push
das
xchg
dec
adc
insl
jmp
hlt
jl
xor
dec
frstpm(287
mov
inc
cmp
xor
pop
inc
jle
je
or
push
sahf
sub
in
mov
xor
dec
stos
push
sub
loopne
xchg
imul
aas
mov
pop
xchg
and
add
mov
mov
bound
rclb
test
xor
adc
sub
xor
lea
adc
in
xchg
mov
xchg
loop
cltd
mov
cmp
fs
inc
and
xchg
imul
or
sbb
push
mov
or
mov
ficomps
sub
pusha
daa
cmp
rorb
adc
rcrb
inc
xchg
enter
nop
fdivp
pcmpeqb
ficompl
inc
mov
lods
in
pop
cwtl
dec
movsl
loope
mov
movsl
or
cwtl
cwtl
lods
lods
mov
xorb
and
cmpsb
lret
mov
add
cli
mov
stc
out
fcomp
pop
mov
sbb
sbb
out
ljmp
cmp
lcall
lahf
dec
out
cmp
dec
imul
scas
outsl
xor
arpl
scas
insl
cld
xchg
mov
dec
lods
fisubrl
push
fcompl
add
fldl
fwait
int3
lods
cmp
xlat
inc
xor
arpl
enter
movsb
pop
sub
loop
mov
std
movsl
mov
sbb
mov
fldcw
mov
inc
adcb
jnp
test
cmp
xor
popa
sbb
pop
rol
pusha
daa
dec
push
and
jp
negb
mov
mov
mov
dec
aaa
sti
rolb
push
add
inc
push
or
push
xchg
pop
xor
adc
out
add
ret
push
sbb
ds
iret
imul
imul
mov
clc
rol
adc
cmpsl
mov
mov
xchg
je
leave
js
inc
inc
mov
mov
sbb
cltd
mov
dec
shll
jb
leave
xor
mov
mov
nop
xchg
xor
frstor
loope
xchg
cwtl
adc
ljmp
cmpsl
and
jo
xor
and
loopne
adc
loope
inc
pop
int
cs
mov
hlt
lret
lcall
push
inc
xchg
rcrb
in
pop
fdivrl
movsl
cwtl
je
sub
popf
and
or
sub
and
arpl
mov
push
mov
pop
mov
clc
mov
lea
out
jge
and
lret
in
mov
and
jnp
xchg
adc
fs
fs
mov
out
lret
push
cmp
pop
pop
inc
mov
dec
push
stos
sbb
repnz
dec
sbb
out
xor
sbb
lahf
loope
mov
push
aad
pop
addps
pop
cmp
jae
sub
mov
loop
ret
add
xchg
mov
mov
mov
imul
int
je
jge
adcb
shr
fs
jl
jle
xchg
aam
in
pop
inc
ja
jl
imul
and
inc
dec
je
popa
push
sti
cld
hlt
sub
out
and
sbb
outsb
inc
xchg
nop
outsl
popa
cs
jle
add
and
cmpsl
ficompl
fcoms
cmpsb
dec
and
call
cmp
xchg
and
fwait
or
sbb
xor
adc
insl
cmpb
aad
lock
rol
repnz
dec
pop
mov
cmp
aaa
inc
arpl
repz
xor
push
sub
add
inc
jbe
shll
dec
or
sbb
fmull
test
mov
test
xchg
je
pop
ds
add
or
jnp
nop
lods
sahf
aam
outsb
push
cmp
and
out
cltd
ss
aaa
xor
fimull
adc
insb
sbb
outsl
jmp
cmc
mov
into
cmpsb
inc
cmpl
stos
aad
push
mov
sub
xor
inc
push
pop
jne
inc
fidivrs
mov
insl
es
sbb
pop
int
faddl
jne
cmpsb
mov
cmp
into
clc
sarl
inc
or
in
mov
cmp
xchg
fmuls
in
clc
pop
or
shll
into
push
test
lock
arpl
xor
mov
and
push
sbb
push
mov
xor
or
xchg
push
mov
mov
push
xchg
fwait
cmp
xor
mov
adc
cmp
out
push
dec
adc
inc
lea
imul
aam
dec
out
push
mov
pop
adc
adc
lcall
popa
scas
aaa
mov
pop
and
xor
xor
add
fildll
addl
xchg
fbstp
cld
pop
jmp
sti
cld
mov
mov
aam
xchg
fadd
insl
fisttpll
lret
icebp
pop
cmpsl
sti
cmc
and
add
pop
sbb
inc
into
sbb
mov
add
cs
je
stos
sbb
mov
dec
outsl
jl
fildl
jo
inc
lods
out
out
add
and
push
pushf
subb
sub
jns
in
insl
stos
push
insb
filds
ja
fadds
pushl
fs
push
mov
lret
std
add
or
leave
cmp
sbb
pop
les
out
adc
xor
mov
scas
xchg
test
hlt
or
std
imull
fs
mov
jno
in
xor
mov
push
sub
ror
mov
iret
cli
jge
push
xor
ja
adc
dec
ret
or
xchg
jp
and
lahf
je
in
adc
or
nop
push
fistps
inc
orl
lods
dec
adc
adc
inc
xor
pusha
jae
cmpsl
jl
outsb
inc
pop
out
pop
cmpsb
ja
mov
dec
add
outsb
dec
leave
clc
sbb
imul
in
or
sbb
add
xor
xchg
fldt
xchg
mov
push
mov
push
jg
sbb
mov
out
xor
mov
sarl
ror
xor
push
ret
cmpsb
sbb
sar
test
mov
cmp
data16
divb
test
adc
adc
icebp
scas
pop
jecxz
or
jge
popa
pop
push
jg
in
ret
fcomps
sarb
pop
stc
pop
xchg
mov
xor
popf
inc
dec
cmpsb
jno
adc
pop
jo
test
mov
popl
fists
push
pop
fnstsw
and
out
mov
push
cmp
pop
mov
sub
adc
stc
and
cmp
xchg
popa
push
cmpsb
pop
mov
mov
out
aam
pop
pop
dec
xchg
cmp
and
les
mov
test
rorl
dec
popf
loope
pop
leave
orl
push
inc
shlb
inc
pop
cmp
lahf
jae
or
fdivrl
xchg
mov
arpl
mov
movsl
xchg
pop
mov
and
jle
aam
iret
push
adc
xor
xchg
in
fisubrs
cmp
push
out
loopne
int
hlt
jae
jb
mov
repz
pop
jp
in
out
das
and
xchg
cmp
in
lods
in
mov
or
xor
jge
lcall
mov
mov
push
cmpsl
xor
sarl
nop
xlat
int
push
push
mov
cmpsl
mov
cs
cmp
mov
jl
mov
hlt
scas
ja
jmp
xchg
js
adc
jle
mov
faddl
cltd
inc
cmp
add
psubq
sub
out
fistpl
and
fldcw
movsb
dec
test
adc
jno
or
cmp
sub
xlat
adc
jb
xchg
cs
mov
mov
mov
mov
and
xchg
cltd
std
push
or
sub
std
push
leave
push
pusha
stos
cmp
repz
bound
xchg
and
lods
adc
pusha
mov
outsb
mov
sti
pop
mov
lock
adc
and
pop
dec
mov
inc
mov
scas
jae
movsb
jg
mov
pop
out
jg
arpl
insb
clc
subl
adc
aam
arpl
mov
mov
and
je
inc
pop
clc
pop
aas
jnp
push
push
sti
test
pop
imul
push
jmp
hlt
adc
cmp
test
es
addb
hlt
jmp
mov
inc
cmp
mov
cmpsl
adc
cmp
lcall
insb
and
jle
fldt
ja
jmp
clc
fnstsw
push
xchg
ret
imul
sub
and
inc
insb
cmc
xor
movsl
pop
sbb
insb
movsl
mov
and
inc
adc
ret
call
addb
and
and
fadds
adc
pop
add
arpl
lret
clc
pop
mov
addl
pop
iret
add
dec
test
fnstsw
leave
jnp
sub
xor
xor
add
bound
in
sti
ja
fmull
in
ret
cltd
daa
cwtl
jle
sub
push
lahf
pusha
leave
add
lahf
rorl
sub
jmp
dec
data16
pop
nop
mov
cmpsb
shlb
push
mov
cmp
addr16
or
inc
add
xor
push
pusha
add
js
xchg
cmp
push
fwait
ret
adc
cli
insl
outsb
cmp
jl
das
ss
mov
or
hlt
pop
in
push
int
dec
ss
sub
sbb
inc
xchg
xlat
addl
adc
fwait
pushf
mov
xor
out
movsb
jl
lods
fcomps
sbbl
and
jge
ret
mov
push
mov
jl
sub
ret
popf
sub
hlt
dec
addr16
push
mov
inc
push
stos
mulb
jmp
test
xor
cmp
js
lock
icebp
scas
orl
jl
mov
push
nop
xor
fs
rclb
jno
cld
shrl
les
cmpl
sbb
fucomp
sub
add
aad
sar
mov
cld
clc
popf
cmp
lret
adc
fidivrs
jle
test
test
jae
dec
and
int3
push
scas
insl
dec
lcall
mov
sub
mov
sub
sbb
jecxz
jne
in
outsb
add
and
jo
fsub
subl
out
and
push
dec
repz
push
pop
and
dec
push
push
xor
in
xlat
xchg
dec
mul
dec
nop
pop
inc
mov
subb
popf
push
lea
out
lock
sbb
adc
sti
xor
cmpsl
mov
xchg
andl
lahf
out
imul
or
xchg
or
push
jo
popf
adc
adc
in
and
push
call
push
sbbl
xchg
dec
xchg
leave
inc
scas
stos
push
addr16
nop
test
jno
cmpsl
cmp
shrb
ficoml
and
out
enter
push
cmp
fmull
xchg
rcr
mov
sub
dec
fisubrl
or
into
jecxz
cmpsl
js
jno
mov
cmp
xlat
cmp
inc
addr16
lret
jge
dec
add
nop
popa
out
push
inc
sub
sarl
cld
xor
cmp
in
rorl
mov
lea
adc
cwtl
test
push
fimuls
stos
add
in
mov
cmc
aad
push
out
movsl
or
or
scas
sub
pusha
jnp
push
loop,pn
sub
int
lods
adc
stc
xchg
mov
rcll
test
into
sbb
pop
pop
or
inc
push
add
clc
cmpsb
xchg
int3
ja
lock
bound
push
scas
cmc
sub
daa
push
mov
out
repz
push
mov
or
cmp
jmp
and
movsb
mov
or
je
add
adc
rep
arpl
cmp
sbb
mov
lds
pop
push
sahf
cmp
sti
stos
mov
jno
dec
aaa
jg
inc
call
ja
aaa
gs
fidivl
insl
cmp
out
push
addl
mov
cmp
jmp
mov
aad
mov
arpl
jmp
daa
bound
jae
test
mov
sbb
mov
push
iret
or
paddw
rorb
rolb
in
push
stos
mov
loop
add
rep
dec
bound
fisubrs
dec
sti
jb
les
jmp
or
or
cltd
xor
test
lret
inc
xchg
dec
or
push
ret
cmp
sub
aad
imul
fwait
jl
inc
aam
dec
leave
push
leave
or
int3
mov
inc
aas
or
jle
fldl
adc
mull
sarb
sbb
fnstcw
ss
jg
adc
xchg
cmp
flds
mov
add
repnz
insl
loop
push
ret
mov
inc
jecxz
ljmp
sbb
loope
jg
jo
mov
cwtl
je
repnz
scas
test
jae
adc
loop
pop
and
dec
cmpsb
lahf
mov
mov
xchg
or
ds
sbb
stos
xchg
add
aaa
repnz
or
fwait
mov
pop
adcb
movl
mov
xchg
ja
lcall
ja
outsl
add
jbe
push
cmc
jo
insl
scas
xor
sub
and
xor
adc
dec
int3
out
sub
or
jne
inc
mov
jb
cmp
mov
pop
loope
popf
jo
lret
in
cmp
cwtl
movsb
mov
pop
adc
out
stos
loope
mov
xor
enter
lods
data16
fmul
out
or
je
test
or
enter
sub
out
sub
or
dec
dec
mul
cmc
test
out
in
in
push
cli
push
mov
stos
sub
loope
cmc
xor
lcall
lret
shrl
push
leave
insl
int3
mov
sub
aad
fimuls
shld
insl
or
outsl
adc
jmp
mov
popf
pop
rcll
sub
sub
ret
test
cmp
dec
or
imul
aad
xlat
jmp
sbb
xchg
xchg
cmp
xchg
dec
inc
cmp
addr16
push
mov
ljmp
pop
sbbb
push
shr
stc
std
shr
test
jnp
loop
enter
out
ljmp
jmp
and
xor
loope
sbb
enter
call
aam
dec
add
aam
sbb
dec
ficompl
ja
loopne
sbb
inc
add
pop
loop
outsb
pop
jecxz
mov
shll
xchg
push
int3
fsubrl
in
insl
mov
jae
and
mov
mov
adcb
aas
ljmp
testb
mov
xor
push
xchg
mov
call
pop
daa
fistpl
out
and
mov
daa
shll
jnp
test
leave
clc
lock
push
sti
shll
xchg
jl
ret
cmp
out
push
inc
shlb
mov
imul
or
cli
mov
test
sub
jbe
sbb
sub
inc
cwtl
push
bswap
push
cmp
leave
popf
jl
movsl
add
push
jo
mov
mov
add
adc
inc
or
or
sbb
into
xor
andl
scas
mov
mov
push
jmp
pop
outsl
out
cmp
mov
aam
cld
mov
ds
cmp
pop
scas
mov
push
push
xchg
callw
xchg
test
xor
and
cmp
cmp
mov
pop
andb
xchg
push
mov
or
xor
pop
push
lds
dec
add
aam
cwtl
enter
push
fcomip
jns
inc
dec
mov
push
adc
out
pop
xchg
fdivs
lret
mov
and
mov
ss
dec
mov
pop
jmp
jl
mov
nop
or
fadds
adcb
movsl
mov
scas
pushf
fidivl
popl
push
push
push
adc
jno
sbb
inc
pop
add
mov
jg
sub
pusha
dec
lret
sub
imul
lret
mov
lahf
fiadds
inc
jno
mov
sbb
mov
js
xlat
push
inc
jecxz
shlb
in
push
sub
imul
mov
lock
mov
insb
int
adc
sbbb
ffreep
inc
sbb
adc
divb
in
decl
andl
jo
imul
mov
dec
mov
cmp
cmpsb
aad
adc
cmpsl
xor
jnp
or
scas
bound
addr16
outsb
stos
adc
mov
repz
orl
imul
mov
insl
lock
pop
mov
subl
add
stos
and
jne
inc
cmpl
lea
dec
loopne
sbb
addr16
xchg
out
leave
push
out
lcall
insl
adc
ljmp
jmp
sub
mov
dec
in
ret
xor
daa
cmp
mov
fidivrl
repz
ret
dec
daa
jmp
clc
clc
cmp
icebp
notb
dec
rclb
les
divb
out
loop
pushl
ficoms
cmpsb
daa
xor
or
aam
inc
vmwrite
pop
dec
shl
sti
lods
stos
pop
fildll
daa
xor
shll
adc
ja
ret
adc
int
xchg
stc
pop
sbb
inc
adcl
mov
jbe
adc
in
xchg
push
stos
inc
jae
mulb
xchg
xchg
or
jle
pop
outsb
outsl
dec
imul
fcomps
fwait
or
jl
mov
sub
adc
push
jo
dec
loopne
inc
stos
sahf
decl
pusha
cld
mov
push
loope
inc
push
cwtl
imul
iret
xchg
or
test
repnz
sahf
mov
aam
sub
sti
scas
movsl
pop
jbe
fildl
jg
iret
cmpsl
jb
ja
adc
or
js
pop
loope
pop
popa
adc
pop
sub
in
cmpsb
mov
xchg
pusha
mov
insl
js
cmp
and
shl
insb
ljmp
lea
lret
addr16
into
popa
mov
mov
scas
push
les
mul
adc
sbb
pop
outsl
dec
shll
inc
mov
mov
push
or
mov
push
mov
mov
cwtl
dec
insl
xor
jbe
das
stos
pop
ss
and
popf
insb
lahf
repnz
gs
mov
ljmp
xor
sub
test
rcrl
and
adc
mov
mov
mov
mov
shll
ret
and
enter
pop
pop
loope
push
xchg
popf
xchg
inc
lcall
fdivr
pop
jecxz
and
xlat
push
dec
fs
push
js
push
push
sbb
inc
mov
cmp
dec
inc
xor
push
mov
repnz
daa
lea
fnstenv
mov
test
dec
ret
pop
outsl
or
mov
mov
stos
pop
bsf
int3
int
inc
xchg
jne
inc
fwait
out
xlat
ljmp
mov
cmp
sbb
inc
jae
mov
iret
ss
repz
xor
jnp
fwait
lret
outsl
shrb
xorl
rorb
mov
loope
fwait
jmp
in
lock
adc
cmp
es
mov
push
mov
adc
in
pusha
orb
xorb
repnz
sbb
xchg
jl
xchg
in
das
and
and
in
cwtl
add
mov
inc
outsl
or
pop
xor
add
repnz
jnp
add
test
rorb
es
adc
jnp
aam
hlt
add
push
sub
jno
mov
pop
xlat
inc
in
dec
add
icebp
pop
fxch
jnp
into
xchg
pop
test
pop
add
in
scas
fptan
xstore-rng
cmpsl
subl
in
aas
rorl
into
gs
sahf
rcl
into
shll
data16
ds
jne
out
loope
sbb
cmp
divb
add
dec
mov
inc
out
cs
mov
fwait
aam
add
cmp
aam
enter
pop
sbb
fs
push
mov
fimull
and
sahf
push
push
repz
or
pushf
push
jle
jbe
add
lcall
adc
mov
mov
pop
out
out
nop
shlb
pop
dec
in
dec
xchg
addr16
and
fsts
push
aam
push
outsl
xchg
jmp
lods
pop
and
push
int3
dec
movsl
mov
nop
push
imul
scas
and
cmp
mov
in
imul
dec
dec
sbb
test
sbb
pusha
fdivrl
lret
movsb
scas
addl
in
cmp
dec
fldenv
push
and
arpl
faddl
rorl
fists
stc
or
dec
sbb
jb
mov
jecxz
popf
add
jne
and
pop
mov
and
fbstp
mov
sub
std
enter
jmp
stos
push
imul
mov
dec
cmp
lods
test
sub
out
push
aaa
movsb
int
pop
push
xchg
iret
jo
cmp
out
das
push
fnstenv
push
add
dec
js
mov
in
jno
frstor
pop
dec
push
andb
mov
stc
fwait
adc
icebp
in
pushf
jae
push
sub
pop
xor
add
xor
ror
insl
shl
sarl
sbb
gs
jmp
adc
ljmp
jecxz
add
mov
sbb
fcomps
inc
repz
adc
scas
lods
cmp
mov
popf
cmp
das
je
push
push
mov
lock
adcb
push
and
dec
add
scas
in
test
dec
pop
fbstp
cli
cmp
ss
mov
mov
je
add
int
cmpsb
pop
jl
cmpsl
shl
int3
mov
xchg
or
mov
pop
inc
adc
push
sbb
push
sub
cmp
orl
push
loope
and
into
add
adc
out
fnstcw
cmp
aam
sub
movsl
dec
mov
push
lahf
or
divl
mov
xadd
enter
push
adc
icebp
adc
dec
enter
lods
or
loop
int
jecxz
pop
jmp
jmp
or
xchg
stos
test
repnz
jns
outsl
dec
cmp
fldt
add
mov
or
mov
sub
xor
test
repz
xchg
xchg
add
jbe
mov
pop
sub
js
jmp
jae
cmp
jae
shl
dec
ljmp
xchg
jnp
sbbb
sbb
adc
add
ret
outsb
pop
sbbb
scas
mov
lea
sbb
jmp
int
cmpsb
push
insb
ss
mov
jl
fisttpll
mov
push
xchg
or
sbb
or
cld
add
xchg
mov
xor
inc
out
adc
sub
loope
lds
stos
sub
inc
fnstenv
in
add
push
cmp
iret
xlat
js
jae
mov
xor
dec
push
popf
std
xor
inc
fs
and
or
xchg
cmp
inc
jle
jns
push
jnp
das
lods
sti
lock
aam
sbb
sbb
movsl
aaa
fmuls
std
mov
mov
je
cltd
and
cli
outsb
mov
rorl
xchg
jbe
sahf
inc
cmp
lret
inc
pusha
mov
cltd
incb
dec
pop
mov
jae
lcall
sbb
loopne
jp
orl
push
mov
fbld
xor
mov
push
mov
xorb
jmp
push
push
cmp
daa
add
xor
mov
and
inc
mov
jp
jno
pop
and
cmp
repz
push
test
mov
je
and
xor
jne
popf
xor
aaa
stos
in
or
pop
jmp
fwait
xchg
jo
daa
xchg
xor
sarl
mov
scas
lahf
inc
push
and
lea
jmp
mov
mov
push
int3
add
mov
inc
xor
xchg
cmp
out
push
cmp
sahf
outsb
jbe
bound
das
mov
test
cmp
gs
sub
outsb
call
lea
adc
in
and
fldcw
dec
shl
mov
mov
test
lock
fmuls
scas
sub
mov
mov
push
xchg
xor
jg
in
push
out
ds
dec
xor
fmulp
adcl
cmpsl
inc
add
jp
or
sbb
lcall
dec
xchg
out
sub
xchg
ret
sarb
addr16
cmpsl
xor
dec
jnp
mov
jmp
das
pusha
mov
test
inc
xor
data16
dec
bound
popl
notl
call
pop
pop
pop
mov
test
daa
or
cmp
sahf
add
lcall
add
or
scas
mov
jb
sahf
stc
mov
into
add
clc
mov
jecxz
inc
loopne
xor
xchg
sub
lods
int3
inc
adc
scas
mov
aad
inc
in
cmp
lcall
and
in
aad
cmpsl
inc
mov
sub
mov
and
ja
icebp
jl
lcall
adc
fwait
cld
scas
cmp
shl
sbb
sbb
xor
sub
jne
subl
sub
xor
jge
jae
cli
and
sbb
jb
jmp
ficoml
leave
add
xchg
or
int
add
inc
sbb
push
mov
repz
mov
scas
in
xchg
cmp
jg
movsl
fisubrs
mov
adc
and
icebp
add
pop
jnp
aaa
pusha
push
and
sub
inc
inc
or
xchg
mov
or
mov
mov
jae
fldt
jge
push
inc
inc
xor
or
or
out
push
jno
mov
scas
add
jg
cmpsl
inc
jl
fnstenv
cmp
push
lods
push
ss
loopne
jae
lret
sbb
test
repz
adc
jecxz
xlat
ljmp
adc
xchg
cmp
gs
mov
nop
mov
cmpb
or
lods
push
in
pop
xlat
xlat
sbb
outsb
test
sbb
pop
push
movsb
fs
xchg
push
sbb
iret
mov
xchg
cmc
pop
and
mov
lahf
in
out
fwait
and
lea
mov
insb
fisttpll
fwait
cmp
lods
clc
repz
jnp
push
pop
add
popa
xchg
lret
xchg
ljmp
stc
mov
outsl
pop
fs
enter
mov
and
and
push
outsl
cmp
pop
test
scas
mov
push
mov
jle
mov
fwait
addb
mov
sarb
push
inc
push
cmpb
sbb
into
xchg
cmp
mov
enter
enter
add
cmp
xchg
mov
sbb
xor
movsl
mov
popa
cmc
mov
ljmp
scas
outsb
mov
sub
int
inc
pop
sub
aaa
adc
test
out
pop
lods
out
adcb
push
cmpsb
test
test
mov
lret
popa
subl
sub
in
aas
pop
rorl
fiadds
xchg
jb
sbb
imul
lcall
mov
sub
and
sub
sub
dec
lods
fdivrl
stos
movsb
out
xchg
sub
dec
enter
jnp
or
jnp
and
jo
stc
sub
xor
jns
lods
lea
shl
jae
mov
decl
xchg
jnp
jle
fists
jg
or
popf
dec
leave
inc
pushf
es
lret
dec
stc
or
or
and
clc
lods
in
nop
les
push
add
sbb
dec
xlat
in
insb
mov
fstpl
rorb
cli
cltd
aaa
movsb
xchg
push
sub
or
addl
out
push
mov
pop
pop
xchg
dec
xor
lea
adc
dec
mov
fs
lds
and
adc
ja
mov
lret
xchg
arpl
fidivl
mov
add
adc
add
mov
out
lods
mov
test
xchg
xor
out
out
or
dec
addr16
movb
daa
or
rclb
add
mov
adc
xlat
mov
leave
xchg
xchg
jne
out
sub
pop
inc
fdivs
lcall
sbb
ljmp
xchg
std
es
js
pushf
cltd
mov
lahf
push
test
je
dec
fidivrl
mov
stos
in
cmpl
sub
adc
lret
push
sar
and
inc
in
or
jle
out
loope
jmp
je
sbb
outsb
xor
mov
pop
icebp
sbbl
sarl
or
sahf
sbb
sbb
or
cmp
popw
ficoml
mov
out
push
xchg
or
or
je
test
fs
cmc
add
fmul
shrl
fxch
or
imulb
imulb
sub
mov
adc
shrb
jg
xchg
push
ss
inc
cmp
mov
aaa
inc
xchg
sbb
cld
xchg
push
push
ja
push
cmp
push
cmp
bound
mov
fs
cltd
pop
xlat
push
aam
sub
push
rclb
aad
mov
xor
mov
aaa
stc
je
add
les
stc
jo
shll
dec
sub
sbb
push
adc
in
xor
mov
push
mov
cmp
lods
imul
dec
push
adc
orb
jecxz
mov
mov
xchg
xchg
fbstp
jmp
pushf
xlat
push
sbb
lahf
fs
jg
cmc
ljmp
push
jne
lds
xor
xor
stos
arpl
testb
cmp
movsl
pop
std
inc
sub
lods
pusha
xchg
in
out
negb
dec
aas
jno
cmp
mov
fidivrl
sub
push
lret
fcoms
outsb
shlb
popa
movsl
pop
lods
jge
leave
sbb
mov
iret
lods
inc
mov
mov
add
ljmp
popa
leave
out
xor
push
cmp
mov
sbb
fstpt
lods
out
mov
mov
repnz
out
ds
jp
cmp
mov
pop
frndint
push
push
clc
es
pop
mov
lds
pop
sub
sbb
shl
stos
cmp
addl
mov
lret
test
fwait
das
mov
xchg
cld
out
xchg
scas
fsts
jge
mov
es
lods
jecxz
mov
ss
lret
pop
mov
mov
xchg
xor
xchg
cwtl
je
dec
daa
pusha
or
mov
jne
sub
jg
jp
mov
shll
xor
ffree
cmpsl
mov
push
je
dec
mov
jmp
inc
add
rcr
sbb
mov
out
xchg
xor
imul
test
bound
imul
pushf
gs
add
aam
bound
xlat
jnp
pop
shll
push
es
iret
mov
xor
les
ja
int3
adc
mov
dec
or
jno
sbb
into
adc
cmp
xlat
xchg
js
sbb
popa
inc
out
lods
adc
pop
or
sub
test
jo
lcall
inc
inc
std
loopne
cs
insl
mov
cmp
push
lock
mov
xchg
fnstcw
fs
mov
push
push
daa
or
data16
inc
add
push
dec
xor
mov
adc
out
cmp
mov
in
rolb
loopne
xchg
mov
repnz
cmp
scas
mov
lahf
mov
mov
jmp
xor
lahf
inc
fdivl
mov
pop
neg
mov
push
mov
lret
mov
mov
add
popa
test
outsb
sar
mov
jb
jl
fcoml
sbb
xor
pop
cmp
cltd
inc
sbb
xor
rcr
dec
sbb
clc
sub
imul
or
dec
mov
mov
lea
push
test
xrelease
outsl
rcll
add
roll
dec
sbb
xchg
xchg
shrl
ficoms
sbb
xchg
mov
add
mov
in
adc
jg
push
and
int3
jmp
or
icebp
lock
push
jnp
imul
xlat
out
mov
sbb
jecxz
sbb
adcb
jns
and
push
enter
test
jl
sub
push
or
cmp
jbe
mov
xor
push
mov
and
rol
inc
pusha
test
ds
jne
push
loop
repz
fwait
jle
mov
cld
mov
mov
test
ja
xchg
mov
mov
lahf
push
int
scas
icebp
inc
fbstp
xchg
ret
lock
sub
adc
dec
ds
out
jb
subb
jecxz
dec
int
mov
test
mov
fwait
jno
cmp
loope
loopne
xchg
mov
mov
adc
push
in
out
aaa
mov
add
sbb
mov
dec
sub
mov
pop
pop
insb
jb
adc
mov
mov
jp
addr16
xchg
mov
xlat
hlt
push
add
inc
sbb
add
hlt
mov
inc
xor
inc
repz
pop
mov
inc
fadds
aas
data16
xchg
les
sub
int3
mov
pop
cmpsb
push
cmp
add
das
adc
mov
repnz
inc
cmpsb
testl
lahf
jp
jno
ret
jmp
mov
dec
mov
imul
or
pushf
mov
aam
push
adc
add
fidivs
fucomp
add
out
lret
push
pop
jle
out
xor
out
and
std
loopne
mov
mov
add
pop
mov
rorl
sarl
push
ficoml
jge
ja
xor
push
inc
push
lea
push
loop
mov
add
rol
dec
push
rolb
mov
leave
sti
cmp
or
adc
aad
inc
and
sub
mov
repnz
add
xor
int3
xor
push
push
loope
aaa
push
inc
imul
fbstp
movsl
dec
add
and
jmp
in
loopne
hlt
jne
ja
lcall
stos
jns
int
dec
mov
outsb
mov
in
rolb
dec
ljmp
mov
or
sbb
ljmp
inc
sub
dec
inc
cmp
call
xchg
lods
ficoml
mov
cmp
adc
mov
adc
shlb
fs
jmp
xor
aam
xchg
push
mov
aad
cwtl
mov
dec
jmp
dec
xor
sub
int
add
add
shlb
call
out
xchg
lret
insb
repnz
xor
test
xchg
lcall
sub
xor
mov
pop
lcall
mov
or
in
data16
push
mov
ss
test
inc
pop
fistpll
dec
cld
add
out
vmovhlps
in
mov
mov
out
in
int3
push
adc
mov
js
inc
shr
mov
sbb
or
or
outsl
xor
mov
cmpsl
cmp
xchg
aaa
and
outsw
mov
adc
jne
roll
xchg
in
aad
fildll
and
dec
in
cli
and
mov
ja
jns
and
data16
loop
ja
insb
sahf
dec
or
out
icebp
inc
leave
pop
into
scas
fwait
push
push
jp
mov
jnp
je
movsl
sub
shll
rcr
mov
stos
mov
in
shlb
movsl
inc
push
jns
adc
mov
push
imul
dec
fwait
int3
or
fcmovnb
std
sahf
bnd
cld
std
test
or
dec
mov
inc
and
pop
mov
shr
std
xchg
inc
in
in
addr16
nop
pushf
scas
ds
cld
les
iret
xchg
push
lret
std
mov
ja
jl
push
idivl
sub
sahf
lcall
jmp
or
jl
or
mov
bound
pop
adc
cld
shll
or
stc
adc
stos
jle
sbb
or
scas
jecxz
mov
and
ja
jb
inc
pusha
loope
jnp
cmp
jbe
cwtl
xchg
xchg
mov
pop
cmpsb
push
bound
or
sub
inc
das
jge
gs
js
pusha
popa
fld
ss
xchg
mov
xor
adc
aas
outsl
movsl
push
mov
xchg
fistl
cwtl
clc
je
andl
rcll
push
ret
adc
push
jmp
cmpsl
mov
mov
sub
in
dec
mov
in
ret
ucomiss
lret
sbb
lret
repz
inc
pop
mul
shlb
xchg
or
fisttpll
movsl
mov
sub
jmp
or
mov
add
jl
adc
cltd
loope
mov
dec
shrb
dec
xor
and
cmc
shr
out
ret
insl
ret
arpl
addr16
mov
push
mov
xchg
jl
mov
push
loop
sbb
loop
push
daa
sbb
movsl
pop
adcl
pop
dec
cwtl
dec
lret
cmp
cmp
loop
and
call
pop
push
lock
push
cmc
adc
bound
sub
dec
jge
pop
push
jl
xor
mov
cmp
aaa
mov
dec
mov
pop
in
dec
js
cmc
mov
fs
jne
test
std
aas
lahf
int3
jp
jmp
in
xchg
xchg
pop
adc
sub
pop
pop
mov
pushf
fsubs
jge
in
push
xor
out
enter
ljmp
add
push
sbb
paddusb
pop
shrl
xor
test
mov
sbb
mov
pop
cmp
in
mov
repnz
and
mov
jle
je
mov
xchg
fbstp
jge
insb
sub
call
jbe
lahf
lds
and
mov
fiadds
loopne
jge
shrb
xchg
out
add
or
pushf
inc
lds
push
inc
pop
mov
sbb
dec
repnz
sti
outsl
mov
sbb
fwait
jne
xor
push
jg
lods
shll
cltd
idivl
or
fwait
xorb
mov
insb
sub
jl
dec
sbb
mov
aaa
and
js
ljmp
scas
call
sti
jle
jl
mov
mov
inc
aad
dec
sub
lahf
or
loop
push
mov
ss
in
daa
lock
mov
sub
sub
mov
pop
push
jg
jp
iret
pop
push
ss
mov
mov
sub
pop
out
xchg
cmpsl
cld
popa
cmp
call
pop
fisubrl
fimull
mov
sub
cvtps2pi
call
lock
mov
loopne
jb
mov
inc
pop
addr16
ds
cmc
sub
push
movsb
cmp
into
mov
push
mov
icebp
pop
jecxz
jge
int3
shr
dec
rclb
mov
popf
cmc
repnz
inc
punpcklbw
jno
inc
jno
xlat
pop
out
fdivs
xorb
fs
scas
test
insb
jl
cmpl
xor
push
pop
push
mull
jbe
inc
mov
add
cli
mov
data16
std
adc
das
popf
daa
lahf
or
repnz
xor
sub
adc
adc
pop
insl
pop
flds
mul
fcom
cli
cmp
popf
orb
cmpsb
sub
stos
mov
lea
scas
lahf
dec
adc
and
xchg
shrb
xor
je
call
xor
ret
mov
add
inc
push
std
aam
jae
insl
mov
fcomps
xchg
mov
push
xchg
push
pop
cs
data16
fs
pop
ljmp
scas
enter
mov
xchg
ret
test
jns
push
or
cmp
popf
fcomi
cli
sub
scas
fistpl
adc
lock
popa
cmpsb
mov
cmpl
subl
loopne
cmp
in
das
movsb
mov
cld
cli
pop
sub
pusha
sub
dec
imul
ja
out
cmp
in
in
mov
xor
push
leave
fdivr
aad
mov
or
adc
sbb
sbb
pop
or
jmp
cs
sbb
mov
outsl
jmp
aas
aad
ficomps
fsubs
mov
dec
xor
add
mov
lret
fmuls
cmp
lock
adc
fmul
pop
daa
sti
cmp
outsb
or
cltd
rclb
jecxz
push
fsubs
mov
and
lret
push
dec
mov
sbb
hlt
pop
sub
call
jae
jecxz
push
mov
addr16
testb
mov
cmpsb
das
insb
mov
mov
sub
mov
nop
hlt
xor
xor
push
or
mov
jp,pn
xchg
imul
jnp
int3
jmp
movl
push
fdivrl
or
or
lock
add
out
fbld
popf
sbb
mov
int3
mov
and
pushf
pushf
mov
or
pop
mov
cmp
sub
notl
shlb
sub
or
js
pushf
xchg
sahf
sbb
push
push
jp
cmp
jg
leave
and
cmpsb
scas
inc
in
adcl
cltd
pop
call
cmp
and
xchg
pop
or
xchg
outsb
sbb
push
xor
mov
loop
aas
xchg
out
mov
pop
pop
scas
or
pop
test
inc
dec
movsb
sahf
push
xor
addr16
xchg
mov
mov
out
cmp
addr16
pop
mov
sub
mov
mov
ret
inc
inc
sahf
jl
in
push
cli
inc
xlat
fidivs
leave
shr
imul
or
sbb
imul
in
dec
sub
in
dec
mov
test
out
push
pop
and
push
and
adc
insl
jb
rcrl
mov
mov
ljmp
mov
loop
loopne
int
das
push
dec
jne
jle
mov
add
out
pushf
xor
scas
shrl
leave
push
scas
xchg
loopne
sub
xlat
mov
loope
mov
dec
ljmp
fsubrs
shrb
jns
ret
mov
sbb
and
leave
loope
mov
cmp
addr16
popl
xchg
stc
sbb
push
out
aas
add
pop
push
imul
adc
push
jp
or
mov
shlb
jae
sti
std
push
lods
out
cmpl
push
and
loope
dec
xor
loopne
shlb
inc
fisubs
fmull
call
sbb
shr
jns
jp
out
into
xchg
or
popl
add
fsubrs
outsb
fildll
imul
ja
inc
sahf
repz
cmp
sarb
in
dec
sub
sub
mov
add
or
adc
test
adc
sbb
push
loope
and
and
ja
cmp
add
jne
js
sub
std
outsb
adc
xor
mov
jae
add
mov
jl
stos
push
push
xchg
xor
dec
xor
cmp
aam
pop
or
cltd
cmpsl
ficoms
mov
pop
jmp
test
lock
jnp
mov
insl
outsl
outsb
or
iret
pop
push
pop
loop
icebp
inc
or
cmpsb
and
mov
test
clc
enter
mov
ss
loop
movsl
nop
sbb
das
jmp
out
shr
aas
jle
or
jge
sahf
ljmp
scas
repnz
xlat
jmp
lcall
js
out
mov
sarl
cmp
out
sbb
pusha
ret
jle
ret
push
leave
cmc
out
push
jge
fildl
xor
push
and
xchg
test
popf
shlb
mov
sub
xchg
or
jns
loopne
dec
out
xchg
fisttpll
mov
pop
pop
jecxz
movsl
cmp
out
call
in
add
ljmp
push
jne
mov
lods
dec
or
enter
rorb
neg
outsl
jb
adc
arpl
sub
aas
fcomi
cltd
jb
test
fiaddl
cltd
and
shll
jp
cltd
test
das
imul
aaa
mov
pushf
dec
ret
ret
or
test
mov
xchg
inc
test
ret
add
sub
fdivs
mov
xchg
sti
push
testl
mov
test
lret
cmp
xor
shll
es
mov
popa
adcl
inc
pop
and
lea
adc
pop
jg
ljmp
sbb
stc
mov
dec
movsb
daa
sub
or
testl
xor
int
addr16
and
mov
div
mov
orl
pop
inc
and
arpl
jp
cmc
xchg
pop
stc
push
test
mov
xor
cwtl
jmp
fisttpll
outsl
sbb
fstps
mov
jb
dec
and
fisttps
arpl
jp
adc
iret
cmp
mov
ja
mov
stos
adc
sub
scas
mov
xor
aad
adc
leave
xchg
ss
mov
pop
or
sar
pushfw
stc
sub
xlat
int
stos
adc
mov
jnp
cmc
mov
or
and
cmpb
fwait
xor
push
les
test
or
mov
fdivrl
lods
out
inc
mov
pop
fs
loop
sub
mov
mov
cwtl
xchg
filds
lock
ja
cmp
ret
dec
push
stos
pushf
hlt
rcrl
cmpsb
add
push
xor
mov
das
jo
lcall
fabs
inc
iret
pop
push
sub
outsb
add
pop
arpl
fstpt
popa
enter
loopne
in
push
roll
push
mov
mov
andl
ds
cli
push
fs
fadd
ja
sbb
dec
outsl
xchg
xor
inc
nop
icebp
or
jno
mov
cvtpi2ps
cld
dec
jne
pop
add
lret
fnstsw
arpl
push
fwait
xchg
mov
insl
adc
andl
nop
es
cs
mov
pop
sub
xor
out
mov
cmp
vaddsubps
les
inc
push
leave
fsub
pop
pop
icebp
lods
pop
lret
call
pop
mov
test
xor
push
hlt
fcmovb
xchg
int3
test
xor
dec
mov
pop
push
andl
into
push
stos
aam
sub
mov
and
mov
push
ret
sub
insl
or
sbb
mov
sub
inc
and
icebp
and
stc
xchg
mov
call
je
jns
mov
push
xchg
cltd
mov
stos
adc
push
jbe
test
add
lea
je
test
mov
test
in
or
and
mov
xlat
push
sbb
mov
jge
repz
mov
pop
mov
pusha
sbb
mov
aaa
lds
mov
add
outsb
adc
push
or
clc
psllq
jb
mov
push
cmp
push
in
aad
fcoms
add
jl
sbb
repz
notl
jne
and
jb
cmpsl
insb
push
sbb
pop
cmpb
push
xor
mov
je
scas
xchg
clc
mov
repz
mov
mov
mov
mov
loope
stc
mov
xchg
or
adc
fwait
adc
shrb
mov
jl
stc
sbb
lret
cmp
mov
xlat
pusha
sub
push
and
jl
rcll
dec
ficoml
pop
fs
pop
sub
cwtl
fldenv
mov
xor
loope
inc
pop
fstl
aam
cmpl
xlat
sbb
ljmp
jecxz
inc
mov
movsl
jns
fwait
mov
cwtl
or
scas
dec
idivb
fs
jle
fldl
fbld
fcomip
loopne
xchg
mov
mov
pop
mov
xchg
jne
lds
in
mov
pushf
push
int
insl
cmpsb
inc
inc
inc
fwait
pop
lcall
pop
or
jle
xchg
popa
cmp
inc
push
mov
mov
cli
pop
jge
addr16
jmp
jnp
addr16
insl
dec
pop
hlt
or
add
mov
xchg
push
out
push
pop
test
sbb
xor
mov
loope
pop
dec
mov
jmp
idiv
dec
stc
test
cmp
adc
mov
jp
test
xchg
jo
cwtl
pop
loop
je,pn
rolb
sbb
loop
das
shlb
lret
loopne
rcll
push
jp
filds
mov
xor
loop
mov
addr16
inc
push
sub
inc
test
dec
or
pop
cmpsb
testl
fldt
jmp
push
push
fimuls
or
fwait
push
push
push
icebp
and
sahf
push
inc
mov
xor
out
dec
xchg
out
insb
sub
jno
shlb
cmp
xor
rcll
inc
mov
pop
out
mov
enter
jge
xor
cmp
aad
out
cs
insl
ja
sbb
sti
in
sub
hlt
shlb
cmp
mov
movsl
pop
ljmp
xchg
inc
jns
pop
testb
aas
mov
push
pop
fs
cmc
ss
xor
lret
mov
or
push
dec
stos
or
inc
lods
pop
jmp
add
gs
cltd
mov
pushf
das
insl
data16
dec
xor
ret
or
into
fs
enter
sub
add
add
jnp
dec
dec
and
xchg
jns
jbe
or
xor
sub
pushl
jmp
bound
enter
sbb
mov
pop
mov
push
jae
lds
and
push
aam
xchg
push
gs
testl
pop
dec
loope
leave
push
lret
xor
fisubrs
jo
jbe
push
pop
nop
dec
rcll
iret
fs
add
inc
and
xchg
lahf
lea
inc
aam
out
cmpsb
arpl
mov
push
cltd
mov
movb
arpl
push
scas
icebp
cld
xchg
jl
pushf
cltd
imul
rorb
and
outsb
test
ret
cmc
aam
jecxz
and
stos
test
lds
sbb
add
sub
or
cmpsl
hlt
inc
push
and
adc
test
outsb
leave
lcall
dec
in
rorl
ret
cli
jb
cld
jne
pushf
inc
in
cmpsl
cwtl
data16
test
xchg
cmp
push
scas
jbe
xor
mov
mov
mov
or
xchg
int
jecxz
mov
adc
lods
out
xor
out
mov
mov
cmp
adc
sbb
mov
mov
or
dec
mov
lods
xchg
sub
mov
loop
imul
fidivl
cltd
out
sub
pushf
lock
push
pop
cmp
jns
popa
cmpsb
lret
test
subb
insl
or
scas
je
data16
into
fldenv
sbb
dec
push
inc
testl
sub
int
inc
flds
lods
iret
cmp
inc
push
sub
popa
nop
xchg
jne
fdivl
popf
push
cmp
jns
and
stos
xor
or
dec
shlb
xor
outsl
popf
das
xchg
mov
js
scas
pop
jle
dec
test
lods
lods
lods
adc
shll
xchg
repz
inc
mov
incl
out
and
sub
sahf
cltd
push
sub
out
push
sti
mov
jns
push
call
out
rorb
lret
sub
cmp
test
out
aas
out
lret
loope
testb
pusha
insb
sti
sbb
mov
sub
sbb
icebp
aad
ret
stc
push
insb
js
or
out
lds
dec
inc
add
shlb
push
loop
in
jle
xchg
insl
cmp
xor
mov
mov
pop
xchg
in
adc
std
adc
push
mov
lods
call
adc
shlb
call
cltd
hlt
adc
fs
dec
pop
outsb
testb
pushf
iret
or
aas
push
or
and
lcall
dec
sbb
imulb
xor
js
dec
test
dec
and
ret
mov
stc
mov
jmp
mov
sti
cmp
mov
subl
repnz
and
imul
pop
loope
rol
add
jl
ja
cmp
adc
stos
popf
shrl
sbbb
sub
xchg
push
loopne
into
jno
push
inc
test
xor
pushf
mov
adc
mov
in
subl
hlt
out
jbe
popl
pop
add
jmp
test
jl
sarl
jbe
repz
push
rcrl
push
sbb
mov
scas
arpl
push
inc
sbb
aaa
icebp
pop
in
int
push
mov
leave
lods
cmp
mov
repz
ljmp
xor
jge
dec
sbbb
or
outsb
adc
mov
adc
push
orl
mov
xchg
jge
jg
cmc
sub
xchg
jb
out
lahf
pop
cltd
jge
fwait
mov
incb
fwait
cmc
stos
mov
or
inc
adc
lods
incb
fistpll
testb
inc
dec
das
or
cmpsl
in
push
jmp
andb
ljmp
aam
mov
das
dec
and
ljmp
cmp
outsb
out
imul
out
cmp
ljmp
aas
jg
mov
push
pop
mov
mov
hlt
jmp
orb
subl
lret
fstl
dec
jo
psrlq
leave
pop
mov
jns
pushf
das
mov
out
pop
sub
mov
add
dec
in
push
iret
sarl
cmp
and
cli
ret
dec
push
movsl
iret
int
jecxz
fcomi
xchg
repnz
popa
mov
lret
stos
mov
aaa
mov
sbb
sub
pop
mov
push
push
das
sub
push
adc
lea
cmp
push
repnz
leave
pop
scas
mov
pop
pushf
cmpsb
mov
mov
and
pop
xor
dec
push
lcall
lcall
int3
stc
mov
mov
cltd
jl
xor
mov
sub
push
xchg
push
jo
xor
mov
sbb
rcl
add
cmp
dec
sbb
xor
or
mov
rcrl
pop
xchg
lret
dec
notl
xor
shl
cs
push
int3
dec
jle
jne
jl
pop
inc
aad
adc
dec
and
std
inc
xchg
in
ljmp
es
daa
les
or
popf
pop
push
cld
mov
mov
inc
sbbl
ss
repz
je
int3
dec
icebp
into
push
adc
pop
stos
aas
fistpl
push
mov
imul
hlt
push
add
push
lds
lret
je
mov
jp
enter
xchg
test
or
cwtl
pushl
es
pop
das
das
dec
inc
call
sti
push
mov
and
xchg
cwtl
mov
fninit
add
adc
mov
loope
sbb
fs
mov
pop
nop
cwtl
xchg
stc
repz
test
adc
jae
ffree
stos
je
inc
roll
jg
fimuls
addr16
cmc
mov
repz
insl
inc
imul
bnd
movsb
jmp
call
dec
sbb
shlb
stos
jns
lock
or
aad
rorb
fsubrs
imul
xor
add
rclb
add
or
xchg
negb
fbld
push
lcall
mov
test
xchg
xor
xchg
pop
inc
fisttpl
xchg
and
xor
jae
in
and
add
lcall
cs
insl
divl
xor
pop
push
and
pop
movsl
clc
stos
pop
cmc
add
mov
push
mov
into
mov
pop
pusha
sbb
dec
mov
mov
mov
pop
ja
sbb
shll
inc
and
mov
xor
subl
xchg
out
inc
test
outsb
sti
pop
out
repz
cmp
or
xchg
in
jl
mov
xchg
das
stos
insl
push
inc
hlt
ret
adc
mov
mov
jnp
out
mov
push
or
push
idivl
stos
lret
push
mov
pop
cmpsb
addr16
cmpsl
adc
addr16
xchg
push
mov
jmp
mov
into
ret
or
mov
movsb
cmp
shlb
cmp
xchg
dec
mov
pop
rol
icebp
les
jns,pt
jno
shlb
or
push
popa
jmp
xor
stc
adc
mov
shrl
sub
fistl
sub
fstl
in
rclb
lret
mov
pop
pushf
mov
pop
or
repz
adc
aad
ss
inc
addl
push
mov
and
incb
lret
inc
xchg
repz
jbe
call
negb
mov
test
hlt
cmp
push
adc
in
jl
fists
jmp
cmp
inc
jmp
xor
mov
cwtl
adc
pop
loope
mov
es
mov
mov
imul
xchg
sbb
cmp
sbb
ret
push
ljmp
xor
xchg
popa
xor
mov
xchg
lahf
stos
fidivrl
cmpsb
push
xchg
sub
pop
jmp
pop
lds
jl
nop
loopne
fadds
sbb
scas
xor
std
cwtl
xchg
pop
jo
arpl
mull
cmp
xchg
and
pop
sbb
or
imul
fs
outsb
mov
repnz
cmpsb
loopne
xchg
jns
pop
data16
out
repz
dec
mov
mov
rcrb
dec
sbb
pushf
lods
fwait
sub
cli
mov
lahf
scas
mov
sub
pop
adc
sub
mov
jnp
sahf
fs
dec
mov
cmp
sbb
push
movsb
in
or
mov
add
jns
xchg
int
lea
pop
test
add
repz
lcall
lcall
xchg
aad
cmpsl
cmp
test
sarl
cmp
es
adc
roll
and
mov
xchg
xor
pushf
scas
sub
inc
dec
mov
stos
addr16
enter
mov
xor
insl
popa
ss
or
xchg
outsl
cli
and
cmp
dec
shrb
test
outsl
shrl
xor
sub
inc
jb
into
push
and
les
outsl
fcoml
aad
lods
ss
xlat
lret
mov
or
arpl
mov
outsl
dec
sub
mov
cmp
mov
in
mov
out
xor
les
test
inc
fistps
gs
leave
inc
stos
or
sbb
adc
js
into
aaa
test
xchg
insb
lcall
xchg
fildll
xorb
or
mov
vpackuswb
mov
fldcw
hlt
rcr
leave
lds
cld
pop
mov
pop
sub
outsl
out
mov
sub
lods
mov
cld
adc
roll
movsl
cmp
sub
adc
pop
pop
fs
push
lret
jecxz
push
sub
jg
jnp
loope
imul
pop
dec
mov
xchg
addr16
cmp
inc
addr16
add
arpl
cmp
fmull
inc
mov
fmull
lock
jge
mov
add
lods
push
mov
cmp
sub
and
jmp
pop
xor
mov
call
mov
mov
pop
test
jo
jno
lret
sbb
add
int
or
jb
loop
ds
cmp
out
mov
dec
cmp
call
fs
jle
mov
adc
inc
pop
push
ljmp
cmp
ljmp
decb
dec
dec
and
sbb
push
or
sub
clc
adc
or
outsl
mov
scas
lcall
stos
ss
lret
insb
stc
mov
xchg
or
fcomps
jp
aaa
pop
mov
dec
jecxz
mov
mov
or
test
fcompl
inc
mov
xlat
lret
in
xchg
sahf
in
sbb
rcll
in
imul
shlb
sub
je
xchg
push
push
sbb
scas
cmp
mov
aam
jbe
cmp
negl
add
or
sbb
or
sub
mov
adc
pop
lret
mov
loope
stos
lcall
pop
inc
insb
repnz
testb
lock
cmc
daa
pop
in
in
xchg
cltd
push
xor
adc
aam
mov
rclb
push
imul
repz
mov
popf
mov
shll
sbb
rcrb
subl
test
mov
movsl
xchg
mov
and
add
mov
repz
fucomip
hlt
and
popa
stos
sub
lock
dec
js
pavgw
adc
xor
pop
dec
push
dec
sbb
fstl
popf
push
aam
mov
popf
push
cmp
xchg
mov
push
push
stc
push
rolb
push
out
and
fsubp
fcompl
xchg
jmp
push
stos
sub
ljmp
adc
stos
xchg
mov
repnz
out
add
fwait
dec
adc
pop
jo
aam
mov
jae
mov
push
sbb
mov
sbb
mov
sti
pushf
push
push
cli
adc
or
mov
xchg
mov
xor
pop
lods
jle
mov
jno
mov
mov
jg
adc
mov
sarb
sysexit
and
sub
inc
cmp
fimull
push
push
out
out
mov
add
xor
jbe
frstor
outsb
stos
add
mov
cmp
hlt
lahf
and
mov
adc
pop
adc
pop
test
bound
cmp
pop
sti
das
xor
addr16
dec
push
sbb
shrl
dec
mov
inc
shlb
xchg
cmpsb
mov
push
lret
mov
out
aas
insb
ljmp
dec
push
popa
or
loope
push
xlat
cld
shll
push
gs
lea
pop
xor
adc
jmp
lods
jno
inc
push
sub
sbb
pop
outsl
mov
arpl
dec
mov
stos
js
fdivrl
mov
dec
loope
popf
ds
mov
mov
imul
push
les
adc
or
int3
fnstenv
dec
lods
xlat
adc
sbb
sbb
cmp
dec
push
xchg
cld
int
andb
fbstp
mov
lock
dec
dec
mov
daa
inc
std
aam
iret
lods
aaa
ret
pop
sahf
mov
pop
sub
mov
divb
push
push
mov
divl
fucomip
jg
mov
mov
out
jns
test
std
mov
divl
mov
cmpsl
int
aad
xchg
mov
jecxz
pop
cmp
mov
jbe
ss
test
pop
xchg
fucomp
dec
xchg
sbb
lds
fwait
jno
add
mov
ja
enter
add
rcr
sbb
lock
xchg
cmp
sbb
mov
lea
in
or
in
dec
scas
imul
add
or
xchg
enter
inc
cld
daa
cmc
imul
sub
icebp
cmp
imul
stos
je
cmp
in
cmp
or
movsb
add
jne
pop
inc
push
inc
nopl
and
into
lock
mov
cmp
xchg
stos
dec
push
js
mov
cmpsb
jno
sub
lret
sbb
sub
pop
insb
rol
or
fcos
jae
add
nop
add
pushf
pusha
ret
pop
adc
inc
lcall
addr16
insb
xor
js
xchg
xchg
jl
xchg
mov
xor
or
jnp
jp
imul
shll
je
shll
inc
mov
jle
scas
add
mov
cmpl
popf
std
js
sub
ficompl
push
fstp
or
imul
scas
mov
pop
and
aas
jns
loopne
mov
rorb
sti
fwait
or
mov
and
lret
jae
and
dec
push
in
ret
pop
xchg
popa
or
pop
mov
lcall
nop
int3
aam
push
add
jno
sub
sub
xor
adc
xchg
add
mov
into
push
and
ds
test
mov
pop
pop
leave
jp
sub
jg
jmp
icebp
out
lcall
and
jl
das
inc
mov
fstps
loop
ds
jecxz
mov
jle
mov
fcomp
add
cli
aad
jge
inc
ljmp
mov
lcall
mov
cmpsb
push
fimull
lcall
xchg
stos
and
in
jle
ret
or
stos
push
stos
cmp
mov
faddl
aam
cli
rolb
loope
add
in
lds
inc
shld
sbb
jae
les
dec
icebp
in
dec
stos
icebp
es
xlat
or
ja
test
fs
iret
xchg
in
das
in
movsb
fimull
imul
cmpsb
dec
push
movsl
push
mov
call
add
inc
dec
mov
or
pop
fdiv
ficoml
mov
out
fs
pushf
jp
inc
sub
scas
scas
loope
xor
dec
fdivrs
inc
jns
imul
loopne
push
push
push
rcl
mov
mov
xchg
dec
adc
clc
aaa
push
mov
and
mov
dec
or
pop
jo
jge
repz
push
inc
out
rcrb
or
pop
push
mov
jne
dec
imul
jb
mov
or
push
lcall
push
push
mov
in
andb
and
scas
and
enter
pop
pop
cmp
call
sti
andb
sahf
icebp
out
pusha
repz
outsb
xor
ljmp
mov
inc
dec
fdivr
mov
mov
inc
jno
or
pop
jo
cmpsl
negl
inc
cmp
or
stos
es
mov
push
adc
sub
mov
test
jge
lds
add
pop
test
loop
outsb
xor
icebp
adc
pop
inc
dec
mov
push
ret
pop
sbb
fbld
xchg
test
in
inc
mov
mov
popa
loopne
das
outsl
pop
je
orl
cmp
sub
xchg
mov
push
or
add
mov
fidivs
sub
in
mov
roll
inc
data16
loop
icebp
fstpl
ss
ja
subl
mov
rcl
mov
inc
xchg
adc
imul
push
std
or
rcrb
popl
hlt
iret
insb
ret
cmp
mov
fdivs
test
xchg
or
mov
cs
nop
mov
lock
jmp
adc
inc
jns
mov
lods
mov
sub
mov
popa
in
pop
mov
add
cmp
sarb
loopne
rclb
sub
mov
insl
mulb
xor
jne
ja
cmp
aas
pop
jle
lds
stc
les
mov
loopne
lret
xchg
jg
push
sbb
cmpl
pop
inc
test
push
scas
jp
jge
mov
fwait
outsb
sbb
mov
lahf
int3
jmp
fidivrs
inc
cmpsb
push
iret
insb
ja
cmp
stos
es
stos
xor
in
sub
in
mov
lods
pop
outsl
xor
iret
mov
out
fnstcw
mov
push
popf
and
xchg
push
insb
inc
add
lcall
inc
cmp
xor
loope
mov
push
aam
nop
cmc
xchg
cmp
mov
adc
push
mov
negl
xchg
mov
lea
test
push
std
jmp
dec
inc
jp
and
add
pminsw
inc
flds
xor
xchg
mov
in
pop
faddp
fists
xor
fwait
lock
test
js
es
ret
cmp
xorb
pop
ljmp
test
and
xor
xchg
int
xchg
shlb
ds
inc
adc
push
jb
inc
shll
mov
inc
stc
aaa
testb
jo
ds
sbb
stos
mov
xor
sub
out
aam
jns
lcall
loopne
sahf
std
sbb
xchg
fs
inc
adcl
ljmp
xor
sub
es
ljmp
and
or
or
push
repnz
test
dec
scas
lret
inc
dec
mov
aas
fdivs
inc
sbbl
out
lahf
fimuls
int3
xchg
fiadds
dec
sar
cld
or
jne
enter
adc
in
or
insl
scas
xchg
xchg
mov
adc
pop
add
and
dec
push
rcrb
inc
mov
mov
push
mov
cmp
push
fidivrs
xchg
cmp
inc
lds
mov
scas
jns
test
in
inc
push
add
pop
cld
xchg
push
push
iret
push
cli
pop
scas
cmpsb
or
outsb
shr
mov
add
push
outsb
addl
inc
ja
enter
adc
je,pt
adc
ljmp
add
sar
fmulp
test
and
test
jnp
pop
add
fwait
mov
sub
jmp
imul
dec
jb
jp
and
repz
pop
jge
adc
xchg
pop
insl
ds
dec
jle
jbe
push
fsubr
test
js
jp
jge
mov
fldl2e
movsl
sub
rorb
push
mov
inc
xor
out
or
nop
xor
cld
scas
rcrl
mov
fiaddl
ret
fistps
jo
pop
lds
mov
sub
addr16
movsl
jno
daa
repnz
inc
outsl
imul
jl
flds
dec
mov
jne
push
push
mov
pusha
pop
xchg
sub
outsb
repz
sbb
cmp
test
xlat
rclb
xchg
add
sub
js
cmp
xchg
popfw
and
sub
sahf
or
add
or
jnp
jne
sbb
push
mov
inc
stc
in
pop
insl
cmp
dec
dec
and
pop
jno
fadd
pop
psllw
mov
mov
subl
pop
push
jl
repz
mov
mov
mov
imul
loop
xchg
rcrb
addr16
jo
es
dec
cs
je
inc
scas
cmp
mov
xchg
sbb
pop
jge
xor
popf
in
inc
xchg
cmp
mov
mov
out
stc
jmp
fdivrp
push
int3
mov
divb
mov
or
loopne
lods
ret
sub
aam
push
div
cmc
in
fmull
lcall
ja
sub
pushf
adc
lcall
stos
sbb
mov
fiaddl
or
arpl
fistpl
out
pop
adc
xchg
out
nop
cmpsb
jnp
cmp
add
xchg
xchg
push
xor
push
lret
xchg
add
aas
push
or
xchg
mov
ja
jecxz
lds
jb
adc
dec
repz
add
andl
inc
xor
push
lds
pop
aad
mov
sarb
pop
and
inc
cmp
ficompl
add
faddl
add
outsl
orl
mov
mov
les
pop
arpl
addr16
inc
mov
cmp
roll
cli
mov
pusha
aas
dec
adc
dec
rorb
jne
adc
inc
mov
cmp
ret
pushf
sti
mov
jno
arpl
mov
xor
loope
sbb
mov
mov
clc
insb
fs
cmp
hlt
lahf
aas
xchg
pslld
inc
xchg
rorl
sbb
adc
xchg
xlat
ds
idivb
out
push
clc
das
adc
mov
test
mov
les
leave
add
mov
cmp
in
popf
and
fcoms
push
xchg
dec
enter
jbe
cs
add
flds
out
inc
cmp
mov
sub
or
repnz
mov
adc
or
cwtl
insb
icebp
dec
sbb
stc
adc
adc
mov
sbb
hlt
sub
inc
dec
jns
mov
aad
fsubrl
aam
add
push
gs
lds
cmp
into
push
and
fstpt
pop
xchg
jl
mov
add
iret
sbbl
shlb
xchg
pop
xchg
subb
es
movsl
test
inc
add
inc
bound
fcom
sbb
adc
notb
mov
adc
add
jp
test
push
dec
jb
cs
je
and
scas
pop
mov
sahf
ss
pop
fcomip
shlb
rcrb
xor
outsb
push
push
or
lods
cltd
sub
addr16
std
ds
mov
add
cmp
jl
insl
or
sahf
xchg
pop
int3
inc
popl
leave
rolb
pushf
outsl
and
bound
repnz
jge
jo
cmp
adc
jmp
in
jae
mov
mov
sbb
ljmp
ljmp
sbb
push
and
mov
pop
push
push
dec
adc
fisttps
sbb
dec
lcall
add
mov
or
sub
push
push
test
xchg
scas
mov
jno
int3
fnstsw
popa
jo
sub
dec
push
shlb
and
cmp
mov
add
das
mov
addl
nop
lods
xor
jle
or
mov
repnz
fs
outsl
sub
jl
and
orb
sbb
cwtl
dec
dec
leave
sub
jg
add
xchg
out
push
sahf
insl
mov
and
data16
push
sbb
inc
das
mov
push
dec
sahf
add
mov
xrelease
inc
dec
daa
imul
mov
fcomi
test
repz
add
fsubs
cmc
pop
or
stos
aam
jmp
sub
lret
push
mov
sbb
hlt
add
es
ds
test
pop
inc
js
rcrb
rcr
cli
mov
xor
cmp
jp
sbb
dec
cmpb
mov
movsl
cmp
mov
xchg
outsl
test
xchg
inc
es
dec
addr16
add
mov
pop
xchg
push
das
sub
or
or
clc
outsl
std
jo
negl
les
cmp
cmpsl
jmp
push
js
mov
mov
jl
adc
jle
xchg
sub
ftst
jp
scas
sub
aas
push
cmpsl
cld
test
jae
ja
push
cwtl
inc
add
ss
lds
cmp
ja
bound
aad
dec
clc
cltd
sub
jge
imul
in
std
stos
in
lcall
xlat
or
jle
inc
cmp
jnp
jl
xor
push
inc
mov
sbb
std
inc
push
repnz
push
pop
ja
add
jle
std
xchg
add
or
jae
out
aam
jge
lcall
dec
push
int
push
in
fildll
sbb
inc
xchg
movsb
xchg
cld
fsubrs
jge
vaddsubps
aas
enter
aad
jae
xchg
jne
xchg
icebp
xor
scas
mov
shll
subl
movsb
add
insb
out
iret
ss
inc
lcall
aas
dec
cmp
and
push
push
stos
or
in
xchg
inc
call
or
leave
pop
xor
mov
ds
out
dec
adc
in
push
stc
and
fsin
jp
lcall
cmpsl
adc
jne
xchg
test
adc
jmp
stos
push
divl
xchg
sbb
int3
push
aad
and
adc
pop
or
push
pop
xchg
gs
outsb
add
xchg
adcl
mov
xor
inc
jg
cmc
loope
xchg
incb
xchg
inc
sub
shrb
adc
insb
add
and
jnp
movsb
add
pop
popa
jne
xchg
out
out
xchg
int3
leave
imul
sub
add
loop
adc
ffree
ds
add
stos
bound
fisubrs
loop
pop
sub
aas
sti
pop
das
or
adc
mov
lods
insl
jo
std
mov
fisubl
push
mov
mov
fistl
call
inc
outsb
mov
mov
or
fstps
push
lods
fcmovnb
jnp
inc
fxtract
dec
mov
dec
out
fs
mov
lret
sub
int3
and
nop
xchg
test
lods
test
bound
xor
adc
imul
pushf
add
adc
jb
loopne
rcrl
jno
outsb
pop
cs
daa
cmp
xor
pop
jg
add
xchg
pop
dec
push
adc
mov
adc
call
xor
mov
incl
push
mov
in
fdivl
test
popf
add
ret
out
ss
xchg
fstpt
mov
loope
cmpsl
sbb
jo
call
add
mov
movsl
push
ljmp
iret
cmp
cmpsb
dec
out
and
push
add
out
xor
mov
push
push
jno
in
aaa
sub
mov
fistps
sub
push
ret
xor
mov
in
sbb
fs
sbb
mov
loopne
mov
iret
inc
mov
fcomip
loopne
int
test
mov
mov
sbb
jnp
jl
xor
xor
sbb
jno
jle
mov
test
mov
popf
inc
enter
add
push
rclb
lcall
xor
daa
rcrb
mov
iret
test
stos
jns
ljmp
sub
sbb
xchg
aas
aam
sbb
mov
mov
rorb
addb
dec
je
rclb
xor
cmp
fadds
mov
shl
sbb
sbb
jbe
mov
pop
mov
adc
jnp
pop
jno
xchg
sub
and
mov
fisubs
push
push
xlat
push
in
mov
fwait
test
cmp
inc
or
sub
popa
or
lahf
cmp
xor
mov
push
stc
lock
push
in
enter
popa
sarb
test
cmp
add
jp
push
int
inc
outsl
testl
in
and
lret
in
into
push
push
xor
xchg
test
adc
sbb
or
lods
adc
mull
or
jmp
jnp
inc
xlat
lods
mov
aad
dec
add
inc
adc
mov
and
std
push
inc
pop
int3
cmp
xor
jae
sbb
popf
loope
sbbl
fmuls
adc
loope
pop
test
jge
inc
sub
mov
jmp
and
cmp
aas
ficoml
sahf
and
pop
js,pt
add
outsl
fidivrs
jno
add
test
inc
cmp
and
add
lds
mov
mov
pop
addr16
inc
fisubrs
xor
mov
lods
inc
and
pop
cmpsl
xchg
iret
cmp
mov
inc
stc
or
cmp
mov
mov
aaa
cli
xor
outsb
pop
sub
je
push
cmp
xor
jns
loopne
ja
mov
jae
mov
push
cmc
fildll
lret
lahf
cltd
mov
mov
jecxz
pop
call
ror
mov
dec
rolb
jb
movsl
sar
shrb
jo
push
sahf
pop
add
dec
sub
mov
pop
mov
adc
or
inc
arpl
insl
jge
and
daa
ja
push
fiaddl
sub
sub
add
lret
pop
nop
sub
movb
sub
xchg
push
or
cmpsl
dec
popf
push
push
dec
ja
adc
mov
mov
out
xlat
ja
sbb
adc
fstl
push
jmp
or
shrb
fs
nop
shrl
mov
popf
xchg
ss
ret
ret
in
cmpsb
shlb
scas
adc
das
mov
sbb
push
dec
ret
xor
xor
rcl
mov
push
mov
jmp
out
cs
xchg
stos
scas
aad
sahf
mov
mov
inc
inc
hlt
pushw
mov
arpl
xchg
movsl
xchg
ja
mov
jae
adc
nop
sti
fnstenv
aad
xor
and
inc
test
bound
cmp
sub
mov
sbb
ret
pop
roll
lret
add
repnz
jle
sbb
sti
jl
fnstenv
stc
jae
cs
jne
les
pushf
shrl
xor
icebp
jp
mov
jne
and
inc
cmp
icebp
dec
mov
insl
scas
stos
orb
nop
out
sub
mov
and
or
test
ret
jle
mov
cmp
rcrb
cmp
leave
imul
xchg
stos
and
sub
jge
fs
cmpsl
push
sbb
loopne
std
mov
or
sarl
push
mov
test
mov
sbb
pop
fldcw
xorl
cmpsl
rolb
mov
bound
xchg
cmpsb
mov
scas
mov
jb
ss
push
adc
fimuls
fwait
cld
mov
push
lcall
mov
cmp
fsubs
ja
stos
int
push
jne
and
push
jecxz
fs
stos
inc
scas
adc
call
pop
lds
movsl
mov
cmp
mov
or
outsl
push
out
adc
or
mov
inc
add
cli
xor
fstps
add
adc
pop
pushf
test
movntq
out
pop
pop
cld
movsl
lods
dec
mov
fsubs
adc
iret
sub
mov
pop
pop
aam
mov
loopne
test
push
bound
or
test
adc
cs
adc
leave
fnstsw
ljmp
push
insb
cmp
and
and
lock
neg
cmp
mov
adc
shr
lods
divb
inc
mov
inc
cmpsl
adc
adcl
push
testl
dec
mov
outsl
cwtl
test
stc
stos
cltd
sub
mov
mov
jecxz
xchg
mov
aas
adc
jne
shrb
sti
pushf
lahf
js
cwtl
sarl
jb
jbe
sbb
test
pop
mov
out
ljmp
in
mov
sub
frstor
sbb
cmp
bound
adc
jb
or
addr16
mov
jge
sub
call
loopne
in
cltd
cmp
rcl
xchg
popa
lods
test
push
je
test
cmpsb
push
int3
cmp
mov
xchg
pop
loop
faddl
mov
xor
ljmp
and
adc
or
adc
push
push
xchg
mov
push
add
and
test
push
inc
adc
aaa
xchg
aaa
stos
mov
sub
cmp
add
addr16
push
adc
push
lock
cmp
cld
cmpsl
loop
in
imul
and
aam
mov
pop
fucomip
test
stos
inc
stc
fdivrl
daa
mov
xchg
imul
iret
ret
test
add
mov
mov
xchg
mov
pusha
imull
outsl
lods
fstl
clc
out
shrl
dec
and
in
and
fldenv
pop
jge
pop
cli
fwait
or
adc
into
enter
ret
pusha
leave
push
add
push
cmpsb
pop
sbb
sahf
jns
mov
ss
push
or
pop
adc
cli
test
clc
pop
ljmp
adc
add
lds
xor
xlat
out
call
jbe
pop
mov
xor
notb
pop
cmp
mov
stos
pop
lcall
push
sbb
out
repnz
testb
hlt
add
jns
sbb
outsb
xchg
sub
xor
mov
out
mov
push
stos
pop
xor
lock
cmp
push
mov
inc
shll
bound
xor
mov
ret
int
fcmovu
movsb
cmp
dec
mov
std
cwtl
inc
aaa
flds
lcall
pop
pop
stos
std
cli
aas
aaa
cmpsl
fsubrs
fldz
lods
xor
inc
sbb
iret
mov
stc
lea
test
or
scas
cmpsb
cs
lahf
and
insb
lock
pushl
mov
fsubs
cmp
aaa
and
xor
inc
cwtl
pop
xor
push
and
adc
bound
xor
or
daa
sub
mov
and
aad
xchg
mov
jne
xor
xor
add
fwait
jge
sti
sub
mov
or
pop
outsl
mov
adc
inc
mov
popf
or
inc
stc
and
fdivs
mov
jo
lret
jg
add
data16
ja
fwait
sti
push
mov
dec
or
push
dec
sbb
cmp
stos
frstor
test
pop
andl
pop
mov
sub
mov
jmp
adc
movsl
add
mov
sub
inc
add
in
mov
scas
nop
addr16
popa
mov
ret
inc
inc
jl
movsl
dec
hlt
addr16
mov
scas
xor
ss
add
scas
mul
insb
jno
sbb
loope
adc
jl
call
out
dec
inc
sbb
jbe
sbb
jmp
mov
subl
xor
fisubs
xchg
hlt
outsl
xchg
arpl
iret
icebp
or
mov
adc
push
inc
in
mov
xchg
lods
dec
sahf
add
mov
jo
sti
sub
dec
mov
jbe
ss
mov
lock
aad
inc
pop
stos
fnstenv
loopne
sti
fisubl
cli
test
adc
push
dec
pop
cmp
mov
pop
pop
dec
mov
cmp
lret
mov
je
or
or
jcxz
rcrl
sub
jmp
mov
fld
xor
rol
out
jg
clc
inc
out
xchg
pop
mov
es
aam
imul
and
mov
adc
out
fs
cltd
and
sub
pop
inc
ja
mov
or
cmp
cltd
lock
cmp
outsl
out
rclb
and
call
shr
push
sbb
insb
daa
sub
lcall
lret
add
test
frstor
arpl
ds
pop
xlat
addr16
push
xchg
dec
int3
mov
out
jns
xchg
pop
pop
xchg
push
imul
cmc
sub
xor
and
cmpsl
lahf
mov
std
adc
push
adc
mov
cmp
pop
gs
jnp
xchg
das
dec
push
jo
cmp
fs
adc
sbb
mov
arpl
push
xor
fisubrs
add
scas
lods
xor
cs
mov
pop
push
and
lcall
andb
clc
cwtl
in
clc
xchg
sub
pop
out
inc
jb
fwait
lcall
pushf
loop
iret
jb,pt
dec
sbb
repnz
aam
dec
les
mov
xchg
stos
inc
push
or
cmpsb
inc
add
mov
imul
addr16
mov
outsl
aam
xor
mov
pop
mov
push
lahf
into
mov
stos
sub
dec
xchg
enter
std
lahf
jmp
dec
hlt
xchg
addr16
adc
aam
and
addl
pushf
or
jo
fs
rorb
jge
or
mov
jg
adc
fsubr
scas
rolb
pusha
mov
and
popa
mov
inc
add
mov
arpl
insl
mov
divb
pop
into
inc
dec
out
and
decl
dec
push
int
fsubs
cltd
cmp
mov
sbb
movb
les
cmp
imul
or
adcb
in
mov
data16
xor
adc
sbb
mov
loope
and
jl
dec
lret
andb
fcomp
and
ret
mov
insb
das
mov
sbb
push
bnd
and
sbb
jge
xchg
mov
xchg
jecxz
pop
xchg
es
dec
icebp
jbe
dec
cmp
add
xchg
cmp
fldl
jg
shl
stos
sub
lret
cmp
or
xchg
sub
daa
lahf
and
or
ss
in
popa
xchg
imulb
xor
iret
mov
sub
ret
push
in
cmp
mov
aas
dec
fidivrs
je
pop
cmp
push
mov
push
xchg
out
xor
pusha
xchg
lods
pop
fistpl
mov
dec
mov
xchg
out
neg
dec
enter
repz
imul
fwait
ret
gs
rcr
int3
jo
shrb
repnz
jb
sub
xor
mov
fcomps
cwtl
dec
in
xor
push
pop
rcrl
sub
and
rcl
icebp
in
mov
or
inc
sub
xchg
ss
mov
movd
rolb
or
sbb
cli
mov
xor
fdivrs
mov
aas
push
or
push
and
mov
mov
fucomip
xchg
loopne
adc
outsl
fiadds
jl
rcl
push
cmp
es
popa
adc
xchg
arpl
dec
loop
push
data16
lods
mov
sub
mov
pop
inc
xchg
cld
fs
test
out
mov
inc
pushf
insl
roll
jne
jne
xchg
cld
push
mov
xlat
and
jbe
scas
pop
in
pop
iret
or
aas
outsb
sub
cmpsl
inc
xchg
xor
fst
lds
outsb
insl
sbb
jns
jle
or
leave
sbb
jae
add
pop
in
sbb
scas
xchg
and
push
jp
and
fstpl
subb
ret
hlt
cmp
out
test
and
add
jae
popa
test
sbb
dec
jge
mov
sub
lret
add
push
and
cli
lret
sbb
and
shll
lock
jbe
insb
add
sbb
dec
cmpsb
xlat
mov
xor
pop
popa
inc
inc
xor
dec
or
jecxz
cmp
rcrb
add
cltd
cmpsl
inc
mov
mov
cmp
hlt
pop
fwait
sti
pushf
push
scas
cmp
xchg
inc
call
aad
daa
xchg
add
mov
pop
push
xchg
gs
rep
imul
mov
jp
negb
ror
shll
inc
xor
shrb
inc
repnz
popa
das
xchg
test
lahf
mov
popa
jecxz
das
cmc
fildll
jnp
pop
xchg
mov
sbb
adc
in
test
sub
loopne
jecxz
cltd
hlt
ud2
fidivs
inc
fcompl
cmp
stos
in
fwait
xchg
or
fisttps
cmc
push
xchg
or
dec
nop
sub
ret
imulb
sar
cwtl
cmp
mov
xor
adc
lds
mov
loopne
sub
in
aam
in
and
cld
into
mov
mov
pop
pop
pop
imul
icebp
and
scas
adc
mov
push
sbb
test
test
add
jecxz
ret
mov
jg
jmp
cld
nop
enter
les
mov
or
cmp
movsl
jg
inc
mov
test
rorb
mov
lea
xor
xor
mov
sub
idivb
lods
aad
jns
mov
lcall
push
hlt
xor
sbb
int
mov
dec
mov
lcall
movsl
das
fistl
xor
push
mov
sarb
daa
adc
pop
push
sbb
leave
popl
xchg
mov
mov
ret
lret
test
or
jno
or
push
int
cmp
leave
add
adc
je
hlt
sub
pop
jnp
sub
mov
jae
sbb
lods
je
inc
pop
lea
sbb
fisubrl
and
lock
add
mov
data16
sub
push
sti
cli
jo
sarb
push
int
pop
sub
inc
sar
into
icebp
lods
mov
mov
inc
push
adc
fildl
fcmovbe
jne
pusha
jle
fcomp
jnp
dec
xor
sar
ficoms
jg
pop
push
insl
lahf
mov
inc
mov
adcl
out
add
outsl
sbbl
pop
loopne
jae
cltd
jg
dec
push
mov
into
push
xor
sub
inc
enter
mov
mov
xchg
loop
dec
sbb
pop
dec
loope
lea
lret
mov
loop
pop
sar
jno
cld
mov
xor
loope
lds
lret
aaa
outsl
fisttpll
sbb
fdivr
jno
xchg
mov
lret
das
jne
into
sbb
nop
xchg
fs
mov
add
mov
dec
sbb
repnz
push
repnz
gs
adc
inc
mov
mov
rclb
push
sub
dec
mov
fcmovb
xchg
add
add
aad
stc
dec
mov
fcomip
shlb
movsbl
adc
cmp
shll
fs
sub
aam
mov
xchg
imul
data16
adc
sub
and
jecxz
sarb
jecxz
int3
fcomps
xchg
cltd
aad
xchg
pop
jle
mov
sbb
fisubrs
shlb
add
pop
xchg
add
aas
jno
push
fisubrs
add
adc
mov
xchg
jg
jne
mov
push
lea
mov
and
jne
loopne
mov
int3
jl
das
lahf
mov
jl
add
inc
std
fcompl
xor
cmpsb
push
je
sahf
sbb
sub
loope
sbb
xor
or
adc
cmpsb
aaa
dec
out
shrb
xchg
mov
jle
xchg
fdivrl
adc
xor
and
popf
cmpsl
push
add
pop
int3
notb
dec
insl
inc
xchg
out
out
pop
les
mov
xchg
adc
stos
xor
xchg
stos
lods
xchg
les
mov
mov
sbb
jmp
mov
cli
stos
mov
push
mov
fmuls
or
insw
lahf
shll
dec
sti
pushf
loope
aaa
mov
popa
jle
and
arpl
push
imulb
push
pop
ret
adc
adc
aad
out
and
lcall
fwait
add
mov
inc
pop
pop
outsb
xlat
xor
xor
test
daa
pop
lock
jmp
jo
and
lcall
mov
pop
shlb
push
out
push
add
repz
inc
mov
lock
xor
loope
js
jno
paddq
mov
pop
push
jo
cltd
cmp
mov
call
pop
test
out
pop
mov
cmp
mov
into
xchg
sub
sub
dec
add
or
push
addb
cmc
push
sbb
and
mov
jmp
out
out
mov
fnstcw
and
add
stc
mov
out
push
mov
ljmp
shll
out
inc
push
stos
adc
std
add
push
mov
lret
pop
dec
and
fstpt
mov
mov
int3
pop
inc
movsb
mov
mov
inc
push
push
loop
xor
mov
fucomi
cs
inc
mov
sub
fmull
inc
cmc
push
xor
sbb
ljmp
inc
dec
adc
adc
loope
push
aad
adc
pop
mov
add
cmp
jp
sub
ss
imul
arpl
or
int3
test
lds
pop
sbb
add
mov
fstps
or
dec
stos
cvtps2pi
jp
xor
sti
jns
ja
cmp
js
and
popf
out
scas
aaa
sbb
jno
adc
ds
cs
push
int3
sub
sbb
mov
add
fcoml
enter
out
push
dec
movl
test
push
ret
inc
adc
push
clc
adc
push
lock
jnp
push
jg
pop
dec
sti
ss
outsb
popa
xchg
mov
mov
stos
xlat
btsl
jp
cmc
divb
ja
cmc
lret
in
cmpb
jae
inc
and
rolb
mov
xchg
rolb
ss
cli
jns
xchg
stos
insb
pop
push
pop
aam
push
fdiv
mov
and
jecxz
jle
addr16
jcxz
lret
shlb
in
mov
add
je
and
scas
movsb
arpl
cmp
xor
mov
lret
jl
pop
jno
mov
jo
and
sbb
xchg
pop
popa
addr16
and
sub
pop
nop
mov
notb
loop
inc
push
add
lcall
xchg
aad
pusha
por
push
out
imul
in
push
mov
callw
jmp
sbb
pop
popa
jno
dec
pop
cmpsl
ja
adc
push
push
cmc
aam
or
mov
nop
pushf
or
and
aad
loopne
in
pop
sbb
mov
lahf
roll
push
jo
push
pop
inc
std
mov
lret
rcrb
sbb
ss
mov
cld
movsl
les
shl
ljmp
inc
enter
pop
shlb
pop
scas
push
cmp
cwtl
cwtl
jmp
or
jl
les
jns
shll
xor
outsb
fisubl
add
cmp
pop
jo
or
shr
aaa
call
in
in
dec
pusha
imul
dec
lods
loopne
cmp
adc
leave
mov
sub
mov
push
rclb
and
or
and
jg
test
dec
fadds
movsb
cmp
pushf
stos
ds
enter
dec
fdivr
movsb
out
iret
xrelease
cmp
pop
inc
and
cmc
or
add
and
negb
mov
pop
mov
imul
mov
sub
add
inc
imul
jne
movsl
jmp
mov
mov
adc
add
bound
mov
inc
adc
lret
ret
sbb
and
sub
cs
js
inc
and
dec
adc
test
xlat
mov
andl
mov
cmpsb
sarb
pop
sbb
loop
mov
das
adc
insb
and
adc
pop
mov
int
loop
inc
pop
in
ds
cwtl
dec
mov
out
movsb
xor
sub
icebp
lds
aaa
orl
mov
mov
das
loope
fwait
pop
add
cltd
mov
in
and
outsb
lds
adc
add
inc
mov
pop
jg
adc
sbb
ja
xor
cs
and
in
test
inc
and
xchg
add
idivl
add
push
int3
fdivl
inc
add
ja
xor
pushf
gs
push
mov
pop
pop
xchg
dec
and
sbb
cmp
dec
imul
dec
mov
xor
clc
and
xor
int
jo
iret
ss
lret
mov
test
mov
in
mov
ss
insl
adc
int
lcall
cld
pop
outsl
dec
movsl
lods
scas
cmp
inc
mov
jae
sub
dec
jge
mov
xchg
bound
mov
es
or
mov
das
leave
mov
push
mov
notl
iret
subl
test
cli
insb
stos
adc
fistpll
lcall
cltd
add
jp
pop
or
mov
lcall
sbb
dec
xchg
adc
xchg
cmp
add
sbb
pop
roll
arpl
cs
shlb
enter
dec
sbb
xchg
jnp
push
test
cmp
fsubrs
or
xchg
lret
fistpl
les
vmovd
decb
pop
add
movsl
ljmp
push
pop
jne
test
gs
sbb
popf
test
mov
pop
test
and
lahf
scas
and
ficoms
pop
mov
data16
std
sti
sbb
pop
sub
loop
lods
push
xchg
and
xchg
mov
inc
stc
stc
pop
icebp
filds
ficoml
jmp
inc
cmp
ljmp
inc
push
push
sbb
hlt
stos
aaa
sub
js
push
mov
cltd
repnz
scas
inc
sub
ss
mov
jmp
mov
lret
push
fldenv
cltd
jo
cld
adc
cmpsl
dec
mov
stos
jle
adc
push
rcrl
mov
xchg
pop
add
xor
pmuludq
mov
xor
pop
mov
clc
and
lods
les
cmpl
loopne
call
push
jno
test
and
add
ljmp
arpl
fcompl
sub
lds
pop
sbb
and
das
or
faddl
push
iret
mov
test
or
aaa
and
add
shll
bound
popa
sub
jg
stos
mov
aam
mov
leave
psrlw
lods
push
scas
icebp
fistpll
sbb
in
and
jae
jne,pt
ret
sbb
ret
sub
xchg
insb
add
xchg
cs
cmc
jp
push
pop
inc
xchg
fs
mov
pop
push
cmp
aam
test
arpl
pop
cltd
shl
mov
sbb
xor
cmp
movsl
mov
cmp
outsl
test
cmp
and
cmp
std
mov
lea
sar
scas
out
leave
repz
ror
push
cwtl
push
cmpsl
sbb
lods
lods
lds
or
dec
jecxz
pushf
ja
imul
rorl
fistpll
adc
cmpsb
dec
loop
aam
push
sbb
mov
ja
out
lods
cmp
mov
jnp
cs
sub
inc
leave
sub
pop
push
inc
jnp
sti
cmc
pushf
jle
out
dec
movsl
lret
sub
or
add
fnstenv
cmp
hlt
mov
incb
or
movsl
inc
inc
imul
push
arpl
mov
idivb
popa
dec
cltd
and
insl
cmp
inc
xchg
sbb
jle
xor
shlb
jp
xor
rorb
pop
loopne
mov
push
js
sub
xor
xchg
je
or
mov
xchg
fnsave
jge
mov
fcoms
divl
pop
xchg
push
mov
cmp
sbb
mov
gs
out
mov
adc
xlat
popa
pop
aam
mov
jge
jno
test
add
mov
push
cmp
pop
sub
dec
and
jne
pushw
sbb
test
js
xor
imul
cmp
push
in
sbb
xchg
push
sub
add
xchg
sar
or
mov
jmp
xor
std
and
xlat
lods
sub
or
lahf
cmpsb
stos
xor
and
loop
pop
mov
filds
cld
xor
jae
xchg
jns
cli
lock
pop
cmp
jae
jg
sbb
and
xor
repz
gs
loop
fisttpll
xorb
jb
push
in
xchg
sbbb
pop
mov
jae
push
test
adc
lret
add
cli
jle
aas
in
dec
test
jno
and
mov
ljmp
insb
bnd
test
push
jno
roll
dec
sbb
adc
out
fadd
pop
cld
add
addr16
lea
sub
pop
cltd
and
cld
lea
push
fs
subb
jno
xor
xchg
xor
shrb
dec
push
lret
and
addr16
push
sbb
dec
dec
mov
cmc
push
xor
inc
dec
adc
or
fldcw
push
or
and
in
mov
cmp
jne
loop
rorl
sbb
pop
addl
adc
adcb
std
in
or
sbb
hlt
or
sub
fwait
xchg
lret
fildl
clc
dec
cmpsb
loope
pusha
mov
repnz
test
or
cmp
and
pop
mov
in
adc
js
sbb
mov
in
sub
in
decb
cmp
jp
jbe
add
add
push
data16
sbb
arpl
popf
adc
or
and
shrl
mov
and
jbe
in
xchg
sub
jle
cmpsb
xchg
int
push
es
xchg
lea
ficomps
adc
notb
jne
push
xchg
pop
test
sub
out
lea
xorl
out
cmp
xchg
fldt
cmp
jmp
dec
adcb
test
dec
xor
clc
dec
xorl
fwait
cmp
add
mov
andb
mov
sub
movsb
add
or
jne
jb
cmovo
jo
push
add
out
pusha
popa
cmp
addb
inc
pop
hlt
mov
or
add
icebp
cmp
lcall
xor
xchg
jle
daa
sbb
mov
cmp
push
shlb
sbb
int
ret
mov
or
test
xchg
sbb
imul
not
add
int3
pop
mov
call
fiaddl
mov
jge
dec
mov
push
or
pop
stc
cmpsb
jne
jne
rclb
pop
mov
jle
or
fcompl
xchg
pop
rorb
dec
push
push
or
ja
jno
rcll
jl
push
push
sarb
out
in
xor
popa
mov
sub
sbb
pop
hlt
xlat
cli
jecxz
out
push
fdivrl
mov
loop
data16
cltd
pop
mov
movsl
sbb
fwait
xchg
mov
push
pop
mov
xor
aas
add
xchg
jae
xor
mov
js
mov
test
outsl
and
xor
lcall
inc
adc
push
lcall
mov
xchg
xor
xlat
das
cld
xchg
in
lods
in
mov
sti
and
mov
jbe
iret
mov
nop
shrl
outsl
inc
enter
frstor
divb
clc
sbb
sub
push
pop
inc
or
mov
clc
aas
jbe
ret
dec
and
std
fcmovne
push
pop
push
sbb
daa
js
pop
mov
xor
ja
push
sbb
sub
and
pop
adc
lods
int3
inc
jb
mov
and
push
jle
idivb
mov
pop
cmp
subb
sbb
and
sub
mov
scas
sti
cmp
dec
jae
lds
cmp
inc
lea
push
aam
dec
fbld
aad
and
gs
xor
and
mov
jle
and
pop
lock
lods
mov
clc
inc
cwtl
mov
adc
test
aad
outsl
out
adc
lret
cmp
ljmp
jp
rcrb
loopne
mov
mov
mov
push
or
adc
push
test
or
adc
aam
jp
out
jge
push
fwait
into
aas
dec
push
mov
dec
test
shr
fisubs
and
loopne
sub
cli
jge
lret
rorl
push
jmp
adc
clc
cmpsl
jp
inc
push
aad
inc
out
es
int3
push
in
cmpl
repz
inc
cmp
ds
mov
dec
cmp
jb
sub
sarb
pushf
pop
ret
jno
mov
ret
out
dec
adc
scas
out
mov
and
lahf
lds
push
add
jae
lcall
sub
sahf
cmpsl
movsl
jno
outsb
daa
pop
cmp
mov
js
mov
mov
adc
daa
inc
adc
pop
add
cmp
push
dec
jae
repz
cli
ja
daa
pop
scas
sub
jmp
idiv
jae
jno
js
dec
testl
repz
daa
mov
pushf
jge
add
and
mov
imul
sbb
repz
cmp
repnz
je
mov
jns
test
push
pusha
xchg
mov
aas
add
jne
shl
xor
arpl
sub
leave
cmp
fs
mov
cmp
mov
out
je
in
dec
rcrb
dec
pop
pushf
not
jne
test
imul
pop
cmp
rclb
push
dec
pop
cld
fildl
and
hlt
loope
and
xchg
inc
std
cmp
add
insb
dec
lret
ss
add
adcb
mov
sbb
pop
mov
lret
cltd
pushf
push
clc
movsl
sti
scas
jecxz
test
xchg
ds
std
xchg
xlat
aad
lds
dec
xchg
rorb
out
stos
sbb
data16
add
arpl
xor
divb
test
cmp
dec
push
shrb
xchg
ljmp
stc
lods
in
mov
push
cmp
pop
in
cmc
insl
sbb
cmp
inc
dec
xchg
adc
xlat
ljmp
lods
inc
fwait
jg
lds
cwtl
mov
adc
jmp
sahf
mov
sub
mov
adc
out
repz
lods
mov
cs
adc
sub
cli
mov
xchg
cli
pop
jnp
pusha
xchg
xchg
jge
sbb
jecxz
mov
push
xor
orb
fimuls
jno
mov
or
pmulhw
stc
cmp
std
cltd
mov
adc
int
movsb
jne
or
mov
adc
push
cmp
clc
out
push
call
aaa
bound
shlb
pop
mov
xchg
jns
repnz
xchg
call
dec
xchg
sub
xor
mov
std
icebp
mov
ds
pop
push
xor
in
mov
sub
scas
lret
push
lods
mov
pop
jno
inc
lahf
sub
mov
mov
into
pop
mov
add
lcall
cltd
sub
scas
add
repnz
repnz
imul
mov
leave
and
xor
testb
insb
dec
lahf
pop
push
and
mov
sti
outsl
pusha
les
data16
sub
cmp
jbe
push
mov
arpl
aam
imul
out
cmp
dec
jmp
inc
cmp
xchg
adc
mov
shll
filds
lret
mov
mov
lcall
cmp
and
aam
push
ret
leave
add
insl
fcomps
mov
icebp
mov
add
aaa
cld
leave
pop
nop
or
mov
mov
fcomps
mov
adc
push
mov
popa
imul
pop
sbb
or
mov
outsb
add
mov
dec
sub
jno
dec
pop
cmp
sbb
es
sub
js
jo
push
mov
xchg
adc
pop
dec
pop
std
mov
fsubs
cmpl
das
les
je
sbb
fwait
inc
push
jno
int3
mov
jge
jno
mov
mov
fstpt
fnstsw
outsb
mov
jg
pop
mov
cmp
pop
pop
mov
inc
fwait
or
mov
inc
adc
clc
xor
movsl
cwtl
repz
mov
push
lods
sahf
stc
outsl
xchg
sti
repz
scas
das
inc
add
xchg
rcl
dec
out
aas
test
pop
shlb
cmp
dec
mov
pop
jo
in
inc
push
lods
sbb
mov
stos
mov
andw
leave
or
popf
pop
icebp
stos
jns
dec
lods
fistps
loope
out
jne
out
jno
push
inc
cmp
jmp
pop
std
pop
jae
addr16
lea
xor
addr16
adc
test
mov
add
les
imul
lea
add
xor
icebp
mov
das
mov
push
cmp
cmc
add
imul
testl
roll
test
push
iret
pop
sbb
stos
and
sbb
pop
call
adc
mov
jcxz
add
dec
fbld
adc
hlt
test
mov
mov
sbb
lahf
sbb
inc
std
cs
pop
mov
repnz
push
push
shrl
mov
push
push
cmp
fcmovu
sti
test
sub
call
mov
pop
not
add
push
es
popf
icebp
lcall
adc
or
leave
or
mov
incl
shr
call
sahf
xchg
stos
addl
adc
push
test
mov
cltd
mov
pop
cmp
inc
mov
push
add
arpl
cwtl
pop
dec
repnz
jge
test
outsl
mov
mov
ds
pop
daa
repz
push
les
cmp
push
lahf
test
mov
pop
cmp
dec
inc
mov
jnp
mov
xchg
icebp
jecxz
cwtl
jnp
and
mov
imul
daa
mov
das
ds
push
jno
sub
loop
mov
addr16
notl
bound
dec
pop
mov
rol
push
scas
inc
adc
mov
lds
push
sahf
mov
xor
loopne
pop
pop
add
lock
imul
cli
adc
stos
cmc
adc
mov
mov
cltd
mov
dec
xchg
std
out
push
mov
mov
or
mov
adc
sbb
lock
mov
push
aas
aas
jp
pop
jl
cmc
xor
jmp
std
mov
jp
mov
sub
int3
imul
and
hlt
pop
inc
into
andl
inc
loopne
xchg
in
add
jecxz
imul
push
sarl
lds
es
iret
rolb
push
push
dec
push
xchg
stos
mov
mov
xor
outsb
int3
jl
cmp
push
pop
xor
xor
dec
stc
fnstcw
aam
nop
mov
out
cmp
pop
and
pop
stos
sub
fidivl
ss
mov
icebp
data16
push
loop
jle
sbb
xor
sub
pop
cli
pop
inc
xchg
push
dec
lret
fistpl
inc
out
sbb
add
sbb
lcall
fldcw
mov
lock
lods
and
repz
into
add
hlt
test
jmp
nop
and
ret
ret
jg
cltd
sbb
les
cwtl
adc
je
pop
cmpsb
pop
bound
clc
arpl
add
fadds
add
sub
xchg
ljmp
jp
rcrl
sti
bound
inc
pop
lds
nop
xor
jg
push
jg
xchg
cmp
lcall
add
rcrl
jmp
xchg
push
out
push
lcall
adc
out
mov
pop
stos
pop
in
push
aad
lahf
mov
xorl
mov
cmp
jecxz
inc
loop
scas
enter
xor
sbb
idivl
loope
pushf
pop
int
jmp
sub
and
pop
adc
incl
dec
jbe
dec
rcl
cwtl
add
jae
movsb
adc
das
loope
mov
and
cli
out
and
cmpsb
dec
loop
cli
repz
mov
rorb
adc
pop
or
lock
and
push
pop
faddp
sbb
jl
imul
xchg
loop
sbb
cmpsl
scas
and
mov
or
fcomip
inc
clc
inc
mov
cltd
fwait
je
or
lahf
cmp
stos
mov
add
lods
hlt
clc
into
push
stos
xchg
mov
dec
stc
adc
jo
test
add
mov
ret
jo
rolb
fsubrl
or
push
mov
outsl
sbb
aaa
pmaddwd
inc
pop
cmp
lahf
push
cwtl
push
xlat
pop
add
in
lods
dec
out
jp
jno
outsl
test
xchg
jne
shl
mov
imul
icebp
add
mov
or
test
mov
scas
add
and
cmp
imul
dec
in
mov
and
xchg
dec
jnp
int
add
inc
mov
popa
mov
adc
mov
lcall
sub
fildl
push
push
enter
stos
aas
sbb
test
in
inc
imul
stc
nop
push
sbb
jne
jle
pusha
clc
xchg
cmc
loopne
lds
cmp
mov
int3
adc
mull
in
scas
push
sbb
xchg
add
xchg
loopne
clc
scas
xor
pop
or
sbbl
xorb
repnz
adc
jae
or
fnsetpm(287
test
or
mov
push
addr16
and
jae
test
jmp
jnp
add
test
jnp
ja
add
push
popf
insl
sub
sub
out
insl
xor
fwait
push
stos
insb
daa
jmp
pop
js
cld
mov
cmpsb
test
and
xchg
push
or
icebp
popa
lods
ljmp
fucomp
jb
enter
lcall
movsl
pop
adc
lret
cltd
int3
dec
repnz
fldl
es
sub
xchg
sahf
aas
pop
pop
xor
mov
mov
popf
ficomps
js
and
lods
or
loopne
xchg
imul
jae
pop
mov
cli
and
fs
nop
sub
push
arpl
movsl
add
pop
cs
fwait
add
lods
insl
std
adc
mov
nop
in
inc
hlt
scas
dec
arpl
mov
addl
sbb
sahf
test
add
enter
stos
popa
and
add
jb
add
cmpsb
enter
and
scas
ljmp
pop
outsl
aad
enter
or
std
or
sbb
sub
jne
cwtl
fmull
lcall
adc
push
push
test
mov
mov
ljmp
push
lahf
lahf
pop
arpl
jecxz
sahf
or
divl
aam
sarb
mov
mov
outsb
adc
mov
push
inc
test
pop
stc
add
ja
push
fnstcw
mov
pop
sub
scas
in
xchg
and
mov
and
cmp
mov
sbb
adc
xchg
or
shll
addl
imul
fdivrl
cmc
divb
pop
mov
or
les
loop
xor
xchg
cmp
fsubrl
dec
cmp
int
out
pop
loope
adc
and
mov
xchg
addb
aas
hlt
dec
sub
dec
mov
cmp
fdivp
pop
in
adc
fcom
and
pop
push
push
push
test
aaa
adc
inc
js
or
inc
popa
jge
and
cwtl
gs
sti
inc
inc
loop
and
bound
ffreep
xchg
fsubrl
push
cmpsl
jmp
psubq
sbb
idivl
cld
sbb
jb
or
and
jle
sbbl
xlat
xor
sahf
dec
into
in
xchg
push
dec
jg
and
mov
fwait
sbb
jo
sub
loope
push
outsb
sbb
test
dec
xchg
xchg
xchg
in
lea
cli
loopne
sub
lods
cmp
or
pop
adc
mov
in
mov
inc
in
adc
cmp
xor
fwait
test
cmp
inc
lock
daa
dec
divl
jmp
and
das
mov
lahf
ret
lock
jnp
inc
inc
jecxz
xor
loope
mov
outsl
lret
push
cmove
aam
jns
pop
lret
and
or
fisttpl
out
aam
or
adc
pop
or
mov
lahf
xchg
push
add
jg
sbb
fs
inc
clc
add
scas
xchg
bound
cmp
inc
fisubrl
push
cmp
fdivrl
mov
sbb
ret
addr16
daa
jl
mov
inc
test
and
loopne
mov
pop
push
mov
aas
outsl
sbb
lock
pop
xchg
mov
call
aas
fistps
fcomps
ds
push
mov
je
jp
sbb
push
dec
insl
xor
xchg
pop
stos
push
je
repnz
notl
mov
mul
inc
mov
cmp
xor
rcr
jl
les
jo
mov
xchg
mov
dec
notb
adc
mov
mov
mov
adc
test
test
sbb
fbstp
fadd
pop
loop
popa
lret
loopne
fsubrs
jne
scas
es
dec
dec
fisubrl
dec
inc
cmp
test
addr16
out
imul
dec
movsb
enter
dec
mov
adc
test
insl
adc
pop
and
jmp
mov
ret
inc
clc
pop
mov
xor
and
std
mov
cli
leave
xchg
sbb
and
out
add
sbb
sbb
xor
xchg
sub
pop
in
and
dec
xchg
or
aaa
call
sbb
rcrl
or
xchg
sub
pushf
insb
adc
sub
aam
xchg
inc
jmp
lock
mov
test
aaa
mov
add
mulb
push
cmp
push
inc
enter
mov
cmp
into
add
stc
jmp
and
repnz
ror
cmc
in
xlat
insl
movsl
scas
add
insb
jecxz
sbb
arpl
sbb
dec
dec
cmp
cmp
hlt
test
xchg
ds
mov
push
inc
inc
pop
outsb
inc
sbb
jne
jne
fnstcw
dec
or
dec
sbb
dec
inc
data16
divl
or
sti
or
sbbl
jl
ret
inc
inc
dec
xlat
call
and
inc
repnz
push
mov
lret
inc
cmp
ret
mov
mov
mov
ret
aas
gs
sahf
out
cwtl
pop
outsl
loopne
test
dec
cmp
test
je
scas
mov
fwait
jno
shr
pop
mov
inc
addr16
outsl
pop
or
xchg
jne
ret
inc
mov
mov
insl
xchg
psubsb
and
mov
test
lret
cmp
sub
mov
fiadds
hlt
xor
mov
xchg
clc
jbe
mov
mov
pop
jnp
repnz
cltd
arpl
push
test
sbb
jp
jb
aaa
int3
sub
mov
xchg
int
out
adc
test
loopne
jle
lret
shll
adc
and
mov
stos
aad
xchg
in
lds
adc
shr
or
cmp
mov
dec
cmp
pusha
outsb
mov
jnp
cmp
in
iret
jge
adc
hlt
sbb
notb
mov
push
iret
mov
cmpsl
addr16
lret
mov
addl
jns
fbld
pop
cs
pop
ret
jp
xchg
mov
arpl
push
repz
clc
xchg
inc
dec
fnstcw
add
je
aaa
sub
out
push
and
jmp
mov
add
add
sbb
clc
cwtl
movsl
pusha
jl
daa
mov
testl
jbe
in
arpl
xor
sub
cld
das
and
push
push
test
pop
add
enter
bound
iret
lret
icebp
sbb
mov
xor
mov
mov
lock
xchg
arpl
jecxz
and
pop
push
dec
cmp
mov
sbb
pop
repz
and
cmp
je
xchg
repz
pop
lahf
scas
out
sub
stos
rcrb
leave
test
subb
hlt
adc
loop
mov
out
adc
enter
sbb
rclb
test
lret
insb
inc
mov
cmp
xchg
ret
xchg
pop
mov
ret
repnz
ss
jge
xchg
rcrl
test
pop
fcoml
mov
pop
xor
mov
inc
inc
sub
xor
cld
setl
cmc
sub
mov
fwait
or
cli
mov
repnz
xchg
jo
scas
inc
shll
push
mov
add
pop
xchg
sbb
or
push
outsb
adc
rorl
add
mov
sub
ja
dec
pusha
adc
xchg
mov
das
mov
repz
dec
cmp
add
lods
cmp
dec
push
hlt
jb
cmp
mov
shll
and
mov
mov
cwtl
loope
xor
imul
aam
cli
and
mov
mov
xchg
dec
mov
rcrb
cld
dec
imul
xor
loop
xchg
sahf
inc
mov
inc
mov
push
xchg
push
cmp
imul
nop
pop
add
xor
repnz
jbe
and
and
lret
es
mov
xchg
int
cmp
inc
je
ret
imul
or
push
repz
xchg
xlat
stc
std
in
push
lea
mov
cld
popa
xchg
adc
mov
jl
sti
icebp
stos
daa
dec
pop
push
insl
jp
pop
and
dec
pop
insl
ret
mov
mov
pop
cwtl
xor
scas
lcall
lahf
pop
ret
aam
pop
pop
add
jnp
push
lret
int
pop
out
addr16
icebp
lods
daa
int
and
pop
pop
mov
xchg
jb
das
lods
sbb
mov
out
push
cmp
xor
pusha
enter
jo
mov
push
push
xchg
nop
sbb
fstpt
jae
jl
or
je,pn
gs
inc
rorl
and
testl
addb
and
hlt
aam
cmp
int3
adc
loope
inc
aas
dec
dec
pop
xchg
loop
cmp
mov
inc
repnz
cmp
jge
ss
jne
daa
or
call
test
sbb
push
sub
ja
cmc
test
insl
xchg
lret
fcmove
add
imul
clc
xchg
int
mov
and
xor
outsb
lods
jne
adc
lods
push
loopne
lahf
jle
push
movl
mov
fdivr
sbb
test
mov
stos
fwait
das
mov
scas
mov
into
dec
xlat
out
adc
sub
jle
lods
jecxz
cmpsb
ljmp
or
inc
pop
cli
xorb
rol
maskmovq
notl
imull
out
push
mov
pop
adc
sub
lds
loope
out
insl
fs
gs
jl
inc
test
orb
jp
push
daa
pop
lods
xchg
add
scas
dec
scas
lret
and
out
pop
call
and
cli
popa
lods
daa
sbb
insb
test
xor
jmp
cld
mov
movsb
inc
pop
pusha
push
inc
and
mov
mov
arpl
mov
pop
add
cmp
pop
dec
gs
dec
aam
ret
shlb
cmp
jne
lods
xchg
push
insb
icebp
mov
jecxz
xchg
mov
add
or
cmpsb
cltd
fwait
pushl
movsb
cmp
shrl
pop
popf
sbb
shrb
std
je
mov
jp
adc
pop
movsb
scas
jne
insb
clc
push
xchg
les
inc
lea
ficoml
mov
pop
dec
sarl
fisttpl
ss
gs
pop
jmp
adc
cmp
cwtl
inc
js
loop
sbb
les
dec
outsb
inc
popf
or
jnp
clc
sarl
notb
hlt
cmp
stos
test
jb
das
gs
cmp
dec
inc
cmp
lods
call
push
jne
add
stc
loopne
gs
rclb
sub
pop
add
dec
stc
es
pop
scas
and
jge
push
or
jecxz
add
pop
andb
xlat
mov
dec
push
gs
int
leave
pop
scas
jne
faddl
xchg
scas
xchg
sbb
sbb
push
cs
mov
out
cmp
jae
std
adc
fninit
xor
or
repnz
popa
and
mov
mov
loop
bound
dec
shrl
mov
lods
jmp
xor
xorl
lods
push
pushl
and
out
nop
mov
call
pop
xchg
push
sub
ficoms
sub
xor
pop
inc
cmp
xor
dec
fwait
mov
xor
push
jmp
pop
inc
int
jge
push
stc
and
xorb
mov
inc
push
jl
pop
stos
mov
mov
cmp
lock
jnp
jge
mov
mov
adc
std
jp
mov
or
mov
movsl
int3
xor
shll
in
addr16
ficompl
in
cld
jb
ljmp
mov
adc
dec
or
xchg
jg
hlt
dec
ja
pop
jnp
add
push
imul
xchg
jp,pn
out
mov
dec
and
loopne
inc
repnz
and
testl
into
cs
push
dec
sbb
inc
lea
or
lcall
mov
add
xchg
sbb
mov
mov
dec
lret
dec
push
dec
iret
adc
sbb
roll
loope
jae
addr16
pushl
repz
and
iret
es
in
mov
pushf
pop
xchg
xchg
push
jnp
inc
add
jmp
xor
mov
push
out
inc
ljmp
xchg
and
mov
jl
fucomip
sub
pop
cmpsb
mov
aad
adc
pop
bound
and
or
sbb
sbb
int3
push
mov
push
pop
jno
push
add
pop
jge
or
jnp
inc
cltd
pop
inc
mov
xchg
adc
add
and
das
cmp
movsl
xor
sahf
inc
cmp
mov
sbb
dec
imul
lock
in
das
mov
pop
popa
lods
in
loopne
fcompl
mov
xlat
adc
add
and
les
stos
mov
pop
ds
or
cmp
adc
jmp
cmp
mov
push
jl
adc
imul
fwait
pushf
lea
jnp
adc
dec
mov
and
pop
inc
psadbw
ss
mov
test
xchg
into
iret
imul
pop
xor
dec
xchg
je
rcrl
dec
pop
inc
outsl
jbe
jle
bswap
movsb
mov
leave
adc
adc
arpl
adc
mov
popf
decl
movsl
xchg
dec
sbb
ret
inc
int3
das
popf
ss
ds
and
in
mov
shll
jmp
test
pop
dec
cld
adc
inc
add
in
mov
and
and
jb
lock
sbb
ja
inc
loopne
pop
ret
mov
jp
ja
imul
inc
sahf
jb
in
out
fstps
orb
lcall
stos
mov
cmpsl
push
xchg
les
xchg
jl
mov
arpl
jae
test
xchg
icebp
out
dec
imul
cwtl
sub
notb
push
lea
cmp
adc
mov
pushf
cmp
mov
int
out
add
pop
cmc
dec
xchg
fdivs
es
jns
xchg
xchg
inc
dec
cmp
loop
and
mov
repnz
int3
pusha
es
jle
dec
fdivrs
test
sbb
adc
aas
cld
mov
inc
dec
pop
xchg
adc
sub
inc
mov
jmp
mov
pop
cmp
and
sbb
inc
icebp
mov
std
bound
inc
dec
insl
fwait
xchg
sbb
add
and
js
mov
nop
pop
test
outsb
push
aam
incl
sub
dec
iret
jae
xor
movsl
lock
adc
es
mov
jp
push
outsb
int
rorb
addr16
pop
repnz
sub
stos
mov
cmp
jmp
aad
inc
insl
into
pop
and
mov
and
xor
mov
aam
loopne
add
nop
dec
shlb
lods
xor
xchg
out
gs
xchg
ret
push
dec
and
movsb
lcall
out
mov
fidivs
nop
imul
sbb
cmp
adc
fstpl
fisttpll
xorl
rcl
xor
pusha
jb
les
adcl
out
divb
fucomp
push
cld
jmp
inc
mov
call
push
out
xchg
or
dec
dec
cmpsb
mov
xlat
xchg
sbb
lret
xchg
push
jp
std
mov
xchg
and
and
scas
dec
xlat
adc
shll
fcompl
mov
clc
push
and
xlat
jge
test
das
or
dec
sbb
xor
mov
lea
outsb
jmp
or
idivl
mov
testl
jmp
ret
addl
add
mov
shr
push
sub
scas
sarl
ror
into
fs
adc
xchg
imul
cmp
inc
pop
or
cmp
sbb
loopne
out
jg
jle
mov
loopne
pop
daa
mov
ret
stos
test
aam
mov
mov
jg
push
ficomps
lret
bound
sbb
sarb
out
scas
stos
cmpsl
push
xchg
fisubs
into
pop
daa
push
sbb
out
mov
stos
outsl
int3
clc
popf
mov
jbe
or
pushf
in
mov
sbb
enter
ja
mov
mov
adc
cmp
pushf
repz
jecxz
int3
or
pop
lods
push
mov
fists
add
test
cs
jns
cltd
sbbl
sahf
cmp
in
sub
inc
insl
dec
and
jbe
rolb
es
in
mov
fstl
fdivp
imul
and
inc
addr16
shll
push
push
mov
out
pop
sahf
push
insb
mov
in
ljmp
inc
jno
nop
nop
dec
cmpsl
ds
pop
adcl
inc
ret
add
add
in
xchg
add
insb
mov
shrl
enter
or
mov
ret
pop
mov
jns
mov
mov
popf
push
mov
aaa
ljmp
xchg
sbb
push
ret
cmpsb
mov
ljmp
sahf
add
mov
xchg
cmc
push
xor
aas
xor
mov
in
sub
aaa
lock
mov
or
jno
movsb
rcll
xchg
inc
mov
mov
push
stos
sub
push
mov
imul
jmp
shll
cli
testl
mov
stc
les
xchg
out
push
xor
insb
lret
xchg
rcll
jmp
jl
mov
cwtl
das
ds
sbb
mov
dec
pop
es
dec
mov
push
sbb
arpl
sbbb
pop
stos
negl
mov
cmc
push
cltd
jns
clc
aaa
insb
mov
out
push
jns
addr16
mov
xchg
inc
mov
pop
add
sbbl
outsl
dec
mov
fistl
sbb
pop
mov
adc
adc
loopne
js
insb
mov
sarl
push
jge
mov
leave
scas
push
rcll
add
and
add
insb
insl
rorl
enter
push
faddp
cmpsb
ljmp
sbbb
mov
dec
iret
fsubl
shl
in
cmpsl
ret
divl
loope
in
xlat
pop
pop
mov
insl
lods
dec
pusha
mov
xor
xor
pop
adc
jae
loop
ss
repz
leave
sti
loopne
movsl
std
aaa
add
pop
fadds
or
fnstenv
mov
mov
aaa
popf
push
xor
xor
mov
sbb
in
dec
and
pusha
int3
mov
adc
cwtl
ss
test
nop
xchg
add
mov
inc
mov
scas
xchg
pop
sbb
imul
cs
push
mov
popa
imul
or
inc
mov
stos
sub
iret
xor
dec
sbb
aaa
testl
in
xchg
add
jle
mov
mov
and
inc
add
xlat
or
jecxz
xor
ss
lret
add
push
lret
cwtl
dec
mov
xor
lock
cwtl
sbb
or
rolb
mov
adc
mov
and
mov
jge
push
push
enter
ss
sbb
and
cmp
test
push
jns
call
jp
orl
xlat
mov
lods
test
cmp
inc
fldenv
jl
lret
xchg
out
push
mov
xchg
or
inc
cmp
stos
inc
push
xor
aam
cmpsl
lea
mov
pop
prefetch
call
sahf
mov
pusha
data16
jno
lret
pusha
fldcw
and
cmp
std
mov
insb
movsb
push
xor
das
pushf
dec
jg
cld
mov
fs
mov
or
dec
int
leave
mov
add
cltd
ljmp
mov
jg
pop
inc
je
mov
push
or
add
icebp
data16
jg
movsb
divl
add
sub
pop
cmp
adc
clc
je
sarl
stos
shlb
lret
xor
lea
push
dec
gs
or
sub
repz
mov
mov
fdivrs
dec
inc
push
and
inc
mov
std
fnstenv
iret
mov
inc
mov
jmp
rol
push
jle
lock
mov
mov
mov
xchg
movsl
pop
xchg
and
add
cmp
xor
cwtl
or
jo
jle
fcmovnu
xchg
sbb
dec
jg
push
in
repnz
lcall
fimuls
pop
cwtl
jno
inc
ds
jmp
lea
pop
enter
nop
cmp
mov
mov
ficompl
out
dec
sbb
jb
clc
inc
outsb
stos
lcall
jo
test
lahf
mov
mov
daa
das
inc
cmp
jb
lret
add
push
scas
mov
pushf
lret
pop
test
loopne
push
lods
jge
ret
rol
jecxz
jmp
repz
test
fisttpl
xor
mov
add
xor
mov
dec
adc
sbb
cltd
xor
loop
dec
jo
incl
xchg
stos
ds
sbb
jecxz
arpl
xchg
stc
aad
jne
ficomps
add
mov
icebp
hlt
adc
ret
add
add
stos
daa
ret
or
mov
aam
cmpsl
push
and
jb
ljmp
repnz
jns
ja
add
lea
enter
mov
imul
int
push
push
aaa
pop
inc
jmp
bound
adc
int3
cs
aas
jl
adc
pop
jp
jns
movsb
and
sar
push
ss
stos
sbb
outsl
sti
vpaddq
lcall
stos
sub
loop
or
adcb
lahf
mov
or
scas
fdivrs
rcrb
das
push
jns
xchg
mov
mov
adc
cmpsl
int3
aas
sar
dec
rorl
mov
das
lods
push
aad
adc
test
mov
shrl
adc
int
enter
cwtl
inc
enter
or
ret
mov
es
fistps
lcall
ja
andb
imul
pop
hlt
jo
cmpsl
mov
jle
pop
subl
pop
adc
push
adcl
sahf
add
shrl
mov
fdivrs
dec
add
addr16
pop
js
pop
add
adcl
mov
mov
jecxz
xor
inc
pop
and
mov
stc
ljmp
jno
negb
pop
push
sub
pavgw
inc
in
jle
clc
bnd
mov
popf
inc
jl
enter
sub
fidivs
dec
iret
mov
fnstenv
add
cwtl
call
mov
ljmp
leave
stos
into
pusha
ficomps
aaa
xor
mov
jle
cli
addb
mov
xchg
jae
imul
mov
push
pop
adc
subb
insl
scas
andb
inc
mov
ret
rol
stos
sbb
notb
aam
outsl
mov
fsubs
xchg
testl
out
cltd
nop
in
addr16
mov
dec
xlat
ja
sbb
xchg
mov
aaa
call
or
mov
xchg
jnp
scas
inc
cmp
or
xor
leave
sbb
fdivrl
enter
out
pop
pop
scas
loope
into
mov
cmp
adc
mov
xor
jne
movl
ja
in
movsl
sbb
lods
xlat
and
das
leave
outsb
jge
in
ss
push
movsb
pushf
inc
andl
jae
push
add
cmpb
jae
or
int3
addl
into
hlt
in
mov
enter
adc
leave
add
lods
and
js
out
lcall
jne
jp
mov
or
ds
pop
hlt
pop
or
into
sbb
test
rorb
pop
sub
loope
push
and
std
pop
out
inc
lods
leave
test
mov
lret
and
std
hlt
add
hlt
xlat
ud2
inc
adc
aad
fidivrs
xchg
sub
xchg
out
adc
loope
mov
dec
shll
clc
or
mov
int3
sbb
fs
dec
ds
mov
dec
xorb
fsubs
dec
loopne
test
mov
mov
sahf
xchg
or
sbb
sub
pop
in
sub
push
xchg
repz
sti
into
in
ret
mov
adc
pop
mov
dec
add
rcrl
loopne
jle
lret
repnz
rcll
fnstenv
pop
dec
jle
or
mov
and
inc
dec
sub
mov
sbb
pushf
stos
jo
push
arpl
and
xchg
cld
lods
fdivr
xchg
loop
test
jb
xor
sub
and
push
sarl
pushf
imul
aad
jb
in
or
pop
mov
loopne
adc
sub
lock
in
mov
mov
and
nop
shl
add
push
mov
icebp
sub
push
inc
mov
mov
xor
cmp
mov
cli
add
xchg
adc
lret
mov
cmpsb
push
fisttpll
mov
lret
push
popa
test
hlt
dec
imul
dec
jmp
push
mov
inc
lds
cmpsl
push
cmpsb
jb
idiv
jmp
inc
add
mov
mov
es
push
lahf
movsl
fidivrl
fsubr
arpl
pop
push
xchg
addr16
pop
flds
push
call
mov
lods
clc
movsb
mov
data16
inc
dec
inc
xchg
sarb
xchg
mov
xchg
mov
mov
nop
clc
sub
cmp
std
dec
fnstenv
push
push
xor
adc
and
pop
jne
outsb
test
bound
push
sub
mov
adc
in
adc
sahf
loop
push
ljmp
jp
fsubl
or
cmp
xchg
js
popa
loop
mov
lcall
loope
inc
les
icebp
jecxz
sub
mov
lcall
leave
imul
jnp
js
daa
sbbb
push
sub
ds
popa
imulb
jns
xchg
sbb
sbb
mov
jp
mov
adc
or
xor
mov
test
mov
test
std
out
mov
data16
test
sub
push
insl
mov
jmp
subl
test
outsl
xor
setne
adc
xor
ror
xchg
push
or
mull
ret
pusha
or
filds
dec
clc
jno
push
std
in
or
push
test
sbb
dec
addr16
cmp
fimuls
push
and
jo
imul
out
push
push
xlat
insb
xlat
sbb
mov
out
outsb
and
sub
sub
push
xor
xchg
inc
in
roll
cmpsl
sub
sub
xchg
mov
cmp
inc
mov
sub
fisttps
in
iret
stc
inc
fdivrs
fnstcw
outsb
outsb
xchg
cld
jmp
pop
test
out
xchg
jle
cmc
adc
jb
or
mov
mov
push
xchg
in
mov
int
inc
sub
fst
fldl
cmp
xchg
add
nopl
jbe
in
stos
or
jne
xor
mov
lods
mov
ljmp
ds
fs
shlb
xor
adc
iret
push
and
sub
pmaxub
in
sbb
jno
rolb
rorb
ss
aaa
jb
xor
std
das
test
inc
add
pop
enter
addr16
scas
inc
bound
pop
enter
cmpsb
xchg
or
and
inc
xchg
pop
xor
add
push
adcb
mov
mov
cmpsl
loopne
mov
add
sub
fists
ds
pop
or
mov
or
pop
adc
test
and
in
fsubrl
clc
pop
pop
push
int
int3
ret
jecxz
rorb
rcll
inc
or
jns
inc
testb
pop
cmc
pop
aaa
test
ret
insl
mov
pop
push
sub
scas
pop
outsb
daa
push
ja
ss
orl
outsb
scas
incl
or
int3
jmp
dec
or
push
mov
sub
xchg
fidivrl
jle
xchg
fistl
or
in
out
aam
mov
inc
movsb
fcomip
out
mov
stc
xor
out
cwtl
adcb
jo
or
lret
cltd
je
mov
mov
sbb
fists
cld
jg
cli
imul
mov
in
jl
int3
fisubs
add
outsb
push
jle
push
popf
setae
lret
sbb
or
cmp
jle
data16
add
mov
fs
mov
rol
push
push
xor
js
sahf
dec
sahf
xchg
push
test
push
jno
sub
push
and
out
add
inc
data16
pop
sub
cmpsb
xchg
sti
fcomp
mov
lcall
jmp
or
icebp
mov
xor
pop
adc
sub
push
jb
clc
imul
stc
leave
inc
ret
jno
push
push
mov
hlt
dec
pop
xchg
sub
loope
jg
xchg
pop
cltd
cmp
ds
outsl
sub
mov
dec
xchg
scas
in
daa
jg
loope
cs
out
sahf
outsl
xor
aad
iret
jns
inc
mov
outsl
adc
fs
sbb
movl
je
and
ljmpw
mov
and
scas
mov
sub
repnz
pop
iret
fnclex
jmp
sarb
push
stos
mov
add
mov
sbbb
inc
and
les
loope
cwtl
aad
andl
or
stc
mov
adc
xor
xor
dec
xchg
xor
in
xchg
stos
js
adcb
sbb
xor
lea
jo
insb
std
mov
sbb
lods
es
rolb
outsl
ret
test
cmp
push
cld
push
loop
rcr
mov
mov
mov
jae
xor
mov
fscale
icebp
pop
cmp
iret
jg
insb
clc
pusha
das
mov
cltd
pop
rcll
sarb
imul
orl
ds
repz
ret
cmp
insb
pushf
xor
shrl
les
call
xchg
cmpsl
pop
jecxz
stos
push
jmp
inc
idiv
push
fsubs
mov
add
cld
lds
adc
jne
jnp
popf
test
pop
lret
out
stos
adc
test
cmc
arpl
jae
push
add
mov
xchg
daa
fst
nop
imul
push
cmp
push
mov
push
cwtl
push
test
daa
out
rclb
stos
movsb
mov
aaa
cwtl
in
mov
push
cmp
cld
shlb
mov
xchg
aaa
ljmp
jno
jg
call
pop
jns
lds
sub
push
into
mov
sbb
or
out
dec
mov
addb
fnstcw
test
cmpsl
dec
popa
ret
cld
adc
xchg
sbb
xchg
cs
ss
ljmp
lods
push
or
pop
ror
stos
fwait
addb
push
sahf
ds
add
push
xchg
sub
sarb
xchg
outsb
xor
xor
lock
data16
fildll
fistpll
pop
inc
jl,pt
loopne
push
dec
das
cmc
adc
idivl
add
lcall
dec
sbb
xor
sub
rcll
out
xor
inc
mov
adc
in
and
adc
in
fstpt
or
inc
imul
dec
int
pop
stos
lods
xlat
push
jle
mov
fldt
lcall
add
sub
push
lret
sub
icebp
ljmp
jmp
iret
out
popf
pop
mov
rcrb
mov
sbb
xchg
and
hlt
cmp
pop
ficomps
inc
bound
adc
mov
cmpsb
scas
cmc
mov
shll
mov
clc
cwtl
rcl
ficompl
sub
jbe
jl
adc
cltd
int3
in
mov
ret
jge
adc
fwait
aas
add
jnp
out
imul
dec
dec
xor
aam
xlat
xchg
cmp
int
std
jecxz
mov
cmp
sub
pop
xchg
mov
cmp
and
push
aam
daa
or
lock
sub
mov
mov
std
push
je
rorb
mulb
dec
cmc
fsubs
dec
mov
and
adc
aas
or
push
cmp
data16
fwait
pop
add
dec
push
push
cmp
addl
cwtl
dec
jns
popf
leave
push
dec
jl
clc
mov
dec
outsl
ret
mov
fmull
and
pushf
xchg
jp
inc
fldcw
cmp
xchg
or
fcmovu
add
ljmp
lret
stos
sti
dec
cld
fisubs
es
cwtl
repz
xlat
jge
inc
sbb
fst
and
dec
inc
mov
or
pop
adc
push
push
cmp
lret
and
mov
loopne
mov
xor
xor
and
sbb
xor
dec
jmp
push
roll
ds
xchg
pop
or
mov
mov
adc
insl
push
cli
jnp
data16
mov
push
lds
lcall
call
dec
mov
out
arpl
cmpsb
clc
sahf
pusha
ds
sub
jge
mov
add
mov
sar
mov
push
std
ljmp
movsl
and
lods
inc
adc
sbb
xchg
sub
xchg
cmp
xorb
mov
push
insl
inc
jnp
adc
stos
movsb
sub
repnz
aam
orb
push
pop
fwait
xchg
xlat
cmc
cmp
sbb
push
rolb
fstl
dec
in
jbe
out
fmul
bound
movsb
jle
mov
xchg
mov
jg
cld
shll
les
rcrb
fsubrp
pop
and
sub
xchg
outsb
aam
cmp
js
push
into
aaa
and
mov
sub
mov
clc
or
popa
ret
fwait
jg
subl
xor
rcl
cmp
in
jne
mov
push
fnstenv
sub
fldcw
mov
and
jmp
lret
mov
imul
push
repz
pop
jae
iret
mov
xchg
adc
push
int3
push
cli
fdivrs
ffreep
and
jns
arpl
lret
or
pusha
jnp
lret
cmp
push
mov
push
icebp
xor
aad
flds
push
or
add
pop
subb
data16
ficoms
daa
xchg
xchg
scas
and
pop
lea
xchg
mov
xor
lods
stc
stc
mov
das
js
sub
inc
mov
and
cmpsl
push
mov
popf
rorb
pop
xor
out
inc
insl
icebp
imul
jecxz
in
loope
mov
mov
dec
mov
repnz
loope
xchg
fstl
jecxz
xchg
jno
imul
inc
mov
test
push
in
cmp
cltd
push
flds
xchg
adc
into
push
mov
mov
push
mov
fcoms
lock
dec
add
inc
inc
pop
aad
or
inc
rolb
je
popf
adc
or
and
sub
add
leave
andl
add
and
jp
in
xchg
and
mov
add
gs
dec
aad
and
xchg
inc
daa
inc
test
lods
pop
lcall
pop
add
les
pop
mov
leave
sub
xchg
imul
xchg
pop
mov
out
mov
sbbb
mov
in
sub
lret
ret
repnz
mov
inc
sub
xchg
in
outsb
stos
inc
rcl
sbbb
shl
in
cmc
pop
pop
sbb
js
lods
stos
stc
int3
or
es
xor
repnz
sub
and
lret
ds
fsubr
mov
ficoml
sub
outsb
inc
mov
stos
sbb
imul
repz
cmp
sub
push
dec
push
enter
jp
lods
jae
inc
jo
and
movsl
hlt
pop
fstl
cmp
cmc
jnp
pcmpeqd
pop
sbb
ds
jle
xchg
cltd
das
adc
fstpt
out
sub
dec
fadd
push
movsl
xchg
aad
add
je
adc
add
test
and
xchg
jge
addl
out
cmp
pusha
mov
ret
test
bound
fldenv
mov
addr16
sarb
push
xchg
js
or
ds
imul
test
pop
cli
jle
ds
jg
aaa
scas
add
mov
mov
bnd
popa
cli
ss
sarb
jae
pop
popf
xor
lcall
imul
sub
aaa
aaa
xchg
jge
aas
push
cwtl
mov
lods
into
lds
xor
push
roll
aad
mov
or
jmp
xchg
mov
inc
cmp
or
loopne
xchg
outsb
or
mul
es
addb
dec
pop
cmpsb
js,pn
pop
mov
rorb
mov
ret
lds
inc
lods
sti
mov
mov
js
inc
std
pop
mov
ficompl
dec
lcall
pop
jl
pop
enter
xchg
imul
sti
repz
adc
lea
popf
insl
icebp
test
cmp
lret
out
push
or
jle
jbe
inc
mov
hlt
repz
jne
aas
jecxz
pop
or
and
loopne
int
subl
or
xchg
adc
fdivrp
in
fmuls
jae
xor
inc
imulb
mov
repnz
jno
jge
popa
in
addr16
movsl
popf
jno
mov
fmulp
mov
inc
test
out
cmp
lcall
jecxz
int
movsb
pop
jle
fs
movsb
pop
lcall
push
sub
xor
cmpsl
pop
insb
mov
int
xchg
testb
xchg
sub
push
or
dec
mov
iret
lds
and
push
adc
push
xor
loope
pop
sub
insl
hlt
std
and
gs
pop
std
xchg
add
pop
ja
in
mov
jl
xor
mov
shll
flds
cmp
movsb
push
sbb
pop
mov
or
in
sahf
mov
push
fucom
lock
outsb
ja
dec
into
inc
lret
aam
fnstsw
mov
scas
dec
int
mov
outsb
mov
call
repz
cmp
lret
or
sub
mov
stos
cmp
roll
pop
push
cmp
adc
jecxz
stos
sub
out
jge
popa
daa
daa
push
jb
dec
lret
cmp
or
iret
or
or
lcall
xchg
outsl
stc
fdivrs
or
shll
and
pop
sub
fildll
xchg
push
test
arpl
sub
movsl
push
and
insl
push
mov
adc
dec
mov
mov
and
test
sbb
xor
test
mov
adc
or
cmc
mov
out
lea
push
stos
sahf
flds
sub
inc
lcall
mov
out
adc
lock
mov
jb
xchg
adc
jb
jp
arpl
push
xor
add
push
mov
xchg
mov
sbbl
movsl
mov
pop
lock
xorb
imul
or
add
push
add
dec
and
sbb
inc
in
in
test
xchg
sub
mov
add
fidivs
mov
mov
enter
fcomps
outsl
repz
mov
and
or
mov
aaa
loope
push
ss
lahf
lods
adc
cmp
into
xchg
stc
jns
sbbl
sbb
pusha
xchg
and
mov
pop
and
lahf
icebp
mov
jmp
and
or
cmp
inc
xor
mov
push
cmp
mov
sti
cmc
jp
shl
jbe
popa
out
arpl
xor
ret
sub
sub
cwtl
add
pop
aaa
push
and
cmp
push
in
bound
xchg
and
dec
dec
loopne
int3
sub
stc
hlt
push
and
jno
scas
push
in
fs
je
loop
lcall
cld
fcoms
cltd
and
xor
andb
add
pop
rcrb
pop
push
aaa
lret
fimuls
pop
or
sbb
pop
push
mov
mov
sub
mov
jbe
in
cld
mov
pusha
inc
test
cmpsl
sub
sahf
dec
sbb
sub
daa
into
gs
pop
pop
adc
out
pop
or
fildll
not
sbb
mov
mov
movl
mov
add
pop
pusha
ss
in
int
repnz
lahf
cmp
mov
mov
fs
sahf
cmp
sti
jp
xor
rorl
cwtl
xor
out
in
mov
lcall
pop
push
dec
das
mov
in
xor
mov
sub
jnp
test
ret
push
mov
sub
inc
sbb
sub
mov
cmp
aas
push
push
adc
fisubl
mov
jl
flds
mov
jecxz
sub
aaa
fsubp
js
clc
and
les
lcall
dec
adcl
dec
stos
or
in
js
out
cltd
ret
jge
movsb
xchg
les
sti
mov
imul
mov
dec
outsl
pop
pop
fmull
ja
rolb
ds
scas
xchg
mov
cmp
xor
and
decb
cld
lods
push
ds
xor
int
dec
jp
jl
jmp
into
pop
and
add
outsl
jbe
xor
mov
push
std
inc
jl
fistpl
leave
mov
or
or
xchg
mov
dec
test
mov
push
xor
rorl
lahf
adc
out
xchg
sbb
mov
test
out
sbb
push
jl
mov
mov
loop
or
and
cmp
test
jmp
inc
cmp
adc
push
sbb
lea
ret
ja
jg
out
outsb
fldt
pusha
jo
push
in
or
shrb
ja
xchg
cmp
lret
out
and
lods
fwait
subl
scas
mov
repnz
pusha
dec
mov
mov
cmp
jo
insb
dec
xlat
scas
mov
mov
ret
sarb
cli
imul
bound
xor
test
hlt
jmp
ja
rcll
std
push
jecxz
fcomip
flds
ja
lcall
dec
mov
negb
dec
dec
imul
push
in
xchg
arpl
sbb
dec
push
fnstenvs
sbb
lcall
and
aad
pop
cmp
dec
dec
mov
test
popa
sub
dec
jmp
pop
loope
aam
movsb
aam
cwtl
xorl
cld
mov
sub
dec
pop
int
popa
push
jo
pusha
jp
mov
testl
pop
dec
sbb
mov
or
add
mov
add
sbb
mov
mov
push
xchg
add
js
sti
loopw
inc
adc
mov
out
and
mov
xor
movsb
mov
xor
ret
and
int3
in
cmovbe
inc
inc
lcall
outsb
and
push
sahf
pop
fidivrs
or
add
add
jnp
jg
ss
adc
cmc
lahf
lods
imul
cmp
subb
pop
xchg
jns
cwtl
pop
mov
or
jno
sub
mov
decb
dec
je
out
cwtl
xor
ljmp
xor
mov
cmp
or
loop
sar
mov
xor
jo
inc
jne
push
pop
pop
cs
push
adc
adc
or
enter
dec
lcall
rcrb
insl
pop
push
fcomp
jmp
jnp
xchg
xchg
das
jge
or
movsb
jg
add
or
in
imul
shll
lods
sbb
sbb
or
out
sbb
and
dec
jo
adc
in
mov
subb
in
sbb
lods
sbb
in
cmpsb
sub
cmp
xchg
iret
lock
lods
out
rcrl
insl
sub
adc
xchg
inc
push
stc
mov
rorb
hlt
pop
cmp
or
cmpsb
inc
or
add
ss
adc
mov
scas
and
call
inc
cs
aaa
mov
dec
xchg
jl
xchg
sbb
jae
test
cmc
and
pushf
and
mov
mov
fsubrl
outsb
out
leave
sbb
popa
jne
cmpsl
lods
mov
sub
ret
adc
push
pop
das
notl
mov
ret
pushf
mov
hlt
callw
xor
jecxz
lahf
call
in
bnd
out
inc
mov
inc
jb
movsl
add
pop
push
adcl
inc
insb
dec
loop
int
pop
test
pushf
inc
js
in
mov
bound
push
sub
ss
and
icebp
fildll
inc
push
test
es
stos
cmpl
push
xor
mov
fidivl
pop
xor
lock
sub
jmp
push
sbb
cwtl
test
cmpsb
fsubs
insb
in
pusha
cmp
mov
mov
scas
push
jne
push
mov
adc
ljmp
push
sub
jae
lret
js
xor
pop
popf
xor
mov
adc
cmpb
jmp
pop
push
insl
mov
cmp
jne
mov
push
mov
cmpb
lret
outsl
push
inc
mov
shrb
jmp
xchg
jnp
lods
andl
popf
add
out
fwait
pop
xor
aaa
jae
add
adc
dec
scas
or
inc
sbb
fstpl
call
int
mov
xchg
fmul
sub
sbb
loope
rcrb
push
or
pop
adc
sub
mov
aam
push
xchg
sub
mov
stc
aas
call
lods
mov
pop
push
shll
std
call
cld
out
inc
or
fsub
arpl
lret
cmpsl
aaa
xorb
cltd
cmp
lds
test
out
mov
cmpl
fistl
cmp
popa
sbb
aaa
in
cmp
and
jl
stos
clc
movsl
pop
jns
xlat
stc
jno
imul
pop
aam
fdivrl
es
cmp
cltd
nop
icebp
mov
test
or
jb
shlb
imul
push
push
enter
mov
xchg
push
lock
addr16
cs
pop
pop
inc
pop
ror
xor
xchg
iret
nop
xor
popa
xor
or
jno
test
pop
sarb
jbe
and
xchg
int3
cltd
bound
int3
dec
fcmovnb
or
gs
push
sbb
xor
and
shrl
popf
enter
mov
dec
sar
inc
loope
dec
cwtl
fnsave
inc
out
fbstp
push
pop
xchg
rol
imul
add
popf
pop
loopne
push
or
and
sub
adc
and
pop
mov
cmp
pop
popa
jae
push
mov
and
lea
ret
addb
imul
fdivrl
outsl
ja
sub
mov
stos
xchg
es
cli
repnz
jge
inc
add
pop
aam
lds
cltd
movsb
sbb
dec
sarl
xlat
jae
xchg
inc
rorl
pop
inc
cli
add
in
mov
in
xchg
mov
cmp
cmpsb
mov
and
jmp
jb
pop
sub
sarl
adc
xor
fdivrp
daa
sbb
and
jb
loopne
mov
adc
outsl
movsb
fmuls
mov
inc
in
iret
cli
or
sbb
lock
ja
call
dec
push
and
cmc
mov
in
aas
mov
mov
sub
adc
xlat
mov
push
imul
adc
mov
jg
mov
rorb
in
inc
cmc
arpl
mov
fwait
and
cmp
sbb
fdivl
push
scas
jo
dec
imul
jbe
aaa
add
es
imul
inc
test
and
loop
dec
inc
fdivr
xchg
pop
daa
sbb
lahf
sahf
push
arpl
and
sub
sbb
lcall
push
test
repnz
adc
outsb
sbb
test
fwait
lea
xor
popa
jl
fwait
rcrl
ja
fidivrl
roll
loop
xor
insl
mov
add
divl
adc
repnz
or
dec
or
mov
stc
mov
pop
inc
sub
jl
daa
and
outsb
xchg
or
jb
in
add
inc
xor
cmp
ret
daa
mov
jae
cmpb
mov
clc
bound
sbb
inc
sbb
xor
push
xlat
out
sahf
ljmp
push
sbb
inc
push
cmpsb
sbb
mov
scas
jmp
mov
push
pushf
pop
lods
stos
jne
cmp
and
scas
stos
mov
dec
add
aam
rolb
pop
jno
lret
and
pop
jb
xlat
int3
dec
push
rorl
adc
push
jle
sbb
loope
xchg
int3
adc
lret
stos
jns
pop
cmpsb
ret
negl
imul
sbb
addr16
and
addr16
fwait
adc
out
outsl
fidivs
mov
cmpsb
jnp
inc
inc
add
ljmp
fisubrs
je
cmp
mov
arpl
outsb
pop
ret
cmpsl
push
mov
cmp
xor
sbb
mov
int
push
jl
or
rcr
jb
mov
mov
and
mov
xchg
and
inc
js
mov
mov
xor
jnp
xchg
pushf
and
jp
adcl
xchg
xor
cmp
std
dec
or
stos
dec
aad
shl
inc
scas
jp
mov
cld
fistpl
movsb
and
dec
sahf
loopne
test
dec
cmpsl
or
dec
mov
mov
sub
xchg
mov
lahf
pushl
push
rorl
movsl
ret
sbb
sub
cmp
cmp
shll
pop
les
pop
cmpsb
repz
cmc
es
ret
mov
push
xchg
push
movsb
inc
and
arpl
xor
fcoms
and
or
lock
adc
pop
jne
mov
mov
shr
xchg
adc
sarl
sub
or
lock
adc
push
jbe
pop
jae
xor
sub
inc
int3
das
mov
or
imul
imul
fiaddl
jno
jg
xor
xchg
adc
orb
add
xor
pusha
pop
dec
cmc
jl
and
ss
fsubrp
sarb
dec
pusha
shrb
in
xchg
pop
lcall
pop
loop
int
mov
cltd
rcrb
xlat
sahf
js
lea
dec
xchg
mov
xchg
fwait
push
jmp
and
xchg
jnp
scas
je
nop
jae
xor
mov
inc
jecxz
iret
cli
stos
sahf
fs
sti
xchg
test
mov
mov
sbb
fisttpl
push
or
xor
or
pushf
dec
push
inc
sub
fwait
jle
cltd
gs
xchg
cmp
sbb
push
out
mov
hlt
mov
xchg
nop
mov
pop
cmp
scas
pushl
imul
dec
xor
es
in
stos
loopne
rol
mov
sub
mov
xor
mov
xor
leave
mov
mov
sub
stos
inc
loopne
ds
sar
call
push
xchg
aad
mov
push
add
addr16
aad
xchg
repnz
cmc
and
mov
dec
mov
jge
mov
dec
mov
out
xor
loope
sub
fs
xchg
jnp
sub
popa
fwait
mov
mov
fs
leave
pusha
div
mov
popf
adcb
and
xor
jmp
in
cmp
cmp
fimull
pop
and
and
orl
sahf
adcb
push
pop
cmp
and
pushf
repz
mov
mov
sahf
adc
or
sub
sub
jp
and
jns
xor
pop
in
aam
adc
xor
sub
fildll
js
and
lock
repnz
jle
cmp
xchg
pop
pop
pop
je
mov
mov
pusha
pop
and
dec
xchg
movsl
movsl
xchg
inc
loop
inc
in
cmp
mov
ljmp
orb
pop
lea
scas
jmp
loope
dec
push
mov
fwait
fwait
cmpsl
dec
sub
loope
add
mov
scas
pop
inc
imul
pop
std
movsb
sbb
aas
fisubs
xchg
jmp
imul
lcall
outsb
xchg
lock
xchg
cmp
xlat
sarb
cld
pop
popf
push
adc
loop
pop
cmpsb
pop
faddl
pop
jne
pop
int3
xor
orb
outsl
fsubl
push
pop
xor
xor
xor
add
dec
inc
dec
sbb
scas
cmc
in
mov
xor
sub
mov
cmc
inc
dec
inc
sahf
xor
inc
flds
jp
mov
sbb
push
fidivs
add
and
inc
ret
in
cmpb
repnz
mov
imul
sbb
ret
inc
fstl
sub
jp
popa
loopne
shl
xchg
call
push
add
adc
add
ljmp
adc
sarl
mov
mov
sbb
fidivs
repnz
sahf
cmp
jo
lods
sub
movl
fldcw
into
sbb
je
sbb
sbb
cmp
test
mov
cmp
out
jno
mov
pop
and
daa
outsb
jo
sbbl
xor
std
mov
push
repz
ss
xor
pop
dec
nop
xor
arpl
inc
xchg
nop
inc
stos
adc
scas
daa
xorl
fnstcw
out
out
push
mov
add
sbb
sahf
push
icebp
outsl
ret
dec
add
int
cwtl
inc
mov
mov
mov
pop
jne
cmp
inc
mov
bound
ja
cmp
lret
jo
sub
sti
dec
outsb
ds
mov
inc
jae
xchg
popf
add
jl
into
push
mov
rorl
jbe
lock
xor
sub
and
or
sub
aas
jp
pop
mov
pop
xorb
pop
mov
jp
shlb
fs
addr16
inc
aaa
out
fiaddl
cmp
push
push
lods
push
dec
cmp
ljmp
ds
sbb
jo
jl
cmpsb
mov
shll
roll
int
push
test
dec
jg
jb
add
into
ret
mov
mull
cmp
sub
inc
xchg
pop
mov
call
mov
fwait
jp
les
xor
popa
dec
icebp
pop
xor
and
jb
ja
cmpsl
pushf
xor
push
push
mov
lods
je
std
sub
xchg
arpl
sti
cmc
bnd
sti
adc
repz
aas
ficoms
aad
pop
lcall
sbb
adc
jp
cmc
mov
cmp
cmc
aad
pushf
mov
insb
ss
add
cltd
push
and
scas
dec
movd
jns
mov
push
les
not
fwait
cld
xchg
xchg
mov
imul
sbb
jmp
jnp
adc
push
pop
sbb
fcoms
repnz
cmpsl
mov
lcall
aam
test
lea
pop
inc
out
jne
iret
or
inc
sbb
push
or
jge
jle
outsl
push
add
test
sbbb
shlb
cmp
ds
sbb
xchg
mov
xchg
push
ss
sarl
fsubl
outsb
adc
leave
data16
jle
push
ljmp
test
jb
adc
and
aad
xchg
daa
mov
mov
fists
jbe
outsl
test
leave
cmp
ds
and
mov
mov
or
push
js
sbb
inc
jecxz
out
cli
cmpsb
xchg
leave
arpl
mov
ss
cli
xor
int3
push
in
popf
ja
pop
xor
fwait
and
fiaddl
xchg
sarb
daa
xor
in
daa
dec
test
cmp
adc
aas
pop
jb
fdiv
dec
je
push
cmp
mov
hlt
adc
lods
mov
pusha
fwait
sbb
insb
jle
inc
lock
cmp
jb
sub
lahf
xchg
sbb
mov
lret
pop
rorb
ja
gs
je
mov
sbb
inc
icebp
mov
pop
test
adc
das
negl
and
and
das
ret
jp
add
divb
jle
call
daa
jecxz
lods
popf
dec
sbb
fstps
add
or
mov
inc
xchg
or
jmp
repnz
divl
push
jp
sbb
cld
orl
lret
push
mov
int
xor
sub
into
int
inc
pop
lea
into
xchg
das
mov
call
push
mov
mov
xor
inc
test
fcomps
add
out
ss
cmp
lahf
cmp
xchg
mov
sbb
jp
mov
lods
sub
and
ffree
sub
mov
in
pop
bound
fs
dec
popa
call
ljmp
cmpsl
lret
dec
mov
pop
cmp
in
pop
shrl
repz
push
dec
data16
int
js
jmp
ret
add
mov
outsb
sbb
xor
negb
out
mov
mov
test
adc
adc
or
add
cmp
clc
cwtl
dec
push
adc
jmp
test
or
mov
out
mov
test
test
jecxz
and
divl
scas
push
inc
imul
mov
cmpb
lods
sbb
inc
aam
push
sub
je
mov
dec
mov
andl
xlat
sbb
arpl
mov
cmp
mov
es
cmp
shll
mov
cmc
jge
ret
mov
mov
cmp
inc
repnz
pop
in
mov
pusha
js
in
or
imul
xchg
jg
or
sub
insb
pop
mov
outsl
incb
orl
pop
cmp
mov
adc
xchg
hlt
cmpsl
mov
mov
and
dec
adc
imul
movhps
aaa
cmp
addr16
clc
push
mov
mov
push
stos
stos
mov
repnz
mov
dec
dec
test
push
loope
jbe
ds
pop
dec
mov
bnd
xchg
jle
mov
cmp
fwait
or
rcl
mov
pop
xchg
jo
push
push
adc
jae
aad
or
dec
popa
mov
add
xchg
daa
pop
push
adc
cli
dec
push
mov
sti
adc
testb
ret
jge
push
test
loopne
jl,pn
or
pop
insb
xor
mov
cmp
jbe
out
dec
cmpsb
or
dec
in
pop
cmp
adc
jl
out
cltd
sahf
pop
push
scas
xchg
jle
negl
jl
ss
ljmp
aaa
scas
sbb
inc
lret
out
enter
sbb
cmpsl
ret
pushf
xchg
and
pop
negb
add
into
xor
xchg
sub
insl
adc
imul
sub
dec
fadds
out
add
insb
test
dec
mov
cli
pop
loope
xchg
push
adc
mov
jmp
ret
stc
sub
cltd
ljmp
push
test
mov
cmp
in
lea
decb
push
dec
fiaddl
mov
cmp
push
call
stc
dec
je
adc
je
fcmove
mov
add
add
xchg
pop
dec
mov
pop
out
cld
cmpsb
scas
sbb
bound
mov
rorb
jno
mov
add
mov
mov
icebp
insl
sbb
outsb
xor
mov
xor
fdivrs
mov
push
mov
stc
push
pop
cwtl
fistps
mov
lahf
in
mov
inc
out
cwtl
movsl
lds
ret
daa
cmp
outsl
arpl
movzwl
nop
out
mov
das
cmpl
pushf
jp
mov
mov
fsubr
int3
clc
inc
push
ja
adc
mov
adc
nop
repnz
dec
repnz
aad
repnz
cmp
dec
xorl
mov
push
cs
out
push
rcr
pop
mov
icebp
pop
mov
dec
pop
xchg
pop
or
ficomps
push
in
sti
jl
push
or
push
lock
gs
popf
out
imul
or
sarb
jae
sub
inc
out
cmp
inc
jnp
pushf
fistl
add
ficomps
shrl
mov
leave
jo
fiaddl
movsl
arpl
jno
push
and
dec
push
and
mov
mov
fisubrl
shll
dec
out
iret
mov
mov
mov
sub
sbb
adc
mov
inc
pop
cmp
pop
push
out
popa
mov
ret
rolb
adc
nop
jmpw
inc
push
fnstcw
jge
je
pop
push
push
push
inc
shrb
dec
imul
sbb
fistpll
insl
insl
mov
mov
adc
fbstp
cwtl
mov
xchg
outsl
loopne
es
repz
fstl
je
pop
or
dec
cmp
aam
xorb
push
push
fmuls
sbb
push
pop
pushf
inc
adc
xchg
hlt
mov
jl
dec
push
loopne
shl
rolb
cmpsl
pop
pop
xor
out
or
or
dec
mov
mov
std
jge
lret
mov
push
stos
lret
cmp
fwait
pop
adc
xlat
cmp
mov
jne
jp
aad
jecxz
into
jl
dec
aam
mov
jbe
adc
push
fcoms
aam
push
mov
aas
jno
or
test
in
xchg
lcall
push
add
nop
aad
das
notb
cmc
in
cmp
xor
inc
movsl
fincstp
dec
mov
test
mov
xchg
outsl
ja
test
adc
jae
mov
jmp
fidivl
xor
push
mov
xor
inc
jge
mov
jle
fistpl
add
cmc
or
out
cmpsb
stos
or
dec
enter
daa
add
mov
push
fucom
jae
gs
push
dec
mov
jmp
bswap
inc
cwtl
fdivl
std
mov
or
mov
jno
lahf
imul
sub
mov
mov
pop
js
push
cmp
insb
stc
sub
les
enter
mov
xchg
pusha
cmpsl
out
xor
lock
aam
adc
mov
xchg
in
push
orb
adc
pop
or
dec
add
mov
aad
dec
das
push
or
xchg
or
mov
enter
fistps
pushf
cli
and
push
sub
inc
jmp
or
push
dec
push
sub
push
push
mov
push
ljmp
cltd
cmp
cld
cld
bound
push
daa
cltd
add
inc
arpl
das
jecxz
sbb
lcall
push
cs
jge
shlb
ss
xor
stc
js
arpl
sbb
ret
imul
dec
inc
in
push
push
leave
sub
mov
jns
mov
mov
adc
dec
jnp
jo
or
and
cwtl
xchg
popf
fs
cmp
insb
sbb
sub
cmp
lods
es
test
int3
ret
in
inc
mov
push
pop
repnz
mov
cmp
subb
pop
pop
push
int
pop
jo
and
push
out
xor
inc
test
sbbb
rcll
aam
dec
adc
repz
addl
pop
loopne
xchg
pop
in
clc
gs
iret
adc
pop
mov
xor
xchg
push
adc
orb
mov
dec
pop
push
and
aas
xchg
push
jns
nop
sub
fstpt
divb
cmpl
shll
lahf
sbb
xor
pop
push
lea
mov
pusha
mov
psraw
xchg
std
push
cmpsb
add
stc
jle
insb
and
into
add
test
adc
jg
aaa
push
lahf
paddsb
xchg
enter
ror
xor
lds
fwait
out
sbb
lcall
mov
leave
jl
cmp
jg
pusha
pop
or
ret
jnp
ljmp
movsb
mov
inc
xchg
add
testl
addl
push
stc
pop
js
cmp
in
rcrl
std
pop
incb
sub
mov
call
add
scas
clc
mov
or
adc
pop
or
add
sub
adc
add
sub
mov
cmp
ror
int
dec
ds
incl
orb
test
data16
or
aaa
add
sbb
pop
ficoml
adc
mov
sbb
mov
ja
dec
xchg
push
out
lcall
cltd
jnp
xchg
or
or
lahf
push
shr
out
repnz
mov
mov
rcpps
pop
cs
sbb
inc
push
cld
lahf
call
lret
pusha
or
daa
cmpsb
addr16
dec
faddl
andb
popa
mov
pop
push
insl
clc
mov
ljmp
xchg
jae
xchg
addr16
sub
xchg
jne
arpl
xor
pusha
pop
sbb
xchg
cs
lods
cwtl
pop
stc
sbb
mov
aam
mov
fcmovnbe
rcrb
jnp
jmp
rcl
rolb
aad
daa
test
adc
ret
xchg
clc
sbb
popf
push
mov
mov
mov
xor
and
pop
loopne
iret
les
fwait
movsl
jnp,pt
cmp
mov
loop
mov
xor
stos
cmpsb
xchg
mov
aad
mov
fidivrs
mov
pusha
mov
mov
rcrl
fwait
push
xor
mov
push
adc
test
minps
xchg
test
inc
lea
dec
sub
sbb
lods
jb
sbb
dec
mov
sbb
testl
cmp
jo
pop
sub
inc
sarb
bound
or
popf
int3
ret
mov
test
sub
hlt
cmp
add
push
mov
jns
mov
pop
push
out
adc
xor
push
aam
shrb
xor
pop
dec
in
scas
adc
mov
mov
or
cld
clc
dec
xchg
push
lahf
pop
out
push
ss
mov
popf
lret
cmp
jg
sub
out
loopne
add
popa
ret
jb
popl
sub
pop
into
jge
leave
sub
mov
push
adc
push
lcall
adc
out
push
aam
push
inc
cmp
bound
cli
loop
xchg
jl
lods
adc
inc
adc
and
movb
and
scas
hlt
sub
pop
xor
fildll
sbb
jg
inc
stc
pop
arpl
test
out
push
ss
scas
inc
cmpsb
pop
push
repnz
pop
add
mov
pop
add
and
mov
mov
gs
jnp
jle
inc
movsb
mov
test
mov
ret
xchg
jbe
sti
inc
jo
clc
mov
cmpl
div
sub
add
shrb
jo
dec
sub
fsubrs
daa
adc
mov
add
leave
pop
test
divl
daa
push
fwait
repnz
or
out
jo
rcll
cmp
cli
movsb
pushf
mov
pusha
cltd
dec
stos
push
fildl
mov
nop
fs
popf
jae
sbb
or
clc
bound
sbb
cmp
std
dec
je
xchg
dec
and
cltd
jl
lock
jno
mov
shl
sub
inc
roll
movsl
fwait
push
add
mov
pop
cmp
add
mov
lods
in
es
jbe
or
rol
dec
iret
sub
jae
ljmp
jle
leave
pushf
jle
mov
addr16
xchg
xor
push
sub
ds
aas
push
movsb
xchg
jns
xor
sbb
add
dec
lret
pusha
sub
jno
cwtl
ror
ficompl
add
popa
mov
mov
daa
lods
pop
pop
mov
mov
arpl
ds
aam
rclb
jns
push
dec
xchg
or
sbb
cmp
pop
fiaddl
in
push
inc
icebp
nop
fcmovu
lcall
insl
in
cmp
decb
mov
mov
out
sahf
fistps
sbb
mov
xor
pushw
mov
cmp
mov
aad
insb
mov
sub
jecxz
sub
or
imul
mov
adc
ret
mov
mov
pop
sub
cmp
ss
cmp
sbb
out
lret
xor
mov
or
or
leave
and
and
lea
js
inc
insb
xor
sbb
mov
jo
fcmovu
adc
test
cwtl
pop
mov
sti
cmpsb
push
cmpsb
rcl
push
mov
stc
pop
pop
mov
xorb
sbb
add
xor
xchg
insl
loope
jns
cmp
cmp
out
ret
fists
subb
sub
aaa
dec
andb
test
jbe
jns
clc
mov
je
fdivr
mov
xchg
enter
lock
fldcw
mov
xlat
push
push
shll
dec
clc
enter
cmc
ret
mov
pusha
mov
jno
shrl
dec
jle
sbb
inc
popf
das
add
sbb
loop
dec
mov
or
lods
push
popf
mov
call
lock
inc
dec
xchg
in
mov
xchg
cld
push
push
fcmovu
jg
jno
imul
sbb
enter
orb
test
mov
push
mov
cmp
popa
pop
mov
loopne
test
out
push
push
hlt
out
push
ret
test
pushl
lea
das
scas
push
cltd
sub
pop
push
ss
mov
lret
repnz
pop
and
cmp
inc
std
lds
sub
scas
sbb
dec
push
adc
push
jg
pop
pop
test
sub
jl
aaa
sub
shrl
jl
or
jmp
js
add
dec
add
loopne
inc
push
inc
lcall
xchg
xchg
das
adc
sub
push
cmc
jnp
push
dec
dec
mov
lret
hlt
pop
les
xchg
imul
insb
push
mov
test
or
jo
je
aas
aad
push
faddl
push
les
lock
stos
xor
cwtl
mov
dec
push
mov
mov
aam
sub
inc
divb
ficompl
test
gs
adc
das
sbb
dec
mov
lcall
js
mov
aaa
shrd
loope
ret
es
mov
das
js
mov
fwait
sbb
adc
lds
int
dec
pop
pusha
scas
es
sub
cwtl
mov
pop
adc
aam
rcrl
lods
sti
or
lds
cmc
stos
xlat
xchg
jecxz
in
mov
enter
and
data16
test
fld
jb
or
test
push
xchg
xchg
dec
les
add
in
xor
in
js
pop
fstpt
push
xchg
xchg
and
cld
jbe
adc
outsb
out
xchg
xor
adc
mov
sub
push
cs
push
push
incb
pop
dec
aas
test
pop
xchg
mov
std
dec
pushf
xlat
xchg
hlt
xlat
popf
clc
add
leave
outsl
and
hlt
cmc
sti
jmp
mov
and
cmp
or
sub
or
ret
push
mov
scas
mov
mov
or
pop
rolb
xor
sub
mov
mov
inc
mov
push
int3
inc
xchg
enter
and
mov
aad
dec
mov
cmpsl
rcrl
cs
mull
aaa
aam
cmpsl
xlat
push
xor
mov
add
mov
sbb
icebp
jmp
aas
mov
pop
pop
popf
or
add
mov
adc
xor
lcall
ficomps
lahf
sbb
ljmp
mov
std
dec
mov
push
mov
sysexit
xor
cmpsb
fcoml
dec
adc
ret
jmp
orb
pop
aam
filds
enter
fisubl
jb
mov
fstpt
dec
ljmp
push
lret
cmpsl
pop
idivb
push
or
dec
adc
movsb
cli
stos
and
xchg
mov
std
cmpsl
scas
and
out
scas
cmp
test
insl
mov
sti
test
pusha
test
dec
or
test
jo
pop
xor
adc
add
adc
ret
adc
xor
sub
dec
mov
movsb
xchg
push
call
jmp
pop
incl
insl
xor
mov
push
outsb
ja
cmp
lret
lea
cmp
jnp
testl
insb
or
imul
xchg
std
leave
sbb
test
je
stc
lds
xchg
insb
repnz
insb
xchg
jg
ffree
sub
dec
outsb
aaa
push
adc
pop
cli
pop
push
mov
jle
dec
mov
mov
lock
and
sub
inc
inc
cmp
pop
icebp
stc
push
jle
testw
sbb
adc
lahf
and
lock
push
dec
movsl
ja
rcrb
inc
ret
and
cmp
jle
inc
dec
xor
push
mov
flds
jo
cmp
push
adcb
pop
lret
inc
das
adc
xchg
xchg
sbb
jge
or
pop
sub
and
pop
cwtl
mov
jns
nop
mov
testb
push
jge
out
lea
jbe
xchg
mov
insl
mov
mov
popa
mov
mov
pop
lods
scas
xchg
and
rcr
loope
outsl
xor
sbb
xchg
or
scas
insl
cmp
lahf
and
jo
jnp
or
xor
insl
pop
push
push
add
stos
mov
adc
dec
sub
mov
div
std
push
inc
vsqrtss
xlat
sbb
ja
cmp
sahf
pop
les
jb
jmp
repnz
call
cwtl
mov
test
scas
sub
push
pop
fcmovnu
cmp
xchg
stc
movsl
popa
and
scas
stos
jne
jp
incl
push
push
sti
push
sbb
cli
outsl
inc
and
inc
adc
repnz
sub
pop
jnp
jg
lret
call
mov
rcrl
pop
mov
ljmp
xor
adc
popa
jno
out
scas
test
xor
jmp
divb
xor
pop
inc
or
cmp
fimuls
xchg
sbb
xorl
sbb
mov
push
dec
sub
xchg
push
dec
push
mov
out
jecxz
addr16
loope
xchg
or
jbe
frstor
loop
outsl
xchg
sub
cld
or
pop
sub
add
pop
dec
outsl
jnp
cmp
fdivrs
mov
movsl
dec
out
jl
fwait
cmc
xchg
leave
mov
lea
dec
xchg
out
andl
shll
mov
inc
lret
repz
add
xor
jae
push
das
fmuls
sbb
adc
xchg
ds
lahf
add
and
jge
repnz
leave
and
fildll
rclb
cmp
js
sahf
inc
movsl
pop
or
dec
jb
scas
loop
xchg
mov
or
push
cmpsb
sub
dec
push
push
push
fbstp
or
int3
data16
es
ljmp
pop
out
jmp
sub
xor
add
push
aad
repz
loopne
sub
stos
xchg
fs
ret
nop
pop
aam
jns
mov
and
xor
add
xchg
dec
stc
ja
jae
movsl
xchg
outsl
add
adc
stos
pop
call
sbb
dec
jno
mov
jle
push
inc
bound
mov
imul
or
fs
mov
ret
or
and
std
cmpsl
lods
clc
repnz
out
lods
sub
pop
sub
sbb
negb
cmp
into
sub
lret
in
sub
outsl
pop
fs
ret
fistpl
and
call
pusha
xlat
out
in
in
add
push
and
sbb
inc
mov
and
fs
mov
mov
or
or
mov
stc
sahf
adc
mov
xor
adc
and
das
insb
ror
cmp
minps
cmpsl
xchg
xchg
in
shrb
jg
xchg
ret
in
push
scas
or
and
testb
das
xchg
mov
add
repz
and
ret
cmp
push
ja
jo
shl
and
add
dec
or
inc
push
je
mov
les
adc
aad
mov
jge
ret
inc
mov
test
sbb
dec
dec
jne
cmc
push
fcompl
sbb
fnsave
mov
jle
scas
insl
popf
pushf
pop
sbb
xlat
jae
imul
and
lock
push
subl
in
inc
test
mov
lret
cmc
lea
sti
jle
lcall
cmpsb
cmp
dec
xlat
daa
or
clc
or
je
push
daa
adc
jle
jb
mov
jl
pop
inc
test
lods
pop
fcmovnu
jl
mov
daa
jg
sbb
sbb
jmp
inc
lret
and
sbb
fcoml
pusha
dec
rcll
js
int
mov
mov
sbb
and
cmp
ds
dec
jecxz
enter
daa
es
and
je
js
push
xor
mov
hlt
clc
repz
out
lret
cmpsl
std
cmp
lcall
push
xor
sub
fdiv
aas
push
cmpsl
in
in
xchg
fisttps
add
setno
push
mull
test
fisubs
and
shll
xor
fcoms
pop
xchg
in
int3
push
inc
aas
pop
push
adc
cmp
data16
insb
sar
clc
mov
mov
mov
jns
mov
sbb
xchg
add
lods
mov
xor
es
jns
addr16
pop
adc
leave
inc
sbb
xchg
dec
aas
inc
sub
das
sarl
enter
xchg
loopne
lcall
pop
push
shrl
jl
lret
scas
sahf
xor
cmp
ret
xorl
add
stos
mov
in
out
call
bound
pop
cmc
lahf
push
jb
out
xchg
out
push
gs
add
xor
shll
dec
lods
xor
sahf
mov
dec
ljmp
mov
jne
call
adc
jecxz
movsl
xor
xchg
fcom
cmpsb
cli
xchg
subb
cmp
enter
jnp
xchg
xchg
jecxz
jo
ret
testb
jnp
add
les
lods
ret
stos
ljmp
loopne
xchg
mov
ss
jo
decl
and
jns
or
stos
je
clc
jecxz
mov
aas
jae
pop
or
jo
and
sbb
or
and
outsb
in
pop
sub
je
inc
cmp
mov
shrb
stos
popa
repz
enter
mov
fnstenv
or
pushf
sub
and
fsts
lods
cmpsb
repnz
jbe
mov
push
mov
ljmp
jmp
cmp
leave
std
xchg
iret
inc
push
pop
inc
or
loop
xor
or
sub
or
out
or
daa
hlt
xlat
daa
jge
int
lods
nop
lea
ja
dec
data16
inc
xor
fwait
jb
sbb
call
loope
lds
ret
jle
mov
addr16
mov
jl
and
mov
mov
leave
add
adc
lea
sti
and
data16
push
out
movsl
cld
xchg
xor
jle
inc
sti
xchg
push
jl
cmp
outsb
jle
jo
sub
mov
mov
in
inc
and
sbb
add
mov
and
xchg
stos
das
xchg
xchg
int
adc
fs
push
mov
outsl
or
std
aad
out
addr16
mov
cmp
and
cmp
jl
fsubr
lret
rclb
ja
cmpsl
fimull
dec
scas
sbb
fwait
cltd
inc
sarb
ret
ds
jle
dec
mov
pop
mov
shrl
dec
test
les
lahf
cmpsb
sbb
int3
push
pop
inc
sbb
mov
testl
sub
xchg
sbb
push
jle
imulb
or
push
scas
mov
xchg
jge
ret
mov
jo
pusha
aad
sbb
popa
mov
pop
sub
dec
jbe
dec
mov
push
pop
or
rcl
jnp
xchg
fwait
sbb
jecxz
push
ja
jge
cs
mov
sub
andl
dec
mov
repz
xlat
jbe
jge
jo
sbb
ror
cmp
stos
pop
movsl
mov
ja
xor
cmc
mulb
fwait
lcall
mov
ja
xchg
cmp
in
incb
bound
stc
lcall
icebp
fimull
stc
call
mov
jbe
add
bound
push
movsb
pop
mov
add
enter
pop
sub
sbb
movb
pop
icebp
mov
fisubl
mov
mov
or
mov
or
xor
and
loopne
icebp
rorl
mov
dec
ficoms
js
lret
pop
push
pop
sub
lock
push
inc
push
sbb
and
fs
repz
cmp
mov
jnp
out
or
mov
imul
sub
inc
push
cmc
cmp
or
leave
shrb
jnp
sbb
dec
lret
inc
arpl
sub
fwait
push
stos
dec
xchg
lds
aam
out
inc
insb
fs
jecxz
dec
jge
pop
daa
push
xchg
imul
mov
movsl
out
mov
cwtl
imul
sbb
cmc
inc
inc
mov
popa
jnp
sbb
dec
lods
ret
and
lods
popa
lea
or
xchg
mov
popf
int3
and
adc
fwait
sub
mov
in
daa
cmp
inc
add
call
int3
mov
add
cmp
pop
push
add
rolb
cmp
sub
fcoml
jo
cmp
cmp
mov
sbb
dec
imul
xlat
lea
mov
pop
fwait
dec
div
cmp
ja
jne
mov
or
pop
pop
inc
ret
out
bound
push
enter
dec
sti
addr16
mov
lods
mov
pop
lea
sbb
and
into
mov
xchg
dec
or
call
dec
out
mov
mov
scas
aas
mov
rcrl
add
adc
pusha
sti
in
test
movsb
fwait
in
test
test
and
nop
xchg
divl
push
pop
jp
mov
and
sub
insl
in
test
hlt
mov
mov
outsl
rorb
fldl
test
or
fstl
sub
insb
rcll
movsl
add
add
popf
repnz
fiadds
xor
loopne
in
out
shr
les
push
ret
jge
jne
das
mov
mov
popa
js
adc
into
cmpsl
pushf
call
cmpsb
dec
jmp
mov
arpl
jp
lcall
xchg
lock
stc
adc
sbb
jbe
out
ss
mov
ljmp
insl
xor
xor
sbb
shrb
dec
movsl
jae
fimuls
sub
fcmovbe
mov
sahf
mov
add
mov
cltd
and
lret
lret
fs
push
and
lcall
adc
mov
lret
div
or
pop
jecxz
in
aad
jno
pop
inc
and
dec
jge
xchg
adc
icebp
inc
mov
push
dec
cmp
jb
inc
pop
inc
fidivrs
mov
repz
push
into
imul
jmp
push
pop
cmp
icebp
and
popa
into
jle
adc
repnz
aad
dec
push
xchg
xor
cltd
inc
inc
sub
in
inc
ud0
dec
or
inc
push
and
mov
fs
xor
fistps
shlb
stos
dec
stos
xor
mov
sbb
jecxz
andb
jnp
push
sub
std
mov
or
or
cs
ja
ljmp
and
inc
mov
aaa
mov
sarl
inc
notb
xchg
mov
in
pop
dec
fldenv
adcb
popa
push
adc
test
mov
jne
pop
inc
hlt
xchg
cltd
aam
add
xlat
test
sub
lods
icebp
shrl
iret
js
test
repz
sbb
shrl
sub
pop
jl
push
notb
add
in
add
push
sbb
out
and
inc
cmp
je
and
scas
pop
mov
sbb
push
jnp
mov
lods
rcrb
lahf
dec
push
sub
into
mov
push
mov
rcll
bound
and
je
inc
sbb
ror
xchg
stc
aam
cwtl
jae
fdivr
push
fdivp
push
sbb
and
js
popf
test
xchg
sub
in
mov
inc
mov
push
outsb
xchg
dec
mov
cmc
xlat
out
adc
loop
push
iret
pop
ljmp
mov
inc
mov
stos
jle
dec
shrl
sub
cmp
push
add
loop
and
clc
in
ja
mov
shl
and
xor
push
and
adc
arpl
les
fidivrl
pop
clc
retw
pop
xor
stos
sub
negl
mov
inc
aad
jge
bound
inc
mov
jnp
adc
pusha
jae
iret
mov
and
setge
push
push
mov
mov
int
popf
jg
popf
sbb
jae
popa
mov
imul
test
xlat
into
ljmp
sbb
fwait
jg
arpl
pop
sti
push
jns
add
andps
stos
mov
pop
cmp
test
pop
scas
lret
ljmp
rclb
xor
mov
add
mov
and
std
mov
shrb
sbb
mov
mov
insl
in
xchg
jg
sbb
mov
inc
or
xchg
mov
test
or
movsb
cmp
imul
repz
push
cmp
test
dec
mov
shll
mov
ss
cmp
jns
xor
lock
jp
test
xchg
push
fistpll
popa
out
xchg
dec
lcall
imul
xchg
inc
jp
out
xor
dec
mov
adc
mov
dec
cwtl
add
int
je
dec
ss
out
xor
jmp
cmp
sub
pusha
mov
pop
icebp
pop
fcmovb
clc
mov
daa
daa
pop
push
and
sub
add
inc
fadds
lret
jge
test
sub
add
into
pop
out
es
andb
inc
xchg
sbb
cmp
mov
aaa
cmp
pop
fwait
xchg
jno
aas
out
jbe
pop
jns
test
add
jnp
fsubl
inc
stos
repnz
std
push
int3
js
sbb
repnz
dec
in
lock
icebp
call
push
and
scas
and
icebp
push
pop
xchg
and
mov
scas
jmp
rcr
lea
into
xchg
adc
inc
out
add
subb
iret
cmpsb
push
jle
test
sbb
out
pusha
xchg
pop
cmp
xchg
lds
rol
cmp
cmp
mov
pop
bound
fs
and
dec
inc
adc
out
xchg
aad
popf
arpl
pop
lcall
stos
sbb
sti
xlat
xor
cld
punpckldq
mov
mov
fsubs
outsb
pop
or
repz
ljmp
out
cmpsl
jno
xorl
jmp
xor
or
icebp
lock
scas
outsl
ss
push
call
int
sarl
push
add
or
cmc
lcall
and
xor
jb
enter
jge
jne
mov
mov
shl
and
pop
addr16
xor
push
dec
addl
fsubr
sub
sbb
and
pop
xlat
mov
xchg
pop
sub
lret
ja
xchg
push
dec
outsb
shr
mov
xchg
je
das
mov
sbb
sub
xchg
sub
lret
lea
mov
mov
jne
popa
in
mov
jmp
xorl
je
rcl
popf
subb
flds
icebp
dec
add
lods
in
rorl
test
outsl
and
and
xlat
movsb
pop
cld
cs
inc
jo
mov
loop
mov
fstl
xchg
aam
sub
sbb
xor
or
and
push
test
mov
pop
pop
mov
push
push
std
loopne
movsl
xchg
addb
repnz
lcall
enter
cmpsl
jo
sahf
or
inc
call
and
push
ret
inc
adc
jp
adc
outsl
stos
adc
mov
mov
dec
setg
ja
jecxz
enter
inc
push
or
out
aam
xchg
jg
sbb
xchg
sub
or
or
xlat
mov
dec
outsb
jmp
int3
aas
xchg
xchg
push
mov
inc
mov
cmp
stc
push
andb
inc
adc
incl
xor
into
xchg
sbb
pop
mov
sbb
add
or
xchg
rolb
shll
mov
pop
js
mov
lea
mov
cmp
add
sbb
test
fnstsw
xchg
stc
outsb
cld
dec
insl
dec
sti
xchg
inc
out
fidivs
cmp
dec
std
loope
sbb
aam
ljmp
adc
stos
lret
xchg
cmp
push
fiaddl
mov
out
add
cmpsl
push
push
hlt
inc
mov
packssdw
scas
in
inc
inc
jp
in
out
pop
cs
xchg
repnz
je
fdivs
leave
sub
outsl
xchg
or
imul
lods
push
jge
pop
sub
push
int3
fstpt
fwait
push
call
imul
jle
mov
shlb
loop
lret
jmp
adc
dec
fistpll
loope
or
fmuls
sbb
xor
mov
sub
call
sbb
cmc
movsb
jmp
aad
movsb
ja
leave
jnp
mov
ficomps
dec
es
push
ficoml
push
push
arpl
in
imul
add
jne
in
jns
stos
addl
push
in
dec
insb
dec
cmc
sub
jle
sub
stc
aad
lret
inc
inc
cmpxchg
lahf
imul
adc
pop
pop
push
arpl
jnp
in
fldt
lcall
test
jb
lahf
sub
test
imul
loopne
lret
iret
lock
test
and
inc
push
adc
mov
cmp
adc
jb
xchg
jo,pn
dec
cmpsl
lea
push
xstore-rng
cmpsl
inc
jno
mov
mov
icebp
cmc
fldcw
movsb
cmp
dec
in
sub
mov
jb
insb
cs
adc
jmp
call
cltd
aaa
mov
lahf
pop
sub
mov
xchg
sbb
addr16
cmc
jge
faddl
imul
fcmovb
add
inc
mov
mov
lods
cltd
xor
mov
outsb
xchg
testb
and
addr16
lahf
dec
mov
roll
fwait
mov
mov
xchg
sbb
jp
and
out
lds
repz
add
lea
divl
flds
ret
rclb
pop
dec
and
sub
dec
jmp
ja
mov
lret
push
insl
add
adc
push
add
rolb
cmp
cmp
add
imul
fwait
and
xlat
lahf
inc
sbb
in
and
cmp
out
out
lret
popf
xchg
cltd
or
push
add
rolb
in
lret
pop
sbb
out
xchg
adc
fistpll
mov
in
sbb
ljmp
mov
imulb
inc
push
adc
push
mov
sbb
jnp
ror
fwait
ret
and
adc
fwait
inc
pop
in
icebp
sbb
iret
pop
cmp
push
lcall
mov
mov
inc
mov
xlat
aas
mov
push
pop
add
sub
mov
sarl
sbb
js
sub
das
xchg
mov
js
lock
dec
test
imul
mov
mov
pusha
mov
aad
ja
mov
enter
bound
orb
repz
out
add
adc
imul
out
or
sub
inc
gs
add
xchg
in
in
in
data16
jmp
sbb
xchg
and
mov
aas
ret
test
dec
cmp
das
xor
lret
lret
mov
lods
int
mov
or
data16
lea
and
mov
mov
fsubrl
jae
adc
xchg
sub
imul
loopne
mov
add
ja
push
push
lret
xchg
aas
or
xor
lea
mov
sbb
pop
dec
imul
xchg
push
aas
mov
cmc
jae
push
sub
mov
fdivl
lret
xchg
push
lret
psadbw
int3
adc
aam
mov
in
push
test
fnstenv
add
ljmp
pop
mov
mov
pusha
xor
lock
jecxz
std
mov
adc
scas
popa
out
inc
jle
sub
jle
and
cli
push
imulb
outsl
out
jge
xchg
mov
push
cmpsb
jne
int3
xor
jg
cld
sub
inc
cmpb
adc
inc
out
jl
lcall
lods
and
mov
xor
cmpsl
imul
xor
leave
lret
or
pushf
mov
adc
insl
outsb
sahf
aam
add
scas
cmpsb
adc
pop
movsb
add
bound
loope
xchg
cli
jl
sbb
sub
ret
insb
jg
xchg
mov
mov
movsb
data16
ficomps
xchg
insb
jl
sbb
popf
xor
insl
push
insl
aaa
ret
cmp
fists
mov
dec
divl
sbb
inc
jl
aam
mov
cmp
popf
lds
pop
add
add
lret
ret
dec
dec
pop
bound
and
push
cli
arpl
cmp
insl
imul
add
pop
jg
fcomps
arpl
cmp
mov
mov
lret
sub
rcl
pop
mov
out
les
cmp
add
mov
lahf
mov
inc
pusha
lahf
mov
mov
jne
sti
push
sbbl
pop
dec
xor
add
xchg
lea
test
push
lods
ljmp
inc
lcall
mov
and
sub
sahf
loopne
or
lods
gs
mov
sbb
je
jg
sbb
adc
ljmp
sbb
xor
pop
and
or
addr16
aam
roll
mov
sbb
cmp
push
lds
jmp
fcmovne
dec
or
lret
dec
jnp
sbb
lock
mov
out
cmp
cmp
popf
shll
imul
mov
iret
orb
ja
mov
pop
adc
mov
out
lea
add
push
clc
jb
lret
push
dec
insb
mov
test
add
lea
lret
lret
fcoms
in
sbb
rcrb
das
lret
push
pop
insl
mov
inc
lret
xor
mov
movsb
push
insb
gs
pop
adc
sub
jmp
test
xor
adc
xor
imul
pop
jbe
push
sub
or
xor
adcl
lret
sbb
repnz
inc
cmp
inc
in
mov
xor
inc
jecxz
cmc
mov
mov
out
sarl
pop
xor
push
dec
loopne
add
imul
xor
ljmp
adc
imul
mov
add
out
inc
push
repnz
adc
aas
aaa
or
or
lds
sbb
mov
sbb
arpl
aad
imul
cld
pop
and
insb
insl
pop
jg
fmuls
test
jo
dec
out
mov
inc
jno
add
lds
cmp
das
cmpsl
cs
loopne
mov
mov
popf
pop
movsl
push
dec
pop
xlat
sub
into
and
jb
jl
mov
jns
gs
mov
mov
add
jns
and
dec
jmp
xorl
pop
and
jae
or
test
arpl
cmp
lock
sahf
jbe
outsl
fldl
adc
mov
mov
or
imul
aad
es
push
adc
or
loop
mov
repz
sub
push
andl
jge
iret
adc
push
aad
pop
jmp
mov
out
cmp
xor
stos
inc
gs
pop
jl
add
ret
mov
gs
pop
scas
aaa
decl
jle
pusha
pop
xor
adc
out
stos
adc
ss
jge
jg
jnp
fcomps
scas
scas
jbe
cmpsb
pushf
scas
inc
bswap
inc
and
push
out
fstpl
movsl
inc
mov
jp
out
mov
adc
jmp
aam
in
mov
xor
rclb
stos
or
push
jle
loop
ret
outsl
std
pop
lock
pushf
mov
add
stc
sbbb
lcall
pop
sbb
aam
jecxz
cmpsb
rol
ds
dec
push
mov
inc
lods
loopne
sti
mov
jb
test
dec
or
movsb
push
xchg
icebp
scas
push
out
pop
mov
lahf
call
mov
aad
xchg
std
gs
or
orl
rorl
sti
push
gs
xlat
bnd
push
mov
or
std
inc
stos
mov
or
loope
sbb
xor
out
push
dec
xor
lret
jns
jmp
negb
out
lods
sti
divb
or
sbb
mov
scas
ret
into
je
sahf
xchg
ja
mov
adc
pop
sub
push
dec
lds
cmp
repz
ds
pushf
stos
faddp
inc
xor
pop
cmpsb
sbb
pop
incb
sbb
fwait
mov
mov
pop
xor
rorb
sbb
jle
lods
lock
jnp
jb
je
stc
arpl
pop
lds
sub
in
jecxz
dec
or
push
xchg
insl
jle
pop
push
fcoml
lds
cwtl
push
jb
ds
test
addr16
cld
cmpl
push
sub
mov
test
ja
xor
push
cmc
mov
mov
sbb
stos
outsb
xchg
movl
adc
jno
and
ror
xchg
jecxz
sub
xchg
sbb
bound
mov
inc
pop
mov
push
sub
repz
ja
sbbl
ljmp
loope
pop
xor
xchg
add
int3
adc
mov
cmp
jle
cmp
cs
lret
ljmp
call
shrb
dec
arpl
sar
test
neg
cmc
xchg
push
dec
cmp
mov
pop
cs
jge
and
test
sub
popaw
and
pop
push
ret
mov
aad
jb
dec
jmp
testl
xchg
aam
pop
out
or
shrl
jg
inc
aaa
mov
rcrb
adc
adc
loope
mov
add
mov
mov
xchg
push
add
sub
dec
sbb
cli
cmpsb
jl
jge
test
inc
xlat
xchg
in
gs
cmpsl
cmpsl
mov
mov
repz
mov
aam
sbb
fistps
std
fcoml
jmp
sub
xchg
mov
jmp
sahf
push
pop
sbb
shlb
dec
cmpsl
ds
cmp
pop
push
cmc
sub
dec
xor
jne
aaa
cmp
les
ret
sbb
test
lea
lea
mov
mov
outsb
dec
add
stc
mov
or
mov
lods
cmp
cmc
pcmpeqd
jae
dec
inc
mov
inc
mov
test
adc
out
or
test
cld
pop
es
es
xchg
rorl
arpl
sbb
rcr
and
jmp
imul
jno
test
sub
sub
xchg
xchg
jne
test
or
dec
nop
mov
rcll
xor
out
xchg
pop
aad
push
sub
xchg
bound
imul
sbb
int
insb
sbb
jae
pop
movsl
pop
jbe
cli
xchg
mov
inc
aaa
inc
int
sbb
cs
push
loopne
aam
sbb
sarb
int
mov
sbbl
in
jbe
lods
and
cmp
pop
divl
sub
loopne
stos
dec
xor
jle
push
cmp
inc
mov
aaa
ret
cmpsb
es
inc
mov
sbb
dec
mov
sub
stos
and
lret
insb
les
jns
arpl
arpl
cmp
movsl
push
stos
xor
xor
addr16
jmp
mov
or
mov
cmpsl
ja
push
push
or
stc
add
pushf
cmp
aaa
jno
jns
xlat
ljmp
das
xchg
fnstsw
subb
inc
flds
aas
mov
cmpsb
or
mov
dec
jle
dec
or
add
sbb
test
lds
cld
cmp
ret
movsb
and
lcall
aam
pop
xor
mov
and
dec
icebp
push
sbb
pushf
mov
adc
xchg
inc
push
aaa
cmp
aas
add
or
xchg
dec
sbb
fistl
pop
test
aam
test
xchg
lds
cmp
add
scas
sbb
jno
jg
stc
sub
lahf
cmp
out
shl
rcrl
in
dec
subb
insb
pop
jl
dec
sbb
mov
enter
es
jge
push
mov
mov
cld
aam
mov
int3
rorl
cmp
dec
sbb
mov
je
or
fstpl
push
adc
cs
mov
sbb
sbb
push
test
inc
fld
out
sbb
insb
call
mov
stc
mov
pop
out
sub
sub
cs
cltd
push
sub
sub
roll
cld
push
and
sbb
cmp
pop
cmp
sub
push
daa
push
dec
inc
cmp
adc
push
loopne
dec
pop
andl
test
cmp
jno
mov
add
cmp
shrb
mov
lahf
shl
lahf
gs
inc
or
xor
jnp
push
int
das
pushf
mov
mov
cmp
fs
add
arpl
outsl
arpl
inc
adc
scas
cmp
push
fldcw
inc
mov
add
test
iret
arpl
inc
jle
into
test
mov
fstpl
push
inc
add
test
stos
ret
xor
cltd
lret
pop
decl
dec
pusha
je
sbb
sbb
mov
mov
xchg
dec
or
movsl
pop
mov
sbb
leave
xchg
in
jns
leave
scas
add
gs
jae
xchg
mov
test
shll
js
or
stc
ds
add
cmpsb
push
ficoml
xchg
bound
mov
imul
int
xor
dec
xchg
repnz
sbb
adc
sub
repnz
popf
shl
rorl
clc
mov
leave
xchg
pop
sbb
nop
xor
int3
orl
sub
inc
outsb
je
adc
out
add
fcomps
push
xor
mov
out
mov
shlb
neg
cwtl
test
inc
rcrb
stc
cmc
mov
add
test
cmp
mov
lret
sbb
fimull
mov
mov
fmul
addr16
xchg
push
aad
pop
test
mov
mov
ficoms
cld
shrb
dec
test
loopne
jecxz
das
xchg
dec
or
in
push
pop
dec
movsb
jl
sti
push
push
adc
add
aaa
jnp
adc
sbb
jae
cmpsb
pop
cltd
push
sub
test
sbbl
lret
mov
adc
cltd
inc
mov
aad
cld
dec
mov
fisubrs
sbb
fnstsw
cwtl
xor
jne
aad
xor
ret
mov
and
dec
xor
aam
mov
and
rorl
add
add
push
push
shr
rorl
test
xchg
cmp
adc
loopne
repz
inc
aas
aaa
cmp
xchg
les
shlb
inc
or
push
mov
cld
pusha
add
xor
xchg
inc
dec
fcmovnb
hlt
inc
call
sub
add
loop
pop
mov
popf
outsl
insb
jns
lret
aas
mov
sahf
mov
icebp
cmpsb
daa
into
movsb
incl
cs
xchg
push
xchg
inc
mov
lods
push
add
inc
lea
and
les
jae
lods
adc
insb
cld
cmpsl
pop
inc
movsb
push
std
inc
test
mov
xor
addb
icebp
sbb
lret
insl
adc
scas
dec
and
jno
sbb
data16
clc
or
outsb
js
rol
adc
imul
ss
mov
leave
push
add
outsl
adc
xabort
jmp
xor
bound
loop
iret
or
test
xchg
faddl
push
pop
scas
jge
sidtl
mov
dec
mov
xchg
popf
jle
mov
mov
sub
insb
roll
push
dec
leave
cmp
out
xor
lods
fldcw
daa
xor
push
scas
andb
pushf
in
in
and
aam
mov
mov
sub
aas
cmp
gs
scas
xor
push
pop
mov
rcll
mov
cmp
repnz
in
outsb
xor
lcall
dec
scas
push
clc
push
jmp
std
mov
ljmp
mov
js
sub
movsl
adc
fnstenv
fstps
dec
xchg
or
sub
push
out
minps
mov
test
rcr
lock
mul
fildl
movsb
and
sbb
add
xor
push
push
jle
jnp
mov
negb
add
shl
pop
fnstenv
sub
popa
les
jns
out
mov
push
pop
pop
cmp
add
and
ljmp
jnp
imul
dec
iret
pop
sub
bound
cmp
test
or
lods
pop
mov
mov
sub
add
mov
mov
clc
repnz
mov
rcl
add
xor
xchg
and
es
fs
aam
jge
loope
loope
mov
leave
and
or
ds
jg
xchg
imulb
xchg
mov
shll
je
loope
mov
ljmp
insb
sbb
dec
arpl
cmpl
push
or
stos
jmp
hlt
fdivrl
xor
pop
add
and
hlt
in
sbb
add
int
lods
shrb
vmwrite
inc
xchg
or
out
mov
jl
mov
int3
imul
add
fsub
xor
cwtl
inc
push
es
xchg
stos
jno
aaa
mov
adc
pop
roll
cmp
lods
sub
push
stos
cs
popw
inc
es
loope
popa
dec
outsl
incl
int3
jnp
cmpl
mov
mov
cmp
ja
enter
out
inc
push
outsl
popf
call
and
fs
jne
pusha
imul
mov
inc
inc
insl
sub
out
pop
mov
ds
sbb
inc
pop
cmc
addr16
cmp
jae
test
ljmp
fnsave
cmp
in
mov
pop
ljmp
lret
push
push
insb
fisttpll
test
daa
jmp
out
mov
push
jbe
stos
in
push
pop
imul
mov
bound
cmpsb
sbb
stos
add
jmp
pop
fwait
pop
push
mov
inc
sub
out
out
ja
sbb
inc
into
popf
roll
dec
rcr
push
jbe
arpl
outsb
xor
in
in
scas
jb
std
mov
shl
add
add
dec
inc
pop
call
jno
shl
out
fwait
mov
push
push
push
std
mov
mov
push
add
out
cmc
xchg
lret
jge
dec
std
in
lds
lret
xchg
cmp
xor
std
andl
cmp
adc
jno
lods
roll
jle
add
pop
inc
sub
mov
int3
sbb
dec
cwtl
and
cmp
cmp
mov
push
and
jl
xchg
les
rcl
xlat
mov
and
fcmovnbe
pusha
sub
dec
xchg
or
mov
shlb
mov
and
scas
fimull
xchg
cmp
cmp
jl
push
inc
es
daa
pop
inc
subb
fs
and
sub
out
push
pop
imull
jo
cli
cmp
sbb
ret
push
add
or
sbb
mov
xchg
and
aad
stc
scas
jge
jnp
add
lea
rcll
rep
and
xchg
pop
or
inc
shr
add
jo
mov
das
jo
in
and
cld
and
push
push
or
in
lds
xlat
mov
xor
mov
sbb
sub
cmp
pop
cs
push
rcl
daa
push
pushf
ret
mov
inc
adc
sbbl
out
sti
dec
mov
fs
imul
sub
inc
pop
out
gs
cmp
js
pop
fs
dec
push
jp
or
xor
mov
movsb
outsb
lahf
xor
fsubs
push
movsl
dec
cmp
dec
ja
mov
xor
mov
mov
cltd
mov
xor
bound
mov
lock
dec
flds
add
cmpl
fidivrs
pop
sbb
jae
cmpsb
jns
aaa
cmc
mov
sub
rcll
movsl
stos
out
aas
je
outsl
sub
in
sbb
outsb
aaa
movb
and
xor
pop
or
icebp
or
pop
rclb
adcl
in
stc
movl
lcall
xchg
dec
lea
shll
add
das
aaa
lret
dec
mov
sti
jle
and
add
mov
outsl
cmp
in
inc
inc
pop
pop
add
stos
idivl
out
xchg
cmp
and
aam
notl
mov
icebp
mov
into
leave
adc
fsts
push
dec
in
and
dec
jno
enter
imul
add
jmp
repnz
push
and
cmpb
add
into
xlat
call
sbb
push
mov
pop
sbb
jge
xchg
inc
cmp
add
jl
add
add
lea
mov
iret
push
xor
xchg
adc
jbe
mov
repnz
imul
jns
arpl
cmpsb
cltd
sub
jecxz
xorb
push
dec
mov
cmpl
xor
movsl
jnp
add
decl
pop
dec
ja
mov
mov
daa
or
aas
push
rorl
sub
fdivrl
mov
in
mov
push
andb
stos
nop
movsb
push
pop
lods
dec
mov
popf
push
popl
mov
dec
in
or
cltd
sub
mov
lahf
stos
mov
shrb
cmp
inc
leave
adc
mov
stos
mov
fadd
lock
cs
and
outsl
insb
into
insb
pop
outsl
andl
jge
xchg
or
cmp
adcb
jbe
add
movsl
enter
stc
dec
xor
sbb
mov
clc
adc
jl
push
mov
add
scas
ds
mov
repnz
sbb
sub
hlt
mov
test
fldenv
pop
aad
or
inc
movsl
mov
xor
sub
cmp
repz
icebp
adc
popa
mov
sbb
lods
mov
in
mov
and
push
inc
nop
sub
xchg
imul
mov
cmp
pop
imul
xchg
faddl
add
jno
pop
and
mov
bound
push
xorb
pop
and
cmp
and
bound
out
push
inc
xor
fists
aas
add
adc
add
data16
testl
push
inc
cmpsb
sti
sbb
in
xchg
test
dec
and
stos
xor
inc
xchg
cmp
mov
subb
arpl
imul
cmp
gs
lods
and
cmp
ljmp
cld
sbb
push
pop
cs
push
movsb
mov
or
movsl
cmp
and
xchg
cmpsb
sbb
fsubrs
cmc
pop
jp
daa
or
inc
lahf
lret
or
mov
push
and
enter
xor
xlat
or
adc
rcll
daa
xor
andl
inc
push
xchg
and
fwait
xchg
push
cmc
inc
add
ljmp
das
in
inc
xor
iret
mov
sub
enter
bound
jmp
std
push
mov
clc
jnp
test
addb
arpl
adc
ret
cwtl
mov
cmp
mov
and
xchg
outsb
add
sbb
cmc
or
pop
jb
test
pop
dec
lret
imul
int3
push
mov
icebp
push
and
push
adc
or
iret
jo
mov
push
sbb
xor
dec
orb
addr16
lret
or
sub
add
jae
cld
call
and
jnp
dec
dec
aaa
div
movsb
mov
fwait
xchg
imul
mov
shrl
test
lret
inc
faddl
and
loop
add
jno
arpl
sbb
lock
push
mov
mov
adc
lock
cmp
dec
adc
out
lods
pop
mov
pop
and
mov
jnp
lcall
scas
ja
jno
das
iret
dec
push
in
test
lods
jne
inc
jo
push
cmp
or
out
in
jg
fcoms
jmp
pop
pop
fldl
add
pop
xchg
xor
and
out
xchg
loopne
mov
cld
jns
lahf
add
jl
iret
or
add
out
enter
inc
outsb
inc
pop
lahf
xchg
lret
jnp
mov
and
sbb
fnstenv
cmpsb
je
loope
dec
mov
mov
mov
out
xor
inc
dec
add
lock
mov
movsb
add
mov
repnz
rcrl
fstps
in
jmp
lods
insb
ret
push
add
arpl
sbb
inc
lds
sahf
cmp
add
xor
mov
addl
xchg
add
lret
sub
jp
daa
imul
pop
or
cld
js
pop
cmp
jg
pop
lds
fdivr
in
cmpsb
or
dec
jge
outsb
movsb
fisubl
nop
ss
push
les
pop
out
xlat
rep
dec
or
les
icebp
int
and
cs
mov
push
jbe
data16
ds
out
int3
addl
pop
pop
sub
inc
and
ds
xor
push
push
sub
xlat
dec
pop
test
ror
sahf
out
pop
mov
pop
pusha
aam
lahf
jecxz
jge
movsb
cld
rep
fs
dec
pop
lahf
lods
aas
push
xchg
push
cmp
cmp
dec
lahf
pop
xor
inc
insl
sti
repnz
adc
mov
inc
and
sarl
pusha
add
rcrl
mov
mov
mov
xlat
pop
loope
lds
xchg
hlt
int3
cmp
fincstp
sub
dec
pop
xchg
xor
loop,pn
je
push
cmpsb
xchg
out
jmp
cld
cli
aas
cwtl
jl
mov
sahf
in
cmp
sbb
addr16
test
or
test
cmp
sub
pop
dec
sbb
xor
lahf
mov
inc
outsb
push
or
fstpt
pop
dec
mov
mov
cmpsl
add
sub
sub
mov
pop
add
insb
mull
xor
mov
mov
test
or
test
jns
adc
mov
std
pop
sub
rorb
inc
adc
jns
xchg
mov
shl
aad
sub
fsubrl
std
sub
divl
imul
jno
xor
jno
and
push
or
nop
add
call
mov
add
aas
popa
pop
jg
sbb
stc
stos
inc
inc
test
mov
pop
mov
cmpsl
icebp
rcrb
out
inc
cmp
sub
stos
mov
in
movsl
mov
cs
fs
gs
out
icebp
cli
aas
ror
movsl
mov
cli
mov
sbb
mov
push
or
and
and
inc
sbb
ret
andb
dec
lcall
test
dec
xor
add
scas
push
leave
push
aad
dec
lret
add
sti
adc
out
push
jne
test
push
pop
mov
mov
sti
aas
popl
mov
and
pop
mov
mov
imul
mov
jmp
dec
and
rep
add
loopne
pushf
xlat
gs
aas
and
leave
rcr
aam
or
jle
pop
aad
cwtl
int3
push
mov
call
mov
hlt
je
fidivrl
mov
leave
cmp
sub
in
cs
xchg
adc
inc
push
jg
or
inc
popa
xor
test
in
add
push
mov
push
ret
cmp
jg
jns
mov
jp
loopne
mov
test
nop
lahf
test
cld
cli
arpl
rcr
sbb
stos
jo
popf
imul
mov
add
cmp
inc
dec
sbb
fdiv
mov
adc
cmpl
jns
in
gs
sub
es
sbb
push
mov
neg
xor
nop
les
or
test
lret
cmp
shrb
testl
and
cmp
aad
cmp
and
dec
test
rcrb
fstl
xchg
cmpsb
xor
fwait
xor
subl
xchg
test
sahf
pop
cmp
cmp
insl
mov
ljmp
push
cmpsb
iret
push
lock
dec
jle
add
mov
cmc
push
jb
pop
and
orb
mov
leave
roll
xchg
test
push
sub
pop
mov
xchg
ss
and
xchg
cli
inc
insb
jecxz
lahf
or
repz
outsb
xchg
dec
lahf
jge
xchg
dec
jb
int
arpl
jns
mov
add
add
pop
subl
pop
outsb
dec
add
or
dec
insl
bound
enter
inc
sub
pop
adc
imull
jmp
scas
mov
mov
and
jne
das
mov
dec
inc
xchg
sub
cwtl
adc
sub
cmp
sti
adc
xchg
add
add
sti
and
loop
fs
aaa
fsubrs
and
adc
adc
push
loopne
imul
nop
iret
xchg
ficomps
xchg
adcl
dec
mov
stos
sub
shrl
outsb
and
je
adc
push
sub
fstps
xor
test
mov
nop
mov
mov
in
addl
rcrl
mov
inc
imul
mov
or
push
push
fwait
jno
mov
pop
mov
fbstp
int
aaa
xchg
pop
sbb
and
nop
pop
movsb
mov
pop
or
clc
inc
push
push
ficoml
dec
push
insb
lods
mov
pop
test
fistps
lea
push
or
xchg
lahf
jb
into
stos
inc
out
pop
xor
pushf
mov
fildl
adc
adc
sbb
xchg
data16
add
stos
xchg
fwait
pop
or
orl
jnp
jae
ljmp
ljmp
out
cmp
fwait
and
push
mov
dec
in
jnp
aaa
add
jbe
outsb
mov
xchg
lods
mov
dec
lods
mov
mov
in
cli
adc
jnp
xchg
stos
aam
iret
out
mov
orl
std
rorl
dec
mov
inc
jns
mov
iret
push
push
lret
fwait
inc
pop
ljmp
fadds
adcl
or
or
cmpl
lcall
fisubrs
repnz
jecxz
and
lds
ret
adc
push
mov
jns
sub
add
pop
push
add
mov
mov
xor
call
imul
mov
push
pusha
hlt
jl
push
pop
addb
cmp
or
sbbl
lods
xor
ja
fsubrl
lahf
xchg
adc
test
std
mov
lods
dec
outsb
leave
sub
jmp
cwtl
or
cs
sub
add
sub
cmpsl
int
mov
fldcw
fstl
xchg
xchg
and
sub
mov
dec
sub
out
addr16
and
mov
jp
sbb
faddl
xlat
mov
xchg
or
mov
sub
cmp
stos
ret
adc
and
aas
data16
jmp
sub
or
pop
pushf
in
sahf
sub
cmp
xorl
stos
dec
inc
inc
mov
fsubl
fldt
push
add
outsb
dec
dec
lret
pop
insl
push
xor
in
dec
movsl
aaa
and
ljmp
je
adc
xchg
sub
dec
idivl
sub
mov
adc
pop
repz
les
fsubr
xchg
mov
lret
jno
adc
push
in
mov
xchg
imul
jnp
ds
pushf
push
out
xchg
enter
dec
test
jl
adc
gs
pop
fists
xchg
loop
and
cmp
add
dec
out
dec
loope
ss
jp
sarb
test
nop
shlb
sbb
arpl
sub
fs
cmp
add
jmp
add
xchg
cwtl
pop
inc
cmpsb
push
add
ljmp
xor
xor
fdiv
pushf
lea
pop
mov
mov
inc
xorl
jge
pop
xchg
push
inc
stc
ds
sub
lds
xchg
icebp
ficoml
sub
daa
or
fisubrl
fisubl
clc
outsl
mov
pop
jl
jl
fimuls
loopnew
in
dec
mov
call
adc
or
xorb
adc
dec
shr
popa
sti
cmp
mov
sbb
xor
or
lcall
adc
imul
lret
sub
scas
xor
mov
xor
jle
mov
cmpsl
sahf
lret
mov
cmpsl
outsb
xchg
dec
cmc
je
scas
inc
aas
leave
ds
std
adc
jbe
subb
std
shl
dec
arpl
andl
cmp
lods
call
andl
adc
aad
add
hlt
js
ds
loop
push
lret
leave
push
jg
push
jg
rcr
pop
sub
sub
out
push
jg
in
jecxz
xchg
subl
adcb
cmpsb
bnd
leave
scas
dec
stos
lds
mov
add
int
xor
sbb
mov
push
and
scas
or
sub
sbb
aaa
call
pop
jle
out
sub
mov
loop
dec
push
mov
mov
scas
mov
rcrl
push
add
push
pop
push
sbb
inc
aaa
shlb
adc
and
push
dec
pop
or
adc
or
gs
sar
gs
sbb
jle
xchg
nop
push
or
jnp
push
popa
clc
dec
xchg
imul
test
shrb
fcmovnb
call
mov
cmp
cmp
sti
lea
rclb
jo
rcr
push
mov
mov
add
in
aam
inc
ss
cmp
mov
bnd
mov
mov
cmpsb
xchg
push
test
daa
push
xor
enter
imul
push
fidivrl
cmp
out
push
js
pop
aaa
pop
xor
inc
int3
cmp
lods
push
jnp
pop
int3
and
scas
push
mov
lods
ja
dec
iret
pop
cwtl
inc
inc
inc
arpl
mov
lea
dec
shrb
mov
jg
cmp
push
push
lods
mov
or
push
js
in
mov
movsl
leave
sub
cltd
popa
in
xor
jo
ror
add
and
add
fdivl
hlt
into
sti
and
mov
push
dec
or
andl
pop
mov
bound
or
push
add
stos
and
mov
jne
inc
add
in
or
cmp
test
adcl
loope
cmp
jecxz
jmp
scas
push
repnz
fidivrl
jo
xor
lahf
stc
fdivl
adc
test
ds
mov
cmpsl
pop
fs
xor
lcall
movsl
loope
and
ret
mov
aam
sub
bound
and
push
inc
testl
dec
xchg
inc
adc
jecxz
lods
jecxz
into
mov
cmp
mov
je
mov
push
cli
xor
jno
in
xor
vmaxpd
cmc
pshufw
shlb
arpl
jae
test
mov
fdivl
lret
into
mov
iret
jp
fwait
pushf
cwtl
stos
iret
cmp
mov
adc
mov
in
loope
adc
orb
arpl
and
add
stos
incb
mov
xchg
lahf
lcall
fidivs
es
aas
leave
push
mov
repz
fwait
pop
pop
xor
lcall
sub
les
pop
inc
repz
and
or
enter
and
sarl
sub
lods
jo
fists
mov
fwait
ja
lcall
xor
adc
in
stos
pop
push
pop
icebp
adc
pop
out
lahf
pusha
pop
dec
xor
incb
sub
push
and
jge
sub
ficoml
xchg
adc
pop
mov
push
push
sysenter
pop
cmpsb
inc
mov
bound
test
cmc
dec
mov
push
sahf
xchg
clc
sbb
cli
jecxz
xchg
ss
push
imul
jno
pop
scas
outsb
xchg
jmp
inc
or
sub
sbb
in
xor
or
fwait
mov
fdivr
jp
mov
pop
lods
push
fisubl
mov
notb
add
imul
outsl
jae
aaa
test
and
and
loop
jg
test
icebp
ja
pop
test
jecxz
fnsave
fistps
mov
fldenv
sub
or
lret
lcall
adc
cmpsl
shll
stos
es
sbb
xlat
and
mov
jg
jae
and
push
cmc
mov
or
stos
sahf
sub
push
out
cmp
or
in
pop
push
lods
xor
push
adc
sub
xor
pop
es
jl
cltd
popa
movsl
dec
dec
xchg
xor
ss
and
jno
test
jo
decb
aas
xor
in
mov
bound
addr16
adc
cli
push
je
out
push
mov
hlt
les
xchg
ss
fstpl
and
aam
daa
xor
mov
and
adc
push
lock
adc
call
lcall
test
dec
test
mov
inc
inc
fcmovnb
stos
xor
xor
mov
adc
in
ljmp
dec
movsb
pop
faddl
xchg
add
out
cmp
loope
mov
loop
jae
or
ds
daa
mov
sbb
mov
idivb
xchg
sti
mov
add
push
fxch
mov
int3
xlat
inc
jbe
push
sub
loope
jo
loope
xchg
scas
xlat
xlat
push
pushf
jnp
arpl
and
push
aad
scas
rolb
idivb
mov
lahf
jns
fdiv
test
pop
sub
sub
inc
fcmove
inc
xor
decb
leave
mov
aaa
xchg
icebp
adc
repz
rorl
pop
mov
in
push
xchg
mov
outsl
pop
inc
xorl
jb,pn
lock
pop
outsb
enter
mov
testb
scas
adc
or
out
dec
pushf
sbb
pop
loop
push
shll
gs
pop
push
add
scas
push
mov
dec
test
jnp
lock
add
cs
dec
cwtl
popf
adc
jae
imul
or
sti
pop
mov
xchg
lods
sbb
xchg
jnp
test
idivb
xor
rorl
jl
inc
fs
loope
call
inc
mov
arpl
jb
incb
loopne
push
pop
jb
jb
cmp
or
sbb
test
dec
mov
cmp
pop
xchg
mov
loopne
xor
xchg
jmp
mov
aad
sub
cmpsb
fstl
movsl
mov
shll
pusha
and
mov
jb
mov
rorb
mov
dec
mov
mov
mov
push
ds
in
enter
aam
jae
call
fs
nop
int3
shrb
pop
call
mov
mov
testl
inc
ljmp
shlb
mov
shll
cmp
add
sub
xor
dec
pushl
and
and
xor
mov
mov
pop
stc
ror
mov
mov
aad
in
out
inc
inc
test
orl
in
hlt
insb
stc
inc
ret
mov
push
jo
sbb
mov
es
jmp
mov
int3
sub
dec
jge
cmp
inc
push
xchg
aaa
sub
shlb
imul
inc
in
test
adc
sarl
sbb
je
mov
mov
fcomps
loope
push
outsl
sbb
mov
push
add
mov
das
mov
jg
cmp
mov
mov
mov
in
aad
arpl
xlat
and
pop
and
dec
ljmp
pop
hlt
cmc
pusha
std
sti
adc
pop
adc
scas
scas
cmp
inc
inc
cmc
lahf
mov
je
adc
xchg
pop
sahf
sub
hlt
aad
shl
sbb
xchg
jbe
inc
pop
popa
out
test
call
pop
mov
jno
cli
hlt
or
add
xor
pushf
jno
dec
sar
jne
cld
movsb
xor
pop
test
and
inc
cmp
and
mov
ljmp
scas
jg
jp
int3
rcll
ret
test
push
lds
insl
pop
stos
cltd
iret
jg
lcall
xchg
xor
mov
push
imul
in
mov
icebp
dec
scas
bound
pop
fldl2t
sahf
jp
sub
cmp
inc
hlt
xlat
ljmp
or
arpl
sbb
arpl
mov
fstpl
jns
fcomi
cmc
mov
lock
mov
inc
jecxz
pusha
ret
popa
shl
out
fisttpl
xor
push
pop
daa
dec
or
push
in
mov
and
or
inc
mov
sub
mov
dec
lcall
xor
sub
or
jb
pop
sub
sub
jae
push
iret
dec
outsl
xchg
shlb
mov
sbb
mov
xchg
iret
xor
lahf
ffree
push
sub
push
dec
out
call
xchg
xor
cmp
lcall
xor
inc
fmuls
mov
cmp
mov
sub
add
test
sub
push
loop
cmp
rcrb
fistl
dec
sub
aad
decl
lods
cld
push
popl
sbb
out
imul
leave
push
sbb
aam
mull
outsl
pop
loop
mov
pop
xor
mov
fwait
rcr
jno
movhlps
push
cmpsl
mov
mov
aam
and
je
add
xchg
int3
hlt
sbb
or
xor
or
lds
cs
divl
les
outsl
pop
pop
xlat
xor
sbb
jns
imul
and
xchg
or
rclb
pop
cs
decl
fnstcw
enter
mov
stos
xor
cmc
test
jns
jno
data16
addr16
ljmp
xor
xchg
pusha
mov
arpl
sbb
in
and
mov
icebp
jae
xchg
jmp
xor
hlt
jge
gs
adc
test
inc
pop
sbb
icebp
and
test
sub
jge
push
movsl
sbb
lret
movsb
or
out
or
mov
jae
sbb
sahf
push
mov
loopne
adc
inc
addb
jo
dec
xor
in
out
pop
dec
leave
cmp
outsl
mov
xchg
xor
mov
incl
fsubrl
mov
mov
inc
cmp
dec
data16
out
or
mov
sbb
jge
push
xchg
notl
adc
or
pop
add
pop
sub
or
sub
jo
daa
scas
enter
sbb
in
jle
mov
fstl
cltd
shll
inc
out
fld
loop
fidivrs
inc
lock
and
addr16
aaa
sbb
add
jle
popf
xchg
cmp
imul
or
data16
bound
ret
popf
jb
fneni(8087
stos
pop
push
arpl
fsub
jae
mov
inc
jne
jns
cli
jo
arpl
mov
gs
cmp
add
cli
popf
mov
das
mov
or
testl
rclb
sbb
sub
orb
inc
lcall
xlat
jle
adc
mov
xor
nop
loop
call
push
or
add
repz
jb
mov
jmp
cmp
fadd
pop
and
test
xor
bound
sbb
xorb
mov
mov
movsb
nop
out
xchg
dec
xor
sarl
sub
cld
inc
inc
or
dec
push
mov
jo
mov
dec
test
aaa
cmp
push
adc
in
movsl
adc
lds
mov
push
aas
adc
addl
xchg
pop
inc
mov
movsb
cld
cmp
and
jne
arpl
pop
in
cmp
pop
cs
paddusw
in
sahf
aad
negb
popl
ror
ss
jo
pop
out
imul
iret
in
dec
adc
pushf
mov
bound
cmp
and
fadds
add
pusha
xor
imul
jp
jno
test
mov
std
or
cmpsb
loopne
mov
daa
dec
cltd
mov
loop
dec
rclb
lret
lods
dec
cmp
pop
xor
mov
push
clc
push
pusha
jb
dec
pushl
add
add
jnp
push
mov
mov
inc
sub
idiv
fs
stc
imul
push
inc
lahf
jge
call
sub
inc
arpl
into
stos
ds
hlt
sbb
mov
out
inc
ss
jl
pop
mov
sub
fistpl
dec
jb
jne
sub
and
xor
aaa
test
roll
adc
mov
sbb
in
add
ret
mov
fisubrs
out
jmp
add
insl
xor
jg
sti
mov
cli
cmp
xchg
jns
lock
pop
sarl
loope
jp
and
push
lds
and
out
insl
ds
jbe
out
sub
mov
jno
add
mov
push
hlt
lret
or
aas
in
rcrb
ret
popf
cmpsb
fwait
mov
stos
sbb
push
int3
aam
test
fistl
dec
loop
int
pop
push
aas
push
sbb
mov
xchg
xchg
mov
loope
arpl
inc
call
xchg
data16
mov
xchg
incb
push
enter
add
add
inc
mov
shlb
xchg
nop
cmpsb
loop
mov
push
subps
movsl
iret
mov
sub
jne
lret
cli
cs
scas
push
pusha
push
pop
jne
stos
mov
xchg
and
and
enter
push
sahf
loop
jbe
nop
scas
jmp
jl
jns
mov
adc
add
xchg
mov
lea
cltd
xchg
fwait
ja
push
stos
repz
addr16
lods
xorb
sbb
pop
test
pop
lods
jge
inc
push
daa
xor
mov
mov
mov
and
mov
jne
sub
arpl
pop
jno
sub
cmp
sbb
lcall
mov
xchg
stc
mov
jmp
push
in
mov
int3
jno
mov
faddl
arpl
fndisi(8087
cs
movsb
andb
or
outsb
cmp
push
inc
add
push
jb
pop
lds
repz
and
and
inc
mov
inc
cltd
xor
jb
inc
out
push
pop
stc
imul
and
jae
mov
test
popa
stos
mov
ret
into
data16
aaa
mov
inc
fcompp
pop
dec
mov
fiadds
push
xor
sbb
mov
adc
je
inc
pop
sbb
xchg
insl
loope
push
ja
inc
rcr
call
test
cld
out
addr16
in
fs
shlb
movsl
sti
lahf
lds
and
sbb
xor
loop
shl
clc
dec
mov
and
std
or
xor
cmp
mov
mov
inc
and
cmp
or
aam
clc
pop
push
dec
ret
repz
mov
test
cmp
add
daa
cld
cmp
dec
bound
daa
sbb
ficoml
fnstcw
in
outsl
rorl
xchg
insl
dec
stc
xchg
sbb
imul
jbe
aam
push
out
dec
add
adcb
imul
inc
sarl
xorl
out
push
ja
sub
aad
in
push
jge
addr16
pop
js
and
sbb
and
cli
ficoml
in
pop
add
and
add
xchg
pop
or
or
fnstsw
testb
movsb
testl
dec
xchg
mov
cmp
jp
mov
out
sub
xchg
dec
sbb
inc
push
cmp
loop
mov
add
add
cmc
sub
adc
dec
loopne
xchg
dec
test
dec
fld1
xor
push
outsl
mov
push
jae
mov
xlat
mov
ret
es
jns
xchg
mov
add
movsl
dec
out
pop
repnz
pop
cltd
je
sbb
stos
xchg
daa
xor
push
push
xchg
cmc
ret
xchg
pop
jmp
xchg
and
sti
mov
scas
mov
ds
out
jg
jl
xchg
fldcw
sub
inc
adc
cld
das
sub
and
mov
dec
movsb
mov
leave
push
inc
push
mov
ficomps
daa
mov
sbb
cmc
mov
sarl
dec
inc
cmp
ficoms
push
push
jge
gs
pop
mov
jnp
adc
pop
lea
rorl
xchg
mov
ss
fucomp
in
andl
fmull
adc
pushf
fs
add
ljmp
inc
jp
pop
repz
xchg
popa
cwtl
and
adc
mov
arpl
adc
pusha
dec
lcall
xchg
jns
mov
popa
xchg
test
jecxz
cmc
jge
cli
sub
stos
jge
or
push
cmc
nop
cmpsl
jno
ljmp
scas
loopne
xchg
gs
imul
in
jp
or
inc
or
adc
mov
mov
in
push
insl
mov
push
ret
insb
mov
fdivrl
push
pop
popa
push
movsb
or
je
movsl
adc
js,pn
test
mov
mov
icebp
int3
and
aaa
popa
in
mov
inc
push
insl
add
imul
mov
mov
mov
cmp
jle
pop
jl
adcb
jb
repnz
sbb
sbb
lret
sbb
mov
lods
sbbb
js
lret
cmp
push
push
ret
or
aad
loope
xchg
fcomp
sbb
ss
mov
das
cmc
lret
adc
pop
popa
das
and
jb
fisubrs
dec
jge
or
pop
aas
bound
or
add
push
sahf
fsub
cmc
mov
dec
push
test
mov
flds
xor
aaa
aam
and
stc
cmp
pop
xchg
xor
aam
mov
and
out
adc
lret
pop
movhps
xor
mulb
lcall
in
out
addr16
dec
jle
cmc
stc
pop
or
pusha
and
xchg
int3
sarl
mov
int
and
movsl
add
das
loopne
xchg
idiv
cld
test
lret
inc
xor
jle
adc
call
lds
lea
add
xlat
jnp
and
jne
std
arpl
jg
or
dec
push
gs
cmpsb
adc
cmpl
notb
add
sbb
or
stos
js
mov
push
lcall
inc
cmp
push
inc
jmp
add
adc
addl
test
xchg
cmp
je
jecxz
push
aad
inc
push
cltd
push
in
std
data16
sbb
xchg
fldt
fistpll
rsqrtps
xchg
lock
testl
pop
push
or
cmp
lods
dec
arpl
add
test
out
jge
adc
add
inc
icebp
out
int
push
lahf
jo
jl
add
adc
push
dec
scas
adc
dec
or
xchg
mov
mov
adc
shr
mov
inc
jge
popf
push
xchg
notb
imul
xorl
sarb
daa
pushf
notb
and
sarl
popa
or
test
cmp
and
mov
xchg
stc
push
pop
dec
sub
mov
dec
bswap
cmp
testl
mov
jle
rorl
adc
enter
in
sub
xchg
push
push
sub
and
inc
popf
push
loop
push
jns
or
sarl
and
dec
int3
in
xor
dec
movsb
dec
int3
mov
test
add
stos
cmp
in
int3
sbb
sahf
mov
fdivrl
push
sbb
sub
xor
mov
fcompl
cmc
xchg
jb
and
lahf
xor
add
mov
outsb
aad
daa
jge
pop
arpl
sub
mov
lahf
nop
jns
aas
xchg
jle
mov
js
sub
and
ljmp
dec
stos
mov
push
mov
pop
aas
mov
out
cmp
pop
sbb
ljmp
pop
xor
jb
js
mov
cmpsb
test
pop
cmp
idiv
mov
jne
add
or
inc
push
loopne
outsl
and
mov
dec
lods
loopne
roll
sbb
aaa
push
daa
in
fidivrl
or
cmc
cmp
push
scas
inc
push
xor
lock
lods
add
push
jne
fistpl
xlat
das
sbb
pop
inc
js
loop
dec
fmulp
push
xchg
xchg
cs
out
ret
sbb
daa
inc
push
ss
mov
adc
fmull
xchg
push
xor
push
cmp
dec
sub
dec
mov
push
jae
mov
jne
sub
mov
lahf
xchg
addr16
dec
dec
add
in
test
out
cltd
les
jns
mov
xor
shll
out
cmp
loop
scas
pop
icebp
jno
xchg
and
inc
cmpsb
push
sarl
push
pop
mov
push
sub
adc
mov
call
bound
mov
pusha
lods
popf
push
add
xchg
in
xor
addb
push
or
xor
out
cmp
sub
popf
pop
add
add
aam
pop
add
push
into
dec
std
pop
iret
mov
call
ss
pop
inc
push
jl
fistl
mov
test
test
outsw
sub
decl
cmpsb
lods
xor
les
or
mov
cltd
jbe
mov
inc
or
fldcw
movsb
dec
repz
mov
insb
shlb
sbb
xchg
stc
cmp
and
stos
mov
jp
or
add
cmp
lock
push
mov
stos
sti
mov
call
jp
fisttps
fsubr
mov
clc
popa
lock
cmp
xchg
mov
push
test
inc
sub
popa
push
hlt
sub
sub
out
xchg
xchg
pop
adc
mov
into
sub
rolb
jbe
jge
sub
mov
mov
and
xchg
add
dec
xor
es
cmp
sub
pop
das
pusha
sbb
dec
mov
fsts
out
pushf
xor
mov
test
jns
cmpb
outsl
jb
loopne
int
or
mov
subb
shlb
sub
mov
outsb
aad
dec
or
jecxz
cmp
rolb
sbb
mov
lret
and
sbb
gs
and
adc
xor
push
jp
sbb
pop
adc
loope
jne
je
adc
mov
jb
or
xchg
aas
sbb
cld
mov
or
rorb
adc
roll
orb
imul
mov
mov
push
sub
out
test
jnp
cmp
dec
sbb
in
and
mov
outsl
cmp
negl
dec
aam
inc
test
shrl
xchg
lock
xchg
dec
rorb
push
push
cmp
inc
int3
repnz
cwtl
pusha
inc
hlt
adc
test
cmp
int
push
aam
push
inc
push
jl
and
push
pop
ret
ja
push
in
in
in
sbb
aad
int3
ja
nop
push
xchg
cmpsb
call
into
pop
inc
mov
loopne
movsb
insb
xchg
ljmp
pop
xor
add
and
into
popf
jo
aam
xchg
pop
fcomps
jbe
and
iret
xchg
arpl
testb
cwtl
dec
pop
mov
addr16
adc
rol
pop
aad
pop
das
pop
add
add
jne
add
mov
sbb
push
imul
enter
jmp
clc
into
aas
lods
adc
nopl
fildll
pop
test
push
insb
push
cmp
shlb
pop
iret
cld
dec
xor
and
adcb
daa
iret
lods
scas
cld
cmp
add
mov
mov
enter
testl
rcrl
xchg
test
sti
add
lcall
ljmp
xor
lods
out
dec
inc
inc
mov
loopne
enter
outsl
mov
cmp
sub
jmp
adc
in
enter
sub
jg
dec
mov
push
dec
incl
test
jle
xchg
shrb
mov
push
or
dec
cmp
leave
orl
mov
pop
jo
or
sub
add
outsb
sar
mov
jmp
sub
or
lods
adc
repnz
mov
fadds
aad
cmp
fwait
loop
cmp
xlat
mov
fisubs
jle
add
xchg
invd
js
lock
mov
fdivrs
aaa
mov
ret
inc
adc
mov
sbb
outsl
pop
adc
dec
or
test
mov
sbb
scas
dec
mov
stc
mov
shr
cmp
es
imul
or
sbb
or
mov
stos
subl
xor
into
jnp
mov
into
pop
push
icebp
inc
pop
ja
insb
bound
jmp
mov
cmp
imulb
adc
jno
cmc
mov
mov
mov
iret
mov
inc
out
xchg
xchg
aaa
lods
jns
sub
loope
ret
fwait
dec
or
imul
hlt
jl
aas
xor
xor
testl
cmp
scas
cmp
cwtl
test
push
sbb
inc
pop
sub
ror
pop
icebp
cld
pop
ficompl
pusha
inc
mov
imul
out
stc
pusha
imul
xor
addl
and
shrb
mov
out
popf
sub
mov
mov
das
sub
add
sub
inc
add
dec
stos
xchg
call
das
in
repnz
dec
das
mov
cmp
jg
cmpb
jg
and
js
xchg
and
xor
sub
inc
sbb
iret
jmp
and
orb
std
mov
inc
jo
icebp
mov
cli
stc
mov
insl
dec
sbb
cmpsb
dec
je
insl
or
xor
je
fsubrs
clc
js
lock
push
inc
insb
idiv
pop
aaa
xchg
movsb
es
sahf
mov
push
repnz
cmp
pop
ss
pop
add
inc
dec
out
push
dec
in
lcall
mov
nop
or
push
ljmp
stos
mov
aad
dec
stos
leave
out
jb
jp
inc
scas
test
ss
aad
in
stos
inc
xchg
aaa
cmp
mov
idiv
in
decb
out
pop
push
jp
mulb
cmp
data16
insb
inc
jecxz
jmp
xor
lret
dec
mov
push
adc
pushf
ret
xchg
pop
ficomps
fistl
out
mov
and
mov
sub
mov
loopne
cmc
inc
movsl
xor
mov
xchg
push
xchg
jbe
inc
cmp
ljmp
mov
sub
orl
sub
and
and
ds
insl
jns
sbb
out
loopne
pop
jns
and
addr16
cwtl
pop
mov
sbbl
cmp
in
fcoms
jne
jb
sub
jmp
and
imul
dec
call
gs
test
xorb
push
push
or
imul
adc
in
add
leave
ss
scas
test
aad
sub
popa
ret
nop
call
les
or
lock
gs
outsb
scas
hlt
sub
jmp
sub
cmp
daa
pop
inc
xor
cmc
hlt
jecxz
imul
cmp
or
lahf
jb
sbb
das
add
popf
daa
call
mov
lock
sbb
inc
dec
das
stos
shl
jl
dec
jns
and
in
fld
lods
fnstenv
fists
dec
add
mov
test
push
scas
xbegin
jnp
test
and
mov
xchg
test
fsubp
lret
push
insb
jne
mov
subb
mov
arpl
mov
push
dec
cmp
add
push
mov
inc
cwtl
mov
ds
arpl
push
xor
fidivs
cmpsl
in
sub
rol
fs
int
mov
subb
or
xchg
popf
pop
pushl
sahf
pop
xchg
into
rorl
push
adc
ljmp
enter
xchg
popa
imul
add
frstor
adc
pop
push
std
lret
mov
sti
clc
jb
popf
jmp
ficoms
lret
sbb
cmp
in
insl
call
sub
js
add
dec
and
ljmp
or
idivb
pop
adc
insl
adc
mov
mov
test
repnz
jns
cmp
nop
loop
and
fistl
jnp
mov
shrb
or
dec
push
xchg
fildl
out
or
xorb
and
jg
jmp
insb
jb
cmp
add
cld
mov
repnz
daa
ficompl
ret
addr16
in
xor
es
stc
sub
in
popa
outsl
add
mov
das
gs
out
mov
lret
cmp
cmc
xchg
aas
aam
sbb
jns
mov
inc
aas
lods
nop
adc
out
sahf
pop
call
push
insb
aas
push
js
xor
int
dec
jno
dec
inc
mov
out
cmp
or
adcl
inc
add
arpl
fstps
mov
sub
mov
xchg
call
in
lahf
push
mov
dec
addr16
out
xchg
push
jp
sbb
aad
dec
dec
dec
js
cs
pop
jle
test
jns
les
mov
jns
add
mov
sbb
pop
ja
pop
cmp
mov
pop
sub
push
pusha
inc
jl
fcompl
cmpsb
scas
push
hlt
adc
xor
loope
and
pop
adc
and
bound
xchg
jg
lock
je
and
stos
push
sbb
push
loop
leave
outsl
pop
pusha
repnz
xchg
lret
divl
xchg
dec
inc
call
pop
inc
add
push
mov
or
mov
mov
push
mov
jmp
xchg
xor
xor
dec
and
adc
xlat
cmp
test
dec
mov
imul
in
enter
insb
and
or
jb
cld
divb
and
cli
sbb
mov
leave
cltd
lock
mov
or
in
ja
jg
mov
loope
adc
push
jle
push
sar
ret
sbb
adc
out
or
daa
mov
insb
fwait
rcr
in
jb
out
arpl
outsb
mov
mov
mov
push
setae
dec
and
or
sti
mov
sub
or
jne
mov
cmpsl
out
int
int
dec
and
cltd
fs
mov
fs
pop
inc
imul
pop
mov
jo
bound
stos
outsb
sbb
sub
push
test
in
lods
jge
mov
sub
lods
cmp
das
imul
enter
mov
push
jl,pt
cmp
stos
and
jg
mov
jnp
subl
repnz
jle
xor
push
jle
push
cmp
mov
sub
or
and
push
mov
arpl
mov
push
adc
push
jecxz
fs
pop
lds
cmp
outsl
out
dec
push
push
ljmp
shll
mull
adc
cld
mov
fmull
pop
and
or
loopne
push
cmpsl
sub
mov
in
aaa
mov
pop
test
ja
adc
fldenv
bound
sub
sti
shrl
loope
repnz
push
addr16
xchg
and
inc
pusha
push
int
mov
out
imul
lcall
orl
enter
imul
cld
add
xchg
mov
fisubs
pop
adc
int3
lea
sbb
aad
mov
roll
lret
adc
lods
ret
test
loopne
mov
mov
sbb
and
loop
xchg
mov
aam
xlat
outsl
add
cmp
sbb
sbb
mov
jns
clc
dec
xor
das
adc
sbb
jns
dec
push
int
scas
sti
clc
int
addr16
aaa
mov
out
ret
push
or
xchg
inc
or
push
mov
xchg
adc
push
adc
mov
scas
jbe
and
xchg
sub
shrl
loop
rorb
sbb
cwtl
or
push
mov
xchg
leave
test
mov
mov
mov
xor
mov
push
mov
insb
icebp
sbb
imul
jmp
stc
adc
mov
xchg
mov
mov
inc
pop
hlt
mov
lret
hlt
testl
scas
adcl
mov
add
cltd
cmc
mov
xchg
mov
aaa
testl
bound
xchg
loopne
pop
mov
frstor
and
push
push
pop
xor
in
fwait
icebp
clc
adc
mov
sbb
add
std
int
mov
lret
or
or
popa
dec
and
insl
jbe
push
cmpsl
cmp
dec
mov
push
inc
mov
pop
fdivp
mov
cmpl
pushf
stos
cmc
daa
fstpl
add
and
sbb
cmp
mov
jmp
pusha
mov
pop
stc
mov
xor
mov
loop
bound
mov
dec
xchg
lock
cmpsl
data16
fsubl
call
pop
fadd
test
pusha
cs
fcomi
imul
pop
out
add
dec
ss
fwait
sbb
shr
sbb
ss
imul
sub
mov
push
push
jecxz
movsb
das
inc
mov
out
cmp
or
loop
xchg
aaa
neg
stos
fistps
mov
dec
cmpsb
dec
cs
push
out
pop
fcoml
jo
mov
xchg
jb
in
or
je
mov
dec
insl
std
adc
movsb
jb
leave
adc
lods
aad
xlat
ret
or
dec
insl
cmp
test
jle
mov
mov
lds
popa
jbe,pt
insl
ret
mov
lret
and
jns
push
cli
add
add
dec
data16
inc
std
dec
inc
mov
mov
push
sbb
cmp
cli
push
xchg
adc
int3
dec
dec
mov
js
or
imul
imull
add
mov
dec
popf
dec
rorb
and
or
lret
cmp
and
cld
pop
daa
lds
leave
rcrl
insl
lods
jnp
mov
add
lret
mov
and
outsl
push
inc
jb
dec
imul
out
daa
repnz
mov
fistpl
nop
jno
add
push
push
dec
cmp
dec
or
out
dec
out
cmpsl
xchg
cmc
ret
rorb
rcrl
ds
loope
xchg
das
idiv
call
pop
fs
push
rorb
adc
popf
xor
cli
ficomps
mov
mov
add
test
in
stc
mov
jne
xor
in
inc
mov
aad
add
rcrb
cmp
imul
pop
hlt
dec
inc
xchg
adc
daa
imul
cmp
cmp
lock
lahf
cmp
mov
adc
std
add
cmp
cmpsl
addr16
and
int
icebp
jnp
adc
sarl
xlat
cmpsb
mov
repnz
or
hlt
xchg
aad
adc
or
fidivs
daa
sub
jb
dec
xchg
mov
outsl
inc
aam
jle
xchg
and
mov
pop
dec
mov
lahf
mov
jecxz
fwait
mov
jge
in
fwait
xchg
in
push
into
mov
popa
mov
add
jbe
out
cmp
outsl
ss
sub
sub
mov
fdivs
pop
lret
mov
mov
or
push
mov
adc
cmovbe
test
xchg
retw
lcall
das
or
lods
scas
fdivl
push
push
jnp
ja
mov
outsl
mov
pusha
or
xchg
push
pop
cmpsb
and
xor
sarl
xor
orl
sub
inc
sti
into
inc
mov
outsb
roll
in
ficoml
popa
xchg
mov
sahf
inc
sti
dec
sbb
loop
pop
push
cmp
fisubl
rorl
fcmovnu
add
insl
sub
shr
loope
fisubrl
sub
outsl
sbb
loopne
lret
mov
cmp
repz
adc
test
sub
cmc
rorb
jns
roll
stc
xor
xchg
push
xchg
pop
sub
mov
ret
pop
mov
fcom
push
jp
repnz
fisubl
out
dec
test
pop
loop
cmp
out
cmp
push
and
add
test
icebp
xor
sbb
imul
movsl
out
data16
push
cltd
sub
and
inc
rorb
add
popa
mov
repnz
cmpsb
sub
mov
in
daa
and
mov
es
mov
push
out
dec
mov
jbe
adc
push
jb
inc
mov
ret
xchg
fwait
mov
adc
aas
in
rcrl
mov
cmc
mov
add
popa
xchg
jns
test
test
stos
ljmp
xor
xchg
cmp
stos
cmp
or
shrb
std
add
fwait
push
lock
imul
inc
shrb
aam
or
scas
xchg
xor
cs
cmpb
add
sbb
stos
jp
sarl
dec
cmp
jmp
fsubrl
cs
add
stos
mov
or
aas
insl
xchg
into
sti
cli
mov
fdivr
xor
in
xor
push
lods
dec
je
scas
push
stos
pop
es
sub
ja
adc
xor
inc
ja
imul
jnp
nop
xorl
out
leave
cmp
ljmp
into
cmp
pushf
xor
ljmp
add
jne
bound
das
or
or
rorl
xchg
outsb
pop
add
js
xchg
cmpsb
sbb
arpl
xor
push
sbb
jo
xchg
jmp
out
insb
ds
shrb
pop
aam
push
sub
outsl
mov
arpl
sub
cmpl
je
add
or
cld
dec
jno
test
scas
add
cmc
pop
push
mov
leave
fistps
dec
xchg
rclb
movsb
movl
or
fsubrl
popa
lds
out
popf
pop
fsts
cmp
insb
repz
jg
mov
add
aam
insb
jle
addr16
add
jne
pop
pop
insb
outsb
stc
push
lods
xchg
jp
dec
popa
je
jne
js
push
ljmp
add
je
xor
fisubrs
push
ss
into
dec
aas
sbb
sbb
mov
rcrb
outsb
jo
movl
aaa
into
inc
xchg
jmp
test
es
ja
inc
jl,pt
pop
xlat
jmp
shll
or
ds
loopne
xchg
mov
sbb
add
inc
cltd
cwtl
mov
mov
pushf
ret
jge
lods
xchg
adc
mov
cmp
xor
daa
rolb
mov
in
hlt
adc
pop
sbb
or
mov
pop
cmp
fnstenv
mov
inc
sub
sbbb
mov
push
jne
loope
ljmp
icebp
filds
mov
mov
andb
out
jecxz
mov
repnz
xchg
cmp
fdiv
rcll
adc
push
add
push
push
jge
cmpsb
or
dec
jae
jmp
fs
lret
addl
loopne
nop
mov
add
jo
repz
sbb
cwtl
std
in
xorb
mov
and
lods
pop
push
cli
int
insl
mov
mov
arpl
and
jb
divl
mov
fs
clc
and
shl
dec
adcl
push
pop
shlb
pop
scas
cli
add
xor
mov
lods
inc
scas
arpl
push
out
pop
stc
mov
movsl
sahf
xchg
pop
test
scas
push
bound
es
cmp
mov
inc
add
imul
scas
addb
jno
lcall
cli
lods
adc
aas
mov
add
cld
mov
xchg
mov
lret
ret
inc
push
or
ja
pop
pop
and
icebp
fwait
dec
fsubr
xchg
xor
xor
jo
mov
scas
mov
inc
adc
inc
cs
es
idivb
xor
and
dec
repnz
icebp
dec
inc
int
out
cmp
push
push
imul
adc
mov
dec
and
cmc
sub
xchg
loope
jbe
mov
lods
adc
test
js
cld
inc
pop
cmpsl
and
out
fidivs
pushf
and
mov
in
je
rorb
mov
fldenv
mov
xlat
enter
fwait
cmp
add
push
pop
arpl
mov
mov
sbb
jns
xchg
leave
add
fwait
test
das
jl
xor
mov
aad
clc
ret
fstpt
jns
jge
adc
push
dec
inc
pop
enter
rcl
jl
aas
ljmp
dec
xor
pop
cwtl
push
icebp
dec
ret
js
jo
mov
xchg
xor
xchg
xor
test
lea
and
sti
mov
fnstcw
or
or
iret
dec
mov
fildll
in
out
lods
test
or
pop
sbb
xorb
mov
mov
fildl
fcoml
shld
push
movsb
cltd
push
loopne
pushl
mov
push
popa
mov
cmp
add
push
les
sahf
and
fwait
sbb
sbb
pop
in
outsb
call
mov
das
mov
data16
bound
dec
cmp
xor
dec
jecxz
xchg
xchg
daa
imul
pop
pop
lret
je
cmp
cld
adc
mov
daa
fcmovu
cmc
add
add
shlb
xchg
jmp
cmp
and
dec
ss
addr16
adc
fisttps
inc
dec
pop
mov
or
mov
cmp
pushf
xchg
xchg
repnz
pop
orw
scas
repz
xor
ja
mov
push
jge
mov
jae
xor
xor
int
ljmp
add
mov
jo
lods
in
adc
sbb
xchg
push
jg
xor
repnz
push
lret
jno
jle
sbb
cld
outsl
clc
or
test
adc
xor
and
aas
sbb
fs
loopne
jmp
and
je
movsb
pop
push
mov
cmp
fdivrl
sbb
xchg
lds
fwait
mov
ss
ret
ja
dec
fldt
jle
mov
clc
ret
mov
sbb
and
xor
cmp
jo
pushf
repnz
mov
mov
fstl
jmp
mov
addr16
mov
out
mov
in
cld
cmpsl
xor
fnstsw
fbld
sbb
dec
sar
repz
test
xchg
inc
adc
cwtl
lret
testb
pop
test
dec
pop
adc
fwait
mov
xorl
ficoml
out
and
fistpl
and
enter
mov
or
lea
shrb
loop
mov
into
push
addb
daa
xchg
jp
inc
mov
jae
aam
inc
mov
scas
out
cli
sbb
out
jp
mov
popf
add
adc
popf
fsub
and
js
lcall
push
sub
jmp
inc
insl
and
stc
orb
mov
inc
repz
or
jp
outsb
push
pusha
jle
jmp
xor
jns
subb
arpl
add
fiadds
pop
test
cmp
je
mov
pushf
xor
jno
cld
pop
jp
xchg
frstor
ret
mov
out
inc
ret
mov
enter
mov
lock
cmpsb
cld
mov
subl
enter
or
xchg
mov
imul
mov
inc
push
xchg
test
dec
inc
dec
mov
test
incl
push
push
fisubrs
sbb
lock
push
fsubrs
cltd
push
cmpsb
sbb
je
repnz
dec
and
add
mov
out
xor
repnz
push
call
pop
push
lea
sbb
int
daa
inc
mov
bound
out
movl
mov
pop
sahf
repz
movsb
push
imul
mov
mov
ss
mov
aaa
in
push
fld
pop
idivl
cmp
sub
insl
inc
aad
in
rcrl
popf
pop
cwtl
xor
jo
iret
pushf
ljmp
mulb
mov
sbb
pop
ljmp
xor
rcll
add
add
and
cltd
dec
pop
dec
sbb
into
sub
xchg
jl
sub
cmp
outsl
jmp
mov
test
mov
sbb
or
add
jg
cmpsb
inc
jnp
dec
mov
lcall
xor
sub
or
lret
adc
clc
jne
xchg
enter
lods
pop
into
mov
add
fistl
popa
inc
add
int3
lods
inc
std
addr16
sbb
dec
pop
cmp
in
cli
xor
inc
and
dec
ljmp
jle
push
push
xchg
dec
inc
pop
sub
sub
rcrb
add
dec
push
mov
xor
fcoms
cltd
test
mov
stos
mov
lret
lock
clc
adc
xchg
jmp
mov
mov
mov
cs
sub
rcll
xchg
jle
leave
cmc
lahf
pop
cmp
inc
pop
push
add
enter
push
push
sahf
mov
repz
xor
movsb
xchg
mov
int
inc
aad
cmpsb
mov
xchg
jl
std
fstps
int3
incl
lret
cmp
xor
inc
dec
or
cltd
loop
mov
ja
fists
xchg
test
mov
add
lock
aam
inc
push
aaa
dec
orb
and
push
inc
jmp
in
fisttps
mov
and
sbb
aas
pop
xor
xchg
scas
int
outsb
adc
pop
outsb
sarb
orl
das
cmpsl
in
call
push
push
fisttpll
in
js
xor
or
pop
pop
xchg
or
mov
mov
int
js
pop
cmp
jecxz
sbb
loope
std
in
lods
jb
lret
push
fidivs
fwait
and
dec
adc
pop
inc
jnp
and
sub
mov
sahf
addb
xchg
fwait
stc
sub
jno
sar
ja
cli
gs
clc
fcomps
ss
xorb
add
fildl
outsl
sahf
in
jecxz
shrd
movsl
out
xchg
repnz
scas
out
repz
pop
pop
push
sub
xchg
loop
outsb
sarl
rcrl
addr16
pop
xchg
jmp
mov
push
repnz
ret
scas
sub
outsl
aad
scas
xchg
outsl
sub
add
add
adc
push
mov
xchg
sub
fstpt
pop
inc
and
mov
lods
lahf
data16
out
dec
fwait
sbb
pop
push
dec
dec
fdivs
adcb
xchg
push
js
movsl
push
sbb
sbb
rolb
jge
pop
dec
jl
pushf
ljmp
inc
cli
xchg
int3
cs
jo
je
stos
outsb
dec
aaa
vmovaps
xchg
movsb
aaa
ret
out
pop
mov
jmp
orb
mov
mov
jmp
inc
dec
lock
test
loopne
and
adc
in
mov
mov
mov
push
gs
and
mov
ret
xor
sub
out
into
inc
dec
or
nop
int
jne
clc
shl
insl
sbb
cmpsl
cmp
lods
into
rorl
leave
stos
jp
push
es
lahf
aas
dec
adc
repz
mov
cld
add
pop
mov
cmp
pop
cmpsl
shll
gs
enter
pop
pop
add
ss
push
leave
add
inc
or
cvtdq2ps
or
mov
bound
mov
test
ficoms
jecxz
jns
hlt
test
into
jecxz
cld
lea
dec
pop
dec
push
stos
cmp
pop
push
dec
pop
aas
popf
sbb
push
push
pop
jo
jmp
inc
jmp
xor
push
push
shl
push
sub
mov
push
mov
fdivp
fildll
mov
and
fsub
cltd
pop
testl
shrb
xchg
mov
xchg
sub
lock
jmp
test
add
out
push
add
stos
fsubrs
cmp
mov
xor
cmp
xchg
cmp
pop
je
outsb
pop
fidivrl
mov
and
popf
adc
inc
loopne
mov
ja
stos
adc
shll
mov
sub
inc
push
popa
jb
inc
or
stos
mov
fisubrl
mov
inc
add
xchg
or
mov
ret
push
jo
or
lret
out
fstps
gs
xchg
test
and
sub
cltd
jnp
mov
cld
imul
adc
jmp
aad
fiaddl
push
push
push
mov
cld
lods
mov
test
ss
push
mov
popa
xchg
xchg
loopne
jecxz
jl
cmpsb
cmp
enter
pop
and
pop
sahf
mov
mov
sbb
inc
jg
cli
daa
movsb
cli
jne
pop
mov
sbb
jo
xor
mov
in
lahf
dec
out
and
or
push
sub
ret
inc
jne
cltd
fsubrp
adc
jns
dec
sub
pop
lods
cmp
cmp
std
mov
push
cltd
dec
pop
aad
ljmp
popa
insl
jb
mov
mov
popa
daa
jb
lea
loopne
cli
push
jbe
and
enter
inc
jl
leave
fwait
lea
test
pop
xchg
lret
dec
dec
mov
mov
test
mov
cmp
imul
fildll
jecxz
lds
popa
add
movsb
inc
add
mov
and
enter
or
xor
add
cltd
ljmp
sbb
lock
inc
inc
mov
aad
pop
pop
cltd
dec
push
inc
into
gs
insb
adc
cwtl
lret
mov
xchg
pop
inc
pop
enter
inc
imul
xchg
xor
mov
stc
pop
icebp
jecxz
divl
popa
cli
out
mov
test
pop
mov
ret
stc
mov
mov
jbe
lret
xchg
shll
lds
push
ficoms
pop
dec
pop
add
shll
dec
sub
jge
shll
sbb
add
mov
rolb
xor
loope
aaa
xchg
pop
fildl
mov
into
insl
jle
xchg
push
in
sub
cmp
test
inc
aas
loope
inc
ret
daa
and
xchg
mov
int3
sarl
jae
sub
and
inc
arpl
subb
inc
shr
cmp
and
and
jmp
fiadds
dec
lahf
test
cmpsb
out
mov
push
arpl
xor
mov
into
nop
mov
xchg
mov
stc
xchg
mov
scas
call
enter
rcll
fiadds
out
inc
pop
sti
cmp
loopne
lds
sbbb
lods
jbe
push
cmp
imul
jge
pop
rorl
dec
xor
fldcw
es
push
mov
outsb
dec
ljmp
jo
lea
sahf
shlb
arpl
xor
mov
and
fldl
mov
push
out
es
push
call
idiv
mov
fldt
cmp
inc
lret
mov
dec
lahf
push
fildl
mov
mov
jl
loopne
sbb
lods
mov
rolb
mov
lret
stos
mov
repnz
mov
cmp
imul
jecxz
cs
imul
jmp
scas
mov
xor
mov
dec
stos
push
pop
incl
sarb
jp
data16
mov
sub
in
add
inc
lret
mov
aam
push
imul
pop
mov
movsb
in
or
es
scas
mov
jno
mov
mov
sbb
or
xlat
mov
cmp
or
jp
rcl
clc
pop
push
shl
cmp
pushf
inc
int3
pop
mov
jne
clc
push
mov
push
dec
dec
into
lds
pop
cmp
ss
push
in
and
push
fcom
sub
jb
icebp
add
pextrw
pop
adc
xchg
into
dec
movsb
mov
pusha
add
mov
adc
inc
loopne
mov
test
fwait
mov
adc
fildl
out
or
mov
sbb
mov
mov
inc
jne
jb
cmp
sbb
xchg
xchg
adc
in
loope
adc
and
shlb
inc
cmp
or
mov
sub
imul
stc
mov
jecxz
sti
pop
xchg
lods
or
adc
aad
inc
addr16
cmpsb
pop
pop
add
mov
or
cmpsl
xlat
sbb
ss
jp
xor
jne
pop
dec
clc
notl
imul
ljmp
into
aaa
sahf
enter
sahf
dec
sub
mov
arpl
in
aas
movb
jo
das
or
rorl
push
push
in
addr16
sbb
sub
xchg
add
arpl
or
mov
aad
mov
divb
xchg
rcr
ds
movups
xchg
cmpsb
and
popf
rcl
call
out
orl
and
and
mov
repnz
shrb
aam
adc
mov
add
loope
insb
aas
sti
mov
pop
cmp
sub
mov
es
jmp
xor
inc
xor
mov
enter
ret
cmp
adc
dec
xchg
ljmp
sub
in
cmpsl
movsl
movsb
inc
in
fwait
lock
inc
dec
jo
nop
test
adc
stc
popf
ljmp
data16
mov
push
out
daa
pop
das
mov
jae
cld
mov
dec
push
call
mov
repz
xchg
test
out
fdiv
jg
adc
pop
push
movsl
lods
xor
shlb
adc
add
test
loop
fnstcw
pop
jo
adc
mov
mov
pop
and
inc
cltd
mov
or
jne
lock
sub
pop
xchg
rorl
mov
in
push
lahf
sti
push
ja
fucomi
mov
das
fwait
repnz
ds
mov
dec
adc
enter
xchg
sbb
xchg
sub
insl
push
sub
push
sub
sahf
push
andnps
les
mov
sub
cmp
lahf
aam
not
fdiv
outsb
loopne
cmp
mov
sub
mov
xor
fsubp
lock
int
xchg
lock
xchg
mov
adc
jl
jmp
mov
fnstcw
xor
cmpsb
or
aas
lret
mov
xchg
push
in
xchg
push
pop
roll
cmc
mov
xor
lods
xchg
mov
mov
sbb
cld
push
and
arpl
add
sub
pop
or
gs
aas
mov
daa
mov
xchg
xor
dec
fidivrl
sub
push
inc
add
lcall
push
stos
sbb
cltd
and
jo
ja
pop
or
pushf
and
stc
adc
add
movsb
xchg
mov
add
cmp
in
xor
or
dec
jnp
lds
repnz
pop
lock
add
repnz
loop
push
xchg
cmpsl
jns
cli
imul
xor
aas
xchg
inc
ret
push
mov
dec
cmp
mov
pushf
mov
iret
test
out
arpl
cvtps2pd
inc
mov
mov
icebp
push
loop
push
mov
add
push
lret
test
test
imul
add
jg
mov
or
sub
jb
cmp
add
jbe
jbe
fs
inc
jecxz
sahf
mov
push
pop
cmp
mov
and
stc
enter
push
push
or
arpl
lcall
jp
sbb
ret
fld
dec
xor
sahf
loopne
js
fimuls
add
pushl
push
inc
std
mov
outsb
dec
jo
adc
mov
mov
outsl
lcall
rclb
jne
cs
stos
mov
push
add
popa
nop
fwait
adc
mov
adc
mov
enter
inc
push
retw
pop
mov
mov
mov
outsb
mov
negb
pushf
fwait
sub
outsl
mov
and
adc
rorl
dec
mov
cmp
lods
je
in
js
jno
cmc
movsl
lcall
sub
andl
sub
add
fsubs
mov
in
addr16
clc
fistps
loope
mov
addr16
out
jnp
add
subl
mov
cmp
jecxz
sub
mov
jmp
xchg
in
jle
jg
lahf
fldt
jg
repz
test
jo
jae
filds
jbe
mov
xor
push
add
pop
loopne
outsb
cld
icebp
jmp
icebp
inc
lods
in
xor
mov
dec
inc
je
ja
jle
ss
call
sub
hlt
mov
mov
hlt
mov
sub
sub
sbb
inc
lret
addb
inc
or
xchg
dec
in
xchg
repnz
jg
xlat
adc
in
xor
lods
rcr
add
dec
into
fildl
dec
and
push
in
sub
xlat
sahf
repnz
cmp
shrl
call
xor
imul
je
pop
in
cltd
xchg
adc
xchg
sahf
je
or
mov
xchg
out
cli
pop
ja
shll
add
cmp
sbb
pusha
pop
pop
sub
sbb
les
cmp
mov
jle
add
das
or
test
sbb
lret
add
lret
fbld
fstl
mov
cmp
xchg
mov
jns
adc
insl
mov
fmull
jge
loop
xchg
inc
push
rolb
sub
out
cmp
pop
movsl
ja
mov
ret
fs
stc
shll
sub
push
gs
out
jae
cmc
jo
sahf
pop
test
dec
push
lea
pop
imul
mov
or
addb
pop
sub
int3
mov
jbe
pop
mov
pop
sub
sbb
add
ficoms
leave
pushf
loope
add
cmc
in
jmp
adc
in
push
lods
mov
cmp
jl
push
cwtl
mov
lea
movsl
loop
sbb
xor
pop
aad
cmpsl
xlat
jo
pusha
popa
stc
pop
mov
inc
push
insb
test
mov
std
pusha
ljmp
insl
mov
jae
aam
xchg
mov
adc
sub
arpl
pop
sub
lods
std
cwtl
shll
cmpsb
mov
push
and
pop
adc
lock
add
jo
jae
pop
fstpt
pop
std
adc
out
mov
scas
mov
ret
imul
mov
mov
lods
ficoml
xchg
aaa
std
inc
stos
and
dec
icebp
push
cmp
xor
mov
pop
pop
shrb
add
mov
divl
lea
pop
cs
shlb
aad
dec
xor
xor
in
pop
dec
push
fcompl
mov
fdivp
pop
xchg
push
push
lods
mov
sub
cwtl
loope
ss
mov
jge
push
mov
gs
negb
lahf
mov
cmp
inc
and
dec
imul
push
repz
jns
jg
cltd
loop
mov
repz
mov
in
mov
sbb
mov
push
aad
xor
xchg
add
inc
pusha
call
xchg
dec
aas
inc
push
mov
addb
outsb
sbb
imul
cmp
inc
lods
sub
jbe
mov
out
jbe
xchg
int3
mov
xchg
mov
popf
cli
xchg
lret
mov
mov
push
pop
ret
add
xchg
adc
jg
icebp
stos
mov
pop
jl
pop
add
in
test
jb
sub
into
ds
mov
dec
std
shr
bound
cmp
mov
das
push
pop
inc
jne
into
jae
sbb
and
aad
adc
push
dec
aas
es
mov
mov
in
jnp
and
jne
loop
cmp
xchg
xor
push
cmpsl
ja
add
mov
cld
popf
xchg
xor
fistps
xor
cli
push
pop
adc
cmc
pop
mov
jb
push
sub
lret
pop
cmc
lret
pop
xchg
xchg
fadd
mov
mov
mov
ljmp
loopne
and
fsub
and
jecxz
jbe
mov
gs
sbb
cmp
bound
ret
mov
cmpsb
mov
leave
xchg
fwait
push
pop
in
adc
out
add
aam
dec
repz
sbb
in
sub
push
lahf
xchg
mov
or
mov
push
xchg
out
inc
enter
pop
pop
xchg
cli
aas
push
add
sub
mul
test
xchg
hlt
or
in
xlat
lods
div
mov
mov
fldcw
xor
add
jne
dec
inc
repnz
mov
mov
xor
rclb
icebp
test
push
sahf
mov
dec
xchg
xchg
outsb
jb
int
cs
ret
iret
jmp
push
sbb
push
addr16
sub
mov
mov
faddl
cwtl
xor
pop
sarb
mov
frstor
mov
or
je
out
add
add
loope
sbb
scas
or
mov
gs
in
insb
fdivrl
pop
mov
mov
ss
hlt
pop
std
fs
clc
inc
nop
push
ss
adc
std
in
stc
push
leave
jae
jp,pn
popa
scas
inc
add
mov
cmp
adc
dec
testb
movsl
mov
hlt
push
andb
jmp
mov
jno
jbe
pusha
sbb
fldl
sub
loop
imul
adc
daa
imull
mov
mov
das
mov
in
out
and
add
orb
les
lods
fnstsw
jle
sbb
dec
mov
mov
push
jl
jmp
xchg
outsb
jno
lds
lods
jnp
out
clc
cmpsb
xor
sbb
mov
rcrb
xorl
movd
pusha
das
adc
sub
emms
loope
xor
outsl
push
mov
in
push
scas
shll
cmpsl
arpl
lcall
filds
sub
in
movsl
mov
call
push
mov
push
jae
mov
cmp
lcall
outsb
sub
loope
aas
repnz
lock
cmp
jae
push
cmp
cs
or
mov
fs
aad
or
push
fbstp
xlat
loopne
imul
call
mov
push
xor
das
in
lcall
roll
mov
push
daa
add
ja
inc
mov
mov
pop
imul
inc
loope
sti
sahf
jae
mov
pop
loope
hlt
fs
testb
or
addr16
stc
dec
fs
nop
insb
imul
dec
mov
cmp
in
mov
shlb
jns
lods
sbb
xor
dec
das
je
test
mov
decb
xor
jecxz
xlat
inc
jnp
cmp
inc
push
push
mov
icebp
jbe
pop
test
mov
xchg
push
setno
lret
cli
mov
inc
cwtl
mov
inc
inc
sbb
not
out
cmp
fxch
mov
inc
lods
push
lahf
ja
mov
je
sub
into
cmc
in
inc
test
gs
mov
lea
xor
popf
aas
pop
sbb
push
hlt
sbb
dec
insl
pop
ja
bound
imul
arpl
inc
cltd
jbe
mov
fsubr
addb
adc
dec
bound
jmp
mov
mull
xor
dec
jne
orl
and
jge
xchg
push
mov
jns
push
push
out
push
into
xchg
and
jnp
andb
iret
idiv
pusha
pop
flds
xor
xor
pop
int3
in
sbb
cmpsl
push
jecxz
mov
in
ja
mov
es
dec
cmpsl
or
cltd
out
es
data16
mov
mov
nop
mov
sbb
cmpsl
xor
sub
pop
dec
sbb
std
push
jne
orl
in
inc
jns
xchg
lcall
adc
mov
mov
adc
mov
dec
stos
sbb
popf
int3
out
adc
cmp
push
out
pusha
scas
push
xor
jmp
cmp
mov
popa
push
movsb
stos
sbbb
test
sbb
inc
mov
cltd
mov
pop
out
dec
xor
lret
test
and
incb
mov
popf
inc
or
sahf
adc
cmp
adc
sahf
cmp
stc
jae
or
fs
int3
ds
cld
test
xchg
in
aaa
pop
dec
addr16
push
mov
insl
scas
xlat
pop
add
sahf
lods
imulb
cmpsl
pop
jmp
aad
ss
push
push
shrl
pop
test
dec
lds
mov
xchg
jmp
std
mov
roll
outsl
mov
test
js
sub
fidivs
mov
cmp
scas
mov
fimull
jae
js
ret
js
insb
daa
adc
xor
add
sub
fidivs
fwait
mov
std
js
aad
xor
jnp
popa
add
pusha
mov
mov
sbb
xor
test
push
or
xor
push
and
fadd
insl
sbb
test
sahf
adc
push
into
iret
adc
mov
popa
jecxz
pop
ret
xor
add
mov
xchg
xor
test
mov
je
mov
mov
adc
mov
push
fs
cmp
jecxz
inc
cmpsb
push
mov
cmc
inc
aas
xor
xchg
nop
jnp
lock
pop
mov
mov
mov
cli
dec
subb
and
dec
sarb
fs
out
lods
in
and
mulb
xchg
jmp
popf
lods
sub
dec
mov
clc
out
dec
into
adc
cmpsl
adc
rcl
xor
mov
outsl
test
mov
xchg
leave
dec
pop
sbb
js
fstps
cmp
inc
int
sbb
jae
ljmp
push
js
fnstcw
add
cld
lea
addr16
dec
jno
pop
add
cs
xchg
ret
dec
negl
or
mov
jb
inc
mov
mov
dec
and
cmpsb
inc
add
aad
jns
fdivl
cmp
add
stc
lret
dec
and
mov
cmpsl
fs
test
mov
jb
js
pop
xlat
in
lods
std
test
xchg
sub
test
inc
jns
xchg
pop
call
notb
subl
jb
push
or
push
outsb
mov
jne
xchg
inc
sbb
mov
mov
cs
inc
xor
xor
xlat
push
push
or
test
std
or
or
stc
in
stos
movsb
icebp
outsb
lock
dec
xor
stos
js
mov
in
lahf
fcomi
pop
imul
lret
xchg
push
xor
aam
dec
dec
jecxz
icebp
mov
ficoml
jbe
lahf
cmpsb
cli
or
sub
mov
je
and
add
or
jl
fsubrs
test
dec
jmp
jge
into
mov
xor
test
adc
out
fisttps
aaa
dec
jl
cmp
scas
sti
xlat
mov
xchg
scas
xchg
pop
stos
cmp
shrl
in
or
into
adc
pop
gs
jecxz
mov
jecxz
cld
ret
push
stc
arpl
aaa
shrb
out
adc
jno
jae
cmc
mov
ds
test
insl
fstpl
imul
aas
pop
adc
dec
jp
push
mov
ds
sbb
inc
dec
cmp
test
ljmp
mov
js
push
pop
int
jge
cmp
mov
cmp
inc
push
sub
jae
cwtl
jge
mov
mov
pop
scas
imul
roll
xor
movsb
sbb
cmp
dec
and
inc
mov
dec
fwait
dec
mov
mov
cli
pop
std
insl
cli
dec
mull
aad
jmp
jge
hlt
lea
or
add
push
stc
stos
mov
push
xchg
lahf
xchg
inc
xchg
adc
stc
jns
jl
cmpsl
adc
or
mov
pushf
insb
mov
js
aam
add
adc
inc
rcrl
and
xor
lods
repz
sub
shll
into
adc
dec
shrb
adc
hlt
imul
pop
push
jno
scas
in
adc
lret
bound
lahf
icebp
dec
enter
push
mov
or
push
inc
push
cmp
sbb
pop
rcrl
movsl
shrl
push
mov
mov
mov
sub
cmovo
mov
lahf
adc
jmp
lahf
or
je
lds
and
mov
jg
inc
icebp
out
mov
push
mov
push
enter
popf
cwtl
lcall
loope
or
dec
xchg
add
pusha
sbb
mov
movsb
dec
xlat
xchg
inc
out
cli
popf
fcompl
mov
lcall
xchg
stos
lock
fiadds
js
push
cld
jecxz
cmp
cmpsl
pop
or
popa
sub
jns
aam
sub
mov
and
or
faddl
int3
lock
sbb
jnp
incl
xlat
sbb
mov
lock
jb
xorl
out
mov
push
push
mov
jb
hlt
insl
sbb
xor
lret
or
sbb
mov
sahf
loopne
scas
xchg
adc
inc
and
dec
iret
repz
mov
lea
mov
xchg
add
push
mov
dec
gs
push
mov
aad
lahf
pop
mov
test
movsl
pop
push
cmpsb
lret
dec
js
int
push
out
inc
dec
bound
mov
fisttpl
fcomps
inc
and
aam
outsb
jle
aam
and
subb
jg
test
mov
call
pop
insb
xchg
mov
aam
shll
push
insl
lods
stos
cwtl
fcmovne
mov
sarl
inc
rorb
push
push
ljmp
outsb
cmc
sbb
push
pop
fiadds
mov
dec
sub
leave
add
pop
jnp
jno
gs
pop
jp
add
cmp
nop
and
pop
mov
scas
les
sbb
inc
mov
dec
repnz
pop
mov
imull
and
inc
mov
push
cmp
lret
mov
dec
adc
sbb
mov
adc
out
mov
lahf
adc
push
mov
mov
xchg
daa
cmp
mov
sub
sbb
inc
ss
lds
xlat
fidivrl
in
mov
mov
movsl
cmp
pop
dec
inc
inc
push
pop
out
in
inc
push
leave
ret
fstps
fiadds
pop
xor
lcall
adc
mov
leave
mov
sub
lahf
push
popf
cld
sbb
fcoms
stc
sub
loop
leave
pop
jbe
adc
cmp
lcall
mov
xor
movsl
insb
push
fs
mov
adc
shlb
mov
cld
movsl
clc
ja
cli
fistps
inc
xchg
in
scas
mov
les
iret
clc
pop
daa
dec
jb
fadd
aad
leave
sub
sbb
xchg
daa
sub
jl
insb
pusha
nop
jns
cmp
jno
out
sarl
mov
sbb
cmp
pop
dec
orb
les
lods
roll
cmp
pop
mov
mov
sbb
call
int
push
arpl
dec
sub
movb
cmp
in
dec
inc
cmpsb
ret
ss
sub
sbb
or
rcll
pop
dec
mov
aaa
ljmp
sub
pop
push
push
scas
pop
dec
add
push
and
jo
insb
shlb
loop
add
ja
dec
push
pusha
jbe
dec
fwait
gs
iret
pop
and
pusha
pop
scas
movsb
mov
insl
xchg
sti
imul
ficompl
cmpsl
add
dec
decb
pop
xor
mov
jno
jae
mov
add
mov
adc
ljmp
es
daa
mov
stos
ffreep
or
mov
sbb
jp
aam
pop
ss
inc
dec
lods
popf
outsw
and
nop
cmp
lret
out
mov
cmc
mov
insb
inc
test
loop
fsubrl
stos
jb
nop
rolb
outsl
dec
mov
lret
inc
xchg
mov
loop
adcl
or
jl
xlat
test
fisubrs
mov
mov
loopne
inc
insl
jnp
mov
in
mov
push
pop
and
cli
pop
xchg
xor
mov
cmp
cmpsl
mov
sub
ljmp
aas
dec
jmp
adcl
pop
pop
jo
mov
test
in
xor
sbb
jmp
pop
fs
or
rol
xchg
push
out
adc
je
sub
xchg
bound
pusha
rol
loope
dec
mov
mov
fisttpll
add
lds
mov
inc
or
mov
sub
add
ror
adc
xor
outsb
insl
mov
jl
adc
xchg
and
inc
mov
mov
aas
adc
pop
pop
add
das
add
jle
or
clc
mov
sbb
fnsave
jle
pop
lret
scas
ret
push
sbb
add
inc
pop
mov
sub
add
divb
sbb
js
outsb
pop
fwait
lods
xor
ljmp
fimull
loopne
movsl
push
clc
mov
sub
mov
cmp
rcrl
lahf
in
std
dec
andb
fwait
fwait
insb
jge
xchg
enter
push
push
xchg
je
mov
icebp
das
loopne
jno
loopne
push
jbe
int3
push
repnz
daa
test
mov
iret
add
push
push
inc
add
mov
arpl
jp
cmp
arpl
fmuls
sarb
jno
repz
mov
jl
cmp
lock
and
cwtl
mov
mov
jnp
xor
cmp
ret
mov
icebp
rcrb
mov
cld
push
mov
jbe
xchg
lods
inc
sbb
iret
les
iret
jge
sti
adc
pushw
and
pop
pusha
sbb
cmpsb
orl
xchg
pop
adc
mov
sarl
mov
aaa
ljmp
mov
int
xchg
iret
fsubrl
repnz
or
inc
sbbb
stos
mov
test
in
arpl
ljmpw
lcall
in
cmp
inc
sbb
lods
outsb
imul
lds
push
inc
pop
push
lret
mov
data16
roll
push
sub
lds
or
test
imul
aam
stos
rcrl
leave
inc
mov
int
test
outsb
das
push
push
mov
adc
nop
mov
xorb
pop
jmp
pop
data16
cmp
jmp
mov
ss
xchg
cmp
lods
cmp
pop
or
std
xor
aad
jo
daa
loopne
inc
cs
cmc
aad
insb
xor
stc
aam
and
inc
xorl
arpl
mov
lret
imull
inc
lret
or
mov
shll
push
test
cmp
add
mov
jle
out
dec
sti
cmpsb
icebp
xchg
sbb
xchg
mov
fdivrs
cmp
je
pop
movsb
jp
pusha
mov
shlb
inc
and
push
push
in
jmp
mov
sub
mov
ret
xchg
ljmp
aaa
and
push
int
loop
aas
fadd
dec
mov
xchg
leave
out
sub
rcrl
lods
in
add
mov
lcall
sub
adc
sbb
inc
cwtl
mov
das
shlb
sbb
pushf
sti
sub
jne
inc
stos
test
jbe
das
rclb
xor
dec
xor
sahf
pop
clc
inc
jo
push
xchg
jle
cmpsl
addr16
int
cmp
mov
jb
dec
aam
icebp
pop
out
or
out
mov
test
dec
iret
sub
mov
fldl
lret
mov
sahf
test
loopne
mov
push
xor
cmpl
call
les
mov
sub
xchg
mov
lea
loopne
aaa
ret
ljmp
lret
lret
jle
mov
in
ror
ja
add
xor
sub
add
jp
or
dec
mov
lret
jl
int3
inc
outsw
cmc
pop
cmp
mov
xchg
inc
test
fisttpl
push
lds
jne
xchg
xor
lods
xor
enter
lret
xchg
xor
fstl
fdivl
repz
sar
jbe
push
es
daa
push
sub
mov
jp
and
mov
pop
iret
fbstp
mov
xchg
clc
push
adc
mov
cli
push
fsubl
inc
lds
ret
xchg
vaddsubps
jo
outsl
cmp
imul
cmp
push
test
cmp
int
ljmp
adc
test
cmp
dec
xor
pop
mov
fbld
and
inc
nop
fadds
push
pop
mov
movsl
pushl
sbb
or
fdivs
jl
jo
mov
cwtl
lods
add
out
adcl
sub
mov
movsl
movsl
inc
jne
mov
mov
scas
xor
int
jg
repnz
out
jge
into
inc
icebp
mov
hlt
mov
mov
mov
sar
dec
mov
xor
push
mov
cmp
mov
sahf
into
pop
fisttpl
mov
lcall
mov
mov
repz
jb
jb
ret
jle
fs
dec
jnp
jbe
pop
xlat
xchg
ds
mov
call
xor
ret
scas
hlt
arpl
pop
sbb
inc
push
push
dec
mov
test
or
faddp
pushf
sbb
mov
pop
fists
cwtl
pop
sbb
fdivrs
fadds
sahf
xchg
mul
xchg
lret
mov
pop
inc
sub
cs
xchg
pop
divb
scas
pop
imul
daa
ret
sbb
adc
push
mov
call
mov
leave
lret
out
inc
pop
and
or
mov
enter
shrd
xchg
lds
insl
out
jnp
div
cmp
popa
mov
mov
mov
mov
in
je
sub
out
andl
ret
xchg
daa
jno
loopne
adc
popa
aad
test
push
push
inc
cwtl
into
loopne
out
es
repz
lds
aad
hlt
mov
int3
pop
dec
outsb
fidivl
in
pop
sub
sbb
xchg
push
jg
jp
shrb
arpl
add
nop
rorb
mov
sbb
mov
lods
test
sbb
inc
xor
push
inc
std
iret
add
xchg
hlt
adc
rolb
and
pop
aad
xorb
pop
je
sub
aam
jbe
mov
push
pop
push
sar
inc
sub
repz
xor
cmp
dec
push
pushf
jl
punpckhbw
loope
push
jmp
sbb
aaa
mov
in
in
add
cmpsb
xor
cltd
jecxz
rcll
pop
adc
rcll
ret
into
mov
jg
pop
paddusb
pop
lods
mov
cmp
or
lret
xlat
fsts
int
dec
or
mov
xchg
sti
pop
loop
ds
nop
divl
fistpl
xchg
sbb
xchg
mov
dec
xor
mov
test
sub
lock
sub
sbbl
test
push
push
andb
fdivl
dec
out
aam
je
mov
mov
jae
jge
push
pop
pusha
movl
js
sbb
outsb
inc
push
mov
push
or
je
cmp
jnp
aas
ror
pop
icebp
mov
mov
dec
inc
xchg
fdivrp
lret
add
test
orl
or
jns
sub
push
inc
and
pop
pop
inc
sbb
ja
in
aaa
mov
shl
sbb
jp
mov
lret
jmp
jnp
cmpsb
lods
and
or
pusha
nop
shlb
mov
xchg
mov
mov
rcr
jbe
outsb
sub
adc
adc
mov
sub
movsb
push
dec
mov
test
aad
imul
scas
roll
es
push
lods
xchg
jno
mov
leave
add
repz
inc
ret
dec
insl
mov
ret
jo
mov
mov
cmpsl
add
out
xchg
ficoml
push
sbb
lret
and
scas
jnp
jmp
test
int3
mov
cmc
imul
and
ret
popf
jge
pop
mov
es
or
jmp
cli
popl
pcmpgtd
scas
les
cmp
icebp
daa
mov
mov
sub
xchg
mov
ret
push
subl
test
dec
xor
mov
std
cli
insb
xchg
stos
mov
pop
aaa
in
mov
pusha
and
add
iret
xor
or
cmp
rorl
xor
xor
insb
movsl
cwtl
dec
mov
or
aas
test
iret
mov
push
je
mov
add
ficomps
mov
int3
popf
cmp
push
or
mov
inc
and
out
mov
negl
in
xor
mov
and
inc
mov
push
mov
popf
xchg
neg
mov
mov
mov
cmpsb
xor
adc
jnp
out
insb
xchg
cmp
adcl
fsubs
adc
push
mov
aas
adc
jg
and
jge
cwtl
xchg
add
into
jb
iret
into
cs
mov
push
cmp
in
bound
jge
call
int
pop
push
cmp
scas
test
xchg
cmp
push
mov
or
add
and
xor
xor
mov
sbb
xchg
out
and
add
mov
sbb
testb
daa
mov
fiadds
int3
cld
jl
ds
das
adc
mov
push
jnp
inc
or
roll
mov
decl
mov
mov
test
xchg
jno
orb
adcb
jg
sub
push
int3
pop
mov
ret
xchg
outsb
or
test
cmp
std
and
stos
and
pop
pop
or
mov
pusha
mov
jno
ret
out
fsubs
scas
rorb
and
jmp
push
sbb
inc
fldcw
add
xchg
mov
mov
loopne
fmuls
or
xchg
aad
push
mov
jns
daa
cmpsl
cltd
cli
xor
xor
sbb
sbb
sti
fmuls
xchg
aad
lret
fisttpll
clc
outsb
pop
hlt
dec
outsb
pop
insl
iret
outsl
push
lret
dec
or
arpl
out
imul
dec
mov
fnstsw
add
or
add
xchg
repz
lds
mov
dec
in
pop
push
shll
icebp
fistpll
les
sbb
or
test
xor
cld
pop
test
aad
cmp
shll
int3
cmp
pop
mov
popf
icebp
push
mov
fistl
out
or
cld
in
test
fwait
gs
jle
clc
je
lret
pop
pop
xchg
dec
sbb
push
jle
std
sarb
popf
mov
jne
lods
stc
lcall
jl
xchg
mov
xor
movsb
loope
xchg
or
daa
xchg
push
inc
cmp
dec
es
jmp
jle
nop
or
xor
lock
push
stc
dec
outsl
dec
xchg
pop
rorl
jae
lods
xor
repz
or
dec
adcl
pop
jnp
mov
imul
lock
gs
sbb
xchg
push
dec
test
xchg
jg
in
ret
push
cld
xchg
push
jno
inc
fadd
test
fidivl
popf
mov
adc
data16
cmp
data16
das
js
and
out
mov
jge
ror
stos
lds
pop
xorb
mov
fs
pusha
mov
call
xchg
push
mov
enter
icebp
leave
sbb
adc
arpl
cmp
ja
cltd
fidivl
sbb
mov
mov
push
ret
rcrl
in
pop
jns
cwtl
xchg
scas
mov
jbe
and
orl
pop
outsb
rol
jl
xor
iret
hlt
in
iret
aad
jo
jge
xchg
adc
push
insb
fcoml
cltd
in
jo
mov
cli
push
dec
mov
or
inc
inc
mov
es
mull
cmp
jp
cmc
xrelease
dec
inc
xchg
mov
imul
ljmp
sbb
mov
inc
sbb
scas
lock
test
sbb
xchg
mov
pop
pop
adc
clc
dec
sbb
ds
adc
mulb
jge
into
sbb
sub
movsb
adc
xchg
std
inc
divb
insb
cmpsb
push
cmp
sbb
dec
dec
push
xor
dec
iret
cmp
push
dec
shl
in
mov
fnsave
mov
enter
mov
fs
mov
aas
je
jl
sti
sbb
icebp
pop
cmp
add
subl
dec
shl
enter
addr16
sub
pop
inc
jecxz
shl
pcmpeqd
aaa
dec
mov
sbb
cmpsl
daa
enter
lods
das
cs
jg
incb
enter
mov
pusha
aam
cmc
imul
div
cmp
data16
outsl
pop
push
and
js
or
mov
jg
and
cmpsl
sub
pop
rclb
sub
pusha
cs
mov
dec
leave
shll
add
lods
push
lret
orb
cmp
push
xor
push
mov
notl
xchg
jns
ret
cld
sub
inc
jbe
pop
repnz
popa
test
add
cwtl
insb
idivl
addb
les
hlt
sub
sub
xor
stc
ds
imul
push
jnp
jle
jmp
adc
shrb
xchg
push
inc
push
call
xor
adc
mov
andb
inc
add
sub
testl
mov
dec
shrl
cmp
nop
mov
inc
mov
add
jp
jo
push
fistpl
gs
add
pop
inc
fidivrs
sub
lea
lods
add
mov
pop
pop
movsl
mov
mov
adc
add
inc
test
and
mov
lcall
push
notb
push
mov
inc
cmpsb
mov
jnp
jae
mov
loope
hlt
xor
test
out
sub
inc
sbb
or
outsl
mov
sti
push
loop
lret
dec
ja
mov
hlt
test
leave
out
mov
inc
rorl
fbld
xor
test
mov
sbb
in
dec
sub
jp
jge
xchg
dec
push
ret
outsl
dec
frstor
rolb
std
mov
je
pop
jle
fldcw
mov
inc
mov
add
jnp
repz
rol
fs
lret
lret
loope
and
rorl
mov
pop
fisubrs
es
fwait
movsb
testl
mov
jae
cs
aaa
or
pop
ds
pushf
into
clc
inc
leave
mov
and
add
aaa
mov
jmp
mov
fimuls
lods
in
xor
dec
cmc
or
mov
ret
sub
test
fisubrs
inc
mov
scas
push
loopne
mov
cld
sbb
in
jo
lahf
sbb
cmp
fs
hlt
es
cmp
pop
jg
imul
add
imul
mov
push
imul
push
mov
jae
sbb
sti
or
add
daa
cld
add
data16
push
add
shll
push
test
nop
sbb
cmp
mov
stc
xor
mov
decl
adc
inc
and
and
test
clc
popa
and
dec
repnz
inc
cmpsb
push
add
mul
inc
mov
push
int
repnz
mov
lcall
shlb
lret
clc
daa
xor
les
lcall
cmp
lahf
and
pop
mov
out
jl
push
cmp
in
int
rcll
mov
clc
pop
andl
sbb
and
pop
fsubs
arpl
dec
js
mov
adc
aad
out
mov
test
add
sbb
addr16
loopne
jb
adc
inc
jl
cmp
xor
cmp
push
popa
push
pop
fbld
jno
out
mov
les
or
lock
mov
dec
pop
xchg
push
pop
fldenv
inc
mov
jno
inc
mov
xlat
ret
popa
xchg
xchg
outsb
insl
fdiv
pop
dec
inc
rcrb
daa
xor
xchg
mov
xlat
dec
scas
push
adc
jbe
and
test
mov
popf
pop
lret
fsts
fmuls
jp
test
loop
lods
cli
mov
aam
in
xchg
ret
xchg
sub
sub
jg
add
cmc
xor
push
mov
or
cmp
inc
pop
sbbl
incb
dec
call
inc
out
or
push
lock
xchg
or
mov
adc
imul
sub
mov
and
dec
repnz
insb
fmuls
jmp
das
sbb
fistpl
dec
data16
jnp
fisttpl
test
and
xchg
push
or
pop
mov
jl
add
xchg
push
movsl
mov
mov
leave
push
icebp
mov
aas
aaa
in
mov
and
cmp
xor
xor
mov
mov
mov
mov
mov
adc
leave
xchg
movsb
ljmp
sbb
mov
add
mov
cmpsb
mov
repnz
push
mov
xchg
add
pusha
fadd
pop
push
xchg
movsl
dec
ret
and
mov
sbb
daa
dec
and
in
ficoml
mov
in
inc
sbb
or
mov
call
sbb
repnz
jmp
in
lret
bound
ret
inc
scas
fldl
enter
mov
jmp
mov
push
pop
repnz
bound
sbb
lea
inc
icebp
call
cmpsb
mov
mov
mov
mov
and
popa
ja
je
xor
xchg
enter
aam
out
lods
ficompl
add
cmp
xor
in
mov
mov
ds
fwait
mov
inc
jb
int
sbb
pop
push
aas
rcl
popf
dec
fcmovne
xchg
mov
mov
adc
push
lods
test
xchg
mov
xacquire
add
mov
and
fldenv
push
xchg
gs
repnz
stc
lahf
add
test
push
push
xchg
in
je
mov
rcr
adc
daa
hlt
test
push
and
imul
ljmp
fnsave
repnz
lret
sar
xor
mov
aam
and
pop
movsl
iret
push
add
rorl
sbb
shll
xchg
mov
fnsaves
pusha
js
sub
add
mov
mov
push
lret
push
int
and
jbe
das
push
je
sbb
lea
pop
sub
inc
add
and
in
mov
mov
arpl
push
sbbb
lcall
aaa
pop
test
and
mov
frstor
mov
test
out
dec
push
insb
inc
xchg
add
cmp
rclb
sti
mov
sar
cmpsl
inc
rol
mov
sub
aas
cmp
xchg
ret
mov
into
sbb
jecxz
and
ja
xchg
into
or
adc
push
inc
sti
xor
ficoml
dec
dec
or
xchg
fsubrl
das
mov
add
shrb
cmp
out
pushf
scas
cmp
ror
daa
sahf
std
jno
clc
dec
push
pop
and
roll
cmp
out
in
mov
fs
push
xchg
aaa
push
data16
dec
mov
push
rcrb
repz
mull
dec
stos
pusha
xchg
roll
ret
or
pop
addb
push
cmpsb
mov
mov
lods
stos
popa
dec
lcall
sub
dec
aas
mov
movsl
shr
cmp
inc
cli
xor
sub
push
sub
pop
add
cmpsl
test
mov
mov
out
shll
scas
mov
dec
bound
xor
jno
divb
xchg
test
jne
mov
aam
dec
je
push
icebp
imull
xchg
dec
outsb
cwtl
mov
push
arpl
ffree
cmp
sahf
ror
mov
sarl
xor
es
adc
and
jb
and
imul
xchg
imul
bound
dec
nop
shl
popf
fisubrl
pop
repz
sbb
fs
inc
adc
jg
movb
push
sub
sahf
mov
jo
in
xchg
mov
scas
jb
xor
jle
lahf
rolb
push
aas
rorl
cs
aad
sub
in
out
movsl
pop
imul
mov
shlb
adc
mov
fbstp
xor
cld
pop
mov
insl
mov
imul
nop
mov
jecxz
dec
jo
sbb
notb
inc
in
push
clc
incl
and
push
sbb
and
dec
mov
in
pop
movsl
fidivrl
outsl
das
cmpsb
dec
int3
out
cmp
mov
mov
fwait
jnp
adc
fsts
and
mov
or
adc
xchg
xchg
add
enter
jp
cwtl
ja
or
jne
repz
xchg
jl
pushf
and
out
nop
pop
xor
dec
pop
icebp
nop
sbb
xor
dec
jbe
mov
test
inc
and
lret
movsb
test
xchg
push
jmp
dec
fisubrs
mov
ljmp
scas
rolb
dec
and
dec
mov
adc
jle
mov
pop
add
flds
pop
xor
rorb
inc
dec
inc
pop
aad
icebp
scas
fwait
inc
notl
mov
lcall
jecxz
popa
mov
dec
fmuls
shl
das
cmp
decl
sbb
add
mov
jl
lea
enter
jo
movsb
mov
daa
mov
jb
fsubl
subl
cli
jg
fcmovbe
add
jl
sbb
hlt
and
push
imul
adc
test
nop
xor
lret
outsl
daa
sub
push
pop
or
fistl
sbb
mov
imul
jnp
std
inc
cmp
jns
sbb
sub
sbb
lret
cmpsl
js
ret
push
fwait
mov
test
sub
inc
mov
sub
in
mov
sbb
or
pop
rcl
jle
or
cmp
mov
sub
lods
pop
mov
cmp
nop
push
dec
xor
iret
roll
cli
cli
test
je
aas
icebp
pop
out
xor
jecxz
xchg
pop
xor
aas
lahf
jle
or
xor
inc
push
pop
gs
clc
push
mov
sub
ret
test
sbb
ret
mov
adc
pop
sbb
pop
les
inc
pop
mov
test
je
int3
insb
outsl
outsl
pop
xchg
out
push
jnp
add
imul
add
ret
sti
stos
pushf
inc
cmp
ror
rolb
mov
inc
dec
jmp
inc
repz
je
add
hlt
add
insl
mov
mov
pop
mov
mov
ljmp
cltd
push
pop
or
repz
pop
pop
in
gs
enter
xor
mov
inc
je
or
std
pop
sbb
sahf
and
addl
aas
shlb
outsl
xchg
movsb
xor
insb
je
adc
aad
stos
jno
add
and
mov
aam
das
dec
and
mov
jne
movb
jns
push
mov
push
inc
mov
or
rclb
sbb
jge
pop
jno
pop
aam
xor
jp
xchg
fsubrl
push
sub
enter
xchg
xchg
pop
fidivrl
mov
pop
ss
mov
mulb
pop
mov
in
in
cmp
ljmp
cmp
cmp
mov
leave
ret
xor
std
in
pop
data16
pop
add
lcall
clc
mov
dec
in
fldt
enter
aam
cli
ljmp
insl
cmpsl
ret
jg
cmc
sbb
rcrl
or
xor
and
jle
mov
popa
ljmp
repnz
cmc
jp
lcall
movsb
cli
enter
pop
or
jo
ret
push
xchg
jae
test
daa
je
shll
loop
mov
test
sbb
fistl
ficompl
ja
movsb
out
nop
out
sub
push
mov
cli
movsl
adc
les
stos
sub
add
rclb
mov
bound
push
jl
jno
xchg
inc
push
shrb
imul
pop
pop
sbb
push
cmp
cmc
and
push
fst
sahf
ret
or
and
jl
push
jl
sahf
mov
and
enter
or
dec
adc
je
push
sub
and
jbe
ss
mov
jns
in
pop
mov
cmp
pop
das
scas
add
sar
mov
nop
dec
xchg
xor
xor
cli
inc
xor
add
fldenv
lret
dec
jmp
fstpt
shlb
lahf
notb
cmp
lret
gs
push
push
cmc
adc
and
fimull
cmp
xor
js
inc
xor
jne
sbb
mov
std
cltd
mov
insb
pop
adc
sti
lret
js
jo
les
push
xchg
xchg
ret
or
mov
inc
sbb
push
sbb
enter
ficoml
push
lret
mov
inc
sbb
repnz
test
adc
out
hlt
rorl
inc
jo
adc
out
popf
cmp
sbb
pop
jg
sub
xor
addr16
adc
xorb
adc
ja
ficoml
inc
and
jge
in
mov
imul
xchg
sbb
mov
and
aaa
sbb
xchg
sub
cmp
cmp
add
sub
sbb
out
imul
adc
lret
push
or
lret
lcall
or
adc
lcall
stos
gs
adc
pusha
xchg
inc
outsb
sahf
stos
sub
mov
jne
xchg
ret
mov
inc
outsl
ljmp
mov
shlb
mov
loopne
cmp
int3
in
adc
cmp
adc
lcall
and
jns
lods
adc
xchg
and
or
nop
jle
into
mov
pop
mov
mov
cwtl
daa
jbe
arpl
pop
ret
push
out
mov
adc
mov
cwtl
in
pop
icebp
test
cld
xor
push
cs
mov
test
imul
jg
sbb
repnz
sub
gs
push
mov
fdivrs
push
and
jbe
inc
cmp
cwtl
push
jge
lea
jecxz
add
mov
sub
cmpb
cmc
loope
xchg
jmp
fbld
nop
outsl
push
pop
lods
out
xchg
inc
add
xchg
sub
lods
sahf
scas
adc
xor
ret
idiv
movsl
cmp
cmp
mov
pop
cmp
cli
je
xor
cmpsl
push
cmp
dec
cmc
insb
inc
jns
lcall
xchg
dec
inc
sub
mov
cmc
dec
jle
leave
rcrl
mov
fcomps
or
mov
pop
sub
sbb
imul
cmp
mov
lds
jns
enter
in
pop
cli
scas
inc
ret
std
pop
ljmp
and
decl
sub
aaa
xchg
icebp
pop
imul
jne
movsl
add
jnp
inc
xchg
fcomps
jp
adc
inc
inc
or
push
das
jmp
out
pop
cmpsl
jnp
xor
repz
add
jl
out
in
xorl
mov
adc
fwait
addr16
pop
stos
mov
enter
repnz
ret
mov
xchg
push
push
or
sbb
ljmp
push
cmp
xor
cmc
push
push
aas
in
dec
outsb
sbbb
sbb
shl
mov
xlat
push
pushf
dec
inc
js
push
inc
or
mov
stos
addr16
and
gs
push
mov
decl
mov
lret
mov
nop
mov
lods
lcall
test
mov
das
fildll
bound
rclb
outsb
xchg
in
mov
divb
adc
and
lret
push
pop
inc
mov
jno
iret
stc
inc
xchg
sub
in
mov
jbe
dec
ds
dec
ss
xor
cmp
pop
mov
enter
or
insb
cld
cmp
out
sahf
sarb
jg
ljmp
mov
popa
cmp
cltd
mov
pop
xor
movb
scas
push
pop
pop
pop
shrb
lods
fstl
dec
call
or
cwtl
aas
sti
push
sub
add
in
push
aam
xor
mov
jns
addr16
sub
push
cmp
flds
jns
push
leave
mov
inc
mov
lods
jb
inc
xorl
xchg
inc
pop
cmp
scas
and
mov
inc
mov
push
or
jno
adc
xchg
pop
sbb
int3
inc
ds
fcompl
mov
lret
push
sbb
sub
xchg
xlat
lahf
daa
push
dec
xchg
pop
jno
xchg
jne
push
xor
in
jle
cmpsb
pop
test
push
loope
lret
shrb
mov
add
outsl
adcl
inc
hlt
bnd
or
and
scas
sbb
ds
lods
push
or
sar
push
daa
imul
xchg
data16
pop
out
mov
xchg
test
adc
xchg
xchg
call
fs
repz
imul
pop
dec
loope
lea
mov
pop
xor
mov
pop
mov
pop
les
mov
or
push
xor
out
loope
scas
add
push
loope
cmpsl
or
aaa
adc
bound
repz
pop
sbb
andl
pusha
nop
test
jno
xchg
loope
cmovle
inc
push
fwait
push
xchg
dec
into
jo
xchg
push
cmp
aam
push
andl
dec
mov
je
mov
mov
sub
ficompl
xchg
fnsave
jns
mov
lahf
ds
mov
mov
les
frstor
or
mov
xchg
nop
call
les
jnp
mov
lea
or
sbbl
push
push
xchg
mov
mov
leave
jp
leave
xchg
cmp
aad
shll
add
adc
ficoms
out
or
bound
or
mov
xchg
mov
clc
push
ret
in
loope
push
xchg
rcrl
ret
mov
cmc
adc
call
ret
pop
inc
mov
push
int3
loopne
cmp
inc
mov
xchg
int3
jl
out
and
pop
lods
fsts
jno
cmpl
shr
mov
xchg
jo
lods
mov
dec
dec
mov
cmp
out
fincstp
jge
outsl
mov
dec
add
mov
and
repz
pop
inc
mov
push
pop
jbe
push
scas
push
add
xchg
pop
gs
pop
or
adc
test
nop
call
test
out
fs
jnp
stos
sbb
out
insb
or
sahf
js
out
les
arpl
or
into
mov
inc
mov
lds
cmp
inc
inc
push
mov
or
add
ret
push
pop
in
cwtl
ja
test
push
inc
popa
push
and
xchg
addb
leave
mov
cmpsl
or
out
and
aaa
fsubrp
mov
pusha
popf
cmp
aaa
into
xor
inc
int
call
out
enter
pusha
daa
add
xor
jnp
sbb
or
push
inc
mov
mov
mov
pop
mov
add
incb
jecxz
mov
jecxz
push
stos
mov
xchg
mov
mov
hlt
xchg
mov
movb
mov
xchg
jmp
pop
mov
ljmp
mov
sub
aad
dec
fstl
sti
test
daa
rcll
adcb
insl
add
pop
cld
mov
ja
add
pop
or
scas
cmp
xchg
les
aad
cmpsb
loope
lea
inc
fcomi
pop
dec
repz
pop
sub
out
repnz
inc
add
and
int3
mov
fcomps
add
sbb
sub
push
fdivrs
out
jmp
or
adc
mov
mov
inc
les
sarl
or
shrb
movb
movsl
or
sub
fdivrp
out
inc
mov
roll
out
in
lret
dec
scas
in
rorl
out
pop
stos
out
data16
dec
adc
push
adc
and
loopne
aam
out
sbb
pop
mov
jb
add
test
sbb
or
pushf
push
cmpsl
mov
xor
subl
inc
repnz
aam
dec
mov
cs
test
add
and
into
cld
inc
add
mov
xchg
cmpsb
mov
idivl
jne
push
and
clc
ja
cvtps2pd
leave
aas
in
adc
mulb
aad
xchg
xchg
cli
lock
and
inc
push
xor
xlat
push
sbb
push
and
movsb
movb
pushf
loop
mov
push
outsb
fistpl
mov
cld
xor
dec
ljmp
inc
fidivrs
clc
push
fisttpll
xor
jg
andb
add
inc
repz
xchg
aad
sub
mov
dec
mov
imul
push
add
cmc
dec
lret
cltd
xchg
push
sar
pop
fistpll
jno
xor
aad
es
loop
xor
xor
aad
shlb
cli
jnp
mov
cmp
jp
repnz
loope
or
push
jae
sub
mov
fnstenv
add
loope
push
or
sarl
adc
ljmp
dec
scas
xchg
sbb
lock
push
outsl
mov
cld
mov
xorb
jne
push
ret
jnp
les
push
cmp
jne
insb
es
mov
inc
dec
inc
fnstsw
repz
or
mov
in
pop
pop
pop
call
rcrl
pop
rclb
pop
or
inc
adc
sub
jae
jbe
imul
icebp
mov
pop
mov
mov
insl
add
xchg
scas
sti
nop
jbe
out
loope
jmp
dec
jnp
and
cli
movsb
filds
push
pop
cltd
ds
addr16
and
or
loop
mov
pop
xchg
lret
daa
scas
or
pop
xchg
les
mov
push
jo
test
fidivrl
sbb
out
fldt
mov
mov
or
pop
sub
cmp
add
scas
xchg
out
inc
xchg
add
or
adc
mov
adc
adc
and
jmp
xchg
pop
and
jae
sbb
bound
inc
adc
test
jae
inc
push
int3
mov
ficoml
movb
mov
sbb
mov
mov
sbb
pop
sbb
pop
xchg
pop
roll
call
outsb
adc
loopne
mov
mov
xchg
jecxz
inc
int
xchg
rclb
pushf
lret
mov
sbb
inc
mov
mov
mov
shr
pop
incl
push
add
cltd
outsl
xchg
sbb
in
gs
sbb
dec
dec
push
arpl
push
jno
ss
push
inc
mov
out
scas
dec
int3
pop
je
fnstenv
insl
jmp
sub
mov
inc
dec
cmpsb
in
int3
bound
ljmp
and
iret
fiadds
or
movswl
popa
dec
pusha
ljmp
sbb
das
hlt
pop
pop
out
mov
into
add
ds
aas
mov
int
push
test
incb
mov
imul
mov
xchg
jmp
outsl
pop
inc
xor
sti
call
jmp
loop
cmc
repz
rcr
hlt
pop
push
into
jno
movsb
imul
mov
cmpsl
pusha
movsb
pop
jae
bound
push
push
add
mov
mov
test
mov
fisubs
aad
pop
and
sbb
inc
jle
inc
lock
adc
xor
call
and
mov
pop
and
cwtl
mov
loopne
mov
mov
les
lret
into
ja
ffree
and
fisttps
mov
adc
shrb
push
xchg
sub
jno
add
outsb
out
aas
les
into
fcomip
insb
push
mov
xor
xor
es
pop
xchg
scas
mov
aaa
cmp
ss
pop
lahf
jae
push
jp
aad
jmp
loopne
pop
inc
loopne
bound
mov
push
fcmovbe
xor
dec
xchg
sbb
es
aad
xchg
cmc
mov
sub
cmp
add
jns
inc
popa
arpl
sahf
and
sbb
dec
jp
pop
jno
jmp
mov
sbb
sub
and
lahf
pop
cmp
inc
sub
cmp
cli
cmc
loop
sbbl
shrl
inc
std
fs
or
xchg
fidivs
add
scas
in
fldln2
cltd
test
insb
mov
sbb
loop
and
imul
mov
or
sbb
imul
sbb
dec
ss
mov
dec
sti
ja
inc
or
loop,pn
cs
mov
pop
lods
sahf
or
mov
dec
pushf
xor
xlat
pusha
ret
push
out
adc
mov
mov
xchg
test
hlt
out
push
loopne
lahf
add
cmpsl
xor
xchg
out
xchg
inc
xchg
add
repz
pop
jo
dec
aas
adc
dec
cmpsl
adc
pop
xchg
jmp
push
or
ds
xchg
pop
andl
sbb
fwait
inc
dec
jne
add
repnz
frstor
pushf
mov
imul
pop
cltd
jbe
ljmp
and
out
cmpsl
add
aad
hlt
hlt
lret
and
or
fisttpll
fidivrs
sub
add
int3
aad
pminub
dec
inc
fs
jl
std
push
ja
jl
sub
and
xor
fcos
mov
pop
movsl
mov
cmp
mov
sti
aam
cmp
loop
incb
sub
mov
cltd
xor
and
xor
xchg
sbb
mov
mov
test
xchg
add
adc
fistpll
lea
mov
fldenv
mov
test
cmpsb
sub
xchg
ficoml
pop
inc
xor
xor
cld
fs
adc
stos
lods
adc
movsb
repnz
pop
shll
mov
jp
fisttps
movsl
inc
pushf
das
sbb
mov
cmpsl
jg
out
daa
mov
ss
xor
daa
popf
xchg
mov
repz
pop
lds
rorl
push
push
mov
call
xor
lds
dec
cmp
das
adc
and
mov
jne
mov
jle
cmc
sbb
out
aam
loope
mov
inc
mov
and
cmpsl
jge
ja
scas
dec
dec
xor
leave
adc
xchg
jo
pop
leave
push
mov
js
iret
xchg
daa
mov
fildl
sbb
dec
push
repnz
movsl
cmp
insb
mov
enter
lods
inc
xchg
ret
outsb
rcr
leave
dec
loop
aad
fsubrs
inc
out
sti
mov
fmulp
stos
lret
mov
ficoml
popf
fsubs
pop
cmp
mov
sbb
cmc
adc
test
push
lock
lahf
push
popf
sub
js
hlt
cmp
dec
jg
nop
in
orl
push
test
mov
cmp
xlat
imulb
adc
ljmp
stos
outsl
sbb
enter
sbb
in
mov
sub
sub
das
ret
add
das
dec
dec
shll
outsl
xorb
and
stos
cmp
pop
fcompl
inc
xchg
sub
fwait
or
rorl
xor
mov
add
mov
add
ret
in
out
cmpb
and
dec
int
or
cs
jp
pop
les
pop
popf
pop
lret
jo
loopne
addr16
in
in
incb
repnz
test
rolb
hlt
pop
mov
adc
cmp
mov
test
cmp
mov
mov
mov
add
xor
lock
dec
adc
popa
mov
cmpsb
mov
lds
and
pop
cmp
mov
lahf
mov
popf
pop
imull
and
inc
pusha
push
arpl
xor
scas
das
adc
addr16
adc
popa
xchg
loop
push
loope
fiaddl
xor
adc
jle
inc
fst
cmp
xlat
and
call
mov
fsubr
adc
xchg
sarl
xlat
test
cli
adc
mov
xchg
adc
adc
mov
xor
push
in
xor
push
iret
xchg
add
bound
int3
cmp
push
insb
jno
xchg
lcall
rcr
and
into
mov
sub
subb
in
or
test
cmpsb
xchg
sub
sbb
test
sbb
cmp
jle
add
mov
or
dec
and
adc
xchg
aaa
test
and
cmp
pop
cld
iret
popf
mov
inc
clc
popa
ss
cli
pop
loopne
aam
xor
and
sbb
enter
mov
fildll
mov
mov
test
fstl
inc
xor
cmc
push
pop
lock
fnstcw
mov
js
mov
mov
lret
pop
add
fdivl
dec
mov
in
cmp
adc
inc
fbstp
in
daa
repnz
orl
ds
sub
fnsave
inc
sbb
push
xor
shlb
mov
stc
pop
in
xor
mov
xchg
dec
lcall
push
pop
cmp
loope
cmp
add
sub
into
dec
mov
cmpsl
stos
call
cmp
or
sbb
xor
gs
lds
jmp
cli
mov
stc
and
aam
xor
or
movsl
movsl
sub
jbe
or
adc
jecxz
enter
fcompl
mov
bnd
jbe
adc
outsb
lea
rol
jbe
sbb
gs
cmp
adcb
aas
outsb
lahf
push
out
cmp
subb
jbe
add
fs
xor
cmp
enter
xor
pop
gs
mov
fs
pushf
jo
pop
lahf
mov
aad
enter
or
mov
xor
add
loope
xor
and
mov
push
mov
arpl
aad
dec
repnz
mov
dec
jecxz
xchg
ja
jae
lds
mov
nop
push
sub
sbb
iret
jmp
jnp
jae
xchg
imul
add
sbb
imul
jecxz
fimull
pop
adc
cltd
xor
aas
mov
xchg
inc
jecxz
les
add
mov
call
mov
popf
mov
test
dec
sub
sub
push
dec
sbb
mov
fnstsw
push
add
inc
mov
add
lea
or
mov
ds
sub
imul
pop
jp
ds
or
ljmp
pusha
lods
in
icebp
pop
mov
bound
mov
inc
aaa
cld
dec
pop
test
nop
rcll
push
fidivl
daa
stos
xor
outsl
in
mov
push
je
xchg
jb
loop
and
push
bnd
mov
ss
dec
movl
sub
fadds
pop
fildll
xchg
sbb
movl
adc
cmpsl
adc
dec
inc
push
movsb
aad
shrb
mov
or
sbb
inc
sbb
jp
movl
adc
out
dec
xlat
inc
lea
popa
adc
dec
mov
push
mov
mov
outsb
sbb
aas
movsb
in
push
xchg
ret
into
pop
gs
mov
loopne
fstpt
cmp
pop
popa
dec
push
repz
jmp
sbb
pop
lds
mov
ficoml
xor
scas
jg
push
push
mov
sbb
dec
dec
dec
lahf
pushf
mov
divl
mov
mov
push
mov
mov
and
loopne
inc
addr16
in
std
pop
adc
ljmp
pop
aam
sub
pop
and
ror
mov
adc
pop
sti
pop
ret
scas
or
testl
cmp
cmp
aad
popf
movsb
leave
mov
mov
mov
test
mov
inc
shll
popa
scas
ret
popa
mov
cmp
sub
gs
lret
or
and
mov
sbb
int3
push
lahf
scas
sarl
push
sub
idiv
mov
std
pop
outsl
adc
mov
js
in
dec
dec
xor
push
daa
divb
xor
cmp
stos
fsubl
dec
jg
mov
push
jne
mov
mov
push
xor
mov
mov
imul
pop
inc
jp
dec
out
push
inc
push
pushf
push
lcall
out
sub
out
fdivr
mov
inc
xchg
pusha
je
and
in
gs
out
popf
int3
shr
xchg
cli
inc
sub
dec
loopne
mov
stos
hlt
or
icebp
jg
sub
aad
cmpsb
mov
or
add
mov
push
je
call
mov
cli
inc
push
data16
stos
mov
xchg
push
leave
cmp
fcoms
fidivl
dec
xlat
xchg
adc
jne
aas
ja
and
cmp
sub
jge
or
ljmp
push
inc
sub
sbb
dec
xchg
outsl
or
cmp
clc
shlb
int
or
cmp
imul
popf
es
sti
inc
mov
mov
es
mov
aas
push
mov
inc
daa
movsb
jbe
xchg
xor
xor
or
mov
mov
add
mov
cltd
add
test
pop
jns
ja
leave
add
sbb
scas
mulb
cmpsb
in
aas
push
xchg
mov
xor
and
mov
lds
mov
testl
push
rorb
fmull
ror
mov
xchg
pop
nop
cmpsl
sahf
push
pop
dec
mov
sub
mov
xchg
outsb
mov
aaa
cmpsb
push
push
icebp
pushf
xchg
jne
mov
lret
fdivs
mov
shl
into
pushf
inc
push
xor
or
sbb
bts
test
jp
insb
js
ljmp
int3
jb
lret
xchg
mov
rcrb
notl
cltd
inc
cli
outsl
xchg
cmp
lods
movsl
xchg
and
aad
or
mov
shrl
push
adc
inc
xchg
out
and
subb
lret
add
popa
das
stos
mov
lea
jb
bound
mov
inc
data16
lret
mov
and
jmp
inc
loope
mov
icebp
push
mov
xor
imul
cmp
cmp
jo
lret
cltd
or
popf
and
hlt
inc
in
and
daa
popa
add
ror
scas
xor
rcr
mov
mov
xor
fisubrl
outsb
repz
ret
ret
mov
xchg
ja
fsubrs
insl
daa
bound
mov
cmp
xchg
lock
inc
mov
pop
xor
or
fs
add
add
xchg
sbb
and
jb
sub
fs
lock
es
dec
addl
dec
or
or
and
mov
push
xchg
push
xchg
or
or
mov
rclb
out
in
sbb
cmpsl
push
cmpsb
lahf
pop
aam
adc
enter
je
cmp
add
ficoml
je
add
or
lret
mov
mov
outsb
mov
fmuls
cmpsl
lahf
push
inc
cmp
lods
aaa
imul
popf
into
mov
mov
dec
xor
adc
dec
xor
cmp
cli
xchg
cmp
mov
push
mov
add
sub
push
sbb
xor
pop
imul
out
jo
outsb
int
cmp
and
pushl
pop
movb
aas
sbb
jmp
push
sbb
rcrb
sub
ljmp
aas
adc
push
cmpb
stos
pop
mov
xlat
aad
bound
mov
sarb
xchg
xor
mov
aad
xchg
push
filds
xchg
out
adc
in
fistpl
int
jne
adc
add
das
xlat
and
sub
into
faddl
je
clc
test
mov
cmp
clc
mov
js
enter
in
and
sbb
pop
xor
jmp
inc
push
inc
mov
xchg
sub
repnz
xchg
insl
aaa
ret
cmp
pop
pop
adc
pop
inc
fstl
dec
aad
addb
test
rcrl
shlb
sub
jb
arpl
sub
loopne
adc
insl
lahf
out
incl
mov
movl
in
out
fdivrs
mov
lret
pop
cmp
idivl
dec
movsb
aam
pop
sar
lds
push
in
mov
dec
mov
sbb
lret
add
push
mov
xlat
mov
push
pop
push
sub
and
dec
mov
arpl
mov
inc
xor
movsb
dec
push
mov
cmc
jmp
sub
or
stos
mov
mov
mov
xchg
mov
arpl
xchg
sarl
repz
xlat
mov
cs
push
xchg
xchg
ljmp
mov
pop
mov
out
dec
aaa
pop
adc
mov
sub
or
scas
fimuls
inc
dec
pushf
sbb
push
sti
lahf
xchg
adc
mov
mov
dec
dec
leave
jl
in
test
fadds
adc
orb
es
dec
or
jo
hlt
cmp
jnp
out
fstl
cmp
in
push
pop
fists
bound
movsb
pop
sti
inc
out
in
movsb
and
sub
out
mov
in
loop
les
std
test
das
cld
add
repnz
lahf
addr16
sub
push
call
xchg
fdivr
stos
pop
in
in
sbb
xor
cmc
cmpsb
mov
push
je
xlat
shll
icebp
dec
jae
or
outsl
addr16
pop
mov
mov
stos
pop
pop
es
sbb
jo
mov
lcall
cmpsb
mov
shll
repnz
cmp
xchg
pushf
jbe
outsb
sahf
es
and
cmp
jecxz
loop
mov
pushf
outsb
popf
dec
jbe
adc
push
mov
add
or
xor
add
js
sbb
stos
shll
dec
ds
arpl
out
repz
jg
push
popf
cvtps2pi
adc
pop
xchg
dec
loopne
dec
mov
sbb
dec
xor
mov
jns
loope
xor
cwtl
fsubl
pop
shrb
fs
packssdw
pop
popa
mov
rorb
mov
mov
adc
push
cmc
xchg
push
loopne
shll
mov
or
or
mov
ja
sbb
test
xchg
mov
mov
insl
sub
inc
inc
add
es
imul
jno
ss
das
imul
mov
insl
icebp
jnp
push
push
enter
mov
xchg
movsb
dec
xchg
imul
es
mov
add
pop
sub
mov
push
les
movsl
dec
loop
incb
es
jae
adc
add
out
cli
dec
sbb
dec
repz
call
aas
cmp
jb
inc
jp
adc
inc
sub
jecxz
sbb
sub
negl
mov
cmpsb
lret
fmulp
shr
popf
je
pop
ljmp
jecxz
xchg
fwait
mov
inc
clc
mov
push
rol
scas
push
imulb
aam
jmp
and
dec
cmp
mov
sub
lds
inc
push
and
clc
lret
mov
cmpsl
loope
or
add
xchg
push
movsb
ds
inc
cmp
movsl
outsl
xorb
mov
into
into
cmp
int
test
mov
pushf
repnz
sahf
ret
cld
mov
imul
in
movsl
and
sbb
adc
sub
xor
fnstsw
fnstsw
ret
inc
xchg
incb
aad
xchg
adc
cld
stc
fnsave
mov
in
and
imul
jns
scas
or
test
call
movsl
cmpsl
aad
pop
out
cmp
pop
lds
mov
js
adc
popf
aad
je
popl
test
adc
push
or
xchg
inc
or
fistl
xchg
dec
xor
and
int3
stos
gs
rorl
xor
jne
ss
std
cmpsb
sarb
jge
dec
ret
pushf
mov
sbbb
hlt
stos
cs
cmp
ja
adc
jge
jns
roll
les
pop
data16
push
outsl
cld
mov
fstl
pop
add
push
mov
iret
shll
mov
dec
pushf
xor
leave
dec
aad
mov
adc
cmp
pop
add
cltd
movsb
pushf
jl
adc
fmuls
ss
leave
and
fiaddl
sub
mov
mov
sbb
or
or
xchg
pop
xchg
lahf
loop
add
jl
imulb
jne
int3
scas
test
cmp
add
mov
push
imul
dec
in
xchg
pop
hlt
enter
cmc
sbb
rclb
fs
jecxz
imul
xchg
daa
in
pop
gs
ss
lods
pop
dec
cmpsl
jmp
jae
out
imul
adc
testb
sbb
adc
in
shrl
and
adc
sbb
rcrl
push
mov
cwtl
flds
mov
movsl
jno
mov
pop
es
pop
rclb
and
add
lds
mov
jp
cmp
xchg
mov
int3
adc
pop
lock
inc
repz
xchg
xchg
js
jo
cmp
lds
mov
icebp
int3
jle
inc
fistl
fucom
pop
frstor
cwtl
pushf
test
fmull
sbb
ja
mov
test
push
adc
pop
mov
push
mov
lods
pushf
stos
ljmp
dec
loope
loope
mov
in
lods
in
hlt
js
pop
xor
xor
out
dec
ret
sub
or
jns
add
inc
arpl
mov
outsl
fidivrl
adc
icebp
rol
lods
fcomps
pusha
arpl
insb
pop
insl
xchg
pop
add
or
push
mov
loopew,pt
addb
rcrl
aas
negb
mov
push
lret
push
mov
std
add
cmp
lock
mov
nop
inc
cltd
mov
aam
mov
stc
add
jae
inc
mov
notl
repnz
dec
mov
push
dec
jnp
imul
dec
aad
scas
movsb
xor
jno
mov
mov
mov
mov
stos
mov
dec
xor
jl
sahf
addb
lahf
int
pop
outsl
mov
push
and
decl
sub
xchg
pop
push
idiv
lods
mov
cli
lods
shll
adc
mov
pop
push
insl
mov
jmp
inc
jb
lods
cmc
test
and
in
add
cmp
out
or
ss
xchg
dec
jns
or
jbe
lcall
aam
pop
jg
jg
int3
add
popa
test
jecxz
rclb
xor
xchg
test
push
inc
clc
add
outsl
add
xchg
ret
call
hlt
fadds
daa
jp
in
ficoms
shrl
xor
inc
inc
adc
jmp
in
aam
adc
inc
sbb
sub
mov
aaa
push
std
out
mov
add
jle
mov
mov
popl
out
cmp
jp
lds
pop
mov
mov
iret
cld
cmp
push
add
mov
inc
sub
jo
xchg
xchg
aam
mov
jne
outsl
pop
xor
in
cld
sqrtps
pop
cmpsl
sbb
out
je
xor
sbb
fildll
nop
xchg
shl
mov
mov
cli
mov
mov
xchg
cmpsl
lret
sbb
add
pop
nop
clc
pop
mov
adc
cmp
push
jle
xor
clc
call
mov
push
mov
test
push
js,pt
mov
xchg
outsl
std
or
cmpsb
cmp
stc
cmp
jl
dec
xchg
popf
cmp
int
sbb
jecxz
clc
pop
bound
or
and
inc
movb
and
fisubl
mov
xor
fadds
add
add
in
jp
sub
in
dec
dec
pop
mov
das
push
in
lahf
push
sbb
push
enter
cmc
xchg
sub
lock
inc
push
into
loopne
push
mov
outsb
xchg
cs
and
movl
jg
push
mov
js
iret
adc
lods
inc
sti
scas
dec
sub
mov
je
or
out
dec
xchg
push
or
addb
jbe
loop
xchg
pop
sbb
jne
and
add
addr16
sbb
clc
adc
std
dec
cmpsb
cmp
and
loope,pt
and
adc
jmp
mov
mov
add
push
test
push
outsl
repnz
sti
and
fs
pop
outsb
and
cli
jg
add
cmp
add
sarb
mov
add
pop
push
and
cli
idivb
addr16
rcl
outsb
inc
dec
jb
rorl
sub
or
mov
nop
push
ljmp
xchg
sub
subl
je
adc
xor
mov
pop
mov
negl
sub
adc
mov
repz
inc
lret
test
stos
fldcw
inc
and
fists
xor
pop
test
mov
mov
icebp
fimull
in
adc
cmp
lds
lods
dec
pusha
cmp
mov
pop
popf
sbb
out
shl
int
mov
sti
repnz
loopne
and
cs
or
adc
push
ret
cs
and
push
lock
jo
mov
mov
or
imul
mov
push
fstpt
in
ret
frstor
xchg
aaa
mov
sub
test
divl
mov
fldl2t
xor
aad
mov
jb
andl
mov
xor
pop
adc
fwait
sub
ja
adc
push
cmc
and
out
lock
inc
repz
mov
push
inc
sbb
test
dec
mov
lret
aam
test
adc
in
lsl
xor
pop
sbb
cs
sub
mov
dec
out
arpl
jns
mov
adc
dec
sbb
test
and
and
insl
add
adc
pop
inc
mov
decl
push
jle
cmc
gs
xor
ljmp
mov
dec
dec
fcomi
sbbl
out
sub
jmp
sbb
test
dec
shlb
inc
int
push
push
add
popa
out
dec
mov
mov
imulb
mov
rcll
inc
stc
xchg
les
and
or
clc
int
popf
adc
sub
sarl
ljmp
subl
lahf
inc
enter
lret
fistl
jnp
push
lret
in
cs
or
add
sub
enter
mov
es
xorl
test
jecxz
or
cld
mov
pop
add
fidivrs
mov
popf
in
pushf
in
bnd
dec
out
scas
and
in
lods
fdiv
mov
jge
mov
hlt
jecxz
lock
popf
imul
or
sub
xchg
aam
adc
test
pop
push
loop
mov
sbb
aam
xchg
push
mov
scas
xchg
sahf
inc
out
adc
fs
inc
es
fbld
pop
leave
adc
clc
adc
stos
std
ja
adc
mov
rorb
stos
sub
jl
mov
leave
mov
js
insb
jg
cmp
push
and
xchg
or
add
add
add
test
dec
mov
popa
mov
and
cmc
adc
mov
pop
sbb
cli
popa
inc
adc
mov
inc
test
scas
cmpl
xlat
and
hlt
pop
jns
call
incl
dec
xchg
add
xchg
jge
cmpsb
sbb
in
cmp
inc
or
popa
pop
ret
mov
mov
addr16
mov
push
pushf
addr16
int
or
and
xchg
dec
pop
aad
std
push
int
push
or
test
sbb
xor
xchg
scas
inc
icebp
sti
dec
inc
mov
mov
les
xchg
fimuls
adc
jo
and
out
pop
stos
test
push
inc
xchg
movsl
icebp
fdivs
cltd
sub
adc
jl
dec
adc
stc
pop
mulb
sti
pop
mov
mov
test
imul
xor
test
outsb
ret
cmp
add
mov
or
subl
andl
in
xor
cmp
pushf
mov
test
imul
data16
mov
pop
dec
add
test
dec
cmpb
adc
mov
stc
jb
xchg
push
gs
dec
test
inc
jmp
int
cmp
xchg
dec
fidivrs
cltd
test
insl
push
mov
lods
sub
ss
es
push
and
add
pop
push
js
mov
outsb
scas
cmpsb
mov
imul
je
test
dec
mov
mov
pop
xchg
movsl
fs
fiaddl
in
or
test
sub
mov
add
leave
jmp
pushf
push
pop
dec
xchg
adc
sbb
dec
shrb
pop
sbb
mov
mov
cmc
mov
stos
leave
stc
mov
mov
or
jnp
ljmp
test
jmp
sub
xorl
add
sbb
and
mov
ficompl
adc
sbb
jnp
loopne
xchg
enter
ficompl
mov
add
xor
mov
addr16
imul
inc
scas
hlt
clc
rcll
mov
mov
sbb
adc
jb
dec
iret
cmp
dec
pushf
lret
xchg
pop
into
shl
mov
cmp
xor
pop
mov
inc
dec
hlt
mov
pushf
ret
lock
lea
lret
add
mov
push
in
rclb
ficoml
enter
xchg
adc
dec
sbb
aad
mov
not
mov
shl
pop
icebp
dec
sti
es
int3
mov
rolb
int3
aad
shlb
sar
sbb
fldenv
jle
xor
dec
in
imul
jne
adc
and
pushf
push
sub
stos
mov
in
inc
mov
aam
mov
imul
lcall
adc
jp
xchg
cmpsl
out
imul
imul
sbb
cmpl
sub
xor
jbe
fs
jp
clc
xor
mov
gs
mov
lods
pop
fwait
inc
iret
add
hlt
mov
mov
ds
xor
xlat
enter
xor
sub
test
push
sbb
pop
inc
in
in
and
mov
xor
pop
mov
add
cwtl
push
push
mov
adcl
inc
les
andb
je
jp
movsb
test
xchg
call
test
or
xor
sbb
jl
andb
jbe
mov
push
sub
pop
adc
enter
shlb
jno
push
sbb
testb
aas
ficoml
in
scas
dec
fldcw
lods
inc
out
mov
in
addr16
mov
mov
fidivs
xor
xchg
add
test
iret
and
fisubl
jno
jnp
cmpps
pushl
ja
xor
ror
loopne
mov
call
lret
fcmovne
test
dec
mov
mov
int3
fistps
dec
ret
movsb
pop
enter
inc
inc
inc
inc
fisttps
icebp
insb
ds
roll
repnz
or
push
pop
mov
jge
fisttpl
xor
inc
adc
xor
sub
mov
mov
pop
push
call
clc
add
pop
nop
mov
mov
int3
out
push
jns
add
and
lods
mov
testl
test
loop
mov
cli
stos
addl
push
cmp
or
cmc
jecxz
lods
jl
xlat
xchg
and
cld
xor
xor
pop
stc
add
test
out
dec
and
icebp
jmp
ss
cmp
fdiv
jge
and
les
and
or
in
dec
mov
adc
lods
xor
cmpsl
cmp
paddd
orb
sub
sbb
cmp
lea
dec
jns
lds
sbb
negl
lods
mov
popa
jge
repnz
fwait
hlt
jb
repz
push
mov
sbb
shrl
add
sbb
xchg
mov
xor
or
inc
sbb
in
dec
fs
xlat
mov
mov
mov
ljmp
jp
mov
test
mov
cmp
sbb
mov
orb
daa
cltd
sti
cld
adc
hlt
test
ja
jae
push
and
shlb
loop
mov
mov
mov
and
push
les
cmpsl
sbb
in
scas
jge
mov
testb
push
lods
mov
into
lods
xchg
loope
int3
xchg
jb
jge
dec
js
inc
xor
fidivrl
lret
xor
mov
inc
int
frstor
lds
ljmp
addr16
mov
inc
add
repz
pop
imul
mov
shrb
or
out
insb
scas
sub
push
add
adc
mov
fwait
pop
mov
inc
push
add
rclb
sahf
mov
shl
imul
push
mov
mov
mov
add
iret
fwait
xchg
dec
cmp
mov
in
insl
cmpsl
push
or
mov
int3
push
pop
mov
inc
xchg
mov
insb
out
mov
cltd
push
ja
aad
push
push
cs
pop
push
negl
ret
jecxz
jnp
aam
daa
mov
bound
stc
jge
aaa
mov
dec
scas
pop
sahf
lcall
mov
jae
hlt
call
jns
lds
jae
push
pop
xor
clc
in
push
addr16
mov
jecxz
mov
adc
or
xchg
int3
pop
jae
sbb
fisttps
mov
sahf
loopne
xchg
add
and
pop
test
fldenv
pop
cmp
aas
xchg
adc
sbb
lcall
push
les
test
add
popf
jae
mov
pop
cmp
jmp
xchg
jl
push
mov
in
push
aam
insl
sbb
sbb
inc
cld
xor
out
daa
cmp
jno
xchg
sub
mov
jae
test
int
frstor
jecxz
pop
cli
js
cmc
cmp
or
sti
jge
mov
mov
mov
mov
adc
xchg
sub
and
pop
mov
std
out
sbb
cmpsb
fcompl
adc
or
cmp
dec
sub
insl
fs
add
push
decl
sub
jg
insb
sti
xor
mov
jmp
jl
inc
out
pop
pop
loopne
push
mov
xchg
inc
cmp
out
pop
shlb
cmpl
and
dec
aad
lods
test
popa
sbb
jp
inc
in
xchg
jmp
dec
sub
outsl
push
out
das
dec
in
ret
addr16
xchg
mov
xlat
mov
mov
arpl
arpl
dec
subb
jno
fmull
add
sbb
sbb
lahf
xchg
fchs
out
flds
push
or
imulb
stc
shl
stos
mov
sbb
scas
lcall
in
pushf
les
sbb
fstpl
shll
cmp
push
adc
push
int3
and
and
fcomi
cmc
add
add
inc
aad
mov
data16
push
xlat
xchg
sbb
into
cmp
sub
repz
bts
pop
hlt
push
into
sub
mov
lds
popf
aaa
adc
addr16
pop
jg
inc
and
loopne
inc
mov
scas
mov
int3
add
and
xchg
inc
fimull
and
mov
cmc
xchg
pop
mov
dec
daa
adc
icebp
ss
aam
cmp
arpl
lock
cmpsl
fsubl
mov
dec
ds
mov
mov
mov
pop
adc
iret
xor
rcll
out
mov
test
adc
iret
fists
out
lea
xor
mov
stc
push
int3
add
shlb
sbb
cltd
fdivr
rolb
fadds
inc
xor
and
cwtl
jg
add
loope
or
add
leave
std
and
ss
and
shlb
cmc
cld
and
pop
mov
dec
mov
mul
pop
adc
pusha
es
xor
xchg
insb
imul
or
sbb
mov
inc
sbb
insb
mov
add
mov
xchg
clc
clc
outsl
outsb
inc
mov
lret
mov
add
jmp
inc
and
rolb
addr16
ret
mov
cmp
insb
add
inc
inc
cmp
ljmp
xchg
mov
dec
and
fs
cmp
and
mov
cmp
mov
jo
inc
cmpsb
mov
lds
and
fiaddl
lock
adc
scas
mov
mov
loope
je
out
pop
xorl
pop
and
data16
iret
lds
out
pushf
xor
mov
sarl
lock
out
push
das
sub
mov
mulps
outsb
leave
mov
scas
push
cmp
and
jg
jp
out
inc
out
dec
sub
out
mov
mov
jmp
and
popf
pop
mov
fwait
or
adc
fwait
mov
sub
mov
cli
sub
add
inc
pop
push
das
js
xchg
out
cwtl
dec
mov
xchg
mov
out
add
ja
push
scas
mov
insb
adc
loop
cld
mov
mov
pop
filds
dec
ret
repz
or
mov
mov
int3
and
ljmp
pop
mov
mov
lds
xchg
fsubp
dec
das
cltd
mov
mov
lret
ret
inc
ljmp
jl
and
in
jnp
cmpsb
add
ljmp
or
inc
cmc
pop
dec
out
insl
test
rorl
icebp
pop
mov
sahf
sahf
add
in
adc
xchg
xchg
inc
rolb
jbe
les
fldt
sub
enter
sub
cmp
in
imul
call
push
sbb
call
mov
das
push
inc
xchg
or
dec
mov
mov
es
sarb
pop
aas
cld
sbb
pop
push
aad
iret
in
lea
pop
cwtl
push
xor
insl
mov
dec
push
cmpb
mov
xchg
dec
mov
xchg
push
movsb
or
mov
fnstenv
add
xlat
jnp
je
cmc
or
fisubrs
sub
hlt
ja
shll
loopne
xchg
out
push
sub
frstpm(287
mov
pop
lcall
test
mov
data16
mov
add
aad
or
xor
cli
pop
cmp
xchg
mov
jl
dec
mov
xor
std
inc
or
add
dec
sti
imul
call
cmp
gs
scas
xchg
mov
and
push
push
push
dec
hlt
or
and
movsb
jo
add
mov
pinsrw
out
test
xor
mov
cmp
shrb
sahf
loopne
sbb
jecxz
cwtl
out
gs
sub
adc
jmp
stc
lds
push
jb
jecxz
test
outsl
sub
cmpsb
mov
sbb
nop
adc
cli
mov
out
les
aam
and
pop
pop
or
repz
xor
mov
addl
inc
test
in
cltd
xchg
sub
add
xchg
aaa
mov
mov
stos
xchg
sub
cwtl
repz
mov
movsb
pop
lock
pop
cmpsb
adc
fisubrs
xchg
pop
push
int3
sub
inc
lcall
ljmp
lods
cmp
aam
mov
push
sar
je
pop
test
mov
nop
add
dec
jg
inc
lods
subb
xchg
adcb
jnp
jns
dec
aam
add
add
adc
push
sub
dec
cmpsl
je
sbb
push
fs
aad
inc
xlat
stc
inc
cmp
cmp
out
outsb
test
pop
push
pop
lahf
scas
lea
leave
or
adc
mov
mov
nop
pusha
test
cmpsl
mov
rcl
xor
jbe
add
push
lret
ret
fistpl
jne
lcall
inc
lret
mov
adc
mov
cmp
add
insl
push
cld
and
sub
or
pushf
add
loope
dec
adc
push
clts
xchg
pop
leave
add
add
pushf
xlat
in
xchg
and
in
inc
sub
sbb
and
cmp
push
fcmovne
jo
mov
mov
cmp
mov
packuswb
mov
add
cmpsb
push
das
pop
ss
int
jmp
adc
push
int3
adcl
pop
adc
out
xor
mov
aas
adc
jp
jns
mov
push
ret
lahf
pop
push
inc
mov
xchg
pop
mov
std
mov
outsl
or
and
lods
scas
repz
and
inc
cmp
gs
mov
cmpsl
inc
cmpsl
dec
clc
nop
jb
int
mov
xchg
dec
xchg
nop
sbb
add
lods
jo
xchg
cmp
sub
fildl
adc
or
mov
test
xchg
cmp
repnz
push
incb
adc
incl
std
push
insl
iret
add
mov
xor
inc
idivl
popf
dec
cld
and
mov
push
fs
add
les
adc
cmp
xchg
enter
and
scas
xchg
mov
push
cmpsb
push
jne
aaa
jge
stos
ret
mov
loopne
inc
fcomip
outsb
pop
push
add
sbb
push
jbe
daa
sti
pop
inc
test
arpl
in
ret
cmp
add
cmp
xchg
or
mov
mov
sub
xchg
jl
push
mov
push
fiadds
push
test
clc
push
jbe
push
push
xor
and
xchg
arpl
inc
leave
cltd
sbb
inc
out
in
out
fistpll
fbld
into
push
lcall
adc
repnz
out
mov
test
dec
pusha
or
jle
cmp
adc
and
aam
or
mov
call
cltd
inc
lock
pusha
xor
gs
mov
test
ja
push
xchg
or
push
cmp
jp
adc
xchg
xchg
mov
rcrl
or
push
inc
xor
lods
adc
push
lea
out
push
insb
cltd
jnp
add
mov
cmp
lcall
jnp
inc
lret
fcompl
jne
std
test
mov
mov
jl
lret
pop
test
ja
stc
lods
inc
cli
inc
dec
test
adc
call
or
mov
mov
inc
cmp
jmp
outsl
sub
push
data16
pop
sbb
jle
fistpll
dec
addr16
sub
fdivrp
lods
inc
pop
out
dec
repz
add
push
aaa
adc
out
test
out
cmp
insb
or
cmpsl
movsb
shl
jne
pop
shlb
mov
pop
stos
loop
popf
cltd
adcb
and
pop
cmp
inc
cltd
xor
xchg
lahf
sub
xchg
pop
into
xor
loopne
ret
adc
and
push
pop
andl
mov
jne
push
mov
xor
inc
in
xchg
cmpsl
xchg
mov
dec
or
push
aad
fisubrl
imul
aas
xchg
roll
sub
and
and
outsl
adc
cmp
push
movb
jle
push
sub
cli
and
and
pop
pushf
jge
mov
mov
sub
sahf
mov
pop
mov
and
jns
imul
outsl
cs
xchg
sub
ja
fdiv
mov
clc
mov
sub
mov
cmpsb
sub
mov
mov
pop
mov
mov
jno
cmp
inc
mov
outsl
rclb
mov
xchg
lods
into
mov
sub
fldcw
loopne
sub
stos
pop
pushf
data16
mov
pop
pop
dec
pop
nop
pop
lds
jg
leave
xchg
xor
cmp
sti
ret
push
jo
xchg
or
xchg
cltd
mov
insl
and
gs
iret
pop
pop
jne
fdivs
icebp
dec
sbb
mov
pop
xchg
xor
loopne
cs
pusha
pop
mov
aad
test
adc
mov
nop
sbb
or
mov
sbb
ret
adc
xor
and
or
cmp
xchg
std
mov
xor
mov
cli
pop
cltd
aad
add
mov
divl
sarl
cli
and
push
mov
mov
cltd
daa
inc
push
add
movsb
pop
mov
mov
inc
adc
popf
fidivl
mov
popa
xor
mov
lds
push
rclb
fsubrs
out
mov
sbb
adc
movsl
xlat
addr16
push
out
xor
pop
ret
lea
stos
jp
fidivrs
jecxz
fwait
cmp
andb
test
jae
adc
sahf
jno
mov
cmc
or
pmovmskb
xchg
and
scas
inc
mov
inc
mov
je
xchg
cmpsb
jge
push
repnz
mov
insl
sahf
jl
xchg
dec
mov
and
sub
test
mov
push
ret
cwtl
subb
adc
sbb
imul
mov
sub
or
rorl
inc
jecxz
adc
mov
lods
popf
add
jg
fucom
or
scas
cwtl
mov
mov
push
pop
xchg
pop
fldt
xor
mov
cmpsb
arpl
mov
add
or
out
jg
lods
imul
jns
jp
out
ss
ret
jmp
fidivrl
inc
cmpsb
pushf
movsl
sub
pop
push
jmp
pop
loop
add
movsl
cltd
cmp
ret
ja
enter
lahf
testl
jle
xchg
mov
test
js
lock
mov
push
sarl
iret
mov
sbbb
mov
adc
scas
cmpsl
inc
xor
lds
or
mov
aaa
jno
jbe
fs
cmc
push
fs
mov
jne
test
lds
lock
fdiv
cmp
in
mov
cmc
lcall
cmc
cli
and
sti
sbb
mov
ja
pop
or
jae,pn
not
mov
push
cmp
dec
cmc
jbe
das
data16
fucomip
shlb
ds
mov
fdivrl
icebp
aam
sahf
jge
sbb
movsb
call
push
mov
nop
jp
pop
cmp
movsb
mov
mov
dec
push
daa
movsb
insl
xor
ret
cwtl
cmp
fcoms
testl
cmpl
movsl
push
int
outsb
jae
mov
cmp
out
sarl
and
pushf
or
or
adc
xor
stos
mov
jo
pop
sahf
inc
jecxz
add
pop
ds
into
and
mov
xor
sub
push
jmp
sbb
shl
push
mov
out
cmp
push
ss
and
movsb
out
pop
xchg
std
and
int
inc
sbb
xchg
test
push
pop
mov
jnp
xor
repnz
push
or
jg
jge
xlat
adcb
insb
out
out
shlb
hlt
jg
shll
andb
mov
shrb
mov
dec
mov
std
shrb
and
xor
pop
shlb
or
leave
sub
idiv
bound
jns
jnp
mov
out
cmpsb
push
pop
jb
or
call
pop
sbb
mov
sbb
outsb
insb
std
push
pusha
jbe
pusha
into
jg
sub
fwait
inc
and
pop
adc
scas
adc
scas
addr16
mov
scas
verw
pop
lea
mov
scas
jg
negb
lea
pop
jae
fcoml
sahf
hlt
mov
les
pop
xor
dec
inc
fdiv
or
and
dec
cmp
lcall
xchg
adcl
cmp
cmpsl
icebp
icebp
outsb
cmpb
clc
popf
adc
mov
inc
leave
dec
sbb
in
xor
ret
xor
sub
je
sahf
lret
push
pop
sarl
insb
mov
imul
sbb
or
add
lret
inc
mov
adc
push
xchg
cmpsl
xor
mov
cmp
pushl
adcb
pop
inc
xchg
stos
lea
add
inc
push
shll
dec
imul
in
add
lret
in
fs
and
lret
mov
aad
sbb
fdivrs
dec
lcall
jne
ret
sub
int3
ljmp
add
jg
pop
pop
xor
call
es
fnstenv
in
mov
stc
jl
mov
push
dec
adc
xor
pop
loop
ja
sti
pop
xor
push
cltd
jno
je
lock
pop
int3
adc
sbb
mov
and
mov
sbb
fisubrs
sbb
out
sbb
into
push
scas
lret
mov
clc
setle
pop
mov
dec
mov
vpunpcklwd
pop
das
cmp
jmp
imul
pusha
xor
or
adc
mov
dec
data16
sti
jmp
notb
mov
and
mov
jb
push
sbb
rcrl
or
loope
lcall
cs
lahf
adc
insl
test
xor
xor
mov
mov
or
jbe
dec
ret
xchg
js
pushf
dec
stc
pushf
rep
dec
sub
adc
insl
mov
movsl
mov
push
jno
jp
mov
add
pusha
hlt
ja
in
jo
int3
int3
push
lea
cmp
imulb
inc
or
add
sub
or
dec
pop
push
push
sub
xor
fmuls
iret
das
stc
xor
enter
lret
out
xor
mov
inc
aas
jbe
dec
ja
inc
pop
xchg
mov
jp
and
adc
adc
mov
adc
es
xchg
inc
xlat
xor
jle
lret
cmpsb
push
movsl
aas
mov
dec
xchg
xchg
repnz
add
push
add
enter
mov
lea
push
add
mov
push
mov
jb
jbe
inc
cmp
push
jne
fsub
jecxz
shr
lds
aam
and
decl
subl
outsl
mov
cwtl
jbe
sub
loop
pop
jno
dec
ret
orb
xchg
fs
or
call
imul
sub
pop
inc
mov
daa
fbstp
pusha
sbb
cli
addr16
jge
mov
in
in
scas
mov
gs
shl
mov
inc
loop
mov
popa
shrl
test
mov
adc
push
sub
mov
test
lods
outsb
cs
andl
jl
daa
popa
xchg
repnz
push
xchg
mov
lret
pop
test
dec
add
js
add
loop,pt
dec
ljmp
insl
cmpsl
jae
mov
xchg
xchg
pusha
cld
mov
subl
push
xor
mov
and
pop
jg
xchg
pop
sbb
in
shrl
xor
and
pop
aas
in
shlb
pop
pop
test
stc
inc
jns
sbb
sbb
mov
adc
stc
in
movsb
ret
es
mov
push
lds
fwait
leave
mov
scas
aaa
std
and
dec
int3
insb
insb
sarl
pop
aaa
mov
sbb
xchg
loope
lea
fidivs
sbb
push
int3
sbb
lods
mov
push
add
and
mov
push
push
xor
cltd
dec
adc
sub
push
xor
movsl
mov
ds
lea
fst
dec
xorl
mov
leave
leave
mov
push
push
inc
mov
xchg
jns
pop
dec
aaa
jo
push
cld
sbb
push
mov
mov
orb
fistps
dec
sub
test
xrelease
icebp
ret
jo
pop
sahf
addr16
jecxz
stos
leave
test
lods
xor
outsl
push
cmp
cli
xor
pop
lods
cwtl
mov
mov
mov
lret
adc
pop
in
jo
mov
jae
clc
scas
testb
addr16
pop
pop
in
lahf
cmp
out
call
jnp
call
insl
inc
dec
mov
fmuls
mov
lods
cmp
rcll
cld
rcrl
xor
sbb
jns
popa
sbb
lret
imul
inc
sub
aad
iret
or
add
enter
pusha
ret
mov
repnz
mov
add
add
adc
sub
pop
pop
pop
jb
adc
aam
ljmp
jne
test
mov
mov
cld
cli
push
fisubl
cmp
bound
and
imul
movsb
adc
jnp
scas
cmp
neg
push
mov
pop
loop
inc
mov
push
fldenv
shll
ficoml
add
and
adc
push
cmp
insl
movsl
aam
jb
lds
repnz
mov
mov
ds
pop
lods
loopne
ja
add
mov
sub
stc
fxch
cmpsb
add
lds
js
mov
mov
leave
adc
jecxz
les
jae
and
mov
jmp
dec
int3
dec
jecxz
in
push
sub
add
or
push
int
ss
pop
push
lret
fsubs
fbstp
aas
mov
sbbl
dec
stos
xchg
in
push
mov
test
rorb
xchg
dec
loope
popf
xlat
xor
jmp
push
mov
cwtl
mov
cwtl
cmp
loop
sti
push
ret
or
sbb
cld
mov
inc
xor
out
pop
fildl
sub
out
in
cli
mov
inc
pusha
add
push
pop
data16
adc
mov
sbb
idivb
fcompl
pop
out
pushf
call
adc
push
mov
sar
add
xchg
mov
lahf
push
cmp
dec
mov
in
jae
scas
gs
inc
in
divb
mov
jg
cmp
in
mov
inc
insl
lret
jae,pn
hlt
cmp
test
pop
mov
pop
lds
inc
pop
mov
popf
xlat
xor
imul
addl
push
fs
rcl
test
out
imul
enter
imul
es
imul
out
popa
xchg
enter
push
inc
and
and
cmp
jmp
xchg
push
ret
push
cmp
jo
in
jo
hlt
rcl
push
ljmp
cmc
pop
leave
test
test
and
ss
lods
jae
pop
les
mov
inc
js
mov
and
das
mov
cmp
cmp
loop
dec
or
in
or
add
push
imul
vrsqrtss
dec
dec
push
xor
ds
xor
push
pop
pusha
cmpsl
or
sbb
lret
leave
sahf
push
xor
loope
push
imul
int3
repz
and
push
or
mov
aam
daa
clc
fwait
rcr
pop
mov
sub
lods
mov
mov
test
sbb
loope
aaa
dec
cmpsl
add
int
pop
mov
mov
sar
int
or
cmp
popf
sbbl
lret
out
fsubrl
les
sub
add
lods
imul
pop
and
arpl
addl
orl
mov
test
int
push
jns
adcb
xor
imul
adc
sub
xor
call
mov
mov
inc
push
je
jns
xchg
jmp
xor
xchg
and
jbe
cmp
sbb
pop
fdivr
add
dec
mov
roll
cmp
movsl
sbb
aaa
and
and
fcoml
sahf
pcmpgtb
ds
pop
movsl
mov
addb
pop
mov
mov
jno
jge
xor
mov
fcomps
sub
jno
jbe
mov
inc
stos
or
in
push
in
mov
jo
xchg
mov
push
and
adc
xchg
push
or
mov
out
mov
popa
mov
lock
lods
stos
lret
jo
and
jl
mov
loope
mov
mov
sub
lcall
hlt
xor
xchg
out
roll
testb
mov
enter
xor
xchg
das
jmp
xor
test
push
inc
rcrb
mov
js
inc
jge
sub
mov
outsb
outsb
and
leave
sbb
xor
hlt
out
repz
jg
push
scas
pop
adc
add
xchg
jo
inc
xchg
adc
scas
pushf
popf
cmpsb
jge
mov
mov
je
xlat
xor
inc
sbb
call
fsts
test
pop
pop
push
pusha
mov
rolb
mov
add
push
add
adc
and
pop
gs
cmp
push
fisttps
push
test
sub
addr16
pop
mov
nop
fstp
inc
mov
rolb
push
sbb
jnp
out
ds
cmp
loopne
aas
jns
in
test
loop
add
mov
ss
ljmp
mov
popf
jl
adc
dec
in
mov
hlt
cmp
jo
imul
inc
lahf
mov
inc
lcall
mov
cmp
mov
pop
dec
arpl
sub
sbb
mov
mov
popa
sarl
lock
addr16
mov
scas
rclb
mov
push
mov
pop
cli
repnz
xchg
cmp
pop
xchg
fcomi
inc
outsl
arpl
dec
add
pop
jp
test
aad
inc
enter
out
ljmp
inc
push
adc
xchg
imul
repz
and
sub
sub
cmp
cmp
rcrl
xchg
test
ds
and
out
call
outsb
int
and
decb
or
jno
push
lds
test
sub
xchg
push
movups
xor
push
ja
jae
xchg
iret
insb
inc
out
add
rclb
and
lret
cs
xor
sbb
ret
sbb
pop
pusha
dec
mov
jg
push
icebp
push
rorb
jg
iret
fs
pop
sub
add
bound
adc
mov
push
ss
je
mov
mov
xchg
mov
decl
bound
xor
rcrb
test
dec
cmp
pop
test
dec
or
inc
imul
movsl
dec
out
add
pop
movsl
mov
xor
iret
cmp
jns
mov
push
mov
andl
xchg
shll
inc
repz
lods
inc
lods
repz
pop
repz
dec
mov
std
addl
cmp
lock
cmp
loop
mull
mov
add
xchg
inc
sub
xor
sahf
xlat
insb
add
xor
jb
xchg
loop
js
jns
lods
add
mov
pop
adc
add
rol
inc
mov
mov
cld
sub
ficompl
sub
add
xor
inc
enter
in
lock
sbb
dec
pop
mov
xchg
subl
stos
lahf
xor
mov
jns
jl
sub
push
adc
jbe
out
mov
mov
arpl
fists
call
push
inc
cmp
adc
popa
jae
rclb
rorl
xchg
aas
shlb
inc
aaa
jl
or
aaa
mov
ss
xor
jnp
xorl
loop
test
enter
es
push
or
cmp
out
pushf
jnp
sub
mov
sbb
popl
cld
cmp
sbb
adc
jnp
dec
vmwrite
test
sbb
mov
arpl
add
xor
out
mov
int
mov
mov
inc
dec
jb
scas
outsl
cmp
dec
xlat
pop
add
out
pop
xchg
fnstenv
or
icebp
pop
or
into
mov
sub
cwtl
cmpsb
adc
pop
dec
dec
lret
addr16
leave
inc
sarb
test
test
push
aam
sub
fdivrl
fstpl
jmp
sub
jg
pusha
outsl
inc
jo
in
js
mov
mov
dec
add
or
in
lods
pop
xchg
mov
xor
lahf
mov
hlt
pop
cmp
stos
in
loop
sub
dec
lods
pop
pusha
pop
xchg
inc
loopne
dec
loopne
jae
and
jge
inc
push
jmp
jge
push
in
xchg
stc
dec
cmp
mov
test
inc
cld
fucomip
fcmovb
call
in
push
lret
adc
add
sbbb
gs
adc
dec
sub
out
fsub
cmp
lds
adcl
test
xor
test
lds
mov
push
inc
stos
fstps
xchg
outsb
cmc
push
mov
cmpsl
insl
add
push
push
movsl
and
loopne
repnz
dec
insb
out
popf
sub
cs
mov
sub
xchg
and
sbb
sbb
jns
loop
ljmp
fildl
mov
mov
rcll
sbb
repnz
cmpsb
jecxz
push
nop
pushl
adc
repz
pop
rcll
sbb
pop
jmp
lock
xchg
aas
dec
hlt
and
pop
lea
jl
ret
cmp
adc
pop
fidivrl
fists
popf
inc
and
stos
ret
in
ret
js
pop
loope
std
adc
call
lock
push
add
xor
fldcw
xor
loopne
pop
arpl
in
or
mov
xor
mov
inc
fldcw
cmpsl
adc
sub
cmp
adc
daa
repnz
scas
je
jl
adc
out
dec
in
xchg
inc
movsl
dec
stos
lret
iret
xchg
add
pop
es
pop
imull
std
xchg
mov
dec
shll
mov
sub
imull
mov
pop
fwait
test
in
xor
in
xchg
mov
das
mov
xorl
cmp
notb
shl
push
lds
shrl
cmp
jo
test
insl
fs
adc
xorl
add
scas
fstpl
fildll
in
cmp
inc
adc
or
mov
add
addr16
push
xchg
cmpsb
mov
shrl
test
int
mov
test
outsb
lods
call
pop
mov
mulb
int
push
notl
les
in
pop
int
and
add
mov
jge
jl
push
adc
jnp
or
mov
lcall
daa
mov
cmp
dec
sub
enter
out
mov
lahf
push
imul
shlb
nop
pop
cwtl
filds
or
lcall
push
add
inc
jl
pushf
inc
push
pop
bound
gs
dec
pusha
fwait
sbb
inc
testb
movsb
push
push
sub
cmp
mov
jnp
out
jmp
outsb
xchg
or
jmp
xlat
adc
mov
decb
hlt
jmp
fimuls
dec
jg
stc
mov
daa
ja
mov
or
inc
xor
jle
mov
fmuls
test
push
sbb
fcomip
cmp
jno
out
subb
ja
sub
xchg
add
pop
mov
pop
popa
pop
ret
inc
xchg
out
sbb
inc
addb
push
xorb
ret
adc
ret
mov
and
popf
cmp
xor
popa
arpl
ss
int
push
lods
dec
inc
mov
in
shrb
mov
fisubl
xchg
ja
sub
xor
mov
out
stos
push
xor
pop
and
test
push
outsl
in
pop
and
mov
paddq
popf
jnp
pop
lret
mov
lahf
add
inc
and
mov
scas
ja
cmp
test
cmpsl
scas
out
add
xor
add
jg
es
imul
or
jmp
xor
repnz
push
cli
mov
into
push
cmc
enter
lods
inc
test
arpl
jl
or
jle
or
mov
lcall
push
insb
jge
push
jge
lods
add
fcmovb
mov
push
hlt
xor
push
ret
sbb
adc
or
test
in
mov
xor
pop
inc
sub
sub
enter
sbb
inc
sub
and
xorb
jb
call
add
sbb
les
rol
push
xor
out
or
test
fisubrl
lret
das
xchg
nop
sub
jge
sub
lds
mov
sbb
mov
cmp
mov
mov
pusha
xchg
and
cli
out
fcomps
fs
or
inc
jmp
out
rol
js
js
sarl
std
cmpsl
movsb
fsts
roll
out
sub
test
insb
ss
insl
mov
lods
mov
xchg
in
rolb
ss
and
roll
mov
dec
sbb
rcll
div
lods
cli
or
jnp
dec
lds
mov
cmp
adc
sub
pop
pop
push
xor
xor
inc
xor
clc
enter
cmp
sbb
sbb
push
push
and
ja
insl
xchg
xchg
xor
cmpsb
insb
fiadds
sbb
lods
mov
jmp
pop
jl
lods
cmc
xchg
cltd
inc
fisttpl
inc
dec
movsb
sub
mov
inc
sub
ljmp
shr
out
aas
mov
xchg
in
aas
in
xor
aaa
jge
adc
inc
jl
dec
mov
dec
mov
push
mov
ret
and
repz
fsubrl
lcall
xorl
dec
sarb
icebp
add
stos
push
and
xor
xor
daa
je
orb
push
push
psubusw
clc
push
insl
stc
mov
popa
xor
jmp
push
das
mov
lahf
repnz
cmpsl
shrl
lcall
jg
addr16
sub
cltd
jle
test
xchg
mov
and
cltd
push
jle
sbb
rcrb
or
pop
xor
cmp
pusha
cli
push
mov
mov
js
aas
and
ret
fildl
lods
sub
sub
jae
lods
ljmp
xchg
std
inc
xor
cmp
lea
xchg
pop
aad
in
gs
push
lds
test
or
pushf
enter
fcomp
in
clc
lock
dec
cmc
aad
dec
fdivrl
hlt
mov
into
jo
aas
cmp
jmp
mov
cmp
push
outsl
jno
loope
jge
ljmp
xchg
cmp
sub
jae
inc
mov
in
fwait
test
sbb
mov
pop
je
jecxz
stc
lahf
pop
insl
sub
test
test
shrb
popl
std
jb
popf
mov
sbbb
mov
xor
dec
inc
loopne
push
test
in
jne
or
fstps
dec
xor
lcall
mov
xchg
mov
xor
in
and
fmuls
gs
inc
shlb
dec
ja
imul
inc
ret
or
aad
data16
dec
adc
pop
dec
popf
fbstp
repnz
sbb
lock
or
push
sub
or
insl
mov
or
jne
stos
scas
sbb
jbe
aaa
sub
add
pop
fisttpll
push
adc
out
push
jl
outsb
push
sbb
push
push
pop
repnz
test
inc
xor
daa
push
mov
xchg
adc
mov
int3
out
loope
or
fiaddl
or
gs
sbb
je
inc
aaa
mov
loope
cmpsb
xlat
scas
cmp
daa
mov
push
jg
pushf
shlb
push
cmp
cli
xchg
popf
or
push
push
jno
call
les
clc
jp
pushf
dec
dec
int
push
arpl
sub
jnp
int
jae
jmp
dec
pop
xchg
jno
data16
call
daa
dec
add
xchg
mov
cmp
arpl
sub
pop
mov
pop
push
fstps
popf
fsub
stos
in
adc
fwait
xchg
xchg
movsb
mov
jge
shrw
adc
js
jle
sub
loop
js
or
mov
cmp
test
xchg
jmp
add
dec
dec
xor
jo
xchg
and
jle
dec
sub
jne
aad
jp
and
int3
fists
inc
lods
mov
ljmp
jb
add
jecxz
jne
inc
pop
inc
adc
push
sub
sti
pop
push
pushf
mov
sbb
xchg
inc
out
loop
mov
rclb
fs
push
data16
cmp
aas
repnz
dec
jns
mov
fwait
mov
es
push
lods
add
mov
out
mov
jecxz
call
cltd
insb
jp
mov
ret
rcl
cld
xchg
jp
ret
repz
or
iret
cmp
mov
mov
shrl
ss
ds
pop
fs
jg
lret
sub
mov
lds
pop
rcrb
cli
rolb
icebp
shrl
cmp
add
movsb
movsb
cs
add
push
mov
xchg
lods
push
mov
movsl
mov
add
mov
jno
mov
jns
in
mov
xchg
in
inc
sbb
outsb
jno
scas
cmp
mov
mov
push
call
repnz
push
and
popf
sti
xor
inc
sbb
inc
js
sbb
mov
adcl
filds
sub
dec
addr16
push
xchg
loop
cld
pop
add
dec
jnp
faddp
ret
loope
xlat
cmp
adc
lods
faddp
mov
test
sbb
outsl
mov
fwait
aaa
sbb
push
hlt
jmp
xor
and
xchg
aam
fbld
xor
test
mov
xchg
push
insb
shrl
out
fstpt
inc
inc
lret
or
jnp
cmp
lods
out
and
adc
adc
cmp
lcall
and
in
cmc
dec
sbb
pop
jnp
jecxz
pop
mov
sub
xorb
sbb
in
ja
inc
xchg
lea
cltd
adc
imul
lret
jno
xbegin
mov
shrl
mov
mov
jmp
push
push
pop
sbb
lahf
test
divb
adc
or
in
into
loop
lds
popf
pusha
mov
ljmp
pop
push
mov
push
mov
pushf
cmpsl
mov
xlat
push
and
push
mov
pop
aad
and
bound
adc
pop
stc
mov
push
mov
jns
lahf
inc
adc
fnstenv
xor
xchg
imul
test
add
fcoml
push
fsubs
mov
jmp
add
sub
in
int
test
mov
inc
int
push
pushf
or
pusha
out
cltd
cmp
cmpsb
movsb
mov
or
fs
into
jo
or
sbbl
das
dec
es
xor
das
cmp
repnz
adc
out
jb
sbb
dec
mov
adc
imul
int
sbb
jl
jl
xor
push
fldl
repz
inc
prefetch
or
pop
push
stc
popa
pop
pop
mov
scas
lret
movsl
inc
inc
cmp
xor
sbb
mov
dec
fstpl
rol
mov
pop
push
in
aad
add
dec
cmp
dec
lcall
mov
popf
loopne
lods
push
aad
dec
stc
rcrb
ss
stos
or
jge
out
pop
adc
and
mov
xchg
push
dec
mov
dec
jnp,pn
cld
mov
test
mov
mov
rcl
stos
xchg
jae
dec
lds
ret
jne
push
js
loope
add
add
addr16
popa
xchg
test
push
jno
aas
dec
pushf
loop
mov
mov
push
inc
pop
xchg
or
adc
xor
sub
adc
in
jecxz
call
xchg
mov
dec
sbb
pop
mov
xchg
xchg
leave
sbb
xor
cmc
sbb
leave
push
insb
cmpsl
icebp
shrb
mov
jg
pop
cmpsb
leave
add
mov
sbb
jge
loop
sub
leave
test
jns
pop
add
std
into
adc
nop
push
pop
mov
loop
cmpsl
cltd
ret
mov
loop
insb
jecxz
mov
cmpsl
and
push
das
add
inc
stos
js
xor
std
movsl
cmp
stc
or
out
cmp
arpl
mov
pushf
lret
insl
movsl
clc
xchg
and
lret
inc
adc
mov
iret
arpl
into
sbb
insb
es
or
fsubs
scas
ret
loope
loop
scas
sahf
mov
stos
adc
idivb
pop
pusha
sub
add
adc
and
lods
rclb
pop
adc
js
leave
mov
pop
ja
lods
inc
mov
nop
pushf
sub
xor
outsl
lahf
xchg
rolb
sbb
cld
or
ret
out
xchg
xchg
and
lods
mov
imul
fs
js
mov
or
add
inc
xchg
test
outsl
mov
dec
lods
loop
push
dec
xor
cmc
loop
das
add
pop
jno
dec
jnp
addb
and
or
or
popa
jecxz,pn
and
dec
fdiv
adc
test
push
cmpsl
dec
push
and
call
add
scas
xchg
xor
pop
jno
jg
pushf
lods
add
inc
bound
pushf
out
rorl
bound
aas
sub
push
inc
adc
je
movsl
repnz
fldl
xor
gs
int3
add
stos
rorl
js
or
ja
ret
sub
mov
and
cmpsl
in
cmp
cwtl
leave
iret
arpl
pop
mov
xchg
sub
lods
xchg
je
add
out
mov
arpl
inc
mov
sub
fidivrs
pop
je
jno
push
shll
push
mov
sbb
push
clc
pop
cmp
sub
jbe
adc
and
cli
ss
xor
add
js
sbb
pop
lds
xchg
pushf
cmp
cmp
push
and
int3
out
add
out
xchg
rcll
xchg
xor
push
jb
mov
lret
pop
rol
inc
stc
push
push
push
jae
sahf
in
insb
loopne
adc
aaa
lahf
addr16
imul
insb
push
shrl
jl
and
mov
cmp
imul
mov
cmp
xor
cmp
xor
stos
out
insl
insb
insb
leave
repnz
and
jmp
sbb
mov
jb
mov
inc
popf
hlt
xchg
add
push
icebp
mov
inc
xor
inc
loop,pt
iret
xchg
pop
jno
mov
idivb
int
adc
cwtl
and
addr16
popa
out
ljmp
xor
dec
mov
cmpb
push
test
and
xor
xchg
shlb
sub
fsts
arpl
mov
adc
orb
and
mov
aas
out
add
push
mov
imul
mov
jge
cmp
or
shll
jmp
ds
mov
mov
and
adcl
dec
cmpsb
push
testb
jo
or
mulb
pop
mov
shl
cmp
inc
pop
inc
and
pop
into
mov
push
nop
sub
add
shlb
fnsave
push
fsubrl
mov
jl
gs
cwtl
enter
jle
fs
daa
dec
jo
les
repnz
addr16
inc
in
push
and
rcrl
stos
mov
scas
add
in
rcl
movsl
dec
mov
mov
mov
insl
fisubl
xchg
pop
ret
stc
test
aas
in
rdpmc
or
inc
mov
movsb
lahf
jbe
cmp
xor
jns
leave
push
sbb
add
aas
mov
mov
pusha
sbb
bound
mov
mov
push
sbb
jp
jmp
mov
sub
sub
cmp
addr16
mov
out
int3
mov
lods
cmp
aad
add
xor
shlb
jg
imul
sbb
pop
push
mov
rclb
jne
mov
addr16
repnz
insb
jae
push
inc
pop
enter
mov
lock
jp
push
push
outsb
shll
push
cwtl
dec
out
and
dec
and
ret
out
stos
and
mov
cmp
xchg
stos
adc
test
popf
nop
cs
rorl
push
jge
into
push
cmc
in
dec
rolb
bnd
cltd
test
mov
xor
and
lea
mov
pop
out
xor
pop
sbb
push
xchg
sarb
aad
lret
jae
loope
hlt
scas
stos
push
mov
push
xor
dec
imul
add
jno
nop
jne
loope
cmp
sbb
scas
les
pop
shrl
inc
mov
imul
mov
jge
or
and
rcrb
adc
adc
enter
fisubrl
nop
add
repnz
cld
mov
fstpt
sti
add
test
fdivl
xchg
cmc
or
int3
jmp
aas
out
pop
in
xchg
addr16
push
cmp
lods
sti
jmp
jp
and
jg
lock
mov
les
add
or
add
adc
mov
frstor
xor
mov
shrl
jo
icebp
cmpsb
cmp
test
xchg
gs
inc
jnp
cld
pop
sbb
nop
or
outsb
dec
fsubs
xchg
pop
push
aam
mov
sbb
sub
mov
jle
sub
rclb
rcr
loope
and
outsl
or
cmp
cwtl
test
sub
movsb
cmpsl
sahf
cmpsl
dec
xchg
mov
lret
add
xor
test
lock
pop
cmp
add
jne
pop
shlb
mov
xor
incl
sbb
push
repz
rcrb
mov
rcll
insl
cmp
ljmp
xor
cmpl
outsl
and
insl
or
or
lock
sbb
adc
add
scas
jle
mov
ds
nop
inc
sbb
or
rorb
cwtl
das
mov
xlat
std
and
loope
addr16
cli
aaa
xlat
jns
call
push
xchg
jmp
jecxz
test
pop
jae
dec
xor
push
push
insl
fwait
stos
add
push
jp
sub
xor
sub
mov
iret
or
mov
add
add
iret
push
jae
fsubrl
dec
push
sahf
and
inc
inc
pop
fdivrp
ficoml
sahf
loope
cltd
sbb
lea
xchg
or
or
push
in
add
in
xor
mov
nop
rcrb
stos
aas
js
fidivs
xchg
push
out
sub
sub
leave
aas
sub
add
push
pop
xor
cmp
jl
jp
popa
insb
add
incl
call
push
inc
and
lods
gs
and
push
scas
stos
insb
dec
jb
cld
psubusb
in
and
push
pop
push
inc
mov
mov
jl
scas
in
fwait
dec
mov
add
cmp
outsl
xchg
mov
dec
pop
cmp
xor
movsl
pop
imulb
cmp
mov
rcll
jl
pop
pop
repnz
pop
push
pushf
mov
inc
jp
mov
aam
push
emms
inc
push
int3
out
bswap
int
or
jae
rol
adc
rcll
andl
cli
sarl
xchg
test
hlt
mov
popa
dec
cmp
into
fildll
cltd
cmpsb
xchg
jno
nop
mov
daa
and
lods
nop
push
frstor
jecxz
cmp
cmp
iret
mov
sub
fstl
adc
popa
pop
mov
xchg
stos
inc
mov
lock
mov
shl
push
stos
rcr
mov
movsb
aaa
sub
fisttpl
add
dec
add
xor
pop
repnz
push
outsl
into
pop
mov
out
fcomps
imul
lods
cmc
lods
sbb
push
mov
pop
int3
imul
mov
stc
cmp
inc
lods
test
xor
ret
scas
sbb
jne
cwtl
add
pop
cmpsl
push
jno
xchg
inc
arpl
inc
adc
out
fimull
push
sahf
push
or
sbb
pop
or
xchg
into
and
push
shl
popa
push
es
or
daa
dec
stc
fcoml
pusha
cmpsl
add
data16
xchg
out
push
pop
pop
stc
pop
and
imul
popf
xor
int
mov
outsb
push
int
xchg
inc
test
xchg
mov
inc
mov
lahf
aam
fisttps
in
cli
sub
enter
insl
push
ljmp
fsts
inc
cmpsl
push
cltd
insb
push
loope
lret
int3
dec
scas
btc
add
ljmp
sub
inc
ss
inc
sbb
inc
sub
dec
jo
sbb
insb
xchg
lock
lret
xlat
sbb
xchg
mov
imul
mov
in
mov
cmp
bound
xor
sub
push
ret
push
cmp
mov
fstps
sbb
mov
or
pop
push
gs
xchg
cmp
fcoms
pop
into
or
adc
xchg
jecxz
push
mov
xor
in
fnstenv
out
inc
adc
xchg
mov
or
bound
jle
inc
les
dec
fadds
loope
enter
push
addr16
test
je
jns
das
loope
mov
jge
rcrb
insb
idiv
mov
cmp
ja
nop
dec
push
mov
xlat
add
mov
loopne
inc
add
into
xor
stos
js
adcb
pop
jle
cmpsb
pop
imul
ja
test
dec
sub
add
addb
or
xchg
scas
push
cmpsl
and
fistpl
dec
adc
or
cmc
rorb
shl
pop
aam
fisttpl
mov
jbe
jmp
sub
movsb
adc
add
cmpb
add
push
fsubs
imul
push
adc
mov
movsl
and
push
iret
and
sbb
cwtl
lods
xchg
dec
mov
outsb
fwait
adc
jae
pop
popf
daa
jbe
xor
daa
mov
loop
dec
imul
xor
bound
lods
pop
ljmp
pop
inc
mov
les
and
sti
jbe
and
xchg
fisubs
dec
mov
sub
cmc
pushf
cmc
pop
aas
mov
xor
scas
push
cld
cld
hlt
mov
int
pop
cmpsl
cmpsb
sub
insl
sti
mov
sub
and
ja
xor
rorl
mov
fdivl
pop
mov
orb
stc
mov
sbb
ss
dec
cltd
in
sbb
out
lock
imul
faddl
int3
sar
in
and
das
sbb
shlb
cwtl
fmull
rolb
mov
ret
frstor
jbe
sahf
lcall
inc
xor
imul
inc
xchg
nop
jmp
sahf
insl
insb
mov
mov
push
cli
pop
pop
lods
pop
dec
addr16
sbbl
sbb
cmp
mov
lea
out
jne
jle
lods
lcall
and
cwtl
jmp
pop
fadds
cmpsb
dec
in
jae
push
pop
das
xor
sbbl
push
out
mov
push
iret
movsb
push
xchg
mov
dec
data16
lock
pop
dec
adc
stc
repz
dec
sub
lahf
call
in
adc
pop
lods
insl
mov
shl
xor
xchg
in
or
inc
int
push
jle
cmpsl
jg
pop
aaa
push
psubw
sti
add
shr
getsec
std
jp
mov
mov
cmpsb
stos
dec
in
dec
xor
pushf
mov
mov
jns
jne
rolw
icebp
dec
movsb
hlt
ret
inc
push
xor
push
push
out
jae
sbb
add
or
shll
xchg
add
je
or
pop
mov
in
adc
inc
icebp
stc
lods
rol
and
sbb
push
push
xchg
pop
stos
push
jnp
stos
bt
jnp
data16
add
push
pop
ss
scas
movsb
inc
outsb
ret
pop
or
pop
jno
in
clc
cltd
mov
push
mov
cs
sub
decl
test
mov
stos
jns
mov
dec
adc
adc
scas
es
jb
fs
mov
dec
ss
and
arpl
xchg
mov
ljmp
enter
addl
fcomps
stos
in
push
add
jl
pop
popa
js
cmp
sub
lret
pop
dec
push
in
rcrb
adc
inc
cld
lcall
lea
xor
pop
sub
decb
mov
je
add
sub
popf
add
dec
xchg
inc
mov
sub
dec
jmp
movsb
jmp
push
fs
mov
mov
hlt
xchg
jmp
pop
mov
pop
daa
icebp
mov
cmp
dec
jmp
rcrl
push
jp
cmp
or
jmp
mov
sub
dec
xor
pop
xor
push
pop
push
push
out
mov
cmp
jno
or
dec
mov
scas
inc
orl
mov
and
add
mov
and
cmc
adcb
jns
mov
test
out
xorb
cltd
adc
imul
lods
rol
jns
test
and
lods
mov
mov
adc
mov
in
pop
mov
xlat
movq
or
fwait
pop
adc
adc
push
add
push
loopne
or
dec
inc
out
in
testb
dec
push
jns
enter
fsubl
mov
lahf
push
push
jmp
push
lcall
pop
repz
mov
repnz
add
repnz
roll
popa
lds
sub
call
mov
sbb
push
dec
push
aaa
pop
sub
push
lahf
add
mov
adc
cmp
mov
lea
push
sub
mov
adc
push
mov
cmp
sahf
xchg
scas
inc
dec
cmpsl
xchg
pushf
xor
test
dec
mull
mov
mov
jmp
rorb
daa
xchg
scas
adc
cltd
sbb
hlt
push
mov
and
inc
push
push
sbb
lahf
test
push
ficompl
sbb
cli
or
add
std
cmc
mov
cld
inc
pop
mov
lock
scas
ficompl
int
movb
add
popf
scas
pop
out
push
push
mov
or
sbb
leave
sar
cmp
dec
cmp
roll
stc
dec
dec
int
inc
std
aaa
ds
jle
xchg
cli
outsl
cld
mov
push
mov
aas
enter
xchg
jo
lahf
mov
push
xchg
mov
xchg
nop
outsb
jecxz
xchg
mov
test
cld
cmp
std
jo
pop
imull
push
les
adc
mov
out
dec
fdivl
cmp
fdivrs
add
dec
mov
or
lea
dec
pop
sbb
dec
inc
add
in
shl
dec
add
xchg
popa
in
jno
fnstsw
cmpsb
pop
lods
shrb
pusha
dec
dec
in
mov
jno
lret
fbstp
add
pop
bound
sbb
dec
inc
mov
testl
pop
lcall
outsb
cmpsl
repnz
sub
mov
stos
mov
push
outsl
adc
jecxz
and
jecxz
pop
sbb
jbe
in
int
cmp
cmc
push
das
mov
ret
inc
das
test
sbb
aam
add
and
mov
xor
inc
test
imul
mov
inc
stc
movsl
rolb
out
adcb
nop
xor
xchg
lods
inc
sub
push
mov
and
aaa
xor
cld
mov
iret
sub
and
cld
sbb
jp
add
cmp
leave
aad
jns
rcrl
pop
aam
stos
out
or
arpl
sub
pop
cmpsl
mov
mov
fstpl
or
mov
xor
sahf
test
push
movsb
lahf
push
mov
popa
iret
cmp
cmpl
or
gs
jg
cmp
inc
sbb
loop
push
mov
out
imul
mov
mov
mov
dec
jg
fisubrs
and
xor
or
icebp
jns
pop
ljmp
jg
jg
out
in
cmp
pop
sub
bnd
mov
mov
push
fisubs
icebp
enter
sbb
sub
sub
test
addr16
mov
shll
arpl
xchg
outsl
cmpsb
mov
sbb
icebp
rolb
sbb
cmp
imul
pop
mov
jecxz
sahf
addb
fbld
les
lock
and
test
popa
inc
ret
and
push
xchg
repnz
fisubl
es
mov
cs
xchg
repnz
push
sbb
hlt
jnp
cmp
repz
sub
icebp
cmp
sub
ds
andl
int3
cmp
push
sbb
mov
lock
fistl
push
cltd
sti
mov
fndisi(8087
repz
out
xor
arpl
jbe
pop
std
jg
or
movsl
ret
xor
mov
movsb
cld
sbb
fistpl
icebp
int
outsb
fdivs
shrb
call
iret
dec
cmpl
jo
mov
test
jns
movsl
inc
pop
pop
ljmp
mov
int3
inc
adc
outsl
xchg
xchg
aam
or
mov
jmp
fimuls
movsb
xor
arpl
push
dec
and
dec
mov
pusha
jb
jo
or
clc
in
add
push
adc
ret
faddl
cs
xchg
in
xor
out
inc
lcall
cmp
pop
inc
aas
adc
test
push
xchg
cmpb
mov
jo
pop
push
aas
sbb
cmpsb
call
xchg
adc
and
dec
sbb
insl
fadds
std
jae
nop
js
popa
sub
dec
loop
sbb
aaa
insl
enter
leave
inc
imul
jnp
xchg
adc
fsts
scas
fmull
shlb
cmpsl
add
sub
cmc
dec
xor
mov
sbb
test
xor
fildll
sub
mov
repnz
mov
xchg
push
xchg
add
daa
stos
add
pusha
xchg
cli
popf
xchg
inc
pop
push
push
arpl
or
adc
outsl
cmp
jecxz
callw
dec
leave
or
add
in
jg
jmp
xor
pop
lret
popf
int
or
push
mov
dec
lea
sub
out
adc
xchg
xor
mov
jb
leave
pop
push
jle
mov
in
jb
push
xorl
out
xor
lds
pop
xchg
and
psubb
aam
or
sahf
jae
add
mov
sbb
iret
push
mov
mov
shll
sbb
sbb
adc
cld
rcrb
and
ljmp
jae
jle
dec
out
aam
orl
out
push
leave
mov
insb
jge
lahf
inc
add
imul
pop
aaa
sub
jmp
mov
or
pandn
mov
nop
or
push
cmpsb
scas
out
addr16
insl
xchg
mov
ljmp
rcll
push
xchg
movsb
jne
jnp
std
push
movsl
repnz
insl
lea
and
mul
xor
sti
sub
lock
in
jl
mov
mov
or
lret
sbb
xor
stos
jg
mov
in
popa
mov
jb
push
mov
inc
cld
mov
jbe
bnd
xchg
push
push
ss
fldl
fisttpll
dec
push
cwtl
loop
mov
testb
test
push
dec
call
in
xchg
ss
pop
ret
xchg
imul
mov
popa
jecxz
push
sbb
out
pop
jecxz
mov
insl
xchg
fdiv
lds
cs
js
mov
testb
cmp
out
xor
xor
xchg
jbe
hlt
dec
xlat
sbb
cwtl
inc
fwait
or
xlat
dec
lea
es
sbb
push
jmp
ljmp
dec
and
idiv
loope
xchg
outsb
das
jnp
mov
idivl
sbb
cs
cmp
jecxz
icebp
push
dec
push
aas
gs
dec
dec
and
push
fldl
mov
stc
shrb
mov
xchg
adc
or
or
pushf
dec
imul
or
aas
scas
adc
sub
lea
add
and
int
int3
xor
imul
xor
cmp
in
xchg
je
push
mov
xlat
adc
shlb
or
or
sbb
mov
fimuls
cmc
stos
pop
cli
lds
cld
shl
adc
and
into
sub
das
repz
cmp
jns
cmp
lods
cmp
push
fsubrl
cmpsl
cwtl
in
sub
fcmovnu
fnstenv
inc
fwait
push
ds
adc
mov
divb
fsts
mov
cmpsl
mov
js
dec
inc
iret
nop
sbb
sbb
mov
stos
pushf
mov
pusha
out
cwtl
movsb
in
inc
pusha
mov
cwtl
mov
add
dec
jnp
pusha
pop
hlt
insb
pop
mov
lret
sbb
push
ret
insl
jae
insl
scas
cld
xchg
icebp
stc
ficoms
xor
movsl
mov
icebp
rclb
pushf
and
stos
loopne
lret
add
sub
out
call
dec
inc
jnp
cmpsb
test
rcrl
sbb
push
adcb
mov
push
in
int3
adc
mov
lods
mov
mov
cmpsb
mov
pop
pop
sahf
dec
stos
mov
out
pop
or
jmp
loop
mov
stc
das
cmp
sub
pusha
sbbl
int3
or
jge
fisttpl
or
sbb
into
sbb
fnsave
mov
dec
subl
popf
stos
or
cmpl
or
fs
cld
clc
rclb
cltd
cmp
sbb
lods
push
mov
movsb
mov
xchg
mov
xchg
into
in
push
mov
stos
jno
data16
mov
fcmovu
cmc
lods
movsl
jno
call
xor
movsb
adc
cmpsl
inc
sbb
push
dec
inc
push
adc
loopne
add
in
popa
mov
out
and
sub
stos
pop
mov
and
dec
in
pop
sti
jmp
inc
sub
jp
jmp
xchg
repz
stos
push
or
mov
adc
pushf
jge
je
fxtract
fld
mov
lahf
fsubl
or
xlat
mov
orb
aas
out
cmp
cmp
ss
fsubrs
rolb
sbb
sahf
sbb
faddp
sbb
stc
rol
sbb
xchg
mov
rcr
inc
and
inc
sub
push
push
push
fcomps
pushf
adc
outsb
inc
insb
adc
jb
scas
repnz
jmp
scas
ja
jmp
xchg
loope
add
push
cmp
stc
outsb
xchg
movsl
insl
test
jnp
inc
ds
fdivl
imul
shll
xchg
mov
loop
in
mov
mov
gs
mov
push
and
das
pushf
pop
sahf
pusha
and
sbb
fs
ja
jns
in
jae
aam
enter
bound
dec
fldt
jns
inc
adc
lcall
jg
push
jmp
aam
cmp
fnstcw
imul
jnp
pop
aaa
cmp
test
adc
pop
mov
ds
xchg
rcr
stos
xor
fsub
out
mov
out
rorb
or
std
cmpsb
outsb
shll
je
jbe
rclb
mov
dec
mov
sub
pop
mov
mov
aam
sub
stos
inc
cmc
pop
cmovle
lea
fwait
mul
fs
ds
fsqrt
ret
pop
xchg
pop
scas
xchg
shll
data16
nop
sbb
mov
xchg
loop
cmp
xchg
call
loope
and
mov
movsl
ds
push
and
arpl
cmpsb
int3
sbbl
add
stos
dec
fistpll
imul
mov
mov
inc
jg
or
ret
pop
bound
xchg
mov
hlt
add
insb
frstor
cmp
jns
and
inc
std
cmp
hlt
lret
add
adc
push
mov
add
outsb
mov
jle
icebp
mov
or
sbb
sarb
stos
xor
fisubrl
sbb
aam
fucomip
push
in
dec
sbb
rolb
inc
and
xchg
inc
sbb
js
mov
mov
stos
pop
shll
nop
hlt
sar
mov
rcl
push
mov
mov
push
je
jb
iret
pop
pop
xor
fldl
test
sti
mov
xchg
mov
pop
pushf
xchg
mov
xor
add
fcompl
imul
lahf
daa
fidivl
adc
push
incb
adc
push
pop
sub
stc
mov
xchg
sbb
sbb
pop
xlat
int
les
enter
ret
out
loop
and
dec
cltd
lea
push
mov
jns
pop
imul
scas
fcmovbe
inc
mov
ds
mov
ss
bound
pusha
jbe
xchg
test
inc
ja
and
mov
sbb
adc
aaa
arpl
adc
lds
push
sub
sbb
push
xchg
xor
mov
push
in
xchg
mov
sbb
or
loope
out
cmpsl
mov
shl
cmpsl
add
jnp
dec
add
in
stos
repz
insl
inc
jge
aaa
pop
mov
daa
imul
movsl
xchg
mov
jbe
popf
nopl
xor
into
insl
repz
pop
adc
or
je
loopne
pop
xchg
fs
lds
or
xchg
sbb
sahf
inc
mov
js
cs
fisubrs
xchg
xor
outsl
cmp
jno
sbb
fdivs
cmp
cmp
loop
loopne
lret
push
cmp
and
testb
stos
or
cmp
lahf
loope
dec
stos
sbb
add
sbb
cmp
pmuludq
mov
jae
mov
mov
les
fisubrs
hlt
cmp
fwait
and
jbe
inc
jnp
divl
sbbb
inc
jecxz
mov
push
mov
std
in
adc
mov
jmp
pop
int
hlt
xchg
jo
mov
sbb
mov
lahf
sbb
mov
je
aad
mov
dec
cs
dec
dec
je
mov
call
pop
out
popa
and
fwait
adc
mov
mov
lds
add
xor
mov
out
or
cmp
flds
lret
into
in
push
test
xchg
mov
nopl
pushf
pop
gs
lret
mov
adc
movsb
cltd
dec
dec
rorb
lret
insb
or
lea
loop
popf
cmp
enter
loopne
loop
add
fs
xor
cmp
sarl
jmp
cld
rcr
insl
pop
jne
inc
mov
dec
sub
out
shll
mov
inc
mov
and
add
dec
jge
sub
dec
icebp
pop
outsb
mov
push
cmp
in
mov
lds
mov
push
jl
add
pushl
sbb
sbb
inc
lret
inc
jbe
cs
xchg
lods
and
je
sbb
pop
fimuls
es
inc
add
mov
sbb
aam
inc
pop
push
test
clc
push
das
insb
ret
int
fimuls
cmp
cmp
arpl
and
add
dec
jne
xor
mov
mov
jb
lahf
sti
mov
out
inc
inc
xor
mov
test
lds
ss
and
push
out
dec
nop
jb
dec
xor
outsl
or
dec
xchg
or
adc
cmp
mov
adc
fwait
mov
pushl
mov
cmp
xlat
hlt
push
fcompl
xchg
in
mov
in
cli
dec
insb
xchg
inc
fistps
push
repnz
int
ret
dec
xchg
in
dec
hlt
sub
inc
in
or
cmpsb
mov
out
pop
mov
xchg
jl
adc
add
cwtl
ljmp
add
push
and
lahf
aad
movsl
jae
dec
or
push
push
sub
or
jp
test
test
sbb
push
dec
andb
negb
dec
mov
ljmp
sub
jae
mov
push
or
and
in
mov
mov
orl
sbbb
shrl
mov
loope
sahf
pop
inc
aam
popa
cmp
mov
pop
push
aas
cmp
fsubrl
inc
jb
push
xor
aas
test
mov
pusha
mov
addr16
adc
jns
gs
pop
fmuls
mov
ret
jmp
jo
mov
sub
ret
xchg
cmpsb
cltd
paddusb
addr16
dec
pop
jg
insb
push
lcall
dec
fsubr
es
xchg
dec
test
mov
fsubs
adc
divl
push
inc
stos
push
cmc
jb
rolb
and
or
mov
mov
cmp
push
or
or
pop
imul
xor
rolb
in
movsb
mov
xor
loopne
mov
jg
pop
out
inc
pop
test
xchg
inc
xor
and
mov
xor
mov
or
stos
enter
mov
aam
arpl
cmp
jno
xor
sahf
lcall
and
xor
lds
imul
jmp
mov
jbe
mov
mov
pop
mov
pop
out
lcall
cwtl
jb
gs
sbb
popa
stos
pushf
xor
jecxz
cli
cmp
or
loope
outsl
lods
sarb
ja
addps
mov
push
adc
xchg
inc
fcoms
xchg
adc
lock
mov
xchg
inc
or
ds
mov
add
pop
pushf
inc
adc
lds
not
incb
push
mov
dec
dec
xlat
and
xlat
roll
test
fistpl
cmp
mov
jecxz
test
xor
sysenter
dec
lock
cmp
gs
mov
int
js
repz
mov
dec
sbb
lods
pop
test
push
push
clc
subps
sbb
xchg
scas
or
sbb
js
mov
sbb
js
mov
rcrb
in
adc
imul
and
in
push
dec
cs
sub
mov
pop
test
aad
mov
mov
sbb
outsb
in
adc
adc
or
dec
adc
adc
inc
mov
mov
mov
pop
push
mov
sbb
dec
ret
mov
in
subb
fs
mov
leave
insl
jo
inc
dec
in
pop
arpl
push
andl
lret
jmp
xor
mov
loopne
lcall
movsl
xor
add
jae
pop
or
jmp
add
xchg
cmp
sbbl
mov
jns
pushf
add
in
mov
push
dec
adc
xor
movsl
inc
xchg
ss
mov
jle
mov
xchg
jb
and
pop
mov
sbb
xchg
xchg
ret
aad
out
fidivl
jge
scas
je
stos
hlt
jg
and
in
sbb
push
mov
leave
jnp
cmp
sbb
das
sub
ret
push
mov
sbb
cmp
xchg
int
xor
sbb
out
push
data16
cmp
jmp
div
pop
fdivrl
sbb
mov
lret
dec
mov
mov
add
call
add
or
push
pop
mov
xor
into
inc
mov
jmp
mov
xor
test
xchg
pop
call
push
mov
sub
fwait
iret
je
sub
jne
sbb
fstl
dec
aad
aad
js
xor
add
cmc
mov
es
jb
cmp
xlat
loop
cmp
movsl
mov
adcb
movsl
mov
sbb
ret
xchg
dec
dec
insl
and
idivl
bound
fbstp
mov
into
lods
out
ror
lret
call
loope
scas
mov
or
popf
and
mov
xor
inc
insl
xor
lods
mov
in
das
rorl
and
xchg
stos
int3
out
push
jno
rclb
dec
leave
mov
pushf
bound
sahf
or
xor
pop
cmp
push
pop
sbb
fcmovnu
cmp
fiaddl
out
mov
arpl
orps
mov
jns
stos
out
daa
pusha
sar
rcll
lret
add
sbb
pop
getsec
ja
cmp
int
insl
divb
push
add
sahf
fiaddl
pop
out
pushf
jecxz
mov
mov
addr16
push
mov
xor
fwait
clc
repnz
mov
divb
hlt
in
mov
push
xchg
mov
outsl
mov
dec
mov
out
cmp
push
repz
cltd
dec
jl
jnp
jae
mov
mov
sbb
clc
clc
cmc
mov
cltd
pop
jle
out
int3
pushf
push
cmp
sbb
jge
pop
mov
jbe
in
rorb
push
pop
push
rcl
mov
sub
movsb
sbb
shr
dec
and
test
xor
cmpsb
daa
and
dec
adcb
lahf
jnp
dec
inc
dec
js
testb
mov
xchg
fbld
icebp
xor
rolb
mov
fwait
or
sar
pop
sub
stos
into
and
ds
fadds
dec
loope
stos
dec
out
xor
ds
mov
addb
daa
in
and
add
mov
xor
push
add
inc
mov
cmp
mov
je
xchg
test
lock
add
xor
outsl
cmp
ja
add
inc
iret
pop
mov
ljmp
add
in
mov
rolb
sub
ja
jmp
inc
stos
aam
in
insb
adc
leave
sub
rolb
stos
jmp
mov
jo
mov
xchg
xor
arpl
push
movsb
shll
arpl
out
or
faddl
cmp
fistl
lahf
lea
aas
das
xchg
mov
sbb
sub
out
cli
es
andb
nop
pop
mov
out
insb
inc
cmc
push
mov
rcl
jge
lock
mov
mov
dec
pop
test
lcall
ret
testl
pop
in
jne
les
sbb
enter
inc
mov
loope
sbb
inc
rcll
sub
pop
ret
or
inc
pushf
jbe
pop
push
or
and
sahf
xor
ds
push
jle
add
inc
out
pop
pusha
xor
aaa
cmp
jmp
jae
fimuls
enter
jmp
stos
test
push
jle
cli
lea
daa
pop
push
es
mov
dec
sub
sarl
xchg
cld
ljmp
push
mov
iret
int
cld
adc
or
idivb
cmpsl
stos
mov
mov
add
outsb
or
imul
xchg
sbb
pusha
shlb
xchg
in
jo
pop
std
sti
xchg
movsl
or
int3
pop
test
xchg
and
push
jg
and
xchg
inc
and
loop
xchg
jg
sahf
aas
dec
jl
mov
loope
ja
or
mov
aas
dec
stc
outsb
push
sub
jl,pn
inc
cmp
jo
mov
inc
ret
testb
in
into
sbb
aad
pusha
addr16
pop
pop
daa
push
jmp
adc
xor
mov
std
fnsave
mov
push
push
add
test
inc
cwtl
push
fs
mov
aas
jne
arpl
jno
xchg
pushl
mov
xchg
in
shl
mov
addr16
mov
sti
mov
arpl
hlt
and
jo
jo
ja
push
es
adc
xor
fnstcw
imul
sahf
outsb
dec
xorb
xchg
push
outsl
negb
push
mov
imul
jmp
out
sbb
mov
fwait
jge
push
or
adc
lds
cmp
sbb
add
out
or
push
aaa
fsubp
test
movsl
pop
dec
imull
cmpsb
xchg
js
test
or
adc
gs
movb
adc
sti
cltd
cmc
and
mov
ja
int
jo
inc
shrl
insb
xchg
enter
cmp
negl
jl
adc
into
mov
fsubl
add
sahf
fisubs
inc
cmp
inc
fwait
cmp
pop
mov
das
sti
ret
iret
shl
lret
and
icebp
or
mov
push
push
or
dec
xor
jb
sti
xchg
push
stc
pop
idivl
sbb
xor
clc
jo
cmp
xchg
fcoml
lods
mov
push
cltd
aas
jo
out
cmp
xchg
xchg
ret
jae
sbb
fisttpll
testb
jl
xchg
inc
push
and
jno
xor
mov
cmp
test
pop
sbb
out
cmp
mov
in
xor
dec
sbb
mov
inc
mov
push
sti
push
cmp
out
adc
push
out
lahf
sub
push
xchg
loop
shrb
mov
sub
jae
dec
jecxz,pn
mov
pop
mov
dec
or
rcll
add
arpl
pop
xchg
add
cmp
jns
add
sub
loopne
cmp
mov
jl
ret
xor
dec
cli
int
mov
pop
mov
cmp
or
cwtl
mov
sti
cld
loop
mov
and
gs
clc
fidivl
mov
lret
cs
mov
xchg
add
push
hlt
cmp
int
imul
mov
adc
test
scas
xor
aaa
fldenv
inc
fdivl
xlat
dec
xor
pop
sub
or
lods
pop
xor
sbb
add
addr16
push
xor
cmp
mov
xchg
push
popa
popa
sub
adc
mov
ja
std
stc
sbb
fnstenv
mov
pusha
pop
adc
adc
mov
out
inc
ja
in
mov
mov
cmpsb
jle
add
xchg
cwtl
pinsrw
xchg
sub
push
push
pop
pop
repz
jmp
gs
add
or
mov
in
pop
mov
lds
dec
je
cwtl
push
orl
xchg
js
or
sahf
cmp
push
jb
pushf
repnz
xchg
sbb
cmp
push
cmc
mov
mov
fs
xor
sti
jo
mov
sti
ret
cs
nop
add
fimull
xchg
repnz
jle
adc
in
xor
insb
xchg
or
stc
stc
jmp
sbb
mov
push
ret
andl
cmc
pop
lea
sbb
iret
inc
dec
jl
les
ret
out
pop
push
add
fxch
dec
jle
jns
xchg
and
or
mov
es
icebp
stc
mov
pop
add
mov
xor
xor
push
or
daa
xchg
mov
push
pop
mov
and
js
push
popf
aam
fistps
mov
leave
sbb
lahf
outsl
int
dec
lods
loopne
or
fs
and
test
jo
jecxz
mov
xchg
in
outsl
xchg
ss
push
dec
and
ror
sbb
cmp
push
dec
call
or
jle
or
mov
or
lea
sbb
xor
addr16
xchg
pop
les
movsb
sbb
sbbl
push
xor
pop
std
jbe
adc
sti
adc
fucom
fnsave
fidivs
es
enter
push
aad
ss
sub
inc
adc
pop
dec
xchg
cmc
fisttps
aaa
insl
sbb
adcl
movsl
std
sbb
ja
cwtl
xchg
jl
push
insl
das
mov
rdpmc
sbb
push
cmp
or
je
cmp
xor
aad
pop
pop
lods
sbb
repz
ret
sahf
mov
jecxz
out
fdivr
sbb
mov
add
mov
add
sub
cmp
adc
out
lcall
daa
bound
jp
out
mov
out
cwtl
mov
popf
jb
orl
in
add
xor
cli
inc
mov
push
leave
pop
jle
addr16
xor
out
mov
adc
cld
sahf
inc
ljmp
adc
and
jecxz
lcall
jle
fadds
in
dec
scas
aad
or
int3
dec
inc
and
push
sub
cltd
clc
leave
xchg
inc
xchg
cmp
insl
fsubrs
xchg
adc
and
pop
xor
mov
add
xchg
jbe
cld
mov
dec
or
mov
cmp
pushf
das
iret
scas
daa
faddl
and
pushl
mov
dec
mov
cmc
lock
cmp
cli
lods
mov
cmpsl
jge
jae
jne
sub
pop
mov
sub
lods
xor
fmuls
adc
imul
in
loop
and
clc
std
orb
js
push
sbb
out
movsb
cmp
xlat
popa
out
outsb
lock
test
ja
cltd
stos
repnz
clc
out
mov
inc
mov
loope
movsl
jl
push
cmpsb
dec
and
mov
rclb
inc
cmc
popa
add
cmp
jne
xchg
fiaddl
xor
ja
lcall
xchg
lret
outsb
aam
test
inc
les
adc
gs
mov
pop
add
movups
pop
push
xlat
sub
loop
inc
xchg
add
push
or
adc
rcrb
lods
nop
in
mov
push
pop
jne
sbb
lcall
cmpl
xor
in
in
mov
or
js
repnz
out
xchg
repz
push
out
aad
lahf
stc
fldl
gs
mov
adc
pop
adc
loope
movsb
and
pop
out
jle
daa
outsl
fisttpl
mov
jg
push
fstl
out
out
mov
inc
das
decl
and
dec
cmc
fld
stos
movsb
mov
xor
ret
ret
inc
push
xchg
rcrl
inc
popl
js
scas
pop
movsl
clc
mov
mov
sub
push
mov
mov
and
cwtl
clc
add
pop
add
mov
push
shl
mov
lret
mov
mov
or
rcrb
cmp
gs
lock
sbb
pushf
stos
int
xor
add
stc
repnz
inc
cld
dec
mov
jp
xor
mov
loope
push
xchg
mov
xchg
dec
lahf
and
adcb
push
xor
mov
les
fcomps
mov
mov
jne
addl
fadds
and
mov
push
insb
lea
mov
mov
xorl
lods
test
pop
lret
or
add
push
or
mov
popa
sbb
adcb
jmp
inc
in
sahf
jmp
das
mov
or
push
and
pop
push
mov
jne
lods
imulb
les
fst
dec
aam
sub
xor
cmp
pop
and
xchg
xor
addr16
hlt
hlt
sub
rolb
ret
out
cld
and
inc
xchg
out
push
cmp
lret
mov
and
xchg
xor
cs
andl
jp
scas
dec
fstpl
cli
lods
pop
push
shll
mov
mov
mov
lret
jb
inc
ljmp
fildll
mov
fimuls
inc
and
fdivrp
sti
icebp
ljmp
mov
js
cld
out
pop
les
mov
cli
pop
in
or
roll
call
push
dec
icebp
and
das
or
ljmp
in
mov
push
mov
scas
mov
hlt
lods
movsb
lea
push
and
mov
sbb
fldl
inc
fcoms
pop
cmp
pop
fsubs
pop
out
aam
mov
fisttpll
xchg
out
cmp
jae
sbb
pushf
push
cmpsl
adc
outsl
stc
pop
ja
loopne
in
jbe
mov
dec
mov
movsb
adc
mov
iret
test
xchg
aaa
negb
stc
push
lock
popa
pop
jmp
or
pop
daa
bound
jbe
scas
rcrb
mov
adc
pop
test
lods
gs
clc
aas
scas
add
pop
fildl
test
fisubl
out
add
enter
mov
out
add
imul
pop
inc
mov
push
in
lds
dec
loop
loope
jae
aaa
mov
enter
jle
dec
mov
loop
cli
popa
jl
sub
cmp
mov
in
pop
dec
and
in
sub
adc
jp
test
movsl
pop
xchg
or
stos
pop
cmpsb
rol
push
lock
pop
pop
jecxz
movsl
pop
cmp
psrld
fdiv
push
push
fiadds
out
into
or
in
pop
jb
stos
dec
sub
in
sbb
jno
nop
xchg
dec
fisubl
int
fadds
dec
mov
fdiv
cltd
jge
fsubrl
add
sub
xchg
or
lret
test
or
je
jnp
inc
jl
pushf
movsl
jp
push
pop
imul
mov
lret
gs
jno
inc
adc
jg
test
jns
rcll
jns
push
mov
mov
mov
mov
fbld
js
pop
in
fnsave
push
out
and
sbb
outsb
stos
mov
repnz
pop
cmp
add
pop
daa
sbb
and
in
shrl
or
daa
add
cmc
cmpsb
cmp
cwtl
sbb
xlat
jbe
les
out
and
inc
dec
jmp
scas
repz
fstl
stos
ljmp
iret
pop
xor
mov
fcompl
mov
add
mov
negl
cltd
out
cli
mov
add
in
pop
xor
push
push
push
mov
dec
or
in
hlt
adcb
jns
iret
adc
subb
adcl
inc
push
sbb
nop
xor
out
push
loop
das
fldl
push
lods
jg
insl
fisubl
sbb
mov
pop
gs
jmp
mov
into
mov
icebp
imul
test
jp
or
or
aaa
mov
inc
inc
inc
pop
test
or
and
adc
mov
mov
mov
jmp
xor
pushf
pop
imul
sub
pop
js
adc
sbb
fidivs
das
inc
mov
pop
mov
imul
fdivr
push
adc
jne
mov
jns
inc
adc
ja
mov
push
lds
scas
fnstsw
mov
enter
jb
divl
fstpl
jp
pop
int
cmp
mov
dec
movsl
outsb
xchg
in
xchg
mov
mov
mov
ss
ret
cltd
loopne
int
lahf
mov
jae
movsb
add
rcrl
or
cmpsb
gs
cmp
lret
xchg
pop
mov
push
cld
push
cmp
in
xchg
or
push
repz
pop
jns
add
pop
xchg
outsl
inc
mov
mov
sub
in
xchg
mov
int
inc
jbe
adc
push
test
fsub
gs
das
in
dec
add
sub
addr16
sub
add
js
sbb
popf
imul
mov
mov
and
in
push
and
and
sbb
jecxz
fdivs
pusha
push
outsl
inc
or
mov
fwait
gs
and
ja
sti
push
jle
cltd
jne
adc
cmp
dec
jl
pop
out
push
mov
jmp
jle
adc
cmp
fucomi
xor
xchg
call
sub
mov
adc
popf
test
mov
aam
cmp
cmpl
sbb
pushf
cmp
or
xor
push
pop
lock
xchg
cmp
iret
scas
hlt
fadds
and
mov
out
pop
cltd
imul
xor
mov
ss
inc
push
rcrb
dec
leave
cmp
daa
push
loope
pop
lock
mov
testl
outsb
mov
cmp
mulb
xor
cmc
and
xchg
mov
sub
mov
pop
ret
mov
or
ret
js
scas
inc
sahf
sbb
jbe
xor
sub
xchg
aas
pop
lahf
and
cmp
xor
mov
mov
pop
mov
push
push
test
iret
daa
sar
lds
adc
add
test
cs
ficoml
hlt
sbb
adc
cld
jnp
mov
add
es
mov
sbb
sub
mov
add
jge
iret
mov
add
adc
mov
sub
dec
iret
push
mov
insl
jbe
shll
or
add
dec
and
jmp
xor
xor
mov
mov
or
xlat
inc
lea
lock
idivb
lock
movl
cmp
lahf
push
pop
mov
mov
dec
shll
dec
sub
out
add
mov
sbb
jge
fisubl
xchg
mov
mov
xor
xor
xchg
icebp
pop
dec
sub
adc
int3
jo
mov
and
cmc
dec
icebp
lock
and
sbb
fdiv
pop
and
ds
and
cmpsl
iret
jmp
test
push
push
pop
loop
out
stos
cli
loope
jns
sbb
and
push
mov
xchg
pop
js
adc
cmp
mov
inc
mov
jge
xor
lahf
ret
gs
or
xchg
loopne
je
data16
outsb
cli
fimuls
roll
pop
sub
push
inc
pop
mov
repz
repnz
leave
cmp
push
cmpsl
xlat
push
mov
adc
sbb
jno
mov
xchg
push
loope
fsubrl
adc
add
adc
sbb
divb
mov
cmp
or
add
push
movsb
in
jl
and
sti
dec
or
and
mov
push
adc
imul
inc
mov
push
mov
dec
mov
in
aam
dec
push
icebp
mov
lock
fcmovnu
jge
jns
popf
dec
iret
shrb
pop
mov
mov
mov
retw
cmp
out
push
cmp
js
mov
shll
ss
push
popf
lods
dec
mov
sbb
or
lahf
rorb
add
inc
pop
inc
push
repnz
sbb
pop
xchg
fs
enter
movsb
xchg
xchg
in
pop
aad
cmpb
jno
lret
sub
pop
stos
pop
std
fcoml
fs
lods
sbb
jnp
jg
int
push
lods
inc
dec
inc
inc
or
and
mov
stc
mov
out
rorl
addr16
pop
cli
or
xchg
das
arpl
sarb
inc
or
nop
cmp
test
push
cli
cli
or
inc
fnstsw
xor
adc
ficoml
insb
out
xchg
push
sti
ret
enter
mov
nop
cmpsb
test
and
mov
lret
sti
in
lcallw
sub
cs
cs
or
mov
shrb
cmp
inc
add
adc
sub
je
and
dec
lods
push
fs
mov
fprem1
je
sbb
add
mov
fcomi
push
pop
adcl
lret
and
dec
lods
in
xor
je
lods
sub
js
sbb
ds
dec
mov
call
pop
add
pop
stos
push
xor
dec
popf
dec
lods
mov
pusha
pusha
inc
nop
jle
mov
js
scas
mov
movsb
sub
clc
lods
out
xor
add
push
imul
cmp
and
in
jno
jae
outsl
and
push
into
adc
out
mov
mov
stos
jbe
xor
pop
fstps
loope
daa
push
add
je
mov
popa
lods
in
inc
hlt
test
pop
xchg
fs
fimuls
add
jmp
and
mov
add
add
jmp
js
icebp
dec
ljmp
adc
push
testb
cmpsb
xchg
fsubrl
jp
pause
jle
adc
dec
int3
sbb
ret
lahf
andb
push
jne
inc
fildll
cmp
lahf
and
pushl
sbb
sbb
mov
dec
mov
loop
repz
hlt
pop
rorl
sbb
outsl
jbe
imul
movsl
add
or
pop
xchg
push
stos
inc
in
or
cmp
test
imul
jne
loope
fildl
inc
mov
dec
xor
aam
outsb
pop
mov
mov
and
sub
daa
pop
data16
mov
push
lock
cmp
lret
adc
sbb
sub
and
aam
fadd
inc
and
xchg
out
scas
and
mov
jo
out
xchg
pop
repz
outsb
and
nop
push
in
subl
mov
mov
xor
ret
mov
push
fmuls
xchg
lea
jp
pusha
hlt
push
jns
mov
sbb
icebp
inc
xchg
mov
xchg
mov
inc
adc
divb
jp
xor
loopne
sahf
aad
push
nop
mov
push
dec
rol
test
addr16
movsl
pop
scas
stc
mov
or
insl
out
out
aas
mov
push
stos
mov
or
mov
sbb
pop
fidivrs
xor
jb
movsl
or
mov
cmpsl
or
fiadds
sbb
or
sub
ljmp
xchg
movb
inc
mov
data16
push
bnd
popf
cmp
adc
jecxz
scas
sahf
dec
mov
inc
lods
inc
loopne
cmp
dec
enter
sbb
ja
sysexit
sub
sub
and
in
dec
sbb
loop
shlb
pop
fistps
in
jb
aas
sbb
mov
xchg
xor
aad
push
mov
inc
xchg
push
leave
ret
push
rcl
push
in
outsb
rclb
aam
arpl
lret
xor
sub
movsl
xor
or
or
addr16
add
shrl
mov
ss
popf
sbb
movsl
divb
scas
jl
push
jb
sub
sub
divl
and
mov
mov
jb
gs
in
push
mov
stc
xor
fidivrl
repnz
inc
mov
lahf
adc
sahf
jge
repz
jg
adc
insl
dec
add
pop
test
ret
lret
jns
jl
push
mov
inc
ds
inc
xchg
jae
xor
and
lds
shl
push
in
pop
mov
adc
dec
sbb
and
jge
js
test
and
popf
insl
insl
je
push
movsb
push
xchg
shlb
pop
jmp
addr16
sbb
mov
shrb
je
jns
hlt
cltd
jo
mov
dec
mov
jne
xor
inc
je
andl
pop
jecxz
mov
fsts
push
cmp
and
push
call
loop
shll
mov
pop
lahf
and
es
enter
push
out
push
mov
push
dec
cmp
pop
mov
jo
loope
lcall
xchg
pop
xchg
jnp
pushf
jecxz
or
fists
cmp
sti
loopne
mov
mov
mov
andb
cmp
ds
cmp
or
cmp
ja
lahf
jecxz
mov
fists
adc
xchg
cmpsl
aam
sbb
mov
std
or
dec
xchg
sbb
jo
xchg
xor
stc
cmp
mov
jg
cmp
cld
rcl
mov
ds
or
ret
scas
xor
push
nop
incl
ret
pop
pop
enter
imul
sbb
mov
ds
push
cmovnp
cmpsl
data16
mov
mov
cmpsb
fucomp
movsl
and
fisubl
icebp
or
mov
dec
mov
cmp
notl
add
push
pop
les
jnp
lock
pop
ja
mov
xor
mov
xchg
sarb
sbb
ljmp
or
mov
sbb
push
rorb
push
bnd
iret
fwait
aad
adc
cs
mov
xchg
inc
mov
xchg
insl
add
sub
lcall
lods
adc
rcrl
clc
sub
mov
jp
jns
or
inc
xchg
stos
sub
in
in
push
and
subl
dec
fstpl
loop
inc
rcrl
inc
mov
sti
lea
inc
roll
lret
scas
clc
push
lret
lahf
jo
jns
mov
xchg
pop
cmpsb
fsts
iret
shlb
dec
aam
adc
pop
xchg
and
lahf
jnp
adc
pop
inc
das
leave
in
xchg
or
xchg
out
mov
lods
loopne,pt
fwait
pop
cld
mov
roll
mov
pop
sarl
xor
mov
and
divb
push
xchg
xchg
mov
xchg
rcll
inc
sub
jae
std
xlat
ret
lahf
rorl
cmp
pop
in
cmpsl
pop
and
xor
aad
les
loope
js
xorb
nop
loop
cmpsb
push
fstpt
ja
in
add
mov
ret
xchg
rcr
cmp
mov
push
xchg
jl
int
scas
in
ss
push
cmp
sbb
ret
mov
fadd
out
dec
insl
fmull
outsb
jne
lods
stos
cwtl
push
cmp
dec
enter
lcall
repz
mov
sub
sti
sub
out
and
pushf
mov
ss
xchg
stos
pop
ret
xor
mov
sbb
add
jge
fidivrs
outsb
and
mov
xor
es
ja
roll
cmp
xchg
adc
inc
xchg
je
push
mov
mov
push
jge
incl
add
cld
mov
mov
cmpsl
mov
jp
cmp
mov
in
and
sbb
add
aaa
movsl
mov
pop
ret
scas
imul
lahf
out
push
cmpsl
jo
aam
xor
into
int
cs
pop
or
mov
push
or
les
movsl
shll
or
sbb
jb
movsl
shll
cmp
ret
dec
lds
fsts
sub
jns
ret
sub
or
xchg
push
call
mov
xchg
jp
pop
xlat
pop
mov
outsl
fldcw
dec
es
outsl
sub
pop
cwtl
repz
lods
out
popa
shll
pusha
mov
xchg
inc
or
xor
mov
inc
mov
jne
cmp
iret
add
adc
fcomps
jecxz
push
and
jmp
cmp
and
rcrb
clc
jle
jp
addr16
jecxz
loop
mov
in
mov
xchg
mov
movsb
dec
and
inc
xchg
jle
xor
scas
xchg
test
es
push
lret
pushf
mov
ficompl
push
filds
and
dec
jg
add
fidivl
sbb
out
and
mov
mov
xchg
lahf
inc
mov
in
push
dec
icebp
fucomip
loope
jecxz
push
mov
mov
inc
inc
xchg
int3
adc
ljmp
mov
sub
fcomi
adc
movsl
lock
test
mov
adc
test
mov
and
scas
fs
pusha
inc
out
cltd
sub
popa
fsub
les
clc
pop
push
pop
lahf
out
jecxz
jle
out
mov
je,pt
sbb
sbb
pop
xchg
xor
pop
or
adc
roll
and
imul
cmpb
adc
add
ds
pop
lret
test
add
pop
leave
dec
mov
adc
cmp
das
sub
aas
pushl
push
inc
and
fisttpl
outsb
jl
test
cmp
xor
cmp
popf
shlb
sbb
push
ds
test
xchg
iret
or
inc
shr
stos
xchg
ja
int3
aam
popa
addr16
daa
lods
cmc
aaa
fcomps
rclb
and
cltd
xchg
or
mov
jmp
and
arpl
test
fldln2
push
xor
andl
push
int3
popa
dec
mov
adc
divb
add
imul
jge
push
pop
stos
sbb
lea
pop
xchg
push
and
addr16
add
adc
sbb
adc
sub
sub
sub
scas
in
iret
sub
mov
xchg
jb
push
ficoms
and
push
xor
insb
cs
and
xchg
xchg
mov
jmp
mov
add
jp
mov
fwait
rcr
mov
mov
in
pushf
stc
xchg
xor
data16
xchg
ja
push
push
dec
hlt
movsl
push
add
adc
and
lcall
inc
jg
pushw
dec
mov
repnz
movsl
sbb
cmp
cmp
pop
sub
std
inc
mov
and
and
push
cli
test
jbe
jmp
mov
test
sbb
xor
cld
mov
outsb
jbe
cmp
idivb
jno
jl
cmpsl
fs
sbb
and
pusha
in
aaa
test
xor
rep
push
test
lret
dec
aad
cs
out
jo
pop
std
mov
push
imull
pop
xchg
in
ja
dec
jnp
int
mov
call
les
bound
inc
imul
das
out
out
dec
jbe
fmuls
std
dec
jne
inc
xor
lret
push
cmc
push
cld
inc
mov
pop
xor
insb
dec
aaa
jno
sbb
push
pop
pop
hlt
rcll
pop
mov
or
push
ljmp
rcl
cmpl
jnp
cli
iret
test
mov
rclb
or
andl
testb
xor
das
add
jmp
dec
sahf
jns
inc
mov
out
ss
dec
mov
jl
or
popa
mov
stos
hlt
jno
dec
dec
imul
add
movsb
shl
inc
xchg
in
xor
mov
add
sub
fidivrl
dec
gs
cmp
pop
insb
outsb
mov
pop
pop
inc
fdivrs
mov
xchg
xor
cmp
sub
add
lcall
sbb
dec
rcrl
cmp
and
dec
push
push
mov
add
out
ror
mov
xor
adc
push
adcl
fisttps
je
pop
and
push
xchg
scas
push
push
pushf
je
outsl
inc
or
je
mov
push
sbb
iret
ret
daa
jp
mov
int
mov
mov
shrl
in
loope
aas
lods
sub
xor
icebp
inc
xchg
pop
add
lcallw
xchg
push
fidivrs
jecxz
sbb
lds
sub
jbe
and
arpl
mov
test
and
test
pop
xor
inc
stos
jg
cmpsl
mov
ds
adc
adc
scas
jb,pn
fstpl
ret
scas
popf
push
dec
cld
add
cs
loopne
and
sub
adc
mov
aad
inc
inc
sbb
add
xchg
xor
and
inc
or
jmp
add
jp
xchg
dec
imul
dec
iret
adc
add
mov
push
add
sbb
sub
jnp
cli
cld
dec
jl
xchg
mov
pop
in
sarl
in
push
lret
in
ljmp
loop
xor
push
mov
adc
add
dec
je
or
ljmp
adc
or
js
push
cmp
sbb
call
pusha
add
jns
inc
loopne
mov
les
sbb
fdivrl
cmp
push
xchg
in
ja
cli
dec
cld
and
pop
mov
lcall
mov
mov
lret
push
loop
stos
mov
popa
add
test
adc
fnstsw
sub
mov
adc
cwtl
mov
mov
push
fisttps
jb
cld
cmp
stos
jge
dec
fcmovu
in
xlat
ljmp
sarl
or
lea
push
add
sub
push
add
lret
leave
aas
shlb
jle
in
out
pop
int
push
mov
rcrl
fs
inc
es
mov
adc
mov
cli
mov
add
sub
mov
inc
push
testl
ret
sbb
clc
std
mov
inc
add
mov
mov
cmp
cwtl
adc
or
shrl
mov
mov
jmp
push
daa
add
dec
sbb
in
xchg
test
cmp
mov
mov
out
int3
xchg
adc
outsb
loope
mov
cmp
insb
push
cmp
not
pop
les
push
dec
es
cmp
mov
test
repz
fidivrs
adc
ds
push
and
dec
popf
sub
ret
inc
shll
jecxz
mov
mov
repz
dec
or
jns
lods
out
dec
xor
xchg
fidivrs
not
aam
loope
add
jecxz
loop
je
sub
inc
fdivs
push
mov
fst
fs
rclb
fdiv
xchg
sub
and
xor
cltd
std
mov
or
jmp
add
or
sub
jge
in
iret
imul
xor
sub
jnp
xchg
adc
cmpxchg
mov
test
jae
xchg
mov
test
cld
push
cmp
rcr
loopne
mov
jl
insl
call
gs
lret
adc
cmp
dec
mov
and
sub
loopne
jg
mov
or
adc
mov
fisubrl
inc
mov
rcll
mov
icebp
shrb
enter
aas
jmp
cmpsl
push
pusha
jecxz
shlb
ja
clc
outsb
incb
scas
lods
xchg
insb
sub
push
dec
ss
ljmp
push
pop
inc
xlat
mov
xchg
xchg
cs
bound
xchg
xchg
lcall
inc
add
fdivs
mov
addr16
or
jmp
pusha
xlat
cmpsb
dec
push
les
jmp
mov
adc
jp
pushf
or
jnp
orl
fwait
and
cwtl
pop
jno
lds
bound
jp
aam
daa
imul
ljmp
or
div
ficompl
cmp
dec
aaa
ja
mov
divb
stos
push
scas
loopne
bound
pop
push
lcall
movsl
push
flds
rcrl
iret
add
movsl
jns
pop
lret
pop
rcrb
push
mov
inc
add
fcomps
mulb
adc
das
jge
jp
into
call
cmpsb
aas
xchg
jno
xchg
aam
mov
mov
movsb
sub
popf
mov
stos
gs
std
je
in
scas
out
jp
ljmp
pop
and
xchg
mov
mov
es
sbb
sahf
push
add
sarl
xor
subb
pushl
out
add
scas
xor
dec
pop
xor
filds
add
bnd
adc
cltd
mov
mov
cli
test
dec
sub
inc
dec
mov
mov
mov
mov
add
sahf
test
cs
adc
dec
mov
cltd
push
mov
shl
lret
rorb
imull
jmp
add
clc
push
dec
std
sti
into
ljmp
xor
insb
lahf
ret
jl
mov
scas
arpl
inc
or
inc
subb
leave
aaa
cmc
push
pop
in
cmp
pop
sarl
cmp
mov
and
enter
rolb
stos
cmp
and
jns
cmpsl
mov
mov
call
imul
lods
popf
xchg
sbb
dec
add
and
xchg
xor
mov
lds
sbb
imul
jecxz
ja
mov
xor
mov
mov
xchg
pop
cmp
pop
mov
lahf
insb
das
loopne
xor
icebp
sbb
lret
mov
pusha
lcall
dec
mov
mov
mov
mov
testb
pop
popf
test
push
stos
repz
lret
sub
mov
mull
sbb
jb
addb
sub
xchg
imul
xchg
retw
sbb
xchg
and
and
push
imul
push
cmpsb
xchg
mov
sbb
mov
icebp
sbb
fsubl
push
in
push
sub
inc
imul
xor
ret
movsl
xor
shll
or
pop
movl
mov
jmp
lret
sub
psubw
dec
push
xor
orl
lret
add
testb
push
jp
out
cmp
xor
ds
in
add
or
pop
push
pusha
cmp
test
push
xchg
mov
xchg
pop
pop
push
adc
imull
lods
xor
sbb
xchg
push
and
fcomp
cmp
xchg
xchg
pushf
mov
in
sbb
aaa
mov
dec
cmp
ljmp
dec
movb
xor
int3
xor
cmp
dec
add
repz
test
loopne
in
sub
push
xor
mov
sbb
pushl
cmp
aam
out
dec
bound
jmp
mov
jbe
push
xchg
xor
insl
sarl
jge
or
cmp
sti
push
push
mov
inc
mov
in
sbb
push
lock
jl
lahf
jl
pop
xor
gs
xor
insb
imul
in
dec
les
jns
jecxz
and
in
loopne
inc
mov
mov
cmp
jp
ret
outsb
push
dec
xchg
push
lods
cs
sbb
mov
lret
gs
xchg
xor
push
iret
adc
in
add
jl
sbb
mov
fwait
add
scas
pop
sub
ret
cmp
into
gs
int
xchg
push
test
dec
push
xor
push
cmp
aam
outsl
mov
bound
xchg
aaa
test
inc
push
test
shl
pop
xlat
ljmp
lahf
pop
lret
stos
xchg
mov
in
loop
sub
adc
repz
jne
imul
jle
shrb
add
outsb
fs
pop
mov
add
jmp
aam
xchg
xor
ret
fs
cmp
mov
or
shlb
sahf
notl
xchg
mov
nop
mov
xor
xor
add
dec
imul
cmpsb
in
test
sbb
pop
xlat
loope
pop
pop
or
inc
popf
cmc
lods
xor
sub
decb
fs
movsb
jmp
enter
fldt
mov
jb
mov
inc
popa
mov
jg
and
jle
sbb
arpl
std
pop
mov
sub
or
xor
and
into
gs
mov
movsb
sbb
sbb
inc
dec
loopne
mov
leave
xor
lds
lock
scas
gs
mov
sbb
pop
mov
xchg
ja
data16
mov
leave
jg
mov
mov
lea
or
test
pop
loopw
add
imulb
fld
mov
mov
dec
mov
daa
decb
test
inc
int
jle
mov
mov
cmp
lods
mov
mov
or
jg
jb
inc
out
and
ja
shlb
paddb
push
popa
bound
fstpt
mov
in
test
pop
bound
imul
xor
in
aas
mov
loope
lcall
add
stos
jns
mov
ljmp
gs
lds
adc
out
enter
inc
and
sarl
je
jl
mov
std
sti
xor
or
fcmovbe
pop
repnz
addr16
ret
cwtl
test
adc
test
mov
or
jge
shrl
lods
das
shlb
popf
shrb
out
out
loop
and
push
xchg
push
xchg
push
stc
outsb
cwtd
adc
xchg
mov
test
jg
pop
jp
and
pop
mov
nop
xor
xchg
sub
repz
add
add
jbe
xchg
xlat
mov
fidivs
adc
das
jmp
nop
mov
push
repz
mov
aas
push
cmp
jne
mov
scas
in
push
ret
xchg
gs
subb
fndisi(8087
lods
ret
push
xlat
adc
mov
inc
out
movsb
jle
cld
rorl
pop
mov
lods
mov
lock
ljmp
repz
push
adcb
push
or
xchg
jl
add
push
in
les
aaa
mov
mov
test
pop
inc
mov
cmp
sbb
dec
insl
inc
dec
gs
data16
pop
dec
movsb
repz
jo
fs
test
and
lret
das
push
cmp
adcb
cli
add
xchg
stos
lds
mov
sarb
ds
in
push
out
imul
mov
pusha
call
lea
aam
adc
sub
jae
push
in
sbb
stos
leave
cmp
add
andl
cmpsl
aad
lea
call
dec
ret
pop
sarb
push
dec
cmp
jmp
xchg
not
xchg
arpl
andb
mov
cmc
pop
popf
incb
les
aam
loop
cwtl
ja
or
sbb
pop
sbb
or
push
xor
add
push
mov
cmp
cmp
mov
cli
shl
pop
adc
xchg
mov
ds
imul
and
loop
dec
xchg
jp
ja
insl
lahf
in
inc
ret
test
test
mov
pop
adc
sub
fdivr
mov
fstpl
xorb
ror
test
sbb
sub
in
out
jge
shrl
mov
test
and
stc
mov
stos
and
test
sbb
sub
inc
mov
scas
sub
imull
loope
mov
cmp
ja
pop
dec
daa
xchg
in
hlt
scas
movb
jp
inc
cmc
lods
lea
cld
sbb
push
lods
push
dec
test
lods
mov
lret
mov
xor
out
aad
xor
pop
xchg
lock
pop
jno
xchg
mov
dec
cmp
insb
lea
inc
cld
insl
mov
sbb
push
shrl
and
push
sbb
inc
or
add
testl
sbb
xchg
pusha
in
flds
loopne
shlb
and
mov
cmp
mov
pop
stc
sub
loope
gs
mov
jge
jmp
into
shll
push
adc
stc
mov
and
scas
xchg
push
div
and
xrelease
sub
adc
and
jl
xlat
lret
xchg
lret
popf
mov
pop
fmul
lds
adc
out
push
movsb
rcl
out
pop
in
es
mov
push
jb
pop
xchg
outsl
sub
cwtl
scas
in
or
adc
add
mov
cli
jge
push
pop
and
popf
adc
xchg
xchg
aam
mov
mov
lods
pop
cltd
scas
ja
shrb
dec
in
out
adc
mov
adc
pop
lret
sbb
mov
pop
xor
shrl
push
jl
int
loop
movl
jnp
imul
movsl
adc
add
adc
or
cmp
jp
add
fcomip
adc
adc
enter
fildl
xchg
pop
dec
cmp
fcmove
jp
lcall
dec
xlat
cltd
pop
mov
add
push
fldl
jle
pop
pop
adc
mov
xor
mov
test
pushf
dec
mov
cld
mov
pop
mov
lcall
out
imul
push
adc
lcall
lea
fwait
hlt
fs
icebp
repnz
inc
mov
mov
sbb
dec
or
cmp
push
pop
jl
out
cmp
jmp
loop
push
sbb
jb
rorl
sbb
sbb
loopne
push
bound
daa
push
sbb
sti
dec
ret
pop
lret
xlat
mov
or
xchg
or
mov
cltd
ljmp
jns
fists
rolb
cld
lods
jb
mov
shlb
fmull
popf
add
mov
mov
or
pop
in
cld
mov
lods
ret
popa
fidivl
cmp
jne
lahf
pop
loopne
sub
dec
popa
xor
fwait
pop
xchg
orb
mov
or
sbb
jecxz
sub
adc
dec
ds
mov
ja
pop
adcl
push
mov
out
xchg
dec
jno
push
or
cmp
pop
stos
sub
inc
add
or
xor
movsb
data16
dec
ss
jecxz
jp
int
ljmp
fcom
cmc
sub
jae
add
push
mov
jle
test
cwtl
or
push
pop
xor
xchg
lcall
into
int3
or
pusha
or
inc
mov
fisubrs
dec
push
ss
adc
shr
cmpsl
rcr
pop
addl
push
push
or
sarl
xchg
pop
loop
nop
aad
cmp
xchg
mov
sbb
maxps
pop
stc
aam
call
add
mov
add
or
pop
aam
popa
sub
mov
rcll
mov
xchg
cwtl
lahf
mov
mov
aas
push
ljmp
mov
out
data16
jne
rcrb
fs
cmc
das
mov
nop
or
jns
lret
adc
popf
jae
pusha
add
loope
inc
bound
shlb
sub
xor
test
movl
cmp
outsb
addr16
iret
sbb
iret
pop
adc
mov
inc
mov
cmpsb
xchg
fprem
in
popa
jp
lret
push
cwtl
int3
int3
movsb
mov
aam
inc
out
and
enter
jmp
data16
sti
les
out
dec
dec
sarl
mov
or
ss
sbb
xor
jno
xor
xchg
cld
cmpsl
add
fistpl
fwait
xor
int3
movsl
subb
jb
lea
add
je
fwait
imul
and
shlb
andb
dec
jle
xor
fdivrs
call
cmpsl
push
cmp
jb
hlt
negl
out
cli
iret
xchg
js
xchg
xchg
loope
imul
sbbl
jmp
cmpb
adc
les
cltd
fadds
mov
in
or
in
loop
jle
sub
pop
cmc
insb
sub
jnp
cmp
cmc
sub
xchg
inc
pop
lods
pop
xor
and
loope
jmp
or
in
mov
xlat
int3
dec
mov
fsubrp
ljmp
mov
jae
loopne
fs
testb
push
adc
push
and
dec
jae
inc
out
pushf
or
inc
sub
aas
imul
adc
or
pushf
add
dec
stc
ljmp
push
push
sub
es
jmp
sbb
inc
adc
push
lods
xor
lds
xchg
loop
ja
pop
pop
and
out
mov
ret
inc
stc
adc
dec
into
je
ds
xchg
arpl
add
loope
jg
cmp
hlt
inc
repz
clc
imul
pop
jns
cmp
mov
mulb
or
inc
js
in
jg
fwait
hlt
xor
js
add
aad
pop
je
ret
add
les
cmp
sub
pusha
xchg
sub
ljmp
adc
push
pop
fdivl
mov
adcb
cmp
test
fisubrl
sbb
jbe
aad
mov
pop
push
ror
repz
mov
std
jnp
stc
jbe
mov
sub
cwtl
mov
loop
mov
xchg
scas
mov
xlat
sbb
and
pop
ret
push
or
sarl
xor
dec
pop
fyl2x
lret
scas
mov
sbb
fnstenv
pop
stc
sbb
push
fisubrl
sub
leave
icebp
mov
into
and
ja
push
int3
hlt
popf
mov
in
jecxz
mov
adc
imul
jmp
and
sub
push
xor
insl
stos
cli
xor
pop
in
jg
in
mov
shlb
enter
mov
sub
shll
mov
sbb
es
in
and
fwait
addr16
xchg
push
and
xor
xor
cmp
pop
int3
bound
lcall
xor
orl
frndint
mov
mov
gs
loope
or
in
inc
mov
pop
lret
sbb
popf
lcall
movsl
divl
jecxz
xor
sti
mov
out
dec
sbb
andb
jb
sbb
pop
sub
jae
cmpsl
cs
pop
std
out
xorb
add
int3
sbbb
mov
cmp
xor
mov
pop
push
mov
mov
call
jg
sub
stc
lea
lods
popa
cmpsl
cmp
loop
ljmp
push
adcl
mov
out
or
sbb
cmp
aam
or
out
xor
inc
mov
int
xorl
fisttpl
scas
loop
pop
test
sub
add
push
lods
fistps
aad
jo
cmpsl
cs
and
jbe
xchg
mov
and
rcll
inc
adc
cmp
cs
loope
das
stos
push
sbb
lret
add
imul
std
outsb
imul
ss
sbb
mov
iret
ja
vpcmpeqb
mov
add
mov
and
push
pop
pop
jg
mov
or
dec
jae
ret
jge
aas
xor
sbb
ss
xchg
addr16
lret
push
aaa
xor
fcomps
andb
stos
inc
pop
mov
dec
and
push
push
or
stos
jae
lds
jmp
bound
outsl
cmp
add
cmp
std
xor
inc
pop
mov
pop
psllq
aad
adc
and
adc
jge
and
jo
xchg
test
cmpsb
xchg
or
xchg
jp
cld
cld
stos
sbb
sti
xor
cli
dec
xchg
lret
movsb
stc
push
inc
mov
movsb
mov
das
outsl
mov
pusha
les
mov
lret
stc
data16
jb
dec
lret
sbb
dec
inc
stos
jge
paddw
test
sub
cmp
int
jns
ficompl
xchg
push
xchg
push
int
rorb
dec
xchg
jecxz
xlat
add
cmp
fistl
pop
mov
icebp
out
loop
rorl
repz
mov
sub
fwait
test
xchg
es
adc
push
fstl
xchg
xchg
or
jl
scas
std
int3
arpl
out
or
aam
fmul
popf
add
pop
mov
pop
enter
lds
jge
stos
or
roll
mov
mov
jno
mov
jle
push
les
ss
dec
jmp
enter
pusha
sub
and
loopne
icebp
jae
subl
push
test
and
adc
mov
sbb
add
and
xor
jmp
por
and
add
add
test
lahf
cmp
fldenv
addr16
adc
cmp
cltd
lret
dec
mov
jne
dec
pusha
xor
enter
insb
daa
push
orb
test
movsb
or
inc
out
cmpsl
sbb
mov
xor
push
xchg
sub
lds
je
pusha
ds
push
sbb
fcoml
lds
cmp
xor
dec
sar
push
or
insl
dec
fld
vmread
jge
iret
cmp
jg
add
lea
and
repz
fidivrl
inc
aam
and
adc
jo,pn
jmp
push
test
pop
add
pushw
and
pop
mov
inc
out
sbbl
fsubs
iret
sahf
xchg
or
repz
mov
xchg
in
push
test
out
inc
xorb
and
data16
les
xlat
mov
dec
xor
cwtl
imul
jmp
jb
dec
xchg
xor
mov
or
das
ffreep
cmpsl
pop
icebp
incl
and
mov
push
jno
mov
or
out
dec
xor
cmpsl
sub
inc
in
cld
in
dec
jne
out
jg
adc
outsb
pop
icebp
rcrl
jg
push
scas
mov
ret
test
lds
jns
repz
pop
sbb
jp
adc
adc
leave
stc
mov
sub
ss
xchg
adc
or
inc
adc
or
aam
shlb
and
sti
or
sbb
rcll
xchg
xchg
pop
stc
xchg
bound
test
ds
sahf
faddl
pop
aaa
inc
pop
jg
ret
and
int3
mov
dec
arpl
or
add
xchg
mov
sub
pop
jg
out
icebp
mov
push
sbb
in
xor
lret
push
sub
sbb
add
xchg
xchg
add
xlat
xchg
movsl
mov
test
notl
outsb
and
js
lods
inc
mov
js
into
xor
sbb
cwtl
xor
inc
testb
inc
or
fidivrl
cwtl
inc
out
shll
mov
nop
add
fistl
out
jecxz
push
or
fwait
mov
popf
cwtl
loop
dec
js
push
cmp
cmp
xor
stos
xlat
fldcw
pusha
add
cld
rcr
nop
fldt
leave
lock
cmpsb
pop
mov
arpl
xchg
ds
push
dec
xor
pmulhuw
cltd
fs
sbb
add
sti
ja
lret
xchg
fwait
adc
mov
inc
pop
sub
dec
fiadds
add
hlt
addr16
adcb
sub
dec
pusha
adc
test
sbb
fwait
es
out
shrl
icebp
xor
mov
mov
pop
jns
movsb
cwtl
fsubrs
lahf
loope
fbstp
lods
femms
dec
shll
adc
dec
lldt
mov
jne
pop
push
int3
inc
lret
xchg
adc
insl
mov
movsl
add
aas
xor
mov
mov
mov
pop
sarl
mov
push
or
lds
nop
das
int3
fmuls
lds
es
cmpsb
dec
cmp
xor
cmp
ljmp
pop
cmp
dec
fisubrl
adc
jns
fisubrs
pushf
daa
lds
in
dec
shrb
add
xor
jge
mov
icebp
aad
fldl
ds
inc
subb
aas
lret
jg
mov
mov
mov
gs
xchg
shl
leave
popa
pop
inc
les
ficomps
jns
stos
push
push
xchg
enter
inc
inc
adc
lock
inc
mov
in
gs
fdivl
lret
stc
mov
imul
dec
into
mov
out
sbb
xchg
ss
cld
xchg
in
stos
ret
je
pop
xchg
icebp
ja
jae
and
aas
rcrl
into
pop
adc
pop
adc
imulb
nop
pop
jmp
sbb
or
mov
outsl
shl
jle
push
pop
out
sbb
xchg
out
mov
jmp
fdivrl
lcall
outsb
popa
addr16
mov
cmp
mov
lahf
jno
notl
aas
ss
test
cmp
mov
sbb
insb
sub
jns
dec
and
loopne
push
into
rolb
pop
mov
movsl
repz
jmp
cs
xor
xchg
ljmp
in
imull
mov
mov
sbb
cmp
mov
mov
jecxz
test
cli
jge
cmp
dec
ljmp
mov
push
clc
xchg
out
pop
dec
cmp
fadd
mov
aas
xor
jbe
adc
mov
mov
jecxz
push
and
xchg
and
push
jnp
test
fisubrl
sar
and
lret
mov
iret
ret
sbb
rorl
add
pop
lret
inc
sbb
and
movsb
sti
adc
add
aas
arpl
dec
or
je
outsl
lock
xor
lret
and
mov
mov
stos
inc
pop
pusha
and
push
pop
pop
lret
ds
shll
mov
adc
pop
push
jnp
repz
cld
pushf
stos
jp
data16
out
int
push
jl
in
dec
fldt
jae
mov
mov
push
add
adc
fiadds
push
sub
xlat
rol
daa
fnstsw
mov
ret
add
and
inc
pop
or
push
add
pop
rcl
xchg
cmp
push
and
int
test
jb
xchg
sub
out
sub
les
mov
aam
inc
stc
dec
mov
in
dec
push
jae
push
movsb
loopne
xor
in
aad
lcall
pop
ja
sub
mov
mov
fistps
adc
in
pushf
jmp
push
xchg
stos
aam
jne
and
sbb
cmp
xorb
xchg
push
fs
imul
mov
add
outsb
fdivl
mov
mov
loop
stos
nop
add
rcrl
jns
cmp
cmpsl
or
sbb
inc
jne
add
push
dec
out
inc
outsl
fadd
out
rcl
dec
pop
jg
scas
xchg
arpl
push
insb
pop
lahf
fsubp
lods
push
sbb
or
mov
mov
into
jo
mov
mov
sub
inc
xor
xchg
mov
push
popa
xchg
pop
jle
jne
pusha
lea
and
sbb
idivb
add
and
mov
arpl
mov
mov
jo
out
addr16
inc
jae
mov
pushf
sub
cmpsb
xor
inc
lret
add
sub
mov
lea
icebp
addr16
xchg
pop
dec
cmc
mov
sub
add
dec
pop
iret
and
daa
loop
or
test
mov
fs
aaa
test
push
ss
iret
mov
or
xchg
push
jge
push
lahf
shrb
pop
andb
jge,pt
jns
cmp
xchg
pop
jge
and
mov
inc
xor
divl
or
inc
pop
out
insl
in
mov
mov
jle
dec
pop
xchg
pop
fisubrl
add
or
and
or
in
xor
shl
sbb
dec
clc
mov
add
roll
xchg
sub
dec
shlb
mov
jl
adc
xor
sbbb
pop
lret
push
lods
adc
nop
sub
in
inc
pop
cmpsl
mov
push
xor
in
xchg
out
xchg
xor
xchg
das
push
pop
fisubrl
fsub
lret
movsb
out
es
in
pop
cmpsb
insb
and
or
sar
les
scas
pop
adc
mov
and
push
fistl
dec
push
out
insb
arpl
sahf
and
nop
enter
pusha
ret
aas
gs
lret
mov
fisubrs
mov
xchg
sbb
pop
jnp
push
dec
and
mov
sbb
xchg
out
cmp
lods
cmp
std
fstp
add
ret
cwtl
mov
jb
xchg
cmp
mov
xor
mov
icebp
or
adc
enter
pop
push
pop
jle
xor
cwtl
insb
or
xchg
je
mov
pop
inc
xchg
out
mov
sbb
add
add
lret
add
clc
xchg
jl
mov
lret
and
ret
ss
add
jo
pop
out
fidivs
xchg
mov
xor
arpl
movsb
test
into
and
dec
bound
cmp
push
xor
fucomi
test
add
dec
cmp
xchg
fstps
pop
sbb
dec
sbb
rol
sbb
xchg
jge
mov
inc
pshufw
test
dec
pop
mov
jecxz
imul
loope
std
mov
xchg
fdivrp
sub
cmp
mov
out
cmp
in
js
push
and
xchg
aaa
sbb
mov
xchg
add
mov
inc
insl
cmp
data16
dec
pop
sbb
addb
sbbb
fdivr
dec
mov
pop
jmp
mov
pop
or
mov
mov
and
movl
mov
cmpb
pusha
insb
int3
insb
mov
adcb
adc
js
scas
add
addps
mov
test
cld
ds
cmp
gs
das
out
mov
ds
ja
cmpsb
mov
adc
xlat
cmp
aad
sub
add
addl
or
out
dec
sbb
push
xchg
rorb
bound
nop
mov
mov
push
push
xchg
mov
or
inc
je
or
test
std
adc
push
lret
push
push
add
xor
adc
inc
decl
cmpsl
adc
dec
push
fdivl
push
mov
out
inc
push
aad
pop
lret
pop
loop
cmpsb
stos
lahf
push
cs
iret
push
mov
clc
ds
cs
pop
cs
ljmp
daa
inc
rcr
dec
xchg
sub
sbb
add
add
xrelease
packuswb
or
adc
and
inc
xchg
pop
mov
out
and
int
aas
dec
sbb
push
or
dec
pop
daa
inc
cmp
mov
paddw
mov
push
shr
loope
dec
mov
xchg
and
fs
stos
lea
test
mov
sti
dec
push
lds
inc
ret
js
push
jl
repz
push
adc
pop
xchg
stc
jns
push
push
shlb
cmp
nop
and
or
jecxz
int3
xor
shll
ret
push
mulb
jns
stos
call
sub
sahf
stc
fcoml
sub
inc
je
insl
mov
movsb
or
xor
inc
fwait
aad
cwtd
mov
xchg
movsb
imul
sbb
je
cmc
xor
loope
ds
jno
loopne
out
out
sbb
frstor
sti
push
out
dec
sbb
cmp
rclb
divl
push
mov
mov
inc
pop
jae
add
das
xchg
adc
shl
jns
pop
or
clc
sbb
ret
test
mov
call
mov
cmp
adc
push
dec
data16
mov
test
inc
jo
pop
jle
mov
and
daa
daa
daa
or
vcmpss
call
xchg
rolb
inc
mov
movsb
jl
and
leave
xchg
xchg
std
jecxz
loope
pop
add
stos
movb
frstor
cmc
pop
cmp
fisubrs
ret
or
sarb
imul
mov
inc
loope
es
daa
or
les
movsl
push
xchg
push
pushf
fbld
push
pop
rorl
or
das
add
sub
paddb
mov
lds
fidivrs
mov
xchg
mov
lods
dec
mov
mov
jbe
call
jb
push
out
jns
sbb
icebp
fiadds
ds
ret
iret
in
outsb
and
add
jl
pop
jnp
lds
fs
xor
inc
jae
setne
dec
cli
lcall
out
pusha
mov
test
mov
mov
sarl
xor
and
cltd
xchg
in
repz
int
dec
push
and
lods
das
add
les
pop
push
fstps
cld
in
mov
cli
sub
sbb
or
dec
in
js
inc
gs
fwait
mov
mov
daa
dec
inc
call
incb
mov
cmp
cmp
or
stc
mov
aad
mov
test
cmp
or
xchg
sub
mov
push
aas
mov
popa
shll
fists
out
sub
add
jnp
xor
pop
jnp
je
jmp
aaa
popa
sbb
imull
lods
cld
ljmp
mulb
push
mov
adc
test
sbb
add
daa
aam
paddsw
fimuls
das
cltd
outsl
pop
gs
push
aam
cli
adc
pop
test
mov
pop
shll
add
dec
scas
adc
push
mov
sbb
sbb
dec
gs
dec
lret
pop
out
stos
pusha
hlt
push
push
xchg
push
cwtl
leave
scas
lods
mov
jnp
jg
das
xor
aas
addr16
ljmp
or
addr16
jmp
arpl
push
hlt
sub
dec
mov
mov
rcr
loope
repz
imulb
addr16
leave
insb
fimuls
pusha
cmp
scas
mov
sbbl
loopne
ret
fxam
pop
push
das
pop
xor
xchg
jp
xlat
int3
loop
pop
push
stos
xor
popf
mov
pushl
xchg
test
cmc
rorl
cmpsl
mov
add
lcall
lret
cmovns
maskmovq
notl
out
shrb
lahf
dec
xchg
rcr
leave
pop
push
sbb
pop
sbb
cmp
adc
jae
mov
int3
sbbb
mov
loope
hlt
les
arpl
cmp
fmul
cltd
test
adcb
sti
jbe
das
sbb
jg
mov
pop
loope
push
rep
test
cmpsb
pop
jbe
das
push
xchg
and
out
testl
add
jmp
ret
jb
mov
ja
or
pop
cmp
dec
fnstcw
and
fstpt
es
jecxz
sub
mov
pop
add
xchg
xchg
lds
sbb
mov
push
loop
pop
ss
pop
in
shrl
idiv
push
out
mov
xchg
push
flds
jmp
mov
add
lods
push
and
in
gs
mov
aam
enter
fisttpl
lcall
xor
loopne
pop
jno
cmpsl
loope
adc
xchg
test
scas
xchg
les
xchg
aas
jp
mov
pop
data16
sti
or
in
loopne
rcr
sar
add
mov
fisttpl
cltd
nop
stos
xor
inc
sbb
aad
insl
cmp
rcr
inc
sub
dec
adc
out
insb
movsl
xlat
push
jle
loopne
inc
stos
jae
and
push
push
aam
pushf
mov
add
jl
add
jmp
pop
cmpsl
std
adc
stos
mov
shrb
in
fiadds
push
js
stc
push
or
sbb
or
pop
sub
adc
dec
lods
es
addr16
xchg
fisttpl
sub
mov
out
mov
cltd
or
mov
out
jnp
mov
dec
xchg
add
mov
xor
jne
or
mov
in
mov
add
pop
dec
jl
outsb
jmp
lcall
scas
mov
movsb
arpl
add
es
sub
push
adc
fbld
push
movsb
rcrl
push
adc
loopne
sbb
mov
add
dec
mov
xchg
out
dec
dec
aad
mov
dec
jo
cmp
sbb
adc
inc
pop
and
mov
mov
jmp
pop
push
add
jp
imul
sub
fcomi
test
jecxz
in
mov
xchg
in
pop
mov
push
mov
pop
les
imul
daa
jmp
jns
jbe
popf
ud1
adc
pusha
stc
cmc
cltd
and
scas
les
outsl
gs
fs
iret
jmp
notl
xor
out
cmp
mov
push
into
data16
orl
cmp
mov
cltd
or
outsl
fldcw
jle,pt
int
push
push
ret
jmp
bound
mov
add
mov
pop
mov
push
and
cmp
fcmovnb
push
adc
imul
sbb
cmc
in
push
xchg
or
and
push
add
cmpsb
and
outsb
mov
cmpsl
loop
inc
jl
xlat
and
stos
bound
mov
pop
addr16
andl
scas
cmpb
dec
fbld
cmp
ret
and
push
push
xchg
or
xor
lret
nop
xor
repnz
push
shll
lahf
cs
inc
lock
fnsave
sub
cmpb
out
outsb
cs
movsb
push
sub
pop
and
into
lea
negl
data16
or
mov
stc
sbb
inc
scas
push
xor
xchg
xchg
loopne
lock
adc
xchg
sbb
jecxz
xchg
jg
js
jle
jle
cmp
sub
bound
pop
fs
push
cmp
add
ret
cmc
pop
mov
stos
leave
add
lret
and
mov
inc
push
inc
in
dec
adc
rep
in
sbb
and
test
cli
test
ljmp
dec
test
in
mov
mov
test
jae
sbb
xor
movsl
ret
iret
das
push
xchg
ja
fistpll
xorb
or
pushf
or
xacquire
popa
xlat
aas
mov
pop
pop
pushf
push
and
jns
inc
orl
dec
dec
cmpsb
mov
jne
mov
mov
scas
jns
mov
mov
sbb
rcl
dec
and
fisttps
sbb
mov
add
sbb
add
adc
mov
cmpsb
jecxz
and
jg
mov
out
test
dec
cwtl
xlat
test
sbb
mov
mov
lock
ret
scas
test
roll
pop
mov
je
jae
movsl
xchg
mov
stos
lcall
aas
int3
mov
mov
mov
lock
mov
and
loop
and
jl
outsb
dec
and
or
mov
mov
shr
out
int
pop
in
mov
out
sub
xchg
fnstcw
pop
mov
jge
ds
rcrb
aas
jg
fwait
test
test
push
adc
aaa
jg
jbe
pusha
jmp
bound
jae
lods
sbbl
jp
arpl
pushf
ret
mov
mov
adc
pop
clc
addl
cmp
leave
imul
notl
lahf
mov
or
sahf
sub
fldl
sbb
push
insb
add
sti
lea
pop
popl
push
aaa
imul
int3
xor
xchg
pusha
inc
and
inc
cmpsl
pusha
gs
int
xchg
aam
push
jns
call
enter
and
pop
xlat
lds
push
mov
ret
inc
test
loop
push
cmp
jbe
lret
push
dec
imul
xchg
jge
int
imul
add
mov
add
and
pushf
dec
pop
and
lahf
mulb
enter
add
daa
jne
mov
or
jl
leave
pop
inc
roll
in
adc
popf
sub
sahf
or
test
mov
or
test
cmpsb
fsubs
js
adc
loopne
pop
popa
inc
fstpt
xor
mov
insl
xor
pop
jmp
xchg
or
xor
aas
ja
aam
cli
scas
out
push
jno
sbb
inc
decl
jg
fcmove
jns
dec
ss
dec
xor
mov
fs
fadds
sbb
dec
repnz
mov
insb
jmp
jno
fwait
stos
xchg
inc
dec
adc
xchg
repnz
xlat
sbb
push
cmp
cmp
fistps
addr16
xlat
push
rclb
aaa
push
cmpsb
loopne
push
int3
push
cmp
scas
ss
push
cmp
and
sub
dec
add
fs
sub
sbb
xchg
adc
or
int3
lahf
fs
les
scas
add
repz
or
mov
inc
and
stos
popa
jmp
xor
adc
fnstcw
inc
daa
mov
jl
test
gs
xchg
jp
jecxz
xchg
fmul
inc
xchg
add
fmull
jbe
jo
movsl
push
les
sub
jl
mov
subl
imul
addl
cltd
push
pop
test
andl
shl
sub
stc
lea
in
cwtl
incl
scas
add
cmpsl
fldenv
sbb
lahf
ret
icebp
pop
inc
insb
fdivrs
add
fidivs
pushf
sbb
andb
adc
clc
mov
inc
out
pop
lret
adc
fdivrl
stos
fcmovnu
sahf
jnp
dec
sub
or
jne
sub
mov
out
insl
ja
popa
aam
movups
mov
mov
int
inc
bnd
std
add
pop
adc
mov
in
lea
push
je
pop
pop
insl
or
aam
mov
and
mov
push
pop
movsl
cmp
test
jge
outsb
andl
stos
in
dec
mov
data16
lea
and
out
scas
pop
shll
jbe
mov
sbbb
sub
nop
sub
mov
shrl
cmpsl
or
and
out
inc
rcrb
fcmovnu
aaa
lcall
fnstsw
fs
xchg
mov
fnstenv
or
jb
xorl
inc
lods
mov
inc
out
sub
cmp
sti
stos
loop
cltd
jae
cmp
pop
sub
scas
cld
fwait
inc
and
je
jae
mov
pop
pusha
xchg
ljmp
inc
mov
aam
mov
repnz
mov
and
cmp
mov
sub
push
pop
push
jmp
movsb
pop
sbbl
xchg
xlat
test
cmc
jns
pop
push
cmpl
pop
mov
cmp
movsb
or
pop
jl
mov
clc
cmp
addr16
jg
out
jb
call
hlt
loope
mov
pop
je
mov
roll
push
mov
cltd
pop
es
test
outsl
xchg
cmc
loope
insb
fstpl
and
pusha
fwait
cld
xchg
clc
popl
aas
push
sti
gs
stc
push
adc
and
or
ficomps
jge
pop
incl
ljmp
jae
cmp
mov
jge
test
pop
pop
rorb
xlat
arpl
add
lcall
sub
mov
xchg
lahf
ret
hlt
call
popf
sub
sbb
divb
lret
stc
notl
movsb
imul
icebp
xchg
push
and
push
test
aas
xor
jns
mov
insb
xchg
dec
test
lds
addb
lret
dec
dec
std
jno
dec
adc
sbb
mov
insl
nop
and
aaa
inc
jge
int
and
mov
je
push
jb
dec
leave
inc
cltd
dec
push
xchg
loope
cld
in
pushf
xor
fildll
xor
dec
mov
lahf
jp
add
in
inc
aas
push
mov
cmp
inc
and
je
loop
ss
data16
sub
lcall
sbb
mov
fld
ljmp
inc
jl
adc
add
shl
je
inc
jecxz
js
push
push
mov
pop
xchg
sarb
push
mov
shrl
pop
jp
test
push
mov
mov
mov
ss
dec
scas
mov
scas
repnz
push
push
shl
js
cmp
mov
sub
call
cld
push
leave
test
inc
push
imul
jne
adc
das
cmp
data16
bound
negb
or
jo
add
fidivs
call
fwait
daa
dec
mov
aaa
std
leave
insl
jb
jecxz
push
lahf
iret
mov
arpl
sti
es
adc
inc
sahf
testb
xchg
or
inc
mov
jg
aad
mov
popf
push
jns
sub
pop
sbb
push
add
fwait
int3
jg
dec
fwait
daa
addr16
pop
jns
lea
std
cmp
fisttpll
adc
pop
mov
imul
test
icebp
push
divb
adc
cmp
clc
mov
mov
or
xlat
es
pusha
fdivs
popf
mov
dec
and
sbb
sub
ds
sti
cli
test
xchg
cmpsl
dec
push
jmp
lret
add
push
adc
xchg
dec
xchg
and
mov
popa
xlat
pop
fcoms
lahf
and
fs
and
lcall
lcall
mov
cmp
aam
xchg
mov
mov
xor
fisttpll
pushf
adc
in
cmp
jl
inc
pop
call
and
or
mov
cli
mov
sbb
xchg
add
mov
sub
in
adc
xchg
pop
hlt
push
addr16
stos
shll
mov
xchg
dec
daa
lods
loopne
pop
stos
inc
and
or
fucomp
scas
mov
adc
imul
fisttps
inc
pop
xor
sarl
mov
inc
test
sbb
cli
and
call
mov
int3
pop
lods
movsl
iret
jp
jmp
adc
push
out
addr16
mov
lret
insb
flds
popa
pop
in
mov
dec
jle
push
test
add
je
arpl
mov
mov
hlt
lods
jnp
xchg
cmp
mov
or
leave
jmp
xor
mov
inc
and
lds
negl
ss
add
cltd
jecxz
cmp
adc
nop
dec
je
or
inc
dec
adc
movsb
les
and
sbb
pop
mov
andb
jg
orb
xchg
cmp
lcall
jno
xor
mov
movsl
je
and
sbb
add
push
fisubl
in
imull
push
cmp
xlat
push
jo
cmp
jecxz
push
sbb
dec
jmp
dec
pop
add
loopne
stos
ficoml
adc
in
adc
fs
or
inc
in
xchg
and
into
dec
or
sbb
cmp
jnp
repnz
js
mov
sub
and
ret
pop
mov
imul
xchg
ljmp
cmp
cmp
clc
mov
inc
xor
push
and
cmp
or
jb
ss
or
cli
frstor
leave
adc
mov
es
cmpsl
add
xor
pop
jae
push
notb
jmp
cltd
lock
push
loope
mov
or
sahf
jp
inc
and
sub
das
and
jecxz
arpl
jge
mov
loop
fwait
pop
ja
push
dec
lods
lods
test
dec
mov
in
mov
outsl
lcall
out
cmpsl
sub
nop
fimull
add
stos
dec
push
mov
or
lcall
sbb
add
insl
pop
mov
cld
mov
incl
xor
pop
sarb
push
pushf
xor
adc
int
test
sti
mov
xchg
movsb
add
mov
daa
add
cmpsb
movsl
xor
xor
dec
inc
mov
xchg
ljmp
pop
dec
dec
lods
xor
imul
sbb
je
pop
or
mov
lahf
mov
inc
jge
in
inc
push
xchg
dec
notb
xor
jge
and
push
inc
negl
cli
stos
orb
inc
push
mov
push
cmpsl
xchg
jp
dec
adc
xchg
add
cs
movsl
loope
add
mov
add
test
sub
pop
push
fwait
jl
fsub
xchg
adc
cltd
xor
dec
cmc
aam
push
xchg
or
cmp
jecxz
mov
sub
jns
aad
fldl
add
mov
inc
repz
je
call
inc
pop
icebp
rorb
repnz
std
mov
jle
mov
das
test
xchg
push
jbe
push
push
das
mov
sub
fsubrs
adc
sub
adc
cmpsb
out
loop
hlt
loopne
aaa
in
pop
rcrb
imul
pop
jg
out
out
mov
movl
pusha
xor
xor
stc
dec
jp
mov
or
xsaveopt
jmp
cld
inc
fbld
bound
jb
and
dec
ss
inc
out
mov
cmpsl
or
les
or
dec
cmp
and
sahf
dec
xor
fistps
lcall
je
cmp
int
nop
and
or
lods
jno
out
hlt
jns
cmp
lea
shl
shrl
loop
call
nop
outsl
mov
push
out
shrl
xor
jl
mov
xchg
mov
lret
pop
jne
or
int
or
adc
sub
test
cmp
jnp
xor
jb
into
push
sub
daa
jl
push
mov
leave
inc
push
add
dec
add
arpl
dec
call
cmp
mov
out
rcrl
push
ret
cmp
pop
imulb
out
sub
cmp
mov
scas
fs
mov
loop
xor
xor
fnstenv
cwtl
inc
push
call
mov
adc
adc
push
fs
mov
push
pop
or
scas
pop
test
hlt
mov
rcll
lods
cmp
lret
enter
mov
je
xor
psubsw
xchg
out
jmp
dec
pop
movsl
in
sub
mov
cmp
jp
ret
jl
push
sbb
lret
xchg
std
jmp
lahf
je
push
cmp
push
vpcmpgtd
aad
aas
jp
nop
outsb
popa
add
sbb
sbb
mov
pop
mov
fisttps
push
mov
bound
sahf
xor
iret
jb
aas
mov
xorb
or
fwait
cmp
scas
and
stc
movsb
aas
and
clc
in
fsubrs
lret
dec
xor
stos
idiv
loope
sub
mov
pushf
popa
addr16
mov
int3
sbb
std
push
add
mov
pop
add
sbb
fnstenv
push
loope
mov
pop
jne
cmp
cmpsl
movsl
ret
addr16
sub
cmpsb
jge
adc
shl
pusha
mov
xor
dec
and
jle
sub
gs
mov
dec
out
es
mov
fdivrs
jg
int
scas
xchg
xchg
test
adc
fwait
dec
inc
cli
xchg
in
pop
lret
scas
mov
push
insl
jne
push
lods
xor
std
cld
jb
dec
mov
cmp
xor
out
insb
sub
adc
dec
shl
in
aaa
lcall
lods
cwtl
dec
xchg
mov
push
xor
and
loop
pusha
fisubs
push
test
mov
lret
out
shrl
sahf
pop
jns
mov
inc
and
sbb
fimuls
xchg
dec
push
push
sarb
pop
xor
and
inc
and
std
mov
cmp
cmp
aaa
fwait
stos
std
xchg
rcll
repz
sahf
sbb
push
test
sbb
int3
clc
mov
mov
sub
or
leave
xchg
popl
clc
ss
fs
int3
fstpt
cli
or
imul
or
xor
push
and
cmpsb
leave
pop
and
test
in
pop
lret
je
inc
aas
mov
or
and
xor
cmc
arpl
cmp
push
sbb
loopne
mov
sbb
fdivl
inc
iret
cltd
lcall
in
out
mov
rcll
aaa
dec
test
mov
and
mov
testl
sbb
sub
and
mov
movsb
mov
hlt
std
clc
xor
aas
push
fbstp
dec
gs
push
xchg
test
mov
dec
push
push
xchg
test
imul
and
adc
jmp
xor
mov
mov
jecxz
jp
xor
test
rol
rcr
jmp
sbb
xchg
dec
mov
ret
inc
cs
in
xchg
push
call
pusha
movsb
and
cmp
push
aad
ret
push
loope
ficoms
lods
inc
jge
push
aam
cmp
gs
pop
push
inc
stc
or
std
sub
repnz
ds
push
mov
push
add
jns
xacquire
and
test
or
cmp
xlat
pop
jo
out
cmp
mov
js
loope
xchg
xchg
pop
gs
sbb
movsl
pop
fistl
nop
sarl
or
xchg
xchg
xor
cmp
xchg
pop
movl
xorl
les
add
daa
insl
xchg
iret
dec
xchg
sub
or
xor
push
pop
lcall
leave
repnz
push
cmc
add
push
pop
pop
jbe
jle
sbbl
xchg
sbb
push
lret
test
je
cmpsl
xchg
cld
adc
sbbb
lock
shl
cmp
pop
cltd
adc
rcrl
push
int
into
pop
jne
out
and
xor
out
jnp
cmp
arpl
addr16
dec
jl
adc
aaa
sub
fidivrl
sahf
ljmp
mov
adcb
add
pop
jge
insb
pop
loope
out
xchg
mov
fxch
call
ret
mov
or
divb
pop
and
or
sbbl
test
arpl
lret
negb
popf
fwait
push
cmp
loopne
and
aaa
insb
cmp
jmp
or
xor
push
mov
in
dec
popa
test
stos
inc
pusha
xor
aad
or
mov
dec
fs
mov
jbe
mov
mov
inc
icebp
xchg
dec
or
ja
cld
fwait
idivb
cmpsb
lcall
lods
sbb
adc
int3
test
fcmovb
xor
movsl
sub
mov
js
mov
mov
xchg
lret
cs
mov
xchg
or
jp
push
pop
aad
stc
sub
xchg
xchg
xchg
dec
mov
cmp
jns
add
sub
outsb
lods
paddsw
ljmp
or
inc
inc
push
or
ret
pop
icebp
scas
mov
and
mov
ficoml
decl
fstpl
sbb
fs
push
shlb
mov
lahf
shlb
repnz
and
and
mov
gs
xchg
mov
xchg
test
in
sub
dec
jnp
pop
shlb
dec
or
dec
push
sbb
stc
je
das
xchg
push
xchg
pop
icebp
dec
imul
movsl
dec
pop
loopne
and
sub
lods
sbb
adc
outsl
scas
jne
jae
dec
push
sahf
and
jne
in
sub
add
out
inc
les
pop
cmpsl
mov
lock
dec
lahf
add
lods
and
out
ret
enter
lret
adc
push
xchg
mov
inc
cmp
dec
inc
jb
and
jb
mov
mov
inc
cmpsb
sub
insb
jo
notb
imul
sbb
es
mov
in
and
and
cvtps2pi
sbb
pop
sub
aad
lods
addr16
push
adc
add
in
mov
xchg
jbe
mov
cmp
sbbb
out
or
jl
lods
das
insl
fcoml
pop
repz
pop
add
stos
push
mov
arpl
repz
cs
push
ljmp
inc
pop
mov
insl
adc
fsubrp
lods
lods
lret
imul
jecxz
inc
out
lret
push
arpl
dec
es
adc
push
in
xor
jp
jnp
adc
aam
ss
cmc
mov
out
push
xchg
and
dec
mov
push
push
adc
pop
cld
ss
pop
or
pushf
pop
mov
fcompl
out
mov
mov
dec
call
stc
cwtl
pop
push
jl
dec
imul
mov
mov
cmp
sbb
ja
mov
pop
jg
jbe
stos
mov
out
jp
movl
hlt
pushl
out
jae
je
pop
fcoml
mov
test
xor
xchg
inc
mov
dec
pushf
sub
push
into
cmp
jle
mov
imul
mov
sarl
ljmp
adc
mov
lcall
aam
into
loope
jmp
jb
pop
insl
sub
mov
insl
push
repz
inc
popa
pusha
mov
xchg
sarb
add
enter
std
aas
mov
mov
data16
pop
hlt
iret
nop
jbe
fwait
into
lcall
mov
gs
std
iret
pop
sub
pop
hlt
pop
popf
bswap
add
cmp
ret
ja
add
pop
jae
in
sub
cmp
adc
cmc
adc
scas
push
cli
cmp
and
inc
pop
mov
pop
xor
push
sbb
rorb
cli
pop
mov
loop
mov
inc
jg
jle
subb
in
add
xor
jns
jae
dec
in
mov
push
mov
mov
sub
pop
clc
outsl
add
sbb
mov
push
inc
out
jl
sub
xchg
or
mov
lcall
mov
xchg
test
insl
xchg
cld
pop
mov
mov
mov
push
cmc
sahf
mov
jl
push
aaa
adc
push
mov
dec
cmp
adc
sbb
xor
mov
sub
lds
and
ret
fsts
out
negl
inc
setno
rorl
cmp
adc
stc
mov
mov
out
push
cld
dec
adc
in
js
cltd
lods
rcr
push
cmp
mov
stos
call
sti
adc
std
inc
fbld
stc
inc
sub
mov
mov
scas
mov
jne
stos
cmp
ja
mov
jnp
sahf
shlb
sub
sbbl
ret
mov
fsubs
sbb
sti
loop
mov
add
xchg
pop
push
dec
jo
inc
jmp
in
adc
sbb
xor
adc
lea
ret
mov
push
outsl
xchg
call
mov
addr16
mov
mov
jg
loopne
out
inc
lock
xor
imul
cwtl
sub
inc
outsl
sahf
jmp
or
dec
pop
ja
lret
push
add
cli
fwait
js
leave
xchg
lock
rorb
sub
mov
ret
jb
lods
mov
movsl
loopne
sub
adc
shr
sub
mov
inc
dec
repz
movsl
loopne
mov
aaa
gs
or
lcall
insl
add
sub
and
vpinsrw
sub
mov
cli
cmp
push
into
aas
sarb
xchg
sahf
out
inc
pop
pop
sub
clc
lahf
out
add
in
mov
jns
divl
inc
mov
add
divl
rcl
push
adc
ja
mov
and
pushl
movl
add
xchg
loopne
push
leave
loop
sub
je
pop
cld
cld
xchg
cltd
scas
push
adcl
mov
fsubrl
clc
mov
jbe
add
test
mov
add
pop
pop
outsl
sub
inc
test
lahf
test
or
add
dec
sahf
in
pop
adc
scas
ret
inc
sti
fdiv
jl
xor
cltd
cmc
jno
mov
sar
aam
and
fdivs
dec
and
inc
je
pushf
pop
cmp
sub
into
mov
lret
jne
push
and
push
push
popf
add
mov
cmp
jp
jnp
mov
aad
int
enter
gs
pusha
push
test
sbb
mov
xor
rorl
fsubrs
es
sub
jmp
jecxz
movb
sarb
clc
or
inc
jnp
cmp
pop
adc
push
add
cmp
daa
push
scas
fs
mov
pop
ficoms
call
push
xlat
in
into
pushf
sub
pop
and
les
xchg
pop
push
sahf
xor
adc
dec
jo
mov
icebp
iret
rcr
cmpsl
push
push
shrl
divl
xchg
pop
loopne
sahf
mov
ds
mov
ret
add
mov
testb
imul
or
dec
sbb
sahf
mov
inc
jmp
add
ss
or
jbe
popf
xlat
cltd
inc
lret
mov
scas
outsl
sbbb
sub
adcb
mov
or
icebp
cltd
sbb
imull
inc
adc
in
daa
sub
add
mov
out
and
dec
jg
mov
sarl
push
insb
nop
ss
adc
leave
adc
enter
jl
fidivrl
gs
sbb
push
add
inc
add
pop
test
out
mov
cmp
or
push
and
daa
je
out
xchg
jo
and
add
cwtl
not
gs
push
mov
enter
inc
sbb
pop
fsubrs
pusha
das
xor
jecxz
in
or
outsl
retw
outsb
gs
mov
lahf
popf
mov
cs
test
pop
icebp
mov
mov
in
and
aam
mov
add
and
jl
loop
jmp
fnstsw
dec
inc
add
imul
gs
fsubrl
aaa
scas
test
enter
and
adc
jnp
inc
sub
rorl
inc
and
mov
xlat
arpl
and
adc
aam
jnp
xor
aam
movsl
adc
mov
inc
add
xor
dec
cli
dec
pop
jge
js
sbb
pushf
adc
in
sbb
shll
outsl
lahf
pushf
cmp
test
dec
outsl
stc
idivb
repz
sub
loop
xorl
and
repz
mov
adc
lret
cli
push
jmp
rorl
jle
cmp
inc
imul
call
int3
insl
lret
loopne
xchg
in
lds
ds
std
repz
xchg
mov
xor
or
sbbl
out
mov
out
pop
sbb
inc
insb
xor
cs
dec
mov
push
mov
sahf
sbb
cmp
xchg
cmp
rcl
dec
insl
pusha
andl
in
dec
lret
jge
xchg
cmp
scas
loop
sbb
imul
pushf
pop
sti
addl
aad
cmc
outsl
loopne
cwtl
dec
cmpsl
ret
pop
mov
out
sbb
ljmp
repnz
or
mov
pop
mov
push
dec
pop
cmpsl
loope
or
push
sar
pop
ret
adc
lods
hlt
inc
adc
mov
rcr
fildll
fisubs
mov
ljmp
pop
sub
testl
bound
imulb
cli
imul
cmp
adc
aaa
ret
test
pop
stos
hlt
push
subb
notb
or
insl
and
pop
jae
add
into
inc
inc
pop
push
ja
jmp
aaa
jns
or
pop
hlt
imul
pop
cmp
int3
nop
cld
movsl
popa
bound
popf
nop
jno
sahf
repnz
es
adc
stc
jb
mov
in
popa
pusha
mov
xchg
loop
fnstenv
enter
add
lahf
push
cmpb
in
fists
jl
notl
pop
add
lahf
cmc
lods
in
xchg
pop
loop
scas
and
popa
xchg
mov
loop
xor
rcrb
out
ss
les
push
pop
cltd
sbb
nop
in
xchg
push
enter
add
out
sbb
jg
add
adc
ret
sbb
fdivrl
dec
and
pop
sbb
lds
mov
out
andb
into
add
jl
pop
add
cmp
imul
es
std
rcrb
push
stc
fwait
mov
mov
fs
stos
sub
add
insl
out
scas
jp
mov
adc
aaa
push
scas
pop
cmp
mov
xchg
mov
out
mov
cmpsl
cltd
mov
fsub
test
jb
adc
ja
fwait
into
xor
sub
pop
xchg
xor
daa
popf
jo
cmp
sub
or
ret
mov
push
add
mov
mov
lods
pop
mov
jne
fists
xor
test
hlt
les
es
in
int3
mov
fwait
leave
into
and
mov
hlt
mov
out
lret
addr16
fidivrs
sbb
stc
fucomip
sahf
push
mov
xchg
pop
cmp
pop
mov
pop
movsb
sbb
mov
or
ja
call
dec
movsl
out
inc
cmp
jns
cmc
jae
pop
or
loope
pop
and
adc
nop
sub
push
in
cmp
aaa
sbb
inc
aad
scas
adc
sahf
fmulp
mov
push
mov
es
sub
mov
sar
fwait
insl
clc
push
movsl
pop
or
scas
addr16
fisubs
adc
pop
sbb
pushf
pop
sbb
cmp
sub
add
lret
cmpsb
test
dec
repnz
add
sbb
xchg
mov
xchg
push
cmp
out
iret
jl
int
cmpsb
jnp
cmp
leave
test
sub
bound
pop
inc
or
rclb
mov
and
dec
pop
mov
aad
cltd
sub
add
enter
std
pop
push
pop
or
or
aas
cwtl
adc
out
dec
mov
stos
push
aam
test
aaa
cld
jnp
in
mov
jmpw
pop
jae
in
xchg
mov
aam
mov
sbb
pop
cld
mov
std
pop
out
push
fwait
adc
mov
adc
mov
jne
or
mov
adc
push
ret
cmp
inc
test
inc
orl
out
je
hlt
test
lds
je
cmc
xor
aad
cmp
mov
outsb
mov
lea
push
and
enter
pushf
testl
mov
fsubp
or
push
sbbl
cmp
inc
xchg
xchg
xor
cltd
xchg
icebp
push
fistpl
sti
hlt
xchg
enter
imul
outsl
enter
fsubrl
das
rcr
js
shlb
mov
mov
cli
insb
cmpsl
jle
push
sbb
jp
push
ret
push
shlb
cmpsl
pop
mov
jecxz
mov
fwait
sbb
ljmp
sbb
pop
mov
mov
sbb
xor
xchg
jmp
cmc
jl
sbb
jo
scas
jno
mov
jge
mov
fsubrs
add
das
pop
and
or
dec
sbb
sahf
jecxz
sbb
push
subb
lock
mov
aas
in
mov
adc
jne
add
enter
out
jle
sbb
cltd
mov
xchg
add
shl
rolb
jp
jl
movsl
and
mov
sub
dec
fwait
insb
mov
sub
js
dec
mov
mov
leave
gs
aaa
jle
or
jnp
movsb
mov
int
pop
mov
pop
mov
jbe
jecxz
in
fs
test
add
mov
imul
mov
stos
sub
cli
mov
rcrb
movsb
test
lcall
mov
pop
and
jmp
mov
ja
sahf
xchg
cmp
and
push
inc
cmp
adc
sbb
fmul
jns
adc
icebp
enter
js
loop
cli
out
add
lods
mov
xor
pop
pop
push
movsb
insb
sbb
cmp
movsb
movsb
dec
xlat
addr16
pop
in
into
aaa
adc
push
lock
cmpsb
pop
sbb
pop
sbb
popf
fcoms
addr16
sub
imul
cmp
es
pop
mov
lods
sbb
sbbl
ss
mov
mov
aad
pushf
loop
into
rolb
cld
nop
hlt
mov
decb
sbb
scas
jp
out
outsl
ret
or
pusha
xchg
xor
adc
shrl
loop
jne
dec
cltd
inc
mov
lea
dec
inc
xchg
dec
ss
push
inc
loop
xor
aam
fdivl
lret
ljmp
je
sbb
dec
arpl
sbb
mov
popf
ljmp
add
pop
push
loopne
sbb
lea
hlt
sub
dec
inc
sub
pop
xchg
shlb
pop
dec
mov
out
xchg
mov
test
or
ljmp
cmp
lods
jecxz
push
nop
not
inc
xor
sbb
pop
leave
xchg
ss
inc
stos
shlb
lods
lahf
push
in
insl
xor
or
sub
xor
add
push
inc
scas
pop
jle
gs
add
sarl
jb
push
ret
aas
jecxz
xchg
repz
lock
sub
je
push
mov
or
in
movsl
sub
lods
sub
sahf
aad
push
push
les
jnp
jmp
cmp
cmpsl
jecxz
dec
outsl
in
shrb
dec
shrb
mov
mov
jne
adc
jecxz
iret
sbb
es
mov
test
andl
cld
xchg
jl
repnz
in
addr16
add
cmp
xchg
test
ret
icebp
or
inc
cmc
xor
cs
jb
pop
fcmovnu
pop
jg
daa
fcoms
das
mov
push
sub
sahf
push
cmp
nop
sub
pop
in
xchg
mov
filds
xor
insb
test
pop
neg
or
adc
icebp
xlat
ljmp
mov
bound
sub
push
outsl
je
jb
in
movsl
or
sub
fists
dec
std
pop
push
sbb
repz
jge
je
out
jno
jnp
inc
test
pop
int3
into
add
adc
je
dec
inc
and
sahf
xor
mov
cmpsb
pop
loope
cs
xchg
int3
cld
arpl
push
mov
xchg
and
test
out
or
icebp
cmpsl
dec
cmpsl
dec
xor
adc
test
pop
addl
xor
push
mov
add
negl
mov
mov
call
mov
jge
ret
or
xlat
inc
jno
pop
out
cmc
outsb
push
xchg
fisubrs
shll
jns
sbb
xchg
outsb
mov
test
out
xor
ds
sub
jecxz
add
in
push
mov
sbb
out
push
or
mov
cs
lahf
je
ds
movsb
mov
ret
sti
fidivrs
ficomps
push
sub
mov
pop
and
repnz
arpl
push
pop
push
mov
hlt
xor
lcall
or
inc
stos
jp
cmp
xor
mov
roll
stc
pop
inc
cmpsb
subl
aad
fcomps
mov
iret
fcmove
scas
cmp
mov
sub
push
jge
dec
inc
push
dec
imul
adc
or
sti
in
mov
bound
xlat
hlt
mov
loope
nop
pop
sbb
jo
repnz
fcoml
add
mov
test
subb
mov
push
scas
nopl
aaa
push
or
xlat
sbb
or
dec
adc
nop
push
insb
arpl
repnz
pop
enter
sahf
fnstsw
jno
nop
mov
xchg
mov
dec
cmpsl
mov
sub
xchg
sti
or
dec
mov
jae
push
lods
and
push
inc
jnp
push
adc
jb
ljmp
andl
jl
test
mov
xchg
shl
or
inc
xor
cmp
sbb
sbb
loop
std
cmp
push
and
push
mov
jae
cmpsb
xor
imul
adc
ret
mov
or
sahf
push
insl
jmp
push
movsb
mov
out
mov
sbb
outsb
divl
sbb
into
mov
das
sti
mov
popl
ljmp
nop
cli
in
mov
es
cwtl
adc
lock
inc
jae
std
in
lods
add
push
testl
shrb
clc
push
or
hlt
jo
dec
mov
decl
push
sbb
sub
push
sbb
faddl
xor
mov
js
push
cmp
sub
xchg
ret
pop
test
mov
pop
jne
sbb
jae
hlt
scas
xchg
xlat
xchg
push
lock
and
inc
xor
xchg
mov
scas
push
in
mov
xchg
pusha
pop
cs
pop
xchg
loopne
inc
inc
rorl
jl
scas
sarb
mov
cmpsb
mov
cmp
mov
cmpsl
xchg
lret
pop
push
mov
sarl
test
sbb
sahf
dec
sti
ss
and
cmp
je
xchg
lea
adcb
stos
mov
add
lea
sbb
jns
mov
jp
nop
pop
jle
or
sub
in
into
stc
push
mov
xchg
btc
jnp
push
cmc
mov
sub
outsl
ljmp
cmp
out
flds
xchg
push
and
aaa
fistl
push
cwtl
mov
flds
lea
mov
call
push
dec
loop
rorl
aaa
push
sti
dec
mov
pushf
mov
popf
add
jb
mov
xchg
out
pop
pushw
scas
push
lcall
arpl
fsub
dec
outsb
cmpsl
add
mov
dec
pushf
pop
jmp
xchg
mov
jno
aam
pusha
enter
shrb
inc
mov
mov
push
cmp
pop
add
push
pusha
cmpsb
popa
fs
dec
jb
pushf
aaa
push
jge
andl
push
aaa
repnz
nop
iret
sub
lea
dec
mov
push
js
scas
mov
in
testb
fistpl
xchg
lods
stos
jl
jae
cwtl
std
mov
pushf
mov
popa
outsl
mov
negb
ss
sahf
nop
ret
inc
iret
ret
push
nop
push
mov
pop
xor
or
jp
xlat
or
push
into
dec
adc
mov
ds
out
shll
jno
test
iret
cmp
xchg
push
push
in
cs
mov
xor
clc
xchg
sbb
stos
push
jecxz
push
mov
mov
sbb
in
into
inc
fdivrl
sub
push
movsb
sub
lret
push
ja
mov
pop
inc
into
jle
stos
xchg
les
adc
je
enter
loopne
repnz
into
jg
jp
scas
add
sub
jecxz,pn
mov
and
sub
sti
sbb
dec
outsl
jno
stos
cltd
cmp
into
lods
xchg
ja
nop
sahf
mov
mov
fimuls
int3
jno
jmp
and
loopne
imul
popa
sbb
ja
sbb
ljmp
dec
inc
pushl
ror
les
dec
xchg
xchg
rorb
mov
mov
xchg
sbb
and
popa
sub
push
dec
mov
lahf
scas
mov
xor
cli
call
mov
jl
jb
call
int3
xchg
stos
icebp
sti
cmpsb
sub
inc
inc
cmpl
pop
cmp
les
mov
or
into
pop
jmp
cwtl
int3
dec
movsl
xchg
ret
mov
loopne
shld
mov
jle
fs
inc
test
popf
mov
jg
xor
jg
out
xchg
not
xchg
sub
and
xchg
inc
pop
mov
mov
ljmp
mov
inc
cmpl
gs
lds
movsb
in
pop
mov
and
xchg
adc
int3
xchg
bound
xor
sub
cmp
mov
xlat
add
cmp
out
lcall
fsts
out
out
lock
imul
addr16
inc
std
mov
sub
jmp
dec
into
or
inc
mov
icebp
fs
adc
gs
imul
inc
lahf
xor
sub
rclb
lods
xor
add
iret
sti
cwtl
aaa
xchg
push
push
inc
sub
jle
in
jb
mov
cmp
jo
xchg
mov
hlt
pop
and
push
aas
addr16
push
jne
shr
sbbl
insl
arpl
or
fdivr
push
daa
outsl
je
or
jmp
or
push
mov
or
mov
cmp
inc
push
mov
add
sbb
int
push
in
pop
adc
clc
mov
and
push
xchg
in
nop
jecxz
pop
adc
push
push
dec
cld
sub
mov
mov
inc
cmp
arpl
inc
imul
jp
mov
xchg
jne
test
in
scas
out
dec
fcoms
enter
in
push
data16
mov
dec
insl
xchg
mov
mov
mov
movsl
xchg
jge
mov
sub
jns
inc
push
add
subl
sahf
ja
outsl
add
adc
push
cmc
pop
outsb
out
jno
mov
xor
mov
add
js
je
movsb
xchg
jge
clc
push
xlat
dec
into
out
mov
inc
mov
sbb
in
push
fisttpl
loope
ja
pop
sarl
lret
aam
xor
jmp
scas
aaa
sbb
adc
mov
add
add
jns
or
mov
add
xor
fs
sub
sbb
jbe
js
outsb
cs
mov
mov
mov
lcall
push
in
int
jnp
sbb
fucomip
sub
add
mov
ret
pop
adc
insl
aam
insb
sbb
test
ficomps
sub
and
mov
pop
js
jnp
and
scas
jb
sbb
pop
les
cwtl
cwtl
dec
mov
sbbl
add
aaa
lock
cmc
loopne
cltd
xor
into
insl
jl
sbb
add
dec
shll
cli
pusha
jle
js
shl
cmp
xor
mov
xchg
jecxz
bound
sub
cmp
add
outsb
sub
lds
ficoml
sub
adc
adc
pminsw
mov
cvtps2pd
mov
scas
adc
dec
test
xchg
ret
arpl
xor
push
imul
mov
pop
lods
mov
shrl
mov
mov
test
sbb
mulb
jge
fcoml
in
das
int3
xor
push
sbb
lcall
ds
cmp
stos
push
fsts
or
cmp
popa
mov
jb
xchg
scas
xchg
mov
pop
cmpl
in
in
jmp
mov
fbstp
mov
adcl
jb
mov
push
push
inc
cmpsb
out
test
xor
outsb
inc
cli
pop
insb
test
jnp
lods
mov
pop
xchg
adc
fmul
movsb
adc
clc
sahf
jb
rol
sub
ret
adc
arpl
out
or
dec
xor
push
mov
mov
ds
ljmp
cld
sbbb
xchg
cmpsb
mov
mul
pop
shll
push
cltd
fnstenv
xchg
dec
in
ja
pusha
insl
or
pop
movsl
ljmp
cmp
dec
std
mov
shrl
xor
and
cmpsw
adc
sahf
lahf
fs
outsb
mov
jmp
mov
push
in
inc
scas
cmp
popa
inc
das
scas
and
in
cmp
dec
adc
add
sub
mov
fdivp
fisubrs
shl
aaa
push
int3
fs
ja
nop
inc
jle
movsb
in
mov
and
xchg
bound
xor
notb
imul
inc
adc
xchg
in
leave
shl
push
cmp
adc
nop
movsl
ret
jae
push
sub
mov
ret
test
scas
dec
into
data16
shll
xchg
andl
sub
cmp
int3
cmp
xor
into
xor
das
hlt
aam
iret
and
xlat
je
es
cmc
leave
mov
popa
xchg
loop
pop
mull
xor
dec
push
xchg
or
shlb
and
icebp
jmp
in
jns
fimull
xchg
lcall
push
insl
out
jne
cld
dec
stos
lock
jnp
jae
sub
inc
mov
add
cmp
push
mov
in
xorb
xchg
or
dec
sbb
inc
stos
sbb
pushf
ljmp
mov
cmp
int3
xor
pop
jo
cltd
mov
out
cli
pop
cmpsl
pop
loop
push
enter
xchg
jmp
sub
xchg
aad
ds
pop
into
dec
movsl
lret
cmp
ret
mov
jecxz
flds
jne
movl
sbbb
xor
pop
imul
mov
leave
ret
aam
std
xchg
mov
add
loop
into
pop
xchg
imul
fstl
loopne
inc
jge
adc
aaa
pop
push
pop
out
cs
gs
and
or
enter
xor
add
dec
mov
or
insb
mov
mov
sub
jle
sub
ds
pmullw
fidivrs
xchg
sbb
push
mov
icebp
mov
and
inc
je
mov
fisttps
subl
loop
popf
add
add
dec
idivb
test
and
shlb
mov
xchg
mov
push
mov
sbb
rolb
ficoms
lds
push
jb
adc
je
dec
or
or
lea
jnp
enter
testl
sub
daa
jg
xor
into
arpl
pop
flds
scas
push
mov
inc
cmpsb
adc
xchg
es
push
cmpb
fimuls
mov
adc
inc
sbb
inc
nop
lods
stos
outsl
cmc
aad
mov
cmp
scas
lods
mov
es
sbbb
rcll
gs
cmp
subl
or
test
inc
mov
mov
adc
in
outsl
je
ds
popa
fidivl
js
push
dec
sub
xor
add
sbb
ss
push
sbb
push
stc
ret
pop
pushf
inc
data16
sahf
push
jb
push
pop
push
jmp
fmull
mov
int
cmp
cld
and
imul
inc
inc
push
sub
inc
and
fcoms
stos
mov
jb
mov
nop
pop
test
daa
andb
outsb
in
jnp
and
addr16
aaa
xor
mov
xchg
jg
cmp
dec
cltd
das
cmp
ja
shlb
call
and
bound
movsl
dec
divb
jo
push
mov
and
jno
cmpsl
mov
pop
xchg
push
popa
das
or
dec
xor
aas
lret
fcmovnu
mov
xchg
push
nop
je
je
lock
push
leave
pop
pop
sub
testb
lods
jo
xchg
aaa
jge
scas
pushf
xor
adc
mov
inc
aam
xlat
flds
lahf
cwtl
daa
pop
inc
add
mov
pop
lds
leave
sbb
out
subl
jg
inc
in
rorb
popa
jnp
push
in
push
sub
pop
sbb
jb
test
and
xchg
jle
mov
mov
fmull
xchg
ja
lds
aaa
mov
cwtl
mov
subl
jns
jbe
inc
fwait
and
jne
pop
imul
jae
and
and
inc
es
out
scas
bound
fbstp
jmp
jmp
out
movsl
movsl
jmp
jmp
fnstenv
xor
iret
lahf
ljmp
popf
add
test
or
out
jp
adc
rcrb
sub
xor
ds
mov
sbb
aad
addb
sti
sub
pop
stos
mov
xor
mov
fwait
cwtl
xlat
mov
bound
adc
jecxz
dec
jne
cmp
cli
and
cmp
cmpsl
aam
mov
jl
adc
jo
adc
loope
cs
pop
adc
sbb
lds
out
lea
cmp
jnp
repz
xchg
inc
fisttpl
xor
mov
add
aas
fstps
test
push
cli
ret
fcmovnu
leave
xor
movsl
inc
inc
test
popf
inc
sbb
xor
test
aaa
das
movq
sub
xor
sbb
mov
cld
es
push
ficoms
sbb
xchg
insl
in
in
push
xchg
pop
mov
mov
mov
cli
fisubl
cmp
mov
aad
push
repz
outsb
cli
fisttps
out
sti
push
clc
rolb
setne
mov
rorl
sbb
xchg
sbb
lea
sbb
lock
pop
sti
push
add
repz
cmp
ret
mov
iret
adc
cli
std
xchg
andb
dec
jns
inc
inc
and
or
xor
out
stos
js
aad
sbb
or
sbbl
xor
clc
jmp
out
push
push
idivb
xor
jl
cmc
ficomps
or
mov
and
jg
shll
inc
add
out
jle
push
stos
lcall
icebp
fsubs
jp
mov
sbb
push
pop
fs
xchg
jb
mov
dec
aas
inc
fnstcw
loope
or
enter
imul
cltd
pop
xor
add
mov
mov
cwtl
xchg
dec
jb
adc
lods
xchg
or
insl
mov
and
iret
push
andb
or
fmull
cmp
xor
xor
fstl
cvtps2pi
cmc
leave
out
cmp
imul
fisubs
cmp
pop
adc
adc
pop
xor
out
or
mov
mov
int3
aas
dec
mov
aad
data16
sub
mov
outsl
xor
lods
into
ficompl
sub
push
adc
pop
jl
jp
popf
pusha
adc
cmpsl
fnstenv
andl
inc
jp
or
lea
and
insl
pop
sbb
pop
insl
not
pop
dec
into
jne
xchg
jp
inc
inc
scas
dec
sub
out
adc
dec
mov
pop
aad
std
lods
sub
mov
xchg
mov
dec
lds
repnz
push
loope
mov
mov
jl
out
sub
mov
insl
xchg
aam
cltd
scas
inc
fsubl
ret
or
nop
aad
pop
in
mov
aad
shrb
xor
inc
mov
sti
shr
movsb
and
inc
pop
fcompl
bound
push
loopne
pop
mov
cmp
fs
push
jns
jns
sub
int
mov
iret
push
mov
cltd
ficompl
cmp
xorl
insb
cli
mov
push
fidivs
into
aad
pop
pusha
dec
cmp
popf
push
inc
jbe
mov
sahf
pop
clc
inc
or
xchg
lcall
sub
jnp
ss
pop
dec
add
inc
out
and
mov
cltd
aaa
aas
sub
lcall
push
mov
loopne
adc
cmp
cmp
jbe
or
adc
dec
jl
jecxz
or
gs
rclb
rcrl
mov
adc
fbld
div
and
sbb
rolb
loop
pop
sbb
ljmp
jb
lds
add
mov
sub
mov
shr
adc
inc
sbb
jp
sub
sub
xor
enter
pop
pop
cmp
push
add
dec
fldl
mov
mov
push
push
dec
mov
sbbl
idivb
gs
and
sbb
ficomps
mov
popa
jo
inc
mov
pop
fsubp
call
mov
jge
cmp
lds
aad
sbb
pop
pop
mov
dec
shlb
mov
clc
sbb
popf
je
out
adc
jo
cmp
out
test
out
in
dec
pop
mov
lahf
dec
jbe
test
sub
es
sbb
add
push
loop
stos
push
roll
or
stc
cmp
outsb
fdivrl
shl
fwait
popf
sub
xor
pop
xchg
jge
inc
pop
leave
clc
emms
incl
adc
rol
call
sbb
scas
adc
cld
dec
hlt
jb
cmp
or
sub
jno
cwtl
mov
mov
mov
call
add
fcomp
mov
jb
sbb
outsl
test
inc
rcrb
xorl
insl
or
and
fs
stos
loope
cwtl
insl
sar
xchg
lds
xchg
inc
cltd
bound
xor
popa
out
orb
mov
js
dec
repz
mov
mov
clc
jbe
neg
push
dec
pop
jle
lret
ljmp
inc
inc
je
js
xor
sub
out
jl
inc
xlat
pop
jb
add
sbb
in
adc
nop
add
movsl
dec
adc
leave
xchg
adc
mov
hlt
leave
jbe
dec
jmp
adc
in
mov
cmc
outsb
dec
dec
xlat
jg
pop
push
ret
inc
mov
iret
cli
adc
sbb
push
xor
ds
arpl
in
mov
fimuls
mov
out
push
lret
dec
cmp
inc
dec
cmp
xor
cmp
outsb
push
sbb
decb
scas
testl
xchg
push
fcompl
imul
pop
pushf
lea
push
cmp
call
cltd
stos
rcr
rclb
jns
hlt
movsb
add
mov
fwait
shlb
xlat
ret
call
cmc
jo
xchg
loope
mov
rclb
adc
add
mov
inc
sub
jg
fsubl
cmp
mov
mov
jp
cmp
jns
jbe
lahf
test
push
loopne
cmp
and
push
pop
fdivl
imul
testb
mov
or
arpl
scas
jmp
popa
pop
push
lods
mov
call
scas
pop
dec
xor
sbb
or
jle
lahf
mov
pop
stos
andb
sub
xchg
dec
stos
stos
xchg
rolb
fiadds
mov
cmc
xchg
out
jo
cmp
call
adc
sbb
repnz
arpl
dec
adc
xchg
add
xor
lods
stos
stos
insb
pop
or
cwtl
call
fists
sti
jg
cmp
xchg
loope
push
es
push
add
lds
stos
push
scas
fsubl
hlt
cmpl
mov
stos
pop
ds
push
std
jp
pop
sbb
jnp
mov
ds
arpl
in
cmp
jbe
lret
mov
jns
test
sahf
leave
sub
pop
pmaxsw
cmc
stos
ds
inc
fidivs
and
imul
fwait
repz
cmp
scas
mov
fldenv
xor
sahf
adc
mov
jg
loopne
data16
outsl
dec
xor
jg
mulb
xchg
movsl
shr
xor
lods
xchg
movsb
mov
ljmp
and
adc
shlb
pop
xor
sbb
ja
cmpsl
xor
or
rcr
insw
or
fiaddl
iret
aad
jmp
adc
adcb
adc
insl
int
inc
jg
loope
movsl
add
leave
push
and
arpl
push
or
cmpsl
xchg
mov
mov
push
jnp
sub
xor
ja
jge
cmp
inc
mulb
mov
mov
out
in
or
ja
clc
int
lods
sahf
push
mov
push
repnz
stos
aad
lret
adc
scas
movsl
push
adc
cwtl
mov
mov
pop
lods
sub
jo
pop
mov
sbb
cmpl
mov
out
sti
mov
pop
sub
aam
mov
mov
les
inc
or
sub
adc
add
xchg
dec
scas
jb
xor
int
insl
loope
in
pop
jbe
imul
mov
sbb
pop
sahf
sub
jecxz
pop
shll
sbb
pusha
sub
mov
sub
cmpsb
jnp
sbb
xorb
aad
jo
sbb
inc
cmp
stos
lea
mov
scas
jg
into
test
into
mov
arpl
xor
lds
xlat
jp
mov
dec
or
xchg
test
repz
dec
add
in
pop
adc
orb
lds
sbb
loop
xor
iret
and
xlat
cmp
xor
cli
cs
xchg
inc
add
out
aas
cmp
dec
icebp
outsl
and
push
push
sahf
sub
mov
push
xlat
mov
and
push
test
and
out
fs
push
push
inc
pushf
push
push
dec
ret
add
mov
mov
fcmovne
addb
push
mov
push
cmp
dec
into
sbb
and
mov
adc
pop
jns
into
and
stos
inc
notb
jecxz
sub
ret
xchg
je
out
push
imul
lret
inc
out
lahf
stos
add
jp
sbb
out
push
imul
dec
rcrb
lock
les
jb
cs
out
push
push
call
sub
fstpt
pop
int
test
cmp
jo
pop
shl
sub
adc
xchg
out
mov
fxch
aam
js
inc
pop
lock
pop
mov
shrb
pop
inc
ret
aad
decb
mov
cmp
ljmp
into
adc
and
scas
push
inc
jl
xor
sbb
jo
stos
mov
iret
shl
dec
out
lea
pop
sahf
or
dec
lret
cli
and
jle
pop
dec
dec
cmc
mov
xchg
lcall
push
fsubr
nop
dec
or
or
mov
pop
aaa
cli
mov
int3
xor
pop
hlt
sbb
or
push
jbe
inc
lcall
fldt
adcl
fmulp
out
mov
dec
into
xor
pop
mov
or
sarb
popf
aam
out
cltd
mov
test
jb
fwait
or
xorl
jmp
pop
xor
sbb
add
in
data16
mov
test
lds
roll
jl
flds
aaa
mov
sub
xor
shr
add
sbb
sub
fbstp
imul
clc
jecxz
push
pusha
inc
movsb
cmpb
mov
pushf
xchg
pop
jmp
fidivs
jecxz
call
ja
inc
shlb
movsl
dec
test
cld
xchg
xchg
das
xor
in
xchg
jne
lea
and
mov
sbb
and
jecxz
mov
add
dec
push
add
sbb
mov
in
xchg
inc
cltd
sub
lcall
add
sub
mov
dec
jp
and
scas
test
addr16
jnp
jl
in
repz
or
dec
addr16
icebp
xchg
sbb
mov
mov
pop
dec
adc
push
jp
pop
xor
lret
imul
in
inc
out
mov
xchg
dec
mov
xor
mov
dec
xor
xor
data16
cmc
xchg
nop
mov
cld
jp
xchg
push
jp
mov
enter
or
lahf
add
divb
or
aam
and
pop
out
add
mov
or
fmulp
mov
cmp
int
push
lcall
mov
out
out
pop
loopne
in
out
inc
popa
fidivs
cmp
add
xchg
ret
loop
push
dec
xchg
test
cmp
add
mov
cmpsl
add
out
test
iret
dec
fsubl
sbb
xchg
dec
dec
pop
dec
aad
in
shr
inc
lcall
sbb
xor
ds
leave
mov
outsb
jp
aas
inc
pop
cli
int3
jnp
push
xor
mov
mov
enter
testl
mov
dec
js
or
sarb
cmpsb
cmp
nop
or
pop
sub
dec
imul
push
cli
test
cmp
mov
rcr
rcrl
es
mov
or
mov
mov
ss
int
pop
mov
aam
mov
pop
notl
stos
mov
mov
ret
push
rcrb
sub
cs
inc
xchg
mov
inc
adc
mov
or
jg
insb
iret
mov
xchg
gs
add
inc
pop
add
repz
cmpsb
jbe
popa
add
test
push
inc
mov
xor
xlat
push
aam
js
mov
adc
push
cmp
repz
gs
adc
mov
sbb
dec
and
test
loope
inc
test
jge
jae
enter
out
stos
sub
lcall
aad
add
cmc
adc
fwait
lcall
mov
pusha
dec
iret
pop
inc
ret
pop
or
jle
pop
fisttpl
and
adc
mov
gs
mov
cwtl
push
and
lock
loope
ljmp
mov
ja
shlb
loopne
add
dec
and
add
test
pop
dec
fdivrl
jg
stos
xchg
addl
aam
test
lret
cltd
pop
es
push
je
enter
mov
sbb
hlt
int
lret
pushf
loop
out
fs
js
sti
add
and
ljmp
cli
aad
push
xor
cmpl
lcall
in
and
or
push
fcoml
loop
fistpl
or
xlat
pop
jae,pn
mov
lea
rcrb
sub
sbb
stos
jg
lods
hlt
testl
arpl
repnz
inc
std
ror
shll
jp
mov
sbb
mov
mov
jl
iret
xchg
mov
daa
ret
sti
bound
xchg
mov
arpl
mov
mov
sti
cmpsb
jo
in
pop
inc
mov
mov
mov
xor
pop
xchg
sahf
test
jne
stc
js
jae
std
xchg
andl
pushf
inc
pusha
cs
outsl
push
fcompl
cmpsl
pop
ret
es
das
jo
mov
cmp
xor
xchg
mov
imul
cmp
add
fsubl
sbbb
test
arpl
repz
fwait
out
rcll
jnp
aam
mov
xchg
pop
dec
pusha
xor
push
cmc
rol
jno
imul
push
int
dec
add
jne
ljmp
scas
ds
divl
fildll
xchg
adc
pushf
sub
in
orb
sbb
stos
xchg
ljmp
mov
mov
pop
push
xchg
fbld
jo
imul
pop
jns
icebp
adc
mov
or
mov
aam
sub
push
repnz
mov
jg
cmp
jl
les
stos
push
orl
cmp
imul
pop
cmpsl
ret
inc
imul
int3
mov
or
sahf
lret
loope
into
sub
negb
xchg
rorl
pop
in
cmp
and
or
inc
cmp
or
push
out
pop
ret
into
lods
nop
xchg
in
lcall
dec
xor
dec
sub
mov
push
cmpsl
xchg
test
aam
out
xchg
loopne
cwtl
jge
imul
rcrl
and
jmp
mov
loop
lock
mov
call
inc
or
idiv
aas
cmp
fbld
js
stos
mov
divl
adc
sub
adc
lock
push
into
sbb
jecxz
mov
enter
clc
inc
addr16
or
cmp
pusha
shll
ss
and
cmpsb
aaa
lds
je
pop
fxch
sub
scas
jmp
addr16
xchg
sbb
ret
shl
push
xor
dec
adc
in
in
shl
insb
jnp
lock
outsl
or
icebp
mov
outsb
call
clc
inc
cld
xchg
int
shl
xor
add
xor
pop
xchg
lods
bound
mov
divb
imul
and
enter
in
out
popf
mov
inc
jbe
les
mov
pop
cwtl
aas
imul
insb
push
pusha
lcall
popf
xchg
push
lret
loope
test
mov
and
push
pop
aam
fstpl
jmp
mov
stc
arpl
sahf
jge
stc
mov
xchg
addr16
loop
push
mov
ss
push
adc
ret
pop
cwtl
inc
xchg
pop
push
adc
mov
imul
enter
push
ljmp
xor
fwait
or
and
js
mov
ss
add
cmp
jb
dec
sbb
pusha
and
add
out
adc
push
mov
subb
lea
ret
testb
adc
cmp
xor
dec
fidivs
out
loop
addr16
ss
js
push
xchg
pop
stos
lret
or
sbb
andps
shlb
xor
stc
inc
mov
add
fadds
and
adc
xchg
les
icebp
inc
mov
scas
mov
cmp
add
inc
push
xchg
fsubrs
enter
das
rcrl
push
fcmovu
lods
repz
adc
aam
lahf
out
add
or
jne
das
sbb
out
lds
shlb
mov
xor
pop
test
shrl
jecxz
xchg
es
mov
push
xchg
jmp
fidivl
xchg
popa
movsb
and
hlt
mov
pop
fisttpl
sbb
xor
lods
shlb
addr16
jne
es
pop
sub
dec
and
out
lret
push
into
in
mov
movsb
scas
out
loope
pop
mov
xchg
jle
jg
and
iret
and
and
push
push
mov
mov
and
fistpll
xchg
fldenv
jmp
das
adc
nop
sub
sahf
jne
adc
aaa
into
int
or
pop
mov
sub
mov
jmp
adc
pushf
pop
or
jl
add
jno
and
js
fs
and
sub
daa
mov
nop
test
ret
in
pushf
or
xor
and
or
std
xor
push
mov
mov
rcrb
cmpsb
sarl
push
addr16
ret
lods
les
testb
cwtl
mov
pop
xlat
sti
dec
test
inc
inc
es
fistps
xchg
jbe
enter
xor
or
mull
enter
enter
ret
pop
add
stos
push
mov
pop
ja
movq
loop
pop
sub
mov
in
cmc
arpl
pop
out
mov
sub
je
nop
cmp
repz
fsubrs
dec
arpl
cmpsb
mov
js
bound
call
jno
jb
sub
bound
pop
inc
outsl
fs
inc
outsl
cmp
cli
mov
outsl
aaa
sub
push
xchg
mov
data16
jge
cmp
and
andb
dec
jmp
cmp
lods
push
dec
int3
sahf
sahf
jmp
lcall
std
dec
add
xlat
adc
clc
cmp
mov
mov
xchg
pusha
out
mov
mov
insl
pop
repnz
and
lods
pop
mov
dec
orl
test
push
mov
xchg
dec
mov
push
push
or
xlat
add
mov
jno
inc
addr16
dec
xor
push
push
dec
outsb
fisttpll
insl
dec
sarl
sbbl
ds
mov
and
sub
cmpl
test
sarb
fnstcw
jl
roll
add
leave
dec
aas
hlt
cli
cs
fldt
ljmp
stos
pop
insl
jb
xor
fldenv
aas
insb
fisttps
stc
push
xchg
pop
loop
lods
fcompl
sbb
stc
cmp
sar
jo
push
sahf
loope
pushf
xor
push
push
jl
pop
jecxz
ljmp
je
rcrl
fnsave
adc
insl
cltd
imulb
addr16
mov
js
clc
es
push
or
ja
test
mov
mov
idivb
push
pop
es
js
mov
push
push
pop
push
add
std
xchg
out
pop
dec
cwtl
xlat
and
dec
imulb
shrl
push
xor
inc
or
pop
xchg
out
adc
dec
mov
jge
rorl
add
outsb
in
push
pop
and
aad
gs
jb
out
pop
stc
outsb
out
mov
mov
push
ljmp
push
ficompl
jle
mov
call
lea
mov
call
pop
loopne
ds
xchg
fnstsw
data16
movsl
cli
mov
and
inc
pop
xor
sbb
pop
fs
xor
jmp
ds
dec
ja
dec
rorb
pop
movsb
sahf
push
jg
fwait
nopl
and
lods
loop
lret
movsl
mov
fdivrl
xchg
addr16
sbb
mov
cmp
and
fcmovne
push
call
jns
xor
aad
xchg
cmc
push
popa
push
push
dec
out
jp
pop
repz
out
int
fsubrp
jl
xchg
or
mov
xchg
negb
mov
bound
sub
ficoms
fstpt
fs
pop
ds
loope
cli
loopne
push
sbb
xor
or
mov
sub
ret
shlb
xor
es
into
stos
jb
or
js
or
shlb
subl
cmp
mov
ss
sub
imul
pushl
mov
loope
push
pop
add
jnp
push
notb
pop
mov
sbb
cs
pushf
mov
sub
adc
mov
int
sbb
lock
pop
jmp
or
cld
clc
add
add
ljmp
jns
sub
les
stc
or
push
jb
cmp
nop
and
xorl
ret
push
lods
sbb
jae
addr16
sbb
push
repz
push
cmpsb
test
mov
in
stc
gs
shll
mov
mov
movsl
jne
mov
jns
mov
mov
xchg
ror
push
hlt
iret
into
int3
scas
and
test
lock
xchg
or
add
dec
ret
test
hlt
int
shr
jmp
jp
bound
inc
inc
cmpsl
fnsave
stos
mov
adc
rol
sub
loopne
aaa
pop
jmp
out
push
jp
imul
jb
mov
clc
mov
int
popa
bound
decb
orb
push
cmp
movsb
dec
repz
in
fidivl
xlat
jno
sub
mov
mov
or
lret
xchg
scas
add
add
pop
sub
insb
mov
loop
mov
mov
jbe
sbbl
fmull
sbb
sbbb
push
or
rcll
sub
imul
rcr
or
lret
jle
pop
das
sub
cmp
inc
outsb
ret
outsb
dec
and
mov
add
mov
ret
pusha
mov
in
addr16
sub
jl
push
cmc
gs
or
sbb
mov
xchg
insb
jmp
cmpsl
sub
pop
pop
pop
stc
out
mov
enter
mov
mov
pop
mov
add
icebp
fldl
mov
cld
xor
outsl
mov
mov
xchg
push
sub
mov
jmp
add
add
cmpsl
lds
leave
cmp
addl
dec
dec
test
pop
pop
out
ret
mov
add
out
sub
insl
cmp
orb
data16
mov
fs
jnp
cmp
ficomps
test
popa
or
push
mov
je
or
xor
lea
call
dec
out
fldcw
cmp
shl
cmc
lahf
pop
das
cli
shlb
insl
lds
aam
rcrb
or
pop
adc
cmp
icebp
fsubp
mov
jns
push
and
rcl
fisubl
push
jl
and
sbb
mov
cmp
lea
test
cmp
sub
icebp
cmp
pushl
inc
xchg
aas
icebp
or
xor
pop
or
jo
cltd
shrl
dec
mov
mov
test
xchg
ds
cli
in
mov
addb
ret
add
das
adc
rcll
jle
cmp
dec
add
pusha
mov
int
inc
sub
and
mov
std
jno
sti
das
mov
sbb
adc
scas
fiadds
cmp
ficoms
or
jo
outsb
stc
imul
xorb
mov
std
pushf
sahf
out
sar
sub
jle
cmpl
lods
jbe
in
push
filds
fstps
jns
call
rolb
lcall
mov
cld
add
inc
dec
pop
xchg
mov
ds
cmp
divl
pop
mov
mov
jle
mov
mov
sbb
jge
cltd
push
inc
jmp
call
sub
xchg
mov
subl
test
fwait
cmp
sub
or
movsb
and
jmpw
add
ret
mov
cmp
fwait
out
lea
ljmp
pop
leave
mov
mov
in
lock
push
cwtl
filds
xchg
icebp
call
sahf
mov
rcrb
loope
xor
mov
dec
call
xor
sbb
mov
stos
xchg
lock
out
mov
clc
add
ret
divl
jbe
push
dec
call
bound
and
test
mov
data16
movsb
in
sbb
jo
fmulp
mov
incb
push
and
out
pop
add
aaa
sbb
mov
or
and
xor
mov
jle
jge
hlt
xchg
adc
into
outsb
fmulp
int3
mov
inc
push
cld
scas
mov
sahf
dec
ret
cld
mov
jae
es
cmp
test
push
popa
sub
sbb
add
fs
test
ret
loop
xchg
dec
pop
cmpsb
sti
jg
jle
mov
add
fcomp
pop
addr16
sub
push
pop
insb
andl
loope
mov
in
add
jnp
test
imul
adc
cmp
mov
std
repz
sbb
cmpsb
xor
imulb
js
jo
enter
dec
push
js
jne
or
add
fidivl
bound
gs
xchg
cwtl
jmp
loop
imul
jae
push
add
xchg
stos
dec
dec
xchg
mov
mov
addl
mov
and
jno
arpl
cmp
test
mov
lods
fcoml
popa
adc
jne
je
sar
std
add
dec
cwtl
rorl
pushf
stc
add
jle
xchg
dec
xor
sbbb
lods
into
xlat
xchg
jne
jp
repnz
mov
pop
les
inc
insb
xor
dec
addr16
pop
jno
cmpsl
sti
and
add
mov
enter
test
ds
cmp
ret
lds
cmp
sbb
dec
insl
test
adc
push
jae
in
jmp
int3
jns
fsubs
sti
stos
xlat
inc
nop
int
jo
imul
jno
pop
das
pop
mov
mov
xlat
mov
loope
mov
out
adc
sbbb
cmp
add
sub
sbb
jns
mov
cmpsb
cmp
jl
aas
sub
dec
fs
fs
mov
cmp
mov
stc
lcall
shr
inc
cmp
cld
sub
aam
ja
cmc
dec
enter
xchg
sbb
sbb
mov
xor
inc
pop
mov
sbb
xlat
lods
mov
mov
into
push
cli
iret
dec
inc
add
cmp
ret
xchg
cltd
int3
fcmove
push
mov
push
daa
movsl
mov
repnz
ret
ret
mov
adc
cmp
adc
lahf
sub
xchg
in
jle
lea
ficoms
cmp
das
sti
inc
xor
pop
mov
das
push
ljmp
xchg
mov
jge
sbb
mov
mov
cmpsb
and
inc
dec
ret
pop
insl
jno
xor
and
sbb
sbb
insl
ss
movsb
dec
int
mov
xchg
fcoml
push
adcl
inc
cmp
adc
lock
insb
cmp
pusha
mov
into
mov
push
mov
je
nop
rclb
pop
test
call
test
dec
clc
dec
das
adc
hlt
sbbl
insb
adc
push
xchg
aas
fimuls
and
daa
fs
mov
push
push
lea
mov
rcll
xor
push
pop
jbe
and
xchg
repnz
push
sub
mov
mov
int3
mov
pop
pop
push
push
in
clc
cmpsl
xor
push
dec
scas
insb
mov
or
mov
sti
fisttps
sti
fwait
stos
in
out
mov
dec
mov
xor
jae
mov
cld
add
cmpsl
cld
aas
daa
cmpsl
adc
cbtw
xchg
mov
or
add
and
add
cmc
add
cmpsl
sar
loop
mov
outsl
cmpsb
adc
pop
nop
push
sbb
lods
mov
mov
fs
das
in
and
push
mov
adc
jo
scas
out
int
jge
xor
insl
mov
jno
xchg
popf
imul
iret
push
sbb
dec
xor
inc
mov
add
mov
jecxz
xchg
out
xor
jl
sbb
daa
loop
xchg
push
call
mov
lcall
aam
jns
test
cmp
cld
imul
push
mov
inc
mov
mov
jnp
mov
insb
movsl
loope
pop
ficoms
enter
fistps
mov
mov
repnz
sub
mov
shrb
ret
lock
and
movsl
xchg
xlat
iret
push
dec
push
or
and
xor
jmp
inc
and
jecxz
movsl
jl
aaa
fwait
cmp
mov
nop
mov
rcr
mov
mov
rcrb
jb
fs
cmp
cwtl
imul
call
aam
loopne
sbb
mov
xchg
dec
push
mov
sub
or
in
movsb
pushf
jno
adc
sbb
es
mov
movsl
cmp
sub
jne
adc
pop
sub
in
mov
in
mov
insl
and
jno
mov
lods
pop
stc
testl
repz
into
and
fildl
jp
jecxz
cld
add
cmpsl
sub
jae
cmc
sahf
or
xchg
insl
test
inc
cmp
pop
cmp
das
je
push
es
sbb
fcoms
test
pop
mov
add
xchg
cmp
int
or
mov
inc
mov
jg
push
fsubl
repnz
test
in
cli
mov
fcoms
xor
in
and
xchg
and
sub
jno
inc
addr16
or
clc
inc
mov
jbe
mov
push
repnz
mov
jmp
fisubrl
xor
cs
mov
out
dec
mov
dec
and
push
sarl
push
daa
add
imul
cmp
dec
adc
cmpsl
push
js
mov
sub
or
fsts
sbb
das
int3
push
loope
cmp
fdivs
scas
and
in
ret
jae
lock
out
jl
cli
inc
xor
jle
ret
movsb
fwait
jmp
jmp
fs
add
js
leave
jmp
movsb
aaa
mov
inc
outsb
lock
cmc
xor
push
sub
mov
js
mov
sbb
push
xchg
out
into
or
cwtl
cmpl
mov
into
clc
rclb
or
mov
push
pop
mov
insb
xchg
loope
inc
cmp
int3
imul
mov
xor
movsb
sub
popf
bswap
call
mov
andb
shll
pop
mov
mov
or
cltd
loop
push
pop
or
push
movsb
jne
loopne
pop
or
pop
cmp
jne
insl
jg
mov
out
jo
lret
adc
cld
repz
out
mov
add
mov
shlb
in
scas
sbb
dec
addl
fstpt
push
xor
icebp
mov
loope
and
test
out
das
jae
jmp
clc
lds
mov
inc
pop
sub
ljmp
mov
jmp
daa
pop
loopne
outsb
int
inc
xchg
sub
icebp
lret
mov
shl
aad
adc
sbb
lods
adc
insb
dec
cmp
rcl
mov
add
jp
cmc
fcmovu
mov
bound
mov
ret
adc
xchg
dec
enter
mov
xor
xor
movsl
stos
sahf
lret
add
aam
fisubrs
inc
data16
call
add
mov
cli
cld
inc
or
dec
fadd
and
cmpsl
inc
inc
lock
into
je,pt
jbe
in
adc
aad
and
shl
outsb
add
adc
out
inc
fstps
mov
mov
adc
or
fidivrl
sbb
imul
lret
pushf
out
pop
sub
or
jno
andb
or
je
and
jl
mov
jno
inc
or
addb
ljmp
mov
rcll
mov
mov
cmp
mov
cmp
call
cs
mov
es
add
jg
sbb
xchg
fwait
adc
popa
sbb
imul
dec
sbb
aam
lods
fisubrl
outsb
int
mov
lds
mov
inc
sub
xor
sbb
in
mov
and
push
jo
fwait
test
stc
mov
inc
inc
mov
sub
push
inc
xor
les
xchg
lahf
xchg
lea
cmp
pushf
int
ret
push
sbb
jae
sub
mov
in
test
xor
inc
mov
push
or
gs
inc
aas
lcall
in
ljmp
inc
sub
fs
shll
fimuls
pop
sub
out
addr16
mov
test
mov
jns
push
sub
ss
insl
outsl
imul
icebp
mov
lods
ja
loop
sbbl
addr16
and
subl
in
inc
adc
jno
xchg
pop
dec
aaa
dec
push
iret
out
push
loope
fdivrs
push
cmp
out
or
pusha
iret
inc
loope
sub
fsubp
loope
pop
iret
fdivrs
cmpsb
in
rcl
push
jno
jb
aaa
les
xor
icebp
inc
inc
orl
push
add
adc
into
insb
imul
into
btr
jne
sbb
sbb
inc
hlt
xchg
xchg
dec
pop
xchg
in
xor
and
push
lcall
into
cmp
arpl
jecxz
sbb
popa
popw
rorl
call
dec
xchg
bound
in
mov
mov
stos
imul
rcll
sub
sub
push
clc
xor
add
clc
mov
jg
mov
adc
cmp
cmp
xchg
xchg
hlt
pushf
cmp
push
clc
xchg
cs
push
mov
and
push
sub
add
les
xchg
push
push
lea
cmpsb
call
daa
mov
enter
sbb
pop
push
sarb
mull
mov
jno
jp
icebp
xor
test
ljmp
ret
lds
push
xchg
flds
sub
xor
das
and
and
addr16
xor
int
gs
sub
mov
pop
fistps
adc
js
xchg
push
dec
mov
mov
push
mov
or
mov
nop
les
push
repnz
imul
aad
int
outsb
push
in
or
xchg
pop
add
js
mov
xlat
pop
sbb
pop
sbb
ret
outsb
popf
push
or
mull
xchg
jg
mov
out
cmp
and
cld
clc
out
push
sub
mov
out
pop
add
mov
xor
cmp
xchg
mov
loopne
cmp
in
adc
jnp
mov
popa
cltd
mov
popa
inc
loope
out
sub
jmp
xor
and
cmp
das
andb
ds
aam
mov
inc
adc
movsl
or
mov
scas
pop
test
jmp
sub
inc
and
dec
pop
clc
sbb
hlt
movsb
inc
sbb
mov
movsl
mov
insl
test
adc
inc
push
jb
stos
movsl
jbe
jmp
call
push
cmp
insl
fwait
idivb
pop
push
xchg
xor
push
iret
jnp
movsb
pop
mov
stos
movsb
out
addb
loope
sub
jnp
arpl
lret
xor
call
jmp
outsb
daa
and
xchg
dec
icebp
add
ss
sub
insl
stos
sub
nop
dec
int3
jae
sbb
mov
cwtl
cmp
int
pop
ror
orb
sbb
sub
push
push
jae
cmpsl
inc
js
mov
in
add
mov
lock
lods
gs
into
push
mov
push
repz
fisubrs
mov
filds
pusha
pop
pop
repnz
or
sti
sub
push
xchg
popa
mov
pop
mov
cmp
ds
xchg
mov
aas
cmp
pop
je
jno
aam
notl
push
and
out
outsb
pop
scas
std
inc
xchg
mov
je
test
xor
and
jge
pop
sbb
mov
add
loopne
xchg
outsb
loopne
movsl
xor
cs
cmp
adcl
mov
cmp
faddl
cmp
mov
cli
sub
mov
sub
push
test
add
jb
hlt
das
sbb
jmp
mov
sub
icebp
jno
lret
icebp
push
push
sub
add
les
or
pop
push
xor
or
mov
xor
cltd
sbb
sub
add
sahf
mov
jnp
sbbl
mov
in
dec
fwait
ljmp
pop
xor
mov
test
jne,pt
sub
cmp
and
sbb
sahf
sarl
shr
pop
cmpl
mov
or
mov
daa
push
scas
inc
jo
cmp
pop
insb
sbb
test
imul
push
das
pop
dec
jle
inc
pop
fnsave
jns
lea
mov
cmp
mov
sar
mov
dec
inc
sub
in
pop
mov
xchg
pop
adc
dec
mov
adc
lret
or
jmp
ret
sti
mov
pop
cmpsb
lret
pop
xor
mov
ljmp
push
xchg
add
pushf
cltd
scas
notl
and
mov
scas
push
sbb
xchg
pushf
aad
popa
mov
xor
dec
scas
pop
in
icebp
and
jmp
mov
jp
add
adc
aaa
jne
mov
dec
gs
and
adc
mov
popa
outsl
fadd
es
pop
stc
fidivrs
inc
movsb
mov
inc
jp
or
push
xlat
movsl
repnz
mov
negl
sahf
adc
mov
push
fistpl
fwait
ret
xchg
xor
pop
sub
mov
mov
mov
pop
mov
push
lds
or
mov
pop
int3
mov
or
cmpsb
xchg
mov
and
jle
test
out
mov
inc
rcr
lret
add
les
push
dec
mov
orb
das
pop
dec
pop
or
daa
xchg
jle
inc
push
rorb
inc
dec
das
test
ret
cmp
mov
xchg
fwait
cmp
cmp
rcll
clc
in
adcb
int3
insl
fldt
shl
add
or
push
sbb
or
inc
in
and
clc
testb
in
clc
sub
sub
cld
sbb
test
ficoms
sbb
or
sub
jae
pop
in
ja
psubw
cs
pop
ds
xor
lds
into
lock
mov
enter
pop
cmp
ds
leave
mov
add
jo
xchg
jmp
popf
jl
shrl
imul
push
in
add
lahf
push
mov
fnstsw
ja
add
adc
imul
add
and
cmc
out
sarb
xchg
adc
xor
add
add
xor
inc
mov
push
int3
add
mov
das
hlt
out
ds
dec
and
stos
shlb
lret
inc
jge
pusha
adc
lret
adc
imul
aaa
mov
testl
arpl
shr
enter
nop
xchg
sbb
push
leave
lds
sbb
arpl
inc
lods
jl
sbb
and
fldenv
daa
clc
in
mov
inc
cli
cli
enter
xor
mov
dec
mov
fwait
jecxz
fnstenv
fisubrl
lds
pop
xchg
fcomps
and
sbb
jecxz
movsl
arpl
xchg
sbb
xchg
scas
push
movsl
out
mov
pop
pop
jb
jp
adc
push
dec
adc
fwait
mov
or
pop
jo
push
inc
jb
aad
xor
mov
pop
lahf
ds
sub
cmp
sub
andl
insl
test
clc
add
xor
jmp
iret
inc
mov
test
leave
iret
cld
jno
cmpsb
jo
pushf
out
pop
movsl
jp
sbb
iret
fldcw
jecxz
insl
aam
int
cmpsb
xchg
mov
es
lea
insb
pop
pop
mov
stos
ret
dec
jne
es
mov
adc
push
cli
lret
mov
scas
in
jecxz
scas
jecxz
movaps
das
jle
mov
popf
mov
xlat
and
sbb
dec
dec
mulb
adc
mov
jb
push
jae
xchg
jge
adc
pop
dec
jp
mov
mov
stc
add
cmp
imul
dec
in
mov
pop
arpl
sbb
shl
fstl
jo
mov
xchg
cwtl
or
in
lea
mov
adc
testl
adc
add
adc
xlat
jmp
call
inc
popa
mov
mov
scas
pushf
xlat
dec
lods
and
loop
popf
clc
pop
sahf
aaa
pop
lahf
leave
jle
jl
push
and
mov
repz
push
sbb
mov
xchg
xor
mov
sub
push
mov
in
cld
push
push
lods
lods
loop
cmpsb
push
dec
lea
push
adc
jb
xchg
in
shlb
enter
jl
call
add
cmpsb
xchg
popa
jae
or
xlat
pop
dec
pop
mov
xor
outsb
pop
sub
rorb
aad
in
jg
mov
cmp
and
sti
mov
mov
insb
sub
xor
push
icebp
cmp
mov
mov
xchg
sbb
mov
rorb
mov
push
daa
or
icebp
in
jne
pop
lret
sarb
add
les
sub
mov
std
xor
call
adc
xor
jmp
popa
fimull
scas
mov
add
cmc
sahf
pop
xlat
imul
lahf
inc
sub
mov
mov
add
lcall
pop
insb
push
mov
fs
cld
scas
push
mov
sbb
mov
or
repz
and
and
enter
imul
jp
sub
and
imul
add
inc
cmpsl
popa
into
fsubl
jecxz
sbb
xor
andl
adc
sub
adc
fcomps
je
scas
sbb
sar
mov
aam
lock
xor
jle
cmc
pusha
mov
xor
dec
push
adc
sub
call
or
imul
xor
cmpsl
cmp
mov
pusha
and
dec
in
xchg
fldt
pop
dec
dec
bound
and
ljmp
xchg
subb
enter
ljmp
cld
xor
test
cwtl
out
push
mov
mov
inc
fcompl
push
jae
dec
lods
test
fnstsw
aas
jns
fmuls
je
test
daa
enter
movsb
xor
push
out
rcrb
pop
xchg
std
add
xchg
dec
jp
fstps
outsb
adc
inc
sbb
xchg
xor
lods
movsl
or
pop
mov
jns
cmp
adc
outsb
jge
divb
jp
lods
sub
push
cmove
int
fnsave
dec
mov
std
cmpb
sbb
push
leave
clc
les
popf
les
into
out
outsb
sub
pushf
mov
lret
in
mov
xchg
cmp
movsb
clc
push
imul
mov
or
pop
inc
pop
clc
and
mov
add
jne
mov
call
popf
push
int3
mov
movl
outsb
lods
xchg
bsf
cli
jmp
or
jbe
and
sbb
xor
push
jg
je
lds
pop
mov
aas
out
sbb
fucomp
in
leave
pop
jo
cs
ret
add
dec
mov
cltd
or
ss
push
dec
xorl
inc
ds
adc
pop
mov
lods
in
out
stos
cmpb
imul
sbb
dec
loope
in
rclb
cli
pop
insl
pop
sbb
out
arpl
jne
sbb
pop
scas
push
imul
dec
out
ss
out
sbb
scas
push
pop
shrb
icebp
and
lods
add
xchg
lods
lock
ljmp
mov
jae
push
out
in
test
insl
scas
ret
lods
add
and
call
push
sub
inc
mov
addr16
hlt
aam
roll
mov
inc
and
les
pop
sub
lret
fbld
shrb
inc
aam
sub
pop
and
gs
leave
lret
xor
and
add
mov
add
popa
pushf
xchg
dec
pop
sub
dec
out
add
ss
mov
sbb
loope
mov
pop
and
shrl
mov
cwtl
sbb
mov
pop
popf
cld
mov
pop
pop
gs
clc
aaa
sarl
imul
mov
xchg
and
sarb
lret
jae
stos
popa
out
popa
mov
shrb
inc
mov
rorl
sub
and
add
shlb
sti
adc
shrb
sub
sub
fwait
mov
push
mov
push
pop
loope
mov
loop
jle
popf
inc
push
push
pop
sti
cmpsl
orl
and
or
movsb
add
lea
push
fisubrl
cmpsl
cmpsl
mov
inc
add
inc
les
mov
or
je
push
mov
in
pop
dec
imull
mov
push
mov
push
das
sti
mov
arpl
mov
mov
xor
inc
rorb
cmp
fwait
xor
cmp
and
xor
cmp
pop
dec
int
sbb
or
mov
push
in
nop
shl
cmp
xlat
loope
adc
mov
js
lock
mov
aas
cltd
adc
cmp
aas
jb
imul
aad
loop
and
add
push
push
sahf
incl
cmp
or
mov
xor
cs
insb
xor
sbb
xchg
shll
ljmp
adc
sahf
xchg
jecxz
shll
loopne
decb
mov
adc
dec
orl
dec
push
mov
mov
enter
stos
test
aaa
aas
xor
lock
int3
mov
cmpsl
xor
mov
fildll
lcall
xchg
jp
in
cmp
icebp
pusha
cmp
daa
ljmp
cmc
xchg
xchg
mov
int
fmuls
jns
pop
pop
rorb
mov
fcoml
cmpsl
out
or
jns
imul
lahf
mov
pop
cwtl
adc
mov
mov
imul
or
add
sub
adc
lcall
and
lret
popf
inc
jbe
lods
rcrb
pop
push
out
ficomps
sub
popa
mov
push
test
repz
add
dec
pop
xor
ss
andb
pop
es
into
lahf
fimuls
aaa
testb
or
mov
dec
jne
dec
pop
and
xor
lods
inc
bound
add
mov
xchg
fistps
int
stos
leave
and
jmp
pop
mov
cmp
xor
xchg
lret
fimull
test
add
jecxz
push
mov
stos
or
movsb
mov
and
loope
mov
movb
stos
nop
out
xchg
dec
pop
std
mov
or
std
pop
jg
jae
and
push
aaa
fisttps
mov
ja
orl
jecxz
xchg
in
inc
adc
mov
cmp
insl
or
mov
mull
push
xor
push
movsl
lcall
addr16
int3
mov
mov
cmp
dec
jne
pop
ds
ret
call
cmpsb
popa
pop
mov
push
push
lock
jbe
cli
push
icebp
jnp
rcll
fisttpl
sahf
movsl
jle
sub
fstpt
shlb
gs
fisttpll
cmpl
adc
incb
push
mov
lds
cmpl
imul
sub
stos
out
add
or
and
push
jo
sbb
push
mov
pop
cli
loope
jnp
rcrb
loope
mov
xchg
inc
mov
xchg
pop
mov
or
or
inc
cmp
jp
sbb
fucomi
mov
fildll
sbb
inc
and
stos
xchg
je
push
enter
pusha
aaa
xchg
push
push
cmp
int3
xchg
push
repnz
nop
push
inc
push
cs
hlt
or
loop
adc
repnz
mov
xor
pusha
jge
push
cmp
nop
jge
adc
out
gs
mov
inc
inc
jnp
sarb
adc
stc
imul
pusha
xorb
push
into
pop
je
mov
imul
mov
loop
lock
in
mov
pop
push
jo
mov
dec
add
mov
xchg
leave
and
jle
in
test
aaa
cmp
lahf
add
jl
ficoms
in
jmp
and
add
aaa
fcmovnb
jecxz
test
push
push
hlt
or
icebp
xchg
push
loopne
cwtl
pop
sarl
cmp
xchg
mov
cmp
pop
inc
pop
xor
fiaddl
dec
dec
cmpsb
push
mov
xor
mov
outsb
pop
daa
mov
jle
mov
test
iret
sahf
je
fidivrs
cmc
mov
dec
mov
jge
adc
xchg
lahf
leave
stos
cmp
int3
scas
insb
mov
fimuls
inc
sbb
jmp
rorl
dec
ret
fistpl
or
ret
insb
aam
adc
and
inc
fidivrs
sahf
scas
mov
pop
and
ss
xor
data16
imul
jne
adc
repnz
andl
lcall
and
pop
add
les
adc
jno
cli
sub
repnz
push
jne
inc
movsl
cmp
xchg
or
enter
inc
mov
pop
push
int
lock
cli
pushf
addr16
mov
mov
cwtl
out
xchg
pop
cmc
pop
data16
sahf
adc
sbb
fdiv
stos
into
jg
sub
jb
call
xor
mov
push
pop
test
inc
int
scas
aam
cwtl
dec
sub
jmp
mov
or
outsl
mov
or
inc
mov
sbb
shrb
mov
sarb
pop
jno
popf
popa
in
and
mov
xchg
sbb
lret
mov
pop
les
sbb
test
out
add
sub
inc
cmpsl
roll
push
pop
out
out
cmpsb
fwait
add
dec
mov
sbb
shll
xchg
imul
sub
or
cmp
sbbb
lds
add
xchg
xor
inc
sub
mov
aad
fmuls
out
push
pusha
movsb
cld
pop
mov
or
xchg
imul
add
movsb
jge
popa
lcall
cmp
jg
lret
pop
mov
adc
jle
jp
fcmove
jmp
mov
test
fstp
ret
cmp
enter
out
adc
sbb
push
ror
cmp
or
iret
testb
and
inc
popf
pop
gs
push
loope
inc
mov
add
mov
adc
scas
stc
sbb
enter
insb
xchg
and
fstpl
repnz
movsl
dec
mov
push
add
fxch
add
xchg
mov
pop
mov
lods
jbe
jmp
hlt
ss
xchg
ljmp
xchg
lock
cmp
push
gs
dec
lock
js
lds
rol
add
lock
and
add
mov
push
mov
mov
sbb
pusha
jecxz
shlb
cmp
rcl
pop
mov
je
shl
sahf
and
mov
add
std
fsub
int
cmpsb
pop
gs
clc
adc
dec
adc
stc
xor
and
add
outsl
inc
jmp
xchg
notb
dec
rorb
aad
and
rclb
push
push
mov
sub
sbb
or
pop
iret
ret
mov
mov
mov
xchg
adc
sub
adc
iret
sbb
lods
fldcw
movsl
test
movsb
pushl
sbb
cli
xchg
inc
shl
js
xor
fadds
jbe
jmp
mov
ljmp
jnp
jle
cld
sub
vpackssdw
rol
inc
pop
sub
pusha
iret
rcll
and
and
cs
xchg
hlt
aam
jp
in
sub
out
mov
cmc
lods
mov
sarl
dec
outsl
cmpl
xchg
inc
push
inc
test
jge
push
xchg
xchg
adc
pop
sahf
fisubl
push
cwtl
jb
fwait
int
insl
xchg
push
cli
mov
and
or
and
sub
loop
loope
rcrl
test
fwait
cmpsb
rorb
out
addr16
inc
add
aad
mov
nop
cmpsl
lock
push
mov
cs
sbb
aas
push
jl
add
jge
jmp
adc
jns
sbb
mov
icebp
jge
xor
push
sub
shl
sarl
loop
sbb
ds
aaa
andl
movsl
jp
lret
nop
insl
pop
dec
cmp
adcl
push
pop
mov
sub
xchg
push
daa
pusha
mov
dec
pop
test
cmpsb
jo
je
hlt
in
dec
mov
call
mov
sub
icebp
fnstsw
testl
mov
fisttps
lahf
jae
xor
shl
or
mov
and
lret
mov
pop
push
mov
jle
in
and
icebp
pop
aaa
or
pop
cwtl
or
fsts
ficompl
out
adc
inc
mov
lods
js
lds
ds
sahf
int3
mov
repz
xchg
xor
jae
lods
add
outsb
aaa
pop
dec
insl
xor
je
in
lret
test
pop
test
add
mov
call
sbb
xchg
mov
cmp
fdivrl
hlt
push
in
imul
push
or
stc
lcall
add
aam
push
and
dec
jmp
xchg
dec
push
lods
push
mov
mov
ret
cmp
icebp
jb
out
or
xor
xor
imul
inc
add
dec
inc
lods
std
or
jbe
dec
aas
inc
lock
daa
je
jg
or
push
into
jae
popa
inc
imulb
cltd
sti
test
mov
xchg
inc
cmp
mov
getsec
cmp
jno
repnz
cli
imul
rcrb
adc
lret
push
nop
jle
filds
daa
test
mov
mov
push
stos
bnd
sub
add
scas
leave
mov
mov
xchg
xor
aad
leave
and
jae
ret
jb
movsl
popa
in
jg
xchg
mov
sahf
mov
add
ret
mov
dec
fsub
adc
lcall
cmp
in
mov
push
cwtl
jge
sbb
push
outsb
movsb
inc
enter
lcall
stos
xor
mov
stos
xchg
scas
inc
cmp
sub
push
jo
or
loope
and
imul
push
jle
fdivrl
outsl
mov
rorl
mov
add
call
jge
mov
movsl
xchg
mov
mov
ffreep
pushf
pop
pushl
add
into
pop
mov
jns
fidivrl
dec
int
in
scas
out
push
imul
add
cs
pop
fildl
movsb
mov
sbb
sub
negl
pop
dec
jecxz
cmc
imul
and
push
je
movsb
add
push
xchg
mov
xor
lret
fbld
out
mov
aam
sarl
cmp
mov
adc
mov
xchg
cmp
adc
inc
push
xchg
daa
sub
in
or
fsubs
ja
jp
jg
shlb
adc
popa
daa
cmpsl
sbb
mov
sub
sub
dec
cmc
push
xchg
mov
xor
out
mov
jle
jle
push
iret
arpl
shrb
xor
xor
jl
insl
stos
rorl
mov
jmp
dec
push
mov
sbb
lods
mov
inc
mov
pusha
fisttps
sub
pop
xor
dec
inc
js
mov
sub
jl
scas
adc
inc
dec
jnp
daa
sub
xor
int3
mov
dec
popf
mov
fistpl
jp
gs
sub
arpl
jmp
repnz
lods
mov
inc
shlb
idivl
out
int3
dec
add
pop
insb
jecxz
mov
pushf
out
pop
into
jno
movsl
xchg
icebp
push
fcomip
push
adc
inc
sbb
hlt
mov
popf
pop
test
cmp
pop
shlb
testl
mov
jecxz
mov
push
scas
xor
add
nop
loop
stos
ret
in
imulb
mov
out
push
stc
mov
loopne
scas
pushf
icebp
pushf
inc
cs
lds
nop
lock
mov
lcall
sbb
dec
mov
lods
pop
aaa
loope
xchg
movsb
jnp
in
sbb
dec
jo
cwtl
xor
lds
lds
enter
add
shll
xor
sbb
cs
add
inc
mov
imul
inc
nop
jecxz
mov
rcr
adc
sahf
dec
ljmp
push
cmp
fistps
push
cmpsl
push
sub
add
adc
mov
and
push
dec
loope
cmp
xor
std
jl
int
inc
pop
cltd
sub
test
fstpl
shll
lcall
and
lds
ret
clc
mov
or
inc
inc
outsl
shl
jns
test
mov
ficoms
lret
mov
inc
cmpsl
mov
jb
push
dec
dec
jmp
testl
push
scas
mov
ret
les
push
jne
sub
test
test
ret
fs
je
shll
mov
sub
test
test
mov
je
repz
push
rolb
jge
lcall
arpl
mov
je
add
outsb
pop
jl
add
int3
stos
xchg
rolb
jmp
mov
lahf
rorb
mov
dec
jle
mov
gs
leave
and
jmp
js
fidivrl
xchg
fwait
and
lods
ljmp
mov
in
ljmp
cltd
sbb
jno
pop
sarb
push
mov
das
or
sbb
mov
rorl
sbb
aad
aaa
cmpsl
and
hlt
inc
mov
aad
jecxz
xor
addr16
pushf
jmp
xor
cmp
xchg
leave
pop
mov
scas
mov
lea
pop
mov
lods
setno
xor
inc
xchg
addr16
inc
xlat
aad
mov
push
dec
cli
jo
subb
andl
lahf
cmp
add
lcall
jmp
cmp
shr
jns
inc
lds
ds
jmp
arpl
pop
pop
adc
push
xor
insl
ret
int
add
in
jno
ret
sti
aaa
jp
lret
xor
lret
fwait
ds
xchg
push
in
mov
aaa
cli
mov
std
sbb
sti
inc
in
lods
test
add
mov
mov
sti
mov
sbb
icebp
lds
loope
repz
xor
push
repnz
and
in
push
dec
cmpsb
jno
call
sbb
in
adc
iret
stos
loope
flds
outsl
in
cwtl
lret
dec
fbstp
lcall
imul
xchg
xchg
iret
inc
jl
fmuls
sub
push
ret
mov
imul
and
add
cmpsb
cmc
add
gs
mov
push
jb
js
inc
mov
sub
push
xchg
mov
ss
bound
fwait
mov
push
add
shll
mov
call
xchg
mov
push
imull
mov
jno
push
in
push
dec
out
mov
xchg
stos
fldt
mov
xchg
inc
mov
xor
movsb
push
xchg
sub
lods
cmp
sbb
or
pop
insb
adc
sbb
xlat
fcmovnbe
dec
out
cmp
jo
outsb
xor
outsb
mov
push
into
cmp
sbb
out
int
in
pop
pop
sub
outsb
xchg
pop
xchg
popa
and
xor
jecxz
aam
jmp
sbb
cli
jbe
das
gs
and
fwait
and
stos
andb
aam
insl
push
jg
lds
mov
rcll
lock
cmp
int3
dec
xlat
shl
xlat
inc
fimuls
ret
adc
loop
popf
mov
mov
and
stos
push
push
aam
xlat
push
xor
add
jp
cwtl
jns
jae
jb
into
ffree
push
scas
sbb
push
add
fbld
mov
pop
lret
cmp
cwtl
cwtl
mov
pop
cmc
lahf
mov
lds
sbb
mov
bound
push
mov
ffree
or
lcall
xchg
xlat
xchg
fdiv
addr16
outsl
fs
cvtps2pi
sahf
mov
fidivrl
sarb
push
adc
pop
jmp
lods
xchg
aam
dec
sbbl
inc
into
or
inc
int3
mov
or
xchg
call
imul
or
push
and
inc
sub
push
cmc
jmp
push
xor
adc
sub
cmp
and
jno
or
popf
and
cmp
jge
popa
addr16
cmp
in
and
ds
sbb
jnp
test
scas
cmp
mov
and
add
cmc
add
pop
and
stos
repz
push
out
push
inc
fwait
in
into
xchg
data16
in
or
cmp
fsubl
int
hlt
mov
ljmp
cld
jle
jmp
test
jecxz
push
cmp
add
daa
jb
and
add
push
mov
push
aam
inc
ficomps
stc
adc
cld
movsb
xor
mov
insl
sbb
pusha
fistl
dec
or
pop
jp
jmp
pop
and
pop
mov
add
and
inc
fcmovbe
push
imul
test
dec
cli
and
lock
jge
outsb
jge
mov
or
imul
push
xchg
push
hlt
loope
movsl
scas
movsb
push
and
mov
push
je
lret
insl
mov
push
mov
xchg
in
mov
sub
mov
inc
xorl
dec
in
cmp
sbb
je
sbb
mov
add
adcb
fwait
or
jl
pop
push
cmp
inc
data16
jns
mov
test
int3
test
push
stc
fstpl
cltd
adcl
inc
sub
jp
xor
loopne
xor
dec
xchg
sti
lock
mov
xchg
int3
mov
loope
imul
push
and
mov
sahf
icebp
mov
dec
pusha
idivb
inc
sub
je
jne
mov
cmc
stc
jmp
fidivs
in
mov
les
int
or
cwtl
push
andb
sahf
cmc
jg
push
push
pop
popf
push
shrl
lods
pushf
lods
fidivrs
cmp
mov
fbld
mov
mov
mov
or
or
jle
ret
xor
sub
sbb
popfw
jbe
outsl
adc
loop
cmp
cltd
jb
scas
je
adc
and
popf
xchg
inc
jle
mov
cli
shrb
or
mov
or
xchg
add
adc
popa
loop
jns
sti
pop
stos
push
mov
test
push
icebp
inc
dec
es
or
push
pop
hlt
in
mov
push
push
jle
repnz
xchg
and
or
adc
mov
sub
cmp
pusha
cmp
adc
es
add
sbb
push
insb
sub
mov
add
in
cmpl
jg
xchg
jbe
imul
shr
rcrb
lcall
cmp
mov
adc
std
lods
je
jge
jl
adc
vpunpcklbw
lret
mov
push
leave
iret
add
orb
pop
insl
dec
out
and
rclb
mov
mov
push
icebp
push
cwtl
xor
and
xor
and
lea
jne
test
add
lock
pop
mov
xchg
js
xchg
aam
xor
mov
pushf
out
fmull
or
mov
push
lock
adc
ret
pop
cmp
jl
imul
clc
movsl
add
aaa
xor
adc
cltd
mov
movsl
hlt
imul
ss
cs
stos
inc
lods
xor
mov
and
inc
jmp
or
test
or
lahf
or
test
jg
dec
jle
pop
add
sub
ljmp
cli
xor
jae
shlb
adc
jecxz
lods
mov
ret
movb
xchg
sbb
dec
inc
cmp
inc
and
shlb
loopne
and
lcall
and
and
gs
sahf
sarb
arpl
push
xchg
scas
jno
adc
xchg
mull
in
and
mov
fmulp
out
cmc
dec
pop
stc
mov
cmp
rorl
dec
cmpsl
or
lock
push
dec
incb
inc
movsl
int3
stos
test
push
sub
pop
sub
cld
add
imul
movsb
test
popf
or
mov
jl
push
mov
pop
push
enter
loope
sbb
ss
xor
sub
or
pusha
pop
mull
dec
loope
and
sbb
cmp
push
or
xchg
lret
sub
mov
mov
mov
aaa
mov
ljmp
push
mov
dec
sti
daa
lcall
inc
mov
outsb
shrb
pop
aaa
insb
cmp
jo
or
aaa
dec
adc
lds
pop
call
popa
sbb
jmp
sbb
sbb
pop
loop
dec
inc
leave
add
mov
aaa
pushf
push
add
test
jg
roll
push
mov
sbb
mov
adc
cs
pop
ret
fcoms
shlw
movb
aam
out
dec
mov
scas
pushw
fimull
gs
push
mov
into
xor
inc
fadds
aas
cmp
xchg
and
ficompl
arpl
aam
js
dec
test
int
movl
hlt
jns
jae
jnp
scas
sbb
adc
rcll
sbb
dec
jecxz
ss
mov
mov
daa
ret
push
lret
dec
sbb
call
xchg
jl
inc
enter
aad
test
fucomp
cmp
imul
jl
jo
sbb
loope
loop
jae
inc
cmp
mov
aam
loopne
decl
cli
cwtl
es
cmpsl
xchg
mov
jns
cmpsl
xor
jmp
shrb
sub
and
jo
cld
shll
daa
outsl
pusha
fnsave
dec
dec
ror
jne
xor
iret
xor
out
arpl
imul
or
cmp
inc
sbb
jl
pop
jmp
xchg
test
leave
in
or
and
int3
and
fnsave
jecxz
or
mov
push
popa
jmp
lahf
sub
ret
addl
lods
dec
decl
push
rcr
roll
dec
inc
scas
mov
mov
xor
ljmp
cmp
loope
fidivrl
push
mov
inc
or
jns
cs
stos
repnz
push
out
mov
sahf
xchg
imul
std
sbb
outsb
cmp
pop
add
cs
push
in
fadds
cli
popa
jne
cmp
cltd
lret
sub
lock
xor
loopne
inc
inc
mov
inc
in
pop
fcmovbe
jmp
iret
int3
out
push
call
xor
pushf
in
ja
addr16
push
lahf
inc
jge
imull
jae
lret
xchg
aaa
cmp
push
sti
pop
add
ret
gs
test
or
lcall
out
out
jmp
adc
imul
ss
push
aam
insb
push
sbb
arpl
or
pop
push
scas
sti
sbb
gs
pop
outsl
sbb
out
and
mov
movl
aad
lds
imul
lret
movsl
ret
and
loopne
add
sbb
negb
leave
pop
mov
ficoms
and
pop
adc
cld
cmp
aas
add
icebp
in
mov
sub
addr16
or
jb
insb
xchg
lahf
cwtl
fildl
mov
sbb
pop
test
popf
add
pop
stos
jmp
xchg
sub
adc
cmc
shll
int3
adc
pop
leave
or
sti
jb
or
lock
test
mov
dec
out
in
scas
cli
xchg
test
into
pop
and
repnz
aas
xchg
mov
movsb
pop
pop
das
test
jl
aad
ljmp
mov
and
cld
inc
inc
fists
pop
adc
shll
std
lods
dec
sbb
push
push
mov
out
mov
push
stos
pushf
jns
mov
scas
mov
data16
stos
adcl
pop
adc
jge
fcomps
iret
dec
rcrl
popf
xchg
into
loope
outsb
dec
xchg
negl
jge
insl
cmp
jnp
dec
sbbl
fiadds
xchg
in
pop
dec
icebp
mov
in
cli
cmpsl
jae
dec
aad
js
int
pop
out
jbe
jg
xor
push
cli
sbb
jns
pop
cmp
mov
fs
fidivrs
mov
and
ret
jne
pusha
mov
jp
mov
pushf
push
int
stc
loope
pop
outsl
jb
outsb
sbb
pop
push
pop
mov
pop
sub
mov
lds
shll
xchg
push
mov
mov
leave
in
sbb
or
xchg
arpl
lahf
repnz
movsb
lahf
jno
ja
loop
or
int
xor
sahf
outsl
je
cmp
adc
or
jle
aam
aaa
fildll
pop
and
mov
push
mov
push
sbbb
call
inc
xchg
shll
ret
and
cmpsl
mov
mov
mov
popl
push
scas
cmp
adc
or
andb
xchg
outsb
shlb
pop
lock
sbb
popa
sar
shll
mov
fcompl
daa
popa
xor
sbb
test
jp
push
mov
imul
mov
pop
and
push
cmp
xor
lods
es
lret
pop
mov
push
je
mov
cmpsb
jnp
lahf
sub
movsl
in
lcall
test
ss
arpl
xchg
and
cmp
mov
push
es
addr16
sbbl
mov
pop
call
xlat
lods
mov
inc
fsubrl
lahf
adc
jnp
fld
and
dec
and
xor
cs
dec
cs
scas
push
add
sbb
fcomps
lds
int3
mov
inc
adc
inc
int
jae
int3
pop
add
es
pop
xor
and
fdivr
fsubr
nop
pop
push
lea
push
inc
mov
imul
and
xchg
in
mov
cmp
nop
sub
mov
xchg
mov
aad
imul
pop
in
cmc
jp
adc
mov
dec
mov
xchg
mov
imul
pop
pushf
pop
mov
insl
shl
test
sub
mov
das
test
pop
mov
out
sub
cltd
aam
fs
dec
gs
ret
mov
cmp
mov
mull
fcoms
into
sbb
cmp
std
outsb
outsb
into
adc
outsb
out
xor
jmp
rcll
scas
mov
data16
pop
fists
sub
pushf
dec
aas
loope
mov
sbb
sub
lods
mov
or
adc
enter
xchg
mov
xchg
dec
test
cld
sub
mov
push
iret
push
outsl
mov
stc
nop
cmp
bound
fstps
push
mov
add
fnstcw
xchg
aad
add
lret
xchg
sub
jo
loopne
sbb
xor
fadds
negl
lret
and
arpl
scas
add
xor
push
jo
dec
pop
pop
xchg
jg
pop
ja
push
cmpsl
into
sahf
hlt
scas
std
and
sarb
cmp
lods
jo
das
xchg
and
dec
ja
and
ret
cwtl
testl
xor
jbe
dec
xchg
cmp
rcl
push
mov
mov
in
cwtl
xor
add
mov
push
arpl
add
sub
shll
or
sub
inc
adc
fcompl
adc
fsubrs
lcall
insb
aas
inc
addl
cmp
loop
mov
test
cli
xor
cmp
xchg
jecxz
scas
xchg
in
xchg
inc
adc
inc
and
rcll
fistps
adc
dec
xor
test
jae
nop
pop
fldl
dec
ss
fbld
ss
or
rorl
push
in
inc
and
sub
hlt
or
shlb
add
xchg
pop
adc
push
xor
adc
test
dec
xor
push
ret
lea
mov
and
sti
xchg
das
lods
xorps
js
subb
test
aas
outsl
stos
mov
stc
pop
sbb
aam
pushf
pop
loope,pn
mov
aas
mov
int
cld
enter
repz
mov
sbbb
xchg
adc
mov
xchg
and
ds
mulb
int3
imul
sub
and
inc
mov
inc
jmp
and
lcall
xorb
cmp
movsl
into
mov
inc
repz
xor
test
lods
test
pushf
push
inc
sbb
lods
jae
clc
mov
or
inc
in
and
mov
scas
ret
pop
in
sbb
jl
or
add
sti
lret
and
mov
imul
pop
sub
xor
mov
dec
xchg
push
mov
mov
pop
pop
jle
mov
add
xchg
jle
jbe
or
in
mov
gs
dec
push
scas
add
fildl
cwtl
int
or
popf
xor
mov
xchg
and
cmp
xlat
dec
popf
pop
mov
jl
cmp
mov
sub
mov
clc
jl
icebp
push
outsb
xchg
sbb
mov
popa
outsl
int3
leave
pop
xchg
in
cwtl
ret
mov
in
in
mov
add
fisttpl
cmp
push
mov
gs
ret
and
mov
lret
jno
push
fstpt
test
rcr
jo
add
shr
repnz
pop
jle
push
sarl
add
aam
leave
xchg
fidivrl
data16
repnz
nop
jne
pop
jg
mov
sbb
push
int3
mov
test
sbbb
add
sub
stos
mov
aad
xchg
inc
jbe
adc
pushf
or
pusha
xor
je
adc
jbe
inc
dec
pop
sarl
pop
adc
jmp
inc
mov
pop
or
mov
movsb
repz
inc
mov
aam
ds
push
mov
inc
mov
and
xor
test
sub
jbe
sub
lahf
cmp
mov
std
ror
inc
add
std
test
stos
iret
cmp
mov
gs
cmp
fistl
xor
test
mov
test
cli
in
xor
inc
jg,pt
sub
das
inc
and
stos
jno
in
xor
imul
inc
jl
mov
push
jmp
ret
xchg
mov
dec
lret
push
adc
pop
jmp
cmp
xchg
fisubrs
dec
adcb
je
mov
sbbl
leave
xchg
pop
movsl
cmpsb
into
lea
push
in
or
inc
jb
and
mov
mov
mov
cmp
mov
mov
in
inc
mov
icebp
arpl
xor
mov
sub
out
mov
scas
push
imul
iret
std
imul
pop
fmull
in
es
sub
lea
push
jmp
out
out
push
data16
push
jp
outsb
and
scas
lret
or
adc
sar
pop
and
leave
rolb
cmp
jl
pop
jge
stos
push
mov
repnz
out
test
cs
or
xor
popf
jle
dec
cmc
sub
inc
sbb
cmp
cs
cmp
pand
sub
loope
push
nop
cli
push
push
hlt
fsubrl
idivl
jge
js
imul
hlt
adc
imul
push
cmpsl
stos
and
clc
ss
adc
or
int
and
pop
arpl
ds
mov
mov
adc
jg
mov
fwait
lock
call
push
imul
dec
sub
fs
sub
mov
dec
xor
mov
test
stos
icebp
cmp
mov
inc
mov
cld
aaa
xor
int
insl
mov
into
inc
xchg
aas
aaa
inc
sti
jbe
testb
adc
sti
mov
push
bound
test
dec
jo
pop
clc
imul
inc
enter
jp
roll
dec
pop
into
into
fildl
rcrl
clc
cld
leave
gs
push
fsubrl
scas
inc
mov
jecxz
jg
jo
mov
push
stos
jmp
push
mov
andb
mov
inc
add
add
pop
aam
nop
adc
dec
lret
inc
shrb
jno
jbe
push
mov
imul
cltd
dec
push
fsubrs
or
inc
dec
rclb
push
ds
pushf
jo
or
sbb
pushf
mov
pop
fcomps
loope
sub
mov
or
inc
test
in
mov
xor
pop
jp
mov
inc
xchg
cmp
rol
int
shlb
cs
mov
mov
and
lods
add
ret
sahf
jl
mov
jo
gs
mov
cwtl
xchg
push
xor
jmp
xchg
jno
mov
int3
into
cmpb
pushf
pop
out
xchg
jo
xchg
adc
mov
lret
mov
int
jb
pushf
xchg
push
enter
mov
mov
es
and
inc
push
loop
cltd
mov
xor
push
int3
bnd
mov
push
loope
push
inc
pop
cmp
loope
pop
into
cmp
jecxz
cmp
imulb
xchg
sbb
lea
add
dec
xchg
test
icebp
popa
nop
dec
fdivr
or
shrb
mov
xor
in
inc
cltd
pop
jle
in
mov
enter
cmp
adcb
fwait
fs
inc
add
cs
cld
in
lret
dec
cmp
subl
fs
leave
test
das
mov
or
shl
fcomi
xchg
or
repnz
mov
mov
mov
push
or
cmc
jae
adc
xchg
movsl
pop
mov
into
add
inc
inc
push
call
cmp
jp
lods
adc
fidivl
cmp
lret
jae
stos
or
inc
or
push
mov
imul
push
out
nop
popa
insb
shll
jp
les
es
mov
decb
cmp
dec
cmp
rol
dec
stos
jecxz
insl
nop
sub
xor
mov
dec
jecxz
dec
outsl
mov
scas
ljmp
xchg
and
jb
call
pop
lret
inc
aas
cli
cltd
fs
ja
xchg
jmp
sbbb
push
add
xor
in
and
stos
jbe
das
cs
pushf
mov
mov
fwait
or
xchg
or
xor
ja
xchg
xchg
add
pop
mov
icebp
ret
pop
in
lret
add
clc
cltd
adc
ret
xchg
dec
mov
push
cmp
test
hlt
sbb
in
mov
cltd
out
dec
pushf
stos
adc
pop
outsb
jbe
jmp
ret
xlat
int3
push
pop
xchg
lds
test
or
dec
jbe
rclb
cmp
cli
fadds
mov
or
rcl
loope
or
add
negb
xor
arpl
divb
sbb
xchg
push
mov
rclb
cs
inc
fsubl
push
int3
ficoml
pop
xchg
not
mov
or
cmp
fdivl
das
push
or
in
out
mov
xchg
push
push
jge
add
enter
sub
cmc
jne
test
jbe
mov
out
cli
ljmp
lcall
jnp
inc
xor
push
sbb
jp
lods
mov
xchg
outsb
test
fcomps
inc
mov
adc
cwtl
mov
clc
int3
dec
aad
popa
mov
cli
rolb
movsl
int3
inc
hlt
ja
rcrb
cli
test
fs
fildl
and
inc
js
dec
jmp
mov
test
adc
mov
out
stc
sub
xchg
sbb
and
xchg
bound
int
push
inc
inc
clc
push
sbb
mov
out
pusha
pop
ss
inc
imul
in
sbb
dec
lahf
pop
xchg
cmp
mov
mov
mov
jnp
pop
push
mov
adc
cmpsl
ret
sti
push
lock
rcrl
fdivl
test
jg
pushf
rcrb
sti
fs
int3
dec
or
fs
or
add
loope
aaa
int3
mov
add
fsubr
aaa
rcrb
mov
repz
jns
push
push
int3
push
gs
leave
xor
cs
into
dec
in
adc
cmp
mov
or
nop
jecxz
pop
fdivrs
jns
mov
jmp
dec
adc
pop
inc
sub
xor
xor
jmp
pushf
cmp
mov
jns
push
dec
add
mov
and
dec
push
push
out
inc
aaa
or
dec
inc
push
mov
std
mov
cmp
add
xchg
ljmp
roll
mov
aad
lcall
stc
dec
xchg
sub
arpl
dec
xor
rcl
js
pop
mov
pusha
das
sbbb
push
mov
cltd
icebp
pop
enter
pusha
addr16
pop
adc
pop
mov
es
and
xor
mov
popf
push
push
mov
mov
sahf
in
cmp
cmp
dec
xor
lock
xor
loop
jbe
push
and
push
mov
cwtl
loope
xor
int3
ret
xorl
inc
mov
mov
mov
and
loopne
mov
xor
dec
int3
sarl
xlat
pop
dec
mov
mov
shlb
jnp
jp
cltd
jle
cmc
adc
in
or
repz
pusha
jb
jmp
aad
push
add
scas
mov
inc
lcall
lds
mov
test
out
xchg
mov
ret
leave
push
nop
push
addr16
nop
add
sbbl
lret
out
push
add
dec
rorl
pusha
arpl
jge
lods
inc
stos
adc
sub
sahf
xlat
adc
jns
das
dec
lret
pop
jae
mov
dec
repnz
imul
test
cmpsb
mov
xchg
out
add
push
inc
push
scas
pushf
inc
inc
fstpl
enter
adc
loope
sub
dec
push
addr16
mov
mov
out
inc
out
xor
test
test
bound
cli
inc
test
std
aad
xchg
jo
pop
pop
cmc
push
cmp
aam
pop
xchg
mov
test
pop
hlt
push
fwait
test
das
mov
stos
dec
xlat
int3
xchg
aam
insb
in
gs
add
loop
add
push
mov
icebp
jo
mov
adc
shlb
das
mov
or
push
mov
incl
lea
jmp
dec
fs
xchg
mov
pop
fildll
clc
mov
les
popl
js
add
add
cli
nop
xor
in
xor
jnp
inc
lret
scas
lcall
xchg
xchg
sbb
fildl
push
or
pop
sub
int3
add
leave
int
lret
addl
mov
push
test
sub
cmpsb
insb
rcrb
adc
jbe
in
pop
xchg
fidivrs
js
imul
jmp
js
mov
sub
mov
mov
in
xchg
call
scas
shl
cmpsl
aas
popa
mov
sbb
aaa
inc
dec
movsb
adc
cmp
mov
adc
lock
mov
insb
push
push
sub
movsl
call
flds
repz
inc
hlt
adc
mov
inc
cmp
dec
das
cmp
popf
jb
dec
popf
dec
inc
ret
repz
dec
cmovae
mov
adc
out
fistpl
mov
repz
loope
or
jbe
leave
add
test
sbb
and
sbb
inc
push
std
xor
mov
testb
scas
imul
dec
mov
push
int3
scas
sub
pop
mov
push
push
es
stos
fldenv
rclb
ja
xor
push
mov
leave
movsl
dec
push
mov
inc
js
shl
mov
pusha
sbb
sub
in
mov
mov
cmp
jns
mov
lahf
mov
pop
shrb
jl
pop
daa
rorb
xabort
sub
sbb
sub
pop
jo
pop
add
mov
xchg
out
in
in
icebp
lods
sub
ffreep
fistpll
dec
das
mov
jmp
insl
dec
leave
cs
inc
pop
or
fwait
push
xchg
cmpb
pusha
lds
sbb
cli
out
rcll
outsb
and
jbe
test
jae
lea
mov
test
pop
xchg
push
inc
fcoml
sub
adc
out
jo
xchg
movsb
rcrl
push
aaa
add
rclb
push
stos
mov
xor
and
pop
stc
sbb
repnz
into
ror
popl
push
or
scas
adc
mov
in
in
pop
outsb
add
adc
push
mov
movsl
dec
jl
fcmovne
or
js
aad
xchg
sub
push
bound
mov
fisttpl
xor
sub
cmp
xor
lds
push
mov
xchg
arpl
stos
pop
cwtl
xchg
sbb
adc
inc
ja
sbb
sub
ljmp
dec
lea
push
lahf
je
xchg
gs
out
popa
test
and
loop
and
push
std
xchg
mov
cmc
xor
fstpl
adc
fsubrp
negl
lock
xchg
cmp
ret
ss
mov
popa
inc
out
js
int3
out
or
xor
dec
inc
bound
cltd
push
fistl
aam
mov
imul
jae
ret
jmp
jae
push
cmp
stc
and
lea
push
pop
sbb
dec
and
mov
test
in
add
popf
cli
lcall
push
lret
sahf
int
pop
jno
rcrl
aam
sbb
leave
loop
icebp
mov
xchg
mov
std
add
scas
xlat
cmp
push
xlat
mov
ret
adc
mov
int3
clc
lcall
pop
movb
mov
pop
mov
lret
mov
mov
inc
jmp
jne
xor
jl
jae
repz
sahf
cs
xchg
push
addl
ljmp
in
loopne
ljmp
jg
out
lea
mov
inc
cmp
call
test
fdivp
jg
fstp
xchg
and
scas
add
sbb
sahf
dec
test
xor
mov
cld
out
lcall
dec
imul
and
cmpsl
int3
popa
je
dec
adc
insl
jb
and
mov
pushf
fadds
mov
mov
inc
inc
and
jne
add
pop
imul
out
jo
mov
inc
sbb
leave
outsb
xchg
mov
dec
xchg
pusha
in
ljmp
add
jns
scas
add
stos
add
adc
push
pop
sbb
xchg
lret
dec
or
outsb
ret
xor
bound
ljmp
jge
sbb
sub
in
int3
mov
icebp
stos
repnz
or
mov
icebp
and
popa
xchg
lods
jb
rorl
int3
mov
mov
adc
and
cli
scas
push
stos
pop
ret
scas
xor
nop
push
clc
daa
in
xor
cmpsb
cwtl
adc
lahf
aad
push
icebp
fistps
jo
push
or
xchg
sub
mov
mov
pop
cmp
or
outsb
or
movsl
pop
repnz
mov
lock
lret
les
and
push
lret
or
in
into
xor
int
imul
or
add
ljmp
mov
jmp
pop
stc
xor
push
xchg
mov
mov
inc
mov
jno
std
jg
clc
pop
je
mov
mov
repz
test
and
popa
enter
sbbl
mov
add
mov
test
sbb
dec
inc
adc
add
call
jmp
bnd
dec
ret
mov
loopne
out
mov
js
xlat
imul
jnp
add
xchg
cmp
push
pop
lret
jns
jmp
mov
jns
mov
divb
repz
ror
mov
js
imul
icebp
xchg
cmp
sbb
dec
test
outsb
fstl
cwtl
or
add
sub
iret
adc
fcom
add
dec
pop
jae
icebp
daa
test
add
mov
and
and
lods
add
flds
and
ss
dec
jle
pop
push
add
and
subl
pop
insb
and
dec
add
sbb
subb
js
pop
jge
in
sbbb
mov
add
iret
repnz
dec
leave
cmp
test
inc
inc
movsl
dec
inc
orl
xor
mov
dec
and
adc
add
test
aad
cmpsb
arpl
pop
lds
cmp
cld
sbbl
mov
jns
sbb
fldl
sub
addr16
jb
jne
pop
jb
jp
add
mov
in
cs
jmp
pop
insb
sbb
addb
or
mov
xor
sahf
ljmp
movsb
andb
shlb
mov
cmpsb
dec
ja
movsb
addr16
addr16
lret
test
sbb
pop
jmp
sahf
pop
sahf
mov
into
cmpb
iret
xor
pushf
push
enter
pushw
nop
repz
imulb
inc
loopne
sub
inc
bound
popa
inc
mov
dec
jno
fstps
fldcw
and
dec
push
mov
sub
in
mov
icebp
or
pop
movsl
jo
cmpsb
add
sub
sbb
pop
mov
andb
mov
add
push
ja
mov
mov
cmpb
pop
nop
xchg
sub
mov
pop
test
pop
xchg
ret
xchg
lahf
repnz
jns
xchg
mov
pop
test
imul
mov
popa
inc
and
dec
mov
sbb
ds
flds
in
notl
and
xor
in
cs
je
push
ja
xchg
adc
push
jmp
aam
dec
ljmp
xchg
bnd
les
xchg
cltd
jbe
inc
mov
lret
arpl
inc
mov
pop
je
sub
jmp
pop
dec
dec
cmp
pop
shlb
xchg
sbb
mov
inc
pop
jecxz
xchg
jge
pop
hlt
cmpsb
shll
mov
sbb
repz
outsl
in
pushf
jl
push
lds
mov
lret
aad
mov
scas
repnz
and
pop
lods
fisubs
clc
outsl
push
xor
mov
ficomps
rorl
push
jge
sti
or
arpl
lock
loop
sbb
mov
sbb
mov
and
mov
aas
or
add
lahf
in
adc
xchg
mov
popa
add
roll
mov
popa
adc
cmp
shlb
and
or
mov
push
xor
sbb
mov
cmp
add
lahf
repz
sub
mov
je
cmp
cmpsb
mov
test
jp
pop
mov
and
push
inc
and
cmp
int
in
mov
sbb
int3
clc
lcall
mov
fidivs
stos
fstp
mov
das
nop
scas
lock
jo
push
sub
in
fsubrl
dec
xor
cmp
mov
mov
xchg
inc
or
shll
push
sar
or
mov
or
cmp
sbb
dec
shll
imul
xor
addb
and
les
cltd
push
call
pop
push
sub
add
and
xlat
test
int3
xchg
xor
jg
pop
mov
in
inc
daa
xchg
xchg
inc
mov
jns
push
mov
jl
mull
popa
xor
int3
ss
lahf
mov
icebp
movsl
mov
dec
mov
pop
push
xchg
cli
int
addr16
or
jae
int
jnp
mov
inc
push
xor
rolb
cmp
pop
sbb
jmp
insb
stos
and
repz
fisttpl
jge
xor
rcr
mov
lahf
mov
push
xlat
je
hlt
dec
mov
push
fdivrp
adc
mov
sbb
ljmp
push
sbbb
dec
xlat
mov
push
push
fs
push
pop
clc
repz
addb
pusha
ret
stc
ret
adc
jns
sti
orl
add
or
and
sbb
sbb
idivb
jbe
dec
fwait
jecxz
pop
inc
mov
test
sbb
pop
mov
test
add
test
sbb
jbe
cmp
bnd
test
nop
add
es
xor
mov
push
fcmovnu
pop
dec
xchg
mov
js
out
pop
add
movsb
out
lds
push
fwait
dec
mov
sbb
xor
out
les
fisttpll
lret
cltd
sbb
rolb
stos
in
in
and
add
add
adc
sub
outsl
fidivrs
leave
push
pop
outsb
lods
rcll
sti
in
xchg
mov
xor
adc
imul
test
test
test
mov
pop
cmp
aad
mov
lcall
mov
shrl
mov
fs
rorl
xchg
inc
loop
add
mov
pushf
dec
xchg
mov
cmp
jmp
scas
mov
xchg
loopne
iret
or
out
frstor
push
in
and
xor
sub
sbb
cltd
lcall
sbb
push
leave
test
imul
iret
xchg
xchg
decl
flds
or
ss
ja
cmp
aaa
dec
sbb
nop
sahf
pop
leave
ret
dec
and
push
xor
bound
inc
mov
dec
pop
xchg
enter
lods
call
cli
lcall
arpl
and
imul
add
adc
ss
mov
jnp
xchg
push
pop
lret
pop
inc
jbe
jg
xlat
stc
xor
jb
mov
fwait
mov
sbb
mov
fdivl
mov
les
mov
xchg
pusha
movsb
mov
mov
in
xchg
fwait
int
test
pusha
ljmp
test
daa
add
jl
in
jbe
insl
enter
pop
data16
xchg
jmp
mov
clc
ret
aad
adc
xchg
mov
jle
cmp
in
pop
imul
into
mov
loopne
push
and
data16
jae
and
push
inc
ffree
ss
pusha
aam
push
pop
addb
bound
dec
mov
cs
lea
and
imul
xchg
adc
fldl
or
or
push
leave
stos
jnp
jle
lock
adc
call
xchg
or
jmp
data16
fdivrs
ljmp
mov
mov
imul
ljmp
std
out
push
lahf
bnd
jno
out
add
jo
jle
movsb
lock
cmp
cld
push
cmpsl
int
push
inc
cld
mov
mov
pop
mov
xchg
icebp
sbb
xor
ret
test
sub
sub
push
in
sbb
out
dec
inc
xlat
out
cmp
mov
pop
lcall
scas
cmpsl
mov
and
or
jp
aad
scas
cli
xlat
cmpsl
test
inc
sbb
jecxz
sarl
jg
xor
pop
movsl
lahf
rol
jo
sbb
mov
inc
adc
add
dec
xor
cmc
sbb
dec
xchg
sub
mov
jno
mov
lods
mov
in
adc
fidivs
mov
push
cmp
sbb
cmp
in
filds
out
ss
sbb
jg
xlat
add
cwtl
mov
add
data16
fnstsw
sbb
shl
inc
inc
sub
inc
cmp
je
movb
sub
cld
mov
stc
sub
les
adc
mov
sub
dec
push
int3
or
jmp
iret
js
dec
xor
sbb
mov
xor
sub
push
loopne
mov
aas
push
popa
cwtl
cmpsl
sub
or
fists
add
or
adcl
push
cmpsl
sbb
mov
mov
pop
test
or
or
jbe
push
and
repnz
int
mov
sub
mov
test
popa
and
cmp
test
rclb
in
mov
lahf
imul
pcmpgtd
shll
xor
or
pop
xor
and
out
repz
loopne
xchg
jne
jne
stos
mov
imul
jae
popa
insl
xor
fidivl
lods
rclb
pop
and
nop
mov
mov
aaa
jmp
push
push
xor
fnsave
inc
xchg
in
push
shl
jno
xor
mov
movsb
inc
push
scas
inc
dec
jbe
push
cmpb
das
sbb
pop
ret
in
mov
mov
mov
negl
mov
push
lds
out
mov
out
cmpsb
mov
and
fs
mov
idiv
pop
sbb
mov
mov
hlt
roll
jb
add
out
ja
les
fsubp
orl
pop
pop
cmp
and
inc
jmp
add
test
and
inc
push
hlt
imul
mov
add
dec
stos
sar
mov
rclb
sahf
push
roll
int3
gs
cmpsb
cmp
pop
test
mov
ja
cmp
ficoms
lahf
fiaddl
cli
outsl
aad
xchg
pop
arpl
shlb
dec
les
dec
or
mov
xchg
inc
jbe
push
in
jns
adc
add
or
xlat
scas
xlat
push
lret
cli
push
lea
push
xor
xor
mov
gs
sbb
insl
dec
mov
xchg
addr16
cmpsl
and
dec
or
pop
pop
dec
mov
xchg
mov
sub
scas
mov
sub
lock
orb
pushf
dec
pushl
add
pop
ds
clc
imul
cmp
int
arpl
pop
dec
xchg
rorl
int
cltd
into
pop
rorb
cs
int
xor
cmpb
jmp
aas
push
mov
xchg
pushf
push
pop
and
rorb
ret
pop
push
jp
popf
aas
imul
mov
jne
pop
xor
movsb
pop
jo
imul
repz
xchg
test
xor
or
inc
and
lret
lock
sti
cld
lock
jbe
sub
cld
imul
push
int
push
inc
rorb
xor
push
mov
cs
inc
xor
cli
pop
call
push
cmp
inc
xlat
xchg
or
xor
shrl
dec
subb
adc
addr16
inc
popf
aaa
adc
shll
je
sub
and
frstor
test
fcompl
mov
xor
dec
inc
lods
je
sub
sbb
xor
jmp
shrb
pop
call
out
add
mov
mov
inc
adc
insl
aas
sti
jge
out
arpl
inc
jnp
lods
outsb
daa
repz
jp
xchg
cmp
inc
imulb
insl
subb
in
bswap
repz
mov
mov
mov
xor
cmp
or
mov
aaa
and
icebp
xlat
sub
je
out
xchg
push
leave
mov
jp
xor
adc
ja
sub
lods
sub
and
test
sbb
sahf
ss
pushf
jp
inc
fisubl
das
loope
push
test
inc
addr16
sarl
dec
outsl
dec
insl
dec
daa
mov
cld
ds
out
adc
loope
and
sub
mov
lret
fwait
hlt
std
dec
inc
pop
aaa
popl
test
and
loopne
xlat
adc
or
inc
sbb
and
lock
icebp
jle
push
add
shll
mov
mov
in
imul
or
pop
jecxz
inc
ja
gs
jo
jns
pop
pop
mov
adc
mov
mov
inc
mov
or
scas
mov
cmp
cmp
add
jecxz
mov
xor
lahf
add
jae
js
sub
and
xor
mov
das
dec
mov
fisttpl
bound
ror
or
jg
call
inc
leave
stc
enter
fidivrs
sub
mov
jmp
mov
xchg
xor
jg
sbb
enter
dec
mov
out
mov
scas
inc
sub
mov
setle
bound
xchg
out
push
and
outsb
fcomi
and
jg
push
adc
test
push
bswap
jl
sti
cmp
gs
cs
and
imul
inc
push
push
add
lret
out
das
pop
jecxz
sbb
roll
sub
inc
add
mov
cmp
xchg
pop
neg
and
pusha
pop
dec
dec
into
sahf
pop
sbb
rcrb
lds
stos
jo
outsb
int
add
iret
out
ret
xchg
add
push
cmp
push
roll
mov
pop
sahf
xor
xchg
cli
jmp
lahf
mov
cli
dec
loope
arpl
jecxz
cmc
jge
cmp
es
int
lock
incl
add
lret
pop
or
rorb
fcoms
fildl
jae
daa
add
push
call
xchg
repz
xor
scas
jmp
ja
out
jg
jns
ds
lret
mov
sub
inc
pop
pushf
cmp
lahf
cmp
and
mov
mov
gs
add
ljmp
jg
aaa
jl
add
mov
add
jmp
test
add
mov
and
mov
jge
iret
and
xchg
xlat
xor
movsl
in
cmp
mov
inc
adc
and
insl
nop
jge
mov
push
subl
stos
fincstp
pop
sarl
mov
ret
xlat
or
cmpsb
es
hlt
jle,pn
scas
push
xor
cwtl
pusha
cltd
lret
leave
and
es
sbb
sti
jae
pop
sbb
jbe
ret
arpl
shll
add
dec
mov
mov
int3
add
dec
xchg
pop
or
mov
pusha
and
fwait
out
add
sub
movsb
mov
jns
jge
add
scas
arpl
stos
fcompl
fiaddl
jns
mov
lahf
fidivs
hlt
insl
ret
mov
and
add
inc
jae
cmpsb
lods
cmp
inc
imul
es
in
mov
sbb
adc
xchg
jmp
fdivrp
sar
and
popa
dec
fsubl
in
ljmp
daa
jbe
mov
repz
adc
aaa
or
test
subb
lea
sub
or
jno
test
cli
shrl
test
out
push
xchg
test
les
inc
dec
icebp
into
shrb
adc
mov
inc
adc
and
add
pop
jge
xor
sbb
push
cli
pop
jmp
lret
cmp
and
outsl
test
jnp
mov
inc
fdivrl
pushf
lret
jle
xchg
inc
mov
and
lret
sbb
das
lret
and
aam
add
lret
in
jo
or
push
mov
cli
inc
out
mov
fildll
loope
xchg
es
lods
or
jno
sahf
dec
adc
test
jne
insl
out
jmp
and
xorl
jnp
sub
pop
fnstsw
popa
addl
add
rol
cltd
mov
popf
movsl
push
sub
xchg
xor
cmp
shrd
mov
xor
lret
into
shlb
in
arpl
xchg
adc
mov
rcl
addb
mov
xchg
lret
sub
rorl
in
jg
dec
dec
in
icebp
mov
daa
fmull
int3
or
lods
push
sub
inc
jmp
mov
mov
jae
fmull
leave
stc
sub
jne
xor
inc
xor
adc
mov
jmp
mov
mov
into
stc
es
sar
imul
sbbb
in
mov
sub
push
adc
and
sub
adc
enter
inc
sub
imul
shl
ret
mov
dec
stc
call
aam
daa
cli
inc
loop
jno
das
loop
sahf
sahf
push
xor
imul
dec
push
ja
adc
push
cli
dec
mov
mov
add
movsl
insl
pop
int3
xor
lcall
out
shlb
testb
mov
cwtl
jmp
mov
test
add
cmpsb
ja
mov
and
dec
push
dec
xchg
cwtl
add
push
cmc
dec
in
lahf
fcmovbe
enter
sti
rol
jne
out
jge
jge
and
cld
xchg
dec
sbb
inc
jecxz
shlb
mov
or
pusha
hlt
cmp
insl
test
repnz
cmp
or
les
mov
scas
or
stc
add
sub
outsl
stc
into
testb
cmp
mov
in
adc
fmul
lods
nop
lret
cwtl
fdivl
and
jne
dec
cmp
mov
icebp
mov
daa
xchg
mov
push
xchg
mov
mov
mov
adc
mov
ficomps
scas
push
mov
adc
sbb
outsb
mov
jno
xchg
sub
aam
pop
jnp
mov
or
fidivrs
sahf
xor
shlb
push
inc
movsb
subb
jne
add
aam
sub
stc
adc
xchg
jnp
mov
pop
pop
loope
out
repz
jmp
or
outsl
fmuls
outsb
mov
pop
iret
xor
or
push
sub
cmp
adc
lods
mov
insb
xchg
cmp
mov
xorps
scas
push
inc
cmp
dec
mov
mov
imul
gs
ret
adc
nop/reserved
push
imul
xor
sbb
jmp
pop
movsl
mov
mov
or
cmp
pop
push
xchg
outsl
sbb
xlat
loop
fnstenv
mov
out
sahf
add
push
mov
fs
jns
aaa
pop
pushf
push
movzbl
fs
add
adc
test
push
fs
arpl
xor
repnz
and
inc
scas
into
int3
sbb
xchg
jns
sbb
je
bound
mov
loopne
stc
leave
inc
push
iret
fldcw
enter
ljmp
mov
adc
lods
data16
push
lock
cld
xchg
xor
or
stos
cltd
adc
cmpsb
cwtl
or
sbb
aaa
repz
sbb
jg
and
sub
adc
rol
jmp
out
lock
sarb
lret
cmp
pop
pop
lret
dec
dec
fidivs
jbe
popa
jmp
jecxz
push
mov
pop
cmp
jl
jo
fnstenv
loopne
lcall
inc
jo
lds
add
dec
cmp
divl
mov
xor
mov
sbb
lods
sbbb
xor
repz
bnd
cli
xor
in
sbb
fistl
mov
xchg
js
insb
out
aam
xchg
xor
je
pop
out
push
dec
inc
fdiv
cmpsl
ljmp
icebp
or
push
dec
test
mov
stos
movsb
and
mov
jo
in
and
fstl
ret
loopne
sahf
loop
testl
aad
jae
inc
fisubl
lahf
js
inc
jp
in
xchg
adcl
int3
pop
sub
mov
and
imul
or
lds
loopne
test
inc
xor
dec
repz
mov
push
or
sub
outsb
adc
mov
ret
inc
and
push
enterw
cmc
rcll
mov
rep
imul
mov
dec
adc
cs
pop
and
mov
pop
cmp
test
stc
aaa
sbb
add
adc
ja
movsl
jb
std
mov
xor
push
mov
scas
pushf
test
lahf
xchg
or
push
aaa
pop
sti
shlb
sub
scas
aad
mov
push
aad
or
pushf
out
fldt
push
mov
and
and
in
fsub
pusha
sbb
cmpsl
dec
lds
testl
out
mov
in
push
loopne
inc
xchg
adc
cmpl
enter
insl
cmp
mov
and
pop
mov
pop
scas
lods
cmpb
ficompl
push
fs
dec
lret
in
lods
arpl
fimull
movsl
push
decb
sbb
push
jg
jo
and
addr16
or
jo
sub
sbb
lahf
stos
outsl
ss
sahf
xchg
mov
or
lods
dec
inc
lcall
sbb
cmpsl
push
lods
jae
incb
adc
fcomi
pop
push
pop
inc
out
and
inc
and
push
adc
pusha
in
stc
nop
shlb
mov
sub
and
pop
imul
insb
cltd
mov
scas
mov
lock
jo
dec
clc
aam
mov
mov
adc
out
cmp
mov
cmpl
jne
cmp
lret
popa
mov
dec
shll
push
fmul
push
popa
push
sbbb
mov
lret
movb
lcall
adc
jno
sbb
push
lds
fsubrl
inc
and
fdivl
in
popf
pop
aad
scas
in
fwait
in
fs
in
adc
scas
out
xchg
push
xorl
and
or
push
or
jmp
les
push
dec
sbb
push
push
mov
ret
vpcmpeqb
add
mov
ja
xchg
pusha
in
outsb
mov
es
sbb
mov
inc
leave
sub
scas
adc
mov
pop
push
xor
mov
or
std
out
in
and
rcr
iret
in
out
push
and
pop
add
gs
pop
iret
xchg
or
cli
inc
xchg
mov
nop
mov
inc
fidivl
rcr
lcall
shrb
xchg
ja
test
sti
testb
dec
sub
mov
fs
pop
aaa
cmp
cmc
sub
inc
mov
push
lcall
inc
pop
negb
xchg
enter
fcomi
xor
xor
pop
add
xor
insb
cmp
sbb
imul
or
push
jecxz
mov
jecxz
add
int3
xor
in
mov
das
in
mov
hlt
push
dec
jns
rcl
movsl
test
xchg
cwtl
xor
push
lods
mov
dec
test
xchg
xor
mov
mov
and
jp
jp
xchg
push
ljmp
dec
jl
das
or
add
xor
jne
or
add
ficoms
cmp
mov
sbb
mov
clc
push
aad
cmp
out
xor
mov
push
dec
lret
jle
mov
xchg
aaa
std
jne
sbb
mov
adc
sbb
pop
dec
dec
incl
cmpsb
jbe
pop
xor
outsb
test
out
pop
scas
jae
inc
or
jmp
ljmp
negl
cwtl
mov
dec
addr16
push
pusha
inc
adc
jbe
dec
push
mov
mov
inc
dec
sub
lahf
mov
xorl
int
fcompl
adc
sti
gs
repz
push
aam
xor
cmpsl
lock
shlb
sbb
outsb
mov
inc
push
dec
pop
cmp
lret
call
cmp
jae
leave
xor
pop
cmp
jge
fnsetpm(287
mov
adc
aad
inc
lods
push
inc
fcoml
outsl
push
punpcklbw
xlat
dec
jl
ja
jbe
inc
mov
jmp
test
rcrb
ret
inc
sbb
sub
push
aam
stos
jl
ds
int3
pop
push
aam
jecxz
das
jo
cmp
callw
xor
push
xor
fwait
or
push
mov
je
cmp
mov
out
inc
daa
mov
sub
jae
sub
sub
mov
and
or
popf
cmp
js
js
mov
inc
pop
mov
aad
mov
frstor
nop
int3
mov
jbe
xchg
inc
push
mov
sub
push
sarl
fldenv
loop
clc
aas
fistps
out
movsl
and
scas
test
sub
das
push
sbb
inc
les
and
fsubrl
mov
mov
aam
xchg
es
sub
ss
pop
mov
sbb
mov
fwait
in
sub
cmpsl
shll
pop
sbb
lahf
cmp
mov
push
ss
imul
test
bound
int
mov
insl
test
dec
pop
lret
adc
adc
cli
mov
sahf
adcb
sbb
mov
cmp
sub
loopne
add
es
cmp
popa
cmpl
inc
jecxz
pop
imul
mov
imul
jnp
les
xor
mov
sti
fbld
jge
mov
das
test
push
push
enter
jo
mov
cmc
inc
xchg
push
aaa
mov
inc
mov
sub
movsl
dec
gs
test
loop
ds
dec
mov
std
inc
addl
dec
pop
hlt
add
xor
lock
pop
push
into
jae
jb
ja
in
std
mov
loop
js
sti
jb
dec
pop
movsb
mov
adc
xchg
sarb
mov
lahf
jge
mov
add
add
jl
fwait
add
mov
cmp
paddw
push
xor
xchg
nop
cmpsl
mov
mov
movsl
fs
jp
pop
push
sub
jns
inc
mov
inc
jne
mov
xchg
aaa
out
dec
xchg
xchg
jle
or
fwait
inc
ret
lods
rorl
loopne
push
dec
jo
mov
movsb
sub
inc
dec
mov
jl
push
mov
fidivrs
shrb
rcll
xchg
cli
fadd
out
in
inc
cmp
mov
pop
pushf
cwtl
scas
dec
mov
jo
xchg
mov
notl
or
mov
mov
sub
push
mov
popa
mov
dec
in
mov
mov
test
sub
and
arpl
in
jmp
cmp
adc
aas
out
sub
pop
clc
add
nop
sub
jbe
xor
lods
mov
shl
push
cmc
call
add
out
and
std
arpl
fcomps
add
pop
into
sbb
les
bound
dec
sub
lods
dec
out
popf
xchg
dec
ss
xor
mov
loope
pop
addr16
int3
scas
stos
sti
and
sub
inc
jno
inc
or
decb
xchg
mov
pop
jnp
and
sahf
aam
add
mov
or
adc
or
or
jno
dec
adc
dec
js
popa
pop
xor
loop
sbbb
push
daa
out
dec
xchg
pop
aad
aaa
jmp
cmpsb
jg
sbb
das
popf
and
mov
xchg
cld
lods
aas
jle
pop
xchg
xchg
xchg
xchg
in
roll
mov
adc
jno
push
xlat
push
sarb
insb
mov
dec
notb
pop
mov
pop
inc
pop
es
mov
es
aas
adc
fstps
or
out
xchg
dec
data16
xchg
jnp
mov
loop
inc
or
sub
in
enter
popa
cmp
pushf
out
mov
jbe
iret
fsub
dec
xchg
pop
mov
out
sub
push
cmc
aam
cwtl
das
push
sbbl
das
mov
call
push
xchg
inc
xor
sub
mov
stos
xchg
int3
repz
xchg
adc
repz
mov
nop
xlat
mov
out
jmp
jmp
mov
into
lea
jge
pop
daa
push
sub
push
int3
leave
addr16
jp
pop
cmp
in
sbbl
inc
pop
and
sub
rep
in
jae
push
popf
jno
sarl
inc
les
in
lea
mov
daa
ljmp
sbb
and
inc
sahf
xor
cmp
or
inc
xchg
sub
lahf
pop
adc
mov
in
fistl
dec
mov
sarl
repz
in
rorb
pusha
cmpsl
aam
imul
cmp
xor
inc
cs
sti
jne
fidivs
sub
mov
mov
repnz
movsl
xchg
outsb
lcall
inc
mov
movsb
out
mov
add
jno
in
loop
adc
push
adc
push
std
addr16
outsl
lret
fnsave
icebp
dec
xlat
or
sub
or
call
mov
aam
in
mov
add
xor
je
push
out
outsb
ret
inc
fs
ret
pusha
je
mov
in
jb
lahf
sbbl
jle
popf
sar
mov
data16
loopne
outsl
xchg
mov
xchg
sbb
jb
sub
xchg
xorb
pop
add
faddl
fidivrs
mov
jmp
in
stos
punpckhdq
addl
mov
sarl
sarl
pop
sub
jbe
mov
xchg
adc
frstor
sub
loop
lret
mov
std
pushf
cmpsb
lcall
push
lret
call
out
out
xlat
pop
test
shll
push
mov
iret
mov
xchg
push
cwtl
mov
sti
leave
xor
jbe
adc
movsb
ret
out
mov
push
pop
test
or
hlt
push
mov
mov
pop
test
shl
cs
push
negl
adc
test
sarl
or
pusha
jmp
push
mov
lea
jne
mov
mov
sub
ret
mov
test
out
inc
lods
xchg
cld
dec
in
dec
outsb
push
lods
cs
lcall
jo
xchg
mov
sbb
lock
js
iret
sub
sarb
test
leave
repz
inc
sbb
mov
inc
and
imul
sbb
das
jecxz
fdivrl
fs
cmp
gs
jecxz
and
push
jecxz
stos
dec
int3
js
mov
addr16
inc
and
xchg
js
or
clc
outsb
dec
cmp
cmp
data16
cltd
xchg
lcall
xlat
add
pop
insb
loopne
jle
shrl
mov
xor
test
lret
idivl
and
lea
daa
fstps
dec
lods
call
fwait
in
loop
js
dec
dec
out
jp
daa
cli
mov
push
jne
dec
push
cld
jns
jne
in
mov
scas
data16
fdivrp
out
testl
jle
gs
push
clc
pop
pop
fwait
mov
imul
adc
adc
pop
aas
inc
icebp
ljmp
shlb
sahf
xchg
mov
jno
inc
mov
add
lret
shll
nop
inc
movl
lods
and
outsb
divb
or
mov
mov
dec
iret
adc
pop
call
sub
mov
ret
pop
outsl
mov
push
out
shll
add
les
ret
mov
lods
push
mov
cmp
sub
xchg
testb
enter
sub
shlb
sub
push
cld
cmpsl
stos
shlb
in
pop
push
cli
cs
or
inc
loop
sbb
lret
or
sbb
rcr
or
sahf
movsl
pop
mov
out
pop
or
mov
sub
dec
aaa
dec
or
jl
xor
mov
push
add
popf
test
sbb
xlat
mov
mov
stos
or
jne
mov
mov
loope
jg
fsubs
inc
sub
pop
testb
adc
xchg
adc
icebp
adc
add
cs
mov
push
jo
push
or
lds
lea
xchg
mov
cwtl
adc
leave
sbb
add
out
leave
inc
or
dec
ds
and
xchg
test
push
repnz
jne
add
mov
es
cmpsl
cld
fstl
fs
fcmovnbe
lods
mov
inc
or
call
mov
dec
push
sub
and
mov
push
sbb
mov
xchg
mov
pop
sub
jl
sub
push
pop
mov
insb
and
mov
xchg
jbe
mov
mov
sahf
inc
jp
ds
sub
daa
addl
inc
adc
mov
lods
mov
add
adc
aas
imul
mov
fcompl
loope
imul
sbb
test
fcompl
xor
pop
or
stos
adc
xchg
and
lds
mov
stos
adc
jl
movsb
test
fmuls
dec
jno
adcb
sar
leave
arpl
mov
inc
inc
xor
sbb
das
xor
xorl
lods
sub
insl
jecxz
loop
mov
addr16
sub
in
orb
ja
call
sub
je
fldcw
popf
out
icebp
out
lods
dec
push
sbb
ret
fsubs
jne
rcrb
jno
adc
pop
sub
sahf
mov
pop
pop
push
test
lahf
pop
divl
iret
fmuls
dec
stos
inc
hlt
xchg
lods
shll
test
pop
outsl
pop
push
idivb
mov
sti
aam
inc
inc
xchg
cmp
fiaddl
mov
lods
sub
lds
pop
cmpsl
fsubs
pop
cwtl
xchg
pop
push
loopne
jo
leave
push
in
mov
iret
sub
cli
cwtl
inc
mov
mov
mov
dec
dec
into
pop
pop
dec
mov
or
std
adc
dec
outsl
cld
or
mov
jg
sbb
stos
jbe
push
cmp
arpl
adc
cmp
out
push
mov
mov
lods
mov
pop
push
repnz
xchg
mov
lcall
jae
inc
imul
inc
xchg
add
leave
rcrl
mov
push
popf
negl
sub
int3
mov
cli
cmp
sub
fbld
scas
mov
mov
and
or
fistl
push
in
lret
mov
fimull
add
xchg
ss
out
sub
ja
add
pop
jb
test
adc
or
cmp
push
into
adc
jb
jne
fnstcw
cltd
ds
ss
clc
xchg
pop
por
push
mov
lahf
inc
push
pop
es
xchg
bound
push
std
jl
push
xor
sub
push
fisttpl
and
inc
jno
xor
loope
push
push
inc
jnp
mov
pop
mov
lds
mov
idivb
push
out
cmp
mov
adc
or
adc
jp
js
sarb
inc
aam
xchg
sbb
mov
insb
mov
out
aaa
in
sbb
or
icebp
pop
in
dec
push
inc
mov
je
fsubr
test
mov
mov
rolb
lock
lea
mov
in
hlt
in
push
test
jmp
mov
clc
cmp
add
and
inc
mov
movsb
aam
pop
insb
imul
jo
sub
loope
cmc
jmp
cs
inc
inc
leave
dec
gs
int3
xchg
in
insl
sbb
test
ss
inc
sahf
jmp
dec
xchg
xor
pop
mov
arpl
pop
jl
cld
fyl2xp1
sub
lahf
lods
and
inc
cmc
ja
mov
movsl
flds
mov
jl
scas
ljmp
mov
mov
jnp
les
jle
pop
into
xlat
xchg
or
cs
rolb
cmpsb
out
sahf
push
fdivs
imul
jno
insl
pusha
popa
lods
out
gs
bound
rcrl
or
loopne
sahf
or
sub
fisttpll
mov
iret
adc
sub
xchg
out
fwait
push
ret
xchg
sbb
xor
shr
sub
pusha
and
gs
sub
les
cmp
xchg
cli
or
mov
mov
pop
rcll
sbb
push
fmulp
pop
cmpsl
aam
iret
add
popf
test
movsb
or
outsl
xor
mov
fstpt
cmp
imul
test
adc
pop
imulb
roll
sbb
sbb
push
lea
jno
iret
gs
sub
pop
or
mov
insl
adc
xorl
mov
ret
mov
aam
jg
or
pop
out
mov
enter
push
ljmp
stos
lods
jns
int3
fmuls
push
push
pop
cmpsl
into
cmp
cmc
push
lock
adcb
add
jae
and
jo
je
repz
sarb
insl
mov
test
dec
and
add
mov
ret
add
je
mov
daa
loope
mov
inc
movsl
xor
adc
js
mov
push
mov
repz
adc
shll
idivl
cmp
loop
sahf
outsl
lret
mov
dec
gs
push
daa
imul
xor
adc
inc
icebp
in
push
inc
data16
xchg
fidivrs
xchg
int
jecxz
push
mov
aad
dec
test
or
sub
xor
mov
xlat
pusha
xor
cmc
sbb
ret
test
sbb
mov
cli
cwtl
jo
in
sub
mov
cmp
add
xchg
mov
fwait
cwtl
inc
les
inc
adc
xchg
sub
cmc
jle
movsb
out
push
inc
fld
push
or
sub
in
xorb
repz
and
dec
or
jecxz
in
andl
xchg
pop
mov
fmul
dec
ds
cld
cmc
fs
daa
test
dec
leave
sub
cmp
cmp
cmp
adc
inc
movsb
repnz
or
add
add
lock
int3
loop
pop
mov
ds
test
orl
lcall
fisubrl
ret
push
push
mov
sub
out
jnp
mov
fmull
inc
push
fadd
addb
mov
jne
mov
fwait
pushf
pop
repnz
ret
or
test
shll
pop
xchg
repnz
shrl
mov
sbb
adc
ret
xchg
addr16
push
inc
pop
jecxz
jg
out
or
pop
daa
clc
push
inc
sar
inc
mov
sbb
or
add
dec
sarb
adc
daa
es
ds
insl
and
leave
mov
jge
mov
dec
or
jo
sub
push
bound
dec
lock
push
fs
mov
and
add
mov
popf
int3
popa
aam
pop
andb
mov
mov
hlt
push
sarb
jmp
outsl
arpl
andb
pusha
popf
outsb
fadd
ja
pop
add
aam
jne
outsb
sbb
in
xchg
aas
lds
popa
outsb
xor
sub
xchg
xchg
int
mov
mov
mov
sar
jno
lods
data16
call
xor
pop
out
xchg
add
lods
or
and
jmp
push
pop
outsl
test
movsb
jns
cmpl
lahf
arpl
fnsave
pop
scas
iret
xchg
mov
bound
sbb
jmp
icebp
aas
lret
loopne
add
jbe
xchg
ficoml
movsb
nop
andb
inc
pop
mov
xchg
out
fwait
ss
jne
mov
cltd
pop
repz
hlt
and
xor
sub
pop
lods
aam
call
pop
or
loopne
loopne
inc
mov
pop
jb
inc
sub
xlat
iret
int
push
jl
cmp
push
and
pop
mov
jmp
push
jo
cs
sbb
aam
xlat
lods
pop
lods
or
mov
and
sub
cwtl
icebp
xchg
cld
outsl
xor
pop
xor
lahf
shlb
push
syscall
insb
mov
dec
imul
shll
jp
sbb
hlt
dec
call
inc
nop
mov
jl
xor
sbb
sbb
and
xchg
dec
pop
mov
sbb
mov
sub
dec
inc
mov
cld
nop
mov
sbb
and
cmp
js
gs
pop
mov
insl
mov
nop
xlat
jl
push
mov
mov
arpl
call
scas
add
sbb
in
repnz
pusha
lods
aaa
mov
ret
out
cmp
lock
lea
sarl
test
cltd
es
fisttps
fcom
push
outsl
add
mov
stc
out
sub
push
sbb
stos
pop
push
or
roll
mov
xchg
cltd
sub
sbb
mov
out
enter
and
arpl
mov
sbb
enter
inc
ret
cmc
xor
inc
ds
jmp
cld
xchg
sbb
pusha
mov
cmp
xor
std
xchg
lods
cmpsb
inc
and
int
aad
inc
xchg
fwait
mov
mov
lcall
scas
jmp
fildl
mov
xchg
xor
add
sahf
push
fs
jecxz
leave
lds
iret
dec
fs
scas
inc
lret
mov
incb
in
loop
adc
aad
mov
pop
jmp
cmp
ds
xor
jns
pop
push
clc
call
sbb
xor
push
stos
dec
and
loope
add
test
jnp
or
loop
cs
mov
jg
cwtl
lods
movsl
dec
pop
jmp
aad
mov
loop
jae
aaa
subb
mov
cmp
inc
or
jge
adc
sbb
mov
outsb
cs
mov
sti
jb
push
sbbl
ss
xchg
aas
imul
cmp
pop
pop
or
mov
sub
lock
daa
mov
adc
popf
sub
test
and
cmc
or
xor
cmc
xchg
scas
push
test
mov
mov
push
loopne
leave
pop
jecxz
inc
es
xchg
sarl
push
mov
mov
add
lock
mov
mov
mov
scas
fs
xchg
jno
fbld
aad
fwait
xor
jae
jnp
rcrl
add
dec
sbb
push
sub
mov
sbb
xchg
adc
dec
shr
push
inc
cmpsl
cmp
cmpsb
stos
xchg
mov
es
add
push
jb
xor
push
cwtl
mov
inc
iret
aam
inc
ror
out
jbe
mov
jmp
das
inc
inc
cmp
out
sbb
fisubl
lods
ret
push
stc
or
sbb
addr16
jmp
into
sub
dec
repz
gs
arpl
mov
push
push
fadds
cmpsb
movsb
sbb
add
std
pop
lds
jo
cs
hlt
inc
cmpxchg
push
scas
dec
mov
insb
in
fldcw
lret
dec
cmc
or
in
xor
jle
xchg
sub
mov
xchg
cmp
cwtl
nop
add
loop
in
or
data16
push
pop
das
dec
xchg
cli
adc
push
imul
sarl
jp
out
sbb
insb
dec
mov
sbb
mov
iret
sbb
flds
sbb
dec
push
push
aaa
cmpsb
mov
nop
jl
mull
loop
fcmovb
loopne
add
pop
mov
mov
call
inc
cld
out
and
pop
shrl
aad
xorl
fwait
xor
aas
fstpl
push
adc
push
jecxz
jl
mov
cli
mov
mov
inc
lock
imul
test
pop
and
inc
cmpsb
mov
in
in
mov
cmp
ljmp
lock
sub
jne
mov
xchg
push
outsb
fdivp
ljmp
movsb
or
pop
jl
push
repz
stos
into
jg
and
and
in
xchg
add
clc
jp
scas
pop
stos
pop
lea
lret
rcl
pop
ficompl
inc
lahf
icebp
push
pop
fdivr
cmp
jns
cli
movb
inc
loope
or
popf
outsl
jo
scas
arpl
jnp
jmp
stos
fcoml
lcall
outsb
fsubrl
fwait
test
es
dec
dec
sub
int
mov
pushl
push
adc
pop
jmp
repnz
dec
iret
push
ret
loope
insl
xchg
pop
popl
pop
icebp
iret
xor
mov
and
or
dec
cmp
icebp
xchg
stos
xor
insl
adc
lret
mov
aam
mov
pushf
out
dec
dec
xchg
dec
mov
mov
push
push
lock
aad
mov
subb
daa
sub
sbb
std
fs
in
out
cmp
add
nop
cmp
pminub
mov
rcrb
dec
adcb
notl
out
bound
mov
pushf
push
jns
xor
xchg
nop
cmp
adc
xchg
mov
adc
aaa
add
push
lds
icebp
mov
push
call
loop
pop
arpl
jo
push
mov
imul
in
cmp
filds
mov
add
xchg
pop
test
cmp
ss
xlat
std
jo
cmpsl
cltd
jb
ffree
xchg
add
bswap
jne
fsubrp
sbb
sbb
lea
ja
cmc
xor
sub
ret
lret
dec
cs
outsb
pop
jnp
shrl
xor
aaa
aad
popf
subb
insl
inc
lods
add
add
aas
cmp
aad
je
hlt
mov
jo
mov
push
xchg
dec
cmp
mov
dec
jae
xor
outsl
or
push
dec
xchg
inc
lock
sti
dec
sbb
adc
or
in
sub
or
aaa
jo
and
mov
inc
in
xchg
push
addl
les
jle
jle
xchg
xchg
sti
sbb
cld
fidivrs
mov
and
mov
mov
enter
hlt
adc
push
mov
adc
aam
or
cmpsl
xor
inc
inc
push
push
icebp
jo
mov
ss
je
jo
in
pop
shl
and
xlat
inc
xor
fstpt
das
fs
xor
sub
ds
cmp
inc
popf
mov
fsubrs
add
repnz
mov
dec
push
ljmp
or
inc
mov
shrl
mov
mov
sub
popf
sbb
ja
inc
adc
test
lods
test
or
sahf
cmc
insl
outsb
inc
mov
out
xor
test
shll
lea
nop
jns
cmp
in
xchg
mov
xchg
jo
and
mov
lock
adc
inc
or
add
add
fsubrl
rol
cltd
ret
dec
jle
cltd
dec
into
jmp
sbb
inc
inc
dec
mov
mov
fwait
fs
clc
sub
dec
scas
adc
sahf
xor
push
out
ja
fsubs
dec
sbb
jno
stc
cli
sahf
mov
xlat
idivl
adc
rorl
push
shlb
subl
or
or
adc
mov
aas
lret
cmp
test
stos
mov
jo
cltd
shrl
push
mov
mov
jl
fs
xchg
pop
dec
add
pop
and
faddl
xchg
mov
cmp
enter
or
test
loopne
dec
mov
jl
pop
mov
dec
cmp
pop
add
test
fisubs
mov
outsl
push
jno
mov
cmp
movsb
rclb
push
mov
pop
pop
stos
loope
es
fdivrs
inc
sub
and
insl
jmp
rcrb
sub
sti
mov
enter
mov
aas
jb
mov
cmp
pop
jno
adc
or
pop
enter
sbb
vlddqu
mov
sub
icebp
push
add
pop
push
cld
jl
jb
sub
mov
js
xor
fwait
lods
adc
mov
mov
jl
leave
jo
cltd
sbb
sub
or
or
push
inc
and
add
lods
jg
loope
into
into
subb
pushf
push
push
jo
in
xor
sarb
mov
lret
daa
out
cs
xchg
gs
xor
imul
lock
cmp
lods
xor
jb
in
call
sbb
xchg
loopne
ja
jo
pushf
cmp
or
lret
or
push
inc
add
jge
into
or
gs
call
aam
loope
jns
lret
roll
stos
cmp
loopne
fmul
adc
or
shl
fs
scas
mov
xchg
data16
lods
mov
cmc
icebp
roll
in
test
movsl
xchg
xstore-rng
cmpsl
cmpb
sub
fcomi
cmp
in
or
pop
js
addl
xor
lods
in
nop
arpl
adc
jmp
jl
xchg
pop
add
jbe
add
and
and
adc
fcomp
xlat
lahf
addl
pop
dec
sub
fbld
pop
clc
mov
xchg
dec
jl
popf
xor
in
sti
repnz
add
es
cmp
jge
inc
push
pop
and
mov
leave
xchg
insb
mov
int
push
ds
mov
cld
fcoms
test
cmp
loope
jnp
addb
jmp
out
in
pop
lret
pop
int3
int
fbstp
sub
cli
stos
cmp
in
xchg
test
jb
or
mov
pop
push
sub
xchg
pushl
pop
lock
movsl
xchg
pop
jle
push
xor
adc
mov
out
das
inc
inc
push
movsb
es
popa
pop
mov
loopne
stc
cmc
mov
sbb
sub
data16
lret
int
xchg
add
jns
inc
fbld
push
int3
lsl
int3
mov
mov
imul
iret
adc
push
out
outsb
dec
inc
xor
outsl
clc
out
add
mov
pop
out
pop
xchg
adc
fnstenv
mov
lods
and
lock
mov
add
fmulp
pop
aaa
insb
ja
loopne
xchg
fmuls
xchg
gs
push
inc
jae
mov
jp
test
pop
jp
push
scas
push
inc
pop
fisttps
xor
shlb
pop
lahf
sbb
aas
xchg
xchg
xor
mov
xchg
enter
rolb
sbb
push
in
mov
insl
add
sbb
insl
sub
jp
scas
js
dec
leave
inc
fdivrp
testb
lea
pusha
jge
int3
into
lods
imul
adc
fmul
cmp
fdivrl
mov
dec
mov
mov
cli
ds
divl
and
inc
cld
negl
sti
les
out
mov
push
dec
mov
or
mov
pop
or
icebp
dec
cmp
jle
push
std
push
gs
cmp
mov
nop
mov
ljmp
mulb
enter
clc
stos
xchg
aaa
pushf
pop
sbb
mov
mov
mov
mov
js
iret
jecxz
push
dec
invd
mov
aaa
adc
push
pusha
push
call
add
sbb
cwtl
and
cmp
jbe
or
jmp
sub
cli
andb
leave
in
push
or
or
lods
add
loope
inc
enter
fldcw
xchg
test
ja
loope
lret
push
faddp
outsb
pop
xor
push
dec
nop
jae
nop
add
out
loop
lahf
lods
jg
xor
and
cmpsl
dec
mov
mov
xchg
xchg
les
rcr
adc
outsl
inc
int3
add
subl
cld
aam
out
cmp
out
xchg
loop
lcall
ds
and
fisubs
out
shrb
jle
jbe
fisttpl
push
mov
shrl
inc
cmp
mov
xor
jg
mov
mov
or
cltd
inc
sbb
cmc
outsl
mov
aam
pop
add
mov
dec
rcl
cmp
or
lret
ret
add
cli
xchg
mov
push
and
orb
or
pop
popf
xchg
imul
test
pop
in
adc
addr16
clc
addr16
loop
adc
adc
mov
dec
inc
mov
pop
aaa
pop
rcrl
mov
in
xchg
rolb
cmp
test
inc
dec
pop
sub
iret
inc
scas
add
jnp
movsl
test
test
jle
call
cmc
adc
mov
dec
jmp
das
rolb
lret
ss
sbb
iret
out
mov
int3
push
rcr
ja
call
cmpb
imulb
inc
cltd
mov
lahf
jb
jne
mov
pop
push
cmp
test
cmp
cmp
ret
add
in
cmpsb
dec
cli
mov
outsl
je
push
adc
add
lds
xorb
ret
data16
test
mov
shll
test
daa
das
sbb
sbb
push
jb
cmpsl
push
dec
ret
cs
rorl
lret
jmp
pop
jae
pop
cltd
mov
in
dec
adc
inc
dec
xlat
jl
push
and
sub
dec
je
xor
stos
sub
testb
orl
inc
mov
pop
es
movl
lods
in
mov
cs
cmp
mov
xchg
or
int3
inc
lock
pop
in
push
jecxz
and
dec
pop
pop
shll
shll
push
xchg
bound
adc
adcb
adc
mov
jne
and
adc
or
aaa
idivb
scas
pop
mov
scas
mov
ss
dec
sbb
shr
sub
mov
cmp
bound
push
xchg
nop
int
lock
enter
sti
sub
ss
lods
frstor
enter
inc
imul
sub
sbb
dec
jge
or
in
cmp
out
test
sub
movsl
or
xchg
add
stos
add
or
repz
mov
cmpsl
pop
lret
dec
mov
enter
testb
frstor
jmp
les
mov
sub
das
leave
push
rcrl
cmc
inc
jns
add
add
and
xor
rcrl
call
xchg
lock
mov
lahf
add
push
or
test
add
or
psubd
test
cli
push
xchg
fsubrs
and
loopne
sub
cmp
xchg
dec
pushf
sbb
and
scas
inc
mov
dec
hlt
inc
movsb
add
mov
jle
pop
lea
stc
das
fcomp
leave
cmp
loopne
nop
inc
sub
into
xchg
into
sbb
or
int3
adc
pop
cmp
lock
cmp
ljmp
cmc
lcall
push
cmp
adc
outsb
add
mov
sbb
push
ds
xchg
mov
or
ficomps
shll
xchg
arpl
xor
push
jae
adc
cmpb
test
jecxz
xor
shl
push
xchg
mov
in
lcall
loope
pop
jne
icebp
fwait
stos
mov
cmc
or
loope
cli
jmp
test
setno
lock
lea
incl
call
pop
mov
in
push
dec
mov
and
imul
fcmovbe
lea
cld
lret
mov
and
fidivs
sbbl
push
movsb
mov
jae
ret
sbb
ret
sub
xor
jp
mov
sbbb
ss
movsl
ret
or
inc
sub
fidivrs
dec
push
shlb
mov
xor
jb
sub
mov
lret
jbe
mov
dec
mov
imul
loopne
sar
inc
mov
pop
ret
outsl
xor
mov
sub
pop
and
mov
sbb
fnstenv
cmpsl
sbbl
cmp
jge
cltd
clc
cmp
aad
push
sbb
pop
out
mov
push
xor
ret
xchg
int
push
daa
shll
in
mov
add
loopne
sbb
fs
ds
mov
sub
and
shr
add
or
sbb
fmuls
stos
into
cmp
mov
stos
xorb
xchg
inc
hlt
mov
arpl
pop
fs
fcoms
pop
cmpsl
les
fnsave
cmpsb
roll
jg
mov
sub
icebp
aad
les
mov
mov
cmp
sbb
loopne
push
divl
push
push
cmpsb
xchg
mov
push
mov
xor
sub
outsl
mov
sbb
loopne
stc
push
cmp
lahf
mov
mov
jbe
sbb
sub
jno
add
movsb
pop
icebp
sbb
stos
sbb
insb
push
mov
jecxz
movsl
jmp
xor
popf
into
mov
aaa
fnstcw
sarb
out
stc
or
adc
insl
push
xor
cmp
mov
mov
mull
nop
cmp
fsts
dec
mov
int
popf
test
callw
pop
or
sub
movsb
movsl
sbb
xchg
fs
push
adcl
mov
adc
pop
dec
pop
cmpsb
mov
sbb
jmp
shll
outsb
pop
xorl
mov
pusha
dec
mov
mov
mov
lret
repnz
xor
nop
mov
imul
js
lods
inc
loop
rclb
push
inc
pop
nop
arpl
in
mov
addb
cmp
push
cmp
int3
arpl
test
out
sti
inc
dec
pop
mov
sub
jb
testb
hlt
xor
cltd
xchg
adc
push
addr16
movsb
mov
xchg
sub
ret
les
frstor
xor
xor
adc
sbb
roll
cwtl
jl
jmp
inc
sbb
push
in
mov
dec
fiadds
sub
es
aam
sarb
or
stos
int3
andb
call
insb
lock
add
adc
cmpb
pop
aaa
mov
stos
lods
dec
push
mov
shll
xchg
loopne
vmovdqu
jmp
dec
movsb
les
jle
sbb
pop
iret
jbe
movsb
das
shlb
rsqrtps
xchg
sub
inc
jmp
clc
aas
add
fcomip
sbb
inc
cs
roll
imul
sarb
pushf
ret
push
xchg
pop
lea
int
and
cs
in
sub
jle
arpl
dec
mov
push
and
movsb
fnstsw
es
and
mov
std
sub
or
push
sub
pop
shl
cmp
faddp
leave
fisubs
add
daa
or
xorb
fwait
add
leave
test
push
test
std
adc
aas
adc
scas
mov
ss
lock
aaa
stos
loop
cmp
or
xor
xabort
push
xchg
jl
sbb
inc
cmp
xor
sti
repz
sub
loope
and
dec
cmp
lock
cwtl
pop
nop
mov
testb
iret
test
or
cmpsb
jl
into
mov
lods
xchg
push
inc
ret
pop
lea
shlb
imul
sub
pop
cmpsb
pop
xchg
mov
shll
addr16
das
pop
cltd
dec
jg
imul
icebp
pop
pop
and
lret
xor
jbe
enter
sbb
or
xor
add
push
sbb
push
dec
or
fdivs
jmp
or
call
push
jg
xchg
jo
xchg
js
sub
out
scas
rcrl
hlt
fsubrs
mov
notl
repnz
xchg
iret
jne
in
xchg
lret
loopne
and
xor
mov
insl
push
xor
cmp
mov
inc
xchg
inc
cld
and
sbb
mov
popa
daa
aaa
sub
xor
xor
mov
imul
jecxz
stc
lret
push
paddd
inc
mov
xor
pop
xor
cld
jg
mov
or
adc
cwtl
sbb
and
imul
xlat
mov
movsb
div
insl
test
adc
dec
pop
cmc
inc
inc
ds
scas
rcrb
sahf
sbb
in
push
ficomps
mov
xchg
sbb
add
dec
loop
push
pop
addr16
xor
xor
cmpsl
inc
loope
in
mov
jb
push
fistpl
adc
push
add
push
mov
aam
jbe
popf
adc
cmp
cli
push
xor
mov
mov
cmp
cmp
and
in
sbb
das
lret
cmpb
jge
lret
pop
imul
sub
cmp
mov
fs
out
jmp
push
pop
cmova
cs
lret
scas
stos
mov
mov
push
mov
andl
arpl
scas
pop
ror
dec
dec
and
sub
addr16
test
mov
sbb
jle
mov
mov
mov
inc
lock
in
cmpsl
movsb
ret
dec
pushf
ljmp
and
xor
in
jmp
xchg
imul
push
mov
jmp
rorb
clc
es
mov
outsl
add
or
mov
push
in
cmc
arpl
jne
sub
mov
push
sub
adc
mov
xchg
push
pop
push
push
jno
out
add
inc
fs
add
bound
test
leave
sbb
ret
outsl
pop
out
sbb
lret
out
sahf
sbb
dec
das
or
and
mov
ret
repnz
pop
cld
push
dec
xlat
and
mov
shrl
scas
test
scas
mov
inc
or
push
rorb
xchg
scas
scas
push
push
mov
mov
cmpsl
push
push
xchg
mov
shl
dec
test
xor
mov
movsb
or
jle
nop
jbe
mov
out
es
pop
cmp
repz
pop
mov
dec
mov
shll
outsl
push
mov
cmp
inc
adc
push
cmp
mov
xor
cmpsb
movsl
jno
xor
dec
sub
lret
incl
mov
lods
ret
lret
inc
xor
fsubrl
adc
loope
je
in
test
pop
ret
jmp
into
sub
dec
push
adc
nop
or
xor
sbb
es
add
pusha
xor
repz
test
lahf
push
pushf
mov
out
add
inc
cmpsl
dec
pop
pop
scas
cmp
mov
subl
loop
push
inc
aam
loop
frstor
iret
int3
aad
sbb
lea
insb
incb
lock
xchg
xchg
mov
mov
scas
push
add
or
lcall
test
loopne
pop
out
fistl
add
jb
aam
push
mov
jge
xchg
mov
xchg
ja
mov
add
icebp
imul
ja
frstor
aaa
xchg
dec
fwait
sbb
arpl
pop
cltd
sub
mov
push
add
pop
es
int3
cmpsb
mov
sahf
xor
arpl
push
xor
dec
sub
sub
popf
pushf
js
and
dec
mov
jmp
fistpl
mov
nop
xorb
movsb
ret
push
pop
int
xchg
cmp
xor
movsl
stc
aaa
rcll
pop
xchg
fadds
mov
idivb
and
and
lahf
filds
cmp
fldcw
shll
aad
push
pop
pop
gs
add
adcl
push
adc
test
bound
idivl
pushf
push
pop
loopne
leave
enter
movsl
sarb
cmp
sti
jns
inc
jns
and
push
or
or
imul
push
insb
cs
test
adc
mov
xor
je
xchg
mov
inc
scas
jp
bound
fs
enter
mov
cmp
rclb
in
inc
jmp
push
mov
repnz
data16
push
bound
sti
push
push
movsl
lods
xchg
sub
mov
dec
cmpb
imul
repnz
pop
ret
es
cld
cli
cmp
jne
in
cltd
mov
lahf
add
mov
inc
test
adc
mov
filds
repnz
and
ret
adc
fistps
mov
sub
mov
mov
dec
mov
inc
adc
test
inc
mov
daa
sbb
jg
lret
add
sub
mov
dec
in
mov
aaa
sub
or
push
fidivl
outsl
mov
mov
inc
js
inc
movsl
jo
mov
add
int
popf
stc
ficoml
jg
push
iret
mov
push
sub
jle
mov
xchg
fidivs
scas
in
nop
adc
jg
mov
cmp
out
mov
aad
adc
add
bound
mov
sub
jecxz
jne
push
es
sub
lds
insl
xor
aam
shr
cwtl
ljmp
mov
repnz
pop
mov
pop
xor
dec
daa
addr16
aam
aam
pushf
push
mov
xchg
loope
out
into
testl
sahf
jge
jle
stc
dec
xor
pinsrw
call
data16
loopne
es
test
das
dec
sbb
bound
mov
mov
nop
test
mov
sbb
add
adc
out
push
jno
cs
jg
lcall
cmpsl
lret
mov
push
mov
sub
addr16
out
data16
dec
aad
sub
push
or
adc
enter
jne
ljmp
fists
je
cmp
fwait
adc
in
bound
jecxz
int
mov
out
dec
mov
mov
mov
rorb
adc
sbb
arpl
add
sbb
roll
inc
dec
int3
loop
leave
add
cmp
and
mov
notl
push
add
jl
xor
lods
sub
mov
cmp
enter
gs
les
mov
mov
mov
lds
lds
lock
test
mov
inc
ljmp
pusha
repnz
cmpsb
cmp
lds
int
xchg
jg
or
add
arpl
int3
sbb
mov
xchg
inc
cs
add
cmc
stos
sub
stos
aad
jge
cmp
shr
jecxz
mov
pushf
addr16
mov
subl
cmp
nop
movsb
push
inc
insb
insb
into
shlb
cmp
dec
push
inc
push
mov
aaa
mov
dec
sub
fwait
adc
mov
jb
lret
mov
sbb
shrb
or
mov
jno
filds
xor
arpl
dec
xlat
aaa
lods
inc
fimuls
mov
std
mov
out
imul
xor
inc
test
dec
aad
mov
and
mov
or
dec
mull
ret
or
xlat
mov
shll
rol
cmp
push
idivb
fnstsw
mov
xor
sub
mov
or
xor
mov
in
push
fcmove
mov
out
mov
jge
cmpps
mov
sarl
sbb
inc
jnp
mov
test
or
dec
adc
xchg
incl
fucomi
stc
ja
hlt
jb
sbb
dec
bound
fisttpll
out
add
cwtl
lds
adc
outsb
jp
hlt
loopne
cli
inc
mov
ja
push
pop
adc
add
jl
mov
push
and
mov
push
pop
xchg
sub
pop
jae
ds
mov
pop
adc
inc
mov
jl
nop
shrl
test
ss
popa
inc
mov
daa
push
ja
push
xchg
popf
sti
xchg
outsl
not
mov
dec
cmp
andb
xorb
sub
cmp
xchg
xchg
push
fmul
pop
cmp
adc
aad
lcall
cltd
sbb
cmp
jb
insl
or
push
pop
loopne
mov
mov
rclb
jb
dec
rcll
sub
or
imul
pop
sub
repnz
and
cmpsb
inc
pop
and
inc
xor
loopne
insl
inc
xchg
xor
mov
push
push
call
mov
xor
mov
lods
lods
xlat
jb
cmp
jmp
mov
in
fstpl
dec
shl
mov
sub
mov
cmp
out
negl
jmp
popa
dec
daa
and
mov
insl
xchg
xor
push
cmp
inc
scas
adc
add
push
dec
mov
test
pop
inc
or
jne
dec
xchg
xchg
mov
mov
stos
fidivl
xor
int3
and
xchg
imul
mov
push
mov
sub
popf
cmp
jecxz
sahf
xchg
mov
lock
ficompl
sar
mov
mov
shll
hlt
push
xchg
or
inc
mov
push
sbb
push
lahf
or
jns
dec
mov
ljmp
aas
sub
into
sahf
loope
cmp
test
scas
rcr
xchg
sub
popa
loopne
stc
cmpsl
xchg
arpl
mov
mov
lcall
sub
test
aam
pusha
ja
pop
int
sbb
aam
cmc
das
arpl
xor
bound
jno
fmul
cltd
fdiv
mov
push
push
inc
aam
rorw
rorl
imul
imul
lret
gs
mov
into
scas
mov
in
mov
std
fwait
dec
rorl
cmp
cmpsl
rclb
in
pop
int3
aad
and
insl
dec
mov
mov
in
pushf
adc
arpl
fxch
dec
or
insl
or
loop
loope
cmp
add
sbb
mov
inc
inc
cmp
stos
out
sub
adc
mov
xchg
les
lret
cmpb
inc
sbbb
push
leave
pop
jmp
push
sti
mov
add
xlat
cli
and
inc
sbb
pop
imul
mov
clc
cwtl
test
xor
jge
adcl
loopne
add
push
in
add
xchg
mov
xor
push
mov
scas
add
idivb
push
frstor
cmp
xor
mov
les
aad
xor
out
sbb
out
xchg
mov
jne
adc
inc
les
mov
push
jo
xchg
test
sbb
mov
mov
push
or
or
and
int
nop
jecxz
inc
jle
push
jle
dec
cmp
cmp
inc
fnstsw
xchg
jns
mov
jno
loope
repz
jle
fadds
and
dec
dec
test
push
ja
pop
lcall
jbe
sub
lea
insb
aas
mov
incl
cmc
push
adc
pushf
int3
xchg
add
scas
ja
add
daa
push
cwtl
aaa
xchg
lds
mov
loop
inc
das
loop
fbld
outsl
aam
movsb
fisttps
xor
ret
call
adc
jl
inc
and
mov
inc
and
pop
cmp
cltd
jbe
aas
xchg
leave
dec
or
loop
adc
stc
adc
add
dec
aas
je
rolb
add
or
pop
mov
pusha
sbb
fdivrp
jmp
and
sbb
not
inc
scas
add
xor
lds
int
adc
repnz
xor
cmp
cld
sub
adc
lahf
xchg
jo
insb
sub
dec
imul
cmpsb
pop
mov
shll
jle
pop
mov
xchg
shlb
jns
sbb
inc
adc
xchg
int
lea
int3
jno
inc
shlb
sbb
dec
mov
cld
push
in
pop
fnsave
loopne
insl
dec
adc
sbbl
lods
mov
jecxz
add
push
cmp
xor
int3
and
js
sbbl
adc
adc
pushf
dec
xchg
cld
lods
std
adc
into
mov
fwait
and
sub
mov
shrl
jp
cmp
movsb
fistl
xorl
cmpsb
sbb
loop
pop
mov
xchg
dec
pop
sar
out
movsb
fstl
popa
pop
push
es
dec
or
push
jbe
and
mov
pop
adc
popa
hlt
pop
pop
rol
xor
mov
inc
mov
adc
xor
jo
push
pop
push
sbb
xor
in
push
sub
mov
les
ret
pop
pop
adcb
repnz
add
nop
int3
test
sbb
ds
pop
pop
push
out
add
sub
mov
clc
mov
fnstsw
cmp
sub
jns
adc
dec
cli
mov
inc
setno
fiadds
jne
cwtl
push
movsb
lods
in
pop
mov
cmp
cltd
pop
xor
pop
leave
jbe
addl
mov
popa
push
leave
and
push
cmp
pop
adc
lahf
cwtl
sub
cli
loope
pop
jg
sub
cmp
out
inc
push
sete
smsw
mov
cmpsl
push
lret
rcll
dec
dec
jns
or
xchg
xchg
push
es
loop
sub
mov
data16
or
mov
fcomps
incl
push
adc
jmp
pop
jp
ror
push
push
jae
jecxz
mov
push
nop
or
mov
push
xchg
xor
push
sbb
ret
push
arpl
lods
jl
inc
jp
insl
pop
cltd
shlw
insl
adc
add
dec
repnz
js
addr16
mov
sbb
lret
stos
pop
fwait
lock
rcll
cmp
in
sub
fwait
or
loop
jbe
and
jecxz
lds
into
addr16
mov
enter
add
xor
push
cmpsl
fcomi
in
cld
pop
xchg
or
mov
mov
or
sbb
iret
lret
dec
xchg
xchg
xor
push
or
dec
cmpsl
mov
jne
fnstenv
fstpt
scas
mov
movl
cmp
enter
fidivs
or
xchg
inc
xor
mov
inc
dec
out
stc
fs
sub
addr16
inc
imulb
mov
cwtl
es
and
movsb
call
xchg
das
sbb
jg
test
xchg
sbb
jns
mov
std
sbb
add
mov
stos
and
adc
mov
adc
daa
adc
pop
sti
push
and
push
jo
cmp
cmp
sbb
push
xor
outsl
test
int3
push
jge
sahf
in
cmp
enter
dec
adc
pop
cmp
jge
fistpll
rcll
out
adc
outsl
xchg
js
pop
fiaddl
mov
xor
mov
jae
fnstenvs
mov
in
adc
rcrl
push
pushf
lock
mov
test
std
arpl
sub
jae
push
roll
mov
jbe
mov
ds
movsl
mov
dec
enter
jl
jbe
imul
sub
rclb
les
and
xchg
xchg
mov
shl
cs
xchg
das
lods
mov
mov
pop
cwtl
push
loope
les
pop
push
push
pop
loopne
bound
push
push
xchg
in
pop
je
cltd
inc
jbe
mov
outsl
sahf
icebp
dec
sbb
push
dec
pop
cltd
and
stc
bound
lret
mov
bound
stc
xor
adc
xchg
xor
cmp
jg
sub
xor
dec
jmp
push
fs
add
xchg
out
mov
push
hlt
sub
mov
fsubs
popf
movb
jmp
stos
xchg
aaa
jnp
jecxz
sti
call
sbbb
pop
xchg
jbe
mov
add
sbb
or
ja
sub
push
inc
aad
xchg
nop
add
pop
jbe
ljmp
inc
mov
mov
inc
and
sbb
addl
mov
and
lcall
shll
jecxz
mov
cmp
cwtl
std
xlat
cwtl
das
fistpl
nop
and
icebp
jnp
sbb
sahf
push
popa
ljmp
push
fldln2
xor
mov
pop
and
inc
cmpsb
pop
mov
in
inc
outsl
adc
insb
mov
shrl
sub
push
mov
xchg
stos
leave
cmpsl
mov
repz
lock
popf
mov
lret
mov
jl
mov
pop
inc
out
xor
pop
sbb
push
inc
adc
leave
inc
mov
rcll
adc
pop
jg
scas
xlat
cmc
ficompl
dec
pop
inc
pop
dec
jb
mov
and
xchg
aaa
xor
movb
add
inc
shll
arpl
cmc
pop
mov
push
or
jl
sbb
mov
ljmp
inc
cmpsl
mov
add
jb
inc
sarl
ljmp
xchg
or
adc
or
xor
xchg
jns
push
sti
dec
out
push
test
cmp
inc
stos
and
xor
jno
xor
or
jmp
pop
and
or
outsb
inc
jno
cmp
fsubs
lret
pop
cli
jmp
mov
fisttpll
mov
inc
fwait
sbb
xchg
pop
mov
sti
push
push
cmpsb
out
shrb
push
push
mov
xchg
or
sbb
cmp
xchg
std
and
and
add
xchg
imul
push
xchg
rcll
mov
adc
aas
movsl
push
arpl
stc
mov
xor
pop
cmc
sbb
sahf
jae
jbe
daa
pop
sbb
jge
movsl
mov
xchg
mov
out
mov
loope
xor
jg
data16
pop
test
outsl
inc
ror
clc
sub
jb
call
push
es
stos
imul
addr16
shlb
cmp
xor
cwtl
clc
sbb
sub
xlat
inc
mov
cmp
repnz
xchg
push
and
dec
je
or
mov
mov
inc
xor
mov
mov
andl
adc
push
dec
test
dec
stos
cmc
test
add
clc
pop
ds
dec
pushf
scas
mov
in
iret
je
bound
dec
divl
mov
repnz
xchg
je
or
sub
inc
jecxz
sbb
sub
push
aaa
add
jmp
ror
xchg
push
sbbb
pop
pop
or
inc
and
pop
or
pop
arpl
pop
sahf
push
mov
pushf
adc
sbb
push
or
xor
sbb
dec
mov
push
mov
out
ret
fcompl
dec
cwtl
mov
lret
int
jno
xlat
out
xor
shlb
jmp
ja
scas
xchg
stc
mov
or
jle
repnz
fldenv
int3
jmp
push
nopl
ret
notl
aam
push
jnp
mov
inc
mov
call
adc
jp
in
adc
add
rep
jmp
daa
in
fucomip
pop
add
fsubs
out
push
xchg
adc
lds
pushf
pop
inc
mov
in
cmp
lcall
aaa
cltd
mov
mov
push
test
test
sbb
mov
lret
cwtl
xor
and
scas
stos
lahf
sarb
test
movsb
mov
shlb
test
enter
test
xor
sbb
daa
sahf
shl
lods
in
js
lds
sti
insl
xor
ret
jmp
jmpw
pusha
pop
fs
mov
loop
xchg
pop
aas
nop
mov
fimuls
pop
add
lods
lock
xchg
push
jecxz
push
imul
adc
adc
adc
sbb
dec
push
repnz
loop
punpcklwd
scas
pusha
inc
push
push
mov
out
mov
and
pop
popf
mov
mov
xchg
nop
dec
pop
mov
jns
jmp
pushf
jmp
mov
es
les
imul
outsl
int3
mov
fstps
cmpsl
or
dec
push
mov
mov
mov
lea
fdivr
leave
dec
lahf
out
jo
push
imul
mov
xor
add
and
aad
ret
rcrb
xchg
ret
adc
or
sbb
test
lock
inc
xchg
loop
adcl
push
cmp
adc
push
mov
xchg
adc
in
jae
mov
aaa
pop
cmpsl
push
daa
cli
ss
iret
mov
jae
stos
daa
stos
xor
and
mov
test
sub
les
xor
mov
loopne
int3
les
loopne
lret
loop
repnz
ds
mov
cmpsb
mov
pop
fistps
inc
fucom
pop
test
push
outsl
mov
cmp
pop
js
and
add
hlt
jecxz
pushf
sbb
cmc
loope
lods
mov
insb
jle
or
cmp
outsb
cmp
ds
sbb
call
je
sti
add
push
ret
outsb
shlb
jle
pop
aaa
mov
fnstcw
cwtl
xlat
sbb
in
add
lds
pop
mov
arpl
mov
lods
cmp
sub
std
sub
adc
mov
and
test
push
sbb
mov
mov
jbe
and
xchg
das
jle
mov
xor
lahf
aaa
jecxz
movsb
mov
das
cli
gs
inc
pop
jno
push
inc
movl
imul
imul
cmp
fiaddl
cltd
orb
lods
adcb
call
mov
dec
lds
js
mov
ror
adc
sbb
push
pop
cmp
cmp
cmpsb
adc
add
or
xlat
add
and
or
cmpsb
mov
mov
mov
bound
or
pushf
icebp
fdivl
orl
ret
shl
push
clc
clc
mov
out
xor
mov
mov
jae
std
cmpsl
aas
cmp
mov
inc
ret
mov
push
fs
stos
jg
imul
stos
call
inc
addl
or
stos
lahf
inc
daa
or
dec
inc
pop
popa
mov
adc
test
inc
pop
mov
mov
jae
addb
mov
out
mov
pop
dec
rcr
popf
into
mov
lret
dec
jo
push
ret
dec
jnp
mov
jp
mov
mov
outsl
sbb
or
sahf
adcl
add
in
pop
or
fsubrl
xor
jg
out
mov
push
mov
add
push
shll
dec
xchg
ja
test
pushf
push
dec
sbb
and
cwtl
lret
int
fdivrl
stc
xchg
jp
xor
adc
cli
dec
pop
xchg
movsl
dec
insl
jle
popa
mov
lret
cmp
push
addb
fisttpl
fistps
idivl
pcmpeqd
xchg
lret
and
std
das
insl
cmpl
dec
dec
out
ret
sub
pop
lret
jns
xor
cld
dec
mov
imul
jbe
mov
mov
jmp
inc
and
and
cmp
jl
jne
xor
pop
in
jbe
inc
data16
lret
adc
add
shlb
mov
mov
mov
add
scas
notl
mov
es
mov
jno
std
orb
cmc
dec
insb
cltd
mov
mov
and
sbb
dec
pop
mov
push
loop
dec
decl
in
shrl
pop
pushf
add
popf
pop
nop
imul
stos
xor
and
jg
xor
aam
mov
fdivl
shlb
mov
jmp
xor
mov
movsl
sbb
and
call
ja
lods
push
xchg
push
test
lock
in
mov
xor
jp
pop
cmpsl
and
js
loop
pushf
push
xor
push
ss
or
int3
inc
dec
push
das
in
dec
adc
inc
fdivs
nop
std
mov
test
xor
sbb
and
stos
jecxz
call
inc
push
sub
push
setne
jnp
push
adc
mov
or
add
mov
std
decl
pop
xor
je
adc
sub
inc
cwtl
sti
and
fimull
pusha
fstpl
stc
fwait
outsb
jle
xor
fnsave
outsb
pop
popa
fs
xchg
clc
sbb
daa
popf
mov
push
lods
dec
stc
jl
aaa
jge
adc
and
stos
imul
push
imul
out
out
mov
sub
fcomip
sbb
sub
mov
or
fmuls
out
test
roll
dec
jo
mov
sub
fisubrs
pusha
jo
mov
push
rolb
int3
js
ljmp
int3
in
leave
loop
cmp
loopne
jno
add
or
mov
cwtl
cmpsl
pop
ljmp
jbe
nop
mov
dec
popl
and
push
mov
pop
jne
pushl
in
dec
ret
test
jne
jo
negl
cmp
stos
fcompl
cmp
push
push
js
dec
clc
push
lea
adc
daa
fildl
mov
jbe
int
mov
jecxz
inc
push
in
or
int3
inc
stc
ud1
aad
cmpl
out
add
jae
icebp
insl
or
pusha
shlb
push
loopne
pop
or
jl
mov
pop
enter
iret
sbbb
mov
test
cwtl
xchg
lea
hlt
sbb
cmp
mov
push
cmp
push
jno
dec
xchg
es
cmp
pop
xchg
pusha
dec
mov
xor
mov
outsl
out
cmpl
adc
push
shlb
mov
lcall
xchg
out
fistl
aaa
jb
repz
insb
jmp
mov
jns
and
adc
lods
push
jae
mov
xlat
or
sarb
dec
mov
fidivs
fldt
jge
mov
lds
mov
cmp
mov
js
bnd
int3
fiaddl
ret
sbb
xor
and
sub
push
shrl
dec
insl
mov
subb
fs
es
jns
imul
sub
mov
divl
jb
int3
sbb
xchg
rorb
and
ss
sbb
or
jg
nop
or
das
and
imul
mov
add
cmp
cmp
dec
add
mov
mov
sub
gs
mov
ja
outsb
lret
push
or
cmpsb
movsb
jmp
pop
popf
and
inc
inc
push
xor
mov
adc
xchg
jle
sub
or
ds
mov
inc
movsl
int3
pop
push
dec
roll
sbb
call
inc
sti
pop
xchg
cmpsl
ja
or
scas
mov
sub
inc
loopne
shll
pop
xor
loopne
aaa
outsl
cmc
add
in
jp
cs
test
loopne
movsb
call
aam
sub
and
outsb
sarb
cmpsl
lea
jge
mov
in
daa
sbb
pop
jb
nop
jb
in
mov
das
and
test
dec
into
pop
jg
mov
xchg
jmp
cmp
loopne
add
jmp
out
sbb
pusha
push
pop
or
pop
push
sahf
adcl
shl
sub
xchg
add
stos
pusha
mov
mov
ret
lods
pop
or
mov
inc
ljmp
xor
insb
movsb
mov
addl
jle
dec
pop
or
icebp
rcll
mov
xor
out
fistpll
aas
xor
ljmp
sti
cmp
es
fisubrs
shll
ljmp
sahf
imul
testl
mov
movsb
ja
mov
inc
jge
xor
push
sbb
jmp
mov
mov
ss
dec
mov
sbb
testb
cmp
and
lcall
cli
xor
out
outsl
negb
mov
sti
test
loop
sub
adc
jbe
mov
mov
dec
and
fmuls
sbb
push
mov
jne
aas
sbb
les
sbb
inc
mov
mov
dec
outsl
lods
out
mov
orb
ss
and
sub
loopne
pushf
dec
dec
imul
outsb
adc
xchg
xor
pop
nop
aad
mov
jno
mov
and
je
pop
mull
repnz
out
es
outsl
adc
jno
mov
and
jg
xor
cmp
aad
cmpb
loope
gs
pushl
dec
aam
add
sbb
repz
jmp
lods
pop
and
rclb
aam
push
and
add
fsub
inc
das
cmp
out
in
adc
jo
xchg
pusha
pop
stos
cmpsb
mov
mov
sub
inc
xchg
xorb
imul
sub
mov
or
cmp
push
sbb
or
xor
xchg
xchg
scas
pusha
shlb
add
pop
insl
mov
bnd
fbld
aam
mov
aam
sub
lahf
or
mov
data16
adc
pop
loopne
repz
inc
sub
dec
jg
movsl
inc
mov
and
pop
jno
push
out
sub
mov
push
pop
outsl
shlb
arpl
mov
js
nop
pop
adc
xor
push
mov
std
insl
mov
xchg
dec
push
ss
jmp
dec
dec
and
xchg
aaa
mov
sti
aaa
bound
jp
xchg
pop
fld
lock
xor
mov
cltd
in
fwait
loopne
leave
xchg
subb
hlt
scas
ljmp
adc
mov
jns
mov
insl
sbb
pop
popa
aas
push
push
scas
inc
inc
jmp
sar
jo
mov
addr16
mov
outsb
loope
mov
jmp
jge
out
xlat
inc
inc
pop
ljmp
lcall
into
jmp
adc
sub
pop
and
and
xchg
pop
sub
dec
or
jb
jo
inc
hlt
jne
ret
push
aaa
pushf
clc
adc
sbb
jge
cmp
pop
sahf
stc
enter
in
stos
mov
loop
mov
int3
in
lods
in
adc
inc
test
pop
jbe
cmp
out
data16
and
call
add
xchg
inc
dec
aam
nop
push
jno
cmpsl
daa
pop
loope
cmp
adc
cmp
movsl
lcall
xchg
dec
shl
mov
dec
push
mov
in
lods
dec
paddq
loopne
pop
lcall
popa
fnstcw
nop
and
add
and
icebp
sub
xlat
adc
fmuls
inc
imul
and
pop
and
aas
mov
dec
nop
inc
es
jp
aam
xchg
jnp
movsl
sub
mov
dec
pop
inc
lock
and
dec
rclb
or
or
or
negb
fisubrs
clc
out
ror
pusha
inc
imul
pop
lock
jecxz
inc
lret
add
daa
sub
movsb
pop
jl
andl
gs
cmp
outsl
ja
in
inc
in
testb
std
push
ficoms
xchg
fcomip
mov
popf
pushf
jns
jecxz
int3
jo
jae
and
add
push
aaa
xor
inc
inc
popf
jg
lret
inc
not
popf
aaa
mull
test
mov
rcr
add
ret
sub
dec
cmp
scas
daa
jbe
sub
mov
ss
jno
das
dec
insl
hlt
adc
fs
int3
mov
push
jg
andnps
loop
mov
enter
dec
cmp
imul
jle
fucomip
stos
leave
sbb
push
lds
ja
adc
inc
push
ds
dec
out
cmp
cmp
imul
movb
fldl
jl
movsb
lock
mov
fneni(8087
xchg
notb
je
and
xchg
dec
xchg
mov
or
ficompl
sub
push
mov
gs
lret
rcl
mov
imul
mov
push
jae
or
mov
pop
cwtl
dec
nop
inc
jle
adc
xorl
shrl
cmp
inc
pop
das
hlt
mov
mov
mov
xchg
aaa
jo
mov
dec
loop
cmc
mov
add
adc
or
popf
lcall
loop
and
xchg
pop
mov
arpl
cmp
pop
pop
jo
inc
mov
in
and
pop
add
out
xchg
cs
ret
xor
inc
xlat
pushf
addr16
add
dec
sbb
jl
testb
repnz
jns
sub
lahf
addb
inc
ljmp
or
lds
gs
lds
out
cmp
mov
das
mov
mov
rcll
test
mov
ds
jae
lret
cmp
or
lret
and
aad
inc
jne
and
mov
shrb
and
sbb
enter
add
stos
jbe
adc
fnsave
mov
inc
dec
enter
sbb
sar
int3
cmp
inc
std
addr16
pop
jnp
or
fisttpl
sbbl
rcr
fidivl
loopne
add
movsl
adc
addl
lret
inc
popa
arpl
sub
xchg
pop
aam
sbb
pop
xchg
out
stc
mov
repz
dec
test
data16
gs
mov
adc
cmp
xor
push
xlat
mul
or
jl
std
xchg
out
dec
aas
sbb
add
ret
outsl
lds
aam
jp
fs
test
cli
cs
mov
inc
enter
pop
and
pop
sbb
xchg
xchg
in
lcall
sub
pop
mov
lods
xchg
repnz
dec
in
lret
pop
pop
mov
xchg
add
add
xor
mov
ljmp
xchg
cltd
xchg
push
inc
pop
dec
or
xor
outsb
jo
mov
xchg
jmp
pop
dec
fidivs
or
xor
sbb
xor
jne
push
pop
mov
mov
push
jle
mov
out
adc
xor
into
rclb
lods
or
sahf
shll
cmc
rcl
ljmp
pop
add
cltd
mov
mov
jb
mov
mov
pop
mov
shr
in
and
stc
cmpsl
shrb
pop
cmp
mov
sbb
sub
ja
and
mov
fnstcw
mov
in
mov
outsl
inc
dec
mov
add
mov
mov
mov
cmp
in
cmc
movsl
cmp
test
inc
jmp
jecxz
inc
mov
add
sub
aad
js
add
scas
dec
mov
jo
cmp
scas
sub
pop
inc
push
adc
mov
scas
adc
xor
leave
jmp
popa
dec
fldenv
scas
inc
add
cmc
shll
lret
add
push
mov
jns
in
rolb
mov
xchg
dec
mov
inc
aad
add
adc
add
xlat
cmc
pop
fucom
sub
nop
jnp
push
mov
ret
xor
div
rclb
mov
jge
roll
repz
loop
and
mov
jecxz
mov
out
xchg
addr16
push
in
add
sbb
jmp
jle
mov
cmp
fisubrl
fisubrl
add
je
stos
push
or
or
test
lret
jb
add
adc
xchg
idivb
sbb
sbb
rorb
les
pop
add
pushf
jge
or
test
imul
xchg
icebp
cmpsb
out
pop
jg
cmp
fildll
and
in
jmp
mov
xor
mov
pop
std
aad
ja
adc
sbb
xchg
mov
and
dec
jae
mov
mov
cwtl
push
mov
cmp
jns
cmp
daa
hlt
stos
dec
push
or
pop
dec
mov
push
adc
or
inc
out
mov
jge
sbb
jae
mov
mov
idivb
pop
sbb
orl
cs
jmp
fsubrl
js
or
pop
mov
xorl
sbb
inc
push
mov
rcrl
lds
imul
in
mov
xchg
pusha
xor
xchg
xor
out
ja
cltd
xchg
add
jns
ret
scas
push
arpl
icebp
addr16
or
loope
push
ss
int
in
stos
into
ss
dec
pusha
adc
rolb
xor
ljmp
int
and
ror
adc
in
mov
dec
mov
xchg
mov
mov
inc
mov
pop
bound
cmp
gs
in
lock
sub
cld
pop
dec
stos
lods
ss
lea
int
add
jge
add
push
sarb
mov
mov
gs
mov
push
into
jecxz
jg
push
out
dec
mov
or
cld
xor
popa
push
or
mov
rcrb
ss
mov
xor
mov
push
and
push
js
or
xor
xchg
cmp
mov
test
xchg
pushf
cld
mov
and
hlt
mov
or
push
xchg
or
cmp
mov
mov
xchg
cld
xor
pop
sub
xor
into
daa
xchg
aad
fbstp
dec
push
popf
cmp
and
dec
pop
je
imul
dec
popa
es
sahf
push
mov
push
addr16
ljmp
scas
scas
sub
shl
enter
adc
stos
daa
outsl
shrl
sub
add
xchg
sahf
pop
out
bound
sub
push
movsb
or
push
push
sub
test
aas
js
mov
movsl
jae
imull
lahf
push
in
jno
lods
push
add
sbb
mov
cmp
xchg
pop
sbb
repz
ljmp
push
in
add
or
jle
inc
mov
ja
ds
mov
inc
fiadds
mov
and
cmpsl
pusha
ret
imul
pushf
adc
out
mov
sbb
fstl
mov
pop
fs
cwtl
scas
stc
cmpsb
aam
daa
adc
lahf
punpckhdq
test
loopne
stos
sbb
jecxz
pop
pushw
or
sub
lret
and
repz
push
test
pop
arpl
mov
mov
adc
rcl
imul
int
add
fs
mov
cmp
in
outsl
cmove
xchg
push
fs
jne
rcr
fstpl
sub
mov
mov
js
data16
pop
jae
dec
bnd
sub
into
xor
leave
add
pop
sub
mov
jg
out
arpl
xchg
negl
xorb
outsb
or
jecxz
mov
adc
add
je
jo
mov
pusha
mov
lea
lret
fcompl
inc
push
and
xorl
fmul
pop
ljmp
enter
aas
dec
jb
arpl
sub
dec
cmp
dec
push
das
neg
fdiv
ja
mov
pop
negb
mov
or
inc
mov
inc
call
scas
xchg
inc
mov
inc
shl
xor
aam
inc
mov
dec
ljmp
cld
dec
call
mov
call
pop
jne
rcrb
shrb
adc
xorb
je
xor
sbb
stc
pop
imul
push
jb
mov
fcoml
rorb
jne
push
mov
test
mov
adc
sbb
inc
mulb
cli
xchg
xchg
mov
mov
push
subl
ljmp
fstpt
cmpsl
adc
sub
sub
shr
cmp
sbb
and
xor
repnz
aas
or
lahf
insb
xchg
je
fsubrs
mov
mov
push
mov
clc
mov
daa
stos
pushf
sub
cmp
nop
negb
cltd
test
sahf
mov
movsb
mov
ja
subl
jnp
cli
lods
into
pop
add
lods
outsb
data16
das
inc
xchg
lods
or
push
fldl
push
ret
add
rol
sub
mov
iret
push
adc
out
daa
in
sbb
push
in
inc
xchg
out
cwtl
add
dec
xor
shrb
fwait
sbb
mov
pop
inc
lods
stos
jmp
xchg
jae
lret
loop
fwait
mov
and
pop
fisttps
loopne
les
push
fmuls
mov
xor
and
nop
lcall
mov
call
pop
xchg
pop
das
xchg
idivl
xchg
cmpsb
cmc
mov
inc
sbb
shl
repnz
jmp
icebp
jb
xchg
push
movsb
push
inc
pop
fmull
pop
imulb
push
imul
outsb
sub
lcall
mov
mov
and
test
mov
jnp
rcl
and
mov
lea
add
hlt
lahf
movb
mov
idivl
sub
dec
sub
mov
mov
jle
sub
dec
jnp
jns
add
sub
jmp
dec
mov
ja
xor
cmpsb
xchg
xor
sbb
test
pop
and
and
icebp
push
nop
cwtl
leave
fistps
xor
pop
xchg
mov
jmp
dec
push
xchg
push
sti
xchg
nop
in
repz
div
lahf
xchg
mov
xor
ljmp
leave
dec
pop
mov
int3
sbb
outsb
cld
shll
adc
mov
ja
data16
gs
stc
mov
shll
cwtl
add
adc
adc
lods
xor
pop
out
mov
mov
psignb
mov
lret
jae
arpl
sub
push
add
or
add
cmp
pmuludq
mov
es
cmp
add
sbb
aam
out
and
outsb
push
mull
popa
pop
lret
adc
cmp
add
xchg
cltd
enter
test
jmp
adc
daa
in
push
dec
ss
icebp
pop
shlb
movsb
jb
xchg
pop
fsubrl
out
and
push
mov
push
cmp
in
pop
inc
pop
sahf
sub
sub
out
xor
jmp
int
loopne
jl
insl
sub
mov
mov
andb
lcall
push
and
dec
loopne
mov
outsl
cs
imul
lods
mov
add
add
xor
sub
lcall
xchg
scas
cs
push
or
adc
add
aas
cmc
sub
jmp
mov
xchg
gs
lahf
ss
or
jno
arpl
mov
test
push
inc
push
test
enter
mov
cwtl
push
mov
js
and
pop
lret
lods
and
and
jg
adc
icebp
loop
and
pop
lahf
xor
or
mov
dec
stos
aam
dec
push
push
data16
bound
dec
stc
loopne
mov
push
lock
fadds
mov
rclb
fsubs
mov
pusha
out
mov
mov
mov
push
cwtl
es
lea
or
push
and
push
outsl
mov
pop
cmc
cmpsl
or
mov
dec
inc
inc
sbb
addl
sbb
aaa
or
cmp
fisttpl
jg
call
in
jge
arpl
adc
cmp
dec
stos
leave
adc
in
fs
or
inc
popf
mov
fisubs
or
aas
push
adc
push
push
sub
mov
cli
in
imull
sub
xor
jge
sub
shlb
inc
inc
pop
mov
jg
jle
in
mov
cld
popf
inc
shlb
dec
and
lret
xchg
addb
mov
mov
into
mov
fldt
int3
inc
in
vshufpd
jnp
call
and
dec
stos
sub
push
dec
js
das
and
lods
push
fsts
nop
sarb
aad
ljmp
ljmp
mov
xor
and
scas
jns
jmp
xor
shl
sub
enter
gs
into
aam
adc
sti
jbe
add
aas
loopne
notb
push
in
jge
mov
stc
insl
add
cli
cmp
mov
insb
scas
fisubl
int3
xlat
and
pusha
mov
outsb
psubsw
mov
mov
sub
mov
call
push
loope
pop
test
lret
mov
jmp
fs
cltd
das
aam
imul
pop
loopne
pop
jl
nop
enter
lods
movsb
test
inc
pop
divl
incb
lret
stos
inc
sbb
xlat
xor
dec
sub
sti
hlt
sub
dec
jmp
rcrb
loop
lds
cs
sub
push
mov
pusha
icebp
inc
cmp
xor
pop
push
arpl
mull
mov
mov
pushf
cmp
arpl
dec
popf
cmc
and
add
push
mov
std
rcll
in
or
outsl
popa
adc
adc
aaa
xchg
xchg
stos
faddl
popf
inc
clc
and
jmp
cmpsb
icebp
sub
das
fstpl
scas
fisubrl
xchg
xchg
cmpsb
adc
push
jb
int
sbb
aad
xchg
xchg
pop
sub
push
das
sub
jg
sub
inc
pop
mov
pusha
pop
enter
ficoml
test
lcall
mov
into
mov
sbb
inc
jbe
cmp
or
imul
aaa
push
test
xchg
or
int
pop
dec
add
repnz
jae
and
out
out
xor
mov
mov
jecxz
mov
mov
xor
mov
sbb
push
pusha
push
shr
pop
rclb
ret
movsb
aaa
test
stos
test
or
jo
inc
dec
pushf
jp
aad
shrb
jmp
in
cmpsb
les
mov
ss
jo
mov
cltd
mov
pop
sbb
xor
mov
sub
test
cmp
xchg
sti
xor
jp
out
jecxz
loopne
or
cmpsl
adc
popf
xor
and
imul
mov
imul
pushf
out
mov
in
icebp
mov
clc
loope
cwtl
adc
in
mov
mov
lea
ss
aam
jmp
push
cmp
arpl
push
lahf
xchg
lock
fcmovu
or
sub
jnp
push
add
sub
outsl
or
pop
adc
pushf
add
pop
mov
jge
aaa
push
jb
fadds
mov
adc
push
je
addb
push
mov
mov
cmp
lods
xchg
rcrl
cmpsl
jecxz
pop
or
outsb
daa
arpl
mov
subl
divl
xchg
out
jg
loope
jle
inc
movsl
mov
addr16
lahf
add
mov
add
xor
ret
jo
sub
js
jecxz
mov
andb
jle
pusha
dec
push
scas
push
mov
loopne
outsl
push
rorb
inc
test
mov
adc
shlb
in
add
popf
test
pop
jle
pop
scas
dec
leave
pop
dec
sbb
data16
jmp
insl
gs
cmc
cmpsb
test
adc
cmpsb
repz
lret
mov
stc
mov
shrl
dec
or
mov
pop
cmp
adc
scas
push
gs
inc
inc
inc
or
shll
addr16
push
adc
loop
aad
mov
popf
jge
and
mov
js
add
stos
and
and
lcall
xor
into
cmp
outsb
lret
jmp
sbb
cmp
xor
leave
lea
cs
mov
sub
add
mov
pop
ja
or
cltd
add
std
icebp
test
xor
or
in
xor
push
jle
pop
or
lahf
push
rclb
mov
mov
inc
cmp
int3
loope
test
loopne
shlb
fsubrl
inc
fs
push
popa
popf
ljmp
cmc
lods
inc
lock
cli
add
int3
dec
test
mov
sub
sarb
ja
add
push
mov
mov
cmp
ret
add
daa
sbb
ljmp
sbb
in
cltd
std
jb
aad
sti
mov
mov
cli
fsubs
xchg
push
push
jp
cmpsb
adc
inc
lret
fucomp
jb
mov
xchg
ljmp
jbe
push
pop
mov
in
xor
xor
mov
pop
out
inc
fmull
mov
jns
lods
jne
stc
int
jne
dec
lahf
sbb
sbb
xchg
lahf
sbb
mov
into
fdivs
xchg
jbe
cmpsb
addr16
sti
cmpsb
jmp
fnstenv
fistpl
push
test
push
and
dec
ret
shll
icebp
sbb
jg
or
ret
jecxz
cltd
sahf
addr16
arpl
sub
jo
lea
mov
les
mov
jns
fsubrp
hlt
faddl
add
enter
push
mov
in
lds
xchg
inc
sub
mov
add
inc
mov
cltd
sbb
pop
stc
test
lcall
xchg
xchg
mov
loop
add
lock
imull
push
xchg
inc
in
popa
out
test
cli
in
vsqrtss
push
push
pop
out
subl
pushf
cltd
push
bound
movsb
push
dec
fsts
fisttpl
and
lahf
rol
xchg
stos
test
push
lods
rorb
mov
mov
add
inc
push
bound
aaa
insl
fnstcw
jo
sbb
jg
fwait
add
sbb
inc
cmp
adc
mov
or
test
inc
aas
adc
out
das
outsb
loop
or
mov
add
add
int3
lret
mov
fs
sbb
in
das
lret
divl
add
mov
and
sub
mov
add
jbe
pop
fisubl
inc
xor
sti
int3
xchg
push
mov
cli
pop
fs
rcll
repnz
insl
aaa
mov
inc
mov
inc
sbb
scas
inc
dec
xchg
pop
push
in
aas
insl
push
outsb
or
les
rcll
sbb
clc
movsb
cmpl
and
lods
mov
jo
div
jo
data16
lcall
test
pop
lock
mov
pop
aam
sbb
and
test
adc
aas
das
push
cmp
mov
int3
into
std
pop
jnp
sub
jmp
add
xor
out
lret
add
sub
bound
psraw
loop
push
mov
sbb
push
push
shlb
jge
mov
jae
or
loop
fbstp
sbb
aam
inc
cmc
cmp
lret
jo
sub
inc
subl
rolb
popf
xchg
lods
lcall
loopne
dec
mov
daa
dec
cld
adc
adc
sbb
fdivrl
repnz
pop
sti
mov
stos
inc
jo
out
xor
fwait
pusha
jne
out
out
pop
leave
out
outsl
pop
jns
mov
ds
fcoms
imul
lods
lret
leave
adc
push
popa
or
or
mov
mov
dec
push
punpckhdq
sbb
sti
iret
repz
ret
repnz
stos
imul
out
adc
aam
test
lea
xchg
filds
enter
adc
jle
faddp
mov
cmpsl
pop
jo
adc
out
or
cmp
xchg
cmp
fsubl
push
add
inc
subl
sbb
add
aas
dec
xchg
insb
adc
js
adc
jp
rcl
mov
out
lock
adc
stc
xor
aam
enter
popa
add
sahf
cmp
xchg
fcoms
gs
jbe
sarb
push
aam
sub
jl
ljmp
push
popf
loope
sbb
lds
xor
bound
push
jno
lods
push
cltd
test
mov
sbb
dec
popw
jae
sbb
movsb
in
push
testl
pusha
mov
adc
clc
mov
cmp
sub
xchg
inc
scas
rolb
xchg
push
aaa
mov
mov
and
hlt
std
fmull
push
ss
cwtl
imul
rclb
inc
fisttps
ja
jg
icebp
or
in
ss
shll
adc
mov
ret
or
movsb
mov
pushf
cmp
andb
cmp
pushf
cmc
into
mov
dec
mov
dec
jmp
das
mov
push
push
add
add
add
mov
push
in
or
mov
in
jg
je
pushf
in
out
cmp
aad
add
clc
into
popf
les
xlat
faddp
and
mov
test
aaa
and
sbb
out
push
mov
insb
int
pop
cs
cmp
mov
jnp
inc
scas
loope
shlb
dec
imul
inc
fistpll
lret
fmull
mov
cmc
mov
push
pop
int
mov
bnd
out
stc
and
push
scas
in
and
push
fs
jge
push
jle
sbb
sahf
test
adc
bound
jg
and
outsl
test
or
ljmp
call
cmpsl
mov
mov
cwtl
cmp
mov
cmp
mov
stos
mov
adc
jne
fisubrl
or
pop
jp
or
dec
adc
mov
mov
mov
imul
adc
jge
adc
inc
movsl
xrelease
push
push
xor
sub
mov
push
ret
das
cmp
or
jae
jl
sbb
push
iret
addr16
enter
pop
xchg
push
add
fidivl
xor
jnp
shlb
cwtl
sbb
test
outsl
pop
sbb
sub
loope,pt
push
aad
dec
fnstcw
or
ret
in
xchg
xchg
cld
sbb
je
jp
lret
and
aam
sub
daa
sbb
sahf
pop
xor
xchg
mov
mov
loop
stos
jnp
test
call
push
ljmp
jmp
and
sbb
pop
xor
enterw
aaa
clc
repnz
push
popa
sub
or
lret
mov
mov
jg
add
pop
daa
and
sub
push
add
add
xor
std
enter
loopne
pop
fbld
push
sbb
in
lcall
mov
push
jecxz,pn
loop
xchg
stc
push
fimuls
popa
or
push
rorb
les
pop
jo
fimull
js
fwait
add
gs
xor
mov
test
cwtl
lods
mov
scas
jp
jge
stos
jnp
pop
xor
xchg
mov
stos
ret
inc
and
dec
push
dec
pop
and
push
mov
inc
xorl
adc
pop
insb
jno
and
inc
and
or
aas
cmc
lds
dec
js
xchg
lret
lods
addr16
in
xlat
cmp
jo
shlb
mov
or
in
inc
xchg
rcll
jp
outsl
or
sbb
add
xor
add
popl
arpl
cmp
shrb
mov
sti
sbbl
pop
mov
mov
xor
cmp
cld
mov
jge
pushf
or
fiaddl
push
enter
xchg
pop
or
orb
pop
fnstsw
jmp
insl
mov
js
lods
jns
dec
in
mov
mov
jb
mov
jecxz
shl
notb
je
add
lea
ficoms
aad
or
inc
arpl
popa
mov
push
js
pop
push
mov
push
add
stos
dec
xchg
push
dec
shll
mov
push
movsl
jb
jns
cmpl
dec
sub
and
cmp
dec
mov
mov
pop
push
je
mov
mov
test
cld
leave
adc
mov
repnz
aam
insb
out
int
loop
gs
xchg
bound
jecxz
mov
pop
sbb
loopne
rcl
push
repnz
addr16
jo
andl
in
lods
popa
pop
or
rdseed
sbb
and
jge
push
push
nop
or
or
aaa
sub
mov
faddl
add
mov
or
jb
test
jg
fistl
shr
addr16
mov
aam
insb
int
sarb
insb
mov
mov
pop
mov
in
sbb
push
fmul
ds
dec
pop
and
in
ss
mov
or
jmp
and
pusha
enter
and
mov
mov
xchg
and
enter
jb
notl
mov
ja
int3
sub
mov
cli
ret
test
insl
repz
lds
or
dec
iret
das
pop
dec
xor
fwait
das
and
hlt
mov
sub
fmull
adc
mov
shrl
pop
jbe
xchg
mov
rcrb
and
sahf
pop
int
mov
vcmpsd
push
mov
adc
mov
out
sub
jno
fistps
adc
out
popl
cli
cmp
adc
jmp
js
leave
dec
out
mov
adc
call
add
lds
es
aam
push
cmp
dec
faddp
adc
sub
push
ljmp
pop
movsl
mov
pop
or
add
rcll
lret
imul
cmp
clc
insl
mov
data16
ljmp
shl
cltd
jle
mov
in
pop
pop
rcrl
ret
aaa
adc
into
jno
ja
xor
push
inc
sbb
cmpsl
push
pop
dec
sar
js
inc
imul
sub
xlat
pop
xor
mov
das
mov
fcmovb
jecxz
mov
add
add
int3
mov
sub
push
or
pushl
fs
movsl
bound
outsl
mov
addl
xor
mov
in
jge
repnz
sbb
push
mov
sbb
sarl
jnp
xchg
and
sub
fwait
enter
xchg
enter
pop
lret
jo
mov
mov
enter
negb
std
dec
xlat
cs
jl
nop
faddl
das
int3
cmpsb
xor
inc
ret
js
sbb
sbb
push
shrl
bound
in
adc
cmp
loopnew
sbb
enter
shrl
mov
mov
jmp
mov
notb
fwait
cmp
mov
fwait
pushf
and
fistpl
in
or
and
and
inc
subb
iret
lcall
loopne
out
sub
outsl
scas
orb
mov
enter
mov
popf
pop
or
out
in
xor
dec
popa
cmp
cwtl
repz
ds
pop
or
int3
fdiv
mov
xchg
cmpsl
sahf
jae
test
xor
and
cs
adc
out
loopne
in
cltd
mov
mov
cmp
xchg
pop
dec
andl
mov
push
or
sbb
sub
repz
add
cmp
cwtl
shrb
test
sub
xor
das
jbe
push
stos
xchg
cmpsl
push
shrl
js
sbbb
jle
bound
mov
mulb
inc
adc
push
push
inc
mov
les
jno
or
shlb
or
mov
xor
push
mov
test
mov
bound
fisubrs
mov
cltd
mov
outsl
jne
or
push
xchg
jnp
orb
mov
adc
test
in
mov
jnp
and
cmp
mov
loopne
pop
popl
bound
movl
mov
sub
sahf
movsl
push
push
enter
xor
pop
jl
xchg
pop
xchg
fsubl
sahf
adc
or
in
sub
nop
jl
subl
pop
cwtl
pop
inc
jg
std
scas
pop
sub
popa
add
int
sbb
scas
xor
add
insl
enter
mov
xlat
and
pop
sbb
push
data16
ja
xchg
ss
push
push
jl
mov
inc
and
mov
int
mov
mov
ljmp
repz
xor
fnstsw
jns
push
mov
dec
sub
lret
addr16
mov
inc
fmull
hlt
js
shrb
and
sahf
lahf
cld
xchg
adc
in
jmp
ss
mov
and
andl
add
fildl
jb
xlat
std
in
ja
adc
mov
sti
lods
aad
mov
sub
lds
mov
or
xchg
inc
es
xchg
mov
mov
out
mov
out
ss
mov
jbe
neg
jge
loope
stos
test
test
aad
movsl
fadd
adc
pop
pop
clc
int3
loop
pop
test
and
jnp
cwtl
mov
add
out
idivl
repnz
je
ja
icebp
adc
inc
mov
pop
mov
add
fldcw
retw
push
mov
loop
call
stos
mov
and
imul
pop
sub
push
movsl
stos
es
mov
cmp
push
stc
xchg
test
cld
addb
dec
push
lods
adc
repnz
jle
psubusw
cmp
adc
or
mov
mov
xor
add
pushf
sub
cld
jl
loope
jo
adc
aad
and
pop
mov
inc
mov
add
repz
scas
aam
popa
std
sub
xlat
sarl
subl
outsl
sub
dec
add
inc
ss
sbb
cmp
dec
lret
push
push
lret
xchg
mov
out
add
adc
mov
mov
jle
cmpl
outsb
fisubrs
es
loopne
push
mov
dec
add
sahf
push
dec
jecxz
test
insb
enter
mov
fidivs
fcmovnb
insb
xor
pop
loope
ss
dec
in
sbb
pop
roll
gs
dec
cmp
loop
inc
in
data16
add
adc
mov
fisubs
mov
pop
rcrb
inc
push
loopne
pop
ja
ret
loope
mov
popf
mov
mov
repz
add
dec
loopne
aaa
pop
mov
or
pop
dec
popf
lea
repz
jp
cmp
fs
mul
js
and
push
pop
pop
xorb
lods
rorb
jns
jp
cmp
push
aad
push
xor
rol
push
les
in
xchg
popf
rcrl
fmull
mov
out
xlat
or
pop
cli
dec
insb
cmp
andb
ja
sbb
cmp
push
inc
aam
shll
cmp
dec
in
ficoms
lock
mov
sarl
hlt
clc
mov
mov
in
jns
lods
jb
adc
pop
imul
xor
inc
scas
and
pop
xchg
iret
jl
push
mov
push
push
mov
aas
jmp
stos
and
mov
popf
sub
mov
ret
and
test
aas
ficoml
in
mov
lock
test
cmp
stos
push
xchg
in
testb
ljmp
arpl
icebp
xorb
mov
in
or
dec
mov
mov
mov
mov
pop
mov
bound
or
mov
insb
adc
insl
in
fwait
popf
insl
pop
stos
mov
mov
sbb
push
ret
int3
adc
push
and
aaa
xchg
xor
aas
mov
or
inc
addr16
pop
enter
fists
into
out
jge
scas
sbb
jae
ret
inc
je
gs
xchg
mov
sbb
out
mov
adc
mov
addl
sub
cmpsl
sbb
fsubrl
out
sbb
jnp
inc
dec
je
daa
dec
push
shr
enter
xchg
jnp
cltd
fcompl
push
scas
sbb
outsb
jb
dec
ret
xor
xor
or
adc
add
jno
jge
mov
jmp
xor
fwait
pop
into
mov
mov
mov
fsubl
sub
pusha
sub
loope
aaa
int3
cmc
repz
cwtl
and
sbb
pop
sbb
pop
sub
mov
sbb
dec
inc
sbb
pop
imul
lahf
notl
xorl
sub
lcall
mov
fildl
clc
lcall
cmp
in
dec
sbb
mov
aad
int
lret
js
leave
sarl
imul
pop
cmp
shlb
or
fbld
sbb
fistpl
lret
add
inc
loop
mov
mov
xor
divl
pop
fiadds
lcall
push
lock
out
dec
dec
sbb
hlt
lcall
adc
and
add
cmpl
push
fidivrl
lods
push
add
push
jmp
sbb
jg
sub
hlt
je
stos
xchg
adc
mov
add
cwtl
jnp
fxch
mov
inc
cmc
inc
fstps
js
repnz
lods
cli
sub
lret
and
nop
fstpl
jp
shrl
xchg
aas
movsl
pop
cwtl
call
lea
sub
ja
push
stos
jl
xchg
dec
in
shll
cmp
adc
popf
repnz
jns
push
mov
inc
pop
sbb
inc
aam
sti
mov
dec
rcll
sti
mov
or
and
xchg
jnp
sub
sbb
mov
mov
inc
xor
rcll
pusha
outsl
sbb
push
roll
rcrl
mov
jmp
mov
test
push
lea
fnstsw
xorb
and
xchg
aas
push
mov
lds
in
xchg
or
adc
fistpl
jno
inc
and
mov
inc
xlat
and
std
push
aad
roll
arpl
jge
sti
mov
jns
xor
push
jecxz
pop
call
iret
mov
ss
popf
in
jne
xlat
jo
pop
cmp
or
xchg
popa
js
imul
iret
dec
ss
adc
add
aad
cld
mov
mov
enter
jo
rcll
fisubs
cwtl
sub
cmp
pushf
sbb
push
icebp
js
dec
ficomps
loop
jo
inc
pop
inc
test
jge
dec
movsb
fistpll
jno
testl
dec
xchg
packsswb
pop
pop
jp
repnz
pop
xchg
mov
push
aad
mov
inc
dec
out
lahf
call
push
push
outsl
fwait
adc
lahf
dec
mov
mov
add
pop
fcomps
push
sub
push
sti
ret
loopne
arpl
pop
jl
or
sub
stos
clc
and
or
idivb
pop
in
cmpsl
xchg
xor
jne
ljmp
xor
mov
pop
mov
loop
lcall
xor
pop
inc
mov
push
xor
cmpsb
add
out
leave
cld
scas
sbb
pop
mov
lret
fstl
stc
jnp
iret
mov
mov
sahf
nop
sub
andl
jge
mov
arpl
pop
push
pxor
and
jmp
inc
lea
mulb
das
mov
jmp
fisttpl
add
fnsave
jmp
push
iret
push
sub
cmp
push
pop
stc
mov
push
lcall
ja
cmpl
inc
xor
fldl
sbb
hlt
pop
jecxz
repnz
xchg
and
adc
ss
ds
or
clc
mov
lock
adc
xchg
pusha
cmp
pop
lods
fnstenv
pop
push
test
lcall
lds
mov
sbb
xor
adc
std
data16
shll
inc
ds
lcall
mov
mov
addr16
and
push
sub
push
sbbb
cld
cmc
insb
or
mov
push
rolb
shl
insl
stos
xchg
cmp
movsb
jmp
dec
jo
lcall
push
test
ret
lret
push
popf
fcomp
cmpsl
dec
jae
pop
jg
mov
into
cmp
fs
fnstenv
jae
xchg
gs
adc
mov
jg
in
sub
cmp
add
xor
testl
fwait
cmp
dec
iret
mov
mov
clc
sub
push
adc
dec
mov
pusha
push
pushf
fs
out
cmp
pop
ds
xor
fcomps
fdivs
mov
cmc
cltd
inc
ret
or
mov
add
je
dec
pusha
loop
in
cli
shl
lds
cli
mov
push
scas
dec
mov
loopne
pop
xchg
or
xor
mov
jnp
cli
mov
dec
lods
jl
jp
cli
ja
dec
adc
lret
and
dec
sub
xlat
adc
push
cmc
arpl
aam
not
sahf
jnp
lods
mov
sar
gs
xorb
cmpsl
lods
insb
mov
daa
pop
lret
addl
cmp
mov
push
lods
flds
cmpsl
xchg
and
xor
rcrl
fnstenv
int3
enter
adc
pushf
popf
cmp
loop
mov
dec
addr16
mov
std
movsl
jo
jbe
xchg
dec
xor
test
adc
testb
sarl
push
xor
pop
std
ja
pop
sbb
or
pusha
cld
pop
aas
js
add
add
lcall
fs
ljmp
test
lock
lods
and
shlb
pop
cmpsl
and
aad
xchg
pushf
rep
dec
sbb
cli
lods
and
adc
dec
jl
popa
add
loope
xchg
mov
in
int3
arpl
test
cmp
and
fisubs
repz
mov
sbb
mov
gs
mov
or
lea
outsl
aaa
lret
xlat
mov
mov
xchg
int3
out
cmpb
jmp
rolb
jmp
addr16
mov
sahf
dec
rolb
push
add
loope
lcall
aam
lret
push
add
loope
les
cmpsb
ljmp
and
ljmp
pop
pop
mov
sbb
cmp
mov
stc
add
lea
mov
mov
iret
push
adc
leave
jae
lods
cld
outsl
out
fcompl
imul
movsl
jl
imul
mov
add
or
ret
and
int
mov
fdiv
or
or
movsl
negl
aam
hlt
in
notb
push
movsl
mov
push
xchg
mov
push
xchg
mov
mov
pop
rclb
imul
ss
cmp
xor
add
dec
outsl
rol
dec
outsl
mov
std
jno
ret
inc
mov
int
clc
insb
pop
test
stc
jo
lret
shr
and
shr
cwtl
ja
pop
mov
ficoms
pop
push
jecxz
rorb
cmp
xchg
add
clc
pop
stos
ret
es
pop
mov
sub
inc
xchg
popa
test
cwtl
fwait
jae
stos
lahf
cmp
clc
or
jge
rclb
scas
shll
into
inc
cmp
cmp
add
mov
jle
lcall
add
ss
mov
adc
xchg
int3
or
push
mov
adc
sbb
je
sbb
popf
decb
rcrb
popf
fs
out
mov
xor
push
jle
test
pop
and
and
add
jl
sbb
lods
cmp
add
test
ds
gs
cmp
mov
fidivs
jp
lock
mov
ss
mov
xchg
xor
adc
addb
inc
push
gs
xchg
mov
lods
push
dec
icebp
xor
jns
mov
dec
xor
mov
fsubrs
or
or
pop
std
fdivrp
icebp
push
and
pop
in
mov
popa
xorb
aaa
fimuls
jb
xchg
dec
das
push
cld
xor
popf
mov
cwtl
repnz
mov
sbb
loopne
mov
ficoml
dec
pop
arpl
scas
xor
es
lock
mov
mov
stos
cmc
sub
daa
mov
rcrl
mov
repz
movsb
jns
out
jnp
shl
sub
testb
loop
lods
sarb
outsb
loopne
add
add
pop
scas
jp
mov
xchg
inc
xor
shrb
fdiv
dec
pop
jo
sub
cmp
int
scas
dec
call
push
sbb
xchg
add
dec
lahf
imul
cmpsb
and
orb
mov
adc
aaa
sub
imul
xchg
std
fiadds
mov
inc
jbe
sbb
sub
mov
jmp
outsl
dec
scas
mov
dec
lods
dec
jne
shl
push
out
test
cltd
popa
gs
mov
jae
mov
rorb
xor
fidivrs
and
in
sti
jnp
cmpsb
lcall
es
pop
in
lods
push
in
fdivl
nop
mov
test
adc
imul
aas
stos
call
lret
cli
insl
bound
sub
cmp
rcll
js
lret
add
pop
sub
cs
jae
rep
mov
inc
or
and
pop
xchg
call
add
jnp
push
call
cmp
cmp
stos
aaa
mov
sahf
jp
sbb
rcrl
out
push
leave
jge
lret
xor
lods
out
negb
mov
mov
or
lock
dec
int
loop
cmpsb
cmp
dec
push
test
dec
inc
fidivrs
pop
jo
das
fcompl
inc
dec
roll
subl
and
cmp
pop
cmp
das
xor
jae
mov
xor
cmp
nop
std
inc
jp
in
leave
sahf
mov
loop
sti
sub
aaa
insl
bswap
mov
ljmp
push
jmp
dec
les
pop
pop
mov
and
faddl
adcb
clc
jb
cmc
mov
adc
scas
dec
in
add
inc
or
adc
mov
mov
inc
rcll
pushf
fmul
mov
mov
add
adc
or
push
jecxz
push
jns
jno
les
push
arpl
mov
sub
or
loop
in
mov
xor
and
aaa
pop
lret
mov
js
repnz
mov
clc
push
cli
loope
lahf
inc
js
cmp
arpl
in
jl
lock
mov
sub
mov
test
mov
sub
push
sub
lret
lret
pop
inc
cltd
sub
pop
lock
orb
ror
sub
mov
negb
fs
lods
jbe
inc
dec
jle
adc
jno
dec
inc
divl
push
mov
jecxz
in
mov
xchg
outsb
andb
pop
pop
test
sbb
sbb
and
pop
mov
pushf
call
jle
mov
or
out
push
addb
push
leave
test
pop
sub
mov
jge
dec
push
or
dec
fs
dec
xor
lret
sbb
lods
jl
xchg
mov
jne
sub
aam
mov
outsb
stc
dec
out
pop
fidivrl
shrl
cltd
cmp
pop
push
fisubs
leave
sbb
jp
xchg
sub
stos
sarb
pop
addr16
jnp
push
aad
test
roll
hlt
dec
ds
rep
pushf
push
ja
rcll
inc
jle
nop
mov
out
jge
fidivrl
frstor
mov
test
xchg
adc
ljmp
iret
jmp
and
or
dec
fildll
or
fidivrl
insb
adc
inc
add
push
xor
inc
lret
or
outsb
popf
bnd
cltd
lods
cs
ficomps
push
int
mov
cmpsl
out
inc
mov
in
sahf
clc
inc
mov
dec
lods
js
pop
rcrl
pop
dec
stc
or
xor
adc
repz
into
int
mov
repz
lcall
ret
test
inc
mov
pop
pushf
jb
repnz
dec
stos
rol
push
pop
sahf
int
adc
das
jns
fdivrl
xchg
push
jns
cmp
fucom
fsubs
dec
fcomp
adc
sti
mov
test
popa
jl
ljmp
out
mov
pop
or
adc
adc
rorb
or
adc
dec
mov
rcrl
mov
leave
js
rclb
jl
int
cmc
repnz
add
fstps
add
pusha
xor
sub
jmp
cmp
jnp
mov
sbb
jl
adc
dec
popa
lea
fcomip
jecxz
inc
cmp
xor
ja
or
xchg
scas
mov
xor
shll
in
leave
sbb
jmp
xor
lods
inc
pop
jge
inc
clc
mov
int3
or
lea
pop
mov
mov
iret
mov
pusha
and
fcoms
and
mov
xor
jnp
loop
enter
pop
int
dec
data16
mov
shll
add
jecxz
lcall
pop
movsb
repz
stos
outsl
sub
sub
sbb
jnp
inc
adc
jl
leave
sbb
pop
shlb
pop
or
int3
inc
inc
outsb
mov
dec
and
fwait
or
add
loope
pop
add
aaa
clc
ds
adc
and
sub
jo
mov
xor
enter
sub
fbstp
fadds
jl
add
pop
sahf
sub
fiadds
or
lock
cltd
call
adc
repz
pop
je
jp
lods
mov
fmul
xchg
mov
xlat
mov
popf
mov
xchg
pop
add
jle
mov
dec
movsl
pushf
xchg
xor
lods
push
loope
sbb
loop
sub
mov
inc
ds
leave
add
loop
xchg
aaa
dec
inc
cmpsl
and
push
enter
in
js
push
pop
jecxz
and
aas
fstps
ret
mov
pop
xchg
nop
jae
xor
mov
and
notb
xchg
mov
int
sbb
pop
test
in
jmp
push
adc
sub
cmp
pop
ret
fiadds
push
push
fimull
pop
jns
and
adc
ffree
xorl
jne
cli
scas
mov
pop
pusha
in
or
inc
stc
out
sar
and
cmp
sti
sti
icebp
jbe
in
jp
xchg
push
imul
push
xchg
stos
sub
and
inc
dec
sbb
mov
cmp
inc
addr16
and
popf
or
cmp
push
push
xlat
subb
dec
lea
fisubl
jns
js
cwtl
cmpb
outsl
cmp
xor
test
lahf
das
sarb
push
inc
mov
sbb
pop
dec
movsb
call
into
loop
jae
xlat
cwtl
jne
stc
lods
jbe
lahf
out
cmp
out
xchg
push
pop
sbb
ret
cltd
cltd
lds
fsub
add
sbb
and
in
or
leave
rcr
xor
jecxz
out
fsubrl
add
lahf
les
scas
inc
imul
cld
mov
lods
out
fldt
sbb
cmp
fsubrl
push
and
pop
cmp
iret
popf
cmp
cmp
aam
dec
call
pop
add
mov
jmp
clc
sbb
rolb
sbb
push
jge
sub
fdivrp
xor
cmp
adc
ret
add
popf
sbb
insb
out
push
test
pop
lods
xchg
dec
insb
cmpsb
seta
scas
push
js
xchg
sbb
enter
or
inc
pop
mov
test
sbb
xchg
pop
sahf
pop
ret
rclb
adc
adc
aaa
mov
mov
setno
pop
fimuls
inc
scas
int
sbbb
mov
in
or
xor
fisttps
cltd
jg
xor
je
ror
pop
push
mov
stc
add
daa
mov
dec
mov
pop
sbb
mov
out
mov
mov
out
and
pushf
in
dec
ret
add
mov
jae
and
cs
pop
lods
mov
adc
mov
mov
rcrb
ficompl
jg
int
add
mov
into
nop
mov
pop
jecxz
addr16
pop
imul
inc
popa
xchg
mov
xorb
dec
sbb
sbb
pop
test
bound
mov
push
mov
sub
nop
dec
lock
jbe
xchg
lea
scas
mov
mov
xchg
pop
push
sbb
fdivrl
ss
dec
adc
mov
pop
mov
repz
js
push
test
xor
cmc
push
js
pop
xor
xor
gs
mov
xchg
xchg
pop
loop
and
shr
cmpsb
shr
mov
cltd
pop
shlb
repnz
mov
adc
mov
lods
xchg
pop
pop
divl
fcomps
and
and
ja
sub
pop
dec
insl
sub
xor
in
inc
pop
cmp
xchg
and
hlt
xchg
nop
cmp
addr16
jg
mov
stos
inc
sbb
lods
out
jl
popf
sub
mov
cmp
js
and
orb
in
jo
or
push
sub
push
outsl
sbb
dec
addr16
in
jge
cwtl
lcall
imul
movsl
pop
pop
sub
imul
push
mov
adc
mov
das
hlt
or
xor
out
adcb
and
in
fwait
push
jle
aas
sbb
xor
jl
pop
mov
es
xor
outsb
repz
stos
push
sbb
cmp
adc
or
jne
inc
pop
out
push
push
stos
xor
ret
iret
inc
sbb
fwait
push
jae
rorb
xchg
xorl
leave
or
in
push
insb
sbb
cli
outsl
xor
les
dec
xchg
movsb
loope
cmp
ds
sbbl
jae
mov
fsubrp
popa
xchg
cmp
aam
mov
mov
out
lret
xor
lods
inc
dec
adc
movsb
flds
mov
jns
rcl
xor
cmp
xorb
inc
xor
std
imul
sti
adc
mov
jle
in
bound
pushf
mov
es
xchg
pop
sbb
inc
mov
mov
int3
xchg
sbb
push
dec
dec
dec
inc
xor
cs
insb
add
ret
sete
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
adc
add
pushf
add
pusha
movl
pusha
mov
pushf
pushf
lea
jmp
bts
and
movsbl
and
xor
cmc
bswap
call
mov
cmp
sbb
cmp
call
rolb
test
ret
ror
xor
dec
adc
arpl
mov
mov
pop
mov
ficompl
pushf
shl
mov
test
call
bt
test
pushf
call
lea
jne
btc
sub
pushf
mov
add
shl
sub
sar
pushf
add
inc
mov
add
jp
test
pushf
lea
je
test
sub
bt
cmc
cmp
push
mov
lea
jbe
ja
stc
imul
test
cmc
push
add
pusha
push
pushl
push
lea
jmp
add
dec
outsl
popa
fs
imul
add
loope
pusha
xchg
cmp
cmp
mov
push
sbb
test
in
pop
adc
jle
pop
repz
in
mov
mov
sub
aas
fldt
jno
testb
out
fcomip
xchg
dec
hlt
pop
xor
outsl
lret
cli
and
mov
jae
lock
in
and
nop
pop
popf
insl
jno
xlat
das
gs
leave
cmp
inc
lea
jno
hlt
xlat
notb
test
inc
leave
sbb
jns
mov
sbb
loop
cltd
add
mov
mov
jmp
pushl
add
pushf
mov
push
lea
jmp
bsr
bswap
xor
pusha
movzbw
xchg
call
mov
jmp
sbb
xchg
outsl
xchg
cmp
push
dec
xchg
add
mov
push
jae
xchg
fwait
pop
mov
add
sub
add
xorl
movsb
out
rcll
adc
lret
gs
mov
inc
in
mov
int
ja
pop
out
xlat
cli
xor
sub
outsb
xchg
or
push
dec
out
mov
shrl
negb
imul
in
das
ljmp
dec
out
dec
cmp
jne
daa
outsb
xchg
cmp
pop
popf
mov
dec
jb
pop
xlat
adc
jnp
popa
mov
shll
jb
rorb
ficoml
mov
xchg
movsl
cmpsb
fwait
dec
push
aam
negl
or
cmp
add
and
mov
outsb
enter
loopne
inc
mov
ds
cltd
dec
sub
cwtl
xchg
dec
pop
cmp
lds
push
outsb
xchg
cmp
xchg
ror
test
inc
pop
push
ror
and
mov
dec
push
inc
cmp
jmp
push
aam
inc
stos
in
fidivrs
jne
xlat
inc
inc
adc
or
inc
loop
jg
or
aaa
ljmp
rorl
std
or
bsr
cmp
cmp
lret
popf
je
nop
lcall
mov
roll
into
in
imul
inc
push
mov
and
inc
mov
test
sub
rcr
mov
bts
add
sbb
shrd
btr
shr
pusha
movw
cmp
mov
stc
test
movsbw
add
lea
movzbw
jmp
out
imul
cmp
push
pop
stos
jmp
cli
ds
mov
cmpsb
shlb
mov
push
test
popf
push
dec
xor
arpl
and
imul
std
in
cltd
fdiv
les
je
xchg
fwait
sbb
xchg
pop
mov
cld
mov
inc
imul
popf
pop
mov
repz
mov
orb
sub
loopne
sti
mov
dec
mov
and
lahf
movl
push
lea
pushf
mov
call
mov
push
pop
mov
fdivrp
add
popf
sub
xchg
out
pop
imul
mov
rcr
nop
andb
pop
insb
mov
cmp
stc
stos
and
fdivrl
push
and
ljmp
es
testl
jo
shrb
or
inc
fildl
mov
fstpl
aaa
aas
imul
push
dec
loop
inc
movsl
pop
mov
cltd
aam
push
cmp
aad
lods
add
or
pop
stc
mov
add
iret
mov
lds
jo
loopne
dec
mov
xchg
cmp
scas
push
add
loopne
add
or
sub
mov
fistps
enter
hlt
gs
mov
xchg
add
andl
xchg
aam
fs
pop
mov
sbb
xlat
int
shll
adc
mov
pusha
adc
mov
jbe
pop
call
xchg
fwait
movsl
lahf
or
cs
mov
call
jmp
add
lds
and
iret
pop
jecxz
int3
dec
data16
xchg
cmp
sub
imul
sarb
and
mov
in
shl
fildll
push
and
test
jl
test
jbe
ja
int3
mov
mov
rep
mov
jbe
in
orb
cld
or
sub
mov
nop
jns
iret
stos
sahf
mov
mov
scas
sbb
clc
jg
fstps
cmp
fists
addl
xchg
cmp
scas
or
out
mov
cmpl
xor
xor
mov
jnp
pop
cld
mov
cli
jb
loop
mov
add
adc
mov
push
in
mov
movsl
pop
mov
mov
aas
add
mov
push
sbb
aad
jbe
and
push
xor
outsb
mov
xchg
fwait
es
push
add
loop
repz
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
jae
popa
addr16
outsl
js
add
rcl
call
in
push
call
add
mov
add
call
sub
jne
ret
shl
bt
jmp
test
movw
pushf
mov
lea
je
cmp
call
not
clc
clc
stc
bt
sub
cmp
cmp
movsbw
jmp
pushf
jno
push
cmp
test
mov
fsubrl
pop
movsb
aas
jmp
inc
hlt
nop
int3
inc
fwait
add
mov
adc
xor
es
and
lret
jne
fildll
ds
jle
jno
pusha
loop
jle
xor
ret
clc
mov
xor
movsb
push
sbb
xchg
sub
loopne
adc
add
aam
mov
cmp
or
inc
and
cmpsb
cmp
adc
jecxz
xchg
rcll
pop
adc
js
mov
shrl
adc
loopne
add
sbb
cmp
test
in
adc
testl
int
imul
arpl
mov
clc
mov
mov
sub
xchg
xor
cmp
in
sahf
scas
cmpsb
push
inc
push
mov
loopne
sub
cwtl
aas
push
mov
and
int3
in
jge
rclb
cmp
pop
and
jne
jo
fwait
cmpsl
repz
fdivl
mov
add
lods
xchg
pop
faddl
xor
xchg
adc
lea
jae
pusha
push
pusha
lea
movb
call
mov
adc
movb
jmp
insl
out
shrl
cmp
scas
jns
out
ljmp
hlt
pop
push
rcrl
mov
mov
dec
fstpt
or
add
sbb
push
jns
fidivrl
jmp
movsb
mov
mov
xor
jne
pop
jo
incb
mov
mov
test
xchg
dec
sbb
idivb
test
test
xor
push
rol
clc
stc
clc
add
pushf
pushf
jmp
movl
fdiv
fisubs
mov
int
ljmp
sub
mov
loopne
addb
sarl
insl
sbb
nop
or
adc
and
mov
add
loope
pop
stos
inc
xor
sub
mov
xor
fisubs
cs
mov
pop
and
pusha
pushf
cmc
add
movb
call
add
inc
js
je
jb
arpl
jae
out
ja
cmp
ficoml
add
xchg
push
jae
xor
sub
in
mov
mov
mov
icebp
mov
lds
lods
mov
addr16
stos
fisubrl
imul
out
insl
xchg
fidivrl
xor
orl
pop
fs
fimull
cld
std
xchg
pop
mov
neg
cmp
push
add
sub
insl
int3
xchg
imulb
sub
pusha
jmp
pushf
lea
jb
push
lea
jb
aad
call
pushl
popl
bt
cmp
cmp
lea
push
call
lahf
lds
cmpsl
movb
inc
clc
mov
insb
aaa
mov
jns
or
pop
hlt
lret
popf
aad
dec
jb
insb
mov
sub
jmp
ret
stos
das
jge
idivb
call
loope
incl
mov
sub
hlt
testl
fidivl
dec
popa
mov
mov
mov
xchg
and
xchg
push
popf
sub
pop
roll
xchg
pop
inc
sub
sub
add
or
xchg
inc
lahf
inc
lcall
mov
lea
call
pusha
lea
jae
jmp
int3
and
mov
push
test
mov
out
std
mov
push
or
js
ss
mov
cs
sbb
sbb
sbb
xchg
pop
std
inc
int
aad
movsb
int
and
iret
xchg
xor
ja
jne
mov
push
xor
jbe
mov
cmp
push
inc
stos
lds
cli
mov
sub
nop
cmpsb
adc
or
mov
rolb
xchg
rolb
es
xor
ss
std
sub
mull
insl
nop
pop
mov
jno
cs
ret
pop
add
clc
bound
xchg
pop
mov
xorl
jmp
sbb
jl
ja
and
repz
test
pop
lahf
stos
adc
imul
clc
inc
ss
mov
pop
out
jnp
call
mov
pushl
lea
jne
mov
adc
shl
mov
sub
sub
shr
mov
test
sub
call
movsl
push
dec
jne
cmp
icebp
or
sub
and
sub
inc
test
sbb
or
cltd
fidivl
xlat
mov
sub
movsl
dec
cwtl
mov
xchg
and
xchg
dec
andl
mov
fs
cld
fcmovb
adc
ja
dec
dec
fucomp
mov
pop
xorb
dec
sbb
inc
jmp
adc
sbbb
xchg
sbb
dec
jl
pop
pusha
jo
mov
jno
and
fs
cmp
dec
jbe
addr16
cld
out
xor
fwait
adc
insb
cmpsb
xor
outsb
in
dec
push
jbe
push
jge
mov
outsl
idivb
int
xor
scas
mov
das
jp
cmc
in
fs
xchg
shll
fdiv
xor
sub
dec
leave
int
or
insl
jmp
lods
mov
mov
lds
pop
push
ret
sarb
outsb
std
lret
lock
sub
stos
mov
popf
rorl
call
add
test
adcb
cmp
inc
jne
roll
add
int3
cmp
sbb
dec
fcompl
sbb
add
pushf
mov
aas
stc
push
push
mov
and
xlat
mov
nop
jg
dec
push
dec
mov
mov
inc
rcrb
push
lods
repnz
inc
sub
inc
jne
xchg
leave
incl
mov
sub
clc
sub
mov
in
shll
xchg
dec
and
adc
sarl
xor
fsubrs
cs
or
enter
hlt
int
lds
fs
mov
lcall
data16
cmp
cmp
pop
inc
push
sub
test
push
pop
lea
push
mov
mov
shll
stos
jbe
jle
cmp
jmp
adcb
aas
and
jns
dec
leave
and
subb
mov
cwtl
outsl
je
jae
sub
adc
mov
jns
dec
jle
adc
push
jl
cmp
lcall
mov
aad
push
fistpll
inc
out
lcall
insl
xor
insb
add
sbb
mov
fiadds
test
ret
movsl
outsb
aas
dec
jp
jb
dec
mov
insl
aam
popf
mov
jbe
call
mov
pushf
jb
jg
nop
dec
and
push
and
xchg
fdivl
jg
ja
je
jp
push
cmpsb
ja
std
mov
cmpb
cmp
mov
pop
jle
pushf
gs
popa
testb
push
aas
mov
nop
xlat
and
mov
outsb
ljmp
or
pop
fs
jecxz
roll
inc
out
hlt
jecxz
cmp
fucom
push
sub
nop
push
dec
sub
lds
aad
mov
cld
xorb
cmp
xlat
or
das
sahf
rcrb
int
cmpsl
test
repnz
push
xchg
sbb
and
pop
adc
and
push
testb
icebp
repz
adc
inc
and
or
dec
clc
dec
fcompl
arpl
cld
mov
ds
xchg
inc
mov
sub
cmc
xchg
mov
insl
data16
jbe
xor
jmp
xor
icebp
push
xor
das
movsl
ret
mov
rclb
inc
pop
pop
fnstcw
dec
cmp
iret
xchg
dec
test
stos
jg
mov
mov
mov
stos
cmc
lcall
fimull
sub
jo
jle
mov
or
stos
hlt
ficompl
aad
and
aas
jns
mov
std
js
sub
gs
mov
pop
andl
sub
dec
push
push
movsl
ret
xchg
mov
inc
jnp
stos
cmpsl
xchg
xchg
and
pop
jg
gs
push
imull
dec
mov
mov
pop
cmp
push
sbb
mov
lods
sub
mov
in
mov
mov
xchg
rcrb
idivb
push
push
stc
sub
es
and
fstp
sub
les
mov
adc
mov
or
in
push
cmp
fmuls
mov
mov
sub
cmp
aas
mov
xchg
mov
fistps
loopne
lret
xchg
sti
push
fisubrl
jns
cmpb
dec
andb
or
iret
mov
and
add
mov
rcr
aad
shr
push
pop
xchg
scas
in
out
insl
mov
stos
shlb
daa
into
daa
inc
ret
sbb
mov
loopne
jg
cs
xor
mov
add
shll
jnp
push
pop
stos
les
pop
jb
push
popf
mov
xchg
lock
les
adc
push
fiaddl
xor
xchg
pushf
push
cmpsb
mov
sub
stc
mov
popf
orb
sub
sub
jg
out
sbb
repz
inc
pop
lcall
and
add
sbb
adc
dec
mov
stos
jmp
push
outsl
mov
dec
outsb
push
jle
inc
fimull
fstl
addb
pop
test
or
mov
jle
in
in
sub
and
insl
xchg
jmp
jge
arpl
mov
in
pusha
rolb
xchg
push
dec
test
add
jl
ss
or
insl
add
ja
cmp
mov
andb
pop
pop
pop
lods
les
mov
out
outsb
test
push
leave
mov
lret
stos
test
or
xchg
gs
sub
or
dec
lret
ljmp
lea
pop
das
mov
jmp
and
sub
pop
pop
push
test
je
in
and
add
jmp
xchg
or
push
mov
imul
fcomip
outsl
push
js
push
or
push
push
inc
mov
aaa
arpl
adc
push
mov
push
testb
xchg
bound
jmp
lret
test
and
push
test
into
int3
jp
dec
xchg
push
sbb
xor
into
mov
sbbl
pop
cwtl
cmpsb
xchg
adc
mov
pop
or
xchg
push
cmp
dec
arpl
sbb
xlat
icebp
enter
dec
cli
stc
cmc
push
xor
and
outsl
rcl
sub
cwtl
popaw
arpl
imul
leave
fildl
push
xor
mov
testb
incb
imulb
in
push
or
cli
mov
jae
cmpsl
int
cmpsl
sub
pop
dec
xor
or
dec
adc
dec
lret
or
loopne
mov
jbe
sub
cmp
shr
mov
sbb
scas
sbb
or
andl
sub
and
clc
cli
add
das
es
int
imul
mov
cmp
pushf
and
rorl
mov
adc
push
push
adc
aaa
add
sbb
xchg
lea
mov
push
dec
aam
and
stos
dec
xchg
mov
pop
cmc
sbb
dec
je
or
xchg
ret
jns
outsb
pop
mov
sbb
sbb
xchg
mov
mov
mov
mov
mov
cmpsb
lods
sti
outsl
out
imul
mov
pop
js
loopne
iret
aad
cmc
fs
shrl
mov
cmp
push
js
fwait
or
repz
jbe
sub
repnz
clc
cmpsb
lods
xchg
mov
iret
aas
nop
sbb
imul
xor
fidivrs
mov
inc
xchg
push
add
insb
gs
sub
bnd
data16
mov
cmpsb
les
pop
mov
js
sarl
ljmp
in
adc
sarb
inc
xor
jle
shrb
dec
adcl
cld
sbb
call
push
or
xor
sbb
mov
xor
cmpl
fidivs
jge
mov
seta
jb
cmp
mov
sahf
xlat
lahf
inc
xchg
and
in
and
icebp
mov
out
test
outsb
test
ret
enter
loop
xor
loopne
dec
mov
addb
pop
and
bound
push
je
das
test
hlt
pop
xor
sub
bound
inc
movsl
mov
pushf
push
sbb
ss
dec
inc
mov
inc
sub
fdivrp
cmpsb
jae
jbe
pop
mov
inc
ficompl
inc
jg
lds
push
inc
xchg
xchg
aaa
lahf
or
sub
sub
out
mov
in
inc
mov
jne
cmp
sbb
push
std
test
sub
dec
icebp
test
jbe
movl
dec
int3
jae
aas
fimuls
dec
jmp
sbbb
mov
pushf
sahf
sub
add
outsb
mov
out
xchg
dec
mov
sbb
add
sbb
cld
out
or
std
sbb
in
mov
dec
xchg
imulb
sub
xor
inc
pop
test
xchg
shlb
aad
call
mov
lret
jecxz
sbb
mov
lcall
insb
cmp
xchg
mov
sub
repnz
xchg
cli
imul
push
mov
dec
test
in
scas
mov
sarb
and
lret
mov
adcb
jbe
in
sub
sbb
not
inc
dec
mov
and
xor
sub
mov
mov
or
es
std
push
xor
in
test
aad
inc
sbb
arpl
jecxz
roll
push
push
adc
cmp
sahf
xor
jae
sub
stos
pop
and
shll
adc
add
stos
fwait
js
ds
das
das
or
dec
pop
sbbl
mov
stc
test
xchg
rcl
ja
movsl
jnp
lret
xor
mov
cmp
pushf
dec
fcoms
add
xor
push
push
mov
mov
dec
inc
cmp
mov
cld
push
aaa
aam
mov
push
jp
rclb
jle
scas
fcmovu
imul
lcall
cmp
test
sbb
mov
lret
inc
mov
les
xchg
in
mov
jno
sub
inc
pop
call
inc
inc
xchg
stc
fcoml
sub
sahf
test
xchg
icebp
mov
stos
add
inc
dec
jg
pop
test
add
into
inc
int3
mul
cmc
fsubr
pop
dec
xchg
add
add
movsl
rcr
imul
mov
sbb
push
xchg
xchg
out
pop
scas
filds
jns
lahf
shll
dec
out
xor
inc
fs
hlt
and
repz
cmc
inc
inc
inc
mull
mov
stos
lret
mov
mov
mov
add
pop
cmp
push
repnz
and
cli
das
shll
sti
mov
mov
movsl
sub
daa
lock
or
shll
ss
cmpsl
gs
inc
sbb
iret
out
pop
pop
fldt
sub
add
addr16
ljmp
xchg
inc
xchg
rclb
pop
repz
adc
jmp
nop
cs
lahf
xchg
add
xchg
outsb
sub
std
push
inc
loop
or
cwtl
mov
aad
cmpsb
iret
pop
es
xor
jg
sti
movsl
cmp
test
imul
fsubs
jecxz
pop
add
shll
sub
ret
add
push
sub
iret
test
pop
loop
mov
pop
xor
fsubl
test
in
loopne,pn
xchg
add
adc
xor
pop
xor
bound
jle
sub
cmovnp
je
dec
dec
fcoml
std
imul
mov
and
movsb
mov
pop
pop
or
sub
in
ss
lods
out
data16
jge
scas
enter
fistpl
rclb
out
ja
push
mov
scas
shld
push
loopne
sub
mov
sub
dec
sbb
scas
cmp
repnz
clc
jbe
fsubr
fmull
mov
xchg
lods
div
addr16
inc
js,pt
mov
lret
jne
adc
outsb
les
scas
xchg
jg
jne
xchg
add
popa
dec
inc
add
mov
dec
cs
adc
test
dec
test
mov
mov
xlat
jp
fcompl
cli
cltd
push
loopne
leave
mov
sub
test
pusha
jmp
jmp
mov
shl
xadd
xchg
not
sbb
shr
jmp
add
roll
cmp
call
cli
mov
fdivr
aas
loopne
fs
mov
add
cmpsl
mov
clc
jecxz
mov
arpl
sbb
arpl
sbb
mov
xchg
cmp
imul
sub
and
ret
push
jge
cmpsl
pusha
addr16
xor
add
stos
push
fnsave
in
ss
movsl
fucomi
insl
js
xchg
cmp
rol
and
mov
mov
add
aad
ret
jl
dec
xchg
dec
addr16
mov
mov
jle
dec
cmpl
mov
inc
dec
dec
je
call
jmp
je
sbb
outsl
mov
dec
ret
fstp
push
fisubrl
mov
in
jmp
ljmp
inc
push
jecxz
mov
rclb
out
call
leave
lds
repz
mov
sub
jp
mov
pop
jb
adc
adc
ret
ljmp
test
cmpsl
fnstsw
cwtl
inc
rorb
or
mov
xor
inc
inc
jbe
push
outsb
sbb
or
cmc
loopne
cmp
enter
sub
xor
loope
ret
sbb
sti
xchg
ja
dec
jle
inc
xchg
adc
pop
setbe
mov
ljmp
xor
and
xchg
nop
in
mov
fucom
xchg
inc
out
lahf
sbb
pop
call
pop
and
cmp
mov
das
ljmp
push
in
lret
arpl
mov
mov
pop
and
mov
sarl
sarb
iret
std
enter
and
mov
pop
push
stos
jg
sub
loop
movsb
ror
mov
add
adc
mov
sub
fstps
xor
adc
push
push
rorb
inc
out
add
inc
xchg
cmp
test
adc
dec
pop
mov
loope
psubw
lret
out
mov
mov
xchg
shlb
cmp
popa
shlb
jns
or
pop
pop
mov
fstl
aas
adc
cwtl
and
dec
inc
inc
inc
sub
pusha
push
jbe
sub
push
insl
dec
mov
lds
inc
push
lods
insb
push
cmc
mov
and
xor
inc
push
jbe
fsubs
shrb
dec
pop
xchg
fisttpll
push
mov
jnp
aad
aaa
dec
or
sub
in
mov
inc
xchg
cmp
movsl
das
lahf
sahf
loope
sbb
jne
shr
and
jle
hlt
aad
xor
movsb
cltd
pop
popa
mov
hlt
pop
addl
jmp
dec
add
add
inc
sbb
test
mov
or
mov
dec
mov
sti
or
pop
mov
inc
dec
pop
imul
or
loop
cmp
sub
call
pmaxsw
jecxz
scas
xor
leave
lahf
jbe
movb
movl
jmp
pusha
sbb
mov
xor
xor
arpl
sbb
mov
int3
int
sbb
mov
in
mov
push
mov
out
pusha
ficompl
jp
pop
decb
add
push
fiaddl
mov
imul
jmp
push
or
mov
mov
sub
iret
or
sti
adc
xchg
push
fstl
or
or
or
and
lea
call
call
bt
cmp
mov
push
lea
jb
btc
pushf
mov
jmp
xchg
call
push
push
mov
pushl
ret
mov
pushf
jmp
add
inc
jb
popa
je
push
outsl
insb
imul
movl
pushl
lea
call
jmp
push
cmp
push
je
rorl
addl
inc
inc
and
ja
ja
cmp
ret
repz
mov
lods
and
ret
and
arpl
cmp
dec
and
fscale
jns
repz
dec
jle
xor
or
sbb
jg
mov
xor
movsb
add
inc
push
dec
aas
mov
push
arpl
aaa
int3
ret
xchg
pop
push
sub
ja
lds
out
sub
fimull
mov
jge
inc
xchg
cmp
sub
sub
fistpll
add
scas
into
jg
cwtl
push
imul
ss
jnp
repz
mov
mov
mov
sub
enter
lea
out
subb
or
fstpt
fdivrl
sub
push
pushf
adc
test
cmp
stc
sub
bt
cmp
cmc
jmp
lea
ja
push
pushf
pusha
call
push
movb
movl
pushf
movb
pushf
lea
jmp
lea
call
rcr
rol
stc
setno
mov
pusha
pushf
cmc
shl
call
ds
imul
adc
sarl
addr16
ret
sbb
sub
xlat
out
fwait
push
fidivrl
jg
pusha
xchg
or
or
jo
sub
ss
ret
or
adc
insb
adc
shrb
imul
or
out
sub
dec
mov
push
push
add
call
jno
adc
pushl
push
mov
lea
jmp
mov
cmp
cmp
shr
fisubrl
add
mulb
imul
in
faddp
push
xchg
mov
ja
and
mov
pop
cs
push
push
mov
xchg
into
xchg
add
fwait
cld
setne
push
outsl
pop
pushl
outsl
or
aad
nop
into
xor
cltd
jg
xchg
dec
lret
mov
int
rep
shrb
xchg
scas
mov
lea
jne
btc
mov
mov
sar
sub
lea
mov
pusha
pusha
sub
cmp
call
cld
xor
mov
repz
jno
mov
in
ja
dec
and
or
mov
add
leave
mov
pop
ret
aad
dec
testb
mov
cwtl
push
sbb
sub
lds
cmp
sub
adc
in
ret
xor
pushf
pusha
test
test
not
mov
push
mov
pushf
lea
jmp
pushl
push
bt
add
cmc
not
pusha
cmc
movw
add
jmp
mov
xchg
cmp
xor
movsb
mov
xor
pop
push
fstpt
call
test
aad
rolb
and
popa
and
mov
es
loopne
lds
outsl
out
dec
test
fists
mov
ja
cwtl
fdivl
push
dec
and
pop
or
lods
stos
mov
mov
dec
repnz
sub
fldcw
shr
setbe
lea
call
stos
pop
dec
dec
xchg
cmp
jae
shrl
ja
mov
pop
mov
mov
icebp
push
lea
hlt
arpl
push
cmpb
adc
inc
sub
push
cmpsb
or
add
test
ljmp
or
xor
jecxz
leave
push
pop
sbbb
mov
sbb
or
pusha
mov
pushf
lods
call
pop
adc
xchg
cmp
in
push
dec
movsl
js
mov
inc
aaa
and
aaa
mov
cmp
jne
xor
daa
fadd
icebp
enter
je
insb
arpl
sbb
and
cld
pop
nop
test
mov
dec
addr16
adc
inc
out
outsb
cli
and
out
inc
loope
cltd
ljmp
lcall
mov
loope
cmp
mov
loopne
push
mov
push
sbb
int3
add
mov
pusha
lea
call
jmp
mov
not
jmp
movzbw
lea
pop
pusha
pushl
ret
mov
cmp
dec
popf
mov
mov
cmp
jns
push
jmp
sar
leave
sbb
fisttpl
stc
js
leave
cmp
icebp
jns
std
loopne
and
push
pop
push
mov
and
rolb
dec
xchg
cmp
sbb
push
shl
jecxz
add
add
adc
or
loop
sbb
push
jns
mov
fldl
orl
movzbl
jmp
sub
xchg
push
jle
push
xchg
fnstsw
mov
daa
pusha
scas
mov
sub
mov
movsl
leave
fdivl
nop
clc
lods
mov
loopne
jb
jp
inc
dec
notl
roll
imul
lea
lock
pop
jne
pop
movsl
movsb
addr16
mov
iret
dec
or
fadds
jge
or
xor
bt
shr
cmc
imul
clc
lea
pusha
inc
call
xorl
mov
test
popf
outsl
fildll
fcoml
sbb
pop
mov
pop
mov
ljmp
lahf
jge
cltd
dec
fstp
jns
or
nop
movsl
xchg
sub
scas
mov
mov
cmc
or
or
faddl
out
imul
ljmp
mov
add
aad
mov
imul
dec
cmp
adc
or
dec
xchg
cmp
lret
inc
adc
out
stc
add
xor
sbb
mov
sub
bound
adc
push
subl
push
bound
push
sub
fisttpl
lahf
pop
loopne
mov
adc
outsl
mov
pop
out
or
cmpsl
in
add
scas
insb
pop
or
mov
xor
push
pop
int3
lock
jmp
jne
mov
sti
ja
cmc
dec
mov
fmul
inc
movsl
mov
cmp
leave
mov
aad
stos
bswap
call
mov
push
xor
cmp
repnz
call
movb
sbb
call
neg
shrd
pop
shr
lea
daa
pop
btr
daa
pop
pusha
mov
aaa
rcl
mov
adc
dec
and
add
pusha
jmp
pushf
movl
pushf
call
lea
not
mov
cwtl
mov
jmp
push
cmp
push
pushl
mov
pushl
lea
jb
clc
push
cmp
movb
pusha
lea
jae
bsf
bsf
cmp
pushf
mov
clc
bswap
mov
sub
cmp
mov
cmc
pusha
pusha
xor
stc
repnz
jmp
push
lea
jne
xor
aad
xor
sub
inc
rol
mov
cmp
dec
cmp
add
neg
setne
pusha
cmp
mov
pushl
cmc
test
mov
call
call
not
mov
mov
pushf
push
call
jmp
push
pop
outsb
dec
xchg
cmp
dec
movsb
fldt
adc
jp
cmpsl
das
int3
jo
repz
movsb
cltd
push
notl
es
mov
call
mov
dec
sti
ficompl
pushf
push
insb
loopne
aas
push
and
lret
push
out
lcall
bt
bt
call
jmp
mov
mov
andb
adc
push
pop
adcb
cmp
push
or
add
adc
cmp
dec
les
and
in
mov
pop
mov
stos
adc
loop
add
sub
lods
jmp
sub
and
hlt
jmp
lret
shlb
sahf
sub
push
insl
mov
sub
mov
pop
sahf
push
and
lret
mov
push
dec
inc
dec
dec
xor
cs
insb
add
fs
push
pusha
jmp
xor
bt
mov
mov
clc
rol
clc
add
cmc
cmp
cmc
shl
cmp
push
add
pushl
clc
sub
movb
movb
call
test
pushf
mov
lea
pushf
lea
je
mov
not
not
call
pusha
pusha
call
mov
mov
cs
xor
mov
cmp
pushfw
mov
fstps
loop
hlt
xchg
or
pushw
insb
push
mov
movsl
test
mov
insb
adc
cmp
fistps
and
stos
inc
mov
lcallw
cmp
je
subb
lock
dec
mov
push
cltd
scas
bound
pushf
jmp
lahf
es
dec
xchg
cmp
stos
add
rclb
push
jge
push
cmpsb
cltd
or
or
xchg
cmp
cmp
pop
sub
mov
out
ret
xchg
ljmp
and
pushf
cmp
shrb
mov
add
xchg
cmp
mov
sub
jno
sbb
or
or
hlt
add
into
emms
or
les
sahf
push
mov
cmp
mov
das
jnp
adcb
popa
loope
pop
popf
in
mov
out
mov
xchg
cmp
or
jecxz
xchg
sub
push
repnz
jns
scas
addb
or
xchg
inc
aas
test
imul
sub
and
jae
xchg
btc
stc
btr
mov
not
call
call
mov
jmp
push
push
inc
push
xor
cs
insb
add
sbb
decl
sbb
push
pushl
ret
mov
jmp
sub
stc
cmp
mov
lea
lahf
lea
mov
call
pop
aad
push
xchg
cmp
push
nop
cmpsl
xchg
xchg
sbb
cli
sbb
xor
xchg
fmul
repz
mov
shrb
xor
sbb
mov
push
jecxz
int
fidivl
cltd
xchg
enter
cmpsb
mov
add
sbb
cmp
jbe
nop
les
adc
lock
xor
nop
int3
sub
inc
int
push
sahf
hlt
repz
xchg
cmp
xor
clc
sbb
sub
push
push
push
push
push
push
or
mov
xor
or
adc
xor
push
cmp
pop
cmp
movsb
cwtl
loopne
sub
mov
mov
ret
inc
loope
shll
or
scas
add
sub
inc
and
mov
jo
xchg
cmp
addr16
xor
inc
add
js
cmp
pop
cmp
sub
adc
adc
out
sahf
xorl
pusha
clc
pop
xor
test
shlb
and
mov
and
mov
loop
arpl
lea
jnp
iret
mov
mov
sahf
pop
xor
imul
sub
movl
mov
lea
mov
pushf
push
lea
jmp
call
xor
bsf
adc
mov
cmc
pusha
cmpb
jmp
push
push
jmp
lea
jae
jmp
popl
cld
imull
sub
es
bound
sub
xor
lock
pop
outsb
xor
xchg
jecxz
int
fsts
lahf
aas
cmpsl
fistps
pop
ss
scas
xor
cmp
aam
call
fstpt
xor
shlb
xchg
inc
and
dec
out
movsb
aad
cmpsl
xor
ror
inc
nop
mov
cmp
sub
imul
arpl
rclb
mov
stos
out
sti
xor
neg
add
pusha
lea
mov
pusha
mov
jmp
pushf
movl
movb
push
push
pushf
lea
jmp
lea
jb
jmp
cmp
sbb
push
test
mov
je
andl
incl
call
push
sub
ja
fxch
ljmp
mov
or
pop
xchg
sbb
dec
xor
popf
arpl
dec
pop
adc
subb
push
xchg
push
jecxz
les
clc
xchg
add
jnp
test
mov
jae
add
or
fdivrs
pop
test
dec
imul
mov
push
mov
popa
test
inc
divb
cmpsl
mov
xchg
imul
cmpb
xor
popa
mov
jg
popa
fmull
jns
mov
dec
loope
sar
xchg
test
xlat
hlt
les
aad
ret
sbb
aaa
pop
xchg
mov
es
pop
adc
mov
cmp
bound
in
ficoml
jb
and
push
mov
sub
addl
movsl
dec
stos
cmc
aad
adc
jne
or
cwtl
call
movsb
pop
push
push
xchg
cmp
fcoms
xor
out
or
popa
mov
push
cmpsb
rorl
aad
add
sbb
dec
push
gs
mov
pop
fs
sbb
push
inc
sbb
and
mov
enter
ret
xor
or
cmp
jb
ret
pusha
ret
loop
add
enter
iret
xor
jle
in
mov
adc
add
fs
push
rcrb
stc
lcall
mov
stc
cmp
pushf
push
lea
jbe
shl
mov
xor
adc
add
test
xadd
sub
mov
movsbw
add
mov
push
shl
or
movl
neg
bsf
xor
mov
jmp
adc
push
mov
lea
jb
bt
cmp
call
inc
and
push
xchg
cmp
mov
cmp
lds
cmpsl
movsb
clc
inc
flds
adc
pop
jne
testb
es
sbb
insb
and
ljmp
cltd
xor
std
bound
shll
in
in
in
pop
adc
lods
xchg
aam
sti
inc
aas
cld
mov
mov
dec
pop
iret
push
sar
sub
fmull
mov
or
ljmp
and
mov
ja
je
push
sbb
out
test
ret
sbb
fdivr
repnz
adc
push
xchg
cmp
imul
pop
dec
mov
cmpsl
mov
outsl
xor
stc
dec
cmp
dec
or
mov
test
mov
repnz
mov
mov
cmp
ds
xchg
adc
jbe
fdivrs
dec
jg
add
dec
jns
adc
outsl
mov
in
call
mov
sbb
push
in
das
xchg
jge
iret
push
pusha
mov
or
leave
pop
lahf
pushf
lods
jmp
stc
sar
mov
clc
test
jmp
add
insl
gs
insl
outsl
jbe
add
ret
jmp
leave
sbb
push
add
sub
shr
movsbw
bsf
xor
pop
dec
pop
pusha
cmc
cmp
pushf
jmp
bt
mov
test
call
stc
pusha
shr
mov
pushl
mov
adc
call
sub
stc
stc
stc
not
bt
stc
sub
test
jmp
jmp
add
or
test
bsf
mov
call
mov
pusha
mov
movsbw
not
movzbw
lea
mov
pushf
movb
pusha
lea
call
bswap
mov
mov
call
test
sbb
inc
push
push
mov
aaa
dec
test
cmpsl
pop
sub
add
mov
daa
imulb
loopne
cmp
out
sahf
mov
push
adc
aam
out
in
cld
in
lahf
jno
les
xchg
cs
lret
les
inc
push
out
push
sbb
loopne
popa
pop
clc
xchg
xlat
sti
stos
cmp
pop
fcompl
stos
or
sbb
inc
fs
inc
jle
sbb
dec
push
push
xchg
cmp
test
outsb
std
arpl
test
fistpl
pop
loope
mov
add
outsl
in
lahf
idivb
adc
mov
pop
mov
pop
and
jns
xchg
fistpll
dec
scas
jecxz
cwtl
pop
dec
mov
ja
pusha
loop
enter
cli
std
aam
mov
pop
sbb
out
mov
lret
and
ljmp
icebp
std
call
mov
mov
adc
jp
fdiv
std
lods
bound
push
lahf
jp
xor
dec
popf
mov
std
pushf
mov
mov
gs
xchg
ret
dec
daa
ret
aas
pop
mull
negl
adc
leave
jecxz
lods
push
push
add
mov
ljmp
call
mulb
loop
inc
ja
push
ds
aaa
push
or
pop
xlat
dec
addr16
pop
mov
pusha
add
popa
add
inc
shll
cmpsl
ss
lods
fidivrl
bound
ds
int3
outsl
jp
fsubr
mov
insb
mov
fcoml
adc
and
jmp
test
xchg
test
in
lret
xchg
add
das
push
dec
pop
xor
insb
or
sub
fs
movw
lea
ja
push
lea
jb
pusha
push
cmpb
call
mov
ss
xchg
cmp
clc
scas
fiadds
std
jo
ja
in
jmp
jae
xchg
add
and
test
adc
andl
jns
xlat
inc
and
mov
inc
and
repz
jp
movb
pusha
call
pushf
pushl
pushl
mov
lea
jb
xor
shrd
aam
shld
cmp
call
add
jle
shr
pusha
adc
pusha
cmp
movw
sub
jmp
lea
jne
rcl
mov
bsr
neg
bts
mov
btr
sub
xadd
shl
mov
cmp
not
mov
and
ror
setne
mov
shld
mov
shl
dec
mov
dec
adc
mov
shrd
rcr
dec
sub
pushf
mov
clc
btc
rcl
btc
mov
cmc
sub
daa
ror
not
and
shr
mov
cmc
shl
cmc
cmp
add
pushf
lea
jmp
pushf
setle
call
popf
cpuid
nop
pusha
push
pushf
mov
movl
call
jmp
xchg
mov
xchg
cmp
imul
xchg
pcmpeqb
bound
xchg
mov
sub
dec
int3
pop
fwait
adc
jae
mov
roll
ret
lock
rcrl
bnd
dec
fsts
lea
cmpsb
sbb
jo
mov
das
hlt
lea
inc
das
and
in
push
pop
daa
jecxz
adc
jg
mov
lock
push
ret
ja
mov
push
movl
pusha
movl
mov
mov
call
inc
ja
pop
xchg
cmp
push
in
imull
gs
cmp
push
adc
inc
inc
sbb
stc
in
cmp
sbb
dec
daa
and
fsubl
mov
repnz
mov
inc
push
fdivrs
arpl
adc
sub
adc
clc
jmp
add
pop
mov
orl
mov
cmp
outsb
inc
daa
or
pusha
das
stos
in
call
aaa
xchg
gs
pop
mov
mov
lods
pushf
cmc
mov
ror
clc
call
movl
lea
pusha
jmp
sahf
inc
inc
pop
xchg
cmp
xor
mov
push
or
test
xor
inc
mov
pop
inc
fisubrs
push
dec
aas
cmp
push
fprem
scas
leave
int3
sbbl
mov
sbb
jecxz
cmp
lock
add
hlt
sbb
call
jge
pop
shr
sub
fsts
daa
inc
cld
jbe
test
aam
movsb
mov
sahf
insl
push
xlat
xchg
mov
bound
rcrl
leave
out
add
jb
jo
dec
or
xlat
jae
xchg
decb
jmp
mov
test
xchg
icebp
popf
add
rcr
std
mov
xchg
outsb
fistpll
test
fcmovnb
jbe
pop
inc
test
cmp
rcll
sub
inc
add
pusha
loope
mov
insl
adc
test
test
inc
pop
shl
fmuls
fidivl
insb
ficoms
cmpsb
push
mov
or
push
xlat
jle
add
adc
imul
push
movsb
negl
clc
sbb
sarb
loope
mov
jmp
imul
or
enter
sbb
mov
push
push
adc
adc
jmp
xchg
mov
inc
repz
adc
mov
xor
cmp
xchg
jg
fwait
mov
mull
pop
out
sldt
cwtl
add
xor
pop
adc
pop
inc
push
mov
xchg
xor
mov
or
out
clc
xchg
sub
repz
nop
into
inc
mov
daa
jbe
call
lret
cmp
lea
imul
adc
rol
shl
lea
cmc
cmc
mov
bswap
dec
lea
push
push
shr
call
pushf
push
lea
jb
lea
mov
jmp
lea
jbe
xadd
mov
sbb
neg
bts
add
btc
cmc
bswap
mov
clc
test
add
neg
movzbw
movl
btr
movsbw
btc
test
mov
jmp
stc
jmp
cmp
cmp
xchg
int3
mov
rcrb
xchg
xchg
test
xlat
out
outsl
incl
pop
jmp
mov
repz
cmp
push
loop
rdmsr
rorl
xor
mov
mov
cwtl
hlt
dec
lea
scas
push
mov
pushf
mov
sbb
dec
push
sbbb
cmp
sbb
leave
inc
fidivrl
imul
arpl
fnstsw
or
test
sub
cwtl
jbe
mov
xlat
sbb
mov
sub
mov
sub
gs
sub
outsl
add
pop
aad
pop
and
pushf
out
xor
sub
add
gs
insb
inc
js
arpl
gs
js
add
test
clc
bt
add
clc
cmp
push
call
bt
sub
stc
test
not
test
call
jmp
mov
mov
pushf
call
adc
mov
pushf
pushf
repnz
call
pusha
movl
call
pushl
pushl
popl
push
movb
pushl
ret
shl
mov
ror
cmp
test
shld
mov
dec
not
cmc
lea
mov
lea
lea
mov
pushl
test
cmp
cmp
cmp
call
push
cmc
cmp
pusha
call
mov
shl
lea
call
pop
ret
mov
cmp
sub
sub
nop
enter
lods
js
and
push
and
mov
bound
fcmovne
movsl
sub
lods
movsb
fucomi
pop
cmp
insl
call
lock
add
iret
adc
mov
adc
in
lock
shl
lds
into
and
jl
mov
in
adc
sbb
test
arpl
inc
shrb
icebp
mov
sbb
cmpl
cs
daa
xchg
cmp
sub
call
cmpl
mov
into
aaa
into
scas
cld
sub
dec
dec
aam
mov
dec
idiv
and
loop
je
jae
int
inc
insb
loop
mov
pop
push
clc
std
xchg
in
out
stos
push
sub
iret
out
cwtl
sti
pop
int3
jne
push
imul
xor
popa
xchg
mov
sbb
icebp
dec
aas
pop
push
sub
mov
xchg
pushf
arpl
pusha
mov
lcall
je
outsl
insl
insl
outsl
outsb
inc
outsl
outsb
je
outsl
insb
jae
dec
orb
cmp
adc
push
aas
push
jl
mov
aas
adc
scas
rcrb
sbb
sub
cmp
dec
aas
push
pop
jb
scas
pop
clc
adc
adc
mov
jnp
and
lods
jo
ror
fcomip
fldenv
mov
add
test
push
sbb
ljmp
and
push
push
mov
in
lock
leave
push
iret
sbb
hlt
cmp
inc
lods
lea
pushf
lea
call
jmp
cmp
xor
clc
movw
call
add
cmc
mov
call
mov
stc
repnz
push
mov
pushf
lea
jne
movsbw
movb
movsbw
lahf
lahf
push
setge
push
lea
pusha
pusha
movl
jmp
lea
call
pushf
rcl
clc
add
shld
mov
adc
shl
aas
dec
mov
bt
cmc
cmc
cmp
jmp
movzwl
and
bswap
neg
mov
clc
clc
jmp
pushf
movl
push
movl
pusha
pusha
lea
jmp
pusha
jmp
ss
and
mov
adc
or
adc
and
nop
lcall
xchg
icebp
mov
imulb
lock
cltd
iret
das
sbb
push
enter
push
daa
pushf
insb
mov
add
mov
sub
loopne
inc
scas
inc
hlt
enter
out
lret
push
shll
popa
mov
call
pop
das
adc
cmp
outsb
pop
rorb
dec
push
lods
in
ljmp
jno
ds
and
or
lret
adc
cmpsl
test
test
jno
dec
les
xor
inc
or
lret
xor
inc
sub
movsl
loope
loope
pop
and
daa
sub
enter
mov
pop
sub
sbb
xchg
outsb
dec
sub
or
cmp
call
str
call
xadd
mov
rcr
dec
movsbw
jmp
clc
test
pushf
add
call
jo
mov
pushf
lea
jmp
movsbw
shr
xor
mov
clc
jmp
mov
rcl
mov
sar
btc
add
dec
shl
pop
shr
bts
sar
push
jmp
mov
jmp
inc
inc
dec
xor
cs
insb
add
mov
setb
call
call
jmp
ss
scas
dec
xor
inc
sbb
xor
imul
cld
push
and
sbbl
xor
mov
in
scas
xor
out
adc
and
mov
outsb
idivl
test
cmp
sub
dec
lods
pushf
or
sbb
mov
in
sub
cwtl
pop
sbb
and
xchg
pop
test
out
sub
mov
push
dec
inc
sbb
sbb
pop
cld
pop
jno
pop
rcrl
stos
xor
add
pop
data16
jg
sub
ds
stos
outsb
scas
pop
dec
sub
nop
daa
mov
mov
xchg
cmp
inc
pushf
ja
stc
dec
ficomps
and
imull
lock
mov
fldl
lock
cmc
cmpsl
das
xor
scas
mov
test
movsb
imul
inc
inc
or
cmp
fwait
scas
imull
mov
sub
dec
std
or
mov
adc
mov
adc
bound
cmp
xchg
mov
add
out
ljmp
pop
test
in
xchg
js
cld
dec
ljmp
jge
cmc
sbb
les
popf
pop
mov
test
jle
xlat
jno
jae
popf
dec
lahf
mov
aad
jb
push
ljmp
mov
and
pop
pusha
xchg
pusha
pusha
cmpsb
arpl
push
insb
and
dec
aam
sub
and
jnp
xor
xchg
stos
jne
sbb
mov
hlt
pop
push
mov
pop
out
mov
xchg
dec
adc
pop
ds
leave
lock
call
or
std
daa
int
loopne
and
or
jmp
jbe
test
xor
pop
jnp
daa
inc
jp
add
xchg
add
sbb
bound
fwait
sar
xchg
daa
or
iret
repz
dec
js
jg
mov
dec
xor
divb
inc
cmp
fiadds
aas
sarl
dec
jns
xchg
inc
int
daa
ret
xor
or
xor
shl
lea
jo
lea
push
movl
pusha
pusha
lea
call
pusha
mov
clc
stc
clc
pusha
cmp
jmp
cmpb
pusha
jmp
call
dec
push
push
inc
push
push
cs
insb
add
cmp
xchg
cmp
mov
fwait
outsb
jge
ljmp
hlt
popa
xchg
cmpsl
inc
fiadds
daa
push
jp
lock
stc
popa
and
pop
cmc
test
bound
mov
iret
shl
sti
cmp
push
sub
lea
sub
jle
sub
lock
add
popa
mov
cmp
loope
or
add
ret
inc
and
sub
cmpsb
cmp
xor
imul
loop
bound
std
xchg
lret
lea
call
push
jmp
jmp
pop
imul
imul
xor
lea
lret
popa
jb
pop
sti
aad
mov
es
cmp
push
cmp
add
pop
mov
sub
outsb
mov
push
sub
mov
inc
xchg
aaa
inc
push
fxrstor
or
pop
mov
mov
cmp
rcll
jge
lahf
pop
mov
inc
lret
or
aas
lret
in
and
aad
pop
repnz
imul
out
or
mov
mov
inc
lods
fildl
in
test
and
lods
movsb
lods
ljmp
mov
mov
mov
fwait
cmovle
jns
cmp
inc
pop
out
ds
les
rcrb
or
out
imul
es
pop
lcall
inc
jo
cli
cmpsl
mov
xor
lcall
leave
pushl
lea
movl
movb
push
lea
jmp
out
outsl
das
xchg
cmp
js
int
jae
pop
ret
lods
mov
fs
mov
inc
cmp
cs
mov
xchg
daa
popf
sbb
leave
mov
test
popa
hlt
inc
out
lds
neg
imul
inc
pop
ret
iret
jbe
jp
and
add
test
ja
push
repnz
insl
push
cs
cmp
or
push
in
xor
cmp
enter
pop
pushf
cmp
stos
insl
jp,pt
ror
adc
lods
nop
cmpsl
sbb
sbb
out
movsl
in
inc
aad
mov
xor
outsl
jp
ret
sbb
clc
adc
into
dec
movsl
cmp
cltd
push
scas
xor
popa
gs
shll
add
cltd
cmp
cmp
adc
add
jne
push
xchg
sub
rolb
notl
in
jl
bt
stc
cmc
mov
test
pushf
cmc
add
cmp
test
cmp
test
pushf
pushf
jmp
mov
jmp
movb
repnz
movb
pusha
lea
jno
jne
movsbw
movb
movzbw
mov
push
lea
jmp
sub
movb
shr
lea
add
shld
mov
call
mov
mov
adc
cmp
clc
sub
bt
jmp
and
and
jb
shl
bsf
mov
cmp
clc
cmc
pushf
shl
push
clc
add
call
pusha
lea
jne
pusha
pushf
xor
dec
cwtl
cmp
btc
mov
add
pushf
add
clc
dec
mov
push
test
jmp
push
stos
mov
mov
mov
pushf
movw
push
lea
jmp
das
gs
sub
movb
mov
js
cmc
pop
push
jge
mov
inc
insl
xchg
push
nop
jne
hlt
imul
insb
and
sbb
lcall
push
into
push
out
data16
push
testl
pop
pop
fisubs
lea
sub
ret
leave
pop
fbstp
ljmp
out
xchg
out
mov
stos
mov
lret
mov
push
gs
or
sbb
pop
cmpsl
stos
jl
data16
ja
sbb
adc
lcall
push
addr16
xor
outsl
xlat
repnz
mov
push
adc
push
stos
popf
lods
shrl
data16
dec
clc
add
push
test
mov
add
xlat
imul
cmpsb
mov
fs
call
push
bt
call
mov
lea
jae
bt
cmp
sub
cwtl
lea
jmp
ret
cmpsb
loopne
xchg
cmp
jb
inc
clc
adc
mov
cmp
jno
clts
push
xchg
xor
mov
jo
xchg
mov
adc
push
mov
lret
sbb
imul
adc
xchg
or
mov
add
xchg
push
sub
enter
pusha
pop
inc
mov
jl
sbb
jecxz
aas
or
data16
adc
cmovns
into
sbb
sub
push
inc
in
dec
push
xchg
jnp
mov
test
mov
mov
fldt
xchg
cmp
test
cmpsb
lods
mov
sbb
pop
scas
mov
mov
hlt
hlt
and
icebp
mov
idiv
add
inc
jmp
lods
inc
pop
out
mov
out
fcomps
cmp
fwait
jecxz
mov
sbb
sub
fldt
and
fstps
cmp
mov
out
fs
jg
jecxz
sbb
enter
ret
push
bound
jnp
je
sahf
dec
sbb
adc
xchg
xchg
mov
je
and
lret
jmp
cmp
mov
mov
pushf
push
lea
jmp
jmp
je
stc
sub
neg
adc
or
push
jne
rep
sub
push
mov
dec
sti
lock
adc
cmp
cmpsl
sbb
jno
dec
pop
or
movsb
adc
out
in
pop
orb
pop
jne
imul
mov
add
rcll
cli
jle
jecxz
rcl
push
mov
sbb
cmp
popa
xchg
dec
cs
mov
call
mov
setbe
bswap
mov
not
lea
movsbw
bswap
mov
call
adc
sub
shrb
sahf
lods
mov
loop
sti
xor
ja
mov
test
jmp
xor
repz
out
call
xchg
push
mov
mov
hlt
sti
sar
adc
jno
and
pop
mov
fstps
dec
imul
fnstcw
outsb
popa
cmp
mov
xor
lret
dec
std
adc
subb
adc
bound
loopne
dec
lahf
mov
das
out
es
cld
cmp
shll
ja
lods
mov
xor
out
popa
mov
cmp
out
ret
xor
clts
sub
dec
xchg
fsubl
push
jnp
aaa
in
pop
daa
test
dec
pop
pop
fldenv
mov
or
mov
lods
jg
add
in
xor
out
adc
ret
daa
into
push
cmc
repz
jnp
ja
lret
mov
sbb
sbb
mov
out
mov
mov
push
xor
fisubrs
arpl
xchg
je
stos
rclb
mov
test
fs
ja
call
call
pushf
call
push
pushl
mov
pushf
mov
call
call
mov
push
lea
jmp
push
sub
mov
shr
mov
pusha
call
push
call
mov
pushf
call
push
inc
jmp
movb
cwtl
pusha
bt
bt
pushf
sub
call
movb
call
shld
dec
movsbl
mov
js
stc
pushf
test
add
pushf
lea
jmp
cld
jmp
pushf
test
cmp
add
jmp
push
mov
jmp
aas
mov
xchg
shl
mov
cmc
mov
bt
add
bt
jmp
mov
repz
popl
jmp
call
add
mov
jp
adc
add
icebp
add
pop
add
imul
outsl
imul
jp
sbb
jp
sub
jp
inc
add
fildl
jp
jg
jp
lds
jp
add
add
insl
add
adc
jp
or
jp
aaa
add
icebp
add
ret
add
insb
add
push
add
inc
add
jmp
add
aam
jp
add
add
imul
push
add
xchg
add
xchg
add
aam
jp
push
jp
das
add
or
jp
mov
add
dec
add
xchg
add
int3
add
flds
jp
dec
add
jmp
add
or
jp
push
add
icebp
add
inc
add
dec
add
aam
jp
dec
add
cmc
add
das
add
sbb
jp
push
add
push
add
outsl
add
sub
jp
add
aam
jp
outsb
add
pop
add
popa
add
mov
jp
and
jp
pop
add
xor
jp
inc
add
lds
jp
cmc
add
xor
jp
inc
add
outsb
add
or
jp
xor
jp
addb
push
out
add
cmc
add
xor
jp
mov
jp
mov
jp
sbb
jp
xor
jp
sub
add
imul
insl
xor
jp
mov
jp
popf
add
popa
add
xor
jp
mov
jp
inc
add
aam
jp
xor
jp
xchg
add
cmc
add
mov
jp
xor
jp
pop
add
insl
add
pop
add
xor
jp
cmp
add
mov
jp
xor
jp
das
add
mov
jp
dec
add
xor
jp
icebp
add
or
jp
insl
add
xor
jp
sub
jp
adc
jp
mov
add
xchg
add
pop
add
or
jp
xor
jp
push
jp
sub
add
xor
jp
push
jp
and
jp
fildl
jp
and
jp
or
jp
adc
jp
ret
add
insl
add
xchg
add
xchg
add
add
cmp
add
xchg
add
int3
add
imul
je
add
inc
add
out
add
lret
add
jmp
add
popa
add
aaa
add
imul
pop
and
jp
mov
jp
pop
add
imul
jp
dec
add
or
jp
flds
jp
insb
add
mov
jp
pop
add
mov
jp
or
jp
inc
add
aam
jp
popa
add
add
inc
add
pop
add
sbb
jp
aam
jp
cmp
add
jno
jp
popf
add
xchg
add
das
add
and
jp
addb
push
push
jp
aam
jp
aam
jp
push
jp
insl
add
jmp
add
inc
add
imul
inc
add
or
jp
adc
jp
mov
add
insl
add
outsb
add
inc
add
adc
add
add
lret
add
adc
add
lds
jp
xchg
add
adc
add
or
jp
push
jp
adc
add
cmp
add
adc
add
jg
jp
inc
add
adc
add
jmp
add
adc
add
dec
add
and
jp
adc
add
mov
jp
push
jp
adc
add
insb
add
sub
jp
adc
add
out
add
out
add
adc
add
xchg
add
add
add
icebp
add
das
add
imul
jp
imul
gs
add
mov
add
cmc
add
push
popl
movb
pushl
popl
pushf
movb
lea
jmp
pushl
popl
mov
pushf
push
movb
lea
jmp
ror
cmc
and
mov
pusha
jmp
sub
jmp
mov
movl
call
push
mov
call
pushf
mov
mov
jmp
pushf
jmp
call
decl
jmp
lea
je
push
push
mov
mov
pusha
pushl
lea
jmp
call
inc
clc
and
btr
pop
and
xor
and
cmc
bsf
mov
pushf
add
jmp
sub
jmp
jmp
call
shl
test
stc
cmc
cmp
shr
call
ror
pushf
rcl
mov
cmp
sub
stc
pushf
clc
add
movb
pushf
popl
mov
pusha
jmp
mov
jmp
pushf
setl
not
mov
movb
pusha
lea
jmp
push
call
rol
cmp
bt
movb
neg
push
push
stc
push
add
call
or
not
mov
stc
cmp
adc
clc
mov
stc
push
pusha
add
pushf
push
call
and
push
call
mov
mov
pushl
movb
push
repz
popl
call
jmp
pushl
mov
mov
lea
jmp
lea
jle
pusha
movl
pushl
pushf
jmp
call
mov
push
pushl
popl
push
movb
lea
jmp
pushf
add
pushf
pusha
pushf
stc
sub
cmp
clc
not
movb
clc
stc
sub
cmp
test
add
clc
cmp
cwtl
push
bt
sub
js
sub
jo
cmc
mov
cmc
push
cmc
cmc
sub
pusha
pusha
lea
jmp
mov
rcl
rcl
bts
mov
stc
add
jmp
pusha
pushl
movl
pushf
mov
pushf
call
pushl
mov
pushf
lea
jl
pushf
mov
pusha
mov
call
not
stc
not
cmc
and
call
call
jmp
jmp
movzbw
rol
and
clc
sub
dec
or
xor
pusha
or
mov
jmp
movb
pushf
repz
popl
call
pushf
jmp
push
mov
call
shl
pusha
movzbl
cmc
test
test
pushl
add
bt
test
sub
clc
call
call
pushf
pushf
pushl
call
pushf
shl
btr
mov
mov
and
setno
cmp
add
pusha
not
jmp
mov
shld
jmp
clc
sub
jmp
jmp
pushf
jmp
movl
pushl
popl
push
push
pushf
lea
jmp
setb
adc
mov
pushf
xor
cmc
rol
stc
jmp
mov
pusha
push
movb
push
lea
jmp
pushf
pushl
mov
movw
movb
movb
pushl
ret
pushf
call
pushl
movw
jmp
xchg
pushf
movb
mov
movl
jmp
push
mov
mov
call
and
shl
ja
mov
cmc
and
mov
call
pushf
mov
mov
lea
jmp
mov
pushl
pushl
popl
mov
movb
pushf
mov
lea
jmp
cmc
jmp
clc
stc
not
pushf
cmc
rol
lea
jge
clc
pushf
xor
bt
sub
pushl
cmc
movb
sub
call
clc
shr
jmp
add
pusha
mov
pushl
lea
jmp
mov
call
call
mov
pusha
mov
pushl
popl
movb
lea
jmp
pushf
mov
pusha
push
call
call
push
pushl
pushl
popl
movw
pushf
pushf
pushl
lea
jmp
mov
push
jmp
pushl
jmp
pushf
pusha
mov
pushf
pushf
mov
pushf
mov
pushl
pushl
popl
pushf
lea
jmp
bt
movzbw
and
rcr
ror
mov
call
jmp
call
mov
mov
mov
pushf
pushl
popl
pushf
pushf
mov
movw
lea
jmp
mov
jmp
pushf
pushf
pushl
mov
pushf
repz
popl
jmp
mov
mov
mov
pushf
call
movw
xor
movb
xor
bt
push
test
cbtw
stc
call
setg
mov
lea
lea
mov
movw
pushl
ret
add
stc
inc
mov
stc
pushf
test
xor
stc
pusha
not
stc
call
xor
rol
rol
movzbw
not
call
pushf
pushf
mov
lea
ja
push
pusha
pusha
pushl
popl
pushl
push
push
lea
jmp
pushf
pushf
mov
push
mov
pushf
movl
lea
jmp
pushf
popl
call
ror
mov
shl
rcl
and
mov
test
sub
jmp
movb
jmp
or
mov
bt
stc
add
push
pushf
push
pusha
mov
pushl
call
pushl
mov
call
push
setno
mov
mov
lea
mov
pushf
call
call
popl
pusha
push
lea
jmp
cmc
mov
mov
mov
test
or
mov
lea
jb
pusha
lea
je
push
bt
push
stc
xor
cmp
pusha
cmc
xchg
bt
mov
pushl
movb
call
movb
pushl
popl
push
push
lea
jmp
mov
pushf
mov
pushf
mov
push
pushl
popl
push
push
push
pushf
lea
jmp
cmc
sub
movw
jmp
call
movw
call
pushf
popl
push
push
pushl
popl
push
pushl
lea
jmp
clc
xor
test
pusha
push
mov
cmp
bt
push
bt
sub
pushf
jmp
shrd
xadd
rcl
clc
mov
clc
pusha
mov
push
pusha
clc
sub
bt
jmp
push
movb
movw
mov
call
bt
jmp
pushl
xchg
call
dec
mov
btc
mov
rcl
xchg
sbb
stc
mov
mov
rcr
mov
jmp
mov
mov
jmp
lea
jne
push
mov
mov
pusha
pusha
mov
lea
jmp
rol
rol
mov
rcr
jmp
dec
inc
sub
sbb
and
rcl
bts
pushf
adc
mov
test
cmp
cmp
clc
sub
push
jmp
mov
call
add
pusha
mov
push
push
lea
jmp
jmp
cmc
lea
jmp
call
push
pushf
movl
jmp
call
call
push
mov
mov
pushl
lea
jmp
movl
jmp
movb
mov
mov
mov
push
jmp
pushl
popl
pushf
mov
pushf
pushf
lea
jmp
add
mov
lea
jmp
mov
pushl
jmp
add
push
push
push
jmp
movw
pushf
pushf
popl
push
pushl
popl
pushf
pushl
lea
jmp
pushl
call
call
bt
sub
push
push
lea
jmp
mov
jmp
call
pushf
pushf
movw
mov
pushf
pushf
call
push
jbe
mov
push
pusha
bswap
repz
popl
or
lea
bswap
clc
mov
neg
shr
xor
mov
btc
shl
mov
bsr
mov
ror
pusha
not
and
pushl
popl
sub
call
mov
jmp
pushf
lea
cpuid
call
repz
popl
call
jmp
pushl
popl
push
mov
pushf
movb
lea
jmp
pushf
mov
mov
call
clc
bt
xor
mov
clc
rol
jmp
mov
mov
movb
movb
lea
jmp
push
mov
pushf
jmp
mov
call
mov
call
js
mov
test
sub
cmp
shl
push
jmp
call
jmp
jmp
pushl
lea
jne
pusha
call
push
pushf
mov
pushl
mov
pushf
push
movb
mov
movb
jmp
inc
pusha
lea
jmp
aas
sets
daa
sar
mov
shld
neg
mov
bt
add
push
mov
pushf
push
lea
jmp
call
mov
push
push
pushl
popl
push
movb
movb
mov
lea
jmp
mov
pushf
mov
jmp
pusha
std
xchg
movzbw
not
pushl
pop
mov
call
mov
call
jmp
pushf
pushf
mov
pusha
pushf
movw
push
pushf
popl
push
pushf
push
pushl
popl
pushl
pushf
movb
mov
lea
jmp
pushf
popl
jmp
call
pushf
call
pushl
jmp
jmp
sub
clc
btc
mov
jmp
pushf
push
pushl
mov
pushl
pushf
jmp
pushf
pushl
popl
push
push
lea
jmp
mov
pushl
pushf
lea
jmp
call
bt
pushf
pushl
popl
jmp
movl
pushl
popl
movb
push
push
pushf
lea
jmp
movw
pushl
popl
pusha
lea
jmp
jmp
jmp
jmp
bts
mov
inc
shrd
mov
shl
add
adc
btc
cmp
not
sub
bswap
pusha
pusha
inc
rcr
rol
rol
rol
shld
neg
rol
shl
movb
add
dec
mov
push
cmc
add
call
pushf
call
pushl
pushl
popl
pushf
mov
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
lea
ja
pusha
mov
mov
pusha
pushf
pushf
lea
jmp
mov
lea
jne
pushf
repz
popl
push
jmp
pushf
pushf
movw
mov
jmp
sub
jge
or
pushf
cmp
pushl
xor
pusha
movw
call
movw
call
lea
jne
xor
stc
push
call
shrd
sbb
xor
not
push
bt
rol
lea
sbb
sub
adc
pushf
xor
cmc
shl
xor
shld
clc
test
sbb
movzbl
call
mov
push
lea
jmp
movw
jmp
mov
pusha
mov
jmp
mov
push
mov
pushf
pusha
pushf
pushf
mov
call
mov
pushf
pushl
pushf
lea
jmp
repz
popl
pushf
pushl
pushl
movl
mov
pushf
call
mov
pusha
push
push
lea
jmp
mov
pushf
mov
push
call
pushf
pushf
mov
jmp
movb
lea
je
push
xor
pushf
cmc
mov
clc
xchg
call
jmp
not
mov
push
xor
pushf
stc
stc
rol
clc
sub
bt
sub
call
mov
pusha
push
movw
lea
jmp
push
pusha
mov
push
pushl
mov
jmp
mov
pusha
push
pushf
lea
pushl
pushf
call
not
seto
jmp
push
movb
mov
pushl
mov
call
pusha
test
stc
cmp
xor
bt
sub
stc
movb
test
sub
pushf
call
push
decl
jmp
lea
mov
bswap
pushf
pushf
popl
movzbw
std
push
std
mov
pusha
std
cld
lea
jmp
repz
popl
mov
jmp
mov
jmp
mov
pushf
mov
jmp
push
mov
call
lea
movzbl
bswap
not
lea
push
mov
jmp
mov
movb
lea
jne
call
pushf
movl
mov
mov
pushf
pushl
lea
jmp
movb
cmp
push
add
pushf
pushf
pushf
lea
jmp
pusha
movw
pushf
mov
pushf
jmp
mov
push
pushf
jmp
call
pushf
jmp
bswap
mov
jmp
jmp
call
mov
push
pushf
movb
mov
pusha
repz
popl
jmp
jmp
pushf
adc
bsr
mov
bswap
cmp
shrd
bswap
mov
pushl
pushf
jmp
call
pushl
popl
pusha
movb
pushl
lea
jmp
mov
pushf
stc
test
add
jmp
clc
stc
add
call
mov
push
mov
mov
call
push
call
lea
jle
push
push
jmp
pushf
popl
lea
jp
pusha
pushl
popl
mov
lea
jmp
bswap
call
jmp
mov
jmp
push
add
stc
call
test
adc
mov
test
cmc
jmp
pushf
popl
pusha
jmp
xchg
test
mov
ror
lea
rol
mov
pushf
test
add
mov
jmp
mov
mov
call
pushf
call
cmp
add
test
cmp
pusha
pushl
popf
pushf
pushf
lea
jmp
mov
mov
movzbw
mov
call
push
jmp
mov
lea
jne
clc
test
sub
pushf
pusha
call
test
test
test
add
pushf
pushf
pushf
lea
jmp
push
mov
call
mov
mov
mov
movw
mov
pushl
ret
mov
pushl
pushf
pushl
ret
pushf
pushf
pusha
inc
movb
cmc
xor
cmp
clc
cmp
cmc
mov
mov
clc
stc
sub
jmp
pushf
jmp
inc
lea
lea
mov
rol
mov
cmc
add
call
pusha
mov
pushf
pushf
call
pushf
mov
cmc
sub
pusha
push
jmp
mov
push
pusha
pushf
movw
pushl
ret
not
not
pushf
mov
call
lea
pusha
pusha
jmp
call
mov
repz
popl
push
mov
push
mov
call
push
mov
pusha
push
mov
lea
jmp
push
movl
pushf
mov
movb
pushl
pushl
ret
neg
and
neg
mov
sets
btr
mov
pushf
test
jmp
bswap
mov
push
pushl
pushf
movl
mov
jmp
lea
jl
pushl
pusha
movw
mov
pusha
lea
jmp
shl
mov
add
bswap
mov
mov
jmp
movzbw
call
mov
btc
sub
not
bswap
call
call
push
call
push
call
pushf
popl
call
call
jmp
aas
shr
test
rcr
notl
add
bsf
mov
cmc
cmc
pushf
sub
clc
and
pusha
pushf
popl
call
jmp
rcl
bswap
mov
setno
bswap
sub
rol
push
not
shrd
mov
shl
rcr
lea
btr
movb
sub
bsf
shl
inc
lea
mov
bt
inc
mov
shld
add
push
and
rcl
mov
btc
add
clc
rol
not
shld
movzbw
add
cmc
rol
mov
ror
sub
cmc
lea
shld
add
setle
pop
inc
not
pusha
jmp
pushf
mov
mov
movw
mov
lea
jmp
jmp
sub
pusha
cmpl
pushf
push
pushf
mov
call
xchg
call
pushl
popl
pushf
mov
mov
pushl
lea
jmp
stc
sub
clc
shl
pushl
pushf
pusha
mov
pushf
pushf
pushf
popl
pushl
movw
jmp
call
mov
pushf
repz
popl
call
movsbw
mov
not
jmp
mov
call
mov
pushf
pushf
lea
jmp
mov
pushf
movb
pushf
pushl
ret
test
popf
pusha
movb
lea
jmp
mov
mov
call
push
shl
aad
mov
shl
shl
rcr
not
mov
jmp
jmp
call
jmp
call
pusha
call
mov
pushf
pushl
call
lea
jmp
jmp
pushf
movw
mov
push
mov
mov
lea
jmp
pushf
call
mov
push
pushl
popl
pushf
lea
jmp
jmp
mov
mov
pushf
call
stc
xchg
pusha
xadd
mov
neg
dec
sub
jmp
pusha
call
push
pushf
mov
call
rcr
dec
not
rcl
mov
adc
ror
jmp
movsbl
lea
mov
jmp
pushl
popl
pushf
lea
jmp
mov
mov
call
call
pusha
ror
mov
call
mov
push
pushf
mov
pushf
pushf
pushf
call
rol
movb
clc
push
pushf
sub
jmp
mov
mov
call
sub
cmc
aaa
bts
mov
pusha
shl
stc
rol
mov
stc
test
cmp
add
call
sub
pushf
pusha
cmc
sub
test
mov
xor
cmc
stc
bt
clc
xor
pushf
sub
jmp
inc
pushf
mov
jmp
jmp
bt
mov
not
mov
test
push
sub
push
bt
pushf
shr
call
push
push
pusha
pushf
popl
mov
pushl
popl
movw
movw
pushf
pushf
lea
jmp
pusha
mov
pushl
pushl
popl
pushl
lea
jmp
mov
pusha
movb
movl
pushl
mov
push
call
pushl
mov
pushf
mov
push
pusha
pushl
mov
lea
jmp
mov
mov
call
sub
dec
mov
stc
stc
pushf
pusha
sub
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
lea
jmp
jmp
bswap
dec
dec
pusha
not
push
setno
call
pusha
lea
js
push
pusha
mov
pushf
pusha
jmp
pushl
mov
mov
mov
push
mov
pushf
jmp
pusha
mov
pushl
lea
jmp
jmp
jmp
pusha
sub
jmp
pushf
mov
movw
lea
jmp
pushf
push
pusha
repz
popl
jmp
mov
pushf
lea
jmp
mov
jmp
pushl
popl
mov
mov
movw
mov
lea
jmp
bswap
call
mov
pusha
mov
pusha
pushf
mov
jmp
mov
push
pushf
call
movb
pusha
mov
pushl
pushf
mov
jmp
mov
push
mov
pushf
call
call
jmp
call
mov
mov
lea
jmp
shr
call
mov
pushf
push
call
shl
jmp
sub
call
repz
popl
push
mov
call
pusha
pushl
popl
pushf
mov
push
pushf
lea
jmp
jmp
sbb
clc
cmc
shl
mov
stc
add
clc
pushf
sub
pusha
cmc
pusha
stc
not
pushf
pushf
cmc
sub
stc
jmp
bswap
call
push
mov
pusha
call
jmp
test
mov
jmp
not
dec
pushf
inc
dec
dec
lea
dec
inc
not
lea
movsbl
lea
jge
inc
bsf
call
movb
repz
popl
mov
call
pushf
mov
pusha
call
btc
movsbl
mov
stc
bsf
inc
mov
cmp
cmp
cmp
bt
add
pushf
pushf
mov
push
lea
jmp
mov
call
pushf
push
movb
repz
popl
jmp
call
pusha
movw
mov
pushf
movb
push
mov
call
mov
call
jmp
mov
call
add
add
dec
bt
ror
lea
clc
cmp
push
pushf
lea
ja
aam
mov
movzbl
shrd
lea
aaa
sub
bswap
or
pusha
bt
lea
bsr
adc
lea
bsr
and
btc
call
mov
pushl
pushf
pushf
pushf
pushl
ret
bt
call
rcl
clc
mov
shl
add
pusha
shrd
bt
xor
lea
call
jmp
rdtsc
pushf
sub
pushf
pushf
mov
call
mov
pushl
lea
jmp
bt
test
cmc
mov
pushf
call
mov
call
rcl
mov
clc
cmc
cmc
add
push
lea
jmp
pushf
jmp
mov
clc
movb
cmc
and
pushf
pushf
cmc
cmp
push
lea
jne
xor
pushf
bt
bsf
xorb
lea
mov
pop
pushf
pusha
movl
pusha
lea
jmp
call
mov
jmp
push
call
mov
jmp
pushl
movb
push
pushf
popl
pusha
pushf
call
pushl
popl
pushf
push
mov
movb
lea
jmp
std
cltd
xchg
pusha
mov
btc
pusha
bsf
movzbw
mov
std
mov
or
xchg
mov
sub
mov
cmc
push
shl
rcl
mov
not
bsr
pop
mov
xchg
shl
pushl
popf
call
mov
pushf
jmp
cmc
not
clc
pushf
not
test
bt
sub
stc
clc
call
movl
push
pushf
rep
xor
inc
pushf
shl
mov
bswap
not
sar
sar
mov
clc
stc
cld
sub
jnp
popf
push
lea
jmp
pusha
pushl
mov
pushl
movw
push
jmp
mov
pusha
pusha
jmp
call
pusha
pushf
push
mov
mov
push
push
mov
movb
call
push
jmp
mov
movl
repz
popl
pushf
mov
mov
mov
call
mov
movb
push
pushl
call
jmp
pushf
movb
mov
mov
jmp
jmp
inc
jmp
mov
pushl
push
movb
movb
lea
jmp
call
call
pushl
popl
mov
pushl
movb
pushf
lea
jmp
mov
pushf
movl
mov
movb
pushf
mov
pushf
lea
jmp
adc
or
cmc
movl
xchg
lea
mov
rol
call
mov
push
mov
lea
jge
repz
jmp
pushf
popl
pushf
pushl
popl
pushf
pusha
push
lea
jmp
push
mov
pushf
mov
lea
jmp
mov
pusha
push
pushf
pushf
lea
jmp
sub
pushf
cmc
add
test
mov
call
call
pusha
mov
jmp
inc
adc
mov
pusha
not
sbb
dec
mov
bt
cmp
clc
call
push
bswap
mov
push
bswap
lea
not
mov
mov
divl
movb
pushf
mov
lea
jno
pusha
push
pusha
mov
pushf
pushf
push
pushf
popl
call
pushf
movb
bswap
call
mov
call
jmp
daa
rcl
movzww
call
mov
jmp
bt
mov
xor
push
shl
add
call
jmp
call
mov
pushf
mov
pushf
mov
pushl
push
movb
mov
jmp
mov
movw
movb
call
call
jmp
mov
mov
pushf
mov
pushf
mov
call
pusha
mov
movb
pushf
pushf
lea
jmp
pusha
shrd
mov
pushl
mov
jmp
call
movw
mov
mov
pushl
popl
pushl
movw
mov
movb
lea
jmp
jmp
push
jmp
mov
not
push
movsbl
jmp
cmp
bt
movb
mov
test
bt
stc
sub
jmp
test
mov
jmp
bswap
mov
mov
jmp
push
or
stc
cmp
bt
test
xor
pushf
call
pusha
mov
call
jmp
lea
repz
adc
push
bsf
mov
btc
push
btc
sub
xor
push
and
clc
sub
push
shld
pushl
xchg
push
rol
rcr
stc
mov
lea
test
rol
bswap
bts
rcr
rol
sar
sub
xadd
mov
movsbw
not
dec
mov
bswap
sbb
sub
add
sub
movzbw
bswap
adc
dec
mov
bt
xor
sar
mov
stc
rol
bt
add
xor
mov
clc
pusha
sub
movsbw
add
not
rol
pusha
add
pushf
cmc
movzbw
ror
inc
shrd
add
setno
movsbw
inc
movsbw
movzbl
setns
bswap
bswap
not
mov
pushl
pushf
pushf
jmp
pushf
lea
jns
inc
call
jmp
push
mov
pushf
pushf
popl
pushf
pushf
mov
pushl
popl
mov
lea
jmp
mov
jmp
pusha
mov
push
call
xor
cwtl
mov
pushf
bt
call
jmp
mov
clc
test
pusha
sub
mov
lea
jmp
sub
pushf
push
lea
jbe
jne
pusha
clc
sub
lea
jl
pusha
push
movl
xchg
jmp
pushl
mov
mov
push
mov
call
mov
pushf
pushf
pusha
pushf
lea
jmp
pusha
push
mov
push
mov
pusha
jmp
sub
pushf
stc
push
bt
shl
jmp
call
jmp
call
mov
mov
push
push
lea
jmp
pushf
jmp
pushf
mov
movb
call
pushl
popl
mov
mov
lea
jmp
mov
pushf
pushf
pushl
push
lea
jmp
pusha
mov
pushf
pushf
push
lea
jmp
mov
mov
push
pushf
lea
jmp
jmp
jmp
mov
movb
pushf
jmp
