add
add
add
add
inc
or
adcb
addb
add
nop
add
addb
add
addb
adcb
add
rolb
addb
add
adc
add
or
add
sbb
add
xor
add
inc
pop
add
pop
pop
add
push
add
addb
add
add
call
pop
add
mov
add
or
add
out
add
cli
pop
add
or
add
and
add
xor
add
add
add
or
add
add
add
xor
push
add
add
add
add
add
add
add
add
add
or
add
add
add
aad
add
add
add
add
add
add
mov
xor
push
push
add
or
add
in
xor
or
add
add
add
add
add
stc
xor
popa
sbb
add
add
add
add
add
add
add
xor
push
or
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
xor
orl
add
add
add
add
add
add
enter
xor
add
add
add
add
add
pop
xor
inc
pop
add
or
add
add
add
xor
popf
or
add
add
add
add
add
add
add
insb
xor
movsb
pop
add
or
add
add
add
add
or
add
add
sarb
add
add
add
add
add
add
add
add
or
add
faddl
test
add
add
or
add
add
clc
add
addb
add
and
addb
add
dec
add
addb
add
add
cwtl
add
addb
add
rolb
pop
add
add
add
orb
add
adc
add
cmp
add
pusha
add
add
mov
add
or
add
add
add
mov
add
add
add
or
add
add
add
cmp
sub
add
add
add
add
add
add
cmp
cmp
test
add
or
add
inc
cmp
call
add
add
add
add
inc
cmp
test
add
or
add
add
add
add
add
add
add
add
add
cmp
enter
add
add
or
add
add
cmp
mov
add
or
add
add
insb
outsb
cmp
sub
add
or
add
add
xchg
outsl
cmp
push
add
add
add
add
je
add
add
add
add
add
add
or
add
xor
add
pop
push
add
add
add
or
add
add
cmp
cli
add
add
add
add
add
add
push
add
pusha
jl
add
add
add
add
add
add
add
add
pop
cmpb
lret
add
add
add
add
add
add
sub
add
leave
add
add
add
add
add
add
test
add
add
add
add
add
push
add
add
add
inc
outsl
insl
add
add
or
add
push
add
push
fadds
rolb
add
add
push
add
inc
add
add
dec
add
pop
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
add
pop
add
dec
add
push
add
inc
add
dec
add
add
dec
add
add
inc
add
dec
add
add
inc
add
add
inc
add
dec
add
add
dec
add
push
add
push
add
dec
add
dec
add
or
dec
add
push
add
push
add
add
dec
add
or
dec
add
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
dec
add
or
dec
add
inc
add
dec
add
dec
add
or
dec
add
push
add
dec
add
push
add
inc
add
dec
add
add
inc
add
push
add
dec
add
dec
add
or
push
add
inc
add
dec
add
dec
add
or
push
add
push
add
inc
add
dec
add
dec
add
or
push
add
push
add
dec
add
dec
add
or
push
add
inc
add
dec
add
dec
add
pop
add
add
inc
add
add
rolb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
pop
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
imul
add
add
jno
jne
imul
push
add
data16
add
jb
add
add
add
imul
add
add
push
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
dec
add
add
add
add
add
add
add
add
jb
popa
add
imul
add
add
add
add
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
inc
add
aaa
add
add
inc
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
jo
insb
add
and
push
add
jne
imul
push
add
data16
add
jb
add
add
add
imul
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
inc
add
add
add
inc
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
insl
add
outsb
add
add
data16
add
outsb
add
jo
imul
je
imul
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
outsb
add
jne
popa
add
add
add
jne
imul
add
inc
add
add
imul
add
sub
add
add
jb
jae
imul
push
add
jo
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
inc
add
add
add
add
xor
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
faddl
add
movsb
push
add
or
add
insb
pop
add
rolb
add
xor
add
cwtl
or
add
or
add
add
les
add
sub
add
mov
add
lock
add
add
or
add
or
add
add
lods
or
add
je
add
fmuls
add
cmp
add
mov
adc
add
add
int3
adc
add
adc
add
add
pop
adc
add
adc
add
add
mov
add
in
adc
add
add
mov
add
sbb
add
loopne
add
inc
push
add
test
add
or
add
jo
add
aam
add
cmp
add
pushf
sbb
add
sbb
add
add
sbb
add
add
sub
add
decl
add
add
add
add
decl
add
add
add
sbb
add
decl
add
add
incl
add
add
decl
add
add
add
decl
add
add
sbb
add
add
decl
add
add
add
decl
add
add
add
decl
add
add
mov
add
add
decl
add
add
xchg
add
enter
decl
add
add
incl
add
add
decl
add
add
add
decl
add
add
add
and
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
add
push
cwtl
add
add
add
dec
add
add
add
add
adc
add
nop
add
add
adc
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
fcompl
add
mov
add
add
add
add
add
add
adc
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
subb
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
cmp
add
incl
add
add
add
sub
add
add
or
add
add
pushl
add
adc
add
addb
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
add
add
call
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
push
add
add
add
add
sbb
add
add
add
add
add
sbb
add
and
add
rclb
add
add
add
add
xchg
add
add
incl
add
add
add
add
add
add
add
add
pushl
pop
add
add
add
add
add
add
add
or
add
cmp
add
rclb
add
add
add
add
lods
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
or
fdivs
add
or
add
add
add
or
add
add
add
rclb
add
add
mov
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
or
push
mov
add
xor
add
add
add
add
add
add
add
push
adc
add
sldt
add
add
rolb
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
or
and
add
addb
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
jmp
and
add
mov
add
in
add
add
or
incl
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
pushl
or
jl
add
mov
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
incl
add
add
add
sub
add
add
or
add
add
pushl
or
add
sub
add
adc
add
add
add
add
add
add
mov
add
rclb
add
add
add
add
sbb
add
incl
add
add
add
sub
add
add
or
add
add
pushl
push
add
lret
rolb
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
sub
add
incl
add
add
add
adc
add
add
pushl
sldt
lret
add
add
add
add
add
add
add
or
add
loopne
add
rclb
add
adc
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
adc
je
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
adc
add
adc
add
add
add
add
incl
add
add
or
add
add
jmp
and
add
rolb
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
pop
add
add
incl
add
add
add
add
add
add
pop
add
add
add
jmp
and
add
add
mov
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
jmp
and
add
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
pushl
adc
enter
add
add
enter
add
add
add
add
and
add
sub
add
rclb
add
add
add
add
jo
add
incl
add
add
add
add
add
add
add
add
pushl
adc
add
add
add
add
add
add
add
push
add
add
add
rclb
add
push
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
add
jmp
and
add
add
add
pop
add
add
add
add
incl
add
add
and
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
jmp
and
add
push
add
pushf
add
add
add
add
incl
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
pushl
sbb
push
loope
add
add
add
add
add
add
add
add
add
add
add
add
rclb
add
add
add
add
xchg
add
add
incl
add
add
add
add
add
or
add
add
pushl
sbb
push
loop
add
add
add
add
add
add
add
or
add
jo
add
rclb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
sbb
xor
add
add
add
add
add
add
add
adc
add
mov
add
rclb
add
xor
add
add
add
add
add
add
incl
add
add
add
sub
add
add
or
add
add
pushl
sbb
and
add
add
add
add
add
add
add
adc
add
mov
adc
add
add
add
add
rolb
add
incl
add
add
add
add
add
add
add
add
add
pushl
sbb
add
add
mov
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
sbb
add
or
add
pop
add
add
add
add
add
sbb
add
rolb
add
rclb
add
add
add
add
or
add
incl
add
add
add
add
pop
add
add
add
pushl
push
add
and
add
add
add
add
add
add
add
call
adc
add
add
and
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
pop
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
xor
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
and
int3
incl
add
sub
add
add
add
add
add
add
dec
add
add
add
add
adc
add
inc
add
add
add
dec
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
and
sbb
add
add
add
lock
add
add
add
add
add
add
add
add
add
adc
add
add
pusha
add
add
incl
add
add
add
add
add
add
add
add
add
pushl
and
loopne
add
add
add
test
add
add
add
add
add
adc
add
dec
add
add
adc
add
add
jo
add
incl
add
add
add
add
add
add
add
add
add
pushl
and
or
add
add
call
add
add
add
add
add
add
add
rclb
add
add
addb
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
and
pop
adc
add
cmp
add
add
add
add
add
sldt
add
add
rclb
add
push
add
add
add
xchg
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
and
add
adc
add
add
add
add
add
add
cmp
add
nop
add
add
adc
add
push
add
add
add
movsb
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
add
addb
add
add
add
add
add
add
or
add
test
add
rclb
add
add
add
add
mov
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
daa
add
add
dec
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
fadds
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
sub
call
add
add
incl
add
add
add
add
adc
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
pushl
sub
call
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
incl
add
inc
push
add
add
add
add
add
pushl
sub
fsubl
add
push
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
incl
add
inc
push
add
add
add
add
add
pushl
sub
shlb
add
inc
add
add
add
add
add
add
add
add
add
and
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
add
pushl
sub
xchg
daa
add
mov
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
add
add
add
pushl
sub
add
add
dec
add
add
add
add
add
add
add
add
add
rclb
add
pop
add
add
add
inc
add
add
incl
add
inc
push
add
add
add
add
add
pushl
add
add
inc
add
add
add
add
add
add
add
add
add
push
adc
add
pop
add
add
add
push
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
das
add
sub
add
add
adc
add
add
add
add
add
add
add
addb
rclb
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
xor
test
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
xchg
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
xor
lock
add
add
add
add
add
add
add
add
add
adc
add
popa
add
add
add
mov
add
incl
add
add
add
rclb
add
add
add
pushl
xor
push
sub
add
add
add
add
add
add
add
add
add
add
add
adc
add
popa
add
add
add
rolb
add
incl
add
add
add
rclb
add
add
add
pushl
xor
mov
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
lock
add
incl
add
add
add
rclb
add
add
add
pushl
xor
sbb
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
xor
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sub
add
incl
add
add
add
rclb
add
add
add
pushl
add
add
nop
add
add
add
add
add
add
add
add
add
add
pusha
bound
add
add
add
add
incl
add
add
add
rclb
add
add
add
pushl
aaa
add
add
mov
add
add
add
add
add
add
add
add
add
rclb
add
add
add
add
incl
add
add
add
rclb
add
add
add
pushl
cmp
fsubrl
add
nop
add
add
add
add
add
add
add
add
add
rclb
add
add
js
add
incl
add
add
add
rclb
add
add
add
pushl
cmp
inc
add
nop
add
add
add
add
add
add
add
add
add
rclb
add
bound
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
cmp
movsb
add
mov
add
add
add
add
add
add
add
add
adc
add
arpl
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
cmp
or
add
inc
add
add
add
add
add
add
add
add
add
mov
adc
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
cmp
mov
add
mov
add
add
add
add
add
add
add
add
adc
add
arpl
add
add
add
add
add
incl
add
add
add
or
add
add
or
add
add
pushl
cmp
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
add
add
incl
add
add
add
or
add
add
or
add
add
pushl
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xor
add
add
add
incl
add
add
add
or
add
add
or
add
add
pushl
aas
add
xor
add
add
add
add
add
add
add
push
add
rclb
add
add
add
add
add
incl
add
add
add
or
add
add
or
add
add
pushl
inc
add
add
add
add
add
add
add
add
add
add
push
add
rclb
add
add
add
add
js
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
inc
add
add
add
add
add
add
add
add
add
add
xor
add
rclb
add
add
add
add
mov
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
inc
add
xor
add
or
add
push
add
add
add
add
add
sbb
add
dec
push
add
rclb
add
add
add
add
lods
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
push
add
lock
add
add
add
push
add
fadds
add
clc
add
add
add
call
add
add
clc
add
add
decl
add
sbb
add
cmp
add
add
cwtl
add
add
add
add
mov
add
add
add
add
rolb
add
add
js
add
pop
adc
inc
test
sub
jmp
ja
jl
rcll
mov
ja
jmp
jmp
ja
jl
rcll
mov
ja
jmp
jmp
fidivrs
adc
ja
jmp
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
ljmp
cs
mov
cmp
add
add
inc
into
bnd
jae
in
cmpb
pop
push
add
add
call
jno
inc
pop
out
mov
cmpsb
inc
add
add
fiadds
ficoms
adc
inc
add
sub
add
stc
xor
lods
sahf
adc
jne
lahf
enter
add
add
jmp
rorl
adc
xor
test
sub
xchg
hlt
add
add
incl
pop
inc
gs
jnp
dec
lods
clc
fdivr
mov
add
add
pushl
mov
mov
xchg
pop
sahf
es
add
add
out
outsl
cmpsl
test
sub
add
and
add
out
or
push
or
pop
inc
mov
push
add
out
push
clc
dec
lods
push
push
jmp
call
add
add
arpl
sbb
mov
push
push
cmp
mov
mov
add
call
insl
inc
jo
repz
xchg
push
inc
ret
out
push
adc
add
decl
jnp
mov
inc
jecxz
js
add
pusha
add
add
jecxz
inc
andb
xorl
faddl
ljmp
xchg
xchg
stc
imul
aad
int
sbb
push
data16
push
or
out
leave
and
cld
inc
sti
movsb
push
add
decl
aaa
xchg
mov
pop
stos
mov
addr16
pop
add
enter
popa
stc
xchg
imul
dec
mov
cmpsl
jb
sub
xor
add
dec
add
add
push
xchg
mov
inc
mov
subb
jle
or
add
add
add
test
dec
test
les
add
jmp
mov
inc
xchg
shlb
lods
pop
lds
or
add
lcall
sub
iret
fisubs
inc
cmpsb
leave
aas
jo
pop
into
mov
dec
hlt
and
inc
sti
dec
mov
push
mov
add
out
xchg
lods
xchg
xchg
inc
cltd
add
arpl
add
fistpl
call
xchg
test
mov
add
add
fwait
xchg
in
std
inc
mov
cmp
add
add
and
call
dec
mov
movsl
cwtl
cld
rcrl
add
add
mov
mov
xor
mov
or
add
add
add
dec
cs
lea
cwtl
jl
or
add
lahf
call
lahf
dec
xchg
xchg
pop
arpl
or
add
dec
out
pop
add
sub
xchg
sahf
xchg
ljmp
add
add
add
jge
xor
push
mov
xor
dec
or
je
add
jmp
add
mov
les
mov
push
add
fadds
add
inc
jne
pusha
inc
mov
dec
jl
mov
add
js
add
ss
xchg
mov
pop
inc
lahf
push
rol
mov
add
add
fimuls
dec
test
repz
mov
add
add
or
add
inc
push
jnp
das
pop
jmp
and
ja
push
add
add
xor
mov
mov
pusha
stos
jp
int3
adc
add
ljmp
xor
push
iret
push
dec
dec
mov
pusha
pop
mov
adc
add
add
add
jne
jo
sar
lcall
dec
xchg
adc
add
xchg
jle
sbb
leave
dec
mov
inc
pop
push
insb
mov
clc
adc
add
add
add
fsubrl
jno
popa
push
mov
adc
add
out
ljmp
ljmp
rclb
add
arpl
cld
inc
pop
inc
mov
sbb
push
and
add
inc
add
add
into
nop
adc
or
jmp
push
dec
pop
mov
add
addb
adc
dec
xchg
mov
inc
jae
adc
add
add
add
add
cmc
ss
aad
xchg
xchg
add
adc
add
cmp
mov
inc
js
ret
jbe
testl
movsl
xchg
fbstp
xor
inc
mov
jp
push
daa
pusha
mov
adc
add
or
jg
dec
xchg
shlb
hlt
dec
jl
add
sub
xlat
xchg
cs
les
repz
icebp
sbb
mov
add
inc
inc
ret
cmc
imul
adc
add
pusha
add
add
jmp
orb
imul
push
add
sbb
add
paddusw
leave
pop
mov
lahf
or
mov
add
mov
add
xor
lret
push
dec
lahf
jo
sti
sbb
add
mov
xchg
test
pop
out
aam
add
decl
mov
dec
pushf
leave
imull
cmp
add
cmp
add
aaa
ljmp
mov
xor
int
sbb
add
add
add
push
xor
push
testl
scas
cmp
add
add
push
jg
out
mov
daa
dec
xchg
cld
dec
inc
mov
push
dec
sbb
add
lcall
iret
dec
lahf
aad
pushf
scas
bound
add
add
add
add
add
add
pusha
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
mov
add
add
pop
add
and
add
sub
add
add
jl
add
pusha
push
add
fcomps
add
push
add
inc
data16
pop
push
add
in
add
xor
add
pop
add
add
add
lods
data16
test
add
push
add
push
cmp
add
adc
add
add
pop
add
or
add
pop
add
dec
add
mov
add
mov
add
pusha
add
cld
pop
add
insb
push
add
xor
add
call
push
add
dec
bound
add
push
add
in
add
sbb
add
lock
pop
data16
add
add
sub
add
xor
add
test
add
bound
add
add
movsb
inc
add
sbb
add
fcompl
add
add
cld
data16
dec
dec
add
pop
push
add
mov
pop
add
pop
push
add
call
xor
add
add
lods
push
add
and
add
add
cmp
add
cmp
add
pushf
add
fs
add
les
add
push
add
cld
dec
add
mov
add
enter
adc
add
adc
add
cwtl
dec
add
jl
add
insb
push
add
add
add
pusha
add
movsb
push
add
inc
push
add
cld
add
mov
add
je
add
nop
pop
add
lock
add
fsubl
add
call
push
add
push
push
add
jl
add
push
pop
add
int3
push
add
pusha
pop
add
cld
pop
add
xor
add
xchg
pop
add
js
add
lock
add
je
add
pusha
cmp
add
cmp
add
add
sbb
add
add
inc
pop
add
mov
add
inc
add
sbb
add
push
inc
add
lods
bound
add
add
sub
add
pop
add
clc
popa
add
decl
add
dec
outsl
imul
push
push
add
add
incl
push
dec
dec
outsl
imul
incl
cmp
loopne
dec
outsl
imul
add
call
cmp
xor
outsl
imul
insb
gs
imul
sub
add
call
cmp
imul
insb
gs
bound
arpl
sub
add
decl
hlt
inc
ja
imul
outsb
je
decl
add
pop
jo
jne
arpl
jae
add
add
incl
jbe
outsb
je
push
push
decl
add
je
inc
jbe
outsb
je
push
sub
add
decl
imul
insb
push
gs
jae
outsb
call
add
je
inc
popa
outsb
arpl
push
gs
jae
outsb
push
push
push
sub
add
incl
add
cwtl
arpl
arpl
push
push
sub
add
call
add
outsl
ja
gs
gs
popa
outsb
arpl
push
push
push
mov
add
add
insb
insb
outsl
ja
add
add
add
add
cmp
dec
dec
outsl
imul
push
push
nop
add
add
decl
add
mov
js
insl
imul
incl
add
or
add
popa
js
insl
imul
add
decl
add
outsb
imul
ljmp
add
add
cltd
xor
jae
imul
fs
add
add
decl
add
jae
gs
outsl
jb
fs
push
cmp
add
or
jo
jo
jae
gs
outsl
jb
fs
nop
add
add
decl
add
insb
outsl
jae
fs
decl
add
jo
jae
insb
outsl
jae
fs
push
push
nop
add
add
add
add
add
insl
popa
js
insl
imul
decl
add
insl
imul
nop
add
add
incl
add
je
jb
push
nop
add
add
incl
insb
outsl
jae
push
push
push
nop
add
add
decl
add
outsb
fs
imul
push
call
xchg
sub
popa
jb
imul
je
jb
push
popa
insb
jne
nop
add
add
call
add
movsl
imul
je
jb
push
popa
insb
jne
push
push
push
decl
add
jo
popa
jb
popa
insb
jne
push
push
push
nop
add
add
incl
add
ds
dec
outsl
fs
insb
push
decl
add
jb
gs
jb
push
popa
insb
jne
push
nop
add
add
decl
add
arpl
je
outsb
je
push
fs
push
nop
add
add
call
add
arpl
inc
push
dec
popa
js
insl
imul
gs
push
decl
add
jo
popa
outsb
inc
push
push
imul
add
decl
dec
outsl
imul
outsb
gs
push
push
push
hlt
add
add
incl
movsb
jbe
outsl
fs
decl
add
pop
jo
jae
jb
outsl
fs
push
push
hlt
add
add
addb
jae
push
imul
in
add
add
add
movsb
bound
jb
imul
sub
add
adc
xchg
push
imul
jb
insb
jae
cld
add
add
add
jb
imul
add
add
add
jae
je
imul
call
add
add
imul
incl
add
imul
add
add
decl
inc
xlat
dec
dec
outsl
imul
jb
pop
add
add
add
add
lock
popa
insl
gs
decl
add
jo
jae
jb
popa
insl
gs
push
push
pop
add
add
decl
add
imul
insb
push
push
push
decl
add
mov
gs
popa
outsb
gs
push
pop
add
add
add
outsb
je
jb
arpl
gs
imul
addr16
push
push
call
incl
pop
add
gs
add
add
decl
add
imul
ja
jl
add
or
je
jo
jae
inc
push
imul
add
add
incl
gs
je
push
push
pop
add
add
incl
add
jb
je
je
push
push
decl
jae
jb
imul
outsb
push
push
push
call
xor
outsb
insb
gs
gs
gs
add
add
incl
add
ret
outsb
push
decl
add
push
je
push
push
incl
add
inc
push
jo
outsl
ja
push
push
ljmp
add
inc
popa
arpl
popa
jb
jae
outsl
jb
popa
jb
jae
push
push
pop
add
add
add
add
push
cmpb
insl
decl
add
pop
outsl
outsl
insl
inc
popa
arpl
push
push
pop
add
add
decl
add
mov
je
outsb
insb
gs
push
push
call
add
push
jo
outsl
ja
inc
outsb
insb
gs
gs
gs
push
call
gs
imul
insb
gs
gs
gs
push
push
call
add
imul
insb
gs
gs
gs
add
add
decl
add
pop
jne
inc
outsl
ja
inc
outsb
insb
gs
dec
add
add
inc
outsb
insb
gs
gs
gs
push
push
pop
add
add
decl
add
stos
insb
gs
imul
insb
gs
push
pop
add
add
add
or
xor
je
insb
je
outsb
insb
gs
push
push
pop
add
add
jmp
push
arpl
outsb
push
push
pushl
add
je
push
jb
push
arpl
outsb
push
mov
add
add
cmp
imul
push
push
mov
add
add
add
js
push
push
incl
add
push
mov
add
add
add
push
push
push
inc
add
add
add
push
mov
add
add
add
jp
push
push
incl
add
push
mov
push
add
add
outsb
shll
je
incl
jne
dec
gs
incl
jb
dec
gs
incl
push
add
add
ja
dec
gs
mov
add
add
add
addr16
mov
pop
add
add
divl
fs
decl
add
arpl
outsl
imul
fs
mov
incl
arpl
gs
push
push
js
add
push
add
mov
outsl
jb
push
mov
decl
add
je
imul
mov
adc
jne
inc
arpl
popa
insb
jae
incl
add
jb
je
push
pop
add
add
cltd
add
insl
gs
push
je
decl
add
sahf
jo
inc
popa
insl
gs
pop
add
add
add
fidivs
addr16
je
decl
add
add
jo
popa
jb
gs
add
add
cmp
call
inc
outsl
outsl
jb
imul
popa
insl
gs
and
add
in
add
push
add
outsl
jb
imul
pushl
add
add
jo
dec
jb
imul
pop
add
add
popa
js
jae
push
push
ljmp
add
pop
add
adc
js
jae
and
add
pushf
add
add
popa
js
jae
push
push
pushl
jg
jo
pop
inc
js
jae
and
add
incl
popa
js
jae
push
push
incl
add
cmp
pop
inc
js
jae
call
add
dec
gs
jb
imul
decl
add
xchg
dec
gs
jb
imul
decl
add
xchg
dec
gs
jb
imul
lcall
add
add
add
imul
pop
inc
js
jae
push
push
push
cmp
add
or
out
dec
gs
inc
js
jae
push
push
push
decl
add
add
imul
pop
inc
js
jae
push
push
push
decl
add
daa
dec
gs
inc
js
jae
push
push
push
js
add
or
lds
dec
gs
inc
js
jae
push
push
push
decl
add
daa
dec
gs
inc
js
jae
push
push
push
jmp
add
add
add
imul
decl
add
imul
decl
add
imul
incl
add
js
jae
push
incl
add
js
jae
push
incl
add
js
jae
push
incl
add
js
jae
push
jmp
add
js
jae
push
incl
add
imul
add
decl
add
int3
imul
js
push
push
incl
add
imul
ljmp
and
imul
add
add
add
je
outsb
arpl
push
push
push
and
add
inc
or
add
add
int3
imul
jp
push
push
and
add
pop
pop
add
or
mov
insb
jne
je
incl
add
add
imul
add
decl
add
or
insl
gs
inc
jb
insl
gs
decl
add
hlt
js
jo
jb
insl
gs
pop
add
add
add
add
xor
addr16
jb
insl
gs
pop
add
add
or
add
add
scas
jae
je
popa
insl
gs
inc
outsb
fs
popa
jb
gs
push
faddl
add
or
test
inc
popa
insl
gs
push
push
decl
add
or
enter
gs
popa
jb
gs
push
pop
add
add
incl
add
nop
arpl
popa
outsb
gs
push
pop
add
add
call
add
jb
outsb
fs
outsl
inc
insb
imul
push
push
push
hlt
add
add
or
add
add
mov
je
imul
push
ljmp
add
add
jb
imul
dec
popa
insl
gs
decl
add
gs
outsl
jb
push
push
enter
and
add
push
add
fidivs
outsb
outsl
ja
push
decl
add
jo
push
imul
add
and
xchg
lods
push
imul
lcall
jne
jo
imul
push
imul
add
sbb
add
or
sub
outsl
arpl
outsb
je
ljmp
add
adc
jo
jo
imul
inc
outsl
arpl
outsb
je
push
add
add
add
add
ret
gs
je
inc
imul
incl
add
lds
je
push
jb
push
call
add
jae
jb
jo
imul
decl
push
popa
jb
outsb
je
imul
push
in
pop
add
or
iret
and
jo
imul
add
je
add
or
fs
dec
outsb
jne
lcall
add
push
add
jb
outsb
je
insb
gs
outsb
je
push
decl
add
dec
popa
jne
arpl
imul
decl
add
aaa
dec
popa
jne
arpl
imul
dec
or
add
add
xchg
jo
dec
outsb
jne
push
add
add
add
or
xor
outsl
outsb
je
imul
in
or
pop
mov
push
imul
add
add
or
add
add
je
popa
insl
gs
call
add
add
dec
popa
insl
gs
push
push
add
add
cmpsl
insl
popa
imul
ja
push
decl
inc
mov
imul
ja
add
add
add
add
addr16
dec
push
popa
outsb
gs
push
push
incl
add
jb
popa
outsb
gs
push
jb
jmp
add
adc
lds
jo
imul
outsb
gs
push
imul
add
add
or
add
cmp
loopne
dec
outsl
imul
add
add
push
add
insb
outsb
addr16
push
push
incl
add
jo
outsb
addr16
push
test
add
incl
xlat
jp
je
insl
fmuls
add
insb
pop
add
add
outsb
fs
push
push
incl
dec
je
insl
push
push
push
test
add
test
add
push
add
mov
gs
outsl
jbe
push
push
add
add
add
or
es
addr16
dec
push
popa
outsb
gs
jae
incl
add
sub
jo
dec
push
popa
outsb
gs
jae
push
add
add
add
adc
cmp
insl
imul
insb
insb
push
arpl
outsb
js
add
or
jae
jo
jne
insb
push
arpl
outsb
push
add
add
fistps
push
imul
jns
gs
push
push
add
add
decl
xchg
inc
jb
insb
outsl
popa
fs
popa
outsb
gs
jae
add
add
add
or
outsl
popa
fs
outsl
insl
insl
popa
outsb
fs
dec
push
push
push
add
add
add
add
arpl
jb
outsl
insl
insl
popa
outsb
fs
dec
push
push
add
add
add
or
neg
arpl
insl
popa
outsb
fs
dec
push
push
push
jmp
add
imul
popa
outsb
fs
dec
push
add
add
decl
imul
popa
je
push
push
push
add
add
incl
add
ja
dec
push
push
decl
add
in
bound
jb
fs
outsl
push
push
add
incl
add
out
push
dec
push
push
decl
push
jno
jae
jb
fs
outsl
dec
imul
or
add
add
push
dec
push
jo
popa
je
push
call
push
add
sbb
pop
icebp
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
add
add
mov
popa
arpl
jns
outsb
jo
je
push
jns
gs
push
push
dec
add
add
call
jp
inc
popa
arpl
jns
outsb
jo
je
push
outsb
imul
outsb
dec
add
add
add
xor
roll
arpl
jns
outsb
jo
je
push
outsl
imul
add
inc
adc
add
fcomps
inc
popa
arpl
jns
outsb
jo
je
inc
outsl
outsl
jb
imul
popa
insl
gs
add
add
add
adc
ds
outsl
jb
dec
outsb
jo
je
inc
outsl
outsl
insb
push
push
push
dec
add
add
call
xor
inc
popa
arpl
jns
outsb
jo
je
inc
outsl
jne
insb
gs
dec
add
add
mov
je
jb
dec
outsb
jo
je
dec
outsb
je
add
add
or
add
xor
mov
popa
arpl
jns
outsb
jo
je
push
je
imul
add
push
add
adc
or
popa
arpl
jns
outsb
jo
je
dec
bound
arpl
add
add
pop
and
outsl
jb
dec
outsb
jo
je
dec
bound
arpl
jae
push
dec
add
add
or
lods
inc
popa
arpl
jns
outsb
jo
je
dec
imul
add
add
xor
stos
inc
popa
arpl
jns
outsb
jo
je
dec
popa
jae
push
push
push
dec
push
add
add
push
jns
gs
push
push
call
decl
add
inc
jae
je
popa
insb
jne
decl
add
push
popa
insb
jne
call
decl
add
pop
addr16
popa
insb
jne
add
add
add
or
imul
dec
outsb
jo
je
push
push
jmp
adc
add
add
test
jae
jb
dec
inc
insb
gs
outsb
je
fs
mov
add
jae
jb
dec
inc
insb
gs
outsb
je
jb
jo
jb
jns
push
push
jmp
add
add
xchg
jo
outsb
jo
je
push
add
add
and
push
jb
jo
jb
jns
push
inc
jne
arpl
incl
add
arpl
call
add
xchg
je
push
jb
jo
popa
insl
gs
decl
add
add
inc
jne
arpl
push
mov
add
inc
or
add
cmp
or
outsl
imul
fs
dec
inc
outsl
outsb
je
imul
add
add
adc
add
add
jo
jae
mov
add
dec
or
add
add
les
jo
add
add
adc
add
outsl
insl
insl
popa
outsb
fs
imul
push
ljmp
add
add
add
jo
inc
outsl
insl
insl
popa
outsb
fs
dec
push
adc
add
mov
add
sha1msg1
dec
outsl
imul
imul
add
add
leave
dec
dec
outsl
imul
push
outsl
imul
add
decl
add
dec
jae
popa
jo
push
push
push
incl
add
or
push
jle
dec
jne
dec
jae
popa
jo
push
push
faddl
add
or
cmp
dec
dec
outsl
imul
push
push
inc
push
add
decl
cmp
mov
inc
outsl
insl
dec
bound
arpl
movsb
push
add
push
adc
add
cmp
dec
dec
outsl
imul
push
arpl
jae
push
push
movsb
push
add
or
add
adc
cmp
inc
outsl
insl
dec
bound
arpl
jae
push
push
push
pushl
add
add
jbe
bound
push
push
movsb
push
add
call
add
rolb
je
dec
outsl
imul
push
arpl
push
incl
jo
bound
push
push
inc
push
add
les
add
add
cmpsb
pop
imul
incl
add
jo
jae
jb
fs
or
add
in
adc
add
cmp
in
inc
outsl
insl
dec
bound
arpl
jns
gs
or
add
test
add
adc
pop
sbb
outsl
insl
dec
bound
arpl
outsb
imul
outsb
push
push
or
add
call
xor
insl
dec
bound
arpl
jne
jbe
push
gs
outsb
je
or
add
cwtl
push
add
adc
and
outsl
insl
dec
bound
arpl
jne
jbe
or
add
hlt
or
add
xor
dec
bound
arpl
push
gs
or
add
cld
add
add
xor
insl
dec
bound
arpl
popa
arpl
or
add
adc
add
sbb
addl
je
inc
outsl
outsb
jae
jb
arpl
outsb
dec
imul
add
call
xor
insl
dec
bound
arpl
outsl
imul
arpl
or
add
call
outsl
insl
dec
bound
arpl
gs
dec
bound
arpl
push
insb
pop
add
push
or
add
cmp
arpl
je
bound
gs
je
je
pop
push
jns
gs
pop
add
sbb
add
sbb
enter
push
arpl
je
bound
gs
je
je
pop
push
outsb
imul
outsb
push
insb
pop
add
lcall
xor
dec
bound
arpl
je
bound
gs
je
je
pop
push
outsb
popa
je
popa
arpl
fs
push
insb
pop
add
loopne
add
push
xor
arpl
je
bound
gs
je
je
pop
dec
outsb
inc
popa
je
bound
gs
push
insb
pop
add
fadds
push
mov
push
arpl
je
bound
gs
je
je
pop
inc
gs
gs
fs
inc
push
add
decl
popa
je
bound
gs
je
je
push
push
push
ljmp
add
push
add
fwait
jo
je
je
push
push
inc
push
add
mov
add
popa
bound
gs
gs
jae
outsl
outsb
call
add
add
jns
push
gs
jae
outsl
outsb
push
push
push
inc
push
add
nop
add
add
add
dec
imul
fmuls
add
or
repz
dec
gs
imul
inc
push
add
sbb
add
or
pop
mov
arpl
decl
add
jo
jae
gs
arpl
push
inc
push
add
int3
adc
pop
out
imul
incl
add
dec
imul
inc
push
add
mov
add
or
outsl
arpl
fs
push
cmp
add
or
jl
jo
jae
outsl
arpl
fs
push
push
inc
push
add
lods
pop
add
or
jb
jae
outsl
ja
outsl
imul
decl
add
jo
push
imul
add
rclb
add
adc
cmp
je
push
imul
jb
push
push
push
ljmp
add
pop
add
jo
jo
popa
je
push
rolb
add
js
add
push
cmp
fimull
outsl
imul
dec
imul
add
sub
add
or
out
test
fs
bound
arpl
push
jmp
pop
add
add
js
jo
bound
pop
add
cmp
add
or
push
jb
insl
outsl
jbe
dec
bound
arpl
add
decl
add
outsl
jbe
dec
bound
arpl
push
push
rolb
add
cmp
add
or
outsl
icebp
addr16
push
gs
ljmp
add
add
xchg
jo
inc
push
gs
imul
add
adc
add
or
daa
addr16
outsl
insb
imul
decl
sbb
add
add
insb
imul
pop
add
dec
pop
add
or
daa
jns
gs
jo
outsb
inc
push
gs
jmp
add
add
jo
outsb
inc
push
gs
imul
add
enter
adc
sbb
addr16
imul
arpl
push
gs
push
push
ljmp
add
adc
fcoms
jo
imul
arpl
push
gs
imul
test
add
or
and
gs
popa
arpl
dec
adc
add
add
popa
arpl
imul
add
hlt
add
add
add
loopne
gs
fs
decl
and
jo
inc
fs
imul
add
js
add
adc
mov
addr16
je
outsb
fs
insb
outsl
outsb
gs
jne
jbe
jae
decl
add
jo
je
outsb
fs
insb
outsl
outsb
gs
jne
jbe
dec
imul
pop
add
pop
adc
aam
addr16
jne
jbe
jae
push
push
cmp
add
or
lret
jo
jne
jbe
dec
imul
add
add
add
scas
addr16
outsl
imul
incl
add
add
pop
jo
push
outsl
imul
push
rolb
add
hlt
adc
add
mov
inc
outsl
outsb
jae
jb
arpl
outsb
dec
imul
jmp
add
or
pop
fwait
jo
inc
dec
imul
push
rolb
add
loopne
add
adc
lds
addr16
outsl
jo
gs
insb
dec
bound
arpl
push
decl
cs
jo
dec
bound
arpl
jae
rolb
add
adc
add
or
pop
xor
jne
inc
push
gs
call
add
or
js
jo
jne
inc
push
gs
push
push
push
rolb
add
sub
add
or
insb
outsb
jne
push
outsl
insb
imul
jmp
add
or
shrl
jo
jne
push
outsl
insb
imul
add
add
or
jne
dec
jo
outsb
inc
push
gs
call
add
shll
jne
dec
jo
outsb
inc
push
gs
push
push
push
rolb
add
lock
adc
pop
fwait
outsb
jne
push
imul
arpl
push
gs
push
push
js
add
adc
cli
out
jo
jne
push
imul
arpl
push
gs
push
rolb
add
sub
add
or
or
jne
inc
popa
arpl
in
pop
add
or
imul
dec
jne
inc
popa
arpl
push
push
push
rolb
add
sbbb
or
jp
outsb
jne
inc
fs
pushl
add
scas
jo
jne
inc
fs
push
push
rolb
add
pusha
adc
add
add
outsb
jne
push
je
outsb
fs
insb
outsl
outsb
gs
jne
jbe
jae
jmp
add
adc
loopne
jo
jne
push
je
outsb
fs
insb
outsl
outsb
gs
jne
jbe
jae
pop
add
int3
sbb
add
add
pop
outsb
jne
inc
jne
jbe
jae
push
push
jmp
add
or
pop
es
jne
inc
jne
jbe
jae
push
rolb
add
cmp
add
or
jge
outsb
jne
push
outsl
imul
js
add
or
loop
jo
jne
push
outsl
imul
pop
add
mov
add
cmp
outsl
outsb
jae
jb
arpl
outsb
dec
imul
decl
or
add
add
insl
inc
dec
imul
pop
add
sbb
add
adc
dec
lods
outsb
jne
push
outsl
jo
gs
insb
dec
bound
arpl
push
decl
cmpsb
add
jne
push
outsl
jo
gs
insb
dec
bound
arpl
rolb
add
dec
or
push
and
imul
arpl
outsb
push
push
push
rolb
add
mov
add
ltr
sbb
insb
outsl
arpl
gs
arpl
outsb
push
rolb
add
lock
add
add
test
jb
jo
jb
jns
rolb
add
sub
add
push
add
gs
push
jb
jo
jb
jns
push
rolb
add
and
add
or
sbb
dec
gs
outsl
fs
push
call
add
push
add
das
bound
jb
gs
outsl
fs
popa
insl
gs
push
rolb
add
js
add
adc
sbb
je
jns
gs
arpl
outsb
dec
jb
gs
or
add
decl
cmp
dec
dec
outsl
imul
outsb
addr16
outsl
js
xor
add
sbb
add
add
out
insl
imul
rcrb
dec
leave
jo
dec
imul
add
clc
push
add
add
enter
js
call
push
add
pop
add
jo
dec
popa
js
je
xor
add
pusha
sbb
add
add
arpl
je
jb
push
mov
add
jo
inc
outsb
je
jb
je
push
fmull
add
adc
imul
mov
add
pop
dec
imul
incl
adc
pop
jmp
mov
pop
incl
add
mov
pop
dec
or
add
mov
pop
ljmp
add
add
dec
imul
cmp
jp
jo
imul
push
adc
add
dec
imul
in
push
add
add
dec
popa
js
push
push
push
incl
dec
popa
js
push
push
push
incl
push
js
push
push
push
xor
add
rclb
add
add
outsb
addr16
push
xor
add
rcrb
add
add
jns
outsb
addr16
push
xor
add
sub
add
pop
add
adc
dec
outsb
addr16
push
xor
add
je
add
push
add
imul
dec
outsb
addr16
push
push
xor
add
clc
push
add
or
push
or
fs
outsl
imul
decl
add
fs
outsl
jne
imul
push
incl
add
xorl
js
pop
add
aam
add
push
add
inc
outsl
jne
imul
push
jmp
int3
dec
jo
inc
outsl
jne
imul
push
push
rolb
add
lcall
add
dec
addr16
imul
jb
arpl
outsl
jne
imul
push
inc
push
add
fmull
add
or
gs
jne
dec
bound
arpl
push
push
cmp
add
or
mov
jne
dec
bound
arpl
push
add
dec
and
add
add
addr16
imul
push
outsb
push
push
fmull
add
or
inc
cmp
inc
push
outsb
push
push
inc
push
add
call
add
addr16
imul
popa
jb
outsb
je
push
push
push
clc
sbb
add
add
mov
jb
outsb
je
push
push
push
inc
push
add
lods
adc
add
add
addr16
imul
popa
je
push
push
jl
add
or
mov
jo
jae
jb
popa
je
push
push
push
inc
push
add
mov
add
jnp
gs
gs
dec
imul
popa
je
push
push
push
cwtl
or
add
add
adc
sbb
inc
imul
outsl
fs
push
jns
gs
or
add
pop
add
adc
call
insb
popa
jns
outsl
fs
dec
outsl
jb
popa
insb
push
push
cwtl
or
add
add
sbb
push
jo
popa
jns
outsl
fs
inc
popa
imul
data16
insl
gs
push
inc
push
add
fcompl
add
or
jno
imul
outsl
fs
call
add
xor
outsl
fs
push
push
inc
push
add
mov
add
add
insb
outsl
outsb
gs
push
push
incl
sbb
add
add
jo
gs
bound
push
add
pushf
or
add
add
gs
outsb
fs
push
decl
and
add
add
fs
push
faddl
add
push
add
outsl
bound
arpl
pushl
add
or
xor
jo
dec
bound
arpl
add
and
add
add
jo
jb
insl
gs
jb
push
push
decl
add
push
jo
popa
jb
insl
gs
jb
push
faddl
decl
add
gs
bound
arpl
add
add
push
add
adc
je
gs
popa
jb
insl
gs
jb
push
pushl
imul
jb
popa
jb
insl
gs
jb
cld
or
add
sbb
add
cmp
arpl
popa
jo
push
jns
gs
cld
or
add
add
wrmsr
add
arpl
popa
jo
dec
outsl
outsb
gs
cld
or
add
or
lock
bound
arpl
popa
jo
dec
jb
imul
add
mov
add
wrmsr
mov
arpl
popa
jo
inc
js
jae
cld
or
add
add
push
xor
dec
bound
arpl
popa
jo
inc
outsb
fs
push
cld
or
add
and
add
xor
arpl
popa
jo
dec
imul
rcrb
add
push
xor
dec
bound
arpl
popa
jo
inc
outsb
push
push
cld
or
add
and
add
xor
out
bound
arpl
popa
jo
dec
outsb
je
push
cld
or
add
and
add
xor
arpl
popa
jo
push
je
popa
imul
jo
outsb
je
push
cld
or
add
inc
dec
dec
bound
arpl
popa
jo
push
gs
dec
outsb
je
push
cld
or
add
add
mov
dec
bound
arpl
popa
jo
inc
push
insb
popa
outsb
gs
outsb
je
or
add
xor
dec
bound
arpl
popa
jo
push
jne
fs
cld
or
add
xor
arpl
popa
jo
push
je
push
push
cld
or
add
add
bound
arpl
popa
jo
push
je
outsb
dec
bound
arpl
push
cld
or
add
xor
xor
push
arpl
popa
jo
dec
outsb
push
push
push
cld
or
add
add
adc
dec
es
bound
arpl
popa
jo
dec
outsb
push
jb
cld
or
add
add
wrmsr
movsl
push
arpl
popa
jo
push
gs
push
cld
or
add
add
push
xor
arpl
popa
jo
push
popa
outsb
push
push
cld
or
add
in
dec
bound
arpl
popa
jo
push
gs
push
gs
push
cld
or
add
xor
arpl
popa
jo
push
popa
outsb
push
popa
outsb
push
push
push
cld
or
add
and
add
xor
dec
bound
arpl
popa
jo
inc
imul
add
and
add
xor
pop
dec
bound
arpl
popa
jo
inc
outsl
jne
je
add
add
or
xchg
mov
jns
gs
je
imul
js
add
or
leave
in
bound
jb
jns
gs
push
push
faddl
add
add
mov
push
faddl
add
or
and
jae
jb
outsb
inc
imul
add
pop
and
jb
imul
jbe
push
push
push
jmp
pop
add
or
push
aaa
jo
jae
outsb
inc
jne
jbe
push
push
js
add
add
add
add
jae
popa
jo
push
push
decl
add
pop
add
jae
popa
jo
js
add
adc
add
pop
add
sti
jae
jb
outsb
pop
push
js
add
sbb
loopne
jae
jb
outsb
pop
push
js
add
int3
add
or
jbe
jbe
gs
outsl
jb
lcall
add
push
insb
popa
outsb
gs
add
in
and
add
add
shll
data16
insl
gs
adc
add
inc
daa
add
add
popa
jb
insl
push
push
push
incl
add
jo
popa
jb
insl
push
push
adc
add
call
add
push
popa
jae
jo
push
push
adc
add
add
rcrb
inc
jne
arpl
lcall
add
pop
add
sbb
popa
jb
gs
incl
add
add
stos
data16
arpl
insl
gs
add
mov
add
adc
xor
imul
push
outsl
jae
push
jo
popa
je
push
push
adc
add
mov
add
or
xchg
push
bound
fs
gs
insb
je
je
add
add
adc
roll
outsb
fs
gs
insb
je
push
insb
popa
outsb
gs
add
je
add
str
or
push
gs
insb
je
jb
insl
gs
adc
add
in
adc
mov
bound
fs
gs
insb
je
jb
outsb
je
je
outsl
outsb
push
push
push
adc
add
pushf
add
or
repnz
outsb
fs
popa
jae
push
je
push
adc
add
push
add
bound
gs
jb
imul
push
push
push
adc
add
mov
add
je
imul
popa
outsb
gs
push
push
jl
add
or
out
ljmp
je
insb
insb
push
push
adc
add
add
add
add
add
jae
jb
arpl
push
insb
popa
outsb
gs
dec
and
add
add
mov
push
insb
popa
outsb
gs
push
adc
add
mov
add
pop
jb
jae
jb
arpl
dec
imul
jb
jmp
and
add
add
gs
je
ljmp
add
add
mov
jo
imul
pop
add
adc
enter
jae
jb
arpl
dec
imul
push
push
inc
or
add
add
jo
je
jb
push
je
call
pop
push
jo
outsb
fs
push
push
adc
add
xor
add
adc
fmul
jb
jae
jb
arpl
dec
bound
arpl
add
test
add
adc
fdivl
insb
gs
jb
jne
jb
outsb
je
outsb
popa
jo
push
push
push
adc
add
test
add
add
mov
imul
je
popa
imul
jo
decl
add
or
jae
jo
imul
add
add
sbb
push
imul
gs
imul
popa
imul
jo
adc
add
je
add
sbb
cmp
imul
je
popa
imul
jo
outsb
insb
gs
lcall
add
push
add
inc
outsb
insb
gs
outsb
inc
gs
gs
push
adc
add
in
sub
add
jae
popa
fs
je
popa
imul
jo
outsb
insb
gs
jmp
push
add
or
jmp
jb
popa
bound
push
push
push
adc
add
mov
add
pop
add
popa
jb
je
popa
imul
jo
outsb
insb
gs
adc
add
push
add
outsb
popa
jo
outsl
imul
or
add
or
jae
jb
gs
dec
popa
bound
push
push
push
adc
add
decl
add
shlb
gs
jb
outsb
popa
jo
outsl
imul
add
xor
add
adc
pop
ret
jae
bound
bound
arpl
popa
jo
push
push
adc
add
int3
pop
add
adc
ret
outsb
popa
bound
outsb
dec
bound
arpl
popa
jo
push
lcall
add
add
add
outsb
popa
bound
adc
add
cwtl
sbb
add
add
xor
insb
insb
outsl
ja
imul
push
outsb
popa
jo
push
jmp
add
push
add
data16
insb
insb
outsl
ja
push
adc
add
adc
add
sbb
push
cli
imul
popa
outsb
push
gs
dec
bound
arpl
popa
jo
add
add
adc
fbstp
imul
dec
outsl
jne
gs
outsl
ja
push
push
push
inc
and
add
inc
imul
inc
outsl
ja
push
push
push
adc
add
mov
add
imul
jne
gs
jo
call
add
outsb
imul
push
adc
add
int3
sub
add
add
popa
fs
outsb
popa
jo
jne
arpl
incl
add
or
mov
jo
imul
push
push
push
adc
add
or
add
xor
fs
outsb
popa
jo
outsl
jae
inc
jne
arpl
add
add
push
add
popa
jb
outsb
popa
jo
jne
arpl
push
adc
add
mov
add
adc
out
lock
je
outsb
popa
jo
jne
arpl
imul
jl
add
adc
or
push
outsb
popa
jo
jne
arpl
imul
add
pusha
sub
add
add
jns
jae
push
outsb
popa
jo
jne
arpl
jmp
adc
add
add
jo
outsb
insb
jns
jae
push
outsb
popa
jo
jne
arpl
add
add
gs
je
push
push
adc
add
mov
add
pop
adc
add
and
add
add
mov
pop
adc
add
fsubrl
add
add
shl
gs
adc
add
loopne
add
or
or
gs
popa
jae
push
je
push
push
adc
add
and
add
add
arpl
jb
popa
jae
push
je
adc
add
mov
add
ss
popa
jae
push
je
push
push
adc
add
hlt
add
adc
jecxz
imul
outsb
popa
jo
outsl
inc
popa
jae
push
je
adc
add
xchg
and
movsl
sbb
gs
je
outsb
dec
outsl
jne
gs
gs
jbe
push
push
push
lcall
jecxz
jo
gs
je
push
adc
add
movsb
sbb
add
add
push
gs
outsl
arpl
gs
popa
jae
push
je
push
inc
pop
add
adc
std
adc
popa
jae
gs
outsl
arpl
gs
popa
jae
push
je
adc
add
lock
es
gs
outsl
arpl
gs
popa
jae
push
je
adc
add
sub
add
or
mov
data16
outsl
ja
push
push
push
push
or
add
add
jo
push
push
adc
add
mov
add
mov
outsb
je
outsl
insb
inc
outsl
ja
push
decl
add
or
pop
sahf
jo
outsl
outsb
je
outsl
insb
adc
add
sub
add
pop
add
popa
insb
je
outsl
ja
push
incl
add
add
push
jle
inc
insb
je
add
add
or
adc
dec
outsl
jne
gs
outsl
ja
push
push
daa
add
or
pop
dec
jo
outsb
dec
outsl
jne
gs
outsl
ja
adc
add
nop
sub
add
add
subl
gs
jo
push
push
lcall
sub
add
add
dec
outsl
jne
gs
jo
push
adc
add
pushf
adc
shrb
jae
popa
outsb
arpl
outsl
outsb
jae
jb
imul
or
add
add
add
add
je
outsb
arpl
add
add
adc
out
add
je
outsb
insb
gs
outsl
outsb
jae
jb
imul
add
adc
add
adc
gs
popa
imul
jb
arpl
outsb
push
push
push
incl
add
popa
insl
gs
push
adc
add
aam
add
adc
sub
je
arpl
outsl
push
jne
popaw
arpl
dec
outsl
fs
add
add
daa
add
adc
pusha
xchg
arpl
popa
je
push
outsl
imul
gs
push
push
pushl
add
jo
push
outsl
imul
gs
push
push
pusha
or
add
add
adc
dec
outsl
imul
je
gs
insl
push
imul
push
pusha
or
add
sub
add
add
mov
gs
outsl
imul
pusha
and
add
add
push
push
outsl
imul
add
adc
add
or
enter
outsl
imul
inc
push
pusha
or
add
add
or
out
outsl
addr16
outsl
imul
pusha
or
add
add
add
mov
bound
fs
pushl
sub
add
add
pop
jo
imul
push
push
push
add
add
push
inc
arpl
popa
je
push
outsl
imul
popa
insl
push
imul
pushl
daa
add
adc
add
outsl
imul
popa
insl
push
imul
or
add
add
cmp
jns
dec
outsl
imul
push
imul
add
mov
add
add
or
cmp
add
verw
jbe
inc
outsb
jns
bound
arpl
sub
add
aam
add
pop
add
dec
outsl
bound
arpl
clc
das
add
or
sbb
jo
dec
bound
arpl
push
push
sub
add
aam
add
or
jp
popa
insb
insb
outsl
ja
jne
jbe
jae
sub
add
mov
add
adc
insb
insb
outsl
ja
je
outsb
fs
insb
outsl
outsb
gs
jne
jbe
jae
push
push
sub
add
sbb
add
ltr
outsl
ja
fs
jne
jbe
jae
sub
add
in
add
or
stos
mull
insb
outsl
ja
popa
arpl
push
push
sub
add
xchg
xor
add
add
outsl
ja
push
gs
push
push
sub
add
pop
daa
add
adc
dec
push
ja
outsl
imul
arpl
push
push
sub
add
mov
add
punpcklwd
ja
imul
push
sub
add
sub
add
adc
inc
insb
outsl
ja
outsl
jo
gs
insb
dec
bound
arpl
or
add
add
or
and
inc
insb
insb
outsl
ja
push
sub
add
int3
and
fs
imul
imul
addr16
decl
add
int
jo
imul
xor
add
scas
mov
sub
add
or
add
or
lahf
ret
outsb
imul
arpl
incl
add
or
inc
imul
push
imul
add
add
add
popa
je
dec
bound
arpl
arpl
jb
push
call
add
add
jp
jo
bound
arpl
arpl
jb
push
add
add
add
sbb
in
arpl
popa
je
inc
popa
arpl
jb
jne
fs
insl
popa
addr16
imul
pushl
add
or
inc
mov
imul
enter
adc
adc
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
mov
add
mov
add
pop
outsb
jne
dec
outsb
jo
je
push
push
push
jmp
sbb
jo
jne
dec
outsb
jo
je
push
push
mov
add
dec
xor
add
add
addr16
outsb
jo
je
ljmp
add
or
repz
imul
je
push
push
sub
add
add
jo
outsb
jo
je
mov
add
cld
sub
add
add
dec
outsb
jo
je
adc
add
add
add
popa
insb
jne
push
push
push
mov
add
adc
sub
popa
fs
outsl
dec
imul
je
push
mov
add
xchg
or
add
add
xor
jb
outsb
jo
je
push
mov
add
decl
add
arpl
popa
je
dec
outsb
jo
je
jmp
add
popa
bound
jb
outsb
jo
je
jns
gs
push
push
mov
add
test
add
verr
je
dec
outsb
jo
je
jns
gs
mov
add
dec
add
cmp
insl
outsl
jbe
dec
popa
jae
dec
outsb
jo
je
mov
add
loopne
add
adc
pop
pop
imul
dec
inc
outsl
insl
gs
jns
push
push
mov
add
sbb
add
or
imul
jo
popa
je
push
push
push
pushl
sub
mov
push
jne
jo
gs
push
mov
add
test
add
or
sti
xchg
arpl
arpl
popa
je
push
push
push
mov
add
xchg
daa
add
push
add
cld
jne
fs
je
push
push
mov
add
xor
add
push
add
add
insl
insl
imul
mov
add
pop
add
clc
arpl
popa
je
dec
jb
outsb
je
je
outsl
outsb
inc
imul
decl
add
pop
add
jb
gs
incl
add
add
arpl
jns
add
add
xor
add
test
addr16
arpl
gs
outsl
imul
gs
clc
add
adc
fsubrs
je
jbe
push
outsl
imul
gs
add
add
sub
dec
popa
jae
push
imul
imul
add
lods
sub
add
gs
outsl
jbe
dec
popa
jae
push
imul
imul
add
add
sbb
add
add
jb
imul
imul
add
add
xor
add
add
inc
arpl
popa
insb
push
insb
popa
arpl
decl
add
adc
mov
insl
inc
arpl
popa
insb
push
insb
popa
arpl
push
push
push
add
add
add
adc
or
ja
jb
imul
outsl
jae
push
push
call
push
add
add
push
push
push
add
add
add
data16
arpl
outsb
popa
insb
inc
imul
jb
arpl
imul
cld
xor
add
add
push
jb
arpl
imul
add
js
add
pop
add
and
push
imul
inc
imul
imul
add
ja
insl
popa
js
jne
push
arpl
je
imul
add
add
sti
aaa
addr16
arpl
je
imul
jl
add
adc
cltd
and
imul
outsb
je
imul
add
add
add
or
je
imul
push
outsb
fs
outsl
jne
gs
push
push
add
add
and
add
add
dec
popa
jae
inc
insb
imul
gs
outsl
jb
push
push
add
add
sub
add
add
cmp
je
arpl
gs
imul
push
push
push
add
add
xor
add
add
gs
dec
inc
jbe
outsb
je
ljmp
and
add
add
lcall
outsb
je
push
push
add
add
dec
subl
gs
decl
add
bound
jb
popa
outsb
addr16
addr16
push
push
add
add
xor
add
gs
jbe
imul
outsb
addr16
addr16
push
push
cld
xor
add
add
jo
imul
add
shlb
add
pop
add
mulb
je
gs
push
ljmp
add
bound
jb
fs
push
in
and
add
add
jo
jae
jb
gs
push
push
push
add
add
add
ss
popa
ja
imul
jae
add
add
ss
push
popa
outsb
gs
outsl
jae
je
outsl
outsb
decl
bound
jb
outsl
jae
je
outsl
outsb
push
push
push
add
add
add
add
mov
jb
ja
gs
outsl
jae
je
outsl
outsb
push
add
add
adc
add
add
mov
inc
jb
ja
gs
popa
outsb
gs
add
add
add
jo
popa
je
inc
jb
ja
gs
push
push
add
add
cmp
add
add
jo
outsl
jo
jb
imul
insb
push
lcall
add
imul
gs
imul
insb
push
push
push
add
add
das
std
outsw
jb
popa
je
jne
bound
jmp
add
add
bound
push
push
ljmp
add
or
add
bound
jb
jne
bound
push
add
add
add
add
insl
popa
je
gs
outsb
arpl
jae
incl
add
add
jb
imul
call
add
adc
or
inc
jb
arpl
outsb
popa
insb
push
jb
arpl
imul
decl
add
jo
jae
jb
gs
outsb
arpl
jae
add
add
sub
outsw
jb
popa
je
outsl
outsl
jb
imul
jl
add
or
out
push
jb
arpl
imul
lcall
add
add
jo
jae
jb
outsl
outsl
jb
imul
add
add
add
add
jne
push
push
jmp
add
iret
jo
push
imul
cmp
add
dec
outsl
imul
imul
or
add
mov
imul
push
jmp
add
insb
je
jb
add
add
lock
add
add
jae
insb
arpl
outsb
push
push
push
jmp
add
or
lret
insl
jo
push
gs
arpl
outsb
push
push
or
add
add
cmp
xor
outsl
imul
add
loopne
add
pop
add
jo
popa
jns
js
add
or
movsb
jo
imul
or
add
xor
add
out
sti
jae
jp
push
or
add
sub
add
add
outsb
popa
jo
imul
cmp
add
or
in
jae
arpl
outsb
jae
call
cmp
add
add
arpl
outsb
jae
push
push
push
or
add
xor
add
arpl
outsb
je
fs
imul
jne
outsb
arpl
push
push
fsubrl
arpl
inc
jb
jno
outsb
arpl
push
push
or
add
das
push
insb
imul
push
call
add
push
add
jecxz
push
imul
add
nop
add
or
stc
dec
insb
imul
jb
push
push
pushl
add
push
add
outsl
insb
outsl
jb
push
push
or
add
cmp
add
add
push
je
insb
gs
push
push
mov
add
jo
je
insb
gs
push
push
or
add
adc
add
add
gs
arpl
outsb
je
fs
imul
push
or
add
add
add
outsb
je
fs
imul
jb
push
push
push
or
add
xor
sub
outsb
je
fs
imul
gs
push
push
push
or
add
add
or
push
iret
jae
outsl
ja
pop
inc
js
jae
push
push
or
add
add
inc
js
js
jae
outsl
insb
outsl
jb
push
push
or
add
add
or
xchg
push
jae
outsl
insb
outsl
jb
push
add
add
push
adc
add
je
addr16
fs
mov
add
jo
inc
jb
fs
push
mov
xor
add
cmp
push
imul
in
cmp
add
add
gs
insb
insb
mov
sub
add
outsl
je
je
outsl
outsb
push
je
insb
gs
push
push
pushl
cmp
add
add
sub
jae
jb
je
insb
gs
push
mov
add
adc
cmpsb
in
jb
jbe
jb
gs
outsl
je
je
inc
jne
je
outsb
push
inc
cmp
add
add
pop
jo
gs
jb
gs
add
adc
fidivs
jb
gs
outsl
je
je
dec
outsl
jne
gs
push
mov
xor
add
add
push
jb
je
je
dec
imul
je
outsb
push
push
incl
add
dec
imul
je
outsb
push
push
push
mov
aaa
add
adc
or
jb
gs
popa
outsb
inc
jne
je
outsb
mov
sbb
add
add
jb
jbe
jb
gs
arpl
insb
insb
push
push
push
mov
cmp
add
add
gs
gs
outsl
outsl
insl
inc
jne
je
outsb
push
push
push
mov
cmp
add
outsl
outsl
insl
inc
jne
je
outsb
push
outsb
jae
je
jbe
je
push
push
push
incl
add
outsb
jae
je
jbe
je
mov
and
add
inc
push
jo
outsb
inc
jne
je
outsb
push
outsb
jae
je
jbe
je
mov
add
pop
add
popa
je
inc
jne
je
outsb
push
outsb
jae
je
jbe
je
push
mov
cmp
push
dec
insb
imul
outsl
push
imul
lcall
rorb
dec
imul
or
add
and
add
add
mov
jb
gs
outsl
je
je
outsl
outsb
xor
push
mov
xor
add
gs
jb
gs
popa
outsb
xor
push
push
mov
and
add
add
in
jb
jbe
jb
gs
outsl
outsl
insl
xor
push
mov
cmp
add
add
jb
je
je
outsl
outsb
push
jo
gs
cld
push
add
push
add
jo
jo
gs
push
mov
cmp
add
add
push
jo
gs
mov
sub
add
shll
outsl
outsl
insl
push
jo
gs
or
add
add
push
add
jo
popa
outsb
pop
outsl
outsl
insl
xor
push
decl
add
add
push
ja
jo
push
push
mov
aas
add
adc
push
lret
insb
outsl
ja
outsl
je
je
outsl
outsb
push
imul
call
add
add
jo
insb
insb
outsl
ja
imul
add
pop
int3
jae
popa
jo
ja
jae
push
imul
add
cmp
add
or
inc
call
dec
insl
popa
addr16
push
push
sbb
add
pop
xor
add
xchg
shlb
jbe
incl
sub
add
push
bound
jb
imul
or
add
mov
gs
popa
jbe
inc
imul
incl
add
int3
bound
jb
gs
jne
je
decl
add
or
bound
jb
imul
push
push
mov
cmp
ss
jae
jb
outsb
jae
outsl
je
push
incl
add
add
inc
jb
popa
call
mov
insb
jne
gs
jne
jae
jb
push
push
lcall
add
jo
dec
insl
popa
addr16
mov
cmp
mov
je
popa
arpl
jb
jne
fs
insl
popa
addr16
mov
inc
add
sbb
cmpsb
pushf
bound
imul
jne
fs
insl
popa
addr16
jb
ja
jb
gs
pushl
xor
push
je
dec
jb
gs
push
mov
cmp
add
popa
arpl
jb
jne
fs
insl
popa
addr16
push
push
push
push
dec
cmp
fidivrs
jb
push
push
mov
add
sbb
xchg
sub
arpl
jb
jne
fs
insl
popa
addr16
jb
outsb
jae
popa
jb
outsb
arpl
js
add
or
push
jb
outsb
jae
popa
jb
outsb
arpl
push
push
mov
cmp
add
add
insb
imul
arpl
outsb
push
push
mov
aas
add
or
and
inc
outsb
insb
gs
push
push
pushl
add
push
add
jo
outsb
insb
gs
push
mov
aas
add
pop
add
insl
gs
inc
gs
imul
arpl
outsb
jae
ljmp
add
adc
xor
je
imul
arpl
outsb
jae
or
add
pop
add
verr
jae
outsl
ja
imul
gs
mov
sub
add
add
shrb
fs
dec
imul
gs
mov
cmp
out
xchg
fs
dec
imul
imul
decl
add
ljmp
je
mov
sub
movsl
mov
gs
outsl
fs
push
push
pushl
add
add
fs
jae
jb
push
outsl
fs
push
mov
inc
add
pop
add
ja
outsl
jb
inc
popa
arpl
jb
jne
fs
outsl
insb
outsl
jb
mov
das
add
push
add
insb
outsl
arpl
fs
bound
arpl
jae
inc
insb
je
jb
popa
je
inc
outsl
insb
outsl
jb
push
pushl
add
add
in
jo
popa
insb
mov
sub
add
add
insb
outsl
arpl
fs
bound
arpl
outsl
insb
outsl
jb
push
mov
cmp
hlt
or
push
imul
or
add
sbb
add
add
push
gs
outsl
outsb
je
outsl
insb
jae
or
add
add
or
push
imul
push
push
mov
and
add
add
jg
gs
push
insb
popa
outsb
gs
push
push
jmp
inc
add
hlt
daa
inc
jo
insb
jns
outsl
inc
insb
insb
push
imul
dec
cmp
add
add
dec
jb
outsb
je
jb
push
ja
mov
sub
add
add
addr16
push
insb
popa
outsb
gs
push
push
mov
cmp
add
xchg
gs
push
insb
popa
outsb
gs
outsb
je
jb
arpl
gs
aas
add
or
push
pop
jb
jae
je
push
insb
popa
outsb
gs
mov
aas
add
or
sbb
imul
jae
push
lcall
inc
add
or
mov
jb
popa
bound
jae
add
add
insb
inc
add
add
rorb
imul
sub
add
push
add
lcall
push
push
orb
lods
aaa
add
iret
dec
dec
outsl
imul
inc
imul
lock
mov
fs
outsb
popa
jo
fcoml
add
add
push
outsb
popa
jo
push
push
orb
mov
add
or
int
jae
jb
imul
jo
or
add
add
sbb
je
popa
imul
jo
arpl
popa
je
inc
imul
lcall
add
or
adc
je
outsb
arpl
push
push
orb
mov
add
popa
imul
jo
gs
arpl
gs
imul
push
push
orb
add
add
sbb
rcrb
je
popa
imul
jo
outsb
popa
bound
gs
imul
lcall
add
popa
bound
orb
dec
inc
add
sbb
push
jae
jb
imul
jo
outsb
popa
bound
popa
outsb
outsb
je
push
push
orb
int3
inc
add
pop
add
jae
jb
imul
jo
outsb
popa
bound
gs
outsb
imul
orb
xor
add
add
jae
jb
imul
jo
outsb
popa
bound
jne
popaw
arpl
outsl
jb
popa
insb
push
orb
mov
add
add
jb
imul
jo
outsb
insb
gs
push
push
orb
fs
adc
je
popa
imul
jo
imul
push
or
add
cmp
add
je
popa
imul
jo
imul
jb
push
push
orb
in
inc
add
adc
je
popa
imul
jo
imul
gs
push
push
orb
adc
add
or
or
outsl
bound
arpl
popa
jo
push
orb
addb
adc
dec
push
outsl
bound
arpl
popa
jo
jb
imul
inc
add
push
add
or
push
arpl
popa
jo
js
jae
push
orb
inc
add
or
bound
arpl
popa
jo
outsb
fs
push
push
orb
pushf
inc
add
or
bound
arpl
popa
jo
imul
add
add
or
bound
arpl
popa
jo
outsb
push
push
push
orb
cld
inc
add
or
bound
arpl
popa
jo
outsb
je
push
push
orb
xor
add
add
arpl
popa
jo
jne
fs
push
orb
aam
add
or
aam
outsl
bound
arpl
popa
jo
je
or
add
add
or
test
arpl
popa
jo
outsb
orb
js
add
verr
outsl
bound
arpl
popa
jo
outsb
push
jb
push
orb
sarb
add
add
cmp
bound
arpl
popa
jo
gs
push
push
orb
call
add
outsl
bound
arpl
popa
jo
popa
outsb
push
push
push
orb
lock
add
adc
rolb
outsl
bound
arpl
popa
jo
gs
push
gs
push
push
orb
mov
add
xor
bound
arpl
popa
jo
popa
outsb
push
popa
outsb
orb
test
and
dec
jmp
bound
arpl
popa
jo
jae
inc
jo
popa
jb
outsb
je
outsb
je
jb
arpl
outsb
jae
push
incl
jae
inc
jo
popa
jb
outsb
je
outsb
je
jb
arpl
outsb
jae
push
push
orb
mov
add
push
outsl
bound
arpl
popa
jo
popa
imul
dec
inc
add
pop
add
sub
popa
imul
add
sub
add
bound
arpl
popa
jo
push
jb
gs
push
push
push
ljmp
add
outsl
ja
popa
jb
gs
orb
andb
add
add
in
outsl
bound
arpl
popa
jo
popa
jb
gs
jo
arpl
jns
orb
in
xor
add
bound
arpl
popa
jo
popa
jb
gs
imul
popa
imul
or
add
cmp
add
add
jae
popa
jo
outsl
push
imul
imul
or
add
inc
add
adc
and
jo
outsl
dec
outsl
arpl
fs
bound
arpl
orb
mov
add
sbb
bound
arpl
popa
jo
jb
push
arpl
dec
jb
push
ja
push
push
push
inc
inc
add
or
add
push
arpl
add
jl
add
sbb
fcomps
arpl
jae
jb
arpl
outsb
dec
imul
jae
je
outsl
outsb
push
push
orb
mov
add
sbb
xchg
arpl
jae
jb
arpl
outsb
dec
imul
imul
add
add
push
add
jae
jb
arpl
outsb
dec
imul
je
push
push
orb
push
dec
add
pop
add
jae
jb
arpl
outsb
dec
imul
outsb
popa
jo
pushl
les
imul
jae
push
push
orb
jl
add
pop
add
jae
jb
arpl
outsb
dec
imul
arpl
or
add
add
or
or
ja
insb
popa
outsb
popa
jb
push
incl
add
add
jecxz
inc
jb
ja
insb
popa
outsb
popa
jb
add
add
dec
cmp
add
add
fs
ja
outsb
addr16
imul
aam
add
or
jo
jb
ja
outsb
addr16
imul
add
sub
add
push
cmp
arpl
outsl
imul
dec
popa
je
push
push
in
add
sbb
push
add
out
jo
imul
inc
jno
popa
insb
push
push
ljmp
add
or
in
jo
imul
je
push
incl
add
add
jp
imul
je
push
ljmp
add
push
add
mov
popa
insb
push
push
in
add
jo
add
adc
outsl
imul
push
insb
gs
outsb
arpl
push
push
inc
inc
add
adc
inc
mov
jb
push
imul
gs
outsb
arpl
in
add
mov
add
popa
jbe
jb
addr16
lcall
ljmp
jo
jbe
jb
addr16
je
cmp
mov
imul
je
in
add
orb
or
mov
popa
je
push
outsl
imul
add
add
or
shlb
gs
je
inc
jb
insl
gs
incl
add
add
jne
dec
jb
imul
cld
aaa
add
push
add
inc
jo
inc
js
jae
push
decl
dec
add
push
add
js
jae
push
in
add
inc
sub
inc
movsb
arpl
popa
je
push
outsl
jo
jb
insl
gs
push
in
add
orb
adc
xor
je
inc
jb
outsb
je
jb
insl
gs
add
adc
add
adc
mov
arpl
popa
je
push
imul
insl
add
add
adc
add
add
jbe
arpl
dec
popa
je
push
push
mov
add
stc
jo
push
arpl
dec
popa
je
dec
or
add
or
dec
outsl
imul
fs
dec
push
push
push
dec
or
add
or
jb
popa
je
inc
popa
arpl
jns
push
push
jmp
add
lldt
bound
jb
popa
arpl
jns
popa
insl
gs
dec
dec
add
or
push
pop
jo
inc
popa
arpl
jns
push
push
dec
or
add
or
sub
gs
arpl
insl
insl
popa
outsb
fs
mov
add
bound
jb
outsl
insl
insl
popa
outsb
fs
popa
insl
gs
dec
or
add
push
add
gs
arpl
insl
insl
popa
outsb
fs
gs
push
incl
add
adc
cmp
bound
jb
outsl
insl
insl
popa
outsb
fs
gs
popa
insl
gs
push
dec
or
add
add
ret
sahf
jne
outsl
dec
or
add
add
mov
dec
or
add
push
add
jae
je
outsl
insl
insl
popa
outsb
fs
jo
arpl
imul
push
incl
add
push
add
inc
outsl
insl
insl
popa
outsb
fs
jo
arpl
imul
push
dec
or
add
and
pop
cmp
imul
insl
insl
popa
outsb
fs
jo
arpl
imul
arpl
dec
gs
push
call
add
ret
je
push
push
jne
dec
or
add
or
cld
lea
je
jo
imul
jmp
add
or
xchg
xchg
je
dec
jo
imul
decl
adc
dec
outsb
imul
dec
add
or
lods
call
jo
imul
jmp
pop
sub
jb
popa
insb
jne
call
add
outsl
dec
outsb
imul
add
inc
add
adc
xor
gs
outsl
insl
insl
popa
outsb
fs
imul
insl
jae
lcall
dec
add
or
ret
bound
jb
popa
jb
insl
jae
dec
or
add
adc
push
test
popa
je
popa
jae
inc
outsl
insl
insl
popa
outsb
fs
push
push
dec
or
add
adc
dec
push
outsb
outsl
outsb
push
gs
popa
je
outsb
addr16
outsl
insl
insl
popa
outsb
fs
jl
add
or
bound
jb
outsl
insl
insl
popa
outsb
fs
push
push
dec
or
add
sbb
fimuls
insb
popa
jae
inc
outsl
insl
insl
popa
outsb
fs
gs
jae
outsl
outsb
push
je
jb
dec
or
add
push
add
insb
popa
jae
inc
outsl
insl
insl
popa
outsb
fs
gs
jae
outsl
outsb
inc
outsb
fs
push
add
add
fmull
add
add
pop
arpl
insl
popa
outsb
fs
pushl
add
outsl
insl
insl
popa
outsb
fs
dec
push
lods
or
add
adc
fidivrl
inc
imul
insl
dec
dec
lods
or
add
adc
rcl
imul
outsb
je
imul
push
push
call
dec
add
sbb
mov
je
dec
outsb
arpl
insl
outsb
je
fs
imul
or
add
push
add
push
outsl
insl
jo
arpl
je
push
push
decl
add
dec
jne
inc
push
cld
inc
add
adc
outsl
jo
jae
jb
imul
popa
insl
lods
or
add
adc
cld
jne
gs
imul
jb
insl
push
popa
je
push
cmp
add
xchg
sub
inc
jne
insb
push
popa
je
lods
or
add
ltr
addr16
jo
outsb
inc
imul
inc
dec
add
or
ret
jae
jb
imul
incl
add
imul
insb
je
jb
push
add
add
adc
add
or
mov
insb
gs
jae
gs
push
push
incl
inc
add
push
add
int3
jo
inc
imul
insl
dec
dec
push
push
adc
add
fmuls
add
xchg
cmpsl
dec
dec
outsl
imul
addr16
push
add
in
add
ltr
je
jb
inc
gs
jne
je
push
cmp
add
push
add
bound
jb
push
jb
jne
push
push
adc
add
mov
add
adc
or
outsl
bound
js
outsl
jb
push
arpl
gs
popa
arpl
pushl
add
or
ret
inc
jo
arpl
gs
popa
arpl
adc
add
shlb
add
bound
js
outsl
jb
push
jb
je
dec
je
inc
imul
lcall
add
jo
jb
je
dec
je
inc
imul
add
push
inc
add
adc
and
outsl
bound
js
outsl
jb
dec
jb
outsb
je
je
outsl
outsb
inc
push
add
adc
dec
je
bound
jb
jb
outsb
je
je
outsl
outsb
adc
add
nop
dec
add
adc
lret
je
inc
js
outsl
jb
inc
imul
push
push
jmp
mov
jo
jae
jb
imul
push
push
adc
add
dec
inc
add
adc
hlt
xchg
imul
outsb
dec
outsb
dec
insl
jo
jb
clc
push
add
or
dec
outsl
imul
outsl
jb
push
push
push
adc
add
sub
add
adc
xchg
data16
ja
push
arpl
gs
outsl
dec
gs
jb
call
add
jo
arpl
gs
outsl
dec
gs
jb
push
push
adc
add
movsb
dec
add
adc
ja
push
gs
gs
outsl
jb
popa
insb
jae
je
insb
gs
push
push
add
add
adc
add
or
dec
pop
jae
je
imul
decl
add
gs
imul
push
add
lods
inc
add
adc
adc
dec
outsl
imul
jb
inc
popa
je
bound
gs
add
add
add
or
leave
out
jb
jbe
jae
outsl
outsb
je
add
sub
add
or
jnp
je
insb
gs
outsb
arpl
push
push
call
inc
add
add
sbb
jo
outsl
insb
je
add
enter
lldt
arpl
jb
outsb
je
imul
decl
add
adc
test
jo
jae
jb
jne
jb
outsb
je
imul
push
add
aam
add
adc
fs
arpl
jb
outsb
je
imul
imul
ljmp
add
pop
add
dec
jo
jae
jb
jne
jb
outsb
je
imul
imul
push
add
jae
popa
jb
jne
push
gs
jo
popa
je
push
call
add
or
bound
jb
gs
jo
popa
je
push
push
push
pushl
add
verw
insb
bound
jb
imul
je
gs
lcall
add
dec
jae
gs
jo
popa
je
push
push
je
add
cmp
add
add
je
inc
insb
insb
push
push
push
je
add
clc
push
add
pop
add
gs
gs
js
add
adc
xchg
fmull
push
jne
jb
push
popa
jbe
inc
push
jae
push
je
add
mov
add
add
addr16
outsl
jo
outsb
je
add
dec
dec
add
or
xor
outsl
jo
outsb
push
gs
jo
popa
je
je
add
les
add
add
jae
jbe
inc
jae
push
je
add
nop
dec
add
lldt
imul
outsb
je
insb
push
popa
jbe
push
je
add
adc
or
xchg
js
imul
je
push
je
add
aam
add
or
iret
bound
insb
gs
js
outsl
jb
push
push
je
add
or
add
testl
imul
push
decl
mov
push
arpl
push
add
dec
push
add
push
add
jns
outsl
inc
insb
imul
inc
outsl
insl
insl
popa
outsb
fs
push
je
add
mov
adc
test
jo
jae
gs
jb
insl
inc
insb
imul
push
push
je
add
insb
inc
add
or
call
fs
bound
arpl
je
add
add
add
add
stos
popa
fs
bound
arpl
push
je
add
xor
add
or
gs
outsl
jbe
dec
bound
arpl
push
push
je
add
cmp
add
or
outsl
dec
addr16
bound
arpl
push
je
add
sbb
add
adc
in
das
addr16
gs
arpl
dec
bound
arpl
push
je
add
fmuls
add
add
popa
je
dec
bound
arpl
jae
je
add
call
add
mov
inc
jne
jbe
jae
push
lcall
add
or
mov
jb
gs
imul
add
jo
add
sbb
adc
arpl
arpl
popa
je
inc
jne
jbe
dec
jb
outsb
je
je
outsl
outsb
jae
push
incl
add
adc
or
jo
dec
jb
outsb
je
je
outsl
outsb
dec
imul
push
add
fs
add
add
cmp
imul
push
add
push
add
push
outsb
jne
gs
push
je
add
mov
add
pop
add
insb
popa
je
push
je
add
mov
add
ja
jne
jae
je
push
je
add
inc
push
add
or
and
arpl
insb
push
push
push
je
add
movsb
push
add
add
out
insb
outsl
arpl
push
add
in
dec
add
or
in
imul
dec
outsl
arpl
je
add
and
add
or
add
jne
insb
outsl
arpl
jne
jae
je
push
add
and
add
add
mov
gs
insb
arpl
insb
push
je
add
cwtl
and
add
add
imul
gs
arpl
outsb
push
je
add
test
add
or
gs
arpl
jae
bound
push
push
je
add
loopne
add
or
fnstenv
gs
arpl
insl
gs
cld
push
add
or
adc
jae
jb
popa
insl
gs
add
in
add
add
outsb
imul
faddl
add
add
imul
je
push
outsb
imul
add
add
or
std
addr16
jne
je
outsb
imul
push
add
adc
inc
pushf
jo
jae
jb
gs
jne
je
outsb
imul
add
fs
adc
cmc
arpl
gs
outsb
push
outsb
imul
push
push
push
pushl
pop
jo
arpl
gs
outsb
push
outsb
imul
push
push
je
add
enter
sbb
jle
jae
popa
insb
gs
outsb
dec
insl
jo
jb
inc
imul
je
outsb
imul
rclb
adc
mov
popa
insb
gs
outsb
dec
insl
jo
jb
push
outsb
imul
nop
cmp
add
add
pop
jne
imul
dec
popa
bound
push
decl
dec
add
or
dec
sbb
jae
jb
popa
bound
push
push
je
add
mov
add
addr16
bound
arpl
jns
gs
ljmp
add
je
insb
gs
push
add
in
add
repnz
dec
outsl
imul
push
je
insb
gs
fmuls
add
mov
add
add
outsl
insb
outsl
jb
push
push
fmuls
add
add
add
or
in
mov
gs
outsl
insb
outsl
jb
jl
add
or
cmpsb
jo
jae
jb
outsl
insb
outsl
jb
push
fmuls
add
les
add
add
mov
outsl
jbe
push
jo
push
fmuls
add
int3
add
or
int3
popf
insl
outsl
jbe
inc
outsl
ja
je
add
sub
add
add
fs
je
insb
gs
in
push
add
pop
add
xlat
jo
push
je
insb
gs
je
add
sbbb
or
jle
imul
jns
gs
push
push
jmp
xor
add
jae
jb
je
insb
gs
popa
insl
gs
push
push
jmp
add
add
je
dec
dec
outsl
je
outsl
jne
fs
add
or
add
std
push
outsb
gs
je
fs
bound
arpl
outsb
push
push
je
insb
gs
pushl
pop
add
or
gs
jo
outsb
push
je
add
enter
adc
dec
push
jae
jns
gs
imul
gs
push
push
je
add
les
add
add
cltd
jae
jns
gs
imul
gs
push
push
add
add
and
aas
jbe
outsl
insl
gs
jns
popa
je
bound
gs
call
add
adc
nop
cmpsb
jo
inc
outsl
insl
gs
jns
popa
je
bound
gs
push
add
add
in
push
add
add
xor
je
jae
lcall
add
add
bound
jb
gs
add
add
fs
add
push
add
push
addr16
outsl
addr16
push
decl
pop
add
or
and
jb
outsl
add
add
test
add
add
fs
insb
outsl
addr16
push
pop
add
or
popf
in
jae
jb
outsl
dec
outsl
addr16
push
push
add
add
cmp
add
add
push
gs
push
outsl
inc
insb
imul
push
jmp
add
or
clts
bound
jb
gs
add
add
or
add
add
xchg
arpl
popa
je
dec
imul
add
sbb
pop
add
jae
outsl
outsb
push
incl
add
or
loop
jo
jae
jb
gs
imul
insb
inc
add
or
dec
sbb
jo
jb
inc
popa
je
push
push
jmp
add
add
les
jae
jb
js
imul
push
add
add
pop
push
add
or
ffreep
insb
popa
jne
arpl
gs
jo
push
add
add
nop
dec
add
add
pop
jp
js
je
sldt
lock
add
adc
dec
outsl
imul
outsb
imul
je
imul
cmp
add
hlt
inc
add
add
xchg
mov
outsl
popa
mov
pop
add
adc
in
cmpsl
dec
dec
outsl
imul
gs
outsb
je
adc
add
add
or
hlt
push
dec
dec
outsl
imul
push
push
add
add
and
add
push
add
addr16
popa
arpl
dec
inc
fs
push
dec
pop
add
pop
add
bound
inc
popa
arpl
push
add
add
sbb
add
add
push
je
jb
push
je
push
add
add
orb
or
or
outsb
fs
je
adc
add
add
add
pop
addr16
outsb
addr16
push
push
push
push
pop
add
or
and
dec
dec
outsl
imul
clc
inc
add
pop
add
fs
push
push
add
push
add
dec
outsl
imul
gs
push
push
pop
add
or
gs
popa
imul
fs
push
push
push
pop
add
or
ljmp
popa
insl
inc
fs
adc
add
add
or
popf
adc
outsl
imul
add
in
add
adc
pop
xlat
dec
dec
outsl
imul
jne
je
outsl
outsb
dec
imul
movsb
cmp
add
add
cmp
push
gs
jo
jb
jb
push
call
cmpsl
das
jo
jae
gs
jo
jb
jb
xchg
adc
add
add
orl
imul
bound
arpl
adc
add
cmp
lcall
jb
gs
jb
outsb
je
je
outsl
outsb
clc
adc
add
pop
add
pop
add
cmp
imul
incl
inc
adc
jo
gs
adc
add
add
add
cmc
loop
gs
insl
pushl
push
add
adc
leave
sbb
outsl
jb
popa
insb
imul
popa
insl
gs
jb
adc
add
pop
loope
dec
outsl
imul
outsl
jne
fs
insl
popa
addr16
pop
adc
add
add
add
imul
gs
call
add
pop
add
enter
fs
push
rclb
add
add
or
dec
outsl
imul
jb
insb
push
push
push
rclb
add
add
add
addr16
outsl
imul
rcrb
add
jo
outsl
imul
add
adc
outsl
outsb
je
outsl
insb
push
push
fcoms
add
jo
imul
jb
insb
push
push
push
rclb
add
add
or
movsb
push
imul
jmp
xor
add
add
jae
bound
push
push
push
jmp
add
or
andl
push
popa
jb
gs
js
add
adc
jmp
bound
jb
popa
jb
gs
jb
jo
jb
jns
push
incl
pop
add
or
fists
jo
outsl
jne
arpl
lcall
add
add
bound
jb
outsl
jne
arpl
jb
jo
jb
jns
push
incl
add
ja
push
popa
jns
push
rclb
add
dec
add
push
add
imul
outsb
je
push
push
and
add
in
pop
add
adc
rorl
dec
outsl
imul
gs
outsl
outsb
je
outsl
insb
push
push
mov
add
pusha
pusha
add
adc
add
dec
dec
outsl
imul
jb
jae
inc
popa
jb
push
push
in
adc
add
pop
add
or
dec
outsl
imul
outsl
outsb
push
push
push
in
adc
add
add
push
add
push
popa
arpl
gs
push
cld
dec
add
or
inc
outsl
jo
jae
arpl
gs
push
push
push
adc
add
pop
add
adc
lahf
insl
dec
dec
outsl
imul
popa
imul
add
cmp
add
add
popa
arpl
gs
popa
bound
push
ljmp
add
push
add
jo
jae
jb
arpl
gs
popa
bound
push
adc
add
add
sub
gs
outsl
jne
inc
arpl
gs
popa
bound
push
call
push
add
push
add
mov
bound
jb
jb
jbe
outsl
jne
inc
arpl
gs
popa
bound
mov
add
hlt
push
add
or
ss
dec
outsl
imul
gs
mov
add
pop
dec
add
pop
add
stos
arpl
arpl
fs
incl
add
out
dec
jae
push
fs
push
sbb
add
xor
push
je
je
inc
jne
je
outsb
push
jmp
pop
add
push
add
jne
push
push
jl
add
test
add
cmp
dec
dec
outsl
imul
jne
je
outsb
push
loopne
add
inc
push
add
adc
sti
pop
dec
dec
outsl
imul
fs
jne
je
outsb
push
push
push
decl
add
pop
add
je
jbe
push
inc
push
add
dec
pusha
add
adc
add
imul
je
inc
imul
test
add
pop
popa
add
xchg
outsl
imul
popa
outsb
gs
push
test
add
lock
add
add
jns
outsl
arpl
lcall
add
or
cld
push
jb
outsl
arpl
push
push
or
add
int3
pop
add
or
dec
outsl
imul
jne
push
push
push
or
add
push
add
add
dec
outsb
jo
je
or
add
mov
add
push
add
popa
arpl
popa
je
inc
insb
jns
jne
push
push
or
add
mov
add
cmp
je
jbe
je
dec
outsb
insb
imul
add
xor
add
or
xor
fs
popa
insb
push
outsl
imul
fsubs
add
add
sub
jae
jb
arpl
popa
insb
push
outsl
imul
pop
add
mov
cmp
lret
outsl
imul
arpl
je
outsb
jo
je
pop
add
jo
add
or
xchg
dec
outsb
jne
gs
arpl
insb
jne
aam
add
inc
arpl
add
int
dec
dec
outsl
imul
jb
gs
dec
outsb
jo
je
pop
add
mov
add
imul
push
popa
insb
jne
cmp
add
add
add
push
aas
dec
dec
outsl
imul
gs
outsb
je
addr16
gs
dec
outsb
jo
je
sbb
add
aas
add
adc
push
sahf
dec
dec
outsl
imul
gs
dec
outsb
jo
je
push
pushf
sbb
add
add
or
inc
add
imul
gs
push
call
push
mov
jo
popa
insb
jne
push
add
add
mov
cmp
imul
add
push
add
push
add
je
js
imul
dec
pop
add
adc
lods
cmp
inc
imul
jae
push
imul
les
add
cmp
imul
je
gs
popa
outsb
gs
push
enter
mov
add
adc
push
outsb
jb
imul
insb
insb
bound
imul
decl
add
adc
cmp
popa
je
push
popa
outsb
gs
inc
jne
arpl
sbb
add
inc
add
or
das
pop
imul
push
imul
jl
add
or
xor
jo
gs
imul
sbb
add
add
pmaddwd
outsl
ja
sbb
add
add
adc
jb
outsb
jne
push
gs
arpl
dec
bound
arpl
push
lcall
add
adc
dec
adc
push
gs
arpl
dec
bound
arpl
enter
movsb
pop
add
adc
mov
push
gs
arpl
push
outsl
imul
ljmp
push
add
adc
fwait
or
dec
jne
push
gs
arpl
push
outsl
imul
sbb
add
pop
add
or
cmpsb
clc
push
outsb
addr16
push
push
push
lcall
add
ret
jo
popa
jae
outsb
addr16
push
push
enter
sub
add
or
sub
push
popa
imul
incl
pusha
add
or
xchg
push
jo
popa
jae
popa
imul
add
fs
divb
dec
popa
imul
jb
jo
jb
imul
pushl
add
sbb
xchg
ja
push
push
imul
jb
jo
jb
imul
add
jecxz
jne
gs
imul
push
cld
dec
add
or
movsl
cmpsl
jo
jae
inc
imul
enter
or
cmp
outsl
bound
arpl
jo
push
push
enter
sub
add
or
into
les
jns
gs
popa
insl
gs
push
push
enter
push
add
push
jae
jns
gs
gs
outsl
insb
outsl
jb
push
push
jl
add
or
bound
jb
gs
outsl
insb
outsl
jb
push
push
enter
cwtl
pusha
add
or
pop
aad
je
insb
gs
popa
jb
gs
ljmp
add
or
je
insb
gs
popa
jb
gs
sbb
add
bound
add
add
arpl
outsl
jne
imul
lcall
dec
aas
jo
inc
outsl
js
push
push
enter
push
pop
add
pop
add
push
arpl
jb
arpl
outsl
jne
imul
enter
sub
add
add
push
jb
imul
add
pusha
arpl
add
add
gs
add
sub
add
add
dec
gs
outsb
fs
push
ljmp
add
or
scas
repz
gs
outsb
fs
sbb
add
pop
add
or
push
frstor
imul
pushl
loop
bound
jb
push
push
push
jmp
add
or
mov
jb
gs
popa
insb
jne
ljmp
xor
popa
jb
outsb
imul
adc
dec
outsl
imul
and
jb
jb
push
push
push
add
outsl
imul
jb
popa
arpl
add
outsl
imul
gs
popa
arpl
push
adc
dec
dec
outsl
imul
insb
gs
imul
dec
dec
outsl
imul
insb
gs
bound
arpl
dec
dec
outsl
imul
and
je
jb
popa
arpl
push
pop
add
outsl
imul
outsb
gs
and
je
jb
popa
arpl
push
push
push
add
outsl
imul
jb
and
je
jb
popa
arpl
add
outsl
imul
adc
dec
dec
outsl
imul
outsb
popa
je
inc
jb
insl
gs
push
push
or
dec
dec
outsl
imul
add
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
dec
outsb
je
jb
popa
arpl
add
outsl
imul
fs
dec
inc
outsl
outsb
je
imul
dec
outsl
imul
imul
push
str
outsl
imul
push
outsl
imul
add
outsl
imul
push
add
outsl
imul
push
arpl
dec
dec
outsl
imul
push
arpl
jae
push
add
outsl
imul
dec
imul
outsl
imul
outsb
addr16
outsl
js
push
push
adc
imul
je
gs
insl
push
imul
add
outsl
imul
inc
push
push
push
adc
dec
dec
outsl
imul
push
imul
sbb
imul
jb
inc
popa
arpl
jns
dec
outsb
je
jb
popa
arpl
pop
add
outsl
imul
imul
gs
popa
arpl
push
push
adc
dec
dec
outsl
imul
outsb
je
jb
popa
arpl
add
outsl
imul
outsb
je
jb
popa
arpl
add
outsl
imul
dec
outsb
je
jb
popa
arpl
push
push
str
outsl
imul
inc
imul
dec
dec
outsl
imul
dec
popa
je
or
imul
fs
dec
push
adc
dec
dec
outsl
imul
jae
gs
dec
dec
push
push
or
dec
dec
outsl
imul
addr16
push
adc
dec
dec
outsl
imul
jb
inc
popa
je
bound
gs
push
sbb
dec
dec
outsl
imul
push
je
insb
and
je
jb
popa
arpl
adc
imul
outsb
imul
je
imul
dec
dec
outsl
imul
gs
outsb
je
push
or
dec
dec
outsl
imul
or
dec
dec
outsl
imul
or
dec
dec
outsl
imul
adc
dec
dec
outsl
imul
jne
je
outsl
outsb
dec
imul
dec
dec
outsl
imul
bound
arpl
push
push
add
outsl
imul
jb
outsb
je
je
outsl
outsb
and
je
jb
popa
arpl
add
outsl
imul
outsl
jne
fs
insl
popa
and
je
jb
popa
arpl
pop
add
outsl
imul
jb
insb
and
je
jb
popa
arpl
push
push
sbb
dec
dec
outsl
imul
gs
outsl
outsb
je
outsl
insb
and
je
jb
popa
arpl
push
sbb
dec
dec
outsl
imul
jb
jae
inc
popa
jb
dec
outsb
je
jb
popa
arpl
push
push
pop
add
outsl
imul
outsl
outsb
and
je
jb
popa
arpl
push
push
sbb
dec
dec
outsl
imul
popa
imul
je
jb
popa
arpl
add
outsl
imul
gs
and
je
jb
popa
arpl
add
outsl
imul
jne
je
outsb
and
je
jb
popa
arpl
sbb
dec
dec
outsl
imul
jne
je
outsb
and
je
jb
popa
arpl
sbb
dec
dec
outsl
imul
fs
jne
je
outsb
and
je
jb
popa
arpl
push
push
sbb
dec
dec
outsl
imul
je
inc
imul
outsb
je
jb
popa
arpl
push
sbb
dec
dec
outsl
imul
popa
outsb
gs
and
je
jb
popa
arpl
pop
add
outsl
imul
jne
and
je
jb
popa
arpl
push
push
push
add
outsl
imul
arpl
je
outsb
jo
je
dec
outsb
je
jb
popa
arpl
add
outsl
imul
jb
gs
dec
outsb
jo
je
dec
outsb
je
jb
popa
arpl
add
outsl
imul
gs
outsb
je
addr16
gs
dec
outsb
jo
je
dec
outsb
je
jb
popa
arpl
add
outsl
imul
gs
dec
outsb
jo
je
dec
outsb
je
jb
popa
arpl
push
adc
dec
dec
outsl
imul
je
jb
popa
arpl
add
outsl
imul
insb
gs
imul
and
je
jb
popa
arpl
add
outsl
imul
je
gs
popa
outsb
gs
and
je
jb
popa
arpl
sbb
or
add
sbbb
or
add
sbbb
or
or
or
sbb
add
add
add
jg
add
add
add
jg
add
add
add
sbbb
add
sbb
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
inc
or
or
enter
sbb
jg
add
add
add
jg
add
add
add
add
add
sbb
adc
add
sbbb
add
sbb
jg
add
add
add
jg
add
add
add
add
add
inc
loopne
add
sbb
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
inc
add
add
inc
push
add
sbb
jg
add
add
add
jg
add
add
pop
add
sbb
add
add
add
pop
add
sbb
add
add
add
pop
add
sbb
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
or
add
add
inc
mov
add
sbb
or
add
add
inc
cwtl
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
add
inc
pop
add
sbbb
add
sbb
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
add
inc
push
add
sbbb
adc
add
sbbb
add
sbb
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
or
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
or
jg
add
add
add
jg
add
add
or
jg
add
add
add
jg
add
add
push
add
sbb
jg
add
add
add
jg
add
add
add
sbbb
add
sbb
jg
add
add
add
jg
add
add
push
add
sbb
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
add
add
gs
je
and
and
inc
dec
and
jb
imul
xor
xor
xor
popa
je
push
jne
and
outsb
and
xor
xor
cmp
xor
xor
and
xor
cmp
adc
cmp
inc
dec
push
push
adc
imul
add
add
add
add
add
call
or
add
add
xor
add
add
add
sbb
add
add
add
pushl
add
add
add
add
add
add
dec
add
add
add
movsb
add
add
add
sbb
sbb
sbb
push
add
inc
add
add
add
addb
add
add
add
add
sbb
sbb
and
push
add
inc
add
add
add
cwtl
add
add
add
or
add
and
add
sbb
sbb
and
push
add
inc
add
add
add
mov
add
sub
add
and
add
sbb
sbb
sub
push
add
inc
add
add
add
lock
add
add
and
add
sbb
sbb
sub
push
add
inc
add
add
add
or
add
orb
or
add
and
add
addb
add
xor
push
add
inc
add
add
add
add
add
add
add
push
add
add
addb
add
xor
push
add
inc
push
add
add
add
add
xchg
push
add
or
add
and
pop
add
add
addb
add
cmp
push
add
inc
pop
add
add
add
add
hlt
push
add
or
add
and
or
sbb
sbb
cmp
push
add
inc
or
add
add
jo
add
clc
push
add
or
add
and
or
sbb
sbb
inc
add
inc
or
add
add
test
add
rcrb
or
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
xor
add
add
add
and
or
sbb
sbb
dec
add
inc
or
add
add
or
add
sbb
or
add
and
or
sbb
sbb
dec
add
add
add
add
add
add
cmpb
add
add
add
or
addb
add
push
add
add
add
add
add
add
xorb
add
add
and
push
add
add
addb
add
push
add
inc
push
add
add
add
add
add
add
or
add
and
ltr
add
addb
add
pop
add
inc
sldt
add
add
add
add
add
and
adc
sbb
sbb
pop
add
inc
adc
add
add
or
add
in
add
or
add
sbb
adc
sbb
sbb
pusha
add
or
add
add
add
add
add
add
addb
add
add
adc
add
add
add
add
lods
or
or
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
push
dec
add
adcb
fcoml
add
push
add
movsb
pop
add
loopne
add
add
add
sub
add
push
pop
add
mov
mov
pop
add
add
add
pop
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
aam
add
clc
add
add
add
inc
add
add
add
add
add
sbb
sbb
sbb
mov
or
add
add
ljmp
add
add
add
add
andb
add
add
add
add
xorb
xor
add
or
or
xor
add
mov
add
test
add
or
add
push
add
add
add
addb
add
and
xchg
add
inc
add
add
add
andb
add
add
add
add
adc
add
add
add
pop
add
sub
add
add
add
pop
add
addb
add
add
add
push
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
mov
push
add
or
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
add
cmp
incl
add
add
add
adcb
add
add
inc
add
add
add
or
add
insb
push
add
or
add
and
push
add
add
addb
add
xor
push
add
inc
push
add
add
add
push
add
or
add
xor
pop
add
add
addb
add
cmp
pop
add
inc
pop
add
add
add
add
or
add
add
add
cwtl
add
add
push
add
or
add
and
or
sbb
sbb
cmp
push
add
inc
or
add
add
fadds
add
mov
add
add
or
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
inc
add
inc
or
add
add
add
add
fmuls
add
or
add
sbb
or
sbb
sbb
dec
add
or
add
add
add
add
sbb
sbb
dec
add
or
add
add
add
or
addb
add
push
add
add
add
add
add
add
andb
add
add
add
add
add
add
addb
add
push
add
or
add
add
add
ltr
add
addb
add
pop
add
inc
sldt
add
add
adc
add
add
add
add
add
add
addb
add
pop
add
or
add
add
add
adc
sbb
sbb
pusha
add
add
add
add
add
add
add
add
add
add
and
adc
sbb
sbb
add
add
add
add
add
add
xor
add
add
add
sbb
adc
sbb
sbb
push
add
add
add
add
adc
sbb
sbb
insb
add
add
add
add
add
add
cmpb
add
add
add
or
or
add
add
clc
add
add
add
add
add
cmp
adc
addb
add
jo
add
add
add
add
add
add
xorb
add
or
or
add
add
or
or
add
add
and
push
add
add
addb
add
je
push
add
inc
push
add
add
add
add
add
add
or
add
and
pop
add
add
addb
add
js
push
add
inc
pop
add
add
add
add
add
das
add
or
add
and
sbb
sbb
sbb
jl
push
add
inc
sbb
add
add
sbb
add
loopne
add
or
add
and
sbb
sbb
sbb
addb
add
inc
sbb
add
add
cmp
add
add
add
or
add
and
sbb
sbb
sbb
test
push
add
inc
sbb
add
add
push
add
add
add
add
add
sbb
sbb
sbb
mov
xchg
add
inc
sbb
add
add
pusha
add
add
add
add
add
push
xor
add
push
add
cmpb
add
add
inc
xor
add
add
add
sbb
sbb
sbb
mov
push
add
inc
sbb
add
add
call
xor
add
and
sbb
addb
add
nop
add
inc
sbb
add
add
mov
add
or
add
sbb
push
add
add
addb
add
xchg
add
or
add
add
add
add
add
add
addb
add
cwtl
add
or
add
add
add
and
sbb
sbb
pushf
add
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
mov
inc
and
add
add
rolb
add
add
or
add
and
and
sbb
sbb
movsb
add
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
test
dec
add
inc
and
add
add
add
add
nop
add
or
add
and
and
sbb
sbb
lods
add
add
add
add
add
add
cmp
incl
add
add
and
addb
add
mov
dec
add
inc
and
add
add
rolb
add
add
or
add
and
add
add
addb
add
mov
inc
add
add
add
add
add
add
cmp
incl
add
add
daa
add
add
addb
add
mov
inc
add
add
add
add
add
add
add
sub
sbb
sbb
mov
add
add
add
add
add
cmp
incl
add
add
sub
sbb
sbb
rolb
add
inc
sub
add
add
and
add
pushf
xor
add
add
add
sub
sbb
sbb
les
dec
add
inc
sub
add
add
cwtl
add
add
add
add
add
sub
sbb
sbb
enter
or
add
add
js
add
pushf
or
add
add
add
sub
sbb
sbb
int3
add
inc
sub
add
add
js
add
pushf
or
add
add
add
sub
addb
add
rolb
push
add
inc
sub
add
add
pushf
or
add
add
add
add
add
addb
add
aam
inc
add
add
add
add
add
add
and
add
add
add
and
das
add
add
addb
add
fadds
inc
add
add
add
add
add
add
cmp
incl
add
add
xor
sbb
sbb
faddl
dec
add
inc
das
add
add
add
add
add
cmp
add
add
add
xor
sbb
sbb
loopne
push
add
inc
xor
add
add
fadds
add
push
cmp
add
add
add
add
add
add
addb
add
in
pop
add
inc
xor
add
add
or
or
add
add
or
add
mov
add
or
add
sbb
xor
sbb
sbb
call
add
add
add
add
xor
sbb
sbb
in
add
add
add
add
add
add
cmp
incl
add
add
xor
addb
add
lock
inc
xor
add
add
or
add
fdivrl
add
or
add
and
add
add
addb
add
hlt
add
add
add
add
add
add
cmp
incl
add
add
aaa
add
add
addb
add
clc
add
inc
add
add
add
add
add
cmp
add
add
add
cmp
sbb
sbb
cld
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
add
dec
add
inc
cmp
add
add
add
add
nop
add
or
add
sbb
cmp
sbb
sbb
add
xor
or
add
add
add
cmp
sbb
sbb
or
dec
add
inc
cmp
add
add
cwtl
add
add
add
or
add
dec
add
sbb
sbb
or
test
or
add
add
jmp
add
incl
cmp
add
add
add
add
xorb
add
add
add
add
add
add
add
cmp
addb
add
adc
test
or
add
add
jmp
add
incl
cmp
add
add
add
add
addb
add
add
add
add
add
add
or
add
dec
add
add
add
addb
add
adc
test
or
add
add
jmp
add
incl
cmp
add
add
add
add
sbbb
xor
add
or
add
je
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
add
xor
add
pop
push
add
pop
push
add
orb
add
sldt
mov
sldt
lock
adc
add
sub
add
inc
adc
add
add
xchg
adc
add
adc
add
adc
add
add
mov
add
xor
add
fsubrs
add
mov
xor
add
add
inc
xor
add
shlb
add
adc
add
xor
add
xor
add
jo
add
jo
add
movsb
add
movsb
add
in
add
in
add
or
add
or
add
sub
add
fs
add
mov
add
lods
aaa
add
int3
aaa
add
cld
aaa
add
cld
aaa
add
sub
add
cmp
add
add
sarb
add
cmp
add
cmp
add
add
adc
add
xor
add
dec
cmp
add
add
inc
cmp
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
mov
add
movsb
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
xor
add
add
pushf
add
add
add
add
add
add
add
add
add
pop
add
add
movsb
add
add
in
add
add
xor
add
pop
push
add
jl
add
mov
push
add
call
pop
add
xor
add
push
pop
add
js
add
test
add
rolb
add
pop
add
or
add
sub
add
push
or
add
add
or
add
or
add
add
or
add
add
add
sbb
sbb
xor
push
add
inc
add
add
add
nop
add
add
or
add
add
add
add
sbb
sbb
xor
dec
add
inc
add
add
add
cwtl
add
add
or
add
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
cwtl
add
add
or
add
push
add
add
add
add
add
add
add
adc
add
and
add
dec
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
add
add
xchg
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
in
add
add
add
add
add
add
add
addb
add
sub
xor
or
add
add
add
add
sbb
sbb
sub
pop
add
adc
add
add
add
incl
lods
or
or
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
dec
add
add
add
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
add
add
test
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
mov
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
in
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
adc
add
or
add
sbb
add
sbb
sbb
sub
xor
or
add
add
add
add
addb
add
xor
xor
or
add
add
add
add
addb
add
xor
xor
or
add
add
add
add
add
add
addb
add
cmp
xor
or
add
add
add
or
sbb
sbb
cmp
inc
add
add
add
add
add
or
nop
add
add
add
add
or
sbb
sbb
inc
add
inc
or
add
add
adc
add
rolb
add
or
add
and
or
sbb
sbb
inc
add
inc
or
add
add
adc
add
cld
add
add
add
add
add
add
add
addb
add
dec
add
or
add
add
add
or
sbb
sbb
dec
add
inc
or
add
add
add
add
pop
add
add
add
add
or
addb
add
push
add
add
add
add
add
add
add
incl
add
add
push
add
add
addb
add
push
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
cld
add
add
add
add
add
push
add
add
add
add
mov
add
call
add
add
add
nop
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
pop
add
add
add
add
add
add
and
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
mov
add
add
add
sbb
sbb
and
inc
add
add
add
add
add
add
adc
add
add
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
add
add
add
add
add
addb
add
xor
push
add
add
add
add
add
add
subb
add
add
add
pop
add
cmpb
add
add
add
add
add
add
addb
add
xor
add
inc
push
add
add
add
add
addb
add
js
add
pushf
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
or
add
js
add
or
add
and
add
sbb
sbb
and
push
add
inc
add
add
add
sub
add
test
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
and
add
add
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
or
add
sbb
add
sbb
sbb
sub
xor
or
add
add
add
add
addb
add
xor
insb
add
adc
add
add
add
call
add
add
orb
add
add
add
add
add
dec
add
add
add
addb
add
xor
jl
or
add
add
add
call
add
add
add
add
add
add
add
add
add
and
pop
add
add
addb
add
cmp
inc
add
add
add
add
add
add
add
dec
add
add
add
addb
add
cmp
lods
add
adc
add
add
add
add
add
add
push
add
xor
add
add
push
add
xor
add
add
push
add
xor
add
and
or
sbb
sbb
inc
add
add
add
add
add
incl
add
add
or
sbb
sbb
inc
add
inc
or
add
add
xor
add
nop
push
add
or
add
and
or
sbb
sbb
dec
add
add
add
add
add
incl
add
add
or
sbb
sbb
dec
add
inc
or
add
add
xor
add
nop
push
add
or
add
and
or
adcb
add
inc
add
add
add
add
add
incl
add
add
push
add
add
adcb
add
add
inc
or
add
add
add
add
add
ltr
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
adc
sbb
sbb
pop
add
inc
sldt
add
add
add
add
push
add
or
add
and
adc
sbb
sbb
pusha
add
add
add
add
add
add
incl
add
add
adc
sbb
sbb
add
inc
adc
add
add
dec
add
add
add
add
adc
sbb
sbb
push
add
add
add
add
add
incl
add
add
adc
sbb
sbb
insb
add
inc
adc
add
add
dec
add
add
add
add
adc
addb
add
jo
push
add
inc
adc
add
add
mov
add
add
push
add
add
addb
add
je
push
add
inc
push
add
add
add
add
mov
add
add
add
add
add
addb
add
js
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
and
sbb
sbb
sbb
jl
dec
add
add
add
add
add
add
incl
add
add
sbb
sbb
sbb
addb
add
inc
sbb
add
add
pusha
add
add
add
add
add
add
add
addb
add
test
push
add
add
add
add
add
add
subb
add
add
add
pop
add
cmpb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
jl
add
fadds
add
js
add
js
add
lods
push
add
lods
push
add
enter
enter
loopne
add
loopne
add
insb
or
add
add
add
mov
or
add
or
add
add
xor
add
dec
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
faddl
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
rolb
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
xor
add
cmp
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
xor
add
pop
pop
add
or
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
add
add
add
addb
add
xor
inc
add
add
add
add
add
incl
add
add
push
add
add
addb
add
xor
add
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
cmp
pop
add
add
addb
add
cmp
jl
or
add
add
add
add
add
add
add
add
xor
add
pop
pop
add
add
add
xor
add
jl
add
add
add
and
or
sbb
sbb
cmp
dec
add
add
add
add
add
add
in
pop
add
add
add
and
or
sbb
sbb
inc
add
add
add
add
add
or
add
add
add
add
add
add
addb
add
inc
add
push
or
add
add
pusha
add
add
call
add
addb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
dec
pop
add
dec
pop
add
insb
pop
add
insb
pop
add
mov
add
int3
pop
add
faddl
add
add
add
sub
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
sbb
sbb
sbb
dec
add
add
add
add
add
add
incl
add
add
add
sbb
sbb
and
push
add
inc
add
add
add
dec
add
add
or
add
add
add
add
sbb
sbb
and
dec
add
add
add
add
add
add
incl
add
add
add
sbb
sbb
sub
push
add
inc
add
add
add
dec
add
add
or
add
add
add
add
sbb
sbb
sub
dec
add
add
add
add
add
add
incl
add
add
add
addb
add
xor
push
add
inc
add
add
add
dec
add
add
add
or
add
and
push
add
add
addb
add
xor
push
add
inc
push
add
add
add
add
push
add
add
sbb
cmp
les
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
sbb
cmp
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
jl
add
add
add
xor
add
nop
or
add
add
add
add
add
add
xor
add
mov
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
addb
add
inc
add
inc
or
add
add
inc
add
add
or
add
add
add
add
add
add
or
add
xor
or
sbb
sbb
inc
add
inc
or
add
add
inc
add
add
or
add
add
add
add
add
add
or
add
xor
or
sbb
sbb
dec
add
inc
or
add
add
inc
add
add
or
add
add
add
add
add
add
or
add
dec
add
sbb
sbb
dec
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
sub
add
sub
add
push
or
add
add
or
add
dec
or
add
add
js
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
rolb
add
sldt
or
add
xor
add
sbb
sbb
and
pop
add
inc
add
add
add
adc
adc
add
add
adc
add
pusha
sldt
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
or
cmp
add
add
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
add
add
adc
add
cmp
add
faddl
add
je
add
add
add
and
add
push
add
add
add
mov
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
call
adc
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
js
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
sub
inc
add
add
add
add
add
or
hlt
adc
add
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
adc
add
rolb
add
or
add
add
add
add
add
add
add
add
add
add
add
in
add
push
add
add
adc
add
adc
add
add
add
add
dec
add
add
add
add
add
add
push
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
add
addb
add
add
xor
push
add
mov
pop
add
add
addb
add
add
xor
pop
add
mov
or
push
add
addb
add
add
xor
or
add
add
addb
add
add
xor
or
add
add
addb
add
add
xor
or
add
add
inc
add
add
add
inc
add
add
add
inc
push
add
inc
pop
add
inc
or
add
add
inc
or
add
adc
add
add
int3
adc
add
adc
add
add
sub
add
dec
adc
add
add
mov
add
lods
adc
add
add
add
add
sub
add
cmp
add
push
add
add
add
add
mov
add
mov
add
add
add
add
add
and
add
sbb
sbb
xor
inc
add
add
add
add
add
add
andb
add
add
add
add
add
add
addb
add
xor
xor
or
add
add
add
add
add
add
add
add
and
add
add
add
and
add
mov
add
and
add
sbb
sbb
xor
push
add
inc
add
add
add
rolb
add
mov
add
or
add
and
add
sbb
sbb
xor
push
add
inc
add
add
add
pusha
add
add
daa
add
or
add
and
add
sbb
sbb
cmp
push
add
inc
add
add
add
pusha
add
add
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
xor
add
insb
daa
add
or
add
and
add
sbb
sbb
inc
add
inc
add
add
add
rolb
add
mov
add
or
add
cmp
add
addb
add
inc
add
adc
add
add
add
pushl
add
or
or
add
add
or
or
xor
add
cmp
push
add
add
addb
add
dec
add
adc
add
add
add
pushl
add
or
or
add
add
or
or
xor
add
and
pop
add
add
addb
add
dec
add
add
add
add
add
add
subb
add
and
or
sbb
sbb
push
add
add
add
add
add
add
subb
add
and
or
sbb
sbb
push
add
add
add
add
add
add
subb
add
and
or
sbb
sbb
pop
add
add
add
add
add
add
subb
add
and
or
sbb
sbb
pop
add
add
add
add
add
add
subb
add
sbb
or
sbb
sbb
pusha
add
or
add
add
add
add
addb
add
add
add
add
add
add
add
and
add
add
add
or
or
add
add
xor
push
add
add
addb
add
push
add
add
add
add
add
lock
add
add
add
add
cmpb
add
ltr
add
addb
add
insb
add
add
add
add
add
add
and
add
add
add
inc
add
add
sub
add
add
add
add
cmpb
add
adc
sbb
sbb
jo
je
or
add
add
add
add
push
add
add
add
jl
add
add
add
or
or
add
add
and
adc
sbb
sbb
je
dec
add
add
add
add
add
add
add
add
add
add
sbb
adc
sbb
sbb
js
xor
or
add
add
add
add
add
add
addb
add
jl
xor
or
add
add
add
adc
sbb
sbb
addb
add
add
add
add
add
add
cmp
incl
add
add
adc
addb
add
test
dec
add
inc
adc
add
add
add
add
in
sub
add
add
add
push
add
add
addb
add
mov
inc
add
add
add
add
add
add
cmp
incl
add
add
pop
add
add
addb
add
mov
dec
add
inc
push
add
add
add
add
add
sub
add
add
add
sbb
sbb
sbb
nop
add
add
add
add
add
sub
add
add
add
add
add
add
addb
add
xchg
add
add
add
add
add
sub
add
add
add
add
orb
add
sbb
sbb
sbb
sbb
cwtl
add
or
add
add
add
add
add
add
addb
add
pushf
add
add
add
add
add
add
and
add
add
add
or
or
add
add
sbb
sbb
sbb
sbb
mov
add
add
add
add
sbb
addb
add
movsb
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
addb
add
test
dec
add
inc
sbb
add
add
add
sub
add
add
add
pop
add
add
addb
add
lods
add
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
mov
dec
add
inc
pop
add
add
add
add
add
add
add
add
and
sbb
sbb
mov
inc
add
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
mov
inc
and
add
add
add
add
mov
add
or
add
and
and
sbb
sbb
mov
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
rolb
add
inc
and
add
add
add
add
in
sub
add
add
add
and
addb
add
les
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
addb
add
enter
adc
add
add
add
add
loopne
add
or
add
and
daa
add
add
addb
add
int3
add
add
add
add
add
add
cmp
incl
add
add
sub
sbb
sbb
rolb
dec
add
inc
daa
add
add
add
add
add
sub
add
add
add
add
add
add
addb
add
aam
insb
add
adc
add
add
add
pushl
add
or
or
add
add
or
or
xor
add
cmp
sub
sbb
sbb
fadds
insb
add
adc
add
add
add
pushl
add
or
or
add
add
or
or
xor
add
sbb
sub
sbb
sbb
faddl
xor
or
add
add
add
add
sbb
sbb
loopne
pop
add
add
add
add
add
add
and
add
add
add
or
or
add
add
sbb
sub
addb
add
in
xor
or
add
add
add
addb
add
call
add
add
add
add
add
cmp
incl
add
add
das
add
add
addb
add
in
add
inc
add
add
add
add
add
sub
add
add
add
xor
sbb
sbb
lock
add
add
add
add
add
and
add
add
add
and
xor
sbb
sbb
hlt
add
add
add
add
add
pop
add
add
add
and
xor
sbb
sbb
clc
add
add
add
add
add
pop
add
add
add
and
xor
sbb
sbb
cld
add
add
add
add
add
pop
add
add
add
and
xor
sbb
sbb
add
dec
add
add
add
add
add
add
and
add
add
add
sbb
xor
addb
add
add
xor
or
add
add
add
addb
add
or
inc
add
add
add
add
add
add
cmp
incl
add
add
aaa
add
add
addb
add
or
dec
add
inc
add
add
add
add
add
sub
add
add
add
cmp
sbb
sbb
adc
inc
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
adc
dec
add
inc
cmp
add
add
add
add
in
sub
add
add
add
cmp
sbb
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
sbb
dec
add
inc
cmp
add
add
add
add
fsubrl
add
and
cmp
sbb
sbb
and
dec
add
inc
cmp
add
add
add
add
adc
add
or
add
and
cmp
addb
add
and
push
add
inc
cmp
add
add
mov
add
or
add
and
add
add
addb
add
sub
dec
add
inc
add
add
add
add
add
add
add
add
aas
add
add
addb
add
sub
dec
add
inc
aas
add
add
add
add
add
add
add
inc
add
add
addb
add
xor
dec
add
inc
inc
add
add
add
add
add
add
add
inc
add
add
addb
add
xor
dec
add
inc
inc
add
add
add
add
add
add
or
add
and
inc
add
add
addb
add
cmp
dec
add
inc
inc
add
add
add
add
add
das
add
or
add
and
inc
add
add
addb
add
cmp
inc
add
add
add
add
add
das
add
add
add
and
inc
add
add
addb
add
inc
add
add
add
add
add
add
add
xor
inc
add
add
addb
add
inc
add
add
add
add
add
add
movsb
das
add
add
add
inc
add
add
or
add
add
add
inc
add
add
addb
add
dec
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
addb
add
dec
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
inc
add
add
add
add
inc
daa
add
pop
daa
add
andb
add
add
lock
add
or
add
and
add
inc
sub
add
add
add
sub
add
add
dec
sub
add
add
add
int3
sub
add
sub
add
sub
add
sub
add
sub
add
add
mov
sub
add
sub
add
add
adc
add
xor
add
xor
add
push
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
add
jl
add
cwtl
sub
add
add
aam
add
or
add
and
add
inc
sub
add
push
sub
add
pushf
sub
add
mov
sub
add
xor
add
dec
add
js
add
movsb
add
enter
clc
add
sub
add
pusha
das
add
subb
add
das
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
enter
in
add
add
add
sbb
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
int3
add
add
add
add
add
pop
add
add
movsb
add
add
in
add
add
dec
push
add
addb
add
push
add
loopne
add
add
add
sub
add
dec
pop
add
jo
add
xchg
pop
add
mov
pop
add
hlt
pop
add
sbb
add
cmp
add
pusha
or
add
add
int3
or
add
or
add
add
cmp
add
pop
or
add
or
add
or
add
or
add
or
add
add
or
add
add
add
add
sbb
sbb
dec
add
inc
add
add
add
rolb
add
add
add
add
add
add
addb
add
dec
add
inc
add
add
add
adc
adc
add
add
mov
add
or
add
and
add
sbb
sbb
push
add
inc
add
add
add
xor
add
cmp
add
or
add
and
add
sbb
sbb
push
add
inc
add
add
add
xor
add
pop
pop
add
or
add
and
add
sbb
sbb
pop
add
inc
add
add
add
js
add
pushf
or
add
add
add
add
add
add
add
add
add
add
or
adc
add
add
hlt
add
or
add
sbb
add
add
add
and
add
push
add
add
add
pushf
add
add
add
add
sbb
sbb
sbb
push
add
inc
add
add
add
xor
add
and
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
xor
add
dec
and
add
add
add
add
sbb
sbb
and
push
add
inc
add
add
add
xor
add
and
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
xor
add
cwtl
and
add
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
mov
adc
add
add
add
add
addb
add
xor
dec
add
inc
add
add
add
add
add
add
add
push
add
add
addb
add
xor
push
add
inc
push
add
add
add
add
mov
add
or
add
and
pop
add
add
addb
add
cmp
dec
add
inc
pop
add
add
add
add
add
add
or
add
and
or
sbb
sbb
cmp
dec
add
inc
or
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
and
add
add
add
add
add
add
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
pushf
adc
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
inc
add
add
adc
add
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
push
add
add
add
and
add
sbb
sbb
xor
dec
add
inc
add
add
add
rolb
add
pop
add
or
add
and
add
sbb
sbb
xor
inc
add
add
add
add
add
add
sbbb
add
add
add
add
addb
add
cmp
inc
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
addb
add
cmp
dec
add
inc
add
add
add
add
add
or
add
and
pop
add
add
addb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
inc
add
inc
pop
add
add
add
add
add
add
add
add
or
sbb
sbb
dec
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
dec
add
inc
or
add
add
add
add
mov
add
add
or
sbb
sbb
push
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
push
add
inc
or
add
add
add
add
rcrb
add
or
add
and
or
addb
add
pop
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
addb
add
pop
add
inc
or
add
add
add
sbb
add
add
add
ltr
add
addb
add
pusha
add
inc
sldt
add
add
add
dec
and
add
add
add
adc
sbb
sbb
add
inc
adc
add
add
push
and
add
add
add
adc
sbb
sbb
push
inc
adc
add
add
push
and
add
add
add
adc
sbb
sbb
insb
add
inc
adc
add
add
or
add
lock
add
add
add
add
add
add
addb
add
jo
xor
or
add
add
add
adc
sbb
sbb
je
inc
add
add
add
add
add
incl
add
add
adc
addb
add
js
dec
add
inc
adc
add
add
nop
add
add
add
and
push
add
add
addb
add
jl
push
add
inc
push
add
add
add
add
add
and
add
add
add
pop
add
add
addb
add
addb
add
inc
pop
add
add
add
and
add
add
add
sbb
sbb
sbb
test
push
add
inc
sbb
add
add
addb
add
and
add
add
add
sbb
sbb
sbb
mov
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
mov
dec
add
inc
sbb
add
add
or
add
js
add
or
add
and
sbb
sbb
sbb
nop
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
xchg
add
inc
sbb
add
add
rolb
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
mov
pop
add
add
add
xor
add
xor
add
pusha
sbb
add
add
mov
add
mov
add
mov
sbb
add
sbb
add
sbb
add
and
add
add
add
or
add
mov
add
mov
add
mov
and
add
and
add
add
push
and
add
and
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
aam
add
clc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
pushf
add
add
add
add
add
add
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
sbb
add
inc
adc
add
and
add
sbb
sbb
and
push
add
inc
add
add
add
xor
add
js
add
or
add
add
add
add
pusha
and
add
pop
adc
add
and
add
mov
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
add
addb
add
add
xor
push
add
mov
pop
add
add
addb
add
add
xor
pop
add
mov
add
inc
add
add
add
inc
add
add
add
inc
add
add
inc
pop
add
inc
int3
adc
add
adc
add
sub
add
dec
push
add
fs
add
mov
add
mov
add
add
add
adc
add
sub
add
cmp
add
push
add
add
add
add
mov
add
push
add
add
add
push
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
inc
add
add
add
inc
clc
push
add
and
add
dec
pop
add
js
add
add
add
adc
add
sub
add
cmp
add
loopne
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
rolb
add
sldt
or
add
xor
add
sbb
sbb
and
add
inc
add
add
add
adc
adc
add
add
xor
add
js
add
or
add
and
add
sbb
sbb
and
dec
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sub
dec
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
add
orb
add
add
and
add
addb
add
xor
push
add
inc
add
add
add
test
add
or
add
and
push
add
add
addb
add
xor
push
add
inc
push
add
add
add
add
fcomps
add
or
add
and
pop
add
add
addb
add
cmp
push
add
inc
pop
add
add
add
add
or
add
or
add
and
or
sbb
sbb
cmp
push
add
inc
or
add
add
push
sbb
add
add
add
or
sbb
sbb
inc
add
inc
or
add
add
push
sbb
add
add
add
or
sbb
sbb
inc
add
inc
or
add
add
push
sbb
add
add
add
or
sbb
sbb
dec
add
inc
or
add
add
push
sbb
add
add
add
or
sbb
sbb
dec
add
inc
or
add
add
push
sbb
add
add
add
or
addb
add
push
add
inc
or
add
add
dec
sbb
add
add
add
push
add
add
addb
add
push
add
inc
push
add
add
add
add
sbbb
add
add
add
ltr
add
addb
add
pop
add
inc
sldt
add
add
add
mov
add
add
adc
sbb
sbb
pop
add
inc
adc
add
add
rolb
add
sbb
add
add
add
adc
sbb
sbb
pusha
add
inc
adc
add
add
rolb
add
add
or
add
and
adc
sbb
sbb
add
inc
adc
add
add
rolb
add
add
add
add
adc
sbb
sbb
push
inc
adc
add
add
rolb
add
add
add
adc
sbb
sbb
insb
add
inc
adc
add
add
rolb
add
add
and
adc
addb
add
jo
dec
add
inc
adc
add
add
add
sbb
add
add
add
push
add
add
addb
add
je
dec
add
inc
push
add
add
add
add
add
sbb
add
and
pop
add
add
addb
add
js
dec
add
inc
pop
add
add
add
add
add
add
or
add
and
sbb
sbb
sbb
jl
dec
add
inc
sbb
add
add
rolb
add
add
add
sbb
sbb
sbb
addb
add
inc
sbb
add
add
rolb
add
add
add
sbb
sbb
sbb
test
dec
add
inc
sbb
add
add
rolb
add
sbb
add
sbb
sbb
sbb
sbb
mov
xor
or
add
add
add
add
sbb
sbb
mov
xor
or
add
add
add
add
addb
add
nop
add
add
add
add
add
add
add
add
add
add
adc
add
rolb
add
add
add
and
push
add
add
addb
add
xchg
add
add
add
add
add
add
add
add
add
add
and
pop
add
add
addb
add
cwtl
add
add
add
add
add
add
adcb
add
add
add
add
addb
add
pushf
add
or
add
add
add
and
sbb
sbb
mov
inc
and
add
add
addb
add
and
add
add
add
and
sbb
sbb
movsb
add
inc
and
add
add
addb
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
pusha
sbb
add
add
xchg
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
add
cwtl
sbb
add
sbb
add
sbb
add
add
pusha
sbb
add
sbb
add
sbb
add
sbb
add
cwtl
sbb
add
adc
add
sub
add
dec
push
add
pusha
push
add
jl
add
mov
add
shlb
add
or
add
add
add
and
add
push
add
add
add
pushf
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
sub
add
dec
add
add
add
xchg
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sbb
dec
add
add
add
add
add
add
incl
add
add
add
sbb
sbb
and
push
add
inc
add
add
add
dec
add
add
push
add
or
add
and
add
sbb
sbb
and
dec
add
add
add
add
add
add
incl
add
add
add
sbb
sbb
sub
push
add
inc
add
add
add
dec
add
add
pop
add
or
add
and
add
sbb
sbb
sub
push
add
inc
add
add
add
dec
add
add
add
or
add
pusha
add
addb
add
xor
xchg
add
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
pusha
add
add
add
addb
add
xor
les
or
add
add
add
add
add
pop
add
add
add
xor
add
aam
add
add
add
xor
add
call
add
add
add
add
pop
add
add
add
xor
add
adc
add
add
add
xor
add
and
add
add
add
and
pop
add
add
addb
add
cmp
dec
add
inc
pop
add
add
add
add
add
sldt
or
add
and
or
sbb
sbb
cmp
dec
add
inc
or
add
add
xor
add
sub
add
or
add
and
or
sbb
sbb
inc
add
inc
or
add
add
xor
add
sub
add
or
add
and
or
sbb
sbb
inc
add
inc
or
add
add
xor
add
sub
add
or
add
and
or
sbb
sbb
dec
add
add
add
add
add
add
and
add
add
add
and
or
sbb
sbb
dec
add
add
add
add
add
add
add
add
add
add
and
or
addb
add
push
add
add
add
add
add
add
shlb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
push
add
in
push
add
adc
add
adc
add
xor
add
mov
add
int3
pop
add
cmp
add
dec
and
add
add
je
add
nop
and
add
sbb
add
add
and
add
dec
add
add
add
add
add
add
je
add
cwtl
add
add
add
add
add
sub
add
dec
add
add
add
add
add
push
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
inc
inc
and
add
add
add
add
add
movsb
add
add
add
push
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
add
addb
add
add
xor
push
add
mov
pop
add
add
addb
add
add
xor
pop
add
mov
or
push
add
addb
add
add
xor
or
add
add
addb
add
add
xor
or
add
add
addb
add
add
xor
or
add
add
addb
add
add
xor
or
add
add
addb
add
add
xor
or
add
add
addb
add
add
xor
or
add
add
add
addb
add
add
xor
push
add
mov
lldt
add
addb
add
add
xor
sldt
mov
adc
push
add
addb
add
add
xor
adc
add
add
addb
add
add
xor
adc
add
add
addb
add
add
xor
adc
add
add
addb
add
add
xor
adc
add
add
addb
add
add
xor
adc
add
add
inc
add
add
add
inc
add
add
add
inc
push
add
inc
pop
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
push
add
inc
sldt
inc
adc
add
add
inc
adc
add
add
inc
adc
add
and
add
and
add
add
sub
add
add
add
jl
add
cwtl
and
add
and
add
and
add
and
add
cmp
add
js
add
xchg
and
add
int3
and
add
or
add
sub
add
add
add
adc
add
sub
add
cmp
add
push
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
sbb
add
sub
add
inc
add
add
add
add
jl
add
nop
add
add
add
add
add
sbb
sbb
xor
dec
add
inc
add
add
add
rolb
add
add
add
add
add
add
addb
add
xor
add
inc
add
add
add
adc
adc
add
add
dec
add
add
add
xor
add
sbb
sbb
cmp
add
inc
add
add
add
adc
adc
add
add
add
add
mov
add
or
add
and
add
sbb
sbb
cmp
inc
add
add
add
add
add
add
andb
add
add
sbb
sbb
inc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
jl
add
xchg
xor
add
add
add
add
add
push
add
add
add
jo
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
xor
add
cmp
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
xor
add
pop
pop
add
or
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
incl
add
add
add
sbb
sbb
sub
push
add
add
add
add
add
pop
add
add
add
add
pop
add
add
add
xor
add
addb
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
pop
pop
add
add
add
and
push
add
add
addb
add
xor
dec
add
add
add
add
add
add
add
pop
add
add
add
and
pop
add
add
addb
add
cmp
inc
add
add
add
add
add
or
add
add
add
add
add
add
addb
add
cmp
je
or
add
add
pusha
add
add
call
add
addb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
dec
pop
add
dec
pop
add
mov
add
int3
pop
add
faddl
add
add
add
sub
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
cmp
add
adc
add
and
add
sbb
sbb
xor
dec
add
inc
add
add
add
add
add
sub
add
or
add
and
add
sbb
sbb
xor
push
add
inc
add
add
add
push
xor
add
add
add
add
add
add
addb
add
cmp
xor
or
add
add
add
add
add
add
addb
add
cmp
xor
or
add
add
add
add
sbb
sbb
inc
add
or
add
add
add
add
addb
add
inc
add
or
add
add
add
add
addb
add
dec
add
or
add
add
add
add
add
add
addb
add
dec
add
or
add
add
add
add
add
add
addb
add
push
add
or
add
add
add
add
add
add
addb
add
push
add
or
add
add
add
add
add
add
addb
add
pop
add
or
add
add
add
add
add
add
addb
add
pop
add
or
add
add
add
or
sbb
sbb
pusha
add
add
add
add
add
add
cmp
incl
add
add
or
addb
add
add
inc
or
add
add
and
add
mov
add
or
add
and
push
add
add
addb
add
push
add
add
add
add
add
cmp
incl
add
add
ltr
add
addb
add
insb
add
inc
push
add
add
add
add
add
add
and
adc
sbb
sbb
jo
inc
add
add
add
add
add
add
cmp
incl
add
add
adc
sbb
sbb
je
dec
add
inc
adc
add
add
add
add
les
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
dec
xor
add
add
add
int3
xor
add
xor
add
xor
add
add
cmp
add
pop
xor
add
add
in
push
add
in
push
add
adc
add
adc
add
lods
xor
add
add
and
add
dec
add
add
add
js
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
or
add
insb
push
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
rolb
add
add
add
add
add
add
addb
add
and
add
inc
add
add
add
adc
adc
add
add
pop
add
add
xor
add
add
add
add
add
add
addb
add
sub
push
add
add
add
add
add
add
cmpb
add
or
cld
xor
add
add
add
add
sbb
sbb
sub
push
add
add
add
add
add
add
cmpb
add
or
cld
xor
add
add
add
add
addb
add
xor
inc
add
add
add
add
add
add
cmpb
add
push
add
add
addb
add
xor
inc
add
add
add
add
add
add
sbbb
add
add
and
pop
add
add
addb
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
cmp
xor
or
add
add
add
add
add
add
addb
add
inc
add
or
add
add
add
or
sbb
sbb
inc
add
add
add
add
add
add
sub
add
add
add
and
or
sbb
sbb
dec
add
inc
or
add
add
push
xor
add
add
add
add
sbb
sbb
dec
add
or
add
add
add
add
addb
add
push
add
or
add
add
add
add
addb
add
push
add
or
add
add
add
add
add
add
addb
add
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
js
add
test
add
call
xor
add
add
inc
xor
add
add
xchg
xor
add
xor
add
add
xor
add
or
add
add
add
and
add
dec
add
add
add
test
add
fadds
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
loopne
add
or
add
add
add
add
add
int3
cmp
add
cmp
add
add
add
add
lock
add
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
dec
cmp
add
add
add
add
sbb
sbb
and
inc
add
add
add
add
add
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
xor
add
inc
push
add
or
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
incl
add
add
add
adcb
add
add
inc
add
add
add
xor
add
inc
push
add
or
add
and
push
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
pop
add
add
adcb
add
add
inc
push
add
add
add
add
add
add
add
or
sbb
sbb
cmp
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
inc
add
inc
or
add
add
rolb
add
cmp
add
add
add
or
sbb
sbb
inc
add
add
add
add
add
add
incl
add
add
or
sbb
sbb
dec
add
inc
or
add
add
mov
cmp
add
add
add
or
sbb
sbb
dec
add
add
add
add
add
add
cmp
incl
add
add
or
adcb
add
dec
add
inc
or
add
add
rolb
add
cmp
add
add
add
push
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
ltr
add
adcb
add
dec
add
inc
push
add
add
add
add
add
add
add
add
adc
sbb
sbb
pop
add
add
add
add
add
add
incl
add
add
adc
sbb
sbb
pusha
add
inc
adc
add
add
mov
cmp
add
add
add
adc
sbb
sbb
add
add
add
add
add
add
cmp
incl
add
add
adc
sbb
sbb
push
inc
adc
add
add
rolb
add
cmp
add
add
add
adc
sbb
sbb
insb
add
add
add
add
add
add
cmp
incl
add
add
adc
adcb
add
dec
add
inc
adc
add
add
or
add
pop
cmp
add
add
add
push
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
pop
add
add
adcb
add
dec
add
inc
push
add
add
add
add
add
add
add
sbb
sbb
sbb
jl
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
addb
add
inc
sbb
add
add
rolb
add
cmp
add
add
add
sbb
sbb
sbb
test
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
mov
dec
add
inc
sbb
add
add
rolb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
cmp
add
cmp
add
add
pusha
cmp
add
add
jo
add
test
add
test
add
mov
add
mov
add
in
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
jo
add
nop
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
aam
add
clc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
int3
add
add
or
add
add
add
add
addb
add
sbb
xor
or
add
add
add
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
cmpb
add
add
sbb
sbb
sub
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
mov
add
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
adcb
add
dec
add
inc
add
add
add
add
add
add
pop
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
cmp
dec
add
inc
pop
add
add
add
add
add
add
or
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
inc
add
inc
or
add
add
add
add
mov
add
add
or
sbb
sbb
dec
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
dec
add
inc
or
add
add
add
add
mov
add
add
or
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
adcb
add
add
inc
or
add
add
add
add
add
ltr
add
adcb
add
inc
add
add
add
add
add
incl
add
add
adc
sbb
sbb
pop
add
inc
sldt
add
add
add
add
add
add
adc
sbb
sbb
pusha
add
add
add
add
add
incl
add
add
adc
sbb
sbb
add
inc
adc
add
add
xor
add
test
add
or
add
and
adc
sbb
sbb
push
add
add
add
add
incl
add
add
adc
sbb
sbb
insb
add
inc
adc
add
add
xor
add
test
add
or
add
and
adc
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
adcb
add
add
inc
adc
add
add
add
aas
add
or
add
and
pop
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
jl
dec
add
inc
pop
add
add
add
add
add
add
add
sbb
sbb
sbb
addb
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
test
dec
add
inc
sbb
add
add
add
add
mov
add
add
sbb
sbb
sbb
mov
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
mov
dec
add
inc
sbb
add
add
add
add
mov
add
add
sbb
adcb
add
add
add
add
add
incl
add
add
push
add
add
adcb
add
sbb
add
add
add
add
add
pop
add
add
adcb
add
add
add
add
add
incl
add
add
and
sbb
sbb
pushf
add
inc
pop
add
add
add
add
add
add
add
and
sbb
sbb
mov
add
add
add
add
incl
add
add
and
sbb
sbb
movsb
add
inc
and
add
add
xor
add
test
add
or
add
and
and
sbb
sbb
test
inc
add
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
lods
add
inc
and
add
add
add
add
or
add
add
add
and
adcb
add
add
add
add
add
add
cmp
incl
add
add
add
add
adcb
add
and
add
add
add
add
or
add
and
daa
add
add
adcb
add
add
add
add
add
add
cmp
incl
add
add
sub
sbb
sbb
mov
inc
daa
add
add
add
add
add
inc
add
or
add
cmp
sub
sbb
sbb
rolb
add
inc
sub
add
add
or
or
add
add
or
or
add
add
enter
dec
inc
add
or
add
and
sub
sbb
sbb
les
push
add
inc
sub
add
add
fadds
add
push
cmp
add
add
add
sub
sbb
sbb
enter
adc
add
add
or
add
mov
add
add
sub
sbb
sbb
int3
add
add
add
add
add
add
cmp
incl
add
add
sub
addb
add
rolb
dec
add
inc
add
add
add
add
add
inc
add
or
add
and
add
add
addb
add
aam
inc
add
add
add
add
add
add
cmp
incl
add
add
das
add
add
addb
add
fadds
dec
add
inc
xor
add
add
rolb
add
sbb
add
or
add
and
xor
sbb
sbb
faddl
inc
add
add
add
add
add
add
cmp
incl
add
add
xor
sbb
sbb
loopne
push
add
inc
xor
add
add
dec
add
add
add
and
xor
sbb
sbb
in
dec
add
add
add
add
add
add
incl
add
add
xor
sbb
sbb
call
add
add
add
add
incl
add
add
xor
sbb
sbb
in
add
inc
xor
add
add
xor
add
insb
inc
add
or
add
and
xor
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
add
add
adcb
add
add
inc
xor
add
add
add
add
and
aaa
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
cld
add
inc
aaa
add
add
add
add
add
add
add
cmp
sbb
sbb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
add
dec
add
inc
cmp
add
add
or
add
cmpb
add
cmp
sbb
sbb
or
inc
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
or
dec
add
inc
cmp
add
add
fadds
add
sbb
add
or
add
and
cmp
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
add
add
adcb
add
dec
add
inc
cmp
add
add
add
add
or
add
and
aas
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
adcb
add
dec
add
inc
aas
add
add
add
add
add
cmp
add
add
add
inc
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
adcb
add
dec
add
inc
inc
add
add
add
add
add
add
and
inc
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
adcb
add
dec
add
inc
inc
add
add
add
add
add
cmp
add
add
add
inc
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
adcb
add
dec
add
inc
inc
add
add
add
add
add
add
add
inc
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
dec
add
add
adcb
add
dec
add
inc
inc
add
add
add
add
add
add
add
dec
add
add
adcb
add
inc
add
add
add
add
add
add
incl
add
add
dec
add
add
adcb
add
add
inc
dec
add
add
add
cmp
add
add
add
dec
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
dec
add
add
adcb
add
add
inc
dec
add
add
add
add
add
add
add
dec
add
add
addb
add
push
add
add
add
incl
lods
incl
lods
pop
add
add
add
or
or
xor
add
or
or
xor
add
and
dec
add
add
addb
add
push
add
inc
dec
add
add
add
add
mov
add
add
add
sbb
sbb
pop
add
or
add
add
add
add
sbb
sbb
pop
add
or
add
add
add
push
add
add
addb
add
pusha
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
addb
add
add
inc
push
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
fs
add
cwtl
cmp
add
int3
cmp
add
in
cmp
add
sub
add
sub
add
inc
add
inc
add
fs
fs
test
add
test
add
sarb
add
add
loopne
add
loopne
add
add
add
add
add
xor
add
xor
add
push
aas
add
push
aas
add
jo
add
jo
add
mov
add
mov
add
mov
aas
add
aam
add
aam
add
in
aas
add
in
aas
add
sbb
add
sbb
add
push
inc
add
push
inc
add
add
add
add
add
add
inc
add
hlt
inc
add
hlt
inc
add
cmp
add
inc
add
push
inc
add
push
inc
add
addb
addb
les
add
inc
add
loopne
add
loopne
add
cld
inc
add
cld
inc
add
xor
add
inc
add
fs
add
fs
add
mov
add
inc
add
les
add
inc
add
in
add
cld
inc
add
cld
inc
add
in
cmp
add
cmp
add
inc
add
sbb
xor
add
test
pushf
inc
add
mov
inc
add
aam
add
add
add
sbb
add
cmp
add
pusha
add
add
add
int3
add
add
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
pushf
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
add
xchg
add
add
hlt
add
add
cmp
add
pusha
push
add
test
add
test
add
int3
push
add
lock
add
adc
add
cmp
add
pop
pop
add
addb
add
add
in
pop
add
adc
add
xor
add
pop
or
add
add
or
add
or
add
add
xor
add
push
or
add
add
pushf
or
add
or
add
or
add
or
add
add
push
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
sbbb
add
cmp
add
sbb
sbb
and
je
or
add
add
jo
add
decl
add
or
add
xor
add
or
add
in
add
or
add
add
add
add
add
mov
add
add
add
add
mov
add
and
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
pop
inc
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
pop
inc
add
or
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
add
cmp
incl
add
add
add
adcb
add
add
inc
add
add
add
rolb
add
add
and
push
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
pop
add
add
adcb
add
add
inc
push
add
add
add
add
add
add
and
or
sbb
sbb
cmp
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
inc
add
inc
or
add
add
add
add
sbb
add
add
add
or
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
dec
add
inc
or
add
add
add
add
sbb
add
add
add
or
sbb
sbb
dec
add
add
add
add
add
add
cmp
incl
add
add
or
adcb
add
dec
add
inc
or
add
add
add
add
sbb
add
add
add
push
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
ltr
add
adcb
add
dec
add
inc
push
add
add
add
add
add
inc
add
or
add
and
adc
sbb
sbb
pop
add
add
add
add
add
incl
add
add
adc
sbb
sbb
pusha
add
inc
adc
add
add
xor
add
insb
inc
add
or
add
and
adc
sbb
sbb
add
add
add
add
add
add
incl
add
add
adc
sbb
sbb
push
inc
adc
add
add
mov
cmp
add
add
add
adc
sbb
sbb
insb
add
add
add
add
add
add
cmp
incl
add
add
adc
adcb
add
dec
add
inc
adc
add
add
rolb
add
cmp
add
add
add
push
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
pop
add
add
adcb
add
dec
add
inc
push
add
add
add
add
add
add
add
add
sbb
sbb
sbb
jl
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
addb
add
inc
sbb
add
add
add
add
pop
inc
add
or
add
and
sbb
sbb
sbb
test
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
sbb
sbb
mov
dec
add
inc
sbb
add
add
add
add
pop
inc
add
or
add
and
sbb
sbb
sbb
mov
inc
add
add
add
add
add
add
cmp
incl
add
add
sbb
adcb
add
inc
sbb
add
add
add
add
pop
inc
add
or
add
and
push
add
add
adcb
add
pop
add
add
add
add
cmp
incl
add
add
pop
add
add
adcb
add
inc
push
add
add
add
add
add
add
or
add
and
and
sbb
sbb
pushf
add
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
mov
inc
and
add
add
add
add
pop
inc
add
or
add
and
and
sbb
sbb
movsb
add
add
add
add
add
add
cmp
incl
add
add
and
sbb
sbb
test
dec
add
inc
and
add
add
add
add
pop
inc
add
or
add
and
and
sbb
sbb
lods
add
add
add
add
add
add
cmp
incl
add
add
and
adcb
add
inc
and
add
add
add
add
pop
inc
add
or
add
and
add
add
adcb
add
daa
add
add
add
add
cmp
incl
add
add
daa
add
add
adcb
add
inc
add
add
add
add
add
add
or
add
and
sub
sbb
sbb
mov
add
add
add
add
add
cmp
incl
add
add
sub
sbb
sbb
rolb
add
inc
sub
add
add
add
add
pop
inc
add
or
add
and
sub
sbb
sbb
les
inc
add
add
add
add
add
add
cmp
incl
add
add
sub
sbb
sbb
enter
adc
add
add
add
add
pop
inc
add
or
add
and
sub
sbb
sbb
int3
add
add
add
add
add
add
cmp
incl
add
add
sub
adcb
add
add
inc
sub
add
add
add
add
pop
inc
add
or
add
and
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
das
add
add
adcb
add
add
inc
add
add
add
add
add
add
or
add
and
xor
sbb
sbb
faddl
inc
add
add
add
add
add
add
cmp
incl
add
add
xor
sbb
sbb
loopne
dec
add
inc
xor
add
add
add
add
pop
inc
add
or
add
and
xor
sbb
sbb
in
inc
add
add
add
add
add
add
cmp
incl
add
add
xor
sbb
sbb
call
inc
xor
add
add
add
add
pop
inc
add
or
add
and
xor
sbb
sbb
in
add
add
add
add
add
add
cmp
incl
add
add
xor
adcb
add
add
inc
xor
add
add
add
add
pop
inc
add
or
add
and
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
aaa
add
add
adcb
add
add
inc
add
add
add
add
add
add
or
add
and
cmp
sbb
sbb
cld
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
add
dec
add
inc
cmp
add
add
rolb
add
add
or
add
and
cmp
sbb
sbb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
cmp
sbb
sbb
or
dec
add
inc
cmp
add
add
add
add
orb
or
add
and
cmp
sbb
sbb
or
inc
add
add
add
add
add
add
cmp
incl
add
add
cmp
adcb
add
add
inc
cmp
add
add
fadds
add
sbb
add
or
add
and
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
aas
add
add
adcb
add
add
inc
add
add
add
add
add
add
or
add
and
inc
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
adcb
add
add
inc
inc
add
add
add
add
add
add
or
add
and
inc
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
adcb
add
add
inc
inc
add
add
add
add
add
add
or
add
and
inc
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
inc
add
add
adcb
add
add
inc
inc
add
add
add
add
add
add
add
add
add
sbb
sbb
xor
xor
or
add
add
add
add
sbb
sbb
cmp
xor
or
add
add
add
dec
add
add
addb
add
cmp
inc
add
add
add
add
add
add
add
and
dec
add
add
addb
add
inc
add
add
add
add
add
dec
add
add
add
sbb
dec
add
add
addb
add
inc
add
or
add
add
add
dec
add
add
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
dec
add
add
adcb
add
add
inc
dec
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
inc
add
lock
add
lock
add
sub
add
sub
add
push
inc
add
push
inc
add
addb
addb
lods
inc
add
lods
inc
add
int3
inc
add
int3
inc
add
lock
add
lock
add
adc
add
adc
add
cmp
add
inc
add
push
inc
add
push
inc
add
insb
inc
add
insb
inc
add
mov
add
inc
add
movsb
inc
add
rolb
rolb
faddl
add
inc
add
clc
inc
add
clc
inc
add
adc
add
adc
add
sub
add
sub
add
inc
dec
add
inc
dec
add
pusha
dec
add
pusha
dec
add
jl
add
jl
add
cwtl
dec
add
cwtl
dec
add
mov
dec
add
aam
add
aam
add
sub
add
sub
add
pop
dec
add
pop
dec
add
cwtl
dec
add
cwtl
dec
add
mov
dec
add
call
dec
add
or
add
dec
add
sub
add
dec
add
push
dec
add
mov
add
fmuls
add
add
cmp
add
dec
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
aam
add
clc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
int3
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
add
or
add
xor
add
push
push
add
js
add
pushf
push
add
rolb
add
push
add
or
add
sub
add
push
pop
add
je
add
cwtl
pop
add
mov
pop
add
add
add
sub
add
dec
or
add
add
xchg
or
add
or
add
or
add
add
dec
or
add
add
or
add
or
add
or
add
or
add
add
push
or
add
add
mov
add
dec
add
add
add
sbb
sbb
sbb
insb
add
inc
add
add
add
or
or
add
add
or
or
add
add
add
add
add
add
or
add
cmp
add
sbb
sbb
and
insb
add
inc
add
add
add
or
or
add
add
or
or
add
add
add
add
cmp
add
or
add
cmp
add
sbb
sbb
and
insb
add
inc
add
add
add
or
or
add
add
or
or
add
add
xor
add
lods
inc
add
or
add
cmp
add
sbb
sbb
sub
insb
add
inc
add
add
add
or
or
add
add
or
or
add
add
cwtl
add
add
add
or
add
cmp
add
sbb
sbb
sub
insb
add
inc
add
add
add
or
or
add
add
or
or
add
add
cwtl
add
add
add
pop
add
addb
add
xor
int3
add
push
add
add
add
add
add
incl
pop
add
xor
add
add
pop
add
xor
add
add
pop
add
xor
add
dec
add
add
add
pop
add
add
add
addb
add
xor
in
or
add
add
add
add
add
mov
incl
add
aam
add
xor
add
inc
add
add
dec
add
xor
add
inc
add
add
dec
add
xor
add
pusha
add
add
add
add
pop
add
add
addb
add
cmp
push
add
inc
pop
add
add
add
add
mov
add
add
or
sbb
sbb
cmp
push
add
inc
or
add
add
pusha
add
add
add
add
or
sbb
sbb
inc
add
inc
or
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
das
add
pop
dec
add
faddl
add
movsb
dec
add
mov
dec
add
sub
add
dec
dec
add
add
add
cmp
add
js
add
mov
add
lock
add
add
test
add
faddl
add
add
add
and
add
add
add
add
add
add
addb
add
sbb
add
inc
add
add
add
or
or
add
add
sub
add
call
add
add
add
sbb
sbb
and
inc
add
add
add
add
add
add
sbbb
add
add
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
adcb
add
add
add
add
add
add
addb
add
sub
xor
or
add
add
add
add
sbb
sbb
sub
xor
or
add
add
add
add
addb
add
xor
xor
or
add
push
add
add
addb
add
xor
inc
add
add
add
add
add
add
xorb
add
pop
add
add
addb
add
cmp
inc
add
add
add
add
add
add
orb
add
add
add
dec
add
add
add
addb
add
cmp
test
or
add
add
incl
add
lods
decl
add
cmpb
add
add
add
or
or
xor
add
adc
add
rolb
add
or
add
dec
add
add
add
addb
add
inc
add
adc
add
add
add
incl
add
lods
or
or
add
add
or
or
jl
add
add
add
or
or
xor
add
and
or
sbb
sbb
inc
add
inc
or
add
add
or
add
les
add
add
add
add
add
add
addb
add
dec
add
or
add
add
add
or
sbb
sbb
dec
add
add
add
add
add
add
cmp
incl
add
add
or
addb
add
push
add
inc
or
add
add
or
add
sbb
add
or
add
and
push
add
add
addb
add
push
add
inc
push
add
add
add
add
add
pop
add
or
add
and
ltr
add
addb
add
pop
add
inc
sldt
add
add
add
add
pop
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
dec
add
xor
add
or
add
jo
add
orb
nop
dec
add
fmuls
add
dec
add
fs
add
movsb
dec
add
fmull
add
dec
add
cld
dec
add
cmp
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
clc
add
add
add
inc
add
add
add
xor
add
sbb
sbb
sbb
pop
add
inc
add
add
add
or
or
add
add
or
add
call
add
add
add
sbb
sbb
and
insb
add
inc
add
add
add
or
or
add
add
pop
add
subb
add
add
add
or
add
cmp
add
or
add
xor
add
sbb
sbb
and
pop
add
inc
add
add
add
or
or
add
add
or
add
in
add
or
add
cmp
add
sbb
sbb
sub
insb
add
inc
add
add
add
or
or
add
add
or
or
add
add
or
add
in
add
or
add
cmp
add
sbb
sbb
sub
insb
add
inc
add
add
add
or
or
add
add
or
or
add
add
or
add
in
add
or
add
add
add
add
add
add
add
add
add
add
push
add
or
add
pop
push
add
nop
push
add
mov
add
add
add
xor
add
insb
add
add
add
and
add
sub
add
sbb
sbb
sbb
pop
add
adc
add
add
add
add
or
or
xor
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
xor
add
adcb
or
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
mov
add
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
adcb
add
dec
add
inc
add
add
add
add
push
add
or
add
and
pop
add
add
adcb
add
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
cmp
dec
add
inc
pop
add
add
add
add
add
add
or
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
inc
add
inc
or
add
add
add
add
insb
push
add
or
add
and
or
sbb
sbb
dec
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
dec
add
inc
or
add
add
add
add
movsb
push
add
or
add
and
or
adcb
add
inc
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
adcb
add
add
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
pusha
push
add
pusha
push
add
cwtl
push
add
cwtl
push
add
fcoms
add
push
add
adc
add
adc
add
push
push
add
push
push
add
mov
add
push
add
rclb
add
add
sub
add
dec
add
add
add
xchg
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
js
add
in
pop
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
xor
add
pop
push
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
mov
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
or
add
enter
or
add
and
add
sbb
sbb
sub
inc
add
add
add
add
add
add
cmp
incl
add
add
add
adcb
add
add
inc
add
add
add
or
add
or
add
add
add
push
add
add
addb
add
xor
pushf
add
push
push
add
add
add
add
add
add
add
andb
add
add
addb
add
add
add
add
add
inc
add
or
add
cmp
pop
add
add
addb
add
cmp
je
or
add
add
jo
add
decl
add
or
add
xor
add
or
add
in
add
or
add
sbb
or
sbb
sbb
cmp
xor
or
add
add
add
add
add
add
addb
add
inc
add
adc
add
add
add
add
lods
or
or
xor
add
cmp
or
sbb
sbb
inc
add
adc
add
add
add
incl
add
lods
or
or
add
add
or
or
xor
add
cmp
or
sbb
sbb
dec
add
adc
add
add
add
incl
add
lods
or
or
add
add
or
or
xor
add
sbb
or
sbb
sbb
dec
add
or
add
add
add
add
addb
add
push
add
adc
add
add
add
ljmp
add
or
or
add
add
or
or
xor
add
sbb
push
add
add
addb
add
push
add
or
add
add
add
ltr
add
addb
add
pop
add
add
add
add
add
add
sbbb
add
cmp
adc
sbb
sbb
pop
add
adc
add
add
add
ljmp
add
or
or
add
add
or
or
xor
add
and
adc
sbb
sbb
pusha
add
add
add
add
add
add
dec
push
add
add
add
and
adc
sbb
sbb
add
add
add
add
add
add
dec
push
add
add
add
sbb
adc
sbb
sbb
push
add
add
add
add
add
sbb
sbb
insb
add
inc
adc
add
add
or
or
add
add
xor
add
js
add
or
add
and
adc
addb
add
jo
dec
add
add
add
add
add
add
add
add
add
push
add
add
addb
add
je
dec
add
add
add
add
add
add
dec
push
add
add
add
and
pop
add
add
addb
add
js
dec
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
jl
dec
add
add
add
add
add
add
dec
push
add
add
add
and
sbb
sbb
sbb
addb
add
inc
sbb
add
add
push
xor
add
add
add
sbb
sbb
sbb
test
push
add
inc
sbb
add
add
push
xor
add
add
add
sbb
sbb
sbb
mov
push
add
inc
sbb
add
add
push
sbb
add
add
add
sbb
sbb
sbb
mov
dec
add
add
add
add
add
add
pop
push
add
add
add
xor
sbb
addb
add
nop
add
inc
sbb
add
add
pop
push
add
add
add
fadds
add
cwtl
push
add
or
add
sbb
push
add
add
addb
add
xchg
add
or
add
add
add
add
add
add
addb
add
cwtl
add
adc
add
add
add
add
lods
or
or
xor
add
sbb
and
sbb
sbb
pushf
add
or
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
addb
add
movsb
add
or
add
add
add
add
add
add
addb
add
test
xor
or
add
add
add
add
sbb
sbb
lods
add
or
add
add
add
add
addb
add
mov
xor
or
add
add
add
add
addb
add
mov
xor
or
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
sub
sbb
sbb
rolb
add
add
add
add
add
add
or
add
add
add
and
sub
sbb
sbb
les
dec
add
inc
sub
add
add
or
add
lock
add
or
add
and
sub
sbb
sbb
enter
and
add
add
add
add
cmp
incl
add
add
sub
sbb
sbb
int3
add
inc
sub
add
add
add
pop
add
or
add
and
sub
addb
add
rolb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
addb
add
aam
dec
add
inc
das
add
add
add
add
add
add
or
add
and
das
add
add
addb
add
fadds
inc
add
add
add
add
add
add
cmp
incl
add
add
xor
sbb
sbb
faddl
dec
add
inc
xor
add
add
add
add
test
add
or
add
and
xor
sbb
sbb
loopne
inc
add
add
add
add
add
add
cmp
incl
add
add
xor
sbb
sbb
in
dec
add
inc
xor
add
add
or
add
in
add
or
add
and
xor
sbb
sbb
call
inc
xor
add
add
fadds
add
sbb
add
add
add
xor
sbb
sbb
in
add
inc
xor
add
add
nop
add
add
pop
add
or
add
dec
add
addb
add
lock
add
add
incl
add
lods
decl
add
xor
add
add
add
or
or
xor
add
nop
add
add
pop
add
or
add
and
add
add
addb
add
hlt
add
inc
aaa
add
add
add
add
add
add
or
add
and
aaa
add
add
addb
add
clc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
addb
add
cld
add
or
add
add
add
add
add
add
addb
add
add
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
push
add
insb
push
add
test
add
in
push
add
in
push
add
nop
push
add
mov
add
pop
push
add
jo
add
movsb
push
add
mov
add
mov
add
push
add
loopne
add
cld
push
add
adc
add
sub
add
pop
push
add
adcb
mov
sbb
add
sbb
add
push
add
in
push
add
add
add
and
add
inc
push
add
jo
add
mov
push
add
fcoml
add
push
add
or
add
pop
add
xor
add
add
pusha
pop
add
js
add
xchg
pop
add
mov
add
fcompl
add
pop
add
or
add
pop
add
inc
pop
add
inc
pop
add
sbbb
sbbb
enter
cld
pop
add
mov
add
fcomps
add
pop
add
sub
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
jo
add
cwtl
add
add
add
add
add
add
add
add
add
jo
add
xchg
add
add
add
add
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
in
add
add
add
xor
add
dec
add
add
jl
add
xchg
add
add
les
add
or
add
xor
add
push
push
add
js
add
pushf
push
add
rolb
add
push
add
or
add
sub
add
push
pop
add
je
add
mov
pop
add
add
add
sbb
add
and
add
and
add
sbb
sbb
sbb
dec
add
inc
add
add
add
or
add
js
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
rolb
add
and
add
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
rolb
add
cmp
add
add
add
add
sbb
sbb
sub
inc
add
add
add
add
add
add
cmp
incl
add
add
add
addb
add
xor
dec
add
inc
add
add
add
add
add
or
add
sbb
push
add
add
addb
add
xor
xor
or
add
add
add
add
add
add
addb
add
cmp
xor
or
add
add
add
add
add
add
addb
add
cmp
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
sldt
dec
pop
add
dec
pop
add
pop
pop
add
je
add
mov
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
andb
add
add
add
add
add
add
add
add
add
sbb
sbb
cwtl
add
inc
add
add
add
add
add
adc
add
or
add
and
add
sbb
sbb
pushf
add
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
mov
inc
add
add
add
dec
add
add
add
and
add
sbb
sbb
movsb
add
inc
add
add
add
dec
add
add
add
and
add
sbb
sbb
test
dec
add
inc
add
add
add
xor
add
sub
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
fcomps
add
pop
add
add
add
and
add
dec
add
add
add
add
add
add
sbb
sbb
cwtl
add
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
pushf
add
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
mov
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
movsb
add
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
test
push
add
inc
add
add
add
push
pop
add
or
add
push
add
add
add
add
add
add
add
add
add
add
sbb
add
add
dec
pop
add
fs
add
add
add
and
add
dec
add
add
add
add
add
add
sbb
sbb
cwtl
add
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
pushf
add
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
mov
inc
add
add
add
push
pop
add
or
add
and
add
sbb
sbb
movsb
add
inc
add
add
add
push
pop
add
or
add
push
add
add
add
add
add
add
add
add
pop
add
dec
pop
add
fs
add
add
add
and
add
dec
add
add
add
add
and
add
sbb
sbb
cwtl
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
pushf
add
inc
add
add
add
add
add
enter
or
add
push
add
add
add
add
pop
add
add
add
and
add
and
add
and
add
sbb
sbb
cwtl
add
inc
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
add
add
addb
add
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
xor
add
add
add
add
sbb
sbb
and
inc
add
add
add
add
add
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
xor
add
push
pop
add
or
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
inc
pop
add
inc
pop
add
add
add
and
add
dec
add
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
or
add
in
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
test
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
addb
add
sub
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
pusha
sbb
add
add
add
add
add
dec
add
add
add
add
add
add
sbb
sbb
sbb
push
add
inc
add
add
add
rolb
add
pop
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
cwtl
add
add
pusha
add
or
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
dec
pusha
add
or
add
push
add
sbb
sbb
sub
test
or
add
add
andb
add
add
add
add
cmpb
add
add
add
add
sbbb
add
or
or
add
add
or
or
add
add
sbb
add
addb
add
xor
xor
or
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
xor
add
xchg
xor
add
pusha
add
add
add
and
add
dec
add
add
add
add
add
add
and
add
sbb
sbb
xor
inc
add
add
add
add
add
or
incl
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
adc
add
rolb
add
or
add
push
add
add
add
add
xor
add
xor
add
add
add
add
dec
add
add
add
sbb
sbb
xor
inc
add
add
add
add
add
or
incl
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
adc
add
rolb
add
or
add
push
add
add
add
add
xor
add
xor
add
add
add
add
dec
add
add
add
sbb
sbb
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
add
add
jo
add
or
add
push
add
add
add
add
add
add
add
add
add
insb
add
add
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
clc
popa
add
or
add
add
add
add
add
add
add
movsb
popa
add
movsb
popa
add
fsubs
add
add
add
add
dec
add
add
add
and
add
sbb
sbb
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
add
add
dec
bound
add
add
add
add
add
add
add
add
xor
add
add
add
and
add
dec
add
add
add
sbb
sbb
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
add
add
jl
add
or
add
push
add
add
add
add
xor
add
xor
add
add
add
add
dec
add
add
add
sbb
sbb
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
rolb
add
add
add
add
add
add
add
add
xor
add
xor
add
add
add
add
dec
add
add
add
sbb
sbb
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
cmp
dec
add
inc
add
add
add
add
add
int3
bound
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
addb
add
sbb
test
or
add
add
andb
add
add
add
add
cmpb
add
add
add
add
sbbb
add
or
or
add
add
or
or
add
add
add
add
xchg
xor
add
add
add
add
and
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
sub
add
or
add
add
add
add
add
sbb
add
sbb
add
add
add
and
add
js
add
and
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
xorb
add
add
sbb
add
sbb
sbb
and
xor
or
add
add
add
add
add
add
addb
add
and
xor
or
add
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
or
add
les
add
add
add
add
add
add
add
add
add
add
pusha
arpl
add
add
arpl
add
add
add
add
cmp
add
push
add
add
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
xor
add
jl
add
or
add
and
add
sbb
sbb
xor
inc
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
and
add
dec
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
rolb
add
jl
add
or
add
and
add
sbb
sbb
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
cmp
add
add
add
and
add
dec
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
jl
add
or
add
and
add
sbb
sbb
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
cmp
add
add
add
and
add
dec
add
add
add
sbb
sbb
sub
push
add
inc
add
add
add
dec
add
add
add
and
add
sbb
sbb
xor
dec
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
and
add
dec
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
or
add
pushf
adc
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
add
add
fsubl
add
add
and
add
xor
add
sbb
add
sbb
sbb
sbb
xor
or
add
add
add
add
add
add
addb
add
and
xor
or
add
add
add
add
add
add
add
pop
add
je
add
add
add
sbb
add
insb
add
add
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
orb
add
add
and
add
sbb
sbb
and
inc
add
add
add
add
add
add
cmp
incl
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
andb
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
nop
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
rolb
add
add
or
add
and
add
addb
add
xor
dec
add
inc
add
add
add
add
data16
or
add
and
push
add
add
addb
add
xor
dec
add
inc
push
add
add
add
add
add
add
or
add
and
pop
add
add
addb
add
cmp
dec
add
inc
pop
add
add
add
add
add
add
or
add
and
or
sbb
sbb
cmp
dec
add
inc
or
add
add
add
add
lods
data16
or
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
cmp
incl
add
add
or
sbb
sbb
inc
add
inc
or
add
add
add
add
call
add
add
or
sbb
sbb
dec
add
inc
or
add
add
or
add
js
add
or
add
and
or
sbb
sbb
dec
add
inc
or
add
add
or
add
pop
add
or
add
and
or
addb
add
push
add
inc
or
add
add
add
and
add
add
add
push
add
add
addb
add
push
add
inc
push
add
add
add
add
add
add
or
add
and
ltr
add
addb
add
pop
add
inc
sldt
add
add
add
add
add
or
add
and
adc
sbb
sbb
pop
add
inc
adc
add
add
add
add
jl
add
or
add
and
adc
sbb
sbb
pusha
add
inc
adc
add
add
addb
add
add
add
adc
sbb
sbb
add
inc
adc
add
add
addb
add
add
add
adc
sbb
sbb
push
inc
adc
add
add
xor
add
sub
add
or
add
and
adc
sbb
sbb
insb
add
inc
adc
add
add
xor
add
dec
dec
add
or
add
sbb
adc
addb
add
jo
xor
or
add
push
add
add
addb
add
je
inc
add
add
add
add
add
add
subb
add
add
add
pop
add
add
addb
add
js
add
add
add
add
add
add
adcb
add
add
or
or
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
push
add
cwtl
add
test
add
call
data16
pop
data16
mov
add
data16
shlb
add
add
cld
data16
loopne
add
adc
add
sub
add
add
xchg
add
les
add
add
call
add
adc
add
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
aam
add
clc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xor
add
inc
xchg
mov
mov
push
insl
dec
filds
iret
insb
sub
lret
aaa
imul
push
dec
xchg
lods
jge
xchg
in
xlat
add
xor
je
imul
and
jl
js
and
dec
pop
dec
in
xor
frstor
mov
mov
or
stos
ds
pop
icebp
mov
pop
hlt
xor
cs
jecxz
roll
pop
or
sbb
pusha
or
sarb
pop
ss
test
push
sbb
pop
cmp
pop
jle
movsl
xor
mov
fs
mov
cmp
in
push
mov
scas
ret
sbb
jecxz
gs
pop
and
adc
pop
jno
or
mov
inc
cli
push
js
adc
xlat
sbb
rcll
xchg
mov
jmp
lahf
mov
inc
inc
pop
hlt
xor
xor
jl
cmc
stc
xor
xchg
xchg
ss
aad
mov
mov
lods
adc
xor
push
rcl
dec
or
cs
clc
lcall
mov
addr16
ds
loope
scas
inc
andl
adc
cmp
prefetchw
cmp
xchg
mov
iret
mov
mov
cmpsl
inc
xor
jae
arpl
lret
dec
movsb
outsl
push
out
clc
xor
xchg
ja
jp
movb
and
cwtl
adc
dec
icebp
stos
mov
leave
lock
sub
repz
push
xchg
push
mov
adc
outsb
daa
push
add
scas
and
addr16
pop
mov
xchg
sbb
imul
cmp
xchg
push
xor
inc
inc
inc
lret
int
xchg
mov
xor
jg
sbb
out
jge
xor
pop
and
int
jbe
testb
jecxz
ljmp
lds
jne
stc
sbb
icebp
fcoml
insl
idivl
lock
xlat
pop
test
mov
and
lret
adc
xor
loopne
and
inc
jmp
lret
sbb
cwtl
pop
in
and
mov
jmp
push
dec
loope
shr
mov
stos
mov
pop
out
leave
xor
or
xchg
arpl
frstor
mov
cmp
test
pop
addr16
enter
addr16
loopne
aam
fisubrl
and
xor
xchg
sti
mov
push
mov
lds
daa
push
jp
aaa
movsl
push
push
dec
mov
test
ret
fsubrs
push
call
sti
xor
repz
pop
sbb
and
sub
add
int
add
popa
mov
pop
mov
and
xchg
test
inc
out
mov
xchg
pushf
jle
cltd
aas
mov
data16
in
loopne
loopne
iret
push
out
push
push
xchg
lcall
movsl
out
dec
cmc
es
aad
dec
into
cmp
pop
and
push
mov
push
dec
sbbb
loop
push
pop
add
out
and
jmp
dec
loope
das
and
push
andl
sbb
and
pusha
sbb
adc
mov
sbb
xor
mov
pop
fiaddl
sbb
add
mov
bound
sub
jmp
mov
call
idivl
rcll
popa
mov
sub
ja
lds
int
lods
in
mov
sub
xchg
xor
mov
cmp
dec
dec
imul
adc
shlb
loopne
data16
mov
dec
jecxz
cmc
push
push
sahf
add
xor
xchg
fmull
enter
out
mulb
divl
lahf
xor
dec
add
repz
pusha
dec
lods
lods
inc
mov
jo
mov
test
push
sub
sbb
aam
mov
enter
mov
outsb
jo
ss
cmp
addr16
in
sbb
pop
test
adc
fwait
jmp
jo
cs
jle
out
scas
lcall
daa
data16
or
hlt
jecxz
dec
adc
jo
jmp
pop
mov
shrb
test
add
pop
dec
mov
sub
add
sbb
repz
sub
dec
int3
adc
push
push
inc
leave
sub
add
or
add
lret
and
lret
xlat
je
pushf
cmpsl
push
iret
jns
mov
xor
dec
mov
jecxz
mov
jne
dec
jmp
scas
sub
pushf
lret
daa
xlat
mov
lods
sarb
stc
popf
sbb
xchg
aam
jno
add
xchg
jecxz
jae
xor
bswap
sbb
adc
sbb
cmpsl
jae
das
xchg
lret
push
jae
fstps
and
mov
cmc
and
icebp
ret
loop
jp,pn
ror
mov
xchg
xchg
adc
mov
mov
mov
movsl
cwtl
sbb
sub
mulb
mulb
cltd
dec
push
out
push
popf
and
in
mov
mov
fstl
xlat
xchg
lods
out
mov
ss
jo
mov
cmp
sbb
std
in
xchg
jp
enter
cmc
cmc
push
mov
mov
divl
popl
add
std
push
lods
scas
add
gs
dec
mov
mov
xchg
ror
adc
cmp
sub
add
adc
jle
mov
sarl
fs
cmp
xchg
add
pop
and
pop
jge
add
adc
cmp
js
lcall
repnz
cwtl
daa
mov
adc
test
pop
pop
xchg
dec
stos
push
out
in
inc
jbe
ss
xor
push
lods
test
insl
aaa
jp
lret
rol
add
dec
hlt
jmp
cmp
imul
lock
inc
pop
or
cmp
xor
cwtl
idivl
xchg
jnp
out
xchg
mov
mov
jne
or
or
jg
and
shl
das
orb
and
push
iret
adc
data16
dec
nop
cs
sbb
aad
stos
mov
pop
dec
out
sbbb
or
mov
dec
sti
xchg
xor
jne
or
inc
mov
ss
popa
or
loopne
mov
push
mov
mov
mov
in
lods
cmp
jg
int
rorl
cltd
pop
xlat
pop
inc
iret
xor
sbb
movsb
mov
inc
fwait
xchg
in
add
sahf
imul
jo
cwtl
push
or
filds
aas
mov
scas
pop
mov
xchg
daa
xor
pop
test
fdivrs
pop
stc
loope
and
daa
movsl
lock
adc
lds
or
stc
ljmp
ja
adc
lahf
push
inc
adc
loop
daa
inc
in
inc
lret
jg,pt
dec
cmp
xchg
scas
popf
gs
data16
xor
das
ss
xchg
adc
ja
in
jmp
and
push
test
dec
sbbb
lea
pop
mov
sbb
cmpsl
jmp
shll
push
or
jne
mov
fwait
xorl
cmp
push
mov
dec
sbb
scas
cmp
pop
mov
sub
cwtl
jg
sbb
popa
nop
popf
sbb
add
inc
test
xor
dec
jge
jle
push
mov
ds
mov
add
mov
mov
jmp
jecxz
mov
lcall
push
sahf
mov
repz
addr16
pop
sarl
aad
xchg
in
pusha
insl
mov
clc
jecxz
and
fdivrs
push
push
popa
aaa
addl
mulb
mov
and
mov
cmpsb
fldcw
rclb
outsb
or
xchg
and
sbb
inc
sbb
shll
sbb
bound
icebp
add
xlat
test
mov
aad
xor
aaa
dec
pop
xor
out
adc
stos
int3
mov
mov
mov
sbb
mov
int
dec
sti
sahf
xlat
sub
dec
xchg
jl
jl
stos
clc
xor
in
jae
rorl
sbb
adc
mov
xchg
dec
sti
mov
sub
loope
hlt
sarl
xor
adc
xor
bound
sub
adc
repz
push
sub
cmpsl
test
xchg
jno
xchg
jb
push
xchg
dec
stos
pop
stos
add
je
sub
dec
cmpl
out
jl
test
int
divb
jo
mov
dec
pop
shr
cmp
lds
jle
mov
ficoml
ja
outsl
mov
adc
fstpt
mov
adc
lret
int
mov
push
stc
and
in
jecxz
pop
xor
xchg
xor
jp
jnp
mov
mov
mov
cmp
mov
insb
xlat
mov
mov
je
test
adc
pop
jae
sub
mov
push
inc
or
lret
mov
jnp
add
sub
pop
inc
cmp
inc
or
sahf
and
dec
stc
ja
insb
cltd
xor
gs
frndint
mov
cmp
cld
dec
jb
adc
and
adc
mov
cmp
insl
fdivrl
add
shrl
push
cmc
cld
or
shrl
or
push
lret
cwtl
addr16
pop
adc
sub
mov
ret
dec
mov
or
in
jne
or
push
adc
sbb
loop
cmp
mov
rorb
mov
js
mov
cli
push
cwtl
mov
sub
push
jmp
add
lcall
cltd
adc
jb
in
push
xchg
adc
xchg
xchg
int
xchg
push
arpl
jmp
test
cmpl
movsl
rol
push
pop
dec
icebp
push
cmp
cmp
mov
sbb
sub
cld
test
stos
mov
mov
out
sbb
xor
and
sub
adc
cmp
cmp
pop
jl
inc
jle
mov
mov
scas
dec
hlt
scas
mov
outsl
lret
fcomp
pop
cmp
mov
pop
cmp
cwtl
xchg
daa
jne
mov
aaa
mov
std
push
dec
mov
cli
scas
rcrl
xor
or
ffree
mov
cmc
pop
push
jmp
xchg
xchg
jno
nop
and
out
xor
lds
xlat
push
test
mov
push
dec
or
pop
sbb
les
xor
sbb
pop
push
cmp
or
scas
mov
dec
xor
xchg
xchg
and
pusha
adc
xorb
or
pop
and
out
mov
aaa
fisttpll
insl
add
inc
insb
jmp
cmp
or
push
test
xor
add
mov
mov
dec
test
jg
mov
jp
jge
xor
dec
dec
shlb
mov
cmpsb
jo
les
mov
xchg
out
pop
aad
adc
pop
stos
sbb
jne
mov
cmp
hlt
and
xchg
in
mov
jle
mov
test
lds
jge
push
cmp
mov
insb
sbb
sti
je
rcll
addr16
xor
jg
in
xchg
xorl
dec
ds
mov
enter
adcl
cmp
rcl
push
adc
out
pop
lret
ja
add
fimull
dec
sbb
push
inc
jo
jae
push
stos
mov
ljmp
loop
pop
in
push
sbb
sub
and
lcall
mov
jne
push
fdivs
jb
call
mov
inc
push
sbb
stc
pusha
sbb
and
ror
mov
jp
mov
cmc
aam
cmp
bound
cs
fimuls
adc
sahf
dec
test
sbb
push
in
pop
dec
repnz
fstpl
jmp
hlt
aad
je
mov
push
jmp
sbb
add
call
fmuls
jecxz
test
mov
push
cmpsb
addr16
call
adc
cmp
pop
sbb
adc
into
ficomps
leave
mov
and
out
mov
fmulp
push
jg
cli
stc
or
adc
cmp
xchg
and
mov
cltd
adc
lds
xlat
xorw
out
and
int
xchg
out
or
or
or
out
std
push
add
lcall
sbb
cmp
aas
jnp
shrl
mov
popf
outsl
push
out
add
fisubs
shrb
cmp
sahf
sbb
lahf
addr16
cmp
sarl
fsubrs
or
lea
mov
in
pop
and
movsl
enter
aaa
mov
push
scas
mov
out
es
jo
fdivl
cmp
xor
loop
stos
push
push
cmpsl
cmp
dec
dec
enter
sti
push
mov
mov
sub
jecxz
cmc
mov
push
and
mov
jge
pop
out
sbb
dec
xchg
lods
dec
push
xchg
xchg
aam
pop
inc
jbe
ja
cmp
data16
imul
mov
lock
dec
xorb
ljmp
shl
data16
mov
mov
mov
mov
xlat
pushf
xchg
out
shl
dec
insb
ficomps
mov
sub
out
lods
movsb
out
dec
jbe
hlt
adc
mov
mov
into
lods
int
iret
sub
shrb
sub
jbe
out
pop
cmp
mov
jns
jecxz
inc
cld
inc
roll
arpl
cmp
jmp
inc
loop
movsl
dec
loope
push
in
cmp
shrd
mov
or
xchg
sbb
push
mov
mov
sahf
and
cmp
dec
mov
sar
ss
push
ds
cmc
jecxz
xor
pushf
and
in
pop
mov
jmp
test
aam
push
cmp
inc
mov
ds
les
out
jae
mov
or
jo
fidivrl
mov
xor
insl
dec
xorb
dec
rorb
in
lret
mov
sbb
and
imul
adc
cli
stos
adc
mov
dec
push
loope
push
out
outsl
dec
mov
push
sbb
pushf
mov
mov
iret
filds
dec
sub
clc
iret
dec
fwait
lret
sub
sbb
sbb
pop
in
lret
xchg
subb
icebp
xor
mov
mov
mov
jmp
adc
mov
fstp
adc
pop
dec
sub
jne
adc
inc
sbb
mov
ret
cwtl
int3
imul
pop
add
mov
lret
int
outsl
add
xchg
imul
push
shr
xor
repz
lret
xchg
adc
push
iret
pop
pop
cld
dec
xchg
mov
xchg
mov
std
shlb
adc
mov
cmp
jne
popa
add
jae
iret
mov
popa
enter
cmpsl
dec
add
jae
and
rcll
xchg
xchg
shlb
jo
sub
cmp
cmp
lret
push
xor
scas
xchg
adc
mov
pop
ror
fadds
push
ret
lahf
inc
xor
xchg
xchg
sbb
mov
dec
fisubs
sbb
xchg
cmp
mov
inc
loop
jl
add
dec
adc
in
push
jmp
leave
mov
xchg
jecxz
scas
push
movsl
cltd
addr16
cmpl
dec
sar
ss
xor
jno
cs
adc
or
sahf
sbb
sub
test
jle
push
ss
ret
add
scas
in
xlat
or
dec
pop
adc
push
sbb
sbb
mov
push
aas
jne
dec
xchg
shll
std
lods
outsb
stos
lcall
pushf
push
dec
je
repnz
sub
xchg
sahf
sbb
sub
push
out
add
clc
mov
enter
pop
inc
cmp
out
lret
scas
dec
dec
sub
jnp
mov
fst
jbe
push
xchg
out
pop
push
popa
push
into
cmc
pop
cmp
ret
mov
cltd
sti
push
ljmp
inc
cmpb
outsl
out
mov
test
popf
and
mov
push
sbb
mov
sbb
xchg
jo
lret
fisubs
or
cmpsl
sub
leave
mov
sub
mov
sub
sbb
jnp
adc
xorl
loopne
mov
sbb
mov
mov
gs
jae
add
insb
lret
ljmp
xor
mov
pusha
mov
das
addl
sub
aad
test
xor
push
out
jb
pop
jg
fs
sbb
cmp
mov
push
ss
outsl
jecxz
popf
fwait
scas
mov
push
movsb
adc
cli
fstpl
aad
adc
cmp
inc
notb
mov
mov
ds
inc
out
dec
adc
push
push
xor
mov
repnz
and
and
data16
and
loope
dec
ds
lahf
inc
and
lds
mov
pop
lret
dec
ljmp
sub
rorb
out
mov
pusha
sbb
in
out
jo
sub
fcmovu
stos
add
xchg
xor
inc
test
shl
dec
pop
dec
mov
cmp
into
lret
and
int
stos
xchg
add
jns
fwait
int
mov
xor
adc
js
imul
mov
pop
scas
out
mov
cmp
sub
jnp
or
push
jno
pushf
adc
outsl
jnp
cmp
add
xor
aas
scas
sub
adcl
push
into
mov
int
xchg
adc
repnz
scas
pop
lods
outsl
inc
popa
push
stos
stos
ljmp
push
divb
test
or
pop
xchg
push
pop
inc
pop
pop
inc
int
add
les
decl
push
out
leave
xchg
bound
xchg
aaa
into
lea
hlt
ja
movsl
arpl
adc
add
push
cmp
sbb
mov
test
push
aaa
add
mov
xchg
and
aas
ja
daa
or
lods
mov
test
pop
cli
pop
jmp
xor
mov
fimuls
pop
sbb
add
pop
pop
jl,pt
and
movsb
jb
dec
sbb
sbb
dec
xor
outsb
pop
shrl
push
jp
addr16
cld
jnp
call
add
lcall
jl
lock
jno
ret
push
mov
rorl
rcr
orl
roll
repz
xor
and
mov
stos
xchg
mov
daa
out
mov
pusha
fistpl
cmp
dec
mov
mov
iret
lahf
icebp
mov
test
call
xchg
pop
fadd
jp
sub
mov
push
fisttpl
or
mov
scas
rcl
mov
addl
popa
mov
xchg
sahf
shrb
or
lock
aas
in
pop
imull
into
js
dec
cmc
in
in
cmpsl
mov
jne
fsubrs
push
xchg
or
and
lods
sub
mov
call
fsubl
lahf
or
jns
subl
les
push
test
mov
xchg
fbstp
sbb
add
lret
push
or
ds
mov
adc
test
std
sub
fsts
shll
std
cmc
arpl
insb
pop
xor
loope
int3
or
int3
jecxz
mov
xor
ja
jns
jg
push
leave
aad
aam
mov
add
into
inc
fsubrs
int
xor
jns
daa
dec
cmpsl
jle
add
call
lret
jno
sub
push
sahf
and
scas
mov
fildll
rcrl
movsl
movb
xor
push
mov
orb
lods
stos
inc
sbb
rolb
lock
and
pmulhw
xchg
jp
pop
repz
ja
gs
orb
test
push
dec
movsl
cmpsb
test
test
movsl
fs
mov
test
es
pop
sub
aas
aam
idiv
jp
mov
mov
sahf
data16
dec
lds
idivl
add
in
arpl
cs
mov
cmc
testb
sbb
pop
popf
pop
lods
out
mov
mov
mov
dec
in
test
mov
in
mov
loope
xor
mov
cmc
mov
or
test
or
push
clc
aam
jge
adc
or
jo
dec
lods
stos
and
incb
mov
lods
jle
sbb
pop
cld
mov
mov
pop
jge
sub
xor
jno
dec
push
imul
aad
adc
cmp
pop
push
inc
loope
arpl
scas
icebp
xchg
fwait
xchg
es
xor
mov
dec
enter
popf
cmp
dec
psubusw
jge
adc
stc
sub
fstpt
cmc
dec
arpl
nop
mov
mov
and
push
mov
insb
mov
mov
lret
inc
mov
jae
lds
sahf
adc
repz
fcmovnb
jp
fcomp
imulb
mov
lret
je
push
into
arpl
out
cmp
aad
sub
xor
or
addr16
int
std
sub
fnstsw
ret
cmp
push
and
popf
sbb
pop
data16
jmp
pop
push
imul
xchg
popf
ffree
mov
stos
out
sahf
clc
adc
lea
fcmovu
or
test
loope
add
filds
prefetch
or
push
cmpsb
mov
xchg
icebp
sub
cld
std
test
icebp
mov
loopne
push
in
xchg
call
jg
push
pop
inc
mov
test
pop
sub
mov
and
or
test
ja
push
cwtl
loop
fistl
xor
cmp
jo
enter
lret
dec
pop
or
and
inc
daa
in
and
pushf
in
lock
and
das
mov
loop
add
fmul
pop
cmp
aas
fldl
xorl
in
jnp
ljmp
jb
adc
sbb
sbb
push
sub
add
xlat
fwait
inc
xchg
mov
xorb
or
dec
sub
lods
xchg
push
cmp
dec
cmp
aas
xor
and
scas
sbb
adc
cs
and
jl
ja
leave
jecxz
ret
mov
fldt
jns
gs
scas
jmp
xchg
mov
pop
pop
imul
insb
cmp
repnz
xchg
call
pop
jb
ss
cmpsb
xchg
test
cmp
jns
outsl
test
scas
cmc
jmp
leave
sub
in
lcall
jge
ret
xor
jl
pop
in
fwait
decl
sbb
sbb
into
add
adc
lcall
lret
ljmp
lret
jmp
cmp
sub
mov
aam
jl
mov
adc
push
mov
outsb
and
fcom
in
fisubs
int3
xchg
out
or
sti
stos
or
sbb
insb
movups
dec
push
pop
push
push
xchg
xor
out
mov
cmpsl
xchg
fiadds
jo
jmp
pop
mov
adc
and
out
mov
or
xchg
pop
mov
add
sbb
mov
adc
and
push
jmp
aas
mov
xor
pushw
je
sbb
subl
cmp
test
or
in
sub
mov
cmpsl
inc
test
lock
test
repnz
cmpsl
sub
fildll
jp
and
cltd
loop
pop
imull
jge
sbb
cld
int3
mov
jnp
and
aaa
mov
aad
sbbb
je
dec
push
xchg
je
jae
daa
popf
xor
shrl
push
cmp
push
dec
fnstsw
and
add
fistps
in
or
sub
push
js
imul
add
add
dec
ja
pop
add
mov
xchg
cs
mov
mov
mov
outsl
add
icebp
push
jmp
mov
fdiv
and
pop
mov
enter
jnp
mov
cmc
dec
cli
xchg
ja
xchg
dec
in
xchg
or
sbb
cmp
sti
mov
je
nop
lret
adc
dec
mov
fsubrs
jecxz
fucomi
jmp
mov
sub
mov
xor
les
or
mov
ror
arpl
jae
das
sti
pop
popf
pusha
movsb
out
ret
mov
outsl
mov
xchg
xchg
das
jl
xchg
pop
pop
adc
inc
test
iret
aaa
adcb
testb
mov
cmpsb
mov
scas
xchg
sub
or
aad
cmovle
testb
sti
xchg
mov
inc
nop
lea
mov
rorl
in
mov
xor
jmp
inc
pop
in
fnsave
scas
or
ret
sub
pop
adc
adc
imul
jnp
push
fldcw
pusha
sahf
hlt
out
dec
jbe
xor
lcall
jmp
fdivrl
xor
pop
std
jmp
xchg
add
loopne
push
add
in
mov
cmpsb
xorl
cmp
adc
loopne
jo
jne
andl
jae
mov
mov
sub
popa
push
stos
pop
repnz
jmp
push
xchg
divl
dec
movsb
sub
pop
mov
out
insb
pop
xchg
sub
aad
fnstenv
addr16
je
mov
jo
xor
icebp
xor
mov
add
push
out
mov
rclb
xchg
cmp
add
dec
je
xchg
add
leave
mov
pop
fadds
inc
loopne
jg
inc
addr16
test
fstl
loop
fdivl
jns
out
xchg
dec
ficoml
push
into
xor
adc
lods
push
push
xor
decl
call
dec
loopne
xchg
push
xchg
fwait
xor
inc
mov
cmc
aas
and
rcrl
stos
push
xor
ljmp
or
out
sarb
add
mov
xor
xor
pop
mov
cld
and
adc
sub
aaa
insl
mov
mov
ja
sbb
mov
in
fisubrs
jp
and
stos
lcall
js
movsb
lahf
pop
rolb
mov
loope
cmpsl
pop
test
scas
adc
lcall
pop
in
aam
fidivs
repz
mov
sub
add
test
xor
xchg
nop
xor
stos
mov
repnz
lret
mov
lock
popa
dec
dec
outsb
add
dec
add
stos
incl
cltd
xor
ret
jmp
mov
adc
pop
sub
cld
scas
daa
mul
cmp
adc
adc
cmp
add
fstpt
inc
mov
jg
sub
xlat
sbb
dec
inc
outsl
push
decl
adcb
push
addr16
xchg
lahf
stos
sti
mov
dec
in
iret
repz
adc
int
lock
out
inc
aas
out
loope
mov
push
adc
xor
push
pop
or
dec
jb
pop
rcrb
outsl
aam
pop
loop
incl
ret
addr16
jne
pop
and
cmp
sub
sbb
push
mov
outsl
nop
sbb
mov
push
push
mov
jmp
mov
stc
enter
cmp
scas
jne
add
xor
add
aaa
mov
lret
test
test
fs
pushf
add
inc
insl
mov
push
push
out
sarb
jnp
aas
sbb
sub
fdivs
jp
fmull
sti
push
loope,pt
mov
and
pop
jmp
fwait
and
push
fs
lock
lahf
dec
add
adc
aad
clc
mov
lcall
inc
cmc
ret
push
push
mov
xchg
rclb
xchg
pop
fnsave
jae
enter
popf
and
jl
dec
mov
pop
sub
imul
xor
xor
into
into
adc
xchg
xor
mov
loop
ljmp
fdivl
data16
mov
mov
adc
mov
daa
cmp
mov
aam
push
adc
stos
ret
leave
jl
push
int
add
bound
fnstcw
mov
andb
cmp
ds
xchg
lods
lcall
pop
or
sbb
pop
ss
sbb
out
dec
lret
push
mov
or
push
js
data16
fimull
adc
push
aam
mov
imul
mov
sub
lret
dec
lds
sub
cmpsb
xor
cmp
cmpsb
rorl
cmp
loop
adc
cmc
adc
sbb
fcomps
movsb
sbb
pop
xor
daa
jns
aaa
rorb
mov
mov
xor
inc
into
add
xor
adc
fstpt
jmp
sbb
packuswb
fwait
sub
pop
sub
or
cwtl
arpl
scas
mov
xor
inc
or
popa
enter
push
iret
mov
aad
cmpsl
dec
jl
lret
out
pop
push
lcall
test
mov
out
arpl
rorl
adc
negl
push
dec
in
popf
mov
insl
inc
imulb
addr16
sbb
xchg
enter
test
dec
pop
mov
or
test
xchg
sbb
orl
popf
xchg
fistpl
add
mov
xor
scas
lds
enter
insl
mov
pop
rcl
in
sbb
lds
mov
dec
sbb
adc
push
mov
pop
mov
scas
loop
loope
or
js
jbe
push
negl
inc
test
sub
mov
pop
js
neg
mov
jae
sbb
int3
mov
pop
ret
cmp
xchg
push
aaa
movsb
ds
cmp
cmp
mov
rcrb
pop
push
pop
mov
ja
xchg
das
movsb
dec
imul
adc
lret
lea
cs
cld
and
jmp
xor
std
mov
cmp
inc
sti
pop
pop
scas
inc
xchg
lret
cmp
fmull
pop
mov
andl
fdivs
xchg
imul
jg
adc
aam
mov
inc
jno
xlat
ret
scas
stos
adc
inc
aad
xor
pushf
popf
sbb
xchg
jb
mov
adc
stos
arpl
mov
mul
mov
cs
xor
add
shll
dec
pop
fcmovbe
cwtl
mov
and
and
adc
pop
mov
pop
les
es
push
dec
cs
mov
dec
cmp
jg
ret
sti
push
mov
pop
push
jge
xor
arpl
test
and
nop
mov
sbb
lock
jecxz
adc
into
mov
daa
lods
cmc
test
ss
sbb
int3
push
mov
movsl
lods
dec
ja
mov
movsb
sbb
imul
pop
dec
sub
divl
in
lock
mov
jecxz
xor
add
adc
jle
or
and
data16
xchg
imul
dec
cmpsl
mov
sbb
orl
es
adc
insl
insb
or
cwtl
or
mov
xor
mov
imul
ret
jl
jmp
popa
test
jb
or
movsb
orl
jp
add
and
dec
je
push
iret
pop
fnstsw
push
xchg
jmp
sub
sarb
mov
lods
out
pop
lock
and
inc
imul
jg
out
and
xchg
pop
add
jp
bnd
or
sub
sbb
inc
repz
les
rorl
mov
mov
add
ret
test
jmp
pop
dec
jns
push
adc
insb
ljmp
lods
loop
js
jb
js
mov
fwait
js
pushf
adc
xchg
aaa
iret
ret
push
sub
aas
sub
or
testl
mov
push
jp
popl
test
mov
xor
stc
lods
pop
jns
mov
push
push
mov
pop
jle
sbb
lods
loop
fistps
or
jecxz
movsl
nop
and
or
movsb
or
inc
je
cld
fidivrs
push
or
das
lret
test
outsl
jl
cmpl
xor
mov
lock
cli
inc
sbb
call
xchg
or
pop
pushf
es
jmp
inc
xchg
push
adc
ljmp
movsl
rcl
les
mov
enter
pop
lock
adc
xor
je
push
sub
repz
insb
bound
mov
dec
push
fcoms
aaa
push
push
jnp
jl
test
fidivs
mov
jmp
scas
pop
and
arpl
movb
xchg
idiv
xchg
out
push
jmp
test
clc
jle
xchg
push
push
add
pop
mov
mov
push
adc
std
xchg
pop
mov
out
and
jle
dec
hlt
test
bound
ret
cmp
fld
into
ficoml
dec
or
into
fdivrl
mov
jp
pop
scas
outsl
sti
lahf
cwtl
dec
mov
and
pusha
pop
cmp
subl
or
in
push
sbb
pop
and
mov
movsl
mov
bound
shl
test
sbb
into
adc
shll
push
xchg
xchg
xchg
jl
mov
decb
and
mov
jg
inc
xchg
jecxz
call
mov
das
dec
or
lea
loope
pop
int3
dec
int
cld
fimuls
ret
aaa
xchg
dec
fistl
cltd
lods
lock
leave
inc
pop
cmc
pop
mov
add
movsb
cmp
sbb
sbb
pop
sti
mov
pop
xchg
mov
test
sbb
sub
pop
cmp
and
or
lods
push
sbb
jae
lahf
sub
aam
test
lock
sti
pop
pop
cltd
mov
scas
dec
sti
mov
xor
push
push
flds
xchg
mov
iret
sbb
insb
jmp
xchg
jl
jmp
stos
add
xchg
cwtl
imul
popa
xlat
ds
testl
sahf
inc
cwtl
pop
mov
outsb
ljmp
adc
jge
fdivr
outsb
mov
mov
aaa
mov
ret
mov
push
xchg
ret
fnstenv
push
aas
mull
icebp
push
pop
mov
addr16
cbtw
xchg
sbbb
or
dec
jae
push
dec
loopne
sub
pop
test
jg
movsl
in
leave
xor
scas
mov
std
jne
stos
test
sahf
adc
cmc
rcrb
shr
jp
out
pop
mov
dec
cmp
ret
pusha
stos
ja
adc
mov
push
aaa
das
xchg
inc
xchg
pop
sbb
aas
cwtl
cmp
xchg
and
push
out
jno
sarb
mov
push
push
or
loop
in
mov
jecxz
or
fiadds
int3
fst
ss
popa
pop
pop
sub
daa
std
lcall
jnp
jbe
pop
fdivrs
addr16
sub
pop
loopne
pop
mov
mov
and
inc
cmp
dec
pop
sbbl
dec
lcall
movsl
sbb
sbbb
xor
pop
xor
das
pop
movsl
jecxz
lahf
mov
popf
sub
ret
std
xor
pop
decb
and
or
pop
mov
cli
inc
add
pushf
pop
xchg
iret
push
sbb
cmp
mov
adc
mov
sbb
mov
addr16
int
xor
mov
and
movsb
mov
sbb
sub
adc
push
push
push
xchg
lret
mov
cmp
cmp
xchg
cmc
jbe
in
test
gs
test
pop
insb
cmp
xchg
push
mov
adc
xlat
xchg
outsb
ljmp
and
xchg
lret
cwtl
pop
int3
or
inc
sub
rcl
aam
mov
ret
push
ds
or
add
andb
mov
aas
mov
push
jbe
push
add
push
mov
push
pop
nop
gs
lcall
mov
push
sarl
push
dec
or
ja
fstl
fwait
cmp
out
add
push
xchg
mov
xor
xor
and
or
sbb
pcmpgtb
nop
jnp
test
enter
js
mov
shrl
cmp
das
and
sbb
push
xchg
movsb
test
ret
stos
rol
cmpsb
push
sub
jmp
adcl
inc
jo
in
outsl
cmpsb
pushf
sub
in
arpl
mov
gs
mov
dec
in
xchg
pop
xor
ficoms
ficoms
xchg
std
or
and
loop
push
jne
lahf
xchg
push
clc
mov
sbb
in
xchg
and
cmp
push
int3
enter
push
mov
aas
sahf
test
clc
add
scas
rcl
mov
pop
clc
and
add
lock
fwait
lea
hlt
jmp
dec
test
jns
pop
pushf
and
mov
mov
xor
xor
jnp
cwtl
add
cwtl
cltd
jge
dec
test
xchg
mov
ss
lahf
hlt
aam
clc
mov
mov
and
outsb
lock
xlat
xchg
cmpsl
inc
test
ds
out
fcomps
cli
cmpsb
std
adc
ret
adc
pop
fadd
sbb
mov
out
dec
test
xlat
adc
std
out
xor
add
cmc
push
in
lods
xchg
fdivs
movsb
xchg
shll
sbb
push
movsb
cmp
or
sahf
repnz
and
mov
push
dec
subb
test
shlb
xlat
inc
cmp
test
rcrl
fs
pop
shll
jl
in
fcoml
lahf
mov
jg
pop
mov
aas
add
pusha
adc
and
or
push
out
movsb
push
adc
jae
rcll
sti
icebp
loope
jp
in
xor
mov
mov
mov
mov
cli
cmp
dec
sub
dec
rclb
pusha
or
jo
push
insl
sti
or
dec
lods
sbb
in
xchg
mov
xchg
xchg
shl
nop
es
test
fnstenv
and
mov
xchg
sbb
ds
jl
lea
arpl
and
mov
xchg
ret
push
sbb
lcall
cmp
data16
or
sub
jno
adc
lods
out
lock
pshufw
icebp
outsl
arpl
mov
dec
and
jle
and
pop
sbb
jmp
popa
imul
int
jp
sbb
push
test
decb
in
rorl
or
stc
popf
sub
dec
mov
shl
lds
stos
xor
shrb
and
xor
mov
or
dec
out
lea
pop
sub
out
cmp
adc
loopne
in
iret
adc
clc
xor
imul
or
popl
dec
jge
test
ret
and
mov
jbe
mov
inc
into
pop
pop
icebp
adc
test
rolb
out
iret
xchg
or
dec
inc
es
xor
in
xchg
push
je
ret
dec
dec
dec
add
add
pop
test
rcr
add
xchg
push
loop
aad
mov
scas
mov
cmpsl
jb
or
pop
jo
mov
pop
js
mov
xchg
lret
lods
sarb
test
xchg
gs
cwtl
and
mov
orb
leave
pop
dec
fs
pop
shl
shll
rclb
scas
and
inc
and
pop
jl
gs
fwait
stos
add
and
xchg
es
inc
jmp
cld
fsubrs
lcall
mov
jl
in
jno
stos
sub
add
sub
jmp
loopne
inc
pushf
sub
push
nop
jle
stc
sbb
outsb
or
cwtl
or
push
test
pop
sbb
jle
inc
mov
in
ret
mov
repnz
loopne
adc
mov
bound
mov
inc
out
hlt
mov
sbb
and
pop
inc
push
dec
xor
popa
popa
sbb
iret
insb
lret
ret
add
sub
xor
scas
iret
sahf
push
fldcw
adc
pop
aad
and
sahf
fxch
stos
cmp
test
dec
sub
mov
mov
mov
dec
ret
clc
push
in
pop
pop
out
mov
mov
ljmp
fstl
mov
xchg
cld
dec
inc
stos
hlt
pop
out
inc
lds
andb
repnz
mov
or
and
ret
shll
pop
addr16
rcrb
lahf
cmc
adc
lods
lahf
push
insb
shrb
lret
adc
xor
faddl
add
pop
push
repz
sbb
jle
andl
pop
xor
pop
shll
push
and
jecxz
insl
inc
dec
or
jb
mov
add
pop
pop
add
or
fistl
inc
mov
mov
mull
lods
inc
dec
icebp
clc
je
pop
jbe
daa
hlt
aaa
fidivs
sbb
enter
xlat
icebp
bound
out
fwait
icebp
popa
cmp
fldenv
pop
ss
mov
sbb
je
dec
jbe
add
and
mov
pop
xor
ss
push
outsb
insb
pop
mov
pshufw
ja
mov
imul
ret
sbbb
daa
push
shrl
icebp
jg
mov
xchg
ret
hlt
mov
insl
stos
cmpsb
fistl
cs
shl
pop
mov
sti
lds
cli
xor
sub
mov
mov
loope
insb
ficompl
mov
imulb
out
sbb
popf
arpl
pop
cmp
das
add
test
lcall
sbb
aam
les
das
mov
sbb
inc
sbb
out
add
push
push
outsb
fadds
xchg
testb
mov
mov
shrb
out
popa
inc
cmpsl
xlat
pushl
enter
out
dec
cli
jl
mov
xchg
lock
add
mov
xchg
lods
mov
sbb
mov
or
mov
lods
push
stc
ljmp
sbb
mov
ss
adc
fimull
out
pop
movl
js
rcll
jns
into
and
xchg
or
mov
sub
iret
pop
aaa
mov
sahf
mov
add
adc
int
mov
imul
fwait
out
mov
dec
cmp
jge
or
lahf
mov
push
push
adc
adcl
ror
mov
push
sti
cmp
stc
frstor
icebp
insb
loop
mov
mov
add
sbb
cwtl
call
insl
int3
scas
adc
xor
xchg
sub
pop
xlat
mov
mov
jae
int3
dec
cmp
and
mov
cmp
xchg
pop
jp
cmpsb
scas
or
push
add
fistps
roll
add
je
mov
push
adc
sbb
mov
lret
enter
call
mov
insl
icebp
data16
out
pop
jae
add
in
cli
adc
repz
outsb
sbbb
mov
dec
xchg
aaa
xor
ret
sti
push
push
lret
or
sub
out
outsl
mov
jne
fs
fbld
nop
pop
push
xacquire
imul
xor
mov
call
out
adc
mov
mov
stc
icebp
out
sbb
cwtl
pop
mov
cmpsl
inc
inc
daa
rcr
pop
leave
pop
les
sub
outsl
in
mov
cmp
pop
xchg
scas
or
test
nop
movsb
and
adc
addb
incb
jp
ja
jns
fwait
jne
jae
call
sub
lock
or
push
fstps
movsb
test
push
push
divb
enter
je
xchg
cmp
push
lds
cwtl
dec
adc
inc
cmp
sbb
sub
mov
ds
push
xor
subb
scas
add
call
push
xorl
fs
mov
or
fldt
xor
lahf
mov
xor
jge
shlb
push
push
pop
orb
pop
xorb
call
mov
cltd
or
xor
jmp
cld
mov
xor
adc
xchg
xchg
shll
popf
inc
std
mov
rolb
jb
mov
in
orl
hlt
mov
int
adc
xlat
fwait
pop
sbb
rorl
imul
dec
mov
mov
ljmp
fmuls
jl
stos
add
or
aad
inc
and
lds
jns
call
mov
push
pop
push
lods
push
inc
jbe
jl
mov
sub
mov
mov
mov
sub
push
cmp
ret
out
popl
scas
repnz
mov
mov
sahf
sub
dec
adc
shll
add
jg
hlt
jno
add
pop
ljmp
fnstenv
mov
jb
std
scas
add
inc
xor
dec
pop
test
ret
rcll
xor
movsl
std
and
add
cmp
insl
in
cli
jl
loopne
lcall
scas
das
adc
dec
inc
mov
movsl
and
stos
xchg
gs
xor
fmuls
pop
mov
inc
dec
dec
push
add
cmp
mov
xor
mov
es
fcompl
and
pop
fwait
xorb
fldl
jne
sbb
out
aam
lret
ret
aaa
mov
popa
pop
ss
js
ljmp
out
popa
int3
and
shlb
test
inc
or
mov
mov
add
cld
inc
sbb
pop
jle
push
pop
xor
cmpsb
mov
dec
js
mov
lods
cmp
or
fstps
dec
adc
pusha
mov
es
jle
adc
loop
repz
scas
js
rorb
std
imull
xor
xchg
sti
cld
jl
out
test
jnp
decl
sbb
loope
or
fsts
lea
loope
pop
inc
adcl
fadds
in
inc
fbstp
push
jbe
push
or
in
or
mov
into
ret
push
lock
rcrb
enter
xlat
inc
bswap
ret
out
aas
ret
lea
add
xor
xor
or
cmp
sub
xchg
mov
push
lea
or
xchg
sbb
xor
jne
cmp
shlb
push
jecxz
mov
xchg
mov
pop
add
jae
stos
repz
inc
mov
loopne
sbb
ret
nop
inc
insb
inc
loope
mov
loopne
xchg
scas
pop
addr16
mov
xor
push
sub
loop
incb
push
testb
add
cs
cmp
ret
std
xchg
imul
pop
shlb
int3
mov
mov
or
das
imul
pop
scas
xchg
out
sub
sub
push
mov
jg
jb
add
aaa
fldt
stos
movsl
cmp
lahf
cltd
cmp
aas
add
or
add
fs
movsl
pop
mov
int3
adc
or
mov
cli
sahf
ror
imulb
dec
dec
xorl
sub
repz
jl
or
push
lcall
div
pop
bound
xchg
jnp
out
adc
aam
test
gs
into
lock
popf
and
jecxz
out
pop
ds
fcomip
insb
into
shrb
mov
mov
cwtl
loope
in
test
xlat
adc
in
lahf
push
jl
jo
dec
sbb
je
mov
mov
mov
mov
loopne
rcr
test
bound
fisttps
add
fcom
les
or
aad
aas
jnp
in
xor
push
fsubrs
xor
mov
push
out
outsb
or
ret
dec
push
loope
test
xlat
test
test
hlt
sub
sbb
neg
jge
test
aam
push
enter
xchg
mov
sarl
cmp
push
cwtl
fadds
inc
ljmp
popa
add
pop
pop
mov
sbb
push
mov
out
push
sti
imul
out
or
dec
push
je
cmpb
xor
repz
les
lret
dec
push
dec
dec
push
inc
dec
xlat
lods
mov
rcrl
mov
outsl
out
or
nop
enter
enter
imul
nop
push
add
adc
imul
in
mov
or
push
xor
pop
scas
mov
insb
mov
enter
sbb
aam
aam
xchg
fwait
sbb
popa
and
lods
jo
jae
mov
iret
into
xor
idivb
mov
mov
pop
dec
jp
mov
sub
data16
sbb
daa
adc
fucomp
popa
aaa
jp
in
and
push
mov
test
inc
fldcw
mov
mov
add
jmp
ret
xor
jb
mov
push
sub
cmc
movsl
xchg
dec
enter
and
fstpl
out
or
xchg
jno
xor
fnstsw
inc
mov
loopne
das
mov
inc
sbb
pop
pop
mov
hlt
push
enter
xchg
jb
dec
push
pop
xchg
inc
jmp
xchg
fsubl
cli
movsl
inc
shl
jno
xchg
stc
pop
push
jbe
int
jmp
push
add
inc
mov
xor
fisttpll
xchg
sbb
cmp
mov
mov
adc
arpl
mov
sbb
popf
pop
repz
shl
jle
add
mov
inc
jb
jnp
pop
jge
pushf
mov
rolb
lcall
sub
and
inc
sarl
ds
arpl
stos
iret
or
inc
rolb
mov
push
add
and
mov
repnz
out
adc
pop
mov
imul
js
pop
aam
and
popa
jecxz
mov
jge
mov
sbb
ret
sbb
jmp
addl
pop
cmpl
fcompl
lcall
pop
jle
outsb
in
lret
sub
or
cmp
adc
cmpsb
mull
sbb
rcrl
mov
decl
and
ja
and
ret
mov
imul
daa
lret
inc
into
inc
pop
mov
pop
push
fistpl
imul
popa
ret
popa
push
insb
mov
int
sbb
inc
pop
aad
lods
xchg
clc
sub
pop
cmp
mov
xchg
mov
fidivs
jecxz
pusha
lret
jb
subb
xchg
dec
mov
mov
ds
aam
mov
push
or
les
adc
push
push
mov
out
stos
jno
sub
mov
out
insb
in
push
lds
lret
dec
aam
cs
lcall
dec
mov
ss
call
outsl
xor
xchg
movsl
dec
mov
cld
and
aaa
xchg
jbe
insb
or
sub
mov
cmp
xor
lods
or
dec
outsl
aas
pop
push
pusha
in
push
push
hlt
adc
inc
pop
clc
test
adc
push
gs
sbb
ret
jb
ss
mov
jb
mov
lds
xchg
push
aaa
push
addr16
scas
fstpl
out
mov
pop
mov
sbb
mov
push
xchg
mov
pop
inc
sbb
pop
bound
dec
pop
bound
pop
ja
shl
out
sub
jnp
jo
cmp
in
pop
adcl
ret
xlat
ret
fdiv
lea
push
push
jo
mov
mov
and
dec
lea
and
fcomip
lock
nop
mov
sub
mov
jecxz
pop
sub
lea
pusha
fsubrs
push
lock
incl
cmp
insb
out
push
inc
mov
pop
stos
and
sbb
incl
sub
sbb
mov
inc
dec
cmpsl
mov
adc
fdivrs
adc
repnz
hlt
xor
xor
out
adc
pop
mov
fisttpl
add
push
test
inc
aas
push
pop
mov
inc
push
in
mov
mov
cmp
inc
out
adc
inc
int
pop
or
add
loop
pop
and
cmp
pop
inc
and
in
dec
idiv
cmp
mov
add
mov
popa
mov
lcall
sbb
inc
stc
xlat
pop
and
push
mov
repnz
mull
ljmp
int
lock
les
and
test
popa
mov
repz
dec
push
dec
or
xchg
xor
jno
cmc
xchg
std
loopne
dec
in
mov
jmp
ljmp
xchg
cmp
push
loope
xor
add
or
iret
xor
sahf
testb
xor
dec
cmp
jo
push
push
lret
aaa
ljmp
pusha
lds
jmp
cmp
bound
fnstenv
das
and
and
lods
out
mov
pop
fdivl
ds
call
out
jb
adc
ss
adc
mov
cmp
ret
gs
push
jbe
jl
je
lahf
mov
mov
in
sub
sbb
xor
cmpsl
in
fs
lret
aam
imul
lcall
mov
adc
push
inc
sub
iret
lret
cwtl
mov
dec
popf
sub
psubw
imul
cmp
add
repnz
jecxz
sub
and
dec
inc
insb
inc
push
in
test
outsb
cld
rolb
lods
push
inc
jp
movsb
xchg
jp
das
jl
shlb
mov
sub
add
jno
adc
dec
pop
xchg
loopne
cmpsl
pop
out
pop
test
sbb
add
cltd
pop
insl
jbe
jle
test
dec
mov
inc
outsl
jecxz
aam
movsb
cmpsl
sub
xor
jno
sub
aaa
pop
loop
mov
stos
test
mov
dec
andb
and
push
push
fnstcw
fwait
cmp
ljmp
xchg
outsl
adc
sub
and
lret
int
lcall
xlat
and
daa
cmp
or
or
sub
test
je
cmpsb
les
pop
dec
inc
add
imul
outsl
cld
or
xlat
sub
xchg
lods
repz
jle
push
or
test
test
dec
xlat
mov
ss
imul
xor
inc
iret
sbb
xchg
sbb
sti
jbe
call
stc
add
cs
imul
adc
push
mov
inc
fwait
imul
out
xor
mov
sub
fld
andb
es
test
mov
out
mov
fwait
mov
sbbb
in
sbb
fbstp
cmc
jecxz
push
dec
lea
xlat
xorl
icebp
xor
test
xor
sub
leave
sub
in
pusha
and
pop
gs
xchg
cwtl
xchg
lret
fiadds
lods
loop
lods
xor
mov
mov
sbb
sbb
or
dec
mov
mov
scas
sbb
pusha
insb
xchg
adc
dec
sub
in
arpl
and
imul
or
xor
ret
xchg
cwtl
jbe
js
cmp
xor
es
rorb
int
mov
iret
xchg
lds
addr16
xor
mov
daa
jae
fwait
or
lret
int
pop
mov
jns
sub
jg
mov
ret
fists
push
imul
fwait
and
je
sub
popa
jecxz
testb
js
push
dec
xchg
leave
mov
push
sbb
push
xchg
mov
pop
pop
ret
jle
jbe
inc
sbb
push
in
sub
and
out
imul
fistl
inc
jmp
pop
iret
pushf
add
xchg
jp
mov
or
scas
pushw
pop
insb
add
pop
pop
xchg
mov
nop
pop
sbbb
ja
push
jns
mov
lret
aad
jp
adc
dec
fsubs
in
cwtl
clc
mov
cmp
jl
orb
sarb
punpcklbw
push
das
dec
sbb
adc
dec
push
adc
sbb
and
das
jae
and
xchg
inc
outsl
push
repnz
es
mov
pop
pop
in
push
ja
jae
dec
pop
je
or
addb
mov
in
cltd
sub
jecxz
sbb
sub
mov
out
add
aaa
xchg
rorb
add
lods
mov
add
sub
ret
into
cmp
lretw
lds
add
mov
lret
adc
or
not
push
stos
sub
cmpsl
pop
cmp
mov
mov
and
and
btsl
or
adc
pop
inc
push
xlat
add
rorb
jnp
dec
add
add
out
or
mov
out
lcall
cmpsl
inc
lods
push
daa
insb
fs
mov
mov
inc
xchg
adc
add
aad
aas
lcall
test
cmpl
xchg
sub
test
sbb
pushf
adc
mov
or
ss
push
shr
add
jl
rorl
out
in
or
clc
adc
pop
fdivrl
in
lret
pop
test
jno
and
lret
dec
testb
js
out
push
adc
xorl
xchg
daa
ror
sub
adc
sub
sbb
jecxz
lods
push
movsl
cmp
inc
mov
cmp
in
in
cld
pop
in
pop
dec
jo
push
mov
into
js
pop
mov
xchg
movsb
xchg
leave
adc
pop
sbb
sbb
jge
push
mov
mov
mov
dec
ffreep
out
ljmp
cltd
dec
jmp
mov
int3
sbbb
jb
in
dec
mov
mov
adc
lock
inc
xchg
mov
mov
mov
xchg
xchg
dec
sbb
pop
in
fldcw
jne
mov
add
mov
adc
sub
in
push
pusha
pop
rcrl
gs
inc
xor
out
push
push
in
sbb
out
add
mov
mov
addr16
mov
daa
pop
dec
cld
mov
jmp
cld
mov
dec
sub
movsl
add
fs
gs
add
inc
sub
out
add
sub
xor
outsl
cmp
sub
addr16
lock
jno
dec
loopne
xlat
movsb
imul
popf
stos
int3
push
imul
insl
inc
mov
popf
push
fnsave
iret
jne
dec
jns
push
pushf
xor
fcomi
inc
in
mov
push
repnz
pop
mov
push
jne
push
add
mov
pop
movsb
or
cmp
sub
cwtl
je
jp
push
scas
add
pushf
add
std
and
mov
das
loopne
mov
dec
pop
or
sbb
jns
add
dec
xorps
gs
xchg
mov
andnps
rorb
cwtl
test
pop
pusha
mov
enter
xlat
xorl
fnsave
and
sbb
bound
int3
mov
xchg
cmp
outsb
pop
es
in
pop
and
lods
adc
dec
lret
xchg
mov
scas
sub
mulps
cwtl
cwtl
pop
mov
sub
mov
cld
imul
rclb
mov
dec
fs
cmp
in
xchg
push
dec
jo
sub
mov
xor
orl
pop
mov
xchg
enter
lret
ret
xchg
push
push
repz
test
mov
push
mov
ss
movsl
repz
inc
jb
inc
test
adc
cmpsb
add
push
subl
add
dec
aas
add
cwtl
or
test
loope
mov
adc
test
push
scas
ja
or
loop
mov
popa
imul
mov
insb
inc
mov
repnz
bound
push
cld
mov
sahf
adc
int
lret
aaa
xchg
pop
in
out
cmpsl
sub
mov
dec
cmp
adcb
xorl
sahf
scas
pusha
or
insl
popa
inc
inc
and
and
and
jecxz
out
cmc
xor
imul
sub
push
or
cmpsl
clc
icebp
mov
or
cmp
dec
lahf
pop
pop
xchg
adc
rcrl
out
inc
mov
fisubrl
adc
inc
idivb
daa
inc
into
rclb
jno
sbb
mov
pop
aaa
add
inc
pop
jae
jmp
fsubr
add
pop
dec
mov
iret
mov
jae
inc
xchg
jge
and
adc
cs
inc
xor
ss
lahf
pusha
test
push
jb,pt
out
adc
mov
push
test
sub
jo
es
loope
test
nop
test
insb
adc
lods
les
cmp
jns
fdiv
xchg
push
dec
pop
mov
pop
cwtl
push
addr16
push
add
sbb
and
dec
insb
aas
inc
sub
fbstp
lcall
addr16
in
jp
addb
mov
imulb
fadds
lods
push
daa
ret
and
iret
imull
stos
lea
sbb
out
stos
js
mov
ret
push
sbb
shlb
sub
call
cmc
ret
pop
test
shrb
std
pop
mov
xchg
ja
sbb
and
mov
fldl
mov
xchg
and
push
sbb
pop
lcall
xchg
sti
push
mov
test
push
sahf
jg
shll
add
mov
scas
inc
push
sbb
adc
jnp
cmpsl
sub
lea
sub
inc
ss
stos
jae
pop
xchg
es
hlt
fwait
mov
xchg
push
xchg
into
das
push
lods
cmpsl
push
sub
fs
mov
aad
movb
xor
imul
jbe
inc
sbb
xor
push
jbe
sbbb
mov
mov
mov
dec
mov
pop
popl
ss
xchg
lret
icebp
in
rcrb
xor
xchg
stc
imul
mov
lcall
je
fidivl
dec
push
mov
inc
push
inc
add
cmp
lret
loopnew
jl
fcomip
sbb
sbb
xor
mov
mov
clc
pop
mov
lret
sbb
sub
rol
sub
jb
jmp
sbb
int3
jno
das
jle
pop
mov
sub
jns
test
arpl
mov
lds
jne
jbe
or
mov
inc
andl
or
enter
jno
clc
push
inc
xor
rorb
mov
mov
and
fcmovnb
call
sbb
test
jle
into
cltd
andl
adc
nop
rclb
iret
data16
inc
popa
pop
push
sti
call
and
xchg
push
cli
outsb
mov
leave
fisttpll
xchg
les
and
push
dec
lahf
mov
scas
jmp
cmp
test
ja
cld
jns
lea
jle
es
jno
fs
inc
loop
jmp
adc
cltd
negl
pop
push
dec
ret
adc
sbb
mov
adc
arpl
xchg
aas
jmp
sub
test
jecxz
fbld
push
inc
ljmp
mov
push
mov
mov
inc
jle
xor
test
or
mov
xchg
xor
or
frndint
fcmovnb
mov
pop
or
and
inc
sub
adcl
xor
sub
repz
daa
clc
xlat
in
or
xor
outsl
out
idivb
sti
push
or
js
push
icebp
in
jns
into
or
add
jecxz
xor
scas
mov
int3
pop
es
call
pop
lcall
cmp
xchg
iret
frstor
cmp
mov
loop
and
pop
cmpsb
roll
xor
ds
cmp
add
lods
inc
addl
push
sbb
cmpsb
push
add
dec
addr16
sub
mov
push
fs
std
or
std
sub
sahf
lock
dec
cmc
jb
lds
inc
inc
cltd
dec
mov
xchg
sti
mov
add
mov
pop
cmc
mov
jns
add
push
adc
inc
insl
cwtl
or
sub
push
test
pop
sbb
imul
fldl
adc
cmpsl
xor
aam
inc
jg
jbe
rolb
pop
in
insl
fwait
xor
sub
jmp
insb
dec
push
mov
shl
dec
dec
aam
inc
push
stos
sbb
arpl
rcrl
es
int
sahf
mov
dec
xor
xchg
xor
jle
aaa
mov
mov
dec
cmp
cmp
push
xor
clc
push
mov
cltd
fs
in
pop
add
inc
lea
dec
aam
and
and
inc
or
mov
es
addr16
jnp
repnz
xor
or
sub
roll
leave
push
mov
cmp
xchg
sti
cmp
imul
aaa
dec
mov
js
jnp
pop
test
movsl
ret
ret
aas
jl
ret
adc
pop
pop
sub
dec
dec
scas
aad
mov
movb
movsl
jno
pop
xchg
fistpll
cmpsl
cs
notl
arpl
jnp
xor
imul
sub
cmp
push
fisttpl
cmpb
sbb
jno
and
xlat
pop
ret
xchg
loope
insb
add
add
dec
cmp
mov
inc
dec
pop
inc
fisubrs
push
pop
jp
sub
cltd
shlb
sub
cltd
push
stos
add
stos
pop
inc
mov
xchg
stos
sub
jns
sbb
stos
mov
inc
inc
arpl
loop
outsl
xor
adc
mov
sbbb
jns
cli
inc
aam
bound
nop
in
outsb
aad
and
aas
xchg
leave
das
jnp
and
xchg
xchg
cmp
or
flds
mov
cwtl
js
xor
xchg
adc
lea
or
lcall
xchg
mov
cwtl
pop
mov
fdivr
cmp
arpl
jbe
adc
sbbb
fidivs
jnp
xlat
andl
sbb
push
cmp
daa
mov
sbb
lods
mov
in
mov
adc
out
adc
sbb
lret
or
movsb
xor
xor
enter
movsl
jno
push
dec
adc
pop
push
test
addr16
mov
adc
ja
call
cmp
xor
pop
pushfw
push
or
cmp
sub
push
and
cmp
call
repnz
sbb
dec
inc
scas
jmp
jb
in
xchg
incb
shll
rolb
adc
inc
sbb
jl
and
or
ror
xor
adc
outsb
mov
inc
aad
rcrb
aas
xchg
sub
fidivs
sub
testl
test
push
ret
sti
sbb
loopne
test
mov
jle
push
ss
xchg
repnz
mov
fisttps
lret
mov
adc
pop
imul
jno
fildll
mov
xchg
cmp
mov
inc
lahf
sub
mov
add
mov
lar
sbb
mov
xor
sbb
cld
xchg
xchg
lods
push
bound
popa
push
pushf
dec
mov
add
or
imul
dec
loope
and
outsl
lock
das
mov
cmp
inc
incl
es
stc
mov
stc
sti
cmp
mov
pop
mov
mov
fcmove
in
add
stc
es
cmp
insl
cwtl
cmpsl
sbb
mov
in
or
lods
or
jg
ret
fsubs
cltd
xchg
dec
int3
lret
lahf
aaa
xor
rcll
adc
and
pushf
movsb
mov
shl
test
das
mov
stc
xchg
jbe
cld
xor
pushf
aam
cwtl
ja
lods
mov
dec
hlt
dec
fnstsw
and
mov
push
sub
dec
sarb
push
ljmp
psubusw
mov
stos
adc
pushf
inc
aaa
xchg
call
mov
xor
jmp
inc
dec
xchg
fwait
je
jb
mov
jge
in
sbb
incl
cmp
adc
xor
dec
mov
cmpb
filds
add
cmp
mov
pushl
nop
pop
repz
das
jg
cmp
add
mov
xchg
popa
cmpsl
dec
cmp
pop
jg
ficoms
ret
xor
inc
mulb
dec
popf
inc
jns
inc
xchg
ret
out
sahf
cmp
ljmp
mov
mov
pop
lods
add
sbb
mov
pop
test
shlb
xlat
sub
pop
out
jp
add
fnstsw
stc
mov
fstl
or
and
into
push
dec
mov
push
adcl
clc
xlat
dec
push
lret
lods
xlat
mov
mov
pop
ret
xchg
aas
bound
cld
pop
dec
push
mov
mov
mov
out
mov
mov
int3
jmp
rcl
mov
cmp
lret
sti
sub
inc
push
icebp
ds
cmp
lahf
sbb
xor
mov
pop
andb
sbb
test
fildl
sub
scas
mov
inc
cs
or
mov
pop
jg
dec
push
call
aaa
pop
shrl
cltd
mov
jmp
mov
mov
pop
sbb
rcrb
sub
xchg
cmpsl
push
adc
cmc
fidivrl
mov
insb
sbb
and
std
js
fimull
mov
es
roll
int
ljmp
out
mov
loop
insb
add
and
fbstp
mov
jp
pushl
pusha
mov
outsb
inc
jb
popa
and
lock
mov
sbb
or
mov
outsl
mov
inc
mov
sub
jb
orb
cs
inc
mov
out
pop
test
cmp
aad
in
sbb
insl
lea
inc
add
cmc
xlat
jb
or
repz
jl
pop
pop
mov
lret
sbb
inc
shl
fs
xor
fs
call
jno
jbe
pop
xor
daa
fisubrl
xchg
and
test
cmp
push
in
jns
pop
outsb
cwtl
das
sbb
sbb
and
dec
add
mov
shrl
insb
xchg
jp
mov
jne
imul
lcall
push
adc
into
jb
cmp
and
mov
movsb
dec
add
repz
jae
or
mov
mov
push
xchg
dec
adc
push
mov
jge
fiadds
fstl
andnps
sub
ret
aas
mov
xor
std
pop
cmp
mov
push
data16
mov
int
inc
les
sarb
les
inc
ss
fcom
cmp
inc
xchg
cmp
xlat
xlat
into
adc
loope
mov
add
sti
mov
ja
sar
mov
sahf
pop
add
loope
mov
dec
stos
cld
scas
push
jle
mov
sbb
sub
pop
xchg
mov
xor
lds
lret
adc
jecxz
sub
cmpsb
bound
std
push
mov
js
cmpsb
out
lods
dec
loop
xchg
rolb
push
stos
sbb
lahf
add
shr
xlat
cmp
outsb
into
pop
jg
xchg
jns,pt
out
imul
xchg
jmp
mov
in
lcall
cmpsl
jbe
or
jecxz
rcrl
pop
mov
rolb
scas
sub
stc
pop
gs
int3
jae
clc
leave
mov
notb
sbbb
in
inc
aas
aad
cmc
inc
xchg
push
adc
xchg
sbb
out
in
dec
mov
mov
arpl
inc
adc
mov
rcl
in
and
into
int3
sbb
fcmovnbe
test
dec
cmp
mov
push
sub
xchg
mov
out
stos
je
mov
mov
insb
dec
xchg
addr16
rcll
fstl
into
lret
testb
sub
jae
aam
cmc
xorl
mov
rcrl
iret
addb
adcl
imul
xlat
sti
outsb
cltd
cmc
and
mov
test
xchg
jg
dec
aad
push
out
sbb
div
xchg
leave
xchg
lret
ret
sbb
pop
xchg
addb
imul
or
icebp
or
jecxz
push
out
push
pop
add
pop
mov
sbb
and
scas
xchg
add
mov
add
xchg
fincstp
xorl
aas
jp
arpl
pop
and
cmp
lcall
int
mov
push
hlt
dec
sahf
fisubrs
jns
dec
xor
sbb
mov
enter
dec
call
hlt
pop
test
lret
jns
add
pop
xchg
mov
cmpsb
dec
mov
xchg
std
adcb
pop
mov
pop
push
fldcw
xchg
xor
jle
mov
out
cmpsb
dec
add
mov
push
pop
fdivrl
push
xor
push
push
sub
mov
pop
int
lea
pop
decb
insb
push
inc
std
mov
leave
jne
aad
mov
jp
pusha
mov
orb
dec
rorl
add
xor
push
xchg
in
jae
xchg
dec
lods
xor
and
mov
pusha
popa
mov
gs
add
jae
loopne
sbb
cli
std
ljmp
sarb
andl
mov
dec
push
mov
rcl
sti
xorb
jae
mov
add
sahf
pusha
mov
daa
dec
pop
dec
out
incb
jo
mov
fstpt
pop
mov
enter
jnp
mov
mov
mov
in
andl
es
add
jbe
cmp
push
repz
lds
ds
subl
ret
icebp
stc
sahf
cs
xchg
fs
nop
mov
out
xchg
or
aad
aad
xor
push
jno
out
test
gs
xor
rorl
clc
mov
dec
imul
jecxz
loope
jl
out
push
jbe
xor
lea
xor
mov
cwtl
insl
lret
clc
mul
out
sbb
stos
pop
sbb
dec
lock
cmp
lret
cmp
mov
cmp
popf
inc
xchg
stc
xchg
jecxz
push
mov
lea
loopne
insb
inc
lcall
lods
aaa
inc
in
inc
into
lret
sahf
mov
shlb
jmp
cs
sbb
sub
inc
daa
in
mov
dec
bound
mov
and
sbb
pusha
popa
push
add
rclb
xor
xchg
js
adc
pop
shll
pop
dec
sti
ss
outsb
mov
sbb
dec
sub
rcll
jne
mov
sub
jae
mov
ljmp
ja
inc
scas
inc
pop
popa
add
jl
push
aam
push
sub
mov
mulb
xor
cwtl
jae
jbe
and
jns
in
sub
rol
lret
mov
mov
aad
fcomps
cwtl
stos
jmp
fsubrp
sbb
and
orb
insl
std
jns
imul
les
and
jb
sub
movsl
or
xor
stos
in
mov
ficoms
sbb
and
pop
add
dec
jne
sahf
jmp
fisubrs
in
cmp
rorl
not
out
cmpsl
sub
orb
test
lret
sub
sub
ja
rclb
xor
fildl
pop
rorl
mov
aas
loop
mov
mov
nop
js
js
add
sub
jmp
shrb
das
dec
add
ljmp
cmp
int
and
lret
pop
mulb
cmc
aas
enter
dec
test
push
shl
loopne
and
inc
loop
sub
mov
in
insl
cs
pop
test
jae
pushl
dec
js
push
or
cli
in
xor
sub
sbb
xchg
imul
jge
mov
push
jno
jo
imulb
in
xchg
sbb
push
inc
push
leave
and
outsb
sub
inc
mov
outsl
shll
ja
mov
or
push
adcb
mov
mov
jg
xchg
cmp
ds
movsl
mov
aaa
or
fdivl
sbb
out
and
adc
mov
sbb
je
and
fldcw
add
or
imul
add
popa
sub
bound
js
scas
xor
popl
pop
jo
fucomi
cmpsb
inc
mov
jecxz
in
xchg
sahf
aaa
xor
gs
sub
test
stos
imul
aaa
mov
mov
in
mov
fisttpl
mov
in
insb
dec
stos
pop
rcrb
imul
outsl
ds
fninit
mov
int
bound
out
sti
je
leave
aas
cs
js
lds
sahf
mov
pop
cmpsl
or
or
mov
dec
rorb
out
icebp
into
dec
xor
aaa
add
fnsave
jg
push
jns
fists
aad
push
mov
xchg
xor
stos
movl
imul
test
out
loop
and
adc
push
mov
pop
jl
ret
sub
and
pop
mov
sub
mov
cs
daa
and
jmp
adc
cmp
daa
cld
cmp
push
push
mov
jp
fmuls
data16
les
in
decb
inc
adc
mov
leave
cmp
das
repnz
inc
adc
sbb
lret
je
je,pn
push
sahf
das
daa
pop
sub
sbb
cmp
dec
cmp
push
xchg
in
addr16
inc
jecxz
pop
cmp
adc
out
rclb
pushl
ror
enter
clc
mov
outsl
sbb
out
add
andb
cmpsb
dec
hlt
add
lahf
in
enter
sub
loop
test
sbb
out
leave
dec
or
add
dec
mov
adc
mov
in
out
pushf
lock
insb
movsl
rolb
filds
sbb
scas
dec
sbb
in
jecxz
inc
mov
in
cmp
lods
mov
std
ja
repnz
pop
cltd
arpl
push
jecxz
flds
aas
fsub
inc
iret
stos
xchg
test
daa
fisubrl
mov
push
mov
adc
into
in
ret
into
bound
jns
sti
and
pop
cmp
mov
pop
in
pop
je
ss
push
sbb
dec
pushf
enter
inc
inc
repz
mov
jle
pushf
xchg
and
push
ret
sarl
int
dec
paddw
mov
cs
arpl
mov
movsl
jae
subb
test
dec
xor
dec
xchg
imul
cld
or
popa
mov
inc
shr
or
mov
jo
sbb
sti
dec
pusha
or
imul
sub
lret
mov
inc
inc
test
leave
dec
int
enter
cmp
push
cmp
aaa
cmpsl
jnp
pop
jo
jp
lahf
cs
sbb
cmpsb
xchg
mov
mov
xchg
cmp
lods
int
add
bnd
mov
outsb
cli
add
lahf
pop
icebp
aad
mov
mov
xlat
xchg
daa
mov
test
fsubr
iret
mov
ret
add
in
insl
enter
mov
ljmp
sahf
jle
lock
fldt
and
in
shrl
mov
mov
add
daa
ss
fs
lret
insl
cwtl
out
mov
mov
push
mov
lods
mull
lahf
aaa
jbe
dec
xor
inc
mov
out
and
pop
push
ja
shrl
push
out
fidivrl
das
pop
rol
or
xchg
mov
jge
clc
mov
outsl
xchg
popf
test
in
mov
mov
ret
mov
pusha
jl
mov
dec
jbe
cmp
xchg
xchg
pop
call
cmpsl
leave
mov
cmp
cmp
imul
xor
xor
xor
cli
inc
loop
xchg
pop
lret
add
jge
iret
ja
xchg
into
dec
cmp
ret
cmp
jb
test
cmp
stc
mov
loope
ja
and
adc
cmp
aaa
shlb
jae
in
inc
inc
dec
pop
mul
and
push
jbe
je
cmp
sbb
xor
add
xchg
mov
loopne
push
js
push
adc
mov
subl
cmp
out
inc
bound
sbb
dec
mov
repnz
push
aas
imul
rcll
pusha
jl
ret
push
jnp
ficoml
ret
in
mov
and
mov
js
inc
fcmovbe
pop
mov
into
int
je
lds
lds
mov
dec
mov
int
xor
xchg
mov
sahf
and
push
mov
push
and
push
lret
adc
jnp
jnp
sbb
push
adc
add
push
and
cmp
xchg
sub
or
xchg
pop
or
lcall
or
sub
sub
ja
bound
bound
inc
sub
test
push
subl
mov
lret
int3
adc
sti
adc
fmuls
fcoml
dec
mov
subb
jmp
pop
shl
dec
test
outsl
xchg
arpl
out
dec
push
int3
aad
cmpsl
mov
pop
jmp
getsec
mov
pop
jg
imul
lds
lea
cli
pop
adc
dec
rclb
xlat
mov
movsb
sub
cmc
sub
and
js
pusha
push
leave
fs
into
imul
xlat
mov
or
mov
dec
fsubs
cltd
sub
add
xchg
ds
dec
popa
shl
xor
jmp
shrb
xor
cmp
jnp
enter
lock
mov
test
test
arpl
jmp
cmpsl
test
mov
or
popf
addb
rcrl
push
sub
int
mov
jnp
mov
pushf
scas
incb
xor
les
and
js
xchg
data16
in
push
inc
mov
enter
clc
xchg
cli
pop
rcrl
cmp
lahf
jecxz
rolb
mov
jl
add
xorb
add
xchg
mov
push
out
cwtl
sti
out
dec
jae
sub
sbb
daa
mov
push
jecxz
add
dec
pop
test
xor
dec
ljmp
push
shlb
adc
push
mov
dec
xchg
out
inc
insb
addl
pop
or
or
dec
in
std
adc
test
cltd
ficoml
mov
or
cli
leave
sbb
mov
ss
pushf
dec
sbb
and
cmp
sub
out
jg
fs
cmp
pop
mov
jb
push
ret
repz
das
xor
xchg
jl
cmpsl
mov
add
mov
sbb
jne
popa
push
pop
js
dec
shrb
repz
in
xorl
pop
sbb
imul
inc
cwtl
imul
push
lcall
adc
ja
pop
inc
out
push
cwtl
inc
mov
loop
insb
loop
xchg
push
stos
pop
cmp
pop
lds
jns
pop
out
xor
pop
mov
out
adcb
inc
push
xor
std
pop
fxtract
mov
mov
push
js
stc
mov
add
daa
out
rcll
lret
push
movsb
mov
jmp
jne
stos
inc
mov
push
sbb
inc
lcall
les
insl
and
repnz
xchg
push
repnz
mov
inc
or
mov
in
adc
xor
lods
mov
insl
xor
enter
test
inc
mov
loope
jg
in
cmp
mov
mov
push
or
int
aaa
ljmp
push
cmp
push
pop
jge
les
imul
fsub
jbe
jb
frstor
xchg
mov
fcmovb
outsb
pop
mov
loop
cmp
add
arpl
push
fiadds
cwtl
lock
mov
sbb
in
lret
jno
in
lds
ss
js
bound
repz
mov
add
cmpsl
xchg
ss
fcoms
inc
clc
ret
aas
aas
inc
jnp
sbb
fsubl
sbbb
lock
jb
loopne
mov
lret
imul
mov
pop
cltd
push
icebp
dec
adc
or
lcall
add
fmull
fdivrs
nop
mov
movsb
enter
xor
pop
in
mov
lahf
aam
fmuls
jg
push
sarb
and
cmp
pop
xor
call
mov
push
pop
lock
mov
mov
ret
adc
imulb
fwait
sahf
lods
stos
pop
stos
stos
loop
mov
inc
mov
mov
cmpsl
cld
cmpb
xchg
pop
icebp
inc
ljmp
loop
aam
adc
pushw
xor
aaa
push
stos
iret
fstp
inc
dec
shll
daa
sbb
mov
jle
pop
push
rclb
pop
pop
lods
in
adc
shlb
adc
mov
sarl
dec
stc
adc
js
mov
push
mov
jg,pn
jae
adc
lcall
test
sub
add
jecxz
pop
push
mov
lcall
adc
mov
push
rep
out
inc
sub
aas
mov
call
scas
fisubs
and
cli
in
jecxz
or
scas
rcrl
out
jecxz
mulb
add
je
mov
fpatan
sub
push
push
je
jmp
pushf
pop
xor
popa
pop
test
or
pop
xchg
sti
lcall
sbbl
sub
xchg
dec
lea
mov
ret
stos
scas
ret
enter
push
and
out
push
cmp
mov
test
xchg
nopl
xor
mov
or
cli
xchg
std
jle
cmp
jns
adc
leave
cmp
or
mov
push
pop
test
outsb
cs
mov
dec
ficoml
mov
sbb
sub
mov
clc
in
adc
mov
mov
xchg
jle
lahf
mov
add
fisubl
sbb
and
rolb
sub
mov
and
cmc
ljmp
and
mov
cs
push
fildl
ret
stc
dec
fistpll
inc
cmp
add
push
or
add
arpl
sbb
gs
and
cltd
jmp
fwait
jle
cmp
xchg
fwait
adc
sub
adc
pop
addr16
lea
sbb
pop
sarb
push
imul
xchg
mov
cmpsb
loope
sub
out
mov
mov
cmpsb
sub
sbb
inc
jl
fmuls
mov
lcall
sub
cmp
aad
inc
and
daa
inc
data16
add
fcoml
bound
cli
fistps
out
cli
cmp
add
mov
add
fstpt
or
push
jge
pop
movsl
js
iret
cmp
mov
dec
sub
jp
insb
sti
in
stc
lods
movsb
cmpsl
adc
scas
lret
push
jp
dec
inc
push
divl
mov
xor
jle
cmpb
pusha
popf
add
mov
mov
lret
cli
cmp
add
stc
jae
and
je
mov
insl
js
cli
and
or
inc
dec
subl
xchg
into
xchg
jl
cmc
das
and
rorl
push
mov
adc
jge
push
pop
mov
or
rcr
push
ljmp
xchg
and
mov
dec
in
push
mov
push
mov
sub
sarb
fsubrs
pop
sbbl
jo
mov
or
stos
mov
int
dec
add
fs
sub
es
lcall
insb
lds
jge
push
arpl
xorl
pop
jnp
push
sti
call
fwait
incb
jae
lea
sbb
mov
mov
divb
test
xchg
in
in
outsl
nop
mov
call
call
leave
mov
sti
rcll
clc
clc
test
in
jl
xchg
je
addr16
sbb
xlat
sub
stc
lods
inc
test
test
adc
dec
push
xchg
pop
imul
cmp
jp
xchg
imul
and
cmp
sub
mov
jns
mov
incl
sti
fadds
lods
pop
jg
push
rorl
aam
adc
xchg
push
jecxz
lock
jmp
mov
pop
xchg
inc
fdivr
in
sub
pusha
icebp
push
fidivs
pop
int3
nop
pop
cmc
cltd
repnz
mov
fdivrl
or
pop
push
gs
adc
mov
xchg
dec
aad
out
pop
popa
js
mov
push
pop
imul
cmp
xchg
mov
jb
mov
int3
fisubrl
negb
xchg
sub
pushf
fimuls
insl
add
and
mov
and
icebp
rcll
mov
jge
cmp
pop
loope
fldenv
push
test
ss
mov
add
cltd
cmp
xor
sbb
repz
sub
xchg
xchg
data16
sub
in
loope
das
aad
dec
jb
adc
es
or
in
fisubrs
fnop
in
rcrl
cmc
lcall
pop
sub
fists
sahf
pusha
add
sub
lds
adc
pusha
loope
sub
jl
dec
xchg
int
sti
mov
lret
shl
mov
adcb
rol
fcoms
push
jmp
push
xchg
push
test
mov
dec
insb
iret
shrl
dec
jp
inc
inc
lret
adc
inc
sub
xchg
mov
fwait
jno
test
mov
adc
daa
xchg
sub
or
mov
popf
xchg
and
mov
push
popf
cmp
mov
scas
test
jae
pop
mov
adc
lar
or
ja
mov
mov
sbb
xchg
xchg
sbb
sub
daa
repz
out
sub
jle
sbb
enter
mov
cmp
lea
mov
push
int
jge
out
and
jne
mov
push
adc
lods
mov
xchg
gs
mov
es
bound
ds
push
or
pop
fdivrl
adc
push
push
sub
jp
sbb
pop
sub
and
das
or
sahf
jecxz
sarl
lds
outsl
pop
xchg
sbb
mov
loop
mov
mov
cmp
xchg
xor
mov
aaa
dec
shll
js
inc
mov
pop
push
and
jo
fs
xchg
add
insb
nop
lcall
mov
jb
mov
jle
mov
mov
popa
xor
mov
addb
cltd
xchg
int
add
int3
push
sub
sub
je
jno
hlt
dec
jb
or
fwait
cmp
ss
xchg
push
push
push
call
adcb
jl
fistpl
inc
test
insl
aad
push
movsl
rorb
lock
jmp
push
or
push
out
hlt
push
imul
push
mov
out
fnstenv
lret
push
fcmovnb
xchg
mov
mov
xor
test
xor
mov
push
push
jbe
cmpsl
rcl
dec
repz
add
loopne
aas
and
pop
jp
dec
push
xor
in
imul
sbbl
xchg
pop
jmp
pusha
leave
fistps
call
cmp
jmp
or
pop
xor
fsubs
lods
sub
xchg
lock
dec
sub
adc
and
pop
mov
mov
setp
push
les
pop
pop
add
loop
in
je
in
adcb
lds
movsb
cmpb
sbb
cmp
cmc
xor
cmp
xor
je
mov
mov
fwait
inc
insl
inc
sbb
jg
or
inc
sbb
sahf
shr
mov
jge
movb
loop
mov
sub
push
push
xchg
outsl
jns
stc
push
scas
aam
lds
icebp
sbb
pop
dec
xor
sbb
hlt
in
pusha
shl
mov
faddl
inc
movl
jno
clc
xchg
std
jb
push
push
xchg
sbbb
lds
loope
mov
cmpsb
cmpsl
imull
add
inc
adc
cmp
push
fucomip
and
mov
pop
xchg
xor
les
mov
xor
add
or
pop
mov
insb
addr16
push
fstps
sbbb
out
dec
stc
dec
and
push
mov
int3
or
pusha
xsave
xchg
mov
fimuls
imul
test
test
xchg
out
clc
sbb
mov
inc
jmp
outsl
roll
fsts
ror
stc
out
cwtl
outsb
add
pop
fldl
or
in
loop
push
mov
add
jb
in
mov
push
mov
in
rclb
dec
xor
push
fsincos
divl
mov
jbe
add
adcb
and
jne
mov
add
enter
pause
test
xor
inc
xor
lock
adc
xchg
xchg
nop
inc
cmp
jae
test
mov
stc
mov
pop
cmp
scas
adc
inc
jb
lcall
jns
bound
mov
mov
mov
pushf
inc
inc
xlat
out
cwtl
mov
stos
and
test
out
mov
sbb
leave
xchg
and
sti
xchg
flds
fs
lds
shl
cmp
cld
hlt
adc
push
xchg
ret
push
test
cmpsb
or
pop
js
ficompl
xor
cmpl
lahf
pop
bound
pop
sub
hlt
dec
and
test
faddp
ss
pop
mov
call
push
adc
dec
mov
rolb
int
out
lea
out
ret
pop
in
pop
je
inc
jo
sarl
lods
addr16
xchg
outsl
sarl
mov
push
and
shll
fwait
push
xchg
mov
jle
xor
xor
rcll
fimull
scas
push
xchg
push
into
jle
ret
test
push
scas
outsb
and
push
xchg
out
xchg
dec
xchg
js
aad
and
cmp
shlb
inc
add
xchg
jp
fs
push
cmp
adc
xchg
mov
je
inc
dec
stos
push
into
and
push
xchg
xchg
mov
fidivrl
adc
lods
lock
sub
jge
sarb
je
in
mov
mov
stc
out
fwait
mov
pop
sahf
leave
or
and
jbe
cmpl
adc
sub
mov
es
xchg
loopne
jno
mov
das
push
mov
lock
pop
adc
dec
add
and
pusha
or
sbb
cs
xchg
iret
jnp
xor
sar
inc
and
test
cmp
inc
inc
shlb
idivl
mov
mov
or
push
in
sub
ljmp
fisubl
js
in
aam
imul
cmp
push
sbb
jg
or
leave
fmul
jnp
int3
xor
nop
and
or
cli
push
add
push
js
mov
inc
dec
inc
loopne
dec
inc
inc
pop
xchg
inc
xorl
mov
xorl
add
aas
mov
mov
enter
ljmp
adc
jg
sub
cmpsl
js
sbb
sub
lds
loope
rclb
inc
cmp
rclb
int
fists
es
iret
rorb
cld
imulb
mov
test
jg
cld
mov
push
sbb
and
and
sbb
mov
sub
cmp
loope
cmp
add
arpl
mov
cmp
sbb
dec
js
pop
rorl
fxch
mov
lahf
push
sub
pop
in
leave
repnz
sbb
or
dec
and
ret
int
push
lea
or
rorl
xlat
sti
push
mov
shr
lahf
or
mov
imul
xor
xchg
in
dec
outsl
btc
popf
mov
out
aaa
ret
mov
dec
pop
int3
and
jp
pop
fcoms
lahf
repz
in
in
push
lds
cmp
movsb
push
mov
cld
pop
into
mov
daa
leave
push
cmp
cli
jno
sbb
push
push
push
shll
test
sahf
xor
fs
cmp
test
data16
cmp
rcr
mov
cmc
mov
repz
scas
ja
inc
pop
ret
xchg
insb
out
lds
loop
xchg
je
orb
sbb
mov
inc
pop
mov
test
xchg
push
dec
inc
sub
push
xchg
out
stos
or
mov
push
rcrb
test
ss
stos
mov
pop
popa
xor
test
pop
mov
int3
jmp
cmp
imul
sbb
int
mov
mov
lock
xchg
pop
lods
mov
cld
fisubs
mov
imul
sbb
sbb
or
add
lea
fsts
sbb
pop
inc
pop
inc
cwtl
js
mov
mov
test
sbb
or
hlt
daa
sbb
clc
mov
mov
jbe
add
jns
popa
jmp
xchg
mov
ds
mov
ret
shrl
xchg
cmp
daa
or
add
mov
mov
and
xchg
ljmp
stc
mov
into
or
pop
ret
xchg
bound
push
dec
clc
roll
push
sbb
inc
das
cmp
aad
shl
push
repnz
mov
clc
imul
mov
ljmp
sub
and
dec
pop
and
jae
and
out
hlt
call
push
cmp
sbb
fcos
out
fisttpl
sbb
mov
jp
jb
lds
cmc
pop
mov
jno
test
pop
xchg
cmp
cmp
jl
shl
es
popa
dec
sub
mov
sahf
lods
jge
jne
dec
scas
mov
or
pop
jb
subl
add
jne
jno
sbb
inc
push
loop
and
or
xchg
add
push
lcall
pop
sub
ret
jl
mov
dec
les
shrl
mov
stos
ds
std
push
pop
stos
add
sarb
cmpsb
lds
mov
movsb
je
insl
lret
cmpsl
mov
imul
dec
push
push
pop
int3
inc
aam
push
xchg
jno
test
mov
mov
sub
repnz
pop
repnz
add
mov
push
jg
ja
ds
and
inc
ja
add
fistl
rorl
inc
push
push
repz
inc
sti
andb
sti
add
mov
ljmp
cmp
aas
jge
mov
les
inc
shlb
xchg
ret
cmp
push
outsb
insl
aam
pusha
pop
xchg
sti
sarl
mov
daa
push
mov
dec
mov
sbb
jbe
mov
aaa
mov
int3
mov
xor
sbb
dec
mov
mov
hlt
mov
inc
les
jmp
iret
and
dec
repz
js
ret
push
je
xor
add
cltd
fsubr
aas
int3
out
mov
xchg
pop
sbb
mov
jbe
icebp
mov
fcomps
dec
es
dec
arpl
cwtl
leave
and
pop
ss
fcmovbe
add
inc
mov
popa
rorb
aam
adc
cmp
adc
push
es
push
inc
mov
sub
pop
push
mov
sbb
in
sub
mov
int3
insl
test
jl
imul
lahf
es
fisttps
adc
les
inc
or
cmp
sbb
popf
mov
jecxz
and
sub
fidivl
mov
or
ret
push
inc
mov
fcoms
mov
imul
jg
xchg
xorl
pop
cld
cmpsb
cmc
pop
std
pop
sub
push
add
inc
cmc
push
nop
cmp
popa
or
lcall
stc
out
out
je
jg
cmpsl
xchg
mov
mov
xor
mov
testl
scas
sub
outsl
lock
outsl
cmc
jae
add
in
add
push
cmp
fsubrs
das
ja
jecxz
and
std
pop
fmull
fiadds
jae
xchg
into
mov
cmp
sbbb
cwtl
jnp
scas
jle
push
mov
aam
scas
loope
in
pop
inc
and
jmp
pop
xor
xchg
popf
jne
in
jecxz
loopne
arpl
in
cmp
aas
bound
test
adcl
inc
out
andl
mov
xchg
xor
cwtl
scas
pop
or
imulb
push
into
sbb
and
sub
xchg
mov
jmp
ja
out
bound
jno
mov
push
loope
inc
flds
mov
mov
cmpsl
or
jl
rolb
clc
fstl
imul
fldenv
push
out
test
adc
cmp
add
cmp
loope
and
gs
in
fildll
js
sbb
das
mov
sbb
aaa
dec
jb
push
and
pop
insl
add
or
aam
jmp
mov
popa
add
pop
add
test
daa
pop
inc
pop
jmp
repz
sbbb
ficomps
push
inc
ds
pusha
jb
adc
sbb
add
loope
loop
inc
dec
stc
pop
outsl
or
les
and
and
sbb
mov
loopne
and
pop
movsl
repnz
cwtl
addr16
ret
cmpsl
loop
or
jg
cmp
xor
cmp
cmp
cmpl
dec
adc
fidivrs
mov
aad
sub
ds
jp
mov
sahf
inc
adc
push
pop
aam
xchg
jbe
jne
push
mov
mov
orl
pop
jo
sbb
leave
and
iret
sahf
lds
rcr
pop
add
pop
push
enter
xchg
std
in
lahf
cmpsb
fiaddl
fdivl
lret
insl
repnz
insl
insb
mov
xor
jecxz
sub
or
cmp
filds
lret
xchg
pop
movsl
scas
cmpsl
adc
lods
or
mov
mov
push
sub
test
jne
xchg
pop
jne
push
add
addl
stos
xchg
pop
adc
dec
or
xchg
les
xchg
fistps
push
test
lock
in
into
stc
das
mov
inc
into
iret
jge
adc
popa
xchg
repz
dec
xchg
add
jo
adc
mov
cmp
scas
movsl
rorl
leave
in
rorb
or
mov
iret
data16
or
pop
adc
adc
mov
das
subb
push
jne
cmc
in
add
mov
dec
cwtl
imul
lcall
or
sarb
cli
push
dec
mov
out
fstpl
mov
jg
loopne
jb
dec
ljmp
dec
cmpl
and
pop
sbb
add
xor
subl
adc
inc
cld
xchg
cmp
sbb
gs
enter
repz
cltd
jnp
pop
or
push
xchg
jno
stc
lahf
orl
pop
arpl
notb
dec
inc
es
lret
push
jno
frstor
fsubrs
xor
in
jmp
fistl
hlt
dec
loop
jne
jg
jmp
mov
mov
push
pop
push
adc
or
ds
arpl
xchg
fidivs
cmp
dec
repnz
push
roll
stc
inc
or
push
inc
pop
js
popa
lret
jmp
cmp
dec
jo
sbb
mov
aad
cmp
mov
loopne
roll
sbb
mov
andl
or
cwtl
test
outsl
jo
imul
cmc
adc
xor
or
subl
or
or
rol
ret
inc
fbstp
jbe
negl
mov
adc
mov
sub
dec
sub
out
pushf
inc
mov
xchg
out
sti
cmp
add
adc
stc
iret
add
dec
pop
and
pop
out
frstor
xchg
adc
mov
push
sub
lret
dec
jle
shrl
xchg
or
xchg
outsb
aaa
data16
movsl
cmp
ljmp
lahf
push
sbb
xor
inc
outsb
mov
mov
xchg
dec
jl
clc
ss
movsb
popf
dec
push
movsl
test
push
inc
lods
cmp
movl
fwait
xor
xchg
insl
or
sub
inc
jne
and
rcl
cmp
and
push
movsb
int
xor
test
mov
into
adc
es
popf
insb
dec
cmpsb
cmp
in
xor
xlat
subl
lods
push
inc
add
repnz
xchg
or
in
jmp
push
out
xchg
fisubs
loop
inc
aaa
mov
sub
and
in
mov
xchg
xchg
sub
jge
xor
push
cmp
pop
cs
out
jno
rcr
inc
enter
popf
aaa
aaa
in
filds
ret
pop
in
xchg
mov
adc
push
imul
mov
je
sti
loop
repz
testb
mov
cli
push
mov
cmpsb
lahf
int
roll
movsl
sub
aam
mov
cmp
std
andb
push
or
sub
jecxz
shrl
and
sti
rorl
dec
add
das
jg
or
pusha
push
out
jnp
push
lret
mov
fs
mov
sub
pop
push
xor
push
xor
mov
mov
sbb
cmp
insb
in
inc
movsl
mov
mov
lret
inc
pop
fs
ja
mov
jns
push
ss
push
test
loope
sub
mov
adc
ja
in
out
lock
pop
mov
add
push
stc
stos
cld
sbb
repnz
mov
cmp
xor
push
inc
mov
xorb
mov
ja
js
add
jae
cmp
xchg
lcall
in
inc
push
out
push
outsb
xor
pop
je
test
in
or
out
lods
imul
push
mov
imul
mov
cltd
daa
je
out
adc
mov
add
push
stos
push
jne
jmp
fiaddl
repz
imul
jae
mov
aas
loop
xor
sbb
mov
fiaddl
sbb
pop
shlb
inc
sub
insb
ret
inc
jae
sbb
jle
loope
xor
ss
xor
or
pop
sbb
lods
sbb
loopne
dec
inc
push
daa
dec
inc
testb
cmp
mov
adc
add
push
cmpl
and
in
pop
imul
daa
addr16
jns
cli
xchg
adc
pop
mov
push
in
scas
dec
jne
xchg
cmovle
mov
pop
bound
cmp
aad
fsubl
aad
mov
cmp
lea
fldt
lods
fcomps
sub
add
aam
dec
ljmp
outsl
inc
jl
aas
test
or
mov
jo
pop
out
iret
out
xchg
jmp
xor
shl
add
push
ret
rcrb
mov
pop
dec
mov
jne
loope
mov
add
pop
add
mov
not
jecxz
push
dec
mov
hlt
stos
in
pop
push
hlt
lcall
jp
cli
lret
std
sub
adc
ret
xor
lea
and
xorl
add
lock
popa
ja
das
sbb
incb
or
mov
daa
jb
cmp
xorb
fs
into
pushf
sub
fiadds
mov
mov
mov
jg
pop
cmpsb
aam
into
mov
call
mov
pop
mov
aam
shlb
clc
ja
insb
and
pop
xlat
addb
movsl
int3
and
jmp
cmpb
ret
punpcklbw
mov
lahf
cwtl
mov
or
inc
daa
call
adc
xchg
mov
aaa
les
mov
bound
mov
jns
mov
adc
xor
in
std
add
lret
clc
mov
and
js
or
shrb
mov
into
mov
jp
aam
adc
push
aaa
cmpsb
scas
push
loope
dec
inc
push
das
es
sarl
sub
mov
insl
xor
aas
cs
sub
mov
jo
mov
jns
xchg
or
or
ret
lock
ret
test
cmp
scas
out
xor
and
insb
add
add
jb
stc
je
xor
cwtl
in
icebp
loopne
mov
test
div
lock
test
or
sub
pushf
mov
sbbb
stos
cltd
loop
hlt
stos
jecxz
int3
int3
rcll
fld
mov
mov
or
push
xchg
mov
adc
cltd
rep
insb
test
lds
pop
std
sbb
dec
imull
mov
or
ljmp
mov
xchg
cmc
rdtsc
les
xor
pop
and
push
loopne
imul
sub
rcl
add
cmp
and
mov
xor
add
adc
pop
add
inc
adc
sbb
jmp
add
aam
dec
cwtl
sub
stos
jne
add
movsl
adc
lods
mov
test
sub
sub
aaa
xchg
sub
lahf
or
lods
mov
xchg
sub
loop
icebp
jmp
pop
sub
stos
outsb
inc
pop
adc
movsb
jle
cmc
add
loope
inc
pusha
push
stos
negl
iret
js
push
aas
push
sbb
stos
xchg
test
sbb
push
add
adcb
cmp
or
repz
pop
xor
enter
aam
mov
sbb
mov
mov
mov
popa
test
add
ffree
dec
push
test
push
inc
jmp
movsb
les
cmp
popa
mov
sahf
aaa
cmp
je
leave
mov
enter
cmc
dec
push
aaa
int3
shrb
mov
mov
ja
xchg
sbb
cmp
mov
adc
dec
sbb
push
push
loopne
test
sub
xor
push
je
scas
outsb
ljmp
call
mov
gs
in
push
adc
xor
or
or
fdivrs
sub
aam
jle
aam
scas
dec
and
add
ret
pop
mov
dec
xor
mov
sub
es
es
loopne
xor
je
nop
repz
adc
mov
cmpsl
lods
mov
jns
ret
sbb
adc
daa
mov
jno
sbb
std
push
jle
mov
addr16
sub
xchg
or
cmp
push
sahf
sbb
mov
sti
mov
dec
inc
pop
dec
add
gs
sbb
leave
test
dec
jg
lock
or
out
xchg
xor
scas
outsb
fs
ljmp
fs
inc
add
dec
sbb
loop
dec
pop
push
stos
aas
jbe
and
daa
std
lea
inc
enter
jge
jne
jg
js
out
pop
sahf
js
xor
out
sub
in
loopne
sbb
or
pop
movsl
xor
insl
mov
dec
push
xchg
cmpsl
test
dec
add
mov
repnz
push
push
repz
adc
loopne
add
mov
add
fs
jmp
sar
push
dec
pop
xchg
out
jg
cwtl
cli
decl
notl
add
fisubrl
xchg
or
xor
ficomps
adc
mov
adc
push
cs
xchg
mov
push
icebp
sahf
popa
inc
or
popf
sub
sbb
mov
adc
pop
add
jbe
out
cmc
arpl
or
in
into
gs
cmc
and
stc
add
arpl
out
push
fisubl
push
fstpt
pop
adc
sub
out
cmp
xchg
pusha
jnp
lods
lahf
dec
push
add
lret
adc
push
mov
adc
gs
mov
lds
xor
hlt
inc
out
xor
mov
das
js
fsubrl
jae
add
mov
xchg
cli
jnp
xchg
push
adc
cld
test
mov
inc
push
sbb
pusha
mov
popa
daa
jo
loope
xchg
xor
in
mov
xchg
ljmp
inc
mov
or
pop
insl
cmc
mov
sti
pop
movsl
cmp
andb
aam
aam
out
mov
and
cmp
gs
jge
push
in
mov
aas
mov
add
daa
sbb
fcomi
mov
sarl
dec
sbb
push
rorb
dec
fcompl
les
mov
mov
mov
push
imul
cmp
mulb
pop
adcl
xlat
sub
testb
fwait
pop
push
js
insb
sub
mov
and
aad
mov
inc
sub
stos
shll
cs
xor
jo
rorb
test
daa
aas
push
xor
ret
shl
add
cmpsl
sahf
in
and
sbb
jmp
repz
xchg
pop
push
test
dec
inc
sbb
iret
mov
inc
outsl
fidivl
pop
ds
insl
inc
lcall
popa
mov
push
push
xchg
mulb
repz
aad
xchg
aas
add
pusha
shr
or
loope
sub
nop
jp
dec
in
test
test
or
mov
cmc
fisttpl
test
sub
and
int3
pop
pop
sbbb
lods
pushf
push
and
push
shlb
ljmp
dec
mov
xchg
xlat
lahf
test
imul
movsl
mov
and
or
sarl
fs
fs
stos
sbb
test
cwtl
sti
pushf
daa
dec
xlat
mov
jge
movsb
pop
movsb
mov
lret
push
cs
and
xchg
dec
test
out
jno
cmp
adc
ljmp
mov
insl
mov
ds
roll
negl
xchg
mov
fbstp
xor
sub
lret
shll
and
into
addr16
and
sbb
mov
dec
push
out
xor
jns
mov
and
sti
xor
pop
int
cmp
jmp
ja
lahf
vunpcklps
in
nop
mulb
push
push
xor
and
es
jb
jmp
mov
lahf
test
jnp
cmp
mov
shr
movsb
loope
out
dec
inc
inc
cmp
aad
std
arpl
stos
and
pop
dec
pop
sub
adc
js
dec
xchg
out
jbe
test
jle
xchg
sbb
push
lods
mov
push
xchg
or
jl
fcoml
xor
sub
or
scas
mov
dec
and
negl
jp
stc
mov
or
or
add
insl
and
gs
das
xchg
pop
js
icebp
jl
xor
cs
adc
pop
test
xlat
cli
ret
cmpsl
pop
aam
sbb
call
stos
testb
pop
clc
inc
cmc
pop
adc
mov
scas
push
inc
std
inc
pop
data16
cmp
adc
jno
dec
lsl
sub
push
mov
cmpsl
sbb
lahf
mov
or
adc
xor
mul
nop/reserved
fmuls
jge
inc
hlt
or
mov
ret
cli
jl
adc
lahf
shll
jp
sbb
idivl
push
divb
and
xchg
pop
out
jbe
xorb
ljmp
mov
lock
cmp
pushf
jae
xchg
sub
out
gs
mov
lret
popf
lock
or
cmp
fstl
shlb
test
pop
mov
out
mov
loop
aas
lods
stc
or
dec
push
sub
cmpb
inc
sbb
inc
dec
dec
push
cmc
mov
out
push
outsl
and
fbstp
inc
addl
movl
in
pushf
xor
or
mov
mov
xchg
inc
rorb
fmull
jo
dec
enter
mov
je
repnz
fwait
icebp
mov
dec
jnp
and
aaa
push
mov
adc
pushf
jno
pop
scas
aaa
in
pop
xor
mov
push
mov
notb
loopne
push
rcrb
sub
mov
out
insl
mov
cli
into
sub
adc
ja
mov
fucomip
ret
cmp
pop
jmp
jecxz
adc
repz
addl
outsb
pop
or
push
push
cmp
jl
adc
push
aaa
enter
mov
mov
pop
repnz
adc
movb
in
mov
mov
cltd
ja
add
sub
mov
or
adcb
lods
pop
lea
inc
movsb
push
lods
cmp
movsb
sub
sti
pop
xchg
cli
test
sahf
les
or
sub
push
jmp
fimull
push
cmc
push
repz
out
int3
outsl
stos
mov
je
movsl
adc
js
fnsave
push
nop
les
adc
pop
repz
iret
repz
xchg
add
scas
daa
adc
lret
daa
or
xchg
push
nop
sbbb
mov
movsl
outsl
insl
fmuls
aas
sbb
mov
dec
sub
sbb
cmp
or
jp
add
divb
mov
push
push
aas
pop
add
xchg
mov
jae
jnp,pt
mov
stos
pop
test
lods
sub
jmp
mov
adc
movsl
stos
ds
pop
xchg
sub
insb
push
daa
inc
movsl
push
cmpsb
testl
push
sbb
bsf
jns
lahf
adc
das
shll
and
jae
add
mov
fisubrl
mov
frstor
lea
pop
xor
les
addb
fcmovb
jns
scas
cmc
out
bnd
dec
mov
cltd
xchg
mov
and
push
mov
cmpl
jne
out
add
cmp
mov
fbld
xchg
or
mov
sbb
ljmp
lods
sub
jne
cmc
jp
xchg
loop
out
out
jle
outsl
hlt
es
int
and
mov
pop
cmpsb
cmp
sahf
mov
mov
sbb
inc
jp
sbb
and
cmp
or
add
dec
stos
not
ds
shlb
or
insb
fldz
es
call
scas
pushf
pop
mov
xchg
or
je
jb
adc
das
cmp
jno
enter
stos
movsl
rol
or
daa
mov
inc
inc
aad
in
addl
xchg
sub
outsl
and
movsl
nop
push
push
sbb
xchg
pop
repnz
push
imul
out
sahf
cmp
jge
mov
mov
out
adc
int
js
mov
mov
push
xor
js
shlb
adc
insb
push
lds
aas
push
stos
imul
sbb
mov
add
and
negl
or
dec
xor
shrl
mov
pop
jbe
fldcw
dec
or
pop
ljmp
xchg
jae
pushf
insl
jo
faddl
subl
sub
xchg
in
push
mov
jnp
gs
ja
insb
lock
cmpsl
cld
mov
fs
int3
or
testb
sub
fidivl
cmp
mov
lods
js
out
mov
sbb
adc
jg
dec
imulb
ds
cwtl
int
inc
ss
push
inc
mov
pop
fdivl
adc
mov
test
imul
or
popf
xchg
mov
sar
loopne
xchg
pop
jmp
xchg
jae
enter
enter
stos
xchg
repnz
fs
xchg
rol
mov
xchg
lret
xchg
insb
mov
cmc
mov
push
test
inc
ret
sbb
cmpl
dec
jg
sub
adc
cmp
movsb
icebp
push
insb
outsl
out
lods
lds
arpl
add
int
cmp
cmp
xchg
shll
mov
mov
enter
cmc
movsl
dec
repnz
stc
mov
dec
mov
dec
loopne
adc
sub
mov
lahf
cmc
sbb
out
jl
push
pop
das
xorl
insl
add
outsb
mov
push
inc
adc
push
pop
sti
add
push
mov
push
mov
ds
popf
inc
rorl
in
xor
rclb
dec
sub
jbe
pcmpgtd
gs
daa
pusha
lcall
cmpsb
xchg
adc
dec
xchg
cmpsl
pop
mov
or
gs
dec
sarl
or
ret
push
js
fsubrl
push
xchg
pop
mov
sbb
xor
mov
cli
dec
jl
inc
movsl
xor
xor
scas
xchg
xchg
scas
jmp
mov
or
sbb
pop
and
or
jnp
and
xchg
mov
push
das
scas
mov
and
dec
ficompl
movsb
cltd
push
xor
push
dec
iret
inc
xor
xchg
pusha
mov
lahf
sub
mov
add
fsts
or
jp
fmull
shlb
pop
xchg
sub
xchg
scas
add
mov
and
mov
fwait
inc
pop
add
sbb
and
ds
or
xchg
ss
pop
dec
mov
enter
inc
lcall
movsl
push
cmc
fsubrl
rclb
ja
pop
sub
cmpsb
dec
mov
jae
ljmp
in
push
push
jg
xchg
add
arpl
clc
push
xor
cmpsl
xchg
aam
cmp
ret
jae
ret
and
sub
test
dec
xor
sub
test
add
mov
popf
int3
adc
cmovl
bswap
scas
daa
jge
rolb
mov
lret
pop
rolb
pop
mov
lods
test
or
mov
jge
or
ret
ret
pushf
adc
cmp
add
mov
sarl
stos
dec
sarl
int3
sbb
add
push
xor
adc
ljmp
ljmp
mov
cli
adc
push
push
shrb
clc
js
fstpt
std
iret
xchg
xor
xor
sti
imul
xchg
xchg
mov
fisttpl
fwait
add
adc
icebp
jbe
mov
adc
or
pop
lret
dec
orb
fdivrl
xlat
pop
xchg
cli
gs
mov
es
push
jl
mov
movsb
sbb
mov
pop
jp
inc
pop
icebp
dec
in
mulb
push
inc
int3
sti
mov
xor
fcompl
sti
outsl
sbb
xchg
mov
or
sub
pop
jl
das
mov
or
fcomps
xor
es
shll
lret
mov
push
stos
adcb
push
push
adc
pop
bound
adc
lock
fs
or
pushf
hlt
add
push
insl
ds
xchg
push
push
decb
push
lods
add
aad
cmp
loop
mov
mov
fldcw
movsb
adc
xchg
scas
push
loopne
push
xlat
test
shrl
xor
out
or
adc
jnp
pop
and
int3
pusha
fisubrs
jmp
cmp
call
daa
repz
cmc
test
lea
sarl
mov
mov
aam
std
adc
int3
mov
scas
imul
and
xlat
addr16
add
mov
push
mov
mov
inc
pop
cmp
mov
adc
mov
outsl
ljmp
jne
jnp
testl
cmpsl
or
stos
pop
xlat
sub
mov
pop
inc
cmpsl
pop
dec
push
adc
push
jmp
pop
push
je
iret
fildl
pop
pop
nop
adc
mov
add
xor
jb
mov
call
ret
dec
popf
ljmp
add
stos
dec
shrl
xchg
adc
push
xlat
jge
into
lods
shrb
arpl
cmp
cltd
inc
sub
test
fwait
in
xchg
das
aam
xor
adc
and
pop
aad
jbe
stc
or
dec
outsl
outsl
cmc
insl
insb
xor
mov
insb
mov
adc
xchg
xchg
mov
es
das
inc
and
mov
xchg
pop
sbb
sub
xchg
insb
ret
mov
hlt
ljmp
mov
je
dec
or
inc
loope
cltd
jmp
xor
mov
dec
jno
mov
push
sbb
stos
mov
loopne
inc
rorl
bound
mov
mov
les
pop
push
lcall
fimull
cltd
xor
xchg
xchg
sub
mov
out
dec
inc
sub
dec
xor
sbb
sbb
add
xor
dec
cltd
push
mov
pop
push
mov
addr16
add
mov
xlat
pushf
test
outsb
imul
pop
xor
mov
fbstp
dec
movsb
dec
pop
mov
lock
out
mov
inc
adc
cltd
jp
mov
insl
cmp
and
inc
push
mov
pop
cmp
ja
jns
gs
or
daa
leave
lahf
xor
sub
fcomip
xchg
mov
jecxz
mov
cmp
xchg
pop
inc
pop
arpl
pop
mov
jnp
adc
mov
mov
adcl
xchg
pushf
or
xor
sahf
xor
and
sbb
mov
sarl
fldenv
mov
cli
and
sbb
out
das
out
dec
xor
mov
inc
insb
sub
sub
aas
mov
pushf
mov
mov
cmp
add
int3
xchg
loope
or
out
sti
fstpt
bound
in
jge
popf
test
bound
imul
mov
hlt
std
imul
aas
in
mov
pop
inc
dec
sub
mov
push
insl
adc
inc
rol
push
pop
loop
in
cli
adc
das
daa
dec
push
ficoml
sub
jmp
out
xchg
add
xchg
mov
or
adc
xchg
arpl
sbb
mov
push
add
xlat
lret
mov
mov
int
aam
lcall
fistps
or
les
sti
inc
popf
push
cmp
push
xchg
lods
mov
pop
pusha
or
jmp
inc
mov
lds
xor
ja
inc
jp
in
mov
inc
sbb
and
mov
stos
xor
loopne
adc
aaa
rclb
dec
cli
cltd
or
dec
cmpl
mov
mov
pop
fisttps
es
xchg
jae
push
adc
cld
jmp
das
test
jge
or
sub
push
imul
push
sbb
movsl
pop
mov
sub
adc
push
or
or
insl
push
mov
jae
cmp
inc
jg
xchg
dec
mov
movups
jmp
out
outsl
popf
or
test
or
ds
mov
cli
lcall
push
xchg
out
ficoml
sub
shll
add
sbb
ss
xorl
push
ss
inc
roll
pop
jo
and
bound
sbb
jp
adc
lcall
into
mov
xchg
repz
or
fwait
in
subb
jle
push
push
xor
clc
pop
xchg
aad
inc
lds
sub
pop
mov
pusha
ja
add
sahf
pusha
scas
ret
and
pop
mov
and
fidivrs
in
loopne
sahf
fists
jo
fidivl
mov
std
xchg
and
mov
rclb
ficompl
test
daa
push
out
insl
mov
pop
pop
ss
icebp
mov
in
stos
lods
out
ficoms
imul
loope
jbe
mov
jge
push
in
and
pop
xchg
and
mov
std
dec
add
cli
ja
mov
out
out
mov
sbb
popa
je
cmp
loope
shlb
lds
sub
daa
ds
stos
pop
pop
push
mov
fisubrl
push
jns
lret
pop
adc
push
test
cmp
inc
xor
jmp
lea
fsubp
mov
cmp
cli
shl
adc
xchg
aas
mov
inc
pop
push
add
out
xor
insl
fwait
adc
test
mov
lods
xchg
add
andb
jmp
outsb
rep
cmpsb
iret
mov
xlat
jae
jecxz
jo
and
pop
inc
push
push
ds
push
loopne
adc
adc
fwait
inc
inc
mov
mov
out
out
int
ror
mov
nop
inc
mov
lahf
sbb
sbb
stos
inc
xlat
mov
mov
cmpb
gs
notb
pop
xchg
cmp
jge
sub
stos
mov
cmp
sbb
test
std
or
sub
test
clc
movsl
adc
sbb
or
cmp
fistl
mov
or
mov
sub
adc
jmp
mov
in
pop
pop
sbb
sbb
dec
sub
push
icebp
mov
xor
loope
pop
pop
mov
xor
pusha
jecxz
xor
addr16
scas
popa
out
cmp
cld
xchg
inc
push
mov
jmp
sahf
push
ljmp
mov
loope
popa
outsl
mov
xchg
or
add
iret
shlb
sub
mov
sub
ficoms
std
push
aaa
inc
hlt
adc
mov
scas
sbb
dec
arpl
sbb
mov
mov
xor
imul
int
xchg
arpl
stos
in
fbstp
loope
lds
add
sbb
cwtl
popa
xchg
aas
aam
and
mov
inc
lret
sbbb
sub
das
dec
mov
and
in
mov
jns
xchg
and
xchg
push
or
in
push
sub
fpatan
sub
int3
mov
dec
push
and
dec
bound
in
cli
xchg
jge
add
xchg
es
mov
lahf
pop
ss
jns
pop
pop
mov
sbb
dec
xchg
cli
movsl
popa
sahf
jns
or
in
out
cs
xor
ret
inc
imul
aam
sbb
cld
insl
loop
or
mov
sbb
pushf
outsb
mov
and
lods
repnz
pusha
and
push
imul
add
mov
xor
pop
jp
aas
xchg
jae
out
scas
movsl
add
in
fs
cmp
sub
mov
lret
nop
in
cmp
arpl
inc
iret
fucomi
cmp
cmp
fldt
sar
cwtl
mov
fisttpl
pushf
xor
adc
hlt
testb
jecxz
enter
xchg
pop
js
pop
sbb
mov
ds
sbb
sbb
adc
scas
jmp
or
pop
cmp
jecxz
loop
lock
stos
aad
jnp
arpl
hlt
push
fwait
cmp
push
lret
cmp
cmp
mov
lods
xchg
xlat
jno
cmp
pop
pop
and
sub
push
add
xchg
jo
sbb
mov
and
mov
adc
xchg
test
xchg
inc
ss
dec
decl
rolb
daa
push
dec
dec
js
shlb
les
xor
cwtl
adc
ds
mull
lret
pop
mov
mov
inc
mov
and
mov
rcrl
push
mov
loopne
insl
pop
adc
pop
daa
mov
out
adc
lret
addr16
sub
xchg
icebp
xor
mov
pop
lds
jmp
mov
add
xchg
mov
adc
loope
js
inc
ds
sar
adc
push
mov
jo
mov
mov
mov
jo
push
mov
addr16
movsb
pop
jo
aaa
mov
sbb
outsb
bound
cmpsb
mov
ret
popf
andb
popf
dec
add
arpl
xchg
or
mov
or
jnp
add
cs
push
jb
aas
stos
jnp
jmp
in
mov
xor
fsubr
ss
or
jnp
mov
gs
int
andb
sahf
mov
lahf
mov
divl
lahf
repnz
lds
int3
mov
ljmp
ss
adc
pop
sub
mov
add
xor
scas
mov
jb
test
bound
jmp
fimull
pusha
and
mull
cmpsb
test
sub
hlt
push
push
imul
pop
and
mov
repz
mov
dec
bnd
pop
mov
out
pop
xlat
leave
xchg
fldcw
mov
fcom
and
decb
adc
push
mov
pop
stc
jge
xor
lds
iret
xchg
je
mov
add
pusha
pusha
ja
xlat
fisubrs
push
xchg
jecxz
gs
dec
pop
movsl
mov
scas
sub
mov
stos
cmp
push
jp
lock
push
movsl
cs
mov
adc
or
mov
scas
or
push
lock
enterw
jo
xchg
and
mov
out
sub
ja
xchg
hlt
enter
mov
outsl
xchg
sti
sti
je
es
inc
jp
xor
fyl2x
out
jge
gs
add
xchg
push
push
or
cmpsb
es
movsl
pop
or
sti
push
xor
and
shlb
imul
fwait
and
dec
test
xchg
xchg
fistpll
add
xor
sbb
cwtl
insl
mov
sub
mov
xchg
inc
fisttps
insb
fs
lcall
pusha
inc
repnz
and
ja
adc
adc
inc
push
es
fsubr
fxch
dec
pop
pop
sub
and
mov
jecxz
adc
fildl
nop
iret
cli
xor
idivb
sub
gs
sub
mov
cmpsb
xor
sub
mov
into
push
mov
sahf
hlt
hlt
cmpsl
xor
or
clc
adcb
mov
xorb
cltd
stos
jno
add
xchg
lods
push
and
pusha
pushf
push
lds
sub
dec
mov
test
or
pop
in
sub
fdiv
cwtl
daa
jbe
inc
rcrb
mov
mov
xor
sub
lcall
xchg
mov
mov
fbstp
addl
pop
pop
ss
aam
cmp
and
pop
lahf
pusha
cwtl
fbld
mov
movb
adc
ficoms
pushf
pop
scas
cmp
test
push
test
sbb
xor
dec
pop
mov
dec
enter
mull
dec
test
es
test
inc
cmp
insl
pop
insl
mov
dec
notl
cmp
fsub
cmp
push
in
scas
mov
fldcw
lahf
push
sar
lahf
cld
lods
cmp
jne
fisubs
pop
dec
int3
js
cli
dec
loope
ficompl
adc
dec
jae
icebp
adc
std
mov
pop
loopne
call
enter
dec
dec
mov
dec
neg
fstpt
les
pop
loopne
and
xchg
int3
mov
mov
cmp
mov
jge
sub
aam
inc
xlat
notb
cmp
lahf
pop
test
fcompl
mov
lds
out
ss
ret
cmp
loope
push
push
fstl
push
mov
jmp
fnstcw
lds
adc
movsb
sbb
mov
adc
inc
mov
push
scas
dec
xchg
adc
imul
pop
iret
xchg
jno
xor
aas
xchg
outsl
adc
cltd
mov
lods
mov
ret
push
or
or
shrb
inc
pop
dec
aas
pop
cmpsb
data16
mov
dec
or
xor
push
push
inc
sub
xor
sti
lds
or
sub
xchg
xchg
movsl
cwtl
jo
xchg
pop
push
leave
imul
adc
sbb
iret
movsl
fwait
push
repz
and
mov
mov
mov
rcl
insb
js
xchg
add
push
mov
mov
pusha
dec
out
mov
or
cli
cmp
test
inc
xor
sbb
lock
iret
mov
dec
sub
scas
dec
movsl
ficoml
fisttps
daa
mov
mov
xchg
adc
mov
adc
xchg
xchg
ret
mov
or
sub
jp
hlt
clc
pop
scas
inc
popa
pop
data16
and
inc
mov
lea
shrl
push
stos
adc
int3
cmpsl
imulb
pop
jl
mov
or
in
je
icebp
popa
sti
pop
enter
out
movsb
jae
sahf
in
mov
fstpl
mov
mov
leave
xor
data16
int3
dec
jp
outsb
inc
or
or
jnp
jo
push
sub
pop
sbb
mov
inc
fistl
cmp
cmpsb
pusha
inc
mov
ljmp
or
clc
push
jns
movsl
adc
fwait
inc
cltd
je
je
divl
leave
mov
mov
xor
push
xor
aas
cmpsl
dec
mov
leave
jmp
mov
movb
mov
dec
mov
bound
lods
push
out
dec
sbb
pop
pop
shl
arpl
xchg
scas
ret
push
mov
shlb
mov
in
pop
xor
and
jne
jp
pop
sbb
dec
xor
xor
jmp
ficompl
mov
xchg
add
repnz
sbbb
or
dec
outsl
adcl
outsl
outsb
fdivrl
xchg
out
cmc
jecxz
cs
sarb
jno
jae
test
mov
sub
hlt
icebp
dec
hlt
out
xorb
xchg
popa
js
aad
mov
adc
inc
lock
loop
call
inc
sbb
icebp
es
out
xchg
movsl
mov
and
cmovp
rorb
in
mov
or
or
inc
mov
dec
popf
aaa
std
jae
lret
cmpsl
xchg
sbb
and
xor
insb
addl
mov
pusha
add
and
test
fs
enter
mov
movsbl
xchg
and
outsb
lods
ret
xor
cmp
push
inc
in
inc
mov
loopne
stc
push
cmpl
xchg
pushl
subb
loopne
mov
add
push
jecxz
out
pop
adc
jp
xchg
leave
adc
int
or
out
pusha
mov
sub
mov
xor
xchg
dec
jns,pt
test
sub
std
mov
loope
xor
push
sahf
movsb
dec
sub
fimuls
mov
push
sub
scas
idiv
ljmp
jns
aas
imul
scas
in
inc
insl
jle
sbbl
aas
mov
push
into
xor
xlat
loop
and
cs
pop
add
xchg
inc
gs
lahf
xchg
negb
dec
add
sub
fwait
sbb
mov
and
popf
clc
test
push
fmul
dec
add
vpmulhw
sub
rcr
ret
mov
repz
xorb
mov
pop
ljmp
mov
ds
insl
jecxz
sbb
pop
mov
and
push
out
sub
jmp
push
and
jmp
xchg
mov
lret
cmp
mov
dec
pop
xor
xor
push
insl
ret
mov
movsl
or
daa
mov
cmc
mov
xchg
addr16
cmpsl
adc
sub
movsl
ret
inc
mov
testl
imul
call
fs
xor
pop
in
or
stos
sub
xchg
mov
mov
bound
incb
sbb
dec
movsl
cmc
in
fcoml
nop
movsb
dec
popl
cwtl
andl
pop
divl
js
xor
clc
in
xor
repnz
out
cld
mov
mov
sub
out
mov
negb
pop
fisubs
mov
hlt
or
push
or
test
es
seto
sti
mov
and
aas
jp
mov
orl
jl
or
pushf
jl
mov
fimull
cmpsl
jae
jle
aaa
sbb
dec
js
jb
test
adc
test
xchg
std
lret
fs
out
sub
outsb
leave
or
mov
and
insb
out
and
roll
cmc
lds
cmc
push
fs
scas
pop
push
add
inc
xor
dec
pop
xor
les
dec
rol
rclb
stos
pushf
out
loop
dec
push
iret
add
stos
cld
enter
jg
loop
xchg
jp
push
mov
push
in
push
jecxz
pop
pop
push
push
repz
sbb
clc
cmp
mov
in
inc
rorl
xor
jge
mov
ret
arpl
repz
mov
adcb
fistpll
or
daa
jmp
jno
jnp
lods
cwtl
xchg
dec
inc
dec
daa
ficoml
loope
adc
hlt
adc
ljmp
call
xchg
adc
dec
cmpsl
aas
adc
dec
into
push
je
rcrl
cltd
sbb
xor
push
shlw
call
popa
stos
test
cmp
push
sbb
popa
movl
xchg
push
or
shll
stc
mov
imul
xchg
lock
sub
sub
mov
pause
loopne
mov
sbb
mov
hlt
test
in
loopne
dec
xor
out
cmp
push
cmp
cmpsb
ret
sub
aad
inc
repz
sbbl
test
or
inc
enter
inc
jae
insb
and
cmp
repz
pusha
pop
int3
mov
iret
jnp
daa
push
negl
push
push
mov
adc
fdivrl
mov
jmp
cmp
pop
pop
outsl
jg
add
push
sbb
jnp
cmp
sbb
xchg
sti
out
idivb
xchg
push
scas
popf
jnp
xchg
push
pop
in
popf
lock
pushf
pop
out
cmp
test
cmpsb
lods
out
movsb
insb
jmp
mov
aad
lahf
sbb
xor
jne
loop
cmp
xchg
xchg
adc
movsl
int3
sub
hlt
adc
jecxz
xlat
in
rolb
xchg
mov
adc
and
loope
and
xor
cltd
loopne
je
mov
shll
addl
loop
mov
cld
cmpsb
sbb
xchg
xchg
lods
push
xor
aad
loopne
cmpsl
les
push
mov
icebp
stc
mov
adc
sub
fldl2t
inc
xor
hlt
ffree
out
push
les
adc
fsubs
or
adc
shrl
inc
mov
js
fadd
rcll
or
outsb
test
lock
ljmp
lret
dec
in
cmpsb
push
movl
sub
cmp
and
jp
xor
lahf
push
int
pop
xor
mov
inc
sbbl
mov
mov
popf
orl
in
xor
inc
add
cmpsb
dec
cmp
pop
lret
out
inc
outsb
shl
repz
xchg
rsqrtss
repz
add
orl
out
mov
xor
xchg
leave
inc
or
jge
fnsave
pop
add
iret
cs
loope
sahf
jmp
nop
push
jle
mov
cmc
dec
test
cs
jo
fwait
cmp
jb
jnp
sbbb
mov
sbb
adc
cmp
xchg
das
cwtl
push
rep
pop
cmp
ja
test
push
push
jns
je
or
xchg
sbb
cmp
mov
pop
pushf
xorb
push
push
sbb
dec
cmp
push
pop
xchg
mov
fcom
cli
movsb
lods
sbbb
and
sahf
push
fldenv
cs
jmp
stos
mov
loopne
cmp
std
sub
push
sbb
insl
aaa
pop
cli
lods
dec
mov
jg
sahf
mov
add
ret
fcmovnu
and
mov
mov
sub
outsb
aad
inc
in
lds
add
sahf
xchg
jecxz
mov
push
xlat
repnz
in
or
adc
daa
xor
mov
mov
inc
std
lahf
leavew
sbb
mov
cmpl
push
xchg
xlat
push
loop
in
repz
int
mov
mov
cmp
pop
das
or
xchg
mov
xor
push
xchg
push
outsb
subb
push
mov
pop
or
loope
xchg
gs
shll
imul
adc
fisubrl
add
jne
stos
jmp
std
out
add
hlt
leave
inc
incl
fists
icebp
mov
fcomp
cli
lds
ret
rorb
cld
pop
jge
add
test
cmc
pop
push
mov
sub
adc
pop
mov
xor
or
or
jns
sbb
sti
inc
rorb
int
ret
bound
sti
push
cmp
add
cli
sti
dec
or
sbb
sahf
mov
and
add
sbb
xor
dec
loope
inc
arpl
cwtl
pop
in
cmp
test
jno
add
fst
mov
mov
ss
sbb
mov
pop
es
or
and
movl
mov
push
pop
jg
sbb
arpl
repz
iret
adc
xor
pop
js
mov
pause
mov
cmpsb
test
insl
inc
sbb
fsts
out
lret
fcmove
sub
pop
jge
lds
jp
faddp
jge
repnz
insl
out
xor
in
lods
loope
or
adc
mov
add
jae
stos
and
lahf
lahf
into
xor
shrb
or
loopne
mov
cmpsl
imul
sbb
std
dec
cmp
lcall
fdivl
pop
sbbl
xchg
xchg
enter
sti
fwait
mov
mov
mov
jbe
cmp
aaa
dec
stos
xchg
mov
pop
adc
cmp
insl
mov
stos
jg
fwait
mov
cmp
daa
push
cmp
cmpsb
leave
cmp
mov
fstl
lret
mov
xchg
cmc
mov
mov
xchg
xchg
rcll
xchg
enter
mov
out
test
push
movsb
ficoms
shl
xor
cmp
vpavgw
scas
or
scas
mov
add
push
orl
int
xor
mov
pushf
pop
test
mov
push
clc
xlat
mov
sbb
ljmp
push
cmpl
fld1
stc
loope
mov
lods
jns
imul
or
sub
in
jl
mov
xchg
cltd
or
lods
xor
pop
cmpsb
mov
xchg
ficoml
sbb
cmp
or
or
repnz
push
xchg
jmp
xor
mov
pop
cmp
in
movsb
loop
fidivs
mov
hlt
test
shr
dec
popf
rorl
orb
sbb
mov
iret
jle
sbb
ja
test
ja
xor
inc
clc
xor
insl
or
push
cli
adc
lret
sti
inc
xor
imul
add
push
iret
mov
cmp
orb
jp
mov
pop
or
adc
lds
sub
stc
fistl
shlb
ficompl
mov
lock
pop
into
jg
inc
cmpl
push
xor
lock
test
mov
negb
mov
or
and
xor
push
jp
mov
or
leave
rcrl
loope
lahf
lea
mov
shl
ja
or
add
in
lea
shlb
jmp
lds
and
mov
xchg
mov
pop
mov
or
and
adc
dec
in
loop
mov
add
fcomps
adc
jecxz
fimull
and
jp
cmp
ds
imul
fldl
sbb
les
jg
push
cmp
dec
pushl
add
mov
movsb
add
adc
in
fwait
dec
jne
cmc
lahf
mov
testb
push
xchg
mov
cmp
add
subb
js
int
rolw
lods
jg
jne
sbb
push
hlt
ja
mov
cmp
ja
aad
jp
cmp
pop
mov
pop
sub
pop
sub
shr
std
sbb
push
sub
shlb
fildl
sub
aas
sbb
cmpsb
push
and
fadds
inc
mov
mov
xchg
sbb
lods
test
mov
mov
test
pop
lds
xor
outsb
lock
out
cld
scas
stos
jmp
adc
movsb
sub
add
mov
int3
xchg
add
push
fiaddl
mov
test
stc
mov
or
jecxz
shl
mov
mov
scas
or
jge
lock
xor
test
xchg
push
xor
outsl
and
subl
sub
shr
lds
enter
sbb
mov
dec
aaa
roll
aaa
or
jbe
jns
lcall
je
mov
push
es
shlb
push
aam
pop
arpl
rcrl
sbb
lret
int3
clc
scas
imul
sub
mov
jns
mov
cmp
arpl
sbb
imul
hlt
scas
out
outsl
mov
outsb
pop
or
sarb
std
xlat
pop
adc
mov
arpl
sub
mov
pop
push
ja
out
aaa
sbb
dec
dec
pop
pop
adc
sbb
sbb
out
pop
mov
jo
enter
jp
dec
xor
int3
dec
pop
sti
loopne
inc
ja
xor
pop
sbb
jmp
test
inc
inc
imul
inc
xchg
imul
jns
outsl
xchg
xchg
jae
data16
cmc
add
pusha
jcxz
ljmp
nop
loopne
mov
ds
shrl
stos
out
das
mov
or
jne
and
movsb
inc
fmuls
xchg
cmpsl
das
mov
jbe
adc
cmpl
ret
lods
pushf
cli
dec
mov
mov
cld
sahf
orl
es
test
xchg
lock
and
out
xchg
sbb
cltd
mulb
fisttps
xor
sub
rclb
pop
xchg
mull
xchg
int3
xor
mov
pushf
inc
les
hlt
push
and
ret
sub
inc
xchg
pop
push
ret
mov
xor
push
data16
lods
cli
add
loop
cmp
shl
sub
lods
jns
or
test
xchg
mov
sbb
sub
xor
mov
test
test
lea
sub
repz
mov
cmp
adc
xchg
ret
mov
push
sti
push
xchg
lcall
repz
pop
js
std
mov
add
mov
mov
repnz
push
nop
inc
scas
je
push
cmc
mov
rorl
and
loopne
lret
mov
gs
cld
mov
cmp
mov
mov
or
cmp
into
push
es
outsb
mov
mov
lods
rclb
hlt
lods
fildl
ljmp
ja
and
dec
sub
pop
xchg
call
xor
leave
inc
out
cmpsl
sub
movsl
loopne
pop
ficoml
fmulp
sbb
push
aam
pusha
mov
mov
adc
mov
out
mov
sub
shll
mov
sbb
in
rcrl
jg
sbb
inc
outsb
push
cmp
testl
inc
repnz
and
mov
xor
cmp
shl
aad
mov
es
mov
out
inc
popf
sbb
mov
push
pop
pusha
pushf
push
mov
in
inc
inc
mov
push
lret
sub
and
xchg
lods
add
scas
sbb
lea
cmpsb
pop
mov
sti
mov
inc
stos
cwtl
dec
cwtl
mov
xchg
sub
fcmovnbe
imul
sub
loope
stc
mov
jle
leave
hlt
test
hlt
add
cli
sub
pop
repnz
test
mov
xchg
in
cmpsb
jge
repz
clc
ret
enter
cmp
push
jle
mov
pop
ret
pop
cmp
sti
push
imul
leave
adc
fldt
cmpsb
fisttpll
in
cmp
dec
xchg
dec
ret
jl
in
sbb
das
out
dec
sub
outsb
in
mov
lret
pop
faddp
xlat
xchg
inc
arpl
cli
fisttpll
sub
mov
xchg
cmp
int
popf
xorl
cmc
add
cmp
addr16
push
push
fwait
mov
mov
ret
cmp
jmp
dec
or
pusha
inc
les
cld
nop
pusha
fidivrl
mov
enter
nop
test
adc
mov
cli
cmp
pop
sbb
mov
test
cld
push
cmp
js
testb
and
out
mov
push
push
enter
mov
xchg
sahf
addb
stos
jmp
dec
cmp
pop
insl
cmp
pop
xor
xchg
call
or
lea
decl
jp
scas
iret
push
xchg
mov
ret
hlt
mov
push
mov
jge
mov
and
lods
fucom
lahf
mov
loope
mov
je
cmp
sbb
jmp
clc
daa
roll
loop
mov
cli
and
inc
aam
xchg
push
stos
rcrb
int3
pop
jmp
data16
in
sbb
or
mov
jne
stos
add
aaa
fistl
pop
sti
mov
add
aad
sub
call
les
stc
jb
xchg
testb
iret
jmp
push
or
push
mov
shll
pop
jp
or
sub
sbb
jecxz
popf
cmpsl
sub
call
xchg
lods
mov
xchg
adc
adc
pop
jne
into
push
out
icebp
lock
pop
bnd
xchg
jne
push
neg
xchg
in
pop
ja
cmc
mov
sbbl
imul
jl
ja
jmp
push
lock
mov
popa
int3
popa
push
push
xchg
mov
lods
and
je
adc
jmp
into
out
mov
das
dec
out
imul
push
push
lea
mov
xchg
cmp
xor
dec
mov
push
xchg
lret
xor
xchg
add
push
repz
mov
sub
outsl
repnz
adc
cmp
sti
dec
xchg
jl
sahf
cmpsl
inc
es
push
jge
add
enter
pop
jae
outsb
gs
fldcw
sub
call
push
outsb
push
inc
pop
call
inc
xchg
movsl
jmp
mov
mov
out
add
cmc
dec
cmp
les
gs
enter
imul
das
jle
movsl
push
ret
inc
ja
icebp
in
xlat
dec
ja
sbb
push
sti
mov
mov
xchg
and
add
xor
rclb
cmc
add
sbb
add
out
andl
sub
ljmp
xchg
push
pop
push
orl
inc
mov
pop
mov
inc
push
movsb
pop
pop
cmp
or
and
sbb
mov
push
xor
sub
cmpsb
movhps
loop
mov
in
add
test
adc
sub
inc
mov
xchg
ror
fsubr
out
data16
outsl
rcrl
push
xor
pop
scas
cmp
xchg
jb
in
push
out
or
xlat
sub
mull
mov
jp
orb
xchg
mov
leave
jmp
jno
in
push
push
pop
stos
notl
add
js
sti
fsts
ret
mov
xor
add
mov
in
gs
or
gs
mov
mov
and
and
jl
mov
jns
sarl
add
mov
gs
xor
mov
aam
sbb
scas
push
rcr
loop
fucomi
imul
enter
jp
push
dec
sub
push
pop
mov
mov
test
and
pop
aad
mov
push
hlt
mov
mov
mov
cmp
jns
cmp
xor
adcl
insl
addr16
mov
fldt
movsb
mov
dec
add
cmp
xchg
adc
pop
mov
xor
lret
adc
mov
stos
mov
imul
leave
jp
mov
sub
stc
jecxz
pop
mov
sarl
add
mov
gs
mov
and
cli
test
mov
int
sbb
sbb
ds
xchg
inc
mov
in
mov
rolb
bound
cmp
jl
repz
mov
lods
adc
in
ss
enter
adc
test
out
ljmp
sbb
add
ljmp
rcl
and
repz
inc
repnz
xor
mov
stos
xchg
divb
xchg
add
repz
xor
cmpsb
js
outsl
call
dec
xchg
sbb
out
test
fsubr
enter
push
or
push
repnz
push
dec
xor
aas
and
cmp
fcom
push
cmp
ficoml
cmp
pop
int
adc
enter
stos
mov
mov
lahf
mov
stos
cwtl
movsl
lcall
insb
xor
jbe
adc
or
loopne
inc
out
cli
std
movsl
push
push
mov
rol
jbe
sbb
std
stos
loope
aad
add
push
xchg
xchg
mov
pop
inc
xchg
scas
mov
outsl
imul
loop
add
test
mov
push
cmc
mov
out
adc
das
ret
sbb
push
popa
pushf
pop
loopne
cmovns
and
sub
les
inc
xchg
aaa
je
aam
sahf
adc
nop
add
hlt
add
subl
je
cmc
out
push
bound
fistpl
jno
ret
rol
sarl
mov
xchg
inc
negl
iret
imul
repnz
xchg
mov
lahf
push
push
enter
mov
pop
cmc
scas
pop
out
dec
adc
mov
sbb
les
adc
cltd
hlt
pop
popa
imul
mov
mov
inc
adc
mov
dec
pop
cmp
mov
push
push
test
mov
mov
and
cld
sbb
iret
std
or
adc
or
std
cwtl
rcrb
clc
sbb
inc
mov
in
xchg
fisttpl
pop
adc
nop
repnz
jns
ja
cld
jmp
and
cmp
inc
fs
xadd
sub
fstpt
mov
fisubs
mov
sti
out
sub
scas
int
cmp
test
jno
hlt
inc
adc
mov
jae
push
inc
cmp
inc
xlat
cmp
imul
daa
paddw
fucomp
je
fildll
loopne
ja
sub
mov
push
insl
xchg
jb
lahf
or
incb
push
adc
iret
cmp
inc
xor
or
scas
xchg
push
nop
mov
adc
cmpsl
in
sbb
push
movsl
clc
push
cmpb
mov
notl
mov
sbb
ret
mov
iret
daa
movsl
add
mov
inc
insl
mov
inc
mov
mov
jecxz
and
int
lds
pop
and
nop
push
mov
cli
jmp
andl
loope
dec
testl
or
adc
and
int3
pavgb
les
jnp
adc
dec
sti
and
sub
cld
mov
fdivl
aas
sbb
mov
sbb
pop
dec
into
in
int
xchg
and
aam
push
insl
jns
adc
repz
sbb
and
mov
insb
mov
flds
orl
adc
xor
fidivl
mov
sti
mov
sbb
pop
fs
mov
int3
cmp
or
sub
pop
xor
push
xlat
lds
mov
inc
cmp
fwait
jo
mov
xchg
add
cld
cs
cltd
es
hlt
cmc
loope
in
pop
pop
filds
adc
inc
rclb
outsl
dec
ss
je
movsl
and
or
jecxz
dec
or
xlat
mov
movsl
fstp
loope
test
imul
in
mov
hlt
lods
dec
push
fidivs
mov
or
push
adc
sbb
dec
in
sbb
test
mov
or
cwtl
cmp
adc
arpl
lret
pop
mov
pop
cmc
nop
xchg
cmp
divl
cmp
outsl
jno
sub
dec
cli
repz
or
ret
iret
out
pop
test
hlt
out
ret
cmp
mov
into
inc
xorb
xchg
xor
scas
jbe
mov
mov
mov
pop
inc
xchg
jecxz
and
hlt
mull
sbbl
pop
flds
add
jns
sub
stos
or
and
sahf
movsl
jnp
std
scas
pop
les
push
pop
test
mov
and
hlt
sbb
add
xchg
sbb
dec
mov
mov
shll
out
lods
mov
mov
addr16
inc
dec
test
shlb
xlat
mov
sub
mov
sub
and
xchg
fbstp
incb
xchg
ja
out
dec
mov
int3
dec
jbe
lock
loop
inc
call
mov
sbb
push
adc
xlat
push
out
rcr
ds
xchg
in
add
bound
fwait
xchg
ret
jp
mov
adc
xchg
test
dec
jle
cmp
xchg
loop
xor
cli
das
pop
push
sahf
mov
push
and
or
mov
fsubr
loopne
js
adc
cltd
sbb
jecxz
cmp
pop
pop
push
xchg
out
mov
mov
pusha
pop
test
inc
xor
test
into
cld
ja
push
jmp
lea
loopne
sub
adc
xchg
test
lret
pop
mov
sub
mov
adc
push
jecxz
icebp
mov
popf
sbb
cmpsl
inc
stos
xchg
push
cvtdq2ps
pop
adc
cli
movsl
sub
pop
jle
and
mov
inc
mov
mov
jns
pop
xchg
mov
dec
xchg
or
in
clc
ljmp
push
add
aas
cmpsl
pop
lcall
jnp
cli
dec
xor
lock
xchg
xor
pusha
call
sbb
sub
or
inc
rcr
cmp
mov
je
cmp
xchg
lahf
nop
dec
sti
push
inc
cltd
mov
xor
xchg
or
cmpl
ljmp
or
sbb
movsb
sub
lods
cmc
xor
adcl
lret
cld
jg
movsl
jbe
lds
mov
fs
sbb
and
aaa
mov
js
fists
mov
in
mov
pop
dec
movups
scas
sti
icebp
adc
lock
je
filds
mov
sbb
cli
push
cmp
jge
add
push
cld
xor
shrb
incl
sahf
push
inc
mov
mov
jmp
cmp
mov
hlt
fidivrl
mov
xorb
mov
jae
mov
dec
adc
aad
stc
in
lret
push
dec
cmp
inc
xor
mov
push
in
dec
daa
jecxz
fdivrs
cmp
lea
sbb
add
pop
inc
mov
rolb
dec
sarl
ret
jb
lret
scas
mov
out
mov
inc
mov
pop
repz
jns
repnz
lods
imul
mov
out
push
lahf
fs
popa
fisubrl
std
pop
pop
push
std
imul
or
add
xchg
ret
and
jecxz
adc
std
jns
and
mov
pop
pop
jg
fiaddl
enter
dec
jge
mov
mov
mov
mov
cli
dec
scas
jecxz
add
add
cmp
call
stos
aad
push
xchg
imull
jp
cld
imul
ret
repnz
or
or
or
mov
cwtl
mov
test
ret
aad
or
mov
cmp
xchg
pusha
ret
insl
lock
rep
or
popf
adc
ljmp
in
test
pusha
inc
sbb
mov
mov
incb
insl
mov
fisttpl
push
fldl
sub
clc
cltd
loope
dec
add
imulb
ret
lods
cmp
pusha
lock
pop
jmp
push
mov
push
jo
ljmp
jb
pop
adc
push
enter
cs
inc
and
out
out
dec
pop
adc
nop
sub
and
outsb
in
cmp
sub
adc
decl
shrb
mov
and
movsb
jnp
and
cmpl
insl
insb
mov
mov
subb
mov
inc
jne
fbld
aaa
je
fldl
orb
inc
clc
arpl
push
negb
lcall
fisubrl
jne
jnp
cli
jo
jno
in
dec
dec
andb
outsb
idivl
sbb
xchg
cmp
sbb
pushf
mov
lcall
jecxz
in
push
xor
xchg
mov
push
aaa
outsb
xor
push
popa
mov
ret
adc
pop
sub
jle
inc
daa
add
sub
mov
stc
mov
pop
int
icebp
lds
push
jl
fs
les
xor
fucom
data16
inc
push
fwait
pop
sbb
mov
and
stos
inc
sbb
add
lods
daa
mov
push
cli
xchg
std
add
inc
shll
cmp
loopne
sub
outsl
pop
aad
add
loopne
jbe
call
pushf
adc
int3
dec
jae
pop
fcmovne
loop
inc
ret
jmp
sbb
aaa
mov
dec
pop
push
les
mov
popf
adc
and
adc
pop
cmp
lahf
out
rcl
xchg
loop
test
jo
xor
jnp
stos
mov
push
in
clc
pop
ret
shrl
or
mov
loop
pop
jb
mov
jo
aad
pushf
outsb
iret
sbb
movsl
and
xlat
xchg
cmp
add
adc
adc
push
shl
cmpl
sub
dec
ds
push
clc
das
sbb
popa
sarb
mov
shll
lea
sub
bound
out
xchg
jb
daa
cmc
jl
test
sub
ja
jns
inc
push
icebp
nop
sarb
dec
addr16
pop
dec
mov
das
xchg
sbb
or
lret
bound
lahf
jg
les
mov
hlt
mov
test
sbb
xchg
in
pop
mov
imul
pop
push
or
jae
mov
dec
jl
mov
pop
insl
pop
mov
or
mov
jno
call
ret
and
les
and
sub
push
lea
stos
imul
testb
nop
test
pop
ja
inc
mov
lret
ss
and
sbb
lret
or
lods
icebp
dec
bound
std
aad
subl
ficomps
and
popf
popl
push
push
lods
cmp
xor
arpl
aad
out
imulb
push
dec
and
fdivs
and
adc
out
outsb
ret
cmp
fldt
lods
jbe
jae
or
sbb
push
sub
aas
push
ss
mov
gs
lcall
rol
add
sub
mov
movsb
dec
sahf
jno
mov
insb
mov
sub
push
jl
or
insl
inc
add
rcr
pop
shrb
popa
cs
js
fisubrl
xchg
pop
adcl
push
cltd
out
cmpsl
out
pop
inc
dec
psrlq
cli
test
lock
shl
aaa
cmp
mov
xchg
mov
and
dec
sbb
fxam
cli
gs
push
push
ljmp
lret
popa
ret
stc
mov
xchg
stos
inc
mov
shlb
clc
daa
in
jmp
loop
xchg
adc
stos
push
ds
push
les
sub
mov
rcl
mov
imul
jns
pop
lret
in
or
xor
inc
roll
rcll
out
sahf
out
xchg
and
sbb
divb
mov
arpl
cmpsl
xchg
jne
movsb
cmp
xor
or
cmp
pop
push
pop
mov
scas
mov
mov
xor
je
xchg
fsubrl
ljmp
xchg
mov
bound
mov
icebp
mov
or
add
adc
inc
inc
or
sub
out
sbb
in
push
enter
lahf
pushl
lret
test
in
cld
push
or
xchg
jle
les
aaa
test
push
xchg
dec
repnz
xor
mov
adc
ret
adc
notl
xchg
jmp
leave
or
mov
xor
ret
or
sub
rolb
das
shll
icebp
add
aam
imull
fstpl
mov
outsl
dec
in
mov
pop
outsb
ljmp
and
mov
dec
std
mov
ficoml
popa
enter
push
mov
mov
test
inc
adc
call
add
add
dec
jmp
jmp
int
xchg
lret
xor
loop
fcoml
int3
cld
xor
inc
iret
sarb
je
sub
icebp
mov
xchg
aam
js
mov
xchg
mov
dec
hlt
inc
ljmp
sub
pop
idivb
mov
icebp
fcmovbe
push
sbb
aaa
decl
movsl
lea
fcomip
inc
loope
push
inc
imul
jp
push
adc
mov
jmp
rolb
out
and
ljmp
dec
popa
lahf
notl
push
cmp
fisubrl
pusha
gs
stos
repnz
sbb
mov
cli
and
ret
repnz
shll
int3
imul
push
push
jb
cmc
daa
jg
repz
sti
push
mov
in
mov
cmpsl
fcmove
iret
lret
mov
mov
shl
bound
add
cmpsl
movsb
push
cmpsl
test
inc
jmp
std
stc
add
push
stc
gs
sbb
dec
loopne
add
bound
mov
popf
or
cld
adc
xchg
cli
push
data16
inc
xor
or
cvtps2pi
ds
inc
sbb
mov
push
push
stos
pushl
dec
xor
mov
push
jns
mov
sub
lods
mov
outsl
movsl
inc
mov
in
add
pushf
in
icebp
sbb
adc
inc
clc
push
es
dec
dec
mov
dec
push
mov
add
rcll
jo
scas
in
fstl
test
nop
inc
fbld
push
inc
add
push
inc
xor
mov
sub
xor
mov
test
cmp
sbb
push
mov
movsl
loope
adc
adc
bound
les
scas
shlb
jbe
cmpl
lcall
dec
push
jns
mov
test
lret
jmp
shll
xchg
out
xchg
iret
mov
add
mov
mov
mov
imul
mov
imul
nop
sbb
sahf
repnz
push
fs
popf
js
push
mov
lret
xor
add
stc
testw
stc
fdivl
cmp
ficompl
jb
aaa
sbb
jp
jle
xchg
and
in
test
xor
in
lahf
mov
cmp
data16
xor
adc
and
mov
sub
dec
cmp
add
cmp
test
or
arpl
and
mov
jp
add
int3
jmp
ljmp
xor
xchg
test
movsl
sbb
and
rcl
sbb
bound
jne
or
mov
test
sbb
jns
cld
out
xor
jle
pop
sub
adc
pop
push
fs
sub
pusha
sub
stc
mov
and
add
adc
inc
mov
mov
inc
int
outsb
xor
int
int3
inc
lods
cld
and
imul
addr16
add
sbb
push
xchg
sti
adc
jns
xchg
insb
addr16
fstp
aas
push
lods
or
sub
mov
loope
mov
and
cld
lods
xchg
push
mov
hlt
stos
scas
pop
lret
ss
dec
inc
out
jno
xor
roll
fmull
mov
das
push
sub
mov
inc
jmp
push
jecxz
add
sbb
movl
in
test
in
add
pushf
scas
mov
bound
repnz
outsl
mov
rcrl
outsb
mov
mov
pop
test
clc
inc
data16
arpl
inc
rolb
xor
in
inc
mov
mov
mov
hlt
mov
ret
or
sbb
ret
add
xchg
movsb
movsb
in
je
nop
jecxz
shr
mov
pop
aas
dec
xchg
in
jp
outsb
fistpl
inc
addb
xor
or
jge
add
xor
neg
sub
loop
dec
loope
aaa
aas
push
sbb
push
cs
push
js
jbe
data16
lcall
aam
fmull
jecxz
mov
xor
xchg
and
dec
ret
pusha
adc
addl
popa
xchg
adc
pop
mov
dec
lret
pop
lcall
sub
rcll
cmpsb
jo
pop
cmp
push
add
mov
push
sbb
scas
xchg
lods
xchg
sub
add
sbb
imulb
sub
sub
or
push
mov
sub
adc
xchg
or
aad
sbb
dec
or
int
or
gs
dec
jae
lret
cmpsb
or
or
adc
pop
sarl
and
xor
inc
add
stos
lret
jbe
mov
dec
scas
mov
pop
out
loope
push
loope
fwait
lods
das
shlb
mov
pop
mov
xabort
js
js
loopne
xchg
cwtl
mov
stc
aaa
int3
testl
pop
xor
pop
mov
jmp
xchg
mov
lods
subl
loop
out
fdivrs
pop
mov
sti
jno
out
aad
lea
test
push
loop
ds
pushf
push
test
fstpt
fmuls
mov
andl
push
insl
je
es
hlt
aaa
push
inc
std
cmpsl
pop
and
cli
xor
sub
and
inc
insb
pop
data16
and
fsubs
pusha
xor
sti
popf
ret
sub
clc
sbb
cld
mov
push
inc
out
sar
jae
dec
xchg
in
fldl
es
fcoml
inc
ret
push
fwait
and
mov
iret
pop
outsl
lret
sub
js
stos
fcmovnu
js
dec
push
es
add
jmp
fwait
add
aas
mov
movsb
out
lock
inc
les
add
dec
sahf
xchg
or
or
push
shrb
and
xor
mov
addl
xchg
insb
mov
adcb
enter
add
pop
push
aam
jae
data16
pop
scas
popf
xor
sub
inc
mov
imul
jne
rorl
add
pop
sbb
jo
cli
and
pop
adc
int
jo
or
icebp
aas
stos
movsl
fwait
jge
rclb
inc
xor
push
xchg
lock
jmp
subb
into
adc
jbe
clc
mov
dec
cmp
outsb
inc
cmpsl
mov
pop
scas
add
mov
pop
ret
pop
rcrl
push
icebp
rcrl
push
pop
xor
mov
nop
ds
mov
pop
jno
or
aas
fmull
cmc
adc
push
fsub
orb
adc
mov
push
dec
adc
sbb
mov
sbb
test
mov
mov
push
adc
xchg
pop
shlb
nop
jp
enter
pop
xchg
sbb
jp
test
gs
mov
dec
andb
sbb
xchg
xor
mov
sbb
lret
pushf
ret
xchg
jo
sub
dec
stos
xchg
and
cmc
push
push
mov
adcl
or
mov
insb
jns
lods
rorl
xor
icebp
movsb
push
xchg
aad
loopne
push
lcall
iret
push
push
pushf
in
xor
mov
repz
dec
mov
jo
mov
xor
add
adc
test
or
inc
or
clc
out
sbb
push
mov
sarb
mov
sub
fmull
xor
test
dec
aam
das
dec
xchg
in
mov
mov
mov
push
mov
cmp
fisubrs
daa
mov
lea
pop
loop
push
pop
lret
mov
lods
dec
subb
mov
sub
into
std
daa
lret
add
mov
iret
mov
fcmovne
xchg
ret
int
or
fs
jne
mov
mov
in
pop
fs
fisttpl
mov
adc
and
aas
push
in
out
das
pop
subl
outsb
fldcw
push
lfs
cli
fisttpll
fs
insb
mov
or
in
adc
sarb
or
cmovle
or
out
fiadds
movl
std
and
cmp
push
dec
test
mov
fbld
cltd
test
jns
xchg
pop
fimull
in
imul
push
jge
fbstp
sub
dec
pop
or
mov
es
dec
outsb
dec
stos
aam
call
inc
pop
das
jbe
xchg
cltd
sub
sbb
adc
mov
vpminub
outsb
ja
and
and
sbb
outsl
les
das
xlat
pop
jge
push
repz
mov
adc
jecxz
hlt
and
sub
sub
imul
imul
int3
and
inc
lds
ret
testb
cmpsb
stos
mov
aad
pop
int3
xor
mov
pop
js
mov
test
out
divl
mul
push
imul
mov
std
out
rorl
mov
scas
xchg
daa
mov
imul
test
xchg
dec
sbb
and
fstpt
fcmovb
rol
and
inc
pop
into
sahf
mov
pop
mov
lods
es
out
out
xchg
pop
clc
pop
fucomip
push
movsb
xrelease
dec
push
xor
sti
fwait
add
ret
idiv
or
dec
push
popf
sbb
mov
mov
xor
mov
cwtl
jle
sti
sbb
adc
cld
dec
insl
sub
sarl
out
pop
je
pop
xor
push
jo
popf
ret
cmpsl
lret
clc
dec
into
pop
pop
cmp
xchg
xor
sub
cli
ss
es
inc
or
fsubr
mov
cmp
hlt
shrl
sbb
xor
jbe
xchg
int
loop
sbb
mov
ss
mov
cs
xchg
cmp
ret
mov
xor
adc
dec
xchg
lahf
xor
fmuls
dec
lods
sub
xchg
bound
sbb
data16
call
shlb
mov
stos
mov
jl
xor
fimuls
sbb
adc
cltd
xchg
int
into
mov
aaa
lea
sub
lods
add
rcrl
jp
lret
sbb
and
xchg
in
aam
mov
mov
sub
std
test
xor
out
cltd
ror
loope
push
outsb
pop
adc
repz
dec
mov
push
mov
jns
push
and
das
clc
fs
mov
std
jle
arpl
ja
rorl
icebp
pusha
ja
pop
push
jne,pn
jmp
jge
test
push
dec
cli
xorb
into
jbe
aad
and
mov
or
cli
scas
mov
mov
fildll
push
in
or
xchg
sub
nop
lcall
aad
lock
in
jb
cmp
addl
stc
popa
loopne
inc
bound
mov
addr16
and
inc
xchg
cmp
xchg
mov
roll
xchg
sub
mov
and
jne
ret
inc
jne
imul
push
movsb
sbb
imul
inc
outsb
movsb
in
pop
aas
jnp
pop
subb
fwait
mov
pop
andl
xchg
xor
mov
push
or
cmp
xchg
scas
mov
xor
mov
arpl
cmpsb
jnp
mov
sub
fsubr
jmp
ljmp
pop
int
mov
mov
out
adc
push
lahf
pop
ret
int
xor
mov
jns
shl
idivb
in
shll
push
push
add
mov
xchg
xchg
push
or
inc
fiaddl
test
inc
loop
cmp
stos
pop
aaa
sbb
add
movsb
mov
lret
xor
or
addb
xchg
in
push
adc
mov
and
jo
push
pop
inc
sub
outsl
cmp
sarb
jne
repz
or
imulb
pop
push
test
add
les
popf
jno
cmpb
movsb
and
pop
sbb
mov
adc
jno
dec
pop
lock
sti
jbe
inc
push
or
lret
jecxz
popf
xchg
or
or
rcl
loop
in
jecxz
pop
fsub
clc
jns
pushf
and
dec
cmp
mov
loop
xchg
call
sbb
xchg
xchg
pop
push
movsb
gs
add
dec
xchg
call
jo
scas
push
addr16
pop
push
mov
or
xorb
mov
sbb
and
cmpsl
pop
inc
test
sbb
fstpl
stos
or
fstp
dec
dec
sub
xchg
je
push
or
repnz
sahf
sbb
mov
ja
sbb
ds
ret
pop
popf
sbb
adc
inc
cmp
mov
lds
dec
dec
jbe
add
sub
cmpb
jne
push
rorb
lahf
mov
adc
je
sbbb
sbb
outsb
xor
test
pop
pmaxsw
or
jmp
imul
add
mov
adc
xor
jb
repz
leave
lcall
lret
jmp
repz
test
xchg
outsb
sbb
sbb
and
jl
jno
ljmp
mov
jo
inc
in
cmpsl
dec
mov
jne
popa
adc
popf
hlt
sub
fwait
int
and
lret
cmp
icebp
lahf
lods
mov
movsl
xchg
inc
mull
int3
lret
mulps
hlt
pop
cli
push
adc
cli
aad
orb
mov
popa
aaa
lcall
jecxz
mov
mov
rol
insl
jo
sarl
inc
mov
fisubrl
in
scas
sub
iret
jbe
fs
push
xor
adc
mov
test
sahf
jnp
add
push
sar
jb
lahf
mov
mov
sub
xor
push
ficoml
sub
mov
jne
mov
inc
popf
or
frstor
mov
movsb
sub
in
push
sbb
mov
and
jo
xchg
lcall
lahf
loop
sub
lods
int
xor
fnsave
imul
stos
jge
and
fldenv
add
sbb
arpl
inc
push
lahf
mov
shll
inc
push
mov
aad
pop
mov
cmp
or
pop
add
sahf
lahf
mov
inc
sub
sbb
pop
xchg
rolb
je
outsl
mov
add
add
xchg
jo
sbb
xchg
mov
stos
or
mov
mov
mov
pmulhuw
push
mov
cmpsl
neg
push
or
pop
add
movsl
xorl
in
popa
cmp
mov
cmp
xchg
dec
outsl
mov
in
mov
fldenv
in
aam
outsl
xchg
test
fs
fidivs
cmp
sahf
clc
cld
in
mov
mov
and
test
mov
or
movsb
or
rorb
ficoms
xlat
insl
in
mov
xor
mov
arpl
and
xchg
sbb
lods
xchg
dec
lret
push
mov
ja
or
jg
inc
xor
xchg
jg
mov
adc
scas
sub
xchg
jge
rclb
loopne
cmp
adc
mov
aas
js
push
dec
fs
clc
add
jle
or
mov
adc
xor
xchg
ret
ss
xor
sbb
jg
repz
int
pop
push
cmp
pop
push
xor
pop
into
cmp
pop
sbb
pop
bound
sbb
push
xchg
out
movsl
test
xor
popf
and
fsubrs
lds
cmp
mov
pop
scas
imul
sbb
ja
daa
pop
adc
fadd
int3
or
mov
in
add
xchg
or
mov
fnstcw
lods
add
ds
pop
xchg
data16
and
inc
call
dec
xchg
xor
std
mov
dec
xor
inc
pop
dec
lahf
hlt
push
out
add
test
xlat
dec
add
mov
es
std
lret
mov
movb
daa
je
mov
leave
pushf
sbb
dec
pop
pusha
popf
mov
cmp
mov
sbb
lret
sub
push
into
jns
lods
das
enter
push
shrl
or
xchg
inc
jmp
dec
mov
xchg
mov
out
adc
mov
xchg
mov
or
outsl
iret
cmp
js
pusha
pop
fisubrl
cmp
cmp
push
cwtl
and
jp
js
lods
mov
int3
jmp
ss
popf
xchg
outsb
adc
fistpl
mov
adc
in
cld
fiaddl
cld
mov
fidivrl
inc
or
xchg
mov
push
push
fcmovnbe
xchg
sbb
lock
js
push
insb
xor
ret
dec
mov
mov
sbb
orb
push
imul
mov
in
jecxz
sbb
and
faddp
arpl
mov
in
dec
sbb
push
xor
mov
icebp
sub
mov
fs
mov
or
cmpsb
and
fldcw
xchg
mov
add
subb
mov
adc
test
pushf
push
daa
cs
mov
inc
cmp
aam
adc
cmpsb
sarl
push
ja
xor
int3
and
fstpl
xor
movsb
test
mov
xchg
mov
test
cmp
orl
imul
sarl
sbb
cli
shlb
pop
push
or
dec
movsb
fildll
jnp
dec
adc
inc
loopne
movsb
andb
outsb
fidivl
lea
repz
cmpsl
jae
cmp
or
subps
mov
sahf
push
fwait
xorl
inc
inc
testb
cmp
cmovge
xchg
push
divl
dec
out
cmpsb
cmp
mov
insb
xorl
lret
stc
out
inc
popf
setg
imul
outsb
jno
sahf
mov
mov
xor
adc
xor
pushf
sbb
jge
adc
daa
and
stos
mov
es
sti
xchg
jg
sarb
sub
pop
mov
pop
sub
idiv
push
std
or
dec
mov
stc
loope
loop
int
inc
pop
cmp
fcomps
aam
xor
imul
mov
xchg
and
cmp
mov
nop
fnsave
sbb
push
inc
cld
xchg
xchg
jb
jmp
sub
mov
int
adc
outsb
lret
inc
scas
inc
test
movsl
jae
dec
mov
das
jg
arpl
popf
stos
fsubrl
int
out
ja
xor
insb
scas
clc
xor
dec
sub
subl
add
cmp
jge
repnz
call
mov
cmpsl
int3
stc
adc
test
pop
insb
jae
into
pop
das
sbb
imul
xchg
dec
xor
ret
cmp
pop
outsb
mov
cmp
mov
sub
dec
insl
push
jl
sub
xor
dec
dec
outsl
int
or
fisubl
mov
into
repz
xchg
jmp
xchg
lods
and
mov
fwait
ss
outsl
imul
fldl
push
movsl
je
jle
sbb
push
inc
rorb
jg
inc
inc
loop
dec
cltd
leave
dec
xchg
mov
dec
cli
cmpsl
lcall
ret
cmpsb
sub
cmp
dec
push
lret
fs
dec
lock
mov
add
sbbb
lret
lahf
fs
and
push
faddl
push
cmp
cld
insb
fsubs
mov
mov
ljmp
inc
mov
fdivs
xlat
or
inc
bound
pop
aaa
jle
pop
adcl
sub
mov
cmp
sbb
mov
add
mov
stos
outsl
xorb
add
aas
popa
dec
add
andb
or
push
mov
mov
insl
js,pt
stos
gs
pop
lds
lock
cli
inc
jno
loopne
js
icebp
movsb
mov
push
fs
fwait
mov
mov
outsb
fistps
xchg
int
push
and
mov
decb
int3
or
xor
leave
pop
mov
sahf
shl
mov
cltd
add
jnp
push
cs
fidivl
fnstenv
jl
out
insl
mov
inc
pop
fdivs
cmpsb
pop
cmp
daa
cmpl
mov
and
scas
das
jo
inc
cli
or
fisubrl
push
stos
ret
cs
dec
mov
xor
dec
jl
and
jo
jmp
sar
pusha
roll
icebp
adc
das
repnz
in
dec
xlat
outsb
xlat
push
scas
inc
ficompl
sub
repnz
or
push
imul
mov
or
cmc
mov
xchg
and
jge
stc
inc
nop
jb
stos
cmp
xchg
daa
repz
xchg
js
fdivs
rclb
inc
out
and
insl
push
fdivp
cmp
data16
popa
cmp
inc
rclb
cmc
pop
pop
inc
insb
in
shl
pop
movsb
push
mov
pop
or
mov
ss
ja
and
shlb
mov
fxch
dec
rcrb
stc
outsl
push
stc
mov
cmpsl
push
ret
scas
and
lcall
movsb
push
out
aad
pusha
arpl
outsl
add
outsl
mov
nop
roll
in
cmp
mov
jmp
jl
add
mov
mov
mov
fldl
jge
icebp
mov
loopne
pop
adc
rcrb
lret
fnstsw
ret
cmp
movsl
mov
dec
in
add
out
mov
pop
lods
arpl
sbb
pop
ret
aas
shlb
push
cmp
insb
test
xchg
push
divb
les
daa
fsubp
lods
arpl
adc
lock
je
movsb
fisubs
icebp
fs
movsl
repnz
mov
jecxz
fidivs
shrb
adc
nop
inc
inc
std
or
inc
in
mov
and
xchg
sub
dec
mov
sub
cmpsb
mov
jl
rol
fwait
loop
popf
nop
cwtl
jb
sub
cld
and
mov
mov
pop
xchg
xlat
stos
mov
dec
aad
lahf
add
sbb
or
push
test
cmp
sbb
lret
out
loope
xchg
mov
cs
inc
adc
leave
xor
adc
sub
mov
ds
icebp
scas
dec
cltd
pop
sub
and
sub
out
mov
jg
test
inc
pop
cmc
ficomps
sub
pop
adc
mov
fcoml
mov
jno
sbb
sbb
shl
cmp
push
mov
xlat
in
mov
pop
fsin
xchg
call
adc
bound
push
cmpsb
cmp
sub
in
int
iret
orl
insl
xor
mov
and
push
mov
addr16
icebp
shll
ficomps
arpl
mov
idiv
cltd
movsl
mov
fadds
lcall
out
jecxz
cmpsb
popa
jne
call
shlb
sub
mov
mov
imul
and
scas
orl
xchg
insl
xchg
je
iret
cmp
mov
and
daa
test
sub
mov
fsub
xlat
push
lock
push
xor
pop
jnp
and
inc
mov
scas
dec
stos
inc
push
xchg
dec
clc
imul
es
push
mov
sub
push
push
into
xchg
es
push
push
aas
ja
movsl
xchg
incl
xchg
fnstsw
fidivl
lods
add
in
stos
lcall
mov
fldenv
add
push
sti
cwtl
stos
fwait
fwait
test
pusha
icebp
jmp
push
xor
movsl
insb
mov
push
into
inc
mov
sub
mov
imul
ss
fwait
jb
shl
add
sub
arpl
push
or
jbe
jb
testl
fwait
push
dec
cmp
outsl
jns
gs
test
mov
mov
sbbl
or
lods
push
orl
ds
push
or
lods
imul
push
cmp
cmp
lds
inc
xchg
outsl
es
roll
mov
rcrl
push
and
sbb
xor
mov
sub
shll
jb
pusha
inc
stos
ja
out
xchg
dec
jp
gs
xor
idiv
mov
xor
pop
lea
adc
add
and
mov
mov
push
ret
in
gs
sti
sub
andb
icebp
pop
mov
loopne
lock
mov
jmp
or
sbb
out
jae
mov
sbb
popf
data16
jb
dec
ficomps
or
fucomi
jle
das
fimuls
fwait
push
sub
cmp
das
mov
das
popf
loopne
loopne
dec
lret
mov
insl
mov
inc
pxor
xchg
sbb
insl
movsb
aas
andl
jns
fimull
and
push
das
sbb
stos
xchg
mov
cmpb
jg
mov
jnp
rol
pop
mov
xchg
stos
mov
pop
insb
jmp
mov
push
leave
mov
push
out
or
inc
int
fsubl
cmp
cmp
push
inc
sbb
push
mov
js
add
or
into
scas
add
gs
je
jp
lods
into
cli
sub
and
lea
cmp
xchg
ljmp
cs
pop
add
xchg
or
push
das
mov
jle
jp
adc
dec
ja
jns
mov
jbe
aad
xchg
movd
xorb
add
and
adc
push
and
rolb
enter
xor
and
in
sysexit
pop
push
outsb
mov
iret
shrb
pop
dec
in
mov
aaa
int
loopne
aam
daa
mov
loopne
mov
les
push
mov
cmpsl
daa
and
inc
imul
and
pusha
mov
mov
sub
jnp
jle
dec
mov
push
repnz
jle
addr16
jge
mov
adc
inc
call
mull
mov
push
sub
pop
push
mov
bound
adc
loope
jns
xor
inc
sahf
cmp
jno
jp
cmp
mov
loope
cwtl
std
ds
imul
fisubl
lods
mov
or
jp
addr16
and
test
add
sti
inc
jg
andl
sbb
or
push
xor
jg
or
mov
out
lods
sub
xchg
shrb
jge
inc
sahf
rcrb
shll
fidivrl
loop
rcll
cwtl
and
xor
push
adcb
adc
inc
sub
pop
leave
test
cs
pop
jle
das
push
sbb
mov
jne
mov
adc
xor
push
lret
mov
inc
loop
mov
rcr
movsl
lods
scas
iret
cmp
inc
mov
xchg
addr16
cmp
fisttps
push
jmp
rol
dec
xchg
and
push
sbb
cld
pop
call
jns,pt
xchg
outsl
incl
xor
inc
rol
pop
or
cwtl
ss
scas
out
outsl
push
popf
sbb
es
dec
std
mov
jecxz
stos
xchg
push
in
cld
loope
cmp
ret
dec
sbbl
sub
shl
mov
repz
jo
call
cmp
mov
ret
ss
out
ret
xchg
sbb
sub
ja
addr16
lea
jecxz
inc
sbb
jg
inc
aad
nop
in
inc
push
std
push
pop
cltd
pop
pop
mov
pusha
mov
sar
add
adc
inc
inc
inc
sbb
cmc
xor
xor
push
add
pop
sbb
xor
add
jb
push
mov
pop
push
addl
repz
loope
lea
xor
incb
mov
adc
dec
mov
xchg
hlt
les
push
les
sub
loope
pop
nop
or
dec
adc
sub
mov
negb
movsb
or
inc
movsl
dec
pop
leave
sbbl
imul
dec
adc
mov
jg
pop
xor
fsubs
enter
sahf
xlat
xchg
pop
mov
hlt
cmp
sahf
out
inc
push
imul
out
arpl
dec
add
sti
jbe
sbb
ss
imul
add
xor
fsubs
dec
jae
aad
jle
out
xchg
outsb
xchg
nop
sub
pop
lea
fs
add
push
inc
inc
testb
mov
jle,pt
mov
orl
cmp
adc
or
push
pusha
mov
xor
push
xor
lret
cmp
movsb
mov
addl
int
cmp
cmpsl
shrl
scas
push
fidivrl
or
cmp
adc
mov
xlat
inc
jns
sub
dec
mov
inc
aam
push
xor
popa
jl
xchg
push
or
repnz
dec
jns
mov
push
aaa
sbb
push
cltd
fnstsw
inc
idiv
lcall
mov
jb
movsb
imul
repnz
mov
mov
addl
in
mov
icebp
jno
fstp
mov
sub
mov
cmp
or
daa
inc
daa
mov
sub
aad
lret
dec
aad
xchg
push
dec
test
setae
or
scas
imul
push
mov
jmp
xor
mov
test
loop
jp
pop
mov
sti
push
jg
das
out
mov
lcall
pop
out
outsb
cwtl
cld
addr16
and
mov
in
in
xlat
xor
or
and
adc
push
pop
pop
cmp
lret
sub
repz
int3
push
cmp
xor
pusha
push
mov
xor
cli
adc
jle
loope
inc
repnz
es
jnp
inc
jbe
scas
int
cmpsl
mov
jl
push
xlat
mov
stos
dec
in
xor
rcrl
mov
push
stos
push
cmc
pusha
fs
std
mov
int3
fsubl
and
enter
pop
ljmp
cwtl
adc
dec
les
xchg
cmp
pushf
leave
test
xchg
shl
pusha
lret
mov
ss
iret
ljmp
cmp
test
dec
xchg
popf
pop
mov
scas
push
or
pushf
sub
push
mov
pop
mov
shlb
icebp
or
sub
ror
notb
add
jb
xchg
mov
mull
icebp
mov
repz
lea
mov
pop
dec
dec
insl
and
in
addb
fstpt
sub
sub
call
out
or
imull
pop
xor
fildl
pop
lea
negl
jb
xor
outsl
jnp
movsl
es
out
stos
add
push
inc
imul
scas
mov
push
aaa
rorb
fwait
movsl
lods
cmp
ret
lret
pop
add
sub
iret
or
xor
ja
dec
dec
gs
sub
nop
push
jecxz
fstpt
lahf
repz
mov
lret
jns
bswap
push
mov
popa
mov
test
fwait
enter
subl
xchg
sub
lahf
outsb
std
mov
pop
or
xor
out
popl
fbstp
jl
mov
test
xchg
sbb
je
or
jno
out
js
mov
outsb
movsl
loope
das
pop
xchg
pop
stc
stos
sahf
cli
mov
add
inc
and
cld
test
mov
mov
push
int3
inc
or
ret
les
cli
push
sbb
mov
popa
aaa
sbb
push
repz
test
xor
je
sbb
mov
pushf
arpl
arpl
sbb
in
adc
mov
xchg
mov
fnstsw
push
sbb
loopne
xchg
xor
jns
jmp
mov
sub
mov
cmp
push
rorl
jge
adc
int3
loop
aad
push
js
pop
rcrl
into
jp
insb
and
push
fcmovb
xchg
add
sbb
push
jae
xor
adc
fnstcw
sbb
add
xor
stos
ljmp
int
ljmp
daa
in
jno
cmc
cmc
ss
jecxz
scas
push
leave
xchg
mov
inc
subl
lock
mov
adc
ljmp
xor
push
icebp
es
sahf
or
xchg
in
call
cs
leave
xchg
mov
pop
ja
loopne
mov
mov
inc
add
callw
push
pop
rcll
adc
rcrl
into
mov
stc
mov
fwait
pop
es
and
pop
pop
subb
xor
sbb
ffreep
xor
nop
cwtl
pop
lret
lods
lcall
mov
or
push
push
aad
or
jae
scas
nop
or
sbb
and
lcall
inc
add
mov
daa
pop
call
adc
scas
mov
ss
jge
pop
adc
fstps
scas
das
scas
jp
mov
imul
outsl
add
push
adc
jne
jb
nop
arpl
test
add
repnz
out
dec
xlat
clc
insb
dec
cmpsb
lods
xor
fcmove
xchg
test
addr16
je
aaa
and
inc
adc
xchg
jl
ret
popa
or
cli
add
repnz
in
jne
xor
mov
pop
sub
imul
pop
sti
ljmp
jno
fsubl
rcrl
lea
mov
lahf
push
mov
ficomps
dec
repnz
shlb
sbb
out
sbb
xor
or
enter
cli
inc
mov
push
adc
es
xchg
inc
std
xchg
xchg
dec
pop
pop
mov
add
insb
sbb
cli
mov
mov
add
ljmp
mov
fdivrs
fadd
sbb
sbb
adc
movsb
aas
xchg
rolb
out
add
iret
test
pop
and
cmp
mov
dec
ja
repz
test
xchg
adc
jg
xchg
test
ss
in
push
and
inc
adc
sbb
or
jns
int
mov
xchg
sarl
cwtl
sbb
dec
mov
push
push
cmp
js
fs
sub
push
test
stos
push
and
mov
js
mov
inc
ss
test
ret
inc
scas
push
mov
cli
sub
pop
sbbl
cmc
mov
inc
lods
or
mov
or
pushf
dec
or
mov
cmp
insb
sbb
scas
pop
cs
call
mov
mov
sarl
insl
pop
add
icebp
scas
stos
or
cmp
mov
imull
push
mov
pusha
xchg
xlat
dec
jo
pushf
stc
movsb
mov
and
daa
je
push
add
hlt
or
sar
sub
out
xchg
lods
add
push
xchg
repnz
dec
cld
pop
and
add
in
loope,pt
stc
jnp
adc
outsl
dec
nop
lods
add
out
jmp
das
xchg
fs
mov
adc
jmp
in
pop
xchg
fwait
roll
xchg
mov
jno
pop
mov
sub
sbb
hlt
rcll
jmp
inc
cli
stos
in
or
push
jb
xlat
inc
subb
xchg
xchg
test
js
or
icebp
mov
mov
mov
dec
cmp
daa
cli
popa
pop
mov
add
fs
mov
pand
fs
insb
pop
pop
cltd
inc
ja
stc
xchg
cwtl
mov
aaa
out
lods
sbb
adc
pop
inc
aaa
xchg
sbbb
insl
pop
push
clc
adc
mov
sbb
pushf
mov
lds
jb
mov
jns
push
popf
push
cmp
adc
inc
pop
mov
cs
jmp
sub
jo
aaa
aad
push
xchg
mov
xor
test
hlt
ss
push
test
stos
dec
sub
ficoms
cmpl
cmpl
xor
push
shr
xchg
add
and
iret
inc
push
addr16
test
or
dec
pop
mov
sub
or
xor
test
push
adc
fiadds
cs
add
push
and
mov
sbbl
jmp
jnp
popa
aad
mov
jecxz
movsl
or
mov
dec
cld
mov
pop
cmp
push
aam
pop
mov
pop
lds
xchg
es
popf
orl
cwtl
push
std
mov
icebp
mov
mov
out
mov
mov
add
iret
sub
jge
lcall
inc
and
cmp
cmp
loope
popa
push
insb
xor
int
jns
add
dec
cmpsl
cmp
sahf
addl
mov
lcall
xchg
negb
push
fsubp
mov
pushf
lcall
stos
dec
adc
or
stos
aam
pushl
push
xchg
cmp
and
in
xchg
addr16
lret
daa
push
mov
jecxz
pusha
leave
idivl
xchg
lods
pusha
loopne
sub
call
mov
sub
xor
inc
sbb
adc
lret
and
pop
and
ret
inc
sub
popa
inc
cmp
cli
lret
roll
lcall
sub
jecxz
mov
sub
push
jns
jl
adc
and
sub
push
jp
mov
pop
sbbb
aad
rcrl
in
jl
add
mov
push
jne
inc
xor
stos
mov
push
fisttpl
xchg
lds
jg
sbb
std
pop
jo
sub
les
sub
pop
sub
push
test
inc
or
cmp
ja
in
or
out
imul
jge
pop
sbb
bound
les
cli
fwait
hlt
loop
pushf
sbb
jb
ja
std
xor
add
or
idiv
std
adc
push
or
and
dec
jg
add
mov
iret
lahf
pop
pop
scas
jp
mov
mov
mov
mov
adc
insb
or
lahf
xor
pusha
dec
dec
insl
test
xchg
mov
test
adc
imul
shll
pop
inc
add
mov
add
inc
nop
mov
inc
fwait
jge
mov
stos
adc
scas
sbb
cltd
shl
mov
lea
in
not
decl
sbb
dec
mov
mov
pop
and
imul
xlat
mov
cwtl
pop
popf
imul
or
les
inc
xchg
je
testb
or
sar
pop
setbe
pop
adc
mov
pop
popl
cmpsl
mov
lahf
push
sub
jg
addb
push
mov
inc
adc
pop
pop
xor
lea
jb
out
jne
sbb
shrb
scas
cmpsl
roll
repz
mov
shll
lret
aaa
std
jns
sbb
dec
sbb
sub
arpl
push
test
mov
dec
xchg
popa
scas
ds
jmp
add
cmpsb
adc
sbb
xor
jmp
add
xchg
push
out
add
inc
jb
jo
xorl
dec
mov
iret
rolb
adc
sti
add
xchg
push
fsubrl
shrl
cmp
movl
xchg
xchg
fdivr
vpaddsb
push
xchg
arpl
xchg
adc
inc
popf
add
mov
lds
rcrb
mov
mov
adc
pop
mov
in
decb
xchg
ss
in
testl
addr16
scas
inc
shrl
stos
xor
lea
nop
mov
xchg
jle
jmp
inc
rcll
dec
js
add
mov
inc
xor
lock
mov
ja
push
into
aas
stos
aad
in
dec
sub
clc
enter
in
ret
in
sub
gs
inc
push
lds
lods
in
rolb
out
repnz
sub
adcb
xchg
jne
daa
xchg
ret
outsb
fnstenv
mov
sub
or
mov
insb
mov
mov
jg
in
jge
in
mov
pop
mov
mov
shll
mov
stos
das
dec
mov
lret
fistpl
inc
add
jb
ja
arpl
icebp
dec
test
add
mov
shll
repz
aaa
mov
rorl
shl
mov
cmp
out
ret
xchg
push
cmpsb
sbb
pshufw
iret
insl
jp
movsl
test
mov
push
test
testb
xchg
push
jp
in
xchg
lahf
negb
mov
or
mov
mov
sbb
jle
pop
inc
sbb
mov
popf
lods
add
sub
out
and
mov
not
inc
add
sub
out
push
cld
movsb
xchg
ljmp
jmp
ret
mov
cli
inc
pop
and
and
jae
pop
inc
js
sbb
insl
push
push
add
pop
jns
fsubr
aas
das
mov
cmp
add
testl
data16
stos
inc
xor
cmpsl
jbe
scas
cmpsl
jb
mov
add
jae
mov
jo
outsl
xor
stc
adcl
pop
add
xor
adc
sub
xchg
rcll
push
testb
les
xchg
sub
out
cmc
pusha
inc
int
dec
fildl
andb
sti
les
addr16
in
movsl
sbb
pusha
int
in
stc
ficomps
pop
sti
jge
adc
lcall
mov
add
xor
fcoms
aas
jbe
out
mov
ss
cmp
mov
loope
cli
jmp
mov
dec
sbb
ds
dec
repnz
ret
mov
out
mov
inc
xor
xor
adc
jg
jle
or
lret
mov
mov
out
fs
mov
cs
mov
mov
sub
mov
sub
adc
sbbb
addr16
and
rcrb
xor
jo
adc
lea
scas
xor
or
out
xchg
into
mov
push
loop
adc
mov
test
dec
fildll
xchg
vmaskmovdqu
daa
push
push
cltd
lahf
pusha
dec
out
or
movsl
clc
cvtps2pd
xchg
fldcw
jl
and
mov
insl
pop
mov
lea
adc
enter
pop
addb
ljmp
dec
popf
push
push
adc
sbb
adc
jg
ds
inc
lods
gs
leave
adc
jo
in
add
mov
jbe
sub
add
fldt
gs
mov
aam
sbb
sbb
cmc
xor
sub
mov
jmp
pop
dec
lock
scas
fwait
mov
sahf
push
cmp
addl
pop
lods
fistpll
mov
mov
inc
ret
push
stc
xor
pop
mov
test
add
lcall
xor
mov
sbbb
aaa
pop
test
fidivrs
movsb
lret
cld
sbb
jbe
and
push
jne
inc
into
movsl
mov
sbb
or
or
fldcw
cmp
lcall
sarl
dec
cmp
out
lahf
aad
int3
es
jne
or
jnp
cld
xchg
xor
les
mov
iret
dec
mov
fsubrp
popf
push
fsts
adc
jge
add
hlt
mov
lods
mov
push
lods
sub
adc
aam
dec
fldl
xor
sub
aaa
js
mov
pusha
movsl
dec
sbb
pushl
shl
addl
loopne
add
aad
aas
inc
and
or
test
test
pop
int3
dec
sbb
and
ret
in
enter
lret
add
repz
into
sbb
or
iret
dec
push
pop
mov
pop
sahf
add
jge
mov
insl
dec
dec
pop
lret
and
insb
cmc
shlb
xor
xor
or
scas
imul
cmpsl
xchg
jmp
loope
xchg
mov
in
div
outsl
xchg
mov
adcl
xor
leave
xchg
push
pop
xchg
ret
mov
cltd
push
mov
inc
cmp
jb
sbb
sbb
dec
adc
mov
xchg
push
jo
fisttpll
out
lret
pop
push
jl
xor
sbb
aam
jle
xchg
call
mov
loopne
sub
add
add
sbb
xchg
adc
ret
mov
sub
test
lock
fstps
shll
into
mov
mov
mov
js
sub
cltd
and
movsb
shr
add
add
xchg
fwait
xchg
pusha
call
xor
cmp
frstor
scas
push
aas
repz
leave
ljmp
dec
pop
leave
sub
mov
test
jmp
ffree
decb
dec
fsubs
push
call
addr16
dec
dec
xlat
adc
outsb
aad
loope
jb
dec
rorl
dec
fidivrl
outsb
adc
inc
mov
out
push
mov
or
insb
xchg
es
push
cmpsl
mov
lcall
mov
push
or
iret
mov
jg
mov
subb
sbb
sub
insl
dec
adc
pusha
outsb
push
add
enter
in
mov
jle
pop
jle
sbb
mov
xor
push
sbb
icebp
fidivrl
xor
negb
cmp
sbbb
nop
adc
mov
jbe
fpatan
fnsave
call
jle
push
lret
cltd
inc
adc
imul
add
shrl
dec
xlat
cmp
aad
dec
fstpt
sahf
xor
cwtl
loopne
outsl
and
imul
lock
sbb
jle
out
dec
mov
stos
jns
sub
dec
dec
add
mov
mov
or
dec
sbb
cmpb
das
jno
mov
out
test
sahf
in
adc
fistpll
sti
cmpsb
daa
fxch
rcl
fiaddl
dec
inc
and
mov
fwait
out
mov
push
xor
out
ss
jae
stc
js
dec
sbb
and
adc
out
xchg
push
sti
mov
roll
inc
add
add
mov
outsb
loop
lods
xchg
and
test
jmp
sbb
mov
leave
push
mov
pushf
outsb
call
pop
pop
add
cmp
inc
nop
pushf
call
and
push
jmp
xorl
xor
xor
pop
stos
xchg
aas
stc
xor
pop
pop
movsb
test
mov
and
mov
sahf
push
xor
cs
shrl
out
cmpsl
jg
sbb
nop
cmp
scas
sub
jecxz
push
or
mov
adc
stos
cmp
inc
dec
daa
mov
mov
fsub
addr16
push
fldt
push
pop
imul
cmp
jmp
xlat
xchg
mov
mov
test
adc
xor
dec
xchg
sub
cld
aam
mov
nop
inc
sbbl
cmp
es
jp
test
or
xchg
inc
jp
cli
ljmp
sub
negl
dec
xlat
dec
cli
jbe
adc
jmp
daa
xchg
lahf
test
in
adc
push
mov
es
dec
mov
roll
inc
ficomps
adc
sar
sub
ret
int
into
test
popa
out
mov
mov
les
cli
ret
push
xor
inc
insb
and
pop
jmp
push
mov
sbb
push
or
push
out
sub
loopne
jge
xchg
xchg
jmp
pop
fiadds
sbb
cmc
das
mov
imul
xchg
mov
loop
xchg
jnp
outsb
dec
shl
inc
daa
cmp
adcb
mov
jns
out
push
xorb
xchg
pop
mov
xchg
push
mov
lcall
pop
rcl
xchg
pop
fs
pop
push
out
hlt
push
clc
push
mov
les
fs
notl
sbb
pop
rcll
inc
pop
lock
xchg
push
dec
lcall
jp
sub
mov
add
std
pop
stos
xchg
push
insl
mov
aam
xchg
xchg
dec
leave
push
mov
es
jne
add
cli
mov
push
push
inc
mov
cmpsl
rolb
mov
xor
xor
stos
dec
rcr
mov
xchg
add
adc
fimull
aaa
pop
fldl
ljmp
xchg
inc
jle
test
lods
dec
cltd
xchg
adc
dec
das
sub
ret
or
mov
cmp
arpl
xchg
stc
loop
push
mov
push
sar
int
ret
or
inc
and
adc
adc
xor
mov
xor
aas
and
enter
mov
add
sbb
add
test
mov
mov
push
jo
xor
sub
inc
mov
aaa
imul
dec
scas
push
adc
jnp
and
pop
insl
ficompl
sub
xlat
pop
sbb
pop
insb
jl
and
rcrl
dec
sub
cmpb
insb
xchg
out
dec
ret
sub
cmpsb
xchg
sub
nop
out
cld
sti
das
shll
sub
push
out
lock
mov
cmp
jns
data16
mov
insb
and
bound
loopne
mov
call
outsb
int3
je
pusha
out
fistpl
sub
dec
popf
push
mov
test
inc
pop
xorps
lock
adc
jbe
mov
aad
mov
dec
adc
int3
mov
jno
mov
fisubs
lock
jo
loop
jno
inc
add
push
sub
sub
sbb
iret
pop
dec
jg
push
adc
push
xchg
jl
inc
fcomps
inc
in
cmpl
mov
arpl
xchg
cld
push
pop
fwait
fwait
fs
js
dec
sbb
mov
inc
xchg
xor
int3
xlat
cmp
call
add
mov
loope
sbb
add
test
cmp
mov
sub
gs
sub
inc
cmc
add
xchg
inc
fninit
mov
mov
out
jo
mov
dec
in
add
ljmp
mov
popl
out
in
xchg
cmp
stos
test
loope
arpl
out
pop
jno
push
sti
add
add
loopne
cmp
mov
in
cmp
fs
iret
das
inc
pop
sbb
call
imul
jns
and
call
adc
push
test
sahf
mov
in
in
mov
xor
mov
icebp
aas
fiadds
add
imul
ret
jns
or
adc
rolb
mov
sbbb
sub
cmp
daa
outsl
aas
mov
pop
dec
fidivs
jmp
add
in
inc
and
sub
insl
outsl
into
mov
pop
iret
out
aaa
std
loopne
xor
push
mov
mov
lods
fstpt
xor
test
push
sub
addr16
mov
cld
pop
iret
inc
daa
xor
outsb
inc
rcrb
mov
xor
and
adc
pop
mov
arpl
es
jb
mov
fdivrs
leave
adc
loop
enter
xor
ja
mov
mov
mov
aaa
aad
stos
dec
jg
ljmp
pop
bound
fists
aaa
xor
and
aas
push
and
sbb
out
mov
fadds
inc
pop
and
jbe
or
lcall
jno
push
xchg
dec
idiv
stos
cmpsl
xor
mov
ret
test
mov
add
mov
clc
loopne
insb
sbb
loope
ftst
sti
stc
push
cmp
add
fcmovbe
sbb
shrb
mov
push
in
roll
push
sbb
jns
mov
add
das
adc
insl
popf
cmc
pushf
sti
mov
xchg
push
mov
xor
cs
mov
clc
fdivl
scas
out
mov
into
sbb
and
push
dec
fadds
push
sbb
xor
sbbl
pusha
fcmove
outsl
movl
xchg
outsb
add
lea
test
out
ja
and
and
lahf
push
ja
inc
lahf
stc
xchg
pop
cltd
out
push
stos
and
sbb
add
mov
in
or
pop
dec
cmp
fcmovb
dec
inc
dec
int3
jne
aaa
ret
stos
roll
test
das
mov
sbb
in
jne
lock
or
sbb
add
aad
pop
sbb
fdivrs
cmp
inc
mov
push
repz
pop
cmp
sbb
or
or
punpckldq
push
adc
add
and
fs
mov
divb
mov
mov
fbld
push
pop
pop
and
dec
out
mov
jmp
shrb
enter
mov
jg
mov
fstpt
popa
mov
out
jae
adc
lods
jae
fistpll
arpl
int
xchg
nop
addr16
push
in
popf
packuswb
xchg
pop
and
pop
sub
mov
iret
push
cmp
daa
movsl
rclb
mov
aad
cli
sbb
jle
mov
pop
idivl
popa
mov
dec
fimull
adc
hlt
js
mov
loop
jb
icebp
les
dec
pushf
adc
add
pop
stos
and
out
cmpsb
fisubl
call
lret
sbb
aas
mov
loopne
inc
add
shlb
test
addr16
std
lcall
cld
xor
jle
dec
outsb
ds
jecxz
mov
dec
test
push
pop
dec
pop
inc
pop
repnz
push
cmp
adc
lds
fimull
push
std
ss
das
sbb
int
xlat
lret
dec
out
test
xlat
in
mov
adc
dec
mov
les
add
pop
push
repz
loopne
insl
mov
sti
pop
dec
mov
test
sbb
add
mov
mov
roll
xchg
lea
sahf
lods
scas
clc
jno
cmp
mov
ret
test
mov
push
pop
push
outsb
rcrb
scas
lret
leave
push
stos
xchg
push
cwtl
mov
jno
adc
je
add
pop
fistpll
popa
nop
adc
add
jne
lahf
add
mov
std
pop
mov
das
push
inc
roll
call
push
aam
fdivrs
inc
jmp
adc
shl
xchg
sub
out
cmpsb
frstor
test
add
fidivl
cmpb
push
sbb
int
sbb
into
sbb
push
cmp
push
nop
les
int
and
xor
int3
rolb
xor
int3
adc
shll
adc
pop
nop
jg
jb
rcr
lahf
xor
push
sub
ficoms
lea
fdivrl
push
push
shl
jbe
add
lcall
jns
jb
test
test
gs
mov
mov
punpckldq
ret
or
faddl
pop
stos
loop
in
and
in
cmc
aas
mov
mov
jge
push
ja
rclb
out
pop
and
mov
pop
dec
sbb
and
icebp
xlat
and
mov
jbe
leave
mov
inc
and
pop
ret
out
mov
push
sbb
inc
lds
sbb
adc
add
or
xchg
inc
test
xor
add
sbb
test
jp
push
fwait
and
mov
jge
inc
xchg
jnp
test
push
inc
dec
dec
dec
testb
shlb
push
mov
cmp
dec
mov
inc
or
ret
in
mov
fwait
popa
pop
xchg
lahf
aam
andl
pop
enter
push
arpl
addr16
iret
push
fcmovnb
shl
pop
movsl
inc
sahf
aam
loop
add
push
test
fdivr
inc
sbb
insl
fwait
push
push
ret
cmp
xchg
std
roll
imul
pop
sti
xchg
mov
outsl
pop
jp
ljmp
js
jg
push
lds
aaa
dec
push
xor
jae
jecxz
leave
jne
or
insl
mov
lods
mov
adc
jo
out
fnstenv
out
push
cmp
mov
xor
imul
fdiv
adc
insl
cmp
iret
bound
rcrb
mov
xorl
outsl
into
movsb
sahf
test
scas
ss
pop
xor
lds
xchg
loopne
sub
js
fisubrs
inc
fildl
movsl
xor
dec
sub
outsb
icebp
xor
xlat
je
mov
test
cmp
das
mov
gs
or
pop
jge
imul
mov
negb
cmp
sub
in
lods
inc
cmp
mov
jo
gs
out
lea
adcb
scas
sbb
scas
dec
pop
inc
pop
xor
cmp
std
loop
lea
iret
sub
mov
and
add
mov
push
mov
sbb
sbb
pop
mov
in
neg
lcall
leave
clc
mov
jno
mov
pop
inc
dec
adc
aaa
inc
or
rclb
loope
adc
sub
jnp
mov
dec
test
mov
sub
enter
xor
add
pusha
pop
adc
cs
mov
movsl
and
shlb
dec
xor
xor
stc
pop
sub
xchg
and
or
nop
enter
in
cmpsl
sub
je
pop
sub
or
repz
add
cmp
xchg
push
mov
cmp
push
mov
cmp
fsubrl
mov
dec
jge
sub
int
push
push
mov
jae
in
mov
mov
int3
fs
pop
adc
and
add
test
test
repnz
lret
dec
jo
or
sub
stos
sbb
jnp
mov
push
adc
insb
fistps
test
add
dec
fs
pushf
arpl
jl
sbb
xor
xchg
sahf
stos
mov
mov
rcrb
xchg
pop
or
pop
out
das
loop
mov
xchg
add
xor
outsl
adc
test
out
xchg
dec
and
call
lcall
cmp
mov
xchg
scas
jmp
dec
ds
icebp
imul
les
push
sbb
dec
mov
jbe
adc
add
inc
adc
jo
popa
outsb
mov
jne
pop
sub
clc
inc
sahf
xchg
cld
rdpmc
movsb
xor
sub
fidivs
leave
movsb
insb
in
push
mov
outsb
mov
imul
rcrb
mov
inc
stos
stos
ret
ja
push
push
pop
ds
jae
cld
leave
mov
jns
mov
jbe
push
mov
cld
mov
push
jb
push
sub
jle
lock
aaa
sub
add
pop
cli
shl
inc
addr16
or
popf
rcl
adc
jl
xchg
jl
mov
lea
push
sub
push
dec
add
rolb
ret
xchg
cli
push
test
rcll
jb
mov
lcall
sbb
lahf
fiaddl
fs
sub
roll
xchg
mov
jno
pushf
pop
xor
call
jno
daa
fisttpl
sub
add
and
inc
pop
sub
xchg
xchg
pop
mov
adc
clc
add
push
rcll
je
or
ret
jl
and
and
push
dec
dec
aad
testb
ljmp
jmp
push
and
jns
in
enter
int
and
or
jne
faddp
subl
mov
mov
icebp
mov
int3
out
sub
std
stos
scas
insl
inc
cmp
or
xor
xchg
mov
ljmp
xchg
pop
sbb
cltd
hlt
ss
xor
les
arpl
inc
push
mov
xchg
fcomp
pop
int
mov
jmp
popf
scas
data16
jbe
cli
loopne
adc
insl
push
les
sarb
xchg
outsb
mov
das
ret
aaa
inc
rorb
or
aad
popf
pop
jl
pop
cmovo
cmp
push
push
add
in
pop
pop
xlat
xor
mov
aam
cmc
dec
cmp
and
cmp
dec
and
hlt
add
add
sarl
les
push
repz
test
in
or
lds
dec
fadd
pop
pop
sbbl
lret
adc
stos
inc
popf
mov
lock
insl
test
lds
dec
fistpll
js
sub
push
bound
outsl
pop
inc
mov
or
insb
xor
rcrl
lahf
sub
mov
xchg
mov
pop
jae
mov
rclb
pop
jl
aad
and
mov
cmpl
cmp
js
test
adc
mov
pop
adc
jmp
test
leave
sub
enter
ds
repz
roll
movsb
add
mov
test
xor
jp
aaa
sbbl
gs
xor
inc
cmp
popa
mov
negb
fstp
fwait
xor
shl
mov
jb
fsubrs
pop
sbb
xchg
inc
inc
ljmp
flds
push
or
out
scas
xchg
sbb
pop
or
add
sub
jnp
cli
dec
or
sbb
rclb
push
scas
mov
nop
xor
inc
pop
sub
loop
mov
jnp
jbe
nop
xor
imul
push
dec
and
push
out
frstor
lods
scas
jl
addl
lods
sarb
dec
add
mov
fwait
add
shrl
leave
test
aaa
or
lcall
hlt
inc
int
xchg
jne
pop
pop
mov
loop
orb
mov
xchg
pop
cmp
out
sub
into
push
loope
inc
arpl
add
cwtl
and
dec
inc
or
pop
mov
xchg
push
mov
rcrl
js
fcoml
xchg
or
mov
adc
pop
js
or
ja
cmp
mov
xchg
mov
int
jo
stos
jmp
fs
movswl
imul
lcall
xchg
or
out
pop
jno
jle
push
icebp
fdivr
cs
push
je
mov
mov
das
and
xchg
stos
push
jge
mov
test
ljmp
arpl
dec
cli
mov
cmp
xor
mov
and
mov
sub
repnz
and
xor
insl
dec
pop
into
xchg
add
stos
push
sub
dec
int
dec
cmp
pop
push
fidivl
repnz
out
adc
inc
roll
add
adc
popf
loope
cmp
je
xlat
mov
sub
outsl
mov
pop
jge
pop
cmp
or
das
out
xchg
sbb
lods
push
repnz
sbb
mov
mov
mov
into
pushw
pop
push
loope
or
inc
mov
sbb
dec
and
add
mov
iret
or
ds
imul
jo
xchg
cmc
or
neg
lahf
mov
dec
pushl
fnstsw
std
stos
hlt
sbb
loop
and
cmp
xor
enter
test
bound
les
adc
xor
in
pop
cmpsb
mov
sti
ljmp
mov
ret
gs
mov
mov
or
dec
dec
xor
shlb
mov
imul
pop
pop
push
outsl
imul
arpl
inc
lret
out
mov
dec
ret
pop
mov
out
add
cmp
inc
fsubrl
mov
dec
pop
and
dec
mov
imul
pusha
in
sti
sbb
adc
jo
das
and
sarb
and
aas
sub
cmpsl
popf
scas
pop
scas
push
insb
adc
test
or
jl
jae
lret
xlat
push
stos
psubd
popf
lods
shrl
dec
pop
scas
in
iret
and
pop
cmp
pop
fcoml
dec
insb
dec
adc
out
test
fists
mov
dec
stos
sbb
aad
adc
add
stos
in
sub
imul
cmp
mov
stos
inc
jb
sub
jnp
popa
fcomip
fidivrl
repnz
in
sbbb
cmc
repnz
jns
int
incl
mov
iret
test
sub
mov
or
dec
movsb
pop
push
xchg
cld
push
fwait
enter
xchg
sbb
ljmp
xor
mov
lods
xor
dec
pop
jb
daa
or
adc
dec
iret
dec
xor
pop
mov
pop
adcb
sbb
inc
test
sub
mov
jecxz
leave
cld
jbe
jle
sub
jp
push
push
into
js
in
mov
xchg
stos
lea
mov
inc
aam
push
jg
push
daa
xor
dec
lods
sbb
bound
sub
fcmovnbe
imul
or
imul
mov
pusha
pusha
xchg
insb
int
and
jb
xchg
cmp
loopne
xchg
xor
inc
inc
sbb
iret
mov
xor
sub
shlb
stc
jp
adc
shll
imul
cmp
jge
mov
cmpsb
adc
dec
mov
add
jmp
adc
xchg
ds
inc
and
lret
xchg
cld
out
aam
add
push
es
push
xor
mov
xchg
xchg
cmp
outsl
mov
mov
jg
dec
mov
xchg
call
stos
cmp
pop
test
stc
dec
into
inc
ffreep
sti
das
mov
int3
fcoms
gs
mov
les
push
push
add
cmp
hlt
rcll
pop
out
mov
mov
roll
fwait
cltd
mov
lds
shl
test
shll
mov
xor
and
ret
mov
mov
fstl
mov
ds
xor
mov
or
cltd
imul
push
pop
xor
xor
lods
sahf
hlt
fiaddl
mov
lods
sub
mov
ja
jecxz
pop
push
mov
adc
or
fisubl
loopne
add
mov
test
sbb
cmp
pop
mov
xchg
cwtl
cltd
cmp
dec
insl
mov
xchg
ds
sti
jb
lods
pop
fistpll
outsb
cltd
lds
popf
pop
vpackssdw
gs
jge
xor
jecxz
cmp
in
lret
fcmovnu
in
scas
sbb
sub
mov
inc
xchg
xchg
pop
cli
jno
xchg
cmp
lret
push
pop
jbe
andl
sub
inc
adc
in
adc
popa
push
lret
push
push
lods
icebp
add
jecxz
jge
push
mov
xor
mov
fdivrp
add
cmpsl
and
lods
cli
dec
mov
repnz
dec
out
in
pmullw
ja
pushf
pop
sbb
pop
sub
pusha
idivb
test
push
sub
sbb
adc
mov
push
stos
clc
hlt
rol
test
movsl
inc
ds
fwait
test
dec
insb
inc
push
pop
xorl
xchg
add
push
jmp
lret
ds
adc
vrsqrtps
test
cmc
jecxz
mov
push
sti
je
cltd
ljmp
or
mov
lcall
cmp
jae
mov
sub
or
cli
lret
insl
mov
in
enter
mov
jl
lock
test
daa
repnz
pop
push
mov
xchg
xor
jbe
mulb
fnstsw
xchg
imul
jg
and
imul
push
in
and
mov
fisubl
das
mov
adc
push
xchg
mov
popl
inc
ret
scas
jnp
jno
and
inc
js
and
jne
insb
jg
xor
movsb
hlt
test
push
aad
in
mov
dec
dec
mov
jle
pop
inc
clc
xor
and
sbb
int3
or
rcrb
std
cli
cmc
push
dec
jmp
repz
inc
dec
cmp
aam
mov
inc
mov
cld
loop
xor
xor
pop
int
xor
xchg
out
aam
and
mov
in
aam
div
mov
sbb
xchg
push
sbbb
push
sub
out
dec
jae
testl
idiv
inc
sti
jecxz
mov
adc
in
sti
cmp
cli
insb
adc
sub
in
jmp
sub
adc
sbb
pop
pop
adcl
dec
lret
mov
pop
jle
dec
popa
out
cltd
mov
scas
jnp
dec
push
lret
mov
mov
sbb
in
dec
rorb
arpl
mov
movsb
mov
scas
in
or
test
mov
lods
and
clc
cld
clc
pop
popf
xchg
fldt
fwait
jae
sub
inc
fwait
xor
xor
push
xchg
fucomip
stc
mov
icebp
mov
dec
leave
cmp
dec
pop
cmc
adc
lcall
scas
jnp
bound
dec
cmpsb
jo
dec
test
les
sarb
jg
lock
mov
xor
or
sbb
inc
xor
push
inc
xchg
ss
std
int3
jns
test
lock
jle
xchg
mov
jne
arpl
pop
push
mov
into
mov
les
out
stos
adc
sub
xor
mov
or
push
rolb
popa
jmp
push
add
fldcw
inc
adc
jno
pop
addr16
gs
sbb
jae
add
cld
lock
xchg
sti
loop
mov
enter
push
xchg
lret
mov
push
jns
xchg
or
pop
cld
jp
jp
cli
sub
nop
cmp
add
mov
shrl
fadds
pop
into
mov
xor
xchg
aam
lods
mov
jae
es
jle
inc
inc
ficoms
movsb
jae
fisubrs
loopne
mov
rclb
cmp
ret
sbb
lock
movsb
leave
bound
roll
xchg
jb
pusha
lock
ficoml
les
aaa
insb
out
fdivrs
cld
stc
shlb
push
mov
out
rorb
push
cmp
clc
xor
int3
and
pop
xor
mov
cmp
jne
dec
mov
jp
ljmp
sub
in
ret
adc
jns
test
shrl
xor
push
push
push
mov
pop
cmp
mov
shlb
jle
inc
imull
out
and
and
add
dec
mov
push
adc
inc
add
xor
in
sub
repz
sbb
sub
inc
mov
xchg
pop
dec
and
sub
js
pop
shlb
pop
push
shll
subl
dec
push
push
mov
add
push
leave
cwtl
or
pop
mov
test
fisubrl
or
inc
lret
inc
dec
shl
outsl
and
movsb
addr16
sub
fcom
int
xchg
bound
xchg
sbb
call
push
mov
add
inc
aaa
dec
mov
faddp
popf
dec
sti
nop
cmp
int
pop
fsub
dec
or
jp
cmpsl
xchg
add
push
lods
push
push
jbe
fstpl
imul
sbb
ficomps
mov
jl
sub
fisubrl
shll
sahf
and
cmpsb
jecxz
int3
jg
ret
lcall
adc
cwtl
call
pop
mov
pop
push
or
pop
outsl
data16
push
push
mov
lcall
dec
xchg
test
andl
sbb
push
and
cmp
lahf
int3
dec
movsb
hlt
sub
cwtl
jecxz
or
adc
inc
jmp
or
test
cmpsb
das
push
inc
rcll
dec
cs
in
add
outsb
cld
das
stc
call
clc
push
fnstsw
ficoms
rcrl
movsl
add
lods
ja
push
xor
inc
arpl
pop
inc
inc
nop
lock
in
pop
sub
jbe
mov
xchg
or
xchg
or
adc
mov
std
jp
out
xchg
popf
xlat
int
pop
sub
ss
dec
push
mov
outsb
jne
fwait
pop
inc
mov
pop
pop
inc
sbb
popf
test
jnp
mov
xor
sub
cmpsb
fdivrs
adc
ja
sbb
mov
mov
in
add
outsb
xor
loop
mov
cli
lcall
iret
jo
idivl
add
xchg
add
xchg
mov
sbb
rcll
repnz
jp
sbb
pusha
push
pop
andb
mov
sub
scas
xchg
sub
imul
sbb
notl
or
into
xor
and
ljmp
pop
fcompl
call
push
mov
sbb
jl
jle
aaa
inc
rclb
mov
lds
pop
into
sub
pop
iret
js
stos
jle
and
xchg
dec
sahf
xor
fstpt
shll
push
fwait
push
sub
fstpl
cmp
fcomps
or
jae
cmp
fcoms
cmp
sbb
add
subb
js
xor
fsubs
outsb
inc
mov
add
std
jb
in
mov
mov
and
inc
stos
inc
std
dec
jnp
add
adc
das
addr16
ljmp
test
and
adc
aad
test
popa
push
xlat
lds
into
adc
nop
xchg
dec
dec
nop
popf
push
jl
cmpsl
or
jae
outsb
sub
hlt
mov
popf
mov
pop
loopne
iret
mul
mov
out
movsb
sarb
dec
inc
pop
add
or
stos
jne
sar
pop
mov
and
mov
aaa
lock
dec
cmp
repz
adc
push
mov
popf
push
pop
ret
mov
out
inc
pop
cwtl
or
test
mov
and
popf
push
das
cmp
scas
pop
jecxz
push
mov
cmpsb
cwtl
into
adc
add
insb
out
mov
cmp
mov
les
cmpl
cmp
pop
cwtl
ds
popf
mov
icebp
jbe
shll
cli
dec
loope
lret
fst
xchg
shrb
mov
fadd
scas
cmpsb
cld
sub
data16
fdiv
sub
pop
or
movsl
cwtl
push
pushf
sub
mov
mov
icebp
push
int
adc
xchg
xchg
aad
pusha
js
lock
push
mov
sub
mov
mov
xor
daa
or
ds
dec
jmp
xor
mov
xchg
mov
dec
out
add
sub
inc
pop
mov
mov
cld
sbb
cli
inc
cmp
out
lods
push
insb
sbb
pop
push
inc
scas
push
int3
int
fiadds
mov
enter
dec
cmp
stos
lcall
xchg
outsl
dec
mov
sti
subl
pop
fldl
sub
sub
add
inc
pop
push
mov
mov
adc
and
push
mov
pushf
and
push
mov
dec
shrl
movsl
xor
dec
rclb
stos
pop
js
dec
sub
dec
inc
fistpl
int
into
push
sbb
dec
repz
dec
rcrl
mov
or
xchg
orl
stos
inc
push
popf
imul
adc
repnz
shrl
jne
jp
daa
fwait
dec
aad
ret
inc
dec
adc
dec
add
lcall
aam
pop
bound
jle
xor
dec
xor
adc
push
and
hlt
icebp
mov
mov
mov
lods
ja
push
sahf
or
testb
lret
mov
popf
fldl
xchg
add
xchg
push
lods
faddl
jl
ljmp
sub
loope
or
mov
test
jle
fdiv
xor
in
std
arpl
xchg
jb
scas
fldcw
push
xorl
xchg
cmpsl
mov
push
lds
add
inc
mov
jmp
and
nop
test
mov
movsb
dec
orb
jecxz
into
lcall
pop
or
sub
inc
adcb
frstor
in
es
mov
or
std
shrb
xchg
push
mov
pop
push
imul
pushf
push
or
jo
fistpll
jne
mov
les
nop
jb
stos
cs
add
clc
xchg
inc
push
xchg
negb
inc
xor
and
jecxz
push
xor
leave
xor
ja
lods
and
push
pusha
in
and
gs
xchg
ret
jbe
jge
inc
movsl
nop
mov
into
rcr
sub
dec
or
mov
xchg
mov
movsl
loopne
or
add
imul
shl
aad
push
mov
xchg
xchg
lahf
push
scas
dec
xchg
aaa
lret
jmp
fidivrl
sub
or
shrl
frstor
and
pop
xchg
lods
add
or
cmpl
and
decb
and
inc
daa
adc
ja
mov
mov
popf
push
leave
cltd
mov
push
inc
scas
arpl
in
shll
pop
rorl
mov
aaa
addr16
lcall
hlt
xadd
xor
xchg
mov
jo
mov
cmp
xor
ret
in
outsl
xchg
xor
fwait
test
cmp
mov
test
sbb
push
sub
dec
jmp
push
jnp
mov
hlt
and
dec
gs
mov
dec
pop
dec
cmp
idiv
xor
cmpsl
xor
add
add
lds
cli
jns
and
nop
mov
fwait
aad
jle
adc
mov
in
add
hlt
mov
cmp
pop
bound
add
call
out
fiadds
roll
mov
stc
cltd
fnstenv
xor
insb
dec
mov
or
iret
add
cmc
gs
or
loope
pop
adc
in
ret
cwtl
mov
jecxz
pop
mov
insl
rcrb
add
mov
sbb
mov
add
sbbb
push
popa
inc
jb
push
daa
idivl
mov
sub
xchg
lods
mov
jns
pop
outsl
addr16
insl
insl
sub
repnz
or
pop
mov
and
xchg
inc
roll
cwtl
sti
xor
mov
popl
nop
jl
rclb
adc
shl
adc
jo
sub
in
push
mov
pop
fcoms
daa
dec
cmpsb
jmp
les
out
sbb
mov
test
add
repz
in
mov
dec
loope
fists
push
jae
data16
mov
sbb
iret
fiaddl
dec
sbb
stc
and
iret
cltd
js
pop
sbb
add
pop
pop
leave
inc
loopne
jp
imul
pop
mov
and
pop
xchg
mov
add
and
mov
movsb
bnd
pop
push
and
outsb
xor
imul
inc
outsl
call
jl
call
mov
sbb
pop
ljmp
push
repnz
scas
xor
arpl
cmp
xor
mov
nop
lahf
out
xor
mov
sbb
pop
xchg
dec
mov
inc
test
dec
pushl
ljmp
ljmp
mov
dec
sub
sbb
sub
push
jl
inc
push
mov
fwait
add
enter
inc
fldl
and
incb
inc
into
pop
sbb
out
or
in
xchg
ja
rcll
std
add
jno
mov
out
stc
jl
pusha
mov
xchg
push
add
sbb
sub
pop
sbb
or
repz
in
cwtl
hlt
push
movsb
les
shl
cmp
rep
pop
arpl
push
inc
call
daa
lret
ja
testb
shl
lcall
imul
ja
fstps
imul
lods
lret
jge
aaa
mov
shr
xchg
inc
dec
inc
mov
mov
sub
adc
lods
aas
mov
and
adc
popf
repz
push
cmpsb
rorb
cmp
cwtl
addb
addr16
loopne
mov
inc
sahf
in
arpl
mov
xor
lahf
mov
sub
xor
mov
pop
cmp
jns
int
dec
pop
push
data16
lock
lods
xchg
out
nop
xor
fst
or
cwtl
das
sti
xchg
cltd
mov
add
add
cmp
and
test
adcb
popf
push
int
in
xor
jg
enter
mov
push
pop
jg
icebp
cmp
call
mov
cmpsb
bound
add
dec
lock
add
ss
inc
loopne
out
int3
insl
cli
xorb
push
mov
je
lds
xchg
xor
icebp
sub
cs
push
inc
sbb
clc
in
ret
test
jge
mov
jmp
jge
out
ljmp
lods
jo
mov
ja
add
outsb
add
dec
cli
fildll
cltd
add
pop
aam
mov
fidivrs
es
cmpsb
dec
push
push
mov
lret
ss
fisubs
jp
xor
sarb
ret
xchg
cmpsb
fwait
imulb
movzwl
stos
leave
dec
repnz
in
sub
inc
dec
dec
scas
mov
pop
mov
stc
in
or
jae
add
cmp
mov
lcall
adc
ss
push
outsb
pop
out
and
shrl
jge
insl
es
pop
ds
fwait
xor
decl
cmc
cmp
pop
push
or
fisttpl
test
call
mov
mov
mov
or
je
push
adc
stos
dec
lock
jnp
push
push
test
and
ret
cmp
repnz
insl
popa
std
jns
loopne
cmp
ljmp
xchg
dec
mov
mull
sbb
shlb
push
jae
nop
fs
mov
subb
jno
loop
inc
push
gs
cld
mov
mov
pop
xor
in
add
mov
clc
mov
mov
mov
pop
into
pop
push
pushl
push
lret
pop
jg
fldenv
shll
mov
dec
fidivrl
sub
cltd
xor
xchg
mov
cmp
add
in
loopne
mov
fcompl
fwait
jb
fnsave
cmp
jo
push
cli
movsl
pushl
mov
ja
pusha
xchg
jne
jnp
inc
jnp
pop
mov
andl
mov
jl
rclb
sahf
jl
or
mov
xchg
mov
cmpsl
out
xchg
sbb
or
lcall
je
mov
sti
xor
mov
movsl
and
je
aaa
push
xor
fisubrs
cltd
or
jg
mov
pop
popa
cmpsb
lods
mov
mov
mov
sub
lahf
cmp
inc
pushl
mov
sub
inc
dec
into
ja
pop
mov
shlb
pop
pushf
inc
aas
push
add
arpl
mov
ljmp
ficomps
daa
insb
pop
add
pop
insl
push
adc
push
loopne
cwtl
sub
cmp
cmp
movsb
repz
xchg
icebp
int
fsubr
outsb
fnstenv
and
sbb
mov
inc
adc
push
xchg
and
das
xor
mov
lods
hlt
mov
mov
pop
mov
ret
cld
jp
push
inc
push
sbb
repz
xor
add
jg
hlt
or
outsl
xchg
gs
cmp
test
shll
in
dec
ja
xchg
lret
pop
ret
pushf
jno
stos
out
pop
sub
mov
fdivrs
mov
jae
test
ds
sub
jb
mov
stos
mov
lock
mov
mov
xchg
jle
out
int3
in
mov
adc
cmpsb
sub
lahf
push
xchg
in
roll
mov
out
xchg
test
jmp
dec
inc
shlb
mov
imul
sbb
mov
jbe
xchg
std
test
imul
fldcw
lds
out
jle
mov
dec
pop
andl
bound
test
mov
daa
sub
sub
je
xor
add
inc
insl
insl
hlt
sbb
lahf
subl
pop
push
dec
and
pop
or
daa
rorb
cld
std
add
insl
push
and
sbb
popa
xchg
adc
fs
xchg
xchg
jecxz
mov
adc
repnz
incb
adc
lods
xor
adc
lock
and
jl
cmc
in
std
push
adc
xor
inc
lods
fdivl
jmp
xchg
jg
adc
cmp
or
xchg
call
cmpsl
sub
pop
adc
jns
mov
pushf
add
outsl
add
sub
imul
pop
or
mov
lock
and
add
jle
push
insb
sub
sub
in
out
or
ds
ljmp
sub
pop
shrl
adc
loopne
fisttpll
int
inc
pop
jae
fstps
js
cmp
test
jno
cs
mov
push
adcb
popa
inc
lods
pop
add
testb
jns
jp
jb
das
pushf
call
out
and
pop
test
nop
inc
push
out
loop
or
int
sti
sti
fnstsw
dec
or
mov
lea
mov
adc
fs
or
mov
and
push
cld
or
je
les
lods
and
fstl
mov
push
repnz
jb
and
add
xor
pop
cwtl
int3
cmp
jbe
lcall
jne
scas
inc
pop
enter
les
call
push
es
jb
pop
pop
add
push
hlt
sub
jmp
pop
pop
rcr
push
and
stos
jp
movswl
outsl
scas
sub
mov
sbb
inc
dec
cwtl
ss
xchg
push
and
inc
dec
stc
cmp
cmpsb
imul
movl
push
jno
les
mov
push
cmpsl
pop
lcall
push
aaa
jb
ret
aam
mov
jbe
leave
dec
nop
xlat
mov
sub
fwait
mov
push
sub
jecxz
mov
sub
leave
jae
repnz
mov
aad
in
fwait
out
lret
sbb
xchg
mov
mov
jl
cmp
add
scas
xor
sti
push
xchg
sub
jle
lret
push
inc
mov
mov
sbb
or
sub
fisttpl
mov
leave
pushf
int
and
pop
sbb
add
mov
lret
cs
int3
cmp
jns
lds
cmpsb
push
adc
test
sub
pop
sub
pop
addr16
ljmp
aaa
lcall
dec
adcl
sbb
lcall
add
pop
pop
mov
add
fisttpl
xor
stc
aas
js
dec
aam
jp
xchg
lret
adcl
outsb
out
fimull
mov
mov
aas
mov
stos
fisttps
je
lea
test
gs
clc
into
or
lods
xchg
aas
fildll
loopne
and
scas
xchg
loope
mov
lret
test
pop
fwait
dec
stos
movsl
inc
xchg
mov
js
lret
jmp
push
dec
and
dec
pusha
add
popf
jle
outsl
jne
sbb
ret
scas
ljmp
sbb
xchg
mov
movsl
inc
mov
pop
mov
cmp
sbb
push
xchg
mov
nop
mov
int3
push
jae
ret
std
mov
mov
jbe
mov
mov
mov
adc
jge
mov
cmp
push
sbb
dec
and
xchg
xor
test
xchg
out
sub
iret
into
mov
and
fcmovne
xor
int3
xor
adc
cmc
cmpsb
test
push
push
add
or
icebp
adc
aad
sbb
test
ljmp
std
mov
push
out
pop
xlat
pop
and
xchg
repz
jnp
adc
les
sar
pop
push
or
addb
sbb
mov
add
mov
jbe
int
rcll
cmp
inc
lret
jecxz
mov
cmp
pop
pop
js
pushf
jp
mov
idivl
dec
fisubs
js
addr16
jmp
xchg
mov
icebp
and
push
je
enter
mov
aam
xchg
jne
xor
push
pop
or
xchg
adc
jmp
inc
inc
xchg
xor
add
mov
jae
fcompl
dec
jns
dec
daa
test
bound
mov
and
mov
adc
push
add
xchg
mov
pop
dec
add
add
test
push
pop
lods
insl
adc
adc
dec
fsubrs
lcall
xchg
push
mull
push
cmpsb
mov
mov
aaa
pop
sbb
mov
lds
sqrtps
jp
sbb
dec
scas
neg
push
cwtl
adc
sbb
iret
xlat
xchg
leave
das
out
mov
and
adc
jle
add
adc
fs
xchg
mov
add
adc
movsb
out
test
testb
jae
add
scas
add
mov
sub
call
mov
shlb
hlt
ret
xchg
xchg
fcmovnbe
mov
je
stos
stos
jecxz
pop
add
mov
outsb
out
fdivrl
sti
push
cmp
or
movsl
jg
ja
and
push
push
inc
pop
sti
mov
sahf
pop
movsb
ljmp
or
cmpsb
fs
movsl
inc
adc
or
jnp
ja
dec
jecxz
mov
mov
insl
fbstp
pop
mov
cmpsb
daa
jl
cmp
or
lcall
xchg
loope
sbb
xchg
cmp
or
loop
push
sahf
mov
mov
test
fstl
jae
xlat
cmc
and
add
and
mov
add
das
mov
and
movsl
xor
jnp
sbb
add
lods
inc
xchg
jb
lea
cmp
inc
mov
stos
add
inc
lock
inc
sbb
bound
rorl
sub
arpl
mov
repz
out
and
je
sbb
fs
mov
push
push
js
sbb
cmp
and
icebp
out
and
jbe
xor
xchg
test
xchg
inc
mov
xor
xchg
cmc
sub
mov
inc
cmpl
addb
scas
xchg
cltd
lds
push
out
sti
sbb
test
sbb
and
sub
jne
pop
or
mov
fisubrl
mull
jmp
xor
movl
push
cwtl
mov
dec
test
mov
sub
das
sbb
xor
mov
dec
xor
mov
mull
jle
js
fs
mov
into
push
adcl
adc
xchg
rclb
add
in
mov
mov
cmp
jmp
sub
sbb
shl
jb
push
into
out
and
addr16
xchg
arpl
inc
jle
roll
sub
inc
ficompl
imul
push
sti
shrl
push
arpl
dec
xchg
jae
aas
xor
nop
daa
mov
cmp
shlb
fnstsw
xchg
push
or
push
mov
jns
jmp
mov
mov
xor
jne
sbb
test
jne
jle
insb
mov
or
ds
test
mov
mov
outsl
call
gs
xor
pop
in
mov
or
sbb
mov
push
jl
sub
sbb
in
addb
xchg
add
stos
int3
sbb
gs
dec
mov
add
jb
adc
sub
pop
adc
loope
fidivrs
cs
rorl
fucomp
xchg
jle
scas
ret
icebp
mov
mov
inc
outsl
jns
lock
out
aam
dec
mov
ss
sahf
sti
out
push
clc
into
jle
inc
aas
stc
adc
push
adc
jl
mov
lahf
push
int3
test
push
fs
loop
mov
jge
dec
int3
insl
repz
cmpb
lods
call
insl
in
sub
mov
pusha
enter
aad
int3
push
and
cmpsl
jmp
test
pop
lahf
std
leave
aas
stc
cwtl
in
add
inc
mov
dec
lods
fsubp
mov
lea
jecxz
sbb
pop
loopne
movsb
stos
inc
stos
shlb
insl
xlat
push
mov
push
out
push
mov
cmpsl
push
arpl
cmpsl
and
push
inc
mov
or
test
pop
mov
mov
sbb
addr16
jne
popf
adc
inc
inc
jns
bound
in
in
pop
repz
jnp
fmuls
jl
call
jle
xchg
enter
popa
jmp
aaa
pop
test
cmpsb
js
dec
pop
test
push
stos
icebp
and
mov
rclb
adc
dec
out
insl
in
inc
dec
or
in
jp
mov
stos
cltd
pop
xchg
mov
cmpsb
gs
lret
cmp
or
push
jl
outsb
jg
call
scas
lcall
lds
imul
push
out
mov
out
fwait
outsl
addr16
cli
jb
mov
hlt
dec
fcmovbe
inc
dec
fcomps
xchg
xor
adcl
loop
mov
cmpsb
jno
push
sbb
pop
fldl
in
filds
adcl
xlat
repz
jns
mov
fsubr
xchg
loope
inc
arpl
movl
jne
jno
mov
xlat
sbb
xchg
loopne
fldcw
push
inc
loop
std
jne
jl
inc
test
movsl
stos
jmp
mov
mov
stc
and
dec
fldenv
cs
pushf
mov
or
insb
jne
mov
jle
test
inc
sti
pop
push
adc
pop
push
pop
das
jno
push
sbb
cwtl
cmpsl
jnp
ficompl
out
fidivrl
pop
xchg
sbb
call
rcr
push
push
pop
lods
hlt
push
xor
sub
adc
adc
pusha
cmpsl
push
into
ret
xchg
imul
arpl
test
fistpll
mov
jmp
or
push
cs
sarl
ret
push
pushf
and
std
gs
jp
rol
pop
imul
repz
pushf
mov
cmpsb
push
fists
jmp
and
hlt
mov
rcrb
push
sub
out
je
sbb
mov
lahf
jno
and
pop
mov
jp
repnz
jno
cwtl
or
sbb
or
add
orb
subb
loop
mov
xchg
inc
lods
dec
test
cltd
dec
sti
lock
cmp
xor
adc
sub
scas
gs
js
insl
movd
pop
test
out
lods
shrb
jg
sub
lret
call
mov
inc
fwait
cmp
dec
outsb
cmp
daa
cs
dec
jge
cmp
mov
mov
negl
lock
jg,pt
push
out
ljmp
dec
pop
call
jecxz
repnz
daa
cli
icebp
pop
adc
push
inc
xchg
outsl
push
mov
push
and
jg
clc
aam
push
jb
pop
inc
aaa
jne
dec
xchg
jp
or
xchg
fbld
arpl
mov
int
ss
push
int3
jecxz
adc
cmp
adc
icebp
mov
inc
xor
jge
shrb
inc
push
bound
pop
jnp
stc
int3
cmp
mov
sub
add
lret
popl
cmc
fmul
jl
push
mov
cmp
sub
js
cwtl
push
mov
add
mov
mov
rcr
pop
popf
inc
in
inc
test
gs
add
rclb
jo
xchg
xlat
int
xchg
je
ja
xchg
aaa
sarl
rcll
mov
jno
nop
in
dec
aas
arpl
jo
adc
andb
sbb
iret
inc
dec
push
popa
mov
push
xchg
push
mov
push
push
lds
sti
sarw
cmpsl
mov
xchg
xorl
cmc
pop
sbb
inc
jge
cmp
shll
out
cmpsb
jbe
test
xor
push
pop
popf
lds
xor
dec
loope
into
or
addr16
fimull
dec
push
and
fisttpll
aas
or
xor
ds
and
inc
adc
push
arpl
jns
int3
dec
fstpl
stos
mov
mov
inc
mov
xchg
fstps
push
ret
leave
lea
jb
push
cmp
stc
out
addb
sahf
mov
mov
xchg
jnp
sub
pop
movsb
add
xor
and
test
popa
fsubrs
shrl
lods
and
negl
cmp
pop
jnp
jge
mov
notl
jnp
xor
repnz
sar
les
imul
push
pop
mov
stc
lahf
pop
sbb
mov
mov
movsb
das
jge
cltd
or
gs
rorb
or
xor
cli
pop
cmp
out
fildl
rol
dec
xor
sbb
ss
jne
sub
or
and
cli
mov
cmpsl
imull
inc
jo
dec
cmp
cmp
int
je
sbb
aas
pop
dec
lods
lods
test
mov
jb
sbb
or
stc
and
jmp
jae
outsl
xchg
sub
sbb
dec
xchg
pushf
lret
ja
out
cmp
je
pusha
push
jns
sarl
mov
sub
xchg
and
insb
cmp
add
mov
cmp
pop
neg
insl
adc
fwait
je
nop
sub
test
pmaxsw
in
cwtl
cli
inc
bound
data16
cmp
test
add
xchg
xor
data16
scas
xchg
mov
jmp
stos
or
cmp
bound
je
add
imul
cmp
std
pop
or
and
sbb
inc
jl
mov
pop
mov
ret
lret
xor
or
fimuls
ffree
outsb
leave
mov
leave
sahf
pop
inc
repz
sbb
insb
leave
inc
dec
lret
dec
sarl
daa
outsb
lret
cwtl
subb
cli
fs
sbb
mov
outsb
lcall
lahf
cmpsb
push
push
fs
std
ss
aas
out
push
andb
addr16
or
xchg
xor
or
out
sub
pusha
push
aaa
std
inc
jg
inc
sub
fdivrs
filds
push
cltd
cwtl
insb
out
add
adc
pop
or
testb
call
push
addr16
mov
mov
cmp
gs
dec
xor
or
mov
or
fstl
out
test
popa
popa
sub
push
xor
clc
divb
loopne
out
and
jle
aad
aam
sub
sub
mulb
mov
pop
scas
mov
adc
mov
push
inc
inc
push
sbb
shll
cmpsb
scas
fdivr
fistps
sti
inc
out
popa
xor
aaa
xchg
pop
mov
jl
push
sar
push
and
pop
add
inc
inc
mov
hlt
pop
inc
jb
inc
ret
and
jns
insb
movsl
nop
mov
xlat
aam
scas
fwait
add
out
inc
jbe
rcl
mov
test
imul
inc
mov
pop
addb
add
pop
xor
add
xor
je
xchg
inc
mov
xchg
xor
mov
mov
or
mov
in
add
icebp
or
xlat
testl
insl
mov
cmp
fcmovbe
push
repnz
mov
dec
xchg
push
cld
divb
arpl
icebp
ss
dec
dec
cli
jno
rolb
pop
xchg
xchg
hlt
cmp
jmp
mov
mov
lods
pop
rcll
fsubs
xchg
imul
add
loopne
stc
sti
jae
inc
lret
mov
pushf
pop
xor
and
repz
icebp
dec
ja
addr16
pop
xor
cmp
orl
mov
movsl
icebp
cs
sahf
dec
jno
lret
cmpb
les
pop
mov
mov
es
sbb
repnz
daa
daa
sbb
jns
push
xorb
jp
jb
imul
stos
inc
xor
fdivl
jmp
stc
dec
or
dec
cmp
imul
mov
sbb
sub
add
fstpt
fidivrl
insl
outsb
mov
jae
lcall
cmp
adcl
arpl
rcr
fiaddl
cmc
mov
mov
mov
push
sub
sub
lods
sub
std
xor
sbb
mov
dec
pop
mov
es
addb
mov
add
pusha
adc
stc
inc
loopne
arpl
mov
test
jge
xchg
gs
fwait
into
clc
js
js
rolb
mov
fildll
mov
movsb
add
fcoms
lcall
sbb
nop
jge
daa
mov
pop
js
mov
jl
shlb
push
leave
sti
mov
nop
ret
push
and
dec
adc
cs
dec
loope
notb
add
ret
int3
sti
cmp
push
pushf
test
adc
int
mov
pop
bt
js
movsb
ficoms
mov
movsb
sbb
cmovle
jge
sbb
cmpsl
sbb
fcomp
decl
setne
cmp
pop
lods
inc
lahf
and
cltd
pop
cmp
in
std
xchg
xchg
mov
sub
out
push
add
idivl
push
jg
sub
out
jns
mov
scas
ret
and
inc
fs
add
jmp
dec
ds
push
aaa
cmp
loopne
mov
jecxz
insl
xchg
ljmp
lcall
les
jmp
int
aam
xlat
mov
cmp
mov
lea
dec
fisubs
adcb
inc
adc
lea
andl
or
jl
ljmp
xor
adc
sub
sub
rolb
cmp
lret
leave
push
or
fstl
add
sbb
xchg
stc
cmp
fwait
sub
lods
js
repz
mov
in
pop
test
dec
imul
inc
popa
pop
icebp
orl
pop
adc
ljmp
sbb
lods
inc
leave
push
xor
mov
add
and
lods
xor
cmpsb
inc
mov
cmpsb
jne
rdtsc
push
push
outsl
scas
aam
ret
pop
scas
sbb
stc
xchg
pop
add
mov
or
and
fstl
lahf
add
pop
lahf
mov
xchg
mov
mov
mov
or
nop
and
lret
add
lock
xor
sti
pop
cmp
ljmp
or
movsl
jge
push
mov
pop
lret
divb
cmc
pop
iret
jo
adc
out
add
hlt
jb
add
sbb
mov
lock
xor
jo
xor
jns
xor
lcall
inc
push
pop
frstpm(287
sub
out
fiaddl
adc
adc
test
lret
in
cmpsl
into
movups
ljmp
and
cwtl
pop
mov
pop
push
jmp
add
mov
inc
mov
stos
jecxz
pop
and
test
push
dec
push
jbe
mov
mov
push
push
daa
pop
jb
int
scas
int3
cltd
jecxz
inc
fiadds
movsb
dec
xchg
test
outsl
cmp
add
in
loope
ret
lret
xor
loope
cmc
inc
lods
fimull
xor
cltd
ljmp
aam
std
mov
mov
xlat
cmp
pop
inc
test
ja
mov
movsl
addr16
test
push
jg
stos
xlat
cmp
xchg
loope
jge
jg
std
mov
pusha
mov
push
icebp
pop
aad
clc
add
les
mov
mov
lcall
xchg
sub
rclb
xchg
push
rol
pushf
sub
xchg
or
pusha
rol
mov
ja
mov
enter
mov
out
jne
add
sub
adc
decl
push
push
arpl
sahf
pop
mov
mov
xor
lret
push
hlt
push
or
add
mov
pop
int3
push
cli
push
hlt
pop
lret
jo
push
loop
lahf
mov
dec
into
fwait
push
xchg
and
out
lds
test
mov
fistpll
inc
mov
out
insb
or
repnz
sbb
aas
push
pop
scas
mov
add
add
clc
cli
xor
repnz
in
imul
fcomps
push
les
cmpsl
movsb
and
push
pusha
jmp
je
repnz
sbb
jno
cmp
les
sti
sbb
mov
lods
mov
push
inc
sub
divb
insb
cmovs
inc
pop
cmpsl
sub
ret
sbb
pop
ja
fadds
inc
jne
aas
data16
testl
mov
dec
push
mov
mov
xchg
sub
sub
fistpl
mov
sub
mov
or
std
or
xlat
mov
int3
aas
add
sbb
mov
cs
popf
movsl
data16
push
push
pushf
sahf
pop
aam
in
sahf
jl
in
push
data16
pusha
clc
push
shrb
xchg
outsl
xorl
dec
fists
int3
sti
sub
div
addr16
add
mov
es
sub
mov
fs
adc
pushf
xchg
xor
jge
ja
push
rorl
lods
inc
mov
dec
scas
out
xchg
insl
lods
call
rorb
xchg
xchg
or
movl
ds
ficoml
pushf
hlt
or
or
ret
lods
aas
jmp
or
bound
jmp
mov
xchg
adcb
push
jp
sub
fs
or
je
mov
dec
pop
add
xchg
inc
sti
sahf
mov
xchg
rcrb
insl
xchg
fwait
xchg
mov
mov
insl
ror
jp
mov
scas
hlt
outsb
int
xchg
es
jnp
mov
jl
loopne
mov
mov
mov
push
addb
ret
popl
mov
mov
jmp
jno
adc
bswap
pop
xlat
mov
ja
jbe
xor
xor
arpl
mov
jmp
mov
dec
or
sub
inc
bswap
sbb
mov
xchg
rcll
test
inc
lret
out
xchg
lret
and
xchg
jnp
xchg
stos
jne
gs
pop
cld
mov
mov
sub
pop
outsb
xchg
cli
cld
icebp
push
pop
cwtl
sbb
std
loopne
fisttpll
lahf
mov
or
cmpl
fiaddl
xor
xchg
out
cmp
dec
repz
push
adc
scas
scas
add
add
in
pop
push
push
push
mov
lret
jg
aas
andb
xchg
and
push
out
movq
or
sahf
aad
lock
inc
sub
inc
mov
shlb
adc
movsb
stos
mov
sbb
iret
in
test
repz
scas
inc
pop
and
sti
cmp
push
jl
sub
gs
das
xchg
inc
lock
test
mov
and
mov
test
test
sti
mov
mov
fiadds
or
enter
out
orb
scas
call
inc
xchg
idiv
rcrl
fisubs
stos
popl
pop
jae
mov
pop
xor
jo
inc
test
mov
push
imul
jp
out
popf
pusha
inc
loop
out
sub
push
lcall
and
xrelease
lret
push
add
sub
mov
hlt
jmp
adc
loop
and
movsb
mov
loope
leave
das
dec
pop
add
fidivl
gs
movsl
aad
xchg
sub
dec
jb
lret
fs
pop
or
stos
jl
xor
aad
in
and
mov
aaa
orb
mov
dec
jns
js
xor
xchg
call
daa
cmpl
dec
mov
inc
adc
sub
cmp
cs
mov
stc
and
inc
sub
gs
mov
rorl
mov
or
loopne
cltd
or
mov
flds
enter
outsl
cltd
in
stc
aam
stos
enter
lods
inc
xlat
ljmp
xchg
push
dec
cmp
rorb
adc
cmpb
or
es
lcall
sti
xor
jne
sub
out
dec
test
aas
mov
adc
pushf
lcall
pop
incb
mov
cmp
push
ja
or
mov
jnp
stos
mov
out
mov
mov
push
jecxz
outsl
pop
lods
mov
sbbl
pop
xchg
rcrb
and
fildll
nop
cmp
pop
popa
or
dec
cli
ss
pop
lcall
push
xchg
pop
imul
jle
push
dec
mov
xlat
push
ficoms
ss
push
xor
mov
pop
xchg
xor
pop
mov
sbb
loop
sub
ljmp
add
cmc
call
jo
shrb
insl
fsubs
push
or
adc
jp
pop
add
lea
aad
or
xchg
dec
clc
fstpl
jns
jmp
cltd
pop
icebp
in
xor
insb
sub
or
add
add
lock
mov
mov
cmp
paddq
insb
xchg
xchg
xchg
data16
jmp
bound
shrb
lret
ja
jp
add
xchg
mov
outsb
out
icebp
add
or
sarl
shr
movsl
mov
rol
mov
sbb
das
aad
in
rol
add
or
addr16
cltd
xchg
insb
xor
rorb
or
push
adc
loop
mov
stos
add
mov
ret
dec
jecxz
repz
lret
jo
ja
push
push
or
add
hlt
jmp
sti
je
in
cwtl
stos
jge
jns
icebp
das
jns
gs
sbb
mov
mov
repnz
aas
pandn
in
aam
dec
push
ret
int
mov
mov
testb
or
in
xchg
adc
jnp
call
xchg
lock
jle
sbb
shlb
xor
mov
xchg
jge
imul
mov
mov
cmp
inc
push
cmp
and
test
xor
in
or
adc
sbb
cmp
pop
adc
sub
enter
mov
outsb
jnp
dec
cmp
jge
sbb
addb
and
sbb
jnp
sbb
dec
adc
dec
into
inc
dec
sbb
inc
mulb
scas
sbb
pop
je
jl
or
movsb
or
push
fs
xchg
test
sbb
insl
popa
popl
or
mov
cltd
mov
xchg
and
dec
and
bound
jmp
xchg
movsb
add
pop
les
addb
pop
lods
sub
sub
sbb
lcall
push
insb
push
nop
loope
nop
fistpll
pop
pop
xchg
or
push
fwait
jp
push
mov
aaa
icebp
and
jne
int3
rcll
lret
jmp
testl
int3
nop
mov
ret
fldt
fdivl
mov
ljmp
cltd
lock
bound
xchg
test
cli
repnz
jne
dec
jo
dec
iret
lock
cltd
js
jno
mov
cmc
loopne
stc
dec
add
pusha
icebp
cld
add
cmp
sahf
cld
lods
cli
xchg
cmp
movb
out
lea
rcrb
add
inc
inc
mov
push
sbb
call
jbe
inc
fiadds
call
jo
xor
les
dec
push
or
xchg
xchg
xlat
push
push
lods
ja
mov
adc
rep
gs
aam
addr16
loope
lds
sub
mov
jns
mov
sub
daa
psubw
pushf
jl
xchg
mov
mov
add
cmp
push
pop
adcb
pop
cmpsb
lods
icebp
push
inc
jae
cmc
cmc
out
xchg
cmc
pop
idivb
mov
xchg
call
aam
icebp
je
fisttps
mov
in
and
in
pop
mov
cmp
rclb
push
pop
pushf
or
push
push
xchg
inc
mov
out
or
clc
xorl
cmp
push
pop
insl
mov
test
or
push
fwait
dec
push
xor
xchg
pushf
jle
sub
adcl
or
pusha
test
mov
mov
das
or
or
cli
dec
sbb
or
sub
fisubl
adc
nop
adc
iret
xchg
dec
cmp
dec
inc
jmp
dec
into
fld
push
mov
pop
sbb
adc
js
pusha
enter
lock
dec
xor
out
sub
inc
push
bound
and
or
mov
scas
mov
popf
out
push
mov
loopne
add
or
int
xor
mov
loope
bound
loope
sbb
imul
pop
or
mull
mov
and
test
or
adc
scas
xchg
cltd
pop
xchg
or
daa
lahf
iret
jo
clc
push
rolb
ret
insl
sub
aam
cwtl
test
por
dec
inc
negl
mov
lea
out
mov
pop
cmpsl
add
xlat
mov
int
lds
sti
and
fidivrs
stc
scas
sbb
cli
out
stos
xor
push
lods
bnd
insb
lcall
mov
in
sarl
or
int
lret
jbe
addr16
xchg
lret
mov
in
sub
sub
ljmp
aad
test
aad
or
call
xor
fisttpll
subl
jo
test
mov
out
fwait
cmp
inc
add
addl
loop
mov
hlt
or
add
shlb
sti
xor
push
dec
repz
fcomip
test
nop
addr16
enter
sbb
stc
dec
fsubl
pop
gs
shll
shr
mov
mov
pop
jge
add
jg
mul
loop
arpl
xchg
popf
ds
ja
mov
in
jecxz
pushf
ja
repz
xchg
rorb
push
jns
mov
fmull
pop
adcl
gs
cmp
pop
adc
pushl
mov
and
divl
sbb
push
sbb
mov
mov
inc
loop
aas
pop
imul
in
push
shlb
sbb
xchg
pop
cmp
jno
xchg
dec
test
outsl
dec
int
fistpl
mov
xlat
iret
inc
sbb
in
test
mov
repnz
lcall
xchg
jg
out
rcr
in
cs
jo
push
push
inc
lahf
push
lds
or
std
divl
adc
inc
fwait
mov
jae
xchg
mov
dec
mov
add
fsubrl
push
lods
push
inc
stc
mov
pushf
xchg
jb
cwtl
pop
lahf
cld
push
bound
pop
xor
hlt
mov
jnp
lods
hlt
xchg
add
and
loope
pop
inc
add
enter
std
lods
push
mov
lds
pusha
mov
inc
mov
sub
fisubrl
in
mov
pop
cmp
nop
scas
in
mov
in
stc
pop
mov
je
ret
fdivl
jae
lods
fdivl
xchg
je
sarb
insl
shll
cmpsb
or
jg
scas
aaa
lods
out
dec
insl
ud0
mov
cmp
mov
sub
pop
rorl
push
pop
and
popa
bound
repnz
xchg
pop
imul
jle
jb
lods
sub
mov
orb
xchg
pop
shll
not
in
imul
jno
cmp
mov
pop
sarl
loope
test
pop
daa
mov
repz
pop
fists
add
jecxz
jle
mov
pop
out
icebp
mov
mov
mov
pop
sub
jge
mov
cwtl
push
xlat
cmp
jle
jo
sub
call
mov
xor
les
test
shll
cmp
insb
lcall
int
cmpsl
std
sti
dec
lar
je
loop
ret
pop
push
xlat
lock
cs
adc
mov
add
mov
sbb
jmp
and
fs
ss
fwait
leave
inc
add
insb
ss
clc
fwait
shrb
dec
xor
jbe
dec
dec
xor
inc
pop
mov
dec
enter
inc
dec
pushl
jmp
popa
jg
in
cmp
adc
inc
testl
jns
ret
pop
pop
jmp
jp
fldt
inc
mov
fmulp
dec
sbb
mov
jb
sarb
fbstp
pusha
out
out
dec
mov
and
or
mov
into
fbstp
int3
dec
cs
mov
hlt
orb
jno
cmp
push
orb
pop
sbb
mov
lcall
xchg
pop
sbb
mov
mov
or
or
or
mov
pop
imul
add
dec
push
sbb
sbb
xchg
mov
cwtl
das
dec
clc
pop
add
movsb
fdivs
sarb
outsl
aas
aaa
push
jmp
push
mov
lcall
mov
test
and
xor
mov
testb
sbb
scas
test
dec
pop
popa
adc
lcall
sbb
dec
adc
inc
das
cmpsb
jns
outsb
std
fistl
dec
std
or
dec
lods
and
push
outsb
fs
sarl
andl
mov
mov
mov
mov
inc
adc
subl
icebp
mov
out
xchg
lods
add
sbb
mov
adc
mov
adc
mov
inc
and
add
mov
inc
sub
insb
and
mov
lret
divl
cmp
cmp
xor
xchg
frstor
les
adc
push
fadds
mov
stos
imul
xchg
loope
jne
es
data16
rcll
mov
push
mov
push
mov
repz
es
iret
ret
ljmp
add
inc
jmp
mov
je
jmp
setg
sbb
pop
rorb
jmp
add
fadd
sbb
xchg
add
insl
jae
push
lret
popa
adc
cmp
imul
out
rcrb
xchg
stc
cmp
mov
cmpsb
push
sbb
mov
jp
sub
andl
jmp
sbb
lock
test
fdivl
sbbl
xor
js
jp
jmp
xchg
aaa
pop
cs
dec
mov
in
subl
sub
stos
mov
add
add
adc
cli
jmp
jecxz
mov
fs
dec
jno
sub
scas
mov
lock
js
and
dec
inc
xor
or
out
jne
rcll
loope
scas
mov
pop
jp
inc
sbb
scas
mov
sbb
call
pop
mov
mov
in
add
cmp
std
inc
and
cmpsl
js
ljmp
pop
push
push
stos
scas
lds
movsl
inc
add
mov
std
add
cmpsl
divl
fstps
inc
mov
sub
jl
or
mov
mov
insb
and
cmp
enter
nop
ret
cmpsb
mov
testb
ss
jb
sub
jae
pop
fwait
inc
and
das
filds
mov
and
mov
pop
pop
jnp
and
cmp
cmp
xlat
mov
icebp
adc
xchg
pop
xor
adc
out
sbb
sahf
sub
faddl
inc
mov
pop
sti
xchg
rorl
sbb
sbb
cltd
adcl
cmpsl
mov
mov
loope
js
push
gs
mov
orb
insb
sbb
repz
roll
jmp
lea
iret
mov
into
jg
arpl
jns
inc
push
cmpsb
pusha
out
and
xor
and
inc
adc
jle
lcall
in
fnop
xorl
rcr
popf
lret
add
sbb
or
mov
fxch
and
cmp
pushf
xchg
fimull
dec
test
xor
and
aaa
mov
push
sahf
in
add
nop
inc
lret
test
sbb
push
jns
enter
mov
cmc
xor
mov
mov
adc
add
into
out
sbb
or
inc
or
out
xchg
pop
lret
cmpsb
sub
and
sbb
fsubp
xor
pop
sub
pop
subb
xor
mov
scas
rorb
inc
mov
out
ds
repz
sub
jnp
pop
dec
pop
fnstsw
adc
jecxz
scas
leave
rorl
fcompl
fistl
adc
gs
pop
push
push
lds
ja
mov
test
fimull
mov
aad
and
add
push
sub
out
push
xor
cmp
sti
stos
fbstp
push
dec
cmp
lods
insl
fstp
mov
imul
fsubl
mov
hlt
mov
sbb
pop
outsl
gs
or
xchg
adc
dec
jae
sbb
cmp
mov
push
xor
cmp
ljmp
loope
and
fnstcw
mov
inc
jmp
or
push
outsb
es
dec
loop
shrb
fimuls
ljmp
mov
xor
fisubrs
add
popa
jmp
cmc
jle
and
cwtl
repnz
sbb
mov
enter
jg
jnp
jge
das
insl
cmpsb
pop
fists
and
cmp
scas
sbb
cwtl
mov
in
iret
adc
mov
out
mov
xor
pop
push
mov
sub
dec
outsl
iret
lock
push
push
cli
fstpt
repz
add
cli
in
repz
ja
sbb
subl
imul
loop
cmpb
movsb
mov
xor
lods
mov
or
pop
jp
scas
push
addr16
xchg
dec
loope
icebp
repnz
das
xor
dec
sub
mov
jns
aas
inc
negl
fildll
int
sahf
sub
sbb
ljmp
lods
mov
push
out
mov
out
loopne
or
inc
add
cmp
add
icebp
lods
xchg
dec
fbld
fdivs
pop
shlb
pop
dec
sbb
roll
iretw
inc
ss
ret
lcall
jle
mov
dec
xchg
xor
jecxz
mov
fisttpll
shll
sub
cmp
jle
adc
dec
mov
mov
adc
sti
push
jbe,pn
mov
jmp
add
dec
mov
insb
ror
pop
inc
fldl
fucomp
pushf
in
repnz
push
dec
push
mov
fsubp
jne
shr
jl
aaa
push
add
xor
scas
mov
arpl
push
cmpsl
mov
jmp
pushf
es
pop
sbb
inc
add
jo
outsl
jbe
mov
ljmp
or
lahf
hlt
icebp
xlat
push
mov
or
adc
sub
push
mov
lret
mov
or
or
shl
sarb
sub
js
popa
pop
push
imul
into
push
and
mov
push
fnsave
mov
mov
mov
mov
or
and
adc
dec
bound
add
movl
jl
dec
outsl
out
nop
sub
ret
std
leave
out
test
adc
icebp
dec
out
mov
insl
into
rolb
pop
outsl
add
push
mov
dec
push
dec
dec
mov
rcl
enter
xor
push
into
aad
mov
jle
sbb
add
repnz
mov
icebp
cmc
pop
xor
pop
mov
dec
inc
iret
js
add
xchg
cmp
addr16
subb
jmp
cli
push
pop
push
stc
leave
movsl
icebp
movsl
adc
mov
or
cmp
cmc
lds
pushf
outsb
sbb
push
dec
in
test
test
out
mov
fstpt
dec
or
push
push
xor
pop
adc
mov
sahf
out
leave
repz
pop
icebp
lods
lahf
mov
je
mov
fwait
mov
sbb
inc
inc
mov
rclb
aad
call
lods
push
mov
sbb
jecxz
mov
insl
fcoml
push
aas
aaa
adc
out
mov
or
or
out
cmp
insl
inc
and
repnz
cmp
loopne
adc
inc
hlt
mov
fs
popa
filds
cli
rcrl
stos
or
fists
js
jle
inc
pop
rolb
mov
adc
aam
and
lods
aad
cld
ss
mov
sub
dec
pop
in
shll
call
sub
and
or
sarb
fcoml
xchg
or
ficoms
xlat
xbegin
mov
sbb
movsl
inc
inc
mov
aad
sbb
pop
push
or
mov
lcall
push
dec
loopne
fcom
mov
xchg
mov
push
and
cwtl
sahf
jmp
add
lock
ljmp
pop
mov
sub
out
or
push
negl
dec
push
lods
fstps
push
dec
and
adc
lcall
sub
fnstenv
xchg
push
addr16
in
cmp
enter
icebp
mov
inc
or
mov
mov
ds
insl
and
pop
pop
xchg
jnp
cld
pop
scas
rcll
incb
cmpb
push
orl
pop
xor
mov
pusha
xchg
lock
outsl
aam
or
xchg
xchg
pop
mov
and
stc
jmp
pop
xchg
movsl
jmp
dec
cmp
push
push
ret
sahf
dec
pushf
xlat
add
lds
jmp
loopne
shr
ret
faddl
adc
jge
nop
cwtl
ja
cmp
outsl
insb
pop
dec
cmp
push
sti
int
xchg
fwait
sbb
add
negl
sbb
pop
ljmp
into
pop
test
dec
cltd
fsubs
push
xchg
pop
jb
sbb
jbe
xor
mov
inc
sub
jl
push
and
decb
add
xor
or
xorb
pop
push
scas
add
and
xchg
or
pop
clc
arpl
sub
data16
scas
cmp
hlt
and
std
sub
sbb
ret
lds
xor
push
popa
ss
in
xchg
mov
ss
movsl
lret
xor
addb
ret
mov
pusha
mov
js
dec
jo
sub
mov
enter
test
fimull
dec
jmp
jno
cmp
loop
jno
test
jbe
nop
jbe
es
adc
xchg
mov
pusha
jne
xor
cwtl
or
dec
sbb
cmp
sbb
adc
xor
shll
enter
shrb
sahf
mov
cmpsl
jp
sahf
pop
movsb
push
loope
xor
cli
cmpsl
jmp
incl
inc
xlat
aaa
out
mov
xchg
stc
dec
jns
movsl
pop
mov
int3
sub
pop
or
add
call
stc
loopne
ds
mov
ret
or
mov
jae
ljmp
dec
hlt
cwtl
jp
sub
divb
mov
lods
xchg
addr16
fisubrl
pop
mov
pop
dec
or
jo
gs
pushf
std
push
jbe
push
loope
rcrl
fisubs
jnp
cld
outsl
mov
idivl
fbstp
inc
scas
adc
ja
lods
or
pop
cmp
sub
mov
pop
and
mov
cmp
jns
pop
mov
cmc
lock
jge
movsb
push
pop
mov
xor
pusha
push
or
fiadds
xchg
jbe
mov
std
inc
cmpsb
push
lret
cmp
out
sbb
sbb
xchg
mov
clts
add
jae
repz
outsl
push
xor
rclb
fmuls
test
mov
jnp
ja
cld
loop
dec
xchg
sub
xchg
sub
enter
jl
cmpsl
loopne
sub
cwtl
pop
xchg
ret
sbb
lcall
push
loopne
push
popf
sub
or
sub
cmpsl
ror
pusha
cmp
push
into
jo
adc
leave
xchg
adc
loop
mov
mov
and
loopne
scas
push
xor
idivl
add
test
push
and
jnp
iret
mov
idivb
iret
adc
cli
outsl
gs
xor
cmp
pop
pop
out
mov
pop
dec
out
sbb
jno
imul
xchg
test
cmp
test
lcall
out
push
adc
mov
loope
shr
add
gs
call
in
loope
dec
lcall
lods
sub
outsl
call
mov
minps
sbb
mov
mov
repz
jae
shrb
in
mull
mov
std
outsl
sbb
stos
mov
inc
test
or
pop
push
inc
das
data16
push
dec
sbb
adc
in
adc
jl
int3
fst
jge
push
xor
lahf
lds
jl
call
xor
test
cltd
sub
sbb
push
das
mov
aaa
lcall
xor
mov
jns
add
cmpsb
out
mov
sbb
daa
mov
inc
js
adc
insl
push
xor
mov
adc
push
in
jbe
movl
imul
bound
push
lret
cmp
jl
mov
xor
je
xchg
add
pop
pop
icebp
dec
in
ss
jns
movsb
js
xchg
jp
stos
cmp
add
popf
shll
add
aad
fistps
cmpsl
in
sub
add
test
xchg
jns
stos
mov
jnp
hlt
jge
rcll
icebp
and
rcr
por
sub
xchg
insl
mov
mov
push
cvtps2pd
lret
bound
cmc
and
jb
mov
mov
jle
sbb
out
mov
push
mov
or
movsb
jnp
sbb
mov
das
mov
out
inc
push
popa
xchg
mov
jl
sub
or
jmp
push
push
mov
add
xor
push
outsb
dec
test
out
fwait
roll
sahf
stos
cmp
lcall
adc
leave
stc
stc
inc
mov
cmpb
or
stos
jge
inc
add
in
fs
jle
xor
xchg
xchg
cmpsl
scas
or
addr16
xchg
icebp
shll
and
int3
int
pop
mov
pop
adc
cwtl
cmp
pop
in
xchg
into
or
push
icebp
adc
inc
sbb
jne
inc
sbb
inc
xor
push
cmp
mov
idiv
mov
cmp
mov
jp
mov
rorl
pop
je
nop
insl
je
outsb
outsl
jge
or
repnz
fst
mov
cmp
loope
push
mov
cmp
fistl
je
mov
dec
lahf
pop
lds
lret
js
or
xchg
clc
cmp
inc
lcallw
xor
cli
pop
or
mov
inc
xorb
and
mov
pop
dec
xor
outsl
je
mov
sub
push
repnz
sub
mov
push
mov
and
xchg
sub
pop
push
sahf
push
add
sub
mov
add
mov
mov
jge
js
or
jge
dec
ss
cwtl
dec
push
sub
std
fs
pop
popa
pop
jge
cmp
inc
movsl
xchg
aam
inc
insl
push
adc
in
push
mov
sbb
adc
test
shlb
mov
imul
test
mov
xor
mov
add
inc
leave
or
pusha
pushf
into
sbbb
mov
ds
loopne
test
imul
cmpsb
pop
add
jnp
push
xor
adc
jnp
imul
ljmp
cmpl
mov
mov
jnp
dec
push
mov
into
movhps
pop
push
xor
sarl
jns
dec
or
xor
cmc
adc
loope
cwtl
sarb
xor
pushf
pushf
mov
pushf
push
rcr
jmp
popf
insb
lock
inc
in
cmp
dec
sti
sub
and
jge
inc
inc
xlat
incb
push
aam
mov
in
add
mov
xchg
inc
adc
and
push
fstps
std
mov
pop
xchg
cmp
add
fstps
push
pop
pop
adc
ss
enter
mov
mov
sahf
stos
in
mov
leavew
cmpb
stc
sub
xor
inc
fs
sub
mov
int3
push
xor
or
fidivrl
cwtl
mov
inc
push
outsb
push
jecxz
xor
cltd
jno
ljmp
jno
test
jno
test
cmpsb
aad
sub
test
fnstenv
push
push
cli
movsl
es
pop
pop
pop
mov
dec
cmp
push
mov
clc
rolb
stos
add
movsb
xor
sti
mov
addr16
pop
sbb
cs
faddl
sbb
fld
inc
add
aad
add
test
sub
mov
mov
pop
xchg
aas
inc
stc
and
notl
cmp
xchg
ds
cld
cmp
sub
jp
das
outsb
nop
or
mov
sub
jbe
call
cmp
mov
dec
in
test
xchg
aad
inc
icebp
inc
scas
sub
shlb
lock
fwait
pop
fldlg2
cmp
outsb
sbb
aaa
pusha
fnsave
scas
inc
xchg
pop
or
add
push
loopne
mov
popa
dec
xor
shrl
ficoms
subb
dec
movsl
pusha
sbb
xor
rcrl
and
ja
lock
xchg
gs
push
mov
mov
push
pop
xchg
shlb
mov
cmp
dec
mov
ja
xchg
cmpl
and
les
jle
pop
test
push
pop
cmpsl
in
rclb
aas
cmpsl
lahf
sub
dec
jno
outsb
scas
jo
decl
mov
mov
pop
xor
push
adc
fistps
shlb
cmp
cmp
xchg
push
mov
push
mov
js
cli
pop
movsb
pop
xor
call
cmp
mov
mov
push
cwtl
push
or
popa
add
pop
or
hlt
lea
push
sbb
dec
aaa
pop
sbb
popf
jns
outsl
push
pop
xor
in
ret
dec
xor
mov
lods
dec
out
int
jns
or
cmp
dec
add
mov
push
pop
dec
imulb
jmp
xor
icebp
dec
data16
push
sarb
and
push
fdiv
pop
and
jge
add
jmp
imull
cld
xchg
or
mov
sti
andl
mov
pushf
out
cmpsb
jb
mov
lahf
mov
subl
jo
sub
add
imul
or
adcb
push
pop
dec
cltd
xchg
dec
gs
pushf
mov
sub
push
mov
mov
int
sahf
imul
inc
lret
fs
out
mov
inc
out
test
pushf
lock
mov
pop
inc
xorb
in
cmp
xchg
pop
decl
adc
xchg
xchg
mov
push
mov
daa
xor
dec
dec
pop
mov
jp
xlat
movsl
fcoms
cmp
adc
test
jp
mov
adc
jne
and
inc
adc
or
xor
adc
gs
dec
sbb
fnstcw
fimull
xchg
fnstcw
fcmovne
jl
aas
incb
cld
inc
push
fwait
add
arpl
mov
jbe
daa
inc
pushf
flds
adc
repz
and
push
jg
mov
sti
xor
push
jne
clc
lds
pop
repz
xchg
xlat
mov
cmc
mov
and
or
movb
lret
cmp
xchg
push
lock
sub
mov
mov
lret
lods
inc
mov
adc
cld
sbb
cmp
pushf
scas
mov
rolb
jnp
iretw
ret
sbb
xchg
stos
cli
aas
jle
push
adc
adc
in
xchg
jne
outsb
add
push
cmp
jl
shll
cli
adc
sub
mov
shl
push
inc
scas
mov
cmp
insl
leave
in
adc
cmpsl
mov
pop
scas
cmp
popa
mov
cmp
test
mov
scas
setno
inc
out
in
data16
adc
sbb
sbb
cmp
and
loop
adc
cld
adc
subl
push
sub
data16
adc
sub
push
add
mov
loopne
lock
jecxz
lods
mov
cld
repz
lea
pop
xor
movsl
test
cmpsb
pop
add
movsb
mov
push
jmp
push
icebp
mov
fistpll
jge
dec
add
fs
in
xchg
rcrb
dec
jb
sub
xor
or
in
in
cmp
mov
or
cmc
cld
pop
or
cmp
mov
mov
sub
sbb
mov
inc
or
xor
inc
movsb
test
andl
dec
data16
cmp
ret
imul
sbb
pop
add
sbb
ds
sahf
mov
or
cmp
add
push
mov
testl
scas
mov
out
iret
add
cld
negl
mov
jge
push
push
fidivrl
mov
cli
es
dec
in
mov
adc
add
aaa
dec
dec
lcall
in
std
mov
and
test
pop
push
pop
mov
dec
jne
xchg
insl
fstps
out
pop
enter
jl
data16
push
cmp
mov
cmp
inc
aad
mov
insl
outsl
jno
lods
iret
xrelease
insb
in
mov
mov
fs
jae
mov
shrl
xchg
lcall
fnsetpm(287
jns
daa
lods
sub
pop
clc
inc
insl
adc
jmp
mov
adcb
test
pop
ret
jns
cs
and
jne,pt
cmp
fcomp
out
jle
sub
sbb
sub
icebp
mov
push
mov
or
fisttps
push
arpl
mov
int3
xchg
inc
inc
cmp
out
sub
or
dec
xchg
jb
dec
nop
xor
or
mov
xchg
rcrb
rorb
inc
nop
jo
nop
sbb
xchg
out
push
call
jnp
sub
xor
add
iret
and
push
adc
nop
cwtl
mov
jg
retw
popf
in
loope
jbe
mov
shrb
fistpl
daa
mov
mov
inc
sub
push
call
stos
sbb
sti
mov
sub
int
scas
insl
mov
and
xor
dec
add
movsb
xlat
adc
mov
mov
xor
and
or
repz
cli
and
pushf
mov
sbb
jb
fwait
dec
stos
outsl
nop
pushf
sub
ror
sbb
mov
loope
in
pop
sti
sar
cmp
dec
das
je
pushf
cld
add
xchg
imul
or
pushf
iret
lods
fwait
rorb
loopne
in
out
xor
mov
stos
popa
in
mov
popf
ja
loop
jns
adc
and
jb
pop
pop
lret
push
xor
push
and
andl
and
pop
ljmp
cmpsb
xchg
add
fisttpl
inc
mov
out
aas
mov
fldcw
pop
test
lds
loope
nop
pop
and
test
clc
mov
and
test
repz
in
push
addr16
pop
arpl
fs
mov
adc
xor
ret
dec
cmp
int3
mov
cmpsb
cmp
dec
or
mov
push
and
dec
adc
xor
and
add
adc
cld
jge
push
add
cmc
mov
adc
sahf
data16
fnsave
xor
out
inc
sbb
xor
lods
shrb
mov
cli
push
and
xchg
scas
or
mov
mov
mov
loopne
pop
cmp
ja
mov
pop
mov
cmp
mov
inc
cmpsb
push
xchg
or
fdivrs
inc
add
in
lds
loop
aad
fwait
pushf
cmc
dec
push
dec
add
in
cmc
and
pop
jp
fdivp
mov
adc
xor
addr16
push
dec
mov
insb
and
out
addl
mov
int
xlat
fadds
das
adc
loope
mov
cld
leave
into
mov
sbb
pop
out
fsubr
lret
pop
push
negb
test
les
and
shlb
adc
movsw
adc
cli
movsb
sbb
inc
in
je
sbb
out
pop
sbb
lret
cmpsb
xchg
negb
or
or
shlb
imul
ljmp
jbe
in
aas
adc
icebp
adc
jns
mov
jbe
sub
fsubrl
pop
outsl
jns
and
push
popf
ret
leave
cwtl
mov
mov
add
les
pop
dec
pusha
cmp
push
pop
lock
shlb
repnz
mov
imul
sub
push
mov
test
add
pushf
push
fadds
sub
iret
faddl
xchg
jle
sub
jns
mov
mov
adc
insl
cmpb
cli
je
jno
fsts
jns
xchg
stos
jo
mov
push
pop
mov
xchg
dec
popf
dec
dec
add
push
cmpsl
jmp
mov
xchg
cmp
add
pop
bound
test
sbb
inc
jp
es
lods
outsl
or
lret
pop
mov
add
inc
lahf
adc
pop
dec
xor
xchg
jl
mov
jae
xlat
pop
pop
cld
das
jnp
lea
jno
insl
and
mov
mov
bound
loopne
lahf
dec
daa
into
mov
lods
jnp
mov
jl
adc
test
mov
xchg
cmc
jbe
and
fcmovnbe
push
add
das
cmpsb
sbb
jne
mov
sub
sbb
push
xchg
mov
insb
pop
test
imul
adc
aad
push
fwait
push
loop
push
adc
fnstcw
xchg
adc
jb
out
repnz
pop
dec
mov
mov
jns
ds
lcall
fnsave
loope
fadd
xchg
xchg
or
sbb
jmp
mov
insb
out
sbb
jb
shrl
insl
sub
add
mov
ja
orl
stc
jge
mov
mov
pop
outsb
lock
orl
fldl2e
lea
pop
jbe
subb
subl
shll
aad
inc
lret
ret
shlb
or
in
jg
stc
xchg
sbb
cmpsb
inc
sbbb
gs
lcall
aad
adc
sbb
aaa
xor
mov
nop
aas
popf
xchg
pusha
xlat
sbb
mov
daa
adcb
mov
jno
jmp
out
ret
cwtl
push
out
insb
xchg
fdivr
repnz
fdivrl
je
mov
dec
dec
pop
jge
add
xor
jnp
cmp
mov
arpl
inc
insb
dec
test
jb
jmp
ds
mov
mov
cmp
incb
hlt
pop
roll
push
cmp
xchg
fsubl
out
xlat
scas
lea
fsubrs
dec
imul
lods
inc
dec
add
or
adc
ret
cld
xor
addr16
mov
mov
mov
int
orb
shlb
ds
push
push
rcrb
jne
outsl
jmp
faddl
xchg
aas
add
push
push
mov
dec
add
mov
sarl
ja
adc
out
and
and
jp
stc
daa
test
cmp
inc
cli
dec
xchg
in
lret
and
ret
xchg
jbe
mov
dec
jecxz
fmuls
hlt
out
pop
lahf
jmp
mov
mov
jle
xor
dec
outsb
repnz
mov
and
and
in
dec
jbe
adc
mov
stos
aad
xor
xor
cmp
push
cwtl
mov
push
rcll
sub
mov
cmp
aam
cmpsl
std
mov
mov
in
jbe
aad
fcmovne
adc
sub
inc
js
inc
data16
lret
test
ljmp
mov
mov
mov
mov
lahf
cmp
push
loop
xor
nop
ret
adc
cli
add
repz
push
sbb
xchg
stos
jmp
les
jno
sub
mov
cld
cli
mov
stos
hlt
insb
cmp
mov
add
or
push
hlt
xor
mov
jbe
sbb
dec
xor
push
bound
sbb
pop
cmp
pop
xchg
cmp
repz
xor
push
cltd
mov
jle
jg
sbb
jae
and
or
adc
jne
mov
jmp
adc
fsts
fs
sbb
mov
fwait
test
or
insl
pop
inc
mov
dec
ja
aas
xor
nop
or
dec
out
into
xchg
fwait
add
lret
adc
sub
jnp
lahf
cltd
shrb
push
add
in
xor
testb
or
inc
and
xor
push
insl
push
fsubs
or
fistps
pushf
je
lret
push
add
shl
dec
cmp
gs
xor
dec
sub
mov
inc
pop
cwtl
xchg
mov
js
bound
dec
and
shufps
add
pusha
push
mov
popf
dec
sbb
mov
imul
ror
xchg
jo
jnp
inc
cwtl
inc
sub
dec
cld
add
shll
dec
mov
jnp
jnp
sub
into
or
and
xchg
adc
and
and
lock
inc
lds
lods
inc
gs
xchg
push
inc
inc
dec
fidivl
jle
fdivl
push
fisubrs
inc
pusha
into
lret
mov
aam
cmp
fmulp
pop
sub
sbb
dec
sub
jg
fnstsw
sarl
insl
jmp
xor
mov
cltd
arpl
jl
add
ret
ret
xor
mov
xchg
mov
and
fcmovnbe
cli
test
mov
push
sbbl
jns
into
pop
push
jg
das
adc
sbb
inc
push
mov
mov
out
jns
jbe
pop
inc
and
outsb
dec
daa
cmp
call
cli
inc
jns
sarb
pop
xor
jnp
adc
jo
jnp
xchg
mov
shlb
push
dec
outsb
repnz
xlat
fwait
sti
mov
sti
dec
addr16
cwtl
pusha
lret
aad
lock
push
pop
int
js
jle
adc
sub
cs
test
dec
fs
dec
and
adc
scas
outsb
or
xchg
sub
cmp
inc
das
icebp
mov
out
shlb
movl
xor
sbb
inc
mov
js
incb
pop
out
shl
movl
xchg
testb
sub
push
or
cld
das
and
loop
in
add
xchg
arpl
inc
lock
in
xchg
adc
ss
outsl
icebp
lret
push
cmp
es
pop
cmpsb
mov
xchg
mov
add
into
mov
ja
movsl
sbb
jno
add
push
pop
cmpsl
add
pop
cld
push
bound
lods
and
sub
sub
repz
cmp
push
lods
xchg
popf
std
es
test
jmp
xor
cmpsb
test
jg
jl
mov
leave
pusha
lock
mov
push
pop
sar
xchg
stos
sbb
push
push
fldl2e
aaa
mov
ds
sub
jnp
outsl
push
aad
xchg
xor
or
arpl
push
or
cmp
pmaxub
dec
or
xlat
sub
fsubl
xchg
pop
jae
jmp
mov
mov
ret
scas
jno
lret
xchg
leave
leave
xchg
adcl
scas
adc
mov
xchg
out
int
outsb
push
nop
rorb
mov
imul
or
int3
jl
mov
xor
and
inc
out
mov
sti
and
shll
mov
jb
mov
jg
insl
mov
aas
sbb
jnp
add
add
push
mov
mov
les
push
int3
hlt
jb
mov
insl
and
leave
mov
xchg
push
add
dec
outsl
aad
push
lcall
push
sbb
cmc
jp
idivb
fldenv
pushf
loopne
pop
fsubl
xchg
xor
imul
jnp
lea
lcall
and
movsl
fwait
loope
fsubr
dec
push
lea
mov
test
mov
mov
addr16
jnp
scas
fdivrl
sub
pop
mov
and
cli
sar
xor
clc
push
aam
mov
and
push
je
jmp
push
push
arpl
add
out
das
sbb
repnz
xor
or
loop
fbstp
aas
insl
aam
fwait
mov
mov
mov
popf
es
ret
xchg
pop
mulb
hlt
cmp
fs
int
mov
mov
dec
sbb
out
mov
adc
mov
lods
mov
pop
pop
dec
js
bound
movsb
daa
in
clc
aas
adc
sub
call
mov
sub
cmpb
xchg
lcall
sub
lock
mov
sbb
out
std
iret
pop
xor
outsl
push
jno
jp
cmpsl
push
out
jmp
jo
or
js
xlat
add
pusha
aaa
or
adc
adc
mov
popf
jns
pop
push
dec
test
pop
xchg
push
xchg
inc
push
xchg
mov
testl
xchg
mov
std
mov
or
pop
in
jg
shll
mov
xorb
inc
testl
sti
sub
ja
in
sbbl
ss
pusha
sbb
out
jae
cmc
xchg
pusha
loop
mov
xlat
cmpsb
dec
cs
movsb
dec
addr16
int
push
dec
fnstsw
cwtl
setge
pop
dec
jo
mov
ffree
push
out
test
jo
in
sbb
push
add
or
and
push
pop
inc
push
pop
inc
adc
sbb
addr16
mov
xor
sbb
fstps
pop
imul
jno
adc
dec
call
sub
xchg
xchg
icebp
xor
outsb
push
mov
popa
sbb
iret
outsb
mov
adc
sub
cmp
popa
mov
enter
cld
outsb
ds
es
mov
dec
mov
add
mov
inc
in
add
daa
out
gs
mov
lods
repnz
jnp
inc
rcl
sti
jno
test
push
mov
shl
push
xchg
xchg
pop
cltd
push
ret
cmp
test
mov
pop
cmp
pop
ret
xchg
dec
push
ficompl
je
sbb
push
subb
cltd
mov
fcom
aad
mov
sbb
dec
inc
leave
lea
ret
insb
hlt
fwait
icebp
adc
dec
or
fdiv
xchg
gs
sbb
in
or
cmc
scas
sbb
adc
testl
jmp
add
or
and
mov
std
xor
xchg
mov
pushfw
sub
add
mov
pop
push
pop
lahf
lcall
icebp
mov
filds
stc
push
clc
arpl
mov
aad
ljmp
and
cmp
mov
xor
mov
push
cwtl
dec
add
insb
mov
pop
js
mov
das
popf
aas
nop
pop
push
mov
add
dec
jnp
and
sub
adc
jno
out
or
imul
lods
xchg
push
mov
xchg
out
subl
sbb
orb
out
xchg
fwait
cs
cmp
insl
outsl
adcb
mov
push
jl
adc
jg
inc
sbb
jl
push
imul
aad
sub
sbb
adcb
mov
adc
mov
shlb
movsb
pusha
push
sub
and
mov
xchg
cmp
sti
adc
clc
xlat
mov
mov
jno
out
lret
lods
pop
outsl
or
mov
leave
inc
dec
pop
out
push
mov
inc
xchg
in
bound
cmp
jb
shll
aad
pop
mov
insl
jbe
inc
aam
insl
cmp
jbe
cmp
pushl
out
pop
nop
bound
pop
inc
subl
lea
cmpsb
dec
repz
int3
lret
mov
sbb
pop
xchg
jae
push
cli
mov
popf
mov
int
mov
pusha
cmp
inc
pop
sti
adc
repz
add
xchg
mov
mov
inc
xor
cmp
mov
cmp
roll
hlt
push
fildl
fcoml
fidivl
or
vmovhps
dec
fs
repz
adc
pop
imul
jns
mov
and
push
mov
ret
mov
aas
imul
sbb
mov
jg
test
lea
adc
into
pushf
int
pop
pop
sub
or
pop
xchg
int
stos
mov
scas
cmc
arpl
mov
inc
inc
in
mov
mov
lods
pop
pusha
in
fcmovb
lods
mov
js
jmp
rorl
inc
enter
pusha
inc
jbe
cmpsb
mov
lret
sbb
cli
xchg
das
or
dec
xchg
xchg
add
jl
mov
mov
sub
out
mov
mov
cmp
jns
rol
dec
mov
test
push
xchg
xor
dec
sub
test
mov
fucomi
leave
adc
sbb
mov
pop
nop
aas
ret
jle
mov
mov
and
lcall
push
in
int3
inc
negl
lods
inc
push
imul
ffree
roll
cmp
add
out
xchg
push
lods
dec
xcrypt-cbc
cmpsl
aad
add
sets
and
mov
fwait
mov
jge
hlt
mov
jp
rcrb
call
cmp
jecxz
aaa
mov
dec
or
aad
jecxz
fisubrl
ss
cmp
dec
push
inc
cmp
mov
mov
mov
insb
scas
mov
cld
sbb
push
adc
pushf
ret
mov
mov
and
pushf
fisttps
repz
daa
mov
cmpsb
lods
xchg
int
fsubp
xorb
outsb
addr16
das
scas
dec
lea
sub
cmc
mov
cmp
cmc
insl
push
jge
test
mov
sti
scas
adc
or
xor
lret
mov
shll
inc
arpl
jmp
jb
mov
lret
fldt
push
push
leave
and
loope
jle
xor
mov
jge
imul
cmp
aam
call
pop
pop
xlat
loope
clc
incl
jbe
cmp
orb
cwtl
and
stc
js
lahf
mov
stos
or
cmp
imul
imull
jbe
jg
cmp
pop
clc
dec
enter
sahf
and
cli
dec
and
aaa
mov
icebp
imul
dec
xchg
repz
adc
inc
sbb
hlt
jl
shll
scas
cmp
push
jns
and
fcom
and
outsl
rcrl
les
imul
pop
sbb
push
insl
sub
jl
mov
mov
xor
xchg
cmp
fistpl
mov
push
jne
jnp
out
lds
in
cmpsb
adc
jnp
cmp
sub
popw
test
ficompl
adc
mov
xchg
push
pop
pop
lahf
mov
lcall
mov
mov
lcall
cltd
repnz
mov
std
xchg
and
mov
fistpl
push
push
push
fiaddl
dec
pushf
adc
shr
scas
inc
fimull
es
fistps
mov
lret
add
insl
pop
ret
fs
lcall
rorl
cwtl
stos
orb
mov
cmp
jl
adcl
xor
or
lcall
cltd
mov
pop
pop
mov
xor
movsl
dec
mov
jne
cmc
push
es
add
cmp
mov
out
cmp
pop
lahf
push
or
mov
out
add
or
lds
mov
push
addr16
pop
cltd
pop
xchg
mov
dec
stc
cmp
filds
cli
push
mov
dec
call
aas
cmp
pop
push
mov
mov
fstl
les
pop
iret
jae
clc
nop
ljmp
stc
pop
adc
sub
sbb
dec
add
in
into
or
les
adc
loope
and
sub
fsubl
loope
pop
icebp
sub
hlt
shrl
dec
mov
lahf
repnz
and
mov
aad
jp
sarl
out
mov
outsl
shl
out
lock
outsl
sbb
xchg
fistps
pop
push
rclb
aas
pop
adc
sub
sub
js
dec
test
lods
mov
call
mov
lods
gs
cld
subl
dec
sub
xor
adc
fmull
lret
mov
sahf
lds
fs
xlat
sub
inc
mov
push
adc
inc
icebp
cs
jb
xlat
adc
inc
cmpl
pop
mov
push
and
push
inc
dec
and
mov
mov
pop
mov
mov
lods
pop
pop
and
dec
fwait
pushf
sahf
inc
jg
data16
mov
incl
inc
sbb
inc
in
xor
mov
pop
push
inc
mov
pop
lods
xchg
stc
xchg
sub
movntq
out
int
ret
pop
xor
jp
mov
stos
mov
sti
pop
jmp
push
lds
cmp
cmp
mov
cmpsb
data16
cld
lahf
gs
xchg
push
sub
shrl
push
fwait
lock
loop
cmpb
cmpsl
incb
jle
lret
leave
sahf
push
jl
inc
sbb
dec
and
mov
cmc
adc
sub
add
ljmp
mov
cs
adc
jno
outsb
loope
xor
mov
cmp
pop
movsb
pop
xor
repz
fwait
adc
and
jns
mov
sub
ja
add
sub
mov
mov
fdivrl
adc
sub
push
jo
jge
std
xchg
inc
std
outsb
xchg
lock
mulb
stos
sub
xor
ja
mov
xor
mov
scas
xor
nop
cli
mov
cli
xchg
movsl
pop
cs
pcmpeqw
xchg
fmul
push
or
in
pop
and
xchg
pop
sbb
imul
jl
adc
jp
and
push
mov
mov
xchg
clc
dec
pop
popa
cmp
push
shl
or
lock
jb
xor
inc
mov
es
arpl
lea
movsl
or
lret
fwait
cli
sub
and
push
jge
scas
add
packuswb
scas
sub
popa
push
testl
loopne
inc
cmp
negb
mov
and
cmp
insb
fsubrs
pushf
ret
rorl
movb
dec
int
pmuludq
repz
cwtl
pop
fcoml
iret
iret
repz
or
jb
int3
cmp
ss
scas
loopne
flds
daa
mov
mov
cli
lcall
jno
push
xchg
stc
ret
mov
pop
iret
aaa
iret
mov
xchg
iret
pop
lock
int3
int3
sahf
cmpl
mov
sub
sbb
xor
dec
das
inc
ret
rcr
lock
stos
femms
xor
sbb
test
leave
lahf
dec
adc
jl
in
adc
call
ficoml
fwait
mov
jmp
mov
pop
push
dec
sub
jle
fldt
sub
mov
add
jmp
xor
mov
popf
cmp
repz
aaa
add
jecxz
jmp
jne
inc
iret
movsl
dec
push
out
fistps
fcmovne
dec
lahf
mov
outsl
push
add
cmpsb
int3
or
inc
icebp
sarl
push
into
xchg
das
fwait
jo
cmp
pop
and
lcall
add
lock
mull
lock
xlat
out
add
cmc
or
data16
or
or
imul
inc
and
mov
mov
fcoml
cs
sarb
ffreep
inc
cld
add
das
insb
repnz
push
jns
mov
xchg
mov
pop
daa
sbb
cmp
sbb
mov
adc
jnp
aas
add
daa
in
lock
insl
movsl
dec
push
mov
outsb
pop
cmp
js
pop
rcrl
int
mov
jae
test
pop
xchg
fdiv
push
jns
incb
mov
jno
mov
push
and
lret
idivl
dec
ja
jle
mov
mov
push
cs
pop
jge
pop
daa
shll
icebp
outsl
sbb
lea
mov
fimuls
fldenv
ds
dec
sub
stc
dec
mov
icebp
or
jne
sub
mov
sahf
adc
jge
imul
sti
xor
fisubrs
in
mov
add
xchg
dec
mov
pop
jp
sub
mov
loopne
jge
cmp
dec
cmp
push
adc
movsb
out
jle
adc
cmp
jg
stos
stos
faddl
ret
int
fnstsw
rorb
and
add
into
into
add
jns
xor
rolb
stos
decl
xor
gs
icebp
push
dec
push
mov
aaa
and
insl
add
js
imul
insb
jae
and
ret
mov
nop
mov
lea
out
sahf
dec
jb
jl
push
xchg
xchg
jg
pop
dec
loope
xor
repnz
in
jo
mov
popf
cmp
fcomp
xchg
fmul
cmpl
dec
scas
lods
jne
es
adc
cltd
ret
fldt
in
dec
ss
cmp
or
or
in
mov
push
xchg
icebp
xor
adcb
movsl
fsts
gs
cmp
push
push
push
mov
and
inc
push
pop
fistps
xor
cmp
xchg
scas
sbb
fldt
pop
xor
lds
ret
lds
inc
sub
adc
sub
int
jo
and
stc
xchg
and
cmp
pop
adc
push
aam
movsb
adc
sti
inc
enter
cmpsl
mov
mov
cmc
push
xchg
imulb
and
xchg
sub
andl
push
sub
xchg
jge
shll
iret
stc
mov
push
adc
sbb
scas
sbbl
sub
bound
jae
ficoml
push
lahf
cmp
mov
test
xchg
mov
xchg
test
adc
dec
pop
test
cmp
add
mov
shlb
enter
push
jae
or
dec
push
ret
jg
xor
or
cmc
push
ror
xchg
mov
mov
push
mov
std
mov
pusha
push
jnp
cld
push
mov
dec
ret
jbe
mov
ds
mov
jl
mov
xchg
sub
out
mov
sarl
dec
out
in
xchg
rorb
add
push
es
cld
fcompl
pusha
cmp
dec
xor
mov
out
mov
and
ret
xchg
add
js
dec
inc
imul
sub
test
or
repz
add
xchg
dec
xor
or
push
pop
hlt
stc
je
jl
ss
fs
cli
insb
push
xchg
adc
jnp
and
add
cmp
cmp
popf
or
insb
xchg
sbb
cmp
aad
mov
xchg
andl
adc
sbb
pop
mov
shrl
into
inc
and
loopne
out
into
jo
cmp
mov
sahf
cmpsl
repnz
sbb
pop
ljmp
cmpb
bound
push
arpl
int
push
mov
fcomi
outsb
xor
js
lods
mov
xchg
pop
inc
sbb
data16
enter
mov
int
xchg
leave
cs
mov
xchg
in
mov
roll
dec
mov
ja
and
cmp
hlt
std
fcompl
xchg
test
out
outsl
sub
push
dec
test
inc
and
and
mov
adc
mov
aas
mov
mov
loope
in
mov
jae
stos
jl
xchg
inc
mov
outsl
dec
icebp
pop
movsb
ja
or
mov
test
adcb
pop
push
in
int3
dec
pushl
cmpsb
mov
push
cmpl
enter
mov
fidivs
inc
push
sti
push
cltd
cwtl
push
or
movsb
dec
test
outsl
dec
xchg
subb
jo
cld
aam
pusha
mov
add
pop
add
fmuls
movsl
pushf
cmp
xor
aad
rcrl
lods
inc
cld
cmp
out
cmp
inc
lock
and
out
inc
mov
sar
and
adc
jecxz
and
xchg
xchg
test
xchg
fcmovnb
inc
push
mov
pop
dec
data16
push
call
pop
leave
cs
jg
ficoml
inc
int
cld
mov
lds
jle,pt
push
je
iret
mov
enter
mov
sbb
and
mov
insl
dec
mov
lods
enter
loop
fs
sbbl
or
out
or
dec
jns
popa
xorb
adc
push
sub
jbe
iret
dec
dec
inc
adc
insb
push
xchg
mov
lret
jge
movsl
test
lock
out
push
pop
rolb
sbb
xchg
mov
mov
sub
cwtl
mov
mov
js
cmp
cwtl
mov
adc
in
xor
dec
popf
inc
int
je
or
mov
jg
xor
pop
dec
pop
mov
xchg
lret
imul
sub
mov
cmp
push
xchg
push
outsl
mov
mov
sbb
imul
adc
xchg
push
adc
pop
cmp
cmovb
push
xchg
inc
mov
lods
add
ficoms
test
stc
call
fildl
cmp
gs
or
outsl
subl
or
and
and
nop
adc
xor
mov
push
sarb
ds
fdiv
into
and
pop
nop
mov
ss
inc
pmaddwd
lds
xor
std
adc
or
adc
sar
insl
mov
cmp
test
sub
dec
jg
push
add
das
add
and
mov
cmp
cld
jno
or
mov
scas
and
lar
mov
mov
scas
arpl
mov
xchg
cltd
inc
dec
inc
inc
std
pushl
lock
pop
nop
data16
test
pop
lahf
jno
or
xchg
shrb
mov
jo
mov
xchg
fstps
fadd
adc
je
loop
ret
xchg
sbb
xchg
fnstcw
push
and
shll
into
movsl
stos
fsubrs
pop
ljmp
push
mov
rcll
cmc
sbb
dec
int3
rcr
mov
and
mov
int3
sbb
xchg
rcrb
sbb
fs
adc
or
lds
pop
lods
and
stos
mov
dec
dec
je
repz
rcrl
stc
shl
and
push
mov
aad
jbe
cmp
xor
notb
imul
inc
sub
mov
mov
call
jmp
insl
enter
sub
cmp
out
jnp
dec
call
fwait
out
xchg
sbb
jmp
inc
mov
inc
jno
dec
push
or
lahf
push
ror
xchg
inc
imul
insb
xor
sbbw
imul
or
add
jmp
xor
mov
lods
push
sarl
xlat
mulb
movsb
cmp
repnz
lret
mov
cmc
shlb
mov
rcrb
fadd
ljmp
loopne
or
stc
push
jnp
idivl
shl
fstl
xorb
xchg
and
cmp
add
leave
sahf
cmc
mov
mov
fadds
aad
imul
xchg
das
jmp
xor
fs
cli
lock
lahf
lahf
out
movsl
adc
push
dec
pop
in
jecxz
xchg
out
adc
sbb
dec
push
pop
inc
dec
call
mov
shl
decb
pop
rclb
pusha
sub
push
outsl
fistps
mov
mov
or
or
ret
or
cmp
out
or
fwait
cmp
imul
lahf
dec
pop
int3
or
aam
jne
pushf
fistps
mov
es
repnz
cmpl
jns
mov
hlt
xchg
xchg
mov
dec
stos
arpl
das
lret
jge
sbb
lds
lret
xchg
mov
sbb
mov
cli
hlt
std
pop
loope
sub
scas
push
test
jecxz
mov
jbe
dec
push
jb
aam
jb
or
push
out
scas
stc
cltd
fs
movsb
mov
jp
hlt
and
in
xchg
fs
sbb
iret
mov
aad
sbb
out
jle
add
mov
xor
dec
repnz
out
nop
loope
loopne
pop
lret
cwtl
mov
xor
add
or
fs
xlat
mov
scas
sbb
lds
inc
sti
hlt
mov
mov
dec
cmp
push
lds
pusha
rcr
cmc
data16
inc
sub
bound
mov
jge
mov
xchg
clc
add
mov
mov
ret
cmpsb
das
das
or
addr16
push
repz
das
cld
shl
inc
cmp
cli
loopne
cwtl
mov
mov
and
testl
and
outsl
adc
mov
int3
fcomip
lret
or
add
popa
into
insl
adc
out
lret
sarl
rorb
out
int3
jl
aas
mov
xchg
mov
add
outsl
add
data16
inc
mov
imul
out
fsubrs
adc
jecxz
lret
push
aas
mov
lret
ss
fisubl
dec
popf
sbb
stos
rorl
adc
push
cmp
jp
or
jb
mov
rol
repz
test
mov
call
mov
mov
insb
mov
mov
dec
popa
stos
push
sbb
push
shr
mov
push
cmp
inc
jl
mov
mov
jle
add
adc
fistpl
stc
js
add
xlat
mov
jmp
xor
xchg
loop
mov
cmp
xchg
xor
and
fcmovb
mov
arpl
and
and
jnp
ljmp
pop
pusha
push
mov
pop
pop
inc
mov
lret
arpl
lods
ljmp
xchg
scas
out
cmp
sub
xlat
or
jno
fistpll
pop
ja
iret
pop
pusha
test
scas
pop
fsubrs
mov
mov
add
sbb
dec
and
cltd
scas
adc
stc
jnp
ret
cld
iret
inc
push
sbb
sbb
push
cmc
and
xchg
ja
imull
nop
pop
add
rclb
lahf
test
test
div
sarb
fidivs
lahf
or
pop
int
pop
insb
loope
jmp
jnp
aaa
testl
dec
push
cmpsb
adc
inc
jmp
sub
inc
insb
mov
add
xchg
fnsave
adc
mov
js
dec
test
mov
nop
repz
mov
xor
cmp
popf
sub
cmp
imul
je
in
push
fsub
or
mov
mov
frstor
lcall
mov
iret
or
je
pop
inc
xchg
popa
jne
mov
jb
pop
xchg
mov
test
les
jle
cmpsb
xor
xor
testb
andb
pop
scas
pushf
jne
mov
cmp
inc
or
lret
imul
push
sti
jae
jb
pcmpgtd
mov
adc
popf
out
xchg
dec
dec
cltd
push
loop
mov
roll
fs
sbb
shl
insl
add
repnz
cmp
mov
fwait
mov
ficompl
dec
repnz
in
fxch
jl
lcall
aam
push
rcl
stc
xchg
cltd
negl
inc
sub
fsubr
cmp
gs
mov
insb
dec
nop
push
js
clc
sbb
xchg
shlb
fdivr
arpl
testl
xchg
xchg
pusha
and
mov
stos
subl
cltd
pop
lahf
cltd
or
lods
es
cmpsl
add
xlat
test
sarb
icebp
sub
push
and
cwtl
in
adc
shl
adc
addr16
sbb
fcom
pop
mov
mov
mov
in
cwtl
test
testl
dec
mov
xor
mov
sub
std
mov
push
test
mov
or
out
mov
pop
sub
popf
sbb
jb
pop
xor
shl
pop
cld
pop
xor
mov
sbb
mov
mov
aam
xorl
and
cltd
mov
push
dec
out
sbb
jecxz
mov
fbstp
cmp
pop
mov
push
aaa
jns
outsb
jp
out
lahf
leave
popa
pusha
sbb
mov
xchg
xor
lahf
cmpsl
inc
xchg
test
mov
sbb
add
xor
adc
mov
adc
movsb
cwtl
jle
sbb
sub
sub
or
dec
fsubs
in
lret
push
int
lea
lret
push
ss
adc
push
pop
mov
jle
or
sahf
movsb
flds
xlat
fwait
push
cmpsb
push
xchg
stos
mov
pop
loopne
aas
out
movsb
push
sbb
cmp
scas
pop
out
push
pushf
repnz
jmp
add
dec
sbb
movsb
xchg
cmpsb
sub
insb
jbe
test
mov
add
fldln2
mov
sbb
movsl
dec
or
jg
sub
mov
add
push
jo
scas
or
test
pop
xchg
adc
andl
imul
push
xchg
pop
mov
fistpl
cmp
mov
pop
pop
pop
aad
lret
fidivrs
push
or
es
lods
cmpsb
push
push
jne
mov
inc
add
add
push
inc
movsl
pop
cwtl
aaa
ss
in
cld
push
cmc
cmp
and
fisubrl
shlb
fistpl
mov
cs
xor
stos
cmp
fimull
inc
mov
movd
add
sahf
mov
inc
into
or
mov
shr
pop
ljmp
sub
inc
aad
fisubs
fiadds
mov
jnp
inc
and
popa
idivb
fs
push
subb
adc
cmp
jge
mov
add
je
cmpsl
xchg
pushf
test
xlat
ljmp
inc
push
sbb
clc
jl
mov
insb
sub
sub
inc
mov
pop
inc
test
sbb
clc
jo
pusha
dec
call
jle
shl
out
cmpsl
mov
cwtl
adc
inc
mov
nop
sub
jge
pop
shrl
or
or
aaa
aam
cmpsb
shl
stos
pop
or
imul
das
sbb
adc
iret
pushf
xor
xchg
mov
orb
sbb
outsl
fimuls
mov
mov
xor
test
mov
jo
jp
or
push
xchg
adc
xchg
inc
popf
add
jb
lds
adc
int3
jae,pt
inc
sbb
pop
mov
lea
jnp
scas
push
and
or
popf
out
inc
cmp
aas
sub
ss
or
out
pop
mov
into
mov
push
and
pop
rcl
cwtl
inc
cs
xchg
dec
inc
lock
and
in
es
mov
mov
and
jne
rorb
add
jae
xchg
mov
ljmp
or
mov
orl
call
ret
mov
or
pop
push
cmpsl
jg
lea
shr
or
lds
cmpb
jns
es
fmull
clc
les
jae
cmpsl
sbb
roll
mov
add
push
xor
xlat
sub
and
dec
insl
cmp
adc
divl
pop
adc
scas
sti
popa
cmc
imul
fimuls
out
les
sbb
cmpsb
ljmp
fmuls
sbb
pop
mov
fsubs
inc
mov
jo
insl
les
popf
call
ljmp
imul
lock
dec
and
cltd
fisttpl
lret
scas
xor
xchg
xchg
cmpsl
lock
icebp
gs
sbb
dec
or
in
bound
imul
fcmovnbe
xlat
sahf
lahf
enter
xor
mov
shll
push
pop
pop
xchg
xor
pop
imul
popf
repnz
repnz
cmp
push
fadds
xchg
fs
cs
lods
lds
jno
push
sbb
sahf
mov
mov
mov
test
xchg
fidivl
fistpl
adc
or
sbb
movsl
and
mov
in
pop
scas
rcr
popa
loope
xchg
inc
outsl
loopne
fninit
sbb
lea
pop
pop
fdecstp
sub
or
fcompl
xchg
sbb
sub
and
jp
xchg
negl
xchg
lods
shlb
jp
jbe
push
push
dec
pop
data16
jae
imul
jge
sub
rclb
mov
sbb
out
ds
shlb
jl
jp
xor
shrb
and
xchg
cmp
mov
add
flds
repz
xor
mov
mov
shlb
add
dec
pushf
loop
or
dec
movsl
adc
in
pop
cmp
xchg
cmpsl
jnp
sbb
nop
jl
lods
fisttpl
mov
stc
test
pop
xor
jmp
repz
enter
push
fwait
push
pop
fwait
mov
and
mov
inc
fs
sar
sub
xchg
dec
mov
sahf
inc
and
sarl
testb
aas
sbb
xchg
loop
jg
and
add
pop
aas
arpl
mov
pushf
and
inc
sub
jns
aam
cmpsb
push
sub
test
hlt
lahf
cmp
testl
hlt
dec
shrl
arpl
mov
pop
jbe
add
pop
xchg
cld
mov
inc
push
lcall
loope
sbb
loope
in
aaa
xor
clc
cmp
xor
es
jbe
push
ja
mov
sbb
and
in
lahf
cwtl
xchg
hlt
rorl
in
cs
int3
sub
bound
dec
or
jg
ss
cmpsb
and
jns
xor
adc
lock
fsubs
addl
dec
addr16
aaa
mov
and
xor
inc
add
into
dec
fadd
dec
repnz
js
add
mov
pop
pushf
mov
popf
jnp
out
or
xor
pop
iret
push
mov
xor
push
mov
es
push
push
int
xchg
dec
adc
mov
sarb
push
jl
js
test
dec
mov
test
cmp
adc
out
testl
outsb
js
repz
lahf
jo
push
sbb
enter
jbe
je
fcompl
jecxz
mov
jno
xchg
dec
lods
insb
xlat
shlb
cmpb
lock
push
mov
jbe
cld
xchg
jno
mov
cmpsb
stos
cmpsb
cwtl
popf
inc
or
or
jg
dec
xor
mov
loop
fsts
and
mov
mov
push
and
sub
sahf
stos
mov
call
mov
push
xchg
neg
mov
ret
test
dec
xlat
stos
jb
or
mov
pop
push
or
rcrb
pop
jge
or
sub
sbb
insb
out
sub
sbb
outsl
stos
aas
ret
lcall
in
add
faddl
pop
test
mov
sbb
lret
dec
jge
add
or
lcall
dec
xchg
sti
or
cld
cmpsb
sbb
mov
adc
sbbb
fidivrl
xor
test
mov
sarl
sub
add
mov
adc
stos
inc
jne
mov
adc
test
movsl
icebp
mov
stc
mov
jge
push
mul
cmpsl
cmp
orb
push
jb
dec
stos
shl
std
sbbb
jg
pop
cmpsb
push
xchg
mov
nop
sub
sarl
cmp
dec
xchg
cmc
sahf
dec
mov
inc
loop
lods
xchg
xchg
adc
shll
push
dec
mov
imul
pushf
outsb
jmp
xor
jne
jp
rcr
pusha
sub
mov
pop
add
test
clc
pop
push
push
xor
and
leave
push
ljmp
lods
or
lods
inc
and
in
stc
pop
out
xchg
ja
lret
push
shl
add
or
push
and
xchg
out
cli
movsl
lea
test
cmpl
pop
sbb
jnp
mov
sub
stos
je
fldcw
aad
xchg
cltd
push
xor
sub
loop
xor
jno
xchg
xor
or
push
adcb
jae
les
mov
add
xchg
stc
insl
add
mov
nop
mov
inc
and
outsb
sbb
loope
repnz
inc
push
pusha
rcpps
mov
or
adc
aad
xor
leave
cs
jb
add
test
pop
sbb
jmp
ret
in
mov
inc
jo
lods
sub
sub
lcall
in
xor
inc
mov
add
pop
or
mov
ss
pop
pop
loope
pop
xlat
ret
mov
insl
int
adc
in
adc
ja
mov
lret
cli
sti
mov
mov
mov
stc
push
dec
cltd
adc
mov
jmp
pop
out
iret
sahf
js
xchg
movsb
sub
lock
mov
xlat
add
add
imul
es
sub
lods
ficomps
xchg
hlt
or
jns
out
jae
mull
mov
stos
xchg
and
push
cs
or
jg
push
cmp
repz
sub
out
mov
lret
push
hlt
notb
push
imul
xchg
insb
xor
aas
mov
or
outsb
aam
fwait
leave
push
sub
adc
add
mov
dec
pop
sbb
enter
adc
into
mov
mov
add
movsb
enter
or
push
jmp
xchg
mov
jp
dec
push
mov
fisubs
cwtl
sub
pop
adc
cli
cmp
push
inc
fs
mov
in
data16
mov
aas
and
push
sti
or
or
jno
shrb
js
aam
xchg
xor
pop
arpl
call
dec
stc
or
mov
cld
out
cmp
jns
mov
shl
cmp
sbb
in
loop
sbb
dec
add
jae
dec
jo
cwtl
test
shl
cmc
xor
incb
push
and
nop
call
mov
push
loop
mov
mov
adcl
repnz
hlt
addb
inc
push
aas
pop
ss
pop
in
mov
mov
rorb
sbb
pop
mov
sbb
pop
enter
dec
fwait
mov
push
xchg
cmp
mov
inc
mov
ja
push
add
cmp
cwtl
sub
xor
lahf
addb
or
mov
subb
cs
stc
adc
pushf
aad
cmc
je
xchg
lret
inc
sub
or
mov
rorl
fldl2t
cmp
cmpsl
mov
cmp
pop
loop
pop
push
xor
dec
push
push
jne
inc
iret
xor
aaa
or
add
dec
mov
push
rol
pop
fs
sub
mov
push
jns
ficomps
sti
pop
adc
add
pop
pop
push
mov
leave
rcrl
inc
xchg
jecxz
sbb
xchg
out
dec
pop
push
jmp
push
popa
faddl
loope
popf
inc
xor
lahf
sti
scas
stos
out
std
mov
ss
ret
and
iret
popa
jmp
mov
out
sarb
std
mov
out
adc
push
mov
out
or
jle
pushf
cmp
push
je
mov
fwait
mov
pop
loopne
int
loope
push
push
pop
test
lcall
push
shrb
push
imul
dec
arpl
pusha
fisttpl
jle
in
and
push
xlat
sbb
out
mov
jae
stos
xchg
mov
fcomp
jo
xor
cmpsb
leave
inc
bound
jae
mov
add
xchg
inc
mov
fiadds
lods
lock
or
mov
cld
inc
inc
stos
or
jecxz
push
xchg
jl
jmp
sti
dec
adc
pop
push
push
in
mul
dec
repz
aaa
mov
lock
cwtl
mov
outsl
ljmp
jecxz
and
cwtl
data16
in
outsb
fsubp
icebp
lret
cmc
bound
lcall
mov
push
shlb
pop
ljmp
mov
shl
loope
aam
or
sub
mov
dec
stc
loopne
loopne
addr16
inc
iret
mov
pop
roll
jg
xchg
xchg
test
xchg
lds
loope
jge
jb
mov
inc
mov
testb
rorb
in
data16
mov
jns
add
xor
and
jmp
push
das
mov
inc
stc
jns
pop
jp
pusha
testl
cli
rorb
xchg
fwait
lcall
leave
cmc
xlat
pop
cmp
push
pusha
pop
fstpl
psrlw
lock
mov
fnstcw
adc
jb
rcl
and
fsubrp
mov
cmp
movsl
pop
dec
cmp
outsb
nop
inc
push
pop
mov
mov
into
fdivrs
adc
mov
loope
ret
fstpt
shrl
lds
fldenv
sarb
mov
mov
and
push
mov
mov
cwtl
icebp
mov
sub
push
xchg
aad
jae
arpl
rclb
hlt
lss
add
mov
ret
rolb
mov
add
sbb
xchg
xlat
inc
xor
test
sub
test
dec
xchg
cmp
js
test
jbe
in
cmc
push
mov
lret
sti
rorb
and
and
adc
sbb
lret
push
out
out
mov
xlat
incb
lret
inc
js
cmp
adc
addr16
push
and
add
add
aad
rcll
and
test
pop
les
pushf
adc
pushf
imul
rclb
xor
out
mov
dec
out
loopne
cld
int
lea
paddd
push
sub
lahf
inc
dec
lret
mov
mov
call
fdivs
mov
jno
mov
test
loop
cmpsl
fstps
movsb
test
dec
into
fnstcw
pop
jp
sub
ljmp
fidivrs
repz
in
outsb
test
xchg
mov
xchg
cmc
mov
into
jmp
jge
mov
int
cmp
pop
pop
fcmovnb
leave
test
test
insb
les
dec
adc
mov
inc
push
fisubs
and
lock
mov
add
dec
sub
insl
inc
mov
iret
rcl
aaa
mov
jo
fisubs
mov
mov
mov
pop
xchg
mov
mov
mov
mov
jo
out
pop
jmp
jne
cmp
add
out
mov
es
pushf
dec
xorb
out
test
jl
push
inc
mov
cmp
xchg
rcl
hlt
sbb
push
dec
fisttpll
sub
mov
popa
push
lahf
jnp
shrl
imul
sub
jns
notl
sbb
loope
mov
in
xor
mov
xor
test
out
lcall
sbb
jnp
out
call
testb
add
jle
test
cli
stc
fists
dec
and
sahf
sub
andl
lea
sbb
mov
jge
imull
xchg
imul
pusha
rol
jmp
lret
dec
mov
in
fmul
dec
mov
icebp
adc
add
in
outsl
pop
mov
jmp
pop
add
rep
mov
fistps
push
pop
pop
movsl
in
enter
mov
pop
outsl
or
sbb
lock
out
inc
ds
jmp
dec
and
test
and
xor
cmp
mov
into
push
mov
adc
movsl
iret
sbb
pop
dec
or
mov
sbb
test
call
outsl
fnstcw
movsl
cli
out
rorl
pop
adc
idiv
and
adcb
add
dec
cmc
pop
test
push
arpl
sbb
xchg
fwait
in
lcall
jecxz
inc
inc
push
jo
sti
int
jmp
insb
push
cmc
test
mov
lock
pop
jnp
dec
popa
bnd
push
lods
popf
add
mov
shll
cld
inc
or
shl
daa
test
mov
fwait
xchg
pop
cmpsl
test
ljmp
lret
and
ret
bound
xchg
push
lahf
ret
and
pop
push
stos
shll
rcll
fistps
pop
or
mov
sub
dec
jle
call
loope
sub
test
xchg
push
dec
mov
xchg
or
rolb
adc
fcoms
inc
cmpsl
lds
rcrb
imul
and
lret
and
or
fwait
jp
inc
imul
sub
outsb
roll
inc
sbb
jmp
popf
inc
jle
mov
dec
dec
cld
cmp
insl
xchg
xchg
sbb
mov
fiadds
mov
pop
ret
mov
sbb
enter
pop
jmp
pop
fucomi
je
mov
cs
mov
inc
movsl
inc
insb
test
and
loope
leave
pushf
cmp
out
pop
cltd
mov
icebp
mov
push
pop
fscale
dec
mov
pop
std
bound
or
mov
cltd
xchg
mov
aam
pop
fnstsw
icebp
adc
scas
pop
push
mov
sbb
mov
scas
inc
adc
enter
jb
in
push
push
sbb
mov
xchg
pop
jnp
clc
adc
add
mov
xchg
jno
dec
adc
rclb
pop
or
lods
push
cmp
dec
test
cmp
and
mov
ret
pop
xchg
fists
pop
and
mov
insl
rorb
push
xor
xchg
ret
sbb
fbstp
jle
std
xor
aad
cmp
mov
in
dec
cli
add
mov
movsl
outsb
push
mov
mov
bound
xchg
shrl
mov
sub
jmp
cld
jmp
xor
dec
or
out
inc
jo
cmp
or
sbb
push
fisubrl
pop
inc
cmp
fiadds
mov
or
subl
gs
mov
push
xchg
xchg
xor
jl
ds
sub
adc
dec
sub
mov
lods
enter
or
pop
inc
ljmp
out
iret
test
inc
cmp
adc
add
fisubrl
jnp
lds
test
mov
ja
test
cmp
xchg
and
out
jns
mov
call
ds
js
xchg
movsl
cmpsb
les
adc
ss
xor
inc
xchg
mov
sarb
and
push
aaa
mov
pop
push
imul
xor
push
or
inc
cmp
ss
pop
mov
out
dec
and
in
xchg
leave
sbb
mov
add
push
lock
inc
mov
ficoms
add
negl
popf
out
addr16
mov
pusha
imul
inc
arpl
pop
movsb
test
loop
mov
jae
jl
idiv
mov
jne
mov
mov
fwait
jmp
xlat
repnz
testl
adc
pop
mov
jno
lods
or
ss
test
popa
std
test
xchg
cmpsl
pop
js
repz
sub
sbb
jle
adc
mov
pusha
sub
inc
dec
add
addb
xchg
dec
mov
daa
popa
fists
ret
insb
std
dec
push
dec
test
or
add
in
add
add
mov
ljmp
cmp
and
push
sbb
mov
inc
popa
inc
mov
sahf
stc
aad
push
and
add
outsl
mov
and
popf
mov
push
fs
add
outsl
or
cs
jae
scas
repnz
jnp
js
xor
sub
ret
pusha
int3
ror
mov
dec
xchg
lods
aad
mov
and
fnstenv
pushf
ds
sub
or
xor
sub
clc
test
cmp
rcl
repz
adc
mov
pop
cmp
call
loope
rcll
in
mulps
pusha
andb
out
das
scas
dec
and
or
popa
test
sbb
mov
les
adc
insl
add
and
sub
test
insb
add
xor
pop
adc
mov
jnp
pop
mov
outsl
out
das
sbb
fwait
lahf
movsb
fnstsw
jbe
mov
movsl
repz
add
dec
pop
inc
cmp
and
mov
outsl
in
int3
xchg
test
pop
sbb
into
push
cli
bound
adc
adc
pop
sbbl
aam
mov
sbb
cmp
lds
or
adc
out
mov
imul
cmp
hlt
push
fists
sbb
call
mov
push
xor
xor
cli
mov
adc
ljmp
mov
lcall
fcomps
push
jne
rclb
imul
add
sbb
lcall
pop
imul
push
cmc
adc
mov
or
dec
dec
push
cmp
jge
xchg
xor
je
addb
test
cmpsb
pop
dec
push
into
add
jg
dec
insb
inc
xchg
scas
mov
shlb
cmpb
xchg
stos
pop
add
xor
dec
sub
pusha
imul
ja
add
out
fmull
push
push
gs
pop
stos
mov
adc
stc
repz
fistpll
pop
pop
gs
jb
and
stos
rorl
push
push
loope
scas
sbb
in
in
je
jl
adc
pop
icebp
adc
xchg
mov
jp
push
scas
ret
cltd
arpl
stos
enter
sub
test
cmp
jns
adc
enter
pop
push
out
xchg
in
mov
mov
sti
dec
mov
xchg
shll
lods
dec
sbb
xchg
jnp
cld
mov
adc
mov
xor
and
jmp
scas
lcall
inc
sbb
and
xor
fwait
out
mov
jb
push
and
cli
xor
sub
xchg
cs
inc
je
cmp
stc
cs
in
adc
mov
rorb
and
js
test
sub
pop
je
andb
cmp
pop
mov
fisubl
scas
dec
ds
mov
insb
ret
mov
sbb
into
push
jbe
inc
insb
xor
push
jae
pop
aam
shl
pop
push
pop
jmp
jns
in
fdivl
addb
icebp
imul
jae
lret
and
xchg
cli
or
and
gs
popa
xor
jae
cmp
lahf
cmp
mull
dec
xchg
add
shrl
xor
and
inc
or
pushf
adc
int3
sbb
push
push
in
loopne
mov
clc
das
stc
pop
jnp
imul
ss
lea
jb
mov
lahf
dec
test
pop
outsb
xor
add
icebp
dec
xor
insb
xchg
push
xor
mov
subb
cmpsb
add
inc
pop
dec
repz
jmp
dec
in
adc
fbstp
adc
push
les
aas
dec
and
popf
enter
ss
adc
mov
test
add
jb
fbld
test
pop
push
mov
push
sbb
cmp
sbb
xchg
mov
hlt
cli
nop
push
pop
sub
out
call
mov
daa
inc
addb
pop
mov
inc
mov
pop
pop
fists
lret
lds
push
gs
mov
sub
add
xlat
bound
sub
gs
cmp
in
loopne
xchg
mov
push
sub
xchg
aaa
int3
stc
mov
shr
icebp
mov
mov
jmp
fiadds
mov
and
pop
scas
and
std
xchg
dec
push
dec
sub
scas
dec
push
add
scas
stos
xchg
jno
lock
test
dec
pop
sbb
inc
fdivs
jnp
mov
xchg
popf
das
bound
and
fptan
push
push
jno
popf
mov
adc
jmp
rcrb
xchg
sti
lock
faddl
scas
daa
pusha
and
imul
adc
in
mov
jno
lea
cmp
push
scas
aam
sub
lret
jmp
sbb
popa
jo
xchg
dec
test
inc
push
mov
daa
in
ficomps
jecxz,pt
mov
and
ds
scas
sbb
jnp
or
mov
pusha
cmp
aaa
pop
lret
mov
xchg
sbb
clc
mov
popf
sub
mov
mov
outsb
jo
jge
fs
push
in
and
dec
lret
pop
aad
dec
jns
das
cmpsb
lods
cmp
iret
in
aas
push
shll
aas
cli
push
adc
pop
sahf
push
cmovne
cmp
pop
mov
mov
cmp
jne
hlt
sbb
bound
hlt
xchg
push
ret
leave
in
rolb
pop
push
lods
roll
pop
pop
push
pushl
adc
aas
arpl
xor
insl
rcrb
clc
cs
xchg
js
jnp
jns
mov
imul
stc
push
mov
fcmovnb
in
rcr
test
sarb
mov
fisttps
jae
mov
fidivs
daa
jl
inc
sbb
shl
hlt
ljmp
add
add
lcall
jg
imul
pop
in
and
test
mov
mov
inc
les
sahf
pop
and
adc
ljmp
adc
and
stos
ret
cltd
cmp
and
lret
push
shr
adc
mov
bound
sbb
cmpsl
cmp
mul
daa
rcrb
push
mov
or
jl
jno
mov
jns
js
xor
or
sbb
lret
jp
jns
xor
nop
jmp
enter
cmp
loop
mov
xchg
jbe
push
cld
adc
xor
clc
cli
xchg
lea
xchg
aad
loop
mov
mov
inc
cmp
fbstp
push
sahf
mov
int
xchg
int3
and
bound
jle
test
mov
jns
fwait
push
pop
ds
xor
imul
fidivrs
test
cmpsb
sub
and
pop
bound
pop
sbb
fildll
aas
movl
out
test
movsl
ss
jl
jno
add
adc
lcall
pushf
inc
stc
divl
dec
mov
mulb
cmpsb
pop
push
push
stc
mov
in
jp
push
jmp
xchg
fisubrl
ret
and
xchg
adc
data16
dec
xchg
arpl
lret
sbb
push
add
das
mov
das
sub
xchg
popa
mov
cmp
dec
enter
aaa
push
sahf
sub
sbb
sub
jp
add
shr
push
cmp
jge
pop
stos
dec
enter
mov
sbb
loopne
pop
sub
jns
dec
lret
sub
or
inc
and
jmp
scas
testb
or
jge
jle
call
pop
mov
push
and
add
dec
jno
test
loopne
sub
dec
in
or
ljmp
sbb
pusha
iret
mov
icebp
pop
dec
fnstenv
pusha
fmull
cmp
sbb
mov
lret
mov
xchg
test
mull
ds
pop
jecxz
add
mov
enter
jl
jp
das
sub
incl
daa
jl
fs
lahf
or
and
jge
push
mov
dec
fldt
das
push
and
cmp
outsl
xchg
call
sub
out
lock
add
repz
das
push
add
cld
mov
mov
insb
rcrl
test
scas
xorps
outsl
lods
ds
fdivs
inc
js
cmp
scas
pop
test
pusha
pusha
push
mov
mov
jns
jecxz
mov
daa
pop
sbb
pop
jns
shlb
xor
add
sub
sub
loope
push
pop
mov
inc
fbld
or
jnp
movsl
dec
push
add
and
notb
mulb
repz
sub
jb
imull
xchg
test
out
sub
inc
mov
cwtl
inc
int
add
mov
jecxz
jb
stos
lcall
js
leave
mov
daa
shll
sub
mov
ds
pop
lea
pop
fstpt
hlt
and
cmp
pop
jecxz
jle
in
ljmp
or
xchg
scas
andl
push
push
roll
xor
push
aas
inc
loopne
jmp
out
push
ss
jb
decl
pop
dec
or
dec
mov
sub
dec
sbb
add
sbb
fxch
fidivrs
inc
dec
stos
shl
push
int3
adc
popf
xchg
out
rorl
out
call
xchg
push
mov
repz
push
leave
pop
cmp
sub
dec
pop
push
mov
mov
gs
lods
mov
xor
jl
sub
sahf
out
pop
jae
rcll
jb
ret
cmpsb
mov
js
cmp
inc
ljmp
bound
lods
push
ljmp
mov
xchg
inc
or
or
gs
in
setle
pop
dec
pop
sahf
fadds
sbb
mov
stos
mov
jo
dec
rcl
lahf
xchg
add
pop
lea
cmp
fistl
insb
add
aas
js
mov
add
mov
xchg
inc
mov
push
leave
inc
ds
aam
orb
ficoms
lahf
iret
add
push
jl
cmpl
scas
jg
mov
and
cmpsl
cmp
cmc
xor
cmp
movsl
into
push
popa
or
cmp
or
inc
inc
fidivs
out
ret
or
mov
fists
scas
sahf
xchg
out
pop
sub
sahf
xchg
inc
adc
gs
add
adc
leave
sbb
hlt
jecxz,pt
inc
add
mov
add
cmp
add
or
shlb
lods
pop
cmp
xchg
cmpb
test
mov
lahf
scas
mov
xchg
mov
sub
mov
cwtl
iret
push
sub
daa
mov
imul
ja
xor
ficoml
mov
mov
mov
ret
sub
push
out
jmp
dec
cmp
push
lods
mov
push
and
pusha
movl
sbb
fwait
push
int
pusha
loop
decl
dec
fcmovnb
icebp
mov
sbb
dec
mov
test
insl
jle
xchg
ret
pop
mov
notl
push
cltd
or
push
and
xor
pushf
jae
mov
xchg
jmp
mov
pop
and
jae
out
sahf
fbld
and
call
adc
sub
xor
cmp
rorl
add
loopne
jl
inc
fbstp
scas
or
fildl
inc
push
cmpsb
sbb
dec
in
adc
sub
cmc
inc
shr
cwtl
loopne
movsb
xchg
pop
int
jo
clc
pusha
or
mov
or
fsts
push
in
mov
mov
rcll
stc
adc
call
jecxz
mov
hlt
scas
adc
xor
jo
sti
push
xor
sbb
xor
dec
add
cmp
imul
fisubs
mov
ret
frstor
icebp
xorb
loopne
adc
xlat
mov
loopne
repnz
or
fidivrl
inc
xor
pop
add
dec
fsubrl
sti
mov
mov
insb
mul
sbb
xor
cmp
sti
add
dec
xor
sbb
cmp
lret
and
mov
pop
dec
xor
cmp
mov
xchg
dec
imul
gs
shlb
pusha
or
std
push
rcrb
inc
or
mov
stos
xchg
ljmp
rorb
insb
popf
fldt
dec
jae
call
mov
adc
push
pop
inc
mov
lods
xor
cmp
in
push
mov
xor
add
xor
push
cmp
cmp
shlb
imul
mov
sbb
sahf
outsw
cmc
pop
scas
jb
shl
nop
mov
cmp
aas
push
mov
out
imul
mov
sbb
hlt
xchg
and
pushf
sub
sub
pop
std
outsb
movsb
and
or
push
mov
test
inc
inc
push
incb
ja
adc
jl
jbe
fwait
gs
cld
fdivrs
fs
cwtl
xor
mov
xchg
cmp
sbb
sub
sbb
add
xchg
loope
popa
out
rorb
sub
mov
sahf
inc
and
mov
xchg
lock
cli
pushf
cmpsb
mov
pop
xor
cld
cmp
mov
popf
das
out
push
ss
gs
mov
test
fcompl
sub
cmp
lods
cmp
imul
add
mov
dec
jb
lds
mov
or
xchg
pushf
inc
cs
stos
jbe
mov
mov
add
jbe
test
adc
mov
sub
or
cmp
aam
outsl
jg
fistps
push
cld
aad
inc
or
sahf
insb
adc
push
int
sbb
popa
and
in
xchg
arpl
imul
inc
rorb
movsl
pop
add
jle
stos
repz
inc
mov
es
out
mov
fldpi
pop
aaa
bswap
add
rcl
outsl
push
add
lods
outsb
adc
test
add
jmp
gs
dec
and
fidivrs
pop
xor
and
push
or
outsb
cmpl
cli
pop
add
pusha
addr16
lahf
arpl
in
pop
push
cld
popa
fidivrl
sub
loop
inc
sbb
imul
test
sub
pop
jge
mov
mov
adc
faddl
in
fisubrl
and
stos
pop
std
add
cmp
cmpsl
mov
pop
mov
mov
out
sti
mov
incl
rolb
fs
push
push
iret
sbb
lahf
pop
movsb
inc
mov
lret
xor
dec
push
notl
das
mov
push
cmpsb
xor
xor
in
iret
loopne
stos
mov
enter
inc
js
push
clc
sub
and
pushf
xor
cmpsl
xchg
ret
pop
cwtl
jecxz
fs
pop
add
adc
das
xchg
lret
rcr
in
out
cmp
pop
mov
sarl
mov
mov
mov
sbb
cmc
sbb
leave
adc
lock
mov
into
out
stos
mov
cltd
dec
mov
outsl
cld
outsl
adc
outsl
dec
ret
imul
push
cmc
sarl
xor
fisttpll
cmp
and
and
shrb
mov
stc
add
or
xor
mov
sub
iret
in
shrl
cltd
lods
in
repnz
lcall
fldenv
sbb
pop
fstpt
mov
outsb
adc
arpl
gs
ja
into
and
fwait
ljmp
bound
std
lock
xor
in
and
jecxz
jns
gs
xchg
mov
mov
xchg
stos
xor
mov
dec
lret
cmpsl
ret
mov
les
loop
jg
dec
fstpl
inc
rorb
xor
data16
sbb
lods
sbb
ror
pushf
and
inc
iret
sbb
push
push
cld
movsb
mov
cli
call
xchg
or
ljmp
and
push
shrb
or
cmpsb
mov
dec
pop
rol
sbb
xor
inc
daa
imul
insl
out
inc
push
sahf
push
cmp
psadbw
dec
in
mov
pop
negb
inc
aas
mov
shlb
add
test
pop
inc
xor
popf
inc
jecxz
scas
loope
andb
hlt
adc
fildll
fistps
mov
adc
xchg
pop
je
mov
pop
adc
pop
cltd
ljmp
inc
loope
lea
inc
add
insl
mov
mov
xor
lahf
add
sub
stos
imul
sbb
stc
mov
arpl
cmc
and
cmp
pop
popf
xchg
xchg
dec
pop
and
jbe
sbb
test
scas
fistpll
aas
adc
addr16
mov
cmp
sbb
sbb
je
mov
sbb
inc
clc
aam
jg
push
stos
pop
iret
out
outsl
rclb
hlt
add
out
cmp
dec
or
daa
call
cmpsb
adc
in
cmp
rcrb
es
push
dec
jne
cmp
jmp
aam
int3
sbb
add
mov
ljmp
sbb
iret
subb
sub
push
sub
cmp
pop
daa
sbb
cli
orb
sbb
cltd
xor
sub
fistpl
pop
fwait
sub
mov
and
xchg
sub
lods
out
sbb
dec
insb
mov
negl
loopne
xlat
sti
imul
fisubl
cmp
xchg
jns
xchg
or
fdivrl
adc
pop
adc
mov
pop
push
fcoms
shr
gs
mov
or
jmp
jl
clc
mov
aad
into
inc
lcall
loopne
xor
jno
ds
mov
jg
out
push
bound
fisubrs
adc
popf
cli
js
es
shll
pushf
ss
and
sub
xchg
mov
jle
jecxz
dec
insl
cmp
adc
in
xor
xor
add
int
or
ret
inc
pop
pushf
ret
clc
cmp
adc
test
cmp
xchg
push
sbb
sbb
aam
leave
fs
sbb
andl
or
dec
repz
pusha
arpl
sahf
add
adc
mov
mov
mov
xchg
inc
outsb
and
mov
daa
add
aam
xchg
mov
dec
inc
repnz
xchg
out
rol
or
push
lds
lahf
push
adc
fisubrl
fildll
jnp
cmp
mov
push
aaa
mov
out
std
inc
imul
dec
push
out
sbb
adc
ljmp
lret
out
jmp
jmp
mov
xlat
in
roll
sub
inc
aam
shrl
js
cmpsl
or
xor
push
add
pop
in
andb
inc
and
dec
sub
sar
lea
ret
jge
stos
pop
aaa
push
mov
or
and
fldenv
jnp
aam
jb
mov
leave
lret
xchg
int3
pop
out
pop
outsl
xor
sahf
dec
test
mov
mov
adc
sarb
mov
dec
xor
xor
push
mov
out
subb
inc
add
cmp
stc
xchg
aam
jno
data16
cmpsb
pop
xchg
out
outsb
sub
adc
data16
jno
add
fildll
xor
in
bsr
test
pop
pop
push
orb
pop
aam
xor
push
xorb
dec
loope
les
dec
jge
mov
mov
and
out
lcall
mov
xchg
repnz
lret
and
jno
js
loopne
mov
sub
cmc
cmpsl
cmp
mov
lcall
ret
ret
and
xor
jbe
rol
xor
leave
pop
insl
inc
ja
xchg
pusha
hlt
divb
dec
and
arpl
pop
sub
sbb
std
daa
pop
jb
stos
and
sub
cld
iret
jb
sti
fistpl
adc
mov
ljmp
cmp
ja
pop
or
out
iret
outsl
push
lods
mov
sub
dec
mov
xchg
idivl
xchg
test
adc
jg
arpl
dec
cmp
sbb
jne
fisubrs
add
adc
xchg
pop
lcall
push
mov
test
fdivr
mov
test
ret
mov
lcall
rcr
inc
int3
mov
in
cld
mov
add
cmpsb
scas
repnz
jno
pop
pop
push
pop
xlat
jns
test
lea
roll
ficompl
fidivrs
or
mov
dec
sbb
jmp
mov
cmp
or
imulb
and
push
loopne
inc
mov
or
outsb
out
xchg
mov
jno
jbe
iret
mov
shll
data16
test
xlat
je
std
loope
and
push
pop
push
inc
lock
push
adc
add
repnz
rclb
int3
mov
lret
dec
nop
sub
pop
push
popa
div
lcall
pop
sub
and
ss
pop
xchg
pop
or
inc
cmpsb
mov
mov
xor
std
shll
cmp
add
cmp
test
ret
cmp
xorl
mov
in
jge
pusha
fwait
mov
lret
xor
xchg
jns
push
mov
xlat
push
push
mov
mov
ja
or
and
or
ja
aaa
pmaxub
cmp
shll
inc
fcmovb
sbb
xor
and
inc
mov
into
arpl
leave
inc
add
or
mov
or
out
icebp
or
push
cltd
imull
pop
push
pop
push
push
push
movsl
jmp
cmc
shr
xor
dec
clc
add
jno
lods
syscall
sub
lahf
gs
jno
pushf
aas
mulb
pop
mov
mov
sub
xor
mov
in
inc
adc
sti
jnp
cwtl
and
loope
outsb
mov
xchg
dec
imulb
mov
rcl
cmp
insb
jns
cmp
mov
aad
aas
xor
movsb
lahf
add
in
or
inc
adc
cld
xchg
shlb
dec
in
cmpsl
arpl
int3
or
shrb
sbb
dec
scas
xor
mov
shll
icebp
shlb
mov
push
movsl
les
sbb
mov
aaa
pusha
bnd
std
and
or
dec
mov
notb
mov
pop
add
clc
pop
jge
pop
int
push
call
inc
rorb
or
mov
rorl
aas
or
pop
ret
ret
dec
jo
pushf
fcompl
adc
ss
ficoml
adc
jmp
add
out
pop
mov
loop
sbbl
push
pop
jb
pusha
xor
dec
push
push
push
clc
push
xor
dec
andl
jmp
cld
inc
push
jns
pusha
ja
or
sub
sbb
test
mov
sarl
fidivrs
mov
fs
and
jo
inc
test
dec
std
push
test
and
xlat
inc
mov
xchg
fucomp
or
rorb
push
aam
lret
xchg
shr
int3
dec
popf
out
in
xchg
add
jecxz
and
cs
and
push
testb
xor
or
jl
adc
aas
adc
jle
cmp
mov
cmp
xchg
sti
push
inc
mov
push
mov
jae
fnstsw
scas
adc
ret
xor
adc
xorb
jecxz
ds
jp
mov
loope
rcl
pop
outsl
out
xchg
pop
enter
aad
mov
ljmp
movb
insl
fisubrl
in
cmp
je
fisubrs
xchg
pop
sbbl
test
xchg
jo
rep
push
mov
xchg
outsb
or
in
adcl
jp
call
out
cmp
pop
push
xor
and
pop
mov
jp
mov
xchg
cmp
pop
and
fdivrs
movsl
scas
fiaddl
or
fbld
aas
fists
shll
xchg
sar
stos
adc
inc
push
push
daa
sbb
pop
jns
cld
mov
mov
aas
sbb
das
inc
stos
ja
lret
cltd
addr16
cmp
outsb
roll
scas
mov
das
xorb
outsb
push
or
push
mov
rorl
adc
out
in
inc
and
lods
adc
or
mov
jmp
ficomps
test
adc
cmp
xchg
inc
pop
sbb
out
jmp
nopl
push
sub
enter
aam
negb
pushf
jecxz
sbb
mov
push
mov
movsl
xchg
mov
inc
mov
jg
cmp
repz
hlt
and
lds
add
adc
out
mov
or
inc
mov
mov
les
ficomps
fsubrl
stos
or
iret
subb
mov
adc
and
sub
out
clc
sti
int
subl
jae
lret
jb
sbb
ret
cmc
mov
jmp
rcrb
jp
int
or
int
sahf
push
sub
xor
test
test
inc
jp
into
sar
cmp
push
adc
xchg
push
mov
icebp
mov
mov
push
cmpsb
pusha
les
add
pop
mov
push
or
jecxz
xchg
test
or
das
or
dec
stos
cwtl
and
int3
subb
fidivl
sub
test
add
movsl
fmuls
jbe
arpl
sub
mov
xchg
fdivp
lret
xor
fstps
lods
enter
pop
in
lahf
push
enter
pop
sbb
orb
loop
add
notb
jb
jecxz
xorb
out
subb
jl
icebp
xlat
ret
outsl
cmpsb
add
movsl
pop
cmpsb
out
inc
ds
loopne
out
or
dec
clc
jle
mov
inc
jb
ss
or
mov
or
pop
pusha
dec
aam
das
sub
stos
bound
js
mov
fiadds
push
loopne
rol
sbb
cmpsl
fmuls
sbb
xor
mov
mov
cmp
fldl
jge
push
jg
fsub
add
fcoml
aaa
adc
dec
xor
and
pushf
mov
xor
addr16
pop
aad
push
inc
mov
cli
imul
out
pop
add
push
cli
push
cmpsl
mov
mov
dec
mov
add
or
mov
mov
or
push
adc
pop
scas
hlt
xchg
daa
jl
test
jecxz
fs
repnz
sub
xchg
mov
pop
imul
xchg
sub
and
dec
dec
fidivl
jmp
sub
inc
int
sbbl
icebp
and
lock
jbe
mov
sbb
test
pop
dec
pop
lahf
ds
push
cwtl
pop
shl
call
and
push
mov
hlt
pushf
dec
subb
sub
testb
and
push
mov
xchg
fcmovnu
loope
loopne
xchg
sbb
jge
cmp
bound
sarb
or
mov
rol
dec
add
mov
cmpsb
mov
mov
mov
push
ljmp
dec
dec
xchg
and
mov
aaa
jb
data16
mov
push
sti
jno
mov
sbb
and
andb
hlt
jle
lods
inc
or
adc
xor
or
outsb
lret
xchg
or
cltd
inc
fidivrs
icebp
push
push
arpl
or
sub
aam
ljmp
sub
mov
cmpsl
ds
sbb
cmp
dec
outsl
xor
lock
stos
cmp
lds
out
cmp
shlb
sarl
add
hlt
mov
mov
and
popa
xlat
dec
jmp
or
mov
push
sti
mov
pop
and
stos
clc
and
pop
and
cmpsb
das
add
stos
pop
imul
lds
ja
cmp
call
sub
push
pop
mov
xchg
inc
fs
jbe
ds
jb
pop
in
lods
push
push
cwtl
fidivl
cmp
scas
std
pop
dec
cli
jmp
mov
sub
outsb
cmp
popa
mov
mov
jne
inc
mov
cld
popf
repnz
xchg
stos
mov
push
jb
cmpsl
dec
cmpsb
outsb
test
hlt
scas
data16
xor
mov
jmp
dec
jmp
shrb
les
pop
out
mov
fcmovb
out
insl
xor
scas
and
and
outsb
call
repz
imul
jno
mov
clc
pushf
test
push
mov
fstpl
cli
rorl
xchg
out
inc
push
stc
es
scas
pusha
lock
mov
popaw
jo
pop
or
push
pop
shrl
lret
or
mov
mov
pop
mov
and
mov
cltd
jecxz
iret
call
stos
pop
insl
dec
shl
mov
clc
shlb
insl
loop
push
popa
jmp
xchg
shll
lea
adc
sub
mov
es
pop
dec
mov
xchg
cmp
pop
ss
push
xchg
adc
shll
adc
loop
dec
jnp
fnstsw
jnp
jge
jecxz
or
das
mov
sbb
lods
add
ljmp
cmpsb
cmp
enter
xlat
push
movsb
sbb
popf
int
and
ja
or
ljmp
repnz
lcall
aad
push
xchg
aas
cmp
push
add
xchg
clc
mov
pop
xchg
sbb
mov
int3
je
add
aas
add
ds
mov
cmpsl
mov
in
sub
fdivs
cmp
mov
jmp
pop
inc
dec
insl
ret
movsb
add
cwtl
adc
push
or
ss
imul
xor
jbe
pop
popa
mov
stc
je
push
push
push
add
fstp
and
lea
ficomps
xchg
push
jno
shr
add
xor
and
popa
adc
in
jecxz
push
pop
cwtl
jae
xchg
notb
sbb
aas
jg
sub
cltd
orl
and
push
sub
addb
jp
inc
incb
stc
sub
jp
push
loop
lret
or
add
in
test
stos
jbe
shlb
mov
cmovo
dec
sbb
orb
mov
jecxz
sti
lods
pop
cmc
dec
aad
jb
or
mov
mov
jp
or
mov
adc
ss
or
mov
sbb
xor
fildll
xchg
push
out
mov
xchg
subl
mov
sbb
shrl
scas
sbb
add
mov
insl
das
xchg
and
jp
jo
les
push
adc
inc
ret
repnz
xor
mov
fs
nop
stc
lods
lret
stos
daa
and
xor
mov
rcl
mov
mov
loop
pop
push
dec
fmull
adc
cmpsb
imul
inc
adc
icebp
push
mov
mov
sbb
jne
push
xor
aad
out
or
in
cltd
xor
out
cli
push
clc
jbe
add
scas
push
jmp
push
jns
inc
inc
outsb
ret
fimull
and
lods
xchg
mov
cmp
ljmp
stos
in
loop
gs
mov
arpl
jnp
cmp
xchg
mov
mov
mov
ret
sbb
inc
inc
lods
mov
xor
fs
out
shll
in
rorl
stos
mov
adc
push
cmp
imul
rcl
jmp
rcll
rcr
cli
mov
cli
jo
pop
bound
cmovg
add
out
inc
xchg
int
and
fld
mov
mov
leave
dec
dec
std
xchg
js
shl
lahf
ss
cmp
mov
fwait
or
bound
scas
mov
mov
ljmp
sbb
add
rcrl
sbb
mov
clc
mov
inc
xchg
sahf
and
movsbl
dec
js
ret
dec
data16
jo
fldenv
pop
jb
xchg
jne
out
pop
push
push
ficoms
test
outsb
mov
dec
pop
decl
mov
push
stc
jns
add
cmp
seto
enter
sbb
lret
lock
int3
sub
adc
push
mov
pushf
out
out
int3
imull
jns
in
out
adc
add
mov
push
mov
jns
jecxz
jo,pt
jmp
or
jno
out
lcall
lods
push
or
mov
lcall
xor
loope
sub
pop
loop
xchg
adc
ffreep
jmp
cmpsb
push
icebp
xchg
test
or
imul
jle
xlat
das
out
ret
mov
decb
imul
mov
lock
inc
lret
sub
and
dec
fsub
mov
jno
aaa
mov
jns
xchg
test
push
insb
mov
cmp
adc
fcomip
lock
rorb
mov
popa
sub
outsl
or
int
push
in
jmp
sbb
cmpsl
psubq
sub
repz
enter
call
out
cmp
and
stos
cmc
dec
xchg
sub
sub
jecxz
in
and
bnd
scas
rcl
jbe
ffreep
movsb
mov
imul
sbb
jbe
jne
hlt
mov
pop
mov
pop
mov
test
mov
or
jp
xchg
out
and
inc
xchg
inc
cmp
fstl
fsts
daa
mov
add
movsb
xchg
jg
mov
add
and
roll
cmpsb
lods
or
cltd
ja
jge
sub
imul
cmp
xchg
test
lea
clc
int
mov
scas
movsl
adcb
jecxz
ljmp
lret
mov
in
pop
dec
aaa
pop
adc
faddl
or
and
sub
mov
jae
bound
in
stc
fisttpll
jbe
dec
sbb
dec
jg
in
cld
cld
xor
cmc
popa
mov
mov
mov
jns
outsl
sub
jnp
cmpsl
xor
cmpsl
jp
sub
iret
sub
jmp
imul
jno
shr
fldl
fsubs
iret
push
sbb
jge
xchg
sbb
mov
sbb
aam
insb
loop
add
xor
push
dec
gs
cwtl
mov
mov
push
lods
test
cwtl
mov
in
jne
sbbl
dec
lods
lret
mov
mov
iret
bound
outsb
xlat
jae
and
cwtl
and
jnp
addb
xchg
outsl
rolb
andl
std
xchg
popf
cld
ja
leave
or
add
arpl
mov
cmc
jmp
push
mov
test
ds
jg
divl
rol
repz
mov
aad
in
inc
repnz
insl
sbb
ret
jo
lds
dec
ficoml
aam
movsl
repnz
jp
outsl
lock
mov
int
adc
mov
gs
lcall
pop
fs
xchg
out
fcomps
daa
std
jp
mov
fs
fiadds
mov
adcl
mov
sbb
stc
movsb
fwait
sub
mov
nop
add
and
pop
fists
rclb
insb
cmc
mov
imul
jns
in
pusha
push
adcb
dec
sub
and
les
mov
arpl
push
or
imul
and
enter
or
mov
mov
frstor
push
stc
test
mov
dec
int
add
imul
pushf
sbb
mov
add
mov
sbb
add
jo
scas
mov
xor
mov
add
jns
inc
insl
mov
dec
pushf
dec
sahf
xchg
inc
xchg
mov
mov
hlt
int3
add
lahf
xchg
out
jp
push
sub
xor
pop
jle
xchg
jo
shrl
sub
or
xor
inc
push
popa
test
jnp
inc
out
aad
dec
push
stos
push
ror
jno
xor
sbb
sub
bound
js
dec
imul
aad
mov
push
mov
rcr
rcll
push
mov
getsec
mov
and
mov
push
lock
xchg
and
jle
icebp
mov
pop
fistpll
out
mov
aam
inc
mov
cltd
mov
loope
dec
inc
dec
xchg
add
decl
fcomip
add
rcll
mov
xor
clc
ret
sub
add
mov
std
lea
int3
cmp
cli
adc
ja
sub
push
mov
jge
xor
push
inc
jb
mov
sti
pop
mov
xor
test
sbb
xlat
jp
sbb
fs
jne
es
sub
cmc
adc
xor
cmc
ja
xor
cmpsb
inc
add
mov
inc
pushf
mov
inc
or
test
ja
sbb
cmp
push
jmp
inc
inc
mov
xor
sti
adc
mov
daa
into
pop
cmp
adc
jp
jmp
and
es
xchg
jg
sbb
dec
or
mov
test
dec
cmpsl
aas
jmp
int3
mov
xchg
out
test
jb
scas
mov
inc
aad
into
cmp
lret
mov
push
inc
rcl
sub
pop
xor
arpl
repnz
bound
outsb
xchg
sahf
lret
js
jg
push
sbb
addb
mov
cmp
shl
pushf
sub
pop
push
sti
xor
xor
rol
dec
pop
xchg
or
and
mov
add
lea
jb
movl
int3
push
nop
jb
jo
xor
add
cmp
mov
movsl
cmpsl
xor
or
cmpsb
bound
ljmp
adc
sub
lds
inc
or
shll
ss
cmp
test
fwait
inc
cs
divb
popf
inc
ljmp
push
fnstsw
fs
cs
sub
xchg
std
push
adc
cmp
stc
inc
mov
loopne
testb
inc
das
push
lret
xor
lret
ret
hlt
daa
mov
cmp
jo
adc
cmp
mov
and
test
cmp
outsb
adc
push
shlb
outsb
aaa
inc
dec
jp
xor
cld
ret
cmpsl
and
mov
outsb
imul
sbb
cwtl
xor
int3
push
jp
lds
movsl
push
inc
daa
mov
sbb
mov
push
pop
adc
jl
push
jae
orb
sbb
pop
adc
test
imul
lock
jnp
insb
mov
fstl
jb
lret
xor
adc
cmpsb
movsb
mov
mov
jge
xchg
loop
mov
js
out
pop
addl
pop
push
push
sbb
xchg
or
sub
pop
xchg
push
push
int
iret
test
div
imul
ds
nop
repz
rcrb
xchg
and
in
xor
inc
push
movsb
test
cld
pop
aas
pop
or
sbb
clc
in
test
cmp
add
fcomps
pop
jns
das
aam
jle
vmread
xor
inc
lret
lods
mov
and
out
mov
adc
mov
incb
or
xlat
iret
in
mov
jecxz
dec
mov
mov
mov
xchg
xor
jae
es
pop
push
stc
imul
dec
insb
sbbb
sub
jo
inc
rcll
decl
into
movsb
or
push
xchg
jb
testl
and
ret
push
xchg
xor
loopne
inc
jbe
out
pop
insl
insb
sbb
push
gs
stc
xlat
mov
sub
xchg
rcl
fcomps
sbb
mov
xchg
push
and
or
ljmp
xchg
int
sub
adc
mov
inc
and
movsl
sahf
and
inc
call
jp
out
push
int3
repnz
push
cmp
mov
jle
ficompl
or
icebp
in
test
rsqrtps
jb
fisttpl
hlt
push
shr
ljmp
push
fwait
std
inc
mov
mov
or
lds
add
lret
shr
js
sbb
lret
sub
add
sub
es
sub
ss
push
xchg
aas
shrl
and
mov
rcrl
xor
inc
cli
add
lret
addr16
add
mov
xchg
int
sub
cmp
add
ss
cmovns
add
imul
nop
or
cmpl
repz
aad
push
outsl
sbbl
outsb
subl
aad
and
neg
push
xchg
jmp
or
mov
jp
sbb
stos
jno
stc
dec
cli
pusha
cmpsl
pop
mov
out
xchg
lret
out
nop
add
xorl
adc
js
clc
test
inc
imul
cmpsb
xlat
aas
cmpsb
cmc
out
and
jae
andl
enter
cld
insb
jb
sub
outsb
push
ja
add
loopne
push
addl
insl
pop
sbb
pop
pop
sbb
push
cmp
out
adc
popa
test
cmp
or
out
stos
sbbl
sub
inc
mov
out
jp
iret
sbb
sbb
dec
jmp
push
test
xlat
movsb
ffreep
jp
xchg
or
or
xor
cmp
push
xchg
adc
or
rolb
shrl
lahf
stc
cmp
mov
aad
data16
iret
xchg
daa
cmpsl
push
xorl
fildll
sbb
push
add
mov
cmpsb
and
adc
mov
or
cmpsl
xor
push
lods
hlt
pusha
inc
fstp
sti
cmpsb
sub
testl
jnp
cmp
dec
iret
mov
push
lods
ja
pusha
pop
fldt
addr16
pushf
cltd
xchg
aaa
cld
lods
aam
pop
lcall
push
or
xchg
aad
or
jno
mov
mov
in
jno
pop
xor
cld
je
sbb
nop
xlat
insb
pop
outsb
jle
adc
cmp
in
sub
mov
mov
mov
hlt
popa
and
fbld
ss
xchg
dec
sub
int
sub
or
or
cmp
mov
hlt
or
outsl
push
mov
pop
aaa
push
push
jo
mov
mov
fstps
test
sub
xchg
xchg
leave
inc
xor
popf
inc
popf
jg
lds
enter
push
int
enter
cmpsl
or
fcomps
scas
fistpl
adc
aaa
fcompl
ret
js
mov
pushf
lods
iret
mov
cld
or
out
out
push
cmp
stos
pop
push
stos
lcall
aad
and
add
mov
pusha
push
pusha
xchg
in
mov
mov
adc
cli
addr16
mov
adc
rcr
push
mov
xor
jmp
or
cwtl
in
or
adc
mull
push
scas
add
cwtl
or
aaa
roll
sti
ljmp
mov
insl
lret
add
ja
lods
insb
xchg
xor
cmp
xor
xorb
cmp
aaa
ljmp
jp
pop
xlat
repnz
rcr
cld
and
les
nop
mov
orb
arpl
jl
mov
stos
inc
shll
xchg
imul
push
int3
test
pop
jo
mov
jnp
cmp
sub
stos
sbb
les
inc
popf
pop
aad
insb
scas
adc
in
xchg
lods
xor
lret
mov
arpl
nop
popf
dec
int3
in
femms
push
push
pop
imul
jmp
ss
das
arpl
adc
mov
inc
aad
or
fimull
scas
pop
dec
mov
or
mov
mov
imull
aad
add
test
push
sarl
fisttps
bound
outsb
push
nop
jne
sarb
stos
sub
jmp
ret
repz
xchg
sub
push
mov
enter
cmp
jp
inc
aad
lock
rcrl
dec
xlat
inc
adc
cmp
sub
in
loope
fisubl
add
inc
leave
paddd
data16
nop
push
enter
mov
add
int
pusha
inc
adc
xor
divb
cwtl
lock
dec
sub
xor
cmpsl
push
mov
test
xor
inc
xor
jo
inc
nop
and
mov
cld
mov
mov
pusha
pop
jg
arpl
jl
popf
stos
imull
xchg
sbb
jp
in
aam
aad
lret
xor
xchg
in
xchg
sub
jle
push
jecxz
in
in
notb
insb
lcall
add
xorl
jbe
xor
adc
xchg
adc
and
fcomps
mov
fmull
stos
sarl
jb
adc
repz
jp
mov
push
xor
or
mov
fisubrs
daa
mov
xchg
jbe
sbb
outsb
pop
fcmovnu
stc
shll
xchg
bound
rcl
enter
imul
clc
mov
test
mov
mov
or
adc
in
xchg
pop
inc
sbb
mov
cwtl
sbb
movsb
jp
pushf
ljmp
aam
mov
dec
sahf
push
jp
sub
lods
cmp
test
arpl
call
js
sbb
movsb
and
aas
push
sti
jmp
pop
movsl
outsb
mov
add
test
sub
in
lret
test
loope
pushf
sub
out
add
add
lods
leave
dec
pop
and
push
sbb
mov
mov
push
iret
outsb
xchg
cmc
and
push
fcmove
fistpll
cli
insb
push
cmp
inc
mov
addr16
mov
push
mov
pop
mov
std
lcall
pop
out
mov
sub
imul
push
lret
inc
mov
mov
jmp
aam
xor
test
popf
xor
orps
sbb
sub
cmpsl
rcl
push
daa
lods
sub
jb
loopne
addl
push
sahf
adc
push
xchg
and
sti
test
repnz
jmp
rcll
xchg
mov
or
xchg
push
jmp
loop
je
in
sub
shlw
lahf
negl
pop
mov
inc
int3
cli
faddl
push
pop
fstpt
aas
je
stos
add
inc
mov
dec
push
xor
push
shlb
and
jmp
dec
mov
xlat
outsl
aam
sbb
sub
xor
outsl
cmp
inc
mov
mov
push
add
inc
xor
mov
lret
hlt
enter
mov
gs
mov
call
int
lds
xchg
push
jmp
aas
out
outsb
jmp
push
mov
sbb
cmc
sub
sbb
test
dec
sbb
jp
test
xor
add
lods
push
lcall
xor
repnz
sub
ja
ret
stos
data16
fs
ja
lret
sub
int
mov
fstl
pop
pop
add
mov
cmpsb
in
sub
mov
push
jecxz
push
aad
stos
mov
test
gs
mov
leave
mov
cli
xchg
add
xor
call
shll
test
pop
gs
adc
mov
scas
shr
pusha
gs
pusha
push
mov
popf
push
dec
daa
sbb
pop
lcall
jo
data16
mov
arpl
lods
mov
dec
outsl
cmpsb
pop
mov
dec
pop
cmpsb
pop
outsl
inc
cmpsb
cmp
xchg
jg
das
push
pop
jo
mov
cld
jle
or
inc
mov
pusha
xchg
jae
iret
xor
fsubrl
pop
sub
out
shll
dec
es
add
add
sbb
imul
paddw
cmp
mov
cli
andl
aaa
outsl
loopne
adc
sub
inc
pushf
sub
ficompl
xor
ds
or
mov
lahf
mov
cmc
adc
push
jmp
ror
sub
mov
je
clc
jmp
sub
aas
cld
xor
jnp
pop
ret
lock
jmp
pop
mov
push
mov
jg
add
lcall
sahf
cmp
cld
xlat
sbb
mov
ficoms
test
mov
mov
das
shl
cmpl
cwtl
aad
adc
mov
jae
lcall
popa
sarl
fcmovnb
out
decb
pop
xor
sarl
in
movsb
xchg
fbld
adc
sbb
xchg
xchg
inc
sbb
mov
stc
mov
hlt
in
cmp
inc
mov
test
popa
jo
inc
divl
pop
push
push
jne
xchg
and
imul
dec
inc
repz
mov
jp
leave
shlb
xchg
rcrl
jmp
xchg
mov
stc
jne
inc
dec
into
mov
daa
arpl
ljmp
push
loop
mov
and
push
adc
leave
xchg
push
ja
or
and
jnp
sub
cmc
mov
push
in
inc
push
push
adc
xchg
xchg
and
stos
add
nop
add
int3
sbb
cmpsl
aas
mov
repz
loope
loop
jne
cmp
or
inc
add
pop
lea
mov
cmp
mov
xor
xlat
hlt
movsl
stos
pop
fsubs
arpl
dec
pusha
jl
pop
ljmp
jl
jle
sbb
jl
dec
jnp
jmp
inc
ds
push
stc
scas
sub
pop
adc
xor
js
mov
push
jp
fcmovb
push
ljmp
and
jmp
jnp
int
pop
inc
fwait
mov
mov
mov
pop
es
test
jmp
jb
in
add
push
je
cld
cmpsb
mov
push
std
mov
pop
and
push
pop
fimuls
mov
sbb
mov
xchg
inc
add
and
inc
xor
addr16
mov
pop
les
popf
and
adc
movsl
cmp
scas
jns
in
xor
cld
sahf
jecxz
pop
roll
xchg
mov
int
aad
jns
inc
sbb
hlt
fldenv
and
mov
adc
inc
mov
sub
fisubl
stos
les
out
mov
cmp
lods
lret
iret
dec
sbb
idiv
xchg
sahf
call
in
add
in
fistpl
inc
xlat
mov
or
or
cmp
mov
jecxz
js
xor
scas
iret
cmp
test
mov
test
cmp
or
test
test
or
mov
sub
jae
sub
mov
cmp
fldenv
test
stos
add
jge
sbb
or
cmp
adcl
cltd
sub
insl
sub
mov
mov
fisubrl
out
pop
dec
into
sub
je
add
adc
jns
cmpsl
push
sbb
add
rcr
adc
cmp
pusha
xchg
inc
mov
fisubl
push
mov
lds
jb
imul
std
jb
out
pushf
push
and
js
outsb
std
mov
xchg
out
or
pop
pop
xor
aas
adc
notb
popf
cmpsl
mov
sbb
gs
mov
adc
dec
shl
testb
jns
imul
dec
das
xor
jp
push
mov
xchg
fstpl
fisubrl
push
adc
mov
add
ss
test
loop
xchg
xor
dec
pop
inc
or
and
mov
mov
arpl
push
lods
dec
add
xor
jg
push
cltd
sbb
mov
ja
jge
push
adc
push
xchg
cmp
sbb
xchg
add
icebp
clc
mov
sarb
pop
cmp
cs
lahf
pop
cmp
xchg
pusha
hlt
in
sub
repz
pushf
daa
arpl
ljmp
cmp
les
fiaddl
mov
call
cmpsl
add
sub
sbb
pop
lret
jae
stos
sbb
cmp
leave
test
cmpsl
mov
in
addr16
outsl
test
repnz
rclb
aam
lea
movsl
jecxz
les
cmp
jno
push
adc
jne
scas
fidivrs
cmp
xor
leave
add
dec
sbb
pushf
shrl
cmovne
sti
int
fcoms
xor
ja
icebp
ret
cmp
push
sub
movl
cmp
cli
cmp
ja
imul
xor
out
sub
aas
movsb
iret
insb
pushf
inc
add
pop
sbb
sbb
mov
sbb
iret
ss
imul
pushl
aas
cld
lcall
jo
cmpsl
jnp
int
fisubs
int3
xor
mov
adcl
ficoml
mov
pop
ja
mov
stos
push
and
int
xchg
int
addl
jecxz
jecxz
popf
mov
jne
mov
fwait
mov
movl
push
daa
pop
and
jnp
aas
subb
mov
movzwl
add
cmp
imul
adc
mov
test
call
nop
fisubrl
add
ss
dec
and
add
dec
nop
jle
ds
icebp
lahf
push
test
pop
dec
sbb
repz
mov
or
sahf
fnstenv
andl
dec
shlb
dec
jns
and
mov
int3
jno
sub
out
xchg
mov
xchg
inc
add
xchg
pop
lret
out
xchg
adcb
in
xor
mov
mov
fldenv
sub
mov
and
ja
xor
arpl
fldcw
mov
cwtl
adc
int
jmp
mov
mov
jecxz
lret
jl
test
mov
jne
roll
cld
push
xchg
clc
pusha
daa
jp
push
mov
cltd
mov
and
test
jle
dec
mov
pop
mov
sbb
mov
mov
mov
bound
inc
movsl
loope
sub
jl
in
mov
add
lcall
pop
mov
ffree
mov
mov
jl
or
xchg
push
aam
dec
cmpsl
fimull
add
inc
test
pop
iret
gs
rorb
lcall
std
xor
incb
adc
sub
out
xchg
js
sarl
add
or
sahf
sub
lcall
fistpl
in
and
push
inc
insb
sub
mov
jmp
mov
into
aam
jnp
lock
adc
loop
test
leave
push
jmp
dec
add
cmp
or
icebp
int
mov
cwtl
push
out
pop
push
sbb
mov
loope
adc
inc
cld
std
and
push
dec
fs
xlat
xlat
cli
push
mov
icebp
or
mov
out
mov
aad
or
mov
cli
ds
xchg
movsl
mov
and
push
cmp
push
jne
insl
movsl
inc
sbb
or
pusha
sub
ds
nop
sbb
sbbb
sahf
mov
push
sbb
repnz
ret
fdivrl
dec
xlat
fmull
rorb
lock
addr16
adc
clc
pop
cli
pop
xchg
jg
add
dec
sub
enter
add
out
add
sub
dec
movsl
test
mov
sbb
inc
push
imul
dec
lods
daa
nop
xchg
adc
inc
cwtl
sti
lret
and
fwait
lret
sbb
in
push
sarb
jb
daa
imul
sub
out
xchg
dec
jno
xor
int3
insb
arpl
mov
or
movsb
sarb
or
xchg
fbld
js
pop
cmpsb
and
repz
int
scas
outsb
push
sbb
test
pop
sbbb
cltd
add
sbb
add
mov
push
outsl
mov
sub
insb
clc
mov
jg
scas
mov
mov
nop
pop
ror
pop
lods
jb
sub
xchg
sub
push
std
and
mov
fcomp
inc
pop
pop
mov
inc
add
rorb
and
shr
xchg
lods
lods
add
iret
inc
test
dec
or
imul
inc
aaa
daa
adc
adc
outsb
gs
jne
xor
add
sub
in
jmp
and
push
xor
movsb
testl
roll
jo
or
or
mov
jae
test
and
mov
test
in
cmp
pop
loope
ficoms
mov
adc
pop
pop
sbb
inc
pop
aad
lret
loop
insb
xchg
mov
stos
rcrl
fcomip
stc
movsl
fucomp
and
inc
imul
dec
test
mov
push
dec
ds
cmp
movsl
sahf
js
or
or
dec
pop
push
jns
mov
movsb
add
mov
mov
pandn
sti
sar
dec
mov
fdiv
pop
and
mov
add
and
sbb
pop
cwtl
jo
repnz
mov
xor
fcomi
mov
add
push
out
cld
push
push
shrl
loopne
lret
dec
imul
mov
jb
mov
aad
sbb
lret
sbb
pop
push
aad
xchg
mov
xor
inc
xor
pusha
lret
mov
int3
loop
dec
aad
clc
js
jp
pop
jecxz
cld
mov
sub
and
or
dec
sahf
repz
in
jnp
adc
les
ja
push
icebp
or
push
mov
rcrb
push
sahf
jmp
pushf
jecxz
mov
enter
and
adc
or
push
sbb
into
pop
leave
xchg
test
js
cmpsl
cli
mov
out
sahf
xchg
xchg
jo
mov
ds
lcall
mov
mov
cmp
push
mov
dec
xor
std
jns
ljmp
jne
insb
imul
lret
push
scas
ret
dec
mov
sbb
push
sub
push
cmp
gs
int
shll
pop
xor
shr
sahf
int
dec
fwait
in
lret
push
mov
mov
stc
pop
and
dec
loop
cmp
adcl
hlt
imulb
sbb
popa
lret
test
lock
jno
lcall
mov
cltd
ljmp
add
ret
pop
fdivrl
push
into
jae
add
push
lahf
fmul
jo
push
push
jae
movl
cmp
or
aas
pop
jo
push
popw
icebp
push
js
aas
jle
test
pop
addl
cmovp
aaa
push
xor
fcomip
pop
add
pop
and
xchg
rcr
or
fnstcw
sbb
add
mov
ror
insb
and
xchg
push
dec
popf
adcl
add
mov
out
adc
cmp
and
and
pop
scas
push
sub
adcl
sbb
sbbl
mov
add
loop
pop
pop
out
stos
xchg
or
into
adc
xchg
pop
scas
fwait
mov
popa
xor
stos
mov
mov
popa
lahf
mov
dec
xchg
adc
pop
inc
inc
or
dec
pop
mov
or
and
push
out
bound
rol
repnz
or
fidivl
mov
addr16
cmpb
adc
in
out
mov
hlt
fcomip
pop
lcall
pop
xchg
mov
ds
mov
mov
mov
sbb
mov
sar
mov
mov
cmc
mov
in
push
adc
enter
nop
or
mov
je
sbb
mov
inc
arpl
sbb
in
iret
into
test
jecxz
sub
xchg
push
dec
mov
sarb
aas
js
insl
popf
adc
ficomps
xchg
mov
ss
or
ret
jnp
movsl
inc
mov
mov
loope
pop
lret
rol
insl
pop
jmp
pop
in
or
push
lea
ficoml
lds
shll
adc
lods
mov
sbb
mov
lods
push
scas
jecxz
inc
xor
mov
add
pop
xchg
repnz
aaa
insl
lds
subl
mov
ja
in
jb
sbb
lea
movsb
es
jle
mov
insl
or
mov
int3
xor
testl
push
imul
xchg
fcomps
cmc
in
push
mov
sub
jo
jbe
cwtl
pop
cmpsl
cmp
and
cmp
jg
mov
mov
fsubrl
jns
dec
xchg
int
mov
in
push
mov
ret
jbe
pop
pop
push
rclb
inc
ss
jmp
in
andps
pop
jo
stos
aaa
add
flds
sahf
stc
add
sbb
sbb
cld
iret
leave
mov
pop
clc
jb
push
pop
add
push
test
dec
cmpsl
adc
inc
scas
adc
testb
jo
rorl
stos
fmull
daa
clc
adc
sub
ret
push
loop
mov
rcll
mov
repz
xchg
pop
aam
andl
das
jne
shll
and
push
clc
sahf
mov
js
popa
sbb
push
inc
xor
add
push
push
mov
mov
cmp
test
xor
xchg
pushf
or
test
inc
xor
mov
mov
les
push
cmp
cmp
je
xchg
ret
stc
pop
or
ret
or
or
mov
adc
push
in
or
iret
popf
sbb
int
cmp
mov
push
arpl
scas
mov
inc
adc
test
fisubrl
shl
insb
aad
xchg
and
push
fisttpll
mov
push
mov
mov
pop
jnp
cwtl
adc
sti
loope
mov
divl
test
loope
rorb
js
cmp
lret
repz
pop
and
pop
arpl
mov
fsubrs
fdivrp
out
cmp
xlat
imul
pop
sti
arpl
inc
or
and
mov
ficomps
cmc
mov
xchg
std
dec
std
ret
jnp
xchg
test
jnp
inc
push
xor
cmpsb
jno
mov
mov
shlb
loopne
mov
out
mov
ret
ds
pushl
filds
jb
ret
push
sub
addr16
loope
bound
inc
push
add
ljmp
dec
pop
testl
mov
popf
xchg
add
sub
popf
or
in
push
fsubrl
inc
shll
jg
dec
cmc
sub
fnstsw
sbb
sbb
movsl
dec
bound
mov
or
lcall
mov
inc
cwtl
insl
jle
and
ljmp
cmc
xchg
cmpsl
push
filds
mov
mov
je
dec
je
mov
roll
sbb
js
or
mulb
mov
dec
add
scas
push
sti
push
pop
push
loope
xchg
cmpsl
scas
jno
mov
push
into
sti
xor
lret
in
jns
repnz
or
aas
mov
cmp
test
and
push
shrl
dec
adc
xor
test
rorl
or
push
pop
pslld
xchg
or
xor
and
insl
iret
int
leave
mov
lea
or
in
nop
mov
cld
jae
pop
cmp
gs
mov
pop
jle
xor
jbe
aam
aam
cmp
mov
xor
dec
ret
inc
dec
in
int
jb
rcr
ss
xor
les
aaa
xor
ret
adc
mov
mov
out
mov
xor
pop
push
adc
mov
lret
xchg
ljmp
fs
fmulp
mov
jmp
mov
int3
jecxz
inc
fsubs
andb
out
scas
repz
lea
push
je
cmp
sbb
and
jle
xchg
jg
imul
mov
out
mov
lret
push
xchg
add
fs
add
stos
mov
sub
dec
jns
scas
sub
xchg
xchg
imul
inc
xchg
lods
push
mov
addr16
add
mov
icebp
cmpsb
inc
enter
clc
add
es
and
aad
sbb
pusha
mov
mov
aam
fwait
in
data16
xchg
push
mov
inc
xor
mov
stc
test
cmpb
lret
mov
cltd
mov
pop
cmp
ficompl
jbe
test
mov
testl
enter
xor
sbb
mov
into
repz
push
sub
int
or
test
ret
jp
ss
mov
sbb
dec
xchg
mov
push
mov
and
or
jl
cmp
add
pop
pop
jno
rclb
fsubr
and
dec
and
ljmpw
daa
int3
push
push
nop
sbb
dec
in
dec
inc
lret
adc
in
pop
inc
int
inc
cmp
jl
mov
scas
inc
shrb
cmp
cld
xor
push
jb
inc
cwtl
aad
pop
xlat
jns
lock
mov
and
pop
push
stos
add
jp
xor
push
push
imul
aas
jge
outsl
push
repnz
add
adc
insl
mov
pushl
xchg
jnp
mov
sbb
popa
push
movsb
aas
push
mov
and
lcall
push
xchg
lds
pop
mov
push
loopne
bound
and
lret
pop
hlt
cwtl
int3
jp
repz
test
cmpsb
pop
push
or
mov
cmp
sbb
cmpsb
shll
daa
filds
or
jmp
sbb
jno
jbe
sub
stos
pop
repz
cmp
aaa
gs
mov
ror
aam
adc
ja,pt
cmpsl
sub
fiadds
adc
pop
jns
jae
lret
out
std
and
fiadds
arpl
xor
sahf
orl
in
and
push
lods
aad
jge
int3
cmp
or
mov
imul
xor
or
xor
or
jnp
dec
push
insl
leave
loope
insb
fisttps
mov
aad
xchg
pop
scas
sbb
cmp
xchg
push
into
fsubrp
leave
mov
jl
jno
out
sahf
out
pop
aad
mov
aas
push
and
inc
loopne
iret
inc
mov
push
dec
andb
inc
lret
ljmp
lods
xchg
adc
xchg
call
sbb
insb
push
cld
inc
scas
aam
ljmp
ljmp
inc
outsl
push
vmovq
repz
test
icebp
fidivl
adc
xchg
cmc
aam
push
or
or
xchg
mov
stos
push
dec
stos
xchg
js
mov
cmpsb
jge
mov
outsl
scas
adc
movsl
xlat
test
xlat
and
mov
push
dec
ret
push
inc
cmp
testb
pop
pushf
and
out
sub
inc
adc
dec
fs
ret
push
lock
mov
mov
clc
sub
jp
outsb
jbe
cmp
lods
add
mov
loopne
mov
pushl
aaa
inc
ss
lret
fsubrs
sbb
jge
movsl
mov
les
add
popf
rcrl
pop
mov
test
jb
andl
adc
loop
addb
xlat
or
xor
mov
jp
fistpll
das
jecxz
xchg
test
rcll
mov
push
ror
mov
imul
push
xor
ficoms
das
xor
rep
push
adc
cmp
jl
cmp
or
popf
daa
fwait
movsb
lods
jbe
in
jb
ds
or
mov
ds
dec
push
cwtl
dec
adc
dec
std
and
sar
add
push
push
cmovs
inc
das
adc
dec
aas
lods
push
xor
cmp
scas
inc
fnstcw
xor
jbe
insl
cmp
outsb
data16
or
jb
sahf
xlat
pop
es
push
js
test
mov
jg
push
adc
lret
mov
es
icebp
pusha
sbb
adc
adc
jecxz
pop
push
sbb
jae
xor
jle
les
xchg
jnp
sbb
repnz
sub
loop
aad
hlt
jne
dec
xchg
push
outsl
dec
push
and
mov
xchg
add
mov
mov
test
xchg
aad
jbe
in
jmp
aas
mov
xor
aam
dec
cmp
push
es
scas
push
adc
add
mov
pop
or
jo
in
pop
pop
push
test
pusha
push
mulb
or
popa
imul
into
mov
insb
outsl
xor
fwait
test
sti
into
fstpl
adcl
es
mov
fs
ljmp
inc
and
divb
sahf
nop
aas
sub
adc
push
cmpsb
je
mov
fs
in
nop
popa
fcomp
sub
fwait
scas
pusha
mov
sbb
mov
and
sbb
jg
or
pop
push
xor
insl
fnstenv
shr
xchg
mov
push
xchg
jmp
xor
mov
shrl
xchg
fimull
add
ja
bound
jne
clc
push
and
int3
loop
fidivl
mov
add
cmp
mov
fisttps
das
out
loope
add
faddl
sbb
mov
pop
pop
xor
dec
push
push
pop
lds
ljmp
inc
repz
pop
loop
test
data16
bound
fs
push
dec
repz
push
push
sbb
inc
xor
sbb
enter
cwtl
ret
cmp
inc
lcall
jo
and
dec
jp
jbe
xor
popf
loop
insb
out
arpl
mov
test
jnp
into
mov
pop
cmpsb
gs
or
cmpb
jecxz
mov
repz
leave
shl
mov
lock
arpl
xor
insb
xor
repnz
or
mov
cwtl
enter
mov
aas
std
add
ljmp
jge
cmpsb
add
shl
mov
push
adc
pop
shlb
ficompl
mov
jbe
andl
push
jmp
dec
into
mov
push
sub
int
sbb
or
adc
mov
sbb
jg
ret
mulb
shll
mov
popf
jl
jge
addb
dec
loope
gs
je
fiaddl
push
mov
sbb
js
sbb
outsl
clc
icebp
and
aas
jl
xor
xchg
push
push
incb
dec
adc
inc
mov
lds
or
pop
lods
insl
xchg
mov
mov
dec
std
cmc
rcrl
inc
jl
pop
mov
idivl
adc
mov
push
loop
pop
lea
push
push
test
lds
and
jne
jecxz,pt
pop
test
shl
xchg
inc
loopne
jbe
inc
int
xor
mov
push
in
jmp
xor
push
mov
push
repz
jae
jo
mov
xchg
push
aad
mov
test
lea
pop
add
pop
ljmp
push
dec
and
jnp
out
imul
add
inc
adc
mov
out
mov
popf
adc
hlt
int3
cmp
cld
jge
lods
mov
pushf
push
xchg
pop
test
jbe
sub
and
movsl
ficomps
loope
js
adc
popa
sbb
inc
faddl
push
cmpsl
sbb
out
mov
outsl
pop
jle
test
pop
mov
mov
fcomp
int
sti
int3
xchg
push
fidivrs
sbb
rolb
pop
mov
mov
scas
cmp
lahf
out
push
adc
jl
fldt
cmp
and
addr16
fwait
inc
mul
inc
idivb
xchg
rclb
sub
jno
mov
xor
sbbb
test
fiaddl
loopne
popa
rclb
mov
outsb
pop
mov
sub
sbb
cmp
ror
sbb
or
dec
add
push
pop
clc
xchg
mov
cs
mov
jnp
inc
popa
xor
jae
push
dec
mov
out
in
out
sub
mov
inc
loop
inc
sbb
loopne
inc
mov
leave
mov
pop
shrl
mov
mov
repz
in
mov
dec
cmpsl
mov
out
ja
jo
sti
or
mov
out
and
mov
lods
push
ds
and
pop
mov
push
fstps
xorb
hlt
popf
sarl
mov
inc
cmp
js
inc
cld
inc
int3
popf
inc
rol
sub
xchg
orb
adc
mov
adc
mov
icebp
cmp
jg
mov
dec
jnp
sub
lods
pop
gs
push
dec
das
mov
and
mov
jp
dec
push
inc
stos
ja
test
mov
rolb
xchg
add
mov
pop
sub
sub
lret
mov
push
and
push
pop
stc
or
and
inc
fidivrl
ret
rcrl
int3
rcl
pop
das
mov
add
fdivs
pop
addr16
pop
inc
pop
je
pop
cmp
mov
aam
push
push
mov
add
insb
or
mov
sbb
xchg
sub
sbb
push
imul
aad
inc
aas
mov
xor
jo
inc
push
pop
xchg
xor
inc
ja
test
mov
cmp
shr
adc
add
push
mov
filds
ljmp
and
push
loope
negb
adc
test
mov
jle
cltd
jp
push
add
enter
pop
adc
push
outsb
sub
ljmp
in
gs
scas
daa
out
inc
and
or
xlat
xchg
jb
das
shlb
and
stos
ja
add
jb
xchg
pushl
ret
lds
insl
cmpb
mov
inc
loopne
loopw
decl
jle
lret
outsl
cli
sti
push
insl
insb
push
fs
mov
sbb
xchg
push
int
enter
mov
pop
xchg
repnz
mov
out
rorl
sbb
jae
jae
mov
jl
paddd
mov
cmp
mull
mov
js
jg
xor
pop
sarb
mov
and
jbe
outsb
mov
lods
hlt
popf
add
mov
mov
push
aas
dec
movsl
bound
xchg
mov
cmp
cmpsb
adc
adc
dec
dec
pusha
sbb
test
or
pop
dec
jae
roll
jg
imul
push
pop
xor
std
addb
stc
fisubrs
xchg
out
pushw
xor
sub
inc
mov
jge
sahf
pop
mov
dec
stos
int
jns
sbb
inc
mov
das
in
or
test
pushf
add
adc
xchg
stc
jns
insl
int
jo
jo
popa
popf
jg
pop
xchg
add
jg
mov
popf
push
or
sub
mov
push
movsl
repnz
mov
test
icebp
leave
xchg
aam
adc
lds
lret
jle
js
rcl
dec
out
sti
ljmp
vmwrite
or
jecxz
decl
ds
sub
sub
lods
out
mov
xor
data16
jo
imul
and
pop
pop
repz
fcomps
lret
or
or
inc
aaa
sbb
pop
adc
sahf
into
cmp
aas
ret
jp
mov
test
int3
fdivrl
pop
adc
dec
inc
mov
xor
orb
out
push
or
scas
xor
add
xor
sub
sti
loope
pop
push
push
imul
mov
sub
jp
cmp
insb
adc
xchg
rcl
xchg
mov
push
cmp
and
inc
addl
ss
sub
insb
mov
jge
mov
pop
jmp
jle
popa
xchg
pusha
xor
push
jae
mov
cmc
xlat
iret
cmc
jb
test
fstps
and
dec
cli
shrb
clc
ss
gs
sar
notl
cmpsl
sub
sbb
pop
movb
push
roll
js
dec
loope
inc
js
aad
test
inc
inc
xor
cmc
sub
jge
or
test
in
lret
dec
insb
test
add
into
or
imul
rcr
rcll
jo
jns
sbb
push
js
jae
add
sbb
adc
jne
sub
pop
js
push
mov
inc
outsl
addr16
inc
mov
jmp
in
cmpsb
int3
lcall
or
xchg
out
outsb
pop
aas
scas
jnp
fadds
lret
pushf
and
jmp
sbb
in
ds
push
push
arpl
or
subb
fildll
mov
push
cwtl
pop
jnp
dec
test
jge
fs
mov
jle
pop
fs
inc
mov
ret
sub
test
dec
cmpsl
jl,pt
inc
mov
das
mov
dec
mov
outsl
and
rcll
or
lods
sbb
adc
or
cmc
arpl
push
add
push
std
cli
loopne
jnp
popf
mov
shll
inc
pop
pop
icebp
dec
jne
daa
addr16
xchg
imul
cli
cmpsl
add
xchg
xchg
arpl
adc
mov
fwait
movsb
mov
fidivrl
lcall
dec
jecxz
xchg
pop
nop
inc
pop
jae
or
insb
jmp
rcrl
out
sub
pop
les
lock
rcrl
test
in
pushf
sar
std
pop
mov
sub
mov
testb
jb
in
out
mov
lcall
in
shrb
lods
in
xchg
std
xchg
cmp
lds
inc
fbstp
jne
inc
lods
push
enter
mov
mov
jo
push
push
pop
imul
and
stc
ljmp
shrl
ja
lcall
rorl
sub
test
pop
dec
and
push
inc
insl
xchg
sub
pop
or
mov
push
scas
cltd
mov
fnstsw
sub
stos
mov
int3
cmpsb
xchg
jp
loope
lcall
incb
negb
addr16
sbb
jmp
inc
or
sbb
data16
cwtl
test
mov
add
fstpt
fisubrl
lock
es
mov
push
mov
push
ja
fisubrs
stos
fistps
stos
aad
cwtl
testb
jg
pop
cmpsb
int
xor
mov
lcall
push
jae
in
mov
iret
scas
inc
sti
mov
mov
or
into
adc
stos
fistpll
sub
or
pop
xor
hlt
cmpsl
out
sub
inc
stos
int
pop
fwait
add
loop
enter
popa
nop
mov
mov
bound
in
insb
cmp
xchg
pop
adcb
es
scas
in
pop
flds
lahf
cmp
cmp
mov
mov
out
enter
iret
leave
jbe
pop
cmp
jecxz
dec
insb
or
aas
mov
xchg
filds
sti
xor
push
sti
sub
outsb
xorl
rcrb
xchg
dec
bound
push
mov
cltd
loopne
mov
aad
jb
or
xchg
fwait
imul
shlb
xor
and
hlt
js
bound
daa
rcll
jb
push
and
popf
jnp
or
jle
ja
mov
mov
cvtdq2ps
scas
sbb
add
mov
push
push
shrb
aad
sbbl
popf
lea
xor
jae
imul
dec
pop
pop
sbb
test
pop
punpcklwd
jmp
adc
sub
mull
or
sti
filds
mov
sub
mov
dec
or
std
lret
mov
add
insl
test
cmp
aaa
push
fwait
mov
mov
and
or
dec
lds
dec
jp
pop
inc
push
mov
pop
imul
ss
sub
and
stos
in
int
js
div
pop
outsl
fdivrs
pop
pop
pop
test
dec
movsb
nop
xchg
dec
arpl
adc
test
stos
cmp
call
mov
mov
cmpsl
out
inc
cld
mov
pop
hlt
shll
stos
imul
enter
cld
xor
repz
or
inc
xchg
iret
or
pop
sbb
xlat
xor
jge
dec
pop
loop
test
mov
mov
mov
fcoms
cs
or
std
jle
xchg
dec
popf
inc
pop
jnp
arpl
sbb
std
jb
insl
add
sbb
aad
and
inc
iret
je
jae
cwtl
arpl
mov
sub
fcompl
inc
push
ret
icebp
pop
xor
cmp
out
push
inc
ljmp
lods
fisubrs
inc
add
cmc
pop
jb
mov
pop
pusha
pop
push
ret
push
xor
cs
inc
pushf
das
test
sbb
test
add
dec
rorb
cwtl
call
inc
sbb
mov
dec
je
shlb
sbb
and
sti
jae
sbb
jl
and
sahf
popf
clc
fnsave
outsl
movsl
sahf
fcoml
or
movsl
push
xor
or
lock
jle
inc
test
mov
jbe
je
pop
leave
sub
xor
loopne
jb
sarl
roll
xchg
push
movsl
in
cltd
ss
adc
add
jns
xchg
add
sub
mov
lds
pop
jno
push
xchg
fstl
sub
fidivrl
popa
daa
lods
mov
les
xchg
mov
or
add
imul
push
jbe
mov
jmp
leave
and
nop
xchg
inc
test
outsb
stos
mov
dec
jns
cmp
dec
mov
or
or
jg
inc
sarb
push
mov
pop
mov
sar
clc
xor
mov
jb
adc
mov
xchg
adc
xor
sub
sarl
push
inc
xor
xor
outsb
add
and
sbb
int3
sbb
jne
add
sub
in
and
jp
es
fsubrp
sti
lock
je
out
iret
xchg
or
cmp
pop
cmp
lahf
jle
mov
lds
or
lahf
sub
ret
inc
jne
pop
repnz
jg
dec
bound
popa
push
mov
jns
aam
push
mov
jl
test
std
enter
push
mov
xor
int3
mov
sub
jg
es
push
jmp
adc
xchg
xchg
add
mov
test
out
enter
out
jecxz
mov
fwait
movsl
adc
mov
insb
pop
ljmp
and
stc
jnp
int3
or
loope
mov
out
into
mov
sbb
pop
xor
notl
fiaddl
xor
andb
xchg
shrl
outsb
push
jmp
mov
mov
call
adc
push
add
lahf
xor
and
pusha
cmp
sahf
sbbl
xor
and
pop
daa
loopne
xchg
mov
icebp
imul
mov
push
add
mov
rcll
arpl
test
push
outsl
pop
or
mov
cltd
mov
lods
mov
inc
nop
push
inc
imul
jns
mov
frstor
mov
sbb
daa
xor
pop
sub
repz
xchg
mov
dec
pop
sbb
xchg
xor
inc
sub
push
movsb
xchg
jle
clc
or
stc
ja
stc
rcrl
dec
xchg
lret
mov
dec
mov
jmp
ficompl
xchg
loope
mov
mov
mov
addl
daa
jns
jg
sbb
fwait
jl
gs
mov
cmp
jo
cmp
xor
fidivs
dec
dec
xor
jl
lret
dec
inc
cmovl
hlt
jge
cs
push
les
mov
xlat
sbb
dec
ret
push
or
ljmp
cmp
sbb
mov
sub
mov
shl
and
aad
jns
popa
mov
cld
test
xor
fmuls
popa
push
mov
into
aad
imul
add
inc
fistpl
inc
xor
xchg
adc
js
cltd
test
mov
cmp
adc
xchg
rolb
repnz
scas
imul
fwait
jg
shl
std
fisubrs
lret
testb
push
loope
jmp
jne
mov
mov
in
adc
dec
sub
das
js
int3
pop
cld
jl
inc
int
bound
inc
and
or
test
rol
mov
fiadds
mov
clc
jle
jp
and
jo
nop
shl
fiadds
push
dec
jge
lods
xor
xchg
push
shll
push
hlt
stc
xchg
into
andb
and
nop
push
cmc
jl
js
cmpsb
push
jge
shll
pop
jge
inc
sub
cmp
int3
fbstp
xor
sbbb
inc
loope
ficomps
je
aas
lea
push
cmpsb
and
jp
daa
inc
into
gs
mov
adc
jns
pop
cmp
push
nopl
aam
les
cs
mov
mov
mov
sbb
cmp
ds
mov
mov
aas
sbb
jno
mov
fucomp
jge
into
xchg
inc
lods
sub
xor
insl
in
inc
add
push
hlt
fwait
jmp
or
psubsw
sbb
test
sbb
shlb
je
and
repz
xchg
xchg
test
cmp
and
lcall
popf
lds
aam
repz
xor
cmp
stos
leave
mov
and
adc
loop
push
icebp
je
les
dec
mov
gs
push
or
call
push
and
pop
lods
pop
jne
repnz
or
xor
loope
push
mov
pop
shlb
sahf
mov
sub
iret
in
js
cli
pop
jbe
pop
lahf
sbb
iret
leave
xchg
fistpll
mov
mov
jle
push
mov
cmp
gs
mov
sahf
and
mov
cltd
add
xchg
sub
test
mov
xor
stc
js
jb
cmp
inc
dec
adc
gs
add
mov
push
daa
or
xor
popa
cmp
mov
jb
arpl
inc
mov
imul
dec
test
xor
dec
int
sbb
inc
mov
ss
pusha
out
pushf
xchg
dec
fwait
imul
sub
cmp
ja
mov
jmp
xor
jge
roll
pop
jb
push
icebp
sbb
fwait
popf
mov
mov
jle
lods
popf
inc
les
aad
mov
mov
fidivs
jecxz
iret
add
fists
and
adc
leave
in
frstor
cld
arpl
push
test
xchg
or
inc
add
js
jecxz
sbb
mov
cs
or
dec
loop
xchg
in
das
xchg
jge
popa
sbb
cmp
imul
xor
sub
into
setl
mov
inc
xor
mov
popl
fwait
and
mov
dec
lret
test
xchg
insl
mov
out
popa
add
mov
lahf
sbb
add
sub
lock
cmpsb
mov
sbb
xor
jmp
inc
cld
cmp
push
adc
fisubrl
sbb
imul
dec
adc
arpl
fs
mov
lods
movsb
mov
jne
xchg
add
mov
call
fidivs
rclb
add
lea
ret
xor
pop
into
inc
gs
sbb
or
popf
out
cmp
xchg
jnp
adc
stos
mov
imul
cltd
push
pop
push
and
jmp
fs
lods
cltd
jno
je
cmp
decb
push
mov
out
or
lds
int
ds
loop
or
mov
push
aaa
push
inc
adc
nop
jnp
cli
and
mov
jb
stc
scas
push
mov
pop
dec
inc
jmp
js
aaa
lret
jb
daa
mov
push
xchg
sbb
in
movsl
and
in
dec
insb
sahf
or
jmp
daa
adc
int3
push
xor
mov
leave
or
push
sub
inc
sbb
xlat
loope
jno
jle
xor
inc
popf
xor
add
xor
loope
fwait
mov
push
mov
sarl
adcb
stc
popa
test
adc
aad
stc
mov
arpl
bound
push
filds
stc
jbe
push
lret
pop
in
jbe
xchg
jns
rolb
mov
mov
cmpb
imul
xor
cmpb
cs
ret
hlt
out
out
sub
mov
loope
pusha
ret
pop
out
aam
cmpsl
movsb
pushf
push
das
mov
mov
xchg
cli
cmp
aas
cli
add
pusha
jno
jecxz
sbb
insl
sbb
pop
pop
nop
jecxz
pusha
outsb
jmp
daa
cmp
cmc
mov
std
or
cs
jno
js
jo
dec
clc
cmp
mov
imul
cmpsb
mov
rcr
cwtl
popf
sbb
sub
ret
and
mov
loope
dec
cmp
jo
mov
jl
pop
xchg
mov
movsb
std
cld
xchg
stos
lcall
mov
movsl
mov
dec
and
std
pop
mov
fldl
enter
pop
popf
loop
inc
into
add
das
shr
mov
ret
in
pop
arpl
in
pop
inc
pop
idivb
out
lods
adc
and
xorl
pop
xchg
call
pop
xchg
pop
ljmp
mov
rolb
and
mov
jb
xchg
mov
jmp
sahf
mov
mov
lods
sub
test
andl
mov
mov
xlat
xor
movsb
cmp
jmp
xchg
mov
jns,pn
push
sarb
in
dec
loope
mov
pop
add
pushf
adc
lods
test
push
xchg
lahf
mov
test
push
aaa
jp
jne
in
lods
cmp
test
iret
cmp
lahf
out
sub
and
mov
fbstp
sbb
addl
lret
mov
mov
jp
fistps
add
sbb
in
test
lret
aam
mov
jo
pushf
cmp
cmp
mov
mov
push
js
leave
mov
cmp
pop
stos
cmp
and
push
cltd
mov
cmpsb
jno
xchg
daa
mov
push
lods
movsl
xor
xchg
ljmp
int
movsl
cmp
mov
pop
pop
push
add
cmp
and
add
dec
test
into
aas
cmpsl
dec
scas
push
out
fxam
mov
mov
mov
cs
sbb
sbb
push
loopne
loopne
dec
shrl
iret
mov
add
hlt
adc
and
jmp
push
cmp
es
push
in
inc
aam
pop
pop
je
push
ja
imul
push
pop
movsl
xchg
push
push
ss
dec
dec
arpl
das
add
push
adc
ja
adc
jmp
orl
inc
push
push
pop
icebp
xchg
je
push
push
sub
mov
cmpsl
add
mov
or
mov
scas
pop
aaa
movsb
test
movsl
mov
scas
jb
mov
shl
cmp
popa
push
add
lods
in
std
xor
aad
sub
les
fxch
rorb
aad
outsb
dec
pop
jmp
cld
pop
in
test
jne
xor
cwtl
test
mov
jnp
add
push
and
cmp
jb
cwtl
sub
push
movsl
mov
cmp
add
xor
in
sub
loopne
cmpsl
orb
sti
xor
push
rcll
mov
pushf
xchg
mov
sbb
adcl
in
das
mov
je
call
xchg
mov
insb
jno
pop
xor
mov
loope
xor
pusha
int3
mov
xadd
std
dec
outsb
jmp
jmp
inc
push
daa
js
pushf
addr16
aad
cwtl
push
movb
addps
and
loope
adc
push
mov
nop
pop
add
push
sub
mov
popf
ss
jle
rclb
cltd
cwtl
insl
ret
jo
mov
subb
xchg
out
or
inc
dec
data16
lea
pop
ss
std
dec
repnz
out
adc
or
jmp
xchg
mov
ja
jmp
arpl
and
ds
mov
popa
xchg
cld
fcomp
xchg
shrl
dec
insl
out
mov
sbbl
xchg
out
jno
repnz
dec
add
int
dec
aaa
in
sub
inc
out
sub
hlt
push
ret
sbb
mov
push
fisttps
xlat
in
test
call
push
inc
add
dec
and
cmc
jns
push
imul
push
int
fisttpll
cmpsl
mov
popf
push
sbb
aaa
out
jle
fstps
sub
jae
mov
mov
mov
aad
dec
out
stc
or
xlat
pop
insb
out
adc
filds
push
and
and
mov
dec
lds
in
xor
je
outsb
bswap
mov
xchg
mov
mov
inc
aad
mov
cmc
add
pop
into
arpl
testl
mov
clc
stos
inc
dec
add
cmp
int3
dec
push
flds
out
sbb
sbb
mov
testb
aad
movsb
push
std
std
jns
jecxz
sub
xor
cld
daa
test
insb
jnp
mov
loopne
push
enter
movsl
outsb
shll
stos
sub
push
mov
add
cltd
sbb
sub
nop
push
cli
adc
mov
roll
or
xchg
pop
mov
enter
pop
test
mov
imul
mov
pop
pushf
cwtl
xor
and
clc
dec
mov
movb
lods
ret
mov
lcall
popl
pushf
adc
in
bt
into
sbb
cmc
jmp
inc
and
or
mov
push
mov
hlt
and
insl
dec
cmp
mov
test
push
aam
imul
mov
or
rcrl
pop
xchg
stc
push
lods
addr16
add
in
ret
cs
pop
dec
sub
lahf
xchg
fimuls
adc
jecxz
out
mov
int3
mov
xchg
out
dec
and
push
xchg
in
ds
xchg
sbb
inc
sub
sti
divl
cli
je
sbb
enter
adc
bnd
rcrb
subb
fs
cmp
pop
mov
mov
faddl
add
aaa
jmp
mov
mov
ss
lods
sarb
outsl
mov
jae
or
inc
int
xchg
mov
push
fimuls
ljmp
lahf
inc
xor
out
dec
mov
cmp
lds
lock
pop
sbb
test
mov
movsl
vpor
sbb
rolb
adc
push
sbb
sub
add
adc
arpl
adc
mov
sub
mov
sub
sub
adc
adc
roll
cmp
idiv
cmp
sub
gs
lret
dec
shrb
and
cld
into
xchg
inc
fcoml
add
adc
adc
mov
push
xor
test
xlat
aad
push
jnp
pop
xchg
inc
das
loope
das
push
out
rcrb
adc
mul
inc
pop
push
aaa
jle
adc
adc
push
push
cmpsl
mov
dec
add
lcall
stos
and
mov
xchg
aaa
cmpsb
sub
test
icebp
fistpll
jmp
loopne
push
or
pop
push
push
mov
push
push
xor
sub
or
cwtl
adc
xlat
ret
idiv
outsl
xor
pop
mov
jb
into
shrl
jp
mov
nop
push
outsl
repnz
push
pusha
add
lods
movsb
lea
addr16
gs
cld
mov
mov
inc
arpl
cmpsb
pop
movsb
push
lods
lcall
adc
sub
lcall
jp
mov
add
sbb
push
dec
in
cld
nop
sbb
sbb
iret
rclb
in
out
popf
mov
mov
and
pop
add
jnp
repnz
push
test
add
inc
jmp
mov
adc
sub
cmp
inc
add
cmp
aas
push
mov
push
lods
fstps
imul
xchg
daa
jp
add
lods
push
lods
dec
cmp
dec
outsl
insb
add
jle
testl
mov
or
out
mov
je
stc
cmpl
xlat
sub
stc
sub
stos
inc
adc
in
sahf
mov
sbb
js
ljmp
mov
out
push
mov
pop
call
inc
push
mov
add
jle
add
pop
or
cli
dec
inc
add
jmp
push
push
dec
das
sbb
adc
lea
jmp
or
add
xor
mov
lcall
outsl
push
sub
xchg
xchg
repnz
xchg
push
and
aaa
loope
xor
fsubs
mov
adc
mov
sub
and
rorl
mov
adc
cltd
ucomiss
cmp
jg
mov
jne
std
push
adcb
pop
mov
hlt
pop
xorl
stos
rorl
push
or
fldt
insb
jno
addr16
inc
jle
shrb
insb
shll
cwtl
call
add
and
jbe
jnp
pop
adc
sar
ds
insl
insb
add
mov
dec
adc
std
insl
adcb
sub
in
fwait
int
xlat
cmp
dec
cmpl
mov
cmpsb
les
rorl
filds
mov
fcoms
test
xchg
cmpsb
xchg
sti
rcrl
imul
push
icebp
or
jno
iret
adcl
test
dec
or
push
pushf
cltd
jp
jns
mov
out
jne
mov
mov
pop
and
pop
inc
mov
mov
out
mov
add
gs
cmpsb
cmp
and
call
pop
or
jge
jnp
jo
out
decb
mov
loope
xchg
stos
cltd
push
shrl
xchg
adc
outsl
xor
mov
addr16
sub
movsb
int3
leave
aam
fildll
xor
fs
scas
xlat
cmp
push
cs
sub
cmp
xor
inc
aam
loope
lea
mov
jg
jae
cs
out
push
shlb
es
or
add
mov
sub
jbe
mov
add
push
sub
push
mov
iret
pop
mov
jmp
outsl
mov
mov
daa
bound
hlt
adcl
insb
inc
icebp
jne
fistl
pop
fcoms
das
sti
add
jl
test
lcall
inc
or
push
movsl
add
call
mov
push
out
rol
dec
push
repnz
ss
xchg
sbb
rcr
hlt
mov
sahf
fnstcw
dec
and
cli
xchg
jle
xchg
cli
outsb
pusha
out
xchg
outsl
pop
mov
ljmp
dec
xchg
mov
dec
js
fisubs
sti
xor
fsubrs
jo
mov
jmp
or
out
add
jbe
mov
fistpl
in
cmpsb
mov
or
cwtl
add
gs
ljmp
fdivr
cmp
push
cmpsl
pop
roll
and
cmpsb
or
cltd
cld
sub
test
dec
mov
cmp
lcall
and
mov
scas
inc
andb
insb
je
adc
adc
jnp
test
sahf
out
imul
sub
lea
inc
js
adc
pushf
fdivrs
or
movsl
xchg
icebp
pop
lods
xchg
jmp
xchg
or
out
nop
mov
add
push
icebp
wbinvd
sbbl
mov
adcb
ljmp
mov
push
stos
lret
lcall
repnz
xchg
cmp
mov
sub
push
mov
dec
mov
push
rcrl
icebp
or
sahf
mov
loope
test
dec
push
dec
jmp
and
pop
subb
mov
cmp
xchg
mov
inc
push
lcall
lret
icebp
sub
cmp
pop
fbld
mov
pop
movsl
inc
in
jmp
rcrl
cmc
and
and
cwtl
pop
lea
push
lea
cmp
fsubr
sbbl
mov
dec
nop
dec
sub
sbbl
hlt
test
es
push
ljmp
sbb
sarb
ljmp
push
and
sbb
mov
addr16
cli
mov
dec
adc
fildl
test
fdivrs
imul
les
mov
mov
jle
inc
and
sbb
orl
add
cmp
stc
les
pop
rorl
cld
sbb
cltd
push
sub
das
sti
sbb
cmp
mov
and
das
jnp
adc
in
pop
xor
mov
cli
ja
and
jmp
pop
cld
jnp
scas
dec
sub
test
idivb
repz
in
cmpsl
adcb
or
push
pop
in
xchg
aam
mov
or
loop
lret
cmp
ficoms
jmp
push
xchg
fldl
inc
dec
push
fisubs
lods
jbe
mov
pop
dec
or
push
push
mov
pop
ljmp
inc
lock
inc
push
cld
push
int3
or
sub
xor
mov
pop
jp
ss
int3
daa
std
out
xchg
inc
enter
test
mov
movsb
jb
cmp
sahf
lea
sbb
ds
mov
adc
push
and
cmp
push
xchg
inc
adc
pusha
fsubrs
test
add
loope
pop
push
cs
stos
adc
imul
push
fwait
popa
out
xchg
or
mov
ret
adc
test
mov
sbb
adc
lret
add
inc
jle
fstl
int
jns
and
xchg
push
jl
jmp
sbb
adcb
cli
jns
test
mov
addr16
mov
lods
mov
pop
cmp
repz
pop
xor
call
fstl
sub
pusha
pop
jae
dec
xchg
push
leave
int
pop
mov
insb
inc
push
xchg
jnp
add
std
cs
outsb
stc
or
push
popf
scas
sub
sti
addr16
cmp
jmp
mov
mov
test
ret
sub
ret
add
push
dec
or
push
xchg
ror
inc
and
repz
add
hlt
aas
dec
inc
add
and
jnp
lret
mov
pusha
xor
or
xchg
mov
popa
cmpsl
ret
or
adc
adc
lock
int3
xchg
xchg
stos
fs
jp
ja
or
push
jl
dec
lock
or
in
lock
sbb
xor
pop
sbb
mov
mov
dec
movsb
or
fst
push
cmpsb
or
cs
fiadds
cmp
cs
mov
in
sub
push
ficomps
fisubrs
mov
adc
lahf
lods
pop
andl
arpl
cmp
cmp
xchg
mov
aam
inc
add
xor
addr16
addr16
rcl
imul
push
pop
ja
pop
xor
sbbl
pop
mov
or
int3
les
mov
push
cmp
inc
nop
aad
jae
xchg
xor
jmp
lock
sub
xor
lods
frstor
repnz
xchg
test
fmull
lret
sbb
test
cs
daa
call
pusha
and
ret
bound
add
insl
je
and
sub
ret
or
mov
cmp
fiaddl
sub
je
sbbb
or
mov
mov
mov
pop
add
dec
les
mov
int
ret
fwait
mov
mov
das
sub
stc
jg
mov
scas
sar
jp
scas
test
inc
inc
imul
inc
aad
aas
sub
leave
ret
dec
les
shr
pusha
lods
jl
adc
cmp
std
popa
jo
ja
movb
push
sub
sti
test
sub
xchg
cmc
cmpsl
out
mov
out
lea
sub
pop
shll
push
popf
and
xchg
xor
push
lahf
and
jno
push
xchg
data16
mov
cmp
lods
jno
and
xchg
xchg
cli
je
sub
and
pop
mov
push
push
arpl
testb
pushf
inc
adc
and
aas
shlb
mov
mov
pop
add
sbb
adc
ja
sbb
and
or
inc
mov
jle
sbb
pop
cmp
adc
or
push
adc
push
dec
xor
jle
pop
lods
sbb
dec
inc
stc
add
pop
sbb
jecxz
jmp
sbb
fldenv
inc
clc
dec
testl
outsb
jns
stc
or
and
mov
cmpsl
pop
aas
subl
movb
andl
out
das
and
mov
out
mov
jnp
std
iret
es
sbb
xchg
jb
jmp
mov
or
jle
out
cmpb
lods
mov
xchg
xor
dec
add
add
insl
mov
add
ljmp
out
in
loopne
jns
push
and
fnsave
mov
idivl
pushf
cwtl
arpl
push
xchg
push
sbb
or
ds
adc
lret
mov
dec
push
lods
ret
int
and
add
mov
sahf
xor
mov
pop
outsl
aaa
xlat
inc
pop
roll
lock
jb
mov
inc
jae
jae
sub
xor
and
mov
inc
lods
xchg
jae
scas
fstp
jno
decb
lret
dec
dec
mov
test
xlat
insl
xor
pop
sub
jnp
testl
icebp
fdivp
scas
ja
adc
fs
in
je
mov
imul
mov
sub
dec
xchg
cmp
sub
inc
cmpsb
lret
aad
xchg
push
ja
bound
repz
mov
mov
or
sahf
out
fucom
mov
clc
int
add
mov
clc
jmp
sub
cld
mov
stc
adc
enter
ja
adc
jp
fldcw
jg
jl
int
jp
ljmp
inc
hlt
jl
dec
jmp
mov
mov
in
dec
ret
pop
lock
lock
cs
pop
cmp
add
jb
movsl
or
xor
pushf
sbb
jno
mov
mov
clc
pop
mov
or
sub
enter
dec
in
inc
rcll
mov
lock
dec
inc
add
cmpsb
and
mov
xchg
adc
xor
insb
jb
jp
mov
es
add
cld
pop
jo
ds
xlat
cwtl
fwait
jno
hlt
outsb
sbb
adc
sarl
sub
jo
push
aas
pop
in
fucom
sahf
loope,pn
pop
pop
sub
popa
outsl
lods
iret
mov
test
fwait
lods
lea
lods
add
shll
movsb
add
xchg
lret
in
lock
popf
mov
jmp
jg
jb
dec
addr16
add
jb
inc
ljmp
cwtl
leave
rol
out
pop
aas
cmp
cld
rcrb
and
cmpsb
xor
jns
pop
iret
and
sub
ljmp
inc
scas
dec
cmp
pop
pop
cmpsb
cmp
mov
nop
int
or
rorl
adc
imul
add
das
adc
lahf
cwtl
adc
pop
mov
fnstcw
in
inc
cwtl
xchg
mov
adc
dec
cld
mov
loope
pusha
or
sbb
fucomp
cmp
test
scas
mov
mov
test
addb
cmpsb
dec
jnp
mov
sub
daa
jge
xor
sbb
and
ret
xor
cltd
mov
scas
cmpsl
rolb
xchg
lock
sub
not
or
sbb
jne
pop
xor
aam
lock
xor
imul
iret
or
cld
imul
pop
loopne
hlt
fsubrs
cmp
mov
adc
std
outsb
dec
xor
loopne
sbb
int3
dec
lret
inc
mov
aaa
cmpb
outsl
cwtl
sbb
call
cmp
cmpsb
negl
sti
jmp
lea
outsl
stos
and
cmpsl
cmpsb
push
arpl
out
fsubr
pushf
aad
cld
lret
in
xor
cmp
xchg
pop
pop
add
popa
add
out
imul
int3
popa
mov
lret
pop
int3
lds
inc
call
into
clc
sahf
adc
pusha
push
and
adc
outsb
loopne
icebp
subl
sti
rolb
imul
mov
int
notl
popf
js
fnstcw
dec
dec
pop
lcall
fimull
cli
pushf
daa
insl
cmp
cmp
lcall
jno
pop
pop
or
mov
mov
push
bswap
in
sub
into
outsb
lahf
ljmp
and
aas
cld
pop
xchg
lret
into
mov
mov
xor
and
ja
inc
mov
outsl
outsl
dec
adc
imul
shrb
adcl
das
lods
dec
xchg
es
xchg
in
mov
xchg
jg
lds
xor
repnz
mov
rorl
ja
lods
add
les
nop
add
aas
inc
cmp
jmp
dec
or
and
sub
adc
or
in
sub
mov
mov
cmp
imul
push
push
pop
dec
aaa
xchg
xchg
into
push
fs
jg
cmp
adc
rclb
or
mov
lahf
out
pop
pop
dec
loope
enter
push
notb
sub
jp
sbb
jge
xor
push
imul
xor
jae
aaa
sub
add
jns
lods
cmp
int3
rorb
insl
xchg
pop
sub
sahf
ljmp
mov
and
dec
push
ss
and
push
mov
jno
mov
insb
shll
sbb
mov
pop
sbb
cmp
js
dec
mov
and
add
adc
nop
mov
loop
into
jns
int3
out
push
dec
push
movzbl
cmp
xor
pop
add
mov
mov
xchg
adc
cmp
pop
int3
xor
repz
out
sbb
xchg
inc
dec
lods
rolb
xor
into
fiadds
inc
push
cli
js
jo
shll
enter
insb
outsb
jne
mov
in
cs
das
xlat
bound
xchg
lods
push
lcall
cld
das
cmp
movsb
and
lcall
mov
sub
inc
shl
loop
push
xlat
out
jne
stos
inc
loope
mov
jp
add
dec
aad
or
push
cmp
cltd
and
sbb
sbbl
jne
scas
xchg
cmp
cmp
out
addb
jae
add
daa
repnz
ret
push
imul
sti
movsb
gs
and
adc
adcl
out
ds
cmp
hlt
pop
movsb
hlt
and
subl
push
scas
inc
push
fld
jne
inc
pop
mov
pop
fldcw
dec
mov
fmull
and
mov
das
sbb
into
cltd
stc
icebp
rcrb
int
pop
xchg
xorb
rclb
push
sub
fwait
inc
xor
std
js
cmc
inc
movsb
xor
dec
sti
shl
sub
dec
test
xor
cwtl
repz
fildll
xchg
out
jmp
ss
aas
fdivp
dec
xor
cld
cmp
aaa
dec
mov
fwait
mov
sub
mov
dec
and
cmp
pushf
mov
ljmp
imul
jns
pop
scas
movsb
cltd
or
mov
adc
fcoml
rorl
or
sbb
ss
iret
cwtl
dec
fisubs
cmp
sub
ficomps
daa
push
fisttps
and
dec
ret
and
jno
loop
or
test
sub
loop
mov
lock
push
add
and
mull
dec
movsl
test
aad
shrl
mov
xchg
enter
scas
scas
popa
push
adc
in
jo
xor
test
xchg
rcll
mov
mov
pop
and
xor
push
cmp
jne
je,pn
pop
aad
fcoml
mov
jno
test
test
or
push
movsb
sub
cwtl
mov
inc
sub
mov
add
adc
lods
push
sub
add
idivb
mov
std
jns
push
popf
std
sub
jp
xchg
test
aam
sbb
daa
xorb
lds
ss
enter
out
hlt
outsl
push
mov
xchg
sti
mov
pusha
adc
out
cmp
pop
and
jmp
cmp
inc
sbb
xor
cmp
lds
push
push
fsubrs
cmp
test
in
inc
shlb
aam
stos
xor
cld
inc
loop
ja
repnz
sub
mov
repz
es
inc
xchg
notl
aas
lcall
inc
repnz
add
stos
aam
xchg
repnz
test
repnz
adc
test
pop
cmpl
rcrb
lret
fistpll
mov
pop
test
mov
stos
mov
cmp
mov
xor
bound
xchg
out
fwait
and
subl
mov
add
pusha
fisubs
pop
pop
push
and
push
mov
ficomps
icebp
mov
shl
adc
xchg
mov
cmp
loope
push
aam
push
or
jae
les
int
xor
add
movsb
loope
in
fbld
jbe
sbb
inc
mov
pop
xor
mov
add
xchg
sbb
push
jbe
xchg
pushf
push
test
or
sysexit
mov
mov
adc
popf
or
mov
xor
sbb
sub
pop
addl
in
outsb
mov
adc
adc
rcrl
push
sbb
hlt
sbb
popf
pop
rcl
fldl
loop
pop
sbb
pop
pop
fiadds
pusha
aaa
mov
or
xor
dec
cmc
sub
adc
jge
scas
outsl
mov
sbb
add
xor
dec
in
push
outsb
orb
cmpl
cmp
mov
mov
add
inc
arpl
bound
mov
mov
sti
xchg
xor
mov
insl
ja
sub
and
xchg
or
or
pop
xchg
add
cmp
daa
pop
jge
sbb
mov
test
std
sbb
cpuid
sub
inc
jbe
out
in
lret
mov
cmp
nop
sub
sarb
push
pop
and
popf
jnp
cmp
pop
pop
test
dec
pop
adc
ss
and
adc
dec
in
jnp
xchg
adc
dec
or
cmp
cmp
imul
push
jnp
aas
push
xor
sahf
push
cmp
push
andb
xchg
or
cs
int
adc
js
mov
or
mov
pop
sub
mov
aam
das
daa
mov
inc
xor
mov
fstl
fwait
ds
adc
dec
pushf
pushf
fwait
xchg
lock
int3
push
inc
mov
bound
stc
lds
ror
les
pop
ds
push
in
cmpsb
lock
push
mov
cmp
rclb
aaa
xchg
hlt
scas
repz
jg
mov
xchg
leave
jp
xchg
and
leave
pop
sbb
mov
pop
jns
pop
fidivl
mov
and
fldl
and
insl
aas
and
ja
fnsave
insb
mov
shr
lahf
dec
sub
or
xchg
jne
sub
jo
imul
fstpl
fcmovne
js
shll
fnstcw
inc
ja
inc
push
mov
lock
or
in
pusha
in
fs
scas
roll
roll
mov
test
into
and
add
test
sbb
push
cwtl
mov
aam
adc
lods
repnz
mov
xchg
dec
movsb
pop
ficoms
les
pop
std
pop
cmp
mov
jns
mulb
gs
cwtl
mov
nop
and
out
fprem1
lcall
mov
stos
in
out
gs
jmp
fisttpl
jmp
push
mov
daa
xchg
lock
jp
jno
jmp
leave
fiaddl
mov
out
mov
jne
mov
test
andb
repnz
out
adc
bound
add
dec
add
xchg
repz
in
xchg
sbb
arpl
imul
pop
adc
lcall
ljmp
outsb
cmp
cli
jbe
add
dec
aaa
imul
xchg
fptan
cmpsb
in
rcrb
in
mov
mov
in
push
movsb
daa
push
xlat
mov
fadds
outsb
pop
xchg
cwtl
in
mov
mov
in
sbb
mov
dec
jg
bound
xor
in
pop
fcmovnb
sbb
nop
ret
adc
stos
mov
ret
xchg
imul
dec
pop
add
xlat
push
push
insb
lret
inc
cmp
ret
adc
mov
sbb
shlb
cmp
sbb
push
xor
sbb
insl
pop
add
push
adc
mov
inc
dec
push
cmp
jmp
jne
lcall
push
es
and
push
aam
lock
pop
cmp
lods
in
lahf
push
scas
leave
std
xor
add
jnp
xor
into
divb
push
mov
jmp
aam
mov
mov
ret
add
add
xor
cwtl
pop
les
mov
ret
dec
push
mov
scas
dec
or
add
inc
arpl
mov
dec
mov
aam
out
mov
cmpsl
and
push
in
js
test
loopne
dec
add
aaa
lret
add
adc
cmp
xor
pop
sub
notb
loop
or
fnstcw
gs
insl
cld
aas
cmp
lret
fidivs
or
popa
jecxz
inc
sahf
mov
dec
lds
imul
imul
jl
jno
fldcw
mov
add
dec
xor
mov
push
lret
add
mov
mov
sub
pop
shl
iret
pop
dec
mov
mov
enter
notl
pop
mov
jl
mov
in
and
mov
mov
mov
push
or
incb
inc
test
cmp
test
imul
jne
aas
lret
aas
xlat
adc
or
jnp
mov
mov
dec
jb
sub
sub
icebp
xlat
mov
ret
in
mov
push
push
pop
and
pop
js
xor
pop
in
xchg
pop
jp
nop
sub
test
daa
fmul
jg
sub
insl
xchg
je
repnz
lods
addr16
frstor
and
jl,pn
sub
inc
rorl
adc
adc
stos
aas
inc
xchg
shlb
and
mov
mov
ds
xchg
shlb
pop
out
adc
loop
adc
flds
jb
nop
outsl
cmc
xchg
xor
push
repnz
adc
mov
fstps
loopne
push
jns
movsl
adc
or
push
jbe
cld
inc
popa
jmp
jp
push
fists
dec
fstpl
push
mov
dec
cmp
test
stos
jg
mov
jge
std
inc
inc
repz
mov
dec
popf
in
cmp
or
jmp
stc
dec
cmp
sub
dec
enter
repnz
dec
pop
inc
lahf
fists
xchg
dec
fdivr
jae
rorl
mov
cmp
mov
out
xor
js
inc
scas
shll
sub
fisubrl
dec
iret
mov
andb
adc
dec
jne
xchg
pop
xchg
ljmp
in
jl
push
or
subb
jp
mov
test
dec
enter
jb
add
stos
jno
jl
mov
jno
loope
or
and
pshufw
pop
mov
or
mov
cmp
cltd
mov
outsb
xchg
xchg
fmulp
sbb
rcrb
cmp
stos
cli
rorl
sub
lock
in
push
or
and
dec
mov
jb
mov
mov
test
mov
inc
cmp
ret
mov
sub
sti
cltd
adc
xchg
in
out
notl
sar
bound
dec
jns
js
fistpl
mov
sub
dec
mov
sarl
push
sti
cmp
jo
test
rol
cltd
sti
push
xor
outsl
mov
dec
push
and
sbb
cmp
dec
mull
leave
sub
mov
inc
lock
jp
jo
mov
dec
mov
inc
and
cmc
sub
loopne
cmp
xor
ficomps
xor
inc
jae
adc
pop
cmpsl
mov
xchg
lret
sub
push
jno
ja
inc
mov
adc
call
inc
pushf
test
push
lock
stc
inc
sub
cwtl
push
loope
addr16
xchg
in
dec
and
mov
mov
and
jnp
push
pop
dec
mov
mov
incl
jecxz
ljmp
jmp
repz
ljmp
into
pushf
lods
pop
lret
push
mov
rcr
pop
dec
lret
xchg
add
cs
addr16
popl
xor
in
add
faddl
mov
add
stos
jo
outsb
pushf
loope
jge
fstpt
mov
aam
xchg
es
and
lock
mov
std
es
mov
mov
rcrb
cld
sbb
and
sarl
jb
jmp
inc
xchg
subl
jg
fnstcw
es
or
xor
mov
sub
loope
sub
pusha
inc
lcall
aaa
push
imul
inc
test
pop
es
pop
ret
clc
clc
jmp
push
ret
push
stos
ds
fld
mov
clc
or
aam
pop
adc
mov
xor
lret
notb
insb
js
jnp
pop
cld
xchg
xor
imul
popf
mov
jge
mov
jae
call
cmp
adc
cmp
fsubl
sarb
icebp
fimull
movhps
pusha
and
into
cmp
out
int
test
or
mov
push
jecxz
or
rcrl
les
jno
push
jg
or
and
lea
in
or
fcompl
adc
rcrb
movsb
mov
lock
arpl
lds
or
mov
adc
ror
and
mov
hlt
xchg
movaps
push
and
sbb
add
mov
lahf
in
lock
add
jmp
push
xchg
or
pushf
aaa
cs
out
aad
test
mov
shl
cmp
mov
push
cmc
lods
repz
std
add
jge
ret
adc
pop
cmp
dec
push
mov
mov
pop
mov
cmpsl
idivb
lcall
xchg
mov
sbb
pusha
hlt
mov
mov
clc
and
cs
in
loop
lea
push
ja
cmpsb
not
xor
sub
in
pushf
or
ffree
js
lret
xchg
cmp
add
inc
stos
insb
rorl
sbb
adc
fcoml
sub
lret
xchg
mov
std
and
xor
dec
xor
mov
aaa
lea
pop
adc
mov
pop
arpl
jns
lahf
dec
jmp
test
and
jo
pop
add
das
mov
in
push
out
adc
dec
stos
adc
nop
pop
pop
shll
push
xchg
jno
int
popf
dec
sub
jbe
or
lret
stc
mov
rclb
daa
push
loope
cmpsl
sbb
jno
push
and
aad
stos
jne
adc
sbb
push
push
jb
or
std
je
nop
xchg
clc
nop
insb
in
addb
fcmovu
mov
or
cltd
cltd
jb
loop
sar
jle
or
adc
xor
mov
cmp
sub
roll
cld
push
mov
cmpsl
inc
adcl
sub
add
cmp
pop
cld
mov
daa
xchg
out
dec
sbb
pop
stos
mov
and
icebp
sahf
test
insb
outsb
out
and
loop
jne
int3
mov
mov
mov
jg
movsb
jbe
dec
sbb
scas
xor
jns
loopne
call
xchg
mov
or
outsl
cltd
sub
lds
mov
jbe
mov
mov
bound
inc
sub
jns
enter
fxch
sub
dec
rorl
lahf
push
mov
andl
cmc
mov
lcall
and
sbb
imul
aaa
mov
out
jmp
lds
insb
das
loope
rolb
scas
addr16
and
mov
lcall
xor
ret
jb
faddl
loopne
scas
and
and
mov
mov
mov
xchg
cmp
and
cmpsl
dec
xchg
dec
lahf
jg
xor
scas
stc
dec
js
pop
cmp
test
aas
movsb
mov
scas
push
cld
mov
jae
fisubl
mov
mov
add
push
mov
sub
outsl
jno
les
les
std
lret
std
xor
gs
aas
outsb
movsl
hlt
ss
pop
clc
stc
dec
aad
pusha
sbb
mov
test
or
mov
shlb
loope
icebp
or
imul
dec
mov
out
ret
pop
movsl
ds
insl
jns
or
dec
iret
in
cmp
clc
xchg
repz
ret
lock
and
jge
inc
pshufw
outsb
xchg
in
and
jle
sarb
imul
xlat
imul
les
aam
and
daa
dec
fidivrs
test
cmpsb
push
adcb
outsl
inc
dec
outsl
mov
pop
mov
out
xchg
ror
aad
dec
jno
push
mov
inc
push
ds
pop
int
dec
fcompl
loope
loopne
mov
mov
lea
stos
loopne
lcall
fidivrs
stos
push
push
and
sub
ljmp
mov
imul
sbb
dec
xor
add
cmpsb
pop
aaa
mov
dec
stos
or
mov
test
inc
xor
in
inc
hlt
lods
aad
or
sbb
adc
jb
xchg
outsb
and
jno
in
sbb
pop
lahf
divb
and
xchg
mov
les
pop
lods
lock
dec
inc
mov
adc
stc
inc
sub
pushf
cld
aad
enter
mov
pop
inc
nop
movaps
cld
nop
stc
scas
push
aad
psubsb
gs
jno
and
add
shrl
test
in
xchg
mov
xchg
in
outsb
insb
std
and
lods
sbb
pop
in
pop
loop
fnsave
emms
ss
xchg
data16
or
cmc
push
pop
adc
adc
test
imul
sub
enter
je
jbe
jo
and
cmp
or
xchg
mov
xchg
addr16
js
or
test
inc
mov
jl,pn
push
dec
pushf
repz
pop
js
mov
pop
mov
outsb
popl
mov
sub
in
xchg
add
testb
push
cwtl
ret
jbe
lcall
neg
adc
add
dec
pusha
dec
stos
cld
imul
and
pushf
push
inc
aaa
sbb
dec
sub
sub
pop
adc
fimull
mov
andl
mov
sub
rcrl
add
adc
jne
inc
push
cli
int
cwtl
in
or
subb
push
push
inc
xor
leave
das
sub
mov
add
push
mov
addr16
cld
rorl
lock
sahf
mov
jb
push
ja
movsb
add
fcomip
xor
push
push
push
sbb
inc
test
sub
sbbl
je
out
mov
add
lcall
add
int3
push
mov
popf
mov
or
leave
add
mov
push
pop
lcall
loopne
lea
adc
sahf
testl
cmp
scas
stos
adc
fcoml
adc
test
add
int3
imulb
mov
mov
inc
jge
pop
sub
inc
xchg
fldenv
shl
rcrl
sbb
mov
aas
jge
xchg
mov
pusha
dec
add
stc
xchg
mov
push
or
mov
popa
repz
xor
rolb
daa
push
scas
mov
cwtl
repnz
inc
mov
add
xor
test
xchg
mov
pop
push
pop
mov
sub
pop
cmova
or
mov
stos
imul
dec
adc
cmp
mov
sub
out
ror
sbb
sub
mov
fld
mov
xor
lock
adc
in
push
jl
shrb
cmp
les
in
fwait
popa
xlat
mov
pop
icebp
jnp
pop
push
pop
xor
push
push
cmpsl
popa
arpl
ret
sub
jl
jno
je
aaa
outsb
adcl
fisubs
mov
mov
mov
sarb
cmp
mov
and
imul
int
test
jns
and
es
inc
jmp
rcrb
add
sbb
jae
xchg
pop
ja
mov
lahf
inc
cltd
xchg
sbb
mov
xlat
and
icebp
ror
push
cwtl
xor
ljmp
loopne
mov
or
pop
dec
dec
xor
add
push
adc
js
add
dec
add
ljmp
mov
sub
idiv
push
adc
mov
xchg
in
decl
lock
sbb
mov
mov
cltd
mov
jp
lret
cmp
mov
jno
dec
out
cmp
pop
addl
or
scas
cmp
push
mov
test
icebp
adc
mov
sub
int
sbb
pop
mov
xor
dec
gs
jl
scas
lret
shll
fcomip
jg
testb
cld
push
jns
add
fiadds
lret
jmp
mov
pop
pop
dec
cs
push
in
adc
cmpsb
in
xor
arpl
sub
or
add
jecxz
xchg
xchg
jp
lock
lea
xchg
sbb
popf
fs
inc
subl
cmp
in
push
call
jmp
or
sbb
sarl
loope
sti
out
fs
pop
ret
xor
inc
cld
mov
jecxz
sub
into
cmp
pusha
cmc
insl
cmc
das
stos
and
dec
stc
mov
cwtl
mov
xor
cmp
int
mov
out
aas
out
es
pusha
mov
inc
cli
repz
int3
fnstsw
inc
testb
or
or
jbe
push
es
add
push
dec
push
loopne
shrl
call
push
jnp
scas
pop
add
into
andl
orb
ret
jp
in
das
fistpll
scas
test
popa
push
lahf
lods
mov
pop
int3
push
movsb
cmp
mov
pushf
push
xchg
das
data16
push
loope
adc
mov
jp
push
int
out
arpl
push
mov
daa
cmp
push
call
lahf
jnp
pop
inc
movsb
fwait
sub
inc
mov
addb
dec
arpl
mov
jge
out
mov
ret
xchg
xorl
sub
lock
out
jp
xchg
dec
xor
cli
pop
or
stc
repz
or
not
mov
add
or
sub
mov
hlt
jl
ret
lcall
jnp
xlat
fmull
adc
pop
push
pusha
adc
jp
data16
cmp
test
insb
inc
inc
push
pop
lret
mov
test
in
jne
out
xchg
jmp
aam
stos
pop
sbb
hlt
push
cs
and
stos
lds
notb
mov
pop
cmpb
test
pop
in
jno
pop
xchg
insl
lods
fwait
cli
push
mov
fidivl
les
sbb
xlat
stos
scas
add
aad
cmp
or
mov
jmp
arpl
add
ja
add
dec
inc
mov
inc
in
insl
xchg
and
sub
cmpsl
mov
mov
adc
frstor
jo
addr16
jmp
push
jno
jns
add
daa
xchg
cmc
lret
je
test
shll
fs
rcr
aas
sbb
pushf
fildll
inc
push
shlb
icebp
repnz
int
sbb
inc
int
push
xor
sbb
lahf
mov
sub
dec
in
int3
and
insb
lds
mov
sar
lds
jno
xchg
lret
data16
sub
mov
ss
sub
jbe
stos
mov
jmp
mov
pushaw
addb
inc
insb
adc
ror
add
inc
testl
jmp
fwait
xchg
push
pop
cmp
inc
jo
bound
movsb
iret
push
mov
jnp
sbb
pushf
iret
es
iret
popf
pop
mov
dec
insl
adc
mov
je
xchg
push
cltd
sub
imul
mov
daa
or
adc
inc
call
shl
ret
xor
shrb
cmc
fbld
cmpsl
sarb
je
or
xchg
ljmp
imul
pop
jbe
flds
xchg
dec
xor
pop
mov
fstl
das
push
outsb
in
repnz
or
jnp
repz
xchg
out
repnz
movsl
pop
pop
mov
mov
nop
cmp
dec
inc
pop
cs
pop
xchg
enter
pop
add
lods
out
adc
inc
push
mov
pop
cmp
loop
call
jb
mov
jge
movsl
and
mov
xchg
and
push
int3
idivl
in
sti
cmp
cmp
gs
pop
shl
divl
mov
sbbl
popf
fbstp
xor
mov
mov
add
pop
int
hlt
mov
loope
xchg
pop
mov
xor
cli
lock
mov
xor
not
fwait
lock
rol
gs
xor
lahf
inc
add
jns
icebp
cld
add
outsb
mov
jne
pushf
in
testl
sbb
movsb
shlb
xchg
jne
arpl
out
xchg
fwait
add
mov
cmp
adc
loop
mov
imul
mov
and
loope
add
xchg
jl
ret
arpl
int3
adc
bound
jns
pusha
xchg
xchg
pop
inc
pushfw
and
in
cwtl
or
lahf
shr
push
ficomps
lea
jl
xor
fisubl
out
cwtl
xchg
loopne
in
xchg
das
or
test
push
add
pop
adc
fmull
ds
mov
jne
hlt
test
adc
jge
subl
iret
lock
aaa
inc
and
jo
mov
push
sbb
and
mov
out
mov
scas
out
pop
test
pop
dec
imul
cli
addl
mov
xchg
test
jl
lds
iret
jecxz
cmpsb
testb
gs
mov
hlt
cmp
xchg
sbb
add
movsb
rcl
mov
loopne
push
lret
sub
push
dec
dec
subb
adc
fwait
shll
fildl
mov
sarb
xchg
loope
cmp
loop
lods
mov
cmp
jp
xchg
and
and
js
pop
cltd
icebp
xchg
adc
push
adc
add
dec
inc
andb
cmp
cli
fwait
adc
repz
pop
mov
in
adc
aas
je
xor
scas
lret
loope
fidivrl
les
pop
loop
imul
mov
repnz
jl
fsubr
adc
adc
cmp
jmp
std
aam
in
retw
lret
jmp
sbb
jle
mov
icebp
les
jge
jns
xor
mov
stc
bound
push
mov
inc
inc
adc
in
movsl
push
fldl
mov
movsl
fdivr
scas
mov
in
or
lret
pop
aaa
jg
mov
dec
ret
mov
shlb
sub
cmp
faddl
sbb
xor
outsb
xchg
lods
cmpsb
cmp
and
pop
aaa
mov
ds
mov
repz
imul
inc
mov
push
test
in
pop
cmpsl
fsubl
enter
mov
sbb
insb
fadds
or
jno
enter
imul
pop
pop
aad
in
fcmovb
sbb
jo
fistl
dec
sbb
xchg
inc
test
jp
cmc
dec
dec
or
push
xor
xor
mov
loope
aas
pop
js
adc
and
and
outsb
pop
shl
mov
sub
movsb
inc
mov
mov
mov
adc
jo
cmp
add
scas
push
jecxz
pusha
jae
repnz
icebp
or
pop
shll
divb
push
sub
mov
imul
rcr
add
aaa
dec
inc
lods
popa
sbb
sbb
stc
out
popa
subb
push
adc
mov
test
xor
dec
ljmp
jo
call
je
subl
add
jmp
xor
popf
mov
pop
jle
inc
add
cmc
jbe
out
inc
mov
movsb
test
xchg
dec
or
xchg
ss
mov
jle
call
test
leave
outsb
lock
add
fwait
cmpsb
pop
jge
dec
movsl
in
mov
repnz
adcb
rorb
lcall
stc
daa
sbb
jecxz
xor
fisubrl
push
jp
test
xor
test
lret
cmp
lods
xor
dec
push
lret
jnp
lret
xor
in
lods
xor
xchg
lret
pop
pop
jmp
addr16
inc
jno
loop
lds
mov
andl
mov
jae
adc
xor
ret
mov
dec
movb
push
gs
cmp
sub
cmp
inc
inc
test
mov
sahf
cld
fcmovnu
sbb
repnz
int
push
push
jo
inc
in
mov
push
scas
lock
icebp
sub
dec
mov
mov
shl
cs
mull
mov
sbb
push
outsl
pop
and
mov
sbb
iret
add
jns
xchg
inc
jo
or
adc
dec
repz
lret
push
sbb
aad
decl
hlt
hlt
pop
adc
sti
and
out
inc
ja
mov
icebp
pop
push
jecxz
add
mov
movsb
jae
jp
out
in
cs
mov
lods
cmp
xor
jns
and
mov
das
mov
sbb
jp
xlat
shr
sub
dec
dec
pop
gs
mov
mov
test
je
sub
xor
push
das
ret
inc
dec
dec
xchg
dec
inc
xchg
push
xlat
loopne
ja
inc
flds
cld
in
dec
sbb
cmpsl
push
popf
or
lods
sub
xlat
rcrl
imul
lock
pop
out
es
xor
frstor
das
mov
push
fucomp
cltd
fdivrl
xor
xchg
idivl
out
in
stos
mov
out
add
repnz
jns
ret
es
mov
imul
fs
testb
ficoms
daa
pop
out
mov
and
je
push
add
or
lods
and
pop
lods
cmp
imul
shr
shl
push
movb
fsubrl
imul
mov
cmp
loopne
mov
loop
dec
fldcw
daa
cltd
test
pop
mov
jp
xchg
jae
fiadds
dec
lret
mov
mov
scas
xchg
xchg
int3
out
push
cmpsb
out
inc
outsb
sub
add
cmc
add
sbbl
lcall
mov
leave
dec
call
repz
pop
mov
jle
in
enter
popa
jns
popa
mov
fildll
cwtl
out
movsl
push
xor
lods
xorb
add
ret
pop
in
insl
pop
xor
repnz
sbb
cli
insb
rcl
sahf
sbb
inc
sarb
adc
test
out
dec
loop
push
xchg
dec
ret
mov
lock
pop
xor
and
ret
sti
pop
jbe
movsb
std
gs
xchg
xor
decl
repz
ret
in
push
hlt
sub
int
pop
hlt
push
xor
sbb
in
movsb
test
mov
insb
xor
ret
dec
bound
xchg
xchg
loopne
notb
fs
mov
inc
data16
in
jecxz
arpl
jnp
jns
iret
leave
imul
cmpl
jbe
gs
or
push
pushf
sub
xchg
cmp
insb
fbstp
mov
and
gs
dec
dec
call
xor
dec
and
fucomp
mov
mov
jno
ljmp
jecxz
scas
stc
mov
mov
out
xlat
jg
roll
jnp
roll
jnp
jns
add
jno
sub
lret
daa
pusha
stc
inc
nop
xor
test
adc
pop
clc
sub
xchg
sub
rcrb
inc
loope
stos
ds
es
pop
jb
dec
jne
jge
rcrl
clc
aad
gs
push
mov
popa
cmp
imul
or
xor
icebp
call
mov
inc
movsb
fnstenv
enter
push
pop
dec
stos
add
es
rcrb
or
shl
mov
pop
push
movsb
mov
aad
or
lahf
cmpb
or
push
mov
mov
mov
sbb
mov
sti
cli
pop
or
incl
popf
mov
mov
mov
cmp
data16
dec
adc
and
in
mov
mov
ret
adc
jns
ret
jl
mov
in
orl
in
std
cmc
jae
in
mov
add
xchg
in
stos
mov
or
sbb
outsb
dec
mov
sarl
inc
daa
ss
dec
lds
fcoml
push
cwtl
aam
icebp
in
es
inc
xchg
add
scas
lret
aas
ja
dec
xchg
fwait
leave
and
jne
shr
rclb
pop
add
icebp
and
notl
or
and
je
sbb
lret
sbb
pop
push
fidivrs
mov
adc
sub
pop
in
inc
lcall
std
repnz
jbe
mov
sarl
or
jo
aaa
push
mov
enter
aas
or
mov
cmpl
ss
sbb
imul
xor
cwtl
call
xchg
sub
mov
pop
push
addr16
pop
and
fcmove
jo
loope
mov
bnd
mov
cmp
adc
std
ljmp
mov
cltd
into
aam
jno
std
jo
aas
dec
bnd
adc
push
jl
repnz
nop
pop
xchg
daa
mov
push
out
mov
into
lret
imul
or
loop
mov
push
lea
adc
ljmp
insl
pop
pop
loopne
fisubs
cwtl
testb
push
or
mov
les
test
cwtl
push
cmp
sahf
fwait
push
add
fdivp
rcll
xchg
test
loop
ret
adc
clc
lret
insl
cmpsb
sub
out
xchg
cmp
pop
daa
mov
fidivl
popl
sar
pop
inc
jecxz
call
mov
mov
cmp
scas
addr16
push
lcall
int3
pcmpgtd
pop
int
mov
cmpsl
out
jmp
stos
sbb
sub
push
lret
add
add
mov
mov
mov
ja
xor
mov
cmp
lds
lret
jg
jnp
add
push
cmpsl
xchg
push
cltd
arpl
sbb
movsl
pushfw
inc
xchg
push
adc
std
sbb
pop
dec
rorl
and
jge
xchg
add
cmp
add
idivl
xchg
xchg
inc
cmp
adc
in
adc
xor
or
push
xchg
inc
neg
jl
sbb
repnz
add
mov
repnz
rcll
xchg
sti
xchg
mov
dec
jecxz
shl
ja
lret
push
xor
xlat
dec
test
out
ret
push
lcall
sbb
inc
repnz
fwait
addb
je
xchg
push
dec
adc
jo
in
movmskps
movsl
and
rcrb
jmp
dec
push
add
xor
arpl
outsb
clc
inc
add
cmp
sbb
dec
shlb
stos
and
sub
dec
addb
cmp
je
mov
int3
sub
xchg
adc
jno,pn
inc
and
insb
movsl
push
pop
mov
pop
jb
mov
ja
sub
scas
jb
xchg
aas
int3
in
enterw
rclb
inc
arpl
sub
xchg
fimuls
test
sub
loope
pop
pop
xchg
and
or
int3
loope
faddl
movsb
sbb
mov
inc
je,pt
cmpsl
aad
xor
jge
push
inc
mov
inc
sarl
cmc
loopne
iret
add
xor
xchg
add
jae
push
test
notl
mov
sbb
push
nop
jb
movsl
push
and
push
xchg
rcrl
xor
test
js
iret
js
mov
push
arpl
je
sbb
sub
jecxz
fnstsw
mov
xchg
dec
mov
push
jne
sbb
mov
loopne
aas
movl
imul
inc
inc
pop
scas
int
jnp
icebp
sub
pop
aas
ret
xchg
out
jns
mov
or
mov
roll
stc
lods
and
leave
ljmp
into
and
and
sub
stos
cmc
push
mov
je
das
jmp
mov
jns
and
aad
pop
xchg
shrb
or
movsb
xchg
sub
clc
push
aad
sti
push
sbb
jnp
out
or
lcall
idiv
mov
xorb
adc
pusha
or
adc
out
adc
xchg
decl
fcom
ja
mov
cmp
cltd
mov
test
aad
adc
bound
out
sti
add
loope
mov
rol
leave
int
jno
pop
mov
lcall
out
call
jle
outsb
push
mov
es
clc
rorb
mov
or
mov
lods
adc
repz
xchg
cmp
sti
inc
lock
sbb
and
imul
test
pop
mov
push
mov
int3
int
sti
adc
bnd
pop
push
out
cmp
cmpsb
cltd
call
fidivl
xchg
sub
push
fs
inc
cmp
pop
dec
std
aad
out
cmpsb
jnp
cmp
repz
sub
scas
imul
adc
insl
jae
add
into
in
add
jb
fcomps
in
aam
mov
jo
test
imul
jp
in
imul
movsb
inc
xchg
pop
sub
inc
nop
sbb
and
fs
dec
and
mov
pop
or
enter
lcall
dec
nop
sub
mov
lods
pop
mov
fwait
push
stos
ja
cltd
aad
dec
leave
push
sbbb
pop
ret
mov
nop
mov
jmp
xchg
sub
sub
aas
mov
push
repz
outsl
mov
pop
std
or
and
jbe
lds
outsb
lock
fistl
arpl
repnz
mov
fs
pop
dec
loope
mov
into
into
mov
jbe
daa
lahf
xor
push
fwait
loopne
sbb
xchg
push
or
cmp
add
enter
jnp
into
out
pop
sub
popf
mov
inc
sahf
xchg
sti
fdivs
push
std
movl
ret
and
aad
imul
sbb
push
ss
mov
dec
ret
push
hlt
mov
jbe
mov
xchg
xchg
out
dec
sbb
mov
ret
into
and
mov
mov
clc
jge
fsubr
add
enter
or
ja
and
std
shl
stos
or
pusha
jmp
pusha
pusha
jns
lahf
stos
outsl
pop
mov
insl
out
lcall
orb
je
xorps
movsl
push
and
mov
cmpsl
leave
sub
int
aad
ret
inc
out
xchg
subl
in
and
scas
jnp
sbb
stos
movsb
sti
cmp
insb
mov
mov
mov
test
mov
scas
push
popa
sbb
xor
inc
mov
hlt
jp
jb
lods
ds
mov
jl
xchg
mov
das
jmp
call
gs
xchg
inc
cltd
xchg
lock
cmp
xchg
jl
add
push
inc
push
or
sbb
push
adc
xlat
push
and
push
cmp
pushf
cmp
repz
movw
push
lahf
or
push
push
cmpsb
add
adc
lcall
adc
inc
dec
cmp
dec
jge
test
xlat
or
push
loopne
ss
pop
pop
mov
sbb
imul
cmp
adc
xchg
mov
test
mov
sbb
ret
cs
das
add
and
mov
or
pusha
cmp
mov
push
mov
adc
add
mov
fisubl
sub
mov
popf
leave
mov
sbb
inc
push
mov
fildl
adc
insb
jmp
shrb
ss
lcall
inc
mov
popa
mov
test
test
sti
and
adc
and
int
add
inc
fucomip
mov
fildl
mov
lds
fnstsw
insb
das
push
cmp
dec
pop
inc
shr
push
mov
fwait
adc
adc
leave
jmp
and
lods
mov
in
loope
mov
test
jle
dec
lods
push
std
fnsave
mov
sbb
mov
lds
inc
inc
or
jnp
mov
test
jb
add
jns
xor
mov
jne,pt
dec
pop
mov
pop
inc
push
bound
xchg
xor
mov
lods
shrl
push
mov
loop
xor
popf
mov
dec
stc
and
fidivrl
addps
cmpsb
shll
pop
pop
pop
mov
sysret
mov
ljmp
loop
inc
add
jmp
dec
mov
mov
jecxz
xchg
iret
mov
stc
rclb
add
js
ss
fiadds
icebp
imul
test
lock
lahf
dec
addr16
test
dec
mov
mov
dec
scas
jno
or
pop
add
mov
push
sbb
adc
into
sub
pop
stos
out
cld
cmp
popa
sub
mov
and
pusha
shrl
shl
xlat
and
xor
ja
add
xchg
sub
xor
das
push
pop
cmc
stos
and
mov
repnz
xor
imul
pop
jo
push
test
mov
ror
cld
outsb
imul
mov
jp
lods
daa
js
enter
sbb
or
lret
test
inc
xor
stos
mov
jmp
sbb
dec
jne
stos
mov
lods
add
adc
jbe
shrl
mov
mov
loop
xchg
rcl
inc
mov
sbb
inc
or
mov
dec
movl
adc
mov
jno
bound
inc
push
stc
xor
inc
sub
call
sub
and
addr16
xchg
or
sti
insl
mov
mov
and
enter
incl
cli
adc
rcll
jp
pop
dec
in
mov
mov
loopne
cli
insb
loopne
lods
mov
int
loop
adc
or
sub
jecxz
leave
mov
mov
dec
sub
addr16
jno
loope
mov
int3
fisubrs
aam
out
shll
shl
mov
pop
popf
lods
in
mov
loop
mov
or
lret
xor
jp
sub
sahf
cmp
aam
mov
mov
sti
mov
data16
cwtl
testb
mov
std
pop
pop
dec
out
xlat
pop
sbb
pop
rclb
mov
mov
xchg
inc
iret
sbbb
mov
jnp
ret
int3
sub
pop
fdivrs
add
mov
push
xchg
sbb
cmp
push
add
ret
mov
rcll
nop
and
sbb
inc
adc
cmp
test
enter
xor
jnp
loopne
adc
xchg
add
adc
mov
ret
rcrl
in
and
sbb
add
mov
mov
outsl
sub
outsl
repnz
mov
cld
sbb
xchg
shlb
pop
std
ror
test
pusha
cmp
jno
ljmp
fcompl
cmp
arpl
pop
jnp
add
subb
test
nop
ret
and
pop
addb
sahf
jecxz
stos
mov
add
xchg
cltd
push
mov
stc
mov
xchg
or
fstpl
loopne
out
push
xchg
les
push
adc
lods
imul
lahf
or
dec
xor
test
xchg
aas
push
test
lods
imul
cltd
int3
lcall
cmpsl
jecxz
mov
push
or
cmp
pusha
dec
in
int
clc
fimull
hlt
movsl
gs
out
arpl
jl
sub
lods
dec
loopne
sarb
leave
jl
or
xor
lret
das
test
xchg
xor
mov
outsb
lock
fadd
dec
int
je
in
out
jmp
sti
mov
mov
pop
pop
push
cmp
fs
mov
pop
ffreep
xor
repnz
jmp
sbb
add
xchg
mov
les
ret
mov
lcall
sub
xor
loopne
aad
cltd
shll
cs
in
pusha
aam
sahf
mov
lock
test
bound
cmp
sub
mov
out
pop
mov
jnp
in
outsl
or
adc
leave
and
cld
les
loopne
push
pushf
push
pusha
jb
cltd
jne
gs
stos
pop
inc
test
and
or
and
jb
enter
cmp
inc
xchg
insl
insl
jge
sbb
push
add
inc
or
xchg
je
sub
cmpb
mov
stos
mov
lret
call
sbb
lods
cmc
aas
cli
dec
jg
inc
or
inc
rep
sbb
fwait
pop
loopne
mov
mov
out
mov
fs
fwait
repnz
xor
repnz
fildll
outsl
jns
jnp
in
sbb
stc
sti
mov
jle
jg
outsb
leave
mov
or
pushf
mov
aaa
scas
bound
inc
pop
jne
and
outsl
aam
sub
rorl
inc
add
dec
push
out
in
xor
ds
inc
fdivl
xchg
fdivrl
dec
mov
enter
push
push
mov
cs
cmp
mov
mov
dec
dec
add
fistpl
std
mov
mov
fnstenv
mov
data16
mov
ret
xchg
icebp
pop
roll
xchg
lds
mov
es
nop
adc
shll
loop
jns
fcoms
inc
xchg
or
mov
insl
fidivl
insb
xor
mov
sbb
cmp
outsb
iret
in
jecxz
cs
orl
add
xor
pop
adc
fs
jg
shl
and
daa
inc
addr16
cmpsl
lods
fimuls
lret
or
push
jno
push
ss
fiaddl
shlb
in
fs
mov
out
faddl
popa
hlt
add
fimuls
adc
add
fsubs
and
data16
mov
mov
mov
imulb
sub
lcall
je
inc
fidivrs
pop
push
add
xor
and
enter
inc
popf
mov
cmp
pushf
cmp
and
mov
and
pushf
je
into
test
outsb
dec
dec
jo
leave
jbe
hlt
scas
repnz
xor
call
xor
push
lods
fcom
xchg
push
mov
aaa
jo
push
sahf
lret
sbb
dec
mov
cmp
sbb
add
faddl
mov
fldlg2
xchg
pop
adc
arpl
jecxz
lock
test
adc
loopne
and
popf
push
faddl
dec
out
dec
lahf
out
mov
stc
push
push
jae
mov
repnz
lcall
test
jbe
fmull
arpl
jl
and
stos
xchg
cs
and
stos
testl
int3
jge
outsb
mov
dec
pop
sub
shl
js
and
enter
ljmp
sarl
mov
xor
aas
ret
fldenv
fdiv
xchg
mov
fs
cmc
mov
add
dec
incb
pushf
ja
push
cmc
movsl
neg
je
jg
ret
push
jmp
mov
push
sti
outsb
mov
mov
ret
int3
stos
enter
outsl
divb
and
repz
js
xor
xor
xchg
enter
shll
aam
pop
iret
or
xchg
mov
mov
cwtl
jp
js
push
sub
int
fcmovnu
js
inc
arpl
xlat
js
add
cld
leave
cltd
les
pop
pop
aad
stos
loopne
scas
fdivp
xchg
test
push
adc
es
rorl
imul
dec
add
xchg
cmp
adc
inc
mov
push
scas
mov
sub
aad
outsb
faddp
cmp
adc
cmp
test
shlb
icebp
sbb
lret
orb
enter
mov
lcall
imul
mov
cmp
imul
ror
jl
jbe
in
dec
lock
mov
xor
xchg
into
mov
jp
jmp
pop
aad
mov
pop
jnp
dec
adc
mov
adc
xor
test
out
mov
mov
xchg
xchg
clc
fidivrs
lods
cmp
cmpsb
nop
imul
out
add
shll
mov
shrb
mov
mov
add
sbb
fadds
pop
jecxz
inc
pop
mulb
jecxz
sbb
aad
es
hlt
roll
push
js
dec
pop
out
and
and
inc
daa
lret
xchg
add
xchg
fucomp
xor
ficompl
outsl
aas
cmp
or
add
sbb
cmp
adc
adc
and
ja
das
stc
jns
xor
inc
and
mov
sbb
bndstx
test
sbb
xchg
bound
imul
xor
movsb
adc
cmp
shll
mov
xchg
cli
xor
mov
adc
scas
clc
rorl
movsb
push
sub
cmp
dec
jae
adc
cwtl
xor
lret
cmpsl
jno
pop
lcall
in
out
inc
pop
inc
js
je
sbb
xchg
ret
in
subl
fwait
inc
in
pop
je
sbb
inc
cmp
jns
ret
adc
lret
pop
mov
popf
ds
in
idivb
loopne
outsl
movsb
inc
cltd
xor
push
lret
mov
mov
ret
int
stc
nop
arpl
or
cmp
fmuls
test
push
sbbb
lds
test
cmp
daa
addr16
lret
aam
shlb
push
or
lret
test
les
popa
or
cs
dec
dec
adc
cmp
mov
shlb
jge
jns
es
nop
push
add
sbb
dec
adc
mov
bound
or
std
inc
cmp
data16
push
call
nop
jo
fsubrp
in
cmpsl
loope
rolb
jge
or
mov
or
pop
loope
daa
fldcw
ja,pn
xor
pop
cmc
andb
fstpt
loope
lea
insl
cmp
lea
push
dec
inc
fstpl
xchg
and
icebp
sti
cltd
movsl
bound
cmp
jmp
bound
les
xor
inc
mov
pop
add
stc
pop
div
lock
cmp
add
adc
dec
xor
add
js
flds
inc
mov
stos
lret
pop
pop
mov
adc
cmpsb
mov
cld
or
inc
dec
or
fmull
and
mov
mov
sarl
and
pop
jnp,pt
lret
pop
lret
je
jbe
cld
dec
mov
cs
pop
aad
into
push
xchg
mov
imul
loop
cld
jge
bnd
and
mov
frstor
movsl
jne
outsl
imull
daa
jmp
stos
jb
cltd
jbe
ljmp
xlat
mov
inc
push
cmp
xor
jecxz
push
in
dec
mov
into
fwait
jmp
ret
sub
dec
cwtl
pop
inc
jne
lcall
popf
sbb
call
jno
xchg
cmp
pop
mov
sub
jo
add
arpl
adc
fnstsw
js
in
movsl
adc
incl
mov
xor
std
mov
in
rorl
sub
xchg
pop
test
push
movsb
dec
mov
ss
xchg
je
decb
add
sub
jae
and
push
mov
ljmp
push
jns
sti
mov
mov
add
in
repnz
sbb
hlt
and
cmpl
int3
mov
in
lahf
aad
xchg
adc
pop
mov
lock
xchg
hlt
repnz
mov
mov
xchg
and
dec
out
lock
mov
push
in
jno
ja
inc
fimuls
add
xor
lods
out
dec
cltd
aad
pop
rcrl
shlb
adc
fcmovnbe
jg
jg
push
mov
daa
lods
orb
pop
lret
mov
ss
clc
pop
mov
dec
and
add
call
dec
jp
pop
lods
sub
imull
loop
pusha
mov
mov
pusha
dec
pop
into
cmpsb
dec
mov
xchg
xchg
and
and
xlat
pop
aaa
adc
sti
or
jbe
mov
mov
mov
in
lret
and
jl
pop
in
xlat
jmp
xor
jnp
sbb
fs
sbb
mov
adc
insl
push
adc
mov
idivl
push
jbe
dec
cmp
push
lret
inc
adc
imul
mov
and
push
jl
pop
dec
xchg
pop
scas
pop
xor
clc
xchg
das
and
pop
adc
push
sbb
cmp
and
cmp
and
jg
lods
add
jb
in
cmp
ss
mov
and
imul
sarb
mov
xchg
lea
add
icebp
in
cmp
jp
xlat
jb
jle
cmp
mov
push
mov
cmp
sbb
push
push
lds
push
in
in
mov
sbb
push
mov
test
and
add
data16
mov
or
iret
mov
lcall
shlb
lcall
loopne
scas
std
sbb
sbbb
dec
cmp
mov
pop
mov
dec
or
pop
ret
int
dec
xchg
or
enter
int3
repz
ss
or
scas
mov
jne
cltd
imul
shl
push
aaa
imul
es
jl
jge
xchg
xchg
rcll
test
mov
add
outsl
pop
inc
ret
and
xchg
ret
test
fs
xor
jae
cmpsb
dec
test
xchg
ret
push
test
or
cmc
fbstp
pop
mov
inc
mov
jg
pop
and
outsl
ja
fiaddl
adc
cmpsb
bound
mov
pop
je
sbb
sub
ret
xchg
adc
mov
addb
sbb
inc
cmp
jge
mov
int3
movhps
gs
arpl
sbb
jp
cmp
mov
outsb
int3
dec
lock
daa
push
stos
insb
sahf
push
xchg
andb
out
jle
or
cmp
pop
ret
jae
or
je
mov
xchg
mov
scas
cbtw
imul
mov
test
mov
sub
mov
std
xchg
das
dec
pushf
imul
mov
fstpl
push
cs
in
mov
jl
popa
adc
mov
jbe
ss
test
and
adc
sbb
dec
lahf
inc
or
daa
fcmovne
dec
xchg
jle
mov
popf
andl
push
stos
push
sub
dec
hlt
lcall
decl
xchg
push
loopne
out
ds
mov
daa
subl
testb
mov
push
nop
push
xor
mov
pushf
jnp
mov
push
jmp
shlb
fsubrs
mov
pop
and
in
shr
and
mov
sbb
movsl
aaa
adc
push
lcall
push
push
xor
xchg
cmp
push
cld
push
loop
or
ss
rorl
mov
das
mov
bound
mov
sub
aas
adc
add
in
inc
and
dec
out
outsb
mov
fdivrs
fldl
cli
inc
aam
mov
xchg
or
mov
scas
xor
enter
push
jmp
test
adc
js
adc
mov
ret
nop
adc
lcall
mov
daa
dec
push
pusha
jo
cmp
loope
icebp
pushf
aas
adc
jecxz
mov
sbb
push
cmp
cmp
cmpsb
mov
aam
shlb
adc
aas
xchg
push
jnp
xor
push
jle
outsl
cmp
in
mov
inc
fdiv
lods
inc
dec
shlb
pop
cs
mov
sbb
push
out
popf
outsl
xchg
or
fstl
xchg
pcmpgtw
sbbb
fsubr
sub
dec
mov
and
jb
xchg
mov
cltd
or
inc
lret
subl
push
lret
sbb
insl
pop
lea
dec
es
pop
popa
jno
arpl
push
adc
xchg
aad
push
addl
mov
test
roll
out
or
shlb
ret
pop
jmp
xlat
jne
mov
push
push
icebp
and
lahf
add
jmp
aad
jne
enter
push
gs
cltd
push
and
pop
cmp
mov
ss
fists
jecxz
sub
arpl
in
dec
inc
jmp
lock
or
cli
cmp
sahf
mov
and
push
mov
inc
xor
test
xchg
or
mov
push
mov
cmc
add
in
mov
ret
imull
aam
sahf
cmpsb
jb
push
dec
and
aaa
leave
and
mov
inc
aas
mov
xor
shrb
jmp
sbb
pop
test
push
aam
xlat
shlb
push
mov
jecxz
adc
pop
insl
incb
inc
and
sbb
pop
mov
adc
shll
add
mov
push
xorl
gs
or
and
pop
cs
jae
stos
ja
cmp
hlt
inc
mov
mov
push
mov
fildll
adc
pop
adc
pop
scas
jnp
test
out
fwait
lcall
xchg
enter
push
sbb
mov
les
and
fbstp
xchg
xchg
dec
mov
mov
nop
clc
push
jbe
push
pop
or
rclb
cmp
inc
push
mov
dec
xchg
push
les
fcompl
test
dec
sti
ja
adc
mov
xlat
outsb
inc
mov
je
int
sahf
xchg
jno
cwtl
push
or
les
fidivs
and
jnp
fs
or
popf
or
jge
shlb
inc
lret
fdiv
loope
shr
mov
in
cwtl
cmpsb
mov
or
lahf
inc
sti
mov
daa
inc
fcomip
cmp
in
cmp
jecxz
arpl
sti
lods
xchg
jns
add
rcrl
cmp
insl
or
jne
jae
test
ja
ljmp
mov
mov
cmp
lret
sub
add
jmp
mov
rolb
push
in
inc
bound
fdivs
loop
pop
scas
repz
lods
jbe
aad
pop
xchg
insb
adc
mov
repz
cmpl
lea
xor
sbb
enter
push
push
inc
inc
adc
hlt
js
sti
jnp
stos
cmpsb
aaa
xlat
cmp
push
lret
cld
sub
cmp
sub
xchg
movsb
dec
inc
loop
mov
repz
leave
aaa
jg
aam
jmp
out
test
in
fwait
jbe
bound
loopne
xchg
or
popf
mov
lods
mov
jp
mov
mov
push
push
pop
aad
test
shlb
mov
jle
add
sbbb
pusha
sbb
outsl
fnstcw
jae
popa
mov
mov
mov
push
mov
xor
fldl
rol
jl
insb
loop
lds
outsb
adcb
push
out
jne
or
mov
cwtl
sub
fisubrl
into
sahf
adc
scas
or
dec
scas
rcr
mov
je
das
jmp
mov
shrl
xchg
in
sti
sbb
cwtl
cmp
lcallw
test
pushf
push
js
and
hlt
jb
je
mov
pop
cmpsb
fstpl
jnp
add
push
aaa
add
inc
or
and
mov
out
sbb
jl
lods
stos
jo,pt
nop
cmpsl
mov
movsl
mov
push
decb
cmc
leave
mov
xor
inc
in
jae
and
in
call
inc
js
cmp
jae
add
out
clc
and
jno
push
js
shrb
cmp
adc
xorl
mov
push
push
and
xor
aas
aam
sbb
dec
push
icebp
les
pushf
xor
in
mov
jl
mov
sbb
jp
jg
xchg
sbb
or
mov
and
add
pusha
scas
out
lea
or
stc
and
sbb
mov
xchg
and
hlt
mov
fldcw
ds
or
stc
cmp
mov
or
push
pop
sbb
fwait
divb
adc
in
int3
ja
inc
jne
xor
sti
mov
stos
je
gs
icebp
icebp
add
xchg
cli
adc
mov
mov
xbegin
xor
mov
inc
pop
bound
xorl
lods
mov
repz
or
test
mov
lock
xchg
cmp
cmpb
bnd
fbld
lahf
adc
or
xor
ja
and
jo
lret
stc
cmp
and
adc
xchg
mov
lret
mov
rclb
out
fsubrl
pop
js
sbb
outsb
jbe
cmc
pop
negl
daa
ja
or
cwtl
push
aaa
jb
call
xor
sub
jbe
aad
nop
jl
pop
jmp
fdivrs
sub
sti
sub
std
lods
mov
das
sti
jmp
cli
mov
outsl
lds
fwait
aas
push
in
push
mov
cwtl
sbb
dec
lds
pop
stos
or
lahf
sbb
in
cmc
push
jg
scas
adc
dec
rolb
xadd
push
into
fidivrs
icebp
jmp
mov
shr
mov
fsubrs
sbb
dec
aam
push
xor
imul
adc
push
xor
jmp
stos
pop
adc
dec
jmp
xchg
out
sbb
add
fxch
jl
stos
lcall
shlb
loop
mov
sbb
ljmp
inc
imul
fisttpl
push
mov
or
push
das
mov
jg
icebp
add
push
inc
push
in
mov
mov
clc
int3
js
iret
sbb
mov
test
adc
sub
mov
mov
jge
les
sbb
push
sub
stc
inc
pop
jp
fwait
and
push
mov
lcall
push
test
es
inc
push
or
in
sahf
lds
enter
cmpsb
and
sub
aam
and
sti
outsb
inc
je
xchg
push
push
ret
into
inc
aam
cmc
push
jmp
fcmovb
push
lods
push
test
jge
push
mov
pop
sub
rcl
mov
in
repz
adc
das
jne
adc
push
imul
pshufw
loop
cmp
addr16
lcall
insl
stos
dec
mov
and
xchg
into
icebp
or
das
sub
pop
in
out
lahf
int
negl
out
add
int3
orl
pop
mov
and
gs
sbb
push
insl
jle
inc
lcall
dec
and
push
mov
mov
xchg
test
mov
repz
or
je
cs
mov
mov
xchg
int3
mov
lock
push
jae
push
out
scas
pop
xchg
or
inc
adc
shl
add
and
js
jb
out
pop
adc
lahf
mov
ret
imul
mov
rcrl
shr
test
mov
ja
adc
xchg
aad
rclb
sub
iret
jo
lret
xchg
add
lea
mov
aas
popf
fisubrs
mov
rclb
push
insl
xlat
jno
mov
shlb
adc
jle
xchg
mov
rol
les
pushf
add
push
mov
mov
mov
lahf
add
pop
fsubs
fcoms
inc
inc
imul
shll
push
mov
mov
xchg
mov
push
mov
subb
sbb
je
xor
xchg
jge
xchg
popa
pop
xchg
cmc
or
jl
outsb
iret
lods
push
xlat
jl
mulb
cmpsb
pop
lea
sarl
inc
mov
jp
lret
cld
fldcw
mov
push
out
push
out
int3
hlt
test
es
mov
sbb
add
mov
pop
pop
sbb
in
jns
repz
push
xchg
or
fcompl
dec
loope
xlat
dec
sahf
shr
jg
ret
or
and
mov
dec
into
mov
sub
adc
cli
pushf
and
ror
inc
lahf
orb
dec
ss
fld1
pushf
jle
or
lods
sub
mov
insb
push
mov
sub
test
lea
xchg
mov
fs
cmp
mov
sbb
jmp
and
dec
in
xor
loope
xchg
mov
dec
sahf
cld
fcmove
ljmp
jecxz
hlt
jno
mov
inc
leave
insb
jbe
mov
and
testl
xor
sarl
arpl
popf
popf
lds
cmp
add
mov
add
aas
movsl
loope
mov
hlt
push
inc
mov
push
rol
jb
pop
es
in
shlb
gs
out
loopne
push
xchg
pop
outsl
sub
pop
push
lock
add
inc
xchg
jne
xchg
gs
jle
outsl
jnp
lahf
mov
mov
sub
dec
push
das
mov
push
add
cmp
cltd
jno
jne
aas
bound
mov
add
xor
cwtl
and
ds
loop
push
dec
lret
mov
lods
inc
into
add
clc
je
mov
xchg
fs
popa
sub
and
xchg
dec
push
sbb
mov
ret
push
push
push
mov
ja
insb
add
mov
sbb
sbb
push
xchg
sub
aam
ss
psrlw
sbb
mov
scas
sub
inc
xor
dec
lcall
push
ss
add
add
push
mov
arpl
sbb
mov
cld
push
ss
mov
cwtl
lret
inc
dec
hlt
mov
push
mov
lods
inc
call
sahf
lret
lcall
xlat
and
fisttps
stos
fisubs
js
jnp
shlb
addr16
std
jnp
push
shll
adc
pop
mov
cs
aad
pop
dec
int
insb
mov
subl
call
cmp
je
das
mov
clc
mov
push
and
stos
decb
jg
lret
stos
push
outsb
ret
xchg
adc
out
push
adc
mov
push
lods
mov
push
push
ret
add
inc
pop
movsl
pop
adc
nop
stos
jae
test
aam
movsb
sub
and
lret
data16
push
adcb
into
stos
and
insl
movsl
mov
popf
xchg
insb
les
xchg
scas
push
jmp
shrb
hlt
jne
mov
xchg
or
mov
xchg
ficoms
mov
jno
push
xlat
and
xchg
cmpb
sbb
lahf
pushf
xor
add
xor
popa
pop
and
in
sub
hlt
sub
mov
xchg
loop
jo
fwait
shlb
outsl
cwtl
inc
daa
xchg
aam
fcoms
ja
mov
mov
dec
test
cmpsb
fsubrs
jmp
sub
xchg
xchg
pop
cmp
lods
xchg
inc
lahf
sbb
jle
pop
negb
stos
sbb
int
popa
dec
xchg
dec
repnz
gs
dec
jae
inc
std
test
call
push
jnp
adc
pop
sbb
sbb
push
je
aam
jns
sahf
mov
imul
cltd
mov
into
cmp
xchg
mov
add
nop
filds
jbe
add
das
push
mov
jae
cmc
sbb
fsubl
into
push
addr16
jle
pop
mov
xor
cli
cmp
dec
adc
push
xchg
and
fwait
lahf
or
imul
mov
es
inc
shlb
sbb
rcr
lea
adc
jo
mov
repnz
lock
pop
jb
adc
jo
popa
pop
xchg
pop
ss
repnz
cmp
sbb
fsubrl
lods
jmp
pop
adc
xor
movsl
and
out
sbb
mov
leave
pop
inc
addr16
daa
sbb
pop
aad
and
in
jmp
push
jne
int
repz
and
scas
jno
sahf
push
dec
loopne
add
adcl
popf
stc
push
cmc
cli
mov
mov
mov
xchg
ja
inc
repz
fstl
cs
nop
mov
inc
push
nop
xchg
push
in
into
pop
loope
jae
sbb
ljmp
repnz
add
push
push
or
daa
push
sub
dec
nop
mov
movsb
aas
xor
jnp
mov
xchg
scas
stc
repnz
inc
mov
lods
scas
cwtl
cmpsb
mov
rolb
ret
adcb
fsubrs
pop
inc
or
mov
fidivrl
ret
out
xchg
jle
dec
jb
cmp
adc
test
lock
and
cmp
lock
sub
sub
out
jae
cs
cli
pop
test
push
mov
and
adc
pop
adc
pop
fnstcw
jl
pop
adc
andb
rcr
bound
jg
mov
es
xchg
jge
daa
loop
ret
mov
cli
sbb
jno
stc
ljmp
invd
cmp
jg
jnp
in
insb
stc
inc
jne
das
mov
xchg
gs
xor
mov
sbb
mov
adc
jnp
jle
pop
imul
cmp
inc
mov
cmp
into
enter
lea
push
hlt
mov
jmp
adc
inc
adc
jo
insl
sub
mov
iret
inc
pop
lock
rcll
scas
imul
adc
in
shrb
popa
fucomp
add
mov
dec
jmp
iret
cmp
clc
xor
add
lcall
mov
add
js,pt
xchg
into
js
aas
ljmp
push
je
mov
pop
jb
cmp
jge
dec
or
cld
adc
pop
icebp
lods
and
xchg
shll
pushf
mov
scas
dec
ljmp
push
jnp
mov
dec
sbb
cwtl
jmp
jecxz
movsb
xchg
or
xchg
mov
xchg
sahf
nop
lcall
jp
sarb
popa
dec
lret
lea
or
fs
std
fildll
pop
out
mov
jnp
pop
inc
jg
jl
sbb
push
stc
xchg
mov
pop
cwtl
xchg
cmpsl
xchg
adc
int
add
add
add
jle
outsb
jg
repz
sub
rorl
jp
mov
fsts
push
je
scas
add
mov
jb
loop
add
in
aas
mov
hlt
push
push
sbb
movsb
pop
mov
xchg
cmp
sbb
cmpsl
or
adc
push
xlat
mov
inc
test
xlat
jbe
repz
xchg
int3
jl
cltd
insb
cmp
sbb
sbbl
clc
loope
sar
jmp
jmp
fadd
jb
stos
addr16
inc
pop
repnz
ror
add
inc
clc
xchg
dec
stos
pop
inc
cmc
jmp
in
xchg
leave
xchg
jns
push
lcall
and
push
jmp
push
fidivl
mov
cmp
inc
or
xor
shl
push
shll
shlb
nop
mov
inc
sbb
pop
fldz
mov
cmpb
sub
add
cmpsl
decl
gs
mov
lret
add
inc
outsl
pop
jp
fldcw
data16
inc
jne
jns
aad
push
and
and
rclb
adc
out
jae
mov
add
push
cli
push
add
fs
adc
pop
or
xchg
stos
addr16
lods
ret
xchg
push
scas
mov
test
int3
pop
mov
add
ds
dec
xorl
mov
push
arpl
inc
scas
mov
ficompl
xchg
stc
xor
inc
push
mov
xor
sub
lock
push
jg
sub
lea
push
jno
xor
xorb
xor
mov
clc
xchg
pushf
dec
xchg
or
hlt
negb
fstp
mov
mov
cmp
out
ficoms
sbbl
xchg
jg
jmp
push
lret
dec
das
das
outsb
mov
daa
mov
jl
fidivs
ficoml
dec
and
xchg
xchg
push
sbb
jp
cs
mov
xchg
pop
jecxz
and
out
sahf
sbbl
jbe
push
scas
aad
movsb
aas
sbbb
pop
pop
out
cmp
sub
shl
sbb
mov
xor
sbb
mov
or
push
sub
aas
inc
fdivl
xchg
arpl
packsswb
fwait
sbb
out
lret
out
sub
subl
mov
push
mov
pop
into
mov
dec
dec
jge
push
imul
cmpsl
fdivp
shl
ficoml
stc
inc
pusha
mov
inc
js
add
xor
in
repnz
push
and
push
add
movsl
insl
cld
shlb
fisubl
int
cmp
das
addb
cltd
mov
movsb
int3
inc
imul
daa
rcrl
out
scas
jne
push
daa
idivl
stos
je
ds
in
push
hlt
mov
or
insb
cli
leave
adcb
in
mov
dec
fimull
cmp
jbe
loopne
repnz
call
aaa
movsl
icebp
sub
bound
sbb
push
dec
jp
cmpsb
or
in
inc
idivb
push
test
or
outsb
cmc
mov
mov
daa
push
lret
mov
pushf
sti
jecxz
ljmp
rep
sbb
mov
jge
mov
sti
hlt
lret
sub
sbb
dec
mov
or
mov
and
sbb
jmp
stc
mov
push
outsb
lock
mov
or
pushf
and
popa
ss
fcomi
and
cmp
sbb
idivb
sbbb
sub
pop
push
add
inc
lea
adc
add
fs
pop
push
dec
adc
xchg
or
in
sahf
or
lahf
mov
inc
cli
orl
sbb
fld
pop
arpl
daa
xor
in
or
in
fmul
push
shlb
in
stos
adc
adcl
mov
repz
sub
sbb
xchg
jp
mov
and
sub
imul
xchg
gs
fxch
xchg
int
out
jae
mov
pop
cmp
xor
cmpb
aaa
xor
in
cli
push
lock
sub
fwait
data16
int3
sbb
and
jno
je
push
jmp
mov
mov
push
lods
faddp
adc
push
xor
mov
into
insb
push
icebp
insb
pop
clc
les
and
mov
dec
in
jecxz
dec
xor
jmp
jbe
mov
mov
cwtl
stos
and
cmc
cwtl
add
jb
mov
addl
fwait
pop
jbe
std
aad
cmpsb
mov
inc
ds
add
inc
popa
jecxz
mov
rorl
sub
jnp
adc
loop
mov
sti
out
leave
sbb
cmpsb
xchg
test
push
loopne
adc
jle
jg
popa
jo
daa
xchg
push
lods
inc
lds
pop
aam
mov
jle
sub
ret
xor
into
dec
lret
arpl
repz
push
lcall
outsb
in
insl
lock
mov
adc
clc
gs
adc
or
xorl
out
clc
pop
in
jb
pop
mov
shlb
fsubrs
inc
data16
jo
repnz
sbb
scas
repz
inc
cli
mov
adc
pop
iret
addr16
popf
mov
fimull
xorl
les
dec
sbb
mov
add
xlat
cmp
out
stos
jb
mov
loopne
sub
mov
xchg
sti
push
out
mov
je
push
inc
js
adc
imul
and
fnop
pop
mov
and
dec
pop
xlat
repnz
test
mov
xchg
mov
shlb
xchg
sub
arpl
and
enter
pop
add
test
pop
jbe
jl
inc
push
mov
mov
sbb
adc
mov
shl
les
stc
mov
fdivp
inc
mov
mov
mov
ret
lret
je
dec
int
mov
rcr
cmc
clc
test
pusha
mov
aad
stc
mov
repnz
fldl
xor
xchg
nop
pop
push
mov
and
lcall
push
das
testb
jle
xor
and
sbb
adc
int3
int3
sbb
pop
xorl
xchg
mov
ss
jg
repnz
sarl
clc
inc
jecxz
push
pop
jns
cmpsb
pop
mov
mov
outsb
pop
loop
es
in
lods
cmovno
dec
pop
aaa
int3
int3
out
cmp
push
inc
jp
cmp
mov
repz
cmp
test
addb
out
xchg
int3
mov
inc
push
xchg
sub
icebp
pop
cld
ja
add
sub
pop
ljmp
jecxz
fisubs
lock
imul
sbb
or
jecxz
mov
pop
int3
push
into
scas
cld
sbbb
inc
int
push
inc
js
sbb
icebp
mov
loopne
aas
fs
dec
push
mov
add
add
xor
aad
jb
in
subb
mov
mov
dec
sbb
vpunpckhwd
stc
outsl
jp
rorl
xchg
out
pusha
xchg
imul
std
out
or
loope
jo
je
into
jge
repz
jecxz
movsb
or
lock
lods
xor
inc
shr
xchg
into
mov
dec
jns
dec
jge
shr
mov
push
outsl
mov
mov
pop
and
pop
mov
mov
adc
jmp
pop
mov
xlat
loopne,pt
mov
and
mov
outsl
daa
ds
rcrl
mov
movsl
lods
mov
adc
mov
push
fimull
andl
xchg
or
leave
pop
mov
pop
jmp
pushf
loopne
dec
xchg
pop
outsb
outsb
sbb
in
fmulp
mov
push
lods
push
in
push
jb
call
in
sti
add
lods
cltd
pop
adc
mov
loop
cld
es
out
inc
adc
lahf
loope
xor
int3
mov
test
adc
das
popa
mov
popa
lret
jns
mov
lods
xchg
sub
push
out
nop
mov
scas
iret
inc
cli
sub
mov
sub
xchg
cmp
and
dec
sbb
insl
ljmp
mov
repnz
out
incb
mov
in
or
sub
notb
outsb
mov
xchg
pushf
push
setbe
cmp
test
mov
inc
xlat
fldl
and
rcrb
icebp
adc
stos
dec
clc
cmp
shll
int
faddl
lret
add
cmp
sarb
stos
lds
out
sub
dec
sahf
inc
push
mov
subl
or
jnp
ja
push
or
mov
lds
fwait
adc
sub
mov
and
mov
cltd
xchg
int3
pop
or
mov
or
cld
push
add
inc
je
sub
repz
aad
mov
mov
jbe
sub
int3
mov
xchg
push
push
mov
mov
pop
push
push
out
loop
push
call
pushf
stos
outsl
inc
das
push
sbb
and
mov
pusha
je
andb
decb
iret
ss
shr
push
sbb
sarl
es
inc
lret
jbe
xorl
fmuls
jmp
pop
out
sahf
ret
ljmp
xchg
cmp
mov
pop
sub
in
dec
stc
ret
pop
mov
sbbl
cld
add
mov
and
mov
mov
scas
jmp
xchg
fistl
jbe
loop
jmp
push
xchg
aad
mov
pop
xchg
sti
sbb
add
test
pop
mov
lock
dec
mov
push
and
mov
movsl
lds
adc
sbb
cli
ja
subb
inc
jmp
outsb
stc
xor
ret
les
inc
ss
inc
push
sarb
push
add
in
xchg
ljmp
test
add
pop
or
jmp
cmc
iret
mov
cmp
push
pop
jl
les
ds
jl
add
pop
mov
in
out
pop
shll
pop
cmp
jle
fsts
xor
jmp
bound
pushf
leave
cmp
ror
xor
xor
dec
es
inc
aaa
clc
lret
jle
sub
dec
adc
xchg
jecxz
cmpb
inc
rcl
add
push
xor
add
pop
enter
jle
sub
mov
pop
scas
jbe
add
xchg
mov
push
lret
and
imul
je
pop
call
jp
mov
inc
mov
push
push
mov
pop
add
cmp
adc
fwait
addr16
jl
xor
adc
pop
int
ja
mov
ljmp
jle
dec
lcall
sti
jo
lret
sbb
pusha
push
add
and
stc
jmp
clc
mov
jbe
inc
lds
adc
sbb
and
xchg
jnp
cmpsl
int
dec
adc
xchg
adc
mov
mov
test
mov
mov
loopne
cltd
cmp
sbb
mov
and
out
jle
add
mov
les
push
and
mov
cmp
in
fists
into
hlt
imul
xor
icebp
push
inc
jl
out
adc
xor
xorb
push
lock
in
pop
fmul
sbb
dec
xchg
sbb
fidivrl
mov
fdivr
inc
inc
insl
push
fdivl
cwtl
das
dec
imul
scas
lcall
jl
xor
pop
pusha
lods
add
outsb
xchg
push
test
dec
outsl
push
mov
and
cld
in
push
fucomi
cmp
mov
jns
and
loopne
pop
mov
out
mov
mov
in
fisubl
mov
mov
jg
add
push
repnz
iret
mov
mov
lds
cmpsl
jns
fstl
ljmp
push
mov
stc
mov
stos
push
add
jle
test
mov
dec
mov
outsl
ss
jge
sbb
aad
xor
or
in
fisubs
fldl
das
int3
jg
leave
imul
add
xchg
inc
jbe
inc
sub
sub
orb
jl
pusha
and
das
test
mov
lods
pushf
and
xor
std
and
fisttps
push
fsub
bound
sbb
neg
xchg
call
and
cmpsl
test
dec
add
xchg
inc
notb
aas
pop
sbb
xor
xor
dec
jg
lret
mov
cmp
int3
xor
rsm
fcomi
sbb
or
lock
jno
dec
sub
or
std
ja
add
stc
into
pop
scas
jb
dec
std
orb
jb
test
xchg
mov
cmp
mov
in
xchg
nop
xchg
lods
pop
mov
push
xchg
dec
inc
push
cmovnp
out
and
loop
pop
cwtl
mov
leave
out
jl
mov
cmpsb
xor
mov
push
adc
dec
push
mov
inc
cld
lcall
int
xchg
jecxz
fs
daa
mov
das
push
cmp
arpl
pop
stos
mov
xchg
shrl
dec
insl
fldl
mov
ss
mov
out
pop
loope
push
adc
sbb
fsts
jnp
stc
push
xchg
or
addr16
mov
fnstenv
cmc
ds
mov
xchg
cltd
into
aaa
jmp
aaa
cmp
xchg
test
lahf
js
and
pop
aad
inc
jp
push
xor
sbb
add
fs
jns
mov
mov
mov
stos
and
ds
int3
fistpl
jb
lcall
inc
sbb
mov
loopne
clc
jg
push
stc
push
xchg
ds
popf
jp
lods
and
sahf
gs
fs
cmp
cmc
sbb
test
fldcw
test
lea
and
inc
xor
xor
inc
loop
jle
add
jmp
movnti
jg
mov
shll
and
mov
or
or
mov
cmp
scas
fadd
in
push
cmpsl
adc
pop
enter
data16
pop
xchg
add
les
shlb
adc
aad
es
cmp
lcall
fsubrl
jp
push
pop
push
dec
test
dec
lret
les
imul
bound
outsb
xchg
popa
in
loop
dec
fs
inc
ljmp
push
cmp
inc
repz
ja
fisubs
push
test
lret
outsb
and
hlt
loop
fistpll
inc
adc
in
fmul
iret
fists
repz
pop
xchg
iret
stos
adc
gs
push
mov
loope
cmp
out
ret
stos
push
jle,pt
mov
adc
inc
xor
dec
inc
out
lods
or
add
iret
test
outsl
sti
adc
scas
scas
xor
pop
mov
or
dec
xor
pop
sub
inc
mov
sbb
shll
out
out
pop
mov
add
shl
out
leave
fcomps
xor
mov
xchg
scas
mov
mov
jns
or
ds
subb
decl
sub
ret
int3
leave
lret
hlt
sub
jnp,pn
sbb
add
fisubl
movsb
insl
mov
jle
adc
bswap
imul
loopne
inc
in
cld
cmc
inc
cmp
into
mov
inc
rcrb
stos
in
mov
mov
hlt
fxch
pop
jne
js
ror
pop
insb
pop
dec
sti
test
or
mov
pop
add
rol
and
jae,pt
aaa
adc
divl
lock
jg
loopne
fildl
stc
ja
xchg
pop
idivb
add
test
sti
add
daa
sub
popf
out
shr
add
in
lea
adc
xor
aas
stc
add
sub
sub
stos
mov
or
jbe
stc
loop
stc
mov
mov
mov
inc
push
dec
pop
add
repz
and
sbb
push
outsl
stc
test
mov
xor
xchg
into
mov
sti
cli
and
push
fstl
pop
add
out
ss
js
test
cmp
xor
dec
out
mov
cmp
mov
mov
mov
inc
mov
mov
adc
pop
xor
loopne
inc
cmpsb
aaa
rcll
mov
mov
jge
pcmpgtw
cmp
cmp
arpl
mov
imul
mov
outsl
push
dec
jo
lret
lahf
dec
into
das
inc
xchg
mov
pop
insb
inc
inc
imul
and
dec
bound
push
jmp
push
cld
test
add
loop
into
add
loope
fnstenv
shll
push
add
xchg
scas
loope
mov
dec
jg
and
in
add
mov
pop
add
fbstp
shr
inc
pop
test
imul
push
push
in
fsubl
inc
adc
ljmp
jmp
insl
push
mov
dec
js
scas
mov
loopne
pushaw
out
adc
mov
inc
negb
fwait
or
hlt
inc
data16
ss
pop
xchg
cmp
rcrl
outsb
inc
mov
pop
inc
subl
in
inc
mov
out
addr16
sub
adc
movsl
push
loop
dec
je
fwait
mov
pop
flds
inc
push
cs
orb
aaa
mov
outsb
xchg
cld
xor
push
dec
js
movsl
lcall
call
ret
js
int
mov
dec
jne
hlt
xchg
fisubs
fwait
repz
lahf
jmp
mov
lea
pop
or
shll
scas
mov
cmc
icebp
sub
xchg
xor
push
cmp
fs
or
movsb
lcall
or
in
cmp
xor
mov
and
jo
repnz
loope
fstl
test
pusha
fcomps
jno
or
jge
or
sbb
jbe
fyl2xp1
iret
mov
xchg
push
outsl
jae
in
ret
xchg
mov
inc
ja
pop
push
rclb
mov
pop
sub
mov
insb
daa
ret
movsl
jl
push
movsl
std
lock
mov
sbb
add
and
pop
push
dec
aas
sbb
imul
inc
lods
gs
inc
xchg
lcall
and
mov
push
faddl
loope
add
xchg
mov
das
ljmp
popf
fdivs
pop
lock
dec
lock
push
js
cmp
mov
and
imul
cmc
dec
hlt
testl
int
cmc
mov
shlb
enter
movsb
jae
xchg
dec
cmpsb
pop
mov
and
xor
test
dec
into
inc
lods
cmp
stos
inc
dec
pop
in
scas
mov
fildl
cmp
hlt
js
pop
lcall
imul
push
xchg
les
aad
les
popf
push
jb
inc
mov
mov
dec
shrb
cmp
rcrl
gs
outsl
push
ljmp
push
scas
stos
repz
dec
nop
mov
add
mov
sub
add
imul
cmpsl
dec
and
and
xor
std
add
dec
xchg
sbb
movsb
add
adc
mov
stos
jno
mov
inc
cltd
cmp
ret
nop
jno
push
sub
int3
js
pop
mov
sbb
dec
mov
push
jg
js
ret
mov
scas
int
sub
dec
dec
setg
mov
push
cld
mov
outsl
es
outsb
mov
jbe
bound
sub
fnstsw
or
xor
jae
or
ficompl
lret
loope
pop
adc
mov
gs
add
or
imul
jns
sbbl
faddl
dec
jno
xchg
xor
pop
mov
lock
movsb
scas
push
mov
lods
int3
add
stos
jbe
mov
lret
add
aam
popa
clc
xchg
stc
adc
ljmp
adc
jl
loopne
adc
mov
pushf
sub
fisubl
lret
xor
or
sub
lret
sub
call
imul
xchg
pop
clc
scas
push
sbb
in
or
cmp
lcall
mov
cmpsb
bnd
testl
ss
cmpsb
sub
adc
dec
bound
popf
push
pusha
insb
test
mov
sub
insb
push
gs
mov
punpckhdq
adc
std
xor
sub
iret
lahf
cmp
add
test
test
cmp
xchg
mov
fcmovnb
mov
cmpsb
or
pop
imull
jb
jns
cld
pop
mov
stos
lcall
stos
jg
cmc
jecxz
sub
dec
pusha
test
dec
daa
cmp
test
test
or
xchg
adc
push
cld
lea
rcrb
dec
inc
pop
pop
sub
popf
dec
cmp
sub
add
adc
sbb
jecxz
divb
aam
adc
ret
arpl
rcrb
imul
mov
ljmp
fucomi
loop
jg
and
inc
push
sbb
mov
mov
jge
cmp
jb
loopne
imul
cmpsb
and
sbb
pop
fildll
sub
cwtl
xchg
sub
mov
insl
fwait
adc
ds
repnz
mov
test
jmp
sbb
mov
push
scas
mov
cwtl
aas
arpl
in
pop
mov
fcomi
into
je
push
cmp
cmpl
inc
shlb
mov
mov
aas
mov
mov
outsl
mov
lock
shrl
mov
xchg
cmp
loopne
andb
lret
sti
int
aaa
dec
push
cmp
fmuls
inc
ds
xor
sahf
ret
pop
inc
es
cmc
mov
into
subb
ja
stc
lods
repnz
fstps
jae
mov
cmp
lea
dec
icebp
or
sti
ja
push
mov
pop
jns
mov
mov
and
sub
cs
test
add
test
test
ret
cmpsb
imul
jl
adc
aad
inc
fdivrl
scas
sub
inc
repnz
repnz
test
in
cld
push
mov
insl
and
pop
dec
das
mov
or
or
xchg
cmp
stos
mov
dec
icebp
sub
mov
das
lea
in
aad
popa
mov
mov
lret
push
mov
aad
lcall
loop
jnp
mov
jns
test
xor
repz
mov
aam
popl
das
cmpsl
je
sti
sbb
sahf
je
out
or
sub
insl
and
push
filds
movsb
mov
je
fadd
imul
test
mov
push
and
lea
mov
add
push
adcl
ret
or
mov
sub
push
xchg
fwait
test
mov
nop
dec
push
fstpl
imul
sahf
dec
push
push
jne
xor
sbb
add
xor
stos
loop
fldenv
subl
push
int
movsl
cmpsb
out
xlat
xor
dec
fwait
push
mov
mov
and
mov
push
in
mov
lods
scas
test
pop
lock
and
sub
mov
pushf
fcmovbe
cmp
popa
and
xchg
push
icebp
push
sbb
insb
mov
xchg
adc
out
mov
sub
cmpsb
push
xor
mov
xlat
stc
xor
cmp
mov
shl
je
xor
sarl
or
and
mov
or
push
ror
jne
mov
jne
jmp
insl
lock
stc
xchg
lods
xchg
std
cmpsl
sub
hlt
scas
push
out
scas
pop
jae
scas
mov
jb
inc
pop
lea
fs
mov
inc
fldcw
inc
mov
test
mov
rcrl
loope
lds
les
jge
in
sub
sub
mov
dec
inc
mov
sbb
sbb
sbb
mov
pop
call
movaps
sub
ja
loope
xchg
mov
xor
iret
mov
mov
dec
cmp
in
lods
mov
insl
sub
dec
lahf
mov
jne
pop
push
pop
orl
jl
sbb
push
test
aaa
roll
jo
mov
inc
sahf
adc
repz
push
ds
ror
dec
outsl
and
sub
aad
dec
adc
mov
jmp
pop
bound
outsb
std
dec
hlt
inc
daa
aas
mov
test
test
xchg
pop
and
adc
jle
xor
adc
fstl
inc
inc
sub
loopne
sub
loopne
daa
add
lret
or
pop
jl
ja
stos
push
popa
cs
insb
hlt
jl
and
push
test
std
testb
jle
cli
loope
pop
repnz
sbb
inc
ret
pop
pop
and
mov
push
jno
out
inc
movsl
add
sub
int3
mov
cli
rcr
std
fimull
dec
in
scas
les
jne
test
dec
shrb
jnp
scas
out
jl
inc
xchg
ss
sbb
push
fbld
movsl
pop
fdivrl
pop
mov
adcb
imul
pushf
sub
cmpsl
cmpb
mov
ss
xchg
sub
scas
cmp
push
iret
out
lret
pop
ret
test
sahf
hlt
inc
fcmovnbe
sbb
xchg
ss
movsb
push
xor
jg
xor
pop
lds
push
daa
dec
lahf
add
xor
adc
je
mov
push
jnp
cs
popf
push
push
push
mov
pop
lods
icebp
call
cmc
xor
and
js
imul
lods
les
stc
mov
repnz
sub
dec
add
scas
or
push
jle
insb
mov
cmp
inc
sub
push
test
mov
or
in
push
mov
push
adc
insl
xorb
popa
adc
or
adc
andb
bound
sarl
adc
aas
in
andb
cmp
or
inc
pop
lods
aam
std
call
lea
sbb
lret
jp
xlat
or
dec
popl
sub
mov
cmpb
bound
mov
xchg
inc
shll
js
jmp
mov
cltd
mov
rcrl
icebp
movsl
dec
ret
adc
xchg
pop
jnp
push
dec
or
mov
xlat
test
rcl
jns
fstl
and
pop
or
mov
jae
dec
mov
mov
adc
jmp
popf
pushf
adc
mov
xchg
clc
aas
jp
pop
pop
popf
pop
arpl
push
int3
xchg
adc
data16
loop
dec
cs
shlb
ss
xchg
xor
shll
push
dec
add
adc
ficoml
scas
pushf
xchg
fbld
jo
sbb
mov
stc
pop
mov
jns
cmp
mov
pop
cmpsb
testb
push
mov
lock
pop
loope
jae
pop
inc
mov
push
mov
lret
lds
pop
jne
out
mov
dec
andb
mov
adc
movntps
xlat
push
fbstp
in
shll
jb
minps
or
cld
lret
nop
dec
inc
xor
insb
xchg
pop
rcrl
pop
filds
das
push
idivl
mov
ja
xor
and
in
insl
cmp
mov
mov
pop
daa
divl
bound
ret
lcall
fxch
push
movsb
push
fisubrs
xor
and
out
shr
repz
cmp
pop
movsl
int3
dec
inc
dec
repz
sub
pop
cli
fwait
adc
aas
jb
jg
mov
push
insl
mov
xor
test
pop
sbb
lret
adc
nop
fisubrs
test
pop
or
pop
xor
cwtl
mov
cli
xlat
push
loop
out
les
clc
sti
repz
rcll
sub
aas
movsl
mov
adc
insl
or
aaa
xor
outsb
push
cmp
xor
movsb
aaa
ret
rol
aad
xor
push
or
dec
ss
js
mov
lock
mov
or
bound
xor
sbb
dec
out
inc
in
mov
and
cmp
cld
pusha
cmp
pop
or
xchg
pop
dec
mov
sub
sub
fstpl
or
test
movsb
adc
stos
push
gs
mov
lea
pusha
je
test
dec
xlat
and
and
add
or
push
ret
addr16
mov
jnp
int3
pop
push
dec
out
icebp
xchg
mov
cmp
inc
int3
xor
mov
mov
lea
jecxz
pop
gs
dec
fisubrs
jno
push
push
sbb
out
imulb
cmp
and
leave
lock
inc
jno
in
adc
xchg
bound
jbe
and
pop
xor
cmp
leave
sub
xchg
pop
sbb
ja
dec
mov
stc
push
aam
push
pusha
sbb
sahf
addr16
lret
out
aas
sub
sub
sti
mov
lcall
fstl
scas
mov
cld
sub
leave
test
dec
jae
and
cmp
repz
in
xchg
xor
fdivs
lea
cltd
jno
mov
in
add
jmp
insl
add
pop
xlat
outsb
lods
test
or
sbb
repz
insb
cmpsb
clc
ds
aad
adc
das
call
aad
movsb
jmp
xchg
xchg
or
clc
dec
fildl
sub
push
les
mov
pop
and
dec
ja
stos
test
int3
sub
daa
adc
mov
in
dec
or
mov
and
xchg
cmp
pop
mov
inc
jp
nop
jle
dec
not
xlat
mov
test
loopne
jmp
incl
pop
mov
xchg
int3
imul
inc
or
and
xchg
or
mov
mov
inc
xor
adc
sarb
cld
adc
fs
stos
cmpsb
cmp
test
inc
repnz
shlb
or
xchg
test
sarb
aad
inc
hlt
lret
or
jge
sbb
jecxz
scas
and
xchg
add
out
mov
out
push
and
inc
pop
insb
jp
call
push
jl
sub
iret
dec
jae
hlt
idivb
mov
mov
shll
push
inc
mov
lods
mov
ja
and
lret
push
mov
out
jmp
mov
push
dec
cltd
insb
ds
push
add
jg
cmpsl
rcrl
lods
bound
int
dec
add
test
addb
xor
jae
push
sub
mov
push
pop
adc
adc
adc
mov
fsubp
inc
test
mov
sbbb
repz
cmp
sub
sbb
cs
repz
inc
insb
cltd
stos
push
mov
stc
xchg
sub
inc
inc
popa
dec
mov
dec
pushf
enter
test
and
push
mov
leave
ret
test
xadd
pop
hlt
addr16
ljmp
cs
ficomps
iret
movsl
mov
xor
or
sub
pop
jg
push
and
push
push
or
outsl
push
loopne
test
fcompl
pop
xchg
mov
pop
adc
out
add
adc
dec
mov
pop
push
xchg
adc
mov
xchg
or
pop
xchg
pop
ret
imul
pop
sub
int3
dec
sbb
mov
and
pop
sti
scas
jb
mov
pop
dec
xchg
shlb
and
imul
lods
jae
loopne
shrl
xor
xchg
outsb
sub
in
push
movsb
aam
mov
pop
mov
das
push
call
lahf
aas
inc
gs
fists
or
popa
adc
add
push
mov
mov
dec
insl
sub
inc
in
dec
xchg
rcrl
push
loop
inc
pop
std
clc
aas
or
aam
jge
std
add
push
negl
test
into
xchg
mov
ds
jb
lock
lods
sbb
int3
in
sti
cmp
or
dec
mov
adc
sub
ret
jl
pop
sub
in
sbb
mov
xor
scas
das
pop
loopne
in
jnp
sbb
sbb
aam
out
mov
leave
pop
int3
inc
adc
add
jns
adcl
mov
popa
pop
pop
cwtl
xlat
loopne
mov
add
xchg
in
sarl
paddusw
repnz
sahf
xchg
mov
jae
inc
sbb
jno
dec
shll
rcl
dec
xchg
inc
or
adc
mov
xor
mov
xor
bound
pusha
das
cs
or
loope
ret
insl
add
fisttps
xchg
adc
mov
add
mov
sarb
in
repz
xchg
cli
call
les
icebp
loop
aad
add
xor
dec
scas
or
inc
pop
cltd
inc
pop
mov
sti
push
or
subl
icebp
mov
ret
mov
xchg
xchg
jmp
dec
stos
lret
in
iret
xchg
fdiv
popf
out
sbb
daa
sbb
loopne
pop
out
insl
cmp
sub
out
in
scas
cld
lea
jle
lock
insb
fldlg2
fiaddl
pop
pop
add
stc
loope
pop
pop
in
lods
mov
aad
jecxz
loopne
add
cs
pop
in
sbb
xor
and
xchg
cltd
cld
xlat
xor
arpl
lock
mov
and
pusha
mov
rclb
inc
insb
outsb
popa
mov
mov
pop
into
jno
add
mov
pop
xchg
in
lea
loopne
test
or
push
xor
xchg
push
mov
js
lods
sub
push
xchg
pusha
or
hlt
add
xchg
adc
jno
pop
insl
imul
movsb
ret
rclb
xchg
cld
loopne
into
pop
popf
push
inc
mov
in
outsb
enter
or
or
aas
testb
push
inc
adc
mov
sub
js
mov
lahf
loopne
fsts
cwtl
jo
mov
aad
aas
shrb
mov
push
and
mov
fcoms
dec
jecxz
fs
sub
andb
scas
cs
lret
mov
mov
sub
loope
cld
in
add
jmp
dec
in
aam
cmp
clc
imul
jle
scas
in
mov
sub
adcl
cmpsl
mov
scas
mov
pop
daa
out
insl
adc
xchg
xor
push
or
stos
clc
sahf
mov
add
js
ret
cmpsl
dec
in
std
mov
sbb
jbe
or
xlat
sub
jns
dec
cwtl
loopne
mov
je
or
movsl
push
jno
dec
dec
sbb
lret
int3
sub
push
lret
bound
leave
fildll
roll
sbbb
xor
add
mov
sub
or
mov
and
push
mov
xchg
enter
das
insl
xchg
pop
push
pusha
or
cld
loop
xchg
sub
bnd
adc
fisttpll
sbb
loope
mov
das
clc
lcall
inc
mov
xor
loop
xchg
cs
repnz
jbe
cmp
mov
pop
aas
push
mov
xchg
call
das
sbb
pop
sbb
jns
scas
pop
hlt
scas
inc
mov
mov
pushf
mov
fldcw
mov
loop
or
lret
lds
jbe
aas
fadd
stc
cmp
xor
lods
jb
adc
repz
outsl
pop
mov
jl
out
jbe
pop
pop
mov
nop
shr
mov
inc
xor
pusha
bound
inc
xor
leave
in
or
lcall
jae
push
mov
popf
cmp
out
jg
ja
dec
fstpt
cltd
dec
add
xchg
cmp
sbb
sahf
stos
loop
arpl
outsl
aaa
push
lods
and
ret
add
pop
push
xchg
adc
mov
push
sub
jbe
insl
sub
not
lods
in
arpl
cld
or
xchg
jne
push
dec
xor
sbb
mov
push
mov
fld
mov
ja
lea
inc
pop
jg,pn
xchg
sbb
xlat
lods
cmp
cmp
dec
jae
xor
jne
or
lock
add
icebp
ret
imul
lds
movsb
ljmp
call
mov
add
in
movsb
insb
lret
or
adc
stos
dec
adc
inc
pop
in
out
je
push
pop
das
mov
adc
and
mov
cmp
in
add
jl
ss
sbb
mov
push
xchg
and
xchg
call
jg
push
fwait
aam
mov
dec
je
mov
mov
repz
pop
mov
xchg
push
mov
xchg
call
mov
mov
push
paddd
loop
mov
pop
or
push
jnp
adc
fadds
fs
dec
jl
jbe
insl
mov
cli
test
scas
loopne
lahf
adc
cmc
js
ds
aas
cmpsl
add
scas
data16
loopne
pop
sub
jno
fs
into
and
xorl
sub
push
sbb
dec
cwtl
pop
push
movsl
xor
xor
cmp
in
dec
pushf
pxor
movsb
ljmp
adc
insl
pushf
and
or
gs
jmp
sbb
sbb
imul
movsl
lods
push
adc
and
pop
xor
pop
ja
jmp
xor
and
adc
sti
mov
popf
cmp
pop
mov
pop
lret
add
push
jmp
sbbl
movsl
jl
pop
shrl
jp
sub
cltd
out
add
sub
ds
sti
xchg
dec
or
jl
popa
add
js
aad
popa
jge
ret
jge
xchg
xlat
sub
hlt
std
push
mov
js
push
lret
repnz
pop
mov
xor
sub
dec
jbe
ret
iret
test
test
imul
cmc
lahf
mov
andl
push
mov
ret
int3
mov
sbb
mov
les
jecxz
test
sub
mov
rorb
fsubr
stc
movsl
stos
ds
push
repz
jl
jnp
fistps
adc
out
pop
and
lret
jg
cmp
ljmp
ja
push
imul
gs
inc
loop
in
jmp
adc
sti
ss
dec
call
shrb
pop
add
push
filds
mov
xor
mov
mov
push
jo
mov
imul
mov
adc
rcrb
push
pusha
sub
push
jge
outsb
jnp
mov
lea
jp
sub
add
sbb
adc
pop
sub
popf
fwait
pop
mov
jl
popa
lcall
int
xor
pop
jae
sub
popf
loopne
push
lea
dec
add
sahf
mov
lea
and
dec
push
rclb
test
sbb
sub
out
add
iret
inc
repz
loopne
out
mov
popa
mov
xchg
sub
data16
fucomip
and
sub
jl
ret
test
mov
add
push
fistpll
pop
psubusb
mov
out
push
rolb
bound
ljmp
xchg
sub
inc
sub
fiadds
pop
pop
mov
fisubrl
mov
out
cltd
fidivrl
inc
mov
sarb
jb
jmp
scas
push
dec
inc
out
sbb
pop
adc
xchg
ss
movaps
inc
push
stos
push
adc
fisttpl
push
fidivrs
push
out
call
lock
or
inc
push
push
dec
je
or
dec
sahf
jecxz
mov
push
lods
mov
mov
addr16
mov
enter
sbb
jg
leave
rorl
nop
mov
fdivl
inc
and
stos
ffree
mov
test
dec
mov
cmp
or
imul
mov
out
sar
fs
mov
mov
cmp
pop
pop
in
mov
int
sbb
ror
xor
mov
data16
cmp
arpl
dec
mov
and
cmp
lock
cmc
jge
std
cmp
out
xchg
xor
stos
movsb
jbe
jl
fsubp
dec
aam
into
pop
divl
cld
out
inc
xor
lret
cmpsb
out
loop
cld
ds
jae
sbb
aad
sbb
ljmp
cmp
dec
adc
jns
inc
xchg
dec
add
jp
mov
add
addb
adc
add
ss
xor
in
sti
or
add
cmp
lods
ds
inc
dec
sbb
xchg
ds
and
mov
loopne
jnp
addr16
hlt
rorb
mov
push
repz
push
call
push
fiaddl
push
mov
add
stos
xor
sbb
inc
jmp
jne
mov
femms
mov
es
out
xor
and
pop
cmc
int3
or
into
push
iret
mov
adc
popa
cmp
ja,pt
filds
xor
and
addb
push
mov
imul
sbb
adc
enter
jecxz
popf
dec
or
dec
pusha
sub
dec
insb
test
dec
fs
mov
mov
leave
shrb
xchg
lahf
imul
loop
push
dec
adc
push
test
std
cmpsl
and
cld
cmpsl
adc
sbb
or
loope
adc
mov
cs
mov
or
cmp
mov
idivl
xor
push
push
jmp
mov
loope
dec
nop
cmp
test
dec
jle
cmpsl
sbb
gs
adc
pop
stos
movsb
cmc
aad
ret
out
or
mov
sub
xchg
add
nop
dec
jb
gs
jo
xor
adc
ret
in
mov
icebp
push
jmp
xchg
dec
addr16
jg
test
pop
and
insl
cmpsb
push
mov
inc
xchg
fidivrs
out
jl
daa
sti
popf
cmp
inc
stos
add
cli
or
fcomp
sbb
inc
fs
sbb
pop
mov
nop
icebp
add
rorb
mov
jmp
add
adcl
int3
cmp
stc
rol
mov
mov
les
push
cmpsb
xor
jae
dec
roll
insl
jno
shll
mov
rcr
mov
or
cwtl
mov
je
or
notb
push
in
pop
inc
mov
adc
mov
mov
pop
call
dec
mov
imul
push
imul
or
shrb
cmpsb
aaa
adc
popa
inc
movsl
mov
dec
cmc
imul
cmp
dec
test
mov
std
cmp
test
pop
test
test
push
push
stos
xchg
add
inc
and
and
fs
jmp
repnz
ds
dec
adc
loope
test
iret
cli
xor
sbb
mov
aad
js
xchg
movsl
in
daa
lock
cmpsl
mov
shll
pop
dec
cli
popa
pop
test
sub
jae
daa
cmp
stos
xor
clc
out
rcrl
lods
mov
mov
jae
bound
into
sub
jbe
dec
mov
push
add
and
into
pusha
mov
movsb
testb
lahf
or
jnp
jb
lahf
daa
mul
into
leave
jne
xchg
or
lcall
out
mov
push
test
lret
xor
and
dec
mov
into
lds
sbbl
adc
pop
mov
adc
setl
mov
or
fs
jnp
inc
xchg
and
inc
mov
fnstsw
sub
push
test
adc
add
outsl
jnp
jnp
lock
outsl
cmp
jbe
fbld
aaa
dec
push
in
cmp
lods
out
add
cmp
das
fidivrl
pop
in
arpl
outsl
test
fidivrs
push
mov
in
std
cli
and
xchg
xor
lea
sti
cmc
scas
outsl
outsl
push
xchg
mov
movsl
insb
sub
adc
dec
and
ret
cmp
push
call
dec
cmp
icebp
adc
cmp
xor
push
loope
scas
add
pop
inc
dec
lret
jns
fisttps
stos
das
jne
xlat
leave
cmpl
pop
sbb
test
orb
lds
push
inc
cmp
lcall
lock
xchg
push
dec
sbb
mov
xor
and
mov
ret
mov
repz
xchg
idivl
cmp
or
insl
daa
mov
mov
fadds
pop
jbe
sub
jecxz
cmc
shll
cmp
inc
sub
cmp
lahf
les
lret
in
mov
inc
sub
xchg
xchg
and
push
stc
pop
mov
mov
xchg
pop
adc
in
repnz
and
sbb
js
popa
inc
lods
xor
or
mov
inc
lds
xchg
daa
inc
test
arpl
cmp
leave
inc
data16
cmpsl
pop
xchg
cs
std
mov
mov
xchg
rolb
int3
xchg
push
fstl
xchg
xor
mov
xor
mov
jnp
fsubs
mov
std
cmp
insl
push
imul
jl
add
jae
test
std
int
int
pop
mov
sbb
jg
scas
inc
in
lahf
ror
orb
popa
inc
jecxz
ljmp
inc
icebp
mov
jo
add
shll
clc
imul
fildll
push
jne
add
sahf
icebp
in
in
mov
or
or
adc
push
cmp
test
mov
cmp
xchg
and
xorb
mov
xchg
jecxz
mov
xor
into
mov
shlb
scas
pop
and
addr16
mov
push
lds
mov
sub
pushf
push
jl
cwtl
mov
lods
sbb
xchg
pop
xchg
lea
out
mov
xchg
js
add
push
pop
imul
je
pop
pop
enter
std
push
shrl
push
ds
sarl
jnp
mov
pop
std
push
lahf
mov
ja
test
pop
stos
inc
adc
sub
mov
insl
cmpsb
arpl
arpl
push
mov
idivl
stos
push
dec
testb
adc
scas
cld
mulb
in
imul
and
hlt
sub
add
clc
sub
adc
int3
bound
repnz
mov
xor
xchg
aaa
and
cli
mov
or
jo
cmc
movb
or
movsl
adc
outsb
rclb
push
pop
imul
gs
out
jne
jns
fstpl
push
dec
ret
js
std
jl
int3
jecxz
push
add
xchg
xor
outsb
cwtl
in
mov
imul
clc
sbb
les
push
insl
cmp
mov
ljmp
adc
and
jae
aam
pusha
arpl
fsubs
inc
sub
out
icebp
in
or
dec
popl
je
mov
movsl
jo
sets
in
mov
push
inc
mov
jl
xchg
xchg
test
mov
rcrb
xchg
add
out
lods
sub
in
cmc
jae
outsl
add
cmc
mov
mov
loopne
repnz
insl
nop
ja
push
jne
pop
push
inc
iret
mov
iret
rorb
mov
es
sub
push
xor
pop
lcall
int
xor
push
mov
mov
es
test
and
jo
xchg
sahf
cmpsb
sub
and
cs
aam
filds
push
xor
xor
pop
mov
mov
pop
fldcw
cmp
ret
pop
xchg
inc
mov
shll
mov
xlat
mov
xor
ds
cmpsl
in
int
js
je
adc
mov
scas
adc
js
lds
clc
mov
das
or
and
dec
hlt
repz
push
stc
cli
add
out
jecxz
xchg
and
jecxz
inc
aaa
cmpl
inc
push
out
and
pop
or
pop
sub
jae
jo
dec
cmp
adcb
mov
stc
shlb
sub
and
lret
loope
out
xor
sbb
ds
adc
xchg
std
fildll
jp
fistl
push
mov
lahf
adc
dec
in
or
push
xor
scas
adc
or
push
sub
adcl
testl
out
add
push
mov
push
jge
adc
out
mov
pushf
int
jne
pop
lahf
jle
ficoml
rcrb
pop
shll
sarl
xor
add
adc
dec
fdivrs
fwait
mov
pop
shll
int3
subl
cwtl
imul
imul
cltd
xor
mov
sbb
adc
jbe
into
mov
insb
jo
jne
idivb
int3
jp
aas
dec
pop
push
fwait
scas
movsb
negb
fs
push
cmp
mov
fs
pop
loopne
out
inc
orl
fisubrl
jle
nop
repz
and
add
mov
int3
adc
lods
pop
mov
div
add
push
jp
or
xchg
lahf
lock
test
jbe
punpckhwd
jae
jo
mov
or
imul
push
cmp
repnz
int3
jne
adc
out
push
jns
add
pop
xchg
xlat
inc
xchg
leave
out
mov
pop
addr16
mov
inc
aas
ret
and
ja
and
imul
jge
repz
clc
fwait
movsb
mov
jae
sbb
insb
divl
aaa
xchg
mov
rcrb
das
dec
cld
mov
jl
mov
and
push
inc
test
int3
xorb
pop
push
ret
mov
mov
jg
lret
push
out
out
jbe
pop
je
or
push
mov
inc
mov
mov
cwtl
sbb
jl
jne
cli
add
or
rorb
mov
mov
mov
test
mov
rcr
push
lret
aas
pop
je
into
mov
pop
cld
inc
add
mov
js
andl
or
pop
adc
push
and
sbb
imul
push
sub
sbb
or
sub
fsubrp
test
shrl
cmp
lods
xor
xchg
gs
mov
fcompl
in
test
jge
xchg
sbb
aam
pushf
ljmp
cmc
or
fst
push
push
xchg
dec
pop
stos
hlt
push
fldt
shll
jae
fdiv
insb
mov
je
sub
xchg
insb
adc
rcr
pop
lods
adc
bound
sub
sbb
dec
aam
lods
pop
notl
adc
aas
mov
push
popa
push
loopne
dec
sbb
sbb
scas
cmp
in
adc
test
inc
jbe
lea
adc
dec
fildl
stos
mov
dec
mov
mov
push
pop
sub
pop
sahf
jp
ret
mov
push
repnz
cmpsb
sbb
and
push
mov
pop
push
push
jmp
cwtl
jns
enter
xchg
sub
movsb
dec
clc
or
or
arpl
fnstcw
mov
pop
imul
adc
adc
and
test
fdivrs
hlt
mov
push
pop
in
shlb
and
mov
cmp
fmull
or
inc
pusha
xchg
out
cmp
outsb
sarl
negb
aaa
jne
in
xor
cmpsl
std
loope
in
mov
pop
dec
add
xchg
loop
test
push
stc
rep
push
xor
and
pop
mov
movsb
loopne
pop
dec
push
pop
and
and
cmp
xor
daa
lock
mov
lahf
mov
pop
and
xchg
mov
xchg
nop
mov
inc
cld
cmpsb
int3
bnd
sbb
pushf
roll
insl
pushf
jmp
adc
add
std
cmc
mov
fwait
adc
xorb
push
dec
in
xchg
jnp
mov
out
pop
push
imull
jge
mov
inc
mov
addr16
loopne
fmulp
xchg
mov
scas
popf
das
daa
movsb
and
xchg
and
scas
in
imul
jmp
or
adc
aas
jmp
lods
cmp
add
dec
push
pop
out
lods
or
mov
pop
mov
push
sbb
std
mov
push
into
sbb
or
loopne
cwtl
dec
inc
sub
sub
jb
push
mov
sahf
arpl
test
cmp
insb
imul
inc
lcall
lds
out
movsl
popa
xor
mov
dec
orb
mov
push
icebp
test
and
stc
mov
call
sub
or
icebp
push
jl
add
fsts
int
out
inc
sub
icebp
cmpsb
fadd
mov
jge
adc
popl
mov
sti
icebp
insl
jo
cld
fnsave
fcom
and
and
into
lds
fbstp
xor
xorb
and
push
cld
jae
outsb
jb
cmp
sti
dec
mov
xchg
sbb
rorb
mov
mov
ror
mov
add
inc
mov
cmp
mov
inc
ror
daa
push
mov
ja
push
mov
aas
dec
cmp
pop
sub
cmp
loope
test
pop
push
fwait
xor
inc
gs
fcmove
jmp
mov
mov
lcall
xchg
ljmp
and
int
add
push
xchg
mov
dec
add
imul
cmp
nop
jb
and
sub
jnp
and
sbb
movsb
rol
mov
sbb
pusha
pop
fidivrl
inc
lahf
adc
sbb
mov
mov
pop
jbe
add
or
push
mov
push
inc
test
call
mov
xchg
ficompl
insl
or
mov
mov
in
add
sbb
leave
inc
mov
cmpsb
push
nop
or
std
lret
scas
dec
test
in
push
insl
daa
call
mov
insl
jbe
sbb
mov
shrl
sbb
and
cmpl
mov
popf
sub
popf
lods
dec
sahf
je
test
sbb
jecxz
adc
stos
loop
jae
add
call
mov
icebp
xchg
pop
test
xchg
movsb
jle
ret
push
dec
pushf
xchg
dec
adc
mov
scas
or
cmp
jne
dec
and
testb
inc
pop
arpl
mov
cmpsl
popf
xor
fs
aas
stos
and
rolb
adcl
adcb
lcall
pop
dec
cmp
mov
loope
dec
push
and
inc
les
pop
subl
ret
lock
jno
loop
adcl
mov
push
jge
xorb
bnd
or
sub
fcoms
sub
push
lods
sub
jo
or
and
inc
add
insb
call
sbb
pop
mov
out
fmuls
and
or
scas
pop
xchg
xor
jo
stos
pop
jns
jmp
jmp
xchg
negl
adc
popa
out
xchg
push
out
and
lcall
mov
in
xor
add
icebp
in
sub
sub
pop
pop
push
inc
mov
cmp
test
mov
sarb
sub
mov
add
add
in
push
xchg
repz
arpl
into
inc
popf
dec
out
mov
rorb
fs
ret
dec
nop
sub
fbld
aaa
pinsrw
push
push
or
push
cmp
jecxz
repnz
iret
push
mov
shlb
shlb
stos
mov
mov
clc
lock
das
xchg
call
inc
mov
xor
sahf
add
and
test
sahf
mov
mov
imul
sbb
fcmovbe
mov
or
mov
aas
or
js
xor
iret
sbb
icebp
cmp
frstor
leave
sub
sub
mov
sahf
cmp
imul
movsl
push
std
push
movsb
cli
xchg
add
xor
jp
xchg
aad
in
outsl
cmpsb
sarb
fs
jne
data16
push
inc
repz
scas
jnp
jno
push
and
lock
lret
or
add
es
mov
addps
xchg
inc
popa
mov
in
xor
cmp
inc
repz
sbb
pop
clc
lds
out
push
and
add
aaa
popa
and
rcrb
and
dec
cwtl
jmp
cmp
jp
sbb
pusha
gs
xchg
cmp
jmp
and
inc
dec
jecxz
mov
std
sub
filds
aad
dec
or
cmp
jecxz
scas
dec
in
push
jbe
movsl
pop
nop
adc
loopne
pop
push
in
fsubrl
mov
push
divl
outsb
sarl
mov
cwtl
lcall
ljmp
and
xchg
cltd
push
or
sahf
push
pushf
pop
lods
and
jns
in
sbb
shl
lods
mov
xor
dec
cmpsb
lret
aam
sub
mov
add
fwait
lahf
or
jmp
cmp
inc
push
stos
cwtl
imul
mov
adc
dec
pop
pop
push
hlt
push
sti
and
ss
cli
or
ljmp
inc
repnz
movsl
cmp
test
push
into
lds
pop
ror
lea
sub
in
adc
ds
mov
push
inc
shl
mov
and
xchg
xor
into
arpl
mulb
cmp
imul
ss
push
sti
fstpl
adc
fdivs
inc
out
xor
and
pop
or
fimuls
cmc
pop
stos
mov
add
jns
mov
or
cltd
jae
cltd
int3
mov
xchg
pop
popf
jmp
sar
call
int3
fs
jge
or
les
testl
scas
pusha
mov
arpl
xor
sub
mov
xor
or
clc
mov
int
and
xchg
mov
xor
mov
out
mov
aam
lds
stc
dec
push
pop
roll
add
add
aaa
xor
out
cmp
aad
out
les
and
sbb
imul
dec
leave
cs
adc
push
jno
lahf
mov
out
xor
orb
add
loop
add
inc
out
adcb
rcll
cld
test
hlt
cmp
and
mov
mov
test
aas
push
dec
dec
mov
dec
jmp
imul
out
pusha
insl
movsb
cwtl
enter
decb
std
cmp
push
int
aam
ja
js
add
mov
mov
mov
cs
and
xchg
pop
inc
iret
lods
pop
sub
dec
js
mov
loop
in
inc
xchg
mov
test
cmp
mov
push
stc
mov
cmc
xor
dec
lret
cmp
or
or
mov
not
lcall
mov
dec
daa
cwtl
aad
incl
sti
xor
out
loop
add
lret
xchg
xor
xchg
ficompl
imul
mov
cltd
imul
mov
mov
sbb
push
loop
or
xor
int
cltd
into
pop
fcoml
or
sub
cmp
icebp
dec
push
std
iret
dec
ret
out
xchg
pop
es
aaa
pmulhuw
cmp
cmp
addr16
outsb
dec
xchg
push
lds
dec
lock
fdivrl
outsl
pushf
stos
mov
cmpsb
pop
inc
or
test
lods
sti
xor
insb
jnp
dec
or
and
sti
test
push
add
mov
mov
stc
push
mov
ret
mov
mov
cmp
pop
cwtl
lds
pop
pop
lahf
data16
sbb
mov
hlt
aad
lahf
leave
add
int3
add
mov
adc
xlat
cmp
and
sbb
and
jl
dec
das
pop
adc
cld
pop
cmp
pop
popl
daa
pop
xchg
clc
lods
mov
jb
cmp
xor
jo
sub
rorl
xchg
adc
int
shlb
popa
sub
add
lcall
xchg
jmp
ja
and
movsl
jnp
call
pop
inc
add
sbb
push
xchg
pop
imul
xchg
lahf
adc
femms
in
pop
fdivrp
dec
imul
call
jle
adc
shrl
in
add
fldcw
cmpsl
int
aad
hlt
lcall
add
scas
in
mov
adc
fs
pop
jb
mov
xchg
xor
jmp
cld
arpl
xlat
idivl
pusha
loopne
mov
mov
jae
mov
faddp
aad
sbb
mov
dec
std
cmp
mov
mov
aas
jmp
lds
jmp
dec
jl
mov
out
test
ja
leave
movsl
xor
mov
cmc
pop
gs
inc
push
push
push
sbb
fwait
add
add
into
add
xor
clc
pop
xor
mov
add
xchg
data16
mov
incb
aam
sub
mov
enter
sub
lret
fdivl
out
jae
sub
xor
mov
cli
xchg
cmpsb
jns
jp
stos
ljmp
xchg
pop
clc
ret
das
sub
inc
mov
cmpsb
fimull
aam
aaa
push
aas
xchg
sub
jne
xor
jbe
imul
and
push
jecxz
clc
inc
das
lock
mov
rol
lock
jge
adc
fstps
sub
enter
add
in
nop
push
lds
push
clc
lock
addr16
cmp
dec
xor
push
ljmp
mov
adc
cmp
cmpb
xchg
sub
aad
and
loop
gs
cli
cmpsl
jecxz
mov
push
sub
inc
out
subb
stos
sbb
pop
xchg
jnp
enter
mov
mov
push
outsb
scas
jg
inc
loopne
les
mov
cli
push
pop
out
shrb
mov
call
inc
xchg
mov
js
jo
xchg
adc
stos
sub
mov
fildll
insl
out
scas
cmp
inc
dec
mov
leave
add
repnz
stos
cmp
and
pop
sbb
das
cwtl
icebp
sub
fwait
push
outsb
sub
dec
mov
cmp
int
mov
mov
fsubl
push
lcall
and
mull
in
shl
sub
or
lods
push
xor
rcr
adc
fnstsw
and
inc
push
xlat
rcrl
repz
mov
adc
aam
pop
add
push
mov
int3
lock
int3
fwait
lahf
adc
mov
insb
xor
lds
ret
pushf
sbbb
adc
xor
lahf
inc
into
xor
sbb
jmp
cmp
or
cltd
mov
adc
cmp
and
mov
pushf
inc
dec
mov
test
inc
fnstsw
outsl
sti
xor
fbld
push
test
and
lcall
inc
or
sub
mov
jg
roll
imul
inc
jmp
jae
cmp
ds
int
dec
cmp
rcrl
sbb
mov
xor
xor
inc
jns
out
or
or
lea
xor
out
pushfw
ds
push
cmpsb
pop
addl
mov
xchg
lock
or
add
adc
outsb
std
and
das
mov
and
addr16
lods
out
repnz
pop
and
sti
xorb
add
icebp
dec
mov
lahf
pusha
jmp
jmp
filds
imul
loopne
ret
jns
dec
or
xor
enter
mov
into
mov
lret
addl
cmc
adc
rclb
mov
adc
iret
cld
outsb
xchg
jb
push
push
out
and
imul
and
jae
popa
lods
stc
xchg
ljmp
sti
enter
pusha
push
sbb
out
iret
pusha
dec
call
adc
fwait
jmp
in
or
out
mov
add
stos
outsl
lods
cmp
mov
push
sahf
mov
jge
or
xchg
cld
mov
xchg
in
int3
notl
popa
adc
ss
imul
fwait
push
dec
xor
mov
loopne
aas
hlt
lea
mov
scas
inc
aam
push
fnstenv
pushf
push
sbb
sbbb
mov
dec
insl
sub
mov
popf
xchg
call
sbb
xor
pop
xor
push
pop
gs
sar
test
and
repnz
ja
jp
lea
jne
pop
das
pop
out
pop
mov
fwait
push
in
stos
mov
add
ds
or
bound
push
push
sbbb
or
jno
clc
jne
xchg
mov
outsl
test
ficomps
xor
add
jp
cmpsb
cli
bound
mov
je
sub
push
pop
pop
cli
cmpsl
sub
mov
sub
in
mov
out
ds
fwait
mov
dec
jmp
dec
scas
insl
aaa
add
or
cmp
shll
rcll
fwait
icebp
shrb
lahf
stos
and
xchg
sub
dec
sbb
mov
lea
sub
push
les
hlt
add
in
int3
mov
out
push
mov
sbb
mov
inc
stc
arpl
adc
sbb
insb
icebp
stc
sbb
adc
mov
inc
movsl
in
lret
ret
cmpl
aad
jae
add
or
xor
aad
cmpsl
scas
movsl
pop
mov
int3
jns
pop
divl
or
rep
mov
scas
dec
nop
add
pushf
out
mov
jecxz
jne
adc
cmp
rolb
std
je
out
dec
cmpsb
scas
fwait
jl
sbb
ja
loopne
mov
add
daa
lcall
jnp
cmp
xor
mov
xchg
jns
mov
mov
in
xor
cmpsb
push
push
inc
inc
push
lock
mov
pusha
mov
daa
push
scas
push
into
xchg
lcall
bound
xchg
pop
or
fpatan
dec
jo
sub
fisubl
ja
dec
push
xor
mov
add
outsb
jecxz
mov
out
mov
adc
sub
lea
cmp
ja
jmp
jb
fdivl
rorl
dec
out
ljmp
inc
add
fnstsw
fwait
add
add
dec
add
xor
mov
mov
into
pop
lcall
arpl
inc
xor
repnz
pusha
sahf
dec
cmp
lahf
and
ss
push
idiv
mov
push
call
push
sub
mov
outsl
sbb
rolb
push
scas
jmp
cmp
daa
inc
inc
fcoml
mov
movsl
loopne
aam
lahf
enter
xchg
cwtl
add
mov
negb
cmpsl
xchg
lods
popf
ficoml
cmpsb
ljmp
or
std
test
aam
and
jp
add
mov
and
mov
sbb
jecxz
fwait
pusha
adc
cltd
inc
jnp
jg
sbb
pop
inc
push
cmpsb
lret
fldt
aad
mov
fneni(8087
rcrb
inc
push
sbb
pop
test
out
mov
dec
mov
test
mov
pop
jge
out
xor
xchg
addr16
push
test
shr
sub
dec
xchg
pop
or
mov
push
xor
and
dec
cli
jmp
mov
inc
cmp
imul
repz
push
stos
imul
xchg
fcoms
lret
fwait
xlat
or
popf
xor
push
dec
add
pop
pop
jnp
leave
ret
int3
add
pushf
xchg
cwtl
inc
push
cld
rorl
cmp
or
cwtl
sub
dec
jae
xchg
or
add
mov
sti
rclb
ret
sbb
shrd
ret
pop
or
cld
stos
push
enter
inc
dec
mov
or
cmpsl
cli
enter
stc
jecxz
xor
mov
push
mov
mov
mov
push
xchg
int
xor
test
xchg
cmpsb
xchg
mov
in
push
leave
sar
pop
adc
dec
loope
inc
ja
jge
and
inc
filds
lret
jp
pop
stc
outsb
rorl
mov
iret
add
lahf
fcompl
mov
inc
into
fisttpl
test
loope
insl
out
push
pop
out
or
scas
xor
cmp
in
push
xor
pusha
int
mov
xchg
dec
pop
add
dec
bound
push
fisubl
jnp
jb
xchg
sbbb
xchg
addr16
out
or
fs
insb
jecxz
add
shl
in
dec
std
mov
out
sar
push
enter
inc
pop
ffree
mov
imul
call
add
jbe
xchg
sub
lret
or
ficomps
out
pop
outsb
lret
or
xor
xor
daa
outsl
add
mov
stos
cmp
adc
movsb
out
test
sbb
mov
subb
sub
shlb
clc
cmpsb
jns
or
xor
and
fwait
test
out
mov
sbb
push
xchg
insl
dec
or
xchg
cmp
push
mov
xor
ss
ljmp
jg
std
lock
mov
xchg
and
outsb
test
insl
sahf
ds
adc
mov
mov
pop
add
outsl
bound
inc
in
cmp
inc
nop
sub
rcl
mov
sbb
hlt
outsb
or
test
pop
arpl
push
add
or
sub
adc
mov
outsl
enter
and
sbb
mov
xor
stos
mov
call
sub
daa
ss
sahf
ret
loope
dec
and
cmc
pop
dec
popa
or
jns
mov
sbb
lea
aaa
cmp
pop
scas
add
add
call
loop
pop
mov
inc
hlt
push
je
ljmp
loop
adc
orl
jb
sbb
or
inc
or
dec
mov
lcall
repnz
daa
test
xor
arpl
or
stc
mov
mov
add
ss
jmp
mov
jns
push
push
hlt
jno
xchg
mov
sub
stc
and
in
cwtl
fists
out
xchg
mov
xchg
sti
sbb
pop
inc
push
push
add
push
jnp
fs
and
pusha
mov
negb
lcall
xchg
push
jb
jge
cmc
push
sbb
loopne
std
lret
mov
xor
cwtl
out
or
loopne
or
rolb
stc
add
into
pop
fdivl
add
adc
pop
shrl
cmp
adc
nopl
push
outsb
add
addr16
jae
lea
add
data16
popf
shlb
fnstsw
push
es
lcall
in
pop
adc
jmp
inc
nop
cmpsb
inc
cmp
in
scas
movsb
cmp
sbb
leave
cmpsb
sub
fisubl
call
jnp
into
imul
pop
mov
sbb
scas
mov
xlat
inc
arpl
fisubrs
negl
jns
cwtl
subl
xor
les
lret
repnz
out
andb
gs
das
mov
cmp
jnp
xchg
xor
out
stos
jg
dec
pop
scas
and
in
aad
push
or
pop
cwtl
xchg
mov
gs
push
fisttpl
cltd
pop
adc
inc
outsb
jp
fimull
insb
lcall
xchg
sbb
lcall
mov
and
push
shlb
sbb
mov
lret
int
filds
gs
jae
jns
stos
ret
test
dec
inc
lcall
sbb
adc
sub
xchg
pop
fld
mov
bnd
insb
jge
lods
outsl
scas
addr16
ret
xchg
cmp
stos
sub
js
inc
mov
mov
pop
divps
or
rorb
sbb
rolb
out
jne
cmp
adc
fcmovnbe
jns
pop
mov
push
jecxz
cmp
jp
test
out
mov
outsl
push
loopne
dec
repz
ja
jo
call
add
sarl
push
pushf
ret
inc
push
les
xor
cltd
lret
mov
xor
in
aam
sbb
mov
out
cli
mov
sub
xchg
cli
loopne
outsl
sbb
mov
fbstp
out
ss
test
fsubs
pop
lods
outsl
xchg
push
in
cmpsl
imul
mov
pop
lds
test
in
push
xchg
mov
xchg
add
inc
je
test
lret
xchg
push
cmp
xor
mov
outsl
cmc
adcb
int3
frstor
mov
fucomp
shl
xor
enter
sub
movsl
and
or
push
ja
cmp
and
hlt
shrb
repz
sbb
es
roll
push
orb
add
xadd
push
cwtl
aaa
orb
sub
sbb
cmp
adc
in
outsl
js
fldt
xor
inc
inc
xor
jg
loop
sbb
out
in
aas
sub
push
and
or
fists
mov
ficomps
mov
mov
fnsave
jmp
or
jp
pop
inc
stos
les
dec
jbe
or
push
mov
arpl
xor
adc
lods
jp
add
sahf
cmp
adc
dec
push
movsl
std
fildll
mov
imul
fistpl
mov
cld
aas
dec
dec
push
loop
push
out
call
repz
push
mov
mov
test
pop
fldcw
sub
icebp
add
rcrb
ljmp
imul
inc
inc
dec
sbb
push
and
mov
dec
push
dec
adc
push
dec
lea
inc
cmp
popf
add
sbb
cmp
int
push
sarl
lds
insb
popa
stos
repnz
pusha
sbb
mov
nop
adc
jb
call
mov
mov
rcl
push
mov
dec
inc
fwait
xor
out
push
lods
mov
xor
outsl
in
pop
neg
xchg
jp
push
lea
sbb
movsl
cmpsb
xchg
test
mov
cmp
std
sub
shll
cltd
icebp
push
cmpsb
lret
sub
mov
lods
lods
lret
or
mov
and
ret
int
mov
mov
push
fwait
pusha
stos
push
push
jb
mov
mov
cmpl
dec
pop
mov
enter
push
adc
push
sbb
js
jl
imul
push
push
and
jg
in
push
mov
inc
in
dec
add
ficompl
and
mov
sti
in
test
pop
fiaddl
test
lcall
mov
jp
and
adcb
call
pop
sub
popa
push
cmpsb
mov
lahf
jge
xchg
int
aam
add
sbb
shlb
fwait
xor
jb
sbb
mulb
jae
in
punpckldq
pushf
daa
rorb
mov
dec
inc
popf
sar
mov
fs
push
sub
mov
fs
sub
rclb
jo
mov
gs
test
in
lret
sub
lret
or
ljmp
or
test
rcll
out
sub
outsl
mov
aad
dec
pusha
in
push
ds
adc
push
outsb
cmp
rol
scas
sub
fwait
push
cmpsl
bound
mov
jmp
jge
jl
jmp
addr16
out
add
xor
out
pop
loop
insb
test
inc
push
jb
mov
ja
repnz
sbb
out
cmp
daa
test
mov
sub
sti
xorl
sub
xor
cwtl
cld
cs
xor
cmpsl
stos
mov
call
insb
sub
mov
rorl
popa
movsb
jno
xchg
mov
xchg
fcoms
andb
repnz
fdivrs
sahf
icebp
or
mov
mov
sub
add
adc
rcr
mov
xchg
adc
ret
sub
jmp
jmp
and
ss
cmp
lds
cmc
pop
mov
and
mov
push
cwtl
adc
data16
sbb
add
in
xor
inc
jg
xor
je
notl
jecxz
mov
sahf
xchg
ja
adc
nop
iret
dec
dec
repz
iret
mov
icebp
daa
cmp
and
arpl
jns
jo
pusha
sbb
push
sahf
cld
jne
rol
pop
rclb
jl
and
add
mov
insl
lock
das
pop
mov
shlb
sub
aad
repz
ds
add
push
xor
adc
mov
outsl
cld
mov
xchg
sub
out
push
push
xchg
bound
fldl
sub
cmpsb
call
int
js
divl
and
lock
int
mov
lds
fcomps
fucom
or
push
stc
mov
or
popa
fstps
shl
add
sbb
clc
pop
mov
pop
xchg
pop
and
jl
ret
jle
add
loop
js
sbb
jns
in
xchg
aaa
ljmp
mov
cld
jb
ret
adc
stos
lds
sub
lahf
cmp
mov
stc
dec
je
ficoml
pusha
out
mov
sub
xchg
jbe
xchg
bound
fnstsw
push
jmp
ror
fbld
cmp
lods
or
mov
sbb
pop
lcall
lret
inc
push
jno
pop
lret
sub
inc
shll
fistps
dec
flds
in
popa
inc
lds
pop
mov
les
adc
xor
jns
stc
and
clc
mov
lds
xor
pop
fcomps
insb
pop
fmul
mov
dec
gs
inc
insb
dec
pop
mov
xchg
lahf
push
fsubrs
push
fimull
push
ds
movsl
fs
pop
cmp
ljmp
fldt
daa
pop
dec
lret
or
rcll
sbb
das
jb
jecxz
imul
scas
mov
and
add
mov
outsl
ret
mov
dec
mov
dec
es
repnz
test
lahf
jae
lret
into
mov
imul
inc
into
out
outsl
aas
and
pop
sti
cmc
adc
leave
or
popf
es
mov
sarl
not
mov
fwait
into
pop
fwait
aam
das
sub
xor
insl
cmc
loope
fsubrl
sub
lret
insl
sbbl
adc
iret
push
lds
or
iret
adc
and
sub
sbbl
stos
shlb
and
push
rcl
test
push
out
sbb
dec
push
xchg
outsb
mulb
push
jecxz
inc
xchg
es
mov
inc
cmp
push
incl
arpl
push
mov
fldt
scas
arpl
inc
pop
mov
xchg
jmp
mov
mov
movl
add
jbe
aas
xor
xor
push
popa
bnd
into
inc
cmp
std
and
pop
in
pop
outsb
fldt
cmp
xor
bound
iret
add
jle
orb
jl
stos
inc
add
xor
pop
in
cmp
scas
aaa
sarb
xor
xorb
ljmp
fwait
pop
mov
push
mov
or
mov
mov
mov
or
adc
inc
ret
sti
mov
add
add
sub
and
ret
aam
pop
pop
mov
imul
push
addr16
addr16
movsl
adc
imul
adc
out
mov
jmp
jmp
int
rorb
jge
mov
aam
nop
lcall
aad
jbe
xchg
into
xchg
in
std
or
sbb
lret
mov
ss
mov
inc
mov
js
mov
clc
push
and
adc
lret
pop
cmpsb
mov
cld
jmp
rcll
xchg
jns
mov
mov
gs
dec
mov
mov
pop
inc
dec
sub
cmpb
pop
pop
cmc
testb
cmc
insl
mov
dec
iret
sar
jle
mov
ret
ljmp
jnp
pop
xchg
popa
es
ds
push
jg
fidivl
movsl
adc
test
and
test
std
mov
jge
xbegin
jl
push
pop
mov
popf
insb
mov
inc
sbb
outsl
out
mov
in
int
test
inc
sbb
mov
jne
xchg
movsl
sahf
pop
jo
mov
dec
loop
out
nop
roll
cmpb
pop
pop
in
ret
sarl
pxor
out
xor
fsts
shll
stos
push
jo
adc
add
rcrb
and
jne
pop
loopne
jne
seta
jp
xor
or
mov
ljmp
xorb
push
jle
push
mov
sub
arpl
loop
lea
push
lahf
mov
aad
das
push
inc
scas
lahf
push
cmp
scas
nop
fcmovne
fdivrl
adc
cmp
and
insl
mov
mov
in
or
adc
sbb
push
sbbb
shll
mov
cld
push
sub
pop
aam
mull
ja
lret
and
faddp
test
adc
in
rcrb
cltd
shl
aaa
addb
out
jns
js
xor
add
das
cmp
cmp
pop
dec
mov
add
push
jo
mov
or
xchg
les
cmp
pusha
pushw
jne
je
movsb
sbb
stos
fcoms
mov
and
dec
fisttps
inc
out
es
or
test
out
int3
test
and
pop
outsl
movsl
jg
adc
repnz
sbb
in
es
pop
sbb
fistl
jo
rcrb
and
mov
jae
xor
mov
arpl
dec
enter
daa
mov
imul
jecxz
call
push
dec
repnz
push
rolb
insl
fmul
mov
pusha
in
sub
xor
adc
jbe
add
jle
fsts
sarb
inc
cltd
gs
fldcw
fisubs
enter
jg
sbb
addb
jns
repnz
jno
cwtl
jmp
daa
test
push
test
in
fimull
int3
out
dec
and
in
lods
stos
xchg
mov
dec
ss
pop
mov
je
dec
mov
and
cmp
movsb
pop
dec
pushl
imul
fidivs
sbb
das
lock
nop
pop
dec
jecxz
mov
mov
mov
test
push
mov
iret
sub
lcall
mov
inc
roll
pop
addl
test
dec
out
push
inc
out
mov
xchg
jb
mov
add
adc
imul
pusha
xchg
addl
dec
or
les
xchg
lcall
mov
jnp
xchg
data16
lret
jle
pop
aad
sub
gs
call
mov
pop
and
xlat
ret
push
add
stc
adc
and
popa
ret
or
adc
and
rorl
fs
js
sbb
mov
and
bound
jne
popf
xor
or
sahf
add
sub
stos
add
sub
mov
in
test
cwtl
xchg
adc
and
cmp
sbb
cmp
mov
cmc
xor
gs
jno
or
or
inc
inc
rclb
xor
ss
rolb
int3
roll
jo
lahf
mov
ljmp
push
cwtl
std
les
stos
sbb
insb
push
dec
pop
int3
dec
and
jnp
scas
mov
enter
testw
std
jg
cmpl
or
dec
or
jecxz
aam
fwait
mov
js
dec
adc
adc
mov
mov
jg
int3
clc
arpl
gs
les
pop
push
mov
js
xor
dec
cmc
sub
ja
fcmovb
sub
jae
fmul
loopne
mov
sarl
push
jp
jns
fbstp
jl
dec
jmp
and
hlt
test
in
xchg
and
xor
notb
cmp
mov
xchg
stos
gs
sub
loop
jmp
jp
jge
sbb
lret
mov
sahf
loopne
aam
xchg
mov
imul
inc
movsl
inc
xor
loope
lods
and
sarl
mov
lcall
or
shll
outsb
pop
shrl
loope
xlat
sti
push
mov
scas
fstpl
xlat
and
jp
fsubr
mov
ljmp
mov
in
and
aas
sti
js
fs
dec
push
imul
jmp
std
cmp
lods
jg
clc
int3
adc
mov
sti
scas
jecxz
or
pushl
in
dec
sub
jmp
movsl
hlt
adc
in
adc
push
jns
xchg
push
sahf
movsb
stc
mov
outsl
test
mov
sub
mov
jo
pushf
mov
aas
pushf
add
mov
mov
mov
leave
mov
inc
lds
mov
stos
faddl
adc
ficoms
cltd
xchg
sub
sub
inc
jl
mov
divl
jecxz
push
rorb
cmp
cmpl
push
lcall
and
dec
leave
int
push
jge
add
lods
ljmp
adc
sbb
sti
lea
inc
jno
inc
in
mov
jne
push
pop
xchg
popa
cmp
into
xchg
pop
cmp
inc
inc
nop
insl
cmp
add
mov
adc
xor
fcom
addr16
lret
imul
xorb
loope
and
dec
dec
fwait
movsl
xchg
stos
push
mov
mov
cld
jo
insl
arpl
sbb
outsl
pop
push
fsub
fildll
push
xchg
sbb
arpl
cmp
addl
sub
inc
xor
mov
imulb
cmp
mov
sub
pop
and
pop
inc
out
stc
or
mov
popa
xchg
cmp
adc
in
jecxz
fincstp
lods
mov
mov
cmpsl
add
nop
mov
adc
mov
in
dec
pop
punpcklwd
adcl
sub
sub
add
mov
jecxz
cmpsb
jb
xor
outsl
pop
cmp
movsb
cli
daa
jno
jecxz
adc
push
stc
cltd
sbb
or
lock
inc
cmp
mov
mov
mov
xorl
sub
mov
hlt
pop
push
loope
jb
and
out
mov
jne
mov
sub
shr
bnd
lcall
out
inc
iret
cmc
outsb
or
and
int
out
sbb
xor
rcrl
cmpsb
mov
jne
je
gs
cs
in
mov
movsl
lods
repz
arpl
xchg
hlt
push
imul
push
das
sbb
cmpsb
lret
fwait
lea
sahf
cwtl
or
add
lds
xchg
mov
mov
and
sub
and
int
push
dec
rolb
aam
icebp
sbb
sub
outsb
mov
rcrl
rol
dec
cld
or
xchg
cmpsb
jp
out
mov
xchg
popa
pop
add
adc
xor
loop
inc
repz
jmp
int
sbb
mov
jecxz
sbbb
fldenv
lret
xor
push
ror
xor
pop
pushf
and
inc
cmc
and
ret
mov
mov
imulb
add
test
aam
cwtl
adc
jmp
push
and
test
pop
fwait
cmp
sbb
mov
bound
jl
shrl
inc
fistpl
popa
sbb
push
add
inc
mov
ds
ret
enter
mov
dec
add
push
sti
jg
mov
mov
shlb
ja
ljmp
out
add
push
push
jmp
subl
rcrl
sbb
sub
sub
fiadds
pop
jle
xor
inc
sbb
lods
shll
mov
xor
mov
or
or
mov
cmp
inc
dec
xchg
mov
or
lahf
push
in
xor
adc
loopne
daa
xlat
shl
lods
leave
sbb
push
js
shll
mov
outsl
sub
out
dec
pusha
inc
add
fidivrs
sub
dec
data16
fbstp
push
mov
fwait
js
adc
sarb
or
cld
add
clc
or
jle
dec
fidivrs
or
push
ljmp
mov
daa
push
push
add
loopne
push
pop
lret
daa
leave
add
push
xor
insb
in
xor
mov
adc
rcrb
movsl
mov
mov
out
or
xor
out
mov
add
cld
adc
sbb
cltd
push
cmp
in
fmul
pop
jns
inc
scas
subb
ss
add
pop
dec
mov
rcll
fistl
mov
int3
inc
rclb
jb
sbb
into
push
jns
pushf
dec
push
loop
or
jl
inc
pop
xchg
incl
mov
adc
out
out
movsl
ljmp
aaa
call
and
das
rcll
movsl
clc
sahf
add
inc
test
jnp
popf
lods
pop
es
xchg
or
jae
inc
pusha
rcr
fsubl
pusha
cmc
adc
and
sub
mov
adc
pop
shlb
sub
shr
or
fs
add
sub
mov
jp
into
pop
pop
or
fwait
scas
mov
aam
mov
sbb
loope
push
gs
push
sub
or
cmp
adc
fnsave
mov
inc
xchg
add
xchg
push
mov
mov
xchg
in
jae
enter
push
xor
stc
pop
mov
lods
ret
add
xchg
outsb
push
push
jge
adc
cmp
shll
stc
pusha
pushf
dec
lock
test
jecxz
push
mov
aam
mov
clc
mov
or
push
sbb
loopne
and
js
sub
std
mov
into
mov
lahf
ret
aam
dec
xchg
mov
xor
cmc
push
rorb
mov
dec
pop
xchg
add
dec
mov
js
jno
pop
sahf
add
leave
cs
aad
sub
mov
fdivrl
or
mov
sub
and
lret
xor
and
jae
xchg
or
cmp
jmp
xlat
hlt
inc
mov
push
in
mov
dec
std
add
jge
mov
cmp
in
insl
or
iret
movsb
mov
imul
arpl
cmc
test
jge
ljmp
push
iret
pop
inc
das
out
mov
test
mov
mov
mov
cmp
jns
mov
iret
sub
xor
sub
loop
dec
adc
or
xor
push
frstor
fisttpl
sbb
mov
lahf
mov
adc
dec
mov
sub
fidivrl
xchg
in
bound
sbb
and
mov
push
lock
daa
dec
mov
movl
xchg
jmp
clc
cmc
xchg
sub
int3
xchg
stos
xchg
push
inc
sbb
or
xchg
mov
mov
lock
xor
rclb
xor
cmp
rol
int3
divl
or
adc
mov
sbb
xor
jg
mov
lahf
shl
test
sub
les
mov
push
cli
insl
or
pop
jl
adc
sub
inc
or
mov
js
or
ja
imul
dec
outsb
cmpsb
sub
push
bound
leave
or
les
es
cmc
shl
and
repz
test
pop
xchg
push
int3
jle
sti
add
mov
dec
dec
lea
push
ret
das
pushf
nop
xchg
xor
pop
dec
outsl
adc
jnp
outsb
mov
jg
pop
xchg
nop
push
pop
stos
sbb
stc
xchg
mov
jne
hlt
add
mov
inc
sub
sbb
ss
sbb
push
mov
cmp
pop
movsl
jo
jae
clc
cmp
mov
jnp
ljmp
into
call
lahf
sbb
or
push
jb
jge
fwait
shll
insl
and
sbb
xor
sub
lods
outsb
outsb
fs
popa
das
push
or
lock
cmp
imul
cld
nop
loope
xor
outsb
mov
pop
cld
sub
lods
and
jo
pushf
jns
sbb
int
add
push
test
jecxz
pop
pushf
push
idivl
mov
inc
fisubrl
mov
negb
cld
loop
jmp
push
cmp
fs
mov
jmp
fwait
inc
cmp
push
sub
aaa
or
cmp
cmc
jmp
push
sub
sub
enter
jnp
adc
icebp
fisttpl
mov
or
jns
xor
mov
cmpb
leave
test
data16
out
mov
mov
sbb
enterw
lcall
mov
dec
push
push
mov
movsl
push
out
sbb
fs
xchg
xor
mov
sbb
outsl
mov
push
push
mov
andb
inc
pop
push
in
ret
outsl
jp
out
sbb
adc
in
je
mov
rclb
icebp
fwait
imul
xor
add
fnsave
push
sbb
sub
sbb
sahf
repz
in
daa
mov
dec
xchg
cmc
jae
dec
sahf
pop
cmp
nop
mov
jecxz
sahf
jbe
sti
jge
sbb
lahf
pop
xchg
pop
add
leave
push
push
js
push
fs
insl
sub
pop
imul
mov
stos
sub
lcall
cmc
lea
addl
lahf
inc
xchg
push
push
sbb
outsl
fists
dec
dec
dec
xchg
mov
pop
push
dec
mov
xor
push
cmc
or
cwtl
jge
pop
repz
mov
add
push
push
xor
xor
or
repz
xchg
insl
adc
inc
cmc
je
jle
lahf
jp
push
mov
mov
orl
sbb
inc
adc
lret
xchg
sub
inc
and
xchg
in
lods
mov
sahf
lcall
sub
xor
push
xor
cmc
add
adc
popa
int3
icebp
jle
ss
sbb
pop
rclb
pop
fisubrl
hlt
cltd
shll
and
or
hlt
fwait
cmp
adc
xor
xlat
push
cwtl
cmp
mov
cmp
xor
pushf
ret
test
cmpsl
push
ficoms
and
mov
imul
cmp
hlt
in
fwait
push
cmpsl
rclb
dec
pop
test
arpl
xchg
mov
nop
dec
cmc
pop
sbb
push
push
sbb
sti
ret
pop
cmc
dec
mov
jl
or
jl
movsl
mov
jmp
sbb
fstpl
sbb
shrb
push
fmuls
jbe
xor
lds
xchg
xchg
cmp
mov
shlb
pop
inc
pushf
popf
stc
jge
aad
mov
inc
stos
es
adc
loope
int3
adc
xlat
aam
push
fs
insl
arpl
push
jae
scas
sbb
mov
lods
xchg
jne
mov
movsb
mov
sub
sub
aam
test
xchg
and
std
repnz
add
pop
loopne
adc
and
call
data16
out
add
sbb
push
adc
sbb
std
sbb
jb
add
clc
fistl
xchg
jb
xor
es
in
mov
stc
inc
jno
jbe
movsl
cwtl
cli
and
das
mov
in
in
ret
lock
or
jl
sbb
cmc
pop
dec
adcb
add
addr16
rol
sub
mov
push
sbb
mov
fcompl
cmp
mov
add
pop
or
lods
aad
push
mov
sbb
cli
push
pop
and
or
cli
sub
int
aam
je
jecxz
or
mov
pop
push
lret
jp
in
inc
pop
jl
jg
fsubp
push
push
movsb
rorb
xchg
das
popf
orb
mov
mov
sbb
shll
inc
sbb
rclb
add
repnz
loop
dec
das
adc
das
shrl
and
and
in
sub
mov
nop
xchg
jg
mov
test
fs
adc
adc
out
aad
pop
adc
repnz
xor
jp
scas
dec
sti
xor
enter
int
sub
fisttps
jecxz
sbb
jno
sbb
push
lea
mov
cmp
sahf
addr16
repnz
xchg
xor
xchg
xchg
jns
sub
sti
dec
add
pusha
es
xor
arpl
cmp
cltd
mov
adc
outsb
push
jnp
pop
inc
mov
push
cmpsl
xchg
cmc
jno
xor
xchg
mov
imul
lret
add
sub
repz
mov
push
leave
int3
cmp
sbb
adc
mov
jb
pop
repz
jle
mov
add
repnz
or
mov
mov
sbb
je
inc
jmp
sbb
jno
adc
xor
inc
mov
sbb
orb
sbb
xor
jmp
pop
pushf
popa
repnz
jno
lcall
or
cmpl
mov
jecxz
mov
sub
test
fildll
xchg
push
adc
mov
jb
sbb
aaa
inc
jb
jp
inc
loope
mulb
sbb
jmp
pop
adc
xchg
leave
or
push
es
int3
jmp
or
push
cmp
cmpsl
mov
js
sub
popa
jo
ljmp
lods
int
adc
fistps
cmp
add
loopne
fidivrl
jo
loope
cmp
fisttps
adc
cs
or
adc
push
outsb
mov
mov
jno
xchg
test
adc
decb
arpl
adc
movzwl
jo
pop
sbb
add
daa
addr16
mov
out
jno
push
mov
push
int3
js
cwtl
and
lahf
and
or
inc
js
out
push
into
cld
in
xchg
xorl
push
mov
push
add
adc
gs
jle
xor
enter
pop
scas
add
push
subb
and
sahf
xchg
push
inc
das
scas
leave
lds
jo
cli
and
lret
insl
mov
je
jge
jmp
stc
push
leave
mov
aad
insb
ljmp
nop
pop
inc
jne
std
mov
xchg
popa
xor
dec
mov
rclb
sub
adc
add
cld
dec
inc
aas
mov
jns
out
jno
sbb
xor
inc
into
mov
rolb
rorl
fidivrs
mov
lea
nop
out
ja
test
mov
dec
mov
push
pop
lods
xchg
inc
sbb
imull
loop
xchg
xchg
xor
inc
stos
js
gs
loopne
pop
lret
bound
int
add
mov
cmp
jns
cmp
lret
pop
jno
cwtl
mov
pop
cwtl
cli
pop
inc
loopne
iret
js
repz
adc
dec
out
ljmp
fstpt
adc
dec
scas
bound
mov
inc
stos
test
mov
pop
ljmp
cltd
mov
popf
cmp
mov
outsl
in
frstor
iret
pop
push
mov
fcmovbe
in
aad
pusha
push
fstpt
repnz
mov
test
pop
xchg
prefetcht1
push
aad
mov
test
daa
addr16
sbb
pop
dec
lcall
cmp
cmc
gs
sub
or
lods
pop
sub
mov
cwtl
mov
imul
out
int3
xor
xchg
icebp
out
mov
lret
mov
add
xor
je
mov
dec
dec
hlt
test
fnstsw
mov
lret
insb
cs
xchg
and
cltd
sub
xchg
popf
addl
cmp
sub
jmp
mov
mov
xor
mov
add
jb
sbb
pop
mov
xor
clc
xchg
dec
dec
mov
inc
mov
sbb
stos
fistpll
repnz
sbb
shlb
movsl
xchg
lret
ret
enter
je
mov
out
xchg
add
xor
xor
pushf
mov
clc
sub
mov
xor
lahf
sbbb
xlat
jne
push
xor
lock
add
ja
inc
xor
clc
arpl
int
roll
jmp
sbb
jge
inc
outsb
mov
adc
add
sub
cmc
in
jb
mov
aam
and
mov
jnp
dec
dec
and
push
mov
sub
dec
mov
stc
movb
scas
jp
scas
sarb
cli
out
mov
or
dec
xchg
mov
movsb
sub
test
dec
mov
shll
adc
loop
jg
je
lods
inc
push
cli
pop
lods
mov
fcomp
or
or
not
inc
mov
pop
dec
test
fsubrl
inc
repz
test
xor
and
mov
add
and
out
inc
test
stc
sti
inc
mulb
pop
popa
dec
mov
cmpl
xchg
cltd
pop
fidivs
repnz
xor
mov
in
lods
ss
lret
imul
pop
shrb
push
ja
cmp
sub
cmp
dec
das
fsubs
xchg
out
sarl
sub
lret
nop
out
push
ja
fs
fs
fsubrs
loopne
imul
dec
xchg
subl
fildll
jecxz
aas
or
cmc
imul
adc
sbb
and
cmpsl
jo
mov
push
pop
das
movb
cmp
test
push
sbb
dec
scas
stc
imul
cmp
pop
jo
shlb
stos
push
in
gs
ja
in
in
xor
mov
xchg
leave
xor
sbb
and
in
jl
test
jo
sbb
jno
mov
pop
adc
nop
push
push
add
popa
pop
push
and
mov
push
pop
mov
fists
or
jne
ret
fcmovnbe
xchg
in
ds
in
pop
pop
std
push
push
inc
push
push
sti
mov
stos
mov
adc
jbe
push
inc
fidivrs
dec
and
ss
sub
bound
push
js
stc
mov
sbb
inc
and
fstl
pop
xor
int
out
stos
out
xchg
lret
and
sub
js
fsts
aaa
and
push
cmpsb
ret
hlt
scas
fiadds
and
jnp
mov
xor
test
int3
jg
jo
mov
sbb
add
mov
xor
pop
sar
repz
xor
adc
iret
sub
arpl
scas
test
and
jg
arpl
mov
jl
insb
or
mov
outsl
mov
popa
scas
add
icebp
les
lahf
sbb
or
loope
cmc
scas
pushf
jl
ja
pop
mov
fwait
movsb
cmpsl
and
jp
mov
mov
imul
imul
mov
lea
push
mov
loopne
cmp
xchg
lret
jle
xorb
or
stc
repz
fs
test
stos
mov
mov
nop
inc
pop
lret
cmp
dec
sahf
repz
and
push
mov
xchg
fildll
cmp
les
and
je
mov
xchg
jb
mov
ja
and
ret
sub
mov
sub
mov
idivb
pop
add
inc
xlat
inc
cmp
in
ror
jb
sti
faddl
andl
add
mov
lret
push
mov
dec
sbb
sbb
enter
cmp
inc
ss
sbb
movsb
inc
xor
subb
sbb
xchg
adc
lock
xor
iret
insb
addr16
outsb
rep
adcl
cltd
jg
jle
subb
jp
sbb
filds
inc
gs
ds
in
sub
pop
jbe
sbb
push
cmp
cmp
push
xor
mov
popa
jl
or
adc
nop
sbb
lods
mov
cmp
lods
loop
test
test
xor
xor
in
sub
movsl
popa
daa
jno
cld
mov
or
fldcw
jle
push
sub
fsubrl
push
dec
cmp
inc
scas
jmp
adc
stos
gs
adc
push
ljmp
stos
pop
adcl
xor
add
inc
fiaddl
add
fwait
pop
pop
xor
mov
insl
mov
jmp
stos
cmp
adc
sbb
jns
pop
hlt
enter
aad
sti
push
adc
call
inc
lcall
jne
es
jmp
xor
lds
adc
fwait
adc
mov
add
loop
test
imul
add
mov
fldcw
fildll
mov
lret
or
cmpb
mov
ljmp
pop
cwtl
in
push
pop
lahf
test
and
jg
insl
cs
jnp
mov
xchg
mov
faddl
pop
scas
push
mov
jbe
test
mov
add
or
mull
leave
repnz
movsl
mov
add
dec
and
or
mov
pushl
lret
aaa
push
ljmp
jge
jmp
test
fcmovnu
es
xlat
pop
push
jp
cs
stc
shrl
out
popa
fnstcw
dec
push
sbb
repnz
arpl
addr16
addr16
sbb
pusha
mov
pop
xchg
mov
xchg
mov
mov
popa
xor
insb
lahf
test
aam
ret
dec
or
sahf
xchg
adc
fnstsw
lods
mov
add
popa
pop
fildll
test
fs
mov
lea
adc
rolb
sbb
or
dec
and
movsl
rclb
bound
nop
mov
mulb
aam
sbb
lcall
in
dec
hlt
mov
notb
stos
les
fwait
inc
dec
adc
cmp
popl
mov
hlt
jp
scas
sti
xor
cmp
mov
leavew
sbb
or
xorb
or
sub
adc
mov
ret
imul
and
cmpsl
or
push
xor
push
jmp
test
mov
gs
int3
cmp
mov
cmp
xor
pop
int3
fucomp
mov
int
stos
pop
pop
pop
dec
int
ja
push
xorl
push
pusha
in
mov
ret
xlat
sbb
mov
xchg
lret
dec
sub
add
cmp
mov
adc
jmp
jmp
adc
ss
dec
sub
fidivs
and
ss
inc
xchg
rcrb
leave
pop
mov
or
popa
fs
or
or
add
aad
mov
adc
dec
pop
dec
aam
stc
ja
daa
sbb
or
cmp
jecxz
popa
mov
and
pop
push
cwtl
mov
xchg
jno
pop
mov
lds
in
fiaddl
ljmp
es
imull
xor
dec
inc
arpl
pop
adc
lock
xor
fdivl
lods
loop
mov
fstpt
movsb
mov
jo
in
pop
mov
jge
or
jne
mov
pushf
sbb
das
push
jae
loopne
xor
imul
pop
mov
pushf
pop
sbb
and
cmp
mov
leave
sub
and
shlb
dec
mov
enter
out
inc
mov
clc
scas
xor
pop
jl
jnp
inc
or
push
mov
les
pop
cmc
or
jecxz
jg
mov
mov
xchg
add
fimuls
divl
mov
sbb
repnz
push
aad
pop
jne
js
mull
or
pop
jne
sub
les
cli
std
add
add
xchg
pushl
mov
sub
sbb
mov
sub
xlat
int3
sub
sti
repz
stos
cmp
jbe
std
cld
adc
cmp
sar
outsb
or
jns
jp
icebp
mov
and
pusha
xchg
push
pop
xchg
mov
pop
fisttpl
dec
notl
repz
mov
loop
inc
pop
shlb
pusha
mov
dec
inc
pop
or
pop
xchg
mov
outsl
fcompl
sbb
out
into
repnz
jb
dec
lret
pusha
adc
out
sub
insb
and
sub
inc
fadds
in
enter
add
jbe
lret
jbe
je
pop
mov
loope
rorl
dec
fistps
subb
jge
movl
inc
mov
xlat
xchg
add
ljmp
push
hlt
pusha
inc
adc
rolb
out
adc
popa
mov
mov
inc
ljmp
mov
pushf
scas
jp
fwait
cld
loop
push
add
movsl
insl
test
add
data16
sbb
das
in
pop
mov
outsb
jb
mov
subl
pusha
imul
test
outsb
sub
lds
int
adc
add
sbb
lods
fbstp
hlt
xor
mov
sbb
lret
inc
adc
loopne
push
cmp
jns
xchg
sbb
out
adc
mov
or
lods
xchg
mov
cmp
xchg
sahf
add
mov
rorb
cs
push
pop
mov
rcrl
fmul
jl
jl
js
pop
xor
sahf
ds
repnz
popf
push
out
pop
pusha
test
mov
mov
lret
jmp
pop
inc
call
test
inc
insl
dec
aas
in
mov
or
pop
jg
push
mov
ljmp
push
movsb
sbb
mov
or
pop
sbb
pop
orb
std
adc
push
jno
lods
adc
loop
or
jge
xor
mov
out
jmp
jno
adc
cli
sbb
ljmp
mov
xchg
adcb
pop
sahf
inc
xchg
sar
lods
and
rcr
mov
xor
xchg
lea
fldcw
test
pop
add
lret
dec
dec
xorb
sub
test
dec
inc
inc
icebp
add
nop
cmp
enter
dec
sub
pop
leave
add
mov
jge
xchg
or
idivb
cld
pushf
lds
cmp
lock
imul
pop
dec
or
mov
in
xor
cmpsl
add
cmpsb
or
jb
xlat
mov
pop
xchg
aas
mov
mov
fidivrs
insl
aaa
dec
inc
insl
stos
ret
xchg
bound
bound
in
mov
add
sub
xchg
xchg
fsubrs
ret
add
pop
lea
add
inc
into
xorb
leave
ljmp
lret
shlb
test
inc
cld
fistpll
mov
sub
jle
jl
rorb
stc
inc
insb
aam
inc
cmp
adc
scas
lds
or
stos
sbbl
adc
movsb
fldcw
ret
sub
dec
fwait
out
aas
fiadds
ret
dec
mov
fistl
mov
iret
push
sti
xor
jbe
sbb
push
pop
int
bound
roll
dec
sub
inc
add
sub
es
add
hlt
in
rcr
pushf
sbb
dec
jecxz
nopl
clc
push
int3
inc
pop
in
and
cmp
ds
inc
scas
cmp
fistpll
shr
filds
mov
jns
cmp
fcomps
arpl
call
mov
lret
jecxz
push
add
ja
aam
cmpb
outsb
pop
cmp
imul
mov
aad
stc
in
out
mov
mov
inc
lds
and
push
test
pop
movsb
aas
shl
sbb
and
xor
and
les
mov
jg
push
xchg
or
hlt
and
sbb
inc
cmp
pop
fdivs
stc
addr16
push
mov
mov
inc
movsb
mov
aas
mov
xor
rcrl
stc
sub
ret
push
fstp
stos
inc
pop
jnp
nop
push
cmpsl
mov
je
add
test
outsb
fisttpl
pushf
insb
scas
scas
jl
es
jnp
cmpsb
arpl
sbb
mov
cmp
jg
pop
orl
outsb
push
ja
fdivr
lret
jne
cli
fwait
popf
rcrb
fisubs
rorl
mov
jne
out
sti
dec
cmp
xchg
dec
stos
stos
sub
mov
test
incb
xchg
jl
scas
xchg
mov
lods
int
lcall
je
and
xor
inc
enter
inc
cmp
jnp
insl
mov
cmc
arpl
gs
insb
mov
sbb
sti
add
jg
dec
mov
add
mov
pop
sbb
out
jb
xchg
jmp
loope
xor
cmpl
jl
cltd
in
mov
pop
rclb
mov
lret
int3
gs
dec
imul
add
jge
jae
pop
repz
pop
push
popf
in
scas
std
mov
shrb
mov
cmp
push
ret
pop
and
inc
bswap
pop
cmp
lods
dec
sbb
mov
shll
outsl
fistpl
lea
and
fsubl
fs
add
iret
sub
outsl
stos
add
fld
adc
fists
gs
in
imul
fwait
sub
loopne
push
pop
fnstcw
test
jnp
inc
add
pusha
lret
mov
dec
insb
iret
mov
gs
inc
in
cs
hlt
popa
mov
push
fs
push
cmpsb
ds
insl
sbb
mov
neg
jp
dec
mov
filds
cwtl
out
mov
out
push
inc
fsubrp
subl
repz
jle
xor
xor
push
xor
gs
imul
dec
push
sbb
push
add
aam
pop
sbbb
mov
pop
stc
push
dec
cmpsb
stos
loope
cltd
lea
sarb
scas
push
and
and
mov
mov
enter
addl
iret
pop
jle
push
je
pop
dec
cli
mov
push
cmc
and
lret
nop
adc
and
push
fsts
pop
sbb
fildl
outsb
arpl
and
mov
push
or
aaa
and
or
push
test
movsb
mov
mov
mov
cmp
sbb
mov
arpl
mov
pop
gs
dec
int3
lret
mov
movsb
add
loope
add
les
lock
mov
add
repnz
jbe
repnz
adc
enter
scas
push
int
adc
inc
xor
pop
cmpb
test
mov
add
fldl
xchg
fld
and
insl
cs
es
dec
lds
test
sub
sub
dec
loopne,pt
call
lods
add
stos
icebp
lret
or
rcl
dec
xor
xor
lcall
das
jmp
cmc
mov
pop
sbb
dec
and
and
adc
cmpsl
rol
jbe
jnp
push
fwait
sub
je
sub
mov
xor
movsl
in
and
shrl
rcll
in
add
lods
loopne
mov
test
bndldx
jge
and
stos
mov
pop
jns
call
ficomps
xor
scas
movsb
iret
inc
xor
mov
sbb
inc
sub
in
jno
xor
xchg
sti
xchg
inc
sbb
xchg
outsb
repnz
cmp
pop
mov
dec
repz
test
jno
out
out
jne
stos
movhps
mov
mov
jecxz
rclb
pushf
cmovno
test
jnp
daa
pop
pop
jo
fisubrl
and
push
pop
cli
push
sub
dec
dec
sti
add
and
sarb
addr16
mov
pop
push
fadds
out
pushf
rol
loop
jo
mov
mov
mov
and
jo
sub
mov
xor
and
pop
cltd
jno
insb
test
adcl
sub
out
xor
mov
les
jl
movsb
sub
jbe
mov
cmp
pushf
and
cli
sbb
or
popf
aad
xchg
jae
test
sub
hlt
aas
cmp
xor
or
mov
xchg
scas
cmp
fisttps
adc
loopne
fimull
fisubrl
xor
xor
std
addr16
ljmp
pop
js
sub
xchg
daa
divl
push
jmp
cmp
imul
cld
adc
in
sbb
ljmp
cwtl
out
repnz
lcall
mov
adc
nop
inc
dec
shl
clc
push
int
mov
xor
sti
imul
andl
into
das
mov
xor
mov
lea
decl
daa
addb
je
dec
jne
hlt
cwtl
leave
mov
jne
pushf
data16
andl
mov
cmp
push
pop
mov
adc
pop
icebp
adc
jbe
jl
repnz
lods
notl
je
xlat
test
add
rclb
jmp
cld
mov
xor
cmp
xorl
fcmovnu
call
loop
test
jge
pop
inc
shll
push
push
loop
mov
add
movsl
pop
adc
mov
cmp
inc
mov
cmp
lods
inc
in
add
cmpsb
xor
call
xchg
xchg
cmpsl
jecxz
scas
mov
or
pop
loopne
sbb
arpl
inc
repnz
dec
inc
rcrb
arpl
test
pushf
xor
addr16
test
popf
inc
fimull
sub
inc
fwait
dec
movl
lret
pop
or
clc
lret
adc
push
xor
repnz
stc
fnop
jb
or
jmp
enter
cmp
stc
mov
cmp
push
pop
int
inc
mov
lret
push
sub
add
out
mov
test
mov
fld
lret
mov
add
push
cmc
aaa
push
lretw
insl
outsl
in
int3
std
leave
daa
mov
sbb
jns
sub
inc
or
inc
jo
add
pause
and
sbbl
and
dec
add
lds
mov
or
jbe
test
cmpsl
lret
lods
mov
mov
xchg
adc
fidivs
icebp
jbe
sbbl
mov
mov
js
imul
mov
shlb
sbb
and
pop
adc
push
mov
mov
jae
pop
daa
pusha
test
in
data16
jl
add
loop
or
sbb
call
out
not
dec
subl
push
mov
imul
mov
xchg
pop
addr16
dec
aas
movsb
fs
loop
ljmp
aaa
mov
pop
xor
lds
inc
in
and
cwtl
lret
xchg
lahf
ja
idiv
std
push
in
iret
push
inc
jmp
add
test
mov
loopne
out
sub
fdivrs
mov
push
filds
pop
jg
and
jb
mov
add
dec
jns
call
aaa
and
xor
dec
cmp
inc
imulb
and
mov
inc
push
cmc
add
push
ljmp
lds
xor
daa
mov
fwait
jmp
stos
xor
cmp
fsub
call
jle
loop
push
aaa
jae
fstl
cmpb
aaa
jns
subl
std
jge
mov
cmp
sbb
and
repz
shll
aaa
jns
pop
pop
jo
push
insb
lret
mov
pop
lcall
inc
sar
adc
add
mov
das
test
pop
icebp
fnsave
rcrb
xchg
sbb
jne
mov
mov
xor
lods
mov
jg
dec
bnd
and
mov
adc
dec
out
cltd
dec
insl
mov
and
inc
daa
data16
jecxz
adc
scas
inc
stc
or
jmp
lahf
xchg
dec
in
lahf
std
rcrl
fiaddl
imul
pop
sub
fwait
scas
out
and
add
in
pop
xor
sbb
outsl
pop
sub
scas
inc
test
jo
incb
mov
lds
mov
xor
test
and
jo
lret
sti
lret
cmp
mov
pop
out
hlt
test
nop
sbb
jae
xor
dec
movsl
push
and
sub
lds
or
inc
pop
cmp
ret
loope
mov
loope
and
jnp
push
fnstsw
out
or
mov
movsl
sbb
into
js
mov
or
cld
xor
jmp
mov
jb
sub
pop
fstl
aam
pop
xor
mov
hlt
test
dec
add
pop
fs
fidivl
jge
fld
ljmp
bound
mov
pop
rcll
jb
push
in
aam
sbb
and
movsl
mov
fisubrs
and
cmovo
aam
sub
push
in
notl
push
mov
je
xor
movsl
ss
dec
mov
pop
pop
xchg
mov
repz
xor
pop
mov
data16
test
mov
in
xchg
fwait
add
push
jmp
add
mov
mov
cmp
xchg
cmp
aam
scas
sbb
in
repnz
ret
lds
push
daa
aam
and
pop
push
push
xchg
sbb
push
cmpsl
cmp
and
inc
cwtl
dec
mov
mov
and
enter
repz
xor
add
pop
lret
dec
mov
cmp
lods
lds
in
ss
or
ret
fdivrl
test
pop
push
les
push
mov
cltd
xchg
mov
and
imul
fdivp
fadds
push
out
push
iret
and
mov
pop
fdivrl
bound
mov
cmc
test
sbb
adc
fsts
push
je
adc
in
mov
adc
dec
inc
test
out
or
push
sbb
lods
xchg
add
rcrl
xor
add
jne
dec
shrb
jne
cmp
cmpsl
js
or
daa
hlt
xchg
inc
cmp
or
fdivs
gs
cmc
pminub
cwtl
push
idiv
add
sub
fstpt
test
cmp
mov
jle
jnp
loope
sub
repnz
or
xchg
outsl
in
stos
dec
cs
push
inc
mov
adc
sub
push
aad
ret
cltd
add
push
push
pop
adc
sub
xchg
add
adc
insb
and
ljmp
inc
inc
push
les
sub
dec
mov
nop
mulb
add
imul
fiadds
lahf
jp
sub
int3
popa
mov
mov
out
xor
stos
jae
icebp
sbb
enter
jns
dec
add
push
mov
pop
push
add
out
xchg
lea
int3
jb
mov
outsb
adc
test
mov
jae
icebp
mov
int3
out
repz
and
ffreep
pop
pop
add
sub
mov
xchg
bound
cmp
inc
xor
out
dec
adc
icebp
or
icebp
add
bound
add
popa
jne
jmp
cmp
ljmp
pusha
mov
xor
sub
mov
xchg
pop
push
aam
xor
and
mov
mov
mov
lahf
mov
mov
xchg
test
flds
xchg
shrb
ds
pop
sbb
sub
enter
jo
into
push
sbb
mov
stos
sar
mov
test
cltd
aaa
testl
jns
stos
push
sub
xor
mov
jp
dec
inc
dec
xchg
or
je
add
sub
outsb
dec
pusha
shrl
push
ror
aaa
ja
int3
sub
or
jbe
pop
mov
add
inc
mov
sub
push
ret
push
cmp
gs
sti
sub
push
movsb
jle
std
xchg
scas
leave
sbb
repnz
cmpsb
insb
pop
lods
xlat
adc
arpl
pop
push
stos
cmpxchg
dec
pop
outsl
xchg
cmc
xlat
xchg
test
sar
clc
mov
dec
push
pop
jae
dec
xchg
popa
xor
push
sub
pop
mov
jno
imul
andl
mov
int
push
pop
iret
jecxz
pop
xchg
mov
xor
repz
enter
test
cs
mov
loopne
fs
mov
sub
pop
mov
jnp
push
inc
jns
fxch
inc
pushf
fiadds
stos
jnp
xchg
mov
push
in
push
lcall
lods
in
sahf
sub
mov
adc
push
xchg
push
sbb
outsl
pop
in
pop
scas
shrl
cmpl
jns
adc
insb
jmp
leave
cmc
stos
cmp
sub
sar
roll
out
xor
lahf
in
repz
int
sbb
push
cmp
dec
pop
pop
mov
hlt
adc
add
les
mov
adc
movsb
add
sbb
jb
mov
lea
nop
aam
and
add
jp
lcall
pop
lret
xor
add
fcmovb
pop
or
adc
pop
jbe
sub
cltd
dec
pop
sahf
out
sub
mov
mov
hlt
in
sub
push
jo
push
lods
sub
test
fdivrs
inc
xchg
dec
xor
ja
xor
pop
arpl
xor
daa
insl
and
xchg
jnp
lods
jae
mov
push
out
fadd
pop
iret
ds
sub
mov
and
adc
movsl
iret
inc
mulb
mov
into
xchg
movsl
fmulp
jno
loopne
aaa
and
lahf
sub
cmp
push
pop
je
push
movsb
jl
pop
pop
mov
sbb
sbb
xor
sub
ljmp
inc
jbe
jne
push
adc
sub
xchg
push
daa
push
xchg
inc
mov
lret
mov
les
insl
fcomps
out
leave
or
push
rcrl
xor
lods
adc
mov
pop
int
or
add
outsb
fsub
mov
xlat
std
nop
lret
adc
icebp
sbb
scas
push
sbb
pusha
vphadduwd
jnp
lcall
lret
xor
sbb
aad
cmpl
stos
sti
out
aas
mov
sub
dec
ficoml
add
loop
mov
gs
ljmp
out
sbb
popa
mov
xchg
sub
cmp
xchg
mov
pop
and
dec
mov
sbb
fistpll
dec
aaa
aam
mov
jg
scas
daa
xchg
test
leave
xchg
imul
bound
adc
fcomip
mov
xchg
hlt
fsts
mov
and
jecxz
sub
gs
xchg
sti
sbb
sub
cwtl
outsb
mov
fs
and
andl
mov
add
jp
xchg
xchg
mov
out
xor
sbb
cmp
ret
mov
xchg
imul
pop
lret
jecxz
mov
push
mov
enter
icebp
push
cmp
mov
test
ss
push
add
cli
repnz
mov
jae
out
xor
sbb
inc
roll
adc
and
mov
fnstcw
mov
rcl
jecxz
push
xchg
mov
add
mov
jns
sub
jg
cltd
mov
repnz
lret
lahf
sbb
add
pop
push
and
clc
je
or
sub
mov
lods
bnd
jnp
mov
or
xchg
outsl
popa
loopne
cmp
pop
out
fiaddl
es
pop
popf
push
dec
inc
push
push
lret
mov
xor
jecxz
mov
dec
mov
mov
movsl
icebp
cmpsl
mov
adc
inc
xchg
pop
mov
and
lods
sbb
movsl
lcall
cmp
mov
or
jne
arpl
and
inc
sti
es
andl
dec
imul
xor
fcoml
fnsave
or
jnp
shll
movsl
sbb
xchg
lcall
pop
jnp
add
filds
push
fdivrp
xor
fsubrp
pop
loope
out
jbe
lahf
in
dec
jmp
jbe
in
push
les
jge
test
inc
dec
ret
scas
or
inc
mov
pop
in
and
xchg
ret
push
sbb
xchg
out
loopne
pop
jae
sub
cmc
sbb
fs
rcrb
sub
mov
xchg
imul
xor
into
in
xor
cmp
loopne
xchg
sub
sbb
cmp
mov
push
adc
xchg
push
out
mov
rep
dec
inc
das
push
xchg
cmpsl
lcall
and
jge
mov
dec
mov
pop
dec
jns
add
jo
jge
cli
mov
shrl
hlt
loop
or
xchg
dec
arpl
or
adc
add
dec
nop
pop
movsl
push
movsl
pop
stos
fdivr
mov
xlat
sbb
sbb
dec
iret
fs
test
cli
inc
mov
lea
jmp
sub
mov
inc
push
jp
jbe
add
out
jg
cmp
popa
fisttpl
shlb
jp
xchg
leave
mov
add
sar
dec
xor
fadd
sbbb
push
test
inc
jnp
xor
mov
out
leave
inc
jmp
sahf
imul
mov
vfrczss
movsb
xchg
cmp
fmulp
repz
add
in
in
xor
inc
push
rcrl
push
mov
das
mov
and
ret
dec
mov
inc
and
inc
shlb
aaa
mov
fldl
mov
sbb
cmp
sti
xor
subl
push
lcall
outsb
into
stos
jb
leave
les
sbb
mov
sar
in
pop
push
mov
clc
scas
xor
outsl
xchg
sub
shr
ss
mov
pop
enter
mov
add
test
ret
xor
movsb
adc
and
rcrl
and
test
mov
jmp
pop
xchg
test
sbb
and
test
push
xchg
hlt
repz
out
cmc
pushf
iret
imul
jns
mov
mov
sti
adc
sub
les
mov
inc
add
movlhps
push
je
jmp
xor
fstps
je
or
push
cmc
cmc
jae
imul
shrl
in
sarl
fstp
movl
enter
scas
test
test
mov
dec
or
fcomps
jns
xlat
data16
xchg
subb
and
or
stos
xor
mov
push
xchg
cltd
lahf
cmp
nop
jnp
xchg
bound
sub
lret
out
xchg
addb
dec
xor
scas
jge
xchg
movsl
negb
adc
push
pop
test
fldenv
fbstp
adc
sub
inc
ss
mov
sbb
dec
sub
xor
cld
lahf
sbb
xor
inc
mov
lret
and
popf
push
jecxz
or
push
int
or
adc
sbb
add
pop
inc
cmp
out
clc
pop
aaa
shlb
xchg
cmpsb
std
jmp
adc
jb
and
ljmp
inc
xchg
pushf
lahf
jno
mov
lahf
lcall
cmp
movsl
sub
fsubrl
call
and
dec
in
and
jecxz
adc
shlb
aam
lds
or
sub
sbb
xlat
cmc
cmp
pop
and
and
jge
mov
test
and
out
daa
dec
push
outsl
repz
aad
dec
imul
mov
jmp
sbb
fadds
inc
popa
call
push
add
cmp
or
adc
fisttpll
xor
sub
clc
iret
rol
rcll
mov
jno
xchg
shl
add
rcr
or
arpl
pop
mov
sbb
arpl
jbe
cmp
loope
sub
pop
ss
in
pop
adc
xor
fisubrs
mov
int3
hlt
push
subb
push
lcall
jo
ficoml
loope
inc
xor
les
or
aad
mov
pop
push
cmpl
sub
cmpsl
int
inc
gs
cmp
dec
jl
mov
and
mov
lock
cld
cmp
pusha
mov
cmpsl
and
mov
test
jo
adc
in
sbb
mov
cs
mov
lahf
mov
adc
jge
xorb
add
sbb
inc
xor
test
or
aas
inc
inc
mov
scas
adc
cwtl
adc
mov
cmp
pop
fwait
aas
and
jae
jecxz
adc
insl
cwtl
loopne
jo
aaa
jmp
outsb
aad
hlt
adc
test
jmp
cmpl
out
aas
imul
insl
push
inc
sarb
fadds
jae
pop
dec
cwtl
clc
pop
xor
mov
adc
mull
mov
daa
mov
mov
sub
adc
sub
test
int
int3
out
inc
push
and
or
std
inc
loopne
mov
cmc
sbb
pop
pop
nop
ljmp
jbe
aam
add
lods
sbb
iret
xor
mov
mov
sub
jle
lret
fsubl
scas
lret
push
inc
cmp
mov
loop
bound
lret
sub
loope
fwait
sbb
aaa
std
sbbb
lods
int
xor
stc
and
or
and
fwait
sub
out
mov
stc
xor
cmp
inc
orb
insb
xor
mov
je
push
jo
js
cltd
jl
fnstenv
sub
xor
jmp
xor
pop
in
xor
stc
mov
add
nop
pop
xor
popf
loope
test
mov
stc
sub
push
sahf
in
mov
add
push
and
sar
dec
sub
xchg
jmp
fbld
rorb
outsl
cs
pop
in
mov
xchg
adc
into
sbb
xchg
bound
mov
mov
jl,pt
mov
and
lea
and
ljmp
mov
xor
lahf
out
jbe
sbb
and
imul
lods
pop
jmp
jno
daa
mov
xchg
jecxz
inc
mov
or
outsl
lcall
or
shl
cmpsl
cmp
call
xchg
xor
in
cltd
rol
or
jnp
dec
in
imul
jns
sti
lods
inc
je
cli
jle
mov
mov
mov
sub
inc
push
cli
or
ret
mov
arpl
aad
adc
arpl
adc
std
dec
int
mov
adc
xchg
mov
lret
xchg
fcompl
push
fs
sbb
loopne
pop
data16
stos
cmpsl
dec
jmp
xchg
ficoms
cmp
les
and
out
dec
cmpsb
xor
lret
gs
mov
xchg
add
add
cmc
mov
pop
fldenv
dec
add
aas
pop
pop
in
mov
xchg
mov
sub
push
pop
in
cmc
xchg
sub
mov
and
movsl
jle
dec
xor
into
jb
inc
aam
adc
js
test
stos
cmp
int
mov
sbb
mov
fmuls
mov
push
sarl
cmp
in
lods
test
lcall
ds
aam
cwtl
and
pop
cmpsb
and
jns
test
pop
daa
mov
fidivrl
mov
adc
push
bnd
cmp
or
outsb
rcll
push
push
pop
ret
cmc
imul
or
adc
jle
scas
add
movsb
xchg
loop
xchg
dec
inc
sti
jnp
push
test
mov
mov
sbb
xchg
dec
dec
data16
add
mov
rcrl
in
jge
sbb
dec
bound
or
ljmp
pop
scas
in
popf
mov
dec
pop
add
sarl
mov
push
mov
testb
in
repnz
outsb
lds
test
in
das
sub
and
call
mov
pop
jp
dec
pop
aam
mov
xchg
inc
xor
rorl
or
cmp
mov
sub
lcall
sub
jo
je
rclb
mov
jp
insb
inc
in
xor
ds
jle
shlb
push
sahf
cltd
insb
inc
sahf
push
repnz
enter
adc
aam
fisubrl
add
out
inc
pop
aas
xchg
sbb
icebp
das
jb
mov
and
outsb
sarb
pop
jmp
and
pop
and
add
in
cmp
mov
jl
in
xor
sub
pop
popf
mov
and
int
psubd
cmc
jp
mov
push
in
lods
ret
stos
dec
outsl
jmp
sub
adc
hlt
pushf
jb
je
or
adcb
lods
imul
xchg
mov
shll
movsl
cli
and
inc
movsl
sub
in
iret
imul
adc
in
mov
fists
mov
add
dec
cmp
outsb
std
sbb
in
std
paddd
or
ja
popl
inc
pop
mov
dec
mov
xchg
sub
jp
mov
push
fsub
sub
frstor
loop
jle
add
in
movsl
test
pusha
fwait
xor
or
or
ljmp
jmp
pop
cmpsb
xchg
sub
fcmovbe
out
or
inc
fcompl
mov
jge
stc
shlb
add
xchg
aaa
jnp
inc
call
std
mov
add
nop
xchg
mov
cmp
or
mulb
adc
out
ja
incb
inc
inc
pop
cmp
mov
ret
adc
ja
sbbl
testb
mov
les
xlat
mov
sub
clc
pop
mov
jb
mov
cwtl
mov
xor
scas
xor
int3
add
xadd
dec
clc
int
scas
pop
xchg
hlt
adc
in
and
push
pop
shlb
sbb
lock
adcl
std
cmp
pop
mov
xchg
mov
pushf
inc
loopne
rcl
lods
cmpsl
push
out
sbb
daa
fildll
fs
lea
xchg
pop
and
fistpl
sub
sbbb
imul
lods
bound
icebp
je
subl
aam
mov
addr16
and
hlt
xor
xchg
fnstenv
jmp
jns
loope
loopne
dec
sti
dec
cmp
dec
loope
mov
loopne
cmp
scas
xchg
mov
lods
psrlq
xorb
test
or
adc
or
in
negl
push
repnz
in
xor
pop
mov
add
sarl
andl
add
enter
aam
mov
mov
cli
cli
jns
mov
or
dec
gs
xchg
ljmp
leave
mov
inc
popa
rcll
pop
cli
or
xchg
mov
xor
fs
jae
xchg
mov
out
add
cwtl
cmp
or
fildl
popf
lods
jnp
repnz
or
mov
sub
adc
lods
and
hlt
or
push
sub
push
int3
outsb
pusha
dec
cmp
repz
push
jle
jmp
push
sbb
mov
cld
cmp
push
cwtl
mov
jle
shll
cs
dec
lea
jbe
out
decb
sub
dec
lcall
xchg
scas
pushf
xor
lods
push
jp
jge
fildl
dec
stos
lds
cwtl
and
fnstsw
idivl
or
pop
repz
mov
clc
and
adc
test
mov
test
push
rcrb
push
test
hlt
inc
mov
mov
fwait
xchg
out
and
jne
idivl
pop
inc
push
sbb
add
or
icebp
nop
imul
arpl
sub
and
sbb
cmp
mov
mulb
jo
in
aas
shlb
mov
sbb
sub
sub
mov
je
ret
or
sbb
adc
mov
inc
mov
push
mov
adc
jbe
mov
aaa
mov
frstor
fwait
jnp
loopne
lods
fsts
jmp
es
cmp
orb
or
mov
divb
mov
and
mov
sub
xor
addr16
push
lcall
popf
rcrl
pop
cmpsl
shlb
pop
mov
gs
xchg
icebp
jbe
bswap
xor
mov
push
push
into
popf
push
and
test
cmp
fsubl
and
fimuls
cs
mov
xchg
in
mov
inc
cmp
adc
loopne
sti
aas
std
xchg
sbb
push
mov
shlb
fdivr
mov
test
movsb
std
js
push
adc
movsb
lahf
sbbl
loop
call
dec
push
hlt
mov
adc
xchg
and
push
mov
scas
xchg
popf
and
call
cltd
psubq
add
xor
add
stos
mov
and
call
insb
sub
pop
sub
ficomps
or
scas
push
popa
mov
hlt
fwait
sbb
icebp
sbb
mov
int3
mov
loop
dec
daa
pop
scas
cmp
or
cmp
arpl
xlat
repnz
xor
xor
movsl
dec
sbb
sub
jge
movsb
loope
call
imul
mov
pop
mov
xchg
jae
sarl
mov
or
mov
rorl
push
sarl
mov
mov
stos
arpl
jl
cmp
aaa
add
dec
sbb
enter
pop
cmpsl
fnstenv
mov
out
inc
push
aam
sub
verw
mov
subb
subl
adc
push
mov
jae
into
xchg
xchg
cltd
scas
adc
push
mov
xchg
push
add
jle
pop
ja
xor
imul
add
push
iret
cmp
std
or
mov
dec
shll
out
pop
mov
jno
fwait
mov
or
lea
fists
jle
cmc
repnz
push
outsl
call
fld
pop
orb
xchg
ja
sbb
enter
sbb
es
push
xor
or
inc
add
mov
mov
pop
in
mov
icebp
add
fstpt
lock
fildl
mov
and
pop
adc
mov
ret
sub
repz
sub
arpl
addb
mov
repnz
mull
lret
jno
xchg
cmp
mov
les
mov
push
push
dec
inc
fdivl
imul
test
mov
and
pop
jne
pop
sbb
jne
pop
pop
push
sti
adcb
cmp
jnp
call
fs
sub
hlt
gs
lods
mov
jbe
mov
in
movsl
or
mov
inc
fimull
mov
push
sbb
xor
sbb
lods
dec
cmp
mov
adc
sbb
andb
push
xorb
imul
cmp
pushf
jle
cld
and
scas
jge
scas
inc
sbb
popa
add
cld
sub
pop
mov
xor
ljmp
pusha
ja
xor
jns
int3
push
mov
in
leave
cmpsb
ljmp
inc
nop
sub
xchg
repnz
dec
std
fistps
mov
shr
mov
xchg
cs
inc
cltd
je
aam
xchg
sbb
pop
ret
mov
add
xor
sub
lret
push
mov
movsb
enter
out
push
sub
sbb
imul
jle
lcall
fs
jge
popf
xor
push
adc
push
xchg
lods
ja
xchg
jge
pop
cmpsl
pop
rol
movsb
sbb
fcmovb
dec
dec
push
add
xor
inc
andb
cmp
xchg
hlt
sub
xchg
ja
repz
fisttpll
push
mov
icebp
xor
jge
or
pushf
jbe
ljmp
fwait
std
and
shll
dec
jno
pop
arpl
jmp
pop
xchg
inc
jp
mov
imul
cmp
add
lea
roll
arpl
sub
repz
repz
pop
out
xorb
mov
icebp
lds
sbb
into
xor
aaa
test
and
lahf
pop
pop
mov
mov
leave
daa
mov
lods
fldt
ds
addr16
lds
pop
mov
xchg
sbb
push
imul
push
cli
dec
out
ret
push
push
paddb
sbb
jns
jns
push
es
repz
sub
pop
mov
in
jp
fldt
std
jnp
mov
sahf
mov
xchg
cld
out
adc
jns
xchg
jne
outsb
push
dec
daa
pop
int3
out
sub
test
xchg
rorb
lods
push
pop
push
sbb
pop
cmp
lds
push
mov
sub
adc
clc
mov
mov
cli
imul
dec
hlt
lds
in
lahf
fcomi
cli
dec
shlb
cmp
sbb
nop
notb
mov
and
imul
out
or
inc
daa
mov
mov
insb
mov
mov
sahf
sbb
rep
addb
xchg
and
ss
enter
mov
xlat
mov
pop
jp
cmc
std
pop
dec
jl
xchg
jmp
int
gs
lea
push
cmpsb
sbb
add
push
mov
fsubrl
xchg
sub
mov
sbb
into
jno
mov
repz
xchg
lods
jmp
aas
icebp
shll
mov
cwtl
jmp
adc
jae
cmp
add
adcb
jnp
sub
xchg
pop
jbe
in
sub
lds
in
sbb
mov
nop
pop
jno
lret
imul
mull
or
add
pop
lea
mov
jns
or
xchg
cmp
xchg
testl
sub
gs
lods
js
pushf
bound
out
adc
adc
mov
sbb
adc
hlt
pop
popa
pusha
movsl
sahf
mov
cmp
jo
push
dec
xchg
enter
add
hlt
push
loopne
mov
or
mov
jns
cmp
hlt
nop
cmp
cld
or
clc
xchg
add
dec
fstp
xchg
shrb
shlb
icebp
or
lea
in
sub
push
sub
cltd
daa
mov
push
repz
xor
mov
pop
push
mov
xor
stc
jg
rcrb
out
out
push
mov
ds
test
je
cs
fidivrl
mov
popf
test
and
hlt
adc
out
movsl
ljmp
andl
inc
mov
sbb
stc
out
xor
sub
addl
nop
xchg
mov
adc
and
testl
fadds
out
or
jb
xchg
js
pop
mov
mov
pop
pop
cmc
test
ficomps
dec
sbb
add
leave
sub
addr16
inc
dec
arpl
xchg
nop
pop
out
aas
cmc
aad
lcall
lods
push
mov
cmc
pop
dec
out
jle
dec
jl
cmpb
adc
out
inc
pop
lods
mov
push
cmp
pop
cmp
inc
jmp
adc
jle
mov
shlb
lods
out
loopne
pop
mov
dec
ret
int
mov
cld
push
imul
lods
pop
nop
sbb
xchg
shlb
inc
mov
shl
stos
jnp
add
ja
add
bt
bound
scas
cmp
mov
mov
adc
pop
leave
cmp
rcl
ja
mov
std
jg
aas
add
les
lods
sbb
pop
cli
push
int3
nop
sbb
jle
dec
test
insb
lock
lahf
out
stc
pop
sti
inc
jno
sbb
fistps
add
sahf
add
mov
add
popa
test
ficompl
and
and
sbb
jnp
cmp
andb
adc
cmp
push
fcomip
add
stos
adc
cmp
dec
xor
adc
notb
add
fcompl
outsl
movsb
pop
xchg
stos
jecxz
loope
js
sub
xor
test
movsb
and
arpl
cli
out
push
adc
push
stos
xor
sbb
test
outsb
mov
addr16
cmc
fwait
insb
push
data16
pusha
ss
jne
jmp
pop
push
mov
test
iret
daa
stos
pop
xor
and
sub
jp
insb
addr16
sub
pop
jne
mov
pop
lret
inc
cltd
inc
sbbb
push
push
jge
push
mov
je
cmp
into
push
adc
pusha
adc
scas
insb
adc
dec
xchg
sahf
xchg
in
sub
pop
sbb
or
xchg
incl
sub
dec
or
or
push
jnp
fcmovbe
mov
mov
jnp
xchg
test
or
aam
and
lds
push
imul
test
sbb
ljmp
or
lcall
shrb
jl
jg
nop
sbb
jecxz
add
loop
sbb
xor
ljmp
cmp
or
mov
push
subb
or
outsl
add
aam
jp
addl
or
lock
lock
in
idivb
jl
repnz
nop
sbb
subw
cmc
cmp
mov
or
in
iret
arpl
sarb
mull
mov
inc
rolb
push
clc
lds
rorb
iret
jae
outsb
cmc
or
je
or
es
cld
push
sahf
fldl
pop
cmpsl
pop
jbe
adc
outsl
mov
popf
sbb
out
call
std
in
jae
shlb
fwait
jmp
out
fimuls
jl
je
shr
xor
rcrl
inc
xor
push
orb
inc
cs
or
repnz
jle
outsl
sar
js
xchg
xor
test
fistps
rcll
or
mov
hlt
mov
insb
mov
pushf
lahf
inc
push
cmp
sub
or
ss
das
mov
ljmp
and
xchg
jno
xor
jb
jge
mov
push
mov
adcb
test
xchg
lds
shr
lcall
cld
or
call
xor
dec
jecxz
loopne
pushf
inc
xchg
ss
shll
adc
into
mov
sub
fcmovb
lock
mov
loope
into
xlat
mov
xor
rorl
xchg
pop
sahf
mov
push
lret
ret
sahf
push
nop
insl
lahf
jns
or
add
mov
jnp
or
xchg
inc
sti
fs
mov
push
addb
imul
xor
arpl
adc
int
ret
push
mov
imul
sbb
sub
in
mov
mov
std
dec
fmul
sbb
jae
push
add
je
pop
pop
mov
imul
mov
fucomp
std
addr16
ret
inc
nop
inc
xchg
insb
mov
pop
hlt
jno
je
inc
scas
xchg
push
cwtl
mov
jmp
fadd
dec
mov
mov
fcompl
lds
test
mov
inc
or
ret
int
push
jae
stos
testl
pavgw
xlat
shrb
loope
sub
aam
push
inc
push
fistpll
mov
pop
scas
icebp
xor
and
jmp
daa
push
cltd
sti
clc
icebp
push
dec
les
sti
sub
adc
xlat
mov
repnz
push
xchg
mov
xchg
cwtl
or
in
push
in
push
sub
push
addr16
mov
xor
dec
mov
jge
push
dec
mov
or
test
xor
pop
and
adc
ret
xchg
cmp
sti
or
mov
ja
out
in
outsb
inc
xor
xchg
ficoml
popf
pavgb
adc
xor
push
lret
bound
xlat
je
jb
mov
mov
stos
arpl
xchg
imul
ss
faddl
ret
roll
out
in
callw
popf
in
adc
jp
push
sub
mov
insb
ret
lds
jp
hlt
mov
aam
pop
lret
rorl
rcl
mov
jl
cmp
adc
cmp
mov
or
add
cltd
jae
pop
adc
addr16
pop
test
jo
cmp
mov
pusha
dec
xor
push
test
sub
or
inc
inc
mov
sarl
mov
mov
jne
and
mov
mov
mov
fstl
dec
pusha
rclb
xchg
dec
push
xchg
jnp
ja
outsl
call
pushf
sbb
dec
movb
xor
pop
jmp
sub
mov
pop
xor
sbb
repnz
mov
sub
sub
iret
cmp
push
and
fs
xchg
cmp
and
sarl
mov
mov
jne
sbb
mov
ret
pop
lds
jb
ljmp
xchg
movsb
hlt
daa
popa
add
sub
xchg
xchg
inc
les
mov
cld
mov
inc
mov
add
sbb
lahf
mov
adc
rcr
add
out
sbb
mov
stos
test
pop
out
and
data16
pop
inc
jl
mov
mov
sti
leave
fcomps
sbb
push
sbb
adc
mov
pop
dec
test
test
pop
push
js
fs
sbb
sti
rcl
adc
push
icebp
inc
in
dec
lock
inc
mov
stos
or
ret
or
push
je
dec
lret
cmp
dec
cmp
test
or
jge
repnz
inc
sbb
push
sbb
pop
pop
lds
cmp
sub
add
mov
out
mul
enter
lock
ja
pop
shl
test
nop
fdecstp
outsb
mov
sbb
jg
xchg
shrl
movsb
and
lea
bound
call
inc
mov
fisubrl
leave
sti
fsubl
or
cli
stc
cwtl
insb
imul
std
cwtl
and
pop
hlt
pushf
out
addr16
lea
aas
pop
jge
mov
aaa
outsb
add
jns
dec
mov
lock
jecxz
mov
sub
out
jecxz
adc
mov
pop
or
repnz
out
add
mov
cmp
cs
in
test
pop
push
popa
repnz
clc
cs
sub
imul
repz
in
mov
jp
or
and
les
push
add
fwait
cli
adc
jb
fwait
inc
jecxz
dec
std
mov
out
jbe
push
enter
stos
sbb
sahf
pop
roll
sub
xchg
mov
xor
test
xchg
jne
pop
pusha
subb
pushf
mov
inc
jae
adc
xor
inc
cmp
dec
push
lret
pop
cmp
dec
xor
dec
push
ret
lcall
and
bnd
cmp
imul
push
addb
jno
ljmp
sub
hlt
mov
xchg
push
mov
and
xchg
push
xchg
mov
and
and
out
sub
test
cmp
out
pushf
lock
shl
fldenv
cmp
xchg
subl
pop
add
jmp
mov
dec
lock
sbb
push
imul
cmp
ds
mov
mov
sbb
xor
pop
and
repnz
or
int3
sti
movsb
sub
inc
clc
lods
ret
aam
sbb
call
push
push
jp
es
jl
cs
sbb
sub
dec
fwait
call
push
enter
xchg
sub
push
icebp
mov
fistl
scas
xor
subl
cmp
aam
lea
mov
xchg
es
sarb
pop
addr16
adc
out
fidivrs
mov
mov
push
mov
mov
lods
jl
mov
or
fwait
adc
fdivrl
push
lock
jmp
pop
xchg
xor
adc
xlat
mov
dec
sbb
lret
sbb
and
push
lea
cs
xor
xchg
outsb
jae
neg
test
xchg
aaa
push
call
dec
das
fwait
je
scas
push
adc
sub
mov
cmc
xchg
mov
xorb
adc
daa
dec
push
das
loopne
stos
mov
popa
xor
sbb
ficompl
jo
mov
adc
add
inc
idivb
das
sub
jae
xchg
imul
pusha
mov
ss
je
inc
ss
sub
push
es
cwtl
mov
mov
xchg
mov
test
shlb
add
lods
dec
lret
adc
fpatan
roll
cld
outsl
in
roll
ret
or
out
jb
dec
enter
out
push
or
mov
add
xchg
jecxz
ret
inc
insb
clc
cmp
outsl
pop
call
mov
lret
sbb
add
ljmp
mov
fsubl
lret
pop
mov
fimull
daa
lahf
test
mov
xlat
lods
andb
xor
rorb
sahf
fiadds
dec
lock
mov
pop
cwtl
rorb
xor
lods
xlat
mov
cmp
test
xchg
dec
aad
mov
adc
jb
adc
jmp
ret
mov
inc
mov
sub
iret
or
and
lret
stos
pop
or
fstpt
cmpsl
sbb
shlb
xchg
shrb
sbb
daa
mov
cmp
cltd
add
sub
fdivrs
cmp
xchg
fcos
lret
iret
daa
jno
jg
inc
xchg
mov
push
cmpsb
mov
test
rclb
mov
cltd
mov
subl
in
neg
mov
imul
push
pop
cmc
out
cld
jecxz
bts
jne,pt
nop
push
in
inc
jne
sbb
dec
xchg
and
xchg
mov
clc
das
popf
jmp
jno
jae
jae
jns
mov
cmpsb
popf
aam
xchg
mov
jg
scas
hlt
cmpsl
sbb
lock
je
jae
push
add
into
mov
xchg
sar
mov
mov
outsl
movsb
xor
pop
dec
dec
icebp
aam
clc
repz
dec
push
inc
or
cmpl
or
in
mov
pusha
inc
sbb
testl
into
xor
fs
jle
aam
imul
pop
lods
push
jno
leave
pop
mov
pop
fldcw
add
dec
dec
xor
cld
pop
mov
mov
lods
fldl
adc
or
outsb
add
pop
pop
mov
push
outsb
cld
int
cmp
insl
pop
pop
cwtd
jl
imul
repnz
cmpsl
aas
jmp
mov
pop
insl
stos
or
jo
pop
insb
cld
jle
insb
xchg
mov
jnp
adc
inc
imul
mov
pop
loop
loop
insl
mov
loope
xlat
fdivrl
movsb
test
mov
ljmp
gs
cmpsl
cs
mov
sub
xchg
adc
mov
out
popa
lahf
fldpi
js
inc
jecxz
fcoml
inc
icebp
ret
inc
mov
js
ds
xchg
add
sar
cmp
dec
mov
sbb
xchg
stc
mov
cmp
inc
inc
into
in
imul
jne
add
dec
int3
cmp
shll
dec
rcrb
cli
push
mov
or
inc
dec
xchg
inc
inc
es
xchg
mov
rol
add
add
jns
into
push
pop
insb
adc
arpl
cwtl
add
in
test
outsb
pop
jno
mov
push
jg
cmpsb
iret
cmp
clc
xacquire
aad
fiaddl
push
dec
and
or
fnstsw
insl
addb
sahf
cmpsl
fistpll
add
rol
xlat
sbb
push
popa
lea
stc
push
jbe
and
cmp
pushf
loopne
cmp
or
adc
scas
pandn
and
sbb
or
add
rorl
pop
in
or
jg
jp
dec
jbe
cmp
sbb
dec
mov
movl
add
decl
add
lock
xor
pop
ljmp
xchg
dec
movsb
stc
lock
xchg
bound
std
xchg
adc
push
mov
je
jp
push
cmpsb
movl
imull
imul
jnp
or
enter
fsubl
mov
movsb
adc
xor
arpl
xor
insb
mov
and
xchg
sub
lock
cmp
xor
mov
jl
outsb
sub
das
cs
sbbb
adc
jne
repz
push
dec
mov
xor
sub
pop
pop
sub
or
pop
movsb
daa
js
adc
xor
xchg
scas
or
inc
xor
adc
xor
inc
dec
mov
jns
jmp
pop
insl
pop
bswap
cmp
lret
pop
ror
lock
clc
shrl
adc
sub
rolb
mov
sub
aaa
fsts
cmp
lret
inc
or
cmp
out
les
xchg
xchg
adc
sbb
call
arpl
add
cwtl
sbb
fwait
pop
push
aaa
test
test
in
xchg
sub
sub
adc
leave
xor
andl
lret
sbb
mov
push
notb
pop
jmp
or
pushf
and
or
in
jp
mov
adc
mov
bound
repnz
pop
shr
sbb
lcall
xchg
ss
pop
mov
mov
lret
push
jecxz
insl
ret
loop
adc
or
xlat
jg
mov
mov
fadds
inc
ds
popf
lret
jl
add
out
mov
jp
das
dec
inc
gs
mov
mov
pop
inc
mov
mov
dec
push
adc
mov
or
fnstenv
sarl
loopne
filds
popf
leave
addl
sub
xchg
and
xchg
out
cld
jnp
lret
mov
cmp
mov
cmp
fabs
lret
mov
loopne
shl
cmp
dec
cmp
clc
imul
imulb
adc
mov
mov
ljmp
hlt
arpl
leave
or
dec
sub
idiv
lods
pop
mov
nop
fs
cld
loope
jnp
cmp
adc
or
push
into
xor
fidivs
bnd
loopne
mov
pop
jmp
xchg
in
std
pop
jno
pop
lret
gs
mov
jne
outsb
das
mov
ret
ljmp
lahf
add
ffreep
repnz
cli
lahf
out
xlat
aas
cld
mov
fimuls
pop
idiv
aam
out
and
fisttpll
enter
lret
add
mov
lds
enter
addl
sbb
sub
mov
pop
lods
xchg
pop
loope
fistl
and
mov
inc
mov
pushf
cmpsl
or
clc
inc
mov
aaa
and
into
mov
lods
sub
pusha
fs
sti
xor
mov
adc
push
sti
mov
sub
jg
stc
mov
jne
pusha
addl
xor
push
cmp
and
xchg
push
jno
dec
mov
pop
pop
enter
out
xor
and
repnz
xchg
outsl
sarl
xchg
mov
test
mov
jns
nop
and
stos
pop
call
dec
das
sahf
insl
adc
mov
add
jp
cmp
sbb
pop
jecxz
sub
dec
call
inc
imul
decb
loope
data16
scas
cmp
mov
jecxz
enter
cmp
sub
inc
inc
inc
arpl
clc
repnz
hlt
lea
ss
int3
leave
pop
stos
sbb
sbb
test
xor
jns
pop
outsl
jno
mov
or
mov
aaa
pop
adcl
jne
jl
call
xor
jg
mov
orl
and
imul
ja
call
add
inc
xor
sti
out
jg
cltd
ret
cmp
cmp
adc
sbb
mov
and
scas
mov
out
sub
cltd
xor
js
jl
nop
mov
xchg
in
lahf
dec
fldcw
xorl
fdivrs
xor
inc
call
sub
sbb
ror
adc
or
popa
inc
sbb
mov
xchg
shlb
int
dec
jg
mov
mov
push
jns
std
inc
test
mov
mov
scas
push
mov
jae
scas
addr16
jnp
mov
aad
jp
lock
or
stos
les
sbb
pop
jbe
xchg
fsubrs
xchg
ficoml
push
ljmp
pop
fcmovne
xchg
xlat
lea
lock
stos
push
clc
jb
in
inc
or
xchg
adc
mov
in
jbe
cmp
das
push
jecxz
rcll
inc
lahf
mov
jno
mov
scas
mov
xor
adc
add
clc
cli
dec
scas
xor
les
lods
cmp
in
lock
pop
pop
cli
inc
push
outsl
xchg
push
loop
shl
cmc
push
nop
sub
test
push
add
adc
movsl
mov
cmpsb
dec
dec
sbb
lock
sahf
cmpsl
je
add
add
pop
pushw
sub
or
mov
sbb
lds
dec
fwait
cwtl
ret
xchg
xchg
repz
cmp
inc
pop
mov
push
mov
pushf
into
aas
add
sahf
sbb
test
lock
mov
jecxz
pop
and
xchg
or
jno
cmpsb
test
popl
mov
out
mov
pop
outsb
lret
aaa
enter
and
cld
mov
sub
popf
add
test
rorb
mov
imul
adc
aas
mov
add
fimuls
fists
das
or
shr
cmp
fisttpll
into
loopne
and
lea
inc
xor
mov
add
sti
movsb
xor
nop
rorb
rol
sbb
and
add
adc
or
ja
xchg
or
and
test
jbe
sahf
jo
mov
lods
js
cmp
mov
mov
cmpl
icebp
int3
mov
rcr
aas
pop
jge
xor
sub
inc
xchg
dec
or
cmpsb
jae
pop
cmpsb
stos
dec
insl
rcll
mov
sbb
push
test
mov
jl
or
push
push
xlat
jno
xchg
imul
mov
adc
pop
scas
popa
push
arpl
inc
pop
mov
lods
lret
cmp
mov
push
xorb
out
or
and
ror
mov
pcmpeqd
adcb
jb
lcall
cmp
cmpsl
stos
aam
mov
inc
aam
cwtl
cmpsb
lds
nop
aas
jmp
sub
mov
negb
dec
xor
add
lea
add
fcomi
sbb
mov
pop
jnp
sbbl
cmp
jb
popa
out
mov
aaa
adc
mov
pop
jg
and
add
adc
inc
cmp
push
lret
push
pop
push
les
jecxz
sub
aaa
jbe
pop
xchg
mov
in
arpl
push
es
jo
pop
mov
push
ja
add
and
push
add
mov
cli
test
pop
mov
add
lds
test
sbbl
int
fxch
cmpsb
mov
and
xchg
rcrl
inc
pusha
or
sarb
cmp
pop
cmpsl
sub
jnp
int3
leave
es
out
sbb
mov
fwait
jge
pop
out
push
leave
mov
repz
dec
ljmp
int
cmp
idivl
leave
xchg
adc
orps
fsubs
popf
jp
jge
enter
xchg
sbb
xchg
imul
fwait
shll
jo
dec
shll
les
mov
or
or
or
lahf
fisubrl
cmp
fmul
inc
xchg
in
rorl
cmc
lret
xchg
push
xor
mov
mov
xor
or
out
das
aas
mov
add
inc
testl
sbb
adc
repnz
loope
cmc
jno
insl
and
and
hlt
mov
lock
xor
sahf
push
cmp
jle
xchg
xchg
push
xchg
or
outsb
lea
mov
sbb
dec
pop
sbb
xchg
pop
mov
in
pop
out
leave
xchg
mov
cmp
and
xchg
movl
push
push
inc
sbb
or
fs
xor
movsl
or
mov
inc
sahf
sbb
or
inc
push
stos
pop
js
iret
insl
fdivrs
jno
sbb
pop
in
dec
dec
scas
divl
testb
dec
mov
repnz
xorl
popa
ret
cmp
pop
jmp
scas
movsb
mov
mov
lds
push
mov
xor
push
lahf
lcall
test
fs
adc
xchg
daa
bound
and
outsb
mov
dec
andb
mov
fadd
push
pushw
or
movb
loopw
repz
les
mov
push
inc
jl
std
lret
cld
roll
mov
orl
popaw
inc
jns
jle
icebp
insl
movsb
pop
sbb
test
pop
shl
test
out
mov
mov
scas
mov
pop
roll
xor
fdivl
ret
mov
scas
xor
dec
inc
add
addl
mov
inc
mov
add
sub
test
jp
insl
mov
sub
sub
sarb
int3
fisubs
cltd
out
jne
xor
xor
adc
stos
shlb
push
mov
adcb
shlb
pop
jae
ss
cmp
pop
mov
lcall
pop
sub
mov
int
sbb
lods
in
stc
fbstp
xorb
jmp
xchg
nop
jnp
lods
out
push
jo
testb
pop
cs
jno
cld
sahf
mov
xchg
fdivl
bswap
sti
push
sbb
adc
loop
xchg
addl
cmp
in
or
out
and
jne
xlat
lods
inc
nop
in
and
bound
or
sub
lret
or
loope
cmc
cs
mov
test
cwtl
test
add
outsb
mov
jl
out
insl
pop
dec
out
push
pop
adc
xchg
cmp
cld
push
mov
in
loop
push
push
xor
pop
data16
les
mov
adc
mov
ficompl
push
sub
cmp
xchg
popa
clc
add
int
cwtl
add
push
xchg
jnp
test
js
sahf
sti
push
mov
testl
jmp
ljmp
loop
fdivp
pop
stc
cmp
into
push
jp
sbb
sub
jp
inc
cwtl
push
cmpb
fistpll
mov
jae
lahf
in
rcl
cmpsb
int3
cmp
rcrl
enter
xor
mov
inc
mov
movsl
dec
jbe
aad
inc
iret
idivl
or
shll
movb
add
outsl
jmp
ljmp
gs
mov
mov
adc
mov
sahf
scas
pop
pop
imull
div
int
jg
pop
loopne
insl
or
stc
stos
fildl
sbb
ret
lock
cmp
add
outsb
cs
test
add
push
jo
inc
cld
aaa
sbb
pop
push
sub
inc
mov
dec
pop
pop
mov
mov
cld
mov
pop
sub
cwtl
ret
sbb
lret
subl
push
lahf
jo
adc
cli
lea
fwait
xchg
jae
shlb
fimull
rcr
test
push
int
mov
test
in
jno
dec
repnz
mov
popa
repz
lock
push
pop
inc
sti
add
push
adc
mulb
aam
movsb
in
mov
xor
jmp
jne
and
push
cld
clc
sti
fcoms
push
insb
and
pop
loopne
sbb
daa
inc
add
mov
xor
inc
dec
lock
ret
scas
jne
sti
movl
std
stos
movsb
dec
cmp
xor
push
fldenv
or
stos
push
dec
js
and
hlt
in
mov
cmp
loopne
fptan
ds
push
ud1
iret
insl
pop
mov
movsb
inc
pusha
sahf
mov
push
mov
jne
hlt
sub
popf
pop
shl
cld
out
stos
adc
mov
repz
xchg
cli
dec
stc
adc
scas
lcall
mov
mov
dec
adc
push
mov
mov
cmp
fs
or
test
jnp
dec
lcall
cmp
sti
jmp
ud0
sbb
inc
mov
fisttpll
adcb
xlat
inc
sub
fidivrs
xor
out
es
mov
pushf
mov
cmp
sarb
int
fcomps
ret
mov
mov
mov
cltd
out
leave
jno
xchg
add
and
daa
xchg
bound
sub
es
in
imul
mov
test
sub
add
xchg
push
imul
inc
sbb
out
cmpb
push
test
mov
cmpsb
jl
popa
mov
mov
enter
lock
push
add
dec
adc
mov
xor
push
jge
jl
mov
push
data16
in
cmp
pop
arpl
or
jge
shll
adc
test
dec
mov
in
dec
outsl
popf
cli
mov
pop
into
jne
in
push
aad
mov
pop
mov
dec
mov
xor
jl
add
idivb
fwait
punpcklwd
sbb
and
fsubrl
adc
incb
inc
sub
mov
mov
inc
sbb
into
xor
movsl
mov
nop
leave
out
mov
and
outsb
cli
mull
dec
icebp
out
push
mov
pop
into
add
jmp
add
xchg
adcl
cmpsl
fs
ljmp
je
xchg
addr16
fisttpl
lret
imul
jbe
lcall
sbb
mov
xor
aam
addr16
jae
hlt
cmc
outsb
rorb
jnp
out
nop
mov
stos
sub
push
jnp
inc
pop
mov
xor
lret
mov
ja
lret
adc
jle
adcl
push
pushf
jne
xor
aas
mov
push
or
sahf
ss
ret
cli
daa
cmpsb
filds
ja
inc
pushf
sub
fidivs
lret
dec
inc
or
jbe
dec
scas
fsubs
mov
call
mov
fmull
call
cmp
lods
inc
inc
dec
nop
cwtl
xor
cmpsl
mov
mov
xor
call
add
pop
push
push
aad
out
inc
push
in
ljmp
jge
jp
adc
xor
dec
xor
test
mov
rcrb
loopne
or
adc
adcb
out
loope
push
fisttpll
inc
andb
icebp
pop
in
in
shll
and
pop
xchg
dec
cltd
movsl
xchg
mov
mull
push
dec
popf
rcrl
mov
lods
imul
mov
mov
xchg
jl
cmp
inc
push
sub
mov
xor
fs
cmp
jge
movsl
xchg
jg
roll
xchg
jecxz
gs
shrl
pop
inc
xchg
sub
xchg
in
mov
mov
pop
mov
movsb
lret
shlb
mov
mov
cmp
aam
lea
out
mov
sti
jge
sbb
mov
popf
mov
mov
sub
loopne
mov
pop
nop
mov
sti
cmp
ret
dec
lret
pop
insl
jmp
call
add
push
jo
sbb
sarb
test
stos
cmpsl
mov
adc
ret
push
mulb
mov
mov
es
or
stos
dec
scas
scas
pushf
jmp
fsubrs
push
jle
sub
lods
sbb
mov
jb
mov
lret
stc
das
sbb
sbb
jg
movsl
lcall
repnz
loopne
scas
sahf
adc
xchg
mov
push
mov
pop
or
jp
mov
ja
cmp
mov
loop
cmp
mov
int
into
sub
jle
pop
incl
shll
push
call
and
fdivp
add
js
jne
inc
mov
cmp
subb
sub
and
mov
bound
xchg
insl
dec
sbb
aas
insb
adc
outsb
rcr
jb
lock
push
jns
mov
lea
push
add
pusha
fstpt
sub
and
sbb
addr16
addr16
and
xchg
xor
inc
pusha
rcrb
arpl
adc
cltd
pop
mov
into
std
out
ds
pop
xor
mov
dec
in
and
inc
jno
and
push
and
ret
addr16
ss
stos
jge
mov
inc
int
mov
lret
dec
ds
in
xchg
in
push
int3
mov
mov
in
enter
mov
cmp
and
add
int
xor
pop
xchg
jo
push
in
cld
xor
dec
pushf
arpl
xor
push
jg
imul
fwait
aad
mov
ficoml
iret
xchg
adc
adc
arpl
imul
pop
jp
stos
cmpsl
cmp
pop
pop
lret
adc
call
insb
pop
popa
push
dec
jo
xchg
jle
sub
jle
movsb
movsl
mov
jbe
mov
mov
testb
scas
mov
jmp
fldt
xchg
dec
xchg
push
add
std
add
repnz
sub
xchg
adcl
arpl
scas
jge
add
mov
std
mov
dec
pop
push
std
pop
and
inc
iret
divb
ficoml
insb
adc
push
inc
push
cmp
shlb
repz
add
push
jg
mov
push
adc
je
sub
lods
cs
jbe
dec
and
jb
xchg
int3
repnz
popf
adc
jg
sub
icebp
mov
mov
lret
sbb
jnp
cli
orb
jbe
std
mov
mov
cs
lret
je
out
ljmp
fmuls
clc
push
insl
adc
shlb
ss
dec
mov
push
scas
popf
pop
cltd
pop
cmc
setae
shrb
stc
inc
ss
out
fidivrl
hlt
cmpsb
adc
sub
sbb
pushl
stos
cld
add
in
mov
pop
cwtl
pop
insl
aaa
repnz
sbb
popa
mov
mov
movsb
in
mov
leave
lea
and
pop
xchg
xchg
xchg
ret
daa
in
ret
add
push
mov
gs
sub
notl
into
pop
push
loop
add
cmp
cwtl
leave
fldenv
sub
stc
ss
pop
ds
outsl
mov
or
cmp
adc
push
cmp
call
jle
stos
ret
inc
and
and
stos
daa
push
mov
cmc
xchg
jl
mov
pushf
dec
out
movsl
test
scas
inc
inc
push
out
repz
sub
xchg
add
xchg
ficoms
jp
push
in
and
dec
imul
aad
inc
adc
mov
subl
mov
minps
in
lds
ficompl
hlt
push
lret
add
imul
fwait
add
inc
mulb
hlt
js
mov
adc
fistps
dec
dec
lretw
xchg
fidivl
cld
dec
loop
pop
icebp
hlt
xor
mov
or
nop
cmp
pop
and
dec
mov
adc
mov
cmpsb
lahf
popaw
cmp
pop
lret
neg
rol
sub
movb
jecxz
sahf
loopne
std
ret
pop
xchg
popa
jb
pop
iret
xor
icebp
adc
call
cmpl
lds
mov
sbb
int
jecxz
rol
shr
xchg
test
add
mov
aad
std
xchg
sbbb
mov
push
mov
and
mov
fimuls
mov
in
fwait
das
xchg
xchg
sub
cs
or
loopne
add
std
into
test
cmp
mov
lcall
pop
fwait
mov
jmp
xchg
cltd
cld
mov
xor
lahf
pop
stos
mov
stos
pop
repnz
xor
jl
lcall
add
inc
outsb
sar
fcomi
inc
ljmp
movsb
ja
insb
sbb
cmp
repnz
jmp
js
mov
cwtl
pop
push
mov
fwait
loope
cmp
test
and
or
repnz
jl
mov
mov
cmp
test
adc
mov
xor
ljmp
pop
cmc
jb
mov
add
fldcw
ret
xor
mov
pushf
int3
sub
adc
fwait
es
pop
nop
int
sub
push
pop
xor
xor
pusha
push
and
test
test
cmp
mov
jo
adc
je
pusha
das
rorl
fbstp
mov
daa
subb
and
and
and
stos
dec
sbb
inc
out
xchg
push
rcl
enter
and
mov
pop
fdivl
sub
xchg
inc
into
call
imul
insb
xchg
stos
aaa
notb
cmc
ror
test
mov
mov
lret
ja
iret
in
sub
jns
xchg
jmp
lds
dec
out
inc
bound
pop
sti
mov
fcoml
xchg
and
sbb
mov
inc
sti
test
xlat
or
push
loop
jmp
fcoms
push
sbb
jmp
dec
loopnew
add
xchg
aaa
and
out
push
pop
adc
lods
mov
xor
outsb
sti
push
ja
pop
dec
jnp
dec
jecxz
mov
test
jle
or
add
add
clc
mov
leave
xchg
pop
sub
pop
pop
or
scas
imul
push
iret
out
movsb
mov
lret
xor
xchg
pop
loop
sbb
cli
mov
mov
cmpsb
popa
xchg
fwait
sti
inc
adc
mov
sub
jmp
call
test
add
fistl
push
mov
andb
lock
inc
repnz
add
pop
jnp
outsb
dec
in
xchg
imul
std
mov
pop
test
lds
out
shrl
cs
orl
mov
sub
or
inc
push
ffreep
mov
pop
jle
dec
dec
cmp
orl
sbb
lods
sbb
test
add
addl
jecxz
lret
adc
or
fwait
mov
mov
push
jnp
jne
test
inc
inc
or
test
clc
aas
pop
fsub
test
pop
adc
int
addr16
pop
vzeroupper
int3
out
iret
lahf
bound
cmc
hlt
call
out
call
cmp
push
rorb
repnz
icebp
insl
push
adc
inc
imul
sub
shrb
repz
lret
jecxz
mov
add
mov
push
xor
or
stc
es
add
fiadds
in
xchg
xchg
hlt
lds
icebp
dec
pop
hlt
mov
inc
cld
cli
pop
xrelease
sub
shlb
mov
jo
test
hlt
push
fcoml
sahf
je
push
pop
pop
jp
jne
ret
sti
mov
sbb
jnp
rclb
or
fld
pop
pop
fwait
jbe
pop
pop
lret
adc
out
xor
sub
push
mov
push
mov
sti
inc
leave
pop
xchg
mov
movsb
daa
jge
cld
jae
cmp
push
xchg
inc
sub
push
dec
ret
sbb
into
out
and
incl
mov
into
arpl
jno
test
and
cmpsl
lahf
jno
push
mov
je
jb
jmp
sbb
aas
outsb
jg
jbe
nop
shll
jb
sbb
mov
sahf
lret
icebp
adc
cld
jle
sub
lret
or
xchg
pop
mov
jo
mov
scas
ret
push
push
or
scas
pop
int
push
pop
ljmp
scas
push
mov
es
inc
js
adc
xchg
xor
dec
cld
jo
or
mov
lods
out
hlt
adc
je
call
cmp
lock
add
mov
push
pop
xchg
rcrl
cmp
jle
push
xor
pop
mov
cmc
mov
pop
cmp
icebp
sub
or
sti
out
data16
add
xchg
adc
and
rcrb
xchg
repnz
daa
cltd
into
sbb
pop
stos
out
cmpsb
sbb
jg
xlat
nop
idivb
in
call
out
sbb
adc
int
jb
fisubrl
add
movsb
lock
pushl
sti
aam
jmp
es
test
je
sub
and
add
icebp
mov
push
std
lret
outsb
lods
fcoms
xchg
xor
orb
adc
jb
xchg
jg
xorl
scas
mov
and
stc
mov
mulb
jle
unpcklps
push
lods
fidivrs
mov
pop
xchg
xchg
jae
xchg
or
adc
pop
mov
dec
mov
les
mov
push
test
insl
push
pop
sub
mov
sbb
dec
mov
mov
inc
mov
add
sbb
ret
repnz
stos
mov
sahf
jae
sub
insl
xchg
adc
insl
inc
test
negl
iret
daa
es
lcall
and
or
mov
mov
adc
add
out
repz
mov
repnz
mov
clc
in
in
pop
into
cmpsb
adc
pusha
je
bound
inc
and
rcrl
push
add
std
mov
mov
bound
ds
imul
sbb
mov
inc
add
jge
add
sahf
push
rolb
jmp
shr
nop
mov
jo
add
mov
ret
clc
ss
ds
cmp
xchg
insl
xor
dec
iret
mov
add
push
jg
mov
cmp
dec
ds
lahf
mov
repnz
jecxz
call
xchg
xchg
adc
ja
cli
pop
sbbb
sar
mov
cmp
jb
inc
sbb
sub
adc
imul
clc
shlb
pop
bound
cmpsl
mov
loope
ret
pop
je
jae
xlat
rolb
addr16
lock
bound
int
pop
cli
fnstsw
fs
fsubp
xor
cwtl
sbb
ja
out
ror
stos
in
mov
fs
adc
dec
aaa
jae
add
add
ds
jmp
pop
mov
xchg
movsl
cmp
and
jbe
jo
out
adc
adc
mov
gs
loopne
pop
add
push
cmp
jbe
add
xchg
sub
divb
mov
lcall
mov
sarb
in
imul
xchg
push
out
xchg
adcb
sub
adc
fildll
in
sbb
xor
push
test
imul
pop
fcmove
mov
cs
mov
bound
lret
ficoml
add
ss
std
xchg
or
push
pop
frstor
adc
mov
mov
pop
stos
xchg
xchg
mov
das
stos
aam
mov
lret
cld
pop
mov
stos
lds
inc
sbb
xchg
movsl
jo
enter
sti
mov
in
mov
sub
std
mov
pop
cmpb
ljmp
sub
daa
or
jge
mov
xchg
sub
loopne
jp
dec
lods
adc
or
test
cmp
pusha
pop
mov
adc
jmp
mov
cmp
repz
mov
pushf
dec
adc
add
and
shl
and
inc
xchg
stos
loopne
frstor
out
aad
dec
cmp
dec
sahf
push
push
cwtl
loope
sbb
add
repnz
jnp
lret
cmp
call
mov
cmp
in
into
sub
pop
enter
add
pop
push
cmp
aam
adc
rcll
stos
mov
imul
mov
insb
cmp
dec
call
das
adc
jne
mov
shll
enter
pop
dec
lea
and
jl
mull
das
jns
int
jecxz
fucomi
fld
ja
imul
adc
xchg
or
ljmp
xchg
aad
negl
into
std
mov
cld
mov
test
mov
pop
popa
xor
dec
repz
std
adc
icebp
popl
adc
outsl
cs
orl
mov
dec
bound
jae
fists
cmp
mov
out
cmpsl
adc
lock
fcmovnb
mov
icebp
xor
add
shrl
xlat
and
mov
insl
pop
outsl
bound
sub
out
xchg
mov
clc
xor
sahf
mov
inc
cs
xor
rclb
or
cwtl
inc
icebp
mov
loopne
rcrb
inc
sbb
xchg
lock
sub
bound
push
fwait
jl
xchg
stos
mov
sbb
jb
cmp
adc
adcb
fcomps
cmpsb
loope
fildll
stos
in
mov
aas
scas
or
repz
es
cmp
js
fs
dec
popa
sbb
mov
test
cmp
aas
in
jge
jp
ljmp
stos
into
mov
cwtl
push
stos
cmp
push
cltd
pop
lahf
movsl
pop
add
bound
xor
or
xchg
pop
push
xor
cmpsb
fldt
outsl
xor
stc
pusha
pop
clc
das
sbbl
mov
jb
dec
push
jmp
popf
or
stc
rcrl
repnz
mov
adc
xchg
mov
mov
sbb
imull
or
fisubs
daa
sub
sbb
or
push
loope
push
xchg
iret
inc
out
or
pop
daa
add
shll
mov
or
stos
cmp
repz
lds
loop
jnp
mov
push
adc
and
and
jge
je
lock
movsl
inc
repnz
imul
loopne
push
cmp
inc
negl
jmp
jmp
cltd
jp
scas
pop
push
pusha
lcall
mov
lea
dec
aas
bound
cwtl
sbb
cmpsl
nop
int3
mov
bound
push
xchg
lock
inc
insl
test
xchg
leave
mov
ss
lret
rolb
cmp
jp
out
mov
jp
dec
add
sub
adc
xor
int
adc
and
inc
and
movsl
test
jl
int3
cmp
mov
insb
int
push
int3
xchg
jmp
call
cwtl
inc
js
sbb
gs
movsl
cmpsl
addb
push
mov
popa
mov
shlb
lahf
cmp
xchg
mov
xor
cmc
fadds
mov
pop
ficoms
aam
push
lahf
shl
adc
lahf
mov
pop
int3
movsb
js
cli
shl
rclb
lock
jnp
test
sub
sbb
cld
sub
add
jns
push
jmp
xlat
in
std
lcall
or
scas
cmp
and
pop
sbb
pop
sub
in
xor
dec
es
repnz
cmpsl
mov
adc
push
lret
wrmsr
loop
xor
hlt
or
add
or
dec
shlb
andl
imul
jmp
push
pop
inc
je
mov
lods
out
mov
adc
push
pop
inc
int
mov
mov
in
loope
mov
icebp
cwtl
push
lods
xlat
iret
pop
scas
jecxz
jb
orb
imul
es
inc
pop
pop
jbe
xchg
pop
mov
fiadds
aad
fs
shl
popf
ret
push
in
mov
cli
in
pop
mov
shll
arpl
or
pop
mov
pop
xchg
mov
or
mov
es
sar
lea
or
orl
les
dec
fldenv
xor
nop
fdivp
mov
lcall
mov
adcb
push
pusha
mov
jnp
inc
mov
mull
add
push
push
leave
call
and
inc
mov
sub
xchg
mov
xor
inc
dec
xor
xchg
ja
inc
aam
arpl
lret
xchg
fs
out
jnp
inc
pop
push
or
inc
pop
jmp
sub
lret
xchg
mov
jnp
in
js
in
mov
mov
fs
xchg
les
into
addr16
pop
sub
jp
mov
push
jno
rclb
in
in
cmc
sub
xlat
xchg
inc
sti
sub
xchg
lods
jp
pop
sub
lds
mov
or
cwtl
out
push
sub
pop
repnz
loop
fcmovbe
xor
and
mov
enter
sti
pop
and
rclb
jns
ret
inc
ljmp
jmp
mov
out
fcmovb
xchg
stos
push
outsl
loopne
fistps
push
mov
xchg
enter
xchg
cmpsb
test
lods
out
and
push
mov
mov
addr16
loopne
pop
int3
aam
pop
inc
sti
and
stos
jns
pushf
repz
enter
fistl
sbb
gs
mov
or
xchg
cmp
jno
aad
notb
inc
scas
sub
cltd
popf
in
pop
mov
scas
mov
push
jmp
or
adc
insl
mov
subb
push
jmp
pushf
das
or
cmp
cld
push
imul
or
sub
testb
jge
jne
lea
outsl
push
ljmp
in
push
lock
hlt
sub
arpl
xlat
inc
cld
aas
sbb
testl
pop
std
in
push
outsb
std
jg
nop
and
cmp
popa
jp
outsb
xchg
out
cmpb
clc
pop
jne
mov
fs
adc
cs
fmuls
fnstenv
lods
decl
mov
testb
push
mov
pop
inc
fistps
test
gs
leave
int
add
ljmp
das
jbe
xchg
xchg
out
outsb
enter
xor
mov
mov
inc
std
push
pop
neg
out
fcomps
dec
imul
negb
imul
pushf
dec
push
outsb
fcmovbe
mov
lahf
sub
pushf
cmp
jmp
outsl
xor
push
pop
enter
ljmp
add
jnp
fcmovnb
call
dec
mov
add
sub
sub
jbe
inc
adc
sub
mulb
mov
adc
adc
jp
push
mov
pop
loope
inc
stos
jmp
add
iret
das
into
mov
and
mov
inc
cmp
mov
iret
pusha
jno
cmp
sub
jl
out
cli
push
jp
notl
shl
testl
jo
mov
xchg
js
adc
fadds
mov
fs
xchg
mov
shll
and
test
frstor
cmp
dec
jbe
jns
daa
fwait
push
mov
add
xchg
jnp
xor
stos
xchg
loopne
push
xor
push
mov
dec
inc
pop
inc
push
movsb
pop
pop
aam
adc
mov
das
int3
xchg
lret
outsl
mov
sub
mov
push
arpl
mov
sub
dec
sbb
sub
imull
je
shlb
xchg
adc
insb
cs
pop
lock
dec
pusha
pushf
jne
push
mov
mov
push
mov
xchg
jns
xchg
cltd
pop
faddp
mov
fcoms
negb
out
outsb
sub
add
rcrb
fsubrs
or
xor
xchg
imull
aad
inc
jo
fimull
inc
mov
xor
data16
mov
sbb
pop
loop
in
or
int
int
insl
mov
rcll
adc
cltd
sbb
data16
xor
pop
jno
stc
xchg
dec
mov
jne
imul
test
shll
dec
pusha
and
xchg
dec
scas
adc
stos
lret
mov
cmpsl
pop
fwait
jne
addb
sub
sbb
out
fistl
push
push
add
lods
in
adc
push
clc
add
pop
pop
jne
jnp
pop
leave
mov
pushf
jae
inc
mov
pop
imulb
mov
notl
xchg
mov
cmpsl
cmc
mov
iret
out
mov
cmc
pop
addr16
sub
dec
cmp
xor
xlat
jmp
adc
mov
add
and
cmp
xchg
dec
xor
repz
mov
repnz
cmp
pop
lds
push
push
and
mov
sub
gs
and
mov
in
and
sub
jmp
sub
jo
push
icebp
inc
in
aad
mov
mov
dec
sbb
mov
ds
mov
clc
addr16
cwtl
lret
ret
and
push
jnp
mov
mov
imul
sub
jp
push
pop
idivb
mov
cli
das
xlat
dec
cwtl
arpl
adc
roll
cwtl
out
sub
stc
outsb
and
popa
pop
mov
mov
std
enter
gs
mov
mov
shll
ss
std
imull
mov
call
and
jg
and
cmp
fwait
sarb
add
push
and
cwtl
pop
out
cmp
mov
jp
scas
pushf
xchg
add
mov
cmp
push
push
add
dec
clc
imul
pop
mov
cs
insl
or
xchg
js
sbb
je
mov
insl
shlb
repnz
js
in
or
aad
push
sub
push
mov
or
fistl
push
das
cmp
insl
cmc
push
pusha
cltd
sbb
mov
adc
insb
mov
add
mov
arpl
enter
aas
mov
fistpll
paddd
mov
insl
mov
xlat
dec
and
movsl
xchg
aas
dec
mov
mov
in
add
addl
lret
gs
pop
jmp
es
fcmovb
mov
insb
jae
push
cmp
xchg
aaa
jge
adc
into
lahf
mov
out
xorb
bound
gs
int3
andl
xchg
inc
inc
fcom
clc
dec
fadd
sub
decl
or
sbb
sub
mov
push
mov
sub
pop
add
add
push
movsl
adc
lea
cmp
negb
push
insl
sub
fiaddl
lret
lods
dec
adc
filds
cmp
pop
fs
cmpsb
cmp
mov
outsl
mov
stos
push
mov
iret
outsb
pop
push
push
daa
scas
cmp
push
andb
mov
jb
dec
cmpsl
fs
push
cmp
and
inc
es
cmp
and
movsb
jecxz
jo
shrb
inc
xchg
data16
enter
xchg
lods
mov
mov
sub
xchg
xchg
push
inc
cmpsl
test
test
sti
cmpsb
mov
popf
inc
push
test
aas
test
mov
add
lock
dec
cmpsl
stos
testl
and
adcb
fwait
in
pop
clc
int
incl
pcmpgtw
push
clc
lahf
arpl
inc
repnz
aam
xor
xorb
pop
fwait
jmp
mov
add
ljmp
cmpb
pop
sbbl
rcrl
sub
pop
into
insb
fs
cvtps2pd
sti
push
lcall
xor
adc
xchg
aam
jns
push
add
and
pop
xchg
push
cmpl
mov
mov
rcrb
shl
imul
and
aaa
xchg
adc
out
sti
add
jmp
iret
test
dec
pop
sbb
das
mov
pop
jp
add
dec
scas
das
xor
add
mov
insl
in
je
add
push
cmpsb
sbb
fnstcw
mov
and
lods
jecxz
inc
fwait
mulb
cmp
mov
bnd
and
ljmp
cwtl
ret
and
and
mov
movb
lock
mov
inc
or
or
or
outsb
mov
out
xchg
xchg
lock
ret
push
mov
inc
and
ljmp
inc
xchg
sbb
aam
aas
test
xchg
pop
mov
pop
xor
xor
or
mov
mov
sahf
jne
pushf
fs
dec
jnp
pop
sti
outsl
jl
xor
rcrb
pop
pop
cld
or
pop
scas
inc
jno
loope
aaa
clc
lea
js
fcmovnbe
jbe
cmpsl
jno
fs
mov
inc
fsubrp
cltd
xor
nop
push
fldt
lods
sub
fwait
sahf
inc
loop
aad
addb
xor
jnp
pop
stos
insb
js
xor
mov
imul
idivl
cmpsb
xchg
stos
pop
popf
and
rclb
hlt
cmp
outsb
or
push
cmp
lods
sub
mov
mov
or
sbb
les
dec
out
push
dec
mov
movsb
xlat
cld
aas
incb
xchg
and
inc
mov
inc
jnp
pop
xchg
rcrb
int3
imul
or
sbb
dec
mov
adc
stos
mov
or
je
xor
jecxz
add
cmpsb
mov
adc
es
fnstsw
adc
push
out
jnp
push
push
ds
sbb
sub
inc
sti
sbb
inc
jl
pop
stos
fbld
xorb
sbb
xor
fadds
test
ja
out
shll
lea
xor
pop
xchg
test
mov
aaa
cltd
sub
pop
shll
jne
or
ror
out
in
imul
xchg
lods
jb
filds
dec
adc
jmp
jecxz
in
cmp
pop
mov
mov
fldl
fadd
rclb
es
jb
adc
jo
cwtl
repnz
cwtl
in
lods
xchg
pushf
push
dec
ffreep
push
stc
xor
jbe
popf
pusha
pop
xor
cmp
inc
scas
inc
jmp
idivl
xchg
ds
or
fs
jns
scas
xchg
sbb
lea
insl
mov
jae
jne
xchg
xchg
pusha
push
dec
jmp
mov
scas
mov
inc
adcl
xor
sub
pinsrw
cmp
and
sbb
cwtl
jnp
jne
popf
xchg
inc
push
mov
mov
repz
xchg
cmp
sub
in
mulb
movsb
adc
pop
pop
and
xor
cmc
fistpll
jmp
clc
outsl
dec
mov
leave
cmc
cltd
sbb
cmp
cmp
jno
mov
outsl
mov
sahf
mov
lret
icebp
lods
leave
lds
sub
cmp
movsl
leave
cmp
and
in
sbb
int3
jo
lahf
test
or
outsb
cmp
mov
fldenv
push
lods
cmp
icebp
xchg
fwait
push
rolb
jle
and
pop
sarl
push
stos
mov
lcall
test
sub
stos
pushf
pusha
scas
sub
jo
rcrb
inc
ficompl
or
sub
mov
and
in
mov
in
jno
adc
divl
loop
shll
hlt
js
jb
push
sub
or
out
sti
xchg
sub
xchg
mov
pop
daa
stc
sbb
adc
leave
mov
inc
test
sar
xchg
mov
inc
mov
in
adc
movsl
sti
fidivs
mov
xor
and
add
push
leave
sahf
mov
mov
test
into
and
les
fadd
cld
push
mov
inc
ja
add
jb
sbb
imul
and
adc
subl
mov
xchg
repz
push
or
pop
mov
cwtl
or
xchg
scas
xchg
jp
add
inc
cmc
and
mov
pop
out
mov
stos
push
out
mov
ja
popa
and
div
pop
adc
push
push
fcoms
push
mov
add
add
push
nop
sub
pop
fsubrl
pop
rorb
lods
hlt
inc
add
dec
xor
iret
loope
pop
aaa
popa
dec
and
je
outsb
adc
mov
dec
jo
cli
negb
fnstcw
mov
cmpsl
loop
ja
jo
adc
cmp
dec
xor
xchg
pop
inc
jae
out
mov
mov
mov
push
int
out
stos
test
mov
outsb
mov
inc
enter
popw
mov
sbb
xor
pusha
cwtl
outsb
xor
pop
stos
mov
mov
and
push
xchg
pushf
cmpsl
add
mov
fildll
push
out
sbb
dec
mov
xor
negl
mov
adc
rorb
insl
add
sub
and
fcmovnu
xor
fimull
loopne
cmpsb
sbb
sbb
adc
pop
fistpll
mov
xchg
xor
fimull
sbb
mov
push
sbb
mov
out
xchg
repz
loopne
ss
ljmp
adc
mov
outsl
loop
push
fidivrs
addr16
mov
insb
add
jecxz
jns
xchg
daa
cltd
popf
fsubs
ss
das
daa
pop
push
addr16
fistpll
pop
push
pop
sbb
mov
setle
int3
push
cmpsb
fimuls
pop
adc
push
nop
jae
loopne
mov
sub
cmp
pop
test
inc
or
loope
fstl
popf
mov
pop
dec
and
shr
je
sbb
ja
push
mov
imul
inc
cmp
andb
pop
push
aad
scas
pushf
xchg
arpl
aaa
out
iret
xchg
inc
cwtl
pusha
add
push
adc
adc
aaa
xchg
push
ja
mov
add
les
and
enter
aaa
pop
cmp
add
add
stos
ret
int
mov
jg
push
roll
dec
je
or
jmp
and
rcrl
lods
shrl
push
or
loope
mov
and
call
cmp
jo
mov
pop
mov
jne
dec
ja
xchg
xor
xchg
out
pop
push
and
in
mov
mov
outsl
aaa
adc
das
add
dec
loop
addl
pop
sub
lock
add
enter
scas
lahf
hlt
mul
outsb
mov
nop
add
jne
cmp
lds
or
mov
push
add
mov
xchg
cmovg
xchg
cwtl
adc
mov
dec
sbb
subl
or
mov
xchg
lcall
clc
inc
mov
add
cmpsl
in
lret
jbe
adc
inc
ja
sbb
push
fsts
cld
dec
pop
dec
push
adc
adc
arpl
pop
jno
psrld
and
in
scas
inc
xor
xchg
adc
shl
out
mov
jno
xchg
xchg
dec
cmpsl
mov
orb
cmp
daa
pop
xorl
out
outsl
std
cmp
pop
in
jg
pushf
enter
jl
cmp
mov
and
push
aam
push
movsb
xchg
loop
xchg
jnp
leave
push
popa
inc
or
mov
fstpt
adc
movsb
cwtl
xor
pop
icebp
xchg
insl
cli
or
test
insb
xchg
loopne
cmp
push
mov
add
xchg
lds
lahf
dec
xchg
stos
xor
repnz
sbb
loopne
sub
jecxz
xchg
mov
data16
mov
and
into
ljmp
unpckhps
lods
pop
imul
xgetbv
je
jmp
lods
sub
mov
cmp
adc
mov
mov
xor
rol
add
jbe
sbb
cmpb
icebp
cmp
inc
ret
and
nop
mov
mov
adc
fmuls
push
or
fcomps
inc
cli
gs
loopne
out
adc
dec
fiadds
dec
jmp
or
xchg
push
shll
jb
cmp
cmc
jno
popf
push
lods
push
xchg
sbb
pop
cmpsl
shl
jl
mov
cltd
xor
test
xchg
mov
lret
into
subl
push
js
rcrb
sub
xlat
lds
or
push
iret
pop
xor
xchg
xorb
stos
rcrl
aas
add
sarl
lcall
mov
and
pop
mov
mov
lcall
sub
xchg
mov
or
sub
sub
push
xor
inc
int3
stc
cli
xchg
mov
sub
arpl
dec
dec
mov
leave
out
fwait
repz
addr16
ficomps
ss
jmp
in
arpl
pushf
es
pop
mov
aam
mov
je
cmp
rclb
jno
lahf
dec
mov
and
gs
loop
push
and
fnstenv
stc
cld
fisttpll
mov
adc
jg
adc
popa
stos
mov
add
sub
add
daa
adc
xchg
cmc
push
cmp
jno
andb
loope
rcll
das
lods
lcall
jo
std
cmp
dec
mov
lods
and
push
push
dec
clc
mov
xor
in
xlat
sub
jb
enter
cmc
push
sub
mov
mov
lcall
xchg
push
lea
xor
mov
push
repz
push
cmp
mov
lods
cli
xor
clc
imul
sbb
ljmp
dec
mov
push
ljmp
mov
test
popf
sbb
xor
inc
rclb
ljmp
and
sub
ss
ds
xor
push
mov
add
adc
xor
xor
xor
push
inc
pop
xor
sub
xor
mov
add
mov
jb
add
aam
pusha
sub
outsb
xor
leave
imulb
sub
daa
orl
inc
pop
popf
jo
je
adc
push
lock
cmp
and
push
or
adc
jp
clc
add
int
pushl
stos
mov
cmp
cmp
mov
xchg
test
stos
mov
mov
xchg
test
sub
mov
add
fmull
pop
cmp
shl
sahf
int3
negl
popf
cmp
sub
test
xor
mov
in
inc
fimull
lds
leave
test
pushf
cmpsl
sub
jbe
cld
out
add
test
sar
fs
jne
xchg
push
push
dec
sti
mov
pop
or
inc
addb
data16
add
icebp
sbb
or
jmp
jp
fwait
sub
or
fcom
lock
mov
enter
les
fcomps
daa
mov
pop
je
divb
or
lds
or
lret
and
loope
add
xchg
jnp
xchg
lret
xchg
mov
and
stc
sub
xorb
stos
test
call
jb
xchg
ds
hlt
insb
push
aad
iret
add
pop
cmp
pop
cmp
xlat
sub
std
jnp
cmp
pop
outsb
mov
fnstcw
adc
into
repnz
inc
loope
cmpsb
scas
js
imul
je
in
fisubrs
in
pop
push
sbb
lret
dec
inc
mov
into
fdivrs
lods
push
ljmp
mov
jns
insl
add
rcrb
cmp
adc
in
out
jns
xchg
test
cmp
and
faddl
roll
xchg
push
xor
fdivrs
nop
sub
insb
insb
xor
xchg
mov
scas
stos
mov
adc
sbb
jnp
sub
popa
or
jns
push
pushf
sbb
push
jmp
lods
in
sub
xchg
cli
push
push
hlt
fwait
inc
das
insb
sar
or
add
test
adc
jmp
lcall
xor
fcomps
leave
push
fsts
cmpl
cmpsl
adc
inc
push
jg
and
cmp
jno
jmp
adc
sarb
inc
popa
mov
jecxz
pop
or
add
loopne
mov
lahf
lds
add
jb
mov
mov
inc
cmp
push
jnp
aad
shlb
add
stos
push
adc
jbe
repz
lock
bound
adc
iret
mov
pop
push
std
mov
push
repnz
jle
and
dec
js
xchg
xchg
adcl
icebp
pop
aaa
arpl
or
xchg
jno
lcall
mov
ja
rorl
mov
mov
ds
xchg
jnp
sub
faddl
inc
sub
sbb
popf
dec
inc
rolb
mov
addr16
and
inc
push
test
mov
xor
mov
add
mov
adc
jle
lods
cs
bound
sub
inc
rorb
aad
cmp
sbb
inc
je
cli
inc
repnz
arpl
out
je
xchg
mov
adc
mov
imul
pop
fldcw
push
xchg
test
mov
cmp
or
pusha
mov
outsl
sbb
jge
add
fcompl
dec
lea
pop
jb
add
push
inc
mov
repnz
stos
insl
or
pop
in
pop
push
jmp
push
pop
jle
mov
adc
lds
das
or
jmp
gs
fisttpll
dec
xchg
push
sbb
add
xchg
bound
sub
rclb
call
and
cmp
push
mov
sbb
insb
bound
sbbl
and
pusha
das
mov
and
adc
add
pushf
or
ljmp
in
call
sti
add
loope
cmpb
xchg
cmp
cmpsb
out
xlat
jmp
push
out
stos
mov
push
inc
fs
cltd
hlt
pusha
std
aaa
imul
out
or
dec
push
jae
jbe
mov
cmpsl
fisttpl
mov
cmp
in
sbb
add
shll
xchg
test
cmp
movsb
outsb
mov
dec
add
sub
rdmsr
mov
lods
cmp
pushf
stc
mov
repz
icebp
mov
mov
pop
sub
xor
or
movsb
sarb
mov
rcrl
jns
jne
jmp
ljmp
mov
popf
repnz
sbb
mov
inc
xor
cs
leave
xor
loope
inc
mov
push
pusha
dec
lcall
pop
int3
jp
adc
jg
das
push
sub
mov
sbb
repz
mov
cld
test
ficoml
adc
sub
sbb
shl
ja
stos
jmp
adc
aad
and
shlb
fistl
push
inc
mov
push
test
jnp
sbb
sbb
jno
mov
jg
out
sti
jns
enter
sbb
arpl
sub
lret
insl
mov
jp
push
fwait
jl
adc
add
cli
or
mov
les
inc
sub
push
xchg
int
push
push
out
mov
jno
pop
inc
shlb
scas
adc
mov
cmpl
mov
lret
bound
and
or
push
fadds
mov
ss
rcll
fsub
sahf
std
inc
imul
ljmp
loop
imul
insb
faddl
mov
negb
mov
lods
ljmp
das
jle
pop
cmp
frstor
cmp
xchg
mov
jno
inc
pushf
pushw
inc
mov
movsl
ror
clc
jecxz
jge
sbb
xor
jmp
cltd
out
sub
cmp
xor
stc
add
adc
mov
sahf
js
xor
jge
idivb
clc
push
jecxz
aad
popa
xor
cmc
stc
cmp
mov
jg
stos
addr16
adc
adc
jge
adc
movsl
sahf
xchg
cld
rclb
faddp
push
cmpsb
test
xlat
lahf
and
jge
xchg
inc
cmp
mov
nop
mov
es
dec
mov
rcrb
ss
test
pop
pop
rclb
in
insb
xor
cmp
jmp
mov
outsl
ret
imul
pop
sub
daa
shlb
adc
js
add
dec
mull
dec
mov
sbb
mov
jle
inc
fldcw
add
sbb
jg
nop
clc
dec
rolb
int
mov
push
and
or
adc
ja
xchg
adcb
xor
cmp
lea
sbb
mov
cmp
sti
jle
sub
stc
es
leave
mov
sbb
mov
js
aad
lcall
pop
sub
popf
mov
push
mov
sub
gs
sbb
outsl
cmpsb
cli
nop
inc
and
ret
dec
adc
enter
inc
sbb
cmc
fsub
repnz
mov
and
push
adc
cmpsl
decl
dec
testb
xchg
fwait
mov
inc
sbb
nop
push
es
test
push
aad
lret
aam
sti
inc
cmpsb
dec
mov
int
popf
xchg
mov
lret
dec
sub
push
adc
jl
mov
sub
lock
dec
dec
lret
xchg
stos
add
imul
ja
sub
popf
pusha
fbstp
sbb
into
nop
mov
nop
jmp
aaa
lahf
xchg
in
push
push
std
out
and
imul
bound
xor
out
std
adc
and
mov
pop
aam
out
leave
adc
loopne
out
dec
push
popf
cmpsb
mov
out
jbe
adc
mov
mov
sub
sub
mov
je
cmpb
inc
je
mov
push
inc
inc
xor
jecxz
cmpsb
jge
xor
aas
in
xchg
push
mov
adc
incb
loopne
imull
xor
jne
inc
sbb
mov
or
inc
scas
mov
jns
outsb
sahf
cmp
cltd
push
dec
mov
push
in
lret
pushl
xlat
pop
dec
out
sub
mov
lahf
out
jo
int3
sbb
jmp
jmp
push
sbb
jb
outsb
push
clc
fcomp
cmp
cmp
lret
jl
sub
lret
ja
add
and
das
xlat
push
push
aas
in
ja
inc
and
fdivs
dec
cmpsl
mov
lcall
movsl
ja
adc
xchg
ljmp
es
js
test
or
push
xor
mov
pushf
nop
adc
jmp
sarb
xlat
adc
popa
jecxz
jmp
clc
mov
pop
lret
cmp
dec
mov
mov
mov
add
imul
test
push
out
mov
or
movsl
xchg
mov
add
xchg
fcoms
pcmpgtd
sahf
loopne
clc
xor
jge
dec
cs
push
ljmp
xchg
mov
repnz
mov
xor
mov
sahf
sbb
push
negb
cs
cld
add
or
movsl
pop
fwait
push
dec
aaa
push
inc
dec
pop
outsb
call
out
xchg
or
xor
xchg
mov
mov
and
mov
mov
cmp
xchg
into
iret
adc
xchg
mov
scas
jg
pushf
mov
fidivrl
dec
scas
xchg
lock
sar
out
jb
cmc
jo
adc
stos
xor
push
mov
movsb
cwtl
pushf
adc
ret
lret
cmp
js
xorl
rcl
fiaddl
sbb
sbb
ljmp
push
mov
add
cmc
hlt
jae
lret
repnz
mov
sub
push
xor
jnp
sub
pop
add
pop
lcall
pop
and
push
jb
xor
pop
pop
jge
in
inc
mov
pushf
aas
inc
popf
ja
push
rolb
fbld
out
sbb
adcl
sbb
add
mov
lods
mov
iret
repz
incb
mov
out
cmc
aam
stos
xchg
js
or
mov
lods
jb
ffreep
aas
dec
repnz
in
lret
outsb
add
xor
inc
imul
cmp
mov
fdivrl
fbld
clc
inc
sti
in
clc
cmp
repz
jp
rcr
out
or
repz
cmp
add
icebp
and
lahf
dec
mov
ret
jne
or
int3
hlt
movsb
fcmove
xor
and
mov
xor
sub
xor
lahf
lret
push
hlt
fdivl
ret
outsl
mov
call
adc
and
fs
popf
sbb
dec
in
arpl
sub
mov
dec
cmpsb
movsl
push
cmpsb
lods
inc
insb
lahf
sbb
rorb
out
jb
repnz
mov
sti
enter
mov
push
test
xor
fcoms
push
cmc
add
pop
dec
cs
lock
adc
xchg
mov
es
inc
lahf
mov
pop
fnstcw
dec
xlat
jp
sbb
pop
xor
fdivrs
mov
ret
push
pop
je
add
push
sub
popf
lods
add
jbe
push
cmp
inc
pushf
push
ljmp
pushf
push
es
or
fisubrs
xor
jno
and
jge
je
jo
cmp
xor
ja
adc
mov
popf
negb
xchg
nop
in
sbb
pop
jl
fwait
mov
nop
daa
xchg
lock
aas
dec
lcall
mov
push
push
xchg
loop
mov
inc
xlat
inc
lods
jno
mov
xor
out
inc
fcoms
fwait
mov
das
in
push
push
jmp
xchg
mov
sbb
daa
mov
adc
cltd
dec
insb
and
orb
xor
inc
jno
and
xor
jne
repnz
sub
mov
add
sub
push
leave
ret
addr16
push
out
fs
addr16
or
repz
fidivl
loop
mov
and
insl
inc
dec
fbld
mov
and
lret
fwait
mov
xor
inc
sbb
fistl
mov
mov
scas
xchg
fnstenv
aas
xchg
mov
jo
jbe
add
xchg
aam
jno
adc
xlat
jp
xor
fs
and
sub
mov
idivb
mov
add
das
fistpl
lret
rcl
pop
test
adc
imul
xor
cli
sub
mov
aaa
leave
mov
or
xchg
adc
dec
add
repz
ss
hlt
mov
xchg
lret
popf
jno
and
jecxz
xor
ja
lods
mov
insl
xor
dec
in
pop
push
xor
sub
lret
rorl
push
cmp
and
gs
cmp
fs
xor
stc
or
mov
test
repz
addb
or
jnp
sub
shrb
andb
dec
dec
arpl
or
ljmp
jb
cmp
repz
pop
imul
test
popf
and
inc
add
mov
lcall
jns
dec
repz
add
jnp
in
push
lods
test
ret
gs
sahf
ret
add
mov
cmc
icebp
orl
push
popa
pop
std
lods
shll
jo
shll
xchg
cmpsb
xchg
aam
push
sub
inc
fcmovnbe
test
lahf
jns
xchg
lret
in
icebp
xor
out
lods
nop
pop
rcr
xor
push
filds
mov
das
push
mov
pmaddwd
mov
cmp
mov
jge
push
mov
mov
push
xchg
and
mov
mov
cltd
xor
testl
in
mov
mov
movsl
sbb
pop
fdivr
push
push
in
int3
test
cmc
fmul
call
stos
and
xor
sub
repnz
imul
adcb
pop
jmp
push
inc
sti
adc
enter
mov
movsb
cld
sbb
lea
and
dec
lock
xor
es
cld
xor
cmp
out
rclb
push
sub
test
push
enter
dec
loope
push
mov
lods
loop
lcall
push
xor
insl
or
cmp
cmp
jbe
xor
cmp
jne
mov
aas
sbb
mov
mov
or
in
cs
adc
test
mov
adc
mov
inc
or
in
add
aas
arpl
dec
test
mov
dec
pop
jae
mov
and
int3
fwait
lret
js
fisttpl
cmp
fistpll
movsl
add
mov
clc
or
xchg
adc
pop
xor
int3
flds
out
xor
sbb
lock
or
inc
push
out
or
xor
add
fstps
lock
mov
in
mov
mov
fidivrs
and
add
call
int3
mov
cmpsl
cmp
sub
loop
dec
les
cmp
jne
cmp
dec
jmp
jp
xchg
dec
pusha
or
mov
icebp
lea
sub
je
ds
das
jo
add
pop
jge,pn
push
cmpsl
inc
or
mov
xor
mov
add
rcrb
adc
in
lret
mov
loop
ret
lods
sqrtps
in
test
mov
jl
pop
pop
js
enter
mov
adc
test
rcrl
or
mov
xor
xchg
push
sbb
into
jecxz
inc
and
push
sbb
dec
lret
jb
or
cwtl
scas
rclb
jae
outsb
sub
cmc
dec
testb
sbb
into
fwait
mov
xor
mov
jae
mov
add
mov
arpl
pop
test
aas
and
movsl
xchg
icebp
clc
cmp
pop
xor
in
push
xor
push
pop
bound
inc
push
add
sub
adc
dec
xchg
cs
jo
aad
or
mov
or
cmc
aad
xchg
sub
dec
sub
sti
and
sub
test
sbb
push
rorl
jmp
je
fldln2
xor
mov
lret
cmpsl
cld
addr16
outsb
inc
push
push
sub
adc
sbb
pop
pushf
aam
icebp
xchg
jno
xchg
ss
in
rcrl
dec
out
aam
sbb
sbb
sub
push
scas
push
ljmp
imul
or
scas
inc
pop
pop
enter
pop
insb
cld
jmp
daa
or
sbb
imul
outsb
sahf
xchg
out
mov
push
faddl
sbb
repz
icebp
adc
sahf
cmp
cltd
int
and
xor
pop
imul
outsl
roll
vmovlps
js
leave
xchg
fildll
testb
cmc
loopne
add
fsubr
dec
icebp
loope
iret
je
insl
add
imul
sub
dec
inc
pop
orb
mov
std
pop
std
fildll
add
adc
fidivs
adc
rcrb
cltd
mov
out
push
jmp
hlt
xor
dec
adc
pop
test
loope
push
cmp
in
xchg
hlt
cltd
inc
dec
je
xlat
mov
adc
js
out
dec
aas
push
ret
jp
movsb
add
push
xor
fadd
out
cmpsl
fdivrp
mov
mov
sub
addb
inc
adc
out
lahf
jae
fcmovb
cs
lret
pop
add
mulb
and
xchg
xchg
mov
cmp
xor
and
loope
mov
test
outsl
das
jecxz
jl
test
es
fnstsw
pop
push
lcall
or
bound
lods
imul
inc
jno
jp
mov
leave
or
inc
inc
mov
cwtl
out
adc
addr16
lock
jns
in
repz
push
ja
out
loop
jbe
lret
mov
aaa
lock
idivb
sub
mov
mov
add
dec
stos
and
and
mov
gs
arpl
insl
mov
fisubrl
into
mov
inc
cs
adc
push
cmc
aaa
ja
sti
xchg
adc
test
fiaddl
ss
and
sbb
shl
dec
add
cmpsb
aas
rcll
shrl
sbb
adc
sti
sub
xchg
inc
in
shlb
add
jge
fsub
adc
and
popa
sbb
mov
loop
out
xchg
test
xor
popf
shlb
mov
int3
enter
sub
jae
fbld
adc
xchg
testl
into
out
adcl
stos
dec
cmpsl
cmp
pusha
and
pop
rcrl
aam
test
mov
mov
sub
clc
mov
repnz
xchg
adc
nop
inc
arpl
stos
test
sbb
mov
or
lds
xchg
xchg
test
pop
pop
aad
int
out
cmp
adc
outsl
push
inc
jbe
sahf
jo
popf
mov
popa
idivl
sbb
pop
mov
mov
out
cmc
add
sbb
mov
insl
loop
bound
iret
mov
orb
or
jbe
mov
sub
sub
jle
pop
mov
adc
enter
adc
iret
xor
gs
push
or
cmp
or
gs
rorl
incl
ljmp
cmp
mov
movsb
out
psubw
mov
clc
sahf
int
test
movsl
inc
dec
sti
push
pop
mov
mov
sbbl
push
xor
shll
es
arpl
js
cltd
bound
add
mov
lret
cmp
push
cmp
cmpsb
rorl
push
je
sbb
std
enter
adc
sub
shlb
jo
sbb
xor
adc
push
pop
std
ss
scas
out
inc
xchg
sub
inc
repz
dec
cmp
jns
into
leave
movsl
stos
inc
mov
xor
mov
sub
ss
jns
movsb
xorl
fisttpll
jl
and
out
cli
cmpsl
leave
ret
jp
rorl
mov
test
xor
mov
xchg
lcall
add
adc
xor
add
ljmp
ret
ss
push
jo
push
pop
jb
lret
sub
jecxz
rcr
stos
pop
sbb
imul
imul
sub
lock
jb
aas
mov
push
add
adc
cwtl
jg
test
add
aaa
movsl
jp
sbbb
ds
movb
pop
mov
mov
shrl
fcompl
cmc
stc
jns
movsl
testb
shlb
aam
jmp
int
insb
shlb
jbe
push
nop
xchg
jle
push
js
repz
adc
addr16
std
into
shrb
cli
scas
mov
add
pop
xor
orb
jmp
mov
push
xor
lea
shll
insl
pop
or
stos
jne
and
sti
scas
das
xchg
xchg
inc
test
pop
pop
push
push
lock
stos
fbstp
jae
sub
push
jge
cltd
add
imul
xor
gs
int
cld
jmp
inc
xchg
repnz
stos
rcrl
sahf
cli
xchg
in
add
fwait
xchg
push
push
test
and
in
lods
dec
out
or
shlb
int
sub
cmp
into
cmpsl
and
inc
daa
add
mov
xchg
mov
xchg
add
es
fists
mov
pop
insl
mov
jne
imul
mov
xor
xor
jge
xor
mov
fwait
test
add
aaa
mov
xchg
shll
add
add
inc
xchg
and
mov
dec
ret
mov
loope
xor
divl
jb
cmp
mov
nop
or
mov
and
inc
loopne
sbb
dec
repnz
mov
test
mov
js
outsl
xchg
xor
jmp
andb
mul
sbb
rclb
pop
cmc
cmpsb
mov
sub
out
dec
lcall
dec
subl
call
push
xchg
scas
fs
push
addr16
fildl
xor
jle
push
lret
cld
js
rcl
mov
jg
sar
cwtl
jo
sbb
sub
lds
jne
adc
add
aas
mov
js
rep
fstps
mov
mov
popf
fstps
add
push
inc
and
mov
jmp
insb
mov
add
movsb
outsl
mov
adc
adc
lahf
negl
sub
jl
mov
pop
xchg
insl
or
inc
sbb
cmp
jp
cmp
lret
pop
repnz
in
cmp
pop
out
js
ret
or
popa
out
in
push
add
aas
sub
mov
xchg
in
cmp
roll
lods
std
scas
imul
push
and
aas
mov
mov
jg
xor
outsb
xor
div
fistpl
pop
popa
jmp
loop
dec
push
sub
push
cmp
movsb
ljmp
stos
adc
push
stc
push
xor
cmpsb
stos
cwtl
fisttpll
add
out
cmp
imul
rcll
inc
ret
xor
andb
popf
repz
leave
xchg
push
mul
outsb
add
xchg
js
test
into
roll
fdecstp
mov
sub
push
insl
je
pop
mov
ret
cmp
and
pop
lods
test
das
mov
inc
loope
jnp
mov
in
stos
mov
shll
or
clc
in
dec
push
pop
add
movsb
or
add
arpl
ja
das
popa
cmp
push
notl
hlt
or
pop
adc
lds
jp
dec
cmp
mov
inc
push
ljmp
sarl
push
jo
xchg
mov
push
jmp
xchg
push
xchg
inc
add
test
xor
lret
cmpsb
movsb
fldenv
lock
sbbb
scas
mov
xchg
into
loop
xor
dec
nop
movl
sbb
and
test
pop
cmp
jae
dec
jns
and
add
mov
out
loopne
xor
mov
inc
mov
invd
fsub
notl
jle
dec
cmpsb
mov
les
lds
mov
sub
push
aaa
xor
push
popa
and
insl
cld
das
gs
in
xor
in
push
or
xlat
shl
imul
pop
sub
mov
shl
lret
xor
fbld
pop
test
sub
mov
pop
push
and
and
mov
dec
lods
in
rcl
add
xchg
jecxz
sub
fucomip
xchg
lds
pop
push
das
pop
push
cmp
test
xor
rol
daa
popa
ficoml
adc
xor
add
out
cmp
loop
push
cmc
sbb
xchg
lods
mov
mov
fbstp
and
out
push
xchg
cmp
add
leave
add
jge
or
addb
fildl
testl
jp
out
push
xchg
out
mov
shrl
aad
jae
add
into
pop
jge
in
out
popf
lahf
sbb
mov
shll
ret
popa
fs
mov
mov
push
out
add
xor
push
repnz
or
push
xchg
loope
call
in
mov
mov
xor
negb
push
shll
fwait
rol
arpl
sub
pushf
outsl
mov
mov
jno
pop
lock
test
inc
nop
test
in
xchg
pop
inc
cli
jbe
imul
sbbb
mov
ret
sbb
pop
mov
and
sub
sbb
fs
lcall
test
stc
pop
lcall
shlb
mov
repz
and
outsl
add
repz
nop
or
lock
sub
add
push
mov
dec
orb
push
push
imul
adc
adc
call
jns
nop
push
je
sub
mov
xchg
adc
push
imul
addr16
test
in
lret
ret
sub
push
pop
add
insl
add
sahf
aam
mov
xor
subl
pop
xchg
cmc
jne
sub
cmp
ss
mov
add
andl
add
xor
mov
add
hlt
js
enter
xchg
mov
leave
shrb
fmul
push
sti
mov
adc
clc
jmp
jae
pop
mov
add
adc
dec
cmpsb
mov
out
insb
fwait
push
mov
inc
imul
test
cltd
movsl
insb
js
or
or
lahf
lcall
pop
sub
mov
test
xchg
cwtl
push
mov
xor
ret
dec
inc
shll
add
pop
mov
mov
mov
add
cltd
popf
sbb
movb
inc
mov
jns
sub
fmul
pop
pop
jno
push
or
xor
mov
das
fldenv
mov
xor
xchg
sarl
inc
hlt
icebp
fisubrl
popf
pop
mov
sub
stos
fsub
pop
jne
scas
mov
push
inc
outsb
xor
dec
pop
in
mov
fdivs
xchg
adc
push
std
mov
mov
inc
out
cwtl
sbb
cmpsb
aad
sub
sahf
out
mov
mov
sbb
xchg
sbb
out
fsubp
dec
scas
lret
sbb
jp
test
mov
xchg
sbb
mov
push
jmp
mov
pop
mov
cmp
dec
mov
lds
xchg
cmp
sbb
daa
ret
pop
xor
jae
xlat
les
adc
aad
adc
cmp
xchg
push
mov
xchg
cmp
xorb
decl
fnstsw
inc
shll
fcmovnu
adc
enter
jne
sub
mov
aam
dec
push
cmp
lcall
outsb
stos
sub
xlat
out
jbe
cmpsb
mov
repnz
push
xor
and
push
jl
and
aam
cmpsb
lret
xchg
cmp
aaa
xlat
enter
pop
xchg
xchg
ds
sbb
rcr
dec
xor
scas
add
loopne
jo
test
mov
xchg
mov
inc
das
and
pop
mov
push
dec
mov
sar
inc
mov
xchg
pusha
sbb
xor
mov
outsb
scas
xchg
in
cld
int3
adc
fdivs
pop
pusha
lret
bswap
add
je
int3
movsb
mov
mov
sub
mov
dec
fyl2x
xor
xchg
fwait
test
in
roll
lods
mov
test
shrl
or
sbb
jo
sarl
imul
out
add
sar
cwtl
xchg
fcmovnb
in
repz
fidivs
inc
shll
icebp
xchg
aas
call
fs
scas
and
sub
jns
dec
push
pop
arpl
cmpsl
mov
or
cmp
push
int
jae
loop
xchg
mov
movsb
mov
sbb
rorb
sbb
leave
sub
sub
mov
dec
jb
js
push
loop
xor
adc
lock
mov
xchg
movsl
ret
testl
and
sbb
mul
dec
lods
sub
adc
mov
jo
jmp
pop
inc
es
inc
andb
mov
inc
jle
fnstsw
pop
in
data16
fdivrl
into
ja
push
sub
js
add
mov
test
das
lods
add
aam
xchg
popf
jmp
xchg
sub
adc
cltd
mov
mov
mull
daa
bound
fsin
inc
out
test
lock
dec
push
and
add
pop
dec
nop
pushf
push
adc
insl
jne
fdivl
movsb
xchg
out
cli
cmpsl
pop
insb
pop
stos
je
mov
fcmovne
push
mov
adc
mov
jo
dec
xor
mov
add
xor
test
out
or
fdivs
stos
nop
mov
das
sbb
jecxz
std
mov
inc
mov
mov
insb
pop
in
xchg
dec
or
jg
cmp
jae
neg
push
cmp
int
aas
jns
popf
push
rorl
arpl
fsubp
sub
jp
aaa
jb
loop
adc
lds
lahf
pushf
xchg
xchg
leave
push
pop
dec
push
dec
adc
and
cpuid
jnp
pop
adcb
ret
out
popl
ficoms
sbb
mov
or
jg
or
sub
call
outsl
das
stos
xor
mov
mov
lret
mov
das
sub
xor
pusha
int3
pop
jne
enter
jae
test
push
cltd
mov
cld
mov
shll
xor
sbb
stos
testl
mov
pop
jae
cwtl
jo
fcos
outsb
dec
jnp
mov
movsl
ja
scas
and
xchg
xchg
scas
and
shll
xchg
popa
dec
aas
cs
test
lcall
sub
adc
lcall
subb
xlat
imul
les
out
imul
ret
mov
out
iret
arpl
dec
xchg
lds
stos
pop
mov
xorl
shrb
sbb
loope
mov
dec
and
jns
xchg
mov
test
pop
xor
movsl
add
lret
inc
and
lret
adc
adc
mov
lret
adc
and
adc
into
mov
sub
xchg
mov
ret
ss
xor
jecxz
aad
stos
jg
dec
movsl
push
push
scas
sub
sub
fdivrs
mov
mov
inc
leave
out
or
lcall
and
rcll
sub
pop
je
loop
aam
xchg
pop
incb
dec
mov
pop
repnz
das
test
aaa
mov
movsb
shrb
shlb
push
mov
les
movsl
mov
cmc
iret
pop
cs
loop
mov
dec
outsl
jp
ficomps
mov
std
dec
jne
inc
daa
mov
mov
in
push
pop
andb
xor
es
jg
cmovns
dec
fs
std
pop
sub
addr16
mov
add
adc
mov
rorl
aaa
or
jmp
in
ja
es
inc
imul
fsincos
enter
cmp
xorl
push
mov
or
pop
jae
dec
testl
iret
dec
mov
ror
mov
call
mov
mov
ret
xchg
dec
push
outsl
xchg
mov
xchg
xlat
and
out
lret
decb
xchg
xchg
fidivl
sbb
mov
test
arpl
pop
arpl
and
sahf
dec
dec
xor
or
mov
pop
mov
add
or
cmp
lcall
into
fsub
lcall
mov
or
stos
push
cmp
cmp
scas
mov
and
mov
dec
imul
mov
sub
mov
in
in
adc
ljmp
lret
add
fstps
int3
mov
js
mov
insl
sbb
cli
dec
out
popa
mov
test
lock
mov
jp
xchg
call
pop
mov
and
aad
push
cmp
xchg
lahf
pop
pop
ss
popa
outsb
es
jp
jle
add
lcall
pop
xchg
movsb
insl
fidivl
addr16
sahf
xchg
or
loopne
jecxz
enter
dec
enter
pop
pushf
cmp
jge
sti
xor
hlt
adc
clc
xchg
mov
jo
mov
mov
sti
arpl
mov
mov
mov
mov
repnz
int
cmc
cltd
outsb
test
inc
dec
popa
mov
arpl
aam
pop
mov
js
hlt
mov
mov
cs
add
fwait
ds
xchg
jnp
lds
les
sbb
lock
xchg
jle
stc
xorb
add
nop
and
xor
inc
les
sub
sub
adc
ja
add
clc
pop
cs
jbe
xchg
stos
out
jo
or
loopne
rcrb
mov
mov
sub
pop
push
rclb
int3
xchg
mov
sub
add
mov
cmp
jle
inc
dec
adc
je
dec
sbb
mov
push
ss
jno
js
xchg
xchg
and
add
out
int3
nop
fldenv
xor
adc
xchg
out
and
push
push
fldenv
dec
xchg
xor
fimull
mov
pop
sbb
shlb
add
pop
adc
repnz
push
jns
pop
add
dec
iret
or
add
cmc
jbe
lea
stos
mov
outsb
fwait
add
or
mov
addr16
sub
push
iret
and
inc
mov
insb
ds
sub
fcomp
xchg
mov
mov
arpl
add
mov
stos
push
or
add
cmpsb
pop
jmp
rolb
out
pop
mov
or
loop
ds
xchg
jnp
mov
push
int
cmp
loope
xchg
das
add
adc
pop
rclb
movsl
hlt
lret
insl
jb
bound
incb
jne
push
popf
movsb
adc
push
pop
clc
push
dec
ss
lods
pop
mov
mov
pop
add
out
hlt
lret
out
int
mov
sarl
repnz
mov
sbb
ja
dec
mov
adc
add
movsl
cmp
lods
add
add
cwtl
hlt
dec
fisubs
fsubrs
push
test
int3
xor
sub
sarb
inc
jmp
inc
jle
fnstenv
int3
pop
mov
or
fmull
punpcklwd
add
fs
push
inc
jmp
add
push
test
imul
xchg
ds
ljmp
and
inc
aaa
popf
jl
sbb
es
mov
in
mov
pop
xlat
pushf
aad
out
mov
xchg
scas
subl
lea
mov
xchg
or
dec
adc
cltd
sub
imul
inc
cmp
idivl
lcall
stc
stc
adc
mov
test
jb
push
xchg
lods
jno
or
pop
sbb
adc
cwtl
lret
ret
cli
mov
inc
pop
in
cmp
std
mov
pop
dec
jno
inc
or
mov
ljmp
call
insb
xor
into
xchg
dec
add
mov
outsb
or
repnz
popa
stos
mov
lahf
add
dec
filds
sahf
sahf
mov
ss
mov
jecxz
xor
xor
cmp
imul
cmpsl
das
jl
mov
inc
add
sahf
mov
or
cmpsb
pop
push
testb
pop
aam
add
xor
or
sbb
pop
jg
xchg
or
push
nop
cmpsl
cmc
jmp
jnp
sbb
dec
lods
jmp
mov
pushf
jl
push
and
push
xor
jp
dec
pop
out
lock
mov
sub
sbb
popa
ds
mov
fists
ret
mov
adc
xor
repnz
jecxz
imul
scas
sbb
test
push
xor
imul
gs
adc
push
pushl
mov
mov
xchg
and
and
outsl
jns
cmp
mov
cmpsl
imul
jb
add
dec
loopne
xchg
dec
lods
ret
push
sub
mov
sub
js
mov
add
sbb
pop
inc
push
fistpll
fpatan
sbb
push
pop
stos
pop
scas
xchg
mov
pop
pop
adc
loop
push
pop
xchg
inc
pop
out
sub
sarb
lcall
std
das
outsb
aad
fisttps
into
sub
fisttpll
icebp
jb
push
jecxz
mov
test
jl
inc
xor
mov
dec
movhps
xor
and
inc
ss
sub
dec
or
in
aaa
mov
and
outsl
mov
sahf
mov
adc
stos
sbb
sahf
sbb
xchg
in
pop
neg
into
inc
movsb
or
test
adc
dec
call
xor
ja
pop
orl
scas
mov
imul
aas
cld
lock
loope
adc
jle
xchg
sarl
dec
outsl
cld
jo
mov
icebp
std
clc
stc
cmp
inc
inc
xor
cli
mov
out
stc
rolb
sbb
lret
xchg
in
int
xor
xlat
inc
xor
inc
pop
pusha
loop
and
push
dec
jl
adc
jns
fsub
sub
jne
imulb
dec
stos
shll
pop
xchg
sahf
nop
clc
pop
lahf
ficomps
loopne
mov
dec
or
fdivrs
or
cmpl
cs
cmpsb
adc
loop
scas
notb
mov
xchg
sub
mov
pusha
cmp
lret
ljmp
outsl
sbb
adc
ljmp
and
push
out
hlt
jo
rol
adc
mov
sub
js
cmp
adcb
lret
xchg
push
jecxz
push
sub
das
imul
pop
jmp
stos
dec
or
js
cmp
or
or
ljmp
repnz
push
punpcklbw
call
jp
clc
pushf
dec
and
lcall
mov
pop
mov
xor
sbb
jmp
push
mov
add
push
and
ror
or
mov
jne
inc
jle
mov
lret
call
cmp
mov
mov
rclb
je
inc
adc
jns
adc
sbb
push
sbb
lods
jg
jne
enter
mov
lahf
mov
mov
mov
movsb
add
lds
or
cld
ret
mov
ljmp
roll
xor
cmp
ds
sub
adc
icebp
out
loop
xchg
lock
test
aam
pop
js
int
lahf
jl
xchg
pop
mov
mov
addb
cmc
xor
int
popa
outsl
movsb
hlt
jl
nop
addl
call
jmp
aad
rcrb
mov
mov
dec
js
lods
inc
mov
sub
test
aam
adc
das
pop
in
inc
xor
mov
sbb
daa
push
dec
neg
movsb
call
push
shrl
xor
inc
out
jl
mov
add
inc
cs
cld
dec
roll
sbb
xlat
lcall
dec
rcl
pop
xor
shl
jle
mov
add
pop
xor
dec
aad
stos
jne
adc
into
in
sub
andb
ret
mov
sbb
mov
and
fbstp
sti
mov
mov
mov
or
gs
clc
adc
jne
lds
into
mov
fidivs
mov
and
jecxz
gs
cmp
scas
mov
jbe,pn
stc
jg
call
in
xor
popa
xchg
or
incb
sub
jb
mov
cmp
push
inc
push
xchg
imul
push
jbe
adc
in
pop
xabort
loop
push
fidivrs
ss
push
inc
or
out
cmp
push
mov
aaa
and
xor
or
cld
loopne
iret
test
lock
cli
jnp
xorl
jmp
popf
shrb
call
addl
jmp
aad
adc
jmp
or
shll
xchg
addb
mov
test
adcb
add
mov
fidivrs
js
mov
mov
stos
adc
enter
mov
sub
dec
testb
fcoms
mov
in
xlat
xor
push
mov
jbe
push
mov
mov
mov
out
cmp
adc
sub
pop
mov
popa
addr16
shll
mov
xorb
insb
in
fnsave
pop
push
cmpsb
jae
sbb
sbb
lea
push
fs
add
imul
adc
std
sub
out
in
mov
les
and
dec
mov
xor
test
outsb
jg
pslld
jnp
inc
jmp
sub
push
jbe
roll
rcrl
shr
jb
pop
int3
push
jg
cmp
xor
lret
popf
ret
sbb
lcall
mov
addl
fisubl
lock
movsb
or
scas
inc
pop
cltd
lods
insb
or
adc
out
mov
mov
mov
or
fidivl
xlat
dec
xor
stos
roll
fnsave
adcb
dec
fcompl
adc
mov
dec
dec
icebp
jmp
es
fdiv
mov
xchg
or
lret
cmc
xchg
rcr
sub
pop
ja
mov
popa
das
jg
ss
popa
dec
add
outsb
xchg
popa
push
jmp
lods
fiadds
clc
mov
pop
ret
xor
sbb
adc
rcrl
notl
shrl
and
add
inc
lcall
hlt
jb
dec
xorb
cmp
xchg
dec
pushf
aam
stos
lock
arpl
lahf
and
add
xor
dec
mov
negl
mov
inc
lods
fldcw
subb
out
sarb
push
pushw
pop
adcb
cltd
ja
jb
push
lods
out
sub
lcall
int
inc
xor
mov
add
mov
mov
dec
mov
mov
out
push
xorb
cwtl
stos
ret
bound
dec
xchg
out
jnp
lock
int3
call
xchg
fs
ficoml
push
sti
popa
inc
sbb
int
aas
popf
cmpsb
test
and
jb
pushl
sbb
and
pushf
or
and
jnp
pop
or
int3
lds
in
xchg
inc
int
pop
or
or
icebp
arpl
clc
movsl
jle
mov
icebp
stos
pop
jp
cmpsl
daa
out
aam
pop
les
insl
push
mov
jge
ljmp
adc
cmp
ficompl
sbb
push
adc
mov
xchg
ret
cmp
push
jge
mov
xchg
mov
cwtl
sub
js
mov
jecxz
orl
lcallw
xor
sub
cmpsl
out
repnz
out
lret
sub
clc
pop
push
mov
lret
mov
in
movsl
or
sbb
movsl
push
fisttps
ret
dec
ss
sbb
insl
pop
pop
and
mov
loopne
shlb
push
xchg
mov
rcr
sbb
cmc
arpl
shrl
clc
sbb
cmp
repnz
inc
sti
xor
adc
mov
lea
jle
aas
cmpsl
addl
pop
adc
xor
add
push
imul
lcall
mov
out
push
out
out
xchg
outsb
fisttpll
add
pop
and
inc
xchg
std
jnp
lret
sbb
jp
add
sub
insb
xor
jl
mov
mov
test
ds
and
sub
sub
movsb
inc
cli
sti
mov
fcompl
rclb
mov
xor
push
and
in
xchg
sbbl
mov
jecxz
and
push
cmp
lahf
cli
jns
loopne
sahf
pushl
clc
dec
mov
iret
push
jns
and
sarb
xchg
out
add
stos
shll
iret
mov
mov
inc
inc
xchg
mov
add
divb
xchg
scas
pushf
rclb
loop
mov
mov
or
mov
incb
inc
jmp
jbe,pt
pop
sbb
scas
cwtl
jecxz
sbb
je
jp
lcall
xlat
insb
jne
sub
movsb
inc
mov
mov
inc
push
shrb
pop
stos
push
cmp
hlt
and
mov
test
aas
sbbb
push
add
outsb
pop
lret
mov
movsb
pop
jmp
pushl
lret
hlt
push
mov
insl
movsl
rorb
divb
sbb
and
bound
daa
or
mov
xchg
bound
outsb
ret
andb
leave
xor
mov
lcall
jmp
xchg
jb
push
enter
shll
out
dec
inc
sub
xchg
loop
cmc
pusha
mov
push
mov
or
ljmp
es
test
inc
adc
jo
nop
scas
xor
out
pop
mov
jno
inc
lea
fsts
push
loopne
mov
sahf
jnp
cmp
mov
inc
xor
outsb
out
lods
adc
jns
jb
mov
sbb
fstpl
cltd
into
cs
inc
leave
xor
ja
andl
movsb
mov
mov
fs
cs
aam
jo
inc
adc
cltd
cmp
push
outsl
mov
ret
push
mov
pop
mov
add
jno
mov
pop
mov
gs
adcb
xchg
ss
mov
test
add
ds
mov
cltd
pop
aaa
mov
fisubl
mov
pop
sbb
jl
pop
fldt
jae
icebp
mov
stos
in
pop
or
outsb
aaa
pop
test
ds
pusha
or
xor
arpl
xor
sub
dec
xchg
lods
push
jge
inc
xor
jno
test
sub
dec
and
pop
nop
out
mov
leave
pop
sbb
xlat
xchg
mov
es
xchg
pushf
stos
mov
and
mov
mov
movsb
dec
push
mov
mov
sub
shlb
sti
sbb
push
and
push
sbb
cltd
inc
das
xchg
lcall
xor
jns
sbbl
adc
push
fistpl
stos
sbb
pop
mov
in
push
pop
stos
cmp
es
je
cmp
fcmovnb
push
and
push
inc
mov
lret
rcl
repz
lahf
mov
mov
xchg
cmp
xor
ds
test
dec
lods
loope
add
sub
dec
mov
mov
pop
xchg
dec
stc
sub
and
in
dec
loope
lods
arpl
dec
mov
pop
loope
push
add
pop
cmp
xchg
bound
lret
lcall
cmpb
mov
lcall
push
dec
xor
nop
xor
dec
pop
ds
push
jle
pop
dec
imull
mov
mov
inc
les
push
jb
mov
push
xchg
sub
jmp
aam
in
mov
sub
push
aaa
sahf
and
mov
cwtl
negb
aam
jp
jl
pusha
mov
or
outsl
enter
dec
xor
mull
mov
push
or
jnp
sbb
pop
roll
les
mov
in
xor
mov
dec
sub
sbb
inc
jnp
cs
mov
and
jp
movsl
pop
bound
or
roll
in
mov
stc
fldl
adc
cs
mov
or
fdivrs
xor
cli
mov
sbb
out
es
mov
sbb
imul
mov
adcb
cmp
popa
ja
sub
ret
loopne
into
js
pop
test
gs
mov
test
pop
jbe
test
push
dec
lcall
fildl
les
sub
and
les
push
outsb
jle
sbb
mov
dec
jp
xchg
mov
or
movb
sbb
pop
push
add
pop
cli
aad
fimuls
mov
and
pop
or
je
jle
push
subl
adc
nop
roll
pop
leave
lret
pop
je
loopne
out
xchg
bound
jne
xor
xchg
or
ljmp
or
fldenv
inc
cmp
and
push
push
lahf
outsl
daa
cli
jp
mov
mov
iret
dec
dec
addl
fbld
jno
or
aad
mov
lret
inc
aas
mov
mov
arpl
in
jmp
or
hlt
lret
in
mov
xor
xchg
dec
cmpsl
push
xchg
add
xchg
stc
inc
push
mov
mov
lret
or
notb
lret
lds
push
mov
cltd
rcr
pop
jnp
and
sarl
enter
sbb
dec
pusha
mov
scas
sbb
dec
push
fsts
leave
dec
sbb
fwait
outsl
xchg
aad
lea
lret
fbld
imul
test
sub
into
loop
pushf
pop
push
pop
xor
or
mov
ds
mov
push
mov
scas
ja
inc
or
push
scas
add
pushf
add
sub
and
cmpsb
imul
dec
addr16
popa
dec
pop
mov
dec
dec
bound
pusha
gs
in
pop
decb
scas
bound
jle
cmpsl
and
sqrtps
dec
or
xor
add
sbbl
jbe
push
leave
pop
lds
in
test
imul
push
fdivl
ret
pop
sbb
jne
mov
testb
out
lcall
aam
es
mov
inc
inc
xorl
mov
in
xchg
dec
daa
mov
jae
sbb
ficoms
xchg
pop
das
daa
and
xchg
bound
out
scas
jb
xor
outsb
sbbl
leave
push
sub
out
dec
mov
jbe
addl
or
xor
dec
fs
push
popa
or
iret
loope
cli
les
in
jno
enter
cli
xchg
pop
jae
fs
into
push
out
cmp
mov
add
nop
lods
js
inc
mov
xor
outsl
sbb
jbe
lret
mov
sbb
insl
cmc
xor
lea
scas
lds
pusha
sub
icebp
nop
mov
push
jbe
nop
sub
dec
cwtl
jecxz
jecxz
mov
jo
jmp
xlat
push
xor
std
adc
xor
push
jns
loope
sub
cs
fs
jbe
push
clc
mov
inc
lret
clc
or
sbb
inc
sub
js
xchg
insl
pop
loope
test
shll
incb
test
scas
xor
sub
jg
jno
pop
jl
sub
sbb
mov
cmc
sbb
out
aas
xchg
dec
mov
inc
pop
jmp
movsl
jne
ja
jmp
mov
stos
cltd
xor
fcoml
mov
pop
dec
int3
mov
test
stc
out
sbb
lds
sbb
hlt
sbb
inc
and
cmpsb
push
push
push
mov
or
lods
lods
lahf
outsb
jmp
push
sub
into
stc
in
and
je
or
jne
ljmp
inc
xchg
adc
cs
mov
and
mov
cwtl
pop
sbb
xchg
mov
push
insl
iret
push
inc
outsl
sub
xor
aam
les
repz
cs
push
pushf
and
xchg
pop
add
push
mov
push
test
and
mov
out
adc
cmp
insb
inc
push
xchg
dec
shrb
cmp
leave
push
mov
push
sahf
stos
mov
or
xor
xor
sbb
dec
jo
jl
rcr
daa
scas
push
push
rorb
lret
add
imul
imul
xchg
addr16
insl
pop
test
pop
fmuls
shrl
icebp
fldenv
jg
adc
mov
mov
insl
out
lahf
inc
sbbl
aas
xchg
xor
out
xor
sbb
push
push
js
cmp
les
pop
rcll
xor
in
cwtl
xor
mov
xor
fsub
xchg
dec
dec
iret
pop
and
sub
stc
xor
or
lods
fstpt
enter
pop
lahf
pop
stos
mov
fdivs
out
lods
push
icebp
orl
aaa
das
xor
lock
jae
aad
in
ret
addl
arpl
sub
cmp
mov
sub
sbb
add
adc
shrl
add
add
mov
pushf
insl
mov
insl
repz
inc
fs
idivb
mov
xchg
test
sarl
xor
cmp
adc
loope
jb
pop
rcrb
inc
ret
movsl
sbb
xor
push
jb
jp
sbb
iret
pop
adc
or
jp
sub
aas
xchg
jge
hlt
cmp
mov
jge
push
jle
dec
or
in
insb
mov
cmp
test
outsl
inc
insl
ds
cmpsb
push
cwtl
sub
lods
test
push
add
fldl2t
mov
lret
mov
xchg
xchg
mov
sub
mov
sbb
ja
lret
add
daa
call
jb
xchg
cmp
sub
xchg
lea
test
into
setg
ss
push
insb
in
add
out
mov
adc
mov
ljmp
adc
scas
add
jmp
sub
cli
inc
loope
call
and
sub
sbb
mov
sub
add
pop
or
dec
jbe
bound
ljmp
push
dec
mov
jmp
push
jl
adc
mov
repz
or
shll
fsubrl
bound
pushf
mov
cmpsl
and
cltd
mov
out
sbb
test
cmp
enter
test
jmp
filds
dec
lea
scas
cmp
mov
scas
jmp
adc
enter
dec
shrl
xor
loope
add
xor
call
mov
adc
bound
fnsave
mov
push
mov
sub
cmp
lea
std
push
sub
in
or
cmp
in
push
es
and
dec
jo
stos
sub
andb
adc
inc
inc
sub
xchg
xlat
lods
sub
test
or
xor
movsb
adc
sti
mov
call
mov
xchg
push
push
cmp
xchg
fiadds
int
jne
adc
test
mov
xor
jge
fs
mov
scas
sbb
push
fidivrs
enter
add
sbb
ficompl
adc
fcmovnb
xor
push
mov
in
push
inc
out
mov
test
add
push
mov
inc
mov
jno
mov
clc
lods
loop
aam
movsl
lock
inc
loopew
test
lea
push
inc
orb
push
add
fistpl
jne
xor
mov
popa
xchg
movsl
xor
xlat
cwtl
popf
out
pop
sub
outsl
xchg
sbb
mov
test
sub
int3
adc
arpl
mov
pop
aas
icebp
xor
stos
mov
sub
xchg
repnz
mov
mov
and
sahf
jge
cmp
test
ja
sarl
sub
cmp
addl
aad
out
in
addr16
popf
or
dec
adc
pop
xchg
jns
outsb
aad
jb
divb
sub
push
xchg
imul
aas
sbb
ret
fld
inc
mov
add
sbb
or
sub
call
mov
loope
jne
mov
cmp
fdivp
or
cmp
pop
xchg
add
add
add
imul
rcrb
clc
lret
sub
cmp
imulb
test
lods
ret
jge
sarb
jno
out
nop
and
aad
je
mov
subl
push
stc
in
mov
fsubs
lods
cmp
sub
cmpsb
std
lds
std
int3
lret
ror
inc
pop
sbb
jnp
repnz
add
repnz
jg
andl
mov
enter
imul
aad
in
mov
pop
decl
jmp
bound
or
pop
push
jbe
bound
cmpl
adcb
movsb
ds
inc
lods
movsl
test
repz
icebp
sub
jbe
mov
or
nop
xchg
addr16
jp
movsb
jno
add
mov
popa
rolb
aaa
sti
dec
xor
fldcw
cmp
and
icebp
push
adc
mov
adc
jge
mov
cltd
mov
mov
fldcw
lea
lods
mov
jo
jbe
mov
sub
int
dec
mov
daa
add
adc
cld
cmpsb
shlb
bound
mov
jmp
lea
lods
fdivrs
and
xlat
mov
test
pop
sti
xchg
pop
pushf
add
sti
cmp
lods
xchg
xchg
ljmp
push
hlt
push
pusha
pop
push
cmp
adc
or
xchg
xor
xchg
test
insl
movsl
push
mov
cmpsl
xchg
shll
push
test
push
sahf
shrb
adc
cmp
mov
jmp
sub
cmp
jnp
loop
xchg
push
jno
cltd
sub
push
into
push
lock
pushf
mov
jge
push
ret
mov
out
int
add
jne
mov
or
xor
roll
push
rcll
sub
pushf
loop
adc
into
sbb
mov
or
sub
in
jnp
push
ljmp
sub
lock
xor
insb
dec
gs
adc
pushf
mov
addb
adc
loopne
adcb
ds
icebp
inc
jnp
xchg
sbb
clc
ja
lods
xor
gs
test
rcrb
fstpt
and
aas
jg
push
ret
xchg
icebp
mov
lcall
pusha
in
out
enter
mov
decb
ljmp
inc
cmpsl
push
jo
mov
lahf
cwtl
scas
lock
sub
std
sub
stos
push
push
mov
mov
pop
cmp
mov
inc
insl
into
dec
push
fisubrl
push
sar
or
or
sahf
stc
xchg
cmpsb
or
rcr
mov
test
in
inc
inc
mov
sbb
xchg
mull
pushl
cmc
cld
ja
pop
in
jl
cmpsl
add
repnz
push
mov
mov
and
pop
ret
xchg
pop
and
jl
mov
inc
stc
das
std
xlat
addb
jp
sbbb
stc
xlat
ret
shl
sbb
push
imul
in
push
dec
xchg
mov
jnp
je
ror
sub
fldl
hlt
and
xchg
push
cmp
ja
or
cmp
jmp
sub
cmc
clc
stos
jns
and
add
pop
outsl
lods
in
in
insb
mov
rcrl
cmp
mov
jmp
or
jne
dec
inc
and
hlt
push
cmp
and
mov
dec
push
cwtl
or
dec
mov
adc
xor
push
shll
fcoms
shrl
iret
sub
lock
data16
push
sbb
outsb
insb
jae
fldcw
sti
into
jno
and
add
es
dec
movsb
repz
dec
call
dec
or
sub
xor
adc
push
scas
mov
lret
loope
jne
jl
jae
mov
jecxz
stos
scas
mov
lea
mov
pop
dec
adc
out
mov
shrb
icebp
nop
fwait
sbb
sbb
push
popf
mov
mov
shrb
fs
mov
fstpt
dec
or
mov
ja
out
cwtl
pop
mul
ret
pusha
pop
pop
test
fldl
ucomiss
das
flds
inc
insb
or
movsb
sti
sub
addb
mov
std
mov
cmp
in
adc
mov
xor
hlt
and
and
cmp
push
test
jae
mov
adcl
sbb
ja
sbb
pop
push
cli
inc
jp
dec
jge
pop
cmp
fstpl
mov
cmpsb
stos
shll
jo
sbb
loop
push
adc
jne
insl
lods
xchg
mov
lods
shll
mov
mov
ljmp
scas
cmp
fsubrl
push
inc
out
push
xor
and
jno
rorb
pop
jnp
loop
jnp
stc
cltd
fwait
mov
jb
cmc
sub
or
cmpsl
and
fmulp
cmp
xlat
jbe
nop
cmpsb
mov
dec
mov
push
fwait
mov
mov
aaa
loopne
clc
sbb
inc
inc
sbb
mov
mov
fbstp
dec
mov
aam
dec
cwtl
arpl
xchg
imul
test
repz
sti
faddl
jge
ret
mov
insb
jnp
push
sub
or
add
add
push
adc
repz
cs
ds
cmp
sbb
int
or
int
ror
dec
repnz
aaa
jo
loop
xor
arpl
inc
imulb
or
rcl
push
or
add
sub
push
clc
jo
iret
insl
es
icebp
shlb
adc
in
lods
sub
cmp
xchg
scas
dec
sbb
jge
push
rorb
xchg
adc
push
imul
ss
out
orl
loope
aaa
dec
mov
repz
pop
cld
in
jp
and
popf
push
mov
ret
fidivrs
pusha
jns
repz
mov
clc
jmp
xchg
adc
out
or
shl
ja
jno
outsb
adc
sub
les
inc
mov
movsb
in
push
xchg
push
push
movsb
or
movsl
push
out
pop
subb
ds
aad
movsl
push
mov
jg
pop
and
mov
dec
push
mov
or
std
js
jge
pop
mov
andb
xchg
or
sub
fisttps
test
mov
mov
fnstsw
mov
or
scas
repz
sbb
mov
mov
jb
push
xor
mov
rcll
xchg
sub
cmp
aam
insl
cmp
sbb
and
js
jg,pn
add
int
stos
fsubrl
popa
sub
ret
lds
sbb
mov
popa
divb
in
mulb
mov
xor
push
mov
je
jp
lock
xor
sub
and
in
xor
dec
mov
adc
or
mov
xor
or
ja
sarl
and
mov
ret
jl
faddp
push
call
fistpll
pop
cmp
out
lahf
inc
repz
out
pop
fiaddl
cltd
test
adc
mov
or
dec
fldl
fildl
inc
enter
or
lahf
stos
or
sub
hlt
xorl
lret
adc
stc
sub
clc
cltd
cmpsl
xchg
mov
push
cmp
xchg
dec
push
loopne
les
test
pop
inc
mov
add
mov
sbb
mov
mov
stc
in
daa
mov
fwait
mov
jp
mov
xchg
leave
in
loop
mov
js
dec
es
xor
sbb
mov
call
aad
addl
adc
dec
or
das
jecxz
call
mov
xor
fdivs
imul
sub
inc
or
pop
adc
scas
mov
dec
rcl
sbb
pop
sarl
leave
inc
cld
push
mov
test
popa
jb
dec
int
push
stos
outsb
or
sub
sub
jo
adc
out
push
pop
lahf
cwtl
xlat
push
ret
rcrl
cmpb
sarl
stos
cmp
mov
rcl
xchg
in
pusha
pop
enter
inc
mov
lret
pop
jle
sti
pop
sub
jno
pop
insb
inc
xchg
iret
pop
cmp
icebp
in
cmp
xor
imul
xchg
jb
cmp
call
sbb
cmp
or
jb
jo
cmpsb
test
push
lcall
popa
or
push
pushw
les
hlt
adc
inc
jmp
sbbb
mov
inc
xor
pop
bound
cmp
pop
mov
repz
ljmp
cmp
push
and
movsb
dec
adcw
xchg
loop
jb
adc
mov
or
dec
sbb
xor
mov
jmp
add
fldcw
stos
das
cld
sbb
or
mov
and
inc
imul
clc
dec
sbb
xor
mov
loopne
out
cli
cmp
sbb
xor
les
aad
jg
push
int3
loope
stos
stos
pop
xor
push
flds
sahf
push
add
scas
jbe
sub
jae
jmp
mov
pop
idiv
mov
ret
std
lahf
loope
mov
popf
inc
cmpsb
loop
dec
push
into
xchg
icebp
fildl
sar
pop
les
dec
mov
in
adc
repz
pusha
lret
dec
movb
add
cld
cmp
lea
test
sub
cmp
xchg
enter
into
data16
idivl
lods
sub
jp
aas
and
pop
push
push
mov
xchg
add
outsl
std
sub
add
out
js
jp
enter
movsb
pop
sahf
push
mov
fiaddl
lcall
jb
insb
dec
inc
jne
mov
cmp
xor
out
inc
inc
stos
adc
pop
sbb
in
xchg
sbb
testb
fstpt
and
stos
or
pop
xchg
test
cmp
or
data16
xor
cs
jmp
push
xchg
inc
mov
arpl
shll
push
js
jno
js
sub
scas
shll
repz
out
pop
std
push
xchg
mov
cmpl
add
test
xchg
dec
addr16
mov
repz
adc
repnz
jl
pop
xor
pop
xlat
jle
ljmpw
add
out
movsl
pop
adc
sbb
mov
inc
ja
cmpsl
popf
std
jbe
mov
sbb
popf
andb
or
aaa
sbb
adc
sub
lods
in
sub
pop
cmp
inc
cmp
mov
loopne
xor
inc
push
mov
std
inc
repz
stos
sub
shr
push
push
xlat
mov
lea
movsb
cltd
mov
add
jmp
jns
sahf
push
mov
sub
ja
clc
test
ljmp
icebp
and
movsl
data16
jmp
lret
mov
sbb
loop
sarb
mov
inc
xlat
data16
in
pop
xchg
pushl
jae
inc
not
enter
push
pop
rcl
inc
sbb
bound
add
or
mov
cmp
ret
outsb
inc
scas
movsb
jecxz
loopne
and
cltd
test
sbb
aad
cmpsl
cltd
fnstsw
std
mov
push
hlt
mov
sbb
lock
jbe,pn
xchg
fdivs
add
divb
cltd
imul
push
xor
test
pop
insl
jmp
fadds
fbstp
mov
sbb
or
stos
andl
adc
sub
popa
sub
adc
jmp
popa
cld
and
jae
xchg
dec
shr
fists
pop
inc
adc
fwait
movsb
inc
fs
jg
sub
sbb
pop
out
push
xchg
inc
mov
fdivrl
jae
dec
push
mov
inc
aam
adcb
jl
sub
adc
daa
int3
inc
add
jb
ficomps
pusha
outsl
cmpsl
outsb
fdivp
movsl
fsubrp
and
pop
test
push
lea
jb
cmp
aad
xor
jbe
fcmovnu
pop
mov
pop
cmpsb
pop
pop
adc
mov
shll
repz
rorb
negl
sbb
scas
in
cmp
or
sbb
cwtl
inc
mov
js
popf
insb
nop
pusha
mov
ret
call
fisttpl
loopne
int3
mov
bound
iret
mov
adc
mov
negb
add
inc
nop
in
repz
sar
sub
xchg
or
dec
mov
dec
std
lcall
jae
lods
jmp
stc
jmp
adc
sub
xchg
xchg
sub
orb
mov
xchg
cmp
adc
jecxz
sub
dec
loope
or
pop
push
push
pop
xor
adc
mov
mov
inc
stc
lock
bound
imul
shll
clc
imul
mov
ss
mov
mov
add
movsb
fs
faddl
or
fwait
push
les
in
les
mov
jg
cmp
popa
mov
inc
pop
fwait
xor
idivb
popf
pop
ret
lods
aad
lahf
add
in
inc
dec
xchg
aad
lret
cmp
adc
arpl
ret
sub
sbb
sahf
dec
or
jmp
dec
xor
icebp
add
lds
pop
aas
cltd
xor
in
sub
subb
dec
mov
inc
imul
lret
ret
testb
and
mov
inc
jp
mov
cmp
and
jecxz
mov
mov
sarl
sub
rcrb
out
mov
pop
mov
cli
addr16
mov
aam
mov
test
fcoml
fwait
jp
outsb
jne
in
dec
movsl
mov
mov
xor
aam
imul
shl
dec
mov
fiadds
push
pop
add
aas
sbb
cmp
pop
repnz
adc
out
dec
stos
push
jge
nop
mov
sub
inc
sub
sbb
pop
mov
ljmp
shrb
jno
inc
xchg
mov
jge
xchg
in
ret
ja
lret
lcall
sbb
mul
dec
das
inc
pushf
movsb
insl
cs
xchg
jp
shlb
or
and
add
xor
jmp
jb
mov
adc
orb
and
sbb
lock
push
hlt
and
mov
and
mov
xor
rcrb
mov
popf
jecxz
xor
xor
xchg
mov
ficoms
adc
outsb
psrad
inc
pop
dec
inc
js
shr
loop
mov
mov
lock
arpl
inc
mov
or
push
hlt
xchg
cltd
addl
dec
mov
adc
ja
mov
mov
pushf
mov
js
ds
sub
mov
jecxz
mov
incb
imul
cmp
vmovups
test
mov
mov
xchg
stc
lea
xchg
sub
mov
ret
pop
or
insb
mov
and
fcmovnbe
leave
pushf
iret
jmp
jg
adc
test
push
push
shl
add
add
test
push
push
movsb
pop
dec
les
ds
push
jl
jne
fnsave
jg
adc
jnp
sbb
pop
jns
testb
mov
add
outsb
ror
jl
pop
inc
or
aas
xor
and
push
jno
and
mov
rclb
fyl2xp1
mov
inc
cltd
adc
mov
aaa
mov
lods
or
add
and
lods
mov
mov
jle
dec
pop
jle
inc
jo
adc
and
inc
add
lcall
stos
pop
xor
jge
xchg
xchg
popa
test
orb
dec
cmp
ficoml
data16
add
sbb
ss
push
mov
add
jae
std
mov
pop
mov
cmp
xchg
pushf
xchg
inc
push
loope
leave
jecxz
ficomps
test
imul
inc
inc
mov
xchg
and
or
adc
jl
jno
xor
sub
rcl
lock
lret
fsub
cmc
push
mov
aad
xchg
inc
dec
out
jae
xchg
push
fnstsw
xchg
lea
rorl
push
cmp
push
js
pushf
cmp
ljmp
scas
aam
ljmp
rcl
popa
es
add
lcall
loop
mov
and
jg
call
xorl
pop
je
sub
cwtl
adc
cld
mov
xchg
std
mov
in
mov
nop
xor
push
mov
xor
scas
jl
insl
mov
inc
out
xchg
dec
mov
xchg
in
push
push
mov
adc
push
inc
and
jns
push
jmp
or
inc
mov
push
hlt
jno
daa
sbb
lret
inc
dec
or
fcomps
push
mov
mov
xor
in
dec
in
ljmp
or
adc
sub
mov
out
lods
mov
sub
push
inc
adc
jbe
sbb
loop
lods
xor
add
or
in
mov
ja
loop
jmp
cwtl
testw
sub
add
mov
icebp
mov
ds
jb
jne,pt
adc
dec
stc
cmpsl
lds
stos
mov
loope
cmp
pop
cli
or
push
jl
inc
addr16
lret
jle
inc
lahf
push
movb
jmp
jl
xchg
test
fimull
adc
sbb
xor
xchg
push
xor
fs
fisttps
xchg
and
adc
int3
inc
jg
lods
les
lret
push
pop
jne
xor
cmp
test
scas
push
repnz
ds
adc
stos
loopne
xor
jmp
test
cmp
mov
push
or
push
or
ss
jecxz
jge
mov
xchg
fcoml
jecxz
xor
and
data16
xchg
imul
stos
pop
adc
lcall
add
stos
pushf
aad
icebp
inc
mov
jno
sbb
mov
jbe
repnz
jb
and
jge
data16
cmpsb
imul
div
pop
std
rcrb
pop
arpl
repnz
orl
gs
les
or
pop
cmpsb
dec
gs
or
push
xor
test
mov
cmp
lods
incb
imul
xchg
xor
xchg
cmc
push
test
mov
or
xor
aaa
adcb
sahf
pop
jecxz
mov
mov
cmpsl
mov
movsl
lods
add
fdivrs
movsb
bound
loop
jns
movsb
scas
imul
fnstsw
loop
jo
sub
pop
les
shll
in
mov
xchg
hlt
and
es
out
gs
sti
cmp
iret
mov
imul
lea
pop
popf
aaa
arpl
mov
lret
and
xlat
imul
insl
fs
iret
pop
les
jb
adcb
sub
cli
std
xor
icebp
cmp
fwait
inc
mov
mov
mov
jg
inc
cwtl
fwait
mov
push
das
lcall
es
mov
inc
mov
repnz
push
inc
mov
mov
sbb
mov
aad
out
int3
sarb
or
sub
mov
ljmp
xchg
dec
inc
loop
cmpsb
nop
shl
repz
jle
shrb
in
pop
pop
pop
dec
inc
jae
jb
mov
movsb
cmp
mov
mov
mov
lret
orl
xchg
add
mov
enter
jmp
mov
jne
push
push
cmp
call
adc
lock
jb
adc
sbb
out
dec
or
pop
jecxz
jl
dec
adc
jge
pop
push
cmp
addr16
xchg
sbb
lods
rolb
cmp
mov
inc
mull
ss
cmp
stc
add
xor
in
xor
test
push
adc
call
inc
jge
jmp
daa
aam
push
test
ficompl
xor
je
icebp
mov
jae
gs
pusha
mov
mov
push
jbe
popa
xchg
in
test
inc
sbb
jb
mov
dec
pop
jg
lods
cmc
inc
ret
movsb
stc
add
outsl
sub
repz
mov
aad
inc
inc
loopne
lcall
xor
cwtl
orb
scas
lret
jae
sbb
in
pop
inc
lret
jecxz
jae
push
add
cli
cmp
or
andl
jb
fcomps
pop
inc
jle
fstps
xor
movsb
icebp
mov
xor
xchg
sub
stos
mov
push
inc
std
mov
adc
mov
cs
hlt
scas
js
sub
fwait
dec
pop
cmp
fisubl
xchg
int
lret
cmp
sbb
sub
imul
movsl
sub
call
adc
mov
sub
sbb
pop
mov
iret
fmul
das
adc
jb
cmp
and
std
idivb
xchg
pop
nop
js
ror
and
sahf
fwait
aaa
loopne
sub
repz
mov
and
adc
jne
scas
xchg
mov
sub
add
jne
gs
xor
mov
sub
sahf
insl
adc
jle
adc
sahf
mov
mov
cmp
outsb
pop
jae
jl
sbb
add
cmp
xchg
cmp
into
jo
je
sub
xor
add
jle,pt
les
and
sbb
add
push
sbb
xor
push
loop
mov
inc
aas
into
pop
push
ljmp
fadds
xchg
xchg
lods
out
daa
jmp
cmp
fcoml
repz
cltd
dec
sarl
cmp
in
dec
inc
rclb
lods
scas
loop
xor
pop
inc
push
push
pusha
outsl
xor
leave
ja
or
sbb
je
nop
sub
fs
xchg
push
imul
repnz
test
adc
cltd
inc
gs
sbb
imul
iret
cld
mov
pop
add
in
dec
shl
push
movsl
gs
jnp
sub
in
ljmp
xchg
cmp
add
lock
mov
xlat
enter
mov
popf
adc
sbb
loopne
cmc
cld
cli
lret
int3
imul
loop
mov
fstps
cld
sahf
cmpb
mov
lcall
cltd
pop
mov
and
mov
stc
xchg
adc
lock
mov
cwtl
xor
movb
jle
push
lahf
stos
mov
dec
pushf
mov
push
push
movsl
dec
xchg
call
out
mov
hlt
dec
inc
sub
pop
sub
repz
dec
outsb
inc
sub
inc
nop
lcall
mov
dec
adc
jp
mov
popf
pop
mov
daa
push
out
adcb
aam
cmp
rorl
sub
mov
aad
cltd
dec
leave
bound
mov
jecxz
xor
xchg
dec
jmp
out
in
ret
adc
sub
lret
xchg
xchg
in
rclb
cmpsb
cmp
inc
in
lock
aad
lods
into
cld
push
add
jp
fldl
add
cmc
push
es
mov
int
inc
jmp
mov
jae
push
sbb
shll
stc
jno
mov
lret
aam
sbb
icebp
sbb
int3
add
xor
mov
cmc
psrlq
push
jno
mov
xchg
orb
push
insl
dec
gs
mov
pop
inc
test
xor
inc
dec
xchg
sbb
int
ljmp
mov
ficoms
ss
out
testl
test
mov
enter
arpl
mov
les
enter
insl
les
stos
add
outsl
test
dec
jae
dec
mov
cmp
aam
loope
mov
pop
sbb
cmp
push
testb
or
mov
adc
stos
jo
cmp
add
ds
sbb
sbb
mov
adc
loopne
sub
mov
mov
fistpl
mov
jmp
mov
or
mov
ret
mov
test
icebp
nopl
adc
daa
inc
test
fsubrs
sbb
int3
in
pop
mov
mov
dec
jo
mov
cmpsb
inc
mov
inc
pop
shll
testl
nop
fiadds
xchg
mov
je
jo
leave
icebp
and
loop
aad
stos
aas
or
mov
pusha
xor
push
mov
movsl
pop
push
xchg
lods
mov
ret
int
push
dec
adc
mov
add
dec
adc
and
xchg
subb
lahf
and
fwait
rorb
jmp
pop
mulb
in
inc
imul
and
mov
push
lret
test
lea
push
pop
inc
daa
loop
push
push
xor
adc
pop
outsl
jle
xor
orl
arpl
add
sub
dec
push
hlt
dec
adc
push
ja
dec
or
xor
filds
iret
ficomps
movsb
push
movsb
dec
addb
add
test
out
jae
push
hlt
fdivrl
cs
push
fidivs
mov
sti
dec
xlat
add
ja
xor
sahf
daa
popa
adc
and
xor
cmp
cmp
in
adc
mov
out
dec
sbb
mul
pop
add
mov
jl
pop
push
add
pop
into
aas
icebp
mov
call
sub
aam
xchg
sub
call
mov
fcom
into
mov
add
aam
cmc
pop
cmc
inc
fbstp
add
mov
ret
mov
cmc
dec
or
adc
and
js
adc
xchg
negb
lret
jno
xchg
movl
dec
lcall
xchg
das
xor
jg
xor
cmp
mov
jp
lods
jns
mov
dec
int
sahf
popf
test
outsl
add
nop
dec
mov
push
sbb
jge
test
fnstsw
xchg
ret
mov
jno
and
pusha
ss
inc
leave
ss
loopne
dec
outsl
test
fldenv
adc
cmpsl
and
push
xchg
mov
add
les
aas
and
push
mov
in
inc
jns
mov
sbb
mov
dec
xor
ds
push
jns
gs
stc
ret
arpl
pop
das
jp
jns
fstps
pop
sbb
push
pop
leave
sub
outsl
sbb
add
inc
gs
push
loop
sbb
adc
scas
je
pop
jg
bound
mov
jecxz
loop
sahf
rcr
in
mov
or
mov
xchg
mov
xorl
aaa
imul
ret
bound
mov
ja
sbb
movsb
cld
sbb
adc
mov
mov
lods
faddl
dec
fcomi
fwait
movsl
xchg
movsl
push
pop
repnz
dec
and
inc
add
xchg
xchg
fisttpll
scas
fmuls
jno
jne
call
jge
lea
jnp
enter
mov
cwtl
jp
adc
fadds
stos
sub
in
push
clc
pop
adc
aas
in
sbb
pop
pop
xlat
adc
mov
pop
xor
lahf
xor
and
or
xchg
xchg
in
lods
inc
je
push
in
pusha
mov
imul
out
xchg
jle
jge
adc
mov
sbb
mov
test
add
iret
xor
pop
or
xchg
imul
and
repnz
sbb
in
test
push
add
jae
pop
cmp
jbe
sub
rep
fisttps
cltd
lahf
pop
mov
pop
dec
stos
pop
or
pop
sti
cmp
inc
xchg
cmc
mov
adc
add
cmc
pop
outsb
outsl
daa
mov
int
cmpsb
mov
enter
out
inc
cld
jmp
sub
bound
jp
popf
push
dec
cmp
cmp
add
sbb
aam
xor
add
sbb
mov
int3
sysret
mov
push
sahf
cmp
lods
lods
jb
push
sub
movsl
outsl
lods
inc
and
mov
movsb
outsl
scas
and
pop
dec
fstl
cmp
test
inc
mov
outsb
aaa
enter
mov
lcall
andl
loope
cmp
jp
outsb
add
adc
jmp
mov
popf
imulb
test
cmp
cmp
aas
test
js
cmp
jo
and
xchg
lcall
inc
sbb
jmp
test
ds
das
clc
shlb
dec
pusha
repnz
pop
out
scas
fisttps
sub
or
rdmsr
ljmp
sti
or
test
cs
add
jle
pop
outsb
jns
fcompl
jb
jmp
test
sti
inc
mov
mov
cld
rorb
or
into
mov
int3
push
lds
or
push
lret
inc
lods
cli
insb
pushf
mov
je
sbb
aas
or
stc
inc
fs
rolb
movsl
xor
cmp
or
sub
mov
xor
enter
sbb
pusha
pop
mov
mov
mov
jbe
add
jecxz
lods
pop
popf
sub
sbb
imul
dec
cmc
jle
dec
pop
cltd
or
lods
sub
enter
xchg
mov
shl
call
jb
xor
jge
movsb
fidivl
psraw
push
pop
mov
lret
scas
lret
aaa
lret
xor
sub
idiv
adc
cld
ficompl
inc
mov
push
mov
in
mov
jg
movsl
adc
stos
jns
test
inc
lods
sub
sbb
and
fsubr
mov
mov
iret
std
scas
push
movsb
in
loope
pop
rcl
inc
push
repz
xchg
push
mov
adc
xor
xchg
mov
push
xchg
arpl
dec
ja
hlt
xchg
mov
icebp
es
std
jg
sub
and
fldcw
and
mulb
lods
pop
inc
lret
call
mov
movsb
dec
jge
mov
popf
das
ret
test
jno
sbb
xor
daa
rcrb
loope
test
lods
xchg
enter
dec
dec
test
jecxz
pop
xchg
cli
leave
jne
push
cs
mov
and
pusha
mov
adc
nop
outsl
dec
ret
je
imul
sbb
jl
popw
pushf
fstps
or
and
mov
cld
lods
add
add
fisubl
jle
fdivr
cmc
jne
sbb
hlt
dec
ret
jmp
ret
dec
push
ror
mov
idiv
pop
pop
mov
pop
je
mov
add
insl
lret
cmpsb
imul
sbb
call
adc
add
xor
cmp
push
cmpsl
dec
mov
xor
cmp
rcrb
xchg
and
pusha
and
rol
das
loop
fldenv
mov
clc
daa
and
leave
cmc
leave
mov
xor
jns
jg
jo
dec
xchg
mov
mov
movsb
fstp
cs
jne
or
hlt
jp
add
xchg
loopne
lret
mulb
cmp
aas
xor
push
enter
and
pop
dec
arpl
movsl
jo
nop
arpl
or
or
mov
inc
and
push
mov
adc
add
out
mov
fiadds
nop
movsb
mov
jecxz
cmp
mov
cs
popa
or
add
cwtl
xchg
pushf
cmpsl
and
cmp
daa
xchg
mov
in
fsubrs
shlb
jbe
aam
mov
add
xchg
out
idivl
mov
dec
add
pop
clc
or
fists
sbb
jnp
add
push
cwtl
or
ret
push
jne
fldt
je
sbb
xor
pusha
dec
and
in
sti
adc
ss
mov
and
aam
cmp
pop
stc
and
testb
adc
xor
pusha
enter
mov
lcall
xchg
movd
adc
and
out
mov
push
dec
and
mulb
shlb
rcrl
push
mov
mov
or
out
int3
lods
inc
adc
push
icebp
pop
sbb
and
lods
repz
popa
mov
mov
imul
pop
ficompl
and
rclb
outsl
lods
mov
lret
jp
cmc
xchg
ds
xchg
mov
fildl
int3
push
mov
push
push
dec
and
rcr
dec
jo
dec
jmp
jae
add
mov
sub
add
pop
shll
mov
dec
xor
mov
add
aas
dec
mov
sahf
jecxz
jecxz
add
mov
add
add
or
notl
jmp
lods
jmp
ja
mov
imul
or
call
and
inc
push
out
shrb
loop
in
imul
adcb
or
outsb
xor
data16
add
lds
jecxz
mov
or
dec
sbb
stc
addr16
pusha
jae
add
cmp
in
repnz
dec
xchg
push
outsl
das
sbb
or
popa
fs
iret
or
mull
lahf
test
cmpsb
lret
xchg
lcall
mov
pop
hlt
mov
jmp
xor
lods
jecxz
arpl
pop
mov
pop
arpl
pop
mov
das
xor
shlb
les
adc
pop
cmpsb
std
imul
mov
pop
inc
rcr
adc
cli
and
xor
sbbb
xchg
xchg
xchg
cwtl
sub
aam
mov
cli
leave
or
aaa
and
arpl
cmpsb
loopne
jg
inc
sub
roll
mov
mov
sub
loopne
jne
push
mov
and
inc
push
mov
test
adc
sub
xor
daa
pushf
adc
loopne
xchg
lods
ret
mov
call
pop
stc
test
mov
pop
jbe
in
scas
push
not
in
xchg
sub
out
mov
and
out
icebp
ja
xchg
pushf
push
mov
stos
xor
aam
fsubs
cmp
loop
aas
ret
out
insl
rcrl
leave
mov
lret
insb
mov
add
subl
shrl
ret
cli
push
in
insb
and
mov
inc
cwtl
push
cmp
ret
and
inc
test
aas
xchg
xchg
popf
faddl
mov
stos
fnstcw
or
dec
lods
iret
mov
ret
int3
xchg
enter
rcrl
aam
adcb
negb
push
pop
pop
out
xchg
sub
fwait
dec
out
add
fists
adc
mov
pop
sub
jl
inc
out
pop
mov
inc
push
imul
push
fwait
xor
xor
adc
push
outsb
fsub
sub
mov
push
testl
pop
int
push
add
cmp
mov
scas
or
sahf
push
mov
daa
enter
js
scas
imul
or
cld
sub
cwtl
cmpsl
push
sbbb
in
pop
push
stos
movl
nop
movsb
mov
xorl
ret
sbb
lea
xchg
push
xor
cmpsb
or
test
mov
jmp
outsb
lods
icebp
sub
add
add
aad
xor
cs
push
jbe
dec
dec
xor
jg
xlat
and
outsl
cmpsl
pop
arpl
scas
sub
popa
jb
inc
jns
cmp
pop
and
mov
outsb
lock
mov
movl
into
icebp
lcall
jle
pop
test
sub
mov
ljmp
xor
ss
push
push
es
pop
xor
mov
dec
sub
pop
push
mov
xchg
dec
xorl
cmpsl
lods
pop
and
sbb
std
pop
test
xor
pop
addr16
jnp
and
or
mov
push
jle
mov
popa
orl
movsl
into
jo
mov
cmp
pop
adc
es
hlt
inc
push
adc
cmpsl
dec
dec
std
jb
or
dec
xchg
repz
jns
dec
fs
mov
cmc
fdiv
mov
lret
rclb
xchg
pop
or
outsl
pop
mov
jle
imul
xor
sub
inc
std
popa
hlt
mov
jp
jno
icebp
subb
pop
push
jmp
les
pop
das
lds
hlt
push
call
lods
fisubrs
and
mov
or
popl
inc
jbe
shll
xor
fcmovbe
fsubs
xchg
mov
ja
addr16
dec
mov
int3
cli
mov
idivb
subl
and
push
mov
sahf
dec
enter
in
sub
fwait
andb
sub
fildll
add
mov
jne
inc
cmc
outsl
out
push
xchg
fcomip
mov
or
cwtl
xor
mov
rorl
mov
pop
mov
mov
inc
adc
adc
subb
xchg
jbe
daa
scas
push
outsb
xor
cmp
outsb
mov
lret
and
out
lret
or
lds
loop
in
mov
shll
dec
cwtl
inc
test
cmp
sbb
pop
or
or
aam
sbb
lcall
imul
and
rolb
arpl
in
cmpb
mov
in
adc
mov
lds
loopne
cmp
push
or
int
push
or
pop
popa
enter
faddl
das
movl
xor
jne
dec
xchg
mov
xor
sub
xor
inc
pop
lret
fwait
sbb
rcrl
cmpsl
or
pop
sub
loope
ret
dec
fwait
stc
inc
hlt
iret
call
ret
gs
mov
adc
or
pop
jp
mov
dec
xchg
mov
fdivl
sbb
cmpsl
push
movsl
inc
into
pop
jecxz
test
js
in
incl
mov
pop
xchg
mov
mov
imul
in
into
loopne
ffreep
cmp
mov
jno
or
or
push
out
xor
aas
int
sub
and
push
xchg
mov
sbb
add
je
xor
ret
fs
insb
loopne
cld
pop
cli
movsl
icebp
mov
dec
in
xchg
pop
mov
inc
fsubrl
sub
outsl
pusha
aam
cs
and
sub
inc
xlat
xchg
scas
cmp
test
loopne
mov
testb
cmp
idiv
jge
data16
arpl
mov
add
cmp
outsl
and
dec
jb
insb
or
sub
adc
hlt
ret
push
les
stos
cmp
shl
mov
cmp
jb
push
cmp
adcb
nop
or
int
out
add
fcoms
lea
dec
and
push
outsb
pop
repnz
fdivrs
enter
mov
mov
and
pop
mov
pop
sbb
mov
dec
loop
lods
push
adc
pop
jae
insl
or
inc
add
mov
sti
arpl
sbb
push
xchg
dec
jns
and
ja
outsl
rolb
cmpl
push
dec
lds
aad
inc
jo
cmpsl
pusha
les
in
leave
jge
loop
divb
jo
and
je
mull
ljmp
push
jmp
sub
mov
lret
iret
inc
fwait
adc
dec
mov
xchg
icebp
aam
sub
xchg
fildll
dec
and
push
sbb
subl
push
xchg
and
push
sbb
sti
adc
push
push
in
in
jnp
or
fidivrs
fimull
xlat
xor
ret
shlb
cmp
jle
test
das
in
xor
mov
jge
ds
dec
shlb
jg
loop
pop
mov
out
cmc
ret
mov
push
inc
mov
inc
lahf
lahf
and
cmp
lock
icebp
mov
cmp
lcall
cmpsb
fbstp
es
pop
xor
dec
sbb
daa
xorb
pop
nop
xchg
mov
mov
jb
popf
mov
xchg
stc
imul
pop
lods
sbb
sub
mov
push
cmc
add
add
xor
xlat
imul
insl
int3
pop
and
xor
adc
pushf
inc
pusha
mov
adc
cwtl
mov
xor
cltd
test
and
andb
mov
sbb
das
push
mov
push
add
je
testl
stos
add
fldenv
cmc
int
inc
mov
andl
fwait
mov
dec
dec
xchg
into
std
xchg
sbb
xchg
jb
cmp
lahf
cmp
pop
dec
adc
or
sti
in
insb
out
arpl
push
xchg
xchg
shl
add
dec
cmc
les
cmp
pop
pop
inc
pusha
mov
sub
mov
shl
in
sub
dec
repz
dec
xor
enter
test
dec
test
xorb
hlt
mov
add
adc
in
dec
shll
rcll
adc
imul
pop
or
mov
xchg
push
leave
dec
xor
fmuls
mov
mov
int3
mov
or
rorl
push
push
cmp
lods
pop
and
cwtl
and
push
xor
leave
jnp
mov
dec
test
mov
test
mov
push
jg
push
out
stos
loop
xchg
sub
sub
sahf
cmpsb
std
push
jg
mov
in
mov
cli
lahf
dec
outsb
mov
inc
sub
int
outsb
ss
push
mov
sub
cwtl
and
mov
xor
repz
and
and
add
jno
jg
les
mov
sbb
fwait
dec
add
inc
push
mov
into
daa
fucomip
rclb
mov
mov
arpl
add
js
xchg
jo
xor
mov
jb
mov
mov
cmp
xchg
push
mov
jp
add
test
adc
sahf
xchg
daa
jo
sub
mov
sub
int3
mov
out
add
rolb
and
mov
ljmp
jns
divb
cmp
or
mov
int3
pop
lock
xor
fisttpl
fstpl
roll
push
xchg
inc
test
cmpsb
xchg
ret
movsb
add
es
stc
insl
push
or
dec
in
mov
mulb
addr16
push
push
xchg
lods
in
dec
ficoml
imul
int
es
std
shr
lods
lock
mov
out
pop
sarb
xor
sbbl
pop
cld
sbbb
fldl
shl
mov
mov
imul
xor
or
dec
arpl
das
mov
addr16
inc
repnz
pop
mov
pop
inc
jecxz
add
daa
push
fisttpl
push
jg
cmp
cmp
or
pop
sbb
fst
enter
adc
push
jae
cmpsb
popa
jbe
jbe
xchg
fs
in
adc
out
jmp
add
mov
mov
mov
into
loopne
call
push
jns
pop
pop
or
arpl
dec
dec
mov
push
mov
imul
and
mov
and
jge
lea
hlt
and
mov
dec
aas
or
cmpxchg
lahf
arpl
rolb
jg
mov
mov
push
int3
cmp
pop
add
sub
call
dec
inc
jno
test
lcall
push
mov
lds
add
insl
ds
sbb
outsb
popa
lret
insb
mov
or
sub
jmp
mov
in
outsb
cmp
push
jle
dec
test
fucomp
jo
sbb
popa
adc
xor
mov
pop
xor
adc
dec
pop
call
and
jp
icebp
jb
pop
mov
iret
or
bound
arpl
test
pop
aam
mov
aas
insl
sbb
add
xchg
int3
dec
dec
sub
lds
fdivl
add
inc
jecxz
int3
dec
mov
stc
xchg
push
and
xorl
sbb
in
bound
cwtl
je
and
mov
xchg
inc
movsb
insl
aas
jnp
cli
fs
lahf
stc
dec
fwait
les
sub
xchg
adc
cmpsl
push
or
add
insb
push
shll
leave
xchg
loope
add
mov
aad
sbb
xchg
lahf
enter
cmpsl
enter
add
incb
mov
add
pop
mov
pushf
out
dec
push
fwait
push
add
lock
fimull
test
ljmp
adc
shrl
dec
ljmp
sub
push
and
rcrb
jbe
out
in
mov
sarb
xor
ljmp
xchg
nop
shrl
adc
xchg
mov
jle
mov
js
std
nop
cmpsl
push
cli
add
jo
mov
inc
xchg
mov
dec
popf
clc
clc
ljmp
inc
push
dec
mov
dec
mov
xlat
mov
insb
push
jp
and
push
add
repnz
mov
dec
fbstp
dec
into
insl
out
push
xor
mov
push
les
lea
xor
test
jbe
out
gs
add
mov
or
bound
mov
mov
inc
adc
adc
pop
pop
mov
movsb
cli
push
rcr
adc
jnp
pushf
pop
subl
lcall
loop
jl
sbb
jl
inc
scas
pushf
xchg
sbb
push
imul
push
lock
fcomi
push
in
pop
insl
icebp
push
cld
push
mov
add
inc
push
mov
andl
fisubrl
fcoms
arpl
nopl
pusha
push
xor
pop
scas
push
movsb
mov
sarb
add
fildll
cmc
nop
in
inc
cmp
lahf
or
aas
jne
xor
das
ret
insb
cmp
repz
ret
add
lds
insl
mov
dec
mov
mov
ds
ss
lret
pop
cmp
sub
jle
mov
inc
jg
rcrl
dec
xor
fcompl
cs
and
cmpsl
stos
in
cs
fistpl
outsl
sub
in
out
jge
lods
cmp
lods
pop
sub
cmp
pop
jecxz
in
jnp
and
mov
out
inc
shr
in
pop
out
jno
lcall
push
add
sub
add
mov
jne
ret
push
je
xchg
gs
les
mov
sbb
xchg
xor
cmp
fsts
adc
jns
in
stos
into
push
sbb
inc
mov
adc
jnp
in
dec
adc
test
lds
push
adc
outsb
cmp
aad
stos
xor
ret
pop
adc
xchg
xchg
lock
stos
testb
std
in
popf
xchg
out
ror
inc
adc
sub
inc
lahf
mov
or
lea
fdivl
pop
and
inc
frstor
in
add
orb
mov
rcr
lret
gs
fwait
cmp
out
lock
and
cmp
sbb
or
add
inc
cmp
dec
imul
cltd
repnz
sbb
pop
xchg
push
mov
in
rorb
dec
sbb
das
out
cmp
or
or
pop
adc
or
or
xchg
mov
or
das
jae
les
jmp
lods
lahf
pop
sti
into
arpl
popa
sbb
adc
mov
daa
aaa
adc
push
lcall
ljmp
xchg
inc
mov
addr16
pop
cli
frndint
mov
pop
and
cli
movsl
stos
pop
jae
xchg
add
jnp
jno
xchg
ret
add
dec
fcompl
mov
clc
in
scas
inc
mov
add
mov
js
sub
cltd
push
je
fdivs
xor
push
inc
jne
xor
push
sub
cld
and
inc
test
test
fmull
dec
mov
mov
dec
xchg
add
push
cmpsb
imul
lock
test
cmp
ds
insb
les
andb
daa
jns
inc
jge
and
lds
xchg
ret
inc
adcb
jbe
in
cmp
clc
mov
std
ret
adc
scas
aaa
in
cmpsb
fsubr
xchg
mov
sub
daa
cmp
xor
popf
adc
jl
add
jnp
rorb
mov
fidivrl
adc
es
jbe
les
add
sbb
outsl
insl
shl
lods
xchg
ss
je
adc
xor
aas
xchg
std
sub
xor
out
out
and
movhlps
cmpsb
xchg
dec
push
data16
cmp
dec
scas
jg
fcompl
dec
dec
sub
or
jbe
fdiv
or
clc
sub
or
ret
mov
cmp
popa
push
xor
test
inc
sti
pop
lahf
cltd
out
and
jnp
pop
movsl
iret
or
fsubr
int3
notb
mov
sarb
mov
les
pop
sti
add
cmc
imul
mov
pop
cmp
jmp
fsubrs
sbb
data16
xchg
sbb
shll
into
lret
rcr
xorb
scas
jbe
outsb
jne
pusha
sti
and
adc
sub
mov
jno
stc
add
mov
xchg
cmp
push
inc
icebp
mov
or
cwtl
add
jno
dec
mov
mov
push
mov
rolb
pop
xor
cmp
jo
mov
lahf
ja
push
arpl
cld
or
adc
aam
ljmp
enter
jno
pop
mov
cli
and
lret
inc
data16
sub
inc
or
add
loop
fstl
sbb
fwait
ret
and
sbb
xchg
nop
jns
cmp
aas
mov
notb
jge
popa
rorl
pushf
out
mov
addr16
fneni(8087
sarl
xlat
sub
xchg
fnstenv
pop
push
repz
and
mov
jno
dec
cmp
fidivl
mov
loop
inc
or
arpl
pop
add
mov
sbb
xor
cmc
push
bound
sbb
daa
sub
sti
lods
xchg
cltd
push
cwtl
and
mov
imul
stos
lods
lds
lock
xchg
xchg
inc
and
in
testb
repnz
ljmp
fimuls
dec
pop
push
fldenv
mov
cmp
dec
out
outsl
xor
sbb
sub
jp
xchg
hlt
arpl
mov
xchg
jns
inc
or
cmp
mov
rolb
decl
icebp
pop
out
jne
jg
pop
cmp
mov
and
jp
ret
les
mov
lods
fcoms
cmp
jb
data16
inc
lock
adc
int
push
xor
repz
push
mov
add
push
pop
scas
cmp
and
jo
cmpsb
loop
stos
mov
repnz
dec
hlt
loopne
lods
xorb
icebp
cmp
sub
push
ret
inc
pushf
jl
add
sahf
mov
ficomps
fldl2e
adc
xor
movsb
push
ss
add
dec
dec
popa
sbb
sbb
loop
test
inc
test
scas
scas
out
and
sub
shll
sub
mov
inc
test
sub
push
cmc
lods
inc
dec
mov
orb
dec
inc
repz
int
out
inc
gs
sbb
fsts
cmp
inc
addr16
mov
outsb
pop
call
adc
adc
mov
lcall
mov
sub
daa
stc
jmp
push
push
test
stos
push
mov
cli
lret
addl
jge
push
add
stos
je
inc
add
dec
orb
jge
mov
out
scas
sbb
push
in
es
mov
flds
insl
fisttpll
cmp
mov
movsb
les
and
fnsave
mov
jl
adc
scas
push
mov
inc
es
aaa
pop
fisubrl
cmpsb
pop
pop
xchg
dec
vpaddd
das
data16
cmp
nop
xor
mov
in
cmp
mov
pop
outsl
cmp
ds
sbb
and
stos
mov
pop
into
in
sbb
add
dec
lds
cmp
pop
movaps
xchg
scas
inc
jle
scas
fldenv
or
repz
ror
jbe
loope
sar
loop
inc
addb
iret
stos
sti
pop
sub
add
sarb
in
jmp
sub
adc
or
mov
inc
dec
xor
xor
jbe
loope
out
popf
inc
icebp
adc
shrl
push
test
call
sub
lret
jnp
ficoml
iret
sbb
fadd
push
loopne
pop
dec
cmc
sti
xchg
mov
scas
fildll
pop
jnp
jecxz
sbb
or
in
jg
add
adc
into
sub
test
and
addl
int3
or
xor
adc
cltd
daa
add
xor
xor
sbb
and
or
movsb
ljmp
mov
imulb
outsb
test
out
shlb
je
jnp
pop
inc
mov
test
push
and
cmc
ja
inc
push
shlb
aad
movsl
mov
jecxz
dec
lcall
xor
aad
cwtl
or
movsb
jnp
push
sbb
shlb
dec
out
push
enter
test
xchg
xchg
adc
out
in
add
pop
js
fnstsw
push
jmp
xchg
daa
jmp
orb
aas
pop
adc
dec
iret
and
addr16
incb
pop
insl
dec
stos
jl
ja
clc
mov
push
lea
leave
filds
shll
sbb
mov
out
xchg
cmpsb
sbb
ret
sub
and
or
add
hlt
fcmovnb
stc
mov
les
pushf
dec
push
in
push
adc
xor
xchg
sti
gs
in
push
inc
xchg
jge
cltd
jecxz
insb
cmc
mov
repnz
dec
repnz
test
or
loop
pop
stos
pop
sarb
loope
fisubs
fcom
pushl
verr
add
sub
xchg
out
push
mov
xchg
imul
fcompl
dec
xor
lock
rolb
or
into
jp
cmp
sti
jge
add
xchg
push
insb
inc
out
jne
mov
xlat
push
daa
jg
scas
jle
mov
push
sbb
sub
aaa
int
aam
ss
xchg
cmp
adc
testl
xchg
imul
cmpsl
stos
pop
jge
lret
sub
sbb
leave
fisubl
fisubrs
adc
outsl
jmp
pop
xchg
in
jae
je
in
into
loop
int
push
mov
jns
push
jne
inc
jb
stos
addr16
adc
lret
cmp
inc
outsl
rcrl
int
mov
xlat
inc
mov
add
aaa
popf
mov
xchg
add
mov
push
jbe
xlat
lss
push
outsl
jno
int
scas
pop
ret
clc
jne
cli
in
loopne
lods
jmp
mov
repz
mov
and
js
mov
ficompl
imul
xor
iret
int
sub
hlt
rcrb
or
sub
jmp
aam
push
shr
insb
fisubl
and
xchg
xor
es
dec
mov
push
rclb
mov
lock
outsl
dec
jne
mov
repnz
ss
xchg
mov
mov
lahf
sahf
psllw
data16
jb
cmpsb
pop
cmp
fimull
xchg
jb
je
ffreep
jp
inc
daa
lea
into
inc
imul
neg
cltd
daa
xlat
popf
xchg
dec
clc
xchg
push
mov
jno
dec
mov
stos
push
inc
leave
add
iret
repnz
es
or
fnstcw
mov
gs
lret
pop
jp
inc
fcmovnu
int3
mov
pop
outsb
sbb
mov
stos
ja
dec
jmp
cmc
xchg
inc
js
adc
lock
sbb
inc
mov
ret
lds
enter
sub
dec
dec
mov
shrl
cli
insb
enter
stos
inc
sub
adc
rorl
push
cmp
rcrb
push
movb
sbb
sti
push
je
sub
push
rcrb
xchg
dec
rclb
and
test
dec
ret
or
out
push
imul
mov
cmpsb
popf
or
cld
jmp
daa
mov
pop
into
data16
xchg
mov
sub
dec
out
jmp
pop
pop
cmpsb
out
aas
inc
into
insl
pop
fldt
sub
hlt
pop
test
mov
into
adc
test
mov
jb
xchg
lock
and
pop
xor
and
pusha
sti
xor
sbb
sub
lds
sbb
xor
mov
xchg
out
gs
push
sub
dec
mov
mov
push
fs
pop
gs
mov
shll
loopne
loop
imul
aad
xor
xor
out
push
fcoms
dec
jmp
mov
sub
rcl
and
stc
incl
out
xorb
out
insb
cli
pop
pop
add
add
andl
loop
xlat
dec
cmpsl
into
test
aad
sarb
test
pop
adc
aaa
std
shrb
arpl
in
lret
cwtl
mov
stos
add
and
mov
aam
adc
jnp
shlb
ds
add
adc
hlt
jbe
divl
push
int
sub
adc
add
test
cmp
mov
loop
xchg
cmp
add
push
push
test
imul
or
adc
cmc
adc
std
imul
adc
in
jbe
xor
mov
mov
hlt
outsl
jbe
insb
aam
sbb
fbld
pop
pop
push
je
xchg
add
pop
test
sub
xlat
dec
out
js
mov
mov
call
jg
iret
xor
inc
xchg
xchg
adc
aaa
pop
jae
addl
ja
call
mov
loop
cli
push
inc
cld
shrl
and
add
sbb
divb
negb
mov
adc
push
out
jae
insb
cmpsl
in
push
inc
loop
rcl
sub
cmc
push
add
mov
mov
repz
dec
cmp
xor
xorb
add
jecxz
rolb
shlb
sti
notb
sub
mov
into
movsl
jmp
ret
xchg
push
ljmp
dec
pop
pop
sbb
and
loope
mov
orl
xor
sub
jle
pop
test
pop
cli
sahf
iret
cmp
mov
cmpsb
pushf
mov
dec
adc
and
and
roll
gs
sti
fisttpl
sub
or
mov
in
pop
test
inc
mov
arpl
loope
dec
roll
mov
jnp
add
fstps
pop
push
xchg
cmp
outsb
adc
jp
fstp
dec
cs
mov
dec
mov
les
jae
imul
sbb
adc
enter
loop
cwtl
in
insb
ljmp
das
mov
adc
dec
mov
pop
repnz
lds
fimull
jno
out
mov
test
xor
inc
pop
xor
rcrl
popf
jbe
mov
sub
dec
pop
loopne
in
push
or
dec
ss
push
dec
or
aas
xor
mov
out
push
movsb
push
fcmovb
inc
jo
pop
cmp
out
inc
sub
dec
pusha
or
jp
xlat
scas
xor
fbstp
loope
outsb
mov
sub
das
lock
pop
fs
rolb
fdivp
ficoml
inc
fbstp
mov
out
sti
jp
in
icebp
js
daa
sub
sahf
add
push
pop
mov
loop
in
je
sub
ret
ja
jne
stos
enter
movsl
mov
ret
sbb
and
icebp
dec
push
mov
jnp
adc
jae
push
sbb
cwtl
das
pusha
add
fwait
aaa
xor
sub
sbb
and
sub
cmp
addr16
cld
stos
push
push
inc
push
lods
inc
js
cmp
adc
scas
ret
lret
jge
pop
bound
mov
adc
repnz
xchg
ja
repnz
lock
xor
sbb
dec
rorb
xor
insb
hlt
sub
sti
gs
aaa
sbb
fmull
addr16
jecxz
out
bound
or
sbb
das
cmc
int3
fdivrs
stc
iret
shlb
xchg
fistpll
popf
push
andl
mov
cmc
iret
repz
outsb
aaa
imul
mov
and
adc
into
xor
mov
lret
sub
adc
xchg
sbb
sub
xlat
insb
test
mov
sub
ja
sbb
adc
aas
push
push
mov
pop
std
test
push
fildll
stc
pop
fcmovne
sub
scas
inc
mov
push
iret
fisttpll
shrb
out
xchg
and
cld
icebp
cmpsl
jecxz
xor
adc
nop
test
pushf
add
in
scas
fisubrs
jg
pop
jns
adc
lock
divb
xor
xchg
ret
pop
mov
aas
jecxz
shlb
adc
push
cli
cld
pop
repnz
mov
shl
push
cmc
xchg
fsubp
insb
test
sub
and
add
push
push
inc
fs
and
sbb
push
imulb
cmpl
mov
das
sub
icebp
push
inc
inc
pop
rol
adc
or
out
cld
test
pop
jbe
in
addr16
ds
push
je
and
xchg
in
mov
push
cmpsl
dec
add
ja
pop
outsl
dec
sub
cmpsl
mov
mov
mov
repnz
scas
incb
inc
fildll
mov
pusha
sub
outsl
enter
push
adc
inc
jnp
mov
pop
sarb
jmp
sbb
aam
push
xchg
inc
enter
imulb
orl
pusha
jmp
repz
jge
dec
add
jmp
lea
shrl
push
sub
sub
pop
inc
stc
or
dec
inc
push
mov
insb
cmp
cmc
push
icebp
mov
dec
inc
incb
push
mov
sub
push
xor
jge
jbe
mov
daa
sub
push
jg
frstor
shlb
xchg
pop
clc
fstpt
and
roll
out
push
cmpb
cmc
and
gs
inc
aad
out
fsubs
and
imul
cmp
in
jns
and
jbe
sub
leave
and
push
xlat
jns
mov
push
jne
mov
bound
iret
fistps
jmp
decl
or
jne
or
adc
mov
test
or
inc
gs
xchg
test
insb
pop
jl
out
push
popf
enter
sti
xor
pop
push
cmp
push
add
lock
rolb
cmp
popf
push
mov
adc
push
arpl
out
or
cld
jae
jmp
pop
pop
inc
dec
mov
out
call
data16
mull
xor
fs
out
lahf
jl
ret
mov
in
rolb
je
and
pop
repz
insb
or
call
rcl
test
lock
daa
mov
and
bt
leave
and
mov
pop
lahf
rorl
repnz
sub
cmpsl
mov
pop
xor
out
sub
mov
out
repz
sbb
out
pop
pushf
xor
mov
push
and
jecxz
mov
arpl
xchg
sub
jge
mov
pop
push
jecxz
inc
lahf
xchg
in
int3
jle
add
push
sbb
fdivs
cmp
outsl
push
lods
xor
fiadds
sahf
into
push
add
pop
xchg
jb
mov
movsb
xor
push
ret
mov
add
inc
inc
or
push
imul
mov
push
ds
mov
or
lret
add
jmp
jne
aad
mov
js
mov
or
push
daa
pusha
movsb
or
pop
jle
jmp
mov
dec
outsb
cmpsb
cs
xchg
out
lahf
fcompl
mov
xchg
popf
xorb
dec
scas
adc
imul
incb
jmp
in
outsb
lret
je
dec
push
ret
pop
jne
bound
add
jg
test
sub
mov
mov
or
sbb
jns
and
sub
ret
push
daa
leave
sti
push
shll
orl
arpl
test
frstor
dec
pushf
lock
jmp
fbstp
add
fisubl
sbb
std
je
in
shrb
test
jle
cmp
adc
mov
insb
inc
sbb
inc
mov
sbb
inc
repz
push
pusha
fbld
int3
jg
dec
insl
aam
mov
dec
add
in
add
cmc
jmp
ret
add
adc
and
sub
into
sahf
scas
add
jbe
mov
dec
push
popf
and
inc
aad
push
and
xchg
mov
into
inc
test
sbb
cmp
mov
push
pop
adc
sbb
pop
into
push
add
pushf
mov
dec
enter
clc
pop
rolb
jecxz
shll
xor
jg
sbb
mov
dec
pop
pop
pop
data16
or
ljmp
cs
push
decl
mov
mov
mov
rcrl
fdivrs
loop
in
andl
xor
or
or
lea
adc
pushf
xchg
sub
mov
xor
inc
out
imul
mov
mov
out
cmpsb
sub
dec
sbb
movsl
lcall
cld
roll
stos
dec
js
and
inc
pusha
mov
in
mov
mov
pop
and
es
or
out
mov
iret
or
push
ret
sbb
mov
addl
push
add
loop
je
mov
inc
jno
push
arpl
aaa
pop
mov
imul
pop
clc
and
cmp
sahf
lods
pop
out
cs
cmpsb
add
or
stc
mov
sahf
fdivl
insl
sbb
push
mov
les
aad
repnz
push
sbb
mov
sub
mov
jno
cmpsl
pop
pop
jo
dec
jecxz
or
push
in
aam
jae
fwait
mov
mov
jle
sub
mov
and
cmp
adc
jp
leave
dec
add
mov
out
scas
orb
dec
mov
mov
and
push
rorl
mov
jp
mov
arpl
and
jge
rorl
pop
xchg
inc
pusha
pop
sahf
in
push
sbb
and
cwtl
push
mov
xchg
in
iret
ds
lret
ret
lret
adc
cmp
popa
xchg
jne
xchg
scas
mov
adc
inc
adc
repnz
loop
sub
mov
jae
push
sbb
dec
pushf
cmp
and
mov
clc
packssdw
jecxz
test
push
stos
add
push
andb
cmp
divl
insb
pop
and
cmp
xor
mov
cmp
daa
fwait
cmp
and
inc
jmp
subl
cmpsb
add
dec
div
mov
js
cmp
and
out
inc
sub
sbb
push
push
cwtl
push
and
gs
push
fisttpl
clc
stos
ret
mov
xlat
cmp
stos
mov
mov
jne
hlt
popf
sub
dec
push
prefetch
adc
lcall
mov
fisttpl
andl
mov
cmpsb
dec
clc
lea
ror
movsl
pop
pop
and
add
divb
pop
mov
push
mov
jb
mov
or
sti
cli
jb
leave
in
insb
dec
mov
inc
jge
fadds
xor
ljmp
mov
fidivrl
jne
jns
mov
fwait
mov
test
lret
sbb
inc
xchg
inc
mov
mov
add
or
jne
sti
xchg
sub
pop
incl
test
pop
adc
pusha
repz
mov
shlb
outsl
mov
mov
or
jge
sbb
aaa
sub
cmp
mov
scas
pushf
lcall
jbe
call
addr16
imul
xor
cmp
and
lods
and
loop
lahf
sbb
out
leave
push
and
sbb
lcall
mov
shrb
inc
mov
lcall
jnp
xchg
sti
repnz
aad
mov
and
das
cmp
adc
push
or
lcall
outsb
imul
lea
mov
sbb
jmp
jle
aas
out
cmp
cmpsb
add
push
and
rcll
mov
idivb
push
mov
jae
mov
add
xchg
sub
xchg
imul
add
xchg
ret
int
fstps
lods
out
mov
adc
daa
mov
jne
test
sub
xor
push
xchg
fmuls
movsb
add
xor
pop
pop
scas
cltd
enter
and
lahf
and
xor
jae
jecxz
push
rolb
fmul
lahf
pop
cwtl
inc
dec
loop
mov
sbb
nop
loopne
sti
imul
or
mov
cmp
inc
popf
xorb
cmp
into
dec
loop
or
rcll
call
pop
popl
mov
mov
mov
or
mov
jle
or
pop
mov
push
test
icebp
aam
cmp
and
pop
scas
jge
in
mov
xor
cwtl
lds
lahf
loop
lret
mov
imul
lret
and
pop
dec
cmp
pop
push
enter
jnp
pop
cmp
lea
mov
xor
inc
mov
jp
imul
ret
int3
insb
fildl
adc
leave
outsb
or
xor
push
mov
ret
mov
shll
push
mov
notl
mov
rorl
lret
fidivl
dec
mulb
popa
mov
mov
popa
push
lods
jnp
xor
lret
enter
ds
lret
scas
jno
rolb
nop
loop
stos
cwtl
sbb
je
jbe
or
lret
pop
inc
fmuls
lea
into
lock
lahf
sahf
sbb
sub
inc
pop
repnz
mov
sub
pop
pop
push
pop
sti
push
inc
shlb
push
sub
pop
cmp
xchg
dec
lret
pop
rcrl
pop
cltd
jno
stos
cs
and
loope
cmc
add
in
leave
shrb
adc
filds
test
push
jle
clc
cwtl
orl
adc
mov
jg
ret
lods
hlt
jmp
push
xchg
jg
add
ds
clc
repnz
notl
loope
jne
imul
sbb
adc
push
leave
mov
ja
xchg
mov
test
ss
cmpb
lea
and
jne
adc
ljmp
inc
rcrb
mov
push
lock
shrd
loopne
xchg
outsb
fiaddl
pop
jae
in
pop
xchg
movl
leave
cwtl
xchg
test
pop
dec
xchg
loopne
sub
xchg
push
jb
adc
push
push
pop
mov
cmc
mov
aas
data16
sbbl
popf
adc
es
mov
jle
mov
or
cmp
mov
insl
sbb
dec
pop
les
push
loopne
leave
or
lock
add
sub
mov
stc
push
pop
pop
cmpsb
dec
fistps
dec
sbb
push
call
bnd
out
pop
pop
sbb
mov
or
rorb
scas
cmp
pop
subb
xor
das
push
insl
mov
mov
outsb
mulb
icebp
jno
sub
in
sbbl
nop
lret
aad
movsl
cld
adc
loope
jo
adc
shll
in
inc
jmp
push
fdiv
jge
push
xchg
cwtl
mov
jp
sub
xchg
iret
je
daa
fs
lcall
cltd
pop
sti
lcall
mov
ret
inc
add
test
scas
pop
inc
rol
push
pop
pcmpeqw
mov
enter
es
pop
mov
xchg
fldl2t
cmp
mov
imul
in
add
outsl
rcll
insl
stc
scas
test
sbb
lods
cmp
ja
inc
out
out
add
shll
addb
loope
out
and
in
mov
lcall
xchg
aas
lods
mov
jecxz
xchg
nop
in
add
dec
push
mov
mov
sbb
adc
or
mov
cld
and
sbb
jne
xchg
jg
repnz
xchg
imul
cmc
add
les
jno
rcr
cmpsl
mov
dec
mov
mov
rcrb
scas
xorl
jno
into
sub
in
je
aas
mov
insl
pop
inc
es
xlat
shlb
negl
dec
sub
mov
scas
pop
clc
jl
adc
std
int
inc
or
push
mov
lahf
pop
dec
mov
js
push
and
lret
adc
mov
mov
outsb
sbbb
xor
adc
mov
push
push
negl
mov
cmp
add
jle
scas
int3
dec
pop
mov
xchg
es
cmove
adc
cmp
int3
int3
inc
daa
fwait
aad
in
arpl
stos
std
pop
push
jnp
or
cld
add
filds
lock
jg
rcrl
pop
mov
adc
rolb
lods
addl
imul
adc
lcall
mov
aas
jns
sub
filds
out
sti
enter
insl
fistl
sbb
add
lahf
xchg
cld
xor
out
dec
mov
add
notb
inc
neg
jno
jns
notb
inc
lods
out
data16
cmp
pushf
or
imul
sbb
movsl
sub
push
nop
xchg
test
xchg
jmp
sub
fidivrl
cmp
jmp
lods
addl
fisubl
and
jns
les
dec
jle
mov
dec
test
push
push
sub
jns
test
xchg
enter
pop
cmp
xchg
lret
cmpsl
xchg
adc
mov
sub
xor
push
std
out
push
mov
adc
push
pop
xchg
mov
xchg
pop
lock
push
clc
es
aam
in
ret
xchg
lods
mov
adc
imul
push
add
add
sbb
dec
sar
js
int
test
push
add
sub
repnz
dec
lods
pop
sub
aad
popf
push
sbb
xchg
jmp
imul
xor
iret
orb
adc
sub
inc
add
inc
mov
adc
sbb
lods
insb
roll
bound
pop
and
xchg
aas
clc
jnp
loope
jne
adc
cltd
stos
adc
cmp
test
mov
insb
insb
in
pmuludq
sahf
dec
fcoms
je
mov
divl
jecxz
xor
imul
mov
ja
mov
inc
dec
neg
inc
jb
aad
mov
into
sbb
aaa
sub
pushaw
sbb
or
mov
dec
dec
int3
inc
shld
imulb
sub
cmpsl
pop
aad
call
jo
or
ret
fnstenv
int
pop
scas
pop
out
test
mov
in
lods
pop
gs
mov
ret
xchg
rcll
fisubs
xor
add
scas
btsl
ret
jmp
scas
mov
lcall
cltd
push
popa
jge
out
push
inc
sub
lods
lcall
cmpsb
xlat
call
imul
mov
push
and
sbb
fsts
insb
loope
pop
lods
cmp
shlb
mov
jle
iret
imul
mov
test
fisttpll
outsb
ret
dec
xlat
fmulp
pop
in
add
cmp
sub
shlb
cld
movsl
mov
ds
sbb
and
mov
hlt
mov
push
push
mov
xor
jmp
rorl
xor
hlt
xchg
shl
clc
add
je
inc
int3
or
int3
dec
or
pop
in
cmp
jne
or
jl
into
pushf
xchg
mov
push
loop
pushf
dec
push
adc
jae
mov
jns
mov
and
test
jbe
scas
mov
pop
cltd
popf
cmp
shll
fs
inc
das
xrelease
aad
sahf
ficoms
inc
inc
sbb
popa
add
inc
or
pop
fldl
jl
int3
mov
movsb
pusha
jbe
adc
mov
ret
out
and
iret
push
in
inc
cld
lock
push
pop
loop
das
sub
adc
mov
cmpsl
xor
lods
scas
or
clc
push
mov
fcoml
dec
dec
insb
xchg
lret
les
nop
mov
mov
mov
mov
cmp
js
inc
pop
xor
int
adc
repnz
ret
mov
insl
cmpsb
out
push
pop
fsubs
cltd
sub
movsb
mov
inc
mov
cld
or
add
pop
ja
sti
pop
insb
nop
lret
stos
mov
pop
dec
ja
loope
xchg
add
dec
mov
inc
or
push
inc
test
or
xchg
ffreep
testb
jp
mov
push
idivb
or
mov
loope
fdivrp
inc
sbb
imul
push
jns
bound
xchg
cmc
int
sub
push
out
inc
in
es
jmp
dec
subl
inc
ja
cmp
dec
sarl
mov
popf
fwait
and
sbbl
inc
addr16
mov
inc
fldlg2
scas
ss
mov
or
and
test
dec
lahf
add
cmp
adc
cli
pop
and
xchg
clc
insl
test
pop
and
imul
push
mov
add
sbb
inc
inc
bnd
ljmp
in
stc
adc
jg
rclb
jecxz
add
cmp
cmp
mov
cli
aaa
mov
int3
pop
fxch
sbbw
pop
out
jbe
pop
jp
adc
fdivr
or
cli
cmp
ret
push
add
jge
cmp
ftst
sub
mov
cli
adc
repz
dec
jae
push
cmp
adc
xchg
stc
imull
and
xor
cmp
rcll
repz
mov
xlat
lds
cs
loope
stos
fstpl
rolb
pop
testb
adc
lock
xor
xor
and
cmp
imul
pop
ljmp
jb
jmp
icebp
insl
pop
xchg
aad
and
push
pop
sbb
and
sbb
lea
inc
xor
push
arpl
xlat
adc
sub
cmpsb
dec
shll
psrlw
cmp
jb
inc
xor
stos
stc
sub
repnz
cwtl
adcb
jmp
sbb
push
xchg
cmp
or
pop
mov
dec
inc
or
mov
je
outsl
xchg
cmp
popf
dec
mov
pop
mov
sarl
dec
mov
popf
mov
or
test
aad
movsl
mov
data16
stos
xchg
inc
js
lret
fnstcw
mov
xchg
cli
push
add
inc
push
inc
xlat
xchg
dec
jb
sub
xchg
jo
inc
movsb
mov
jg,pt
out
adc
dec
aaa
xchg
sarb
push
repnz
mov
pop
dec
es
clc
jns
mov
cmp
lock
loope
fnstsw
movsb
xor
out
lea
jmp
enter
out
in
mov
out
jmp
dec
mov
cwtl
sub
fwait
scas
sbb
ffreep
mov
cmp
mov
out
and
xchg
mov
cmp
add
gs
filds
cmp
sbbl
cmp
sti
in
fdivr
call
mov
xor
scas
xor
cli
bound
rcll
fmul
ret
cmc
daa
pcmpgtw
xor
jb
int3
push
ret
sbb
sbb
dec
pop
testb
add
iret
sar
or
push
jae
icebp
cwtl
fisubl
scas
xchg
mov
inc
pop
ss
xor
adc
push
shll
imul
dec
ljmp
push
push
leave
mov
daa
xchg
leave
jae
and
jmp
push
jb
mov
push
dec
movl
icebp
xchg
pop
mov
cmp
push
and
pop
cmc
aad
xchg
adc
xchg
add
sbb
stc
or
lret
dec
inc
lea
mov
scas
inc
gs
dec
das
xor
push
in
xor
xor
addl
sbb
mov
dec
push
ss
and
imul
cmpsl
fildl
or
xchg
cli
das
insb
sbb
scas
push
jne
shr
jle
dec
mov
cmpsb
out
scas
mov
fidivrs
sub
xor
push
mov
stos
sub
mov
pop
mov
and
mov
mov
les
and
and
jae
jmp
popa
push
or
pop
test
movsb
dec
sar
sub
cltd
jge
shlb
fsubs
insl
mov
jns
test
inc
cmp
int3
inc
pop
cmpsb
lods
sahf
popa
sbb
jp
push
xchg
cs
nop
jmp
pop
xchg
stos
pop
and
push
insl
push
mov
push
add
loop
leave
in
cmp
jnp
jne
sub
xchg
lahf
ds
in
push
insb
outsb
jnp
movsb
jae
xor
icebp
push
cmp
and
fisubrs
dec
jo
cwtl
movsl
testl
cmp
cwtl
add
imul
cmpb
daa
add
daa
sarb
bound
mov
outsb
inc
mov
jge
add
jo
xchg
and
mov
loopne
leave
sbb
push
sub
mov
xor
mov
mov
stos
pop
sbbb
xor
inc
test
outsb
mov
shll
jge
lock
cmp
aas
pop
mov
push
jl
xchg
dec
push
mov
xchg
addr16
mov
xor
ja
js
divl
dec
outsl
stos
subb
xor
mov
mov
sub
jb
adc
mov
in
clc
cmp
imul
push
test
pop
sub
loopne
adc
imul
jmp
or
fs
inc
ficoms
jg
test
push
cmp
ret
inc
mov
ret
pusha
mov
inc
and
mov
out
jne
pop
scas
imul
leave
xchg
clc
cltd
mov
pop
pop
aas
mov
popf
xchg
adc
xor
push
lret
or
loopne
adc
jge
cmp
push
xchg
call
pop
mov
cmp
std
shlb
cmp
cmp
movsb
xor
add
lods
cmpsl
scas
jmp
mov
lock
push
in
xor
add
out
inc
jns
mov
xor
dec
scas
cli
mov
lret
xchg
adc
mov
sbb
jb
mov
push
push
insl
imul
sub
vcvtsd2si
push
scas
xchg
adc
bound
jmp
jecxz
aaa
lods
adc
jg
jno
adc
js
enter
pop
push
daa
sbbl
cmp
mov
pop
cld
aam
push
mov
xor
cmp
push
push
clc
pop
ds
cmpsb
cmp
mov
sub
sbb
sbb
xchg
icebp
dec
cmpsl
inc
or
mov
cli
jo
dec
bnd
sbb
imul
outsl
inc
mov
mov
add
xchg
dec
cmpsb
jnp
leave
pop
cmp
cltd
jmp
imul
or
out
cmp
xchg
int
loop
xchg
lcall
or
lds
xlat
inc
dec
outsl
mov
ljmp
fs
push
out
clc
add
leave
cmp
pushf
in
sub
scas
movsl
inc
shll
loop
imul
pop
aaa
cmpsb
dec
aas
or
mov
fistpl
jnp
std
and
xchg
loope
in
and
cs
cli
es
inc
xor
mov
pop
iret
adc
divl
pop
push
sub
scas
sbb
jmp
js
sbbb
cmp
sbb
shr
enter
jno
in
xchg
pop
inc
dec
mov
in
push
cs
add
pop
fcmovnu
inc
or
shll
call
mov
add
lcall
and
jne
ficomps
std
sub
xchg
stos
cwtl
insl
dec
dec
pop
jg
test
test
lret
or
adc
stos
xor
pop
fcomps
and
das
mov
sub
xchg
xorb
xor
xchg
and
fidivs
rorl
stc
sub
sbbb
in
jnp
mov
aad
mov
sahf
addl
xorb
mov
mov
iret
aaa
lret
jns
in
jge
adc
sahf
popa
inc
mov
loopne
add
inc
push
cmp
rcrb
xor
pusha
sarl
and
inc
gs
mov
lock
mov
mov
or
sub
pop
mov
xor
push
xor
xchg
xor
jnp
push
mov
cmc
cli
ret
cmpsl
leave
ja
inc
lods
xchg
xor
mov
mov
ret
jbe
pop
pusha
mov
cld
je
sub
pop
fisubs
push
addl
and
push
or
outsb
jle
mov
push
daa
ret
sahf
dec
sub
mov
inc
sub
add
dec
into
pushf
mov
sub
and
mov
movsb
mov
cwtd
cmp
jge
dec
mov
test
mov
in
cmpl
daa
cmc
ja
loop
mov
fxch
xchg
ret
std
cmp
hlt
out
xchg
pop
test
aad
ljmp
adc
dec
push
movlps
lock
mov
je
data16
mov
cmp
int3
and
xchg
insl
dec
mov
cmp
xor
push
pop
ret
or
sub
imul
insl
sbb
ss
adc
jbe
xchg
mov
out
gs
push
add
cltd
cmpsb
push
sub
sbb
sbb
cs
sbb
xchg
mov
cmpsl
sub
popa
mov
mov
cmpsb
mov
loopne
imul
cmpsb
dec
clc
lods
test
pop
fdivs
mov
ds
movl
xchg
inc
movsl
add
xor
lods
arpl
sti
iret
xadd
faddl
mov
in
xchg
mov
xchg
nop
xchg
stc
clc
cmpl
mov
lods
sarl
jnp
mov
or
jbe
sbb
in
adc
jbe
mov
inc
gs
jmp
mov
jg
push
cmp
ret
sbb
icebp
or
aas
mov
sub
fcompl
mov
sub
mov
mov
jne
add
gs
mov
jae
pop
sub
jle
negb
mov
add
xor
dec
data16
cli
lock
shrb
mov
je
jle
sbb
mov
in
push
jne
push
or
mov
pop
gs
lcall
mov
jnp
lods
mov
sbb
rcll
cli
nop
push
add
insl
scas
mov
pop
jae
add
lret
scas
leave
lods
sub
out
ss
sbb
mov
mov
ja
mov
cmp
popa
pop
mov
or
mov
sub
xor
outsl
or
scas
ret
dec
dec
repz
mov
outsl
sbb
sub
lds
mov
inc
pop
inc
mov
rorb
clc
mov
mov
loope
xchg
sbb
push
xchg
test
inc
rsm
jns
imul
clc
fnstsw
dec
or
mov
data16
cmp
inc
out
movsb
aam
or
jle
jnp
addr16
scas
lock
jmp
pop
out
dec
out
pop
mov
dec
xchg
fwait
adc
movsl
hlt
mov
fmuls
cld
out
fsubl
es
arpl
lods
xor
cmpsl
nop
sub
mov
xor
lock
lods
adc
popa
add
ds
fidivl
xchg
into
dec
adc
jnp
psubusb
or
adc
stos
cmpb
push
xor
add
dec
cmp
xchg
xor
imul
insl
test
aaa
aad
mov
pop
outsb
xor
cmp
cmp
scas
jno
mov
fidivs
imul
into
xchg
sbb
jnp
add
mov
popf
push
pop
jp
adc
pop
jmp
enter
int
je
sub
std
orl
cltd
mov
cs
popa
mov
ja
cmpsb
in
movsl
icebp
dec
cmp
mov
jnp
loope
mov
cmp
es
dec
aas
stos
add
ja
xlat
popa
insl
insl
xorl
sbb
cmpsb
aam
sbb
repnz
mov
inc
pop
ljmp
or
mov
testl
inc
adc
iret
xchg
xchg
out
and
iret
scas
and
jmp
rorb
add
pop
sbb
mov
pop
imul
sbb
push
mov
lret
lret
inc
call
fwait
xchg
out
dec
scas
cmp
jle
mov
inc
into
ljmp
bound
testb
xor
test
pop
xor
inc
fimuls
nop
jno
lret
or
push
dec
js
and
and
hlt
sbb
sbb
jge
dec
dec
push
add
jne
jle
mov
imul
mov
loope
ret
test
push
dec
imul
in
sub
lret
inc
jbe
hlt
outsb
cmpsb
aad
xchg
mov
adc
add
or
lret
and
jge
js
ja
sub
pop
jno
xchg
add
ss
jl
icebp
dec
stos
fcoml
mov
mov
std
adc
imul
out
dec
xchg
int
pop
jmp
push
and
push
inc
or
cmp
clc
popf
cmpsl
imul
add
aad
or
ret
jbe
sbb
ror
add
dec
push
cmp
xor
sti
andl
lret
lret
and
pop
testl
stos
out
mov
and
sub
mov
es
sahf
xchg
movsb
popa
adc
cs
imul
adc
lahf
xor
mov
data16
outsb
xchg
int
push
stos
push
fstl
stos
cmp
jg
mov
pop
popf
fs
movsb
ret
outsl
ret
push
out
xchg
push
js
mov
sbb
jns
sti
mov
ja
cmpsb
cli
inc
ffree
popl
fisttpll
std
inc
into
fistps
aad
mov
mov
push
fbld
xchg
push
cli
enter
fwait
mov
mov
pop
fcomps
adc
faddl
sahf
or
lods
bound
mov
cmp
fs
jo
and
mov
jnp
pop
daa
in
ret
cwtl
ljmp
cmp
jmp
aam
adc
sub
nop
xchg
movsl
pop
sub
scas
sbb
in
inc
mov
cmp
push
mov
xor
xlat
loope
rcrb
or
int3
mov
mov
and
mov
mov
loop
nop
pop
loope
xchg
pop
dec
push
cmp
pop
and
and
outsb
push
and
push
and
jecxz
jns
fwait
out
clc
mov
int3
cli
jbe
inc
add
repz
lea
and
cmpsb
imul
outsb
jecxz
sbb
pusha
jmp
je
xor
fists
inc
pop
xchg
sub
testb
and
jmp
mov
mov
cwtl
push
cmc
jns
push
test
cmp
jle
test
adc
mov
fcomp
ret
popf
lahf
xchg
aaa
xlat
push
mov
jae
dec
push
add
mov
lea
push
fistps
or
or
cld
orl
mov
pop
shll
sti
rcll
test
popf
repnz
stos
movsb
out
adc
lds
mov
dec
ja
xchg
sahf
cmpsb
mov
stos
dec
pushf
sbb
es
fwait
push
cmp
dec
leave
nop
xor
fsubr
jp
test
test
sub
pushl
add
andl
cs
add
adc
inc
in
repnz
dec
lods
mov
repnz
lahf
dec
or
inc
out
daa
sub
xchg
pusha
mov
add
test
add
xchg
fdiv
cmp
outsl
scas
test
push
adc
loopne
stos
inc
cmp
pop
nop
fistpl
inc
add
ret
inc
jge
in
mov
aam
and
push
xchg
mov
cld
out
addr16
in
int
mov
imul
mov
jno
adc
jecxz
vphaddudq
xchg
rclb
jmp
lea
mul
repnz
mov
test
xor
jecxz
push
cmp
push
add
pop
test
jge
mov
cmpsl
fimull
dec
or
sub
movsb
dec
mov
jnp
jmp
push
out
inc
pop
jl
ret
inc
mov
arpl
aam
clc
int
mov
mov
push
mov
xor
movsb
mov
xor
movsb
dec
jp
and
scas
adc
add
test
das
in
pop
pop
popf
or
insl
shl
ja
loop
mov
insb
ret
out
imul
sub
xchg
unpckhps
lret
xor
insb
jmp
loopne
pop
mov
sub
xor
xchg
xchg
or
xchg
mov
jne
rep
and
sbb
and
inc
dec
push
pusha
movb
testl
push
add
loopne
mov
xchg
pop
ds
adc
stos
jle
shlb
push
dec
bswap
jl
xor
in
mov
cmpsl
jnp
int
cs
jl
jae
test
into
xor
adc
popf
dec
mov
lea
mov
push
and
scas
lcall
push
orl
add
cmp
sbb
repnz
cmpsl
mov
sub
dec
imul
cmp
pop
pop
dec
add
cmp
jae
sub
dec
or
mov
xchg
xchg
fs
int3
test
inc
or
dec
test
jmp
loopne
adc
ds
xor
jnp
cld
clc
mov
mov
sub
mov
inc
mov
lds
mov
xchg
pop
push
out
cs
push
out
push
push
and
rcrb
add
pusha
insb
sti
inc
cmp
mov
and
lock
lods
stos
lahf
cld
sub
jecxz
inc
out
repz
mov
push
inc
rorb
add
std
int3
xchg
cmp
leave
xor
div
stos
mov
cld
sahf
mov
popf
cmp
mov
mov
aad
stc
sub
les
cld
bound
jl
cmpl
mov
out
pusha
push
mov
out
sub
sub
or
in
lea
insl
xchg
iret
inc
inc
add
xor
push
lahf
cmp
ret
push
dec
icebp
data16
imulb
sbb
pop
fbld
dec
push
jns
cld
mov
mov
jecxz
cmp
lock
or
push
and
cli
les
inc
xchg
mull
mov
sub
mov
and
stc
inc
imul
es
inc
and
jecxz
fs
jnp
pop
sbb
emms
cmp
out
dec
push
jnp
inc
icebp
pop
lods
cli
jmp
and
push
sar
popa
cmp
push
mov
lret
stos
andb
inc
stos
pop
testb
rolb
cmp
rcl
mov
ficomps
pop
stos
nop
je
dec
push
xchg
push
aas
dec
out
pop
xor
scas
jno
pop
push
outsb
ret
in
insb
pop
dec
push
jmp
xchg
loop
mov
jmp
inc
int3
or
mov
pop
or
xchg
and
mov
xchg
out
xlat
adc
xchg
and
push
xchg
imul
test
mov
in
loope
shlb
nop
push
lock
out
loope
mov
fldenv
repz
inc
inc
jae
dec
mov
mov
subl
test
or
add
inc
add
stos
sahf
and
addr16
push
adc
cs
lret
js
mov
jnp
gs
xor
les
sbb
enter
dec
mov
outsb
push
into
stos
push
xchg
adc
test
sbb
or
xor
or
ficompl
push
pop
outsl
xorl
add
ja
cmp
sbb
cmc
mov
movnti
jmp
mulps
fldcw
ret
mov
scas
xchg
mov
push
lret
fwait
arpl
cmc
or
push
sti
add
mov
test
aad
scas
dec
sub
and
out
jl
adc
outsl
add
mov
in
adc
jle
ficoms
push
xlat
cmp
mov
jge
ds
in
dec
out
dec
dec
das
pop
lods
sbb
popa
xchg
inc
jno
rcrl
pop
stc
or
xor
add
test
mov
les
and
dec
xor
lcall
sbb
lds
psrad
cli
xchg
cld
in
aad
jle
jbe
mov
push
pop
fdivrs
xor
or
ret
lods
or
cmp
int3
ret
jne
scas
mov
sbb
adc
stos
inc
leave
orl
imul
mov
or
xchg
jle
movsb
cmp
cltd
or
inc
loope
push
mov
or
jbe
popl
sub
pushf
pusha
setbe
loope
call
adc
push
lahf
rol
cwtl
jnp
dec
xor
dec
cwtl
mov
fists
xor
mov
inc
xchg
mov
daa
mov
mov
stc
fsubr
or
clc
or
adc
lcall
fisttpl
push
into
test
test
and
dec
aaa
jmp
xchg
cmc
sub
sub
mov
mov
mov
mov
nop
add
setbe
lret
pop
ja
and
loope
into
clc
in
or
addr16
push
pop
cmp
arpl
jno
adc
incl
and
aad
push
out
jb
mov
mov
cmpsl
or
push
into
insb
push
mov
pop
je
pusha
add
mov
stos
ret
pop
mov
jae
pop
pushf
test
jbe
movsl
sub
xchg
lahf
lods
or
jnp
out
repz
push
push
xchg
xchg
pop
mov
xor
dec
jns
adc
pop
xchg
into
add
pop
outsl
push
mov
aaa
dec
sbb
pop
jle
ret
loop
mov
movsb
xor
dec
movsl
rcll
xor
gs
jmp
cmpsb
scas
jg
push
iret
jl
pop
push
in
lret
mov
sbb
icebp
jg
repz
xor
pusha
mov
adc
scas
pop
pop
sbb
dec
or
mov
in
jecxz
mov
shrb
data16
enter
dec
jb
pusha
cmp
fdivp
flds
or
push
sbb
incb
stos
mov
cs
push
jmp
mov
cmpsl
insb
pop
pop
xchg
mov
push
sub
jecxz
pushf
loope
mov
pop
fistpl
iret
add
push
pop
sub
sbb
lahf
mov
push
adc
shl
mov
mov
and
mull
sbb
jbe
inc
sub
int
shll
dec
xor
add
sub
lahf
stc
mov
ja
cltd
mov
fwait
test
pop
adc
fcmovne
js
pop
inc
mov
sub
add
pop
addb
xchg
and
adc
mov
ret
mov
filds
dec
ljmp
or
cltd
xchg
sub
popa
das
loopne
mov
in
sub
xchg
xlat
fbstp
cmpsb
mov
shr
mov
int3
in
mov
shlb
fstl
aaa
push
push
repz
fdivrl
fcmovbe
pusha
call
movsb
inc
insb
test
mov
adc
push
pop
mov
imul
addr16
jl
ja
add
mov
push
pop
mov
or
cmpsb
clc
adc
pushf
xchg
out
out
mov
xor
shlb
arpl
rcrb
cli
jl
hlt
xchg
xchg
xchg
mov
pop
mov
pop
outsb
and
mov
push
insb
inc
lock
jge
sub
sub
mov
pusha
sbb
sbb
fdivrl
test
pop
cmp
test
mov
jmp
into
fisubs
mov
popf
scas
mov
dec
cmp
data16
movsb
test
dec
pop
pop
add
in
mov
out
rcr
sbb
es
sti
sub
adc
mov
jl
jl
xchg
loope
adc
inc
insl
adc
pop
das
into
scas
aaa
pop
inc
rep
mov
icebp
pop
cmp
xchg
mov
jae
dec
aas
add
mov
mov
test
clc
ficomps
data16
icebp
dec
in
jl
mov
mov
add
call
fidivs
add
lea
fdivrp
push
push
adc
mov
dec
les
cwtl
or
fcomip
movl
ss
mov
data16
dec
pop
add
ret
neg
mov
sub
adc
fidivrl
bt
xor
fisubrs
subb
lods
outsl
add
mov
push
in
sahf
cmc
adc
sti
daa
cli
mov
inc
int3
repz
inc
jb
sub
mov
test
jg
arpl
push
cmpsl
push
in
jae
pop
ficoml
ret
leave
popf
mov
test
rorb
add
pop
cmp
adc
jg
hlt
stos
les
adc
mov
cmp
mov
out
and
mov
jecxz
inc
shlb
xor
jp
cmp
xorb
mov
add
xor
mov
arpl
pop
jle
push
adc
push
je
cmp
push
xchg
jg
pop
scas
sub
jmp
mov
mov
ja
cmp
mov
dec
xchg
les
or
jbe
dec
out
enter
movsb
aaa
int
pop
sub
push
lret
insb
loope
hlt
out
pop
fisubrs
jae
ljmp
faddp
dec
test
mov
je
inc
lods
je
fstpt
pop
xor
or
ss
ds
shrb
jge
sarb
mov
add
jae
ds
xor
push
movsl
adc
push
movsl
bound
shll
pop
out
pop
pusha
push
pushf
sub
sbb
and
inc
test
lret
mov
dec
push
xor
fidivrl
in
adc
loope
ja
sahf
xchg
mov
dec
insb
fimull
ficoms
jae
cmp
sub
mov
push
sarb
cmp
cmova
ja
pushf
xchg
xor
or
enter
add
fnsave
jp
xor
sub
adc
jne
gs
mov
mov
cmp
pushf
ds
das
push
mov
adc
rcl
sbbb
lcall
push
bound
cmp
pushf
mov
stos
and
std
mov
testb
fstp
andl
sub
js
cmp
ret
fidivrs
scas
or
leave
insl
pop
aaa
sub
cmp
push
jno
dec
sbb
dec
pop
sbb
mov
jb
std
inc
push
in
jb
adc
in
jle
lret
mov
shlb
mov
mulps
leave
push
fildll
dec
sahf
pushf
add
add
jecxz
bound
add
pop
sub
test
nop
mov
repz
icebp
dec
out
mov
pop
cmp
dec
sub
pop
jl
pop
sub
or
shl
sbb
dec
pop
es
and
lahf
mov
jmp
sti
outsb
cmp
jmp
and
aaa
loope
fxam
into
fwait
int3
addr16
in
cs
sub
stc
sub
mov
addr16
decb
sbb
stc
inc
fst
cmpb
mov
pop
vmovss
cld
test
fnsave
or
dec
and
cmp
pusha
inc
mov
sbb
jb
or
and
pop
scas
jp
icebp
in
xchg
mov
insb
jbe
push
daa
inc
pop
inc
xchg
pusha
push
pop
xchg
movsb
jmp
pop
jb
popf
frstor
add
sbb
fstl
hlt
pop
loope
orl
or
lret
aad
dec
xor
movsl
testb
outsb
or
mov
js
sub
push
fdivr
stc
add
out
mov
imul
inc
xchg
jecxz
test
fucomip
testl
in
loop
aaa
imul
scas
push
and
ds
mov
outsb
xlat
js
xchg
jae
inc
or
push
jl
jmp
ljmp
neg
fiaddl
dec
rol
xchg
sbb
ret
and
mov
adc
lcall
adc
in
addr16
out
shrl
xor
sbb
adc
scas
pushf
jp
mov
sbbl
pop
adc
mov
inc
aas
xor
dec
pushf
inc
dec
ljmp
and
pop
jmp
test
cltd
rorl
mov
pop
loop
sbb
out
mov
pop
sbb
xlat
test
cmp
cli
cli
add
setbe
aaa
scas
jne
dec
inc
mov
push
mov
xchg
repnz
dec
in
xor
aaa
mov
inc
jb
xor
and
xchg
pop
mov
push
xor
shll
aad
xor
sbb
fisttpll
cmp
loop
jnp
cmpsl
sbb
push
pop
xor
pop
cli
jbe
in
testb
cmp
xor
sub
mov
stos
dec
add
or
out
lret
cwtl
shl
out
dec
in
adc
lahf
xchg
sub
cmp
daa
fwait
rolb
mov
movsb
das
mov
call
pop
icebp
aas
add
and
dec
test
stc
jae
mov
popa
leave
xchg
nop
bound
push
testl
jecxz
mov
mov
repnz
sub
sub
jo
xchg
out
sbb
inc
dec
pop
pop
ljmp
bound
mov
adc
xor
jnp
inc
inc
popf
add
stos
rcrb
push
add
ss
lcall
mov
pop
inc
mov
outsl
sbb
lcall
jo
adc
adc
outsl
imull
xchg
sbb
cmpsb
inc
lds
repz
and
subb
cs
jbe
xchg
inc
movsb
sbb
inc
jne
int3
inc
pushf
cmpsl
mov
in
push
sub
aas
jmp
jae
mov
ljmp
jbe
dec
or
out
lods
pusha
push
pop
fdivl
xlat
mov
lret
adc
add
pop
jne
fs
adc
sbb
movsb
int3
push
fidivs
jns
cmp
lds
fdivl
mov
adc
xor
push
cmc
sub
push
jnp
aaa
mov
aad
mov
fwait
or
jo
and
inc
ss
jo
ret
jle
push
sbbl
push
mov
xchg
push
jecxz
cmpsl
cmpsb
jge
test
aad
lret
adc
mov
pop
data16
mull
jae
add
sahf
mov
in
pushf
pop
jle
xchg
outsl
inc
inc
in
xor
lcall
int3
push
std
add
mov
add
popa
int3
jae
es
rcrl
push
xor
inc
ret
or
cmp
inc
sub
stc
mov
add
mov
mov
sbb
outsl
mov
add
adc
xchg
movsl
jno
and
xchg
sbb
cli
bound
imul
or
adc
clc
in
loope
mov
jecxz
scas
or
sbb
std
add
push
mov
ja
dec
dec
lret
jmp
cmpsb
cmpsl
mov
jbe
sbb
movsb
adc
or
dec
and
movq
push
mov
ljmp
adc
lea
lret
sbbl
ss
sbb
stc
lret
inc
addr16
xchg
dec
mov
adc
or
jb
cmc
dec
fimull
or
inc
push
jo
push
mov
or
mov
sub
jle
pusha
das
xchg
in
cld
mov
jne
adc
ret
pop
xor
ljmp
inc
les
jbe
fwait
push
inc
imul
push
jns
push
jo
mov
call
pop
mov
stc
push
mov
adc
in
push
test
sarb
in
cmpsl
sbb
popa
lock
aaa
jae
cmp
sub
sub
push
shlb
add
push
arpl
cmc
pop
imul
cs
shrb
scas
fnstsw
out
xor
in
pop
mov
pop
adc
inc
bnd
fxch
shrb
pop
pop
xor
mov
inc
push
in
jae
movsl
add
mov
lods
mov
sti
mov
xor
sub
cli
or
mov
pushf
or
pop
movsb
jp
or
mov
ss
vpxor
xor
lods
lahf
pop
insl
or
fcoms
cmp
mov
jecxz
lds
mov
mov
pop
push
mov
addr16
jp
fdivs
push
add
pop
insl
mov
addl
aas
mov
cmp
loop
mov
lock
or
sub
rolb
or
mov
pop
pusha
mov
push
adc
mov
xor
negb
jg
test
insb
imul
pusha
xchg
sbb
jo
jmp
sbb
ds
mov
loope
leave
pop
lahf
mov
imul
out
test
es
fsubs
rorl
insl
sbb
xchg
aam
xor
mov
xchg
pop
sub
insl
mov
sub
xchg
add
jno
mov
and
or
inc
loopne
out
pop
sub
arpl
fs
stos
repz
sbb
cmp
into
push
adc
hlt
cmc
jnp
dec
cmp
dec
pop
test
pusha
dec
pop
mov
adc
or
pop
cmp
repnz
fldenv
fptan
enter
push
outsl
mov
sbb
and
pusha
lock
dec
add
xchg
mov
jg
mov
into
adc
sbb
adc
clc
xchg
and
mov
repnz
das
mov
jmp
pop
cli
push
in
outsb
cmc
or
mov
arpl
into
addr16
hlt
adc
mov
add
jnp
test
sbb
iret
and
mov
mov
repz
test
fsubs
pushf
sub
pop
decl
mov
cwtl
mov
lea
inc
ds
aad
sbb
cmp
xchg
enter
xor
loope
cld
cwtl
push
inc
into
jmp
mov
adc
outsl
mov
rolb
mov
das
rcll
sbb
nop
pop
cmp
pop
enter
out
cmp
mov
outsl
adc
mov
cmpl
pop
jbe
jbe
mov
dec
fwait
sbb
and
adc
push
mov
adcl
enter
mov
sub
cwtl
cmp
in
jle
mov
pop
movsb
rcrl
call
mov
jmp
pop
lret
cmc
orl
pushf
xor
mov
ret
dec
movsb
dec
sub
push
rorb
inc
clc
add
xchg
in
and
sbb
mov
or
fcomi
xchg
shl
roll
outsb
inc
es
lret
jbe
xchg
imul
xchg
sbb
mov
frstor
test
aaa
jle
js
in
mov
in
sbbl
shll
popa
insb
pop
movsb
shrb
add
mov
loop
pop
xlat
dec
insb
sti
sbb
or
pushf
cmp
aad
cwtl
xlat
int3
aaa
lret
inc
pop
push
mov
enter
dec
rcr
mov
mov
mov
cmp
int
or
lock
jmp
lcall
xor
pop
ljmp
outsl
fs
and
mov
pop
mov
cmpsl
jg
sub
pusha
jmp
adc
sub
or
pop
hlt
push
lret
pop
push
pop
pop
xchg
enter
push
in
cld
neg
jno
and
jno
xchg
mov
lods
sub
mov
faddl
push
cmp
lret
push
fldt
xor
dec
xor
dec
mull
cltd
cmp
sbb
out
mov
and
out
mov
push
insb
sub
rcll
sbb
shlb
jg
cmp
test
shlb
pop
push
mov
pop
or
cmp
mov
scas
test
flds
mov
fwait
mov
add
dec
lock
nop
mov
pop
icebp
addr16
cmpsl
xchg
mov
xor
xor
mov
int3
call
ret
inc
push
cltd
lcall
mov
loop
ljmp
inc
test
in
push
push
or
jecxz
jp
aam
or
xchg
pop
xor
mov
and
dec
mov
ja
loop
cmp
add
dec
xchg
mov
push
xor
cmp
aaa
arpl
hlt
sub
push
lea
pop
mov
out
mov
cmp
inc
ds
mov
cmpsb
xchg
int
stos
add
or
mov
push
cld
cltd
icebp
jo
enter
jno
mov
stos
or
stos
lea
xorl
pop
js
inc
ljmp
mov
xor
sbb
sub
negl
aad
xor
mov
xchg
push
je
cmp
mov
loope
ret
add
mov
test
jle
out
xchg
lods
bsr
stos
roll
lret
and
int3
sub
clc
mov
lcall
pop
lods
dec
insb
adc
cmp
fxam
dec
mov
push
inc
mov
dec
loopne
pop
div
mov
movsb
push
inc
sbb
mov
mov
aam
test
sbb
dec
push
push
xor
fsubrs
in
lods
cld
bnd
jbe
dec
loope
sbb
sub
bound
addr16
les
mov
out
jp
mov
or
das
mov
aam
jbe
jmp
ss
jnp
fcmovne
loope
push
dec
inc
jle
mov
pop
call
rcll
jae
and
ss
sbb
pop
ror
inc
sub
push
jne
out
rcrb
cld
push
out
sbb
add
aas
fists
dec
sbb
testl
test
dec
inc
xor
or
or
fnsave
xor
iret
xor
das
cmc
mov
mov
jecxz
addr16
imul
sbb
xchg
mov
fsubs
gs
hlt
int3
push
cmc
mov
jmp
insl
lods
xchg
imul
lods
cwtl
push
push
rorl
jbe
mov
fisttpll
pop
rorl
in
xlat
mov
ja
js
pop
fucom
or
js
ja
add
movsl
je
lahf
push
stos
push
xchg
cld
cmp
and
mov
enter
dec
mov
adc
ja
xchg
test
jb
push
pusha
push
pop
mov
mov
cmp
stc
rcrb
inc
jne
mov
push
mov
cld
add
push
std
into
hlt
cld
xor
test
out
dec
jbe
mov
push
test
sbb
push
jo
into
call
imul
jns
aas
loopne
xor
loopne
cmp
movsb
mov
pop
cmp
test
xchg
sti
or
mov
outsl
push
mov
aas
xor
scas
rorl
add
outsb
add
out
cltd
sbb
stos
and
jecxz
cmp
add
mov
push
rolb
test
mov
pop
mov
addb
mov
movsb
sbb
push
xchg
xor
push
aam
sub
cmp
cmp
push
lods
add
sub
mov
xchg
in
enter
lcall
out
add
or
out
lds
cmp
and
xchg
jmp
pop
test
dec
ret
cmpsb
in
sbb
stos
lcall
push
mov
testl
inc
and
sub
jmp
pop
cmpsl
je
in
fucomp
pop
sub
out
loop
fldt
jmp
test
adc
aad
inc
test
sbb
push
ja
and
pop
fcoml
sarb
or
mov
insl
pop
xor
adc
stos
call
lcall
push
subb
mov
pop
add
nop
hlt
clc
push
cmp
dec
in
adc
divb
test
xchg
lods
cli
dec
xchg
push
jp
push
icebp
sub
test
sub
repnz
jb
js
inc
insl
mov
and
js
jle
aas
mov
sub
add
insb
outsb
dec
push
loop
ficoml
cmp
mov
outsb
add
pop
mov
frstor
gs
push
cs
sbb
push
sbb
or
dec
sbbb
mov
dec
xor
push
cwtl
lds
xchg
shrl
ss
push
sbb
shll
mov
mov
es
ljmp
aam
int
out
mov
inc
insb
cmp
xor
sub
adc
or
adc
adc
sub
dec
push
and
jns,pn
ret
test
shlb
sub
js
daa
shll
out
jbe
xchg
inc
adc
pop
add
cltd
xchg
sbb
fucomp
adc
dec
jge
cmpsl
mov
cmp
cltd
lcall
stos
adc
push
std
shr
push
outsl
test
outsb
insb
scas
adc
or
push
ljmp
mov
mulb
repz
sub
pop
sbb
inc
lcall
or
stc
sub
cmpsb
or
rcll
ret
mov
mov
dec
cmpsl
rorl
mov
leave
inc
hlt
pop
xchg
movsb
out
cltd
xchg
mov
lahf
cmp
sub
pop
mov
aaa
iret
in
repnz
and
ret
xchg
in
pop
int
or
pop
cwtl
sti
add
push
jge
xor
or
cmp
shll
fmuls
add
sub
pushf
sbbl
hlt
ss
xchg
cmc
lahf
add
dec
call
sarb
divl
jo
in
jmp
cmp
aaa
frstor
les
mov
mov
in
aam
std
js
dec
sbb
add
pop
js
inc
jbe
add
sbb
inc
jle
lea
inc
adc
pop
mov
lods
adc
mov
pop
fisttps
mov
add
mov
fbstp
sub
js
shll
dec
clc
outsl
dec
jle
inc
xor
mov
push
cld
dec
inc
imull
insl
pop
sbb
stos
cwtl
lea
out
mov
rcl
xor
jb
mov
add
pop
stos
pop
ror
adc
mov
lock
sar
sub
call
loopne
dec
incb
mov
mov
out
stos
test
mov
cmp
sbb
sbb
cmpsl
outsl
lahf
addb
or
je
push
lcall
or
push
insb
ret
in
lock
aaa
scas
subb
rorl
sbb
les
pop
jnp
pop
mov
lods
add
sbb
mov
test
jmp
cmp
pop
outsl
mov
in
xlat
cmp
cwtl
pop
xchg
outsl
xor
cs
in
xor
lock
cmp
bound
xorl
xchg
ds
imul
call
cmp
rcrb
sahf
enter
inc
repnz
lret
cmpsb
aaa
sub
or
push
sub
out
daa
jne
hlt
fcoms
mov
loop
subb
xor
xchg
bound
xchg
pop
xchg
test
jl
mov
xchg
push
pop
mov
mov
popa
cltd
and
pop
fistpl
adc
clc
jo
mov
gs
fs
pop
jb
into
lea
and
adc
xchg
mov
jl
push
inc
pop
xchg
call
pop
xor
stos
aaa
push
fisttpll
dec
pop
push
les
fwait
sub
movsb
repz
mov
arpl
mov
inc
cmp
adc
or
rcr
add
cmp
rcrl
scas
and
inc
mov
xchg
push
dec
fiaddl
out
pop
lret
aaa
sahf
addr16
test
fstl
adc
jne
sub
jbe
jne
jmp
push
xchg
les
mov
xor
push
sub
jle
cmp
pmuludq
stc
xchg
test
pop
flds
jnp
lret
sbbb
adc
movsb
push
enter
psubsb
data16
scas
mov
sbb
jno
imul
pop
pop
icebp
cmpb
cli
xorb
jnp
mov
in
pop
lds
popa
jns
mov
mov
mov
mov
jmpw
pop
cmp
adc
sbb
outsb
pushf
and
push
mull
fwait
push
pop
repnz
arpl
pop
ret
sbb
rol
mov
iret
test
cmp
in
gs
aaa
scas
or
out
mov
scas
andl
jne
pop
push
pop
cmp
lds
hlt
mov
sub
shrb
out
call
popa
mov
inc
decl
movsb
das
xor
jmp
xchg
ficoml
xchg
mov
mov
pop
xor
loop
pop
fs
jne
stos
clc
sub
xchg
lret
insb
pushf
sbb
pop
and
dec
roll
xor
addr16
pop
jle
ds
mov
stos
push
and
lock
sbb
repz
fsubr
rorb
adc
push
push
push
mov
lods
mov
add
stos
jne
mov
mov
push
mov
cwtl
insl
fbld
sbb
scas
pop
pusha
or
and
push
cmpsl
aam
sbb
mov
adcl
jge
xchg
lods
in
in
pop
nop
nop
int
dec
shlb
iret
mov
pop
fsubl
filds
lds
cmp
ficompl
xchg
aas
pop
jae
adc
ret
data16
mov
jb
jecxz
testb
dec
cmp
mov
sbb
mov
lret
inc
push
jbe
push
mov
xor
mov
cmc
movsb
xor
mov
xchg
scas
jns
outsl
iret
imul
mov
lret
jne
and
inc
fistl
push
mov
sub
jmp
adc
cwtl
add
test
adc
sbb
xlat
push
lds
dec
cltd
lret
dec
xor
jno
adc
xlat
mov
pushf
es
fchs
cmpsb
cmp
xor
and
push
pop
and
call
insb
and
and
mov
xor
xchg
mov
adcb
and
push
in
cmpsb
ss
gs
leave
pop
mov
cs
xchg
insl
aaa
push
orb
pop
jmp
push
mov
popf
lcall
xor
jae
cwtl
lret
and
test
lock
cmpl
jg
sub
lods
outsl
push
mov
mov
das
lret
inc
adc
inc
sub
repz
mov
mov
mov
repnz
push
push
xor
pop
pushf
dec
mov
or
shlb
xchg
jecxz
sti
nop
loop
xchg
sub
xchg
cltd
xor
clc
test
lret
or
adc
stc
stos
cmc
mov
pop
loope
jle
xor
inc
es
sbb
dec
out
cmpl
mov
jb
jle
xchg
pushf
into
in
std
pop
jnp
lret
and
adc
iret
inc
cmpsl
pop
pop
pop
movsl
add
aas
xchg
add
mov
scas
rcrl
xchg
inc
das
ja
or
xor
mov
aam
xor
cmpsl
mov
fbld
jno
iret
pop
sub
sub
sahf
loop
add
and
stos
sbb
dec
imulb
xchg
mov
and
mov
pop
dec
lods
in
iret
mov
lret
out
sahf
jle
rcrl
push
sbb
ret
sti
mov
mov
test
push
int3
lahf
push
cmp
dec
push
sbb
aas
shll
lds
fsubrl
bts
push
cli
into
inc
dec
sub
mov
jmp
xchg
fs
add
das
jbe
aad
jbe
imul
xor
dec
sbb
xchg
pop
inc
and
stos
insl
call
sahf
std
push
subl
cmpl
iret
js
xchg
dec
adc
mov
int3
push
out
lods
push
adc
int3
jge
jmp
mov
jb
jecxz
popf
jge
test
mov
dec
and
xchg
push
rcl
aam
popa
cli
jnp
push
lret
adc
push
in
inc
sub
test
rorb
jecxz
les
ja
xchg
aas
hlt
mov
sahf
sahf
mov
test
rorb
scas
pop
pop
mov
adc
stos
addb
mov
hlt
dec
jge
mov
mov
and
push
test
pop
push
sbb
push
cmpsl
cli
fucom
data16
sbbb
shr
push
fidivl
sbb
aad
mov
inc
imul
add
jmp
dec
in
jle
push
adc
test
sbb
sbb
pop
aaa
push
test
lea
ds
icebp
lea
fsubl
lahf
pop
push
mov
jg
xchg
pop
sti
es
test
in
push
xchg
dec
mov
dec
in
arpl
imul
mov
or
jge
xor
mov
out
inc
sub
jge
insb
jnp
adc
pop
gs
xchg
setnp
and
push
int
outsl
stos
sub
mov
push
jl
inc
ret
mov
cwtl
mov
sub
adc
xchg
cmc
push
xchg
decb
dec
faddl
movsl
lea
cwtl
mov
cmp
test
lds
mov
xchg
mov
imul
push
fstpt
xor
dec
popa
pop
aaa
adc
movl
idivl
cmp
sub
shl
pop
xchg
xchg
sbb
jmp
push
imul
mov
cmp
in
mov
out
int3
imul
sbb
data16
inc
add
mov
xor
lock
rcll
jae
adc
cld
aaa
push
mov
pusha
andl
mov
xor
lods
or
repz
loopne
inc
imul
mov
cli
mov
and
test
sbb
std
push
pop
lcall
mov
sbb
in
movsb
jp
and
imul
movsl
cmpsl
lods
stos
and
xor
imul
mov
outsl
decl
sub
jno
adc
xchg
jmp
lcall
or
jns
dec
loopne
in
int3
cmp
xchg
je
mov
and
sub
dec
dec
mov
cli
pop
jmp
push
imul
icebp
rolb
pop
mov
out
cmp
xor
shll
into
mov
mov
adc
insb
out
mov
pop
xchg
das
into
cmpsb
rorb
cmpsb
jbe
fldl
fmul
addb
out
jae
sub
enter
in
xor
adc
inc
and
inc
pop
add
mov
inc
sbb
loop
fwait
xor
jns
jp
sbb
xchg
loope
mov
xor
push
mov
enter
xchg
fstpt
je
sahf
cmc
jbe
adc
int
push
inc
std
jbe
cwtl
pop
cmp
insb
lds
adc
xorb
xchg
mov
aam
mov
and
pop
fimull
dec
jge
mov
js
sub
adc
aas
inc
ret
stos
clc
inc
sub
and
fs
mov
xchg
add
js
cmp
mov
ljmp
fbstp
mov
fisubrs
mov
cmpl
int3
fwait
sub
lahf
push
cltd
pop
repnz
mov
cmp
dec
jecxz
and
add
cld
fstpl
mov
aas
mov
jp
sbb
push
das
add
not
es
add
js
pushf
not
cmp
push
rcrl
xor
sub
imul
insb
mov
pop
add
dec
out
mov
fdivs
adc
inc
add
cli
rcrb
xorl
lea
mov
rclb
mov
sub
loopne
std
mov
stc
shrb
cmpsw
xlat
push
ret
inc
in
sbb
xor
push
mov
shlb
and
sbb
cvtps2pd
cltd
mov
xchg
aas
xchg
daa
rcll
iret
sbb
and
inc
sbb
push
xorb
xchg
mov
rcrb
in
je
iret
add
daa
xchg
sbb
push
jno
pop
das
adc
movsb
divb
xor
cmpsl
ljmp
cli
push
cmp
jo
rolb
pop
test
push
int3
repz
insb
push
outsb
sub
cli
lods
adc
or
pusha
out
pop
jo
mov
std
enter
sbb
stc
movsl
rol
data16
inc
mov
push
in
push
bound
dec
call
hlt
inc
dec
push
inc
jle
mov
test
sahf
outsl
hlt
jg
fsubrl
jbe
popa
movsb
ja
jnp
jbe
mov
popf
mov
rorl
lods
cmc
enter
lahf
test
and
fisttps
add
push
ljmp
shl
dec
lds
sahf
add
arpl
sub
in
lods
cmpsb
les
mov
int3
into
pop
loope
sub
outsl
loop
sti
rcll
jle
in
lret
cmp
sub
mov
call
push
push
stos
pop
add
cmp
inc
sbb
pop
adcl
push
jno
int3
mov
out
adc
pop
add
or
loopne
sti
lods
int
lcall
mov
test
inc
cmc
mov
outsb
aad
push
sahf
nop
shlb
enter
pushf
sub
dec
mov
aas
xchg
test
test
and
shll
insb
jl
leave
addr16
jecxz
into
or
adc
popa
mov
mov
clc
in
push
aaa
sbb
jbe
inc
adc
pop
std
negb
ss
xor
inc
and
push
adc
lcall
mov
sub
xchg
xchg
mov
insb
iret
xchg
orb
xchg
out
fs
ret
cmpsb
adc
adc
sar
es
push
xchg
jecxz
adcl
inc
add
cmp
ret
test
inc
punpckldq
fnsave
inc
dec
mov
scas
pop
out
cmpsb
icebp
jp
mov
cltd
outsl
cmc
int3
rcll
es
loope
mov
cmp
pop
sbb
xor
dec
push
imul
clc
sbb
sub
ss
subl
jle
pop
cmp
mov
les
or
nop
dec
sub
inc
jmp
pop
dec
jecxz
clc
stos
aam
push
dec
cld
nop
cs
lods
ficoms
subl
sub
scas
or
mov
in
mov
mov
and
iret
jge
test
pushf
cmp
int
jg
fbstp
inc
jmp
sub
or
gs
out
fidivs
js
jne
jl
jg
shll
adc
add
sbb
je
adc
loope
movsb
and
jb
pop
out
pop
jle
push
in
pop
outsl
cmp
inc
imul
push
cmpsl
das
sub
inc
test
sub
lds
out
rolb
leave
cwtl
mov
xchg
jle
shl
pop
pop
hlt
pushf
jnp
mov
pop
jnp
xchg
in
in
cmp
and
pusha
push
sub
push
dec
ja
cltd
loop
and
add
jge
das
int3
push
aad
mov
jno
dec
sahf
push
xlat
xchg
push
push
std
jg
push
imul
sbb
shr
pop
sub
ret
jb
pop
shll
xchg
dec
sub
sbb
add
out
sub
xchg
sbb
xor
dec
hlt
cmpsl
fmul
test
lcall
ss
lahf
mov
mov
jmp
dec
out
out
push
dec
in
dec
mul
test
mov
sahf
ds
in
mov
shl
orl
dec
dec
out
jecxz
mov
rcrb
cmp
jnp
or
add
adc
push
cmpsb
loop
jno
xor
fldcw
sub
mov
jge
cmpsb
dec
clc
mov
aad
lock
push
xchg
mov
sbb
push
add
insb
arpl
jmp
or
jno
stos
cs
add
inc
enter
mov
pop
mov
mov
adc
pop
repz
sub
cmp
scas
mov
sub
ret
lods
dec
pushf
imul
lret
inc
pop
cs
inc
dec
mov
dec
movsb
xor
pop
sub
stos
xchg
xor
aad
dec
into
dec
dec
xchg
xchg
push
inc
adc
leave
jp
outsl
sub
js
cmp
pop
xchg
loop
out
popf
jecxz
sbb
out
mov
mov
or
push
outsl
adc
imul
and
push
fwait
cmp
jmp
pop
dec
imull
inc
andl
jne
lds
das
push
xchg
push
mov
stc
mov
push
push
push
push
popa
test
mov
pop
jb
cmp
stos
jno
imul
icebp
das
cmp
clc
dec
loopne
sbb
push
test
sbb
insl
push
xchg
insb
cmpsb
inc
jae
push
dec
mov
mov
add
addb
and
xor
fstpl
mov
add
push
push
cmpsl
int3
mov
add
es
test
fcmovne
into
and
pop
loopne
call
or
cmp
aad
scas
subb
loope
out
aam
pop
xchg
and
lcall
sub
mov
lahf
negb
addr16
daa
cmp
push
push
pop
cmc
pop
pop
pushf
cld
pop
or
ficompl
mov
adc
xor
mov
xchg
outsb
data16
cwtl
push
cwtl
shl
sarb
jecxz
mov
jl
lds
mov
sub
or
pop
mov
repz
cmp
push
out
mov
imul
dec
fistpll
outsb
clc
dec
sub
fisubl
das
mov
mov
push
subb
sbb
dec
jge
cmp
jb
ljmp
loop
das
cltd
xor
movsl
std
inc
mov
xor
jns
lea
sbb
push
cmpsb
sbb
pop
ret
or
ret
scas
fiaddl
out
push
js
mov
sbb
xchg
mov
jne
aaa
fiadds
arpl
adc
lahf
or
das
jae
xchg
mov
das
mov
fnsave
and
add
mov
repnz
cmpsb
push
dec
aas
jns
jns
pop
lret
mov
xchg
orb
pusha
out
das
faddp
xchg
mov
mov
xor
clc
sbb
pop
adc
add
jbe
int3
cmp
lret
push
out
xchg
xchg
mov
jge
pop
mov
aaa
or
or
icebp
loopne
mov
dec
or
push
fimull
lret
sub
add
lret
fmuls
lahf
inc
das
pop
es
mov
mov
insl
mov
jbe
cltd
out
pop
sub
cmpsb
adc
dec
movsl
xchg
dec
scas
sarb
dec
outsl
mov
iret
imul
test
nop
negb
int
jnp
jns
inc
xchg
mov
pop
push
in
cmp
jb
mov
fmull
lods
loope
fldt
insb
fsubrs
cmpsb
filds
mov
pop
mov
pop
sbb
xor
and
xchg
popf
jmp
and
dec
push
lds
pushf
mov
jne
push
arpl
test
pop
push
std
xor
jmp
data16
stc
orps
adc
adc
ds
jo
xchg
jne
leave
sbb
addb
test
lds
dec
jno
loopne
push
aam
clc
add
flds
popa
mov
cs
int
cmpsl
mov
test
test
xchg
rcrb
int3
clc
pop
stos
outsl
mov
movsl
cld
stos
sbb
mov
stos
test
aas
jmp
pop
into
cmc
dec
mov
scas
popf
adc
mov
stos
in
dec
out
or
pcmpgtd
ret
and
jae
sbb
cmp
xchg
js
ds
pop
movsb
pop
rep
pop
or
repnz
out
xor
js
cmc
sarl
pop
rcll
add
out
or
pop
cmpsb
or
xorb
sarl
imul
cmpsl
adc
aad
xor
repnz
sbb
test
outsb
and
xor
jle
pushf
mov
sahf
cmp
cltd
jnp
jl
xchg
addb
or
dec
jnp
add
dec
push
lock
cmp
arpl
mov
cmc
cwtl
mov
sar
push
popa
jb
or
int
push
add
sbb
scas
scas
jp
int3
loop
pop
add
clc
adc
mov
sbb
aaa
int
xchg
mov
out
push
iret
push
fisubrs
rcrb
add
insb
mov
add
popa
add
mov
popa
sub
sti
iret
stos
es
xor
test
xrelease
into
mov
and
mov
daa
inc
cmp
lock
pusha
inc
pop
cli
insl
pop
sub
sbb
mov
mov
add
mov
ret
add
xlat
adc
mov
xchg
orl
jecxz
sti
jmp
mov
clc
loope
jmp
test
pushf
inc
pop
xor
inc
pushf
xor
into
ljmp
cmp
dec
imul
pop
dec
mov
out
mov
inc
das
cmp
iret
or
popa
ficomps
je
sbb
dec
pop
mov
loop
jmp
imul
adcb
dec
mov
cmp
mov
adc
test
jne
into
popf
loop
jo
ret
lret
add
imul
mov
sbb
cmp
cld
jmp
aam
mov
dec
aaa
push
aad
repnz
rcl
cmp
add
out
add
and
insb
rcrl
iret
jg
add
fcom
pushf
sub
jge
xchg
stos
inc
imul
shlb
adc
lcall
pop
jno
pop
jl
cmp
test
sbb
lret
xor
mov
sarl
mov
inc
sbb
sbb
testl
mov
mov
cs
or
sar
mov
addl
pop
xchg
and
cmp
mov
out
or
int3
ss
xor
cmpsl
jg
mov
in
jno
adc
mov
push
xchg
shl
stos
jl
bound
clc
stos
sub
or
dec
mov
int
outsl
imul
add
mov
shrl
mov
fmuls
push
push
in
hlt
in
jne
sar
xchg
or
xchg
std
pop
mov
imul
sahf
ret
push
test
adc
insb
adc
shll
push
jecxz
sbb
ret
pop
sub
movsb
sub
add
repnz
mov
hlt
mov
jg
or
lods
mov
fnsave
ds
jb
repz
push
or
pop
mov
push
xchg
sahf
and
xchg
out
lock
icebp
testb
iret
and
mov
fcmovnu
xor
into
popl
jecxz
nop
lds
cs
mov
fidivrl
and
int3
mov
ja
mov
lods
sahf
lcall
push
sidtl
ret
iret
mov
pop
scas
mov
push
js
sahf
fcompl
mov
add
mov
movsb
fwait
out
outsb
test
sub
mov
mov
stos
aas
and
fstl
adc
pushf
jnp
adc
cmp
push
or
xchg
sbb
lock
mov
sete
add
xchg
shll
or
paddw
xchg
dec
pop
sbb
mov
lret
jno
ja
popf
daa
test
mov
mov
fisttps
fildll
jns
xor
or
into
pop
lock
mov
je
xor
ss
movsl
es
add
or
and
mov
sar
js
xlat
mov
adc
xchg
mov
int
imul
cmp
sbb
inc
test
mov
mov
jns
int3
rolb
movsb
popf
fisttps
jl
sbbb
mov
cli
outsl
push
aas
adc
inc
pop
arpl
push
sub
sbb
mov
pop
jp
add
lds
repz
je
arpl
push
mov
icebp
cmp
loopne
push
shll
jae
mov
or
and
ss
or
xchg
pop
adc
push
adc
dec
outsb
dec
push
ret
ja
mov
inc
and
xor
mov
and
daa
jecxz
pusha
mov
arpl
fidivrs
mov
dec
test
es
mov
fadd
or
cltd
mov
fsubrs
jb
addr16
xor
cmpsb
adc
arpl
pusha
inc
bound
mov
in
mov
mov
and
lds
or
fsubrl
insl
mov
mov
ficoms
ljmp
jmp
ljmp
jge,pn
lret
cmpsl
sub
cli
xchg
dec
ret
das
xchg
jg
lods
sbb
lods
insl
loope,pn
mov
xlat
icebp
movsl
xor
sti
xchg
mulb
dec
sbb
cmp
repz
push
add
xchg
xor
out
movsl
and
outsl
push
out
inc
push
xlat
mov
fstp
add
sub
inc
iret
loope
aad
lds
movsl
stos
popf
mov
push
adc
leave
jne
mov
sub
bound
mov
xor
shl
cltd
bnd
inc
push
orb
ljmp
lods
loope
fsubrl
adc
into
push
cmc
sub
in
cmp
inc
mov
movsb
push
adc
pop
in
fstl
fs
dec
lods
repnz
or
rclb
sarl
dec
and
ss
fimuls
pop
xor
imulb
dec
adc
fisttpl
imul
loopne
and
das
cmp
bound
pop
nop
push
daa
mov
sbb
add
inc
or
sbb
cs
lods
cmpsl
ss
out
aas
jb
or
xor
rcrb
pushf
adc
paddsw
xor
jbe
and
out
out
hlt
cmp
int
lea
xor
out
ja
mov
je
leave
mov
test
iret
push
jno
mov
dec
sbb
pop
lock
dec
loop
adc
push
jb
loopne
addr16
mov
sub
xchg
xor
dec
cmp
leave
add
mov
bound
push
push
mov
pop
xchg
pusha
ljmp
sbb
jl
or
mov
cmp
es
dec
adc
mov
mov
sbb
jae
push
mov
sub
mov
xchg
sub
insl
mov
rclb
out
cmp
idivl
mov
les
add
loop
mov
scas
push
cmc
and
loope
movsl
jle
sub
xchg
pop
mov
in
lret
mov
inc
mov
mov
lahf
js
lea
fimull
lcall
sub
mov
dec
mov
ds
gs
cmpsb
rol
inc
xlat
arpl
xchg
stos
mov
movsb
adc
inc
jno
gs
mov
push
sub
test
imul
cmp
subb
stc
push
mov
js
xor
jb
nop
and
inc
mov
stc
movsl
jmp
aas
mov
or
cmpsl
xor
xchg
nop
call
add
xor
pop
enter
sbb
push
lea
out
dec
xchg
adc
pop
iret
push
sbbl
popa
inc
dec
lea
lock
popf
into
jns
cwtl
mov
mov
repz
push
cld
jns
mov
lcall
cmp
add
cltd
stos
int3
push
into
test
mov
cmp
into
in
or
pop
andl
lock
das
cld
and
ror
shrl
cwtl
or
outsl
mov
outsb
ss
popa
cmpsb
je
adc
dec
sub
aaa
jg
incl
mull
cmp
addl
push
int
fcoml
push
push
push
mov
stc
mov
jmp
andl
andl
imul
test
ret
sub
cmp
mov
fists
or
cltd
or
aaa
sub
cmp
jbe,pt
push
cld
push
mov
shlb
fnsave
push
mov
jne
cli
jp
loop
std
xor
cmp
lea
lret
dec
lods
cmp
js
and
push
movsb
push
lods
repnz
jp
sub
in
insl
and
dec
jb
jne
sub
out
cmp
orl
push
movsb
insl
mov
fsubl
jbe
xlat
mov
mov
cmpsl
xor
mov
mov
scas
test
fisttps
xchg
in
pop
sbb
or
popa
aad
ss
mov
testl
add
pop
push
sbbl
in
data16
mov
lea
mov
sub
lret
push
jecxz
sbb
xlat
cs
add
scas
test
in
xchg
cmpl
stos
mov
add
xchg
jp
leave
jl
test
mov
hlt
sub
pusha
in
stos
iret
push
sub
jl
in
jne
out
sub
dec
cmp
subb
xlat
lcall
aad
dec
dec
jbe
and
push
mov
imul
fbstp
mov
dec
lahf
out
mov
mov
sbb
popf
push
adc
adc
ljmp
jae
imul
and
test
out
test
loop
sub
mov
in
imul
mov
movsl
in
adc
scas
addr16
clc
jmp
test
int
sahf
leave
sbb
pop
cmp
inc
sub
fdiv
or
sub
cmp
sbb
out
pushf
sub
inc
out
xchg
ffreep
gs
and
int3
inc
fidivrs
sub
pop
daa
mov
pusha
je
add
outsb
inc
lds
adc
pop
pop
push
pop
jle
mov
mov
jp
inc
scas
cmp
sbb
sbb
xchg
dec
adc
inc
iret
inc
mov
mov
mov
stos
cmove
mov
bound
xchg
ja
sub
mov
jecxz
jae
push
jne
ret
loopne
popa
clc
adc
dec
mov
cmp
xchg
cltd
bound
mov
add
xchg
add
push
inc
mov
gs
mov
pop
out
jb
pop
scas
lods
mov
mov
inc
cmp
out
repz
mov
and
mov
movsb
lock
outsl
mov
jb
dec
pushf
test
mov
rcrb
and
leave
sbb
xchg
xorb
and
daa
fs
mov
pop
lcall
and
adc
xlat
xchg
xor
clc
iret
xchg
cmpsl
scas
sahf
adc
add
sbb
fstl
jl
jecxz
xor
mov
insb
push
int
mov
ret
sbb
xchg
push
push
ja
inc
std
adc
cmpsl
addr16
pop
jmp
xchg
out
repz
sbb
or
push
mov
fadd
xor
out
cld
mov
jno
bound
cmpsb
jne
and
std
sti
mov
frstor
xchg
std
xorl
mov
or
mov
test
xor
sbb
adc
mov
cld
lods
out
out
lock
out
sarb
arpl
insl
andl
mov
adc
sub
loopne
int
adcb
pop
adc
sub
js
inc
mov
add
call
outsl
cmp
inc
fwait
aam
xchg
fistpl
adc
and
imul
cmp
push
inc
lret
ljmp
cmp
fcomi
cmp
aas
jg
or
jno
sbb
dec
ja
daa
mov
fs
jb
lgs
mov
push
xchg
cwtl
ljmp
add
data16
mov
les
lcall
movsl
and
push
xor
xchg
ds
inc
enter
dec
fisubrl
or
xchg
pop
sbb
nop
push
jbe
shl
arpl
fxtract
test
jns
mov
sarb
imul
roll
jge
stc
pop
out
shll
outsb
inc
repnz
bound
lret
mov
lahf
pop
mov
xlat
orb
mov
mov
pop
mov
popf
push
mov
dec
push
aam
mov
and
daa
add
inc
inc
pop
mov
cmp
inc
jg
push
daa
sub
imul
cmp
lret
ja
in
in
and
movsl
pop
or
in
cwtl
shrb
sub
push
mov
cmp
push
outsl
in
xorl
pop
mov
mov
ds
insb
xchg
in
mov
xchg
stos
mov
movsb
lahf
cld
ss
loope
push
shll
mov
cmp
nop
sub
test
pop
mov
rol
push
roll
mov
int3
jb
in
cmp
mov
pushl
or
mov
andb
jecxz,pt
lods
dec
and
push
pushf
add
insb
cmpl
cld
xor
iret
test
ret
mov
pop
in
jle
insb
rcll
push
xchg
push
shll
push
insl
mov
dec
lahf
mov
sbb
jbe
faddl
push
lcall
mov
js
sbb
or
pusha
and
inc
ret
mov
idivl
add
cmpsb
inc
xlat
stc
aad
les
xor
sbb
or
sub
jl
xchg
addr16
sub
xchg
aad
mov
int3
cld
data16
push
clc
rorl
jecxz
mov
jb
fs
or
test
xchg
call
and
sti
hlt
pop
in
fisubrs
rorl
lock
fcomip
jp
and
stos
xchg
std
in
popf
mov
add
mov
xor
out
sbb
andl
mov
mov
and
call
jne
jne
popa
cmc
mov
sub
xor
fcoms
jmp
call
aam
mov
aad
inc
imul
cli
aaa
xchg
push
loopne
push
push
and
jbe
in
mov
jnp
dec
sub
es
inc
and
dec
cmp
pop
mov
jg
cmp
jae
shll
aas
arpl
sbb
inc
jo
sbb
and
test
sub
add
pop
lret
stos
les
cmpsb
les
or
cld
mov
mov
pop
cmpsl
mov
mov
mov
cwtl
outsl
jmp
test
loope
dec
addr16
xor
or
insl
push
enter
pusha
jle
xchg
adc
or
fsubrp
pop
mov
mov
movsl
movsl
stos
xor
and
inc
lea
insb
xor
iret
xorl
cmc
sbb
mov
and
lret
add
dec
in
adc
sbb
aas
lret
or
rcr
adc
push
xchg
sub
test
cmpsl
gs
mov
jb
bound
xor
int
mov
out
lods
mov
cld
dec
mov
stos
mov
inc
sbb
stos
loope
imul
jno
fwait
jge
ror
subl
iret
mov
xchg
push
stos
loopne
lahf
push
js
push
push
mov
ja
jae
push
mov
add
ret
push
lock
in
pop
cmp
aam
jle
fs
clc
shrb
mov
inc
pop
push
inc
pop
movsb
mov
cmp
popa
inc
scas
adc
int3
pop
fcoml
and
add
xor
sahf
mov
ret
fmuls
sub
and
add
sub
add
and
dec
mov
inc
inc
xchg
rorb
dec
push
mov
inc
ss
enterw
popf
gs
cmc
xchg
xchg
mov
mov
imul
push
mov
cmpsb
xchg
sbb
mov
movsb
and
pop
cwtl
jo
and
sub
sub
repz
mov
daa
push
stos
fs
out
mov
xchg
insl
sar
jl
cmp
outsl
insl
or
lahf
adc
mov
pop
xor
iret
dec
add
jl
pop
das
or
jmp
push
scas
sub
sysret
cmp
cmpsb
ret
fidivrs
mov
xor
orl
pushf
mov
into
jg
in
fs
loopne
push
in
xchg
int3
mull
sbb
mov
enter
adc
fs
jecxz
push
push
fisubrs
adc
mov
test
pusha
push
loope
pusha
adc
in
lods
fistps
pop
lods
or
sub
jge
sub
or
and
cmp
sub
ret
xchg
imul
dec
fstpl
lods
push
ss
movl
dec
add
mov
out
sbb
xchg
dec
leave
xchg
adc
aad
jnp
into
cmpsb
jnp
hlt
cmp
aad
push
push
enter
test
pop
rorb
pop
push
pop
js
enter
dec
fisttpl
fwait
addr16
adc
push
xor
fsts
jecxz
out
repz
lret
xchg
and
inc
rcrl
cmp
push
fsubrs
jg
cmp
sbb
fnstenv
pushf
aas
sti
adc
push
push
shll
fistps
mov
push
rcrl
mulb
ret
inc
in
int3
push
sbb
jno
cmp
sahf
mov
push
in
mov
loope
rolb
pop
sbb
mov
jo
arpl
rorl
adc
inc
aas
enter
inc
pop
mov
hlt
pavgw
inc
xchg
mov
add
gs
int3
out
xchg
xchg
movsb
ss
pop
jge
in
ss
xchg
icebp
sbb
jmp
mov
jmp
les
cmp
hlt
mov
dec
cmp
test
int
adc
lahf
or
jbe
dec
mov
inc
test
sbb
push
orb
ljmp
sbb
cmp
sbb
imul
ljmp
clc
loopne
xchg
sub
or
lods
jae
sub
out
dec
out
dec
aad
add
fs
cmp
cmpsb
sbb
inc
cwtl
in
cli
je
int3
inc
and
mov
sbb
icebp
iret
mov
fldl
push
push
cltd
sub
add
shll
mov
push
jmp
adcb
sbb
sbb
fs
sarl
jmp
test
inc
push
mov
ljmp
js
bound
inc
dec
aad
push
in
dec
or
cmpsl
adc
loope
mov
sti
xchg
repz
loop
aad
je
scas
mov
jl
xor
cmpsb
stos
roll
xchg
pop
das
jno
dec
in
pop
cmpsb
sub
mov
cmp
js
loop
pop
sub
pop
nop
mov
push
cmp
jl
dec
xchg
fadd
movsb
pop
faddp
ja
int
addr16
add
add
jo
orb
cmc
mov
dec
sub
nop
aad
cmpsl
sbb
mov
js
jae
mov
arpl
dec
xchg
imul
les
addb
mov
outsb
ja
popf
mov
xor
std
mov
sub
jae
ret
outsl
cmp
mov
mov
dec
std
sbb
int3
aad
sub
push
sbb
mov
bound
movsb
xchg
lock
sarb
sti
inc
outsb
add
repz
xchg
push
mov
mov
xchg
mov
popa
cmc
or
or
or
cmc
loop
daa
xor
push
ljmp
jne
sub
cmp
push
in
mov
lret
pop
rcll
cli
inc
cmpsl
lret
xor
lret
adc
mul
insl
outsb
out
pushf
xchg
in
cmp
cmp
mov
loope
jo
sbb
mov
dec
pop
xchg
icebp
scas
stos
sbb
inc
or
aam
cwtl
scas
movsl
je
pop
cmp
jnp
fdivr
gs
repnz
sbb
pop
sbb
mov
cmp
lret
arpl
push
mov
ljmp
add
sub
push
mov
push
cmpsl
cmpsl
xchg
push
mov
test
vpmadcsswd
test
mov
arpl
subl
jle
out
push
lahf
ds
and
out
popf
outsl
sbb
push
xchg
rclb
cmp
pop
es
push
mov
ficompl
data16
xlat
ljmp
lods
fsts
mov
into
cwtl
lret
adc
dec
mov
mov
mov
roll
xor
in
sar
lcall
sub
cli
outsl
mov
cwtl
loope
movsb
inc
fnsave
xchg
push
popf
dec
jo
mov
jo
inc
orl
xor
sub
xchg
add
jo
xchg
sub
mov
sub
js
sub
std
sahf
imull
out
cmp
lahf
mov
jg
adc
shr
dec
test
ret
pop
jno
or
jle
adc
clc
inc
push
adc
lds
lret
ret
jmp
cmp
lods
push
stos
repz
push
sub
xor
and
and
popf
push
ds
and
sahf
or
out
gs
addr16
and
loopne
push
sahf
jo
pop
sub
enter
loope
and
jne
inc
es
cmp
dec
push
mov
andb
push
inc
shll
lea
andl
mov
push
dec
push
jge
adc
mov
mov
rcrl
mov
scas
xor
pop
fiadds
popa
jno
mov
in
add
test
xchg
push
outsb
ffreep
sub
repz
dec
mov
adc
out
mov
fldcw
rcll
jle
push
adc
inc
mov
mov
and
sbb
mov
push
arpl
dec
jbe
mov
push
mov
fdivrs
mov
jbe
jp
pop
cmc
inc
inc
ret
aaa
test
xor
mov
cld
jge
insl
jle
cli
mov
cmp
pop
or
xchg
dec
insl
arpl
fists
dec
mov
sbb
push
xor
ret
test
ds
pop
mov
jl
sti
and
pop
pop
stc
lock
fstpt
icebp
enter
jg
lods
es
mov
sbb
ja
pop
sbb
lods
outsb
popf
mov
shll
loopne
lcall
into
xchg
or
out
or
or
push
shll
sub
lds
cmp
insb
sub
out
xchg
scas
push
fstl
push
dec
test
and
add
cmp
cmc
clc
lcall
ds
cmc
pop
sbb
lcall
icebp
cmp
jge
lahf
data16
push
ds
xchg
adc
push
sub
gs
movsb
xchg
mov
xchg
xor
xchg
dec
mov
movsb
inc
mov
rorl
adc
push
pusha
fwait
jecxz
mov
in
loope
jbe
jns
dec
enter
std
xor
pop
rol
mov
test
rcrb
mov
jmp
insb
push
add
mov
push
dec
xor
movsb
enter
arpl
xchg
shlb
daa
dec
fwait
pop
test
mov
imul
mov
movsb
jmp
mov
je
cwtl
aas
ss
addl
stos
add
in
or
lods
xchg
mov
adc
loope
addb
cmpl
mov
or
dec
das
into
add
negl
lds
cwtl
cmc
adc
data16
pop
inc
cmp
daa
push
bnd
lahf
das
pop
xchg
xchg
cmp
iret
jb
xchg
xor
mov
fdiv
push
xchg
lods
outsl
or
or
mov
cmp
jno
push
pop
dec
rorb
cmp
mov
push
loope
jae
cli
xchg
aas
jb
pop
fdiv
cld
push
cwtl
cs
fsubrs
mov
cmpsl
shrl
lea
fdivrl
dec
outsb
add
lret
jbe
dec
dec
ficoml
jl
popa
cmp
je
mov
or
andb
sarl
push
dec
inc
stc
jns
test
incl
adcl
jecxz
dec
or
shlb
arpl
mov
push
cli
icebp
cld
ret
sub
push
sub
add
leave
xchg
ljmp
xchg
or
mov
pop
mov
or
lea
sub
cmp
and
shrb
sub
lods
mov
mov
aam
xor
mov
xor
xor
cld
pushf
push
aad
shll
call
cmp
and
icebp
cld
sbb
lods
mov
je
sbb
jmp
push
shl
sub
or
pop
fs
ret
sbb
hlt
mov
push
jmp
mov
cs
loopne
ljmp
push
lret
pop
cmp
fs
add
clc
inc
sbbl
or
jmp
xor
or
out
in
pop
xchg
jmp
cli
push
scas
imul
pop
mov
dec
cmp
and
add
movsl
orb
cmp
mov
pop
lahf
and
xor
fs
lds
cmp
mov
dec
iret
inc
jge
stos
push
pop
jb
dec
pop
repnz
push
xchg
or
adc
jp
clc
dec
imul
xor
in
jbe
add
xlat
or
cmpb
and
sbb
cmp
or
es
mov
jo
das
cli
jle
enter
xchg
xlat
loopne
testl
lret
cld
or
in
push
addr16
cmp
daa
xor
jle
push
dec
jecxz
dec
movsl
stos
cmp
in
rorb
xchg
aaa
push
mov
mov
pop
jmp
aam
add
or
fnstsw
insl
insb
sub
pop
adc
arpl
jo
fcom
in
inc
add
dec
cmpl
jge
and
insb
pushf
mov
adc
cmp
sbb
fwait
mov
outsb
movsl
adc
xor
and
loope
mov
test
cmovnp
push
ret
ss
and
xchg
xchg
mov
mov
xchg
fcomip
push
inc
add
fisubrs
mov
adc
pushf
loopne
and
mov
dec
pushf
and
out
mov
inc
cmp
or
sbb
jmp
lret
push
and
mov
lahf
aas
pop
push
lret
imull
adc
shlb
push
ret
mov
addr16
xchg
dec
ljmp
fidivs
sub
rclb
xchg
cmpsl
xor
loop
ret
xor
or
or
inc
loopne
pop
and
fidivl
cmp
adc
in
popa
movsl
scas
jb
stc
aas
sub
shlb
cmp
hlt
inc
mov
cld
aaa
mov
fs
data16
mov
sbb
pop
xor
xchg
xlat
jp
push
sbb
adc
and
inc
or
lock
imul
insl
stos
ret
mov
jg
mov
popa
xor
mov
xchg
aaa
and
stos
mov
push
loopne,pt
xchg
rclb
xchg
int
test
pop
push
cmpsb
sar
xor
and
xor
mov
stos
sarb
pop
dec
pop
loop
enter
mov
xor
mov
imul
outsl
dec
ja
data16
dec
pushf
add
push
loope
sarl
in
push
stos
mov
xchg
jb
roll
pop
sti
mov
sti
aaa
data16
push
les
mull
leave
cltd
sbb
mov
mov
sbb
and
das
ja
jmp
pop
push
or
es
icebp
cmp
cmp
icebp
inc
xor
enter
xor
or
mov
ficoms
xor
ret
cwtl
mov
scas
mov
add
pusha
inc
jl
xchg
data16
out
mov
inc
icebp
ficoms
adc
mov
or
int
dec
insl
in
jmp
and
lock
sbb
leave
loope
and
xchg
mov
inc
aaa
lahf
inc
loope
sahf
xor
fidivrl
aad
test
frstor
ja
lods
mov
shr
sbb
dec
sti
push
or
or
xor
jo
cmc
sbb
imul
cmp
int3
push
jo
jmp
inc
fstl
sbb
insb
fldl
frstor
jge
or
in
dec
clc
push
sub
jmp
inc
mov
loopne
mov
xchg
stos
sub
or
or
mov
xor
notl
pop
scas
into
pop
sub
sbb
mov
xor
repnz
mov
mov
lret
push
and
adc
movsb
cmp
das
or
out
leave
cmc
in
cmp
xchg
cli
icebp
ficomps
rorl
fldcw
jle
aam
outsl
testb
xor
mov
pop
pop
sahf
jns
pop
mov
nop
mov
xchg
mov
shll
icebp
rorl
push
dec
movsb
sub
cltd
push
arpl
cmp
mov
ljmp
bound
push
aaa
add
insl
insl
jge
dec
dec
js
mov
and
arpl
ja
mov
add
inc
add
pop
cmp
cmp
cmp
sahf
aad
mov
scas
insb
cmp
lret
addr16
mov
jmp
mov
mov
imul
jecxz
ss
sahf
mov
push
mov
scas
sub
mov
fstpt
cmovs
cmpsl
mov
dec
sahf
leave
mov
push
dec
dec
jne
ret
sbb
negb
scas
xchg
call
mov
aas
dec
leave
std
cmp
or
fsubp
sbb
dec
push
sbb
icebp
std
fsubrs
ljmp
imul
mov
fdivrs
xor
sbb
cli
popf
sub
xchg
add
imul
mov
mov
add
jae
mov
pop
mov
cmp
aas
dec
jmp
repz
pop
adc
mov
sub
cmp
sti
push
pop
les
test
adc
jnp
push
pop
cmp
inc
xor
imul
movsl
roll
int
inc
sub
sbb
fsubrl
inc
push
xchg
inc
cld
sbb
out
sbb
inc
inc
popf
ljmp
sbb
cmc
pop
aas
lcall
dec
and
movsl
or
shll
pop
dec
inc
push
repz
lods
in
add
in
iret
ljmp
mov
mov
and
insb
dec
outsl
pop
dec
xchg
leave
xor
adc
insb
xchg
scas
sub
adc
pushf
push
mov
push
xchg
mov
sar
shl
xchg
mov
push
insl
jg
iret
pop
pop
neg
ret
jl
enter
je
mov
ds
xor
pop
xchg
movswl
loope
hlt
jbe
lock
adc
insb
add
repz
aam
mov
push
cltd
jmp
sbb
pop
movb
cmc
jmp
pop
inc
mov
mov
pushl
cld
and
mov
repnz
and
lret
pop
pop
paddusw
cli
mov
rcll
fsubl
and
pop
arpl
or
xlat
inc
insl
gs
out
adc
inc
cld
push
jl
pop
and
dec
jns
in
pop
sub
int
lret
fdivs
mov
push
mov
ret
mov
mov
ljmp
out
lea
jg
gs
daa
or
mov
ret
hlt
imul
add
insl
sbb
jp
xchg
add
xchg
or
sbb
adc
int
xor
call
xchg
or
add
mov
loope
sub
adc
outsb
les
push
shl
imul
sahf
and
lods
ljmp
and
stos
sbb
lock
jbe
sbb
adc
dec
inc
mov
xor
arpl
adc
xchg
inc
fmuls
ljmp
sub
lcall
jb
fcomp
push
adc
imul
and
mov
addl
sub
fistpl
push
jbe
sarb
shl
push
mov
pop
fldt
adc
pushf
mull
pushf
sbb
inc
jg
fsts
ljmp
rcr
cmp
inc
push
mov
lea
call
and
stos
test
sbb
popa
iret
int3
jmp
cmp
push
jo
xchg
lcall
in
xchg
loope
sub
jg
jne
push
je
jp
pop
popa
es
adc
loope
leave
loop
stos
add
outsl
faddl
jmp
pop
jmp
sbbl
sub
mov
cli
sbb
jne
lea
and
pop
imul
int3
int3
inc
movsl
ljmp
insb
shrl
lea
jns
fs
lret
fwait
idivl
jp
adc
adc
sahf
incb
aaa
inc
loop
clc
mov
pop
pop
xchg
icebp
mov
mov
push
or
lea
push
pop
xchg
jmp
jge
adc
cli
shr
adc
add
xchg
push
jo
sbb
fbstp
adc
lret
fwait
das
sub
add
roll
fdivs
pop
xchg
test
hlt
xchg
add
cmpl
aas
mov
dec
imul
dec
ret
popf
cwtl
mov
aaa
loope
push
xchg
jno
xor
mov
pop
imul
je
sub
js
daa
jae
mov
cmpsb
adc
out
pop
and
push
adc
hlt
insb
mov
sbb
push
fsts
push
inc
sbb
jge
mov
int3
xor
and
jnp
dec
leave
rolb
lcall
cmpsb
lahf
jne
add
das
jno
inc
pop
lret
lock
test
xchg
adc
jmp
or
add
xor
repnz
cmp
add
arpl
xchg
mov
and
mov
add
sub
xchg
dec
pop
notl
loop
xchg
xchg
mov
leave
lcall
loope
test
gs
leave
lea
push
push
adcb
daa
jo
stos
aad
ret
lods
and
mov
arpl
sbb
cmp
cmp
movsl
jle
jp
sub
mov
lock
push
stos
mov
test
icebp
xorb
push
aaa
pushf
dec
popa
or
nop
scas
mov
ret
arpl
jmp
movsl
xlat
addr16
add
insl
fs
leave
stos
test
mov
push
push
pop
loopne
push
push
imul
xor
shll
repz
add
mov
cltd
scas
aas
fnsave
sub
arpl
dec
movsb
push
insb
les
pop
push
pop
or
xchg
outsl
aaa
ds
shl
lahf
push
push
cs
push
insb
cmpsl
cmp
outsb
insb
popa
aam
adc
rol
sbb
and
test
stc
add
jmp
mov
ret
scas
cmp
fcompl
fwait
xchg
dec
out
fisubrs
div
inc
aad
jmp
loope
cltd
clc
push
jae
jne
lret
lea
fwait
into
out
inc
mov
fs
jb
inc
fdivrs
clc
cmp
ja
je
jo
dec
cwtl
aas
jge
sub
jmp
in
fiadds
xchg
stos
adc
inc
cmc
pop
addb
stc
aas
outsl
or
cmc
adc
inc
pusha
jle
out
xor
xchg
pop
shlb
sbb
mov
aas
lods
cld
dec
insb
jae
push
xor
or
andl
cmp
xorl
add
fcmovb
adc
jae
add
clc
jns
cmp
adc
cmp
insb
inc
inc
notl
inc
cs
xor
and
cwtl
fwait
call
adc
in
mov
mov
arpl
mov
cmc
push
setno
iret
rcll
rcl
cmp
sti
add
jecxz
fwait
push
sti
bound
pop
les
mov
shr
add
lret
xchg
dec
xor
fmul
pop
xchg
repz
or
in
mov
and
lcall
sub
sub
andb
dec
mov
int3
lret
mov
sbb
test
mov
xchg
stos
popl
imul
jae
aas
sub
or
insb
dec
xchg
jbe
adc
cs
pop
test
daa
gs
push
sbb
cmc
pop
sbb
jno
in
and
xorl
inc
fcompl
pushf
popa
push
cmp
pop
push
mov
daa
ljmp
addr16
jge
adc
dec
add
adc
loop
sbb
ljmp
push
and
xor
jecxz
aas
pop
pop
ret
mov
stc
xorl
mov
cmp
sbbb
and
jmp
mov
jnp
xchg
cmpsb
mov
or
push
outsl
jp
lods
xor
into
xor
cmpsb
js
cld
push
scas
push
sub
mov
ljmp
mov
add
lock
inc
rcrb
mov
add
mov
jb
pop
mov
cmp
push
xlat
add
xchg
fsubs
sbb
cs
dec
imul
in
addl
lock
or
sbb
xchg
loop
sbb
lock
lods
mov
pop
or
fistpll
jns
jle
enter
jmp
adc
loope
xor
into
insb
hlt
fisttps
loop
loope
cmp
stc
xlat
xchg
jne
or
and
mov
lods
mov
into
sbb
out
cwtl
mov
xchg
xchg
stos
rcll
out
jp
in
and
mov
mov
fstl
push
pop
push
das
pop
nop
xchg
mov
mov
out
sarl
mov
adc
mov
dec
insb
jae
ficoms
adc
ljmp
cltd
xor
cmp
xorb
adc
xchg
lods
aas
addb
lods
stos
stos
ret
jg
popf
repz
dec
sub
mov
repnz
sub
rcrb
outsl
and
ja
mov
negb
shl
dec
daa
mov
add
or
stos
push
adc
sub
outsl
repnz
or
dec
mov
dec
push
xchg
scas
lds
fists
dec
lahf
mov
mov
inc
sbb
xor
add
mov
and
and
shlb
movsl
mov
jmp
jl
inc
and
push
push
and
movsl
fsts
jns
gs
loop
jmp
xorl
popf
rorl
add
addr16
xor
int3
stc
pop
cmpsl
in
or
push
ret
cli
cmp
cmp
test
lods
mov
jb
movsl
scas
ljmp
push
lret
adc
outsb
sub
daa
inc
or
out
mov
insl
loope
sub
xchg
jge
dec
xchg
dec
mov
sub
pop
pop
inc
jmp
adc
and
ja
pusha
dec
mov
fs
or
out
lahf
cmpb
popf
inc
cmp
adc
jno
add
adc
clc
mov
jp,pn
das
jne
push
inc
mov
mov
mov
mov
push
test
and
daa
test
mov
jl
pop
inc
pushf
jns
in
pushf
insb
test
xor
fidivrs
ljmp
dec
push
cli
iret
push
pop
xchg
frstor
push
mov
push
jcxz
cmp
nop
test
sbb
jbe
sub
out
pop
loop
mov
mov
aas
dec
xlat
xchg
dec
jnp
idivb
ret
xchg
push
xchg
xchg
and
pop
mov
mov
clc
mov
jg
in
xchg
les
es
add
jne
xor
fs
mov
leave
outsb
and
jno
cli
call
pusha
mov
xlat
push
das
mov
aas
pop
repnz
clc
mov
lcall
mov
jp
mov
ret
lret
mov
pop
push
cmp
cmp
xor
jmp
loopne
sbb
fcompl
rcrl
stc
lret
int
pusha
ja
sub
dec
sub
push
shl
mov
rolb
clc
adc
mov
into
dec
shrb
xor
push
jg
sub
or
ret
sbb
arpl
push
int3
cli
push
pop
fdivr
sub
adc
cmp
sub
xor
lea
cmp
mov
ss
shrb
ja
cmp
imul
pushw
pop
bound
fcoms
adc
push
or
mov
xchg
daa
and
sti
dec
imulb
dec
xor
outsb
push
xchg
idivl
fldt
data16
and
cld
push
dec
rorb
lret
jg
inc
fisttps
add
inc
pusha
push
das
sbb
jecxz
adcb
pop
test
inc
je
clc
rorl
imul
pop
jecxz
mov
cmp
hlt
popf
cmp
sbb
xor
inc
fistpll
ljmp
fnstcw
imul
fmull
add
int
push
push
mov
lret
sbb
jmp
lret
jg
mov
sbb
lahf
cmpsl
mov
mov
jnp
adc
lret
imul
or
cld
mov
loop
and
jmp
sub
mov
xchg
dec
cmpsb
xor
xchg
int
mov
jle
dec
xchg
dec
jae
and
out
clc
test
dec
xor
and
lea
adc
dec
mov
mov
fsub
je
jle
push
jne
cmp
push
cmp
inc
add
push
jns
adc
lods
repz
dec
fcmovbe
cmp
mov
xchg
mov
cld
icebp
out
jmp
fdivr
or
ljmp
cmp
lret
push
dec
clc
in
jbe
rol
adc
das
or
sarl
mov
mov
lea
lods
loope
xchg
inc
mov
ljmp
ja
aad
mov
dec
or
mov
movsb
es
cli
sahf
aam
push
sbb
jb
aas
jnp
xor
inc
jmp
pushf
clc
sub
mov
add
cmpsb
cltd
arpl
stos
lods
xchg
dec
add
cmp
lahf
inc
dec
stos
cmp
xchg
add
stos
add
inc
mov
les
nop
iret
sub
pop
inc
orb
adc
cmpsl
push
mov
js
inc
adc
lds
cmp
and
incl
mov
mov
fiaddl
test
pop
mov
cwtl
sbb
outsb
leave
dec
pop
and
adc
xchg
lods
inc
pop
notb
nop
or
sub
mov
lea
andb
dec
mov
lock
js
inc
lea
insb
pop
sbb
fdivr
adc
bound
inc
mov
cli
dec
mov
pop
push
jne
cli
test
fxch
nop
sub
and
adc
aaa
adc
int3
dec
enter
sahf
nop
in
mov
movsb
adc
fdivr
lds
fs
outsl
mov
aad
lods
mov
pop
inc
sub
jmp
test
jbe
inc
jp
mov
dec
jnp
jmp
leave
push
movsb
jmp
ret
in
jle
dec
dec
sahf
jle
jae
pushl
push
adc
pop
into
movsl
ret
int3
and
lock
add
push
pop
dec
cmp
mov
dec
vandps
loope
int
fsubs
pop
popa
cld
daa
stos
mov
sti
push
sub
jge
rorl
cmp
jmp
sbb
sbb
mov
xchg
ljmp
call
adc
cli
rcrl
sbb
push
sbb
fs
std
stc
adc
test
lods
stos
sbb
cmp
pop
sub
adc
inc
fisubrs
mov
push
imul
rclb
inc
jge
mov
loop
sbb
in
jp
pop
out
cmp
add
pop
xor
aas
fchs
lods
clc
and
sahf
sbb
aad
xor
in
andl
cli
mov
or
insb
xor
sub
in
dec
add
adc
jne
mov
or
fmulp
icebp
sub
push
xchg
cmp
gs
in
lock
inc
mov
xchg
or
sti
clc
inc
dec
dec
and
rorb
cmp
jg
add
shll
mov
out
jno
lods
cwtl
int
fisttps
xor
xor
mov
out
in
scas
inc
add
pop
outsb
cltd
pop
mov
cmp
movsl
pop
test
xchg
mov
imul
repz
jns
mov
mov
mov
mov
lock
ljmp
mov
add
mov
pop
add
outsb
jns
cmpsb
stc
jl
add
out
aaa
aam
popa
pop
add
pop
clc
fbld
xchg
imul
pop
and
bound
scas
ss
xchg
jns
mov
mov
pop
sub
gs
add
dec
jnp
cli
dec
imul
or
scas
popl
xchg
pop
push
xor
jl
mov
sbb
pop
push
lret
mov
or
jmp
das
es
jno
stc
popa
xchg
into
push
testb
push
xchg
push
loopne
test
fistl
in
ljmp
rol
push
jb
test
push
lods
mov
xchg
pop
pop
popa
data16
and
loopne
fsubl
dec
mov
movsl
or
mov
shll
dec
push
jge
les
and
pop
es
sarb
ror
aam
push
into
sarb
add
mov
sub
push
stc
addr16
pop
adc
mov
xchg
adc
aam
sti
stos
push
sti
bound
pusha
pop
and
sbb
in
sahf
addb
lea
jle
ss
andl
jmp
out
dec
mov
dec
leave
inc
sub
jbe
pop
ljmp
int
pop
popf
sub
stos
adc
lahf
mov
sbb
ds
fadds
dec
cld
sbb
sub
or
cmpsl
popa
subl
cli
int3
mov
adc
mov
sbb
cwtl
test
daa
stos
shl
out
repz
mov
es
or
imul
call
lcall
aad
mov
push
ljmp
or
aad
xchg
jmp
and
mov
andb
testl
and
shlb
cli
aad
aad
leave
frstor
test
adc
xor
adc
cltd
in
cmp
push
cmp
cmpsb
or
cmp
out
sub
sub
mov
jae
cmc
testl
xchg
xchg
xchg
xor
movsb
enter
pop
add
mov
sub
pop
cmp
xor
xor
bts
lret
outsb
test
andl
fwait
push
pop
xor
lods
mov
fdivrs
push
das
jne
xor
jle
mov
mov
lahf
mov
sbb
mov
repz
jbe
mov
cmp
insl
cld
add
lods
push
dec
push
ret
popf
jp
inc
ss
scas
iret
cmpb
pop
cld
jecxz
in
sbb
ljmp
fs
mov
mov
mov
mov
inc
cmc
cmp
daa
mov
jno
inc
lock
mov
add
lret
pop
ret
adc
sub
adc
cmp
mov
xor
dec
mov
mov
push
subb
loopne
shr
iret
loop
mov
push
inc
mov
aad
int
ficoml
xchg
sub
pushw
addl
push
scas
adc
call
pop
xor
add
sbb
or
jo
ss
fnstsw
stos
adc
outsb
cmp
xchg
popa
adc
popa
test
ja
jae
les
int
popa
outsl
mov
cmp
xchg
xchg
in
shll
jecxz
adc
mov
sbb
and
addr16
cs
mov
add
call
pop
fldlg2
cmpsl
xchg
jge
outsb
orl
jns
les
fisubs
add
ficomps
mov
addl
jecxz
add
adcl
pushf
cmp
out
arpl
mov
gs
xchg
ds
push
xor
ret
mov
xor
push
sbb
or
out
mov
jge
mov
inc
in
jb
negl
popa
mov
inc
sbb
push
fstl
xor
mov
cli
mov
xchg
sarb
sbb
loopne
popf
jp
add
xor
jnp
xor
mov
test
loope
into
inc
dec
andl
imul
or
jg
lea
and
xchg
push
sub
jg
add
inc
fdivrs
sbb
mov
lods
sbb
cmp
shll
xchg
arpl
leave
dec
sub
popa
in
fmull
rcll
cmp
rol
sub
int
or
cmp
clc
ja
cmc
mov
sub
test
imul
mov
cmpsl
pop
or
xor
mov
jp
arpl
aam
or
cwtl
sub
mov
iret
pop
es
sbb
aam
subl
mov
mov
mov
dec
movsb
push
fsubl
and
orb
test
pop
call
and
fcoml
out
dec
xchg
clc
cmp
sub
push
rcrw
jne
adc
mov
push
add
imul
push
mov
mov
dec
cld
jmp
mov
cmpsl
or
xor
mov
enter
add
xlat
mov
mov
lahf
ljmp
cmpl
and
push
mov
lret
shrl
aad
xchg
fwait
mov
test
pushf
divl
push
jmp
addr16
or
fisubl
call
xor
ljmp
loope
fs
cmpsb
push
jo
sbb
std
jecxz
lret
out
sarl
xor
jo
fistpll
incl
lret
in
mov
test
jle
fs
sub
lahf
lock
test
mov
sbbb
adc
cmp
hlt
jne
jl
fwait
mov
inc
pop
xchg
out
jmp
sbb
adc
xchg
push
into
and
daa
xchg
ss
xor
cwtl
aaa
repnz
add
pop
pusha
cmpl
push
imul
or
xchg
xor
and
lods
jmp
imul
push
jl
stos
lock
jp
jnp
in
fisubrs
jl
stos
mov
push
sbb
pusha
push
movsl
cmp
loop
sbb
outsl
inc
dec
lea
or
mov
inc
mov
gs
xlat
jnp
pusha
sbbb
add
mov
fidivrl
xchg
ja
xor
push
and
and
mov
icebp
nop
popa
or
mov
ja
push
mov
dec
andl
pop
mov
les
or
jb
mov
rolb
add
in
cmp
arpl
aas
subb
jge
or
adcb
out
pop
jo
pop
add
rol
push
in
push
mov
test
xchg
cmp
cwtl
push
fsub
sbb
shlb
cmpl
jae
mov
dec
mov
in
bound
mov
mov
mov
mov
cli
push
imul
adc
xchg
cwtl
jle
pop
dec
add
fadds
mov
cld
jge
mov
ss
mov
xchg
popa
xor
es
jl
fistps
in
jb
and
or
add
sub
push
jbe
fcmove
lds
jecxz
cmp
and
out
fisubrs
and
addb
nop
arpl
push
mov
xchg
rcrl
jge
mov
push
ja
mov
jno
into
fdivl
popl
lock
int3
stos
xchg
clc
jae
dec
imul
pop
adc
and
inc
inc
xor
cmp
or
and
xchg
push
xorl
xchg
in
jo
out
and
dec
addl
pop
mov
cs
xrelease
ds
xchg
outsb
inc
ds
mov
sti
or
lock
inc
jns
fstl
pop
and
dec
mov
jae
fnsave
pop
sub
subl
rolb
or
cwtl
test
lahf
in
inc
std
inc
in
inc
dec
push
int
xor
sbb
dec
imul
jae
mov
fsts
add
ljmp
clc
inc
lea
jbe
inc
mov
dec
icebp
pop
stc
pusha
enter
outsl
jae
jae
inc
and
sbb
mov
aad
stc
and
push
cmpsl
fstl
xor
cmp
pop
scas
push
sub
xor
inc
popl
mov
rclb
in
pop
je
stc
mov
inc
aas
testb
xchg
sub
pop
sbb
arpl
fisttpl
ja
dec
xor
jne
mov
loopne
sbb
ret
or
lock
inc
lret
sub
dec
jmp
push
jns
mov
ds
pop
js
or
sbb
mov
in
mov
enter
loope
cmp
into
sbb
pushf
mov
fdivs
testl
xchg
mov
push
in
jle
movb
inc
mov
sti
arpl
cs
xor
je
divb
cmp
arpl
popf
les
test
leave
out
in
lock
shrl
aas
xchg
loope
dec
xchg
orl
push
xchg
stos
scas
ja
in
stc
insb
push
mov
ds
inc
insb
mov
test
mov
rcr
mov
inc
mov
mov
rcrb
or
dec
cmpsl
or
lds
add
fildl
push
add
lods
andb
dec
push
and
pop
cwtl
or
loop
mov
lea
jmp
inc
loopne
inc
adc
fmuls
aas
repnz
xor
xchg
in
ret
mov
sub
mov
mov
sub
jp
inc
push
js
push
cmp
scas
test
test
sub
bound
mov
xlat
out
mov
add
ja
xchg
imul
lea
jne
pop
jnp
in
fmull
mov
pop
pop
and
divb
loope
js
jg
arpl
sarb
cmp
out
lock
hlt
push
ja
adc
lahf
into
mov
mov
inc
fdivrs
adc
jl
mov
les
mov
test
mov
mov
push
jnp
jb
es
sbb
mov
outsl
shlb
stc
sub
adc
call
pop
ljmp
scas
aam
jne
cmp
rorl
adc
sahf
std
add
add
cmp
js
insb
cmpsb
sarl
xchg
call
sbb
xchg
push
int3
ja
mov
xchg
pop
lods
pushf
pop
rcrl
adc
les
xchg
stos
add
xor
dec
pusha
dec
xor
les
xchg
jecxz
pop
sub
cmpsb
cmp
cmpsb
xchg
or
adc
mov
mov
aad
mov
or
sub
adc
loope
xchg
push
rcrl
stos
or
cmpsl
sbb
insl
dec
sub
out
fstpl
mov
std
inc
cmpsb
out
cli
sti
subl
clc
lock
dec
nop
and
cltd
out
lods
mov
ljmp
rorl
dec
xchg
test
mov
xchg
xlat
add
in
or
jnp
aad
std
or
add
cmp
test
test
xchg
mov
arpl
xor
stos
mov
cmp
and
xchg
enter
or
sub
add
push
out
bound
inc
jge
add
test
loopne
xchg
add
mov
jae
add
pop
sarb
xor
pop
inc
push
mov
add
cmpsl
lcall
jbe
sarb
and
cs
mov
mov
mov
lret
out
pop
subl
outsl
and
lea
cwtl
push
or
ja
popf
sbb
fists
fnstsw
pop
movsb
fs
adc
add
fimuls
pop
lea
sub
and
test
or
sbbb
cmp
ret
mov
in
mov
xchg
stos
jno
je
cltd
xchg
push
out
es
add
add
mov
es
mov
int
stos
out
jno
mov
mov
or
aad
aas
cmp
or
push
xor
pop
add
push
in
out
sub
ljmp
push
xchg
mov
sarb
or
add
jecxz
xor
add
or
sub
mov
cmp
rcrb
fsubs
jae
lods
mov
stos
sub
jl
sbb
shr
pop
or
bound
gs
je
les
call
push
pop
les
adc
xchg
sbb
fisttps
cmp
mov
and
jmp
sub
xchg
xchg
sub
and
sub
xchg
cmp
ss
mov
xchg
push
sti
jno
test
add
lahf
std
cwtl
data16
add
adc
je
pop
mov
mov
mov
push
jno
push
pusha
or
jns
and
nop
push
icebp
and
out
scas
pop
and
mov
lea
mov
scas
sub
push
inc
aam
xchg
movb
add
popa
xchg
dec
mov
rclb
lret
das
mov
lcall
push
inc
lret
jge
dec
lea
stc
or
popa
mov
in
sub
inc
mov
lahf
fisubrs
sbb
xor
xchg
mov
loop
fs
push
push
ljmp
xchg
jle
imull
jecxz
sub
sbb
arpl
rorb
add
cwtl
movsb
sarl
jle
sub
bswap
sbb
shr
add
ja
or
sub
ss
aas
jae
hlt
nop
mov
stos
xorl
subl
xchg
mov
and
push
pop
fdivl
dec
in
dec
fcmovu
call
or
cli
mov
push
add
aam
add
je
mov
aas
out
dec
int
test
and
test
out
xor
scas
xchg
cmp
stos
ja
jns
fistpll
cmp
push
jns
add
dec
xlat
aam
mov
sbb
pop
jbe
mov
pop
stos
int
es
mov
arpl
stos
in
add
or
test
in
pop
mov
pop
cmp
pop
arpl
adc
dec
mov
xorb
and
mov
fwait
push
jno
es
testl
test
popf
cmpsb
lock
cmp
lods
shlb
repz
subl
cmpsl
jnp
lock
in
cmpsl
pop
inc
cmp
repz
fbld
imul
mov
je
add
cmp
jae
mov
fwait
ljmp
stos
ljmp
push
clc
or
or
xor
sub
icebp
gs
sbb
adc
adc
test
cld
and
inc
mov
fwait
outsl
or
push
push
lds
sub
sub
cltd
sub
decl
inc
out
sbb
inc
fldl
aam
fwait
and
int3
jl
mov
xchg
xor
leave
push
mov
aam
xchg
cmpsl
mov
sub
shrl
push
iret
and
add
das
mov
in
sarl
push
fiadds
mull
push
fs
in
bound
dec
adc
add
add
hlt
cmp
shr
imul
xchg
add
jp
push
or
ret
dec
dec
leave
sub
jge
sbb
aad
orl
jo
fildll
scas
mov
loopne
and
push
jnp
leave
mov
xchg
pcmpgtb
adc
js
scas
js
mov
jnp
xchg
popf
aad
leave
jnp
arpl
in
fisttps
je
jmp
inc
xchg
xchg
inc
xchg
inc
or
and
fwait
inc
lahf
rorl
sbb
shll
cmc
fistpll
inc
cmc
in
xchg
push
inc
jmp
jnp
in
lds
push
outsl
sub
test
mov
lock
push
mov
shll
jb
popf
pop
int3
lret
xchg
dec
adcl
xor
repnz
int3
fdivl
jg
xchg
stos
hlt
test
scas
sar
xchg
push
test
in
ror
out
shr
jno
ds
jp
jbe
add
xor
and
xlat
not
test
mov
sbb
inc
mov
xchg
add
pop
mov
push
cltd
jmp
test
call
test
cs
jae
cmpsb
lret
mov
or
movsb
xor
jmp
and
pop
cmpb
test
fidivrl
icebp
jo
pop
jge
add
pop
testl
jmp
push
in
dec
ds
xchg
out
adc
dec
movsl
mov
aad
pop
out
push
icebp
in
fcoml
xchg
dec
or
fmull
fcompl
into
mov
out
push
inc
test
inc
or
inc
dec
ljmp
mov
icebp
lret
add
and
adc
pop
and
scas
xor
lahf
test
pop
or
inc
clc
push
sbb
cmp
mov
jb
sub
rcrb
inc
loope
pop
lods
push
sahf
inc
mov
std
mov
push
loope
mov
cs
int3
nop
mov
inc
cmc
adc
or
mov
jo
mov
add
lods
add
imul
xor
hlt
mov
data16
xor
addr16
mov
xchg
leave
aaa
pop
xor
push
xchg
stc
mov
pop
lcall
push
ds
ss
fidivrs
jnp
adc
iret
mov
push
cmp
and
arpl
bound
inc
test
scas
and
dec
jbe
das
jne
enter
cltd
lock
rcl
pop
or
jmp
in
adc
sub
and
ds
icebp
das
jle
in
inc
testb
jecxz
les
scas
pushf
inc
ficoms
mov
mov
ret
sbb
pop
jbe
in
test
xorb
fsubs
lahf
or
push
add
lock
sbb
xchg
in
pop
push
mov
cmp
mov
mov
sarl
sahf
je
xor
clc
pop
cmpb
xchg
rclb
pop
ror
ret
int
mov
sub
sub
jle
add
xchg
or
imulb
mov
push
cld
push
pop
push
add
push
lea
jno
or
fsubp
dec
inc
int3
inc
xchg
nop
adc
divb
into
js
mov
outsb
push
mov
mov
or
mov
loopne
and
xchg
mov
sub
inc
in
mov
repnz
jg
ljmp
adc
push
push
out
fwait
cwtl
aaa
xor
into
adc
jl
test
mov
inc
movsl
inc
sub
and
out
insw
ss
outsl
std
sbb
loop
pop
push
xchg
xchg
lret
sbb
loop
pop
pop
xor
sub
lods
shl
sbb
inc
mov
sub
fwait
sbb
sub
mov
and
xchg
inc
nop
and
divl
sbbb
adc
cmpsb
stos
mov
stos
jnp
mov
sub
test
loope
int
or
mov
int3
shll
out
sbb
fdivp
inc
inc
sub
test
sar
das
std
out
or
mov
cmp
lock
scas
inc
je
scas
sbb
cmpsl
pop
and
test
xchg
push
fsubrl
push
lds
mov
fnstcw
cmpsl
mov
push
mov
or
push
scas
out
jb
ret
dec
sbb
setp
icebp
cmpsl
xor
mov
test
fldcw
ret
ss
push
test
les
lahf
ja
and
inc
inc
das
jbe
mov
mov
insl
push
and
inc
rclb
xchg
outsb
inc
scas
sahf
imul
mov
cmpsb
jno
mov
sbb
mov
cmp
xchg
xor
jp
inc
aaa
mov
sbb
adc
leave
fstpl
notb
call
lret
and
dec
out
and
mov
and
data16
xchg
imul
cld
xchg
xor
cli
push
sbb
inc
sbb
scas
add
outsl
sbb
stos
scas
loope
jb
sahf
dec
sub
dec
pop
fs
movl
inc
das
xlat
jns
ja
lods
pop
nop
call
subl
xchg
dec
bound
iret
jne
or
inc
dec
mov
dec
adc
fmuls
pminub
loopne
jecxz
add
jmp
arpl
out
lret
jg
cmpb
mov
add
cwtl
lret
sub
jno
les
mov
mov
xlat
cmpsb
gs
fwait
ss
in
sbb
cmp
test
cmp
jo
push
push
sahf
mov
sub
in
stos
les
inc
pop
popa
adc
xchg
pop
dec
cmp
cmp
xor
in
nop
and
xchg
icebp
pusha
shlb
cmp
inc
and
test
sub
subb
out
fwait
aam
int
or
sbb
cltd
es
in
cmp
in
inc
jg
mov
push
cmpsb
push
pop
sub
mov
pop
imul
sub
mov
add
cmp
movsl
push
in
and
push
out
jbe
in
test
inc
add
shl
inc
notl
adc
es
in
xor
push
mov
pop
roll
inc
fdivr
in
popa
xor
adc
xchg
jmp
cmovg
xor
sub
outsb
stos
inc
cmp
sub
scas
xor
lcall
add
mov
sahf
mov
cmpsb
scas
inc
into
popa
pop
xchg
lds
je
std
xor
sub
push
cmp
fs
lds
sti
or
push
sub
movsb
push
jbe
jbe
xchg
fdivrs
loop
movl
adc
and
ss
fdivl
js
push
push
inc
jbe
pop
sti
out
out
insl
bound
sbb
fwait
in
mov
loopne
or
mov
lcall
ja
xchg
stos
mov
dec
pop
jg,pt
jecxz
lods
pcmpgtd
ret
popf
mov
cmp
jmp
call
movsb
sub
hlt
mov
fs
lods
dec
outsb
jl
scas
stos
mov
lahf
mov
xor
dec
jle
mov
sbb
add
out
shl
icebp
orb
mov
loopne
popa
ljmp
and
inc
jp
xchg
fldt
leave
rorb
xchg
pop
movsl
sbbb
jnp
mov
stos
imul
scas
ljmp
push
lcall
pop
push
pop
mov
push
loop
or
sbb
ss
push
push
pop
adcb
and
jnp
aam
mov
sub
push
mov
add
clc
bound
sub
cmp
cmp
out
xchg
ljmp
lahf
or
pop
in
adc
mov
aaa
jmp
sub
pop
outsl
pusha
sbb
daa
push
xchg
jnp
push
or
cmp
gs
sbb
pop
aad
xor
clc
into
imul
out
movsb
lods
sar
scas
out
mul
and
jg
or
cwtl
mov
add
ret
in
clc
and
xlat
mov
cmc
push
adc
aad
push
repnz
insl
iret
aad
mov
roll
jnp
inc
xchg
test
mov
test
clc
push
scas
mov
dec
fdiv
fs
push
push
pop
sbb
and
and
dec
mov
test
sbb
notw
div
arpl
push
je
jo
cmp
lret
mov
xor
xlat
cmp
mov
cmp
aam
cmp
inc
cltd
jne
orl
push
cltd
mov
xlat
xlat
jp
movsl
or
xchg
movsl
out
mov
scas
pop
inc
push
rcll
mov
test
adc
push
or
mov
pop
xchg
mov
pop
aaa
daa
mov
les
loope
fistpl
shll
imul
xchg
movsl
push
or
xchg
inc
lods
lds
xchg
out
out
sahf
or
mov
stos
mov
lods
ret
xchg
sarb
cltd
daa
clc
or
mov
mov
addr16
into
nop
cmp
inc
mov
pusha
shr
jle
out
push
mov
ret
mov
inc
xor
sbb
push
popf
aad
inc
dec
mov
jge
shrl
push
mov
push
and
mov
popa
mov
mov
popf
pop
loop
imul
push
and
xchg
out
in
and
icebp
sub
xor
jns
ss
xchg
loopne
movsb
jp
add
or
push
ds
and
out
mov
and
mov
aad
insb
cmp
addb
xchg
or
js
mov
outsl
mul
push
cmp
xchg
push
mov
lea
push
dec
lods
test
fnstenv
cs
pop
push
add
int
ret
mov
inc
leave
sub
mov
jns
add
cmp
in
inc
daa
leave
cs
inc
push
ds
add
mov
lock
js
hlt
es
ljmp
cmp
push
and
int
cltd
mov
cltd
inc
jp
pop
lret
lret
fistpll
call
add
data16
xor
iret
sbb
jp
mov
dec
cmp
mov
test
addr16
shll
ret
jae
lods
pusha
nop
mov
movsl
fldenv
mov
jp
stc
add
bound
xor
loop
dec
sti
roll
outsb
xor
xchg
mov
push
mov
in
push
rcrb
push
daa
push
outsl
jle
mov
lret
xchg
je
shlb
in
aam
and
adc
rol
sbb
add
mov
xor
and
lods
sbb
scas
jb
iret
jae
dec
std
lods
xchg
adc
pop
mov
pop
pop
and
inc
in
dec
inc
inc
sti
cmp
pop
or
mov
pop
movsl
xchg
clc
mov
rcll
dec
jo
sbb
jne
mov
dec
cmpsl
mov
adc
xchg
xor
inc
adc
icebp
sti
mov
jb
ret
sbb
or
std
or
icebp
push
subl
rorl
lods
repnz
jle
adc
stos
xor
ret
xorb
inc
rcll
test
dec
pop
dec
frstor
pop
jecxz
push
repnz
dec
or
mov
dec
xchg
ja
aaa
xor
mov
repnz
fbstp
arpl
test
pop
arpl
fwait
mov
dec
jb
xchg
inc
and
push
jecxz
dec
mov
push
sbb
test
dec
das
push
cld
mov
call
leave
or
mov
imul
jg
fnstcw
addr16
test
shl
clc
push
ret
dec
jno
jnp
mov
xchg
push
xchg
adc
mov
mov
push
xor
ret
mov
xorl
mov
lds
adc
mov
push
popf
mov
mov
sbb
shlb
loopne
and
mov
icebp
ret
sbb
pop
or
pop
push
add
cmpsl
add
mov
aas
push
cmpl
cmpsb
xor
mov
push
xchg
scas
es
jnp
loope
push
outsb
leave
mov
cmpsb
dec
fisttpll
sahf
fs
popa
mov
mov
cld
sub
or
xor
sbb
or
sbb
or
hlt
andl
fs
leave
mov
das
jge
fbstp
push
mov
ljmp
insb
nop
pop
jg
jmp
push
push
je
pop
mov
std
sub
jl
jmp
cld
inc
imul
movaps
shlb
push
movsl
orl
loopne
and
int
xor
inc
pop
mov
mov
push
fwait
xchg
mov
inc
push
mov
jecxz
insl
dec
mov
test
inc
loopne
mov
and
decb
pop
fcmove
imul
cmp
in
sbb
or
sbb
movsl
xor
mov
clc
lretw
repz
fstl
xor
lahf
mov
xor
fcmovbe
add
scas
popa
fisubl
lds
cmc
and
mov
jno
push
sub
push
mov
cmp
add
js
dec
pop
fbld
jne
xor
fcmovu
and
mov
adc
mov
repz
jno
test
pop
inc
popf
adc
sub
push
push
jl
idivl
push
cmp
xorps
xor
push
dec
add
movsb
ja,pt
mov
jecxz
mov
int3
lcall
fsubrp
ljmp
ret
dec
jb
mov
adc
int3
or
jp
sbb
and
inc
mov
jbe
hlt
js
outsl
inc
inc
dec
push
mov
sbb
insb
adc
vmwrite
loop
push
shll
enter
or
jne
mov
cmp
scas
arpl
xorl
cmpl
jl
cmc
and
add
test
add
cmp
push
das
mulb
cld
cli
in
and
mov
mov
jbe
bts
aad
push
in
mov
and
movsl
int3
ret
insb
mov
mov
pop
cmp
jno
and
inc
scas
pop
je
mov
xchg
cmp
clc
inc
test
xchg
pop
adc
stos
push
clc
fs
xchg
cmp
mov
inc
call
xor
int
and
pop
mov
push
adc
push
mov
mov
out
fisttpl
cmp
fwait
mov
mull
and
sbb
or
inc
dec
mov
test
mov
mov
std
addl
jbe
addb
mov
jns
and
mov
inc
lret
inc
test
mov
call
pop
outsl
addr16
aaa
add
outsl
fdivs
sarb
mov
fsubrl
lcall
repnz
mov
mov
mov
js
mov
jae
pop
add
lea
gs
dec
pop
inc
fsubrl
mov
les
lcall
adc
xchg
mov
and
test
cmp
xchg
pop
adc
mov
in
mov
rol
lods
add
insl
xchg
pusha
pop
fidivrl
adc
popa
nop
je
or
ret
dec
fadds
mov
xchg
jbe
cs
stos
clc
mov
xlat
adc
push
sbb
out
rol
inc
pop
cwtl
popf
pop
pop
xlat
mov
inc
hlt
xchg
testb
in
cmpsb
jecxz
push
sub
rcr
popf
int3
add
test
push
leave
pop
fs
pop
xchg
push
movsl
sbb
pop
pop
jmp
ret
push
mov
in
ds
push
mov
dec
and
outsb
mov
shrl
jmp
adc
fsubrl
pop
mov
sub
dec
call
popa
adc
mov
pop
lret
mov
fists
xor
movsl
dec
int
jp
jg
out
popa
xchg
leave
movsb
out
xor
enter
push
popf
icebp
xchg
jo
nop
sbb
mov
aaa
dec
lcall
xor
stc
das
notl
sub
fsub
aas
and
push
ficoms
loopne
push
mov
int3
jp
iret
mov
xchg
push
stc
sub
xchg
xor
cmp
pusha
cmp
aad
aad
roll
addr16
pop
sub
insl
jp
push
fcomps
imul
cltd
cmc
fbstp
fs
jmp
bound
mov
mov
jo
cmp
pop
movsb
jge
cmp
mov
mov
loopne
jo
hlt
inc
adcl
adcb
or
pop
test
and
lock
and
and
push
dec
fidivl
decl
fisubrl
aam
pop
jmp
sahf
jnp
jo
dec
outsl
push
icebp
fidivl
fwait
mov
movsl
clc
jne
sbb
and
ljmp
mov
ds
cmpl
mov
mov
xchg
or
nop
pop
nop
push
stos
cs
push
nop
mov
xor
jae
sbb
mov
mov
call
push
fcomp
push
lds
ja
out
ret
clc
pop
scas
push
insb
stc
jmp
inc
hlt
cmpsl
sub
divb
xor
push
pop
ficomps
shl
inc
negl
insb
sub
ss
imul
add
mov
cmp
mov
push
push
mov
pop
lcall
test
inc
mov
inc
pusha
fcmovb
push
js
and
inc
jns
adc
stos
push
outsl
mov
arpl
es
ficoms
adc
xor
je
leave
dec
lret
or
inc
sbb
xor
jae
jbe
lock
mov
mov
andl
mov
sub
jns
sub
jne
loop
out
adc
or
out
ret
xchg
mov
cmp
add
push
xchg
inc
add
in
stc
out
sub
or
stc
mov
jns
mov
mov
and
cwtl
or
mov
cli
lds
in
pop
data16
imull
inc
push
shrl
outsl
sbb
lahf
gs
stos
int
pop
lea
in
pop
std
mov
sub
jle
daa
or
loop
adc
test
mov
inc
push
and
les
rcr
sbb
repz
mov
pop
je
mov
test
jno
push
pop
dec
pop
mov
aam
or
leave
lds
test
pushf
cld
add
adc
xchg
and
xchg
adc
std
dec
mov
xor
sbb
mov
xor
iret
xlat
inc
and
or
xlat
rorb
insb
sbb
pushf
je
and
aas
xchg
inc
into
out
out
pop
mov
adc
fwait
scas
xor
lahf
das
xor
lods
call
mov
repz
xchg
sub
leave
push
ret
mov
in
rorb
sbb
ds
lods
insb
int
push
cmc
cmp
dec
jge
lea
sbb
add
inc
movsl
mov
adc
add
mov
shll
mov
lahf
sub
or
gs
sbb
xor
out
mov
and
ss
jbe
in
sbb
out
ds
xchg
repz
aad
int3
arpl
test
pop
inc
mov
rclb
mov
mov
int
mov
sbb
daa
jbe
sbb
xor
mov
negl
xor
cli
or
push
lods
adc
jmp
sahf
repnz
dec
xlat
rcrb
js
jp
inc
mov
push
pop
cmp
jbe
mov
adc
out
dec
xchg
stos
pop
scas
inc
lods
add
inc
adc
lods
push
xchg
mov
lcall
push
mov
add
mov
testb
idivl
adc
mov
movsl
pop
or
jg
clc
sbb
out
xchg
xchg
notb
sarb
in
loop
jg
cmpsb
jp
cld
cmpb
cmpsl
push
jecxz
rcll
sar
xchg
push
jecxz
fisubl
pop
sub
test
pop
jmp
jge
pop
sub
loopne
cli
push
mov
outsb
or
xchg
mov
sbb
nop
stc
push
cmp
fcmovbe
ljmp
lret
cmc
aad
inc
inc
pop
stos
cmp
test
add
scas
lret
js
out
fnstcw
dec
js
insb
jl
and
stos
aam
jl
inc
stos
xor
push
jbe
in
pop
jno
mov
jmp
in
daa
sbb
cwtl
movsl
lahf
and
lcall
pop
gs
mov
outsl
cli
add
jb
mov
aas
push
or
pop
pop
lods
nop
pop
lret
mov
fstpl
inc
je
add
dec
ds
test
cmpsl
pop
mov
jp
mov
test
lret
adc
xchg
imul
inc
push
gs
add
lea
adc
stc
jp
addr16
jnp
xor
or
or
hlt
cs
lds
add
pop
ss
or
loope
inc
pop
jge
pop
cmp
pop
pop
push
shrl
mov
sub
shlb
push
push
push
pop
ss
das
fisttpll
push
hlt
jb
das
imul
loope
cwtl
int
and
out
aam
rorb
mov
mov
mov
add
add
cli
pop
sub
popf
lcall
in
add
pop
xchg
scas
arpl
notl
pop
inc
dec
repz
mov
or
ja
add
addr16
jno
je
jbe
or
adc
pop
xor
sub
jbe
sub
sub
mov
sbbl
and
jg
add
ficompl
out
mov
es
loop
cs
xchg
pop
pop
cmpsl
in
pop
mov
push
popf
mov
andb
adc
add
cmp
out
jle
sub
aas
dec
aas
pop
sub
pusha
lock
lds
or
popa
lods
jnp
arpl
pop
xchg
jecxz
dec
call
repz
rorb
jle
add
into
stos
sbb
pusha
imul
int3
push
pop
outsl
stc
hlt
dec
fcmovb
orb
mov
inc
add
repnz
mov
dec
ja
hlt
push
nop
jg
fcomps
insl
fadds
lcall
and
and
lahf
je
fdivp
testb
dec
dec
xchg
loope
push
sub
sub
outsl
adc
dec
xchg
add
fwait
in
aam
pop
sbb
inc
sub
add
pop
pop
dec
xchg
vcomiss
add
xor
test
mov
pop
call
in
dec
cmp
cltd
iret
and
in
mov
push
jbe
testb
mov
xchg
fisttpll
test
adc
addr16
cmp
lret
xchg
enter
int3
std
dec
adc
lock
ficoms
stos
jl
add
scas
rcrb
fisubs
adc
in
fs
adc
xor
popa
jns
pop
adc
jbe
dec
shrb
xchg
jb
ror
sti
movsb
xchg
jnp
inc
int
fildll
sbb
sub
push
inc
test
mov
or
lahf
pop
jl
inc
cmp
jecxz
jne
sbb
jno
outsb
bnd
adc
sti
insl
push
int
es
test
mov
fdivs
xchg
xchg
pop
jbe
jnp
roll
xor
cmp
je
cmpl
xor
fstpt
push
fsubs
xchg
popl
mov
cs
mov
jecxz
les
mov
sti
hlt
ret
aaa
das
xchg
lods
cmp
xor
dec
out
andb
cld
aas
and
and
mov
mov
test
inc
jo
push
lock
xor
jge
push
xor
mov
and
xorl
icebp
xor
cmpsb
stos
xor
and
inc
xor
inc
xor
bound
mov
sub
outsb
testl
push
mov
pop
andl
pushf
dec
roll
jb
mov
lcall
arpl
jecxz
xor
into
je
insb
pop
jecxz
sub
inc
push
fists
les
je
jge
pop
sbb
rcrl
xchg
and
jecxz
push
sbb
int
sub
pop
aas
cmp
xor
ret
pop
fmul
and
popf
xor
or
mov
or
in
fs
imul
gs
dec
cmp
into
es
xor
test
das
mov
stos
std
push
push
xchg
sbb
dec
sti
jp
cld
sub
jmp
bound
into
push
and
cmp
das
inc
mov
stos
clc
fcompl
pop
jns
inc
movsl
add
xor
xor
pop
cmp
mov
and
fists
repnz
adc
push
in
jp
int3
fdivrp
lret
je
test
out
in
jbe
cmp
fsts
in
lret
mov
mov
aad
jnp
inc
sbb
or
mov
push
jo
das
in
jle
aam
pop
sti
xor
push
inc
out
inc
cmp
incl
cwtl
out
ret
ret
scas
adc
sub
clc
and
lds
add
aad
adc
shl
inc
mov
mov
icebp
jg
cmp
test
enter
pop
jmp
inc
and
xchg
fcomi
jp
jae
call
hlt
mov
sub
jo
and
mov
or
mov
xor
sbb
scas
dec
adc
cs
fildl
imul
pop
cs
jne
loopne
xchg
in
stc
sti
xor
bound
imul
sbb
in
sub
inc
mov
jg
dec
lcall
outsl
out
dec
aam
andl
out
cmpsl
daa
or
mov
ficompl
idivb
cmpsb
idivl
push
adc
test
dec
xor
imul
movsl
mov
mov
sahf
push
aaa
and
aas
fwait
cmpsl
dec
fstpl
negb
mov
cmp
add
mov
aaa
shll
mov
repnz
xor
jmp
adc
std
lods
jno
xchg
mov
lret
sub
adc
int3
push
push
inc
cwtl
adc
add
bnd
sbb
stos
test
js
scas
and
clc
test
inc
js
cmpsl
cmp
mov
dec
xchg
clc
repz
aaa
in
xchg
jo
jg
xor
cmp
cwtl
xor
je
mov
push
jae
or
cmp
cmp
inc
adc
mov
movsl
adc
mov
loop
loop
pop
pop
jg
movsb
shrb
sbb
shrl
xchg
inc
adc
sbb
push
stos
mov
pop
xchg
adc
or
sub
mov
orb
lret
push
mov
les
xchg
push
sub
cli
xchg
ja
pushf
xchg
and
call
or
iret
je
pop
add
lret
das
mov
into
mov
add
sbb
imul
xchg
cltd
pop
or
cld
xor
or
lods
mov
sbb
insb
cs
jae
lret
std
sbb
repnz
xchg
mov
movsl
ret
xor
or
cmp
ret
mov
test
call
push
or
out
sbb
or
arpl
push
lods
xor
jmp
repnz
inc
loope
test
aas
dec
mov
fwait
xchg
push
add
adc
ret
push
ljmp
icebp
cli
pop
push
adc
mov
scas
shl
shl
push
sahf
lahf
scas
cli
or
cld
or
mov
shlb
adc
jmp
dec
jbe
add
in
push
pop
nop
pushf
fists
icebp
leave
mov
push
loop
test
xchg
loop
ret
sarl
or
pop
mov
jge
pop
sub
loope
in
mov
xor
mov
cmp
mov
inc
jg
popa
adc
outsb
repz
pop
nop
cmp
inc
jp
out
dec
fisubs
pop
sti
loop
xor
mov
jnp
stos
xchg
mul
jae
jo
cltd
lahf
xchg
ret
jbe
push
or
pop
popa
imul
add
xchg
insl
push
repz
int3
lds
or
enter
fmuls
fildll
or
add
arpl
add
adcl
rorl
dec
movsb
adc
jbe
insl
mov
dec
cmp
lret
ret
mov
pop
lods
xorb
mov
mov
call
cltd
and
push
cli
xor
push
xor
inc
clc
lods
pop
inc
jle
xchg
ds
shl
cld
cmp
enter
push
jae
dec
sub
xor
popa
mov
imul
pusha
jp
push
pushf
mov
arpl
xor
push
aam
jne
arpl
jge
pop
shr
orb
repz
pop
or
fdivr
fcoml
push
pushf
scas
popa
movsl
mov
xlat
out
mov
push
pop
and
decl
push
mov
pusha
dec
pop
xchg
mov
xchg
xor
in
sbb
sbb
mov
lds
out
cltd
push
je
pop
loop
push
cmp
insl
pop
adc
fildl
mov
cmp
fistps
ljmp
xchg
int
mov
lret
cmpsb
cmpsb
xor
mov
sti
fisttpll
mov
cmp
sbb
loopne
jmp
adc
cwtl
out
leave
les
daa
jnp
xchg
popa
or
adcb
inc
fldl
jg
cmp
outsl
sbb
popf
jb
mov
sub
sbb
or
pop
dec
dec
cld
test
adcl
loopne
add
repz
xor
sbb
cmp
or
insb
int
xor
inc
xchg
sbb
in
clc
andl
mov
bound
and
lea
pop
mov
xor
adc
lret
xchg
mov
shll
xchg
cmpsb
xor
in
sub
out
rclb
mov
dec
mov
xchg
cmpsl
movsb
out
int3
cmp
out
subb
imul
ljmp
dec
sbb
aam
pop
inc
inc
popa
subl
adc
je
push
inc
xorl
ds
xor
mov
aaa
mov
mov
push
ret
jmp
mov
insl
xchg
stc
lods
jge
imul
int
repnz
cmp
jg
jnp
mov
in
ss
sbb
je
add
jnp
xor
add
cs
ja
imull
xor
mov
les
nop
jecxz
stc
dec
push
inc
sbb
mov
pop
notb
sub
dec
sub
inc
sub
popf
push
lret
push
shll
hlt
push
testl
ror
fsts
fnsave
sub
daa
pushf
jge
inc
adc
inc
add
pop
jle
loopne
mov
in
pop
pop
push
popf
push
mov
mov
jl
jne
shll
sub
xchg
sbb
leave
adc
out
stc
xchg
xchg
cmp
xchg
or
inc
jo
mov
adc
jns
mov
xchg
outsb
push
ret
int3
jnp
jl
mov
xchg
je
icebp
push
fisttps
pop
adc
jb
pop
loope
pop
int
inc
aas
jg
es
sub
jmp
push
push
lahf
decl
jbe
out
cwtl
lds
push
scas
cmp
imul
push
ret
lahf
cmp
mov
fidivs
sub
cmp
dec
addl
mov
shll
cmp
dec
sub
sbb
leave
or
or
or
or
filds
push
adc
and
sbb
test
sub
jp
mov
inc
sbb
subb
mov
popf
fsubs
dec
mov
xor
aam
jns
jmp
sub
ja
pop
mov
xor
push
mov
pop
jge
fcmove
vpsubusb
and
add
iret
int3
xor
inc
dec
fcomps
shl
insl
push
int
addr16
std
arpl
inc
push
pop
push
push
dec
pop
aad
cmp
dec
pop
push
adc
into
int3
jae
sar
push
pop
mov
outsl
enter
xorb
hlt
lods
mov
xchg
lds
mov
mov
or
ss
mov
ret
ret
and
in
jne
jo
jp
jnp
outsl
mov
or
pushf
jl
or
cmc
ljmp
cmp
das
jg
add
mov
inc
in
lahf
cmpsb
outsl
mov
stc
ret
adc
or
mov
adcb
sti
push
je
add
ret
mov
lret
xchg
mov
std
cmp
mov
inc
and
dec
in
loope
mov
lret
and
icebp
aam
test
test
arpl
fadds
imul
leave
mov
mov
popa
dec
add
xchg
xor
jo
sub
add
int3
rcrl
pop
add
add
aad
in
scas
stc
out
pop
xor
pushl
sub
pop
dec
jl
dec
push
cmpsl
adc
shrb
lret
rcll
ds
test
je
inc
popf
ret
pop
mov
jb
xchg
mov
ss
add
or
or
out
je
jmp
add
clc
movsb
mov
xlat
sti
push
xchg
jo
mov
in
jp
cli
cwtl
mov
jbe
or
arpl
add
cmp
rcl
into
data16
in
xorb
hlt
leave
lret
jge
shrl
in
repz
sbb
sahf
sbb
jg
ret
insb
jmp
jmp
stos
jne
in
insb
cmp
andl
gs
ret
ja
inc
mov
insl
pushf
xchg
mov
and
add
or
push
outsb
cmp
js
nop
cmp
push
push
loope
in
out
leave
int3
shlb
arpl
inc
sbb
rol
loop
fwait
mov
ss
lcall
ret
xor
into
jg
sub
pop
cli
sbb
push
lahf
and
sti
pop
cmp
xor
movsb
insl
test
inc
loop
lods
cli
xor
neg
inc
xor
xchg
inc
xor
ja
dec
jmp
outsl
lahf
je
stc
arpl
aas
or
jl
in
inc
cmp
push
xchg
mov
fimull
pop
cmp
cmove
das
sbb
test
aaa
push
fiaddl
les
aad
mov
out
lcall
popf
dec
and
adc
test
repz
outsl
cmpsl
push
push
xchg
adc
pop
and
loopne
push
ss
xchg
je
iret
or
mov
or
lret
leave
mov
jb
test
adcb
test
sub
hlt
test
and
xor
dec
addr16
or
call
and
lret
or
adc
or
xchg
xor
out
pop
sbb
lret
cmpsl
ja
inc
cmp
mov
aam
repnz
and
fistl
xor
test
cmc
bound
test
cmpsl
lods
rcrl
ljmp
stos
sti
jg
fnstenv
mov
outsl
aad
ljmp
cltd
sub
and
shrl
xchg
cmp
dec
ftst
sbb
in
mov
sub
pop
jne
lods
xor
hlt
cmp
or
mov
dec
and
out
jl
outsl
pop
mov
ljmp
mov
leave
hlt
mov
sti
cs
addl
inc
sub
jg
xor
sbb
jnp
mov
mov
mov
aaa
loopne
sub
inc
add
and
xchg
outsb
inc
shlb
xchg
xchg
xchg
scas
cmpsb
push
popf
xchg
sub
pop
adc
jo
mov
pop
mov
sbb
outsl
push
repz
xor
imul
jmp
ret
leave
rclb
mov
xchg
scas
flds
pop
nop
in
data16
cmpsb
fadds
insl
jns
je
bnd
or
mov
jle
jp
mov
cmp
cmp
pop
jle
sbb
call
lods
inc
mov
rol
mov
xor
call
ja
add
push
mov
sub
scas
push
movsb
fcompl
push
incb
out
std
out
jb
lahf
dec
push
pop
imul
mov
popa
sbb
inc
jp
hlt
mov
pusha
addr16
jno
movsb
in
insl
lock
sbb
ror
and
adc
in
pop
add
sub
nop
testb
push
inc
in
arpl
jecxz
sbb
in
out
or
xchg
jno
inc
mov
push
cltd
jno
fisubrl
jmp
out
add
mov
mov
ja
out
push
leave
or
jmp
ret
mov
inc
ret
fucomi
inc
call
shrl
jno
and
into
pop
push
xchg
sub
dec
inc
jno
scas
sbb
lods
jnp
jnp
sti
xchg
mov
mulb
or
popf
insb
in
insl
in
lods
enter
xor
sub
jae
shl
jns
movsb
enter
ret
movsl
sub
ret
fcoms
lea
call
mov
inc
jle
cmc
jg
pop
mov
rcr
xchg
mov
pop
jno
data16
test
lock
push
xlat
int3
in
fs
lods
loop
enter
ficoms
pop
add
decb
push
mov
in
out
pop
mov
mov
sub
jns
ss
push
sub
push
adc
bound
lcall
lods
movaps
mov
je
dec
stc
rclb
dec
mov
insl
mov
jb
xlat
mov
sbb
lcall
or
aaa
xchg
popf
jns
sub
mov
nop
aad
push
daa
xchg
jno
add
imul
mov
pminub
xorl
bound
jbe
call
push
xor
sub
pushf
push
xchg
mov
adc
mov
roll
jne
out
mov
dec
das
cmpsb
loope
lahf
and
mov
popa
sbb
cmc
popf
ret
fistps
out
mul
xchg
xchg
push
call
jno
sub
push
fdivp
rcll
dec
daa
into
pop
test
scas
jl
adc
mov
sbb
xchg
pop
in
dec
mov
xchg
int
sub
sbb
add
arpl
sbb
push
maskmovq
idivl
push
ss
inc
dec
pop
scas
push
sbb
push
jbe
push
dec
out
sub
fnstenv
mov
cmpsb
or
sti
gs
insl
dec
sti
adc
sbb
movsl
push
push
sahf
fidivrl
loopw
movsl
ljmp
outsl
xchg
inc
movsb
ds
mov
mov
lret
cmp
ror
push
lods
mov
jmp
les
clc
sub
and
dec
dec
inc
ljmp
add
xor
arpl
loop
data16
sti
popa
das
mov
loop
addr16
out
lret
push
lea
test
lods
xlat
int3
jg
adc
mov
fsts
movsb
mov
das
int3
std
xchg
adc
push
cmp
stos
shrb
test
xchg
or
popa
mov
push
stos
and
fbstp
in
fwait
mov
cmp
test
dec
cltd
mov
pop
test
mov
mov
lret
add
cmpsl
test
scas
xchg
aad
dec
fsubs
insl
fisttps
lahf
cmc
or
jns
lods
mov
test
dec
jecxz
or
hlt
clc
lret
stos
mov
push
test
leave
popf
cld
imul
inc
push
cmp
xchg
gs
loopne
imul
dec
sbbb
sbb
fistpll
orl
out
dec
bound
sbb
jmp
scas
addr16
or
mov
push
cmp
cmc
xchg
push
mulb
sub
sub
jbe
popa
out
lret
adc
bound
ja
aad
or
mov
loope
fwait
jae
daa
sar
call
add
clc
mov
pusha
cld
mov
pop
rcl
lahf
inc
and
jae
jne
sarl
mov
ljmp
or
sbb
and
aad
fisttps
jge
adc
and
cwtl
outsb
fadds
in
loop
dec
in
insb
in
and
xor
fwait
imul
cli
out
test
insb
push
dec
or
pushf
mov
cmp
jb
mov
test
rclb
mov
mov
push
pusha
repnz
call
fstpt
mov
sbb
pop
rolb
fnstcw
fldcw
lods
add
jbe
inc
sbb
aaa
clc
stos
mov
mov
mov
pusha
push
mov
xchg
mov
cmp
nop
add
test
jp
mov
orb
sub
lods
add
cmpsb
xor
or
mov
fs
and
mov
daa
dec
cmp
push
mov
stc
or
cmp
or
xor
fwait
mov
orl
xor
loopne
and
mov
fwait
or
and
test
jmp
test
lock
sbb
daa
and
cmp
fwait
gs
pop
loope
mov
cmpsb
lods
insb
xchg
pop
cmpsl
xchg
or
repnz
in
jmp
stos
pop
adc
mov
xchg
jno
test
out
pop
jecxz
cmp
fsubr
dec
out
daa
stc
adc
mov
sbb
sub
sarl
ljmp
mov
in
mov
or
loop
aas
mov
cmp
ja
mov
mov
cltd
sub
dec
push
xlat
xorl
lahf
lret
mov
add
shll
dec
fadd
icebp
lret
into
push
ficoml
adc
imul
js
and
jle
mov
xor
insl
xchg
lcall
stos
sbb
cmp
mov
in
pushf
cmpsl
popf
ljmp
shrl
mov
xor
and
jbe
xor
lock
push
aaa
sbb
dec
pop
sbb
pushf
clc
pop
cmp
adc
dec
sub
add
xchg
sarb
stc
inc
pop
iret
loop
data16
ret
nop
les
jne
jp
cmp
xor
sub
inc
cmp
jne
adc
outsb
shrb
ljmp
clc
pop
xor
dec
in
jns
rolb
xchg
jl
ljmp
lods
and
jns
test
push
mov
out
sbb
pop
mov
pop
inc
adc
hlt
sti
pop
jns
js
jmp
sarb
ja
inc
xchg
cmp
aaa
sub
push
pop
icebp
out
inc
fists
stos
dec
pusha
lret
mov
adc
fldenv
out
lods
mov
dec
test
call
cmp
sbb
mov
sbb
jg
mov
adc
loop
fbstp
and
adc
pop
or
rorb
push
jmp
and
in
adc
jnp
orb
mov
or
inc
fldcw
cmp
stos
ror
mov
adc
pushf
mov
or
pop
mov
add
dec
arpl
adc
movsl
xor
mov
nop
pop
sarb
dec
cmp
mov
jae
and
sbb
cmp
jbe
je
xchg
into
sub
shrl
seto
fdivr
inc
addr16
mov
sub
in
inc
fadd
dec
into
pusha
out
cmpsl
out
clc
in
pop
rolb
and
popf
pop
je
test
into
mov
popa
inc
imul
stc
cld
pop
lahf
stos
cmp
pop
ja
ss
push
sub
xor
in
push
and
mov
and
and
enter
jmp
lock
jns
shrl
popa
or
adc
sub
out
or
ret
repz
test
cmp
or
jne
fsts
sub
bound
xchg
mov
in
fwait
mov
push
mov
testl
out
xor
sbb
mov
jae
lret
xlat
inc
mov
pop
leave
cs
mov
pop
sbb
pop
mov
cmpsl
adc
push
mov
shlb
dec
pusha
jbe
loopne
dec
or
jae
addl
mov
idivl
mov
jb
sbb
imul
out
stc
xchg
rclb
inc
and
mov
icebp
mov
push
cmp
pop
jbe
jle
cmp
and
mov
out
adc
int3
mov
jno
adc
or
xchg
cld
test
add
mov
movsb
ficomps
and
xor
pop
lret
aam
push
push
push
mov
mov
addr16
push
pop
inc
scas
jge
punpckhdq
push
add
add
stos
sbb
ret
mov
bound
test
pop
nop
push
and
fbld
jg
jp
dec
mov
gs
cmp
cmc
fnstenv
fldt
fs
test
cwtl
mov
push
sbb
mov
jecxz
jno
rcl
push
jns
aad
xlat
in
dec
mov
mov
testl
add
lods
sub
in
push
cs
pop
dec
cmp
sbb
xchg
xchg
pop
in
cmp
mov
shll
imul
enter
sbb
sub
cmp
xchg
inc
std
pusha
add
push
xchg
and
mov
inc
test
push
pop
mov
in
shll
int3
adc
adc
aad
push
jnp
fs
cmp
pusha
jns
mov
mulb
fcmovbe
cs
mov
cmp
shrl
iret
pop
sub
int
xchg
xchg
pop
xor
cmpsb
test
cmpsl
mov
outsl
sbb
pop
pop
mov
mov
mull
sbb
pop
insb
sbb
js
mov
push
js
jge
stos
or
cmp
icebp
pop
fstl
cmp
shl
jbe
iret
jae
push
lods
push
imul
xorb
loope
cmp
aaa
jg
jp
call
and
leave
xchg
sbb
in
sub
aad
jno
xchg
pusha
sbb
add
mov
fiaddl
rcrl
insb
jl
push
and
push
imul
scas
mov
pop
cmp
and
leave
aas
cmp
mov
rcrl
pop
xor
outsl
or
sbb
aad
cli
aas
adc
movsl
pop
lss
cltd
in
mov
sbb
out
cmpsb
sbb
imul
lcall
into
fs
or
cs
inc
push
sbbl
test
insl
and
mov
mov
cmc
fwait
xor
fiadds
outsl
add
cmovnp
das
cmp
imul
mov
or
jecxz
shll
push
sub
dec
adc
adc
lcall
lret
pop
lret
sar
dec
scas
mov
mov
ljmp
repnz
inc
cltd
pop
movb
push
sub
pusha
inc
xchg
test
out
xchg
cmp
jbe
ds
xchg
adc
cmp
fwait
push
and
pop
stos
push
xchg
fcomps
les
loop
or
ss
les
fldt
add
or
pushf
stos
pushf
cmovp
lds
in
roll
jo
mov
pop
in
je
jp
imulb
cmp
mov
mov
clc
adc
dec
clc
clc
dec
pop
icebp
inc
fcmovnu
iret
pop
dec
xor
movsl
add
outsl
mov
inc
call
or
xchg
push
cmc
mov
mov
pop
shrl
mov
fstl
les
xchg
jno
mov
repnz
pop
xchg
or
xlat
jle
inc
mov
test
pop
xchg
cmp
int3
sub
clc
xor
xor
add
cmp
cld
shrl
sbb
sarl
jg
cmp
mov
dec
jg
daa
or
and
and
andl
sub
mov
rol
jmp
xchg
insl
xchg
jbe
cli
clc
lock
cmpsl
insl
rcl
inc
and
pusha
dec
or
inc
jl
js
jns
cmpsl
out
inc
mov
or
mov
in
sbbb
test
jge
or
mov
ret
push
xchg
lea
adcl
es
dec
rcr
mov
jb
scas
push
xchg
aaa
jne
and
mov
daa
clc
repnz
cltd
add
xor
mov
fstpt
cmp
mov
shlb
push
push
jecxz
sbb
call
mov
push
jns
pop
test
cmpsb
push
xchg
ror
loopne
or
mov
xor
push
fnsave
or
loope
movsl
push
push
cmp
sub
and
xchg
movsl
jne
sbb
mov
ds
pop
pop
out
andl
sub
in
in
mov
ja
and
shll
icebp
dec
int3
jo
cmpl
xor
or
test
cltd
inc
popf
dec
push
jnp
out
movsb
push
out
lods
cmpl
sbb
cmp
cmp
sub
stos
push
ss
gs
cmp
lcall
inc
mov
leave
fs
inc
in
cltd
xor
pop
imul
ja
cmpsl
or
jae
cmp
loopne
sbb
jl
sub
pop
dec
loopne
lcall
xchg
mov
daa
in
mov
mov
fsubl
xchg
mov
dec
imul
and
loopne
xchg
jae
mov
mov
inc
das
dec
shr
out
mov
xchg
std
jae
loopne
lcall
pop
or
push
cmpsl
pusha
jb
lahf
jns
cmp
mov
fcmovbe
lahf
test
mov
lods
cmpsl
loopne
xor
cmp
xchg
in
xor
or
jbe
mov
jne
data16
xchg
and
pop
mov
jo
pop
mov
repz
outsl
mov
xchg
imul
jae
sbb
pop
shlb
mov
jl
popf
push
jae
and
aas
push
stc
fisubs
cmp
test
fnstenv
mov
push
in
std
push
repz
subb
xorl
shll
daa
add
jnp
dec
lret
pop
push
cli
frstor
cs
pop
ret
in
movsl
cmp
push
scas
push
in
xchg
nop
fstpt
add
mov
in
mov
test
jae
inc
fsubp
push
and
pop
mov
fisubrs
les
jp
fcomip
ja
add
aaa
xor
cli
cmp
adc
pop
jecxz
mov
inc
push
push
mov
das
ret
cwtl
xchg
xor
dec
sbb
pop
insl
jb
repnz
mov
sbb
cmp
punpcklbw
push
or
repnz
int
add
jno
jl
mov
repnz
mov
lods
xchg
lcall
flds
mov
bound
pop
dec
mov
pop
in
in
jge
aam
jae
xchg
dec
insl
add
js
mov
and
in
and
xor
pushf
push
sub
and
cs
adc
lock
call
sbb
imul
imul
jns
or
imul
test
xor
scas
sub
dec
jo
int
ret
and
out
xchg
mov
andl
inc
rcll
jp
fildll
pop
mov
std
mov
push
shrl
inc
sbb
lock
adc
mov
je
xchg
pop
lret
movsb
andl
das
ret
cwtl
mov
cs
jmp
inc
clc
or
push
arpl
mov
daa
jbe
cs
sbb
sar
mov
fsubs
int
mulb
and
in
jp
mov
es
or
cmc
roll
jo
dec
jbe
lods
sti
and
jge
pop
stc
adcb
stos
mov
or
sub
sub
mov
add
xchg
adc
xchg
add
adc
cmp
sbb
int3
idivb
pop
jns
push
call
hlt
popa
pop
sahf
mov
sti
cmp
dec
mov
sub
push
xchg
jnp
repz
adc
mov
pop
sti
push
cli
jp
ljmp
or
fcoms
int
fisttps
repz
inc
mov
fwait
loop
or
popa
dec
jge
adc
enter
leave
lea
cli
lods
lret
cmc
cmc
in
pop
dec
seto
xchg
cmpl
test
stc
mov
jne
fisttps
jnp
mov
scas
xchg
test
adc
aas
test
in
pushf
mov
and
mov
scas
mov
jp
inc
stos
inc
xchg
push
stos
or
sarl
cmc
fidivrs
cmp
sbb
and
in
sbb
pop
shl
mov
clc
in
xor
mov
jmp
push
cmpsb
int
mov
or
aas
jle
lcall
ljmp
sbb
and
pop
sahf
insl
ljmp
pop
mov
mov
mov
das
push
lock
xor
add
jle
fdivrl
xchg
xorl
pusha
add
repnz
inc
mov
mov
cwtl
aas
sub
jo
out
xchg
sbb
pop
jge
dec
jecxz
add
and
fcmovu
dec
pop
test
or
sub
mov
loope
outsl
cmp
sub
cltd
dec
data16
test
xchg
es
imul
push
mov
mov
dec
rcr
dec
stos
cwtl
mov
push
rorl
cmp
fiaddl
sub
pushf
mov
lcall
push
jmp
stc
push
mov
dec
test
jl
cmpb
dec
and
mov
mov
ror
fdivrl
scas
push
out
inc
pusha
cs
fbstp
ja
mov
out
mov
les
movsb
push
fstpt
cmp
xlat
arpl
fcmovu
les
pushl
jnp
lcall
xchg
inc
mov
inc
std
iret
pop
shll
push
mov
addb
mov
jmp
adc
dec
pop
fildl
movsl
rcrl
les
mov
mov
xchg
pushf
sub
pop
mov
and
jecxz
ds
add
faddp
xor
fistpl
clc
ljmp
out
lcall
dec
mov
movsb
cltd
cli
jle
test
pop
adc
cmp
int
push
pop
add
mov
xor
outsb
dec
or
test
xchg
cmc
jle
movl
mov
jmp
dec
xorb
mov
xor
pop
cmpsl
mov
popa
imul
js
xchg
insb
imul
push
clc
mov
xchg
popf
pop
test
xchg
mov
mov
mov
dec
pop
fdiv
and
sarb
lcall
pop
insb
ror
inc
xor
stos
push
hlt
mov
imul
adc
loopne
fcoms
cmp
shll
xor
mov
jecxz
scas
roll
pop
outsb
fs
jae
push
jno
mov
movsl
xchg
mov
es
add
test
stos
and
cld
mov
sbb
adc
pushf
fsubrs
or
xchg
sub
sbb
xor
inc
mov
push
shll
sub
mov
or
ds
and
push
xchg
mov
cld
in
jns
ja
xorb
mov
andb
aas
pop
sub
lahf
cs
mov
std
add
pop
sub
xchg
out
stc
aam
mov
inc
mov
inc
xchg
in
cmc
sbb
dec
inc
cwtl
sbb
nop
jl
dec
cltd
in
jne
pop
out
xor
adc
sbb
jae
sahf
jp
incb
xor
orb
cmp
mov
loope
clc
or
jnp
testb
lods
jnp
imul
shrb
int3
in
xor
inc
out
stc
mov
sub
xor
mov
shll
jmp
pop
loopne
fwait
mov
jns
je
lcall
or
jmp
ds
pop
push
test
dec
xchg
stos
fs
adc
ss
stos
mov
popf
or
sahf
test
push
out
jo
mov
or
cmc
inc
jne
mov
cmp
lahf
jae
aaa
scas
push
out
xor
or
xchg
movsl
push
fcomps
push
mov
sub
cs
int
mov
push
or
jnp
sub
js
test
xor
mov
cmp
push
cmp
inc
daa
jl
cmpsb
shll
pop
scas
lea
cmp
insl
loop
inc
nop
inc
cltd
loope
loop
xchg
inc
addr16
sarl
dec
xor
sahf
jge
and
dec
jge
dec
cmp
adc
or
loopne
inc
in
xchg
mov
cmp
popf
xchg
sub
and
fidivrs
and
shlb
dec
xor
sbb
hlt
inc
or
fs
push
dec
mov
jb
push
add
jg
mov
mov
cmp
push
mov
jl
push
fstpl
fcompp
int
repz
mov
inc
ret
mov
adc
lret
test
call
push
cmpsl
and
lret
mov
les
xchg
mov
xor
movaps
aaa
test
sti
sbb
pop
mov
push
cmp
add
lods
int
pop
adc
or
push
lret
mov
mov
pop
mov
aaa
mov
not
out
sbb
out
lcall
jae
scas
mov
mov
jnp
mov
pop
push
or
mov
cltd
mov
jae
es
stos
mov
aad
xchg
push
sbb
cltd
pop
fnstenv
loop
mov
sbb
and
jle
add
or
rcrl
push
addr16
arpl
ret
jo
int
ss
imul
push
aas
or
sti
pop
jnp
mov
adc
dec
popw
les
sub
mov
and
dec
iret
pop
je
xchg
dec
jae
lret
daa
xlat
je
inc
sbb
inc
xlat
ret
and
jno
dec
jne
inc
jne
sbb
cld
push
addr16
and
arpl
adc
stos
out
lds
xchg
adc
les
or
cmp
xchg
mov
fs
mov
sbb
sahf
ja
rorb
in
pop
mov
jne
xlat
leave
add
jmp
xchg
push
ret
cmp
sbb
aam
sbb
jns
pop
jl
mov
adcb
sbb
loope
sbb
cmpsb
jne
mov
es
xor
sbb
sbb
insl
lods
aas
adc
add
lock
jnp
mov
pop
mov
cmp
lods
test
push
xor
lret
rcrb
scas
xlat
nop
push
dec
dec
or
sub
jg
shl
mov
in
xchg
movsb
lret
ljmp
pop
jge
push
lea
gs
dec
jge
fimuls
iret
sub
test
cli
int
dec
adc
add
in
adc
mov
mov
in
adc
mov
pop
xchg
sub
in
scas
mov
in
notl
adc
sarb
test
imul
rol
cmc
jp
lcall
loope
mov
ss
jo
push
shl
jno
pop
push
in
push
sbb
mov
test
loop
jbe
or
xchg
outsl
fs
xor
loop
push
repnz
fistps
adc
mov
push
test
out
ficomps
sub
js
jle
mov
rcrb
sar
mov
out
or
dec
lds
xchg
aad
fistps
subb
hlt
xchg
outsl
icebp
pop
fstpt
outsb
outsb
dec
add
pop
or
dec
and
or
negb
jp
sbb
shr
stos
cltd
dec
faddl
jl
cmp
stos
pop
test
call
or
and
notb
push
filds
movsl
sub
ret
cmp
lret
dec
dec
in
negb
ss
ret
fisubl
sbb
or
shlb
imul
das
sub
push
jae
mov
jbe
enter
or
lcall
jmp
xchg
xor
xchg
aas
cmpsl
stos
mov
xor
aam
jmp
xchg
push
lods
dec
dec
fsubrl
ljmp
clflushopt
xor
in
into
in
mov
inc
adc
js
shl
fstp
jne
jbe
call
jns
sub
or
fbstp
inc
imul
jmp
push
mov
lahf
sarl
adc
push
add
mov
pusha
jne
fstps
xor
add
mov
xchg
call
or
jnp
addr16
je
movsl
dec
jbe
mov
mov
or
adc
imul
ss
insl
xchg
enter
shl
mov
test
or
dec
dec
nop
mov
sbb
or
jo
ja
pop
idiv
jp
ja
adc
add
fidivrl
mov
add
nop
inc
jmp
mov
mov
xchg
into
xor
out
add
pushf
add
in
ds
in
outsb
jnp
cmp
and
ret
fidivrl
pop
pop
ljmp
addr16
and
or
push
lret
cmp
ja
sub
add
mov
mov
mov
and
cmp
cmpsl
js
mov
pushf
xchg
or
scas
or
popa
jp
ret
lret
data16
inc
push
lds
pop
jl
test
cli
jb
in
push
pusha
dec
dec
pop
scas
test
loope
adc
stos
pop
jecxz
cmp
cmp
xor
add
adc
pushl
cmc
icebp
in
xchg
push
rol
mov
daa
push
jg
jno
push
xchg
ljmp
jns
sar
aad
mov
sahf
mov
pop
sbb
sub
pop
pushf
jne
into
roll
sub
out
loopne
mov
dec
add
sbb
pop
loope
mov
ficoms
ret
or
rol
push
icebp
adc
test
data16
sub
cmp
mov
jmp
decb
out
inc
cmc
js
mov
xchg
psraw
jnp
xchg
stc
push
das
or
dec
call
dec
test
mov
add
cs
fistpll
cs
iret
pop
leave
or
or
push
xlat
lods
int
mov
cmpsb
push
jns
xor
xchg
inc
int
movsl
scas
jb
cmpsb
loope
push
lods
test
ret
jmp
shlb
arpl
sub
xor
jle
sub
notb
jecxz
out
je
mov
out
xor
scas
dec
and
sbbl
mov
push
push
loope
bound
xchg
push
imul
fstps
add
or
stc
push
mov
push
lea
xchg
inc
imul
lds
adc
adc
jno
cltd
aam
jle
int
inc
scas
pop
sbb
cs
inc
in
xor
mov
pop
inc
xchg
sbb
dec
cmp
notb
out
lods
das
das
mov
out
xchg
outsl
push
enter
cs
cli
jg
ret
dec
out
in
sub
imul
xchg
jae
xor
imul
lahf
jge
add
lret
cltd
jno
xchg
jecxz
mov
adc
push
ret
and
sub
or
mov
cmp
dec
push
outsb
add
push
cmp
jbe
push
daa
or
add
mov
xchg
imul
or
xor
mov
inc
shll
cmp
icebp
adc
jge
pushf
int3
test
cmp
fidivl
lahf
mov
and
mov
in
bound
dec
fdivrl
arpl
int
sub
ds
sbb
nop
mov
pop
mov
lcall
mov
mov
ds
pop
call
push
cld
jae
stos
shll
pop
lret
mov
xchg
adc
dec
sbb
pop
outsl
and
inc
sysexit
icebp
cmp
fdecstp
sahf
incb
leave
or
mov
jl
xor
adc
cmpsb
imul
add
data16
pop
sahf
outsl
sub
iret
mov
lahf
cmp
daa
addr16
insl
movb
xchg
js
repz
int3
and
jae
inc
fld
adc
pop
cmp
sbb
shlb
xchg
popf
jno
jl
and
orl
scas
ret
mov
cmp
mov
mov
hlt
push
pushf
lods
mov
jb
push
in
and
sbb
test
jb
mov
cmp
push
lahf
sub
xchg
push
add
pop
dec
and
jl
pop
jo
ds
cmc
xchg
and
mov
mov
add
imul
imull
adc
fs
or
sbb
fstl
push
cltd
sub
outsb
stos
fs
and
mulb
xchg
or
push
shrl
adc
mov
mov
not
aad
out
push
pop
loopne
xchg
pop
push
in
xchg
pop
push
push
popf
cmp
ret
fucomip
inc
dec
cmpsb
adcl
mov
outsl
ljmp
sub
adc
movsb
out
push
mov
and
pop
lods
mov
dec
rorb
int
mov
hlt
add
add
das
or
add
or
or
xor
add
and
add
xor
adc
fadd
fsubr
in
xchg
dec
mov
xchg
out
push
mov
push
jb
mov
pop
jg
jo
push
iret
int3
xor
out
rorl
jmp
stos
push
bound
fsubl
xor
testb
xchg
cmpb
cmc
jb
jecxz
xor
imul
shll
ss
in
iret
cmp
cs
inc
or
push
lcall
insb
mov
pushf
outsb
dec
loop
or
addr16
xchg
lods
xor
mov
popa
or
shlb
jo
fimull
into
jae
jmp
fidivl
das
mov
push
mov
ds
out
popf
dec
rorl
mov
xor
std
jg
in
jecxz
jg
dec
mov
and
jmp
fs
out
xchg
ds
in
adc
pop
push
sbb
movsb
insl
cmp
loope
cmp
call
leave
jl
xor
inc
push
gs
adc
out
jnp
ret
daa
xchg
cs
jg
xor
add
xor
subb
push
xchg
idivb
xchg
lret
ficompl
push
stos
mov
jo
aas
mov
mov
push
int
pop
push
push
scas
popa
psadbw
push
dec
sahf
leave
or
sbb
ret
jecxz
xchg
test
mov
mov
sub
bt
mov
popa
add
jnp
push
jae
cmpsl
bound
ljmp
adc
bound
cmp
and
adc
iret
fstl
ficomps
test
push
jae
sbb
sub
pop
out
xchg
aaa
lahf
mov
mov
push
cmp
pusha
inc
cmp
js
add
call
mov
xchg
cmc
repz
in
daa
xchg
call
mov
inc
or
push
jg
out
jbe
loopne
aad
addr16
pop
dec
xchg
popf
pop
test
mov
or
push
or
and
js
fmuls
and
inc
stos
adc
hlt
mov
packuswb
mov
adc
add
sub
mov
jnp
sub
outsl
push
sbb
jle
jae
push
or
jp
shl
test
inc
or
mov
loop
ds
pop
add
sbb
fidivrl
mov
cld
inc
cmpsl
pop
or
mov
repnz
xchg
cmp
xchg
pop
xchg
jns
mov
dec
xlat
cltd
stc
mov
sub
push
mov
in
in
mov
cwtl
add
pop
xchg
mov
jecxz
insl
cpuid
xchg
aas
mov
adc
icebp
pop
rcl
xor
mov
xchg
dec
push
jle
xchg
jp
sub
mov
pop
mov
imul
stos
jbe
int
cmp
and
mov
xor
mov
pop
andb
or
aaa
ret
orb
jns
bound
jge
dec
dec
xlat
jg
mov
xchg
adc
cmp
push
decl
pushf
mov
inc
addb
dec
mov
xchg
mov
pop
adc
adc
dec
es
out
shl
call
jl
aaa
mov
std
movsl
pop
or
sub
mov
or
pushf
lahf
repnz
sbb
pop
sub
mov
mov
xlat
loopne
ds
jle
fisubl
cmp
jb
cmp
inc
imul
cwtl
in
das
fs
mov
pop
cmp
inc
aam
jle
xchg
std
aaa
loopne
lahf
add
xchg
imul
out
ret
fisttpl
or
icebp
mov
in
xchg
mov
jecxz
push
rclb
js
mov
test
leave
out
fcmovb
insl
sub
pushf
xor
lds
sahf
dec
pop
daa
cmp
push
or
sti
add
orb
xlat
sbb
hlt
push
mov
mov
sub
xchg
lods
pop
repnz
mov
push
mov
bound
jae
mov
inc
dec
test
adc
adc
pushf
dec
repz
daa
subb
ljmp
add
iret
jg
inc
cmpsb
cs
dec
repnz
clc
sbb
push
test
jo
cmpsl
cmpsl
jo
pop
push
loope
and
push
enter
lods
xchg
push
jmp
rclb
js
cld
lahf
jle
xchg
pushf
into
movsb
imul
mov
mov
sub
data16
mov
test
mov
test
and
imul
xchg
cld
out
jp
pop
je
loope
popa
cmp
push
fimull
mov
test
cmpsl
rorl
pop
mov
lds
sub
cwtl
push
je
scas
lock
shrb
xchg
sub
cmp
movsb
inc
push
gs
mov
fdivrl
cmp
mov
int3
loop
sbb
lret
out
or
dec
sub
fcoms
rcrb
cmp
pop
push
jo
jns
jmp
jg
xor
jne
pop
jecxz
aam
cmp
faddl
pop
sbb
lret
fs
sub
pop
mov
test
sub
add
push
std
in
add
in
adc
push
stos
not
sbb
popa
rol
imul
xchg
xchg
fstpl
aad
push
push
ret
dec
sub
adc
add
movsl
stc
orl
std
cmp
jae
cmc
xchg
xchg
push
lcall
shll
in
out
ret
subb
push
stos
sbb
pop
femms
insl
sbb
clc
sub
mov
dec
into
sbb
mov
out
out
adc
push
inc
push
mov
xchg
add
imul
jecxz
jp
xchg
lods
and
mov
rclb
jl
dec
roll
mov
inc
test
outsb
lock
inc
cs
lock
mov
ds
lahf
mov
xor
pop
mov
xchg
mov
ja
ret
add
adc
sti
bound
push
jb
test
lods
into
out
jbe
push
add
push
jb
mov
push
fwait
repz
xor
pop
add
push
inc
in
rcrb
stc
dec
orb
push
mov
call
mov
pop
sahf
xor
negl
sbb
add
sub
sub
xchg
es
adc
mov
test
push
cwtl
repz
in
or
pop
jne
ret
push
filds
jo
push
jbe
inc
nop
ja
or
mov
pusha
test
ret
pop
and
jne
mov
lret
imul
mov
push
cmp
loope
add
leave
stos
rorb
xor
push
mov
inc
frstor
sub
push
jb
mov
pop
stos
jg
lcall
sarl
lahf
std
dec
mov
out
add
or
inc
push
adc
mov
jb
rclb
adc
out
mov
dec
mov
int3
in
push
and
roll
mov
lret
dec
adc
jp
xor
add
shl
sbb
ss
daa
notb
aas
xchg
hlt
out
dec
push
fistpl
sbb
fbld
clc
fildll
push
jnp
cli
mov
addr16
xor
gs
sub
fiaddl
inc
lods
xlat
or
pop
fisttpll
cmp
dec
mov
push
pop
dec
sahf
sti
and
cs
sti
rcl
adc
popa
out
fimuls
and
push
jle
ljmp
loop
xor
xchg
inc
or
ret
pusha
das
imul
call
call
pusha
mov
mov
sub
sub
push
pop
inc
inc
in
add
ret
xchg
adc
mov
or
xchg
call
and
fistl
out
or
in
mov
bnd
mov
add
pop
push
imul
cmp
add
nop
movsb
and
mov
mov
insl
mov
aas
outsl
jb
cmpsb
sbb
sub
and
std
sbbl
enter
mov
or
push
insb
test
addr16
mov
pusha
push
movsb
jle
cmp
loope
push
adc
sarb
push
pop
inc
dec
jmp
and
xor
mov
mov
imul
cli
push
jns
pop
mov
add
insl
sub
les
xchg
shlb
push
imul
fcoms
xchg
jmp
cli
inc
mov
aas
pop
xchg
dec
inc
rcl
repnz
arpl
adc
call
fstpl
lret
pop
dec
scas
fwait
out
outsl
push
aad
fdivrs
adc
dec
pusha
ljmp
mov
imul
xor
mov
loope
repnz
and
xchg
dec
jno
out
hlt
js
mov
cmp
xchg
cwtl
popa
mov
cmovl
push
add
shlb
sub
nop
popf
dec
mov
pop
mov
leave
cwtl
mov
bound
stos
and
mov
jns
push
cmp
cmp
sahf
sub
sbb
pushf
pop
mov
cwtl
inc
and
std
xchg
mov
dec
lock
mov
rorl
sbb
inc
xor
lods
sub
fidivrl
jns
adcl
dec
mov
mov
lea
out
cwtl
nop
dec
pop
push
sbbb
dec
sahf
inc
adc
loopne
and
addb
scas
cmp
call
dec
mov
jno
or
stos
adc
sbb
das
insl
cs
cwtl
int3
xchg
insl
sub
and
insl
cli
or
adc
loop
mov
hlt
sbb
xor
leave
test
dec
std
push
lds
xchg
add
mov
push
stos
divl
add
in
call
xchg
rcl
fwait
popa
and
cmp
and
arpl
sbbb
imul
cwtl
dec
xchg
stc
movsb
dec
mov
insl
mov
scas
dec
push
cmp
jae
jg
pop
ret
jnp
inc
aad
xor
adcl
nop
xor
pop
cltd
cld
push
ss
in
notl
push
popa
jg
jmp
imul
std
aas
xchg
and
push
mov
and
das
or
xchg
sahf
inc
ret
or
pop
in
pusha
je
mov
out
mov
hlt
cli
lods
and
mov
outsb
out
aam
xchg
hlt
imul
ret
pop
out
ds
jo
in
mov
sub
push
adc
andl
jecxz
sbb
leave
daa
cmpsl
and
push
inc
neg
adc
lock
jnp
push
and
mov
iret
adc
push
shrb
xchg
mov
and
push
cwtl
cmp
or
jle
adc
cltd
fwait
into
ljmp
je
fistl
popf
mov
fimuls
fsubrp
jbe
pop
call
xor
repnz
cwtl
aam
out
in
push
dec
int3
pop
lret
fimuls
std
popf
orl
mov
adc
cld
outsl
add
add
sbb
adc
fidivrs
fsubrs
and
or
inc
hlt
adc
sub
mov
fs
ror
lret
jle
mov
lret
mov
shll
scas
fnstsw
jbe
dec
cli
fucom
pop
push
add
hlt
xchg
dec
cmc
fdiv
lods
cmpsl
loop
jg
push
loopne
sbb
mov
xchg
lock
jl
sti
mov
mov
int3
dec
xchg
notb
out
inc
mov
inc
in
and
xor
outsl
inc
fs
xlat
cmpsl
jne
icebp
mov
mov
pop
cmp
push
dec
push
xchg
adc
adc
icebp
mov
int
iret
mov
inc
sbb
jl
fnsave
cmp
sub
push
addl
and
insl
push
fwait
pop
lahf
cmp
or
fimull
add
test
adc
add
add
mov
aaa
movl
nop
or
cmpsb
push
push
xor
cmp
movsb
sub
adc
mov
out
sbb
dec
scas
ljmp
dec
jno
push
adc
in
adc
jecxz
in
mov
sbb
lahf
rcrl
add
arpl
jo
subl
test
sbb
sub
bound
loopne
ret
add
adc
adc
push
sub
sbb
aam
mov
inc
mov
daa
scas
jne
hlt
cmp
in
jns
outsl
cmpb
ss
in
fs
and
shlb
je
or
insb
mov
dec
scas
push
test
rcrb
xchg
xor
dec
pop
and
cmp
test
dec
cmp
fisubrs
and
mov
fwait
cli
xor
fsubs
int
or
cmpsl
stos
push
scas
dec
out
cmp
fsubr
cmc
sbb
imul
push
jbe
jl
jns
fisubs
rorl
add
dec
mov
lret
and
es
sbb
pop
mov
sub
notb
out
lods
jbe
push
fcmovb
pop
sti
pop
mov
jb
cs
andl
cmp
dec
adc
xchg
enter
sbb
inc
inc
loope
pusha
inc
mov
or
clc
jns
and
imul
jne
add
std
movsl
cmp
fstpt
push
and
add
mov
mov
rcrl
dec
dec
or
jnp
adcw
jo
call
mov
or
mov
loope
or
mov
sbb
sbb
add
mov
inc
stc
outsl
lret
test
pop
xchg
insb
insb
ljmp
adc
gs
aaa
add
xor
mov
mov
dec
ljmp
loopne
jl
xchg
fisubs
add
std
test
cmp
adc
loopne
xchg
jle
in
inc
adc
daa
rorl
les
adc
cmp
test
sub
sub
sub
shrb
add
ja
outsl
adc
mov
in
jle
adc
cmp
scas
or
je
lods
mov
lcall
adc
xrelease
mov
jecxz
scas
jne
xchg
pop
inc
cltd
or
xor
dec
imul
out
pusha
adc
outsl
and
push
std
je
xchg
repz
sbb
scas
lcall
xchg
fsubs
popa
push
sbb
cmpsb
repz
xlat
aam
pop
fidivrl
repz
push
clc
test
or
add
in
push
jp
xlat
movsb
push
jbe
scas
ret
push
adc
imul
lret
iret
insb
sbb
xchg
cwtl
rcll
add
xor
sub
push
sahf
cld
add
loop
jo
clc
mov
dec
inc
push
dec
ds
inc
mov
ljmp
bnd
xchg
stc
movsb
mov
addb
fwait
sub
cmp
or
rol
fisubs
sbb
xor
add
mov
sbb
lret
mov
out
dec
inc
popa
je
add
adc
sbb
std
ret
subl
out
lret
insl
out
xor
out
popf
sub
data16
adc
stc
mov
roll
out
lret
outsl
cmp
shll
out
rcr
jb
and
sub
inc
icebp
and
pop
add
jmp
sti
xchg
jmp
pop
mov
or
dec
mov
fdivrs
push
push
cld
lea
insb
arpl
sarl
xchg
jg
pop
dec
lcall
ja
cmp
mov
dec
mov
ret
gs
loop
pop
xchg
cs
mov
testl
lock
pop
adc
out
cmpb
mov
ret
pop
inc
cmp
sbb
leave
gs
inc
pop
into
push
fbld
sub
jno
popf
ja
aas
mov
imul
repnz
jecxz
and
dec
xchg
pop
popa
cmp
sbb
cmp
ljmp
cmpsb
mov
stos
push
aad
jbe
cmp
dec
push
std
cmpsl
rolb
mov
or
add
loop
adc
fidivrl
pop
into
xchg
jp
fcomip
fbld
jg
jae
inc
lods
xorl
rcl
bound
push
push
out
shlb
daa
shlb
sahf
sbb
and
mov
fsubrs
or
icebp
add
scas
lcall
jg
stc
add
div
pop
popa
test
out
push
arpl
mov
ret
cmp
mov
out
dec
pop
jo
pinsrw
leave
movsl
mov
mov
movsb
aaa
pop
jbe
lret
jl
inc
lods
cmp
or
shll
insl
xor
jo
push
xchg
aas
or
mov
mov
jp
xorl
leave
aas
xchg
mov
into
stos
fwait
ds
les
adc
lea
mov
jmp
adc
xchg
sub
mov
ficoms
rcll
shrb
mov
pop
jg
rorl
es
shl
push
loop
cmpsb
sub
xor
or
arpl
int3
icebp
mov
repz
cwtl
lock
mov
mov
cmp
jle
sub
sbb
cmc
in
dec
mov
rclb
pop
push
aaa
mov
sarb
push
pop
xchg
fnstcw
push
nop
ret
lods
sbb
clc
xor
cs
add
rorb
jg
out
xchg
mov
adc
mov
scas
std
jecxz
daa
pop
stos
cld
test
inc
stos
sub
sbb
push
push
cwtl
aad
xchg
pop
pop
shrb
rorl
dec
pop
jmp
shrl
mov
arpl
shll
xchg
jns
rolb
push
mov
push
ret
mov
jnp
add
adc
or
sbb
jmp
mov
cmp
mov
lahf
out
cli
stos
sbbb
out
jo
ja
test
es
cmp
inc
scas
add
scas
int
sub
rolb
cld
out
mov
imul
dec
fld
sahf
xchg
and
cli
les
jg
lods
test
lret
roll
and
and
or
xlat
add
sti
dec
dec
dec
loope
add
pop
mov
ficoms
out
mov
mov
outsb
cli
pop
mov
pushf
sbb
dec
xchg
sub
movsb
add
jl
dec
xchg
pushf
stc
inc
adc
outsl
mov
push
inc
mov
icebp
sahf
jb
xchg
add
lods
loopne
push
pop
lcall
dec
test
ss
les
js
pop
sbb
lret
ret
inc
dec
fwait
mov
sbb
ret
scas
aaa
movsl
jno
jecxz
pop
into
push
out
rcl
jmp
push
ret
xchg
or
cmp
dec
sbb
pop
cmp
mov
xor
push
inc
inc
cltd
sub
pop
popl
mov
xchg
sbb
std
ljmp
xchg
mov
cli
xlat
mov
fxam
mov
sub
cmp
sbb
lock
insl
test
sbb
sub
clc
stc
popf
mov
test
ret
mov
outsb
or
mov
sub
bswap
ret
in
jl
or
cli
popa
inc
lret
jg
fs
or
lahf
xor
sub
mov
cmp
xchg
loop
cltd
mov
stos
jmp
mov
adc
jo
imull
shlb
sarl
xor
cmp
xchg
adc
sub
jge
in
cmpl
addr16
fisttps
or
iret
xor
lret
dec
scas
pop
imul
aam
jecxz
and
std
push
xor
pop
adc
cmpsb
cwtl
sub
adc
dec
push
imul
push
add
ljmp
mov
mov
jecxz
out
stos
lret
or
push
cmp
mov
lods
insl
xchg
mov
out
lods
lods
push
movsl
adc
repnz
and
sbb
mov
outsb
and
fadds
mov
outsl
jne
mov
push
pop
mov
sbb
pop
pop
aad
clc
jno
popf
fsubl
fstps
test
in
xor
sbb
mov
cmpsb
or
in
pop
fwait
cmp
jns
std
mov
addb
mov
cmp
insl
jge
and
je
flds
fdivrl
bound
in
repnz
int3
cmp
lock
jg
out
cmp
mov
orb
stc
clc
push
mov
out
ds
mov
ljmp
loopne
aas
test
sbb
imul
ljmp
mov
xchg
inc
or
dec
daa
stos
jge
ror
leave
mov
inc
icebp
dec
sbb
sub
xchg
sub
stos
mov
stos
shrb
pop
jns
jb
xchg
into
jae
cltd
jo
imul
mull
jle
xchg
sbb
es
xchg
jmp
pop
add
fmull
adc
in
sti
out
xchg
pop
ja
adcb
push
cli
pusha
lret
xor
mov
mov
divl
out
jmp
jp
incl
mov
sbb
fsubl
push
mov
xor
xchg
in
lock
ret
pusha
or
in
hlt
dec
sbb
or
jo
push
xchg
loopne
pop
loope
cmp
cwtl
pop
jg
cmp
inc
xor
mov
sub
ret
insb
nop
das
xor
shr
xor
cmpsb
loope
pop
mov
iret
test
adc
mov
push
movsl
ret
xchg
gs
inc
sub
push
aaa
adc
fildl
js
cmp
scas
inc
jle
loopne
pop
push
inc
insb
stc
mov
into
inc
inc
pushf
addr16
and
dec
pop
or
adc
sbb
je
dec
sbb
mov
dec
push
pop
xor
insb
out
popa
cld
repnz
repnz
jle
pushf
pop
push
ds
lahf
lahf
cmp
push
jns
and
aam
xor
cmp
add
or
cmp
sti
ljmp
andl
jb
adc
mov
test
jge
mov
push
add
cli
push
mov
or
lods
and
lret
pop
mov
jo
inc
push
mov
and
shll
adc
mov
outsb
jno
les
lret
jmp
xlat
repnz
sbb
xchg
push
sahf
add
add
pop
add
fcoms
jp
fmul
pop
lahf
push
push
jno
fwait
sti
adc
mov
jl
ljmp
stos
dec
add
push
mov
push
incl
sub
push
jb
jno
jb
and
daa
push
sub
mov
pop
jb
cmp
idiv
fs
ret
dec
cmpb
lods
lret
or
in
mov
mov
movhps
shlb
sbb
frstor
pusha
gs
mov
shlb
mov
cmp
test
ret
push
mov
mov
mov
enter
movsl
jne
or
mov
les
pop
test
fwait
xchg
test
jno
negl
jne
enter
outsb
orl
mov
and
stos
mov
sub
imul
mov
sahf
jne
add
cmp
mov
xchg
shlb
mov
sbb
fildl
sbb
dec
mov
dec
shrl
adc
movsb
dec
pop
push
push
push
popf
fldcw
xchg
jae
pop
inc
out
push
jle
pushf
aam
cmp
or
xchg
sub
push
sbb
outsl
xlat
es
and
scas
rdpmc
fsubrs
sbb
test
mov
cmp
ss
mov
movsl
sub
aaa
mov
and
and
push
xchg
aad
dec
and
jg
dec
mov
adc
sbb
mov
adc
push
test
lahf
cmp
xchg
fidivl
in
hlt
shlb
lahf
dec
or
mov
push
inc
sbb
inc
mov
pop
into
cmp
and
xchg
div
inc
sub
cmp
cmp
jno,pn
sub
icebp
jmp
negb
fildl
mov
int
add
jne
in
mov
pop
dec
mov
cmpsb
aad
mov
dec
lcall
adc
xlat
and
or
hlt
int3
cmpsb
pop
jae
test
fisubl
fsubp
pop
push
stc
stc
std
inc
adc
or
jl
xor
push
cmp
divl
mull
jns
and
sbb
mov
fists
jp
pop
je
cmc
loopne
pushf
and
imul
stc
lea
adc
andb
add
adc
vmaxps
mov
sbb
jne
dec
xchg
push
lds
adc
hlt
lds
je
mov
sub
sbb
nop
push
add
jb
test
sbb
xor
pushf
loop
adc
gs
adc
in
adc
adc
daa
adcb
roll
mov
dec
ljmp
pop
pop
pop
jnp
push
cmp
mov
aam
mov
cwtl
into
pop
addr16
shlb
jge
add
fidivs
and
lret
jle
mov
xchg
fidivrl
fmul
cmp
mov
inc
mov
push
inc
jl
ret
pop
scas
sub
mov
call
push
fsub
xchg
jbe
cmp
pop
push
mov
bound
dec
inc
out
mov
cltd
repnz
jmp
push
shll
cmp
out
enter
sbb
inc
push
inc
pop
xchg
push
xchg
sbbb
phsubsw
rol
and
data16
jecxz
push
xorb
mov
mov
cltd
sub
shll
push
xor
out
mulb
add
push
mov
dec
mov
jecxz
loope
test
and
sub
popf
xchg
adc
es
xchg
insb
pop
push
adc
xchg
add
inc
mov
jnp
movsl
dec
imul
fisttps
jns
in
fisubrs
pushf
scas
push
mov
cmp
xor
and
push
jmp
xor
cmpsl
pop
aad
cwtl
mov
pop
int3
outsb
xor
push
xor
mov
mov
xor
push
test
negb
imul
dec
or
and
insb
xchg
xchg
pusha
jae
fsubr
popa
pop
dec
adc
mov
push
leave
sti
shll
jne
roll
jb,pn
ljmp
xor
or
cmc
xchg
cmpsl
rcrl
out
and
cltd
cmp
mov
xorb
pop
test
jnp
in
jl
pushl
mov
pushf
jno
sub
popa
ret
in
pop
insl
leave
cmc
sub
out
and
fcomps
loop
andl
mov
ret
ljmp
push
pop
in
inc
loopne
fstl
imul
xchg
call
imul
mov
ljmp
std
sti
xchg
je
mov
sbb
gs
pop
inc
sbb
xchg
lea
lret
mov
cmpsl
dec
mov
inc
and
in
test
fadds
popa
push
add
bound
pop
push
insb
sub
xchg
les
add
pop
pop
sub
add
cmp
out
sub
push
in
addl
mov
cmp
push
ret
call
repnz
imul
pop
dec
sti
lahf
dec
cmp
cmp
dec
out
mov
ret
and
or
sbb
cmp
lcall
xchg
and
js
insb
stos
mov
stc
addr16
sub
dec
enter
out
fs
xor
sbb
mov
pop
cmp
and
or
or
sahf
mov
bnd
xor
aad
adc
sbb
push
inc
stos
fdivrl
mov
std
push
or
scas
in
sarb
jl
int3
insb
xor
lds
pop
pop
rcll
cs
movsb
out
popa
repz
les
xchg
push
xchg
enter
mov
sbb
sub
into
in
add
rcrl
mov
dec
push
jp
mov
sub
shl
fbld
push
repz
push
dec
sbb
pop
movsb
inc
cmc
cmpsb
lock
movsb
cmpb
push
push
test
test
xchg
das
dec
scas
movsl
xchg
mov
faddl
push
movsb
je
iret
fcoml
lret
pop
adc
clc
sub
adc
and
cmpsl
lds
fimuls
inc
mov
sbb
push
xchg
pushf
rorb
push
test
adc
mov
nop
or
mov
jp
aam
leave
pushf
xchg
cld
pop
inc
dec
and
xchg
fidivs
pushf
shlb
pop
mov
mov
icebp
mov
sub
fstp
pop
xor
sbb
xchg
nop
mov
cmp
test
xor
sti
aam
shr
push
inc
sub
fidivrl
mov
loopne
stc
mov
andb
xchg
daa
adc
dec
shrb
add
cwtl
sbb
mov
xor
inc
push
std
mov
ret
pop
xadd
jecxz
gs
fldt
mov
shrb
sbb
sahf
mov
inc
scas
mov
icebp
cmp
ret
push
leave
push
xchg
sub
aaa
push
stos
fnstenv
push
inc
mov
and
push
xor
mov
or
push
aaa
test
xchg
add
test
cmp
and
or
cld
mov
xor
pop
sub
xor
fcomi
scas
dec
push
xor
lds
add
gs
pusha
or
or
mov
dec
cmp
stos
mov
pop
fsubrs
sub
outsw
int
decb
cltd
push
mov
mov
imull
ljmp
lock
decl
imul
inc
and
stos
stos
dec
inc
xorl
xchg
xchg
dec
push
mov
aam
add
sub
mov
mov
or
aad
shll
iret
cmp
fadds
sbb
lret
adc
jbe
jecxz
cld
jp
dec
sub
adc
jmp
mov
push
xor
sti
in
xor
pop
shll
imul
repnz
adc
arpl
aam
fcmovne
int
int3
movsb
movsb
stc
add
sbb
arpl
fimull
mov
mov
icebp
cmpsl
mov
and
and
add
bnd
hlt
in
rcrb
sbb
and
xlat
js
lret
addl
ret
in
in
or
out
cli
add
icebp
xchg
mov
out
imul
idivl
dec
mov
mov
aaa
call
js
rolb
xchg
or
adc
xor
out
fisubl
xor
push
rorl
cwtl
ja
inc
mov
and
repnz
aad
outsl
xchg
jecxz
out
jecxz
popa
gs
mov
add
pop
arpl
repz
adc
jp
push
xchg
mov
in
and
and
or
into
addr16
xchg
into
fbld
or
out
popa
and
enter
rcr
mov
mov
imul
ret
push
sub
sub
repnz
xor
xor
sbb
push
in
add
or
mov
loopne
xor
xor
inc
iret
dec
push
repz
cltd
inc
jl
push
mov
xchg
imul
in
in
sti
xchg
jne
add
repz
mov
repz
cwtl
out
les
jae
xchg
mov
call
xchg
loopne
mov
pop
jl
test
fldcw
and
xchg
add
inc
add
ja
jp
mov
popf
sbb
inc
mov
aam
dec
mov
lods
movsb
rcrl
cmp
xchg
xchg
insb
repnz
outsl
mov
insl
jo
mov
push
mov
mov
pxor
pop
jbe
or
sub
dec
adc
inc
insl
into
add
inc
xchg
jbe
push
or
dec
les
lret
mov
mov
stos
xchg
xchg
in
xor
pop
jle
pusha
sahf
mov
and
std
test
test
outsb
jmp
mov
inc
inc
stc
or
pop
xchg
dec
adc
loop
decb
outsl
xlat
pop
test
mov
xchg
push
jl
int3
or
stos
push
jnp
cwtl
popa
sub
incb
repnz
cmpsl
out
or
aaa
mov
or
jp
and
outsb
test
jmp
adc
cmp
dec
out
inc
popf
inc
ret
lahf
imul
push
or
inc
sbb
adc
scas
jg
cwtl
std
shrb
xchg
cmpsb
adc
aas
aaa
push
call
loopne
inc
push
dec
idivl
mov
je
aad
imul
iret
loope
ja
jle
scas
push
call
xor
cmp
push
mov
imulb
aaa
push
stc
push
inc
mov
mov
addb
in
push
rorl
mov
outsb
in
jl
adc
insl
test
mov
jno
push
mov
cld
dec
mov
into
cld
xor
js
mov
jg
add
inc
mov
icebp
pusha
mov
or
dec
xor
stos
inc
out
imul
sbb
hlt
ret
mov
aam
out
mov
push
test
ror
xor
jmp
xor
hlt
mov
xchg
outsl
insb
adc
mov
cmp
inc
sahf
cmc
ljmpw
ljmp
call
xlat
inc
fdivrp
lods
aas
jp
pop
lcall
sbb
pop
es
mov
inc
iret
pop
inc
test
shl
jg
stc
cld
or
cmp
mov
ret
cmp
int3
cmp
sbb
add
fildll
dec
mov
ret
sbb
scas
int
dec
out
pop
inc
loopne
sbb
jmp
pop
jmp
xlat
jae
gs
int3
dec
out
push
cmp
jg
mov
add
mov
pusha
arpl
shll
sbb
shrl
into
out
stos
inc
rclb
or
insl
lahf
iret
aaa
mov
pop
in
add
jbe
mov
add
pusha
rol
out
shr
jb
out
call
out
mov
shl
pusha
mov
incl
pop
clc
fs
mov
jne
iret
inc
or
mov
mov
or
sbb
inc
inc
fidivrs
inc
out
mov
test
cwtl
add
hlt
cmp
int3
pop
mov
xchg
xor
mov
adc
and
cmp
les
xor
outsl
jns
fcoms
jecxz
xor
lock
cmp
aad
fbld
pop
iret
dec
and
or
adc
outsb
inc
pop
out
leave
or
or
push
xlat
push
pushf
roll
icebp
xchg
fisttps
mov
gs
inc
sub
test
xor
addr16
add
mov
jb
cld
mov
das
adc
push
test
mov
xchg
pop
loop
jecxz
dec
clc
or
sbb
sub
xor
arpl
xchg
fptan
cmc
imul
test
aaa
popf
jecxz
repz
cmpsb
add
xor
inc
jge
mov
mov
mov
mov
jae
sbb
adc
ret
adc
mov
xor
jmp
rol
daa
xor
pop
jb
mov
scas
mov
daa
adc
repnz
push
push
pusha
fidivl
shlb
jmp
stos
and
push
push
xlat
test
mov
cmpsb
mov
ljmp
adcb
push
cmc
sbb
dec
loopne
sbb
push
push
mov
mov
mov
aaa
idivl
cmc
sti
aaa
mov
push
lds
push
and
sub
movsl
stos
push
dec
pop
add
out
outsl
loopne
pop
sub
push
imul
lret
jge
cltd
jp
xchg
out
mov
repz
ret
pop
in
aas
mov
sub
sbb
daa
jns
xchg
fsubs
pusha
cmpsl
movsl
jge
dec
and
pop
push
pop
and
fmuls
pop
inc
xchg
mov
scas
hlt
stos
jmp
movsb
mov
inc
jae
ljmp
insb
imul
cmp
inc
xor
inc
jle
cmpb
sub
int
xchg
mov
pop
lret
popf
xchg
hlt
mov
mov
xchg
pushf
rorl
jp
insb
je
bound
fwait
aam
push
movb
adc
mov
or
lds
lret
lea
dec
scas
lret
push
sahf
gs
lcall
outsl
cmpsl
mov
jb
fwait
dec
in
out
fs
sarb
es
cli
pop
scas
cmp
add
out
add
scas
popf
leave
xchg
xor
add
fwait
rcrb
ret
xor
fimull
ljmp
test
mov
lea
xchg
xchg
jo
popa
pusha
and
mov
jecxz
mov
stos
popf
jb
test
xchg
xor
gs
movsl
adc
sub
or
cmp
adc
push
ret
mov
xor
lea
inc
mov
jl
inc
mov
mov
add
fistl
add
and
sub
fs
aam
decl
sub
xchg
faddl
inc
addr16
stc
mov
aas
and
mov
std
sub
pop
icebp
mov
and
push
test
mov
sbb
movb
pop
lret
jl
lret
add
arpl
bound
mov
cmp
jo
push
fwait
adc
jge
add
test
jp
push
and
aam
jle
push
sbb
call
sbb
sahf
shlb
inc
jecxz
test
pusha
push
cmp
xor
ret
sub
push
leave
fs
add
aad
inc
arpl
mov
testb
imul
pop
stos
fstpt
aam
mov
ja
sbb
test
push
clc
and
movsb
fisubs
inc
cmp
sbb
loopne
and
mov
aad
out
push
das
cs
pop
into
xchg
outsb
cli
cld
mov
pop
sbb
add
repz
stos
out
xchg
xchg
adc
and
mov
jp
imul
daa
addl
and
add
cli
rorl
hlt
movsb
mov
mov
xchg
push
mov
xor
sub
add
inc
pop
scas
dec
inc
fnsave
popa
ljmp
iret
gs
and
gs
arpl
mov
add
jp
pop
or
push
adc
loop
outsl
xchg
out
cs
cmpb
fsubrl
dec
sbb
xlat
pop
adc
dec
repz
std
or
mov
in
out
in
bound
ja
cli
leave
sbb
push
popf
and
or
adc
je
sbb
adc
push
test
pop
fsubs
xor
jmp
xchg
aad
pop
cltd
pop
out
fsubs
sub
jae
jb
sbb
jge
popa
hlt
fdivs
shll
aas
loope
enter
int
sar
pop
ret
xchg
jle
ficoml
mov
out
mov
shll
out
inc
sub
scas
jmp
xchg
cwtl
xor
sub
ret
mov
mov
cs
inc
das
push
xchg
push
mov
hlt
inc
pop
movsl
out
loope
or
je
es
insb
xlat
stos
mov
repz
and
pop
jge
dec
cld
rcrl
dec
dec
out
jg
mov
mov
mov
xchg
psraw
in
sahf
jbe
fisttpl
lret
push
push
mov
imul
mov
dec
cmp
aad
les
jg
aad
addl
outsb
enter
xor
adc
xor
cmp
dec
mov
push
and
aad
jnp
and
pop
icebp
dec
sbb
jle
mov
std
jp
mov
popa
xor
pop
or
dec
dec
jnp
jnp
pusha
adcl
fsubrs
mov
push
setb
ljmp
mov
push
sub
test
cmp
inc
sti
int3
mov
outsl
fnstenv
adc
scas
ret
je
and
nop
add
repnz
xorl
push
jnp
mov
pop
jmp
lods
aaa
or
scas
rolb
xor
sub
test
in
xchg
ja
fcmove
je
push
add
inc
mov
or
pop
rcrl
push
xchg
popa
add
pop
into
or
jno
jge
lret
test
and
jmp
scas
bound
aaa
push
fs
stc
cltd
mov
xchg
dec
pop
mov
je
in
aam
rorw
xor
fsubrs
push
lods
push
xlat
pop
fnsave
sbb
scas
das
jge
dec
adc
sub
add
push
mov
ds
imul
push
jae
dec
mov
into
lahf
sbb
ja
lcall
xchg
mov
xchg
mov
ljmp
sbb
adc
cmp
sub
add
shrl
icebp
xchg
into
xchg
push
cmp
xlat
push
xlat
push
xchg
and
push
cmp
or
ret
xlat
test
or
and
inc
sub
ffree
aam
mov
call
hlt
aaa
std
adc
adc
mov
adc
mov
jge
cmp
out
stc
sub
adc
stos
add
sub
popf
xchg
movb
inc
icebp
iret
fildl
aas
addb
xor
adc
data16
fisubrs
push
rolw
sbb
push
dec
aaa
jne
fbstp
pop
dec
mov
in
dec
fs
mov
sbb
inc
ja
inc
insl
mov
mov
mov
adc
ds
and
ficompl
mov
ss
or
adc
inc
enter
js
push
jbe
std
mov
ficoms
mov
xchg
mov
outsl
insb
adc
aam
mov
and
add
je
push
pop
leave
push
dec
imul
or
das
je
shl
pop
inc
push
or
push
cmpsb
fidivs
mov
mov
mov
mov
inc
shll
inc
rolb
lcall
in
mov
cmp
scas
fldt
pushf
fcomps
mov
jne
sbb
aam
stc
xchg
add
test
sti
and
gs
adc
mov
sti
loop
and
inc
rclb
fsts
and
adc
hlt
xchg
lods
jnp
mov
mov
fsubl
mov
push
arpl
je
bound
out
sub
call
cmpsl
sbb
xchg
pushf
inc
in
push
nop
add
cmp
or
mov
mov
fsubl
in
sbb
popa
rol
mov
sub
mov
add
cmpsb
out
pop
jae
xlat
sti
inc
jl
pop
and
dec
pop
sarb
movlps
mov
ror
ret
outsl
mov
fcomip
jnp
fs
fbld
gs
cmp
test
and
mov
mov
fnstcw
jl
insb
in
shl
sub
lahf
inc
mov
jbe
jle
iret
fwait
jg
jg
imulb
cld
sbb
repnz
pop
xchg
xchg
dec
xlat
mov
or
rcll
scas
imul
pop
push
repz
mov
lcall
jecxz
xor
pop
sub
mov
adc
stc
add
mov
lret
sahf
inc
fdivrs
mov
dec
jb
stos
xchg
push
mov
xchg
inc
sub
add
ret
cwtl
movsl
adc
pop
sbb
sub
insl
ds
xchg
rcrl
das
dec
int
cmc
xchg
sub
cmp
ret
pop
dec
test
jae
cmp
repz
fsubp
jbe
cmp
sbb
aad
je
test
xor
ds
pop
icebp
out
es
and
fwait
movsb
adc
iret
flds
pop
aam
test
sub
in
and
push
loopne
loopne
xchg
lods
xchg
mov
mov
xor
das
imul
push
std
sahf
mov
xlat
pusha
cli
pusha
out
xor
jge
ret
cld
push
outsl
add
mov
adc
repz
sbb
xchg
xchg
pushl
add
add
inc
add
jo
mov
xor
cwtl
push
lret
dec
dec
fwait
aam
mov
loope
and
sbb
in
fbld
jne
or
adc
add
jae
mov
inc
mov
mov
aam
push
data16
add
mov
pop
jmp
enter
or
xchg
jne
push
loop
sbb
dec
dec
imul
jmp
push
out
mov
add
mov
adc
adc
in
or
cld
mov
pop
cmpsb
push
repnz
rcll
and
test
in
fcomps
popf
push
cs
arpl
mov
jbe
xor
addl
sbb
inc
rcrl
lahf
fcomps
scas
test
push
call
jecxz
aam
rolb
xlat
sub
mov
push
jno
fs
sbb
push
lea
cmp
mov
popl
pop
mov
adc
cmpsl
and
addr16
mov
mov
xor
xor
push
cs
jl
imul
repz
roll
push
fcmovnbe
adc
mov
sti
xchg
sarl
arpl
mov
js
dec
mov
jnp
mov
loope
cmp
inc
outsb
mov
mov
test
jnp
xchg
ret
lods
add
jo
je
xchg
dec
cmpsl
push
xchg
iret
out
add
data16
xor
mov
neg
cmp
mov
jno
jb
sub
aaa
mov
xchg
and
das
rorl
push
push
jne
add
add
ret
jmp
and
inc
push
pop
jge
dec
and
int3
lret
in
inc
sbb
jno
ds
je
mov
mov
pop
in
push
mov
push
loop
mov
or
pop
push
fwait
xchg
cmp
enter
outsb
jb
mov
int
movsb
adc
std
xor
cmp
mov
movb
adcb
loope
test
inc
or
ret
xchg
or
adc
add
push
lahf
jle
pop
frstpm(287
xlat
adc
cs
lret
jno
dec
fsubr
xorl
mov
and
pop
dec
cld
std
push
mov
sub
repz
and
cmpsl
movsl
aad
cmp
pop
hlt
int
mov
cmp
mov
lock
je
cltd
mov
popa
sub
aam
mov
mov
pop
xlat
in
js
cmp
mov
fiadds
repz
xchg
gs
push
ret
inc
incb
dec
into
adc
in
dec
pop
iret
cmp
mov
outsb
pushf
pop
sbb
sbb
ret
pop
pop
cmp
shlb
out
mov
movsb
or
inc
xchg
mov
mov
lret
and
dec
jl
std
push
inc
movsl
in
mov
popf
testb
mov
cs
dec
push
lret
xchg
jl
xor
lcall
cmpsl
mov
sbb
mov
dec
inc
aaa
dec
mov
or
pop
sub
and
add
lds
fs
adc
stos
lods
out
xchg
dec
sahf
push
and
iret
sbb
rcll
jl,pt
jp
lds
add
mov
sbb
adc
xchg
stc
cmp
test
nop
dec
push
cmc
jl
mov
ret
or
test
and
mov
das
mov
mov
xor
into
aam
out
aas
cmc
cmp
dec
rorl
cmp
xlat
push
mov
addr16
mov
stos
sub
push
inc
pop
into
dec
insb
pop
mov
sub
jl
data16
push
cmp
iret
cwtl
and
lcall
mov
pop
dec
add
outsl
sub
mov
loope
lods
mov
inc
sub
sub
pop
cmp
cmp
and
push
das
gs
push
inc
scas
adc
sahf
shrb
ljmp
call
push
xchg
clc
addr16
sbb
mov
mov
add
data16
xchg
cld
stos
sbb
into
lods
mov
outsb
dec
pop
adc
inc
pop
cwtl
insl
sarb
repnz
out
sub
sub
mov
lret
jne
fs
es
mov
mov
loopne
pop
and
aaa
or
in
jge
add
fs
xchg
inc
jnp
xor
adc
pmuludq
lcall
sahf
test
shll
scas
push
cmp
or
xchg
add
dec
and
cmp
mov
cmp
and
outsb
sbb
mov
sarb
mov
xor
das
xor
push
or
jl
sub
mov
and
mov
loopne
cmp
lock
std
mov
out
pop
aam
out
cld
fisttpl
orl
jecxz
mov
dec
ucomiss
sub
mov
ljmp
mov
in
jmp
and
popa
xor
push
mov
inc
mov
push
push
or
push
jb
daa
xlat
jle
or
xchg
push
call
hlt
pop
int3
and
mov
ljmp
ss
rcr
sbb
test
aam
icebp
xchg
jmp
cli
repnz
cmp
test
ja
lret
subl
lock
jbe
xchg
mov
cltd
pop
pop
cli
inc
stos
orl
push
cwtl
add
fucomi
repnz
out
jecxz
out
xor
mul
fwait
sub
stc
or
xor
and
inc
pushf
push
cs
psrad
int3
push
push
and
mov
cld
insl
outsb
jge
sub
or
mov
add
ja
mov
and
fwait
aas
push
lahf
jns
add
lds
mov
and
daa
push
shl
icebp
jb
cld
shrl
and
add
in
outsl
insl
mov
inc
dec
pop
push
inc
add
adc
jnp
js
xor
push
rcrl
mov
sub
outsb
or
sub
or
and
mov
aaa
jo
push
or
pop
sahf
loop
or
dec
rcr
imul
inc
das
adc
hlt
sub
in
xor
arpl
lock
out
leave
ss
dec
push
jl
mov
mov
jmp
nop
cmc
rclb
mov
mov
movsl
inc
mov
push
rcrl
sub
imul
cli
cli
xchg
aas
mov
in
jecxz
xor
das
rcrl
in
xchg
sti
mov
mov
imul
jl
lods
pop
sbb
dec
ja
movups
mov
int
aaa
xchg
movsl
xorl
dec
sub
loopne
pop
mov
dec
dec
mov
pop
sub
mov
xor
dec
mov
ret
mov
pop
fmull
pop
lods
sahf
lea
cmc
jne
sub
call
and
dec
adc
or
iret
mov
jp
mov
fldcw
mov
mov
nop
push
pop
push
cwtl
dec
ret
es
sub
jnp
daa
xchg
and
pop
cli
cmp
loopne
jae
dec
popa
add
scas
in
cmp
insl
cmc
out
sbb
dec
mov
fdivs
lcall
push
lock
xchg
dec
jle
add
sub
scas
popa
lods
cmpsb
aas
sub
in
aaa
das
rclb
dec
lods
jge
add
je
mov
notl
fincstp
sbb
scas
fsubl
fcomps
inc
imul
inc
jp
push
or
mov
xor
pusha
in
cmc
in
jmp
icebp
add
rolb
das
dec
lods
in
mov
dec
mov
loop
mov
les
or
mov
or
in
lcall
xchg
mov
pushf
push
arpl
leave
std
outsl
or
pushf
fsubrs
or
inc
inc
les
mov
sbb
dec
xor
shlb
pop
xchg
aaa
dec
mov
mov
cmp
scas
pusha
sbb
test
xor
sbb
daa
shl
mov
lods
outsl
push
lcall
ret
lock
mov
les
jns
or
mov
add
cmp
sub
mov
and
add
pop
rclb
cmp
scas
lret
pusha
rcll
mov
or
repnz
cmp
outsl
jge
aaa
push
cmpb
xor
pop
nop
movsb
xor
and
adc
setl
icebp
sahf
inc
jb
xchg
add
inc
mov
or
xor
cli
dec
mov
shll
aaa
mov
sbb
vmovntdq
cld
rclb
and
movb
mov
and
mov
inc
ja
mov
jmp
push
pop
jbe
sbb
mov
adc
lcall
mov
outsb
cmp
cmpsb
push
jmp
dec
jo
and
stos
mov
jno
bound
mov
pop
mov
inc
push
int
loope
xlat
add
add
rcrl
mov
cmp
in
or
ret
int3
cltd
xor
or
push
imul
mov
mov
jns
jb
aaa
gs
inc
mov
cmp
iret
and
jge
pop
inc
adc
mov
add
rcrb
jle
push
data16
cld
incl
out
sbb
dec
cs
in
or
dec
rclb
xchg
cmp
sahf
loop
adc
repz
sbb
jle
insl
test
ror
call
mov
mov
dec
push
sbb
into
sbb
xchg
jge
mov
mov
jg
iret
mov
push
clc
icebp
sub
mov
dec
mov
or
loope
or
clc
sub
or
cmp
pusha
insb
jb
pop
mov
fldcw
lods
lods
dec
je
outsl
add
loope
mov
lock
in
xor
jg
adc
or
jle
lods
or
and
aaa
mov
adc
pop
mov
add
addb
sar
push
jp
xchg
mov
out
jne
dec
addr16
sbb
inc
ss
cmpsb
aam
aam
out
aam
and
scas
and
add
jne
add
jns
add
adc
xor
int
enter
nop
rcrl
idivl
cwtl
fs
cmp
mov
js
data16
add
lret
or
leave
or
mov
stos
imul
cltd
addr16
lahf
aam
jnp
and
push
adc
xor
inc
xor
jg
cmc
pop
mov
cmp
ret
sbb
cld
rcl
adc
xor
lahf
fcoml
and
mov
push
outsl
adc
mov
pop
fdivrl
add
sti
jns
mov
insb
cmpsl
out
xchg
incb
xchg
stos
int3
jecxz
mov
shll
mov
mov
in
xchg
jno
add
xor
test
hlt
push
test
jne
jge
inc
and
push
les
push
repz
mov
and
mov
ljmp
int3
icebp
aad
jbe
mov
loope
into
mov
pop
sub
push
testl
daa
push
icebp
lret
mov
jae
jle
cld
push
leave
or
xor
mov
xchg
bound
cwtl
cwtl
test
popa
jb
dec
loope
pop
mov
mov
push
xchg
test
icebp
mov
mov
add
enter
repz
adc
stos
ficompl
gs
or
std
rcrb
sbb
mov
sbb
mov
lods
insb
in
dec
lcall
inc
push
iret
loop
in
push
cs
push
xor
push
mov
sbb
mov
pop
call
test
push
std
jecxz
in
jne
cmp
pop
popf
mov
add
xor
cwtl
dec
push
loop
insl
std
add
mov
mov
lds
adc
addr16
mov
js
mov
mov
test
iret
xor
xor
sbb
pop
jge
mov
mov
xor
std
ficompl
into
rol
shlb
repnz
jb
lods
scas
orl
insl
out
or
xchg
aas
sbb
out
cld
pop
cld
lds
mov
ret
aas
or
jno
stos
mov
jle
xor
pop
sahf
scas
mov
push
cmp
cmpsb
mul
adc
out
adc
mov
jnp
fisttpl
mov
jp
mov
pop
out
pushl
bound
xor
mov
jb
fidivl
push
inc
sub
das
mov
pop
shrl
in
add
mov
push
imul
mov
pop
popf
aaa
ljmp
mov
push
aam
add
lods
inc
xchg
xchg
mov
out
mov
pop
repnz
jno
jl
jp
lods
pusha
std
adc
bnd
jl
xlat
mov
aad
pop
dec
jg
inc
push
clc
ret
push
add
jle
sbb
xchg
pop
xchg
and
xchg
push
adc
imul
pushf
hlt
add
cmp
loopne
mov
bound
mov
or
xlat
insb
pop
and
push
push
push
scas
mov
mov
orl
out
sti
add
sub
and
jae
shll
scas
sarl
xchg
scas
cmp
pusha
ficompl
mov
mov
test
xor
sbb
and
xchg
sbb
mov
insl
sarl
jecxz
sub
xor
push
cmc
cmp
hlt
notb
add
nop
pop
outsb
pop
sbb
dec
rorl
aaa
xchg
jnp
sub
pushf
and
mov
sbb
and
dec
xchg
lret
adc
mov
jg
sub
xchg
daa
adc
mov
leave
cmp
mov
addl
push
inc
sbb
sbb
mov
into
int
scas
test
dec
cmc
push
pop
lret
ja
sub
iret
scas
mov
dec
insb
mov
stos
or
mov
pop
mov
hlt
mov
sti
aaa
pop
xor
lods
int3
sub
or
dec
jecxz
je
nop
fildll
dec
dec
sub
and
mov
aam
clc
push
lcall
or
xlat
jp
ljmp
push
imul
add
ret
pop
jecxz
es
repz
mov
and
push
aaa
ficompl
rcl
or
xor
dec
xchg
mov
out
stos
jmp
out
outsl
cmp
and
jmp
aad
loop
outsb
int
jp
je
rolb
mov
inc
mov
mov
mov
push
adc
mov
xchg
jmp
enter
mov
push
jb
loope
fst
roll
xor
stos
pop
notl
and
je
in
sub
lea
mov
lods
stos
cmpsl
adc
cmp
rorb
rcrb
jns
out
xchg
cli
adc
je
sub
xor
js
mov
sbb
cmp
inc
fnstsw
add
jmp
daa
mov
jno
or
push
repz
jl
pushf
mov
push
bswap
pop
adc
outsl
in
mov
jle
xor
daa
push
loopne
dec
test
push
aas
call
in
gs
movsl
dec
cli
jns
lahf
in
mov
stc
popl
jge
addr16
out
sub
mov
scas
and
pop
nop
mov
jp
dec
adc
cmpsl
inc
xor
inc
xor
push
rcrl
fildl
fnstenv
mov
mov
dec
adc
pop
push
mov
lods
mov
lret
mov
push
xchg
mov
lock
gs
fcoms
xchg
add
mov
xchg
mov
int3
sbb
push
dec
loop
cwtl
jecxz,pt
mov
inc
add
ret
sub
fstpt
shll
cmp
mov
adc
data16
xor
std
jo
push
cmp
adc
fisttpl
pop
aad
dec
imul
pop
mov
sbb
into
push
xor
and
xchg
jl,pn
repz
or
cmp
int
push
je
pop
adc
pop
ja
call
call
mov
cwtl
rcrb
fiaddl
xchg
sub
xchg
fstl
pop
pop
fsubrs
testl
int3
sbb
scas
inc
aas
fdivr
mov
push
mov
cmp
mov
pop
loopne
mov
rolb
mov
xchg
rcrb
push
sub
leave
mov
push
xor
sbb
mov
mov
popa
pop
dec
fidivrl
lret
leave
orb
sub
and
int3
lahf
sbb
jo
or
mov
std
and
outsb
nop
inc
jo
lret
fldt
cmp
mov
out
adc
es
jecxz
mov
in
stc
jl
loop
mov
lods
inc
jmp
movb
nop
add
rcrb
mov
ja
push
mov
jnp
stos
in
movsl
xor
mov
dec
jg
adc
orl
cli
fldt
shlb
repz
enter
mov
pop
add
or
push
push
fbld
xchg
mov
imul
jns
icebp
scas
adc
adc
scas
lds
imul
pop
insb
xchg
rorl
in
mov
imul
fwait
adc
and
mov
mov
and
pop
movsl
fsubrs
cwtl
mov
mov
mov
pop
inc
lret
cmp
xor
pop
adc
lret
rcrb
andl
ficompl
cmp
nop
mov
xchg
testb
push
js
or
pop
loopne
int3
je
enter
mov
push
repz
sbb
jb
xor
xor
dec
mov
inc
adc
sti
loop
data16
sub
mov
cld
xchg
dec
popa
jl
lret
bound
cmp
pop
mov
jb
push
pop
das
and
inc
and
outsl
in
out
inc
data16
lret
xlat
mov
push
mov
cmpsl
sti
cmpsl
into
pop
push
out
mov
leave
xchg
xchg
ud2
mov
ljmp
xchg
or
dec
xchg
jne
xor
xchg
dec
inc
add
nop
mov
xor
pop
adc
mulb
adc
push
and
dec
cmpsl
sahf
xor
call
mov
jg
bound
pop
leave
inc
pop
and
add
jg
icebp
in
outsl
ja
cmpsb
rcr
mov
cmp
sub
cmp
mov
pop
lock
jmp
out
jl
cmpb
repz
sub
push
std
and
xchg
inc
cmpsb
das
mov
mov
aad
inc
repz
xchg
adc
mov
sahf
push
outsl
lods
fcmovu
push
adc
pop
and
inc
xchg
jns
jl
repz
inc
xchg
subb
clc
cmp
push
push
xchg
inc
sbb
fcmovbe
imul
ja
call
and
repz
push
sbb
mov
inc
rcl
icebp
mov
mov
cmp
pop
ret
int
sahf
pop
mov
jno
inc
fucomi
dec
sbb
pop
mov
stc
fsts
inc
inc
pop
lods
clc
mov
popf
lods
fwait
jecxz
mov
sbb
push
and
imul
popf
jg
out
notl
inc
hlt
jl
pop
stos
stos
gs
jns
mov
mov
int3
jle
ja
cmp
dec
adc
mov
mov
lcall
lcall
int3
lock
xlat
fbld
xchg
in
add
mov
lcall
into
xor
js
pop
call
xlat
cld
addr16
push
sbb
out
iret
cwtl
or
mov
sbb
repnz
sbb
movsb
mull
add
ficomps
sub
pop
push
ficompl
sti
cmp
shlb
in
mov
insl
jmp
push
or
lods
pushf
mov
mov
push
rorl
lea
add
int
xor
ljmp
in
sti
xor
into
movsb
mov
or
mull
imulb
es
xor
xchg
mov
aad
push
std
xchg
dec
bound
in
dec
test
int
jecxz
push
insl
sti
sar
cmp
push
arpl
sbb
test
cwtl
dec
mov
pop
cs
push
fwait
ss
pusha
in
hlt
sub
sbb
cld
mov
in
pop
and
fdivrl
ret
push
pop
pop
and
rcrl
inc
out
shll
mov
rcrb
lods
pop
stos
push
cmp
or
pop
sbb
mov
add
aad
aam
mov
jmp
push
inc
mov
jecxz
mov
and
dec
add
adc
stc
push
shl
clc
add
mov
cmp
cmpl
data16
divb
in
or
mov
jmp
imul
sub
mov
xor
in
ds
push
push
sub
push
shll
fsubrp
lahf
mull
clc
sbb
arpl
xchg
mov
lock
stc
inc
xor
jp
ror
dec
push
test
orb
ds
ss
and
inc
push
insl
xor
aas
dec
test
aad
mov
aaa
push
sub
sahf
add
es
jbe
sbb
sub
int
mov
js
daa
sarl
ja
fucomp
repz
xor
sub
xor
xlat
mov
addl
imul
push
jae
push
notb
int
cwtl
dec
mov
sbb
hlt
adc
stos
push
add
pop
push
cmp
mov
insl
jns
mov
adc
cs
mov
mov
adc
in
push
xor
inc
xchg
inc
jg
xchg
fldl
mov
jne
jle
roll
in
lds
fwait
mov
gs
lds
fists
loopne
dec
sub
jbe
cmp
repz
pushl
dec
jecxz
and
icebp
sub
cmpsl
xchg
fdivl
xchg
call
loopne
cmp
ds
or
cmp
cs
cmc
pop
loope
fucomip
pop
dec
stos
mov
sarl
out
lds
ds
adc
gs
xchg
xchg
push
fs
fcoml
mov
jge
and
mov
je
lahf
push
dec
fimull
pop
in
dec
insl
jmp
sahf
je
mov
pusha
add
push
outsl
sub
push
std
idiv
cmp
dec
test
les
inc
mov
js
mov
mov
lahf
sti
popf
fwait
mov
out
jo
mov
pop
imul
shl
push
ljmp
popa
fs
push
xchg
movsl
icebp
out
xchg
fs
in
movsb
dec
popa
adc
jg
aaa
sub
lcall
dec
mov
clc
sbbb
mov
pop
dec
inc
repz
adc
xor
mov
adc
push
jg
xor
enter
xchg
iret
repz
jnp
insb
fwait
dec
adc
into
aas
lret
push
xor
test
mov
xchg
lea
shrl
jecxz
data16
push
iret
push
lods
cmp
outsb
pop
push
xchg
push
lock
cmpsl
lret
dec
cmpsl
mov
jo
out
xchg
test
pop
lds
jge
andl
jecxz
jl
or
xor
mov
idivb
cmpsb
fs
pop
mov
popf
xchg
dec
xchg
cld
negb
aam
sahf
dec
pusha
ja
cld
insl
inc
mov
mov
jg
jns
xchg
pop
or
scas
or
and
mov
or
sub
dec
in
jmp
in
inc
cmp
jmp
call
and
outsb
mov
add
dec
pushl
cmp
shll
stos
es
test
movsl
imull
loop
or
enter
enter
pop
jmp
cmp
mov
adcl
xor
lret
push
jae
pop
ja
cs
mov
dec
outsl
ret
ja
jae
cmpsb
scas
xor
pop
sahf
test
loop
push
and
jg
test
lods
movsl
int3
jle
xor
outsb
cmpsl
add
adc
cld
add
insl
inc
lahf
and
pusha
xor
mov
and
and
in
adc
les
sbb
or
and
cmpsl
jl
sub
xorb
popf
subl
ret
mov
inc
js
cmp
xchg
scas
adc
out
popa
inc
xlat
add
into
add
inc
jmp
jecxz
xor
xchg
or
jno
ret
add
sub
jbe
addr16
jg
lret
icebp
dec
fcmovnb
int
inc
shll
push
ret
xchg
mov
ja
sbbb
bound
js
out
sbb
and
cmc
in
stos
jno
push
cltd
pop
cmp
push
dec
test
cmp
dec
mov
adc
aaa
sub
rorl
lods
divb
pushf
or
adc
fs
fiadds
test
or
mov
xchg
jae
aad
mov
cmp
xor
loope
test
outsl
mov
dec
xorb
aad
int3
jne
js
jp
mov
pop
and
xor
gs
js
std
outsb
movl
out
das
jns
mov
out
push
mov
test
jo
iret
lods
arpl
jne
shl
pop
and
cmp
dec
xor
outsb
jmp
arpl
sarl
lods
das
ret
push
xlat
cli
mov
sub
fptan
les
das
push
and
dec
mov
jle
loope
out
xor
gs
push
clc
add
push
or
nop
mov
push
pop
pop
pop
xor
pop
mov
xor
jmp
ljmp
loopne
lods
pop
inc
mov
repnz
loopne
hlt
jp
jecxz
insl
jecxz
movsb
lcall
sbb
insb
inc
nop
sbb
adc
jecxz
lret
cmp
pop
add
mov
inc
pop
xlat
inc
arpl
mov
dec
ljmp
sub
fidivl
in
and
jno
fs
and
push
push
inc
lret
push
mov
lods
sub
and
push
int3
xor
push
lods
or
insl
cmp
jnp
xchg
iret
sbb
push
fcmovnb
pop
cld
iret
cmp
and
sbb
inc
sub
sbb
dec
std
rcr
and
push
sbb
ret
stc
push
rcrl
adc
test
sbb
test
mov
xlat
decb
pusha
mov
insb
xchg
mov
rcrb
jecxz
push
mov
xor
cmpsl
les
mov
bound
jge
arpl
pop
insb
and
cli
jg
cmpsb
fnsave
in
es
sub
or
mov
adc
inc
das
xchg
les
adc
sahf
dec
ffreep
or
mov
jbe,pt
lock
xor
mov
mov
sbb
fidivs
sahf
jb
imul
lret
pop
hlt
xlat
xchg
sbb
push
mov
mov
adc
cs
mov
sbb
inc
repnz
mov
push
bound
in
popf
movsl
jo
sahf
shlb
inc
popa
iret
mov
sbb
out
fdivr
and
mov
cmp
jns
cmp
icebp
pop
cltd
or
mov
ss
dec
dec
cwtl
and
hlt
cltd
sub
inc
mov
syscall
push
aas
cmp
std
dec
in
mov
mov
cli
add
or
push
and
cmpsl
sbbl
pop
adc
ret
xchg
cmp
movsl
sarl
arpl
jle
mov
jg
das
in
inc
push
es
adc
inc
loop
arpl
pop
push
fisttpll
pop
pop
jle
mov
xchg
mov
out
dec
jl
xor
pop
jno
pop
and
cmp
cmp
xchg
cwtl
sbb
testb
sti
pop
je
sub
xor
addr16
add
push
sahf
add
or
popf
fcoml
jno
mov
shlb
pop
loope
in
mov
cltd
mov
mov
cmpsl
jmp
jmp
pop
mov
mov
cmp
insl
xchg
or
push
test
iret
jb
and
loop
addr16
jp
inc
fildl
pop
mov
mov
popa
push
push
repnz
cmp
jecxz
test
xchg
fisubs
mov
jl
loope
imul
and
sahf
pop
lret
adc
xor
out
psrlw
mov
mov
cld
xchg
test
je
fiadds
test
mulps
movsl
mov
cs
jle
push
mov
imul
mov
and
ss
loop
imulb
sahf
push
popa
mov
pop
stc
mov
adc
dec
fs
dec
inc
rorb
negb
sbb
xchg
jne
ds
mov
into
inc
mov
fidivl
out
aam
ficompl
jno
pop
js
dec
dec
test
adc
sbb
mov
lds
pop
js
mov
inc
push
xchg
das
and
pop
inc
mov
dec
or
push
ljmp
iret
mov
xchg
xor
cmp
fdivl
cli
out
mov
sub
mov
mov
loop
cltd
imul
mov
mov
push
push
mov
repz
push
cmc
mov
push
sahf
and
int3
sti
push
sbb
incl
aad
fwait
push
ret
lret
or
mov
adc
jl
imul
jno
cli
loop
int
ficompl
insl
in
jno
sbb
pop
test
add
cmp
movl
cmp
pop
mov
mov
lods
cwtl
scas
sbb
xor
or
add
jl
imul
inc
pushf
xchg
cmpsb
mov
outsb
add
rclb
pusha
xor
lcall
in
mov
leave
enter
lea
sbb
jae
fistl
sbb
xor
cmp
movsb
mov
add
insl
xor
and
call
push
dec
in
push
cli
jae
pop
jg
sarb
lret
push
mov
mulb
jns
in
loope
lmsw
pop
mov
push
and
iret
test
or
fistl
out
call
push
inc
out
mov
stc
add
push
pop
nop
xor
adc
lea
push
pop
jns
mov
sub
fisttpll
mov
movsb
jbe
cmc
shrl
pop
push
iret
enter
fstpt
adc
mov
sbbb
pop
push
xor
push
movsl
cmp
mov
incb
subb
les
xchg
xor
sti
fucomp
mov
add
loopne
lcall
jmp
cmp
repnz
and
call
xchg
mov
xchg
mov
clc
mov
gs
sbb
out
jmp
leave
push
divb
ret
enter
fimull
or
ja
and
out
in
arpl
fcompl
cltd
mov
push
jmp
jne
test
add
jl
mov
loope
push
xchg
addr16
ja
aas
pushl
loope
cmp
lret
pop
fdivs
lcall
xlat
ljmp
adc
and
push
leave
push
jne
jle
and
lods
fwait
jg
add
test
fwait
mov
dec
pop
xlat
jnp
daa
mov
popl
xchg
sti
and
mov
std
mov
inc
dec
nop
movsb
push
loopne
pop
xor
les
leave
test
test
es
fsubrs
fldcw
sbb
push
mov
lahf
das
and
push
dec
mov
sbb
mov
sti
mov
iret
lods
push
mov
popa
push
insb
pop
sbb
xlat
mov
pop
mull
stos
jno
gs
lods
pop
add
mov
aam
jp
out
or
sbb
cltd
imul
fxch
jnp
mov
pop
sti
call
sub
or
jmp
loop
add
test
sbb
sti
adc
adc
jns
sbb
xchg
jle
insb
push
cld
dec
jns
jg
mov
xchg
in
jl
loopne
ss
xor
je
jo
movsl
and
mov
and
leave
cmp
gs
and
in
test
or
shlb
ret
dec
adc
outsl
fisubrl
faddl
lea
or
cli
pop
push
shlb
dec
sbb
sahf
addl
lods
test
fldt
add
fnstsw
pop
aas
sub
rcrl
xchg
xlat
mov
mov
jae
jecxz
dec
xor
in
in
out
jle
pop
mov
das
jo
sub
repz
loop
sbb
call
cmc
addl
data16
mov
or
sti
ja
imul
xor
outsb
mov
xchg
mov
loop
push
sbb
arpl
fcoms
dec
or
mov
mov
dec
movsb
shll
data16
mov
pop
and
sbb
pop
inc
or
mov
popa
jecxz
add
fsub
or
jns
sbb
sub
arpl
adc
push
gs
mov
push
cmc
fwait
dec
daa
sbb
jecxz
hlt
sti
mov
adc
pop
je
or
pushf
mov
dec
cmc
stos
adc
inc
fmul
fisubrs
aaa
outsl
mov
lea
popf
cmp
mov
mov
pushf
mov
mov
or
push
mov
aaa
repz
mov
popa
mov
out
lcall
xchg
rcrb
mov
xchg
inc
sti
xchg
mov
nop
fucomp
or
ja
test
sub
adc
fsubs
pop
mov
lret
pushf
movsl
or
call
test
leave
push
mov
pop
cmp
div
adc
das
sub
mov
lret
aas
loope
fs
mov
mov
cld
mov
insl
shrb
imul
sbb
lret
lods
jl
push
in
jmp
sbb
jne
inc
adc
jl
outsb
call
inc
adc
imul
nop
mov
mov
popf
loop
out
push
add
cmp
xchg
js
inc
dec
mov
cs
lods
mov
inc
inc
cmp
and
dec
adc
pushf
mov
cltd
dec
iret
adc
outsl
inc
xor
inc
inc
and
mov
imulb
fidivs
sbb
int3
sti
das
daa
inc
or
int3
fists
sub
fwait
roll
and
xchg
orb
shl
jns
pop
lock
ret
sbb
inc
xchg
imul
mov
in
jge
mov
clc
add
shlb
in
fadds
adc
leave
xchg
std
filds
cmc
xor
jg
and
pop
fcom
sahf
lods
inc
aas
add
dec
inc
xor
jge
adc
out
mov
mov
add
or
or
pusha
xchg
mov
fcmovnb
cld
je
fwait
xchg
adc
jb
push
push
add
inc
sti
stos
inc
add
push
shlb
jle
pop
loop
loopne
stos
out
xchg
rcr
pop
push
mov
cmpsb
dec
xor
mov
outsl
push
mov
mov
mov
inc
jmp
rcr
mov
mov
in
mov
out
pop
xchg
movsb
call
arpl
rolb
pop
inc
lods
inc
repnz
push
aad
adc
add
dec
pop
dec
rclb
test
mov
xchg
insl
adc
repnz
and
loop
fs
and
and
and
ja
pushl
in
or
xor
incl
pop
mov
outsb
ror
push
lea
xchg
aaa
inc
cmpsl
int
mov
mov
outsb
cmp
cmpsl
sarb
sbb
lock
ja
in
cltd
aam
pop
xchg
or
adc
add
and
inc
mov
test
push
mov
fwait
adc
lret
fadd
punpckhbw
cmp
cmp
and
and
pop
push
xchg
mov
shrb
in
stc
lods
insb
push
jmp
in
push
and
ljmp
push
in
cmp
jno
adc
pop
or
std
mov
fidivrl
or
fldenv
xchg
les
jnp
les
std
lcall
add
add
lods
sbb
aad
movsl
test
push
movsb
push
fs
jp
orl
clc
or
mov
cli
xor
insl
js
or
cmp
add
xor
pop
inc
ds
jl
xor
outsl
jae
movsb
dec
inc
mov
popl
adc
lahf
imul
mov
dec
inc
add
mov
jle
cmp
rcll
shll
xchg
loopne
rorl
pop
mov
xrelease
sub
jne
leave
xor
inc
ja
test
repz
je
xchg
xor
lock
enter
int3
mov
or
into
jmp
frstor
add
fwait
dec
rcr
and
pop
ret
adc
out
sub
aas
dec
cltd
mov
fcoml
cmpsb
sub
imul
pop
imul
dec
ljmp
test
call
push
hlt
sub
daa
cmpsl
or
xor
push
sahf
push
inc
jnp
cmc
rcr
out
fistps
xlat
pop
aam
cmpsl
push
mov
push
fsubs
popa
adc
and
pop
jl
pop
add
sarl
ss
imul
nop
lahf
pop
imul
mov
aas
xor
dec
rcrb
add
cmp
mov
push
mov
arpl
fldt
pop
fiaddl
or
les
add
out
sahf
or
cmpsl
mov
int
or
mov
inc
daa
enter
xchg
scas
cmp
bound
shl
test
cwtl
push
ss
pop
push
adc
push
jmp
lock
out
push
mov
xor
lock
mov
push
leave
insb
loope
fildl
sahf
mov
inc
pop
xor
adc
es
andb
daa
pop
daa
sbb
dec
jg
das
jmp
mov
xor
data16
push
fbld
push
adc
sbb
inc
andl
ffreep
scas
jecxz
in
shll
or
mov
or
ljmp
or
sub
inc
bound
pushf
in
jnp
push
push
xor
push
and
cltd
sub
cmp
je
inc
jecxz
xchg
xchg
js
and
or
mov
add
sub
loop
ret
jmp
adc
xchg
fwait
mov
out
fistpl
xchg
jo
ja
arpl
fsubp
pop
mov
sbb
mov
fldt
mov
and
mov
stc
into
pop
jle
jno
and
sub
add
icebp
test
push
pushf
and
and
mov
and
xor
sbb
dec
jle
pop
jp
xor
push
fsubrl
shrl
sbb
lods
mov
out
mov
outsl
out
jnp
adc
jecxz
push
xor
iret
add
mov
jp
pop
add
int
mov
xchg
and
cmpsb
push
ret
gs
or
and
sbb
ja
or
das
jmp
mov
stos
sbb
sbb
inc
sub
jle
pop
outsl
push
aaa
rcll
popl
sbb
cmp
xor
movsl
out
outsl
es
das
inc
pop
cwtl
xorl
or
mov
or
ljmp
mov
mov
flds
std
xlat
xorb
inc
fdivrs
and
adc
sbbb
loope
push
rorl
push
cmp
mov
xor
lock
add
shlb
lret
fwait
into
aas
ret
loopne
mov
aam
les
sub
outsl
inc
jge
and
jne
orl
adc
cmp
dec
mov
cmp
sbb
jb
jg
sub
pop
ror
loope
orb
arpl
fs
outsb
lods
outsb
jle
xlat
ds
jge
hlt
xor
mov
cld
and
into
mov
adc
add
aam
cmove
outsl
sbb
pop
jmp
in
push
fucom
push
das
jb
jecxz
icebp
sub
push
dec
jg
xchg
das
iret
scas
aam
out
mov
add
aaa
fwait
jl
in
jno
push
outsl
mov
dec
pop
scas
icebp
lcall
adc
xchg
lock
bound
das
insl
jno
mov
setg
add
ret
rcrl
xorb
js
or
in
cmpsb
fs
icebp
inc
sub
jge
scas
cmp
into
bound
push
scas
loope
dec
xor
mov
mov
jecxz
sbb
jmp
cmp
mov
dec
mov
dec
mov
jb
movsb
dec
ret
adc
scas
xchg
testl
fistpl
roll
pop
leave
mov
aas
add
daa
xor
lock
scas
shlb
xchg
gs
push
push
insb
pop
test
jnp
dec
mov
fisubs
std
popf
or
mov
jle
aas
inc
out
cwtl
inc
aaa
mov
push
test
shlb
sub
ret
mov
push
lret
or
sbb
pushl
xchg
ret
lret
add
lock
rcrl
call
cmpsl
loopne
xchg
arpl
xchg
mov
push
enter
jecxz
mov
icebp
jae
push
xor
into
jl
testb
pop
outsb
aaa
sbb
or
mov
mov
sarb
enter
jg
xor
mov
mov
add
push
xchg
icebp
es
and
cwtl
sbb
int3
add
mov
loop
es
fdivrs
and
inc
cmp
negb
inc
push
sbb
ret
or
add
movb
lret
and
jp
push
shll
sbb
pop
test
das
sbb
cwtl
pop
in
sar
leave
pop
bnd
xchg
inc
std
subb
stos
shlb
jno
fadds
in
mov
xchg
clc
in
movsb
bound
lods
push
pop
fs
aas
pop
cld
jg
outsb
inc
jns
je
pop
xchg
push
cmp
xchg
mov
jns
mov
fldt
ret
sub
sbb
mov
cmpsl
cmp
mov
or
lock
mov
shl
adcb
icebp
iret
ja
sub
pushf
inc
and
jb
adc
out
repnz
out
imul
push
fldt
fcom
lods
sbb
in
jns
test
or
shll
mov
mov
pusha
cmp
ficompl
jl
cmpsl
cltd
or
test
sub
into
lea
inc
push
cmp
fwait
add
add
and
andl
int
daa
stc
out
mov
xor
cmp
iret
test
fidivs
cmp
loop
das
lods
pop
inc
imul
popf
das
sub
and
call
fadds
add
test
jg
xchg
or
jl
clc
arpl
arpl
xor
sub
in
push
dec
icebp
xor
xor
sahf
fbstp
outsl
fs
xchg
mov
aaa
lret
loopne
das
imul
popf
cmp
popa
cltd
and
fildl
fmuls
rol
fs
movsb
xchg
scas
push
lea
test
push
shrb
mov
xchg
loop
movsb
movsb
fxch
pusha
and
cmp
jb
fstp
or
iret
or
fsubrs
xorl
mov
fisttpll
xorl
xchg
xchg
push
add
shl
ja
xchg
clc
jno
ret
sbb
ljmp
mov
mov
nop
xchg
inc
and
adc
cld
mov
aaa
sub
scas
imulb
pop
pop
inc
test
movsb
addr16
mov
xorl
sbb
pop
pop
inc
pop
sub
mov
inc
cmp
add
mov
push
inc
mov
jae
mov
sbb
push
lods
test
sarb
pop
push
das
cltd
xchg
pop
ja
outsb
out
or
push
mov
push
jb
lods
ret
push
loop
push
push
xor
ret
test
mov
les
jno
mov
push
ret
mov
rcl
arpl
mov
sub
dec
out
inc
xchg
add
movsb
jg
rcrl
imul
lcall
jp
xchg
fnstenv
into
jbe
mov
jae
pop
movsl
daa
fildll
iret
and
ret
cmp
and
mov
lods
hlt
mov
jns
arpl
pop
out
lods
popf
shrl
and
jp
out
pop
testl
mov
xchg
fcomps
inc
fsts
fs
or
lea
xor
jl
mov
fistps
inc
inc
dec
aam
out
in
fptan
lods
xor
test
sub
orl
adc
ja
in
inc
adc
or
sub
mov
pop
sub
sti
out
fdivr
aaa
sbb
mov
mov
jmp
xchg
mov
push
fsubr
out
std
iret
cmp
add
icebp
xor
addr16
inc
loopne
mov
andl
cmp
cmpsl
jl
icebp
mov
bound
xor
clc
jmp
xor
xor
push
cld
test
shll
js
push
push
repz
inc
or
add
bswap
jmp
sarl
stos
in
aam
add
int3
pusha
lods
push
cld
pop
mov
mov
add
jno
mov
mov
adc
xor
adc
scas
insb
in
lea
movsl
int3
pop
xchg
push
out
fnstcw
sbb
test
add
fidivs
mul
push
fmul
iret
mov
int
fnstsw
icebp
shll
lret
mov
imul
xchg
ret
leave
jae
and
push
icebp
sti
cwtl
mov
mov
pusha
mov
stc
jne
loopne
rcl
inc
lods
lods
jnp
adc
push
cs
jp
std
gs
fwait
push
inc
data16
inc
dec
fwait
or
nop
stos
mov
out
rol
movsl
test
xor
rcll
ljmp
pop
dec
xchg
jae
xor
popf
push
sbb
movb
inc
loopne
jecxz
jg
cwtl
out
dec
xchg
stos
enter
jl
and
xchg
nop
mov
pop
adc
imul
mov
adc
int3
icebp
rcrl
push
ret
iret
xor
xor
scas
in
js
jecxz
inc
fsubrp
dec
pop
in
push
fwait
ds
xchg
mov
dec
js
loope
inc
cmp
dec
xor
test
and
leave
test
cli
cltd
lcall
loope
aam
push
sbb
daa
push
pop
popa
sub
orl
cld
dec
scas
clc
add
roll
xchg
dec
loope
sbb
icebp
hlt
movsl
in
xchg
cmpsl
cmc
arpl
xchg
lcall
xchg
test
jne
cltd
push
push
mov
mov
hlt
adcl
in
cmpsl
xchg
fisubrs
neg
xor
pop
mov
fwait
push
nop
mov
cmp
into
mov
add
and
inc
rcl
dec
jle
mov
sbb
pop
mov
jmp
sbb
int3
jbe
jmp
mov
hlt
dec
test
stos
cmp
xchg
xlat
into
sub
repz
xchg
negl
jle
lock
js
pop
in
jne
subb
mov
dec
jne
mov
jns
or
and
add
icebp
xchg
adc
push
mov
push
sub
or
nop
mov
rcrl
dec
iret
jge
or
mov
mov
push
push
jge
adc
jge
pushl
sbb
dec
es
cmp
stos
fiadds
or
sahf
fldt
jle
xlat
push
movsb
push
imul
sbb
inc
inc
sbb
into
inc
jg
gs
dec
add
lret
sbb
leave
or
xor
xchg
and
xor
imul
pop
jecxz
fisubl
sbb
mov
popa
xchg
aaa
sbb
xor
or
xchg
loope
hlt
or
pop
lret
gs
sub
je
in
jecxz
mov
bnd
push
pop
xchg
dec
mov
xlat
into
jg
sahf
sahf
fists
leave
mov
clc
test
mov
jg
inc
mov
pop
inc
xor
dec
dec
fsubr
cmpsb
xchg
daa
jae
unpcklps
jg
jg
icebp
sub
aas
mov
hlt
out
inc
mov
push
jmp
cwtl
hlt
sub
ficoms
scas
shll
nop
ja
dec
dec
push
mov
dec
test
sbb
push
xchg
xchg
mov
lock
mov
ret
mov
sbb
inc
push
fs
pop
mov
xchg
movsb
mov
mov
and
and
outsl
jl
movsb
inc
adc
iret
or
sub
mov
fwait
xor
imul
int
gs
cltd
stos
cmp
popa
sub
push
shll
test
ret
ret
inc
xchg
sbb
adc
daa
push
inc
movsl
movsb
les
or
repz
fdivr
pushl
inc
cmp
push
mov
cmp
andl
lret
adc
lret
cmpb
ds
cmp
ja
pop
dec
fs
mov
lock
imul
loope
jmp
outsl
rorb
testl
scas
inc
cwtl
stos
loope
into
out
out
mov
mov
sahf
outsl
sbb
ds
adcl
cs
lret
mov
icebp
in
push
cld
mov
lea
ret
dec
scas
add
stc
sbb
movq
fldt
cwtl
and
fmull
xchg
push
push
jae
daa
push
inc
jbe
in
xor
sub
jne
mov
inc
insb
mov
and
push
sarl
and
push
mov
xlat
jmp
mov
cs
xor
outsb
cmp
mov
pusha
mov
push
clc
push
roll
sub
fs
xchg
bnd
adc
push
sti
in
cmp
pop
mov
adc
sbb
shrb
xchg
lahf
fmull
cmp
ljmp
scas
mov
test
sbb
stos
enter
and
int3
arpl
mov
lret
imul
subl
sub
mulb
mov
aaa
test
sbb
inc
or
movsb
jle
push
adc
ds
das
into
mov
pop
popl
xchg
nop
stc
jmp
shr
stc
mov
outsl
ljmp
scas
addr16
dec
arpl
outsl
pushf
jle
mov
jns
inc
orl
pop
cmp
andb
les
loop
mov
out
lahf
fnstsw
testb
js
movsl
lret
fistps
adc
add
cld
clc
cmp
xor
aaa
icebp
icebp
aas
xor
ret
mov
and
inc
movsl
push
adc
dec
into
xchg
push
imul
sbb
int
lds
imul
aaa
std
inc
pop
insb
sub
rol
mov
mov
aam
aas
cld
adc
pushf
mov
push
loope
cmp
in
mov
daa
xorl
jns
cmpsb
popa
and
aad
les
popf
mov
pop
and
pop
mov
popf
cmp
xor
inc
add
jnp
cli
cmp
adc
push
push
in
cmp
or
fidivs
push
test
mov
loopne
enter
repnz
mov
mov
adc
sbb
in
mov
mov
lret
out
or
add
sub
insl
pop
in
in
lock
mov
and
mov
ds
js
cmp
popf
call
mov
bound
in
mov
mov
cli
mov
xchg
jne
loopne
loop
test
pop
sbb
popf
nop
mov
dec
jae
mov
sub
adc
mov
xor
shlb
hlt
in
pop
mov
fwait
ret
jmp
imul
dec
sub
stc
frstor
call
nop
and
cmp
inc
add
or
in
mov
repz
cmp
ror
les
mov
and
in
dec
xor
sub
dec
pop
mov
mov
test
sbb
xor
nop
push
dec
adc
xchg
add
jg
int3
ret
mov
mov
pop
je
mov
hlt
jl
lahf
data16
sbb
xor
mov
icebp
dec
and
add
or
adc
adc
nop
mov
call
xchg
adc
or
inc
inc
mov
addr16
in
sbb
mov
jp
aam
push
aaa
lret
ret
push
in
lds
and
push
imul
mov
ja
push
jp
mov
fists
xor
test
out
stos
shrl
push
enter
add
and
sub
pop
pop
ret
mov
xchg
popa
inc
xchg
mov
sti
decb
stos
cld
add
cmc
out
mov
rorb
jp
es
cwtl
inc
jecxz
imul
daa
imul
mov
pop
push
xchg
icebp
cli
sbb
sbb
push
jns
push
aam
jecxz
int
jle
xchg
mov
mov
adc
xor
enter
loop
inc
sahf
fstl
outsl
xchg
xor
add
scas
or
popf
mov
sub
ss
add
ljmpw
aas
jecxz
xchg
dec
in
push
stc
xchg
sti
dec
call
repnz
xor
mov
cmp
insl
rorl
ss
imul
or
lret
addb
mov
inc
and
mov
cs
in
lods
subl
mov
int
arpl
loope
cwtl
outsb
stc
stos
mov
jmp
rol
dec
mov
or
mov
mov
xor
mov
xor
sbb
lret
clc
jp
pop
sbb
mov
and
ds
cld
jp
and
and
pop
repnz
pop
jle
cltd
test
mov
cmp
call
js
push
or
push
push
ds
xor
es
inc
xchg
mov
les
lds
and
das
dec
shll
inc
ljmp
adc
pop
add
fcoms
mov
daa
sbb
mov
lret
mov
aas
or
sub
jns
inc
adcl
insl
mov
jecxz
daa
mov
mov
hlt
xchg
pop
arpl
cld
mov
jecxz
sub
add
pop
add
inc
std
mov
jae
adc
fsts
mov
xchg
inc
imul
arpl
mov
mov
dec
rclb
xchg
fwait
std
dec
test
stos
sarb
das
add
cltd
xchg
mov
shll
pop
push
xor
and
push
sbb
pushw
xchg
mov
or
dec
std
cmpsl
pop
dec
xor
leave
aas
out
dec
push
jb
lds
push
ljmp
test
sbb
lret
inc
jmp
sub
push
addb
sub
pop
dec
imul
inc
xchg
cmp
pop
mov
int
test
or
jbe
fs
dec
and
idivb
in
and
inc
mov
or
mov
out
xor
imul
jl
inc
in
insb
pop
mov
push
jbe
je
lods
jge
jb
inc
mov
pop
daa
lods
xchg
rcll
mov
sub
mov
mov
cmpsb
jp
rolb
dec
aaa
mov
fs
jl
push
imul
push
incb
negl
cmpb
push
xorl
ljmp
rcrb
out
sub
aam
inc
cs
mov
enter
dec
mov
push
adc
xor
test
push
inc
rclb
imul
in
sub
or
faddl
ret
inc
lret
outsb
sbb
subl
and
push
cld
fldt
in
dec
mov
data16
int3
pop
cs
inc
or
mov
js
js
fcomi
xor
and
pushl
bnd
mov
repnz
push
sbb
adc
mov
and
mov
jo
fisubl
stos
cmp
leave
sub
sbb
shrb
mov
cs
pusha
inc
arpl
adc
pushf
loop
sub
rcrl
inc
repnz
bound
mov
das
jl
lds
in
rcrl
xor
xor
call
or
data16
dec
pop
lods
sub
push
mov
scas
fidivl
push
movsl
ja
xchg
rolb
mov
jg
pop
fdivrp
fwait
sub
sbb
push
sbb
mov
scas
xchg
icebp
sub
pop
pop
in
mov
cmp
aam
leave
sub
sbb
mull
sti
dec
push
jecxz
jo
lcallw
test
dec
push
mov
adc
fimuls
lods
and
add
int
mov
xchg
cmp
int3
lods
js
inc
mov
mov
xor
ss
push
movsl
mov
cli
ss
xchg
bound
aad
jb
dec
sub
into
fmul
mov
fnsave
jbe
hlt
cmp
xorl
push
push
rorb
lods
and
push
fsts
lock
mov
mov
lods
fimull
push
jp
jbe
push
cld
insb
aam
imul
xor
fwait
ret
jnp
shlb
xchg
insb
xchg
pop
fldt
loope
nop
pop
push
mov
test
lahf
sbb
in
push
or
ds
xor
push
or
outsb
jp
imul
jp
pop
cmpl
les
jno
xor
adc
mov
sbb
rcrb
ficompl
enter
fwait
pop
add
ret
call
cld
mov
sbb
test
ljmp
push
ja
mov
xchg
fidivrs
lock
sub
pcmpeqb
sbb
jbe
mov
ret
lahf
sbb
sub
mov
sub
cmpsb
es
and
pop
pop
aad
push
pop
and
out
repz
loopne
push
xchg
cli
xor
sahf
inc
pop
sub
stos
mov
stos
push
mov
outsl
push
mov
les
out
xchg
clc
pop
push
popa
sbb
movsb
pop
int
add
arpl
outsb
imul
aam
or
inc
cmp
mov
dec
and
mov
mov
popf
ljmp
pop
inc
adc
inc
int
subb
jae
add
jp
test
jle
out
shl
mov
popf
jge
mov
leave
pop
lret
cmp
jmp
es
ret
adc
push
cmpsb
test
sub
movsl
push
popa
leave
sub
xor
es
aam
clc
push
adc
xor
push
jne
jle
das
das
repnz
pop
stos
and
push
test
fs
push
imulb
mov
loope
jno
dec
inc
cld
test
jo
jnp
sbb
aaa
mov
push
jmp
aad
mov
push
icebp
mov
aas
jns
adc
popf
mov
jmp
adc
and
pop
push
sti
sarl
mov
loop
xchg
adc
insb
inc
add
or
sbb
pop
test
in
les
lds
aam
lods
sbb
lds
insl
mov
inc
shr
xchg
lahf
mov
roll
fnstenv
popa
scas
ds
jno
xchg
cli
push
js
ljmp
sub
and
cld
ss
xlat
mulb
adc
xor
inc
fbstp
xor
sbb
jae
mov
cmp
sarb
mov
dec
xchg
lret
std
or
js
mov
sub
leave
out
mov
mov
je
cmp
popa
gs
addl
pushf
push
jg
jnp
push
dec
cli
and
or
in
mov
dec
hlt
sub
arpl
xchg
fists
lret
inc
in
xacquire
adc
xchg
call
mov
rorl
jge
pop
or
mov
adc
clc
nop
sbb
mov
psubusw
addb
inc
add
xchg
imul
adc
jp
mov
test
mov
sub
mov
inc
push
cli
mov
jb,pt
in
inc
inc
dec
in
sbb
lds
lret
lods
repz
inc
cmpl
movsb
fiadds
cld
push
testl
testb
jp
arpl
mov
lea
lods
jno
jg
movsb
int
push
ret
pop
xor
jg
xchg
dec
aas
jmp
xor
push
inc
pop
je
test
loopne
mov
fcoml
jecxz
xchg
addr16
mov
mov
in
sahf
fwait
jne
gs
insb
push
mov
cmp
mov
in
icebp
test
jno
adc
cmpl
insl
por
cmp
and
lcall
and
into
repnz
and
inc
and
subb
or
sub
push
stos
cmp
cld
lea
mov
shr
loop
or
jnp
and
xor
lea
scas
pop
jge
out
jno
push
push
xchg
push
jecxz
mov
xchg
jns
cmp
xchg
icebp
push
mov
shrl
sahf
test
adc
scas
dec
out
jp
shll
repz
cmpsb
sbbl
mov
mov
cld
mov
shld
int
xchg
ficoml
add
fstps
mov
xlat
jbe
repz
movsb
hlt
addr16
lods
sbb
icebp
mov
iret
and
cmpsl
or
jge
mov
jecxz
ret
xor
fstpt
add
dec
push
mov
mov
push
ss
pushf
ret
btr
jp
inc
inc
aaa
add
std
loop
xorb
ret
data16
icebp
pop
cltd
fiadds
cmp
inc
mov
int
inc
jb
jl
int3
mov
das
pop
fsubl
jbe
test
cmc
push
push
jl
xchg
sub
ret
cli
aas
sub
pop
or
or
std
add
mov
push
jmp
xchg
xchg
pushf
adc
fsub
aad
push
shrl
push
push
ret
out
jne
cmpsb
filds
lret
movsb
outsb
sbb
pushf
insb
sbb
dec
or
movsb
cmp
mov
sub
inc
jecxz
mov
add
ss
rcl
push
sub
mov
fadds
xchg
inc
push
insl
inc
daa
pop
fs
orl
pusha
add
sub
loop
shrl
incb
cmp
push
add
cmpb
ret
xchg
rcr
mov
call
sub
inc
lcall
out
and
add
xor
aas
cwtl
stos
pop
xchg
add
pushf
pusha
and
sahf
cmp
imul
cmpsl
or
mov
pop
hlt
jnp
push
in
scas
mov
sahf
cmpsb
pop
test
pop
or
push
ret
ja
lcall
stos
jo
pop
popa
push
fidivl
jns
jp
pop
lds
mov
inc
pop
mov
cmp
or
cwtl
ret
jge
xor
mov
pop
sub
andl
clc
xchg
dec
ja
inc
xor
jb
push
in
nop
roll
out
clc
adc
mov
gs
cmpb
jne
scas
mov
pushf
cld
loop
fsubrl
inc
pop
pushf
ficompl
orl
dec
mov
adcl
inc
jns
push
xchg
mov
sbb
mov
ret
mov
cmc
leave
lds
or
in
jno
mov
out
stc
push
cmp
sbb
inc
pop
loop
dec
sbb
jge
mov
xchg
aam
mov
jo
movsl
jl
mov
sbb
lea
push
push
adc
insl
dec
arpl
mov
lret
inc
cmpsl
dec
iret
push
xchg
cmp
pop
sbb
dec
pop
insl
ljmp
ret
push
mov
sbb
loop
insb
rol
lahf
aas
mov
push
mov
mov
jmp
jne
xchg
pop
mov
cmp
xor
ss
mov
xchg
push
sub
test
enter
aad
enter
rclb
inc
mov
pop
jnp
mov
add
and
xchg
mov
fnstenv
add
add
or
xor
xchg
fists
pop
push
fsubl
or
mov
pop
and
mov
adc
enter
in
das
jnp
adcb
mov
sbbb
inc
cmpl
xor
fst
dec
dec
dec
xor
cmpsl
outsl
nop
xor
rcll
fwait
inc
leave
jg
or
inc
dec
addr16
rcl
out
push
push
adc
fcmove
inc
sahf
mov
or
outsb
pop
les
sbb
mov
sub
imul
push
mov
fisubrl
icebp
or
and
stc
out
sti
push
insb
mov
scas
mov
add
mov
outsl
mov
push
scas
aas
adc
xchg
add
out
hlt
std
lcall
les
orb
out
mov
mov
cmp
inc
xlat
loopne
inc
xor
jb
pop
out
mov
inc
xchg
dec
inc
jl
mov
fimuls
sbb
xor
je
lahf
jo
mov
or
push
xor
jp
mov
mov
cs
push
mov
not
in
dec
in
xchg
or
std
xchg
jg
pusha
jbe
int
ja
xchg
sub
xchg
or
je
xchg
test
stos
sarl
mov
icebp
sbb
pop
rol
jne
cmc
pop
and
sub
fldt
in
shll
cmp
mov
loope
ljmp
pop
push
mov
mov
fcoms
xchg
std
pop
jbe
sahf
gs
xchg
mov
notb
fs
nop
aam
cld
subl
stc
mov
or
push
ret
ret
mov
cmp
loop
loop
or
jo
inc
bound
lcall
out
lret
mov
mov
ret
shll
dec
and
rorl
fwait
cmp
fisttpl
aaa
fimuls
pop
lock
lahf
sbb
adc
insb
lret
adc
cltd
mov
inc
or
aam
xchg
inc
mov
popa
or
cmp
lods
xchg
outsb
or
mov
dec
sti
negl
es
out
outsl
stos
dec
ds
into
lret
sub
mov
int
fwait
out
mov
xorl
jmp
inc
dec
icebp
pusha
enter
out
jg
enter
fstps
ss
adc
je
push
or
in
andl
pop
ljmp
rcrl
cli
mov
arpl
mov
mov
xor
sub
data16
ret
addr16
adcb
movsb
or
sub
lds
fstp
mov
inc
sbb
add
call
mov
clc
mov
xchg
sbb
push
xor
lcall
xchg
pop
xchg
popf
gs
jmp
cmp
das
xchg
and
test
daa
hlt
scas
xor
ds
inc
pop
ret
adcb
stos
mov
mov
pop
call
cltd
ror
ret
mov
dec
push
mov
aad
push
sub
sbb
ret
lret
xor
adc
scas
jae
push
fwait
mov
push
sub
lock
dec
push
cld
jne
movsb
scas
ljmp
out
xchg
jl
pop
dec
outsb
imul
dec
add
mov
shl
mov
mov
inc
inc
mov
in
mov
add
xor
xor
add
shr
jp
lret
shrb
stc
or
mov
arpl
fcomip
cmp
popf
call
xchg
outsl
shlb
outsb
pop
nop
xor
stos
iret
jb
mov
repz
decb
jno
fldcw
popa
xlat
cmp
aas
out
mov
imul
insl
pop
jnp
cmp
icebp
push
std
mov
pop
iret
and
dec
push
mov
iret
push
ret
sbbl
or
in
jge
leave
mov
stc
cmp
fmull
rcl
stos
xchg
movsl
pop
push
xchg
fldl
push
inc
out
dec
pop
cld
ficomps
jo
addr16
insb
push
and
stos
mov
dec
in
cwtl
sub
icebp
jge
lock
incb
cmc
lods
mov
adc
mov
out
add
pop
mov
pop
fcoml
repnz
in
test
fidivrs
jg
repz
mov
pop
arpl
daa
mov
test
hlt
adc
loopne
sbb
xlat
push
mov
leave
in
jne
addr16
ljmp
push
mov
xchg
sub
out
movsb
dec
addl
mov
out
add
dec
inc
or
xor
test
jge
xchg
mov
loope
pop
leave
mov
lds
imul
push
lret
repnz
fbld
gs
rcpps
enter
mov
sbb
fs
in
int3
inc
jno
loopne
out
int3
xor
adc
push
jp
or
sbb
pop
sarl
sbb
sub
loope
clc
popa
jae
mov
mov
xor
imul
adc
push
jbe
xchg
fsubs
hlt
in
xor
push
jp
pop
scas
fs
dec
pushf
call
push
jl
sub
fucomp
pop
jb
fisubrs
addr16
adc
cmc
sub
push
arpl
mov
cmc
sbb
mov
jg
cmp
or
cmc
movntq
out
push
sti
jns
leave
xor
mov
inc
mov
inc
mov
jge
cli
mov
in
leave
xchg
or
pop
jecxz
mov
inc
push
iret
cmp
arpl
jmp
mov
push
clc
ds
int3
mov
adc
sahf
jle
push
out
filds
cmp
cmp
fdivrs
js
lret
adc
jmp
or
cmp
loop
cmp
cmpsb
fiaddl
sbb
pop
mov
testb
sub
adc
add
mov
sbb
out
shll
mov
mov
sbb
xor
outsb
jbe
gs
xor
sahf
pop
push
fwait
jmp
mov
push
xchg
add
ret
adc
nop
dec
and
push
push
call
jne
arpl
ficomps
ret
cmp
gs
xchg
add
and
popl
xorl
mov
out
push
xor
ret
dec
pop
clc
popa
int
pandn
fsubs
inc
xchg
sbb
add
stos
lahf
mov
pop
xor
mov
inc
sub
mov
shll
lcall
pop
shlb
mov
pusha
inc
cmc
pop
dec
xchg
or
dec
cmp
in
pop
cmc
jnp
pop
lret
outsb
mov
mov
mov
push
popf
das
mov
xor
jmp
fwait
jo
add
jmp
xor
sub
testl
dec
dec
rclb
inc
push
fdivrs
stos
fsubs
pop
xchg
add
aam
loopne
insl
nop
test
mov
mov
xor
xor
movsb
daa
cmp
pushf
adc
adc
sti
mov
xchg
sbb
mov
add
fsubl
push
mov
adcb
and
push
fmuls
cwtl
xchg
pop
cltd
xchg
cwtl
inc
enter
add
stos
aad
and
pushf
inc
push
and
push
xor
hlt
jo
nop
push
inc
pushf
cld
jmp
hlt
push
subb
inc
mov
inc
adc
imul
stos
dec
pop
mov
jns
mov
arpl
xchg
mov
fildll
das
mov
mov
stc
icebp
and
icebp
xchg
movsl
jb
mov
test
es
or
dec
xchg
std
mov
addr16
pusha
ljmp
xor
lea
xlat
jbe
daa
fistpll
fsubrs
jecxz
dec
stc
test
out
push
in
add
sub
jp
add
xchg
and
jp
enter
je
cmp
jmp
popf
pop
xor
xor
mov
push
jo
repz
rcll
mov
fldlg2
ds
mov
xchg
add
repz
fmull
dec
fwait
sbb
jnp
loope
jle
popf
popf
dec
jbe
mov
sahf
pop
xchg
aam
cmp
sub
frndint
mov
lods
pop
pop
mov
lock
sub
call
out
ja
pop
in
lea
push
incb
test
psubusw
fimuls
sbb
subl
dec
pop
in
stos
cmc
popa
sub
adc
dec
xor
into
sub
jbe
mov
jp
dec
jne
cltd
dec
shll
inc
es
push
stc
xchg
cmp
pop
xchg
mov
mov
nop
iret
or
push
mov
add
xor
sub
mov
pop
movl
adc
adc
cmp
orb
xchg
inc
sti
or
xor
cs
sub
xor
push
ret
adc
stos
xchg
add
sbb
cmpsl
fmuls
xchg
and
sub
dec
pop
pusha
nop
xor
xchg
mov
xlat
lret
or
cmpsl
cwtl
popa
popa
je
loop
cmpsb
adc
push
sub
push
push
jne
cmp
push
lods
icebp
mov
mov
add
inc
adc
jmp
dec
movl
mov
test
cmpsl
mov
xor
inc
fsubrs
sbb
jge
and
adc
lock
or
push
mov
pop
je
loopne
lret
adc
inc
inc
lock
dec
add
pop
stos
call
rolb
inc
aas
cmp
paddusw
clc
cld
and
pop
aam
jmp
adc
pusha
mov
iret
mov
insb
fcoml
sarb
pop
cvtps2pi
push
sahf
push
add
pop
cwtl
mov
bound
jo
shll
mov
mov
stc
add
shll
scas
mov
imul
push
pop
add
mov
adc
outsb
cmpsb
add
pop
inc
mov
mov
lds
hlt
xchg
fisubs
out
sbb
out
xchg
scas
xchg
dec
lahf
cld
and
out
or
ficoms
fsub
mov
dec
cwtl
scas
pop
sbbl
inc
fstpl
icebp
inc
sub
jmp
xor
les
data16
xor
mov
pop
mov
lods
xchg
or
sbb
inc
iret
lret
sti
xchg
repnz
outsl
sbbl
jmp
push
nop
cmp
or
arpl
ds
hlt
xchg
sub
in
test
jp
dec
repnz
jae
cmpsl
sbb
jb
sar
aam
jp
bound
xchg
cli
jae
movsb
jno
push
xchg
test
hlt
jae
mov
and
ffree
pop
orl
sbb
inc
xor
sub
cli
pop
jae
loopne
dec
adcl
or
mov
sub
sub
scas
add
jecxz
shlb
mov
fldenv
mov
arpl
mov
inc
adc
ja
or
mov
das
fists
inc
and
fcomps
inc
dec
jnp
jp
add
cmp
shlb
pop
aam
lock
ja
mov
ficoml
jns
adc
cmp
push
stos
mov
pushf
add
daa
or
in
dec
lret
inc
lods
jge
mov
cmp
add
sub
push
dec
gs
jmp
rcr
xchg
cli
inc
dec
daa
pusha
or
ret
cmc
aaa
or
cmove
dec
pop
sar
ja
xor
stos
xor
repz
lret
xchg
jbe
sub
adc
cmc
test
sbb
testb
incb
push
push
jmp
pop
dec
push
mov
outsb
add
stos
insb
cmp
jbe
jmp
decb
rorb
pop
clc
dec
xchg
adc
jns
push
bound
movsb
mov
nop
jo
cmp
insl
test
and
inc
aam
mov
inc
sbb
dec
cld
xor
sbb
and
jp
xchg
das
in
pop
fld1
cmp
insb
push
or
mov
movsl
jb
lahf
xor
push
fcomps
aad
xchg
inc
loop
inc
xor
jae
mull
mov
xchg
xor
mov
lret
sahf
mov
jmp
test
into
or
lahf
in
int3
fwait
mov
jnp
or
test
adc
push
pop
xor
jle
cmp
repnz
jge
xchg
push
mov
shr
call
es
sub
mov
ret
sbb
pop
xor
mov
gs
sbb
rcrb
pop
mov
adc
hlt
xchg
push
xor
ret
movsb
cmpsb
inc
ret
mov
jnp
cmc
dec
jecxz
je
loop
lcall
pop
nop
fidivl
sarb
ret
das
leave
jecxz
sar
push
jnp
inc
pushf
cmpsb
push
in
std
shlb
aad
or
fs
jmp
cmp
cld
sub
push
imul
loope
mov
mov
dec
push
mov
mov
mov
xchg
mov
test
jg
repz
pop
xchg
fprem1
lds
std
cmpsb
les
andb
movsb
lock
test
jnp
cmp
dec
dec
pop
mov
insb
and
pop
mov
jg
add
in
bound
cmpb
leave
jg
out
iret
nop
inc
enter
cmpb
cli
xchg
sbb
rcll
add
cmp
or
sahf
xor
lods
sar
shl
dec
cmp
rolb
or
test
clc
into
ret
cmp
js
addr16
jae
cmpsl
cmpsl
outsl
scas
adc
sub
arpl
test
inc
scas
fistpl
stos
stos
pop
mov
xor
jbe
bound
scas
aas
in
cwtl
jmp
mov
adc
fidivs
dec
xchg
notb
lock
add
inc
mov
hlt
scas
rorb
cmp
es
jp
mov
xor
cmpsb
fwait
and
rorb
push
sub
cmp
popa
pop
clc
jecxz
dec
cmp
in
out
rcrb
xlat
stos
scas
dec
ss
fs
push
nop
xorl
pop
mov
lock
lds
or
push
in
out
push
mov
icebp
outsl
push
and
xor
mov
shlb
dec
fiaddl
mov
ret
mov
lock
and
mov
test
add
adc
mov
rorb
imul
xorb
test
and
pop
mov
cli
test
fwait
sbb
aas
sbb
sbb
int3
paddsw
push
fistps
mov
mov
xor
je
imul
lods
rcrl
imull
sbb
out
inc
adc
cmpsl
or
add
fcmovb
pushl
inc
jge
bound
aas
pop
jl
mov
subb
mov
nop
mov
fstpt
out
jp
mov
ret
aad
fucomp
aas
fidivs
xchg
lds
add
roll
stc
inc
mov
sahf
orl
stc
repnz
jl
xor
addr16
movsb
loopne
arpl
and
cld
loop
xlat
out
pop
sub
js
push
dec
addb
in
lock
pop
loope
inc
iret
pop
jp
aam
lret
dec
jecxz
xlat
fcmovne
xchg
outsl
shl
outsb
fs
call
out
adc
push
mov
mov
loopne
aas
insb
cli
mov
fimuls
xchg
ret
inc
mov
inc
cwtl
mov
push
adcb
push
les
out
add
pop
cmp
dec
add
daa
add
push
lahf
mov
insb
push
xor
out
std
pop
mov
adc
sahf
dec
test
aam
jno
mov
xor
add
cld
cmp
xchg
ja
ljmp
mov
inc
negb
sub
and
neg
movsl
roll
mov
sbb
clc
lcall
filds
cmp
pop
add
cmp
add
add
inc
test
pop
rdpmc
out
cmpsl
push
lret
mov
mov
adc
inc
sbb
fisttps
push
cli
add
shrl
mov
es
dec
sbb
fwait
xchg
or
adcl
pop
popf
or
xor
push
mov
mov
mov
push
ret
push
xchg
fcmovu
sub
loop
rcrb
add
out
inc
loopne
add
mov
bound
adc
jge
jb
in
sbb
int
sbb
cltd
sbb
xchg
adc
ret
imul
cmpl
push
sub
lods
divb
push
lock
roll
in
data16
dec
xchg
roll
rolb
repz
sbb
scas
mov
scas
mov
sbb
and
int
pop
out
stc
add
movsb
adc
inc
scas
fnstcw
stc
mov
adc
lock
hlt
fstps
test
test
jns
gs
pop
pop
sub
out
out
inc
ret
loop
icebp
lods
cmp
mov
adcb
and
loope
das
pop
popa
pushf
add
and
lea
lock
and
mov
out
adc
mov
mov
addr16
mov
fnstenv
outsl
rcrl
pop
addb
popa
mov
jg
sub
dec
pop
nop
xchg
pusha
fsubrp
stc
xchg
fimull
xchg
cmp
push
adc
scas
inc
stos
divb
jne
sub
mov
clc
adc
rclb
add
mov
or
shlb
cmp
mov
lods
movsl
sub
andl
movsb
mov
fdivrl
cld
mov
and
les
popf
inc
roll
icebp
sbb
mov
mov
sbb
jb,pn
pop
or
pop
movsl
out
push
stos
jp
enter
adc
ret
and
hlt
and
ljmpw
stos
push
add
add
jno
pop
adc
pop
cltd
push
push
aad
fwait
repz
incl
popa
xchg
lds
aaa
mov
or
adc
ljmp
xor
lcall
popa
sub
xchg
lea
push
cmp
pop
gs
jbe
add
jo
add
xlat
loop
mov
fs
or
add
pop
xor
sahf
out
pop
lret
je
jecxz
jg
test
and
pop
jge
leave
push
icebp
dec
xor
lods
das
ss
outsb
sbb
jnp
xor
fcomps
push
push
mov
inc
cmp
inc
pop
and
scas
nop
add
push
jbe
mov
outsl
arpl
leave
inc
js
mov
or
mov
pushaw
rcrb
fidivl
js
clc
add
sbb
adc
fs
into
cmp
imul
ja
push
jb
mov
aas
dec
dec
pop
or
push
push
loop
push
in
shl
mov
fdivs
jns
mov
rorb
cmp
sti
sarl
out
cld
dec
sub
cwtl
orb
sbb
movsb
xor
out
inc
les
dec
fisttpll
fisttpl
ja
inc
fbld
stc
sub
lods
or
daa
cwtl
mov
data16
dec
and
ss
dec
mov
addr16
xchg
shl
add
push
or
jg
repnz
mov
in
adc
insb
repnz
mov
pusha
loope
inc
push
cmp
clc
cmp
push
popf
roll
sbb
cmp
xchg
mov
fdivrs
iret
int3
inc
js
xchg
daa
rorl
xchg
sbb
jge
gs
push
sbb
mov
sub
cmpsb
mov
adc
fwait
xchg
push
add
or
ss
push
stos
stos
in
shl
cmp
push
fmuls
lfs
jle
jmp
nop
insl
mov
addr16
rcrl
imul
jge
std
jns
xor
xchg
sti
and
push
cmpsl
sub
sub
mov
push
arpl
pop
mov
mov
dec
cmp
cmpsl
lods
cmp
sub
lock
call
imul
cmpsb
cmp
lret
push
mov
xchg
roll
cmp
inc
inc
aaa
jmp
fstl
pop
jb
pop
mov
xorb
cwtl
ss
mov
jl
pop
or
push
inc
dec
or
out
and
insl
mov
cmc
fisttpll
push
inc
jo
out
aam
cmp
adc
inc
add
movsl
in
cmp
sysret
sahf
shrl
fistpll
in
push
xchg
je
jnp
ds
and
mov
dec
add
jle
lret
bound
pop
xor
mov
cmp
xor
mov
add
enter
cmpsb
sbb
movsl
loopne
out
pop
xchg
daa
call
imul
dec
pop
adc
negl
mov
push
xor
mov
cli
cmp
fs
sbb
leave
fisttpl
mov
mov
arpl
ret
cmc
shr
xchg
jne
pop
mov
jg
add
das
int
std
addl
dec
pop
or
push
jo
xorl
push
push
lock
dec
lahf
test
pop
adc
mov
dec
sub
jns
mov
and
xchg
lcall
call
xchg
popa
mov
int3
dec
mov
dec
aad
je
mov
sub
inc
cmc
jae
sub
pop
xor
lret
sbb
scas
cmp
outsl
mov
es
mov
lcall
lds
jecxz
frstor
pop
popf
cs
mov
xchg
pop
adc
sbb
pusha
sub
and
inc
hlt
js
je
lock
das
cld
pushf
loope
pop
xchg
es
stos
adc
popf
dec
mov
cld
xchg
imul
imul
sbb
int
jnp
ds
dec
xor
cmc
inc
inc
hlt
push
repnz
add
xchg
orl
in
int
adc
pushf
aam
and
sub
pop
aaa
pop
pop
ret
sbb
dec
mov
jne
or
hlt
stos
adc
jno
cmpsb
adc
jge
bound
scas
notb
jp
scas
arpl
dec
sub
mov
ret
loop
nop
pop
jg
dec
dec
in
mov
clc
repnz
aam
enter
xor
inc
ret
jae
cmp
into
fcmovnbe
sub
push
push
roll
cmpsl
mov
xchg
sub
sbb
mov
jle
pop
sub
clc
outsb
sbb
pop
sub
shll
es
cmp
outsb
cmp
or
test
dec
mov
push
je
mov
push
lock
ficoms
sbb
add
ja
aas
loop
movsb
cmp
xchg
iret
or
cmp
pop
push
loope
mov
mov
mov
scas
inc
insl
dec
aam
dec
push
cs
and
shll
std
cmpsb
jg
pop
gs
xchg
cmp
pop
add
je
adc
mov
dec
sub
lcall
imul
arpl
mov
sbb
sub
sub
sbb
push
loopne
shlb
push
pop
lcall
sbb
lock
inc
push
in
inc
push
jecxz
ret
sbb
sbb
push
fisttps
repnz
jmp
fs
jle
mov
xor
adc
xchg
pop
arpl
adc
or
push
cld
jb
leave
dec
xchg
and
push
sti
and
mov
and
jnp
push
and
and
xchg
cli
loopne
andb
mov
lret
popa
push
mov
mov
dec
loope
sarl
xor
jmp
sub
push
mov
loopne
or
hlt
xor
and
mov
mov
fcompl
fisubl
mov
sbb
test
push
xor
shrl
push
jno
jmp
or
or
pop
xchg
jl
push
mov
cwtl
aam
inc
sub
jno
xor
lods
shll
inc
fs
ret
jo
cli
fidivl
add
jo
test
movsl
stc
ds
std
pop
inc
add
repz
out
jge
in
cwtl
dec
cmp
cmp
push
add
mov
push
clc
jo
mov
jl
add
sub
mov
imul
cmp
xchg
cs
pop
loop,pn
pop
sub
scas
shll
xor
in
loopne
je
sbb
xchg
inc
inc
shl
and
jnp
int3
mov
and
cmp
fidivrl
cmp
sbbl
pop
xchg
lret
jnp
aaa
addl
fistpl
lahf
mov
push
pop
aam
sbb
es
jecxz
lods
adc
in
aad
mov
stc
cmpl
sahf
mov
jo
push
mov
mov
clc
insl
push
ss
aam
sub
dec
ja
mov
lock
mov
jmp
mov
test
popf
sub
and
push
sub
xor
and
mov
and
rcrl
aaa
fistl
sbb
push
std
add
in
push
and
sub
xor
pusha
movsl
cli
mov
fs
xchg
popl
mov
sbb
inc
fldenv
ljmp
push
sub
inc
ret
bound
pop
stc
outsb
mov
mov
push
leave
loope
and
in
xor
cwtl
sub
jl
push
pop
shlb
icebp
fstpt
popa
mov
mov
fnstcw
inc
mov
push
ret
mov
cmp
loop
mov
pusha
iret
add
pop
gs
jns
jb
inc
leave
hlt
popf
and
fwait
push
lea
jecxz
dec
sbb
into
jge
in
dec
repz
pop
mull
nop
fmuls
jg
push
roll
xchg
hlt
arpl
mov
adc
data16
sub
imul
or
jl
jno
cwtl
add
cmc
movsb
mov
mov
test
pop
adc
outsb
cmc
cmp
in
lcall
fidivl
cld
mov
in
push
cld
stos
pop
jmp
or
inc
mov
ret
xor
sti
das
int3
mov
adc
push
jb
and
scas
idiv
enter
xor
lret
icebp
imul
das
js
subl
inc
dec
icebp
inc
fdivrl
xchg
shll
push
xchg
inc
sbb
cltd
lock
xor
xchg
lods
xchg
mov
or
loope
daa
ljmp
cmc
pop
pop
push
push
dec
negb
push
pop
push
or
xchg
inc
lret
jbe
ljmp
xor
int3
lret
icebp
ds
mov
ret
movsb
mov
in
mov
pop
notl
iret
sub
aad
sub
jg
mov
inc
testl
mov
test
data16
dec
mov
or
pop
add
jl
jbe
lock
fdivs
outsl
dec
cmpsl
call
in
xchg
jb
pop
stos
mov
bound
divl
test
ret
sahf
cld
inc
aam
inc
push
mov
and
pop
jmp
rcl
mov
dec
adc
jge
cmp
lds
add
xlat
mov
push
adc
data16
enter
xlat
pop
and
outsl
mov
movsl
leave
pop
cmpsl
pop
fdivrl
xchg
add
stos
xor
jge
push
or
mov
xchg
fwait
iret
cmp
add
xor
push
das
or
iret
jg
std
and
jbe
gs
arpl
jae
cmp
push
les
push
inc
push
scas
mov
mov
cmp
and
nop
lds
lock
test
sbb
gs
adc
mov
aam
cmpsb
xor
pusha
les
pop
pop
test
int
mov
xchg
dec
sbbb
jae
rcrl
dec
sbb
pop
daa
xlat
mov
sub
in
iret
and
imul
pop
mov
daa
addl
mov
push
mov
add
cmp
sub
rorl
pusha
sub
sub
inc
adc
dec
scas
cmp
pop
aad
pusha
sahf
cmp
in
pushf
lods
pop
inc
mov
ficomps
bound
fwait
pop
not
mov
cmpsl
mov
pop
or
out
das
xchg
xchg
xorb
sub
add
cli
sbb
xor
push
gs
xor
stc
mov
aas
inc
test
jns
jns
lock
aad
fsubrs
rorl
inc
sbb
repz
mov
jae
jb
pop
imul
lret
xor
je
lock
pop
ja
add
faddl
add
test
add
pop
or
leave
or
scas
xchg
in
inc
test
and
test
and
ret
notb
dec
rcr
mov
push
sbb
testl
dec
rol
jg
in
pop
mov
stos
jge
mov
cmp
jl
in
dec
ljmp
int
ret
repnz
mov
add
or
lret
popf
mov
in
push
insl
jae
ret
fs
and
rcll
aaa
sub
icebp
les
or
fdivl
fadds
jge,pn
and
jmp
or
lea
mov
shrl
jne
js,pt
mov
and
pop
add
in
cmp
pop
cs
push
sub
shrb
cmp
ja
inc
jle
cmp
clc
loope
sbb
mov
pop
or
adc
dec
ficoms
nop
pusha
stc
and
push
jno
sbb
mov
jo
fdiv
mov
and
loope
movb
js
push
mov
and
sub
sub
mov
clc
add
outsl
aas
sbb
xchg
xchg
cltd
rolb
cmpsb
push
jmp
lret
jbe
fdivl
dec
cli
jae
sahf
push
faddl
pop
add
enter
sahf
gs
mov
cli
mov
arpl
mov
adc
js
xchg
mov
mov
push
pop
jle
or
push
mov
jecxz
xchg
or
inc
aas
and
push
mov
in
push
lock
popa
or
pushf
ficoml
add
cwtl
std
std
inc
pop
sub
movsb
push
pop
cmpsl
daa
test
cmp
ljmp
mov
int3
cmpsl
xor
fwait
lds
add
mov
mov
mov
adc
pop
popf
push
add
test
es
ret
mov
jns
inc
fsubl
in
dec
repnz
dec
popa
stos
jecxz
xor
sbb
aaa
les
loope
shr
ret
mov
adc
push
push
lret
push
movb
clc
fwait
aas
hlt
add
jnp
sub
stos
gs
data16
icebp
xchg
movsb
mov
push
cmpsb
cmp
cmp
outsb
mov
insb
mov
push
fs
pop
xchg
repnz
push
idivb
fwait
dec
xorl
mov
lret
div
adc
jno
cmp
lock
cmc
push
fidivrl
cs
das
jno
lcall
and
jl
gs
mov
popf
mov
je
mov
and
aad
xchg
jmp
inc
popa
mov
or
rcrb
adc
fsincos
decb
mov
loopne
jge
or
dec
push
ficompl
sysenter
or
jmp
mov
mov
cmp
lahf
inc
pushf
jno,pt
nop
shl
inc
inc
aam
add
aas
jl
cmp
rolb
jl
push
pop
std
xor
jmp
pusha
jae
or
fsubrl
sahf
cltd
shll
sbb
ficoml
add
fmull
sbb
push
cmp
fsts
rcl
jne
jp
leave
lods
jg
pop
xor
jne
add
mov
lock
dec
inc
jmp
fisubl
pusha
mov
push
hlt
mov
pop
les
sti
fsts
pusha
into
jae
jge
fdivrl
add
mov
cwtl
sbb
push
fidivl
adc
xchg
xor
adc
dec
push
scas
repnz
mov
mov
mov
fs
lcall
fistpl
add
sbb
xor
dec
in
cmpl
cmp
mov
ds
das
jb
nop
bnd
les
push
push
fimuls
and
scas
loope
aam
push
pop
loop
insl
into
xchg
rolb
mov
insl
dec
inc
jge
fstpl
std
pop
dec
xchg
push
pop
mov
cmpb
xchg
jge
je
mov
popf
in
jnp
mov
or
and
gs
stos
std
add
scas
aas
jbe
xor
inc
das
dec
xlat
mov
push
aam
in
cmpsb
mov
hlt
xchg
out
into
nop
fsubp
outsb
ret
cmp
pop
hlt
pop
and
mov
sub
aaa
pop
daa
dec
push
pop
and
or
sarb
cmp
adc
imul
outsl
mov
inc
mov
lcall
aam
pop
mov
ret
orl
test
insb
mov
jge
mov
lret
mov
repz
push
repz
in
jp
cld
fimuls
sbb
imulb
mov
scas
ret
cmp
add
dec
movsl
shl
sahf
cmp
sahf
gs
push
call
xchg
inc
fidivs
sarl
popa
pop
scas
cmp
jecxz
nop
les
or
cmp
das
xor
jmp
dec
test
jg
and
rcrl
jne
pusha
inc
push
enter
shlw
lret
pop
sbb
sub
jg
inc
xchg
cmpsb
out
out
loope
sbb
mov
scas
and
sarl
jg
in
pop
scas
test
fdivrl
ds
pop
in
into
dec
mov
vmovaps
and
insb
mov
call
sub
cli
mov
lods
adc
lods
int
je
jg
pop
outsl
je
popf
jnp
cmp
push
fpatan
pop
dec
dec
push
movsb
jecxz
mov
mov
and
stos
repnz
pop
fs
push
ret
divl
xchg
push
fstpl
in
push
xadd
fnstcw
fists
cwtl
jmp
inc
ljmp
shl
jb
lahf
or
mov
out
push
mov
pop
jno
xor
fucomi
mov
clc
push
xchg
iret
dec
cs
pop
mov
cld
pop
stc
rol
xchg
adc
nop
jbe
sub
sub
aam
jnp
sub
cmp
push
orl
push
sbb
push
ret
lcall
pop
and
sahf
cmc
and
stos
loopne
xchg
jecxz
and
xchg
cmp
call
popf
scas
nop
bound
inc
cmp
dec
inc
xchg
xlat
add
xchg
add
aas
lcall
sub
cld
pop
insl
cmp
pop
mov
and
sub
imul
int
pop
scas
jns
sub
insl
pusha
stos
pop
sub
into
ret
mov
sti
movsb
cmc
pushf
lahf
adc
insl
mov
adc
mov
and
cld
inc
mov
pop
imul
or
notb
xrelease
pop
mov
add
or
push
outsb
bound
mov
fwait
clc
cmpsl
sub
insb
cltd
aaa
mov
xchg
lds
and
xchg
cmpb
push
es
inc
andl
outsl
inc
add
pop
push
sbbl
cmp
jno
aaa
pop
and
call
xchg
rcrl
out
inc
aas
inc
add
mov
sub
fucomi
xor
push
sbb
jns
lret
dec
test
out
je
jmp
cwtl
fisttpll
into
movsl
cwtl
test
pop
outsl
lods
enter
xchg
sbb
jmp
sahf
ljmp
pop
push
in
and
and
mov
adc
sub
dec
jg
or
pusha
fwait
cmp
adc
ja
inc
jne
sbb
cmp
mov
fs
inc
xchg
popf
xor
out
outsb
push
ror
pop
add
push
shl
xchg
pop
or
pop
adc
jp
cmp
idivb
sub
sub
xchg
mov
loop
xchg
sahf
repnz
leave
addr16
mov
jbe
cs
sbb
cmp
push
lock
ja
adc
or
add
xor
mov
pop
xor
loopne
and
lcall
cmp
xchg
push
pop
fdivs
and
push
push
test
mov
out
inc
testl
scas
inc
in
xlat
push
ss
ja
xor
stc
adc
fldt
mov
shlb
hlt
push
out
inc
daa
test
sub
out
lcall
cmp
push
movsl
or
mov
enter
sub
xor
fcomp
xchg
pop
xchg
inc
aad
notl
lcall
cwtl
dec
mov
xchg
xlat
sbb
lea
inc
inc
fdivs
clc
cld
inc
cltd
inc
shrb
rorb
leave
div
cmpsl
mulb
push
arpl
loopne
lret
cmp
adc
xchg
dec
mov
inc
aas
push
js
fwait
dec
sbb
lds
cmpsb
stos
inc
jno
and
mov
mov
ret
out
push
jo
sub
pop
addb
mov
jns
push
into
and
or
popa
lock
mov
jbe
std
leave
pop
jae
pop
mov
jecxz
ss
xchg
outsb
fsubrl
mov
lahf
daa
ljmp
pop
inc
popa
pop
push
repz
xlat
push
mov
cmp
inc
sub
dec
addr16
movsl
ds
shll
add
test
dec
ss
jge
or
ret
cli
dec
clc
or
dec
inc
ret
cwtl
es
mov
mov
sbb
add
adc
rcll
mov
or
pop
sub
jmp
pop
ret
movsl
dec
rorb
aad
ljmp
mov
in
inc
je
fxam
cmc
lahf
aaa
or
add
fmul
aas
arpl
idivl
push
mov
sub
inc
in
call
or
xor
test
aam
call
xor
pop
jns
dec
pop
stc
shlb
inc
loope
scas
jp
xchg
into
addl
xor
ss
lret
jbe
mov
mov
dec
pop
outsb
fwait
cmp
jns
mov
sub
mov
mov
jmp
mov
test
push
rcrl
cmp
mov
xor
jo
out
and
ja
or
cmpsb
inc
rcll
leave
cmp
pop
outsb
test
rcl
aas
push
data16
pop
cmpsb
xchg
adc
inc
insl
gs
ja
add
aam
daa
jg
movsl
std
dec
sbb
adc
rcr
sahf
jbe
pop
repz
push
loope
cmc
jg
test
cld
sahf
and
mov
lea
icebp
add
adc
cld
jecxz
mov
aaa
cmp
jle
dec
xor
xchg
cmp
or
iret
add
lods
mov
lock
out
arpl
fiaddl
pop
fildll
call
or
cmpsl
clc
int3
xchg
stos
xor
shr
xor
pop
test
imul
pop
adc
and
xlat
sbb
xchg
mov
lahf
into
sub
mov
in
cltd
divl
or
pop
xchg
fistpl
mov
push
inc
sub
test
rorl
pop
hlt
idivb
push
inc
out
ret
lock
jo
push
stos
mov
dec
jnp
addl
ljmp
repz
jle
aad
sub
add
lcall
repnz
in
add
loopne
lock
popa
leave
or
add
sbb
test
cld
das
mov
roll
inc
je
xor
fstps
ss
add
push
cmovb
lea
jp
push
xchg
dec
imul
cld
jle
pop
insl
insb
mov
popf
dec
ret
outsb
fldenv
or
mov
inc
inc
test
in
mov
dec
mov
ja
jecxz
std
sti
hlt
nop
adc
pop
mov
dec
out
sti
jo
adc
enter
aam
or
js
xchg
and
push
mov
test
sbb
stos
cli
cmpsb
xorl
insb
addb
xchg
jecxz
cmpsl
dec
dec
mov
imul
push
and
add
sub
xor
int
cld
inc
jo
movsb
sbb
data16
jb
in
jnp
mov
push
shr
xlat
pop
rorb
lret
jg
mov
and
jl
fucomip
in
into
sub
cmp
mov
arpl
and
fiadds
sbb
adcb
mov
sub
add
push
and
jp
enter
pop
and
adc
add
jle
in
xchg
cmpsb
dec
clc
into
push
outsb
mov
mov
mov
push
mov
pop
pop
test
es
mov
dec
sub
gs
jle
nop
pop
mov
sbb
cmc
adc
fcomps
pop
inc
pop
mov
pop
cmp
hlt
pop
repnz
inc
pop
jbe
nop
sbb
jae
inc
rorl
fwait
lock
lret
fs
outsb
xor
dec
stos
inc
enter
hlt
ds
popa
int3
push
sub
testl
mov
sbb
pusha
cli
mov
out
jle
push
scas
xchg
out
lea
fsub
push
xor
dec
cmpsl
or
and
je
outsb
mov
inc
rcl
jl
dec
aam
jbe
sbb
fwait
or
nop
insl
lock
into
lcall
cmp
dec
lods
mov
icebp
xchg
into
aas
dec
mov
adc
dec
test
stos
mov
mov
inc
fdivl
sub
test
ja
sub
and
jg
lcall
pop
sbb
movsb
adc
in
xchg
jnp
mov
cmpb
and
jecxz
fcmovnu
daa
fmuls
pop
and
nop
rorl
and
sub
repz
cltd
mov
xchg
fdivs
cmp
in
loop
test
adc
push
jecxz
pop
jmp
or
cmp
dec
push
pop
orl
push
loope
fs
push
aas
fmull
dec
push
int3
mov
pop
lahf
cmp
ret
mov
das
sbb
hlt
jmp
int
jns
mov
sub
pop
adc
mov
xchg
jg
push
in
sub
add
sarb
dec
aas
mov
or
daa
cmp
jne
int
fwait
xchg
mov
pop
dec
cmp
xor
stos
std
imul
jo
frstor
out
sahf
or
int3
enter
loop
fs
lods
pop
xor
fists
in
cmpsl
xor
dec
jle
cs
bound
stos
jae
xor
aam
add
jno
imul
cmp
cld
pusha
mov
cltd
push
sub
adcl
jae
fldl
mov
test
xchg
call
mov
pusha
addr16
cmpsl
roll
or
inc
push
cmp
xchg
pop
cwtl
push
add
leave
xchg
xlat
sub
out
imul
cli
inc
hlt
fcomps
je
ds
inc
or
xchg
cmp
mov
sti
sub
cmp
xor
imul
dec
lret
adc
push
dec
jne
dec
xchg
out
enter
adc
or
test
cmc
jle
jmp
or
insl
test
testb
fdivrs
pop
pop
sbb
lcall
mov
jbe
lods
or
test
jle
sbb
jmp
subl
dec
test
pop
or
pop
fimull
roll
or
cmp
mov
jle
jg
and
fsubs
jb
out
cmc
adc
fwait
cmp
icebp
mov
push
ror
pop
int
movsb
cmp
inc
test
aas
inc
aam
dec
push
lea
jg
testl
mov
pop
jns
fistpll
cwtl
push
adc
enter
ret
iret
mov
mov
incl
adc
arpl
pop
in
lahf
lret
or
into
ret
dec
roll
lret
mov
xchg
je
mov
pushf
inc
ds
fsts
insl
add
jb
mov
cmc
clc
push
insb
push
or
push
push
jo
or
xor
mov
push
mov
mov
and
test
sahf
mov
shll
iret
lods
adc
out
fldl
ficompl
in
and
ror
mov
sahf
dec
push
mov
mov
pop
lea
sahf
push
repnz
push
push
movsb
mov
or
or
outsl
inc
lcall
sub
jecxz
xchg
inc
std
jbe
and
sarb
push
dec
jg
loopne
sbb
aad
jae
dec
jb
es
sub
push
xchg
outsl
jl
loopne
xchg
xchg
jae
adcb
inc
add
or
jnp
jge
mov
mov
dec
adc
ds
aaa
adc
jno
sub
lods
int
fs
jp
dec
aas
xchg
jo
pop
sbb
and
pushf
jnp
cmpsl
and
test
roll
std
mov
mov
cmp
repz
mov
jl
and
sub
fldenv
jecxz
mov
sbb
jno
xchg
push
andb
mov
popl
xchg
mov
pop
jp
outsl
push
dec
cvtdq2ps
sub
or
cmp
mov
sub
push
mov
das
or
add
jo
cmp
sbb
aaa
mov
imul
jle
mov
ja
add
sub
lahf
cmp
lods
mov
rolb
and
inc
int3
fdiv
inc
jle
mov
mov
lcall
rcll
pop
shll
adc
and
dec
xchg
xchg
repz
addr16
mov
xchg
xchg
sub
mov
mov
and
sarl
cli
xor
xchg
addl
movsb
out
scas
and
fdivrs
push
faddl
call
mov
jno
adc
adc
repnz
les
enter
and
pop
imul
popa
mov
aaa
lods
aad
jmp
sbb
or
pop
lret
jns
insl
push
loopne
or
insb
scas
cmp
aaa
fistl
out
je
mov
lcall
mov
mov
lock
bound
jae
pop
xorb
ljmp
xchg
movl
xor
pop
mov
sbb
in
xchg
lret
movsb
fnstsw
jmp
push
fisubs
add
fisubrl
mov
imul
cmpsl
test
test
jg
repnz
add
cmp
pop
mov
mov
lret
popf
adc
cmc
int3
and
jb
repnz
jle
mov
inc
push
nop
adc
push
int3
arpl
stos
add
int3
inc
in
adc
mov
in
add
push
push
push
cwtl
mov
repz
in
sub
push
sbb
cmp
dec
sub
mov
test
mov
lock
dec
jmp
test
push
arpl
mov
or
xor
add
idivl
mov
out
xor
aad
out
jecxz
call
daa
adc
inc
jp
xchg
into
fwait
push
and
lcall
cmp
out
add
test
out
push
int3
dec
and
push
or
xchg
or
mov
jae
arpl
xlat
jp
lcall
mov
ja
sub
push
lcall
pop
gs
mov
outsl
mov
push
jp
into
stos
fmul
int3
sub
imul
ret
repnz
fbstp
push
push
ds
je
sbb
lods
in
ja
stos
ret
cltd
sub
sbb
das
xchg
jmp
andb
push
dec
or
mov
pop
dec
inc
add
xor
out
xchg
mov
dec
add
sti
mov
inc
ss
flds
xor
lret
test
push
cmc
inc
movsb
dec
xor
iret
mov
rorb
sarb
mov
adc
ret
mov
xchg
fildll
jmp
enter
or
stos
jb
std
jae
push
insb
mov
jl
call
jl
roll
fldenv
insl
fucomi
adc
outsb
mov
in
adc
and
in
pop
xor
jno
cltd
movsb
rcrb
mov
fwait
pop
stos
arpl
stc
es
pop
cmc
and
ffreep
inc
inc
push
shll
hlt
xchg
je
aam
icebp
scas
xorl
ja
imul
push
es
fnstsw
push
push
test
xchg
out
jae
xor
popa
scas
jge
inc
jae
pop
insl
push
dec
jo
jmp
push
aam
push
xchg
inc
or
sarl
test
sub
in
loope
stos
iret
adc
rclb
sahf
enter
mov
mull
push
data16
xchg
xchg
pop
mov
movaps
bound
imul
out
xchg
icebp
out
or
adc
stc
and
xchg
pop
cli
mov
and
adc
cmpsb
push
adc
adc
add
shr
in
push
into
add
or
xchg
fnstcw
fimull
mov
ret
shll
inc
mov
inc
mov
lret
inc
pop
fildll
lods
das
xchg
cli
and
nop
pop
aad
cmc
push
add
mov
loopne
and
adc
imul
pop
mov
in
xor
in
cmpsl
fiaddl
ss
sbb
cs
fwait
test
jns
push
ret
cwtl
push
adc
test
jb
adc
xchg
adc
pop
mov
mov
cmp
xor
lahf
lds
mov
movsb
cmpsl
jnp
or
test
test
outsl
pop
lret
aam
outsb
cwtl
xor
or
rcll
fcmovnb
pusha
flds
mov
mov
add
loope
mov
stos
cmp
jns
cmp
or
aaa
popa
xchg
xor
cwtl
scas
test
dec
pop
stos
and
test
cmp
testb
enter
and
ror
add
ficomps
xchg
push
in
inc
incl
sbb
loopne
xchg
push
xlat
ret
addr16
aaa
jecxz
int
mov
xchg
xchg
movsl
xchg
cmpsb
out
loop
cwtl
js
test
testb
push
mov
adc
rorb
sahf
iret
pop
rol
xchg
insl
fld
repnz
add
ds
jmp
jmp
rclb
ds
dec
xor
ss
sahf
push
dec
mov
repz
push
sbb
shl
out
jmp
jmp
mov
movl
add
and
ret
mov
hlt
xor
jle
or
mov
inc
dec
add
xchg
or
jne
fcomps
inc
sub
xlat
stos
pop
fdivrl
sbb
xchg
xor
scas
pop
xchg
pop
lods
mov
xor
and
inc
mov
fwait
pop
shrl
imul
lock
xchg
push
cmp
hlt
add
dec
cli
shr
mov
fbstp
enter
mov
hlt
sbb
pusha
xchg
fcom
sbb
notb
icebp
repz
and
adc
sbb
insl
ljmp
lahf
dec
data16
cmpsb
jp
jno
lock
pusha
sbb
pop
mov
mov
pop
and
xor
mov
and
sbb
xchg
add
fs
cmpsl
xchg
cli
pop
das
push
xchg
popa
push
jns
out
adc
push
adc
andb
fwait
insb
aaa
test
cltd
mov
in
mov
lret
loop
jb
out
adc
pop
cs
mov
push
int3
in
sbb
adc
aad
cmp
push
fwait
lcall
cmp
in
adc
test
cmc
jg
insb
sub
ljmp
cld
call
pop
add
cmp
movsl
lock
sbb
sbb
mov
orl
mov
mov
adc
dec
pop
jne
mov
int3
xchg
into
ja
and
xchg
push
das
jg
inc
out
push
call
bound
sbb
xchg
sahf
fcmove
sbb
xor
dec
jle
sub
and
inc
cmp
push
ret
push
mov
rorl
mov
add
dec
ds
jg
add
dec
nop
jmp
push
loope
xor
mov
mov
movsl
clc
loope
sub
dec
xchg
sahf
jae
sub
fiaddl
inc
das
shrb
leave
jb
nop
add
loop
fnstcw
mov
pop
popf
cwtl
test
mov
and
cmpsb
inc
lods
jmp
loopew
pushf
shlb
lcall
mov
xor
fwait
inc
mov
in
enter
fsubr
sbb
shrb
mov
out
jmp
fs
inc
out
ljmp
sub
pushf
jnp
test
inc
inc
push
mov
xchg
pushf
cli
loope
sarl
push
jg
lock
clc
push
hlt
adc
jge
inc
mov
adc
mov
out
mov
sub
mov
outsl
xor
xchg
mov
rolb
in
not
leave
das
incl
je
rcll
in
and
cmp
addb
imul
add
cmpsb
sahf
mov
mov
scas
and
lds
adc
sbb
sub
pop
les
adc
hlt
inc
loop
and
test
xor
mov
std
jl
inc
push
int3
inc
and
xor
int
or
pop
xor
outsb
repz
xor
or
dec
into
xchg
jae
adc
cmp
jge
fiaddl
out
add
js
je
nop
cmp
cmp
mov
jg
dec
xor
and
pushf
sbb
cmp
pop
adc
ss
jle
insb
mov
shll
arpl
and
cmp
cwtl
xchg
jg
pop
mov
mov
repz
mov
addb
xor
ds
aam
dec
jp
mov
xchg
mov
test
inc
cltd
mov
test
movsl
insb
std
push
pushf
data16
cli
mov
mov
fbld
mov
and
cmpsl
jae
test
mov
cmp
sub
outsb
mov
testl
sub
test
aam
movsb
dec
push
cli
and
sub
xor
clc
je
or
ret
ret
inc
adcb
mov
pop
dec
pop
sbb
xchg
add
push
fnstcw
scas
dec
lods
push
incl
sub
mov
sbb
push
jge
in
into
pop
hlt
cmpsb
scas
fwait
js
pop
pop
mov
shl
mov
jbe
call
fdivl
in
adc
clc
add
cmp
inc
in
call
pusha
fistps
dec
mov
or
inc
sub
jno
in
mov
xchg
lcall
enter
cli
and
sub
cmp
imul
pushf
repz
invd
lret
add
jle
pop
loope
jge
sbb
pop
je
int
add
cs
jae
popf
mov
dec
sub
sbb
sti
ds
xchg
pusha
fwait
in
push
shll
pop
add
insl
cmp
sub
sbb
push
in
jns
testl
push
ja
out
dec
xchg
push
jb
sbb
mull
add
push
adc
divl
test
or
pop
mov
or
sahf
push
inc
mov
xlat
aad
cmp
pop
cld
sub
cmp
lock
aas
ficompl
out
dec
lods
sbbl
and
push
dec
and
sub
mov
push
js
inc
mov
mov
rolb
cmp
xchg
sbb
fnsave
rcr
test
shlb
mov
nop
mov
inc
fwait
cmp
aaa
pop
out
sub
gs
sub
iret
adc
dec
dec
xchg
jns
jbe
and
mov
je,pt
mov
movsl
sbb
inc
dec
pop
sbb
push
sub
mov
js
inc
cwtl
popa
mov
cltd
lcall
out
xlat
cld
mov
fisttpll
sub
or
imul
stos
pop
sarl
mov
or
repz
imul
lds
movsb
outsb
std
lods
inc
jae
shr
mov
pop
outsb
cmp
decb
cmp
aaa
int3
push
int3
rcll
call
adc
scas
testb
ljmp
inc
sub
inc
or
add
push
jbe
push
and
enter
test
mov
test
fisttpl
stos
push
and
ja
cltd
and
jno
icebp
xor
fdivs
sbb
sub
xor
cltd
mov
xchg
dec
mov
sbb
das
int3
pop
mov
pop
push
adc
jo
in
cmc
cmp
popa
in
clc
cmp
faddl
add
xchg
push
xchg
pop
imul
push
sbb
or
mov
xchg
push
lret
leave
inc
inc
and
or
jnp
out
xor
lods
pushf
fs
subl
pop
push
xor
mov
hlt
jg
int3
or
cld
iret
jo
jns
bound
fcomps
xchg
sbb
and
or
pusha
inc
adc
mov
ss
stos
push
inc
push
rorl
in
sahf
inc
sbb
cld
cmpsb
stos
icebp
mov
jecxz
imul
les
sbb
sub
push
decb
testb
pop
mov
ss
sub
ss
or
mov
pop
push
mov
mov
fs
data16
dec
imul
dec
jmp
das
aam
cmc
pushf
inc
call
cmp
test
iret
mov
sahf
scas
mov
pop
orw
iret
jo
popf
push
repz
sti
in
push
jbe
dec
dec
mov
or
cld
push
xchg
push
shrl
ja
addl
add
fdivrs
pop
xchg
cmp
xor
lock
and
or
sarb
fstl
sbb
and
xor
xchg
sub
hlt
lcall
jp
xrelease
sbb
cmp
inc
into
mov
mov
test
lahf
icebp
dec
aaa
daa
mov
mov
jp
add
pop
push
push
mov
cmp
mov
mov
sbb
je
dec
test
inc
add
xor
cld
cmp
adc
mov
pop
cmp
cltd
pop
mov
out
mov
cmp
or
xchg
cmpsb
aaa
outsl
add
cmpsb
mov
es
and
dec
mov
xor
add
pushf
imul
push
push
jecxz
push
jns
pop
dec
test
gs
mov
decl
loopne
pop
in
mov
popf
add
push
repnz
es
mov
decb
ss
test
loope
xchg
pop
shll
call
push
and
lret
imul
fbstp
fidivrs
out
out
inc
adc
cmpsl
in
fiadds
fsubl
std
jge
insl
jge
js
jns
pop
ljmp
cld
mov
fists
enter
pop
lret
xchg
mov
xchg
push
testb
jbe
and
mov
add
lea
fstpl
sbb
stc
mov
jp
cmovae
lock
loopne
jb
inc
pop
scas
orb
mov
mov
in
nop
dec
loope
jecxz
in
adc
push
xchg
inc
add
xchg
xor
ret
sbb
fsubr
dec
push
and
enter
inc
sarb
cmp
fldt
insl
je
xor
jp
mov
dec
add
insl
or
jae
sub
adc
rcrb
cmp
rorb
ret
addb
repnz
mov
into
mov
or
ljmp
fidivl
push
xor
mov
xchg
sub
aam
mov
sub
adc
xchg
mov
xor
mov
dec
sti
and
fadd
jno
in
gs
popa
mov
out
test
dec
sbb
add
jo
mov
je
das
xor
mul
ja
fistpl
jne
pop
pop
and
ficoml
lret
jns
int
enter
cs
jo
mov
das
addb
or
negb
aam
xchg
cltd
mov
cmpsl
in
icebp
xor
ja
and
adc
lock
lcall
lds
call
cmpb
mov
mov
xchg
inc
sub
ds
je
inc
push
mov
and
sbb
or
popa
xchg
mov
repnz
push
pop
fisubrs
sub
push
sbb
mov
or
aaa
stc
test
pop
stos
mov
xchg
add
aad
push
imul
fwait
mov
sub
add
pop
push
cmp
lds
sub
ret
jae
fcmove
jle
pusha
arpl
pop
mov
push
fsubrl
sarl
shlb
mov
mov
or
xchg
mov
ror
push
rcrl
mov
xor
cli
loope
pop
mov
lock
dec
push
mov
jle
jbe
arpl
imul
pop
mov
push
mov
xor
sub
cli
xchg
inc
aaa
mov
jp
cvtpi2ps
es
in
sbb
es
adc
cmp
rorb
pop
loop
mov
add
setle
dec
xchg
mov
inc
loop
or
inc
movsb
test
ret
mov
add
loopne
mov
push
lock
aaa
xor
cmpsl
adc
mov
and
mov
scas
lock
adc
push
mov
rorl
lahf
sub
jge
hlt
pushf
dec
sbb
jo
pop
scas
div
adc
shrb
xor
jle
jbe
inc
stos
repnz
mov
call
mov
test
xor
dec
cs
scas
cmp
aas
ljmp
add
push
add
xchg
test
inc
sub
nop
jbe
jne
rcll
adc
sahf
and
push
ret
dec
lods
je
js
and
and
ja
lahf
mov
iret
movsb
aas
mov
adc
cli
test
mov
pop
aas
cmc
add
shll
xlat
lahf
mov
out
mov
jnp
sahf
or
aam
aas
leave
test
mov
sbb
addr16
pop
jg
or
push
mov
clc
pop
xchg
ret
mov
ja
imul
in
shrb
adc
pop
fistpll
sub
push
dec
mov
inc
shl
cmp
cmp
push
cwtl
or
xor
into
sbb
stos
mov
jb
es
popf
sti
jmp
fdivrl
pop
outsb
jae
in
push
push
scas
ljmp
push
repnz
flds
lds
cmpsb
bound
xor
orl
pavgw
push
jns
pop
dec
in
imull
xlat
or
imul
jnp
aaa
xor
dec
cltd
loope
in
xor
dec
and
lods
into
lds
test
fists
and
iret
sub
and
daa
stos
rcrb
pop
adc
xor
addr16
cmpsb
shll
or
mov
clc
adc
xor
sub
ror
sub
insl
xchg
fdivs
cmp
aad
daa
cwtl
fstpl
mov
subl
xchg
push
or
icebp
mov
mov
push
xchg
loopne
scas
pushf
sbb
scas
hlt
xchg
shlb
xor
fwait
cmc
pushf
outsb
sub
pusha
int3
add
sub
mov
mov
andl
lcall
push
jle
aad
decl
xlat
lret
jb
aaa
push
call
dec
cmp
adc
std
dec
lods
inc
dec
out
cmpsb
mov
adc
jl
imul
pop
or
xor
cmpsb
jg
pop
jmp
clc
xchg
pop
sub
jo
arpl
dec
pop
fwait
lret
jmp
cld
leave
bound
mov
lds
xlat
orl
xor
mov
rorl
sub
mov
pop
outsl
lock
push
inc
insl
inc
in
fiadds
or
sub
scas
ja
jno
jae
popa
movhps
mov
push
xor
dec
adc
insb
ljmp
jbe
sub
mov
js
xorl
pop
inc
cmc
imull
mov
xchg
sahf
mov
js
dec
test
aas
pop
sub
and
mov
aam
xchg
aam
xchg
push
inc
and
cmc
insl
out
push
ss
mov
sbb
cmp
movsb
or
jge
fistps
pop
push
ret
push
cmpsl
testl
mov
ss
fwait
add
sub
aaa
pop
mov
mov
add
outsl
and
outsb
and
ret
int
stos
and
jne
cld
mov
inc
std
dec
xchg
shl
gs
and
aam
inc
int
xlat
mov
in
or
jo
cmp
pminub
mov
arpl
jl
pop
scas
mov
push
rcrl
lcall
in
lods
repnz
test
stc
xor
pushl
movsb
outsl
es
ja
push
js
in
dec
jne
inc
and
fcmovne
lock
sbb
bound
repz
pop
sarb
aaa
xchg
jns
push
aaa
mov
test
lods
jmp
xorb
incl
mov
mov
mov
mov
daa
sahf
std
fwait
push
mov
mov
jmp
subb
inc
cmp
je
popf
xchg
pop
roll
aaa
adc
hlt
xor
xchg
lret
insb
aad
pop
sub
mov
dec
sub
fs
lahf
rcr
hlt
xchg
imul
aad
cmp
cld
xor
and
into
movsb
fcom
subl
pop
in
or
out
rcrb
jl
inc
or
jge
mov
cld
sub
in
cmp
sar
shlb
gs
call
mov
fdivrp
xor
ds
xor
inc
ret
in
imul
ss
cmpsb
add
call
cmp
pop
lret
rcl
jle
js
out
add
stos
mov
bound
mov
cmp
xor
mov
pop
test
loopne
push
xchg
mov
and
int3
sub
fldt
mov
loopne
or
mov
fnstsw
insl
fcmovu
cli
sub
xchg
fisttpll
aad
mov
sbbb
xchg
fstpt
xchg
push
int
mov
aaa
or
in
bound
sub
or
rol
std
repnz
add
aas
stc
and
daa
mov
pushf
push
ds
jne
and
add
scas
sbb
cmp
in
cmp
imul
je
lret
add
shrl
pop
lcall
sub
fisubs
repz
fscale
jp
adc
or
in
rclb
add
iret
mov
shrl
andb
sti
pop
sbb
pop
pop
js
sbb
jp
ljmp
sbb
andb
mov
nop
into
adc
dec
mov
add
push
xchg
sub
dec
push
push
pop
jo
dec
lret
inc
stos
mov
sahf
adc
sub
or
or
add
jg
sub
jae
cmp
bound
sbb
push
pop
icebp
cld
sbb
popa
jnp
lcall
cli
xchg
xchg
push
rcrl
aad
testl
rcrb
lock
std
sbb
sub
inc
lds
push
pop
mov
jns
sub
mov
mov
mov
sub
in
jl
mov
js
daa
test
test
push
xchg
cld
minps
rcrb
xchg
xchg
fdivrs
sub
sti
inc
test
fmuls
inc
xor
mov
sarb
sbb
inc
imull
outsl
sub
clc
jne
das
and
mov
sbb
push
or
std
imul
cmp
jl
imul
inc
and
lcall
dec
ds
sti
mov
das
ret
mov
mov
bound
icebp
jle
sub
push
mov
adc
ss
stos
dec
adc
pushf
popf
into
in
ss
push
mov
mov
pop
jno
imul
je
pop
pop
pop
insb
stos
lret
mov
fsts
mov
pop
xor
pop
xchg
xor
int3
mov
mov
sbb
mov
add
push
jp
in
xchg
popa
add
jecxz
out
mov
pop
cmp
leave
mov
jle
out
sub
aad
jge
out
lock
rdmsr
adc
pushf
je
push
mov
add
mov
aaa
dec
adc
jecxz
es
rsqrtps
mov
cli
mov
jmp
xor
sub
rorb
rorl
inc
xchg
out
pusha
into
push
aad
add
jno
push
shlb
mov
cmpb
add
clc
testb
adc
mov
jae
loop
aaa
inc
arpl
xchg
dec
out
insb
xchg
jg
mov
cs
ret
push
xlat
iret
or
int3
pusha
mov
mov
push
dec
or
xchg
and
xorb
dec
xchg
mov
inc
orb
and
jl
xor
sub
lock
std
jb
mov
ds
lods
inc
inc
rcrb
ja
xchg
xchg
xchg
fsts
lea
nop
xor
lret
and
inc
dec
insl
pop
sbb
ss
out
pop
jne
dec
lock
into
lret
pushf
mov
in
push
lcall
das
and
xchg
push
xchg
or
adc
mov
fs
cmp
popf
add
int
flds
dec
mov
loope
into
xchg
ljmp
mov
loopne
pop
out
fstl
mov
xchg
fistpll
sbb
ret
dec
das
sbb
stos
sub
jp
adc
or
jmp
dec
inc
out
psllq
andb
and
fmul
sub
ret
xchg
mov
push
push
cmp
into
adc
dec
gs
lods
sub
sub
les
inc
data16
test
sub
std
lds
push
cmc
xor
mov
addr16
mov
cmp
ss
sbb
push
sahf
adc
imul
sub
cwtl
xlat
push
cltd
xchg
ret
pop
push
and
and
xchg
mov
not
lods
imul
outsl
loopne
jmp
jmp
ss
jl
ds
sbbl
sbb
sub
pop
lcall
push
loop
jecxz
es
and
std
call
and
inc
pop
call
fwait
push
pop
xor
pop
js
stc
push
xor
movsl
out
dec
mov
push
dec
sti
jmp
dec
sbbl
xor
popa
inc
test
enter
pushf
inc
xor
sahf
loope
sub
inc
or
aaa
js
vucomisd
add
lods
aam
inc
js
cmp
mov
pop
xor
xchg
das
lds
xchg
mov
ds
cltd
aam
int
and
imul
aaa
rorl
pop
mov
xlat
mov
lods
lret
popf
leave
sub
test
and
inc
ds
adc
jl
push
imul
adc
test
loope
fidivrs
fwait
out
lock
andb
xor
xor
cld
inc
into
jns
aam
adc
jecxz
jp
fisubl
outsl
xor
fucomip
xchg
popa
scas
inc
loop
jp
jecxz
ret
cmp
js
lret
push
mov
mov
mov
inc
ja
adc
cmp
addr16
inc
fcom
xchg
insl
notb
adc
iret
inc
aam
stos
divb
jo
mov
int
lret
sahf
mov
xchg
dec
in
fsubrl
push
xchg
idivl
mov
inc
push
aam
dec
mov
stos
in
leave
push
inc
mov
out
rcrl
push
outsl
call
es
inc
xor
adc
jg
pop
push
xchg
imul
adc
dec
mov
dec
test
cmp
xor
ffreep
jns
dec
incb
cli
add
std
cmp
out
loopne
icebp
dec
or
or
cwtl
shll
aaa
cmp
std
mov
in
inc
es
mov
mov
inc
xchg
push
sti
push
in
loope
dec
jle
jns
out
pop
jb
mov
test
scas
jae
or
andb
xchg
loope
mov
lea
and
test
mov
not
push
scas
mov
ret
adc
fdivrl
xchg
aad
jmp
cli
mulb
mov
sub
add
jmp
push
aaa
scas
out
idivl
add
jbe
or
xchg
fstpt
mov
ret
xor
jno
mov
fdivl
aad
push
gs
xor
daa
test
notl
scas
stos
mov
fcmovnu
mov
push
mov
add
test
in
cs
add
ficompl
movsb
xchg
dec
fcomp
hlt
jb
lods
adc
mov
iret
aam
sbb
hlt
stos
inc
jnp
xchg
mov
inc
dec
mull
mov
subb
mov
mov
or
fsts
ljmp
js
sub
or
lret
mov
mov
mov
cmpsl
inc
mov
mov
jp
mov
scas
adc
icebp
sbb
test
xor
pusha
fistps
sub
rolb
xchg
dec
pop
loope
inc
add
sub
pop
xchg
insl
push
pop
mov
repz
mov
mul
mov
iret
decl
lock
dec
xchg
jle
cmc
dec
or
xchg
daa
in
push
cmp
es
push
lea
out
bound
enter
imul
add
cld
mov
jno
or
clc
xchg
add
push
and
addr16
inc
repz
ret
loope
jae
shr
inc
lcall
mull
out
aas
dec
cmp
add
mov
das
jmp
xchg
lret
test
xchg
jle
pop
call
imull
sbb
pop
dec
sbb
jb
iret
and
fiadds
scas
fnstenv
in
shr
mov
adc
out
or
sahf
cmc
push
roll
adc
out
hlt
int3
sbb
in
repz
pop
jnp
ret
mov
and
jle
shll
xlat
fsubrl
ss
sub
sub
and
mov
fisubrl
adc
pop
movsl
mov
mov
push
scas
dec
lods
push
dec
roll
push
mov
pop
jmp
nop
add
dec
mov
cld
stos
xor
div
pop
enter
inc
in
push
xchg
cmp
push
mov
insl
hlt
dec
cmc
test
sub
lock
mov
ret
inc
ds
es
push
pop
sbb
fadds
cltd
cmc
ficoml
adc
mov
sbb
mov
xor
lods
aad
jae
movsl
in
jle
stos
out
popa
inc
and
inc
cli
push
inc
out
sub
adc
push
xchg
cli
testb
jl
andb
roll
push
adc
movaps
sub
mov
mov
arpl
inc
rorl
adc
xor
adc
loopne
jb
fadds
test
hlt
push
icebp
add
push
sub
call
dec
fwait
xor
cmpsb
pop
ficoms
sbb
inc
shlb
and
clc
push
mov
cltd
popa
mov
mov
jns
repnz
push
ss
mov
pop
sarl
ljmp
or
scas
inc
push
pushf
fstl
loope
mov
jl
and
or
pop
std
insb
test
int
arpl
jp
mov
adc
cmp
jnp
jns
dec
xchg
out
data16
mov
clc
fs
push
lock
push
es
pop
sbb
xor
int3
mov
pusha
mov
adc
imul
aam
jae
out
pop
sarl
out
aaa
loope
jno
mov
and
arpl
pop
jnp
lea
sub
add
cmpsb
cmpsb
or
sub
test
push
ljmp
les
mov
and
xchg
lcall
dec
aam
mov
into
pusha
rolb
mov
cmc
push
std
in
push
jns
inc
das
sti
imul
inc
xorl
ja
mov
and
daa
scas
sub
pop
lock
or
repnz
mov
pop
mov
inc
mov
mov
dec
mov
add
xchg
fadd
jg
xor
lock
mov
mov
push
inc
inc
and
xchg
xchg
stos
xor
repz
repnz
aaa
mov
xabort
xor
in
test
jmp
xchg
mov
inc
int3
scas
dec
mov
lock
jp
jp
cmp
stos
in
je
loop
push
adc
adc
or
shl
pop
stos
xor
stos
aam
sbb
xchg
fwait
ret
push
sub
roll
pop
xor
mov
push
test
sub
mov
sub
test
ret
and
popf
and
stc
fstp
mov
lcall
jg
or
mov
cmp
push
into
les
aaa
hlt
addb
sbb
fadd
fucomp
pop
inc
mov
insl
push
mov
push
rcr
faddl
adc
icebp
mov
sub
add
mov
mov
mov
enter
mov
testl
xchg
lea
mov
inc
test
sarl
sbb
les
xchg
xchg
lahf
cmp
add
int
jp
test
ret
loopne
sub
push
shlb
dec
aas
jno
mov
jb
loop
fcmovnu
aam
pop
bound
pop
and
out
mov
cld
and
jp
add
cmp
outsb
sub
mov
jecxz
jb
dec
add
imulb
cld
bound
cmp
lret
pop
push
in
pop
lds
enter
mov
and
push
dec
cmp
push
push
push
dec
adc
mov
sub
outsl
xor
scas
aaa
pop
addl
sbb
enter
and
or
xlat
jno
push
push
test
mov
sbb
or
nop
imul
shll
pop
inc
cmpsl
and
jbe
pusha
push
cmp
jecxz
loopne
call
and
dec
movsl
sub
int
bound
ds
sub
and
aad
es
mov
push
enter
push
add
cli
mov
sti
std
popa
cmp
lea
sub
aam
jmp
cmp
scas
ja
pop
shl
dec
ja
or
jp
lock
scas
mov
sbb
cltd
jnp
jecxz
push
add
test
inc
jo
out
es
fistl
repz
loopne
jl
jo
cmpl
sarl
fucom
std
mov
pop
repnz
stc
ficoms
mov
mov
push
stos
clc
movsl
std
ret
inc
xrelease
dec
fildl
jbe
or
and
mov
pop
movsb
xlat
ficoml
insl
xchg
cmpsb
xor
push
and
adc
inc
push
jb
aas
mov
cmpsb
inc
jno
int3
lahf
in
cmp
jmp
or
push
adc
jle
pop
int
push
cwtl
pop
in
and
dec
rorl
daa
mov
add
pop
call
mov
pop
and
std
cmp
subb
and
int3
xchg
mov
bound
js
ja
lea
gs
aam
pop
imul
pop
add
jb
out
pop
std
addr16
and
adc
pushf
imul
stos
adc
inc
out
pop
mov
jae
push
cmp
add
cmp
scas
in
and
cltd
lds
roll
xchg
lds
std
and
popf
push
add
or
inc
loop
inc
mov
bound
mov
mov
rcrl
dec
add
call
repz
jg
adc
aam
popa
xchg
cld
xchg
push
xchg
cltd
cmp
mov
xlat
adc
stos
inc
jecxz
mov
mov
add
add
incl
mov
xchg
fs
inc
dec
jg
mov
bound
mov
mov
jbe
jb
xchg
aaa
shr
push
push
jle
push
sub
mov
sub
shrl
inc
push
les
mov
int3
pop
test
dec
or
pop
and
push
and
inc
packuswb
cltd
or
dec
jae
and
lret
daa
insb
ret
je
or
lret
mov
les
push
iret
popf
sbb
nop
and
push
int3
mov
pop
aam
test
addl
out
cmp
jg
cmc
add
in
dec
and
clc
pop
adc
iret
nop
xchg
cmp
nop
xor
dec
mov
add
test
rolb
jl
jecxz
cmpsb
lods
out
dec
cmpsl
mov
cmp
jg
cmp
sub
ds
fwait
mov
add
jne
mov
jbe
shll
add
adc
es
dec
add
dec
mov
sub
mov
mov
rolw
icebp
jb
jo
adc
shrb
repnz
mov
jno
jge
ret
out
jne
mov
arpl
push
fldl
andb
addl
dec
xor
xor
xor
adc
dec
adc
xchg
push
adc
inc
out
movsl
mov
je
adc
mov
cmc
mov
cmpsl
fcompp
jmp
or
mov
std
inc
lret
fdivrs
inc
loopne
xor
lcall
fs
sub
loop
call
mov
pop
mov
or
adc
lahf
xor
jg
std
fistpl
push
sub
jo
push
popa
mov
sub
sub
pushf
mov
ror
dec
and
mov
je
rorb
cmp
or
jp
addr16
mov
and
popa
cmc
fisttpl
addr16
cld
in
clc
loope
inc
inc
test
imul
pop
ret
jns
pop
adc
jae
in
lock
clc
or
imul
add
call
shlb
pop
mov
and
push
xor
lahf
daa
cmp
mov
sti
dec
xchg
mov
sub
push
out
pop
popa
ljmp
adc
jns
add
and
movsb
push
in
mov
mov
out
push
jecxz
shlb
shr
test
icebp
rol
outsl
add
add
inc
jle
add
add
xor
mov
not
in
data16
xchg
loope
pop
inc
test
push
test
jp
inc
mov
or
and
inc
hlt
js
cmp
pop
std
pop
insl
in
sbb
in
mov
lods
xchg
stc
push
stc
mov
adc
xlat
add
dec
cmp
out
insl
add
push
pop
fsubs
or
fistpll
pop
dec
mov
inc
ja
jle
mov
jb
das
add
inc
and
nop
inc
sbb
jb
fwait
mov
pop
push
adcb
mov
jo
pop
movsb
pop
inc
mov
and
mov
push
ljmp
cmp
dec
sub
jecxz
cmp
adc
pusha
sbb
insl
lret
fwait
and
std
test
shrl
insl
leave
sbb
xchg
mov
gs
out
add
cmp
fcompl
fcoms
xlat
jp
lds
out
stos
fwait
add
fbld
div
mov
push
push
pop
lock
dec
arpl
addr16
mov
clc
inc
mov
inc
ss
xchg
add
out
sbb
je
mov
and
add
inc
add
gs
xchg
out
in
stos
lds
fs
or
daa
push
inc
push
adc
test
adc
add
mov
imul
out
sub
int
mov
lds
rcr
sahf
mov
rorb
ficomps
fwait
je
jge
push
insl
lahf
adc
mov
mov
ljmp
or
inc
in
xor
lcall
push
mov
rdmsr
xchg
mov
mov
stos
dec
sbb
cwtl
imul
adc
mov
lahf
mov
pop
adc
mov
cld
push
rolb
inc
xchg
or
pop
adc
mov
mov
mov
xchg
pop
mov
adcb
lahf
fildl
jp
cltd
hlt
jp
mov
mov
test
addb
push
mov
dec
xor
and
pop
negl
imul
les
repz
inc
inc
jo
es
jbe
add
push
add
add
mov
sbb
ret
and
jmp
xchg
push
call
repz
repnz
inc
lods
xchg
mov
push
scas
pop
je
nop
cld
in
mov
ja
jp
jnp
adc
test
lock
mov
jp
xor
testl
pop
loopne
lahf
push
call
add
dec
adc
fisubs
xor
inc
mov
adc
clc
xchg
test
lret
insb
iret
add
repnz
mov
movsb
in
cmpsb
insb
loop
dec
add
fidivs
pusha
inc
or
repnz
pop
jnp
inc
mov
rcrb
adc
subl
loope
xchg
push
push
shll
call
xchg
dec
push
pop
mov
loopne
adc
iret
out
jge
mov
out
cmc
in
test
xchg
rcrb
mov
clc
aad
inc
movsb
dec
pusha
in
jnp
shlb
and
sahf
jmp
or
cld
shll
pushf
add
inc
adc
jns
cltd
push
insb
and
push
pop
lods
daa
or
lods
sbb
xchg
cmp
jle
mov
cmpsb
jp
add
lock
imul
shl
repnz
jno
and
push
mov
mov
jne
lods
cli
mov
movsb
repnz
ss
shll
shll
icebp
add
inc
into
pop
push
je
push
jle
xlat
pop
jle
push
or
add
mov
mov
push
leave
sub
mov
push
xor
jp
push
std
adcl
sti
arpl
hlt
fwait
and
inc
jb
stc
aad
loop
xchg
jecxz
pushf
loope
cmp
or
bound
in
jbe
jbe
mov
sub
mov
mov
iret
mov
lret
loop
loope
aad
mov
mov
or
mov
mov
fildl
cld
out
mov
stos
push
leave
lods
xchg
sbb
std
lea
jne
adc
into
jne
out
into
cmpsl
pop
mov
ret
lret
loopne
lret
arpl
mov
cmp
shl
aaa
subb
or
inc
repz
cmp
mov
movsb
jp
cmp
xchg
and
or
cmp
push
incl
xchg
gs
test
cmpsb
cld
push
mov
sbb
test
add
sub
or
leave
adc
inc
repz
div
push
test
pusha
addb
push
pop
pushf
stc
and
xor
das
call
icebp
xchg
jns
jg
daa
leave
dec
cmp
mov
or
inc
xlat
fildll
inc
mov
and
popa
notl
sahf
int3
test
mov
in
inc
xchg
aam
cmp
rcrl
rcrb
push
mov
ja
cwtl
cmp
fdivrs
leave
sar
mov
jle
or
int3
inc
aas
inc
mov
in
xor
ss
xor
or
addr16
rolb
hlt
mov
in
inc
jnp
sbb
shl
and
mov
cli
sbb
jecxz
int
out
xchg
inc
add
outsb
out
xchg
xor
ja
lds
and
sbb
push
xor
mov
fcomps
adc
inc
ret
and
jbe
jbe
mov
mov
imul
jecxz
push
pop
dec
andl
in
lods
dec
stos
and
andl
xor
and
jae
mov
sarl
push
or
fisubs
mov
in
mov
test
in
jp
or
nop
icebp
in
js
xchg
xchg
pop
mov
movsb
cmp
dec
push
jae
xchg
insl
mov
ds
std
xor
scas
add
imul
xchg
pop
cmpsl
sbb
mov
push
push
das
dec
loope
xchg
mov
sarb
xor
adc
adc
xchg
out
sub
lods
imul
ror
testb
xchg
mov
push
rcrb
adc
sarl
mov
pop
push
aas
js
fildll
cmc
shll
int
in
gs
and
mov
inc
out
popl
scas
lock
cwtl
repnz
jge
pop
and
stc
push
and
mov
rcl
adc
and
cmpsb
dec
scas
push
push
mov
push
jge
inc
sub
or
cmp
rolb
mov
std
fnstcw
adc
jge
and
push
scas
adc
and
mov
out
cld
xor
fisubrl
hlt
mov
or
jne
jns
mov
jle
incb
or
fst
jnp
xor
mov
nop
pop
cltd
lret
jno
xor
pop
pop
mov
test
pop
lods
arpl
test
out
fidivl
movsb
xchg
pushf
mov
xlat
ja
jg
xor
mov
and
pop
std
es
mov
and
mov
rcr
inc
xchg
jmp
adc
mov
out
cmp
pop
mov
pop
orl
stos
push
xlat
sub
fwait
and
in
push
sub
movzbl
push
mov
mov
cmpsl
jns
lahf
int3
ja
cwtl
clc
movl
xchg
adc
push
add
push
loopne,pn
rcrl
inc
fnstenv
inc
lcall
sti
dec
out
shrb
mov
test
leave
popa
or
lea
test
std
pop
jl
sarl
jl
inc
cltd
cmpsl
and
hlt
push
repnz
int
pop
aad
xor
pop
stos
add
and
in
jns
mov
es
inc
and
and
dec
pop
movdqu
jmp
filds
gs
out
pop
or
sbb
addr16
jne
push
imull
add
in
adc
clc
inc
repnz
jecxz
mov
and
mov
les
push
shlb
bnd
jmp
mov
sub
and
xchg
stos
mov
xor
xor
dec
push
std
push
sub
xor
pop
rorb
addr16
insl
aad
xchg
inc
add
sbb
mov
and
lds
add
test
jmp
rcrl
adc
cli
shlb
dec
ss
push
adc
je
mov
data16
aam
push
movsl
outsl
cmpsl
jecxz
shrl
push
jne
rcll
bound
push
das
lret
or
fcmovnb
mov
mov
push
cli
loopne
loope
inc
xlat
fisttps
add
lahf
cli
inc
cs
xor
lret
add
lret
xor
pop
jp
in
stc
aam
enter
jmp
outsb
imul
js
rol
jmp
ret
pop
dec
loopne
xchg
ret
push
mov
xchg
loopne
jnp
ret
rol
das
outsb
stos
stos
iret
and
daa
jp
sarl
inc
pusha
imul
aas
add
sbb
push
pop
lea
test
movsl
jge
xchg
jle
cmp
sub
jns
lock
mov
dec
int
shll
inc
cmp
jecxz
adc
sbb
mov
int
xchg
push
inc
push
outsl
std
push
inc
icebp
or
loop
jp
pop
sahf
jno
jl
dec
jae
ret
mov
add
rcrb
pop
jecxz
mov
js
pop
sbb
lods
xchg
cmc
int
sbb
test
ds
mov
sbb
mov
cmp
test
addb
sbb
rorb
fidivs
cmp
ficoml
xchg
mov
fs
mov
mov
xchg
cmp
xor
test
jecxz
adc
les
xchg
lret
fwait
addr16
xchg
push
js
push
push
scas
push
mov
or
cwtl
xor
pop
push
sahf
mov
out
mov
aas
inc
pop
mov
mov
popf
addl
sub
test
dec
loopne
pop
mov
mov
cmp
dec
jo
cmpl
das
sub
add
insl
inc
mov
cs
mov
scas
push
inc
mov
push
add
test
repnz
mov
leave
push
inc
jp
ja
cli
sub
add
jno
pop
fadd
inc
in
xor
mov
loope
and
mov
cmp
popf
dec
pop
sbb
pop
mov
bound
mov
inc
lea
cmpl
adc
mov
lods
inc
xorb
in
sbb
mov
scas
lock
xor
mov
push
pop
push
dec
sti
cmp
dec
or
push
int
mov
and
pop
ljmp
mov
pushf
push
dec
pop
jge
outsl
jle
xchg
push
pop
js
in
pop
or
xchg
cmpsl
movsb
mov
subb
dec
lahf
jns
in
ret
outsb
sbb
jg
shrb
mov
leave
aam
mov
lods
sti
xor
lret
test
pop
lahf
fwait
add
into
and
or
inc
pop
dec
adc
lcall
sbb
call
ja
loop
js
sahf
insl
fidivrl
fwait
sub
jmp
mov
fwait
xor
mov
aaa
sbb
and
mov
movsb
pop
push
cli
push
mov
add
jmp
cli
jnp
xchg
pop
lods
dec
sub
mov
stc
gs
shll
jl
push
rorl
cs
jl
mov
cmp
mov
jp
add
test
loope
outsl
rolb
jne
fisubrs
add
mov
jmp
xchg
cmp
bound
test
jg
out
inc
mov
or
les
sarb
pop
clc
and
xchg
push
out
push
dec
push
cmp
and
icebp
push
nop
adc
cmp
cmp
pop
in
sbb
cs
scas
stc
lock
std
push
shrb
insl
cltd
xchg
mov
ds
bound
mov
push
jecxz
add
jle
lret
or
or
dec
pop
repz
push
stos
std
pop
sbbb
in
xchg
jge
pop
mov
shl
add
add
or
push
cmp
out
xor
dec
sub
mov
dec
xchg
jnp
xor
aad
jecxz
enter
cmp
add
aad
pop
jle
andl
dec
push
add
in
pushf
inc
push
daa
mov
pop
ljmp
add
aad
mov
dec
lcall
sub
or
jb
and
mov
inc
mov
xchg
not
jbe
cmc
jbe
data16
xchg
cmp
in
push
mov
xchg
jbe
lahf
into
ss
add
inc
or
sbb
mov
dec
push
add
clc
inc
cld
nop
aam
movsb
lea
push
inc
adc
inc
ss
push
mov
pusha
pop
into
lea
xchg
jle
push
das
inc
ror
out
jmp
cmp
jns
add
pop
das
test
loope
lods
push
dec
or
xchg
cmp
cwtl
flds
hlt
scas
push
loope
push
jb
xchg
cmp
mov
dec
push
sti
jecxz
jb
fcompl
lock
mov
stos
lret
mov
mov
outsl
or
or
fstpt
cwtl
mov
mov
les
jg
xchg
jae
push
pop
adc
daa
inc
sub
mov
sub
cmp
mov
jl
adc
mov
cmc
dec
cmp
out
mov
cmpsb
mov
out
and
push
loopne
add
xor
mov
repnz
or
push
leave
pop
lret
das
jecxz
jmp
jnp
incl
mov
pop
pop
push
and
decl
inc
mov
cmp
jl
sub
or
pop
xchg
andb
sbb
lods
inc
repz
add
mov
dec
or
push
bound
in
push
push
cwtl
xor
hlt
mov
sub
mov
stc
mov
movsl
lds
dec
dec
mov
fsubs
aas
adc
xor
mov
cmpsb
xchg
and
cmp
xchg
jmp
pop
into
aaa
add
xchg
clc
ficoml
icebp
cmpsb
fwait
push
inc
aam
cmpsb
add
jno
arpl
pop
xor
js
rol
leave
cmpl
cmp
arpl
push
cmc
or
fs
and
rcrl
sbb
jmp
sahf
mov
addl
adc
adc
sub
faddp
add
js
fidivs
adc
add
cmp
decl
push
cmpsl
adc
rorb
hlt
mov
mov
ds
inc
dec
dec
pop
lret
pop
sbb
dec
arpl
addb
add
dec
shrl
dec
push
icebp
jmp
bnd
test
mov
mov
nop
popa
lret
lods
mov
fcmovbe
push
push
add
adcl
out
xchg
push
xor
andl
and
jl
test
or
add
imul
xchg
in
adc
xchg
cmpsl
stos
iret
out
mov
movsl
addr16
or
sahf
mov
jmp
aam
imul
cvtps2pi
outsl
cld
inc
lock
shll
sbb
cld
sbb
adc
lods
loop
enter
nop
sub
negl
mov
mov
add
popa
subl
in
push
popf
xor
mov
je
or
xor
rsm
xchg
insb
pop
test
sbb
push
fwait
cmpsl
imul
jno
daa
xor
pop
shrb
mov
stos
lods
sbb
or
push
cmpsb
sahf
aad
xor
les
xchg
and
es
push
out
push
pop
push
lcall
dec
mov
mov
jmp
xor
mov
fbld
cmpl
or
xor
jne
jge
out
out
xlat
add
cmc
cmp
leave
clc
insl
push
mov
lret
xor
xchg
mov
movl
sti
jnp
pop
xchg
add
mov
push
icebp
push
outsb
push
in
aas
mov
jecxz
insl
or
gs
mov
xchg
sbb
ljmp
mov
jmp
xor
shlb
dec
pop
cmp
mov
add
mov
js
nop
repnz
lea
movsb
jb
lds
sbb
jo
imul
mov
xchg
stc
push
dec
clc
pop
cs
pop
stos
notb
pop
xor
insb
repz
mov
shrl
xchg
les
mov
addl
daa
mov
in
or
push
out
sbb
mov
fucom
test
jnp
mov
xor
rorb
xchg
pop
xor
inc
js
roll
andl
push
fwait
js
sahf
insl
push
ljmp
lock
adc
fidivrs
out
mov
loope
jae
add
ss
js
sti
pop
add
xor
adc
adc
sub
sub
je
in
daa
movsl
jp
sbb
arpl
pandn
pop
fdivl
fnstcw
fbstp
clc
aas
jnp
mov
mov
loopne
add
in
pop
jae
in
adc
pusha
xor
adc
pop
pop
push
jg
mov
dec
dec
in
cmc
out
mov
cltd
pop
jb
mov
loopne
fimuls
jbe
mov
and
addr16
popa
sub
pop
cld
rorb
js
xor
dec
jne
push
jle
inc
inc
roll
pop
mov
les
lcall
lret
xchg
xchg
out
xlat
lcall
icebp
jecxz
nop
out
xchg
mov
outsb
addr16
bound
out
dec
pop
mov
sbb
cmpb
out
add
orb
mov
jmp
adc
pop
cmp
sub
sbb
mov
jns
xchg
cltd
dec
mov
add
subb
lods
xor
mov
push
cmp
inc
xchg
lds
loop
or
push
lods
pushf
fwait
icebp
dec
push
adc
xor
pop
dec
sar
lds
push
mov
push
cmc
fs
scas
cmp
jle
cld
sbb
adc
and
in
push
std
add
cmp
push
lahf
pop
lds
jne
repnz
mov
mov
or
ljmp
loopne
dec
stc
loope
xchg
dec
jle
xor
outsl
clc
or
pusha
stos
lods
pop
jl
push
gs
in
mov
lods
adc
sub
ds
test
and
push
xor
dec
xor
lahf
mov
out
rdmsr
or
lods
mov
dec
xor
lods
gs
and
sbb
mov
std
sbb
jno
lds
test
ret
jns
ret
cmp
movsl
in
xor
nop
insb
mov
sbb
daa
sub
loope
sbbb
cmpsb
cwtl
xor
jg
outsb
cmp
movsb
mov
les
push
mov
xchg
and
xor
mov
mov
clc
imul
xor
jl
adc
pop
cli
jb
jb
push
aas
mov
cli
ds
xchg
push
test
inc
orb
xchg
mov
sarb
sbb
or
lret
in
or
jle
or
fstl
popa
into
or
lock
dec
inc
into
mov
scas
popf
jnp
cli
cmp
sbb
in
jecxz
xor
fildll
fcmovnu
add
jp
jb
adc
mov
xchg
aad
push
bound
in
adc
and
add
int3
add
test
mov
lcall
xchg
adc
jle
cmp
pop
mov
insl
arpl
popa
push
xor
cli
xor
ss
mov
push
push
jne
lods
outsb
ja
add
pop
xor
inc
lods
lods
mov
out
mov
and
mov
je
push
dec
or
xor
adc
push
xchg
mov
outsb
in
xchg
or
jo
or
out
jbe
rcrl
dec
xchg
fcomi
mov
lcall
inc
in
mov
jb
aas
lods
adc
mov
adc
pusha
in
das
je
mov
pushf
cs
sub
push
sbb
jecxz
test
rclb
enter
or
sahf
sub
push
adc
sbb
push
cmpsl
sbb
aas
mov
dec
mov
inc
sub
pop
mov
inc
jl
sbb
lods
fiaddl
ds
mov
test
lea
jmp
movsl
and
and
xchg
imul
out
std
mov
dec
pop
cmp
xchg
push
pop
jmp
pusha
pop
push
fimull
inc
xchg
hlt
jmp
adc
pop
std
adc
jo
add
jmp
sub
lret
insb
push
mov
xchg
cmp
shrb
sub
lret
xor
test
sub
scas
add
dec
fmull
rcrl
js
xchg
int
jle
out
cmp
lahf
mov
rol
xchg
loop
xchg
dec
jle
mov
sbb
pop
js
add
fld
mov
add
mov
or
fcompl
or
or
cmp
pop
into
test
inc
out
test
sti
repz
sbb
pusha
imul
dec
jle
push
add
adc
addb
mov
xchg
jl
pop
jl
clc
add
ret
pop
stos
pop
clc
mov
or
dec
lret
dec
movsb
xchg
add
loope
fcoml
inc
int3
jno
mov
mov
repz
das
push
test
cli
leave
inc
jno
xor
ss
push
jbe
lcall
xchg
lret
daa
adc
jle
pop
cmp
mov
sbb
out
out
mov
mov
shll
pop
dec
sahf
or
mov
out
aad
cmpb
std
fadds
lods
jge
fmull
clc
mov
xchg
or
pop
inc
sarl
movsb
sti
xor
mov
shll
fildl
out
cmp
in
push
sub
lods
stos
int
js
rorb
lahf
ret
lods
in
fisttps
or
and
xor
cli
push
pop
aas
sbb
call
ret
cmpsl
dec
mov
dec
aas
mov
dec
and
lock
mov
ljmp
add
add
jle
test
lret
mov
rorl
xor
movsl
adc
cmp
pop
jbe
push
mov
lret
lcall
and
jns
cmpsb
adc
adc
mov
adc
ret
aad
call
xchg
sbb
ljmp
sub
in
imul
or
inc
inc
pop
loope
test
dec
sti
mov
inc
push
push
mov
insl
jbe
pop
int
and
insb
push
lret
xor
fwait
movsb
cmp
sbb
js
mov
xchg
bound
insl
xchg
jl
jmp
push
mov
fistps
sub
mov
xchg
mov
popf
rorl
cmp
jns
fwait
jae
mov
inc
lret
lds
push
les
and
ss
fwait
push
inc
mov
dec
ss
xlat
insb
aam
dec
fdivrl
hlt
das
test
xchg
lret
add
fidivl
repz
frstor
sahf
mov
mov
xchg
cli
mov
out
mov
mov
cmp
sub
mov
jb
icebp
insl
jno
and
idivb
jne
xor
jecxz
xor
and
cmp
dec
jae
jns
sub
or
test
test
push
fwait
and
bound
ret
sbb
mov
xchg
mov
movsb
insl
inc
pop
dec
cmpsb
dec
adc
jmp
jne
pop
sub
repz
imull
dec
and
pop
call
cmp
leave
das
test
xchg
test
mov
mov
mov
and
mov
test
cmp
xlat
xlat
lret
mov
movsb
and
scas
ss
icebp
adcl
dec
icebp
push
insb
popa
xor
jns
push
dec
cmp
push
test
and
movsb
clc
sbb
popa
and
jo
xor
fbstp
inc
jle
cmp
into
mov
cli
push
stc
outsl
imul
and
push
lret
pop
clc
jb
dec
cmpsl
cmp
add
inc
in
outsl
movsl
adc
jecxz
mov
pusha
fisttpl
pop
negb
inc
loop
mov
cli
sub
mov
dec
aas
int3
push
movsb
fstps
push
sub
popa
je
adc
mov
out
shlb
cmpsl
add
and
addl
repnz
dec
in
lods
xor
jp
xor
xor
mov
jb
bound
inc
nop
in
push
push
sbb
push
pop
jmp
mov
xorb
ljmp
dec
xchg
sub
sbb
fldcw
shll
cmpl
xchg
mov
flds
jmp
in
xlat
jns
mov
mov
or
pop
xlat
aam
imul
adc
adc
xor
fstps
push
lret
dec
aad
jle
add
shlb
aad
mov
inc
pop
aam
push
lods
daa
push
sub
stc
mov
inc
jmp
sbb
test
pop
ss
push
dec
aam
or
js
ja
mov
les
icebp
push
aas
aaa
aas
dec
in
inc
lods
daa
dec
pop
out
ret
sub
aam
stos
dec
sub
xlat
rcr
shr
adc
in
popf
inc
jp
push
pop
ljmp
popf
iret
inc
xor
pop
xchg
cmpsb
sub
dec
out
clc
into
test
jo
rcr
lock
leave
cmpsb
xor
mov
daa
insb
or
adc
push
push
push
xor
adc
mov
cmp
shrb
dec
jge
clc
cmp
movsl
dec
iret
push
mov
stos
push
hlt
arpl
add
cltd
xchg
jl
sub
je
xchg
shr
es
gs
mov
daa
xor
xchg
jno
adc
dec
shll
and
div
popf
mov
push
push
sti
lock
xchg
pop
in
and
mov
int
fwait
push
icebp
sahf
aam
adc
sbb
cld
fisubrs
ljmp
xchg
icebp
in
lret
hlt
jmp
mov
ficoml
dec
sahf
jmp
cmp
aaa
lods
stos
mov
mov
ret
sti
mov
data16
pop
push
lods
jae
or
lock
divl
inc
das
push
popa
es
mov
mov
push
orb
or
fisttpl
xor
jg
insb
push
add
repnz
sub
shll
out
dec
add
and
cmpl
int
repz
and
jp
idivl
sets
xchg
mov
andb
pop
jmp
inc
adc
inc
or
sbb
je
mov
sbb
adc
xchg
jns
dec
repnz
dec
lret
sub
cmpb
lahf
clc
in
jns
pushf
xor
stc
lods
mov
inc
pop
push
mov
push
jp
pop
outsl
mov
cmc
scas
xchg
scas
bound
sti
ficompl
add
mov
daa
mov
imul
mov
es
in
sahf
fmul
daa
inc
aam
xor
jl
dec
sbb
mov
push
in
push
push
popl
cs
jae
loop
sbb
inc
and
cld
dec
jnp
cmp
or
stc
adc
cld
jle
push
fcom
shll
mov
or
data16
adc
mov
outsl
inc
sbb
inc
cmc
xchg
pop
adc
mov
inc
mov
add
jle
sub
popf
pop
inc
iret
jb
mov
lds
aaa
out
rcrl
mov
int3
lods
mov
outsl
xlat
sbb
jnp
mov
jle
dec
or
sqrtps
add
sub
xchg
dec
outsl
pop
xlat
cmp
pushf
cld
sbb
xchg
sub
mov
xor
out
xchg
std
js
dec
movsl
movsb
shrl
and
scas
and
cmp
pop
nop
cmc
cltd
fsubr
cld
add
fabs
mov
inc
fsubrl
pusha
add
jo
test
test
push
mov
or
mov
mov
insb
lods
ss
lcall
sbb
mov
leave
icebp
mov
in
and
jge
and
jge
or
cmp
out
push
sub
dec
mov
das
push
xchg
xchg
repnz
jp
fstl
adc
sbb
fbstp
fbld
dec
xlat
sub
div
push
xlat
popf
aas
cwtl
push
and
aaa
jle
jp
push
insl
adc
lds
inc
jecxz
insb
data16
adc
shrb
mov
cmpsl
rolb
inc
das
fcmovu
cmp
out
pop
push
mov
je
shlb
sbb
cmp
and
and
pop
push
dec
cs
int3
push
push
push
adc
mov
ja
repz
mov
je
mov
xor
cli
mov
movsb
add
subl
mov
mov
push
push
sbb
dec
outsl
jne
pusha
mov
sub
inc
bound
shrl
out
lods
jecxz
into
sbb
addr16
jae
lds
popa
mov
outsl
out
xor
cmp
xchg
xor
and
mov
cmp
add
sbb
addr16
arpl
adc
bound
xor
cmpsb
dec
add
xchg
push
ljmp
sub
and
or
and
sti
in
pop
lods
mov
pop
imul
sbb
rorl
jp
sahf
mov
in
or
shlb
out
or
shlb
jge
adc
mov
cmpsl
repz
mov
arpl
push
xor
sahf
cwtl
pop
sahf
in
mov
sbb
pop
lods
cs
adc
cld
push
mov
or
pushf
xlat
sub
loopne
adc
adc
ljmp
inc
jl
in
in
mov
or
test
and
mov
test
inc
xor
sub
loope,pt
rcrb
popf
jecxz
movsl
cld
sub
pop
dec
imul
pushf
mov
fstps
stos
icebp
inc
inc
out
adc
and
cwtl
or
rcrl
test
mov
cld
mov
pushf
add
push
fbstp
out
mov
in
and
and
popf
xchg
and
aaa
sbb
int3
cwtl
inc
arpl
in
push
imul
mov
add
inc
cmp
arpl
sarb
in
xor
outsl
inc
xchg
jp
ss
mov
pop
test
aas
inc
ficompl
adc
cltd
daa
pop
enter
dec
gs
xor
xchg
push
pop
aad
icebp
outsl
out
ret
xor
sub
pop
aam
jnp
cmp
pop
mov
lahf
mov
fists
inc
dec
sub
mov
xor
and
dec
add
or
and
push
jge
dec
jmp
jmp
in
xchg
cmp
pop
fwait
cmpsb
add
push
pop
or
and
inc
push
imul
adc
fsubs
lret
icebp
in
mov
shlb
int3
lret
mov
add
test
repz
add
jne
inc
jge
ret
sbb
std
dec
xor
popa
fwait
sarb
leave
fstpt
into
pop
jns
lods
dec
mov
xchg
ret
inc
inc
jecxz
cld
sub
frstor
test
xchg
iret
movsl
xor
pop
out
aad
in
sarl
inc
push
sub
test
ljmp
adc
mov
cli
or
pop
xchg
and
out
ss
shll
lds
in
js
mov
xchg
sbb
call
sub
jge
sub
mov
out
cwtl
lea
in
cmc
sub
icebp
mov
int
dec
dec
loop
xorb
es
add
sub
lea
fisubs
testb
aaa
push
pop
in
mov
xchg
mov
xchg
jmp
orl
and
in
pushf
pop
jb
enter
fwait
in
cli
pop
sbb
cmp
cli
inc
mov
add
inc
dec
push
cld
jecxz
mov
sar
and
jle
test
mov
ficomps
sub
fnsave
das
shrl
mov
or
and
xchg
or
das
in
jp
jl
push
call
int
xchg
or
mov
sub
cli
aas
movsb
or
inc
and
xchg
test
mov
or
adc
stc
mov
mov
xor
xor
jle
sbb
xor
clc
sub
sbb
fs
sub
cld
aas
cmp
repz
pop
or
int
shll
add
inc
out
in
into
xor
out
imul
sar
xchg
nop
push
jg
cmp
adc
push
mov
test
push
or
aad
iret
lods
insl
dec
inc
fidivrl
and
or
or
jae
scas
or
mov
inc
and
and
nop
ljmp
mov
adc
sub
push
fidivrl
stos
xor
and
sub
pop
daa
jecxz
fists
imul
iret
jnp
push
testb
test
loopne
push
and
cmp
xchg
mov
inc
ljmp
lock
daa
dec
xchg
icebp
xlat
lcall
popf
fwait
add
mov
cmp
mov
dec
imul
clc
addr16
or
pusha
sub
mov
mov
pop
sbb
loope
push
add
in
push
fsubrs
xchg
fmulp
pop
mov
lock
xor
jp
cmovno
fucomi
lcall
mov
repz
mov
mov
xlat
push
icebp
mov
push
movl
popf
or
inc
lods
mov
cwtl
push
mov
lahf
insl
mov
loope
int
adc
adc
lods
mov
inc
pop
mov
and
mov
jp
pop
flds
pushf
rorb
mov
idivl
jge
loopne
fistpl
dec
mov
jle
fsubr
add
mov
imul
push
jb
pop
iret
mov
test
faddl
pushf
or
js
mov
fs
xchg
mov
jmp
mov
out
pop
push
add
push
subl
add
xchg
sbb
mov
xchg
nop
int
sub
int3
pop
dec
push
cs
xor
iret
or
fidivs
adcb
push
dec
push
cmp
mov
repz
adc
pop
popa
out
dec
dec
pop
mov
push
stc
pusha
pop
in
cmp
idiv
outsb
dec
xchg
nop
jl
addr16
xchg
mov
push
push
or
mov
ret
xor
push
xchg
dec
sti
out
out
push
loopne
ds
jno
push
sub
adc
push
call
call
jno
dec
inc
adc
mov
pop
or
push
push
sub
cwtl
insb
cmc
or
imul
cwtl
jge
xor
mov
inc
cli
jg
ret
inc
sarl
in
jecxz
lahf
insl
xchg
xor
aaa
adc
push
lea
add
fstpt
xor
sub
or
sahf
das
mov
or
dec
arpl
cmp
and
test
mov
mov
cmp
inc
jge
xchg
dec
fwait
xor
ret
and
cltd
js
cmp
mov
xor
and
out
jp
xchg
orb
pop
xchg
into
es
sub
inc
add
cltd
push
sub
cwtl
mov
lret
decb
xchg
pop
movl
xor
jns
xchg
bound
ret
xor
inc
inc
sbb
mov
andl
fdivl
daa
stos
outsl
inc
dec
xlat
sub
test
cmp
dec
push
lods
push
stos
lahf
and
pop
or
adc
mov
mov
cld
dec
sbb
ret
movsb
nop
leave
mov
mov
cmp
popf
add
lahf
mov
push
pop
mov
mov
ss
push
pop
push
xchg
movsb
add
test
xor
mov
fstps
pop
lcall
push
push
hlt
push
and
daa
imul
pop
out
lods
orl
mov
out
add
push
cmp
or
push
sub
stc
sbb
mov
cmp
loope
and
rcr
addr16
mov
aaa
and
rcrb
out
arpl
jge
adc
jmp
cmp
adc
into
lcall
nop
mov
movsl
jno
cmp
cltd
fsubs
in
dec
mov
stos
shrb
loope
jl
hlt
sbb
arpl
icebp
sti
xor
cmp
js
mov
shll
cmpsb
mov
scas
dec
mov
roll
stos
add
int
push
data16
cld
jne
xchg
mov
in
sbb
lods
subb
mov
enter
mov
mov
mov
test
shr
pop
or
adc
mov
mov
xchg
sub
mov
sbb
cli
into
fnstcw
ljmp
mov
jl
int
test
fdivl
std
adc
xlat
inc
jecxz
faddp
cmp
cmp
xchg
movl
push
data16
enter
nop
push
lret
push
mov
xchg
mov
or
push
add
outsl
lcall
jno
fistpll
pusha
push
xor
outsb
pop
dec
jecxz
jmp
lret
xor
inc
mov
mov
mov
cmp
mov
lea
push
dec
rcl
int
pop
adc
inc
clc
mov
movsl
pusha
pop
dec
mov
push
cmp
test
mov
and
aas
cld
dec
push
pusha
mov
xchg
in
sbb
notb
bswap
aaa
jmp
jbe
sbb
sub
aad
hlt
gs
pop
div
stc
sbb
xlat
inc
into
mov
div
xor
ja
ficompl
jnp
cmp
pop
sahf
sbb
xchg
shrl
negb
or
mov
fadds
lahf
in
sub
jle
dec
cmp
into
push
cli
xor
movsb
dec
push
repnz
setg
mov
inc
push
pop
dec
or
jp
mov
int3
setb
les
fidivrl
dec
inc
sarb
in
fidivrs
ss
loope
subb
pop
leave
add
and
mov
data16
dec
mov
dec
pop
and
out
out
cmp
push
add
or
sub
inc
push
popf
adc
roll
out
es
xor
ds
add
dec
push
cs
es
sub
mov
cltd
or
jbe
mov
loopne
push
fiaddl
imul
mov
dec
mov
das
sbb
cmp
pop
leave
jl
ljmp
or
cwtl
cmp
cmp
mov
sub
dec
cld
sbb
lock
test
into
outsl
mov
mov
leave
xor
jp
loopne
add
lock
fdivrs
sbb
and
out
fnstsw
mov
popf
cmp
std
adc
jo
and
sub
cmpsl
inc
test
outsb
idiv
mov
and
jne
inc
jecxz
inc
adc
ret
cmp
in
mov
popa
cmc
fcoms
loop
daa
mov
mov
cmp
aaa
add
pop
dec
mov
sti
jp
adc
test
das
or
stos
inc
roll
xchg
loope
ret
imul
and
and
sub
jg
iret
mov
sub
pop
push
hlt
or
inc
push
mov
xor
repz
and
das
push
sbbl
inc
fistpl
jnp
mov
or
fld1
lret
add
js
and
les
sub
sbb
jl
mov
add
in
pop
mov
mov
mov
mov
xlat
testb
addr16
mov
xor
inc
mov
nop
push
xor
es
inc
pop
add
lcall
es
lods
stos
pop
sub
mov
out
jl
inc
dec
insl
sbb
data16
jp
into
xchg
stos
iret
loopne
enter
mov
mov
sbb
cmp
bound
sbb
in
mov
jle
mov
mov
push
and
movsb
ret
jo
add
repnz
insl
lahf
cmpl
jmp
fisttpll
add
pop
ds
cwtl
outsb
sub
ret
pop
sarb
ds
push
xor
stos
dec
js
jo
pop
aam
pop
inc
mov
jecxz
xor
daa
and
or
fadds
sti
and
xlat
rcrb
pop
dec
mov
nop
mov
cmpsl
adc
lock
mov
push
and
cltd
mov
std
mov
cmpsb
or
xor
fdiv
js
jbe
adc
xchg
pop
loope
mov
in
dec
jge
sub
fmul
outsl
daa
dec
dec
data16
lods
loopne
lret
and
add
or
sahf
push
out
mov
and
push
dec
ror
xchg
dec
repz
bound
jmp
loope
xchg
xor
cmp
ret
pop
rcl
fs
sbb
adc
leave
adcl
sbb
push
bound
pop
decb
stc
mov
jnp
call
mov
adc
and
pop
dec
insl
popw
testb
jbe
mov
cmp
sahf
sub
jle
xorl
rclb
cld
push
or
xchg
bound
rorl
push
adc
dec
mov
mov
into
clc
or
lds
les
jnp
lods
movl
jne
mov
cmc
push
push
inc
inc
push
mov
xor
mov
add
mov
xor
std
inc
jge
lret
mov
xchg
scas
push
jo
jge
xor
pop
ret
lcall
push
and
push
into
scas
dec
lret
hlt
insb
cmc
jmp
xchg
xor
mov
dec
xchg
lock
pop
adc
shlb
push
shrl
imul
mov
cmp
and
push
sbb
cmp
aad
jb
stos
stos
mov
scas
mov
test
cmpsl
add
test
movsb
cmp
sti
scas
mov
fiadds
xchg
pushf
and
rcrl
loop
ret
jnp
les
aad
dec
add
mov
dec
imul
pop
xchg
movsb
imul
pop
pop
mov
icebp
popf
mov
mov
leave
sbb
scas
dec
sbb
or
mov
hlt
outsl
push
xchg
mov
sbb
dec
xor
out
dec
cmp
inc
fcomip
inc
inc
inc
dec
in
test
aad
and
mov
xchg
cmpb
dec
lea
lret
add
mov
mov
add
add
mov
push
sub
lahf
xchg
lea
shrl
leave
js
pushl
sbb
ret
subl
aas
inc
divl
push
mov
or
mov
adc
sub
mov
sbb
aam
pop
push
fldenv
fdiv
std
movsl
mov
add
in
adc
je
cmpsl
cmc
test
pop
cld
test
jg
dec
xchg
pop
leave
xchg
insb
mov
test
sub
stos
xchg
repz
cmc
cmpsl
adc
rcll
dec
cli
movsb
testl
pop
fdivrs
mov
daa
out
or
mov
sbbl
sbb
mov
xor
jl
cltd
jp
pop
int
jno
inc
xor
repz
push
xchg
dec
mov
sub
scas
std
insb
into
mov
sbb
dec
ret
popa
inc
lock
ret
or
test
or
adc
and
xor
jmp
jecxz
aam
and
pop
add
sub
push
test
loopne
mov
xchg
in
xchg
sub
data16
or
cli
fmul
pop
xchg
xchg
add
mov
sar
scas
mov
rdmsr
incb
add
inc
jns
dec
sbb
sbb
jo
jae
mov
rorb
sbb
pop
out
add
bound
andl
dec
sub
mov
or
insb
jmp
dec
insb
out
adc
mov
out
jb
negl
xchg
outsb
mov
xchg
rorb
in
or
xchg
lcall
cli
andl
dec
iret
pop
outsb
popf
xchg
leave
js
jecxz
out
cmp
jp
pop
dec
sub
inc
inc
xor
xchg
and
popf
aaa
out
push
pop
repz
pop
int3
xchg
mov
adc
push
shl
adc
pop
test
xchg
inc
mov
xchg
mov
mov
icebp
test
or
mov
add
cmp
pop
scas
scas
dec
cmp
and
add
push
rcrl
repz
orl
faddl
fmull
sub
insl
sub
clc
sbb
sbb
in
sub
xchg
sub
loope
sbb
test
cmc
push
addr16
into
jmp
sbb
gs
test
enter
push
test
jp
xchg
lcall
mov
ret
ss
or
xchg
inc
dec
adc
pop
pusha
jmp
jle
jmp
push
xor
lock
test
mov
inc
lcall
test
or
sti
mov
lret
dec
add
cmp
punpckhdq
push
popa
dec
mov
shlb
mov
mov
fst
push
mov
mov
mov
jl
cli
call
rcrl
mov
iret
jle
loop
push
mov
pop
cmc
mov
push
push
popa
lock
std
mov
cmpsb
xlat
cli
xor
adc
movsb
mov
cmpsb
sub
hlt
cmp
loopne
not
fs
push
rcrl
addb
sub
dec
nop
and
lea
add
dec
sub
xchg
inc
mov
jecxz
cmpsb
inc
loop
mov
lds
jno
jb
adc
jecxz
mov
clc
xor
or
aad
xchg
jo
lahf
xor
movsb
cwtl
lds
in
jle
std
jp
xchg
hlt
sbb
ds
mov
cltd
push
int3
mov
sbb
mov
xchg
add
bound
adcl
mov
inc
add
ds
and
je
fmulp
xchg
jge
jbe
mov
bound
xchg
scas
nop
lcall
or
cmp
mov
dec
nop
clc
outsl
iret
cmpsb
add
sub
xchg
inc
inc
std
aad
and
jmp
insl
in
xchg
mov
into
outsb
mov
adc
inc
xchg
pop
inc
jnp
fs
subb
push
orb
sbb
imul
jno
movsb
inc
inc
mov
dec
pusha
and
imul
loope
dec
mov
leave
in
filds
cs
movsl
mov
iret
jg
lret
jmp
sbb
push
sarb
scas
add
mov
fisubrl
lock
push
mov
mov
push
sub
arpl
in
adc
cld
cltd
insl
push
out
cld
sbb
ds
xorl
mov
mov
sub
cmpsb
mov
xorb
push
jne
jg
mov
xor
cli
leave
imul
jmp
fnstsw
jbe
mov
lods
sub
mov
pop
push
cmpsl
inc
dec
mov
mov
adc
xchg
add
repz
push
idivl
lock
insl
sub
push
or
pop
xor
push
and
and
jo
int
pop
jmp
push
lds
lret
arpl
dec
mov
lods
cs
nop
add
xchg
push
mov
push
pop
lds
pop
inc
jge
add
or
jl
mov
pop
jmp
jmp
cwtl
and
push
add
xor
mov
push
fxch
sbb
inc
jg
mov
inc
pop
mov
push
int
and
shrl
fdivrl
fisttpl
cmc
or
scas
mov
jg,pt
inc
inc
ret
mov
aad
or
push
adc
cltd
mov
enter
jle
es
insl
daa
mov
call
leave
rcrb
xor
dec
leave
ret
xchg
and
mov
dec
iret
jns
outsb
add
lods
and
mov
rcrl
push
sar
bound
jp
pop
push
ljmp
aad
xor
xor
repz
stos
and
xchg
adc
out
mov
cmp
daa
rorl
dec
addr16
push
cs
dec
loop
shll
dec
test
cmp
push
out
rcrl
dec
outsb
xor
adc
push
or
lcall
sbb
xchg
xchg
pop
xor
aam
pop
int3
sahf
into
cld
scas
xor
pop
orb
mov
repz
dec
cmp
jge
xchg
pop
outsl
shrb
aad
dec
lcall
push
xchg
cmp
cli
add
std
sbb
inc
mov
test
stc
push
jns
rolb
stc
add
inc
push
inc
or
cmp
jne
pushf
pop
and
mov
sti
adcb
iret
fwait
xor
push
test
push
in
or
xor
andb
push
mov
int3
push
push
lods
jb
aam
dec
add
sbb
sbb
aaa
stos
lea
cmpsb
popl
dec
sub
dec
xor
jl
cli
imul
xchg
lahf
push
mull
les
cs
ds
adc
mov
hlt
mov
push
es
or
pop
imul
fs
lods
mov
js
inc
test
es
outsl
xchg
outsb
fistpl
nop
repnz
mov
and
data16
adc
pop
cmc
cmc
addr16
jb
or
inc
stc
cwtl
stos
xchg
mov
cld
inc
mov
sub
popf
xchg
std
mov
dec
sarb
adc
dec
not
dec
mov
xchg
sub
aam
inc
jecxz
cmc
or
add
movsl
xor
repz
dec
stos
sbb
push
iret
jnp
mov
adc
xor
aaa
lds
mov
loop
mov
bnd
xor
jge
mov
adc
adc
aam
and
imul
cwtl
inc
loop
int
or
test
mov
int3
or
fldcw
mov
fsubrl
insl
andl
inc
xchg
dec
lea
dec
icebp
loop
movsb
popf
ret
jno
pop
stos
cld
test
and
fstpl
pop
pusha
adc
in
or
ds
mov
loope
outsl
cmovnp
mov
sbb
sub
lock
test
nop
fdivs
dec
les
xlat
push
gs
xor
inc
hlt
jp
add
hlt
cs
xor
pop
push
add
adc
popa
push
adc
mov
aam
iret
dec
stos
jae
push
dec
ds
or
fistpl
xchg
lods
push
imul
dec
je
xchg
outsl
inc
out
sub
lahf
sbbl
jmp
jae
repz
xchg
or
jge,pn
shll
fidivrl
ss
inc
cmpsl
or
dec
push
sarl
pusha
xchg
mov
jl
cmc
les
mov
pop
enter
fiadds
scas
and
fcomip
clc
mov
outsb
sbb
cmc
movsl
rclb
mov
je
jl
cmc
mov
fwait
std
or
jecxz
cmp
ss
fstpt
cmp
dec
jl
imul
loop
pop
mov
push
pusha
add
enter
jl
and
xchg
push
jmp
cmp
jmp
sbb
mov
shl
or
and
dec
fmuls
or
or
xchg
lretw
inc
dec
dec
add
jp
jo
inc
stos
fimull
mov
and
mov
imul
rcll
repz
fs
aaa
nop
int
mov
cmp
stos
outsb
movsl
cld
and
addl
pushf
mov
je
cmp
push
sbb
cli
xor
add
mov
test
mov
jnp
fwait
mov
cmp
pop
jnp
imul
lock
adc
shlb
out
popa
decb
pop
fisubrs
lds
scas
out
test
aad
mov
sahf
fxch
clc
in
or
sbb
and
int
sbb
mov
inc
push
xchg
cltd
mov
int3
in
push
ret
fistpl
mov
add
repz
in
xor
imul
aam
sbb
mov
adcb
call
iret
mov
adc
mov
adc
test
clc
cmpl
call
in
pslld
imul
popa
sub
add
jae
push
in
dec
mov
dec
pop
jbe
daa
sti
out
or
roll
add
pushf
repnz
sti
out
add
stos
push
sub
ja
mov
pusha
xor
andl
lahf
xor
shrl
push
push
xor
jae
adc
mov
aas
out
dec
aaa
add
pop
stc
daa
ret
push
in
in
cmp
pop
mulb
insb
add
mov
sub
std
xchg
and
fs
push
ss
call
and
ds
sub
stc
out
scas
mov
and
dec
cmp
shrb
fnop
dec
push
std
mov
push
fldl
sbb
jg
mov
ss
mov
imul
lea
cltd
lods
jo
bound
inc
fisttpl
pop
pop
inc
repz
mov
jbe
gs
mov
sahf
mov
arpl
cmp
stos
or
movsl
sbb
sbb
and
or
jae
mov
mov
sahf
xchg
xor
pop
ret
test
lahf
mov
lock
push
mov
ud2
arpl
das
aaa
cld
or
cmp
jbe
xchg
inc
sbb
or
jne
rcrl
gs
stc
sbb
xor
mov
lea
dec
jae
and
and
and
aam
fdivl
add
mov
xor
clc
ds
fwait
lahf
push
gs
push
pop
lods
fwait
lcall
lods
icebp
sub
sbb
sbb
rcll
xor
push
adc
inc
xchg
cli
jg
push
repz
gs
aad
mov
out
and
mov
cld
push
or
gs
push
adc
mov
pop
mov
mov
gs
negb
mov
mov
aas
cmp
iret
push
xchg
andb
ret
sbb
xchg
fdivrp
mov
xorl
dec
xchg
inc
jl
jbe
cmpsb
stc
or
ficompl
jae
test
jmp
fwait
and
js
inc
jae
inc
sbb
into
int3
popf
cmp
out
pop
push
les
add
leave
pop
iret
jg
xor
dec
clc
lahf
xchg
sub
call
sub
sahf
xchg
inc
test
es
lods
dec
inc
int3
jns
das
sub
nop
pop
repnz
jnp
and
cmp
mov
or
mov
pop
mov
and
jg
add
pop
je
pop
jne
scas
push
in
mov
movsl
lcall
lods
sub
out
dec
fs
xor
cmp
mov
dec
in
dec
jl
mov
out
mov
jb
mov
rol
notb
cld
aam
ret
pop
sarl
dec
cmp
add
and
mov
lock
icebp
les
aad
out
mov
xor
jle
sbb
push
xor
cmp
rclb
or
data16
bnd
pop
pop
xlat
daa
mov
js
sbb
sti
jno
in
add
test
sti
stc
ret
jecxz
jne,pt
mov
call
inc
ret
push
aas
pop
push
shl
lea
dec
mov
jge
jno
insb
cmpsb
fiaddl
jecxz
clc
shl
jp
subb
out
jno
mov
push
mov
jle
cmovg
test
test
sub
stc
or
cs
daa
pushf
lahf
sub
shll
sub
push
pop
pop
movsb
xchg
mov
test
xchg
mov
and
push
cltd
pop
xchg
inc
stc
aam
sub
push
sub
addb
icebp
mov
mov
cmp
ret
mov
daa
or
inc
cwtl
dec
jns
sbb
jp
ficoms
and
iret
icebp
mov
repz
lcall
add
mov
insb
lret
data16
xor
add
in
sub
lret
jle
rcrb
stos
adc
jle
les
dec
mov
cmpsb
cmp
fsts
int3
mov
jg
cmp
sahf
push
mov
jno
add
nop
in
sbb
loopne
push
xchg
out
pop
daa
push
xchg
iret
jno
dec
or
cmp
push
setle
and
in
xlat
jns
fcomps
out
or
pop
mov
lods
mov
or
push
xchg
mov
fnstcw
in
mov
add
sub
push
aaa
fisubl
adc
mov
push
xchg
fstl
outsl
lock
mov
push
pop
inc
test
sahf
in
cltd
adc
xchg
lods
stc
xchg
mov
inc
sbb
lods
jns
mov
mov
mov
cmp
fcoms
or
adc
popf
js
std
mov
test
pop
out
xchg
cmp
ret
orl
shrl
dec
ja
mov
push
ja
mov
movsl
popf
test
imul
mov
fsts
jnp
insb
test
mov
out
insl
iret
or
mov
lcall
push
aad
repnz
mov
adc
inc
shll
mov
sbb
pushf
xchg
xchg
mov
loopne
pop
adc
pop
das
mov
mov
jle
lea
outsl
cmpsl
xor
testl
ret
loop
addr16
pushf
sbb
outsl
inc
loopne
in
fsub
inc
push
ja
into
sub
adc
lcall
push
leave
or
mov
inc
pop
xchg
and
mov
icebp
fsts
xor
inc
lods
ficompl
cmp
push
push
jo
sbb
fistl
add
cmp
aas
cmp
je
sarb
stos
push
cld
mov
fnstenv
das
stos
push
xor
mov
ror
ret
xor
lret
jg
adc
ja
jo
or
pop
je
xor
lahf
bound
cmc
push
cmpsl
and
dec
sub
push
iret
lea
adc
push
and
pusha
sub
mov
rolb
jns
adc
push
not
pop
fidivs
lods
lods
rcrb
xor
and
shl
pop
push
sbb
xchg
mov
je
pop
mov
lret
jno
lea
jae
xabort
mov
insl
mov
add
mov
add
insl
dec
mov
cmpl
scas
push
xor
and
cmp
testl
cli
fidivl
push
cli
call
lods
pop
in
sahf
cs
jmp
or
mov
mov
loop,pt
xchg
xorb
int3
pop
xor
addr16
loopne
enter
das
xchg
jmp
or
ja
xchg
mov
imul
cmp
sbb
jb
mov
popa
sti
out
fwait
test
mov
ds
lret
rclb
mov
mov
mov
jno
cwtl
into
jl
jo
loope
into
dec
repz
sbb
popa
test
push
jmp
rcl
fdivr
dec
mov
cmp
cwtl
dec
nop
sub
pop
hlt
add
popf
gs
adc
pop
and
lods
cmpsl
sarl
inc
lds
mov
jns
cmc
sub
in
add
cmc
push
cmc
cwtl
and
idivl
dec
mov
ds
mov
and
cmp
jbe
out
or
jns
out
jmp
cmp
mov
push
mov
add
adcb
sbbl
inc
push
xor
adc
or
out
xor
add
inc
ret
data16
out
lretw
or
scas
sbb
insl
mov
push
pop
icebp
fldenv
push
xchg
xor
fimull
sub
ss
cmp
push
dec
or
push
popf
ret
es
out
push
push
out
call
imul
pop
sbb
es
lock
or
jae
cmp
mov
dec
cmp
test
out
es
push
inc
sub
pusha
dec
lret
jo
lock
movups
push
cmp
xchg
das
test
xchg
cvtps2pi
sbb
mov
fcoms
jae
mov
mov
mov
ret
ret
outsb
inc
stos
lods
les
cld
pop
out
pop
ror
aam
push
and
sbb
or
inc
out
int3
lds
lret
in
imul
and
mov
lret
fnstsw
dec
pusha
jl
loop
test
pop
call
jo
or
ljmp
ja
fnsave
loop
jnp
popf
lret
sbb
xchg
scas
cmp
dec
shrb
fwait
dec
jl
add
adc
jmp
aad
inc
cmpsl
stos
jae
jb
xchg
rol
dec
mov
fbld
fldt
add
xchg
mov
sbb
test
mov
mov
iret
filds
pop
lahf
ljmp
jno
jnp
adc
xchg
sbb
jb
repz
add
and
adc
xor
mov
stc
dec
outsb
aaa
push
sub
mov
fsubr
add
or
rolb
adc
pop
jnp
sub
outsb
add
cmp
hlt
add
enter
andb
in
xor
xor
or
daa
ror
test
fcompl
lahf
mov
popa
movsl
enter
enter
je
mov
mov
mov
adc
cmp
scas
mov
test
xchg
repz
stos
bound
jmp
movl
mov
jbe
push
fwait
mov
or
inc
outsl
mov
mov
or
dec
pop
int
sub
or
ja
pusha
add
jge
insl
fdivrl
xor
pop
xor
ficoms
mov
in
push
idivb
aas
sahf
dec
rorb
jg
insb
arpl
std
loope
stc
dec
and
xor
push
cwtl
xchg
test
int
and
cli
sub
lea
adc
mov
mov
sbb
outsb
xchg
xchg
adc
movsl
insb
xorl
scas
push
fiaddl
xchg
out
addr16
xchg
iret
sub
xchg
add
pop
int
into
outsb
mov
sub
jmp
in
pop
lds
cwtl
out
add
adc
xchg
jb
call
jae
cmc
test
push
sub
inc
or
fdivl
adc
mov
xor
jns
pcmpgtb
test
inc
insb
or
push
fadds
ss
orl
pushf
mov
mov
xchg
nop
pop
sbb
adc
jle
repnz
fiaddl
sub
cwtl
cltd
call
enter
inc
rcrl
rclb
jecxz
adcl
enter
jae
lret
mov
pop
xor
into
into
shll
mov
popf
lret
xchg
inc
clc
push
xchg
lret
outsb
adc
jb
lahf
lea
arpl
movsb
bnd
cmp
shlb
fs
fdivrl
xchg
sub
xchg
xchg
int3
mov
mov
mov
imul
lret
movb
sbb
and
add
in
jmp
lret
test
outsb
and
paddusb
sbb
xlat
and
jecxz
fnstsw
xchg
jmp
ja
shrl
fucom
sbb
or
test
mov
mov
add
ret
push
hlt
jg
stc
pop
movsl
push
sub
mov
iret
scas
pop
adc
adc
and
dec
lret
stc
scas
ja
inc
negl
push
mov
vandps
xor
and
cmp
mov
jne
inc
cmpsl
loope
lahf
inc
xor
adc
pop
pop
lcall
loop
xor
jle
or
jo
call
or
test
sbb
stos
fistps
mov
add
cli
pusha
cmp
dec
dec
std
sub
xor
call
mov
dec
cwtl
ljmp
leave
lcall
movsl
leave
clc
outsb
iret
jg
cs
ljmp
inc
hlt
icebp
loop
or
mov
in
les
adc
outsl
popa
addb
sub
xor
push
adc
xchg
test
cs
push
das
imull
fidivrs
adc
sbb
ja
je
or
push
inc
jbe
pusha
sub
push
clc
sahf
sbb
xchg
out
pop
push
in
and
ret
jnp
lret
or
sub
pop
cmp
cld
jnp
out
pop
fldenv
fistpl
in
clc
stos
adc
jns
out
mov
lahf
mov
aaa
negl
mov
cld
and
xor
cmp
mov
jae
cltd
push
das
xchg
popa
push
loopne
sti
mov
jg
fbld
sub
push
call
testl
sahf
fdivrs
sbb
or
pop
inc
stos
ret
nop
mov
ds
sub
out
test
stos
mov
or
cmp
jmp
mov
xchg
repz
jae
lods
in
mov
pop
sub
push
aam
adcb
jge
and
cli
xor
cld
insb
outsl
mov
lods
dec
imul
sbb
push
mov
enter
xchg
pop
jb
dec
and
mov
stc
sub
test
cmpsl
jb
dec
dec
icebp
jo
ja
push
xor
in
sbb
inc
xchg
push
cmp
adc
push
xchg
arpl
mov
addb
push
dec
ret
sbb
jne
add
mov
inc
lret
push
insl
in
jae
outsb
adc
xor
mov
and
js
cmp
xor
lret
ret
jno
mov
mov
pop
dec
sbb
out
std
test
loop
inc
xlat
mov
mov
pop
jmp
jmp
and
adc
call
aad
loope
shrb
fildll
test
pop
mov
mov
or
rolb
imul
lods
or
xor
sbb
icebp
faddl
push
xchg
decl
inc
jne
fsubrs
sub
jecxz
std
inc
dec
sbb
repnz
das
push
add
test
insb
cmpsl
cmp
lods
ret
mov
sbb
inc
lret
dec
das
inc
cwtl
popf
sub
inc
sbb
push
rcll
mov
stos
or
cmpb
gs
test
cltd
pop
and
test
inc
cli
sahf
in
int
pop
cmp
dec
jbe
add
sbb
mov
test
and
out
lret
out
mov
xchg
and
mov
or
cmpb
mov
lock
in
nop
jns
lret
push
inc
scas
add
push
repz
cmpb
mov
push
insl
in
adc
jle
xchg
fdivp
cmp
cmp
leave
sahf
outsl
mov
stos
mov
xchg
or
mov
shll
pop
pop
int
insb
jne
iret
pushf
mov
or
arpl
pop
outsl
insl
rcll
jnp
test
data16
decb
pop
clc
push
adc
push
inc
cld
inc
cmp
enter
lods
add
pop
iret
adc
mov
aam
push
xor
aam
or
xchg
dec
mov
cmp
dec
loopne
xchg
dec
imul
dec
sti
movsl
scas
xchg
imull
jbe
push
add
leave
inc
add
or
cmp
mov
add
push
test
and
jmp
fmull
jo
jle
mov
bound
iret
pop
jae
mov
in
mov
rclb
xchg
lods
xlat
inc
arpl
cli
outsl
inc
rorb
rorl
sbb
mov
imul
adc
or
test
add
mov
or
push
sub
and
fs
sbb
or
mov
sub
adc
cmp
mov
fldz
mov
movsl
lods
lret
lahf
iret
mov
xlat
mov
pop
push
outsl
inc
fcomps
sub
pop
sti
pusha
pop
pushl
aaa
mov
dec
and
mov
mov
lret
mov
dec
and
xchg
icebp
xchg
jbe
sbb
mov
xchg
cmp
imul
arpl
dec
xchg
mov
int
dec
daa
push
stos
mov
sarl
mov
or
push
mov
xchg
inc
xchg
and
insl
jbe
add
xor
clc
xor
sbb
sub
mov
push
cmc
pop
jl
fcomps
orl
push
addb
sti
xchg
sub
fcoms
cmpsb
stc
xchg
push
mov
iret
mov
je
out
xchg
loopne
imul
jp
enter
fwait
sbb
inc
ljmp
jno
pusha
cmp
xchg
movl
out
xlat
test
ds
in
sub
xchg
stos
das
loope
adc
pop
cmp
cltd
test
outsl
imul
sub
push
xor
xchg
dec
stos
jae
adc
xchg
sub
sbb
cwtl
xchg
filds
mov
nop
and
out
dec
cld
sbb
xor
pop
push
test
test
push
xchg
repz
aad
test
jae
sbb
not
mov
rorl
inc
divl
cltd
mov
inc
inc
sbb
xchg
jno
xchg
dec
mov
andl
cltd
das
mov
mov
mov
push
cmp
inc
fildl
xchg
adc
bound
cs
rcl
popa
xor
andl
push
scas
sub
add
cmp
outsb
int
outsl
sbb
in
mov
pop
ret
test
jnp
pop
push
ds
mov
loope
cmc
adc
pop
adc
mov
add
add
lret
mov
in
cmp
dec
sar
ds
inc
sbb
test
lods
mov
ds
add
sub
fisubl
ja
lret
shl
mov
testl
adc
leave
cmp
pop
mov
push
mov
out
cs
jle
sbb
in
dec
cmp
cmp
dec
enter
push
in
mov
aaa
out
lods
xchg
xchg
int
jb
adcl
movsl
jns
and
test
scas
movsb
dec
or
test
ds
loope
jmp
inc
sbb
push
pop
push
inc
adc
jae
sbb
add
cmp
dec
sub
sub
rclb
js
scas
cwtl
fidivrl
dec
stos
sarb
pop
or
dec
fwait
mov
and
sub
test
popf
imul
mov
jno
shr
insl
call
mov
jbe
jl
xchg
bound
fwait
test
pop
pop
and
cltd
add
cmp
sub
xor
inc
inc
daa
add
shll
fmull
cmc
cmpb
mov
test
idivl
xorl
jmp
shlb
mov
bound
xor
mov
pop
sbb
mov
shll
mov
mov
mov
jbe
or
mov
das
mov
aas
fcmovbe
fdivrl
xchg
stc
inc
mov
mov
pop
push
ret
pop
xchg
cmp
push
xor
mov
into
add
xchg
xchg
shr
adc
gs
sbb
sbb
mov
test
mov
mov
xchg
xor
or
jp
sub
repnz
sbb
int3
inc
push
popa
imul
roll
pop
in
nop
mov
and
das
dec
push
fildl
mov
xchg
pop
imul
daa
lock
mov
imul
shrb
call
or
mov
sub
stos
adc
es
outsl
push
dec
ljmp
dec
xchg
es
in
in
push
gs
lahf
out
mov
addr16
and
movsb
je
movsb
mov
push
decb
jecxz
aas
dec
xchg
push
cltd
aas
into
stos
test
add
xlat
jmp
stc
jns
add
mov
push
inc
dec
imul
lcall
fistpl
std
jb
pop
adc
jne
addr16
cmp
pop
testl
jo
adc
add
jp
cmc
dec
sub
loope
and
loope
mov
dec
ficompl
mov
sbb
push
leave
jns
mov
lret
jmp
add
movsl
jae
xchg
out
xor
push
or
mov
mov
adc
xor
idiv
mov
mov
and
loop
xchg
mov
out
out
daa
inc
repnz
in
mov
imul
addr16
push
push
and
cmp
imul
inc
inc
loopne
pop
mov
xlat
jbe
inc
mov
shl
add
xor
xlat
popf
xor
outsb
cmpsb
xor
cld
imul
push
ret
xchg
pop
test
jns
sti
and
xor
jne
mov
gs
lret
rcrl
sub
and
xchg
repnz
jl
mov
push
pop
imul
fucomp
ljmp
js
inc
decl
push
in
cmp
push
enter
and
push
cmp
ret
dec
push
mov
jge
cmp
and
js
sbb
jle
jb
js
jnp
cmpsl
sarl
jae
sbb
jge
loope
lret
sar
xor
pop
daa
or
or
in
jnp
add
out
xchg
mov
addl
xor
push
ja
adc
pop
imul
dec
outsl
lods
inc
push
add
not
push
roll
mov
dec
xor
fisubl
loopne
fldenv
mov
psubusw
dec
inc
stos
out
dec
rorl
lahf
mov
push
std
test
xor
pop
fcomi
or
push
lret
cmpsb
js
dec
or
jl
pop
lahf
push
push
add
cmp
aad
mov
mov
jnp
arpl
jecxz
or
push
or
jns
push
insb
aas
mov
adc
test
jne
iret
nop
das
call
inc
sbb
fidivrl
fadd
adc
jno
jb
inc
jmp
popf
fldt
mov
sub
add
or
test
imul
das
in
jp
sbb
sahf
dec
xchg
repnz
jl
xor
test
insb
pusha
lret
in
shlb
push
inc
or
lcall
adc
movsl
rcrl
je
mov
add
push
das
lret
outsw
ret
xor
sahf
inc
push
inc
xchg
cmp
arpl
push
jl
test
fistpll
test
cmp
loope
sarl
loopne
xchg
ja
jecxz
push
shl
bound
dec
jp
or
mov
pop
xchg
sarb
adc
xchg
sub
xchg
popf
mov
cmp
aam
cmp
lds
and
push
add
aaa
push
inc
jno
sub
int
test
inc
ret
sti
outsb
sub
adc
inc
jne
fisubs
cmpsl
fs
cmpb
push
inc
lods
cmp
add
out
mov
imulb
int
fcoms
xchg
pusha
dec
std
rcrb
sbb
sti
aad
cmpsl
jbe
fstpl
lods
mov
sahf
gs
repz
cmp
mov
mov
pop
inc
jl
imul
lock
jae
sub
mov
shll
aad
loop
or
loop
je
jno
jns
jp
pop
test
xchg
pop
adc
or
sti
sbb
mov
or
mov
fimuls
lods
jecxz
rcr
rorb
ficompl
dec
sbb
outsl
or
sbb
ret
adcl
or
fiaddl
xchg
push
fs
pop
fwait
add
mov
sub
mov
jo
sbb
ficompl
inc
push
inc
jmp
pop
orb
stos
aad
filds
mov
adc
fisubs
lcall
pop
lret
inc
test
sarb
bnd
dec
iret
adcb
in
movb
cld
mov
pop
push
addb
xchg
xor
lret
adc
cwtl
adc
xchg
sbb
int
scas
out
fs
adc
mov
jo
push
loopne
add
adc
mov
test
pusha
sysexit
sub
js
movsb
leave
mov
ret
lret
repz
mov
decb
sub
cltd
std
sbb
mov
cmpb
lret
sub
inc
push
loop
push
mov
adc
jns
jle
dec
inc
cltd
or
inc
nop
add
insl
or
xor
and
pop
inc
rcll
es
aam
fidivs
sahf
fwait
imul
popf
fists
pop
les
mov
xchg
dec
ret
jb
or
clc
out
mov
push
dec
cltd
das
sti
loop
fbld
out
fiaddl
sbb
ret
jno
mov
pop
inc
and
out
mov
add
jge
mov
pop
inc
inc
ret
rcrb
mov
mov
ror
xchg
addl
adc
pop
frstor
popf
mov
and
cs
imul
out
int3
movsb
pushf
fs
xor
dec
std
sti
pop
loopne
and
dec
lods
push
push
test
fcoms
add
xor
push
enter
sti
jecxz
popa
mov
arpl
or
mov
leave
sbb
jo
jno
pop
int
cmpw
or
dec
inc
cmpsl
out
push
clc
leave
push
adc
inc
jb
sti
add
cld
pop
xor
xor
sbb
insb
ja
orb
fcmovb
pop
push
or
fsubl
stos
pop
mov
xor
jl
jae
divb
xor
popa
push
dec
jmp
cmp
scas
cli
cmp
fisttpl
popf
jge
je
outsl
aad
cmp
push
out
fsubr
rorl
or
jbe
add
xchg
es
getsec
bnd
jae
pop
hlt
jl
fsubrl
sub
imul
les
sbbl
push
pop
sub
out
fcoml
adc
popaw
add
xor
fdiv
xchg
clc
mov
add
les
test
iret
mov
pop
mov
xor
in
xchg
jmp
and
popf
sbb
imul
jecxz
mov
or
jno
lcall
sub
lods
pop
test
into
inc
xor
std
add
or
inc
add
and
pop
ret
adc
insb
int
dec
stos
mov
lock
cmpsb
movsb
in
int
mov
or
loope
ja
mov
adc
mov
or
and
popf
dec
ret
push
aad
and
push
arpl
test
push
fnsave
and
in
lret
add
repz
scas
phaddw
cmp
f2xm1
rclb
jge
jae
push
incb
aaa
cld
dec
mov
andl
insb
mov
stos
decl
add
mov
fmull
adc
pushf
or
pop
xor
jbe
in
pop
pop
jp
mov
aaa
aas
adc
pop
negb
fidivrl
fidivrl
mov
mov
jmp
pop
jle
mov
lcall
cld
pop
cmc
pop
sbb
into
dec
in
add
pop
pop
mov
sub
jmp
add
mov
mov
rclb
jae
add
jmp
data16
mov
jns
popa
jge
test
repnz
ret
jne
incb
nop
pushf
das
outsb
or
jae
adc
lea
cmc
pop
pop
jl
aad
pop
rclb
jns
push
sbbb
dec
mov
ljmp
push
test
movsb
push
jno
xor
mov
push
pushl
pop
fsubl
jecxz
cmp
das
inc
xchg
aam
hlt
mov
jns
jl
push
int
in
gs
pop
outsb
mov
je
xchg
out
sub
jmp
add
repnz
jl
loope
push
cltd
inc
cmp
mov
cld
xlat
aaa
mov
out
mov
bound
mov
test
les
sbb
mov
sub
sbb
jmp
jle
pop
hlt
push
adc
push
push
emms
cs
les
testb
sub
cmc
add
js
mov
jb
insl
ror
xor
movsb
push
addr16
add
fs
int3
xor
stc
insb
bound
aaa
lock
jns
xor
xor
das
pop
in
sub
mov
dec
in
sbb
xchg
push
stc
dec
cs
hlt
dec
xor
incb
mov
add
fldenv
pop
mov
movsl
shl
sti
mov
repnz
pop
mov
lea
and
sti
or
cmp
inc
mov
add
adc
mov
sahf
ljmp
out
subb
aam
rcrl
shrl
jae
in
mov
lret
out
adc
cmp
dec
fistpll
or
add
loop
das
out
das
mov
mov
cmp
and
out
mov
inc
fcoms
add
mov
scas
mov
inc
data16
dec
call
xchg
pop
xor
xchg
rcrb
mov
cmp
xlat
add
inc
jmp
sbb
fnsave
sbb
mov
and
dec
sti
sbb
inc
stos
ds
test
cmp
inc
mov
and
sbb
cmp
cmp
inc
dec
in
sub
pop
fs
mov
push
mov
mov
bnd
scas
jb
sub
movsb
fwait
or
sub
cmp
orb
xor
dec
inc
sti
jo
mov
or
scas
jp
jg
mov
imul
cli
xor
cmp
push
pop
xchg
outsl
jp
fistpll
adc
cmp
pusha
out
sub
dec
das
stos
dec
sarl
push
or
cmp
cmp
mov
jg
das
lret
imul
ljmp
xchg
pusha
mov
data16
pop
lahf
ss
nop
xor
int3
icebp
push
shll
bound
mov
xchg
sbb
jbe
xor
mov
das
xchg
jo
daa
ret
aam
mov
add
and
pop
shrl
xchg
sbb
or
push
je
shrl
xchg
dec
lret
pop
ss
dec
fnstenv
push
and
in
xchg
enter
push
shr
icebp
out
push
movsl
pop
dec
insb
scas
jmp
dec
shrl
or
mov
xor
repz
stos
bound
andl
sub
stc
push
cmp
sbb
dec
iret
or
adc
fadd
and
xchg
push
js
lods
rorl
pop
test
test
popl
ljmp
mov
mov
mov
or
pop
int
jo
cmp
ret
or
iret
stos
sbb
in
test
fisubl
movsl
lcall
xchg
jne
insb
fisttpl
sub
sti
cmp
lret
int
clc
int
dec
shl
data16
sub
dec
xchg
push
push
pop
xor
mov
push
js
inc
xor
movsb
add
jns
out
cmp
add
popa
push
xchg
fmull
jns
inc
mov
push
push
inc
movsb
sbb
lret
pushl
cs
inc
imul
outsb
mov
mov
push
mov
scas
mov
adc
xchg
inc
daa
sub
xor
js
add
fdivl
mov
pop
mov
push
es
push
dec
sub
fcoms
fs
bswap
popa
test
mov
sub
fldt
cltd
fldt
cmp
aaa
add
mov
jmp
and
mov
mov
loop
xchg
xchg
xor
cmc
sbb
rcll
jp
test
sbb
in
rorb
xchg
sub
sbb
jle
push
xlat
adc
sbb
test
inc
ja
scas
loopne
push
imul
fnstenv
idivl
out
test
cltd
cltd
scas
add
shlb
aas
in
lret
sbb
sub
cmp
imul
lods
scas
pop
cmc
add
xor
push
sti
lock
fnstcw
inc
pop
xorb
lret
das
xor
add
clc
lods
insb
cmp
push
add
jne
mov
jno
jb
icebp
inc
mov
mov
or
pop
pop
xlat
les
cmp
dec
xchg
mov
dec
fdiv
jbe
jb
fsubl
pop
adcl
dec
jmp
xor
sti
jle
cmp
lahf
mov
jmp
adc
push
repnz
stos
or
jno
mov
jl
ror
cmp
adc
aas
lods
push
stos
sbb
pop
mov
lods
js
add
popa
mov
and
dec
sahf
and
xchg
rolb
xor
ljmp
idivb
add
xchg
push
jp
xchg
sub
icebp
mov
in
loopne
subb
adc
adc
ret
cmp
jbe
js
sti
movsb
hlt
fcomi
inc
mov
cmp
cmp
jecxz
pop
sub
and
mov
and
sbb
mov
jnp
movsl
adc
cli
pusha
pop
notl
pop
rolb
sti
fs
cmp
and
jae
pushl
popf
sub
call
mov
sti
mov
cmpsl
and
push
notl
mov
imul
mov
and
or
push
xor
lret
mov
push
push
mov
lcall
xlat
mov
sbb
mov
out
aaa
lock
mov
cltd
fcoms
mov
out
lock
imul
jle
ret
fbstp
xor
jg
add
mov
lret
xchg
cmp
sbb
sub
push
movl
xor
jle
xchg
out
mov
jns
sbb
lret
pusha
lcall
xchg
mov
pop
js
xor
clc
and
fbld
scas
mov
popa
sub
sub
das
pop
mov
inc
sub
sub
loopne
jmp
sar
movsb
push
repnz
test
push
notb
popa
xchg
push
xchg
imulb
mov
jae
ljmp
les
xlat
mov
pushf
inc
jle
bound
push
xchg
clc
mov
jl
repz
mov
cmpl
xor
sbb
mov
mov
pop
movsb
mov
aas
pop
std
jb
inc
icebp
mov
stos
test
int3
icebp
insb
pop
push
inc
int3
dec
push
scas
xchg
and
je
xor
fsubs
daa
push
mov
iret
icebp
or
ret
std
decl
mov
insb
ret
lahf
data16
jp
and
cmc
mov
or
imul
jl
sub
in
shlb
sbb
dec
aas
push
loopne
imul
adc
xchg
sbb
into
ss
jmp
inc
sub
stc
in
xchg
cmc
push
jp
add
inc
adc
icebp
aaa
mov
aaa
cmp
aaa
mov
mov
data16
scas
and
sarl
test
pop
mov
adc
cmc
push
fisubrs
loopne
dec
cmp
or
arpl
mov
repz
mov
aas
shll
xchg
dec
add
sbb
outsl
dec
inc
inc
popf
lods
mov
into
hlt
pop
rcrl
dec
pop
inc
jle
loope
movsb
inc
mov
inc
adcb
push
hlt
cmpps
xchg
adc
jmp
push
das
hlt
mov
in
movsl
push
shl
cwtl
inc
push
mov
mov
sub
stc
mov
xor
jae
pop
clc
dec
sarb
sub
aas
mov
nop
mov
or
xor
push
leave
hlt
iret
test
pop
fldenv
mov
dec
sarl
or
mov
push
sbb
jp
les
and
into
sti
pop
cs
int
es
sub
mov
aaa
pop
sbb
sub
out
push
fldenv
or
xlat
rcll
xlat
test
jae
pop
adc
loope
dec
repz
stc
push
lds
xor
fdivrs
sar
mov
mov
faddl
add
cmpsb
or
pushl
cli
cmp
mov
mov
mov
xchg
test
js
cmp
test
jns
sub
sbb
pop
pop
iret
pop
fstpt
push
mov
sub
xchg
mov
out
xor
fldenv
cmpsb
sbb
push
stos
repz
mov
out
icebp
inc
or
cli
dec
sbb
sub
adc
fidivl
insb
test
jmp
daa
mov
int
cmp
mov
sti
jmp
xchg
sub
xor
pop
addl
data16
clc
dec
and
jge
adc
pusha
shl
ret
jmp
imulb
push
or
sti
popf
lret
mov
or
les
push
add
push
cs
scas
ret
dec
lahf
out
push
sbb
addr16
or
mov
or
dec
jnp
pop
vpxor
pop
sub
ss
cmp
jnp
sbb
lret
or
push
mov
fsub
lcall
ljmp
rep
gs
cld
sbb
nop
jmp
pop
lods
sbb
bnd
jbe
pop
pop
gs
lret
movsl
inc
pop
cmp
int
pop
lods
mov
and
cld
das
repz
addb
cld
adc
and
add
ja,pt
adc
or
out
xlat
sub
adc
test
jns
and
sub
mov
adc
out
aaa
test
std
aad
int3
push
sub
test
loop
ja
jp
inc
mov
stos
sub
mov
jno
cmpsl
pop
pop
leave
cmpsb
push
popa
fisttpl
inc
mov
pop
and
mov
shll
sub
outsb
inc
inc
jmp
call
aam
inc
fstpl
pop
cmpsb
jmp
mov
sub
pusha
inc
bound
popf
int3
inc
sbb
call
jmp
push
lret
test
shrb
das
jb
dec
and
out
inc
test
add
mov
mov
repnz
pusha
push
push
fsubrs
sbb
cli
add
jbe
jne
ret
mov
fstl
roll
mov
int
fstpl
xor
jge
push
xchg
dec
and
cmp
shlb
sahf
push
cli
fcomp
pop
mov
jmp
das
icebp
dec
stc
daa
jmp
adc
jecxz
jp
inc
mov
ds
pushf
xor
cmp
frstor
sbb
mov
into
sahf
imul
movsb
stos
add
cmp
scas
jno
jle
int3
inc
mov
mov
or
or
stos
lret
loope
xor
into
mov
loop
mov
xor
out
outsb
test
aad
icebp
and
repnz
and
jne
cld
push
mov
or
or
sbb
sbb
out
inc
popa
dec
mov
sub
fcoms
femms
inc
cltd
jmp
insl
ljmp
lea
repnz
test
fldl
ret
stos
movl
fs
jb
in
fs
xchg
xchg
ror
clc
cmpsb
cmp
call
push
ss
cmc
leave
jmp
popa
xchg
xchg
movsb
call
jl
mov
nop
and
lods
jns
and
andl
loope
jae
xor
mov
clc
leave
push
sarl
xchg
pushf
ret
mov
in
xor
mov
push
xor
sub
ret
mov
sbb
cmpsl
iret
push
pop
sub
mov
shlb
push
or
pop
mov
cmpl
inc
adc
push
push
mov
out
inc
jb
push
or
ret
mov
cmpb
into
ss
out
repnz
movsl
movl
aam
mull
pop
js
sbbb
mov
ja
fs
mov
dec
cmpl
insb
mov
cmpsb
cmp
or
xor
jg
xchg
jge
xor
or
and
and
pop
int
imull
jns
xchg
out
arpl
jmp
adc
adc
pop
dec
inc
push
add
pop
cmp
push
cmpb
loopne
dec
or
loopne
aam
sub
lock
es
loope
mov
mov
mov
or
xchg
adc
jne
lods
lods
xorb
test
popf
dec
cmpsl
pusha
jle
push
fucomi
ror
daa
movsb
xor
cmp
lahf
call
out
icebp
scas
cmc
call
cmp
sub
sarl
fildl
mov
jo
movsb
orb
push
aas
aam
pop
xchg
cli
ja
mov
mov
dec
pushf
shrb
mov
shrb
mov
xchg
pop
mov
and
pop
push
stos
sub
aaa
imull
xchg
movsl
or
shr
inc
lea
js
and
jbe
jge
and
pop
xchg
int
insb
jg
add
sarb
and
in
in
inc
ss
or
jbe
subb
pop
icebp
dec
xlat
pop
stos
mov
push
test
pushf
out
pop
mov
insb
xchg
sahf
mov
lods
and
lcall
daa
dec
xchg
aas
test
jne
out
or
pushf
mov
adc
dec
imul
ja
fldl
inc
fsts
mov
mov
movb
cmpsl
mov
clc
adc
push
sbb
decb
jge
repnz
sbb
jp
add
inc
cmp
sbb
push
stos
loopne
aam
sub
aam
xchg
jg
mov
push
jl
fcoms
jmp
or
repnz
int
push
mov
dec
aas
sti
sub
icebp
cmp
mov
hlt
nop
aad
xor
lret
data16
and
mov
jnp
je
and
fstl
xchg
out
push
stos
sahf
mov
or
stos
sub
sbb
popf
fcompl
xchg
mov
mov
adc
mov
xor
sar
addr16
repz
aad
and
pop
xor
pop
gs
pop
dec
imul
mov
or
dec
in
cmp
notl
or
jp
lods
xchg
cltd
inc
out
or
or
stos
mov
imul
test
data16
jb
cmpsb
mov
add
dec
movsb
lret
xchg
test
loopne
cmp
les
ret
outsb
and
push
stc
cmpsb
loopne
jl
mov
out
adc
sti
xchg
xlat
mov
mov
dec
test
and
pop
test
adc
clc
loope
xchg
add
fildl
mov
xchg
sub
loopne
pop
out
lcall
xor
in
mov
in
ja
rcr
out
mov
mov
es
test
sbb
jae
cmp
or
je
das
add
xchg
arpl
popf
xchg
sub
cmpsb
push
lret
pusha
adc
push
mov
jbe
aam
mov
icebp
jge
mov
subb
loope
mov
mov
cltd
sbb
mov
mov
adc
pop
int3
repz
pop
mov
xchg
push
mov
mov
dec
jae
jns
int
ret
cltd
mov
cmp
push
cmp
mov
push
sarl
test
das
mov
inc
insb
data16
mov
add
inc
xchg
dec
inc
js
mov
dec
jmp
inc
pop
insb
mov
loopne
loop
and
shrl
shl
jmp
int
mov
dec
push
daa
sbb
add
jae
add
push
and
in
call
cmp
pushf
test
daa
sbb
mov
shll
aad
cmp
lods
xchg
xchg
mov
xchg
movsl
sub
ds
sub
adc
cmp
xor
shr
and
mov
call
xor
sub
mov
xchg
int
cmp
lea
jbe
mov
sbb
scas
jno
cmp
std
adc
loope
insl
push
out
xchg
ljmp
inc
subl
shrb
xchg
sbb
out
mov
int
adc
shr
or
lock
aas
mov
pop
jg
mov
mov
xchg
pop
push
aam
and
cmp
xchg
out
mov
and
xchg
adc
stc
sbb
and
sub
insl
sbb
add
push
cs
lods
cmpsl
mov
push
popf
or
lods
aad
push
or
stc
out
mov
mov
bound
mov
push
sbb
xchg
inc
add
fsubp
divl
sbb
fsub
adc
adc
sti
mov
sbb
daa
enter
add
mov
xchg
pop
and
ret
add
jp
pop
dec
adc
sub
sbb
aam
stos
adc
mov
push
lcall
jmp
sarl
mov
xchg
inc
aad
aas
jnp
cld
lret
sbb
xor
insl
push
sbb
out
daa
push
out
icebp
cmp
stos
es
or
dec
mov
cmp
fiaddl
cmp
xor
adc
aas
orl
rorl
fs
jmp
lods
xor
stos
lock
sbb
add
or
cli
mov
jge
mov
lods
mov
inc
xor
or
insl
dec
stos
dec
lret
xchg
popf
cmc
outsl
push
cwtl
xor
outsl
in
mov
ret
into
nop
dec
push
nop
jae
dec
out
mov
xor
mov
inc
je
clc
into
sub
and
xor
movsl
dec
scas
jnp
fisubrl
inc
into
pushf
or
std
or
mov
clc
in
cli
cld
sahf
cli
adc
scas
inc
lods
and
fcom
mov
xor
test
cmpsb
cmpsb
sbb
ret
inc
test
out
inc
mov
pop
mov
iret
mov
stos
dec
scas
mov
lods
pushl
mov
xor
scas
mov
xchg
bound
bound
lods
in
call
cmc
sbb
cmp
test
imul
lahf
aas
mov
mov
movsb
mov
mov
lret
or
enter
xor
sti
xchg
adc
lcall
xchg
inc
sahf
ss
inc
and
test
pop
test
movsl
gs
cmp
aad
mov
aas
sub
gs
cmp
das
cmp
loop
je
push
mov
adcl
lahf
xchg
adc
jae
push
xchg
insb
mov
cmp
push
dec
cs
xchg
rcll
cmp
scas
xchg
dec
imul
mov
sub
add
inc
mov
mov
insl
add
lds
faddl
pop
pusha
cld
and
fcmovnb
mov
mov
fisubs
jne
dec
mov
mov
inc
cmp
and
stos
lret
xchg
out
mov
inc
pop
adc
ss
lea
out
xor
ds
outsb
push
jecxz
dec
adc
dec
test
add
dec
scas
stc
aas
scas
outsl
rorl
out
test
pop
mov
rclb
fbstp
push
or
pusha
cmp
subb
leave
cmp
das
mov
sti
mov
xchg
dec
inc
mov
dec
push
xchg
mov
mov
pop
outsl
das
dec
popf
pop
pushf
mov
mov
xor
rorl
loope
mov
pop
add
inc
mov
xchg
cmc
push
cmp
jl
aam
shll
push
sbb
pop
aad
arpl
or
jp
out
and
popa
repz
push
adcl
add
js
int3
mov
push
femms
rclb
dec
lahf
push
mov
movsl
xlat
mov
mov
hlt
dec
push
jno
sub
daa
mov
rcr
fldt
and
out
sar
dec
sbbl
pop
shr
mov
add
mov
add
push
fsubrs
leave
sarb
mov
mov
jmp
bound
sub
jmp
mov
add
sbb
cmp
lahf
jp
and
in
inc
bound
jno
loope
stos
mov
test
add
dec
sti
push
aas
ja
xchg
or
loope
push
cmp
mov
stos
push
push
popf
pop
mov
icebp
loop
andb
mov
or
sub
gs
fs
add
int3
enter
or
lret
dec
xchg
dec
fwait
push
das
cmpsl
xorb
ds
and
adc
mov
xchg
cmpsl
packssdw
add
mov
es
sbb
and
pop
shll
push
add
jo
repz
pop
add
push
es
or
cwtl
push
shlb
mulb
cmp
mov
adc
cld
movsl
push
pop
bound
mov
jns
and
adc
push
and
add
movsb
push
popa
mov
or
js
cmp
in
loop
push
pop
mov
push
popl
loope
sub
xor
xor
test
repz
add
mov
je
js
loopne
push
cli
sub
stos
push
mov
inc
lea
jg
xchg
jle
cld
lret
call
cmp
insb
or
aas
mov
push
and
mov
jnp
xorl
add
dec
adc
mov
sbb
mov
das
adc
adc
jl
ds
or
add
xchg
pop
cmpsb
out
test
xor
inc
mov
cmpl
pop
mov
ss
in
xchg
adc
mov
add
stos
xor
lret
test
dec
fstp
rcrl
ss
daa
sbb
or
daa
push
mov
subl
push
push
xlat
push
lock
cli
fsubr
loop
jmp
or
fst
push
and
mov
cld
in
mov
pushf
mov
fldenv
push
leave
jg
push
imul
sarl
sbb
js
fcmovne
scas
cmp
movsb
popa
pop
cltd
out
cmc
test
lahf
add
push
loop
sbb
xor
mov
adc
inc
xor
mov
repnz
mov
lcall
inc
inc
scas
cs
scas
mov
jmp
hlt
hlt
lods
mov
xchg
lods
cmp
push
shrl
movsl
bound
popf
shlb
and
and
adc
fs
jle
push
xor
aad
mov
pop
aad
pop
lds
xchg
push
es
xchg
dec
dec
rcll
inc
rolb
cmp
or
loopne
aaa
mov
push
movsb
push
vmread
in
sub
mov
aaa
or
fstpt
inc
stos
mov
in
clc
push
add
cld
push
lahf
lea
icebp
cmp
and
adc
push
and
int
mov
ret
stos
es
push
aaa
pop
adc
out
call
pusha
ja
into
inc
clc
jb
mov
fidivrl
mov
xchg
sahf
lods
push
int3
pop
ja
xlat
mov
add
lahf
mov
popa
jmp
xor
data16
push
lods
ret
mov
fidivrl
mov
cltd
subl
out
addr16
adc
push
cmp
and
data16
subb
mov
test
fwait
lcall
push
test
fiaddl
cmc
lock
ret
mov
mov
and
xchg
mov
or
test
test
test
or
mov
pop
xchg
cli
pusha
sbb
and
repz
sub
cwtl
inc
or
test
inc
jae
cmp
xchg
jae
lcall
or
dec
ja
movl
jo
cmpsb
f2xm1
dec
hlt
jns
mov
outsb
sbb
subb
and
mov
or
out
mov
xor
lahf
pop
mov
leave
jle
aas
outsb
sbb
pushf
inc
push
fwait
and
cmp
inc
or
pop
xchg
scas
push
sbb
mov
dec
ss
sbb
add
cmpsb
xor
ret
add
push
loop
cltd
inc
clc
int3
je
ds
movsl
cmp
jo
lea
push
xchg
dec
pushf
mov
jle
and
xchg
sbb
jnp
lock
xchg
mov
mov
pushf
push
fildll
adc
cmp
xor
nop
icebp
std
cmp
sub
insl
jnp
lret
pop
cmp
add
sbb
dec
pop
mov
mov
xlat
sbb
sbb
mov
fimull
in
rcrb
clc
adc
or
mov
and
testb
loop
ficoml
add
dec
jge
repz
lahf
push
inc
pusha
mulb
das
insl
mov
inc
arpl
jg
adc
test
clc
add
mov
xor
pusha
inc
sub
pop
dec
push
adc
xchg
popf
or
xchg
sub
insl
add
cmc
int3
xchg
mov
jg
sub
not
jle
pop
jmp
push
cltd
and
ficoms
cmp
and
into
repnz
xor
sub
xor
lcall
cmc
or
ja
cmp
jne
pop
cmp
mov
arpl
jmp
fimull
jo
sbb
mov
jo
xchg
xchg
aas
call
test
xor
push
mov
in
cmp
inc
roll
cmpsb
sbb
in
dec
mov
lea
shlb
pop
add
pop
movsl
ret
add
nop
jns
loop
outsl
fcoms
push
mull
outsl
add
int3
inc
xor
adc
lahf
inc
mov
jecxz
adc
repz
add
adc
sbbl
xor
pop
xacquire
push
mov
pop
mov
mov
sbb
dec
out
cmp
mov
lcall
fisttpll
mov
out
dec
mov
hlt
mov
scas
mov
push
sahf
pop
pop
cmc
jecxz
add
test
jb
ljmp
inc
jnp
xchg
mov
fdivr
push
mov
dec
shlb
adc
mov
sahf
dec
ja
into
aas
mov
or
and
adc
push
sahf
add
fcoml
ss
lahf
lea
jmp
xor
mov
or
cmp
cmp
fnstenv
xchg
xor
sbb
dec
out
pop
and
dec
daa
mov
pop
sbb
addr16
push
push
ljmp
or
out
mov
dec
icebp
iret
xchg
scas
jmp
std
dec
cmpl
cwtl
stc
lret
push
scas
xchg
out
dec
cs
int
lea
rorb
pop
enter
lock
pushf
inc
inc
adc
outsl
scas
outsb
cmp
cltd
lea
lahf
or
out
xchg
iret
sub
xchg
or
cmp
outsl
aad
jno
je
push
jb
lods
out
push
mov
lods
jge
movsl
pushf
push
cmp
stc
push
scas
popf
mov
clc
dec
mov
pop
dec
fabs
test
xchg
aaa
enter
adc
push
iret
dec
testl
add
lods
mov
dec
jge
dec
dec
insl
push
pop
pop
xor
or
je
cmp
pop
sbb
mov
jl
daa
mov
pop
adc
mov
sbb
test
insb
jle
lahf
repnz
xchg
leave
loopne
add
dec
inc
jbe
xchg
mov
mov
in
mov
pop
sarl
cli
movsb
fidivrl
xchg
cs
and
lahf
stos
mov
daa
push
je
repnz
jecxz
jp
add
mov
cmp
prefetchwt1
pusha
fiadds
js
aaa
pop
shl
cmp
es
add
iret
inc
mov
cmpsl
fcomp
int
dec
sub
push
cmp
shl
pop
aad
add
inc
xor
cltd
outsl
push
std
ljmp
cmpsb
xor
mov
arpl
sbb
stos
push
in
fldt
aad
fsubr
cwtl
int3
nop
adc
fdivrs
ret
mov
movb
or
pop
and
mov
mov
repz
adc
and
loopne
repnz
dec
mov
push
adc
outsb
aam
out
incl
scas
sbb
inc
dec
jp
fldcw
xchg
and
push
test
test
test
pop
in
xor
push
dec
inc
add
daa
pop
dec
mov
cmp
dec
dec
sub
mov
call
pop
sbb
cli
mov
call
lret
arpl
dec
lods
xchg
push
jmp
dec
sub
lret
pusha
jg
jg
add
add
out
sahf
xchg
loopne
nop
sbb
pop
sbb
pop
sub
sahf
mov
cmpsb
out
lahf
pop
idivb
decl
mov
insl
das
dec
mov
mov
psubb
ficoml
mov
adc
test
pop
into
test
xchg
add
inc
lret
lret
xorb
ja
shll
sarb
push
call
mov
cmpsl
and
lea
adc
fisubl
fdivrl
scas
movsb
sbb
out
out
mov
pusha
cltd
cwtl
js
lds
scas
xchg
xchg
and
ret
loop
loopne
push
jg
sbb
insl
pop
lods
mov
insb
dec
movsl
sbb
push
jo
inc
out
fildl
and
ss
pop
cltd
cmp
andb
mov
aaa
sbbl
xor
pop
dec
sti
push
push
test
clc
sbb
cmp
adc
aaa
add
stc
adc
or
popf
cli
mov
pop
sub
fcmovnb
jbe
pop
mov
xor
gs
xor
sti
sub
lret
push
dec
stos
stc
mov
xchg
in
add
jle
cmpsb
cmp
mov
dec
stos
jns
and
lods
shr
pusha
pop
xor
cmp
icebp
inc
popw
insb
cld
mov
mov
pop
into
adc
ds
xchg
push
cwtl
in
mov
stos
mov
cmpsb
fadd
jecxz
pop
and
mov
lret
arpl
mov
aad
cmp
into
or
pop
jae
lret
call
lods
cltd
movsb
popa
sbb
push
rorl
lret
lods
push
ja
bound
popa
shr
mov
mov
fwait
movsb
mov
repnz
add
and
lret
push
mov
in
push
xchg
nop
mov
movsl
pushf
add
imul
pop
fdivl
clc
add
movsb
xchg
mov
icebp
xor
add
mov
insb
insl
insb
jnp
ljmp
cmp
mov
pop
filds
mov
adc
mov
push
adc
js
and
outsl
or
dec
sbb
cmp
adc
or
sub
mov
xchg
mov
imul
pop
test
rcrb
sbb
xchg
test
test
adc
aaa
mov
lahf
lods
mov
testl
sbb
mov
push
pop
adc
and
lret
or
pop
dec
lods
mov
mov
dec
mov
sahf
fcomp
das
push
int3
in
fchs
loope
subb
and
dec
and
mov
mov
push
sti
and
imul
enter
jae
cmpsl
gs
adc
add
cmpb
rorb
mov
sub
icebp
cmp
dec
pop
outsl
mov
mov
cmp
xchg
rol
jb
mov
andl
push
scas
or
testl
adc
adc
sti
outsl
stos
or
pop
mov
dec
rcrb
sbb
mov
scas
cmpsl
jne
orb
push
ds
jo
into
fdivrl
xchg
testb
pop
cmpsl
mov
sbb
adc
icebp
add
pop
into
and
sbbl
and
mov
xchg
cmp
and
fdiv
sar
sbb
jg
out
mov
cmp
jo
push
push
enter
out
jmp
std
std
and
xor
decb
leave
sbb
imul
cmp
mov
jae
inc
mov
pop
rcrb
fnsave
leave
push
popa
adc
mov
cmp
pop
push
jnp
push
call
push
jl,pt
out
pop
mov
push
ficoms
inc
add
pop
push
dec
xchg
mov
setl
xor
ds
mov
mov
and
pushf
inc
mov
and
cmp
add
mov
jnp
inc
pop
mov
adc
lahf
jg
jbe
xchg
cmp
dec
and
mov
stos
mov
mov
popl
mov
icebp
jae
sbb
in
jp
jnp
pop
adc
xor
mov
mov
cwtl
sbb
xor
and
ljmp
mov
xchg
add
out
cmp
aas
lcall
fisubrs
xor
pop
cwtl
lahf
mov
movsb
pop
jns
dec
inc
jne
cmp
clc
push
hlt
xor
cmp
scas
dec
inc
lods
or
push
or
dec
inc
pop
cs
push
inc
popa
into
std
js
push
daa
pop
in
sbb
shrb
sub
in
jp
jge
outsb
xchg
pop
out
jmp
jo
iret
lret
add
cmp
repnz
shrb
cmpsb
inc
sub
mov
push
lods
jo
dec
jge
bswap
popa
dec
cmp
dec
cmp
cmpsl
mov
xor
cmc
out
inc
jmp
mov
cmc
dec
push
and
call
pop
jb
int3
rclb
lret
lcall
out
addr16
mov
xchg
pop
cmc
sub
aaa
leave
sbb
cld
andl
add
mov
jae
inc
add
nop
dec
xor
andl
ljmp
push
sbb
imul
cs
mov
pop
mov
xor
dec
aam
add
inc
out
std
mov
sbb
aas
dec
xor
sbb
rorb
or
ret
mov
and
in
and
pop
xor
add
lea
lret
adc
dec
outsb
mov
pop
shr
test
cmp
jae
call
cmpsb
mov
fs
pop
mov
inc
loope
sub
flds
fucomp
insb
sub
mov
xor
out
or
and
hlt
mov
pushf
pop
jnp
sbb
std
call
push
rorb
mov
lods
repz
outsl
ret
push
mov
xchg
test
cmpsb
pop
mov
adc
ds
jne
movsb
and
mov
insb
mov
dec
sub
ljmp
int3
ds
jecxz
test
sub
xlat
mov
mov
jne
ja
pop
xchg
iret
inc
jg
xchg
pop
mov
rorb
push
scas
loope
arpl
shrb
cmpsl
push
sbb
mov
ret
popf
divb
mov
sub
das
adcb
push
jns
or
mov
adc
jl
push
inc
shrl
loope
jp
jmp
xchg
jae
das
bswap
mov
jge
mov
orl
pop
mov
inc
cmpl
jo
or
popa
fisubrl
jae
mov
in
sbb
jge
jmp
ror
ljmp
stos
cmp
mov
lds
sub
mov
cmp
outsl
or
test
lods
mov
xchg
stos
push
ja
jo
sub
in
and
push
xor
cmp
cmpl
adc
mov
cmp
xlat
nopl
out
xchg
inc
and
ljmp
jmp
movsl
popf
xor
mov
mov
lds
sarb
unpckhps
orb
pop
push
or
mov
jp
push
xlat
sbb
stc
mov
lock
repnz
iret
mov
jmp
push
inc
add
jg
jns
mov
test
icebp
andb
jge
in
push
or
ret
lds
cmp
xchg
fnsave
mov
xchg
les
adc
dec
rol
mov
call
cmp
add
mov
inc
mov
sbb
shlb
mov
sbb
addr16
push
sub
shl
lods
lds
les
inc
int3
in
repnz
popa
jmp
pop
jo
fistpl
cmp
leave
loopne
test
test
push
into
into
aas
addr16
rcrb
and
add
call
mov
push
cli
decb
cmp
sti
add
mov
mov
mov
leave
pop
movsl
sbb
test
cwtl
or
mov
xchg
mov
lea
mov
push
loopne
cmpsb
jno
push
sub
cmp
clc
sbb
cmp
cmpsb
mov
pop
mov
movsb
mov
mov
out
addr16
jae
xor
ret
sbb
notb
add
add
dec
pushf
shrb
mov
sub
out
hlt
mov
insb
mov
mov
push
add
add
push
sti
out
fsts
mov
addl
out
dec
xchg
dec
cmp
dec
pop
loope
dec
ss
jns
insl
inc
push
addb
loope
add
mov
mov
andl
or
and
movsb
clc
test
pop
add
pusha
jmp
dec
mov
mov
jno
add
adc
aam
push
or
dec
test
sub
iret
jo
out
push
sbb
iret
cmpsb
cmp
paddusw
mov
push
iret
adc
mov
ss
mov
pushf
mov
mov
lahf
add
in
mov
hlt
xor
movsl
fwait
setg
or
movb
out
loope
enter
outsb
adc
in
xchg
mov
push
ss
mov
and
push
in
pop
rcrl
fnstenv
xchg
sub
push
or
stos
nop
mov
lcall
push
shll
stos
mov
enter
jmp
jo
fildl
inc
imull
subb
hlt
mov
dec
add
fnsave
fwait
pop
test
mov
loope
sub
imul
adc
inc
mov
push
loopne
sbb
mov
test
lods
push
mov
and
sbb
sti
inc
xchg
xor
pop
and
cmpsb
inc
mov
inc
aas
add
enter
add
mov
cli
mov
movsb
mov
lret
fstpt
and
ja
or
xchg
mov
sbb
dec
in
cmp
cmpl
ret
std
testl
stos
or
adc
pop
sub
ret
test
push
arpl
add
xchg
aad
and
push
ret
addb
ret
es
push
ds
pop
pop
shr
shrl
shrb
sahf
dec
xchg
sub
mov
loop
sbb
xchg
xchg
xor
rorb
inc
outsb
out
ret
mov
dec
adc
sub
xchg
push
in
or
pop
int
xchg
pusha
adc
imul
jns
ljmp
popl
loop
call
mov
ss
sahf
aam
mov
lock
mov
pop
popa
pop
pusha
mov
int3
aad
shrl
sub
mov
sbb
enter
sbb
clc
push
dec
leave
insl
ss
push
xor
repnz
jle
lret
cmp
add
mov
adc
cmp
cmp
shl
shrb
inc
adcl
sub
adc
xor
fildl
lret
sbb
and
mov
gs
cwtl
repz
outsl
adc
or
xchg
sub
outsb
or
repz
mov
test
mov
test
push
mov
push
into
insb
mov
and
sub
cmp
push
ja
jle
mov
pop
sub
in
fisubrs
stc
nop
mov
repz
jo
lcall
fsubr
adc
dec
add
jl
cmpl
xchg
sbb
clc
fsts
cmp
push
jno
stos
popa
fucom
in
cmp
xchg
lock
or
sub
scas
pop
dec
sbbl
push
jmp
dec
fcmove
movsl
jge
jmp
nop
pop
or
hlt
or
outsb
push
adc
push
pop
sar
dec
mov
adc
das
mov
loopne
shr
mov
shrl
mov
mov
xchg
pop
ret
mov
fisubrl
mov
mov
dec
into
cli
fdivs
dec
xor
pop
add
mov
xchg
aas
mov
or
mov
in
test
lcall
mov
icebp
mov
or
fwait
nop
jae
push
loop
popa
or
mov
sbb
gs
xchg
mov
push
push
mov
xchg
jg
das
lahf
push
gs
lret
lea
rcrb
sti
jmp
imul
or
jns
icebp
or
lock
push
adc
or
push
imul
mov
mov
jo
testb
ljmp
mov
xchg
sub
pushf
and
xchg
cmc
mov
push
mov
add
out
iret
xor
or
mov
icebp
xchg
push
sub
mov
out
scas
imul
scas
bound
aad
mov
fldcw
fsubl
leave
outsl
and
ds
fucomip
xor
dec
pusha
outsb
add
aam
mov
cwtl
sahf
popa
push
mov
add
jb
sub
aad
leave
xchg
lret
xorl
and
aas
data16
xor
cmpsb
fiaddl
pop
scas
jg
adcl
aad
push
lock
imul
ret
sub
nop
xlat
and
inc
mov
dec
or
mov
sbb
clc
lods
push
and
ret
rolb
mov
jp
ja
push
mov
push
push
mov
jg
add
mov
loop
sub
enter
sahf
leave
fcoms
sbb
mov
mov
cmp
inc
sbb
inc
push
stos
cmc
out
rcrb
movsl
lret
mov
int
jle
push
iret
mov
mov
cli
mov
jns
js
cmp
js
mov
dec
fcmove
mov
sub
xchg
dec
cmp
and
mov
mov
inc
or
sub
push
imul
mov
hlt
sub
ds
cld
pusha
dec
or
push
mov
repz
pop
inc
xor
push
fwait
jno
mov
ficoms
adc
jge
sub
fwait
mov
push
iret
mov
cmc
or
push
add
cmp
mov
adcl
push
ret
inc
mov
dec
or
lcall
sub
ss
cwtl
jecxz
aaa
cmc
fmull
mov
pop
aas
std
arpl
mov
fs
mov
add
lret
or
xchg
inc
dec
cltd
roll
fldenv
xor
out
scas
inc
stos
movsb
pop
mov
xchg
mov
ds
stc
push
mov
xor
xor
lds
inc
ljmp
repz
cmpsl
mov
mov
arpl
cmp
clc
inc
insb
dec
leave
xlat
xchg
insb
adc
ds
inc
imulb
test
mov
xchg
fdivs
aam
inc
lock
int3
outsl
xchg
fdecstp
push
loop
xchg
test
mov
rorl
add
mov
push
add
jno
jae
movsb
push
iret
mov
push
sbb
movsb
sbb
mov
cmp
gs
cli
in
cs
cmp
test
fdivs
or
dec
adc
mov
jnp
leave
movaps
lods
les
ret
fidivrs
imul
push
pop
rorb
stc
fldcw
sti
clc
xlat
out
mov
or
jns
inc
or
pusha
push
sbb
adc
mov
adc
movsb
bnd
mov
ror
pop
lods
aad
sub
mov
add
incl
mov
pop
xchg
test
jbe
xchg
push
into
push
ret
mov
jb
jmp
outsl
enter
push
pop
fldl2t
dec
xor
adc
or
leave
je
pop
mov
test
mov
lret
cltd
test
hlt
ds
movsb
sar
inc
dec
into
inc
add
mov
mov
test
xor
leave
out
cmp
xchg
clc
inc
add
std
rclb
stc
or
ret
mov
mov
pushf
cmpsl
out
lock
ret
ret
jns
lret
jb
mov
scas
lcall
enter
xchg
test
jl
insb
adcl
ret
pop
cmpb
loopne
stos
std
inc
insb
ret
and
mov
push
fs
adc
sub
push
mov
xlat
cld
fstpt
cmp
aad
cltd
imul
out
jae
sub
xor
ss
iret
sub
jg
ljmp
gs
cmp
jmp
cmpxchg
sub
xor
negb
adcl
pop
cmp
imul
notl
aad
lods
loop
enter
jmp
std
adc
les
push
mov
xchg
sub
ret
push
xchg
jmp
out
loopne
cmp
clc
sti
inc
adc
jge
pop
in
sub
mov
aas
sub
or
inc
addr16
add
jmp
cmp
sub
inc
mov
sub
mov
mov
jo
lds
lret
push
sbb
inc
jp
insb
and
inc
or
xor
mov
xor
xlat
mov
lods
aas
in
stos
fisubrl
push
cmp
dec
fsubrs
daa
xchg
inc
sub
add
adc
pushf
insb
test
mov
aad
loope
pop
xchg
roll
roll
loop
pop
push
pop
jge
call
pop
pop
adc
icebp
loop
sub
and
cmp
mov
rorb
xchg
ret
sbb
and
lcall
push
push
ljmp
pusha
xchg
pop
mov
add
xchg
xchg
mov
xlat
ss
cmp
jp
fwait
testl
dec
inc
push
cmp
ficompl
dec
mov
in
mov
in
pop
sti
sbb
push
xchg
xor
sbb
pushf
mov
cmc
push
pushf
inc
pop
mov
into
cmpsl
add
testb
cld
imull
jl
enter
mov
outsb
sub
adc
gs
cmpsl
mov
xchg
ds
call
dec
aas
fucom
jle
int
sub
clc
sbb
adc
repz
sbb
iret
mov
gs
pop
sbb
fst
lret
clc
daa
filds
sub
mov
cmp
mov
xchg
std
push
test
shll
cmpsb
inc
mov
xchg
leave
mov
adc
les
cmp
mov
ljmp
sbb
test
ja
outsb
mov
mov
dec
call
cmc
jnp
sbb
imul
jle
fwait
ljmp
arpl
and
pop
into
add
xchg
jns,pt
bnd
jl
repz
mov
pop
outsl
shll
jl
pop
daa
jns
ljmp
adc
outsb
xor
lock
out
test
pop
inc
jno
push
stos
test
sub
neg
lea
mov
mov
cld
js
imul
cmp
pop
jb
sub
pcmpeqd
iret
call
jge
jg
fcmovnb
and
or
rorl
push
pop
xchg
fcmovu
add
cltd
mov
pop
push
popa
xchg
imul
cwtl
cmp
sub
cltd
jne
pop
stos
mov
iret
push
sti
in
and
jge
aaa
adc
test
cmp
jae
jge
fwait
pop
aam
call
out
aas
comiss
inc
je
add
cltd
in
repnz
and
xlat
aad
dec
aam
test
ret
cli
movsl
mov
and
mov
pop
lock
out
cs
fmuls
push
xlat
cmp
in
push
sub
cld
int
xchg
pop
mov
fimull
rcrb
mov
ja
aas
or
loop
lret
xor
add
das
scas
rolb
pop
fwait
dec
in
out
cli
inc
mov
sub
es
mov
shrb
pusha
insl
sbb
fnstsw
adc
movsl
clc
outsl
cmp
clc
xchg
sbb
mul
enter
push
push
inc
outsb
mov
cmp
mov
push
jp
mov
sbb
in
rcrl
cmpsb
in
add
paddw
mov
xor
out
inc
add
mov
pop
popa
test
mulb
cld
sub
in
fsubs
mov
pop
push
pop
aad
mov
sbb
int
push
jno
enter
sbb
sbb
dec
scas
or
xor
add
dec
xchg
push
xchg
mov
mov
dec
inc
std
call
push
cwtl
and
adc
aam
mov
inc
mov
mov
lret
notl
decl
ja
sub
sbb
inc
inc
hlt
mov
ficoms
add
je
xor
xor
or
pushf
jae
mov
mov
push
out
add
int3
pop
adc
xlat
loopne
pop
loope
push
cltd
add
mov
rolb
in
inc
dec
pop
jb
sbb
adcb
iret
mov
aaa
xor
cli
or
cli
adc
mov
cltd
jo
stc
mov
shll
inc
addl
xchg
push
push
fcompl
xchg
ljmp
add
xchg
jbe
mov
mov
rcrl
push
test
jno
lret
pop
jns
iret
adc
inc
and
cmp
popa
mov
push
cmp
jg
sbb
cli
aad
cli
pop
push
mov
das
scas
lds
xchg
mov
incb
clc
into
inc
jb
sbb
fs
imul
dec
fistps
and
sub
fsubrp
cld
std
daa
push
mov
inc
sbb
pop
jle
clc
imul
ret
out
out
out
idiv
push
scas
push
std
cwtl
push
insb
gs
cmp
adc
paddsb
cmpsb
dec
cmpsl
aam
push
sti
sub
outsl
fistpl
mov
fdivl
cmp
lcall
cs
ljmp
and
imul
lock
jg
and
cmp
sub
push
dec
and
cmp
xor
mov
cltd
in
mov
adc
addr16
cmp
or
push
fildll
dec
add
cmp
ds
cwtl
dec
leave
jg,pt
rorb
jp
js
and
test
mov
stc
mov
shll
adc
test
mov
cli
jmp
or
movsl
mov
push
enter
pop
push
add
or
lret
dec
cwtl
pop
test
repz
mov
push
addb
jp
jbe
mov
lahf
cmp
mov
std
mov
aas
cs
xchg
or
pop
xor
insl
add
sbb
push
aaa
inc
xor
icebp
inc
stos
add
pop
cmp
repnz
mov
inc
mov
pop
in
pop
call
mov
cmpsb
cs
add
insb
repz
dec
push
pop
das
mov
fsts
nop
jno
xchg
shrb
movsl
and
ja
adc
jne
testb
fcomip
and
or
xchg
mov
add
xor
out
push
popf
test
outsb
jecxz
imul
into
add
xchg
fwait
insb
push
push
pushf
mov
sbb
or
clc
out
xlat
lods
fmuls
subl
gs
mov
nop
jbe
sarl
sbb
push
scas
pop
adc
push
nop
inc
mov
push
shlb
dec
js
mov
bound
lds
cmpsb
mov
sub
adc
or
pop
insl
mov
insb
jle
xlat
cmp
jbe
stc
add
out
xchg
ret
sub
outsb
and
lods
movsl
stc
std
sub
cmp
add
jne
mov
sub
xchg
sub
stc
mov
dec
loop
xchg
ja
notl
mov
cmp
cmpsb
test
jne
jb
dec
mov
mov
xorb
push
popa
jle
xorb
sbb
adc
xorl
cmovb
out
dec
push
xchg
cltd
sbb
push
aaa
mov
ret
ss
lcall
leave
ret
mov
out
nop
mov
push
add
push
lret
in
add
mov
dec
test
nop
add
scas
push
push
mov
ret
xlat
shll
cmp
jnp
jne
pop
aaa
jae
out
dec
sub
xor
adc
cli
ret
add
ret
cmc
orb
sub
adcb
cmp
dec
adc
andl
clc
mov
incl
mov
out
mov
sub
jno
dec
in
test
aam
pop
cmp
push
push
mov
aam
xchg
incl
xor
pop
mov
test
into
in
fwait
lret
daa
loope
mov
leave
sarb
lock
sbb
mov
mov
xchg
jo
mov
add
sub
inc
adc
xorl
das
mov
pop
mov
adc
xor
stos
xchg
push
in
movsb
outsl
sub
arpl
insb
int
cli
ficoms
cmp
outsb
cmc
push
sahf
push
cltd
aaa
sub
cwtl
jo
aam
fldcw
fnsave
test
cmc
inc
xor
jge
enter
stc
in
sbb
loopne
xor
test
xchg
pop
jl
std
xlat
mov
xlat
mov
hlt
mov
push
and
in
add
mov
aad
sbb
add
mov
cwtl
pop
pusha
mov
mov
mov
mov
sub
pop
lods
cmp
push
and
movsl
adc
cmp
jno
dec
leave
sbb
fiaddl
jns
dec
in
xlat
popl
sub
mov
push
pusha
stos
in
dec
sbb
imul
mov
or
aaa
fdivrp
fsubp
hlt
xchg
xlat
jo
push
shll
rcl
inc
push
pushl
jno
pushf
cmpsb
test
cltd
xor
es
or
cmp
pop
push
dec
adc
push
scas
mov
cmc
sbb
mov
jbe
daa
pop
loop
out
mov
mov
rolb
fwait
pop
dec
cltd
jecxz
pop
into
repnz
hlt
lcall
xor
movsl
mov
mov
add
pop
push
lret
sub
inc
repnz
inc
jmp
loope
dec
cmpl
xlat
inc
daa
sub
addr16
les
cmp
or
mov
ds
mov
cmc
lock
or
mov
xor
jl
roll
inc
lods
aad
incl
xor
inc
mov
int3
popf
dec
loopne
xchg
cmp
nop
mov
pop
rcll
cltd
or
test
mov
out
sbb
mov
xor
xor
pop
pop
rcll
out
insl
xchg
cwtl
push
and
mov
and
std
xchg
and
sbbl
mov
movsl
in
sub
rclb
sbb
inc
push
jl
pop
pop
mov
jb
sbb
cltd
or
mov
sti
arpl
fisttpll
nop
enter
mov
xchg
xor
add
imul
mov
lods
cmp
pop
mov
sub
pop
pop
cmp
lcall
sub
lcall
aas
aaa
out
mov
out
jg
push
xchg
stos
outsl
movsb
pop
xchg
jmp
dec
ficoml
mov
outsb
mov
in
gs
cld
imul
lret
mov
add
fcomps
jl
mov
xorb
test
jmp
sahf
push
mov
pop
or
jp
imul
add
test
inc
loop
ficompl
mov
xor
out
rcrb
dec
out
xchg
cli
and
fisttps
lods
cmpb
rclw
fnstenv
fidivrl
mov
outsb
mov
loop
fdiv
pop
leave
mov
aam
push
and
xorb
sbb
mov
push
pop
pop
stos
pop
test
lods
and
dec
xchg
stos
jne
jle
jnp
orl
jg
adc
aaa
loop
pop
jae
push
pop
pop
mov
lret
xchg
adc
dec
fdivp
mov
xchg
pop
out
inc
jo
lcall
sub
hlt
mov
test
insb
jmp
jb
lret
stos
pushf
aad
pop
cmpsl
das
in
push
sbb
pop
aam
aas
int3
inc
sbb
jnp
push
add
adc
mov
sbb
out
arpl
mov
push
std
jmp
mov
imulb
fcoms
mov
xchg
cmp
jl
ljmp
rcrb
es
in
fldenv
cwtl
mov
movsl
cltd
andl
lret
addb
aam
jg
cmp
mov
ficoml
mov
push
pushf
fisubs
sahf
addr16
cmp
adc
flds
or
cmp
outsb
sub
in
inc
lcall
imul
lods
fmull
rcr
int
cmpsb
add
daa
add
sbb
mov
or
subl
shll
xchg
std
imul
loopne
js
movsl
xchg
or
repnz
push
sbb
pop
movsb
shlb
scas
push
dec
inc
sbb
add
test
xchg
repnz
sub
loop
cmp
dec
fnsave
shl
push
ffreep
pop
fdivs
pop
xor
inc
gs
arpl
outsb
push
sbbl
lret
add
rclb
shrl
testl
mov
mov
test
dec
in
sbb
cli
ret
mov
mov
fsubl
mov
lock
xorb
pushf
xor
jmp
adc
mov
rcl
xor
movsb
push
test
testl
cmpsl
or
dec
int
push
inc
fidivl
insb
mov
fdivl
pop
pop
push
sbb
loop
pop
sbb
data16
cld
xchg
xchg
mov
in
mov
add
call
xor
cli
fwait
dec
ds
cmp
out
jae
xchg
jns
int
push
cmp
clc
subl
xor
push
dec
push
divl
sub
cmpsb
jno
cmp
dec
dec
xor
sub
push
pusha
fdivs
mov
subb
jle
cmpb
enter
bound
jb
jne
cmp
mov
or
push
jmp
inc
jnp
cmp
inc
out
shrl
xlat
xchg
sti
pop
push
adc
cltd
sub
stc
out
pusha
fimuls
xchg
cltd
jbe
and
xchg
mov
pop
pop
mov
icebp
repz
adcb
iret
arpl
mov
sti
nop
jle
hlt
pop
cld
jge
fcompl
jl
mov
xchg
mov
pop
bnd
sbb
repnz
adc
jmp
dec
and
and
es
pop
pop
cmp
cmp
pop
or
dec
jae
mov
rorl
fidivs
gs
sahf
in
dec
bound
mov
rcll
scas
stos
inc
cmp
aad
xchg
les
sub
test
sbb
sbb
xor
aaa
popf
addr16
out
mov
rcrb
and
push
push
push
mov
sbb
in
cld
fucomi
mov
jmp
jle
popf
lock
cmp
lcall
jae
ret
inc
nop
push
adc
mov
jnp
push
dec
hlt
and
jno
movsl
cmp
mov
sub
int
sbb
dec
add
and
pop
fidivrl
mull
pop
pop
idivl
daa
vpcmpeqb
test
xchg
lea
arpl
xor
push
fisubrs
rcrl
sub
jbe
xchg
sti
dec
sub
fwait
and
jnp
jno
xchg
and
mov
pop
inc
mov
lahf
xchg
xor
mov
cmpsb
jne
jo
pusha
fwait
mov
int3
dec
add
testl
mov
pop
xor
bound
loope
cmp
int3
add
dec
mov
mov
dec
fistpll
sti
sbb
adc
or
into
je
imul
sub
xchg
pop
sbb
push
sub
adc
sbb
mov
jl
rclb
ficoms
mov
jle
pop
or
xchg
aad
xor
jo
sarl
shll
mov
dec
jo
test
test
sub
cmc
push
out
mov
push
sbb
in
mov
jle
mov
xor
pop
xchg
ss
or
out
sarl
lods
imul
cmp
xor
out
or
lret
add
xor
jns
xchg
imul
pop
in
scas
test
sbb
ficoml
jmp
mov
jno
mov
outsb
lahf
bound
and
shll
pop
aaa
cmp
lcall
scas
mov
jo
adc
je
fmuls
cli
push
stos
push
fstpt
dec
iret
ss
pop
loopne
jmp
mov
aad
mov
aas
popa
or
cmp
cmp
rclb
mov
push
push
test
enter
das
mov
inc
out
fistpll
sbb
pusha
ljmp
lds
imul
mov
clc
test
repnz
jo
or
call
lretw
sti
std
sbb
fidivl
pop
inc
addr16
in
lahf
fmull
push
jo
fsubl
or
insb
lods
jae
movsb
divb
mov
jb
sub
popa
mov
push
jnp
out
mov
xchg
insl
xchg
mov
test
push
xor
stc
mov
bswap
xchg
popl
cli
out
inc
movsb
xor
xchg
aaa
xchg
push
daa
mov
jg
xchg
test
adcl
sub
loope
dec
jp
scas
repz
inc
test
inc
in
pop
fsincos
mov
ficomps
pop
mov
xchg
jge
mov
andl
mov
imul
aad
int3
mov
outsb
daa
pop
mov
imul
jg
popa
sub
cmp
jo
xchg
aam
cmp
ljmp
and
fs
or
pushf
pop
test
lret
push
xchg
or
xor
ds
pop
push
pop
mov
rorl
jp
movsb
roll
jecxz
dec
inc
mov
mov
std
dec
xadd
or
sub
xor
mov
or
xor
add
test
inc
lret
es
mov
aam
and
xchg
aas
push
mov
pop
cmp
inc
push
cli
dec
jo
push
ljmp
mov
mov
scas
inc
mov
ja
jecxz
lret
mov
mov
addr16
je
adc
dec
add
fdivl
push
hlt
adc
mov
mov
sarb
xchg
mov
jmp
movsl
adc
cmp
mov
sbb
xchg
jge
scas
cmp
lods
xchg
loope
stos
adc
push
aad
popa
ss
clc
div
and
scas
mov
pop
test
shlb
ss
inc
jp
push
sbb
into
repz
mov
pop
imul
xor
cmpsl
xlat
js
ret
stos
shl
jg
jnp
in
mov
jbe
push
outsl
addr16
sub
or
cltd
inc
icebp
mov
clc
repz
lahf
cltd
outsl
adc
out
xchg
xor
mov
mov
in
or
mov
xor
mov
pop
lcall
aad
jns
mov
fcompl
mull
and
or
mov
sbb
sbb
jl
pop
mov
mov
add
insb
sbb
dec
xlat
ret
lret
sbb
push
push
rcrl
sub
aam
lcall
push
sub
jmp
es
xchg
pop
xor
fidivs
pop
lret
xlat
inc
jne
das
pop
sub
inc
in
fxch
orl
dec
adc
pop
pop
cli
js
sbb
ret
movsl
mov
mov
movsb
loope
jg
pop
adc
rcrb
sbb
mov
call
iret
xorl
push
adc
scas
mov
lods
push
mov
mov
in
clc
mov
inc
ja
je
test
adc
dec
int3
cmp
scas
int3
pusha
jae
jnp
fisubs
cwtl
mov
adc
push
pop
mov
rolb
pop
into
pop
and
mov
movsl
cmp
mov
push
cmpb
test
and
and
add
lret
pop
xor
pop
jmp
add
or
cmp
jno
jmp
xchg
mov
dec
xor
add
jge
push
ja
pop
or
imul
sbb
jno
mov
testl
insl
cltd
cmp
scas
or
dec
out
ret
aad
aam
addl
inc
sahf
inc
and
cmp
loopne
sti
sbb
lret
in
mov
pop
xor
and
jle
push
add
into
je
insl
lods
or
shl
mov
sbb
mov
push
push
sar
imul
inc
adc
popa
arpl
or
fwait
sub
andb
sbb
add
cmp
adc
in
fistps
mov
mov
mov
mov
lcall
xor
push
ljmp
adc
shlb
dec
xor
cld
xchg
movsl
mov
pop
mov
mov
popa
insb
call
inc
jno
std
icebp
shl
inc
mov
mov
mov
xor
push
xchg
scas
add
movsl
repz
jns
pusha
pop
addb
or
jp
mov
rcl
mov
pushf
push
test
stos
gs
repz
inc
repz
outsb
adc
sahf
lret
loope
loop
out
push
mov
push
pop
gs
cmp
mov
cwtl
mov
pop
push
jbe
jle
add
lods
xor
push
mov
add
inc
lds
sub
xchg
pop
xchg
xor
fistl
add
hlt
and
loopne
jae
pop
push
mov
loop
lahf
xchg
mov
arpl
pop
dec
push
stos
in
cmpl
xchg
push
aas
fnsave
jmp
pop
cmp
sarb
lods
pop
xchg
xor
sub
and
push
stos
icebp
sti
and
and
push
insb
in
push
mov
out
aam
sub
daa
push
xchg
pop
repnz
xchg
mov
or
lds
push
sub
pop
mov
push
jo
fnstenv
data16
cltd
sub
push
add
push
sbb
gs
pop
jne
cmpl
hlt
sbbl
xor
pop
rep
mov
pop
mov
adc
push
es
imul
mov
or
loope
cmp
or
mov
mov
push
cmp
scas
mov
xchg
js
or
sbbl
dec
xor
mov
aam
mov
movsl
movsb
or
xchg
sbb
push
sbb
test
add
jb
sbb
cmc
test
fistpll
cmp
stc
mov
mov
pusha
or
js
fsubrs
xchg
dec
xor
ljmp
daa
inc
sarb
mov
sarl
and
subl
leave
or
jb
iret
popf
mov
xor
out
fistpll
test
dec
out
and
adcl
adc
mov
jle
xor
jl
out
rcrl
push
mov
lock
inc
sub
in
std
push
push
cmp
fnsave
rolb
out
sbb
js
lcall
xchg
enter
jmp
xor
add
das
or
stos
and
lods
repnz
cmp
sti
cmc
into
cmp
pop
jle
pushf
adc
push
test
mov
sti
in
test
imul
and
aaa
and
pop
mov
cmp
es
aam
test
out
cmc
xchg
lods
dec
mov
sbb
pushf
adc
adc
loopne
inc
jecxz
mov
shrb
mov
or
repz
mov
xchg
out
dec
data16
scas
add
adc
cmp
aad
pop
sete
push
out
stc
adc
jp
xchg
xchg
mov
push
rcr
inc
dec
aam
mov
cld
movsl
in
push
pslld
nop
mov
mov
add
ja
xchg
addr16
add
mov
fdivrl
xchg
xchg
fwait
dec
cmp
loop
mov
pop
movsb
lods
cmp
adc
mov
mov
outsb
inc
cmp
fsubs
dec
inc
outsl
dec
notb
adc
xchg
adc
xorl
repz
fstpt
and
xchg
scas
xor
push
sub
mov
and
cmp
icebp
inc
int3
xor
enter
fdivrl
pushf
xchg
mov
test
cmpsb
addr16
inc
pop
loope
aaa
std
mov
mov
cmp
cmp
shl
sti
push
inc
lcall
pop
cmp
add
cmp
inc
mov
adc
cmpl
sarl
jnp
xchg
repnz
pop
je
dec
rcl
mov
sbbl
lods
mov
xor
xor
lock
adc
xchg
leave
outsb
or
lret
jnp
stos
mov
popa
popf
push
shlb
xchg
aad
imul
xchg
push
inc
sbb
mov
loop
xchg
imul
lea
out
sbb
repz
orb
repz
cmp
out
sub
out
sub
and
scas
and
jmp
and
ss
clc
mov
adc
mov
add
adc
and
mov
xchg
sub
stos
cltd
aam
fadds
daa
vphsubwd
sub
mov
xor
popa
add
jmp
daa
sbb
cmp
ret
fsubrl
dec
pop
imul
das
and
or
mov
adc
sub
scas
stos
mov
jnp
scas
cli
ss
jns
rcrl
fs
push
mov
dec
imul
lock
pop
mov
pop
adc
dec
jns
ret
pop
adc
cmp
les
int
call
push
or
xor
add
lds
jge
in
bswap
jge
outsb
inc
add
fistps
pop
cs
ror
pushf
fdivrs
push
fdivrs
mov
jb
inc
imul
stos
and
clc
push
shlb
push
movsb
rcl
call
sbb
hlt
cmp
test
adcl
jl
call
fnstsw
addr16
inc
sbb
pop
mov
xor
das
xchg
jns
sti
int3
push
xchg
leave
jg
adc
hlt
loopne
jo
es
or
clc
push
inc
mov
xchg
push
cmc
add
push
xchg
pusha
xchg
popa
ficoms
sub
mov
cmc
mov
dec
ret
inc
insl
imul
xchg
adc
mov
add
cmp
xor
in
cmpsb
push
xor
cmp
mov
std
push
push
or
pop
movl
in
cmp
aam
xchg
movsl
cmp
push
imul
fs
mov
xor
pop
lea
or
fldenv
adc
das
and
adc
lds
xorb
in
add
push
cmp
push
jmp
cmp
adc
inc
test
ds
icebp
jae
dec
push
stc
sub
push
jns
int3
ret
adc
pop
sbb
aaa
ljmp
testb
mov
out
out
test
scas
push
out
lcall
daa
dec
add
or
iret
shll
mov
das
hlt
mov
dec
loope
jg
push
cld
rorl
xchg
into
in
das
pop
gs
cltd
mov
fdivr
dec
notb
mov
inc
xor
sbb
imul
push
leave
icebp
or
and
adc
ficompl
divb
cmp
addr16
aad
xchg
jp
sbb
cmpsb
cmp
popa
mov
arpl
out
add
sbb
in
mov
data16
cmpsl
adc
jl
sub
pop
in
in
imul
sub
cmpsl
cli
rcll
mov
aaa
push
insl
aam
xor
jns
in
mov
lret
inc
pop
jp
mov
cmp
lds
and
pop
xchg
repz
jo
push
dec
loope
arpl
int3
sbbb
stc
loopne
mov
cwtl
clc
mov
mov
jne
push
repnz
push
mov
jle
test
fstp
dec
mov
scas
sub
push
push
test
push
mov
sbb
mov
test
loope
xor
outsl
shr
shl
aam
or
pop
movsb
cmp
mov
test
jle
lret
test
cwtl
pop
sarb
sbb
cmp
pop
push
int3
and
nop
xchg
inc
and
ret
lret
inc
ss
adc
fsts
push
clc
xchg
mov
pop
pop
shll
es
and
mov
adc
xchg
jl
cmp
pop
das
into
add
jno
sti
add
pushf
cwtl
lahf
ja
incb
jecxz
dec
cmc
mov
imul
cmp
loopne
lret
pop
popa
repnz
std
xchg
xchg
outsl
sub
and
mov
adc
and
xchg
call
leave
in
out
insb
jge
repz
or
inc
test
xchg
jle
in
adc
sahf
pop
repnz
fsubrl
loop
jle
pop
sti
or
adc
into
jb
mov
xchg
mov
out
push
outsl
sub
repz
int
movsb
pop
xchg
pusha
aaa
fistps
or
jb
mov
sbb
inc
imulb
sbb
std
mov
mov
xlat
jae
cmp
ss
pop
aam
sub
sbb
xor
push
shlb
dec
out
mov
pop
push
jl
sbb
addl
int
inc
test
aas
dec
push
cmc
jle
aaa
out
in
shrl
dec
inc
push
add
pop
mov
gs
pop
pushf
sub
pop
lds
mov
adc
imul
dec
or
xchg
aaa
dec
xchg
inc
sub
mov
rcrb
cld
cwtl
xor
push
cwtl
push
add
adcl
inc
pusha
ret
push
movsl
sub
popa
fistpll
jecxz
fwait
lock
movsb
or
call
adc
hlt
inc
push
test
mov
shlb
out
inc
mov
clc
fstl
dec
push
fistpll
sbb
mov
jg
xor
out
into
adc
int
xor
mov
fwait
or
loop
movl
dec
aam
ss
into
into
lock
xchg
push
or
jno
inc
add
fdivs
mov
xlat
shll
sub
lods
dec
iret
in
cmp
outsb
pop
dec
lods
ret
loopne
jnp
xor
stos
adc
jle
pusha
cmp
filds
mov
insl
cmp
test
daa
insl
inc
repz
leave
mov
dec
nop
hlt
out
jbe
cmc
lods
sbbl
add
fbld
pop
push
lods
mov
idivb
call
sbb
and
repnz
enter
dec
aas
adc
xchg
xchg
dec
xchg
adc
stos
or
mov
mov
dec
dec
ficoms
mov
imul
mov
test
sub
mov
into
or
nop
std
lret
les
sahf
out
pop
mov
xor
push
addr16
pusha
popf
push
xor
sub
mov
push
inc
sbb
ja
push
shlb
xchg
int3
pop
mov
dec
add
xchg
inc
mov
fldt
aad
sub
mov
push
fdivl
xchg
xchg
pop
sbb
jmp
cwtl
outsb
and
loopne
sub
fscale
inc
ja
add
push
push
cwtl
imul
push
pop
xchg
mov
xchg
out
cwtl
lahf
jbe
xchg
cld
and
inc
mov
dec
lcall
cwtl
lea
mov
pop
mov
sbbb
ljmp
dec
or
ret
xchg
rclb
mov
in
jno
insb
adc
mov
xchg
in
test
lcall
mov
mov
loopne
push
fwait
pushf
fidivl
mov
ret
insl
es
ljmp
xor
fistl
or
inc
mov
adc
and
sub
and
sbb
or
cmc
pop
gs
sbb
mov
xlat
std
cltd
or
sar
ljmp
iret
outsl
cmpsl
or
sub
negb
stc
xor
fsubr
je
push
add
fwait
jecxz
and
cmpsb
and
leave
and
push
sbb
jl
mov
mov
jae
mov
das
dec
xchg
test
mov
ja
mov
out
dec
int3
repz
fisttps
push
lret
xor
jge
push
add
idivb
xorb
test
cmp
cmp
cmp
out
pop
push
sbb
xchg
push
test
rclb
arpl
inc
cltd
pushf
popf
push
pop
rcrb
popf
inc
outsl
lea
movsl
jecxz
xchg
mov
mov
imul
test
popa
and
mov
stc
and
aam
mov
flds
fisubl
pop
iret
call
sub
jno
or
cwtl
test
loopne
mov
sub
adc
pusha
dec
cs
or
xor
fsubl
in
imul
lock
cmp
sbb
lods
xorl
mov
add
jb
sub
mov
cld
jo
push
sbb
adc
fdiv
cmp
ficomps
pushf
ja
ljmp
inc
mov
clc
jg
jns
loope
mov
in
ljmp
cmc
or
xorl
loopne
jbe
aad
or
adc
arpl
aas
subb
and
rolb
inc
mov
into
jno
xchg
and
scas
pop
lret
loope
loope
xchg
test
mov
jnp
fs
into
sub
sub
mov
repnz
popa
test
mov
ja
jmp
sub
pop
stc
cmp
add
fldcw
cwtl
ljmp
add
mov
xor
das
sahf
xor
iret
sub
aas
pop
imul
xchg
loope
shlb
mov
ret
mov
cmp
xchg
mov
or
jns
xchg
adc
sbb
mov
data16
add
dec
lret
inc
popf
aaa
sub
push
add
bnd
fdivs
push
and
imul
fcomp
jno
loopne
sub
inc
mov
dec
lods
xor
int
dec
sub
mov
mov
pushf
adc
push
in
out
cli
test
sbb
sti
inc
outsl
and
or
pop
inc
push
fisubrs
cltd
pop
inc
sub
aad
sbb
pop
xor
xor
call
pop
jecxz
movsl
outsl
dec
cmpsb
pop
or
cwtl
or
xor
out
pop
push
cmpsb
sbb
adc
sub
shrl
cli
gs
add
fwait
aas
mov
pop
dec
push
cmpsb
outsl
adc
mov
mov
mov
add
jae
int3
shrl
sub
cs
hlt
mov
and
mov
aad
imul
add
incl
daa
shlb
ljmp
mov
mov
out
inc
int
lods
fldl2e
sbb
sub
shll
les
lcall
mov
mov
dec
dec
cmp
xchg
sub
pop
movsl
incl
sub
sbb
rcll
fwait
out
fsubrs
dec
push
repz
fiadds
mov
test
mov
repz
mov
cmpsl
jae
fisttpll
call
cmpb
ja
dec
or
or
jno
sub
test
nop
out
jmp
pop
xchg
roll
sub
pop
or
cmpsb
rorb
stos
lcall
add
cmpsl
mov
in
je
nop
movsb
xor
jno
clc
test
call
test
call
xor
or
mov
inc
cmp
and
inc
dec
jg
push
sub
push
aas
or
push
mov
pop
rorl
inc
mov
or
xor
or
jb
lea
xchg
out
clc
cmpsl
xchg
ljmp
cmpsb
addr16
xchg
cmpb
hlt
cltd
ljmp
sub
inc
push
sbb
dec
jmp
xor
sub
es
adc
shr
push
out
int
or
jbe
mov
mov
in
cltd
mov
aam
xor
out
ljmp
pop
jmp
stc
push
test
inc
pop
xor
scas
popf
pop
dec
xlat
mov
les
lahf
pop
jno
fistl
push
mov
lcall
ffree
ja
or
lock
xor
xor
sbb
xchg
push
jnp
dec
pusha
in
pop
and
sub
and
test
mov
addr16
or
lret
jne
cmp
or
std
loop
add
mov
out
out
daa
pop
rolb
dec
orb
xlat
out
stos
stos
sbb
adc
add
sti
div
cltd
imul
pop
cmp
xor
sub
repnz
imul
inc
ret
neg
cmc
test
mov
mov
jmp
xlat
push
pop
mov
jle
aam
rcrb
adc
imul
xchg
mov
repz
add
ss
sbb
inc
cmp
inc
dec
test
in
aaa
out
repz
fstl
jo
pop
les
into
loope
adc
sbb
xor
add
pop
shll
fcompl
in
inc
ljmp
dec
fcompl
int3
icebp
push
xchg
into
or
push
or
adc
dec
stc
cmpsb
ret
enter
or
mov
mov
jecxz
add
hlt
mov
stc
add
loop
jb
fldenv
add
add
sub
rorl
push
pop
adc
mov
jmp
push
jae
in
mov
mov
jb
adc
jg
mov
clc
cmpsl
mov
sbb
cld
mov
popa
mov
push
mov
lret
push
movsl
xor
dec
lock
pop
mov
outsb
mov
inc
mov
dec
push
rcl
faddl
push
popa
dec
sbb
pop
mov
and
data16
xor
addb
jb
xor
add
mov
imul
lea
movsl
pushf
inc
pop
ficomps
sbb
push
xor
lcall
pop
rclb
inc
movsb
mov
pop
and
lock
mov
jns
ret
subb
sbb
push
pop
inc
and
inc
loopne
lahf
inc
insl
mov
lret
xor
mov
lds
movsb
push
sbb
dec
sahf
js
loope
in
mov
test
fwait
mov
div
rclb
mov
push
xor
stos
jecxz
jl
cli
push
push
je
sub
cld
lahf
pop
mov
inc
dec
push
daa
pop
inc
ficomps
mov
mov
sbb
aas
xchg
push
fwait
scas
push
fiadds
cli
loopne
repnz
sub
clc
loop
in
sub
leave
push
mov
add
loope
or
daa
xchg
xchg
push
jl
lds
loope
adc
adc
mov
pop
jecxz
sub
mov
inc
rcrb
test
cmc
leave
xlat
pop
mov
mov
iret
lods
loope
cmp
aad
inc
sbb
sub
jmp
sti
subb
mov
adc
or
add
outsl
mov
add
dec
xchg
inc
jbe
cmp
iret
inc
xor
mov
dec
cmpb
mov
cmp
adc
and
int3
inc
xchg
xlat
mov
or
and
cmc
insl
lret
pop
hlt
mov
mov
out
mov
pop
std
stos
addr16
pop
popa
shrb
idivb
repz
dec
adc
inc
enter
int3
cmp
cmp
lea
inc
sub
shrb
jge
inc
gs
jne
stos
int3
fwait
nopl
cmc
push
and
dec
add
mov
push
lods
push
cmp
outsl
pushf
mov
rorl
pop
jno
xchg
sarb
clc
or
jne
in
xor
push
jg
sub
testl
jge
pop
sub
rclb
in
aad
xlat
cmp
lods
loope
popa
fmulp
jecxz
cltd
xchg
repz
jb
fisttpll
fwait
and
xor
pop
pop
adc
push
mov
jne
popf
xchg
xchg
push
xor
mov
mov
mov
inc
push
mov
pop
dec
mov
fimull
psubw
mov
adc
insb
nop
xchg
cmp
pop
mov
inc
inc
adc
data16
jmp
fisubrs
push
cmp
mov
loopne
xor
int3
lret
and
and
test
jne
or
mov
ljmp
sbb
shl
cltd
sub
dec
shrl
push
out
jmp
scas
test
imul
xor
xlat
push
mov
pop
sbb
dec
scas
xchg
mov
adc
enter
fisubrl
cli
adc
insb
scas
sbb
test
mov
in
mov
pop
adc
jns
outsl
push
shll
loopne
in
mov
addl
xchg
dec
sti
mov
mov
jmp
jge
stos
sub
mov
fstl
xlat
pop
jb
fprem1
push
ret
rol
cmp
aad
stos
sbb
jge
fimuls
repz
and
je
bound
movaps
lods
jecxz
in
and
push
dec
jnp
dec
xchg
jge
js
pop
jae
fmull
push
popa
push
jmp
les
in
mov
test
lods
mov
sahf
xor
dec
mov
gs
dec
sbb
jmp
stc
xlat
insl
loop
push
addr16
jl
adc
cli
divb
or
dec
add
jle
js
call
daa
je
stos
dec
jecxz
xchg
jnp
pop
xlat
mov
mov
dec
mov
jne
lahf
repnz
clc
mov
pop
xlat
mov
shl
mov
add
pusha
xor
lods
loop
ret
test
int3
jae
cmp
mov
mov
mov
adcb
fsts
inc
pop
mov
movsw
ljmp
push
mov
popl
call
stos
mov
js
cltd
jmp
test
push
cmp
loopne
rcrl
movsb
fmulp
mov
lahf
orl
js
cs
jnp
sbb
pop
pop
roll
les
scas
stc
dec
je
mov
popf
add
test
xor
fiadds
jnp
push
xor
sbb
ljmp
cmp
pop
pop
cmp
cmpsl
lock
xchg
dec
push
fmull
cltd
xor
lods
cmp
sahf
ds
cld
push
inc
mov
cmp
cwtl
push
inc
scas
aas
popf
xchg
sub
stos
cmc
mov
sti
pusha
sub
jge
lret
sar
push
pop
ds
data16
cmp
inc
push
fcoms
mov
push
cmpsb
fsts
idiv
icebp
and
cmp
cld
jecxz
xor
cmp
lea
fsubrs
or
divb
sub
or
push
add
dec
or
hlt
cmp
add
push
xor
mov
adc
dec
cs
lods
mov
inc
repz
shr
lret
bound
xchg
mov
or
in
and
pop
faddp
mov
mov
pop
shlb
outsl
jmp
add
sub
xchg
cld
jecxz
ja
jno
jecxz
jbe
lahf
sub
test
or
cltd
inc
in
enter
dec
in
loopne
notl
pop
jle
gs
xchg
ss
jno
js
dec
jle
cmp
leave
out
fcoml
pushf
dec
sub
xor
icebp
adc
sub
imul
fdivp
in
push
mov
sbb
adc
mov
mov
jno
xor
dec
testl
test
scas
jno
dec
pop
in
loope
je
sahf
cmp
or
xor
daa
xor
sti
push
inc
inc
sbb
sub
testb
and
cmpsl
pop
pop
imul
test
sbb
loop,pt
or
mov
iret
nop
cmp
stos
and
sub
jle
cmpsl
or
pop
daa
xchg
sbb
les
repz
and
divl
sbb
jecxz
stc
jno
loope
pushaw
xchg
insb
cmp
pop
aad
sbb
xchg
mov
mov
pop
xor
xchg
push
outsl
fcmovbe
cmp
and
insb
xchg
and
lock
lcall
mov
pushf
jbe
outsb
shrb
dec
loope
sub
dec
mov
lret
pop
adc
mov
inc
sbb
pushf
in
mov
inc
daa
mov
iret
ds
lea
push
push
out
lea
out
jno
movsl
xchg
mov
mov
push
mov
mov
fs
or
outsl
stos
scas
sub
dec
es
dec
cmp
loop
cmpsl
imul
add
push
dec
cmc
into
lcall
dec
jnp
xlat
dec
stos
and
js
mov
dec
js
mov
xchg
sbb
fmull
xor
and
fcomi
and
pop
mov
iret
lcall
hlt
jns
pusha
insb
jno
test
push
mov
sub
push
inc
fsubrs
jmp
sti
jbe
cmp
pusha
and
jbe
outsl
cmpb
cltd
mov
add
jecxz
test
jne
sahf
loop
ficomps
inc
pop
cmp
add
add
inc
int3
dec
sbb
ss
in
repz
data16
jmp
cld
push
sti
test
imul
ljmp
fsubrl
inc
add
add
imul
inc
test
sbb
cmp
cmc
xchg
mov
mov
loopne
cmp
loop
pop
scas
push
push
std
inc
pushf
push
les
or
daa
imul
adc
cmpsb
or
insb
push
adc
ret
or
les
shlb
xchg
mov
sbb
subb
ret
xchg
repz
aad
and
std
cmp
clc
xchg
inc
jge
rep
mov
imul
and
testl
pop
mov
push
xchg
repnz
lret
rcll
scas
pop
push
popf
push
jmp
pusha
cwtl
pop
pop
mov
push
outsl
xor
xchg
in
jle
jecxz
inc
stos
xchg
mov
hlt
fdivrp
stos
adc
in
xchg
loop
sbb
sbb
out
test
dec
popa
jecxz
in
enter
subl
cmovae
xor
rcrb
sbb
dec
ljmp
xchg
dec
mov
add
xor
sbb
cmp
add
pop
add
mov
popw
lret
stos
ljmp
pop
mov
jae
rol
mov
loope
test
xchg
lea
sbb
sbb
pushf
adc
cmc
in
rclb
sbb
sub
adc
sti
das
aam
mov
mov
cs
sbb
call
test
mov
mov
add
lret
rorl
sub
xchg
mov
jmp
outsb
mov
mov
inc
jmp
pop
repz
sub
fsubp
push
mov
cltd
mov
dec
iret
insl
push
mov
mov
inc
lods
mov
xor
mov
push
mov
jecxz
stos
into
inc
sahf
cmpb
xor
repnz
mov
or
sbb
adc
lea
jecxz
outsb
push
jecxz
and
lcall
dec
sbb
sub
mov
mov
push
cmp
inc
cmp
neg
push
add
pop
jbe
or
sarl
adc
pop
shlb
ljmp
dec
push
sti
xchg
pop
fldl
adc
mov
push
xchg
loopne
and
sahf
in
add
bound
push
movsb
cmp
xchg
add
clc
pop
cmp
icebp
sbb
sbb
mov
jo
inc
jge
add
pushf
cmp
fdivrp
popa
lcall
int3
pop
add
jmp
push
fsubl
mov
cld
cmp
or
addl
jns
int
mov
out
xchg
shlb
mov
mov
jmp
mov
ja
aam
push
mov
adcb
fwait
and
clc
mov
push
jle
in
pushf
stos
push
mov
push
xchg
push
fbld
dec
lea
mov
mov
xchg
push
pushf
sub
cli
lret
jo
push
mov
mov
pop
lods
pop
jns
int3
jmp
inc
push
shrb
xlat
sub
inc
ficompl
jns
push
push
sbbl
loopne
daa
sarb
push
lcall
pop
shlb
push
sbb
sbb
lea
cmpsb
inc
push
xchg
and
sub
sub
das
xor
fmull
xor
xor
negl
cwtl
mov
pop
data16
jl
or
or
fwait
adc
pop
test
mov
jo
cmp
js
pop
nop
mov
or
negl
sub
and
mov
aam
call
and
fisttps
sbb
or
jb
xchg
jnp
mov
push
js,pt
xchg
sub
fbld
test
aaa
faddp
push
and
jb
jmp
dec
in
mov
push
pop
adc
mov
pop
sub
aam
dec
lcall
sbb
pop
push
mov
inc
cmp
or
leave
push
loope
test
aad
push
mov
or
lock
dec
inc
xchg
mov
or
dec
movsl
pop
in
mov
das
popf
push
rcrl
cmp
jmp
std
out
xlat
xor
xor
pop
xor
pop
xchg
push
icebp
shlb
jb
cmc
sahf
xor
push
lcall
stos
adc
sbb
jb
mov
fcompl
cmp
mov
add
adc
xor
arpl
les
pop
and
fdivs
dec
mov
in
sbb
inc
ss
or
xchg
mov
scas
cmpsb
push
push
sub
mov
test
jae
or
aas
fdivr
sbb
pop
ljmp
mov
xchg
add
mov
mov
jg
mov
cmp
stc
fisubrl
add
mov
insl
xchg
out
cld
outsb
add
xor
fldenv
push
push
add
mov
or
jmp
js
ss
aaa
jns
rorb
addr16
mov
dec
fcoml
test
je
mov
jl
lret
cmpsb
push
cltd
add
sub
lds
and
rcl
or
mov
xchg
repnz
jecxz
mov
mov
xchg
pop
sbb
jbe
and
ja
xchg
pop
inc
fs
bound
pop
jl
mov
fcomps
pop
lea
mov
std
lcall
cmp
je
stos
add
test
xchg
pop
mov
sbb
cld
mov
inc
es
imul
pop
xor
lock
push
jo
mov
sbb
in
ds
sub
push
mov
out
cmp
push
aam
mov
xchg
mov
or
fidivs
xchg
mov
fisubrl
push
xor
ja
inc
inc
cmpsl
aas
inc
pop
fiaddl
gs
loopne
dec
xchg
sarl
fmuls
rcll
and
bound
pop
outsl
xor
push
xchg
fwait
pop
mov
addr16
inc
cmp
mov
jl
sub
out
or
rolb
push
fbld
push
dec
jns
movsb
fists
xchg
xlat
lock
mov
es
pop
into
addr16
cmp
push
data16
add
lds
jne
ret
icebp
push
nop
rclb
cmpsb
or
mov
mov
pop
mov
rolb
sti
lea
mov
daa
sti
jecxz
loop
les
pop
mov
adc
mov
pop
test
xor
mov
xchg
mov
stc
push
xchg
ja
inc
or
push
mov
inc
fsubp
sub
dec
rol
or
je
push
add
jo
loope
mov
push
pop
imul
insl
dec
sbb
rcrb
out
xchg
xchg
mov
insb
scas
inc
mov
in
add
jne
mov
and
sahf
dec
jecxz
lds
aad
or
sbb
jge
fstps
lret
mov
mov
lret
jp
ljmp
pop
in
movsb
mov
popa
xorb
je
decb
cmp
cmc
outsl
push
cld
leave
scas
dec
mov
mov
ret
dec
ljmp
mov
xchg
popf
icebp
pop
sahf
mov
dec
in
jg
cmc
movsl
push
in
add
aam
popf
fs
cld
and
push
ret
scas
add
or
ror
pop
lods
in
xchg
push
stos
frndint
pusha
and
popa
mov
and
cwtl
mov
push
push
and
pop
cltd
xor
pop
xlat
or
sub
xchg
add
das
cltd
push
pop
addl
aam
test
rorl
push
clc
ja
shlb
out
popa
je
xchg
sbb
jae
mov
xchg
insb
jmp
rcl
push
rcr
sar
xchg
mov
sbb
adc
mov
mov
mov
leave
adc
test
add
repz
and
outsb
adc
mov
cwtl
das
daa
mov
jo
js,pt
push
movsl
mov
cld
aas
mov
insb
ffree
jecxz
mov
insl
mov
ja
or
xchg
leave
call
pop
clc
push
test
sbb
imul
rcrl
adc
xor
inc
fwait
push
shll
sub
sbb
sbb
jo
sub
orl
xor
cmp
mov
addr16
leave
push
addr16
aam
mov
aaa
loop
cltd
xor
cwtl
fldcw
mov
lret
loopne
test
pop
add
xchg
lret
and
into
mov
push
add
mov
dec
mov
call
cmp
add
jae
mov
js
push
jmp
jl
xchg
cld
movsb
dec
aas
loopne
ds
daa
jbe
rcll
imul
dec
mov
popf
rolb
xor
aad
mov
fimuls
mov
jmp
stos
ja
sbb
in
frstpm(287
cli
cs
imulb
icebp
dec
lret
ljmp
sbb
xchg
ja
clc
xlat
mov
mov
jmp
out
mov
fdivp
das
cmp
add
inc
add
pop
add
bound
mov
add
repnz
sub
sbb
xchg
adc
lahf
adc
lret
outsl
sub
mov
nop
insl
repnz
and
lret
out
nop
inc
sbb
mov
subl
out
fs
daa
add
jmp
or
cmp
pushf
cli
dec
sbb
sti
dec
xor
inc
ds
stos
jns
mov
cli
cld
mov
and
jl
sub
add
xchg
lock
cmc
lret
dec
sub
xor
popf
jb
fidivrl
push
bound
cld
sub
push
push
dec
adc
add
jns
add
addr16
adc
std
pop
mov
aaa
int3
aad
ret
inc
mov
pop
enter
add
aad
inc
pushf
sahf
jle
xor
lcall
and
adc
adc
and
push
and
divl
add
inc
imul
xorl
sub
push
jno
test
lock
or
nop
fcoml
hlt
jbe
cld
fimull
nop
sbb
kmovd
scas
inc
add
add
xor
adc
js
push
add
sbb
js
out
fiaddl
mov
test
cmp
jle
xchg
lret
mov
jnp
mov
test
mov
ljmp
rolb
jmp
js
dec
add
enter
lea
sbb
lahf
pusha
or
cmc
adc
push
xchg
push
add
fstps
mov
push
in
lods
push
dec
jecxz
or
or
fdiv
mov
xchg
data16
in
mov
fdivs
dec
jno
fstps
push
jae
test
lret
shlb
push
inc
out
test
and
mov
popf
fwait
ss
pop
sub
pop
mov
arpl
shll
in
xor
ja
sbb
and
sahf
cmp
dec
pop
dec
push
dec
xor
std
lods
mov
jp
jne
push
pop
jo
iret
loopne
into
outsb
in
ret
in
xor
into
in
sub
sbb
fisubs
adc
inc
mov
imul
aam
lods
and
insl
mov
jnp
repnz
pop
push
cs
mov
aad
roll
push
loope
cmp
ljmp
ljmp
sbb
dec
adc
push
inc
daa
jl
sbb
popa
jns
sbb
subl
push
and
mov
add
add
xchg
push
movsb
jo
shll
push
fstps
shrl
scas
outsb
lret
adc
rolb
pop
jb
sbb
test
cmp
cmp
inc
bound
jecxz
loop
sbb
fwait
push
mov
push
fstps
xor
xor
push
out
mov
sub
cmp
inc
jbe
and
add
dec
cmp
jo
movb
pop
sub
and
lods
push
call
pop
test
stos
insb
hlt
idivl
mov
ss
mov
cld
dec
std
push
inc
mov
sub
mov
pop
sbb
adc
mov
ret
movsl
and
fs
xchg
mov
jmp
icebp
addb
mov
mov
js
out
cmp
in
dec
sbb
adc
push
in
scas
scas
pop
mov
xchg
iret
sbb
lret
mov
sub
sbb
sbb
test
and
in
dec
push
xchg
cltd
adc
incb
jl
mov
in
rcrb
test
push
test
jmp
cmp
cs
ja
cwtl
inc
cmpsb
mov
dec
notb
arpl
sub
push
fcomps
push
sub
loope
dec
cmp
fs
fsubl
js
inc
sub
inc
xor
add
shll
mov
xchg
test
pusha
cld
shrl
sub
xchg
verr
fidivrs
pop
lods
or
adcl
test
inc
ljmp
ss
pop
push
fwait
xchg
das
in
loope
cld
xor
and
dec
les
or
xor
lods
daa
in
lahf
es
outsl
xchg
mov
or
aas
decl
scas
pop
lahf
xor
cmp
imul
and
movsl
sub
iret
jno
pop
jb
out
sub
imul
jmp
jne
divl
ss
xor
sbb
ret
xor
pop
mov
sub
xchg
dec
cmp
movsb
test
std
cmp
aad
test
iret
subl
inc
mov
mov
sbb
scas
pusha
jne
xchg
data16
xchg
cwtl
and
cmp
jmp
dec
out
loop
cs
cld
cli
sub
xchg
or
sub
addr16
xchg
cmp
pop
rcrl
stos
cld
out
clc
push
or
push
jmp
xchg
mov
test
mov
daa
push
test
mov
lcall
sub
xor
out
sub
clc
cmp
xor
or
dec
xorb
mov
lret
pop
mov
test
pop
testb
rclb
shlb
push
mull
test
data16
and
jne
cmc
test
pop
fwait
ljmp
mov
mov
pop
ret
xor
rclb
sub
stc
pop
mov
scas
and
lods
les
movsl
out
push
add
mov
stos
sbb
repz
loope
sbb
mov
call
jae
pushf
jnp
xor
in
push
pop
adc
aad
movsb
mov
push
xchg
aad
bound
fs
mov
mov
pop
scas
jb
out
insl
inc
mov
push
stos
idivb
mov
in
clc
shlb
push
shrb
sbb
stos
sbb
enter
stos
xchg
add
cli
sub
xor
stos
or
nop
push
fdivrs
leave
inc
mov
xchg
add
popf
arpl
orb
cmp
inc
in
dec
mov
test
arpl
ret
clc
in
pop
pop
stos
inc
outsl
lods
xlat
xor
and
sub
mov
out
lods
mov
loope
out
mov
jl
call
cmp
enter
mov
xor
popa
cltd
jne
ss
or
xchg
fucompp
sbb
mov
cmp
jb
imul
lods
jbe
jb
sub
pop
and
mov
mov
orb
mov
inc
pop
insl
jg
jbe
push
mov
mov
mov
je
xlat
mov
xchg
pop
pop
test
and
je
cmpb
in
repnz
icebp
cmpsl
lcall
and
jmp
sbb
dec
sub
push
clc
cmp
cmc
cld
orl
addl
sub
mov
int3
cmp
mov
sub
inc
xchg
loopne
cmp
inc
lods
mov
jbe
imul
in
adc
cmp
mov
pop
icebp
sbb
loop
mov
mov
jno
jbe
inc
pop
pop
add
push
jns
mov
dec
jmp
xchg
pop
add
adc
addl
xor
sbb
xchg
push
push
inc
jp
mov
pop
aam
mov
fsubl
daa
cwtl
mov
jns
insb
dec
dec
sub
add
fistps
fucomi
imul
ret
stos
sub
sub
jne
in
mov
cwtl
pop
ret
mov
dec
mov
mov
imul
pop
adcl
adc
jg
mov
inc
mov
mov
and
fistl
mov
imul
push
adc
lcall
leave
sbb
and
imul
jne
loopne
jbe
mov
bnd
xor
jge
aad
pop
arpl
lret
or
cmpsl
subb
xchg
or
fsubrs
hlt
mov
push
enter
mov
mov
push
and
cli
mov
xchg
andl
loopne
dec
add
jno
imul
dec
xchg
xlat
mov
mov
outsb
mov
std
push
sub
imul
jb
or
add
mov
push
sub
push
ss
adc
sub
jmp
cltd
adc
mov
mov
paddusw
push
daa
popf
clc
mov
in
mov
bsr
dec
cmp
and
dec
and
jno
mov
out
lret
idivl
sbbl
dec
test
mov
pop
xor
in
adc
mov
xlat
inc
or
pop
pop
or
add
cs
ret
cmpsb
xor
cwtl
pop
sbb
dec
fsts
cmp
and
or
repnz
jmp
les
jmp
jnp
repnz
test
mov
dec
lret
add
popf
shl
mov
dec
pop
add
add
je
mov
or
xlat
inc
or
aaa
mov
shlb
shrl
nop
xchg
das
je
jae
and
push
aad
add
sub
dec
jae
and
fldcw
bnd
std
cwtl
sbb
or
push
incl
add
jmp
mov
cmp
outsl
inc
es
nop
orb
je,pt
cmp
or
pop
mov
mov
sahf
inc
xlat
cmp
or
pushf
loop
out
fimull
jle
nop
mov
mov
and
add
push
lcall
fwait
jno
out
fisubs
call
lods
mov
cld
lret
aas
pop
aaa
out
pop
xorl
cmp
push
mov
cs
jbe
mov
js
and
adc
jecxz
pop
push
xchg
push
dec
int3
mov
jg
cmp
xchg
in
push
lock
mov
add
jmp
pop
divl
test
jnp
cwtl
fxch
xor
lcallw
lret
or
add
ljmp
shrl
jge
testb
mov
popf
jle
in
or
test
cli
ljmp
mov
mov
xor
jg
sub
dec
mov
xchg
push
insl
dec
cld
inc
add
ficompl
pop
fistps
into
filds
ret
xchg
rclb
into
cmc
lret
jns
call
gs
jmp
fstps
add
mov
sub
cli
cmp
xchg
pop
stos
pop
scas
sarb
loopne
dec
or
clc
leave
jl
inc
outsb
shll
mov
jb
test
les
sub
mov
add
adc
fwait
xor
popf
dec
jmp
xor
xorb
test
pop
dec
mov
jecxz
aam
pusha
pop
fbld
pop
mov
xor
in
or
sub
roll
test
roll
mov
sbb
sub
and
nop
inc
in
or
mov
test
idivl
test
mov
xchg
mov
ror
inc
rcrl
scas
mov
cmp
and
sub
addl
inc
rorb
adc
xchg
mov
lret
adc
pop
xor
es
int
jo
cwtl
ds
sbb
and
stc
pop
loope
pop
ja
ljmp
insl
hlt
aas
daa
imul
mov
stc
daa
pusha
je
mov
sbb
sbb
xor
mov
daa
pusha
fs
cmpsl
jne
and
push
dec
orl
mov
mov
test
mov
loopne
repnz
push
mov
pushf
push
sub
push
cld
fsubs
mov
mov
push
push
xor
cltd
lcall
shrl
adc
push
fisubrl
mov
xchg
movsl
jg
inc
in
out
js
cmp
ja
popf
jo
mov
push
pop
cwtl
fmuls
iret
iret
adc
imul
xchg
push
bound
sahf
push
adc
imulb
loopne
test
dec
ret
inc
and
pop
xchg
pushf
jns
and
ret
mov
dec
leave
mov
pushf
test
or
push
mov
in
fdivp
xchg
xchg
in
loop
adc
imul
lods
je
xor
or
push
mov
addr16
xchg
add
ds
jo
sub
lcall
pop
or
ja
fwait
lahf
add
mov
les
sahf
jns
xchg
push
fidivl
push
adc
daa
out
mov
mov
push
icebp
mov
pop
mov
mov
decl
jmp
mov
lods
ja
cmpsl
lock
jns
pcmpeqd
fbld
mov
fsts
jne
imulb
enter
fwait
aad
lret
in
stc
aam
push
outsb
int
fdivrl
or
jmp
pop
jl
fidivrl
leave
orb
mov
imul
or
sub
mov
xchg
pop
mov
out
mov
adc
xchg
cmpsb
pop
mov
xor
xor
lea
mov
popf
pop
push
mov
xchg
lcall
imul
imul
lds
mov
or
lods
ljmp
pushf
es
push
in
lret
mov
cmp
pop
dec
inc
mov
hlt
adcl
cmp
div
les
popa
rcr
in
rorb
mov
jmp
fs
dec
mov
out
sbb
xchg
pusha
or
lea
movsb
das
inc
decl
scas
orl
dec
fstpl
sahf
fistpl
sbb
imul
into
movsb
nop
decl
test
inc
insl
dec
xor
das
scas
sarl
dec
mov
dec
arpl
xchg
enter
pop
sahf
cmpsb
add
jb
stc
sbb
leave
pusha
dec
ret
xor
push
cmp
xor
lahf
xchg
leave
dec
pop
in
movsl
or
mov
cmp
test
and
pop
or
into
lcall
dec
iret
dec
add
stos
dec
cmp
cmp
daa
inc
adc
adc
dec
jl
jmp
add
loopne
test
js
jle
jg
movsb
adc
push
add
xor
sub
gs
or
jb
pop
paddd
or
sub
lods
ds
lret
xlat
dec
xor
je,pn
and
xor
out
sarb
ficompl
dec
mov
or
add
pop
push
mov
xchg
movsb
cs
dec
adc
inc
or
jbe
inc
push
adc
shll
mov
lock
std
pushf
and
jg
cmp
cltd
pop
pop
in
ja
sbb
push
xor
cli
fildl
mov
add
ljmp
int
sbbb
cmp
test
lcall
jmp
lods
shlb
jecxz
push
push
adc
xchg
mov
mov
jg
cmpsb
and
dec
loope
pop
lahf
adc
out
test
adc
sub
push
sti
and
leave
out
xchg
push
lret
inc
jle
mov
enter
jns
xchg
sbb
sbb
or
jle
addr16
fldenv
enter
dec
movsl
andb
test
or
push
fimuls
sbb
push
xor
je
js
repnz
sub
add
jo
std
pop
lret
gs
sahf
xchg
mov
pop
lret
cmpsl
mov
je
std
inc
scas
loope
orl
xchg
cmp
fnstcw
pop
movsb
movd
xchg
mov
mov
lcall
test
loopne
dec
fwait
xor
movsb
jmp
imull
int3
loop
mov
add
js
lret
adc
fwait
xor
push
mov
lds
push
push
inc
inc
test
into
pusha
mov
xor
cmp
push
popa
mov
xlat
pop
and
mov
inc
jp
jl
hlt
inc
test
sar
and
xor
cmp
fsubl
mov
add
sub
sbb
pop
mov
fsubp
scas
push
and
jae
mov
enter
and
out
jge
add
mov
scas
lcall
inc
xchg
mov
xchg
inc
loop
jae
xchg
xlat
add
xor
add
cmc
jecxz
inc
imul
mov
xchg
sbb
ss
dec
add
and
or
es
push
in
adc
jnp
xchg
mov
test
mov
leave
push
or
outsb
fmulp
subl
mov
jle
sbb
or
mov
jle
sub
push
pop
out
mov
add
or
dec
cli
push
cmpsl
xchg
jp
insl
cmp
cmpsb
pop
adc
sarl
or
sbb
sbb
pop
mov
lds
sub
inc
call
mov
nop
fisttps
cmp
pop
xchg
popf
ss
push
xchg
out
mov
jb
or
testb
cmc
push
pop
in
fs
pop
pusha
mov
in
mov
sub
mov
shl
icebp
sti
stos
dec
xor
repnz
fdivs
popa
iret
fwait
data16
daa
repz
fists
lods
into
clc
jno
add
adc
mov
fdiv
fmul
lea
cmpsl
mov
outsl
pop
stos
rcll
ret
mov
adc
inc
mov
push
adc
popa
jl
scas
cmp
outsl
mov
sbb
imul
mov
jnp
mov
xor
scas
push
push
pop
xor
lock
sub
imul
mov
scas
out
push
into
push
lcall
or
pop
inc
jp
pop
sarl
fsubrp
sbb
push
cmpsl
sub
adc
mov
mov
mov
pusha
fs
popa
mov
pop
imul
in
mov
push
aas
inc
xor
enter
iret
jecxz
xorl
js
mov
adc
fwait
jmp
jmp
mov
lods
mov
and
jecxz
mov
add
out
fisubrs
sbb
rcll
push
nop
cwtl
aaa
mov
lock
add
sbb
cmp
jns
movsl
mov
add
dec
mov
jecxz
subb
mov
xor
rcrb
movsl
pop
sbb
in
jp
mov
jp
ja
cmp
lods
inc
adcl
scas
imul
xchg
mov
fwait
imul
adc
and
mov
test
push
add
lret
fcoml
into
dec
or
mov
jl
adc
fdivrs
sub
cmp
jge
in
mov
cmp
mov
in
ficomps
adc
ret
xor
stos
lds
mov
insb
xlat
aaa
jns
cli
pop
int3
hlt
cmp
jns
or
jmp
faddp
xor
jp
adc
daa
out
dec
loop
cli
pop
lea
mov
inc
inc
sbb
cmpsb
shll
push
mov
or
sub
scas
pop
mov
lcall
cmp
inc
sbb
adc
loopne
push
mov
pop
inc
dec
mov
xchg
push
adc
cmpb
mov
leave
or
ljmp
call
mov
iret
sub
cmp
sub
or
mov
cmp
xor
movsb
fldl
jne
pop
sub
xlat
or
stc
and
and
or
nop
mov
mov
aas
push
ljmp
adc
or
imul
cwtl
dec
sarl
mov
lods
ljmp
fs
rol
sbb
fistps
adc
mov
mov
fildll
stc
insl
sahf
int
cs
out
xor
repz
sbb
sub
cmpsb
mov
sub
cli
arpl
lcall
fs
loopne
mov
repz
mov
mov
xchg
jne
dec
out
negl
pop
cmpsb
sysenter
xchg
jl
jmp
jg
test
mov
mov
mov
fistl
int
and
in
cs
jo
adcb
or
pop
push
fwait
dec
movsl
mov
out
or
sub
gs
test
jg
mov
ja
pop
bound
mov
nop
jg
jecxz
addr16
scas
rclb
call
lods
dec
mov
jb
adc
imul
lock
jmp
mov
es
xor
push
lds
jne
daa
aaa
mov
or
out
mov
cmc
dec
scas
repz
inc
icebp
or
push
dec
stc
in
gs
fimuls
iret
or
rcll
jbe
xchg
dec
lahf
xchg
cmp
outsb
popa
sahf
cli
jl
insl
outsb
and
mov
lret
test
mov
push
add
lods
insl
inc
push
int3
int3
imul
sub
lods
into
jl
mov
pop
jecxz
push
xor
mov
cmp
insb
jae
mov
ss
out
lret
inc
xchg
cmpl
sub
dec
add
jecxz
lds
inc
jo
hlt
jl
sub
loop
and
ret
jge
inc
mov
lods
gs
fwait
dec
rorb
mov
xor
pop
jecxz
sti
sbb
shll
sub
ja
jo
xchg
dec
cmpsb
mov
dec
in
dec
pop
movsl
dec
mov
sub
push
jno
cmp
xchg
xchg
movsb
insl
xorb
pop
sub
loopne
pop
sbb
outsb
mov
rcrl
push
aad
je
les
daa
fisttpl
test
mov
pop
sahf
or
mov
xchg
xor
cmp
add
or
out
movsb
adc
pop
sub
popa
hlt
mov
inc
sarl
cmp
xchg
inc
dec
ret
dec
pusha
nop
je
adc
xor
popa
xchg
and
in
fidivrs
bound
cmp
jle
or
xor
rcll
inc
es
mov
push
popf
cwtl
mov
jbe
popa
push
sbb
scas
mov
rclb
pop
mov
fs
pop
sbb
movsb
push
test
cli
and
jg
pop
and
adc
mov
and
pop
jmp
es
movsb
addr16
addb
fildl
icebp
mov
sub
pop
pop
mov
mov
into
lds
sub
adc
pop
push
cs
inc
addl
loope
jg
loope
xor
jecxz
lock
cwtl
addl
and
pop
cmp
leave
enter
rolb
imull
pop
lcall
xchg
push
insl
pop
mov
into
adc
ds
xor
test
ficoml
xor
jl
mov
sbb
icebp
xchg
mov
pop
cmpsb
sub
das
scas
sbb
push
iret
movzbl
pop
xor
fisubrs
pop
mov
mov
push
cli
call
mov
out
push
cmpsb
aam
mov
and
xchg
push
push
das
push
movsl
enter
mov
dec
pusha
inc
sbb
pop
sub
add
mov
daa
cli
int
dec
mov
test
iret
out
adc
lahf
inc
sub
mov
pop
xchg
iret
dec
ljmp
lcall
idivl
push
cltd
mov
into
cmp
and
loop
push
imul
lods
scas
jle
mov
mov
ret
jns
or
push
push
sub
call
xchg
jne
hlt
or
int
cmp
cmc
mov
or
mov
popa
cli
inc
mov
sub
mov
lock
icebp
pop
sub
mov
dec
subb
jge
adc
jae
ss
daa
mov
cmp
es
mov
xchg
xor
and
xor
jne
and
orl
aaa
mov
mov
fsubr
mov
rcll
xchg
fcmovu
inc
mov
cltd
aas
sub
lret
stos
popl
aaa
mov
out
cmp
xchg
jecxz
jle
push
inc
push
ret
push
cli
xchg
xor
test
out
mov
adc
pusha
stos
adcl
jne
jle
cli
loope
cltd
call
or
inc
loopne
aaa
rcll
jb
or
sbb
pop
xlat
fs
ds
bound
sub
pop
das
jae
inc
xchg
mov
push
inc
sahf
imulb
cmp
es
inc
push
cld
mov
mov
js
ljmp
lods
or
clc
aam
mov
lea
or
aaa
sahf
and
xchg
dec
in
mov
andl
xchg
or
mov
adc
push
pop
mov
sbb
cmpsl
sbb
dec
lock
loope
pusha
xchg
shll
mov
rorl
pop
adc
shl
sahf
cli
xor
sbb
dec
add
stos
pop
dec
push
hlt
test
adc
decb
and
jg
push
or
mov
jge
sti
sbb
add
mov
adc
pop
in
xor
scas
jp
adc
inc
ja
popf
mov
sarb
aas
dec
lea
jge
push
jl
rcll
xchg
cltd
mov
fwait
test
enter
cwtl
cmc
jg
cwtl
inc
cwtl
xor
xchg
cltd
daa
inc
mov
das
pusha
loop
lock
xor
cld
adc
fadds
mov
subb
or
push
dec
arpl
pusha
lds
pop
fdivrs
jbe
adcl
movsl
enter
adc
and
es
xchg
sti
bound
iret
imul
cmp
push
je
jae
leave
add
fldl
push
inc
mov
or
scas
ljmp
xchg
cmp
add
or
cwtl
jmp
mov
xorl
arpl
popa
inc
lea
adc
rcl
adc
pop
jg
cmpsb
rorb
inc
into
mov
xor
and
in
mov
and
dec
imul
das
or
fcoml
les
add
mulb
enter
pop
pop
test
mov
jle
dec
add
inc
jmp
jmp
out
add
or
test
mov
lret
mov
das
insl
adc
shrb
mov
cmc
test
lahf
stc
xchg
inc
push
mov
jbe
sarb
mov
int3
pop
pop
cmp
lcall
inc
mov
test
cs
adcl
lea
cmpsb
jg
lea
js
xor
ret
andb
mov
add
arpl
jg
inc
movsl
in
pusha
jg
cmpsb
mov
xor
jp,pn
es
add
movsb
iret
lret
adcb
jmp
stos
mov
sarl
mov
adc
insl
mov
mov
rcrb
push
sbb
mov
push
mov
pop
mov
mov
cs
cmp
lods
add
fistpll
loopne
push
dec
mov
in
pushf
inc
cmpsl
pop
lods
int
jo
nop
dec
jl
cmpsb
hlt
js
pop
aam
in
sbb
popf
jge
lret
xor
fistpll
xchg
jno
lea
or
leave
add
xor
pop
subl
ljmp
or
inc
ficompl
or
sbb
sub
push
add
repz
js
mov
push
fldt
add
dec
shrb
pusha
or
outsl
add
lret
mov
push
xor
mov
sub
movsl
jb
sbb
and
hlt
pop
inc
adc
popl
hlt
fsub
loopne
adc
rorl
cmp
int3
push
sti
imul
scas
aaa
cwtl
dec
mov
gs
and
adc
jae
mov
push
add
loope
test
cld
into
sbb
adc
mov
sub
rcrl
push
test
stos
mov
dec
pop
add
test
xchg
hlt
push
cmp
dec
clc
mov
mov
cs
pop
ss
std
test
cmpsl
cmpsl
jmp
je
xchg
cmp
mov
roll
xchg
push
popf
push
sbb
clc
rorl
mov
mov
lret
stc
and
enter
call
mov
fcos
sub
mov
ffreep
je
imul
and
ja
and
int
xchg
push
mov
insl
cmp
sbb
cmp
and
outsb
repnz
scas
sbb
xchg
xor
pop
es
packsswb
inc
sti
lds
dec
and
mov
sti
dec
ror
add
aaa
iret
pop
xor
pop
ret
testl
and
cs
fwait
jl
push
or
push
cli
cli
and
cmp
or
cld
cmp
jno
cmp
and
sub
dec
test
lea
js
sti
sbb
je
movl
sbb
aas
iret
pop
sbb
ss
scas
movsb
jns
adc
or
lcall
xchg
and
jne
popa
mov
add
sub
inc
addr16
lcall
out
jecxz
repz
sbbb
gs
inc
dec
in
incb
lods
mov
jbe
jae
push
mov
icebp
push
pop
mov
notb
add
push
push
enter
add
movsl
hlt
or
sbbb
add
mov
push
dec
nop
push
and
cmp
shll
lds
cmc
scas
sbb
aaa
mov
mov
imul
dec
cs
mov
cmp
fdivrs
push
xchg
hlt
ret
mov
popa
insl
fstl
in
ljmp
push
jg
jbe
xcrypt-ofb
cmpsl
sub
push
pop
push
cmp
mov
mov
inc
push
lods
stos
daa
mov
incl
movsl
popa
and
dec
jge
mov
lcall
shrb
mov
loope
mov
mov
mov
dec
movl
lret
fnstsw
cmp
xor
adc
dec
icebp
adc
nop
sbb
push
mov
ss
icebp
jae
jae
cmp
jle
ret
icebp
jnp
rol
cmc
imul
imul
sub
dec
rcrb
mov
pushf
and
ja
jo
lret
pop
imul
sub
cmpsl
or
hlt
repnz
je
and
js
push
ret
iret
cmp
jg
sbb
cld
xor
xor
addr16
xchg
jns
cmp
inc
or
sbb
pop
xchg
lock
ss
bound
cs
out
loop
test
push
stos
clc
sbb
test
fimuls
push
in
leave
sub
sbb
imul
push
sub
sbb
cmpsb
xchg
mov
mov
js
pop
fsubs
and
xchg
bnd
push
mov
sub
aam
push
fisttpll
cmp
push
sbb
and
add
nopl
fucom
js
mov
lret
cmp
sbb
mov
cmc
jno
inc
lods
cmpb
sub
inc
dec
rcrl
idivl
sub
imul
jae
mov
cmpsl
stos
pop
mov
add
test
stos
inc
inc
mov
ret
movb
dec
mov
jg
cli
imul
test
sbb
lret
jo
add
inc
sbb
add
scas
iret
test
or
mov
sub
push
jne
cmc
adcb
pushf
xchg
and
dec
cs
scas
sbb
push
add
sarl
inc
or
push
and
lahf
daa
pusha
call
adc
mov
push
and
push
cmp
lahf
and
mov
pop
sti
pop
repz
add
mov
loop
cmpsb
imul
sbb
push
mov
lock
cwtl
movsb
enter
jg
adc
ljmp
mov
lods
mov
das
xchg
xlat
mov
mov
mov
jnp
sbb
mov
insl
fldcw
sub
repz
push
and
sub
mov
test
jl
daa
cmp
lret
test
cs
dec
inc
sarl
loopne
adc
pop
sub
int
mov
inc
jns
jmp
dec
ja
lock
dec
push
lods
dec
outsb
lret
cmp
fisubs
xor
pop
add
cmc
push
daa
add
daa
dec
sub
loopne
xchg
inc
pushf
xchg
xor
pusha
decl
cmp
hlt
add
fldl
jmp
sbb
orl
das
cmpl
scas
sub
test
jns
cmc
jno
or
orl
cmc
fisubrs
popa
pop
and
push
adc
dec
xor
aaa
sbb
mov
sbb
mov
jbe
sbb
lock
cld
aam
fs
sub
andb
loopne
cmp
lahf
mov
icebp
push
aad
xchg
and
push
push
xchg
inc
je
add
and
cs
std
in
dec
pop
pop
rclb
dec
repnz
sbb
push
dec
or
xchg
std
adc
shl
and
fistpl
cmp
jne
loope
cmp
add
sbb
into
xchg
xchg
or
cmp
aaa
pop
adc
lret
out
adc
push
gs
or
push
pop
sub
push
inc
in
scas
lock
shll
test
sbb
add
push
sub
jecxz
jge
je
je
jg
lret
shrb
into
jge
fisubs
cwtl
addr16
dec
xchg
xchg
data16
repz
push
mov
xchg
imul
cwtl
or
and
lret
xchg
or
dec
rcrb
add
int
aam
loop
jns
cmpsb
xor
add
xchg
jne
mov
decb
push
cwtl
sidtl
cmc
sarb
cltd
xchg
icebp
je
push
outsl
dec
dec
adc
inc
jno
test
out
or
dec
xchg
push
int
pop
jp
test
inc
clc
mov
orl
inc
arpl
pop
jecxz
and
mov
ret
pop
cmc
adc
xchg
xor
std
mov
jp
adc
mov
test
pop
inc
push
or
jg
add
in
fstp
neg
in
and
or
imul
gs
sub
and
jae
stc
lea
cmpsb
aad
or
cmpsl
pop
loopne
xchg
add
push
fadds
mov
stos
mov
imul
sub
jmp
lret
ret
ds
mov
and
mov
addl
mov
jbe
subb
inc
in
and
adc
clc
ds
in
fwait
shrb
fs
jmp
sti
test
inc
ss
mov
mov
sbb
push
mov
sub
mov
enter
mov
adc
cmc
pop
out
es
jae
in
div
xchg
mov
clc
cmp
repnz
and
movb
subl
xlat
pop
fistpl
nop
lods
cmp
dec
fsubrp
xchg
mov
add
repz
cmp
jmp
sbb
jno
xor
loope
mov
mov
push
mov
cmp
sbb
loopne
cltd
dec
pop
mov
add
jns
cmpsb
and
cmp
xchg
mov
mov
xor
mov
push
push
mov
imul
and
cli
ljmp
add
fsubr
jnp
lahf
inc
cmpsb
and
and
cld
cmpsb
in
div
ds
stc
je
inc
stos
loop
pop
sbb
test
seto
gs
rclb
pop
sub
inc
rol
loopne
and
pop
sub
add
dec
or
jecxz
jecxz
lock
fsub
fadd
mov
xchg
loopw
xorb
enter
push
das
ret
leave
test
aam
mov
js
pusha
adc
dec
decb
je
add
ja
jle
aaa
jmp
ja
aaa
jae
xor
out
jne
add
fisubs
out
push
dec
in
orl
les
repnz
sbb
and
and
lds
xor
add
inc
and
clc
mov
daa
jecxz
je
or
sbb
cld
stos
xchg
pop
out
call
sub
cli
lahf
jne
jecxz
push
call
gs
into
xor
fnsave
mov
ja
push
aaa
repnz
nop
ss
jns
ja
jne
pop
iret
mov
inc
sbb
xchg
push
cmc
loop
sahf
cs
movsb
add
cmp
sub
pop
inc
sbb
inc
mov
xor
in
les
scas
pop
cmp
hlt
loopne
inc
ds
xlat
data16
and
or
xorb
es
xor
dec
pop
xchg
fildl
jmp
repnz
das
outsb
lahf
fmull
inc
repnz
int3
lret
movsl
int3
imul
or
xlat
jge
fwait
dec
sbb
addr16
lcall
repz
xchg
xor
scas
std
mov
xor
xor
pop
mov
cwtl
pusha
dec
and
sub
push
mov
ss
jmp
clc
pop
inc
push
push
lods
push
ss
loop
push
lahf
dec
sub
mov
mov
test
ficompl
pop
jge
imul
popa
test
outsl
jmp
stos
cmp
stc
in
add
les
repnz
add
mov
les
lcall
dec
lcall
loope
aas
imul
test
cmp
in
push
lahf
mov
pop
flds
stos
add
pop
icebp
rolb
mov
jle
shl
xchg
cmp
cmp
into
aaa
fidivrl
mov
movsb
jae
sbb
mov
sub
icebp
cld
fisttps
or
jecxz
adcb
shll
sub
sahf
or
or
mov
div
std
jnp
cli
clc
pushf
sub
xchg
outsb
test
iret
xlat
sti
lds
call
movb
sub
mov
or
stos
mov
adc
call
bswap
arpl
and
scas
lds
jnp
jno
xor
arpl
adc
shrl
add
xchg
lahf
out
rorl
loop
insl
add
push
push
pop
es
std
cmpsl
cwtl
mov
out
pushf
mov
notb
adc
mov
xor
pop
mov
pop
xorl
push
sti
cli
mov
xchg
pop
stos
das
pop
call
sahf
fistpl
mov
add
mov
jns
call
sbb
std
out
js
lahf
dec
cwtl
adc
adc
push
lcall
inc
jnp
adc
mov
sub
js
inc
scas
xor
aas
mov
movsl
or
xor
outsl
loope
testl
sbb
mov
arpl
and
fstps
mov
popf
cmp
push
jno
movsl
pop
in
pop
add
add
add
jbe
lahf
int3
enter
adc
sbb
test
je
mov
xor
data16
fists
and
lret
data16
ret
cwtl
add
push
add
call
data16
gs
mov
fneni(8087
cmpsb
mov
add
sub
testl
jge
movsb
xor
out
pop
insb
cld
or
push
inc
jns
lahf
inc
jnp
xchg
mov
xchg
std
mov
adc
inc
and
push
sub
xchg
nop
pop
cld
xchg
in
mov
lods
testb
lahf
jmp
and
fdivr
pop
jo
sti
lods
mov
in
push
mov
sub
frstor
dec
pop
adc
add
dec
je
out
lahf
or
xchg
or
sbb
sub
cmp
out
mov
out
enter
jmp
add
ret
loop
data16
or
mov
push
test
push
pop
mov
ds
xlat
imul
popa
or
lods
jae
mov
mov
sbb
outsl
sub
flds
inc
jbe
and
dec
pop
pushf
fwait
xor
mov
pop
das
les
mov
inc
sbb
jo
imul
out
dec
cmp
lahf
outsb
int3
or
fdivrl
sub
divb
mov
sbb
sub
mov
jb
das
push
sub
sub
mov
inc
dec
pop
sahf
decb
adc
aaa
nop
mov
add
cltd
sub
cmp
xlat
jecxz
test
jecxz
in
lock
jb
jbe
add
insl
lcall
cmp
stos
fs
jge
sbb
imul
shrb
mov
movb
jo
adc
std
popa
dec
and
test
dec
push
sub
push
imul
daa
adc
cmp
test
cmpsb
out
lret
lds
xchg
mov
arpl
sbb
int3
mov
xlat
je
pop
mov
adc
out
mov
stos
xchg
inc
dec
imul
inc
lret
orb
or
lret
loop
std
push
xor
sbb
mov
dec
lock
stos
ficomps
fistps
sti
ret
mov
outsl
add
divl
jp
out
and
out
cmp
xchg
out
imul
nop
cmp
inc
enter
and
int
sarl
stos
sub
out
xchg
sub
sbb
cmp
in
push
mov
cld
arpl
cli
sarl
shrl
mov
mov
mov
push
ret
push
mov
jg
cmp
lods
leave
pop
mov
addb
mov
lahf
lret
xchg
dec
pop
out
movsb
addr16
cmpb
iret
bound
inc
pop
loope
xor
gs
inc
inc
adc
sarl
ret
xor
fildl
inc
mov
xchg
sbb
daa
jg
pusha
test
imul
mov
inc
lds
push
stos
out
dec
sahf
add
adc
sub
es
inc
popf
xor
popf
ja
inc
pusha
mov
outsb
gs
mov
fwait
and
stos
bound
jae
adc
jns
loop
add
adc
cmp
lods
dec
pop
lds
mov
mov
lret
aam
stos
ret
outsl
push
pop
mov
mov
lcall
mov
sti
in
pop
ss
jl
daa
aas
mov
push
cli
jo
es
lds
pop
inc
cwtl
cld
adc
popa
int
mov
xchg
xor
repnz
fsubrl
xchg
xchg
stc
xchg
jno
dec
mov
aam
add
bound
sub
loopne
jb
and
jne
mov
mov
out
pop
dec
js
cmp
mov
cltd
or
aad
cmpsl
jle
fmulp
pop
imull
aas
xchg
test
iret
sbb
cmpsb
out
mov
mov
in
push
and
xchg
xor
jbe
pop
cld
mov
cltd
pop
mov
fs
mov
flds
lret
out
or
jmp
inc
adc
dec
incl
dec
pusha
jecxz
jl
fisttpll
outsb
adc
add
cs
mov
sahf
out
outsb
mov
sbb
out
imul
sub
ljmp
dec
lods
fucom
xchg
jne
lods
rolb
cmove
int3
and
push
mov
mov
push
mov
popa
xlat
dec
rorb
pushf
dec
fnstenv
sub
and
push
add
xor
scas
or
repnz
and
ljmp
mov
jle
aad
jae
decb
jg
jmp
dec
test
out
mov
xchg
mov
rcrl
mov
pop
sarb
or
pop
sbb
jge
leave
wbinvd
ud0
inc
mov
add
sarl
bound
popf
bound
xor
movsb
sub
ljmp
cld
add
and
test
lret
sub
mov
mov
dec
aad
daa
cmp
cmpsb
insl
xchg
jbe
dec
mov
ja
arpl
xor
loopne
mov
push
xorb
ja
ds
loop
or
cmpsb
dec
jmp
xchg
arpl
xorl
sbb
add
cmp
sbb
sahf
hlt
xorl
pop
xor
rolb
adcl
jmp
lahf
mov
ds
push
adc
std
ret
mov
dec
add
sbb
mov
push
fistps
int
test
adc
std
repnz
lods
imul
dec
and
rcrl
sub
lea
fmul
fisttps
push
repnz
aaa
inc
or
bound
pop
xchg
xor
cmp
pop
inc
outsb
pop
jecxz
adc
loopne
push
push
push
jmp
mov
mov
mov
pop
aaa
add
xchg
int
push
push
jecxz
and
pop
jmp
jae
iret
mov
clc
inc
pusha
out
imul
ret
push
xchg
push
mov
leave
cwtl
test
jecxz
sub
jmp
mov
add
in
cmp
insl
push
ficompl
sub
int3
xor
inc
dec
adc
inc
mov
pusha
inc
xchg
mov
jmp
jo
daa
roll
xchg
xor
and
and
enter
xchg
insb
lods
xor
imul
pop
mov
test
pop
rolb
test
jmp
bound
dec
lea
clc
cli
aaa
pop
pop
popf
xor
test
mov
add
iret
jo
popl
nop
pop
xchg
lock
bound
das
das
int3
xchg
outsb
stos
cmp
dec
data16
test
pop
jecxz
gs
push
cmp
sbb
movsb
ja
cwtl
adc
mov
outsl
ret
lods
mov
or
clc
jnp
xor
add
int3
push
add
cwtl
mov
jnp
mov
out
loopne
add
inc
push
adc
mov
cwtl
cmpb
xchg
enter
mov
imul
insb
cmp
pushf
test
xchg
fsubl
icebp
dec
lahf
pop
fs
das
mov
adc
fisubs
inc
pop
jg
mov
loopne
mov
xchg
xor
lcall
dec
stc
pop
xor
pop
iret
ljmp
das
cmpb
adc
shll
iret
sti
stc
in
jg
inc
xchg
inc
mov
pop
stc
xlat
xchg
mov
jl
imul
and
icebp
dec
fmuls
mul
adc
stc
outsl
mov
push
out
push
mov
push
pop
test
and
in
divb
jnp
sub
push
sbb
mov
dec
mov
mov
push
int3
cmc
std
loop
pop
inc
sub
adc
sbb
dec
popf
mov
ds
dec
lahf
push
push
test
inc
mov
push
push
push
sahf
xor
jle
jp
pop
mov
mov
aam
jmp
fisttps
fcoml
or
cmp
insl
movsb
inc
fiadds
out
fcomip
cmp
call
loope
pusha
pop
cmpsb
dec
aam
jle
inc
aad
add
or
lret
orb
jmp
js
cmp
jmp
inc
sub
jp
cwtl
in
mov
jmp
aaa
mov
testl
aad
add
sub
sub
mov
cmp
cli
jle
jg
ljmp
add
bound
mov
pop
push
inc
mov
jmp
fldt
jnp
inc
rorl
jp
sbb
in
add
mov
jb
roll
lock
lock
sbb
scas
jno
test
jl
sbb
dec
mov
int
fstp
mov
call
or
xchg
xorb
ljmp
ja
push
or
dec
scas
idiv
icebp
cmc
jl
adc
or
xchg
rolb
cmp
rcr
inc
push
mov
cmpsb
js
jb
adc
std
leave
test
push
sbb
xor
jg
mov
sub
cld
movsl
xor
fldl
mov
lock
inc
and
insl
add
adcb
addr16
jp
ja
xchg
lretw
ja
lock
mov
lret
xor
sti
arpl
or
arpl
frstor
ret
add
inc
lcall
je
dec
nop
imul
setl
addr16
imul
xchg
daa
imul
dec
fsubl
mov
mov
dec
sub
cli
cmp
stos
mov
cltd
fstp
sbb
mov
push
mov
adc
mov
imul
insb
mov
int
outsl
xor
sbb
js
sarb
push
js
in
mov
repnz
mov
add
push
in
icebp
outsb
add
dec
arpl
push
pusha
lret
sub
jo
repz
dec
inc
daa
mov
mov
fdivs
fildl
inc
repz
sbb
out
pop
lret
scas
or
in
jbe
mov
test
cmc
cltd
shlb
and
adc
rcr
push
mov
movsb
sti
jecxz
xchg
icebp
push
data16
sbb
inc
lods
popa
hlt
xchg
pop
adc
lcall
push
insb
inc
cmp
neg
jecxz
or
xor
out
fisubrs
adc
or
pushf
into
ja
add
add
xchg
mov
push
cwtl
mov
cmpsb
std
pop
xlat
sbb
sbb
sub
nop
pop
bound
fucomi
xchg
int
insb
inc
pop
xor
or
or
ljmp
cmp
cld
fs
fsub
lods
int3
sarl
sub
stos
fadd
and
lcall
stos
sbb
rorb
inc
mov
push
mov
adc
adc
pop
cmpsb
data16
mov
mov
enter
xor
and
sub
test
jae
insl
mov
aad
fstps
inc
sahf
sti
cmp
lret
and
mov
push
clc
stos
int3
jl
out
cmpsl
insb
cmp
jge
cli
in
cli
inc
repnz
xor
rorl
lret
andl
pop
jl
gs
lds
aaa
cs
push
call
mov
dec
das
sub
sbbb
sti
jne
xor
addr16
dec
int
jnp
aaa
dec
cs
mov
pop
bound
mov
or
xchg
faddl
mov
adc
adc
in
in
sbb
mov
lret
push
sub
adc
add
push
cmp
test
sbb
int3
andb
repnz
sub
pop
jno
inc
or
lock
sbb
mov
push
pop
mov
mov
test
mov
dec
jge
adc
dec
scas
jecxz
aaa
sbb
pop
push
pop
mov
outsl
lea
cwtl
scas
sub
mov
pop
stc
mov
add
pop
ss
inc
sbb
xor
xor
adc
out
mov
enter
cmp
in
nop
sbb
pop
test
xchg
test
imul
fsts
shrl
cmp
cmpsl
or
sbb
cmpb
stos
pop
clc
test
add
dec
nop
mov
jnp
test
incb
sub
lret
jbe
int3
adc
repnz
fwait
inc
inc
or
pop
aad
lcall
xorb
push
sbb
outsl
push
jmp
js
inc
and
testl
es
mov
into
loop
pop
jb
call
adc
popa
mov
addr16
test
ret
leave
imul
and
movsb
or
mov
mov
repnz
dec
popf
bound
add
pop
mov
mov
ret
repnz
lods
mov
push
shlb
lods
sbb
mov
push
test
mov
push
sbb
cmp
scas
dec
stos
es
ss
stos
mov
push
mov
std
xchg
adc
mov
mov
xchg
enter
sub
ja
cmp
les
fisttpll
jge
jno
mov
rorl
xchg
sbb
xor
rorl
xchg
mov
mov
jg
clc
jecxz
jmp
sbb
sbb
jbe
push
mov
adc
xchg
daa
insl
add
lahf
push
mov
sub
add
sub
cltd
call
jl
in
push
sub
adc
std
ss
mov
inc
sbbl
fsts
and
mov
pushf
push
pop
loop
pushf
jnp
lcall
pop
inc
and
or
push
push
cmp
xchg
test
cmpsl
test
xor
sysexit
dec
dec
repnz
pop
xchg
es
int3
sar
sub
aad
js
cltd
mov
movsl
xchg
sub
or
into
jp
jne
sahf
push
notl
jns
push
pop
xchg
push
js
push
dec
xchg
test
jg
cwtl
mov
mov
bnd
fstp
pop
fcoml
hlt
sbb
jb
clc
cmp
adc
aaa
push
enter
orb
mov
jp
shlb
pop
rcr
aam
jle
and
scas
pusha
mov
xor
scas
and
cmp
into
inc
push
movsl
jnp
movsl
mov
movsl
arpl
sbb
push
repz
jno
jle
xor
popa
std
imul
pop
imul
jne
and
xchg
jo
cmpsb
inc
das
mov
push
mov
pop
ret
shll
nop
fadd
ret
dec
scas
pop
and
sahf
mov
mov
mov
jp
std
inc
popa
mov
addr16
sub
out
insl
clc
cld
stos
test
fidivrl
sbb
dec
rcll
adc
rolb
dec
mov
rorl
pop
popf
cs
test
xchg
movsb
xor
mov
or
sti
push
ds
fwait
rcrb
int3
sbb
adc
xor
mov
rclb
mov
add
pop
xor
and
pusha
daa
xorl
sub
cmp
sahf
mov
jo
scas
inc
jp
sbb
add
xchg
lods
popaw
mov
mov
adc
lahf
ds
les
mov
adc
mov
jp
ja
mov
push
adc
pop
pop
push
mov
pop
lea
push
mov
aam
cmp
push
xlat
xchg
std
mov
inc
xor
mov
xor
jg
pop
repnz
xchg
cmpsl
push
cwtl
lods
lods
mov
scas
sarl
push
sbb
aas
enter
addr16
xchg
xor
pop
sbb
mov
mov
xchg
mull
jecxz
or
ss
push
mov
sti
fldcw
in
add
push
sbb
iret
ljmp
out
jnp
mov
cwtl
xor
cwtl
enter
es
jo
jle
xor
fidivs
das
mov
xchg
orb
icebp
xor
mov
mov
jmp
les
lods
cltd
add
fnsave
inc
and
neg
jo
addr16
test
xchg
sub
and
jnp
jmp
push
xchg
xchg
or
leave
aam
sub
orl
mov
enter
jns
cmp
inc
test
push
dec
push
hlt
out
jmp
loope
std
mov
insb
test
jo
ljmp
cmp
xchg
and
inc
inc
mov
pop
out
xchg
sbb
mov
and
cs
and
adc
lea
pop
xor
pop
fdivrl
repz
inc
sti
jae
mov
cli
sbb
xchg
mov
adc
addr16
rorb
aam
out
xor
sub
test
mov
icebp
push
add
push
popa
bound
sbb
loop
sti
cld
js
into
xor
pop
je
mov
pusha
loope
push
push
stos
rolb
testl
rclb
stos
lret
hlt
rol
fdivs
call
dec
lock
mov
mov
mov
mov
cmpsl
out
outsb
clc
or
xor
hlt
pushf
sub
fisubl
lods
inc
jae
mov
mov
sub
sar
repnz
sub
sbb
fcom
pop
pop
imul
mov
cmp
inc
xor
jecxz
je
je
push
mov
mov
ficoms
shl
mov
ljmp
sbb
xchg
aam
test
mov
mov
inc
sub
xor
mov
loope
push
in
push
sub
shlb
mov
iret
push
iret
outsb
mov
jp
dec
imul
scas
into
cmpsl
or
outsb
or
xlat
pop
add
in
popf
repz
inc
xor
push
cmp
sbb
mov
push
mov
jge
adc
dec
mov
dec
sub
jg
stc
callw
jl
lahf
pop
movsb
sbb
sbb
mov
sbb
rcrb
inc
icebp
stc
adc
jmp
rcrb
push
xor
sbb
lret
jl
pop
dec
cmp
xor
js
mov
or
push
push
shll
cmpsl
mov
and
pop
jmp
jle
test
mov
add
imul
dec
lahf
dec
loopne
in
dec
loopne
push
cmpsl
ficoms
inc
decl
or
or
jno
fadds
cli
imul
inc
inc
push
add
mov
pop
test
aas
or
inc
inc
inc
cmp
mov
xchg
clc
in
aas
lods
inc
sbb
dec
adc
push
fucomip
pause
inc
adc
mov
mov
adc
mov
sub
leave
shlb
wrmsr
adc
int
js
mov
stos
mulw
hlt
sbb
in
mov
jp
jecxz
icebp
push
test
addr16
sti
xor
dec
leave
cmp
push
cli
or
pushf
lds
test
mov
test
jge
push
loope
adc
xchg
lds
pop
lods
xchg
aas
in
or
dec
testb
in
scas
adc
sbb
dec
pushf
cmpsb
divl
lret
arpl
xlat
add
sbb
cld
jmp
mov
cmpsl
and
mov
mov
iret
push
jecxz
leave
insb
cltd
loope
sbb
pusha
or
rclb
mov
cmp
mov
test
push
hlt
out
push
adc
add
into
repz
adc
sub
lcall
popa
int
jge
mov
ljmp
xor
in
orl
mov
shrb
into
repz
fisubl
pop
xor
adc
imul
jp
add
test
shrb
repz
cli
mov
int3
push
rorb
and
add
sub
or
scas
bound
push
xor
jp
lahf
cmpsl
in
pop
jge
jns
clc
sbb
adc
mov
mov
jo
sub
cmp
mov
repnz
push
add
nop
cli
and
loope
call
dec
cmpsl
adc
imul
push
js
adc
or
mov
xor
push
mov
cmp
shll
aam
sti
cli
xchg
adc
lock
jmp
jmp
mov
inc
push
sub
mov
daa
js
into
add
mov
sbb
aam
mov
jbe
lret
mov
inc
xchg
rcr
lds
dec
rcll
xchg
aam
xchg
dec
add
clc
insl
sbb
jg
iret
xchg
inc
push
sub
push
cs
cli
leave
subb
popf
pop
pop
mov
cmp
leave
xchg
jmp
les
and
sub
and
sub
aam
sbb
cwtl
ss
sub
cmp
jbe
and
push
pusha
dec
sbb
adc
cmp
arpl
inc
push
dec
fsubp
push
and
mov
mov
sub
push
push
jbe
fwait
pushl
iret
mov
sbb
jecxz
dec
push
mov
aad
orl
mov
or
or
push
mov
arpl
jnp
cmp
std
sub
and
xchg
pop
inc
or
into
add
aas
xchg
sub
pop
bound
and
xchg
cwtl
pop
adc
jmp
jbe
pushf
inc
jp
mov
push
xchg
bswap
adc
push
mov
sarl
sbb
and
push
call
mov
inc
cmpsl
mov
mov
adc
in
mov
jmp
xchg
divl
ljmp
outsl
pop
jg
into
cmpsb
mov
sub
and
subb
sub
fisttps
icebp
stc
cmpsb
mov
sub
test
daa
xor
add
mov
pop
das
xchg
jno
movswl
nop
lret
out
arpl
xchg
movsb
cmp
hlt
inc
dec
ds
mov
stos
insb
idivl
pop
dec
inc
mul
and
cmpsl
jge
or
leave
cld
insl
mov
imul
cmp
add
aaa
dec
call
mov
les
jge
sub
push
rorb
xor
xor
shll
jae
lret
pop
loope
jae
sub
insl
xor
xchg
adc
imul
lock
jb
cmpsl
sub
jns
call
mov
cmp
hlt
cmpl
mov
daa
rsm
bound
xor
jb
add
xor
xor
ja
fidivrs
pop
insb
or
mov
mov
or
cmp
and
jp
jns
push
ss
xchg
js
sbb
in
cmpsl
movsb
jae
or
jge
pop
shl
sbb
loop
loopne
ljmp
push
aas
adc
pop
xchg
outsl
ss
ret
mov
and
rcll
fldcw
out
loop
mov
pop
jp
sub
fisttpll
ret
push
lods
fmul
scas
addb
mov
roll
push
movsb
movsb
lock
cmp
dec
jne
mov
pusha
mov
nop
push
jle
and
xor
cwtl
or
ret
stos
dec
or
ds
xor
cld
pop
fisubrs
mov
xchg
xlat
xlat
pop
push
fwait
inc
test
stos
lock
adc
call
ret
mov
pop
push
inc
movsb
add
mov
dec
xor
outsb
in
repz
sbb
push
jb
jle
aam
jns
clc
mov
xor
and
adc
mov
and
xor
rolb
or
xlat
lock
push
shlb
jl
push
lcall
xor
mov
xor
mov
test
iret
inc
shr
sti
sbb
lds
les
stc
addr16
inc
jp
add
mov
jae
mov
pusha
xor
aad
loopne
insl
ljmp
pop
fs
insb
xlat
mov
je
les
insl
nop
cmp
push
xlat
mov
jl
push
inc
jae
mov
push
inc
aad
shll
into
jge
cmp
or
subl
xchg
cmpsl
xchg
inc
mov
jge
push
lret
jecxz
add
jbe
mov
push
sub
jne
loope
test
push
push
repnz
xor
int3
mov
sarl
lcall
xor
bound
cs
and
pop
or
addl
ds
data16
xor
sbb
dec
lock
lret
mov
ret
fldl
pop
sub
popa
nop
mov
pop
or
rorl
push
dec
xor
std
test
scas
pop
es
out
dec
hlt
repz
sbb
test
notl
mov
sub
outsb
aam
insl
scas
neg
adc
inc
push
jecxz
mov
in
inc
inc
in
lahf
inc
icebp
ja
mov
sti
imul
xchg
mov
out
loopne
loope
xor
dec
mov
data16
dec
sti
sahf
cmp
or
repz
clc
push
jno
ret
push
icebp
adc
jbe
add
stos
clc
jns
inc
push
or
insl
pop
jg
pop
das
push
stos
outsb
push
jge
xchg
imul
or
mov
xor
test
out
in
pusha
xchg
sbb
mov
or
leave
pop
add
movsb
jno
sub
fiadds
insl
jmp
or
lret
xchg
sub
lock
xchg
sahf
addl
mov
cli
mov
loope
pop
mov
add
mov
cmpl
pop
test
out
mov
stos
sbb
jge
push
mov
in
mov
pop
out
bound
popf
or
pop
xchg
cmp
mov
sub
mov
mov
dec
aas
or
lods
cmp
test
arpl
mov
dec
test
jb
aam
int3
pop
popa
mov
mov
inc
push
sbb
ljmp
ss
pop
nop
push
fdivrl
jle
cmc
pop
addr16
mov
mov
jnp
mov
sbb
mov
and
sbb
add
xchg
mov
lds
inc
test
stc
push
pop
xchg
bound
ret
pop
push
bound
pusha
dec
dec
jbe
inc
aaa
repz
jmp
idivb
sbbb
fstpt
mov
dec
push
sbb
int3
insb
insl
pop
sbb
and
lcall
ret
movsb
push
xchg
shll
mov
popa
sub
in
shll
mov
sbb
ret
repnz
fdivl
pop
into
dec
inc
push
inc
ret
pop
aas
push
sahf
mov
insb
xchg
inc
std
out
mov
mov
repnz
pop
mov
sbb
mov
add
xchg
mov
jo
lahf
or
enter
insl
mov
stos
inc
push
std
std
jb
imul
insl
jp
add
add
xlat
push
in
pusha
outsb
sub
mov
pop
add
sub
negl
aaa
in
jle
jge
xlat
jnp
ja
jbe
adc
roll
jge
and
xchg
test
add
mov
mov
repnz
lds
xor
mov
loopne
les
inc
test
push
sub
jp
inc
xchg
and
xor
aam
flds
sbb
daa
lds
pop
insl
jg
pop
lds
out
add
bound
jbe
mov
lea
and
lahf
and
jle
sbb
mov
xchg
add
mov
mov
pop
dec
add
push
fs
mov
mov
shrb
mov
mov
shrb
int3
call
dec
cmp
roll
push
push
and
rorb
mov
or
daa
js
adc
out
pop
xor
fs
sbb
mov
pushf
mov
and
les
mov
push
add
mov
sbb
pop
sub
stos
subl
xor
lock
iret
pop
push
jmp
das
aas
bound
test
addr16
clc
ljmp
cmp
cmp
enter
inc
xor
fdivl
xor
xchg
and
dec
stc
pop
or
sarl
stos
push
mov
arpl
adc
inc
dec
andb
jnp
jae
mov
sbb
mov
cltd
repnz
iret
inc
mov
addr16
lahf
or
int
mov
xchg
lds
mov
stos
aaa
push
pop
cmp
mov
sbb
jns
or
xchg
scas
cmp
sbb
ja
sub
mov
adc
sarl
lock
push
cld
test
dec
fptan
cld
std
mov
lods
pop
cs
jns
lea
mov
xchg
fsts
xchg
movsl
pop
pop
xor
pop
fcompl
xor
mov
or
inc
dec
scas
mov
test
inc
mov
fadd
addr16
div
js
sbb
mov
lods
mov
mov
loopne
jns
into
add
iret
subl
shll
mul
add
add
mov
xchg
add
add
mov
sbb
outsl
mov
xor
pop
pop
push
dec
lds
xchg
add
push
fldt
and
sub
f2xm1
arpl
fidivs
jmp
ja
sbb
cmp
arpl
sbb
cs
push
loopne
pop
idiv
jmp
pop
jne
in
iret
cltd
mov
adc
cltd
dec
fiaddl
inc
rorl
ret
xlat
imul
mov
xchg
fucomi
in
iret
sub
insl
mov
or
sbb
out
jle
dec
dec
sub
sahf
aad
mov
aam
push
shrb
inc
mov
dec
lods
leave
push
inc
je
cmp
jbe
jae
mov
xchg
int
mov
sbb
sti
sub
sqrtss
jle
xchg
xchg
out
adc
cmp
aam
aad
pop
je
pop
adc
dec
stos
mov
push
js
sbb
clc
dec
sbb
ss
jbe
fldl
mov
xchg
sub
inc
std
dec
adc
mov
in
inc
negl
or
cld
xor
lahf
fildll
repnz
and
mov
xor
lahf
pop
pop
testb
in
lret
ret
sub
lret
sub
add
or
xorl
lret
mov
call
shl
lea
lea
mov
cmpsb
test
sub
test
cmp
outsl
cmp
mov
in
ficomps
xchg
notb
in
std
stos
iret
pushf
jb
stc
fcomi
mov
pop
iret
ror
xor
or
cwtl
outsb
nop
jl
loop
mov
cltd
pop
and
outsl
mov
pop
call
shll
push
xchg
or
push
gs
and
jne
popa
dec
ret
cmpsl
repz
lret
rcrb
shl
mov
icebp
sbb
cmp
and
sbb
ja
jle
and
xor
push
adc
dec
sbb
fisttpl
lret
cmpsb
js
add
fnstcw
adc
lea
es
dec
mov
inc
addr16
mov
daa
pushf
push
loop
ljmp
mov
lock
sbb
ljmp
dec
lods
xor
into
ret
or
add
loope
out
movsl
stos
add
out
sbb
js
cltd
jns
inc
scas
adc
pop
sti
sbbl
push
mov
or
jmp
push
add
hlt
mov
jp
sbb
inc
cmp
in
push
test
cwtl
mov
or
das
lcall
test
loope
fmull
jae
cmc
popf
xchg
xchg
pusha
cmpsl
arpl
push
lea
enter
cltd
movsb
sub
ret
adc
cltd
push
jne
push
mov
sub
je
and
sub
stc
dec
ret
lods
arpl
out
inc
mov
adc
xchg
adc
divl
test
mov
sbb
int
popa
cmc
pop
in
xchg
hlt
jmp
prefetch
or
jecxz
loope
fnsave
dec
xor
sbb
sarb
pusha
test
sbb
aas
xchg
faddp
and
inc
sti
mov
adc
jbe
dec
loopne
ret
adc
adc
es
cld
cmp
jb
xlat
mov
jge
lods
int
sub
push
mov
mov
xor
jg
mov
mov
jl
xor
push
jmp
adc
xor
pop
in
popa
negb
lahf
jne
mov
shll
xor
test
sub
ljmp
and
sbb
mov
xchg
mov
xor
dec
repnz
or
or
ss
jbe
movsb
sbb
xchg
inc
int
incl
fildl
jo
xlat
call
cli
push
sbbl
pop
jecxz
mov
repnz
sarl
roll
push
cmp
cwtl
xchg
loope
lret
xor
movsl
adc
outsl
arpl
loopne
add
push
stos
mov
fdivr
or
btr
or
shrb
push
ffreep
and
insl
fmull
cmc
aas
xchg
jnp
push
dec
cmp
in
inc
rorb
mov
xchg
in
inc
daa
jb
faddl
enter
and
push
cmpsb
stos
and
push
xchg
aaa
xchg
mov
lods
push
leave
bound
sbb
fxch
dec
and
mov
les
idivb
lods
ficompl
xchg
ljmp
xchg
dec
les
ja
xchg
fwait
loop
loopne
leave
sub
mov
and
sbb
and
xchg
or
sub
push
and
pop
push
and
push
mov
gs
push
mov
mov
and
xchg
rclb
inc
js
lods
aaa
pushf
loop
jb
jecxz
cmpsb
out
mov
gs
clc
push
adc
clc
adc
dec
jl
mov
xor
mov
pop
test
jl
lock
ret
jns
out
or
rcrl
cmc
in
xorl
or
sarl
sub
push
lds
add
or
lods
push
mov
lock
aas
daa
filds
jle
enter
and
push
mov
inc
inc
sbb
add
int
or
adc
adc
sub
stc
jge
sub
mov
sub
lret
arpl
mov
mov
add
jnp
mov
add
repnz
nop
adc
inc
pushf
shrb
sub
mov
outsl
mov
sbb
mov
loopne
and
decb
arpl
loope
jo
dec
mov
mov
seta
std
dec
and
inc
divb
bound
in
xorb
push
daa
xchg
sarl
shll
inc
out
and
xchg
cs
pop
fdivrs
mov
cltd
sbb
sarl
in
cs
inc
loop
dec
inc
test
vpmaddwd
cmp
push
arpl
adc
push
inc
loopne
das
les
out
out
pop
xchg
xchg
xor
mov
pusha
xchg
sub
mov
imul
cmpsb
ret
or
sbb
xor
imul
adc
xchg
aas
cmpsb
repz
push
xor
sub
jl
inc
insb
insl
psrld
xchg
jbe
pop
int3
cmc
sub
scas
lds
popf
mov
fstpl
lahf
test
cmp
call
push
jb
xor
subb
mov
out
addr16
loop
sub
push
sti
inc
xor
dec
fisttpl
pop
xor
shl
outsb
sbbl
sub
mov
mov
call
imul
adcb
daa
hlt
add
sti
pop
jns
jp
out
repnz
push
add
seta
pop
imul
sub
fldcw
orb
xor
sbb
popf
hlt
dec
jno
push
clc
xchg
stos
outsl
mov
jge
inc
jb
inc
sahf
test
push
mov
imul
add
stc
mov
loopne
fsubrl
xlat
fwait
xchg
mov
adc
popa
inc
sti
push
jecxz
xor
push
inc
movsb
sub
dec
cmp
aaa
stos
ret
test
loop
and
add
push
dec
adc
cmpsb
push
mov
in
popa
out
jp
movsl
lods
dec
or
mov
lea
xor
movsl
je
pop
xorb
outsl
sub
les
sub
pop
xchg
xchg
lret
lods
fiadds
loop
je
xchg
loope
jle
outsl
or
cmp
ret
fimuls
jae
sbb
sub
jo
mov
pop
fistpl
xor
cmp
lret
sarb
push
repz
lods
pop
in
clc
pop
jg
arpl
push
loop
rcll
cld
jne
sbb
ljmp
ret
fwait
ja
xchg
cmp
rcl
ljmp
or
addr16
jge
jno
imulb
andl
push
idivb
mov
jne
inc
out
fwait
mov
or
mov
sbb
sub
loopne
int
xlat
in
xor
mov
mov
fsubp
pop
ffree
dec
outsb
xor
mov
push
addr16
mov
add
mov
aaa
lcall
sub
jno
popf
push
out
into
loop
notl
xorb
dec
jecxz
fs
xchg
ds
out
push
jae
or
mov
sbb
xchg
push
fwait
dec
cmc
std
sbb
jl
and
int3
push
inc
mov
jmp
in
mov
mov
pop
gs
xchg
aas
mov
dec
je
dec
cmp
leave
pop
xor
hlt
js
lea
jp
ja
add
test
loope
int3
sub
dec
inc
pop
hlt
mov
inc
xchg
cmpsb
lods
sub
inc
xor
out
jl
std
sub
arpl
or
mov
movsl
mov
xchg
pop
push
mov
mov
jno
test
push
les
cmpb
cmp
push
and
stos
fadds
pop
icebp
xchg
ds
popa
daa
push
and
sbb
xchg
mov
and
out
arpl
cwtl
test
pop
cmp
jo
in
push
outsb
int
or
mov
cmp
cmpsl
add
add
add
movsb
xchg
xchg
ret
repnz
std
jge
xchg
lds
sub
popf
inc
lcall
fcompl
add
xlat
push
movsl
fcoml
cmc
mov
enter
stos
int
cmp
loopne
add
lret
inc
or
mov
arpl
add
addr16
xor
les
mov
add
iret
mov
stos
sub
js
mov
ja
hlt
mov
lahf
in
addl
ja
push
adc
jnp
fs
inc
or
mov
mov
sub
and
test
inc
inc
xchg
cmpsl
rcr
scas
loop
cmp
xchg
shlb
fisubrs
jno
mov
int3
faddl
xchg
call
mov
ret
mov
imul
ja
stos
mov
movsl
mov
stc
cmpsb
ret
sub
in
sbb
cltd
mov
push
adc
xchg
insl
jg
shll
jmp
cli
xchg
adc
stc
daa
adc
repz
mov
mov
sahf
hlt
dec
imul
mov
mov
lret
pop
mov
adc
in
dec
adcb
add
jbe
mov
xor
subb
adc
repz
stos
dec
dec
or
cmova
push
fs
jge
test
pop
pop
fucomip
js
aas
popa
jbe
jge
and
imulb
test
cmp
sbb
sti
and
adc
fwait
adc
lahf
add
sbb
pop
sti
or
sub
mov
scas
shrl
aas
mov
dec
sbb
mov
jns
mov
mov
adc
hlt
jo
in
xchg
out
inc
dec
fsubs
pop
in
ljmp
xlat
insl
mov
jle
sub
pop
orb
xor
inc
arpl
gs
fwait
mov
hlt
push
lcall
mov
fwait
mov
adc
bound
mov
mov
mov
jo
shl
jbe
lea
clc
cli
and
or
pop
sbb
dec
aaa
mov
pusha
lret
scas
into
loopne
into
and
out
stos
lods
mov
mov
jne
mov
scas
mov
dec
jge
movsl
decb
lret
mov
sbb
test
mov
dec
fistps
mov
sahf
dec
push
in
dec
movsl
aad
in
push
lock
lea
cli
jo
sbb
popf
push
pop
push
mov
push
sub
imul
cmp
and
pop
outsl
das
xchg
mov
clc
daa
mov
pusha
decl
je
dec
jmp
fcmove
mov
in
inc
jbe
aam
jae
pop
dec
mov
inc
ja
push
cmp
cwtl
aad
pop
jnp
push
pushf
xor
mov
shll
sbb
push
mov
sbb
sbb
incl
add
jbe
insl
das
mov
pop
aas
cmp
imul
inc
lahf
xor
push
jnp
and
push
cli
fdivl
jle
xchg
or
in
add
movsl
mov
popa
in
into
clc
xor
sti
sbb
imul
pop
add
sub
mov
aas
imul
negb
pop
dec
jg
int3
aaa
stc
or
aad
mov
inc
leave
movsl
push
push
xchg
jbe
lret
into
xchg
hlt
movsl
nop
push
mov
fwait
decb
arpl
jns
jmp
shll
mov
or
int
pop
cmc
xchg
stos
out
cmpsb
js
xchg
xchg
lahf
add
sbb
test
or
testl
hlt
push
mov
repz
jnp
hlt
cs
dec
popf
xor
js
imul
sub
repz
push
dec
fbld
ljmp
mov
mov
cmp
ret
adc
or
fxch
mov
jno
mov
inc
mov
mov
ucomiss
mov
jge
and
sti
cmp
push
out
xlat
xor
loop
push
test
sbb
addr16
mov
and
repz
test
lea
std
sub
add
sub
jne
and
lods
xor
mov
and
push
fs
gs
cmp
jge
jecxz
push
mov
jp
lcall
sub
or
repnz
pop
jle
mov
cmpsl
insl
mov
js
lock
lahf
mov
in
pop
mov
cld
cld
push
xor
inc
adc
call
sbb
ja
loopne
xchg
sahf
xor
mov
cs
mov
fwait
cltd
jmp
pop
mov
js
or
mov
icebp
push
cmp
fwait
cs
xor
push
push
push
or
push
xchg
divl
sti
lcall
fldlg2
lock
dec
cmpb
repnz
test
add
or
jp
lcall
jb
push
add
mov
xchg
dec
fwait
sub
jne
fldl
add
ss
out
pop
in
dec
push
clc
jb
push
push
scas
sub
in
cmp
rcrl
mov
push
push
jecxz
lock
or
or
jmp
loopne
cltd
sub
and
dec
rcrl
adcb
andl
test
sub
pop
inc
gs
dec
fists
cmp
aad
cmp
and
inc
out
scas
cmp
pop
fstps
mov
inc
roll
out
xchg
test
daa
out
inc
gs
sub
dec
xor
mov
push
daa
or
mov
pop
add
test
js
dec
xchg
lds
mov
push
rolb
arpl
or
fnstcw
repnz
ja
push
outsb
add
push
fwait
dec
push
cmc
or
mov
mov
stos
push
movsb
jmp
loopne
roll
repz
mov
push
pop
jmp
rorb
out
xchg
pop
invd
sbb
sbb
jbe
xor
or
pop
clc
mov
push
and
adcb
mov
adc
adc
cmp
cmpsl
in
int
dec
and
lahf
ficoms
mov
je
mov
shr
push
scas
in
flds
xchg
shll
jg
test
lods
add
or
test
jae
out
push
or
imul
sbb
shr
xchg
sub
push
insl
pushf
pop
xchg
push
scas
lods
and
and
std
addr16
xchg
imul
mov
ret
cltd
adc
sahf
sbb
dec
pop
sub
scas
imul
dec
xor
sbb
jbe
sub
roll
data16
pushf
in
pop
pop
and
mov
adc
lret
aaa
pop
shl
sub
scas
mov
aaa
std
nop
lcall
sbb
push
cld
icebp
lock
lret
mov
and
pop
std
jno
xor
inc
jge
adc
fdivrs
fistpll
cmp
mov
ret
jle
xlat
mov
movsl
ror
imul
in
xchg
sub
push
mov
cs
pop
and
xchg
mov
bound
ds
aam
lret
outsl
shll
scas
cmp
xchg
jae
mov
int3
mov
push
fistl
scas
or
inc
popf
push
sub
lds
shlb
add
push
loope
sarl
mov
dec
inc
inc
outsb
divl
dec
or
cmp
adcb
dec
push
insb
and
stos
rcll
mov
mov
jo
push
xor
ja
push
jbe
ret
outsl
ficompl
in
repz
jbe
jne
js
sbb
sbb
popf
ret
cs
cmp
ds
mov
inc
cli
add
cmpsl
adcl
add
mov
insl
jae
jno
daa
push
int
pop
js
or
sti
loope
rorb
and
fs
xchg
add
jb
pop
mov
xchg
adc
pop
inc
jl
adc
data16
fnsave
stc
jns
or
rol
pop
mov
push
lock
test
aad
imul
mov
push
mov
add
lods
das
mov
xor
cmp
cltd
mov
sbbl
out
cmpl
mov
mov
cmp
fisubs
push
inc
call
shrl
mov
gs
mov
gs
adc
cld
out
out
cmp
in
add
pop
dec
inc
sbbl
cmp
rcr
cmc
insl
add
jae
mov
lahf
mov
and
sbb
cwtl
clc
fldenv
and
dec
jno
jg
jnp
dec
mov
dec
call
pop
std
inc
cltd
loop
cwtl
into
add
fwait
dec
lret
pop
cwtl
rorb
add
adc
stos
repnz
fidivrl
loope
mov
lea
sti
mov
popl
je
out
dec
mov
enter
dec
bound
inc
fldenv
pusha
cmpsl
stos
jecxz
and
push
bnd
mov
xor
sub
mov
dec
sbb
adc
cltd
jp
jge
adc
push
mov
adc
cmp
sar
imul
and
mov
push
pop
dec
jg
xor
cs
sarb
xchg
pop
mov
xlat
or
xor
dec
dec
cmp
push
pop
lret
xor
push
leave
lods
inc
leave
sub
vcvttps2dq
xchg
inc
xor
jge
or
mov
popf
cld
popf
mov
movsb
sub
aad
lea
enter
mov
inc
adc
xor
dec
hlt
pop
push
pop
jle
mov
pusha
mov
cli
cwtl
adc
stos
out
mov
mov
push
out
xchg
mov
pop
adc
jl
scas
cld
xor
xchg
inc
sarb
sbb
lea
cmp
push
jo
mov
xchg
sub
lret
xchg
in
enter
sub
clc
clc
push
adc
inc
mov
pop
xor
aam
mov
or
sbb
call
test
mov
imulb
and
sub
in
notl
in
and
add
lea
movsl
sub
and
cmpsb
xchg
add
mov
add
mov
daa
hlt
sti
out
js
ljmp
scas
lock
and
movsl
mov
jbe
inc
fildl
or
daa
sub
cmpsb
jns
pop
std
lahf
scas
out
repnz
out
or
cmp
sub
push
jecxz
das
pop
mov
and
jmp
sub
imul
mov
mov
into
xchg
sub
ja
sub
rcll
xchg
pop
movsl
mov
cmpsl
or
xchg
push
pop
enter
mov
sub
loop
inc
out
mov
aad
add
pop
push
out
xlat
iret
jo
adc
movb
cmc
ret
divb
jb
cmpsl
xlat
mov
mov
sbb
jnp
add
jns
dec
xchg
inc
clc
adc
or
pusha
int3
test
push
sbb
rorb
mov
fs
jl
dec
insb
int
inc
scas
mov
cwtl
add
dec
aas
sahf
xor
mov
pop
daa
call
ja
dec
mov
aam
mov
pushf
add
adc
sbb
lcall
fcmovu
fcomi
mov
ret
iret
movsb
xchg
aaa
jns
push
add
dec
gs
pop
in
mov
in
and
popf
daa
cld
jg
sub
xor
outsl
push
jl
mov
sbb
xor
and
clc
ljmp
mov
mov
mov
cwtl
add
push
outsl
mov
and
mov
out
ljmp
pop
int3
repz
imul
mov
cmp
push
scas
inc
pushf
sbb
add
iret
pop
aaa
out
mov
cwtl
popf
insb
inc
icebp
jmp
sub
imul
dec
cmp
imul
mov
outsl
adc
sbb
and
fbld
mov
subl
mov
push
decl
fcom
fs
or
adc
sub
enter
inc
mov
mov
out
add
lcall
xchg
jnp
mov
adc
pop
outsb
pop
sbb
cli
repz
gs
inc
ret
pop
call
mov
neg
and
push
adc
pop
pop
sbb
jb
jae
negl
sbb
mov
fsubl
or
test
rcrb
jp
mov
inc
sub
push
cmc
mov
xchg
adc
mov
aas
push
loop
decl
push
xor
inc
xchg
js
sti
into
or
into
adc
mov
scas
fmull
sahf
jb
and
neg
mov
iret
pop
and
sbbb
sub
sahf
mov
mov
inc
jmp
notb
sar
arpl
sbb
mov
outsl
pop
push
fcmovu
pop
pop
push
sahf
push
jno
out
or
fldt
dec
fisubrl
mov
mov
aam
out
int
or
into
sbb
lock
lret
fcompl
pusha
wrmsr
push
or
rcll
test
ja
inc
adc
mov
addr16
jns
sbb
ss
fsubrp
push
ret
icebp
int3
roll
clc
add
xchg
lcall
inc
dec
repnz
sarb
sbb
cmc
call
aas
lods
shll
pop
cmp
outsl
in
rcrl
cmp
sbbb
outsb
push
imul
test
ds
mov
lcall
mov
pop
xor
xchg
push
ljmp
fnstcw
pushf
jbe
sub
imul
sub
mov
into
inc
pop
adc
add
cwtl
je
rol
not
leave
cmp
mov
push
inc
mov
jge
ret
inc
pushf
sahf
dec
addr16
movsb
and
cmp
mov
loope
in
xchg
popa
cmp
sbb
push
repz
les
cmp
arpl
into
stos
test
add
sbb
mov
std
add
mov
jge
xchg
jne
cmp
add
mov
and
data16
lret
jmp
add
push
ss
pop
add
dec
mov
pop
push
in
addr16
clc
cld
add
ds
lahf
cmpsb
iret
addr16
testl
xor
mov
in
cltd
imul
pop
insb
call
pop
subb
clc
movsl
adc
mull
pop
or
mov
mov
test
insb
sub
insb
in
addr16
int3
test
jnp
std
dec
stos
push
mov
adc
cmp
sahf
rorb
xchg
and
push
mov
xor
dec
lods
jecxz
push
xchg
lds
test
popa
xor
dec
lcall
daa
push
or
xor
outsb
mov
jmp
lds
addr16
inc
dec
mov
mov
and
jne
in
das
ja
add
mov
mov
mov
adc
add
inc
cli
mov
lock
test
dec
scas
cmp
push
xchg
mov
mov
call
testl
cs
jg
popf
and
xlat
adc
ss
xchg
fimuls
xlat
cmpb
dec
out
out
dec
loope
sub
cmpsb
jmp
data16
scas
cmp
lock
fldl
cmp
xor
and
iret
sub
in
stos
loop
jb
and
lock
icebp
in
and
scas
fwait
in
xor
int3
lahf
jae
push
fstps
xchg
push
sub
mov
arpl
push
mov
nop
daa
test
cs
addb
loopne
add
push
pushf
lods
cmp
pop
cmc
insb
xchg
push
pop
pushf
inc
cwtl
ss
adc
leave
daa
or
daa
into
and
mov
sbb
outsb
cli
and
mov
ja
loope
outsb
movsb
enter
adc
or
data16
cmc
push
jge
push
xchg
xor
or
cmp
jnp
lods
shll
lsl
jbe
orl
daa
popf
jb
cmp
ficoms
pop
cmp
inc
xchg
or
push
inc
int3
dec
push
je
xor
sub
btr
icebp
mov
push
rep
addr16
lahf
movsl
enter
leave
dec
cmp
aas
jae
test
adc
xchg
sarb
in
aam
lahf
lcall
flds
ret
mov
mov
sti
and
push
fdivp
jbe
imul
cmp
lahf
outsl
or
out
jnp
test
jbe
mov
xchg
sub
out
in
jp
sahf
pop
ret
mov
xor
sbb
clc
push
mov
das
and
leave
pop
outsl
loope
sub
push
xor
pop
inc
push
mov
jle
idivb
lods
sub
push
pop
movsb
mov
push
add
fs
mov
pop
pop
stc
adc
xchg
push
call
dec
fcomp
dec
std
adc
ret
iret
call
cmp
sub
pusha
lods
xchg
add
jle
inc
je
cltd
stos
xor
dec
decb
cmp
test
cmpl
stc
mov
and
dec
mov
jno
pusha
divb
cmpsl
push
mov
sub
aas
clc
fdiv
out
jle
fidivrs
jb
inc
sub
daa
pushf
jne
pushf
sti
lods
stos
in
push
add
jne
mov
inc
repz
lods
mov
inc
mov
push
mov
lcall
arpl
mov
shl
repnz
loop
jge
icebp
rcrl
aad
lds
xchg
jae
mov
in
out
jae
test
add
aad
daa
jns
nop
sub
je
call
lods
and
outsb
sub
jl
int
inc
stos
or
mov
testl
adc
add
mov
xlat
push
sub
fisttpll
mov
cmp
insb
sbbb
adc
sub
xor
or
pushf
nop
arpl
push
adc
lcall
in
cmp
out
mov
loope
enter
xorb
mov
loop
mov
xchg
cmp
jb
ss
jb
dec
in
mov
and
je
cmp
adc
call
sbb
scas
aas
addr16
aad
sbb
cwtl
loope
xor
outsl
xlat
cmp
inc
add
sbb
dec
lds
jge
test
sub
in
pop
mov
dec
lods
clc
or
add
fdivs
mov
pop
jle
popf
das
out
add
adc
xorb
data16
adc
or
inc
mov
push
push
scas
fisttps
fcmovu
inc
cld
sbb
jne
inc
and
outsb
xchg
repnz
xchg
fdivl
aam
cld
dec
pop
popf
into
or
mov
mov
in
and
cs
push
xor
mov
jecxz
inc
cs
adc
dec
adc
push
out
sub
cmp
xchg
test
xor
xor
paddw
or
sbb
pop
mov
adc
ret
scas
fdivrl
inc
stos
sahf
stos
adc
int3
iret
inc
cmc
movsl
xchg
imul
cmp
mov
in
jno
fidivrl
add
and
fisttpl
dec
or
add
or
adcb
test
sbb
cmpsb
sbb
addb
xchg
imul
shl
leave
cmpsb
adc
fimuls
adc
xlat
imul
inc
out
inc
mov
mov
mov
cmp
addr16
xchg
push
sub
mov
push
inc
xchg
xlat
clc
mov
inc
bound
cli
stc
push
mov
mov
add
adc
push
and
add
cltd
mov
shlb
and
lods
dec
mov
loope
xor
insb
mull
mov
or
repnz
mov
mov
andl
test
enter
call
es
mov
jp
xchg
out
jmp
mov
xor
jecxz
testl
cmc
popf
mov
jg
lea
xor
mov
xchg
or
xchg
jg
mov
shrb
ljmp
mov
mov
pop
xor
xchg
bound
mov
adc
shlb
or
mov
sbb
lock
and
sub
push
and
add
inc
sub
adc
cmp
ret
pop
pop
in
and
imul
xor
daa
xor
add
xchg
loopne
aaa
xchg
dec
pop
sub
ja
pop
data16
aam
mov
shrb
and
movsl
sbb
shr
mov
fwait
lea
sub
ds
sahf
stos
mov
dec
inc
cwtl
sbb
outsb
jo
shrl
ljmp
test
mov
sbb
in
adc
ficoms
leave
adc
jmp
mov
addb
mov
cmpsl
push
sbb
shll
mov
mov
ja
sbb
aam
mov
sti
mov
sub
aas
jp
std
inc
cld
mov
mov
nopl
cmp
jmp
fdivrs
pop
clc
daa
dec
shr
jne
pop
cmc
mov
fsubr
je
mov
ljmp
mov
xor
jmp
popa
inc
pushf
ljmp
xchg
pusha
push
inc
sbb
mov
inc
and
loop
ds
xor
cmpsb
jge
cmpsb
nop
mov
cmp
cs
push
shrb
aad
mov
cmp
xor
mov
pop
sti
in
jl
popf
test
test
scas
fidivrs
dec
xlat
cmpsl
lahf
lret
sbb
in
sbb
popf
ficoml
pop
pop
leave
adc
aaa
popa
push
int3
mov
xor
movsl
sahf
lds
adc
push
lret
dec
ss
mov
jecxz
cmp
ret
adc
xlat
mov
data16
test
pcmpgtw
test
sbb
adc
push
lret
jecxz
sub
adc
scas
lds
sbb
cmc
xchg
jbe
push
decl
repz
scas
jo
push
mov
and
add
repz
shl
sbb
xchg
in
pusha
aad
dec
repnz
pop
in
in
cmp
rol
adc
mov
push
inc
pop
cmpsl
cmc
addr16
add
sub
mov
xor
cmpsb
dec
mul
rcl
sbb
cltd
test
xlat
daa
xor
jb
imulb
xlat
in
inc
adc
pop
push
fnstsw
jmp
xor
xor
cmp
push
adc
xchg
sbb
adc
mov
pop
ret
addr16
pop
subb
cmpsl
add
jo
adc
ljmp
mov
ret
push
aaa
jl
dec
std
enter
rorl
flds
addl
fdivr
je
pop
rcrl
and
jns
insb
mov
cmp
push
gs
scas
inc
rcr
aad
xchg
dec
lret
xchg
fdivrl
or
repz
inc
sub
in
data16
inc
adc
and
and
mov
cmpb
dec
inc
shl
push
cmp
mov
lret
jp
sub
into
fcompl
shl
ss
mov
repnz
push
loope
je
push
ret
lods
sbbl
ljmp
push
jbe
shl
xor
push
leave
xchg
inc
jae
cmpsb
test
lds
mov
cld
xor
in
clc
pop
mov
ret
dec
fsubrl
aas
popf
mov
mov
dec
test
jne
rcrb
jmp
cmp
lahf
lret
jns
inc
adc
push
arpl
pusha
cmp
fsubl
fistpll
sbb
jnp
cs
sbb
xchg
loop
in
loopne
out
sub
or
out
sub
jns
dec
repnz
push
cld
cltd
xchg
and
in
add
sub
dec
and
push
dec
xchg
pop
loope
in
jae
out
retw
mov
addl
outsb
fiadds
bound
es
mov
mov
outsl
cwtl
sub
adc
lea
sub
and
movsb
std
sub
shll
sub
stos
addr16
cld
rcr
daa
roll
jg
inc
outsb
aaa
into
jb
test
cli
xchg
push
cmp
push
pop
test
outsl
pop
xchg
pushf
jbe
push
ja
pop
push
inc
jp
pop
lods
fldenv
and
es
frstor
mov
outsb
insl
pop
jp
dec
pop
jg
fidivrl
xchg
repz
call
int3
int3
fsub
rcr
jb
test
movb
fsubr
into
pop
scas
pop
or
pop
fisttps
jecxz
pshufw
cmc
adc
ds
sub
ret
in
fistl
sbb
into
mov
mov
sub
fldcw
fcompl
shlb
mul
test
sub
mov
call
pop
mov
mov
out
imul
sarl
pop
mov
jne
inc
sub
cmp
aam
push
xchg
push
shl
dec
sub
pop
mov
push
sbb
js
inc
xor
outsl
mov
add
mov
movsl
cmc
out
dec
es
leave
xor
shrb
pop
fcmovu
pushf
shlb
pop
mov
jo
test
sbb
lret
jmp
jnp
aas
add
and
and
ljmp
addl
inc
inc
mov
sub
aaa
jmp
hlt
movsb
inc
fcomps
mov
push
cmpsb
jecxz
dec
xchg
clc
inc
and
lcall
testb
sub
pusha
dec
xlat
or
pop
dec
sub
mov
jnp
test
ljmp
test
and
in
cmp
sub
and
adc
xlat
push
and
inc
inc
jne
and
or
dec
negl
insl
adc
dec
adc
mov
xchg
inc
or
mov
add
icebp
in
mov
and
outsl
mov
sbb
adc
pop
fwait
sarb
pusha
ds
xchg
adc
fstpl
data16
mov
add
dec
or
ret
xchg
mov
push
movsb
mov
shlb
imul
push
xchg
inc
fisubl
mov
loopne
mov
loopne
test
leave
cltd
inc
les
or
ret
movsb
cs
fbld
xchg
jnp
cld
shll
clc
aas
push
fnstenv
push
adc
adc
imul
push
lcall
fstps
lods
lods
push
cld
loopne
sti
shl
mov
lods
cmp
or
movsl
add
push
inc
fs
leave
and
nop
push
jmp
daa
xlat
jecxz
fsts
gs
std
aaa
jl
inc
xchg
dec
aas
pushf
pop
je
dec
loopne
test
jge
fcoml
jne
and
je
mov
test
add
inc
std
push
andb
sub
fsts
je
xor
jl
push
mov
lods
jmp
nop
jae
push
test
inc
ss
sbb
stc
fsubl
jo
push
ja
push
sub
jns
mov
das
xchg
ret
ret
mull
mov
mov
movsb
ljmp
in
adc
das
xor
or
dec
lods
mov
sbb
lret
or
test
sbb
ds
xor
outsb
stos
xchg
clc
inc
cli
xor
rorb
lret
gs
dec
push
aam
rorl
dec
or
xchg
push
push
push
insl
out
test
movsl
pusha
scas
ds
rcrl
sub
dec
pusha
scas
int
mov
add
push
mov
iret
mov
sbb
outsl
inc
sub
int
int
ljmp
mov
int3
popa
inc
xor
push
pop
movsl
aam
pushf
sbb
push
sbb
lods
imul
sbb
test
jge
jl
in
jae
pop
stc
ljmp
adc
push
jl
hlt
pop
test
or
push
dec
mov
xchg
mov
jp
mov
into
inc
fsubrl
mov
jg
jnp
addl
xchg
and
and
mov
cmp
mov
mov
dec
push
or
in
repnz
lock
mov
leave
dec
cmp
sbb
pop
addl
sbb
dec
neg
push
or
loope
sub
mov
call
push
daa
push
add
push
subb
push
je
test
mov
fwait
jp
sub
mov
add
dec
call
and
lods
out
ret
jecxz
push
iret
cmc
and
sub
cltd
pop
lcall
fmull
pop
mov
xor
jecxz
jecxz
push
ds
mov
popf
pop
xor
push
sbbl
mov
icebp
cmp
adc
lahf
sub
push
lds
adc
sub
or
sbb
jb
jmp
mov
dec
jle
pop
xchg
sub
xchg
push
std
pop
push
lock
loope
sbb
sub
pop
jbe
push
pop
add
jbe
inc
jl
adc
add
xor
lds
xor
add
mov
fcompl
mov
mov
xlat
pushl
mov
lret
and
xchg
mov
rcrb
mov
mov
lcall
stos
jae
push
pop
add
or
pop
out
scas
lods
sbb
js
ja
sahf
xchg
mov
xchg
mov
fwait
es
mov
mov
gs
gs
lret
cmp
and
or
inc
jb
sbb
jl
jne
xchg
cmpsl
mov
or
mov
jae
out
in
aaa
mov
mov
push
sub
mov
test
movsl
inc
fbld
ficomps
loopne
ss
sub
not
lock
pop
pop
and
jmp
lods
push
jp
jle
js
mov
sbb
jno
jb
hlt
cmp
add
in
lods
dec
xchg
iret
movsb
rcrl
faddl
call
inc
sbb
jae
lret
aas
mov
pop
dec
pop
push
cmp
mov
das
push
xor
lea
jp
sbb
push
test
jl
loop
lret
xchg
pop
sbb
push
mov
or
in
je
std
movsl
cmp
push
sub
add
add
mov
add
adc
sbb
xchg
adc
pop
sahf
xchg
pusha
xchg
clc
and
mov
mov
fs
jnp
jmp
dec
cmp
insl
xor
movsl
mov
push
jb
in
sbb
jb
mov
and
dec
neg
popf
call
xchg
push
repz
xor
sub
dec
xchg
adc
jecxz
mov
mov
jb
dec
cmpsl
xchg
stos
aad
int
inc
xchg
mov
in
scas
xor
dec
push
mov
jo
popa
test
or
ret
adc
mov
add
insb
jge
mov
xor
mov
or
mov
xchg
and
clc
or
xchg
pop
movb
int3
js
inc
dec
cmp
cmp
mov
cmp
push
cmp
jo
adc
mov
cmpsl
mov
loope
aaa
mov
popa
mov
pop
orl
inc
sub
js
data16
mov
std
out
pop
mov
leave
jp
and
or
xchg
xor
rep
adc
xchg
and
mov
and
jae
test
lock
mov
out
inc
xor
aas
mov
add
ss
dec
js
adcb
test
out
push
aaa
cmp
mov
ret
rolb
popf
cld
push
outsl
mov
pop
jns
in
cmp
sbb
mov
lods
lds
xchg
and
rol
mov
or
ljmp
pop
nop
pop
xchg
fwait
push
addb
jnp
imull
movsl
in
push
adc
mov
sub
pop
or
ja
push
mov
movsb
popf
push
mov
push
in
out
sti
inc
pop
fisubrl
xchg
cmc
fmul
jbe
decb
mov
into
push
sub
adc
inc
xor
imul
push
xchg
loopne
mov
data16
mov
mov
mov
test
gs
lcall
pop
jbe
lret
sarl
ja
cmp
cwtl
mov
cmp
add
mov
mov
inc
popf
push
pop
add
inc
adc
dec
daa
jg
pop
push
add
lds
inc
or
push
mov
push
cli
rcrl
ss
mov
sub
adc
leave
loop
sub
leave
mov
andl
mov
repnz
mov
xchg
stc
add
mov
ret
sub
adc
repz
mov
daa
je
xchg
imul
mov
ljmp
inc
push
imul
clc
push
jmp
mov
and
and
loop
popf
cld
jae
fldl
movsl
cltd
cmp
push
pusha
mov
stc
shlb
or
cmp
push
or
rorb
inc
rcrl
int
cmc
sbb
sbb
push
cli
scas
pop
cmp
cmpsb
clc
cmp
call
pop
add
ss
test
gs
cmp
jns
ret
xor
xor
pop
push
ret
outsl
aam
xor
dec
ss
lock
mov
xchg
mov
andl
sub
pop
outsl
popa
stos
lods
pop
addl
scas
mov
out
xchg
sbb
lock
insb
lahf
cmova
cmp
push
psllw
movsb
inc
stc
jl
mov
mov
sti
lahf
adc
add
jecxz
fsubrl
ss
xchg
lods
sbb
pop
push
xor
scas
clc
and
adc
mov
sarb
dec
movsb
in
clc
and
paddw
push
ja
fiaddl
aam
adc
out
xlat
sbb
jg
pop
stc
dec
push
clc
imul
sub
in
sub
or
pop
push
clc
dec
inc
sbbl
leave
das
xchg
or
inc
add
shlb
inc
add
or
ljmp
ljmp
jae
xor
jg
addb
out
adc
fimull
mov
jae
cmpsb
out
sub
adc
stos
sub
out
mov
dec
fstps
push
jge
mov
into
outsb
icebp
cld
icebp
dec
sbb
popl
add
add
sub
test
fmuls
mov
popf
imul
jb
pop
pop
jb
jnp
mov
jnp
data16
inc
inc
push
pusha
ss
outsb
adc
popa
and
imul
je
or
iret
ret
xchg
push
inc
jge
dec
sbb
ja
sub
lahf
lret
paddb
pop
pop
ficompl
adc
jne
xchg
into
xor
cmpsb
outsl
fiaddl
call
add
test
ja
push
je
dec
daa
fldt
add
lds
adc
mov
das
ja
ja
cmp
cmp
push
xor
gs
pop
imul
lret
in
lahf
pop
pop
adc
ss
inc
jbe
xchg
lock
push
in
adc
xor
push
test
xchg
sahf
push
dec
push
cmc
mov
clc
fisubrs
jno
push
ret
mov
xchg
sbb
adcl
jp
fs
push
xchg
int3
out
ret
test
xchg
and
mov
push
mov
gs
fs
or
rcll
dec
ret
out
out
sahf
clc
jbe
loopne
push
test
test
scas
jb
mov
mov
mov
test
adc
add
cli
sub
jb
mov
imul
dec
mov
cmp
mov
or
cmp
and
inc
pop
jae
sub
ljmp
pop
int3
in
outsb
xchg
mov
push
or
sub
pop
jns
cmp
sbb
pop
push
sub
mov
and
and
pop
jl
test
push
dec
mov
loope
sbb
test
pop
push
adc
mov
lret
add
scas
cmp
iret
add
inc
mov
movsl
and
test
jmp
sub
xor
xor
movsl
rcrb
add
int
jno
std
gs
idiv
adc
mov
mov
jns
gs
popa
xchg
fbld
adc
insl
fnstsw
sbb
movl
test
push
sub
hlt
fildll
dec
popa
lock
mov
js
subl
and
rcl
ficompl
in
xchg
cwtl
outsb
jnp
jmp
or
add
lock
cmp
jecxz
lret
add
js
push
cli
ja
repnz
xchg
dec
lods
cmp
inc
sub
or
cld
test
in
ja
outsb
shlb
mov
fildll
push
js
push
ja
xchg
mov
insl
sbb
jae
sbb
push
mov
repnz
aam
mov
call
jbe
data16
xlat
cld
dec
inc
jg
aaa
push
pop
inc
aas
enter
aad
lahf
mov
pop
mov
gs
addr16
mov
ret
xchg
or
fsubp
pop
mov
ss
sbb
incb
push
sub
push
pop
out
xchg
pop
in
push
lret
mov
cli
jne
inc
test
xchg
aas
test
sbb
xchg
loop
cmc
fdivl
jbe
sub
adc
inc
pop
cmp
xchg
jae
xchg
mov
arpl
pop
sbb
mov
std
into
lods
call
je
jmp
sbb
adc
jg
sbb
icebp
xor
cmp
mulb
or
dec
out
in
out
fistpl
ss
xchg
std
pop
sbb
xchg
js
cwtl
mov
ret
adc
and
jecxz
cli
inc
dec
xchg
dec
cs
or
push
or
movsb
adc
lcall
cmpsl
mov
pop
xchg
fs
lret
push
mov
jmp
jo
mov
icebp
xor
fsubrs
cmc
xchg
xchg
mov
mov
push
mov
fcmovnu
cmovl
fcoms
ss
adc
insl
and
xchg
mov
out
arpl
add
cmp
add
and
dec
xchg
lahf
in
jge
mov
stos
push
push
push
cs
push
sub
cwtl
mov
push
xor
add
test
imul
xchg
adc
add
push
mov
lret
jae
jb
iret
fwait
inc
cmp
aam
dec
jmp
fsubl
cli
add
movsl
sbb
sahf
inc
imull
das
in
pop
test
push
js
sbb
mov
fnsave
loop
xlat
mov
cld
jg
xchg
adc
adc
xchg
or
dec
push
and
dec
cli
or
aad
and
outsl
jns
cli
dec
push
mov
sub
mov
cmp
jmp
pop
mov
mov
mov
cmp
and
xor
xlat
hlt
xchg
jns
lret
lds
adc
test
mov
cmp
inc
cmpb
adcb
sbb
jb
sbb
int
pop
xchg
or
inc
and
xchg
xor
in
faddl
fstpt
jb
mov
cmpb
mov
enter
out
mov
js
cmp
in
or
jle
scas
dec
adc
mov
mov
inc
xchg
movsb
inc
adc
test
add
loop
and
mov
sbb
cmc
mov
cmp
xlat
adc
jbe
insb
imul
inc
push
cli
cmp
ds
stos
pushf
ja
addr16
mov
sar
adc
rorl
sub
frstor
in
inc
mov
jle
out
rolb
subl
fcmovne
in
bound
push
jp
sub
cmp
loop
mov
clc
movsb
pop
adc
sbbb
jecxz
lret
cld
dec
in
jl
add
iret
dec
dec
test
pop
imulb
lds
out
add
aaa
dec
ror
push
movsl
jle
mov
jle
adc
fs
adc
lcall
add
cli
sbb
sbb
in
cmp
lea
or
and
mov
and
or
stos
cmp
insb
loope
repnz
pop
jb
scas
mov
ds
mov
xchg
xor
jo
mov
add
sbb
add
mov
repz
hlt
adc
sbb
lcall
rorl
data16
test
cmc
pop
add
mov
jbe
or
lods
lret
jmp
ja
dec
cmp
ljmp
push
xor
repz
outsl
fisttps
sbb
repnz
aaa
inc
push
jmp
loope
sub
lods
cltd
add
mov
into
add
decb
jle
rol
jge
push
mov
iret
mov
inc
cwtl
ja
xchg
add
jno
xor
in
add
pop
nop
fwait
adc
lods
sbb
jns
repnz
arpl
xor
enter
mov
pop
scas
ss
leave
pop
loopne
orl
dec
mov
popf
sub
xchg
orb
inc
mov
inc
add
sub
and
test
jmp
ror
out
ret
mov
repz
lret
ljmp
stc
dec
orb
sbb
add
push
arpl
loop
arpl
xor
push
scas
pop
pop
pop
push
push
jp
out
data16
fcomps
popa
or
orb
xchg
push
jb
jnp
xor
push
fcomps
inc
xor
pusha
popf
xor
dec
cmc
sub
mov
jle
fs
push
add
out
inc
int3
les
cmp
cmp
jg
sub
aam
or
sub
pop
fisubs
mov
adc
or
xor
jbe
inc
sahf
or
dec
xorb
sub
inc
cmp
movb
aam
or
ss
in
mov
paddw
movsb
cld
loopne
or
push
and
pop
mov
pop
cmp
xchg
test
push
gs
js
mov
ret
xchg
adc
mov
insb
movsb
data16
jmp
pop
shrl
mov
mov
mov
jp
pusha
fimuls
push
popf
aaa
inc
insb
sbb
push
pop
in
aaa
fistpll
and
xor
xchg
mov
xor
movsb
add
xchg
insb
jl
pop
xchg
lahf
jnp
aaa
lea
sbb
xchg
xor
cmp
jno
stos
sbb
dec
push
xchg
dec
sub
push
shrl
jno
daa
mov
lock
out
and
mov
sarl
jecxz
int
sub
test
mov
adc
pop
cwtl
push
and
popa
idivb
inc
sbb
popf
loopne
mov
jmp
mov
mov
push
jl
jns
addl
xchg
inc
sub
mov
xchg
ret
add
jmp
sbb
test
sbb
sbb
mov
cmpsl
sbbb
and
and
mov
inc
mov
shrb
sahf
int3
jecxz
sub
out
fs
repz
sbb
sub
xorb
cmp
imul
mov
out
cwtl
in
dec
stos
or
and
xchg
xor
jl
aas
xchg
mov
jp
mov
pushf
popa
outsb
adc
setns
mov
inc
sbb
sub
addr16
aas
stos
add
jp
xchg
loopne
ljmp
mov
mov
sub
mov
inc
imul
cltd
flds
dec
mov
lcall
inc
mov
sub
mov
cltd
mov
add
or
dec
insl
out
inc
rcll
push
cld
int
scas
in
mov
aas
cwtl
ds
jmp
aas
cmpsl
call
xor
mov
cwtl
data16
push
lods
mov
test
scas
mov
leave
jns
or
icebp
mov
mov
adc
inc
and
pop
iret
stc
dec
loopne
cld
stos
jl
and
inc
lea
pusha
loopne
jl
loopne
mov
fidivs
mov
fwait
leave
sub
mov
or
sbb
dec
cmpsl
xchg
test
add
inc
sub
ret
movsb
shll
test
mov
and
and
cmp
push
jp
xor
rclb
pop
inc
jnp
loop
iret
adc
cmp
add
shll
inc
mov
add
mov
dec
fwait
loop
iret
test
test
repz
add
rcrl
shll
test
pop
push
push
cmp
add
fcmovnu
add
xor
mov
rol
fidivrl
je
cltd
out
xor
cltd
and
stos
jae
dec
and
cmpsb
mov
daa
loopne
mov
lcall
testb
mov
jno
push
cmp
mov
xor
call
ret
cmpsl
adc
loope
fdivrl
jge
dec
mov
lea
imul
add
aad
jae
rcl
mov
adc
sbb
lret
div
in
loop
outsb
mov
mov
pop
cwtl
add
roll
pushf
aaa
adc
add
lock
mov
jne
jo
add
enter
pop
adc
jno
in
into
xchg
pop
sub
loopne
pop
mov
sub
inc
jle
repz
mov
test
test
adc
mov
out
pop
jno
or
and
stos
lock
aad
loopne
jnp
and
cmp
sbb
mov
dec
and
sbb
insl
sti
xor
xor
mov
xor
lods
push
push
mov
shll
jne
adc
jbe
sbb
pop
shll
ja
jne
lret
cmp
xor
push
mov
adc
or
jle
ja
dec
insl
or
mov
inc
xlat
fucomip
out
jmp
adc
inc
call
add
jge
push
stos
jns
sub
int3
add
mov
fs
mov
popa
xor
orb
adc
add
sub
pop
jg
mov
add
sbbl
icebp
and
arpl
and
jle
pusha
popa
sbb
fs
dec
adc
sti
adc
xor
fwait
rcll
leave
and
sub
fcompl
dec
test
lahf
pop
lret
fsubrs
sub
add
jecxz
sbbb
inc
scas
fs
addr16
add
dec
je
jb
jbe
xchg
mov
cmp
lahf
ljmp
sub
xchg
mov
stos
les
into
mov
jle
jecxz
nop
jge
jg
addr16
cs
jmp
insl
movsl
cmp
cwtl
push
fcoms
cmpsl
scas
push
pusha
sbb
sbb
cli
mov
push
xchg
xor
movsb
dec
adc
inc
stos
addr16
pop
xchg
adc
pushf
sub
sub
ljmp
mov
pop
xor
xlat
shll
push
fsub
testl
into
xchg
xchg
stc
rcrl
fwait
push
xchg
out
mov
or
in
push
xchg
fs
mov
dec
lods
and
add
xchg
add
repz
mov
push
mov
rcl
stc
xchg
mov
out
jg
hlt
call
popf
jl
mov
push
lcall
cmp
inc
jno
cltd
mov
jl
int
dec
aad
sub
push
js
jae
or
scas
shrl
addb
loope
aaa
push
xor
xchg
fiadds
stc
push
aad
int3
mov
pop
and
aas
push
mov
pop
jnp
pop
cmp
lret
xchg
jb
or
pop
faddl
leave
mov
pop
jmp
ljmp
jmp
jne
clc
jne
push
mov
push
jecxz
xchg
sub
fiaddl
sbb
cli
pop
cmpsb
mov
pop
add
jae
repnz
movsl
shr
outsb
xchg
int3
das
sub
aas
lret
movsl
aas
inc
in
cli
sbb
aad
xchg
inc
jno
cld
sub
insl
idivb
jb
shll
sub
lods
mov
cli
adc
je
shrl
jns
aas
nop
test
dec
scas
jmp
add
addl
fsubl
data16
sbb
mov
ja
pop
into
jo
fisttpll
fs
pop
sub
inc
xchg
push
lock
mov
enter
mov
imul
dec
jb
out
jne
jmp
dec
gs
das
loopne
push
fs
shl
sbb
clc
jmp
out
sbb
pop
jg
popa
iret
sub
hlt
adc
mov
fcmovu
inc
pop
pop
dec
stc
cmc
xor
adc
iret
add
enter
adcl
pop
dec
push
inc
mov
cs
iret
loop
inc
add
adc
cltd
sar
in
jecxz
add
mov
jecxz
cltd
push
aam
loopne
inc
lods
clc
mov
ret
ror
cmp
add
adcb
and
ficomps
fidivl
fisttpll
sbb
and
inc
rol
jmp
xor
adc
xor
xor
push
xchg
mov
lds
aad
sub
popf
push
push
insl
sub
fdivl
mulb
sbb
ljmp
sbb
int
sahf
xchg
and
push
mov
ds
hlt
jne
cs
aaa
adc
insb
repz
or
add
test
dec
pop
fwait
adc
scas
mov
dec
arpl
int3
int
fs
dec
jmp
add
fstpt
jne
fldt
mov
pop
sti
fdivl
lock
ja
mov
mov
sbb
sarb
fs
dec
inc
mov
insb
cmpsb
icebp
stos
xor
cs
xor
cmpsb
int
inc
jno
ljmp
push
jo
sbb
xlat
add
in
sub
cmp
inc
or
int3
stc
inc
jne
sbb
fidivs
inc
lret
mov
neg
sbb
adc
pop
inc
xchg
cld
xchg
mov
test
ds
ret
sbb
lahf
adc
and
fwait
outsl
lea
xchg
repnz
sub
inc
inc
or
fisubl
push
notb
dec
add
mov
mov
and
cmp
in
call
xchg
arpl
clc
mov
push
jbe
and
addr16
fnstenv
lret
cmpb
xlat
push
aad
call
dec
scas
cltd
pop
test
dec
das
xor
mov
sbb
or
inc
cltd
pop
daa
jae
insl
adc
imul
aas
and
mov
mov
mov
xor
xchg
and
cwtl
cs
mov
dec
dec
mov
das
mov
push
push
add
mov
push
mov
xchg
pop
daa
ss
dec
xchg
fs
std
out
pushl
insl
insb
xchg
inc
out
jge
inc
stc
or
popf
pushf
jns
dec
adc
push
fidivrl
jno
push
lods
pop
cmp
mov
aad
mov
pop
loop
sbb
adc
and
fsubrl
mov
jns
cltd
xchg
or
cmp
fldenv
ljmp
movsb
pop
xchg
aad
sub
xchg
xlat
fsubl
xchg
sub
int
push
das
and
xchg
inc
push
divb
ret
sub
pop
cwtl
shll
ja
mov
pushf
aam
push
ss
sub
aam
fcomps
jg
hlt
mov
push
mov
cmpl
lret
pop
shrb
sub
sahf
xor
inc
cmpsb
cltd
dec
lret
cmp
std
and
mov
lods
pop
ds
pop
in
daa
push
xchg
pop
fcoml
xor
inc
mov
cmc
gs
jnp
jo
mov
dec
mov
add
inc
jnp
aas
mov
stos
mov
add
xor
clc
shl
fsubp
cs
das
movsb
adc
xchg
xchg
add
gs
jmp
aas
into
push
xchg
cli
jae
jmp
push
push
bswap
fcmovu
xor
xorb
testl
std
jl
std
setno
adc
out
jae
jg
in
jno
sbb
mov
adc
adc
das
or
rcr
mov
fcoml
movsl
mov
mov
xchg
mov
fsubl
pop
clc
mov
and
mov
add
fst
mov
loope
jmp
mov
imul
pop
jo
add
xchg
rolb
clc
fsin
xchg
xor
bswap
pop
sub
mov
fnsave
inc
jnp
daa
sub
std
sub
in
inc
idivl
mov
mov
jge
jb
scas
pushf
sub
std
or
jecxz
push
cmp
cld
adc
out
out
lea
push
std
xor
xor
stc
push
dec
lahf
sahf
in
scas
out
cmpsl
rclb
fistl
ret
mov
add
cmp
cmpb
sub
int
daa
sub
add
outsl
xchg
je
cmpsb
ss
test
scas
outsb
in
fcomps
out
call
jmp
cmp
test
lods
jmp
ljmp
xchg
cmc
sti
push
inc
mov
pop
dec
inc
mov
and
xchg
dec
sti
push
std
cmpl
cmp
insb
inc
loop
aam
add
dec
and
pop
fidivl
je
popf
popf
mov
adc
mov
xchg
lret
mov
mov
pop
in
lahf
pop
pop
aam
mov
inc
fs
sub
and
repnz
sbb
leave
xlat
fs
mov
int3
stos
nop
dec
ret
scas
push
dec
loop
mov
int3
gs
jns
fs
add
repnz
dec
cmp
nop
jmp
into
or
les
mov
xchg
mov
mov
mov
dec
and
fwait
or
movsb
lcall
int3
rep
imul
mov
shlb
popf
mov
cmp
lods
arpl
or
or
rep
pushf
and
test
mov
or
push
mov
in
adc
mov
popa
push
add
jb
push
ss
and
jmp
inc
cli
cwtl
jecxz
inc
jnp
jns
sbb
xor
mov
cmpsl
aad
pop
aam
loop
mov
or
test
jmp
adc
and
sub
aam
sarl
gs
movsl
jmp
je
mov
hlt
pop
pop
ja
pop
push
in
cli
cmpsb
cmp
gs
aad
cld
mov
mov
stc
fldt
icebp
mov
inc
jg
cltd
jp
cmp
cmpsb
jge
xchg
repz
stc
and
mov
shrl
sti
cltd
xchg
outsb
dec
or
data16
jns
pop
xor
adc
outsb
mov
sbb
lds
mov
xor
popf
xor
adc
mov
sub
mov
push
stos
pop
and
shll
mov
lods
ja
mov
lock
test
adc
mov
xchg
mov
mov
stos
std
icebp
loop
jo
mov
pop
jno
cmp
jbe
shrb
jbe
out
lret
js
mov
pop
push
and
test
adc
jle
das
outsl
jge
dec
nop
pop
mov
popa
add
bound
push
and
dec
in
lods
add
inc
orl
adc
rclb
mov
jno
sbb
mov
ds
add
ljmp
mov
out
cmp
lcall
mov
lods
sbb
addl
sub
jb
mov
movsl
and
pop
in
and
popf
stos
es
in
decl
xchg
je
jmp
push
mov
fcompl
mov
adc
icebp
imul
inc
cltd
ds
sbb
negb
loopne
xchg
cmp
sbb
cmp
xor
repz
xor
mov
add
sub
cmpsl
dec
subb
adcl
push
inc
scas
xor
and
loop
insl
xchg
lcall
pop
inc
call
pushf
jg
popa
jp
jmp
fcoml
pusha
fs
sub
mov
add
shrl
or
dec
mov
add
or
inc
xchg
mov
and
int
negb
leave
in
dec
pop
push
shll
add
or
ss
and
push
out
jp
sbbl
mov
pop
push
testb
mov
sbb
pop
cmpsb
gs
adc
pop
aaa
insb
xchg
adc
adc
mov
push
ljmp
movsb
or
pop
stos
nop
mov
enter
adc
sbb
add
push
jo
adcl
pop
xchg
pop
mov
sahf
cmp
bound
cltd
xlat
divl
std
sbb
repnz
push
pop
scas
dec
cmp
push
lods
sbb
mov
mov
and
mov
pusha
aas
push
adcb
cwtl
mov
cmc
pop
into
roll
addr16
test
add
mov
xchg
pusha
fidivl
push
pop
jns
popf
leave
xlat
jge
mov
lcall
xchg
sub
insl
lds
cmc
pusha
out
in
popf
push
stc
mov
lahf
stos
leave
jmp
mov
mov
dec
out
inc
test
inc
aaa
push
sbb
and
cltd
pop
pop
inc
push
and
adc
inc
xchg
lahf
rcll
lea
in
cmpsl
mov
pop
sbb
cwtl
fcmovb
imul
bound
or
arpl
mov
movl
fdivrl
add
das
mov
dec
or
dec
or
es
ds
add
mov
push
adc
push
xchg
xchg
mov
jno
jns
loop
sahf
xchg
or
and
popa
in
insl
out
dec
lock
dec
xchg
cmp
cmp
adc
or
sub
mov
and
lret
push
enter
cmpl
gs
sbb
dec
addr16
ljmp
jecxz
mov
iretw
rcll
xchg
ss
out
std
fsubl
mov
mov
mov
cmpsl
imul
push
scas
or
inc
mov
movsb
test
cli
jo
mov
mov
jne
mov
sarb
testl
mov
nop
push
inc
loope
out
cmp
pop
roll
mov
sub
pop
sbb
cmp
mov
push
cld
cld
mov
rolb
sbb
xchg
sbb
dec
mov
stos
mov
frstor
push
js
and
in
and
test
dec
cwtl
push
movsl
jge
out
lret
add
jbe
daa
psllw
bound
push
mov
sbb
add
nop
negb
mov
rol
or
push
std
mov
inc
jg
mov
outsl
cmp
cmp
mov
daa
movsb
in
mov
jl
loopne
add
mov
clc
adc
jmp
out
hlt
push
leave
mov
fstp
xor
or
pop
cmp
xchg
jnp
cld
and
fsts
sub
lock
jle
mov
sub
mov
loope
sahf
out
mov
movl
divl
inc
push
lods
xchg
and
in
ffreep
dec
pop
mov
adcb
sbb
sbb
shl
inc
pop
stc
mov
je
push
mov
je
jno
subl
int
cmc
cmc
test
xchg
mov
mov
jno
adc
imul
ds
loope
or
pop
xchg
imul
fwait
push
aaa
fistps
mov
mov
cmp
loop
xor
sbb
jns
repnz
add
xor
sbb
stos
xchg
lods
shrb
outsb
test
xchg
out
adcl
cmp
sub
int
adc
mov
inc
cmp
jo
lahf
or
xorb
mov
or
push
out
and
jb
out
ret
repnz
xchg
pop
lea
in
dec
and
nop
aaa
mov
adcb
inc
mov
js
repz
icebp
inc
or
pop
lods
hlt
mov
repnz
xor
insl
ss
inc
shlb
cmp
mov
in
mov
lods
in
sbb
repz
decb
add
sbb
outsb
push
cmp
stos
mov
cmp
cmpsb
xor
aam
inc
push
cwtl
mov
mov
xchg
lret
das
out
xor
mov
sbb
inc
mov
inc
adc
mov
jmp
ret
movsb
sub
aam
mov
push
sbb
out
out
mov
xchg
mov
testl
outsb
mov
jmp
sub
and
imul
mov
outsb
jmp
hlt
mov
out
movsb
mov
mov
std
jne
jo
and
bound
mov
sub
cmp
negl
rcrl
xchg
add
stc
and
in
sahf
push
xchg
scas
movsl
mov
nop
lcall
in
push
lods
or
lods
mov
test
jb
jne
cs
ljmp
pop
push
sti
in
sti
gs
dec
sbb
dec
ret
out
adc
sbb
inc
mov
sbb
ret
out
sub
and
pop
jnp
daa
cmc
imul
xchg
scas
mov
xchg
adc
imul
out
mov
imul
aad
dec
mov
sub
fwait
add
aaa
push
outsb
jae
jnp
sub
sbb
push
jg
ret
cmpl
into
mov
popf
les
je
cs
jecxz
jne
adc
lods
cmp
jnp
jg
jo
push
inc
sbb
cmp
adc
dec
push
inc
mov
out
in
jle
sbbl
incl
int3
sti
iret
mov
push
aam
and
aas
gs
jg
pop
faddl
xorb
pop
fincstp
xchg
shrb
std
data16
xor
sub
lods
xchg
mov
std
cltd
call
mov
pop
mov
xchg
push
int
dec
sahf
xchg
stc
push
ja
shrb
lods
mov
dec
subb
fisttpll
scas
int
xor
nop
push
cmpsl
loope
push
jmp
and
inc
pop
pusha
cmp
aad
and
popf
ss
lahf
xchg
or
out
scas
les
mov
mov
aas
push
cli
stc
xor
xor
fxch
aas
mov
fdivs
lret
pop
xchg
mov
lea
cli
inc
xchg
icebp
jp
shlb
scas
adc
out
pop
mov
mov
dec
repz
cmpsb
jae
gs
mov
cmpsl
dec
ja
popa
mov
incl
jge
mov
cmp
sets
dec
dec
lcall
jbe
and
test
gs
mov
sbb
pop
mov
mov
push
in
arpl
rcr
lock
mov
repnz
sub
daa
stos
xchg
cmc
les
push
out
lods
enter
mov
pop
loope
or
push
sub
aam
hlt
and
cmpl
pop
iret
cwtl
sub
addl
fldcw
mov
insb
mov
out
push
jnp
ljmp
jecxz
xor
and
in
test
mov
in
sahf
scas
neg
leave
imul
jge
ret
scas
xchg
jmp
inc
pop
movsl
iret
sub
scas
pop
add
pop
scas
jo
bnd
in
cmp
stos
mov
mov
push
std
fdivrp
cmp
cmpsl
test
cmc
repnz
jle
dec
aad
push
idivb
xchg
daa
jmp
lods
mov
dec
mov
repnz
in
dec
rcrb
lret
mov
xchg
pop
push
sub
push
mov
fdivrs
iret
lock
jns
xor
xor
push
add
fidivl
and
stos
cmp
inc
rolb
xor
jl
cmp
xor
and
cmp
mov
clc
add
and
xchg
jb
ret
stos
sbb
out
mov
sub
gs
mov
jno
cmpl
mov
out
inc
mov
and
out
xchg
push
sub
push
mov
dec
xchg
lcall
pop
in
adc
inc
mov
pop
add
pop
add
push
enter
xchg
cs
or
pop
sub
int
mov
mov
jne
repz
sbb
jne
or
dec
in
or
in
std
pop
xchg
jl
leave
in
pop
sbb
les
jno
or
dec
cmp
inc
xor
imulb
mov
icebp
and
movsl
fsqrt
push
mov
mov
mov
xchg
sub
cwtl
or
inc
imul
out
or
cld
cmp
jae
adc
push
fnstenv
jbe
sahf
lret
mov
js
stos
or
sti
aas
mov
xchg
mov
ret
jbe
dec
int3
icebp
out
cltd
hlt
int
in
mov
inc
mov
hlt
fcoms
nop
fwait
roll
mov
fstl
out
pushf
or
fs
popa
or
xabort
push
pop
sti
dec
lods
or
jb
cmc
and
inc
outsl
mov
ss
pop
mov
push
ror
sub
cmc
xchg
rorl
jo
call
loope
adc
jb
decl
sbb
mov
fnsave
sub
sahf
mov
push
adc
mov
mov
dec
pop
adc
gs
int3
xor
jbe
loop
sbb
push
mov
inc
mov
outsb
insl
xchg
mov
jo
lods
pop
push
data16
xchg
inc
jge
mov
jge
add
aaa
mov
xchg
aas
sar
mov
fcoms
pop
xor
or
sub
xor
pushf
clc
jg
or
mov
das
aaa
pop
push
bnd
ljmp
orl
inc
fdivp
inc
loopne
inc
xchg
cld
cmp
push
out
jne
fistpll
outsb
add
push
push
dec
repz
pushf
inc
outsb
popf
cmp
lcall
stos
mov
push
xchg
ret
mov
nop
or
mov
lods
cmp
nop
js
pop
setns
and
mov
pop
ss
inc
pop
pop
out
aad
xlat
mov
or
cmp
pop
pop
lods
into
push
adc
pop
pop
repz
sti
insl
je
sub
mov
std
stc
aas
jle
lods
fmul
hlt
and
mov
lods
jg
movsb
in
addb
or
lock
jns
mov
sbb
call
mov
in
test
sbb
or
mov
out
push
pop
push
mov
fildll
mov
ss
jo
or
dec
bound
xor
and
inc
pop
and
pop
cltd
sub
mov
and
inc
xor
arpl
mov
sti
std
repnz
pushf
rol
hlt
adc
xchg
xchg
inc
jge
pop
out
repnz
insb
adc
xchg
mov
sbb
cmc
fsubp
push
push
adc
bound
addr16
cmpsl
jl
push
or
add
or
mov
test
ja
push
ja
inc
jmp
imul
and
nop
cmp
lcall
mov
add
cwtl
adc
mov
andb
test
adc
test
test
pop
dec
aas
xor
inc
xor
jo
dec
pop
jl
cmp
xor
ficompl
ja
pushl
jp
out
mov
xchg
rol
push
in
mov
sarb
inc
repz
mov
int
insl
sub
gs
mov
jge
xor
jecxz
mov
cmc
shr
add
lea
xchg
stos
jp
jnp
cmpsl
jb
outsb
xor
mov
loop
pusha
dec
and
out
rorl
loope
sarb
sbb
mov
sub
push
pop
mov
cli
jp
mov
or
mov
cmp
dec
adc
sbb
mov
mov
fld
or
repz
cmp
lods
rorb
and
es
and
dec
lahf
cmp
fdivrl
js
insb
loopne
cmp
jae
ret
push
cld
test
pop
lahf
lret
lea
sub
fstpl
loopne
pop
pop
cmp
hlt
mov
and
lahf
mov
in
inc
stc
std
mov
xchg
mov
xor
mov
pop
inc
test
cmp
jb
into
repnz
and
push
insl
jae
push
insb
adc
push
fdiv
lock
or
cmp
dec
push
hlt
mov
ffreep
test
lock
dec
pop
adc
mov
jmp
stos
test
enter
dec
xchg
mov
push
sahf
xor
lcall
mov
mov
shl
inc
mov
jbe
sub
pop
jne
enter
mov
stc
out
pop
xor
lcall
clts
xchg
add
and
lret
test
adc
sbb
out
ljmp
mov
xchg
mov
jno
sub
ret
aad
in
out
lods
lret
pop
pop
dec
push
and
sub
in
push
imul
pop
jle
insl
adc
and
or
xor
mov
repz
sarl
jmp
sbb
and
dec
pop
xchg
and
popf
into
sbb
dec
pop
in
hlt
ja
gs
mov
pop
xor
mov
in
insl
cmp
mov
jecxz
movsb
add
mov
lcall
mov
aas
pop
pop
xchg
ret
leave
pusha
and
leave
xchg
push
cld
insl
jbe
mov
pop
outsl
je
jnp
clc
pop
pop
push
push
pop
pop
mov
or
push
pop
cmpsb
dec
mov
idivb
scas
cmp
cli
xor
sbb
ja
insl
out
pop
cmp
xlat
je
or
or
repz
pop
inc
dec
cmp
cmp
mov
or
std
mov
mov
mov
push
push
cld
push
insb
int3
jbe
jle
loopnew
xor
ss
jne
sub
loope
dec
fdivs
hlt
jbe
adc
xchg
jnp
mov
daa
inc
sub
push
rcr
movsl
roll
test
arpl
mov
jmp
cmpsb
or
mov
dec
ja
push
pop
fstpl
je
xor
or
xchg
inc
adc
pop
push
sub
add
fdivs
jb
dec
sahf
das
sub
das
shr
test
pop
movsb
das
lret
dec
shl
rorb
xorb
dec
push
xchg
in
js
out
insl
daa
xchg
cs
mov
push
cmp
dec
add
shll
or
repz
flds
push
xor
insl
jp
push
xor
dec
xchg
stos
push
fistpl
and
gs
dec
mov
mov
add
shll
sub
jl
enter
push
push
daa
leave
and
out
add
lods
cmpsl
pushf
mov
shl
or
pop
or
xchg
jle
push
enter
mov
cmp
and
sub
lods
jbe
add
sar
xorl
jmp
inc
rolb
gs
xchg
aam
push
jmp
loop
cmp
fnstcw
movsl
jnp
dec
xor
out
insl
ljmp
push
icebp
int
mov
shll
pop
ret
pop
stos
xchg
push
or
popf
dec
cmc
xchg
pop
mov
jp
shlb
dec
cmp
mov
inc
push
mov
sub
dec
mov
lea
and
jnp
fcmove
jecxz
pop
cmp
sbb
icebp
repz
inc
and
and
cli
or
sub
mov
enter
ds
pop
dec
add
call
fistpl
aaa
pushf
movl
push
movsb
or
inc
pop
cmpsb
add
jno
adcl
repz
lret
dec
jp
push
std
sbb
insl
inc
fwait
fs
sbb
mov
mov
push
inc
std
dec
xchg
orb
xchg
sbb
xchg
aam
or
add
sbb
in
cltd
sub
dec
mov
cs
dec
aam
mov
out
es
out
arpl
mov
adc
cmc
aam
jge
mov
cmp
fisubrl
mov
pushf
into
adc
mov
lret
add
stos
jo
jne
clc
and
mov
xor
sub
or
mov
je
scas
xor
xchg
mov
sub
cmc
add
scas
adc
addb
cmc
inc
xchg
jl
adc
test
clc
fs
fld
outsb
ss
sbb
stos
jp
mov
sub
loop
push
pop
addr16
dec
ljmp
leave
adcb
gs
push
fiadds
in
mov
rorl
sbb
sahf
mov
pop
lcall
lret
sti
aam
aam
popa
jns
adc
inc
nop
mov
mov
sub
cmpsb
mov
loop
insb
pop
xchg
xchg
pop
push
idivl
mov
and
inc
jmp
jbe
push
sbb
dec
xchg
xor
insl
data16
ds
sbb
push
mov
xor
cmpsb
leave
les
jae
xor
sbb
adc
shll
lods
leave
inc
dec
xor
ret
and
in
mov
mov
das
lds
cmp
push
cmpsl
aaa
repz
cmp
push
sbb
and
mov
and
pusha
arpl
xor
into
and
hlt
lret
mov
sarb
leave
push
iret
xchg
jo
cmp
jl
out
xchg
mov
popw
jp
je
jno
mov
arpl
sub
outsb
cmp
ror
adc
xor
cli
test
xlat
idivl
adc
add
add
outsb
divb
in
push
add
sub
aas
mov
pop
je
jo
mov
cmpsl
xchg
sub
xchg
sbb
adc
in
cli
adc
pop
loop
cld
in
repz
loopne
push
xchg
xor
imul
sbb
dec
xor
mov
push
mov
in
movsl
call
stc
mov
mov
fldl
inc
rcl
xchg
push
fs
mov
sbb
pop
xchg
adc
dec
pusha
push
cld
mov
vpcmpeqd
mov
cmp
xor
mov
mov
lret
lret
jo
adc
data16
cld
jle
and
dec
and
dec
or
lret
sub
mov
js
cmp
pop
jno
lret
push
push
test
imul
movsb
shlb
cmp
sbb
ret
cs
adc
jl
xchg
pop
pop
mov
mov
or
insl
in
mov
jle
in
pop
pushf
mov
xlat
scas
jne
sahf
hlt
push
cld
psubusw
and
mov
inc
fbstp
imul
pop
dec
xor
insb
mov
cmc
rcrb
xchg
out
or
push
mov
aaa
adc
jmp
xor
mov
into
iret
lcall
ja
mov
adc
mov
mov
insl
push
fsubrs
adc
loopne
mov
gs
adc
outsl
pop
or
xlat
cmc
mov
hlt
outsl
movsl
test
aas
sbb
aas
sub
jp
pop
xor
jb
cmp
loopne
das
mov
icebp
dec
adc
xlat
loop
mov
in
stos
mov
xlat
pop
lret
mov
cmp
jmp
adc
jns
mov
outsl
fcmovnbe
push
dec
testb
or
push
cmp
lcall
stos
mov
sbb
cld
lods
out
mov
jle
daa
ss
sbb
outsb
push
mov
les
sti
enter
repz
jae
insl
sub
data16
sub
dec
sbb
sti
mov
aas
and
inc
lcall
cwtd
mov
icebp
xchg
or
inc
out
pop
dec
xchg
rcll
popl
out
ja
add
out
loopne
call
jo
and
neg
scas
clc
mov
push
fwait
clc
testl
sub
mov
or
test
fwait
nop
inc
mov
in
stos
or
mov
enter
es
in
mov
outsl
dec
loopne
rorl
push
jle
push
mov
fs
sti
dec
lods
adc
call
les
jb
in
mov
sbb
fdivs
inc
test
add
xor
add
jae
and
dec
mov
jle
repz
outsb
out
lahf
lret
pop
push
shlb
mov
pop
jle
cmp
into
mov
rcl
into
or
jg
movb
insb
cmp
out
lcall
iret
in
hlt
popa
xor
dec
lcall
cwtl
mov
cmp
dec
cwtl
add
or
mov
scas
xor
cmp
pusha
mov
sbb
cld
xor
mov
ja
and
rorl
lahf
jnp
dec
push
cmp
scas
jbe
repnz
xor
test
pop
aad
rorl
outsl
inc
jns
push
dec
sti
leave
icebp
notl
aaa
xchg
push
sub
ljmp
loopne
sbb
or
cmc
dec
notb
movsl
jge
add
int
fistpl
xchg
cmp
popa
mov
jnp
dec
rolb
hlt
mov
out
ret
into
clc
pop
mov
push
lret
pop
mov
cld
xchg
repnz
push
jo
ljmp
push
or
add
dec
fldlg2
xchg
or
jae
leave
gs
ret
jg
jge
cmp
fsubs
push
inc
out
xchg
add
add
inc
pop
aam
adc
mov
fdivrp
pop
fnstsw
push
inc
adc
or
fs
stc
push
fwait
das
jo
cmp
lret
mov
out
mull
lret
insb
push
add
or
cmpsl
hlt
mov
jne
push
jl
xor
loopne
mov
jmp
clc
loope
and
mov
jno
sti
jl
inc
adc
xchg
push
jecxz
js
orl
clc
aas
cs
inc
mov
jno
inc
xchg
stc
push
fldcw
addb
or
mov
imul
pop
hlt
or
adc
dec
or
sub
jmp
sbb
or
movsl
repz
pop
lods
in
jmp
test
daa
jo
sti
cltd
outsb
mov
sbb
xchg
int3
in
dec
fistpl
fs
inc
or
or
mull
shrl
lea
cli
xchg
pop
loopne
sbb
sub
in
lea
jle
fwait
cmpsl
pusha
aad
pop
xchg
dec
loop
xor
dec
adc
jne
in
loopne
adc
add
gs
aaa
mov
test
sahf
fldl
add
xor
in
xchg
dec
jo
add
sbb
push
jns
fistpll
mov
jle
shlb
lea
jae
cmp
mov
loopne
rorl
mov
aam
adc
cwtl
dec
jb
mov
pop
jmp
das
popf
and
or
dec
xor
push
into
in
jnp
mov
cwtl
sti
xchg
lods
rcll
pop
mov
into
insb
adcb
cmpsl
mov
fldenv
jnp
fldcw
ret
pop
inc
push
mov
push
sub
jbe
movl
dec
adc
cltd
icebp
add
lods
push
test
inc
fwait
in
jecxz
dec
cmp
repnz
out
pop
xchg
andl
loope
cmp
xlat
mov
rcrb
pop
lahf
nop
shr
add
fldenv
add
adc
pop
mov
xor
iret
lret
dec
in
gs
nop
movsl
push
inc
sbb
push
adcb
popl
jle
adc
lods
insl
mov
pop
or
loope
xchg
andb
ss
jge
xor
push
incb
pop
add
iret
dec
and
out
adc
popf
push
add
add
mov
mov
notb
xor
pop
lock
pushf
or
stc
ja
cmpb
aaa
add
add
inc
sub
sub
sub
cmc
mov
scas
mov
xchg
mov
stos
out
or
shr
cltd
mov
push
jmp
adc
and
mov
movsb
stos
push
das
sbb
mov
mov
xorb
rolb
mov
adc
push
aaa
jmp
int3
adc
add
loop
jno
nop
cli
orb
scas
lods
int3
pop
push
cmp
stc
and
cmp
dec
sbb
rolb
fistps
ja
xchg
mov
cmp
adc
xorb
rolw
inc
xchg
lods
aas
ret
push
mov
insb
sub
dec
push
jne
push
ss
movsl
mov
test
fldl
jne
shlb
jge
xchg
inc
mov
pop
and
int
inc
pusha
idivl
jge
or
add
mov
scas
mov
mov
xchg
in
mov
xlat
stc
inc
dec
cmp
out
je
mov
stc
adc
out
leave
icebp
movsb
mov
xor
jmp
mov
add
sbb
pop
inc
cld
ret
loop
sti
mov
pop
mov
xor
pop
jge
fsubrs
xchg
xor
stc
add
mov
and
cmpsl
imul
sub
test
and
and
push
mov
push
push
pushf
inc
jg
xor
adc
cmc
out
or
cli
xor
jno
sti
and
insb
push
loopne
lcall
adc
mov
dec
xchg
mov
idivl
sbb
stos
adc
mov
jnp
leave
mov
pusha
push
cld
dec
popf
shl
xchg
jmp
dec
nop
popf
jg
insb
pop
outsl
sub
sbb
shll
sbb
xchg
sbbl
je
inc
pop
adc
push
andb
popf
mov
xchg
ret
pushf
dec
jo
fcoml
xchg
cmpsb
push
movsl
pop
cmp
sarb
in
push
sbb
movsb
mov
add
xchg
out
adc
push
inc
shll
or
mov
mov
jno
cmpsb
mov
insb
jnp
cld
push
icebp
das
inc
incb
xchg
aam
xor
xor
sbb
cmp
outsb
es
cmp
outsl
cmp
add
outsl
mov
nop
mov
xor
jb
jle
in
mov
in
sub
repz
test
push
dec
stc
and
ja
stc
add
aaa
into
pop
fucomi
jnp
push
add
popa
in
in
nop
ljmp
ror
nop
dec
je
push
subb
inc
adc
pop
imul
les
xchg
cli
pop
jmp
cmp
inc
gs
sub
loope
mov
bound
push
mov
cli
insl
mov
test
cs
jbe
sub
push
test
sub
push
mov
jns
dec
xchg
dec
out
movsb
sahf
xorb
sbb
clc
cmp
popa
jbe
gs
out
inc
pop
lods
mov
movsl
ds
jb
ficompl
adc
fldcw
lods
xorb
cmpsb
pop
push
cmpsl
xor
jns
mov
fsubrl
jmp
adc
popf
xchg
jnp
jmp
fld
xor
push
clc
mov
idiv
mov
cmc
push
ret
cmpb
inc
push
fcompl
push
lds
pop
push
sbb
sbb
mov
rorl
cmpsl
xchg
jle
test
mov
or
sub
loop
xchg
adc
fisubl
inc
pusha
sub
push
ret
lahf
dec
scas
lret
and
aad
push
mov
inc
xchg
js
notl
out
mov
out
pop
lret
hlt
dec
es
insl
call
lahf
lret
xchg
hlt
ss
gs
push
sahf
sti
sub
xchg
js
test
pop
dec
stos
mov
stos
or
ja
cmpsl
loop
inc
cmp
gs
cltd
or
shrb
push
out
or
jg
dec
sub
xor
roll
jns
adc
addr16
push
inc
das
loope
mov
and
inc
nop
dec
leave
arpl
mov
nop
adc
shl
push
or
inc
dec
and
out
and
push
fs
ret
xchg
mov
push
inc
sbb
pop
cmpsb
in
mov
sub
roll
fldl
jg
or
push
lock
repnz
push
sbb
loopne
sbb
popf
cmp
shlb
xchg
mov
xor
lds
push
shll
aas
cmp
mov
loop
scas
insb
mov
sub
mov
aas
cmp
test
sahf
std
test
ret
pop
mov
imul
sbb
adc
or
xchg
movsl
mov
xchg
lock
pop
cmpl
aas
lds
daa
push
jg
adc
arpl
xor
push
jl
lock
out
jg
jg
xor
mov
lcall
hlt
lods
cltd
push
repnz
mov
push
push
ret
xor
ret
mov
mov
je
mov
or
divl
lret
iret
stos
fcoms
push
cmp
std
cld
inc
cmp
arpl
pushf
enter
jae
inc
jecxz
out
aad
xchg
fildll
xchg
hlt
adc
dec
int
sbb
jmp
loopne
lret
add
std
dec
mov
cmc
pop
xor
enter
mov
mov
jbe
sbb
jb
insb
mov
mov
add
in
out
les
push
stc
inc
nop
stos
push
xchg
push
jb
aad
mov
add
stos
xchg
and
daa
and
shll
paddd
stos
mov
test
ja
les
dec
pop
sbb
cmp
inc
nop
mov
mov
dec
cld
jmp
mov
repz
cltd
dec
dec
adc
sub
cmc
inc
in
dec
cmpsl
jnp
sub
sti
imul
insl
jo
cli
fdivrp
pusha
sbb
add
lds
inc
pop
addr16
popf
mov
sarb
movsl
ret
orl
or
sub
sub
jo
sub
sbb
adc
loopne
and
out
ficoms
dec
mov
or
fidivrl
inc
repnz
mov
dec
test
fisubl
dec
xor
xchg
shr
xchg
push
das
jbe
ds
cld
ss
mov
mov
mov
popa
outsb
inc
test
cmp
std
mov
lret
jg
cmpsl
call
jo
sbb
mov
jge
xor
inc
adc
mov
pop
decb
add
repnz
fsubl
ficoml
imul
mov
loopne
mov
pop
dec
and
movsb
in
ljmp
test
push
jle
push
mov
push
jns
pop
and
les
out
xor
daa
cs
scas
out
sub
int
mov
in
sbb
in
stos
push
roll
in
sbb
xlat
dec
push
or
outsl
add
xchg
jo
cmp
push
jno
setne
decb
ror
movsl
in
fs
dec
std
test
sbb
pop
outsb
add
mov
sti
mov
jne
push
cmp
add
pop
and
mov
push
adc
aad
icebp
rolb
daa
outsl
pop
int
fs
sub
sbb
xchg
repz
cli
insl
inc
jle
cwtl
inc
sahf
into
xchg
mov
fmuls
mov
fstps
insb
out
fsubs
call
addl
cmpsl
out
loopne
add
sbb
in
or
pop
scas
scas
or
test
lods
inc
adc
and
repnz
mov
je
ljmp
dec
add
pusha
andl
pop
js
out
loope
std
addr16
pop
pop
jo
movsl
jae
and
dec
dec
ss
test
outsl
lods
jne
mov
mov
inc
push
mov
xor
jmp
or
xor
and
movsb
stos
cs
cmp
mov
mov
iret
mov
std
rcrl
dec
jg
adc
xor
or
push
les
fcmovbe
gs
dec
jle
push
scas
cmp
inc
xchg
mov
test
pop
adc
jnp
sub
lods
xor
andl
mov
jb
lea
mov
decl
push
repnz
por
xchg
and
mov
dec
mov
pop
inc
xchg
jge
pop
fnstsw
outsl
cmp
out
xchg
rcr
lea
pusha
add
push
dec
adc
sbb
data16
pop
cmc
stos
adc
movl
push
ja
xlat
in
lret
inc
push
std
cmc
loop
stos
cld
cld
ljmp
sysret
cmp
in
dec
leave
and
dec
or
icebp
xchg
dec
jmp
push
xchg
inc
test
mov
cmp
lahf
sahf
inc
fdiv
ret
sub
vmread
sub
fs
ja
aas
push
adc
ds
jp
int
pushl
pop
nop
aam
sbb
and
int
xlat
inc
dec
mov
xor
or
stos
insb
out
dec
mov
jb
jbe
adc
aas
add
jne
jg
lea
inc
jns
adc
lods
xlat
inc
pop
pop
xchg
das
jae,pn
cmp
test
scas
sbb
lods
stos
in
dec
stos
inc
divb
das
fcoml
std
test
repnz
lock
dec
add
call
scas
pop
dec
out
shll
lock
scas
xor
cmpsl
loope
sbb
add
sub
leave
xor
testl
sbb
in
pop
data16
out
aad
mov
sbb
cmp
in
lea
cmp
sbb
shll
add
or
xchg
fistps
pop
aas
and
dec
and
hlt
shlb
xchg
lahf
xor
cmp
pop
pop
int3
jno
imul
push
mov
repnz
jecxz
mov
sarl
cld
mull
addr16
mov
stc
push
imul
push
xchg
mov
fstl
jnp
xchg
xlat
test
lcall
aad
push
sahf
les
mov
lahf
xchg
or
ja
push
rclb
cli
pop
andl
lret
test
mov
or
lret
in
fiaddl
roll
daa
dec
pushf
pop
push
mov
leave
inc
push
push
daa
mov
frstor
mov
xchg
xchg
and
icebp
cmp
cmp
nop
in
xchg
cltd
mov
std
mov
jg
inc
mov
repz
das
push
xor
daa
and
pushf
movsl
cmp
aam
adc
dec
mov
mov
cmp
xor
outsl
notl
mov
out
loopne
inc
das
and
add
ret
fistps
xchg
lcall
adc
fcomps
gs
cltd
pop
outsl
mov
dec
fists
stos
cmp
imul
add
aam
repnz
cmp
jne
xchg
xchg
repnz
cs
fimull
jns
repnz
inc
out
lcall
lea
xor
cmp
aam
in
jae
fcomi
pop
jns
jge
sub
ret
cltd
mov
rorl
sbb
incb
repz
adc
std
les
cmp
cs
cmp
std
cmc
test
inc
dec
loope
dec
into
inc
popf
testl
inc
pop
enter
cmc
mov
sbb
xor
lock
clc
pushf
in
out
gs
mov
faddl
int
mov
adc
add
movsl
sti
loop
mov
jo
push
dec
outsb
xlat
mov
ret
adc
lods
jns
mov
xor
push
xchg
fwait
js
jnp
mov
pop
or
dec
jbe
xchg
lds
pop
mov
sbb
clc
loope
test
mov
test
xor
gs
mov
dec
popa
rcll
pushf
and
lret
mov
cmp
mov
add
lret
push
cmp
test
jmp
xchg
pushf
push
outsb
pop
cld
sarl
subl
or
int3
push
add
pushf
arpl
adc
cmpsb
sbb
cmp
popa
push
push
in
dec
mov
mov
incb
inc
and
inc
decb
inc
test
imul
sahf
sub
jae
adc
pop
pop
push
enter
sarl
pop
sahf
imul
stc
andb
sub
leave
lcall
jb
mov
insl
lahf
test
mov
mov
into
aad
in
cmp
cmp
movsl
lods
mov
dec
lds
cltd
mov
inc
add
mov
in
jae
shll
insl
inc
mov
push
jae
scas
sbb
dec
fisubs
cmp
gs
xchg
out
faddp
jle
data16
inc
add
xor
fucomi
enter
mov
sbb
pushf
notb
adc
cmp
adc
outsl
fwait
push
out
sbb
pushf
aad
adc
inc
push
xor
mov
fsubrl
or
xchg
jle
les
nop
jp
inc
add
mov
add
push
pop
aas
shrl
push
xchg
call
iret
stos
inc
mov
dec
and
dec
repz
cld
ret
mov
sub
jle
sub
ss
std
jge
push
fisubl
test
push
lret
gs
add
jno
mov
orb
dec
sbb
sbb
mov
push
mov
mov
in
outsb
xor
cmp
movsl
aad
pop
cmc
fmulp
add
mov
mov
cmp
loop
inc
dec
andb
rclb
mov
shlb
mov
rcrb
adc
ds
mov
dec
les
dec
xchg
jl
arpl
cmp
mov
or
cmpsl
into
movd
lret
ljmp
orb
push
pop
fildll
cmp
data16
in
add
adc
and
lods
out
movsb
jg
inc
cmpsb
aas
adc
ds
and
sbb
and
fcom
scas
test
popf
inc
inc
xchg
cmpsb
popa
scas
jmp
xchg
leave
mov
movb
insb
dec
inc
loop
stos
jo
test
add
lea
push
fsubr
mov
inc
add
sbbl
dec
jnp
pop
adc
pop
enter
pop
xchg
xchg
and
xchg
push
pop
clc
cwtl
loop
dec
shlb
push
mov
mov
inc
inc
sub
sub
les
cld
jns
jne
movsb
mov
mov
xchg
test
stc
xor
leave
add
push
xchg
lret
jle
aad
push
mov
cs
popf
popf
insl
jmp
lret
loope
inc
imul
push
cltd
or
fimuls
cltd
aad
out
in
into
lcall
xchg
jge
xor
or
loope
push
leave
mov
jb
push
cmpsb
sub
push
dec
mov
xorb
iret
lret
add
subl
iret
sar
fstl
testl
lret
dec
jno
in
dec
push
mov
inc
and
cvtdq2ps
and
mov
mov
filds
test
xlat
lret
imul
cmp
addr16
mov
push
pop
imul
xor
xor
push
cmpsl
test
scas
cmpsb
fistps
and
fdivrs
pop
mov
movsl
clc
test
mov
test
fdivrs
pop
lock
clc
cmc
icebp
enter
inc
xchg
add
int
cmpsb
ret
cmp
jmp
jno
xchg
mov
lret
mov
aas
icebp
pushf
in
imul
arpl
cltd
sub
aaa
dec
pop
sbbl
sbb
sarb
inc
sub
or
push
cltd
mov
xor
push
or
aaa
movsl
pop
pop
mov
and
lahf
scas
and
imul
cltd
and
or
cli
add
call
mov
dec
loopne
repz
loopne
xchg
pop
outsb
mov
rorb
xor
lds
push
lcall
jno
and
test
sub
sbbl
iret
std
push
dec
scas
jno
jno
cmp
or
loopne
lret
xor
inc
fdivrs
lock
jne
insb
lcall
inc
add
ja
andb
in
adc
dec
mov
aam
nop
pop
ss
call
dec
sbb
je
adc
daa
xor
mov
push
cli
sbb
insl
insl
icebp
stc
out
mov
imul
cmpsb
dec
iret
mov
adc
ds
ss
xor
and
les
je
sahf
xor
sub
rorb
mov
push
push
dec
jl
xor
xchg
push
icebp
js
int3
js
pusha
out
add
and
in
cmpsb
cmpsb
or
int3
and
sub
and
sbb
xchg
mov
aas
sbb
sub
mov
push
mov
nop
lock
into
mov
movsl
arpl
jae
push
cmpsb
and
stos
into
or
frndint
test
ret
push
fstpl
loopne
gs
and
jge
mov
jg
and
pop
inc
lods
add
lahf
bound
leave
xlat
or
lret
shr
fdivrp
mov
pop
lret
fiadds
popw
int3
lcall
push
jno
push
pop
gs
adc
adc
or
cmp
mov
mov
pop
xchg
sub
fwait
shll
fld
sub
movsl
rorb
push
fwait
cwtl
dec
adc
dec
add
push
cmp
xor
lahf
outsb
clc
mov
sti
insb
cmp
pop
dec
inc
dec
mov
cmpsb
jmp
push
mov
cmp
xor
inc
fstpt
mov
adcl
jmp
ret
movsb
roll
pop
inc
jo
push
ss
or
or
mov
inc
sbb
fdivrp
arpl
push
mov
pop
je
inc
sbb
test
or
xchg
mov
test
pop
mov
cmp
in
lock
lret
xchg
sbb
jecxz
pop
imul
xor
sub
mov
rorl
add
outsb
or
push
ja
add
mov
stos
adc
sub
fs
push
mov
sti
xor
imul
xor
mov
jmp
xchg
adc
sbb
push
cmpsl
sbb
test
inc
ret
out
imul
aad
ret
xor
push
cs
aas
sub
aam
rorl
sub
pop
insb
pop
jns
push
sahf
push
lret
imul
cmpsl
pop
ja
jnp
jnp
jno
cmp
sahf
mov
sub
push
aas
xchg
lods
aas
or
mov
inc
mov
dec
into
mov
cltd
pop
push
jnp
loop
sbb
cltd
lret
dec
call
push
ds
sti
pushf
ret
rcl
fldl
add
inc
mov
mov
aaa
mov
sub
mov
out
repnz
mov
stos
dec
xor
cmp
adc
and
test
cld
mov
dec
sub
jge
iret
and
jmp
sbbb
lahf
cmp
fsubl
jno
in
jmp
loop
jmp
testl
mov
arpl
jnp
push
xchg
push
cmc
fidivrl
xchg
fbld
in
or
cmp
aam
shrl
hlt
dec
xchg
stos
sar
imul
xorb
in
sub
pusha
repnz
addr16
imul
xor
dec
pop
loope
push
jno
xor
cmp
add
sub
jmp
jle
les
aad
xchg
ljmp
jns
adc
test
add
push
cmp
xor
push
int3
mov
bound
mov
loop
mov
mov
mov
sub
xlat
xor
fdivrs
pusha
test
xor
xchg
fcomp
xor
adc
jp
jae
mov
push
js
pop
in
aam
imul
movsl
ja
adc
popa
cwtl
pop
dec
insb
push
gs
ja
cmp
mov
adc
fnstenv
inc
repnz
adc
mov
in
fcomps
popa
dec
aaa
and
mov
mov
movsl
daa
and
rcrb
pop
mov
stos
inc
scas
pop
xor
dec
les
and
push
cmp
mov
push
cltd
icebp
aas
inc
jns
bound
repz
push
sbb
and
int
test
std
dec
cli
sbb
jl
push
mov
iret
mov
jl
pop
jae
stc
jo
iret
mov
movsb
mov
inc
push
lret
mov
jb
icebp
fnstsw
aaa
mov
and
and
bound
mov
pusha
mov
data16
decb
push
loope
bound
outsb
push
ret
nop
mov
pop
cmpsl
push
test
imulb
pop
fs
hlt
fadd
and
sub
ficoml
aas
aam
cld
mov
cmp
and
arpl
or
mov
xor
int3
stos
div
mov
lcall
jno
ljmp
cmpsb
jb
fcmovne
mov
sub
xchg
sub
cmpsl
in
fnsave
sahf
movsl
in
push
insl
loopne
push
sub
jae
cmp
cwtl
jno
mov
or
xor
shll
js
orb
je
cmp
leave
mov
cmp
xchg
mov
xchg
mov
and
mov
jbe
loopne
xlat
jl
or
mov
lcall
ja
adc
fmull
int
sti
clc
inc
lock
insb
and
pop
dec
cmp
push
inc
sbb
push
es
in
jne
rolb
scas
out
movsl
dec
out
pushf
out
cltd
js
into
dec
lea
loopne
stc
call
mov
out
mov
mov
imul
shrd
jg
and
dec
adc
jecxz
xchg
fldcw
jne
xor
loop
ficomps
push
stc
sub
lret
pusha
out
mov
lds
jmp
lret
sbbl
sbb
lock
jb
scas
inc
pop
jbe
jo
push
xchg
in
mov
adc
cli
and
mov
bound
xchg
sarb
cmpsb
adc
inc
jge
adc
inc
imul
or
mov
lods
add
adc
dec
sbb
push
ret
jg
push
jne
nop
dec
aad
insl
bound
cwtl
mov
mov
cwtl
pushw
popa
inc
idivb
pop
or
es
mov
jbe
jb
jecxz
sti
arpl
adc
cmp
mov
mov
scas
dec
popf
cmp
popa
outsb
push
adc
and
mov
xchg
push
lret
pop
movsb
call
xchg
sub
mov
inc
mov
push
add
les
mov
pop
push
xchg
scas
into
inc
imul
ret
gs
mov
icebp
fsubl
fmull
cmp
adc
add
iret
sbb
and
inc
sahf
mov
movsl
jge
outsl
cli
dec
fisttpl
dec
fs
xchg
cwtl
mov
jge
icebp
inc
int
outsb
icebp
lea
inc
adc
movsb
psubq
adc
stos
mov
inc
push
leave
cmp
sub
in
mov
jl
in
cmp
or
arpl
fidivl
aad
call
mov
jecxz
arpl
imulb
sbb
and
dec
je
dec
cmp
imulb
mov
jae
ret
rorl
subb
es
jno
mov
xchg
jl
movsb
pop
out
and
mov
popf
mov
sbb
jg
iret
arpl
or
mov
les
stos
rcrl
popl
in
jp
mov
testl
cld
push
js
mov
xor
inc
insb
sub
insb
push
mov
jg
daa
and
shr
jno
pop
sub
inc
stos
cmp
sbb
add
rcl
sarb
cmp
adc
out
mov
and
adc
lret
xchg
sarl
cmpb
dec
test
call
mov
or
lods
jle
pop
aaa
mov
xchg
jns
daa
xor
add
push
mov
adc
xchg
jb
mov
hlt
shl
and
cltd
and
out
add
xlat
xchg
dec
add
jp
lock
adc
aas
pop
sbb
iret
cmpb
adc
or
outsb
pop
stc
imul
pushf
jle
test
into
xchg
fbld
mov
sub
aad
inc
fistpl
faddl
push
mov
sbb
jno
and
movsb
xchg
sbbb
mov
push
mov
shlb
pop
fsubs
das
mov
mov
push
push
xchg
mov
or
mov
hlt
pop
out
cmp
or
leave
loop
lods
mov
pop
push
movsl
sahf
dec
mov
xchg
xchg
cmc
mov
jg
push
adc
pop
mov
pusha
and
dec
inc
mov
lret
add
add
loopne
addb
mov
into
cmc
cmp
xchg
cli
leave
push
call
push
mov
fdivrl
mov
and
push
inc
iret
cmp
aam
out
int
adc
dec
jle
out
mov
sarl
rolb
cli
mov
pop
jns
movsl
sti
jno
and
sbb
pop
insl
insb
movl
add
xor
add
pop
push
mov
in
test
test
aas
fs
cld
cmpsb
sarl
bound
xchg
imul
or
into
mov
ja
test
rcrb
push
fimull
mov
sarl
movsb
test
pop
gs
cs
adc
pop
cld
ret
fwait
ds
stos
int
mov
xchg
mov
mov
push
aaa
fucomp
arpl
sbb
push
ss
jbe
out
push
jecxz
int3
movsl
popf
rorl
or
xchg
or
mov
and
mov
jge
dec
imul
jg
jecxz
popa
pmuludq
fisttps
push
enter
mov
leave
inc
pop
jo
pop
xchg
jge
sahf
xchg
loopne
sub
out
fisubrl
enter
inc
fs
push
add
cmpsl
sarl
int
mov
cmc
imul
lods
fwait
les
pop
dec
mov
cmp
fildl
mov
or
fwait
and
clc
mov
sub
ss
out
mov
inc
fldenv
pop
push
cmp
cltd
loope
in
mov
mov
inc
incl
mov
das
sub
push
mov
sbb
pop
push
rorb
repnz
fwait
and
pop
sbb
rol
xchg
push
dec
cltd
scas
dec
fucomp
adc
inc
shl
push
jp
cmp
cmp
mov
sti
lahf
cwtl
push
pop
cmp
roll
sub
fstl
outsb
fwait
leave
cli
aaa
jl
dec
pop
cmc
push
popf
dec
cmpsl
cli
aad
or
and
int
xchg
out
cmp
nop
pop
push
shl
ja
jo,pn
ret
out
mov
stos
test
fists
popf
cwtl
push
out
insb
pop
ss
pushf
mov
mov
ljmp
sbb
push
negl
in
insl
mov
jnp
test
sub
cmp
mov
mov
xor
push
js
gs
push
out
lcall
inc
mov
mov
jge
pop
add
sbb
pop
insb
mov
ja
lcall
sub
cs
xchg
push
les
sub
pop
inc
mov
mov
dec
jp
scas
cmp
shrl
pop
pushf
cmp
inc
push
mov
in
mov
nop
sbbl
sub
out
call
and
jnp
dec
clc
mov
repnz
idivb
inc
xchg
sub
lea
daa
int3
pop
jnp
sub
mov
cmp
mov
jbe
outsl
xlat
push
pop
scas
add
loopne
enter
leave
push
out
cli
gs
movsb
xchg
sbb
pusha
nop
xchg
leave
stos
xlat
fnstsw
sub
push
divb
idivl
sbb
xlat
push
push
jns
dec
and
repnz
mov
sub
jp
sub
jnp
imul
cltd
outsl
jo
adc
mov
and
mov
enter
lret
mov
sbb
imul
shlb
leave
sbb
popf
loope
sub
xor
jmp
pusha
fisttpll
xchg
add
adc
jl
mov
lock
decl
lahf
xchg
push
jb
xor
adc
push
mov
data16
adc
mov
sbb
mov
lahf
ja
fwait
cld
xchg
loop
insl
call
push
cmp
outsl
xlat
mov
push
mov
push
test
popf
cmpsb
push
insb
mov
test
lcall
ret
pop
add
sub
pop
fwait
test
push
jmp
cmpsb
cmp
jge
jae
test
sti
dec
xchg
pop
sbb
mov
mov
inc
popf
test
ret
push
xchg
sub
decb
cli
scas
cmp
pop
cmpsl
leave
je
ret
add
push
popf
bound
push
mov
repz
push
pop
test
mulb
push
enter
out
ljmp
xor
fsin
cmpsl
aam
add
pop
outsl
xchg
inc
dec
stos
and
mov
add
nop
jno
aas
add
popf
je
xchg
imulb
sti
cmp
repz
mov
add
or
loopne
mov
cld
imul
dec
sub
pop
sahf
insl
jmp
sbb
into
lods
push
sub
les
cs
push
xor
adc
jns
loop
xchg
push
inc
cli
cli
std
dec
cmpsl
xchg
mov
inc
sar
or
aaa
xchg
js
lea
ret
xor
je
gs
scas
outsl
or
mov
dec
and
mov
dec
lret
dec
adc
fisttpl
scas
outsb
imul
adc
sar
es
cmp
add
adc
psubq
jp
insl
jnp
cmp
dec
nop
hlt
sub
adc
jne
loope
mov
inc
pusha
and
or
jge
ret
mov
xchg
loope
aam
fistpll
mov
push
iret
andb
pop
push
mov
inc
es
das
sub
movsl
pop
enter
data16
xchg
out
addb
jns
lods
mov
or
int
jg
sub
mov
stc
pusha
or
pop
mov
std
pop
data16
mov
pop
jns
shl
pusha
dec
jae
jnp
add
jge
jns
sbb
and
and
mov
stos
sti
lods
in
jae
adc
adc
mov
lcall
jo
mov
dec
rolb
push
lea
outsb
movsl
cltd
sub
addr16
mov
inc
push
insl
into
adc
imul
push
fmull
insb
repnz
mov
je
insl
pusha
inc
jl
out
and
subl
lds
cmpsb
jecxz
mov
adc
pusha
jp
dec
add
int
fiadds
lods
dec
shll
xor
pop
arpl
push
jmp
adc
mov
fistps
xchg
pop
or
dec
cs
or
fsubrp
sub
jns
fldt
sub
push
pop
or
into
loope
mov
outsl
or
jge
in
lock
inc
lret
jbe
rol
in
pusha
mov
ljmp
ja
mov
inc
jno
scas
pop
pop
popa
inc
pop
dec
lcall
cmc
das
aad
cmp
push
inc
mov
pushf
mov
xor
cmp
jecxz
and
xchg
popa
scas
sbb
les
inc
pop
shlb
inc
test
test
les
mov
sbb
add
mov
icebp
pop
sbb
bound
pop
pop
sub
xchg
outsl
mov
das
xchg
addb
leave
cs
dec
mov
in
pop
repz
outsl
mov
push
jbe
ss
in
sbbb
fcoml
inc
jge
mov
gs
in
cs
mov
and
dec
leave
in
and
jae
jecxz
daa
xchg
mov
push
push
fdivl
cld
call
pop
test
cmp
fisttpll
mov
inc
in
lcall
sub
mov
sub
rolb
pop
xchg
clc
and
test
dec
inc
fstpl
cmp
ss
adc
out
mov
push
mov
jbe
jmp
add
mov
and
fildll
jp
out
sub
inc
fsubr
push
mov
test
in
fs
fnstsw
frstor
fidivl
cld
and
pop
std
jp
sub
mov
lahf
inc
cmpsb
push
ret
or
mov
aas
add
mov
daa
sub
cltd
out
or
sti
ret
pop
sub
xchg
int
pop
and
ss
lds
xchg
mov
push
mov
repz
loope
outsb
mov
jecxz
stos
pop
add
clc
movsl
out
mov
jb
test
xchg
js
mov
and
xchg
sbb
pop
cmpsl
and
and
jmp
cmpsb
out
pop
inc
lcall
sub
test
pmulhuw
dec
fwait
jecxz
icebp
dec
aad
xor
stos
test
pop
fldl
rorb
cmp
sbb
nop
inc
or
or
ret
test
mov
xor
int3
xor
mov
dec
rcll
in
inc
jno
stc
out
call
mov
bound
int3
loope
je
pop
inc
jnp
cmp
add
add
cmp
adcb
add
push
dec
or
and
push
sub
jo
sub
sbb
in
dec
out
mov
dec
loopne
mov
pushf
lea
aaa
test
xchg
cmpsb
or
sub
ljmp
dec
sub
xchg
test
pop
insl
dec
xchg
xorb
adc
rcr
cmp
mov
xlat
outsb
pop
push
lods
inc
mov
sub
xor
ds
repz
mov
adc
test
lock
in
roll
aam
xor
js
mov
mov
mov
test
cmp
cmp
push
clc
cmp
sub
mov
mov
outsl
movsb
adc
in
aad
incb
cli
xchg
inc
fldenv
cmp
adc
xchg
imul
cwtl
loope
mov
mov
mov
outsl
sahf
and
adc
and
dec
daa
jle
repnz
sahf
adc
push
imul
mov
aam
in
push
sbb
fisubrl
fisubrl
push
adc
dec
add
dec
inc
mov
into
out
pop
inc
inc
mov
icebp
adc
shlb
sbb
sub
jp
inc
std
add
jmp
sub
push
fiadds
ss
das
xchg
lret
mov
addr16
movsb
jmp
sub
add
add
imul
sbb
adc
and
jge
inc
or
xchg
lds
xor
cli
cmpsl
xor
xchg
push
fmull
sub
sub
hlt
fsubs
popf
or
js
inc
lea
and
mov
mov
mov
jo
and
mov
push
rcrb
adc
mov
cli
jae
sbb
shr
int3
cmp
jbe
mov
xor
add
pop
stos
ror
xor
add
adcb
jp
fmul
mov
lods
mov
shr
pop
xchg
cmp
das
dec
and
sti
icebp
mov
dec
pop
out
push
or
je
mov
outsl
iret
lret
aaa
push
lods
xchg
outsb
push
testl
ds
gs
adc
fadds
add
repnz
sahf
shll
mov
cli
xchg
out
addr16
inc
ret
cwtl
dec
xchg
xorl
std
xor
jl
into
pop
xchg
pushf
xor
sbb
icebp
addr16
testl
leave
scas
mov
fnstenv
lock
mov
fcomps
and
lods
ds
push
mov
sbb
xlat
insb
movl
in
xchg
lret
icebp
ficoml
mov
mov
xchg
aam
gs
jnp
int
outsl
call
xor
mov
xchg
mov
repz
into
adc
stc
mov
or
lea
stc
js
and
cmp
loop
add
icebp
pusha
inc
xor
out
mov
jmp
cmpsb
push
test
ljmp
or
push
into
fmull
roll
in
jnp
aad
xchg
cli
sbb
adc
jecxz
sub
mov
pop
lcall
ds
out
aad
sbb
or
mov
dec
out
repz
fstl
pop
mov
popa
mulb
adc
xchg
jl
in
mov
inc
in
jl
jno
inc
jmp
mov
je
mov
sbb
jecxz
shll
rolb
adc
mov
cmpsb
jno
pop
xor
cmpsb
cltd
sbb
decl
jmp
sahf
mov
add
hlt
cmp
mov
xchg
xor
fimull
int3
or
adc
fst
mov
cmp
add
pop
sahf
hlt
mov
pop
sub
xlat
repnz
and
push
jno
and
jmp
jo
push
pop
iret
aam
pop
mov
mov
fcmovnbe
pop
or
sub
lahf
jl
cmpsl
fst
je
dec
hlt
fisttpl
mov
jns
sbb
iret
out
sahf
adc
sbbb
pop
enter
sarb
ret
and
in
inc
add
mov
mov
in
les
fs
mov
bnd
cld
push
sub
xchg
rolb
data16
and
jle
fs
jg
mov
icebp
push
push
aam
xchg
jb
int
jecxz
shll
mov
cmp
loop
vcvtss2sd
fists
repnz
incl
inc
add
outsl
mov
push
add
push
fisttpll
mov
add
test
lock
mov
xchg
inc
mov
fldl
in
mov
inc
outsl
cmc
jnp
jmp
pop
jo
mov
or
push
and
push
pop
push
aam
cld
call
mov
push
addr16
push
jnp
dec
insl
inc
add
or
in
cs
sub
push
inc
outsl
lea
dec
xor
jae
loop
movsb
es
cmp
jns
enter
mov
cmp
adc
fistl
roll
mov
jbe
fst
inc
addr16
push
subb
push
xor
stc
or
sbb
or
lock
idivb
mov
adc
call
and
js
inc
adc
loop
mov
push
sbb
fisubrl
fs
push
sbb
cltd
call
dec
xlat
sbb
add
pop
adc
jns
pusha
jnp
mov
xchg
jne
adc
inc
icebp
jne
daa
xor
fmull
aad
int
fwait
adc
imull
push
imul
int
xor
rolb
xchg
xchg
sub
out
xorl
pop
jae
push
xchg
mov
mov
mov
fdivs
push
rcll
cli
fnsave
add
jne
mov
cmp
mov
and
jmp
shll
add
and
pop
les
call
dec
cmp
sbb
and
xchg
in
ret
bound
push
test
push
lds
arpl
push
jp
cwtl
jbe
adc
nop
imul
mov
ja
mov
ret
lret
adc
test
aas
mov
int3
jle
jg
stos
hlt
fdivrs
pusha
pushf
cmp
mov
and
jo
or
popa
loop
mov
shrl
xchg
jecxz
push
xchg
sti
or
cmp
test
sub
imul
aam
sbb
dec
mov
cmpsb
mov
inc
fwait
ret
mov
outsl
sbb
jbe
pop
and
arpl
mov
lret
int3
iret
cmp
xor
xchg
outsl
xchg
movsl
sbbl
sbb
adc
jo
mov
imul
lods
sub
dec
leave
adc
jmp
push
pop
add
insl
mov
sub
stc
scas
rorb
scas
dec
jecxz
outsb
jle
cmp
inc
cmp
out
shll
adc
and
mov
scas
fstpl
xchg
and
mov
push
nop
aad
mov
lcall
xchg
rcrl
mov
jmp
and
lock
lahf
pushf
ds
ljmp
dec
sti
mov
mov
pop
adc
push
xor
stos
sarb
in
stos
cmpsl
sbb
cmp
jo
mov
lahf
xchg
hlt
add
mov
sub
nop
lds
mov
loope
stos
pusha
sub
dec
sub
mov
dec
dec
ret
lods
dec
jbe
xchg
jmp
mov
lcall
fbstp
jbe
fldenv
sti
clc
ljmp
dec
in
jmp
or
inc
cmpsb
mov
cli
sub
mov
addl
cltd
int3
push
add
cwtl
popa
jnp
das
pusha
and
cmp
adc
mov
pop
inc
loope
in
mov
imul
inc
mov
mov
dec
mov
xchg
inc
pop
bnd
cltd
sbb
scas
push
xlat
fs
into
aaa
and
push
lret
cmpsb
or
cmp
andb
je
repz
addr16
pop
push
mov
fsubrl
pop
out
mov
dec
pop
fcoms
loopne
cmp
movsl
decb
xchg
mov
xor
popf
pushf
sbb
lock
xor
test
sbb
icebp
aam
ljmp
ss
roll
fsubs
or
sbb
or
adc
push
jge
sbb
jno
adc
dec
nop
inc
jmp
pop
and
mov
sbb
or
xor
or
adc
fwait
daa
pop
jmp
xlat
jno
loope
leave
push
lea
dec
push
cltd
or
xchg
es
aam
sbb
cmpsb
sahf
fidivs
clc
ss
das
daa
shl
mov
jle
ret
sbb
pop
call
ss
mov
pop
and
jmp
adc
mov
addb
fs
sub
push
int3
adc
imul
sti
jmp
sbb
or
adc
cmp
mov
mov
pop
dec
pop
arpl
sbb
jmp
jne
shrb
adcl
in
push
mov
ss
xchg
into
test
iret
mov
pop
outsb
divb
mov
mov
pop
lods
mov
fldcw
fsubrs
movsl
dec
mov
pushf
test
xchg
sbb
pushf
repnz
and
popa
shll
std
int3
addr16
lret
mov
test
loopne
subl
data16
ficoml
test
fsubrs
dec
jb
movsl
int
daa
cwtl
add
jl
cli
arpl
insb
insl
insb
mov
dec
shl
push
sub
or
inc
test
cmc
ror
sbb
in
aaa
mov
mov
test
popf
jp
jo
dec
push
js
mov
pop
movsl
cwtl
dec
sahf
pop
into
aas
push
mov
push
loop
jbe
jmp
sbb
lods
sub
xchg
lcall
sub
in
jp
mov
test
jecxz
test
sub
fnsave
xor
repnz
test
jnp
mov
push
out
enter
out
cmp
inc
inc
lahf
dec
pop
in
xchg
inc
xor
add
add
sti
and
movsb
data16
mov
popf
adc
mov
inc
mov
rclb
leave
fstpl
aaa
mov
sub
mov
push
lahf
repz
jge
lock
int
cmp
lret
sub
dec
xchg
push
mov
cmp
icebp
push
lods
push
sub
push
mov
cmpsb
xor
cmp
int
or
mov
adc
xchg
lret
cwtl
mov
and
lcall
mov
and
insl
or
mov
jno
scas
mov
mov
sub
lcall
gs
or
mov
mov
add
dec
arpl
leave
sub
outsb
sti
fisubs
pop
mov
imul
mov
lds
jecxz
aam
loope
and
fildl
xchg
adc
jb
popf
mov
push
jno
dec
push
sbb
repnz
sbb
cld
dec
fs
and
xor
or
jns
add
inc
test
or
dec
stos
into
orl
mov
popa
adc
fiaddl
push
fstl
cli
mov
pop
add
test
hlt
kmovw
cmp
in
call
or
bnd
ljmp
subl
sbb
sub
in
push
push
lods
push
and
add
cltd
ficomps
jl
jmp
faddl
lret
mov
outsl
ja
sub
adc
and
gs
out
mov
mov
int
out
push
out
dec
add
jne
mov
xchg
mov
gs
dec
xor
mov
push
mov
jno
jle
add
sahf
insl
jge
ret
into
shrb
mov
cmp
add
loope
dec
mov
push
add
inc
call
pop
or
push
mov
pop
popf
cltd
add
mov
enter
add
dec
sbb
test
divl
add
or
lret
lahf
dec
out
in
scas
jae
leave
push
jecxz
fstpt
loop
mov
jbe
shlb
jo
jns
movl
pushf
ljmp
xchg
insb
repz
test
pop
push
cmpsl
outsb
mov
out
sbb
sbb
int3
outsb
push
stos
hlt
scas
jg
inc
out
cmp
inc
inc
inc
and
cmp
setp
divb
inc
jno
pop
pop
and
das
xchg
iret
filds
add
or
inc
fisubrl
or
dec
xchg
mov
adc
ss
push
loop
insb
xlat
mov
decb
js
mov
ret
pop
inc
push
scas
xchg
imul
xlat
and
test
sysret
mov
repnz
es
imul
mov
out
adc
leave
iret
and
jl
cmp
cmp
and
inc
std
movsb
fiaddl
dec
cmc
push
mov
mov
xor
insb
xchg
es
jge
inc
add
shll
sub
jl
jecxz
mov
jno
int
push
mov
mov
and
xor
xchg
mov
lods
je
pop
aaa
jbe
fwait
adc
push
mov
push
mull
test
pop
dec
mov
lods
addr16
es
cmp
push
xchg
xchg
bound
jno
arpl
ds
repnz
test
push
lods
xchg
xor
xlat
leave
lds
call
and
ret
jmp
rcrl
sbb
pop
data16
adc
dec
mov
repz
xchg
mov
subl
aaa
je
lcall
pop
mov
inc
cmp
pop
je
outsl
jl
das
in
inc
add
int
int3
lret
xchg
pusha
mov
mov
and
ror
push
push
repnz
sahf
iret
xor
xchg
adc
xor
scas
rol
sbb
push
cld
mov
dec
nop
jbe
mov
ja
lret
movsb
jne
xchg
mov
mov
cmp
add
push
cmp
mov
jecxz
jg
adc
mov
enterw
aad
cwtl
mov
pop
je
inc
xor
scas
sbb
mov
xor
push
mov
xchg
subb
cmpb
int3
mov
inc
test
add
or
push
inc
stos
lret
fimuls
insl
daa
out
sbb
mov
imul
mov
ret
jmp
mov
and
test
pop
and
shll
mov
seto
jle
cmc
imul
lret
cmp
push
add
mov
mov
lret
or
sub
adc
dec
andb
xchg
lret
jmp
sti
aaa
daa
out
push
push
cmp
mov
sbb
inc
fidivrl
and
fs
xchg
fildll
imul
sar
in
daa
push
ljmp
xor
lret
shrb
xor
inc
or
dec
xlat
dec
aaa
dec
fwait
ret
mov
push
cwtl
leave
test
push
icebp
mov
dec
push
popfw
mov
xchg
jl
inc
mov
mov
movsl
lret
movsb
loop
outsl
add
mov
xchg
cltd
cmpsl
fsubrl
ja
movsl
insb
mov
leave
mov
cmc
mov
aam
adc
ficoms
dec
add
out
add
mov
aaa
inc
lds
out
pushf
lods
adc
insl
out
inc
mov
les
inc
mov
fildl
inc
add
es
out
sbb
push
mov
roll
push
in
into
cmp
ret
push
push
pop
aad
dec
in
and
sub
loop
out
imul
pop
add
cmp
cmc
popa
notb
add
mov
inc
or
push
or
mov
dec
std
jne
lea
mov
mov
push
sub
rcrl
dec
mov
pop
lods
mov
int
xor
call
or
inc
call
jl
mov
fisubl
rcrb
mov
push
xor
and
es
mov
es
shl
into
test
push
and
shll
inc
stos
out
pop
push
xchg
ja
aad
shrb
jns
lods
jnp
inc
pop
mov
je
mov
shrl
adcl
mov
xchg
ja,pn
jae
fucomip
data16
lret
cmp
inc
and
cltd
movsb
out
sbb
out
movsl
lods
jne
lock
cmpsb
xchg
insl
testl
jecxz
imul
sbb
jo
in
fs
test
out
inc
in
and
xchg
insl
mov
stos
clc
cmp
xor
add
mov
add
pop
sti
xor
insl
cmp
pop
rol
lahf
push
movsb
sarb
dec
sbb
das
lea
lds
pop
push
and
insl
sub
sti
mov
and
imull
mov
outsl
push
add
rorl
jae
fs
pop
xchg
enter
orl
or
ljmp
popf
mov
test
jb
clc
xor
jns
cmp
sti
leave
jnp
mov
test
fcom
sbb
aaa
pop
sub
add
xchg
test
sub
cwtl
sub
jnp
jl
jae
ljmp
mov
push
lods
xchg
xor
inc
mov
cwtl
jmp
repnz
push
ret
adc
sub
inc
ja
fstpt
call
out
cmp
addr16
xor
and
pusha
or
sarl
pop
xacquire
pop
sbb
sbb
mov
pop
dec
sub
inc
xchg
mov
adc
fistpl
and
cld
mov
cmp
into
pop
les
jo
add
jecxz
repz
insl
pushf
dec
stc
sbb
and
inc
lds
adc
cmp
and
gs
nop
mov
inc
dec
add
xorl
jno
std
pop
adc
push
add
pusha
roll
cmp
xchg
jge
cmp
les
lods
fistpll
cmpsl
test
mov
jo
inc
in
subb
mov
pop
push
loope
sub
adc
xchg
add
dec
in
jae
adc
add
mov
sub
sub
aam
add
dec
dec
int3
pop
mov
fildll
mov
cld
es
cmpsl
in
jo
cmp
push
nop
pop
pop
inc
lret
imul
aad
fstpl
adc
ss
jno
lahf
dec
push
sub
cmp
and
cmp
mov
sbb
call
mov
add
les
or
pop
cmp
int3
lea
jge
mov
stos
cltd
add
push
mov
jecxz
call
dec
lods
adc
xchg
pop
adc
sub
push
pop
repnz
sbb
mov
daa
test
push
inc
push
jb
fst
nop
sti
sahf
subl
jge
add
stc
jmp
pop
repnz
test
enter
sbb
pop
decl
adcb
sbb
xor
fnstcw
inc
sbb
test
jo
mov
hlt
pusha
and
test
faddl
test
jb
insb
cmc
jo
filds
sub
mov
adc
xchg
adc
mov
ret
and
ret
je
mov
popa
push
divb
push
jecxz
push
inc
into
adcb
aad
or
in
or
sbb
dec
fldt
hlt
inc
dec
jbe
inc
rcll
xchg
daa
cmp
pop
mov
mov
adc
pop
leave
cmp
xor
pop
enter
or
lods
push
les
sub
lret
nop
or
jo
aad
orb
and
inc
cmpb
cmp
sub
sbb
pop
cmp
mov
loop
xor
jle
cmpsl
sbb
jo
lea
mov
and
dec
push
dec
jno
mov
cwtl
push
mov
mov
inc
ficoml
in
sbb
and
mov
fmull
sahf
lahf
popa
fstpl
mov
pop
adc
stos
push
mov
xchg
scas
ja
clc
loopne
or
ja
sub
in
nop
cmp
pop
sbb
imul
cmpsb
mov
mov
adc
add
lds
jp
mov
sub
fwait
lret
push
in
xor
in
movsb
jno
les
sub
push
pop
jg
sub
add
mov
pop
lcall
mov
add
cmp
cld
cmp
mov
lcall
cmpsb
sbb
add
es
cltd
loope
xor
sub
and
addr16
jmp
xor
jge
mov
loopne
sub
lret
inc
adc
xor
inc
mov
pusha
push
adc
adc
jecxz
out
push
cld
and
loopne
pop
in
call
cmp
push
push
lcall
pop
shrb
jl
cld
lods
mov
sub
loopne
ljmp
scas
sbb
fstp
or
rorl
out
jge
push
ficomps
and
mov
jo
jo
out
adc
popa
sub
imul
lea
fcoml
hlt
fnstcw
sahf
bound
mov
addr16
leave
and
cmp
out
push
mov
xchg
cmp
mov
pushf
add
inc
xchg
mov
add
or
aaa
inc
xor
jae
negl
pop
jne
sub
mov
movsl
sub
int
or
xchg
js
push
push
mov
test
idivb
fwait
enter
pushf
mov
icebp
bound
mov
cmp
jmp
fisttpl
mov
jae
outsb
xchg
out
fistpl
pop
into
in
add
and
mov
iret
mov
fidivrs
inc
stc
mov
rolb
pop
push
jg
mov
cmp
inc
pusha
fwait
out
pop
ss
movsb
xchg
jmp
fisttpl
addr16
jno
insl
xor
dec
divb
std
aam
aad
lock
pop
adc
scas
mov
jno
cld
sbb
imul
fdivl
mov
jo
pop
push
das
or
pop
inc
xor
inc
cli
sarl
push
sbb
sbb
outsl
stos
push
fcmovu
outsb
in
test
in
and
repz
xor
mov
outsl
enter
rorb
xor
out
data16
cmpsb
cwtl
aaa
fsubp
mov
mov
xchg
insb
add
insl
bound
push
addl
aas
jnp
cmpsl
int
jns
mov
or
js
mov
push
push
mov
jecxz
and
cmpb
cmp
rcrl
xchg
ror
adc
stos
out
out
loope
in
orl
int3
ds
out
add
dec
daa
mov
sbb
or
and
pop
stc
data16
xchg
mov
cmp
mov
imul
std
lret
loope
push
dec
mov
xor
inc
adcb
add
mov
push
addl
addr16
xor
out
mov
lods
pop
sarl
mov
mov
inc
sbbl
inc
inc
xor
cmp
push
xor
adc
cmp
and
lods
out
aaa
je
lods
mov
inc
dec
jbe
cli
mov
lret
loope
cmp
mov
jmp
out
outsl
mov
xchg
add
loop
in
ds
xor
inc
loope
pop
xchg
sbb
aam
stos
scas
lds
xchg
js
pop
sub
sub
loopne
repnz
loopne
jmp
lods
lret
inc
xchg
push
push
hlt
mov
push
rcr
jne
in
je
mov
mov
inc
out
aad
pop
mov
rcr
or
enter
pop
pop
addr16
jecxz
jg
jno
and
ljmp
pop
mov
pop
data16
subb
rolb
sbb
fucomp
xlat
movsb
stc
ret
movsb
pushf
incl
sbb
mov
sbb
push
push
test
fwait
push
xchg
nop
out
and
ljmp
mov
jecxz
pop
lock
xor
jnp
push
mov
xlat
pushf
or
mov
adc
add
pop
fsts
sub
adc
and
sub
imul
jb
mov
jp
lds
dec
sbb
xchg
adc
cmpsl
mov
mov
nop
lock
sub
icebp
jl
negl
ret
into
ret
dec
hlt
fldenv
pop
call
add
mov
fdivrs
pop
js
ss
addr16
ja
or
pop
or
jo
sbb
cs
lret
das
shll
sbb
sbb
test
push
lahf
push
int3
push
into
jmp
daa
jo
mov
into
cmp
inc
sub
decb
inc
test
sub
ss
xchg
sub
lcall
enter
fisubrs
mov
or
in
mov
dec
sti
push
mov
fmuls
cmpsb
jecxz
dec
jge
or
or
cmp
jp
push
cmp
into
gs
in
js
pop
fidivrl
rcrl
test
mov
mov
fldenv
data16
jp
pop
pop
fidivl
push
sti
pop
imul
js
out
dec
mov
call
jb
mov
jmp
arpl
pop
sbb
pop
je
xor
sbb
leave
cmpsb
mov
pop
add
xchg
cli
insb
xor
jmp
call
add
mov
add
aaa
mov
mov
jg
into
sbb
push
mov
push
mov
jmp
push
adc
out
testb
lods
cmpsb
push
xchg
pop
cli
out
out
sbbl
sub
mov
loope
pop
mov
scas
adc
dec
pop
pop
sarb
stos
inc
ja
mov
dec
inc
cltd
mov
mov
jbe
scas
fcompl
std
popa
mov
lcall
ds
dec
push
fidivrl
cmp
mov
cmp
aad
cwtl
lret
sub
xor
scas
mov
dec
incl
sbb
js
in
outsb
outsl
xor
adc
xor
bound
lret
int3
push
and
xor
xchg
and
pop
push
and
or
inc
cli
cmp
mov
idiv
mov
adc
mov
test
scas
mov
enter
mov
xchg
inc
iret
mov
xor
xchg
or
push
fisttps
loope
cltd
or
jo
add
jg
ss
add
lods
in
rolb
pop
xchg
cs
inc
jl
pop
pop
jg
xor
cmpsl
sbb
cmp
sbbl
sbb
add
cmpsb
xlat
add
pop
in
jmp
and
std
mov
add
daa
arpl
bound
sti
cmp
lods
ret
jecxz
vmovdqu
iret
cs
imul
ror
insb
pusha
decb
loope
dec
jle
push
call
mov
xchg
dec
lods
sbb
sub
push
sbb
sarl
lcall
jle
inc
fwait
mov
jl
sahf
and
dec
bound
loope
mov
mov
pop
mov
lret
cmpl
mov
roll
or
lea
test
inc
enter
aaa
psrlw
pop
movsl
adc
inc
out
sahf
aad
inc
cmovbe
arpl
pop
dec
push
xchg
pop
or
insl
into
jmp
repz
mov
xchg
leave
pop
in
or
xchg
outsl
add
aas
mov
sbb
mulb
cltd
dec
dec
add
movsb
push
out
pushf
mov
mov
mov
dec
inc
mov
popf
mov
icebp
lret
inc
pop
lahf
dec
das
cmp
es
mov
call
cltd
pop
cli
mov
sub
movsl
movsb
and
pop
mov
xchg
xchg
mov
leave
das
stc
mov
push
adcb
lds
add
mov
or
cld
cld
cmpb
lds
jne
jbe
dec
dec
adc
lret
cld
aam
mov
ja
xor
jg
ret
mov
pop
push
sub
mov
jo
jge
adc
xchg
or
or
popa
in
or
mov
xchg
dec
and
in
or
xchg
xchg
loop
and
or
flds
shl
imul
test
cmc
or
stos
add
enter
aas
mov
loope
inc
popa
mov
xor
test
aad
test
frstor
ss
jne
test
xlat
outsl
pop
in
jl
inc
dec
pusha
sti
sahf
es
xchg
mov
repz
mov
ljmp
dec
jne
push
shlb
mov
addl
adc
jge
push
fmul
test
cmp
push
cs
xor
test
ljmp
mov
mov
in
dec
xchg
rclb
outsl
cmp
ja
icebp
ret
xor
and
lds
jns
test
lahf
imul
push
outsb
sbb
mov
in
dec
ljmp
std
test
xor
cmp
xchg
mov
je
jns
jge
stos
je
dec
aam
pushf
dec
jb
push
ds
insl
inc
pop
and
pop
rorb
push
fdivp
jns
inc
daa
stc
sbb
cmc
push
mov
and
shrb
pushf
jne
adc
pop
lds
or
or
scas
dec
stc
mov
inc
adc
pop
incl
or
adcb
mov
xor
mov
cmp
xchg
stc
sub
mov
cmp
xchg
insb
ljmp
sti
sub
push
incl
dec
lret
ret
in
ja
mov
daa
rcl
cltd
add
xchg
test
ds
orl
cld
mov
aas
pop
inc
mov
pop
iret
repz
cmpsl
sub
addr16
shlb
jne
cmp
aam
sub
arpl
xor
les
jo
cmp
cmp
pop
hlt
add
inc
adc
movsb
mov
sarl
shlb
out
cltd
out
adc
mov
mov
hlt
and
mov
mov
jnp
sbb
std
mov
inc
das
push
add
pop
push
push
pop
sbb
mov
dec
shlb
scas
xchg
les
icebp
test
jno
incl
out
inc
shll
jne
adc
sbb
pop
push
and
sub
incl
leave
and
insb
les
sbb
push
fcomp
fcmovne
bound
fcmovnbe
cmpsb
enter
jp
bound
js
inc
adc
xchg
fs
dec
mov
pop
int
sub
jnp
xchg
sub
and
cs
cmp
aad
push
cmp
or
jno
fcmovnbe
push
inc
dec
inc
mov
inc
in
jno
fwait
add
add
xor
loop
inc
cltd
loope
push
lock
inc
xchg
pop
add
aam
cmp
test
pop
jne
xor
gs
inc
test
inc
cltd
cmp
xchg
cmp
movsb
sbb
pop
nop
adc
inc
cs
and
in
in
jp
mov
into
stos
sub
jo
ret
ljmp
dec
inc
or
ja
insl
dec
pop
jge
scas
imul
fcompl
lcall
lods
inc
xchg
inc
rcrb
test
bnd
aad
inc
pusha
andb
icebp
and
pop
cltd
enter
xor
fistps
xor
mov
xlat
outsb
push
or
outsl
pop
jle
in
jge
inc
xchg
insl
lret
jno
and
sbb
das
movsb
rcrb
out
and
sarl
lods
mov
push
lock
nop
enter
call
ficompl
subl
sbb
jle
push
inc
mov
or
mov
fst
xchg
push
test
loopne
push
mov
jecxz
test
aaa
mov
pop
push
push
paddsw
adc
pop
mov
ss
jmp
rolb
sub
sbb
sub
loop
faddl
push
mov
dec
arpl
xlat
adc
inc
dec
and
cmc
les
xchg
ss
cmp
cmc
std
cmc
pusha
and
lcall
cmpsb
jle
in
sahf
xchg
jbe
in
inc
daa
out
rclb
jno
arpl
aad
lcall
and
pop
popa
mov
push
out
cli
mov
fildll
or
mov
adc
pop
mov
sti
mov
xor
pop
movsl
repz
xchg
insl
out
mov
push
mov
jns
clc
xor
jae
mov
popa
mov
stos
test
out
js
add
push
pop
push
xchg
adc
mov
dec
testl
scas
movsl
les
sbbb
es
in
lret
inc
and
cmpsl
std
and
andl
jne
les
lret
loopne
test
mov
and
mov
aad
not
es
mov
dec
insb
jno
test
fsts
push
insl
mov
sub
vdivsd
outsb
mov
and
test
xchg
in
sbb
dec
jecxz
loopne
fistpll
pop
jno
dec
js
test
xor
test
mov
jg
rcrb
mov
cmpl
outsb
fwait
test
xor
inc
cmp
fs
fwait
adc
mov
push
std
jnp
sub
mov
push
or
enter
sub
fcomps
sub
stos
mov
add
std
inc
outsl
cmp
cmpsl
and
sub
and
in
in
jl
scas
xchg
popf
test
nop
fisttps
dec
xchg
ss
into
push
dec
lcall
bound
fxtract
testb
mov
jmp
sbb
lock
imul
sarb
jle
mov
repnz
loopne
data16
and
and
push
and
mov
push
loop
loope
lret
and
sub
mov
ror
mov
dec
dec
dec
fmul
mov
or
jb
push
clc
jg
xchg
int3
mov
adc
mov
popf
rcr
and
mov
sti
xor
repnz
push
adc
ror
xchg
pop
sbb
and
lahf
mov
inc
mov
jge
pop
mov
adc
scas
gs
push
fadd
test
popa
push
or
push
push
push
inc
push
lock
add
lods
in
adc
inc
bswap
xchg
test
adc
fldl
cli
add
push
stos
push
int
dec
xor
adc
mov
xor
dec
push
test
loopne
loopne
sbb
inc
aam
sub
sbb
enter
dec
fsubrs
repz
pop
sub
xor
dec
filds
fcomi
fistps
pop
mov
call
aaa
jnp
aad
test
loop
sub
fcomps
cmpsb
std
xor
lret
pop
iret
insl
nop
in
and
dec
clc
xchg
stc
subb
out
std
mov
cs
test
leave
inc
mov
sti
cwtl
decb
stos
outsb
scas
adc
add
jge
inc
movsb
insl
or
mov
or
jmp
cmp
mov
lock
shlb
push
mov
lahf
in
fidivs
add
cmp
or
jecxz
xchg
inc
mov
sub
xchg
lcall
aas
test
pop
jae
inc
sbb
cmpsl
jmp
jns
mov
jnp
mov
jle
pop
pop
cld
pushf
movsl
cltd
xchg
sahf
mov
js
xchg
adc
ss
pusha
xor
aam
outsb
movsb
mov
jnp
lods
or
inc
outsl
mov
int
daa
cmpsl
mov
out
imul
pop
pushf
adc
mov
xor
test
mov
dec
icebp
pop
sub
mov
fidivrl
dec
mov
xor
and
jo
mov
fucomip
ss
in
mov
pop
xor
sahf
or
mov
jecxz
aas
and
ss
out
or
je
frstpm(287
in
xchg
popa
xor
int
inc
aad
push
pop
mov
stos
jne
fmul
jmp
push
fstl
adc
enter
xchg
ja
jl
pop
arpl
sbb
fsts
pop
and
test
inc
push
sub
je
je
mov
fnstcw
sbb
dec
adc
jne
pop
aam
mov
popa
xchg
add
pop
stc
cld
jno
xchg
imul
dec
or
mov
add
push
jp
ror
adc
jmp
sub
rorl
ret
jns
mov
adc
and
andb
lods
pop
shlb
aas
sub
xchg
test
push
pop
mov
mov
loope
and
jp
jmp
imul
push
cltd
hlt
out
push
dec
add
ljmp
mov
imul
push
pop
adc
mov
push
repz
sahf
mov
sbb
push
add
mov
sahf
cli
xchg
mov
fwait
jmp
xlat
jb
push
push
gs
mov
adc
lret
mov
out
jg
pop
out
push
mov
sarl
mov
mov
xor
xchg
repz
mov
and
add
mov
cmp
nop
mov
gs
rorb
and
daa
jge
cwtl
mov
data16
jp
shrl
adc
push
or
fs
mov
or
rorb
fidivrl
mov
mov
shrl
out
jp
unpckhps
push
aad
jp
xchg
outsb
aad
imul
mov
cmpsb
dec
sbb
inc
outsb
aad
jnp
dec
push
add
notl
sub
loop
xchg
pop
or
add
gs
cmp
push
sbb
pop
in
or
inc
bound
pop
mov
mov
jnp
pop
pop
aas
mov
orl
pop
adc
jo
push
icebp
xor
add
inc
inc
sarl
cltd
dec
pop
xlat
mov
mov
sub
fldcw
inc
push
lds
lret
dec
dec
movsl
dec
es
mov
aas
mull
and
jmp
lea
xchg
inc
sub
ret
nop
push
popa
mov
out
push
test
addr16
inc
push
cmp
xchg
ret
xchg
and
in
js
push
jle
gs
add
dec
iret
lea
push
and
mov
fcomi
in
repnz
jecxz
adc
out
repnz
lahf
test
les
data16
cmc
out
adc
clc
xchg
insl
mov
jmp
push
sub
lcall
incl
or
out
insl
ret
xchg
fstpl
mov
push
pusha
fmuls
jmp
fxch
rcrl
sub
mov
idiv
sti
mov
inc
inc
xchg
xor
pop
mov
cwtl
movsl
jmp
push
rorb
jecxz
cmp
and
repnz
jle
xchg
psrld
or
push
pop
fidivs
fstpt
sbb
jae
sub
dec
xor
pop
in
rcrb
sbb
pop
imul
pushf
adc
rorb
je
cmp
insb
pushf
and
in
mov
push
jp
scas
lcall
shrl
or
call
jg
fs
jge
fs
sbb
ficomps
out
int
or
das
enter
jge
mov
imull
insb
mov
lods
add
cmp
shrl
js
scas
sbb
imul
ds
cmp
inc
dec
sahf
sti
popa
jne
test
xchg
mov
rol
mov
dec
cmp
push
mov
je
xchg
mov
outsl
pop
int
jae
adc
adc
dec
adc
pop
stos
leave
jecxz
jne
test
dec
pop
push
repz
jo
icebp
call
in
roll
cmpsl
repnz
mov
jmp
cmp
icebp
stos
aam
mov
cld
loope
cmp
mov
push
sti
pushf
dec
push
repz
lahf
insl
hlt
jb
inc
outsl
sbb
dec
xchg
mov
xchg
fisubrl
mov
aad
adc
xor
mov
ffree
out
cld
lret
data16
mov
inc
push
or
dec
cmp
rorb
out
mov
mov
jbe
or
cmc
sbb
pop
ja
mov
aaa
inc
aas
xchg
ret
cltd
cld
lds
scas
mov
jne
lcall
pushf
stos
jns
adc
mov
popa
xor
test
in
jno
mov
into
aad
add
xchg
dec
mov
ret
iret
jb
out
and
fcoms
leave
packssdw
lea
dec
pop
push
mov
adc
push
add
or
mov
add
insl
jae
rcrl
scas
sarb
pusha
cld
jno
xchg
rcrl
xchg
lahf
and
pop
dec
push
xor
xor
stos
jle
mov
push
gs
adc
test
and
mov
mov
pushf
inc
sbb
and
pop
divl
dec
sub
inc
ja
sbb
jge
dec
mov
adc
aas
mov
sub
cs
sub
sar
sub
jo
and
arpl
shlb
jno
leave
add
cmp
ja
push
push
cmpsl
add
test
movsb
xchg
push
cmp
popf
scas
mov
push
inc
es
jne
sub
insb
addr16
ss
aas
inc
hlt
dec
add
and
dec
lods
cmp
dec
mov
or
iret
push
in
or
das
jl
pop
xlat
mov
leave
cmp
in
shl
jge
sbb
push
pop
iret
inc
jns
cmp
inc
lret
loopne
sbb
jecxz
stos
stos
movsl
lret
loop
sub
mov
inc
loop
jae
xchg
nop
adc
pop
mov
inc
mov
in
or
mov
jmp
mov
stc
jl
les
stos
jg
lret
cmp
dec
scas
mov
cs
loopne
pop
cmp
mov
call
shll
pop
in
insl
xchg
pushf
cmp
iret
repnz
lfs
push
cltd
jle,pt
push
cli
cwtl
lods
insl
sbb
lock
iret
push
int
lock
push
xlat
negl
mov
xor
sub
cmp
nop
mov
aad
inc
push
aad
and
add
adc
dec
xor
dec
sbb
cmpsb
or
sbb
push
mov
shr
into
push
jp
mov
or
and
call
inc
lret
mov
stos
pop
gs
clc
jb
fnstsw
add
adc
scas
test
push
int3
dec
pop
mov
popa
dec
icebp
aaa
sahf
and
leave
repz
inc
pop
sbb
lret
sti
jns
mov
cmp
cmp
test
imul
or
and
lret
js
jb
xchg
mov
sub
aam
insl
jb
xchg
imul
pop
sbb
jle
sbb
ret
mov
lea
xchg
icebp
dec
sysret
cs
loopne
stos
inc
add
xchg
in
popf
bound
or
jo
fcompl
aam
sbb
repz
push
mov
adc
test
cmc
dec
std
lds
jbe
adc
mov
sbb
pop
push
push
imul
icebp
lods
dec
movsl
xchg
mov
scas
fcmovnu
and
push
aad
ljmp
mov
int3
push
je
mov
xchg
rolb
xor
in
sub
mov
inc
mov
testl
sub
and
cmc
pusha
shll
adc
mov
mov
popf
sub
movb
add
pop
mov
sub
jbe
repz
or
cmp
mov
lcall
jge
enter
jb
lods
fidivrl
dec
sti
ja
scas
adc
andl
fchs
das
inc
inc
sahf
or
jo,pn
cmpb
cli
jge
or
sub
pop
xchg
xchg
les
sub
jecxz
mov
scas
add
test
jmp
ja
popa
sbb
movsb
cmp
xchg
xchg
push
insb
in
xchg
xchg
fadd
jmp
sub
pusha
repz
stc
rclb
scas
fwait
lods
adc
dec
inc
xor
jge
xor
dec
mov
push
ret
je
repnz
cmp
adc
rolb
shlb
les
stos
mov
or
dec
and
sbb
sbb
mov
or
and
std
push
fdivp
popa
adc
enter
cmp
fwait
mov
pop
popa
roll
push
rcrb
stc
xor
push
xchg
push
sbb
add
xor
adc
cmp
push
inc
inc
pop
cmp
les
inc
sub
fwait
idiv
es
std
sbb
push
enter
mov
mov
outsl
inc
cmc
pop
sub
mov
les
jle
out
shl
mov
negl
in
xchg
sbbl
loope
scas
mov
mov
cmp
sbb
ljmp
adc
jae
movsb
inc
add
pop
add
or
ljmp
jo
mov
inc
pop
mov
push
jecxz
int
adc
pop
xor
movsl
shlb
scas
fildll
push
and
addr16
mov
inc
mov
mov
imul
mov
imul
dec
lcall
mov
cmc
jg
nop
pop
sub
or
lcall
adc
enter
add
mov
mov
pop
lcall
lret
pusha
mov
inc
aad
jecxz
jo
cmpsb
stos
mov
out
and
mov
inc
pop
adc
fcmovbe
nop
push
inc
popf
jge
outsb
test
addps
addl
in
cli
push
add
ret
sbb
pop
fnstenv
iret
inc
loope
mov
insb
jmp
fwait
dec
sbb
push
fst
and
iret
fistpll
popl
scas
std
fldl2t
aam
jno
xor
mov
test
lret
sbb
sub
dec
dec
pop
inc
xchg
insb
dec
xchg
addb
aas
adc
mov
movsl
cmp
dec
sbb
and
imul
xchg
pop
icebp
and
orb
cmpsl
pop
xchg
adc
pop
jbe
jmp
mov
xchg
push
add
jge
int
call
popf
inc
and
xchg
pop
jl
loop
xchg
xchg
sbb
dec
push
mov
cwtl
std
pop
js
jne
and
jo
jb
cmpsl
cmp
dec
or
pop
mov
pop
dec
lcall
negl
push
cmpsl
popa
dec
mov
mov
inc
inc
lcall
roll
mov
sarl
xchg
je
js
dec
pop
mov
mov
ds
clc
test
push
das
pusha
sbb
shrb
mov
ja
pop
adc
test
popa
lcall
mov
repz
test
jmp
lcall
aaa
mov
pop
pop
mov
xor
fdivs
popf
sub
loopne
js
jle
xor
sbb
xor
in
imul
mov
in
xchg
xchg
addr16
mov
in
pop
fcomps
xchg
outsb
xor
out
test
stc
testl
add
xor
or
inc
aas
stos
ss
xor
cmp
fadds
aaa
sbb
push
outsl
cmp
and
fidivl
mov
or
xchg
xchg
mov
leave
repnz
popf
movsl
sub
mov
push
imul
ret
dec
movsl
adc
sub
mov
xor
adc
lds
sti
fisubs
xchg
popf
push
imul
aad
lds
jne
pop
lret
xchg
stc
outsl
mov
icebp
movsl
out
pushf
cltd
imul
xor
push
jne
sbb
fdivs
stos
cmpb
xchg
enter
enter
inc
xlat
add
cli
dec
push
and
xor
shld
inc
bound
lcall
xlat
aas
mov
push
jp
xor
mov
scas
out
xor
sahf
and
and
sbbl
imul
push
xchg
fs
clc
fdivrp
xchg
loop
xor
push
mov
xor
push
mov
rcrb
pop
xchg
pop
mov
dec
add
lea
cmp
int3
and
negb
leave
mov
adcb
test
dec
jg
mov
stc
lds
leave
out
jle
and
jbe
cmp
shl
push
cs
mov
gs
int3
push
ja
xchg
jns
dec
shl
add
mov
fldt
or
fstp
jae
fdivl
jmp
andl
sub
ss
inc
jmp
fadds
inc
jp
mov
ret
mov
adc
or
adcl
mov
adc
test
popf
lahf
xchg
sub
cmpsb
adc
xchg
call
and
xor
pop
je
add
das
mov
fwait
icebp
and
pop
in
jbe
push
push
mov
fistps
xlat
jae
pop
jecxz
lret
ljmp
sub
in
inc
inc
sahf
pop
iret
adc
call
and
xor
dec
stos
xchg
sbb
xor
stos
sub
jmp
cld
scas
xchg
xor
jnp
arpl
popf
arpl
or
jg
inc
movsb
arpl
push
jbe
daa
push
ret
sbb
and
xchg
or
pop
and
inc
jno
fidivrs
ret
int
cmc
dec
add
mov
in
lods
call
xlat
dec
push
jb
xchg
int3
mov
in
lcall
pop
add
lcall
movsb
cmpsb
imul
ss
mov
jo
push
push
mov
lret
sbb
ds
inc
inc
sub
imul
mov
ffreep
fistl
scas
or
sahf
sub
mov
sub
sets
outsb
mov
or
lcall
xchg
xchg
add
jno
das
aaa
and
imul
add
mov
in
pushf
je
bound
sbb
dec
inc
repz
test
add
outsb
xor
jbe
mov
mov
into
jbe
jno
movsb
scas
loopne
shlb
movsb
pop
sub
negb
sbb
and
fisttps
push
push
ret
rcl
mov
cwtl
popf
sub
cltd
xor
test
cld
mov
cmp
and
loopne
aas
aaa
xor
xchg
sub
xchg
push
sub
cltd
aas
jb
pop
div
shr
fidivrs
lahf
cwtl
mov
inc
cltd
imul
inc
out
jno
push
je
mov
inc
imul
and
mov
jo
negl
inc
mov
les
cmp
addr16
and
or
push
daa
cmpsl
sub
adc
data16
push
xor
push
mov
xchg
sbb
fmuls
rolb
clc
dec
sbbl
inc
jp
fdivrl
sbb
cmpsl
js
or
mov
out
incl
fisttpll
stos
mov
mov
cmpsb
subl
xlat
mov
xchg
mov
pushf
test
xchg
lods
sub
mov
ss
sub
shl
mov
pop
mov
mov
xor
loopne
div
add
sub
enter
fimuls
das
test
shll
cli
shlb
lea
jle
or
pop
cmp
dec
aas
outsl
stc
mov
add
test
and
xor
les
fcomi
loop
sahf
pusha
and
jae
push
mov
add
fcomp
sub
es
in
aad
inc
mov
pop
adc
jae
cmpsl
loopne
xchg
out
add
mov
xchg
xor
lods
hlt
mov
outsb
sbb
push
adc
push
xor
xor
mov
sbb
cmc
mov
out
fisubrs
inc
not
outsl
hlt
mov
or
xor
cmpsl
iret
imul
or
dec
jp
pop
mov
mov
jb
lret
outsb
cwtl
pop
xchg
dec
mov
mov
icebp
mov
movsl
je
mov
mov
mov
lock
imul
mov
bound
iret
aas
mov
xor
sbb
pushf
bound
imul
icebp
fistps
cmp
or
sahf
mov
sbb
sbb
sbb
in
push
in
dec
int
jle
mov
shll
inc
cmpsl
jnp
add
fs
fisttps
call
aaa
sbbb
push
add
adc
or
lock
jg
mov
cmp
dec
stos
push
jl
and
in
dec
cmp
sahf
xor
ret
xchg
push
pop
movsl
jbe
mov
adcb
sub
mov
sahf
sahf
push
sbbl
push
push
sbb
xchg
fs
adc
xor
in
jbe
lea
lret
repnz
dec
cmp
test
int
xchg
and
xlat
xchg
mov
loop
sub
jge
loope
cmp
dec
push
mov
out
mov
ret
sub
lcall
pop
pop
pushl
jge
xor
iret
daa
lock
outsb
sbb
xlat
rep
jns
sbb
lret
push
ficoml
or
cmp
adc
out
mov
mov
jb
xchg
push
stc
add
scas
push
jns
push
xor
and
mov
cmp
cmp
pushf
ss
inc
popf
enter
popf
cmc
push
or
mov
int3
hlt
jecxz
push
gs
fistpll
cmp
push
sbb
scas
int
or
sti
mov
clc
inc
fwait
pusha
pushf
hlt
jb
xchg
inc
sbb
jp
pop
jb
scas
lods
fiaddl
icebp
nop
fdivr
xor
hlt
lock
sete
add
cltd
jmp
hlt
je
and
adc
jmp
mov
mov
stc
lods
lret
jb
fdivs
dec
insb
pop
cld
test
cmp
jg
aam
xor
aam
fsubrp
xchg
xchg
icebp
out
push
icebp
mov
push
fwait
stos
std
sub
lock
test
dec
pushw
mov
jns
loopne
xor
cmp
loopne
enter
gs
cmp
dec
lea
xchg
incl
bound
jle
scas
fisttps
dec
std
rcll
aam
decb
in
rcr
sti
in
rclb
mov
ret
jl
test
mov
jg
cmpsl
xor
xchg
push
add
add
jl
jg
jmp
mov
test
sbb
pop
int3
xor
mov
sub
sahf
std
pop
mov
sub
adc
leave
lea
loope
sub
inc
es
aam
loope
imul
jno
fwait
inc
mov
push
sbb
and
push
push
cmp
xlat
fstpl
cmp
int
add
xchg
adc
add
cmp
cli
mov
lds
das
mov
popa
inc
mov
push
jmp
or
xchg
sbb
jmp
jecxz
iret
dec
xchg
jne
dec
test
flds
jp
dec
test
pushf
sub
inc
add
cli
adcl
pop
mov
pop
mov
jl
cmp
int
push
fidivrl
push
inc
mov
shrl
movsl
mov
fstpt
mov
outsb
xor
out
add
push
push
shrl
cmp
int
das
movsb
leave
dec
xchg
add
in
je
rclb
pop
push
in
mov
add
dec
cmp
cmpsl
out
outsb
push
pop
nop
inc
adc
push
mov
imul
aas
cmp
push
fstpt
lds
cmp
lock
imul
and
or
xlat
idivb
mov
cmp
fs
pusha
add
adc
dec
push
out
adc
or
inc
in
pop
lock
xchg
jg
aas
loopne
push
push
dec
push
roll
rcrb
cli
push
add
lods
enter
cmp
push
xor
inc
mov
cmpsb
jmp
jb
xor
mov
stos
jge
das
dec
sub
fadd
add
loope
cmpsb
adc
lea
cmp
loopne
inc
jno
dec
ds
pop
shlb
add
sub
loope
in
push
pop
das
mov
sbb
mov
xchg
in
clc
dec
adc
call
jno
jno
jo
jb
pop
test
push
ret
loope
out
push
inc
sbb
lahf
push
sbb
xchg
and
cmp
mov
mov
je
push
movsb
int3
and
adc
mov
mov
flds
stos
xchg
icebp
and
push
lcall
inc
inc
xor
cmp
and
cmp
xchg
fsubrl
repnz
hlt
lret
push
addr16
out
outsb
cmpsb
lods
outsb
dec
xor
lds
into
subl
xchg
or
iret
xchg
lret
stc
inc
and
mov
mov
inc
dec
and
call
sub
sub
mov
xchg
lahf
scas
cmpsl
mov
out
mov
or
mov
imul
jge
sub
pop
hlt
je
mov
lods
jecxz
mov
insl
cmpsl
repnz
push
push
push
pop
xchg
and
pop
aad
cli
out
leave
dec
insb
cmp
cmpsb
xor
stos
aad
cmp
mov
sarl
jns
pop
lods
testl
mov
dec
sub
fistl
cltd
adc
fnstsw
imul
dec
scas
icebp
inc
pop
sbb
cmpsl
push
aas
repnz
and
aam
int3
inc
mov
divl
and
mov
dec
mov
lcall
mov
dec
popf
or
adc
popa
mov
xchg
lret
xor
ret
mov
sub
addr16
add
xchg
sub
inc
cmp
sub
mov
sbb
and
jge
push
rcl
push
aam
adc
fiaddl
negb
mov
pop
cmc
jp
jmp
xlat
movsb
ficomps
or
jl
jp
mulb
out
cmpsl
adc
mov
fistl
test
int3
rep
jge
pop
jbe
stos
data16
fnstenv
rol
mov
and
aas
stos
and
out
cli
rclb
je
icebp
lret
push
push
xchg
mov
fisttpl
sub
mov
mov
out
aas
pushf
ja
or
ljmp
int3
pop
mov
bswap
push
jo
inc
arpl
aad
outsl
adc
adc
push
jge
call
push
xlat
sahf
jg
mov
dec
sbb
iret
sarl
sbb
cmpsb
idiv
cmp
mov
in
dec
test
data16
or
sub
cwtl
push
jne
xchg
cmp
ror
test
and
cwtl
add
sub
cmp
xlat
jb
rclb
cwtl
jb
xor
or
mov
sub
jp
jne
inc
adc
cmc
inc
xchg
add
movsw
hlt
mov
mov
xlat
jb
add
aad
pusha
jle
push
cmpsb
leave
out
mov
sahf
repz
and
stos
and
jp
pop
call
mov
dec
call
sbb
jg
and
xlat
notb
cli
movsl
mov
push
sub
mov
lret
out
fsubs
jecxz
insl
mov
fists
int
ds
add
hlt
addr16
jle
cs
ret
iret
ss
es
push
pushf
fidivl
sub
sarl
add
testb
mov
mov
pop
dec
mov
call
das
fmuls
pusha
pop
jp
gs
add
in
jns
cwtl
adc
in
push
and
push
fsubrl
loope
xor
loopne
out
sub
sti
or
lods
insl
push
mov
sbb
pop
icebp
push
and
mov
cld
inc
and
scas
sbb
ds
push
xlat
ja
dec
cmpsb
gs
jne
jns
pop
push
or
sub
gs
sbbl
out
push
mov
push
jl
setge
sbb
lcall
clc
rolb
adc
push
or
dec
jecxz
lahf
out
mov
imul
fnstsw
ljmp
cmp
es
scas
jae
in
xorb
fmuls
mov
mov
sub
adc
sbb
cli
lcall
adc
popf
push
aas
dec
cmp
lock
sbb
lahf
shl
and
xor
add
fcomps
jo
ja
jecxz
int3
sbb
leave
popf
mov
je
in
sub
and
in
out
testb
rcrb
push
pop
sbb
push
in
xchg
inc
fwait
push
in
fnstcw
ds
idivb
int3
push
jno
aaa
pop
data16
xchg
jno
int
or
jmp
gs
add
adcb
jmp
jle
add
inc
mov
dec
adc
sbb
mov
leave
scas
cmc
dec
outsl
mov
jbe
jne
adc
ja
jge
aas
addb
inc
outsb
cmovb
stc
push
inc
push
call
mov
xchg
lcall
ret
fsts
cltd
lock
xor
lods
sbb
jne
rcrb
or
addr16
sub
imul
lret
out
xchg
push
cmp
dec
pop
mov
sar
jae
jp
sbb
jnp
jbe
cmp
aam
fsubl
lahf
adc
adc
push
inc
inc
jne
dec
mov
popa
jns
dec
push
add
ja
popa
add
movsl
or
ret
inc
sbb
xor
xchg
and
imul
pop
out
push
or
shl
or
cmp
push
push
pop
adc
mov
and
popa
sbb
imul
cwtl
fst
add
push
xchg
aam
ljmp
lock
jle
leave
std
push
rolb
outsl
iret
push
jle
jp
mov
fs
add
test
push
shrl
xchg
in
push
inc
jg
jl
push
out
aaa
pop
jmp
sti
or
push
jl
jno
dec
ss
pushf
jge
add
into
cli
and
fwait
sarl
pop
lret
or
dec
je
mov
lahf
filds
sti
dec
xchg
pop
add
cmp
xchg
adc
cltd
dec
int3
fidivrs
ja
lods
and
and
mov
sbbl
sub
out
into
cmp
rcrb
sahf
iret
adc
insb
mov
test
shr
push
dec
fwait
cmp
clc
mov
cmp
pop
pushf
lea
adc
inc
movsb
lahf
fs
dec
mov
mov
sbb
out
lcall
fs
int
xchg
xor
xlat
negb
stos
lahf
stos
mov
sahf
pop
push
pop
mov
xchg
out
push
sbb
push
maskmovq
idivl
out
daa
lret
pusha
mov
push
pop
lods
inc
sbb
movsb
mov
loope
dec
shlb
popa
push
insl
addb
lods
sbb
sbb
pop
pusha
xor
and
insl
inc
xchg
jbe
or
push
out
mov
add
pop
or
xchg
adc
daa
jge
cmp
lods
scas
adc
je
pop
rclb
and
outsl
test
fstpt
adc
shr
leave
add
inc
into
arpl
shr
dec
mov
lds
iret
jl
push
and
lea
iret
leave
sub
stc
inc
xlat
rcl
outsb
mov
lahf
jno
sar
negb
jae
iret
cmpb
les
adc
lea
or
enter
or
xor
push
xor
mov
scas
sub
ret
add
pop
mov
xor
aam
xor
jnp
mov
sbbb
andl
pop
outsb
add
ss
push
xlat
rcll
fwait
dec
mov
xor
jns
xchg
xchg
dec
stos
lock
mov
lock
fdiv
adc
loop
outsl
imul
sub
push
sub
push
insb
pop
or
pop
outsl
and
and
cmpsb
lods
mov
push
negl
int3
mov
shrl
int3
cmp
mov
or
bound
inc
pop
jne
inc
rcrb
add
cmpsb
cmp
push
and
loopew
or
ffree
add
xchg
pop
aas
inc
mov
cmc
adc
or
pop
cmp
push
ljmp
sub
xor
ja
dec
xchg
shl
pop
out
loope
inc
scas
out
bound
into
dec
ljmp
adc
jg
mov
dec
int3
mov
pusha
fidivrl
xor
fcompl
cmp
add
cs
mov
out
xor
fisubrl
sbb
or
mov
insb
push
and
pushf
adc
and
cs
fwait
test
int3
jo,pt
ljmp
cmpb
mov
fisubrs
sbb
mov
ret
xchg
in
inc
js
loope
out
imul
out
pop
push
in
sbb
into
mov
fcoms
aam
insl
xor
addr16
test
xchg
es
xchg
call
cltd
sub
fst
rorl
inc
popf
mov
das
add
pop
fs
aam
mov
shlb
inc
int
add
mov
mov
lock
dec
inc
sbb
sbb
adc
shl
mov
and
fisttpll
iret
dec
neg
jne
add
sub
inc
push
test
adcb
cwtl
pop
cmpsl
mov
and
cwtl
cmp
push
cld
mov
sub
mov
test
mov
iret
loop
jmp
pop
lock
mov
add
sbb
outsl
shl
push
jmp
ss
add
sub
and
adc
mov
add
setns
jmp
mov
mov
xchg
pop
cmpsl
mov
ret
adc
popa
sbb
mov
pop
pop
xor
int3
mov
mov
pop
jle
mov
in
test
inc
fstps
mov
lret
jno
cwtl
repz
dec
out
cmp
pop
dec
mov
jae
pop
cltd
pop
xchg
leave
repz
ds
mov
add
aas
or
xchg
dec
popf
in
jne
mov
test
xlat
nop
xorb
add
adcl
jge
fstps
xchg
outsb
in
pop
sbb
mov
nop
xor
inc
or
dec
dec
and
and
push
ss
jmp
dec
inc
clc
pop
frstor
dec
cmp
std
or
icebp
jb
cs
test
scas
inc
stc
inc
xchg
jmp
lock
dec
xchg
add
sbb
mov
mov
dec
push
mov
test
roll
loope
lds
stc
fs
xor
negl
inc
xor
cmp
scas
and
add
lods
xchg
and
or
sub
push
popa
sbb
aad
mov
mov
leave
fwait
pop
pushl
sub
mov
sbb
arpl
sub
sbb
rcr
xchg
fs
add
inc
gs
loope
iret
push
fnstsw
popa
push
jecxz
iret
or
jp
mov
xchg
push
xchg
push
stc
shl
mov
sub
aam
out
je
jb
add
cmp
jg
addl
push
xchg
cmc
iret
out
mov
nop
outsb
jl
jno
dec
stos
je
popa
subb
hlt
push
sub
dec
out
and
inc
add
daa
push
sbb
adc
push
jg
mov
cwtl
sbb
add
fiaddl
mov
scas
xchg
mov
mov
imul
notl
jno
outsb
mov
ljmp
sbb
data16
pusha
pop
pop
lods
inc
movsl
push
cmpsl
repz
cmp
jmp
fdivrl
sbb
mov
jbe
int3
jge
push
mov
jecxz
data16
xchg
inc
sub
sub
dec
test
add
imul
cli
mov
inc
cmp
jmp
test
xchg
leave
sahf
in
push
movsl
ret
mov
pop
dec
and
cmp
push
leave
pushf
movsb
inc
ret
pop
mov
pop
mov
push
mov
mov
xchg
cli
cmp
mov
jno
pop
dec
lock
cmp
test
push
fdivrl
cmp
mov
pop
mov
add
aam
andl
sub
ss
rcrl
leave
push
mov
call
and
daa
icebp
push
lds
and
sub
movsb
push
nop
cltd
or
sbb
push
js
fisttpll
clc
xchg
and
mov
pop
fs
aad
sbb
adc
js
mov
movsb
mov
jmp
cmp
sub
fcoms
jb
lods
mov
les
cmp
nop
xchg
xchg
movzwl
pop
dec
icebp
cmp
sbb
add
dec
adc
adc
ficoms
mov
ss
mov
es
ds
sahf
push
cmp
jnp
inc
int
cmpsl
ss
sbb
mov
in
sub
pop
cld
mov
mov
dec
mov
lods
xchg
xor
xchg
repnz
adcb
mov
add
je
pop
test
testl
popa
loopne
dec
test
xchg
aam
inc
xor
pop
lret
xchg
js
push
fisubrl
enter
scas
fwait
push
shll
fnstcw
xor
arpl
add
loopne
mov
cmpsl
mov
sub
pshufw
bound
mov
and
pop
mov
inc
add
add
popa
jp
lahf
test
cld
jbe
add
push
insb
sbb
jmp
sbb
in
xor
pusha
fisubrl
sub
ljmp
dec
and
inc
ja
pop
pusha
pop
icebp
lret
in
stc
clc
xchg
xor
mov
call
mov
inc
sahf
cmp
and
int3
adc
inc
icebp
add
data16
fs
xchg
mov
popf
in
and
jp
test
aam
mov
cwtl
ss
add
inc
sbb
dec
pop
jo
and
add
inc
cltd
loopne
data16
push
push
xlat
test
addr16
clc
ljmp
and
or
js
cli
adc
test
jns
fs
xor
sbb
jns
add
xor
sub
insl
push
roll
in
fcmovu
adc
push
icebp
jnp
fstpt
ljmp
movsb
dec
xor
lret
inc
hlt
sub
addr16
jno
push
fdivl
xchg
pop
sbb
shrb
or
lock
mov
xchg
mov
mov
xor
dec
jo
stc
iret
jne
test
inc
repz
lods
mov
in
pop
fldl
push
cmp
lods
hlt
in
clc
mov
adc
movsb
data16
xchg
loope
adc
fstpl
xchg
pop
dec
shl
xchg
out
jmp
adc
dec
ret
mov
outsb
mov
mov
shlb
xchg
jns
jae
leave
negb
cwtl
mov
sarb
movsb
push
imul
lahf
cmpsb
imul
cli
mov
sub
scas
inc
ret
into
jmp
icebp
add
cs
sahf
test
cmpsl
shll
xchg
in
dec
lock
dec
in
ret
in
data16
test
mov
inc
sarl
jns
cmpsb
fdivrp
pop
popf
cmp
pop
or
push
mov
dec
push
lcall
movsl
dec
dec
cmp
iret
rcrb
shlb
xchg
or
mov
clc
jecxz
loop
insl
dec
adcl
mov
pop
pop
fisubs
repnz
dec
das
mov
stc
lods
ja
fcomip
push
cli
aaa
imul
stos
fdivrl
push
sub
mov
push
rcrb
sub
mov
add
cmp
sbb
xorl
shll
mov
clc
inc
mov
mov
imul
inc
out
cwtl
in
push
jge
mov
hlt
cmp
int
and
loop
clc
cmp
idivb
decl
inc
std
sub
stos
push
mov
addr16
sub
sub
les
pop
fwait
mov
jne
fwait
jge
adc
xor
aas
fidivs
into
lret
pop
mov
xchg
push
stc
dec
pop
add
negl
or
aas
repnz
mov
sub
aas
sbb
or
mov
cmpsl
or
mov
or
das
ret
cmp
shll
stos
cmp
mull
popf
ss
dec
mov
insb
sti
pop
xchg
sbb
jp
jb
jmp
add
pop
xchg
mov
out
sahf
inc
adc
mov
push
fdivrs
rclb
push
sbb
dec
ljmp
stos
sbb
push
push
and
bswap
roll
mov
popf
adc
addr16
pop
jg
out
jnp
arpl
scas
push
lods
pop
fsts
push
out
jge
sub
push
cmp
pop
jmp
je
mov
pop
imul
jae
or
insb
sti
rorb
jb
and
xchg
xchg
xor
jmp
or
pop
aam
loopnew
jns
ret
xor
dec
ffree
aam
pusha
or
mov
pushfw
fnstsw
sub
test
jp
divb
sahf
stos
pushf
xchg
push
ror
jo
mov
sbb
stc
push
jl
sbb
scas
outsl
jge
test
mov
enter
sub
adcl
popa
stc
je
mov
scas
jge
stc
sub
fs
stos
repnz
aaa
inc
inc
movsl
xor
sbb
mov
mov
fildll
cmpsb
ficoms
xor
dec
or
mov
or
fldcw
rclb
inc
jp
mov
imul
je
pop
push
popa
roll
in
pmulhw
mov
lods
test
jo
dec
xchg
std
shrl
add
xchg
fcmovnbe
mov
stc
out
negb
xchg
jno
xchg
dec
into
fiaddl
inc
lret
rorl
call
push
push
dec
rcrl
fdivs
aas
pop
jne
push
cli
and
lock
dec
lds
sti
adc
int
sub
int
jne
mov
popf
stos
shll
lea
in
inc
or
mov
movsb
in
inc
iret
jb
movsl
es
std
push
lahf
call
fwait
mov
push
mov
sub
int
adc
push
mov
mov
fidivrs
add
mov
arpl
jp
inc
mov
xchg
push
inc
jle
pop
fldl
adc
dec
push
xor
sarl
cs
inc
clc
push
aaa
adc
jle
mov
insb
movsl
and
cmpsl
dec
icebp
mov
cld
jbe,pn
mov
cmp
les
jo
fs
ss
and
xchg
mov
xchg
pusha
push
sbb
cmp
lret
aad
jle
jmp
cmc
mov
sbb
testb
out
mov
dec
dec
cmp
mov
dec
jl
adc
add
jle
rol
push
mov
lods
outsw
jnp
cmp
fdivrl
aas
shlb
xchg
jmp
mov
sbb
mov
leave
push
mov
out
ljmp
sub
pop
in
lcall
xchg
insb
adc
xchg
jmp
inc
ret
adc
push
xrelease
in
jg
insl
sub
outsl
jae
dec
pop
or
and
clc
adc
imul
sbbb
sub
popf
push
jecxz
add
fstpt
add
sbb
pushf
xlat
fstpl
in
dec
cli
push
mov
xchg
and
pop
adc
cli
push
pushf
daa
rcrl
sub
dec
cmp
in
jo
push
fstpl
jo
ds
lods
and
xchg
in
cmp
adc
xchg
stc
repz
fwait
inc
sbb
dec
lcall
push
movsl
dec
xchg
mov
lahf
std
push
push
pop
xor
repz
add
jl
jge
dec
dec
mov
sbb
push
fidivrl
xor
scas
push
nop
xchg
andb
xchg
ret
jp,pt
loop
popl
xor
pop
stos
mov
ds
ljmp
add
mov
ja
adc
push
add
int
jns
out
dec
sbb
push
lret
aam
or
xchg
jecxz
daa
or
lcall
repz
mov
scas
shrl
pusha
jle
push
pop
sub
sti
dec
mov
dec
mov
out
adc
in
mov
test
mov
lock
in
push
pop
sti
pop
fxch
dec
in
jmp
test
leave
fbstp
xchg
mull
ret
gs
sub
xor
cmp
push
dec
lea
sub
clc
outsb
push
jl
pop
and
sub
push
loop
stos
mov
jo
pop
xchg
dec
add
xchg
mov
cld
xor
sub
and
mov
jne
jg
fucom
cmp
in
mov
bound
jmp
jne,pt
inc
push
inc
sub
sbb
icebp
jns
cmp
mov
scas
xchg
cs
lock
test
mov
dec
jl
sub
mov
cmp
sub
stos
test
mov
and
lds
xchg
sbb
lret
and
aaa
shrl
xchg
xor
aam
push
pop
sti
sahf
jmp
in
cmc
loopne
sbb
sbb
xlat
inc
xor
stos
sbb
stc
loop
popf
insl
jle
push
inc
xchg
test
mov
mov
push
lret
loopne
jmp
add
jmp
out
dec
inc
cmc
fsub
cmpsb
rcr
dec
lcallw
sahf
int3
sbb
jb
dec
pop
mov
insb
loope
nop
test
sar
mov
push
mov
lahf
and
dec
mov
xchg
loopne
movsl
mov
test
mov
jmp
int
rcrl
add
push
mov
jp
mov
xchg
fdivl
in
outsb
jp
push
mov
xchg
xor
jmpw
ja
out
out
mov
movsb
add
adc
orb
dec
in
xchg
daa
stc
decl
add
daa
mov
mov
adc
cli
jb
lahf
or
adc
adc
rcrb
out
mov
in
fwait
lods
push
mov
jns
test
xchg
xorb
data16
jmp
push
adc
push
call
jb
mov
repnz
fsubr
inc
push
insb
int3
ja
in
out
sbb
inc
dec
stos
jmp
mov
and
pop
cltd
adc
int3
cmp
mov
xchg
insb
adc
xchg
es
lret
mov
or
rorb
and
dec
loop
or
sti
inc
and
sar
and
cltd
xchg
sbb
adc
cmpsb
pop
inc
es
mov
test
pop
mov
adc
pop
add
pusha
mov
pop
adc
xor
adc
popf
lea
shll
faddl
lret
int3
and
test
dec
test
dec
pop
rorl
or
dec
lock
movsb
fwait
adc
int
lods
mov
fadd
ret
ljmp
jae
pop
loop
dec
pop
test
push
lret
mov
mov
adc
dec
adcb
stos
popf
jmp
test
inc
flds
lahf
push
scas
cltd
pop
adc
sub
and
int
arpl
mov
sahf
shr
es
mov
fdivrs
aad
cs
icebp
mov
div
aas
xchg
pop
enter
int
sbb
gs
incb
int
and
shrl
fistps
inc
xor
inc
adc
inc
cmpsb
xor
cltd
or
sysenter
pop
mov
cltd
xor
int3
mov
mov
addl
mov
jns
dec
orl
pop
addb
inc
ret
mov
mov
imul
push
xchg
sbb
ret
mov
jl
and
cmp
fwait
and
sub
mov
lea
pop
loopne
dec
mov
ret
movups
sub
stc
push
sbb
mov
sbb
ret
lret
dec
or
hlt
push
xchg
jmp
out
add
xchg
std
inc
lock
hlt
adc
dec
ja
mov
sbb
roll
pop
lcall
cmp
shll
or
jecxz
out
adc
test
rcl
repz
jne
arpl
mov
push
imul
xor
cmp
stos
dec
jg
sahf
fucom
lret
icebp
push
out
cltd
out
inc
mov
jg
jns
push
jne
pop
pop
loopne
cmp
xchg
cmp
sbb
in
ss
mov
dec
rorl
mov
fisubs
aaa
movsl
daa
rol
dec
int
jae
push
jl
ds
insb
data16
mov
addr16
xor
out
movsl
push
arpl
arpl
insb
popl
mov
dec
xchg
addr16
movsl
adc
test
sbb
mov
cmpsl
pop
mov
subb
incl
add
iret
mov
lods
movsb
repnz
push
push
icebp
test
sbb
and
cli
mov
outsl
jge
pop
mov
fistpl
sub
sub
mov
dec
mov
mov
push
cmp
push
les
mov
dec
out
insl
les
int3
int3
imul
inc
or
popa
mov
or
shl
pop
inc
xor
in
imul
xchg
inc
xor
xchg
jno
jns
jbe
in
ss
imul
clc
jp
pop
fisubrs
int3
sti
pop
inc
xor
inc
jl
out
cmp
mov
pushf
iret
and
jo
and
out
ficoml
cmp
add
adc
imul
aad
out
fdivrs
fisubs
push
hlt
sti
dec
std
mov
inc
rcr
or
dec
cmpsb
fists
cmp
mov
dec
cld
ds
dec
sti
dec
sub
mov
mov
fsubr
in
pushf
xchg
stc
mov
sbbl
xchg
sbb
cmp
stos
lock
rcll
mov
add
rcrb
mov
or
jl
mov
cmp
xchg
ficomps
clc
and
lock
fistpl
xchg
pop
cli
jnp
jp
sub
mov
inc
jo
xor
pushf
shll
leave
je
add
xchg
and
jl
movsl
je
cmpsl
lea
imul
push
stos
or
sbb
sub
sbb
imul
sub
dec
jns
inc
cs
and
fucomi
mov
cmp
scas
scas
daa
adc
loopne
sub
frstor
in
lahf
outsl
cmc
nop
dec
xor
cltd
ds
cs
test
add
loope
xchg
test
cmp
js
jmp
mov
jmp
mov
xchg
or
or
xchg
ljmp
pop
mov
das
stos
out
loopne
pusha
gs
repz
and
add
flds
jge
ret
mov
gs
or
mov
jnp
movsb
imul
add
jns
add
aam
jp
cli
cmp
jp
pop
sbb
fsubl
jne
dec
or
mov
out
push
fadds
clc
clc
and
add
and
and
lcall
psrld
xchg
push
ds
das
loope
mov
fldl2t
dec
jae
mov
sub
int
mov
pop
jae
jl
inc
sub
pop
dec
pop
ljmp
jb
aas
in
mov
pop
dec
sub
xor
or
or
pop
xchg
sbbb
xchg
js
inc
outsl
dec
sahf
clc
xor
cmp
sbb
imul
and
int
dec
inc
xchg
int
add
and
push
jg
outsl
push
in
imul
xchg
dec
pusha
or
xlat
mov
inc
sbb
je
and
and
imul
in
cltd
testb
or
test
sbb
fistpll
orl
cmp
dec
sub
inc
or
int
shl
lcall
jnp
xchg
and
and
es
movsb
and
cmc
iret
sub
lahf
mov
dec
inc
pop
pop
mov
cld
sbb
jno
xor
negl
cmp
ficomps
jmp
inc
xor
xchg
subl
hlt
add
inc
jmp
cmp
fbstp
mov
enter
stc
jae
rcl
ret
push
testb
mov
mov
test
push
cld
pop
jnp
lcall
mov
dec
ficompl
fs
insb
das
sti
pop
mov
andl
sub
sbb
push
pop
ret
leave
mov
aaa
sbb
hlt
lret
pop
cmp
outsb
pushf
repnz
lahf
sbbb
sub
dec
and
testl
mov
jg
test
jo
sbb
mov
imul
cmp
fcmovne
inc
cwtl
cld
daa
xor
dec
aad
sbb
mov
dec
pop
repz
xchg
cltd
and
pop
pop
sbb
icebp
test
sti
sbb
push
call
rorb
lret
mov
push
les
xchg
add
mov
aad
sub
out
addr16
push
clc
mov
adc
pop
mov
imul
movsl
repnz
ret
xchg
xchg
mov
push
pop
outsb
push
push
xchg
xlat
int3
inc
cs
inc
pop
push
dec
mov
ret
outsb
sbb
push
mov
inc
cltd
repnz
lahf
xchg
mov
mov
rdpmc
mov
jmp
mov
loope
nop
push
mov
cli
pusha
or
lods
add
xor
mov
dec
or
outsb
cmp
repz
scas
add
sbb
mov
sbb
mov
pop
jne
bound
mov
stc
cmp
and
xor
push
js
repnz
inc
jle
xor
cmp
cmpl
out
aam
pop
cs
sbb
adc
mov
add
ret
movsl
scas
cmc
jne
mov
sub
popa
jg
icebp
sbbl
gs
mov
push
and
adc
sub
shlb
dec
loop
inc
sub
xchg
xchg
mov
cmp
adc
sahf
pushf
into
outsl
fs
cmp
movsb
in
dec
shlb
scas
popf
inc
dec
mov
lcall
xchg
rcll
cs
into
mov
pop
push
jnp
and
leave
arpl
push
ja
dec
mov
push
lret
ljmp
push
imul
stc
sub
int3
cld
adc
dec
cmp
cmp
mov
sub
std
cmp
jmp
push
call
xchg
adc
ret
xor
dec
idivl
les
mov
cmp
das
push
dec
push
jns
push
fbld
subb
in
mov
mov
push
mov
arpl
xor
roll
mov
cmp
mov
mov
dec
leave
xchg
sub
dec
cmp
mov
arpl
push
rolb
adc
in
jg
rol
rolb
aaa
jmp
xchg
in
cmp
hlt
arpl
xor
dec
ljmp
mov
dec
les
pop
pop
lret
jp
iret
popa
aam
mov
sbb
popf
sub
pop
adc
imul
cmpsb
imul
pop
cltd
ret
in
cwtl
mov
jo
and
out
aas
pop
mov
cmpsb
nop
and
test
mov
loope
sti
mov
hlt
push
imul
ljmp
int3
fwait
jge
movsl
fwait
lret
in
jo
add
adc
mov
xchg
movsb
jae
ficomps
js
dec
xchg
les
popa
inc
xor
mov
enter
push
ds
mov
fs
mov
ret
movsl
adc
leave
lret
push
jae
ja
mov
sub
xor
inc
mov
inc
xor
jb
add
out
shll
mov
jle
mov
push
push
icebp
push
lods
pop
lock
cmpsb
stos
in
imul
rcr
cwtl
and
mov
fxch
sbb
stos
jmp
inc
sub
push
les
or
add
ja
and
lret
push
push
je
cmpsb
or
mov
xchg
xor
sub
push
push
test
xor
inc
adcl
fsts
aam
rcr
dec
ss
lcall
sub
add
mov
mov
push
in
aam
stc
adc
inc
mov
mov
cmpb
daa
mov
cmp
loopne
loopne
je
js
xchg
jno
iret
fistpl
xor
jne
movsb
mov
xlat
and
push
ss
pop
popa
cmpsb
dec
mov
movd
mov
or
nop
sti
jl
push
in
mov
into
adc
sub
mov
fwait
mov
inc
ss
mov
pop
fsubr
pusha
insl
scas
stos
sti
in
cld
mov
xor
pop
inc
cwtl
loopne
aad
rcrb
sbb
lret
ret
mov
pop
je
and
fnstenv
inc
pmuludq
outsb
loop
inc
cli
loopne
xchg
cmp
xor
fistps
test
aad
pop
ror
ds
imul
inc
mov
mov
mov
repnz
std
sbb
sti
add
dec
pushf
imul
les
loopne
outsl
fidivs
mov
mov
add
in
imul
jp
xchg
cld
test
cmpsb
cmp
cmp
shll
jmp
leave
rol
pop
cmpsb
add
ds
add
adc
xchg
pop
pmullw
lods
aas
cmpsb
addr16
xchg
int3
xchg
outsb
mov
ljmp
scas
mov
mul
decb
mov
hlt
outsb
test
in
lcall
mov
xor
sahf
xchg
inc
jl
cmp
loope
in
sbb
or
aaa
lret
leave
and
mov
fisttpll
test
cmp
pop
push
fucomp
mov
mov
std
cmp
movsl
popf
gs
mov
pop
leave
movsb
push
jnp
mov
in
adc
jle
mov
inc
and
aas
aam
push
repnz
addr16
add
imul
mov
insb
push
rclb
cld
pop
add
push
jb
pop
fdivl
push
neg
and
aam
jle
and
xor
pop
adcb
mov
lock
mov
jle
insl
sub
or
filds
mov
mov
outsl
sub
lahf
jnp
or
add
cmpsb
lods
mov
cmp
ds
push
pop
sub
push
pop
inc
push
and
lods
add
xchg
out
movsb
and
shlb
sbb
jg
sbb
mov
jbe
test
sub
push
mulps
lcall
push
push
xor
dec
lock
in
lcall
push
push
add
inc
inc
add
xor
testb
and
sub
arpl
xchg
int3
flds
dec
xchg
repnz
cs
sbb
ret
sarb
mov
dec
xchg
add
lahf
jbe
jg
call
aas
cmp
sbb
pop
std
mov
inc
int3
add
dec
in
ds
sub
mov
lock
js
sbb
fistps
add
lret
pop
cltd
pop
aaa
inc
add
dec
sbb
pop
cmp
sbb
popf
mov
scas
fucomip
cmpsl
and
push
sbb
scas
inc
nop
lret
mov
xchg
adc
jg
sub
sub
cmp
mov
dec
mov
hlt
push
push
rcl
lret
int3
cld
pop
cld
cld
sub
cmpsb
int3
dec
push
or
cmp
adcl
xor
popf
out
pusha
scas
lret
push
push
jne
adc
mov
cs
cli
jl
xchg
leave
fdivrp
inc
xor
sub
jbe
fwait
cmp
movups
bound
mov
ss
and
imul
daa
sbb
daa
inc
enter
pop
xor
and
data16
push
les
call
lds
mov
adc
push
icebp
lahf
stos
insl
fsub
xchg
orl
in
push
out
mov
ljmp
loope
pushf
jp
sub
dec
pop
push
stc
loop
pusha
call
rcl
inc
push
xor
cmp
sub
ja
jmp
jne
mov
inc
nop
scas
stos
adcb
ret
cltd
sub
std
leave
add
pusha
rcll
push
movsb
inc
in
faddl
or
ret
cmp
sbb
sub
dec
movl
mov
jae
push
pushf
bound
enter
inc
sbb
ds
loope
cmp
jg,pn
ret
mov
loope
mul
mov
js
jb
mov
mov
mov
pop
or
adc
stc
cmpsb
lods
or
jnp
dec
fisubrl
pusha
out
xlat
enter
push
jmp
sbbl
inc
imul
sahf
and
lret
into
movsl
adc
test
cmp
sub
push
or
roll
dec
jns
mov
fidivs
pop
je
daa
push
dec
add
shll
dec
in
rclb
in
cmp
shlb
pop
out
and
push
cmp
je
cwtl
pop
daa
pop
jno
jbe
dec
inc
mov
xor
scas
cmp
add
lahf
dec
mov
scas
xor
inc
jbe
fmull
enter
xchg
mov
push
repz
daa
cmc
cmc
flds
push
adc
test
rcrb
popl
aam
lods
add
fcoml
sub
mov
or
lea
push
bnd
popa
mov
lahf
or
xchg
mov
and
xorb
pushf
mov
aad
out
out
adc
or
out
test
fdivl
out
jmp
and
and
notb
jge
push
sub
call
pop
sbb
add
lods
test
in
push
xchg
adc
mov
push
pop
xchg
or
stos
mov
aas
sbb
sub
and
scas
rcrb
and
sub
pop
xorl
mov
or
mov
push
stos
push
xor
sbb
or
fs
xchg
xchg
adc
xchg
movl
add
push
lds
xchg
add
aaa
cmpsb
imul
dec
push
cmp
leave
inc
cmp
aam
jle
dec
pusha
inc
jg
add
cmp
dec
stc
pushl
cs
mov
sub
xor
fs
xchg
jnp
or
jb
repnz
cmp
jbe
rcrl
push
outsb
je
mov
xor
ds
mov
dec
mov
add
adc
out
mov
pop
in
int3
mov
xorl
in
int3
and
mov
imul
xor
sbb
aaa
sub
jae
cs
cld
gs
mov
mov
or
dec
sarb
ds
push
add
cmp
orl
inc
or
into
outsl
and
xchg
or
push
out
mul
xchg
and
dec
inc
jecxz
test
mov
and
and
jo
nop
pop
inc
mov
enter
and
out
pop
sbb
imul
es
jo
xor
adc
leave
loope
and
aaa
lret
adc
lea
insl
sti
push
test
dec
ret
sub
add
inc
sar
test
jns
inc
imul
mov
pop
dec
mov
loope
andl
push
xchg
fnstcw
std
std
pop
mov
jnp
rol
mov
add
sbb
icebp
repz
dec
mov
jns
inc
or
or
mov
jmp
lret
lods
mov
xchg
daa
cld
mov
nop
outsl
call
jmp
xor
outsb
pop
loope
push
hlt
mov
shrb
fs
and
mov
inc
pop
inc
inc
mov
adc
adc
ja
pop
mov
call
outsl
neg
mov
xchg
imul
mov
sbb
aam
insl
test
std
out
inc
inc
xchg
fidivl
loop
popf
adcl
cs
out
mov
push
popf
stos
je
lds
aas
in
xor
jg
jle
mov
mov
sbb
sub
add
fidivrs
loopne
enter
sbb
mov
sub
sbb
cwtl
daa
push
cmp
sub
scas
in
ret
pop
insb
and
out
test
pop
aam
inc
and
sub
adc
sbb
mov
and
loop
lea
in
jmp
jg
ljmp
aam
negl
int3
ret
loopne
lcall
xor
fwait
xchg
lock
ds
loope
lods
je
sbbb
pop
pushf
popa
js
add
sub
or
imul
mov
jo
jae
mov
or
roll
or
sub
repnz
in
push
xchg
push
add
or
pop
lods
mov
xchg
push
std
lret
insl
lods
ret
xchg
inc
out
mov
pop
pop
loop
aam
sbb
fdivrl
push
push
ss
das
pop
aaa
sbb
jno
loopne
movsl
popa
or
frstor
ja
stos
add
pop
imul
inc
nop
xchg
stc
mov
shlb
cltd
ret
imull
xlat
in
repnz
pop
or
adc
jle
or
hlt
cmpsb
sbb
xchg
push
pop
xor
or
std
and
pop
sbb
movsl
xor
mov
aaa
jg
pop
out
cld
inc
rorb
clc
or
push
fwait
push
xchg
push
xor
dec
aas
sbb
adc
dec
ss
aaa
or
xor
cmp
fstps
pop
pop
jnp
sti
enter
pop
arpl
pop
pushf
mov
adc
cld
push
out
mov
push
sub
pop
imul
hlt
inc
dec
sub
inc
cwtl
negl
es
mov
rolb
sub
fucomip
dec
xchg
fldt
jae
xor
mov
mov
jmp
subb
aad
loopne
sub
test
mov
sbb
gs
js
sub
jge
xchg
adc
fistpl
dec
push
imul
sbb
lret
test
xor
xchg
or
and
jg
or
jnp
sti
iret
jo
sbb
jp
mov
imul
mov
inc
jo
test
mov
push
outsb
fistpll
dec
out
addb
pop
leave
mov
inc
push
jl
sbb
fdivs
jb
mov
imul
cs
lea
ds
xor
std
outsl
aam
push
mov
push
cmpsb
je
sub
fidivrl
jmp
lock
in
out
out
jl
mov
or
shr
mov
stos
sbb
mov
mull
mov
inc
cli
pusha
pop
push
test
jle
out
out
jg
mov
push
in
cli
xchg
pop
mov
outsb
mov
jo
outsl
loope
fsubrl
shl
adc
pop
xor
push
jb
add
add
mov
pop
popf
add
ret
rcrl
push
jo
xchg
rolb
sub
jecxz
mov
mov
in
adc
pop
decl
fadds
sbb
or
adcl
sub
lret
jns
adc
jb
xchg
dec
mov
xor
mov
into
sbb
cmpl
in
xor
dec
lahf
ljmp
jmp
testl
sbb
dec
gs
into
xchg
jae
xor
fbld
incl
push
rclb
aaa
adc
sarl
scas
xchg
sbb
mov
aaa
adc
mov
stc
test
adc
aad
loop
adc
popf
push
dec
pop
cltd
mov
lahf
lahf
icebp
inc
popa
pushf
iret
add
sarl
cmp
jp
in
mov
es
fsubl
push
in
sahf
iret
mov
lock
fcoml
sahf
cmpsl
cmp
pop
hlt
scas
pusha
das
repnz
mov
fsubr
lret
push
fidivs
lcall
inc
ror
repnz
lods
and
in
and
xor
icebp
js
add
xor
adc
sbb
mov
sbb
adc
dec
jns
in
cmp
out
pop
jmp
inc
imul
jb
jnp
sub
popa
dec
aas
mov
or
xchg
adc
adc
ds
and
imul
xor
jl
jae
xchg
lds
lcall
neg
push
gs
jp
outsb
inc
jno
pop
jl
jo
scas
test
in
rorl
mov
rorl
in
ja
cld
sahf
cld
pop
mov
loopne
stos
mov
movb
jmp
mov
jo
inc
es
movsl
shrb
outsl
jae
les
scas
sahf
lock
push
aad
mov
jl
scas
cmp
xchg
mov
lods
int3
popf
ds
or
movhlps
or
push
mov
orl
cmp
xchg
jnp
inc
nop
insl
inc
div
dec
clc
lock
sub
cli
and
add
sub
gs
mov
push
insl
mov
cltd
xchg
mov
pop
lahf
and
jbe
pop
rcr
push
add
pop
jmp
jmp
push
jle
es
ficompl
add
pop
mov
ss
adcl
and
das
cmp
pop
push
adc
js
xchg
inc
aam
mov
shll
ss
mov
pop
sub
pop
pop
adcb
mov
sti
dec
lods
je
jg
adc
lret
mov
sub
lcall
orb
mov
aam
push
stos
cmp
mov
lods
mov
testl
xchg
pop
inc
out
jno
mov
adc
mov
pushf
rcrb
inc
std
nop
nop
es
or
push
sbb
or
xchg
sbb
push
jge
cmp
out
push
daa
cmp
add
in
lock
hlt
mov
or
test
in
test
jae
sub
pop
jecxz
add
jnp
cmp
insl
iret
dec
cltd
pushf
jns
mov
sub
cmp
out
pop
mov
cmc
jnp
in
shrl
pop
mov
and
sbbb
popf
jo
jp
push
cmpsb
sbbl
fwait
mov
ss
fsubrs
xchg
jae
and
push
aad
inc
popa
in
mov
inc
mov
and
sbb
addr16
es
lock
xlat
adc
pop
in
das
and
test
or
push
cwtl
sbb
xor
add
enter
hlt
test
stos
int3
xchg
xor
add
adcb
xchg
xor
mulb
and
imul
mov
and
cmp
jbe
into
out
int
mov
loop
ja
lock
das
mov
sbbb
movsb
loope
loopne
jnp
or
pop
sarb
jmp
shll
mov
mov
sub
and
sub
cs
mov
xlat
fbld
test
lea
mov
inc
stos
ds
jp
push
test
xor
jecxz
in
popf
imul
sub
les
cs
sbb
lea
in
sbb
mov
inc
or
pop
mov
xor
addb
jl
mov
jmp
jnp
fwait
movsl
je
fmul
repnz
scas
push
cmp
push
test
adc
xchg
dec
adc
push
jns
bound
dec
jmp
fxch
sbb
mov
jecxz
jae
mov
addb
fwait
mov
cmpsb
js
mov
mov
push
sbb
pushf
push
subl
in
lods
sbb
cwtl
push
loopne
cmp
mov
jg
mov
out
out
insb
push
lods
imul
lahf
in
sub
mov
cli
or
inc
lret
jne
sub
scas
jns
fcmovnu
sub
xchg
movsb
sbb
push
and
xor
dec
push
jae
add
inc
inc
lods
xor
inc
jae
in
fwait
inc
sub
sub
cmpb
pop
push
xchg
cld
stos
in
dec
xor
int3
test
pop
fisttpll
jl
sahf
aas
in
dec
and
pop
mov
sbb
fdivrp
mov
mov
add
movsb
xor
scas
push
or
adc
add
jge
pusha
sub
cmp
mov
or
inc
mov
push
sub
sub
xchg
mov
cltd
fwait
and
rcrb
int
mov
mov
std
or
lea
out
push
xchg
xlat
jb
test
jns
xor
xchg
pop
pop
cmc
movlps
std
adc
or
popa
hlt
or
mov
mov
daa
or
rol
push
sti
sub
xor
xor
pop
jns
cmpsb
and
loop
shr
mov
ret
jne
mov
xor
clc
xchg
jp
mov
mov
inc
movsb
int3
jo
push
test
shr
fisttpl
imul
jp
and
mov
mov
mov
orl
add
sub
or
cmp
lock
test
incb
and
jns
inc
xchg
sbbb
push
adc
jp
mov
cmp
jl
cs
ret
fadd
push
xor
aam
sub
jnp
enter
test
lods
test
out
inc
push
dec
pcmpeqb
mov
jl
js
push
loope
mov
xchg
or
adc
mov
ficompl
ret
daa
into
adc
insb
add
shl
pop
ss
pusha
cwtl
movsl
push
ljmp
mov
mov
dec
call
das
mov
push
adc
js
dec
jecxz
sbb
mov
loop
xor
mov
push
inc
leave
daa
cli
in
pop
mov
mov
adc
adc
ja
fwait
addr16
sbb
sub
mov
fs
int
out
inc
sub
sarl
push
or
dec
push
out
adc
jnp
loopne
mov
or
sub
aam
sbb
cwtl
cld
xchg
ret
pop
sub
push
add
loop
add
or
dec
xor
lcall
call
scas
sti
jmp
push
lret
or
es
sti
mov
xchg
stos
stc
in
push
pop
lret
mov
data16
shl
ret
xor
lret
xchg
adc
insb
cmp
enter
pop
mov
in
in
imul
inc
ja
cmp
test
hlt
cs
dec
xor
xchg
add
std
dec
sub
fldt
mov
adc
mov
lods
sub
push
test
mov
xor
ja
cmp
add
pop
in
cld
sub
outsb
mov
jle
jns
mov
scas
mov
jmp
inc
ret
xchg
rclb
and
int3
cmp
jns
and
xchg
xchg
pop
mov
dec
inc
xor
lcall
sbb
adc
aaa
push
mov
add
or
mov
mov
test
sub
lret
xor
and
mov
jl
cmp
mov
inc
fstpl
push
pop
sub
lds
mov
in
out
or
outsb
outsb
cmpsl
adcb
cmp
pusha
adc
pop
pop
ret
dec
shl
je
mov
push
inc
xchg
lock
or
dec
aad
mov
cmp
orb
ja
mov
mov
subb
filds
stos
cmp
lret
daa
rorl
mov
push
imul
mov
or
adc
sarb
rclb
cmovbe
mov
sbb
mov
lcall
or
cwtl
orb
jbe
cmpxchg
test
jp
pop
mov
lahf
lcall
and
xlat
ret
iret
mov
movsb
insb
cmp
add
addl
out
roll
ja
and
out
hlt
sti
jg
call
lods
mov
data16
cmp
es
fwait
jns
sti
mov
or
aaa
jne
ss
mov
adc
xor
pop
gs
inc
cmp
mov
sbb
lods
pop
xchg
adc
int
loope
jecxz
mov
pop
mov
lea
jno
jne
aad
shrb
cli
jae
das
mov
inc
dec
loop
fstpt
orl
dec
push
enter
lcall
dec
mov
enter
cwtl
mov
mov
filds
inc
push
and
mov
push
cmc
mov
xcrypt-cfb
cmpsl
and
insl
clc
fstpt
pop
cmp
fldl
xchg
sub
cmc
lds
nop
insl
xor
mov
arpl
mov
cmpsl
aas
shrb
adc
popf
loope
repz
hlt
inc
js
outsl
stos
add
xor
repz
addr16
lcall
rorb
jo
jmp
pop
sbb
ret
pop
mov
lahf
sbb
push
mov
inc
xchg
movsl
sub
pusha
imul
adc
xchg
jne
sbb
adc
pop
jp
jle
push
sarb
or
cmp
cmpsb
lods
mov
mov
xor
dec
add
ror
addr16
test
pop
out
scas
shrl
xchg
enter
pop
xor
fwait
xor
pop
or
stc
add
sbb
cmp
loopne
adc
sbbl
adc
icebp
out
loope
sbb
adc
lods
push
sbb
popf
popf
cmpsl
mov
jbe
cs
es
notb
imul
pop
pop
jge
pop
mov
xor
cld
test
and
push
jns
fcomip
xor
mov
adc
in
loopne
cmp
jbe
xchg
lods
xchg
addr16
lods
stc
adc
xor
repnz
jmp
pop
dec
sar
dec
gs
in
shl
lods
xor
adc
sahf
xchg
lret
sbb
xor
sahf
and
lret
dec
fldt
out
in
in
cmp
mov
stos
fstpt
jnp
neg
xchg
call
lret
out
jbe
xor
sbb
xchg
outsl
sub
xchg
out
adc
or
sbbb
dec
jge
cltd
je
jae
sbb
jmp
sbb
mov
mov
mov
xor
xchg
pop
xor
adc
idiv
js
loopne
cli
int3
int3
mov
mov
xor
inc
add
leave
mov
std
jns
aad
sub
add
imul
imul
in
and
pop
insl
std
adcl
cmpb
movsl
dec
dec
popf
sbb
mov
loopne
stos
push
pminsw
in
rcll
mov
lods
rcll
xor
mov
add
cmp
pop
pop
ja
xchg
inc
xor
jno
fsub
xlat
icebp
imul
mov
or
stos
push
jecxz
addl
mov
fwait
das
sub
adc
ljmp
pop
loopne
arpl
jg
out
sub
in
mov
in
stos
xchg
xchg
xor
jo
loope
and
icebp
push
push
pop
pushf
jb
fs
sbbl
adc
std
pusha
icebp
mov
arpl
xchg
lods
inc
jbe
repnz
push
pop
call
cmp
sub
jecxz
cltd
or
mov
dec
jmp
sbbb
xor
cmp
mov
outsl
call
mov
sub
cmp
call
pop
adc
lret
leave
mov
push
mov
outsl
inc
subb
pop
lret
cmp
in
add
adc
stc
mov
or
adc
imul
loope
jbe
pop
scas
es
sbb
sub
nop
xchg
dec
and
add
cli
cmpsb
dec
or
lcall
xlat
pop
in
loop
lret
arpl
mov
notl
pop
mov
pop
jg
out
mov
inc
inc
out
jg
addb
das
fst
push
xor
add
icebp
fldt
ja
das
mov
in
test
mov
pusha
outsl
xor
push
sub
dec
mov
inc
push
fmull
push
inc
imul
jge
das
ret
xchg
jns
leave
mov
jb
cli
aad
inc
icebp
in
std
das
aad
xchg
and
fisttpll
jg
or
dec
cld
add
sbbl
dec
dec
push
cltd
adc
out
imul
loope
adc
into
inc
out
cmp
sar
dec
pushf
mov
aas
in
and
pop
stc
pop
div
es
aam
mov
addr16
xor
aas
inc
stc
and
sub
leave
dec
jge
test
mov
roll
cmc
mov
popl
sbb
or
cli
frstor
mov
sbb
das
aaa
mov
rclb
dec
add
out
xor
dec
cli
test
pop
aas
in
cwtl
add
mov
stc
adc
adc
pusha
xchg
stos
add
cli
jnp
dec
sbb
adcb
iret
cli
push
lods
iret
mov
leave
cli
sbb
sbb
hlt
mov
push
repz
mov
inc
inc
std
sub
push
packssdw
push
sub
cli
fstpl
and
fnstenv
xchg
mov
xchg
cmp
mov
mull
xchg
pop
xchg
sub
mov
out
lret
or
pusha
lcall
roll
push
mov
xchg
fisttps
jge
add
stc
cmp
out
adc
fwait
push
ds
push
sub
lea
adc
mov
in
pop
adc
dec
in
ret
mov
xchg
cmc
movsb
stos
inc
ljmp
adc
lods
sub
sub
dec
jge
movsb
ficomps
adc
xchg
je
mov
jge
pop
mov
lock
inc
sbb
and
push
fwait
cmp
push
mov
fists
mov
sub
mov
mov
xchg
jg
add
push
out
jbe
sub
test
and
stos
add
iret
mov
mov
pop
sti
lcall
aad
xor
fisubrl
xchg
mov
sub
cld
mov
into
inc
sahf
cmp
xor
iret
lret
popf
mov
loop
xor
push
add
and
fmuls
and
lea
or
jle
stos
sti
jmp
out
mov
int3
aas
loopne
leave
imul
cwtl
aas
dec
xchg
cmp
mov
fcmovne
das
repnz
sub
jnp
fstps
inc
arpl
ret
xchg
aam
sbb
mov
push
add
adc
shlb
adc
adc
loopne
mov
arpl
xchg
jp
aam
fwait
adc
ficomps
mov
xor
dec
sub
sbb
addr16
xorl
outsb
mov
mov
lea
mov
xchg
ds
aad
cltd
or
add
int3
je
mov
gs
inc
push
js
cmp
dec
sbb
mov
mov
add
cli
iret
cmp
mov
rorb
push
sahf
test
xor
xchg
aad
out
rorb
or
sub
xchg
push
adc
pop
push
mov
cmp
mov
into
fsubrl
fisubrl
mov
repz
lret
in
rdmsr
sarb
sbb
out
int
rol
ficomps
cmp
inc
mov
leave
outsb
or
sub
sub
dec
jne
cmp
sti
repnz
dec
jge
imul
sbb
adc
xchg
arpl
adc
cld
cli
sbb
aaa
aad
push
sub
mov
jle
sbb
mov
cwtl
lock
jns
mov
in
mov
scas
dec
les
xor
les
lahf
cltd
inc
daa
sub
inc
or
imul
mov
add
cmp
jle
sbb
addb
mov
andl
jle
add
xchg
jb
cmp
iret
out
push
sub
in
jl
adc
data16
cmp
test
add
xor
push
sbb
and
cmp
fwait
pop
jg
int
xlat
pop
in
adc
ret
rcll
repz
stos
mov
cmp
in
mov
mov
notl
or
das
test
lods
xchg
dec
es
movsb
push
xchg
arpl
fidivl
dec
scas
or
popf
jb
aad
rcrl
push
lret
mov
popf
jbe
or
addr16
cmp
push
in
popa
in
jo
and
lods
jecxz
int
and
iret
hlt
fisubs
sti
push
bound
fmul
pusha
mov
xchg
mov
mov
adc
sahf
fwait
pop
outsl
das
in
sub
jmp
xchg
pop
jnp
inc
fcom
sbb
jg
sbb
mov
shrb
pop
mov
jae
arpl
fisubl
cltd
xor
bound
adc
leave
xchg
enter
and
inc
aad
cmp
sbb
xor
mov
addr16
insb
xchg
push
push
fidivrs
clc
pop
rorl
or
clc
sub
sub
push
jg
pushf
adc
das
xchg
mov
mov
in
xor
or
jb
xor
gs
jns
test
mov
xchg
pop
mov
jo
cmpl
test
gs
repz
pop
push
idivb
xor
sbb
int3
add
iret
xchg
xchg
fs
les
aad
xchg
notb
aad
mov
sahf
addl
fwait
push
decb
inc
movsb
int3
push
lret
adc
fisubs
je
inc
mov
push
test
and
jne
push
into
cmpsb
sbb
repz
icebp
sub
fsubp
mov
jae
loop
cltd
push
loop
adc
mov
test
sub
sub
mov
bound
scas
mov
lahf
xlat
jnp
adc
popf
in
jo
lret
js
adc
leave
stc
mov
jbe
jae
sahf
ja
rorl
mov
mov
into
leave
in
testl
loopne
pop
cli
jmp
stc
notl
loop
pusha
out
push
mov
aad
add
test
in
dec
ret
mov
mov
pop
aam
sahf
cmp
jbe
inc
sbb
jecxz
pop
dec
dec
jbe
mov
push
mov
dec
xorl
xchg
jb
imul
dec
push
addb
clc
jmp
clc
sahf
push
je
xchg
jo
inc
gs
shlb
pop
jo
push
pop
or
stos
pushf
jecxz
mov
xor
xor
lcall
popf
ret
jecxz
fidivrs
in
movb
jns
test
cmp
vaddps
mov
and
iret
test
mov
rcrl
or
adc
sbb
mov
outsl
call
or
push
cmp
iret
ret
outsl
dec
sub
lea
sbbl
mov
mov
in
repz
shll
xor
test
popf
lahf
or
inc
enter
scas
cmovnp
push
xchg
pushw
loope
push
das
wbinvd
and
xchg
mov
dec
jo
mov
lea
addl
std
jns
das
aaa
stc
mov
aam
es
add
dec
pop
bound
cmp
ret
ss
push
mov
jg
adc
scas
lret
fs
daa
push
jp
rcrb
jnp
faddp
sbb
out
mov
dec
sti
jp
xchg
in
jecxz
cld
pop
into
jp
xor
and
cmp
ret
pop
or
jecxz
jae
dec
fcomps
sub
sbb
and
sub
cmp
lock
xchg
adc
lods
clc
cmp
xor
addl
push
aad
mov
ljmp
nop
packssdw
or
mov
popa
dec
mov
cmp
loop
out
sbbb
cmp
sbb
push
push
fcmove
cmp
pop
int
roll
lds
push
stos
cmpsl
add
add
in
or
and
rclb
inc
adc
dec
mov
sbb
imul
sbb
mov
cmp
jecxz
sbb
add
cmc
mov
xchg
xorb
inc
jnp
pop
mov
lcall
pand
mov
std
rorb
and
sbb
shlb
jae
cltd
and
jo
hlt
in
es
push
cmpsl
pop
cs
xchg
fnstsw
mov
insl
adc
adc
fcmovu
xor
lods
into
pusha
jae
add
int
pop
cltd
jmp
lret
int3
mov
mov
enter
mov
jne
mov
daa
sbb
xor
jg
and
std
insb
fisubs
push
pop
imul
pushf
dec
inc
sub
jmp
sbb
inc
inc
add
inc
jge
fwait
mov
clc
adc
shl
repz
lods
sbb
dec
adc
jae
icebp
leave
popa
or
pop
push
sub
in
lret
cmp
test
loope
jg
xchg
dec
nop
pusha
js
push
rcl
daa
push
pop
mov
int3
adc
popf
jle
nop
adc
shrb
adc
movsb
sbb
cmc
pop
and
jnp
je
stos
aad
jg
rorl
mov
pop
mov
and
push
std
add
mull
pop
pop
mov
cs
sub
mov
mov
jg
insb
icebp
sub
mov
ret
mov
push
jbe
mov
mov
inc
ja
pushf
cmpsl
int
mov
or
into
shlb
aam
js
fstl
orl
jecxz
push
mov
into
cmpsl
movsl
and
mov
jns
pop
or
xor
xor
cmp
lods
sbb
jnp
push
pop
aam
leave
int
jbe
sub
test
and
push
pop
xor
push
pop
es
test
pop
xor
mov
sbb
cmp
or
xchg
dec
ja
xchg
repnz
jmp
jnp
mov
pop
push
mov
loopne
addb
movb
cltd
push
ss
or
icebp
push
pop
jle
fdivrl
sbb
inc
inc
dec
bound
iret
xor
sub
xadd
sbb
mov
popf
movsl
adcl
in
jbe
jns
dec
sub
xchg
mov
movsb
lret
lret
and
shll
mov
push
fsub
test
repz
test
mov
and
inc
push
mov
arpl
and
out
gs
xchg
fidivs
and
jbe
outsl
mov
sub
xchg
fwait
imul
int3
mov
sub
ja
mov
or
mov
fimull
dec
mov
das
scas
decb
bound
cwtl
test
loop
mov
or
adcb
cmp
adc
sub
inc
je
inc
push
negl
sub
mov
das
cmp
sarb
lret
mov
adc
cmp
fptan
pop
mov
adc
je
add
popf
out
mov
sbb
and
pop
imul
xor
mov
test
and
sbb
punpckhwd
rclb
cmpsb
or
dec
xchg
lahf
push
add
sub
outsl
imul
gs
ss
out
mov
push
mov
pushf
mov
mulb
xchg
cmp
or
inc
mov
mov
imul
js
pusha
mov
les
jne
ja
call
mov
fucomp
jae
adc
inc
int
xor
sti
nop
cmpsb
cmp
mov
in
lcall
ret
sahf
push
xchg
mov
test
and
inc
pop
aas
aaa
gs
leave
mov
loope
outsb
imul
xlat
aad
aam
addb
arpl
push
outsb
inc
leave
jae
lods
mov
adc
pop
push
sti
cmc
test
lret
sub
pusha
mov
push
stos
lcall
cmp
fiaddl
xor
popa
mov
lea
in
sub
nop
sbb
add
jo
adc
xor
mov
mov
inc
add
cmp
dec
in
cmpsl
aam
push
cmp
stos
pop
mov
sub
xor
add
test
push
xchg
or
and
rolb
dec
lock
dec
xchg
fcmovu
mov
jo
push
mov
sub
mov
xor
xchg
repz
mov
rorl
xlat
add
cmc
push
xor
xchg
add
mov
xor
clc
test
leave
scas
jne,pt
insb
ja
inc
sub
jmp
adc
sub
inc
pop
stos
movsl
add
mov
mov
mov
dec
mov
out
iret
lret
dec
or
imul
and
pop
fidivs
fisttps
sub
arpl
jb
mov
rsqrtps
dec
xchg
ret
fcompl
std
stos
xchg
sub
gs
std
sti
add
xchg
pop
jecxz
jno
fstpl
ja
mov
jl
loopne
and
std
stc
sub
lock
push
xchg
out
cs
mov
jg
aaa
cli
xor
icebp
cmpsb
das
scas
loop
cmp
rcrl
xor
sbb
gs
mov
lret
loop
inc
or
subl
ss
cmp
sub
mov
sti
xlat
push
mov
out
and
jg
shl
subl
aad
inc
pusha
add
adc
lret
in
add
mov
or
push
test
mov
rolb
cld
lcall
cwtl
fmul
mov
xor
adc
imul
push
ficoml
adc
jecxz
sarw
mov
and
mov
lds
dec
movsb
adc
lahf
out
cmp
dec
lcall
or
xchg
dec
repnz
fisubrl
mov
adc
pop
xchg
arpl
lret
int
dec
jo
arpl
cltd
test
faddp
pop
stc
stc
pop
push
test
dec
lret
inc
sbb
mov
add
aaa
push
add
mov
adc
cmc
mov
movsb
mov
outsb
adc
dec
and
addr16
leave
jb
fwait
mov
rcrl
inc
aaa
add
pop
sub
mov
subb
popf
repz
and
pop
mov
inc
xchg
mov
mov
aaa
pusha
lahf
mov
fwait
jo
lds
mov
mov
adc
mov
das
dec
mov
xor
testb
cmp
sarw
fsubrs
push
mov
dec
xchg
les
jno
xorb
call
mov
and
cmp
and
repz
fimuls
sbb
jb
or
push
sbb
mov
fistl
shll
jge
adcl
fistl
sti
push
mov
gs
mov
mov
test
mov
jo
mov
push
push
in
push
jbe
pop
push
mov
adc
in
lock
lock
adc
or
shrl
adc
or
xor
js
and
pop
add
mov
adc
jmp
lea
ljmp
js
fisubl
sbb
aas
lret
stos
mov
xor
jecxz
nop
dec
dec
les
insb
pop
fstl
mov
jge
jne
jnp
iret
iret
int3
or
es
cmp
insl
mov
fists
or
adc
or
test
mov
add
std
jb
sub
sahf
adc
adc
dec
data16
int
pop
mov
js
adc
outsl
imul
iret
imul
testb
adc
cltd
mov
pushf
jae
and
cmpsl
daa
out
je
dec
ret
movsb
insl
push
push
imul
out
ljmp
test
popa
popf
mov
jbe
fsubrp
sbb
mov
push
pop
bnd
mov
pop
cli
add
or
cmpsb
sub
rcl
loopne
mov
add
jecxz
fcoml
sbb
rcll
mov
push
clc
inc
pop
rolb
sbb
outsl
insb
jne
or
pop
dec
cmp
dec
call
jns
cwtl
lods
ret
mov
add
insb
out
and
jmp
adc
adcb
jge
into
daa
push
fdivl
pop
mov
gs
jecxz
xor
and
js
inc
mov
inc
mov
push
adc
xchg
pop
outsl
ljmp
into
ficomps
cmpsb
push
xchg
pop
sbb
or
and
cld
insb
mov
out
sub
stos
mov
jmp
imul
add
push
fisttps
aam
ret
lret
loope
and
scas
jecxz
adc
add
and
bound
stc
jg
jp
dec
cld
out
cld
mov
dec
call
int
cmpsl
adc
xchg
ja
mov
ret
outsb
cmpsl
pusha
fsubl
jp
pop
in
negl
add
aam
sub
pusha
jae
add
dec
call
imul
push
pop
sbb
pop
jle
adc
xchg
std
xor
push
adc
int3
inc
gs
push
xchg
jb
and
xor
push
mov
mov
mov
jbe
fmuls
pop
popf
jb
fisttpl
mov
in
adc
mov
test
fs
loope
test
add
dec
push
mov
into
popf
sbb
mov
dec
jle
pop
or
das
test
outsl
push
lahf
sbb
fld
add
xor
mov
pop
mov
int
jmp
mov
ja
or
jl
inc
xlat
das
out
adc
arpl
leave
leave
shrl
pop
pop
fcomps
in
stos
xchg
mov
push
fsub
or
inc
cli
lds
dec
jbe
fnstsw
lods
shll
in
aaa
rol
jl
mov
fs
xchg
cmp
iret
lods
bound
push
test
or
fcmovbe
jbe
movsb
stc
push
cmc
mov
shl
xchg
int3
stc
insl
frstor
sbbb
idiv
jbe
mov
jno
loop
push
idivb
push
cmp
mov
imul
jecxz
xor
adc
aam
cmpsl
repz
add
push
push
xchg
mov
test
pop
or
in
pop
cmp
hlt
or
std
cmp
mov
imul
imul
sahf
pop
jbe
lahf
out
mov
jo
popf
scas
mov
inc
xor
sub
loopne
xchg
and
bswap
fwait
mov
or
mov
lods
push
insb
cmpsb
mov
negb
push
shr
ficompl
rcll
arpl
mov
sysretw
mov
pushf
push
xor
xchg
inc
leave
jo
inc
mov
cvtdq2ps
fsubl
les
stos
pop
popa
cmc
sbb
jle
rcll
out
mov
xchg
xchg
idivb
insl
fwait
pop
leave
mov
mov
aas
stc
test
loopne
inc
inc
lcall
sbb
scas
xlat
daa
jo
mov
jb
out
out
sbb
icebp
pushf
mov
out
jno
push
je
cwtl
inc
rcr
sbb
sar
mov
jae
iret
lods
lahf
and
sbbb
cmp
inc
mov
ret
push
aad
mov
ficoms
in
and
scas
dec
push
sub
sub
inc
ret
dec
enter
dec
mov
or
sbb
sub
or
mov
push
daa
jns
pop
sti
loop
repnz
mov
push
add
jle
sub
and
rorb
sti
sti
cmpsb
stc
fdivl
pop
xor
pushf
xchg
sub
test
stos
repnz
sti
jns
sti
fs
jp
sbb
xchg
rclb
sbb
xchg
and
inc
imul
movsb
dec
rcrb
or
in
cld
imul
cwtl
sti
stos
call
das
mov
ds
aas
add
fldenv
mov
mov
mov
jo
sub
add
xchg
fdivl
iret
or
mov
subl
ror
icebp
jb
sub
pop
scas
and
or
add
enter
sbb
xor
adc
das
lods
lret
add
or
jmp
repnz
xlat
int
icebp
fwait
mov
into
adc
and
in
push
push
adc
or
sbb
push
mov
add
in
test
test
jge
cld
adc
je
lahf
mov
cmp
mov
jle
inc
mov
push
fwait
inc
adc
adc
or
les
popf
mov
ja
or
mov
sahf
xchg
repz
add
or
aas
push
pop
lock
xorb
adc
rcrb
or
mov
sbb
in
pop
pop
dec
stc
pushl
push
bound
inc
push
xchg
insl
mov
jmp
data16
pop
cmp
sub
ds
jle
inc
fcompl
mov
mov
dec
into
xor
mov
mov
cmpsb
lret
xchg
or
jns
add
enter
das
pop
cmp
es
or
bound
imul
enter
out
test
cmp
lock
xchg
xor
add
lock
mov
lock
cmpsb
shlb
jno
and
ss
popf
adc
aaa
dec
cmp
mov
stc
ja
jl
lods
jo
movsb
or
dec
loopne
add
inc
add
jne
inc
or
lret
sahf
jo
rcrl
push
iret
pop
jae
arpl
ret
mov
je
fisubrs
or
int
popa
fstpl
mov
fcmovbe
int3
in
stc
sub
ljmp
sbb
mov
adc
les
loop
push
mov
stos
mov
and
sub
movsl
inc
outsb
adc
cld
add
cli
push
lods
pop
dec
test
fbstp
scas
fldenv
inc
fdivr
arpl
mov
cmp
int3
dec
daa
popa
ficoml
push
sbb
rorb
mov
je
in
jo
mov
popa
fbld
dec
jecxz
shrb
and
xchg
test
shl
outsl
cld
iret
shll
aam
sbb
dec
shlb
or
les
imull
sub
pop
push
lcall
jle
int3
add
rcll
repnz
fidivrs
outsl
sub
mov
pop
and
jg
dec
jnp
rcrl
jmp
add
sti
sbb
or
xchg
pop
mov
pop
repz
adc
or
mov
mov
js
js
mov
scas
sub
sub
and
in
dec
loopne
insl
cld
add
shlb
imul
pushf
mov
push
pop
jae
je
fdivl
fcomps
rclb
xor
mov
lock
xor
sar
imul
insl
xchg
push
cmc
and
roll
jl
fiaddl
lock
push
pop
jbe
leave
sbb
sbb
jb
filds
pusha
insb
aam
outsl
mov
xchg
fidivl
ljmp
push
sub
and
andb
mov
add
cltd
adc
mov
iret
fisttpll
cmp
cltd
test
adc
xchg
mov
mov
add
lret
adc
shrb
or
or
outsb
xchg
mov
movsb
adc
lods
dec
mov
and
int
inc
pop
scas
std
inc
rcll
outsb
lds
adc
test
vmulps
inc
jbe
aaa
mov
pop
pop
push
faddp
rcl
movsb
dec
pop
mov
mov
xor
pop
scas
mov
sbb
fs
cltd
inc
pop
sub
jno
sarl
or
aaa
jmp
mov
jno
sti
mov
rcrl
mov
pop
mov
mov
outsl
mov
ljmp
cmp
popl
dec
pushf
adc
pop
test
fisttpll
leave
add
std
movsb
adc
es
push
cmp
xchg
mov
loopne
and
sbb
je
sar
rol
xchg
sbb
aad
scas
cwtl
andl
paddb
xor
cld
pop
inc
push
mov
repz
push
xchg
cs
outsb
mov
stc
lds
subl
insb
or
xchg
cld
push
fimull
xor
lods
mov
imul
jae
xchg
sbb
mov
fdivr
pop
mov
imul
dec
ret
push
xor
and
lcall
outsl
pop
lret
call
cs
cmp
ret
cltd
xor
fstps
xchg
cmp
test
mov
int
pop
nop
mov
stos
jb
dec
dec
pop
inc
and
ljmp
mov
xor
out
shrl
in
dec
push
xor
stc
out
jmp
imul
sbb
add
stos
jmp
repz
addr16
jno
scas
aam
inc
test
add
jnp
or
lods
add
mov
mov
jge
dec
rclb
jns
pop
push
jmp
in
mov
sbbl
aad
sub
faddl
push
mov
mov
cmpsl
add
jno
shll
mov
or
sahf
mov
outsl
mov
ljmp
mov
jp
mov
pop
cld
loope
pop
idivl
movb
aaa
push
cmpsb
lahf
lret
sahf
adcl
or
and
pop
jge
stos
test
shl
lret
or
fistl
repnz
imul
and
addl
adc
jle
sbb
and
aad
push
decl
or
add
cwtl
fldl
mov
aad
mov
pop
jmp
outsl
int3
icebp
rolb
mov
std
or
loop
pop
enter
pop
popa
push
sbb
les
pop
lds
xor
adc
jge
jmp
fmulp
push
in
in
insl
pop
jg
push
inc
shrb
int
and
iret
popa
ret
leave
mov
in
cmc
add
stos
fistl
or
sub
sbb
test
cmpsl
arpl
xchg
and
fimuls
dec
insl
pop
mov
or
jge,pn
or
imul
clc
dec
icebp
sub
sarl
dec
push
or
outsb
or
sti
mov
push
push
sbb
nop
cmp
or
mov
int3
xchg
mov
mov
bound
or
int3
push
nop
lcall
ja
rol
rorb
fmuls
in
jb
jecxz
xchg
aaa
imul
dec
shrb
or
imul
sub
sub
adc
fs
scas
mov
loop
mov
gs
dec
pop
and
or
nop
ret
dec
push
insl
mov
push
cmp
aad
mov
es
and
or
add
shl
jmp
bound
fildll
add
mov
xchg
shrb
das
dec
mov
xchg
cmpsb
push
inc
xchg
hlt
aam
loopne
sub
mov
and
dec
inc
jp
xchg
movsb
xor
test
sub
jbe
mov
mov
sbb
in
dec
push
and
fsubs
outsl
test
scas
pop
lea
loop
loopne
xor
insl
sti
mov
dec
cmpsb
test
mov
xchg
push
xchg
sub
clc
add
repz
aam
fstpt
lods
lret
jle
add
lret
xchg
in
aam
mov
jg
xor
pop
push
test
push
subl
lret
outsb
xchg
pushf
icebp
pop
andb
and
ret
daa
mov
in
jns
nop
jbe
mov
pop
stc
ret
jl
imul
repz
mov
push
lds
ud2
push
sub
mov
add
or
xor
imul
scas
inc
scas
inc
in
lret
mov
loopne
mov
sub
push
scas
push
mov
ss
aam
sbb
daa
xor
arpl
cwtl
stc
fcomp
movsl
rolb
cs
popa
cli
sbb
pop
imul
jnp
clc
jne
clc
cmp
push
lea
in
shlb
rcrb
dec
mov
cmc
jo
inc
push
test
adc
pop
xchg
inc
fnstsw
fsubrl
push
popl
dec
sahf
cld
test
es
or
pop
adcb
mov
sub
xchg
inc
cmp
cmp
mov
lret
mov
mov
inc
aaa
sbb
dec
add
outsl
repnz
adc
pop
sbb
imul
mov
add
mov
and
or
les
mov
mov
cmpsl
mov
adc
cwtl
dec
xchg
pop
jmp
cmp
adc
lcall
fs
xor
arpl
orl
mov
pushf
popf
sbb
adc
stos
ds
pushf
dec
jns
xor
push
or
mov
xchg
jle
and
jb
movsl
push
ja
out
xchg
mov
push
je
push
lret
dec
pop
cld
add
mov
sahf
mov
lock
bound
jp
xchg
inc
inc
and
and
ret
pop
xchg
cmpsb
out
xchg
stos
or
jns
ret
inc
data16
sub
xchg
das
dec
gs
dec
xchg
sub
mov
movsb
imul
sbb
dec
mov
push
jmp
add
loop
out
jmp
into
adc
push
insl
or
or
jl
fsubrp
in
or
test
jl
and
pcmpeqb
or
cli
insb
mov
pushf
adc
lcall
mov
inc
push
dec
lret
sub
mov
xchg
and
pop
sbb
dec
incl
cld
jecxz
mov
pop
ljmp
imul
xor
cli
dec
lahf
popf
gs
cmp
dec
nop
mov
adc
pusha
shr
pop
mov
sub
pop
xchg
sahf
mov
stos
clc
inc
inc
int
aam
sub
xchg
cs
iret
cmp
dec
cmp
int
xor
outsb
mov
test
mov
pushf
int3
aaa
mov
cltd
stos
xchg
mov
lret
adcb
fildll
outsl
inc
mov
mov
jne
dec
stos
sub
notl
enter
scas
mov
push
ljmp
inc
jb
mov
rorb
sbb
fst
out
fisubl
xor
insl
icebp
mov
scas
int
inc
xor
xchg
adc
adc
mov
xchg
adc
push
xor
std
ret
mov
jne
jl
enter
stos
inc
jo
jg
dec
pusha
sbb
mov
ret
in
pop
cmpb
lret
or
lods
jne
add
notl
leave
xor
popa
iret
xchg
sub
xchg
call
mov
pusha
cld
lahf
dec
mov
divb
pop
in
xchg
arpl
add
fildl
inc
hlt
imul
dec
or
das
xor
or
pop
add
mov
add
add
pop
and
cmp
cmpsl
xchg
lds
out
mov
push
jl
js
or
aam
dec
push
jle
into
enter
jge
inc
scas
leave
adc
xchg
pushf
shlb
cld
mov
bnd
adc
int
jbe,pt
ds
pop
out
add
sub
mov
lock
adc
roll
jmp
stc
popf
pop
lods
xchg
fisttpll
sub
gs
and
loope
sbb
pusha
adc
or
mov
add
lcall
cmp
stos
rcl
imul
aad
scas
ret
out
cmp
adc
dec
mov
mov
jnp
and
push
in
fdivrl
inc
sbb
xor
mov
lock
dec
std
mov
jmp
lods
int
xor
sbb
daa
xor
xlat
pop
cs
jge
inc
insb
outsl
add
and
clc
sbb
sbb
rorb
outsl
mov
ljmp
and
outsb
out
mov
mov
push
mov
ja
orb
jnp
jmp
and
imul
xor
adc
mov
push
cwtl
stos
lods
shl
mov
int
sub
push
push
in
or
out
cmc
inc
jp
inc
leave
sahf
and
cmp
push
lcall
scas
sub
xchg
iret
and
ds
rcl
push
loope
dec
nop
les
das
test
cmp
pop
lcall
idivl
mov
dec
mov
int3
les
add
push
pop
push
or
lret
pop
ljmp
or
adc
mov
sahf
ja
pop
and
add
add
subb
outsb
mov
mov
dec
fcomps
mov
daa
cld
or
icebp
lock
out
arpl
mov
andl
push
clc
push
mov
pop
pushf
sub
jp
mov
subb
jl
ret
add
xchg
int3
jnp
xchg
sbb
sub
pop
in
push
addr16
mov
lock
and
xchg
fistpl
fnstcw
or
add
lret
int
dec
addr16
in
pop
xchg
push
xchg
inc
jp
in
pop
imul
jp
outsl
add
lods
ret
cmp
iret
shll
sub
fwait
cmp
cmc
rorl
mov
mov
sub
add
or
push
xorl
test
repz
cmpsl
push
addr16
pop
xchg
lods
adc
push
ljmp
push
inc
daa
add
cld
bound
mov
mov
cld
mov
test
je
fsubrl
or
imul
jae
and
sti
or
fsubs
mov
mov
ljmp
sbb
adc
dec
pop
adc
push
jno
insl
and
out
sbb
int
pop
xchg
mov
jae
int
out
pop
dec
inc
mov
hlt
idivb
nop
mov
mov
stc
and
shlb
bound
ret
loope
ja
nop
shr
hlt
and
imul
into
jp
push
shr
jb
adc
into
movsb
lock
popf
dec
jmp
dec
in
cmp
ljmp
push
mov
jmp
lods
jmp
adc
or
xor
imull
mov
and
addl
fsubl
fwait
push
test
cmp
cmovbe
cmp
loope
movsl
and
jg
movsl
mov
test
push
jno
cmpsl
out
shll
lods
stos
lds
and
cmp
mov
aam
xchg
dec
dec
in
mov
sbb
inc
lea
cmpb
push
es
pop
popa
sub
jge
cmp
sbb
jae
idivl
mov
dec
pop
dec
cmp
dec
dec
addr16
mov
mov
add
inc
shrb
in
mov
cmp
insl
test
pop
mov
es
add
pop
faddl
sub
test
mov
xlat
push
je
aas
add
aad
jbe
leave
or
mov
fs
repnz
cli
push
dec
jmp
loop
popf
mov
ja
xor
push
add
adc
fimuls
xchg
shll
inc
sub
xadd
inc
shll
mov
insb
or
push
cld
inc
sbb
jo
lock
repz
mov
sbb
cmp
pop
sbb
jbe
aam
popa
cmp
cmp
mov
mov
xchg
sbb
mov
mov
mov
data16
pop
cmp
sbb
fisttpl
xor
ss
push
push
cmp
cmpsl
fs
xor
push
popa
ret
imul
or
loope
es
or
faddl
sub
addb
adcl
or
or
sbb
adc
jbe
imul
sub
dec
scas
dec
adc
insb
pop
shll
sbb
adc
loop
and
xchg
das
pusha
sbb
enter
int3
in
sarl
mov
sbb
mov
sbb
lret
or
stos
sub
scas
dec
and
popa
cmp
fs
cmp
sbb
aaa
sub
out
mov
fcoms
jnp
lahf
add
jno
dec
jge
xor
adc
cwtl
and
lret
dec
push
fdivl
jne
sahf
arpl
ss
pushl
data16
sbb
ja
sbb
int3
cmpsl
dec
sub
notb
ret
adc
loop
loop
loop
aas
rcrl
fistl
xchg
jns
neg
fwait
sub
in
nop
xor
adc
sbb
push
movhps
lock
sub
repz
outsl
add
mov
int3
js
mov
jbe
loop
dec
jmp
mov
sbb
dec
and
jb
xor
out
jns
imul
lahf
cmp
inc
hlt
in
push
lahf
fcmovb
addl
mov
ret
sbb
pop
and
cmpsl
in
fsubl
les
in
lods
jp
adc
xor
add
rcl
mov
xchg
pop
jg
shr
lcall
push
xchg
bound
or
inc
int
fcmovnbe
xor
ss
dec
daa
mov
xor
fdivrs
or
les
pop
dec
xchg
adc
and
mov
sbb
or
xor
push
shr
inc
call
lods
lret
fwait
xor
pop
mov
add
outsl
dec
out
push
call
cmp
inc
push
mov
dec
stc
pop
aas
imull
ja
mov
enter
jg
adc
das
movsb
push
mov
xchg
dec
jae
mov
jp
int3
ljmp
xor
adc
dec
inc
inc
sub
daa
lods
cmp
xchg
scas
dec
mov
testb
add
in
sub
fwait
dec
aaa
xchg
mov
outsb
rcr
aaa
inc
idiv
shlb
and
xchg
mov
clc
pushf
es
lea
xor
stc
push
pop
cltd
shll
push
add
sbb
lcall
jge
adc
jmp
aad
adc
mov
loopne
fdivr
mov
push
xor
int
dec
addr16
add
pushf
aad
bound
ret
outsb
mov
mov
movsb
stos
pop
push
movzwl
xor
fistps
in
sub
leave
push
dec
fsubrs
les
arpl
pop
fwait
add
mov
mov
das
popf
pusha
je
setb
int
scas
jb
insl
adc
jo
add
fucomi
into
icebp
movsl
insl
mov
ret
pop
dec
jmp
shll
outsl
cld
cmpl
inc
nop
int3
adc
fs
mov
sti
add
ds
das
pop
mov
mov
into
mov
lea
add
mov
aam
adc
push
addr16
xor
imul
std
mov
movsb
orl
mov
jmp
mov
fs
inc
fcmovu
or
cwtl
mov
ja
call
jnp
outsb
xchg
mov
imul
cmp
addr16
nop
test
mov
mov
add
hlt
ljmp
or
lahf
mov
add
sbb
aad
mov
andl
addb
into
and
icebp
sbb
imul
lcall
je
xor
ljmp
aam
mov
cli
xlat
mov
add
pop
dec
scas
cmp
xchg
insb
fnstenv
add
or
popf
movsb
cmp
jecxz
ret
outsb
xchg
adc
xor
lret
xor
and
int3
popa
jb
xor
inc
dec
daa
movsl
rcl
pop
sarb
mov
in
cltd
ljmp
or
int
push
fs
push
cli
movsl
and
adc
scas
hlt
popf
push
pop
push
mov
stos
icebp
pusha
scas
adc
push
adc
lcall
out
jle
lods
or
daa
lcall
test
or
cwtl
fldt
in
ret
rdpmc
cmp
xchg
jmp
int3
jb
and
xchg
jp
ja
sbb
pop
rclb
jle
insl
sbb
dec
sbb
mov
and
or
das
jo
mov
cld
xchg
fstps
adc
fs
lret
cs
mov
insb
cmp
cmp
repnz
dec
mov
adc
push
xlat
jns
or
shlb
xchg
pop
pop
loop
push
fidivl
push
adc
cmp
gs
mov
xchg
test
xchg
ljmp
ljmp
repz
push
jns
sbb
inc
inc
mov
popf
out
loopne
das
in
ret
mov
or
ds
xchg
jae
xchg
pop
popa
int
daa
mov
fildl
fbstp
subb
add
std
outsl
addl
mov
push
jbe
loope
add
loope
jnp
jo
icebp
inc
shll
cmp
ljmp
mov
mov
jno
clc
lea
push
cwtl
lock
xor
in
or
mov
fcomip
stc
cmp
sbb
xchg
jg
xor
push
dec
inc
adc
add
mov
jnp
stos
jl
rol
cmc
repz
xchg
lret
fsqrt
inc
jmp
es
loopne
pushf
outsb
pop
sbb
mov
sbb
in
lahf
sub
in
mov
idivl
scas
cmp
sti
shr
fisttpll
and
push
adc
adc
inc
out
outsl
js
nop
or
imull
filds
hlt
xorl
mov
xor
cwtl
pop
stos
test
lcall
cmp
xchg
addl
rcrb
jle
jne
inc
sub
or
or
add
fdivr
inc
ljmp
cmp
jmp
pop
mov
pop
leave
mov
stos
xor
mov
icebp
cltd
int
out
clc
imul
sahf
aad
or
push
jno
push
mov
push
jle
insb
icebp
ss
dec
pop
out
loope
xor
sbb
sub
and
or
push
aam
push
adc
mov
or
jge
mov
repnz
xor
sub
jo
xor
xchg
xor
cwtl
adc
insl
cmp
sahf
jle
sahf
mov
mov
mov
pop
and
jns
mov
xchg
pop
out
lahf
or
dec
sbb
sub
addl
pop
mov
test
movsb
sub
dec
adc
jmp
mov
lahf
dec
fidivrs
push
mov
mov
mov
stos
mov
aad
jo
jecxz
fcoms
lods
push
ficompl
cli
sbb
push
lods
mov
adcl
lret
add
xchg
or
cmp
ja
jp
fs
icebp
mov
xor
or
les
call
addl
jae
sbb
push
fidivl
fwait
lahf
adc
dec
adc
pop
lock
das
xchg
dec
jge
mov
loopne
loope
fnstsw
mov
test
movsb
data16
lahf
nop
cmpsl
push
inc
loopne
movsl
bound
ljmp
insl
out
les
sahf
inc
ljmp
sti
dec
fcoms
xor
mov
gs
mov
jg,pt
aas
pop
imul
adc
mov
push
outsl
inc
pusha
and
lds
push
mov
and
adc
cmpb
mov
out
mov
insl
out
xor
jge
add
pop
mov
xchg
push
adc
daa
xor
add
xor
jb
jnp
cltd
mov
jnp
or
push
and
cli
inc
nop
and
or
popf
insb
sbb
movsb
mov
pop
popf
push
xchg
dec
shrb
jecxz
mov
ret
adc
mov
ds
pop
icebp
push
outsl
pop
pop
rcr
mov
mov
push
ljmp
sbb
test
notb
sub
bound
mov
mov
mov
addr16
imul
leave
and
gs
aas
push
dec
pop
rclb
stc
imul
mov
mov
push
xor
xchg
mov
pop
adc
sbb
hlt
neg
enter
sti
pop
imul
jge
mov
rorb
in
jns
cmpl
les
xchg
jp
push
xchg
js
jo
loop
jl
out
or
lret
or
stc
jbe
cli
pushf
test
hlt
mov
adc
adc
mov
pop
mov
std
sbb
lock
int
aam
pop
and
inc
arpl
and
vcvttpd2dqy
mov
jl
or
shl
mov
pusha
ja
out
test
push
jecxz
popl
lcall
push
and
or
push
inc
mov
adc
push
out
xor
dec
xchg
mov
inc
rcrb
shll
and
xor
jmp
adc
push
sbb
fistpl
xor
pop
inc
daa
sbbb
push
rcrb
inc
jo
inc
into
mov
sbb
popa
jns
fnstsw
xchg
dec
and
sti
push
sbb
fs
enter
mov
es
push
cs
jmp
pushf
andl
dec
rorb
xchg
inc
sbb
pop
aad
popl
subb
push
mov
es
adc
ds
mov
sub
mov
add
fucom
shl
in
mov
cmp
movsl
pop
fincstp
stos
dec
imulb
dec
stos
lret
movl
movsb
pop
or
mov
loope
ficoms
jbe
lahf
test
jns
add
pop
pop
add
movsl
loopne
imul
jmp
popa
fmul
inc
inc
flds
mov
js
sar
imul
jbe
ljmp
loop
test
test
dec
lods
mov
test
arpl
outsb
imul
stos
lcall
mov
push
dec
lds
jge
hlt
add
add
out
mov
sarl
int
pushf
js
mov
add
hlt
gs
ror
into
pop
enter
les
ret
outsb
dec
sbb
xchg
and
mov
xchg
pop
add
xor
addl
cmp
adc
mov
adc
int
sub
add
enter
fisubrl
and
jecxz
aaa
aas
cmp
and
test
cwtl
outsb
mov
pop
popf
inc
scas
inc
test
dec
dec
pop
mov
or
push
lods
push
test
push
cli
test
lods
popf
test
xchg
cmpsb
pop
stos
mov
jl
ja
scas
pop
lret
pop
cmpsb
push
dec
inc
arpl
imul
and
mov
iret
loop
xchg
mov
or
mov
push
pusha
cmp
aad
divl
cmp
movb
bound
cs
movsl
aas
inc
out
mov
mov
stc
mov
dec
cmp
xor
minps
icebp
shrl
imul
jge
xchg
fidivl
sarb
js
popa
insl
mov
sbbl
add
push
popa
mov
out
roll
testb
lea
ja
daa
pop
ret
scas
fcmovnb
test
pop
rolb
cltd
in
scas
inc
cwtl
mov
hlt
in
out
ja
pop
jne
popa
dec
sbb
inc
int3
ret
int
jge
jmp
lock
insb
cmpsl
mov
cmpsl
out
into
push
and
push
mov
add
test
dec
arpl
popf
and
outsb
pop
lea
addr16
js
inc
andl
popf
push
fsubrl
lcall
or
mov
out
and
jg
lret
pop
and
pushf
les
hlt
shlb
icebp
enter
and
lods
das
mov
xchg
jl
leave
ja
inc
imul
pop
sarb
push
aaa
mov
in
cmp
push
dec
dec
enter
xchg
mov
int
push
push
push
and
push
movsl
cmp
inc
jle
jno
cmpsb
mov
xlat
jbe
pop
cld
es
mov
insl
cli
imul
inc
into
stc
out
mov
in
pop
dec
push
dec
fwait
daa
out
ja
flds
lret
jns
sub
xchg
loopne
push
icebp
test
repz
ret
call
mov
not
aaa
xchg
mov
cltd
jnp
stos
jns
test
loopne
je
filds
pop
pop
xchg
rol
dec
pop
xchg
int
pop
add
mov
jge
notb
adc
mov
insb
mov
cs
or
sbb
stos
faddl
mov
insb
je
xchg
int3
pop
mov
hlt
jl
sub
add
stos
ret
nop
test
mov
aas
xlat
test
add
fcomi
push
or
adc
xorl
jecxz
or
int
xchg
adc
rol
scas
imul
aas
or
push
or
jecxz
dec
xor
inc
or
rcrl
aad
mov
xor
sbb
jle
ss
pop
test
mov
test
ffreep
cmpsl
dec
cmc
out
mov
ret
adc
inc
jns
jmp
jno
or
mov
cmp
cmpsb
call
cwtl
xchg
jg
lds
xor
sbb
ss
jo
add
stos
stc
lret
xchg
addr16
jae
dec
jns
add
and
lods
ss
xor
out
or
push
mov
lahf
in
outsb
rcrb
pushf
inc
insb
jbe
push
out
es
enter
mov
jae
in
adcl
and
cmp
fstpt
xchg
iret
mov
mov
icebp
test
jmp
lods
sbb
cli
bound
fcomps
and
fisubs
jns
pusha
and
nop
cmpsl
aaa
mov
jl
sbb
insl
mov
clc
jl
xchg
mov
mov
push
int
pop
fldcw
mov
jne
cmpsb
sbb
add
mov
test
pushf
push
data16
mov
lret
or
in
jbe
jae
aas
aad
xlat
mov
add
orb
pop
out
into
jbe
and
mov
pushf
add
pusha
mov
jbe
ficoml
mov
pop
dec
jb
xlat
mov
sbb
jo
jno
or
mov
out
cmpb
fs
and
ljmp
lcall
sbb
sbb
xchg
cmp
mov
sbb
and
test
sub
add
sbb
loope
or
lret
je
pusha
clc
andb
dec
hlt
xchg
mov
add
subl
nop
adc
mov
mov
pushf
lods
pusha
pop
push
out
nop
jne
xchg
loope
cld
andb
test
or
ljmp
shll
leave
or
sub
pop
xchg
enter
ss
push
dec
sbb
push
adc
mov
lcall
cli
pop
inc
push
adc
imul
pop
xchg
cmp
lcall
add
push
dec
cmpl
pop
mov
test
imul
cmpsl
sbb
mov
es
mov
lret
call
xchg
or
pop
push
cmpl
scas
loope
xor
sti
xor
gs
stos
add
inc
sbb
and
mov
out
sbb
jg
jle
in
mov
pop
and
gs
repz
xchg
inc
lret
mov
popf
or
xlat
jg
cmp
cmp
add
jp
xchg
fisubs
inc
and
jae
hlt
xor
cwtl
lret
sbb
or
sbb
es
mov
dec
fstps
xchg
sub
repz
fxtract
ret
scas
lret
ficoml
jge
scas
addr16
mov
xchg
nop
jbe
push
gs
fnsave
rclb
and
jne
jge
repz
mov
in
rcrb
insb
jno
stc
dec
lods
sbb
mov
call
xchg
jnp
dec
test
push
pop
mov
inc
push
pop
js
fwait
add
cmp
cwtl
clc
xor
mov
jmp
imul
push
add
sbb
std
pop
scas
inc
cmc
jns
movsb
sbb
call
leave
cli
mov
pop
test
test
pop
xchg
out
test
mov
or
scas
scas
ror
dec
movl
sbb
mov
mov
jae
clc
les
mov
push
xchg
inc
in
leave
inc
mov
dec
int
add
xor
sarb
dec
pop
cs
pop
inc
and
dec
jge
or
les
pop
in
shlb
rcll
adc
or
es
xlat
fadds
in
js
jge
jne
imul
push
cmp
cmp
fxtract
inc
fdiv
and
xchg
iret
add
pop
fisttpll
movsl
loope
lods
out
add
mov
fcompl
jle
jle
or
push
addr16
hlt
pop
ljmp
aam
out
adcl
clc
lret
mov
xor
mov
les
jnp
dec
out
xchg
cmc
mov
movsb
xchg
and
cmpsl
adc
ret
add
xor
cmpsb
inc
pop
jne
or
aad
ljmp
sbb
lods
inc
clc
lods
sub
int3
arpl
in
in
and
lret
sbb
add
iret
testb
add
enter
jae
lods
rorl
cli
in
adc
insb
fs
in
or
rcll
sahf
dec
jecxz
xchg
cmpsb
pop
loop
sub
push
aas
mov
sbb
incl
fcos
sti
jne
cltd
stos
paddusb
adcl
shrl
add
adc
sbb
cmp
ss
xchg
xchg
popf
and
stos
sbb
inc
loope
mov
jp
enter
icebp
icebp
mov
shll
or
inc
adc
push
mov
add
nop
pop
jns
sbb
lcall
mov
inc
rep
cmc
cmp
cmp
dec
pop
inc
imul
add
dec
leave
xor
adc
push
dec
xchg
mov
sub
xor
and
pop
idiv
jp
setns
push
jae
add
dec
adc
xor
inc
push
xchg
push
jl
aad
test
dec
or
insl
add
jle
mov
mov
aas
call
popa
xchg
mov
call
mov
mov
or
in
in
mov
fistpll
cwtl
pusha
adc
and
js
cmp
xchg
stos
cli
mov
out
enter
sarb
xor
in
push
sbb
dec
les
iret
scas
and
int
adc
dec
inc
fs
jbe
sub
shll
daa
cmp
cmp
popa
dec
jns
xor
cmp
stos
movsl
pop
add
insb
popl
jg
or
pop
out
xchg
xchg
sbb
shlb
and
setnp
lcall
sub
jmp
enter
sbb
out
inc
add
ds
fldt
xchg
mov
popf
mov
outsb
shrb
inc
pop
push
pop
scas
dec
call
add
sub
xor
pop
cli
and
fsubs
stos
mov
and
and
jae
dec
pop
pop
test
cs
cli
aas
int
movsl
aad
arpl
sarb
xchg
stos
mov
popf
push
in
fcoml
repz
mov
stos
mov
pop
lret
mov
inc
jp
cmp
cwtl
adc
ljmp
inc
jmp
int3
or
add
pop
mov
in
lret
mov
in
xorb
gs
xchg
lret
mov
scas
lea
out
test
cmp
imul
dec
xor
ficoml
cmpsl
repz
sub
lock
push
gs
cmpsb
cmp
aas
push
test
xchg
fsubl
push
fistl
fpatan
mov
add
xchg
jae
ror
cmpsl
pop
mov
test
call
call
jnp
xor
rclb
movsb
sbb
bound
pushf
jbe
push
pop
popf
pop
fwait
testl
mov
gs
ficomps
add
dec
outsl
hlt
arpl
xorb
inc
lcall
lods
pushf
adc
dec
xor
fs
dec
jge
repz
inc
scas
sub
loope
mov
pop
xor
repz
hlt
das
jbe
push
mov
lds
gs
cli
push
loop
int3
and
lret
cmp
sbb
lret
xor
adc
push
fs
inc
nop
iret
neg
xchg
push
cmp
dec
inc
mov
mov
es
lods
mov
push
pop
push
fwait
jg
insl
std
jb
add
add
or
mov
mov
sub
sti
sbb
nop
mov
ja
fcompl
cmpsl
dec
dec
sub
xchg
sub
push
mov
aas
cmp
ficoms
mov
gs
mov
push
popa
pop
shll
dec
jae
ljmp
and
aas
fsubrl
sub
out
inc
jnp
fcomps
mov
dec
test
push
or
jl
lods
push
jbe
aas
pop
mov
xchg
das
cwtl
mov
dec
mov
lret
bound
or
jl
frstor
cli
xor
leave
cmpsb
push
xchg
cmpsb
cmovs
mov
imul
cld
sub
adc
and
mov
shl
movsb
jp
cmp
xor
outsb
bound
adc
xor
jp
jo
mov
adcl
icebp
add
ret
push
andb
sti
insb
popa
inc
into
std
out
fs
shll
sub
cmp
jmp
stos
pop
lcall
inc
rcll
mov
xor
fdivrp
push
inc
xchg
jl
rcrl
fdivrs
aam
push
out
addr16
scas
push
xchg
mov
mov
in
xchg
push
ljmp
lock
pop
data16
add
add
jno
mov
arpl
mov
push
sub
add
jo
jo
data16
sbb
js
pop
add
or
inc
push
xor
scas
fstp
stos
pop
mov
mov
cmp
add
lock
repz
cld
bound
push
xchg
inc
in
jg
aas
imul
mov
adc
divl
clc
adc
mov
add
int
adc
push
fimuls
sti
mov
hlt
lret
stos
mov
hlt
mov
jg
mov
mov
pop
pop
pop
inc
cwtl
adc
push
popa
mov
scas
mov
out
add
test
mov
inc
dec
xor
mov
out
aad
imul
inc
sti
mov
sbb
loope
in
psrld
add
ds
mov
push
inc
pop
mov
cmp
hlt
lods
add
movsb
clc
movsl
jp
test
mov
mov
mov
sbb
lea
into
fcmovbe
mov
movsb
push
sar
ljmp
mov
or
insb
sbb
xchg
sbb
mov
xorl
xor
test
enter
xchg
lret
jge
fidivrs
js
rcrl
mov
add
adc
pop
push
ret
pop
js
push
jge
nop
xchg
repz
sbb
xor
jmp
jl
jmp
rcll
cmpsl
dec
or
clc
iret
cmpsb
js
shrb
mov
insb
push
mov
xlat
lock
pop
arpl
cltd
movsl
dec
popf
ret
stos
out
and
into
xor
pop
cmp
xacquire
imul
jnp
inc
and
repz
sbb
popl
pop
rcrl
orps
insl
lahf
jle
mov
push
sub
iret
dec
insb
adc
cmpsb
jge
loopne
mov
mov
cmp
jp
insb
outsb
xor
cmp
sbb
jmp
jge
jge
add
lods
aam
and
xchg
clc
cmpsb
cmc
std
pop
or
cmp
out
mov
xchg
sbb
lret
adc
dec
mov
pop
mov
in
xlat
xor
fsub
push
push
bound
fistpll
pop
xchg
or
mov
or
pushf
jmp
xor
jo
enter
shlb
std
leave
lea
mov
push
jnp
lds
mov
or
lods
ja
lahf
clc
pop
or
and
movsl
xor
repz
test
fcoms
push
bound
dec
loop
int
in
xchg
jne
push
dec
movsl
pop
dec
push
or
mov
or
and
in
dec
mov
mov
inc
movsb
adc
sub
xchg
push
and
imul
movsl
add
mov
cmc
cltd
mov
fsubrl
adc
push
cmp
cmp
cmp
int3
fwait
ret
mov
clc
test
in
inc
bound
dec
cmp
imul
aaa
mov
inc
cmp
pop
shr
mov
aad
cltd
push
or
mov
xor
push
dec
jno
frstor
bound
push
add
push
xlat
inc
cmp
lods
cli
mov
xor
dec
sub
call
nop
into
test
adc
fwait
or
shl
inc
jns
inc
repnz
sub
pop
js
xchg
inc
mov
fsts
mov
pop
int
call
mov
pop
shrb
lret
out
lcall
mov
mov
mov
in
xor
dec
cwtl
int
into
roll
aas
lret
lods
pop
mov
inc
iret
adc
push
mov
inc
push
push
jge
icebp
adc
nop
adc
push
sbb
loopne
sbb
cmp
jge
call
filds
inc
xchg
jne
lock
or
arpl
lret
jl
cmpsl
pusha
and
jmp
xor
and
and
cmp
ret
cmpsb
mov
xchg
jo
pextrw
xchg
cmpsl
cwtl
xchg
in
int
ret
aaa
dec
xor
lock
adc
imul
xchg
scas
in
inc
mov
pop
icebp
je
into
pop
cmp
pop
daa
in
jle
mov
jg
bound
mov
push
mov
repnz
push
add
mov
sub
movsl
lea
pop
addr16
cmpsb
pop
mov
outsb
imul
sti
nopl
mov
stos
xchg
aam
fidivl
xchg
sub
gs
in
sbb
pop
adcb
das
enter
mov
sbb
push
das
lcall
aas
sbb
in
lret
and
lcall
push
xor
bound
pusha
mov
jns
shl
xor
cwtl
ds
jbe
mov
push
push
cmp
jo
inc
fildll
adc
xchg
pop
dec
xchg
loopne
lcall
xchg
inc
dec
sbb
loope
dec
and
sbb
and
add
pop
jne
adcl
sub
dec
cli
das
mov
aaa
dec
inc
rorl
out
gs
xor
jns
xor
ss
sbb
movsb
data16
movsb
adc
xor
fcoml
imul
inc
repnz
xor
inc
notl
xor
dec
mov
mov
popa
pop
xchg
stos
sbb
ds
je
push
lds
lahf
xor
cmpsl
outsb
gs
sbb
sub
xor
fdivrs
ja
add
int
femms
std
lods
orl
dec
fcmove
popf
out
pop
xor
xchg
scas
push
outsl
xorl
cli
orl
push
push
mov
notb
insb
mov
mov
dec
jge
mov
enter
gs
push
push
inc
je
jle
inc
daa
and
jbe
sbb
cwtl
repz
jmp
or
fstpt
mov
cmp
out
adc
and
jnp
push
dec
scas
movsl
adc
or
mov
insb
sub
hlt
mov
jl
mov
divl
pushf
xor
aas
loope
into
shlb
mov
mov
aad
inc
sub
mov
inc
dec
lods
lds
or
test
adc
out
pop
dec
test
in
icebp
pop
inc
iret
sarb
aas
outsb
mov
push
xor
mov
daa
inc
sti
mov
pop
cmp
mulb
aaa
add
and
aad
lahf
js
cmp
sbb
cli
std
in
cs
xchg
push
stc
movsb
int
add
inc
mov
lods
pop
int
pop
cmp
loope
cmp
xor
mov
inc
sbb
mov
mov
cmp
icebp
movsb
sbb
sbb
pop
mov
push
xchg
or
movsl
addr16
dec
out
xchg
inc
fcoml
mov
pop
pop
dec
dec
dec
and
fwait
shr
xor
add
mov
ret
add
pop
les
test
adc
jle
sbbl
mov
pop
ljmp
pop
sbb
or
push
sti
orl
push
gs
ljmp
ret
pop
sub
fistps
addr16
jmp
mov
lret
pushf
add
mov
jg
adcl
gs
sarb
iret
and
and
or
nop
mov
lea
add
dec
jmp
leave
xchg
inc
mov
sub
add
lods
mov
or
sub
aad
das
lods
enter
jnp
leave
aas
dec
fistpll
jg
insl
negl
sahf
push
dec
pop
mov
mov
fwait
mov
test
cmpsb
test
pop
adc
push
sbb
bound
mov
rcr
mov
sbb
jae
sub
test
cs
cltd
shlb
scas
pop
jge
outsl
stc
cmp
mov
jno
adc
test
inc
xchg
insl
or
cmc
hlt
stos
movsl
ja
mov
lahf
dec
iret
das
lods
xor
cli
jp
and
pusha
mov
mov
stos
jns
or
ret
push
test
insl
pop
inc
jns
icebp
fs
xor
jg
in
jns
push
stc
mov
notb
push
cli
jo
inc
int
xlat
adc
jmp
lahf
fdivl
pop
dec
xchg
and
pop
ret
xor
lds
inc
adc
popa
bound
scas
rcl
add
icebp
in
jne
xchg
imul
inc
mov
inc
je
add
movl
fsubrl
aaa
ss
notb
xchg
aam
pop
mov
mov
sbb
out
imul
inc
add
je
cmp
and
outsb
lret
je
jp
mov
sub
inc
mov
dec
xor
inc
int
and
mov
push
inc
xchg
dec
jbe
inc
fcompl
test
mov
dec
rcll
test
in
mov
aam
sub
fcoml
fistpll
add
sub
pop
push
stos
jb
mov
dec
push
sub
scas
in
sahf
cld
sub
mov
jns
fistpl
negl
xchg
or
dec
adc
inc
xchg
dec
or
pop
aas
mov
pop
stos
jbe
or
fdivl
add
imul
rorl
ret
jno
pop
pop
push
dec
mov
je
inc
ret
dec
test
in
xchg
mov
dec
push
cld
movsb
mov
fnsave
push
mov
fnstcw
or
or
xchg
mov
iret
pop
dec
adc
mov
les
sub
loope
sbb
cwtl
je
shlb
int3
inc
or
lret
fcoml
pop
inc
out
mov
fyl2x
dec
mov
lods
mov
lret
push
pop
inc
pop
test
pusha
in
jne
arpl
jle
xchg
cs
push
add
test
xchg
inc
mov
cltd
test
mov
jg
adc
adc
arpl
imul
push
imul
mov
test
loopne
dec
clc
inc
mov
sub
dec
push
sahf
or
lods
repnz
mov
add
cmp
xchg
aas
ret
clc
fisttpl
dec
shl
into
xor
mov
daa
leave
inc
cmp
jl
cli
callw
or
repnz
sub
lret
mov
mov
xchg
jecxz
jno
push
push
mov
inc
aaa
mov
pop
mov
cld
popa
sub
add
jl
xchg
mov
and
and
dec
jge
mov
rcrl
imul
lea
pop
or
sub
mov
inc
fsubl
daa
cmpsb
push
cmp
ds
jne
cs
mov
popf
in
inc
lds
ljmp
mov
lds
inc
or
jecxz
loopne
inc
and
pushf
sbb
fs
outsb
dec
fstpt
lods
push
pop
clc
jmp
aad
xor
adc
jecxz
sbb
fidivrs
add
mov
es
or
cmp
xor
lods
fstps
pop
xlat
or
lock
jb
and
rclb
std
in
sbb
sub
and
inc
call
ffreep
clc
add
mov
jp
movsb
mov
push
sub
pop
sbb
mov
and
sbb
jb
inc
clc
ja
adc
mov
or
xor
sub
or
jg
sahf
rorl
imul
sbb
ud0
pop
push
xor
adc
sbb
scas
shlb
aad
push
test
outsl
fucomip
cmpsl
loopne
xchg
xchg
out
push
pop
call
jge
and
lods
inc
pop
cmp
pusha
mov
xchg
ret
test
jns
fstps
or
push
hlt
leave
loop
test
imul
rcr
mov
test
add
sbb
outsl
xchg
cmp
movsb
push
ds
add
aam
arpl
add
push
xor
sbb
pusha
push
test
fwait
cmp
orl
fidivrl
push
pop
push
lods
call
ljmp
push
fwait
jecxz
push
daa
jl
ja
jmp
inc
add
sub
divl
add
xchg
add
and
icebp
pop
call
add
imul
mov
mov
dec
push
loope
or
mov
cmpsb
arpl
dec
pushf
test
bound
inc
jnp
xchg
sti
push
mov
je
rolb
adc
insb
pop
push
sbb
xchg
hlt
std
and
mov
in
popa
scas
mov
pop
or
sbb
push
stc
cmp
jp
stc
sub
mov
fs
cwtl
pop
inc
adc
cli
adc
add
popa
cmpsl
clc
push
ja
xchg
js
rcrb
ret
sub
stos
jg
xchg
std
ret
and
add
mov
cmp
popf
push
inc
mov
mov
jbe
dec
in
inc
outsl
sbb
loopne
test
test
mov
cmp
add
sub
imul
push
adc
pop
xor
aaa
mov
scas
push
mov
repz
jp
inc
inc
add
dec
test
xor
dec
out
adc
sub
int
lcall
aam
in
jp
xchg
push
sub
xor
lds
xchg
cmc
stc
inc
daa
xor
scas
dec
out
lea
xor
stos
xor
lock
insl
icebp
loopne
jo
xor
repnz
shll
inc
push
nop
in
lret
icebp
insl
fildl
test
enter
xchg
cmp
xor
cmp
and
push
push
jbe
dec
data16
in
jbe
es
movsl
ja
sbb
cmp
movsb
in
jns
mov
jecxz
mov
cmp
pusha
inc
clc
sub
sbb
inc
xor
xchg
jmp
pop
fiaddl
mov
mov
testl
pusha
aas
popa
cs
push
cmp
mov
jmp
pop
mov
mov
jne
outsb
pop
inc
les
lahf
add
cmc
fs
test
test
scas
ror
scas
mov
pop
fcmovnb
mov
aad
push
push
xchg
mov
and
xchg
shrb
lods
or
pop
sbb
roll
add
enter
in
bound
pop
add
jg
inc
mov
jl
in
jnp
jmp
cltd
mov
xchg
hlt
mov
pop
out
in
inc
pushf
dec
xor
push
xor
cmpsb
jge
movsl
jmp
stos
push
and
movsb
sbb
sub
js
shrd
aad
add
test
mov
xchg
xor
ja
ss
pop
dec
dec
rcrl
pop
xlat
inc
push
lret
inc
push
pop
pushf
mov
mov
fldt
push
aaa
xor
dec
and
jns
lahf
es
mov
nop
jae
movsb
mov
std
aaa
bndldx
orl
inc
lods
sahf
push
pop
sti
pushf
sbb
insb
cmp
lea
gs
outsl
shl
cmc
mov
mov
xchg
or
mov
push
aam
or
daa
test
xlat
rcr
pop
xor
out
adc
inc
into
lods
mov
mov
mov
adc
das
movsl
cmp
int
data16
cmp
or
jge
test
aam
in
data16
test
mov
push
adc
outsb
in
mov
mov
jg
ret
pop
sub
inc
mov
fs
pushf
inc
pop
inc
pop
mov
das
jg
jl
lock
sub
dec
daa
and
int
notb
out
inc
xor
jae
scas
aam
xor
outsl
inc
fimull
fnstsw
pop
movb
lcall
xlat
adc
xchg
ret
cmp
mov
sub
mov
sub
cmp
xchg
add
sahf
sub
xor
sub
xor
inc
arpl
jne
fidivrs
dec
pop
cmp
je
cmp
and
ret
cwtl
sbb
std
cmp
ret
add
push
adc
xlat
mov
xchg
fildl
les
pop
sbb
es
addr16
lods
adc
push
adc
addr16
adc
push
mov
iret
js
or
pop
ret
sub
jmp
fdivrs
cld
push
push
push
adc
xchg
int3
sbb
scas
out
aas
mov
hlt
or
pop
imul
and
clc
add
sahf
mov
sahf
sbb
sbb
jne
pop
fsub
and
jo
aad
mov
bnd
cmp
xor
cwtl
jg
fmulp
jns
aaa
sbb
sbb
sbbb
das
into
das
add
push
inc
rolb
pop
out
push
xchg
jl
adc
pushf
xchg
mov
jno
dec
imul
aad
mov
pusha
sbb
stc
sub
dec
add
in
inc
dec
jnp
repz
aas
jb
aad
sub
scas
inc
mov
mov
arpl
in
ds
cli
popa
xor
inc
xlat
and
xchg
mov
mov
cmpsb
add
xchg
insl
or
push
or
mov
movsb
outsl
aam
rol
jge
dec
mov
sti
xor
ljmp
jbe
inc
sub
dec
addb
mov
add
cmp
inc
cmp
adc
daa
xchg
and
dec
pop
inc
es
adc
xor
sub
cmp
cmpsl
adcl
mov
pop
inc
clc
push
pop
xor
lods
lods
inc
xor
mov
jmp
and
stos
stc
ss
push
mov
sahf
ret
negb
lods
sahf
mov
xor
jo
rep
insl
imul
das
sbb
les
pop
mov
shlb
cltd
xchg
xor
jl
rol
mov
add
push
jp
jbe,pt
adc
mov
xor
jecxz
outsb
push
sub
xchg
inc
xchg
js
fidivrs
into
mov
insb
int
pop
dec
jb
inc
pop
and
mov
jno
iret
aas
cmp
std
fyl2x
hlt
aad
lods
bound
cmpsb
xor
lahf
movb
pop
rolb
inc
arpl
mov
sbb
fsubrl
roll
inc
xchg
inc
fwait
xchg
cld
imul
sahf
or
jns
call
insb
mov
es
leave
lock
test
mov
insl
aad
std
jmp
loopne
push
push
dec
shrl
outsl
xor
rcpps
jg
mov
mov
stc
ret
cld
push
repnz
cld
adc
lods
pop
sbb
in
test
and
cmp
xchg
mov
pop
mov
cmpsl
add
cwtl
std
cli
test
fwait
cmp
stos
mov
push
push
in
out
insl
into
sbb
decl
dec
repnz
push
test
shlb
inc
pusha
pop
push
pop
cltd
or
popf
and
sbb
stos
orl
scas
cld
daa
fcmovbe
addr16
mov
nop
cmp
mov
dec
fdivp
mov
dec
mov
fld
cltd
and
xchg
leave
movsb
add
lret
pop
inc
scas
outsl
test
fbld
test
pop
pop
ficoms
fcompl
adc
jg
push
add
pop
pop
cld
jbe
fstpt
push
add
fnstenv
or
pop
call
orb
sbb
cli
mov
or
sbb
shl
cmp
fcmove
xchg
xor
cmp
lcall
lods
inc
jecxz
xor
dec
mov
sub
shlb
mov
inc
jp
popa
xor
jae
add
sahf
sub
lcall
pop
jge
mov
push
cmp
dec
loop
lahf
cmp
ret
jae
inc
add
pop
mov
icebp
test
pop
jg
mov
jmp
cmp
adc
stos
mov
inc
fsubr
pop
outsb
fbld
lret
test
mov
xor
test
ss
mov
enter
loope
xor
and
dec
je
cli
sub
jno
dec
mov
sarl
xor
add
rcll
mov
xchg
rolb
fdiv
jae
int3
xlat
imul
fwait
in
pushf
data16
push
je
and
pushf
arpl
push
pushf
pop
repnz
inc
loopne
adc
sub
ret
xchg
inc
or
insb
lods
xchg
jae
test
das
add
mov
push
or
sub
or
sub
inc
xchg
in
mov
aaa
fldcw
xchg
addl
out
nop
sti
inc
mov
enter
add
push
gs
jno
jne
fwait
push
sbb
cmp
mov
sahf
and
jmp
aaa
in
test
mov
mov
jp
cmp
dec
mov
dec
mov
sub
mov
adc
hlt
xor
jns
mov
mov
push
inc
pop
ret
mov
icebp
scas
pop
xor
out
xor
cwtl
fs
insb
sub
out
mov
xchg
shr
std
lods
lods
add
lcall
xor
imul
icebp
push
xchg
jns
xchg
std
cmpsl
lds
push
dec
daa
test
push
sub
movsb
sub
pop
popa
jge
addr16
jo
xchg
xchg
cmp
mov
pushf
addr16
add
mov
subb
cmpsl
pop
push
test
push
lret
sub
sbb
mov
xor
ss
cmpsb
and
xchg
sbb
lcall
pop
mov
add
fst
sub
divb
lcall
aam
xor
rclb
shl
mov
cmp
scas
mov
outsl
mov
add
enter
mov
call
int
iret
cwtl
adc
inc
jp
fdivrl
sbb
call
cmp
mov
int3
cltd
push
adc
arpl
mov
stos
adc
cmc
rcl
jno
sub
adc
jns
mov
inc
iret
pop
inc
out
dec
mov
mov
pop
pop
sbb
loopne
shrb
mov
pop
xchg
inc
sub
outsb
add
int3
cbtw
sub
mov
js
mov
js
pop
xor
cli
push
mov
test
loop
inc
xor
daa
and
cmp
sbb
mov
mov
scas
mov
aad
or
orl
and
aaa
mov
int3
push
cmp
hlt
adc
ja
mov
pop
ret
test
in
int
repnz
sbb
cs
rcrl
mov
pop
loop
mov
inc
ss
pop
sbb
movsb
inc
cmpl
push
mov
jmp
push
fwait
mov
dec
enter
push
aas
cmp
out
mov
dec
cli
mov
cli
outsl
inc
dec
xor
popf
cmpsl
shlb
cmc
and
push
mov
or
iret
mov
pop
mov
mov
mov
sahf
fistps
push
stos
sub
sbb
push
xchg
mov
mov
and
aas
adc
dec
add
arpl
call
and
inc
mul
mov
pop
xchg
cs
add
push
shr
sti
ljmp
lds
push
pop
sahf
inc
add
repnz
filds
fldcw
int
insl
scas
mov
mov
btc
dec
xor
call
ss
fidivrl
jb
mov
sub
dec
cld
filds
adc
or
pop
pop
xor
cmc
in
daa
push
xchg
fnstcw
aaa
addb
jnp
sub
xorb
pushf
pushf
bound
adc
out
push
mov
rclb
fistpll
sbb
sub
mov
ficoml
inc
mov
cmpsl
dec
cmp
roll
add
push
ljmp
iret
fsts
inc
ljmp
lahf
test
mov
leave
xor
or
filds
add
jb
cmpl
stos
loope
repz
mov
sahf
lods
or
jo
fimuls
ss
mov
outsl
jecxz
sbb
mov
lods
enter
xchg
dec
sahf
sub
xor
movsl
mov
test
lret
rcrl
inc
test
pop
mov
popf
pop
lret
mov
iret
pop
fisubrl
adc
push
mov
cmp
sub
roll
in
mov
xor
dec
cmp
add
and
mov
mov
pop
lcall
popf
aaa
gs
jnp
cmpsb
jns
lock
adc
inc
loop
ljmp
jne
lahf
push
outsb
jb
mov
jo
push
aam
or
clc
pop
stc
cmp
mov
lods
enter
ds
xchg
mov
pop
push
dec
int3
pop
outsb
rcr
out
sahf
cwtl
jo
rol
aas
inc
or
pop
inc
and
lock
lret
orb
jns
mov
pop
jp
negl
es
jbe
add
push
scas
stc
cmc
pop
int
push
insb
test
lea
lea
sub
jnp
jne
dec
push
ljmp
in
in
int
jne
push
pop
pusha
inc
pop
fdiv
push
pop
cmp
push
cli
push
mov
and
orl
push
jae
xchg
out
fidivs
call
sbb
mov
shl
xor
push
scas
pop
or
cmp
sbb
in
in
pop
adc
dec
xchg
imul
jmp
jg
fs
ja
orl
xor
cwtl
fisubs
jnp
enter
dec
fucom
out
and
xchg
jmp
adc
pop
or
fs
jp
jae
ja
jnp
gs
mov
sbb
or
pop
andb
lds
cwtl
lods
xor
jmp
add
add
mov
js
jge
in
mov
inc
sub
outsl
lods
dec
out
repz
add
mov
cld
andb
lds
sbb
scas
mov
or
inc
push
xchg
das
mov
ljmp
cmp
xchg
lods
mov
mov
out
push
sahf
jle
js
out
or
outsl
adc
setns
add
leave
pop
icebp
cmp
mov
pushf
sub
dec
lea
sub
lahf
aaa
popf
jae
int3
mov
mov
xchg
and
les
hlt
mov
inc
movsb
les
gs
hlt
stos
mov
sbb
jmp
sub
push
add
jg
cmc
mov
push
mov
adc
mov
dec
xor
iret
xchg
bnd
std
stos
or
jnp
fsubp
lret
dec
loop
jne
es
popl
mov
rcr
lods
xor
mov
arpl
xor
rolb
stos
in
mov
push
inc
dec
mov
pop
add
push
idivb
shll
orl
mov
nop
mov
shll
cld
adcb
xchg
pop
adc
popa
fs
inc
in
push
test
aaa
scas
and
add
enter
mov
xchg
push
gs
pop
pop
xchg
mov
aam
xchg
jle
orb
inc
les
popf
mov
fdivrs
cmp
scas
shrb
push
pop
push
ret
jecxz
nop
hlt
pop
rcll
aas
sbb
cmp
jmp
fsubr
cmp
dec
in
cmpsb
dec
loopne
imul
dec
lcall
frstor
movsb
addl
xchg
dec
mov
shl
pop
out
in
sbb
pop
sbb
rolb
push
test
jnp
sub
loopne
out
xchg
cmp
lds
dec
lea
mov
shrl
popf
jbe
lret
adc
add
pop
xor
jp
js
cwtl
lahf
subl
jg
mov
out
pop
adcb
adc
data16
lock
cli
repz
xchg
dec
mov
push
ds
and
adc
and
push
and
enter
icebp
rcrl
cmc
pop
mov
inc
sbb
push
mov
jl
push
xchg
adc
repz
inc
ret
fwait
into
inc
cmpsl
test
test
mov
xchg
and
mov
jg
call
divl
jl
sbb
cmp
jne
ljmp
sub
lret
lret
decb
pop
das
lds
stc
xchg
sbb
fcmovu
int
mov
into
insb
push
mov
and
mov
repnz
iret
add
test
sub
lcall
mov
push
push
leave
inc
jle
sbb
rep
pop
test
dec
inc
fldenv
xchg
adc
dec
mov
popf
fisttpll
pop
leave
xchg
imul
dec
fidivs
push
in
inc
fdivl
xchg
mov
lock
sbb
mov
in
rcrl
and
jns
lds
adc
iret
cld
mov
fisttps
jae
jmp
mov
lcall
icebp
in
xor
jecxz
gs
ficoml
jp
mov
loopne
call
pop
dec
outsb
dec
push
sahf
inc
rcrb
jg
add
push
cld
or
out
int
push
je
inc
es
mov
mulb
imul
push
or
mov
inc
jnp
or
pop
push
add
mov
addr16
in
mov
aaa
xor
push
mov
cwtl
mov
or
rol
push
in
mov
aad
and
mov
pop
int
add
push
fbstp
xchg
mov
fimuls
pop
or
loop
jl
insl
leave
mov
icebp
cld
xchg
call
pop
loope
int
dec
popa
imulb
adc
popf
cld
popa
cmc
ja
push
jge
loop
shlb
xor
pop
mov
pop
mov
adc
add
or
pop
sbb
dec
push
outsl
jge
imul
or
add
pop
mov
mov
pop
mov
sub
clc
fcmovb
xchg
fsubl
jp
push
push
jae
ror
sub
nop
add
mov
pop
scas
stos
dec
sub
jns
imul
push
inc
aas
cmp
mov
cwtl
mov
stos
cmc
test
sbb
std
adc
cmpsb
adc
push
inc
sahf
fcom
inc
or
imull
add
test
xchg
mov
mov
xchg
dec
cli
stos
mov
in
fisttpl
adc
xor
pusha
imul
xor
sti
adc
loopne
leave
cmp
shr
fnstcw
imul
mov
rorb
inc
test
ljmp
mov
outsb
aam
sub
jo
and
cmp
mov
out
outsl
push
pop
jl
stos
aad
aad
dec
in
leave
jbe
mov
bnd
dec
loop
test
cmp
cs
int
std
bound
mov
iret
xchg
adc
cmp
stos
scas
ffreep
jns
repz
mov
add
dec
fldt
pop
jmp
test
dec
pop
movsb
testl
scas
sbbb
jl
mov
insb
dec
mov
xchg
push
in
jne
inc
pop
cli
out
das
sub
adc
loop
in
inc
inc
cmp
lret
adc
sub
pop
push
jl
fstl
dec
pop
fldl
test
mov
and
loope
leave
or
pusha
daa
mov
and
pop
cmc
cltd
inc
xchg
adc
jg
in
out
lods
mov
cltd
fsubrp
lock
inc
add
mov
xchg
lea
xchg
mov
inc
test
jae
jbe
xor
jae
inc
add
add
frstor
sbb
jle
ja
xchg
ss
push
xchg
mov
aaa
cmc
cltd
jle
das
jmp
inc
or
mov
out
addr16
add
pop
push
cmp
xchg
mov
sub
pop
shlb
clc
jo
xor
pop
jp
loop
sbb
movb
mov
aaa
lcall
adc
test
sbbb
imulb
ret
mov
push
cmp
mov
fdivr
add
negl
mov
sub
cli
mov
mov
cmp
data16
xchg
cmpsb
cmp
pop
add
sub
inc
stc
inc
ljmp
pop
sub
sub
movsb
test
mov
mov
clc
fstpt
iret
jns
mov
dec
jae
arpl
test
and
stos
std
xor
pop
jb
es
and
xor
bound
subl
aam
movsb
dec
bound
pop
loope
insl
or
cld
loopne
aam
sbb
pop
loop
and
data16
mov
jmp
mov
bound
repnz
jp
mov
xor
jle
fbstp
insb
inc
or
call
aam
lcall
lock
pop
push
mov
add
and
xchg
adc
and
sti
dec
pop
xchg
nop
ret
dec
mov
movsl
inc
stos
inc
enterw
cmpsl
xchg
push
adc
pop
and
xor
ret
mov
call
adc
pop
push
dec
icebp
adc
push
lret
add
cmp
mov
jecxz
push
xchg
out
sti
shl
sub
fcomp
sub
xor
repnz
mov
xchg
clc
cmpsb
jecxz
dec
mov
jmp
pop
js
arpl
jle
and
inc
xchg
test
dec
mov
sub
imul
sbb
insb
cmp
enter
into
dec
mov
arpl
mov
fnstcw
jae
mov
push
iret
repnz
jp
lret
dec
lcall
shrb
aaa
mov
out
out
incl
imul
sub
add
filds
xorl
mov
push
xchg
inc
lcall
movsl
cwtl
cmp
pop
push
push
nop
inc
xor
stos
movsb
cmp
and
adc
clc
enter
and
mov
dec
or
cmpsl
xor
rcl
rsm
jns
pop
mov
popa
lret
aam
sbb
gs
lods
inc
lcall
hlt
movsl
jae
mov
pop
xor
movsb
sub
sbb
mov
ret
and
hlt
add
dec
fs
adc
fiaddl
xor
daa
ret
les
mov
sub
add
scas
jns
ret
int3
cmp
fs
mov
push
xor
jecxz
rcl
ljmp
mov
addr16
sbb
inc
cmp
cwtl
cmp
gs
xor
arpl
mov
or
psubsb
inc
pusha
jmp
outsb
jne
xorl
sub
icebp
test
in
inc
ljmp
xor
nop
jle
in
mov
push
in
je
mov
and
dec
mov
test
inc
push
add
cmc
pop
adc
mov
addl
xorl
stos
lea
jecxz
mov
ret
mov
mov
adcl
mov
add
add
incl
sbb
aas
test
push
jecxz
cmp
clc
inc
mov
cmpsl
mov
iret
pop
out
stos
insb
mov
hlt
outsl
inc
cmp
lcall
mov
data16
push
sahf
xchg
cmpsl
inc
sbb
cli
push
fidivs
ss
aam
dec
lods
dec
cmpsb
nop
daa
sub
or
mov
bound
adc
cmpsl
aaa
xlat
movl
pop
subl
push
loop
sbb
std
pop
inc
clc
add
iret
or
dec
pusha
int
add
in
cmp
fstpl
inc
imul
test
inc
adc
adc
push
push
push
cli
and
iret
push
mov
mov
dec
lods
or
les
js
jl
cmpsl
int3
cmp
pop
mov
les
add
aad
mov
xor
es
out
mov
icebp
aas
push
inc
test
dec
roll
mov
and
popf
sub
inc
add
jmp
mov
pusha
and
ret
xchg
sbb
cli
in
ds
xchg
repnz
xor
xchg
add
pop
imul
jae
sbb
out
add
mov
faddl
dec
jb
dec
push
lock
pop
add
add
popa
lds
lret
or
bound
rolb
test
cmp
sub
rorb
cltd
adc
js
push
fwait
std
imul
mov
mov
mov
call
stos
lock
js
mov
scas
mov
lds
mov
xchg
shrl
push
insl
andl
pop
inc
fwait
xor
clc
jge
dec
pop
cwtl
mov
in
mov
insb
sarl
xchg
lea
ret
push
repnz
mov
out
movb
jnp
inc
pop
xchg
push
inc
jne
loopne
shl
jo
jno
sbb
jo
push
mov
mov
pop
adc
sahf
adc
push
outsl
xchg
daa
test
xchg
mov
inc
scas
sarb
ret
repz
subb
jne
xchg
enter
xchg
xor
inc
mov
cmp
xchg
movq
pop
popa
and
stos
jns
repnz
aam
push
mov
push
xchg
cmp
xlat
lahf
ret
dec
mov
int3
mov
or
fs
pop
aam
iret
outsb
rorl
test
inc
lock
subl
push
test
jg
mov
xor
or
mov
rorl
shrl
aad
or
mov
repz
or
nop
lds
shll
ljmp
pop
dec
test
lcall
fwait
xor
adc
pop
insl
xor
pop
jge
add
xchg
mov
sahf
vpsrad
divl
adc
xor
in
xor
jge
jp
push
addb
out
mov
pop
mov
inc
insl
test
mov
out
add
mov
pop
push
addl
sarl
mov
in
sahf
adc
into
dec
cli
push
out
scas
xchg
stos
push
dec
int
mov
and
xchg
mov
and
cltd
lods
dec
lods
push
mov
jg
out
test
dec
mov
in
xchg
inc
mov
mov
es
rolb
jmp
imul
iret
movsb
mov
es
cmp
cmc
loopne
lods
xchg
rol
jnp
movsl
lods
xchg
stos
inc
call
loopne
ffreep
or
lds
cmp
scas
xchg
scas
scas
jbe
push
pop
insb
sub
rolb
fwait
mov
xchg
outsb
or
cmpsb
ret
fucomip
and
sbb
and
sbb
sbb
inc
popa
and
sub
mov
xchg
shrb
mov
lds
sbb
push
xchg
mov
mov
xchg
xor
fwait
push
pop
pop
cmp
or
sbb
jmp
inc
sti
pushf
fmulp
les
aad
or
out
je
fildl
push
mov
pop
push
mov
iret
dec
decl
js
or
stos
xor
push
cmpsb
pusha
ret
lods
leave
movsl
adc
push
movsb
inc
movsb
pop
sbb
mov
dec
outsb
fldcw
cmc
jb
push
in
add
jae
dec
xchg
add
jmp
or
cmp
cmpxchg
pusha
mov
fdivr
mov
int3
pop
mov
mov
ja
sub
mov
push
inc
or
je
call
loopne
jecxz
push
rcrl
sbb
mov
and
popa
inc
in
or
scas
insb
in
aam
pop
add
sub
ret
icebp
push
sub
hlt
pop
ja
sahf
pop
fwait
and
pop
push
adc
into
out
sub
mov
dec
es
pop
and
and
mov
addr16
cltd
mov
fsubrp
mov
scas
or
aas
push
mov
mov
mov
repnz
xchg
cmpsl
fsts
out
inc
xorl
scas
push
mov
lret
call
les
pop
sub
jne
sub
sub
int3
fdivrl
sub
lret
dec
adc
test
mov
ljmp
pop
push
pop
rol
and
mov
adc
pop
jg
xor
roll
bound
outsb
or
out
gs
dec
repz
pop
adc
mov
fs
pop
push
jo
repnz
fs
int3
test
je
fldl
mov
adc
mov
into
popa
xor
xor
mov
inc
jecxz
int
xchg
jb
sub
dec
cwtl
js
or
and
aas
xor
fcoms
pushf
mov
cmp
add
or
xchg
pop
js
inc
in
cmp
mov
les
jp
pop
adc
test
shll
mov
xchg
mov
lret
mov
pop
mov
xchg
movsl
movsl
push
dec
out
push
sbb
xchg
scas
loope
shrl
in
sub
aam
arpl
das
dec
xchg
hlt
dec
scas
cmp
jle
sti
pop
push
stc
scas
cmpsl
xchg
aaa
dec
andl
fs
std
inc
inc
or
pop
rorb
pop
jo
inc
sub
cmc
hlt
arpl
jbe
push
dec
cli
mov
xor
stos
mov
sti
into
nop
adc
inc
mov
push
fiaddl
negb
and
mov
cmc
popa
xchg
outsb
shrl
dec
dec
xor
mov
out
fcmovu
add
xchg
mov
dec
call
std
imul
inc
push
mov
rcll
outsb
pop
scas
lcall
cld
out
vminpd
lret
jmp
pop
cmp
sub
scas
adc
pop
fnstsw
arpl
hlt
hlt
mov
cs
jge
and
dec
hlt
les
add
aaa
push
mov
pop
out
mull
dec
out
imul
into
sbb
mov
cmc
rorl
mov
inc
dec
lock
mov
xchg
pushf
push
jge
inc
cwtl
leave
in
pop
xor
pop
and
outsb
xchg
les
stc
jo
jbe
push
daa
push
mov
xchg
and
mov
les
mov
and
sar
mov
mov
lcall
pop
ds
rorl
jge
in
arpl
in
nop
push
sbb
frstor
lods
into
inc
pop
inc
rcrb
aad
lcall
movsl
push
sbb
pop
pushf
cmp
mov
loope
dec
stos
outsb
mov
dec
dec
pop
mov
push
fwait
ret
cmp
movsb
jmp
or
push
pop
shlb
repnz
leave
jge
add
ss
outsb
jl
std
es
or
les
out
daa
pushf
xchg
inc
ja
jl
xchg
ficomps
mov
mov
leave
jae
sarb
aas
xchg
scas
pop
incb
imul
shrl
dec
pop
xchg
add
cmc
insl
push
ja
sub
shrl
and
mov
fmuls
inc
fstps
stos
cmpsb
shl
int3
xchg
sbb
xchg
pusha
out
push
insl
jne
shlb
or
jns
aas
push
aas
inc
jecxz
cmp
push
mov
into
fcom
add
or
sahf
push
pop
in
cwtl
adc
pop
xchg
popf
sbb
pop
data16
lahf
shr
or
icebp
or
push
and
pop
xor
leave
pushf
pop
icebp
clc
mov
sub
clc
imul
mov
cld
mov
mov
sbb
les
pause
sbb
test
inc
push
adc
cmp
leave
cmpsl
in
mov
pop
pop
jne
jnp
in
movsl
jb
add
lahf
push
dec
dec
and
jnp
sbb
add
js
shll
gs
repz
int
dec
pop
mov
and
mov
dec
ss
mov
push
mov
iret
jb
bound
jl
sub
dec
sub
sbb
cmp
je
cs
sahf
inc
iret
test
pop
mov
icebp
mov
inc
int
into
das
lods
andl
lret
pop
and
cmp
das
mov
aam
lods
iret
repnz
dec
xor
je
dec
rcr
ficompl
or
jle
rorb
cmp
rcrl
push
dec
insb
jne
pop
scas
scas
gs
icebp
push
inc
out
lods
aad
lods
and
sub
and
jl
push
adc
roll
incl
or
mov
and
repz
jle
fstpt
test
inc
scas
xchg
mov
pop
xchg
lahf
fistpl
or
clc
pop
shrl
lods
inc
repz
aaa
sbb
pop
setns
cmp
idiv
pop
inc
xchg
cmp
mov
push
jo
int
sbb
movsb
push
or
jmp
sbb
in
sub
push
mov
fs
xchg
dec
sbb
mov
daa
cmp
int
adc
mov
mov
mov
sarb
decb
sbb
lods
cmp
test
or
lds
lea
lahf
push
mov
cmp
sbb
add
ds
inc
xchg
fucomip
mov
pop
sbb
je
lock
sarb
test
pop
adc
push
mov
inc
inc
xchg
adc
loop
loopne
daa
outsb
or
push
aas
dec
mov
pop
cmc
lret
aam
cmpsb
push
or
leave
adc
jmp
out
sub
pushf
adcl
dec
iret
mov
inc
mov
stos
loop
fidivrl
jae
ds
out
push
lcall
pop
dec
ror
or
cmp
ljmp
add
outsb
xorb
ja
lret
dec
outsl
test
jecxz
int3
sahf
mov
js
outsb
enter
mov
jl
lea
and
popa
les
sbbb
loopne
subl
mov
jecxz
jge
in
or
shrl
push
add
sbb
push
and
mov
and
push
mov
mov
or
sbb
lret
lret
sub
cli
fs
cwtl
inc
cmpsb
push
cmp
jns
jo
xchg
sbbl
and
out
in
sub
dec
jl
fucomi
int3
and
xlat
cltd
inc
push
jge
or
jl
xorb
je
fldcw
dec
imul
fwait
stos
insb
aad
pushf
mov
test
cwtl
shl
jmp
lcall
sbb
cmpsl
or
xchg
mov
pop
outsl
repz
jbe
jmp
ret
xchg
scas
xchg
xchg
mov
mov
fwait
pop
movsb
add
inc
stc
aas
rclb
rol
mov
rcll
subl
cld
sub
cmp
jecxz
mov
loopne
lock
pop
ljmp
dec
mov
jo
flds
push
pop
ror
and
imul
shll
dec
mov
negl
aam
loope
out
popf
inc
jo
inc
or
mov
mov
cmpsl
pop
cmp
inc
adc
jns
in
cmp
aas
and
pop
subl
fs
test
outsb
and
xor
push
cmpl
xchg
out
cli
xor
xchg
lret
bound
mov
lret
adc
and
lods
xchg
dec
jmp
jo
mov
stc
inc
imul
mov
adc
shr
inc
test
mov
int
iret
iret
rcrl
addr16
mov
je
mov
pextrw
mov
int
iret
add
lea
push
dec
repnz
out
adc
loopne
gs
jg
or
aaa
inc
push
adc
add
or
or
and
xchg
add
and
insl
lock
bound
pop
push
pop
adc
cmp
jmp
popf
int3
insl
sbb
sub
int3
movsb
xchg
fwait
sbbl
push
pop
or
mov
test
lock
enter
inc
xchg
add
xchg
inc
sbb
mov
xor
mov
jle
repz
int
xlat
xchg
fs
aaa
xor
je
loope
ja
jno
push
push
fisubl
pop
imulb
ja
push
mov
mov
mov
pop
out
mov
push
push
cli
loope
lea
pushf
push
sub
xchg
addr16
mov
push
ss
push
dec
dec
cmpl
mov
loop
les
cwtl
popl
xchg
push
cld
enter
mov
insl
outsl
into
mov
lods
ja
test
or
mov
js
addb
insl
xchg
mov
pusha
shrb
mov
sub
push
rol
test
test
push
out
dec
imul
or
push
mov
mov
jmp
dec
xchg
mov
and
test
xlat
std
lret
pop
push
cmp
xlat
addl
sub
pop
scas
pop
adc
add
lahf
xor
sbb
sbb
jmp
pop
fwait
popf
mov
ret
jg
sbb
push
adc
fcomps
add
sub
mov
imul
out
push
mov
cmc
ja
pop
lahf
scas
in
mov
cmc
xchg
mov
cmp
jmp
pop
mov
repnz
push
pop
nop
out
fidivrl
aam
mov
pop
sbb
push
bound
adcl
sbb
sbb
fimuls
cwtl
aad
push
and
icebp
ja
insb
pop
icebp
icebp
jb
enter
int
cmp
sub
ret
jnp
mov
les
mov
rcr
sbb
aam
push
mov
popf
roll
pop
mov
push
sbb
out
ja
pop
cmp
xchg
out
adc
enter
jecxz
ret
test
outsl
dec
dec
lcall
xchg
xchg
cmp
adc
outsl
jno
xchg
mov
ss
loop
call
into
dec
fimuls
into
ss
mov
scas
inc
sbb
mov
mov
mov
pop
icebp
lcall
sub
data16
loope
scas
and
dec
mov
cs
jns
lahf
mov
into
leave
mov
pop
sahf
and
xchg
mov
movsb
inc
outsl
dec
es
inc
mov
pop
cmpsb
adc
pop
mov
inc
rorb
aad
ds
inc
mov
inc
lea
aas
cld
pop
shlb
test
cli
inc
les
ret
or
repz
orb
test
popa
xchg
and
ljmp
pop
adc
mov
orl
out
test
data16
cmp
leave
cmp
sbb
outsb
rorb
and
outsl
xchg
aas
cmpsl
movsl
fstl
enter
push
pop
or
mov
mov
jp
scas
push
xchg
loope
cs
enter
or
mov
ljmp
fnstenv
outsl
mov
repnz
jle
jns
jmp
cmpsl
in
xlat
jne
push
and
sbb
out
mov
pop
xchg
fsubrs
mov
in
fdiv
loopne
es
mov
mull
es
insb
or
jp
push
cs
ret
in
xor
or
addl
inc
std
addr16
shll
inc
stos
es
aas
dec
subb
xlat
mov
pop
xor
adc
dec
jno
pop
pop
aad
lahf
testl
clc
ljmp
cli
aam
adc
mov
call
push
andl
movsb
push
xchg
cwtl
mov
sbb
sbb
insl
lcall
dec
aad
xchg
push
jns
or
add
xchg
es
fsubs
testb
push
mov
add
inc
push
hlt
inc
rorl
dec
and
add
push
jge
pop
cmpsb
add
cmp
imull
jne
dec
movsb
in
fiadds
pushf
icebp
jno
lcall
sub
mov
add
push
inc
push
dec
and
add
pop
sbbb
fsts
xchg
fs
addr16
lcall
clc
mov
or
xchg
rcrb
pushf
jle
scas
inc
mov
sub
jb
mov
pop
into
test
jne
dec
lods
cmpsl
xor
cwtl
inc
dec
mov
adc
imul
mov
xor
ja
popf
and
xchg
jo
out
xchg
fsubr
gs
lcall
mov
pop
xchg
dec
jae
xor
shl
gs
mov
ficomps
mov
push
xchg
jmp
imul
js
cmp
pop
push
shrl
ljmp
inc
pop
jecxz
dec
xor
dec
outsb
fadds
cmp
xor
out
repnz
enter
push
call
sbb
in
filds
ljmp
cmpsb
pop
add
push
insl
adcl
push
sbbl
shlb
data16
push
push
fscale
out
and
jns
lret
xchg
inc
pop
push
in
jl
out
mov
sub
dec
fcompl
xchg
pop
imul
or
rolb
dec
xchg
imul
pop
jae
pop
cmpsl
rolb
shlb
scas
stc
jp
sub
push
mov
addr16
mov
cltd
notl
aas
out
rorl
inc
ret
or
mov
mov
div
out
dec
push
add
cmp
mov
loope
dec
mov
aas
lcall
mov
data16
pop
movsl
inc
daa
test
mov
mov
push
or
xchg
xchg
es
jp
sti
sub
sbb
xor
cltd
push
icebp
outsb
push
sub
push
xlat
cld
mov
aas
ret
cs
ds
push
jne
testl
dec
sub
es
out
mov
insl
aad
scas
xchg
push
not
xor
pop
jmp
mov
scas
nop
sbb
mov
leave
and
sub
jb
dec
jp
pop
popa
loop
movsb
dec
ret
subl
cmpsl
mov
mov
or
sti
shlb
mov
adcl
clc
push
aad
jg
ljmp
lcall
and
add
push
repz
mov
pop
lods
jnp
leave
push
add
and
in
pop
sub
jb
hlt
iret
fmull
xchg
ret
cmpsl
mov
inc
xchg
imul
arpl
decb
icebp
popl
int3
jns
xor
sbb
dec
jg
jno
sub
enter
daa
ljmp
cmp
jne
jle
mov
sbb
fistpl
pop
sub
shrb
pop
popa
push
add
fnstenv
pop
movsb
push
es
xchg
pop
fsub
imul
and
sub
mov
ss
dec
mov
xchg
mov
test
xchg
dec
sbb
sbb
cmp
sub
pop
push
push
xor
mov
jmp
dec
mov
addr16
fdivrs
inc
mov
mov
loopne
sub
ja
ret
sub
and
dec
add
sarl
addr16
adc
push
subb
repnz
and
test
popf
pop
push
mov
inc
fdiv
mov
std
mov
call
stos
push
or
mov
fnsave
lods
out
and
jbe
rol
pop
pushf
sbbl
mov
out
inc
inc
or
add
ds
mov
stos
out
negl
call
out
inc
cld
xchg
push
rcrb
sbb
dec
jmp
pop
cmp
pop
inc
lds
adc
pop
pop
popa
imul
xchg
pop
xlat
fnstcw
sarb
xor
mov
cld
jnp
gs
mov
stos
pop
rcll
pop
inc
aad
mov
rep
stc
add
xchg
jg
ja
mov
mov
jb
inc
scas
in
cmp
in
inc
out
jle
xor
repnz
xor
pop
mov
cmp
xlat
dec
movsl
loope
addr16
pop
lret
mov
lret
xchg
lret
jbe
xor
daa
xor
dec
fildl
repz
and
fimull
addb
std
fcoml
add
aas
mov
xchg
add
shrb
cmp
xchg
and
push
push
lods
and
dec
adc
fsubrl
inc
and
jno
and
cmp
mov
in
adc
negl
dec
mov
mov
mov
lods
and
sbb
inc
mov
lahf
arpl
arpl
sbb
push
xor
loope
cmp
test
lods
add
sbb
xchg
mov
xchg
sar
mov
sarl
sahf
add
and
pop
mov
gs
stc
out
inc
cmp
mov
addb
xor
inc
in
jb
mov
mov
rcrl
out
in
out
fldcw
push
std
inc
imul
dec
mov
shrd
shlb
and
je
movsb
repnz
out
jae
out
leave
js
adc
mov
in
loope
add
sbbb
push
pop
pushf
cmpb
test
je
mov
int3
adc
loop
arpl
sahf
push
xor
sub
mov
shll
pushl
or
cmp
scas
or
push
add
loope
lcall
lahf
push
out
mov
push
dec
push
push
out
ss
adc
mov
fcomi
aas
or
movb
sti
pslld
test
aam
inc
jle
ret
adc
xchg
pop
test
add
insb
push
sbb
pop
in
mov
fisttpl
ljmp
sub
mov
les
sub
push
inc
dec
mov
add
cmp
push
roll
mov
pop
movsb
cmp
das
push
nop
jb
push
les
add
cwtl
pop
push
movsb
jno
sar
inc
or
sbb
inc
mov
push
fdivrp
and
pop
outsb
xchg
adc
mov
xor
sbb
mov
jp
pop
repnz
in
dec
loop
aas
fstpl
pop
lret
ss
xchg
js
insl
fdivs
xor
jno
dec
stos
enter
movsl
clc
fmull
mov
in
pop
mov
into
mov
or
mov
lds
in
int3
xor
mov
mov
popa
sbb
adc
mov
fldpi
cmp
push
movsl
jae
daa
xchg
jae
jo
rclb
xchg
push
adc
xchg
enter
and
fcoml
jmp
ret
stc
cmp
jns
or
arpl
pop
test
out
insl
jle
addr16
pop
mov
cli
jl
adc
sub
cwtl
jns
mov
dec
insl
fstpt
jecxz
dec
lea
inc
js
shl
sub
sar
mov
out
ror
dec
sbb
sbbl
adc
das
sbb
nop
mov
sub
outsl
shll
xchg
fldenv
cmc
enter
lret
adc
push
aam
jmp
dec
and
outsl
subb
into
adc
lret
and
sbb
jmp
into
out
inc
mov
pushf
jle
repnz
xor
adc
xchg
push
mov
sub
loope
xchg
mov
fcmovu
ljmp
mov
pop
adc
dec
jo
add
int3
mov
std
push
outsl
xor
hlt
adc
mov
adc
test
loop
jmp
sbb
xchg
cmpl
add
add
in
jge
push
clc
es
mov
sbb
movsb
sbb
sub
fucomi
sahf
xchg
push
xchg
nopl
mov
movsl
xchg
test
mov
aas
fsubs
rcrb
sub
lds
add
and
and
jl
aas
ja
push
and
test
fistpl
xlat
push
in
lods
lret
ret
outsb
sub
rcrl
aaa
sub
test
inc
andl
enter
imul
xchg
fldenv
mov
mov
bound
mov
nop
loop
stos
rcll
mov
lret
ret
fldl
pop
jb
lret
xchg
xor
aaa
fnstenv
std
jp
pop
bound
xchg
in
add
jmp
mov
ss
xlat
pop
std
loop
inc
cmp
or
imul
iret
xchg
fbstp
mov
arpl
aam
loope
jecxz
popa
in
sub
addr16
sub
rclb
sbb
mov
xchg
hlt
fxch
gs
out
xor
sub
jnp
fisubrl
cmc
aam
daa
xor
mov
mov
movsb
cmp
mov
bound
mov
xor
aad
lahf
insb
insl
idivb
scas
addl
out
lods
inc
sub
stos
mov
add
adc
pop
adc
gs
outsl
mov
sahf
das
pushf
adc
scas
pop
and
ljmp
out
mov
adc
and
push
inc
cmp
pop
decb
pop
mov
movsb
mov
orb
imul
pop
leave
sub
cs
lret
sbb
rcrb
mov
adc
aas
or
mov
dec
clc
ss
cli
stos
mov
popa
in
or
ds
xor
es
loop
mov
xor
fildl
pop
pop
in
dec
ljmp
lock
jecxz
adc
hlt
add
cmp
popa
enter
daa
iret
mov
mov
sbb
cs
inc
ret
lock
sarl
test
fistpll
push
pop
mov
pop
xor
adc
add
adc
add
jo
xor
pop
sbb
jge
mov
dec
insl
dec
cmp
movsb
jb
or
push
cmp
ret
mov
test
push
jecxz
aad
sbb
jo
jo
fdiv
int3
lods
pop
mov
lods
leave
mov
push
jne
pop
sub
mov
sbb
mov
xchg
stc
insb
lock
sub
pop
push
test
xchg
nop
aad
jns
test
or
or
adc
add
repz
mov
imul
js
push
sub
cmpsb
cmp
test
scas
jno
outsb
lods
pop
stc
cs
xchg
xchg
dec
add
jbe
mov
mov
pop
pushf
sub
lea
pushf
inc
out
roll
cmp
stc
clc
mov
fwait
mov
test
inc
xchg
and
xchg
rorb
pop
mov
push
imul
ja
push
inc
and
pop
in
mov
stos
mov
jecxz
inc
add
push
js
shll
call
inc
arpl
pop
insl
pusha
mov
cmpl
mov
mov
xchg
pusha
repnz
in
push
add
imul
stc
gs
addr16
sti
cmpsb
popf
mov
cmc
into
pop
mov
lahf
subl
cmp
ret
data16
mov
mov
je
sbbl
lcall
inc
push
push
shrb
push
loop
pop
sbb
gs
cmp
and
ficompl
cmp
xchg
mov
rcrl
in
fsubl
iret
and
repz
sbb
mov
hlt
jo
cmp
xor
cld
mov
ret
push
mov
inc
mov
cmp
xor
pop
mov
push
std
xlat
dec
das
inc
repnz
add
lret
sbb
out
dec
out
call
ja
xorl
popf
popf
pop
or
out
cld
aad
clc
test
pop
out
xchg
jle
shll
fcmovnbe
dec
sub
xchg
jecxz
ret
mov
or
pusha
push
sbb
xlat
mov
xor
int
ret
pop
mov
clc
es
inc
insl
loop
jns
icebp
repnz
daa
std
call
es
or
hlt
jp
test
xchg
xchg
outsl
pop
dec
sti
push
in
xchg
xor
push
icebp
jmp
xchg
into
dec
sbb
fisubrs
mov
sub
aaa
xchg
fdivs
jo
push
push
add
mov
jbe
lret
push
mov
and
lahf
out
xchg
je
mov
xor
sub
inc
fcoml
mov
adc
icebp
add
pop
mov
push
cmp
out
loopne
test
jnp
insb
lret
pop
lahf
jae
fmul
xor
outsb
adc
lds
sahf
lds
aaa
out
enter
scas
leave
lret
test
mov
daa
fdivrl
pop
or
xchg
jmp
notb
inc
jge
std
inc
xor
ret
xchg
das
out
cmpsb
test
rcrl
aas
pop
in
cmpsb
das
jns
or
jp
push
inc
inc
xlat
dec
outsl
push
imul
xchg
push
movsb
sbb
stc
lret
rclb
jb
out
adc
stc
and
test
bound
outsb
lds
sbb
push
mov
pop
daa
aaa
cld
loopne
mov
test
inc
lret
call
fisttps
out
out
shlb
pop
push
or
jge
dec
imul
sbb
cmpsb
jno
fildl
sahf
ds
xor
arpl
addl
cmpsb
sbb
inc
push
or
xor
and
rcl
push
mov
push
cmp
cmpsb
pusha
movsb
push
addb
in
xchg
mov
int3
out
les
test
jnp
pop
fsub
out
dec
popa
daa
clc
aam
std
fwait
jg
jne
mov
inc
dec
repz
or
inc
xchg
fisttpl
cmp
test
inc
push
dec
xchg
out
adc
sub
push
fstpl
sub
jg
sbb
or
loope
jbe
jg
add
mov
scas
xchg
pop
jge
sub
out
adc
dec
mov
addr16
xchg
in
aam
mov
mov
jl
test
fnsave
sbb
repnz
jbe
adc
ds
push
gs
out
insb
inc
scas
ss
push
inc
push
leave
out
popf
push
aas
orb
jbe
call
jg
dec
push
xchg
data16
icebp
cmp
sbb
xchg
pushf
mov
xor
jp
inc
es
mov
push
repnz
scas
adc
jmp
testl
xor
add
cmp
aad
aas
bound
in
or
add
mov
dec
scas
inc
jp
push
adc
shlb
flds
pop
repnz
or
sub
sahf
pop
add
popf
lcall
testl
sti
rcrb
cmp
pop
and
push
jo
mov
inc
ret
inc
enter
sbb
mov
cli
push
subl
or
xor
adc
ficomps
sbb
ljmp
stc
push
sbb
dec
sub
inc
std
test
inc
cmp
jo
das
scas
xor
sub
bound
cli
idivl
mov
xchg
ds
fistpl
aas
mov
jg
jne
jns
gs
dec
sti
sbb
push
pushaw
mov
insb
sbb
lahf
in
add
push
lods
bound
neg
push
inc
add
jle
mov
add
dec
inc
jecxz
je
enter
lret
cmp
mov
xchg
mov
mov
lahf
rorb
scas
into
stos
rcll
in
out
cmc
leave
sbb
pop
xchg
xor
sub
in
fistpll
test
les
cmp
push
or
in
jp
loopne
incl
mov
adcl
roll
sub
aaa
mov
xor
fidivl
xor
arpl
in
sub
outsb
mov
inc
sbb
sbb
iret
push
and
aaa
dec
dec
adc
ret
push
gs
hlt
scas
mov
sub
into
cmp
std
jl
xchg
in
and
pop
fmul
jg
mov
inc
jmp
and
mov
jno
rcrb
mov
sbb
jmp
xchg
leave
arpl
rcll
adc
inc
clc
call
out
jmp
mov
or
pushf
inc
andb
sbb
push
subb
inc
lret
mov
decl
mov
or
cmp
jmp
push
stos
jp
sub
gs
inc
loop
jno
int
and
mov
js
ret
xor
mov
add
jle
sub
aaa
out
out
cltd
aad
or
pop
loopne
sub
sqrtps
mov
int3
push
push
pop
jmp
dec
mov
and
frstor
jo
push
mov
jmp
lret
imul
xchg
pop
int
shr
inc
insb
gs
andb
popf
pop
pop
xchg
dec
cmp
ja
pop
out
jns
sti
mov
in
mov
int3
dec
gs
pop
dec
int
test
cmpl
cwtl
insl
mov
xchg
js
or
xor
sti
mov
stc
sub
outsl
pop
jmp
imul
imul
jo
test
fidivrs
jo
sub
stc
pop
fstpt
pusha
xchg
pop
dec
inc
bound
jbe
insb
lret
mov
es
push
jp
mov
scas
push
add
dec
insl
bound
notb
xor
pop
add
call
out
lods
mov
ds
xor
push
out
cmpb
outsl
addr16
jl
mov
pop
imul
iret
iret
scas
fs
jmp
or
ret
loop
mov
stos
push
dec
mov
cmp
stos
jb
aam
das
lods
out
mov
bound
push
imul
mov
movsl
movsb
inc
mov
bound
sarb
push
adc
pushf
or
mov
popf
ja
push
or
je
mov
hlt
es
add
cmp
fistl
frstor
lock
lock
ret
fsub
fmuls
adc
stos
push
bnd
sbb
and
sbb
push
outsl
inc
test
les
mov
test
push
mov
adc
pop
sbb
push
gs
popf
pavgw
jp
js
push
icebp
insb
daa
sbb
fimuls
leave
pop
inc
xchg
addr16
mov
xor
add
addr16
pushf
mov
mov
jne
lds
mov
sti
xlat
and
xor
xchg
leave
and
nop
add
adc
xchg
pop
add
or
xchg
cmpsl
and
cmc
mov
jg
lahf
in
test
jb
fsubs
sbb
jecxz
xchg
add
idivb
cmp
mov
cmpsb
jl
test
push
dec
jns
mov
cmpl
and
pop
xchg
sbb
clc
rcrl
mov
dec
imulb
mov
sub
test
andl
mov
cmpsb
push
pop
subl
pushf
clc
or
inc
mov
mov
xchg
jns
addr16
fcmovbe
jb
shlb
daa
sub
mov
mov
adc
add
xchg
mov
or
dec
jp
mov
jl
push
cmpsb
jae
cmp
outsl
mov
es
dec
mov
div
cmp
insb
dec
pop
jl
test
frstor
int
aam
roll
and
dec
mull
cmpsl
cmpsl
mov
ret
loop
mov
push
dec
sub
cmc
adc
add
loope
jge
shlb
int
sahf
clc
mov
xchg
xchg
popa
lea
push
mov
subb
lcall
in
sbb
and
ljmp
in
xor
or
lock
int3
xor
xchg
push
inc
pop
imul
les
nop
fistpll
jns
aas
sahf
dec
sbb
hlt
sahf
adc
dec
push
fdivs
int
lcall
push
inc
mov
pop
and
jle
pop
adc
mov
mov
insl
lret
fwait
or
and
shlb
jae
pop
mov
outsl
lret
data16
test
movsb
test
or
pop
ds
pop
xor
mov
inc
mov
ret
je
testb
mov
stos
sub
cmp
jnp
dec
and
das
mov
data16
into
test
cwtl
push
xor
test
mov
adc
sahf
data16
stc
jae
test
cmc
adc
mov
je
xor
repnz
inc
jns
popf
shll
notb
mov
shll
imul
mov
iret
jg
insl
movq
push
imul
push
sbbb
enter
sbb
cmp
pop
out
fcmovnb
ljmp
xchg
xchg
pushw
mov
out
mov
mov
lret
or
push
xor
push
push
dec
imul
enter
sub
add
in
ljmp
frstor
pushf
data16
cmp
mov
dec
out
pop
xchg
imul
lds
mov
sbb
rcr
stos
inc
pop
adc
or
in
xchg
aas
mov
push
push
or
pop
adc
pop
fists
push
lret
lea
cs
fwait
jb
pusha
cmpsb
test
call
push
mov
mov
or
int3
mov
mov
fnstsw
jg
iret
andb
leave
xor
cmp
pop
mov
inc
leave
xchg
or
inc
xlat
xchg
js
inc
add
loopne
out
repz
mov
fs
dec
sbb
rolb
in
in
dec
and
fs
into
pushf
cmp
dec
pop
and
or
or
fdivrl
popa
movsl
xlat
mov
mov
subb
jno
fldenv
addb
lret
cltd
add
int
xchg
add
imul
idivb
cs
popf
inc
fldlg2
aas
lock
repnz
into
adc
hlt
mov
push
das
outsl
subl
lock
push
push
xchg
add
popa
test
loopne
mov
xchg
cmpsb
push
lret
pop
hlt
stos
jecxz
xchg
dec
flds
ds
jl
mov
xchg
mov
mov
adc
sbb
cmpsb
dec
es
mov
dec
adc
cmpsl
dec
pop
push
scas
sub
pslld
in
mov
cmp
bound
dec
inc
jecxz
pop
cmp
xorl
js
pusha
aaa
xchg
lea
ret
sbb
sub
test
and
mov
ds
pushf
and
xchg
push
into
testb
out
and
dec
icebp
mov
mov
rorb
idivb
out
sub
add
mov
jns
xchg
pop
lahf
bound
sub
stos
pop
fidivs
scas
mov
mov
int3
cmpb
sbb
int
xor
pop
or
xchg
stos
jl
add
jecxz
iret
push
scas
imul
ss
cmp
es
xchg
ss
xchg
fucomp
mov
movsb
stos
and
inc
push
out
or
mov
shll
jbe
jmp
lods
xor
jne
push
xor
jp
movsl
pop
or
pop
push
mov
inc
lds
insl
xchg
mov
gs
inc
push
cmp
clc
sub
test
std
jae
mov
insl
push
mov
adc
test
ljmp
mov
call
popa
mov
leave
xchg
adc
pop
cld
sbbb
adc
or
pop
add
dec
xchg
pop
push
inc
cwtl
mov
fmulp
cld
dec
xchg
cld
inc
xchg
cs
dec
xor
jle
lock
xchg
jle
popa
imul
sbb
sbb
fdivrl
add
add
jne
lods
jae
out
pushf
test
pushf
push
imul
ds
das
roll
mov
push
inc
clc
pop
mov
orl
loope
popf
inc
stc
rorb
jae
daa
shll
adc
ds
lret
pop
inc
jecxz
mov
mov
cmp
dec
xchg
fdivp
out
rorl
out
sbb
and
iret
notl
or
imul
jbe
or
xor
adc
jle
js
pop
push
imul
lahf
sbb
jb
shrb
cmp
les
jae
adc
test
outsb
adc
or
pop
xor
dec
orb
xor
shll
lret
push
movsl
scas
jmp
sahf
jmp
enter
jo
mov
jb
outsb
or
xlat
dec
add
das
mov
sub
jae
inc
test
xor
adc
jb
and
imul
ja
sbb
out
push
jg
test
nop
fdivrs
push
sub
jl
xor
stos
add
cmpl
movsb
mov
scas
pop
inc
je
addr16
cs
pop
lods
ficompl
ret
lods
add
add
cmp
push
aaa
pushf
and
xchg
test
and
mov
add
push
hlt
jne
pop
fldl
mov
jmp
jo
out
sub
adc
lods
ljmp
cmpsb
cs
in
add
fstpl
outsl
mov
xor
inc
in
mov
repz
mov
push
stos
fldt
jbe
adc
shrl
in
inc
cmp
aam
hlt
jnp
clc
cmc
pop
sub
int
test
xchg
addr16
jns
mov
mov
out
movsl
sbbl
push
pop
xlat
fstpt
jmp
mov
repnz
mov
ret
sub
mov
and
lods
rcrb
gs
sub
mov
addr16
repz
stc
negb
shrb
cmp
sbb
and
add
mov
xchg
sbb
fnstenv
out
xchg
mov
and
mov
xchg
fcoml
pop
adc
imulb
xchg
cltd
cmpsb
div
addb
dec
out
mov
pop
xlat
jp
test
mov
pop
sbb
inc
xchg
mov
test
subb
push
mov
add
insb
pop
cmp
mov
sbb
rorl
test
pusha
out
lcall
cmp
ret
insb
cltd
lahf
lcall
cmpsl
in
aaa
cmp
clc
fisubl
cmpsl
sbb
test
lret
xchg
jns
add
adcl
cmp
dec
xor
jl
jp
int
mov
cmc
mov
xchg
sub
push
imul
dec
mov
cwtl
sbb
xchg
popl
icebp
mov
push
mov
cmp
push
aaa
lcall
mov
mov
dec
xlat
js
lds
push
push
imul
cmp
aas
in
imul
repnz
dec
sbb
jae
ficompl
cmc
push
push
popa
out
and
xchg
shl
lea
cs
js
pop
push
or
or
and
adc
jl
clc
daa
xchg
mov
push
cmpsl
push
mov
subb
cmp
fstl
cmp
mov
dec
flds
rclb
jb
insl
pop
fstpl
pop
mov
std
scas
shlb
fs
push
pop
ficoml
ljmp
xchg
fsubrs
cmp
mov
mov
lds
mov
inc
and
mov
xchg
xchg
push
mov
repz
or
rcrb
push
jg
push
mov
jle
pop
adc
or
lahf
dec
fcmovb
xor
aad
fcomps
sub
mov
pop
insb
cmpb
sbb
inc
push
ss
jae
scas
lahf
enter
add
xorb
lds
add
mov
and
jbe
sub
sub
xor
xchg
push
in
sbb
mov
xchg
sbb
mov
xor
pop
and
gs
adc
insl
movsb
jmp
mov
cmp
add
cmpsl
or
out
mov
movsl
mov
mov
mov
jmp
or
pushf
pusha
xchg
cmp
dec
xchg
inc
fnstenv
into
out
jno
out
roll
lods
popf
out
mov
xchg
nop
push
cmp
add
xor
sbb
jo
mov
inc
push
imul
clc
jno
lcall
andl
aaa
sub
movsl
imul
icebp
add
ficoml
in
pusha
add
fidivs
cmp
imul
test
mov
mov
mov
out
mov
or
loopne
push
push
cmp
and
mov
mov
pop
sbb
push
pop
xchg
push
xchg
stos
jne
xchg
aad
inc
inc
add
xchg
inc
and
jmp
lods
xor
jp
cmp
mov
push
mov
jae
stos
mov
xchg
pop
dec
dec
inc
or
leave
insb
adc
sub
mov
and
stos
fiadds
cmp
icebp
repz
mov
xlat
push
scas
add
lock
mov
xor
dec
movsl
xchg
jae
nop
enter
rcll
inc
aas
xorl
adc
cmc
pushf
xchg
mov
outsb
out
inc
out
sbb
jbe
dec
icebp
xor
cld
ss
inc
cmpsb
mov
frstor
daa
mov
or
bound
cmp
xchg
jl
adc
fs
mov
loop
and
and
test
mov
cmp
jb
lea
imul
jle,pn
out
clc
and
pop
data16
pop
sbb
push
fwait
enter
mov
xchg
inc
aas
mov
mov
arpl
adc
push
jg
add
icebp
fisubrs
dec
push
leave
xorb
in
insb
je
pop
mov
push
pop
loop
add
push
add
mov
inc
int
xchg
loop
mov
jno
sub
jae
mov
push
push
push
xchg
add
shlb
add
leave
mov
push
rorb
ficomps
add
jg
sbb
das
jne
fdiv
in
inc
push
imul
dec
jmp
orl
sbb
test
decb
cmc
sarb
ret
addr16
push
movsb
pusha
or
icebp
test
mov
clc
xor
mov
jp
loope
cmp
ret
fsubrl
add
sub
xor
cmpsl
sub
and
push
sar
fisubs
int
lea
sbb
out
clc
je
hlt
push
loop
push
das
mov
aad
mov
dec
repnz
into
sahf
std
mov
fildl
fimull
aad
cvttps2pi
lahf
mov
int3
in
out
in
mov
imul
mov
lds
rol
popf
dec
inc
notl
in
popf
xchg
stc
fildll
pusha
icebp
or
lds
gs
pop
in
stos
jbe
int
push
jns
push
xor
sarb
mov
xor
push
movsb
adc
push
add
sub
sub
push
shlb
popf
out
ror
dec
icebp
fsts
popf
xor
lods
fdivs
addr16
aaa
sbb
dec
stos
adc
mov
push
fcmove
loop
enter
movsl
andb
daa
dec
inc
mov
jae
daa
cld
fwait
dec
addr16
pop
out
cld
imul
outsb
mov
dec
inc
jp
popa
lds
inc
inc
and
jns
daa
int3
repz
mov
sbb
sahf
iret
xchg
xor
clc
push
push
add
add
es
mov
xchg
sub
sub
mov
test
cli
jbe
mov
fidivl
iret
dec
sbb
adc
mov
cvtps2pi
pop
dec
fadds
ds
aaa
aad
subb
mov
xor
mov
xchg
imul
ficoml
push
pop
mov
ret
dec
mov
sub
sar
ja
mulb
push
pop
cmp
and
push
push
push
lods
lcall
popf
sbb
push
addr16
pop
pushf
cmp
jl
mov
stc
jle
outsl
and
add
pop
add
aaa
int3
xchg
jae
and
repnz
adc
shll
adc
jmp
mov
add
jbe
sub
cltd
dec
lretw
nop
fsubs
dec
ficoml
clc
shr
je
aad
ss
in
sbb
push
mov
jb
jle
enter
int
or
loope
in
pop
adc
es
test
data16
std
loop
adc
data16
ss
adcb
jmp
ret
cltd
mov
jge
clc
pop
mov
jne
out
nop
or
mov
in
and
inc
mov
inc
in
lds
insl
jecxz
cli
je
paddw
pmullw
iret
xchg
pop
aad
cmp
ret
fisubrs
mov
andl
nop
stos
scas
testb
mov
cmpb
ds
aaa
lods
jbe
sbb
jne
xlat
push
mov
sub
outsb
addb
sarl
jns
mov
mov
mov
xlat
xor
insb
add
out
clc
add
push
and
dec
jg
roll
inc
mov
or
int3
sbb
push
mov
int3
aam
out
xor
jno
dec
mov
cmp
popf
dec
loop
xor
daa
repz
ret
out
dec
pop
pop
fdivrs
cmp
aaa
divl
andb
jg
mulb
mov
dec
push
push
jno
jmp
dec
cmp
push
icebp
inc
or
fs
rcrl
test
outsl
out
inc
push
push
aas
shl
mov
pop
addl
rcrb
mov
fisttps
mov
add
cwtl
rclb
scas
pop
mov
adc
test
into
nop
cmp
add
jnp
or
xchg
int
xor
lds
add
jne
lods
pop
leave
dec
push
push
push
dec
outsl
in
fisttpl
movsl
mov
scas
mov
rclb
bound
xchg
sti
rorl
std
jo
xchg
ljmp
movsl
test
movsb
push
xchg
in
stos
popf
jae
or
push
out
pop
mov
mov
pop
inc
dec
test
mov
lea
mov
je
les
mov
stos
mov
in
es
fildl
push
lcall
loop
jns
stos
ds
cwtl
push
jns
fstps
out
inc
mov
sub
and
xor
xchg
adc
fcmovnb
adc
leave
pop
sub
imul
pusha
cmp
sahf
and
sbb
pop
xchg
ffreep
ss
insb
icebp
pop
mov
and
outsb
pusha
pop
add
shlb
mov
ror
cmp
push
fcmovu
mov
pushf
dec
movsl
fwait
inc
jo
sbb
pop
inc
clc
movsl
push
sti
mov
sbbb
mov
sbb
xchg
add
dec
and
sti
inc
xor
xchg
pop
dec
mov
or
cmpsl
loope
or
stc
test
insb
cmp
js
xor
enter
mov
filds
mov
mov
or
cmpsl
jnp
xchg
mov
mov
mov
out
cmp
pushf
ror
mov
and
jno
jmp
lret
adc
pop
push
outsl
xchg
push
sarl
test
insl
mov
in
mov
xchg
mov
mov
mov
clc
nop
int
mov
cmp
loop
jno
dec
dec
push
and
adc
rolb
pop
xchg
ret
movsl
adc
mov
mov
scas
mov
iret
jmp
mov
scas
fnsave
sbb
mov
aaa
frndint
xor
pop
outsl
div
mov
adcb
mov
push
pop
mov
jp
inc
mov
pop
mov
pop
adc
sti
mov
imul
push
repz
fs
orl
in
test
xchg
push
xchg
ljmp
mov
xor
adc
or
iret
jns
ds
inc
lods
daa
or
or
pop
jmp
pmullw
fsts
loope
xchg
pusha
adc
xor
fdivrs
in
js
aas
add
lret
into
test
xchg
out
ljmp
lret
cmpl
mov
call
daa
mov
add
jecxz
jecxz
rorl
es
mov
mov
mov
dec
cwtl
rorb
dec
mov
jmp
in
test
inc
mov
std
dec
neg
mov
rorb
outsl
test
mov
rcrl
jns
jmp
dec
sub
fistps
pusha
je
mov
dec
mov
add
in
idivl
mov
mov
jb
mov
call
pop
hlt
ljmp
call
outsb
outsb
gs
mov
and
test
adc
jnp
add
mov
xorl
daa
cmpl
dec
jecxz
lods
loope
jecxz
cmpsb
push
lods
pop
pop
mov
inc
adc
xor
test
ds
push
cmp
jp
popf
out
aad
faddl
mov
das
jae
aam
outsb
popf
jmp
xor
pushf
dec
rcl
mov
test
xchg
test
pushf
sub
mov
cli
repnz
movsb
xlat
lret
mov
push
xor
loopne
mov
ficomps
xor
cmp
cs
mov
push
cmp
out
push
cmp
pop
daa
rcll
jp
out
push
inc
pop
jnp
jo
clc
arpl
jae
mov
add
adc
pop
sbb
jg
test
xor
bound
icebp
ret
stos
icebp
iret
xor
dec
flds
inc
jb
shll
xor
xor
mov
ljmp
fldcw
mov
int
and
sub
sbb
push
push
arpl
mov
jne
test
ficoms
push
xor
jmp
jg
mov
cmp
cmp
push
and
push
cmp
dec
fdivs
and
call
dec
inc
xchg
jb
icebp
addr16
in
ret
aam
push
sub
ljmp
gs
or
cld
add
lods
mov
fs
sbb
fnsave
icebp
aas
push
fmuls
add
jg
jo
pop
lcall
lock
cmp
or
int
into
xor
lock
bound
movsb
hlt
mov
pop
fildl
xchg
xchg
push
sub
lods
in
or
arpl
fbld
push
inc
fbld
inc
dec
or
xchg
jmp
mov
dec
sar
add
xlat
ja
xchg
mov
cmp
aam
push
loopne
and
jg
shrl
pop
dec
jl
jmp
shl
popf
aaa
std
repz
cwtl
call
pop
fdivl
dec
lret
sub
dec
cmc
loopne
in
push
mov
push
inc
mov
loope
enter
lcall
mov
mov
loope
les
lret
test
daa
ds
mov
out
push
xchg
and
enter
pop
push
or
test
push
dec
insb
adc
idiv
add
repz
jle
sbb
cltd
les
xchg
mov
mov
rep
push
pop
push
sti
dec
xor
shlb
xor
and
xor
sarb
test
lea
sbb
xchg
fst
inc
arpl
lods
cmc
in
xor
loopne
mov
add
push
scas
shlb
add
imul
std
adc
aas
aam
mov
xor
xchg
and
loopne
inc
push
aam
xchg
mov
rcpps
and
jge
hlt
or
mov
aam
add
dec
out
push
add
fwait
cmp
push
stc
mov
ljmp
pop
xchg
mov
lea
and
insb
andb
ficompl
fbstp
icebp
iret
scas
data16
push
iret
movsb
shlb
in
xchg
push
scas
das
test
mov
pop
dec
in
mov
cmpsl
mov
fstpt
pop
ja
pop
ret
dec
ss
mov
jno
ret
dec
pop
lcall
rcrl
xchg
pop
push
call
mov
dec
push
out
push
or
in
xchg
sbbb
lods
push
mov
xor
ja
fsubrs
pop
dec
jns
or
or
sbb
sub
mov
fstl
adc
popa
ljmp
inc
fdivr
add
add
stos
movsl
cmp
lea
in
mov
cmp
add
cmp
jecxz
jg
inc
hlt
lods
adc
iret
into
add
xor
mov
loop
push
dec
stc
cmp
rcrl
xchg
test
int3
ret
push
and
in
jae
lret
leave
and
mov
jo
enter
fimuls
cmp
mov
push
jl
and
out
daa
je
and
mov
push
sarl
imul
iret
sub
or
std
xchg
lahf
ljmp
inc
sub
dec
cmc
jb
cmovne
rorl
outsb
push
pop
and
imul
mov
jmp
push
xchg
lock
mov
lods
jl
mov
xchg
cli
push
call
adc
std
aad
rclb
dec
adc
fdivrl
xor
push
and
sarb
out
idivb
and
je
pop
mov
push
call
outsl
outsb
jge
pop
mov
fcoml
mov
out
xchg
bound
movsl
dec
imul
fimuls
orl
icebp
loop
lret
add
pop
dec
dec
imul
jae
bound
add
cmp
ror
insb
pop
cmp
inc
cmp
jle
lds
dec
inc
mov
ret
insb
gs
pop
xchg
mov
xor
shl
fcoms
xor
outsb
add
or
sarb
push
dec
jbe
mov
lcall
out
adc
adc
loop
shlb
aad
test
fs
lock
xor
lcall
adc
sub
sahf
aad
push
aas
xchg
mov
mov
pushf
mov
inc
jle
popa
enter
jno
mov
mov
pop
cld
dec
stos
iret
mov
rclb
addr16
hlt
dec
add
ds
mov
test
pop
inc
imull
mov
nop
push
push
in
enter
mov
add
nop
or
pop
movb
mov
aas
and
subl
lods
aad
xchg
clc
jle
cmp
inc
cmpsb
into
incb
ret
inc
fstl
cmp
cmovs
push
ds
nop
mov
jg
cmc
mov
jb
fisubs
push
test
push
imull
out
add
frstor
or
pop
or
imul
xorl
adcl
cltd
scas
mov
xchg
int
push
stos
insb
xchg
sarb
mov
xchg
push
mov
push
add
jecxz
out
jno
ret
cmp
int
cmc
ficomps
mov
or
movsb
mov
sub
pop
xor
mov
jle
mov
pminub
add
xchg
fimull
and
shl
inc
add
cld
and
inc
js
dec
lods
xchg
shr
jg
xchg
mov
enter
mov
js
jae
push
mov
movsb
mov
movq
test
fwait
or
push
xchg
aas
sbb
inc
pop
mov
shll
xor
out
divb
mov
jle
pop
outsl
xchg
push
out
fisttpll
and
cmp
cmp
xor
cltd
test
pop
mov
mov
daa
stc
pop
das
repz
dec
outsl
notl
aas
ret
fs
cli
push
inc
arpl
mull
dec
jl
outsl
mov
sbb
je
lods
pusha
mov
jae
sbb
jmp
or
daa
pop
push
je
pop
mov
aad
mov
dec
adc
pop
repz
jbe
xchg
or
aad
dec
jae
ja
scas
arpl
pop
xchg
movsl
lods
sbb
mov
cmpsl
pop
stos
aad
notl
and
jg
xor
add
xor
scas
cli
stos
mov
std
cmpsb
sbb
mov
lea
loopne
mov
add
dec
gs
aad
add
and
dec
jbe
testb
bnd
pop
cmp
sbb
ficoml
xor
push
dec
jg
xor
mov
mov
push
push
mov
movsl
gs
pop
xchg
pop
dec
xchg
sub
add
push
mov
in
xor
mov
fisttps
cmpsl
imul
test
fdivl
pushf
dec
scas
dec
cmp
inc
fistl
adc
sbb
adc
sub
pop
cwtl
sub
mov
aad
inc
imul
cmp
insl
test
je
lret
decb
pop
lret
lret
test
or
nop
frstor
pop
je
cltd
lea
inc
mov
fs
sub
clc
push
rcrb
popf
es
scas
stc
lds
std
mov
aaa
stos
imul
std
lods
inc
jl
jl
inc
lea
dec
dec
pop
pusha
fcoms
mov
xor
adc
mov
sub
stos
imul
mov
fcmove
fisttpl
cmpsb
insl
shrl
in
push
mov
insl
mov
js
fcoms
popa
inc
xchg
mov
lcall
sub
sbb
jl
jecxz
and
push
aad
pusha
ljmp
sbb
adc
pop
pop
stc
rclb
mov
test
into
add
pushl
mov
call
lds
dec
xor
fisttps
mov
jbe
mov
pop
sahf
adc
lea
xchg
jge
adc
gs
out
lds
loop
lods
dec
test
loop
xchg
and
jns
push
cmpsb
mov
xorl
add
add
push
lcall
enter
pop
jle
movsb
push
mov
cmp
stos
in
dec
fstpt
xor
jns
sbb
lret
js
cmp
pop
clc
dec
jns
or
out
jbe
orl
popa
jle
cli
sbb
and
xor
inc
fsts
mov
xor
js
arpl
rcrl
cmp
pusha
ucomiss
mov
lea
xor
mov
mov
pop
stos
ljmp
adc
ficoms
int3
mov
dec
int
pop
inc
pop
add
pop
jmp
flds
cld
dec
cwtl
out
xlat
pushf
mov
popf
lcall
inc
pushf
or
lods
gs
int3
xor
inc
lahf
cmp
popa
mov
out
iret
fstpt
popf
repnz
fnsave
pop
jno
cmpsb
mov
sub
in
pop
mov
insl
add
pop
pop
mov
aam
mov
loop
inc
or
push
aam
orb
mov
jg
push
fisubs
sbb
lods
mov
sub
mov
xor
fistpl
vpsraw
aaa
mov
bound
loopne
addr16
insb
in
sub
and
and
pop
les
jnp
data16
dec
mov
cmp
xchg
xchg
push
out
or
add
or
mov
cmp
push
inc
fs
push
mov
test
pop
or
ret
out
sub
push
or
cmpsb
inc
sub
aad
pop
xchg
mov
fidivs
gs
sub
nop
movsl
or
add
sbb
movsb
push
scas
pop
mov
cmp
xor
outsl
pop
enter
push
dec
add
cmp
inc
popa
dec
mov
xor
push
cli
add
or
xor
xor
testb
and
pop
adc
popf
dec
push
add
jg
notb
mov
add
mov
andl
push
and
pop
jb
adc
mov
repz
push
mov
xchg
dec
ljmp
push
add
lods
cmp
inc
add
adc
adc
aaa
cmp
cltd
xchg
xchg
sbbb
mov
jmp
lock
frstor
sub
lret
repnz
into
inc
scas
add
push
pop
sub
imul
xor
ficomps
cs
in
cld
xlat
mov
into
mov
and
dec
jecxz
sbb
cmp
xchg
lock
pop
mov
rorl
aas
push
add
cmpsl
dec
lods
or
mov
pop
imul
cmpb
repz
out
addl
mov
jne
fs
inc
adc
cmpsl
push
dec
xchg
mov
aas
into
jne
add
xor
jbe
mov
test
lea
lea
pushf
leave
mov
fs
jmp
test
lcall
sub
sub
fidivrs
sub
ret
pop
xor
pusha
mov
outsb
xchg
add
int3
arpl
pop
fldt
fucomp
cltd
clc
sbb
ljmp
push
cld
data16
clc
mov
or
sub
fs
xchg
lock
mov
stos
leave
adc
mov
incb
add
aam
scas
stos
subl
mulb
sub
sahf
push
in
sub
ljmp
dec
daa
mov
lds
cs
in
ret
xchg
addr16
add
xchg
sbb
mov
fnstsw
sbb
mov
sub
xchg
sub
cmp
out
lock
cmpsl
out
add
or
xchg
je
cmp
xorb
jge
or
addr16
bt
loopne
push
mov
mov
adc
fiaddl
sbb
shlb
in
push
andb
imul
or
sbb
cs
inc
daa
mov
clc
push
dec
sbb
push
sub
int
push
push
negb
add
lahf
fsubr
in
push
mov
cmp
das
es
push
mov
icebp
jg
rcr
push
adc
mov
imul
mov
xchg
dec
push
scas
fstpl
jecxz
cli
testb
or
inc
pop
and
push
inc
dec
push
in
negl
push
call
mov
sub
mov
inc
mov
cmp
dec
mov
imul
arpl
gs
pop
sti
or
adc
jnp
bound
ljmp
mov
aam
mov
jbe
or
aam
xor
sbb
ficomps
pop
int
sbb
mov
sub
ljmp
les
mov
mov
in
xchg
mov
test
cmp
or
outsl
mov
xlat
scas
cmp
xchg
mov
test
and
jbe
jecxz
scas
negl
inc
call
es
call
clc
ret
icebp
mov
add
ds
test
xchg
ss
addr16
fsqrt
push
push
enter
mov
pop
mov
shrl
jle
lret
repz
inc
cmpsl
jp
aad
shr
stc
inc
xor
push
in
arpl
lret
test
ds
lods
dec
inc
jl
dec
jb
xchg
fidivs
icebp
shl
sahf
dec
mov
and
enter
movsb
pop
sbbl
fwait
jmp
xor
add
jle
sbb
aaa
loop
inc
insb
mov
jmp
jmp
push
cmpsb
hlt
fcomps
pop
ret
stos
mov
pop
xor
pop
sbb
iret
orl
leave
mov
scas
ret
mov
or
imul
push
adc
ss
sbb
xchg
sbb
xor
mov
xor
sub
loop
leave
or
pop
mov
xchg
adc
dec
shlb
push
orl
clc
mov
dec
mov
sub
in
repz
mov
addr16
inc
xchg
fadds
nop
mov
popa
push
cmp
dec
add
adc
or
jbe
pop
mov
pop
dec
aas
inc
es
xor
ja
insb
fdivrs
dec
dec
fs
adc
add
jp
es
mov
divl
pop
adc
cltd
outsl
inc
imul
and
cmp
sub
push
cmc
mov
adc
daa
ljmp
mov
fiaddl
loop
jmp
mov
add
jb
mov
fnstsw
and
mov
lret
inc
add
sbb
or
mov
mov
jecxz
mov
ljmp
rcrb
add
adc
and
sub
fs
mov
sub
inc
int
loopne
inc
pop
out
pop
ljmp
jmp
incb
cmp
add
push
je
insb
push
leave
nop
lock
fwait
or
xor
xchg
xchg
lds
rcr
loope
loopne
cltd
mov
into
mov
push
ret
jae
imul
push
mov
ror
cmpsl
jb
mov
add
cmp
lods
push
cmpsb
mov
shl
mov
lods
repz
dec
loop
adc
rorl
push
stc
pop
jp
push
jg
jg
push
shll
mov
or
stos
jl
xchg
aad
movsl
mov
mov
add
cld
jno
mov
orb
mov
mov
test
fwait
mov
pop
hlt
or
bound
das
jge
into
les
sub
and
es
mov
add
leave
push
pop
pop
xorl
rclb
lods
and
push
subb
nop
lcall
jb
repnz
pushf
xchg
xchg
dec
xchg
bound
sub
fldt
cmc
cs
and
mov
sub
mov
jns
fcmovnb
aad
mov
push
mov
fdivrp
inc
inc
imul
xchg
jge
dec
jnp
imul
xchg
aas
mov
gs
inc
pop
sub
pop
push
in
mov
int3
pop
inc
inc
mov
pop
or
cmpsb
cli
repnz
outsl
bound
xor
aas
movsb
mov
mov
xlat
gs
dec
stos
push
jge
cmp
xchg
sub
cmpsb
movsb
dec
mov
mov
push
shlb
pop
test
filds
or
inc
clc
into
add
mov
mov
cmpsb
lds
nop
pop
sarb
cmp
adc
sbb
scas
cmpsl
imul
sahf
mov
mov
or
std
fnsave
fistl
fwait
xchg
xchg
xor
fdivrl
push
pusha
dec
lea
pop
adc
xor
cmpl
clc
ror
outsl
in
xchg
add
sub
popf
iret
adc
data16
xor
fnstenv
nop
iret
push
mov
leave
bndldx
movsb
int3
push
xor
mov
dec
mov
add
jmp
je
lea
mov
dec
xor
aaa
jg
cmp
mov
je
movsl
test
ja
iret
or
xchg
fistl
shl
lea
lods
pusha
inc
rcll
xor
jge
mov
mov
sub
fisubrl
lea
mov
sahf
pop
jo
aad
dec
pop
mov
out
andb
mov
adc
push
popf
add
adc
int3
and
jnp
jno
outsb
push
mov
aad
out
jnp
arpl
xchg
fwait
inc
gs
pop
cmp
fildll
xlat
push
and
call
ficoml
sahf
lods
inc
insl
clc
mov
push
ja
cmp
inc
xchg
dec
adc
daa
dec
sub
sub
loopne
ds
add
bound
xchg
clc
push
dec
sbb
testl
addr16
mov
or
imul
mov
test
cmpb
dec
mov
es
inc
mov
mov
sbbl
stc
in
fiaddl
outsb
enter
jg
sub
outsb
xlat
rcr
jle
sbb
or
and
mov
cltd
jle
bound
mov
imul
jnp
jbe
push
sbb
das
push
pop
inc
fmuls
mov
pop
aaa
xchg
xor
xchg
aas
jns
cmp
shlb
jle
fstp
or
lret
arpl
sub
inc
je
rclb
mov
pop
xor
sarb
fidivrl
out
sbb
into
pop
push
jbe
push
inc
scas
push
dec
pop
jecxz
out
sub
mov
mov
jb
jno
xor
arpl
les
int
xchg
shlb
mov
icebp
mov
inc
cmpsb
pusha
scas
add
fmuls
dec
fsub
test
jnp
sbb
sbb
adc
test
mov
jne
cmpsl
mov
adc
shl
jns
push
xchg
jno
dec
outsl
mov
jne
pop
adc
pop
adc
inc
mov
add
cmpl
pushf
iret
out
inc
aad
add
mov
in
loopne
into
fsubp
pop
ss
pop
ja
je
arpl
shrb
lret
cwtl
pop
xor
popa
xor
pop
jb
mov
jmp
push
lahf
dec
lods
iret
leave
test
faddl
fwait
ss
js
inc
loope
push
add
dec
push
icebp
sti
pop
cmpsb
lds
cmp
shl
cwtl
loope
lods
jg
lods
dec
sbb
dec
test
jg
push
outsb
jmp
sbb
mov
add
call
out
pop
pop
push
ret
jl
pop
fwait
mov
shll
mov
outsb
movsb
sbb
sbb
popa
ss
pusha
fwait
jae
scas
maskmovq
idivl
sbb
ret
mov
mov
jge
rorl
sub
add
jp
sahf
sahf
inc
stos
in
add
call
xchg
test
dec
lock
mov
popa
xchg
subl
scas
fstl
and
xlat
dec
sbbl
or
sbbb
pusha
push
add
inc
lahf
mov
loope
sbb
and
push
ficompl
push
mov
adcl
sahf
sub
and
mov
scas
lahf
std
push
jno
push
xchg
push
jl
xor
cld
or
pop
mov
shlb
loopne
test
lret
sbb
and
lcall
imul
fxsave
push
fwait
sub
push
push
add
pop
mov
mov
arpl
dec
ret
mov
xchg
std
pop
fldenv
pop
gs
push
scas
cli
mov
mov
jne
dec
jmp
divb
or
fwait
xor
fnstsw
sarb
outsb
jb
js
sub
aad
test
sub
ror
xchg
in
idiv
pop
pop
fcmove
arpl
pop
mov
int
ds
pop
jae
xchg
in
pop
outsl
lods
mov
jecxz
sbb
and
mov
jne
and
cli
jno
fldcw
aam
stos
dec
fimuls
in
pop
outsb
push
pop
pop
jno
icebp
lea
mov
inc
pop
movlhps
outsb
pop
orb
incl
gs
fstpt
cmp
inc
push
pusha
clc
subb
jmp
sbb
adc
arpl
jle
cmp
loope
pop
test
add
stos
or
dec
sahf
fwait
and
inc
mov
push
das
cmp
les
enter
aad
push
pushl
mov
dec
js
pop
push
ret
add
sub
mov
pop
pop
mov
dec
pushf
inc
pop
mov
hlt
sub
mov
add
out
aam
mov
and
ret
adc
push
adc
push
push
xchg
je
sub
push
shrb
mov
fcompl
or
push
pop
mov
dec
loop
lock
icebp
subl
dec
stc
xlat
sbb
pop
fistpll
mov
insl
fdivrl
aad
jmp
les
jge
and
sarb
jg
mov
sbb
add
int
sub
jge
push
pop
xchg
aad
adc
stos
jle
loopne
aas
in
repz
std
mov
mov
pushf
dec
fs
fwait
jb
hlt
dec
jge
movsl
push
mov
rcrl
mov
sbb
or
mov
xchg
cmp
or
addr16
or
xor
pop
and
das
cwtl
sbb
or
xor
jge
xorb
test
mov
movsl
push
shlb
or
loopne
aam
jae
daa
dec
in
in
shlb
das
cmp
push
sub
loop
incb
fsts
ja
mov
and
inc
out
mov
fsubrs
js
repnz
aas
dec
fisubs
jecxz
test
dec
sbb
pop
mov
repz
aas
dec
or
scas
fsubrl
jns
mov
mov
outsb
ret
gs
xchg
inc
adc
bound
dec
and
and
mov
and
xchg
sub
and
sarb
mov
pop
mov
ror
dec
fidivl
mov
enter
mov
xor
cli
iret
push
fcomi
xor
outsl
pop
jg
adc
fldenv
addb
jae
or
xorb
fdivs
hlt
sti
scas
jp
add
jo
notl
or
sbb
xlat
pop
dec
add
dec
bound
mov
aam
out
call
and
repz
loope
insb
sub
sbb
rorb
jb
inc
add
push
sbb
adcl
xlat
inc
pop
inc
push
loope
addr16
cmp
jmp
inc
es
les
sbb
es
test
adc
aaa
int
imul
js
mov
es
into
dec
xchg
jge
mov
pop
lea
mov
lcall
insb
repnz
gs
pop
ja
stos
adc
leave
jecxz
fmull
stos
repnz
stos
cwtl
lock
jbe
loope
lds
pop
iret
sub
aad
fstps
rcrl
sbbl
fs
dec
mov
add
push
xor
out
xchg
sbb
mov
push
out
push
out
mov
mov
dec
push
push
insb
dec
xchg
inc
dec
mov
out
xchg
pop
inc
mov
mov
pop
pushf
aam
movsb
dec
push
jge
je
das
test
insb
fcmovnbe
gs
fnsave
mov
cld
scas
inc
loop
aas
scas
add
mov
pop
mov
sbb
jns
out
aas
popa
mov
cmp
pusha
ss
in
xchg
push
cltd
loope
lcall
jge
xlat
out
xor
les
push
cmpsb
jae
fsubrl
rcr
dec
pop
jge
sti
aad
gs
push
jbe
adc
flds
fdivs
add
sbb
inc
sbb
movsl
xchg
jle
mov
dec
sub
ret
adc
sub
xchg
jmp
and
cmc
ret
and
jbe
das
sti
inc
dec
push
fwait
adc
or
stos
test
mov
fidivrs
nop
fildl
iret
fwait
loopne
pop
sahf
mov
icebp
int3
mov
mov
aas
jg
aaa
cmpl
in
push
out
leave
or
mov
mov
pop
fwait
add
adc
daa
mov
and
pop
pop
popf
push
ret
ljmp
das
movsl
mov
fs
rcll
add
mov
inc
push
and
aaa
test
pop
xchg
lcall
xchg
mul
je
inc
xor
int3
dec
xchg
aam
js
or
into
rcl
inc
mov
cmp
add
data16
adc
jecxz
enter
pop
dec
lcall
mov
sub
imul
push
icebp
into
cmp
repz
mov
insb
pop
add
fistl
jo
sub
inc
cs
pop
dec
lret
cmp
lods
pop
dec
dec
xchg
pop
mov
arpl
in
jb
pop
xchg
ss
xchg
push
repnz
int
lcall
jb
lods
cli
xor
int3
mov
adc
rcrb
xchg
scas
xchg
call
imul
movl
dec
or
mov
das
pop
or
mov
mov
mov
loopne
outsb
iret
mov
mov
es
fcoms
pusha
jbe
popf
inc
sub
pop
mov
mov
xchg
nop
rcll
xor
dec
and
mov
adc
jle
outsl
cmp
leave
in
xor
nop
xchg
cs
sbb
mov
mov
pop
lods
sub
enter
and
scas
add
mov
daa
cld
dec
loope
sarb
cmp
xor
fdivs
xor
in
push
sub
jne
mov
adc
shll
push
lea
fwait
insb
mov
cmpsb
mov
or
dec
mov
movsl
into
mov
out
mov
into
orl
orb
sub
pop
aam
mov
int3
xor
inc
xchg
and
pop
lods
pop
jno
cld
ds
dec
push
in
fiaddl
and
call
rol
adc
xchg
and
mov
test
imull
jg
popf
jg
add
xchg
dec
mov
test
cwtl
inc
mov
jno
stos
std
cmp
adc
cli
mov
add
cmpsb
je
pop
lds
into
add
fstl
enter
mov
jl
dec
in
xchg
push
outsl
add
xchg
cmp
lahf
inc
dec
push
imul
repnz
dec
sti
scas
push
leave
cmp
xchg
fdivs
push
std
mov
repnz
out
stos
shlb
jge
dec
mov
sbb
sub
mov
push
sbb
cltd
mov
mov
outsl
insb
mov
addl
mov
push
cmpsl
sub
push
lcall
and
mov
sarl
out
aam
xor
adc
orl
stc
xchg
das
out
leave
or
pop
lock
inc
mov
ret
mov
mov
push
or
and
mov
test
mov
mov
arpl
and
cmpsb
inc
xor
jmp
int3
adc
push
arpl
in
xchg
fs
fnsave
dec
sbb
aam
aas
ror
shl
inc
jns
pop
sub
sahf
mov
add
mov
xor
pop
or
mov
pop
mov
add
pop
mov
add
inc
pop
daa
sbb
std
popf
inc
sub
sub
xchg
les
mov
sbb
js
or
jno
push
mov
jne
flds
push
subb
idivl
sub
imul
ja
add
push
mov
mov
mov
and
dec
cld
pop
adc
xchg
mov
mov
and
cld
out
ss
mov
xchg
loop
lahf
subb
sub
imul
imul
std
pop
mov
pop
and
or
adc
ja
sbb
xlat
cltd
xchg
insb
lods
xor
lods
or
das
xor
int3
mov
fiadds
fdivs
es
mov
popf
loope
cli
mov
pushfw
imul
in
repnz
in
mov
sti
loopne
cltd
roll
in
pop
mov
jecxz
lahf
test
dec
fldl
mov
js
sbb
mov
dec
cmpb
push
push
xor
jl
mov
jnp
outsl
mov
mov
and
daa
enter
or
mov
lret
add
pop
js
imul
js
xlat
add
adc
dec
or
push
pushf
fs
sbb
mov
cmp
rolb
dec
mov
ficompl
jnp
cmp
adc
enter
sbb
icebp
dec
movsl
inc
jb
dec
xchg
lock
rcl
fs
jl
push
fucomip
inc
jns
pop
subb
xchg
sub
popa
js
rcrb
push
pop
rcr
mov
push
lret
pop
sbb
rolb
mov
mov
mov
ljmp
cmp
daa
push
sbb
out
sbb
popf
cmp
and
sbb
adc
ja
lahf
push
das
notb
enter
das
and
fbld
pop
fdivr
mov
scas
lret
push
subb
jecxz
inc
mulb
bound
or
les
scas
ret
aas
adc
cwtl
jbe
cmp
or
push
into
mov
cmp
xchg
ljmp
ret
repnz
sbb
sbb
push
into
xor
xor
jns
mov
fists
test
bound
add
sbb
imul
inc
leave
adc
push
imul
adc
data16
mov
and
cli
cwtl
jns
push
dec
les
adc
add
loopne
out
inc
cli
mov
push
dec
fldenv
pop
dec
std
hlt
lods
aas
outsl
scas
xchg
xor
adc
rolb
push
clc
loopne
xchg
mov
int3
pop
or
or
jge
push
in
int
mov
mov
icebp
mov
mov
in
sub
aas
or
fwait
jmp
in
adc
cmova
ret
arpl
sub
push
pusha
mov
ljmp
mov
cltd
in
jno
sub
fisubl
mov
repz
xchg
pusha
mov
inc
mov
push
in
repz
jne
in
mov
lds
cltd
or
cltd
lcall
push
cmp
aaa
bound
jb
loope
sub
fstl
push
xchg
or
cwtl
les
xor
jmp
and
add
add
lea
fisubs
push
cmpsb
mov
insb
dec
lcall
dec
mov
lea
ljmp
movsb
gs
out
mov
clc
xor
add
sbb
popa
or
in
sahf
and
push
data16
xrelease
iret
pop
pop
pop
dec
cli
sbb
adc
pop
cmpsb
enter
in
adc
and
fnstsw
in
or
scas
xchg
rep
jb
pusha
push
and
js
adcb
bound
xchg
test
sbb
mov
mov
inc
mov
adc
xor
push
cli
jne
pop
ja
xor
mov
jb
inc
movsb
jns
movsb
adc
stc
fcomi
fisubl
mov
xchg
cmpsb
popa
add
mov
jecxz
dec
mov
sub
jb
fwait
into
and
fistps
in
sub
outsb
lret
pop
mov
pop
sub
nop
sqrtps
dec
mov
imul
sbb
sbb
pop
jmp
jns
lds
push
jb
xorb
dec
ljmp
pusha
xchg
aam
xor
push
jae
mov
jp
and
mov
or
xchg
mov
sahf
loop
jne
xor
inc
mov
punpcklwd
sbb
dec
push
sbb
or
repnz
aad
mov
inc
push
inc
push
mov
ljmp
ja
inc
bound
cltd
aas
dec
jg
jns
inc
das
inc
xor
in
pop
ret
daa
dec
jl
stc
and
pop
dec
in
mov
nop
ret
imul
push
inc
pop
popf
idivb
push
mov
xor
into
and
adc
xchg
xchg
sub
pop
jp
cltd
cmp
dec
jae
ret
pop
in
shll
orb
scas
pusha
int3
cmpsb
leave
adc
jg
sbb
dec
fidivs
in
out
push
jg
jne
cmp
movsl
repz
jo
ljmp
mov
xchg
sbb
out
sahf
add
cmc
jl
pushf
sub
cld
mov
and
movsb
dec
in
push
insb
pop
cmc
and
shll
dec
jl
pop
pop
pop
ja
addb
push
cli
jl
fcomi
pop
xor
iret
or
mov
or
jge
data16
in
rcr
lret
outsl
cs
pop
push
sbb
out
push
dec
pop
stos
mov
rorb
mov
stc
mov
stc
pop
lea
xor
pop
xor
push
leave
mov
xchg
movsl
test
push
jnp
pop
fmuls
cmp
es
mov
out
push
xor
fildll
mov
pop
aam
shll
xor
imul
adc
inc
lret
jae
test
sbb
mov
mov
fisttps
push
mov
and
in
push
out
sub
cs
inc
mov
ljmp
iret
stc
mov
dec
xchg
insl
sbb
jl
into
in
lcall
addl
icebp
fstpt
lret
aad
insb
mov
idivl
jns
rolb
or
lods
into
ds
push
push
iret
idivb
into
dec
movsl
mov
in
je
sub
push
imul
inc
jmp
jle
adc
cltd
push
in
push
jle
and
dec
jmp
mov
clc
pop
fcmovu
add
xor
cmpsb
pop
insb
push
fcompl
xchg
mov
lcall
sti
jge
dec
enter
xor
push
xor
stc
sbb
mov
rolb
inc
ret
adc
jns
pop
pop
mov
xchg
aas
mov
cs
and
jmp
pop
pop
or
stos
xchg
xchg
adc
cmp
lods
aad
iret
ljmp
das
imul
inc
sub
sbb
ss
push
insl
inc
add
pop
dec
hlt
add
or
sub
and
mov
pop
dec
cmpsb
mov
add
xchg
jmp
xchg
enter
mov
inc
sub
imul
mov
xlat
push
sbb
loope
repnz
imul
mov
add
pop
jne
or
mov
test
orl
push
mov
in
sarb
lock
in
xchg
rcll
arpl
inc
add
xchg
xchg
or
sub
mov
loopne
lea
rcll
lea
xchg
sbb
xchg
mov
std
cltd
mov
jb
jg
pop
sub
jg
pop
sbb
and
stos
stos
sahf
mov
rcrb
mov
jnp
inc
dec
sbb
lds
rcrl
cmp
fistpl
dec
mov
and
xchg
pop
jle
mov
pop
or
movsb
lods
and
movl
in
add
hlt
sti
lds
xchg
pop
lods
fcoms
adc
mov
lods
rcl
cmovae
movsl
cmpsb
xchg
divl
add
adc
or
and
rorl
xchg
scas
fsubs
jb
jg
mov
xchg
jl
cli
les
pop
xchg
lcall
shrb
icebp
outsb
loop
js
push
mov
leave
andb
dec
sbb
mov
out
or
cmp
jae
leave
sbb
ljmp
and
insl
aad
fdiv
mov
pop
cmpsl
xchg
xchg
out
hlt
rclb
es
inc
nop
je
lock
adc
pop
push
push
loop
inc
cmp
cmpsl
add
or
inc
mov
rcrl
in
subl
jecxz
imul
inc
push
outsb
adc
sbb
push
into
push
loop
insl
ret
fisubs
jns
mov
aad
adc
cmp
sbb
js
lret
hlt
sub
aaa
ret
int
pop
mov
sub
dec
cwtl
mov
xchg
fcompl
lahf
sub
dec
loope
fistl
iret
cmp
sbb
adc
lds
mov
outsl
jmp
fildl
out
or
adc
cmp
sub
clc
ret
or
test
mov
jg
sub
or
push
cltd
dec
sub
mov
stos
mov
pop
jge
js
push
in
mov
sub
aaa
repnz
xor
fs
pop
test
cmp
pop
je
push
ret
ljmp
es
jae
test
xor
stos
mov
dec
lds
aam
movsb
push
repnz
mov
or
sub
or
sahf
push
jmp
sbb
jge
rclb
ja
inc
int
and
adc
sahf
jne
jl
xor
jecxz
fimull
pop
cwtl
rorl
xchg
repnz
push
addr16
imul
jnp
mov
aam
ret
mov
outsb
mov
cwtl
fcoml
and
adc
subb
movsb
lods
fmuls
jnp
or
pusha
jo
jle
into
xor
add
addr16
out
jo
sti
push
adc
mov
pop
unpckhps
mov
push
js
mov
lds
fwait
or
inc
das
iret
cltd
jecxz
lret
jp
and
push
adc
cli
jno
inc
jns
xor
js
rcll
dec
sub
movb
xor
mov
pop
dec
test
in
loop
jae
xchg
insl
xchg
and
ficompl
jge
lods
mov
sbb
cmp
lret
dec
dec
add
sbb
mov
jp
mov
mov
sub
pop
xchg
int3
adc
dec
and
lret
pusha
aad
or
cli
xchg
ss
decl
sbb
jecxz
cmp
sub
popa
sbb
dec
jmp
popa
loope
xchg
clc
pop
imul
repnz
in
call
and
dec
cmpsl
jae
vmovntps
push
mov
leave
cmpb
in
xor
mov
adc
cmp
into
addl
mov
mov
mov
mov
xchg
sbb
test
xor
outsb
daa
push
lret
in
sbb
dec
inc
andl
dec
xchg
mov
jp
hlt
cmp
repnz
jmp
data16
addl
nop
adc
fs
sub
sahf
jo
jmp
inc
cmp
lret
jmp
mov
pusha
xchg
sahf
xchg
pop
adcl
cltd
push
idivb
sbb
sub
jns
lahf
xadd
xchg
mov
aas
lods
dec
jno
or
dec
jmp
inc
dec
jns
mov
into
xor
cmp
mov
aam
jmp
pandn
mov
leave
inc
out
sub
mov
cmp
inc
inc
push
out
push
xor
iret
mov
sbb
in
xor
sub
xchg
jne
jmp
or
stos
sub
ljmp
insb
jmp
and
cmp
fistl
insb
mov
loop
inc
sub
push
push
into
shrb
out
subb
add
pushf
jbe
or
cwtl
mov
fildl
xor
sbb
dec
sub
or
adc
movsl
sbb
ss
shrl
mov
inc
cmp
jbe
sbb
adc
sbb
out
sub
or
sub
or
sti
inc
out
clc
lret
bound
aam
int3
ja
cmp
xor
lock
call
mov
mov
fs
cltd
mov
or
mov
jl
clc
and
xchg
rcrb
das
sub
cmp
fcomi
xlat
out
adc
iret
add
or
daa
inc
dec
clc
pop
push
out
xchg
dec
inc
scas
insb
push
daa
dec
pushf
pop
and
sub
and
pop
int3
mov
sbb
jmp
lock
addb
jp
lret
pop
push
sub
out
push
pusha
push
insb
cmp
add
pop
rcrb
push
adc
mov
pop
daa
sub
pop
ret
test
fmuls
dec
cltd
arpl
insb
and
testb
adc
in
mov
ljmp
pop
rclb
push
dec
leave
pop
jb
or
pusha
push
mov
lods
jae
les
cmp
cmp
cmp
pop
stc
clc
push
mov
xor
daa
dec
cmp
mov
xlat
push
inc
mov
out
mov
adc
call
lds
sbb
ljmp
inc
push
jnp
sbb
rcrb
lret
xchg
es
popl
adc
gs
sub
call
mov
sarl
ja
add
adc
test
jne
aas
ja
insl
adc
jo
cltd
aas
aam
cmpsb
aad
outsb
jno
mov
cmpsl
subl
mov
pop
repnz
lods
sahf
ret
sarb
cli
xlat
xchg
adc
push
cmp
sub
jmp
fisttpll
mov
icebp
xchg
outsl
xor
mov
inc
jb
sarl
pop
mov
insb
stos
bound
movsl
aaa
dec
movsl
sbb
addr16
xor
subb
pop
test
loopne
xchg
xchg
jbe
aad
insl
xor
inc
jecxz
test
jbe
adc
xor
inc
adc
std
inc
mov
pop
cmp
xor
js
inc
xchg
add
into
iret
negb
test
dec
jecxz
ds
xor
dec
loope
nop
sbb
sbb
cltd
sti
pop
dec
test
mov
xor
sti
push
icebp
and
js
out
out
loope
and
or
sti
xchg
pop
sbb
dec
push
mov
mov
scas
in
lea
pop
out
lock
test
fisttps
jge
dec
imul
jg
mov
aad
pop
jne
jne
inc
xchg
bound
cmp
enter
inc
jg
sub
xor
inc
out
aas
fs
mov
aas
pop
mov
imul
in
mov
mov
pop
mov
inc
imul
inc
dec
and
mov
and
pop
sti
mov
aaa
test
xor
sub
sahf
call
jl
fldt
test
out
hlt
jb
push
dec
popa
loopne
add
pusha
sbb
sbb
repnz
mov
mov
push
inc
inc
adc
push
add
add
enter
xor
sarb
shll
pop
dec
jb
cmpsl
pop
incb
push
shrl
cmc
jmp
push
xor
lods
adc
inc
mov
dec
test
fsubs
mov
jg
std
mov
jg
pop
imul
push
out
lods
in
lods
dec
icebp
inc
push
lea
lret
insb
pusha
push
jo
das
xchg
lahf
ljmp
mov
push
xchg
test
cmp
xor
cmp
mov
pushf
out
jb
fsubr
cwtl
push
insb
js
imul
mov
pusha
and
call
xor
repnz
lds
stos
mov
daa
pusha
adc
jecxz
das
je
call
sub
pop
xchg
pop
adc
movsl
out
add
mov
out
xor
add
push
lea
test
and
aam
das
dec
xchg
jnp
push
lret
xchg
loope
popa
push
addr16
inc
inc
clc
out
cmp
loope
xor
xchg
mov
aad
nop
jb
mov
movb
std
out
aas
xchg
sub
cmpsl
lock
push
subl
and
inc
jg
pop
lods
adc
cld
addr16
popa
push
adc
pop
stos
xchg
cmp
lret
mov
flds
adc
adc
dec
fcom
add
out
and
jmp
and
rorb
push
xchg
xchg
mov
testl
xchg
mov
aaa
arpl
cld
inc
lcall
lods
iret
out
push
subb
mov
mov
jecxz
dec
fistl
or
dec
fdivrp
xchg
rcll
scas
dec
sub
into
sub
mov
mov
test
test
bound
fcomps
jne
add
sbb
outsb
enter
sub
sbb
sbb
xchg
inc
cmpsl
dec
pop
sub
xor
push
ret
sub
test
in
push
mov
std
dec
cmp
in
jae
add
mov
fnstcw
cltd
outsl
and
popf
pop
adc
mov
insl
rclb
add
jle
mov
sbb
mov
dec
lahf
jmp
push
cmpsl
push
mov
and
es
cld
pop
cmp
jmp
clc
test
notb
cmc
sub
imull
jp
cs
cmp
in
mov
rclb
sub
xchg
lahf
movsl
and
jb
cmp
pushf
arpl
aam
popf
push
cmp
in
or
roll
pop
addb
ficompl
pop
daa
xchg
push
cmp
movsb
stc
in
scas
and
movsb
adc
push
lock
mov
inc
push
out
aas
fcmovnu
add
cmpsb
insb
stos
add
mov
packsswb
in
xchg
das
divw
cli
jp
cmp
testl
dec
shr
cmp
ret
in
cmp
xchg
in
sbb
jne
and
xor
cmp
mov
and
rorb
dec
jmp
scas
pusha
in
mov
lret
fs
pop
xor
mov
adc
adc
or
and
shlb
mov
das
iret
mov
lods
xor
jne
add
jle
xchg
mov
sarb
dec
test
jp
jmp
push
push
inc
aad
inc
pop
mov
aaa
pusha
jg
mov
mov
cltd
testl
jb
call
push
pop
xor
lods
adc
arpl
jo
and
and
jnp
pop
add
or
sbbl
insl
popf
push
inc
mov
call
lods
out
lcall
pop
aaa
jp
out
lods
add
mov
adc
sub
jo
push
sahf
sbb
adc
bnd
iret
out
xor
mov
not
cs
imul
push
or
call
insb
pop
loopne
clc
jo
test
cmp
push
cmpsb
out
jnp
sub
ror
add
mov
popf
jne
inc
fsubrl
shll
data16
or
sbb
clc
jmp
mov
mov
arpl
xorl
mov
stos
icebp
lods
add
mov
pop
stos
ja
pop
xchg
pop
or
or
ret
or
in
add
cltd
xlat
mov
add
pop
inc
pop
adc
xchg
stos
mov
sub
inc
jnp
jg
cmp
nop
jge
jecxz
mov
mov
xchg
stos
int
icebp
add
pop
pop
cmp
mov
jle
jb
scas
loop
lods
lcall
gs
and
sub
mov
add
fcompl
hlt
ss
jl
nop
mov
sub
ret
pop
cmp
ffree
shl
stos
sub
rcrb
cmpsl
mov
cmpsl
xor
jbe
cld
xor
sbb
dec
stos
addr16
inc
jle
popf
xchg
inc
jle
lock
xchg
and
cmp
scas
gs
ffree
out
icebp
les
scas
add
adc
mov
or
add
adc
xchg
psubsb
movsb
jne
popf
adc
dec
inc
pop
aas
xor
mulb
dec
lret
xchg
mov
mov
in
push
hlt
push
pop
mov
jo
test
jo
adc
int
les
decl
sub
in
push
jo
xchg
scas
inc
les
pushf
cmovbe
aas
icebp
out
xchg
add
mov
push
add
addl
ljmp
cltd
jl
aam
mov
mov
lcall
bnd
push
pop
xorl
repz
andb
adc
lea
sahf
adc
imul
pop
adc
call
das
xor
imul
gs
in
pushl
cld
ja
test
jle
mov
ds
test
and
adc
movsl
ds
sub
xchg
xlat
xchg
aas
cmp
and
lock
nop
int3
or
sbb
aaa
inc
leave
xchg
or
enter
in
lods
int3
test
and
fldenv
add
mov
jae
cwtl
fsubl
movsl
cmc
sbb
fsub
sub
cmpl
orb
mov
jbe
xor
popf
adc
inc
not
cmp
dec
mov
push
lret
push
aad
mov
lds
fdivr
jne
push
mov
movb
cltd
in
pusha
or
popf
xlat
lcall
cmp
jecxz
cmp
xlat
mov
sbb
cmpsb
fnstsw
insl
imul
shrb
fwait
dec
jmp
fisubl
dec
stos
dec
jmp
mov
lods
mov
aas
out
hlt
lea
cmp
adc
pop
push
lock
stos
test
xchg
xor
sbb
mov
sbb
jmp
subl
idivl
cmpsb
jle
fxch
sub
pop
or
cmp
aam
add
daa
xor
stc
rcrl
cmp
xacquire
cmpsl
push
lods
shrl
lds
jge
jnp
sbb
xor
out
lret
pop
rcrl
subb
push
pop
fldcw
jo
jns
inc
xor
imul
mov
cwtl
add
dec
xor
or
sub
das
jg
call
bound
jl
add
cmp
mov
out
roll
adc
sub
adc
adc
scas
fistl
loopne
pushf
sbb
or
aaa
jp
pusha
xor
sub
aas
xchg
or
mov
pop
mov
gs
fldenv
imul
frstor
imulb
cmp
ja
fnstcw
mov
or
int3
in
out
pop
xchg
mov
add
movsl
mov
call
sarb
loope
es
stos
mov
out
addr16
scas
icebp
hlt
xchg
bound
enter
adc
ds
sub
rolb
cmp
dec
xchg
fsubrl
in
cltd
sti
cmp
and
or
lret
mov
testb
outsb
xchg
cli
mov
sub
mov
add
les
mov
cwtl
pop
cmp
add
jecxz
adc
lret
ja
adc
aam
in
dec
aas
and
sub
stos
pop
jmp
cmpsb
xchg
cmp
ljmp
sbb
imul
lock
dec
adc
sti
cmp
fs
lods
iret
inc
jge
mov
in
inc
fldcw
mov
fwait
call
mov
leave
idivl
push
aaa
movsl
pop
inc
jne
adcl
mov
loop
lods
mov
push
lea
arpl
jg
jp
xlat
daa
rorb
jg
adc
and
fsubs
loop
and
adc
ret
pushf
in
pop
sbb
mov
ss
rcl
xchg
mov
iret
or
xchg
pop
andl
adc
mov
fdivrs
idivl
cmp
jnp
nop
out
cli
push
push
push
and
loope
push
out
andb
aad
sub
rcl
repnz
push
lds
orl
inc
inc
lahf
pop
pop
mov
hlt
dec
cmp
push
in
pop
xlat
outsb
aaa
mov
mov
add
and
ljmp
xor
xchg
inc
popf
movsl
push
dec
add
loope
jg
sub
mov
ja
fimuls
jp
shlb
xchg
mov
pop
xor
lret
sti
stc
pop
sub
test
fdivl
dec
add
rorb
cmp
adc
fidivs
cmp
stos
jmp
add
shl
fisttps
lock
aam
adc
push
adc
jb
mov
mov
fiadds
pop
inc
cmp
call
sub
xchg
sbb
push
or
es
adc
loopne
mov
mov
xchg
xchg
cli
and
sti
movsb
pop
mov
outsl
ds
mov
rorb
outsl
or
mov
adc
jnp
xchg
push
std
jb
and
shrb
fnstenv
into
aam
mov
mov
or
xchg
or
add
fstpt
xchg
je
adc
adc
mov
mov
cltd
dec
xor
push
mov
push
stos
pxor
mov
mov
mov
stos
dec
mov
cmp
enter
loop
cmpsb
mov
or
mov
pusha
fucomip
gs
popf
xorb
jbe
cmpsb
dec
and
fs
mov
mov
fwait
loop
cmpsb
insb
into
pop
lcall
fcomps
jge
dec
cmc
add
jo
fcmovne
stos
call
daa
mov
sbbl
cmpsb
cmp
sbb
add
or
enter
jno
xor
insb
sbb
push
sbb
stc
ljmp
xor
rclb
pushf
mov
or
jnp
mov
cmp
enter
enter
sbb
cmpb
out
xor
push
xor
mov
cld
dec
mov
push
mov
aad
sbb
mov
sub
or
je
imul
jge
pop
test
and
sub
aas
sbb
xchg
xchg
mov
out
sbb
cld
cmp
xor
sbb
jle
jmp
dec
int
mov
clc
mov
jo
test
add
enter
ficoms
mov
shl
movsl
dec
out
sahf
iret
fstl
inc
xorl
pop
bound
mov
mov
dec
lcall
push
test
xchg
loope
jns
dec
cmp
in
aaa
aam
add
insb
mov
xchg
mov
outsb
push
inc
mov
rcrb
and
bound
or
std
fists
sub
mov
lods
mov
hlt
pop
adc
xor
and
pop
mov
dec
sub
aam
mov
in
nop
je
adc
sar
cld
rcrl
popa
xchg
sub
inc
cli
dec
and
push
add
ja
jge
es
ss
mov
shl
xchg
and
mov
sbb
xchg
mov
push
push
push
negl
hlt
add
sbb
idivl
rolb
sbb
mov
adc
std
sbb
lret
push
cmp
cmp
dec
jno
and
add
jno
gs
mov
xchg
lea
push
sbb
ret
and
cmpsl
jns
in
and
mov
pop
jns
enter
fstps
cmpsl
inc
pop
inc
je
xchg
fcmovu
cmp
push
xchg
jmp
mov
sar
cs
dec
testb
push
inc
mov
pop
fs
pusha
inc
subb
jge
inc
ss
mov
push
outsb
es
in
adc
cmp
dec
icebp
stos
jo
mov
adc
cltd
jmp
jnp
scas
imul
ds
stc
lret
xchg
jne
push
decl
call
xchg
outsl
push
fbstp
out
pop
xchg
add
xchg
daa
mov
sub
dec
or
mov
pop
out
dec
push
add
jmp
adc
inc
es
jne
inc
add
scas
mov
mov
cmp
and
mov
les
add
inc
addr16
cld
adcb
fisttpll
mov
adc
pop
imul
jmp
test
mov
in
push
fidivs
das
test
ret
int3
loopne
lea
iret
cs
jp
sub
leave
push
loop
mov
stc
mov
repnz
fcmovb
dec
insb
add
or
lahf
repz
je
xchg
in
std
cli
pusha
cmp
or
and
aaa
in
mov
notl
aaa
mov
dec
jo
sub
xchg
push
jg
stos
xchg
mov
xor
xor
iret
xchg
jp
adc
mov
add
cmp
jle
repnz
icebp
stos
mov
roll
cld
adc
mov
or
movsb
outsb
lret
dec
push
in
sarb
rclb
daa
or
idivb
xchg
and
mov
mov
jne
ja
sbb
mov
mov
and
je
aas
lret
or
hlt
movsl
pop
pop
jl
fnstcw
fisubrl
jns
pop
pop
xlat
lods
or
loope
lret
and
sbb
lea
idiv
adc
sbb
lea
pushf
arpl
xchg
cmp
cmp
scas
mov
and
popa
sub
hlt
adc
orb
push
int
aaa
adc
stos
push
mov
clc
mov
xchg
es
xchg
xor
aad
and
pusha
mov
call
ja
fnstenv
lods
gs
imul
cmc
mov
adcb
and
mov
ja
movsl
add
or
enter
sbb
cmc
cld
xchg
mov
in
xchg
xor
ficoms
xchg
icebp
push
stos
mov
insb
and
or
adc
call
sti
add
mov
sub
or
mov
sbb
out
addr16
mov
outsb
jmp
jg
jl
fdiv
push
ficoml
pop
outsb
sub
lods
xor
pop
clc
lcall
mov
push
add
push
mov
push
ljmp
cmp
and
dec
dec
inc
data16
jmp
repnz
dec
fisttps
fdivl
inc
out
push
inc
test
pop
dec
or
dec
subl
cmpb
imul
pop
adc
mov
cltd
into
imul
in
sbb
imul
repnz
in
and
int3
adc
dec
js
add
test
push
movsl
mov
lret
jl
xchg
lds
and
pop
add
ret
mov
add
jbe
out
and
inc
and
xor
sub
lods
fldt
push
inc
add
addl
mov
or
test
mov
movsl
jnp
xchg
stos
icebp
cmp
sub
cwtl
out
lds
mov
push
lods
adc
inc
mov
inc
mov
ss
sbb
mov
push
je
mov
push
push
hlt
xor
push
sbb
js
xor
or
lock
cmp
lcall
in
scas
jl
fcoms
xor
daa
or
fsin
and
mov
jnp
adc
dec
dec
sub
out
xchg
mov
outsl
in
xor
shr
jmp
xchg
cmpsl
fmul
stc
pop
popf
xchg
in
inc
aam
pushf
lret
lods
into
mov
cmp
jnp
jl
sbb
cmp
call
sub
call
xchg
leave
out
mov
xchg
hlt
or
xor
cmp
jmp
sbb
dec
adc
xchg
push
pop
mov
lods
push
xor
leave
xchg
add
dec
mov
mov
test
push
pop
mov
sub
sub
xchg
popa
jns
je
jmp
dec
cwtd
xchg
je
out
cmpl
roll
in
mov
dec
aam
scas
or
in
add
mov
lcall
loopne
int3
out
mov
dec
and
dec
das
pop
fs
add
xor
xor
jb
xchg
sahf
les
stc
cmc
pop
in
add
std
js
jnp
out
mov
imul
sbb
stos
insl
inc
dec
imul
xchg
or
cmp
mull
in
or
and
jbe
std
in
xchg
adc
jnp
cmc
pop
das
cmp
push
push
jnp
sbb
out
add
xchg
xor
sbb
fadds
adc
ljmp
adc
mov
dec
fs
out
in
sbb
jg
ficomps
lods
adc
test
jge
cmp
adc
mov
adc
mov
mov
sti
mov
jns
adc
xchg
ret
clc
orl
loopne
test
fs
dec
push
lock
andb
adc
pop
clc
cwtl
outsb
icebp
es
addr16
sub
fistpl
mov
or
inc
inc
lahf
xor
aas
lods
fwait
bound
sbb
dec
xchg
push
mov
sbb
cwtl
or
adcl
jge
or
sbb
and
roll
push
loopne
addl
jne
inc
push
aaa
call
imul
jmp
lock
cli
pushf
in
jle
add
or
call
stos
sub
inc
iret
mov
add
sbb
and
mov
cs
adc
mov
ss
repnz
int3
and
cld
mov
es
or
clc
or
movl
fidivl
gs
loope
xchg
jecxz
pop
ja
push
shll
push
add
pusha
mov
mov
jge
xchg
mov
in
sbb
cmpsb
les
fwait
mov
mov
xor
cli
mov
push
mov
mov
xchg
andl
dec
xchg
imul
xor
fstps
inc
roll
cli
scas
xlat
xchg
enter
mov
jmp
filds
add
pop
icebp
ja
add
mov
repz
lods
fsubl
sbb
addb
adc
adc
xor
icebp
in
iret
mov
dec
xor
inc
fdivrp
xor
ja
les
ljmp
loopne
mov
cmp
inc
add
imul
cmp
data16
mov
mov
out
add
cli
xchg
popa
ja
ret
mov
jae
loope
mov
lret
sub
sub
fstpl
ret
dec
dec
je
jo
jge
mov
fnstenv
fdivrl
jne
loopne
mov
hlt
std
push
std
adc
in
push
mov
push
shlb
pop
mov
into
dec
pop
mov
xor
mov
adc
add
in
add
sti
cs
jge
adc
sarl
std
loop
and
inc
jl
mov
inc
jae
negl
inc
ja
push
adcb
into
inc
aas
jnp
insb
daa
push
mov
jns
cmp
xlat
subl
jecxz
mov
pop
xlat
je
xchg
bound
jb
fstl
dec
ret
sub
decb
dec
xor
out
bound
dec
cmp
add
jns
pushf
mov
outsl
arpl
fdivs
sub
fs
dec
push
es
and
xchg
push
outsb
mov
cltd
test
lahf
push
mov
pop
xor
jns
cs
xor
into
xor
lods
mov
and
push
btc
push
loope
dec
ss
in
jbe
lock
in
scas
mov
jecxz
aad
mov
mov
aaa
popf
adc
dec
test
lahf
add
movb
rcrl
popf
jnp
or
sarl
popa
dec
xchg
push
xchg
dec
outsl
sahf
inc
imul
nop
ljmp
add
stos
fsubl
ja
dec
cmp
or
cli
leave
xchg
aaa
xor
jp
xorb
les
fildll
mov
xchg
push
jbe
ret
ret
and
out
enter
insb
cmpsb
int3
mov
push
lock
jno
push
pop
cmp
mov
fists
cmp
inc
pop
sbb
adc
sahf
xor
pop
lea
fsubrp
jno
jg
add
or
pop
aas
add
stos
mov
push
in
or
xorb
mov
jmp
adc
cmc
sub
jmp
cld
cmp
push
dec
das
inc
movsl
jo
ret
insl
ljmp
adc
cmpsb
jle
test
fildl
imulb
add
xor
adc
pop
hlt
adc
fisttpl
push
cmc
nop
sbb
push
lahf
psllw
jmp
imul
pop
scas
xor
mov
xchg
repnz
insl
jbe
test
pop
fwait
dec
pop
xchg
hlt
sub
aaa
push
hlt
adc
ds
cmp
test
outsb
scas
shll
repnz
mov
outsb
inc
fbstp
dec
jb
mov
push
std
push
mov
xor
pop
pop
jp
movsb
out
pop
out
fnstcw
add
ret
test
adc
incb
mov
in
cltd
dec
adc
add
mull
lock
push
mov
int3
sub
sbb
pop
imul
shlb
cmp
in
or
imul
fucomi
push
in
sbb
jne
push
mov
pop
rclb
ret
add
repnz
lret
test
jp
pop
mov
xor
push
adc
inc
or
dec
lea
stc
push
movsb
ret
jle
cmp
scas
sub
ja
popa
mov
pop
xchg
adc
add
movsl
iret
sahf
cmp
inc
lds
cmp
xor
jg
mov
sub
mov
jecxz
dec
xchg
dec
xor
pop
test
add
or
push
fmull
xchg
repnz
pop
jb
ret
jmp
imul
ja
neg
iret
sub
in
jecxz
jb
ret
out
inc
incl
inc
out
xchg
popa
fsubrs
in
outsb
dec
dec
jl
lods
lret
fs
sub
loope
in
iret
mov
repnz
cmc
in
cmp
xor
cmp
mov
xor
sbb
leave
test
or
pop
mov
test
and
mov
imul
jno
stc
ds
pushl
mov
sahf
cmpsb
out
cmpl
xor
punpckldq
icebp
rclb
add
jae
jbe
fcmovu
decl
andl
xlat
and
loopne
hlt
xor
sbb
nop
mov
movb
sbb
mov
int
jno
mov
inc
or
leave
cwtl
movsb
and
icebp
aam
inc
pop
subl
sub
dec
push
and
mov
adc
les
js
inc
test
push
adc
shrb
mov
outsl
mov
inc
test
cmpb
inc
movb
inc
es
pop
mov
inc
scas
stos
or
pop
cs
faddl
inc
mov
sub
cmp
dec
loop
and
push
adc
incl
push
xor
int
lcall
sbb
or
push
or
dec
mov
mov
and
pop
or
push
shll
or
xchg
outsb
dec
cwtl
mov
das
jp
ja
dec
or
jp
bound
add
mov
push
xor
orl
inc
jmp
cmp
pop
dec
jns
pushf
movsb
outsl
or
das
ror
dec
ljmp
lret
fmull
push
inc
test
std
xor
inc
mov
scas
loop
push
sbb
sub
insl
in
lret
mov
jp
nop
test
adc
lret
out
push
imul
scas
adc
pop
pop
jo
and
or
scas
and
pop
pop
ret
fwait
repz
and
cld
loopne
push
mov
and
ret
or
adc
aas
test
stos
mov
xor
mov
cs
jbe
and
adc
and
mov
pop
notb
push
lcall
push
lods
push
push
hlt
incb
xchg
out
mov
jo
pop
in
das
and
scas
mov
aam
ja
cmp
mov
inc
add
push
sahf
and
mov
fldenv
popf
pop
mov
mov
arpl
sbb
xor
imul
mov
mov
adc
push
fistpll
iret
fwait
rcrl
pop
scas
xor
pop
mov
inc
xor
jecxz
dec
xchg
loope
das
les
stos
outsl
lods
lret
dec
in
and
into
pop
in
cltd
jns
dec
jp
fistps
or
add
xchg
jmp
mov
push
aas
or
mov
sbb
lea
xchg
repnz
rol
movsb
xlat
test
movsl
lods
cwtl
dec
xor
int3
mov
and
jle
xor
dec
rcl
mov
out
mov
out
push
mov
loop
inc
mov
adc
push
nop
push
xor
and
xchg
divb
cmp
push
push
rcrl
mov
subb
mov
mov
mov
les
outsb
dec
das
push
ds
jmp
fwait
mov
nop
sub
jg
fsts
out
ljmp
inc
add
inc
fcoms
sbb
aas
or
cmc
pop
jne
adc
add
xor
xor
or
adc
icebp
mov
lods
pop
inc
dec
inc
xlat
popf
test
xchg
cmp
push
xchg
mov
sbb
dec
cs
or
push
cmpsb
neg
rcr
sbbb
adc
adc
inc
add
cmc
es
mov
int3
pop
imul
push
inc
pop
adc
in
push
fwait
pop
mov
lds
xchg
add
in
cmpsl
sub
pop
lock
inc
push
dec
sbb
icebp
ficompl
scas
add
pusha
mov
iret
push
fwait
jg
cmp
into
gs
and
hlt
mov
pop
aad
outsl
cmp
movsl
mov
jle
clc
pop
and
mov
lods
mov
outsb
sbb
dec
gs
fldenv
lahf
pop
fstpt
inc
cmp
cmp
stos
outsb
add
ljmp
repz
out
out
sbb
insb
mov
out
jae
leave
mov
ret
nop
iret
enter
mov
loope
lea
and
pop
cwtl
push
xor
call
and
mov
lock
mov
iret
lcall
xor
in
mov
jae
xor
sahf
xor
div
mov
repz
sub
rcrl
mov
leave
popl
mov
add
mov
js
stc
mov
lea
mov
xor
mov
loope
cmpb
add
mov
jo
lods
push
jnp
cld
mov
out
dec
dec
xchg
aad
pop
sub
jmp
lret
dec
sahf
sub
movl
js
lahf
sub
mov
inc
testl
ds
cltd
adc
mov
es
fisubrl
in
jmp
fcoms
adc
sub
icebp
imul
jecxz
outsl
pop
sbb
mov
ljmp
pop
xor
mov
negl
push
sub
cld
adc
mov
mov
icebp
enter
pop
mov
mov
or
or
dec
push
push
and
aas
outsb
or
mov
jnp
out
ljmp
scas
xor
cwtl
leave
cld
orb
sbb
xor
cwtl
pop
jge
icebp
scas
sbb
adc
mov
in
mov
and
loope
mov
adc
mov
icebp
les
call
add
cmc
pushf
pop
dec
push
mov
outsb
lret
jnp
sbb
mov
loop
pop
leave
xchg
int
sbb
lahf
or
sub
int3
mov
pop
scas
sbb
cltd
and
pop
and
in
jmp
jno
mov
inc
test
lcall
mov
xlat
xchg
lods
mov
and
ret
push
add
or
push
and
jp
cld
das
dec
jle
sbb
bound
xlat
pop
ss
adc
xchg
cld
pop
push
out
push
xchg
push
adcb
sub
xchg
sbb
aam
push
xchg
icebp
dec
cmp
xchg
jnp
push
aam
adc
lock
incl
xor
mov
xchg
fwait
xchg
insb
mull
scas
mov
dec
mov
inc
int3
pusha
push
enter
in
mov
adc
xchg
mov
pop
out
xchg
xchg
out
in
adc
inc
clc
mov
sbb
fwait
mov
adc
pop
pusha
stos
inc
lods
arpl
or
push
inc
roll
xor
sbb
std
jbe
sub
out
mov
lods
sbb
leave
inc
mov
mov
push
push
call
or
int
mov
cmp
mov
mov
sbb
xchg
jae
lock
add
pop
hlt
fcomps
mov
pop
sbb
or
adc
pop
cmp
mov
dec
jae
adc
pop
add
insb
cltd
in
pop
hlt
lods
jns
xchg
sysenter
push
mov
movsl
lods
push
or
xchg
lods
rcrl
mov
out
lds
mov
xor
les
mov
adc
fwait
push
ret
adc
xchg
mov
push
push
xlat
aad
mov
fcmovnb
add
inc
push
jne
cmpsl
add
dec
xchg
idivb
jnp
push
roll
push
mov
mov
pop
jecxz
push
leave
and
or
pop
js
arpl
add
jl
lods
aaa
inc
outsb
cwtl
test
cmpsb
stc
add
or
enter
out
cmp
inc
jg
clc
out
pop
fstl
push
jne
dec
insb
mov
add
or
ljmp
aaa
repnz
mov
push
sub
out
mov
es
push
iret
and
std
fwait
out
pop
sub
mov
pop
pop
insl
xchg
hlt
pop
ret
std
popa
or
inc
inc
aas
psrld
pop
adc
mov
in
jns
or
and
cwtl
cltd
movl
dec
xor
add
dec
mov
dec
lea
outsl
mov
loop
filds
stos
and
scas
sub
repnz
cltd
inc
rorb
jecxz
xchg
sbb
popa
punpckhbw
loopne
fsubrl
movsl
ds
cmp
popa
imul
pop
dec
daa
arpl
dec
dec
jl
dec
roll
sahf
ljmp
mov
mov
in
cld
inc
ja
pop
prefetchwt1
mov
scas
test
outsb
xor
dec
push
push
incb
and
dec
cmp
out
out
test
cwtl
mov
or
adc
mov
lock
jmp
shrb
cmp
lret
lock
dec
iret
adc
std
movsl
push
sbb
add
or
loopne
push
push
mov
divps
jbe
fisubl
scas
inc
mov
in
or
pusha
and
push
test
je
mov
pop
stos
movsl
sub
orl
out
icebp
cmp
lock
out
mov
ja
aad
mov
mov
sbb
sub
ljmp
andb
mov
adc
iret
add
fistpll
outsb
scas
lds
cmp
xor
dec
mov
sub
idivb
sub
sub
cmp
mov
push
out
or
lds
sub
lods
and
dec
xor
test
arpl
sbb
fistl
push
loop
addr16
cmp
xchg
out
aas
jno
mov
iret
lcall
sbb
imul
mov
out
cwtl
and
incb
sub
push
mov
lods
mov
pop
movsl
aas
fidivrs
xchg
jge
mov
jl
cmpsl
into
incl
inc
repnz
mov
or
aad
jge
xchg
xchg
mov
das
mov
mov
cmovno
inc
lahf
sbb
or
xchg
xchg
adc
addr16
mov
push
lret
sar
jecxz
outsb
mov
cmp
cmc
mov
jbe
ja
mov
mov
icebp
dec
insb
mov
push
and
xor
jns
leave
sub
mov
adc
cwtl
sti
mov
dec
mov
lahf
inc
mov
dec
ds
cwtl
shll
aas
jecxz
cmp
shll
outsl
lds
test
ja
ds
sbb
mov
mov
movsl
cs
in
push
xchg
inc
lcall
fildl
push
xchg
cs
jne
push
inc
in
cmc
inc
je
jp
cmp
mov
jae
add
xchg
pop
inc
pop
lock
pop
pop
jle
mov
loop
cmp
cld
jecxz
rol
daa
rcll
mov
idivb
in
jl
enter
clc
inc
bswap
inc
add
inc
pop
repnz
pop
jp
or
push
pop
lahf
adc
out
sub
icebp
les
and
inc
adc
mov
fnstsw
adc
aam
push
testl
fmuls
or
mov
mov
push
or
mov
test
sub
fimuls
fildl
pop
dec
cmp
add
push
and
push
in
repz
mov
out
adc
lock
adc
fucomi
lret
inc
push
jne
xchg
mov
inc
repnz
inc
dec
sbb
mov
mov
les
dec
mov
adc
pop
push
int
xor
xor
mov
rcrb
and
adc
pop
stc
mov
fisttpll
lds
xlat
cwtl
in
sub
ja
adc
mov
in
jb
pusha
push
jmp
push
test
mov
add
add
push
xor
push
addl
mov
pushf
cld
pop
lock
add
push
jbe
jno
mov
clc
nop
push
xchg
cmp
out
stc
push
fwait
stc
mov
fistps
xchg
in
mov
mov
dec
xchg
fistl
xchg
in
or
xchg
or
mov
ja
sbb
jecxz
out
fs
mov
pop
pop
cmpsl
xchg
loope
cmc
ja
xor
mov
cmp
in
pop
sahf
add
push
pop
fistpl
jge
jmp
jb
sub
pop
mov
xchg
iret
aam
xchg
pop
sbb
mov
pop
push
js
test
pop
mov
sub
ror
cmp
notb
xchg
inc
xchg
push
mov
push
and
loopne
mov
xor
stos
les
insb
mov
push
xchg
mov
popf
movsl
cli
cmp
cmpsl
pop
ljmp
jle
mov
mov
arpl
cld
js
add
inc
xlat
or
jb
loop
cli
push
push
xchg
icebp
or
pop
push
fwait
cwtl
sub
popf
test
jno
or
shlb
les
xchg
jbe
sub
scas
sub
pop
mov
call
out
dec
adc
or
mov
mov
pusha
or
fbstp
es
mov
and
push
test
xchg
je
and
or
lods
mov
popa
fsubrp
cmpsb
cmp
xlat
shlb
jle
jmp
inc
and
hlt
inc
xchg
jg
lods
and
sub
mov
adc
iret
pop
into
adcl
out
push
push
xchg
lods
je
inc
push
mov
and
out
cli
test
enter
shrl
inc
out
push
pop
xor
out
lea
movsb
sub
out
aaa
mov
sbb
sbb
bound
mov
ss
shll
mov
outsl
sarl
cmp
imul
and
inc
loop
add
test
sbb
jl
cli
push
test
or
call
mov
inc
mov
repnz
mov
xchg
cmp
dec
pushf
das
and
roll
fwait
cmp
sub
mov
cwtl
xor
insb
adc
out
cld
inc
xchg
xchg
sbb
popf
pop
out
data16
mov
add
xchg
jae
out
mov
loopne
pop
loope
jp
cmp
es
sub
call
inc
sub
pop
pop
or
movsl
push
or
pushf
or
pop
bound
sbb
pop
stos
call
out
cmpsl
mulb
fmulp
pop
fwait
cmpsb
sbb
call
das
adc
add
xor
sbb
out
lea
dec
push
sbb
adc
and
shl
pinsrw
cs
out
ds
inc
js
jmp
fldt
mov
aas
bound
or
imul
daa
lea
repnz
jne
push
xchg
jb
mov
lods
sbb
push
or
dec
aaa
arpl
stos
lahf
outsl
aam
fldcw
imul
jmp
sbb
sbb
fidivrs
push
pop
lods
sub
andb
out
jb
ffreep
push
out
mov
orb
jmp
nop
cwtl
pop
sbb
xchg
push
mov
stos
add
and
sub
and
push
jae
mov
dec
and
fidivrs
test
and
jg
jmp
sahf
orl
mov
sbb
mov
imul
nopl
pop
cmp
cmp
lahf
nop
mov
dec
xor
pop
clc
xchg
inc
pop
pop
cmp
popf
push
cmp
filds
pop
lret
adc
sub
xchg
sbb
push
enter
aam
push
jle
cmp
mov
add
add
xor
std
leave
loope
or
repnz
xor
pushf
sarb
repz
sbb
inc
addr16
lods
xchg
pop
fisubs
jp
cmpsl
ds
insb
gs
and
aas
cld
push
adc
fwait
xor
mov
mov
cmc
xchg
arpl
xchg
clc
jb
push
cmp
fiaddl
or
mov
cmp
cmp
retw
sub
clc
fldt
in
cmc
and
push
test
add
aam
mov
xchg
lcall
jmp
cmp
movsl
in
bound
mov
mov
sarl
add
xor
pop
sbb
push
out
xchg
mov
sbb
push
pop
nop
sbb
lock
out
or
mov
sti
push
lcall
cli
int
call
popa
aas
xor
cmpl
xchg
mov
jno
jbe
fbld
add
xchg
icebp
inc
jmp
int3
movsb
xlat
shll
mov
sbb
and
idiv
jae
xchg
sbb
jmp
adc
lret
mov
add
les
data16
daa
xchg
jae
es
mov
cmp
jb
in
sub
mov
jge
jae
or
ret
aas
gs
mov
sub
pop
lds
mov
test
iret
movlps
push
das
std
push
imulb
fstpl
adc
in
pop
movsl
std
mov
loopne
popf
pop
repnz
dec
iret
imul
xlat
inc
imull
lcall
mov
mov
inc
cmpsb
cltd
xchg
mov
lcall
inc
adc
stos
dec
push
lods
cmp
push
mov
lret
push
negb
xchg
xlat
jae
in
cmp
pop
movsl
enter
jl
out
mov
aas
cmp
mov
sub
movsb
out
mov
hlt
mov
dec
mov
push
cld
xchg
pusha
in
clc
xchg
pushf
jecxz
sbbl
mov
mov
movsb
cltd
push
jae
xchg
iret
pop
xor
or
sub
out
cmpsb
js
dec
insb
test
test
call
push
mov
jnp
add
xchg
lcall
in
inc
mov
lcall
push
jp
clc
das
and
jp
popa
fdivrl
rcrl
lds
fcomp
insl
dec
and
fsts
test
fbld
jnp
add
lods
cmp
lods
jb
leave
int3
imul
fcoms
mov
pop
hlt
xor
push
cwtl
sahf
mov
xor
daa
adc
dec
inc
mov
xor
mov
and
mov
or
fs
and
into
rcl
cli
xchg
push
insl
pop
aad
fucomi
cltd
xchg
out
cmp
cmp
std
dec
xchg
cmpb
xor
fmul
adc
ret
lea
sbb
jmp
lock
ret
loope
lds
int
or
stc
popa
jp,pn
ss
jno
push
and
je,pt
cmp
stos
lods
cmp
popa
lock
dec
and
mov
sahf
xor
mov
lds
and
lods
loope
cmp
mov
sti
lods
jg,pt
stc
cmp
add
lock
jecxz
arpl
lock
pop
shl
dec
in
int3
sub
or
cmpsb
dec
stc
push
lret
sahf
fwait
ret
mov
xchg
outsl
int3
pop
stos
cwtl
jns
push
popa
inc
es
lock
pop
test
or
fcmovnu
jmp
adc
pop
sub
arpl
inc
add
dec
popf
fcoms
nop
inc
les
and
inc
lahf
mov
cmp
jo
sbb
test
or
push
lods
fmull
fs
jge
enter
dec
mov
cmp
mov
mov
cld
test
int3
jnp
js
mov
xlat
adc
xorl
sub
jns
into
cmp
pusha
mov
out
es
hlt
mov
repz
push
pop
ret
cmp
test
push
out
aas
nop
jae
pop
shl
mov
pop
push
and
scas
pusha
pop
adc
int3
daa
hlt
jns
xchg
mov
jmp
mov
sub
dec
scas
fdivrs
mov
popf
sbbb
add
out
stos
lea
jle
mov
imul
dec
dec
lret
clc
ret
mov
or
bound
dec
or
pusha
xor
fldl
sbb
or
xor
cmp
inc
fimuls
test
ficoml
xor
mov
addb
icebp
fidivrs
fiaddl
jnp
mov
xlat
mov
dec
jo
push
fidivrs
mov
outsb
insb
xchg
fimuls
ret
fdivs
int3
sbb
cmp
mov
fimull
testl
jp
mov
xchg
in
ljmp
aas
test
stos
and
pop
test
rclb
fisubl
clc
adc
pop
or
fmull
push
xor
test
aam
xor
int3
in
pop
stos
dec
cmp
mov
or
cmpsb
cli
fsubs
data16
add
mov
sub
sub
int
mov
and
sar
jge
sahf
push
push
icebp
cmp
inc
in
popa
cs
sub
stos
int3
scas
lods
xchg
sarb
nop
jg
push
pop
cmp
std
loopne
clc
shll
cmp
jne
dec
jge
push
cmp
push
outsl
testb
xlat
aad
cmp
jge
cmpsb
ja,pn
mov
repnz
shlb
insl
cmpsl
es
fidivl
aaa
shl
jp
popf
shrb
aad
int3
push
xor
hlt
and
push
addl
dec
jbe
lcall
sbb
sub
push
xor
movsb
imul
inc
jecxz
cmp
push
cmp
callw
cmp
xchg
iret
sti
mov
stos
or
pop
popf
imul
cltd
inc
es
out
mov
outsb
jmp
and
stos
fidivrs
sbb
jle
cwtl
push
ljmp
xor
mov
pop
addl
fwait
daa
popf
sub
cmp
pop
mov
lods
inc
idivb
stos
out
mov
lcall
loopne
sahf
pop
fs
ds
inc
sbb
push
cmc
outsb
cmp
in
push
xor
sbb
sub
cmp
setle
mov
std
and
addr16
xlat
mov
aas
xor
ja
ret
adc
and
jns
scas
and
sub
and
imul
mov
imul
jmp
xor
sahf
and
stos
scas
outsb
int3
icebp
bound
arpl
and
jp
ja
cmc
out
cs
repnz
minps
or
xchg
push
mov
xlat
aad
shl
fwait
xchg
aam
jle
int
test
xchg
notb
cmp
outsb
mov
popf
test
jb
mov
cld
xchg
mov
sub
fstl
aaa
out
sub
jge
sbb
push
jg
and
jge
mov
xor
xchg
mov
test
outsl
mov
mov
adc
data16
movsl
filds
sub
xchg
cmp
add
xor
cld
stos
xchg
jmp
pop
and
dec
xchg
lods
xlat
outsb
push
fnstsw
sahf
sbb
jno
pop
inc
js
jb
imul
ficoml
inc
push
mov
pop
or
lea
repnz
icebp
xchg
pop
inc
in
subb
push
adc
lret
lahf
inc
xchg
xchg
sub
test
sbb
ret
cmc
out
ret
les
mov
jo
in
popf
mov
adcb
shll
adc
outsl
ss
ret
pop
sti
or
ja
and
push
fdivl
mov
mov
int
pusha
pop
call
sub
aam
clc
mov
stos
mov
shll
decb
push
ret
pop
mov
out
add
push
in
xchg
ja
aam
inc
mov
repz
in
mov
add
js
jns
repnz
pop
jmp
sub
pusha
xor
rcr
cmp
or
aas
shll
lock
gs
test
add
sub
cs
out
das
popa
mov
in
xchg
loope
push
inc
fnsave
sar
rolb
cmc
xchg
adc
cld
scas
dec
insb
cmc
mov
inc
pop
jno
and
rolb
jg
nop
xchg
xchg
rcrb
lods
aad
jmp
and
rcr
push
mov
and
mov
pop
mov
pop
ss
cmpl
mov
bound
ss
insb
std
xor
test
fidivs
mov
pop
mov
fsub
shlb
loope
and
mov
inc
out
cli
cmp
rorb
mov
cmp
call
push
cmp
das
addr16
jp
clc
mov
jnp
push
mov
stc
lahf
adc
adc
into
repz
out
imul
mov
stos
jl
fidivs
out
xchg
shrb
sub
jb
aas
mov
mov
scas
mov
mov
xchg
ds
test
shlb
and
imul
pusha
pushf
int3
mov
shrl
adc
enter
enter
enter
pop
aam
sbb
jge
and
lods
mov
rorl
add
lcall
adc
lods
and
das
pop
stos
insl
cltd
fwait
mov
pop
loopne
push
xorl
pop
ret
clc
stos
repz
adc
jp
jg
fmul
cmp
and
inc
sahf
mov
pop
cmpsb
and
push
push
test
inc
lcall
hlt
lret
stc
pop
repz
push
push
sub
cwtl
ja
in
mov
popa
mov
xor
ret
ret
inc
fisubrs
add
add
adc
mov
hlt
insb
pop
sub
dec
ds
das
cmp
xor
test
popf
out
lahf
fcmovbe
mov
test
inc
push
mov
jle
pop
in
xchg
mov
popa
lret
xchg
jl
or
sub
push
addl
fs
cmpsl
dec
iret
adc
sub
bound
dec
lahf
xchg
cmc
stos
test
lods
cmp
roll
mov
sbb
adc
adc
fldt
loopne
sbb
push
fsubr
bound
and
mov
out
lds
mov
fisubl
jle
mov
scas
hlt
mov
pop
cltd
out
inc
sbb
rolb
mov
jns
test
cmp
loop
xchg
jp
and
and
jae
push
xchg
mov
movsb
in
xchg
and
and
pop
push
jge
cltd
daa
xchg
sarl
mov
movsb
out
or
or
jne
mov
pop
jge
xchg
enter
push
adc
out
dec
push
mov
lock
jo
push
loopne
ficomps
test
fstpl
inc
daa
outsl
jmp
xchg
lods
mov
push
push
add
dec
push
and
adc
testl
jbe
cmpsl
ds
mov
adc
xor
mov
pop
mov
jno
add
xlat
and
mov
mov
pop
lds
dec
or
and
mov
cmp
pushf
cmpsb
pop
rcrl
mov
sub
and
inc
lret
ja
jg
hlt
iret
cmp
or
fwait
in
cmp
cs
aas
xchg
movsl
pop
cld
adc
and
mov
sbb
xlat
xchg
adc
mov
sbb
xchg
idivb
push
xor
out
pop
cli
pop
js
push
lods
loopne
mov
clc
leave
adc
popa
adc
das
mov
rcr
push
xchg
loop
sbb
lock
fwait
push
test
outsl
xor
mov
cmpsb
push
scas
test
fmuls
mov
xlat
pushf
jo
fimuls
js
mov
jg
xchg
mov
das
jl
dec
daa
pusha
pop
sub
jp
fistps
repz
pop
lahf
das
jb
jge
test
jns
repnz
xchg
push
rcrb
sti
push
les
dec
rcr
jp
mov
cmpsb
aas
fmuls
rol
pusha
and
xor
or
add
ret
inc
xchg
mov
in
xchg
xchg
xor
loope
sbb
jbe
and
ret
xchg
stc
sub
xor
jge
neg
jbe
in
jle
loope
scas
fcomps
scas
ret
shll
push
adcl
pusha
nop
sub
xor
jl
popf
add
adc
xor
cwtl
movsb
sub
sub
into
in
cmp
out
inc
iret
sar
xlat
lahf
mov
scas
pop
bound
and
xchg
pop
hlt
repz
std
shll
sbb
pop
stos
cmc
adc
xchg
push
ficompl
add
fucom
xorl
mov
sbbl
addr16
pop
xor
mov
lret
push
in
ret
popa
loop
cmp
int3
mov
shrl
cmp
sbb
push
ficomps
fcomps
or
xor
mov
jns
mov
rclb
sub
cmp
fldpi
nop
cli
arpl
lods
lea
int
and
dec
mov
add
add
sub
aam
or
in
xchg
pop
clc
inc
mov
jle
repz
dec
fistpl
xlat
xchg
mov
rcll
xchg
jecxz
push
rcr
cltd
aam
stc
bound
rolb
mov
xchg
sub
push
pop
jmp
mov
jnp
jae
mov
daa
jle
mov
fwait
lcall
addr16
out
jns
rorl
rolb
call
pand
adc
push
mov
out
out
sarb
std
push
mov
add
mov
cmp
lock
mov
loop
xor
cwtl
xlat
xor
js
clc
pusha
ja
int3
dec
mov
pop
js
jmp
and
xchg
xor
int
cli
js
fnstsw
ret
hlt
pop
jb
in
jnp
push
xorb
pop
out
mov
push
lea
shrl
call
dec
push
lods
xlat
adc
mov
cmpsb
pushl
sbb
cmp
jle
es
jge
jns
fldt
add
test
ret
call
mov
and
and
and
rcrl
int3
adc
inc
test
fwait
mov
mov
mov
sub
push
popa
into
gs
adc
les
jae
dec
das
fucom
sbb
lds
push
add
insl
xchg
sbbb
adc
inc
faddl
push
fmull
mov
fsubrl
mov
lock
pushf
sub
or
xor
mov
lea
mov
cmc
xlat
cmp
add
or
fsubrl
cmpsl
jl
hlt
andl
std
in
int
les
mov
lret
pop
nop
into
rol
sub
fsubr
loope
or
ret
and
xchg
icebp
mov
popf
dec
notb
adc
xchg
ja
ss
icebp
andl
cld
hlt
insl
rcr
ficomps
inc
out
fimull
add
loop
xchg
addb
mov
dec
sbb
ret
fstps
push
and
push
xchg
or
sub
mov
xchg
fists
inc
lods
dec
stos
pop
rclb
xor
dec
lds
lods
xor
pop
cwtl
orb
jle
ljmp
xchg
and
cmp
xor
mov
jne
test
mov
xlat
adc
andb
add
sti
xchg
xchg
jno
push
adc
pop
pushf
pusha
push
add
fmull
inc
in
ja
and
push
hlt
movsb
and
jg
popa
xor
nop
sub
sahf
popl
push
xor
mov
stc
iret
mov
std
lcall
test
cltd
imul
fimull
nop
mov
es
js
or
xchg
mov
xchg
imul
jp
jecxz
lret
inc
pop
mov
into
stos
inc
pop
inc
xor
push
clc
pop
fsubrl
xlat
cmp
rclb
and
cld
in
push
rol
das
inc
lock
inc
es
in
xor
sbb
adc
sbb
mov
inc
sahf
stc
out
mov
mov
aam
fwait
ljmp
mov
jb
lret
or
faddl
lods
sbb
packssdw
repnz
shll
mov
scas
stc
into
arpl
ret
stc
push
pop
inc
icebp
lock
ss
mov
xchg
outsb
jno
xor
test
gs
cltd
cwtl
jbe
xchg
sub
xchg
cmp
add
xorb
out
add
pop
je
sarb
push
add
es
icebp
lcall
xor
call
adc
push
mull
or
enter
pop
jl
xor
iret
sub
adc
imul
nop
imulb
push
push
jo
mov
jbe
test
arpl
jmp
test
subb
push
das
ds
ds
ss
cmp
test
mov
bnd
cmp
ja
out
das
out
mov
or
inc
or
mov
jmp
jmp
xchg
mov
inc
xlat
fldcw
gs
js
mov
addb
or
inc
sar
stos
addl
xchg
xchg
mov
adc
mov
mov
cmpb
xor
sub
out
xchg
add
push
adc
aam
imul
pop
rcl
add
out
inc
jl
jns
jmp
sbb
add
ret
jmp
add
push
shl
cmp
lock
xchg
adc
testl
mov
sbb
xorl
xchg
inc
repz
sbb
pop
mov
loop
stos
push
shrb
inc
add
sub
push
scas
and
lock
outsl
call
mov
adc
fsubrl
push
dec
negl
sub
mov
dec
jne
mov
js
sub
cs
or
jmp
mov
adc
stc
inc
fsubl
out
hlt
ret
faddl
bnd
mov
outsb
xchg
sti
outsb
int3
mov
jo
jle
lds
negl
aaa
fnstcw
dec
jb
rolb
add
insl
dec
in
push
mov
dec
outsb
pushf
or
gs
stos
adc
fwait
add
cmc
in
mov
sti
lret
insb
bnd
inc
add
std
push
enter
sbb
rol
xchg
orl
rolb
or
lods
arpl
sbb
mul
or
pop
sub
fisubs
js
jae
mov
je
jo
ret
das
cwtl
mov
inc
fstpl
xchg
adc
cltd
or
sub
sub
mov
cwtl
xor
xlat
push
stos
fstps
psrlw
pop
fimull
jg
aaa
lret
cmp
mov
js
and
push
mov
ljmp
pop
movsb
lea
outsb
out
jne
adc
push
pop
jae
das
ret
data16
pop
js
or
in
mov
mov
mov
dec
xor
popf
sahf
stos
xchg
movsb
cmp
push
sbb
adc
mov
ja
push
pop
mov
movsl
pusha
and
js
and
ja
push
mov
mov
xchg
test
sahf
pop
sahf
mov
mov
je
add
mov
dec
shlb
divl
in
lock
outsb
xor
jae
mov
and
cld
or
cmpsb
fnstsw
adc
mov
or
xor
jb
inc
dec
cmp
mov
jb
es
xchg
cmp
sub
loopne
push
adc
adc
xchg
jo
pop
repz
scas
add
sub
outsb
rcll
fcomps
jmp
enter
dec
push
in
jb
pop
cmc
pushf
xchg
cs
jg
push
add
sub
aam
pop
lods
daa
inc
cmp
sub
mov
push
cmpb
or
outsb
add
leave
or
out
or
cmp
loop
or
movsw
inc
xor
push
add
xor
adc
mov
adcb
popf
test
adc
in
push
sti
xchg
mov
test
inc
sbb
sahf
gs
fstps
mov
mov
lahf
les
fsubs
fdivrl
adc
sbb
cmp
std
loop
cmpsl
and
rcll
cmpsl
fcomps
lcall
repz
faddl
fucomip
in
and
mov
mov
pushf
jp
lcall
inc
xchg
mov
inc
bound
pop
add
dec
mov
xor
inc
aad
jle
std
imul
xchg
cmpsb
data16
lods
add
dec
daa
cmp
mov
decb
pop
push
cs
sub
in
popf
outsl
lret
dec
jge
sub
addb
cltd
mov
popa
pop
xchg
push
lds
out
jl
or
cmp
mov
inc
push
adc
cmp
sbb
call
in
mov
adcb
lea
mov
xchg
mov
push
es
mov
sbb
mov
adc
pop
push
dec
xlat
pop
xlat
xchg
mov
mov
call
mov
sub
ss
movsb
dec
fdivp
jb
insb
stc
cwtl
xchg
iret
pop
cld
xor
imul
aad
iret
push
sbb
jo
dec
leave
andl
in
lods
imul
pop
push
jp
cmpsl
pop
push
gs
jl
inc
inc
lret
add
jge
outsl
xchg
mov
dec
jns
in
ljmp
repnz
jne
scas
insb
inc
stos
mov
inc
into
clc
sbb
jb
in
test
lock
jp
sbb
sub
adc
push
lea
lods
cltd
xchg
sub
adc
sbb
mov
lods
sti
lea
mulb
incb
rol
les
push
lea
adc
dec
mov
dec
or
insl
ficoml
mov
inc
arpl
add
sub
xchg
out
cmp
popa
clc
mov
push
xchg
jmp
and
xchg
js
mov
xchg
dec
mov
add
call
xchg
add
cmp
js
inc
pop
or
fidivs
arpl
das
mov
lret
cmp
aas
push
cmp
roll
mov
and
mov
mov
dec
cmpsl
dec
push
mov
ror
xor
or
ss
mov
into
ja
sub
movsb
stos
paddsw
iret
ror
and
adc
adc
imull
cltd
ret
jns
sub
cwtl
mov
cli
inc
enter
xlat
inc
sbb
outsb
add
mov
xor
lods
inc
sub
push
or
xchg
sbb
scas
mov
iret
inc
sub
xor
and
jg
jl
jo
push
push
xor
int
push
mov
cmp
loopne
jno
cli
icebp
fcmovnb
mov
cld
ljmp
test
sub
mov
test
push
pushf
movsb
inc
mov
add
les
addl
popf
push
imul
inc
int
and
ss
jmp
fdivrl
imul
testl
and
ss
jmp
pop
jle
push
cmp
arpl
mov
add
push
cwtl
fucom
push
mov
lret
dec
negl
int3
les
inc
cltd
adc
xchg
imul
ss
test
xor
ret
sub
or
stc
in
call
xor
cmc
out
xchg
xchg
test
clc
adc
inc
adc
dec
dec
loopne
mov
sbb
ss
and
fildll
ret
jle
enter
movsb
mov
and
push
sbb
sahf
inc
imul
adc
sbb
push
sarl
lock
mov
jle
mov
scas
popf
pop
mov
adc
data16
lds
popf
scas
fidivl
ss
cmp
nop
popa
pusha
cmp
lds
cpuid
arpl
repnz
jmp
mov
repz
xchg
push
into
mov
pop
jne
testl
pop
das
fistl
push
xor
mov
mov
mov
push
pusha
in
xchg
adc
mov
pushf
movsl
addr16
gs
cmp
cmp
push
add
adc
mov
mov
dec
out
push
out
and
pop
inc
es
xchg
fwait
inc
pop
ljmp
cltd
dec
insb
sub
daa
add
xchg
imull
adc
repnz
cli
fiadds
dec
cmpl
push
sub
popl
stos
scas
add
outsl
mov
jmp
enter
sbb
adc
push
pop
scas
jle
jp
jp
lahf
mov
f2xm1
xor
sub
scas
cwtl
cmp
lret
xchg
xchg
push
out
movsb
xchg
add
sbb
xchg
insl
add
dec
cli
inc
repnz
dec
push
mov
aad
movsl
dec
test
cmp
and
xlat
ja
mov
mov
or
cmp
movnti
mov
std
fsubl
rcrb
push
aas
lds
pop
jae
jp
pop
rcrl
dec
inc
mov
mov
popa
sahf
cmp
andl
add
add
sub
or
adc
loopne
mov
into
or
xchg
imul
repz
adc
scas
inc
inc
insl
jge
les
jb
dec
in
stc
mov
fdivs
sbb
sub
mov
jg
mov
sbb
xor
pop
loope
gs
scas
sub
mov
test
or
clc
cmp
dec
inc
xchg
aas
ja
sahf
out
add
pop
scas
aas
outsl
push
push
pop
pop
push
sahf
les
pop
adc
aad
mov
dec
add
icebp
sbb
pop
mov
and
out
gs
cmp
lret
lret
lret
dec
mov
orb
out
lcall
testb
pop
push
sarb
insb
movsb
aaa
mov
jmp
adc
mov
das
pusha
aam
dec
push
push
dec
ret
jns
fs
mov
inc
mov
adc
in
xchg
jp
inc
xor
rclb
mov
mov
mov
outsb
clc
push
int3
inc
je
xor
loopne
incb
mov
mov
pop
fcomps
sub
fwait
lods
jo
rolb
jnp
shlb
inc
inc
add
pop
test
mov
lahf
mov
pop
mov
mov
fisubrl
das
mov
pushf
inc
bound
mov
iret
mov
or
dec
xor
fs
movsb
pop
mov
jne
jge
sbb
imul
test
and
sbb
in
lcall
pop
stc
xlat
in
imul
inc
fiadds
mov
mov
push
lret
pop
insl
dec
push
jb
stc
pop
xchg
mov
fs
add
fdivl
adc
mov
inc
stos
dec
dec
push
pop
cmpsb
scas
mov
out
xor
jae
sbb
movsb
push
mov
scas
ret
mov
rolb
sub
pop
pop
and
sahf
cmp
call
out
xor
pop
daa
add
das
outsl
xchg
rcll
and
popf
scas
push
push
or
xor
xchg
out
and
call
fwait
scas
nop
pushf
jecxz
pop
lcall
cwtl
es
cmpsb
enter
push
cmp
out
mov
mov
bound
push
xchg
arpl
popf
pop
jge
stos
push
push
movsl
out
outsl
cmp
jns
jo
sub
popf
add
out
pop
jne
mov
repz
mov
and
andb
mov
data16
test
test
pusha
xchg
repnz
dec
adc
movsb
fs
loopne
scas
test
mov
cli
fdivp
pop
xor
notb
shlb
pop
and
js
repnz
out
push
adc
adc
inc
pop
fldenv
jecxz
and
stc
cmp
push
xorb
mov
inc
push
sbb
and
or
mov
mov
mov
arpl
in
es
outsb
push
xor
ja
lret
xor
gs
sbb
xchg
call
push
fdivrs
icebp
xchg
xchg
ss
nop
leave
shrb
add
popf
adc
into
xor
add
mov
xlat
mov
icebp
sbb
ljmp
sbb
sarb
fcoml
out
mov
dec
into
sub
arpl
sahf
add
pop
or
fistpll
inc
push
insl
rcrl
movsb
lret
or
and
dec
fwait
cmp
int3
inc
xchg
les
push
or
or
clc
rorb
or
xchg
imulb
je
icebp
movsl
jmp
xchg
dec
pop
jmp
lds
sub
pop
push
dec
cmp
pushf
cmpsb
jns
popa
rolb
test
xchg
sub
test
xchg
fsubr
push
mov
jmp
jmp
push
adc
lret
xchg
pusha
or
xchg
les
mov
push
pop
mov
idivl
mov
and
cltd
jo
sub
std
pop
rcrb
sub
add
xchg
mov
push
into
into
mov
adc
push
mov
and
lcall
sub
push
rorb
arpl
mov
pop
fstp
mov
inc
test
xor
cmp
lea
das
shll
mov
mov
movsb
sbb
xchg
jbe
pop
repz
mov
mov
sbb
shl
ret
add
sub
add
mov
mov
jb
sub
xor
fcoml
jne
into
jmp
lret
clc
cmp
dec
sub
pop
xor
shlb
xchg
mov
shll
popf
xchg
dec
push
sarl
and
mov
sub
arpl
add
shrb
inc
inc
das
pop
jae
xchg
not
lss
add
and
in
mul
xlat
dec
cmp
sbb
mov
and
mov
or
ret
pushf
or
sub
jb
mov
mov
insl
lds
mov
pop
and
push
or
aas
scas
push
or
mov
bound
and
std
popf
lds
dec
out
mov
cmp
ret
jl
mov
pop
addr16
xor
xchg
ja
fcmovu
sub
or
into
push
cli
push
mov
jno
pop
sbb
pop
pop
sub
mov
stos
stos
test
add
mov
in
movb
sbb
cmp
inc
mov
cmp
jns
mov
mov
cmpsb
test
inc
inc
sub
stc
mov
adc
je
jne
inc
leave
jp
lods
jns
adc
imul
std
and
cs
lea
jmp
lea
jbe
popf
cmp
sbb
inc
aas
cmpl
test
mov
and
in
dec
iret
jp
xchg
ds
pushl
push
add
out
push
inc
js
push
push
add
cltd
cmp
sub
jp
bound
cmpl
adc
jge
xchg
out
lret
sarb
fcmovne
insb
neg
jne
mov
xchg
adc
es
loope
inc
shlb
push
lds
das
mov
jns
add
movsb
cs
cwtl
bound
neg
push
mov
ds
int3
jmp
inc
mov
mov
and
fimuls
popf
mov
and
sbb
ss
push
enter
add
mov
inc
stos
rolb
cltd
and
push
dec
dec
dec
xchg
pop
fsubrp
cmp
inc
mov
xor
shlb
and
test
arpl
daa
jge
push
xchg
inc
jne
and
inc
subl
leave
and
or
sbb
divl
int3
repnz
xchg
pushf
push
call
pop
dec
and
jo
xor
cmp
test
cmp
add
push
dec
lahf
mov
fdivrs
fs
xchg
in
out
inc
stc
clc
and
xchg
cmp
subl
pop
hlt
adc
idivb
out
jle
aam
lret
jnp
ss
imull
imul
fcom
dec
pop
xor
xchg
mov
aad
aas
xchg
mov
mov
jmp
push
xorl
jae
leave
pop
xlat
jp
test
test
arpl
cmp
cwtl
scas
mov
fdivl
ret
decl
lahf
xor
pushf
pusha
jno
cld
aas
iret
sbb
mov
cmp
dec
dec
and
repz
rcrl
insb
or
mov
arpl
out
fwait
jns
addr16
mov
ljmp
jnp
mov
add
cltd
mov
stos
sub
scas
dec
mov
xlat
push
loopne
mov
pop
fcoms
in
cwtl
ss
daa
pop
shrb
jae
ljmp
adc
sub
cmp
daa
cli
stos
inc
repnz
ret
pop
call
int3
popa
pop
pop
push
fwait
dec
sub
outsb
jmp
aas
outsl
xchg
jbe
mov
jb
int
inc
pop
and
fisttpll
and
jo
icebp
stos
dec
mov
jmp
pop
fimuls
mov
test
pop
sub
jne
rorl
cmc
jecxz
mov
outsl
and
fbld
adc
mov
xchg
adc
adc
daa
int
push
pop
lea
pop
or
sbb
push
push
icebp
pop
inc
pushf
dec
jne
xor
jbe
out
pop
mov
ret
dec
add
or
cwtl
pop
dec
out
adc
pop
dec
or
push
jne
addr16
jge
sub
pop
leave
dec
test
cmp
inc
pop
cmp
outsl
jle
sub
test
adc
jns
xlat
jg
mov
jnp
inc
pop
xchg
mov
ja
inc
subl
andl
in
in
vxorps
arpl
adc
mov
push
cwtl
loope
adc
int
dec
out
add
add
popf
stos
adc
sub
jge
faddp
repz
dec
add
aad
insb
bound
add
push
cmp
xor
jecxz
cmp
push
mov
push
add
mov
xchg
emms
lahf
adc
movsb
int
mov
add
inc
stos
adc
xchg
jg
andl
out
rorl
push
or
dec
dec
jg
push
jle
rol
pop
ljmp
dec
andl
sub
fadd
lds
test
outsb
nop
leave
fcoms
iret
das
jno
ret
sub
test
mov
xor
fcmovu
push
jle
mov
add
cltd
dec
pop
into
xchg
dec
adc
ljmp
daa
aam
into
mov
mov
cld
cmp
sbb
shll
mov
test
fwait
divb
shrl
arpl
cmp
lods
sahf
adc
out
out
pop
mov
cmp
test
jbe
push
cmpl
in
push
cld
jle
dec
ficoml
push
fsubr
dec
push
xor
ja
in
in
mov
inc
sbb
test
xor
mov
sub
mov
cmpsw
test
negb
repnz
int3
jne
mov
pop
mov
mov
cmpl
jmp
cmp
bound
scas
xorl
cmp
dec
es
fdivs
in
and
inc
push
shll
sub
and
cltd
ret
subb
lret
mov
cld
ja
adc
test
lahf
icebp
push
xor
sbb
loop
mov
nop
lods
mov
gs
mov
dec
xor
incb
lahf
lods
or
fcmovnb
inc
cwtl
mov
dec
stos
out
inc
out
push
or
std
fildl
aas
fs
stos
and
leave
fistpl
inc
mov
xchg
pop
jecxz
aaa
and
frstor
jbe
mov
dec
mov
vcvtps2dq
mov
adc
cmp
sub
add
stos
mov
mov
push
add
mov
add
sub
iret
rclb
xor
jne
call
in
arpl
repnz
in
js
jae
js
aam
fstpl
xor
pop
dec
mov
or
cmp
sub
cld
bnd
push
iret
jae
jge
push
sub
mov
dec
xchg
lahf
fstl
icebp
pop
fcoml
pop
xchg
aam
fildll
inc
mov
rcrb
dec
jb
scas
or
sbb
test
push
cmp
pop
movsl
xor
stos
sbb
bound
adc
je
cmp
movsl
cmp
decb
mov
movsl
ljmp
lret
inc
sub
jae
or
fldt
sbb
pop
lret
sbb
shll
lds
and
loopne
mov
dec
sbb
loopne
add
inc
cli
pop
jg
jecxz
out
pop
and
lods
jg
pop
add
sub
test
outsl
or
add
mov
fcoms
call
popa
pop
mov
mov
inc
mov
jge
lods
in
enter
sub
fildl
sar
testb
jg
cmc
mov
and
in
lret
push
xchg
inc
cs
std
adc
sbb
and
xorl
pop
stos
das
repnz
popf
loope
icebp
cwtl
cmp
into
fstpt
jo
dec
jle
fucom
repnz
push
sahf
sub
into
mov
leave
popa
dec
jo
jnp
lret
cwtl
arpl
stos
gs
or
ret
shrl
in
sbb
test
or
test
enter
mov
sbbl
dec
int
xor
ret
pop
jecxz
stos
or
sbb
aam
xchg
sbb
push
mov
nop
add
pop
push
addr16
sbb
testl
pop
mov
cmpsl
sub
or
aam
daa
dec
inc
sahf
negb
cmc
mov
push
adc
sbb
movsb
pushf
leave
adc
je
inc
movsb
mov
cli
mov
dec
and
pop
int3
mov
xchg
or
icebp
pushf
and
inc
je
sbb
into
lret
mov
xchg
aaa
mov
in
arpl
jmp
jle
int
push
scas
loopne
rol
lahf
sbb
pop
push
jle
std
loopne
repz
mov
lcall
mov
loop
fwait
lods
and
or
adc
repnz
ja
insb
xchg
stos
popf
add
push
and
inc
cmp
jle
mov
sarb
mov
std
adc
sub
int
adc
fnstsw
jg
notb
xchg
aaa
pop
pop
fisubl
decb
movsb
divl
test
pushf
mov
fdivp
pop
sarl
or
fwait
test
jle
std
sar
and
cs
mov
add
int3
or
pop
xor
ljmp
add
sub
call
inc
mov
das
add
enter
scas
jp
in
lret
in
sbb
enter
popf
ja
fldenv
mov
lret
ror
test
push
pushf
hlt
ja
shll
inc
loop
fmul
push
jle
aam
fs
dec
stos
adc
adc
clc
testb
sub
negl
mov
mov
add
sbb
cwtl
fst
lock
xchg
pop
sub
or
out
test
adc
sbb
pop
ljmp
mov
jl
jecxz
lea
jae
push
push
and
cld
sub
xchg
gs
push
pop
mov
jno
mov
xchg
add
clc
nop
scas
mov
fs
xor
mov
jecxz
and
into
jb
push
or
idiv
and
inc
aam
negb
imul
cld
lock
xor
pop
ret
shlb
pushf
inc
xchg
pop
pop
jne
jmp
xchg
mov
inc
in
jmp
adc
or
mov
ds
push
aam
insl
movsb
test
and
adc
outsb
leave
test
push
inc
cmp
jb
push
pushf
cltd
lret
push
test
cwtl
repz
bound
mov
fwait
testl
pop
add
int
aad
mull
fwait
mov
xor
mov
cmp
std
in
sub
lock
sub
sub
outsb
mov
loop
cmp
stos
test
ror
call
je
xchg
mov
push
js
dec
xor
mov
jo
fisttps
jns
imul
ffreep
incl
mov
sub
scas
mov
outsb
sbb
in
dec
aaa
jbe
insb
movsl
xchg
cmp
add
sub
dec
clc
xchg
ss
das
ss
mov
jg
mov
xchg
cmp
pop
mov
js
or
inc
push
mov
sbb
enter
mov
adc
adc
fidivrl
dec
fbld
in
ljmp
rcll
dec
cmp
mov
and
push
gs
mov
pop
or
out
jae
test
sarb
mov
mov
mov
sti
out
and
cli
cwtl
cmpsb
cmc
xchg
cmp
sbb
dec
pop
ret
lds
cmp
fdivp
rdpmc
push
xchg
adc
and
imul
lret
mov
int
xor
jg
enter
xor
jmp
mov
mov
dec
movb
push
enter
insl
jnp
repz
fucomi
push
test
add
cmp
mov
cmpsb
sahf
in
test
ss
lods
mov
notl
jg
inc
cmp
mov
rorl
xchg
fs
mov
fstps
add
stos
outsb
aad
push
fbstp
dec
mov
xor
xor
add
out
outsl
xchg
mov
mov
cmp
stos
jp
inc
pushf
mov
loope
xor
add
jmp
leave
xchg
ja
xor
ficompl
jmp
xor
test
rcr
push
mov
sbb
aad
fs
mov
lcall
loopne
xor
push
dec
mov
rclb
jl
mov
dec
mov
adc
pop
sub
cmp
sbb
cmp
pop
outsl
jecxz
daa
clc
and
test
mov
adc
cld
shlb
mov
pop
in
out
inc
sahf
imul
pop
push
mov
mov
lret
xchg
or
aas
push
adc
jae
pop
cmc
ficomps
lahf
inc
popa
ja
inc
dec
shll
das
cmp
gs
jp
fwait
pop
hlt
ss
test
xor
insb
cwtl
fimuls
or
es
popf
cmc
testb
das
pop
jle
lea
inc
or
inc
aaa
xchg
daa
jmp
sub
lahf
mov
stos
push
mov
fbstp
incl
push
jmp
in
mov
xchg
push
mov
push
ror
mov
lahf
sub
rorl
pop
repz
xor
mov
and
and
pusha
pusha
mov
je
aam
leave
sbb
mov
xchg
mov
cs
jne
mov
in
aas
je
push
xchg
imul
ss
stos
pop
out
add
jl
mov
pop
shrl
aad
ds
repnz
in
inc
xchg
cltd
pop
sub
rorl
cmc
jne
in
mov
neg
jo
aam
jo
sub
loopne
mov
mov
mov
shlb
or
push
pop
iret
icebp
add
cmp
or
push
aam
jp
mov
and
cmp
ret
scas
sbb
mov
push
cmpsl
cld
jo
push
lock
loop
pop
addr16
sarb
scas
sub
cmp
aas
xchg
popf
fbld
loopne
jle
dec
in
mov
sub
ja
mov
notl
lea
sub
add
dec
jge
push
dec
dec
orl
push
mov
repnz
in
and
jo
add
jl
jno
add
pop
mov
dec
pop
mov
cmc
aam
sub
ss
dec
lock
decb
out
or
test
in
push
rclb
outsb
jne
cmp
out
ret
xchg
dec
or
pop
es
test
pusha
inc
and
xor
lods
push
lods
lret
cmp
xor
or
mov
push
test
add
aaa
jmp
dec
and
addl
pop
leave
mov
sub
inc
ds
clc
int
add
mov
icebp
jmp
jle
sahf
or
push
xchg
lahf
lahf
jo
inc
test
clc
gs
cmpsl
loopne
bound
and
movl
movsl
dec
nop
cmp
adc
leave
or
lods
jmp
fwait
test
jle
loope
rclb
add
adc
mov
xchg
sar
mov
mov
sub
ret
lods
nop
jmp
mov
jo
popa
lods
adc
into
test
in
lcall
inc
scas
pop
cld
xor
subb
mov
scas
ljmp
shr
or
pop
dec
mov
rol
and
or
or
in
mov
das
and
int3
adc
mov
or
lret
shl
xor
loopne
fildl
push
mov
movsl
sub
mov
sbb
sar
test
stos
xor
out
lock
into
jbe
lret
mov
mov
xchg
loop
decl
jae
mov
dec
sub
and
cltd
pop
pop
aam
out
clc
fidivrs
push
mov
mov
test
sbb
xor
xchg
enter
adc
std
fwait
addb
jge
cmp
shll
pop
ret
pop
xchg
mov
pusha
in
sub
xchg
das
and
movsb
push
pushf
or
push
lcall
call
div
mov
push
jae
aaa
arpl
lea
lahf
and
and
push
jecxz
pop
ss
mov
cmp
cmc
lret
inc
add
sahf
lret
push
inc
in
loopne
mov
cltd
jg
outsl
cmpsb
aaa
jle
sub
jp
jne
call
in
push
jb
insb
jnp
mov
xlat
lahf
cld
mov
mov
lock
inc
test
movsl
pusha
int
sarb
jb
rorl
lret
pusha
fwait
adc
sbb
pop
pusha
xor
push
dec
mov
cmpsb
dec
add
orb
pop
daa
std
repz
and
cmpsl
jecxz
xchg
cmpsb
aaa
inc
cmc
sbb
gs
loope
sbb
xchg
push
daa
push
js
decl
rorl
data16
or
fnstcw
shlb
pop
cmpb
idivl
into
ja
mov
jle
jmp
add
and
hlt
inc
inc
sti
out
or
add
dec
inc
clc
jp
pop
mov
test
mov
addr16
fisttpll
pusha
fnstenv
fstp
sbb
icebp
in
push
sub
stos
inc
bound
out
ljmp
call
pop
and
into
lods
xchg
cmp
and
mov
pushw
in
jecxz
push
sub
loope
imul
add
cmp
push
fnstsw
inc
imul
mov
sub
insb
dec
cmpsl
test
add
xor
and
and
addl
cwtl
xchg
cmp
roll
dec
pop
fnstsw
mov
shlb
in
leave
test
ss
insb
jo
or
mov
adc
ss
cmp
mov
or
mov
jle
ret
push
test
sti
in
pop
fdivl
outsl
cmp
xchg
dec
sbbl
lahf
in
shll
jne
mov
ss
je
mov
push
or
xor
test
repnz
daa
das
mov
nopl
jecxz
vsubss
cmpl
add
push
pop
in
dec
mov
movsb
and
push
pushf
stc
cmp
inc
pop
data16
fs
pop
push
adc
jmp
or
es
mov
std
pusha
mov
or
mov
andl
jne
ja
push
jg
fstpt
add
mov
cmp
fstp
js
mov
push
add
adcl
stos
in
loope
adc
xor
mov
push
and
not
shll
mull
jb
mov
cwtl
or
cwtl
xchg
push
sahf
jle
add
or
arpl
inc
sbb
mov
cmp
xchg
push
xchg
cmp
xchg
andl
sbb
popf
mov
sahf
faddp
xchg
testb
rcll
lret
out
mov
adc
or
negb
lea
test
ljmp
out
pop
icebp
mov
and
cmc
adc
pop
add
or
hlt
call
subb
add
hlt
pop
dec
lahf
sub
lret
dec
jo
push
cltd
jmp
cld
add
orb
adc
out
ja
xchg
or
xor
add
out
mov
clc
js
add
or
push
cs
imul
push
call
lret
and
xchg
or
adc
es
cmova
les
enter
lods
je
pop
jge
cmp
sub
popa
mov
jbe
gs
dec
data16
or
xlat
push
lock
pop
jge
movsl
pushf
xor
dec
loopne
dec
mov
ret
pop
xchg
scas
dec
ja
aas
pop
mov
out
mov
mov
mov
dec
inc
adc
xchg
dec
jmp
xor
scas
orl
das
icebp
ja
push
ja
outsb
cmp
outsl
out
add
mov
das
inc
sahf
inc
movsb
push
jne
mov
andb
push
adc
cmp
mov
das
das
and
adc
sbb
mov
lahf
ja
mov
imul
fsubrs
pop
pop
into
jnp
dec
add
fwait
xor
mov
in
inc
mov
adc
nop
sub
xchg
adc
push
add
pop
fs
sarb
xchg
adc
dec
pop
imul
out
scas
int
pop
aas
ja
cld
iret
dec
push
movsl
jae
xor
pop
push
scas
roll
hlt
pop
sahf
sbb
mov
jl
cmp
and
outsb
cmp
nop
push
add
mov
cmp
mov
xchg
jno
scas
add
inc
jmp
dec
add
inc
into
cmp
ret
shl
ljmp
pop
fistpll
mov
pop
xor
into
in
or
out
bound
or
xor
jge
jg
scas
pushf
fstl
in
and
pop
sbb
lret
mov
out
inc
inc
push
add
sti
xor
fidivl
fwait
or
loope
jnp
mov
outsl
xor
add
sub
xchg
fs
addl
lret
lahf
fsubrl
dec
jo
call
mov
movsl
adc
pop
or
jecxz
adcb
aam
cwtl
add
jnp
push
icebp
cmp
push
sbb
shll
icebp
ret
outsl
pop
jae
adc
shrl
mov
jle
iret
add
mov
inc
call
lea
movsb
mov
dec
testl
inc
idiv
subl
in
jle
or
clc
mov
fadd
stos
pop
hlt
sub
xor
xor
sbb
sub
adc
push
or
dec
pop
inc
and
jle
stos
adc
adc
mov
sub
mov
push
test
lds
xor
ret
arpl
sbb
jg
out
push
bound
imul
cmp
inc
xor
daa
cmpsb
stos
pop
push
mov
es
add
sar
divb
add
rolb
push
popa
mov
mov
ss
stc
jge
out
mov
pop
outsb
xor
int
cmpsb
icebp
stc
fstpl
cmpsb
adc
lods
and
and
dec
outsl
les
nop
xor
int3
and
push
fstpl
lds
push
fwait
test
mov
add
sbb
sbb
ret
lods
inc
call
aaa
xchg
fsubrs
push
xlat
icebp
xor
add
add
push
dec
add
test
sahf
movsb
cmpsb
shr
pop
div
sub
xchg
leave
or
fs
inc
hlt
jmp
adc
mov
sub
jmp
push
push
and
shll
movsb
push
cld
fwait
jg
push
cmp
mov
pusha
in
outsb
popf
inc
sub
pop
mov
add
jno
pushf
push
popf
xor
iret
out
pop
xchg
fldl
cli
mov
or
in
test
fdivr
lcall
push
push
cmp
or
push
andl
xchg
and
jne
mov
enter
je
jno
popf
pop
push
mov
mov
xor
mov
inc
inc
bound
cltd
sub
mov
mov
notl
shlb
or
stos
imul
fistpll
xor
imul
jae
push
xchg
add
es
pusha
in
cmp
fmul
das
testl
xchg
add
je
xor
sbb
add
adc
pop
cmp
jbe
pop
push
out
pop
scas
mov
orl
lret
fcom
fxtract
sub
ljmp
add
mov
daa
sbb
movsl
sub
idivl
push
sbb
adc
scas
or
sub
inc
cs
jno
push
pop
cld
and
pop
cmp
mov
repz
adc
dec
pop
stc
and
addr16
daa
jmp
mov
push
sbbl
aam
cmpsl
dec
incl
in
test
mov
cmc
int
mov
lahf
and
xchg
mov
jmp
dec
iret
jno
cmp
fcoms
push
jp
loope
stc
std
insl
std
dec
imul
sti
pop
loope
pop
pop
mov
ljmp
xor
test
and
loope
icebp
out
cmc
out
stos
add
cmp
ss
dec
shrb
mov
aad
xor
ja
sahf
lods
and
lahf
cmp
data16
leave
mov
loopne
pop
mov
inc
inc
js
xor
mov
add
adc
or
mov
andb
fstpt
stos
cltd
pushf
mov
or
cmp
insb
insl
int
xor
lret
jae
subb
jle
cltd
and
insl
int
aad
cli
cmp
outsb
push
scas
pop
popa
aas
and
fbstp
int
xchg
inc
inc
push
xlat
sbb
fmull
pop
fmuls
arpl
push
daa
dec
mov
decl
popa
mov
xchg
enter
and
lcall
std
andl
xor
loop
ss
fldcw
js
sbb
or
ja
xadd
cld
or
jge
push
sub
inc
add
popa
dec
movsb
xlat
dec
cmp
cld
inc
sbb
lods
mov
mov
sysenter
std
fabs
add
jo
fsubl
jle
add
sub
add
xchg
mov
rorl
xchg
jbe
fiadds
push
mov
stc
pop
test
gs
push
and
sub
lret
insl
in
push
mov
shll
push
pop
dec
add
jle
jmp
cld
cmpl
scas
xor
pop
aas
adc
jo
or
mov
cmp
arpl
outsb
and
mov
mov
pop
or
or
push
jecxz
test
jmp
ja
jnp
sbbb
enter
and
mov
jns
fmuls
inc
ret
pop
mov
cmpsl
inc
sub
add
sbb
jmp
outsl
jle
dec
sbb
add
mov
or
pop
dec
les
mov
adc
pop
mov
fsubrl
push
and
or
loope
adc
lock
push
daa
jo
ljmp
mov
cld
cmp
jno
cmp
fstpt
subl
push
mov
jae
inc
or
xor
aam
lods
aam
dec
fisttps
add
xchg
addl
dec
adc
inc
mov
cmp
inc
sub
ret
mov
hlt
fadd
nop
mov
ljmp
lock
jmp
pop
and
lods
aaa
mov
xchg
lods
sbb
test
les
aad
ss
mov
xchg
pop
jno
stos
adc
sub
cld
mov
sbb
xchg
fisubrl
xor
mov
outsl
mov
jno
movsl
in
push
imul
jecxz
or
fs
cltd
pop
test
lock
xchg
jecxz
or
add
in
xchg
into
jne
icebp
fsubr
or
fs
imul
jle
mov
mov
mov
xchg
pop
lar
test
and
or
pushf
jecxz
push
ficoms
mov
mov
bound
jmp
sub
xor
insl
rcrl
mov
push
sti
or
jb
sub
jns
cs
or
mov
sbb
orl
imul
sarl
clc
repz
das
mov
mov
and
pop
lods
lock
cmp
jns
rolb
in
fisubrl
jne
lds
jo
lret
fndisi(8087
hlt
mov
adc
and
xchg
daa
dec
push
adc
pop
adc
leave
out
add
sti
and
addr16
loop
rcl
push
stc
mov
sysret
enter
xchg
aam
xchg
cmp
or
jmp
int3
outsl
push
cmp
repz
jl
cmp
cmp
xchg
adc
arpl
mov
mov
loopne
and
mov
push
add
iret
xorb
pop
shlb
test
mov
dec
adc
jno
fildl
es
pop
outsb
mov
pushf
xlat
jns
sbbl
dec
sar
xchg
dec
push
ljmp
push
sub
sub
ret
call
stos
mov
add
nop
xchg
arpl
movsl
jp
add
repnz
insl
movsb
cmp
or
nop
mov
mov
or
dec
es
mov
out
fwait
cmc
int3
fmul
imul
orb
xor
jae
mov
test
xchg
pop
adc
pop
fsubrs
inc
pop
add
decb
xabort
add
dec
xchg
repz
dec
jp
pop
dec
mov
jb
or
add
daa
mov
std
shrb
cli
push
xchg
fildl
inc
inc
mov
jmp
imul
incb
or
add
shll
jl
movl
test
pusha
xchg
jo
mov
mov
test
xchg
xchg
repz
fwait
and
mov
rcrb
cmp
inc
imul
out
jo
xor
pop
test
fwait
in
or
sbb
pusha
inc
loop
cwtl
inc
inc
call
xor
loope
in
xlat
es
add
pop
jnp
pusha
pause
aas
jne
loop
mov
add
sbb
lahf
inc
hlt
daa
sbb
filds
add
push
or
lret
jge
cmp
mov
fs
data16
and
dec
arpl
push
stos
inc
push
add
sbbb
cmpsl
cmp
out
push
les
pushf
into
imul
fmul
icebp
scas
pop
loope
pop
test
push
dec
pusha
mov
aad
jns
mov
dec
pushl
push
pushf
xchg
dec
mov
and
movsb
inc
sub
jp
bound
fidivrs
cmp
jg
cmp
xlat
add
lea
push
mov
dec
lea
and
sbb
faddl
std
stc
test
add
mov
mov
fidivrs
cmp
ret
inc
xorb
fld
mov
inc
cmp
or
push
cmp
icebp
sub
jg
add
add
int
fcoms
popa
jle
hlt
fs
lea
push
call
pop
fsubrl
pushl
mov
aas
lret
inc
cltd
mulb
aaa
mov
das
mov
adc
leave
inc
nopl
cmp
jge
push
leave
dec
inc
clc
out
mov
out
lcall
sti
cmp
inc
roll
into
insb
fcomp
out
lock
cmp
cmp
mov
jae
mov
daa
push
in
inc
dec
cli
stos
pop
push
pop
shl
lods
daa
cmp
fwait
mov
ljmp
add
adc
mov
adcb
ds
xor
pop
xchg
push
call
push
jnp
inc
mov
bound
testl
scas
adc
jnp
popa
xchg
test
dec
cmova
cmp
pop
push
mov
xor
test
push
stos
xchg
sub
pop
rcr
jo
push
xchg
subb
inc
push
or
cmpsl
rclb
dec
add
in
out
lret
fcmovnbe
mov
les
cmpb
repz
ret
aas
pop
cmp
popa
nop
lods
cltd
cmpsb
xor
lds
inc
popa
insb
jg
sarl
inc
int
loopne
roll
adc
inc
push
jb
jp
scas
pop
pop
inc
xor
jb
xchg
pop
lret
movsb
stos
dec
movb
iret
adc
and
inc
fsubr
push
mov
sbb
adc
push
outsl
add
xchg
and
xor
push
lcall
xchg
in
adc
and
pop
inc
push
and
jno
lods
les
xchg
jnp
popf
popf
iret
cmp
add
cmpl
mov
leave
pop
adc
aas
fdiv
and
mov
call
orl
filds
jg
into
add
lahf
rcrl
jns
and
jp
cmp
pop
outsl
pop
xor
push
mov
mov
testb
into
in
pop
insb
dec
into
aaa
sub
in
mov
sti
sysret
mov
repnz
sahf
pop
cmpsl
mov
daa
adc
dec
lahf
adcb
sub
or
sbb
push
sub
cmp
push
xor
test
add
call
pop
cmpsl
jmp
inc
les
dec
cmc
mov
mov
jne
cmc
add
mov
jg
data16
mov
daa
std
push
mov
xchg
inc
aam
push
ja
adc
adc
jp
fistpl
xor
rolb
jb
fiadds
mov
sbb
cwtl
dec
or
jg
pop
movsl
add
outsl
aas
or
shlb
inc
lcall
test
xchg
dec
repz
rol
fcompl
and
addr16
or
dec
rorl
inc
out
popa
mov
mov
repnz
cmp
test
dec
xchg
ljmp
fwait
xor
jecxz
loopne
ss
adc
cli
inc
xchg
fcmovbe
outsl
mov
nop
add
jecxz
cmpsl
arpl
mov
nop
iret
push
dec
cli
fisubrl
std
loopne
shrb
aaa
int
loope
loopne
push
cltd
sahf
sbb
adc
push
and
push
push
daa
shlb
mov
mov
fisubs
xor
lret
loope
cld
mov
in
sti
scas
cmp
inc
cmp
popa
jle
sbb
inc
xor
dec
mov
or
push
ss
push
out
dec
and
scas
imul
or
mov
push
cmp
mov
adc
inc
insb
push
mov
mov
cmpsb
mov
mov
ret
pusha
inc
jbe,pn
and
ljmp
dec
xchg
mov
icebp
and
icebp
add
out
popa
mov
push
cmp
nop
xchg
in
lds
sub
das
sbb
lods
fcomps
sub
jg
fimull
ror
push
aam
push
inc
shlb
mov
inc
jns
daa
and
negl
les
js
or
fcompl
adc
inc
xor
and
inc
js
mov
movsbl
jp
jp
cld
sahf
sub
insb
inc
aad
loop
adc
inc
sub
cmp
and
fdivp
xor
or
xor
xor
es
xchg
fcoms
ljmp
lods
test
in
push
and
adc
dec
mov
xchg
inc
pop
pushf
test
incl
aas
lods
lahf
dec
in
xcrypt-ofb
cmpsl
sub
inc
sarb
xchg
ret
mov
push
dec
mov
jnp
mov
mov
call
int
fbstp
sub
fsubs
lea
ljmp
sti
test
inc
testl
test
cmp
inc
mov
aad
lods
adc
dec
mov
sahf
xor
mov
add
sbb
test
lahf
inc
jg
cmp
fstl
data16
xchg
or
and
filds
jmp
in
push
lret
popa
dec
push
xchg
aas
add
jno
add
push
rolb
mov
stos
mov
imul
ja
xor
rcrl
cwtl
cmpsl
loopne
xchg
sub
dec
stos
add
add
cmp
xor
mov
fwait
dec
sub
xor
es
or
mov
add
push
or
shlb
in
lcall
movsb
adc
hlt
cmp
xchg
sbb
lahf
mov
mov
les
fstps
dec
jmp
pop
nop
movsl
cwtl
movsl
sub
les
xchg
jmp
inc
jbe
addr16
sarb
sub
pop
mov
or
daa
sahf
mov
mov
mov
pop
push
sbb
and
lods
xchg
mov
test
sbb
push
pusha
inc
call
dec
xchg
jmp
dec
lods
push
sarb
or
pop
add
push
movsb
jecxz
adc
test
jo
loope
add
les
enter
sub
das
inc
rol
popa
negb
dec
icebp
inc
repnz
scas
ret
rcll
mov
mov
movsb
xchg
das
bnd
data16
les
cmpsb
gs
jmp
hlt
sub
adc
pop
lret
sub
int3
cs
xor
inc
std
ret
cmp
in
inc
xor
stos
push
mov
enter
lods
popf
dec
insb
adc
cld
cmp
xor
push
inc
rorb
ror
jb
pop
or
xchg
aad
cmc
add
inc
dec
push
mov
inc
sbb
enter
adc
dec
sbbl
jne
dec
pushf
std
int
mov
sahf
xor
in
mov
xor
lock
fistpll
xchg
divb
leave
es
imul
lcall
into
xchg
aas
dec
add
inc
out
in
std
sbb
add
xchg
repz
or
int
repnz
insl
xlat
dec
int3
into
sarb
repz
xchg
cmp
xchg
cwtl
push
arpl
xor
fimull
aad
stc
mov
add
aad
jno
mov
mov
add
cwtl
dec
pop
xor
and
sti
out
out
pop
int3
xlat
addr16
xchg
sbb
cmp
lcall
test
in
sbbb
dec
lret
insb
and
out
mov
and
sahf
adc
cmpsb
and
test
and
push
xlat
mov
add
les
mov
push
mov
xor
movsl
test
popf
add
and
stos
das
test
inc
leave
mov
xchg
lret
cwtl
mov
mov
popa
jg
cmc
in
lret
mov
call
clc
repz
ljmp
lds
cwtl
jo
mov
mov
test
inc
shlb
je
mov
pop
je
dec
mov
repz
mov
jnp
lods
jecxz
sahf
aas
nop
mov
lods
bound
xchg
in
adc
inc
push
cmp
cmp
imulb
test
or
test
push
add
or
outsl
or
es
inc
cmc
lods
mov
jnp
adc
test
lods
cmp
sub
icebp
sub
loop
mov
or
jmp
push
ss
adc
fnstcw
adc
xchg
adc
das
and
sub
std
jg
add
jne
mov
repz
out
orl
arpl
les
jae
push
sub
or
lods
xchg
jae
inc
out
dec
dec
scas
das
jnp
sbb
ljmp
mov
lea
xor
shl
and
aas
sbb
pop
sbb
mov
xor
movlhps
std
lods
jb
sbb
and
mov
mov
cmpsb
mov
push
shrb
dec
sbbb
loopne
iret
sti
lret
jl,pn
push
add
push
xchg
cmp
jbe
loope
cltd
push
xor
loop
sbb
jle
stc
cwtl
sub
jns
mov
mov
insl
idiv
cmp
jbe
imul
loop
ds
inc
or
jo
repnz
subb
fcompl
int
pop
mov
int
out
popa
pop
iret
mov
jno
std
lcall
or
add
repnz
sti
ljmp
adc
add
mov
rcr
mov
mov
daa
out
sub
es
cwtl
pop
fwait
rol
lcall
dec
inc
ljmp
cld
mov
fdivl
repz
rolb
movsl
push
fistpl
xor
pop
aas
addb
dec
loop
fstps
or
push
into
idivl
iret
nop
cmp
aad
sub
jbe
pop
mov
sti
lock
xchg
jbe
div
icebp
gs
cmc
mov
scas
and
pop
xor
sti
cmpsb
repnz
popl
repz
xor
jae
push
loope
test
mov
mov
xlat
pop
addr16
adc
mov
mov
std
mov
dec
daa
pop
jle,pn
jge
daa
ficompl
sub
out
nop
ret
in
decl
and
dec
pushf
movsl
push
lcall
aam
push
cmp
jae
mov
jg
mov
xor
shrl
jmp
sub
jl
daa
iret
dec
in
jo
mov
dec
cwtl
jp
fld
mov
ds
add
and
xchg
inc
adc
lods
imul
lock
scas
cli
aad
fwait
inc
imull
aad
add
loope
mov
rcl
arpl
xchg
mov
push
push
into
pop
pop
push
sarb
xor
dec
add
arpl
dec
pop
lock
pop
cmp
sti
movb
cmova
test
push
imul
xchg
sub
adc
xorl
xor
loope
lret
mov
sub
cwtl
out
movsl
or
or
mov
insl
xor
add
in
xlat
push
flds
pop
or
jecxz
addr16
sbb
lock
push
cmp
subb
fsubrs
lret
leave
aad
lea
cld
mov
test
sti
insl
mov
lea
test
rcrl
shll
mov
movsb
fs
push
jne
add
mov
test
and
xchg
les
dec
push
cmp
clc
mov
add
mov
mov
or
sub
or
mov
inc
icebp
cwtl
mov
lock
sub
fbld
sub
aaa
push
lret
xor
movsb
incl
lods
mov
add
or
sar
mov
or
cwtl
sbb
adc
scas
dec
or
loope
mov
stc
push
add
mov
jmp
adc
cmc
in
mov
out
sti
jmp
pop
and
decb
cmp
enter
jge
fstps
out
inc
push
stos
xor
jmp
in
xadd
mov
push
sbb
jle
jecxz
movsb
gs
or
push
inc
mov
das
dec
jne
add
aad
inc
xchg
cmpb
push
mov
std
jbe
jmp
jno
iret
and
fsubrs
adcb
ficoms
hlt
dec
fcomip
fucomp
cld
cltd
xchg
jecxz
repz
shll
sbb
cmpsb
fsubs
xor
inc
fdivr
jns
add
in
paddsw
xchg
in
sbb
lret
cld
jg
mov
xchg
push
ss
sub
ret
xchg
das
lods
jle
cmp
test
pop
imul
call
cmpsl
adc
shld
lock
jg
bswap
jb
adc
mov
imulb
adc
push
sub
pop
cwtl
jnp
movsb
aam
lahf
push
data16
dec
inc
dec
jb
mov
nop
and
mov
pushf
sub
sbb
xor
jecxz
push
stc
and
dec
test
enter
push
lret
lcall
aas
sbb
stc
pop
cmp
pop
mov
sbb
pop
add
int3
inc
xor
in
inc
jb
sti
or
sub
pop
repz
je
cmp
adc
imul
movhps
ss
ret
push
sub
xor
mov
mov
sti
fists
inc
jmp
cmp
test
outsb
xor
pop
popl
adc
mov
rcrb
scas
mov
insb
push
push
and
pusha
dec
xchg
cmpsb
adc
dec
mov
in
add
in
dec
cmpsb
jb
mov
inc
fildll
xor
sti
jns
arpl
fsubp
push
scas
mov
jne
out
dec
iret
mov
fwait
push
lock
xchg
jp
or
jge
aad
cld
pop
mov
mov
dec
mov
xor
mov
sbb
xchg
test
popf
xor
jge
jg
pop
cld
fwait
notl
gs
xor
icebp
clc
bound
and
xchg
push
nop
xchg
sub
into
out
jbe
dec
lods
adc
push
adc
inc
loopne
xchg
inc
lahf
fisubrl
negb
bnd
dec
xchg
loop
icebp
fst
scas
out
in
inc
imul
mov
ds
les
cmpsl
pushf
and
cmpsb
sbb
adc
sub
xor
outsl
fdivl
es
push
sub
test
dec
cmp
and
mov
or
add
cltd
test
inc
sub
adc
or
or
and
and
cmpsb
push
xor
ja
sub
mov
pop
mov
cmp
mov
cltd
arpl
out
fisttps
icebp
cmpsb
lds
popf
jg
inc
pop
xchg
push
lret
fcmovnb
sbb
stos
add
inc
pop
loop
inc
ret
mov
cmp
imul
inc
xor
jne
inc
xlat
xchg
aam
and
sahf
in
xchg
rorl
cmp
aam
in
daa
inc
inc
lcall
jp
mov
mov
clc
pop
loopne
cmpsb
add
pop
jmp
adcl
jecxz
mov
fmull
xchg
aas
negb
push
dec
xchg
xchg
mov
pop
in
test
add
fs
stc
int
jbe
dec
lret
lahf
jo
push
add
jecxz
and
test
arpl
add
outsb
xchg
jge
sbb
fwait
ret
jge
xchg
mov
sub
dec
cld
rorl
repnz
mov
mov
aam
ret
sub
xor
pop
dec
pop
add
xlat
iret
adc
or
test
sbb
mov
mov
pop
push
addr16
cld
add
cli
insl
xchg
sub
loop
and
mov
xor
ss
fcmovnb
das
aaa
cli
adc
sub
mov
and
ds
sub
int3
out
out
sub
cmp
push
int
repz
mov
pop
mov
push
pop
push
jmp
test
add
cmp
stc
inc
cwtl
in
ret
ss
inc
rcll
inc
push
adc
cwtl
int3
in
fcomps
aam
cwtl
jmp
mov
add
push
cmp
dec
cltd
movsl
call
cmp
mov
jne
stos
cmpb
cmpsb
psrlw
fucomp
push
adc
leave
push
xchg
and
aaa
cld
mov
adc
pop
popa
push
rcrb
stos
sub
jp
dec
jecxz
outsl
or
movsb
cmpb
ret
dec
lcall
mov
lods
cli
and
rclb
out
fisubs
mov
mov
inc
jns
dec
sbb
jb
mov
aaa
xchg
pop
ja
fbstp
scas
pop
in
inc
lea
sarb
stos
jno
mov
jae
lahf
dec
sti
mov
dec
mov
js
push
js
adc
dec
jbe
pop
add
jne
pop
insb
sbb
xor
pop
bound
ljmp
pop
jge
sti
movsl
test
mov
mov
mov
pop
fiaddl
dec
or
ja
stc
lea
cmp
jle
xchg
mul
imul
sub
or
jl
ret
sub
jle
popa
imul
or
mov
nop
in
ja
testb
dec
pop
push
dec
inc
add
leave
jbe
mov
cli
test
pop
outsl
dec
xlat
and
pop
clc
or
push
cmpsl
adc
das
xchg
lret
push
jae
lret
lret
std
dec
shl
out
cwtl
xchg
add
test
bound
shr
popf
fisttpl
into
xor
test
inc
addb
or
fidivl
push
push
sub
scas
sbb
sub
xchg
sub
sbb
inc
add
pop
mov
inc
loopne
pop
rol
nop
data16
and
push
inc
imul
out
in
test
arpl
lahf
push
fwait
mov
lahf
lcall
xchg
mov
adc
jnp
and
lret
adc
or
nop
xchg
cmp
sub
sbb
insl
and
inc
cltd
stos
adc
inc
in
leave
xor
dec
jmp
arpl
test
aam
mov
icebp
mov
loope
lcall
pop
out
popa
jb
sub
shll
lret
stos
mov
adc
sub
adc
sahf
or
jg
cli
sar
ss
push
insb
sub
jns
pop
add
cmp
mov
xor
imul
je
xor
imull
imul
mov
sbb
cmp
test
mov
mov
add
stos
jnp
fisttpl
shrb
mov
push
cmp
dec
test
popf
pop
mov
mov
test
jge
movsb
ss
mov
ret
scas
ja
outsb
and
test
fcom
mov
xchg
test
mov
inc
mov
iret
xchg
xor
and
dec
aad
jp
int
mov
cmp
xchg
insb
pop
lret
in
pop
cmp
jnp
mov
sbb
cmovl
aaa
push
mov
int
aad
cmp
xchg
sub
mov
mov
push
dec
or
push
jmp
and
das
insb
mov
mov
insb
mov
rcl
pop
sbb
push
jb
repz
shrl
dec
add
xor
movsl
in
movsb
hlt
leave
sub
out
cs
dec
cmp
push
sub
fs
lret
test
add
xchg
inc
outsb
out
or
hlt
test
lcall
pop
aad
xchg
stos
xchg
push
jecxz
or
test
and
fdivr
negb
xor
lea
pop
scas
xchg
fidivrs
and
push
enter
cmp
jmp
and
jmp
cltd
int3
push
cmc
sbb
lods
scas
xchg
mov
int
sbb
testl
loopne
out
jl
popf
push
lods
test
clc
rorl
sub
or
cmc
mov
insb
hlt
pop
cmpsb
jecxz
fiadds
push
cmc
and
clc
negb
int
rcl
inc
jne
add
stc
jns
subl
mov
jp
in
rol
fstpt
inc
dec
xchg
loop
sbb
pop
and
mov
jb
fisubl
rolb
xchg
mov
jmp
test
sub
iret
pop
in
and
mull
and
ret
push
dec
arpl
loopne
or
or
add
jae
dec
fwait
lret
imul
or
cmc
mov
movsl
vphaddudq
scas
push
es
cli
xchg
cs
mov
xchg
test
cmc
in
int3
mov
mov
or
mov
lods
mov
add
xor
and
add
jle
dec
bound
hlt
mov
sbb
cmp
xor
add
mov
adcb
faddl
dec
insl
push
add
mov
push
cmc
push
xlat
pop
mov
mov
cwtl
daa
lret
test
push
inc
push
aam
mov
popf
in
xchg
push
pop
mov
fbld
xchg
adc
shld
out
adc
push
cs
pop
jb
arpl
inc
dec
sub
repnz
add
sbb
test
lea
pop
or
pushf
sbb
sbb
sbb
push
or
ja
jnp
push
test
adc
fdivr
ret
and
add
test
rorb
push
mov
mov
or
int
repnz
mov
orl
outsl
add
pushl
sbb
int3
movsb
inc
test
stos
enter
or
jbe
fbstp
insl
jmp
lret
push
push
repnz
cli
stc
es
mov
adc
xchg
mov
stos
lds
jmp
cmp
jp
sub
sub
lcall
pop
push
mov
popa
test
fnsave
test
xchg
aaa
insl
sub
fidivrs
xor
bound
xchg
cwtl
dec
mov
pop
dec
pop
sub
xchg
loopne
movsb
scas
mov
fs
roll
cld
fadds
das
adc
repnz
push
cld
out
test
mov
lock
das
push
in
daa
fs
nop
aam
adc
inc
hlt
mov
jl
mov
jecxz
shl
xor
mov
adc
cmp
or
ficomps
inc
ljmp
stos
pop
les
dec
xchg
aaa
rcll
add
leave
popf
xchg
ret
outsl
xchg
loop
outsl
in
mov
rcrl
inc
orb
mov
and
mov
popa
add
ja
jmp
and
xor
push
in
bound
xorb
add
cwtl
pushw
leave
cmc
add
fadds
and
jp
jae
jl
xchg
inc
inc
jns
mov
mov
and
sti
mov
pop
or
add
test
arpl
test
lea
jae
sahf
xchg
fs
push
es
or
and
test
xlat
push
and
icebp
loope
xchg
pop
dec
xor
frstpm(287
cmpsb
test
stos
inc
xchg
push
call
adc
test
fdiv
sub
rorb
out
movsl
lret
rorl
inc
xor
outsl
mov
lods
lahf
popf
push
sub
xchg
mov
js
dec
cmpsb
bound
pusha
call
jle
out
lcall
lret
sbb
or
inc
cwtl
xor
add
push
test
das
cmpsl
mov
dec
shl
std
fidivs
fdivp
sbb
leave
ret
cmp
ret
adc
xor
dec
aam
enter
ljmp
push
add
cmp
jbe
mov
add
jl
aaa
jl
push
sbb
adc
and
mov
mov
jbe
lahf
adc
ret
in
sbb
lea
push
test
iret
push
dec
ljmp
sti
and
sahf
adc
fldenv
pop
test
sahf
gs
es
je
mov
loope
push
push
and
xchg
popf
int
into
or
inc
sahf
call
inc
xor
inc
shlb
jmp
lahf
push
hlt
inc
jbe
scas
xchg
gs
aas
nop
mov
sbb
pop
es
mov
inc
pop
jns
movsl
fsub
das
ss
inc
mov
jbe
aam
cmc
mov
pushf
xor
adc
mov
jmp
mov
and
xor
sbb
in
sub
or
lahf
stos
xchg
lods
dec
div
jl
or
sbb
rcrb
jge
push
orb
loop
add
imul
loope
aad
pop
roll
imul
push
outsl
lods
ds
sbb
sub
jno
ss
pop
inc
popf
mov
lock
adc
jmp
xlat
clc
and
out
add
or
pop
rcl
mov
sub
inc
sub
enter
push
push
fldenv
mov
sub
imul
push
cmc
mov
cmp
ret
or
or
sbb
cmc
sti
mov
mov
adcl
cmpsb
xchg
subb
addl
sbb
sbb
xchg
xor
icebp
shll
or
mov
pop
arpl
push
andb
int
mov
movsl
adc
add
lods
push
adcb
dec
inc
jae
xchg
and
pushf
stos
sub
jae
and
add
mov
ss
stos
lds
adc
jae
cmp
add
loop
mov
adc
mov
pop
int3
jbe
in
mov
xor
clc
push
or
jbe
dec
push
pusha
fcmovnb
xchg
cmpsl
ja
inc
test
mov
sub
out
jo
rcrb
ds
xlat
mov
mov
bound
lahf
into
int
into
push
xor
imul
arpl
stos
push
pop
xor
shll
int
cld
sub
pop
cmpsb
movsl
mov
lods
mov
loop
shr
xchg
and
dec
int3
sbb
jmp
loope
mov
mov
dec
mov
test
daa
ret
mov
fstl
sbb
lods
aaa
pop
int3
mov
pop
icebp
lcall
fwait
leave
pop
or
cmc
pop
and
jb
push
push
inc
pop
mov
shll
inc
jge
fsubs
pop
fidivrl
lret
mov
mov
fldl
fiadds
xor
add
xor
das
bound
mov
aaa
push
adc
pop
inc
dec
push
sbb
jl
dec
imul
mov
jnp
leave
cmpsb
call
gs
fists
cmc
inc
pop
xchg
mov
mov
mov
sub
adc
mov
xor
xchg
stos
out
jl
outsl
inc
into
mov
mov
add
sbb
cmpsl
fstl
add
and
out
les
jno
ret
or
cmc
inc
sahf
stc
mov
sub
mov
mov
xor
rorl
lea
lret
lcall
push
xor
xor
cmp
xor
mov
fcoms
in
mov
xor
push
mov
stos
jge
mov
and
movsl
sahf
das
mov
shll
and
loope
ljmp
int
mov
sub
adc
lret
or
jo
insb
mov
jl
lahf
inc
gs
or
gs
or
sub
cli
icebp
adc
fcomps
push
aad
mov
cmp
sub
cmp
daa
inc
and
xchg
adc
int3
cwtl
arpl
stos
push
cmp
push
stos
or
xchg
xor
ret
out
xchg
ficoml
loop
mov
scas
insb
mov
loope
faddp
sbb
pop
arpl
mov
lahf
add
inc
mov
daa
stos
inc
mov
les
xor
push
out
mov
or
mov
fldenv
test
es
lds
ss
pop
xlat
jecxz
loope
adc
push
pop
into
fimull
cmp
cmpsb
les
sbb
cld
orb
or
xchg
jg
repz
xor
pusha
lock
sar
std
mov
fcompl
fsts
and
jg
and
sub
adcb
nop
je
pop
out
mov
mov
popa
cmp
pop
dec
js
es
lods
add
insl
inc
xchg
outsb
xchg
lret
stos
inc
jnp
xor
pop
xor
outsl
sahf
add
fistl
xor
int
or
xchg
dec
das
ss
dec
add
nop
jo
jo
roll
xchg
xchg
push
xchg
sub
push
out
xor
and
dec
lds
sub
adc
mov
sub
mov
out
jnp
jl
push
sbb
fwait
jno
cmp
pop
cld
nop
into
push
call
fldt
fs
cwtl
lds
jnp
dec
inc
stc
ss
frstor
add
mov
shlb
push
or
pushl
push
enter
in
sub
xlat
cmpl
sahf
and
pop
jge
pop
sub
out
sub
hlt
popf
mov
xor
mov
outsl
int3
inc
outsl
addr16
aam
adc
or
cmpsl
cmp
xor
inc
push
enter
scas
stos
dec
and
scas
push
mov
push
push
sahf
int
or
dec
jp
or
push
imul
cmp
je
dec
jno
add
scas
xor
clc
pop
push
loopne
mov
dec
add
pop
ret
stc
dec
add
callw
xor
loope
adc
cmp
or
dec
out
fcomps
lock
cmp
lcall
dec
dec
fildll
xchg
jne
jp
aas
push
adc
dec
ret
jae
fwait
xor
in
and
test
jns
cmp
fbstp
pop
sti
fdivrs
sub
pop
pop
ret
inc
add
js
in
sar
ja
pop
xchg
xor
fs
xchg
test
and
loopne
aam
jecxz
or
rorb
push
add
pushf
jecxz
and
sub
dec
mov
xchg
mov
sbb
stos
fxch
mov
out
inc
pop
arpl
inc
enter
xor
pushf
sar
ljmp
xor
jne
insb
clc
and
xor
dec
fldt
pop
in
daa
adc
ds
lahf
cs
aaa
and
jp
enter
aas
pop
xlat
into
mov
mov
in
filds
popf
jno
pop
scas
sub
jmp
pusha
xchg
mov
ds
dec
lea
int3
insb
out
push
scas
loope
daa
jno
dec
fisubrs
adc
cmpsb
aaa
sbb
clc
leave
jb
sti
outsl
rorb
ja
and
es
sbb
lock
icebp
daa
inc
jmp
mov
mov
mov
inc
pop
fsubrl
push
lock
fcoms
jnp
add
pop
xor
mov
es
mov
scas
push
add
inc
or
lock
mov
mov
es
movsl
mov
stos
test
jo
xchg
ja
out
push
cltd
outsb
test
dec
or
mov
lahf
cmc
add
cmc
sbb
sbb
icebp
adc
out
testb
inc
jg
dec
scas
das
dec
out
lock
leave
imul
push
ljmp
ds
lods
inc
or
push
call
mov
stos
jne
test
ja
std
vpunpckhdq
hlt
adc
xrelease
or
or
jg
hlt
imul
sbb
out
xor
sub
test
dec
test
cs
push
xchg
lods
add
mov
adc
mov
rclb
sbb
xchg
sub
mov
addr16
mov
push
test
jle
out
jp
cmp
aaa
in
out
push
lods
add
mov
testl
addr16
movsb
roll
jg
pop
jg
mov
mov
jge
mov
call
push
lcall
int3
fistpl
out
jecxz
inc
jae
mov
dec
add
imul
push
mov
sub
stos
scas
dec
jno
stc
subb
pop
test
jp
popa
pushf
and
popa
mov
xor
outsl
push
jae
insl
dec
ret
out
pusha
movsl
add
xor
cmpsb
jno
push
xor
fmul
dec
mov
pusha
inc
icebp
mov
dec
mov
pop
out
mov
daa
inc
push
adc
cmp
popf
cmp
stos
adc
lods
mov
ljmp
nop
push
roll
jp
test
daa
jle
lahf
push
or
push
or
les
sbb
sbb
xchg
mov
subl
fidivl
test
xor
and
or
sbb
pop
fs
adc
movsb
sub
addb
aaa
mov
ja
mov
sbb
mov
jno
dec
xor
pop
push
leave
sub
mov
out
inc
into
cmp
sbb
or
not
loop
popf
loope
jae
and
or
push
into
mov
and
cmpsb
pusha
cmp
stos
dec
mov
dec
dec
ja
imul
pop
in
sarb
and
ret
add
add
jle
and
xor
aad
jle
sbb
pop
mov
lods
or
jnp
sti
pop
fsubrs
in
mov
dec
adc
ret
sbb
dec
out
pop
pusha
ljmp
mov
sub
arpl
dec
xchg
mov
dec
aas
inc
push
test
sub
sti
fdiv
xchg
push
push
scas
jo
mov
jl
fcomps
lret
sbb
repnz
xor
sub
rcll
xchg
cmpsl
and
ds
and
hlt
pop
mov
ficompl
out
push
adc
cltd
pop
or
xchg
lret
gs
xchg
scas
adc
push
das
sub
xchg
lods
pop
ret
xor
mov
fbstp
mov
or
fnsave
pusha
push
xor
and
and
jno
mov
sarl
insl
outsl
aas
es
adc
or
or
movsl
stc
xchg
mov
and
lea
mov
fistps
stos
add
cwtl
stos
push
mov
jne
cli
dec
cmp
in
xor
dec
push
jmp
xlat
js
cmp
aas
cs
inc
inc
xchg
and
mov
dec
mov
test
clc
lock
jns
pop
xchg
dec
sub
imul
sub
pop
xor
cmp
das
pop
push
xchg
bound
adc
js
adc
iret
and
lds
cmp
push
xlat
xchg
ss
aas
push
pop
popl
adc
mov
xchg
pop
mov
inc
add
stos
das
fstpt
sub
leave
rcr
lcall
pop
and
mov
push
jmp
js
sbb
sbb
pop
in
lcall
ds
xchg
mov
cmpb
ret
icebp
in
dec
inc
lret
cmp
jb
and
into
mov
or
inc
dec
or
adc
or
hlt
js
shl
jae
fdivr
nop
js
movsl
daa
ret
ror
popa
or
insl
divl
lea
popa
mov
cmp
nop
and
repz
xchg
aad
adc
adc
lcall
jae
cltd
dec
sub
dec
shl
insw
or
adc
adc
jb
fs
inc
hlt
and
les
push
pop
repz
inc
jle
fwait
stos
inc
xchg
lods
mov
dec
push
movsl
lret
scas
sub
xor
ljmp
outsl
stos
cmp
mov
cld
movsl
mov
xchg
add
out
mov
cmp
pusha
arpl
xor
insl
cmp
mov
cwtl
jne
das
loopne
adc
xor
arpl
lock
mov
push
adc
add
lods
stos
mov
scas
mov
addl
imul
bound
cmpsl
addb
xchg
aas
mov
or
ret
imul
pushf
mov
hlt
outsb
xchg
aad
int3
mov
add
leave
mov
xor
jl
fdivl
addr16
jne
cmpsl
sub
movsl
cmpsb
adc
cs
hlt
mov
dec
in
xor
rcrb
mov
mov
or
cwtl
outsb
aaa
push
out
pop
loop
xchg
pop
jno
arpl
fs
mov
sbb
fwait
adc
loop
inc
int3
push
stos
hlt
ds
lds
mov
das
loop
adc
cmp
iret
movsb
loope
pop
push
push
dec
test
popf
movsb
cmp
aaa
mov
dec
out
aam
insl
xor
sub
mov
test
pop
xor
mov
lock
fmuls
add
add
stc
cmpsl
lea
insb
lea
test
cmpsb
ljmp
sub
pop
mov
inc
xor
mov
leave
xchg
pop
add
movsb
decl
add
hlt
imul
or
mov
lods
adc
or
data16
sub
xor
mov
dec
xor
xorl
mov
enter
push
sub
pusha
popf
adc
pop
sub
xor
jmp
addr16
into
add
hlt
sarb
and
sub
mov
or
ljmp
add
leave
jae
jnp
test
xchg
adc
scas
lret
adc
int3
jne
mov
sbb
or
jns
sub
fcmove
mov
imul
stos
scas
jb
cltd
subb
inc
xor
ljmp
push
insl
out
in
mov
mov
js
add
push
add
test
scas
jne
ja
dec
pop
xor
mov
das
mov
pushf
imul
and
stos
dec
push
mov
mov
test
cmpsb
rcl
pusha
mov
aad
cmp
fimuls
arpl
das
in
mov
cmpsl
pop
dec
iret
push
jb
mov
out
mov
scas
addr16
aad
dec
pop
dec
lcall
sbbl
xchg
aam
mov
scas
fucom
fidivrl
ret
mov
ss
fmull
lahf
decl
repnz
fdivrs
je
popa
mov
cmp
mov
dec
sti
mov
insl
inc
ficomps
cmp
mov
leave
add
loop
mov
leave
nop
sbb
in
xor
rol
adc
push
sbb
scas
std
mov
andl
xchg
lea
cmpsl
and
rcr
aaa
mov
mov
push
jne
lods
inc
les
cmp
dec
hlt
loope
pop
dec
loope
mov
repnz
and
xor
mov
sub
test
mov
add
outsl
cmpsb
in
aam
das
iret
incb
and
dec
sbb
and
in
pusha
rclb
aad
int
iret
and
pusha
sbb
cld
cld
decb
mov
icebp
inc
pop
dec
sub
sub
xchg
pop
and
adc
sahf
cmp
sbb
std
add
iret
bound
sbb
ret
call
movsl
mov
out
ds
xchg
xor
das
mov
gs
sub
and
push
lret
jne
ret
push
out
pop
add
or
jno
mov
dec
fidivl
aas
and
dec
insb
stos
add
pop
outsl
pop
or
mov
jmp
sub
mov
sbb
enter
mov
pushl
add
movsl
out
repnz
repnz
fiadds
out
mov
mov
xlat
jmp
cmp
out
sub
mov
add
in
mov
insl
stos
mov
jle
das
xchg
cltd
mov
and
adc
cli
stos
adc
adc
in
push
cmp
enter
xor
add
jbe
cmp
das
lcall
pop
cmpsb
inc
into
popf
adc
sub
and
test
xor
xor
fsubl
and
jecxz
cld
filds
sub
mov
xchg
out
dec
int3
rorl
sti
mov
fmuls
clc
adc
adc
mov
mov
gs
arpl
in
mov
push
clc
in
xor
icebp
aaa
loopne
scas
push
inc
lods
jge
aad
sub
sbb
test
or
repnz
add
aas
repnz
out
pop
pusha
xchg
mov
push
mov
lds
xchg
pop
sub
fs
push
adc
add
subl
aaa
cmp
jmp
gs
insl
pop
xadd
popf
test
add
xchg
lahf
jmp
or
cs
jbe
pop
fs
jnp
jmp
cmp
and
add
repnz
push
dec
and
test
adcb
xorl
daa
xorb
mov
dec
movsb
cmp
sbb
xchg
lea
enter
xor
mov
imul
or
push
sub
iret
jg
call
mov
enter
adc
jge
jne
add
popf
lds
cltd
add
roll
dec
rcl
inc
adc
cmpsb
call
xchg
cmp
dec
enter
pop
test
inc
xor
scas
movq
inc
sbb
jmp
inc
in
dec
xchg
add
dec
dec
ds
imul
mov
mov
xchg
movsl
pop
pop
xor
cmc
imul
into
nop
mov
dec
push
pop
or
mov
xchg
pop
dec
cmp
jecxz
lea
cmp
cmp
xorl
mov
loope
cmpsb
repnz
inc
rol
aas
push
dec
outsb
loope
int3
ljmp
jae
fs
cmp
stc
sbb
pusha
push
in
inc
mov
bound
sub
fs
int3
jmp
add
xchg
mov
ret
shlb
pop
sub
pop
inc
and
mov
cmovp
xchg
ficompl
pop
sti
fstpt
or
xor
mov
shrb
sbb
mov
icebp
out
adc
dec
bound
mov
jnp
leave
cwtl
pushf
push
mov
cmc
addl
xor
addr16
or
mov
pop
pusha
sahf
pushf
push
rorl
jno
out
ror
stos
imul
push
push
xor
lock
mov
call
cmpsb
idivb
pop
insb
sbb
jle
jne
mov
cs
cwtl
cmp
rorl
pop
int
les
mov
addr16
or
push
ljmp
push
xlat
cmp
inc
jmp
fidivs
repz
push
je
sub
aad
arpl
push
sti
ja
jmp
divl
dec
rolb
js
adc
dec
mov
add
outsl
xor
mov
inc
mov
xor
xor
negl
pop
repnz
rcll
xchg
dec
testl
arpl
cwtl
fcmovnu
xor
lret
gs
fdivrs
les
push
mov
fsubr
test
ds
lds
int
std
and
andb
cmpsb
stos
ret
nop
push
pop
push
add
jnp
and
mov
lcall
mov
mov
dec
mov
mov
sbb
adc
lret
mov
jmp
jmp
dec
sub
pop
scas
inc
lock
bound
hlt
cmp
mov
pop
pop
cmp
ret
or
push
jl
or
adc
pushf
stos
sahf
hlt
and
adc
mov
mov
mov
sbb
idivl
mov
mov
pop
pusha
sti
pusha
jge
jb
xchg
sbbl
add
mov
mov
loopne
daa
mov
rcrb
int3
push
sub
push
iret
adc
mov
popf
out
push
out
pop
stos
xor
pushf
repnz
repnz
test
cli
xchg
test
jg
push
loopne
aaa
fimuls
inc
dec
inc
das
dec
cmp
das
mov
jecxz
dec
fs
subl
cmpsl
inc
pop
mov
stos
fwait
lock
sub
or
sbb
and
mov
inc
inc
mov
outsl
ret
jp
out
decb
xchg
sub
ret
dec
or
adc
out
sub
das
cmp
or
xor
jne
mov
xor
fs
cld
stos
mov
aaa
std
or
jbe
in
outsb
sti
jp
aas
cmp
sbb
adcl
cmp
xchg
xor
fptan
dec
lods
mov
jno
sub
ljmp
fwait
ret
test
xchg
pop
stos
cs
ret
cs
cmp
dec
jnp
sub
mov
mov
push
subl
mov
icebp
add
jae
mov
imul
adc
shrl
stos
aas
mov
push
scas
or
jbe
shll
mov
or
pop
pushf
or
decl
icebp
push
jge
mov
sbb
add
pop
jp
and
into
in
mov
and
jl
arpl
mov
into
mov
cwtl
sbb
dec
test
cmp
mov
cmc
cmp
xchg
pop
les
dec
popa
hlt
mov
cmpsl
test
jo
xor
jnp
cmp
jb
test
cmp
ja
aad
jg
test
loope
pop
aas
and
dec
movb
outsl
dec
xor
jp
mov
dec
lret
fisubl
leave
repz
cmpsb
ss
pop
shll
in
ficomps
clc
dec
inc
rclb
pop
mov
outsb
mov
hlt
imul
or
notb
mov
gs
loope
enter
mov
orb
and
jns
xchg
cltd
inc
jb
pop
cmp
fwait
and
out
enter
add
jp
inc
xchg
xor
sbb
dec
clc
xchg
lea
bound
aam
mov
mov
xchg
sbb
in
xor
cmp
outsb
xchg
mov
in
sub
xor
sti
push
ljmp
mov
sarb
mov
mov
ss
cmp
loopne
and
xor
push
sahf
mov
into
mov
mov
add
add
lret
repz
jo
adc
iret
or
pop
jmp
gs
pop
imul
popf
push
dec
xchg
rcll
xchg
nop
sahf
add
repnz
loopne
mov
pop
repz
mov
hlt
out
pop
and
jmp
cs
cmpsl
xchg
inc
adc
cmc
scas
inc
cld
xchg
rol
repnz
sub
mov
and
enter
jno
pop
lahf
adc
adcl
imul
faddp
pop
arpl
scas
into
or
inc
int
pop
jne
xchg
sbb
jmp
or
and
push
mov
cmc
adc
movl
pop
sub
in
loop
sbb
das
aad
pushf
stos
or
outsl
int3
pop
xor
pop
flds
cmp
movsb
rcrb
add
pop
or
cmp
aad
imul
add
int3
scas
xor
popf
jo
out
fbstp
test
pop
dec
dec
xor
inc
mov
push
mov
outsb
insl
ds
pushl
xlat
shlb
xor
add
adc
adc
cmp
shr
or
xor
dec
outsb
mov
mov
gs
insl
xchg
push
ds
mov
push
scas
clc
sub
pop
xor
sarl
fstl
or
xchg
dec
xor
sub
sub
pop
jge
inc
sub
lahf
cwtl
rcrl
mov
sub
mov
mov
or
adc
fdivrl
dec
mov
push
pop
jg
call
sub
out
xchg
pop
mov
out
insb
fiaddl
das
mov
roll
test
js
das
fdivrs
lahf
out
js
cmp
movsb
cmc
mov
mov
fwait
stos
loope
push
mov
hlt
mov
sti
jmp
fwait
lods
mov
enter
popf
ss
pop
or
push
insl
scas
and
rclb
out
sub
mov
xchg
repz
repz
or
nop
js
jmp
xchg
test
movsl
cli
sbb
bound
and
fistpll
inc
lret
shll
rcrb
push
add
inc
hlt
and
pop
mov
les
add
xlat
cwtl
sub
shrl
adc
jle
xor
jne
mov
das
nop
jg
and
xor
orb
xlat
icebp
fbstp
out
stc
bound
mov
sahf
jmp
push
mov
mov
ds
pushf
add
cmp
jg
xor
mov
sahf
mov
jl
and
xchg
mov
xor
out
xor
pop
sarl
xor
add
stos
daa
xor
push
inc
or
imul
and
decb
iret
in
mov
mov
mov
repz
jo
or
cmp
xorl
cwtl
fbstp
jg
les
scas
xlat
sub
xor
xchg
sub
aaa
push
and
or
or
and
xor
pop
jae
cmc
lods
loope
mov
add
test
and
pop
push
stos
lcall
sub
shlb
cmp
insb
xchg
dec
es
shl
cmp
pop
dec
fisubs
add
push
xchg
out
loop
inc
enter
mov
lock
vmovq
cli
roll
data16
adc
es
inc
shl
add
stc
scas
lds
out
cmp
dec
add
pop
gs
movsb
jp,pt
test
mov
inc
dec
sbb
in
cmpsl
lcall
out
push
ret
int
sub
out
mov
pop
out
adc
cltd
cwtl
loop
imul
lock
pop
lock
rcrl
push
scas
and
adc
iret
test
in
bound
jg
ret
cmpsl
jbe
jnp
lea
fidivrs
insl
mov
int3
out
aam
fbld
and
cli
xor
arpl
lods
iret
sbb
ficoms
inc
mov
or
mov
jnp
cmp
inc
lds
mov
pop
in
push
mov
popf
decb
popf
rol
outsb
and
sbb
mov
push
mov
fbstp
int3
sub
test
inc
movsl
leave
sarb
push
inc
add
and
adc
out
jne
dec
sub
std
iret
or
xchg
xchg
jne
fidivrl
jb
pop
mov
xor
pop
jp
push
cltd
push
jnp
inc
mov
ret
mov
and
out
in
jmp
inc
stos
into
loop
and
push
mov
lods
out
rorb
mov
jne
push
xchg
xchg
and
icebp
lret
adcb
or
std
ret
mov
mov
xchg
jge
fisubs
or
outsb
sbb
enter
iret
sbb
lret
test
mov
gs
mov
jg
mov
sti
push
pushf
shrl
loope
cmp
leave
fs
adc
mov
mov
idivl
mov
shlb
out
mov
jp
and
lea
add
xorb
popf
ss
jo
movb
fstps
jl
xchg
inc
repz
es
dec
movsl
push
add
xchg
mov
addr16
adc
fs
xor
sahf
push
aam
inc
or
push
loope
fwait
in
adc
cmpsb
jg
mov
popf
mov
test
je
movsb
pop
mov
lods
mov
hlt
push
clc
adc
inc
mov
loope
test
fcoms
dec
and
sarl
ds
jne
insl
and
cmpb
jg
outsl
mov
push
add
ret
fwait
and
movl
push
inc
jne
cltd
adc
pop
xor
lret
sti
push
dec
xchg
mov
cltd
xchg
sahf
jecxz
mov
ret
adc
lahf
cs
fistps
push
mov
inc
cmpsb
cmp
in
jecxz
or
fstps
lods
sbb
mov
or
push
test
cmpsl
stos
jmp
in
jge
pop
sti
pop
or
jecxz
std
iret
push
sub
jbe
lret
push
push
popa
in
cmpsl
in
adcl
cmpsl
and
fldenv
insb
sbb
mov
jge
imul
outsl
mov
jp
push
jmp
inc
roll
and
lcall
mov
push
and
imull
mov
mov
dec
aad
out
cmp
lock
imul
or
lock
outsb
jbe
inc
hlt
push
loope
aam
xchg
pop
clc
xor
add
push
movb
cmc
mov
addr16
shr
adc
adc
dec
add
gs
mov
mov
xchg
shrl
inc
push
aam
adc
and
sbb
mov
sub
dec
jg
sub
and
pop
jecxz
adc
mov
fidivs
mov
cltd
jg
rorl
lea
sahf
sti
movsl
popf
fisubrs
inc
pop
pusha
jns
jo
sbb
cld
shll
mov
rcl
data16
testb
mov
stc
adc
xlat
arpl
lock
add
int3
mov
outsl
aad
dec
mov
das
pop
inc
es
sub
dec
test
inc
inc
cs
inc
pop
pop
aas
icebp
dec
pop
cmp
xor
fstpt
mov
test
out
mov
outsb
icebp
test
jnp
jne
xlat
inc
addr16
mov
mov
aas
stos
ret
fisttpll
mov
or
jg
aam
mov
push
ret
mov
jno
push
js
push
test
add
jnp
movsb
fcom
add
sahf
push
mov
outsb
sub
movsl
inc
jne
ss
dec
imul
mov
dec
cmp
and
xchg
sub
sub
je
rorl
jge
cmp
jbe
nop
sti
in
push
fldenv
xlat
mov
lcall
mov
xor
sbb
push
aad
and
test
or
out
pop
push
stos
lret
dec
sti
mov
mov
or
bound
out
xchg
xor
imul
jle
and
or
cwtl
sub
cmp
fidivs
inc
xchg
xor
repz
xor
ja
out
adc
mov
inc
arpl
addr16
mov
cmpsb
jmp
add
cwtl
adc
loopne
lods
inc
popl
cli
dec
out
fwait
mov
dec
dec
adcb
sbb
lcall
jecxz
pop
sub
inc
pop
sarl
and
cmp
ret
and
int3
mov
jge
sbbl
and
mov
rcl
sub
pop
or
pop
mov
scas
out
sub
ret
adc
and
mov
mov
fadds
aad
clc
das
std
xor
and
pop
lret
dec
jns
sub
mov
push
xor
or
mov
lcall
in
incl
inc
and
subb
dec
adc
xchg
xor
jp
sbb
pop
idivl
fsubrs
dec
jmp
dec
subb
cmp
pop
test
test
inc
dec
stc
xchg
push
str
sub
pminub
cmp
pop
fildll
in
in
mull
in
or
fldl
mov
lds
push
or
scas
mov
imul
clc
xchg
push
test
jns
add
or
xor
hlt
subb
inc
sub
pop
daa
testl
sbb
bound
subl
test
pop
out
jns
xchg
jmp
xchg
ljmp
mov
lea
xchg
xor
sbb
cmp
jp
mov
aaa
add
cmp
dec
push
or
cld
cmpsl
xor
gs
sahf
insb
or
sbb
adc
cmp
or
imul
adc
sbb
shlb
scas
and
mov
push
jmp
mov
inc
jae
push
movsl
loope
imul
lock
dec
cs
dec
fidivs
cmpb
jecxz
lds
add
pop
mov
stos
in
inc
or
outsb
or
mov
push
ds
fisubrl
mov
int
jno
xchg
or
fadds
cmp
jbe
outsb
pop
lret
lret
fdivrs
fidivrl
into
add
adc
test
lods
sarl
push
cmp
and
fidivrs
xchg
jnp
mov
adc
int
test
lahf
jae
pop
pop
xor
push
inc
dec
repnz
mov
mov
mov
mov
mov
cld
in
push
aad
test
mov
push
out
push
and
sub
aas
mov
mov
mov
fidivl
dec
jae
sti
inc
inc
aaa
xchg
ret
lods
ror
adc
sti
xor
gs
mov
mov
dec
pop
notl
mov
cmp
subb
mov
lahf
dec
or
lock
flds
lods
and
pop
jo
mov
pop
not
add
push
cld
cwtl
fmulp
mov
mov
mov
test
add
adc
iret
std
popa
lods
lock
out
cmp
add
fidivrs
inc
jae
xor
pop
mov
popf
pusha
lock
sti
outsl
mov
scas
or
mov
imul
inc
sbb
lret
push
enter
cmc
dec
jne
dec
cmpsb
mov
push
js
fwait
mov
addr16
push
push
dec
adc
mov
fisttpll
loope
xchg
stos
iret
daa
jns
adc
cwtl
mov
jge
fdivr
in
push
rcll
and
mov
cmpsb
xor
pusha
inc
sbb
mov
mulb
icebp
pop
jno
xor
nop
es
imul
or
xchg
adc
push
jno
mov
push
pop
dec
sub
lret
popa
pusha
fwait
xor
xor
enter
repz
pop
and
aaa
mov
pop
popa
dec
sahf
jnp
movsb
mov
lods
iret
je
in
inc
lods
repnz
iret
loope
inc
sbb
rol
int
cmp
dec
mov
add
int3
push
add
sub
sub
stos
sbb
cmpsl
sahf
sbb
scas
cmpsl
in
cmc
dec
daa
insb
add
into
push
sbb
leave
imul
imul
sub
outsl
add
aaa
pop
push
mov
mov
mov
cmp
mov
int3
adc
pusha
fidivs
mov
enter
jmp
dec
mov
pop
lret
fsubs
cmp
lods
addr16
mov
and
xchg
lock
add
mov
iret
cmp
insl
test
clc
pop
pop
popa
mov
inc
scas
scas
jp
cld
andl
add
push
jo
inc
icebp
out
aad
or
adc
dec
mov
popa
in
inc
or
int3
ja
add
in
lds
and
stos
sub
push
mov
dec
mov
sbb
lds
mov
dec
jp
in
das
rorl
ret
ss
mov
xor
mov
call
test
insb
imul
aad
cmpsl
mov
outsb
or
lcall
mov
loopne
data16
andb
mov
and
push
popf
or
stos
and
std
xor
dec
add
enter
fdivrl
push
push
or
add
sub
ret
xchg
frstor
inc
std
xchg
push
stc
enter
and
test
outsb
and
icebp
test
and
inc
repnz
adc
inc
adc
lea
xlat
or
xchg
arpl
cld
jb
popf
andb
adc
pop
sbb
test
into
cmp
enter
aas
pop
fwait
pop
gs
xor
into
js
push
xchg
mov
into
je
pop
cmp
out
sti
push
fs
mov
and
hlt
iret
lods
sub
outsl
shrb
mov
adc
pushf
add
mov
pop
aad
xor
cmp
je
push
loopne
inc
cmp
push
and
xchg
insb
dec
repnz
ret
mov
cld
mov
push
std
sub
sbb
or
mov
cmpsl
in
xlat
js
pop
pop
lea
push
jecxz
gs
jl
lds
movsb
pop
cwtl
xchg
lods
rorl
dec
mov
mov
xor
sysret
push
xor
shrl
inc
xchg
in
pop
xor
daa
movsb
loop
add
push
xor
sbb
outsl
leave
add
dec
ficompl
loope
cmp
sbb
pop
outsl
jecxz
loope
rolb
xor
inc
mov
xchg
daa
add
add
pop
mov
test
out
jne
movsb
push
pop
insl
lret
test
movsb
mov
pop
push
outsl
push
arpl
dec
ret
inc
add
or
call
inc
sbb
mov
adc
dec
leave
pop
jno
push
pushw
mov
push
jg
pop
jbe
and
shlb
cmp
sub
clc
shll
xor
call
sub
shr
push
ds
xchg
or
out
and
mov
pop
sub
test
in
out
adc
fmuls
enter
pop
scas
ret
ja
orps
sti
shrl
add
adcb
cwtl
les
imul
pop
aad
mov
adc
frstor
cltd
jmp
cmp
mov
cmpsl
dec
je
adc
push
je
cmpsl
enter
pop
dec
xlat
sbb
pop
fincstp
in
icebp
and
adc
cmp
test
cmp
test
out
add
ficomps
jae
bound
lret
fbstp
or
lcall
cmpb
hlt
hlt
aaa
cmp
mov
ret
push
add
mov
pop
rcll
add
sbb
sub
je
je
adc
push
mov
dec
pop
push
and
outsl
add
or
aam
cmp
jg
or
push
jae
movsb
aad
pop
mov
xor
mov
aam
cltd
inc
imul
repz
mov
dec
das
psadbw
mov
push
ficoml
imul
enter
xchg
enter
mov
inc
push
add
out
adc
imul
int
das
popa
mov
out
inc
in
dec
cmc
pushl
aad
nop
cmp
add
jno
xchg
notl
push
xchg
jo
cwtl
daa
jp
sbb
nop
push
cmp
cmp
push
and
xchg
int3
xchg
inc
xchg
sub
fnstenv
mov
mov
call
fidivs
push
jnp
pop
les
ds
scas
stos
mov
dec
mov
loop
and
out
xchg
stos
dec
sub
sub
arpl
dec
ret
scas
xor
jbe
mov
jae
pop
sub
sbb
jle
or
push
sub
mov
in
mov
ja
or
outsb
push
xchg
and
xchg
inc
imul
stc
pop
inc
jne
lock
sbb
loope
xor
dec
adc
dec
and
inc
inc
adc
loope
inc
movsl
mov
loopne
mulb
test
pusha
fistps
push
test
in
jmp
sbb
pop
pushf
repnz
adc
data16
and
dec
test
lods
repz
rolb
sub
pushf
xchg
iret
sbb
testl
push
mov
insb
xchg
xor
cs
mov
mov
push
hlt
enter
add
mov
popa
movsb
adc
outsl
int3
xor
cwtl
dec
out
pop
rclb
adc
aam
mov
cltd
sbb
lock
insb
sarl
jmp
enter
mov
pop
mov
les
imul
mov
aam
push
movl
fs
ss
inc
ret
lds
gs
sbb
mov
js
shlb
lods
cmp
jo
pushf
sbb
test
adc
jns
std
adc
cmp
ss
push
and
jae
add
test
adc
push
shl
xchg
nop
shrl
leave
push
ror
hlt
pop
loope
sbb
out
call
dec
sub
rorb
push
pop
fbstp
cmp
add
adc
lcall
scas
jo
call
sub
mov
mov
mov
push
jb
mov
jns
insl
mov
out
or
jecxz
in
sbb
cltd
jle
mov
cmp
ds
jae
inc
push
addr16
xchg
dec
push
fnstenv
ret
stos
dec
sub
mov
mov
xchg
test
movl
mov
cmp
mov
add
incb
sub
ret
rolb
xor
repz
orb
jge
fiaddl
push
pop
mov
cmp
xlat
jo
mov
mov
rclb
iret
add
sbb
add
imul
out
addr16
cmp
jp
push
adc
and
lret
cmp
cli
mov
lret
and
mov
inc
pusha
or
les
xor
sbb
imul
leave
mov
jge
gs
mov
cmp
lods
mov
fwait
cmp
stc
dec
cltd
mov
jecxz
inc
test
and
mov
xchg
push
insb
cmp
mov
push
or
sbb
inc
ror
aas
stc
push
in
call
jle
mov
sbb
add
icebp
cmc
fs
lods
scas
sbb
sub
pop
xchg
les
icebp
adc
sbb
xor
movmskps
push
mov
data16
mov
inc
rol
jg
movsl
aas
sbb
cltd
fs
jecxz
movsb
sbb
dec
mov
mov
jno
fdiv
in
gs
in
test
and
mov
mov
lahf
cld
inc
xor
popa
sbb
addl
push
fisubrl
in
cmp
or
jmp
inc
fmull
loopew
rcrb
in
inc
cmp
fsubrl
es
int
push
out
lahf
loop
adc
inc
in
jb
cld
aad
iret
es
insl
das
and
add
mov
xchg
ret
push
les
lcall
outsb
flds
pop
jp
push
shrl
stos
xor
xchg
add
movsl
repnz
aad
inc
cmpsl
mov
leave
cs
add
jl
in
mov
sbb
cmpsl
ja
push
adc
lds
xchg
jmp
push
and
inc
iret
lcall
adc
sarl
push
out
enter
cmp
xor
sarl
fidivrl
xchg
mov
ficompl
xor
lock
subl
mov
pop
xor
out
sub
jmp
pop
xchg
stc
pop
in
popa
mov
les
push
adc
rclb
push
xor
mov
mov
sbbl
dec
xor
sti
fs
cmpsl
out
daa
rclb
cmc
push
les
jmp
in
aam
inc
scas
push
xor
jecxz
or
aas
ret
cmp
mov
adc
pop
and
adc
xchg
movsl
sub
cmp
push
dec
aaa
inc
ret
fimuls
add
hlt
fldcw
jbe
pop
shlb
push
mov
lcall
lea
pushf
add
ljmp
data16
mov
cld
jmp
cld
cmpsl
ret
and
sbb
scas
aad
jmp
lock
mov
xchg
push
shlb
dec
cmpl
pop
sub
pop
stc
inc
fnstenv
js,pn
cli
fistps
push
daa
push
dec
pop
mov
or
cmp
pop
pop
in
aas
mov
mov
fstps
pop
out
rorl
inc
push
mov
xchg
iret
fs
addr16
lock
stos
testb
pop
push
mov
xchg
movsb
les
pop
mov
jb
imul
cmp
es
cmp
movb
pop
jbe
repnz
cmc
sbb
lods
inc
std
dec
mov
ds
xchg
xchg
mov
insl
adc
mov
jle
fisubs
out
push
pop
lods
jne
loop
insb
in
dec
mov
bound
mov
and
sbb
pop
adc
inc
and
in
test
mov
sbb
rolb
mov
push
icebp
sbb
cmp
pop
cmp
mov
and
mov
push
cld
ja
pop
push
cmpsb
ss
addl
in
push
pop
imul
aam
out
jno
out
cmpsl
pop
pop
sbb
fldcw
sbb
in
xchg
lahf
sub
mov
cmp
ja
xchg
jmp
mov
push
mov
cmp
mov
xchg
and
xor
sahf
lret
outsb
je
test
sub
adc
adc
pop
addb
out
int
decb
movsb
loopne
inc
imul
pop
data16
push
fs
and
xchg
mov
mov
loope
mov
cmpsl
push
pop
push
sub
int3
out
and
loop
out
xchg
movsb
mov
testb
add
xchg
mov
cld
std
pop
rclb
adc
cmpsl
dec
push
enter
mov
push
jl
leave
push
in
add
xchg
mov
popf
lret
mov
inc
scas
or
sbbl
fldl
out
pop
inc
xor
hlt
imulb
daa
sbb
cmp
pop
pop
test
aam
addr16
test
ss
sub
push
movsl
or
mov
orl
out
out
loopne
xor
int
push
mov
mov
xchg
pop
pop
enter
xchg
xchg
mov
pusha
adc
adcl
int
mov
xchg
inc
mov
inc
adc
jnp
lock
jl
or
inc
daa
lock
dec
adc
jg
out
and
stc
call
mov
jge
lcall
push
xchg
bound
movsl
icebp
jg
imul
push
in
fsts
mov
mov
xor
mov
mov
sub
push
sbb
push
inc
pushf
out
or
imull
test
aam
or
sbb
sub
test
lds
pop
push
call
pusha
test
xchg
clc
cltd
mov
dec
mov
aaa
sbb
sbb
int3
push
in
mov
xchg
jae
dec
jge
es
movsb
jg
dec
pop
ds
or
outsb
pop
mov
and
adc
sti
iret
popf
outsl
int3
mov
imulb
xchg
pop
pop
dec
xor
je
inc
and
push
hlt
in
xchg
push
icebp
imul
dec
add
cli
iret
cld
jo
movsb
test
pop
jg
fdivr
pop
mov
int
fs
lcall
leave
sub
jle
mov
popa
xor
adc
jl
push
fxch
xchg
ljmp
pop
add
mov
mov
flds
mov
push
dec
icebp
lock
imul
aas
nop
sbb
pop
enter
cltd
hlt
test
push
pusha
inc
xrelease
in
push
int3
or
pusha
mov
mov
loope
xor
add
pop
pop
push
dec
sub
mov
push
and
imul
mov
xchg
cmp
out
clc
cld
jl
push
mov
inc
mov
clc
push
fxch
and
test
push
and
out
fwait
mov
sti
outsl
xlat
dec
stos
jnp
iret
mov
dec
lahf
leave
sbb
mov
mov
addb
sbb
cmc
or
outsb
sub
pusha
bound
shll
and
mov
jge
enter
jge
cmp
fs
dec
call
jle
out
sbb
inc
inc
cs
or
ret
imul
mov
dec
push
stos
mov
test
ljmp
push
jge
inc
xor
mov
jmp
pushf
add
jne
out
test
pop
pop
jbe
scas
xchg
sub
mul
sbb
xchg
xchg
ja
clc
sbb
and
push
aam
jbe
mov
cmp
sbb
stos
nop
stos
or
jg
shrl
mov
xchg
xor
push
adc
pop
pushf
cmp
push
cltd
jp
icebp
test
subb
or
pop
jns
push
into
pop
xchg
jbe
sub
nop
xor
mov
cmc
int
push
jnp
fstpt
xchg
and
sub
icebp
dec
out
mov
sarb
je
pop
inc
mov
dec
inc
jbe
es
push
or
or
leave
insw
xchg
lret
inc
adc
xchg
adcb
mov
das
xchg
push
mov
cs
ja
mov
xor
imul
mov
push
jo
add
pop
jbe
iret
popf
cld
mov
cmp
inc
in
xchg
aam
das
out
jbe
xchg
in
jecxz
ficompl
sub
lods
adc
mov
lret
mov
pop
and
jae
pop
cwtl
xor
sub
mov
in
add
dec
sub
cmp
je
xor
in
ret
aaa
sub
lret
outsl
mov
sbb
cmp
ds
notb
sahf
push
jnp
mov
scas
pop
data16
xchg
pop
mov
xor
out
cmpsb
rorb
and
cmpsl
insl
mov
scas
xlat
cmpsl
pop
xchg
sbb
xchg
cmovge
hlt
adc
pusha
sub
inc
mov
dec
mov
pop
push
aaa
in
sub
mov
jnp
movsl
dec
xchg
dec
mov
aad
scas
jmp
mov
xor
xor
or
sub
mov
aad
lock
xchg
addl
pop
push
push
mov
arpl
or
mov
rclb
sbb
scas
mov
mov
out
cli
ret
mov
out
push
push
jle
cmp
mov
sub
push
mov
shrl
mov
aas
and
mov
sub
in
inc
stos
into
mov
push
stc
imul
or
dec
pop
jbe
js
into
pop
iret
pop
and
or
test
jae
fnstcw
outsl
sarb
fnsave
fisttps
decl
pop
in
jle
xchg
inc
cmp
mov
pusha
rorb
movsl
sub
out
outsl
mov
orl
mov
adc
or
test
lahf
adc
imulb
mov
push
mov
mov
int3
std
push
shrl
xchg
xchg
inc
mov
jle
jno
add
dec
cltd
gs
jno
popa
sbb
or
cmc
and
jp
mov
frstor
imul
jae
sbb
mov
inc
adc
adc
and
pop
and
jo
in
sarl
subb
div
aas
sbb
cmpsb
jb
clc
ja
xchg
mov
mov
jl
outsl
sub
cmc
xorl
les
scas
and
jns
lcall
into
iret
movsl
inc
cmp
adc
mov
jnp
bound
rorb
into
scas
rcrb
cli
mov
movsb
jae
sub
pop
sbb
mov
and
fsubl
fcomps
lahf
das
cmpsl
xor
sarb
insb
dec
shrb
pop
pop
pushf
sti
push
out
mov
add
mov
push
inc
stos
or
cmovb
add
mov
test
mov
or
inc
mov
dec
outsb
pop
jae
jae
int
jle
sbb
mov
arpl
jo
dec
repnz
mov
xor
loope
or
pop
sbb
mov
movsb
jl
lret
xchg
adc
insl
lods
mov
inc
das
sub
aad
fwait
cmp
aam
push
addr16
adc
jl
mov
inc
pop
int
insb
inc
inc
lods
lret
ret
nop
add
jg
idiv
adc
sub
out
and
inc
xchg
sbb
les
int3
or
fbstp
push
and
jle
xchg
sbb
jne
or
mov
mov
imul
sti
jae
lret
pop
and
scas
test
icebp
and
inc
xchg
sbbl
lds
fs
pop
xchg
and
insb
lea
add
and
jno
scas
xchg
jge
mov
sbb
fnsave
idivb
mov
cmp
cwtl
or
shrl
arpl
mov
and
push
xchg
pop
into
push
sbb
xchg
decl
pop
out
adc
adcb
iret
sbb
dec
mov
fwait
loopne
add
aaa
ret
sbb
jne
sti
repnz
cmpsb
scas
fwait
dec
sbb
shl
lret
jae
mov
jb
inc
add
jecxz
xor
adc
jno
std
inc
in
into
and
inc
mov
jbe
dec
std
sahf
mov
jmp
popf
arpl
addr16
ret
sarb
addl
pop
cwtl
stc
mov
mov
mov
cmp
arpl
adc
mov
and
add
mov
sbb
in
push
dec
sub
mov
sbb
push
inc
sti
and
repnz
je
cmpl
inc
or
loop
sbbb
xchg
mov
cmc
aam
lcall
lcall
pop
or
mov
mov
adc
xchg
pop
test
lods
cmp
add
inc
mov
dec
jmp
push
push
inc
nop
scas
divl
inc
mov
or
xchg
fdivrl
push
lcall
jmp
sbb
sti
ja
jge
psrld
aam
xor
xchg
lcall
repz
xorl
cld
or
lahf
les
add
mov
pop
adc
into
and
mov
jge
adc
enter
popf
hlt
inc
bound
mov
lea
insb
sbb
xchg
xor
std
out
inc
icebp
pushf
jecxz
cs
rcrl
xchg
and
jnp
sbb
scas
mov
adc
iret
inc
inc
jbe
fwait
popf
push
stos
inc
fs
xor
gs
ret
mov
xor
and
push
lods
daa
mov
ss
pop
shrb
pop
std
cmc
lods
cs
aas
stos
adc
nop
lret
scas
inc
in
lods
jp
sub
mov
add
das
dec
pand
outsb
and
stos
jmp
out
inc
fdivl
jl
rcrl
ljmp
out
outsb
in
aaa
aad
push
pop
xor
mov
mov
inc
adc
lea
xchg
and
sbbb
sub
inc
adc
in
xchg
ficoms
inc
movsl
xor
adc
and
das
and
in
adc
int3
jg
fcom
and
nop
sbb
arpl
ljmp
dec
loope
pop
adc
cmp
mov
jecxz
lahf
bound
aad
cs
xchg
out
icebp
fnstsw
mov
inc
sbb
in
sbb
jb
sbb
pop
repnz
test
push
mov
dec
cli
imul
in
shrl
mov
in
scas
sbb
hlt
mov
fsubl
mov
popa
testb
fdivs
test
push
scas
adc
jmp
in
push
inc
dec
add
adc
jae
cmp
lock
aam
cmc
push
cmc
sub
xor
push
imul
add
mov
in
mov
push
popf
iret
xchg
xor
daa
pop
mov
add
push
lea
fildl
sbb
aad
inc
xchg
addr16
jge
arpl
out
sub
xchg
mov
cwtl
push
xchg
xor
and
jo
fwait
xor
iret
jno
jmp
pop
fucom
push
mov
xchg
lret
bound
cltd
pop
sub
cmp
dec
scas
mov
repz
cmpsl
sahf
cmp
mov
cmp
and
jns
jmp
or
push
inc
and
pop
mov
insb
out
fmuls
sub
test
fisttpll
xor
jle
sbb
into
lcall
lea
dec
push
lret
jmp
mov
jg
stc
xchg
sub
int
clc
adc
out
dec
dec
sbb
adc
pop
in
inc
mov
xchg
mov
jne
repz
cmp
xchg
pop
fsubl
dec
pushf
pop
shr
call
mov
mov
sbb
mov
mov
aas
mov
sarb
out
ret
jns
into
in
mov
jb
std
sbb
cmp
inc
lahf
scas
jge
push
fidivrs
cmpsb
mov
outsl
es
cmp
add
pop
fwait
add
insb
arpl
xor
mov
xlat
mov
adc
scas
xor
or
inc
add
ret
jnp
xchg
aad
fwait
cmp
lret
repnz
add
out
stos
lahf
xlat
lds
adc
sbb
jo
jge
jge
push
scas
mov
pusha
ss
or
outsb
xchg
inc
test
testl
adc
fstl
adc
int
cwtl
test
lods
mov
push
addr16
sahf
mov
idiv
das
rcl
xor
xchg
out
test
mov
ret
and
add
dec
xor
xlat
sub
sbb
filds
cmpsl
test
cmpsl
jecxz
mov
test
cmpsl
lods
and
popf
pop
dec
jb
daa
aad
cs
pop
dec
dec
fwait
jg
fiadds
aam
jecxz
js
mov
ljmp
daa
inc
mov
js
cmp
add
adc
or
inc
or
add
add
inc
mov
outsl
add
jno
cmp
inc
shrb
mov
test
mov
dec
dec
mov
in
push
mov
dec
insl
int3
dec
leave
flds
repz
cli
cld
and
add
scas
jge
cltd
dec
push
lcall
rcll
sub
or
jne
push
aas
fs
cmp
xlat
dec
lcall
ljmp
adc
in
mov
mov
stos
add
sbb
jmp
aam
das
loope
ret
and
popa
add
shl
fcomps
cmp
es
loope
cltd
adc
push
cmpb
pushf
es
sbb
fildll
mov
mov
sbb
adc
cli
and
adcl
jecxz
jle
xchg
pop
cmp
hlt
iret
fstl
push
push
cmpl
bound
xchg
fsubrs
shlb
repz
push
adc
push
and
xchg
pop
je
jmp
inc
stos
nop
mov
stos
add
adc
pop
sbb
inc
pop
loope
lcall
xchg
jge
add
pop
loop
pop
fsubs
stos
and
popf
out
adc
and
lods
cmpsb
je
and
sbb
xor
outsb
repnz
sub
int3
movq
xchg
dec
push
jl
lods
pop
mov
jecxz
fldt
xor
pop
repz
and
popf
negb
lcall
sbb
push
sub
arpl
data16
xchg
mov
negb
retw
insl
xor
xchg
push
imul
mov
fsubrl
jnp
xchg
testb
pop
sahf
mov
cld
push
mov
mov
stos
jl
aaa
ret
out
sbb
bound
pop
fsub
shl
sahf
mov
push
aaa
lcall
mov
inc
pop
jge
gs
ja
jne
fcoms
cmp
loopne
sbbl
inc
sub
jne
cmp
pop
adc
pop
mov
and
add
add
incb
xor
jne
pop
mov
insl
insl
ljmp
test
cli
jbe
jecxz
mov
push
lret
test
test
scas
stos
xor
push
inc
lods
outsl
stos
xchg
add
faddl
fistps
outsl
push
aad
shr
jno
in
push
roll
xor
cld
cmc
fwait
mov
test
mov
loop
lods
popa
movsl
fs
mov
gs
sub
xchg
lretw
dec
shll
mov
jbe
frstor
arpl
xchg
adc
cltd
xchg
sbbb
inc
mov
aas
frstor
mov
stos
xchg
mov
std
cs
sub
jo
cmpsl
pop
cmp
sub
sbb
call
shrl
es
or
cmp
sub
sbb
aad
das
cmp
insb
popa
cmpsb
jae
fnstsw
ret
mov
jle
cmp
popa
dec
cltd
addl
addr16
xor
mov
bound
xchg
shr
sbb
inc
daa
popa
or
cmp
mov
mov
pusha
inc
les
popf
aad
roll
push
loopne
mov
test
add
jecxz
aas
and
pusha
push
push
cmc
push
pusha
popf
fsubrl
mov
rolb
inc
mov
adc
icebp
cmpsb
adc
dec
sub
pop
mov
lea
push
jb
jb
dec
std
xor
jbe
testb
inc
fisttpll
mov
adc
push
or
fdivl
pop
sub
stos
jnp
push
or
jo
movsl
icebp
test
jle
jg
xor
or
mov
leave
scas
rorl
xchg
sbbb
lret
into
push
and
xchg
data16
push
add
sarl
or
neg
jns
gs
bnd
adc
cmpsb
xor
ljmp
out
in
or
adc
sti
mov
xchg
xchg
stc
fsubp
mov
pop
pop
xchg
mov
jnp
mov
divps
pop
jmp
dec
shr
fdiv
outsl
mov
ljmp
gs
shll
packuswb
imulb
or
cltd
adc
mov
sti
pop
and
dec
popf
lret
pop
adc
pop
into
mov
ja
cmp
mov
xor
push
inc
movsl
std
lcall
in
ret
xlat
notb
mov
mov
xchg
jnp
lods
dec
scas
loop
imull
cmp
jno
bound
push
push
addr16
call
jbe
xorl
into
jg
nop
inc
sbb
test
mov
jo
shll
rorb
arpl
jbe
cwtl
in
cmc
push
xlat
xchg
stos
stos
sbb
ja
lods
insl
inc
pop
xlat
xchg
mov
push
iret
sbb
je
ja
mov
outsl
mov
mov
popa
jne
aam
or
mov
or
shlb
xchg
or
xchg
and
pop
fidivrl
and
insb
cmc
xor
popf
or
aas
adc
mov
inc
mov
sbb
mov
xor
xor
push
jnp
mov
jne
mov
test
call
loop
stc
jne
std
mov
ljmp
cli
ss
mov
add
fadds
and
mov
or
shlb
ja
int3
jne
push
and
sbbl
and
inc
push
ret
in
out
mov
push
sahf
xchg
data16
mov
cli
xor
and
dec
lods
les
jbe
cmp
or
sub
popf
aam
sbb
sbb
mov
cli
fisttps
jno
push
and
fidivrl
subb
bound
sub
mov
mov
stos
xchg
inc
push
mov
pop
jecxz
inc
add
or
dec
scas
pop
cmp
jb
xor
loop
aam
xlat
test
adc
outsb
and
rcr
mov
push
sbb
add
outsl
ret
iret
fldl
push
int3
pop
jecxz
mov
dec
xchg
jl
sahf
inc
cli
mov
stos
pop
and
mov
mov
nop
cmp
mov
add
lahf
sub
jl
pop
xor
out
lret
in
outsb
into
call
lds
mov
shlb
add
aad
cltd
sub
adc
push
mov
pop
xchg
leave
lret
fstpt
mov
sub
add
ss
inc
mov
rolb
sbb
xor
les
notb
hlt
int
test
mov
adc
push
mov
mov
xor
in
pushf
push
dec
cmp
jns
and
movsb
xor
mov
pop
cmp
inc
mov
jb
jne
es
or
arpl
cmpb
sub
xor
mov
push
aam
cmpsl
das
jae
fimull
xor
je
aad
jmp
cli
stc
push
cli
push
test
ljmp
mov
int3
andb
inc
rcll
push
jle
nop
mov
add
sbb
cmp
in
andb
sbb
sub
icebp
inc
and
dec
lds
hlt
dec
lds
inc
cmp
insl
xchg
pop
idivb
je
scas
push
adc
fnstsw
or
in
pop
pop
bnd
jno
scas
arpl
pushf
loope
fsubl
int
lahf
mov
popf
int
push
stc
popw
mov
pop
jnp
mov
jge
xchg
xor
add
jle
add
pop
pop
sbb
lcall
in
out
pop
popa
fxch
mov
push
in
xchg
mov
add
jae
aad
add
and
scas
out
or
jp
lods
push
mov
mov
lods
xlat
pushf
cmc
rcrb
mov
aas
mov
or
jno
xor
adc
push
lea
jmp
and
sbb
arpl
imulb
push
cmp
xchg
push
movsl
mov
sub
xchg
jle
push
mov
sub
lcall
xlat
in
outsl
int
pop
sub
nop
adc
pop
or
loope
jne
pop
mov
xchg
mov
mov
cwtl
adcb
cli
cld
sub
xchg
sbb
xor
dec
in
mov
cld
add
ret
sarb
enter
das
mov
arpl
rcrl
xor
inc
inc
sub
mov
int3
in
sub
inc
lcall
ds
lock
lock
call
pop
xchg
mov
xor
jne
add
cmpsl
jo
mov
or
lahf
lock
sar
xor
push
fnstcw
pop
lcall
test
aam
lcall
insl
xor
insl
sub
mov
push
testb
jo
ret
in
sbb
jge
loopne
adc
decl
shl
cmp
mov
popa
and
pop
jae
lahf
mov
cmp
in
mov
enter
sub
jbe
iret
insb
dec
fisubrs
rolb
lahf
ljmp
cmc
pop
xchg
subl
xor
jp
inc
pop
stos
inc
imul
add
dec
aad
or
dec
push
pop
and
cltd
xchg
shlb
call
fisttpl
inc
lahf
setno
lods
scas
xchg
jl
mov
or
adcl
lds
pop
orb
daa
inc
mov
and
jnp
outsb
movsb
cmp
adc
aam
in
jb
aaa
push
outsl
inc
rcrb
push
jl
pop
push
out
icebp
pop
pop
sti
cli
js
imul
inc
test
jbe
or
jo
dec
lods
mov
inc
adc
mov
mov
sub
fnstcw
or
push
aam
call
es
test
inc
popa
pop
sbbb
jae
test
add
cmp
ret
aam
mov
imul
popf
lds
jnp
cli
dec
dec
lds
stc
fisubrs
sub
cmp
test
or
shll
pusha
movsb
outsb
arpl
dec
lret
pop
ficoms
in
mov
xor
inc
in
cs
dec
push
and
push
adc
mov
sahf
in
movsb
scas
sub
movsb
outsb
pop
xlat
and
enter
adc
push
inc
and
sbb
pop
pusha
dec
add
mov
jg
xchg
lods
test
scas
orl
lods
inc
rcr
cwtl
cmpsb
xchg
pushl
push
push
xchg
scas
orl
xor
stos
cld
stc
xor
cmp
fstps
mov
mov
adc
add
mov
adc
jns
xchg
cmpsl
pop
movsb
mov
cmp
sbb
pushl
cmp
xchg
movsb
dec
jecxz
xchg
cmp
xchg
dec
scas
cmp
ljmp
and
stc
ja
xchg
dec
outsl
sti
jb
mov
out
lret
inc
ss
cmp
pop
xchg
jno
dec
sbb
movsl
lret
dec
jp
mov
xchg
insl
inc
push
lods
pop
nop
jecxz
dec
add
insb
in
xchg
hlt
rcl
aas
add
and
xchg
cmpsl
pop
popf
shll
push
call
adc
xchg
jecxz
or
hlt
decl
xor
sbb
dec
or
xchg
jno
mov
sbb
fs
dec
and
loop
cmp
fsub
sti
sub
cwtl
xchg
mov
xor
inc
pop
hlt
push
jae
pop
inc
cmc
repz
stos
cmp
lock
mov
sbb
lds
popf
sbb
mov
cmpl
imul
xor
adc
popf
xor
cmp
xchg
fwait
ror
adc
std
jns
cmpsl
sub
lcall
push
je
cmpsb
iret
fbld
xor
clc
push
adc
sarb
or
int
sbbb
iret
scas
push
outsb
daa
jne
push
je
mov
mov
arpl
in
cli
pop
scas
dec
pop
stc
mov
lret
test
dec
sahf
cmp
bound
mov
mov
imul
and
in
xor
push
cmp
cmpsl
jmp
xchg
mov
lret
shl
or
lock
xchg
arpl
cmp
jno
mov
ds
es
lds
sbb
dec
inc
cs
xchg
lret
out
jmp
sbb
sub
out
mov
or
xchg
rorb
xchg
xchg
sub
stos
mov
ds
mov
fisttps
pop
int
adc
in
pushf
scas
add
push
ja
lds
lcall
sub
lahf
je
les
xchg
mov
cld
or
stos
pop
mov
mov
pop
xlat
lahf
test
inc
hlt
pop
add
shrb
stc
in
out
sbb
mov
cmp
jge
adc
mull
and
sub
xor
pop
xchg
jg
clc
mov
pop
and
xchg
push
in
imul
jecxz
or
mov
std
faddl
jno
mov
xorl
xlat
mov
loop
pushl
test
aam
push
xor
cmp
fidivl
sbb
loop
jle
jns
sub
inc
insl
pop
sbb
add
sbb
xor
cmpsb
push
sbb
outsb
inc
repz
xor
pop
int3
mov
mov
testl
jne
stc
loope
cmc
add
and
cs
cwtl
push
dec
jg
pop
arpl
addr16
and
push
out
lock
pop
mov
testb
push
test
push
jge
mov
mov
or
lock
sub
jmp
xor
jge
fdivrs
push
sub
clc
scas
xchg
xor
adc
mov
mov
lods
pop
ds
popf
popa
fdivp
dec
loop
adcl
cld
push
orl
jge
push
repz
arpl
fucomip
jp
lds
sti
into
mov
ljmp
out
out
mov
adc
mov
in
popf
repnz
cmp
and
sub
cltd
add
cmp
xchg
cwtl
pop
mov
out
add
push
aas
ja
cs
shlb
sub
fnstcw
aam
xchg
and
push
imul
push
sbb
in
bound
xchg
dec
inc
mov
mov
xor
iret
jno
lret
pop
shrl
rcll
adc
rcrl
jae
xchg
loope
xlat
leave
bound
xchg
pop
and
ds
dec
inc
cmp
mov
testb
into
cmpsb
sbb
lret
xchg
aaa
movsl
pushf
scas
cli
push
in
negb
enter
adc
jecxz
movsb
mov
leave
push
inc
cmpsl
arpl
daa
pop
mov
dec
mov
adc
shrl
movsb
enter
xor
fcmovne
shr
push
sub
mulb
jp
xor
js
mov
lods
shl
imul
test
dec
add
push
imul
testl
rcrl
test
ds
rolb
or
jnp
xor
pmuludq
jecxz
and
movsb
cli
inc
test
pop
cmp
int
xor
cmpsb
repz
inc
push
int3
stc
fstp
pop
sub
aad
mov
xorb
imul
out
xor
test
adc
test
scas
mov
test
mov
inc
push
imull
mov
mov
sbb
xchg
popf
xor
add
pop
mov
lea
mov
lret
mov
jnp
lock
dec
or
loop
push
andps
mov
ss
int
lahf
shll
daa
push
sub
mov
and
push
ficomps
inc
dec
pop
in
sbb
pop
inc
mov
test
pusha
inc
rclb
loope
xchg
pop
sbb
inc
into
and
push
sub
rcr
mov
pop
adcl
push
lcall
fisttpll
stos
xor
pop
call
inc
mov
mov
mov
jno
ret
push
adc
scas
sbb
xchg
lret
sbb
cli
cmpsl
movsb
mov
dec
test
mov
mov
mov
idivl
pop
lds
cli
movsl
mov
idiv
cli
pusha
insb
pop
ljmp
andb
mov
leave
mov
test
inc
fnstsw
and
fidivs
jp
or
inc
divb
arpl
adc
xlat
jae
cmp
adc
dec
cmp
sub
daa
jg
mov
cs
pop
sub
xchg
ret
xor
xchg
dec
mov
loopne
mov
dec
js
xchg
addr16
cmc
push
ja
add
out
or
mov
out
mov
inc
jecxz
loopne
inc
cbtw
xchg
mov
daa
xor
sub
ja
pop
in
and
daa
insl
sub
mov
addr16
movsb
sub
scas
or
and
insb
aaa
insl
pop
pop
push
xchg
mov
xor
fisubl
xchg
js
in
insb
xchg
cwtl
les
stc
rorb
pop
loopne
aas
push
fisubrs
mov
pushf
sub
fisubl
mov
int3
lods
mov
pop
mov
clc
inc
add
aaa
test
into
test
jmp
dec
inc
cmp
data16
int3
loop
inc
data16
mov
mov
push
xchg
mov
xor
jg
filds
add
xchg
jae
rorb
stos
mov
cmp
lret
mov
sahf
cmp
loop
push
iret
in
test
adc
or
bound
push
jbe
cmp
sub
adc
lods
jmp
sti
aam
rorl
push
inc
popf
push
sti
dec
inc
fdivrl
ja
pop
fmul
cmpsl
jecxz
jg
loopne
negb
push
data16
jae
cmpsb
pop
repnz
out
bound
rcrl
std
cmp
je
lds
lret
inc
in
adc
idivb
pop
pop
popf
push
push
add
and
mov
push
pop
mov
lock
mov
mov
xchg
sub
xchg
pop
fisubrs
stc
shlb
and
sbb
push
bnd
iret
scas
push
aam
and
aam
xor
cltd
bound
lret
push
fnstcw
inc
sub
xlat
add
repz
imul
pusha
mov
test
and
jns
loopne
faddl
jmp
ja
sub
mov
jmp
inc
fildl
mov
daa
inc
iret
and
push
mov
enter
adc
dec
rorl
popf
rorl
lcall
bound
sbb
and
mov
adcb
mov
inc
inc
xchg
xchg
pop
xchg
ja
mov
dec
cld
adc
std
test
inc
pushf
imul
sub
push
cmp
sbb
out
add
mov
add
mov
push
mov
xor
ds
sti
out
cmpsb
fiaddl
inc
xchg
imul
or
mov
lock
cmp
negl
inc
adc
mov
mov
std
ja
rcl
mov
mov
sub
jecxz
or
or
dec
in
les
mov
jmp
in
jecxz
int3
in
push
push
and
push
hlt
mov
repnz
into
pop
cmp
mov
inc
rcrl
jae
jl
lret
pop
movsl
decl
nop
lock
pusha
cwtl
in
xor
or
icebp
leave
dec
repnz
mov
sbb
stos
inc
xchg
adc
jp
mov
mov
cmpsl
xchg
mov
jo
pop
xlat
stc
pop
and
scas
add
lret
pop
adc
shlb
aad
imul
call
push
sbb
hlt
popa
movsb
incb
dec
in
add
cltd
mov
and
mov
cmpsb
pop
pop
fidivrs
mov
inc
push
aas
add
ret
mov
add
loope
mov
inc
stos
cmpsb
or
mov
scas
mov
addr16
or
or
push
test
leave
scas
loopne
mov
jge
add
xchg
adc
testl
out
inc
fiaddl
icebp
push
repz
cld
xchg
push
sub
jge
cwtl
nop
push
mov
loopne
dec
stc
cmp
movsl
jo
jl
xchg
lods
fcoml
mov
jnp
push
arpl
mov
adc
jb
pop
add
loop
lods
int3
idivb
jo
mov
or
inc
mull
aas
mov
mov
popa
jb
mov
pop
dec
bound
xchg
mov
sbb
jp
xor
ret
fsubr
outsb
push
fimull
out
cwtl
inc
jbe
flds
test
in
sahf
mov
cmc
lret
xor
lock
gs
outsl
call
into
mov
inc
or
enter
pop
in
inc
adc
sbb
xchg
jno
jbe
or
dec
or
pop
sub
inc
push
mov
push
push
daa
scas
es
jae
mov
sbb
fisttpll
mov
inc
mov
popa
popf
jb
sub
leave
mov
inc
dec
adc
mov
pushf
add
xor
sbb
adcl
sbb
nop
jno
popf
adc
ficomps
insl
jno
jnp
mov
dec
outsb
out
orl
lock
hlt
mov
nop
cltd
movsb
int3
or
jle
mov
pop
psrad
sub
cwtl
jnp
data16
scas
dec
lds
xchg
loop
fs
clc
push
cmp
ja
pop
pop
aad
jg
sub
cmp
out
test
push
sbb
jne
inc
jne
movsb
jb
pop
push
dec
stos
push
std
mov
in
mov
sbb
jg
sub
push
and
or
imul
mov
jecxz
mov
dec
scas
mov
push
int
pop
jmp
inc
cmp
sahf
lea
mov
adc
out
test
and
xchg
lods
sub
test
subb
movsl
jnp
cmp
push
lret
dec
sbb
and
sbb
test
push
les
mov
jg
push
xchg
xchg
fldenv
clc
pop
andb
mov
mov
xchg
pushf
lods
mov
pop
pop
push
lods
pop
add
shll
dec
mov
addr16
cmpsl
jecxz,pn
rorl
inc
ljmp
das
lock
mov
enter
pushf
pop
push
inc
mov
rcll
getsec
sbb
js
nop
inc
jp
add
faddl
enter
jb
mov
xor
sub
sub
addb
mov
adc
mov
sub
sbb
rorb
aaa
leave
test
dec
jecxz
in
add
lret
insl
add
sbb
fadds
xchg
jmp
mov
popf
and
sub
mov
fwait
lret
cmp
in
mov
daa
inc
push
xor
pop
pusha
into
or
scas
sarl
dec
out
mov
lds
adc
dec
cli
sub
ret
cmp
jmp
out
pop
in
xchg
clc
nop
mov
rclb
xchg
pop
bnd
adcb
and
addl
sti
fadds
push
pop
lahf
lods
xchg
push
cld
jno
push
stc
in
jae
sbb
mov
mov
push
cs
pop
lods
lock
cmc
fcomp
xchg
in
rol
dec
in
scas
dec
out
xchg
pop
test
int3
test
adc
mov
jnp
push
push
hlt
adc
clc
ds
push
sub
sbb
pop
pop
dec
pushf
in
pop
icebp
loop
xorl
in
pop
lods
cli
ret
into
mov
jle
sub
adc
sahf
jns
test
or
or
or
xchg
xchg
jp
xor
hlt
push
xor
push
xor
ds
mov
subl
push
loop
stc
or
test
inc
inc
divb
clc
add
or
push
lds
jmp
movsb
iret
xor
lods
sub
and
xchg
in
mov
repz
sbb
and
aam
jp
shrb
jo
xchg
adc
popa
xchg
test
sbbl
mov
movsl
push
sbb
add
jae
dec
jns
and
movsb
int
leave
mov
clc
adc
loopne
lcall
movsb
push
test
out
xor
mov
jge
push
icebp
mov
mov
sbb
fidivrl
test
scas
or
loopne
andb
daa
scas
pop
dec
out
popa
arpl
push
icebp
and
fildl
lret
cltd
test
pop
jg
dec
xchg
adc
sbb
repz
mov
clc
or
inc
cli
dec
cmpsl
mov
cmp
mov
fsub
jb
rol
lds
das
gs
push
jp
inc
ljmp
roll
fcmovu
xor
nop
dec
adc
dec
leave
push
aas
jmp
test
out
sti
xor
push
mov
xchg
test
decb
and
and
pop
cmp
or
adc
xor
jns
cli
push
and
inc
adc
mov
cwtl
movsl
rclb
mov
xchg
jge
jle
aaa
pop
adc
pop
dec
daa
sub
xchg
pushf
fadds
insb
inc
int3
addr16
mov
pop
movsl
mov
cli
sbb
pop
sbbl
int
out
mov
jo
jbe
mov
repz
pop
pop
ja
test
outsl
mov
lret
testb
sub
andb
jnp
lock
xchg
mov
int3
pop
push
push
test
aad
fld
add
or
mov
ret
sbb
aaa
fstpl
push
imul
pop
mov
aaa
sub
dec
pop
ljmp
inc
imul
or
and
jns
pop
cltd
ja
adc
pop
ror
inc
push
bound
imul
aas
xchg
gs
ficomps
and
mov
mov
cmp
mov
nop
ret
popa
cmpsb
jns
cmp
push
das
cmp
inc
movsl
adc
sub
push
inc
aas
pop
stos
push
xlat
notb
dec
fs
ror
jge
call
push
jnp
scas
test
jno
sub
out
rcrb
mov
pushf
jp
imul
mov
sbb
xor
pop
leave
mov
jge
cmp
xorl
and
roll
push
xchg
pop
sub
dec
call
cmp
sbb
in
ret
add
pop
and
dec
pop
mov
repz
enter
mov
mov
or
test
xrelease
out
pop
xlat
pop
fnsave
cld
jnp
jb
insl
mov
or
aas
push
pop
ja
cld
in
cmp
test
xor
xlat
and
sub
pop
mov
aad
jg
sbb
ret
xor
test
iret
mov
pop
cmp
test
popa
lcall
push
out
mov
imul
inc
ljmp
cli
push
repz
sbb
ja
clc
loop
arpl
sub
mov
std
out
pop
or
aas
das
inc
mov
gs
jo
bound
jb
pop
lock
repz
insb
and
and
mov
sbb
loope
sbb
imul
shll
dec
or
dec
mov
pop
sahf
shll
andl
add
pop
pop
add
inc
mov
out
shrb
mov
lock
jns
pop
cmp
neg
dec
mov
mov
int3
test
adc
mov
lods
sarb
xor
adc
push
icebp
inc
aas
xchg
jp
enter
adc
mov
in
addl
call
mov
lea
lods
sub
cmp
dec
sbb
mov
ret
cmp
enter
push
mov
pop
icebp
push
test
sub
push
daa
dec
fcoml
push
cmp
and
cmpl
bound
jle
jp
mov
js
xchg
out
daa
inc
pop
or
xchg
jge
push
push
lahf
xor
adc
rcrb
or
mov
out
add
cmp
aas
pop
scas
dec
data16
dec
mov
movl
xchg
add
arpl
insl
lods
or
std
cli
pop
andb
adc
push
inc
xor
testb
push
mov
xchg
subl
push
arpl
add
lds
jp
fs
cmp
mov
repnz
int
pop
out
inc
or
iret
dec
and
mov
insl
pop
fbstp
sbb
cwtl
decl
outsl
sti
pop
pop
or
int3
adc
movsl
mov
loop
adc
lret
rcll
lea
sti
fimuls
push
mov
mov
sbb
xchg
inc
jge
ja
pop
jns
addl
imul
push
les
nop
push
push
jge
inc
xchg
mov
movsl
add
mov
xchg
scas
pop
pop
cmp
repz
add
cmpsl
ljmp
fldcw
loope
jp
xchg
subb
pop
out
sbb
jl
rorb
cmp
iret
clc
in
mov
mov
xor
call
sub
dec
out
mov
lods
aad
jge
lret
adc
aaa
xchg
add
add
push
into
inc
add
mov
stc
ds
mov
pop
mov
in
mov
push
inc
jnp
imul
jnp
sbb
pop
and
cli
filds
ds
stos
push
cmp
ret
push
mov
push
hlt
mov
push
cmp
sbb
push
sahf
push
dec
lret
out
sub
pop
push
ret
lock
test
fiadds
push
adc
std
out
rorb
jmp
mov
fadds
mov
pop
fisttpll
test
std
mov
cli
add
call
mov
rcll
popf
movsl
sub
pop
and
sti
fidivrs
push
xor
fstl
rcr
mov
mov
das
mov
mov
pop
ljmp
decl
adc
nop
sbb
inc
mov
lds
sahf
loopne
jmp
xchg
xor
xchg
cmp
mov
push
push
dec
dec
adc
loope
fwait
push
aam
in
push
int
loope
mov
mov
cmp
popa
and
add
and
fcmovnbe
rol
xchg
push
sbb
popf
repnz
dec
xchg
jecxz
rorb
repz
loope
pop
jecxz
arpl
xchg
inc
lock
insb
shrl
hlt
adcl
mull
rcrl
cmp
pop
xchg
sti
adc
loope
bswap
insl
test
xchg
nop
lods
hlt
outsl
outsl
lock
dec
pop
sti
in
ret
xchg
out
pcmpeqd
xchg
mov
sub
in
fstpl
testb
mov
gs
popa
sbb
xor
in
in
ret
fistl
arpl
out
jnp
sbb
cmp
pop
filds
inc
jecxz
lods
loopne
mov
inc
inc
sub
repz
insl
lds
imul
sbb
js
push
leave
adc
xchg
dec
pop
cmp
adc
clc
inc
repnz
mov
jge
mov
add
mov
inc
dec
addl
mov
sarb
add
cmpsl
xor
fwait
mov
jmp
inc
add
popa
daa
loope
adc
cmpsl
scas
test
je
inc
or
cmp
test
jnp
mov
push
call
mov
lods
ja
mov
lret
inc
shlb
stc
loopne
pop
mov
test
push
inc
jbe
inc
dec
negl
lcall
aaa
cmp
dec
xchg
or
loop
dec
xor
mov
lret
pop
mov
jbe
push
dec
xchg
push
cwtl
push
test
mov
sub
xchg
das
sbb
mov
mov
cmp
sub
jl
pop
sbb
imul
sub
or
inc
out
mov
les
xchg
js
dec
push
daa
jp
sbb
cmp
outsl
jo
pusha
cmpb
fwait
pushf
xchg
test
cli
inc
scas
sahf
xchg
loope
imul
mov
cmp
adc
adc
jmp
xchg
xchg
movsl
push
push
loopne
sbb
out
mov
dec
add
aad
lret
cmp
insb
loopne
hlt
mov
cmp
std
xchg
divl
mov
scas
dec
cld
cmp
cs
and
popa
push
dec
adc
and
in
push
push
aaa
in
lret
and
push
jo
shlb
and
jle
lods
adc
mov
test
xchg
push
xchg
rorb
mov
test
pop
push
push
shlb
mov
xchg
and
call
je
push
pop
add
jmp
sarl
lock
add
into
jae
inc
pop
inc
movsb
aam
arpl
cmp
mov
adc
rorl
sbb
adc
mov
cmp
pop
sbb
pop
mov
adc
scas
jae
pop
mov
test
pop
add
inc
xchg
inc
outsb
stos
lmsw
jl
in
push
out
dec
and
aas
out
mov
outsb
xor
imul
dec
dec
cmc
sub
repz
rolb
dec
lcall
mov
mov
fistl
aad
inc
push
ror
inc
mov
sbb
imul
adc
xor
cmp
sub
sub
cltd
push
push
stos
in
jns
adc
scas
aad
push
sbb
adc
xchg
loop
jmp
mov
or
inc
add
nop
vpcmpgtw
and
mov
mov
push
nop
dec
fwait
push
popa
cmp
imul
inc
sti
jge
pop
fcmove
rorb
pusha
fsts
imull
sbbl
push
xchg
cwtl
in
sub
push
mov
cmp
pusha
test
xchg
ss
dec
scas
loopne
xchg
aad
dec
std
sbb
sub
xchg
push
push
shlb
sub
add
mov
adc
cmp
out
or
ljmp
mov
jne,pt
test
movsl
xchg
insl
sub
xor
mov
idivb
fwait
roll
cmp
mov
push
cmc
jb
divl
mov
pop
push
inc
shrl
jns
lret
pop
add
or
cmp
inc
sbb
in
hlt
lock
icebp
lret
add
mov
stos
mov
jg
dec
cld
out
jbe
nop
sub
leave
lcall
jecxz
out
jmp
cmc
xor
inc
stc
lea
rolb
stos
pop
jg
lea
ds
mov
sub
sbb
push
cmp
push
add
cld
stos
push
fs
mov
jae
arpl
mov
fidivl
in
mov
lret
push
and
push
sub
es
scas
pop
mov
fldt
insb
pop
fwait
std
mov
movsl
pop
orb
xor
jl
test
mov
aaa
cmpsl
cmpsl
push
and
push
xlat
les
lock
addr16
mov
lret
daa
daa
flds
sbb
jl
or
roll
loopw
cmp
adc
inc
out
sub
and
in
lea
out
xchg
enter
popa
sti
mov
lock
sahf
sub
dec
cmp
and
shlb
rcll
inc
dec
cmp
mov
in
and
pop
mov
aad
xchg
lea
pop
dec
enter
pop
clc
dec
pusha
in
mov
jp
or
inc
ret
insb
std
mov
imul
pop
test
xchg
jg
or
sbb
mov
inc
into
jo
rorb
pusha
sbb
js
pop
lret
gs
or
cmp
mul
mov
fwait
xchg
push
jl
stc
test
mov
insb
xor
push
fidivrl
inc
mov
addr16
data16
and
in
sub
scas
fisubl
test
inc
adc
cltd
xchg
adcl
mov
cmp
fs
out
inc
loop
adc
lret
push
rep
cld
push
dec
or
scas
fucomi
rorb
fisttpl
push
ucomiss
inc
and
imul
movsb
js
inc
pop
jl
aad
rorb
mov
push
mov
jp
dec
xchg
jp
andb
lock
dec
imul
mov
jo
insl
repz
or
or
enter
repz
push
mov
ror
adc
cld
stc
nop
es
outsl
in
fidivrl
insl
lds
mov
cmp
ljmp
xor
call
sub
pop
add
adc
arpl
cmp
xor
inc
xchg
sbb
jo
push
cmc
mov
outsl
inc
in
loop
pop
testb
shr
repz
rcrl
adc
aam
xchg
push
in
inc
mov
movsl
jp
movsl
lods
xchg
test
cltd
mov
jl
into
int3
loop
lods
jbe
sbb
ds
adc
jne
jns
mov
test
loop
or
push
jecxz
xor
xor
push
repz
xchg
mov
mov
fimull
scas
mov
push
dec
pop
pushf
and
xor
subb
sub
int3
jb
mov
and
int3
loop
jmp
and
vpcmpgtd
fs
jae
or
inc
mov
or
cmpsl
cmpsb
sub
mov
pop
xchg
pop
popa
inc
inc
sub
push
mov
or
inc
mov
faddp
test
roll
js
loop
test
adc
call
mov
shl
jmp
xor
mov
iret
xor
mov
andl
imulb
dec
sbb
enter
incb
popf
add
jecxz
push
mov
xchg
mov
mov
mov
lock
daa
push
addb
push
push
jae
lds
je
push
xor
out
jp
outsl
mov
pop
rcrb
std
push
push
xchg
inc
cmp
sbb
add
data16
adc
fsubr
push
jg
mov
pop
sahf
mov
cltd
xchg
fidivrs
fildl
xor
leave
mov
adc
jb
or
mov
outsb
xor
test
jns
mov
xchg
jge
add
push
mov
and
sub
or
sbb
in
xchg
sub
mov
add
adc
or
imul
xor
js
and
stos
loop
andl
add
testb
jo
orb
in
push
movsl
cmp
int
mov
sub
sub
ret
imul
aad
jno
mov
clc
lret
test
jbe
lods
pop
xchg
shl
mov
int
scas
sbb
out
shr
test
jle
mov
fs
mov
fistps
lea
push
mov
cmpsb
cmp
scas
outsl
jmp
andb
adc
test
inc
loopne
cli
jl
loopew
out
movsb
dec
xchg
jnp
ljmp
lods
jmp
jge
insl
adc
jo
out
inc
sahf
scas
sarb
mov
push
movsl
xchg
add
jno
jle
inc
aas
pop
push
shl
enter
nop
inc
jp
mov
xlat
inc
add
hlt
ret
loopne
dec
imul
mov
push
stos
movsb
dec
mov
or
cmp
mov
mov
xchg
mov
jb
and
lret
dec
adc
sub
imul
adc
push
fdivrs
mov
xchg
movsl
iret
daa
mov
inc
or
adc
out
add
inc
lds
lock
fwait
call
js
sarb
mov
addr16
jne
adc
iret
inc
das
mov
xchg
pop
sub
cltd
and
xchg
test
repz
add
sub
mov
lock
stos
mov
pop
and
mov
test
adc
jns
pop
add
xchg
push
adc
sarb
sti
cmp
rdpmc
or
in
aas
mov
bound
in
pop
movsl
pop
cmpsl
arpl
jae
push
es
mov
xor
adc
sbb
sub
pop
add
fcmovnb
insb
xor
xchg
sub
cmpsb
or
jg
insl
or
icebp
or
jae
xor
ds
pop
cmp
adc
movsb
sbb
mov
les
cld
push
scas
jae
popf
cmp
xchg
insl
sbb
sbb
iret
sbb
inc
js
add
adc
jg
dec
adcl
cmpsb
data16
idivb
sub
aaa
mov
and
sbbb
mov
sahf
pop
pop
in
adc
scas
dec
cmp
mov
add
push
mov
in
mov
daa
xor
shlb
jmp
mov
sbb
idivl
icebp
xor
mov
test
add
adc
popa
mov
scas
movsb
ss
mov
mov
sub
lahf
adc
insb
mov
or
push
mov
or
and
icebp
insl
popa
imul
push
mov
pop
push
in
mov
andl
and
xchg
std
stos
sub
sbb
sbb
sub
in
and
outsb
lcall
lods
decb
push
inc
cwtl
icebp
jge
xor
sub
ss
lcall
lahf
test
ss
dec
pop
test
test
cs
xchg
sbb
add
jge
stos
jl
gs
faddl
mov
mov
popf
sbb
mov
adc
rcrl
inc
cld
or
js
mov
les
scas
aam
scas
xchg
and
mov
jns
lods
cwtl
fsubs
scas
mov
lods
mov
cmpsl
and
repnz
pop
fcoml
test
cs
jnp
jbe
or
lea
sub
sbb
mov
jp
mov
std
xchg
dec
fimull
lcallw
shll
or
fldcw
push
jle
mov
mov
test
sti
xorl
mov
mov
stos
std
shlb
lahf
push
and
cmp
jmp
xchg
jmp
push
outsl
add
arpl
mov
dec
pop
sbb
jo
sub
push
shrb
push
mov
xchg
mov
negb
cwtl
popf
inc
add
fsubr
xchg
xor
sub
cs
insb
dec
xor
data16
xchg
in
ret
jb
adc
in
mov
ror
push
xor
pop
xor
add
fildl
repz
insb
iret
sbb
test
jo
call
mov
add
push
fdivs
mov
cmp
fs
and
gs
call
xor
aad
dec
and
test
cmpsl
call
test
adc
push
arpl
add
fcomi
lods
in
xchg
sahf
movsb
push
mov
push
pop
pop
loopne
mov
add
mov
jge
dec
lock
mov
pop
sti
mov
roll
mov
test
std
inc
repnz
outsb
stc
test
add
mov
aad
sahf
jl
xor
hlt
cmc
cmpsl
adc
pop
fs
clc
cmp
xchg
sub
movsl
pop
ret
or
xorl
fsubrs
fidivrl
lret
mov
and
jb
sub
arpl
adc
or
xor
mov
mov
sub
insb
popf
push
aas
adc
sarl
cmp
cmp
hlt
fldcw
sbb
dec
outsb
sbb
test
pop
or
stos
add
mov
std
dec
repnz
push
dec
aam
call
pop
adc
lret
aad
dec
std
mov
cld
cmc
xor
xchg
nop
dec
mov
cmp
sbb
popl
push
cli
inc
mov
add
sbbb
mov
in
jp
jmp
sti
mov
mov
fisttpl
pop
inc
rcl
cs
sbb
xor
call
pshufw
ret
test
push
or
inc
ficomps
pop
pop
inc
cld
loop
je
call
push
out
inc
jg
enter
mov
lock
cwtl
gs
andl
pop
pusha
outsb
push
fisubl
mov
ljmp
adc
mov
cmc
clc
cltd
mov
js
dec
sub
adc
frstor
jge
fstpl
fistps
jmp
mov
push
bound
xchg
loope
adc
int3
mov
pusha
out
loopne
adc
lcall
mov
xchg
add
lcall
movl
lds
nop
cmp
rorl
rolb
lock
dec
cmp
pop
mov
sub
push
sbb
pop
stc
pop
xchg
into
enter
in
repnz
jge
imul
xlat
xor
out
push
aaa
adc
mov
or
rcrb
std
cmp
or
sbb
fs
fdivp
rcrl
shl
sub
adc
insb
test
sti
loop
insb
es
dec
inc
fidivs
arpl
cmp
cmc
cmp
mov
push
data16
scas
lods
mov
pop
into
int3
mov
arpl
mov
xchg
mov
aaa
cs
xor
mov
pop
mov
aad
mov
cmp
int
sub
inc
and
mov
rolb
mov
lahf
pop
mov
cmp
adc
loope
repnz
sbb
dec
mov
jo
pusha
mov
bound
dec
xchg
aas
je
dec
mov
push
repz
scas
mov
push
in
les
cmc
mov
xchg
daa
jo
and
push
negl
inc
hlt
stc
sahf
or
jnp
mov
pop
outsw
push
adc
sub
and
adc
rorb
sub
sbbl
outsl
arpl
cmpb
in
call
push
sbb
jle
loop
mov
cmp
gs
lcall
jnp
or
frstor
sub
cltd
push
inc
mov
lcall
mov
pop
hlt
dec
bound
cmc
xchg
lahf
inc
and
xchg
fdivs
adc
lcall
sub
adc
pop
adc
add
or
jmp
sbb
jo
pop
sub
push
sbb
sbb
xchg
inc
sbb
ret
or
mov
lret
or
sbbl
fcmovbe
fisttpl
leave
repnz
pusha
sti
fdivp
sub
or
pop
jb
mov
movsb
adc
sub
inc
jmp
mov
inc
js
xchg
xchg
mov
and
push
jmp
insb
mov
mov
clc
sbb
sub
imul
xor
adc
or
insl
mov
lret
jne
sbb
dec
cmp
cltd
clc
int
mov
repz
rcll
lret
cmp
jg
push
cmp
fimuls
mov
in
cmpsb
ja
inc
xor
notb
pushf
dec
jne
pop
call
add
jle
int3
pusha
stos
add
pusha
sbb
cmpsl
jae
add
fs
sub
cmc
inc
pop
push
out
xlat
sbb
in
ud2
repz
add
inc
movsb
jecxz
dec
adc
jle
push
and
cs
rcr
dec
popf
mov
or
loop
aad
in
cmp
popa
pushw
js
ret
jle
push
mov
fwait
les
inc
add
mov
sbb
sarb
dec
aaa
pop
dec
pop
jne
fs
cmp
mov
negb
cmp
xchg
mov
test
and
push
cmp
les
mov
inc
push
push
inc
js
jmp
out
movsb
adc
bsr
push
cli
or
push
ret
or
insl
div
subb
cltd
outsb
popf
inc
mov
shl
cmp
add
stos
jb
icebp
jge
sbb
test
push
enter
aaa
and
or
sbb
jno
aam
psubw
std
or
mov
mov
sahf
adc
enter
jo
mov
mov
adc
pop
int3
sbbl
dec
and
or
cmp
jp
daa
cld
jmp
mov
cmc
fwait
push
push
cmpsb
shrb
movsl
int3
cmc
hlt
jbe
in
inc
scas
jno
imul
push
dec
xchg
int3
xchg
mov
fcoms
pop
sub
push
int3
loopne
out
cld
dec
int
and
or
adc
cmp
cmp
insl
out
push
inc
sar
pop
pushf
lahf
add
mov
lods
lods
jmp
push
sbb
roll
lahf
dec
mov
fs
push
xchg
jne
mov
jbe
mov
and
pop
adc
lcall
xor
pop
pop
add
push
dec
cwtl
movsb
mov
shrl
insl
cli
outsl
negl
jnp
movsb
and
pop
lea
mov
sbb
mov
into
out
ret
lahf
sbb
sub
lcall
dec
out
or
and
inc
ret
mov
push
outsl
arpl
inc
mov
pop
mov
jle
pushf
xor
mov
test
push
jmp
repz
mov
pop
je
mov
and
inc
sub
lods
sbb
hlt
ret
arpl
test
cmp
sub
mov
dec
push
jg
lds
loope
int3
mov
fbld
inc
fbld
rorl
lods
mov
leave
loope
sbb
mov
enter
imul
in
je
push
gs
bswap
inc
sbb
push
stos
inc
sub
fiadds
stos
adc
dec
rcr
dec
hlt
mov
push
jle
xchg
out
sub
in
sub
pop
aad
jo
adc
cltd
cmpsb
xor
jmp
xor
add
leave
jnp
xlat
sbb
fcmovbe
lods
fmuls
inc
je
sub
sbb
xor
mov
fmull
pop
push
mov
mov
lock
dec
pop
inc
call
and
mov
mov
stc
imul
dec
push
push
cli
xor
mov
scas
test
mov
push
ret
adc
aas
cmp
add
and
pop
fdivl
dec
jno
popf
cmp
faddl
loopne
add
test
xchg
mov
or
pop
add
cs
inc
aad
leave
push
sub
pop
pop
iret
inc
mov
pop
dec
cmp
mov
or
jae
inc
pop
shrd
cli
inc
lods
rcrb
mov
mov
mov
adc
rcll
mov
and
sbb
lret
inc
push
ss
mov
scas
sbb
push
dec
lock
add
jb
test
sbb
pop
cmp
pusha
fs
cmc
mov
mov
shlb
int3
sbb
ds
std
ds
jno
shll
stos
idivl
lds
inc
popa
lods
mov
pop
loope
pop
scas
mov
int3
adc
xchg
aad
icebp
xchg
push
jge
jb
xchg
lea
cmp
mov
jb
int3
or
sbbl
sarl
mov
shlb
out
cli
bnd
xchg
out
push
loope
and
sbb
cmpsl
or
stos
adc
les
dec
fisubrl
hlt
inc
xchg
push
push
iret
in
mov
push
dec
or
sub
mov
repnz
aad
cmp
test
sbb
les
adc
cmp
popf
pop
xor
jl
out
pop
in
inc
sub
jns
pop
test
arpl
enter
cmp
arpl
pop
sbb
repnz
ret
adc
sub
dec
psubw
cmp
ficoms
sbb
mov
or
bound
cmpl
sbb
xor
out
push
ret
xchg
call
add
ficompl
ret
test
xor
movsl
xor
ret
pushf
arpl
out
inc
dec
mov
lds
xchg
imul
std
cmpsl
aas
pop
sbb
insb
cmp
insb
rcll
in
dec
cmp
inc
cmp
ljmp
ret
cmp
testb
sarl
movsb
les
adc
std
sbb
mov
xchg
push
xchg
cmp
or
mov
pop
fcmovu
popf
frstor
fdivs
jecxz
add
xor
lahf
loope
dec
cmc
jp
ds
outsb
mov
fwait
xchg
jecxz
lods
stos
push
sub
mov
mov
cmp
rep
int
jnp
mov
xchg
dec
adc
jmp
popf
clc
pop
icebp
inc
jg
test
into
stos
shll
add
pop
pop
int
arpl
addr16
push
dec
pop
rolb
or
jo
and
push
cmp
inc
out
pop
jge
notb
dec
mov
xchg
and
aam
jp
pusha
and
cmp
roll
pop
lret
push
es
iret
inc
fcomps
jl
ret
jge
add
inc
mov
pop
xchg
cmp
cmp
mov
stc
lock
mov
mov
cmpsl
xor
sbb
fnstenv
fisubrs
xchg
adc
pop
int3
or
icebp
xchg
pop
or
xchg
jp
cmp
xor
mov
cmpsl
dec
mov
call
pushf
cmp
scas
icebp
xchg
ja
clc
mov
js
aad
cmp
popa
popf
stos
stos
push
and
mov
std
push
test
xor
fsub
sub
jns
bound
mov
jp
push
test
sbb
mov
adc
aaa
mov
aaa
popf
xor
mov
out
sbb
adc
sub
jg
add
jmp
jne
xor
xor
mov
leave
and
add
fistpl
sub
outsl
mov
jae
mov
mov
lret
push
and
xor
jb
push
mov
aam
notb
jae
sub
pop
scas
stos
sub
rcr
imul
fbld
stos
movsl
mov
je
sub
sar
shrl
xor
sti
push
jbe
test
rcrb
aas
add
fcompl
xor
call
dec
out
push
scas
loopne
ljmp
jmp
mov
sub
out
addb
or
sub
ficompl
mov
loop
lcall
test
daa
cmp
mov
inc
pop
xor
xor
jae
push
mov
xchg
dec
adc
lcall
mov
inc
cmp
jnp
cs
pop
std
push
cmp
sbb
ret
push
stos
pop
popa
fcomps
cmc
xchg
mov
dec
ret
roll
fdivrs
sub
sbb
inc
cs
mov
fwait
jecxz
cmp
leave
jo
data16
loopne
sbb
fdiv
stos
nop
sub
add
inc
jbe
or
xchg
mov
in
scas
fs
cld
out
mov
gs
icebp
xchg
fiadds
adc
stos
daa
pop
insb
xchg
lahf
cmp
mov
dec
lret
ror
pop
xor
add
rorl
nop
inc
mov
cmp
mov
pop
cmc
jbe
sub
adc
jge
mov
xchg
pop
dec
lcall
imulb
jae
fdiv
roll
fstps
movsl
sub
xchg
dec
scas
mov
adc
scas
dec
out
fistl
jl
push
pop
and
es
aas
mov
test
stc
adc
das
mov
sub
into
mov
mov
mov
add
or
rclb
inc
aad
mov
dec
mov
test
out
nop
push
add
out
mov
dec
sbb
pushf
sub
mov
sarb
cmpsl
arpl
xchg
or
mov
js
adc
negb
adc
cltd
hlt
inc
imul
repz
xlat
or
loope
cmpsb
jp
cld
or
sbb
stos
test
leave
popa
lahf
and
sub
inc
mov
or
outsb
mov
and
dec
adc
stos
sti
es
test
pop
mov
insb
lret
xor
inc
pop
cmp
fwait
scas
pop
mov
sbb
pop
inc
ffreep
push
sbb
fs
push
mov
dec
mov
or
pop
inc
scas
jge
mov
xlat
stos
mov
sub
add
js
rclb
or
pop
ljmp
outsb
mov
pop
sar
cld
jb
loop
mov
fdiv
adc
aas
inc
or
js
add
push
add
push
jne
sbb
jno
cld
loope
pop
subl
pop
arpl
push
inc
popf
ss
fwait
pop
hlt
aas
lret
popa
push
and
jnp
mov
in
loopne
xchg
stc
sarb
shll
ret
std
pop
aas
sbb
shll
inc
mov
lds
sub
pop
mov
sbb
cmpsb
sahf
xlat
outsl
xlat
mov
push
dec
cltd
add
sub
sahf
cwtl
sahf
sarb
frstor
and
imul
sub
push
xchg
into
jnp
imul
inc
sbb
js
pop
movsl
xor
movlps
outsl
and
dec
decl
mov
mov
aam
mov
xchg
shll
xchg
js
lahf
aam
dec
sarl
jmp
sbb
dec
out
das
and
add
dec
xchg
jge
nop
pop
inc
adc
mov
jp
test
stc
ret
imulb
out
add
adc
das
ds
and
fldt
inc
ja
mov
notb
ljmp
into
scas
add
cmp
sbb
mov
dec
mov
enter
push
xor
jecxz
jecxz
sbbb
jns
and
fistpl
inc
clc
adc
js
icebp
and
dec
jbe
mov
dec
rorb
fwait
mov
dec
sti
adc
dec
cmp
addr16
and
shlb
pop
mov
movsl
adc
sti
enter
sbb
int3
lock
lods
jno
js
rcrb
mov
pop
cmpsb
push
mov
mov
out
inc
push
xchg
ret
dec
adc
dec
insl
or
xchg
in
inc
lret
unpcklps
xor
rcll
icebp
out
mov
rolb
repz
outsl
insb
dec
and
cmpsb
sbb
imul
pop
push
mov
cwtl
jl
push
xchg
mov
mov
mov
ss
dec
sahf
pop
and
cld
dec
dec
loope
lret
lret
dec
push
icebp
ss
push
mov
aad
or
or
shrb
and
aad
cltd
lock
fs
sbb
fnstsw
xor
scas
adc
inc
add
ds
popa
popa
xchg
addr16
add
push
push
pop
and
in
fs
daa
testl
add
mov
js
pusha
sbb
sub
pushf
push
pop
and
mov
push
out
adc
mov
add
cmp
pop
jno
test
sbb
test
cmp
adc
mov
sbb
mov
inc
cmc
imul
xchg
or
mov
xchg
rcrb
jmp
loope
mov
out
pop
inc
xor
dec
jno
test
mov
xchg
jae
adc
push
push
sahf
jp
fnstsw
add
ret
inc
jle
xchg
pop
mov
lods
sub
or
mov
jo
inc
jecxz
mov
dec
and
es
movsl
sub
dec
insl
adc
bound
sbb
pop
push
gs
les
mov
xchg
rcll
rorb
mov
adcb
and
fwait
mov
out
or
xor
mov
add
popf
imul
inc
movups
inc
xor
mov
test
test
ljmp
push
xchg
shr
dec
arpl
lods
sbb
je
gs
jle
jns
cmpsb
sub
rclb
aad
aam
rorl
pop
fistps
add
pop
adc
cmp
inc
adc
ljmp
lock
push
aad
sub
inc
push
std
and
cwtl
xor
cld
push
in
mov
jle
iret
dec
in
mov
push
mov
rorl
lock
mov
cld
add
cmpsl
imul
fbstp
call
dec
arpl
lahf
bound
push
sub
or
xor
mov
xor
xchg
icebp
or
mov
jne
adc
sti
enter
pop
dec
test
repnz
sbb
adc
icebp
popf
out
and
movsl
and
sarl
cmp
mov
icebp
daa
cli
xor
sti
rcll
mov
mov
movsb
jnp
mov
mov
xchg
subb
push
jp
movhps
hlt
ret
jle
mov
iret
adc
push
ds
into
cmc
mov
int3
mov
mov
xchg
fxch
jl
jmp
jp
fadd
lret
in
nop
fwait
shl
nop
in
and
movsl
xor
lahf
add
int3
cwtl
incb
push
fstpt
xchg
xchg
mov
sti
inc
jo
inc
out
pop
mov
data16
jnp
push
addl
daa
pushl
ljmp
cmp
pop
dec
outsb
jo
push
jb
mov
lcall
adc
inc
std
repz
outsb
jge
sahf
cwtl
push
xlat
fdivp
jb
nop
jg
mov
ljmp
push
sub
outsb
sub
fwait
xchg
push
push
and
hlt
dec
scas
rolb
enter
adc
sub
stos
push
cld
in
int
rcll
cld
xorb
push
and
inc
out
and
push
cmpsl
inc
push
xchg
iret
pop
add
add
call
std
mov
ret
add
inc
lahf
je
stos
inc
and
sahf
cld
test
xchg
shr
sahf
outsl
cmp
xor
and
loop
mov
xchg
jp
or
pusha
xor
mov
cmp
dec
inc
popf
cmpl
push
stc
and
mov
ljmp
dec
mov
mov
pop
push
cld
nop
leave
fadds
jbe
enter
mov
mov
dec
insl
icebp
imul
mov
xor
inc
pop
adc
push
cmpsl
fists
ja
xor
scas
pop
jbe
stos
mov
enter
adc
test
and
fnstsw
sub
shrl
inc
icebp
mov
and
pop
mov
and
psrlw
and
test
pop
push
push
xor
cmp
lock
ss
movsb
jle
adc
jnp
jbe
sub
outsb
jnp
inc
dec
call
ss
fisttps
inc
test
lods
call
or
cmc
push
out
dec
sbb
in
aaa
add
xor
sbb
dec
inc
and
push
sub
in
cmp
jae
xchg
sahf
jl
cli
lods
cs
pop
inc
inc
push
out
or
out
mov
std
insb
jb
mov
and
push
sbb
test
jb
mov
in
shll
mov
dec
ljmp
mov
sub
add
es
inc
jecxz
shrl
dec
adc
addr16
out
popf
in
je
cmp
repz
mov
xchg
sbb
sti
inc
sbb
inc
lret
adc
push
xchg
xor
inc
dec
dec
aas
insl
fstpt
fistl
mov
pop
jnp
adc
outsb
push
and
nop
mov
sub
rorl
or
jbe
scas
or
es
jecxz
jbe
gs
ja
xchg
in
das
adc
lret
pop
out
xchg
in
cmpl
cld
xor
mov
jmp
into
subb
pop
sbb
push
and
scas
dec
push
or
cmc
mov
outsl
test
arpl
ds
and
insb
dec
lds
xor
pop
lahf
addr16
push
andb
adc
xchg
and
sti
jmp
sbb
jecxz
pop
or
pop
repz
mov
mov
jg
mov
pop
js
pusha
jge
jecxz
outsl
dec
push
outsl
ror
xor
jge
cmp
pop
push
jae
adc
mov
out
repnz
movsb
fistps
add
mov
in
mov
push
push
shl
dec
daa
stos
addr16
push
shrb
jle
add
out
add
orl
aam
mov
add
adc
xchg
jo
loopne
push
stos
push
sub
cmp
pop
push
jge
jg
lret
icebp
out
jbe
das
mov
add
xor
xchg
in
shll
pop
sub
add
rolb
pop
loope
xchg
test
ret
xchg
add
adc
mov
push
push
pop
sbb
je
inc
or
adc
rol
fimull
lock
in
leave
mov
xchg
xchg
sahf
sti
loopne
jne
mov
mov
push
idivb
dec
aas
test
orb
fcmovnu
out
add
cmc
sbb
pop
push
push
sub
push
outsb
sbb
mov
jmp
loope
push
and
mov
nop
mov
frstpm(287
push
lea
stos
int
cmp
lcall
push
mov
fdiv
popa
lret
es
sub
sub
dec
and
push
mov
mov
insb
dec
inc
mov
cmp
xchg
lods
xor
jmp
repnz
adc
lds
arpl
and
aam
push
xor
stos
scas
sbb
pop
insl
and
cld
dec
lcall
lret
leave
fidivrs
movsb
mov
fwait
lock
jle
mov
rcr
jbe
fldenv
repz
les
orb
jl
hlt
mov
sahf
imul
daa
mov
mov
jmp
xchg
mov
dec
divb
sub
dec
test
push
stc
add
pushf
cmp
and
lods
push
int
out
dec
adc
push
mov
jns
xchg
xchg
leave
loopne
roll
xchg
fldl
push
lret
cmp
and
inc
pop
cmp
aaa
push
mov
loopne
xlat
or
or
loop
js
sti
push
test
dec
or
mov
sbb
stos
jnp
mov
push
mov
cmp
lods
ret
adcl
mov
sub
mov
aaa
or
mov
mov
decb
push
outsb
out
adc
jle
lock
fdivrs
std
jno
in
or
pop
inc
xlat
fadds
es
add
mov
rolb
popf
mov
cmp
add
loop
repnz
out
xchg
jge
lds
in
lret
cs
cmpsl
negb
int3
shrb
mov
aaa
scas
test
cmc
sar
dec
pop
fidivs
jns
xchg
add
dec
je
outsb
xchg
out
sbb
rcrl
test
call
scas
aas
jge
sbb
mov
add
push
cmp
jo
push
adc
mov
pop
xorb
incb
ljmp
out
mov
inc
and
loope
sub
adc
push
cmp
or
fldt
or
mov
in
mov
mov
mov
lret
lock
and
mov
jg
jmp
aaa
adc
rcr
faddl
pop
push
dec
mov
push
cmp
test
imull
ret
add
icebp
in
int
push
ljmp
and
dec
and
xchg
in
mov
inc
rolb
jnp
ja
shll
out
jmp
xor
insb
lret
scas
lcall
orb
mov
add
lcall
mov
mov
dec
ss
adc
push
cltd
shl
ret
sarb
xchg
shrb
test
push
push
loope
xchg
cmp
adc
cmpsl
cmp
clc
sbb
lret
or
ja
pusha
pop
loope
mov
inc
es
incb
fadds
aad
xor
push
dec
push
fidivrs
adc
enter
mov
mov
and
out
sbb
inc
out
sub
or
adc
jnp
call
or
lea
mull
aam
jg
mov
pop
in
cmp
jecxz
inc
in
rolb
dec
mov
mov
movlps
fwait
jmp
aam
decb
mov
cmpsl
sub
mov
jg
out
call
mov
gs
pop
cltd
jl
jge
or
mov
les
lods
cmpsl
push
mov
cmp
mov
in
add
stos
mov
jnp
push
xlat
mov
dec
adc
loop
mov
fs
adc
mov
fcoms
push
shll
and
loop
int
in
incl
mov
dec
xor
mov
shrl
popa
cmpb
fwait
dec
outsb
fwait
aas
int3
imul
dec
dec
pop
xchg
out
jbe
push
outsl
and
cmp
mov
and
add
sbb
or
lds
icebp
in
inc
push
out
and
aaa
xor
stos
jl
je
inc
imul
orl
xor
xor
pop
mov
push
in
outsl
adc
cmp
xor
int
aad
arpl
mov
cmpsb
fdivl
cs
adc
inc
hlt
insb
sub
sahf
jno
addr16
std
jae
jecxz
and
mov
add
out
mov
sahf
repz
icebp
jl
mov
arpl
jb
inc
jne
mov
mov
sub
rcrb
and
aad
mov
into
popf
pop
fnstcw
nop
and
jle
call
sbb
outsb
and
sbb
enter
fdivp
push
jnp
insl
mov
dec
push
pop
xchg
ja
push
add
sub
ljmp
mov
mov
pop
sbbb
mov
xchg
xchg
mov
imull
outsl
push
inc
pusha
aas
pop
pop
mov
add
and
push
imul
xor
pop
and
scas
movsb
xor
push
test
xchg
call
push
push
jnp
fwait
pop
and
bound
add
icebp
mov
mov
out
test
xchg
jo
and
xchg
and
jae
addr16
outsb
aam
movsb
pop
mov
adc
ljmp
ja
sbb
inc
scas
xchg
xchg
popa
cld
xor
clc
leave
sahf
adc
cmc
cmp
and
sbb
in
lods
dec
fs
or
sub
pop
repnz
dec
leave
cmp
incl
mov
add
push
outsl
insl
xchg
adc
ss
sub
cli
imul
shrl
add
pop
add
in
and
mov
aad
push
subl
lcall
in
fbstp
pop
sub
push
je
dec
jne
cmp
pop
xor
neg
int
sti
adcb
aaa
sub
enter
cs
pop
or
sub
jne
cli
push
fcmovbe
xchg
aas
xlat
push
lods
mov
popf
loopne
mov
mov
negb
sahf
lret
fildll
out
leave
mov
nop
xor
cmc
push
xor
push
xor
adc
mov
int
jmp
push
and
pop
scas
xor
xchg
loop
outsl
dec
stos
mov
sub
add
sub
call
push
fsubl
pop
xlat
mov
jmp
ret
dec
mov
aam
mov
inc
xchg
cs
pop
mov
pop
inc
mov
mov
dec
xchg
bound
divl
pop
arpl
hlt
fwait
jne
int3
je
push
dec
cli
out
jno
fs
push
or
cmp
subl
push
mov
push
popa
mov
bound
adc
aam
jo
enter
push
cltd
cmpsb
mov
test
mov
push
aad
addl
and
jle
cmp
mov
sub
sub
lret
push
inc
jmp
push
bound
bound
xchg
mov
adcb
mov
call
mov
mov
fsub
outsb
aas
imul
push
pop
sbb
mov
in
jo
push
adc
pop
mov
jge
ret
in
add
data16
push
shll
inc
mov
push
aas
das
cmp
mov
mov
mov
ja
out
cmp
rorb
les
fisubl
hlt
pop
inc
fimull
movsl
sub
xlat
cmp
icebp
add
hlt
mov
ret
mov
ja
subb
faddl
int
outsb
inc
add
pop
jne
lcall
xchg
mov
push
mov
shr
mov
jl
jl
imul
and
in
or
cli
pop
sbb
xor
inc
mov
lret
ret
loop
fsubl
inc
lea
fwait
push
push
pop
and
dec
add
mov
dec
push
xor
das
rcll
add
dec
sub
or
mov
mul
dec
add
push
sub
dec
or
dec
or
sahf
mov
mov
cltd
pop
add
mov
mov
outsb
and
jb
mov
mov
cmp
sub
outsb
lods
jo
fsubrl
imul
mov
push
cmp
aam
mov
pop
push
add
xchg
mov
lcall
xabort
or
adc
lret
jp
das
xchg
xchg
and
dec
loop
and
mov
and
and
icebp
mov
sub
lea
sub
xchg
mov
div
int
inc
push
movsb
outsl
push
and
jo
cmp
lock
jns
and
mov
adc
dec
and
test
mov
std
sub
mulb
or
stos
xor
bswap
inc
pop
insb
mov
test
mov
orb
sbb
jmp
add
aad
out
loope
mov
es
lds
pop
ret
or
sarb
ret
es
mov
inc
addb
lds
or
inc
testl
jbe
loope
lods
je
lret
hlt
iret
int
xor
adc
insb
pop
mov
xlat
or
test
sub
out
mov
mov
test
mov
test
shll
push
adc
mov
add
enter
enter
jge
jl
aam
ret
mov
stc
mov
sbb
jp
sub
sub
mov
gs
xchg
push
or
jbe
dec
je
xor
stos
push
mov
cmpsb
test
dec
jae,pn
sbb
js
leave
ja
xor
pop
cmc
sbb
xorb
call
repz
cltd
in
push
or
into
adc
int3
push
jle
mov
pop
adcl
add
outsb
loop
sub
add
mov
adc
dec
push
pop
fdivrl
dec
sbb
push
jae
and
cmc
mov
jae
stos
dec
inc
daa
movsl
pushl
xchg
not
adc
jle
fyl2x
sahf
adc
jnp
daa
push
mov
fadds
jp
lret
xchg
imul
adcl
fisttpl
test
js
pusha
xchg
je
fistl
jp
mov
bound
and
in
or
add
mov
scas
insl
leave
jle
cli
mov
cmp
leave
dec
imul
aam
cli
or
mov
stc
xchg
aam
iret
dec
sbb
les
push
mov
xchg
in
cwtl
shrl
push
mov
jmp
mov
add
cwtl
xchg
cmpsl
cmpsb
cmpsl
js
mov
sbb
xchg
xor
dec
repz
lret
lcall
add
into
xchg
addr16
push
add
and
dec
mov
pop
sbb
imul
cmp
jb
adc
push
lret
gs
insb
jo
pop
subl
mov
sbb
lcall
and
jbe
sub
cmc
loopne
xchg
aaa
push
orb
fstl
push
xchg
pusha
movsb
sbb
lcall
and
xlat
inc
xor
les
mov
sbb
pusha
sub
es
inc
mov
scas
and
sbb
pop
or
out
dec
inc
mov
ds
ja
or
out
xchg
and
jge
cmp
mov
inc
andl
mov
push
sub
jno
adc
ret
mov
das
int
jbe
mov
mov
inc
mov
mov
jg
fwait
mov
cmp
and
orb
mov
jb
inc
cwtl
xor
ss
std
mov
loope
cmp
or
popf
mov
mov
mov
gs
aas
xor
lods
ret
sbbb
cmpsb
fmulp
pop
leave
notl
shlb
or
jne
jnp
sahf
test
movsl
dec
sbb
and
mov
data16
rcrl
int3
push
mov
test
and
shl
in
cmpl
ljmp
mov
jg
push
iret
aaa
mov
push
sahf
jge
rcll
pushf
popl
and
cmp
sbb
jb
lds
sbb
mov
xchg
ret
call
repnz
aam
mov
lret
push
mov
add
test
lahf
cmp
addr16
inc
scas
nop
enter
loopne
sti
out
lret
cmp
mov
in
sbb
xor
push
pop
xor
xchg
xor
test
in
jecxz
dec
pusha
fistps
or
cmp
fcomps
outsb
lods
mov
sahf
mov
or
mov
push
xor
loop
cmc
xchg
cltd
cli
repz
or
fs
orb
sarb
xchg
adc
mov
xor
insl
xchg
mov
fimull
add
ret
jge
fidivrs
xchg
movsl
aas
mov
insb
xor
inc
lock
lahf
stos
out
movsb
mov
jp
jle
lods
subb
cli
pop
pop
add
sub
cmpsb
mov
mov
push
jle
call
insb
and
mov
adc
pop
adc
int3
jnp
outsl
and
xlat
iret
aad
add
ficomps
lret
jle
sub
imul
dec
adc
js
sahf
mov
icebp
dec
jae
push
out
xchg
es
xlat
add
repz
and
stos
jecxz
xchg
inc
mov
jbe
or
rorb
les
sbb
inc
insl
cmp
xchg
popf
jmp
dec
dec
loope
jp
inc
test
std
lret
mov
xchg
mov
xchg
dec
jle
sbb
popl
push
and
stc
jne
adcl
mov
xor
js
sarl
inc
and
movsb
movsl
cmp
or
dec
and
add
aas
jae
movl
push
and
int3
aad
pop
outsl
int3
std
xor
and
add
clc
aam
adc
loopne
pop
add
in
in
mov
dec
mov
lods
jmp
sti
shrl
movsb
ffreep
dec
jle
cmp
mov
xor
mov
or
sbb
pop
test
cltd
imul
cmp
jp
gs
shrl
xor
enter
dec
arpl
lds
lea
xor
mov
mov
in
cmpl
scas
insl
xchg
into
loope
pop
xchg
sub
mov
mov
xchg
pop
test
cmp
test
cmpsl
xor
pop
fwait
je
fnstsw
jmp
mov
std
push
or
jae
jmp
push
sbb
push
or
ret
xor
dec
jns
nopl
xor
movsb
cmpsl
pop
aad
mov
xchg
mov
jae
mov
jmp
dec
mov
or
dec
dec
sub
and
roll
aad
inc
dec
clc
pop
in
adc
je
push
pop
cld
lahf
jmp
mov
xor
outsl
sbb
fisttpl
add
stc
xor
push
or
mov
lcall
mov
sti
gs
jmp
adcb
and
cmpl
mov
push
mov
cmp
arpl
stos
in
xchg
flds
add
and
enter
fidivl
add
push
cmp
add
and
mov
mov
mov
cmp
xor
mov
fisubl
adc
inc
xchg
imul
mov
xchg
cmp
test
scas
and
add
jg
push
push
and
cli
scas
dec
inc
cltd
pop
inc
rcrl
andb
incl
popf
mov
es
add
and
cmp
sbb
fwait
push
xchg
jle
stc
dec
mov
mov
push
and
out
fldcw
inc
pop
pushf
inc
mov
push
out
test
push
loopne
lcall
fidivrs
dec
jmp
test
rorb
repnz
das
mov
add
lock
mov
imul
fldenv
aaa
movsb
dec
sub
add
imul
int
aaa
pop
std
subb
mov
jl
xchg
push
sbb
jecxz
or
lret
lock
adc
mov
xorl
mov
iret
and
or
scas
cmpb
add
pop
ds
adc
popf
fs
inc
or
adc
rolb
cmp
scas
mov
in
add
mov
jl
sbb
shll
and
mov
jp
or
imull
pusha
add
cltd
sub
inc
adc
mov
jb
dec
dec
cmp
cmp
insb
je
sahf
mov
add
pop
jl
insl
sub
push
negb
inc
addr16
repnz
mov
cmp
repnz
and
adc
dec
inc
fildl
push
js
xchg
das
imul
aas
jbe
shr
stos
outsb
int
ret
pop
sbb
push
mov
int3
pop
push
jg
push
mov
loop
sub
pop
int
scas
sub
jns
mov
rorl
call
cmpsl
mov
add
lret
mov
insl
inc
inc
imul
xchg
xorb
rcrb
rclb
cmp
loopne
ret
mov
stos
mov
bound
push
pop
es
xor
push
or
in
out
mov
aad
or
cmp
or
add
sub
xchg
in
jecxz
push
and
leave
in
pop
shrb
mov
xor
enter
xlat
aam
imul
in
dec
outsl
cmp
xlat
rcr
jno
adc
rcrl
sbbl
test
out
call
dec
or
pop
sub
jae
pushf
lahf
add
and
in
mov
out
inc
or
sub
jo
cmp
pop
out
out
mov
sbb
push
or
xchg
inc
call
subl
push
mov
mov
jecxz
dec
adc
inc
inc
and
inc
out
fsts
out
cmp
int
push
int
mov
inc
pop
insb
sbb
icebp
in
sahf
pop
int
es
sub
subl
clc
xchg
add
and
xchg
sub
shl
pusha
sbb
inc
pop
outsl
and
int3
cmp
sub
mov
inc
cmp
xchg
into
adc
xchg
fs
cmp
pop
push
push
fidivrl
add
push
jg
xchg
jg
js
mov
dec
mov
push
fsubrl
xchg
pop
mov
das
aaa
sub
xlat
and
das
push
mov
or
daa
push
dec
movsb
adc
jbe
adc
sarb
xchg
fmull
xor
jb
xor
test
imul
inc
push
dec
insb
nop
jg
mov
mov
pop
jmp
negl
xor
gs
pusha
adc
ss
mov
cli
in
cltd
das
in
into
cmpsb
push
inc
mov
out
mov
pop
add
fs
push
adc
or
hlt
inc
xchg
push
xchg
xor
imul
in
fists
rorl
mov
shll
sbb
or
mov
xchg
mov
xchg
fucomp
pop
add
les
xrelease
jmp
rcl
push
or
jnp
pop
je
shl
dec
repz
mov
imul
aad
sub
add
jp
shrb
sbb
stc
mov
lock
mov
jnp
call
in
mov
sti
repz
cmp
mov
jae
jmp
js
mov
testl
fidivs
mov
pushf
pop
or
fwait
bound
xor
fcomp
lods
addl
enter
shll
cld
rcrl
push
icebp
xor
daa
fldenv
mov
adc
and
cmp
fbld
mov
xlat
mov
movsl
jno
xchg
mov
xor
mov
cld
shl
xor
fiadds
push
repz
pop
cmp
test
adc
and
rcrl
ja
or
cli
sub
cli
cli
push
movsl
enter
and
sarl
div
mov
push
push
pop
jno
pop
inc
mov
sbb
push
sub
lods
or
les
mov
sbb
enter
mov
cmp
sbb
xchg
stc
xchg
adc
mov
ret
je
in
cmp
push
cmp
imulb
dec
test
out
fwait
out
dec
cmp
jbe
dec
stc
cli
jae
arpl
inc
movups
jnp
mov
or
jo
push
sub
icebp
aas
int
pop
and
aaa
xor
loopne
rolb
mov
add
xor
testl
scas
sbb
icebp
jmp
aaa
and
xchg
sub
cwtl
push
fprem1
enter
cwtl
pop
sub
inc
xchg
sbb
xor
test
dec
mov
aaa
pop
lcall
xchg
ss
ficomps
xchg
mov
cmp
dec
sub
inc
adc
cmc
pop
cmp
stos
pop
jbe
icebp
test
test
lret
fildll
sub
inc
xchg
xchg
bound
sbb
repz
stos
cmc
imul
sti
mov
mov
push
sahf
fwait
stos
stos
mov
xchg
push
sub
ds
insl
push
enter
int3
cltd
enter
push
in
inc
scas
mov
pop
xchg
jnp
mov
lods
lret
inc
imul
mov
data16
dec
cmp
fsubs
sub
push
fisubl
jae
pop
xchg
std
jo
sub
inc
insb
xor
lea
pop
dec
mov
lcall
fnstsw
ret
inc
stc
cli
enter
and
pushf
aaa
lcall
loop
push
pop
shr
insl
arpl
sub
add
sub
sbb
stos
xchg
daa
mov
push
jp
icebp
cmc
or
pop
jbe
lcall
stc
das
clc
jmp
outsb
ret
cmpsb
lcall
and
cs
mov
fidivrs
xchg
sub
mov
outsb
jno
xchg
push
sub
scas
shlb
xchg
adc
and
adc
mov
jnp
sbb
adc
sub
mov
fildll
test
scas
jae
inc
insb
inc
out
push
mov
imul
mov
sti
cltd
popf
sub
xchg
inc
xchg
sarb
inc
dec
cmp
orl
xor
xchg
insl
mov
fcomp
pop
push
fucomi
stc
or
icebp
idivb
sub
lcall
push
je
sbb
push
mov
and
cwtl
mov
mov
aad
out
or
mov
sbb
lock
dec
nop
aas
test
imul
sub
xor
in
test
add
inc
push
rclb
mov
and
dec
jmp
fwait
arpl
lds
lods
jne
imul
dec
sub
fidivs
cs
xchg
xchg
mov
fwait
dec
cmp
dec
add
ljmp
mov
stos
push
ljmp
pop
ljmp
adc
loopne
and
inc
mov
into
sub
stos
lret
icebp
inc
subb
cs
xor
aam
shr
cmp
add
jecxz
lods
mov
leave
sub
insb
push
xchg
ljmp
mov
cmc
jo
loope
into
push
ror
jmp
mov
xor
nop
inc
jbe
scas
pop
jle
lock
pop
push
js
cmpsl
mov
xor
ja
imul
and
mov
in
sbb
iret
repz
push
sub
or
pop
mov
rcrb
sub
jecxz
mov
in
nop
cs
mov
pop
adc
xlat
mov
ss
adcl
jge
add
mov
outsl
pop
mov
out
mov
jnp
cmpsl
push
add
into
movsb
stc
push
sbb
mov
xchg
sub
aas
ja
loope
stc
mov
fists
ret
dec
mov
sbb
mov
dec
and
test
jno
add
je
or
or
icebp
inc
mov
or
and
movsl
sbb
stos
test
mov
xchg
lret
fcmove
inc
adc
push
or
push
and
subl
jge
sbb
into
or
loope
dec
shl
aaa
subb
ss
cmpsl
fs
jmp
and
and
cld
xlat
sarl
outsb
cmp
mov
mov
mov
shrb
push
lock
jo
mov
mov
daa
xorl
mov
jecxz
flds
psrad
outsb
cmpsb
outsl
pusha
mov
mov
lods
mov
scas
and
sub
pop
or
add
mov
xchg
inc
cmp
arpl
in
rcr
fld
dec
loop
addr16
popa
pop
mov
xor
test
stc
mov
fimull
out
push
cwtl
and
fnstenv
xorl
loopne
or
fists
into
clc
push
lahf
xchg
std
and
pop
shl
cwtl
shlb
jne
push
dec
mov
mov
push
jge
aad
fst
push
testl
adc
jns
hlt
mov
sbb
mov
jl
inc
add
fsubr
and
cmpsl
rcrb
push
inc
mov
and
movntq
mov
jne
sbb
pop
xchg
je
pop
push
inc
dec
lret
incb
sub
jno
arpl
adc
rorb
addl
lods
xchg
shl
sub
cmpsl
pop
aas
dec
hlt
movsl
test
aad
movsl
pop
aam
mov
shlb
loop
push
pop
fwait
pop
sti
xchg
pop
cmpsl
out
shlb
push
jl
push
jo
sub
xor
pop
outsb
pop
call
aam
jne
push
mov
mov
mov
or
in
xchg
popf
dec
int3
sub
push
decb
bound
fcoml
aaa
jmp
sub
std
pop
mov
push
inc
mov
rcrl
fildll
ret
arpl
sbb
or
inc
js
test
add
xor
add
lock
push
sub
mov
sub
rcrb
mov
frstor
pop
es
add
or
push
mov
dec
stos
adc
or
push
in
dec
pop
jle,pn
push
fsubs
xlat
test
aas
sub
btr
in
ljmp
int
pop
fidivrl
fcompl
mov
push
addl
iret
xor
rolb
pop
push
cmp
popf
fs
inc
add
and
xchg
shl
mov
lods
and
das
loop
pop
call
dec
xor
roll
jmp
cmpsl
inc
scas
adc
xchg
inc
jo
lods
adc
movsb
pop
xor
sub
cltd
cmc
or
push
popf
and
gs
les
ret
lcall
adc
adc
lret
sbb
rdmsr
cmp
mov
mov
dec
push
push
and
dec
add
mov
imul
cmp
movsl
inc
inc
scas
movl
jl
cmp
loopne
mov
aad
test
mull
pop
in
inc
cmp
mov
or
adc
rorl
in
les
mov
int
push
shrl
popf
mov
sar
mov
aas
mov
jl
in
dec
das
dec
notl
sbb
repz
pop
in
in
sarl
test
test
mov
aad
and
pop
fiadds
or
add
dec
stos
adc
inc
adc
pop
jecxz
fsts
es
imul
ficoml
movsl
xor
iret
dec
clc
movsl
in
add
rcrb
shlb
pop
and
mov
in
pop
xor
aam
push
sub
addr16
mov
add
push
xchg
sub
cmp
insb
xlat
sar
sbb
stos
mov
pop
add
sbb
push
cmpsb
mull
aaa
push
mov
outsl
adc
push
cmc
insl
lahf
lock
bound
out
cwtl
cltd
adc
sub
push
xor
dec
xchg
pop
filds
sub
loope
lds
test
fdivr
cmpsl
dec
scas
es
adc
or
loop
cmp
fadd
sub
sarb
mov
movsb
push
adc
mov
add
das
cwtl
adcl
dec
inc
add
or
daa
lret
fld
push
xchg
sbb
mov
jnp
sub
daa
lret
ja
bound
sub
dec
lret
mov
sbb
push
mov
push
sub
and
push
mov
into
mov
sbb
clc
mov
pop
nop
pop
adc
sbb
add
sbb
loope
mov
push
cmpl
cwtl
sbb
rcl
jp
mov
push
gs
mov
adc
xchg
xor
imul
sahf
jbe
inc
fcmovnu
sub
movsb
xchg
cmp
test
test
mov
fldenv
or
jb
cld
sub
pop
addr16
bound
dec
test
mov
xor
loopne
xor
push
iret
jl
iret
cmp
sbb
call
fcmove
decl
pop
jns
push
push
icebp
lock
add
xchg
arpl
pop
push
xchg
imul
pop
loopne
push
mov
add
dec
or
mov
cmp
add
jecxz
dec
sbb
xchg
cmpb
push
lcall
sahf
fcompl
sub
inc
push
cmp
push
dec
lods
mov
push
lret
loope
lods
movsb
mov
fdivs
pusha
cli
cs
mov
xchg
mov
pop
mov
mov
es
jno
repnz
sub
and
mov
fs
dec
xchg
out
stos
loope
leave
outsb
and
jle
aas
stos
xor
add
and
mov
xchg
popa
addr16
std
pop
fcompl
mov
jmp
sbb
push
sbb
dec
aas
gs
daa
outsl
repz
sbb
aad
mov
out
and
add
dec
rorl
mov
js
xor
cmpsb
xchg
push
js
frstor
dec
out
rorl
jge
cmp
leave
mov
sbb
adc
and
pusha
in
lods
in
mov
loop
fwait
cld
sbb
mov
jmp
dec
push
push
pusha
rorl
pop
push
lret
fwait
rcrb
lahf
outsb
sahf
fcomp
or
rolb
ret
dec
cld
test
mov
xchg
mov
mov
sbb
jmp
sbb
pop
rolb
mov
mov
popf
aad
sub
push
ficoml
jp
flds
in
ret
dec
sub
lds
sbb
pop
rcrl
in
xlat
or
icebp
pcmpeqw
scas
cmpsl
xchg
jo
cmpsb
adc
push
and
out
loop
loopne
mov
and
push
jecxz
pop
outsl
popf
pushf
jecxz
xchg
sub
sub
add
cmpl
cld
cmpsl
lea
out
xor
outsl
scas
push
mov
test
pop
jb
gs
and
mov
add
cli
push
gs
lds
imull
sbb
xor
lret
pushw
cmp
inc
lds
or
fistpl
cmp
ss
xchg
stos
out
jo
xlat
xchg
cs
fcmovne
addr16
push
adc
out
mov
pop
std
scas
fmull
cmpsl
push
dec
push
add
sub
mov
jmp
sub
repz
adc
mov
xor
ljmp
repz
stc
inc
insb
test
sarl
xchg
lods
xchg
repz
jl
filds
adc
jo
ror
lock
hlt
push
mov
jle
jp
and
call
sub
cs
in
cmp
push
loope
jmp
or
add
loopne
popf
mov
adc
inc
imul
push
push
pop
cli
rorl
ret
scas
mov
dec
add
or
out
packssdw
ss
insb
imul
sbb
mov
jmp
jecxz
stos
mov
mov
lret
inc
cmp
lock
std
sbb
push
test
sub
test
ljmp
addr16
mov
lret
outsb
push
adc
bound
mov
sar
push
and
xchg
rorl
fsubr
pusha
es
test
xchg
test
xchg
mov
mov
push
fstps
insb
sub
sbbl
adc
cs
mov
clc
dec
cmc
sarl
mov
pop
add
cmp
cmp
mov
adc
imul
pop
and
jge
cltd
inc
and
stos
and
cmpsl
pop
pop
push
push
adc
fiaddl
sbb
andl
icebp
notl
lret
nop
dec
hlt
mov
xchg
frstor
testb
push
sbb
xor
inc
or
jp
lods
sub
lock
mov
icebp
push
hlt
adc
pop
xor
fsubrs
xchg
mov
push
add
jle
push
fucom
add
mov
or
test
sub
push
test
xchg
fwait
dec
lods
aad
sbb
xor
sub
aas
call
and
loope
jecxz
lods
pop
xor
jle
jp
aaa
sub
ret
add
mov
loopne
pop
xlat
hlt
test
movsb
mov
cmp
mov
insb
dec
ja
sbb
push
sbb
dec
loop
ss
jl
mov
jns
fs
inc
test
jmp
mov
xor
in
insl
add
dec
mov
in
jmp
mov
sub
push
ret
mov
mov
mov
mov
popa
xchg
and
adc
out
fldcw
mov
adc
test
jecxz
daa
dec
int
sti
push
cmp
inc
mov
js
cmp
pop
or
fidivrs
cli
pusha
sbb
jp
xor
adc
cmp
jmp
mov
push
push
and
inc
subb
xchg
call
lods
add
out
pushf
and
mov
test
and
xorl
dec
daa
mov
test
xchg
pop
pop
xchg
push
ret
jbe
jmp
pop
or
push
lds
lahf
sahf
mov
scas
push
pop
dec
mov
loop
mov
sub
outsb
loop
stc
fdecstp
sub
xchg
in
hlt
arpl
ret
pop
pop
xchg
testb
pop
cmp
inc
jecxz
fdivl
nop
mov
sbb
push
push
pop
pop
mov
add
xchg
add
sbb
and
mov
or
movsb
add
inc
xor
mov
sbb
or
lods
incb
xlat
pop
push
cwtl
inc
divl
leave
test
mov
daa
xor
adc
fs
clc
dec
addb
push
jl
cmpl
inc
addl
ds
call
cs
sub
dec
rclb
xor
push
clc
or
pop
nop
lock
lock
cmpsb
cmp
data16
out
xlat
ljmp
cmc
insb
sbb
sub
add
je
xchg
jns
int3
mov
add
dec
insl
xchg
fnstsw
fdivl
int
push
cmpsl
imul
mov
or
mov
mov
lea
inc
fwait
cmp
int
or
int
mov
xor
jmp
lret
xchg
sub
push
insb
out
xchg
movl
push
cli
rorl
xchg
or
jp
push
psllw
nop
lock
jmp
push
jnp
pop
sbbl
and
cwtl
stc
faddl
push
mov
add
jb
insl
add
bound
inc
lods
repnz
dec
std
stos
lret
ret
ljmp
jo
aaa
loopne
dec
push
jbe
jo
mov
mov
jbe
lret
inc
xchg
popf
outsl
mov
jo
loopne
pop
nop
sbb
stos
cmp
inc
imul
mov
and
ror
ljmp
cmovae
imull
sbb
imul
xchg
jne
out
and
inc
push
add
leave
cwtl
jecxz
daa
xchg
cli
add
std
pop
dec
inc
in
fsubr
mov
mov
sti
ja
sahf
test
mov
jge
test
or
jle
leavew
mov
jg
fnstenv
fldt
push
cmp
dec
mov
jmp
pop
pop
jne
rolw
cmp
fwait
or
ss
aam
mov
inc
hlt
outsl
in
jo
sbb
push
xchg
mov
movsl
add
adcl
outsb
cli
mov
fmuls
push
add
iret
add
push
ja
inc
outsl
movsb
add
dec
xor
test
pop
inc
push
jg
out
push
mov
mov
stos
out
or
or
testl
in
loope
xchg
stos
cltd
arpl
dec
inc
lock
mov
movsl
xor
mov
mov
shll
pop
cmp
jp
xor
dec
push
mov
xchg
cmp
push
pusha
enter
adc
xchg
push
popf
bound
stos
or
dec
outsb
cmpb
stos
and
mov
fcoml
lahf
inc
femms
test
jg
cmp
cli
push
vmovss
add
pop
loop
xchg
in
mov
jnp
xchg
adc
stos
mov
lahf
test
push
dec
adc
lea
jg
inc
cmp
adc
and
sahf
mov
dec
jl
pop
mov
add
sub
ss
in
jg
into
out
fnsave
sub
scas
cmp
xor
cld
scas
and
stc
clc
sub
inc
mov
dec
sahf
lret
mul
fnstsw
push
idivl
inc
loopne
jns
cli
push
or
push
orl
cs
push
out
and
cmp
stos
insb
cs
in
add
ds
mov
loopne
xchg
cmpsb
hlt
push
mov
and
cmpl
lock
inc
ss
movsb
xor
stos
jnp
mov
ljmp
mov
add
shlb
fcmovb
adc
jb
push
inc
repnz
fs
lods
mov
sbb
mov
mov
push
and
shlb
inc
cmpsl
pop
into
mov
fdivs
mov
add
inc
sub
cmp
adc
rcll
fadds
mov
xchg
mov
or
and
cltd
xchg
jb
cwtl
mov
lret
xor
roll
dec
cmp
hlt
daa
push
mov
out
and
push
jecxz
sbb
outsl
inc
fdiv
iret
adc
test
push
scas
jnp
sub
pusha
jo
sbb
jmp
sub
ret
es
out
xchg
inc
in
jmp
loop
xchg
pop
lock
mov
test
insl
test
mov
rcl
into
popl
or
in
lret
sahf
or
sub
pushf
sbb
and
bound
mov
fs
ficoms
cmp
and
push
and
cli
jns
sub
dec
add
adc
and
bound
push
aad
mov
inc
cmc
rol
xchg
cs
push
or
fcomp
sub
out
daa
aaa
push
adc
lods
cmpsb
hlt
xchg
loop
arpl
shr
jns
mov
daa
imul
add
js
iret
add
fnstcw
outsb
iret
into
sub
mov
pop
in
fdivp
push
cmp
int3
inc
dec
jno
aam
push
sahf
xchg
dec
jl
mov
hlt
mov
and
test
dec
sbb
sbb
in
inc
divb
or
aam
mov
cmp
cli
repnz
ss
dec
in
fadds
icebp
out
test
dec
stc
loopne
push
mov
push
movsb
xor
mov
out
mov
iret
test
sahf
sbb
jns
scas
inc
push
fadds
mov
sbb
mov
and
out
push
bound
dec
lahf
out
arpl
scas
cmp
lods
icebp
jb
jp
mov
int
sti
jns
jmp
not
sbb
jp
test
cs
push
dec
fcomps
xlat
mov
inc
out
inc
in
fadd
jg
sub
cmp
bound
lock
flds
out
notl
test
xor
daa
push
add
jae
ja
mov
jp
and
xchg
or
push
pop
mov
bound
jbe
daa
test
repnz
sbb
or
xorb
jnp
bound
idivb
lock
call
lret
add
inc
jg
test
shrb
xchg
jnp
ljmp
jo
test
xchg
sub
imul
in
or
enter
pop
cmp
ret
adc
and
fbld
lock
pop
cmp
in
xor
mov
sub
aaa
imul
mov
fidivrl
jmp
jge
ljmp
test
out
ljmp
add
ret
push
mov
cmp
jmp
add
mov
push
ds
xor
mov
rcr
or
scas
inc
sbbl
nop
xor
or
imul
or
lds
sbb
jmp
add
cs
dec
clc
lcall
insb
out
testb
and
xor
iret
fwait
test
adc
stc
mov
lock
loop
popa
inc
xor
mov
push
or
sub
inc
mov
sbb
inc
dec
sbb
adc
inc
fadds
pop
or
fcmove
inc
repz
ljmp
je
gs
push
mov
mov
mov
mov
xchg
xlat
sarb
stos
push
xor
scas
add
inc
xrelease
push
sbb
popa
jno
add
gs
or
jno
aaa
imul
arpl
lock
rol
push
inc
cmpsl
call
outsl
mov
mov
insl
add
push
xchg
pop
dec
out
cmpsl
outsl
pop
xor
mov
push
push
ret
pop
and
je
rclb
cs
mov
xchg
and
mov
ljmp
fldcw
leave
test
adc
scas
sbb
iret
sub
iret
adc
sbb
pushf
aad
popa
push
cmp
push
xchg
or
mov
pop
xor
add
rcll
and
adc
ljmp
cmp
daa
dec
push
mov
cmp
or
fsubrl
sub
fidivrl
jno
add
loop
daa
inc
int3
xchg
lcall
mov
pop
pusha
inc
sahf
lods
pop
lock
cmp
jg
into
arpl
and
mov
cli
cmpsl
sbb
inc
mov
mov
dec
mov
test
stos
jns
imul
and
lret
jne
inc
sub
in
enter
jns
ficoms
inc
pusha
cmp
cwtl
test
sarb
pop
sahf
mov
pop
jns
pushf
mov
outsb
pop
mov
cmpsb
jbe
lcall
iret
ja
cmp
inc
pop
push
dec
push
ljmp
push
mov
push
dec
out
cmp
mov
popf
adc
cltd
add
lods
fcmovnbe
bound
fiaddl
pushf
lock
fistpl
out
decl
scas
daa
cmp
add
xor
les
sti
push
pop
mov
testl
pop
push
mov
cwtl
jo
jb
xchg
push
int
fcompl
pop
das
ljmp
icebp
and
mov
aas
in
mov
dec
popa
xor
mov
loope
push
pop
std
mov
ja
or
enter
sub
fwait
add
inc
pop
ljmp
inc
and
add
pusha
or
push
sbbb
mulb
pop
lret
lcall
addr16
jo
outsl
repnz
lds
fwait
mov
pop
ss
sbb
fwait
or
lods
pop
inc
cld
scas
adc
cmp
rcl
jno
xor
out
xor
mov
xchg
std
adc
jecxz
xlat
rcrl
int3
push
shrb
mov
stos
subb
xchg
inc
xchg
ja
arpl
xor
mov
dec
adc
dec
orb
push
stos
stc
js
or
leave
jge
xchg
mov
mov
dec
es
lock
sub
icebp
mov
lock
jge
aad
pop
mov
inc
push
cmpsl
xlat
jne
dec
jbe
xchg
scas
jno
pop
cmp
push
ret
outsl
adc
insl
mov
gs
jno
pop
idiv
cmc
inc
movsl
mov
mov
adc
xchg
pop
pop
sar
cmp
pop
out
jle
test
imul
enter
sbb
addb
dec
push
mov
and
add
lea
fiadds
inc
dec
sbb
test
arpl
xchg
rorb
imul
jecxz
mov
aas
mov
adc
icebp
xor
enter
mov
popl
les
xchg
sbb
and
add
lret
pop
movsb
fsts
sti
imul
cmp
dec
mov
stc
and
pop
loopne
xchg
add
mov
mov
fs
inc
xor
xrelease
sti
pop
push
out
fcomp
sbb
rcr
adc
xchg
out
rorl
out
or
movsl
outsl
int
sub
movsl
hlt
add
mov
addl
insb
push
mov
mov
dec
testb
xchg
cld
mov
mov
divl
rcll
inc
and
cmpsl
mov
mov
xchg
sub
xor
cmp
or
ret
jmp
dec
nop
cld
rclb
push
fmuls
xchg
ljmp
mov
sahf
mov
pop
out
pop
dec
fdiv
inc
es
cmp
cmpsb
lds
push
cmc
sbb
in
jg
mov
lds
imul
xchg
push
dec
mov
inc
inc
or
jnp
push
add
test
pop
or
cld
ss
sub
add
jno
pop
pop
pop
adc
aas
ret
push
fsts
sub
inc
sbb
sbb
cmp
xor
icebp
daa
in
int3
sub
pop
mov
pop
xor
repz
sub
fs
and
loop
push
fcomi
shll
daa
or
or
or
imul
and
std
inc
sub
movsb
and
xor
jns
out
inc
pop
cmp
xlat
fcomps
push
imul
push
repnz
decl
mov
and
daa
dec
mov
jne
loop
pop
mov
add
in
push
mov
push
leave
pop
les
fstl
std
lods
arpl
out
jnp
xchg
xchg
in
iret
xchg
mov
negl
dec
fisubrs
xor
jmp
xchg
test
push
ljmp
mov
cwtl
add
test
repz
jl
cmp
fcomps
cs
popa
sub
js
push
mov
in
dec
les
insb
in
push
fsub
movsb
addr16
and
pop
arpl
push
mov
popf
jp
mov
xlat
mov
in
xor
xchg
call
lcall
imul
mov
pop
out
dec
orb
fnstsw
call
sbb
aad
inc
mov
sbb
ror
cs
fists
add
xor
call
inc
cmp
out
ljmp
push
inc
cmp
or
hlt
sub
xchg
movsl
jge
pushf
mov
xchg
or
xor
lret
repz
add
mov
aaa
dec
jecxz
mov
movsl
rorb
pushf
jae
aam
push
inc
mov
test
out
add
jb
repz
adc
lock
xor
sahf
lds
stc
dec
movsb
loop
scas
cmp
xchg
fisubl
aam
jae
cmp
adc
cmpsb
out
pop
inc
cmp
mov
sub
sub
mov
in
xor
je
and
add
dec
cmp
insl
xor
enter
and
outsl
test
fidivrl
xchg
xor
cld
and
test
add
fs
dec
cwtl
sbb
push
cmp
push
jns
testb
into
loope
pop
cmpsl
lods
lahf
int3
mov
cwtl
or
lds
notb
mov
cmp
inc
mov
cmp
mov
jp
shll
mov
roll
cs
test
sarb
mov
and
mov
in
scas
pusha
leave
jecxz
cmp
out
ret
sbb
push
fucomp
jecxz
lods
nop
dec
dec
pop
fwait
movsl
mulb
ds
adc
int
addl
aas
gs
mov
mov
inc
mov
ret
pop
popf
or
in
int
jns
in
mov
ret
or
fcoms
aad
mov
jnp
ja
pop
mov
dec
pop
push
adcb
add
mov
pop
aad
dec
mov
push
dec
cwtl
rclb
aad
iret
je
enter
cli
pop
rorl
push
imul
pop
cmp
daa
mov
adc
icebp
jnp
inc
or
mov
data16
pop
insb
mov
mov
rcrb
xor
imul
ret
into
std
daa
mov
add
and
cmp
cli
out
adc
int3
ss
mov
rol
mov
lcall
lods
sahf
mov
xchg
je
dec
ja
insl
fbstp
fcompl
stc
push
jle
fsubl
pushw
push
in
pop
daa
mov
subb
mov
dec
adc
lods
cltd
mov
hlt
cmp
jo
fnstenv
mov
cli
mov
stos
sbb
pop
call
mov
add
pop
sub
das
mov
daa
stc
inc
jbe
hlt
add
mov
lods
inc
shlb
push
xor
lea
sub
dec
sbb
fcoml
xchg
mov
mov
mov
ret
pop
cmp
and
mov
fwait
mov
and
subl
jp
out
or
stc
mov
movsb
jg
insb
fsts
cs
jge
aam
push
shll
jmp
inc
jne
jno
imul
cld
push
sbb
dec
roll
jnp
loopne
repz
sbb
outsb
mov
jbe
popf
insl
pop
insb
outsl
mov
xchg
sub
mov
ret
push
dec
push
out
or
das
cltd
pop
rol
test
mov
push
mov
xchg
dec
sbb
bound
xor
stos
lds
sub
push
dec
push
cmp
fisubl
nop
inc
xor
aad
inc
lret
lahf
fisttpl
push
mov
push
jg
test
je
ret
mov
pop
addl
mov
inc
ret
fcoms
rol
out
sub
std
jmp
xor
or
jg
and
hlt
lock
pop
scas
xchg
sbb
ret
pop
cli
aas
cwtl
add
xchg
sbb
and
pop
inc
add
nop
inc
out
popa
or
xchg
in
or
icebp
push
test
jbe
pop
shl
inc
mov
push
xor
pop
mov
fld1
adcl
dec
inc
mov
pop
int
pusha
push
pop
clc
hlt
mov
scas
inc
add
sarb
mov
iret
inc
push
insl
leave
push
out
cli
js
pop
push
out
pushf
or
pop
mov
adc
sbb
sbb
cli
stc
mov
mov
jp
sbb
fnsave
fcompl
orl
mov
mov
fisttpl
loopne
icebp
mov
sub
fimuls
stos
sarl
xchg
enter
mov
dec
dec
jno
adc
jnp
cld
xchg
cmp
lock
loope
jns
and
int3
fs
inc
fiadds
leave
pop
cmpsl
jl
rorb
or
movsb
dec
and
and
mov
jl
stos
pop
imul
imull
jge
dec
es
aas
and
lahf
mov
xor
mov
lea
inc
sub
add
and
dec
xchg
cmpsb
pop
jecxz
int3
sti
cmp
xlat
dec
xrelease
xor
outsl
mov
xchg
add
adc
xchg
and
clc
mov
xchg
sub
xchg
xor
and
mov
dec
rcll
jnp
sti
jmp
cwtl
fnstsw
mov
stos
or
push
mov
dec
mov
inc
fcoms
lahf
stos
mov
add
nop
das
outsl
xchg
das
ret
sbb
subl
test
adc
pop
and
fdivr
jns
push
cmp
aaa
fldl
sbb
jecxz
pop
rorb
sti
and
xor
or
call
xchg
jl
jne
mov
push
std
scas
pop
sbb
cmp
or
jp
mov
movsl
xor
cltd
stc
les
mov
jecxz
jns
sub
push
and
lea
notb
cmp
pop
sbb
xchg
push
lahf
dec
pop
mov
andl
aaa
jmp
iret
mul
das
push
push
sbb
and
je
mov
lret
lods
mov
sbb
test
or
andb
loopne
and
or
rorl
push
dec
mov
or
dec
test
fsubrl
test
repz
ds
gs
out
pushf
jnp
mov
push
pusha
in
add
sub
dec
bound
sub
dec
comiss
jnp
das
cmpsl
notl
fisttpl
mov
pop
dec
pop
icebp
inc
jge
add
inc
inc
icebp
fsts
inc
das
jae
push
lahf
cli
mov
bound
xchg
stos
mov
pop
or
test
and
push
imul
push
jmp
les
cs
mov
out
adc
aaa
jno
addr16
xor
push
jno
cmc
hlt
lds
adc
ret
xor
jg
xlat
ror
xor
cmpsl
add
lahf
dec
pop
imul
imul
movsb
fidivrl
jae
cli
fldl
sub
cmc
in
rcr
inc
bound
subb
movsl
sub
or
push
lds
adc
lret
stos
call
cmpsb
lcall
icebp
mov
popa
out
xchg
push
mov
popa
or
xchg
in
xchg
outsl
pop
es
hlt
mov
ljmp
inc
out
xchg
movb
push
test
pop
stos
push
aas
rclb
xor
cmp
mov
icebp
sbb
rcrb
dec
aaa
cmp
sub
dec
lock
xchg
lods
lret
mov
insl
mov
inc
insl
and
lea
pop
cmc
sub
scas
or
sub
mull
pusha
xchg
adcb
sbb
adc
dec
sub
cmp
jl
sti
or
pop
cli
lea
add
push
test
movsl
inc
mov
arpl
sbb
enter
nop
cmpsb
leave
fdiv
xchg
jne
and
mov
into
mov
test
push
scas
push
out
shll
popa
stc
jnp
sub
in
fldl
aad
push
cmp
adc
fs
ficoms
sub
stc
in
xor
das
or
ds
xor
mov
inc
test
adc
pop
jmp
lock
xchg
ljmp
xor
call
out
addb
cli
push
add
mov
scas
pop
xor
push
jp
mov
mov
int
cmp
cmp
pushf
ret
pop
add
call
test
add
jo
jno
ljmp
push
loop
inc
jnp
in
adc
sbb
mov
add
fistpl
cmp
dec
lea
mov
pop
mov
popf
pop
sbb
out
aaa
js
outsl
mov
out
jnp
mov
int
lock
mov
ja
jp
clc
sub
pusha
push
push
outsl
mov
aam
dec
inc
mov
add
subl
mov
test
or
or
push
mov
mov
pop
xor
mov
cmp
xchg
cmpsl
or
sti
mov
outsl
sarl
xor
push
xchg
mov
mov
popl
jbe
and
sar
movsl
dec
and
outsl
mov
std
pop
pop
loope
or
inc
cmc
fwait
sub
inc
sub
and
xchg
lret
inc
xchg
sub
out
mov
mov
imul
aaa
fistl
inc
pusha
test
xchg
nop
jecxz
adc
inc
pop
enter
mov
out
sahf
and
int
mov
push
or
jle
pop
sbb
lea
mov
mov
imul
stc
mov
out
fdivrs
push
pop
out
outsb
loop
pop
shlb
in
xchg
pop
call
insl
sbb
lock
mov
jg
int
sub
repz
rcrl
adc
out
cmc
xchg
mov
mov
out
insl
sub
sbb
push
pop
rorb
enter
aas
jno
popf
dec
mov
sti
fcomps
js
lock
adc
cltd
sub
pop
push
push
mov
ja
outsl
sbb
lock
dec
xchg
and
imul
std
ret
sahf
xor
loop
mov
sub
sub
dec
push
repz
jo
js
jnp
lcall
xchg
xchg
xchg
cmp
push
cmp
nop
push
rcrb
or
inc
xchg
mulb
xchg
and
test
sub
iret
or
addr16
mov
xchg
movsl
mov
ja
and
push
nop
xor
testb
lahf
and
das
rorb
nop
sub
lret
lds
pusha
xlat
push
mov
mov
mov
shll
fcmovbe
enter
inc
mov
cmp
pop
xchg
mov
pushf
ret
adc
jno
mov
cwtl
or
aas
xor
mov
jmp
stos
repnz
xchg
xchg
mov
dec
outsl
inc
notl
mov
mov
push
pop
lods
mov
rol
jl
subl
inc
pop
jns
movsl
adc
mov
xor
mov
mov
int
js
inc
pop
jnp
push
popf
push
xor
bound
cmc
scas
in
imul
imulb
in
cmp
sbb
cmc
out
or
test
std
iret
mov
lret
cmc
and
clc
loop
xchg
in
push
lds
mov
xchg
sbb
and
in
loope
cmp
cmp
daa
stos
cmp
loop
gs
pusha
push
or
mov
jno
loopne
sbb
push
mov
int
btc
push
rorb
loop
xchg
add
dec
shlb
imul
test
inc
in
stos
je
in
cwtl
adc
btcl
fisubs
addl
sub
jge
aad
sbb
clc
jge
sub
stos
sbb
sbb
pop
xchg
xor
mov
push
add
pop
inc
cmpsl
dec
test
es
inc
cmp
xchg
mov
dec
cmpsl
add
and
adc
push
nop
adc
daa
jmp
pop
bound
divb
mov
inc
sarl
jo
jne
xchg
in
inc
imul
jbe
shlb
push
fmull
or
in
cmp
cs
sbb
clc
cvttps2pi
sbb
add
mov
ret
push
ret
mov
fwait
pop
xchg
jp
sub
icebp
push
aaa
pushf
rclb
add
dec
fildll
pop
jns
inc
imul
jmp
cld
dec
sahf
push
pop
cs
cwtl
mov
mov
xorb
aam
or
adc
push
test
test
pushf
inc
jne
xor
pop
arpl
scas
mov
adc
inc
sbb
shrb
cli
scas
fstps
int
clc
and
jmp
out
out
test
jmp
dec
cli
jnp
arpl
xchg
cli
push
fs
jbe
fmuls
daa
arpl
hlt
inc
sbb
pop
adc
aad
xchg
and
sub
and
arpl
jl
pusha
cmp
scas
and
loope
add
dec
enter
sbb
je
push
mov
jmp
loopne
add
sarl
fcmovnb
test
mov
jmp
loopne
int3
es
aam
ljmp
je
aad
add
or
aam
or
je
mov
rcrl
push
jge
dec
cmp
pop
jnp
or
add
sub
mov
call
das
mov
pop
mov
sbb
cmp
insb
or
mov
mov
arpl
loope
and
add
fsubs
inc
or
out
mov
cmp
insl
or
mov
cmp
mov
in
insl
test
les
jno
xchg
lcall
adcl
lahf
dec
lods
mov
rcl
fcompl
adc
fdiv
imul
shrl
cmp
jmp
jae
mov
adc
push
dec
fstl
lcall
sahf
mov
jo
jo
mov
pop
sub
and
mov
les
ret
repz
cld
mov
dec
mov
imul
push
mov
xchg
or
adc
push
jle
xchg
scas
adc
push
outsl
stc
mov
xor
lret
add
cmp
into
dec
jo
or
dec
jae
flds
mov
mov
fistps
cmpb
nop
aam
mul
adc
push
mov
aas
call
sbb
les
sarl
pop
xchg
fsubl
test
or
xchg
ret
mov
ja
pop
adc
loop
push
adc
cmp
push
jns
xor
or
popa
cmp
and
jns
pop
xor
mov
add
push
mov
ret
imul
fisubrs
adc
jmp
mov
add
daa
pop
andb
xor
cmp
movsb
xchg
mov
insb
and
fwait
js
cld
add
dec
lock
mov
les
dec
dec
sbb
xchg
pop
xor
rcr
push
add
je
dec
std
jns
test
idiv
cltd
std
cmpsl
pop
or
pop
int3
or
imul
mov
movsb
mull
dec
js
or
mov
jp
mov
lret
mov
or
or
sar
jne
mov
mov
ja
cmp
jb
pop
dec
and
arpl
data16
mov
ja
add
cltd
and
mov
pop
das
mov
mov
cwtl
pop
fwait
cmpsl
jmp
bound
sub
xor
test
add
shlb
mov
lock
clc
push
push
mov
sub
jno
dec
mov
push
cmp
pop
mov
mov
leave
test
xor
pushf
shll
sbbb
lahf
cmp
ja
imull
mov
add
dec
inc
bound
js
jnp
mov
out
jnp,pn
lea
addr16
sub
cld
xchg
lds
add
and
add
ds
cmp
pop
push
jns
es
mov
negb
cmp
test
dec
ficompl
add
cs
loope
dec
dec
push
inc
ss
mov
test
jo
fiadds
outsb
pop
xor
inc
and
js
outsb
mov
fs
lret
fcmovne
cwtl
add
mov
stos
lods
jge
add
or
cmp
or
in
mov
test
or
ret
jb
fwait
mov
arpl
fdivl
movsb
pop
jl
lahf
stos
bnd
inc
fbld
cld
arpl
loope
nop
sbb
in
mov
cmp
pop
les
aam
inc
mov
add
cmp
rcll
and
cs
inc
add
cmpsb
popf
ret
push
mov
mov
sahf
xchg
sbb
subl
jl
mov
pop
mov
cmp
pop
inc
lret
cmpl
stos
ficomps
push
jnp
mov
cmpsl
jb
and
xchg
push
push
mov
inc
sbb
pop
jp
imul
incb
adc
lcall
push
inc
mov
call
test
push
sub
mov
aam
pop
sub
mov
ljmp
mov
jecxz
shr
lds
mov
sub
pushf
pop
pusha
sti
in
hlt
in
mov
aam
fnsave
iret
cltd
and
fisubrs
jnp
fcmovbe
xor
clc
mov
dec
push
xchg
adc
lahf
and
ljmp
add
cmp
cli
dec
push
mov
mov
and
loope
inc
dec
push
aad
hlt
cltd
jb
fadds
repz
pop
cld
mov
jno
nop
cltd
push
xor
out
mov
mov
test
ds
mov
jne
dec
dec
sub
jle
out
xor
xor
cld
cld
pop
sahf
xchg
popf
mov
mov
pop
push
or
movsb
out
shrb
outsl
adc
mov
fwait
iret
ja
inc
cwtl
cmp
fyl2x
jge
lea
dec
sub
sti
push
mov
and
js
insl
fmuls
push
pop
push
pop
ljmp
shlb
int3
jecxz
jbe
mov
lods
sbb
add
mov
pop
xchg
cmp
push
push
pushf
jne
addr16
jo
lret
inc
pushf
adc
xor
pop
xlat
cwtl
lret
jns
jp
shlb
pop
call
mov
sti
jecxz
mov
push
inc
repnz
and
jge
nop
push
dec
jb
repz
gs
lods
je
and
sbb
push
xor
ja
testl
test
sub
mov
xlat
push
jnp
push
icebp
sarl
aam
cmp
inc
insl
sbb
pop
dec
pop
dec
subl
jmp
incb
adc
loop
lods
das
sub
and
pop
and
fiaddl
jmp
cmp
xor
out
dec
inc
push
cmp
lods
inc
int
cmp
aas
jno
clc
js
or
mov
adc
fs
xchg
test
aas
stc
idivb
sbb
popa
mov
loope
pop
mov
pop
push
sbb
mov
mov
rcll
movsb
lcall
mov
xchg
inc
jle
dec
shrb
mull
xchg
cmp
pop
pop
xor
pop
roll
or
rorb
push
mov
int
loope
jae
dec
jg
lods
pop
xor
sub
loop
xchg
nop
lods
decl
arpl
in
xchg
lods
add
add
insb
pop
scas
push
inc
sbb
sbb
inc
push
xchg
adc
lret
push
mov
in
rorl
arpl
xchg
cmp
bound
loope
inc
fsubrl
xor
xor
rorb
sbb
jg
mov
push
xchg
aas
jno
loopne
lahf
aam
cmp
xor
or
mov
scas
jb
xchg
fxch
arpl
fsts
mov
insb
outsb
jp
repz
mov
xchg
push
jle
fsts
pop
jb
aas
ret
sbbb
dec
xor
adc
scas
sahf
cmp
outsb
mov
pop
fstp
std
sbb
jle
sub
insl
lret
int3
stos
nop
xchg
clc
lcall
xchg
fcomps
test
addr16
xor
jns
insb
and
lods
sbb
movsl
pop
push
hlt
sbb
jnp
cld
gs
cmp
and
pop
jae
ret
outsb
push
cli
mov
lock
push
negl
ret
data16
jno
daa
mov
repnz
movsb
jae
or
mov
add
jnp
js
sbb
scas
jp
add
ret
mov
dec
ljmp
mov
or
sub
cli
cld
mov
addr16
sbb
sbb
das
jl
mov
xchg
sub
inc
xchg
pop
sub
cmp
addr16
push
fstpl
mov
sub
inc
and
add
setg
jae
mov
cmp
aaa
jno
push
or
pop
or
dec
in
ja
sub
xchg
inc
test
adc
sbb
cmp
dec
jne
movsb
dec
lock
mov
sbb
adc
lds
xchg
sub
pop
jp
jmp
std
test
shr
je
int
aad
cli
cld
lds
xor
jp
pop
mov
sbb
sub
bound
pop
mov
lock
int3
jns
adc
xor
mov
add
lahf
sub
dec
fcomi
xor
je
xor
mov
sbb
xor
mov
in
shll
cmp
inc
push
pop
mov
push
movsb
andb
dec
xchg
cmp
and
test
repz
icebp
insb
hlt
adc
orl
xchg
dec
mov
jle
arpl
inc
mov
push
sbb
and
mov
repz
jmp
xor
mov
inc
inc
test
aad
clc
loop
push
or
out
xchg
push
or
push
arpl
fwait
jno
scas
cmp
movsb
xchg
add
pop
xlat
push
cmp
test
movsb
aaa
iret
movsb
add
iret
lcall
inc
dec
je
imul
cmpsl
sbb
iret
mov
je
lret
lock
lret
out
pop
arpl
call
xchg
pop
arpl
push
xchg
shll
movsb
aad
xor
jo
mov
mov
push
cmc
adc
cld
cmp
inc
jg
shrb
daa
fwait
ljmp
in
ljmp
shll
repnz
pushf
jl,pt
data16
test
popf
mov
jl
pusha
les
add
push
xchg
stos
or
xor
mov
fidivl
ss
js
cmp
cmp
push
sbb
imul
add
add
and
xchg
mov
out
call
lock
xchg
out
or
cmp
les
mov
lds
xor
jno
xlat
fwait
cmpsb
stos
pop
lret
ficompl
cwtl
mov
out
addr16
adc
cli
outsb
sbb
repz
out
mov
adcb
mov
stos
adc
les
movsb
add
out
mov
and
testb
je
lods
lds
inc
ret
pop
or
cmp
mov
mov
push
and
jbe
fs
or
jge
call
ret
cmc
jp
fstl
nop
pop
scas
sub
fs
sub
push
inc
mov
push
sub
das
inc
dec
sub
push
ficomps
test
jl
and
xchg
scas
pop
pop
cmp
cmp
sbb
jbe
cs
dec
insb
dec
stos
in
jnp
dec
daa
shrl
sti
shll
aad
sub
je
push
outsb
adc
jb
std
clc
ret
lods
dec
inc
xor
pop
data16
std
push
sarb
or
or
or
mov
aam
je
daa
mov
scas
add
xor
sub
js
cwtl
mov
push
enter
cmp
in
clc
mov
mov
jb
in
test
repnz
cmpsb
or
js
adc
stc
loop
push
and
fisubs
mov
test
sbb
xchg
cmp
push
cmp
push
fnstcw
add
cmp
rcrb
lods
repz
and
in
pop
in
pop
ja
xchg
mov
xor
pop
rorl
xor
add
add
xchg
push
fisttpl
jo
in
fidivs
mov
lahf
cli
sahf
cmpsb
lcall
add
lret
pop
adc
add
push
mov
imul
ret
clc
pop
aam
in
jns
inc
cmp
jae
fs
test
js
fbstp
aam
sub
out
inc
mov
pop
insl
test
inc
and
jns
xor
or
mov
out
pop
fcompl
mov
cmc
aaa
dec
add
dec
clc
leave
sarl
ss
inc
ds
bound
loope
mov
cmp
adc
dec
addr16
stos
sbb
sub
jno
daa
and
lock
jns
inc
dec
jp
xchg
clc
inc
jmp
jg
sbb
aas
imul
pop
jle
repnz
ficompl
push
mov
in
jb
mov
and
adc
cltd
pop
fldln2
lods
shlb
and
push
cmp
sti
pop
insl
and
ss
sub
cli
sbb
jge
into
fimull
and
mov
adc
rcr
cmp
cmp
xor
cmp
loopne
add
sahf
add
shlb
inc
and
adc
and
inc
add
jne
mov
jbe
pop
add
jo
push
xor
cld
ljmp
dec
cwtl
mov
or
popf
clc
mov
mov
add
inc
sbb
sbb
insl
cmpsl
fwait
xor
aam
pop
sahf
adc
sub
cli
aad
shlb
out
pop
inc
in
dec
sahf
daa
xchg
subb
xor
push
je
dec
scas
xchg
loop
fnstenv
dec
pop
outsl
mov
sub
mov
sti
inc
scas
ret
add
ss
insb
adc
repz
inc
pop
in
int
in
pop
gs
out
movsb
inc
stos
test
in
and
jno
in
adc
insl
inc
xchg
xchg
adc
dec
out
sub
ficomps
cmp
and
jge
mov
mov
cmp
jne
repz
xor
inc
lods
lock
outsb
fwait
inc
xchg
cmp
into
lahf
mov
jae
mov
dec
gs
mov
push
mov
jg
push
mov
jns
ficompl
add
mov
jne
cmp
pop
or
in
pop
jmp
sub
pop
testb
dec
cmp
icebp
push
mov
fld
pop
mov
push
push
mov
add
test
lds
pop
dec
out
ficoms
out
in
out
testl
ret
push
shrb
outsb
in
sbb
ret
dec
jbe
sti
xor
sub
pop
and
call
out
pop
jno
push
ja
and
mov
jmp
push
jg
aad
fs
insl
xor
cwtl
cmp
pop
nop
sahf
sbb
clc
rol
mov
xchg
mov
lret
push
ficoml
clc
mov
lods
mov
mov
pushf
fs
inc
cmp
sbb
sub
xchg
sub
mov
in
fstpl
in
xchg
cld
dec
pop
xlat
aam
xchg
aaa
mov
inc
mov
push
mov
rcpps
je
sub
aaa
jp
dec
push
popa
mov
add
int3
adc
lret
cmpsb
aaa
push
scas
sahf
scas
stos
mov
mov
cli
mov
testl
outsb
test
je
mov
shlb
fistl
mov
mov
mov
mov
dec
push
sub
inc
cmp
cmp
ljmp
fnstsw
pusha
lahf
add
popa
cli
mov
pop
xchg
lods
pop
jo
insl
mov
xor
imull
mov
fsts
mov
xchg
mov
insb
mov
pusha
mov
add
cmp
xchg
bound
mov
mov
jg
push
mov
pop
rorl
lods
daa
add
cmp
pop
xchg
outsl
add
and
movl
ljmp
test
sti
cli
aad
adc
movsb
push
push
imul
and
aad
mov
nop
xlat
imul
mov
mov
outsb
push
mov
test
fisttpll
iret
or
inc
jno
sbb
xchg
je
mov
and
push
pop
adc
leave
mov
sahf
xchg
test
mov
mov
mov
adc
je
test
push
sub
push
mov
movsl
fwait
jno
xchg
xlat
adc
mov
sti
lea
jno
xlat
lods
daa
cmpsb
add
adc
cli
pop
fdivs
cmc
dec
pop
test
fwait
scas
lcall
xchg
out
inc
jl
shlb
aaa
mov
lods
outsl
add
sbb
and
xchg
mov
pop
andb
stos
sahf
mov
cmc
mov
xor
sbb
out
cmp
icebp
push
add
xorb
sub
rcrl
push
sbb
dec
ffreep
jle
xor
mov
xchg
out
push
cli
sbb
je
sub
xor
inc
pop
mov
cmp
in
lock
cs
pop
outsl
mov
jl
fsubrp
pushf
scas
xor
iret
or
in
adc
fdivrs
sub
repnz
and
mov
mov
lahf
jl
test
sub
adc
rolb
stos
add
mov
sbb
call
push
dec
sbb
push
int
clc
and
adc
cmp
inc
iret
push
fisubrl
imul
and
sub
xchg
lea
push
jmp
sub
dec
push
pop
insb
jns
lock
push
sbb
adc
adc
add
mov
and
adc
jp
hlt
pop
jb
stos
std
insb
push
or
add
mov
or
xchg
push
pop
mov
data16
aam
mov
push
mov
nop
dec
pop
ljmp
fs
mov
clc
adc
das
lret
xor
jb
sbb
ljmp
push
es
popf
and
jne
dec
fs
or
nop
mov
xor
jns
rdtsc
or
shll
ljmp
cltd
dec
movsb
mov
stos
push
aas
jle
ret
sti
sbb
mov
nop
xor
jmp
pop
lahf
addr16
adc
adcb
jl
mov
andb
inc
mov
loope
int3
cmp
xchg
mov
subb
test
xchg
push
push
mov
dec
mov
daa
fidivs
in
add
movsl
fistpl
hlt
sarl
cmpsl
loop
xor
fmuls
mov
aaa
xor
sub
lods
test
dec
sbb
ja
inc
sahf
and
cmpsl
mov
push
jb
xchg
xchg
movsl
insl
outsb
or
mov
pop
mov
mov
int3
out
push
mov
adcb
stos
push
inc
ss
inc
push
out
mov
or
mov
mov
pusha
mov
adc
inc
pop
mov
icebp
pop
cmp
cmp
and
cld
push
sahf
jecxz
cld
mov
sbb
push
arpl
icebp
push
xchg
and
es
leave
cmp
xchg
addb
inc
inc
lods
iret
cmpsb
insl
xchg
jbe
or
xor
mov
dec
cltd
mov
push
cs
enter
data16
mov
cmp
aas
gs
add
ret
shlb
mov
sbb
pop
fs
sub
adc
fistl
sbb
xor
and
cwtl
xchg
push
and
rcll
lcall
mov
sub
lahf
loop
mov
inc
push
xchg
ds
sub
jno
in
outsl
dec
jno
mov
fs
mov
jo
mov
std
xchg
subl
mov
das
movsb
inc
mov
jp
cli
jg
cwtl
jp
cmp
xchg
xor
xlat
mov
pusha
mov
test
mov
hlt
cli
xlat
dec
xor
std
test
mov
lock
insl
in
xor
sahf
mov
dec
xlat
pop
push
cld
sbb
es
pop
push
cmpsb
add
fdivrs
add
mov
js
xchg
fidivrl
jno
adc
add
mov
aas
and
nop
outsb
fidivs
push
dec
dec
testl
add
sub
xchg
sbb
adc
mov
arpl
das
or
jbe
fsub
cmc
sahf
and
xchg
cwtl
pop
fisttpll
shrl
shll
lcall
loope
lds
or
xor
xchg
jbe
ret
mov
cwtl
jo
je
cmp
cwtl
int
mov
lahf
cmc
adc
or
cltd
out
mov
pushf
or
inc
mov
xor
fimuls
jbe
cmpsl
jno
mov
fidivs
lret
in
mov
outsl
cli
or
xchg
pop
hlt
mov
inc
in
pop
fidivrl
jge
sbb
add
inc
pusha
sbb
and
pop
mov
lods
mov
mov
xchg
push
and
mov
int
aad
sti
inc
stos
test
push
test
xchg
or
stos
xor
leave
push
dec
imul
and
xor
xchg
sahf
add
cmpsl
lods
fsubs
out
jae
mov
sbb
sub
push
xor
test
in
into
movsb
fimuls
movsl
xor
xchg
int
inc
mov
shlb
mov
mov
rcl
andl
mov
aam
jns
cs
jp
fstl
insl
mov
aaa
mov
sub
cltd
repnz
or
push
and
clc
cmp
adc
filds
fldcw
ret
xlat
sahf
cli
jmp
out
mov
dec
add
fcoms
movsb
mov
mov
cmpsl
and
xor
rcll
iret
in
les
dec
cmpsb
mov
aaa
lcall
push
fdivrl
in
lret
xchg
fdivrl
xlat
add
fmul
sub
les
dec
sbb
subl
jge
cmp
mov
test
mov
es
or
pop
mov
std
fwait
sub
mov
and
ljmp
adc
pop
adc
adc
aas
mov
mov
mov
jge
test
add
cli
fs
dec
mov
scas
test
fsub
cmp
pop
inc
push
push
imul
mov
push
into
mov
xor
xchg
pop
pop
jp
or
loop
iret
cmp
inc
add
aas
dec
fcomp
sbb
into
pop
fwait
sahf
sbb
mov
xchg
xchg
inc
inc
push
pusha
mov
ja
ss
jnp
shl
lret
insb
pop
adc
sub
mov
pop
cmpsl
lock
js
bnd
imulb
pushf
in
ds
out
rorl
xchg
iret
and
push
fisubrs
hlt
scas
gs
xorl
push
mov
xor
clc
outsb
in
jmp
mov
test
xor
ljmp
pushf
or
jb
das
stos
jnp
leave
fidivrs
rorb
pop
jp
cmp
movsl
popf
sarl
adc
pop
sbb
push
in
out
les
mov
adc
scas
mov
leave
sub
push
inc
inc
mov
ds
addb
cmp
push
movsl
cmp
mov
icebp
jo
push
jo
fisubl
xlat
loopne
repnz
iret
fwait
jle
cmp
test
pop
shl
fidivs
adcb
mov
gs
jb
mov
add
xchg
jle
lcall
sbb
add
push
xchg
adc
mov
sub
mov
xor
dec
lret
sub
testl
mov
decb
mov
mov
and
ret
mov
sahf
push
xor
xor
lea
jle
inc
pop
pop
mov
bound
lock
outsb
iret
icebp
iret
xchg
mov
pop
mov
jnp
xchg
andl
jae
cmpsb
mov
imul
rdrand
push
xor
dec
xchg
pop
mov
ja
clc
stos
xor
cmpsb
pushf
ficoml
jo
mov
xor
adc
jns
cmc
push
or
and
add
push
pop
mov
imul
aaa
test
xor
test
rolb
pop
xchg
mov
pop
and
mov
dec
xor
sub
push
lock
push
push
cmp
frstor
add
xchg
dec
xor
cli
in
push
rolb
mov
das
pushf
sahf
lds
sahf
xor
adc
cmp
xor
loop
aas
out
bound
xchg
cmpsw
lds
cmp
nop
das
inc
push
xchg
test
pop
jecxz
xor
inc
sub
in
fdivp
lods
mov
and
lea
push
mov
leave
cld
and
mov
mov
cltd
cmp
clc
inc
sbb
ljmp
pop
pop
enter
lcall
sub
inc
aaa
ja
push
in
inc
fisubs
pop
mov
fistps
cmp
xor
mov
xchg
orl
cmp
xor
out
cmc
jne
mov
mov
and
jnp
xor
iret
xor
cltd
pop
pusha
aaa
sub
mov
lea
ret
cmp
sub
cmpsb
insb
je
xor
inc
push
mov
dec
cmc
jb
ret
divl
sbb
test
and
add
orl
pop
test
arpl
cmp
out
mov
ja
jb
mov
pop
mov
jbe
mov
cwtl
xor
movsb
cmp
adc
mov
jg
fisubrl
and
and
mov
or
test
loope
enter
fwait
ljmp
cmp
dec
sub
push
test
inc
add
xchg
sbb
sub
aas
scas
das
jnp
fwait
aaa
add
jl
mov
xchg
scas
fwait
adc
mov
and
inc
loope
or
push
les
and
sbb
and
test
pop
addl
out
mov
mov
lds
push
addr16
inc
sbb
fwait
pop
or
orl
arpl
fldcw
mov
ljmp
cmpsb
inc
mov
jbe
cmp
aas
js
mov
mov
xor
lock
int3
shll
fdivl
xchg
adc
pop
outsb
test
das
in
and
pop
ss
cmpsb
push
fiadds
adc
pavgb
add
mov
inc
jne
cli
inc
jns
mov
jnp
ds
fistpl
push
mov
outsl
jb
call
jl
mov
addb
or
pop
mov
ret
adc
xchg
add
push
cmp
fsts
out
push
cmp
pop
xor
dec
mov
fwait
enter
cltd
or
cmp
xor
and
shlb
aas
push
dec
or
hlt
or
xchg
loop
loopne
jl
les
push
loope
mov
ljmp
dec
lcall
cmp
mov
pop
fadds
pop
pop
frstor
in
ss
mov
or
test
repnz
xchg
and
dec
inc
pop
push
adc
mov
jbe
popa
dec
sub
inc
int
hlt
ss
sar
mov
dec
jge
sub
mov
dec
cmp
insb
cmp
push
aad
and
imul
popa
push
out
lods
iret
dec
roll
popl
sahf
pop
mov
clc
nop
in
inc
sbb
mov
jg
stos
jns
in
and
xchg
lock
jg
inc
adc
jnp
dec
mov
inc
mov
dec
inc
test
adc
ret
add
fldt
jae
or
mov
cs
sbb
push
dec
cltd
scas
enter
repz
xor
jns
ja
inc
jbe
mov
mov
mov
pop
adc
add
pop
mov
push
loop
test
adc
pop
gs
js
add
xchg
cs
mov
shlb
icebp
xchg
sub
add
ret
call
fdivp
dec
inc
aam
mov
add
je
sbb
dec
jl
fdiv
cmpsl
fdivrs
nop
mov
int3
andb
mov
test
loop
imul
das
mov
lahf
pop
mov
adc
bound
jp
loopne
add
sub
arpl
cld
sbb
sub
pop
decl
xchg
pop
repnz
xchg
in
sbb
xchg
sub
jmp
rclb
jle
push
or
mov
xor
mov
pop
in
lods
xor
add
mov
shll
xor
fdivs
shll
test
sub
ljmp
nop
sbb
popf
ret
cld
adc
cmp
int3
jl
test
sbb
push
or
dec
inc
xor
popf
ja
xlat
out
jbe
insb
push
adc
sbb
mov
dec
mulb
popf
push
and
aad
dec
fld
lods
pop
mov
or
lea
cld
int3
push
sbb
adc
pushw
je
xchg
cmp
push
mov
push
xor
and
or
add
nop
add
bound
daa
fsubr
sub
jns
mov
addb
dec
add
lock
aaa
out
pop
lcall
arpl
imul
and
mov
test
shrl
sub
cmp
adc
jge
xchg
icebp
dec
cmp
mov
mov
popf
lcall
or
gs
pop
std
scas
lcall
push
mov
mov
dec
push
dec
jno
mov
stos
jg
jl
les
jnp
fisubrl
mov
pusha
out
cmp
mov
adc
dec
add
sub
in
stos
inc
dec
inc
cltd
xlat
xchg
push
sti
lds
movsb
mov
push
mov
jmp
mov
pop
pop
and
je
data16
mov
adcb
loope
jns
movsb
add
sbb
push
add
xchg
loope
xlat
lahf
add
into
test
fsubrp
jl
ret
dec
iret
dec
mov
push
or
bound
or
mov
add
pop
cmp
jbe
jbe
jmp
push
cwtl
inc
push
jg
ljmp
orb
dec
cmp
arpl
mov
mov
jno
fsts
push
aad
loope
mov
or
adc
test
scas
addr16
lock
xor
push
lods
scas
dec
add
xor
sbb
fsubs
mov
jg
fadd
in
inc
jne
cmpsl
lea
xor
mov
push
es
cld
inc
pushf
jle
jg
repz
xchg
ficomps
jge
data16
arpl
ds
inc
jbe
adc
jb
mov
jns
mov
mov
iret
cmp
and
xchg
clc
das
dec
int
mov
pushf
jbe
and
xor
cmp
pop
mov
jbe
push
mov
mov
call
dec
push
add
xor
sbbl
cmpsl
test
in
push
stc
jnp
scas
adc
stos
rorl
xchg
xlat
les
cmpsl
pop
xor
rclb
adc
sarb
xor
repnz
pop
repnz
or
mov
xor
mov
xchg
sub
out
fucom
or
lea
xchg
sub
push
inc
ss
movsl
in
jl
sahf
lock
dec
xchg
xor
test
add
push
rorl
shl
cmpl
ficoms
jnp
inc
jge
mov
push
cmp
cs
push
mov
or
mov
push
sbb
dec
add
js
cs
out
mov
add
sahf
pop
cmpsb
xchg
adc
cwtl
cli
insl
dec
popa
or
jo
je
mov
jmp
xchg
loop
es
jo
in
cltd
int3
iret
or
arpl
fnstsw
add
in
xchg
add
push
mov
add
icebp
jp
adc
add
or
xor
mov
cmp
pop
dec
add
test
lods
cmp
or
mov
lahf
xor
clc
push
test
push
cmp
push
cld
iret
lock
movsl
popa
int3
sub
and
and
cs
dec
adc
dec
xchg
lods
or
mov
sub
into
in
mov
jmp
test
dec
ret
out
cmpl
or
xor
mov
mov
adc
mov
in
popl
or
loope
insb
shrl
test
adc
add
rclb
adc
cmp
pusha
xor
fdivl
push
dec
rorb
into
adcl
fstp
hlt
xchg
hlt
cltd
fs
push
enter
mov
mov
jecxz
test
imul
lock
jbe
mov
pop
mov
inc
xor
pushl
adc
sub
call
sbb
pop
inc
stc
subl
nop
or
sub
ja
lahf
or
mov
pop
out
cmp
sub
mov
out
jge
cli
pusha
push
packsswb
mov
rcrl
push
imul
stc
repz
inc
lret
enter
ds
stos
popa
test
rcll
sahf
xchg
jb
hlt
push
jge
sbb
push
push
xchg
add
push
jge
push
lods
cmp
imul
xchg
jo
mov
xor
fnsave
lret
cmp
int3
inc
cld
or
xlat
rorl
mov
insb
or
fildll
sub
lock
mov
aas
add
adc
out
fwait
push
aam
cwtl
mov
das
pusha
and
mov
and
jbe
mov
cli
inc
xor
insb
aas
mov
xor
cld
ljmp
mov
sti
jnp
cwtl
add
cmpsb
sbb
pop
sub
rclb
jno
test
jno
add
pop
sbb
inc
outsb
jle
test
sub
in
mov
fidivrs
or
adc
cmp
bnd
pop
sbb
sti
data16
cmp
shll
fdivr
sbb
cmpb
aaa
jp
push
push
ds
pop
sahf
leave
mov
je
cmp
jg
sbb
loope
mov
and
jle
inc
js
clc
sub
inc
jnp
mov
jg
sbb
inc
or
movsl
in
mov
in
xchg
jns
inc
push
mov
in
lods
stos
scas
dec
push
and
jne
jl
mov
and
repz
push
stos
cmp
or
lcall
push
mov
loop
es
insl
adc
lahf
jbe
and
sub
mov
sbb
sarb
cmp
aaa
rcll
decl
popf
dec
ret
and
mov
jmp
ljmp
push
lret
js
mov
sti
inc
adc
sbb
std
cmp
insl
xor
call
out
push
aas
xchg
inc
adc
xchg
pop
sbbb
in
mov
mov
pop
rcrl
cmc
stos
dec
xorb
and
xchg
xchg
loope
in
test
push
std
xor
ror
js
pop
into
mov
cli
sbb
push
adcl
insl
lahf
push
cmpsb
int
test
mov
inc
push
pop
xor
push
xor
ljmp
ljmp
and
inc
push
jae
pop
idiv
mov
and
jne
adc
jne
jle
stc
movsb
mov
push
push
jmp
jle
les
lahf
adc
pop
ret
int
dec
repz
xchg
ljmp
xor
movsl
push
sbb
jne
inc
or
inc
mov
jmp
outsb
mov
push
mov
aad
cmpsl
ds
repz
movsl
pop
xchg
fnstcw
jbe
jb
sub
pop
sub
push
pop
xor
inc
icebp
out
fildll
dec
pop
sub
mov
mov
mov
or
mov
ja
imul
test
sbb
or
sub
push
push
push
js
lret
xlat
sti
inc
xlat
add
pop
or
aaa
push
dec
jae
push
mov
xor
outsb
loop
mov
adc
lods
jo
jb
push
pop
sub
adc
dec
jbe
dec
addr16
inc
add
data16
scas
push
jne
adc
jl
xchg
js
add
xchg
leave
data16
insb
daa
mov
adc
inc
cld
cltd
jle
push
sub
push
or
cli
jge
push
xlat
cwtl
mov
movsl
int
repz
sub
mov
lahf
inc
cltd
push
es
rclb
and
cmp
pop
mov
das
js
jno
ret
cli
xor
or
mov
jb
cmp
adc
scas
and
shlb
hlt
out
addr16
xchg
test
popa
mov
push
stc
or
sti
lea
dec
test
sub
dec
inc
or
loope
add
rorb
or
jg
lea
push
jno
inc
das
ss
sbb
pop
jl
into
lods
call
mov
movl
call
or
mov
lret
sbbb
imul
and
push
jle
xor
adc
shrl
pop
out
pop
js
hlt
sti
jne
je
movsb
sbb
cwtl
jae
and
mov
aam
std
int
adc
xchg
add
jns
inc
ja
lcall
fisttpll
and
xchg
lcall
mov
mov
mov
cmp
xor
mov
xor
inc
es
mov
sahf
xor
mov
mov
inc
and
stc
data16
and
mov
jae
cmp
push
adc
mov
mov
dec
fidivrl
or
pushf
xor
xor
add
inc
mov
cmpb
and
mov
jg
add
shlb
lahf
mov
out
arpl
sub
cli
int
lods
loope
fildll
adc
dec
sbb
mov
add
mov
pop
mov
mov
mov
int3
mov
sbb
adc
cmpsb
call
mov
int3
jle
xlat
mov
mov
jo
loop
addr16
adc
xchg
mov
pop
jb
xor
cld
in
add
idivl
cmp
pop
and
jne
pop
shll
imulb
xchg
pop
sti
mov
out
push
lea
inc
inc
hlt
test
mov
fs
jp
cmpsb
dec
push
leave
inc
pop
ljmp
xchg
mov
out
cmp
xor
icebp
xchg
daa
and
aad
xor
sub
push
mov
repnz
fisubrs
lods
aam
outsl
jmp
imul
pop
and
rolb
mov
and
andb
mov
mov
xchg
jge
sub
fdivrl
xchg
fstl
and
aaa
in
xor
mov
inc
inc
pop
add
test
mov
pop
ret
inc
mov
pop
lret
push
xor
outsb
xchg
aad
pop
xor
mov
into
push
icebp
in
mov
cmp
push
mov
or
movsl
xlat
mov
ds
cmp
pop
xor
mov
cmp
inc
aas
mulb
and
fistpl
jmp
idiv
data16
push
arpl
stos
dec
add
inc
cmpsl
or
paddd
daa
lret
pop
dec
xchg
inc
scas
mov
sub
fimuls
pop
movsl
std
pop
mov
or
iret
add
das
dec
push
enter
push
jecxz
dec
mov
cmp
in
pushf
aam
dec
std
push
pop
lods
jle
notl
jno
insb
or
jbe
mov
imul
xchg
out
jmp
roll
jae
inc
fisttps
mov
pop
sti
mov
mov
int
xchg
add
test
cwtl
adc
adc
xchg
mov
sub
rorl
into
int3
repz
pop
inc
enter
cmpsl
mov
adc
outsb
mov
dec
xchg
push
dec
adc
sbb
and
in
mov
sub
lea
mov
insb
dec
cli
stos
repz
je
cwtl
clc
mov
in
fidivl
sub
data16
mov
xor
fisttpl
pop
mov
fldcw
jb
xchg
cwtl
adc
stos
and
mov
out
or
mov
adc
and
mov
jo
xor
fisubs
xor
push
xor
aad
popa
lret
jmp
and
pop
loop
sub
push
aas
shrl
mov
sti
mov
jle
out
sub
lds
push
iret
aas
xchg
lcall
xor
mov
ds
mov
iret
and
outsl
jnp
inc
out
and
jg
movl
inc
dec
mov
and
lret
push
inc
adc
mov
xchg
xor
dec
nop
outsb
push
rorl
es
dec
xor
outsb
push
mov
mov
dec
sbb
mov
inc
stc
cmpsb
in
aas
pop
add
inc
jbe
lahf
in
sti
lahf
je
dec
cmp
in
fldenv
inc
adc
sbb
call
mov
fldt
insb
lret
dec
test
insl
das
cmpsl
push
adc
imul
cld
push
cmc
add
adc
push
jne
xchg
aaa
pop
fldl
jo
loop
rorb
pop
in
dec
or
dec
jae
cld
pop
movsb
mov
xchg
ljmp
pop
and
cmp
lahf
fstpt
lea
pusha
and
mov
loop
push
dec
pop
or
roll
pop
xchg
out
pop
and
bound
sarl
rclb
and
lock
imul
lods
lock
push
push
inc
rcl
int3
out
xchg
mov
dec
pushf
xlat
clc
popf
sub
cmpsb
xchg
xchg
adc
addr16
mov
and
xor
stc
les
addr16
add
sub
lods
sbb
outsl
stos
insl
cwtl
pop
mov
fidivl
stos
movsl
cmp
xlat
jo
xchg
xchg
nop
sbb
and
stos
loopne
pop
xchg
in
jl
cmp
scas
hlt
popf
and
in
or
inc
and
xchg
dec
inc
int3
xor
lcall
xor
repnz
jge
das
mov
sbb
cmpsb
lods
dec
xchg
push
fisttpl
icebp
aad
insl
push
fwait
push
xor
inc
mov
add
fsts
sub
sbb
outsl
testl
mov
cs
movsb
fimuls
xlat
push
into
fbstp
aam
pop
inc
sti
pop
xor
jnp
hlt
movl
xchg
mov
sbb
repz
xor
adcb
aaa
mov
add
lods
jns
lret
loop
push
fsubrs
lods
sbb
pop
in
xchg
loop
jns
or
scas
outsb
cmc
lahf
aad
stos
sbb
sbb
push
push
dec
lods
lret
push
xor
push
cli
xor
jno
or
or
ds
shll
xorl
inc
jg
inc
in
sbb
ja
outsl
pushf
test
mov
add
out
jns
push
imul
lahf
leave
inc
leave
clc
mov
stos
jo
aad
sub
pop
aaa
pusha
ja
xchg
shl
inc
cmc
lret
stos
add
mov
lods
fsub
ja
and
xchg
sbb
dec
lcall
cmc
lods
es
mov
fistpl
xchg
out
add
mov
popf
out
adc
and
mov
mulb
into
push
dec
push
xchg
and
ja
xchg
mov
dec
ds
leave
psrld
int3
lea
pusha
or
xchg
imul
xchg
rcrl
xor
dec
mov
lods
sbb
mov
push
pusha
inc
cmpsl
es
out
jp
mov
das
and
and
dec
mov
aad
cmpl
sbb
aaa
outsb
cmp
jne
cwtl
clc
mov
push
push
sbb
jge
pinsrw
or
popf
mov
mov
mov
mov
push
hlt
pop
push
xchg
fcoml
lret
aam
fcmovnbe
cmc
lret
cmc
test
push
dec
sub
push
jp
mov
or
mov
or
ficomps
pop
sub
loope
sbb
aas
rcrl
inc
or
mov
nop
push
sub
jb
aaa
pop
mov
push
shll
lcall
aad
imul
push
fdivrl
sub
mov
xchg
push
sbb
sbb
out
sbb
insb
daa
push
pop
clc
xor
and
test
fcmovnb
cmpl
iret
jle
outsl
and
aad
mov
loopne
sbb
call
icebp
xchg
rcrl
xchg
add
mov
ret
out
das
adc
and
xor
leave
cmpl
sub
pop
stc
leave
and
dec
shlb
mov
mov
shrl
cwtl
push
mov
popf
pop
sbb
js
les
add
std
sub
add
repz
addr16
xchg
adc
addb
pushl
adc
cmp
sbb
out
out
decl
mov
sub
je
push
shll
stos
mov
lcall
repnz
push
icebp
jg
scas
cmpsb
xchg
bswap
inc
stos
in
mov
movsl
pop
adc
addl
mov
out
popa
sub
fs
pop
xchg
fcomps
mov
inc
pop
dec
int
push
xorl
enter
push
fucom
adc
mov
xchg
or
inc
sub
div
stos
jg
dec
or
inc
cld
jg
incl
clc
sbb
xor
fucom
mov
lods
or
xchg
push
xor
or
xchg
fnsave
test
nop
mov
jno
movsl
lea
mov
pop
adc
or
popf
add
and
sub
clc
int3
jae
cmpsb
mov
in
push
pop
rcl
sub
mov
push
push
clc
sbb
jno
sbb
cmc
mov
dec
testl
nop
and
pop
push
sbb
cmc
or
je
xor
adc
jmp
mov
and
or
int3
mov
pushf
or
roll
mov
jp
add
xchg
popa
pop
iret
sbb
jnp
sub
orb
mov
mov
pushf
push
insb
arpl
jno
pcmpgtw
fs
inc
pop
mov
rorl
sti
or
loopne
jmp
xchg
add
cmp
push
or
int
and
movsl
xchg
xchg
inc
inc
mov
cmc
mov
mov
fisubl
loopne
in
nop
stc
fnstcw
ds
shlb
test
mov
lret
cmp
lcall
and
cmp
out
into
ljmp
push
imul
xchg
pop
mov
xor
sbb
or
ja
xchg
sub
sti
cmpsl
lahf
jo
popf
ljmp
cmp
and
cmp
pop
jae
hlt
ret
jo
or
in
out
out
sub
outsb
jb
loop
sub
int3
xchg
mov
je,pn
mov
ds
adc
cmc
and
call
std
lods
test
pop
imul
mov
daa
dec
inc
sbb
insb
jb
out
mov
inc
inc
xchg
adc
mov
cs
xchg
mul
fcomps
ret
call
and
add
repz
mov
and
std
add
and
xchg
cmp
dec
in
pusha
mull
xchg
mov
movsl
mov
pushf
fistpl
loopne
pusha
jae
cmc
fs
add
aad
xchg
xor
das
pop
jmp
js
fwait
dec
or
pop
lret
add
pushf
imul
movsl
mov
xor
sbb
xchg
inc
mov
jo
insb
jg
sub
ret
xchg
sbb
xchg
push
sbb
popf
in
pop
imul
in
pop
and
data16
push
pop
dec
sbb
mov
or
mov
adc
push
scas
mov
test
mov
out
ret
push
out
adc
mov
sbb
iret
cmpsb
lret
loopne
test
lcall
aam
and
fcompl
jg
out
jae
aaa
arpl
mov
pop
cmpl
int
scas
jno
xchg
dec
testb
jl
sub
lcall
fisubrl
mov
push
ss
xor
sub
sti
cltd
aad
dec
push
sbb
cmc
insb
cmp
ds
mov
mov
cmp
fs
fdivl
test
lret
xchg
adc
sub
jno
lock
adc
mov
xchg
ficoml
dec
sbb
rcrb
dec
mov
dec
pop
jb
mov
dec
mov
push
adc
or
add
sti
fimuls
cli
jae
push
outsb
jge
dec
fstps
mov
das
cli
mov
sbb
pop
in
push
insb
les
shll
les
loopne
testl
mov
je
fs
lret
push
inc
and
aad
arpl
cmpsl
lods
and
adc
fstps
test
cwtl
aad
add
outsl
xlat
sbb
mov
mov
add
adc
mov
inc
jne
add
add
push
push
scas
and
ret
test
or
mov
sub
inc
ffreep
pop
lods
sbb
inc
mov
mov
nop
sub
adc
push
adc
or
test
loope
dec
sbb
inc
mov
xchg
daa
test
ret
shll
shl
out
outsl
dec
in
dec
test
mov
fisttps
dec
fwait
jecxz
bound
or
je
xor
ja
ret
mov
add
jmp
out
jmp
pop
xchg
add
and
inc
mov
push
fcomps
bound
jge
lret
pop
sti
and
test
dec
push
xor
xor
mov
pop
in
sbb
or
mov
out
addr16
cltd
in
sub
mov
mov
xchg
add
out
mov
enter
inc
mov
inc
iret
sbb
inc
out
mov
cs
add
xchg
cmpsb
pop
xchg
lock
pop
clc
add
jle
inc
cmp
iret
cmp
rorl
incl
in
ja
xchg
pusha
pop
dec
test
cs
jl
daa
sarl
mov
int3
pop
sbb
movsl
dec
and
cmp
xchg
aad
xchg
cli
popf
inc
cmp
sahf
pusha
inc
push
orb
dec
sub
jmp
pop
inc
mov
and
cmp
psubsb
insl
out
or
push
mov
ljmp
cmpsb
cltd
cmp
jns
or
push
scas
in
xchg
dec
dec
dec
sub
insb
in
popf
jge
adcl
xlat
jmp
sub
mov
aas
add
xor
movsl
and
dec
jp
inc
hlt
sub
jo
sub
xchg
sbb
push
cs
sub
jno
lock
cmc
mov
les
ds
movsl
idivl
arpl
sbb
daa
leave
mov
mov
popf
rclb
sbb
insb
cld
sub
fnstsw
das
lcall
push
pop
fxch
push
divl
flds
shll
jmp
stos
jae
push
shlb
stos
dec
nop
sbb
pop
and
xchg
enter
or
mov
outsb
fwait
xor
xchg
call
out
inc
orb
mov
adc
stos
mov
dec
test
data16
test
aad
add
dec
sub
rorl
lret
aad
jnp
or
push
fdiv
sbb
inc
dec
mov
mov
jle
ret
cmc
andb
jae
shlb
sub
mov
test
ljmp
cld
sbb
mov
jb
stc
pop
orb
fsubrs
push
addr16
cmpsl
xor
mov
and
cmp
inc
stos
sarb
mov
sub
out
das
adc
movsb
lods
pop
add
je
inc
mov
int3
xor
in
jne
pop
dec
or
cli
imul
mov
sarb
cmp
nop
or
ret
cmp
out
push
push
pop
or
nop
in
ret
sbb
jle
daa
shll
jg
xor
mov
lock
and
sub
fildll
jo
mov
movl
jb
fsts
sbb
and
cmp
loopne
mov
idivl
mov
fdivr
push
fcoml
xor
daa
adc
jg
lods
xchg
shrb
pop
cmc
pop
jno
jns
cmpsb
loopne
cwtl
jnp
loop
cli
fidivrl
or
cmp
xchg
push
sub
mov
es
mov
test
scas
fdivrs
jo
icebp
jnp
daa
sbb
mov
mov
push
stc
inc
cmp
je
or
and
aaa
jmp
dec
add
xchg
in
sarb
fistpl
iret
test
adc
pop
adc
lds
or
mov
mov
mov
movsl
or
push
push
jne
das
mov
mov
movsb
inc
aas
es
dec
push
divb
xor
aas
fistps
cmp
mul
jno
or
ss
add
fildll
addr16
push
lods
add
ljmp
jno
out
xor
push
icebp
and
test
xor
lret
inc
mov
jg
or
xchg
aad
mov
jge
mov
scas
push
mov
xchg
cmp
cld
dec
mov
sub
ficomps
call
xchg
test
add
pop
daa
int
enter
cmp
lods
fistpll
cmpsl
adcl
xchg
mov
fdivp
insl
xor
fwait
out
lods
mov
mov
nop
and
outsb
jp
lea
mov
mov
push
sub
popa
cmp
cmp
pop
ficoml
adc
push
mov
xchg
jb
nop
xchg
lods
fdivrs
push
scas
fsubrl
rorl
mov
push
adc
sbb
xor
test
xor
rolb
jle
mov
inc
scas
fadds
inc
pop
pop
sbb
fs
cmp
jg
movsb
in
pop
aas
arpl
sub
dec
xchg
das
lods
xchg
pop
add
mov
fs
fidivs
in
imul
dec
test
and
adc
ja
int
inc
inc
and
dec
sub
or
mov
ret
inc
rcrb
mov
add
xor
adc
sbb
js
aam
and
or
jb
arpl
inc
xchg
add
or
test
addr16
clc
mov
sbb
and
push
fsubrl
imul
test
mov
dec
data16
and
mov
push
xchg
subb
in
stc
xchg
cmp
into
xchg
lcall
imul
and
xchg
stc
sub
sub
scas
add
roll
pop
add
fwait
mov
sub
pushf
pusha
mov
rorb
ret
lcall
cmp
mov
pop
sub
popf
push
call
mov
cwtl
aad
ss
cmp
xor
or
cld
daa
xchg
aad
sbb
pop
divb
in
je
cmp
aad
out
dec
xchg
inc
push
cs
std
shrb
pop
mov
sub
dec
hlt
rorb
and
cmp
mov
daa
jne
insl
lgs
xor
push
xchg
lret
and
xor
xor
icebp
mov
and
or
rcl
mov
in
addb
push
jnp
lahf
into
cmp
hlt
test
xor
ret
inc
cmp
xor
push
jns
mov
scas
pusha
inc
cwtl
sbb
jl
sbb
jecxz
xchg
stos
mov
loope
sub
xor
push
orb
xor
mov
loop
lods
adc
arpl
cmc
lock
cmp
pop
sbb
push
mov
daa
rcll
pop
out
enter
aam
int3
sub
sti
sub
into
pusha
ds
sbb
inc
pop
jl
add
faddp
fbld
sub
outsb
jae
and
iret
or
insl
push
into
lods
pop
out
daa
es
ds
clc
rcrl
enter
cmp
call
cwtl
sarl
add
xor
dec
rcr
cmpb
xchg
mov
lea
xor
in
inc
lret
loop
sub
or
sbbl
iret
adc
inc
aad
inc
mov
testl
sti
adc
loopne
stc
insb
xchg
sti
ret
mov
push
inc
cmp
dec
mov
jl
in
cmp
sub
ljmp
mov
mov
fucom
sbb
cmp
jb
xor
hlt
mov
hlt
imul
int
push
fiaddl
or
dec
xchg
add
das
jae
jecxz
pop
add
popf
pop
xor
or
cmpsb
pop
jg
sahf
fcmovbe
cwtl
mov
imul
aaa
sub
les
popf
test
ss
test
push
and
ljmp
push
das
mov
es
sbb
mov
rcrb
dec
mov
sahf
es
outsb
jecxz
or
data16
sub
jmp
out
dec
shr
lea
loope
in
stos
push
pop
cmc
je
outsl
mov
ficoms
add
push
fnstcw
xchg
adc
lret
pop
dec
repnz
leave
mov
test
das
mov
jo
mov
outsl
mov
and
ljmp
ja
push
jo
mov
pop
push
mov
cs
fldcw
mov
cmpsl
popf
clc
jo
push
add
jg
and
nop
and
iret
xchg
pop
dec
xor
mov
dec
cmp
flds
pop
mov
fwait
mov
xchg
push
sbb
ja
xor
mov
mov
cmp
cwtl
fsubrs
adc
cmp
cmp
ret
mov
outsl
pop
adc
jl
jmp
xor
arpl
mov
or
pop
fs
dec
fcmove
or
adc
xchg
or
ror
xchg
daa
aas
fists
adc
mov
xchg
lods
adc
inc
daa
stc
rolb
fdivrs
test
cmp
sbb
pop
mov
orb
jmp
bound
jle
cltd
and
ljmp
push
jl,pn
jo
stos
jmp
stos
loop
repz
jbe
adc
fimuls
push
dec
in
inc
jle
lods
cli
sahf
and
fadd
pushl
add
and
adc
xchg
inc
aaa
pop
hlt
ljmp
mov
ror
pop
std
aas
adc
aad
adc
cmp
sub
outsb
and
aaa
hlt
cmp
adcl
sbb
adc
addr16
cwtl
xchg
dec
lahf
ja
insl
ja
mov
mov
dec
xchg
mov
iret
mov
adc
divl
dec
adc
fs
fdivl
cmc
xor
push
movsl
pushf
sahf
and
dec
sbbl
sub
in
mov
test
daa
xchg
push
pop
cltd
arpl
test
jno
insl
arpl
ljmp
inc
and
shr
lds
out
or
scas
in
mov
movsb
das
ja
test
ret
in
outsl
sete
ret
mov
mov
out
ja
loope
cwtl
shl
xor
xor
sti
cltd
pop
mov
push
sbb
shr
mov
dec
dec
xor
and
sahf
shrb
mov
xchg
jo
lret
das
sbb
inc
psubsw
pop
test
gs
fcoml
mov
std
lock
imul
shlb
cmp
andl
mov
jge
leave
jnp
inc
rolb
dec
push
mov
nop
iret
outsl
jge
and
sbb
test
sbb
and
je
and
and
mov
jae
or
test
sbb
sbb
sub
add
add
or
and
into
or
idivb
mov
out
jp
cwtl
aas
jl
inc
das
sbb
testl
jns
pop
push
or
popa
das
dec
add
nop
test
pop
lret
lahf
xor
fmul
and
jp
enter
pop
gs
mov
sub
das
dec
sahf
xchg
leave
add
xor
cld
pop
or
xchg
xorb
push
shlb
jg
push
push
out
adc
insb
into
and
adc
fmull
mov
lock
push
mov
out
add
mov
xchg
mov
or
mov
ficompl
rcrl
sahf
loope
add
ret
jb
inc
mov
xor
scas
shrl
stc
iret
mov
outsl
mov
sub
scas
jne
dec
call
rorl
lods
xchg
add
xor
cwtl
gs
mov
sbb
sub
repz
popf
gs
sbb
sbb
sbb
xlat
loop
popf
sbb
mov
and
mov
mov
lds
add
jge
shl
inc
jae
mov
notb
mov
popa
mov
adc
cmpb
inc
cmp
and
pushl
or
lock
cmc
and
mov
xor
mov
ja
cwtl
scas
push
inc
xchg
shrd
shrl
and
lcall
mov
enter
ret
dec
ss
xor
das
test
xlat
inc
push
xchg
add
lock
cwtl
movsl
fdivr
xchg
pop
pop
or
mov
push
stos
inc
jl
jns
lds
vsubsd
inc
or
mov
mov
mov
mov
loop
cmpsb
xor
out
or
sbb
in
dec
pavgb
adc
ficomps
pop
add
mov
enter
aaa
mov
adc
jmp
out
test
outsl
leave
icebp
js
mov
enter
lret
or
out
in
or
out
pushf
adc
cmp
cmp
enter
sub
xchg
loop
ljmp
dec
cmp
test
mov
mov
sub
dec
test
sub
sub
lea
or
inc
xlat
mov
dec
imul
push
sarl
sbb
ljmp
negl
inc
add
pop
adc
inc
popa
sub
xor
push
test
jmp
mov
dec
inc
dec
sbb
xchg
sub
mov
jge
xor
pop
scas
dec
dec
cmc
mov
int3
cmp
lcall
cmp
or
or
leave
divb
or
mov
bound
pop
gs
orb
or
das
and
sarl
jbe
loop
mov
pop
push
inc
out
mov
das
pusha
neg
inc
loopne
cmpsb
jge
sub
in
xor
cwtl
mov
jnp
into
xchg
cwtl
out
repnz
clc
lea
adc
or
and
enter
into
xor
insb
add
mov
pop
andb
push
sub
dec
into
or
xor
dec
sub
ja
xchg
hlt
mov
stc
leave
bound
or
jo
push
xor
adc
push
lret
add
lahf
cmp
inc
mov
aas
fwait
idiv
aaa
pusha
xchg
and
iret
jnp
pop
je
inc
sub
mov
divb
and
rorl
mov
inc
das
xor
xor
cmp
hlt
push
test
inc
jmp
sub
mov
test
xor
fbld
or
shlb
lods
ror
daa
dec
xor
pop
bts
jb
mov
mov
shlb
shll
loopne
cli
lcall
aad
js
cmpl
fmul
out
add
jne
nop
out
wbinvd
xchg
push
lods
pop
mov
xchg
loope
xchg
mov
adc
xchg
add
push
sti
lret
scas
push
lods
stos
out
out
and
or
fisttps
popf
mov
xchg
negl
lcall
pusha
jnp
jmp
insb
mov
out
outsl
jl
pop
xlat
mov
sub
sub
sahf
pop
inc
jp
aam
or
push
add
and
jnp
cmc
dec
xchg
ljmp
cmpsb
fdivl
xchg
shll
pop
ret
xor
fists
fwait
mov
fwait
fs
and
cld
out
jle
xor
xchg
std
test
imul
cmc
stos
cmpsl
mov
cmpb
push
pop
add
pushf
mov
jbe
mov
lret
imul
lods
fadds
mov
mov
xchg
mov
je
lods
mov
xor
repz
xor
cmp
es
jp
int
or
ret
ljmp
jno
xchg
mov
xlat
std
test
sub
in
xchg
push
sub
stos
ljmp
mulb
or
xchg
bound
pusha
xor
lret
jge
sub
ljmp
pop
icebp
jge
scas
or
ss
std
xchg
pop
inc
mov
push
sbb
xlat
cmp
idivb
adc
jge
mov
sbb
in
push
imul
push
sub
mov
int
movsb
movsb
in
orl
test
adc
stc
pop
les
xchg
mov
xchg
sbb
sub
xor
lds
enter
xchg
jno
sub
mov
inc
xor
loope
mov
rcrb
push
out
into
outsb
shrl
imul
hlt
cs
push
jno
or
loope
outsl
out
aaa
daa
cmpl
mov
inc
loop
or
mov
lret
jle
inc
aad
push
pushf
jns
sbb
cmp
popa
sbb
stos
sbb
dec
stos
jg
pop
or
or
std
inc
mov
bound
xchg
cmp
stos
push
cmp
xchg
xor
push
aas
fwait
push
imul
adc
mov
add
sub
fldt
out
gs
sarb
loope
sahf
mov
adc
adc
jne
push
inc
mov
cmp
loopne
in
fdivs
movsw
xchg
mov
addr16
icebp
aas
push
inc
pop
insb
fldenv
out
push
mov
push
fistpl
sbb
aam
and
inc
hlt
xor
jo
sbb
fcmovnu
sub
pusha
sub
dec
fstpt
stc
ret
or
or
lock
mov
mov
icebp
or
push
mov
int
cmp
fwait
jecxz
pop
or
int3
repz
negl
push
jmp
jl
loop
movl
iret
loope
push
fcoml
leave
fidivrl
iret
or
popf
fdivrs
inc
lret
shlb
stos
sub
add
mov
inc
or
mov
jle
jmp
add
mov
xor
inc
inc
xor
out
leave
pop
subb
adc
cmpsl
cmp
inc
mov
fs
jl
rorl
cld
xlat
sbb
orl
fucomp
aas
cmp
cs
cmpsb
jl
shrb
push
call
add
add
sub
xor
xor
adc
mov
clc
or
popf
pusha
out
mov
lret
pop
mov
and
sarb
in
push
dec
or
ljmp
push
testb
push
pop
sbbl
jge
jne
and
dec
inc
mov
mov
or
stos
xorb
and
inc
je
push
push
add
jne
lock
arpl
sub
sar
add
je
mov
into
and
ljmp
out
push
out
mov
push
dec
push
xchg
jns
fucomp
out
aam
push
popf
jbe
nop
mov
add
mulb
bound
outsl
aad
or
repnz
fbstp
idivb
xchg
out
inc
add
cld
pop
xchg
pop
js
loop
and
lret
ljmp
jmp
pop
pushf
out
push
adc
add
fsubr
mov
dec
mov
sub
or
lcall
or
sbb
mov
in
pop
test
ja
xchg
cmc
aam
out
vmovapd
sub
test
mov
xchg
add
add
jb
lods
in
cmpsb
jl
ja
bound
jle
xchg
fcomip
testl
mov
fidivl
mov
mov
and
jb
adc
xor
test
jecxz
enter
mov
je
push
imul
add
and
add
xchg
mov
enter
ror
mov
adc
sqrtps
popa
int
pop
add
sub
int3
jns
lods
rcrb
pop
es
daa
orl
or
je
fwait
or
repnz
ja
push
cltd
dec
hlt
jmp
mov
fstpt
out
jno
push
adc
aaa
mov
test
dec
daa
test
jle
cmp
mov
out
lahf
xor
test
test
add
mov
pop
pusha
lret
mov
mov
addr16
add
mov
shll
test
push
jp
cmpsb
xchg
mov
insb
mov
data16
hlt
fprem
pop
push
mov
xorb
mov
lcall
adc
fs
pop
ret
test
pop
xchg
stos
xchg
mov
adc
adc
or
pop
mov
testb
add
stc
scas
popf
adc
idivl
aam
adc
or
arpl
xchg
cmp
push
outsl
aas
sub
jo
add
mov
lds
outsl
adc
sbb
pop
push
loopne
movsl
xor
inc
in
mov
sub
mov
and
inc
jo
and
mov
cli
dec
sbb
jp
xchg
lahf
sti
repz
ljmp
cmp
xchg
fwait
mov
xor
sbb
mov
sub
daa
inc
adc
dec
xchg
fiadds
and
push
dec
das
pop
out
or
lahf
pop
inc
add
imul
fldcw
inc
stos
data16
lds
mov
ss
rol
jb
fdivrs
cmp
inc
push
popa
decb
mov
adc
das
ficompl
push
rclb
out
jg
loop
and
out
aad
movsl
and
push
dec
jle
mov
mov
sub
adc
test
into
lock
mov
pop
cmp
inc
dec
xor
adc
repz
sbb
subl
movsb
jmp
into
lods
fwait
loopne
out
sub
inc
and
mov
gs
outsl
int
inc
les
mov
jno
rcll
dec
jnp
outsl
push
sub
mov
clc
pop
mov
out
lcall
push
xchg
loop
out
sbb
mov
and
mov
mov
nop
subl
movsb
jmp
jno
push
jae
leave
out
outsl
inc
and
dec
mov
adc
aaa
hlt
adc
outsb
mov
cmp
jmp
lret
inc
lahf
out
xchg
xchg
jae
push
fld
sub
sarb
push
fmul
dec
push
xor
sub
push
packsswb
push
pop
jge
notb
leave
rcrb
outsb
or
les
mull
dec
xor
hlt
jg
popf
gs
add
rcrb
cmp
pushf
fiaddl
xchg
imul
loopne
fdivl
jle
jecxz
loope
into
add
cmp
xor
add
mov
sbb
lock
sbb
outsb
lods
pop
adc
pop
int
cmpsb
dec
pop
shl
stos
jne
arpl
movsl
xorb
rorb
insb
add
leave
and
mov
and
lcall
mov
cmpsl
inc
lahf
cmc
scas
loopne
dec
push
int3
test
out
inc
aas
mov
insl
fisubs
iret
inc
dec
rcrl
enter
push
add
ret
loope
add
int
pop
push
adc
xchg
mov
push
in
scas
loope
fcoml
jle
hlt
mov
dec
ja
xchg
adc
adc
mov
sbb
push
xchg
jnp
stos
jge
das
cmp
mov
ss
xchg
test
or
fmul
pop
movsb
inc
out
fisubl
mov
cltd
jl
pop
sub
sahf
aaa
fisttpl
mov
pop
lods
jge
push
lret
xchg
and
std
jmp
xor
dec
xor
popa
es
rcll
popf
jns
or
pop
mov
notb
cltd
cmpl
stc
lock
mov
into
and
mov
and
rorb
xor
int3
jnp
or
jb
sahf
push
mov
push
out
and
add
and
pushf
adc
in
ror
fimull
insb
arpl
push
daa
pop
cwtl
dec
xor
ret
push
xchg
pusha
ret
jge
cmp
pop
push
inc
iret
inc
es
inc
in
roll
sbb
cmp
mov
or
je
adc
cs
xchg
out
pop
add
mov
mov
push
pusha
jle
push
ret
push
push
and
cwtl
add
jb
mov
cmp
aad
aam
xor
shr
movsb
pop
push
add
rorb
rolb
jg
inc
imul
add
mov
movsl
out
mov
test
fstl
xor
aam
adc
leave
addr16
in
imul
mov
xor
jb
push
sub
push
sbb
jb
sbb
and
out
cmp
setno
jge
lock
pop
fucom
xlat
push
test
xlat
sub
and
fwait
lahf
in
mov
mov
pushf
test
sub
pop
jne
jmp
int3
xchg
sub
cmp
ja,pt
inc
mov
dec
mov
sub
sbb
sub
sub
mov
mov
sbb
and
out
mov
pop
mov
or
push
xor
push
push
sbb
fwait
xor
cmp
in
sub
sbb
cmpxchg
je
lret
push
in
dec
sbbl
mov
in
and
repz
repz
dec
fidivrl
mov
ss
jno
xor
les
push
addr16
xchg
and
and
pop
and
mov
add
call
std
cwtl
jnp
lea
push
add
bsr
flds
mov
push
scas
lret
hlt
mov
outsl
cmpsb
xor
xor
repz
or
jnp
aad
dec
repz
lret
jle
call
shlb
mov
stc
push
mov
adc
xchg
lock
pop
jg
rol
pop
out
iret
int
add
sub
test
fldl
ret
stos
call
xchg
fidivrl
push
stos
repz
jne
arpl
cmp
cli
xchg
out
push
shr
call
mov
aaa
pop
js,pt
jae
pop
nop
jmp
aam
out
shlb
loopne
out
jle
adcl
xor
ds
fdivr
mov
or
push
jp
shrb
vaddsubps
rcl
mov
pop
stos
mov
and
sbb
cmp
mov
stc
cltd
add
cmc
jnp
xor
jp
test
jmp
and
mov
xchg
clc
cwtl
filds
xchg
sub
dec
out
pushf
mov
sti
fstl
imul
pop
sub
inc
test
addb
and
stos
mov
aam
arpl
lret
popa
xor
and
arpl
fwait
nop
mov
sahf
add
cmp
jns
push
sahf
add
outsl
es
jae
cltd
xchg
mov
pop
mov
jle
divl
loopne
lock
fnsave
sti
sub
fistps
push
hlt
push
das
mov
idiv
mov
or
insb
ja
roll
aaa
pushf
dec
jmp
ja
aad
push
inc
call
mov
int3
cmp
test
jb
cmc
mov
mov
pop
adc
in
inc
sub
mov
inc
test
scas
pop
cmpsl
jne
pop
mov
in
pusha
pusha
cs
mov
pop
vmovdqa
inc
fldenv
jbe
xchg
mov
cmp
add
enter
jo
popa
pop
xchg
insb
mov
inc
xchg
sbb
std
lds
mov
xor
xor
std
fs
inc
mov
andl
mov
testl
add
les
popl
adc
testb
mov
cmpsb
push
fwait
lock
in
jb
shl
loop
imul
fsub
mov
push
and
mov
jge
jo
inc
pop
fstpt
and
cmp
imul
pop
dec
mov
inc
jge
push
push
cld
or
mov
dec
shlb
mov
lret
adc
xor
and
lea
xchg
fucomip
cmc
or
fwait
push
push
jle
call
in
bound
sub
loopne
ss
pop
insl
jmp
mov
pop
dec
cmpsb
jle
nop
jg
mov
inc
das
dec
and
in
push
decl
dec
jns
imul
cmp
jmp
sub
sbb
je
push
rclb
mov
pop
hlt
fstps
mov
imul
repz
mov
inc
lret
aad
jmp
push
push
inc
sub
pop
call
dec
jnp
fimull
push
xchg
sbb
cld
testb
test
push
addr16
or
jmp
test
lea
and
jns
jecxz
je
nop
xor
ds
clc
dec
jecxz
dec
push
movsl
jbe
rcl
test
cmc
mov
stos
inc
dec
mov
jmp
ljmp
test
fwait
ret
add
bnd
jo
mov
cmp
pop
mov
repz
loope
push
xchg
jge
dec
aam
inc
icebp
and
push
clc
add
fisubrs
jecxz
popf
lcall
lea
divb
ljmp
movsb
fmuls
mov
cwtl
cs
add
out
pop
in
imul
sbb
xchg
std
cmp
sub
xchg
inc
inc
ret
or
shll
push
xchg
icebp
into
mov
cmp
rol
mov
cld
mov
jecxz
push
cs
sub
imul
movsl
je
pushl
or
and
add
loopne
mov
pop
ljmp
cmp
inc
inc
mov
lcall
fldl
mov
imul
mov
ss
mov
int3
ror
dec
jmp
aam
icebp
js
pushf
psrlw
cwtl
sub
push
and
cmp
fsts
sub
sarl
inc
test
and
adcb
movsl
adc
cmc
outsb
cmp
es
or
mov
iretw
shl
dec
lahf
ja
ret
js
jl
dec
and
and
or
inc
aas
mov
icebp
mov
jne
sbb
and
fdiv
and
lock
lret
fwait
sbb
mov
or
lahf
sarl
mov
dec
cmp
mov
push
sub
add
cmp
ret
jns
imul
and
mov
repnz
xchg
int
dec
hlt
fldcw
cmp
andb
jo
sub
rclb
xchg
lea
inc
imul
push
orl
test
imul
mov
cmp
je
xchg
fildll
push
clc
jno
int
cwtl
movsl
pop
xor
cmp
icebp
xchg
push
xchg
mov
cmova
ljmp
sbb
dec
xchg
sub
leave
and
dec
lea
push
push
mov
xchg
shl
cs
adc
sbb
je
loopne
cmc
pop
inc
mov
cs
or
fiaddl
enter
mov
push
pop
mov
jge
xchg
dec
cmp
inc
in
mov
ljmp
int
mov
cltd
adc
xor
stos
lahf
cmp
sub
and
in
xor
inc
rorl
sbb
aam
ss
jno
cmp
xor
gs
sbb
fists
add
data16
cmp
decl
repz
test
outsb
les
jmp
lret
jp
jp
lret
push
add
cmp
insl
push
add
in
mov
or
mov
scas
fisttps
movsl
xchg
push
pop
and
imul
mov
pop
insl
cmp
lahf
mov
xchg
and
mov
or
jge
cmp
clc
je
lret
test
and
je
mov
mov
inc
push
dec
and
fists
fscale
mov
push
push
addr16
popf
add
jmp
fwait
popf
mov
out
inc
sbb
xchg
mov
out
adc
mov
or
inc
pop
pusha
imul
clc
and
int3
push
mov
shlb
enter
add
mov
cmp
idiv
xlat
mov
mov
xchg
shll
aam
loop
pop
push
cmp
insl
lods
sub
push
pop
push
mov
in
pusha
fmuls
arpl
cmp
les
ret
div
jp
mov
test
xor
add
mov
add
mov
xor
xchg
jle
popa
nop
and
jl
dec
jmp
jo
sub
jbe
dec
pop
aad
push
mov
xchg
adc
scas
fmul
mov
inc
call
and
adc
and
aaa
push
stos
inc
pop
shr
adc
sub
xchg
mov
sbb
push
popa
dec
lahf
pop
add
loope
hlt
mov
jbe
andl
arpl
xchg
sub
sbb
jbe
pop
test
xchg
cwtl
addl
rcrb
push
dec
aas
shlb
stc
xchg
insl
repz
jnp
pushl
inc
jg
pop
jmp
out
test
xchg
outsb
sub
insl
pop
jmp
test
inc
imul
jbe
int3
mov
jno
push
in
lahf
dec
fwait
xor
fdivrl
pop
xor
jns
rcrl
insb
outsl
aaa
mov
xchg
pop
mov
insb
sbb
shl
aaa
std
sbb
or
jne
mov
aad
jne
fidivrs
mov
js
sub
cmc
lret
aad
test
mov
divl
dec
add
mov
inc
xchg
int
nop
dec
dec
mov
pop
test
mov
popl
loop
or
icebp
out
hlt
out
lcall
mov
imul
insl
cmpb
pop
dec
mov
sti
adc
leave
inc
aas
xchg
xor
sbb
cwtl
cli
mov
push
lds
mov
pop
or
mov
call
xchg
pusha
pop
xor
or
mov
fldl
fistpl
jecxz
dec
inc
das
cwtl
push
sub
pusha
adc
mov
cmpsl
xchg
or
mov
insl
fidivrl
push
hlt
addr16
mov
jg
mov
pop
and
mov
cltd
push
sbb
in
mov
xchg
add
add
mov
xor
xchg
stc
sbbl
jle
inc
daa
movsl
add
sahf
aas
int3
mov
xor
inc
in
imul
cmp
sbb
cmp
mov
add
push
in
insb
shll
jg
rorb
cmp
sub
call
gs
lods
movsl
sub
adc
rclb
pop
pushf
inc
cmp
jno
icebp
out
adc
ja
or
loopne
sub
enter
test
into
sbb
push
aaa
sub
adc
push
and
xlat
ficompl
sbb
inc
cmpsl
mov
aaa
cs
sarb
rcrl
imul
sub
sub
and
lret
jl
ljmp
fucom
jg
xlat
mov
mov
icebp
jne
inc
mov
jmp
xor
mov
xor
push
fsubrl
aaa
dec
mov
hlt
insb
or
cmp
fisubs
mov
imul
xchg
xlat
lds
in
aad
lcall
dec
sbb
enter
out
mov
jmp
arpl
xchg
das
jnp,pn
jmp
in
or
and
mov
loope
sub
and
xchg
and
xchg
stos
in
aad
outsl
in
jb
sbb
adc
mull
rclb
loop
cs
push
adc
repz
out
sti
inc
stc
js
sti
dec
jns
inc
push
ja
call
xor
push
cld
pop
jnp
xchg
or
out
scas
mov
cwtl
or
mov
mov
mov
mov
fwait
xchg
repz
test
sub
inc
dec
push
push
negb
push
out
jmp
jb
repz
dec
jmp
adc
lods
or
sub
out
add
fwait
out
push
out
xchg
scas
sahf
dec
mov
jmp
lea
clc
xor
xchg
js
inc
cmp
lret
or
add
push
adc
out
cmp
insl
dec
cmp
fmull
loop
imul
sub
mov
ficoms
fisubl
bound
mov
test
call
sub
pop
xchg
xchg
enter
and
sbb
inc
jno
repnz
cmpl
sti
push
pop
sbb
repz
cmp
cwtl
sbb
sbb
lods
pusha
mov
add
fildl
std
xor
mov
sub
dec
mov
cmp
mov
mov
enter
xor
fimuls
call
jg
mov
jle
shrl
lds
fisubrl
lret
adc
inc
xchg
in
mov
cmpsl
es
lds
cli
dec
or
xchg
out
xbegin
cs
dec
pop
cwtl
add
jnp
jo
inc
push
in
enter
out
sub
or
dec
jo
and
adc
dec
dec
ficoms
out
xchg
daa
or
or
or
sub
sub
and
arpl
mov
xor
sbb
in
xor
mov
push
mov
int
jae
insb
and
and
cmp
scas
add
and
fidivrl
loop
mov
shl
repz
test
mov
mov
repz
rcr
sub
jecxz
cmovbe
or
bound
mov
or
xchg
push
scas
adc
jp
fsts
sbb
out
fisttpll
mov
pop
xchg
adc
aaa
bound
fsts
sbb
scas
add
mov
and
std
adc
xchg
addr16
mov
dec
iret
lret
ljmp
adc
int
push
int
push
hlt
mov
push
add
das
mov
pop
shrb
push
pop
push
fmuls
push
and
xchg
pop
dec
pop
sahf
insl
arpl
mov
arpl
inc
lods
inc
pusha
movsl
inc
xchg
pop
repz
push
std
push
in
xchg
iret
faddl
adc
push
dec
add
mov
icebp
mov
sub
sbb
xlat
or
xchg
int
mov
or
sbb
adc
or
inc
pusha
cs
dec
pop
and
pop
enter
dec
xor
xor
rcrb
adc
les
dec
jmp
shll
lret
repz
cmc
push
pop
jp
jb
or
stos
insl
add
jns
and
mov
adcl
iret
pushf
mov
arpl
xchg
pusha
lret
xchg
movsl
pop
dec
mov
inc
stos
std
insb
and
push
pop
or
cmp
cmp
sub
aam
outsb
stc
cs
mov
mov
jb
test
out
and
loop
insl
sbb
pop
pop
aad
xlat
pop
sbb
mov
cltd
sub
popa
cmp
mov
sbb
cmpsb
ss
inc
addr16
cmp
test
lret
mov
pop
es
into
movsb
push
mov
aam
pop
aaa
push
rclb
sbb
popf
cltd
fsub
movsb
sub
push
ficoml
mov
hlt
mov
inc
popf
scas
add
lods
and
push
jnp
loop
add
and
sub
xchg
jno
inc
mov
add
xor
push
scas
das
xchg
jle
pop
int
lods
cmp
das
fmull
int
adc
in
cmp
sub
stos
dec
mov
mov
adc
push
sbb
mov
fdivr
push
or
mov
scas
mov
dec
cltd
ljmp
inc
shll
mov
mov
repz
in
pop
dec
jae
je
cs
cmpsl
or
in
pop
stos
and
xchg
jae
lahf
xor
sahf
es
mov
push
xchg
sarb
xchg
dec
mov
push
daa
sub
mov
scas
aam
aam
out
push
rcrb
insl
mov
inc
lds
add
pop
lret
xchg
mov
fcmovb
sub
inc
mov
sbb
lea
xchg
sub
mov
test
pop
add
jne
call
and
push
or
xor
cld
adc
in
imul
inc
jge
fs
fsubl
cmp
jnp
stos
popf
jnp
pop
push
fcompl
sar
pop
rcrb
mov
sbb
mov
fwait
rcll
stos
sarl
out
repnz
sbb
pop
cmp
repz
jae
jb
inc
or
xor
and
mov
out
jo
mov
xchg
pop
sbb
movsl
pop
sbb
or
shll
xchg
fwait
cmp
bound
mov
dec
clc
call
push
push
stos
ss
add
sahf
pop
movsl
fdivl
and
mov
xchg
push
lcall
mov
enter
leave
fwait
cld
jbe
bound
mov
and
sbb
fisttpll
mov
xor
jp
and
fldcw
mov
cs
mov
pop
and
movsb
mov
jno
push
jp
mov
push
stos
lcall
cmp
clc
enter
adc
jmp
or
cltd
xchg
add
les
ss
xchg
cmp
repnz
adc
fimuls
ret
add
outsb
test
orl
sub
mov
out
mov
bound
adc
jno
scas
lret
mov
leave
pop
mov
lret
jb
inc
pop
mov
aaa
jle
jo
addr16
rorb
adc
push
xor
pop
packssdw
xchg
add
lods
cld
and
dec
addr16
mov
xchg
jno
jge
pop
push
call
aam
xchg
cmpsl
in
sub
xchg
sub
and
scas
sbb
cmp
xchg
aad
add
xchg
sbb
fsts
div
and
mov
in
pop
add
adc
and
pushf
hlt
sub
popf
fs
pop
pusha
arpl
ret
pushf
adc
jle
cli
daa
ss
mov
scas
pop
pusha
adc
scas
nop
loope
sti
lock
cmp
xchg
aas
pop
test
xchg
pop
cmp
jbe
pop
and
fcomi
mov
out
push
cmp
push
xchg
sbb
fdivs
mov
add
adc
dec
ja
mov
xchg
data16
sub
cmp
push
xor
mov
test
sbb
sahf
lret
test
mov
cmpl
jp
mov
sti
mov
leave
sbb
adc
xor
sub
les
mov
loope
das
xchg
repnz
out
xchg
pop
add
adc
pop
sub
xor
enter
mov
repz
shl
inc
cwtl
repz
les
push
push
dec
jl
and
fldcw
hlt
adc
jl
imul
push
stos
pop
das
lods
mov
mov
or
fwait
mov
add
adc
xor
test
call
dec
push
and
mov
push
and
mov
aad
out
lret
fisttpl
movsl
mov
mov
xchg
sbb
in
inc
aad
jle
mov
stc
std
push
push
add
pop
adc
lds
addr16
and
push
push
shll
adc
je
mov
rorb
bound
repnz
inc
outsb
push
inc
jl
dec
out
aam
popa
shlb
dec
push
sbbb
push
sbb
pop
roll
popa
inc
dec
dec
sahf
pop
pop
stos
les
pushf
mov
mov
add
call
xlat
jg
sub
nop
xchg
gs
pop
cltd
sbb
lods
icebp
mov
pop
fistpll
mov
cltd
adc
mov
movl
js
mov
outsl
imul
repnz
sbb
outsb
jmp
mov
fistl
decl
mov
mov
repz
dec
adc
call
nop
jecxz,pt
add
fiadds
out
cmp
mov
call
subw
add
cwtl
xor
pusha
shll
out
mov
imul
insb
xchg
stos
fs
aam
pop
adc
mov
xchg
pop
shrl
xorb
sarb
sub
adc
imul
push
mov
jo
stc
gs
popa
pop
shl
cmp
fwait
push
mov
lods
add
in
fisubrl
lcall
lret
jle
xchg
mov
mov
cli
divb
adc
aas
or
dec
or
arpl
addr16
jbe
or
enter
inc
xchg
mov
es
addr16
and
imul
scas
xor
ja
icebp
xchg
scas
jno
into
daa
loopne
push
lds
sub
ret
push
cmp
nop
push
or
mov
lds
mov
and
mov
pop
ficomps
xlat
lret
push
jg
gs
sbb
xor
cmc
dec
mov
fidivs
jge
xchg
cwtl
push
shl
mov
cmpsl
cwtl
jbe
mov
out
jp
xchg
lret
stc
lods
xor
push
jno
fs
cmp
lret
movsb
scas
cmpsl
arpl
mov
adc
das
inc
dec
mov
lods
inc
shrb
inc
in
jecxz
stc
dec
aaa
out
je
xlat
xchg
mov
cmpsl
sub
scas
or
inc
fdiv
outsl
mov
add
ret
jne
inc
lods
shr
mov
xchg
cld
cmpsb
repz
fsub
ja
int3
xchg
in
sbb
lret
movsl
jo
movsb
outsl
lret
movsl
and
mov
xor
dec
mov
xor
pop
enter
lea
pop
push
out
outsb
lock
xchg
loopne
cmp
pop
jae
and
ficoml
ret
ds
fmuls
lret
test
push
mov
shlb
cmpsl
and
mov
nop
shll
sbb
mov
shl
scas
ljmp
xlat
xchg
jns
enter
cmp
pop
push
arpl
jmp
mov
mov
or
jbe
outsb
test
cmovg
leave
movsl
mov
es
test
adc
mov
adc
andb
mov
ret
mov
out
aam
lods
xchg
call
adc
jns
dec
adc
pusha
inc
xchg
inc
jno
sbb
test
push
xor
and
loope
sar
lahf
jo
dec
ljmp
in
gs
mov
das
mov
cli
mov
pop
push
cli
fmuls
mov
add
call
and
inc
sbb
jmp
daa
mov
repnz
enter
inc
cmp
loop,pn
stos
xchg
loope
cwtl
inc
inc
mov
inc
push
mov
mov
xor
rcrl
mov
imul
mov
imul
or
in
iret
push
aam
push
or
add
sub
cli
push
loopne
outsb
lods
addr16
sub
fmul
cmp
repz
test
inc
cmp
sub
fisubrl
sarl
jnp
sbb
inc
and
or
mov
jbe
xor
dec
rcll
aas
xchg
cmp
scas
rorb
adc
push
sbb
ds
jl
int
push
fists
fisttpll
push
hlt
mov
gs
lcall
cltd
push
push
inc
dec
and
push
push
mov
lock
mov
fisubs
outsl
enter
pop
test
cmp
js
insl
pop
mov
divl
sbb
dec
lret
push
jle
push
pop
dec
out
nop
jnp
fstpl
add
sub
lret
sub
jmp
push
sarl
ljmp
mov
roll
test
out
cmp
mov
popa
mov
and
sbb
int
aas
test
stos
and
mov
movsl
nop
shrl
sbb
jecxz
mov
xor
scas
cmp
es
lcall
ret
jecxz
mov
sub
jae
jl
ds
test
mov
cmp
repz
dec
popa
xchg
add
fs
mov
xor
test
sub
mov
xchg
pop
adc
dec
jp
ret
mov
and
mov
insl
data16
sbb
lcall
aaa
gs
rcl
aam
shl
adc
push
scas
cwtl
jb
xor
cli
or
movsl
xor
nop
adc
dec
shll
push
jecxz
repnz
out
mov
mov
test
pop
sub
fmuls
lahf
int3
daa
jecxz
test
sub
jns
pop
stos
mov
xor
into
sbb
fpatan
pusha
insb
daa
sbb
int3
arpl
jns
leave
push
ljmp
fimuls
mov
jle
cmc
repnz
cmp
sti
jmp
adc
call
aam
mov
fwait
push
or
add
test
shlb
sub
fucomip
cmpsb
outsl
xchg
imul
pushf
rcrb
stc
addl
lds
push
add
or
daa
sbb
xor
ret
fiadds
retw
into
mov
xlat
hlt
mov
mov
outsb
cli
movl
daa
jge
rclb
mov
cmp
xlat
add
pop
xchg
mov
push
mov
cmp
vpavgb
adc
pop
imull
lock
mov
mov
xchg
xchg
dec
cli
push
outsl
mov
popa
ja
push
xchg
add
mov
cld
inc
test
test
mov
push
dec
xor
mov
jl
mov
mov
dec
push
cmp
int
pushf
daa
decb
js
lea
mov
adc
jg
pop
leave
loope
dec
sub
test
sbbl
int
pop
je
gs
mov
push
jge
and
addr16
jp
hlt
dec
mov
lret
pop
mov
mov
pop
cmp
sub
jae
or
mov
call
iret
push
mov
es
dec
mov
add
imul
push
push
cmc
adc
push
adc
out
inc
dec
je
cmp
fnstenv
push
sarl
mov
jnp
in
or
movl
in
popa
sti
add
jae
pop
lods
dec
push
lcall
push
out
cmp
mov
xchg
inc
xlat
stos
xor
or
mov
insl
addl
sbbl
fildl
cmp
out
pop
and
pop
sbb
out
jecxz
lods
pop
mulb
sub
mov
lea
jge
popf
leave
nop
in
and
je
faddp
test
je
and
sahf
push
jno
popa
gs
xchg
and
and
jbe
or
pop
push
and
mov
xchg
in
shll
inc
or
cli
rcr
dec
pushf
cmp
ljmp
and
and
sbb
pop
and
mov
sub
pop
es
fists
add
loope
jbe
sbb
cmp
aaa
pop
scas
push
sub
ret
loopne
cltd
push
xor
pop
push
or
test
or
cmpb
mov
pop
mov
sub
ljmp
mov
mov
xchg
inc
xor
fdivl
mov
in
cmpb
mov
mov
push
or
xor
and
fisubs
dec
sbb
pop
inc
jecxz
imul
popa
stos
scas
add
shrb
jmp
int3
push
mov
cmpsl
loopne
or
mov
ja
sub
jno
leave
stc
push
jns
add
test
add
add
lcall
jne
sub
sub
pop
add
popa
sbb
push
call
jns
mov
loopne
ja
sbb
push
push
pop
cmp
cltd
inc
sti
cmp
aam
xor
gs
imul
fcmovnbe
faddp
fadd
sahf
pop
and
cli
adc
mov
add
aad
stos
insb
lahf
inc
clc
fidivl
xorb
pop
and
mov
es
pop
or
repz
mov
xor
or
sub
xchg
loope
xchg
faddl
push
lahf
rorb
shlb
cmpsb
and
fldcw
mov
add
or
dec
push
sub
sahf
pop
dec
shrl
imul
adc
inc
adc
mov
and
xor
cmp
clc
clc
add
ss
adcl
js
ja
mov
mov
xor
add
pop
std
cmp
call
aad
js
and
je
xchg
jbe
fildl
mov
or
stos
pop
mov
push
fistps
loop
outsl
push
pop
push
ljmp
cmp
push
andl
mov
sub
and
fwait
roll
cld
fs
jmp
call
popf
jecxz
push
jl
inc
dec
jl
push
rdmsr
stc
leave
movsb
jecxz
xor
sub
mov
add
movsb
in
push
mov
repnz
xor
mov
ja
pop
pusha
stos
mov
ss
repnz
cmp
daa
mov
add
push
frstor
out
stc
dec
cmp
pop
bound
js
push
jg
sbb
insb
or
mov
flds
test
push
stc
cmpsb
jnp
push
sbb
lds
test
lods
dec
ss
cmpb
xchg
push
pop
stc
dec
or
clc
int
sti
sub
or
mov
fdivrs
xchg
lock
into
xor
sub
stos
jns
loope
insl
ljmp
cld
push
inc
push
and
mov
lret
xchg
gs
mov
add
xchg
inc
push
test
pop
and
and
sbb
adc
add
mov
sub
push
add
test
sub
shr
mov
mov
insb
faddl
jbe
cmp
ljmp
push
sbb
sub
loop
mov
outsl
or
lret
cmpsb
out
dec
rolb
hlt
and
lcall
outsl
push
aam
sub
orb
fwait
dec
xor
and
sbb
stos
adc
cmpsl
sub
fisubrl
ds
fidivrs
divb
cmpsb
mov
push
xchg
cmp
dec
pop
mov
sbb
sub
xor
push
sbb
pushf
jno
add
or
popf
pusha
sbb
addl
ds
jl
jl
jbe
jno
int3
fcoms
jae
cmc
mov
sbb
idivb
mov
mov
fisttpl
shr
mov
lret
ficompl
add
scas
popf
daa
sbb
inc
or
mov
mov
mov
pop
gs
popa
mov
es
les
lea
shlb
ja
cwtl
in
lcall
and
in
mov
sbb
daa
jb
cs
push
mov
adc
insl
loop
adc
mov
xor
negb
jecxz
mov
mov
push
push
add
jbe
xchg
int3
enter
fisttpll
repz
add
add
mov
cmpb
sub
aaa
inc
mov
fs
sbb
fcoms
adc
out
cmp
lock
mov
into
inc
fidivs
addr16
pop
hlt
je
and
les
shrl
mov
int
sti
pop
lret
outsb
dec
call
test
or
jp
outsb
jbe
adc
mov
in
bound
cmpsl
popa
insb
jbe
loop
adc
std
popf
mov
call
cmp
inc
ret
lret
or
call
cli
imul
loopne
pop
push
shll
sbb
sub
gs
lret
test
mov
bound
lock
sbb
mov
fimuls
lahf
outsb
enter
pusha
cmp
mov
xor
leave
pusha
jnp
sbb
cmp
inc
dec
test
test
addr16
cmp
lods
clc
jae
jno
sub
test
iret
stos
pop
enter
je
and
les
push
dec
jg
idivb
jle
pop
mov
sub
push
pop
or
adc
or
dec
inc
cmp
or
int3
icebp
push
loope
inc
push
cmp
loopne
pushf
popa
pop
dec
xlat
mov
movsb
cli
inc
fists
scas
pushf
jns
mov
mov
xchg
fisubs
mul
fs
xchg
and
adc
xor
ret
ja
repnz
jmp
adc
inc
xchg
stc
xchg
shll
fdivrs
repnz
in
sub
or
fidivs
mov
loop
sbb
jecxz
mov
push
dec
out
jl
push
xchg
push
cmp
jno
mov
mov
pushf
fistl
xlat
jle
repnz
lea
cld
inc
std
std
pop
rclb
mov
xlat
push
sub
js
scas
dec
sbb
dec
sbb
fildll
movb
lods
sub
cmpsb
in
cmc
adcl
fs
pop
es
jg
das
sub
dec
movsl
push
xlat
ret
popa
aas
inc
cmp
scas
cmpsb
or
lods
jb
inc
cmpsb
stos
cmpsl
stos
dec
and
test
ds
loopne
shr
push
jae
dec
rorb
cld
push
lods
mov
or
push
and
enter
in
mov
sub
jl
cs
les
mov
inc
pop
iret
mov
mov
push
inc
sbb
inc
in
pop
out
dec
and
out
or
dec
mov
push
pop
push
xor
imul
mov
cs
mov
sti
ret
int3
lds
stc
insl
mov
mov
and
sub
insl
or
out
ret
js
xor
aaa
scas
ret
mov
iret
mov
jae
push
adc
mov
out
aam
and
out
data16
js
sub
xchg
cmp
jnp
sub
fs
push
jl
mov
ret
outsb
scas
mov
sarb
jbe
xorl
shll
mov
push
jecxz
scas
ljmp
jge
push
push
cmpb
loop
ds
adc
outsl
popa
roll
int
push
leave
sub
jbe
push
mov
dec
data16
fdivs
test
mov
scas
xor
cmp
repz
push
dec
shll
sbb
mov
aam
mov
mov
int3
sub
cmp
iret
mov
leave
add
dec
mov
out
pop
sbb
cld
xor
pushf
xchg
adc
fyl2xp1
mov
add
leave
or
stos
sar
les
and
out
adc
mov
ds
pop
add
int
andb
leave
mov
push
repz
das
adc
dec
or
iret
pop
or
or
dec
int3
mov
dec
jae
les
orl
add
jg
pop
or
push
cmp
lret
push
inc
es
or
mov
fiadds
std
mov
in
jl
mov
xor
incl
out
pop
and
inc
xchg
pop
lea
sbb
or
or
xor
xor
aaa
lcall
sbb
inc
or
and
mov
je
dec
mov
or
sbb
adc
inc
clc
and
adc
pop
scas
push
mov
mov
cld
push
lock
add
decb
add
aam
test
repz
loope
push
cmp
push
aas
stos
dec
fiaddl
and
std
imulb
addr16
cli
das
call
cmp
pop
ret
mov
les
push
xor
and
or
add
cwtl
stos
xchg
cltd
rorb
adc
in
addr16
jb
push
lcall
mul
je
faddl
xchg
stos
roll
subl
sahf
mov
or
out
stc
or
adc
push
dec
out
loopne
outsb
sbb
in
jl
fldcw
popa
in
fs
push
sub
scas
mov
test
inc
daa
mov
mov
adc
leave
cmp
jo
add
dec
cwtl
and
and
jns
hlt
or
sbb
cld
xchg
in
mov
cmp
loope
inc
stc
cmp
aaa
xchg
fwait
jns
arpl
out
ljmp
mov
fcom
mov
mov
fimuls
sbb
mov
pop
incl
xchg
jns
ss
pop
lea
push
xor
sbb
call
inc
mov
push
test
fmull
lds
ret
xchg
ficoml
cld
pop
sub
pusha
roll
fwait
xchg
sarb
or
enter
nop
cmp
push
fisubrl
mov
cmp
loopne
in
mov
data16
xchg
mov
arpl
mov
jmp
mov
and
xlat
inc
sbb
pop
add
mov
into
xchg
fidivs
push
in
sahf
sbb
psrld
enter
dec
push
cld
in
jge
out
ss
add
cmp
push
enter
pop
arpl
aad
scas
loopne
cmp
icebp
cmp
repnz
aam
cmc
shrl
pop
ss
popf
movsl
andl
insb
rclb
out
psrlq
loop
rolb
shrd
xor
cmc
int
data16
in
jp
fs
inc
bound
lahf
pusha
imul
fnsetpm(287
push
scas
adc
popa
pop
and
push
or
in
lock
inc
leave
notb
outsb
cmp
mov
push
cld
movsb
stos
jnp
cltd
sti
sub
imul
in
ret
fisubs
sbb
aam
out
and
sub
fsubrl
popa
adc
lods
arpl
jmp
mov
fldt
test
xchg
lcall
andb
pop
divb
jno
js
mov
sbb
inc
dec
arpl
and
push
mov
adc
movsl
pop
inc
sarl
jb
pushf
xlat
fs
or
leave
fistpl
xchg
loopne
mov
inc
or
push
mov
int3
lcall
pop
cmp
push
lods
jb
sahf
mov
enter
dec
push
or
push
lods
jbe
sbb
mov
das
lahf
test
push
loope
and
popf
push
dec
test
pop
dec
or
lcall
js
popf
lret
loop
ret
rclb
addr16
xchg
nop
fwait
in
xchg
jle
cmp
fnstsw
xchg
pop
inc
and
xchg
into
sbb
jnp
nop
xchg
std
imul
call
push
mov
inc
sub
mov
sti
jne
push
sbb
scas
cmp
jg
add
sbb
mov
fidivs
cmp
cmp
fmuls
pop
add
lea
xor
sub
bound
jns
ret
sbb
ss
fwait
mov
fldenv
inc
or
jae
loopne
dec
cmpsb
mov
fnstsw
jbe
sub
xchg
cli
pusha
mov
call
cmpsb
cwtl
subb
pushf
imul
test
add
out
jmp
aad
mov
cs
fisubl
jns
ds
mov
fidivl
jns
lea
cmp
xchg
jno
fstp
jbe
xor
mov
scas
jl
or
fisubs
aam
rcl
ja
jne
mov
adc
fcomi
mov
gs
fadd
jns
je
dec
and
shlb
mov
lcall
scas
jns
out
jne
fwait
xor
jbe
lahf
cmp
iret
push
push
pop
add
cmp
adc
icebp
out
icebp
mov
mov
lcall
and
pop
mov
push
mov
inc
add
int
jbe
xchg
jp
div
imul
idivl
cwtl
andl
testl
jl
pop
dec
pop
cmp
cltd
adc
pop
push
xchg
sub
out
sbb
mov
mov
and
pop
push
popa
idivb
pop
jns
adc
ret
sarl
ja
js
aam
repnz
stc
into
sbb
fcompl
dec
push
adc
cmc
notb
mov
lods
cmpsb
int
dec
js
mov
movsb
popa
stos
push
or
mov
xchg
inc
cmp
mov
inc
add
cmc
out
repnz
aad
cli
push
jl
dec
add
outsl
fstpl
mov
int3
xchg
push
ja
inc
lea
mov
xor
daa
push
pop
lods
in
inc
cli
movsl
sbbb
sti
dec
push
jle
adc
test
int3
adc
mov
cld
jbe
cltd
push
sbb
xchg
jns
aam
jo
mov
jnp
or
scas
sti
jl
lcall
dec
into
cltd
sahf
add
pop
insl
iret
std
xchg
push
xor
mov
jge
dec
pushf
mov
inc
scas
adc
mov
and
add
or
or
pop
add
js
jo
dec
cmp
cmp
int3
cmp
cmp
ret
and
sbb
inc
sbb
add
or
pop
test
inc
dec
lcall
push
xchg
std
inc
pop
cmc
adc
push
add
xchg
sbb
xor
xlat
adc
inc
rcl
repz
fiadds
fsub
mov
dec
dec
and
imul
daa
dec
xorb
dec
fisttps
jge
mov
dec
cmp
subl
sbb
stos
cmp
repz
ds
pop
stc
push
mov
addr16
sub
imul
xchg
mov
dec
clc
outsb
in
pop
aad
int
fimull
pop
jo
push
int
mov
ss
mov
push
mov
cltd
jg
adc
bound
adc
jns
divl
lcall
aaa
scas
pop
xchg
data16
test
les
iret
aas
push
adc
arpl
cld
test
pop
scas
jns
sbb
enter
sbb
xor
loop
or
jno
sub
cmpsb
cmp
mov
and
lock
jg
add
ret
pop
aam
jno
push
lds
in
xchg
push
push
inc
loop
add
push
sub
jmp
int
inc
ljmp
push
jmp
and
xor
jno
lret
cmp
repz
xchg
stos
test
dec
jne
outsl
je,pt
mov
jmp
jo
int
or
mov
scas
dec
cmpsb
cmp
leave
popa
fs
or
in
stos
and
out
dec
leave
xor
pop
andb
sbb
mov
mov
cmpsl
ja
add
pop
jns
push
mov
mov
fildl
leave
jb
lea
dec
sub
aam
cmp
fs
push
mov
orl
divl
mov
dec
out
sub
test
jno
push
js
push
mov
mov
xchg
loop
int
push
daa
dec
in
inc
fdivrl
rolb
leave
call
stc
mov
rorb
and
je
push
or
cmpl
add
out
mov
sub
add
test
or
inc
shrb
stos
sti
cmpsb
ret
dec
pop
je
out
hlt
xchg
sbb
imul
out
scas
mov
ja
xchg
jnp
dec
push
jmp
mov
stc
push
into
stos
mov
sub
xor
ret
push
xchg
popa
hlt
adc
jno
pop
xchg
xlat
cwtl
and
out
sbb
mov
clc
or
xor
xor
mov
pop
lret
insb
cmp
sbb
cmp
and
pop
scas
es
mov
push
mov
jp
mov
fmuls
lock
negl
jnp
push
sub
xchg
in
fs
stos
stc
mov
push
stc
repnz
in
or
mov
test
in
xchg
mov
ja
pop
sbb
mov
or
int3
dec
cmp
loope
sbb
out
xchg
mov
inc
xlat
daa
jnp
cwtl
xor
das
pushl
dec
mov
scas
insb
push
sub
cli
mov
add
outsl
sbb
rorb
ja
cli
cmp
sub
lods
movsl
in
rorl
or
cmpsl
sahf
cmpsb
enter
fsubrs
mov
stc
pop
sbbb
add
in
mov
adc
int3
insl
dec
shr
sbb
movsb
jmp
dec
cld
mov
fldenv
xchg
jbe
mov
fnstcw
mov
mov
notl
sti
lcall
inc
xor
push
pop
js
cmp
stos
jne
and
in
ljmp
leave
xchg
sbb
andb
sbb
jge
addb
repnz
xchg
cwtl
ja
mov
sub
xchg
xchg
mov
mov
test
pop
add
sbb
bound
add
push
or
call
and
fstpl
dec
mov
mov
into
in
and
or
jo
and
push
inc
adcl
or
jp
movl
push
bound
sub
mov
push
movsb
jle
sub
ret
push
cwtl
ja
inc
cmp
into
push
test
out
das
sub
add
movb
cmp
movsl
jae
or
int
test
sub
pop
mov
fidivl
sub
fndisi(8087
cmp
fcoms
hlt
nop
push
mov
mov
je
aas
push
shll
mov
xchg
or
test
pop
pop
jl
sub
test
iret
leave
push
lds
jno
jmp
mov
outsl
rorl
jecxz
push
imul
lock
jl
lods
out
stc
inc
mov
pop
pop
std
cld
enter
mov
iret
add
mov
dec
cmp
pop
adc
push
sahf
loop
or
pop
xlat
movsl
dec
cmp
imul
bswap
add
dec
orl
xchg
addr16
jne
lods
sub
jl
adc
popl
mov
icebp
loop
cmp
cmp
push
sbb
pop
ds
fstl
loope
insb
sub
lea
fistpl
mov
mov
scas
xor
or
add
mov
enter
add
xchg
mov
jb
test
test
roll
adc
xor
mov
xchg
out
dec
xchg
xchg
repnz
divb
inc
lret
add
push
sub
xchg
int3
mov
sub
imul
xchg
pop
sbb
sub
jmp
inc
push
ficoml
call
shrb
mov
cwtl
mov
or
jo
lock
inc
mov
pop
cld
xchg
inc
mov
shl
xchg
enter
repnz
ja
fidivl
add
xor
lret
dec
daa
dec
and
rorb
mov
fwait
inc
fdivrp
cmp
jecxz
fistpll
push
xor
adc
pop
popa
add
sbb
data16
mov
sbb
dec
xchg
add
movsb
or
add
cmp
cltd
loope
es
mov
cmp
inc
lcall
mov
leave
clc
mov
jo
iret
adc
mov
into
cs
shlb
adc
arpl
and
xor
jp
and
xchg
fsubrs
rcrl
push
mov
pop
js
xchg
pop
mov
hlt
mov
jb
pop
dec
bnd
psubq
aad
fcomip
in
xor
lds
add
in
ljmp
movsl
xor
mov
mov
jae
ret
and
push
push
scas
dec
or
jmp
imul
lods
in
pop
add
out
jge
test
test
pop
xchg
lahf
add
pop
std
sbb
lcall
repnz
add
add
push
mov
dec
jecxz
stc
popa
push
dec
scas
pusha
mov
or
das
jb
sub
jl
xor
xor
mov
mov
pop
scas
daa
mov
add
mov
ja
jge
jbe
dec
sti
mov
movsb
sti
mov
outsl
fcmovnbe
pop
jb
mov
nop
jns
inc
lock
inc
push
mov
xchg
rolb
xor
lea
icebp
dec
icebp
sub
cmp
adc
dec
adc
flds
pop
jno
je
xchg
shufps
xchg
or
dec
push
or
mov
push
jno
addr16
push
rcrb
das
mov
jne
aam
sub
sub
sub
mov
add
push
stos
in
sub
ss
sbb
lahf
test
xor
cmp
xchg
mov
jns
icebp
cmpsb
sbb
in
push
mov
mov
lods
mov
out
fchs
nop
push
mov
arpl
cmp
sahf
mov
shrl
mov
inc
icebp
xor
aaa
cmpsb
mov
jo
idivb
movsl
sti
cmp
rcrl
repnz
mov
sbb
mov
clc
daa
fistpl
bound
inc
push
ljmp
test
mov
or
inc
adc
mov
std
and
mov
test
sahf
popa
push
orl
add
xchg
mov
int
pop
mov
pop
xorl
lret
mov
jge
xchg
lds
outsl
fldl
jns
add
pop
in
insl
insb
push
sbb
je
jl
movsb
add
out
lock
enter
mov
xchg
ljmp
or
cmp
std
dec
insb
mov
lods
fwait
aaa
gs
dec
mov
in
adc
enter
add
inc
push
pop
out
jecxz
mov
inc
lea
cmp
xchg
xchg
rcrb
mov
loopne
add
xor
sub
pop
add
push
lahf
add
and
stos
mov
mov
out
lock
aas
out
push
sbb
int3
cld
and
lcall
pop
pusha
insl
fldl
dec
add
rcll
test
inc
push
aas
sub
jmp
mov
movsl
add
mov
pop
aad
jg
jnp
push
lahf
adc
lcall
sarl
mov
sub
lahf
and
stos
fiaddl
jl
aam
fildll
scas
test
test
insl
and
fistl
fstpl
push
mov
jl
cltd
sub
inc
adc
and
push
pushf
pop
test
leave
and
inc
into
clc
add
mov
mov
lret
aas
repnz
cmpsl
lahf
fs
mov
lahf
adcl
cmpsb
pop
xor
and
mov
stos
push
lcall
clc
lods
mov
sub
enter
lcall
scas
push
cs
loope
push
mov
cli
xchg
xchg
sbb
dec
mov
sub
xor
out
xor
cmpl
inc
add
cmc
test
cmp
in
imul
pop
pop
leave
fwait
jno,pn
dec
pop
ja
sbb
pop
pop
rol
xor
mov
or
hlt
arpl
outsl
mov
cmp
push
out
adc
loop
insb
push
in
inc
mov
aad
stos
xchg
xchg
xchg
and
cmpsl
test
xchg
cmp
add
adc
pop
cmpsb
loop
loop
mov
aas
push
rcl
push
pop
and
xor
mov
xchg
stos
aam
mov
xor
push
jnp
jle
push
sub
lods
pusha
dec
xor
negl
xor
mov
jle
push
stos
cmp
or
test
cmp
mov
js
cmpsb
dec
aas
pop
arpl
mov
in
enter
push
popf
mov
and
repz
mov
push
xchg
adc
in
leave
lret
pop
fisubrs
fwait
cmc
test
clc
out
repnz
add
pop
test
notl
es
and
and
jne
mov
mov
mov
lea
xor
cs
cld
cltd
mov
inc
pop
les
add
pop
ja
bound
add
and
or
adc
xor
stc
add
xchg
test
inc
xchg
nop
lahf
das
fisttpl
shrl
xchg
xchg
popa
clc
mov
and
mov
and
outsl
and
es
dec
mov
jmp
inc
lcall
push
fs
xchg
ret
cmp
dec
mov
mov
inc
mov
dec
lds
push
arpl
enter
and
mov
dec
cmpsb
mov
daa
and
mov
inc
cs
jno
mov
pop
fs
pop
mov
fsubl
pop
pop
aam
inc
or
fwait
push
inc
adc
mov
adc
mov
mov
xor
iret
xchg
in
out
mov
sbb
inc
sahf
sub
pop
mov
popa
rcl
push
sbb
mov
xchg
ds
addb
jmp
test
rcr
wbinvd
pop
jbe
push
lret
pop
stos
mov
cmpsb
outsl
sti
nop
adc
test
jg
daa
shll
xor
push
sbb
jge
sbb
xchg
jo
mov
pop
inc
cmp
sbbb
loope
pop
js
sub
cmp
jle
in
mov
repz
pop
movsb
test
push
sarl
jne
movsb
jle
subb
jbe
jge
into
pop
mov
adc
outsb
jecxz
inc
shll
cmp
xchg
outsb
jge
inc
cmpsb
inc
push
sarb
lcall
mov
sti
pop
push
cmp
loopne
xchg
and
leave
loopne
lds
mov
or
out
shll
xchg
rcll
mov
push
and
cmp
fstps
sahf
dec
insl
mov
push
adc
sub
mov
sub
icebp
pop
scas
jbe
cmp
inc
aam
and
fwait
sub
dec
jb
insl
push
stos
pop
mov
mov
mov
push
lods
pop
push
cmp
sahf
int
add
daa
push
or
jg
pop
jae
shrb
mov
mov
out
or
in
cmp
jmp
insl
add
push
ret
fdivrl
pop
inc
repnz
pop
test
jecxz
pushf
movntq
out
or
stc
enter
lds
xor
shrl
pop
nop
or
xchg
aaa
or
daa
push
adc
lret
fwait
mov
cmp
add
xor
arpl
cwtl
jae
xchg
loop
jle
cwtl
and
test
ljmp
push
ds
insl
cli
lea
and
test
and
in
push
insb
bound
lock
mov
mul
cltd
or
jecxz
push
mov
xchg
mov
loop
mov
cmp
mov
aas
lahf
test
out
scas
aam
mov
jmp
sti
test
test
add
xchg
popa
or
popf
fidivrs
jnp,pt
es
xor
xchg
mov
std
gs
inc
aad
push
call
shll
pop
adc
push
xchg
xlat
nop
fwait
repnz
out
in
inc
mov
jl
sub
into
movb
pop
push
fdivl
dec
test
repnz
push
dec
sahf
pop
mov
icebp
adc
mov
cmpsl
or
jg
out
shl
jb
notl
cmp
jno
pop
sbb
push
insb
dec
push
lea
push
xchg
mov
add
out
pop
cmp
mov
and
loope
clc
jge
mov
sub
test
ljmp
shll
pop
cmp
sub
es
mov
mov
out
in
inc
mov
push
lahf
ljmp
outsb
cmc
jne
iret
mov
cmc
dec
adc
lret
stos
cltd
arpl
lahf
mov
xchg
and
in
sarb
aas
inc
mov
cmpsb
cmp
jb
stc
mov
mov
addr16
or
push
mov
xchg
push
pop
sub
lahf
sub
bound
mov
dec
xor
test
or
push
cmpsb
in
sbb
mov
mov
cs
jbe
sbb
sbb
and
lret
cmc
jns
daa
xor
pop
jecxz
fwait
cmp
adc
ffreep
add
cmpsb
fistpl
cmpsl
xchg
loop
in
dec
fcmovbe
clc
mov
xchg
jne
ss
jb
mov
imul
xchg
js
call
xchg
sub
xchg
sbb
push
je
das
out
gs
add
test
mov
ss
out
clc
sbb
cmc
mov
cmp
mov
dec
jmp
mov
push
lcall
into
ret
push
mov
outsl
aas
jb
inc
mov
mov
mov
cmp
int
and
pop
test
xchg
bound
aad
pop
les
mov
jno
cmp
outsl
inc
iret
xchg
pushf
mov
je
lea
dec
pop
ljmp
daa
lcall
jno
push
scas
lcall
sbb
daa
ja
add
insl
dec
add
lret
mov
popf
add
push
in
xchg
jbe
add
pop
lea
insb
mov
lods
popa
leave
pop
in
mov
es
cmp
cmp
xchg
mov
push
or
dec
mov
fdivrs
xor
and
mov
lea
aaa
pushl
add
add
gs
arpl
mov
mov
icebp
mov
add
ja
cwtl
sbb
std
fistpl
repz
shll
mov
popf
push
dec
mov
insb
cmc
adc
int3
jmp
subl
mov
mov
add
pop
xchg
xor
in
cwtl
popa
jg
push
mov
pop
push
lock
xor
dec
inc
ja
jl
xchg
or
sbb
sti
test
cmp
mov
clc
sbb
jns
sahf
or
int3
repz
adc
mov
lods
inc
aas
jno
jg
mov
test
push
cs
inc
xor
lock
ja
and
pop
cmp
jne
das
add
dec
daa
sub
daa
sub
push
mov
jge
and
rclb
dec
mov
dec
jne
adc
dec
xor
jne
decl
call
or
pushf
test
cmp
mov
or
push
daa
sti
std
and
jno
xor
sub
mov
push
in
xor
cmc
clc
dec
xchg
add
subl
mov
pop
ret
pop
aam
insb
inc
shlb
mov
movsl
scas
mov
andb
inc
xchg
mov
je
ret
cmc
adc
sub
sub
aas
ret
jae
repnz
nop
push
jle
jmp
jae
das
inc
xorb
mov
es
test
scas
out
xor
mov
inc
xchg
dec
mov
jbe
add
out
ret
stos
ret
add
out
lods
jns,pn
add
dec
das
sub
popa
dec
shll
leave
fwait
sub
pop
mov
fdivrs
stos
cmpsb
test
add
sbb
inc
setl
cs
daa
outsl
xor
jl
mov
jb
addr16
cmp
jae
fistpll
or
repnz
rol
dec
into
or
in
mov
lcall
sbb
or
add
pop
mov
add
inc
cld
cmc
in
call
push
mov
into
stos
pop
rcr
push
cmp
shrb
xlat
push
mov
hlt
out
shrb
jb
jo
jmp
bound
fldcw
jecxz
pop
lock
cmp
stos
xchg
jnp
in
xchg
mov
cmp
push
pop
out
pop
adc
add
rcrb
int
adc
jp
mov
mov
dec
bound
push
push
shlb
je
xchg
int
or
das
push
push
dec
xor
xchg
aad
stc
in
stos
aad
jno
dec
xor
les
xchg
or
fcmovnbe
fildll
ss
loopne
loopne
jl
inc
ret
rclb
push
bound
pop
lds
lock
xor
sub
test
loope
mov
adc
jle
shl
fidivrl
jge
addr16
xor
xchg
mov
ds
xor
jmp
sbb
mov
cltd
scas
pop
mov
xlat
jb
xchg
sbb
icebp
test
mov
xorl
mov
xchg
mov
sbb
std
add
addr16
inc
add
pop
inc
adc
or
cmpsl
jno
inc
lret
cwtl
clc
adc
pop
push
into
movsl
mov
pop
sti
in
mov
movd
mov
and
iret
fnstsw
mov
cmp
pop
push
sbb
int3
daa
jns
mov
stos
jp
lock
les
mov
outsl
and
loope
and
adc
pop
sbb
fstpl
adc
scas
jl
push
aas
test
jl
adc
fs
mov
inc
push
xchg
mov
push
cltd
inc
inc
push
adc
inc
addr16
jne
cmp
inc
out
int3
clc
int3
xchg
in
aad
test
push
cmp
dec
je
pushf
in
cmpsb
jns
popa
shrl
ja
xchg
xor
push
add
cmp
mov
pop
xchg
scas
rcll
xor
in
mov
xor
jne
mov
push
mov
pop
inc
pop
imul
testl
int
in
sub
stc
xchg
push
mov
call
pop
mov
fnstenv
scas
xchg
iret
out
mov
push
mov
jp
cld
popa
push
shll
push
stos
nop
pop
pop
mov
sbb
scas
in
mov
es
adc
sbbb
mov
cmpsb
xchg
mov
or
fst
sub
test
sbb
imul
and
ret
out
pop
test
imul
mov
test
fucom
clc
stos
scas
ficomps
ljmp
fisttpl
sbb
mov
xlat
fdivp
mov
cmp
mov
sub
push
sbb
and
stos
pop
cmc
inc
int3
aad
xor
movsb
outsb
es
ret
add
dec
stos
sbb
push
and
jge
scas
cmp
mov
fwait
aam
fs
sub
pop
out
sar
inc
cmp
frstor
das
sti
out
cli
jecxz
xchg
arpl
push
push
scas
bound
push
and
sub
add
les
jecxz
pushf
dec
icebp
mov
and
out
fdivl
je
add
mov
inc
sub
jmp
lret
mov
pusha
aas
mov
and
add
pop
in
ds
inc
sbb
mov
cmpsb
jb
hlt
test
or
sbb
xor
aam
mov
cmp
test
enter
dec
insb
inc
shll
mov
cmpb
inc
cwtl
lret
fstpl
outsl
push
and
sti
outsb
outsb
in
pusha
xchg
push
xor
fwait
sub
fwait
cs
fs
pop
jne
sub
adc
aas
jne
int3
stos
idivl
vpinsrw
nop
xor
pop
arpl
test
and
sbb
inc
xchg
mov
mov
dec
mov
mov
dec
adc
add
hlt
sbb
ljmp
popf
into
mov
dec
xchg
sub
mov
mov
sbb
imul
jp
fs
jp
pop
jo
push
adc
sbb
test
or
fwait
loope
sti
sub
fcoml
cmp
lds
in
jnp
lds
js
cmp
out
loope
add
sub
dec
in
jecxz
loopne
add
aam
lahf
jae
jo
add
ret
cwtl
int3
fistps
mov
loop
or
pop
in
stc
cli
or
inc
daa
xchg
popf
test
pop
scas
mov
imul
test
mov
arpl
add
les
stos
pop
mov
out
mov
pop
scas
repz
jmp
cmp
xchg
mov
xchg
and
movsb
inc
mov
dec
popf
xchg
fcmovbe
pop
xchg
int3
dec
add
int3
jbe
orl
or
and
xor
std
jns
lcall
test
fsub
sar
cli
mov
mov
push
push
popa
mov
jnp
xor
sti
mov
ret
pop
push
cmc
outsl
inc
lods
mov
hlt
js
cmc
loop
mov
and
mov
test
cmpsl
repz
cld
lahf
cld
into
and
xor
jg
mov
sub
mov
hlt
roll
inc
les
leave
push
ret
fimull
insb
inc
adc
xor
cli
arpl
repz
adc
adc
push
adc
shlb
cmp
mov
imul
push
in
faddl
cltd
ss
jb
xor
cmp
dec
cli
mov
outsl
push
xlat
jmp
aad
pop
cmc
sbb
adc
imul
pop
mov
inc
or
es
js
fisttpl
add
mov
inc
stos
cwtl
lahf
rcrb
lds
setno
dec
hlt
cld
sub
jbe
fsubrs
and
xchg
lret
fnstenv
xchg
jge
xchg
loope
xchg
or
loope
xor
arpl
test
test
jo
insb
ficoms
mov
cli
outsb
rcrb
push
sub
test
jns
movsl
outsb
sbb
repz
adc
sub
xchg
xchg
xor
cltd
pop
lds
or
iret
pop
push
je
jb
out
mov
mov
jo
push
adc
cmp
ret
clc
jae
xor
stos
scas
xchg
add
xlat
inc
call
push
addr16
in
xor
insb
cmp
inc
add
sub
dec
inc
lods
inc
repnz
adc
outsb
lods
aad
rorb
mov
jge
or
mov
rorb
aam
aam
test
fwait
mov
mov
inc
dec
sub
jnp
sub
es
cmp
inc
std
aaa
cmc
mov
imulb
mov
flds
pusha
dec
jle
fs
aam
jbe
push
rcrb
sbb
jg
imul
cld
jno
sub
pop
cmp
inc
insb
out
fcoml
cwtl
sub
jbe
jne
and
int3
aam
outsb
sarb
add
cltd
repnz
jle
aas
fimuls
jns
xchg
hlt
cs
jbe
inc
xor
aad
add
sbb
push
ret
fs
inc
fidivs
mov
sub
fcmove
mov
sub
cli
or
pop
mov
mov
ljmp
or
xor
ljmp
rorl
in
ficomps
cmpsb
adc
adc
sahf
lods
gs
ret
mov
outsl
seto
sub
push
fistpll
ss
out
in
shlb
rcll
push
daa
push
lret
pop
jne
popl
cmpl
lcall
imull
sub
fidivs
inc
fcomps
nop
xor
ror
jecxz
push
std
dec
adc
ret
xlat
sbb
sub
js
sub
lcall
rclb
pop
and
dec
push
andb
jo
jo
pop
shr
mov
insl
andb
test
shlb
mov
mov
in
adc
push
cli
or
dec
scas
sub
xlat
cmpsb
mov
outsl
add
or
mov
in
pop
push
dec
and
push
adc
cmpsl
xor
lods
adc
outsl
cmpsl
pop
ret
in
pop
divb
iret
xchg
int3
aaa
xchg
add
push
imul
arpl
pop
outsb
les
push
fs
mov
mov
loop
repnz
ret
jb
and
push
repnz
cs
rol
xor
mov
sub
aaa
cwtl
rorb
jo
mov
dec
mov
in
mov
mov
out
push
mov
adc
adcb
cwtl
fisubl
lcall
sarb
jns
xor
pop
loopne
pop
mov
jmp
ret
jl
xor
and
pop
xchg
sbb
add
inc
mov
jg
pop
add
out
mov
sbb
add
scas
xor
sbb
clc
jns,pn
shrb
and
cmp
mov
jmp
test
cwtl
sbb
and
push
add
cld
fiadds
sub
mov
push
lcall
gs
xor
aas
sbb
xor
jp
jbe
in
mov
push
push
mov
sbb
lret
cs
or
push
mov
jns
int
sbb
and
mov
ds
arpl
dec
je
sahf
loop
cmc
outsb
mov
es
add
mov
lea
xlat
push
jnp
das
mov
in
enter
add
sbb
mov
cmp
insl
sub
decb
push
in
fldenv
adc
mov
sub
cld
push
xor
jle
ds
inc
jge
aam
mov
popf
gs
pop
xchg
add
inc
mov
ror
adcl
mull
adc
adc
pop
mov
jae
jmp
aaa
sbb
xor
and
les
xchg
mov
lock
popf
add
sti
std
cli
in
sar
insl
pop
xchg
out
push
outsl
hlt
lods
jns
int
inc
add
scas
popa
bound
sbb
iret
mov
adcb
icebp
sub
mov
or
mov
lds
lds
scas
jge
fadds
xchg
mov
cmp
adc
cmpsb
ss
inc
mov
pop
stc
mov
jmp
dec
out
mov
mov
xor
scas
or
jbe
fwait
mov
add
popa
repnz
or
jl
and
ret
or
aam
push
test
mov
jns
add
adc
cld
call
cltd
test
imul
jge
rorb
xchg
cwtl
dec
insb
xchg
sbb
jmp
das
jb
or
movzbl
adc
sub
push
cs
push
loope
cmp
ret
out
cmp
lds
dec
or
and
dec
mov
popf
xor
faddp
inc
iret
dec
jle
dec
into
lahf
push
jp
shll
xor
inc
push
bound
push
mov
jb
aaa
dec
and
sbb
imul
sub
fs
test
xchg
jmp
call
and
inc
movsl
xchg
push
xor
xchg
xor
mov
mov
hlt
sbb
push
in
jb
sub
pop
mov
call
xchg
fwait
dec
mov
dec
subl
mov
les
std
mov
xlat
leave
mov
dec
push
popf
adc
jbe
gs
push
xor
mov
popa
jle
movsl
pop
xor
mov
xchg
pusha
cmp
js
sub
push
pop
xchg
sub
imul
subl
mov
adc
xchg
das
adc
icebp
pop
imul
xchg
jb
push
das
call
pop
adc
pop
xor
flds
lcall
inc
inc
sub
jecxz
sbb
adc
cmp
rcr
dec
cmp
xor
mov
les
sub
lret
xor
data16
loopne
js
pop
add
sbb
pop
push
push
lea
sub
and
mov
pop
xchg
lret
aas
add
ja
shll
xchg
sbb
sar
out
push
push
sbb
mov
js
add
mov
sbb
fsts
shl
fstl
ret
and
pop
xchg
and
sbb
sbb
push
cli
dec
mov
sbb
adc
mov
aam
and
inc
push
nopl
divl
xor
mov
popl
or
cmp
jp
roll
into
fwait
stos
adc
aas
pop
mov
stos
das
leave
mov
mov
xchg
sbb
les
movsl
inc
mov
mov
sub
xor
repz
cltd
mov
outsb
push
test
test
mov
mov
mov
dec
imul
mov
xchg
imul
or
inc
sub
inc
inc
or
sbb
and
push
push
cmp
pop
test
jno
ds
bound
jns
imul
in
push
int3
sbbb
fimull
dec
pop
pop
inc
clc
cmpsl
push
mov
loopne
ss
gs
cmp
clc
bound
push
ds
jo
mov
sub
adc
imul
push
adc
lahf
mov
mov
mov
aad
mov
mov
repz
lds
and
pusha
jno
jns
pop
adc
loop
fwait
test
mov
call
fisubs
mov
or
add
andb
push
rcrb
mov
pop
sbb
push
bound
mov
imul
add
xor
inc
adc
sbb
or
cmpsl
cmp
mov
add
and
inc
lret
cmp
sub
adc
mov
sarl
std
inc
lds
out
stc
lods
repnz
test
push
cmp
fs
jmp
movsl
push
cmp
and
inc
es
test
mov
jmp
add
cmp
push
dec
andl
mov
xchg
jle
mov
pop
loop
sub
repz
mov
inc
in
and
call
pop
or
out
je
lcall
sub
dec
lcall
and
test
std
sarl
cmp
lds
lea
mov
adc
mov
mov
cmpsb
mov
push
sahf
rol
pop
xchg
dec
cmpsl
jp
lods
scas
stos
ror
outsl
cmp
dec
fs
cwtl
sbb
inc
outsl
dec
and
scas
lret
sahf
cwtl
mov
push
jae
lret
lcall
outsb
sub
xchg
movsb
rclb
xchg
adc
and
pusha
jecxz
les
adc
pop
sub
mov
mov
icebp
push
out
mov
inc
andl
inc
adc
xchg
fmul
pop
xor
xlat
shll
mov
test
and
or
cmp
push
daa
sar
sbb
jns
roll
cmp
iret
add
inc
fnstsw
dec
sbb
insb
rcrb
xchg
stc
sub
inc
adc
or
movsb
sub
xlat
xchg
icebp
lret
inc
js
mov
cmp
inc
or
loopne
ret
or
add
and
cli
xchg
mov
pop
mov
adc
jo
jecxz
das
push
mov
inc
leave
int3
inc
pop
iret
lea
sarl
pop
adcl
cmp
cmp
pushf
imul
sub
je
cs
xchg
sbb
jne
push
out
or
pop
mov
mov
fidivrl
dec
lea
stos
scas
xor
or
lret
aad
xchg
fs
jo
icebp
pop
mov
sub
test
test
push
xchg
pop
dec
or
push
js
fidivrs
les
mov
cmpsb
dec
incl
les
xchg
inc
stos
outsb
cmp
outsl
or
sbb
int3
orl
rcl
mov
fnstcw
mov
or
std
popf
test
ljmp
cmp
adc
mov
outsl
movsl
adc
test
inc
jmp
xor
mov
lods
jne
stc
fcoml
clc
loope
xchg
andnps
mov
xchg
pushf
cmp
ss
mov
inc
mov
shr
inc
inc
add
inc
inc
js
pop
xchg
push
inc
scas
ret
aad
cmpb
stos
fsubl
subl
shrb
sbb
push
int
mov
jbe
and
and
xchg
pop
enter
or
out
or
mov
loop
mov
fdiv
into
test
sub
jl
stos
shll
out
push
push
push
jne
pop
cmp
dec
js
and
mov
jle
icebp
dec
dec
ljmp
and
mov
jns
mov
gs
push
push
outsb
pop
insb
mov
add
movsl
push
dec
dec
sbb
push
pop
xchg
inc
lods
sub
cmc
mov
arpl
lea
mull
dec
push
lock
xor
or
sbb
xor
pop
mov
sbb
jbe
insl
cmpsb
inc
dec
dec
cmp
bound
push
jns
stos
je
in
and
xchg
insl
les
xor
addr16
jns,pt
sub
cmc
lret
lock
mov
xchg
enter
lods
xchg
sbb
mov
imul
sbb
dec
pop
loop
imul
arpl
fildll
push
movsb
mov
pop
lret
sbb
push
insb
pop
fbstp
aam
xchg
mov
and
push
xor
and
ja
ret
pop
fdivs
sub
out
mov
enter
jge
cmp
mov
je
insb
repz
outsl
popf
dec
and
jl
jmp
cmp
xchg
aas
xor
ja
imulb
call
mov
nop
mov
dec
jne
push
adc
pusha
xchg
ficoml
mov
cld
cmp
xor
outsl
dec
mov
push
cwtl
imul
scas
iret
mov
mov
xor
mov
ja
dec
rclb
popa
stos
testl
fadds
insb
add
dec
xchg
pop
sub
mov
pop
test
imul
add
lret
scas
test
cmp
outsl
dec
sbb
jbe
mov
add
mov
sub
mov
insb
jge
jmp
xchg
add
cmc
das
adc
outsb
aas
cmp
xor
repz
or
inc
ret
jmp
andb
push
in
inc
or
inc
cmp
cmp
mov
std
into
imul
in
insb
sbb
lock
lret
sub
sub
addb
push
arpl
jl
in
ljmp
icebp
mov
out
xlat
mov
pop
leave
push
mov
pop
in
push
pop
lods
idivb
jns
in
fwait
movsb
sbb
dec
sub
cmp
or
pusha
sub
js
icebp
insl
mov
outsb
push
push
xchg
incb
pop
mov
jle
cli
loope
outsl
xor
cmc
mov
or
rolb
inc
dec
xor
adc
jns
push
fistl
scas
adc
pusha
std
daa
dec
ss
jg
insl
cli
dec
daa
std
mov
inc
aam
sbb
sahf
and
add
xchg
and
jle
pop
sti
mov
sbb
push
dec
dec
inc
cmp
imull
dec
mov
cmpsl
out
and
xor
xchg
inc
sbb
outsb
add
dec
mov
adc
pop
cmc
jecxz
sahf
inc
call
mov
adc
push
lock
pop
mov
dec
pop
insl
aad
loop
fidivrl
lds
jns
je
mov
je
pop
fcmovnb
xor
push
fdivr
jl
inc
or
icebp
flds
cmp
xchg
in
cmc
and
add
jb
sbb
push
xchg
movsb
cmp
ss
dec
jge
pusha
mov
push
sahf
lahf
rcl
sarl
cltd
js
jp
adc
in
pop
and
push
inc
in
leave
into
push
dec
xor
js
push
fbld
mov
push
sub
loop
cmp
inc
cmp
pop
mov
loope
and
dec
mov
sub
push
inc
jmp
jo
and
cmp
arpl
stc
add
push
outsl
in
std
inc
scas
dec
xchg
rclb
in
std
push
cmp
push
call
xor
inc
rorl
mov
xchg
dec
mov
mov
stc
inc
stc
insb
in
int3
loopne
outsb
xchg
dec
loope
push
leave
dec
push
fldl
sahf
ds
sbb
lret
sbb
mov
cld
inc
push
sub
in
xchg
repz
jbe
mov
mov
ja
nop
mov
sbb
jp
mov
sarl
cs
add
sahf
test
filds
insb
fsubl
dec
xorb
xchg
movsl
pop
dec
adc
push
push
pop
sbb
pop
inc
sti
sti
pop
imul
fwait
fmuls
lods
ljmp
cs
popf
std
dec
in
jae
scas
mov
in
xor
insl
lods
out
movsb
mov
rorb
fcompl
pop
repnz
in
inc
cmp
jae
out
xor
test
test
push
mov
ljmp
and
mov
add
adc
pop
lahf
arpl
push
leave
sub
lock
dec
xchg
xchg
bound
mov
mov
mov
lds
bound
xchg
inc
popf
push
fsubs
icebp
mov
inc
incb
mov
and
jmp
cmp
or
xchg
sub
jb
scas
inc
fisttps
mov
mov
push
aas
je
ret
cmpsl
rcrb
inc
addr16
stos
lea
jae
sub
call
jl
aaa
pop
sbb
and
imul
fdivrs
inc
inc
rcrb
push
lock
mov
sti
pop
test
movsb
sbb
cmp
pop
popa
out
sub
sbb
inc
lds
pop
xchg
test
daa
push
push
orb
lret
test
xchg
loop
outsb
jecxz
xor
fistpl
sbb
insb
cmp
adc
pusha
dec
lock
in
mov
dec
cmp
xor
xor
fldt
loopne
inc
add
mov
adc
add
mov
jge
mull
xchg
push
call
rcll
sub
cmp
push
pop
sub
out
xchg
clc
in
dec
sub
sbb
lcall
push
into
and
lcall
fldl
fisubrs
mov
pop
subb
jp
jo
in
or
jnp
repz
clc
pop
add
inc
push
test
loope
lods
push
out
mov
sub
sub
dec
jle
hlt
inc
ja
xchg
mov
aam
loop
loope
and
adc
imul
xchg
lahf
enter
pushf
mov
xchg
cmp
or
lahf
mov
adc
repnz
rcll
adc
sbb
sbb
rorl
add
sub
scas
mov
stos
test
out
add
cli
test
cmc
lahf
add
imul
and
sub
inc
fsubr
das
imul
sub
and
into
ror
test
lods
call
out
mov
sbb
xor
sub
sub
jb
icebp
ljmp
movsb
adc
adc
pop
mov
hlt
mov
push
push
inc
or
jbe
movsl
cmp
addr16
adc
aas
sahf
pop
testb
xchg
daa
lea
js
mov
lds
int3
cmp
gs
in
frstpm(287
dec
fwait
mov
pop
pop
xor
lea
adc
roll
jbe
inc
pusha
mov
out
xchg
in
mov
rorb
jnp
iret
cmp
xor
movsb
fdivl
dec
lcall
sub
xlat
cmp
inc
into
cmp
dec
xchg
xchg
dec
jle
cli
test
mov
push
add
or
inc
aas
add
add
lods
sub
mov
rcll
sbb
aam
mov
and
lods
cld
fdivr
pop
mov
enter
stc
xchg
pop
je
fs
and
xlat
mov
push
xlat
imul
dec
repnz
dec
shrb
jecxz
sbb
mov
lret
dec
add
xchg
mov
test
inc
cmpsb
sahf
test
loope
mov
mov
shl
cmp
clc
mov
cltd
in
jbe
xor
dec
jg
loop
mov
sahf
mov
sahf
icebp
daa
mov
mov
orb
pop
lahf
sub
xchg
sbb
nop
sub
shrl
into
mov
sarb
std
call
lcall
shrl
xor
lret
mov
or
mov
inc
adcb
jns
push
insl
sbb
cwtl
jg
sbb
inc
mov
enter
mov
inc
push
dec
xchg
push
rcrl
mov
push
cmc
sbb
test
mov
mov
ss
loop
push
mov
jle
cmc
iret
ret
xor
mov
fstps
sub
addl
pop
fsts
arpl
and
inc
das
push
xor
fnsave
cs
shll
in
insl
fcoml
jo
push
inc
cmpsl
inc
gs
pop
stos
cmpsl
mov
or
inc
inc
inc
fmuls
andb
mov
stos
pushf
fidivrl
adc
shl
out
lea
lret
aas
jbe
ss
aam
mov
dec
jmp
movsl
push
add
jae
push
cmpl
and
push
test
out
xlat
sbbl
rcrb
adcl
or
lods
stos
es
clc
cmp
les
jb
cs
or
xchg
push
lods
mov
daa
push
xchg
out
push
xchg
imul
or
mov
aad
rclb
leave
or
or
dec
push
pop
jb
cmp
pusha
ss
das
mov
ss
mov
rcrl
sbb
push
sahf
sbb
test
jno
cwtl
or
imul
xchg
imul
outsl
lret
inc
dec
pop
push
fwait
sarl
add
xchg
das
cwtl
mov
lret
sbb
lods
lods
outsb
fildll
mov
bnd
das
dec
in
cmp
scas
icebp
adc
arpl
mov
loope
xchg
add
in
and
dec
push
mov
sbb
push
sbb
mov
push
movsl
gs
lds
jg
adc
shlb
outsb
push
clc
mov
fcomps
mov
inc
adc
xor
jp
xor
out
in
sub
lock
les
fadd
mov
sub
andb
mov
imul
int3
xor
icebp
test
push
jb
pushf
andl
cld
and
mov
jp
push
xchg
idivb
inc
pop
xchg
cltd
jo
or
in
cmp
adc
popf
call
inc
movsl
sub
sub
xor
sbb
shr
mov
fbld
jae
in
lods
fcmovbe
lea
movsl
hlt
mov
and
and
mov
orb
sub
dec
popf
jae
cwtl
xchg
icebp
sbb
mov
lds
xor
sub
cmp
or
loop
insb
popa
or
mov
mov
dec
dec
jmp
xchg
xlat
fwait
xlat
bound
scas
rcll
cmp
je
test
xor
das
add
stos
sbb
outsl
stos
aam
pop
loopne
sub
iret
xchg
mov
jmp
push
jo
lea
das
repnz
testl
loopne
fdivrs
popf
mov
dec
xchg
xchg
push
sarb
lods
or
xchg
pop
clc
jno
mov
lods
mov
or
icebp
mov
cmp
mov
repz
sbb
add
inc
mov
dec
jbe
inc
sbb
or
pop
mov
subb
repnz
sbb
mov
xchg
or
iret
popa
vmulps
inc
push
scas
xchg
pop
fidivrl
ficoms
imul
adc
xor
adc
jg
movsb
repz
fld
fisubrs
and
jg
add
cli
inc
lods
add
or
popf
lret
cmp
and
out
int
jecxz
inc
pusha
push
pop
xor
insb
mov
inc
test
push
cwtl
popl
inc
add
xchg
jp
pop
sbb
pop
or
adc
fistl
cltd
jl
das
sub
ss
loope
loop
fstpl
push
adc
in
push
movsb
cmp
add
lods
pop
mov
gs
push
jbe
inc
jne
ja
mov
shlb
or
sbb
mov
cmp
scas
outsb
inc
divb
ds
pop
sub
cmpsb
test
sbb
repnz
dec
inc
jae
jne
pshufw
test
sbb
xchg
or
popa
ss
inc
orl
inc
cmp
hlt
cmp
hlt
and
push
dec
pusha
pop
mov
pop
clc
or
jb
enter
xchg
adc
and
repz
mov
movsb
pop
stos
mov
mov
sub
pop
xchg
in
dec
mov
out
add
lea
jne
shrl
push
imul
adc
dec
jae
mov
jg
mov
scas
fisttps
in
sub
inc
cmc
div
pusha
testl
into
sbb
sahf
ja
add
ss
push
aaa
jo
push
daa
enter
dec
sbb
xor
repz
cmp
repz
orb
pushf
cli
jae
scas
sbb
adc
cmc
cmp
ljmp
arpl
aam
repnz
sbbb
stos
dec
pop
sbb
jns
in
add
int3
fidivs
pop
adc
idivb
and
lods
out
repnz
or
cmp
pop
dec
call
scas
cmpl
dec
cli
scas
in
cltd
or
ss
pop
sti
sbb
push
sub
push
lahf
xor
loop
adc
mov
pop
push
push
pop
and
pop
xor
xchg
pushf
clc
imul
imul
push
jg
mov
dec
mov
adc
decb
dec
pop
xor
movsl
jns
mov
adc
jno
pop
cmp
je
ss
mov
mov
push
fisttpl
call
sub
add
aad
ret
addr16
pushf
or
jnp
mov
testb
outsb
daa
stos
xchg
ffree
lods
and
movsb
ror
repnz
and
pop
and
gs
push
push
ja
loop
test
loope
pop
jge
mov
sub
lret
int3
cld
scas
sbbb
push
cwtl
push
aas
sarl
mov
jo
sti
sbb
cmp
mov
add
push
jae
inc
clc
adc
mov
es
xor
mov
dec
pop
xor
cmp
maxps
stos
jne
les
leave
enter
dec
and
loop
jb
mov
popa
sbb
js
mov
popf
les
cltd
aaa
in
test
loopne
jmp
daa
movsb
pop
cwtl
inc
popa
jnp
call
sub
aaa
outsl
into
mov
int
sub
mov
in
or
push
les
lcall
aam
incl
in
lds
dec
push
or
or
shrb
insl
and
cwtl
es
dec
arpl
pop
fimuls
jl
mov
mov
leave
lods
sub
xor
sbb
in
sbb
sub
in
cmp
adc
pushf
arpl
loope
mov
and
push
push
mov
jo
icebp
into
add
pop
sub
call
bswap
cmc
icebp
dec
push
int
dec
and
sub
xor
cltd
outsb
push
repnz
mov
jae
mov
mov
test
push
mov
into
roll
jle
in
xchg
and
push
push
xlat
cli
dec
or
popa
jbe
adc
jg
fistpl
add
push
outsw
loope
test
stos
mov
jmp
gs
insl
jno
insb
adc
cmp
lea
imul
testb
xchg
add
pop
js
outsb
inc
fldt
aaa
adc
xlat
out
shrl
negl
aaa
in
pop
pop
and
das
shl
ss
push
and
xchg
and
fisubl
pop
cmpsl
xchg
or
mov
mov
xor
jp
sub
loop
pop
lock
inc
xchg
xchg
or
sub
xchg
mov
push
cwtl
out
out
pop
js
sbb
int
setne
sti
mov
faddl
cmp
shl
sub
adc
mov
sub
cmp
mov
cmc
stos
daa
xlat
sub
cs
hlt
mov
push
and
stos
xor
jne
stos
mov
or
pop
jo
addr16
mov
xchg
adc
cmp
cmpsl
sahf
ss
cmp
fwait
push
insb
enter
rcl
mov
fsts
push
pop
inc
cs
cld
xchg
in
enter
in
xchg
xchg
mov
xor
ss
shrb
jns
lock
popa
gs
push
cli
pop
repz
fsubr
sub
call
fldl
add
rolb
ss
sub
dec
xlat
jecxz
fs
xchg
and
dec
pop
clc
lret
and
push
or
mov
vcvtss2sd
push
imul
sbb
lahf
mov
cltd
fidivrs
lret
mov
cmp
push
cmp
cwtl
mov
mov
das
cmp
pop
mov
sahf
jmp
inc
xchg
ret
mov
add
bound
mov
lret
pop
and
pop
push
pop
dec
jb
mov
pop
dec
dec
imul
sub
or
mov
scas
push
lret
in
sub
jmp
rcl
ja
sub
mov
sub
in
sub
cld
ja
cli
test
aas
pusha
mov
int3
sub
call
out
mov
lea
mov
enter
in
mov
data16
inc
imul
js
push
add
lret
push
jno
js
test
fsubr
inc
ljmp
je
mov
pop
add
mov
xor
lcall
sarl
mov
aas
js
aas
test
adc
lea
and
test
jmp
or
lods
adc
xor
shlb
rclb
cs
pop
add
into
aam
daa
repz
xor
jmp
jl
fwait
mov
leave
inc
sbb
mov
ds
adc
fcompl
jg
leave
dec
sub
dec
shrl
movsl
jne
out
push
dec
mov
push
xor
fnstsw
in
lahf
test
inc
cmp
adc
enter
push
push
test
movsl
cmpb
dec
add
stos
adc
cmp
sub
data16
jns
comiss
rorb
int
lods
pop
pop
jne
shrb
mov
stc
push
rolb
add
ret
cwtl
adc
sub
xchg
stos
mov
jae
icebp
testb
cmp
mov
clc
add
ljmp
wbinvd
bts
imul
rcll
js
mov
scas
rorb
shll
cli
rorl
outsb
popl
shrl
sahf
pushf
das
cmpsl
outsb
cmpsl
or
cs
insl
adc
scas
cmpl
adc
cmp
adc
inc
rdpmc
mov
outsl
rcll
cmc
sbb
loope
or
mov
or
pop
ret
fiaddl
and
or
dec
addr16
jne
pop
addl
stc
imul
repnz
xchg
xor
jp
adcl
fisttpll
fisubrl
jne
adc
xchg
insl
rcrl
lret
or
pop
sbb
sub
inc
enter
dec
data16
xchg
clc
popa
sbbl
ret
pushf
inc
bound
cmpsl
lods
cmc
mov
pop
inc
or
and
insl
les
jae
stos
arpl
sbbb
leave
testl
and
xchg
mov
and
mov
test
movb
mov
mov
cmp
or
stos
xchg
push
jo
iret
ljmp
add
mov
add
xor
dec
jbe
jno
movsl
out
scas
mov
inc
adc
pushl
cmpsl
ret
fnstenv
insl
xor
aaa
xchg
shll
inc
or
mov
es
jbe
pop
icebp
inc
icebp
xchg
adc
stos
jmp
lods
icebp
fisubrl
push
mov
adc
scas
loop
adc
je
loope
shr
rcrl
rep
popa
mov
pop
xchg
inc
mov
cwtl
pop
jne
add
adc
je
xor
xchg
inc
shl
out
ljmp
int3
lea
sub
sbb
inc
fbld
arpl
scas
xchg
stos
pop
inc
mov
xchg
lods
ret
xchg
lods
adc
mov
addr16
popa
in
and
sub
sahf
scas
mov
mov
mov
xor
in
in
or
dec
xor
mov
lret
pop
push
push
shrb
lret
lock
sbb
push
cltd
out
fwait
jg
fs
scas
in
mov
mov
js
add
jle
aaa
loopne
in
push
cmp
cwtl
cmpl
pushf
jge
ret
jae
adc
clc
lahf
xchg
adc
dec
pushf
push
testl
ret
add
popa
je
sbb
cli
into
pop
scas
int3
sub
clc
arpl
mov
fstpl
out
movsb
or
sar
or
mov
push
cmpsb
pushf
mov
pop
outsl
dec
insb
xchg
and
dec
mov
xor
xchg
cs
push
or
xchg
inc
cli
scas
inc
gs
call
es
mov
or
jno
notl
imul
xchg
test
les
sbb
xor
sub
clc
pushf
mov
out
call
push
push
std
into
dec
mov
add
dec
leave
sub
cmp
mov
lds
fcomip
pop
jl
fsubrl
jecxz
sub
cmp
lcall
ja
clc
hlt
mov
jns
aaa
cwtl
cmpl
dec
jmp
loope
in
or
ja,pt
das
pop
inc
push
mov
mov
cmpsb
jg
jmp
ljmp
sbb
mov
cltd
dec
data16
dec
mov
test
clc
push
jb
mov
push
aaa
cmpsb
test
rolb
or
lcall
jno
jnp
mov
and
dec
inc
xchg
frstor
mov
js
cmp
cmp
sub
aaa
in
sbb
lahf
pop
mov
sahf
xchg
mov
leave
outsb
mov
or
or
mov
je
jecxz
xor
mov
dec
fwait
mov
pop
sahf
movsb
push
inc
mov
adc
cmp
push
les
sarl
ficoml
cmpsb
mov
mov
daa
dec
add
std
and
xor
mov
jg
das
jg
lods
jp
testb
shll
push
lock
pop
adc
je
lds
dec
push
ss
sarl
popf
aad
movsl
mov
jbe
fcoms
stc
int3
push
test
jns
inc
inc
movsl
bnd
inc
xchg
into
cmpsb
push
mov
push
push
test
jns
inc
aaa
fildll
cmpsb
in
xchg
jl
xchg
and
mov
out
adc
orl
lahf
stos
sbb
ret
mov
fstpl
inc
add
push
xor
aam
iret
sarb
les
aam
push
movsb
ss
out
aaa
testb
mov
jo
cmp
gs
mov
ret
pop
pop
jns
push
into
mov
and
popf
nop
push
jb
sarb
fimull
into
dec
pop
pop
inc
repz
xor
shlb
push
xor
dec
popf
popf
dec
mov
mov
inc
or
and
xor
pop
pop
fs
mov
leave
negb
xor
cmp
add
dec
test
cmpsb
mov
into
ret
dec
add
mov
les
in
add
outsl
stos
loope
js
lods
cld
push
in
mov
out
sbb
sub
lret
daa
xchg
lods
call
mov
mov
out
ret
mulb
xor
pop
mov
outsl
outsl
cmpsb
mov
push
lea
or
add
or
cmp
inc
cmp
sbb
clc
pop
pop
inc
pop
mulb
add
out
push
int
xor
pop
xor
ds
adc
lret
js
in
stc
stos
inc
hlt
xchg
aas
push
aam
cmp
or
xchg
in
dec
jmp
scas
pop
ficoms
pop
dec
sub
inc
ljmp
push
ret
sahf
testb
int3
mov
lcall
or
imul
hlt
movsb
inc
xchg
sbb
push
cmpsb
jl
addr16
add
adc
mov
cmpsl
xor
mov
scas
cmp
orb
fnstenv
sbb
jmp
arpl
xor
subl
sub
push
cmp
pop
cmp
gs
pop
sub
icebp
int
or
outsb
pop
sbbb
mov
test
insb
push
dec
jns
push
test
add
js
out
into
mov
adc
jne
sub
inc
lods
scas
xchg
add
and
sub
cld
xlat
sub
mov
sbb
xor
cmp
xor
add
aam
mov
mov
pop
inc
push
cmpsb
mov
or
in
xor
add
sub
or
xchg
cmp
add
cli
repz
fs
xlat
jns
push
push
cwtl
push
mov
pop
cmp
in
out
xchg
mov
mov
movsl
ret
stos
jb
leave
aam
dec
mov
mov
add
dec
push
pop
pop
push
mov
fstpt
xchg
xor
mov
in
xor
cmpsl
insb
in
xor
cmc
pop
repnz
arpl
xchg
aam
and
cmp
fisttps
inc
push
push
xchg
ja
dec
fsub
xor
int
xor
out
fnop
stos
pop
mov
sarb
or
mov
mov
sbb
or
fstl
and
dec
sbb
xor
int
mov
mov
insl
sar
jae
icebp
bound
dec
fsubr
jo
mov
sbb
notl
imul
jle,pt
andl
xchg
mov
or
pop
loope
cmp
mov
divb
xlat
xchg
leave
inc
scas
popf
xor
dec
test
scas
loop
and
sbb
and
andl
inc
push
scas
xchg
sub
adc
dec
pop
out
xchg
out
ret
mov
loopne
ret
push
mov
sti
aaa
sub
pop
add
rcrb
xor
jns
ds
out
xchg
outsb
sub
int
fwait
into
sahf
or
jno
xor
cmp
ss
push
jmp
xchg
mov
mov
enter
mov
xchg
dec
test
mov
addr16
cmp
or
mov
lcall
jecxz
sub
inc
adc
or
push
push
xchg
sub
lds
pusha
lret
xchg
mov
sti
shlb
fucomp
arpl
iret
jmp
in
mov
jmp
movsl
je
add
inc
mov
jbe
inc
dec
adc
mov
repz
dec
cmpb
or
ds
push
inc
xchg
cmp
push
and
pop
jecxz
mov
jg
ljmp
push
mov
repz
outsb
jle
and
dec
ja
xor
jbe
push
xchg
inc
mov
mov
aam
shll
mov
mov
push
popa
stc
outsb
addl
pop
cmp
fstpt
cltd
push
call
das
dec
fcomps
int3
mov
xchg
dec
pop
lahf
pop
imul
cmp
push
out
jnp
push
ljmp
out
test
pop
push
jecxz
call
jmp
enter
xor
aaa
std
xchg
outsb
lcall
mov
mov
jb
pushf
idivl
insl
scas
mov
outsb
adc
cmpsl
adc
nop
sti
divb
rol
dec
pop
push
inc
sbb
mov
stc
or
mov
pop
adc
clc
push
pusha
cwtl
or
xchg
cmc
fldcw
jecxz
adc
lods
mov
and
lods
sub
das
notl
iret
mov
inc
sub
aaa
pop
out
int
sub
dec
ret
lods
mov
jnp
outsl
cli
pop
test
dec
in
es
pop
push
test
and
lret
mov
sbb
dec
cmc
popa
and
repnz
dec
sub
add
test
sub
out
cmp
xchg
lods
mov
js
lock
addr16
add
fs
ret
hlt
dec
int
inc
test
and
int
hlt
xor
out
xchg
mov
subl
xchg
rcrl
les
sbb
ja
push
inc
dec
dec
sub
int3
xchg
push
idivb
es
mov
mov
test
pop
mov
lods
lods
lods
jmp
mov
scas
mov
inc
inc
mov
pusha
int
push
aam
mov
fs
push
mov
adc
mov
gs
aaa
sub
jae
pop
lds
xchg
push
mov
sbb
xor
dec
xchg
jmp
fidivrs
sbb
mov
push
dec
jbe
fld
test
outsl
mov
ja
int3
out
fwait
jbe
popa
adc
les
inc
imul
fimuls
and
negb
adc
shl
xor
fnsave
movsb
clc
push
cltd
jb
imul
fdivl
js
xor
scas
aaa
mov
and
shrb
xchg
push
mov
cwtl
lods
shl
fcoml
test
lods
jno
mov
xchg
cmp
shll
adc
push
cmovae
ret
loopne
es
mov
dec
adcl
lock
fcmovu
push
js
fildl
jg
into
push
pushl
les
and
pop
icebp
add
repnz
add
jae
outsb
mov
xor
mov
pop
sarb
push
jae
jp
jg
inc
movsb
mov
aam
hlt
cld
cs
jle
clc
test
shlb
mov
fisttpll
enter
nop
push
filds
sbb
sti
jne
insb
dec
sub
jg
dec
lret
aaa
lea
mov
rol
adc
xor
das
pop
loope
out
cmpsl
sbb
mov
cwtl
rcrl
bound
mov
mov
popa
add
push
arpl
data16
iret
or
insl
jns
xor
repnz
cmp
sahf
push
xchg
std
pusha
out
movsb
push
xor
xchg
int3
jge
mov
in
in
loop
sbb
push
mov
adc
je
push
stos
push
sahf
add
int
mov
pop
lcall
fsub
ret
xchg
fsubr
lea
fnstenv
xchg
in
and
dec
shrl
mov
sahf
outsb
je
xor
dec
dec
test
std
lret
dec
mov
out
mov
mov
xchg
movsl
subb
mov
jae
sbb
in
mov
jo
popa
lea
popf
push
hlt
sub
leave
hlt
repz
sub
negl
pusha
mov
jns
adc
cmp
sti
push
sub
fimuls
es
or
add
inc
fndisi(8087
pushf
mov
jns
lcall
add
repnz
cmp
movsl
xchg
sub
movsl
push
and
add
push
sbb
dec
lret
mov
push
xchg
in
jnp
fidivs
movsb
adc
lea
xchg
push
js
jecxz
mov
xchg
pop
push
and
jp
xor
add
outsb
and
out
in
xlat
push
xor
stos
les
mov
add
xor
fidivrl
xchg
xor
mov
push
pop
test
push
test
xor
hlt
or
loop
add
mov
stos
cmpsb
jmp
cmp
insb
cmp
fistpl
adc
jbe
mov
pop
stos
ljmp
test
ss
cmpsl
repnz
pop
jl
pop
push
push
stos
rorl
loopne
aaa
mov
jo
dec
cmp
in
xchg
pop
sub
add
and
lock
cmc
push
dec
jnp
xor
hlt
xchg
out
mov
jl
js
cld
cs
xor
test
xor
js
arpl
test
or
or
arpl
xlat
movsb
andl
sbb
ret
mov
and
cmp
hlt
enter
outsb
adc
jns
data16
in
test
xlat
cmp
jle
inc
mov
daa
test
lock
fcomps
mov
mov
push
ja
cltd
out
adc
push
jae
rol
mov
fwait
ljmp
jne
ror
jno
daa
inc
dec
cmp
xor
inc
mov
sarb
jge
mov
mov
aam
sbb
jnp
adc
or
mov
lret
nop
nop
mov
sub
sbb
loop
lock
movsl
outsl
jmp
popa
sbb
cld
int3
xchg
xchg
aad
sbbb
sti
cmp
rolb
push
or
imul
sub
cld
sub
outsb
enter
in
push
mov
js
dec
mov
dec
mov
mov
dec
lea
dec
sub
xchg
mov
cmpl
shlb
mov
jp
test
or
test
out
lret
push
data16
pop
cltd
aam
cmpsl
imull
shll
negl
sbb
dec
enter
sbb
ljmp
jo
hlt
sbb
adcb
mov
movsl
outsb
test
mov
dec
sub
js
mov
int3
pop
and
mov
mov
jg
ljmp
lret
out
in
rolb
test
dec
cmp
mov
xchg
mov
and
cs
pushf
or
add
loope
ret
fisubl
sahf
adc
pop
js
pop
sbb
adcb
sub
rcrb
xchg
hlt
fmull
sub
int3
sbb
xor
imul
adc
imul
sbb
push
push
aaa
jecxz
pushf
lret
movsb
movl
lds
mov
inc
xor
ja
incb
jb
jg
push
cs
xchg
lods
sbb
cmp
push
xor
mov
imul
push
lods
ret
push
or
addr16
fistl
lock
ficompl
sbb
or
imul
out
pop
dec
pop
pop
push
inc
lret
cltd
inc
mov
stos
mov
add
je
mov
dec
pushf
cwtl
jne
xchg
adc
jbe
shl
jae
xor
pusha
cmp
pop
jecxz
addr16
test
addl
adc
iret
push
mov
fwait
cmpsl
fisubl
sbb
jno
cli
pop
xor
aam
fidivs
jns
lret
aad
loop
pop
cmp
xor
out
xchg
lea
ds
cltd
lcall
pusha
pop
jg
popf
repnz
xor
or
xor
cld
and
jb
daa
sbb
inc
call
testl
enter
adc
enter
sub
push
mov
add
je
jae
rcrl
shll
movsb
cpuid
aaa
addr16
aad
out
cld
xchg
cwtl
sub
into
xchg
xchg
mov
push
dec
jg
iret
lret
das
jecxz
pop
sti
mov
xchg
cmpsb
mov
mov
adc
push
bound
add
or
xor
inc
insb
jp
mov
insl
shrl
fldcw
test
dec
arpl
in
cmp
xchg
pop
insl
in
xchg
mov
lret
call
jo
mov
pop
mov
lcall
js
outsl
push
jo
in
dec
rcll
inc
xchg
sub
and
mov
xor
out
mov
xor
cmpsl
out
out
jl
fs
xor
cli
rolb
mov
int3
fdivrp
inc
adc
bound
fwait
push
dec
fadd
pop
fsubrs
add
mov
mov
ljmp
pop
mov
ljmp
clc
adc
stos
mov
rorb
xchg
jbe
or
scas
fiaddl
fstpl
push
mov
int3
in
test
sub
iret
pop
jle
jnp
jne
jbe
inc
or
add
ds
loopne
loope
mov
dec
sbb
dec
sahf
mov
insb
fcmovbe
inc
push
xlat
sub
lcall
xchg
sub
fcmovne
mov
loope
sub
xchg
movsb
clc
stos
jns
sbb
fiadds
add
cmp
fcmovb
xchg
pop
sub
ljmp
push
jle
clc
movsl
inc
sub
mov
mov
push
inc
xor
bnd
dec
jb
adc
jmp
fcomps
stos
data16
inc
inc
subb
cmp
sub
sbb
mov
jbe
jo,pt
fisttpll
sarl
ret
or
repz
push
in
add
adc
cmp
movsl
cmp
dec
mov
or
call
mov
xchg
jle
pop
jmp
xchg
jno
aaa
pop
sbb
push
ljmp
int
lock
cmp
cmp
pusha
aam
and
cmp
pop
xchg
or
cwtl
pop
adc
mov
sub
bound
add
mov
dec
mov
jbe
fbld
cli
jg
test
sbb
movl
xchg
jg
jno
daa
xchg
gs
fs
pop
sub
jae
mov
js
add
pop
push
loopne
cmp
jns
xor
push
adc
lret
je
fwait
outsb
sbb
jg
xor
dec
mov
pop
popf
test
push
pop
into
repnz
push
or
pop
xchg
cmp
cmp
out
loope
pop
inc
insb
mov
sub
bound
cltd
pushf
mov
stos
lods
mov
xchg
daa
or
push
mov
dec
dec
gs
sahf
fwait
jmp
push
sbb
cmpsb
inc
xor
jl
fcoml
sbb
sti
jle
cmp
pop
xchg
hlt
into
in
mov
sbb
fmuls
mov
addr16
sbb
cmp
sub
cs
xchg
arpl
sub
adc
dec
pushl
rol
inc
cmp
jecxz
mov
shll
sahf
ds
fldt
push
push
out
pop
lea
sbb
outsl
insl
mov
bound
adc
js
jnp
push
sti
xchg
mov
neg
hlt
mov
lcall
mov
push
es
test
or
push
fldcw
fstps
popf
fcomps
and
in
or
jp
or
and
lock
movsl
mov
cmpsb
xorb
and
outsb
mov
sahf
or
inc
test
sti
fyl2x
mov
mov
inc
inc
push
mov
push
fxch
push
add
push
mov
aas
xchg
out
adc
push
jb
gs
push
mov
popa
in
iret
push
mov
movsb
jae
or
add
pop
sbb
sbb
sub
test
icebp
ja
pop
adc
sahf
test
out
daa
cmc
out
call
xchg
iret
lds
sahf
cmp
add
enter
mov
xor
cmp
addr16
xchg
mov
pop
sbb
xchg
or
push
call
dec
cwtl
lea
out
mov
rcrl
pusha
fisttpl
push
xchg
xchg
mov
mov
jbe
push
adc
pop
pop
cmpsl
fwait
cs
jl
push
sbb
lods
pusha
fisttpl
add
movsb
xorps
es
test
pop
mov
testl
mov
je
call
in
mov
push
arpl
mov
inc
loop
xchg
notb
cmpl
inc
or
fimull
or
add
repz
pop
mov
leave
xchg
push
sub
les
push
adc
xchg
inc
shrb
cld
pop
xchg
mov
icebp
movsb
push
dec
mov
pop
lock
push
es
pop
cli
stos
mov
jb
rcrb
mov
ret
add
push
stos
dec
xchg
out
mov
mov
bound
jb
sub
test
jecxz
cmp
adc
sub
hlt
push
cltd
mov
sbb
and
fldt
lret
mov
popl
jnp
int
add
add
mov
pop
insb
mov
addb
mov
dec
mov
leave
aad
pusha
pop
enter
into
testb
lds
cmpb
lea
test
mov
push
data16
pop
inc
sbb
imul
std
loopne
aad
xor
jg
leave
add
mov
xor
xor
mov
rol
mov
or
or
pop
add
mov
dec
pusha
imul
in
repnz
and
dec
bound
sbb
add
gs
insb
sbb
xchg
add
xchg
push
push
mov
cmp
mov
pop
mov
sti
inc
inc
sbb
cltd
into
popf
mul
adc
inc
dec
pushf
xor
inc
lock
repz
xchg
sub
dec
stc
push
test
cmp
jns
adc
loop
fucomp
popf
cmp
push
inc
cli
xchg
in
mov
mov
mov
xchg
or
pop
jns
fs
or
stc
sbb
icebp
call
jmp
mov
and
pop
mov
jno
jnp
jno
push
insb
cmpsl
jnp
es
lahf
rcrl
xchg
mov
bound
mov
out
mov
jb
stc
jl
mov
pusha
call
andb
lcall
push
pop
add
loop
pop
jmp
dec
gs
push
xchg
xor
sbb
dec
inc
xchg
ret
or
mov
jae
add
xor
dec
fdivrl
repnz
fwait
push
scas
in
mov
ds
pop
lods
mov
jmp
arpl
inc
hlt
xor
xor
iret
test
push
ljmp
or
push
push
and
or
jne
ret
mov
je
push
mov
repnz
mov
out
adc
dec
dec
repnz
jns
or
outsl
pusha
stos
out
or
popf
lret
imul
push
jmp
cli
and
adc
arpl
lods
test
sub
mov
mov
lcall
out
push
repnz
inc
cmp
adcl
cmp
shll
in
mov
jmp
rcr
xor
repnz
mov
push
pop
lcall
inc
add
mov
cld
sbb
lea
add
mov
pop
or
iret
xor
jle
rcll
cmp
lock
push
shlb
outsl
add
fstp
jbe
out
jno
arpl
jp
insb
out
mov
test
sub
je
jle
cmp
lods
adc
or
jg
mov
imul
int3
xor
dec
mov
mov
loope
adc
lret
and
loope
out
aaa
push
push
data16
xor
out
clc
les
adc
int3
jp
out
xor
addl
fsubrs
gs
cmpsb
cmp
sub
mov
nop
lds
or
sbb
movsb
cmp
mov
cmpsb
push
xchg
xor
jp
pop
xor
cmc
into
and
jne
jbe
pop
test
jnp
add
xor
and
lea
push
sub
ficomps
xchg
adc
imul
and
mov
gs
xor
dec
repz
loope
push
call
adcb
stos
and
into
or
ja,pn
or
mov
xlat
push
int3
daa
in
int
incb
sbb
arpl
mov
cmp
aaa
adc
cmp
xor
sub
cli
sub
inc
mov
repz
mov
ljmp
xor
sub
aaa
sub
lock
daa
sub
lods
ja
cli
add
xlat
daa
fdivl
xchg
cwtl
push
das
xchg
cmpb
leave
cmpsl
mov
mov
leave
jb
adc
lds
aas
inc
out
sub
es
scas
mov
pop
mov
out
scas
clc
add
jne
pop
xchg
movsl
out
push
jo
out
dec
xchg
popf
sub
sbb
lret
int
dec
sub
xchg
cmp
lea
cmp
push
test
add
add
fldl
lock
lret
movsl
aad
loopne
push
dec
insl
mov
rcrl
push
xchg
jp
flds
xor
aam
jne
jno
int3
movsl
jmp
xchg
das
loopne
rcr
xor
cmc
cmp
sub
push
arpl
mov
lea
mov
mov
gs
icebp
loopne
or
addb
xor
rolb
aas
fidivl
rcrb
mov
pop
into
pop
jg
inc
je
inc
cmc
shr
lock
xchg
add
sbb
dec
mov
lods
mov
mov
cld
and
xor
inc
push
inc
pop
cs
mov
and
cmp
mov
in
inc
das
cmp
addr16
out
out
add
lea
lods
aad
cmp
jecxz
pop
sub
dec
dec
scas
mov
push
popf
inc
addr16
das
insb
in
and
jp
icebp
int
inc
adc
pop
push
jmp
scas
xor
xor
and
loop
popf
mov
cwtl
adc
shr
cmc
xchg
loopew
or
jmp
notl
jle
jmp
bound
fs
cmc
in
and
xchg
xchg
inc
push
into
lods
add
dec
or
mov
shll
das
xchg
lock
jnp
pop
add
call
sbb
xchg
data16
arpl
aam
mov
pop
shlb
mov
xchg
in
imull
add
jns
push
rep
in
xchg
sub
sub
push
andb
mov
imul
jecxz
mov
pop
push
inc
arpl
insl
adc
mov
into
push
popl
pop
aaa
sysenter
sti
in
xchg
jl
sbbw
xor
flds
mov
fildll
jo
mov
cmp
ret
dec
adc
or
pop
ja
popf
pop
cli
lea
pushf
outsl
xchg
pop
pop
jge
sub
cmp
push
and
lods
pop
bound
add
cmp
sbb
cld
aad
aaa
jns
in
adc
imul
std
jl
cld
adc
inc
xor
add
mov
enter
cpuid
adc
sub
scas
xchg
and
xchg
adc
push
pop
andb
cmp
out
xor
ljmp
or
mov
inc
sbb
lahf
in
fstpl
int3
sahf
xor
mov
jnp
std
add
sub
mov
icebp
punpcklwd
fldenv
pop
es
xchg
movsl
rcr
push
enter
push
pusha
in
push
pop
dec
and
xlat
test
ret
das
lcall
rol
sbb
pop
jae
add
push
jb
and
mov
addl
int
jp
ljmp
cltd
imul
cmp
icebp
xchg
lahf
sbb
mov
and
add
sbb
and
imul
and
xchg
cmp
add
pop
sbb
icebp
pop
pop
dec
xor
test
out
xchg
cmp
xchg
fwait
shll
jmp
icebp
push
xchg
inc
inc
pusha
mov
out
in
insl
push
scas
aaa
dec
test
dec
outsl
sbb
dec
fstpl
arpl
outsb
jbe
push
xchg
mov
data16
xchg
mov
pusha
aaa
lret
xchg
fimuls
pop
cli
or
push
cmp
repnz
aas
fists
push
and
insb
fwait
mov
ljmp
insl
sbb
out
push
dec
inc
or
mov
xadd
cltd
jp
mov
and
stc
cs
lods
ret
cmp
sub
scas
sbb
mov
push
aas
call
repz
adc
dec
inc
lods
sub
push
pop
xchg
aas
outsb
pop
cmp
push
or
jge
inc
jnp
jnp
jb
shll
inc
sti
xchg
cmp
test
jno
das
mov
stos
mov
and
popf
jl
outsl
dec
insb
ret
iret
out
mov
and
rcrl
or
lock
pop
cmpsb
movsb
repnz
in
es
sbb
mov
mov
aaa
fmul
insb
scas
mov
mov
es
fadds
fistl
mov
inc
cld
cltd
sub
adcl
in
xor
fbstp
sub
mov
insl
push
jge
and
hlt
stos
xchg
test
xchg
mov
outsl
test
test
mov
aam
mov
or
in
int3
add
lods
xchg
scas
mov
mov
pushf
cmpsb
mov
sub
frstor
mov
jg
cwtl
ljmp
bndstx
pop
mov
push
ja
dec
rolb
in
xor
hlt
cmp
lock
mov
jmp
push
scas
fisttpl
data16
inc
test
pop
push
pop
pop
lcall
adc
mov
xchg
push
push
mov
das
pop
and
fsts
test
inc
adc
shll
lahf
stos
push
insb
loopne
push
push
lea
mov
fsubl
insl
jno
sub
push
fsub
ror
int
stos
enter
int
sub
sbb
mov
pop
sub
inc
mov
int
xchg
pop
lods
jbe
dec
xchg
and
adc
and
cmp
and
pop
scas
add
iret
cld
xor
jl
add
cltd
in
scas
lcall
enter
lods
sub
dec
mov
push
mov
dec
xlat
add
or
fdivp
call
cld
pop
cmp
addr16
xchg
pushf
mov
jne
and
jp
hlt
adc
lods
mov
das
mov
push
mov
stos
jae
xchg
pop
pop
icebp
pop
test
jmp
dec
mov
sbb
xchg
int
in
mov
fistl
daa
and
jnp
mov
jmp
jbe
inc
shrl
cwtl
scas
and
mov
add
or
icebp
adc
roll
pop
repz
aam
cs
add
push
inc
sahf
and
imul
and
sbb
and
pop
jecxz
cwtl
xor
fstpl
outsb
jo
sub
iret
rorl
pop
mov
js
adc
idiv
pop
cmp
and
call
xchg
aam
dec
div
mov
mov
adc
mov
xchg
repnz
int3
adc
mov
inc
stos
out
cmpb
mov
mov
sub
subl
sub
inc
cmp
pop
push
iret
xor
rcl
sub
sub
pushf
mov
push
sub
movsb
or
stc
xlat
pop
pop
lret
lea
push
sbb
mov
lock
icebp
mov
ret
push
pop
xlat
arpl
push
es
cltd
adc
loope
dec
mov
int3
aad
cwtl
jge
pop
and
or
push
std
aad
mov
sar
xchg
fucomp
in
xchg
fstps
mov
xchg
pop
popf
push
mov
lret
addr16
jbe
aam
push
loop
std
sbbl
call
cmpsl
in
lcall
xchg
ja
sbb
xorb
push
icebp
pusha
mov
xchg
outsl
sub
sbb
ret
jns
loopne
dec
popl
mov
out
out
iret
mov
xchg
fbld
cli
loop
imul
push
mov
pop
aad
jge
add
mull
cld
adc
add
sub
pop
ja
idivl
int
push
nop
rcll
mov
mov
add
sub
and
and
test
xor
hlt
adc
dec
mov
daa
out
push
sbb
imul
repnz
inc
mov
jg
sbb
adc
les
aas
xor
repnz
out
mov
shlb
nop
adc
mov
jbe
inc
nop
hlt
push
and
inc
inc
pop
jo
in
cmp
test
and
mov
add
aas
mov
ret
dec
pop
std
push
mov
mov
xlat
shll
and
test
xchg
jne
outsl
lods
fisubs
and
pushl
movsb
imul
push
cmp
pop
in
movsb
push
push
cmp
xor
sub
sbb
push
jb
pop
cli
mov
sbb
xor
ret
or
fidivl
ds
add
push
mov
dec
jle
pop
cmp
loop
leave
xor
or
inc
aaa
mov
sub
push
cwtl
xor
xchg
lret
push
out
jle
add
mov
rolb
dec
mov
mov
les
std
xor
pop
rol
sahf
or
int3
fcomps
fsub
inc
outsb
mov
jnp
lret
mov
cmp
lcall
out
mov
pop
aad
sub
adc
push
pop
push
and
jnp
rol
je
das
and
sbb
adc
fcmovbe
fnsave
fsts
mov
cmp
mov
fildl
push
fbstp
or
add
push
push
ds
sbb
mov
popw
sub
gs
push
stc
lock
std
cmc
mov
dec
addr16
inc
popw
mov
adc
sbb
cmpsb
pushf
cmp
push
test
dec
jae
subl
and
lock
inc
cld
call
jno
das
pop
pushf
jg
and
jno
pushf
dec
ja
and
leave
jnp
pop
ljmp
add
scas
mov
adc
cmp
cwtl
sbb
fimull
xchg
xchg
push
mov
inc
ret
ja
clc
cmp
mov
lods
das
or
lods
insb
das
subl
stc
cmp
cmp
mov
fsubs
mov
sbb
out
mov
xchg
add
adc
lods
sub
addl
aas
lds
rcrl
icebp
and
pop
dec
fwait
sub
jbe,pt
sbb
cmpsl
cmpsl
stos
cmp
jmp
lea
mov
clc
sbb
xor
addl
stc
jle
lea
inc
push
jmp
cmp
mov
xor
push
jmp
push
add
out
pushf
pop
pop
mov
inc
loopne
jbe
jns
es
cmc
dec
jmp
pop
jmp
add
mov
xchg
idivl
xchg
jmp
adc
mov
xchg
push
test
mov
sbb
int
incb
pusha
popa
rorb
test
js
sub
pop
inc
sub
scas
les
lods
movsb
mov
loope
add
faddp
push
test
cmp
out
push
jb
sub
and
mov
decb
sbbl
pop
and
xorb
jecxz
cmp
mov
push
mov
js
mov
sbb
ret
sbb
sahf
dec
add
mov
pop
ror
push
sbb
jmp
sub
add
jo
sbb
ja
sbb
cmpsb
out
inc
dec
popa
cmp
pop
test
push
add
cwtl
inc
in
adc
popa
add
xor
das
sahf
push
dec
cltd
fists
mov
jno
dec
cwtl
ds
push
ret
push
into
addr16
cli
fwait
mov
push
xor
sti
in
arpl
dec
pop
mov
nop
out
jp
jo
cs
xchg
or
sbb
xchg
lret
fwait
and
xchg
add
idiv
test
mov
gs
or
aam
bound
jg
and
in
mov
outsl
push
push
dec
mov
xor
jle
jg
fsubrs
mov
sbb
sbb
jl
aad
push
sti
lcall
jmp
xor
sub
jb
lds
inc
xor
cwtl
cmc
cmp
inc
mov
js
scas
std
xor
int
mov
and
inc
scas
jnp
add
sahf
or
scas
repnz
mov
sbb
sbb
add
lret
mov
adc
neg
std
test
sbb
and
daa
cmp
xchg
cmpl
and
sarl
xlat
jbe
jmp
xchg
mov
movsb
lods
mov
xchg
out
sbb
pop
push
pop
inc
xchg
aam
mov
notl
out
out
int3
xchg
add
mov
push
cmp
daa
stos
in
xchg
addl
or
add
cmp
aad
clc
decb
mov
dec
xchg
add
xor
nop
and
adc
cmp
scas
cld
lret
sub
or
clc
sbb
mov
pop
jae
or
add
gs
lret
les
and
push
popf
cmp
dec
cmp
jecxz
push
inc
jnp
push
or
sub
or
inc
outsb
push
sti
fs
std
ja
and
inc
adc
jl
std
pop
mov
neg
aam
push
daa
insl
sti
fldcw
sahf
test
sub
jecxz
mov
pushf
sbb
and
sub
testl
and
lods
inc
dec
ds
push
test
adc
xchg
movsl
or
pop
bound
mov
push
xchg
jne
jnp
adc
mov
jbe
mov
pushf
lgs
fisttpl
sbb
sub
das
pop
mov
das
addr16
std
leave
aaa
adc
mov
in
sub
popa
xchg
fsubp
loop
jg
push
sbb
add
test
push
pop
push
xchg
pop
mov
jmp
add
mov
dec
scas
clc
cmp
jo
fidivrl
dec
xlat
jb
add
adc
mov
sbb
mov
mov
push
fs
adc
xchg
das
outsl
add
loopne
dec
cmp
mov
xchg
pop
mov
xrelease
lods
dec
aam
ret
pusha
cmc
cmpsb
lods
xchg
leave
shrl
add
fistpll
add
out
idivl
jbe
mov
imul
call
iret
std
adc
pushf
mov
mov
mov
loop
test
push
cmp
in
lock
leave
jmp
cmp
sahf
pop
pop
xorl
out
push
in
cmpsl
mov
aaa
iret
shlb
adc
movsb
ss
out
outsb
leave
mov
inc
jmp
push
sbb
mov
mov
and
xor
into
mov
mov
sub
test
andl
cmp
flds
dec
mov
shl
add
call
fdivl
or
sti
mov
loopne
movsl
add
lahf
imul
icebp
dec
inc
dec
pop
sarl
bound
add
hlt
lcall
xor
call
mov
jle
adc
lds
cmp
xor
popf
aaa
aas
mov
sbb
pop
push
mov
outsl
inc
stc
xor
data16
lret
inc
sti
test
and
fwait
mov
inc
cwtl
shll
clc
cld
imul
ss
adc
out
add
cli
inc
xor
inc
dec
hlt
loopne
cmp
adc
jnp
in
popa
shr
xor
or
sub
jle
outsl
adc
sbb
mov
mov
rol
mov
push
inc
mov
sbb
inc
or
sub
cmpsl
inc
ja
jp
ret
addr16
pop
fcomps
add
cmpsb
push
ret
in
lds
dec
outsl
dec
inc
sbb
dec
adcl
shl
or
cld
rcrb
cltd
gs
inc
call
cs
push
stos
pop
xor
or
inc
push
xor
xor
sub
push
repnz
cltd
cmp
push
ds
cmp
sahf
stc
xlat
movsl
xor
inc
xchg
rcrb
cmpsl
mov
ret
pop
test
inc
push
lret
mov
jbe
loope,pt
inc
dec
loopne
test
repnz
mov
mov
enter
sarb
into
jo
insb
pop
add
arpl
inc
fldcw
out
adc
and
inc
sub
xor
dec
mov
sub
pop
cmpsl
jne
jae
jp
js
out
xor
jle
cltd
sti
and
mov
testl
loopne
fs
pop
clc
leave
mov
dec
sbbl
sub
fistps
adc
xor
add
movsb
mov
scas
push
dec
and
push
mov
sahf
mov
pop
mov
jae
xor
and
pop
push
or
jp
or
lods
and
arpl
movsl
jns
popa
stos
add
xchg
xchg
stc
push
sub
push
add
pop
es
mov
fdivrl
stc
movsb
jp
rol
sbb
aam
fnstsw
bound
xchg
add
dec
cmp
inc
push
loop
outsl
add
xchg
mov
in
arpl
xchg
lret
sbb
mov
in
aad
gs
dec
jae
or
movsb
shl
les
int3
mov
prefetch
fs
aaa
mov
sbb
or
aas
or
xor
test
sti
shlb
lcall
scas
in
sti
sbb
dec
or
mov
sbb
adc
das
dec
out
insl
mov
nop
int3
leave
movsl
pop
addr16
popf
add
mov
jecxz
inc
jbe
es
add
push
out
push
sbb
add
sbb
jnp
push
daa
pop
je
stos
fwait
xor
or
mov
cltd
je
push
and
cmp
subl
into
jp
and
sbb
daa
cmpsl
mov
in
sub
into
lods
sbb
ds
mov
or
and
xchg
jge
scas
mov
out
dec
xor
mov
lret
cmp
jge
fcmovnu
popa
add
ja
roll
sbb
dec
jmp
es
in
jge
mov
mov
lahf
fidivs
sbb
adc
xchg
mov
bnd
jge
pop
es
xor
std
fiadds
js
xchg
aaa
addr16
je
addb
in
addr16
movsl
pop
mov
popf
and
adc
mov
jo
fiadds
pop
std
fistl
cwtl
cld
int3
lock
mov
jl,pn
or
imul
loope
insl
mov
outsl
scas
adc
int3
mov
cwtl
cmp
push
mov
mov
outsl
imul
xchg
idiv
pop
mov
adc
push
lock
in
xchg
add
xor
or
push
jmp
inc
jmp
in
cmp
or
das
or
mov
pop
clc
push
incb
imul
lods
lahf
outsb
push
xor
add
lods
xchg
pop
loope
mov
aad
xchg
fistl
adc
ljmp
lock
fdivrl
mov
fstpl
orb
mov
fwait
cmp
jbe
jge
test
dec
sti
mov
sub
in
add
mov
cltd
in
xchg
das
stc
push
imul
xchg
popa
mov
mov
cltd
cmpsb
mov
fwait
in
push
aas
fsts
sbb
pop
dec
push
aad
and
adc
loope
sub
test
aam
fnstsw
and
adc
pushf
scas
int
lahf
fldt
lock
jp
sarb
je
pop
pop
add
call
sbb
cli
push
push
push
mul
mov
mov
push
cmpsb
je
fs
int3
fptan
in
arpl
mov
add
dec
dec
push
adc
leave
mov
ja
scas
inc
int
out
push
ljmp
in
lcall
into
mov
mov
or
bound
mov
dec
push
nop
adc
pop
sbb
mov
lock
daa
and
test
xorb
sahf
or
push
adc
mov
bound
mov
lahf
sahf
lods
xchg
dec
push
adc
mov
ljmp
inc
insb
movb
jae
xchg
lock
add
and
imul
fwait
gs
jl
pop
xor
out
pop
cmp
cltd
enter
das
lods
adc
and
ljmp
pop
scas
sub
loopne
loop
scas
in
stc
shlb
jno
xor
jne
inc
add
inc
popa
dec
out
mov
mov
dec
in
dec
scas
ficoml
cmc
mov
pop
mov
das
mov
xlat
cmp
vpaddusw
xchg
add
mov
bnd
pop
gs
cmp
std
add
mov
lahf
pop
popf
push
add
mov
gs
in
repz
lock
sahf
lret
mov
addr16
sbb
shlb
cwtl
or
and
mov
imul
sbb
ss
fsubl
hlt
sbb
lock
push
push
fmul
adc
mov
ljmp
ds
std
mov
shll
jns
stos
ret
imul
out
cmp
adc
cmp
je
sbb
outsl
ret
int
ret
mov
xchg
adc
pop
std
dec
jp
outsl
pop
test
mov
sbb
lahf
cmp
xacquire
mov
or
pop
sub
inc
pop
sub
rclb
mov
js
mov
and
dec
popa
jne
fwait
or
jns
lods
stos
pop
xchg
int
jecxz
add
and
aam
ja
cmc
sub
pop
or
pop
repnz
ss
inc
lock
add
push
lcall
fsts
mov
adc
cmp
cltd
xchg
shlb
icebp
mov
pop
push
or
stos
inc
xchg
movsb
xlat
mov
call
cmp
in
daa
stc
jns
fistps
movsl
dec
lock
movsb
inc
clc
mov
nop
mov
andl
stos
mov
push
mov
jbe
cmp
fisubl
inc
mov
push
cmp
cmp
aam
fwait
lcall
jne
rol
cmp
rolb
push
mov
mov
mov
xor
call
loop
in
mov
iret
xchg
imul
stos
in
inc
pop
and
cs
pop
mov
sub
jle
sahf
js
rcl
cld
jns
jo
int3
outsb
sbb
int
sub
stos
lds
bound
aad
mov
pushf
xor
and
shrb
cmp
repnz
mov
inc
in
add
jo
inc
je
xchg
insl
or
popf
cmp
cltd
xchg
pop
jecxz
sub
mov
je
mov
sub
loopne
or
jl
fwait
call
adc
or
mov
lock
pop
pop
ret
xchg
push
aaa
jb
xchg
fwait
decb
shrb
jno
mov
cmp
popa
das
dec
cli
fstl
cmp
popf
mov
mov
call
mov
jbe
rolb
mov
mov
push
sti
mov
sbb
mov
xchg
out
lods
xlat
sbb
fstpl
jp
in
pop
cli
cltd
or
out
lcall
xchg
cs
adc
shrl
xchg
test
inc
data16
int
in
mov
out
mov
mov
sub
into
pop
andl
jecxz
xchg
pushf
pop
shlb
icebp
sub
mov
loope
test
jg
mov
jbe
bound
lahf
js
or
hlt
push
cli
das
lret
cmp
fcmovu
clc
mov
or
ja
bound
jp
jne
lcall
add
jp
inc
and
xor
jge
cmpsl
mov
scas
enter
fwait
add
push
jo
or
orps
push
outsl
xlat
jg
leave
orb
pusha
jge
adc
in
sbb
dec
lahf
or
dec
loopne
lock
stc
ja
or
xchg
inc
mov
test
xor
je
pop
mov
lea
faddp
pop
filds
lahf
push
and
xchg
xor
subl
in
shl
dec
xchg
and
xchg
out
lea
dec
pop
and
push
pop
dec
movsb
xchg
add
outsb
inc
les
aas
sbb
idiv
sub
xchg
clc
mov
sub
pushf
xchg
pop
repnz
xchg
in
xchg
sbb
xor
scas
sub
cmp
xchg
jne
or
push
mov
push
hlt
leave
test
je
lret
sbb
lods
rcrb
std
adc
aaa
out
dec
xchg
cmp
or
mov
aad
mov
lds
mov
fwait
leave
inc
clc
es
inc
mov
mov
cmp
fadds
into
call
sbb
mov
in
sbb
dec
popa
push
ret
push
and
and
mov
lahf
stos
aam
fldt
clc
inc
pop
arpl
jg
fists
adc
mov
and
mov
adc
mov
sbb
mov
push
aas
mov
mov
pop
mov
mov
jne
mov
cmp
dec
imul
pop
dec
sub
pusha
mov
mov
nop
jge
sbb
sub
fistps
mov
xchg
adc
ss
stos
lret
and
loop
cmp
push
inc
fiaddl
jecxz
cmp
lock
aaa
mov
or
mov
sbb
popa
imul
sub
lahf
scas
push
cmp
push
int3
lcall
adc
or
out
push
and
xor
xor
jbe
push
out
mov
test
xor
sbb
xor
or
loop
sti
jbe
inc
xchg
outsl
jo
cmp
out
dec
hlt
push
mov
dec
fidivrs
add
push
xchg
lods
imul
adc
xor
stos
test
mov
mov
out
lret
stos
lea
rcrl
jmp
in
push
arpl
pop
sub
subl
adc
shl
xlat
hlt
imul
xchg
sub
outsb
inc
mov
xchg
into
dec
mov
aam
dec
mov
push
scas
fmuls
mov
mov
sbb
cwtl
jbe
jnp
inc
push
pop
sbb
in
xchg
test
add
faddl
xor
andb
insl
push
adc
push
test
mov
inc
inc
popa
xchg
cmp
inc
dec
mov
clc
insb
mov
push
shlb
sbb
sti
jge
adc
push
lret
test
fs
fcompl
mov
jecxz
in
cmp
aaa
inc
push
out
gs
push
bound
dec
mov
mov
lods
pop
xor
fdivr
mov
add
sub
pop
cmp
xlat
xchg
mov
xchg
jae
xchg
fcmove
push
jo
ret
xchg
jge
xlat
cltd
shrb
cld
mov
div
mov
aad
xor
aad
mov
mov
push
cwtl
fiadds
mov
sbb
fmul
xor
xchg
loop
ljmp
sbb
xor
push
cli
jecxz
negb
inc
add
mov
sub
pusha
push
pushf
aas
sbb
jbe
push
jb
aam
out
push
mov
adc
xchg
movsl
jmp
pop
add
lods
mov
xadd
push
sbb
xchg
add
insl
cmpsb
or
int3
inc
in
or
fisubs
push
cmp
inc
jle
mov
movsb
fidivrl
movsl
into
adc
popl
cli
cli
js
sbb
loop
out
add
push
scas
dec
pusha
and
or
jle
cmpl
inc
and
fiadds
sar
xor
iret
pop
stos
pop
pop
dec
jbe
scas
test
pop
mov
jne
push
fcoms
mov
jno
or
lcall
in
mov
int
inc
ja
icebp
sbb
cmp
adc
es
loope
iret
push
or
sahf
pop
fistpl
mov
push
dec
or
stos
popa
and
add
mov
add
inc
or
addb
push
push
xorb
fiaddl
xlat
mov
mov
clc
and
sub
aas
subl
cmc
ficompl
xor
scas
icebp
jle
insb
adc
push
lods
dec
into
adc
scas
loopne
mov
lret
mov
shrb
iret
and
xor
cli
fs
scas
adc
repz
in
inc
jge
push
stos
mov
pushf
push
jb
insl
xchg
inc
push
fcomip
xlat
out
push
lock
sarl
addr16
pop
xor
push
aad
inc
xorl
mov
jle
mov
js
adc
popf
cmp
fsubrl
mov
dec
divb
in
cmpsl
js
sbb
movsl
mov
push
pop
test
call
inc
rcrl
flds
lock
stos
movsl
mov
pop
rorl
adc
es
jp
xchg
inc
pushf
lret
stos
jle
sbb
aad
lret
or
sarl
pushf
mov
xchg
daa
sahf
test
movsl
sbb
and
mov
pop
mov
loope
xchg
jnp
push
inc
mulps
aas
fs
push
push
dec
sbb
xchg
add
xor
call
pop
sub
and
clc
pop
sub
and
jecxz
cmpsb
jno
xchg
sub
xlat
lcall
stos
jge
and
cld
pop
clc
aas
dec
scas
ds
and
xchg
negl
stos
cltd
and
cmp
shrb
push
push
out
sub
pop
ja
xor
addl
xor
pop
sbb
or
push
push
push
and
divl
sbb
jb
cmp
jl
push
fistl
fs
int
dec
das
pop
sub
sti
adc
xchg
pop
outsl
popf
mov
popa
xchg
das
push
jmp
sub
clc
gs
xchg
dec
shl
in
loop
xor
pop
cld
push
test
imul
and
fdivrs
pusha
imull
pop
fnclex
stos
rcpps
mov
cmp
loope
loope
clc
mov
lret
jg
int3
loop
ret
pop
xchg
or
mov
pop
pop
mov
jecxz
jp
mov
sub
sub
jns
data16
out
imul
jl
adc
repnz
push
adc
and
test
push
out
shrl
shr
push
push
mov
stos
add
enter
js
jno
xor
push
add
loop
mov
lret
sub
mov
bound
mov
les
ret
xchg
loope
jecxz
pop
pop
popf
mov
fdivs
cmc
aaa
xlat
ror
jbe
adc
bound
pop
mov
outsl
xor
mov
out
mov
xor
mov
push
out
xchg
xlat
shll
incb
loop
jmp
fdivl
inc
and
leave
or
popa
sti
data16
divb
or
cmp
movsl
iret
cmp
bound
pop
insb
push
add
xlat
sbb
xchg
movsl
dec
mov
dec
icebp
mov
cmp
ss
add
xchg
jecxz
fxch
push
imul
push
push
sbb
addr16
scas
lret
mov
sub
cmp
or
popa
add
dec
aas
sub
loope
push
add
dec
sbb
gs
add
or
dec
push
mov
pop
dec
add
mov
scas
sub
add
xchg
das
loope
pop
mov
and
xchg
js
push
out
or
xchg
daa
pop
lret
mov
mov
out
push
hlt
das
jnp
xchg
inc
rolb
jnp
or
mov
jbe
inc
adc
int3
je
rorb
xchg
xchg
test
rcl
mov
cmp
sub
xchg
insl
pusha
or
mov
add
xchg
dec
add
call
mov
cmp
arpl
mov
or
adc
or
shlb
mov
xor
cli
into
xchg
dec
jmp
pop
fisubrl
out
and
mov
out
jecxz
faddl
mov
dec
dec
add
cs
mov
lods
repnz
bound
mov
mov
out
faddl
pop
mov
dec
hlt
pop
mov
or
pop
jg
mov
je
test
movsl
sahf
aad
bound
test
jno
loopne
jbe
frstor
mov
cmp
cmc
addl
push
iret
xchg
and
movsl
or
mov
dec
mov
push
int3
fsubrs
in
xchg
lods
push
scas
mov
loop
xor
mov
imulb
dec
enter
stos
ret
call
loop
mov
sbb
js
pop
aam
lret
je
jp
and
cs
aad
xchg
ret
shll
mov
push
nop
sbb
leave
inc
rcrb
insw
pop
jne
shrl
sub
or
mov
add
inc
andb
rorl
mulb
jmp
hlt
sbb
add
mov
xchg
xchg
xor
loop
add
roll
xor
mov
enter
pop
lock
jb
cmp
sbb
insb
cwtl
dec
pop
xchg
ds
lret
aaa
js
adc
push
out
pop
outsl
adc
iret
push
mov
or
data16
dec
pop
push
movsl
pushl
dec
pop
lock
repz
push
shrb
push
add
cli
cmpsb
dec
sub
ret
sbb
jle
dec
pusha
cmp
adc
rclb
ja
outsl
and
std
int3
cmp
inc
push
in
cltd
mov
sub
js
and
mov
add
scas
push
daa
out
add
lret
jnp
mov
scas
fidivrs
cmp
loope
ret
loop
xchg
sub
xchg
mov
int
daa
aad
mov
add
xchg
mov
lahf
loopne
in
ficoml
sahf
in
insl
push
xchg
or
je
in
sbb
push
fsubrs
sub
lock
jl
jl
mov
test
pop
push
cmp
xchg
sbb
cs
pop
adc
mov
bound
add
jns
jle
xchg
fidivl
ret
push
out
je
jo
jmp
mov
mov
jmp
lods
mov
jge
dec
sub
sarb
xor
mov
rdpmc
sbb
jns
out
sbb
xor
cmp
xchg
or
xlat
adc
popf
jge
pop
mov
pop
cmpsb
add
mov
stc
inc
shlb
push
xor
cmpsb
or
sbb
gs
pop
ret
out
repnz
xor
inc
test
mov
data16
cld
cmp
or
jnp
fsubr
jo
jecxz
imul
sub
repnz
sahf
pop
fbstp
pushf
or
inc
jge,pt
ret
pushf
js
aas
or
in
jo
insb
and
pusha
ret
jge
sub
cli
mov
mov
bound
imulb
arpl
jae
xor
in
mov
xor
dec
or
int3
in
sar
insb
xchg
push
jns
cli
dec
sarl
fs
lret
dec
xor
xchg
scas
inc
mov
xacquire
xchg
inc
mov
push
push
mov
sbb
jns
sbb
sbb
xor
insb
and
lods
mov
std
in
lret
and
mov
mov
xchg
cmpsb
pop
lret
fidivl
cwtl
mov
pop
fisttpl
insl
xor
and
or
pop
add
out
dec
xor
pop
mov
pop
xor
scas
outsl
add
cmp
xor
jl
stos
mov
cltd
movsl
popl
pop
cmp
add
pop
mov
sti
iret
dec
and
test
sbb
popf
push
xor
icebp
pop
pop
push
cmp
jnp
adc
loop
sub
fimull
out
pop
call
adc
sub
rorb
shlb
push
pushf
loopne
sub
lahf
test
clc
shlb
orb
push
pop
cmpsb
mov
xchg
fsts
ss
sub
test
addr16
mov
push
pop
sbb
lcall
push
push
mov
repz
lahf
sti
cmp
jge
cmpsb
push
std
ss
and
lahf
push
loopne
adcl
push
cmpsb
bound
cwtl
or
mov
add
cmp
cmp
push
push
xlat
pop
xchg
or
fwait
or
jle
inc
sbb
insb
push
mov
push
popa
test
cmp
push
rcrb
gs
sti
stos
pusha
ds
dec
inc
fsubs
adc
pop
jbe
dec
rcrl
fmul
and
outsb
pop
pop
cmpsl
jne
xor
jbe
lahf
or
sub
push
xor
icebp
push
fcom
js
mov
ss
std
xor
push
inc
xchg
and
sub
cltd
pop
sub
dec
std
xchg
dec
pop
inc
or
mov
call
icebp
ret
xorl
xchg
pop
add
je
mov
and
mov
ds
xchg
test
sbb
les
mov
pop
xor
divl
pop
xchg
fsts
shr
mov
sub
mov
lahf
sbb
mov
mov
mov
xorl
clc
jge
or
pushf
mov
add
jecxz
inc
leave
daa
lods
pop
fbld
cmp
jp
pop
xchg
xchg
mov
mov
cmp
cmp
jbe
push
fnsave
divb
dec
adc
loope
mov
sbb
jmp
xor
lcall
xchg
jbe
cmc
mov
shlb
decb
pop
lahf
icebp
mov
mov
mov
pushf
cld
je
pop
mov
pop
gs
and
xor
bound
je
test
dec
inc
push
push
das
inc
leave
popf
pop
jb
in
repz
jge
adc
dec
dec
sbbb
sub
push
fldcw
xchg
push
shlb
mov
roll
test
push
push
jecxz
in
xchg
cld
jg
in
bound
in
xor
scas
mov
pop
cld
iret
xor
negb
xor
inc
imul
dec
dec
inc
xorl
negb
fwait
mov
mov
push
adc
rcl
mov
dec
inc
test
mov
les
sbb
sahf
hlt
pop
popf
jge
pop
in
es
scas
fcmovbe
lods
jnp
arpl
ja
mov
inc
into
mov
loop
push
push
push
cs
xchg
push
pop
cmp
push
sti
jne
test
xor
mov
std
inc
lcall
std
leave
mov
pop
lods
sub
rol
icebp
pop
test
int3
mov
jnp
test
mov
xchg
sub
xchg
lcall
sub
push
xchg
push
cmc
mov
inc
inc
js
jp
sahf
pop
add
addr16
jae
cltd
out
cwtl
loopne
filds
stos
fcomi
adc
push
pop
mov
dec
ret
lret
dec
or
daa
pop
leave
fisttpl
test
fistl
out
add
aaa
inc
cmpsb
add
ljmp
add
sub
pop
and
cmp
lret
std
sbb
xchg
xor
dec
lret
testl
and
jmp
arpl
inc
or
jmp
int
cli
mov
inc
jmp
push
inc
mov
pop
repz
xor
jmp
fsubrs
and
xor
pusha
mov
cld
jp
fs
mov
stos
imul
ljmp
aaa
sahf
stos
shll
stc
shlb
jne
xor
addb
xchg
stos
sbb
xchg
repz
arpl
jle
push
add
push
hlt
lea
mov
out
pushf
dec
cld
fs
lea
lcall
fnstsw
or
sub
dec
cwtl
xchg
ficomps
pop
fstl
mov
jno
bswap
xor
push
lock
cs
in
mov
sarl
xchg
ret
stc
test
std
ds
lods
dec
push
daa
sbb
dec
ret
xchg
jno
and
xchg
fisttpl
insb
adc
pop
push
fisttps
jmp
jno
repnz
xchg
push
adc
arpl
test
daa
arpl
pop
cmc
jbe
mov
xor
push
push
add
into
cmp
xor
gs
not
jb
dec
test
fnstcw
mov
xchg
ss
pop
in
mov
test
dec
adcb
mov
iret
ja
cmp
shlb
gs
jnp
pushf
js
testl
jge
in
test
lcall
mov
mov
stos
push
xor
or
sub
insb
in
sbb
loop
addr16
cvttps2pi
lock
adc
lds
jmp
stos
mov
jns
xor
leave
ret
mov
and
mov
imul
cmc
and
xchg
mov
lock
mov
pushf
in
add
nop
lock
lahf
sub
inc
loopne
push
test
subl
fcomi
ljmp
ss
sbb
popf
dec
mov
mov
test
inc
mov
imul
and
dec
mov
adcl
ret
push
xor
pop
testl
mov
stos
cmp
mov
mov
mov
cmp
add
push
cmp
inc
xor
out
hlt
xor
jns
arpl
je
sbb
cmpsl
out
outsb
or
andb
outsb
scas
out
in
fpatan
das
cmp
call
jmp
imul
dec
xchg
popf
adc
adc
jnp
or
mov
sbbb
out
mov
rcll
iret
mov
push
xchg
xchg
in
loopne
popa
loopne
mov
and
xor
inc
mov
xor
pop
jg
in
dec
test
stos
movsb
add
out
sbb
lds
mov
pop
fstp
mov
int3
add
dec
scas
cmpsb
inc
lods
int
int
mov
shll
cld
lea
sbb
nop
mov
pop
dec
xchg
jle
xlat
mov
lret
xlat
shll
cwtl
adc
cwtl
push
sbb
adc
in
inc
les
push
push
mov
icebp
jge
cmp
aad
jns
dec
mov
rcrb
outsl
leave
push
mov
out
mov
insb
outsl
xchg
mov
sbb
xchg
dec
les
push
mov
push
aas
int3
fistpll
ret
push
mov
or
mov
test
pop
je
mov
aas
lock
loop
incb
push
cmp
sbb
iret
lahf
divl
jnp
idivb
bound
inc
mov
push
and
hlt
dec
push
mov
sbb
je
lcall
pop
lret
dec
jge
inc
js
cld
mov
dec
push
fidivrs
dec
aaa
xchg
mov
mov
mov
iret
pop
lea
push
enter
or
mov
fwait
pop
lds
mov
std
or
jle
jg
add
dec
ret
ljmp
lock
push
cmpsb
mov
or
mov
adc
mov
xchg
mov
inc
push
push
mov
mov
lock
dec
insb
scas
lds
sarl
cli
rcrl
shrl
push
sub
jg
mov
cld
repz
je
sub
pop
mov
and
dec
mov
push
sub
jne
cmp
adc
fcom
xchg
adcb
xchg
sbb
mov
mov
daa
and
jl
cmp
mov
dec
xor
cmp
mov
pandn
and
scas
push
fucomp
roll
sbb
sub
cs
lret
lret
or
mov
clc
cli
push
bound
insl
inc
adc
adc
sbb
lods
push
in
in
push
cli
movsb
ljmp
dec
mov
and
loope
dec
mov
bound
fldt
sahf
fildll
pop
lret
mov
gs
jnp
cli
fcoml
mov
cmp
jle
shll
mov
mov
cli
lea
mov
mov
add
jmp
aas
jmp
jg
add
adc
rcrl
jno
lds
icebp
add
mov
fidivl
leave
adc
lret
push
add
xor
jb
inc
and
push
sub
pushf
rcll
xor
cld
fwait
jne
and
scas
mov
fld
mov
out
out
ja
xor
out
sbb
inc
push
sub
dec
not
or
inc
movsb
and
fwait
xchg
jnp
call
xor
dec
leave
hlt
pop
stos
outsb
repz
mov
aas
lods
imul
xor
xchg
fstl
jle
movsb
mov
xchg
xlat
sbb
test
mov
mov
in
cwtl
jns
mov
jp
dec
jae
sbb
mov
arpl
les
inc
ja
cmp
aaa
insl
inc
movsl
push
popa
adc
xor
in
add
shlb
sti
xchg
sub
push
out
cmp
in
push
aam
xchg
sbb
testl
fs
sub
ret
jmp
daa
mov
scas
movsl
xor
andb
xchg
mov
test
cmp
arpl
dec
fidivs
jno
in
mov
mov
adc
adc
lret
das
and
mov
jo
inc
shll
xor
or
inc
adc
data16
cmp
cmpsl
adc
xchg
rol
mov
xlat
popf
daa
loop
lock
loope
iret
imul
pop
in
mov
sub
pop
sub
call
xchg
fildl
inc
pop
mov
adc
dec
mov
sbb
add
icebp
fisttpll
movsb
rolb
xchg
dec
add
scas
mov
xlat
xchg
pushf
mov
cmp
cli
nop
lcall
inc
into
inc
mov
fistpll
lea
daa
cld
icebp
or
movsb
lret
adc
sbb
or
inc
mov
sbb
hlt
ficomps
push
jp
add
xor
pop
jle
pusha
aam
hlt
inc
clc
ret
cmpsl
out
rclb
das
imul
outsl
jb
jecxz
inc
testl
push
jecxz
daa
mov
sbb
movsb
pop
push
sahf
sbb
jb
in
pop
jl
inc
push
in
aas
mov
mov
cmp
jne
jp
imul
aaa
xor
mov
cltd
jb
loope
cmpsb
sbb
push
push
cmp
and
in
lret
jno
sbb
mov
popf
iret
out
dec
jns
aam
mov
stos
dec
cmc
daa
and
jae
or
sub
rcll
pop
mov
push
mov
push
sbb
lock
and
xchg
sub
jg
push
xchg
adc
mov
mov
clc
test
xlat
mov
not
xchg
or
mov
into
inc
cmp
adc
out
fldcw
sub
arpl
mov
jg
mov
cmpsb
mov
pop
mov
xor
mov
jne
lock
daa
shrb
mov
ret
jmp
dec
scas
pop
push
sbb
test
pop
pop
lea
xor
add
imul
daa
add
cs
in
int3
xchg
xor
and
pop
cmp
mov
mov
mov
dec
iret
mov
add
arpl
jmp
cli
xchg
mov
mov
inc
je
loop
push
daa
add
add
js
push
dec
scas
inc
dec
add
push
imul
std
ret
data16
cli
xchg
fdivrs
adc
test
adc
mov
push
fsubrs
adc
ljmp
push
add
and
mov
mull
xlat
adc
addr16
std
dec
xchg
xchg
iret
sbb
dec
cmpsl
stc
xchg
into
sub
mov
sub
push
add
iret
iret
fwait
lds
sub
sbb
dec
addr16
movsb
xchg
lcall
fmull
and
inc
stos
lcall
js
shr
out
and
lds
or
dec
fsubs
fldl
dec
add
jecxz
and
sbb
repnz
int3
fwait
mov
aaa
jns
sysret
and
loopne
mov
mov
mov
add
aaa
pop
mov
xchg
scas
aaa
sub
out
mov
filds
cmp
int3
lea
xor
or
mov
lock
jge
gs
or
sbb
mov
je
sbb
mov
test
add
lock
clc
cmp
mov
lahf
jmp
popa
cmpsb
mov
push
pop
mov
jbe
pop
pop
cli
fstps
xor
push
int
and
xor
lods
xor
addb
out
dec
or
and
test
jno
fwait
les
and
jo
and
icebp
sbb
fldenv
push
pop
jle
adc
jmp
insl
andl
push
or
xchg
pop
mov
loop
aad
mov
sarl
les
push
pop
inc
leave
xlat
xor
cltd
mov
cs
lret
xor
dec
in
sti
push
or
pop
testl
cmp
pop
je
in
mov
js
sbb
fdiv
sti
gs
hlt
mov
pop
addr16
mov
push
sub
enter
inc
in
outsl
rol
dec
sbb
or
add
mov
xchg
jne
cmp
bound
addr16
pop
lods
enter
adc
addr16
sub
jbe
pop
popa
addl
fldenv
push
int3
dec
scas
xor
xchg
out
mov
repz
popf
inc
je
leave
pop
je
fnstcw
enter
jb
jge
pop
lock
mov
int3
in
dec
hlt
mov
adc
adc
mov
movsl
jb
daa
adc
cmp
inc
test
mov
out
roll
jb
fstl
sbb
push
jmp
cmp
push
inc
xor
sbb
jo
popf
js
cmp
enter
mov
addr16
iret
aaa
bound
fldl
into
cwtl
pop
cmc
inc
das
hlt
push
pop
pusha
xor
and
shlb
mov
lahf
data16
daa
int3
xchg
fistpll
mov
hlt
mov
sbb
push
hlt
pop
sub
pop
cltd
xlat
shlb
int
sub
pop
in
xor
clc
push
pop
lods
mov
in
incl
sub
push
dec
iret
sub
lds
cmp
push
mov
int3
jmp
inc
xchg
divb
call
push
lds
jg
xor
lahf
inc
dec
stos
sbb
xchg
mov
cwtl
in
jb
or
stos
shrb
mov
daa
mov
faddl
popf
aaa
inc
push
mov
jmp
jle
icebp
cmp
int3
inc
sahf
clc
cmp
roll
or
ds
imul
add
enter
outsb
xchg
das
or
mov
dec
mov
outsb
push
lds
into
movsl
fsub
out
pusha
icebp
xchg
dec
leave
jo
sbb
aad
xchg
xor
jg
sbb
mov
pop
addr16
scas
popa
out
test
or
sub
iret
jg
xchg
ds
insb
mov
rcrl
scas
in
inc
and
push
clc
dec
shll
pop
fisubl
sarl
pushf
or
or
daa
mov
das
mov
xor
pushf
mov
fdivr
jne
test
and
adc
jno
idivl
mov
mov
cmpl
xchg
shlb
imul
mov
ljmp
fdiv
push
cmpsl
stc
xchg
dec
sub
sti
jns
std
pop
iret
mov
push
popa
mov
jl
stos
sbb
hlt
in
sbb
sbb
movsl
inc
push
sbb
push
jge
and
and
mulb
sti
lret
es
push
pop
and
popa
adc
mov
jmp
jl
xchg
es
arpl
nop
or
sbbl
hlt
ljmp
loope
test
cmp
mov
fisubs
in
call
sahf
roll
jno
fcomp
aam
daa
leave
mov
xor
add
xor
mov
aaa
pop
dec
pop
cmp
fst
xchg
lock
push
cld
sbb
movsl
jnp
push
mov
test
popf
jbe
sub
insb
fcomip
movsl
dec
jb
cmc
mov
daa
int3
jnp
and
mov
pop
mov
aas
jl
fildll
fwait
mov
test
fdivl
xchg
jg
jg
int
add
xchg
fs
ror
or
movsb
mov
imul
popa
scas
clc
jle
lods
cmp
xor
push
push
inc
test
shlb
push
pop
push
or
clc
fcompl
push
jle
movsl
and
xor
mov
sub
ja
jb
mov
mov
mov
pop
xor
in
or
add
jg
fst
sub
mov
aaa
cmc
mov
mov
andb
cmpsb
leave
rep
ret
inc
xor
dec
cld
ja
cmp
fisttpl
aam
dec
xchg
movsl
lcall
ja
push
dec
push
daa
dec
aas
ja
jae
mov
sbb
ljmp
pushl
sbb
roll
sub
jns
arpl
enter
pop
pop
addb
cmpxchg
inc
mov
mov
jne
mov
fadd
repz
mov
add
adc
or
cltd
and
or
mov
das
or
add
or
decb
cmp
and
xorb
nop
scas
dec
add
dec
pop
sti
mov
call
pop
push
icebp
faddl
arpl
mov
mov
stc
and
insl
testl
test
inc
jne
push
test
xchg
subb
sub
faddl
push
dec
push
ss
mov
out
in
inc
ss
jmp
mov
btc
test
imul
push
xchg
pop
cmp
pop
xchg
in
scas
sarb
mov
enter
dec
adc
dec
cmp
sub
lock
xchg
pop
cmp
ret
pop
test
movsb
jge
sarb
sbb
loope
lret
and
icebp
stc
push
in
fwait
popf
cmp
sub
cmp
xchg
xor
inc
rcll
push
cs
cmp
inc
adc
pop
or
pop
xlat
enter
xchg
mov
sahf
mov
mov
cmp
sbb
pop
int3
mov
adc
sarl
idivl
push
subl
push
ljmp
pop
cmc
cmp
xchg
stos
mov
int3
and
mov
sbb
icebp
out
mov
imul
and
loop
addr16
cmp
sbb
bound
sub
lea
ret
adc
outsb
rolb
loope
mov
xor
lea
mov
popf
jg
popa
in
mov
xchg
dec
pop
fwait
lahf
cmp
out
sub
das
into
cli
lret
inc
movsl
stc
xchg
roll
mov
dec
repnz
ret
rorb
ljmpw
pop
sub
xor
sbb
pop
icebp
xor
xchg
stos
push
push
pop
out
shlb
dec
mov
xor
mov
icebp
ror
call
jmp
loop
lret
in
daa
les
sbb
stos
mov
xchg
add
xlat
xchg
incl
es
and
dec
mov
iret
sub
daa
aaa
push
push
jae
cltd
out
pop
lcall
xchg
iret
stos
push
cli
mov
add
shr
xchg
xchg
pop
ss
push
imul
dec
dec
push
ljmp
xlat
sbb
mov
fwait
inc
aas
test
mov
mov
dec
mov
es
loopne
lock
lds
push
add
ss
out
or
loope
jge
push
out
push
ja
xor
imul
adc
xchg
add
add
xchg
sub
imul
cld
add
out
xor
mov
xor
sub
mov
in
mov
lea
mov
test
sbb
std
fwait
ficoml
rcrl
pop
ficompl
repz
incb
jbe
in
fwait
pop
jle
fistps
push
pop
popf
pop
add
mov
es
inc
jge
cld
je
data16
pop
and
lea
sub
and
push
test
das
xor
adc
int3
cwtl
std
outsb
xchg
and
shl
or
jmp
add
and
scas
shrb
int
mov
xor
out
pop
das
dec
mov
stos
aaa
mov
in
mov
add
movsl
dec
adc
sub
cmp
xchg
dec
les
roll
loope
push
mov
pop
inc
enter
into
inc
test
ret
push
xorb
xor
pop
std
dec
mov
xchg
mov
or
dec
mov
sub
aas
pop
sub
adc
jo
stos
inc
in
addr16
je
and
test
push
xchg
pusha
sahf
sub
push
mov
arpl
clc
add
out
mov
aam
sbb
lock
roll
pop
psraw
jbe
dec
pop
ror
sbb
out
fwait
mov
jle
mov
mov
loope
aaa
mov
xchg
outsb
shlb
ja
push
xor
scas
pop
fsubrl
pop
cmp
gs
xchg
add
cmp
fstpt
mov
jbe
loop
xor
fcmove
loope
add
mull
ret
mov
mov
and
sar
add
or
sarl
and
or
push
fsubrl
push
loop
out
sbb
xchg
cmp
pushl
outsb
fmull
jl
dec
sub
neg
loope
lock
ret
pop
lods
pushf
out
ds
in
cmpb
notl
mov
test
mov
add
jg
fistpl
aam
dec
cs
adc
nop
mov
clc
sbb
scas
rcll
cmp
push
in
sbb
pop
orl
roll
dec
lcall
and
mov
cli
mov
mov
insb
pop
in
and
sub
push
xor
pop
push
lods
nop
test
lret
mov
or
call
rclb
call
inc
jp
in
aas
or
in
or
sbb
sub
adc
mov
fildll
mov
movsl
arpl
sarl
sbb
dec
das
and
das
push
mov
mov
insb
inc
sahf
push
push
int
fldt
mov
popa
cmc
add
lods
sub
mov
repz
shrb
fadd
adc
scas
pop
fdivl
cmpsl
rclb
aad
sub
sub
rclb
js
aad
xchg
sub
jl
je
jo
ret
loope
fmul
shlb
push
xchg
mov
fstpt
add
icebp
lea
int3
xchg
lret
shl
adc
xchg
sbb
int
xchg
add
leave
inc
xor
pop
xor
xor
mull
call
push
sub
push
fadd
pushf
lea
lret
out
cmc
sbb
add
mov
push
inc
sbb
bound
mov
insb
or
int3
mov
mov
outsb
data16
jg
and
dec
or
xor
stos
rorl
pushf
push
sub
sub
ja
iret
push
jp
sub
scas
or
lock
stos
xchg
mov
jne
pop
ja
loop
js
sbb
shlb
mov
and
fwait
xor
pusha
lret
mov
jae
loope
jne
cwtl
frstor
int
cmc
xor
loope
ja
jecxz
mov
xor
test
mov
ror
cmc
add
jnp
cmc
cmp
int
ds
jecxz
std
cmp
rep
xchg
sub
lods
outsl
leave
scas
sub
inc
cmc
cltd
mov
outsl
iret
xlat
fwait
rclb
sbb
enter
shlb
add
adc
into
bound
and
bts
xor
addr16
arpl
xchg
jbe
cmp
adc
jmp
sti
mov
xchg
sub
jl
cmpsl
cli
cli
daa
xor
aas
lods
xor
xchg
aaa
das
mov
inc
cmpsb
mov
lea
mov
pop
fadd
sbb
das
insb
mov
data16
test
mov
out
clc
fstl
inc
or
sub
push
fimull
pop
repz
jns
jl
js
out
cli
push
into
push
arpl
jno
sbb
out
lods
pop
push
pusha
cli
repz
or
push
push
mov
mov
mov
mov
pop
loop
xchg
lock
stc
inc
dec
jg
push
incl
nop
aaa
push
sub
jne
cmp
out
mov
jne
pop
mov
out
push
stos
fstpt
or
xchg
sti
push
adc
in
jmp
mov
data16
scas
imul
repnz
or
cmp
pop
inc
sub
int3
push
mov
inc
fs
stos
outsb
in
pop
push
cwtl
xchg
xor
push
mov
ljmp
dec
or
xchg
mov
scas
cmp
test
dec
pop
ljmp
cmp
pop
in
mov
push
push
mov
dec
xor
in
xor
mov
notb
cmc
mov
dec
and
sub
inc
aad
call
je
mov
sub
not
fcoml
mov
mov
pop
test
data16
aad
out
jg
jb
movsl
std
dec
jmp
inc
pop
sub
enter
push
mov
or
mov
cmpsl
push
pop
popf
andl
xorb
cmp
inc
push
xchg
lock
xor
and
aaa
repnz
adc
das
jle
mov
mov
xor
sahf
xchg
shl
out
jmp
jp
popl
sub
flds
xor
out
push
int3
push
cmp
dec
adc
push
xor
xor
ds
jge
lahf
jp
sarl
adc
or
fmull
pop
shll
stc
ds
pop
pop
sub
lds
aad
es
fcompl
fwait
sbb
imul
in
out
nop
push
decb
rorb
pop
sbb
mov
adc
mov
cmp
pop
mov
xor
xor
push
push
loope
scas
int3
gs
pop
mov
adc
es
test
enter
shlb
jl
jecxz
fucomi
cld
int3
mov
add
inc
jle
pop
jecxz
xor
out
sbb
mov
fcoms
mov
add
loope
cli
sub
push
mov
shll
jp
mov
fcoml
in
cwtl
pop
xlat
pop
mov
mov
mov
push
mov
ret
cld
sarb
aaa
jbe
add
push
outsb
xor
adc
cmpsl
insb
jecxz
push
or
in
shr
sbb
aad
pushf
cli
mov
xchg
mov
scas
cwtl
sub
sub
jmp
stc
mov
sbb
cmpsb
movsl
jmp
or
insb
cmp
lret
jl
dec
sbbl
out
push
add
cltd
out
imul
scas
movsb
gs
push
std
inc
bound
inc
dec
push
idiv
ja
dec
inc
jno
adc
cmp
xchg
leave
lds
int3
ljmp
sti
dec
je
and
cs
jo
cmpsb
inc
adc
pop
push
jecxz
jmp
cmp
and
mov
add
mov
je
sarb
dec
mov
xchg
popf
mov
fnstcw
gs
loop
jno
sub
dec
loopne
cmp
popf
lahf
xchg
iret
cwtl
cmp
sbbb
out
movsl
int
loop
icebp
cs
fbld
dec
inc
dec
cwtl
cmc
mov
adc
ja
js
shll
push
mov
pop
sub
jb
sarl
sub
lods
jb
adc
popf
or
jge
es
sbb
inc
sbb
ds
xchg
aad
mov
in
lcall
ret
lods
pop
dec
mov
inc
std
mov
sbb
sub
push
daa
jns
lahf
out
jle
popf
mov
jae
test
and
dec
jnp
xor
push
and
add
push
ds
repz
mov
mov
pop
push
xchg
adc
push
les
mov
lock
mov
setbe
xor
mov
sub
test
call
rorb
pop
cmc
aas
cld
adc
jecxz
pop
pop
or
xchg
and
test
mov
test
icebp
pop
xchg
xchg
mov
adc
fwait
xor
xor
cmp
cld
sti
push
sub
test
pusha
mov
popf
jmp
lret
mov
ss
mov
push
mov
mov
cltd
cwtl
mov
lret
aam
test
sahf
xor
push
sub
add
mov
imul
negb
jns
addr16
xor
pop
fimuls
outsl
hlt
push
popf
jge
rorl
test
adc
test
out
fld
hlt
pop
jecxz
into
insl
adc
lahf
dec
cmc
movsb
fiadds
pop
push
rcl
roll
clc
in
mov
fnstcw
xor
inc
mov
rcrl
jne
in
mov
and
add
inc
xor
shl
arpl
adc
sti
jmp
and
pop
jecxz
add
jecxz
out
aaa
and
or
movsb
cmp
sub
dec
imul
sub
xor
adc
and
mov
pop
dec
and
push
sbb
push
leave
popf
mov
pop
or
mov
mov
inc
stos
ret
add
sbb
cmpsb
je
data16
mov
int3
fxch
fistpl
pushf
xor
lcall
add
dec
sub
sub
pop
xor
ret
mov
test
arpl
in
pop
icebp
jmp
incb
xchg
jae
popf
lret
scas
subl
mov
xor
out
pop
mov
faddl
andl
xor
test
and
hlt
inc
add
mov
adc
mov
loope
pop
out
ljmp
cmp
inc
pop
mov
cltd
popa
mov
and
cs
push
jl
pop
xchg
jmp
aas
sub
add
jp
add
adc
sub
dec
mov
push
sarb
into
or
xor
in
xchg
and
out
test
and
mov
nop
xor
jle
add
and
stos
fisubl
mov
pop
data16
aaa
scas
repnz
scas
insl
sub
hlt
xor
add
pop
xchg
push
repz
jmp
inc
adc
and
les
mov
mov
mov
enter
and
jo
insl
les
rcpps
push
pop
jge
scas
xor
nop
adc
aad
testl
push
mov
mov
iret
add
adc
jmp
rcrb
daa
test
outsl
mov
push
push
cmp
lret
adc
mov
xchg
cld
cmp
inc
enter
or
jnp
in
test
jge
jbe
jmp
fimull
dec
push
jecxz
mov
mov
movsb
xchg
add
movsb
fnstcw
js
mov
scas
mov
lret
dec
mulb
dec
leave
mov
mov
dec
sub
and
adc
or
negb
mov
inc
dec
mov
push
outsb
push
insb
or
shrl
dec
fmul
pop
vsubps
lock
cltd
out
lea
sub
call
pushl
cmpsb
test
jb
adc
jmp
nop
lret
fcoms
bound
push
mov
inc
pop
inc
test
mov
ret
dec
push
in
nop
ljmp
xchg
pop
and
cmp
popf
sti
loope
test
mov
pop
paddw
push
in
lahf
sbb
xchg
test
add
xchg
push
mov
divl
cmp
inc
inc
icebp
popf
fwait
pop
pop
jae
xor
mov
nop
mov
mov
gs
xorl
xor
sbb
std
lcall
js
lahf
push
push
xchg
mov
nop
ret
jmp
push
xor
jge
and
icebp
or
inc
sbb
ss
sbb
jecxz
loope
outsb
sti
mov
fbstp
andb
mov
dec
xor
xchg
pop
sbb
xchg
inc
fwait
jae
cmp
inc
mov
hlt
pop
sbb
dec
popf
and
xlat
bound
jmp
rcl
and
cmp
sub
icebp
hlt
jae
mov
push
imul
fiadds
dec
out
push
outsl
fprem
dec
mov
outsl
outsl
cmp
jne
test
sub
inc
mov
movsl
and
loop
ficompl
test
jge
stos
push
pop
cmp
mov
int3
adc
lcall
fbld
adc
push
sbb
cmpsl
mov
test
out
rolb
fbstp
jp
push
adc
dec
je
sub
xchg
cmpsl
jns
inc
fs
jne
pusha
test
repnz
jno
push
lahf
leave
inc
out
sti
fwait
movsb
fwait
shlb
es
xor
js
jmp
jo
jns
or
addr16
push
or
fsts
xchg
inc
lahf
imul
xchg
std
lds
in
clc
mov
lret
or
and
mov
mov
movsl
mov
aas
mov
dec
testb
sbb
and
cmp
push
mov
adc
inc
inc
int3
fmul
fsubr
loope
sbb
cmp
mov
mov
push
pop
and
stos
adc
lds
mov
jae
jle
jne
jno
mov
mov
in
and
mov
pop
ds
pop
push
sbb
aaa
es
jle
mov
daa
mov
popf
imul
mov
stc
or
sbb
int3
or
fs
test
xor
out
test
adc
inc
sub
mov
xor
cmp
movsl
xchg
adc
cmp
adc
es
inc
dec
push
lcall
popa
xchg
inc
pop
fstps
add
mov
cwtl
cld
mov
push
in
push
lods
inc
pop
es
loopne
mov
push
fsubl
push
pop
jae
sbb
xchg
push
cwtl
xor
mov
sbb
xlat
rorb
loope
adcl
lret
cwtl
dec
cs
mov
cmp
mov
xchg
add
aaa
jne
push
jbe
test
cltd
inc
sub
cmp
rolb
mov
pop
jge
sahf
xchg
mov
mov
cmp
inc
or
xchg
sbb
cmpsl
lahf
dec
or
stos
gs
insl
push
cwtl
bound
bound
inc
dec
insb
mov
xor
jp
xor
ljmp
push
cmp
jne
aad
ss
push
mov
cmp
mov
mov
inc
pop
insl
xor
dec
icebp
pushf
sti
scas
ret
mov
and
repnz
inc
aad
lret
popf
pop
sub
scas
or
lret
jo
mov
sub
insl
pop
leave
je
lcall
inc
repnz
cmp
lds
mov
mov
shrb
xor
mov
lods
jo
cmc
inc
inc
je
das
mov
aaa
imul
shrl
mov
cmp
inc
dec
push
mov
in
arpl
pop
xchg
add
rolb
xchg
xor
scas
mov
test
mov
push
aam
out
mov
dec
inc
aam
push
or
xchg
shl
xor
in
push
frstpm(287
dec
insl
jnp
push
addr16
or
shll
xor
lods
inc
pop
int3
icebp
dec
rorl
push
test
and
mov
bound
sahf
jae
or
mov
test
mov
mov
cmpsl
push
cmc
add
ja
das
fisttpll
mov
in
add
insl
push
sub
xchg
and
jns
pop
sti
cld
es
adc
movsb
icebp
mov
leave
jne
aam
or
jb
shrl
dec
xchg
movsl
movsl
movsb
clc
out
push
mov
mov
lods
stos
nop
push
inc
sarb
jo
and
sbb
mov
mov
sub
sbb
sbb
popf
flds
jmp
pop
subl
mov
cmp
je
dec
mulb
aas
stos
cwtl
enter
adc
test
mov
cld
ds
sbb
adc
mov
icebp
xchg
push
lods
test
mov
mov
mov
add
cs
and
call
out
jo
inc
inc
xchg
jle
and
lret
fdivs
cmp
jecxz
push
mov
gs
add
cmp
pop
sub
sbb
cmp
sbb
adc
jno
cwtl
push
sub
fiadds
outsb
loop
stos
push
repz
sahf
sbb
shl
push
jns
xor
imul
das
lods
cmp
addl
mov
stos
add
mov
xor
inc
ret
out
pop
mov
mov
cmc
and
mov
movsb
xor
adcl
mov
jnp
and
lret
inc
inc
scas
out
xor
jno
sub
std
jge
or
or
jne
das
jl
pushf
push
mov
repz
repnz
popf
jnp
pop
js
pop
mov
and
push
xchg
add
jecxz
es
pop
clc
mov
pop
pop
inc
cmp
or
jno
add
pop
pop
push
xchg
or
and
stc
std
push
adc
inc
setp
das
sub
xchg
mov
mov
lods
mov
sub
mov
fstps
pop
mov
aad
adc
cmp
cmp
lcall
xor
sar
dec
mov
pop
jbe
pushf
mov
ret
loopne
mov
or
out
addr16
adc
or
jae
cmpsl
pop
fldcw
cmpsl
dec
push
lahf
mov
jo
imul
lcall
call
cld
jecxz
mov
pop
movsb
movsl
mov
loopne
and
insb
adc
popa
into
movsl
jns
pop
imul
xor
cmp
orl
inc
xchg
cmpsb
mov
adc
and
ficomps
mov
add
data16
add
shl
pop
nop
stos
mov
dec
mov
xchg
xlat
out
mov
pop
cmpxchg
dec
xchg
aam
or
inc
xchg
in
adc
dec
add
std
roll
inc
push
mov
push
fstl
enter
mov
test
das
les
bnd
cmp
call
aad
out
imul
mov
pusha
vpsubsb
fsubrl
fnstsw
mov
divb
pop
xlat
movsl
xor
enter
pop
mov
cld
mov
pop
mov
push
push
std
jp
jo
mov
push
insl
mov
dec
mov
loop
push
dec
xchg
mov
jo,pt
mov
xchg
xor
into
pop
std
sub
mov
sbb
movsb
inc
mov
cmpsl
dec
mov
loopne
iret
and
fcoms
test
mov
bound
dec
jg
add
ss
cli
dec
push
aad
xchg
mov
fsubs
repz
adc
sub
outsl
out
mov
pushf
jp
fcomp
jge
or
sub
pop
fucomip
sub
xor
adc
adc
test
in
repnz
fdivrs
inc
data16
adc
xor
xchg
in
add
mov
jns
push
subb
sub
loop
mov
lcall
mov
cmp
cmp
adc
scas
insb
cmp
add
imul
inc
push
add
andl
adc
leave
inc
dec
decb
sahf
inc
jnp
fimull
xchg
xchg
cmp
jg
xor
notl
mov
jo
cmpsl
cmp
adc
sub
outsb
pop
pop
or
pop
incb
rclb
push
imul
sbb
xor
add
imul
pop
cmpsb
aam
or
sub
pop
les
lret
int
jp
imul
movsb
arpl
cmc
cmpsl
add
fimuls
jl
jns
xchg
div
nop
int3
push
loope
pop
loope
fcomp
sub
scas
sbb
ljmp
xchg
jge
mov
cmp
rcrl
inc
int3
jne
push
mov
pop
in
dec
jmp
or
add
sti
imul
mov
inc
xor
push
aaa
pusha
int
cli
data16
inc
adc
mov
xchg
xlat
and
ljmp
push
hlt
lods
icebp
sti
lods
push
gs
xor
fidivs
jl
ds
add
adc
out
mov
cmp
cmpsl
popf
pop
lcall
std
mov
shr
push
pop
fcomps
pop
adc
add
mov
xor
adc
sub
mov
rcrb
mov
or
repnz
fpatan
gs
xchg
sub
aam
lcall
clc
xor
stos
sub
jne
jl
test
pop
mov
mov
hlt
out
xchg
mov
ds
push
orl
sbb
and
jno
movsl
pop
mov
cmp
pop
arpl
mov
cmp
loopne
and
sbb
jge
mov
fstpl
or
mov
int
fnsave
xor
or
nop
lds
pop
mov
mov
in
adc
pop
dec
lcall
test
jmp
lods
xor
jo
or
adc
es
adc
mul
and
mov
enter
loop
iret
adc
mov
adc
addb
xchg
es
shl
pop
ljmp
add
and
out
mov
lret
and
sbb
sub
mov
sub
pop
pusha
mov
pop
inc
ljmp
ljmp
sahf
jl
push
inc
inc
in
in
add
orl
pop
fs
insl
jmp
jns
sbb
addr16
inc
pop
mov
ja
cmp
ds
mov
pop
outsb
xchg
mov
push
or
bound
inc
das
imul
adc
cmpsb
int3
int3
and
add
mov
jne
loopne
out
ljmp
in
dec
jbe
xor
ret
mov
lods
lahf
xor
repz
test
or
adc
mov
dec
leave
dec
fisubrl
push
xchg
mov
sub
xor
js
mov
incb
inc
outsb
xchg
adcl
and
mov
jbe
xor
out
push
push
mov
jae
xor
cmp
and
outsl
lock
loop
decl
sub
test
sub
xor
or
jbe
xor
inc
out
mov
out
or
jo
mov
push
mov
cli
push
xchg
xchg
dec
or
and
in
stc
stc
lahf
pushf
xlat
pop
enter
fistpll
lods
jmp
pushf
movsb
pop
mov
pop
hlt
pop
adc
sub
subb
add
sub
mov
sub
xchg
xor
mov
mov
test
pop
subl
shlb
dec
mov
dec
xor
add
pop
jp
jge
fnstsw
fsubs
sbb
jne
cmp
pop
cmp
aaa
rcrb
pop
in
xor
pop
sub
sub
jb
loop
mov
adc
test
or
inc
sti
enter
adc
lret
lea
dec
ficoml
jl
out
stc
adc
sahf
les
mov
je
xor
push
loop
outsl
imul
pop
xchg
stos
sarl
sbb
and
out
pusha
xchg
cmpl
mov
jg
xchg
push
rclb
pop
xchg
or
gs
push
insl
and
pushw
outsl
ror
aam
fwait
in
arpl
xor
and
push
jp
stos
xchg
sbb
lahf
inc
in
ljmp
pop
mov
pusha
inc
push
lods
shrl
jns
mov
std
jb
adc
fstl
add
fwait
fs
sub
loope
stos
fwait
or
sbb
test
stos
test
inc
sbbl
jns
xchg
inc
dec
dec
push
lods
jge
scas
ja
lock
insb
ljmp
mov
or
shl
cmp
bound
and
lret
lds
pop
xchg
data16
das
iret
mov
cmp
inc
jo
add
dec
test
and
mov
dec
icebp
in
fdivl
mov
popf
arpl
aas
loop
int3
add
cmp
lds
xchg
fidivl
fucomip
adc
push
sub
mov
dec
call
jle
shlb
testl
sbb
ret
popf
push
mov
push
ret
fsubrs
popa
leave
cld
jbe
ss
fsubrp
lods
into
and
iret
insl
stos
cmpsl
std
push
xor
dec
and
jmp
pop
int3
lcall
sti
jbe
and
scas
repz
xor
dec
jge
inc
jge
int
mov
out
mov
cmp
mov
cwtl
sub
int3
loope
or
test
xchg
xchg
imulb
jne
ss
jno
cs
scas
mov
in
into
xor
lahf
add
push
lods
scas
xchg
jo
lds
aam
sub
cmp
pop
repz
inc
cmp
dec
imul
or
xchg
movsb
push
loope
leave
dec
xrelease
sub
inc
popf
xorl
lods
push
mov
push
leave
pushf
cmpsl
fcomps
fwait
mov
jl
lds
popa
clc
sti
add
test
dec
filds
sub
leave
pop
insl
scas
int3
in
jno
pop
nop
or
std
and
mov
cmp
inc
loopne
js
or
cmp
push
xor
mov
or
or
mov
xchg
xchg
movsl
sub
nop
jae
cmp
mov
jp
xor
push
cwtl
mov
xchg
push
mov
cwtl
loope
sti
iret
repz
xor
sbb
pusha
mov
int
in
loop
dec
push
or
out
xchg
and
outsl
pop
add
jne
rcr
add
mov
mov
xor
ljmp
outsl
mov
insl
shll
mov
adc
and
int3
or
jg
push
dec
popf
stos
xor
fcmovnbe
test
insb
inc
xor
loopne
loope
cmp
dec
inc
in
sub
je
mov
in
xorl
repz
inc
mov
pop
outsl
rcrl
fnstenv
or
inc
xchg
sbb
dec
adc
lret
and
push
fsubrl
mov
mov
rcr
add
std
mov
jo
pop
out
jmp
lcall
mov
adc
adc
jno
cs
and
or
push
aas
xor
imul
imul
outsl
icebp
pop
cmp
stc
sbb
pop
cld
into
out
cmc
xor
or
cmp
push
jp
xlat
dec
fnstsw
pushf
sti
pop
cmp
sub
or
inc
add
ds
xor
sbb
mov
add
je
int3
in
clc
sar
dec
int
add
pop
pusha
dec
pop
sbb
andl
inc
leave
dec
cmpb
cmovo
inc
xor
into
push
xchg
xchg
sbbl
jle
or
sbb
sub
test
pop
fstps
pop
insb
je
inc
jno
jmp
daa
adc
out
and
dec
jo
in
inc
adc
mov
aad
xchg
addb
cmpl
shll
les
adc
push
ds
in
insl
jp
or
shll
cmc
inc
sbb
aaa
xor
dec
jg
push
inc
cmpb
imul
xor
lcall
cltd
jg
int3
icebp
jge
sub
stc
and
adc
inc
xchg
dec
dec
addr16
jecxz
cmp
or
lret
mov
xor
adc
mov
mov
push
cmp
cmp
in
into
ljmp
push
push
inc
xchg
orl
adc
into
jmp
test
jecxz
aam
outsb
in
push
dec
dec
popf
jmp
clc
adc
ja
sub
adc
lret
mov
loop
fstpl
std
mov
lock
mov
call
add
adc
scas
xor
mov
ficoml
outsb
mov
in
pop
sub
xchg
fnsave
repz
jp
ss
sub
nop
mov
and
stc
mov
dec
adc
stc
push
adc
jo
out
loop
add
bound
inc
push
dec
scas
cmp
imul
mov
inc
out
ficoms
pusha
and
cwtl
cmc
orb
jbe
ss
xor
outsl
mov
rcr
in
push
cmp
repnz
sub
xor
xlat
mov
mov
and
scas
adc
pushl
movsl
mov
and
mov
mov
arpl
mov
fcoms
es
mov
int3
int
in
lods
push
xor
imul
sbb
int
arpl
loop
dec
or
xchg
xchg
aaa
push
test
or
loop
aam
lret
int3
add
rorl
cwtl
and
lds
leave
xchg
push
dec
out
test
push
ror
mov
dec
cs
out
and
test
movsl
mov
aad
push
push
fs
cmp
mov
rorl
adc
int3
rcrl
xor
lock
imul
mov
jmp
cmp
cmp
ljmp
lahf
or
aaa
and
iret
push
pop
mov
pop
xlat
dec
insl
sar
adc
pop
sbb
je
call
stc
aaa
mov
insl
outsl
and
xor
push
test
bound
xlat
nop
xor
out
dec
gs
popa
stos
cmp
fdiv
mov
scas
insl
mov
mov
pop
dec
pop
jmp
mov
imul
pop
jmp
cmc
add
pop
jno
xchg
mov
lods
or
dec
int3
jle
femms
or
cld
pop
in
jg
push
mov
push
loopne
fld
pop
movsl
fildl
xchg
std
mov
mov
sub
cmpsb
lret
push
sub
movsl
jbe
sbb
es
xchg
mov
idivb
js
sub
xor
cs
mov
js
push
jmp
outsl
dec
or
out
push
cmp
sub
jmp
xor
in
cwtl
leave
pop
es
pop
xchg
jp
cmp
sbb
dec
push
ret
sahf
aas
xchg
cli
ljmp
fsubl
pop
xor
mov
repnz
sbb
xlat
sti
orl
sbb
dec
xchg
dec
aaa
push
fwait
cmove
mov
fimuls
add
mov
push
lods
fisttps
xchg
jnp
scas
scas
xchg
pop
or
daa
mov
mov
inc
bound
lock
push
xorb
mov
mov
dec
fsub
vpsubd
dec
sub
leave
pop
xchg
iret
push
dec
rorb
mov
mov
jg
lret
std
dec
int
adcb
fwait
leave
mov
add
and
push
cmp
int3
mov
ret
fwait
xchg
ss
mov
fs
sub
dec
out
cmp
cmp
fistl
or
pop
icebp
mov
mov
lea
movb
cmp
or
sbb
aad
rcrl
call
xchg
sub
xchg
js
jmp
mov
cmp
fwait
pop
cmp
sub
xchg
lds
rcr
fwait
test
pop
sbb
mov
pop
outsb
imul
insl
aaa
pop
das
mov
jge
nop
push
adc
or
into
pop
aad
cmp
cmp
adc
add
daa
dec
mov
pop
scas
mov
mov
int3
lcall
repz
icebp
or
jns
pop
je
in
je
lret
ds
sahf
mov
scas
mov
mov
sub
leave
mov
sbbb
xor
cld
jns
sub
mov
in
inc
outsb
lret
mov
mov
in
sub
xchg
jbe
scas
xor
mov
mov
scas
mov
pop
jbe
stos
mov
cwtl
xchg
dec
shl
imul
out
dec
push
sahf
lods
sti
inc
test
adc
fsubrl
jbe
mov
pop
xchg
insb
pop
jl
pop
addr16
xor
pop
inc
fnsave
aam
aaa
or
mov
mov
mov
mov
cmp
xor
sbb
or
add
add
cmpsb
cmpl
js
jp
enter
in
ljmp
movsb
sub
ja
mov
fnsave
adc
push
jno
inc
out
mov
xchg
add
int3
repz
xchg
xorl
rolb
ficomps
push
push
mov
inc
inc
xor
loope
lcall
mov
jns
push
cmp
pop
in
xlat
mov
jns
mov
outsb
mov
inc
cmp
scas
dec
sub
repnz
mov
lret
xor
mov
pusha
push
mov
je
out
cmp
mov
cmpsl
mov
insl
pop
out
xchg
inc
popa
ss
add
je
jge
mov
mov
jbe
andl
xor
pop
and
lods
into
pop
test
xor
jo
pop
mov
scas
and
sahf
in
or
int3
aam
xchg
add
jmp
and
andl
fmul
xchg
ss
sahf
mov
sub
mov
out
fbstp
jmp
push
cli
mov
rolb
push
mov
push
jle
addl
pop
jmp
jns
xlat
cmp
jg
inc
and
push
xor
jbe
bound
ja
jecxz
or
jge
repz
xor
stc
sahf
lods
jp
xlat
pop
test
push
or
in
jge
inc
mov
sarb
je
jle
lahf
call
mov
fsub
xchg
fwait
push
data16
out
xorl
mov
pxor
out
xchg
jecxz
and
repz
hlt
stos
mov
imulb
xchg
add
in
mov
outsb
or
mov
pusha
into
mov
or
insb
or
mov
xchg
je
push
test
movsb
insb
mov
imul
rclb
or
adc
cmp
cmc
sub
rolb
std
cmpl
mov
jmp
data16
stos
fwait
sub
xor
sub
repz
sysret
out
push
fisttpll
mov
cs
xchg
jne
fsubl
jmp
inc
mov
cld
sbb
mov
mov
push
add
pop
das
in
arpl
jle
sbb
push
push
loop
call
sbb
and
xchg
ret
jno
cmp
add
iret
lret
push
sbb
ljmp
xor
cs
mov
test
xchg
subl
test
in
enter
pusha
jne
pop
xor
inc
dec
pop
mov
cmp
lret
pop
mov
xchg
mov
mov
outsb
mov
fsubr
shl
pop
in
int3
or
into
rol
lds
mov
lock
sbbb
cmpl
int3
popa
ja
cwtl
cmc
arpl
mov
loope
divb
shll
je
int3
mov
shlb
push
or
aaa
in
add
out
inc
mov
or
add
rorb
jo
das
ret
jmp
pop
sub
lea
mov
dec
xchg
xchg
sub
pop
mov
pop
fs
insb
sti
push
je
clc
push
jae
inc
dec
jmp
pop
outsl
hlt
cmc
inc
not
pop
cmc
out
fldcw
cwtl
aad
mov
movsl
ret
adc
xchg
fmuls
jns
mov
cld
adc
sbb
sbb
cmpsl
scas
jnp
jo
ss
adc
ljmp
fnsave
sbb
call
bound
xor
pop
leave
adc
in
into
xchg
add
test
test
sbb
out
shrb
xchg
cmp
test
test
ret
jno
mov
pop
fldenv
dec
lcall
xchg
mov
mov
xchg
mov
sbb
jle
pop
jecxz
test
out
inc
xor
repz
jg
jno
stos
mov
and
insb
aad
fnsave
inc
mov
mov
jns
mov
int
fldln2
sub
test
pop
push
or
ja
add
stos
subl
jmp
or
out
test
and
js
xor
sbb
int3
inc
aaa
xchg
lahf
xor
add
faddp
and
pop
jp
std
lahf
sbb
fdivrs
jge
gs
lock
mov
fnstcw
mov
cmp
adcl
push
je
lret
mov
push
fcoms
push
mov
pop
xlat
jns
jbe
outsb
ja
dec
in
add
mov
pushf
pusha
cmp
out
test
dec
jne
fst
ret
push
mov
pop
ret
add
lock
leave
ret
fstps
je
sahf
xchg
rcrl
neg
fisubs
lret
arpl
pop
stc
mov
mov
sub
daa
mov
push
push
fists
xchg
mov
xor
mov
xchg
dec
fwait
xor
adc
sub
mov
imull
in
pusha
lcall
jbe
in
stos
mov
dec
clc
std
adc
call
pop
insb
fistpll
repnz
lods
jbe
movb
nop
nop
jns
idivl
test
gs
das
pop
xchg
loop
push
push
adc
adc
sbb
fildll
mov
sub
mov
int
adc
sahf
jecxz
add
daa
or
lods
jae
lea
shll
cmp
movsl
mov
and
sbb
mov
sbbb
push
dec
pop
xchg
mov
int
aad
adc
inc
lods
data16
out
inc
shrl
pop
dec
sub
lcall
cltd
fimull
adc
pop
js
xchg
test
int3
and
mov
add
das
push
mov
xor
mov
sub
xor
dec
xchg
mov
dec
sbb
dec
xor
xchg
mov
loope
lret
mov
lret
mov
arpl
in
push
out
aam
stos
push
sub
cli
hlt
daa
clc
enter
rcrb
and
incl
xchg
daa
call
jmp
adcl
arpl
subl
pop
add
xor
imul
or
aam
add
lods
inc
mov
lock
in
push
mov
xchg
jecxz
gs
mov
popa
mull
pop
sub
jp
mov
lahf
adc
mov
adc
cmp
movsl
lods
add
cld
push
jno
push
rcll
les
jbe
pushf
add
movlps
icebp
fcoms
repnz
push
notb
dec
mov
fidivrs
inc
xchg
lret
ss
mov
mov
cmp
cld
sub
fsubrl
test
lret
mov
dec
insb
scas
pop
dec
test
stos
lcall
add
stos
adc
nop
into
outsb
adc
sarl
or
push
leave
lods
bound
mov
jb
bound
out
xchg
and
adc
repz
cmp
and
movsb
int
jb
jg
and
xchg
clc
insb
or
test
sbb
leave
sbb
aas
mov
inc
sbb
les
outsl
pop
pop
xchg
push
add
push
sbb
jo
push
mov
lea
dec
ljmp
rorb
nop
jno
cmpsl
inc
mov
arpl
and
imul
pusha
xchg
sub
sbb
push
repnz
dec
xchg
sbb
adcl
inc
mov
cmp
pop
loop
and
repz
inc
movsb
fistpl
xchg
xlat
sub
mov
jns
cmp
inc
sarb
mov
sub
xchg
nop
xlat
pop
mov
in
cltd
shlb
and
inc
pop
sahf
imul
inc
andl
repz
out
lret
scas
or
mov
hlt
inc
mov
cmp
std
add
push
xorl
push
rcrb
mov
gs
aas
push
cs
sbb
xchg
xchg
dec
int3
aas
gs
imul
out
jns
dec
mov
scas
repnz
shlb
mov
mov
fsubr
fmuls
ljmp
lcall
je
mov
and
fsubs
mov
dec
mov
cmp
test
or
subl
xchg
or
xor
jns
cmp
and
cmpsl
jno
and
adc
xor
inc
mov
cmpsl
scas
sub
mov
xchg
ja
arpl
mov
mov
and
jp
enter
int3
call
push
int3
push
test
inc
cwtl
lret
mov
dec
mov
ret
pushf
ljmp
mov
loop
xchg
push
test
in
out
cmp
sub
fwait
xchg
dec
test
in
adc
aas
adc
lods
inc
lods
jnp
push
mov
mov
pop
push
ror
fs
dec
iret
mov
xchg
pop
shlb
emms
mov
pop
ss
jle
xchg
mov
bound
pop
cld
ficompl
fcoml
jge
rol
gs
fdiv
test
imul
mov
cli
fs
incb
sub
movsb
es
in
out
loop
pusha
or
scas
icebp
fwait
mov
data16
ret
dec
cwtl
add
aam
es
cltd
out
inc
sub
dec
or
addr16
mov
mov
ror
add
cmp
js
xor
pop
addb
nop
sbb
xor
mov
ret
das
jmp
rorb
cmp
jno
sub
mov
xchg
sub
mov
jbe
inc
xchg
daa
cmp
mov
pop
outsb
dec
cli
xchg
rorb
leave
add
pop
imulb
jg,pt
inc
adc
adc
dec
add
xor
nop
jo
sbb
lret
dec
stos
pop
aaa
sub
lret
xchg
push
ja,pt
push
mov
popa
syscall
lods
leave
popa
dec
xchg
fmull
aaa
dec
and
nop
outsl
ds
push
mov
leave
fsubr
test
jge
shr
je
aas
sti
inc
in
inc
cmp
push
imul
add
xor
imul
push
hlt
fstl
cmp
rcrb
pushf
sbb
pop
out
add
das
mov
ret
lds
pop
call
mov
and
inc
xchg
cltd
add
jl
aad
cltd
dec
pop
jp
jbe
lret
dec
sarb
sbb
push
pusha
inc
nop
jae
and
dec
jno
jecxz
fisttpll
in
mov
sbb
mov
jle
mov
dec
inc
pop
or
fs
stos
loope
js
jge
sub
data16
orl
scas
les
in
and
es
add
bound
cmc
imull
dec
mov
cmp
mov
or
gs
fwait
xor
int
fwait
cmp
pop
sarb
mov
dec
push
test
jne
jnp
popf
test
movsl
stos
mov
mov
ret
lods
jg
aad
mov
cwtl
fnstcw
mov
not
loope
and
outsl
les
in
sbb
stos
fwait
mov
xchg
mov
arpl
cmp
jns
mov
movl
dec
or
repnz
jmp
adc
xor
push
add
ds
xchg
lds
ja
ja
mov
pusha
adc
inc
cmp
test
mov
into
push
cmpsl
int3
movq
stc
dec
cmpsl
out
enter
call
mov
or
mov
cltd
sti
jmp
stos
sub
nop
testl
testl
mov
repnz
fsubrl
jbe
and
pop
jb
movsl
xor
cmpsb
dec
adc
and
sub
mov
mulb
movsb
jno
pop
add
popf
mov
cmp
inc
sub
adc
jmp
pop
and
int
xchg
daa
bound
add
fs
aas
and
pop
in
add
inc
add
iret
pop
cmpsl
shlb
cmpsl
inc
cmc
jnp
pushl
pop
sbb
movsl
in
cmp
cltd
mov
cli
xor
cmpsl
cmp
mov
daa
sbb
dec
xchg
jns
hlt
push
popf
js
in
cmp
mov
adcb
xlat
lcall
fdivl
pop
mov
xchg
mov
pushf
dec
lret
inc
push
call
pop
les
xchg
push
adc
aad
lods
int3
push
sbb
pop
ss
push
cmpsl
push
inc
mov
cltd
das
adc
cmp
out
dec
ss
scas
scas
ja
push
jae
inc
jno
stc
pop
jmp
test
or
pop
jecxz
jno
negl
push
push
std
out
push
stc
mov
push
xlat
sbb
mov
jns
mov
and
xchg
iret
mov
xchg
cmc
and
lods
mov
sub
ss
sbb
out
fcmove
push
pop
add
shlb
rcr
adc
sti
cmp
mov
lcall
adc
dec
xchg
sub
add
xor
rol
incl
cs
jae
test
lret
sbb
pop
shl
xor
push
shl
dec
xchg
cmc
sub
adc
fnsave
mov
arpl
lods
fwait
iret
sbb
das
xabort
or
xor
mov
push
adc
dec
mov
mov
pop
inc
ljmp
xchg
adc
jnp
jne
mov
repnz
shll
lods
stos
inc
mov
repz
adc
dec
daa
divl
mov
movsl
jae
xor
test
pushf
stos
mov
mov
pop
test
lret
icebp
jo
mov
pop
int3
addr16
lahf
cmp
mov
mov
pop
mov
iret
dec
not
mov
sarb
les
lea
cmp
sub
jbe
add
jle
cmp
das
xor
dec
in
jecxz
cmp
pop
fildll
out
xchg
pop
lods
push
stos
fwait
push
jbe
pushw
or
daa
scas
inc
push
adc
cli
movsb
cwtl
pop
mov
outsb
out
ss
sar
inc
fldl
mov
clc
jno
push
sbbl
or
xchg
test
mov
call
sub
pop
lret
push
add
jmp
jge
imul
shr
pop
pop
mov
mov
inc
into
test
aam
push
cli
or
jp
lods
sub
dec
jp
xorl
mov
jmp
pop
pop
adc
test
mov
fstps
fwait
sub
cmp
data16
lahf
js
cli
inc
adc
pop
notl
in
mov
ljmp
ss
je
js
mov
ja
nop
pop
xor
stc
jl
fld
add
push
into
bound
add
mov
lods
stos
push
cltd
loope
js
and
test
xchg
fdiv
mov
sbb
jecxz
insb
sbb
loope
enter
mov
aas
push
mov
pop
jne
pop
movsb
and
jmp
sub
outsb
xlat
addr16
xor
mov
push
sbb
movsb
fsubrl
inc
loope
mov
ret
sub
lret
add
mov
subl
mov
or
cmp
adc
sarl
pop
es
fwait
bound
aas
jb
cmp
int
xchg
cli
loopne
mov
mov
ljmp
or
add
cmp
xchg
into
mov
fsubrl
pop
iret
xorl
hlt
push
xchg
or
mov
or
hlt
enter
and
pop
cs
pop
dec
insb
cltd
jmp
repnz
push
mov
mov
and
test
loope
mov
jmp
fisttpll
movsb
push
test
mov
shrb
lock
dec
stc
adc
cmp
call
imul
test
mov
mov
aaa
xchg
sbb
adc
rcrl
in
ss
in
mov
cwtl
mov
adc
imul
jns
mov
pop
mov
mov
mov
cltd
sti
xlat
xchg
insl
test
ljmp
mov
inc
xchg
and
adc
xorl
ret
inc
subb
adcb
dec
push
adc
ja
ljmp
sub
push
sti
test
jo
ja
push
jecxz
rorl
js
icebp
cmpl
add
xchg
push
jb
adc
sub
dec
xor
push
das
push
cmp
cmpb
pop
mov
jl
scas
mov
test
sbb
pop
lret
push
and
push
je
xchg
jb
xchg
mov
mov
cwtl
rclb
in
sbb
ret
jns
ja
pop
sub
rcr
adcl
push
bound
test
mov
outsb
mov
loop
in
inc
shlb
xor
mov
jo
adc
iret
mov
imul
clc
test
inc
inc
cmp
pop
mov
cmpsl
sub
mov
jae
test
lahf
hlt
inc
or
adc
pop
cltd
popf
jbe
ret
add
or
add
mov
out
lcall
pop
ds
lds
push
or
cmp
sbb
dec
cmpsl
into
int
dec
scas
ja
xor
in
and
popa
les
push
orl
xcrypt-ofb
cmpsl
sub
pop
rcll
sti
sub
xchg
inc
inc
sbb
and
xchg
adc
sub
xchg
daa
xchg
repnz
pop
popa
dec
xor
or
pop
adc
addr16
or
or
push
mov
jb
or
int
jno
jo
mov
mov
adc
pop
jmp
sbb
xor
out
lods
sub
xchg
loop
pop
pusha
mov
outsb
xchg
movsl
mov
jge
cmpsb
clc
jb
and
push
push
lea
ret
lds
mov
push
sbb
lcall
and
loopne
push
pushf
pop
jae
mov
dec
add
adc
push
mov
mov
addr16
popf
pop
cmc
jbe
jge
sub
mov
out
ljmp
es
adc
inc
in
sub
scas
aaa
sti
cmp
or
sbb
xor
stos
jnp
push
mov
add
inc
movsl
stos
insl
push
inc
std
xlat
xchg
movsl
cmp
pop
xchg
mov
inc
pop
lcall
jne
jecxz
xchg
sbb
aam
xchg
gs
andb
sti
rcrb
shrb
cmc
fwait
pop
ds
xchg
repz
push
into
fwait
nop
inc
test
add
nop
icebp
xor
pop
xchg
cmp
jb
shl
xchg
test
daa
lods
bound
cwtl
test
pop
sbb
sbb
cmp
andb
iret
popa
push
push
icebp
mov
in
jl
jl
adc
imul
jnp
add
cmp
popa
xor
data16
mov
jne
lret
movsl
jae
mov
add
cwtl
cmpsb
in
xor
out
mov
sub
ds
inc
lret
fisttpll
jp
stc
jp
int
or
jecxz
fstpl
out
dec
mov
in
jbe
mov
mov
pop
and
push
xlat
push
pushf
xor
push
sbb
cmpsl
mov
aad
or
adc
das
and
lret
mov
inc
arpl
pushf
addl
lcall
sarb
mov
cmp
mov
push
fdivrp
pop
in
jne
jnp
rol
arpl
movsl
adc
stos
xor
push
xor
into
lahf
push
adc
sub
mov
and
lock
sti
arpl
inc
sbb
or
sub
inc
mov
jl
mov
iret
mov
push
or
stos
loope
adc
mov
xor
xor
lcall
out
add
jne
sbb
xor
cwtl
jg
mov
mov
sahf
mov
mov
xor
ds
lret
mov
sbb
cmpsl
jecxz
jns
stc
ds
aad
shlb
mov
in
xor
arpl
jl
repnz
mov
mov
xor
push
inc
out
js
shrb
loope
popa
push
lock
mov
mov
in
lcall
dec
push
jnp
sbb
arpl
int
pushf
pop
idivl
dec
adc
repnz
insb
push
mov
xchg
insl
pop
or
aaa
xchg
adc
push
aaa
sub
shl
adc
fbld
fsubp
ret
dec
shrb
out
or
in
push
std
dec
pop
or
fistpll
push
scas
sbb
push
movb
rcrb
xlat
pop
pop
xor
jnp
inc
std
xchg
call
mov
dec
mov
leave
xchg
dec
lods
and
jmp
stc
icebp
test
pop
mov
lods
pop
push
jns
outsl
ficomps
lea
jae
inc
insb
mov
adc
or
jb
fdivs
stos
test
sub
rorl
int3
in
stc
mov
stc
out
adc
pop
sub
and
xlat
pop
xchg
mov
ljmp
icebp
pop
and
outsb
sbb
imul
outsl
rcrb
idivl
stos
popl
std
and
sub
mov
test
mov
inc
cmp
inc
sub
lea
insb
and
ljmp
xchg
in
lret
xchg
jne
bound
testl
xor
roll
in
lcall
adc
xchg
xchg
dec
cmp
xor
push
adc
inc
in
popf
dec
mov
in
jecxz
enter
cmp
test
and
mov
xor
mov
pop
xor
adc
filds
mov
xchg
ss
pop
adc
adc
mov
insb
lcall
push
xorl
dec
leave
or
mov
add
or
xchg
mov
mov
lock
mov
xlat
cs
cmp
pop
pop
cmp
iret
dec
ljmp
sub
sub
enter
jae
in
fwait
js
stc
push
movsb
lret
inc
bound
xchg
cmp
rcrl
push
sbb
sbb
imul
shll
sbb
int3
ret
xor
mov
sub
clc
adc
cmpsl
ljmp
into
push
mov
les
repz
pop
dec
xchg
sub
mov
sub
sti
jge
cmp
push
cld
leave
lods
xchg
push
push
std
stos
fistps
mov
cmp
mov
push
cmp
idiv
adc
mov
cld
call
int
dec
or
ffreep
fwait
mov
les
pop
into
push
inc
add
sub
inc
scas
mov
jmp
pop
dec
push
insb
jp
mov
adc
mov
cmpl
pushf
or
fsts
dec
mov
pushf
mov
adc
xor
xorl
sub
inc
cwtl
mov
fwait
mov
cmc
adc
pop
lahf
rol
in
cltd
aam
pop
cmp
xchg
mov
push
and
scas
outsl
xor
mov
mov
cs
repnz
push
cld
sbb
inc
sbb
sbb
lret
imul
cmc
mov
mov
xor
ret
dec
jae
movsl
sbb
and
mov
or
pop
sahf
cmpsb
scas
pop
outsb
repnz
jmp
add
clc
sbb
lds
ljmp
inc
pushf
pop
repnz
loop
xchg
push
push
xor
mov
int3
lods
jecxz
bound
andl
dec
pop
aam
cwtl
loope
jnp
cmp
push
xchg
inc
dec
xor
pop
sub
xchg
push
push
aad
jle
inc
enter
cmp
dec
test
cld
bound
in
pusha
cmp
in
pusha
lods
aad
imull
or
dec
ss
xor
mov
cmc
inc
cmp
mov
inc
stc
test
push
jg
pop
popa
out
add
test
fidivs
icebp
inc
or
xchg
ja
and
movsl
mov
and
fwait
dec
add
pop
cmpsl
in
adc
fbstp
cmpsl
push
mov
in
mov
fld
cli
push
push
cmp
adc
jne
and
push
add
fs
mov
clc
loop
and
xchg
push
mov
adc
sahf
sub
imulb
or
add
mov
int3
ret
lcall
push
push
inc
ds
shll
cwtl
out
dec
inc
sbb
push
push
sahf
push
sbb
inc
je
pusha
xchg
push
ljmp
ret
ds
pop
loopne
cmp
ret
inc
call
sbb
das
movsb
add
nop
mov
lea
sub
movsb
push
fdivr
mov
dec
mov
sbb
push
push
pop
insb
fs
dec
pop
pusha
pusha
dec
pop
pop
push
loope
stc
rcll
cmp
and
cmp
inc
mov
push
mov
dec
cmp
mov
in
stos
mov
mov
divl
inc
lret
sbb
repnz
addr16
ds
bound
push
daa
or
stc
push
push
pop
jns
mov
jo
xchg
jo
ret
ss
inc
mov
into
pop
inc
xor
xchg
loop
mov
jmp
cld
sub
inc
dec
dec
test
or
icebp
fisttpll
or
mov
imul
iret
and
pop
daa
adc
add
dec
sub
inc
shl
ljmp
in
jb
popf
test
cmpsb
daa
pop
or
mov
xchg
or
xor
iret
xor
cmp
or
push
punpcklbw
sbb
pusha
or
jle
xlat
sub
bound
lods
cmpsb
xchg
or
nop
daa
pushf
push
movsl
and
push
or
dec
mov
ror
jl
icebp
jnp
cmp
frstor
mov
fs
fildll
xchg
iret
xor
lods
sub
shll
adc
invd
in
arpl
xchg
jbe
pop
ljmp
lods
jge
mov
arpl
xorl
aaa
push
jle
ss
mov
call
sti
xchg
xor
dec
popa
lret
xchg
push
mov
fildl
dec
cmp
mov
pop
stos
sbbl
mov
ljmp
inc
scas
test
insb
push
mov
xchg
outsl
repz
and
xchg
out
popa
lcall
push
jnp
xchg
and
jecxz
and
ret
mov
fildl
pop
or
fwait
sub
xchg
mov
outsb
xchg
rcrl
mov
adc
aad
lahf
das
fdivr
in
imul
mov
mov
cwtl
lret
fcompl
sub
push
into
sub
jo
pop
inc
stos
mov
insb
lock
jns
iret
cwtl
cli
pop
xchg
inc
inc
pushf
aas
or
push
pop
out
add
pop
lods
clc
mov
cmpb
add
xchg
out
push
mov
cmp
inc
mov
daa
mov
ja
sub
scas
mov
je
mov
jmp
lret
shll
inc
jbe
jg
sub
push
cmp
push
dec
sbb
mov
inc
int3
scas
cli
sub
es
insb
mov
sahf
loopne
test
xchg
xlat
jge
add
push
cmp
push
mov
movsb
add
int3
sbb
pop
adc
fwait
mov
ret
fistpl
and
cs
push
or
shll
cli
add
cwtl
adc
lds
insl
in
xchg
shll
sti
add
nop
add
aad
fcmove
movzwl
inc
std
ffree
pop
sub
ret
cmpsb
stos
test
bnd
inc
lea
lds
scas
push
outsb
aad
mov
mov
xchg
rorb
and
pop
cltd
scas
xor
push
mov
mov
mov
pop
xor
sub
xor
cltd
inc
or
vmovdqa
fisttps
xor
sbb
sbb
jp
cli
mov
cmpsl
adc
xor
movl
push
jg
fdiv
mov
mov
inc
ljmp
out
lock
jl
fbld
or
mov
cmpsl
stos
mov
push
jns
call
mov
aam
adc
sub
call
cltd
mov
mov
jns
dec
in
or
mov
sti
inc
add
adcl
dec
and
xor
xor
push
pop
in
out
xchg
sub
cwtl
inc
dec
dec
sub
pop
jbe
xor
jbe
imul
adc
jecxz
test
mov
jmp
fs
mov
outsb
lret
push
mov
arpl
cs
bound
enter
pop
xchg
das
add
arpl
jne
cmp
xchg
sar
sub
or
ljmp
pop
fucomp
push
inc
cmp
and
jae
sub
mov
cmc
insb
xor
pop
mov
mov
mov
scas
mov
cld
and
xchg
add
aam
xlat
data16
insb
stos
push
mov
lahf
lods
inc
xor
movsb
int3
pusha
cmpsb
out
push
dec
pop
push
mov
sub
out
daa
sub
repz
data16
jbe
stc
popf
inc
mov
jne
mov
push
xor
test
xchg
cmp
jnp
lods
addr16
add
mov
sbb
add
iret
pop
xchg
cmp
dec
jbe
pop
loop
in
mov
add
outsl
xor
push
xor
ds
inc
dec
fs
adc
call
or
out
incl
je
daa
test
jp
ja
cwtl
pop
mov
rolb
dec
sub
add
repnz
bound
push
outsl
push
adc
jge
test
incl
or
out
push
jle
movsb
cld
arpl
imul
mov
pop
in
sub
pop
arpl
pop
pop
mov
push
jmp
push
mov
aam
orl
and
pop
dec
out
stos
cmp
es
insb
xchg
inc
into
clc
inc
filds
push
imul
cmp
rol
sbb
rcr
cmp
mov
ds
dec
add
ds
popl
mov
add
ja
stc
shrl
push
out
and
inc
scas
je
scas
ret
sub
pop
lds
xchg
mov
inc
dec
inc
inc
add
aaa
arpl
mov
xor
sub
inc
gs
inc
stc
sahf
in
inc
sbb
outsb
outsb
aam
and
pop
dec
lret
dec
jp
aad
pop
mov
pop
add
cmp
outsb
shll
test
lock
bound
cmp
xchg
pop
xchg
in
jmp
jne
inc
inc
int
sub
iret
daa
rol
dec
adc
testb
dec
in
cmpsl
aas
imul
or
xlat
and
jne
repz
js
sub
rcrl
sbb
repz
push
add
rolb
bound
jne
inc
fsubs
ret
or
fs
jno
aam
pusha
add
mov
sub
dec
negb
push
in
shlb
pop
test
arpl
inc
ss
xchg
inc
cld
dec
mov
ja
sbb
jae
dec
shl
mov
pop
test
aad
sub
xor
cwtl
aaa
mov
mov
iret
xor
and
popa
lods
out
es
aad
ficompl
fsubrl
jp
popa
dec
jmp
imul
movsl
stos
test
sbb
imul
adc
pop
sub
or
and
adc
and
mov
jne
nop
std
int
int
jp
fsts
sti
imul
daa
sbb
in
jl,pt
outsl
mov
movsl
jmp
push
push
mov
jns
cmpsl
repz
dec
sbb
inc
fldenv
mov
cmp
sbb
clc
sub
xchg
fadds
sbb
sbb
xchg
jo
enter
out
pop
or
add
addr16
sar
add
pop
add
orl
mov
scas
sbb
js
icebp
cmpsl
dec
das
mov
jp
sub
jg
fdivr
ja
dec
cwtl
mov
inc
jo
pop
push
sub
fcoms
xchg
inc
adc
xchg
fiadds
sub
lea
cmp
ror
les
in
mov
int3
test
cmpsl
imul
pop
pop
rolb
scas
xchg
inc
jle
sub
ljmp
cs
jmp
sub
add
addr16
sar
push
mov
fs
lods
shl
popf
sub
mov
addr16
loope
jg
pop
xor
sbb
jns
pop
jnp
jp
inc
jge
arpl
pop
xchg
mov
fistl
or
xchg
adc
adc
in
loope
or
sub
imul
cs
push
or
dec
mov
shll
ds
jg
or
mov
in
xor
pop
sub
pop
lock
int3
and
mov
mov
inc
mov
jnp
scas
pop
pop
fs
test
stc
pavgb
clc
aam
sbb
pop
inc
push
xchg
outsl
fwait
or
jp
pop
imul
leave
jo
in
xor
push
mov
jae
adc
clc
cmp
jns
xchg
jmp
loopne
mov
mov
sub
scas
jle
loope
outsb
mov
sub
lods
fcoms
jo
cld
xorb
pop
es
imul
or
cmpsb
mov
cwtl
int3
pop
mov
push
out
push
jmp
pop
mov
mov
out
push
in
ljmp
popf
sub
aad
xchg
lahf
lret
sbb
dec
pop
cld
push
add
jg
mov
mov
js
in
gs
dec
mov
and
push
push
sahf
mov
xor
sbb
xor
rorl
or
sti
neg
mov
inc
lock
dec
mov
push
mov
rorl
fstpl
fsts
xchg
inc
pop
cmp
jp
adc
dec
out
sbbb
divl
scas
push
xchg
cmp
lea
test
adc
push
pop
mov
sub
test
cs
gs
cmp
decb
xchg
xor
add
test
mov
out
xor
push
mov
dec
std
in
xchg
fnstcw
outsb
ja
add
jle
xchg
pop
dec
cmp
dec
xor
mov
pop
roll
adc
jne
add
out
stos
cmpsb
and
loopne
mov
mov
fs
and
mov
outsl
mov
leave
repnz
aad
dec
xchg
lcall
mov
cmp
mov
inc
xchg
pop
xlat
es
imul
inc
pop
cmpsl
jne
jl
bound
jmp
ljmp
sub
ret
cmpb
sub
in
enter
mov
lds
jmp
insl
mov
or
add
mov
pushf
and
ds
sti
leave
xchg
jae
addl
mov
fwait
mov
xor
dec
and
cltd
les
nop
cmp
mov
lahf
sub
add
negl
push
sbb
jnp
xchg
aas
cmp
mov
sti
cmp
sub
mov
enter
xchg
cld
lods
clc
xor
inc
or
adc
inc
inc
dec
sub
or
add
rcll
mov
mov
pop
push
sbb
fs
lcall
inc
inc
pop
lods
mov
dec
repnz
arpl
sub
jno
cltd
es
xchg
push
arpl
add
movsl
repz
adc
mov
fwait
push
cmc
test
add
imul
loope
sbb
sub
push
in
popl
aam
repnz
bound
cmp
js,pt
jbe
push
sbb
sbb
pop
jb
mov
lahf
pusha
mov
mov
xchg
std
pop
inc
sbb
stc
out
cmpsb
sub
sbb
lahf
nop
lahf
movsl
xorb
gs
sub
daa
jo
fsubs
das
sub
into
cmp
jno
mov
mov
adc
push
outsl
dec
inc
sub
mov
insl
lods
icebp
out
add
pusha
mov
ja
es
pusha
xlat
cwtl
fcoml
pop
out
cwtl
mov
push
add
mov
cmpsb
fstpt
pop
inc
aas
adc
jl
imul
mov
mov
pop
cltd
xchg
imul
aas
adc
lods
mov
mov
mov
mov
es
into
pop
jnp
jns
jge
fimuls
xchg
mov
mov
fldlg2
addr16
lds
imul
dec
sbb
std
out
sub
bound
sub
lret
mov
or
in
dec
adc
sahf
roll
es
repnz
imul
sbb
dec
rcrl
lcall
adc
movsb
lret
inc
imul
les
pop
aaa
outsb
sbb
jmp
xchg
push
outsb
xlat
jle
out
sub
loopne
push
pop
pop
dec
fmul
xor
daa
xor
shll
faddl
in
sti
mov
imul
lret
ret
cmp
sbb
lahf
out
push
popf
stos
cltd
mov
out
insb
cwtl
mov
cmp
fimuls
inc
fiadds
insb
mov
pop
mov
int
mov
xchg
jne
loop
mov
xchg
ficomps
andl
stos
jne
mov
push
clc
cmp
ljmp
mov
lods
lods
fistpl
push
cmp
xchg
aad
xor
cmp
mov
rclb
fildl
mov
fdivl
int
adc
pop
int
xchg
enter
mov
xchg
dec
dec
subl
fidivl
fbstp
enter
adc
jo
and
mov
push
cli
add
adc
xor
ret
dec
push
and
mov
mov
add
jle
cmp
push
or
xor
and
mov
jge
mov
pop
stos
inc
mov
jnp
insb
inc
pop
mov
fwait
push
inc
cmpsl
cli
cltd
bound
xchg
movb
aad
and
push
adc
nop
pop
pop
cwtl
rorl
mov
lea
in
push
pop
jge
in
sbb
mov
test
outsl
out
lret
jnp
lods
stc
pop
push
jl
mulb
xor
add
testb
leave
in
loopne
out
out
dec
fdivrl
pop
mov
push
push
mov
push
mov
or
push
mov
int3
lea
cs
xor
into
icebp
fidivrl
cld
add
jne
mull
mov
jns
dec
dec
lds
inc
sti
and
push
pop
and
sbb
xlat
sub
xchg
cltd
scas
pop
test
pop
push
mov
xor
cmp
leave
pop
lock
repnz
popa
hlt
insb
or
lds
jle
add
outsb
in
jp
imulb
sahf
call
imul
mov
and
mov
mov
ja
out
lcall
sub
dec
cmp
jo
std
xor
repz
xor
stos
loope
mov
fisubrl
aad
into
daa
adc
roll
shlb
xor
dec
addl
mov
into
repz
outsl
lods
mov
mov
insb
sbb
mov
sbb
mov
inc
cmp
inc
jmp
pop
inc
out
cli
pop
icebp
imul
jb
data16
mov
add
sti
lds
jl,pn
cli
in
lods
ja
sbb
dec
into
sbb
cli
sbb
xchg
mov
add
and
les
mov
or
xor
ljmp
mov
add
adc
imul
adc
shll
mov
shr
or
rorb
andb
or
cmp
in
add
es
je
mov
lahf
scas
push
insl
lods
ret
int3
xor
dec
lret
push
dec
ds
out
jle
sub
dec
push
or
clc
popa
dec
mov
in
pop
mov
mov
stc
cld
dec
insl
ret
ljmp
fistpll
stos
cmp
cmp
mov
cmp
or
stc
or
stos
xchg
push
xchg
mov
mov
inc
xor
loopne
enter
test
out
jmp
xchg
cmp
fstpl
inc
mov
mov
movsl
xchg
fcoml
push
sbb
inc
adc
jge
xchg
add
sbb
push
jnp
les
cwtl
sub
and
xlat
jecxz
sbb
cmp
pop
orl
outsl
inc
mov
dec
rorl
inc
cld
fisttpl
xchg
repnz
adc
test
fnstcw
ja
sarl
mov
popa
jg
push
stos
add
jae
cmp
inc
xchg
sti
pushf
testl
or
incl
jnp
mov
mov
xchg
xchg
push
xchg
push
jbe
outsb
std
sbb
or
push
repnz
leave
in
or
loopne
out
daa
cvttps2pi
mov
push
rcll
into
xor
jmp
add
sub
fmull
pop
ss
lahf
pop
xor
shlb
xchg
dec
daa
xchg
cmpsb
push
sub
ret
mov
loope
or
or
jns
xchg
or
push
iret
cmp
mov
sarl
pop
pop
mov
das
xchg
cmp
pop
push
loope
inc
fs
or
aaa
mov
push
cmp
inc
mov
int3
repz
sbb
fcos
push
cmpsl
and
sub
dec
mov
dec
jl
rcrl
dec
test
mov
mov
cwtl
and
jbe
arpl
pop
lret
or
repnz
pop
lcall
push
or
or
in
adc
repz
or
stos
fsubs
inc
pop
ljmp
in
lret
cmp
push
sub
stc
mov
xor
and
mov
out
je
out
adc
dec
mov
xor
call
xor
lock
insb
push
repnz
aaa
jl
pushf
inc
cmpsl
xor
fisubl
bound
movsl
jg
in
ret
test
clc
aaa
test
mov
adc
dec
push
jns
js
dec
repnz
cwtl
stc
in
jns
dec
adc
and
mov
in
xor
mov
rcrl
cli
cmc
push
cmpsb
xor
dec
sub
cs
sub
xchg
mov
or
sub
mov
and
punpckhdq
jmp
pop
movsl
popf
dec
dec
sbb
mov
out
call
jnp
push
sti
rep
jae
pop
mov
xchg
mov
push
dec
xchg
dec
scas
or
repnz
adc
sub
push
pop
xor
orl
add
and
push
out
aad
push
and
push
cmp
push
je
int3
sbb
andb
or
vmovupd
cld
add
mov
adcb
add
cmp
xchg
vphadduwd
mov
sbb
push
popf
leave
lods
mov
cmpsl
flds
sbb
push
mov
int3
sarb
mov
scas
insb
sub
xchg
sbb
fnsave
leave
jecxz
es
arpl
xor
sub
xchg
jge
jg
ljmp
cld
enter
dec
fwait
sub
mov
shrb
stc
mov
es
sbb
arpl
gs
loop
xor
orb
mov
stc
mov
lret
test
mov
js
sti
rorl
call
mov
test
mov
mov
cs
push
inc
adc
jecxz
jno
mov
stos
in
inc
icebp
xor
dec
xchg
mov
testb
sbb
push
dec
push
cmpsl
push
cmpsb
aad
les
jg
cmpsb
test
dec
add
rorb
lret
mov
xchg
int
stos
nop
or
or
mov
sub
sahf
mov
insl
das
lea
push
push
rcrl
fwait
jnp
cltd
fadds
aad
push
sbb
scas
lods
pop
fcomps
and
rclb
stc
lret
xor
push
pop
mov
data16
loope
sub
mov
cld
push
mov
ret
pop
lea
sbbl
mov
jg
or
stos
push
pop
sub
xchg
repnz
mov
out
xor
lds
cld
rcr
pop
popf
push
mov
mov
jae
jnp
xchg
je
xchg
mov
inc
push
mov
into
push
mov
fs
jbe
fisubl
ljmp
push
les
xor
mov
cltd
sub
shll
fcomps
jl
mov
xor
test
ss
jae
mov
pop
test
sbb
mov
data16
fs
arpl
pop
pop
stos
out
xor
faddp
push
jl
pop
hlt
xor
outsl
mov
pop
cmp
cmp
lods
shll
lcall
adc
das
jno
cmp
and
lds
xchg
test
or
push
call
aas
mov
inc
mov
add
push
fcomi
inc
leave
imul
call
jecxz
mov
pushl
cmp
sub
cmpl
cmp
xchg
pop
mov
push
aas
jns
in
jmp
push
mov
push
out
lret
jle
jg
xor
dec
orl
push
stc
mov
mov
ljmp
xor
ljmp
scas
add
sbb
insb
or
bnd
pop
sbb
sahf
cmp
std
call
and
ljmp
stos
das
mov
mov
mov
push
dec
xor
mov
inc
mov
in
mov
pusha
xor
push
test
mov
inc
lock
cs
scas
mov
xorl
xchg
sub
mov
aaa
bnd
cli
jnp
test
data16
loopne
jbe
dec
mov
fwait
ja
es
lahf
fwait
xchg
xor
pop
repz
fisubs
out
fstp
pop
rorl
mov
lcall
inc
xchg
dec
es
out
sahf
daa
iret
mov
stos
rcr
dec
lods
sbb
sub
outsb
cmp
or
aad
lds
daa
lods
orl
pop
ret
and
leave
adc
in
int
mov
rcrb
xlat
mov
sarl
clc
fwait
cmp
out
setno
fdivr
sbb
mov
and
lods
aaa
dec
lods
int
push
xchg
repz
push
rolb
push
cmp
dec
mov
out
test
in
jne
sahf
sub
adc
insl
in
loop
sarl
in
jecxz
pop
arpl
rcr
cmp
data16
pop
hlt
and
scas
pushl
adc
push
add
aad
fdiv
lcall
fisttpll
sbb
cld
or
repz
pop
out
addr16
push
negl
subb
adc
jae
dec
xchg
fildl
jne
cmp
sub
xchg
jnp
cmc
xlat
add
adc
scas
sbb
cmp
push
and
loopne
push
sbb
jge
push
xlat
scas
jnp
stos
xchg
and
mov
aas
scas
fwait
int
pop
ret
insb
push
aas
xor
jg
gs
cmc
sub
imul
cli
cmp
mov
xor
push
lea
cmp
push
pop
jo
push
jnp
imul
fs
inc
xchg
shll
stc
into
mov
push
out
sub
orl
sbb
push
xchg
lods
mov
mov
int
add
aas
movl
je
dec
add
push
in
stc
dec
mov
cmp
inc
icebp
ret
mov
pop
push
mov
pusha
arpl
aaa
test
ds
mov
fbld
nop
cmp
loope
mov
and
adc
pop
xor
ss
jmp
inc
mov
pop
les
imul
pop
stos
sbb
jnp
adc
jle
jae
cmp
push
imul
adc
imul
xor
xchg
push
mov
cmp
dec
aad
xlat
sbb
dec
stc
ret
incb
pop
inc
sub
inc
mov
push
mov
pushf
das
xor
xchg
push
push
xor
adc
arpl
in
icebp
lock
inc
push
cwtl
or
xchg
adc
enter
daa
rolb
mov
cmp
sbb
int
or
sbb
jno
pop
add
popf
jno
lea
jmp
rcrb
pop
push
jno
sub
aas
jp
or
cmc
cmp
mov
dec
leave
nop
test
xor
iret
rol
in
push
adc
leave
mov
stos
cmp
cmp
mov
jno
insl
or
cmp
aaa
outsb
cmp
js
dec
mov
loop
push
ret
inc
pop
mov
pop
push
mov
push
pushf
inc
sbb
lcall
pusha
inc
xchg
call
sbbb
insl
sarb
push
inc
lds
sbb
fs
cli
add
jecxz
ja
cmp
inc
mov
pop
test
in
repnz
push
push
mov
pop
dec
mov
inc
enter
test
lds
push
mov
pop
test
bound
mov
shlb
add
pusha
inc
push
ss
aam
outsb
shrb
mov
add
outsb
lret
xchg
push
or
mov
xchg
into
push
iret
test
cltd
pop
lahf
int
mov
cmp
xchg
cmp
pop
sbbb
fldl
sbb
out
pop
mov
mov
loope
inc
inc
add
and
mov
outsb
cmp
push
push
or
fs
jo
outsb
in
xlat
out
xchg
movsl
xchg
rcrl
rcl
outsb
repnz
hlt
mov
inc
mov
sbb
icebp
imul
xchg
lea
rclb
nop
or
addr16
mov
sub
pop
das
lret
repz
add
mov
sub
or
sbb
lods
mov
cmpsl
icebp
inc
shll
lock
jmp
and
cmp
jp
inc
sbb
test
push
sub
rorl
fwait
dec
add
mov
mov
xchg
inc
mov
or
insl
adc
xchg
cmpsl
sbb
cmpsl
jae
sbb
clc
adc
add
lock
pop
cmp
std
sub
jle
daa
add
sbb
cmc
stos
mov
and
xlat
cmp
jne
shll
sub
pop
mov
cwtl
lds
add
jge
mov
dec
adc
aas
adc
mov
cmp
add
inc
mov
mov
push
daa
cli
push
jp
out
rol
mov
pop
cmp
popa
rcrb
ret
notl
mov
sub
and
jle
cltd
sbb
loope
cli
test
jge
dec
cmp
es
in
push
subl
inc
jle
in
xor
fwait
movsl
fnsave
adc
xor
popa
mov
mov
jb
or
iret
leave
jo
cmp
test
xchg
dec
and
mov
jo
inc
les
mov
lret
in
add
mov
insl
cld
imul
fiaddl
push
rep
idivl
add
nopl
jecxz
jecxz
mov
sub
dec
add
or
sbb
cmpsl
mov
xchg
inc
jle
cmpsb
push
or
push
dec
push
rcrb
pop
int3
add
ljmp
cmpsb
repz
daa
lods
aad
jecxz
dec
sub
call
add
mov
mov
sbb
adc
and
cmp
cmp
pop
xchg
xlat
sub
add
push
fiadds
dec
testb
cmpsb
push
int
scas
lea
cmp
mov
push
sbb
mov
and
mov
pusha
rorb
cmp
pushf
cmp
sar
mov
clc
call
dec
push
insb
jae
lcall
or
das
mov
dec
std
xor
jo
push
inc
movsb
outsb
mov
fdivrp
cmp
push
mov
sub
std
fcmovb
cld
dec
cwtl
scas
clc
negl
pop
aad
into
and
push
arpl
xor
xchg
cmpsb
pushf
pop
ss
jp
cmp
dec
jbe
gs
xchg
mov
lret
mov
push
push
subb
add
inc
and
push
movsb
sbb
scas
pushf
out
shr
ret
inc
outsl
jae
addl
mov
mov
mov
mov
cli
push
jmp
cld
out
dec
fisubrl
rolb
jbe
lock
loop
mov
cmpsl
mov
mov
mov
data16
test
push
adc
dec
push
mov
lock
sub
sub
bound
enter
xchg
and
xor
xor
xchg
mov
daa
mov
xor
mov
cmp
rolb
sahf
and
lds
xorb
push
movsb
mov
adc
cmpsl
mov
ja
sbb
mov
sbb
dec
sbb
scas
or
loop
shlb
jmp
out
fists
mov
pop
ds
jecxz
push
sub
mov
xchg
in
fucomip
or
fwait
dec
cld
mov
aas
or
mov
aas
or
mov
imul
push
out
jmp
jecxz
inc
sbb
mov
dec
xor
ljmp
cmp
push
fwait
xlat
xchg
ss
dec
insl
imul
cmp
mov
sahf
aaa
ds
aam
or
push
ficompl
xchg
je
idivl
cmc
das
add
push
add
push
inc
mov
inc
into
cmpsb
aaa
cwtl
dec
push
and
sub
lods
test
push
mov
pop
or
mov
inc
lcall
movsb
jg
inc
insl
ret
adc
sbb
xor
hlt
ja
cli
dec
jg
aaa
push
mov
dec
je
cli
orb
push
daa
test
xchg
pop
into
push
cmp
jnp
jae
pop
adc
sub
pop
sub
adc
scas
inc
xlat
or
cmp
imul
movsl
lods
mov
imul
dec
xchg
ret
out
insb
loope
repnz
std
outsb
pop
push
mov
bound
je
gs
pop
and
popa
or
call
shlb
ret
pop
mov
arpl
xchg
and
jge
shlb
lret
and
mov
jbe
arpl
lcall
dec
adc
mov
push
sbbb
iret
inc
outsb
test
stos
add
movsl
sub
add
adc
sti
inc
insl
cmp
pop
adc
sti
jecxz
sbb
add
insb
xor
stc
push
sti
push
pop
mov
fwait
decb
orl
leave
cmpsb
push
unpcklps
cmp
and
hlt
xchg
pop
popl
xchg
popf
lcall
pop
out
push
call
test
mov
outsb
sub
jp
and
cltd
sub
test
pop
dec
mov
std
sahf
push
dec
xor
and
dec
inc
sub
shlb
in
aaa
in
sahf
and
das
iret
xor
mov
and
sbb
sbb
xchg
and
jb
sub
push
adc
addr16
ss
sar
sti
ret
lret
icebp
sbbl
iret
int
adc
add
sbb
sub
jle
add
add
bound
mov
sarb
inc
pusha
pushf
sub
xor
test
fwait
stos
inc
jne
jnp
lret
mov
ds
cmp
repz
lret
nop
xor
pop
jg
inc
inc
call
fcoml
dec
shrl
nop
jns
gs
popa
iret
fisubs
in
pushf
iret
or
jns
outsb
mov
and
xchg
cmp
xor
mov
cmp
pop
inc
popa
xchg
fdiv
mov
xor
pop
push
cmp
out
adc
mov
outsl
fimuls
jl
or
scas
movsb
push
xchg
xchg
adc
mov
lods
stos
mov
test
sbb
dec
adc
rcll
test
iretw
mov
push
ret
pop
add
inc
fs
pop
ds
stos
aas
adc
aam
dec
frstor
jae
xor
xchg
sub
push
ret
fmuls
mov
repz
and
loope
and
int
add
jle
inc
dec
cs
mov
cmp
pop
or
es
test
ret
subb
ss
fwait
das
mov
mov
jge
stc
rcrb
cs
and
mov
sub
aas
aad
rcrl
enter
push
gs
imul
cmp
sub
xchg
divb
not
shr
ljmp
cli
adc
and
mov
outsb
pop
addb
cmp
pop
and
mov
mov
out
imul
test
pop
sub
and
dec
jae
pop
mov
lods
xor
ret
cs
int
sbb
aaa
mov
or
addr16
lcall
mov
and
loope
xchg
sub
pushf
sub
rol
jae
sbb
and
call
sbb
ss
pusha
pusha
push
data16
push
xor
pop
ret
inc
adc
inc
test
dec
not
pop
pop
mov
lock
add
popf
push
jbe
push
out
xchg
dec
mov
in
mov
dec
das
sub
stos
test
fisttpl
jle
pop
fisttpl
std
add
out
fstl
imul
mov
xchg
faddp
lock
push
fisubl
arpl
int
je
sti
jno
mov
or
ficomps
popa
sub
nop
jne
insl
cmp
mov
ret
cmp
sub
popa
sbb
out
mov
xor
dec
out
aaa
pop
arpl
int
pop
test
jne
xor
lods
add
fwait
inc
call
les
std
jle
dec
arpl
fisubrl
and
sbb
or
xchg
aaa
fs
es
in
xor
cmp
shlb
cmp
ja
dec
inc
pop
xchg
mov
cmpl
jecxz
cmpb
rcrl
ss
cmc
and
pop
dec
xchg
repnz
xor
gs
pop
xor
xchg
adc
in
adc
cld
in
jle
int3
sub
cmp
movsb
cmpsl
cmp
xlat
or
decl
or
stos
sbb
movsl
adcb
daa
jo
dec
scas
xchg
push
xchg
xlat
sbb
insl
mov
je
orl
sub
enter
cmpsb
rcrl
data16
pop
pushf
lahf
jl
sub
mov
rorl
scas
add
movsl
mov
mov
pop
xor
scas
mov
test
stos
cmp
int3
imul
push
sub
imul
mov
push
mov
adc
and
std
xor
xor
repnz
aas
aaa
call
es
popf
sub
add
lds
sub
imul
nop
jbe
or
divb
push
gs
mov
jl
lcall
pop
pop
bound
test
shll
jl
sub
paddw
or
dec
mov
add
into
pop
and
movsl
add
lock
aam
pusha
andl
or
push
cmpsb
inc
leave
incb
sub
pop
shrl
push
flds
mov
daa
test
mov
addr16
es
clc
outsl
stc
cmp
cmp
lock
frstor
xchg
push
push
sbb
add
bound
std
mov
ret
push
shl
daa
adc
jbe
lahf
xlat
cli
stc
sbb
scas
popf
leave
mov
adc
aaa
cmp
leave
mov
push
hlt
mov
mov
jecxz
mov
std
imul
sbb
stc
addl
mov
push
test
pop
std
rcrl
sub
fisttpll
sub
inc
mov
lods
mov
scas
adc
mov
mov
mov
ficoms
icebp
push
and
testl
cmpsl
loope
loop
sub
mov
adc
dec
aad
push
shlb
dec
xor
mov
sub
cs
mov
fs
xlat
adc
mov
nop
loop
jno
mov
je
cli
rolb
les
push
pop
xchg
fisttpl
stos
and
cwtl
sti
mov
inc
adc
lahf
xchg
jno
jo
push
xchg
or
adc
aaa
fisubrs
xchg
fcoms
xchg
andl
je
stos
les
inc
xchg
mov
cmp
aas
loopne
push
add
aaa
mov
cmpsb
mov
mov
test
jo
pop
fdivrs
mov
das
lods
lcall
pop
adc
adcw
cs
cmp
out
jecxz
jo
mov
sub
xorb
lods
mov
mov
dec
out
iret
insl
xor
nop
push
divl
lret
jae
sbb
insb
add
jecxz
mov
mov
loopne
push
fistl
dec
stos
and
mov
cmpsb
int3
imul
lds
add
add
jns
push
data16
icebp
fists
jl
int3
pop
bound
xchg
andb
loopne
notl
push
and
sti
aam
mov
jle
mov
cld
push
xchg
mov
push
mov
xchg
push
pop
and
nop
lds
fwait
pop
jecxz
sbb
fldt
jge
pop
in
add
aam
data16
stos
pop
pop
call
or
js
mov
xor
lds
aaa
mulb
pop
dec
movsl
add
pop
lcall
mov
mov
add
sbb
mov
sbb
inc
das
and
dec
push
push
out
push
loop
cmp
mov
fst
mov
std
sbb
xchg
push
addr16
pop
jp
pop
fnstsw
sbb
adc
fstl
pop
xor
xchg
sub
mov
inc
adc
lea
push
dec
inc
dec
or
push
adc
lock
add
mov
mov
fistpl
inc
rorl
sub
insb
pop
cmp
or
add
pushf
mov
adc
stc
add
in
adc
fstl
adc
pop
or
movsb
mov
rcrl
mov
inc
test
xchg
cmc
aaa
adc
cmp
add
sub
jo
shll
icebp
andb
adc
xchg
lcall
add
mov
mov
and
leave
jg
mov
xchg
nop
or
in
adc
xor
sbb
dec
jb
fists
inc
stc
sti
xchg
xor
mov
stos
push
xchg
mov
loop
ret
push
jnp
add
inc
mov
cmp
pop
out
in
lcall
push
dec
movsb
popf
addr16
or
leave
int
xor
cwtl
ret
mov
testl
or
imul
and
aas
test
dec
push
nop
call
dec
call
mov
cmpsb
rclb
mov
jge
pop
and
fs
sbb
lds
or
int
push
nop
scas
in
std
loop
and
stos
leave
stos
jno
mov
jno
push
jmp
push
mov
loopne
imul
xor
pop
xchg
jp
insb
rclb
pushl
jl
lret
ljmp
inc
clc
add
aas
or
jne
data16
test
jbe
mov
xchg
fst
dec
push
and
or
sub
mov
xchg
out
cmp
lcall
sti
imul
sub
nop
ret
lcall
in
pop
jmp
pusha
push
scas
and
mov
in
pop
push
test
stc
pop
jp
jle
iret
stos
jnp
mov
or
lret
scas
push
lods
pop
mov
fisubrl
cmpsl
mov
jecxz
jbe
dec
xchg
lret
jmp
mov
in
stc
dec
lods
or
sub
xchg
bound
sub
imul
inc
rcll
scas
loope
out
jecxz
stos
add
cmpsl
cwtl
sbb
dec
jno
jg
mov
mov
in
dec
sbb
cli
pop
insl
jp
lahf
and
jmp
fs
outsl
mov
lcall
sub
xor
jno
rol
mov
iret
jg
sub
insb
mov
mov
es
or
dec
mov
mov
rcrb
les
aad
ret
addb
movsl
or
into
pop
jge
mov
jb
jo
shl
sbb
pop
shlb
jge
mov
sub
or
pop
daa
mov
stos
add
idiv
cmp
pop
and
lahf
xchg
dec
movsl
mov
inc
ss
sbb
loopne
mov
imulb
jo
mov
push
mov
aad
jp
inc
mov
jns
pusha
repnz
inc
mov
or
scas
pushf
push
push
mov
jp,pn
push
mov
in
lret
sub
xor
mov
sbb
mov
out
jnp
cmp
dec
stos
lods
lret
lahf
xorl
mov
pop
mov
lret
cli
push
push
lret
outsl
adc
in
inc
nop
push
mov
fisttpll
xchg
jns
sahf
addl
ror
adc
or
das
and
xor
inc
dec
xchg
mov
cmp
orb
cld
inc
cs
aaa
push
mov
cmp
jp
add
mov
or
mov
dec
loope
xor
push
dec
div
jns
inc
ss
in
adc
xchg
lret
mov
stos
cltd
or
pop
aas
fisubrs
imul
fsubs
jl
popa
cmpsl
xor
and
jl
push
lcall
imulb
cld
bound
ja
or
push
iret
mov
sub
inc
sbb
push
dec
test
repnz
fs
repnz
movsb
mov
stc
aad
orb
lods
xor
mov
adcb
mov
fadds
daa
sbb
mov
push
mov
rorb
jo
lcall
push
insl
scas
fidivrl
and
cmpsl
fistl
aam
call
bound
gs
in
sbb
addr16
lods
adc
push
xchg
scas
sub
mov
lret
jg
xor
pop
jns
loope
sbb
mov
lods
aam
stc
bound
lods
sbb
sub
push
arpl
add
inc
xchg
sar
int
sub
sbbb
lret
adc
shl
popa
inc
sub
out
lds
es
jecxz
in
lea
push
cmp
mov
bound
aaa
pop
leave
push
rcrl
and
int3
add
and
lret
sbb
sbb
out
inc
mov
and
push
mov
shl
loope
nop
push
or
pop
popa
stc
lock
push
xor
das
pusha
scas
inc
mov
pop
pop
or
out
addr16
mov
cmc
outsb
mov
inc
jns
add
sub
scas
imul
push
mov
sbb
inc
dec
sub
in
inc
stos
pop
or
sbb
xlat
add
repz
adc
mov
popf
xchg
pusha
into
stos
shrb
push
mov
aam
add
ret
sarl
imul
iret
sbb
loop
cld
shlb
js
mov
stos
xor
es
or
sub
and
lods
pop
stos
pop
rorl
cmpsl
pop
xchg
push
mov
mov
aam
insl
adc
mov
pop
push
mov
push
sub
add
ja
cmpsl
loope
iret
sub
pop
adc
jb
fimuls
dec
mov
push
dec
cmpsb
inc
mov
enter
push
sbb
jo
lea
in
push
mov
push
lock
outsb
pop
fisubl
and
cwtl
and
push
test
aas
sbb
jecxz
loopne
in
sbb
sub
shll
aas
cmc
push
dec
ret
adc
in
mov
adc
dec
mov
wrmsr
adc
pop
ja
mov
fidivrs
jae
pop
addr16
lret
fldl
sbb
js
fnstenv
mov
push
cmp
movsl
je
sub
mov
pop
fisttpl
insb
push
cmp
jb
ja
out
push
or
jg
into
mov
inc
or
xor
jl
bound
mov
jecxz
les
xchg
push
test
lcall
test
sub
cmp
dec
lret
jmp
jmp
mov
mov
pop
bound
sbb
adc
clc
daa
mov
loop
xor
jo
out
outsl
repnz
mov
mov
xlat
push
pop
sbb
movsb
mov
into
adc
les
icebp
inc
mov
subb
add
xor
es
rcl
test
out
out
subps
sbb
push
les
ss
loop
aaa
jg
adc
dec
inc
add
pop
mov
mov
jb
les
cmp
fmul
in
sub
cmp
add
mov
jne
inc
lds
xor
jo
aas
test
xchg
arpl
iret
xchg
inc
and
insl
dec
jbe
sarb
cmp
xchg
inc
push
pop
in
mul
enter
push
sbb
bound
xor
mov
out
dec
fidivs
clc
gs
sbb
mov
sub
fistpll
push
mov
data16
xor
ja
push
xor
dec
sub
jbe
add
cli
es
xor
pushf
cld
pop
ds
mov
into
dec
imul
ret
xchg
repnz
and
test
fisubrs
pop
mov
leave
popa
xor
icebp
call
andb
xor
cmp
push
cltd
xor
rol
pop
sbb
jb
es
call
pop
std
push
shrb
out
lahf
dec
aam
jp
inc
out
cwtl
aas
cmc
xlat
sbb
jle
popf
imul
jmp
repz
jb
push
sarl
mov
data16
jmp
and
or
jmp
je
arpl
js
sbb
lret
xchg
inc
sub
xchg
cltd
sub
mov
xchg
push
adc
into
cltd
test
fcomps
pop
xchg
sti
shlb
adc
repnz
aaa
xor
dec
out
sub
movsl
int3
popf
and
call
lods
jno
jbe
pop
cmpsl
dec
mov
adc
push
sbb
mov
js
xor
inc
ljmp
dec
jmp
xor
sti
inc
popa
int
movsl
xor
pop
mov
sahf
into
and
insl
mov
loopne
add
test
roll
popf
inc
std
push
mov
cmpsl
popf
or
out
test
ds
add
cmp
fisubrs
mov
insb
jne
imul
jp
sbb
jmp
mov
push
iret
movsb
push
pusha
or
ret
sub
jmp
in
push
pop
scas
call
mov
movsb
insl
inc
outsl
pop
xchg
add
cmp
rclb
packssdw
out
mov
stc
shlb
sbb
cltd
mul
or
ljmp
repz
sub
test
xor
xchg
js
scas
xor
out
push
sbb
and
call
xor
mov
pushf
fstps
add
fnstenv
fcompl
xchg
scas
push
add
test
pop
mulb
xchg
dec
mov
data16
in
call
leave
mov
stos
push
jnp
cmp
insl
filds
xor
mov
adc
cmp
push
out
iret
or
dec
mov
dec
out
sub
cmp
in
xor
cmp
lods
inc
cmc
xchg
test
cltd
mov
cmc
mul
adc
or
mov
jae
cmp
cld
add
cmc
sub
mov
leave
clc
pop
xor
mov
adc
add
xor
mov
imul
jae
mov
outsl
mov
mov
or
in
lds
inc
adc
adc
pop
push
push
sarl
imul
cmp
xchg
mov
push
sbb
mov
adc
gs
orl
dec
mov
dec
int
push
pop
lds
xchg
andb
xchg
rorl
outsl
js
stos
insl
xor
mov
push
push
loope
movsb
testb
out
mov
sub
adc
sbb
divl
cwtl
std
mov
push
in
gs
pop
mov
in
xor
cs
scas
push
lods
dec
adc
je
js
jnp
xchg
cmp
push
cmp
test
cwtl
shll
enter
pop
movsb
ja
cltd
jbe
mov
xchg
sub
xchg
in
out
dec
outsb
shl
push
sub
cmp
inc
in
jnp
fildll
outsl
inc
cmp
cmpsb
inc
mov
xchg
mov
popf
dec
pop
pop
or
xor
mov
inc
and
hlt
pop
lret
jne
mov
cmp
pop
fdivl
aas
push
aaa
cmp
mov
lods
mov
loop
dec
test
xchg
lock
pop
pop
lds
xchg
mov
mov
mov
das
fstpl
inc
inc
and
adc
mov
cmp
push
xchg
pop
ss
shlb
scas
pop
cmp
dec
fidivrs
dec
nop
jo
jmp
stc
outsl
and
jae
dec
and
ret
ss
hlt
jl
test
and
adcl
and
ss
lret
outsl
xchg
int
jb
mov
pop
push
lret
xlat
push
jmp
fsubr
pop
pop
outsb
insb
add
ret
out
ds
add
push
lock
push
mov
lds
dec
neg
enter
popa
in
add
rcrl
in
rorl
mov
cwtl
push
dec
clc
pop
mov
out
and
push
bound
in
mov
test
das
inc
jle
push
mov
hlt
test
in
js
sub
mov
das
pop
pop
insb
orl
jbe
ret
mov
add
sbb
lock
jecxz
xchg
xchg
mov
data16
mov
mov
sbb
and
dec
iret
test
je
cmp
repz
pop
out
jns
je
sub
push
sbb
push
jge
or
nop
jns
and
lods
xor
rcrl
sbb
sbb
pop
mov
lea
mov
popf
fisttpll
and
jo
mov
sbb
inc
test
stos
and
into
imul
out
cmp
icebp
das
or
mov
shlb
stos
hlt
mov
lret
jno
mov
fiadds
xor
sub
lret
mov
loopne
fldcw
mov
out
sbb
cs
mov
mov
fimuls
xchg
lds
adc
dec
xchg
hlt
hlt
aaa
jb
jns
mov
hlt
lahf
dec
rcr
and
inc
pop
xchg
and
mov
in
jb
adc
jecxz
mov
dec
arpl
mov
cmpsb
cmp
mov
int
and
adc
adc
lods
and
outsl
jge
cmc
bound
int
idiv
out
pushf
rolb
sti
pop
pop
outsb
lods
scas
xor
sub
jge
neg
dec
cli
shlb
insl
pop
xor
adc
aas
daa
sub
loope
sbb
jge
int
aam
shrl
and
fwait
das
pop
lret
mov
orb
cmp
xor
insb
mov
imull
pusha
test
cmp
xchg
mov
ss
mov
lods
in
movsl
js
ret
stos
ficompl
pop
xchg
in
jmp
gs
insl
add
lret
popf
jge
sarb
outsl
lea
fisubrs
mov
rorl
push
dec
jnp
imul
aam
pusha
andl
ds
sub
es
mov
push
sub
push
add
stos
inc
xchg
cmp
stos
inc
cmp
add
shll
je
sub
fnstsw
imul
cmp
test
sahf
cmp
mov
call
scas
leave
and
pop
test
push
push
pop
pop
pusha
mov
adc
ljmp
inc
lret
sbb
jae
adc
jmp
cmpsl
push
dec
xor
push
dec
push
push
popf
test
sbb
je
inc
xor
and
and
dec
cmpsl
add
ret
pop
cli
and
sbb
addr16
fwait
repz
pop
ret
arpl
mov
cmc
shlb
jae
imul
adc
sbb
sub
ljmp
mov
iret
and
int3
loope
out
mov
jp,pt
push
test
sarl
jbe
and
push
adc
int3
jo
sub
pop
xor
lods
addr16
sub
mov
aam
stc
or
push
orb
and
ja
pushf
mov
scas
cmpb
fistpl
imul
mov
pop
jmp
inc
int3
dec
jno
insb
fistpl
xlat
data16
loope
mov
subl
jmp
sub
mov
push
leave
and
lret
xlat
iret
or
les
jp
fnstsw
fbstp
js
sbb
ret
je
push
dec
pop
int3
xor
stos
adc
mov
repz
jge
jne
adcl
xchg
addr16
xlat
inc
mov
repnz
and
stos
mov
push
xor
mov
or
or
xchg
mov
out
les
hlt
push
icebp
xor
clc
mov
xor
es
fsubr
or
cmpsl
add
sbb
mov
add
mov
cmpb
sbb
cmp
sub
sti
shll
add
add
mov
lahf
inc
shlb
pop
sahf
js,pt
fs
mov
pop
mov
mov
imul
inc
cmp
popa
loope
inc
xchg
xor
pop
mov
cmp
xor
dec
pop
lock
pop
dec
pop
sar
xchg
mov
data16
data16
into
or
adc
mov
dec
and
sub
lcall
sub
frstor
add
dec
push
in
lods
jnp
push
lret
mov
mov
adc
out
arpl
gs
ja
in
push
pop
test
mov
add
shl
cli
lock
movsb
dec
xchg
add
jmp
aas
push
sub
test
dec
aad
cmp
jg
mov
test
lods
mov
or
iret
icebp
add
mov
inc
ret
push
gs
and
bswap
push
and
xor
ret
dec
xor
insl
push
push
cmc
test
scas
stos
pop
data16
jns
pop
inc
fs
lds
popa
cmp
pop
or
vcvtdq2ps
mov
jmp
and
fcmovnu
insl
and
imul
or
popa
inc
dec
cmp
pop
ds
push
orl
mov
inc
bound
stc
push
jno
pop
sbb
out
cmc
add
imul
insl
pop
sub
bound
jae
xchg
adc
mov
push
frstor
push
cmp
mov
jno
iret
incb
mov
jmp
daa
sti
loopne
sahf
pop
int
insl
fdivrp
hlt
mov
jbe
xchg
jmp
sbbb
xchg
flds
aas
xor
xchg
push
pop
loopne
enter
cli
mov
daa
stc
cwtl
ret
imul
xchg
pop
mov
jp
adc
lods
jnp
shr
mov
cmp
fs
iret
jmp
jmp
rcrl
mov
pop
push
lock
mov
sarl
mov
cld
aaa
xor
test
mov
adc
or
pop
inc
jbe
stc
dec
push
outsb
push
or
and
notl
in
sub
rclb
push
xchg
sbb
xor
in
or
lcall
push
inc
lcall
xchg
lahf
inc
jge
mov
fsub
loope
neg
negl
mov
and
inc
fwait
insb
push
mov
dec
imul
inc
pop
mov
sbb
insb
in
mov
xchg
xor
jg
lds
adc
addb
icebp
mov
paddw
lret
not
nop
shll
push
sahf
jmp
xchg
xchg
outsb
rcl
outsb
or
popa
dec
dec
pop
pop
pop
cmp
pushf
cmpsb
stc
movsb
or
out
xchg
lahf
insb
mov
xchg
imul
lods
and
pop
dec
inc
pop
insl
outsl
daa
fsubrl
ror
sarl
mov
push
xchg
xchg
cmp
shrb
cmp
xor
adc
push
ljmp
arpl
stos
cmp
adc
xchg
push
cmc
in
push
or
or
pop
jo
pop
sahf
jg
mov
ja
add
mov
and
data16
rep
sahf
jg
add
fsubrl
dec
arpl
call
and
adc
cwtl
punpckhbw
call
shlb
arpl
xor
pop
js
jb
sbb
push
es
xor
xor
cld
mov
pop
out
mov
addb
aaa
repz
mov
pop
out
cli
or
outsl
mov
lea
and
fnstsw
dec
iret
mov
inc
sub
rolb
scas
insl
jno
push
jecxz
xor
sub
lods
jmp
mov
push
jmp
add
add
stos
cmp
stos
pop
lds
aad
outsb
xor
dec
pop
aas
gs
cli
sbb
dec
cmp
and
in
aad
add
pop
or
out
sub
xchg
xbegin
int
fisubs
dec
in
cmpsb
lret
sbb
jecxz
xor
xchg
mov
jb
dec
cmpsb
loop
scas
push
mov
jg
jae
xor
fs
mov
push
fdivs
popf
xor
dec
lds
fimuls
loopne
pop
pop
sbb
or
sbb
stc
imul
cmpsb
cmpsl
mov
outsb
mov
pop
lock
mov
loopne
and
sbb
stos
hlt
daa
dec
pop
pushf
lret
in
not
mov
rcrb
add
inc
lret
movsl
clc
mov
fcomp
mov
push
dec
ret
pop
mov
cmc
pop
jmp
test
into
jns
xor
pop
subb
imul
push
mov
sub
jmp
mov
fbld
sbb
mov
les
mov
pop
test
shlb
or
push
xorb
cmp
jmp
ljmp
xlat
and
orl
fisttps
movsb
cld
cmp
xor
add
xchg
mov
fmul
popf
cmp
inc
sbb
movsb
mov
mov
jp
mov
adc
lret
push
fstpl
imul
sbb
jae
mov
loope
push
out
stos
push
mov
fisubrs
pop
daa
push
arpl
xchg
mov
aad
add
mov
mov
dec
sub
dec
fstps
and
in
icebp
push
out
push
hlt
cmp
jbe
dec
and
cli
dec
lds
shl
cmp
pop
sub
inc
clc
ljmp
xchg
jge
test
jno
xchg
pcmpgtb
sub
jbe
push
into
daa
cld
inc
loopne
cwtl
sub
lock
lret
int
mov
pushf
inc
int
ret
dec
lock
xchg
call
inc
fwait
mov
leave
or
jb
in
adc
leave
jne
cmp
sbb
and
movsl
loop
imul
movsb
xchg
repz
mov
or
pop
xchg
js
xchg
aaa
pop
add
stos
adc
or
cmpsl
adc
jp
and
popa
les
add
mov
pop
addb
push
push
jmp
scas
adc
jle
pop
test
mov
int
xchg
mov
adc
sub
pop
push
xchg
int3
cmpsl
pop
and
mov
mov
sbb
in
das
aam
push
lea
test
xchg
push
push
jo
lods
or
sub
cmc
icebp
sub
dec
mov
stos
fcmove
jo
test
xchg
lret
ret
sub
fs
sbb
mov
fnstsw
xchg
inc
nop
into
jno
aas
xchg
dec
bound
or
and
xor
xchg
jmp
sub
pop
cltd
fwait
dec
xlat
fdivrp
adc
and
shlb
pop
aad
push
pop
xlat
mov
neg
lods
imul
fnstcw
std
into
jno
pop
test
test
pop
jbe
mov
cld
cli
into
int3
mov
test
pusha
mov
hlt
js
ret
inc
mov
sbb
cmp
dec
push
rorb
out
dec
push
xor
xchg
cmpsb
xor
sbb
push
sbbl
adc
test
outsb
jnp
movsb
lds
outsb
arpl
or
scas
faddl
into
mov
sbb
push
add
dec
push
sub
cmp
addr16
aaa
xchg
sub
into
mov
notl
fwait
popa
enter
push
sbb
fnstsw
outsb
lcall
and
push
sarl
add
das
fsubrl
popf
or
rcrb
sub
xchg
xor
xlat
lahf
mov
mov
pushf
sub
push
sub
std
loope
dec
je
adc
outsb
inc
xorl
cmc
movsb
jne
push
icebp
cmpb
push
rcrb
jo
lret
insb
xchg
or
js
cmp
push
pop
xchg
push
repnz
aas
fs
jle
insb
sub
mov
xorl
sub
inc
mov
sub
xor
movsl
popa
filds
mov
test
add
jns
insl
test
inc
push
xchg
add
sti
and
xor
cwtl
jo
fwait
hlt
adc
or
mov
insl
aad
bound
add
mov
std
lcall
jl
rorb
and
insb
cmp
adc
rcll
pop
iret
scas
addr16
pop
add
pop
repz
push
fisttps
shr
jl
lahf
xor
adc
dec
xrelease
cmp
adcb
fidivs
mov
sbb
imul
xor
lcall
fs
idivb
inc
stos
mov
push
jbe
push
aam
xor
xchg
dec
mov
add
cld
stc
jno
cmpb
int
xor
or
imull
repz
mov
pop
stos
push
pop
xchg
push
or
dec
mov
in
mov
fbstp
movsb
adc
out
sub
mov
imul
xlat
push
and
inc
push
mov
lcall
int
adc
out
add
adc
and
jecxz
adc
mov
std
lds
jo
xlat
cmp
sbb
ljmp
dec
mov
cmpl
xchg
jg
movsl
or
push
mov
iret
push
dec
sub
subb
cmp
add
cli
jo
leave
pop
leave
xorl
xor
in
mov
push
adc
mov
sub
pushf
or
gs
les
mov
dec
lea
test
adc
int
outsl
movsb
lfs
jb
push
movsl
pushf
ret
jbe
lock
outsb
int3
adc
xchg
call
jle
inc
ret
jp
jmp
jae
sbbl
sbbb
xor
dec
dec
xchg
xchg
les
mov
mov
ror
jmp
lds
inc
add
pop
addb
int3
pop
jno
mov
xchg
repnz
pop
test
mov
cmp
out
cwtl
dec
out
dec
cmp
outsl
xchg
mov
adc
or
mov
mov
pop
jg
sti
mov
lret
push
push
sub
sub
test
jae
dec
dec
lret
lcall
arpl
add
in
out
mov
push
sbb
jno
xchg
adc
mov
dec
ret
dec
cmp
lret
xchg
sbbl
setp
xchg
jb
es
testl
leave
adc
lahf
and
sbb
xor
or
mov
jbe
ret
nop
or
push
adc
pop
cld
or
mov
mov
and
movsl
add
sbb
pop
scas
xchg
lds
test
inc
pop
xor
jp
push
ljmp
aaa
sub
iret
cld
bound
hlt
and
in
and
sbb
add
test
ret
jp
push
shr
pushl
xor
inc
inc
faddl
je
sbb
popf
loopne
push
mov
fstps
pushw
test
loope
dec
sub
insl
repz
imull
mov
push
mov
push
mov
xor
ret
add
mov
mov
js
ljmp
or
pop
loop
xor
lds
stos
loop
xchg
push
into
leave
test
xchg
mov
aad
imul
ss
adc
jns
xor
add
cmpsb
loopne
mov
test
xchg
and
leave
ret
push
xchg
aaa
outsl
jbe
sbb
pop
jo
mov
xchg
in
push
stos
sbb
and
adc
hlt
lcall
mov
add
sbb
lret
outsl
dec
cltd
mov
sbb
insb
je
jmp
jl
stc
xchg
ret
jmp
popf
shrl
push
lea
lret
subb
push
push
xorl
shll
mov
adc
out
dec
ljmp
inc
arpl
lods
xor
dec
clc
jl
iret
adc
pop
add
outsb
js
dec
push
outsb
push
outsb
add
sbbb
adc
jecxz
mov
inc
mov
sbbb
ficomps
test
dec
jge
or
mov
les
in
pop
pop
add
jbe
in
dec
rolb
cmp
jmp
xlat
push
sbb
into
mov
stc
inc
imul
int3
inc
mov
icebp
push
mov
fs
xchg
xchg
lahf
int
lods
mov
insl
add
in
lret
xor
adc
loopne
add
xor
mov
sti
pusha
dec
cmp
fcoml
pop
cmp
adc
mov
lods
aas
jecxz
or
mov
mov
dec
push
pop
sti
push
fdivrs
add
scas
push
addr16
inc
movlps
pop
sub
aaa
das
xchg
fldl
cld
and
in
sbb
cmp
enter
in
das
jae
cltd
xchg
cltd
lock
dec
mov
ja
xchg
mov
nop
fldenv
pop
inc
cwtl
je
jo
push
pop
sahf
shrl
xchg
movsl
mov
add
testb
xlat
xchg
and
int
jl
jnp
mov
cmp
rol
push
into
adc
stos
mov
cmpsl
pop
lret
pop
xchg
dec
lahf
or
sub
jg
xchg
xchg
sub
mov
mov
or
and
push
stos
xchg
rorb
es
xchg
cld
cmp
test
ss
push
dec
mov
div
xchg
lcall
pop
inc
add
push
nop
lea
imul
adc
testl
enter
sar
mov
mov
aad
adc
test
xchg
pushf
inc
jp
es
dec
imull
cli
dec
mov
pop
sahf
adc
sbb
sbb
xlat
sbb
inc
adc
daa
jae
jae
and
push
divl
mov
pop
cmp
cmpsb
pop
mov
fsts
add
addr16
mov
jecxz
jnp
mov
push
adc
inc
stos
xor
aas
lahf
inc
mov
jmp
jmp
leave
data16
xchg
test
std
scas
or
int3
repz
leave
or
or
mov
push
inc
add
mov
hlt
out
xchg
add
or
and
mov
inc
test
inc
clc
cmp
mov
sti
shr
pop
popa
or
das
jl
faddp
xor
in
mov
mov
xchg
lea
popf
popf
mov
loop
xchg
cmp
xchg
pop
adc
out
sub
xor
movsb
enter
movsl
cli
jnp
fisttpl
scas
mov
out
inc
pop
mov
and
divb
push
xor
fs
popf
mov
xor
pop
adcb
jne
jbe
popa
dec
cs
push
scas
mov
arpl
mov
xor
mov
ja
fsubr
sub
cmp
enter
xchg
sti
sub
imul
nop
push
and
add
in
mov
sub
stos
mov
and
push
pop
pop
int3
loope
adc
pop
pop
dec
pop
adc
mov
mov
mov
pop
testb
push
jbe
lcall
into
inc
and
cltd
call
push
sbb
imul
addr16
insb
clc
pushf
jbe
into
sbb
and
ljmp
mov
xorl
cwtl
idivl
mov
dec
lret
xchg
daa
jbe
and
call
or
xchg
jnp
cmp
inc
mov
jae
sbbl
or
ret
fsts
cmp
or
fnstenv
sbb
dec
mov
push
jns
adc
jl
and
mov
adc
fbstp
jecxz
push
icebp
lods
pop
roll
dec
mov
in
and
push
imul
add
pop
jecxz
jno
inc
adc
aad
xlat
xor
or
cli
fdivl
adc
or
add
lea
mov
aam
lds
mov
mov
out
mov
mov
or
lcall
sub
xchg
js
dec
xchg
mov
outsb
lahf
xor
jne
lock
push
mov
test
dec
ds
xchg
mov
push
jge
xchg
xchg
pop
mov
bound
pusha
mov
jecxz
pop
jmp
xchg
mov
leave
push
pop
jmp
add
jmp
pop
fnsave
cmp
or
push
jge
mov
sub
xor
jl
pusha
and
mov
mov
mov
ljmp
push
xlat
loopne
inc
ficoms
call
outsl
repnz
jecxz
clc
or
xor
out
and
nop
dec
scas
sub
je
cmp
inc
sbb
ret
sub
int
or
ret
mov
push
call
aad
jecxz
js
data16
dec
and
jo
lock
cmpsb
leave
xchg
ja
mov
add
sub
jno
or
movsb
int
jbe
push
sub
or
jge
mov
and
xchg
cmpsl
push
in
jne
stos
cmova
or
je
pop
push
fnsave
push
ja
lahf
pop
jge
mov
outsb
jmp
fmuls
jb
or
mov
mov
and
in
aas
cmpsl
mov
mov
xchg
scas
or
cld
mov
imul
insb
or
dec
insl
mov
in
push
inc
rolb
inc
pop
aam
and
fwait
jmp
or
shl
sarl
out
mov
fistl
inc
fisubrl
cmpsl
or
rclb
sbb
adc
mov
out
and
outsb
insb
pop
pusha
push
xchg
idivb
movsb
jp
popf
int
push
mov
adc
shrb
mov
into
cld
repnz
stos
inc
mov
xorl
xchg
pop
inc
jle
mov
mov
inc
dec
aaa
xchg
aas
mov
mov
fucomi
pop
popf
fmuls
lcall
into
lea
sti
decl
or
jecxz
lock
out
sub
or
shl
iret
inc
roll
sbb
adc
in
out
mov
sub
add
sbb
fmul
jnp
movsb
mov
test
aam
mov
add
cld
or
pop
stos
stc
fistps
jns
sbb
inc
or
into
and
mov
pop
fbld
pop
fnstcw
xchg
pusha
aaa
aaa
xchg
jg
push
in
ficoms
call
adc
int
les
cmpsb
sub
arpl
fs
imul
movsl
or
jmp
call
jmp
pop
or
addb
pop
ds
sahf
test
test
lahf
xor
mov
call
adc
dec
pop
dec
mov
xchg
gs
mov
sub
or
mov
dec
or
test
mov
pusha
movsl
sti
push
mov
imull
mov
jno,pn
insl
sub
sub
fwait
in
xchg
jecxz
enter
sbb
pushf
imul
das
test
in
lods
fcmovbe
inc
popf
push
loope
cmp
sbb
cli
sbb
sub
enter
jne
jnp
sub
sub
xlat
in
movsl
test
xchg
pop
ds
ret
mov
jne
fdivr
jl
int3
adc
xor
bound
shr
je
xchg
frstor
mov
bound
dec
loop
in
xchg
pop
adc
dec
out
add
call
mov
stos
xchg
int
push
testb
xchg
lods
testl
dec
pusha
in
out
outsl
fdivrl
or
addr16
pop
das
testl
xchg
xor
dec
sti
dec
jbe
jge
aam
xor
push
insl
and
stc
insb
imul
test
popf
sub
pusha
mov
call
cmp
jp
mov
test
push
lds
test
aas
sub
iret
adc
mov
cld
pusha
repnz
jge
push
or
aaa
aad
xlat
lret
xor
addr16
aaa
aas
testb
xchg
adc
out
test
dec
pop
out
mov
xor
test
popa
push
jecxz
shll
out
call
push
pushf
cmp
and
sub
mov
sub
out
inc
jne
fucomi
inc
xchg
insl
lods
xor
leave
sti
or
mov
inc
inc
mov
pop
rclb
mov
das
pop
jmp
rorl
stc
pop
hlt
jmp
pop
cs
fcoms
pusha
cmp
cvtdq2ps
fstl
std
push
scas
mov
in
cmp
fidivl
jl
iret
adc
fwait
push
inc
mov
roll
dec
inc
sti
arpl
adc
arpl
cmp
cli
test
jnp
es
xchg
jmp
ja
fdivr
sbb
push
push
jnp
adc
test
xchg
jo
jo
adc
nop
test
lret
gs
xchg
inc
sbb
orl
sarl
xchg
clc
call
lods
sbb
adc
add
inc
xchg
pusha
scas
enter
xor
and
in
xor
sub
clc
xor
sbb
in
xor
or
inc
adc
and
xor
or
sbbl
cmp
jo
addr16
bound
jae
pushl
add
lods
mov
je
mov
pop
into
xor
cmpl
pop
or
adc
cmpsl
leave
movsl
cld
mov
test
in
adc
out
ljmp
xchg
inc
mov
sahf
outsl
int3
inc
jo
jl
inc
push
adcb
jl
pushf
mov
outsl
cmp
je
jo
rcr
stos
cs
shl
in
loopne
mov
push
sahf
mov
cmp
sub
into
vsqrtsd
in
jnp
in
addr16
cmp
in
aad
adc
mov
jns
push
int3
fcoms
fimuls
rol
jns
xchg
shlb
into
bnd
sub
jmp
push
icebp
jle
addb
cli
xchg
dec
in
adcl
js
mov
mov
out
div
cmp
lods
jl
add
cmc
lods
pop
bound
stc
lods
out
add
mov
adc
add
decb
fsubrl
daa
rcrb
fsubp
push
rcrb
push
pop
mov
lock
sti
movsl
dec
shrw
cli
jmp
popf
aad
inc
mov
repnz
jb
xlat
scas
loop
sub
push
fldenv
cmp
pop
cmpsl
jp
pop
add
adc
mov
fidivrl
fwait
adcb
out
in
fwait
adc
aas
ret
stos
xor
and
mov
ja
add
jb
adc
ret
jo
sbb
mov
xchg
inc
dec
add
pop
adc
mov
stos
inc
cwtl
fucom
xchg
aaa
cmp
out
add
adc
cmpsb
jbe
push
fmull
loop
popa
popf
jbe
or
inc
add
adc
adc
addr16
negb
mov
popa
push
das
push
fnstenv
dec
dec
sti
arpl
fwait
aaa
sbb
stc
cmp
in
xor
sti
cwtl
mov
test
stos
fwait
cmpsl
repnz
fnstenv
cmp
jb
mov
lret
stos
and
imul
xorps
push
in
call
pop
or
icebp
cmp
or
adc
imul
fadds
popf
outsb
add
adc
ret
push
or
jmp
mov
pop
mov
ds
movsl
fstl
fmull
scas
imul
push
or
rcr
adc
jmp
mov
leave
sti
stos
sub
xchg
movsl
sub
jae
cmp
mov
fs
divl
cli
sub
sub
mov
movsl
mov
mov
fisubrl
sbb
jmp
outsb
and
mov
xorb
adc
jo
or
popf
daa
mov
or
fs
adc
dec
or
nop
stc
push
pop
shll
gs
dec
pop
mov
sti
sbb
pop
inc
cwtl
cwtl
xor
mulb
aam
cld
hlt
jmp
icebp
ljmp
xchg
push
adc
or
mov
lret
fidivrl
cmp
rol
decl
push
das
sti
jbe
and
xor
mov
dec
mov
xchg
dec
dec
jg
rcr
les
stos
sub
sub
lds
ret
test
pop
vaesimc
addr16
mov
add
out
fimull
out
mov
cmp
pop
push
cmp
push
mov
xchg
lcall
arpl
mov
xor
sbb
sbb
mov
add
sarl
data16
xchg
loop
jno
lock
js
pop
mov
adc
fs
cmp
int
icebp
cs
lods
fisubl
fstpt
push
jb
pop
aas
or
scas
adc
sub
mov
out
mov
add
sbb
pop
jl
aad
cmp
ja
xchg
xchg
adc
insb
insb
xchg
mov
loopne
jbe
sub
mul
lahf
or
lock
pop
mov
or
fwait
xor
lds
divl
adc
push
add
and
fsubp
dec
xchg
lret
sub
xor
ljmp
std
sbb
or
xchg
pop
sbb
mov
xchg
sbb
js
mov
and
je
push
mov
push
imul
mov
xchg
push
mov
mov
test
int
subb
or
dec
inc
cmc
xchg
fldt
mov
sub
test
int
adc
sub
add
push
push
into
fs
dec
testb
aam
int3
sub
out
pop
push
cld
aaa
cmp
sbbb
adc
add
fbld
or
or
iret
cli
shrb
lock
pop
mov
xchg
out
cld
dec
ss
jb
fists
mov
in
in
dec
add
hlt
dec
jne
push
inc
sbb
add
pop
mov
es
in
pushf
bound
fisubs
pop
stc
gs
jge
add
fwait
mov
stos
push
mov
das
in
fiaddl
mov
inc
sti
divb
inc
inc
mov
and
fwait
push
enter
jl
outsl
jns
xlat
imull
jb
call
mov
test
jne
dec
xchg
shll
outsl
shl
cli
inc
xor
or
mov
mov
add
sbb
mov
aaa
outsb
lcall
jge
or
test
loope
mov
adc
orb
out
cs
test
dec
fwait
and
pop
loopne
fdivs
adc
dec
shlb
dec
mov
add
ja
aad
pop
xor
pop
dec
dec
add
stc
add
daa
and
mov
aas
add
dec
push
jp
movsl
sbb
adc
xor
add
outsb
in
pop
jno
add
pop
mov
push
inc
movsb
fldl
data16
mov
loope
mov
xchg
xchg
sub
popf
add
enter
cmpb
sbb
aaa
icebp
jno
in
and
mov
sbb
jl
adc
mov
jb
stos
jb
adcb
sbb
xchg
test
mov
shr
rol
xchg
sub
lds
test
icebp
call
sub
xor
jmp
dec
and
int3
repnz
enter
and
test
add
and
adc
ret
sbb
xor
add
test
insb
cmp
fisubrs
fisttpll
sbb
ret
lds
fidivrs
loopne
roll
sbb
fsubs
and
das
ljmp
in
divl
mov
add
cmp
mov
pop
psrld
and
std
mov
adcb
iret
pop
sub
jb
mov
fstp
in
xor
push
push
repz
aaa
adc
sbb
fstpt
add
out
lods
fnstenv
addr16
pop
dec
dec
cmp
sub
adc
mov
cmp
stos
inc
cmpsl
xchg
mov
test
sbb
jmp
rorb
dec
movsb
sbbl
xchg
and
inc
lods
xchg
mov
sti
ret
cmp
stos
daa
or
mov
pop
adcb
pop
push
cli
mov
fbstp
inc
push
mov
push
das
aaa
jo
dec
ret
xchg
xchg
je
addr16
jle
xchg
aam
pop
hlt
pop
test
pop
jbe
roll
push
xor
or
push
mov
in
xor
into
daa
mov
cli
sti
and
in
inc
mov
aam
pop
mov
mov
cmp
adc
in
push
adc
adc
mov
arpl
push
xor
nop
dec
je
add
imul
add
mov
pop
jecxz
xchg
aaa
xor
cmp
add
shl
out
mov
push
pusha
adc
inc
mov
cmp
jo
out
or
mov
vpunpckhbw
pushf
movsb
cmp
ds
or
sub
dec
xor
test
inc
rclb
fsubrl
outsl
sbb
pop
nop
lcall
mov
gs
sbb
mov
lds
push
lcall
inc
ret
push
dec
rol
mov
inc
dec
xchg
sbbb
cmp
mov
mov
sti
movsb
les
xchg
pop
movsl
repz
cmpl
mov
adc
adc
inc
mov
lret
sbb
dec
adc
mov
dec
mov
shl
ds
in
pop
or
inc
jne
insb
push
nop
cltd
cmc
aam
jl
mov
ss
je
popa
pop
push
leavew
es
es
xchg
bound
popa
mov
mov
mov
pop
cmpsb
aaa
mov
aaa
aas
dec
mov
xchg
mov
add
roll
mov
movsl
out
jl
adcb
add
cli
cmp
mov
sub
add
pusha
jne
pop
jns
rclb
daa
icebp
mov
mov
data16
cmc
push
lea
es
xchg
scas
dec
jne
cmp
ss
mov
jmp
aad
jg
xor
arpl
jo
clc
cld
cwtl
push
and
fiaddl
lods
in
add
push
subl
cmp
popa
cs
ret
adc
sub
bound
jecxz
stc
mov
cmpl
test
lock
and
arpl
mov
xchg
mov
push
sbb
test
inc
sbb
add
jg
in
jae
sbb
fcompl
sbb
imul
testl
add
fisubrs
cmp
push
int
xor
push
xchg
insb
mov
aam
sub
bound
push
xor
mov
sub
inc
arpl
sub
mov
nop
xor
ljmp
mov
push
shll
or
loope
pop
popf
cmc
xchg
sub
popa
jg
and
xchg
nop
cli
pcmpgtb
pop
fisttps
sub
adc
fs
cli
jbe
lret
adc
in
or
nop
pop
pop
pushf
orb
mov
lea
mov
fmulp
stos
sbb
daa
lds
add
mov
dec
or
bound
repz
mov
mov
add
sub
add
fisubl
push
repnz
jecxz
das
in
imul
jmp
add
and
mov
mov
fstpt
push
icebp
sub
mov
mov
fsub
insl
push
mul
je
iret
mov
mov
xorb
movsl
xchg
add
scas
inc
jno
push
lahf
jge
add
iret
ja
xchg
dec
sbb
xchg
orb
xor
stos
cmp
lock
push
leave
std
mov
rcrl
cwtl
add
adc
mov
jecxz
pop
insb
test
test
cmp
or
addr16
sbb
or
out
repz
jb
add
inc
ss
pushf
shlb
jne
and
cmp
inc
cmpsl
add
push
cltd
push
movsl
in
and
fists
xchg
inc
int3
cli
fdiv
in
add
inc
int
loop
fisttpl
dec
jnp
mov
lret
repnz
add
fcoms
call
out
call
push
sbb
inc
cmp
or
adc
loop
call
enter
jle
bound
adc
inc
sub
jge
stc
sub
push
movsl
pop
jb
jmp
lea
or
inc
or
lret
cmp
stc
aaa
scas
pop
imul
jmp
insb
inc
dec
repz
mov
add
jp
and
js
loope
fisubl
outsl
jmp
popa
and
aas
jno,pt
ret
sub
into
and
inc
ljmp
testl
pop
cld
cmpsb
adc
loope
movsb
or
xchg
pop
xchg
stc
adc
cmp
push
add
inc
pop
int3
jns
decl
mov
test
cmpsl
jecxz
add
clc
nop
std
aad
and
or
lods
and
cmp
div
outsb
or
lahf
push
jmp
loopne
mov
dec
jbe
sbb
dec
rcrb
andb
lret
adc
je
movsb
mov
pop
call
fcoml
push
es
cmp
xor
cmpb
mov
and
dec
jp
mull
lods
adc
cli
inc
js
sub
sbb
lret
dec
pop
and
sub
dec
push
mov
les
or
or
lea
es
mov
js
jl
inc
inc
incb
and
inc
nop
adc
jmp
daa
mov
mov
sbb
out
std
mov
xor
in
ss
mov
add
test
leave
test
xchg
movsl
sub
fcmovne
stc
mov
xchg
or
push
fwait
cwtl
jecxz
ret
ret
pop
mov
inc
stos
inc
imul
out
stos
jecxz
cmp
cmpsl
sub
mov
xor
or
jae
mov
and
jae
mov
add
and
ret
imull
inc
jb
pop
push
enter
in
roll
sub
jecxz
pop
jbe
pop
dec
push
cwtl
inc
mov
addr16
int
add
cmp
add
dec
aad
dec
enter
andb
lcall
xchg
push
cwtl
cmp
es
scas
leave
popf
arpl
je
ja
mov
jb
inc
push
dec
outsb
inc
cmp
pop
xor
push
lds
and
ret
mov
push
aam
cmp
les
adc
imul
rep
push
cmp
fs
fdivrs
mov
xlat
fstpt
jb
in
sbb
int3
push
pop
dec
cmp
sbb
in
xchg
cmp
adc
movsb
jae
out
cmpsl
xor
mov
xchg
pop
sub
stos
sbb
daa
loop
inc
cs
aam
test
cmp
sub
xchg
sbb
mov
adc
cmp
jne
roll
arpl
test
test
jecxz
xchg
mov
jecxz
sub
out
repz
das
push
mov
xchg
pop
cs
pop
popa
ret
jg
cmpsl
roll
dec
out
pop
fdiv
scas
pop
ss
fwait
popa
nop
jnp
movsl
clc
aam
fstpt
sub
cltd
cmpsl
mov
shrb
sbb
ret
fcom
mov
mov
xchg
add
xchg
dec
xor
sub
imul
movsb
mov
outsb
outsb
cmovb
xor
mov
cmp
mov
mov
addl
and
jle
pusha
cld
call
xchg
push
sub
cmp
or
jecxz
ds
add
xor
xchg
mov
cmp
dec
xorl
mov
jno
shlb
test
cmp
mov
ljmp
xchg
test
gs
jecxz
pop
sahf
mov
ret
mov
popl
imul
jge
rclb
and
in
fidivrs
pop
in
or
jb
imul
inc
pop
andl
mov
aaa
xchg
stos
cmpsl
dec
xchg
pushf
dec
dec
mov
add
mov
leave
lock
cld
and
sub
inc
cmp
ljmp
lret
loop
pop
lret
or
adc
jmp
clc
xchg
xor
mov
fisttps
ror
inc
xchg
push
pop
mov
sub
xor
fs
xor
dec
int
push
repnz
push
mov
adc
aaa
icebp
andb
xchg
imul
in
ret
in
pop
in
fisubrl
int
push
clc
in
xlat
sub
pop
ljmp
pop
jo
aas
sarb
jo
dec
mov
cmc
and
fs
fidivrl
ret
adc
mov
jmp
mov
negl
and
dec
or
add
inc
pop
aam
dec
dec
xchg
cmp
in
sbb
hlt
sbb
xchg
scas
je
fildll
sub
sbb
adc
mov
fistpll
arpl
movsl
cmc
adc
test
jp
sbb
int
mov
insb
sub
and
jbe
and
xchg
inc
adc
fwait
sub
imul
mov
lret
lock
xchg
rolb
lods
repnz
cmp
adc
dec
test
dec
cmp
int3
icebp
dec
cld
push
cmp
push
stos
btl
cltd
or
jl
sbb
push
fimuls
cmp
mov
mov
xor
cmp
hlt
hlt
push
xchg
xor
xchg
and
cmpsb
jle
addb
push
inc
mov
ret
jg
js
loop
cwtl
pushf
stos
jmp
test
mov
cmp
push
inc
add
lret
push
or
add
fsubrs
fidivrl
lea
outsl
in
mov
push
rdmsr
or
test
cmovle
pop
jg
sbb
cmc
stos
jno
and
stc
test
jecxz
pop
pop
lods
push
adc
push
mov
mov
xlat
mov
push
outsl
rcrb
pop
loopne
xor
call
xor
test
xor
and
je
iret
jmp
notl
sub
adc
insl
fldcw
mov
dec
clc
mov
xchg
xor
insb
or
out
mov
gs
outsl
push
loop
push
xchg
nop
add
xorl
cmp
inc
scas
xchg
push
fldt
mov
outsl
mov
fsubl
aam
jno
and
rorl
jb
cmp
sbb
sub
rcl
mov
adc
mov
mov
adc
jmp
or
cmp
pop
push
push
and
or
out
mov
xchg
xor
mov
mov
pop
mov
sbb
xor
adc
int
cmp
cwtl
into
fcoml
adc
xchg
insb
and
jge
push
test
ja
fiaddl
jae
movhps
lret
adc
mov
aam
dec
shlb
xchg
dec
or
cltd
in
push
das
mov
sub
stc
dec
inc
pop
jb
and
mov
lahf
push
nop
xor
lods
sahf
ret
xchg
out
inc
jno
sbb
adc
jo,pn
adc
sub
stos
inc
sub
fimuls
icebp
and
or
pop
xchg
imull
ljmp
push
dec
fstpl
xchg
lds
fs
sar
pop
sbb
xchg
outsb
int3
jge
xchg
das
arpl
lods
inc
push
stos
ljmp
push
xchg
sub
in
pop
rol
dec
stc
fdivrs
bound
lahf
fisttps
add
lret
inc
push
imul
cmp
fdivrl
cmp
jge
add
jno
push
loopne
sub
sbb
pop
push
ret
mov
pop
mov
mov
jnp
jp
iret
loope
mov
push
dec
mov
sub
ja
and
dec
pusha
shlb
cmp
dec
sbbb
pop
mov
rorb
xchg
fstps
mov
addr16
scas
dec
pop
sbb
push
push
pop
xchg
jae
iret
enter
push
subl
mov
sbb
adc
adc
je
mov
in
pop
or
test
pop
and
pop
sbbl
jp
out
fwait
roll
imul
std
xchg
dec
and
add
adc
rol
data16
sub
jns
dec
or
xor
dec
cmpsl
test
cmpsl
cld
out
test
outsb
mov
cwtl
es
inc
xor
xchg
scas
xchg
imul
inc
mov
adc
jae
addl
outsb
addr16
test
mov
je
aas
sub
xor
pop
fdivrs
dec
stc
adcb
fisttps
movsb
inc
aaa
dec
ss
xor
add
movsl
rcr
popf
in
jae
js
ja
mov
int
loope
test
jns
cmc
jnp
jno
cli
aas
jp
fsubs
cmpsb
cmpsb
sahf
sbb
in
cwtl
int
popa
adc
adc
mov
sub
dec
sub
repz
xchg
mov
pop
daa
mov
fldl
outsl
pusha
and
xchg
sar
mov
xchg
and
fimull
pop
bound
cltd
fbstp
inc
mov
mov
pop
mov
lock
lret
stc
repz
or
popa
xchg
rorl
lds
ret
add
in
mov
xor
in
push
cmp
scas
xchg
jecxz
mov
xchg
mov
push
loop
rorl
push
mov
xchg
mov
imul
dec
xchg
mov
xchg
inc
sub
xchg
hlt
sbbl
add
pop
js
insb
xchg
cmp
fdivrs
lcall
mov
mulb
fcoms
loope
addr16
or
adc
jns
scas
sub
lock
lods
mov
xor
hlt
loope
push
cmpsb
sub
xchg
dec
sub
test
or
push
jmp
mov
add
jbe
add
adc
xor
movsb
mov
imul
inc
push
or
inc
push
xor
add
inc
lods
sub
mov
mov
ss
cmp
xchg
pop
pop
sbb
jmp
xor
imul
jne
lea
cld
ret
cmp
dec
fisubs
xor
lods
push
inc
mov
push
adcl
inc
std
sahf
xchg
xchg
mov
xchg
mov
cmp
add
mov
push
push
pop
dec
cld
mov
and
cmc
xlat
fstpt
mov
mov
insb
inc
sub
inc
push
mov
pusha
or
cmp
jno
or
fbstp
xchg
in
fwait
test
popf
ss
arpl
insl
into
mov
rcr
mov
insb
add
ret
loopne
cmovne
rclb
dec
or
movsb
imul
out
xlat
insl
das
or
fisttpl
sar
pushf
je
icebp
add
cwtl
mov
or
popa
push
push
popl
sbb
ret
out
fsubrl
mov
cmc
mov
cmp
adc
xor
xor
fcoms
dec
mov
pop
loop
jle
addr16
dec
andl
mov
fnsave
xor
pushf
out
call
in
cmp
pop
cmpsb
adc
pop
aad
mov
iret
lret
adc
dec
lods
xchg
test
aad
pop
in
xchg
aas
adc
stos
cmp
adc
push
rolb
or
xchg
sub
and
mov
dec
into
and
gs
movsl
enter
cmp
imul
mov
daa
or
std
test
into
bound
jb
cmp
push
mov
pushf
mov
lea
jno
inc
ss
enter
bnd
insl
inc
shl
dec
jnp
fdivr
jne
mov
mov
xchg
dec
inc
xor
jg
add
fcoml
jl
aad
gs
xlat
gs
sbb
and
rolb
xor
ja
inc
jge
mov
mov
pop
iret
xlat
out
movsb
jmp
icebp
push
cmp
mov
sti
repz
sbb
imul
lods
add
or
and
scas
lods
add
mov
pop
test
aam
shrb
cmp
push
cltd
loop
daa
push
lcall
int3
setbe
pop
repnz
mov
fdivrs
dec
push
js
inc
dec
push
xchg
loope
int
loope
mov
shrb
xchg
int3
adc
test
aas
jb
pop
scas
dec
nop
testl
pop
mov
out
lds
loope
jae
pop
xor
or
dec
int3
mov
gs
push
imul
out
sahf
inc
jl
bound
fstpl
xchg
arpl
push
repz
dec
mov
scas
push
mov
sbb
mov
int3
gs
int
lock
nop
inc
pop
imul
or
ss
mov
xor
mov
aas
adc
push
cmp
mov
adc
inc
shr
cmp
xchg
xchg
xor
mov
push
mov
outsb
mov
mov
iret
ss
jbe
je
sbbb
popf
jp
mov
in
ss
add
push
ljmp
pop
dec
faddl
and
btr
push
nop
and
mov
sti
in
rclb
mov
cmp
mov
jno
xchg
outsb
fadds
notb
fs
les
pop
and
lods
jge
loopne
scas
addr16
stc
inc
dec
ds
das
es
xor
movsb
ficompl
xchg
sbb
dec
loope
je
pop
gs
jmp
lcall
push
aas
dec
fsubrs
mov
arpl
pop
adc
xchg
sbb
iret
fildl
fcomi
or
dec
test
rcrl
jle
and
dec
mov
idivb
jge
insl
or
pop
xor
int
pop
fsts
clc
gs
sub
iret
lret
aam
shrb
mov
mov
cli
push
cld
push
mov
push
adc
jle
or
pop
call
pop
adc
shll
into
cmp
sahf
fdivl
sbb
jge
std
inc
xchg
adc
push
stc
add
fidivs
xchg
xchg
sbb
das
pop
sub
mov
mov
sub
enter
fwait
insb
jo
adc
pop
pop
popf
mov
dec
fadd
mov
or
and
cmp
jmp
and
pop
push
or
inc
ret
cmp
cmp
mov
add
sti
andb
or
xor
inc
into
mov
lods
insb
lret
cltd
jns
pop
repnz
dec
mov
xchg
iret
xor
mov
mov
je
out
cwtl
cltd
mov
pop
out
cmp
pop
into
out
mov
arpl
jae
sahf
and
push
scas
lds
mov
sub
adc
insb
push
popf
sub
push
test
adc
imul
enter
jecxz
xor
cmpsl
jmp
div
bound
jns
xor
test
faddl
push
pop
sub
lods
add
xchg
push
cmp
ds
cmp
vcvtdq2ps
xchg
fisttpll
movsl
nop
ret
mov
push
aam
jo
pop
out
pop
movsb
leave
and
lods
or
lds
int3
push
inc
sub
sbb
insl
std
int
mov
mov
pop
adc
lock
push
clc
enter
cmp
jno
out
fbstp
std
nop
adc
sti
ljmp
push
xchg
xor
lret
or
outsb
idivb
adc
test
or
fbld
jle
or
add
movsl
movsl
mov
add
repz
inc
loopne
push
gs
test
sbb
and
dec
add
addb
cmpb
test
mov
or
sub
jmp
jae
sti
inc
loop
sahf
sbb
xchg
pop
mov
cmp
sahf
dec
mov
cwtl
pavgw
stos
push
mov
push
xchg
and
lcall
sub
xchg
add
xor
pop
pop
lret
xor
lock
jmp
jecxz
movl
into
scas
lds
dec
dec
xchg
insl
or
fdivrs
in
js
ficoml
mov
scas
movsb
out
dec
loop
jmp
xchg
and
scas
xor
enter
dec
and
sub
mov
movsb
shlb
mov
mov
or
cmp
fsub
mov
sahf
cmp
push
mov
sub
arpl
rcl
xchg
add
sub
fwait
js
fs
push
add
add
sbbl
adc
shl
or
pushf
lcall
jge
aas
int
cmpsl
mov
push
sbb
mov
sbbl
outsb
lds
shll
lea
pop
push
cmp
mov
sub
iret
cmpsl
or
pop
repnz
mov
sbb
cmp
mov
movb
adc
pusha
adc
call
fbld
dec
mov
pop
pushf
mov
mov
inc
mov
int3
fwait
dec
jl
pop
repnz
mov
imul
pop
push
jns
das
sbb
and
mov
jnp
jle
scas
xchg
jp
ror
pop
xchg
add
or
or
mov
andb
mov
mov
mov
dec
sahf
jecxz
pop
mov
adc
loopne
dec
jmp
jae
inc
push
lahf
lock
rcr
lock
subb
loope
fbld
inc
sbb
or
mov
jg
adc
cs
je
push
mov
mov
and
das
sti
mov
in
or
sub
xchg
sub
arpl
cmc
mov
cwtl
mov
fstpl
andb
icebp
scas
cmp
mov
test
xor
cltd
mov
sub
mov
push
fsubrp
je
sub
cltd
cmp
das
cmp
adc
int
ljmp
scas
test
mov
test
js
cwtl
push
jp
test
loopne
out
mov
stos
clc
call
lret
mov
lods
add
test
mulb
ss
sti
inc
sub
addr16
mov
mov
adc
jae
push
lret
lock
popf
js
nop
pushf
in
daa
pop
pop
mov
shrl
int3
sbb
cmpsl
out
push
ja
lea
jle
dec
test
mov
dec
cmc
push
push
push
inc
xchg
mov
mov
cmp
cmp
add
pop
inc
mov
imul
and
leave
sbb
dec
and
mov
movhps
push
xchg
jecxz
pop
sub
mov
cmp
mov
int
pop
lock
sahf
repnz
mov
lret
shl
loope
mov
dec
cmp
xor
push
mov
pop
mov
int3
cmc
push
in
cmp
jecxz
pop
popl
leave
push
data16
pop
xor
pusha
mov
xlat
dec
dec
pop
lahf
dec
jae
jbe
inc
inc
in
pxor
in
add
xchg
inc
mov
ret
gs
cmpsl
dec
mov
cwtl
adc
adc
aam
mov
outsl
push
outsb
and
push
out
lahf
shlb
sub
dec
ja
dec
ret
dec
in
lods
or
sbb
pop
stc
mov
int3
adc
push
hlt
sub
shll
inc
mov
loop
ja
ret
jp
mov
cmp
fwait
lock
or
rcr
dec
lods
and
mov
pushf
mov
mov
mov
rcll
pop
cmp
daa
and
sub
xor
out
repz
jnp
icebp
and
push
adc
sub
or
jmp
add
subb
jle
jle
mov
adc
ret
xor
cltd
mov
hlt
pop
sbb
jmp
mov
ljmp
sbb
into
jns
mov
xchg
bts
xchg
jns
dec
push
int
cmpsb
rcl
and
out
outsl
pop
jae
adc
push
and
cmp
stos
mov
xor
out
adc
repnz
push
addl
inc
enter
mov
mov
or
mov
lcall
pushl
inc
lods
iret
lcall
fs
push
pop
testl
adc
xor
xor
int
aam
inc
xor
lds
test
loop
pop
xchg
inc
or
mov
jg
pop
jmp
jno
cmpsl
or
repnz
jbe
test
mov
pop
dec
and
push
push
imul
push
subl
lret
scas
out
dec
or
jge
jnp
in
add
sbbb
shll
stos
mov
cmovg
je
jb
xchg
jae
aad
mov
out
mov
cltd
sub
shrl
shll
jbe
adc
pusha
pop
cwtl
rolb
mov
mov
stos
cmpsl
sbb
daa
xor
push
lret
pushf
bound
daa
push
int
sbb
sub
and
leave
inc
mov
orb
pop
push
xchg
adc
test
out
pop
pop
divl
lds
and
ret
adc
pop
shr
jmp
mov
aam
mov
adc
test
push
cmpsl
arpl
aaa
loopne
insl
pop
sbb
popa
jbe
and
xchg
inc
push
xorl
cmp
and
incl
subl
imul
leave
dec
jp
pop
jle
cmp
fimull
in
inc
xor
decl
and
data16
lods
xor
inc
inc
scas
enter
xor
cmpsl
mov
sti
mov
jle
out
mov
mov
popf
xchg
cmp
dec
imul
adc
mov
xchg
lcall
notl
inc
pop
sahf
dec
add
mov
ljmp
mov
data16
rorb
mov
pop
adc
sbb
popf
sub
dec
aas
pop
inc
test
imul
outsb
insl
cmp
add
push
cwtl
in
inc
adc
jmp
dec
dec
test
sarl
out
data16
sub
les
cmp
add
cli
stos
mov
in
and
xchg
clc
and
push
push
pop
xor
test
sti
adc
dec
sbb
sub
lock
sti
testb
int3
rcl
adc
cmp
subl
insb
imul
pop
lock
mov
les
xor
rorb
xchg
mov
enter
sbb
adc
mov
rcrb
std
ror
cmp
xchg
push
cmp
push
pop
push
lahf
pop
addl
jg
mov
jnp
lcall
enter
pop
xchg
rcll
push
ja
adc
cmpsl
loope
sbbb
jmp
mov
mov
insl
stos
mov
lahf
or
xor
or
mov
aad
jg
mov
test
icebp
ds
sti
cmp
mov
bound
xor
std
jae
decl
enter
inc
leave
xor
jg
and
jne
add
knotw
or
ljmp
fsubrl
cmp
xor
cltd
cmc
mov
pop
test
xlat
mov
pop
clc
in
mov
js
dec
adc
and
dec
xchg
jmp
jb
int
mov
cmp
xor
push
mov
push
xchg
mov
lea
notl
jg
in
jb
mov
lds
mov
sub
push
lcall
sub
stos
rolb
ds
jmp
xchg
ja
lds
fs
popa
js
cmp
add
repz
in
xchg
outsb
lods
jno
test
add
aam
mov
jns
addr16
shll
fcmovb
mov
dec
jge
bound
ss
repnz
cmpsb
jno
mov
call
rcrl
add
faddl
xchg
xchg
jae
clc
cltd
test
cmp
jo
shll
xor
xor
mov
clc
stc
shl
leave
inc
dec
push
loope
pop
sbb
data16
sar
jbe
mov
or
dec
add
pop
xor
xchg
clc
push
rcl
jne
jne
xlat
insb
adc
lds
test
xchg
dec
sbb
add
jmp
pop
and
pop
add
in
push
ss
pop
data16
aam
ret
fwait
sbb
inc
mov
gs
mov
out
shlb
mov
pop
pop
hlt
mov
subb
dec
aas
stos
lcall
cmpsl
orb
xchg
jg
jg
mov
loope
test
pop
cmp
mov
divl
pop
mov
popf
sbb
sbb
or
fcomip
mov
dec
jle
sahf
push
sbb
leave
ret
lret
lret
rclb
sahf
out
or
mov
jl
leave
cmpsb
ret
mov
aam
repz
mov
data16
xorl
sub
and
stos
daa
aaa
ljmp
mov
and
cmp
add
hlt
xchg
dec
xor
cmpsl
into
pop
xlat
pop
imulb
sub
adc
pop
push
lret
repnz
call
in
mov
jl
push
loope
and
addr16
out
js
cmpsb
ds
xor
mov
sahf
jne
fildll
fxch
jmp
mov
mov
div
lahf
mov
mov
scas
fstpt
iret
es
push
sbb
popa
movsl
jae
lcallw
addb
xchg
stos
jae
pop
cmpsb
call
xor
jo
leave
sub
sub
in
dec
mov
sahf
imul
and
sbb
sbbl
js
outsb
clc
pop
inc
cmp
sub
pusha
test
test
int3
shlb
jno
jno
lea
lods
addl
jne
adc
subb
and
daa
push
arpl
adc
movsl
cmpsb
shr
aaa
lcall
xchg
pop
jo
add
cmp
fucomip
movsb
inc
pop
in
into
xchg
mov
adc
and
add
bound
xor
test
mov
lods
add
push
xchg
add
mov
stc
sub
lret
rorl
sbb
mov
rcr
cmp
js
pop
mov
nop
andl
inc
out
push
fmull
jl
jg
cwtl
cmp
repnz
jge
stc
shlb
xor
jmp
cmpb
add
sub
lods
xor
cmpsb
xchg
ret
mov
or
mov
push
push
enter
and
cmp
aad
mov
fsts
test
aad
jp
pop
dec
neg
adc
jnp
add
jp
xor
mov
jb
ret
push
mov
dec
cmp
test
cwtl
adc
inc
inc
xchg
xchg
xor
jp
sbb
cld
pop
mov
pop
int3
mov
push
mov
repnz
jmp
aad
adc
fildll
cmp
add
popa
cmp
rolb
test
cmp
es
std
sub
inc
loop
out
ret
pop
xchg
out
out
xchg
inc
dec
fwait
mov
xor
aad
xchg
es
add
mov
sbb
jnp
les
outsb
in
fnsave
add
sbb
sbb
jmp
imul
outsb
pop
push
mov
adc
mov
test
dec
aad
ds
lods
rcll
jle
lahf
fdivp
adc
arpl
inc
dec
inc
mov
ficoml
in
outsb
sub
lret
fsubrs
iret
ficompl
mov
sbb
cmp
ljmp
fidivrl
fs
pop
jle
mov
ja
pop
push
add
dec
mov
push
clc
outsl
mov
or
fiaddl
inc
mov
and
in
mov
imull
fcmove
outsl
sub
jnp
ja
ss
inc
ds
pop
cmpsl
gs
mov
adc
dec
jb
adc
dec
out
popl
dec
and
popf
mov
int3
push
sbb
mov
inc
call
push
bound
xor
pop
pop
mov
fs
xor
dec
lds
imul
insb
in
mov
pmaddwd
aad
aam
mov
dec
pop
add
rolb
ss
push
sbb
and
lret
xchg
icebp
xchg
sub
pop
in
xchg
frstor
push
push
pop
cmp
int
dec
fdivr
mov
adc
pop
mov
push
call
mov
fcoml
popf
bound
cmpsb
cwtl
cmpsl
pop
sub
xchg
add
mov
fisttpll
fwait
push
dec
pop
push
scas
xchg
popf
xchg
add
sub
repnz
lods
add
fs
std
jg
jecxz
dec
andl
adc
iret
iret
cmc
inc
fbstp
test
sub
loope
aad
pushf
lahf
je
add
fs
xchg
cwtl
mov
faddl
arpl
in
or
hlt
sbb
dec
call
scas
pop
jp
mov
xor
add
sbb
call
xchg
in
loopne
dec
or
shl
scas
inc
out
insb
fidivrs
in
mov
in
mov
insl
cmp
cmp
aad
stos
in
adc
ss
cmc
shl
add
mov
pop
mov
clc
adc
jmp
sub
hlt
mov
cmp
push
es
adc
ja
sub
and
mov
jg
pusha
ja
inc
push
xchg
mov
test
dec
cmp
pop
or
mov
mov
or
mov
test
daa
and
sub
or
rclb
xor
mov
imul
xchg
popa
push
lock
mov
aad
xor
orl
fdivrs
nop
jle
mov
and
adc
dec
lahf
push
fisttpl
imul
std
mov
jae
incb
xchg
mov
loop,pn
dec
or
xor
sbb
movsl
cmp
mov
out
mov
xchg
mov
sti
out
les
push
in
repnz
and
mov
mov
mov
dec
mov
rclb
mov
stc
xorb
xchg
xchg
sti
sarb
mov
call
shl
test
mov
or
pop
mov
test
movsl
pop
push
xor
ret
ds
dec
sub
sahf
add
jno
jo
ret
jle
dec
dec
repnz
fs
push
adc
pop
aam
test
push
mov
outsl
ljmp
out
sbb
movsl
cmpb
incb
sbb
cmp
adc
iret
mov
pop
mov
add
aaa
jnp
xchg
aas
sbb
fcmovbe
mov
cmpsl
jae
jbe
sbb
outsb
xor
test
sbb
xor
mov
in
hlt
cmp
sub
pop
sarl
and
in
scas
pusha
cmp
cmpsb
mov
xor
pop
mov
mov
mov
jnp
cs
addr16
jg
loope
jge
push
jo
xor
cli
mov
cltd
fiaddl
icebp
cld
pop
movsl
into
aam
xchg
xor
mov
jno
flds
out
clc
test
clc
enter
test
jns
mov
fists
xchg
and
mov
ret
xchg
xchg
sti
popf
jle
mov
sub
mov
fstpl
mov
ljmp
mov
fsqrt
icebp
push
iret
mov
mov
mov
cmp
mov
adc
in
rcrb
pushf
pop
mov
mov
add
pop
into
inc
push
addr16
enter
push
jecxz
push
mov
outsb
pushf
rcrb
hlt
pop
sbb
pusha
xchg
inc
mov
jb
inc
mulb
fimuls
bound
pop
pop
mov
jp
lods
pop
clc
mov
jg
sub
call
add
add
stc
xor
inc
mov
cli
mov
inc
cltd
fildll
mov
or
idiv
add
cmp
nop
xchg
icebp
gs
cmp
jbe
shlb
adc
ss
add
arpl
xchg
lea
xchg
ja
pushf
aas
xchg
adc
ret
in
jmp
test
add
lds
xchg
sub
call
push
std
enter
pop
imull
nop
jecxz
inc
ja
pusha
inc
and
dec
inc
out
or
or
push
push
and
call
lea
in
cmp
daa
sti
das
push
sahf
mov
ss
popf
mov
cmp
and
mov
cmp
lods
xchg
push
mov
push
mov
adc
or
mov
jae
xchg
jp
or
push
testl
or
sbb
icebp
loop
shll
xor
test
xchg
ja
jge
and
movsb
mov
pop
mov
lahf
mov
pop
jns
pop
push
mov
bound
cli
aam
movsb
aaa
je
sub
dec
xchg
mov
push
out
push
sahf
cmpsl
adc
adc
loop
je
sti
pop
jnp
or
mov
popa
dec
sbb
js
push
bound
cmp
fistl
popa
test
movsb
or
hlt
or
dec
or
in
add
das
and
jmp
outsl
into
stos
ret
fstl
jnp
xor
xchg
jp
test
lods
inc
mov
xchg
insl
inc
cwtl
sub
outsb
sbb
test
mov
cld
arpl
rorl
pop
xchg
sahf
fwait
mov
pop
in
sbb
dec
test
sub
rcl
mov
inc
xchg
inc
push
fwait
popa
out
lahf
jmp
test
mov
js
mov
cmpsb
in
mov
pop
ss
fnstsw
mov
and
fwait
pop
jecxz
clc
repnz
subl
or
sti
inc
lahf
int
pop
jl
in
cmp
fxam
xchg
outsl
sti
adc
adc
jmp
jae
add
fdivl
ja
addl
mov
fstpt
sti
cmpsl
push
cmp
scas
fdivr
mov
push
aam
sbb
dec
push
movl
daa
push
sub
lock
mov
out
das
fnstenv
mov
xchg
int
movsl
mov
pop
push
imul
ret
lods
mov
fadd
test
xor
dec
outsl
loopne
daa
add
iret
dec
in
stos
jmp
adc
jnp
mov
call
cmp
mov
lcall
loop
add
dec
jg
popa
fwait
ljmp
jg
hlt
push
or
jle
and
das
adc
mov
xchg
daa
lea
adc
jl
push
mov
sub
jbe
xchg
stc
push
xor
cwtl
xlat
dec
pushf
mov
adc
or
sbb
lock
dec
jb
movsb
and
pop
popf
repnz
orl
inc
adc
and
mov
push
push
mov
push
incb
insb
xchg
leave
mov
arpl
mov
xor
sbb
rcll
lret
cmp
pop
mov
jecxz
adc
or
adcl
out
nop
movsb
sub
lea
dec
fsubrl
xlat
xchg
pop
popf
mov
sub
out
pop
mov
mov
sarb
pop
faddp
or
inc
clc
jecxz
mov
or
cmp
mov
mov
or
pop
adc
xchg
test
rclb
ja
and
je
add
fsubl
movsb
sbb
into
icebp
movsb
int3
push
pop
xchg
popa
jmp
movsb
adc
sbb
rclb
sub
out
bound
mov
hlt
sub
sub
out
push
leave
push
scas
xor
rcrl
mov
pusha
mov
aaa
dec
mov
push
push
xor
jne
mov
pop
das
rorl
aas
jnp
nop
xchg
repz
lods
jbe
mov
lahf
fcom
mov
cli
mov
pop
cmp
mov
add
sub
sbb
loope
aad
xchg
dec
push
sub
insb
jg
cmp
cwtl
das
imul
or
sub
cs
fwait
xor
mov
pushf
mov
cmpsb
and
xchg
je
push
dec
inc
and
xchg
add
sub
subb
enter
jg
and
mov
mov
cmp
jg
mov
je
arpl
cmpsb
push
xor
iret
pop
mov
imul
cltd
rol
js
cmp
std
jbe
cmc
pop
shlb
dec
sub
fdivrp
mov
call
or
adc
xchg
push
xchg
iret
in
push
push
mov
fnstcw
repz
sub
xchg
imul
ja
sbb
lods
push
xor
push
shr
pop
mov
es
push
lods
xchg
or
mov
mov
push
mov
aas
lret
sti
ret
and
sbb
fnstenv
hlt
cs
pop
enter
jp
add
stos
sbb
mov
sub
xor
icebp
xor
shlb
inc
shrb
or
cmp
push
jmp
push
pop
fnstcw
leave
jae
test
lock
lock
xchg
jo
int3
and
movsl
ds
and
out
xchg
js
dec
mov
das
sbb
mov
cmp
ret
fs
add
lods
subb
imul
loope
xchg
xchg
fsubl
sub
sti
sbb
mov
rolb
and
ja
push
notl
ficoml
pop
test
or
pop
adc
jg
sti
cmp
mov
cmp
sbb
out
push
out
and
inc
pop
push
mov
fcmovbe
inc
imul
sbb
xchg
movsl
faddl
lret
roll
cs
mov
mov
jbe
sub
inc
lret
adc
je
xchg
outsl
adc
rolb
mov
pop
test
or
roll
mull
je
pop
add
inc
sarb
cmp
cmp
rclb
push
sbb
das
clc
cwtl
adc
jb
pop
add
loop
pop
clc
in
adc
notl
jne
test
sbb
jle
rorl
fisubl
sub
mov
push
jge
ljmp
call
adc
inc
xor
pop
jnp
xor
outsb
xor
fnstsw
in
imul
jecxz
pushf
bound
cld
mov
jp
dec
in
push
push
mov
dec
cltd
gs
insl
cmpsl
movsl
daa
leave
xchg
popf
cmpsl
clc
ret
or
outsb
lock
push
sub
xor
pushf
mov
imul
sub
or
mov
sbb
mov
sti
loope
out
pop
cmp
adc
insl
ret
aam
loop
imulb
jns
xor
xlat
pop
call
mov
add
mov
rolb
cmp
int
pop
cmp
mov
gs
std
or
adc
cmp
test
and
insb
test
push
jmp
push
rcl
pusha
clc
jg
mov
ja
pushf
lea
adc
loop
sub
sub
pusha
jmp
in
testl
jg
imul
pop
divb
push
lret
inc
pop
cmp
sub
xor
bound
xchg
add
sti
rcl
outsl
inc
and
jo
int3
std
sahf
or
push
mov
scas
test
fstps
test
movsl
or
adc
lahf
adc
xor
repnz
adc
xor
ljmp
aas
rclb
cmpsb
movsb
or
push
cmp
shl
or
mov
inc
or
xor
push
inc
jge
test
xlat
sub
add
sbb
sbb
cmc
pushf
loopne
addb
jbe
mov
lahf
repz
cmp
and
inc
fimuls
imul
ret
lods
pop
fs
jns
inc
adc
cwtl
dec
xchg
and
cmpsb
int
pop
shlb
popf
stos
sti
mov
xchg
bound
enter
gs
and
pusha
or
les
ds
rcr
jge
dec
pop
repz
div
pop
jmp
in
inc
fdivr
clc
jp
das
js
call
xor
fstpl
jns
pushf
xchg
popa
lcall
add
pop
nop
mov
mov
xor
or
popf
enter
nop
sub
int3
jl
push
stc
mov
cmp
pop
stos
sahf
add
lds
cmp
call
repz
cmp
insb
cmpsb
inc
outsl
out
sbb
cld
fildl
cwtl
mov
addr16
movsb
hlt
adc
test
add
sahf
gs
jmp
or
dec
jle
mulps
push
out
and
push
aad
jle
out
mov
push
pop
in
cmc
cmpsl
mov
inc
lret
mov
xchg
dec
jns
jo
mov
xor
mov
add
test
mov
popa
adc
out
mov
xorb
jbe,pn
or
adc
fs
cld
push
aam
mov
call
mov
xor
dec
sub
xor
jge
mov
shll
inc
popf
into
cs
xchg
test
xor
lock
lds
insb
ret
mov
push
mov
dec
push
mov
mov
sub
rcrb
push
fstl
jns
sarl
cld
mov
jns
stos
xor
popf
dec
mov
cwtl
and
test
jl
push
mov
dec
pusha
mov
lock
adc
inc
les
int3
mov
jne
addr16
test
icebp
mov
out
jo
push
insl
xorl
dec
dec
xor
adc
lds
pop
imul
into
imul
sub
sub
addr16
rcrl
icebp
sbb
sti
lock
aad
or
les
inc
dec
shlb
jo
push
lret
jno
nop
js
idivb
lods
sub
xchg
add
xchg
mov
clc
jne
mov
and
pop
adc
xorl
in
bound
out
pop
jno
xchg
ret
cmp
es
xor
test
fcompl
ds
add
mov
repnz
push
in
cmp
imul
imul
ficomps
pop
adc
mov
push
mov
sarl
std
xstore-rng
cmpsl
andl
inc
pop
cli
push
jmp
and
iret
add
cmpsb
neg
pop
pushf
ret
sbb
sub
nop
in
and
mov
int
xor
leave
loopne
add
inc
pop
and
ret
imul
lods
test
inc
das
xor
scas
inc
mov
lret
mov
ret
sub
jge
shrl
mov
movsb
pop
ss
cmc
cmpsl
arpl
mov
push
fiadds
xor
push
mov
mov
stos
or
pop
into
xor
mov
inc
or
aam
xchg
hlt
std
sbb
xchg
js
xchg
pop
sub
stos
inc
pop
push
push
aam
rcll
push
lods
sub
push
mov
aad
les
xor
add
insl
xor
int3
stc
pop
add
inc
and
adc
mov
enter
movsl
xchg
fsubrs
and
xor
lret
dec
pop
test
inc
iret
mov
dec
sti
or
sub
ljmp
sahf
mov
sbb
mov
mov
in
shlb
jmp
xor
mov
lea
fs
add
fcompl
mov
sub
sub
push
pop
push
imul
loop
fdiv
cs
push
sbb
aas
ficompl
daa
sahf
xchg
out
sub
pop
mov
jae
fnstenv
addl
xor
mov
imul
sub
aad
pop
lret
xchg
jb
adc
pop
jg
lds
sub
enter
repnz
cwtl
cwtl
mov
or
mov
mov
lods
sbb
ucomiss
jb,pn
imul
pop
js
pop
pushf
jae
data16
sbb
insl
fsubr
mov
daa
pop
or
fwait
data16
jnp
sub
in
xorb
lret
mov
pop
imul
and
or
mov
xchg
mov
dec
in
xchg
sub
hlt
in
mov
mov
stc
push
sub
adc
mov
adc
aas
and
inc
jns
xor
cmpsb
jg
push
leave
ret
mov
andl
mov
ficoms
mov
inc
add
lahf
cmpsl
inc
jmp
mov
lret
sarb
push
repz
adc
aad
je
push
pushl
sub
test
mov
push
push
and
cmpsl
xorb
jno
and
test
lcall
aad
sahf
jno
shll
out
fs
or
repz
hlt
add
inc
mov
mov
lret
insb
cs
sahf
hlt
xor
adc
sbb
imul
inc
dec
insl
dec
lods
dec
dec
enter
or
jbe
aas
js
add
push
fdivrs
adc
int
test
scas
scas
inc
jae
fsubl
mov
dec
out
inc
fbld
lods
ja
mov
mov
jnp
xlat
test
in
sub
xchg
xchg
std
adc
clc
cmpsb
dec
stos
xchg
or
ret
mov
push
bswap
dec
dec
push
jno
jle
jp
or
jnp
es
and
mov
inc
outsb
into
daa
xchg
sub
aas
bound
popa
aad
in
push
out
stos
dec
add
insl
aaa
jne
and
xchg
jae
jle
cmp
es
cld
jb
pop
jnp
push
cs
mov
jmp
xchg
les
and
shlb
fnstenv
out
dec
xor
xchg
lods
dec
inc
mov
rorb
mov
cmp
lahf
icebp
jp
push
frstor
mov
lods
gs
faddl
mov
adc
dec
adc
cmp
enter
or
mov
subl
dec
sub
inc
dec
fdivs
clc
dec
pushf
inc
jl
mov
loopne
or
movlps
lea
xchg
jge
pop
arpl
in
iret
jb
dec
stos
push
mov
movsw
push
das
pop
imul
jnp
pushf
gs
cwtl
mov
les
jo
cmpsl
hlt
push
fsubrs
repz
sub
and
add
les
dec
mov
les
pop
xchg
enter
jecxz
xor
ss
pop
int
add
shlb
mov
insl
push
inc
or
dec
mov
rolb
jo
rcrb
out
cmp
rcrb
fcomps
xlat
ss
cmp
cmp
dec
and
xchg
push
mov
jle
jo
lcall
mov
jmp
xchg
cs
sub
inc
pop
add
xchg
push
jne
lods
loopne
in
sbb
test
and
mov
in
ja
inc
or
pusha
fmull
sbb
mov
pop
repz
or
inc
pop
je
pop
mov
idivl
mov
movsb
mov
jae
add
pop
xchg
bound
mov
aas
jl
mov
jne
xchg
mov
mov
mov
movsb
xor
cli
int3
movsb
aad
cmp
fildll
mov
jbe
sub
fnsave
push
add
test
icebp
or
jmp
mov
lds
push
in
jecxz
push
mov
push
outsl
xor
mov
lret
fnstenv
and
mov
adc
add
mov
out
xchg
out
push
cmp
cmp
imul
in
ds
sub
push
mov
xchg
xchg
mov
dec
and
or
iret
loop
hlt
sbb
add
mov
adc
inc
fadd
orb
ficompl
push
insl
jne
leave
imul
orb
das
xchg
push
mov
test
cmp
or
loope
iret
add
cmp
movsb
dec
pusha
pop
xchg
sub
popa
outsl
outsl
mov
cmp
jno
xchg
iretw
dec
dec
cmc
gs
lcall
dec
addps
inc
mov
fisttpl
test
outsb
insl
add
jae
cltd
lcall
setl
mov
jl
push
enter
jecxz
test
jb
lock
clc
xchg
sub
inc
and
test
mov
mov
in
jmp
mov
es
pop
std
sbb
add
jb
dec
in
dec
js
pop
xchg
mov
pop
adc
xor
call
cs
sti
pop
push
fwait
jb
lahf
popf
sbb
mov
iret
or
adc
aaa
fcomps
lret
mov
inc
lret
cltd
aaa
fidivrl
jge
stos
jmp
test
dec
es
or
adc
outsl
jnp
out
push
xor
loopne
inc
jmp
pop
icebp
cwtl
je
push
cli
xor
mov
jnp
stc
fwait
mov
pusha
test
mov
pop
adc
lock
pop
ret
jmp
sub
outsb
ljmp
pop
cmp
jp
mov
jae
cmpsl
pop
aam
jecxz
test
xchg
pushf
les
cmp
sbb
repnz
add
ret
mov
xor
jno
jge
fs
mov
and
lds
je
in
sub
js
xchg
rcll
lods
lea
pop
sbb
or
mov
mov
stc
lret
cli
je
dec
mov
mov
lods
sub
push
cmp
sbb
jne
lea
or
lock
jb
push
imul
mov
rorb
mov
mov
push
adc
mov
in
mov
jecxz
add
add
outsl
subl
rcrl
sahf
rorb
cmpsl
pop
and
orb
out
out
repnz
sbb
popf
mov
jmp
lcall
push
bound
subb
fmul
add
jb,pn
sarb
jecxz
call
ret
xchg
dec
imul
dec
out
or
jns
popf
push
fsubrs
js
jns
xor
dec
sbb
and
or
mov
lret
pop
cmp
jmp
test
aas
mov
mov
cmp
push
jp
push
addr16
and
ja
sbb
test
bound
pop
mov
xlat
dec
xchg
subb
jmp
aas
add
xor
insb
pop
jb
push
jne
scas
dec
ljmp
stc
push
ds
mov
or
sbb
repnz
xor
std
loope
lcall
and
call
shlb
je
in
lret
fimuls
sbb
loope
adc
stos
and
test
and
jp
add
repnz
mov
cltd
sub
cli
mov
aad
cmp
push
inc
pop
pop
and
pop
inc
jg
aaa
ds
cmp
add
pop
enter
jns
or
jge
clc
dec
mov
jp
fcmovbe
push
sub
cmp
lahf
jnp
pop
scas
mov
xchg
mov
arpl
jecxz
scas
jg
adc
cmc
clc
icebp
lock
sti
js
adcl
jns
dec
nop
or
hlt
mov
add
test
adc
popf
push
mov
mov
jg
push
add
inc
sub
int3
ja
sarl
xor
dec
xor
scas
mov
push
or
inc
xchg
dec
incl
pop
push
inc
popf
pop
push
gs
inc
xor
in
test
pushf
scas
hlt
and
cs
mov
add
xchg
push
add
loopne
pop
in
je
lds
adc
fdivrl
jle
adc
or
jb
outsl
dec
dec
les
cmp
fstpl
lcall
lea
mov
jmp
sbb
add
adc
xchg
outsl
inc
cmp
mov
push
xchg
fs
fmull
adc
xchg
add
pop
pop
lods
pop
outsb
subb
callw
dec
jmp
dec
add
or
mov
clc
mov
negb
hlt
ffreep
int3
and
mov
fistpl
fwait
mov
mov
adc
rolb
lds
stos
xchg
pop
ds
jmp
bound
or
jecxz
inc
or
negl
sub
popa
popf
stos
fmul
dec
push
lret
xor
cmpb
xchg
fistpl
into
or
jecxz
jmp
movsl
push
inc
dec
and
and
hlt
jne
ds
and
fisubrl
push
insl
push
lcall
out
ret
sbb
or
sti
pop
and
lcall
jecxz
push
cmpsl
jno
push
fildl
ss
addr16
pusha
dec
push
imul
arpl
pop
jne
sbb
icebp
punpckldq
mov
stos
xchg
push
in
shll
fst
cmp
lahf
sub
add
out
ret
test
push
stos
call
out
js
daa
xchg
popf
dec
dec
loopne
lods
outsl
jmp
je
rorl
les
in
outsb
ds
int3
sahf
arpl
les
mov
cmp
or
adc
leave
lahf
xor
clc
and
adcb
out
push
dec
lods
ja
inc
repz
stos
mov
dec
test
and
mov
in
ret
fnstcw
ret
jg
stos
or
nop
insb
jnp
dec
stos
paddw
mov
inc
cmp
cmp
pusha
ficomps
daa
popa
adc
rol
xchg
push
push
test
insl
repz
inc
cmp
mov
outsb
mov
xor
mov
gs
sub
dec
push
xchg
aas
inc
popa
rorl
xlat
push
enter
mov
iret
leave
push
sbb
mov
cmpsl
cmp
push
fstenv
fcmovb
sub
and
sub
adc
inc
pop
sbb
fs
lods
xchg
dec
pop
mov
insb
mov
mov
das
stos
adc
hlt
inc
sub
movsb
or
jns
xor
mov
fwait
leave
cmpsb
dec
cmp
iret
fnstenv
jne
mov
sbb
pop
sub
fs
pusha
nop
mov
call
push
ds
inc
xlat
jmp
mov
adc
push
addr16
adc
jns
out
lds
test
shl
mov
lahf
mov
movsl
mov
push
out
pop
pop
xor
loop
sub
fadds
cmp
jns
mov
jmp
push
pop
out
jnp
pop
shlb
das
mov
and
adc
or
or
cli
mov
push
mov
or
stc
aas
sbb
scas
lock
clc
push
push
aaa
cmp
neg
inc
mov
outsb
sub
popa
dec
stos
cmp
jecxz
clc
push
in
es
xchg
push
sbb
scas
pop
call
das
jge
sub
insl
aam
aas
push
add
add
arpl
sbb
inc
lret
xchg
push
jg
je
mov
pop
push
movsl
scas
out
pop
xchg
or
and
cmp
mov
pop
cmp
push
in
pop
mov
sahf
or
dec
cld
sbb
enter
xor
fsubrp
xchg
je
loop
les
inc
sbb
jns
and
std
and
sub
cmp
pop
push
dec
sub
add
rol
adc
or
negl
out
loope
push
or
in
int3
mov
fcmovnbe
sbb
pop
jge
push
fcomi
jbe
mov
ficompl
test
jecxz
gs
aas
lea
mov
push
iret
push
mov
ffree
xchg
leave
dec
add
push
jne
aaa
inc
cld
addb
inc
fs
xor
mov
stos
icebp
sub
xchg
mov
sub
dec
imul
out
lahf
jg
push
test
mov
adc
inc
push
xchg
addr16
xor
dec
push
sub
push
mov
rol
xor
xchg
inc
jmp
pop
fsubrl
pop
mov
mov
push
repnz
cmp
cmp
or
xchg
cmpsl
jge
str
test
mov
or
pop
mov
int
movsb
xlat
mov
mov
sub
ret
fnstenv
and
enter
loop
mov
andb
jmp
inc
aas
lds
sbb
jmp
mov
sub
jae
xor
push
sub
cmpl
rclb
sarb
lret
add
loope
int3
loope
scas
test
insl
ret
xchg
fisttpll
xor
sub
gs
mov
jmp
sarl
adc
push
sub
imul
test
dec
mov
divl
call
mov
and
andb
push
sbbl
mov
rcll
shr
decl
or
inc
xor
pop
ret
mov
jns
adc
in
mov
fs
rcr
and
jns
xchg
fstpl
rcl
enter
ja
mov
scas
cld
adc
imul
push
ret
std
xchg
mov
jbe
jle
inc
and
fcmovne
in
cmp
jo
sub
mov
pop
nop
push
push
popa
mov
mov
je
adc
jecxz
xchg
adc
out
adc
cmp
xor
imul
sbb
mov
sbb
jnp
mov
fs
lock
orb
or
sub
sbb
sarl
fdivl
add
sarb
iret
fnstcw
push
mov
idiv
and
cld
mov
cmp
test
call
xchg
dec
dec
push
inc
inc
push
outsb
xchg
mov
ror
jmp
imul
sub
mov
cmc
out
jne
js
sub
dec
in
imul
fistpl
ret
dec
and
gs
out
mov
lret
test
pop
lret
push
mov
inc
lods
sbb
in
xchg
mov
mov
push
ret
scas
jl
fidivrs
mov
or
nop
xor
adc
xchg
push
mov
out
and
jl
dec
inc
jo
adc
int
inc
jge
outsl
fwait
imul
lahf
push
mov
enter
dec
aad
sbb
mov
xchg
shrl
cld
mov
inc
push
test
sbb
jg
dec
inc
jno
stc
sub
sub
pop
jnp
pop
lcall
mov
scas
lret
shl
loopne
push
testl
jo
dec
mov
in
gs
mov
mov
sbb
nop
mov
adc
lret
sbb
stos
mov
call
aas
jnp
clc
cs
sub
mov
xchg
pop
loop
arpl
das
pop
dec
ror
sbb
lahf
lret
sub
cmc
xchg
jb
add
xorl
enter
push
pop
arpl
jb
inc
xchg
jl
sub
rolb
sahf
sub
gs
fists
stc
lds
cwtl
cmp
jno
sbb
and
aad
jge
in
aas
mov
sub
popa
sub
orl
jge
and
xor
mov
jge
jl
cli
push
lds
cwtl
sbb
das
andl
insl
dec
inc
inc
cli
mov
std
xchg
sbb
addr16
push
sbb
inc
mov
or
test
inc
xor
test
repnz
cmp
mov
push
cmp
mov
sarl
mov
sbb
sub
lret
shlb
mov
xchg
pushf
adc
xchg
mov
dec
les
cs
lret
in
shll
fldl
cmp
xor
inc
jo
call
pop
in
loopew
mov
mov
jno
test
lret
out
push
out
shr
sub
push
out
aad
mov
sub
imul
xchg
adc
push
call
add
jno
mul
dec
ret
addr16
dec
mov
rcrb
sbb
push
and
mov
xor
add
mov
or
mov
cld
fdivrs
cmc
inc
sbb
sub
testl
adc
mov
mov
shrb
dec
add
ds
movsl
push
stc
add
jbe
aas
icebp
pop
add
mov
mov
pop
add
sbb
scas
dec
mov
mov
repz
mov
pusha
sub
inc
add
push
sbb
imul
cmpsl
push
clc
dec
mov
test
je
shlb
push
mov
int3
add
outsl
loope
dec
test
jno
loopne
jno
add
jnp
cltd
mov
xor
sub
cmp
adc
mov
jnp
inc
mov
cmp
std
imulb
pop
in
add
and
out
sub
test
jle
and
test
adc
dec
xor
ljmp
ss
ret
rorb
jmp
test
cmp
jl
lds
addr16
aas
jbe
movsb
xchg
ficoms
not
inc
in
sti
inc
cwtl
jb
mov
fdivrl
jl
mov
cs
stos
push
inc
imul
mov
imul
push
mov
call
fwait
jo
xor
nop
in
ja
push
rclb
xchg
nop
push
mov
fmul
push
pushf
shl
std
outsb
pushf
jae
shlb
out
and
mov
div
sahf
add
or
das
mov
jne
ret
lcall
lcall
mov
enter
jne
loopne
add
insb
sbb
xlat
xchg
push
lcall
data16
sub
loop
mov
add
shrb
loopne
dec
mov
test
push
imul
or
mov
mov
insb
or
inc
push
lock
movsl
pop
test
lret
test
sbb
dec
mov
gs
or
mov
pop
fcomip
pushf
fildll
or
pop
fwait
jbe
imul
rorl
enter
cmp
or
sub
jge
jecxz
movsb
xchg
stos
and
pop
imul
js
dec
pop
add
arpl
mov
aaa
pop
dec
mov
lret
pop
mov
dec
repnz
lret
jg
ror
loop
sbb
in
sbb
test
and
dec
mov
xor
loop
jl
adc
idivl
mov
sbb
fdivrp
cmp
rcrb
sbb
jl
and
cltd
lods
ja
jecxz
popf
mov
pop
sbb
push
xchg
lret
xor
push
or
lea
je
jb
push
push
adc
pop
aaa
mov
es
push
in
xchg
adc
insl
shll
xor
andb
add
daa
jnp
adc
test
aam
xlat
inc
mov
dec
sub
dec
add
mov
pop
sbb
pop
cld
add
aad
mov
ret
rolb
mov
sbb
cmpsb
push
push
mov
dec
dec
cmp
pop
jno
mov
adc
cltd
pop
push
ljmp
sub
sub
pop
sub
or
out
out
dec
mov
mov
push
jnp
cmp
les
cwtl
repz
es
js
inc
aaa
filds
cmp
mov
xchg
mov
fwait
je
sub
xchg
sbb
push
icebp
test
pop
mov
dec
cmpsl
out
xchg
clc
fcmove
inc
cs
imul
cltd
clc
imul
lret
and
enter
push
idivb
inc
xchg
inc
push
ret
cmpsl
mov
sub
aas
inc
into
xchg
xchg
fiaddl
xlat
push
push
int3
dec
insl
sbb
inc
andl
bound
pop
fidivrl
negl
repnz
inc
fwait
nop
mov
mov
call
cmpsb
jle
cmpsl
clc
mov
inc
orl
add
mov
jbe
add
and
mov
push
or
or
mov
jbe
push
pop
and
ds
cmp
stc
push
fwait
jne
adcl
mov
mov
ja
hlt
test
jmp
mov
rol
pop
mov
jmp
and
into
loop
pusha
stos
xor
push
enter
inc
lea
pushf
push
fmuls
int3
pushf
dec
fdiv
addr16
xor
or
into
ss
pop
mov
int
test
ror
xchg
xor
mov
in
inc
mov
in
inc
movsl
ret
jnp
pop
movsb
mov
shlb
scas
sbb
repnz
mov
std
or
jae
sbb
call
mov
clc
fwait
mov
fsubr
sub
push
das
movsb
jne
or
jl
xor
aad
push
dec
repnz
push
jnp
test
adc
mov
sub
dec
push
pop
push
je
add
cmp
push
stos
and
adc
in
or
nop
ror
add
inc
inc
sbb
nop
andl
out
popf
sbb
inc
mov
pusha
je
imul
test
adc
repz
and
or
lea
repnz
jp
xor
mov
jb
sbb
scas
adc
jmp
movsl
add
push
inc
or
sbb
and
mov
push
shl
mov
push
jmp
arpl
sub
scas
jno
push
inc
pop
push
cld
setb
insl
mov
fwait
inc
jmp
rorb
pop
cld
sub
hlt
xchg
outsb
scas
insb
testb
pop
cmp
pop
test
andb
push
arpl
leave
mov
in
cs
in
dec
inc
mov
mov
les
pop
repnz
and
std
xchg
adc
int
push
push
xor
clc
mov
test
cs
bound
mov
sub
pop
and
pop
stos
shl
ret
pop
and
xor
sbb
in
push
pop
popf
daa
bound
loope
aam
adc
cmp
mov
sbb
les
loope
fdivp
outsb
nop
sbb
inc
sahf
loope
rclb
ljmp
stos
out
jae
push
add
fs
sbb
je
js
stos
mov
repnz
cmp
xchg
imul
pop
adc
cmp
nop
popf
inc
dec
dec
push
dec
int
xchg
in
imul
adc
add
pop
mov
push
mov
inc
push
adc
xor
enter
lds
adc
adc
in
adc
addr16
movsb
push
mov
ja
xor
or
mov
xor
cmc
pop
daa
aad
push
dec
lret
push
into
outsb
lret
mov
inc
shrl
lds
and
les
test
jge
mov
dec
mov
in
dec
add
xor
sub
cmc
lret
js
mov
pusha
cmp
out
sbb
cli
sbb
pop
mov
mov
mov
push
sbb
das
enter
jno
jp
xchg
iret
icebp
push
mov
out
mov
rorb
lahf
mov
and
sahf
pop
jns
lds
divl
pcmpgtb
pusha
push
lret
fstl
dec
dec
pop
cmpsb
xor
fidivrs
icebp
fldl
xor
in
repnz
out
jbe
sahf
lea
bound
dec
ret
pop
xchg
out
fcoml
adc
inc
sbb
mov
in
inc
arpl
std
sub
pop
inc
cmp
es
nop
push
xchg
stos
sahf
je
adc
in
xor
add
cmp
inc
out
insb
sub
pop
xchg
nop
jge
dec
and
dec
mov
mov
mov
pop
dec
iret
into
repz
inc
adc
arpl
cmp
mul
xor
jmp
push
push
test
cmp
sub
dec
cmp
pop
repz
sbb
mov
jmp
int3
xchg
xchg
cmc
push
sub
int
std
xor
or
int
pushf
push
jmp
or
insl
mov
xchg
inc
adc
stos
xchg
jbe
push
loopne
out
cmp
aad
lret
cmp
adc
loopne
inc
das
pusha
fdiv
inc
add
jbe
push
cmp
loopne
adc
pusha
fcoml
lods
lret
jo
push
cs
in
test
xchg
inc
outsb
push
lods
jge
popf
inc
jp
inc
add
xchg
and
mov
insl
jb
addb
add
dec
and
sub
push
push
daa
aad
adc
xor
adc
pop
int
push
insl
loopne
xchg
jns
cmp
sbb
jae
mov
bound
add
lock
cmp
and
imul
in
cli
lods
add
scas
inc
push
adc
push
aad
stos
dec
test
fdivl
mov
lret
mov
sarl
inc
inc
push
jg
jne
xor
jg
push
adc
mov
sti
outsb
dec
push
push
je
in
pop
inc
mov
rorl
cmpb
inc
add
adc
out
push
pop
shr
fs
mov
push
popa
popa
adc
mov
xor
cmp
add
fs
xor
push
add
outsl
fnsave
dec
xchg
mov
xchg
out
jp
sub
cs
mov
add
out
inc
test
mov
inc
add
addr16
in
mov
loop
mov
aad
test
sub
in
dec
cli
jns
mov
jns
dec
and
movsb
out
pushf
sti
and
or
cmp
cmpsb
sbb
aas
pop
ret
mov
jnp
xor
and
inc
mov
xor
idivb
push
xchg
jns
test
and
nop
pop
jns
hlt
cmp
sbb
add
fdivrs
hlt
dec
push
rol
sub
mov
push
fisubrl
sti
jnp
sub
addl
fidivrs
cmpsl
pusha
inc
shrl
rclb
cmpsl
out
cmp
lret
out
inc
daa
and
mov
dec
mov
outsb
rorl
lcall
inc
and
add
jne
fcoms
inc
mov
xor
lcall
dec
das
jp
jmp
xchg
pop
inc
stos
lret
mov
sbb
mov
lahf
adc
inc
mov
fs
out
iret
dec
dec
popf
lods
mov
jno
mov
scas
jb
dec
adcb
jae
jno
bound
sub
ja
int
fisubl
sahf
inc
aaa
xor
daa
mov
fnstcw
adc
orb
dec
movsb
lea
cmp
ja
hlt
ss
pusha
inc
cmp
aas
insl
adc
xor
ja
mov
in
clc
mov
adc
inc
addl
cmp
push
insl
mov
test
repz
push
stos
xchg
mov
cmp
cltd
dec
ror
xchg
cmp
jmp
xor
mov
jne
mov
jnp
jecxz
xor
lret
enter
mov
jmp
or
inc
mov
add
in
cmp
jl
push
or
and
les
mov
and
ja
cld
lds
repz
xor
movsb
fadd
mov
add
inc
jno
hlt
in
mov
repz
jmp
inc
enter
shlb
lea
push
mov
insl
push
mov
pop
adc
adc
add
mov
cld
xor
adc
xor
std
pop
sahf
mov
lret
cltd
xor
xchg
mov
jle
pop
push
bnd
sar
sbb
mov
and
push
ret
cs
lds
ss
jmp
lods
push
fisttpll
out
add
lahf
vminpd
loopne
dec
sahf
jl
ficomps
loope
mov
rep
jecxz
mov
stc
sbb
sti
aad
cltd
and
dec
lcall
inc
mov
mov
orb
cld
das
push
ficoml
inc
xor
jle
in
ret
or
in
std
add
imul
cmpsl
sbb
sbb
stos
scas
sahf
jl
cmp
setle
ret
inc
ljmp
ja
push
lret
lahf
adc
inc
push
clc
or
iret
pop
xchg
mov
cmpsl
dec
in
mov
insb
xchg
push
or
mov
push
pop
xor
jg
in
fs
cwtl
pop
jne
sbb
inc
clc
cmp
jle
pop
fcoml
iret
dec
add
les
or
lea
and
mov
inc
mov
and
cs
inc
jle
mov
pop
pusha
jmp
push
inc
ja
sbb
mov
add
cmp
mov
sub
cmp
stc
mov
fistps
aas
stos
push
mov
insl
sahf
push
pop
shlb
and
ret
mov
mov
mov
add
jp
inc
dec
lret
dec
sahf
xchg
movsl
daa
mov
sbb
in
mov
dec
das
fildll
rorl
sub
lods
push
popa
in
pushl
cmpsl
push
ret
flds
push
add
jo
cmp
fimuls
arpl
lods
aas
dec
sub
test
adc
xor
inc
jo
loope
jge
push
pop
jae
xlat
pop
pop
movsb
aaa
clc
test
dec
in
gs
dec
cmp
sbb
lret
mov
lret
cmpsb
dec
cltd
mov
adc
lea
xchg
and
rcrb
jnp
mov
aad
adc
popf
test
hlt
sbb
lret
out
sub
cld
push
lret
lock
jmp
out
ja
mov
dec
adcb
int
and
insb
cmpsb
rorb
bound
push
decl
ljmp
shll
mov
xor
paddd
dec
aas
test
dec
push
and
mov
push
lds
sub
sahf
lods
movsl
xchg
add
lods
cmp
ja
subl
adc
int
adc
and
idivb
sahf
je
adc
notl
rorl
jecxz
mov
in
xor
jbe
clc
cmp
aaa
mov
push
adc
lret
ret
mov
dec
inc
mov
out
add
shrb
cld
pop
in
scas
fisttpll
or
pop
inc
incl
loopne
sbb
xchg
in
mov
sbb
xor
aas
scas
sbb
icebp
sahf
cld
xchg
sub
fidivrl
xchg
popf
inc
lahf
rclb
push
das
ds
shl
stos
jge
fidivrs
dec
loope
dec
jle
xchg
dec
mov
pop
lret
mov
aaa
out
adc
add
aam
mov
pop
push
lock
adc
inc
add
or
addr16
and
scas
jge
jecxz
test
mov
pop
add
rolb
enter
jnp
jne
imul
jbe
xor
pop
mov
icebp
cltd
mov
push
fsubr
cmp
mov
scas
cmp
insb
pop
ljmp
ss
aam
xchg
stos
jnp
cmp
fcoml
ja
mov
push
push
rol
or
arpl
pop
sub
cli
sahf
sbb
sahf
add
lea
push
imul
lahf
inc
xchg
and
cmp
sub
mov
mov
pop
movsb
push
sub
arpl
xchg
and
fcmovne
fimull
xlat
xchg
push
cmp
fwait
sub
add
sbb
or
sbb
xlat
pop
lret
sahf
jno
xchg
mov
loopne
adc
and
xor
add
push
fisttpl
sub
or
shrb
push
test
cmp
and
jb
gs
xchg
and
inc
cld
repz
add
fcomps
ret
jb
cmp
mov
int3
shrl
scas
ficompl
push
jbe
mov
adc
add
mov
mov
sub
jae
mov
jecxz
mov
ja
negl
clc
mov
mov
cmp
inc
imul
pop
lret
adcl
mov
xchg
dec
mov
cmc
push
pop
sbb
push
dec
or
mov
sti
out
adc
imul
stc
mov
mov
aaa
inc
mov
int
jnp
lret
add
lret
mov
push
xchg
in
and
add
xchg
mov
je
xchg
lahf
gs
xchg
outsb
fs
movsb
and
into
fnstsw
mov
pop
loope
and
das
and
and
das
testb
arpl
cmpsb
dec
daa
enter
jmp
push
mov
aam
pop
mov
aad
dec
sub
adc
mov
xchg
scas
out
cmpl
jg
andl
add
sarl
loope
sbb
push
mov
pop
push
jge
dec
pop
cmp
cmpsb
jno
dec
imul
dec
sarb
outsl
jmp
sti
imul
in
bound
mov
mov
dec
jo
mov
dec
js
sbb
jo
cs
gs
in
pop
push
xchg
cmpsb
and
adcb
mov
mov
cltd
xor
imul
sbb
push
mov
add
mov
mov
sbb
cmp
repz
xorl
cmp
test
or
std
pop
pop
in
dec
cmp
xor
push
or
pop
dec
hlt
xor
std
bound
ds
aam
mov
aas
sbb
dec
fildl
iret
cmc
aaa
mov
jae
or
cmpsl
scas
es
nop
movsb
mov
or
adc
cmpl
ljmp
int3
gs
lret
xor
hlt
and
loope
cmp
lahf
lea
adc
or
push
movsb
imul
mov
rolb
movsb
pop
add
in
je
mov
fs
aas
add
imul
repnz
das
into
js
stc
cmpsb
iret
lret
inc
pushf
mov
icebp
daa
mov
cmpsl
fnsave
mov
outsl
test
xchg
shll
mov
aaa
sub
pop
iret
clc
fisubrs
test
lea
adc
inc
out
sbb
adc
push
mov
mov
mov
dec
push
inc
mull
or
jl
movsb
add
int3
ljmp
xlat
pop
adc
shll
mov
sahf
cwtl
jg
les
out
push
push
mov
out
fisubs
fisubl
pop
daa
adc
in
pop
xor
lret
adc
dec
pop
es
inc
popf
cmp
aaa
ds
bound
inc
aas
jmp
into
mov
pop
in
mov
es
mov
and
jb
aaa
mov
in
sub
or
mov
outsb
push
adcb
inc
movsb
shll
fwait
inc
addl
xlat
out
les
add
loopne
xchg
or
pop
inc
jge
leave
xorl
lods
pop
cli
push
and
cltd
sub
mov
jl
adc
mov
movsl
or
movsl
lea
in
inc
push
lahf
repnz
inc
lcall
cmpsl
adc
aas
mov
cmp
inc
jle
dec
mov
xchg
negl
xor
lea
lea
ret
in
pop
pop
adc
mov
movsb
sbb
inc
xlat
fprem
outsb
jl
sub
leave
pop
mov
out
ja
mov
fs
mov
insb
jle
cmp
push
movsb
and
popl
aaa
push
jle
sbb
sub
inc
ficoms
xchg
dec
push
sbb
pop
xor
push
pop
sbb
and
popa
push
mov
ljmp
movsb
inc
imul
xchg
push
icebp
mov
mov
push
les
in
pop
push
or
pop
or
adc
or
in
mov
and
addb
mov
fsubr
push
mov
add
cltd
cmp
push
arpl
insb
aad
pop
mov
or
imul
mov
add
inc
inc
adc
mov
jno
xorb
mov
sub
repz
fs
imul
pop
ljmp
mov
insb
mov
sub
add
in
push
lock
das
mov
jo
jmp
cltd
inc
push
pop
pop
cwtl
dec
aaa
and
push
int3
cmp
pop
pop
fcomp
shlb
or
push
dec
movsb
rcrb
dec
or
mov
adc
mov
loope
mov
xor
xor
enter
sbb
and
int3
int3
iret
subb
lret
fiaddl
cmp
cld
sbb
lods
mov
jb
xor
sbb
insl
and
pop
dec
orb
xor
xchg
int
rsqrtps
jno
or
add
adc
out
mov
mov
jecxz
icebp
pop
add
mov
mov
es
sbb
sti
push
cmp
fs
gs
dec
sar
movsl
iret
adcl
add
stos
push
inc
jne
mov
hlt
fidivrl
bound
pushf
adc
fldcw
out
mov
out
pop
dec
cmpsl
mov
out
mov
std
rorb
mov
bound
mov
inc
adc
push
out
negl
lcall
push
adc
in
or
mov
out
es
mov
jo
xchg
test
insb
cmp
cmc
jmp
fcomps
push
jns
mov
xor
jne
call
pop
push
lock
cmpsl
cmp
popa
lahf
in
pushf
sub
bound
jmp
and
mov
adc
push
push
mov
push
inc
sub
inc
jbe
rorl
push
add
push
inc
cmp
out
out
int
shrl
mov
fadd
in
js
push
push
jne
notb
dec
in
fsubrs
mov
mov
sub
leave
jno
je
lods
jb
jmp
add
loope
xchg
lcall
fstps
mov
rcrb
outsl
sbbb
fildl
jo
xor
push
fistps
mov
dec
movb
cmc
out
sbb
loop
or
pushw
sbb
fnstenv
xchg
stos
mov
sbb
in
scas
lods
in
repnz
shrl
test
xchg
decb
imul
inc
sbbl
xchg
stos
test
imul
pop
push
test
push
push
mov
jb
lods
cmpl
dec
push
pushf
cmp
adc
lret
int3
inc
jno
or
xchg
aam
jno
hlt
xchg
jnp
stos
inc
lret
cld
lock
stos
jb
aam
jmp
out
jmp
mov
cmp
lret
xchg
mov
je
dec
fwait
mov
sbb
js
inc
push
call
loope
fldt
mov
in
push
mov
mov
imul
jne
scas
bound
movsl
xchg
xchg
orb
and
jl
fsts
mov
pop
sub
xor
call
jl
add
lds
ret
mov
push
or
sahf
jo
add
mulb
and
mov
ljmp
test
cmp
xchg
loop
sbb
push
int3
or
das
xchg
aas
daa
xor
and
mov
mov
add
pop
sub
divb
popf
jo
fcoms
pusha
daa
mov
sub
push
sahf
ror
adc
orl
sub
and
sbb
jnp
insb
dec
imul
int
jl,pn
movsl
and
xor
or
arpl
nop
jle
fwait
inc
cld
push
faddl
mov
sbb
lahf
mov
xchg
popf
dec
lods
cmp
jle
outsb
notb
xor
push
sbb
push
inc
adc
addr16
push
ficoml
or
and
xlat
mov
pushl
rorl
int3
push
jl
push
mov
test
out
or
xchg
stc
stc
movsl
lods
int
xor
imul
sbb
fs
sbb
adc
inc
ficoml
jge
les
jmp
pop
mov
enter
imul
jp
gs
hlt
push
mov
sub
jge
push
and
mov
jmp
pcmpgtb
nop
xor
test
pushf
dec
xchg
and
rclb
mov
lock
push
loopne
pop
into
mov
addl
push
ss
jns
cmp
sbb
inc
jo
jecxz
pop
outsl
add
dec
es
outsl
test
push
add
in
loope
push
mov
cwtl
cld
scas
sub
and
cli
jmp
aam
push
dec
inc
push
inc
gs
xchg
push
js
xchg
mov
xchg
push
scas
add
rcr
out
stos
jne
lahf
xchg
in
loopw
shll
sbb
cmp
stc
daa
mov
push
jmp
inc
insl
mov
imul
xor
int3
jns
fisubrl
xor
jl
pop
mov
jge
cs
inc
jbe
fstpl
push
iret
jnp
orb
loopne
adc
in
lock
inc
mov
xor
out
adc
ret
loopne
das
mov
pop
or
ja
inc
or
or
inc
imul
dec
lods
sahf
mov
mov
lcall
pop
push
xor
in
jae
adc
addr16
pushf
daa
push
stc
xchg
aam
lret
fwait
stc
xor
adc
gs
movsl
hlt
cmpsl
push
stos
xor
adc
test
mov
sarl
mov
mov
adc
lret
adc
jne
sbb
shl
sbbl
adc
fimull
mov
cld
lock
xor
mov
xchg
mov
outsb
lahf
dec
mov
int3
push
addr16
and
fildl
cs
or
dec
movsb
lock
jns
out
pusha
push
popa
ss
jb
les
pop
inc
pop
dec
rorb
or
push
hlt
shlb
pop
sti
js
xchg
cmpsb
or
mov
mov
sbb
sarb
cmpsl
dec
shrb
fwait
dec
xchg
movsb
lock
incb
ret
mov
adc
xchg
cmp
pop
xor
aaa
pop
icebp
call
xchg
enterw
rcr
cwtl
dec
pop
jne
movsb
jno
in
ja
mov
cmp
xor
mov
inc
std
mov
lods
movsb
mov
lret
adc
mov
xchg
pop
dec
test
outsl
mov
cmp
jno
dec
shlb
xchg
and
jne
add
mov
xor
bound
mov
inc
enter
jle
popf
les
aas
loopne
lret
mov
fnstcw
inc
test
mov
sub
testl
jo
push
dec
sbb
test
or
inc
inc
mov
xchg
jnp
jbe
leave
imul
out
mov
adc
es
daa
cmp
mov
mov
movsb
imul
mov
adc
mov
test
inc
in
and
mov
lods
lea
jb
divb
dec
push
mov
lods
rolb
ljmp
pop
jb
stos
pop
dec
or
lret
jne
pop
mov
imul
and
mov
or
xorb
xchg
inc
mov
arpl
in
pop
in
je
scas
xchg
ja
std
xlat
jl
adc
cltd
lret
rcl
xor
and
adc
cmp
imul
mov
inc
cmp
or
sub
pushf
iret
in
cmp
idivl
addr16
test
pop
ret
and
jb
repz
dec
xor
or
pop
mov
dec
mov
inc
out
es
insb
sbb
popf
popa
fcompl
in
pushf
adc
fstpl
mov
pop
xchg
mov
sub
loop
lds
sarl
data16
cmp
mov
mov
dec
int
mov
sub
fadds
or
je
popa
outsb
add
jmp
test
mov
inc
mov
inc
cmp
jne
jbe
push
mov
sbb
mov
or
xor
aas
in
jne
out
into
sahf
ret
out
jb
lret
in
xchg
jp
mov
mov
jne
sbb
jne
push
mov
pop
xchg
jno
xchg
adc
adc
in
les
scas
scas
xchg
pop
xlat
insl
sahf
fldcw
cmp
das
imulb
sub
adc
mov
mov
je
xchg
cmp
notb
push
fwait
and
mov
dec
fwait
mov
fcoms
jns
and
xor
movsb
adc
jl
das
outsl
add
ror
adc
les
test
clc
push
jne
in
xor
mov
push
adcl
jmp
daa
in
xchg
popf
jl
mov
in
rcl
shrl
add
push
xchg
dec
cmpsl
nop
gs
and
lods
clc
push
and
mov
xor
cmpsb
sbb
ljmp
data16
jnp
andb
mov
shl
ret
xchg
inc
popf
lcall
and
xchg
insb
xchg
mov
stc
adc
enter
push
in
and
movsb
lods
jne
mov
into
sha256msg1
adc
clc
std
ret
cmp
das
js
mov
and
xor
pop
stos
sbb
pop
sahf
adc
repnz
pop
jo
mov
xor
mov
and
lcall
or
into
fldl
pop
mov
mov
adc
ja
jp
test
dec
loopne
pop
aad
add
mov
xchg
out
scas
popa
add
stc
jle
pop
add
dec
outsl
mov
aaa
mov
sbb
xchg
aas
jmp
pop
out
jmp
pop
out
popl
jg
xchg
mov
dec
in
mov
dec
test
mull
add
jb
jno
add
iret
stos
mov
xchg
je
aaa
rcrl
push
mov
out
push
jg
cmp
pop
push
test
inc
repnz
inc
jnp
mov
mov
pop
pushf
xor
test
out
gs
popf
pop
pop
dec
adc
out
fmull
pushf
lret
jno
sbb
sub
mov
pop
push
int3
in
cli
fs
sub
daa
dec
test
push
jb
and
divb
ffree
jle
shll
jbe
xchg
sub
jl
fstpl
jne
and
xchg
into
shrl
dec
and
sub
in
lahf
cmc
out
pushfw
jle
cmpl
stos
fs
push
sbb
popf
dec
push
fisttps
or
imul
loopne
push
adc
cmp
pop
pop
push
sbb
xor
in
loopne
jl
adc
mov
jo
out
xchg
push
je
scas
xor
or
ss
push
jb
in
int3
mov
loope
enter
jge
xor
ret
fsubs
insb
mov
mov
and
cmpsb
fwait
pop
in
rcrb
pop
push
inc
dec
or
xchg
push
inc
mov
mov
sbb
mov
inc
xchg
imul
sub
xor
es
fmuls
loop
cltd
out
mov
and
sub
test
stc
enter
cltd
ljmp
and
in
jecxz
aaa
int3
jnp
ss
mov
and
and
shrb
add
je
movsl
test
mov
mov
in
cs
add
mov
add
xchg
loopne
add
pop
iret
sbb
pop
push
test
sbb
xor
dec
movsb
bound
push
insl
jecxz
xor
mov
add
mov
and
scas
push
mov
outsl
jecxz
mov
mov
cmpl
outsl
aas
push
das
aaa
mull
cs
push
mov
out
lahf
mov
push
sub
jge
dec
lret
fcom
sbb
xchg
push
lea
inc
and
test
repnz
stos
clc
scas
fimull
faddl
and
adcb
ds
dec
dec
testl
test
adc
xor
fnsave
inc
out
dec
lods
add
cltd
sbb
rcrb
adc
cmc
adc
add
test
scas
xchg
and
shl
mov
adc
in
inc
dec
and
mov
js
xchg
dec
mov
fwait
cmp
hlt
ret
push
insl
xor
xchg
adc
pop
mov
jb
xchg
inc
or
shl
leave
fsubs
in
push
mov
lcall
mov
leave
fsubl
sub
icebp
stos
push
xchg
add
ja
or
lret
xor
lret
jno
cmp
divl
bound
and
into
in
cli
fsubl
stc
scas
adcb
insl
iret
shl
out
ds
cld
cmc
mov
or
in
add
sahf
in
xchg
push
pop
cld
adc
data16
cmp
loopne
call
adc
stc
aaa
cmpsb
add
out
in
mov
jnp
and
adcb
dec
out
pop
sub
jp
cwtl
inc
js
push
js
std
push
or
fstps
pop
les
lret
pop
dec
xchg
lahf
xor
or
sbb
inc
inc
or
jle
mov
and
cmpsl
pop
std
fisttps
mov
xor
scas
mov
xchg
jg
mov
xchg
mov
or
pop
xchg
enter
push
sahf
inc
dec
and
arpl
push
xchg
mov
pop
adcl
loopne
testb
stos
fbld
sub
repz
movsl
adc
cmp
outsb
fldcw
xor
mov
or
mov
jo
push
hlt
and
xchg
mov
jg
sbb
xor
fsts
ds
mov
sbb
mov
js
mov
test
adc
int3
xchg
add
sub
add
stc
mov
or
xor
stos
into
cmp
loope
inc
mov
sub
add
in
mov
adc
mov
fisubrs
or
mov
and
das
mov
push
lret
data16
js
add
jb
add
stos
std
mov
movsb
xor
pushf
pop
loop
lcall
arpl
xchg
test
je
mov
and
jnp
mov
add
xor
cld
push
add
or
in
push
sti
xchg
mov
cld
push
sub
add
lcall
push
sbb
lods
or
imul
fnstsw
or
jb
jecxz
or
xor
int
mov
xor
outsb
iret
jge
into
mov
jecxz
or
jbe
sbb
fs
mov
or
jp
mov
fiadds
inc
and
pop
popa
adc
les
dec
sbb
in
popa
adc
xchg
mov
stc
negb
mov
or
mov
daa
nop
call
pop
outsb
pushf
push
push
ret
cmc
shrb
int3
xor
inc
or
addb
push
inc
daa
cli
jg
inc
xchg
dec
movsb
cmc
mov
jb
pop
pop
idivl
mov
cmp
jg
jae
je
movsl
jg
push
aam
add
sub
loopne
pop
push
ljmp
xchg
xor
sub
jno
aad
pop
or
inc
scas
pop
aas
adc
mov
mov
inc
loop
loopne
incl
mov
and
int
sbb
or
mov
push
mov
shll
pop
jno
leave
mov
and
dec
leave
or
insl
fldenv
test
jle
into
insb
add
mov
jl
cld
and
push
cmc
je
inc
imul
push
btr
adc
adc
inc
inc
xor
mov
xchg
xchg
adc
arpl
test
push
mov
or
gs
sbb
mov
shrl
insb
xchg
or
add
icebp
jecxz
leave
imul
divl
adc
sub
cli
and
iret
in
les
add
inc
js
out
cmpsb
mov
push
xchg
adc
jnp
push
mov
loopne
lret
shll
cmp
int3
arpl
inc
xor
hlt
sub
popf
fld1
or
sub
dec
xchg
imul
repnz
inc
inc
icebp
stos
ret
push
sbb
loopne
fwait
popa
push
data16
xor
pop
adc
std
pop
stos
dec
xchg
mov
movsl
out
ljmp
inc
icebp
sbb
test
jecxz
ret
push
sti
mov
ljmp
inc
xchg
mov
inc
sarb
xor
jge
out
mov
ja
imul
stc
outsb
jnp
xchg
sbb
sub
add
loop
fdivp
out
pop
cmp
data16
lcall
mov
lea
push
mov
inc
les
loop
or
pusha
and
ret
lcall
out
mov
mov
or
in
pop
mov
push
lret
adc
jmp
push
add
mov
inc
sbb
inc
push
stc
cmp
pop
mov
push
mov
int
stos
aam
es
push
xor
out
xlat
test
and
xchg
pop
lock
push
loope
test
xor
loope
jbe
inc
mov
pop
sbb
mov
inc
jo
push
mov
mov
int
jo
cmpb
bnd
das
bound
in
es
add
in
xor
stos
lds
movsb
in
call
inc
jns
jno
mov
movb
out
pxor
dec
sbb
es
mov
adcb
push
ret
jecxz
sub
dec
sub
pop
push
mov
cmp
sub
pop
mov
add
pushf
mov
xchg
scas
std
push
lret
mov
scas
mov
fildl
scas
xchg
lret
movsl
lahf
stc
xor
ret
cmpsb
push
mov
sbb
mov
or
shr
daa
add
rorl
scas
loope
test
or
mov
jb
jae
dec
cmp
cmp
pop
adc
std
pop
in
scas
out
add
imul
or
loop
adc
pop
jmp
leave
dec
cmp
jae
and
scas
adc
dec
pmuludq
cmp
aas
test
scas
xor
decb
xchg
loop
mov
lods
sub
into
push
lock
xchg
or
outsw
fbstp
xchg
cltd
das
jle
mov
fsubrs
in
test
mov
jne
sti
xorl
shrb
jp
nop
and
add
test
adc
jb
push
cmp
jle
ret
mov
cmpsb
dec
xor
rol
sbb
mov
jne
gs
fstpl
and
insb
daa
fs
pusha
jns
or
xchg
pusha
call
subb
clc
lea
testb
repz
dec
scas
and
fwait
enter
cli
lods
shlb
and
cmpb
xor
enter
inc
clc
stc
fnop
cltd
aaa
push
cmpsl
adc
jge
sub
mov
mov
jg
and
movsl
push
stc
lcall
sbb
je
adc
pop
xchg
sub
adc
xlat
or
sub
push
xor
mov
push
pop
xor
inc
test
es
hlt
pushf
jne
add
add
push
sub
loop
loop
add
iret
ret
rcll
pop
sarb
xlat
jbe
or
cmp
aaa
pop
mov
outsb
out
sbb
shrb
pop
popf
mov
mov
dec
addr16
movsb
jmp
sti
es
cmp
pop
sbb
sbb
jmp
dec
jmp
mov
adc
xor
adc
add
cld
addr16
call
add
pop
mov
test
jp
jae
mov
adc
inc
scas
lods
inc
stc
pop
xchg
insb
push
popf
xchg
repz
push
out
jne
int
lods
in
xchg
xlat
loope
mov
cmpsb
out
fwait
arpl
dec
sti
inc
xchg
test
push
pop
add
adc
pop
lret
cmp
lock
sub
sub
pop
push
dec
mov
pusha
data16
rolb
fidivl
xchg
mov
dec
mov
sar
jb
sub
fistpl
shlb
add
movsl
outsb
inc
addl
test
cmpl
lods
enter
mov
sbb
inc
imul
pop
pop
lcall
in
adc
mov
mov
push
push
scas
sbb
add
dec
imul
lcall
stos
jnp
fstl
sbb
sbb
scas
ret
daa
cmp
inc
aam
push
push
stc
cmp
rclb
out
sub
mov
js
inc
mov
imul
ret
jno
xchg
jl
cmp
test
addr16
rol
push
stos
movsl
pop
dec
push
imul
lea
sub
cmp
sub
ret
in
cmpsl
stos
mov
mov
in
add
inc
lahf
stc
jbe
mov
mov
shl
sub
mov
xlat
mov
ret
and
xchg
aas
shrb
and
jecxz
add
xchg
cwtl
jle
fsubr
add
dec
push
gs
iret
mov
inc
popa
mov
popa
dec
in
mov
movsb
bound
fimull
pop
and
repz
sub
or
outsl
popa
mov
jnp
pop
mov
inc
xchg
daa
cmp
pop
lods
test
pop
outsl
rclb
xor
js
mov
int
sub
xchg
fadds
xor
jg
les
mov
mov
xor
xchg
xor
jge
push
js
jg
shl
mov
xchg
jecxz
clc
out
add
lods
or
jle
push
test
jl
jo
mov
sub
cmpsb
push
add
aas
push
xchg
jnp
sub
xor
mov
pop
out
inc
out
sti
mov
add
cmp
lea
sub
jne
adc
adc
push
sbb
shlb
aam
mov
lock
or
rclb
stos
mov
dec
andb
add
pop
mov
insb
mov
add
inc
or
push
xor
xchg
jp
adc
data16
js
mov
mov
mov
jmp
testb
pop
cmpsb
pop
adc
push
rcl
out
jecxz
sbb
xlat
int3
mov
lea
pop
jb
outsb
sbbb
sbbb
fistps
and
mov
and
scas
aaa
jecxz
sarb
into
sbb
pop
cltd
ljmp
pop
lret
jne,pn
add
xchg
jmp
add
xchg
xlat
es
xor
jno
outsl
mov
add
mov
ss
in
adc
dec
jo
cs
adc
xorb
or
inc
push
mov
adc
loop
push
out
movb
cmpb
mov
add
jns
xor
lods
pop
dec
lretw
jne
mov
bound
fdivrl
shlb
xor
push
inc
cmp
lds
sbb
jecxz
inc
arpl
mov
inc
add
lds
mov
jne
pop
inc
popl
repnz
cmp
add
mov
into
leave
xchg
arpl
sahf
mov
sbbl
jns
fbstp
test
insl
je
xor
sub
jmp
inc
js
push
nop
shr
lds
mov
push
push
divl
int
ret
or
mov
push
pop
iret
movsl
sahf
push
ror
mov
sub
arpl
xlat
in
shll
inc
mov
lock
adc
dec
jge
cmpsl
lods
cmp
outsb
ffreep
rcrl
nop
push
fsubrl
test
sbb
or
fidivl
pop
adc
in
aad
lahf
sub
in
inc
jb
imul
mov
lret
lock
cmp
adc
ss
mov
negb
les
push
sub
cmp
push
cmpsl
jmp
test
pop
es
repz
cltd
popl
lahf
push
fdivrs
and
xor
dec
inc
add
sbb
test
jg
push
jg
jns
lock
jnp
ja
test
imul
int
int3
lods
cli
xor
pop
or
fisttpl
std
lds
and
jecxz
or
gs
pop
jbe
push
lret
lea
dec
sti
mov
pop
jne
les
es
icebp
adc
sbb
cmp
pushf
mov
cwtl
idivb
jns
out
loop
in
jns
pop
cmp
es
push
jbe
adc
cltd
pop
mov
outsb
adc
fcomi
push
dec
repz
and
lret
fdivrs
sub
in
cmc
adc
cmp
movsl
iret
test
jb
jmp
inc
cmp
mov
mov
enter
lods
outsb
or
jb
dec
xor
dec
or
je
push
imul
inc
dec
das
test
stc
mov
mov
jp
sarb
sahf
ljmp
push
dec
ret
pop
mov
push
push
das
fdiv
out
or
fs
pop
fisubs
jno
adc
outsb
and
pop
or
adc
enterw
xlat
xor
or
mov
mov
loope
sub
sbb
mov
adc
iret
mov
cmpb
jnp
mov
dec
je
mov
scas
loop
cmp
cwtl
mov
pushl
push
push
pop
dec
dec
mov
xchg
lock
rcr
ds
iret
mov
jl
mov
je
xchg
or
test
push
int
jmp
xor
int3
call
stos
outsb
mov
inc
out
jge
movsb
push
not
call
xchg
add
leave
ja
xchg
divl
xor
paddd
dec
mov
mov
mov
int
mov
pop
cwtl
inc
push
xor
xchg
pop
mov
into
popf
lahf
lret
cmp
jmp
add
inc
repnz
jnp
push
js
call
xchg
xchg
pop
cmp
ret
mov
sbb
data16
fidivs
push
push
frstor
mov
idivb
aam
inc
ret
xchg
push
int
pop
cmp
imul
test
inc
xlat
mov
pop
cmp
add
mov
pop
sarb
stos
pop
or
dec
sub
sbb
fwait
cmp
sub
xchg
mov
sbb
or
dec
sbb
push
add
into
mov
sub
push
jle
pop
fcmovu
pop
xchg
int3
out
push
mov
add
xor
jg
test
lods
jne
clc
xchg
rorl
and
loop
mov
testl
push
push
dec
mov
mov
int
ret
add
clc
mov
pop
in
fucomp
mov
sbb
mov
jbe
pop
push
mov
add
jno
jge
or
and
cmp
lds
gs
pop
nop
cltd
js
pop
cmp
leave
pop
call
testb
fisubs
add
mov
cmp
jmp
into
mov
inc
mov
fidivrs
out
xor
mov
mov
in
and
imul
mov
inc
add
call
out
mov
movsl
icebp
adc
jecxz
cwtl
lods
arpl
cmp
lea
mov
push
ljmp
in
sti
sub
pop
popf
int3
cli
jle
lahf
xor
push
mov
mov
xchg
clc
jecxz
sar
and
arpl
jge
jbe
mov
mov
sbb
test
jmp
xchg
bound
cmp
cmc
xchg
jmp
and
inc
mulb
call
sbb
add
outsl
mov
mov
cmc
sub
jnp
xchg
movsl
mov
or
fbstp
add
push
stos
mov
sub
mov
lea
or
and
dec
lret
test
cmp
sub
mov
sarl
mov
sub
inc
adc
lods
sbb
outsl
jge
cli
jo
iret
sbb
xor
mov
jb
cmp
adc
repz
or
sbb
jle
cmp
mov
mov
xchg
aaa
inc
pop
cli
pop
cwtl
push
pop
push
je
sahf
and
cli
movsb
movsb
sbb
andnps
push
clc
arpl
insl
popa
pushl
stos
mov
mov
fadds
ror
jg
out
in
stos
adc
xchg
xor
add
shl
clc
push
push
adc
xor
push
jecxz
adc
mov
ds
push
mov
mov
in
xchg
dec
ret
out
ss
mov
loopne
or
sti
pop
jne
loope
dec
fs
sahf
sti
stc
mov
mov
mov
mov
mov
xor
cmp
adc
push
outsb
ret
xor
inc
stc
inc
push
push
push
push
cmpsl
jecxz
cmpsl
dec
int
push
pusha
pop
sbb
rcrl
popf
bound
mov
sbb
push
outsb
clc
mov
jle
mov
das
mov
sti
jmp
xchg
mov
iret
pop
mov
inc
sbbb
leave
nop
or
gs
sub
inc
jo
sti
mov
insl
jae
in
sub
inc
leave
mov
imul
push
sbb
in
test
movsb
pop
lock
das
jb
iret
mov
test
insb
ds
jo
sbb
outsl
lods
fistpll
icebp
fldl
xchg
loope
test
cmp
pusha
pop
xor
dec
push
fwait
iret
jns
xor
sbb
addr16
rol
ficoms
movsl
testl
inc
mov
adc
mov
adc
mov
outsb
scas
xor
jo
jmp
lahf
movsl
sub
cltd
leave
adc
dec
loopne
imul
fdecstp
cmpsb
inc
int3
push
sub
push
loope
sti
es
or
add
decb
cmc
aam
mov
jns
mov
sarb
and
jmp
hlt
or
fdivrp
stos
std
fstpt
shll
fmuls
cld
out
in
fwait
dec
rcll
inc
pop
sti
out
dec
pop
pop
fmull
mov
pop
adc
dec
push
dec
dec
rcrl
pop
out
jp
out
xor
sub
or
jmp
and
pop
enter
mov
sbb
mov
cmp
xchg
dec
cmp
pop
mov
stos
jnp
sub
mov
push
call
xor
cmpsl
iret
xor
fstl
das
jmp
mov
jb
sub
cmp
aad
add
inc
xchg
lock
cmp
test
sbb
sub
or
xchg
cmp
jle
mov
hlt
arpl
jl
lock
adc
pushf
jo
flds
mov
aam
fwait
push
push
push
mov
or
push
rol
pop
call
inc
lods
inc
ret
data16
out
cltd
aas
jmp
pop
cli
jo
jmp
stos
and
or
pop
fildl
ss
movsl
mov
and
lret
adc
sbb
add
addl
into
mov
mov
insb
nop
lret
mov
xchg
jnp
inc
mov
loop
aaa
aas
xchg
xchg
cmp
push
lahf
xchg
lret
stos
push
jmp
mov
pusha
xor
sub
xor
sbb
stos
fstps
aas
pop
sarb
inc
aaa
mov
movsb
dec
push
es
ret
popf
daa
rcrl
pushf
out
rorb
dec
lret
das
inc
jge
dec
pop
mov
jp
jbe
and
sub
adc
sub
jne
xchg
in
mov
popa
mov
int
or
xchg
in
cltd
nop
mov
mov
sub
pop
push
adc
aas
insb
cmp
sarl
aas
sahf
adc
mov
arpl
ret
sahf
xor
push
jae
popf
cmp
dec
dec
lds
pop
imulb
mov
adc
lods
aaa
cwtl
lds
ljmp
pop
sub
add
frstor
add
mov
and
xor
enter
fwait
mov
das
mov
lcall
dec
loopne
mov
cmc
jbe
ret
jmp
cmp
dec
sahf
test
xor
pop
cld
fwait
dec
jecxz
mov
jecxz
xlat
push
and
and
sti
jne
popf
bound
cmp
jne
sbb
xchg
pop
add
jno
leave
sub
mov
into
repz
sub
ljmp
cmp
mov
inc
xchg
mov
outsb
adc
aam
ljmp
jg
lahf
mov
cmp
cwtl
sahf
mov
mov
cwtl
push
pop
pop
xlat
in
lcall
or
pop
add
mov
js
int
or
cmp
xchg
dec
jb
jmp
mov
cmp
dec
ja
inc
repnz
mov
jecxz
cmp
jp
jnp
xchg
sbb
enter
cli
jo
pop
mov
pop
and
ja
pop
cli
fcomip
fnstsw
xor
add
repz
mov
in
xor
pop
pop
push
adc
loope
dec
mov
push
pop
popf
pop
push
adc
shrb
and
movsb
xor
inc
push
xchg
sub
pop
lock
in
lgs
std
dec
std
cmp
iret
mov
mov
fcoml
bnd
movsl
fsubs
movsl
adc
xchg
inc
mov
in
cs
rcrb
pop
mov
out
pusha
pop
adc
xchg
loop
push
ja
push
mov
test
aad
jmp
inc
mov
pusha
sub
cmc
xor
mov
outsb
mov
hlt
nop
and
daa
stc
or
dec
xor
push
xchg
pop
mov
clc
insl
jg
sbb
aad
xchg
dec
xchg
fcmovnb
lret
adc
xlat
addr16
mov
lcall
ljmp
inc
imul
adc
int3
push
rol
and
jns
hlt
gs
add
insl
pop
popl
loope
dec
test
mov
dec
jp
outsb
cld
xchg
and
jno
push
cmp
and
mov
ret
mov
movhps
int
out
stc
mov
push
test
out
js
ror
inc
inc
adc
mull
jecxz
lock
inc
fucom
mov
adc
iret
cmp
cmp
icebp
sbb
sahf
and
rclb
out
scas
outsl
sub
flds
sub
cmpb
mov
mov
mov
aaa
popf
lds
cmp
mov
sbb
add
dec
std
fwait
mov
andb
jp
fsqrt
ljmp
gs
js
inc
push
lahf
repz
add
add
es
add
stos
jb
mov
cmpsl
lcall
sti
inc
divl
dec
jl
movsb
cmp
cmpsb
jp
das
insb
pop
rorb
mov
push
pop
mov
or
jnp
sti
jp
call
ss
pop
mov
xor
stc
lods
idiv
mov
mov
outsb
mov
fldcw
call
insl
dec
das
rcll
adc
cli
addr16
lock
xor
mov
into
iret
or
inc
mov
pop
push
frstor
pop
rcr
mov
push
shrl
scas
arpl
inc
ss
bound
aas
scas
inc
fistpl
in
jns
loopne
mov
pop
and
mov
pop
scas
cli
fadds
aad
repnz
inc
jo
mov
and
mov
fcmovu
shr
aas
rolb
arpl
mov
fidivrl
dec
das
cmp
lods
mov
cmp
fsubrs
jns
ds
and
add
insb
mov
jnp
or
push
adc
dec
popa
and
shrb
gs
sub
sbb
push
scas
mov
cmp
and
pop
ret
push
sbb
mov
xchg
mov
xchg
es
jp
cli
add
dec
add
insb
gs
mov
push
sbb
enter
daa
inc
fcompl
es
cmc
scas
ds
xlat
jnp
in
sub
fiaddl
pop
aad
ja
sahf
xlat
es
ja
pop
repnz
push
inc
sbb
inc
dec
jmp
bound
test
xchg
shr
stos
pusha
cs
rorl
imul
or
or
js
push
mov
sarb
cld
loopne
mov
pop
jne
and
pop
push
cmpsl
lret
jl
sbb
pop
and
sbb
in
push
jae
out
push
xchg
out
rcl
jge
sbb
mov
mov
mov
clc
dec
push
in
rcrl
das
adc
push
adc
test
cmp
and
stos
loopne
push
inc
in
hlt
cmp
rcll
std
mov
cmp
insl
and
addr16
dec
call
pop
in
cmc
es
mov
cld
loop
cwtl
sbb
outsb
xor
stos
inc
lds
pushf
jecxz
pop
ret
mov
loopne
jg
jnp
add
cmpsb
js
ljmp
pop
mov
lret
cld
lock
mov
mov
xchg
aas
xor
adc
lahf
add
cmp
add
xchg
dec
and
adcl
sbb
frstor
sbb
into
and
add
and
cwtl
cmc
outsb
sbb
sarl
cmp
adc
and
sub
xor
jge
sub
lret
stos
addb
and
sti
add
cmp
lret
inc
xchg
imul
push
inc
pushf
outsl
sbb
jb
fcomp
bswap
outsb
push
sub
mov
shr
stc
pop
mov
in
mull
out
ds
push
xchg
aad
notl
xchg
cmpb
fdivrp
add
pop
cld
shlb
mov
cmc
xchg
cli
ficomps
jb
in
jb
dec
xchg
jae
xor
std
pop
xor
outsb
xchg
scas
adcb
xchg
mov
and
addb
push
inc
cwtl
dec
in
mov
mov
inc
bound
pop
nop
insb
fsts
mov
sbb
dec
nop
shlb
loop
aam
or
cli
sub
rolb
cmc
xor
aam
ja
lahf
and
xor
jb
mov
lock
lods
xlat
in
mulb
in
mov
negb
rcl
out
push
pop
lcall
rorb
cmpsl
loopne
int3
dec
out
fsubl
iret
or
xchg
lret
scas
cmpsb
lods
pop
orl
repz
sub
and
add
push
loopne
push
mov
or
xor
or
push
xchg
jns
jne
pop
out
shll
push
sti
push
jne
mov
xchg
adc
mov
or
insl
sbb
mov
mov
push
xor
sti
jmp
popa
notb
sbb
in
mov
sbb
enter
out
xchg
test
pop
pop
in
jne
incl
mov
pushf
cld
in
fstl
mov
adcb
scas
mov
inc
add
push
jne
mov
and
pop
adc
jb
cltd
pushf
push
test
xor
les
sbb
mov
fistpl
ret
mov
cmp
xor
dec
iret
cmpb
inc
push
enter
arpl
je
pusha
xor
pop
mov
lret
popf
leave
out
dec
cmp
cwtl
mov
pop
insl
xchg
push
in
mov
mov
and
icebp
into
rcrl
jecxz
jle
lahf
push
ficomps
add
cli
inc
add
jl
push
push
mov
sub
jb
mov
mov
rorb
scas
fstl
aam
mov
dec
insb
push
repz
mov
cmp
and
rcrl
or
cmc
rcll
fstps
cmpb
jo
mov
mov
adc
pop
or
roll
movsb
cmpsl
in
call
jno
lret
or
loop
in
fisttps
mov
shll
nop
or
push
mov
loop
adc
mov
adc
and
adc
dec
xchg
xor
push
sbb
js
and
mov
push
jle
addr16
and
fisubrs
bound
fwait
mov
mov
stos
and
ret
sbb
mov
test
mov
sti
add
movsb
inc
lods
hlt
xor
cmp
cwtl
push
jmp
add
xchg
push
adc
adc
test
lret
clc
loop
and
add
mov
inc
mov
pop
pop
fisttps
pop
mov
pop
test
cmp
imul
xchg
out
fldlg2
cmpsb
cwtl
ljmp
dec
rcr
enter
jae
xor
mov
orb
in
stc
bound
inc
mov
cli
xor
inc
jle
push
jno
popf
jae
cmp
xchg
data16
fdivp
hlt
mov
add
lahf
mov
lods
andb
sbb
mov
leave
popf
xor
push
xchg
sub
cmp
jmp
notb
int3
mov
sub
sub
fwait
sysret
test
or
ret
inc
push
push
add
jp
xchg
xchg
sahf
mov
inc
sbb
mov
sbb
mov
mov
inc
sub
mov
mov
mov
sbb
bound
mov
sbb
push
dec
jo
jb
and
add
enter
aas
or
sbb
dec
mov
lea
outsb
push
outsb
jnp
xor
nop
clc
test
jo
mov
std
push
pop
test
lods
fsubr
test
mov
or
or
or
mov
pop
es
or
outsl
xor
lret
push
clc
das
sti
adc
sbb
lahf
ljmp
adc
add
test
xor
sub
movsb
fidivrl
into
popa
push
inc
sub
push
fdivrl
jo
scas
in
out
xchg
push
sub
jecxz
lcall
sbb
repnz
scas
adc
push
leave
dec
push
mov
es
and
fnstcw
mov
js
mov
mov
out
mov
add
cmp
loop
ljmp
adc
dec
subl
inc
divl
mov
scas
lea
dec
aad
lods
xchg
pop
clc
test
test
stos
incl
mov
test
mov
test
inc
aad
and
mov
rorb
xchg
adc
jl
mov
mov
xor
loope
xadd
cmp
sbb
lock
inc
push
lret
iret
in
pushf
push
sub
mov
sub
jl
fimull
hlt
and
jns
pop
fnsave
test
jl
xor
jb
and
aaa
pushf
xchg
cld
out
testb
aaa
sbb
or
stc
jno
adc
mov
adc
bound
push
idivl
js
incl
bound
leave
in
mov
mov
sbb
jne
lret
ja
mov
mov
jbe
imul
push
pop
push
test
sub
movsl
jmp
and
fnstenv
das
shrl
loop
sub
loopne
mov
sub
or
lock
lahf
sbb
xor
sbb
cmpl
mov
xor
sarb
xchg
adc
pop
popf
jp
cmpsb
insl
mov
adc
fistpll
mov
xlat
sub
dec
int
arpl
dec
out
addr16
mov
aaa
sarl
and
sbb
js
cmpsl
pop
loope
adc
inc
lock
sub
addr16
pop
jecxz
ljmp
rol
cs
push
inc
ss
mov
inc
sbb
and
or
jp
mov
in
stos
push
jecxz
dec
sbb
xor
into
cli
in
iret
jle
sbb
in
pop
int
and
xor
hlt
mov
gs
sbb
sub
mov
imul
rcll
xchg
dec
pop
push
test
enter
jp
stos
sub
jne
arpl
mov
sub
je
imul
leave
aam
arpl
push
test
mov
lods
mov
push
xor
sbb
data16
pusha
adc
fisttps
mov
div
in
in
or
mov
mov
add
xchg
or
pop
push
and
xlat
leave
fs
fldenv
insb
leave
jecxz
les
aas
fwait
int3
aam
pop
cmp
push
dec
mov
cltd
push
mov
pop
or
jo
roll
pusha
fidivl
mov
mov
and
mov
add
xlat
mov
cli
jmp
aas
lea
jne
mov
fidivrl
iret
jnp
iret
jo
mov
jae
adc
mov
outsl
in
jl
mov
push
or
out
xchg
mov
hlt
repz
push
imulb
mov
sub
mov
nop
add
add
add
push
xchg
adc
or
pop
imulb
ds
dec
int3
inc
cmp
jle
orb
push
vpsllq
test
adc
dec
negl
std
mov
imulb
inc
mov
or
cld
sbb
in
pop
je
out
sub
js
adc
aam
inc
movsb
adc
in
mov
enter
rcrb
cmp
mov
repz
inc
jae
out
loop
add
jle
ja
sub
out
jae
sub
dec
xrelease
push
mulb
movsb
ds
loop
xor
out
sahf
mov
and
sbb
out
fwait
pop
mov
imul
mov
mov
leave
aas
jmp
and
sbb
into
lret
push
push
movsb
xchg
xor
out
dec
push
dec
dec
jg
jmp
movsl
pop
movsb
push
push
gs
ss
adc
jge
lods
cltd
jnp,pn
pop
enter
arpl
ljmp
cmp
cli
push
lods
xchg
mov
push
outsb
lods
and
int3
scas
ljmp
mov
and
dec
sbb
notb
xchg
fsubs
add
arpl
and
nop
es
mov
jae
inc
push
push
sbb
jb
cwtl
in
icebp
hlt
xor
mov
xchg
je
cs
inc
cmovle
nop
out
sbb
mov
xor
lahf
rorl
insl
adc
jne
cmp
daa
stc
test
cmp
ljmp
push
jo
push
fdivrl
mov
sbb
addl
int
stc
add
jbe
outsl
xor
fdivp
mov
setge
lds
stos
add
jnp
mul
out
movsl
mov
or
push
jp
mov
insl
adc
out
in
xchg
jns
adc
push
in
or
xor
aaa
jmp
pushf
jnp
jae
aaa
xchg
fisubrs
daa
pushf
dec
loopne
icebp
roll
sbb
cmp
loop
cmpsl
jle
sbb
mov
jns
sub
or
push
into
stos
aad
stc
call
sbb
push
or
clc
adc
jmp
sub
fnstcw
xchg
pop
lret
scas
shlb
push
jo
or
test
in
pop
movsb
sbb
sub
mov
cmc
cld
cmp
jno
sbb
xor
push
enter
arpl
xchg
lret
adc
mov
mov
mov
sti
mov
lea
popf
mov
jmp
add
or
std
pop
out
lahf
loopne
and
jns
fistps
jo
imul
sti
adc
test
movsb
out
push
mov
mov
push
test
les
xchg
sub
repnz
sbb
scas
sub
add
subb
xlat
ret
jns
push
insl
inc
dec
test
int3
mov
dec
ficomps
mov
movsb
push
lcall
xchg
xchg
pop
int
dec
cmp
push
repz
frstor
pop
dec
sub
inc
nop
jg
xor
lcall
cld
imull
pop
sbb
xchg
loopne
mov
shr
stos
roll
xor
aad
repnz
popf
and
out
int
jle
in
test
xchg
push
inc
jp
or
hlt
test
iret
lret
and
jp
sbbl
mov
jecxz
cmp
insl
push
int3
jmp
sbbb
pop
lods
jge
dec
data16
or
addr16
insl
fwait
mov
inc
rol
inc
mov
push
sahf
cmc
push
jmp
jp
inc
jge
ds
fcomps
icebp
rclb
jle
jo
xchg
icebp
ds
push
int
orl
call
les
adc
push
mov
push
sbb
out
pop
or
inc
xor
lods
push
cs
add
sahf
into
cltd
shll
dec
dec
lds
add
daa
dec
xchg
and
jmp
dec
jns
inc
pusha
out
cli
dec
rcrb
jge
test
or
das
add
rclb
repnz
jo
enter
push
mov
pop
decl
jb
imul
mov
adc
mov
lret
xchg
enter
fs
or
lret
clc
pop
std
inc
fisubrs
sahf
cwtl
inc
dec
and
xor
shrb
lods
hlt
bnd
pop
add
push
and
ja
xor
dec
pop
mov
mov
dec
mov
movsl
shr
adc
shll
outsl
mov
shl
sbb
mov
jg
push
or
xorl
shrb
mov
xchg
outsl
movsl
cli
leave
leave
inc
jge
sub
pushf
push
push
sub
xchg
push
andb
das
negb
xchg
pop
sbb
jnp
mov
daa
cmc
shlb
lock
jbe
add
mov
aad
push
mov
cmp
out
mov
icebp
test
sbb
push
add
in
ds
pop
insb
daa
and
dec
in
mov
xchg
inc
jp
sub
lods
push
jge
mov
sub
jle
shll
je
ljmp
subl
jge
inc
test
inc
mov
xor
rclb
fprem1
mov
mov
lock
cmpsb
das
inc
mov
xlat
cmc
xchg
ret
mov
or
inc
iret
and
inc
in
push
push
aas
pop
mov
inc
repz
scas
push
add
arpl
stos
rcl
jae
jle
lea
adc
jne
adc
inc
ljmp
cmc
xchg
push
adc
ficoml
repnz
pop
inc
or
push
add
stos
inc
jnp
fstp
repz
sysexit
stc
add
popf
out
or
mov
mov
push
mov
inc
xchg
jge
and
dec
testl
lcall
mov
out
xchg
inc
xor
xor
cmpsl
pop
loopne
sub
mov
gs
fisubrl
mov
pop
div
aam
pop
fdivs
add
jae
inc
add
outsl
inc
or
or
fadds
lcall
sahf
mov
mov
add
in
mov
loop
out
arpl
test
ret
push
fstpl
into
ror
testb
imul
call
fldl2t
and
shll
pop
inc
test
mov
lahf
push
leave
cs
cmp
clc
sarb
loope
lds
fsubrs
aas
or
repnz
add
imul
ljmp
add
ret
pause
sbb
cs
les
call
bound
loopne
in
shr
dec
push
aas
cmp
sub
sub
fscale
lcall
stos
scas
cmp
aas
stos
scas
pusha
out
out
mov
ss
xchg
into
scas
pop
mov
pop
outsb
cli
inc
daa
fldt
out
inc
in
lcall
lahf
out
js
mov
stc
sub
les
jne
add
or
aam
and
mov
xor
inc
and
cmp
lea
lret
lea
jmp
adc
mov
ljmp
movsl
jg
xchg
inc
fwait
iret
repz
roll
mov
dec
mov
out
push
mov
and
imul
or
mov
ljmp
cmp
or
in
lds
jmp
mov
sbb
sbb
jg
cmpxchg
push
scas
mov
jae
mov
imul
cmp
add
mov
mov
mov
ds
mov
shr
or
jno
js
cmp
std
cmp
or
incl
dec
sbb
jg
lret
push
mov
push
dec
mov
stos
cmpsl
mov
mov
jecxz
cmp
into
aas
adc
pop
mov
fisubrs
nop
scas
movsb
lock
andl
lock
pop
out
imul
cmp
sbb
pop
jno
jmp
int3
gs
or
mov
and
testb
jmp
inc
fucom
mov
xor
invd
cmp
xor
adc
mov
xor
fimull
cltd
lret
inc
lods
in
adc
mov
add
dec
xor
shl
hlt
mov
pop
jl
repz
pushf
fdivrs
sti
mov
lret
pop
dec
ret
and
xor
pop
insl
mov
mov
and
push
mov
loopne
test
dec
mulb
lcall
adc
mov
lods
js
in
out
mov
xor
les
insb
lock
or
jne
loope
sub
aaa
mov
les
pop
adc
adc
jl
flds
fsubr
xchg
sub
inc
sbb
jmp
inc
cmp
les
addb
stos
pop
adc
outsl
push
or
cmpsb
jg
fwait
xchg
fisttpll
dec
jno
icebp
inc
movsl
in
inc
cmp
adc
cmp
xorb
sbb
rorb
imul
lock
mov
sbb
xchg
push
lea
mov
mov
inc
lret
ret
fmuls
sbb
aaa
js
push
cltd
sub
movsl
icebp
sub
dec
adc
jmp
pop
inc
cmp
push
shlb
mov
lods
in
cmp
fistps
mov
in
xchg
mov
notb
shl
js
sub
cmc
stos
add
fdivrl
jnp
jns
sbb
push
push
inc
adc
clc
aad
xor
stos
cmp
cmpsl
orl
mov
pop
out
xor
arpl
mov
stos
xor
outsl
or
sti
mov
dec
in
pop
jl
add
jge
scas
pop
mov
push
inc
or
rolb
push
push
dec
adcl
push
xchg
sbb
pop
push
fs
inc
jbe
adc
add
pusha
loopne
adc
fidivs
neg
repnz
push
add
data16
in
loop
xchg
cmp
in
mov
in
ja
loop
fmul
lods
lret
loop
frstor
push
loope
mov
xor
mov
add
shlb
xchg
repz
pop
mov
inc
test
std
stos
sbb
test
dec
jo
xlat
lock
ja
adc
mov
cld
nop
ret
test
mov
adc
pop
shll
lds
xchg
aad
mov
test
or
nop
push
pop
insl
jb
sub
mov
cld
pop
pusha
and
adc
cmp
sbb
dec
into
icebp
sub
or
pop
imul
js
leave
mov
mov
pushl
xor
mov
fldenv
flds
jbe
xchg
aad
adc
xchg
in
push
mov
or
sbb
insb
or
clc
lea
xorl
push
aaa
jns
lcall
out
sbbb
hlt
js
mov
adc
mov
mov
lea
mov
jmp
mov
cmpsl
insb
dec
test
inc
sub
movsl
shlb
jo
insb
mov
scas
cmp
inc
add
push
lahf
mov
jno
xor
pop
dec
aas
lea
cli
sbb
inc
add
jne
shlb
in
sbb
add
add
pop
call
test
sub
ljmp
pop
inc
cli
push
hlt
xchg
adc
inc
insl
adc
mov
divl
mov
int
inc
or
mov
and
sub
es
cwtl
mov
add
jecxz
test
mov
xchg
adc
xor
inc
push
jl
jne
push
jmp
sbb
jo
adc
adc
add
mov
in
test
jb
push
lods
fwait
push
sbb
xor
sbb
jl
adc
xchg
shl
je
pop
hlt
xchg
pop
cmp
stos
lret
add
lods
fcompl
xchg
or
lds
cmpsl
movsl
sub
xchg
push
and
add
adc
mov
out
mov
push
mov
inc
dec
addr16
out
or
in
dec
mov
addr16
sbb
push
loopne
inc
sub
lahf
nop
leave
pop
adc
dec
xchg
out
lahf
packssdw
insb
iret
inc
and
call
pop
or
ljmp
fcomps
loope
dec
pop
lret
lea
cli
das
shrl
fisttpl
push
mov
sbbl
or
jnp
ja
and
mov
add
mov
insl
mov
and
mov
xor
jno
sbb
lcall
xchg
cmp
xchg
mov
push
out
into
inc
add
pushf
cmp
pop
arpl
int3
ljmp
ss
xchg
inc
add
fsubl
inc
sub
cmpsl
mov
push
mov
leave
icebp
cmc
mov
sub
cwtl
lahf
call
stc
sbb
or
xchg
cmp
outsb
cmp
pop
pop
xor
insb
ja
mov
sahf
sub
push
scas
pop
adc
in
inc
repz
pop
sbb
mov
inc
inc
pop
fxch
mov
shrb
push
jae
sti
je
mov
mov
ret
or
jle
das
cmpsl
out
ret
js
adc
ljmp
pop
add
scas
ss
adcl
adc
jbe
dec
shlb
push
ret
sbb
jl
pop
mov
sarb
sbb
es
sbb
aas
adc
xor
push
xchg
lret
or
sub
loope
pusha
add
movsl
fsts
popf
gs
add
add
add
sti
jo
xchg
or
dec
cmp
cld
cli
sti
push
sahf
bound
or
ljmp
cld
push
push
inc
test
jg
repnz
adc
sahf
iret
push
movb
flds
sub
ret
adc
stos
mov
mov
addl
repnz
lock
cmp
adc
lret
xchg
adcl
xor
test
lret
fwait
cmp
cmpsb
lods
pop
dec
mov
xlat
mull
repz
pusha
adc
pop
sahf
sbb
into
stos
xchg
icebp
scas
cmp
xchg
ljmp
push
stos
sti
or
or
out
mov
fdiv
mov
ja
into
pop
xchg
nop
push
out
jg
popa
mov
adc
cmp
mov
xchg
mov
cmp
test
and
mov
shll
push
mov
test
xor
test
jmp
cmpsl
nop
sub
loop
sub
add
imul
into
inc
adc
dec
push
addr16
xchg
inc
repnz
addr16
cmp
popf
sahf
mov
sub
jb
mov
lods
and
into
addr16
or
lret
imul
mov
jecxz
xor
jle
sbb
mov
cmp
dec
pop
jbe
xchg
pop
inc
cmp
jns
cld
sub
mov
inc
push
div
repz
fistps
gs
loopne
xor
sbb
leave
push
xor
cmp
fs
inc
jl
push
inc
ret
ss
call
test
jp
cmp
daa
lock
cmc
aad
xor
leave
pop
add
mov
xchg
pop
adc
mov
or
lcall
sbbb
cmp
jne
cmp
dec
sub
push
popa
pushl
cmp
imul
popf
add
fcoml
push
xorb
lock
scas
push
xchg
sbb
dec
popw
or
lock
das
sahf
or
mov
out
test
fs
sub
jae
or
push
mov
mov
and
adc
pop
mov
mov
dec
aad
pop
push
fcmovnb
lock
push
insb
loopne
into
mov
out
inc
daa
repnz
fistl
cmc
xlat
mov
loope
subl
xor
adc
rcrb
mov
in
mov
push
popa
and
or
jbe
jns
insl
in
xchg
and
dec
lds
cmp
shlb
gs
lock
in
jns
pop
sahf
jmp
test
fmul
into
test
jns
repz
jns
jl
mov
push
mov
xchg
dec
jnp
and
loop
and
lea
loop
lock
cmp
loopne
mov
icebp
out
insb
hlt
out
inc
cmp
xchg
dec
sub
jmp
or
adc
mov
and
pop
jecxz
stos
dec
add
adc
xlat
out
aaa
lret
flds
jle
cmpsl
and
lods
test
lods
shlb
or
jns
cli
gs
pop
fs
sti
lar
insb
pop
filds
orl
push
add
inc
mov
out
push
mov
mov
mov
popa
mov
mov
insl
mov
cs
xchg
out
data16
addr16
scas
call
sarl
mov
cmp
and
lods
mov
xor
roll
aad
sub
push
movsb
mov
mov
sti
cmp
movsl
push
ret
xchg
jbe
push
adc
push
mov
arpl
ret
orb
mov
sbb
rcrl
cmpsb
je
out
loop
movsb
test
daa
repz
mov
dec
mov
cwtl
scas
inc
sahf
iret
stos
scas
cmp
cs
or
jecxz
jmp
aas
idiv
sbb
pop
sub
ret
or
rolb
sub
mov
cli
push
sub
lds
inc
outsb
xor
in
shll
jl
inc
xor
ds
test
loopne
push
aam
jle
lds
out
in
inc
leave
mov
push
cmpl
popa
test
cmpb
mov
push
testb
sbb
add
jmp
xchg
xchg
arpl
imul
cmpsl
xor
in
jp
xchg
sar
out
imul
jo
ret
mov
repz
xor
jge
ss
popa
fwait
pop
popf
or
add
adcb
cltd
ret
out
push
xchg
outsl
adc
or
test
sbb
dec
out
xchg
cltd
sbb
inc
xchg
lea
pop
or
movsb
dec
outsb
and
adc
xor
shlb
shrl
mov
pusha
pop
xorl
push
sbb
push
mov
imul
mov
jns
shlb
not
sar
dec
xchg
mov
xor
or
cmp
jns
pop
pop
sbb
jmp
ret
push
scas
mov
mov
jp
cmpsl
gs
xchg
icebp
cmpsb
in
inc
lea
int3
out
or
fwait
jg
jg
cmp
sbb
push
cmp
imull
movsl
pusha
aas
fsubrp
mov
int3
cwtl
mov
or
add
aad
lcall
push
cmp
push
and
mov
jo
pushf
flds
cmp
outsb
cmp
insl
xlat
cmpsb
sub
idivl
mov
lock
aaa
out
mov
and
stos
outsl
add
repz
int
push
mov
jecxz
inc
gs
lods
inc
inc
push
scas
jmp
mull
or
rol
cmp
xlat
loopne
ljmp
data16
mov
mov
and
mov
cmp
xor
inc
xchg
movsl
loop
cmpsl
je
inc
popf
push
shll
pop
xchg
nop
sbb
jns
loope
push
xchg
jae
mov
lret
clc
inc
into
hlt
push
push
jp
add
scas
in
mulb
adc
int
mov
das
data16
fstl
add
push
cmp
int
pusha
mov
movsb
mov
fdivrp
or
inc
das
scas
int
insb
and
inc
dec
push
push
jae
gs
sbb
rcll
cs
aas
sbb
mov
insb
adc
jp
pop
popa
arpl
xor
sti
mov
push
or
cmp
mov
cmpl
jno
movsl
fstps
xchg
inc
mov
ret
xor
mov
mov
mov
mov
push
cs
jnp
push
mov
loope
cmpsb
pop
xchg
subl
insl
repnz
js
nop
loope
fcoms
pop
mov
jle
adc
sub
xchg
loopne
pop
cmpsb
mov
jle
xchg
stc
jae
mov
test
sbb
xchg
or
cmc
jecxz
in
and
sbb
daa
ret
mov
mov
push
orb
outsb
dec
lret
pop
mov
repnz
mov
nop
cmp
cmp
scas
push
movsl
sbb
out
sar
in
xor
inc
stc
mov
mov
fdiv
sbb
pop
ja
fdivs
mov
fistl
xchg
imul
subl
or
bound
xor
lret
scas
cmpsb
cmp
fistps
mov
nop
outsl
js
int
aad
mov
js
aaa
aas
sarb
in
stos
or
outsb
mov
cmp
xchg
loop
pop
pop
mov
shl
das
lods
sbb
iret
cwtl
adc
jl
mov
or
dec
pusha
aam
rcr
pop
xor
pop
or
cwtl
dec
jp
sarl
xor
push
push
dec
mov
push
stos
mov
sbb
fsubrs
mov
addl
jae
xchg
mov
push
scas
dec
and
popf
sarb
imull
jg
jno
push
cmp
inc
in
jo
add
testb
sbb
jp
add
imul
rclb
fs
lea
mov
mov
xor
fisubrl
dec
xchg
xchg
push
mov
sbb
adc
outsb
repz
jle
push
cld
fstpl
repnz
push
outsb
jae
mov
test
dec
mov
push
and
shlb
hlt
ljmp
xor
lock
jecxz
push
dec
leave
into
sub
adc
mov
pushf
mov
shl
mov
push
add
mov
rorb
out
mov
jle
scas
adcl
xchg
ficoml
xchg
jae
cmc
rolb
jmp
cld
cmp
pop
fldenv
and
pop
subl
xchg
data16
sbb
or
add
das
or
pop
push
pop
les
cld
mov
pop
xchg
mov
out
sbb
adc
xchg
cwtl
or
jnp,pn
and
dec
sbb
push
and
cmp
inc
out
adc
xchg
add
popf
lods
lods
cmp
push
cmpsb
adc
pop
test
and
adc
pop
aaa
push
sbb
sub
fxam
pop
inc
leave
mov
fwait
or
divl
pop
mov
popf
ds
rclb
andl
mov
fs
xor
stos
aaa
or
inc
repz
jbe
mov
xchg
cmp
vunpckhpd
jmp
jo
cmp
add
push
sti
iret
mov
loop
jle
adc
dec
adc
pop
mov
dec
pop
or
or
pop
push
mov
adc
cwtl
jg
jbe
jmp
xor
mulb
xor
push
test
daa
popf
push
nop
int
adc
cmp
stos
ret
adc
out
xchg
pop
adc
idivb
jecxz
push
sbb
xlat
mov
scas
jp
lcall
sbb
iret
jb
mov
xor
imul
inc
mov
sbb
das
arpl
xchg
mov
fiadds
in
mov
ljmp
aaa
xor
jl
mov
ja
inc
jo
cmc
cmp
push
or
andl
pop
xor
mov
pop
cwtl
add
and
leave
imul
mov
jae
test
test
jb
jne
ja
add
sahf
cli
rcrb
mov
lret
and
ljmp
adc
stos
adc
ds
push
dec
xchg
mov
adc
sub
rcl
push
int3
pop
hlt
mov
bound
xor
mov
or
and
mov
jbe
lret
cmp
sbb
xchg
in
ret
icebp
leave
mov
push
xchg
jecxz
mov
ss
push
andl
mov
lea
push
adc
shlb
or
inc
sarl
daa
lcall
movsb
test
fdivrs
jl
sbb
and
outsl
inc
jge
lock
mov
fidivrs
and
rorl
pop
cmp
xchg
aad
cmp
test
jle
ret
mov
dec
into
xchg
mov
cmp
or
push
sti
mov
in
sub
push
out
call
gs
shll
or
das
cs
mov
lods
push
jg
into
sarb
call
fs
les
sarb
push
scas
cwtl
test
cmp
jae
dec
inc
inc
jecxz
pop
rcrb
push
or
push
push
push
jle
xchg
sbb
out
jb
inc
or
mov
hlt
popf
std
jns
lods
mov
fldl
jg
int
or
push
lcall
push
xor
push
mov
stc
pop
cmp
int3
repz
ljmp
cltd
mov
inc
outsl
call
fcmovnu
push
aad
repnz
leave
push
or
pop
sbbl
imul
pop
rolb
jl
arpl
ret
hlt
mov
addr16
test
pop
sarb
or
sub
lock
popa
lods
mov
in
shll
aad
daa
mov
cmp
add
test
aaa
es
aaa
inc
dec
je
es
out
daa
shll
xchg
aaa
sahf
out
jo
jecxz
mov
inc
arpl
add
bnd
mov
mov
mov
orb
scas
jne
jp
test
mov
out
daa
into
or
rolb
or
mov
das
mov
mov
mov
cmpsb
pop
or
shll
jbe
jle
xchg
fcompl
ret
ljmp
mov
insb
mov
and
fdiv
inc
mov
test
adc
icebp
lds
fwait
mov
jl
jbe
mov
cmpl
xor
cmp
xor
push
fistl
daa
push
shll
push
test
fsts
scas
popa
loopne
int
sbb
rorl
push
adc
rcl
mov
adc
and
gs
lea
inc
jle
push
mov
mov
pop
push
lods
jl
lahf
aaa
enter
sbb
call
add
inc
cwtl
mov
aam
lods
mov
cltd
cmp
bound
outsb
xchg
cli
pushl
jle
aad
cmp
vandpd
cmp
push
xchg
or
popf
xor
in
pop
xor
test
push
jmp
or
outsl
in
shrb
add
mov
add
call
xchg
or
int
shlb
mov
inc
imull
sub
ret
or
push
xchg
dec
cmovp
call
pop
jo
mov
mov
mov
and
lret
jge
jmp
pop
cmp
fistps
mov
mov
push
sti
cmp
addr16
dec
out
adc
inc
xchg
dec
sbb
adcb
mov
jnp
addr16
imul
jno
ficompl
mov
push
jne
ret
fidivl
and
sti
repnz
inc
in
shl
inc
fwait
iret
sbb
sub
jle
cmc
ret
fistpll
pop
xchg
mov
aad
or
clc
ds
sub
mov
jl
cld
mov
mov
dec
rol
call
fs
fs
ret
es
cwtl
lods
ljmp
adc
out
jp
test
cld
cmc
inc
cmpl
loope
in
data16
cld
cmp
mov
outsb
adc
dec
push
add
jecxz
les
ljmp
into
and
aam
dec
adc
cmpsl
adc
ss
cmp
xlat
pop
cmpsb
sbb
popl
push
xor
mov
popa
cltd
fld
pusha
mov
stos
repz
enter
push
or
inc
jns
add
and
les
add
mov
cmp
lcall
adc
lret
outsl
sbb
jmp
mov
pop
subb
imul
les
jp
das
sbb
cmp
lcall
inc
inc
push
and
jge
shl
dec
clc
cs
js
aad
mov
popa
jp
or
xchg
add
xchg
mov
fs
mov
xor
mov
in
jmp
add
shl
xor
push
fstpl
pandn
cmpsb
jecxz
loope
dec
in
sbb
loope
jecxz
jno
flds
lock
lret
js
fisttpl
xchg
js
add
aaa
clc
fbstp
cmpsl
mov
test
xchg
ja
jg
gs
fildll
inc
mov
xchg
shlb
daa
ljmp
sbb
inc
adc
out
bound
stos
mov
mov
sub
pop
add
sbb
mul
push
xor
sub
shlb
aaa
cwtl
lret
and
or
fsubrs
pushf
loopne
dec
pop
lods
push
icebp
mov
jbe
gs
enter
std
adc
jg
dec
int3
jge
aad
or
je
pandn
dec
sahf
mov
outsb
iret
mov
sti
dec
mov
jmp
rcr
cmp
sar
je
pop
cmpsb
mov
cmpsb
xchg
enter
xor
std
cmpsl
ds
mov
sbb
ss
mov
add
scas
sub
int3
movsb
pusha
adc
aas
pop
mov
or
pop
aaa
cmc
popf
push
sub
fmuls
test
mov
popf
test
iret
in
scas
jp
in
dec
add
sbb
insl
push
mov
add
mov
insl
add
out
xchg
pop
test
es
cmp
and
gs
dec
and
call
jecxz
or
andl
add
sub
xor
dec
stc
rcll
fsubs
sbbb
inc
xor
dec
cltd
add
ja
inc
shr
add
mov
push
mov
xchg
xlat
test
add
sbb
and
shrl
pop
add
xor
sarl
pop
ror
jo
ret
dec
cmp
sti
push
sahf
inc
and
xor
inc
pop
mov
imulb
movsl
inc
inc
adc
scas
movsl
mov
out
or
mov
cs
pusha
outsb
insb
dec
les
fsubs
fcmovnu
fldl
fsubrl
dec
jo
mov
push
fimuls
js
sbb
jne
jb
mov
mov
iret
adc
test
pop
mov
push
dec
std
call
jle
pop
sbb
fcmovb
sub
enter
push
jns
dec
std
stos
dec
xchg
xchg
mov
mov
enter
adc
sqrtps
fistl
into
aas
jo
xor
jmp
popa
dec
sahf
mov
and
xchg
jnp
and
fsub
jnp
movsb
dec
adc
or
test
imul
dec
and
in
fnstsw
cs
cmp
pop
cmp
loope
fistl
sbb
mov
jb
xor
inc
fs
sbb
xlat
enter
jl
ja
push
int
imul
fstenv
mov
inc
movl
orl
repz
ss
jnp
rdtsc
pop
in
mov
inc
and
hlt
ds
sub
sub
xchg
ss
sub
push
or
cmc
cmp
daa
inc
add
scas
inc
inc
das
repz
xchg
or
adc
push
cld
cmp
into
mov
mov
jl
pop
imul
adc
fs
roll
xchg
push
mov
test
xor
xchg
fidivs
mov
jno
orl
xchg
repz
or
and
adc
sbb
ja
add
cmp
pop
pushf
addl
adcb
mov
inc
mov
pop
cli
test
mov
fidivrl
outsl
mov
jge
loopne
std
bswap
hlt
xor
int
and
sbb
mov
jp
repz
sbb
shll
pop
xchg
xor
lret
fistps
sub
adc
cltd
push
and
imulb
fiaddl
das
lds
xor
mov
cs
and
out
sbb
jns
pop
push
dec
xchg
mov
pop
loopne
movsb
pop
sub
add
aas
lock
mov
out
lock
iret
cmpl
aam
sub
iret
test
push
adc
cltd
push
push
mov
test
in
jge
mov
xchg
je
cli
mov
ret
xchg
lcall
pop
sti
sti
fwait
mov
rcrb
cmp
clc
test
adc
inc
adc
xchg
jp
neg
scas
imulb
xchg
imul
fs
dec
xchg
push
aad
xchg
pushf
xor
jo
jb
xchg
and
or
out
rcl
je
aad
adc
testb
pushf
loope
xchg
fdivl
cwtl
lret
in
scas
inc
mov
int3
xor
jecxz
or
push
ror
lcall
data16
sub
xchg
arpl
pop
adc
cmpsb
add
inc
negb
and
sub
push
repz
imul
pushf
test
jmp
pop
das
dec
cmp
loop
add
loop
add
or
dec
sarb
adc
push
rcr
loopne,pn
jge
stos
cld
jbe
and
roll
rclb
mov
cmp
dec
push
xchg
add
sub
pushfw
sbb
repnz
and
shlb
outsb
mov
sahf
or
push
cmpb
sbb
adc
mov
mov
push
rolb
and
fcompl
jmp
jmp
mov
xor
xchg
decl
mov
rcr
cwtl
arpl
mov
adc
or
daa
mov
jno
aad
sub
cmp
or
filds
add
add
and
xchg
negl
mov
mov
xchg
adc
xchg
int3
sub
aaa
push
cltd
aaa
and
cmp
lock
lods
dec
dec
jg
mov
xchg
pop
cld
or
cli
aad
dec
and
pushf
mov
stos
mov
outsl
add
jno
mov
js
cmp
push
inc
dec
movsl
pop
dec
lock
pop
push
jmp
dec
sar
call
xor
push
lea
dec
push
mull
mov
in
inc
ds
lods
out
lret
mov
adc
cltd
addr16
pop
or
inc
push
adc
cmp
aas
mov
notl
sbb
xchg
mov
enter
popf
adc
adc
jecxz
test
out
mov
add
mov
mov
pop
jae
shll
daa
mov
or
out
hlt
fwait
jb
inc
cmovb
pop
mov
in
jnp
jne
loop
push
and
mov
xchg
inc
jle
mov
push
mov
pop
ss
push
loop
dec
sbb
addl
lret
cld
sti
outsl
out
test
push
pop
adc
mov
push
push
add
xor
mov
daa
mov
add
mov
dec
mov
sarl
dec
ffreep
mov
jp
pop
pop
and
pop
and
pop
outsb
jmp
sub
add
pusha
cmp
push
fwait
lret
mov
cltd
pop
cld
xchg
jecxz
push
pop
mov
adc
call
int3
insl
cwtl
ss
push
ljmp
cmc
out
stos
sbb
jmp
and
push
push
pop
cmpsb
ret
int
dec
inc
cmp
mov
insb
push
out
cmpsb
lret
jns
xor
mov
dec
test
mov
fadds
daa
sbb
inc
cwtl
pop
cmp
loopne
clc
lods
loopne
cmp
cmp
jne
push
cltd
int
mov
push
iret
and
stos
xor
xor
arpl
outsb
pushf
sbb
rcrb
incb
mov
imul
add
inc
adc
movsl
inc
mov
pop
xor
and
fdiv
push
imul
jmp
mov
add
shrb
test
xor
outsl
dec
jp,pt
imul
xchg
dec
mov
mov
mov
mov
add
lret
fcomps
cs
dec
out
aad
lods
add
mov
mov
out
les
inc
aaa
xchg
imul
mov
imul
push
out
call
inc
hlt
fists
fwait
and
pop
pop
sub
push
repnz
jmp
lret
in
add
mov
xchg
mov
add
add
imul
cwtl
push
into
lods
aaa
test
cs
test
rol
xchg
cltd
push
and
jl
cmpsl
xor
imul
jle
jmp
cmp
cmp
xor
sub
inc
dec
jb
loop
loopne
orl
push
mov
loopne
fildl
lods
add
in
pop
outsl
ficoms
dec
cmp
mov
sub
cmp
inc
add
xor
xor
jne
pop
push
and
jns
subl
push
or
add
lcall
sbb
testl
mov
jb
push
push
push
je
cltd
fmull
lcall
sbb
lea
push
shlb
scas
mov
jbe
call
and
lahf
jns
in
je
movsl
inc
jl
mov
xchg
jle
or
push
or
or
add
mov
inc
inc
ret
mov
icebp
xchg
imul
outsl
add
mov
std
inc
or
and
nop
mov
aam
cmpl
stos
xor
addr16
push
cli
add
pop
pop
andl
adc
sbb
jl
push
jl
mov
and
sbb
mov
push
pop
push
mov
mov
subl
in
mov
stos
push
sar
push
in
sub
outsl
ja
rolb
push
outsl
and
mov
cli
arpl
ret
sbbl
out
adc
sti
inc
lea
test
bound
dec
sbb
sbb
lret
out
clc
push
xchg
push
lret
mov
ljmp
jge
jne
loope
jnp
cmp
insl
dec
pop
negl
add
js
sbb
xor
xor
sub
xchg
mov
xor
loope
and
adc
push
xor
jae
or
push
sub
test
call
push
xchg
sbb
jns
or
imul
cmp
mov
rclb
das
pop
inc
cmp
fs
loopne
dec
lods
adc
je
jne
or
pushf
pop
pop
mov
add
push
xchg
xchg
jnp
jnp
sahf
push
push
cmp
pop
mov
fstpt
xchg
xor
lock
stc
inc
push
mov
lock
mov
insl
adc
sbb
or
test
jnp
fwait
or
rcll
test
and
lret
sbb
loope
pop
xchg
add
push
bswap
mov
xchg
push
sub
ret
mov
into
mov
mov
jge
mov
fnstsw
adc
fcoms
mov
dec
fdivrp
gs
fstl
scas
sub
dec
sbb
insb
sbb
insb
sahf
pop
jp
mov
xchg
jge
push
bound
adc
stos
lock
inc
add
out
inc
cmp
and
fnstcw
xor
stc
fldenv
lock
movsl
stos
mov
int3
arpl
pop
mov
pop
mov
cmp
fnstsw
xorb
frstor
xchg
repz
out
xchg
xor
ficoms
subb
dec
rcl
and
and
xorl
stos
mov
xchg
enter
outsb
mov
ret
sbb
jle
out
out
int3
lret
es
dec
cmpb
std
sbb
shlb
mov
push
fidivl
pop
inc
fcomps
out
add
pop
xor
lods
mov
dec
in
jmp
xchg
stc
testl
test
adc
popf
test
out
mov
cmp
addr16
outsb
xchg
pop
out
aam
or
inc
mov
movsb
insl
adc
push
mov
adcl
dec
fwait
jle
rol
mov
inc
loopne
jno
negl
jmp
xor
setne
out
xorb
inc
std
xor
and
jg
mov
sbb
add
test
sub
icebp
xor
ss
sbb
sub
pop
and
push
loopne
ficoms
mov
xorb
adc
mov
mov
test
daa
arpl
out
mov
sahf
and
push
mov
loope
test
into
aas
pop
idiv
dec
pop
out
popf
cli
push
or
xchg
and
xchg
jecxz
mov
shrb
mov
push
loop
mov
repnz
das
xchg
cmp
and
jp
jb
push
jmp
xor
xchg
xor
or
adc
inc
jmp
imul
jl
ret
in
mov
or
jl
jb
jecxz
and
adcl
pop
or
lods
lret
sub
cmpsl
cli
lret
imul
lea
fildll
mov
inc
mov
fs
xor
inc
test
je
dec
and
clc
cmpsl
cmp
pop
pop
bound
lds
xchg
and
adc
mov
or
jmp
pop
std
cmp
push
imul
nopl
ja
push
shl
sahf
loopne
cmpl
push
loop
inc
add
lods
or
movsb
out
mov
cmc
add
sahf
test
ret
jle
jle
mov
mov
mov
and
pop
xor
aam
roll
mov
call
sub
sbb
int3
ds
sbb
pusha
out
cmp
fwait
jne
sub
call
push
ljmp
and
cwtl
xchg
xchg
or
and
insl
or
dec
repnz
aam
sub
arpl
ljmp
scas
imul
or
mov
in
jo
xchg
sub
xchg
sub
ds
or
xor
daa
int3
dec
je
stos
mov
mov
popf
fcmovnu
pop
mov
jle
aad
cmp
push
int
aas
mov
mov
in
sbb
jmp
lcall
test
mov
imul
gs
mov
or
mov
lods
jmp
jmp
push
jb
dec
xchg
inc
les
adc
roll
imul
pusha
mov
cs
xchg
mov
xor
in
add
xchg
dec
pusha
fisubl
test
inc
push
dec
sbb
mov
addb
jno
pop
pop
pop
jns
repnz
std
mov
dec
adc
dec
adcb
out
mov
mov
aam
adc
fucomp
orb
out
cmp
xchg
push
sbb
es
jecxz
mov
inc
mov
and
pop
pop
sub
fcoml
inc
or
lods
leave
pop
jno
cltd
adc
pop
jns
pop
add
push
test
adc
mov
sub
push
jmp
and
ret
icebp
cs
xchg
mov
or
or
pop
jne
lret
sbb
fwait
scas
jne
cltd
add
xor
sbb
repnz
dec
into
imul
mov
leave
out
push
std
xchg
pop
sahf
jne
stos
bound
xchg
xor
imul
xor
popf
leave
loopne
push
lret
lret
sbb
xor
and
daa
dec
pop
pop
mov
fnstsw
jbe
lods
and
or
jnp
jmp
arpl
lock
dec
adc
sbb
pop
and
mov
xchg
mov
cmp
je
jne
mov
push
xchg
cmpsl
mov
push
sbb
pop
dec
daa
out
jo
pop
stc
out
push
addr16
cli
iret
push
xchg
sub
out
sarl
shll
jno
out
xor
dec
mov
push
neg
js
xchg
jbe
xor
lahf
xor
dec
int
pop
sub
push
sbb
and
jge
fiaddl
ljmp
nop
mov
jp
test
ss
xor
icebp
ljmp
sub
add
fisubs
idivb
push
lret
add
push
adc
out
mov
stos
jb
cmc
sub
and
ja
mov
pushf
mov
and
mov
test
push
add
dec
jo
xor
in
xchg
push
mov
jne
mov
out
mov
bound
loope
imul
mov
data16
cwtl
xchg
xchg
pop
sub
insb
sbb
inc
xchg
push
push
mov
add
out
or
cmp
cmc
and
pusha
add
int
push
daa
or
cmp
pop
bound
and
lahf
sbb
dec
sbb
cmc
mov
mov
ret
arpl
cmp
loopne
xor
cs
jge
lods
mov
or
out
ljmp
ja
jae
stos
adc
hlt
pusha
or
add
add
fldt
jnp
pop
outsb
loop
xor
fdiv
mov
lcall
push
xchg
test
fldl
and
js
cmp
cmc
rcr
cmpsl
hlt
xor
jmp
xor
dec
sbb
stos
dec
mov
and
nop
mov
lock
out
push
pop
cmpsb
pop
inc
mulb
sti
cmp
push
cmpsl
nop
mov
lods
xlat
sub
gs
int
mov
sub
dec
mov
sub
xchg
pushf
or
sub
jecxz
pop
xchg
iret
xlat
mulb
pop
sti
out
into
xchg
sbb
mov
jle
ja
add
movsb
or
out
pop
pop
mov
lods
mov
jae
es
cmp
xor
xchg
inc
mov
and
fwait
xor
ds
pop
sub
lahf
mov
and
fimuls
fisubs
std
popa
movsb
cmc
and
or
ret
cmp
and
jl
out
outsl
mov
push
icebp
push
push
pop
bnd
dec
mov
dec
inc
mov
fs
sar
dec
call
call
nop
in
mov
jge
movsl
in
jo
mov
cmp
lret
aad
jo
imul
or
sub
scas
mov
fimuls
dec
cltd
jl
push
push
lods
or
cmpsl
sub
mov
jp
cmp
int
jecxz
and
rorb
test
jnp
and
sbb
pop
xor
addr16
ret
pop
stos
jmp
sub
cltd
pop
imul
popa
ret
leave
mov
rol
jp
xor
push
notb
mov
sbb
push
pop
adc
stos
mov
dec
or
jne
mov
and
mov
sbb
ficoms
mov
jns
sbb
gs
mov
aaa
dec
push
adc
push
xchg
fmull
xchg
aaa
cmp
adc
mov
mov
scas
sbb
cs
aad
addl
sub
push
int
lds
mov
sahf
dec
lret
adc
xchg
add
adc
jnp
scas
outsl
in
loopne
loopne
sbb
mov
mov
ljmp
popa
adc
fstpl
pop
or
mov
mull
lahf
xor
out
push
push
fcos
inc
push
arpl
add
sti
mov
inc
loop
in
sti
xor
xor
mov
push
popf
mov
shlb
pop
fidivrl
fdivrp
add
jl
push
add
int3
rorl
inc
in
mov
and
cmp
sub
push
je
dec
cmp
pop
outsl
xchg
adc
mov
push
fistl
push
mov
test
and
push
fdivs
mov
mov
sbb
dec
xchg
mov
jp
xchg
and
mov
mov
and
mov
test
dec
dec
loopne
mov
xor
add
push
and
adc
shll
pop
push
repz
xor
jle
hlt
mov
pop
notb
push
sbb
ss
ret
jnp
fcomps
push
add
repz
inc
mov
add
add
into
fsubrl
jnp
pop
cli
xchg
inc
bound
movsl
adc
add
jnp
mov
into
je
mov
add
sub
and
add
shrb
push
sbb
les
repnz
imull
test
addr16
mov
or
sti
sub
inc
and
or
add
das
and
arpl
and
lahf
jp
mov
rclb
add
push
cmp
mov
ds
out
sar
and
pusha
fldt
mov
fwait
mov
jl
rclb
mov
cmpsb
in
fadds
xchg
adcb
into
cwtl
lods
mov
jnp
bound
or
xchg
mov
pop
dec
out
sub
mov
and
iret
cmp
out
lret
xchg
add
fstpl
cli
mov
out
int3
int3
inc
mov
dec
lret
sti
sbb
rol
inc
push
sbb
test
aaa
adc
pop
call
dec
inc
in
add
inc
mov
insb
adc
mov
cmp
and
rcr
out
rcl
pop
cli
inc
rcrl
jle
adc
push
jbe
or
jmp
cltd
test
sbb
addr16
push
dec
push
xorl
xchg
inc
dec
fcomps
adcb
movsb
shrb
lret
ret
ret
enter
call
jb
sub
into
jp
sub
push
lcall
add
lret
xor
cld
lcall
pop
ljmp
mov
push
outsb
iret
into
loopne
mov
aam
mov
xor
aad
cmc
adc
and
mov
aad
out
test
test
sub
add
out
incl
mov
loope
cmc
xchg
mov
int
sub
dec
lds
fsubrl
adc
cmpsl
xchg
inc
inc
mov
push
shl
dec
int
imul
ds
adc
fs
mov
repnz
pop
push
xchg
aas
xchg
insl
sub
mov
ss
lcall
pop
sub
push
inc
inc
push
cmp
pop
jns
mov
out
push
aam
out
xor
shlb
imul
or
les
xor
jmp
mov
pop
test
push
adc
adc
movsb
jg
fnsave
pop
inc
sub
scas
add
pop
imul
push
in
cs
jg
lahf
xor
dec
inc
dec
push
shrb
enter
rcrl
shrl
pop
fildll
add
out
leave
jno
sbb
fs
movsb
mov
out
and
dec
fs
loope
or
mov
and
pushl
mov
mov
xchg
mov
clc
jmp
adc
insl
stc
jl
cltd
push
mov
fwait
push
add
adc
cmp
das
mov
add
push
mov
in
sbb
sahf
fs
test
inc
jle
rorb
or
orb
and
mov
jae
xchg
xchg
and
imul
jecxz
movsb
pop
ja
stos
jns
scas
cmp
cmp
addr16
jg
ja
cltd
cmc
and
out
ss
hlt
gs
dec
data16
pop
js
inc
cli
and
lret
push
push
mov
lahf
cwtl
mov
fisubl
repz
lea
pop
neg
es
sub
dec
mov
pop
jecxz
xor
push
fwait
stos
cmp
jae
sbbl
adc
imul
loop
sbb
jmp
xchg
pop
testl
mov
lds
push
add
jp
insl
add
add
std
inc
and
pop
aas
mov
dec
leave
jo
mov
scas
sbb
and
xor
cmp
push
jp
hlt
ljmp
aad
in
jns
js
das
fcom
adc
add
sbb
mov
pop
pop
adc
sub
or
sub
inc
mov
mov
jecxz
movsl
fwait
psubw
ss
xchg
pop
dec
bound
mov
aaa
aam
push
xor
mov
ja
stc
stos
or
adc
xlat
lds
lret
add
mov
or
stos
sub
jns
mov
mov
sbb
mov
jbe
dec
arpl
stos
inc
rorb
stos
and
jle
stos
pop
scas
push
inc
test
imul
or
lock
outsl
mov
stos
popa
lahf
inc
sub
push
xchg
daa
lods
inc
push
nop
call
andb
int3
adc
ljmp
cmp
jbe
sub
mov
or
inc
cld
lahf
jb
nop
mov
fcoml
sbb
test
out
gs
or
mov
sub
jbe
xlat
fcom
int3
fildll
push
sti
sub
jecxz
sar
push
shll
add
outsb
subb
jae
sub
mov
xchg
fstps
call
in
pushf
mov
sub
adc
xlat
adc
jbe
outsb
push
xchg
ds
mov
cmpsb
add
cmp
mov
cmp
cmpsb
addr16
sub
outsl
mov
leave
mov
imul
sbb
mov
bound
insb
xchg
push
daa
xor
jbe
adcl
das
adc
mov
loopne
cmp
lret
lock
mov
inc
adc
inc
hlt
vpunpckhwd
arpl
xchg
enter
adc
sub
popf
add
lds
ja
sub
adc
ret
push
lock
adc
nopl
xchg
pop
in
stc
outsb
push
cmp
xor
aaa
inc
jge
mov
icebp
loop
cltd
jns
cltd
adc
mov
into
dec
out
and
jmp
stos
lods
mov
lcall
movsb
jae
xchg
popa
jg
push
loop
test
repnz
cli
sahf
mov
aas
sub
inc
xchg
sub
sbb
mov
movsl
fs
jmp
mov
inc
int3
xor
xchg
je
fisubl
js
enter
or
adc
lock
dec
jg
sub
sbb
idivb
les
shrb
push
stc
aad
arpl
leave
dec
cld
dec
js
dec
or
adc
xlat
jbe
mov
or
pop
shl
and
pop
jmp
frstor
int3
push
iret
iret
sbbb
orb
je
add
loop
and
cmpsb
sub
imul
sbb
adc
dec
pop
or
jae
bound
loope
test
and
shrd
inc
mov
mov
cltd
inc
inc
sbb
xlat
imull
cmp
loop
inc
dec
jl
adc
lret
adc
xchg
fdivl
js
and
insl
test
jl
insl
dec
inc
xchg
and
in
jb
inc
jge
xor
or
shlb
test
xor
cwtl
cmpsl
mov
or
loop
lcall
jo
clc
add
cmp
or
arpl
xchg
lods
pop
negb
bound
pop
aad
and
xor
mov
dec
xchg
push
sbb
insb
hlt
sub
and
lcall
aaa
jo
arpl
in
outsb
inc
ljmp
and
xor
dec
sbbl
fwait
add
push
jp
test
jmp
inc
pop
mov
clc
fwait
inc
jl
push
dec
mov
out
push
fbstp
mov
outsb
iret
or
fsubrl
in
cmpsl
dec
mull
xchg
sbbb
push
xorl
pusha
bound
mov
das
mov
inc
mov
adc
adcb
xchg
sub
sub
or
aam
or
inc
mov
mov
cmpsl
jp
sbb
mov
lahf
adc
sub
sub
adc
dec
shr
imul
ljmp
outsb
mov
xchg
add
or
lahf
dec
ljmp
mov
xor
mov
inc
and
leave
repnz
push
and
mov
stos
lea
leave
add
ret
push
shlb
xchg
shll
notb
ljmp
ja
daa
pop
pop
imul
daa
pop
mov
int
cmp
and
xor
cmpb
sbb
scas
movsb
pop
jle
andb
jbe
pop
test
movsl
adc
nop
and
ret
stos
sahf
mov
jo
push
xor
dec
sub
xor
mov
pop
dec
int3
sbb
rcr
push
cwtl
push
test
sub
push
ret
mov
push
dec
insb
rcrl
xor
or
sub
xchg
out
negl
or
push
shr
loop
dec
mov
push
sub
scas
cmp
sbb
xchg
cli
dec
out
imul
pop
jl
cmp
lods
ja
xchg
bound
sub
loope
lods
sbbl
clc
in
out
cmp
es
pop
movsb
and
mov
in
xchg
mov
push
dec
jo
fs
icebp
repz
pop
and
xor
nop
rcll
inc
xor
out
and
repnz
lcall
movsb
cmc
out
addr16
xchg
sbb
xlat
jl
lret
inc
push
jo
loopne
insb
or
lods
sub
and
aad
push
xchg
clc
movsbl
fcomps
or
dec
ret
test
es
cmpsb
aad
add
fucomi
cmp
andl
inc
shlb
mov
push
cmpsl
push
in
or
add
aad
mov
out
fdivrs
cmp
es
rorb
outsb
xchg
adc
test
dec
fimuls
jo
sub
hlt
pop
repz
jo
movsb
ja
lcall
mov
push
mov
mov
aam
call
xor
sub
outsb
das
sbb
sub
insb
xchg
push
sbb
imul
ss
outsl
subl
cmpsb
xlat
ss
aaa
sti
ljmp
push
rcr
mov
push
mov
repnz
xor
lahf
mov
in
mul
jle
popa
adc
in
xorl
jb
mov
fdivrl
push
popa
int
pop
mov
int
cltd
ljmp
sub
jns
je
test
jecxz
jae
das
mov
ss
add
cli
mov
and
shl
or
and
cmp
or
push
xchg
outsl
out
aam
fwait
hlt
fbld
lret
or
xchg
lods
in
mov
cmovo
adc
pop
cltd
mov
cmp
lock
cmp
dec
cli
jne
andl
add
in
mov
fisttpll
or
cld
dec
xchg
mov
dec
mov
mov
jno
sar
stos
enter
mulb
push
push
inc
cmpsl
add
call
xor
and
sub
andps
xorl
outsb
ds
int3
push
leave
xchg
js
or
pop
cltd
stos
adc
ljmp
lods
dec
pusha
pusha
int3
sub
in
fbld
jo
out
or
or
call
scas
or
divb
cmp
pop
lea
jne
adc
insl
mov
out
fiaddl
sub
dec
setae
in
inc
mov
mov
jo
es
daa
inc
pop
mov
inc
adc
push
add
mov
stc
xlat
sub
in
mov
jae
jns
push
movl
sahf
push
sbb
push
inc
lret
gs
cmp
dec
enter
int3
sub
pop
pushl
sub
push
cmovle
inc
loope
inc
std
rcrl
inc
jge
xchg
mov
js
cmp
inc
shll
sarl
call
mov
int3
test
aam
pop
fists
shrb
jns
sbb
hlt
mov
lahf
adc
mov
daa
call
inc
addr16
pop
dec
fisttps
add
cmp
cltd
xor
lds
mov
movsl
sub
push
jno
mov
adc
jmp
mov
test
shlb
inc
rorb
jg
ss
rcll
bound
mov
cmpsb
xor
addb
sub
dec
icebp
cmp
cltd
xor
jo
ljmp
iret
lret
int
and
pushf
inc
mov
push
orl
jne
adc
es
loope
sub
jne
or
mov
int3
fcoms
push
movsl
push
ret
adc
dec
cmp
xchg
cmpsb
inc
push
jno
cmp
scas
loope
out
or
cmpb
out
dec
push
mov
fwait
lea
pop
push
mov
push
sub
xchg
andl
adc
call
scas
aas
iret
repz
cld
out
fsubrs
pusha
jne
mov
sti
addr16
movl
adc
test
stc
cmpsb
mov
mov
mov
leave
mov
xor
pop
xor
fprem1
lds
mov
push
dec
jge
clc
fsub
adc
mov
jg
decl
push
cli
pusha
inc
data16
push
pop
jae
jne
xchg
mov
imul
sbb
lock
ja
hlt
sbb
or
loopne
push
push
fs
cwtl
arpl
cli
out
ds
inc
xor
mov
cmp
aam
mov
jge
rolb
lcall
xchg
pop
mov
mov
lret
push
shl
xchg
sahf
sub
sbb
mov
inc
ficompl
fimuls
mov
out
mov
or
push
cmp
pop
outsb
fdivs
dec
mov
daa
xor
dec
stc
je
rcrl
fidivl
sub
pushf
lea
mov
addr16
rclb
int3
ss
jge
sbbl
or
add
cs
jb
inc
or
lock
fnstenv
adc
fisubrl
arpl
out
faddp
int
les
inc
pop
notl
ret
into
mov
push
inc
jb
les
inc
mov
xchg
mov
pop
into
das
mov
jl
sub
dec
jne
pop
push
rcll
dec
rorb
mov
insl
sub
push
add
xchg
inc
add
adc
push
push
rclb
mulb
jne
pop
jecxz
adc
inc
movsb
pop
sub
inc
inc
es
inc
mov
repz
cmp
sub
aas
lahf
xchg
fs
jbe
push
mov
ds
cld
xor
popf
xor
testl
test
mov
mov
repnz
add
or
sub
xchg
pusha
pop
std
mov
ljmp
xchg
jne
mov
push
lods
add
mov
vmovq
push
pop
popa
cmpsb
sbb
enter
pushf
test
dec
sbb
pop
subl
jae
mov
xchg
shlb
imul
add
cmp
xor
mov
cmp
inc
mov
inc
fadds
lock
cwtl
mov
js
or
mov
inc
clc
lods
out
push
sub
dec
mov
test
setae
add
pop
push
loopne
or
stos
jecxz
test
inc
les
in
cmp
stos
outsb
int
cmpxchg
xor
out
loope
daa
pop
pop
inc
int3
pop
loopne
push
frstor
pop
bound
mov
mov
inc
fisubrl
int3
dec
fcompl
shlb
rcl
jmp
bound
testb
addr16
dec
adc
sbb
sub
sbb
lret
sub
and
jne
mov
gs
jo
repnz
xchg
cmpsl
lahf
cld
cmpb
adc
pop
icebp
sub
push
mov
cmp
push
add
cmp
cmovbe
mov
iret
pop
jne
insb
mov
xor
fmull
and
mov
add
cwtl
push
hlt
sbb
aaa
jl
cld
add
sbb
repz
xchg
inc
jo
lcall
dec
lahf
iret
lea
mov
cmp
xorb
jae
fdivl
mov
mov
lret
xchg
cmp
and
jp
mov
in
lock
popf
cmpsl
sbb
jnp
lea
fistpll
pusha
cltd
out
sarl
jp
data16
push
adc
pop
loope
iret
and
pop
pop
int3
adc
dec
mov
xchg
inc
mov
pop
dec
mov
xchg
cltd
mov
inc
jg
pop
dec
sbb
cmp
xchg
mov
cmp
xor
movsl
and
lahf
pop
push
and
es
and
jns
in
stc
push
pop
mov
daa
out
lea
in
cmp
xlat
bound
or
mov
sbb
int3
push
cmp
testl
mov
sub
aam
dec
mov
mov
outsl
sbb
adc
je
jle
or
out
push
dec
sub
jmp
addl
pop
mov
cwtl
into
jle
mov
faddl
mov
push
popa
push
sub
add
push
jge
xlat
mov
rcr
sti
push
fldl
mov
and
fstpt
jo
mov
divl
mov
insl
repnz
sbb
xor
mov
xchg
pushf
scas
mov
push
out
push
in
jns
adc
imul
jmp
dec
scas
clc
inc
cmp
mov
daa
lods
sbb
xchg
fdivl
or
or
outsb
aaa
rcrl
push
andb
jno
out
loopne
mov
inc
pop
sbb
hlt
inc
int3
add
stc
xor
minps
cmp
adc
or
aaa
adc
mov
pop
xchg
lret
cli
cmp
mov
lret
sahf
xchg
rcrb
sub
ret
inc
inc
sub
int
stc
cmpsl
push
push
cltd
pushf
pushf
jbe
divb
rcll
jg
dec
fwait
aaa
int
mov
jl
sbbl
inc
stos
fstps
mov
sub
jmp
dec
mov
ljmp
xchg
add
inc
mov
mov
xor
or
cmp
lahf
adc
pushf
outsb
jae
cs
cs
dec
mov
xchg
std
dec
or
call
call
out
add
insl
push
dec
dec
add
xchg
icebp
incb
jo
stos
sub
lock
pop
movsb
or
scas
mov
sbb
mov
add
mov
std
outsl
push
push
and
int3
push
pop
or
push
mov
nop
mov
xchg
mov
aaa
xchg
sbb
nop
pop
adc
dec
mov
cld
xlat
clc
out
dec
and
adc
jmp
push
test
mov
and
mov
mov
in
rorb
int
or
cmp
mov
lods
mov
inc
shll
mov
mov
lahf
mov
imul
adc
jae
pop
testl
dec
push
inc
mov
and
mov
popa
stc
xor
stos
cmp
mov
andb
lret
jns
adc
cmp
movsl
fs
jno
push
push
mov
mov
andl
test
cld
xchg
adc
fists
mov
addr16
cld
xchg
test
add
fsts
push
aas
push
or
insl
fcoml
add
imul
push
xor
lods
fcompl
imul
mov
xchg
push
ljmp
pop
rcrb
and
jnp
pushf
dec
std
xchg
cmp
movsb
dec
jmp
leave
cmp
push
inc
and
push
xchg
sbb
subb
xor
fwait
lar
ficoml
xchg
iret
ret
test
sub
subl
jmp
xchg
mov
mov
push
in
or
jae
test
cli
scas
in
test
sub
out
mov
inc
mov
std
ljmp
jo
mov
cli
int3
testb
mov
out
shl
out
inc
sti
sub
ja
pop
sahf
ja
push
inc
mov
xchg
lahf
fcomps
inc
cmp
movsb
and
std
scas
add
les
xchg
repnz
je
cmp
and
adc
in
adc
adc
ljmp
pop
mov
mov
or
lret
mov
sbb
xor
cmp
leave
lock
jmp
sbb
sub
inc
mov
ret
inc
or
push
jne
jne
add
cmp
xor
xchg
mov
push
and
sub
into
test
stos
adc
jl
mov
mov
mov
fldl
movsb
mov
popa
mov
mov
jo
xchg
jo
subb
rolb
inc
jae
push
cmp
dec
xchg
enter
js
scas
mov
mov
lods
stos
xchg
jl
mov
mov
push
clc
in
inc
leave
mov
into
dec
nop
cmc
out
mov
xor
rorb
cmp
lahf
push
pop
insl
add
xchg
dec
add
cmp
mov
jae
cmpsb
and
push
inc
cwtl
ds
cmpsl
out
ds
aad
sub
xchg
insl
adc
mov
xor
pop
subb
xchg
mov
in
or
cmp
inc
insb
add
stos
cmp
xchg
and
jl
in
pop
rcll
cwtl
inc
sub
xlat
add
jmp
mov
push
es
sbb
xchg
mov
ret
ja
cmpsl
scas
negb
popf
sub
paddusw
hlt
sbb
mov
sub
int3
dec
insb
and
stos
jmp
sbb
mov
xchg
cli
in
fldl
xor
push
in
pop
pop
cld
sbb
cltd
das
mov
mov
add
sbb
clc
xor
xchg
or
stos
jo
sbb
aad
pop
dec
mov
stc
mov
push
lea
popf
add
push
sahf
push
push
jo
dec
hlt
popa
mov
idivl
into
push
pop
mov
jo
leave
into
dec
adc
jecxz
xchg
loop
sarl
mov
icebp
dec
jge
or
push
fadds
decb
bound
push
mov
cld
xchg
push
int
loop
inc
nop
add
or
mov
out
cli
daa
ret
out
fildl
inc
push
lcall
loop
push
jns
add
or
or
sbb
mov
pusha
xor
mov
adc
ljmp
out
xlat
xchg
inc
push
pop
popa
push
jl
add
stos
int3
sub
pop
sub
mov
xlat
dec
cmc
xchg
arpl
jno
sar
test
aas
mov
sbb
pop
ror
aad
test
ljmp
xchg
push
jnp
inc
jmp
repz
std
mov
mov
mov
leave
jecxz
shll
and
cmpsb
jl
jle
mov
jg
rorl
out
cmp
jb
jne
or
add
pop
push
xchg
pop
or
mov
mov
xchg
xchg
mov
sbb
sub
mov
aad
push
loopne
scas
sti
ret
cwtl
arpl
adc
jae
or
icebp
jg
rorb
arpl
cmp
push
mov
or
jp
mov
xor
cmp
je
or
push
popf
sub
xchg
sub
into
mov
jle
daa
std
xlat
mov
popl
sbb
sbb
jl
jbe
arpl
push
vrsqrtps
nop
in
sahf
inc
and
scas
jo
mov
xorps
cwtl
pop
mov
addl
mulb
cmpsl
lcall
lods
repnz
ret
mov
aam
xlat
push
ds
es
pushf
xchg
mov
shl
loope
data16
nop
push
add
ljmp
rcr
pop
out
scas
inc
inc
and
or
xchg
or
shl
or
movsb
movsb
mov
xchg
ret
cld
nop
bound
pop
out
add
dec
adc
addb
adc
and
mov
mov
lea
mov
bound
or
inc
cld
pop
ss
push
cmp
jl
ja
xor
outsl
push
mov
add
sti
ljmp
adc
and
dec
sbb
sbb
cmp
mov
ss
xorb
ja
push
daa
inc
mov
xor
cmp
dec
xor
stos
ljmp
fdivl
in
dec
arpl
xor
sbb
xchg
inc
push
in
js
test
or
pushl
jne
fdivrl
mulb
int3
push
in
mov
pop
and
idivl
nop
push
mov
idivl
add
cmp
movsl
fdivs
mov
dec
mov
call
push
pop
dec
inc
cltd
mov
ds
dec
mov
adc
hlt
adc
pop
les
movsl
ljmp
lahf
cld
push
out
cld
aam
aas
outsb
or
xchg
lret
pop
adc
jl
cli
aaa
shrl
jmp
frstor
push
jle
subb
cmp
xlat
cmc
adc
mov
xor
bound
push
jb
mov
sub
xor
push
icebp
insb
sahf
loop
xchg
sahf
rcrl
xchg
lahf
cmp
rol
jg
test
pop
ret
push
sub
lcall
mov
xor
in
and
mov
hlt
leave
loope
pop
jns
cld
add
cmp
add
lret
mov
or
lcall
std
scas
enter
xor
pop
fdivrp
insl
or
into
and
aaa
lea
cmp
popa
cmp
push
cmp
or
mov
inc
loopne
sbb
dec
jnp
fdivrs
loope
xor
jbe
push
jno
dec
push
sbb
cli
add
cltd
mov
or
sbb
dec
sbb
aam
dec
gs
icebp
xchg
rorb
stos
dec
aam
inc
pop
scas
mov
scas
cmp
sbb
xchg
dec
mov
neg
sub
call
enter
clc
sub
fiadds
adc
movsl
xchg
and
shl
jp
fbld
icebp
jae
sbb
fucomip
sub
push
add
mov
sbb
push
jns
and
mov
or
ret
in
lret
jo
sub
pop
lahf
fsubs
jle
sbb
push
dec
daa
sub
push
cmp
je
int3
jne
inc
sbb
cltd
mov
pop
mov
push
inc
pushf
in
xchg
daa
out
jae
addr16
sbb
mov
ds
js
push
dec
addr16
sub
mov
jbe
inc
scas
mov
pusha
and
stc
add
ja
push
sar
inc
and
xchg
mov
popl
mov
and
and
loopne
and
mov
xor
bound
xor
imul
sbb
int3
mov
movsb
int3
and
xchg
sbb
divl
sub
insl
push
sub
das
xor
push
mov
mov
xchg
ds
mov
xchg
leave
xchg
mov
push
cmp
jbe
jecxz
imul
lret
jl
dec
and
add
les
nop
sti
push
inc
push
ret
les
adc
jge
xchg
ret
fwait
pop
push
dec
mov
pusha
fsts
inc
cs
rorb
xor
mov
int3
fldenv
xor
leave
outsb
stos
outsb
mov
movsb
lea
or
mov
adc
imul
mov
cmp
push
cmp
dec
push
dec
or
add
mov
shr
hlt
insl
mov
mov
imul
mov
mov
movsb
sub
in
xchg
xchg
or
dec
dec
imul
dec
dec
cmpsl
dec
daa
and
pusha
mov
xor
in
dec
fldt
xor
push
push
pop
lret
das
ret
sub
clc
jl
ret
adc
dec
cmpsl
lret
lock
sbb
sahf
pop
lock
js
pop
stos
idivl
xchg
or
popa
mov
cmp
lret
cmp
mov
cmc
lods
inc
pushf
dec
cmovne
sahf
dec
xor
dec
hlt
fisttpl
and
std
jae
lds
mov
mov
in
mov
ret
lods
inc
or
mov
punpcklwd
sarb
sub
int
cmc
sub
dec
test
in
in
inc
sbb
inc
inc
lcall
mov
out
mov
lds
or
in
add
jmp
and
jns
shll
jp
jbe
jmp
xor
mov
ds
push
cli
mov
inc
fcomp
add
xchg
xchg
mov
jle
sahf
push
lods
sbb
mov
ja
push
mov
sti
ljmp
test
dec
fidivl
and
pop
mov
ljmp
std
sahf
subb
std
inc
orl
xchg
dec
mov
and
jno
sub
daa
sti
pop
inc
rcrl
sbb
xchg
xchg
loope
cmp
pop
pop
inc
cmp
pop
mov
icebp
inc
lahf
ret
les
out
jno
shlb
leave
push
and
cmpsl
sbb
dec
mov
inc
xchg
fwait
stos
fcomps
xor
sbb
xchg
ror
je
es
ror
jge
pop
xchg
gs
sahf
jmp
sub
insl
add
cld
icebp
lcall
mov
inc
mov
cmp
xor
push
aam
insl
inc
or
add
lods
push
and
add
cmp
dec
enter
sub
mov
mov
jb
dec
int3
test
out
mov
cmp
lahf
ficomps
or
mov
stc
cmp
mov
mov
inc
fwait
int3
xlat
cmp
outsb
mov
xlat
push
lods
push
nop
das
dec
jb
xchg
add
mov
cmpb
xlat
insl
adc
stos
xchg
daa
mov
lret
ja
dec
inc
fiadds
xchg
sahf
or
aad
loop
int
rcrl
xor
aam
pop
rcll
xor
enter
mov
daa
push
shlb
pusha
push
out
mov
mov
pop
sahf
push
mov
lret
xchg
dec
lahf
push
add
lret
mov
enter
iret
fwait
pop
add
jno
mov
jmp
adc
sub
dec
push
ret
cs
and
and
xchg
pop
adc
cmp
xchg
mov
pop
mov
frstor
pop
push
jns
mov
adc
icebp
add
sub
cld
xor
gs
nop
xchg
cmp
sti
rclb
fists
jno
sbb
adc
lods
repz
inc
aas
push
ss
nop
fsts
mov
dec
shl
scas
jp
cli
divl
sbb
push
loopne
fildl
icebp
jmp
in
jmp
adc
in
sbb
ja
mov
cmpl
shlb
or
pushl
xorb
in
xor
add
addl
negl
jge
popf
sub
insb
jmp
repz
mov
or
outsb
ds
pop
pop
fwait
ljmp
movsb
je
stc
orl
int
inc
sub
je
sub
xchg
mov
mov
sub
aam
int3
inc
xchg
int3
add
push
out
in
out
xchg
mov
and
pop
sub
jbe
add
out
xchg
jle
push
xchg
fidivs
imul
je
and
pop
dec
xchg
and
dec
or
lcall
cmp
xor
shrb
push
push
mov
mulb
jo
mov
inc
inc
xor
mov
inc
mov
sub
loope
xor
pushf
pop
mov
cmpxchg
dec
adc
cmp
std
or
lcall
popf
aas
rclb
pushf
xor
push
jmp
or
jb
push
mov
movsl
mov
dec
ss
sbb
jp
sahf
inc
jns
add
jae
notb
lods
cwtl
and
rorl
or
sub
xchg
repnz
rcll
dec
pop
mov
cltd
imul
inc
sub
jne
inc
lcall
sub
movsb
mov
pop
sub
int3
sub
testb
sbb
jne
jmp
iret
addr16
ljmp
sub
lock
int3
push
mov
cwtl
scas
xchg
in
sub
sahf
in
addr16
inc
dec
or
fs
jb
call
fistpll
stos
jno
mov
lret
sbb
or
inc
or
ror
loope,pn
insl
cmc
imul
cmp
rcll
jae
in
sub
pop
cld
push
mov
push
leave
out
xchg
rorl
ret
bound
in
push
mov
xchg
inc
mov
sbbb
xchg
and
fsubs
lock
adc
and
and
jb
cld
std
test
ljmp
sti
cmc
jo
fldenv
sbb
cmp
xor
stos
data16
daa
repz
in
adc
std
push
pop
dec
lock
lods
push
stc
gs
pop
inc
sub
inc
gs
sub
arpl
shll
fnstenv
dec
ficoml
mov
ret
scas
push
sub
fxam
and
cli
sarb
stos
dec
int3
sub
repnz
cmc
gs
shll
les
sub
xor
push
out
sub
add
and
in
icebp
jg
movsl
pop
clc
push
shlb
or
mov
mov
pop
jg
sbb
mov
mull
push
adc
cltd
repnz
mov
jle
push
cltd
cltd
jcxz
sbb
ret
leave
or
pushf
pop
aad
or
loopne
ret
sbb
cmp
imul
mov
sub
ret
jp
lock
stc
int
cmp
push
cmp
cmc
add
push
lods
add
xchg
fistpll
jle
mov
push
dec
push
jb
insb
or
bswap
lea
mov
outsl
gs
dec
adc
mov
in
lcall
int
inc
mov
mov
lcall
adc
repz
adc
lahf
mov
cmp
jo
push
xchg
test
jns
gs
xchg
ret
ret
xor
dec
inc
mov
push
mov
push
jno
fucomi
lcall
jmp
adc
fwait
out
es
mov
cmpl
movsb
rorl
out
scas
and
and
or
push
fildll
xor
fldt
ficoms
jnp
xlat
rcl
add
dec
cmc
inc
and
sub
mov
or
out
test
jae
fwait
lock
or
xchg
cmp
xlat
rolb
push
and
outsb
fwait
stos
imul
push
xchg
push
popf
test
xor
push
pusha
repnz
repnz
mov
push
mov
push
inc
mov
push
mov
sub
clc
arpl
mov
out
adc
xchg
sahf
mov
insb
dec
gs
dec
in
in
adc
rorb
dec
inc
mov
push
pusha
nop
mov
hlt
lods
mov
popf
pop
jae
stc
jno
mov
and
fldpi
fisttps
or
call
pop
les
stos
iret
shll
mov
imul
push
add
and
push
sub
mov
jmp
pop
leave
pop
push
sbbb
pop
mov
sub
lahf
daa
cwtl
jns
lock
bound
jno
sub
cmpsb
adc
push
shl
mov
push
clc
in
dec
mov
pop
into
stos
popf
int3
push
push
pop
push
and
pusha
shl
inc
outsb
or
imul
leave
je
jmp
into
in
mov
imul
fidivrl
cltd
pop
std
lea
pop
js
aaa
jo
xchg
push
les
lea
jno
push
dec
push
es
mov
scas
mov
mov
push
mov
popa
loopne
xchg
je
es
push
pop
push
mov
push
movl
sub
paddq
lcall
sub
jb
mov
or
xchg
mov
mov
je
mov
mov
out
mov
fwait
mov
sbb
cmp
arpl
adc
push
out
stc
sbb
sub
lds
push
ss
mov
mov
subl
fs
mov
pop
daa
jno
aas
inc
jle
cmp
sbb
imul
xchg
fs
jmp
fidivl
stos
in
fucomip
mov
xchg
pop
xor
inc
mov
sub
movsl
lcall
xor
in
sub
adc
cwtl
add
mov
xor
fsubrs
add
nop
stc
ss
stos
mov
and
pop
sbb
mov
fistps
jge
ja
pop
inc
dec
push
push
imul
mov
and
pop
pop
lahf
dec
jmp
jmp
jbe
mov
fcmovb
je
out
testb
sbb
test
xchg
sbb
mov
pop
andl
jmp
repnz
pop
adc
stc
mov
test
popa
andl
add
popa
cmpsb
mov
cmp
lea
outsb
pushf
test
in
push
rcr
adc
popa
push
fwait
jl
pop
sbb
mov
jae
rolb
inc
sahf
lret
addb
jmp
in
movsl
jp
scas
xchg
adc
cwtl
jns
pop
cmpsl
fucom
popf
jp
ljmp
dec
imul
lcall
shll
daa
cmp
push
shlb
out
loope
das
arpl
and
sub
mov
pop
push
push
fucomi
xor
inc
shlb
aam
xlat
push
xlat
mov
mov
push
inc
movsb
cmpsb
stos
sub
addl
in
nop
mov
sub
mov
movsl
jge
test
aas
add
dec
in
and
cmp
xchg
pop
into
imull
xor
cmp
sahf
inc
scas
mov
lahf
int
stc
push
in
mov
je
push
add
adc
cmp
les
xchg
fistpll
mov
inc
and
push
mov
jnp
mov
and
push
adc
repz
mov
test
sub
cld
sub
fwait
xor
lods
and
loop
and
call
test
les
push
in
je
mov
or
loop
stos
xchg
out
pop
inc
dec
dec
pop
jle
mov
out
jecxz
enter
sti
and
push
and
mov
outsl
add
and
pop
mov
mov
popf
and
add
mov
mov
mov
add
cmp
or
outsb
lret
sbb
mov
bound
ljmp
sbb
int
mov
mov
div
xchg
xchg
mov
jecxz
cmp
call
sub
lods
outsb
dec
dec
inc
sbb
repz
sbb
test
cmpsb
repz
mov
push
lahf
testb
cmp
cli
fisubrl
and
mov
shrb
xchg
inc
aam
push
pushf
jo
in
sti
lcall
push
lds
out
or
lahf
jae
clc
gs
leave
in
out
pop
mov
in
movsb
jl
sbb
mov
fildl
push
mov
loop
mov
ret
push
mov
jb
jbe
lret
jle
rep
mov
pop
cmp
sbb
pop
xlat
add
shll
pop
nop
mov
mov
fcompl
test
jecxz
or
xor
clc
call
ds
repz
mov
jecxz
jge
adc
inc
paddusw
stos
addl
cmp
mov
pop
out
adcb
imul
mov
pop
lods
sahf
inc
cmpsb
adc
adc
push
and
inc
mov
dec
andb
pop
dec
xor
pop
sbb
rorl
test
arpl
sbb
jecxz
mov
jge
or
xchg
xlat
and
addr16
pop
aaa
into
sub
sahf
mov
insl
clc
mov
not
xchg
popf
in
aas
lahf
xchg
data16
rcl
lea
and
sub
cli
hlt
pop
movsl
jge
dec
xchg
pop
mov
cwtl
cmp
pop
or
cld
lea
sub
xchg
mov
lods
mov
inc
dec
std
dec
mov
jge
lret
inc
mov
adc
aas
cmpsl
ja
xor
jb
or
xchg
sub
dec
or
cmp
popa
push
xor
pop
push
inc
mov
bound
push
sarl
sub
sbb
scas
sarl
rclb
sbb
call
popf
jb
scas
sbb
push
sub
mov
inc
dec
dec
rcrb
inc
lock
pop
adc
push
notb
int3
xchg
outsb
push
aaa
pshufw
mov
loopne
pusha
mov
push
repnz
stos
push
push
jmp
std
test
popf
or
movsb
xor
jno
aaa
sub
outsb
jg
imul
ljmp
adc
cmpb
and
or
xchg
jno
and
mov
push
mov
pop
sbb
cmp
mov
xchg
add
pop
sti
add
call
in
popa
pop
stos
sar
xchg
aaa
push
scas
xchg
jns
pavgb
insl
or
fists
sti
xor
jns
lock
aas
sub
xchg
or
roll
cmp
pop
insl
or
gs
jbe
outsl
xor
call
dec
je
jne
sbb
push
jbe
mov
pop
les
hlt
imull
mov
in
in
or
sub
mov
jo
jb
mov
pop
cwtl
nop
push
loopne
ljmp
cmpsb
xchg
mov
inc
jne
stos
jg
rcr
or
jecxz
out
mov
gs
sub
movsb
es
in
and
and
xor
mov
test
cmp
inc
rcll
push
and
add
shrb
into
push
mov
lcall
lods
fildl
out
repnz
pusha
cld
sub
jno
fabs
icebp
je
add
test
inc
das
cmp
dec
scas
jle
lret
inc
scas
dec
cmp
adc
add
ds
cmpsl
mov
sbb
xchg
rclb
cmp
sub
addr16
push
arpl
mov
mov
mov
sti
mov
loopne
xor
xlat
push
push
push
adcl
ja
fst
lahf
das
push
enter
mov
fstpl
jns
lcall
shll
pop
aam
lret
xor
dec
cwtl
xor
push
in
mov
sbb
add
hlt
pop
push
je
inc
add
push
dec
movsl
sbb
ret
adc
les
mov
mov
test
add
outsb
icebp
stc
or
mov
std
xchg
dec
jns
daa
mov
mov
ret
popa
aaa
cli
push
fnstsw
int3
dec
jno
mov
lahf
hlt
sub
bound
fildll
jbe
aaa
test
sbb
loopne
ds
xor
mov
sbb
rolb
fcoms
pop
sub
stos
pushf
jno
stc
jmp
mov
std
jle
add
fld
inc
inc
in
aas
scas
leave
mov
scas
inc
imul
cmp
ja
pop
xchg
mov
push
aaa
push
pop
mov
dec
xchg
cltd
pop
mov
mov
sub
pop
sbb
iret
adc
sbb
xor
xor
xlat
into
dec
inc
or
sub
shl
aaa
cltd
fiaddl
jbe
xlat
stos
outsb
cmp
jne
mov
sub
push
outsl
jecxz
push
test
pop
jne
add
mov
aam
popf
arpl
cmp
das
mov
in
xchg
ffreep
fwait
xchg
pop
sbb
xchg
dec
test
sahf
enter
bound
mov
push
jmp
or
xor
dec
ss
aam
push
adc
lods
std
inc
fucomi
fwait
div
cmpsb
leave
sbb
and
jle
enter
jmp
inc
imul
xchg
lds
xor
pop
push
popf
inc
inc
dec
jae
mov
mov
xchg
and
mov
xor
in
sbbl
lcall
dec
jne
scas
test
scas
or
cmpsl
ljmp
jae
mov
push
fdivp
mov
arpl
push
mov
clc
inc
data16
jbe
in
xchg
shlb
push
push
lods
push
hlt
movsl
pop
dec
jge
cwtl
xor
dec
imul
lret
xor
mov
push
cmp
es
push
insb
xchg
mov
jle
push
jns
adc
dec
pop
hlt
lret
insl
out
jo
cwtl
je
fadds
mov
in
arpl
movsb
leave
lea
cmp
mov
adc
movsb
mov
fidivrs
xor
scas
cwtl
int
cmp
push
pushf
in
inc
push
xor
inc
testb
push
add
in
inc
push
cmp
add
aad
sahf
mov
ret
mov
mov
lods
aaa
and
push
add
popa
sti
fstl
mov
fnstenv
dec
push
sarl
ret
cmp
cli
inc
mov
xchg
xchg
lock
jmp
add
push
in
mov
cwtl
ret
or
jno
test
dec
push
mov
leave
testb
inc
jnp
ret
setp
dec
cmpsl
test
mov
rorl
daa
out
leave
push
inc
jmp
jne
sub
mov
iret
mov
rcr
cltd
xor
mov
test
in
sbb
movsl
lret
dec
jbe
jle
xor
test
mov
pop
pop
aas
outsl
jg
arpl
cwtl
outsl
hlt
add
cli
mov
mov
jb
and
stc
mov
pusha
mov
xchg
pusha
clc
arpl
sbb
jno
xchg
jecxz
and
mov
ficomps
iret
popf
cld
decl
out
leave
pop
xchg
cmc
lahf
outsb
jecxz
jle
xor
xor
pop
mov
xchg
popa
mov
cmpsl
xchg
fnstsw
addl
pop
sahf
dec
fs
repz
sbb
js
fs
and
mov
in
fsts
add
xchg
xlat
pop
jb
adc
add
repz
ret
ja
adc
cmp
mov
lret
pop
out
andl
xlat
scas
sbb
mov
fimull
push
and
mov
or
cmp
or
repnz
xor
lea
pop
pop
dec
jo
xchg
jno
xchg
sti
stos
in
jae
mov
xlat
iret
xor
lock
shl
lret
sub
sbb
aam
push
push
aad
aas
sub
rcll
jne
sub
or
cmc
adc
mov
push
sbb
push
cmp
int3
mov
lds
sar
cmp
cltd
dec
notb
or
xor
jbe
cs
fisttpll
outsl
iret
int
imul
sub
fstpt
pop
fucom
mov
lock
jns
push
loop
daa
aas
or
subb
mov
test
adc
dec
test
pop
mov
fucomi
jns
adc
ret
cmp
fwait
movb
dec
in
lret
sbb
jne
imul
ret
fnstenv
sarb
push
out
inc
dec
cmp
mov
mov
mov
stos
mov
jbe
imul
xorb
pop
test
push
and
or
lods
cmp
sub
sbb
xor
cmp
sub
xchg
push
add
enter
push
sbb
mov
outsb
xor
inc
ret
int
iret
aad
add
jo
aaa
loop
jp
jge
cwtl
dec
and
adc
lret
mov
mov
rcrl
or
xchg
fldenv
inc
test
xchg
cmp
cmpsl
inc
popa
jae
out
imul
loopne
push
sub
shll
ret
jne
mov
es
sub
cmp
das
dec
sarl
orb
xor
fs
out
lds
mov
and
pop
lret
das
adc
dec
push
mov
pop
aas
movsl
push
insl
ds
lods
push
rcr
sub
xchg
movsl
mov
push
adc
push
and
ja
mov
clc
icebp
xor
cmp
sbb
adc
dec
test
xor
cltd
rorl
sahf
adc
sbb
test
xchg
add
inc
stc
jno
stos
andb
aam
mov
repnz
mov
add
push
sbb
mov
shlb
sub
mov
and
sub
outsl
cmp
loopne
mov
fbstp
jo
out
les
das
test
sub
ss
in
pop
xchg
stc
pop
jp
cltd
and
or
ret
mov
lahf
insl
xchg
pop
lds
inc
jge
popf
dec
fcmovne
dec
xchg
push
adc
or
mov
jae
rclb
adc
and
ljmp
or
shlb
in
je
cli
int
outsl
or
inc
mov
out
jge
sahf
das
fdivrp
sub
xchg
push
or
xchg
or
mov
xor
jle
mov
jp
inc
negb
movsl
jecxz
push
cmp
in
insl
stos
cmp
inc
jnp
push
mov
into
dec
sub
fnstcw
and
lods
pop
insl
mov
cltd
add
lods
lea
test
xor
ljmp
mov
in
cmp
sbb
cmp
shr
ret
movsl
sub
pusha
test
cmp
and
fwait
in
mov
jno
xchg
mov
mov
sub
je
jecxz
inc
push
lret
and
es
mov
lret
pop
or
xor
or
mov
mov
sbb
iret
test
out
jne
nop
mov
add
fimull
mov
cld
dec
xor
jns
repnz
inc
fildll
shll
nop
pop
push
sbb
adc
loope
jecxz
leave
cmc
add
jp
mov
cmp
cld
adc
flds
sbb
adc
mov
cmc
push
movsb
jne
mov
lret
mov
clc
jp
cmp
rcrl
loop
adc
dec
icebp
jns
xchg
mov
test
pop
mov
sbb
orl
jb
sahf
out
out
jae
daa
mov
jo
aaa
mov
hlt
das
and
or
push
dec
pop
sbb
mov
push
dec
rolb
movsb
rcrl
push
xor
push
stos
cld
call
dec
scas
out
pushf
lret
and
stos
mov
adc
sbb
adc
loope
sub
adc
add
in
xor
mov
pop
imul
iret
pop
add
sbbb
mov
fdivr
xchg
pop
add
cltd
rcrl
mov
mov
mov
mov
lret
mov
mov
adc
fcom
outsl
cmp
les
xchg
xchg
mov
mov
jmp
push
or
sbb
std
lea
popa
inc
scas
jecxz
inc
xor
sub
jecxz
xor
ret
jle
add
mov
inc
enter
rol
dec
jb
fwait
stos
loopne
xor
testl
mov
ljmp
arpl
adc
lods
repnz
mov
mov
fisttpl
pop
inc
fadd
ds
jns
mov
pusha
cmp
or
xor
movsl
jp
sbb
mov
jg
pop
rcrb
andl
pop
sbb
repz
sti
sbbb
jg
ja
pop
test
inc
mov
jmp
les
test
cld
add
xor
ja
sub
xchg
push
sbb
pushf
enter
mov
dec
xchg
mov
inc
jnp
sub
push
mov
jecxz
pop
int3
xchg
shrb
xor
cmpsl
clc
xchg
push
mov
add
in
mov
sbb
insb
xchg
arpl
popf
sub
inc
inc
int3
insl
mov
mov
daa
sub
dec
push
inc
fisubrs
add
call
dec
push
int
ljmp
add
mov
imul
shl
fcmove
sbb
dec
jle
xchg
mov
push
adc
jns,pt
imul
pop
das
xchg
pop
scas
pop
and
or
scas
and
lods
shll
cmpsl
mov
mov
mov
or
icebp
and
cmpsb
or
test
xchg
mov
sarl
xlat
lock
out
cli
out
adc
xchg
mov
push
xchg
in
dec
test
fisttps
pushf
and
repz
mov
es
bnd
mov
lea
jg
jns
dec
sbb
out
stc
mov
int
fwait
ds
popa
mov
xchg
xchg
adc
scas
push
bound
mov
adc
adc
add
arpl
hlt
pop
data16
lds
loop
int3
lock
mov
ficoml
xor
leave
add
mov
ret
push
mov
mov
adc
cli
into
fcmovbe
loopne
push
mov
dec
jbe
cvtps2pi
or
movsl
push
xchg
pop
or
push
pop
jecxz
xchg
dec
push
jl
inc
outsl
in
inc
push
jae
stos
add
out
stos
lcall
dec
xchg
mov
xchg
test
inc
jecxz
les
sub
lds
repnz
mov
int3
lret
stos
xchg
scas
enter
int
fs
and
mov
insb
scas
push
or
movb
call
into
inc
dec
and
cld
loop
sarb
sarl
mov
gs
arpl
lods
gs
push
sub
xor
fdivp
pop
lret
scas
daa
cmp
icebp
mov
ret
loopne
dec
mov
pushl
mov
out
jmp
jp
cmc
cmp
ds
aas
stos
repnz
or
arpl
sub
mov
xor
sahf
cwtl
push
lret
inc
popf
mov
dec
sub
add
mov
jb
insl
xchg
mov
push
sbb
imul
out
xchg
push
loop
push
ja
xchg
ss
xchg
mov
jecxz
add
imul
adc
roll
fs
pop
mov
icebp
or
imul
jg
mov
out
sbb
mov
pushf
int3
xor
sti
inc
loopne
mov
xchg
jmp
dec
pop
fs
stos
pop
scas
push
out
add
xchg
sahf
and
out
das
jb
xor
mov
out
sahf
leave
data16
jno
dec
arpl
lahf
negb
xor
loopne
and
sbb
aam
mov
lods
push
ss
add
out
cli
or
test
les
fmuls
fmull
into
lret
xchg
push
adc
lock
test
adc
imull
stos
dec
xor
cs
out
inc
movsb
sub
movsb
icebp
sub
addr16
dec
iret
nop
pop
ret
mov
or
jecxz
inc
jnp
inc
scas
xor
inc
int
and
gs
rcr
dec
xchg
jbe
int
loope
cmp
sub
icebp
xor
lcall
sbb
addl
and
and
loopne
repz
push
mov
and
hlt
cs
xor
mov
jg
sbb
stc
sub
dec
sbb
and
sub
out
inc
sti
into
xchg
push
ljmp
dec
arpl
rcl
pop
jp
es
lahf
xchg
psrad
sbb
aam
roll
sti
aaa
sbb
jmp
arpl
data16
xlat
lock
in
push
fwait
add
movsl
cmpsb
shll
sarl
inc
shlb
inc
adc
out
mov
cmp
xchg
lods
or
lods
jl
cmpsb
mov
dec
mov
out
int3
lret
jg
pop
aas
add
lret
and
sub
roll
mov
lods
repz
xchg
lret
or
pushf
bound
sbb
and
fldt
test
sbb
push
cmp
sbb
pop
xchg
xor
add
push
dec
xor
push
xchg
push
pop
sbb
in
add
sahf
test
je
fwait
test
ficomps
mov
push
adc
add
test
inc
stos
add
insl
sub
aas
insl
shrl
lock
adc
in
add
ret
push
std
xor
xchg
cltd
xor
insl
shl
popa
dec
lcall
lahf
dec
loope
fmull
addr16
sbbl
add
or
repnz
add
jb
orl
test
fmuls
aaa
in
incl
pop
jle
fcoml
cwtl
aas
in
fidivl
incl
mov
mov
and
sbb
sahf
add
stos
or
out
lcall
cwtl
xor
cltd
arpl
push
cwtl
cli
loope
dec
data16
cli
mov
pop
int
ja
xchg
inc
and
les
pop
push
pop
jle
cmpsl
cmp
dec
in
imul
xor
fwait
sub
cmp
mov
sub
mov
shrl
pop
mov
out
add
in
lcall
cmp
cmc
and
es
shlb
cmpsb
push
repnz
push
jp
push
aaa
sti
xchg
jmp
popf
dec
mov
in
pop
hlt
adc
cs
scas
cwtl
fdiv
insb
test
mov
sbb
mov
fimuls
push
nop
cmp
test
lods
pop
lahf
jle
adc
aad
aaa
aas
or
das
or
dec
mov
mov
popl
sti
mov
push
test
pushf
mov
scas
pop
dec
sub
in
imul
scas
ret
data16
fdivrs
enter
inc
push
or
mov
inc
jbe
idivb
cli
xor
repz
ret
or
or
sub
sti
xchg
popf
js
add
xchg
mov
cmp
xchg
fwait
inc
and
int3
addr16
pusha
pushf
arpl
int
and
shlb
or
dec
imul
mov
popa
and
rcll
dec
lea
dec
cmp
xchg
out
xchg
aas
inc
adc
jns
leave
and
fimuls
test
sbb
clc
sbb
xchg
test
repnz
xor
shlb
dec
lods
sub
jl
cmp
or
adc
xchg
pop
lret
popf
stc
fbstp
orl
or
sahf
fwait
or
mov
mov
std
push
cmc
add
and
mov
std
outsb
cmp
rcrb
xchg
pop
xor
mov
pop
push
mov
mov
mov
sbb
mov
lods
xchg
inc
out
repnz
setb
lds
out
outsl
iret
icebp
add
ss
pop
jb
or
cmc
add
jne
test
xlat
inc
ret
imul
xchg
and
fcmove
and
sbb
and
decl
cmovae
lds
ja
jmp
ret
lret
in
adc
test
jns
test
push
out
sahf
icebp
mov
test
gs
imul
mov
adc
or
and
push
adc
lahf
div
add
cmpsb
adc
outsb
in
cmp
sbb
jmp
inc
sbb
rclb
push
mov
gs
xor
scas
aaa
repnz
pop
imul
pop
je
fsubr
imulb
add
sub
fs
jl
test
mov
lods
adc
loopne
jle
jae
mov
mov
call
mov
dec
lds
mov
pop
mov
popa
shl
repz
jle
sub
in
rclb
les
add
jae
push
rorb
lret
test
into
lds
or
push
call
mov
into
push
into
push
cmc
stc
int
or
lds
mov
mov
sbb
cwtl
roll
adcb
and
mov
ss
jae
pop
push
sub
xchg
arpl
imull
fistpl
push
sub
call
lock
sbb
jae
jb
in
xchg
sub
je
dec
jg
scas
les
cs
lock
mov
sbb
push
jnp
jmp
arpl
movsl
jne
ret
outsl
sub
ret
test
repnz
repnz
fcmovb
and
mov
sub
dec
pop
in
lds
lods
and
nop
movsl
add
pop
data16
push
clc
and
xor
fisttpll
push
test
pop
jo
jmp
xchg
jae
call
repz
cld
pushf
mov
mov
into
mulb
mov
add
sbb
outsl
and
and
nop
inc
cmp
inc
jmp
fnstenv
ss
movsl
gs
push
push
scas
xor
inc
shll
nop
es
js
xchg
mov
mov
jl
cmp
jo
pop
mov
lcall
iret
sarb
pop
lds
push
lret
pop
es
cmp
sahf
mov
lcall
pop
in
inc
mov
adc
or
les
mov
push
pop
inc
mov
pop
xorb
xlat
je
push
rclb
lds
ret
aad
and
adc
sub
xchg
pop
fs
cmpsl
jae
inc
xchg
jg
mov
lahf
push
pop
xor
clc
dec
fimull
test
scas
test
xchg
push
dec
lret
fisttpl
out
enter
add
clc
lahf
mov
mov
dec
xor
repz
popf
roll
mov
ja
mov
xorl
scas
mov
fisubs
jo
lret
mov
mov
push
ss
int
and
mov
mov
popa
jns
movsb
pop
das
dec
insb
es
cltd
pop
sbb
mov
adc
xchg
fsub
repz
mov
add
aad
test
xchg
push
fs
nop
xchg
int
push
inc
push
jl
inc
jle
dec
xor
daa
mov
popl
cmpsl
imulb
inc
fcomi
in
fdiv
mov
jp
mov
ror
subb
mov
adc
cmp
sbb
dec
lods
std
in
mov
and
mov
sub
leave
cmp
shlb
adc
xchg
push
movsl
adc
int
xchg
dec
into
push
pusha
psrlw
jno
addr16
loop
mov
and
xlat
mov
gs
out
cmpsl
gs
mov
rol
in
pop
mov
sbb
inc
xlat
xchg
lock
mov
add
popa
int
inc
adc
push
mov
rdmsr
movsb
xchg
sbb
mov
loope
cs
shrb
add
add
pop
lods
lret
test
xor
push
mov
divl
pop
and
push
test
push
rcrl
pusha
jns
addr16
jb
or
push
xchg
xchg
xchg
and
imul
js
outsl
jmp
ja
mull
xlat
push
sub
pusha
test
int
sbb
roll
out
insb
test
dec
pop
xor
js
sbb
sbb
jns
dec
cli
test
outsl
mov
ret
xchg
push
fnstcw
clc
pop
fidivrl
das
sub
out
dec
cmp
sti
dec
push
or
stos
inc
sbb
mov
out
test
mov
push
inc
je
mov
mov
jae
leave
adc
mov
fldl
dec
mov
jno
mov
cmp
popf
repnz
movsb
adc
insb
out
and
adc
insl
mov
aam
repnz
in
enter
jo
adc
test
jle
or
cli
dec
shrl
fadds
jae
mov
js
mulb
hlt
mov
cltd
pop
lock
vpsraw
ds
sar
imul
cmp
xchg
mov
sarl
mov
mov
mov
adcb
out
es
test
into
pop
loopne
lahf
dec
xchg
or
popa
xchg
daa
imul
rolb
mov
ljmp
push
push
inc
push
sbb
xchg
movsb
xor
mov
ljmp
mov
jo
js
jge
pop
pusha
inc
xchg
mov
xor
inc
imul
repnz
test
subb
or
imul
xchg
loope
in
decb
hlt
sbb
mov
lcall
sbb
andb
nop
shl
lods
in
fs
inc
std
sahf
mov
gs
not
je
movsb
idiv
cmpsl
into
idivb
mov
dec
sarl
push
mov
cltd
cmc
icebp
mov
cltd
ja
outsl
push
dec
jle
lea
pop
insl
jns
mov
mov
or
push
icebp
aam
jns
inc
push
or
lret
std
jo
jo
pmaxsw
push
in
int3
pusha
mov
cmp
mov
jmp
mov
lds
in
push
fcompl
scas
mov
out
ds
movlps
pop
adc
rcr
sbb
mov
xchg
pusha
ljmp
mov
ds
scas
mov
sub
test
inc
scas
push
inc
inc
add
sub
mov
fs
sarb
aad
xlat
jmp
aam
mov
jecxz
test
pop
aam
jne
cmp
push
xchg
cs
ljmp
cli
xchg
movsb
test
js
test
push
stos
clc
mov
push
xchg
mov
inc
xchg
inc
ficomps
push
ja,pn
or
or
outsl
and
cld
mov
shr
xor
mov
or
mov
jle
xchg
movsb
xor
int3
sub
sub
test
sahf
les
in
cmp
add
out
cmp
pop
sub
loope
repz
push
ror
mov
in
sbb
shll
dec
popa
adc
loop
shrb
xchg
ret
lahf
adc
or
add
mov
jmp
pop
enter
repnz
xlat
subb
mov
pushf
xchg
lea
in
mov
rcl
ret
roll
sarl
mov
fadd
or
push
stos
mov
cld
pop
adc
cmp
dec
xor
je
hlt
jno
stc
dec
repnz
jle
cld
push
nop
ret
adc
mov
push
push
das
sub
gs
sbb
shr
dec
das
add
popa
lock
test
dec
mov
inc
je
push
mov
dec
xchg
and
cmpsb
or
mov
hlt
stos
fdivrs
and
scas
xor
cli
jp
sbb
xor
cmp
ljmp
push
xchg
jbe
jb
sahf
jl
mov
sarb
sbb
sahf
ret
fildl
fs
jg
test
popf
pusha
sub
mov
jl
mov
test
mov
mov
dec
leave
xor
ss
mov
flds
pop
aam
clc
movsb
push
int
popa
stos
int3
pop
sbb
xchg
pop
sar
xlat
and
mov
and
rolb
movsb
lret
lahf
push
ss
pop
or
ja
or
push
bound
inc
repnz
shlb
mov
fcoms
or
and
xchg
and
orl
mov
fcoml
jmp
push
dec
add
jl
loop
cmp
add
cmp
mov
aaa
sub
ds
dec
mov
mov
jns
push
mov
stos
dec
mov
pushf
je
jnp
dec
popf
ss
insl
jns
mov
pusha
inc
call
out
pop
je
cs
and
or
ljmp
lret
dec
and
pop
stos
or
jne
push
jns
jl
add
mov
jbe
iret
aam
popf
lret
shlb
lret
xchg
push
and
and
mov
stos
lret
adc
pop
or
push
add
daa
mov
aad
or
cmp
jle
dec
xor
mov
es
iret
cmp
or
leave
scas
mov
decl
xor
sub
xor
daa
jnp
cld
mov
and
shll
mov
add
jg
pop
xor
imul
pop
dec
repz
push
ljmp
in
insl
fisubl
jg
xchg
cmpsl
lds
inc
and
mov
sub
push
xchg
mov
loopne
mov
add
ficoms
push
aaa
ret
in
lret
lret
inc
inc
inc
clc
scas
mov
add
sub
mov
add
sbb
daa
dec
mov
xchg
mov
mov
dec
push
push
jmp
mov
popf
jns
sub
je
arpl
push
sbb
mov
cmp
jbe
fdivrl
rclb
into
push
push
movsb
arpl
xor
adc
movsb
aaa
jl
fmull
repz
in
sbbb
cmp
lcall
mov
loope
jno
sbb
orb
lods
adc
imul
sbb
mov
stos
lods
aam
popa
int3
mov
test
xchg
bound
dec
add
test
adc
jg
test
call
push
dec
jb
lahf
add
jbe
cmp
push
dec
outsb
cmp
push
sub
jbe
sub
repnz
fisubl
sub
in
sub
mov
push
cld
scas
jbe
lea
clts
inc
adc
fs
adc
scas
into
sub
mov
adc
add
or
stos
out
jno
xorl
inc
sbb
cmpsl
adc
pop
inc
jns
out
test
fisubs
jae
jns
sbb
sub
sub
fs
idiv
sub
pusha
push
add
pop
dec
and
dec
jb
enter
dec
pop
inc
jp
jbe
dec
pop
and
sub
dec
hlt
jae
push
iret
in
repnz
push
inc
cmp
dec
ss
adc
xor
das
int
xchg
test
push
addr16
in
fsubr
pop
inc
scas
mov
lret
and
es
inc
push
stos
jnp
cltd
mov
mov
inc
jns
xor
iret
add
lcall
jmp
cmp
mov
pusha
or
inc
pop
jle
mov
icebp
fildll
lcall
pop
iret
push
or
pushf
sbb
push
les
xchg
daa
mov
dec
lods
imul
jmp
inc
hlt
cmp
sbb
loop
dec
es
repz
mov
mov
mov
cmc
add
das
pusha
rclb
sbb
adc
cli
lock
std
mov
dec
add
aad
dec
push
lds
mov
out
xchg
ret
ficoms
push
pop
mov
clc
push
cmpl
push
sub
mov
test
sbb
jno
test
sub
lret
test
test
mov
lods
jl
shrl
unpcklps
fsubrs
in
lods
push
out
sarl
aam
scas
cwtl
adc
jbe,pn
pop
in
inc
xchg
mov
outsl
push
imull
pop
enter
pusha
mov
cmp
adc
pop
adcb
jno
lods
cli
xchg
sub
pop
in
mov
insl
pop
mulb
orb
fmul
mov
ret
repz
stos
fucom
xchg
fdivr
imul
or
lcall
rcl
das
mov
jno
in
loope
mov
mov
jecxz
adc
xor
mov
outsb
add
out
jg
pxor
out
in
mov
jne
xlat
cmp
and
pop
pop
ja
sbb
out
loope
aad
adc
inc
ret
push
cmp
inc
lahf
push
jl
lret
xchg
and
in
mov
dec
bound
pop
or
lret
scas
test
mov
mov
outsb
iret
push
push
add
repnz
mov
jmp
arpl
mov
test
cwtl
fdivl
sub
push
jne,pn
outsb
or
aad
inc
stc
mov
mov
aad
adc
mov
mov
xor
sbb
aad
iret
mov
popa
pop
dec
cld
addl
cvtps2pd
xor
scas
loope
sub
loop
pop
xor
pop
andl
adc
test
and
rolb
pop
jge
lods
dec
mov
jno
xor
movsl
addl
arpl
sbb
inc
icebp
pop
cmp
fadd
mov
mov
fists
xchg
mov
jmp
popf
loop
outsb
je
xlat
mov
xlat
test
and
decb
jb
cmp
mov
test
jne
xchg
loop
cmpsb
push
in
pop
xchg
adc
sbb
jge
pop
movsb
nop
outsl
xchg
mov
dec
pop
lods
aam
or
adc
add
shl
or
or
jnp
pop
stos
insb
cltd
aaa
lds
popf
hlt
fisttps
jo
jo
sub
aad
imul
ss
orb
or
stc
and
aas
cmp
sub
ds
push
pop
xor
shlb
roll
ja
jo
cmp
les
push
pushf
push
pop
shlb
mov
icebp
gs
scas
insl
cltd
dec
mov
imul
into
sbb
inc
xor
mov
sub
xor
lcall
mov
inc
shlb
lds
rolb
sbb
loop
jno
icebp
jmp
stos
rclb
lret
cltd
insb
iret
fs
movsl
inc
scas
mov
insb
negl
add
cmp
popa
sti
cwtl
push
xchg
or
sbb
outsb
mov
and
dec
ss
imul
push
mov
dec
push
lahf
adc
das
adc
repnz
adc
ja
sahf
sahf
pop
mov
inc
and
in
and
test
cli
cwtl
js
push
nop
ljmp
cs
pop
movsl
lds
ds
jl
cmc
mulb
mov
cmc
imulb
adc
cmp
pop
and
add
xchg
adcl
push
icebp
xor
jo
fcmovnbe
pop
cs
dec
jae
daa
test
cli
js
jo
ret
movsl
out
and
leave
mov
xchg
jl
xchg
add
dec
lock
push
subl
adc
insl
mov
xchg
addb
add
aaa
sarl
mov
push
cli
mov
dec
test
inc
mov
mov
mov
inc
xchg
xchg
lret
push
adc
lds
inc
add
aad
mov
outsb
cmpsb
xchg
nop
fmul
in
pop
adc
data16
mov
mov
mov
stos
or
loopne
scas
cmp
mov
xor
ds
mov
inc
cmp
mov
jne
loopne
cmc
ja
pushf
cld
sti
pop
adc
xchg
mov
shl
pop
nop
mov
call
data16
clc
xor
js
xor
inc
fs
test
cmp
cmp
pop
subb
or
xor
icebp
test
hlt
push
fwait
push
dec
movups
xor
ret
cmp
in
rcll
mov
ret
imul
es
mov
mov
fs
dec
in
je
jge
xor
outsl
cmp
mov
testl
xor
mov
add
repz
mov
xchg
aas
pushf
mov
xor
sbbl
jp
sub
imul
mov
pop
jne
cmp
adc
dec
cwtl
or
mov
ret
xor
cmpsb
es
leave
cld
inc
xor
push
add
sbb
mov
jp
and
push
faddp
scas
jl
cmp
movsl
repz
fs
dec
mov
imul
jle
mov
out
or
xchg
cmp
sbbb
mov
stos
stc
xor
jp
mov
xchg
jl
scas
pop
sbb
call
jg
rorb
ljmp
scas
shr
adc
scas
jne
aas
sbb
mov
out
loope
leave
hlt
clc
repz
push
repnz
pop
cs
into
out
out
add
or
loop
inc
push
or
lea
ret
imul
mov
repz
and
je
lret
or
mov
xor
or
out
cli
or
mov
mov
fwait
pop
and
jae
out
xlat
leave
pop
jb
cmpsl
pop
cmp
add
lods
loop
ror
scas
lret
test
fwait
pop
jno
pop
cmp
cmp
lret
inc
xor
xchg
mov
push
or
inc
rol
xchg
lahf
rorl
mov
ljmp
fcomip
jl
jns
xor
or
xchg
and
lret
test
idivb
lret
aam
lds
mov
jnp
gs
iret
out
inc
sub
lods
or
scas
mov
fidivrs
xor
idiv
xchg
adc
lods
in
adc
fadd
dec
rclb
push
and
xor
sub
xor
stos
addr16
mov
ret
outsl
test
frndint
std
adc
push
xor
popf
out
notb
mov
mov
loop
or
cltd
sbb
add
je
and
jbe
pop
test
iret
jne
push
mov
adc
push
sub
int
or
push
jno
adcl
stos
push
pop
adc
add
nop
out
data16
cltd
sbb
sub
in
addb
mov
fwait
fwait
mov
fiadds
jecxz
pop
mov
test
ja
outsl
pop
std
es
loope
das
mov
mov
cmc
arpl
xchg
leave
push
inc
ret
lea
pop
dec
cmp
imul
out
test
das
add
or
pop
adc
clc
adc
xchg
je
xchg
pusha
push
je
cmp
xchg
jl
adc
test
xor
imul
fs
inc
sub
cs
mov
xor
stos
pop
aaa
subl
mov
adc
nop
std
push
loopne
inc
sahf
out
repnz
popa
call
mov
mov
add
lea
mov
sbb
or
in
fistl
and
aas
aad
outsl
jp
dec
fbld
sbbl
mov
pop
xchg
roll
repnz
inc
xchg
xchg
jo
into
add
cld
sbb
jno
adc
mov
mov
les
ljmp
loop
out
cld
lods
pop
sti
jo
add
mov
addr16
movsl
pushf
inc
sahf
sahf
movsb
jl
cmp
add
inc
jns
clc
adc
pop
lods
sbb
mov
insl
or
push
ss
iret
ds
push
jb
push
inc
lcall
insl
xchg
mov
jnp
fstpl
dec
leave
frstor
sub
cmp
jns
push
and
sbbl
stos
loopne
inc
push
xor
je
lret
fnstcw
mov
and
fs
outsb
pop
subl
add
gs
sub
jmp
or
mov
daa
in
or
jbe
push
cwtl
xchg
ss
mov
sub
ffreep
sahf
fwait
outsb
ss
or
sub
xchg
and
mov
xchg
cmp
jge
xor
add
pop
mov
push
cmp
je
lret
mov
dec
add
xchg
daa
mov
push
jle
sub
or
in
outsl
fcoml
rcll
push
js
sbb
repnz
xchg
sub
jl
inc
into
and
mov
incb
and
jmp
sub
mov
je
pop
pop
sub
out
addr16
popf
ljmp
cmp
adc
mov
sar
fadd
mov
out
jno
lods
sbb
jno
stos
in
dec
out
push
sbb
data16
lds
push
xchg
inc
loope
fcmovu
sub
jns
scas
nop
xchg
cmpsl
out
cli
sbb
pop
and
xlat
inc
and
aaa
mov
xor
mov
mov
fistpll
scas
mov
movl
inc
sahf
add
fldenv
bound
cltd
and
pop
call
dec
out
and
push
lea
push
out
nop
xor
xor
rcrb
xchg
xor
and
dec
fdivp
adc
xchg
push
jmp
push
mov
aad
push
les
sbb
sub
outsb
inc
dec
lds
sbb
notl
mov
loope
cmp
pop
outsb
adc
add
sbb
xor
jae
push
cmp
imul
ljmp
jl
leave
push
cmp
push
inc
lock
push
pop
call
jecxz
popf
ja
iret
scas
mov
mov
sub
dec
in
fistl
shrb
mov
iret
mov
adc
dec
dec
jnp
movl
and
jp
push
mov
push
mov
in
mov
inc
dec
idivl
repnz
pop
jge
push
icebp
push
cld
inc
mov
pop
cmpsl
inc
fisubrs
inc
mov
fs
test
cmpl
pusha
jle
cld
js
pushl
lret
popa
adc
not
test
orl
pop
rol
sbb
lods
xlat
sbb
movsl
pop
adc
sub
out
out
cmp
cmp
xor
sub
sbb
fucom
push
mov
add
jno
cwtl
scas
pop
push
or
ljmp
hlt
sbb
mov
in
int
or
outsl
cmpsl
push
mov
mov
mov
push
xchg
rcll
aad
push
and
in
mov
out
mov
lahf
sbb
xlat
push
add
out
popf
add
jmp
mov
mov
repnz
repnz
out
inc
mov
or
xchg
mov
push
mov
enter
mov
xor
cld
sub
mov
fwait
adc
out
loopne
into
leave
std
lock
sub
xchg
testb
sbbl
mov
popa
dec
clc
mov
scas
lds
cmp
cli
jmp
or
iret
adc
lea
mov
or
jbe
loopne
out
push
mov
loope
or
jae
fwait
xor
mov
and
repz
mov
mov
clc
add
and
lock
pop
cwtl
mov
sub
pop
sub
clc
ret
push
sub
inc
pop
call
dec
out
popf
scas
or
setb
notb
push
push
scas
mov
fsts
movsl
lea
ret
test
xchg
add
fucomp
gs
test
push
stc
in
xchg
mov
lods
dec
popa
inc
testb
cmp
sbb
jecxz
mov
xchg
icebp
sub
cltd
inc
testl
mov
push
mov
pop
leave
sbbl
stos
push
cmovl
shrl
into
flds
mov
fdivrl
push
mov
setbe
mov
dec
sbb
mov
jmp
cmpb
jmp
sub
insl
loope
adc
mov
or
dec
dec
lock
sahf
repz
xchg
cmp
add
mov
push
xchg
adc
clc
mov
insl
mov
or
and
ficoms
cmpsb
aas
sbb
mov
nop
sub
iret
sbb
mov
lock
push
or
shll
pop
pushf
int3
xchg
popf
or
push
and
adcb
iret
xor
das
das
ja
aam
adc
das
mov
ret
adc
popa
int
adc
add
popa
dec
dec
xor
mov
sub
dec
pop
jbe
lcall
dec
and
dec
sahf
inc
je
clc
dec
adc
xor
mov
xchg
xchg
jns
out
fsubrl
or
enter
lods
mov
addl
pop
pushf
mov
insl
dec
gs
jbe
shlb
pushl
aaa
ret
lea
rcll
adc
inc
xchg
sbb
pop
dec
adc
xchg
mov
cvtdq2ps
xor
inc
and
xchg
xor
dec
add
lock
inc
push
push
xor
cmp
cmp
sahf
lods
sbb
out
jne
jo
ljmp
mov
sarb
push
mov
dec
mov
cmp
scas
xlat
push
ljmp
push
clc
mov
cld
add
ss
insb
loop
dec
sub
mov
inc
out
sbb
xor
inc
insb
lock
or
push
pop
pop
mov
pop
dec
pop
cmp
dec
add
add
adc
or
pop
sub
jo
adc
push
ja
jnp,pt
gs
sbb
inc
jecxz
out
sbb
or
mov
push
mov
scas
nop
xor
jmp
roll
std
jb
xchg
scas
pop
inc
add
or
pop
cmp
push
mov
push
les
push
stos
pop
inc
pop
push
mov
mov
jbe
jp
rcll
dec
push
jnp
add
jmp
jbe
movsb
inc
push
mov
sbb
cmp
add
mov
mov
adc
adc
aam
cs
shlb
sub
push
and
rcr
inc
xchg
ljmp
das
mov
int3
cmp
loopne
dec
out
pop
jae
vmwrite
sub
push
cmp
jb
xchg
mov
in
sbb
in
jne
sbb
mov
xchg
mov
or
test
add
push
cltd
ja
or
fadds
pop
mov
jae
push
add
das
adc
leave
and
les
stos
mov
aaa
ret
out
mov
and
notb
test
lods
xor
and
or
mul
dec
ljmp
mov
or
imul
push
daa
mov
call
call
sub
inc
pop
ljmp
scas
jp
lahf
cwtl
outsl
pop
dec
hlt
and
jmp
in
xor
imul
or
js
xchg
nop
shl
sbb
outsl
test
mov
add
pop
test
sub
inc
pop
push
add
jnp
mov
inc
adc
jle
fistl
push
movsb
inc
sbb
inc
icebp
xchg
jle
sub
sbb
inc
mov
pop
cld
adc
push
movsl
dec
xor
call
arpl
xorb
outsb
mov
sub
fwait
cmc
lds
int
xchg
sti
movsl
ja
cs
mov
cwtl
bound
push
imul
mov
xlat
ret
lret
int3
data16
adc
outsb
gs
cmpsb
shrb
int3
jae
ret
cmpsb
pop
lds
repnz
sahf
cmp
mov
xchg
push
aam
mov
insl
dec
dec
mov
imul
out
faddl
xor
mov
hlt
adc
int
mov
mov
lret
jbe
jnp
adc
rolb
mov
scas
idiv
lret
in
loop
and
dec
fldenv
and
inc
or
add
outsl
jae
loope
stos
lods
ss
push
mov
clc
shrb
jo
stc
shrb
sahf
pushf
cmp
mov
pusha
pop
outsl
sbb
cmp
or
inc
mov
pusha
or
push
mov
stos
push
mov
mov
movsb
je
nop
jecxz
xchg
idivb
and
in
and
adc
ror
adc
pusha
sarb
sub
jbe
movsb
cwtl
mov
clc
cmp
xchg
push
sahf
enter
mov
enter
je
lea
je
das
imulb
arpl
mov
fbstp
sbb
cltd
lods
inc
add
loop
dec
dec
hlt
lret
jo
ficomps
jno
cmp
divl
add
outsb
daa
sub
adc
sbb
fsubs
mov
mov
fsub
mov
add
mov
inc
or
sbb
std
mov
nop
and
movaps
sub
pushf
loop
bound
int3
enter
jle
jecxz
dec
dec
movsb
jo
inc
cmp
jle
inc
or
enter
mov
pop
dec
and
fcomi
adc
add
addr16
loop
mov
sbb
mull
and
loop
lret
xor
cmp
popa
enter
call
scas
dec
call
push
jmp
popf
aaa
dec
jmp
imul
mov
add
or
cmp
test
xchg
insb
push
mov
mov
loopne
into
lea
add
sbb
int3
ja
div
sub
out
nop
pop
push
mov
loope
sti
decb
dec
jb
fisubrl
mov
xchg
outsb
mov
out
ficompl
mov
repnz
jb
gs
cli
push
xor
or
push
mov
sub
outsl
bound
roll
stc
mov
jb
mov
addr16
sbb
pop
dec
jnp
mov
adc
xor
pop
fisubrl
movsl
xor
dec
loop
dec
cmp
xor
pop
pop
test
mov
test
lods
and
cltd
popf
scas
lret
push
clc
repnz
mov
fwait
sbb
and
mov
out
xchg
push
xchg
sub
ret
pop
in
sub
fsubr
adcb
rcl
push
mov
arpl
adc
inc
clc
and
ret
jbe
sbb
mov
movsb
lret
push
scas
inc
insl
jnp
test
fldl
add
jb
cli
leave
je
imul
adc
scas
mov
mov
daa
jle
cmp
repz
add
jb
in
sarl
fildll
sbb
xor
or
and
and
or
sahf
sbb
cwtl
and
jp
in
mov
fwait
pop
dec
fs
add
mov
push
test
or
in
out
xor
ja
cmpsl
insb
xchg
cli
jg
mov
rcrb
ss
mov
repnz
nop
cli
insb
mov
cltd
add
add
adc
lods
mov
outsb
jne
pop
jb
icebp
cwtl
nop
inc
add
xor
xchg
pop
xor
mov
loopne
pop
inc
fisttps
data16
shlb
bound
repz
adc
or
xchg
icebp
iret
scas
xchg
mov
mov
sbb
std
je
test
shrb
xorl
rclb
mov
nop
cs
imul
mov
imulb
and
jbe
lds
sub
pop
jp
ret
dec
and
loopne
in
pop
leave
cmc
aas
into
das
mov
mov
test
imul
mov
es
inc
and
lcall
ljmp
mov
sub
jmp
mov
and
sbb
push
mov
jb
pop
lods
xor
adc
sbb
inc
push
ja
add
mov
imul
adc
je
sahf
fimull
xchg
add
fwait
out
jmp
cmpsb
in
cs
mov
adc
sbb
sbb
and
mov
lea
mov
aaa
push
pop
js
jle
push
int3
adc
lret
pushf
mov
iret
cs
lock
xchg
movsl
sbb
jmp
xchg
out
xchg
filds
arpl
divl
adc
cmpl
aad
rcr
call
and
lret
dec
xor
inc
push
daa
sub
leave
test
cmp
repnz
mov
pop
xor
jne
mov
cmc
test
push
ficoml
repnz
sti
jmp
mov
pop
fmull
in
mov
dec
test
test
inc
aas
or
fidivrs
lea
jmp
and
ss
sbb
data16
adcl
push
aaa
sub
call
add
les
scas
fidivl
mov
cmp
test
jb
pop
outsl
jne
cmpb
sub
in
mov
add
adc
push
or
rol
jge
push
dec
sbb
pop
inc
inc
jae
mov
int
in
xor
pop
pusha
and
jae
fidivrs
adc
jg
dec
and
cmc
mov
cli
imul
mov
adc
cmp
push
mov
scas
adc
jae
aaa
imul
sub
or
das
xor
xor
and
jmp
insb
shl
jecxz
sub
pop
cs
divb
ss
fcoml
inc
xchg
dec
inc
in
xchg
dec
pop
jl
movsb
fcos
mov
call
add
out
mov
jecxz
es
imull
mov
adc
shr
inc
outsl
call
pop
imul
fstl
jmp
jle
je
jo
add
sti
cmp
mov
add
lods
lret
call
and
call
push
std
xchg
jecxz
sti
int
loopne
xor
inc
std
pop
int3
push
jmp
pop
xor
imul
mov
xor
push
in
push
imul
jno
sahf
xchg
mov
and
jl
scas
movsb
jmp
xchg
pop
cmp
fisubrs
lock
std
sub
push
xchg
xchg
mov
jae
popf
add
or
addr16
adc
push
mov
stos
push
fildll
adc
sbb
outsb
ficomps
int3
sbb
lret
xor
add
lods
out
test
enter
mov
nop
fdivs
xor
outsb
cli
js
bound
fldt
movsl
fs
jae
std
lret
add
mov
mov
loope
jecxz
fistps
sbb
shrl
push
daa
push
or
inc
stos
jecxz
cmp
xchg
sub
mov
mov
gs
or
stc
jo
mov
sbb
push
inc
pop
lret
jb
mov
pop
add
or
mov
sub
pop
iret
mov
ror
testl
hlt
or
xor
lahf
jl
jo
lcall
fcmovbe
sbb
aaa
mov
mov
cmp
stos
xchg
inc
fwait
mov
cld
xchg
test
cs
aad
inc
push
xchg
data16
jmp
mov
or
mov
icebp
jae
mov
mov
pop
stc
cmp
pop
add
fmull
stos
push
inc
adc
aaa
mov
or
stos
sbb
cmp
xor
or
jbe
aad
or
adc
daa
dec
pop
std
repnz
fidivs
xchg
scas
inc
mov
push
lret
dec
lret
ljmp
inc
dec
push
cmp
sbb
notb
jae
iret
xchg
test
fnsave
jo
push
cmpsl
cmp
cwtl
sbb
mov
cmp
push
mov
jle
gs
add
push
push
inc
je
enter
sbb
stc
xor
mov
inc
idiv
cwtl
add
xor
outsl
sub
lret
dec
mov
in
push
fwait
jo
in
mov
sbbb
jge
inc
push
sahf
pushf
sbb
inc
mov
pop
cmp
push
or
hlt
mov
adc
sbb
jo
lahf
popf
subb
and
pop
mov
xor
add
in
fistl
test
cs
cld
pop
jecxz
cmp
lock
out
ljmp
add
xor
fdivrp
xchg
pushf
mov
sbb
jbe
cltd
test
mov
pop
sub
mov
icebp
out
push
insb
scas
out
lahf
push
sub
push
fsubrs
xchg
sbb
push
into
mov
fdivl
ljmp
jle
call
ja
cmp
mov
xchg
cmp
data16
fs
push
fs
loope
scas
jns
test
ficoms
lock
xchg
out
rcl
leave
cmp
inc
cmpsb
mov
mov
aam
aad
or
xchg
shlb
push
inc
inc
add
ds
lds
sub
lret
push
or
cmp
movsl
insl
add
mov
out
pop
hlt
xlat
out
iret
imul
mov
ljmp
jo
mov
stos
es
adc
xor
fcompl
sahf
icebp
in
mov
maxps
jecxz
mov
lods
dec
push
fnstenv
or
stos
jmp
mov
mov
out
cs
inc
pop
jno
jae
mov
mov
loope
out
fimuls
cmp
rclb
jbe
in
lcall
mov
mov
popa
xor
incl
cld
stos
adc
mov
jno
jae
dec
inc
mov
cmp
sub
dec
pop
inc
fimull
or
add
jmp
movsl
scas
inc
adc
test
insb
pop
and
arpl
lahf
out
outsb
mov
or
cmp
addl
or
inc
cmc
scas
sbb
or
and
popa
shl
mov
cmpsb
clc
aam
push
inc
add
cwtl
xor
xchg
mov
or
mov
jl
negl
xor
aad
add
jno
mov
mov
xchg
xchg
sbb
jnp
fstp
mov
pop
sub
int
push
mov
stos
mov
out
jl
idivb
xor
dec
daa
cli
ret
sub
jmp
jp
loop
lret
or
xor
sbb
pop
test
cwtl
xor
sahf
faddp
icebp
pop
data16
leave
lahf
push
mov
inc
out
call
mov
outsl
test
add
int3
xchg
cltd
inc
dec
data16
test
cmp
adc
jmp
sbb
fs
gs
adc
mov
cmp
sbb
jl
repz
push
add
popf
enter
aas
jg
push
dec
fsubs
cmc
inc
pop
shrb
pop
or
xchg
or
add
cmpsl
dec
pop
or
add
nop
push
mov
pop
mov
es
fisubrl
mov
or
in
jge
mov
jae
push
adc
and
scas
ds
test
test
push
and
fistps
shlb
xchg
push
ret
sub
dec
int3
and
frstor
lret
add
inc
jnp
adc
movsb
cltd
lcall
sub
push
call
mov
xor
lock
jmp
mov
andl
shll
inc
sbb
xchg
sub
lods
pop
add
jmp
fwait
xchg
pop
pop
cmp
xchg
pop
jo
xor
jno
pop
and
mov
pop
dec
inc
add
pop
and
divl
jae
les
orb
inc
sbb
pop
and
lock
rcrb
mov
add
adc
mov
fistpll
rcl
test
cli
mov
cwtl
adc
add
mov
jle
rorb
xor
xor
lcall
lods
jns
aam
push
roll
push
inc
in
dec
incl
jmp
dec
nop
enter
fwait
jge
adc
cmp
cmpsl
ret
aad
lds
sub
in
mov
mov
pop
fisttpll
mov
inc
into
mov
mov
dec
xchg
lds
mov
mov
test
pushf
cli
rcrb
push
mov
mov
cmpsb
mov
mov
and
add
jle
loopne
lea
add
pop
movsb
aas
push
leave
es
sbb
cmp
lods
nop
pop
jb
xchg
cmc
cmp
cmc
roll
arpl
sub
jle
jmp
imul
mov
fcom
ficompl
mov
pop
in
xchg
bnd
dec
lret
jp,pn
dec
push
cwtl
fucomi
xor
ja
insb
jle
sti
aas
jl
or
mov
pushf
loop
or
and
sbb
aaa
mov
test
insb
pop
add
out
aad
mov
and
sub
and
cmpsl
bound
insb
or
adc
pop
out
jns
ret
mov
jo
call
ljmp
inc
and
mov
into
scas
jmp
add
xchg
mov
fists
mov
push
mov
mov
enter
test
mov
mov
mov
imul
lods
insb
adc
or
cmp
in
adcb
dec
mov
push
and
mov
xor
bound
add
in
cmp
and
lods
lds
ljmp
pop
push
stc
inc
pop
sub
push
bound
sub
pop
mov
out
out
sbb
dec
test
pop
je
enter
jns
or
loope,pn
push
lds
mov
mov
push
shlb
fs
out
adc
pop
mov
loopne
cli
push
int
xor
pop
out
push
dec
addr16
gs
cmc
sbb
mull
mov
sbb
aas
add
mov
std
jg
push
mov
fs
aas
pop
lods
loop
xchg
xor
adc
mov
push
insl
inc
xchg
dec
pop
pop
add
adc
lahf
pop
fwait
inc
mov
inc
push
mov
gs
cmp
xchg
test
push
and
lds
lcall
daa
sbb
in
testl
je
pushf
in
jo
mov
aam
adc
fdivl
fildll
in
adc
add
jp
sbb
and
xor
and
fstpt
imul
enter
cwtl
jecxz
xchg
and
adc
add
push
mov
or
jmp
call
or
lea
adc
adc
jmp
addb
nop
stos
mov
ss
nop
test
mov
mov
mov
xchg
inc
add
int3
shlb
fwait
mov
add
mov
out
xor
rclb
mov
test
fcmove
pop
aad
xor
or
or
jge
lea
popa
jns
jo
mov
push
test
push
adc
adc
add
sbb
dec
test
data16
lahf
xchg
push
sbb
sbb
mov
popf
mov
fwait
pop
sub
jae
push
lods
pop
xchg
mov
in
mov
push
cwtl
pusha
outsb
lret
add
movl
mov
jle
iret
lock
push
sbb
jb
loope
dec
mov
mov
out
fwait
mov
scas
and
xor
pushf
xchg
cmp
mov
mov
sub
ss
sub
fsubp
loop
add
aaa
and
fimull
xchg
push
cmpsb
pop
mov
xchg
xor
insl
fisubrs
mov
lods
sar
pop
inc
das
pop
repnz
xor
pop
in
dec
jge
ret
jo
repnz
cli
cmc
xchg
nop
mov
inc
popa
insb
daa
mov
jecxz
inc
adc
ja
mov
mov
xchg
or
movsl
pushf
jp
shll
insb
les
inc
or
stos
aam
xorl
ljmp
leave
cmp
or
mov
or
jmp
popf
std
jp
repnz
add
xor
dec
mulb
shrb
std
adc
cmpsl
jnp
test
loope
daa
xor
enter
fwait
add
jo
fcoms
push
mov
inc
sbb
pop
cmc
xor
xor
inc
loopne
pop
in
sub
mov
pusha
pop
aad
push
push
loopne
sti
mov
leave
or
or
lods
push
push
jp
stos
cmpsb
sti
incl
mov
or
xchg
cmp
lods
into
clc
mov
call
mov
sbb
sbb
aaa
xor
push
xor
pop
pushf
daa
cltd
hlt
aaa
or
fwait
cmp
mov
or
adc
cmp
add
dec
adc
sub
add
and
cmpsl
xorl
cmp
inc
aas
daa
dec
enter
jnp
fidivrs
sbb
mov
popa
jae
lock
pop
fdivrs
in
mov
xor
mov
arpl
sahf
lods
pop
mov
out
pop
or
fisubrs
lret
lds
xlat
imul
cmc
jge
lahf
fcomps
test
sub
sahf
mov
loopne
test
out
popa
loopne
adc
test
sub
jmp
int3
cmc
jbe
ret
adc
nop
inc
jg
movsb
xchg
add
jg
cltd
pop
loope
mov
inc
repnz
cmp
movsl
loope
sbb
push
std
repnz
out
rorb
fdiv
ja
lods
cld
add
inc
mov
je
cmpb
data16
cmp
adc
inc
pop
adc
sub
dec
orb
cli
push
adc
repnz
inc
outsl
nop
je
data16
bound
neg
scas
mov
mov
out
les
fsubl
jne
arpl
mov
out
js
push
adc
pop
pop
je
or
and
or
mov
cmp
sub
fistpll
xlat
inc
inc
xchg
push
nop
xchg
sbb
lret
push
iret
or
pop
mov
sbb
xchg
stos
pop
popa
mov
hlt
mov
pop
arpl
in
loopne
sbb
fists
cmpsb
das
in
fsubrs
pushf
xchg
mov
sbb
lahf
cltd
je
ficoml
js
hlt
inc
or
mov
mov
stos
or
sub
imul
popf
mov
jge,pt
xchg
out
insb
stc
xor
cltd
ljmp
in
pop
test
pop
lock
push
fnsave
and
fidivl
mov
test
cmpl
jno
xor
and
pop
jns
cmp
popa
inc
jmp
cmp
sub
jbe
or
lcall
cld
inc
test
bnd
in
sub
jno
dec
mov
add
mov
add
inc
sbb
jb
adc
scas
into
out
daa
mov
or
cmp
jb
loopne
test
int3
xchg
clc
mov
lods
aam
iret
fistl
or
cli
mov
cli
jle
in
mov
pop
inc
cmp
inc
xor
lock
adc
jnp
out
adc
sub
fisttpll
out
cli
jno
stc
idivb
testl
outsl
dec
xchg
jns
xlat
and
push
adc
dec
in
test
add
subl
mov
test
add
les
cli
pop
scas
push
xchg
test
and
scas
sbb
out
sub
jl
in
ljmp
push
dec
add
jbe
xchg
cltd
rcl
mov
jo
push
sbb
xchg
cmpsl
popa
stos
xchg
je
mov
iret
in
int
cwtl
mov
jnp
and
cmp
cwtl
pop
push
fistpll
ss
out
cmp
or
xchg
and
pop
ret
jmp
fs
sbbb
insl
addl
add
mov
sub
mov
jnp
fdivl
fbld
repz
add
sbb
bnd
stos
add
cmc
xlat
xchg
adc
push
jb
mov
sbb
mov
int
pop
into
hlt
add
mov
dec
push
inc
dec
and
sbbb
subb
out
je
lahf
dec
push
inc
mov
cmp
push
adc
sbb
inc
jb
ret
mov
push
xchg
jns
sbb
mov
xorb
jb
lock
xchg
sub
fs
imul
push
mov
jp
dec
or
push
fsts
lret
imulb
adcb
out
inc
push
or
lds
jecxz
pop
clc
xor
dec
push
xchg
loop
add
inc
mov
scas
js
pop
lret
xor
adc
ss
out
popa
mov
push
call
inc
mov
lahf
lods
cmp
addr16
jecxz
jae
inc
dec
fnsave
aam
fmull
cmpsb
mov
rcr
xchg
xchg
aaa
cs
ret
add
push
cli
pop
outsb
mov
divl
and
andl
add
cmp
sbb
mov
and
sub
sti
ret
and
xor
lret
jbe
btr
sbb
scas
pushl
dec
or
adcb
mov
inc
stc
jnp
in
repz
or
leave
mov
pop
cmpsb
sar
mov
mov
mov
sbb
aad
lcall
xor
jne
lret
test
lret
dec
into
popa
add
or
mov
popf
xchg
cmpsb
aaa
lcall
dec
dec
movb
push
push
int3
lcall
jg
xchg
cwtl
pop
fisubs
push
cmp
mov
fsts
sub
scas
out
sbb
xlat
cmp
or
and
mov
out
jns
neg
adc
or
int
jp
repnz
mov
inc
ds
movsl
mov
cld
out
mov
xchg
pop
mov
jl
insb
int
pop
fildll
cmpsl
test
int3
xlat
jle
adc
mov
jno
push
mov
ja
and
test
pop
mov
leave
mov
icebp
mov
mov
jecxz
sbb
mov
fdivl
cmp
push
jo
enter
fidivrl
stos
fcmovu
bound
fidivrs
data16
fwait
pop
jo
add
jbe
pusha
es
out
push
hlt
loopne
mov
shll
into
imul
icebp
vpsubd
je
fidivs
mov
scas
or
cmpsl
mov
ret
bnd
add
xor
hlt
in
mov
push
in
clc
add
pop
into
icebp
out
mov
andl
fmuls
call
sbb
cmc
cs
test
sub
xor
mov
mov
dec
dec
sub
js
addl
mov
dec
pop
jo
sbbl
push
inc
cmpsb
mov
ljmp
xorl
lea
pop
repnz
adc
loop
mov
test
aaa
imull
bound
cmp
cli
add
sti
dec
sarb
pop
mov
fcoms
xlat
jecxz
gs
orl
add
lock
adc
arpl
sub
xchg
icebp
mov
mov
mov
bound
pusha
jnp
out
repz
out
mov
cs
jl
mov
add
mov
in
mov
mov
cmc
inc
outsl
les
sbb
mov
mov
les
sbbl
ja
sub
push
aas
xorb
jge
push
gs
in
lret
es
push
mov
and
push
shll
in
call
mov
adc
add
lods
filds
out
push
pop
pop
pop
or
mov
test
mov
gs
push
xor
mov
adcl
lahf
lods
popf
jbe
aad
add
cmp
shlb
enter
cmp
push
pop
data16
cli
fstp
mov
shrb
mov
das
movsb
test
mov
jp
push
scas
inc
jnp
adc
repnz
dec
je
lods
push
mov
xchg
daa
add
sbb
mov
loope,pt
push
pop
mov
sbb
cmp
inc
rcr
aam
pop
mov
adc
pop
outsl
mov
lods
xor
lahf
sti
sbb
aas
jg
testl
push
inc
sahf
arpl
mov
inc
xlat
out
jo
sbb
xchg
loope
and
xor
jmp
out
pop
out
cmpsl
sbb
xor
mov
pop
mov
sub
inc
mov
ret
cld
scas
test
mov
push
xchg
mov
les
mov
mov
mov
add
test
mulb
mov
std
aam
lods
leave
clc
ficoms
outsb
or
dec
mov
into
mov
cmp
arpl
stos
aaa
xchg
test
daa
pop
jg
xor
cmp
add
xchg
lahf
movsl
dec
push
clc
popf
iret
pushf
cwtl
daa
add
shll
pushf
in
cmp
mov
insl
jb
inc
push
add
jo
lods
sub
add
jle
negl
test
lret
adc
out
push
mov
cmpsl
sbb
std
aad
addr16
mov
mov
and
cmc
test
aaa
cmp
movsb
add
mov
xlat
sub
jno
cwtl
sbb
nop
addb
mov
cmpsl
mov
mov
in
sub
frstor
setnp
daa
ds
cwtl
cmp
fs
xor
or
xor
adc
sub
clc
cmp
or
ja
cmp
lahf
sub
das
or
adc
fmuls
xchg
jmp
dec
mov
insb
in
mov
aad
xchg
fisubs
outsb
and
xor
std
inc
fiaddl
add
scas
pushf
pop
or
sbb
mov
lock
jbe
dec
out
fld
nop
adc
sbb
jno
push
mov
mov
adc
dec
jbe
leave
jle
or
pop
in
fld
pop
outsb
rep
inc
stc
in
and
scas
dec
sbb
sub
test
and
sub
std
xchg
xchg
push
jbe
popa
cmpb
inc
mov
arpl
stos
movsb
mov
dec
inc
jae
mov
jp
frstor
ret
in
idivb
ror
cmp
mov
stc
aad
pop
ljmp
rol
sbb
inc
mov
adc
scas
fs
lds
stc
xor
pop
fnstenv
and
dec
and
xchg
hlt
mov
mov
mov
scas
mov
or
pop
add
xor
fimuls
adc
and
mov
add
dec
cmpsl
mov
lcall
sub
sub
sbb
inc
pusha
fidivl
sbb
loop
mov
insl
xchg
dec
int3
mov
xchg
inc
gs
inc
jo
mov
sarb
ds
cmp
je
mov
mov
movsb
pop
rcr
pop
mov
push
jg
and
pop
and
inc
loop
add
lock
aaa
ret
xchg
cwtl
addr16
aam
or
sahf
enter
add
mov
in
dec
xchg
add
in
and
add
jae
fnstcw
std
xor
adc
mov
mov
xchg
std
pop
faddl
hlt
jmp
mov
ja
push
xor
xchg
cmp
cli
jbe
outsl
mov
test
sbb
inc
cmp
or
mov
lods
out
and
sub
orl
ss
cli
pop
sbb
push
sub
dec
pusha
ret
adc
fwait
daa
mov
cmp
dec
sbbb
inc
mov
dec
mov
sbb
pusha
orb
and
xchg
mov
iret
cld
shlb
xchg
call
shr
or
sbb
js
aaa
and
push
cwtl
movsb
xchg
mov
mov
js
sbb
sub
bound
add
lahf
push
adc
sub
sti
inc
sub
cmc
pop
inc
sahf
push
mov
pop
or
inc
es
nop
inc
cli
sbbl
insl
push
dec
cvtps2pd
pop
and
adc
push
dec
shll
xlat
in
jns
addl
jnp
repz
and
mov
stos
imul
je
inc
stos
int3
cmc
loopne
jle
push
fidivrl
pop
into
cmpsb
cmpsl
sti
je
push
add
add
and
popf
movsb
push
daa
fdivrl
push
jae
cwtl
adc
cmc
fisubs
gs
cwtl
xchg
and
xor
inc
in
sbb
call
fdivp
pusha
add
call
mov
jle
cmp
inc
daa
or
jno
in
jge
int3
jne
loopne
cmp
mov
gs
icebp
cmpsb
notb
jge
int
push
sbb
or
in
push
mov
cmpsl
pop
and
cmp
repz
push
sbb
add
mov
or
adc
cmp
shrl
adc
mov
ret
add
aaa
stc
scas
xor
push
push
rep
mov
bound
pop
mov
mov
mov
lea
add
lods
mov
sub
mov
test
aaa
lret
es
lods
pop
outsb
fwait
or
sbb
leave
enter
bnd
mov
mov
mov
dec
push
fs
xlat
or
cwtl
xor
jbe
dec
jae
xor
sbb
and
lret
fcoms
mov
cld
and
dec
lret
xor
mov
test
xchg
ret
fiaddl
and
add
mov
mov
test
xchg
out
inc
in
aaa
cli
hlt
loop
xchg
jnp
test
sarl
jecxz
jp
mov
sarl
push
xchg
mov
jle
call
fiaddl
add
sbb
mov
out
ds
and
cmp
push
inc
addr16
adcl
xchg
out
adc
imul
ljmp
fcompl
insl
sub
fmull
pop
aam
mov
call
cvtps2pd
jne
out
fs
xchg
ficoml
cmpsl
dec
loope
add
stos
mov
adc
int
pop
out
stos
pop
sar
add
push
in
nop
loop
outsb
in
push
ret
lahf
lea
xchg
sbb
add
xchg
xrstors
fstl
test
sub
push
inc
imul
imul
ds
and
jge
aaa
mov
cwtl
jo
and
mov
ret
sbb
stc
and
lcall
rorl
stc
mov
shlb
or
ret
outsl
subl
test
sbb
out
mov
cwtl
sbb
dec
add
test
enter
fisubs
mov
dec
pop
mov
pop
insb
pop
cwtl
lret
popa
pop
aas
mov
or
lods
sub
call
cmp
dec
aad
inc
lcall
adc
push
leave
or
outsb
cmpl
cmp
jne
and
in
clc
lahf
rcrb
das
sub
xorl
push
mov
and
in
ss
sbb
sti
add
sbb
ja
mov
iret
cmp
stc
out
fwait
mov
mov
cmp
mov
cmp
lcall
mov
dec
pusha
scas
or
cli
mov
insl
cwtl
dec
inc
test
cmpsb
sbb
js
stos
stc
imulb
and
xlat
adc
int3
mov
mov
lock
inc
ss
xlat
outsl
test
enter
mov
in
jnp
lods
shlb
jecxz
out
cmc
mov
pop
shll
lds
fwait
popf
fcoms
sbb
jne
decl
out
enter
pop
pop
pushf
fmuls
xchg
jno
sti
daa
subb
mov
movlps
inc
insb
fucomp
pop
jo
jo
test
sbb
aad
inc
loopne
std
and
jns
in
shl
leave
jo
inc
insb
sbb
fs
jnp
loop
mov
adc
das
push
push
mov
insl
test
cmpb
xlat
test
les
nop
xchg
xchg
add
or
shrl
add
adc
xchg
in
popf
dec
movsb
inc
or
test
sbb
jo
sub
mov
loope
lcall
mov
inc
popf
mov
cmpsl
hlt
into
loopne
sahf
sbb
lock
pusha
adc
lret
adc
push
fldt
stos
leave
in
out
fidivrl
mov
cmpsb
sub
fldcw
scas
sarb
adc
mov
lods
scas
bound
dec
in
mov
or
int3
xchg
dec
dec
sub
testb
sbb
mov
adc
aad
addr16
outsl
sahf
mov
mov
int
out
je
sub
loope
mov
cmp
add
int3
popa
push
scas
xor
fs
fistps
jecxz
push
in
mov
shl
fists
out
jb
fisttpll
adc
pop
icebp
sbb
scas
loop
je
pusha
mov
xchg
sub
xor
in
mov
cwtl
and
mov
sti
mov
adc
xchg
icebp
pop
loop
pop
inc
jno
or
addr16
adc
int
ret
mov
test
lret
js
shll
push
and
mov
cmp
mov
aam
mov
lds
jg
in
movsb
inc
sub
pop
scas
lods
mov
xchg
push
daa
dec
push
sbb
sub
push
rep
pop
or
push
pop
je
xchg
daa
jmp
inc
clc
daa
xor
inc
pop
lock
std
in
adc
adc
fimuls
cwtl
pop
cmpsl
lahf
or
push
mov
xor
mov
js
leave
adc
cmpsl
fists
mov
cs
movsl
jle
insb
jbe
and
fistpl
mov
mov
loopne
fwait
out
jne
les
xchg
fists
repz
and
sahf
in
das
stc
xchg
push
mov
lds
and
mov
loop
out
std
push
pop
sbb
xorl
cs
lahf
scas
dec
stos
mov
sbb
mov
inc
dec
out
push
jbe
clc
xchg
in
pop
xor
xchg
mov
cltd
scas
sbbb
cmpsb
mov
in
and
out
movsl
cs
lock
fstp
fucomi
dec
and
fstps
cmpsl
int3
xor
mov
mov
js
fcompl
pop
mov
pop
or
sbb
adc
cmp
into
daa
leave
add
mov
pushf
mov
sbb
mov
xchg
dec
icebp
mov
jecxz
repz
stos
ret
outsl
ret
ffree
jle
sub
out
and
and
je
mov
sqrtps
sbb
jmp
cs
rcrb
dec
je
push
rcll
fmuls
and
rorb
clc
test
xchg
scas
imul
fcoms
aad
nop
pop
lret
xor
mov
pop
sti
cmp
faddp
pop
or
arpl
jp
mov
test
sarb
push
jmp
or
push
pop
sbb
jbe
imul
and
adc
adc
xchg
ret
stc
adc
jmp
mulb
hlt
sub
pop
or
sbb
xchg
or
adc
pop
ss
jle
into
dec
shr
out
and
jg
xchg
mov
ljmp
or
sub
push
inc
test
iret
pusha
adc
iret
sbb
and
sub
cmp
jmp
popa
cwtl
mov
pop
stc
add
mov
add
pop
negb
lret
mov
enter
mov
aas
lods
xor
dec
or
shrl
insl
and
test
mov
mov
pop
inc
xchg
xlat
mov
jge
mov
or
test
adc
aad
sahf
xor
sbb
insl
jne
and
add
fcoms
and
xchg
dec
int3
push
adc
adc
add
je
ret
aam
pop
bound
push
jmp
popa
inc
stc
pushf
jnp
loop
cmp
sub
dec
mov
jge
add
cmp
cmpsl
sub
xorl
push
out
mov
fsub
or
pop
in
pusha
lods
lcall
jnp
sbb
sahf
das
jl
mov
push
jle
test
mov
and
out
in
cwtl
out
jb
and
mov
sbb
dec
cmc
xchg
mov
or
rcll
bound
lods
dec
dec
mov
push
ret
and
xchg
sub
scas
leave
push
xor
jge
sbb
cwtl
pusha
push
sti
addl
cwtl
xorb
push
arpl
test
loop
and
imul
fbstp
in
or
or
mov
shl
dec
xor
popf
jbe
add
or
sbb
ljmp
or
push
scas
dec
pop
into
js
push
mov
mov
aad
fisubl
fldt
sti
shll
xchg
in
jns
dec
cmc
scas
adcb
xchg
ja
mov
cmp
jb
xchg
pop
sub
inc
rclb
lds
notb
xchg
xchg
pop
aas
nop
xchg
lds
fwait
xor
adc
mov
and
push
loop
mov
jne
jecxz
mov
xor
lcall
imul
mov
xor
lods
jno
test
icebp
fcomps
movsl
jno
fsubrs
mov
in
cmp
xor
hlt
push
mov
addr16
push
mov
pop
add
xchg
mull
inc
test
mov
mov
mov
int
push
jno
popa
data16
push
call
jbe
test
cmpsl
je
loopne
push
xor
jbe
sti
scas
js
inc
push
cli
or
jmp
push
vmulps
xchg
fidivs
bound
jo
or
add
inc
xchg
hlt
sbbl
or
sub
lahf
mov
lahf
inc
call
mov
sbb
cmc
sbb
pop
xchg
movb
daa
enter
shll
or
pop
out
hlt
cwtl
sub
mov
mov
jl
jg
out
push
repnz
cwtl
outsb
inc
adc
jmp
adc
dec
inc
pop
loope
push
ja
jecxz
hlt
and
in
sbb
iret
call
jp
outsl
sub
sbb
std
jns
or
add
mov
insb
pop
gs
sub
arpl
out
cmpsb
add
push
sete
hlt
xor
outsb
xor
fiaddl
jns
sub
inc
push
data16
push
mov
daa
or
fsubrl
pop
out
pop
shlb
bound
fsubr
pop
mov
xchg
and
mulb
mov
add
dec
cmc
xchg
xchg
les
mov
mov
scas
pushf
mov
pop
nop
or
in
sbb
iret
mov
dec
add
jmp
xor
hlt
adc
popa
imul
mov
insb
inc
cmpsb
xlat
roll
mov
loopne
sahf
push
aaa
cs
pop
pop
pop
push
repz
pop
out
js
dec
xorb
test
xchg
repnz
dec
adc
sbb
jmp
stos
cmp
pop
or
jl
movsl
sbb
cmp
test
mov
jmp
hlt
movsb
sbbl
ficoms
mov
hlt
dec
xchg
xlat
mov
xchg
bound
cmp
nop
shrl
lock
shr
in
pop
sbb
and
mov
jae
aam
pop
movsb
dec
cwtl
push
xor
je
jno
das
movsb
aad
mov
addr16
bound
and
xchg
xchg
insl
push
and
lock
ss
cmp
mov
xchg
test
insb
jno
pop
jo
leave
stos
icebp
xor
adc
jmp
mov
adc
mov
out
imul
push
outsl
pushf
jmp
test
sti
and
xchg
in
ja
out
pop
rcr
jmp
xor
xor
jbe
fldcw
push
cmc
xchg
pop
movsb
dec
lahf
xchg
pop
jno
je
icebp
push
loop
cmpsb
rcrb
mov
pop
ja
test
and
mov
mov
insl
scas
sar
mov
adc
mov
lods
sbb
jg
mov
les
popf
push
pushf
adc
inc
lods
jno
mov
xor
or
idivb
jbe
cmp
pop
mov
jno
mov
sbb
out
xor
ret
sbbb
enter
mov
pop
idivb
xchg
in
xchg
or
or
hlt
repz
lods
adc
jb
scas
cmp
fcoms
jno
das
out
mov
rorb
add
mov
imul
inc
ret
mov
imull
aas
test
xchg
lods
mov
bound
sbb
push
sub
dec
les
bsr
std
in
push
out
or
adc
in
popl
fucomp
jmp
push
inc
mov
lds
jmp
xchg
sub
mov
ficomps
jl
cmpsl
iret
and
jmp
sub
pop
pop
out
mov
xchg
fnstsw
jno
pop
cmp
test
mov
mov
push
or
je
sub
lds
adc
es
test
pop
dec
nop
push
adc
movsb
jmp
je
and
andb
pop
xchg
arpl
ds
popa
mov
lea
pop
sub
sub
in
pop
push
pop
xlat
inc
sti
and
aaa
add
sbb
sub
aaa
pop
test
xor
loope
cmp
push
jne
shll
sub
movsl
pop
ljmp
ds
insb
mov
cmp
aad
push
mov
cmpsb
scas
int3
xchg
into
or
arpl
and
sti
mov
scas
mov
push
inc
adc
inc
addr16
jo
cmp
aas
push
test
decl
inc
pop
clts
outsb
sbb
xchg
inc
xlat
pop
aam
rcrl
pop
pusha
push
out
out
pop
std
adc
push
pop
mov
pop
je
andb
rcrb
mov
or
mov
xchg
jge
jno
mov
lods
push
test
inc
shll
shrl
jp
dec
jl
mov
inc
popf
aaa
enter
call
dec
insb
lods
push
addr16
cs
pop
or
js
dec
push
mov
sub
fdivrs
fcomp
mov
das
popf
lods
and
rorb
mov
sahf
fstps
aas
push
or
adc
pop
pop
pop
js
inc
test
das
xchg
leave
mov
test
test
test
sbb
ss
sbb
sbb
jbe
mov
ljmp
subb
das
movsb
std
pop
stos
popl
pop
cmp
repz
lods
mov
push
cwtl
sub
andl
fsubs
mov
push
mov
sbb
adc
andl
push
jbe
dec
jno
imul
fldl
push
add
leave
push
scas
and
push
dec
pusha
cld
inc
adc
pusha
mov
jg
sub
sub
inc
inc
push
out
cld
les
aad
arpl
cmp
add
jmp
iret
xor
loopne
bound
xchg
push
mov
jne
enter
mov
fisttpll
mov
xor
or
or
lds
fnstenv
pop
xchg
aas
or
in
push
shll
or
cmp
dec
pop
scas
mov
sub
push
divl
adc
mov
push
into
cmp
mov
enter
sub
lock
js
call
es
pop
test
push
add
cmp
sbb
fwait
sbb
cmpsl
push
das
jae
stos
push
dec
fists
cld
mov
into
lahf
jno
xorps
mov
dec
idivl
dec
dec
repnz
push
mov
outsb
cmp
mov
xchg
daa
xchg
push
out
dec
add
scas
enter
lds
adc
mov
lret
int3
pusha
sti
ret
shll
add
mov
dec
inc
xchg
mov
dec
jp
mov
cltd
mov
or
insb
ret
pop
sub
mov
rorb
mov
mov
icebp
gs
lods
adc
fcmovb
out
inc
xor
and
lock
lea
push
or
mov
or
adc
dec
push
dec
leave
fwait
inc
mov
mov
xlat
cmp
sbb
push
nop
das
sub
lods
nop
fwait
mov
in
ret
out
xchg
jmp
enter
mov
dec
repnz
pusha
or
mov
pop
mov
cmp
stos
mov
lock
xor
ja
repz
insb
in
je
jge
xor
cmpsb
or
test
pop
loopne
loope
mov
jmp
and
pop
cmp
xor
dec
test
jge
jnp
loopne
das
mull
shll
enter
jle
arpl
adc
xchg
stos
push
mov
push
xchg
into
jge
jl
hlt
push
add
ja
xchg
sti
daa
lods
addr16
lea
in
add
mov
jecxz
sbb
xchg
cmp
mov
mov
inc
mov
shll
bswap
xchg
push
lods
push
mov
addr16
or
aaa
mov
push
outsl
and
loop
xchg
jbe
push
in
mov
arpl
ret
inc
pop
in
add
test
mov
pop
mov
cli
push
insl
pop
dec
adc
jge
lock
in
cmp
mov
rcll
insb
leave
data16
ret
test
rcr
lea
data16
dec
fcom
or
mov
cmp
mov
repz
jno
and
inc
fldcw
add
jg
aam
int
inc
gs
stos
sub
dec
adc
and
fldl
ret
pop
dec
adc
and
cmp
jmp
mov
nop
bound
pop
push
mov
mov
loope
je
pusha
lret
cmp
inc
mov
fucomp
add
mov
outsl
mov
add
ret
inc
inc
adc
sub
mov
cs
xchg
popa
push
push
inc
notb
incl
mov
mov
leave
xchg
and
les
aas
sti
xchg
adc
sbb
cmpsb
xchg
movsb
mov
xor
dec
in
adc
lock
push
xchg
xor
push
or
mov
adc
sahf
sbb
lods
mov
lahf
pop
and
inc
mov
decl
enter
jg
js
pop
lret
xchg
mov
test
mov
out
xor
fs
enter
push
addr16
mov
into
adc
ret
fildll
sbb
movsl
in
out
adc
adcl
add
and
cs
es
aaa
mov
inc
pop
cld
sbb
add
lock
loop
pop
ljmp
add
fwait
leave
inc
mov
xchg
sub
add
lock
mov
addb
shr
aad
lods
aad
cmp
adc
and
sbb
xor
stos
sub
jo
dec
add
jno
movsb
push
adc
idivl
xor
je
cmpsl
inc
and
mov
inc
sbb
lods
adc
mov
aam
xchg
inc
or
lods
xlat
inc
dec
push
int3
inc
jle
fwait
aam
xchg
mov
or
xchg
repnz
fildll
push
pop
sub
out
arpl
repnz
rclb
stos
sub
or
xorl
mov
nop
cli
add
lahf
jl
into
or
or
mov
scas
or
aaa
dec
arpl
add
push
push
out
daa
ret
cld
in
lret
jmp
subl
lret
sbb
xor
mov
xor
jg
int
push
adc
sbb
adc
mov
inc
push
mov
imul
fcomps
fldenv
cmp
dec
lahf
jns
stos
jg
push
test
dec
cltd
ret
dec
sbb
out
fdivl
stos
ret
inc
mov
insl
jo
rolb
or
es
bound
adc
xor
or
sub
sub
fldl2t
js
add
repz
xchg
out
pop
test
data16
pop
pop
and
das
inc
fcomps
cmp
std
ljmp
adc
sub
ja
xchg
sbb
dec
lods
or
fdivrs
rcrl
rcl
jge
mov
jae
xlat
xor
xchg
fsubrs
dec
lods
das
xchg
lock
ljmp
idivl
out
repz
xchg
testb
mov
xor
xor
or
mov
push
cmpsl
mov
or
fstps
scas
cwtl
sbb
sarb
push
and
sbb
jmp
cmp
and
xor
loop
leave
dec
outsb
adc
dec
in
int
imul
insl
out
in
push
aam
or
mov
inc
fisubrs
push
andb
ss
mov
cmp
lahf
push
mov
mov
dec
xchg
xlat
xchg
sub
dec
cmp
dec
ljmp
test
xor
js
in
outsb
fs
fstpt
dec
push
and
inc
insb
xor
dec
enter
xchg
mov
push
insb
pop
fmuls
stc
jb
pop
mov
in
xchg
sbb
jmp
adc
ficompl
in
out
sbb
gs
inc
and
add
leave
je
jne
mov
mov
push
jo
mov
test
outsb
push
repnz
dec
sub
test
out
pop
pushl
pop
jbe
cmp
lods
inc
cmp
and
jne
cmp
cmp
xor
adc
and
sbb
mov
fbld
pop
ss
push
push
out
popa
std
inc
add
dec
es
add
pushl
push
test
sub
pop
dec
data16
and
adc
sbb
stos
in
xlat
fs
mov
cmp
jmp
gs
mov
inc
sub
push
outsl
in
pusha
sbb
iret
in
sbb
fnstcw
inc
jle
ljmp
pop
addr16
fisubrl
xor
mov
cltd
inc
xor
ret
nop
cmpsb
adc
xorl
insl
sbb
dec
cmc
xor
mov
add
in
fdivrl
push
fisubrs
stos
add
test
test
mov
and
ljmp
fs
test
jno
mov
jns
in
cmpsl
mov
jg
push
insb
out
les
cwtl
jl
sbb
in
xor
std
mov
xor
insb
cmp
mov
imull
cmc
xor
pop
cmp
dec
mov
push
repnz
imul
std
gs
pop
xchg
popf
inc
mov
in
push
fcmovne
pusha
jg
or
sarl
aam
inc
pop
pop
sahf
mulb
xchg
imul
cli
aaa
in
push
movsb
mov
lods
adc
fcomp
push
insb
les
ljmp
mov
mov
stc
or
nop
cmc
cli
add
cmp
jl
adc
lret
sub
mov
fidivs
sub
ss
pop
outsl
sbb
sub
imul
test
push
dec
mov
adc
arpl
jbe
add
imull
mov
adc
xchg
pop
aas
nopl
inc
add
jecxz
ret
xor
adc
mov
das
in
or
fs
xchg
pop
xor
push
movsb
lret
call
xor
push
sbb
mov
in
add
int
into
movb
jae
ljmp
push
cmp
and
push
cmpsl
ret
and
sub
push
fisttpll
sub
fwait
mov
loop
dec
sub
inc
or
inc
mov
repnz
ret
cmp
inc
jmp
mov
into
scas
xchg
pop
imul
into
xchg
mov
add
adc
adc
sbb
jbe
dec
mov
cli
xor
inc
jmp
movsl
minps
mov
xor
push
insl
out
outsl
sub
mov
into
fs
cld
fucom
dec
stos
inc
lods
inc
movsl
loop
out
das
out
fisttpl
fists
jo
push
cmc
sbb
cmp
dec
gs
mov
mov
outsb
pop
mov
xchg
out
cli
popa
and
and
imul
loopne
iret
jb
pop
sub
repz
lock
push
rol
dec
aas
xchg
jl
aaa
jl
mov
sti
in
fldl
out
sbb
sbb
jg
aas
mov
sub
movsb
pop
scas
loope
subl
popf
dec
mov
xchg
pop
loope
loopne
jno
out
out
or
lret
adc
mov
push
jb
std
jo
and
mov
jne
add
mov
pop
sbb
shrb
add
or
std
pop
xchg
and
or
mov
push
inc
in
xor
sti
mov
lcall
lahf
xor
ficoms
repz
iret
or
test
es
mov
rclb
jle
cmpsb
inc
dec
adc
inc
out
out
pop
orl
js
mov
jns
inc
cmp
mov
xor
std
aad
jg
shr
fmuls
xchg
lcall
mov
adc
or
jo
mov
mov
cmp
ret
sub
aaa
fcompl
push
mov
mov
inc
addr16
lahf
ljmp
cli
inc
cmp
xlat
scas
jno
lea
xor
std
shlb
orb
cmp
push
jmp
rclb
cmp
in
cmpsb
adc
mov
cmp
pop
sbb
lods
mov
ficomps
hlt
pusha
mov
rclb
sbb
leave
push
sub
loopne
xchg
das
adcl
xchg
addr16
and
push
pop
hlt
fildl
push
xlat
and
out
add
jns
xchg
aas
fwait
movsl
mov
inc
dec
adc
lret
orl
sbb
push
and
aad
pop
mov
cs
jbe
jge
dec
dec
xchg
jle
inc
jns
fwait
mov
fimuls
dec
add
mov
enter
add
shl
and
adc
shl
xor
fimull
push
mov
xchg
jb
or
jmp
or
ss
cmp
lcall
lods
outsb
adc
cs
popa
adc
inc
inc
sbb
jmp
aad
lock
mov
cmp
loope
testb
sub
xchg
jmp
jge
mov
mov
arpl
xor
push
or
es
dec
rolb
adc
in
xchg
stos
and
pop
xchg
adcl
sbb
mov
inc
addl
movb
mov
jmp
cltd
popa
ss
aas
into
cs
sub
into
lods
mov
std
mov
mov
dec
insb
aad
sub
mov
daa
pop
inc
push
ret
sub
push
sbb
jmp
jp
mov
jp
add
icebp
inc
sahf
notb
or
inc
cld
stc
repz
addr16
mov
sub
or
outsb
aam
inc
dec
popa
pop
xchg
test
cmpsb
or
push
lcall
jmp
pop
scas
and
mov
fldl
repnz
roll
fcomip
sub
inc
cmpsb
addr16
ljmp
lea
add
mov
ret
imul
cli
inc
stos
sub
cld
jno
xor
ss
int
stc
insb
je
leave
dec
jmp
aad
aaa
mov
into
ret
mov
pop
leave
mov
jmp
cltd
mov
adc
scas
ljmp
fsubrs
inc
pop
push
insl
shr
int
call
jnp
mov
cmpsb
pop
imul
in
xor
mov
or
daa
int
icebp
pop
andl
js
sub
sub
jmp
ret
dec
mov
push
mov
cli
or
cmp
sub
mov
call
cli
xchg
push
clc
xchg
fldenv
cmp
lret
pop
aaa
mov
addr16
mov
fwait
pop
sbb
push
scas
mov
pop
push
mov
dec
add
jns
dec
mov
mov
jle
inc
jbe
and
inc
mov
lcall
mov
dec
mov
xchg
pusha
and
adcb
or
cmp
out
cli
or
shl
pop
fldenv
popa
mov
cld
stc
adcl
and
lret
in
int
cmpsb
jmp
dec
fldcw
sub
push
in
sahf
adc
adc
rdtsc
and
add
cmpsb
into
and
scas
or
sub
cmp
sarb
or
test
loop
arpl
in
nop
popf
xchg
push
jbe
movsl
sbb
mov
jl
icebp
les
imul
pop
mov
or
aad
push
xlat
sbb
dec
ja
imul
mov
adc
jo
add
adc
lods
js
sub
sub
jns
lcall
add
mov
xchg
lea
jle
pop
cmp
mov
cmp
pop
pop
dec
mov
jbe
xchg
add
lock
push
fdivl
rorb
pop
push
jge,pn
loop
cmc
push
push
aaa
hlt
dec
sbb
das
insb
mov
cmp
jecxz
fwait
es
pusha
dec
in
jne
mov
arpl
cmp
and
inc
xchg
fwait
arpl
mov
pop
sbb
rclb
cld
mov
jmp
popf
xchg
or
cmpsl
shrl
lock
imul
pushf
arpl
hlt
mov
neg
int
jno
cld
shrb
fsubp
inc
jb
xchg
lahf
inc
push
scas
cwtl
aad
sub
add
mov
cmp
or
in
in
pop
mov
dec
aas
les
cli
xchg
test
pop
clc
lea
jl
and
scas
pop
adc
mov
js
repnz
mov
push
sarl
leave
sbb
mov
push
mov
pop
into
imul
enter
xchg
lods
insb
sbb
and
not
or
cmc
enter
lcall
or
mov
lds
sbb
nop
inc
or
adcb
or
push
sbb
dec
dec
pusha
cmpsb
fsubs
mov
mov
mov
pushf
xor
push
push
mov
xchg
and
fidivrs
cmp
lea
les
enter
int
fsubs
fs
test
push
mov
out
ljmp
xlat
hlt
pop
dec
arpl
sub
popf
mov
adc
push
or
xchg
loope
xor
insl
popf
lea
cmp
rorl
mov
jo
sbb
jp
cltd
and
add
mov
push
ja
pop
push
loope
dec
jb
sub
dec
or
out
sbb
pop
add
scas
negl
hlt
hlt
jno
add
mov
es
sub
lds
mov
mov
stos
sub
adc
or
mov
push
xchg
aas
arpl
xor
mov
repnz
sub
sar
ficoms
aaa
mov
dec
jp
movsb
sbb
out
xchg
mov
mov
test
jg
mov
test
movsb
sahf
xchg
pushf
inc
rorb
cld
xchg
mov
cmp
jmp
xchg
sbb
ret
incb
fwait
imul
andb
repz
mov
fiaddl
sbb
mov
xor
or
jae
xchg
push
sbb
mov
test
sub
jl
popa
fistpl
mov
jbe
imul
mov
jecxz
sub
dec
int3
aam
fucom
adc
int3
sbb
fs
ret
lret
jbe
out
in
in
sbb
mov
jecxz
or
dec
clc
push
stc
cmpsl
fistl
inc
in
fisttps
mov
push
push
dec
jne
in
add
lods
mov
je
and
dec
adc
adc
xor
std
stos
xor
push
fcoms
out
xor
les
adc
gs
pusha
js
int3
nop
sbb
or
cmp
fcomps
pop
mov
adc
and
mov
cmp
into
add
outsl
out
inc
xorl
ret
pop
sub
loope
aam
xchg
mov
shl
and
mov
lcall
ret
mov
enter
mov
mov
cmp
push
sbb
inc
out
rorb
shl
mov
mov
bound
pop
loop
mov
pop
lcall
jecxz
or
das
jno
ret
fidivrl
popa
mov
cmp
sub
orl
sbb
dec
rcrb
aam
into
test
shrb
aaa
mov
push
popf
jno
cmpsl
fwait
jp
lret
sub
mov
push
and
sub
xchg
mov
push
lcall
and
fs
jmp
gs
mov
inc
pop
pusha
jne
sbb
push
repnz
shlb
lods
aaa
xor
fadds
nop
pushl
sbb
gs
loope
sub
jb
test
cmp
aad
mov
and
jecxz
jb
je
sahf
push
inc
cmp
fildll
lcall
nop
sub
std
scas
imul
jae
mov
roll
adc
mov
inc
pop
add
mov
mov
xchg
adc
test
rolb
mov
jnp
pop
nop
jne
jp
repz
cmp
bound
aas
stc
and
jle
in
js
loope
fcompl
push
xor
lret
mov
repz
or
movl
xchg
jge
push
jg
push
sub
xor
rol
daa
scas
dec
mov
in
xlat
add
sub
or
imul
push
pop
inc
mov
jg
aaa
push
jle
ror
jb
sub
jl
mov
inc
ljmp
rcr
xchg
mov
es
cmpsb
and
push
fcomps
push
in
cmp
mov
bound
mov
ds
pop
aas
movl
dec
movsl
cli
xchg
dec
push
es
out
filds
lods
mov
push
push
and
lret
lods
test
lock
inc
sbb
mov
jbe
xchg
adc
dec
jp
popa
sub
jnp
sahf
repnz
gs
dec
cmp
sub
enter
mov
dec
jg
decl
ds
mov
lock
adc
scas
dec
pop
mov
arpl
pop
sbb
iret
push
scas
out
movsl
push
sub
cmp
sbb
jno
push
jno
push
and
movsb
mov
jl
call
jp
gs
dec
jmp
fldcw
fsubl
test
push
adc
push
scas
lock
fstp
fnstenv
inc
pop
dec
xchg
sub
cmp
pop
arpl
pusha
pop
adc
dec
ret
cli
stos
das
pop
sbb
cmp
ss
or
jbe
js
pop
push
xchg
adc
rcrl
dec
sarb
lret
inc
aas
jno
in
test
add
cmpsb
pop
jl
add
dec
jecxz
ss
push
jge
les
push
out
stos
jb
ret
and
pop
xchg
data16
inc
pop
and
aas
dec
loop
fbstp
fildll
pop
sbb
xor
pop
dec
rol
or
addl
jge
push
movsl
pop
or
sbb
push
sub
and
push
leave
sti
addb
pushf
clc
int3
repnz
and
sub
mov
cmp
sub
mov
xchg
cmp
push
scas
scas
ljmp
mov
sbb
lods
movsb
lods
mov
aam
and
xor
enter
push
cmp
rcr
std
xlat
movl
pop
dec
mov
dec
ud0
mov
dec
lea
in
pushf
leave
jmp
jo
adc
cmp
subb
sbb
aad
jnp
jge
fdivl
jo
xchg
lock
rorl
es
lods
insl
and
inc
dec
ds
movsl
insb
dec
rolb
mov
test
das
fadd
xchg
das
imul
xorl
icebp
mov
cmp
je
xchg
gs
mov
sub
add
sbb
dec
fs
mov
push
pop
sbb
in
mov
ds
in
in
add
pushf
fs
in
movsl
sub
push
cmp
stc
mov
in
jno
stc
sahf
aas
sub
sub
shr
mov
cmc
xor
out
mov
mov
add
or
shlb
adc
popa
push
xor
jg
sbb
mov
pop
and
push
icebp
insb
fistps
js
pushf
call
jp
jno
ds
scas
inc
jno
int
stos
add
or
dec
pop
int3
cmp
or
pop
mov
jns
adc
jnp
xchg
gs
push
arpl
popa
mov
jecxz
cli
mov
sub
bnd
push
or
rcl
pop
insb
jnp
cmp
out
subl
jnp
loop
mov
icebp
jecxz
pusha
cmp
add
and
das
ret
xor
rcrl
adc
rcrb
lods
lock
mov
rclb
repz
ljmp
jmp
mov
and
mov
mov
add
mov
shll
mov
xchg
xchg
or
inc
push
xor
mov
je
iret
fistpll
mov
hlt
push
out
adc
dec
loopne
xchg
outsl
subb
test
jle
cmpsl
test
fistl
lock
sbb
add
in
push
rcl
sbb
lcall
xchg
cld
sub
std
and
sbb
pop
push
test
iret
ja
adc
out
in
adc
out
jae
or
jns
gs
mov
pop
std
rcrl
push
and
je
mov
mov
or
in
xchg
lcall
int
add
dec
inc
push
das
pop
push
mov
xchg
mov
ret
mov
loope
jbe
insl
mov
test
inc
sbb
xchg
mov
mov
fcoms
shlb
inc
add
adc
cmp
rol
es
loope
das
jns
lock
mov
xchg
xchg
incb
pushf
cmp
add
cmp
or
and
popf
push
shrl
jecxz
outsl
mov
sti
das
pop
jp
cmp
rcl
cmp
iret
push
push
repz
cmc
cli
mov
cmp
in
lea
pop
dec
scas
rcrb
xchg
push
add
dec
mov
jp,pt
xor
jmp
outsl
mov
sub
adc
adc
mov
mov
jle
in
popf
sbb
sub
sbb
or
daa
cmp
out
out
adc
jle
and
dec
xorb
sbb
ja
cs
pushf
and
pop
dec
shl
push
lock
ljmp
xchg
pop
mov
or
cmpsl
out
push
sbbl
arpl
and
xchg
test
rol
scas
push
or
push
sbb
test
js
jecxz
and
mov
in
test
lret
push
inc
jo
cmpb
adc
cmp
outsb
loope
pop
movsl
lahf
cs
and
ret
xchg
out
cmp
cmp
add
andb
insl
sub
mov
test
mov
loope
adcb
or
ret
outsb
sbb
add
push
lret
ss
jne
test
xor
sub
xchg
jbe
loope
pop
sbb
je
and
fimull
push
push
sub
out
fstp
adc
rorl
loop
scas
push
shrl
leave
sub
pop
cwtl
sbb
shll
int3
fmuls
cmpb
daa
cmp
rolb
jns
pop
mov
stc
push
jecxz
in
aam
out
adc
mov
jmp
dec
push
xchg
lret
in
jns
mov
mov
out
mov
xor
add
mov
push
das
xchg
inc
and
jno
add
push
push
notl
push
add
add
movsb
mov
jne
jnp
jae
push
stos
push
mov
xor
mov
outsl
stc
movsb
call
push
mov
into
push
addb
mov
jmp
jg
mov
or
inc
pop
cmp
into
mov
push
loop
fstl
sbb
movsl
call
jp
arpl
aaa
pushf
mov
and
hlt
outsl
pop
sarl
test
js
push
adc
xor
add
add
and
pop
add
gs
inc
nop
insl
aam
adc
data16
leave
sti
ss
push
cmp
mov
out
mov
int
hlt
iret
popa
stc
lcall
inc
scas
jo
push
xchg
lret
mov
shlb
lahf
icebp
icebp
push
inc
jo
xor
sahf
pushf
in
lea
xchg
mov
movsl
lock
cli
inc
pop
notl
out
fmull
sub
dec
fcomps
adcl
das
adc
outsb
out
adc
in
les
lahf
pop
pop
clc
fisttpl
push
pop
mov
jg
mov
lods
rcrl
mov
scas
cmp
imul
jmp
cmp
lret
mov
popa
sub
pushf
in
mov
lock
sub
das
cmp
cld
or
pop
shr
fldenv
aad
cmp
sbb
div
jp
movsl
sub
mov
ss
ljmp
sub
pop
jmp
mov
leave
pushf
cmp
dec
jecxz
addr16
jbe
scas
xchg
adc
sbb
fisubrl
xchg
pop
repnz
cmp
test
add
fs
pusha
sub
sub
ret
and
mov
push
loope
nop
xchg
sub
dec
leave
inc
dec
scas
sub
jae
andl
and
sub
js
push
filds
mov
cmp
jnp
adc
xchg
fs
lahf
jno
fisttps
jp
int3
xor
jae
mov
mov
shl
lcall
and
fcomps
and
push
stos
pop
inc
mov
jg
insl
decl
xchg
cmp
xchg
dec
popf
inc
mov
mov
push
lods
sub
fildll
add
mov
push
mov
pop
mov
mov
jo
adc
pop
jne
pushl
dec
push
orb
push
enter
scas
sbb
inc
sbb
cld
mov
stos
cli
xlat
sub
push
andl
stc
loope
rorb
pop
pop
jle
sub
and
out
sbb
sti
lret
adc
fistps
xlat
pop
adc
jbe
out
dec
xor
addb
jbe
xlat
pop
out
ss
cmpsl
lret
lret
inc
movsb
push
sbb
push
sbb
nop
xor
xchg
data16
inc
out
data16
inc
stos
sbb
pop
jge
cmp
jb
mov
adc
sub
cmp
inc
push
pushf
stos
pop
lea
cs
add
cmpsl
in
rcr
scas
adc
icebp
lea
mov
mov
dec
dec
mov
jb
es
enter
popa
aam
xor
sarb
cltd
or
pop
xor
inc
and
xor
dec
and
push
mov
jl
scas
mov
insb
pop
mov
xchg
push
pop
jg
repz
push
mov
mov
dec
rcll
mov
xchg
sub
pusha
inc
lock
outsl
jb
push
pop
rorb
shll
push
xor
fmuls
popf
lea
push
mov
push
sbb
mov
push
adc
push
aam
xchg
mov
xchg
repnz
xchg
or
cmc
out
push
mov
cltd
and
push
in
test
je
push
pop
cmpl
xchg
fwait
dec
lahf
notl
rclb
and
rcl
sub
cld
mov
js
xchg
test
cmpsb
loope
lret
cmpsl
popa
jge
mov
sbb
mov
cmc
mov
mov
bound
daa
shl
jmp
and
lret
mov
dec
call
cmp
xchg
pop
push
mov
daa
or
in
sbbb
iret
sti
jmp
or
out
inc
pop
and
popa
add
xchg
mov
push
sub
clc
ss
xchg
or
lret
adc
lock
push
cli
jle
push
push
xor
mov
cmc
mov
aad
dec
pop
xor
ficoms
sbb
mov
fiaddl
lock
repnz
jnp
cmp
and
pop
fld
pop
sbb
ret
push
shll
or
xchg
mov
les
or
mov
xchg
inc
cmc
mov
push
adc
or
les
add
push
mov
repz
aam
jns
mov
xchg
xchg
mov
inc
xchg
jne
add
movsb
clc
ds
lcall
popl
or
xor
cmp
lock
cmpsb
into
mov
inc
imul
insb
out
cmp
mov
pop
or
test
cwtl
ja
jp
sub
or
add
lock
mov
aam
dec
andps
inc
lret
in
in
xor
lret
mov
cli
fwait
imul
test
and
jle
and
and
cmpsb
scas
jp
mov
push
popa
stos
cmpsb
xchg
xor
cmp
inc
popf
add
jl
fbld
dec
outsb
add
sub
mov
inc
bound
cmp
rclb
sti
jp
xor
mov
out
dec
lahf
rclb
mov
pop
stc
mov
stos
aam
adc
dec
movsb
imul
and
mov
push
xor
pop
int
or
push
insb
mov
mov
pop
insl
pop
adc
dec
or
mov
loope
mov
ja
adc
xchg
lea
fisttps
sahf
cld
lahf
dec
xchg
push
mov
enter
push
adc
sub
inc
sti
mov
xchg
orb
mov
and
jg
pop
lea
clc
mov
mov
ja
lds
dec
mov
hlt
push
mov
out
add
pop
outsb
jnp
stos
ja
in
and
loop
push
mov
repz
leave
and
jno
mov
dec
sub
orl
ja
cmp
std
mov
mov
cs
fdivr
vfnmaddsd
insb
fucomi
ret
push
cltd
mov
adcl
les
push
aam
mov
call
xchg
cmp
xchg
shlb
and
fimull
sbb
xchg
fdivr
addr16
dec
es
int3
pop
les
sbb
adc
pop
push
lock
jae
add
nop
mov
cmp
push
sarb
hlt
lret
dec
inc
test
cmc
jl
aas
mov
pop
or
mov
es
cli
in
inc
pop
xor
mov
mov
mov
lds
add
add
cmp
xchg
mov
inc
sbb
mov
xor
mov
bnd
push
push
mov
rclb
sub
movsl
cwtl
add
push
popf
xchg
add
dec
ljmp
and
xor
lcall
clc
add
sub
and
lret
flds
sbbb
ret
sbb
stc
mov
sub
stos
xor
or
adc
pop
lods
das
and
pushf
push
sub
add
fnstsw
dec
ds
mov
cmp
pushf
mov
sbb
inc
pop
call
sbb
iret
xchg
add
mov
push
cmp
cmpsb
test
cmp
xchg
add
adc
cli
mov
mov
mov
mov
stos
pusha
pop
adc
sub
in
rcrb
dec
inc
imul
add
push
xchg
and
xorb
jne
int3
iret
scas
xchg
sbb
orb
aad
and
mov
mov
push
xlat
ret
pop
mov
rclb
bound
xor
mov
mov
test
pop
pusha
push
xchg
cli
pusha
pusha
sbb
lret
loop
pop
and
out
mov
sub
bnd
adc
or
dec
xchg
xor
push
ljmp
push
sahf
adc
sbb
lahf
and
and
and
and
or
xor
push
fsubs
pop
cs
pop
sub
xlat
mov
leave
orl
mov
js
out
mov
movsb
out
xchg
inc
scas
cmc
imul
fisttpll
xor
dec
sbb
push
xchg
and
xlat
mov
mov
out
fwait
mov
inc
sub
das
jl
test
cmp
xor
loope
xchg
jno
sahf
sub
xchg
std
lret
jb
push
push
or
out
into
mov
es
rolb
add
test
int
lea
add
cmpsb
inc
hlt
push
mov
jmp
das
les
jp
dec
add
pop
sbb
mov
xchg
mov
jns
lahf
push
xor
test
dec
add
push
pushf
test
test
movsb
in
or
js
cld
inc
lock
pop
ret
cmp
shlb
sbb
dec
jge
not
movsb
sbb
cld
inc
insl
test
das
fmuls
mov
xor
dec
mov
push
outsb
dec
push
push
fiadds
test
dec
inc
jge
sub
lret
add
or
push
sub
cmp
adc
in
dec
add
cmp
test
icebp
rcll
or
lock
xor
fstl
aad
pop
sub
shll
pop
sarb
imulb
out
imul
mov
ret
lock
mov
cmc
dec
xor
into
andb
ja
mov
pop
mov
xor
mov
push
lret
or
pop
or
daa
pop
and
mov
hlt
stos
mov
pop
cmp
and
test
xchg
mov
adc
cmp
sar
fstpt
adc
es
jbe
xor
pop
xchg
js
cmc
mov
in
scas
outsl
mov
sub
mov
cmpsb
addr16
pop
push
aaa
ss
or
int3
sbb
pop
loop
adc
imul
and
loope
shll
pusha
pop
xchg
sbb
adc
sub
dec
out
adc
dec
adcl
adc
dec
arpl
lock
adc
les
sbb
jge
orl
sbb
cmc
jp
push
adc
cltd
pop
inc
xchg
mov
dec
les
xchg
and
jns
fsts
mov
pop
aad
sbb
std
pop
addr16
ret
fidivs
jmp
xchg
pop
js
mov
xor
jb
out
pushf
xor
mov
xlat
jb
movsb
mov
repnz
fsubs
dec
jmp
int
xchg
and
jecxz
mov
das
or
jle
xchg
jns
and
add
pop
adc
adc
adc
cmp
pop
les
sbb
xchg
pop
lahf
fisttpll
dec
and
shlb
mov
jnp
xor
in
sub
loope
stos
dec
jg
mov
addr16
ret
push
mov
aad
mov
sub
mov
popa
incb
xor
xlat
out
ret
adc
mov
loopne
mov
les
jge
andl
jmp
enter
xor
mov
and
call
sbb
dec
cmc
in
testl
push
xchg
rolb
mov
mov
push
and
bound
pop
or
cmpsl
jbe
sub
and
ljmp
daa
scas
cmp
lea
aas
imul
pop
dec
jnp
std
pop
push
insb
shlb
out
pop
xor
mov
rcrl
scas
lahf
adc
pop
mov
imul
lock
es
jae
lock
mov
push
bnd
daa
orl
in
insb
jb
jae
into
dec
adc
out
mov
stc
mov
dec
cmpl
inc
out
ror
psubsb
cmp
jge
xor
and
jge
loop
lea
pop
xchg
addb
mov
mov
pop
push
sub
sbb
push
out
and
mov
xchg
sub
add
jp
sbb
dec
andl
sahf
loop
lea
push
ror
inc
mov
vpabsd
xor
mov
sub
movsb
iret
call
jo
cmp
gs
incb
test
fstpl
pusha
movsb
js
and
loop
iret
push
or
push
mov
xchg
cltd
repz
in
pusha
push
or
negb
in
in
popf
movsl
cmp
lahf
sti
ret
int
dec
cmc
cmp
push
mov
xchg
call
push
lea
insl
sbb
das
cli
rcrl
pop
pop
sahf
mov
jne
jge
imul
out
mov
pop
jl
test
cmp
out
in
xchg
sbb
jns
repz
test
ljmp
imul
xor
add
mov
out
sbb
pushl
push
mov
mov
xchg
and
sbb
sub
pop
mov
dec
sahf
out
shll
pop
inc
lods
int3
imul
push
inc
mov
sbb
sub
pushf
ficoml
scas
cmc
shl
aad
iret
mov
or
aas
in
cmp
into
fidivrs
xor
outsb
out
dec
push
ja
in
sub
mov
sbb
mov
or
xchg
stc
or
icebp
inc
jb
nop
adc
push
mov
add
fidivrl
mov
push
or
dec
pop
mov
ficoms
lods
xor
xorl
sub
inc
daa
jge
loopne
dec
enter
iret
mov
movsl
fwait
int
lret
jno
jl
xchg
mov
out
fldenv
stos
adc
mov
ja
or
add
cli
lret
out
xchg
call
jl
dec
mov
inc
mov
loop
xchg
adc
pop
dec
mov
mov
cmp
pushf
mov
add
fucomp
fs
lock
ret
dec
ficompl
popw
popa
inc
rorl
out
fidivrl
pop
push
lahf
mov
dec
outsb
mov
dec
sti
cld
pop
cmp
pop
inc
push
lods
jle
or
jge
nop
adc
xor
lods
arpl
mov
nop
xchg
aas
push
inc
test
js
popf
inc
mov
test
dec
jbe
jno
and
ds
dec
jbe
stc
mov
xchg
jno
adc
subl
and
int3
or
inc
jns
frstor
and
pop
xlat
ljmp
stc
push
jge
jp
lret
push
sub
mov
pop
popa
scas
icebp
aaa
pop
mov
imul
push
and
xchg
fcmovu
jae
cwtl
jnp
xchg
inc
iret
and
fstpt
or
adc
adc
push
push
mov
dec
xchg
mov
cld
jge
push
lea
mov
sbb
mov
lds
cmp
or
lds
xor
js
lcall
pop
test
push
negl
xchg
mov
inc
rcll
out
js
pop
add
mov
add
sbb
jg
push
xchg
dec
push
jnp
add
or
test
cmpsb
xchg
lods
xchg
jae
arpl
mov
stos
push
cmp
insb
mov
test
stos
cmp
fmuls
cli
xchg
pushf
mov
movsb
sub
imul
mov
fcmovnu
pop
es
sbb
scas
cld
fdivrs
sub
test
aaa
inc
leave
add
scas
dec
mov
jo
pop
in
mov
mov
jmp
xlat
lret
clc
call
adc
lret
and
imul
pop
add
lret
or
pop
pop
repz
mov
repnz
loope
push
mov
sub
dec
add
push
push
sub
push
test
jnp
movsl
int3
xor
clc
mov
xchg
xchg
or
jge
dec
pop
mov
sub
cmpb
mov
fwait
jo
mov
test
lret
jle
inc
sbb
arpl
add
push
and
dec
shrl
cld
int
stos
sbb
sub
push
cmp
xorb
adc
loope
sti
loopne
mov
adc
cs
fiaddl
out
push
out
push
in
cmp
mov
rcrl
aam
mov
cwtl
popf
test
push
cmovge
push
aam
push
call
mov
fisubl
mov
jg
sarl
xor
xor
lods
or
insl
out
jo
cmp
cmp
pop
dec
aam
test
pop
mov
mov
sub
jae
push
movsb
pushf
arpl
lcall
mov
pop
dec
arpl
mov
out
add
ret
addr16
in
cwtl
loop
aas
cmp
jle
idivb
aaa
and
ret
adc
popf
ljmp
pop
add
push
push
cltd
std
repz
ret
mov
xchg
out
incb
cltd
add
jecxz
inc
mov
mov
roll
loop
jmp
sub
out
mov
scas
and
std
in
add
outsb
adc
cli
mov
or
adc
loop
add
and
jbe
out
xchg
mov
imul
imul
sahf
movsb
push
ret
xor
xor
neg
xchg
mov
jnp
cmpsb
pop
shrl
popf
cmpb
xchg
aas
cmp
add
addl
lds
cli
pop
jg
sbb
sub
sbb
dec
add
sbb
mov
ret
cmpsb
cmp
cltd
xchg
andl
xchg
push
xor
lock
pusha
fcoms
cmpsb
cwtl
cld
cmpsl
mov
fs
mov
cmp
mov
int3
dec
xor
jg
scas
xorb
movsl
adc
mov
push
out
lds
repz
sub
inc
xor
negl
dec
jge
sub
xchg
pop
repz
xor
mov
pop
mov
mov
or
orb
shlb
sub
inc
fistpl
push
or
jns
mov
cli
push
clc
fsts
mov
push
test
shll
fs
ret
dec
in
rcrb
inc
dec
scas
xor
dec
popf
mov
imul
xchg
xchg
fstl
inc
inc
and
test
xor
sbb
inc
lret
or
hlt
mov
xlat
les
enter
jge
iret
cwtl
mov
sub
mov
int
pusha
std
push
inc
pop
pop
nop
mov
mov
adc
mov
shl
stc
lds
loope
dec
aaa
xor
jns
add
lea
sub
cs
outsl
nop
fisttpll
or
insb
lods
xor
pop
push
sbb
stos
xor
subb
push
idivl
imul
enter
lock
pushf
gs
bound
pusha
lret
mov
inc
and
fucomip
insb
scas
xchg
and
scas
das
imul
fcmovnb
cmp
pop
or
mov
dec
shl
sub
xchg
scas
inc
arpl
push
adc
mov
loop
mov
adc
add
or
js
insl
xor
sbb
add
and
xchg
adc
mov
std
add
roll
stos
out
lods
jo
jle
or
shl
jecxz
nop
cld
rcr
lea
cmp
sbb
mov
stos
fcomp
sbb
repz
mov
aas
pop
pop
test
pop
out
adc
adc
clc
mov
sub
repz
movsl
loopne
jmp
jbe
in
xor
jne
or
pop
mov
pop
cmpb
pop
and
out
or
or
fld
pushf
in
icebp
mov
mov
pop
jp
dec
movsl
push
cmp
ficoms
scas
adc
xor
sbb
sub
fdivrs
push
pop
or
mov
inc
xor
xlat
idivl
loope
sub
adc
jae
outsb
sbb
or
or
test
pop
enter
mov
pop
gs
negb
xchg
lods
add
add
sbb
scas
ffreep
dec
sub
enter
pop
movsw
loope
hlt
and
pop
mov
sub
int3
je
push
sbb
xorl
lret
aas
out
aaa
arpl
inc
add
lock
sub
aam
mov
inc
or
pop
pop
dec
adc
jle
xor
addl
xchg
xchg
dec
adc
xchg
and
jmp
std
cmp
and
inc
out
mov
add
pop
inc
xchg
roll
mov
inc
jae
xor
or
icebp
fnsave
and
call
les
fsubrl
je
das
inc
sbb
push
scas
js
gs
dec
out
mov
les
in
ss
leave
or
push
dec
mov
rcll
aas
jnp
sahf
stc
cmp
pop
jb
ret
clc
sahf
mov
pop
xor
out
adc
and
adc
iret
dec
stc
pop
shlb
mov
data16
call
repz
push
jmp
inc
js
dec
push
aas
mov
mov
popf
cltd
sub
shlb
rcrl
ss
mov
sbb
mov
cli
pop
incl
aam
test
jp
movsb
sbb
push
rol
push
clc
jmp
int3
lea
jb
pop
add
push
xchg
jb
mov
in
sub
mov
inc
cs
mov
inc
pop
jge
mov
insl
pop
push
sbb
inc
mov
dec
lret
lret
inc
jo
rep
jne
jnp
js
adc
lret
sub
inc
lock
fwait
xor
mov
inc
xlat
push
mov
push
mov
lret
je
jae
dec
mov
jbe
push
into
xchg
lock
lods
push
xlat
jb
xchg
ljmp
div
int3
adc
out
mov
adc
jns
add
test
int3
sti
dec
ljmp
insl
mov
movsb
pop
fdivl
pusha
jge
dec
or
je
fisubl
xor
mov
add
stos
test
jns
aam
xchg
dec
movsl
mov
jne
jns
lret
sbb
stos
and
test
jo
and
adc
in
mov
cmp
fwait
insl
jmp
add
hlt
add
xchg
je
ret
push
bound
arpl
mov
adc
cmp
mov
out
inc
mov
lret
mov
out
int
cmp
loope
ds
xor
lret
rcrl
insb
push
sbb
out
stc
rcrl
dec
hlt
lds
jae
jno
addr16
scas
sbb
or
add
lahf
push
lods
gs
jne
pop
push
mov
testb
aad
xchg
push
cmp
sub
dec
mov
mov
int3
pop
stos
mov
enter
sbb
sub
lret
les
cmpsb
push
stos
mov
ret
cld
xlat
cmpsl
imul
lods
rcr
sbb
jg
mov
jle
push
cmp
inc
idivl
push
push
dec
adc
mov
pop
gs
mov
jle
js
js
sti
cli
insl
data16
fxch
rcl
ret
jb
outsl
aaa
scas
rclb
nop
lock
and
lahf
insb
mov
mov
les
int
mov
call
je
cmp
stos
jnp
js
lea
lret
repz
add
lret
mov
sbb
scas
ljmp
je
mov
fnstcw
adc
ret
je
mov
es
sub
mov
push
pop
lret
lcall
ret
mov
cwtl
or
lret
jnp
push
icebp
mov
pushl
mov
mov
or
ds
add
out
mov
in
push
test
sbb
mov
fs
ret
mull
add
mov
mov
inc
es
adcl
insb
shlb
xor
or
cmp
and
push
mov
jns
xor
jp
jecxz
scas
inc
cmpsl
xchg
xor
les
out
leave
loopne
dec
in
ss
repz
shll
mov
or
cmp
mov
xor
push
iret
mov
jb
or
nop
jp
jp
and
push
mov
adc
mov
mov
pop
adc
push
mov
nop
jb
pop
push
sar
cltd
in
negl
xchg
aad
enter
test
mov
movsbl
mov
imul
adc
insb
imul
popa
inc
dec
xchg
jb
or
mov
xchg
and
jp
cwtl
or
jmp
push
cld
test
mov
int
inc
fcoml
xchg
add
scas
out
test
pop
lcall
fsts
jnp
cmp
jbe
add
imul
sbb
lcall
fcomps
pop
mov
mov
fstps
sub
sbb
pushf
test
enter
loope
cmp
xchg
or
sub
lds
sbb
fimull
repz
imul
push
jmp
cwtl
ret
das
sbb
fisttps
jecxz
nop
xchg
pop
push
xchg
mov
ret
ja
aam
sbb
loopne
bound
mov
les
pop
stc
shr
cmp
out
dec
pop
and
std
push
test
xchg
and
add
aad
push
adc
in
scas
mov
mov
enter
push
sbb
mov
add
xor
shll
pop
add
ret
aas
andl
mov
outsl
repnz
cmpsl
xchg
mov
push
cmp
fwait
imul
push
arpl
mov
ficomps
in
push
sub
pop
sbb
mov
idiv
ja
mov
cmp
sbb
xor
jo
ljmp
inc
pop
sbb
mov
dec
fisubs
add
ret
add
popf
inc
adc
mov
sub
icebp
call
loop
pop
test
cmp
add
cltd
lock
push
daa
jo
cwtl
push
lea
lret
stos
ja
sbb
push
test
jo
in
in
pop
adc
stos
push
fstpl
inc
push
adc
lods
push
into
cmpsl
rep
out
jmp
fimuls
loopne
push
aas
test
lods
mov
push
sub
aaa
push
movsl
fs
xor
add
lret
movsb
les
or
test
popa
xchg
test
jmp
loopne
hlt
rcl
je
rorl
add
popa
mov
int
pop
push
cmpsb
clc
int
jecxz
cltd
cmpsl
enter
imul
sub
mov
fcoml
mov
daa
push
xlat
add
push
dec
popf
mov
mov
adc
cmp
inc
xchg
aaa
shll
push
cmc
cmc
jne
adc
int
mov
mov
mov
das
or
cwtl
jne
mov
mov
push
in
popw
jecxz
insb
add
sub
ss
jae
dec
lcall
inc
inc
outsl
add
cli
adc
jle
fsubs
xor
arpl
addl
sbb
fdivrs
int
mov
lahf
in
insb
mov
dec
cli
scas
push
ljmp
mov
cltd
pop
xor
adc
jge
je
sbb
faddl
test
arpl
and
cltd
pop
push
imul
ja
cmp
push
aam
mov
lock
mov
je
stos
fdivp
xchg
andl
and
xchg
or
pop
mov
fmull
xchg
loop
repnz
mov
xchg
mov
bound
and
inc
aaa
mov
fisttpl
test
or
test
push
cld
movsb
mov
sahf
insl
inc
sub
sahf
sub
add
mov
adc
add
aad
sub
cmp
jg
out
dec
add
push
es
loop
mov
pop
sbb
pop
jns
imul
into
xchg
in
orb
mov
arpl
aam
in
shl
xchg
ja
push
sar
sbb
cmp
cwtl
mov
xchg
scas
cwtl
mov
pop
xchg
call
push
lods
jmp
aam
into
mov
cmp
mov
sub
cltd
xchg
mov
mov
pushl
jmp
imul
repnz
add
cwtl
adc
xor
mov
dec
aad
mov
test
inc
mov
xor
scas
subl
adc
and
insl
mov
adc
out
and
and
mov
sbb
inc
dec
xchg
ret
sub
adc
xchg
cs
mov
or
data16
js
cmp
xlat
dec
xchg
rol
inc
cmp
pushf
jg
push
int3
mov
jbe
lock
mov
xchg
push
push
jae
testl
xchg
daa
add
xchg
jmp
mov
or
sbb
or
popa
cmc
scas
out
cmpsb
ret
movsl
stos
add
pop
push
fidivrl
cmp
imul
fnsave
jg
hlt
jb
in
jp
xor
pop
insb
idiv
int3
mov
insb
or
push
push
repz
and
cmp
inc
clc
mov
adc
sbb
mov
sbbb
add
loopne
mov
into
enter
call
cli
test
dec
sbb
pop
fisttps
mov
addl
ja
push
and
or
adc
jg
incb
aaa
or
pop
jle
in
cmp
mov
int3
jns
pop
js
rolb
fidivrs
sbb
fdiv
mov
jno
mov
mov
sub
pop
and
addr16
add
jge
out
xchg
xchg
imul
mov
pop
cmp
xchg
cmp
jno
orb
outsb
sti
popl
dec
fwait
cld
xchg
adc
inc
shrb
es
xchg
or
jnp
push
cmp
inc
aaa
jo
mov
lret
sub
andl
jno
sub
lcall
test
inc
aad
xor
out
dec
xorl
cmp
lcall
fstpt
loope
mov
mov
or
pop
push
sbb
aam
lahf
movsb
xchg
mov
cmc
inc
mov
lcall
jecxz
inc
adc
sub
mov
bnd
xchg
inc
mov
mov
pop
add
fwait
cli
pop
rcrb
cmc
mov
mov
fnstsw
dec
fwait
xchg
fimull
stc
jecxz
sbbb
fdivr
xchg
jbe
in
outsb
jnp
push
and
add
jmp
xchg
fidivrs
pusha
cmp
sbb
rcr
aas
add
and
dec
adc
pop
hlt
mov
mov
fs
inc
pop
fistpl
lock
add
jbe
cs
add
dec
popf
mov
mov
inc
lods
xor
pop
lahf
bound
xor
stc
lahf
jno
nop
mov
jge
pop
icebp
jno
loopne
cwtl
dec
shlb
mov
repnz
mov
or
fmull
inc
jecxz
cmp
mov
scas
jecxz
xorl
mov
repnz
mov
popf
mov
mov
dec
jo
aaa
jns
cmp
push
mov
or
out
outsl
outsl
xor
cmpsb
lret
mov
ljmp
xor
and
in
clc
stos
or
imul
addr16
repnz
sub
cltd
push
push
outsl
inc
mov
jg
orb
jae
ja
int3
stos
dec
test
jns
sbb
and
jo
mov
xchg
adc
pop
rolb
mov
jnp
and
and
cmp
or
mov
outsb
push
mov
jge
into
lcall
je
mov
pop
jnp
rolb
sbbb
ljmp
aas
add
push
loope
dec
mov
pop
mov
and
pop
push
pop
inc
mov
cmpsb
xor
outsb
add
adc
mov
mov
lret
sti
xorb
add
not
cmp
loop
mov
pop
movsb
xchg
dec
jae
push
pop
sub
sar
arpl
or
lods
sbb
clc
mov
inc
les
sub
test
cmp
imul
sub
push
sbb
mov
sub
test
loope
push
xor
lret
incl
int3
fidivl
test
sub
sbb
push
xchg
mov
adc
movsb
das
loope
adc
scas
xchg
ret
stc
pop
pop
into
adc
jmp
nop
cld
lcall
movsl
mov
pusha
shl
xor
sbb
les
adc
int
fcmovnb
repnz
cmpsb
xor
sbb
sarl
mov
add
insb
dec
cmp
stos
sbb
cmp
jnp
mov
fucom
dec
mov
fldcw
lcall
jl
pop
sbb
cwtl
mov
jns
adc
out
xchg
js
add
cld
or
outsb
test
test
pusha
inc
mov
jg
push
repz
mov
sbb
add
mov
ret
sub
inc
sbb
jg
mov
pop
xchg
loope
cmp
andl
xor
dec
sub
sti
mov
sbb
imul
test
sub
fnstenv
jp
int3
xor
rcrb
mov
test
shll
push
xor
negb
sbb
in
adc
sar
xor
mov
pop
insb
mov
inc
dec
out
dec
pushf
or
fbstp
aad
pop
lock
mov
sub
push
fiadds
rcrb
push
fnstcw
and
mov
mov
push
les
into
mov
cmpsb
fucomi
movsl
inc
pop
jne
pop
push
stc
push
sysexit
push
sahf
adc
fisubl
mov
push
jge
xchg
sub
test
gs
repnz
lcall
insl
xchg
daa
jne
sbb
leave
insb
sbb
movsl
stos
in
cwtl
aam
ffreep
mov
pop
push
push
lock
ret
xor
cltd
rcrb
sbb
xchg
into
mov
test
mov
cmp
arpl
jo
cs
adc
jno
sub
paddsw
dec
fadd
hlt
add
push
cmp
sbbb
push
xchg
enter
popf
jl
lds
cltd
pop
add
inc
pusha
jmp
insb
fisubl
dec
je
dec
cmp
adc
nop
pop
cmp
int3
lock
adc
fistl
add
pushf
jmp
mov
cmp
cmp
rorb
insb
iret
cs
xchg
flds
xlat
stos
and
cld
cwtl
add
idiv
cmpsl
mov
push
sti
push
add
mov
lods
adc
add
lea
cltd
pop
sbb
mov
cmp
daa
clc
repnz
sub
sbb
leave
arpl
loop
xchg
xchg
int3
jmp
pushf
lods
jecxz
pop
pcmpeqd
xchg
push
lods
push
ja
notb
insl
psubq
cmpsb
pop
pop
mov
xchg
adc
jmp
dec
cmc
fwait
test
fucom
iret
jb
outsl
jno
jecxz
jne
xchg
sbb
stos
jae
jns
test
jmp
xchg
in
dec
and
mov
lcall
add
jle
mov
jns
roll
pop
les
setne
in
rcrl
sbb
loope
lretw
mov
scas
movsl
or
sbb
mov
jne
clc
xchg
lods
pusha
sbb
movsb
pop
push
in
xchg
add
fistpll
into
mov
incl
stos
xorb
fcoms
int
subb
icebp
subl
gs
jl
adc
int
sbb
cmp
mov
xchg
xor
jle
or
push
or
enter
jmp
inc
sub
sti
not
inc
sbb
inc
cltd
stos
es
mov
cltd
icebp
inc
pop
ljmp
or
fsubr
ljmp
dec
shlb
or
mov
cmp
push
sbb
push
shlb
ja
addb
call
sbb
call
xor
adcl
popf
popa
pop
icebp
push
mov
mov
mull
inc
jl
aam
scas
cld
and
mov
inc
xchg
imul
mov
lds
push
sbb
cmp
mov
and
inc
or
cld
fcomps
mov
icebp
cmp
psrad
sbbb
or
subb
mov
lods
clc
adc
test
push
xchg
mov
orl
sub
aaa
pop
repnz
adc
mov
sbb
addl
mov
pop
cmp
mov
inc
outsl
clc
pop
lret
xchg
push
push
inc
shl
movsl
inc
mov
js
mov
lods
sbb
sub
or
bound
cmc
pop
pop
mov
add
clc
push
ret
push
pushl
push
insl
xchg
daa
dec
in
push
out
add
mov
shlb
rcll
push
cmpsb
aad
sub
mov
sbb
xor
leave
mov
pop
xlat
sbb
pop
adcb
sub
sub
push
xchg
sbb
stos
jns
jb
aad
mov
repz
xchg
fcmovbe
cs
adc
aaa
imul
incb
push
dec
push
js
push
mov
mov
rcll
sub
dec
cmp
mov
push
test
fldcw
pop
dec
jl
movsb
in
pop
pop
roll
mov
stc
inc
push
imul
dec
lds
out
xor
dec
xor
mov
lahf
bound
out
ret
jg
fiaddl
hlt
outsl
dec
iret
insb
and
pop
adc
int3
or
xchg
cmpsb
inc
or
jb
clc
sub
decb
lret
push
cmp
aas
or
pushf
push
into
mov
test
mov
cwtl
jle
pop
enter
and
dec
push
xchg
jb
push
pop
cmp
outsl
push
dec
pushf
cmp
sbbl
aas
cld
test
punpckhdq
filds
fcompl
sahf
cwtl
daa
pop
pop
movups
sarb
xchg
mov
cmp
fwait
pop
dec
imul
inc
add
test
lret
movsl
repz
fwait
leave
mov
cmp
insl
push
popf
jg
insl
testb
mov
pop
add
sub
jmp
jge
mov
jmp
or
jne
aad
arpl
jg
jmp
lcall
outsb
and
adc
mov
adc
pop
xor
xchg
jbe
jmp
out
test
pop
movb
cltd
out
xorl
push
bound
push
xchg
fnstenv
dec
mov
cmpsl
lods
pop
xchg
sbb
imul
or
pop
ss
push
jle
push
or
mov
iret
pop
dec
cmp
aas
pushw
dec
roll
pop
xor
fs
jne
add
cmp
or
adc
cmpsl
push
fildl
mov
cmc
xchg
dec
or
jp
scas
mov
fnstenv
mov
add
jbe
mov
fwait
add
jp
jnp
jne
and
xchg
push
out
ffreep
xchg
cmpl
subb
jp
mov
imul
mov
cltd
cmc
out
sbb
insb
and
inc
or
in
dec
add
in
mov
dec
loop
jp
mov
mov
cltd
cmp
mov
movsl
xchg
xor
mov
popf
dec
jle
dec
mov
out
repz
cmp
xor
xor
jg
dec
push
out
pop
or
sti
mov
jle
mov
outsb
mov
add
jp
sub
mov
out
insl
out
mov
lods
and
xlat
aad
dec
cmpsl
and
mov
aad
xchg
sub
add
out
dec
fistpl
test
call
sti
es
cmc
pop
xchg
mov
ret
add
aad
sub
push
daa
mov
pop
test
cmp
pop
jb
push
pop
subl
sub
andl
subb
out
ss
sbb
ljmp
dec
lods
loope
mov
cmc
cmpsb
push
roll
jae
fistl
inc
pop
fldcw
pop
add
add
arpl
aaa
mov
imul
xor
pop
icebp
gs
popa
mov
stos
and
frstor
dec
enter
lahf
dec
in
mov
or
xor
into
push
add
lea
dec
dec
repz
xor
outsb
fists
adc
shlb
iret
std
shrl
in
push
imulb
push
sti
xor
sbb
pusha
mov
clc
sbb
xchg
andl
pushf
lret
xchg
push
and
mov
mov
pop
shrb
dec
mov
mov
mov
mov
xor
push
inc
push
loopne
push
std
ss
and
pop
mov
jno
shrb
roll
pop
ss
je
xor
out
ljmp
sub
push
repnz
sbb
mov
daa
mov
dec
andl
shll
push
adc
dec
mov
lret
pop
mov
lret
arpl
leave
fcoms
imul
xor
and
ss
hlt
mov
push
sbb
je
xor
stos
push
movsb
lock
dec
movl
mov
mov
sbb
mov
xor
in
cmp
pop
jp
jae
orb
pusha
lds
fsts
and
push
pop
subl
leave
int3
dec
jb
dec
cltd
xor
add
add
clc
pop
outsb
mov
and
dec
inc
mov
mov
in
push
jg
mov
fxch
mov
and
cmpsb
aad
inc
gs
test
aaa
jmp
dec
add
cmpsl
push
dec
std
push
adc
and
jae
in
push
leave
mov
inc
imul
and
push
mov
and
push
adc
xlat
stos
movsl
int
stos
dec
jno,pn
movsb
jmp
dec
cmp
xor
lods
fistpl
xchg
sahf
in
shrb
push
pop
push
pusha
or
push
arpl
test
mov
xchg
mov
push
push
fiaddl
movsl
call
push
push
testl
inc
jns
rcrb
add
push
inc
mov
mov
adc
out
call
and
cmpsl
sub
sub
push
enter
das
call
dec
cwtl
scas
mov
xchg
fs
repz
lahf
ja
cmpsl
xchg
dec
cwtl
pop
xor
je
aaa
mov
mov
add
imull
mov
sarl
push
xchg
outsb
push
jns
mov
push
dec
mov
arpl
inc
outsl
inc
leave
scas
adc
xchg
outsb
or
mov
push
adc
adc
stos
les
inc
push
or
rclb
push
cmp
imul
je
in
and
clc
add
mov
insl
push
xchg
pand
inc
mov
mov
inc
in
lcall
sub
lds
and
bound
cmp
mov
sahf
lret
mov
cmp
mov
mov
dec
int3
or
jns
add
push
scas
insl
jl
pop
mov
dec
xchg
rorl
stos
adc
dec
addb
adc
jo
lahf
ja
rorb
and
cmp
es
adc
cmp
sbb
sbb
daa
xor
or
cmpsl
sbb
xchg
pop
dec
mov
dec
dec
xor
pop
push
psrlq
push
mov
insl
sub
das
stos
mov
fisubl
jae
cmp
inc
cmc
or
xor
int3
sub
sbb
scas
mov
cltd
xchg
ja
adc
test
test
cmp
lahf
pop
mov
jge
dec
daa
cmp
sbb
push
adc
test
add
pop
loop
popf
push
nop
ficoml
aam
cmpsb
sub
xor
sub
mov
xlat
mov
add
arpl
nop
inc
jle
das
xor
mov
outsb
in
cmp
and
shl
mov
inc
test
addr16
mov
dec
leave
rcr
mov
lret
cmp
cld
jmp
cmp
mov
test
xchg
mov
dec
sbb
add
sub
mov
pop
ret
mov
xchg
cmc
mov
jne
out
push
frstor
ss
aad
and
cmp
lds
mov
daa
imul
and
hlt
stc
into
fidivrl
rorb
or
jno
jge
aam
xchg
movsl
push
movsl
jmp
into
test
push
push
mov
jl
aam
push
fstenv
xlat
cmp
or
dec
mov
lods
je
add
jmp
es
cmp
dec
aad
clc
lock
jb
xchg
out
and
mov
in
in
jae
sbb
sbb
and
push
xlat
movl
mov
jnp
dec
and
sbb
fimuls
int3
mov
insl
test
sbb
jmp
push
cmp
stc
mov
xor
push
xlat
fs
dec
loope
outsl
jge
cmc
mov
pop
jl
movsb
sub
hlt
loop
xor
mov
rorb
push
pop
jne
xor
loop
popa
test
sbbl
daa
jge
nop
inc
lea
mov
xchg
inc
sti
mov
inc
outsl
pushf
ret
in
inc
es
or
test
fwait
and
vprotw
pusha
nop
xor
jae
test
and
adc
xor
das
dec
fiaddl
cli
lock
mov
push
js
je
dec
pop
int3
mov
movsl
ljmp
add
mov
and
sbb
popf
in
cmp
arpl
jbe
or
das
or
cmp
push
rcl
add
cli
es
or
in
or
sub
insl
push
mov
das
mov
mov
test
mov
insl
pop
mov
pop
test
xchg
sub
es
dec
push
adc
xor
dec
add
jne
test
leave
inc
fs
rorl
or
cmp
jo
les
push
cmpsb
fbld
mov
fisubl
imul
jge
in
clc
dec
mov
sarl
and
push
ret
mov
daa
aaa
add
push
add
cwtl
mov
xor
push
fmuls
cld
sub
stos
or
daa
xor
in
cmpsl
mov
xchg
push
push
dec
mov
dec
test
scas
xchg
cmpsb
aam
add
leave
stc
xchg
cmp
lods
insb
push
into
inc
andb
mov
push
sbb
jb
xor
insl
add
ds
inc
cmpsl
pop
stc
fisubl
mov
enter
flds
jg
popf
aaa
lret
dec
stc
movsb
cmp
loopne
jae
stc
xchg
fs
inc
cwtd
cmp
bound
mov
or
arpl
jns
inc
pop
pop
push
out
add
and
out
mov
or
sub
mov
dec
xchg
in
adc
fdivs
inc
lods
xchg
shrl
push
xchg
in
repz
xor
insl
sarl
sbb
enter
fcoms
into
test
dec
sub
test
insl
and
inc
adc
jg
mov
icebp
lods
test
pusha
ret
in
cld
lock
inc
cmpsb
test
iret
je
xchg
and
jae
fwait
sub
shll
jnp
inc
pushw
pop
mov
sbb
fwait
pop
jae
les
sub
daa
arpl
loopne
int3
nop
mov
add
pop
hlt
into
mov
in
in
lret
cmc
jmp
mov
xchg
sub
add
sbb
adc
sbb
mov
mov
in
cs
pushf
adc
mov
adc
int3
xor
lcall
movsl
xlat
pop
add
jae
call
sbb
push
std
mov
arpl
fs
mov
icebp
and
or
and
mov
cmpsb
push
xchg
hlt
inc
or
sub
rorb
outsl
mov
cmpsl
movsb
pop
cmp
sub
rcll
fstpt
cmp
mov
cmpsl
mov
sub
jge
lret
xor
bound
cmp
and
popa
xor
lds
bound
clc
mov
subb
pusha
mov
repnz
push
dec
jne
or
inc
xchg
aad
lret
lods
or
xor
cmc
std
repnz
jmp
adc
dec
loope
imul
incl
aas
ror
mov
cwtl
push
mull
int3
and
outsb
ja
icebp
pusha
sbb
jp
fs
mov
icebp
movsl
dec
jg
adcl
mov
movsb
add
add
mov
lods
in
enter
arpl
pushf
int3
arpl
jmp
mov
dec
jne
in
outsb
test
push
mov
inc
fs
stos
mov
jno
and
sbb
add
fidivs
in
fsubs
mov
cld
adc
adc
das
mov
fnstsw
push
sbb
scas
mov
mov
out
mov
arpl
popa
outsl
hlt
pop
sub
sub
aad
push
shrb
jno
les
cwtl
jb
mov
outsl
clc
in
pop
cmc
idivl
loopne
movsb
insb
js
sbb
rclb
fwait
cmp
jmp
in
push
cmc
mov
cmpsb
insb
dec
movmskps
mov
or
xchg
dec
cwtl
mov
mov
xor
dec
iret
lds
cs
jg
push
xchg
jge
fcoml
mov
push
or
mov
popf
orl
or
fwait
jmp
in
jge
lcall
js
push
cmp
stos
push
outsl
iret
xchg
xlat
add
cmp
addr16
rcrb
inc
icebp
jne
icebp
dec
jne
rcrl
fsubrs
loopne
ret
push
sbb
or
popf
test
cmp
jecxz,pt
icebp
adc
stc
outsb
lock
or
dec
aad
pop
cmp
sbb
sbb
mov
pop
in
call
movsl
mov
jp
ss
ja
das
aaa
mov
ja
jmp
cmp
or
aas
push
pushf
sub
shll
and
in
xor
jmp
in
test
sarl
add
popa
lods
xchg
dec
cmp
xchg
xor
imul
imul
adc
rol
ss
sbb
mov
pop
fistps
mov
xchg
leave
sti
insb
ret
fisttps
roll
mov
dec
dec
fnstsw
jmp
fnstsw
lods
pop
idivb
std
dec
repz
stos
ljmp
inc
and
lcall
push
xor
in
add
add
sub
fistpl
lock
xchg
lret
into
mov
popa
dec
push
pop
cmp
test
xchg
mov
mov
adc
mov
mov
dec
outsb
mov
sub
or
repnz
or
pop
mov
xchg
lock
scas
mov
in
or
or
aam
hlt
sbb
iret
jnp
mov
pop
pop
xchg
icebp
push
lret
push
mov
or
and
mov
cmp
shlb
xchg
xchg
dec
pop
pop
in
ljmp
push
pop
mov
lock
cmp
sub
movb
cmp
push
loopne
mov
jns
adc
clc
incl
insb
lahf
push
jmp
xchg
adc
add
std
mov
push
jecxz
xchg
or
mov
psadbw
rorl
inc
out
insl
aaa
inc
jp
jae
fstps
or
fnstsw
popf
add
outsb
test
xor
jge
imul
push
inc
sub
sub
mov
push
jno
jb
xchg
ret
cli
fcomps
or
fwait
aad
mov
add
nop
sub
push
fldl2t
adc
mov
stos
push
mov
or
jbe
outsl
mov
fwait
sarb
mov
std
mov
pop
xchg
popl
imul
aam
shlb
lods
les
xlat
test
cmp
outsb
cmp
and
fstpt
rcrl
jo
cmp
mov
insl
jns,pt
xor
adc
dec
pop
ja
clc
ljmp
mov
sbb
mov
mov
mov
stos
out
repnz
notl
inc
cwtl
lds
and
dec
loope
mov
add
cmp
xor
rorb
mov
xor
adc
mov
push
add
icebp
add
nop
mov
lds
or
iret
cmp
loopw,pn
insb
mov
inc
or
jmp
sbb
mov
rcrl
icebp
out
or
xchg
call
or
sub
cmpsl
xor
mov
sub
inc
icebp
pop
shll
or
and
pushf
jmp
adc
popl
mov
push
shlb
xchg
fcoml
cmp
sbb
inc
mov
call
pop
sbb
add
int
pop
shlb
repnz
cmp
shrl
jno
in
xlat
imul
fldenv
inc
xor
xor
pop
shlb
sbb
jl
jbe
pop
aad
and
xchg
dec
cmp
fwait
mov
xchg
std
cld
xchg
mov
jbe
add
mov
fistl
sbb
mov
xchg
int3
mov
fs
pop
jmp
hlt
cmp
div
or
ss
xchg
insl
jp
loop
jl
scas
clc
stc
ficomps
push
push
mov
and
outsb
sub
repz
sbb
mov
fwait
aas
test
testb
mov
popf
jae
int3
jnp
mov
push
es
and
aas
sub
stos
lods
xchg
dec
xchg
push
bound
daa
inc
lret
lock
cmp
inc
xchg
fs
orb
cmc
pop
inc
cltd
sbb
mov
and
dec
xchg
push
int3
subb
loop
loope
push
clc
aam
hlt
and
push
sub
add
rolb
cmp
arpl
scas
iret
and
mov
out
inc
push
xor
push
fsubp
rcl
inc
adc
lret
xor
cmovne
mov
push
addl
xchg
pop
enter
cmp
sub
cmpsb
mov
pop
mov
es
pop
cmp
in
mov
sbb
ljmp
popa
mov
mov
or
sub
push
outsl
loope
xor
shrl
loope
scas
inc
dec
and
movsl
call
fdiv
xor
adc
add
mov
sbb
or
fwait
push
jmp
arpl
mov
pop
dec
lea
dec
stc
or
pop
and
daa
test
and
lahf
push
inc
xchg
jg
jno
mov
repz
lret
jg
stos
sahf
xchg
or
push
push
jne
dec
shr
repz
rep
or
in
jmp
lock
pop
jge
nop
xor
mov
mov
movsb
mov
enter
pop
int
mov
popa
pop
mov
and
repnz
inc
dec
or
jp
lds
daa
das
sub
je
mov
in
out
cmp
lea
cmp
mov
dec
mov
subl
dec
adc
pop
movsb
dec
sbb
roll
cmc
adc
sub
testb
sbb
jp
pop
call
inc
adc
mov
inc
shrb
fcomps
adc
pop
fucom
mov
pop
test
xlat
jmp
mov
push
pop
sbb
cli
xor
jbe
ds
lahf
add
xor
das
cmp
ds
sbb
pop
fnstenv
xchg
sub
fdivl
or
dec
and
paddsw
out
in
movsb
mov
adc
push
lods
mov
mov
out
rclb
out
dec
pop
fs
cmc
xchg
dec
adc
sti
loope
mov
shrl
xchg
xchg
sub
outsl
rcrl
cmp
fdivrl
or
pop
shll
mov
fcomps
das
fidivl
mov
shll
pop
sar
in
or
and
pop
mov
or
je
jmp
imul
add
push
fstps
das
cmp
scas
cltd
imul
fdivr
xchg
pop
mov
mov
ds
lret
push
mov
mov
push
add
dec
mov
sbb
push
add
out
sbb
inc
lods
dec
pop
pop
inc
or
xorl
out
dec
and
repz
pop
hlt
sub
fmull
mov
data16
outsb
jb
imul
sbb
inc
pop
out
adc
stos
inc
jb
ret
xor
cmp
mov
jg
add
les
mov
mov
insl
int3
xchg
scas
add
lods
rcrl
iret
jmp
stos
add
fcmovu
jecxz
sbb
xchg
out
cmp
leave
dec
ret
sub
je
and
mov
bound
jge
inc
pop
and
or
in
xchg
inc
shrl
pop
sbb
cmpsl
scas
jp
int3
es
popa
push
sub
cld
insl
shrb
cli
decl
jns
test
cmpsb
pushf
iret
js
movsb
pop
jns
imul
jnp
cmp
push
and
cli
sbb
add
mov
inc
cmp
pushf
jno
ret
notl
adc
pop
js
inc
loope
sub
mov
xchg
pop
sub
jbe
fucom
lock
cltd
cmp
add
les
shlb
or
xor
sbb
add
lahf
imul
cmp
xchg
jb
jge
mov
mov
dec
mov
cmp
and
imul
jb
das
push
sub
fidivs
popf
xchg
lea
insb
imul
push
aaa
icebp
jecxz
xchg
dec
imul
dec
jnp
or
adc
xchg
cmp
arpl
and
pop
mov
pop
shrl
out
mov
ds
adc
jb
jl
pop
out
lea
push
adc
insb
pop
sub
into
sub
mov
mov
bound
bound
mov
push
push
pop
xchg
arpl
mov
jmp
xor
dec
xor
jp
sub
mov
pop
ss
std
mov
jae
cmp
ljmp
sub
xchg
aaa
cld
test
in
sub
bound
xor
fxam
or
mov
mov
andb
mov
jns
in
in
mov
movsl
sub
push
xchg
outsb
pusha
xchg
lcall
fldenv
jnp
xor
mov
add
adc
mov
inc
loope
lret
iret
aad
add
ljmp
in
stos
fmull
push
jle
push
jbe
mov
les
sbb
xchg
call
sub
mov
pop
lea
sbb
adc
sti
push
adc
scas
lock
cmc
ret
dec
scas
pop
out
in
sbb
dec
inc
movsb
hlt
jmp
and
adc
dec
js
inc
in
movsl
jp
test
dec
sub
or
add
lahf
xchg
jne
mov
inc
in
mov
mov
imul
in
and
sbb
stc
aam
mov
shlb
cmp
mov
xchg
mov
cli
adc
dec
sub
xchg
adc
cmp
adc
jbe
pusha
out
sbb
shlb
clc
pusha
leave
pusha
xor
std
mov
shrl
cmpsl
out
push
sbb
shll
cltd
jge
lahf
jecxz
jle
int3
dec
push
fisubl
fldt
adc
adc
pop
sbb
rcrl
stos
sub
aam
enter
mov
and
inc
dec
ret
xlat
sti
fstpt
xchg
mov
adc
int3
fs
adc
daa
mov
testl
sbb
add
addr16
inc
lock
les
icebp
mov
in
mov
sub
popf
or
or
outsb
inc
test
adc
jnp
xchg
andl
mov
lds
mov
xchg
xchg
movsl
pop
pop
pop
dec
mov
fmull
ss
lods
hlt
inc
ljmp
cmp
jl
es
lret
sub
jge
mov
mov
rcll
or
or
push
xorl
in
xchg
sbb
pop
nop
ror
inc
psubb
xchg
and
ja
sbb
js
or
in
xchg
aas
in
popl
push
cmp
sbb
push
dec
roll
xor
add
adc
xchg
push
out
pop
cmp
aaa
jl
add
cmp
add
sti
cmp
inc
jb
ss
xchg
xchg
sub
stos
sbb
icebp
and
mov
jno
int3
mov
jo
inc
addr16
mov
cmp
mov
jns
into
and
dec
rcll
mov
dec
jmp
lret
ret
sbb
mov
std
test
addr16
mov
popf
int
roll
mov
jne
and
jns
adc
pop
dec
and
shlb
pusha
test
lea
cmc
jp
bnd
and
push
sbb
test
adc
xchg
push
cmpsb
sub
mov
or
enter
imul
push
cwtl
inc
sbb
sub
push
sbb
jle
aas
pop
dec
popf
and
rcl
test
cmp
into
lods
lods
cmpl
aam
mul
ret
test
outsl
push
adc
into
or
xchg
hlt
iret
and
pop
inc
mov
or
fsubr
adc
imul
mov
mov
lret
sub
mov
shlb
xor
jge
mov
xor
or
sbb
push
out
nop
push
mov
mov
mov
pop
cmp
jns
jp
add
sbb
out
jmp
pop
pop
or
fsubl
rclb
xchg
fwait
dec
les
xchg
ret
cmc
idivb
xchg
sbbl
insb
or
push
mov
or
nop
fcoml
cmpl
fwait
dec
adc
in
xor
mov
or
sbb
pop
sbb
and
mov
inc
outsl
add
out
sub
lea
cmp
adc
pop
pop
push
sahf
fisubs
hlt
add
pop
stos
aas
int3
cmc
iret
mov
das
hlt
or
jns
sub
fld
in
outsl
and
lods
jecxz
and
and
repz
sarb
lods
xor
std
inc
incb
mov
adc
stos
inc
xor
or
in
mov
js
cltd
sub
popa
cwtl
push
jle
inc
push
cmpsl
in
add
mov
add
lea
mov
insl
lret
push
cmp
pop
cwtl
loopne
mov
int
pop
and
sub
es
mov
mov
repz
subb
neg
fwait
xchg
push
daa
push
mov
lret
mov
push
mov
pop
mov
adcb
or
mov
ja
mov
aas
xchg
push
xor
push
mov
push
mov
mov
arpl
jns
cmp
jmp
cmpsl
enter
cmp
ficoms
dec
cmp
xor
xor
inc
mov
inc
jns
sub
roll
into
mov
cmpxchg
cmpb
popf
mov
fsubs
inc
inc
ds
xlat
rolb
and
adc
loope
adc
sub
xor
push
xchg
insl
add
mov
clc
xor
mov
outsb
mov
mov
arpl
xchg
aaa
je
rcll
xor
inc
loop
dec
sub
lahf
dec
xchg
sbb
scas
iret
out
jo
nop
sbb
and
ret
sbb
inc
pusha
rorb
add
orb
xor
pop
pop
test
dec
cli
gs
pop
shll
scas
push
lods
jnp
in
test
cmc
dec
lea
mov
popa
arpl
xor
sbb
mov
xchg
dec
inc
in
mov
jge
and
sbb
clc
notl
repz
pop
mov
repz
inc
inc
repz
cwtl
xor
gs
push
mov
xchg
nop
cmp
pop
test
add
pop
lret
mov
mov
insb
pop
mov
fwait
push
cmp
adc
setns
mov
pop
mov
pop
aam
pop
pushf
or
pop
fs
mov
sbb
je
addr16
daa
jmp
jne
in
pop
shll
aad
xor
in
dec
push
and
mov
mov
testl
cld
iret
add
push
adc
xchg
imul
int
out
add
mov
movsb
xstore-rng
cmpsl
inc
add
in
mov
jg
xchg
imul
sbb
mov
cs
adc
mov
mov
jg
stos
pop
lock
bound
jmp
fdivs
int3
loopne
mov
push
addb
call
repz
loop
mov
push
cmp
jo
mov
jbe
std
pusha
xor
xor
and
std
gs
aas
rcrl
jno
mov
stos
cltd
pop
push
repz
and
sub
fnstsw
xchg
mov
sub
inc
cmp
jno
lahf
lods
mov
sbb
adc
sbb
adc
inc
mov
les
cli
mov
push
cmp
pcmpeqb
rcll
cli
push
lahf
cmp
sbb
mov
and
jno
mov
lods
mov
and
dec
sbb
jmp
add
dec
xlat
aaa
sbb
pop
push
cmp
daa
fcmovnu
pop
aas
dec
adc
push
sub
rol
iret
push
rorb
jnp
mov
pop
add
in
rorb
push
mov
add
dec
mov
mov
jno
push
sub
ljmp
ret
cld
pop
jecxz
enter
iret
movl
inc
stos
cmp
or
mov
jge
ret
inc
mov
mov
cmpsl
pop
pushf
pop
cmp
mov
or
dec
dec
rorl
icebp
mov
lahf
add
xor
test
gs
stos
xor
sub
loopne
inc
pop
sbb
push
rol
adc
mov
arpl
xor
shll
xchg
inc
push
lods
popf
xor
lret
data16
imulb
lods
out
xor
fstpl
xchg
hlt
add
mov
les
cmc
dec
dec
movsb
cmc
call
adc
sub
push
pop
incb
fnstcw
add
push
cltd
inc
and
lret
and
push
imul
adc
fisttpl
loope
cld
ja
arpl
imul
cmp
lret
loopne
push
pushf
dec
mov
pop
jle
lret
dec
jae
cmp
lahf
and
add
mulb
mov
xor
mov
pusha
lahf
ljmp
and
sti
dec
cmp
adc
adc
mov
nop
outsl
inc
ja
test
sbb
out
ret
or
jmp
aaa
inc
sub
test
rcr
jle
aas
aam
addr16
bound
adc
jb
jno
xchg
in
mov
mov
pop
orb
mov
shll
push
sub
mov
cmp
inc
push
push
push
mov
or
jae
jl
lock
rorb
in
pop
xor
jb
clc
inc
cld
fcompl
jnp
mov
jnp
out
das
and
shlb
inc
dec
loope
lock
or
jp
jb
xchg
mov
push
sahf
mov
jle
mov
ret
xor
dec
out
rorb
mov
xchg
iret
ljmp
lcall
jecxz
xchg
xchg
fists
adcl
pop
jecxz
gs
dec
nop
add
push
and
xor
lds
inc
cltd
dec
pushl
dec
mov
pusha
push
add
mov
mov
inc
fucomi
jnp
cwtl
hlt
insl
and
outsl
sahf
pop
pop
pmaxsw
inc
dec
movsl
dec
addr16
xor
je
cltd
xchg
sahf
push
jp
or
dec
xchg
xchg
pop
xchg
je
push
push
aas
cwtl
and
add
sub
push
pop
jmp
mov
imul
hlt
push
and
outsb
sti
cmp
jle
mov
movsb
aam
lret
and
fstpt
fidivs
mov
mov
xor
clc
and
shll
loopne
fldt
pop
dec
aam
dec
or
xchg
mov
mov
or
out
adc
sub
mov
xchg
les
sub
pop
mov
shlb
pop
mov
pop
sbb
xor
outsl
insl
pop
movsb
push
xchg
xor
xchg
daa
cmp
mov
sbb
add
cmp
xchg
lods
xor
jge
mov
push
mov
cmp
jnp
mov
pop
cmc
jo
or
daa
push
inc
in
xchg
and
aam
push
jg
popf
sbb
mov
aad
inc
or
in
cmpl
mov
add
cmc
out
mov
sub
mov
pop
dec
inc
adc
push
test
pop
xchg
fists
outsl
in
call
mov
lret
outsl
fs
jmp
lock
pop
cmc
cs
pushf
rorl
push
add
xor
mov
or
mov
jnp
dec
test
mov
sar
mov
jmp
sub
inc
out
cmpsl
mov
pop
sbb
mov
push
sub
into
xor
lea
inc
sbb
or
scas
push
stos
adc
dec
sbb
xor
push
jg
cmpsb
inc
lods
push
lret
es
dec
mov
mov
repnz
fisttpl
lea
xor
jp
aaa
push
pop
data16
dec
mov
loop
pop
mov
in
fstp
mov
mov
xchg
xchg
imull
fists
mov
mov
add
inc
jg
or
cs
imul
sbb
push
and
mov
fidivs
sub
mov
pop
cli
stos
lret
mov
lods
mov
rorb
mov
jg
jnp,pn
ret
dec
imul
mov
inc
test
es
outsl
add
shll
jo
inc
cmp
adc
lea
insl
push
add
inc
aas
mov
cmp
mov
dec
sbb
push
or
mov
xchg
fucomp
int3
adc
jae
fsubrl
roll
mov
push
dec
xor
fs
subb
xchg
gs
in
and
inc
fimull
testl
push
in
and
adc
int
cmpsl
shlb
jp
mov
pop
mov
ss
cmp
cmpsl
or
out
pop
movsl
aaa
mov
in
dec
sbb
mov
sbb
leave
sti
push
xlat
aad
cwtl
dec
and
imul
shrb
loop
shrb
jae
lods
mov
lods
jl
cmp
pushf
mov
mov
es
dec
pop
ficomps
xor
jae
add
sarb
not
test
jnp
dec
push
std
imull
xor
arpl
mov
rcrb
negb
outsl
test
cwtl
cwtl
test
ja
rorl
negb
adc
pop
add
sub
scas
pop
sub
data16
sub
jle
or
test
push
mov
mov
iret
adc
mov
popa
mov
roll
lret
movsb
aas
or
shrb
jno
mov
aas
aas
subb
fists
je
in
dec
push
call
cmp
push
loope
xlat
out
or
push
lcall
rcrl
sub
cwtl
repz
cmpl
inc
mov
loopne
push
inc
test
dec
int
push
xor
mov
mov
ficoms
mov
adc
push
cmp
sbb
bound
pushf
pop
mov
xor
adc
pop
inc
sub
in
arpl
jge
loopne
jb
ret
adc
insb
lods
sub
cmp
iret
mov
imul
adc
out
aas
movsb
push
scas
js
xchg
gs
cli
fsts
repz
mov
pushf
in
sbb
shll
clc
scas
fsts
push
pop
out
mov
idivb
adc
stos
xchg
inc
sbb
xchg
and
outsb
mov
lds
sbbb
lahf
sub
repz
push
sub
aas
mov
lea
cli
mov
xlat
push
cmp
push
in
imul
stc
or
int3
add
add
push
jbe
cltd
lret
xchg
shll
push
sti
cmp
pop
sub
and
xchg
sbb
push
les
pop
mov
xor
dec
dec
add
xchg
push
dec
arpl
test
into
dec
lcall
sbb
pop
imul
mov
or
sbb
mov
adc
sti
lods
call
xchg
aam
lea
call
adc
adc
cmpsb
loop
xchg
data16
hlt
jno
pop
cltd
jp
stc
and
mov
adcb
mov
aas
add
mov
or
add
insb
in
adc
pushf
popa
pushf
cmpl
push
mov
fimuls
in
push
adc
mov
cmp
mov
or
enter
cmp
into
mov
mov
jnp
mov
ds
fnsetpm(287
ss
add
cmp
and
inc
fcoms
xchg
sub
gs
rcl
ja
inc
andl
cmc
mov
or
xor
dec
push
pop
int
mov
jae
call
sbb
lret
iret
dec
add
pop
mov
pushf
cmp
pop
dec
jbe
push
fsts
sub
lcall
push
mov
xchg
gs
frndint
insl
sti
push
and
jnp
push
and
xor
mov
fwait
outsb
scas
push
dec
sbb
js
das
push
ds
mov
push
mov
pop
lret
pop
hlt
mov
push
sub
das
out
stos
cmc
and
cmp
stos
dec
pop
xor
mov
in
lods
lods
xor
jae
ss
jns
leave
push
adc
scas
add
cmpsb
sti
sbb
xor
mov
mov
incb
jp
and
and
xor
xchg
or
xor
jle
pushf
std
push
cmp
and
dec
imul
je
shrb
cld
xor
cld
insl
scas
data16
int3
add
mov
inc
xchg
mov
int3
xchg
in
sub
rclb
call
mov
lcall
push
out
mov
cmc
xlat
imul
inc
mov
adc
sub
filds
mov
mov
pop
cmc
test
jbe
pushf
dec
sbb
xor
mov
or
outsl
lods
loopne
rol
insb
jge
mov
mov
rcl
dec
xor
lret
mov
mov
mov
sub
inc
test
movsl
mov
or
mov
and
jl
xor
and
shll
sbb
data16
xor
inc
stc
mov
cmc
repnz
fs
pop
mov
mov
pop
movsl
sbb
int3
push
rcrb
in
repz
mov
pop
cmpsl
cmpsb
inc
imul
shl
pop
pop
push
xchg
xchg
loopne
and
sahf
pop
out
and
test
addb
daa
xchg
leave
xchg
shll
sub
cmp
add
and
shl
adc
xchg
sahf
sub
adc
in
lods
mov
cli
bound
inc
pop
testb
xlat
pop
add
cltd
mov
adc
fidivrs
xor
adc
mov
shlb
xor
inc
mov
nop
jge
js
cld
es
int3
and
jb
in
and
mov
cmp
clc
stc
dec
fidivl
or
cmp
vmovd
int
fwait
sahf
mov
scas
and
mov
adc
dec
bound
cmpsb
cld
cmp
adc
test
sbb
inc
int3
cmp
stos
xor
add
fstl
jno
stos
cmc
cmp
aad
fsubrl
or
inc
stc
xor
mov
out
cmp
fsts
jbe
jb
push
jle
mov
lods
leave
sbb
testl
stc
andl
addb
loop
xchg
dec
outsl
fmuls
sbbl
int
out
out
pop
pop
lods
out
xchg
xor
pop
add
iret
test
lahf
or
stos
add
sti
mov
push
shr
sarl
loop
fs
loop
das
popa
aad
xchg
mov
mov
xchg
jns
sbb
mov
adc
rorl
scas
fldz
adc
sub
into
pop
inc
jp
das
mov
push
mov
inc
out
outsl
imul
pop
out
xchg
adc
popf
notb
inc
and
je
jb
insl
inc
imul
fwait
dec
push
sub
mov
stos
aad
fldt
icebp
jmp
imul
rcrl
or
in
fsubp
push
and
test
inc
ja
xchg
xor
test
pop
jge
daa
xor
fsubrl
add
insb
fldenv
sbb
mov
jmp
push
les
jge
mov
xor
cmp
inc
or
lods
ljmp
mov
jl
jecxz
dec
mov
daa
mov
cmp
ja
sarl
add
mov
cmp
pop
push
adc
stos
mov
testl
push
xchg
jge
inc
icebp
cmp
push
pop
jo
mov
dec
mov
and
mov
pop
mov
dec
paddb
cmp
xor
mov
ja
cmp
test
mov
bound
bswap
push
xor
mov
nop
mov
push
mov
jecxz
aad
dec
jge
add
inc
iret
or
sub
cmc
cmp
negb
mov
cltd
rol
xchg
mov
mov
push
push
mov
sub
adc
and
andl
dec
sahf
xchg
shrb
pop
cmp
icebp
xor
push
mov
pusha
xchg
aas
sub
pop
andb
fdivr
xor
or
ss
sbb
mov
outsb
fldcw
out
testl
daa
shlb
repz
les
sub
add
mov
cmp
and
fidivrs
ljmp
and
std
and
or
in
js
or
out
outsl
ds
pusha
test
mov
cmp
dec
inc
mov
pop
aam
and
dec
in
repz
imull
or
inc
mov
and
add
adc
das
lret
gs
pop
lcall
xchg
adc
add
xchg
shll
mov
cmp
jl
enter
call
mov
pusha
mov
repnz
rcr
outsb
dec
jl
inc
xchg
push
repz
xchg
test
cmp
jp
cmpb
lcall
adc
jb
pop
push
fldenv
lods
jle
push
jb
ja
nop
dec
cmpsb
pop
fs
nop
ret
lahf
bound
addb
clc
xchg
pop
add
pop
xor
stos
push
mov
pop
inc
dec
inc
sbb
cmp
and
in
cwtl
dec
jb
jne
lret
int
mov
add
stos
cmpsb
aad
jb
jle
lods
sbb
in
cmpsl
mov
xor
push
jecxz
sbbb
clc
pop
xchg
mov
xor
arpl
mov
pop
les
call
mov
or
sub
movsl
cld
and
jecxz
pop
lods
cmp
aaa
pushf
lret
jge
imul
cmp
movsl
sbb
mov
xchg
ss
push
adc
fmuls
pop
xchg
es
xor
test
mov
sahf
mov
popf
scas
push
jb
sbb
cltd
mov
loopne
icebp
dec
pushf
jl
jp
push
push
sbb
jb
fstpl
dec
ret
inc
fidivl
cmpsl
mov
fcoml
lods
hlt
dec
jns
add
sbb
cmp
adc
clc
jae
mov
inc
dec
xor
mov
or
xchg
js
xor
std
jbe
sub
xor
bound
mov
mov
int3
inc
into
sub
scas
pushf
jg
bound
inc
bound
push
fisttpl
in
jns
adc
add
repz
or
clc
lods
mov
mov
lock
popf
call
sub
push
aam
jp
in
push
jp
movsb
or
mov
jle
jp
bound
fstps
xchg
int
mov
pop
mov
dec
mov
enter
sbb
xchg
fisttps
inc
jmp
mov
stos
push
das
pop
jo
ret
movsb
jns
js
movsb
adc
xlat
les
das
ds
jp
sub
aam
loop
adc
das
ret
out
jge
dec
sub
or
mov
stos
pushf
adc
mov
jl
gs
leave
cmpsl
scas
dec
cmp
xor
pop
aaa
jb
paddb
nop
push
add
add
fsubp
xor
loop
cmpsb
sarl
std
aaa
xchg
lods
pop
and
sbb
fucomi
cli
pop
fildl
les
lds
mov
mov
jp
and
xor
pop
push
mov
cmp
imul
imul
fdivrl
pop
or
cmp
cmp
bound
ss
cs
iret
sbb
dec
fisttpll
frstor
sub
pushl
inc
outsb
push
into
sbb
xchg
leave
adc
dec
das
popa
push
orl
inc
scas
inc
xchg
xor
test
and
inc
pop
xor
push
push
insl
dec
imul
in
sub
out
sbb
push
mov
jge
fwait
xor
roll
fisttpl
xchg
icebp
jmp
fst
xchg
les
push
mov
jmp
sbb
pop
push
insb
sarb
xchg
add
mov
cmp
sahf
xor
pop
cmp
push
je
mov
scas
cli
out
dec
sub
or
in
and
lods
mov
addb
xor
addr16
cwtl
pop
push
pop
inc
pop
or
dec
mov
mov
in
jbe
adcl
das
push
xor
push
xchg
push
lock
mov
movsl
push
shll
jnp
in
imul
mov
icebp
inc
adc
mov
push
and
mov
inc
mov
out
das
in
sub
fiaddl
movsb
aam
adc
mov
sbb
adc
es
mov
insl
data16
das
cli
adc
adc
outsb
mov
imulb
ret
cmp
mov
outsb
ret
sbb
push
mov
aam
cmpb
jns
push
dec
jge
loop
fisubs
movsl
ret
mov
jg
mov
add
mov
sub
add
ficoml
ljmp
lods
and
adc
cld
xchg
mov
add
push
cmp
lods
rolb
push
subb
lcall
xchg
rcll
mov
xor
dec
scas
jecxz
or
into
and
lods
cmc
adc
xchg
fwait
add
and
inc
test
adc
movsl
adc
sti
push
pop
ds
ds
repz
sbb
jg
xor
lock
in
lods
cs
ds
pop
dec
out
mov
xchg
push
fldl
ja
xchg
jp
nop
mov
xchg
lret
pop
sub
push
lahf
and
mov
bnd
push
fiaddl
mov
jo
fnstsw
push
jge
cwtl
xor
sbb
jns
mov
mov
xchg
mov
aas
xchg
or
leave
mov
sahf
cltd
sti
in
daa
nop
loop
push
mov
lret
sub
sub
mov
ret
cmpsb
add
fldcw
mov
cmpsl
ss
iret
jp
addr16
jmp
js
dec
lds
arpl
insb
pop
sub
cmp
mov
adc
pop
mov
test
or
xor
adc
in
insb
pop
shr
jecxz
and
mov
xchg
fmull
into
mov
adcl
pop
jne
push
push
pop
mov
arpl
inc
and
inc
dec
push
nop
add
lret
dec
mov
pop
outsb
adc
jns
or
push
jecxz
clc
loopne
xchg
sub
repnz
and
repz
call
insl
or
ljmp
pop
fidivs
jno
fsubl
pushf
adc
in
pop
xchg
cli
cli
ret
push
lods
sbbb
pop
je
fdivl
fistl
xor
xor
ss
in
push
xchg
sub
jg
clc
ds
or
outsl
scas
xchg
or
dec
push
xchg
push
addl
pop
addr16
sub
or
pop
jg
fsubs
inc
mov
add
push
lahf
mov
loope
lahf
test
cmpsl
xor
xor
cltd
mov
cwtl
cmp
sbb
daa
ret
inc
pop
xlat
repnz
xchg
push
aaa
pop
fdivs
mov
pop
sub
cld
mov
fdivrp
imul
push
into
loopne
aad
sub
jmp
or
lods
out
cs
loopne
scas
xchg
xlat
inc
jno
or
or
lds
cmp
push
cmp
jp
xor
mov
xor
pop
sub
jl
hlt
xor
roll
cmp
dec
push
dec
movb
mov
shlb
jmp
push
loope
subl
and
push
sbb
xchg
icebp
pusha
daa
sarl
mov
test
xchg
jnp
sub
icebp
mov
jmp
jge
or
xlat
es
mov
or
xor
push
in
sbb
add
pop
loope
das
insb
inc
dec
lock
fstps
xor
insb
xchg
cmp
rcrb
mov
inc
sbb
push
lret
std
xchg
dec
or
pop
popf
inc
mov
jl
mov
test
push
xor
clc
dec
push
je
outsl
or
arpl
or
sub
aam
jae
xchg
add
jp
aad
sbb
pop
in
jl
fs
dec
aaa
data16
leave
scas
aaa
dec
cmp
push
add
movsl
xchg
aaa
jmp
ret
cmp
sbb
dec
fdivl
mov
inc
pop
loopne
hlt
cmpsb
int3
mov
inc
cltd
js
test
cmc
push
and
and
jp
xor
push
fcmovbe
in
insl
fimull
add
inc
lods
sub
int3
in
test
addr16
mov
hlt
mov
cmpsl
int
and
cmc
lret
loope
ror
testb
ss
movl
xor
mulb
das
bound
ret
int
fistpl
or
mov
pushf
mov
dec
pop
pop
mov
mov
xchg
gs
add
push
orb
or
push
movl
push
inc
das
sub
in
cwtl
loopne
inc
repnz
mov
movsl
loope
jae
adc
bound
and
leave
fbld
jns
jae
adc
cmp
pop
shl
icebp
cmp
fisttpl
jns
dec
gs
adc
mov
jp
cwtl
sub
ds
ud1
sbbl
mov
add
sub
dec
sbb
aas
push
adc
mov
out
out
push
loope
lret
out
add
pop
xor
mov
out
pop
in
pop
es
bound
das
addb
mov
xor
add
adc
inc
movsb
mov
and
cmc
sar
jne
adc
cmp
cmp
stos
jp
inc
fdivrs
adc
xor
xor
sub
cmp
out
sbb
test
cli
movb
or
push
sar
icebp
cmp
mov
sub
loop
xor
and
mov
mov
mov
mov
pop
mov
movsb
insb
push
imul
je
repnz
loopne
push
sbb
pop
popf
sbb
adc
mov
sbb
ljmp
gs
ds
push
lock
mov
sub
imul
mov
jns
inc
rorl
adc
or
inc
out
stos
dec
and
pop
inc
fmuls
mov
mov
inc
loope
cwtl
aas
repnz
xor
mov
or
mov
jecxz
mov
mov
aaa
add
call
test
and
mov
popf
and
mov
inc
xor
sahf
xor
fs
movsl
aam
nop
cmp
pusha
iret
mov
xchg
pop
in
loop
xor
lods
xchg
daa
aas
pop
or
fistpl
adc
pusha
jl
cmp
lahf
mov
int
add
xchg
inc
mov
jg
xorl
out
imull
cltd
pop
sub
push
mov
repnz
fs
xor
shlb
push
add
push
pop
inc
push
xor
movsb
mov
push
push
jg
xor
lds
lods
sbb
sub
cld
lcall
cltd
pop
insl
lods
push
cmp
and
cwtl
divl
hlt
push
mov
stos
and
enter
adc
inc
mov
cli
mov
sub
lahf
dec
outsb
ret
les
or
xor
xchg
dec
testl
cmpl
mov
add
addl
icebp
daa
pushf
es
adc
popf
mov
pop
arpl
jnp
dec
push
jp
idivl
call
mov
and
popa
jmp
adc
repz
mov
cwtl
mov
adc
xor
sahf
imul
cmp
test
adc
repz
xchg
fildl
mov
xor
shrb
sub
push
adc
mov
push
pop
in
pop
inc
clc
loopne
push
dec
outsb
fldl
add
sahf
add
adc
cld
fcmovu
mov
je
pop
sbb
shrb
jo
scas
and
ds
cmp
jg
mov
add
outsl
mov
pushl
adc
mov
imul
inc
popf
mov
inc
imul
fs
xchg
into
xchg
arpl
or
inc
dec
jle
enter
dec
imul
aam
mov
insl
push
pusha
jp
mov
dec
aad
xchg
imull
and
xlat
insl
cmp
loop
mov
jns
ret
cwtl
call
in
mov
jae
dec
insl
fstl
int3
push
call
incb
and
dec
loopne
mov
or
xlat
rcrl
sbb
dec
xchg
scas
cmp
sub
xchg
pop
mov
dec
xor
inc
add
xor
xchg
es
mov
daa
mov
adc
add
push
arpl
fcoml
out
and
loopne
test
add
sbb
push
orb
mov
arpl
pop
and
jmp
cli
clc
aad
or
fistl
sbb
lcall
adcl
adc
ljmp
rclb
int3
cmp
lret
jle
xchg
pop
xor
mov
add
orb
roll
push
adc
out
inc
jmp
test
jns
int
test
stos
mov
adc
and
fstpt
sub
mov
stos
es
stos
aas
faddl
test
call
push
icebp
enter
testl
lods
es
xorb
test
dec
hlt
dec
lret
cs
dec
lds
mov
push
and
cltd
es
in
xchg
dec
in
mov
les
adc
push
push
or
stc
mov
pushf
lea
sarl
test
pop
mov
testb
xlat
mov
jl
ja
xchg
jl
sbb
xchg
cmp
sahf
jbe
fucomp
cmpsl
addl
cmc
stos
sbb
sub
sahf
mov
or
sbb
push
ret
jne
jmp
sbb
adc
lods
mov
es
jl
add
pusha
das
adc
loope
pop
pop
es
jp
bound
mov
lods
cmc
into
push
iret
mov
push
and
dec
fcoms
sahf
out
cs
ja
imul
ds
pop
mov
sahf
add
pop
es
pop
dec
jns
xor
pop
push
pop
sarb
cmp
decb
sbb
hlt
push
jmp
cmp
out
add
sbb
test
mov
cwtl
push
xchg
adc
popf
and
cmpb
and
dec
jp
mov
push
pop
add
int3
cwtl
mov
fimuls
loop
push
or
orb
sub
dec
sbb
add
adc
cmp
nop
jmp
daa
push
dec
xchg
cltd
sbbl
cmp
daa
ds
add
xor
add
nop
pop
jno
pop
xchg
push
add
add
or
fs
test
mov
xchg
xchg
rcr
mov
pusha
jne
ljmp
out
out
addr16
gs
lods
cmp
pusha
shrl
xchg
mulb
test
cltd
jo
jae
popa
stos
shrb
cmp
enter
repnz
iret
jp
fidivrl
lret
mov
int
push
inc
es
mov
insl
f2xm1
push
push
ss
movsl
or
xor
js
cmp
scas
addr16
subl
enter
in
or
inc
rcll
repz
das
seto
shrb
bound
fs
ret
xchg
adc
push
or
fidivrl
lods
cwtl
fs
xor
dec
rorb
or
pop
xor
cmp
pop
and
inc
add
test
or
popa
xor
arpl
in
adc
inc
fstpt
cmpb
pop
xorps
rclb
push
jmp
xchg
inc
cmp
icebp
in
jnp
mov
sbb
pop
js
les
lea
cmp
xchg
adc
jp
cwtl
adc
es
imul
test
sbb
cmpsl
mov
fimuls
mov
mov
fwait
xchg
jecxz
iret
mov
pop
mov
push
in
mov
dec
jbe
popf
mov
adc
dec
xor
inc
adc
jns
inc
pop
inc
sbb
sbb
mov
arpl
xor
mov
xor
sarb
mov
mov
adc
loop
lea
cmp
push
cmp
mov
push
pop
icebp
loopnew
sub
mov
jb
add
or
ss
jl
outsl
leave
enter
push
in
rorl
dec
push
inc
lods
insb
mov
and
je
test
stos
movsl
mov
jb
mov
add
and
inc
cwtl
rolb
push
test
js
push
jp
jne
jle
cmc
in
xchg
cmc
scas
sahf
xchg
and
sarl
adc
cmc
mov
jg
mov
ds
dec
mov
cmp
nop
popf
cmpsl
xchg
mov
sahf
repnz
mov
nop
cs
xchg
mov
mov
stc
mov
jg
lret
gs
mov
in
cmpsl
mov
cmp
popf
shlb
in
inc
imul
or
das
enter
pop
jne
das
push
mov
repz
shlb
mov
fdivl
add
jns
sub
das
movsl
xor
mov
fimull
sub
js
enter
sbb
and
or
repz
hlt
testl
mov
jle
adc
jno
incl
cmpsb
jno
das
addr16
aad
ja,pt
pusha
loope
inc
cli
mov
sub
cmp
addr16
arpl
jle
and
dec
daa
in
stc
inc
cmpsb
jne
orb
out
push
enter
leave
and
jmp
or
ret
mov
jle
shlb
aaa
repnz
mov
scas
jo
mov
sub
cmp
push
stc
ds
into
xchg
stos
xchg
cmp
pop
lds
mov
dec
add
and
xor
lret
in
jmp
js
movsb
insl
cmp
dec
je
jbe
xor
sbb
icebp
inc
mov
and
into
jmp
pop
push
gs
filds
seto
and
fwait
and
fcmovnbe
das
adc
cmp
jp
aad
and
lcall
test
jo
and
imul
mov
jg
lods
inc
enter
std
movsb
push
jl
xor
jmp
cmp
dec
lods
push
leave
pop
out
outsl
inc
mov
rcll
and
inc
pop
xchg
dec
mov
gs
lret
lea
loope
fnsave
xchg
inc
xchg
or
inc
ljmp
or
cmpsl
adc
push
bound
mov
mov
lods
inc
test
shll
shr
leave
dec
add
sub
hlt
xor
fldl
push
xchg
stc
sbb
jp
jge
jno
fcoml
pop
ret
push
int3
adc
js
jmp
xchg
loope
jns
std
xchg
andb
adc
push
xchg
ljmp
test
push
sub
rcr
arpl
test
adc
imul
sbb
aaa
out
lret
push
jo
and
add
mov
xchg
or
mov
sbb
sbb
sti
xor
in
xchg
sub
dec
shr
adcb
cmpsl
jp
mov
adc
xor
negl
xchg
lods
clc
xor
ror
pop
jb
mov
pop
lock
pushw
mov
mov
fwait
leave
out
and
pop
xchg
xchg
out
in
push
mov
ret
push
jae
sub
fmuls
stos
cmp
cmpsl
adc
pop
dec
lods
xchg
cwtl
lahf
and
shrb
test
mov
mov
cmp
cwtd
sub
jbe
and
rorb
int3
jne
cmp
into
int3
and
imul
xchg
inc
in
rolb
fisttpl
loop
in
test
bound
loopne
mov
cbtw
cmpsb
mov
jne
dec
fbstp
sub
sbb
push
out
adc
cmpsb
hlt
das
outsl
fstl
rorl
xchg
ljmp
icebp
mov
clc
jo
jo
pop
inc
push
fbld
fidivs
push
lods
mov
pop
inc
xor
xlat
bound
xchg
mov
mov
rorl
stos
mov
loop
and
loopne
cli
mov
jle
inc
inc
xchg
jmp
mov
inc
mov
repnz
cmpsl
cwtl
jae
call
push
jg
push
mov
daa
rorl
sbb
xchg
dec
sarb
add
popa
stos
push
lods
mov
xor
mov
sub
cmpsb
lods
mov
sbb
int
xor
rolb
mov
js
ds
and
xlat
imul
jno
push
mov
xor
rol
add
cli
xchg
push
xchg
jnp
enter
inc
cwtl
lods
jno
repnz
rcl
jmp
stc
mov
icebp
xlat
jae
push
and
fldcw
xchg
cmp
inc
add
lahf
cmp
push
inc
add
cmc
sbb
pop
mov
mov
jge
adc
in
jb
pop
mov
jle
fs
lods
loop
repz
inc
sar
inc
in
mov
mov
out
icebp
loop
xlat
push
shlb
mov
or
int
mov
dec
mov
rorb
outsb
sti
dec
xchg
cld
mov
popf
scas
ret
xchg
test
testb
loopne
dec
mov
repz
jno,pt
es
addr16
mov
pcmpgtb
push
das
cmp
cmp
mov
push
sbb
shlb
stos
loopne
fs
mov
push
dec
mov
or
inc
sbb
lret
xchg
stc
push
sbb
and
add
cmc
ljmp
inc
pop
push
ret
inc
fsubrl
in
xor
insl
cmp
xorl
daa
pop
sub
clc
xchg
into
adc
in
fdiv
fnstenv
stos
in
cmp
imul
insl
push
es
fwait
arpl
clc
sub
push
fs
jnp
fdivs
xchg
pslld
js
pop
sbb
xchg
pop
push
fcomi
cltd
call
cmp
push
jecxz
out
ret
rcrb
fisubrl
repz
mov
filds
dec
adc
scas
or
js
mov
xlat
sub
in
insb
jae
push
fwait
es
xchg
nop
or
xchg
and
cmc
popa
out
and
or
mov
fidivrl
adc
fidivrs
and
out
dec
fs
fadds
mov
dec
repnz
xchg
dec
xchg
cmpsl
jp
fbstp
jbe
lret
imul
add
cmp
sbb
addr16
cmpsl
add
xchg
pop
cmp
sub
sbb
cmpsb
maxps
insb
fildl
push
loopne
sti
mov
cmpsl
sahf
sbb
ret
repnz
xor
or
pusha
hlt
out
inc
jge
fisttpl
shrb
push
imul
xchg
js
or
adc
push
mov
dec
int
mov
inc
lret
or
sahf
leave
push
pop
mov
jno
pop
pop
jmp
nop
cltd
test
aaa
sub
or
mov
xchg
je
sub
xor
xchg
dec
ret
add
ret
lods
stos
cmp
paddsb
pop
cltd
test
imul
adc
and
ret
scas
popa
notl
pop
cmp
xlat
mov
call
mov
xchg
sarb
mov
insb
or
dec
and
gs
add
ficoms
sub
add
pop
jle
iret
jmp
push
inc
lret
dec
mov
leave
sarl
and
aam
mov
ret
clc
icebp
decb
ljmp
adc
jp
lea
push
stos
inc
push
sbb
fcompl
aaa
das
jbe
push
add
subl
cmp
fs
leave
es
mov
pop
movsb
pop
mov
or
cltd
sub
stc
or
and
aas
dec
in
dec
out
repnz
fisubs
in
mov
mov
pop
pop
cld
aam
xchg
mov
mov
push
pop
aas
inc
out
xor
mov
fs
cwtl
enter
aaa
jle
inc
pop
xor
loop
pop
iret
sbb
push
sub
jne
mov
hlt
inc
cltd
jnp
pop
addr16
es
cld
nop
popa
adc
or
loopne
loop
loope
or
lds
or
mov
addr16
jmp
xlat
mov
mov
leave
pop
fidivrs
sub
mov
lret
int
jle
inc
icebp
jecxz
out
or
xchg
push
out
xor
push
xchg
sahf
je
adc
aas
sarb
rcrb
xor
das
sarl
mov
subb
fisubrl
mov
pop
fs
dec
or
push
fmuls
cmp
ret
mov
repnz
cli
decb
jg
fwait
cmp
mov
pusha
inc
lret
aaa
push
data16
mov
into
push
dec
fnstsw
push
inc
stc
sbb
pop
inc
jg
data16
mov
stos
je
loope
cs
fistl
push
inc
es
fs
xor
dec
adc
cmp
and
cmp
stc
les
lock
fldcw
jp
mov
push
sahf
jne
call
and
incl
test
mov
fucom
mov
push
sub
inc
mov
dec
ret
mov
inc
int
sbb
xchg
inc
fwait
arpl
inc
dec
push
adc
jg
or
push
andl
mov
or
or
cwtl
movsb
mov
rcrb
sub
add
push
sti
sbb
mov
cmc
mov
mov
popa
arpl
cmp
aam
sbb
cmc
fcoms
mov
movsb
mov
imul
sub
xor
sub
add
loopne
or
dec
rorb
cmp
pop
lods
push
mov
sub
adc
sbb
data16
dec
mov
fistl
xchg
sti
mov
adc
xor
test
mov
bnd
sbb
jle
pop
or
daa
sub
fstp
or
daa
sbb
ja
dec
stos
push
daa
je
inc
outsl
cmpsb
inc
inc
fldenv
pop
pop
sbb
adc
dec
xchg
addr16
lods
xor
ret
xor
inc
adc
arpl
xchg
lahf
ss
gs
cmp
fmuls
into
push
inc
fiaddl
or
and
fstps
xlat
das
inc
push
push
insb
mov
aaa
pop
aas
cmp
add
mov
insl
sbb
mov
dec
iret
xor
mov
popf
sub
mov
xor
nop
push
cmc
popa
outsl
movsb
cmc
jge
push
push
divl
test
outsl
in
orb
fwait
mov
jl
insb
lahf
xchg
add
je
int3
or
pop
pop
or
adc
jnp
cli
sbb
mov
in
fwait
lock
sti
mov
push
cmpl
leave
loop
jge
pusha
push
testb
jae
std
push
push
std
inc
push
imul
pop
cmp
hlt
lock
mov
mov
mov
push
pop
andb
push
ja
mov
mov
pop
adc
mov
popa
and
lret
fidivs
cmpsb
push
or
xchg
or
push
lods
dec
sub
add
ja
pop
and
int3
loop
xlat
mov
movsl
and
sbb
cmp
adc
lcall
fnstenv
nop
jmp
sti
pop
arpl
jne
nop
xchg
jbe
int3
add
leave
in
or
add
mov
pop
fbld
xchg
mov
pop
les
mov
and
lock
cli
xchg
inc
add
pop
mov
int3
cmc
push
shl
stos
or
dec
lock
mov
andl
ficompl
xlat
pusha
outsb
daa
ljmp
test
fs
stos
ja
and
mov
pusha
clc
dec
cmp
cmpsl
pop
movsl
enter
fdivrs
mov
jmp
lds
or
lods
int
imul
inc
adc
push
and
fistpll
fs
in
xchg
sbb
push
push
adc
push
or
ja
into
xchg
add
stc
jbe
and
push
lcall
push
mov
jp
lods
stos
rclb
pop
out
jl
cmp
mov
mov
loopne
aad
inc
inc
jecxz
popf
les
popa
scas
popf
ret
lcall
or
mov
add
cltd
fstps
jno
out
jge
sbb
outsl
pushl
cmp
fdivs
mov
mov
std
sti
xchg
aad
enter
xor
stos
xchg
and
aad
mov
arpl
cmp
push
loope
lcall
xor
stos
dec
cmp
sti
dec
inc
jno
gs
push
push
cmp
push
test
je
or
jle
dec
sub
xchg
loope
adc
cmp
jne
xchg
movl
cmp
in
inc
xor
ret
mov
add
jmp
enter
daa
pop
pop
mov
mov
data16
gs
pop
cmc
jnp
xor
ja
inc
jmp
cmp
inc
cmp
pop
or
sbb
insl
sbb
int
dec
rorl
daa
lret
push
jecxz
dec
xchg
sbb
outsb
push
cmpsb
jl
fistpl
mov
adc
int
cmp
push
adc
fistpl
adc
mov
js
inc
pop
xchg
push
lods
arpl
mov
xor
lret
cmp
mov
sahf
pushf
dec
pop
gs
mov
lods
sbb
xchg
insb
xor
rclb
shll
imul
or
sbb
cmpsb
pop
lea
jl
dec
and
or
pop
icebp
sbb
xlat
stos
or
push
fisttpl
movsl
jmp
mov
enter
and
push
push
sub
scas
mov
jb
rcrl
mov
xchg
sbb
das
mov
fmulp
cmp
mov
adc
jbe
mov
out
insb
outsl
add
inc
ret
leave
cmp
inc
out
pop
dec
ficoml
dec
rep
jle
jecxz
push
sahf
sub
dec
int3
sub
test
xchg
lahf
mov
notb
pop
sub
fst
pop
cwtl
add
incb
and
pushf
movsl
mov
push
sbb
lock
mov
cmp
pop
xor
lret
lods
add
jg
sub
sbb
xchg
pop
push
movsb
loop
xchg
xor
push
and
ljmp
fwait
push
mov
gs
inc
xchg
push
and
int3
movsl
lret
add
mov
rclb
roll
push
mov
mov
incb
jge
popa
cmp
jle
lret
sub
aad
and
mov
dec
push
vphaddubq
mov
ror
xorb
lea
inc
scas
fpatan
icebp
divl
adc
call
cli
jbe
add
inc
lods
aaa
aad
cmp
shl
in
loop
xor
pop
push
xchg
jb
pushf
add
pop
mov
cli
jo
clc
mov
xor
movb
test
jns
fwait
and
cmp
pop
jle
js
flds
add
stos
loope
add
add
cmp
push
out
ljmp
insl
outsb
mov
aas
add
mov
aaa
loopne
mov
in
pop
enter
insl
pop
ljmp
dec
pop
lea
cmp
imul
lods
cld
and
popf
or
and
add
rolb
pop
sub
enter
and
push
fstpl
scas
or
sub
dec
mov
sub
icebp
lcall
stos
push
ds
in
push
dec
gs
cwtl
sub
sub
dec
xchg
insb
ret
pop
mov
cmp
insb
adc
inc
adcb
push
into
dec
jl
xor
lods
stos
adc
bound
int
and
sbb
push
fs
adc
lea
mov
mov
iret
sbb
pusha
cld
int
xor
imul
push
pop
pop
jne
xor
xchg
jl
add
jecxz
pop
inc
iret
imul
nop
push
mov
push
enter
mov
or
xor
pop
roll
and
dec
lods
xchg
mov
dec
dec
xchg
shl
arpl
orb
sub
mov
in
test
mov
repz
adc
lret
int
shlb
test
mov
gs
xor
xor
stos
iret
in
and
pop
push
cmp
mov
lret
dec
imul
arpl
outsb
xchg
leave
lret
pop
mov
ret
aam
rorb
push
sti
sbbl
sbb
dec
sahf
jle
sub
sarl
cmp
loope
lret
jb
lea
lcall
rcr
imul
es
outsl
jns
xchg
int3
stc
or
lock
ret
xchg
cmp
or
and
decl
push
add
cmp
cwtl
push
sub
ja
scas
mov
repnz
pop
cmpsb
leave
fistps
xchg
pop
stos
lret
stos
in
mov
rclb
fisttps
jae
pusha
or
lcall
add
inc
bnd
or
iret
inc
push
ss
fldenv
cld
addb
dec
xor
dec
add
adc
jle
add
pop
xlat
outsl
xlat
xchg
mov
and
int
fcompl
adc
mov
movsl
cmp
sbbl
and
rcr
test
cmp
into
or
ja
jb
jmp
vunpcklpd
pop
sbb
aam
pop
hlt
and
mov
xchg
mov
jg
incb
pop
sbbl
into
mov
xchg
enter
xor
inc
mov
fs
negb
insb
cmp
mov
mov
js
aad
sub
mov
stc
popf
inc
mov
lret
gs
mov
aas
push
cmp
inc
dec
add
xchg
jp
int3
or
adc
cmpsl
mov
and
loop
jo
jecxz
mov
test
xor
shrl
out
and
rclb
out
sbb
and
jnp
cmp
mov
adcl
shrb
repz
pushf
jecxz
enter
pop
pop
jb
loop
pop
in
or
add
cmpsl
fnstsw
jae
and
push
test
test
jbe
repnz
cli
xor
test
das
cmp
out
andb
ret
jnp
push
mov
lahf
jp
inc
arpl
and
notb
push
in
repz
xchg
int3
xchg
jle
idiv
popf
adc
pop
loope
lods
xchg
sahf
sbb
shrb
adc
hlt
mov
imul
cli
pop
push
adc
jle
rorb
cmc
out
cmpsb
xor
sub
enter
pop
mov
cwtl
pusha
jnp
xor
or
int3
inc
dec
jbe
mov
js
xchg
pop
cltd
mov
imul
inc
fdivr
shl
fldt
ds
and
jg
cmp
or
pop
mov
aas
jne
and
or
scas
sbb
xlat
cmpsl
cmc
xchg
jae
cs
mov
movsb
push
nop
test
cs
stos
sarl
xacquire
out
add
out
xlat
stc
sahf
sub
call
int3
dec
cmpsb
mov
ljmp
adc
cmp
iret
gs
shl
outsb
jbe
sbb
mov
push
mov
push
mov
js
fildll
sub
sub
cwtl
adc
push
jmp
and
xor
imul
push
dec
call
lds
jnp
sbb
sbb
ficompl
movl
inc
mov
jecxz
xchg
pop
mov
lret
les
push
sub
lret
jp
sub
pop
and
int3
inc
add
fwait
jns
adc
out
mov
adc
add
lds
outsb
lds
or
out
inc
add
push
or
cmpsl
daa
push
push
jecxz
test
mov
pop
ds
gs
sub
lods
out
loopne
leave
dec
sub
jne
sbb
mov
and
out
or
sub
adcb
mov
jne
jg
dec
pop
stc
sbb
push
cmovge
out
fcoml
sbb
lea
imul
addl
mov
pop
lcall
xchg
cmp
icebp
jg
sub
popf
cmp
xchg
push
mov
sbb
jle,pt
std
out
ds
js
inc
or
push
push
addb
cmp
cmp
jmp
jno
and
mov
mov
dec
loop
imul
ficoms
stos
mov
adc
pop
imul
popf
jle
pop
mov
add
push
sub
in
ret
push
test
mov
mov
xor
add
sarl
jmp
cmpsb
push
pushf
inc
pop
imul
jns
imul
and
repz
int3
or
inc
ret
out
mov
les
push
dec
test
pop
xor
filds
xor
leave
jle
jl
popa
insb
aad
mov
fs
fsubl
stos
or
cmp
sub
test
push
add
ss
rorl
ret
subl
push
push
insl
xor
stc
mov
pop
cmp
mov
mov
dec
push
push
das
cmp
add
adc
jne
pop
push
mov
pop
not
call
addr16
cmp
add
mov
mov
jbe
cpuid
and
add
and
dec
test
ret
scas
push
mov
fnstenv
imul
das
sti
or
fsubl
std
adc
hlt
sbb
hlt
and
push
jns
pop
jp
in
dec
lock
dec
bnd
aas
pop
sub
adc
ss
mov
mov
xchg
push
insb
dec
or
and
sahf
cmp
and
pop
inc
xorl
sahf
xorb
sbb
mov
sbb
ss
xchg
outsl
lea
sbb
xchg
aas
clc
in
lods
mov
shll
jge
pushf
mov
jg
push
xor
xchg
mov
xor
jnp
mov
cmp
add
neg
xchg
lret
inc
dec
lods
clc
mov
jmp
lret
insl
js
sub
std
pushl
out
cmpsb
mov
lock
sub
push
or
scas
negl
or
xchg
dec
out
dec
rorl
int3
shl
sub
jg
popa
push
sub
outsl
dec
pop
sbb
or
dec
cmp
xor
inc
orb
ljmp
jbe
and
and
enter
aad
shll
and
fstpt
imul
xchg
dec
mov
out
add
in
xor
flds
cmp
aad
imul
movsb
rcrl
sub
sub
inc
push
adc
mov
lret
pop
jb
xor
int3
loop
in
lahf
aaa
pop
out
popa
bound
and
or
cmc
dec
cld
in
mov
inc
sub
mov
jl
xor
mov
fs
push
adc
mov
std
or
push
xchg
mov
cmp
or
dec
xchg
mov
leave
leave
xlat
scas
in
push
mov
push
int3
mov
xchg
out
imul
gs
js
imul
mov
popf
imul
jg
sub
add
lret
pop
cmp
dec
popa
sbb
jg
mov
inc
test
aam
push
xorl
ja
cmp
sti
fdivrs
xchg
xorl
loop
sbbb
lret
push
sub
cltd
sbb
jge
movl
or
repnz
test
adc
cmp
jns
cmp
mov
cltd
adc
sbb
add
cmp
fildll
pop
pop
imul
and
outsl
and
add
push
mov
xchg
clc
pop
notl
or
mov
not
pop
inc
in
dec
jl
and
mov
add
fidivl
ss
dec
pop
mov
push
sbbl
iret
xchg
cmp
aas
fidivrl
dec
in
stos
mov
jle
aam
aad
xchg
cmp
rcrb
rcrl
xchg
gs
cs
and
push
mov
lea
pop
xchg
jp
fsubrs
inc
jb
pusha
xchg
mov
xchg
jno
das
fisubs
idivb
add
mov
cmp
dec
adc
ret
xor
cld
pop
or
push
and
lods
test
sub
jnp
adc
or
dec
lods
adc
out
pop
jns
jb
pop
insl
cmpl
les
add
xchg
lock
out
daa
je
sti
loopne
in
loope
leave
xchg
fdivs
cmpsl
orl
std
jg
ds
icebp
dec
xchg
pusha
dec
push
adc
dec
adc
xchg
adc
mov
dec
gs
push
gs
cli
arpl
sahf
nop
insl
adc
pop
push
sbb
or
leave
push
ja
mov
daa
add
shl
cmp
pop
pop
imul
xor
or
fldt
adc
cmc
xlat
das
int3
mov
mov
lret
push
mov
xchg
fmuls
sub
sub
mov
xlat
and
jno
cmp
inc
xor
or
push
fisttps
rol
add
inc
in
mov
xlat
sbb
fbstp
mov
int3
dec
pop
mov
mov
nop
sbb
xor
xor
jo
fs
xchg
and
mov
cmp
fdivr
sub
ljmp
insl
pop
pop
repnz
sbb
fdiv
inc
aad
jle
xchg
sbb
ds
cltd
sbb
ja
aam
notb
movsb
inc
popf
sti
jns
jns
aam
xchg
scas
add
shrl
adc
pusha
rcr
jle
rolb
outsb
in
sbb
aam
pop
jbe
xchg
xor
loopne
lret
mov
xchg
nop
int3
fstpt
cmpsb
xchg
dec
pop
test
cmp
roll
and
mov
and
mov
fs
push
shrb
push
jnp
and
test
movsl
or
pop
mov
jg
cltd
inc
xchg
push
fnstcw
mov
aas
dec
cmp
call
push
xor
repnz
rolb
imul
stos
and
test
es
inc
dec
in
inc
adc
data16
in
add
scas
mov
insb
stc
or
add
add
fstps
aad
mov
push
mov
jecxz
jns
sub
push
dec
call
insb
aaa
ljmp
add
insb
push
mov
aas
aaa
scas
dec
cwtl
fistps
adc
inc
xor
fcmovne
mov
inc
clc
add
xchg
leave
cmp
pop
mov
daa
in
lods
test
test
dec
cld
pop
inc
cmc
mov
idivl
stos
cmc
mov
xchg
lret
jb
pop
pop
insb
pushf
test
pusha
mov
inc
mov
sub
fdivrs
push
shll
mov
dec
and
sbb
xor
dec
cld
inc
push
push
divb
lahf
icebp
jl
js
sbb
add
or
icebp
and
in
fdivrs
ret
out
xchg
or
sahf
setb
push
xor
lret
data16
jo
push
mov
fwait
sti
aam
outsb
aas
add
sbb
sbb
add
rcrl
push
imul
mov
sbbb
shrl
inc
dec
clc
test
das
or
inc
push
sbbl
push
xchg
leave
sub
mov
pop
or
mov
cltd
leave
add
add
add
dec
imul
mov
ds
scas
rclb
push
scas
rol
sahf
lock
cmpsb
adc
loope
sbb
mov
aas
inc
mov
push
sub
mov
aad
adc
push
gs
jb
movsb
jo
nop
cld
and
cmp
push
mov
in
cwtl
sub
pop
dec
popf
jle
mov
xor
sub
mov
xrelease
enter
jecxz
push
jmp
and
xchg
testb
imul
cmp
sbb
dec
outsl
mov
sahf
jle
rcr
sbb
and
push
xor
nop
pop
xchg
popf
dec
push
cwtl
xor
mov
jno
test
add
aad
sub
loope
cs
daa
loop
out
test
jg
inc
mov
cwtl
adc
or
dec
pop
ljmp
xor
repnz
aad
test
xchg
into
lods
test
out
dec
add
sub
jne
mov
shlb
ss
push
mov
add
inc
or
icebp
mov
xchg
adc
movsb
aam
int
pop
jl
das
sub
inc
pop
cmp
xchg
idivl
pop
fcmovne
aas
adc
inc
pop
stos
ljmp
fisubrl
dec
add
push
pop
enter
lods
sbb
dec
lret
xchg
add
lret
lods
inc
or
lods
mov
and
inc
inc
call
sar
loop
stos
sbb
adc
add
xor
fdivp
std
insb
repnz
popf
lds
sbb
fisubrl
gs
xchg
loop
mov
fwait
sub
loope
sub
aad
dec
jmp
js
mov
fs
out
xchg
push
inc
std
cli
ljmp
popa
popa
sub
cs
subl
es
lret
cmp
mov
pushf
or
ds
jg
xor
loope
dec
adc
xlat
bound
add
rclb
insb
mov
test
jp
iret
pop
dec
sahf
in
insl
push
xlat
jecxz
or
movsl
add
dec
lods
sbb
xor
push
push
test
mov
dec
jno
test
pop
fldl
xlat
cmp
sub
loopne
ss
hlt
dec
stos
or
adc
daa
mov
ret
in
in
sbb
inc
jb
lret
out
arpl
jbe
aad
aaa
mov
xor
mov
stc
repz
xchg
push
push
call
sbb
push
iret
mov
outsb
inc
insb
cwtl
mov
add
push
repnz
mov
pop
or
sbb
das
xor
and
jb
cmp
ret
sbb
sub
in
pop
fisttpl
xor
movsb
jl
mov
sbb
sub
mov
push
mov
je
mov
or
sub
pushf
les
push
inc
insl
iret
mov
and
in
sub
sub
adc
jmp
negb
out
leave
fsubrp
gs
mov
stos
add
and
push
shlb
push
dec
dec
xchg
push
cmp
mov
xchg
shrb
fs
cmpl
enter
rclb
call
cmp
inc
xchg
nop
pushf
adc
push
fstl
out
sbb
xchg
js
sub
sti
cmpsl
inc
test
das
sarb
ror
inc
clc
aad
inc
imul
out
mov
mov
stos
inc
fcomps
loope
mov
rorb
inc
cwtl
pop
les
hlt
xchg
adc
out
adc
data16
jno
loopne
fwait
mov
dec
inc
mov
sbb
mov
pop
mov
insb
jnp
out
add
sub
clc
xchg
sbb
arpl
and
jo
mov
fsubs
dec
or
jo
push
lret
lea
dec
iret
adcl
cs
cmpsl
incb
adc
jno
inc
lret
or
dec
xorb
xchg
imul
jne
ss
shl
outsl
mov
or
mov
add
cli
mov
mov
fsubs
bound
push
repnz
aas
into
sbb
dec
inc
and
xor
cmpsb
in
gs
add
inc
stos
push
mov
mov
test
ljmp
ud0
std
pop
pop
iret
mov
xor
lock
sub
rcr
or
enter
jo
ficomps
xchg
jmp
add
icebp
sub
icebp
pop
insl
dec
xorl
push
aad
outsl
push
xor
aaa
scas
xor
xchg
pop
xchg
and
leave
shlb
dec
dec
addr16
adcl
ret
faddl
pop
test
loope
push
loopne
push
push
mov
dec
jge
jno
add
cmp
pusha
sub
pop
mov
mov
mov
xchg
arpl
xlat
fidivrs
test
aad
cmp
aad
fdivr
mov
mov
push
addl
enter
sub
inc
pop
outsb
add
out
in
push
add
aad
test
mov
not
jg
mov
mov
pushf
int
sub
movsl
dec
xor
push
mov
outsl
pop
or
inc
bound
test
ror
cmp
pop
fldcw
xchg
mov
das
out
es
mov
testl
notl
jmp
clc
jg
das
imul
sbb
outsl
loopne
add
cmp
inc
xchg
pop
scas
stos
cmpsl
mov
ja
push
push
jecxz
stos
lods
cwtl
jne
mov
sbb
mov
adc
test
adc
daa
or
sub
cmp
shll
push
lret
push
movsb
lea
inc
cmp
int3
xchg
jg
fidivl
xor
or
jl
inc
sub
in
scas
or
ret
pop
mov
outsb
adc
sbb
push
pop
leave
push
pop
push
xchg
in
sub
lret
lea
add
xchg
popf
call
mov
xor
addb
js
test
lahf
pushf
dec
imul
pop
loopne
aaa
mov
sub
adc
or
jne
lea
inc
test
jecxz
jecxz
loope
into
rep
push
adc
sub
and
outsl
sub
insb
push
flds
mov
sbb
push
out
mov
cwtd
fs
jp
xchg
sub
xorb
lods
sbb
jle
mov
sbb
or
push
or
fdivs
shlb
movsb
mov
stos
daa
xchg
push
mov
xchg
cmp
hlt
mov
push
mov
les
mov
xor
mov
fs
int3
insb
ret
lds
jbe
cmc
bnd
pop
repnz
fxch
in
jae
loope
lock
loop
call
pusha
negl
mov
fwait
push
pop
std
pop
add
mov
jae
insl
dec
loope
pop
or
mov
mov
ret
shll
lods
rcrl
add
add
push
xchg
mov
push
enter
ss
imul
xlat
sbb
add
scas
mov
rcrb
cmovge
movsl
or
scas
icebp
cmp
add
shll
mov
and
dec
aam
frstor
adcb
in
test
ss
repz
pop
mov
icebp
out
xor
jae
aas
lods
jp
pop
outsb
xchg
notl
dec
mov
into
or
mov
cli
ja
push
sbb
aad
mov
add
rcrl
push
loope
or
pushf
outsb
cmc
sub
lds
mov
fwait
cmpsl
push
push
sub
inc
aaa
add
scas
sarl
add
mov
insb
in
adc
mov
mov
outsl
mov
pop
add
mov
lret
fwait
xchg
inc
das
or
push
enter
xor
pop
out
fisttpll
aaa
clc
aad
push
pop
dec
jle
or
mov
jo
sbb
sub
xchg
sti
lea
mov
hlt
lods
add
sub
sub
sti
mov
ret
pop
fstl
jmp
push
sbb
outsb
adc
scas
mov
repnz
ret
jmp
popa
popf
clc
mov
mov
sbb
or
mov
xchg
and
lock
mov
lds
insb
lea
cli
sub
addr16
into
cld
les
je
cmpl
mov
pop
pop
outsl
xlat
sub
test
mov
insl
ret
icebp
adc
mov
push
pop
fldcw
inc
ret
lret
lods
frstor
cmp
cmp
aam
jecxz
jae
sbb
lret
imul
mov
daa
fidivrs
cmp
xchg
popf
xor
pusha
mov
xlat
xchg
add
aas
inc
inc
pop
jbe
cmpsb
arpl
sarb
xchg
dec
push
cmp
das
cmpsb
movsb
add
dec
dec
push
jecxz
or
jle
xchg
push
subl
icebp
loope
xchg
mov
ret
mov
jp
xor
push
rcrb
sbb
test
xchg
mov
inc
cli
push
nop
sub
repnz
les
lock
bound
movsl
out
jbe
mov
test
mov
movsl
mov
leave
mov
repz
or
mov
inc
push
mov
pop
jnp
filds
mov
pop
lret
dec
dec
mov
loope
push
push
cltd
mov
mov
sbb
aaa
pop
cmp
js
stc
repz
les
xor
inc
mov
filds
cmp
std
and
adc
xchg
scas
sub
push
or
fdivrs
fildll
rcrl
rol
out
mov
fwait
dec
or
dec
sbb
ljmp
mov
cmp
divb
ja
xchg
in
les
gs
adc
mov
pop
jns
jl
mov
pushf
in
mov
dec
out
inc
movsb
stos
leave
lea
aam
pop
stc
xor
add
add
shll
xchg
jno
and
leave
popf
fdivl
inc
mov
shlb
in
lods
and
xlat
cmp
xchg
sbb
or
sti
inc
xor
repz
gs
xor
aam
bnd
lret
mov
xor
data16
test
fldcw
pop
xchg
in
sub
and
pop
jno
add
lods
repz
insb
ss
or
nop
repnz
leave
iret
loopne
jg
add
dec
outsl
mov
jmp
iret
imulb
adc
mov
push
jmp
dec
cmp
das
and
mov
cmc
repz
imul
pop
loope
imul
std
and
out
cmp
cmpb
mov
or
jo
out
or
sbb
cmpsb
jb
adc
out
inc
icebp
into
dec
mov
adc
insb
notl
shl
inc
ds
mov
stc
xchg
outsl
push
push
jno
bound
dec
outsb
and
add
pop
adcl
xchg
add
pop
enter
in
lock
mov
xlat
je
and
repz
ljmp
call
inc
and
dec
stos
mov
cmp
push
mov
out
aas
pop
cmp
sbb
lret
sub
roll
sbb
push
lock
in
sbb
stos
add
fcmovb
imul
stos
rcrb
ja
fsts
inc
mov
and
mov
in
mov
and
jle
movsl
or
push
notb
fcomps
and
inc
lock
jge
sub
mov
cmp
jecxz
xor
cmp
pop
xchg
jge
push
sub
mov
push
fdiv
push
jmp
mov
pop
mov
jp
mov
addb
imul
jecxz
jmp
push
sub
outsb
sub
jnp
xchg
test
pop
movsl
mov
add
fisubrl
sarb
jecxz
lahf
dec
mov
mov
int
lds
dec
int
lock
inc
int3
jb
test
and
mov
cmp
add
jmp
sbb
gs
enter
cli
lcall
cmc
xchg
xor
push
dec
cli
and
and
jnp
out
les
setb
push
fwait
xor
nop
sub
xor
scas
mov
popa
inc
fbld
add
stc
xchg
movb
mov
push
arpl
decb
jge
mov
add
push
cmp
andl
test
aam
shl
xchg
jne
lods
pop
adc
and
lcall
xor
cwtl
popa
mov
lret
sub
mov
mov
cli
mov
inc
fidivrl
and
jp
jle
mov
or
sete
sub
aad
je
sti
cs
cmp
fldcw
sub
push
cld
xor
inc
rcrl
add
cmp
inc
test
int
xor
xlat
out
xor
cmp
push
hlt
or
and
pop
cmp
imul
les
addl
stos
ficomps
dec
leave
es
aam
and
mov
dec
leave
movsb
sub
loope
rorb
sbb
mov
mov
push
dec
pop
aam
dec
mov
aam
popf
aam
xchg
xchg
int
push
jno
fsub
xor
jb
xlat
xchg
sar
sbb
insl
push
push
add
xchg
mov
clc
stos
clc
out
in
adcl
or
jne
jg
cmp
mov
imul
push
or
jb
dec
ret
sti
rclb
push
pop
outsl
sahf
out
dec
adc
aaa
mov
test
fucom
sub
data16
add
pop
inc
ror
out
push
stc
cmp
inc
inc
in
jmp
dec
jg
in
mov
xchg
cs
fwait
inc
test
mov
inc
sbb
arpl
daa
mov
adc
daa
incl
pusha
fldt
stc
cmp
add
test
in
mov
xchg
int
sbb
mov
push
addr16
fimull
jo
push
sbb
mov
cmp
inc
inc
or
pop
test
out
bound
aam
dec
cmp
inc
xchg
push
insb
and
mov
or
jmp
orl
and
test
push
sbb
jmp
loop
lcall
push
movsl
or
mov
icebp
sub
push
dec
mov
push
xor
cmp
cmp
sbb
sahf
jno
jo
cld
stc
in
mov
movsl
int
rcll
pop
dec
data16
xchg
jmp
and
xor
mov
xor
inc
lahf
int3
scas
pop
movsl
inc
cmp
outsl
bound
les
and
lods
jl
cmc
in
aaa
adc
jb
cld
shlb
dec
aad
addr16
xor
mov
lea
in
popf
inc
mov
mov
cld
inc
sub
test
push
bound
out
scas
iret
mov
int
cmp
mov
loop
int3
and
in
repnz
mov
pusha
stos
xor
fcmovb
insl
mov
adc
jnp
shr
cmpsb
popf
and
adc
adc
std
xor
ljmp
int3
ljmp
rcrl
pop
inc
fadd
imul
in
push
cmp
popa
sub
lds
popf
outsb
and
lcall
xchg
jp
push
lods
pop
push
jge
popf
arpl
fsubs
ljmp
sbb
sub
mov
sub
cld
jb
ss
outsb
and
pusha
int
add
movhps
lret
fldcw
sbb
gs
dec
xchg
test
loopne
push
xchg
dec
sbb
scas
sbb
and
jne
or
or
sbb
fstps
and
cld
push
cmp
xchg
out
mov
out
das
push
mov
mov
xor
js
ror
sbb
pop
fs
adc
fnstcw
fdivrl
imul
add
mov
jbe
call
mov
xchg
pop
mov
jmp
pop
dec
les
jmp
mov
pop
test
jle
in
and
mov
pushf
xchg
fimuls
inc
jp
or
dec
xor
cmp
push
or
mov
mov
cwtl
daa
fisubl
sahf
shl
nop
lret
iret
insl
adc
orb
ds
mov
mov
jecxz
inc
mov
andb
iret
inc
push
pop
inc
sub
notl
out
mov
sbb
fidivl
test
ret
fdivs
imul
fnsave
mov
imul
jae
inc
push
cmp
sub
cmp
inc
les
jne
cmp
adc
bound
or
add
lcall
adcb
adc
iret
insl
push
adc
xlat
dec
ja
xchg
punpcklbw
imul
cmpsl
scas
gs
jo
pop
jge
and
mov
es
push
daa
fnstcw
sub
fs
inc
lret
inc
shlb
push
mov
and
mov
arpl
imul
out
sub
das
fwait
mov
jno
xchg
cbtw
inc
outsl
and
jno
popa
jnp
jle
lods
pop
mov
fmul
mov
mov
or
sub
addr16
xchg
pop
push
sbbb
repz
xor
ret
mov
lds
and
mov
push
push
pop
sub
les
adc
xchg
jmp
xlat
sti
pop
cwtl
pop
inc
xchg
push
sub
pop
mov
loop
loopne
leave
lahf
and
aad
jl
mov
ret
outsl
int3
ljmp
mov
mov
jle
xchg
in
mov
add
lret
ja
xor
loop
push
add
out
addr16
jae
mov
aas
cmp
pop
jb
xchg
xor
xor
cmpsl
pushf
pop
sbb
in
testl
loopne
pop
loopne
inc
addr16
push
popf
xchg
shll
into
lods
inc
xorb
sub
xchg
ss
cmp
or
cld
leave
bound
pusha
std
sbb
mov
in
xor
xor
cli
aaa
sbb
loop
jge
pop
je
sahf
push
sbb
add
dec
cmp
subb
jae
mov
mov
or
pop
xor
es
or
fsubrs
negl
mov
sbb
testl
sbb
int
and
movsb
cmpsl
pop
cmp
jmp
adc
popa
sub
and
jbe
pop
pop
jae
push
pop
addr16
cltd
nop
movsb
adc
or
jp
cwtl
mov
cmpsb
and
and
push
jle
bound
nop
pop
pop
enter
xchg
int
das
adc
inc
xchg
sbb
les
popa
pop
add
pop
in
cmp
enter
mov
cld
popa
sahf
test
and
call
cmpsb
imul
pop
or
or
mov
add
scas
divps
pop
push
leave
scas
sbb
adc
xor
sti
ss
cmp
aaa
sub
sbb
dec
repz
xor
dec
stc
lock
aaa
outsl
mov
mov
dec
outsl
pop
or
jo
cmpsl
aam
cli
mov
pop
in
dec
jne
jle
int3
sbb
mov
test
mov
shrb
das
cmp
ret
push
dec
mov
lret
xchg
jle
dec
dec
sti
in
pop
lods
lahf
les
sub
jae
cmp
add
inc
jge
push
incl
rcll
inc
jns
sub
or
pusha
adc
shrb
cmp
das
pop
cs
in
iret
jp
les
jge,pn
pusha
out
inc
jns
cmp
iret
movsb
mov
sti
addr16
or
dec
push
jmp
or
test
xor
loop
pop
lods
lret
imul
sbb
jle
cmc
loop
enter
sarb
int3
inc
xchg
mov
mov
mov
int
and
mov
mov
mov
push
lret
push
xor
pop
pop
mov
xlat
mov
jne
xor
insl
out
jg
or
cmpsb
dec
and
adc
in
leave
cmp
ja
sbb
cli
outsb
fdivr
mov
fldt
iret
mov
je
out
lcall
out
out
iret
call
lods
outsl
insl
mov
mov
pop
lcall
testl
sbb
data16
and
cmc
adc
cmp
cli
mov
xchg
gs
mov
stos
adc
fisttps
cmp
test
loope
fdivrs
test
cmp
pmulhuw
add
xor
icebp
ja
std
imul
and
sub
icebp
adcl
leave
inc
mov
mov
ds
pop
xorl
add
and
mov
imul
rol
pop
imul
fdivs
sbb
pop
jo
cld
jne
and
adc
cs
cmc
mov
aam
adc
neg
decb
test
mov
sbb
xor
pop
xor
sahf
xlat
jle
leave
dec
fwait
clc
xchg
mov
jle
test
push
das
xchg
cmp
push
addr16
xchg
mov
lret
ficoml
mov
in
xchg
xchg
mov
lds
hlt
jno
cli
or
or
repnz
push
cmp
jg
lret
pop
mov
sahf
bound
push
pop
or
shrl
in
cltd
dec
in
stos
push
cld
add
push
lds
mov
sahf
ds
shll
repnz
fcoms
or
iret
sbb
inc
add
repz
enter
inc
clc
or
jecxz
stos
neg
pop
arpl
clc
push
ja
ret
scas
jbe
mov
add
roll
jo
adc
jo
inc
push
test
dec
add
sub
push
xchg
imul
and
sub
sbb
jne
and
push
mov
scas
xchg
add
andb
cmp
mov
sub
xchg
pop
cmpsl
loop
ret
addr16
mov
fcmovnu
call
iret
sbbl
xchg
iret
inc
inc
fnstcw
out
movsb
lods
sti
insl
pop
jae
dec
cwtl
repnz
sahf
pop
or
fildl
cmp
repnz
int
lock
popa
or
xchg
push
adc
shrl
iret
lds
jmp
mov
jno
push
data16
ja
loope
dec
push
fisttpl
movb
and
lahf
mov
movsb
jmp
mov
test
in
sbb
add
dec
clc
stos
mov
jg
pop
in
push
repz
aam
add
sbb
adc
inc
fcomps
sahf
mov
xor
mov
enter
xor
movsl
xchg
mov
gs
push
and
pop
cmp
adc
jmp
sub
jg
insl
cmp
add
les
mov
jns
mov
out
push
xor
xorl
movsb
aas
les
test
ret
push
sub
loopne
sbb
push
dec
call
pop
and
jnp
cmp
mov
ror
cmp
and
test
lds
aad
mov
aaa
cmc
inc
rolb
jb
std
mov
enter
cmpsb
lret
leave
lods
sbb
xchg
bound
roll
push
jl
fmull
mov
cmpsl
arpl
xlat
lret
add
fwait
mov
insb
dec
adc
add
inc
cmp
cmp
sub
je
cwtl
out
dec
jo
jmp
bound
push
jmp
or
cmp
cltd
and
sbb
adc
test
push
xchg
jg
sbb
jno
mul
test
in
sub
mov
or
es
stos
addl
test
pop
mov
pop
stc
xor
cmp
sub
jecxz
sub
sbbl
test
jp
fidivl
lret
pushf
movsl
sti
lods
fdivs
cs
mov
sbb
aam
js
fbstp
out
in
cmp
jae
test
ss
inc
lock
ljmp
mov
aaa
inc
stc
jg
lcall
inc
or
xchg
xchg
xchg
out
mov
ficomps
sub
xchg
lahf
inc
lahf
pop
mov
or
int3
and
cmp
shr
in
rcll
es
or
into
das
mov
out
arpl
push
out
adc
test
and
fstl
shl
dec
imul
adc
inc
mov
mov
add
iret
mov
popf
icebp
jo
aaa
into
jns
in
dec
test
gs
int3
setns
je
popa
mov
add
xchg
int3
adc
pop
das
mov
je
test
cmp
or
dec
hlt
pushf
jecxz
push
sub
int
repz
inc
sbb
and
addr16
dec
inc
test
mov
cmp
cmc
int
incb
add
mov
es
imul
iret
xor
movsl
shrb
daa
cmp
negb
test
xchg
push
mov
mov
icebp
mov
inc
popa
nop
bnd
mov
jno
mov
aam
jbe
fwait
pop
mov
ljmp
pop
mov
shrb
add
cs
xor
or
ljmp
dec
dec
and
scas
lods
pop
mov
adc
cmpsl
push
ret
jae
fcomps
adc
sbb
test
loope
add
and
push
fists
call
int
lcall
adc
dec
mov
lock
cmpsl
outsb
xor
rcl
inc
jmp
lods
sub
lahf
sbb
jg
mov
bound
into
mov
testl
xchg
imul
add
xor
into
shl
loope
mov
fisubrs
out
sub
outsb
or
jnp
mov
jns
xor
cmpsl
cmp
fisubrs
push
outsb
push
dec
sub
xchg
ljmp
js
sub
fisttpl
ds
movb
bound
and
out
xchg
sahf
xchg
imul
sub
ret
lods
add
mov
cld
cs
mov
jb
mov
mov
insl
pop
jg
sbb
mov
xor
cwtl
cmpb
in
cmpsb
fsubs
cli
jp
sarb
dec
arpl
enter
adc
sti
scas
dec
out
adc
mov
jg
add
out
cmpsb
push
push
inc
js
jmp
sub
arpl
inc
jge
lret
mov
inc
imul
jg
sbb
imul
inc
adc
test
dec
fwait
mov
cmp
pop
cwtl
cltd
pop
cmpsb
xor
add
jle
stos
xor
test
or
cs
int3
mov
pop
sub
push
stos
cmpl
inc
mov
push
mov
jns
daa
xor
cwtl
pop
lahf
add
movsb
shr
cltd
adc
xchg
aaa
push
mov
and
lods
mov
gs
pop
xor
pop
fnstenv
or
outsl
dec
incl
dec
in
stc
nop
push
inc
frstor
add
jp
mov
nop
adc
inc
xor
ficoml
mov
test
lods
std
jo
fadds
addr16
mov
test
lret
outsl
jb
lock
jmp
sbb
dec
push
mov
fadd
mov
cmp
rcl
add
loopne
push
punpckhbw
or
mov
adc
das
adc
cmp
mull
mov
xchg
popf
and
xlat
dec
cmpsl
pop
pushf
cmp
stc
imull
stos
les
jnp
sti
jge
ss
out
daa
bound
jmp
mov
lret
or
dec
xchg
outsl
fld1
dec
test
or
sbb
pusha
lea
test
test
cld
pop
jae
in
xlat
in
icebp
orb
or
aam
adc
lret
push
mov
in
mov
xchg
out
lods
jbe
push
mov
jne,pn
sbb
and
push
push
jns
and
jl
push
jno
mov
repnz
pop
ss
jmp
inc
mov
addr16
xchg
ss
add
std
leave
and
dec
add
aaa
dec
iret
xchg
push
and
adc
pop
fwait
or
xchg
sub
add
aam
mov
mov
scas
mov
xchg
add
sbb
cmp
loope
test
cltd
shlb
mov
adc
push
into
mov
andb
sub
test
xchg
fcmovnu
and
enter
je
sbb
jecxz
and
popa
cmp
pop
mov
xchg
in
pop
cs
xor
jae
mov
in
int
mov
mov
and
mov
aaa
and
and
push
subl
xor
mov
scas
fcmovne
loope
adcl
scas
sbb
mov
mov
lret
enter
repz
mov
mov
test
lods
pop
nop
mov
fildl
lea
cli
lret
adc
cli
in
cmp
lds
shl
jle
xor
lahf
mov
dec
inc
xchg
lcall
pusha
rorb
enter
es
aas
inc
jbe
je
divl
lods
xor
sub
loopne
adc
in
inc
xchg
cmp
shlb
jnp
xor
sub
jg
jno
in
inc
ja
xchg
jg
or
inc
roll
rolb
fwait
popf
sbb
add
jb
daa
es
mov
insl
xchg
dec
fstps
loop
lret
cli
insl
outsl
js
mov
stos
shrd
inc
daa
cld
movsl
mov
insl
rcl
mov
fsubrs
and
mov
mov
mov
push
sbb
push
popf
stc
js
loopne
int
sbb
stc
cmp
cwtl
outsl
inc
pop
das
sarl
pop
std
mov
cmp
adc
testb
adc
and
mov
fwait
inc
aad
jne
ret
or
xchg
mov
cltd
idivl
mov
or
lcall
lret
mov
sbb
bound
mov
or
jae
sarl
pop
add
insl
pop
adc
clc
mov
push
adc
testl
mov
sbb
push
push
imul
mov
fbld
in
ja
jge
out
fdiv
scas
mov
adcl
rorl
adc
push
shlb
push
push
adc
cmp
movsb
cwtl
cmp
mov
mov
lea
out
fisubrs
sub
jo
inc
or
sbb
lods
and
mov
js
cmpsl
scas
test
and
cmp
sbb
mov
out
jno
scas
xchg
mov
adc
push
fstpl
cld
insl
adc
inc
and
sub
add
xchg
les
ljmp
lods
sbb
ret
dec
inc
outsl
mov
adc
js
pop
leave
data16
fimull
add
aas
push
out
inc
mov
clc
cld
popf
popf
mov
push
dec
inc
xchg
fsub
fwait
xor
leave
xchg
loope
mov
adc
push
dec
mov
popa
pop
aam
pop
pushf
jno
jmp
mov
inc
and
nop
scas
cmc
dec
push
lods
les
lret
jge
push
loope
mov
outsl
arpl
outsb
sub
mov
and
fidivl
addr16
jno
jb
mov
insl
cltd
in
mov
sti
shlb
addr16
mov
inc
xchg
push
fwait
sub
in
popf
repnz
inc
push
cld
mov
stos
sti
dec
xor
jbe
jecxz
add
add
mov
mov
fstl
ljmp
sahf
icebp
adc
add
xchg
das
mulb
imul
and
bound
nop
pop
mov
xor
mov
ja
add
int
std
dec
mov
and
mov
clc
out
js
dec
xchg
mov
push
lcall
or
mov
sub
cmpsl
lods
or
call
ficoml
into
or
push
adc
mov
lea
mov
xchg
xchg
adc
stos
push
test
sbb
inc
inc
adc
shl
lods
dec
jnp
dec
mov
mov
je
filds
pop
lods
test
push
addr16
or
repnz
enter
pop
and
dec
add
test
jb
pop
dec
push
scas
scas
lea
xchg
xlat
mov
es
dec
rclb
xchg
test
scas
fwait
popa
and
mov
aad
fidivrl
and
sbb
push
mov
idivl
xor
sbb
mov
insl
mov
stos
out
cmp
jle
lret
xor
sti
aam
mov
lret
inc
nop
cmc
les
faddl
fisttpl
add
jg
int3
mov
test
adc
sbb
add
aam
sbb
mov
adc
mov
xchg
jl
lahf
push
mov
es
cmp
jecxz
jge
sub
pusha
mov
cmc
ja
popa
test
add
fucom
mov
cmp
inc
sahf
or
rclb
cmpsl
push
mov
aad
pusha
mov
loopne
fidivs
mov
mov
push
sub
push
inc
and
mov
out
inc
imul
cmp
shll
push
sub
repz
push
jmp
and
xorb
or
push
mov
xchg
pop
push
sub
adc
jb
push
adc
ljmp
hlt
jp
mov
lods
aas
inc
inc
dec
jo
repz
cmpsl
cmc
push
mov
jno
loop
movsb
pop
cmp
cmc
in
je
ret
das
rorb
mov
mov
loopne
fwait
mov
pushf
or
fmul
js,pn
push
fmul
xchg
sbb
sub
jge
mov
xchg
push
mov
add
int
out
sbb
sbb
insb
movsl
xchg
adc
xor
push
ds
in
mov
dec
pop
lret
dec
nop
jbe
dec
arpl
test
movl
inc
jg
lcall
in
push
loope
dec
movb
out
lret
or
or
inc
cmp
nop
mov
popa
jecxz
sahf
pusha
lock
mov
mov
fidivs
rorl
in
pop
push
stc
vmovapd
add
dec
xchg
cltd
lods
or
nop
pop
das
xor
aad
cmc
sub
vmwrite
push
mov
ljmp
aam
cmp
ret
loope
sbb
dec
dec
jecxz
jp
call
push
sbb
test
andl
or
fbld
imul
repnz
adc
inc
pop
fimuls
mov
mov
ja
and
add
inc
mov
popa
mov
into
ja
loope
push
cli
sti
xchg
outsb
fidivrs
lahf
scas
scas
sbb
xchg
jle
pusha
cwtl
xor
aas
in
iret
jo
fcomps
pop
inc
xchg
insb
dec
into
or
je
inc
adc
out
mov
push
dec
into
add
or
ljmp
cltd
iret
jne
push
and
lret
pop
icebp
jmp
loop
pop
lods
dec
out
stos
adc
mov
and
rcl
mov
enter
mov
roll
insl
cmp
xchg
mov
add
jns
xchg
inc
jge
lret
dec
inc
fdivrs
mov
pop
mov
add
lea
and
push
mov
jmp
rcr
dec
outsl
mov
mov
mov
testl
popa
test
int3
push
cltd
lret
inc
sbb
sub
aaa
adc
mov
pop
ljmp
mov
sub
jmp
cmpsl
das
xchg
aas
mov
jbe
mov
jge
iret
jo
sar
lahf
pushf
andl
jp
sub
xor
addl
fnsave
or
ljmp
inc
push
movsb
xorb
sbb
test
xor
xor
sbb
loopne
pop
clc
lods
or
in
jecxz
sub
sbb
fsubrl
mov
in
fmuls
add
insb
popf
iret
add
dec
pop
rorl
mov
jg
xchg
lock
jle
fidivs
nop
fscale
pop
outsb
xor
ds
lock
xor
dec
push
fwait
loop
cmp
mov
push
and
push
mov
movsl
dec
mov
in
addb
stc
sub
das
dec
mov
xorl
imul
ljmp
sub
and
xchg
dec
js
imul
add
iret
inc
pop
inc
dec
cli
fwait
xchg
inc
and
mov
cwtl
mov
sahf
mov
jns,pn
push
mov
mov
cmpsl
and
xor
push
xor
int
sti
mov
std
gs
outsb
or
sub
mov
or
lahf
adc
les
mov
jno
ja
clc
test
je
push
cmc
cmp
adc
and
push
xchg
sarb
sahf
mov
lcall
ret
mov
adc
gs
mov
js
push
or
sbb
cmp
in
mov
push
xchg
rorl
sub
inc
hlt
rorl
add
dec
mov
out
negb
sbb
pop
lds
xor
testl
faddp
ja
lock
adc
lods
aam
test
lret
sub
loopne,pn
js
cmpsl
cld
cs
orl
cmpsb
add
cmp
mov
xchg
mov
in
jbe
add
mov
sbb
or
sub
aaa
mov
cli
jo
jmp
int3
and
call
mov
pop
dec
js
cld
push
je
daa
xchg
ss
adc
push
testb
stos
outsb
add
lods
dec
pop
test
cltd
std
mov
scas
sbb
add
mov
lea
sbb
pop
pop
shl
pop
int3
jb
jge
in
fucom
adc
cmp
push
dec
adc
xchg
jmp
lea
pop
mov
scas
add
push
popa
insb
xchg
repnz
out
orb
mov
cmpsb
sub
and
mov
dec
jo
add
mov
aas
aad
sub
faddl
sub
in
testl
out
stos
in
push
sbbl
cmpsl
push
dec
sbb
in
nop
sbb
mov
lret
inc
and
je
push
mov
mov
lcall
sbb
iret
xchg
jl
das
inc
scas
out
pop
or
pop
push
js
cmpsb
popl
cmp
leave
cmc
inc
push
dec
dec
cwtl
inc
push
int3
pushf
movb
jnp
or
cmp
std
dec
cmp
insb
sahf
jns
test
outsb
mov
fisubs
add
std
dec
int
jp
insl
pop
push
adc
mov
jnp
mov
and
popf
xor
scas
push
and
fs
cmpsl
jno
rclb
sub
xor
dec
push
inc
clc
xor
and
es
inc
dec
fmulp
xorl
or
dec
push
sub
dec
fwait
insb
aaa
out
ss
nop
mov
xchg
cmpsl
repz
mov
pop
mov
jnp
fwait
lods
sbb
fmuls
mov
repnz
std
ffreep
fwait
insl
loop
lea
or
fst
into
loope
daa
rol
mov
xchg
in
into
insl
popa
xchg
inc
jb
push
out
leave
dec
ds
faddl
pop
sbb
pop
mov
int3
loope
lock
test
mov
jno
call
jne
popa
fwait
mov
or
mov
add
jb
cltd
mov
pop
pusha
inc
cmp
aad
and
int3
dec
add
push
dec
cmpsl
fmuls
jmp
and
pop
mov
pop
adc
scas
sahf
xlat
push
dec
aaa
call
aam
mov
pop
test
jb
or
push
sub
loop
arpl
bound
sahf
inc
pop
cmp
push
adc
push
push
push
add
js
dec
jmp
sbb
and
lods
hlt
jnp
mov
sbb
mov
aaa
mov
mov
ljmp
mov
pop
adc
dec
fbld
shr
cwtl
sbb
sub
pop
xchg
in
ljmp
fwait
jbe
cltd
pop
jne
rol
insb
out
or
jnp
mov
cmp
pop
sbb
jnp
outsb
mov
xchg
nop
jmp
movsl
jcxz
mov
movsl
cmc
xchg
fs
dec
leave
pop
adc
call
mov
cmp
mov
push
push
jns,pt
mov
pand
xor
mov
adc
mov
ljmp
imul
fbld
mov
or
movsl
lcall
mov
xor
rcrb
in
in
aad
cmpsl
aas
loop
add
nop
and
xchg
stos
sub
pop
stos
push
add
pop
sti
mov
or
xchg
fisttps
jne
or
and
loope
loope
sbb
hlt
mov
jb
jge
jno
sub
cmp
sbb
push
push
insb
imul
inc
push
mov
push
dec
mov
push
out
lahf
insb
pop
aaa
dec
fimuls
jmp
mov
out
mov
push
adc
pushf
dec
cs
jle
les
pminsw
and
or
out
jl
mov
scas
jnp
push
adc
and
inc
cwtl
test
shrb
ljmp
pop
xchg
pmuludq
fs
fisttpll
inc
inc
test
dec
sub
jno
rcrb
add
jne
xlat
jnp
gs
nop
cmp
fadds
mov
cmc
into
loope
mov
shl
in
jbe
ss
xor
cmpsl
loop
mov
dec
rorb
jo
aam
mov
mov
fidivrl
cmpsl
lea
mov
adc
inc
andps
sub
jnp
std
cmpsb
mov
add
sbb
sbb
ja
pop
and
test
push
lea
push
inc
out
dec
xchg
mov
xchg
int
mov
lock
mov
dec
adc
pushf
iret
sbb
arpl
jp
test
inc
fcomps
loopne
in
loope
pop
xchg
xorl
in
mov
or
mov
pop
xchg
xor
dec
out
fiadds
mov
setl
push
pop
or
sbb
xorl
aam
jbe
or
ja
lds
stc
insb
mov
pop
cs
loop
lret
inc
fidivrs
and
xchg
cs
sbb
mov
adc
fisubrl
sti
mov
mov
in
adcl
sub
sub
clc
idivb
xchg
ret
fstpl
cltd
jmp
adc
cmp
popa
shll
aaa
xchg
pushf
out
pusha
shlb
cld
ss
sbb
cmp
or
add
or
jmp
hlt
insl
not
add
mov
jne
ss
enter
pop
jb
inc
fildl
outsb
xor
test
loop
push
xor
divl
add
sbbb
xchg
js
adc
nop
mov
test
adc
jmp
push
jne
stos
inc
sahf
je
xor
or
mov
mov
mov
ja
daa
pop
stos
and
imul
loop
pop
movsl
aaa
and
xchg
inc
sbb
adcb
lds
fstl
xchg
xchg
icebp
add
sbb
data16
inc
cmp
out
adcb
repz
or
lahf
cmpsl
js
dec
ja
out
mov
out
lods
xlat
loopne
aas
gs
lcall
into
clc
out
pusha
mov
add
cmp
inc
ficomps
leave
jbe
popf
add
scas
fsub
dec
add
xchg
imul
cmp
loop
jnp
inc
scas
call
xor
pop
mov
adc
and
cmpb
xchg
mov
push
test
adc
in
rol
fdivrl
scas
sti
out
mov
fsubrs
enter
add
or
lahf
and
and
sarb
leave
push
xchg
mov
jns
inc
mov
in
pop
mov
ja
je
pop
and
push
loope
js
es
push
jle
and
xlat
into
shlb
lahf
dec
jmp
sbbl
sbb
jne
push
and
add
inc
sub
push
lcall
and
movb
pusha
pusha
fwait
cwtl
rep
out
es
dec
mov
xchg
inc
mov
lret
dec
sub
cli
out
inc
pusha
aaa
out
lahf
or
xchg
push
sbb
rclb
rclb
insb
loopne
test
or
jns
cmp
or
ret
mov
xchg
cmc
pavgb
mov
cmc
sub
sub
lcall
dec
insb
subl
push
push
subb
jns
das
rcr
sbb
jp
adc
adc
mov
mov
mov
sbb
and
in
cmc
iret
lds
mov
pop
subb
xor
andb
stos
ss
and
leave
fistl
inc
stos
paddd
xchg
clc
shlb
test
xchg
shll
inc
xlat
sub
lahf
repnz
fs
cltd
je
push
sub
mov
pop
fnstcw
ljmp
mov
push
add
scas
push
out
and
cmpsl
sti
mov
lock
popf
mov
mov
jns
pop
push
inc
pop
push
out
outsb
popa
adc
push
jecxz
xor
test
call
sbb
jb
push
or
sub
mov
lret
int
lds
push
and
xor
xor
adc
out
decl
push
fisttpll
mov
or
imul
push
jg
jge
popa
sbb
nop
gs
fstl
mov
xchg
arpl
shll
nop
fisubrl
jge
pop
add
daa
mov
pop
xchg
scas
inc
mov
xchg
or
xor
xchg
push
lods
fidivs
or
out
lahf
mov
inc
adc
loope
in
enter
push
mov
popf
push
mov
adc
decl
shrb
mov
aam
into
or
js
shr
cwtl
mov
std
jae
jns
outsb
popa
lea
das
aaa
fidivl
movsl
cmp
mov
popf
lds
out
mov
movsl
and
cmp
fcom
ret
mov
ret
push
leave
xchg
pushf
icebp
mov
in
data16
pop
pop
fs
loopne
loopne
frstor
add
jno
dec
adc
jbe
pop
pop
sub
test
std
jp
push
in
sub
jl
and
xchg
mov
sub
pop
sbb
test
pop
xor
adc
mov
inc
clc
das
fdivrs
bnd
push
ljmp
clc
dec
andl
pop
dec
loop
sbb
or
jo
stc
lds
push
popa
jmp
inc
sar
mov
mov
movsb
add
hlt
fwait
movsl
push
movsb
fnstenv
loopne
sbb
dec
jns
gs
add
into
aaa
mov
xchg
jg
in
push
aad
pop
cmp
sub
dec
mov
add
mov
ret
xchg
jo
xor
inc
cmpsl
inc
mov
sub
mov
cs
and
insl
cmp
ficoml
cmp
pop
scas
adc
sub
addr16
lds
push
pop
mov
pop
mov
int
ljmp
and
sti
jo
mov
filds
loopne
ret
mov
xchg
int
repz
in
xlat
in
mov
inc
lods
inc
add
jno
enter
pop
scas
and
sub
push
stos
and
push
mov
add
mov
cmp
pop
jb
fldcw
pusha
iret
bound
push
pop
or
push
sbb
adc
xor
cmp
inc
fistpl
loope
xor
mov
stc
xlat
std
movsl
fiaddl
test
test
iret
in
jle
and
inc
mov
mov
push
cs
or
repnz
pop
movsb
mov
imul
nop
xor
jno
andl
pop
lea
push
pop
cwtl
out
dec
out
dec
mov
mov
lahf
xchg
test
push
lods
outsl
or
bswap
jle
out
pushf
mov
scas
adc
push
pusha
sti
int
push
lret
enter
mov
add
aad
mov
jne
popf
stos
pop
inc
addr16
jb
outsb
adc
or
xlat
mov
dec
cmpsl
ret
insl
adc
jbe
and
frstor
imul
clc
mov
into
daa
fidivl
add
or
ja
imul
sbbl
sub
sub
jecxz
ftst
mov
xor
push
and
jbe
lods
loop
in
out
rorb
rol
cmp
loope
repz
xor
xor
cmp
mov
les
xchg
mov
xor
mov
mov
mov
ljmp
cwtl
jb
dec
pop
stc
in
xor
cmpsl
out
cld
xchg
je
shll
mov
fmuls
pusha
mov
push
les
push
lds
inc
adc
test
sbb
inc
enter
mov
shlb
add
xchg
iret
lods
sbb
scas
mov
dec
pop
aaa
jo
popa
add
inc
sti
pop
cmp
bound
orl
xchg
aas
call
cmp
xchg
cmc
and
stos
call
mov
push
xor
xchg
stos
cmpsl
sub
nop
adc
xlat
jmp
xor
test
dec
out
mov
pop
ret
imul
jge
je
or
imul
arpl
imul
xchg
insl
popf
ret
or
sti
sbb
mov
mov
fs
sub
out
dec
fcmovb
popw
test
or
cmc
xchg
aam
pop
outsb
fwait
add
push
or
mov
popa
inc
jb
clc
inc
leave
xlat
xchg
daa
or
sbb
imul
mov
xor
rcll
sarb
icebp
aad
mov
xchg
mov
push
xor
adc
ja
pop
fisubl
push
sub
fmul
adc
in
test
pop
dec
das
test
jo
inc
jmp
inc
cmp
mov
mov
rcll
mov
repz
in
or
cld
lods
scas
pop
inc
mov
push
mov
cmp
movsl
pop
enter
mov
andl
mov
or
mov
lret
jmp
ret
loopne
mov
push
dec
ja
xor
mov
mull
push
das
cmp
and
fwait
lods
mov
or
ss
repz
add
lcall
sbb
xor
rclb
test
pop
pop
roll
insl
sub
dec
adc
lea
out
sub
fldcw
push
in
push
and
insl
pushf
xchg
dec
pop
jl
pop
adc
cmc
cltd
popf
mov
cld
insb
adc
mov
fidivs
adc
xchg
fisubl
jp
repz
or
jo
mov
sub
insb
add
popa
sub
xchg
sbb
add
cmpl
mov
add
lods
cmpb
xchg
scas
add
scas
mov
cmpsl
int
sub
cmp
pusha
mov
adc
dec
int3
fsubs
mov
out
lcall
sub
imul
rcl
xchg
enter
imul
scas
adc
push
dec
pushf
frstor
hlt
lods
out
data16
loope
fcmovnu
cli
testb
inc
adc
stos
pop
xor
add
jns
xchg
test
xchg
xchg
js
pop
mov
mov
sub
jecxz
push
movsl
ss
scas
enter
lods
data16
shrl
mov
lcall
cmp
fisttpl
push
aas
rsm
call
mov
mov
repnz
jle
test
aad
mov
les
cmpb
sbb
sbb
mov
xchg
cltd
push
xchg
inc
jb
pop
sub
iret
rcll
add
cmp
sti
loope
pop
popf
divb
add
sbb
sbb
fidivl
je
loop
jp
lds
mov
inc
add
cmp
loopne
and
add
pop
xor
loopne
mov
adc
dec
lret
aas
gs
push
mul
call
into
mov
push
rolb
daa
adc
ss
xor
mov
dec
xor
lea
test
sbb
xchg
add
mov
push
dec
push
or
fcoml
mov
in
rorl
fstps
sbb
dec
mov
jne
stos
aas
mov
lret
in
inc
lcall
adcb
xor
movhps
loope
fincstp
rolb
xchg
fadd
fxch
push
pop
or
mov
in
mov
enter
std
inc
cmp
test
or
and
push
popl
aaa
loop
sub
sbb
lods
test
mov
lods
adc
mov
or
inc
cmc
nop
pop
mov
push
jle
js
jo
insb
mov
test
jge,pn
pop
lret
push
addb
mull
inc
das
mov
ljmp
test
and
mov
pop
jno
arpl
xor
mov
xchg
pop
fiaddl
jae
xchg
ds
nop
lcall
mov
cmc
cli
inc
mov
cmp
lods
sbb
test
push
mov
jns
ljmp
pop
inc
sahf
mov
sbb
dec
repnz
sbbb
lds
inc
fadd
mov
mov
fists
inc
inc
mov
sbb
ret
mov
mov
sbb
adc
loope
das
pop
push
xchg
and
mov
cmp
lea
in
cmove
movaps
add
aam
lock
jg
test
mov
pop
out
outsl
mov
xchg
pop
adc
daa
inc
je
inc
adc
jb
out
push
pop
fwait
cltd
fists
movsb
push
aad
sub
rorb
adc
das
fstpt
sahf
xlat
sub
mov
xorl
fsubrl
adc
ds
mov
cmp
add
inc
cli
iret
js
mov
jb
in
dec
mov
lret
mov
mov
lods
orb
movsl
mov
insb
or
xor
clc
rcll
aam
dec
out
mov
ds
insl
push
mov
jb
jle
clc
jmp
mov
imul
push
mov
pop
push
test
test
sub
aad
add
pop
into
lods
sbb
rorl
movsl
xlat
lea
sbb
push
pushf
jl
inc
adc
add
sub
jmp
and
shlb
pop
inc
insb
or
test
imul
lcall
sub
jge
addb
mov
dec
clc
pop
pop
filds
or
jo
or
push
fwait
push
aaa
test
or
add
pop
lock
in
and
adc
fs
push
push
xchg
and
push
inc
adc
mov
inc
sub
sub
cmpsl
cmc
int3
or
flds
mov
gs
enter
or
mov
iret
lock
mov
shrl
icebp
outsb
xchg
and
pushf
insb
ljmp
inc
cmp
xchg
pop
and
pop
pop
push
in
mov
sbb
mov
push
jne
mov
idivl
sub
jmp
lods
in
arpl
cwtl
mov
cmpsl
push
ret
jmp
xchg
or
mov
jb
popf
ret
adc
repz
pushf
dec
push
aam
pop
add
fdiv
ss
out
popf
sbb
adc
cmp
scas
out
addr16
mov
jg
test
inc
outsl
push
fwait
les
negb
cmp
xchg
aad
push
fiaddl
xchg
test
mov
and
andb
adc
pop
xchg
push
jmp
test
out
mov
rolb
nop
or
add
stos
and
dec
popf
pop
mov
lret
adc
mov
pushf
and
out
sub
mov
loope
fnsave
mov
inc
or
mul
into
jle
push
jmp
mov
sub
push
mov
inc
xchg
sbb
mov
shl
inc
or
js
xchg
push
iret
fcomps
fildl
inc
sbb
test
mov
pop
ret
mov
cltd
pushw
pop
sti
add
stos
addr16
pop
xor
rorl
mov
push
inc
popa
clc
mov
sub
aaa
dec
fcmovu
in
push
daa
sub
popa
jb
mov
push
enter
mov
adc
mov
arpl
xor
popa
xchg
jge
xlat
mov
jle
int3
mov
and
mov
and
fwait
jmp
cmp
or
cmpsl
jb
and
lock
dec
xchg
fistpll
dec
jb
inc
pop
or
push
adc
push
pop
dec
ret
bound
or
push
sarb
mov
out
pop
fistl
shr
popa
inc
out
and
jae
sub
sbb
mov
xchg
push
xor
mov
mov
rcll
pop
pop
and
clc
ss
loopne
or
adc
adc
jmp
loope
iret
cmp
xor
loope
rolb
mov
bound
ret
xchg
pop
cmp
xor
pop
test
iret
hlt
leave
dec
cmp
adc
sbb
lcall
movsb
ljmp
jl
fsubrp
or
data16
aam
inc
lret
xor
adc
jne
out
stos
jb
rcll
adc
mov
ljmp
xchg
xor
xor
or
and
sub
cs
ljmp
sarb
push
aas
push
xor
push
in
inc
dec
int3
cmc
sub
faddl
and
mov
xor
orl
push
loop
test
xor
cli
mov
out
sub
and
or
cmpsl
or
cmp
enter
lock
pop
cli
bound
test
cmp
out
mov
popf
jge
push
mov
sbb
in
outsl
inc
icebp
adc
in
or
fisttps
mov
mov
adc
jnp
hlt
icebp
pop
std
ss
add
ret
das
lret
xchg
fbld
add
lahf
jge
sbbl
sub
push
jmp
mov
sahf
in
adc
sbb
push
aam
insb
popf
cli
das
mov
hlt
outsl
sub
mov
push
push
inc
sbb
rorb
adc
lcall
inc
jne
cmpsb
pop
les
dec
int3
scas
xlat
sbb
stos
test
cmp
mov
test
dec
xchg
inc
les
std
int
mov
sbb
into
lea
mov
jl
es
rclb
ljmp
push
sahf
out
rcr
push
or
sbb
cmp
outsl
dec
add
sahf
in
pusha
jne
stos
add
sbb
sbb
and
xor
mov
dec
inc
mov
xchg
je
or
das
jl
lahf
mov
cwtl
fldenv
test
fsubr
sysret
repz
ret
mov
packsswb
enter
ds
ljmp
mov
push
rcrb
shlb
pop
loope
pop
cmp
pop
xor
pushl
push
arpl
leave
cli
mov
enter
hlt
inc
pop
jmp
rcrb
lahf
inc
insb
mov
jae
ja
xlat
pop
jg
mul
add
inc
pop
addr16
xchg
pushf
and
inc
popa
out
insl
out
mov
mov
test
rorb
fistl
inc
inc
test
xor
xchg
je
mov
repnz
sbb
lret
test
cmp
jle
and
sahf
aam
enter
adc
dec
lcall
testb
call
adc
fnstenv
ja
sub
imul
jle
out
repz
add
mov
dec
rcll
mov
jmp
loope
sub
xor
ljmp
std
out
pop
imul
or
aad
pop
xchg
in
push
vmwrite
loop
xlat
idivb
inc
testl
mov
cmpsl
stos
lcall
jmp
sarb
xlat
js
sahf
pop
sbb
cs
xor
aad
cmp
push
jmp
pop
xor
in
shlb
dec
lret
xor
inc
jg
mov
mov
nop
sbb
jecxz
or
push
test
movsb
jmp
mov
stc
mov
test
xchg
inc
xchg
sub
js
xor
nop
pusha
mov
leave
xlat
hlt
mov
cmp
leave
and
push
daa
andl
push
out
stos
outsb
dec
or
sar
jae
inc
imul
push
negl
jmp
xor
jmp
mov
add
aad
fstl
lahf
xchg
jp
pop
insl
mov
outsl
subb
cmp
lods
dec
cmp
testb
xchg
lea
aam
cmp
testb
sub
or
ljmp
in
adc
mov
xchg
ret
ret
cmpsl
mov
ret
repz
stos
pop
lret
xor
mov
jle
sub
out
and
inc
jle
mov
call
push
cmpl
xor
sbb
mov
mov
pop
xor
test
loopne
lea
pop
and
inc
fdivl
test
adc
les
dec
cmp
lahf
jb
popf
icebp
push
push
pop
dec
xorl
jo
mov
mov
stos
sbb
loope
mov
lea
add
shlb
xor
icebp
sub
xchg
xchg
insb
push
stc
test
cmpsl
pop
mov
add
lahf
scas
gs
jge
mov
adc
xor
lcall
lds
mov
bound
add
or
push
rolb
mov
rorb
mov
aaa
adc
mov
std
insb
dec
mov
add
pop
fadd
mov
xchg
push
leave
sbb
popf
jle
nop
scas
add
jnp
push
sub
cmp
push
inc
loope
hlt
cmp
js
pop
popl
cltd
imul
cs
jns
or
lock
mov
or
sub
test
subl
in
dec
lock
pop
jae
add
cmp
xor
in
mov
pop
in
or
and
in
movsb
cmp
ja
mov
fwait
cld
mov
jb
sub
push
mov
aaa
icebp
mov
and
pop
jecxz
lret
inc
nop
pop
repz
push
jge
mov
loopne
insl
jmp
movsl
fmulp
stc
icebp
aam
push
cmp
data16
inc
inc
mov
cmp
jge
jnp
xchg
call
leave
out
movsl
sub
jae
fs
lea
xchg
pop
pop
pop
shll
cmpl
ret
lds
shl
int
dec
gs
test
add
xchg
inc
cmp
aaa
jo
and
stc
push
rolb
lret
dec
out
leave
add
aam
cmp
jecxz
jo
testb
and
ljmp
ss
aam
sub
lea
popa
push
rolb
andl
or
sub
mov
insl
test
pop
mov
cld
xchg
scas
mov
jns
pop
out
adc
fcoml
push
cmc
cltd
outsb
sbb
ds
mov
mov
lcall
lahf
cmp
push
movsb
subb
pop
xchg
mov
adc
mov
jo
ds
in
mov
jne
aam
stos
pusha
idivb
pop
sahf
int3
pop
std
out
xor
inc
pop
ret
sub
repnz
inc
lret
push
fiadds
add
xor
js
imul
add
dec
pop
pop
mov
mov
std
les
fwait
insl
mov
push
or
stc
stc
sbb
pop
xchg
pusha
or
insl
or
jnp
in
sub
adc
inc
xlat
out
or
out
sub
pop
mov
jo
mov
dec
pop
addr16
jo
push
incb
sub
inc
mov
cli
mov
lock
sarb
frstpm(287
dec
inc
mov
mov
shl
iret
bnd
rcrb
cwtl
out
mov
dec
mov
dec
clc
and
test
rclb
cmpsb
dec
pop
push
mov
mov
xor
call
dec
sbb
mov
mov
and
rcrl
dec
ror
lcall
into
mov
pop
repz
fimuls
push
scas
out
aaa
push
cmp
mov
push
stos
rcrb
sbb
scas
inc
push
out
vmulpd
fucomi
and
aad
pop
pop
adc
mov
or
add
xor
push
fcomip
aad
addr16
and
lods
rorb
imul
cmpsl
gs
sbb
xor
xor
ret
imul
loop
in
rorl
test
lds
dec
cmp
xchg
cmp
cmp
add
cmp
fidivl
decb
push
push
pushf
add
stc
shll
repnz
pushf
sbb
adc
orb
repnz
dec
aas
mov
sbb
nop
test
cmp
dec
decb
jecxz
xor
mov
in
mov
fstpl
lcall
adc
xor
lods
cmp
test
int
mov
cmp
push
and
fldl2t
or
ss
test
adc
je
jbe
push
dec
mov
loop
pusha
aam
fcomps
dec
dec
std
fmull
scas
iret
fistpll
sbb
sbb
popf
jge
sub
hlt
fildll
ficomps
adc
aad
add
aaa
or
xchg
int
pushf
or
shll
xor
nopl
inc
sbbb
adc
insl
lea
push
pop
es
addr16
pop
sbb
mov
icebp
push
push
fldt
mov
cmp
hlt
lea
clc
icebp
and
cmp
pop
mov
insb
out
pop
xor
mov
icebp
adcb
das
lahf
shr
jno
xchg
pop
and
adc
jecxz
je
lahf
shrl
jle
add
cmp
xor
xor
testl
shll
pushl
adc
mov
stos
dec
icebp
daa
jae
out
mov
cmpsb
roll
insb
test
lods
sahf
pusha
ds
or
enter
or
xor
or
adc
xchg
inc
int
int3
mov
ficompl
push
xlat
mov
lret
out
mov
mov
lods
jno
pushl
sbb
xchg
repz
jle
xchg
and
sbb
es
mov
imul
rclb
movsl
pusha
pop
insb
ficompl
xchg
addl
popf
cmc
dec
or
push
push
cli
and
xor
mov
lahf
mov
lret
shr
jl
lds
cltd
dec
inc
dec
adc
imul
push
imul
pop
sub
mov
jp
ss
pop
sbb
xchg
aam
mov
mov
add
jns
std
adcb
cmp
mov
mov
sti
aas
fwait
nop
jl
push
push
mov
mov
repz
scas
mov
repnz
pop
adc
fsubs
aaa
push
arpl
inc
enter
inc
movsl
jno
fs
aaa
icebp
jl
loope
cltd
movsb
hlt
data16
cmp
jbe
in
sub
test
sbb
das
dec
pavgb
dec
jnp
mov
shl
in
xchg
in
insb
inc
cld
mov
pop
pop
and
push
dec
rorl
nop
pushf
ret
jnp
sbb
fptan
shrl
decl
xchg
or
add
nop
pop
cmpsl
sbb
jnp
jge
lahf
fdivp
inc
adc
xchg
xchg
ret
inc
lret
mov
adc
xchg
imul
xchg
out
add
fdivr
ljmp
mov
dec
shlb
imul
ret
add
cli
cmp
and
clc
data16
call
jns
jb
shll
fwait
shll
jg
rcrl
xchg
rcr
int3
and
stos
inc
cmp
push
hlt
sahf
mov
adc
xchg
addr16
sub
xor
loop
lcall
out
jl
mov
or
icebp
iret
fstps
xlat
imul
lret
jne
js
jl
loopne
jmp
int3
out
shll
fadd
cs
int
adc
mov
iret
sbb
push
hlt
sbb
mov
shll
xlat
adc
sar
das
xchg
out
sbb
test
push
jnp
repnz
push
add
adc
sbb
lock
mov
sub
or
cmp
sahf
mov
sbb
or
and
jo
es
movsl
cmp
repz
lds
pop
stos
ret
rorl
pop
fadd
or
in
pop
xor
fs
addb
mov
pop
repz
xchg
inc
cld
sti
mov
cld
leave
jno
xchg
mov
mov
sbb
sub
jge
sub
in
addr16
lock
cli
in
pop
dec
in
jg
jo
sar
fadds
imul
mov
mov
mov
jp
mov
stc
jmp
hlt
push
pop
add
test
push
fisttpll
or
inc
incb
inc
mov
dec
push
bnd
and
xor
mov
lahf
or
mov
es
hlt
inc
jmp
pop
test
xor
stos
cmc
lods
lea
pop
lods
sbb
movsl
cmp
sahf
mov
add
pop
loopne
rclb
cli
and
mov
sti
mov
fcmovbe
mov
outsl
xchg
and
push
push
xchg
push
test
ds
cmpsl
das
iret
rcrb
adc
inc
nop
adcl
adc
cmp
fs
cli
addr16
jge
mov
jno
cmc
jp
daa
xlat
and
data16
mov
add
sbb
frstor
mov
fldt
out
ja
pusha
sub
jmp
push
movsb
jg
stos
aad
test
popf
aaa
jge
mov
jnp
out
into
icebp
stos
insl
mov
fwait
das
mov
mov
sub
aam
jg
mov
dec
inc
orb
cmc
scas
mov
out
idivl
and
pop
jne
add
sbb
ret
fwait
cwtl
fnstsw
cmp
mov
nop
test
push
inc
mov
adc
frstor
int3
or
xor
push
xor
imul
mov
xchg
xchg
fsubs
xrelease
add
arpl
sub
xchg
das
xchg
into
pop
daa
jne
pop
and
outsl
sbb
movsl
add
shll
jle
outsb
jae
sub
pusha
bound
movsl
adc
inc
mov
fwait
mov
push
popa
movsb
shlb
stos
cmp
ja
aas
sahf
inc
jae,pt
inc
push
movsb
pop
mov
enter
xchg
xlat
stos
fwait
push
dec
leave
pop
aas
xor
mov
push
popf
or
sub
mov
bound
addl
mov
adc
pop
mov
mov
inc
shl
int
sbb
pop
cwtl
jne
arpl
fwait
dec
or
jmp
lea
inc
popa
lock
cmpsb
pushf
push
loop
ret
dec
sbb
int3
sbb
xchg
mov
jecxz
xchg
dec
cmpb
sub
cmpsl
mov
jg
mov
cmp
and
mov
iret
jg
cltd
aad
rol
xchg
push
xor
fs
push
outsb
inc
nop
fstpt
in
or
mov
xchg
fsubs
sub
xchg
out
and
lret
cmp
pop
xor
xchg
or
notl
dec
add
pop
rcr
cmpsb
inc
mov
pop
sub
mov
dec
push
cmp
sub
add
push
add
mov
jl
xchg
inc
or
addr16
ret
ds
sub
test
imul
mov
mov
mov
in
mov
insl
jg
inc
test
push
lret
push
insl
jmp
jo
jg
lods
sbb
int3
xchg
push
dec
mov
mov
lret
pop
shrb
mov
in
push
call
nop
sbb
adc
xchg
and
sub
xor
sub
jo
jo
js
sbb
std
pop
not
mov
in
inc
mov
xchg
rcl
insb
movsl
nop
mov
mov
setns
mov
inc
loope
fsubrl
push
sbb
test
loop
mov
inc
dec
xor
adc
xchg
imul
xor
aas
inc
movsb
mov
sub
jne
adc
xorb
cmp
xchg
jb
arpl
stos
jnp
lods
mov
rorl
fidivs
xchg
or
ret
and
sbb
mov
adc
mov
jge
loope
vrsqrtps
shrb
movsl
adc
not
pop
shr
sub
pop
and
icebp
sbb
lods
mov
inc
outsl
dec
sbb
jp
sti
inc
ficoms
mov
push
adc
jae
fistl
aaa
int3
aas
enter
or
stos
inc
mov
movsl
clc
mov
jnp
fwait
test
repz
loop
jbe
inc
out
jne
sub
fildll
shr
jp
cmpb
stos
addr16
xchg
pop
enter
jnp
data16
insl
adc
push
jb
xlat
cmp
push
xor
cmp
fadds
jae
cmp
and
adc
or
inc
inc
add
dec
sbbl
and
std
ljmp
inc
clc
xchg
push
lret
lock
ret
ficoml
mov
fwait
mov
mov
leave
push
mov
call
pop
lret
int3
les
movsl
xchg
hlt
std
lods
stos
nop
pop
mov
das
ds
loope
adc
ds
mov
cwtl
sub
jg
pop
scas
xor
lock
in
ja
popa
daa
jecxz
pop
pop
add
imul
xchg
push
movsb
adc
jae
popl
addr16
cmp
popf
mov
dec
movsl
mov
jo
fiaddl
imul
setbe
mov
cmp
jno
sahf
push
mov
mov
mov
cld
pop
push
mov
jne
sahf
dec
jp
jae
jnp
mov
cmpsl
pop
js
dec
fwait
sub
and
call
pop
out
lret
jne
daa
cs
mov
mov
pop
jecxz
inc
dec
sub
fstl
and
ficompl
mov
movsb
test
cwtl
jle
pop
fimuls
test
pop
sub
scas
fisttpll
mov
sub
pop
cs
xchg
mov
cltd
and
test
jno
cmp
sub
jg
inc
and
and
shl
rcrb
ja
xor
lret
lods
dec
decb
pop
push
imul
push
cld
scas
outsl
cmp
rcrb
or
adc
rcll
inc
sub
fs
xor
adc
into
mov
or
mov
push
mov
or
fnstcw
sub
sarb
pextrw
xor
sbb
popa
cmc
clc
decl
loope
xor
jno
jmp
in
add
xchg
adc
lahf
mov
sub
push
in
cli
adc
push
mov
sbb
movsl
int3
or
sbb
mov
dec
mov
lret
ret
mov
xchg
aad
mov
xchg
sub
andl
pop
aas
fmuls
mov
fs
jge
nop
add
mov
gs
xlat
xchg
sub
dec
xchg
aas
xchg
xchg
inc
pop
stc
repz
push
cmp
sbb
and
orb
repz
out
xor
mov
jge
cmp
fisttps
enter
les
jmp
xchg
mov
dec
in
adc
xor
mov
jge
in
and
stos
shll
inc
mov
and
cmp
mov
xchg
mov
inc
movsl
sub
cmpsb
mov
add
notl
xchg
fmull
outsl
aad
nop
repnz
mov
in
mov
stos
mov
pop
add
les
add
jge
lods
sar
pop
pushf
mov
addb
arpl
inc
push
push
add
push
push
pop
out
shrb
sub
cltd
xlat
sbb
jge
jb
pop
cmp
cli
dec
push
setne
call
adc
push
cmp
ds
movsl
mov
cmp
arpl
ljmp
push
rcrl
idivb
outsb
mov
dec
pop
mov
fdivs
aad
sahf
push
scas
enter
jno
imul
sti
sub
addr16
jge
into
jl
and
int
imul
xor
sub
addr16
clc
bound
test
out
sarl
xlat
xlat
dec
push
fcmovu
lcall
cli
dec
out
in
xor
add
cmc
out
sub
idivl
es
lods
dec
loop
lret
mov
xor
mov
mov
jo
outsl
scas
jne
test
add
sub
inc
fbld
cmpsl
sub
adc
cmpsb
fisttpll
mov
cs
mov
sti
jbe
xchg
incb
shlb
pop
add
jno
mov
and
pop
xlat
cmc
out
arpl
push
addl
sub
inc
jb
push
aam
and
stos
into
sbb
xor
aas
mov
jnp
or
shll
pop
inc
imul
stos
repz
insl
jle
jl
mov
scas
and
or
mov
jecxz
xor
out
aam
fisubrl
add
cmp
rcr
push
roll
add
jbe
imull
and
push
out
jp
in
sub
cmp
mov
popf
dec
lret
jns
xchg
dec
push
mov
sahf
fs
push
test
xchg
sbb
loop
push
loop
mov
out
lds
out
dec
movsb
push
add
pop
fmul
and
lods
pop
jp
cwtl
mov
dec
jmp
adc
sub
jp
and
and
and
dec
scas
add
icebp
and
dec
push
push
cmc
inc
insl
or
fiaddl
cs
push
sub
sbb
push
xchg
cmc
mov
mov
adc
mov
shll
push
shrb
cmc
inc
mov
lea
pop
pop
rclb
cmp
outsl
mov
and
dec
imul
into
dec
cmp
jl
mov
cwtl
sub
out
jl
shrl
jbe
fs
popa
test
addb
mov
shlb
inc
jbe
xor
jns
lods
in
icebp
mov
sbb
movsb
dec
adc
jmp
and
lret
cs
ret
inc
push
jbe
dec
mov
loope
jle
clc
adc
data16
lcall
cmp
cmpsb
xchg
inc
xor
int3
out
test
loopne
jns
jg
inc
jae
stos
movsl
insb
push
pop
out
test
aas
and
out
mov
xor
cmpsl
std
mov
adc
sbb
jae
movsl
or
insb
sub
cmp
mov
add
and
mov
negb
dec
ja
or
and
mov
cli
mov
push
cmp
xchg
mov
loope
scas
rclb
adc
jbe
lea
iret
mov
inc
test
push
push
outsl
sub
cmpsb
xchg
mov
add
push
push
jbe
jmp
xor
bound
fisttpl
test
movsl
in
mov
mov
inc
jg
dec
add
push
arpl
fiadds
adc
adc
les
cmp
mov
mov
movsl
mov
pop
enter
push
cld
aam
push
ss
sub
sub
dec
jo
insl
or
subb
arpl
lret
rol
dec
adc
mov
fstp
add
sub
pushf
int
lods
adc
push
mov
jo
push
jge
outsl
pop
fmulp
push
cltd
add
fdiv
sti
dec
lods
jecxz
mov
pusha
stos
lahf
daa
lcall
inc
rcll
push
xor
jb
and
js
push
inc
mov
lret
mov
mov
pop
popa
out
inc
add
ss
mov
testb
popf
sti
mov
nop
mov
pop
cmpsl
pop
jmp
ljmp
jge
mov
out
xchg
and
pop
xchg
stos
in
mov
sahf
push
outsl
paddsb
hlt
out
jp
xchg
lods
cmp
roll
lds
pushf
into
cmp
scas
iret
shll
jbe
sahf
sbb
dec
jb
repz
fbstp
pop
int3
stos
adc
hlt
inc
xchg
test
cmpsb
ud2
mov
out
or
mov
ds
adcl
xor
push
or
daa
or
pop
xchg
arpl
cld
xor
xor
pop
cmc
mov
sub
pop
cmp
mov
lods
lret
pop
clc
pop
out
and
mov
or
adc
shll
pop
lods
or
lods
out
mov
xchg
lods
push
adc
jg
fwait
test
mov
mov
aas
mov
jge
addl
fadds
xchg
and
lods
lahf
jb
mov
and
rcr
movb
cmpsl
in
xchg
cmc
shll
sbb
popa
stos
push
scas
xor
arpl
dec
lret
addl
xchg
sarl
sti
addl
jmp
xchg
mov
pop
mov
lds
popf
xchg
push
jns
xorb
cmp
loope
in
in
scas
adc
pop
mov
popf
loope
in
aam
data16
adc
mov
dec
cmc
jg
fstps
fprem
test
push
fdiv
push
pop
xorl
icebp
jb
push
xor
out
out
sub
pushf
cmp
sbbl
mov
or
xorl
sbbl
les
cmp
lds
push
cmp
mov
fdiv
mov
insl
aas
jge
call
or
push
mov
stos
fsubs
inc
sti
je
cmp
add
out
daa
mov
data16
dec
cmpl
je
fs
mov
out
nop
mov
cmp
aad
cmp
xchg
repnz
mov
repz
sbb
clc
pop
ficoms
fs
xchg
jl
shl
push
inc
mov
adc
mov
fbstp
xlat
pusha
inc
cld
jo
push
xor
push
adc
int
jp
adc
loop
mov
mov
xor
pop
out
cmpsl
popa
scas
es
cmp
imul
scas
jmp
inc
out
push
imul
or
pop
enter
mov
nop
call
lcall
jb
clc
xor
ret
mov
fcmovne
int
jno
cli
jne
cmp
jmp
scas
cltd
cs
or
sub
fcmovnb
pop
add
pop
repz
inc
fwait
scas
repz
test
insl
sub
test
ret
xchg
adc
push
cld
mov
or
mov
mov
popa
add
das
fcmovne
or
rorb
fbld
xchg
call
mov
ds
sbb
inc
fisubrs
xorb
popa
bound
aaa
add
cmpsb
in
cmp
mov
mov
jbe
push
xor
pop
loopne
pop
roll
mov
adc
xchg
xor
test
loop
ret
jns
test
add
jo
je
mov
popf
es
xchg
movsb
pop
cmp
sbb
aad
ds
sbb
mov
push
pop
jno
xor
in
sub
sahf
cmpsb
add
cmpsl
movsl
xacquire
push
pop
sub
mov
pop
es
mov
xor
or
hlt
sub
repz
xor
fucom
inc
fisttps
rsqrtps
mov
push
push
jne
dec
xchg
mov
roll
aad
push
cmc
movl
cld
jmp
jae
out
cmp
pop
or
pop
popf
xor
sub
int
push
pop
mov
pop
pusha
stc
pop
testl
dec
repnz
dec
and
sbb
dec
adc
adc
jns
adc
cmp
mov
jno
ds
mov
sbb
imul
cmp
ja
popf
movsl
and
imul
or
pop
inc
int
mov
loop
addb
aas
jl
testl
loopnew
das
mov
add
outsl
into
xor
cmp
mov
fistpll
mov
sahf
mov
stc
loopne
jae
or
in
int
xchg
jge
mov
xor
repz
test
xchg
popa
out
rorb
outsb
cmp
jl
data16
loopne
pop
sti
and
push
das
push
add
add
mov
hlt
ret
fldenv
ds
dec
stos
lret
adc
mov
cmpsb
add
imul
mov
inc
sub
fdivrl
fs
push
repz
xchg
dec
cld
bound
adc
mov
je
xorb
orl
es
mov
loop
addr16
maxps
mov
insl
jnp
mov
adc
pop
mov
push
lods
mov
jmp
sbb
sub
xchg
cmpsl
pop
mov
es
sub
test
jnp
cltd
aad
shll
or
mov
pop
push
jg
inc
in
daa
dec
rolb
and
jp
shll
les
lret
jnp
dec
sbb
mov
scas
gs
sbb
subl
aaa
out
push
ljmp
ror
bound
fidivl
dec
mov
add
pop
dec
xchg
loope
inc
mov
mov
mov
sub
call
shlb
dec
xor
xchg
je
inc
pop
ja
mov
sti
inc
es
decb
adc
add
jae
sub
outsl
sub
sar
nop
out
inc
xor
fildl
fnsave
lock
mov
jno
xchg
xchg
addl
aam
sub
pop
sub
cmp
in
jle
ss
das
out
imul
shl
push
addr16
je
int3
xor
sbb
popf
jle
test
pop
nop
cmp
enter
sbb
hlt
jge
loope
outsl
shrb
insb
mov
out
cmp
outsb
lods
add
xor
push
sbb
hlt
mov
xchg
mov
incb
jbe
xor
and
fdivrl
jle
outsb
push
aad
out
cmc
lods
icebp
inc
mov
cwtl
int3
mov
mov
mov
push
mov
bnd
and
imul
xor
sbb
insl
in
fwait
ljmp
das
fmuls
adc
bound
adcl
sarl
sarb
sub
mov
xorl
pop
jge
xchg
out
jb
pop
out
pop
pop
aaa
sbb
dec
movsl
test
or
outsb
and
push
outsl
xchg
loopne
fwait
ror
popf
sub
test
jge
sti
xlat
in
xor
sbb
iret
je
lahf
push
add
repz
ds
pop
fs
ret
ja
jmp
jecxz
pop
cmp
xchg
sahf
xchg
pop
mov
pop
pop
jae
inc
mov
gs
mov
loop
ret
inc
fimuls
roll
cmp
sub
adc
imul
fstp
mov
xchg
mov
jmp
push
icebp
mov
fs
pop
testb
mov
xlat
pop
xor
test
jo
mov
cmpsb
xchg
push
mov
jnp
test
aaa
lahf
sbb
mov
sbb
gs
test
iret
rcll
test
lods
lcall
orb
rolb
jge
pop
xchg
push
jns
push
mov
jg
out
ljmp
jne
push
ficoml
pop
loop
push
push
xchg
and
scas
addl
lret
loopne
pop
mov
dec
inc
scas
insl
ds
mov
push
repz
insl
inc
cltd
lods
or
int3
sub
daa
ret
jnp
xchg
fstp
dec
push
inc
scas
jb
ret
call
xchg
testl
lock
in
mull
leave
test
add
ss
ret
je
fisttpll
sbb
push
mov
out
das
arpl
xchg
xor
sub
packssdw
popf
xor
in
cmpsb
fiadds
ret
int
xor
in
or
cmp
sbbb
adc
adc
jge
leave
mov
push
adc
cmpsl
cmp
mov
out
xchg
fnstcw
jns
jbe
jbe
jo
out
rclb
rorl
sbb
outsb
adc
hlt
push
fs
mov
fmull
dec
stc
xor
or
and
cmc
outsl
bound
inc
push
rcrb
fisubrl
das
jp
mov
pop
loop
mov
js
addr16
nop
mov
or
je
mov
inc
insl
inc
jmp
inc
fcompl
dec
push
subb
loopne
xchg
fiaddl
leave
mov
dec
cli
shlb
into
xchg
or
addb
es
fs
xchg
add
and
out
or
outsb
cmpb
stc
mov
adc
add
mov
mov
int
add
testb
test
daa
and
mov
cmpsb
inc
sbb
sbb
aaa
cmc
clc
inc
cltd
into
sbb
and
mov
xor
mov
and
adcb
popa
lods
out
aaa
and
add
ljmp
popa
cmpsb
in
sbb
lods
mov
or
jecxz
or
insl
jb
std
lea
es
dec
sub
mov
fwait
jge
and
xchg
jo
jp
push
dec
clc
push
lods
loopne
push
pusha
xor
addr16
adc
add
icebp
lcall
ss
bound
cmp
push
pop
lret
lock
xor
or
dec
jae
sub
inc
aam
fdivrs
out
and
push
push
adcb
hlt
cld
clc
cld
scas
push
adc
mov
adc
push
jp
mov
fs
loope
addb
sub
push
lock
out
add
fnstcw
jo
aam
int
ljmp
or
insl
test
and
jl
fildl
and
int
jnp
ss
ljmp
mov
aas
roll
loopne
jo
push
imul
jo
push
clc
fcmovb
jp
fdiv
sub
sub
fwait
mov
pop
pop
sub
fcmovu
sbb
xor
cmp
into
adc
fsubrl
jo
jb
push
scas
cmp
push
dec
bound
mov
je
arpl
add
dec
and
out
xchg
das
push
jle
leave
cmp
mov
mov
mov
adc
xchg
and
pushl
fisttps
shl
xchg
jns
adc
mov
sub
les
inc
adc
insb
cmp
sub
pop
mov
sbb
leave
incb
add
add
cld
add
pop
mov
call
lcall
pop
aad
stos
js
xor
stc
sbb
cmpl
lcall
inc
pop
mov
lods
icebp
imul
into
cmp
aad
jmp
mov
je
and
nop
sub
mov
push
adc
out
arpl
push
sub
adc
and
mov
pmullw
push
dec
push
xor
je
ds
bound
pop
cmc
popf
shlb
aad
pop
cmp
int3
mov
mov
je
adc
mov
jb
pop
push
ret
mov
jp
lea
push
outsb
push
add
pop
sub
test
or
repnz
enter
lods
and
mov
arpl
and
subl
push
xchg
adc
mov
and
jge
sbb
cli
dec
sbb
xchg
ffree
xor
cmc
or
pop
call
push
dec
les
out
xor
xchg
jmp
daa
sbb
xor
dec
inc
push
push
cmpsb
mov
aas
sub
mov
loope
adc
xor
dec
lcall
add
adc
daa
mov
out
cmpl
pushf
dec
add
ret
imul
adc
push
pop
cmc
ficoms
mov
int
loope
mov
out
add
add
dec
pop
stos
mov
jge
imul
scas
or
push
movsb
or
loop
les
add
or
dec
lds
adc
sbb
lods
out
jmp
adc
out
xor
rcr
lret
adc
sti
cmpsl
cmpsl
ret
in
mov
mov
stc
scas
pop
jg
mov
inc
push
test
jle
sub
or
sahf
adc
mov
jl
aas
fwait
out
jno
gs
mov
repnz
pop
out
push
nop
sbb
dec
jl
jge
sub
xchg
into
xor
pop
jecxz
ds
rcrl
mov
sub
sbb
push
jne
mov
out
dec
adc
xor
cld
xor
stos
je
pop
ret
cmpsb
into
in
cmc
imul
shrb
pop
add
pop
inc
xor
inc
pop
dec
mov
fcompl
cwtl
xor
cli
sti
or
jl
cmp
push
cltd
cmpsb
jb
or
mov
sbb
xchg
hlt
dec
mov
jge
ret
pop
cld
inc
lock
sub
cmp
or
popf
sti
mov
xor
sti
xor
sbb
loopne
inc
xor
loopne
test
xchg
fincstp
inc
and
insb
cmp
dec
mov
pop
loop
imul
mov
lret
pop
push
dec
cmpsb
mov
jg
mov
xchg
push
push
jmp
mov
jnp
pop
clc
gs
shrb
sbb
aad
and
mov
rolb
lods
ljmp
and
imul
scas
mov
jbe
shll
mov
insl
mov
nop
pop
mov
adc
fsubr
mov
and
rorb
jns
add
add
or
jl
hlt
cmc
add
sub
and
fwait
mov
sub
mov
mov
aad
push
roll
int
cmp
mov
pop
pop
popf
cmp
pop
test
jmp
xor
lds
xor
pop
dec
add
shll
cmpsl
out
pop
mov
mov
popw
add
mov
int
inc
inc
dec
inc
inc
nop
mov
mov
xchg
or
xchg
xorb
add
js
popf
dec
lods
cli
mov
xchg
cmp
stc
stos
leave
adc
and
or
inc
lcall
push
mov
nop
mov
mov
add
test
gs
icebp
sub
punpcklbw
dec
or
push
notl
inc
ljmp
lds
shl
mov
jno
sbb
nop
jae
test
out
cmp
mov
call
ss
in
xchg
enter
imul
nop
add
shl
xor
jo
cmpsb
or
cld
test
push
inc
lahf
lret
and
test
icebp
shr
test
sbb
cmpsl
xor
cmp
lea
sti
fldenv
dec
xor
stc
jg
xchg
and
not
dec
nop
cmc
adc
add
mov
test
es
push
enter
decb
loope
stos
leave
popf
sub
xchg
jp
dec
cmp
inc
xor
nop
push
adc
mov
into
cmp
sbb
jb
fwait
or
dec
push
fistpll
jne
fsubrl
or
xlat
insb
aam
dec
jg
aam
jecxz
jb
addb
sbb
cli
icebp
popf
dec
xlat
sahf
ljmp
or
inc
push
cmc
pop
pop
jge
sub
ja
sub
cmp
pop
push
dec
fnsave
mov
lret
cs
lods
movsb
mov
orb
aad
cmp
and
inc
daa
ret
cwtl
xchg
filds
das
faddl
imull
out
das
mov
popf
dec
in
testl
mov
inc
call
cmp
push
call
bound
cmp
mov
test
iret
popf
xchg
pop
add
js
insb
int3
adc
je
dec
aas
mov
mov
out
in
sbb
sbb
test
sarb
push
clc
pop
sub
sbb
dec
mov
mov
dec
cmp
test
repz
into
xor
scas
sub
ja
lcall
push
cld
jae
out
add
fmull
cltd
fidivs
push
lods
jb
fyl2xp1
push
daa
ret
pusha
aaa
jle
shlb
jb
lods
add
add
mov
mov
add
inc
jno
cltd
sbb
loop
mov
mov
inc
and
fwait
add
movsb
jl
ja
mov
pop
add
hlt
insl
pop
pop
xchg
cwtl
and
xor
mov
jp
sub
jl
mov
in
mov
lods
leave
pop
xorl
mov
int
adc
add
cmp
shlb
scas
imul
loopne
push
cmp
lahf
xchg
pop
mov
and
fs
jp
or
js
stos
adc
jne
popf
pop
out
in
or
iret
xchg
dec
les
repz
pop
sar
lods
push
jnp
mov
jg
cmp
jle
xor
fidivs
or
mov
or
dec
outsb
nop
pop
jmp
adc
pop
push
mul
leave
adc
cmp
sub
cwtl
mov
mov
sahf
sbb
pop
cmpsl
push
pop
cmpb
in
fistpll
fscale
aam
sbb
in
sbb
cmpl
popa
mov
mov
push
add
test
mov
lcall
insl
sbb
movsb
cmp
mov
mov
loope
insl
dec
ret
cmp
arpl
addr16
out
dec
dec
fstl
mov
push
jb
dec
or
or
pop
pushf
jne
ja
imul
inc
test
sbb
insl
xor
xchg
shr
fstpl
shll
imul
fisubrl
cs
jmp
pop
push
and
movsl
out
cmp
pop
mov
inc
dec
sub
dec
mov
and
mov
fdivrl
xchg
sbb
or
add
clc
dec
test
xorb
sub
or
mov
jo
cltd
stc
loopne
cmpsl
xor
mov
xchg
movb
int3
fnsave
jecxz
addr16
xchg
inc
into
add
dec
xlat
imul
sub
sub
push
pop
mov
pop
dec
dec
ss
addr16
cmp
out
dec
add
daa
xor
dec
cs
clc
ljmp
mov
aam
stos
mov
cmp
daa
xchg
inc
xor
jg
pop
and
sub
outsl
daa
leave
inc
mov
repnz
pop
cmc
test
arpl
xor
ja
lret
inc
movsl
rorb
imul
pop
scas
cmp
lea
adc
cmp
stc
pop
pop
in
mov
insl
inc
push
xchg
lcall
outsl
ja
test
jae
test
xlat
fimull
pusha
mov
or
lret
jns
mov
jnp
cmp
loope
pop
or
in
cmpxchg
push
divl
inc
cmp
jne
push
rclb
xor
inc
mov
cmc
inc
cwtl
fildl
adc
mov
xor
jmp
in
test
mov
push
xchg
pop
jmp
nop
lret
popf
nop
xor
mov
std
mov
fwait
add
push
fcompl
lret
aam
pop
iret
mov
test
lcall
lcall
dec
repz
or
jecxz
mov
outsb
outsb
orl
into
jl
std
test
mov
cmp
sub
xchg
fs
adc
or
adc
cwtl
test
arpl
lods
xor
adc
jmp
popa
pop
sbb
sub
testl
dec
idivl
pop
flds
mov
hlt
sbb
popa
les
xor
inc
int3
ljmp
rolb
lret
xor
mov
js
sti
out
les
mov
xchg
gs
shrl
insl
outsb
icebp
ss
sub
fs
cmc
rcrl
sub
and
cmp
fsubrs
mov
pop
insl
das
add
rcrb
pop
movb
pop
push
pop
push
jg
jl
les
arpl
and
sbb
push
push
sti
xchg
pop
scas
fdivrl
shrl
mov
jno
test
dec
bound
xchg
sub
dec
mov
lds
xchg
dec
pop
jg
xlat
mov
std
sub
je
test
bound
push
jle
add
andb
fmul
add
push
mov
mov
sbb
orb
subb
jnp
or
dec
push
sbb
cmp
test
cmpsl
xchg
or
mov
imulb
pop
push
mov
das
lds
fs
int3
les
cli
pop
push
cmp
inc
or
cmp
jp
adc
inc
inc
ss
jb
ljmp
push
adc
call
mov
pop
mov
sub
mov
xlat
and
and
cltd
mov
aas
ljmp
jl
dec
in
notb
movsl
loop
jmp
ja
shl
push
adcb
aas
jns
dec
dec
jg
sbb
jmp
aaa
ljmp
pop
pop
mov
pop
stos
and
out
std
xchg
push
lea
jmp
sbb
adc
cmp
add
mov
test
dec
aas
jg
das
nop
shrl
popf
inc
push
inc
lret
addr16
test
nop
add
push
mov
std
enter
loope
jnp
popf
or
sbb
xlat
mov
repnz
mov
pop
sub
mov
int
dec
xchg
pop
mov
inc
push
or
insb
xchg
cmp
dec
sub
dec
pop
loopne
rcr
add
pop
outsl
insl
sbb
sbb
sub
adc
fs
mov
mov
jo
jg
daa
fisttps
les
popf
call
frstor
mov
jne
or
sbb
or
xchg
inc
xchg
or
push
loopne
sbb
mov
mov
arpl
mov
inc
or
dec
arpl
jne
insb
enter
or
lea
xor
dec
mov
test
ret
cmpsb
xor
adc
mov
xchg
mov
jp
dec
imul
add
jp
sub
jbe
fstl
push
pop
aaa
loopne
in
fwait
jbe
xchg
repz
xchg
dec
lret
cltd
xchg
sbb
mov
cs
icebp
xchg
xchg
cwtl
mov
push
dec
lock
push
jns
add
das
mov
cltd
push
decl
pop
lcall
ds
nop
fsub
push
push
pop
adc
mov
xchg
imulb
out
lea
mov
cmp
sbb
movsb
pop
adc
push
enter
ja
xchg
xchg
adc
sub
mov
fcmove
addr16
jb
fnstsw
pop
stos
inc
pop
xchg
sbb
add
or
xchg
daa
mov
adcb
xor
fcmovbe
pop
sbb
cmp
dec
jo
push
divl
adc
hlt
xchg
inc
mov
push
inc
jae
push
outsl
stos
lock
xor
add
mov
cmpsl
mov
dec
inc
and
mov
jle
inc
mov
sarb
sar
scas
cld
repnz
addb
out
loop
ret
mov
push
out
xor
loopne
inc
push
push
ljmp
ss
fisubl
out
mov
in
test
leave
mov
fwait
mov
push
addr16
xor
mov
inc
ret
xlat
aad
pop
enter
popf
jo
mov
jb
ja
xchg
inc
push
ror
dec
je
mov
fstpl
mov
ret
inc
cs
mov
addb
pop
pop
dec
jge
push
test
out
repnz
xchg
xchg
inc
xchg
cmpsb
out
or
xor
mov
outsl
push
adc
iret
lcall
mov
out
sub
lods
xchg
jnp
dec
push
out
leave
cld
xchg
test
sub
fwait
dec
arpl
insl
ljmp
in
or
add
pop
jns
cmpl
jp
sub
push
cwtl
fcomps
add
push
clc
jns
shll
xchg
data16
sbb
je
cmp
frstor
jnp
mov
fyl2x
inc
jmp
jbe
sub
std
xchg
insl
sti
xor
aas
or
je
test
lahf
mov
inc
lahf
ret
shll
mov
ds
scas
repz
mov
push
or
sbb
cmpsb
or
lret
xchg
mov
xchg
fwait
mov
sbb
xchg
sarb
movsl
push
test
push
sahf
pop
inc
pop
xchg
adc
in
push
inc
mov
pop
add
jno
repz
test
add
ljmp
jb
inc
pusha
pop
fsubrl
mul
sub
adc
mov
outsl
loope
gs
enter
pop
mov
inc
fcmovnbe
in
out
or
cwtl
les
sub
pushf
movsl
jle
add
ljmp
mov
sub
xlat
and
nop
add
mov
mov
add
inc
mov
hlt
jne
movsb
in
mov
xor
xor
scas
sti
inc
add
push
gs
or
ret
mov
add
pop
jle
add
dec
cmp
cmp
add
imul
xor
xor
pusha
loop,pn
jno
aas
stos
adc
dec
pop
aad
sub
popf
loope
loope
jl
inc
jmp
xchg
movsb
cmpsb
add
testb
fldt
scas
scas
popa
cs
out
out
adc
cli
inc
data16
jecxz
mov
popa
jnp
insl
in
add
mov
adcb
call
push
mov
scas
adc
mov
or
push
es
imul
jg
sbb
mov
push
jg
es
or
pusha
cld
insb
in
xchg
dec
leave
jle
pop
mov
aam
loopne
or
push
sets
xor
es
mov
xchg
roll
mov
imul
and
je
pop
out
sub
dec
rorl
mov
xor
movsl
adc
loope
scas
adc
xor
out
pop
mov
je
jmp
add
jg
rclb
mov
sahf
sub
lock
aam
adc
cmp
adc
cli
mov
xor
sbb
lods
shrb
data16
out
push
mov
sbb
dec
stos
cmp
movsb
outsl
in
faddp
lcall
adc
clc
adc
dec
add
push
mov
sub
sub
out
cltd
xchg
cmpsb
ds
jp
lahf
mov
data16
mov
and
pop
lea
sti
popf
sub
dec
jne
pop
add
inc
lret
jbe
push
mov
je
movsb
into
je
inc
mov
sbb
adc
inc
pop
sbb
push
rcll
jg
cs
lock
xchg
xlat
inc
xchg
mov
xor
sbb
dec
mov
mov
cmpsb
jne
std
cmpsb
call
jns
push
adc
mov
sub
add
popf
jecxz
pop
cwtl
in
sbb
adc
fisttps
repnz
aad
inc
stos
fiaddl
sbbb
xchg
and
adc
mov
notb
jl
rcrb
mov
lahf
loopne
pop
repnz
adc
xor
xchg
into
fwait
ljmp
lcall
in
repz
and
into
mov
aam
push
int3
outsl
jne
js
ret
test
shlb
inc
adc
push
nop
mov
rolb
sti
les
jge
xor
sub
subl
das
scas
sbb
pushf
and
add
sbb
data16
flds
popf
mov
inc
push
cli
fistpll
rcrb
push
and
mov
dec
mov
fs
cmp
jecxz
pop
addb
popf
push
adc
mov
jo
mov
mov
mov
jmp
inc
sbb
mov
xchg
xor
popa
je
dec
mov
out
and
push
pop
sub
sub
je
inc
xchg
jle
rorl
or
ror
mov
sbb
cli
push
les
js
pop
or
lcall
sub
xorb
test
mov
jns
imul
xchg
sub
insl
repnz
fildll
sub
lret
mov
jle
lods
push
movsb
or
mov
imul
cmp
sarb
cs
ret
xchg
cmp
push
mov
fwait
cmp
inc
pop
call
dec
mov
inc
clc
pop
es
mov
leave
adc
or
dec
sbb
inc
jecxz
rcr
insb
mov
pop
pop
fsubp
xchg
out
clc
movsl
insb
roll
or
cmp
adc
mov
mov
lods
add
fsubrl
fwait
rorl
mov
mov
and
mov
jmp
int3
pop
sbbb
jecxz
leave
xchg
mov
loop
mov
ffree
dec
push
cwtl
mov
push
add
leave
pop
mov
push
jl
mov
push
test
fimuls
and
popf
push
pop
notb
cmp
lea
mov
es
inc
rcrb
shrl
xor
mov
shlb
push
pop
mov
testb
fistps
jecxz
lods
pop
out
pop
pop
aad
daa
aaa
xor
sahf
xchg
ja
test
or
xor
jmp
and
mov
jnp
cli
mov
call
and
jecxz
enter
push
xor
adc
cmpl
pmuludq
int3
jbe
jl
lds
ja
mov
lods
cs
jmp
fsubr
fnclex
pop
lds
mov
jbe
dec
fistps
jg
stos
inc
icebp
mov
mov
dec
fimuls
je
xor
in
push
mov
fwait
imulb
mov
sbb
repz
incl
loop
orb
jnp
push
ds
rcr
rcrl
mov
xor
add
adc
cwtl
scas
dec
push
mov
or
dec
or
jne
pop
pop
js
mov
test
jmp
add
xchg
jle
jg
and
insl
fincstp
or
mov
or
mov
sub
enter
popa
xchg
cmp
add
test
imul
mov
movsl
sub
cltd
ss
movsb
jg
lock
sub
adc
stos
pushf
popa
sub
inc
fiaddl
inc
mov
sbb
mov
sub
sahf
cmp
inc
or
fs
jne
rolb
xchg
mov
mov
movzbw
push
mov
es
push
daa
sub
sbb
out
dec
bound
cli
xchg
out
fists
fstps
fsubl
lret
pop
dec
lret
push
mov
ud0
mov
or
aad
add
insl
add
frstor
jp
cmp
adc
inc
sub
in
rolb
scas
pop
loope
jb
push
scas
or
sub
sbb
sbb
cmp
lds
xor
mov
js
jg
inc
add
push
mov
repz
cmp
jecxz
fnstenv
fdivl
subl
sbb
jns
mov
lret
les
xor
mov
xchg
inc
out
push
pop
lods
or
cmp
arpl
jl
jmp
jb
mov
sbb
outsb
jb
fcompl
push
and
outsl
pop
and
fwait
sub
xor
xchg
loope
insl
pop
add
ficomps
shll
stos
outsb
out
lahf
lods
popa
xchg
sbb
jno
icebp
pop
pusha
and
loopne
push
ret
loop
mov
push
mov
mov
lret
xchg
aas
jl
nop
pusha
add
pop
xchg
or
bound
jmp
xor
dec
push
or
test
ret
pop
jae
xor
shl
mov
add
xor
ret
daa
mov
sar
outsb
xor
in
sti
add
movsl
repnz
ljmp
out
imull
test
and
outsl
fsubrl
enter
das
outsl
jle
sbb
ds
int
and
dec
add
dec
out
mov
ja
lcall
ljmp
test
int3
adc
into
sbb
in
shll
rorl
xor
cmp
aad
fdivr
int
adc
loop
fwait
mov
and
pop
lock
xor
mov
push
or
jnp
out
cwtl
dec
cmp
inc
movsb
fsubs
cltd
pop
test
push
loop
xchg
movsb
push
mov
lcall
mov
daa
jns
mov
imul
jle
and
xchg
dec
mov
jne
pop
in
sbb
push
ret
enter
aam
int
xchg
mov
xor
xor
add
rcrl
sbb
push
cld
mov
fldcw
in
test
popf
stos
repnz
push
js
mov
loope
mov
rcrb
pop
bound
aas
cmp
das
cli
pop
add
lods
cltd
pop
push
out
or
out
push
mov
jmp
xor
push
jle
addr16
inc
add
mov
jecxz
dec
inc
rcrb
js
dec
inc
pop
push
rol
jg
fcmovnbe
mov
dec
add
jns
pop
imul
xchg
sbb
and
sub
clc
stos
xor
les
inc
pop
push
sub
jl
adc
out
sbb
rorb
or
mov
lahf
loop
sub
fists
sbb
cmpps
test
sub
jg
gs
aam
sbb
mov
into
sbb
xchg
lods
and
rcl
fcomps
jns
push
jb
mov
pop
pop
mov
cli
mov
xor
pop
adc
mov
mov
pop
js
xor
sub
hlt
mov
pop
fxch
pop
xchg
jbe
stos
imul
ffreep
inc
jl
push
jnp
ret
sar
add
das
out
jg
jle
call
jg
jl
adc
repnz
dec
fwait
sahf
stos
cmp
int3
mov
or
mov
in
movsl
mov
mov
and
inc
jno
lds
mov
adc
adc
insb
sub
xor
in
or
js
push
out
mov
int3
xor
inc
out
and
dec
push
xlat
adc
jbe
xor
dec
sbbl
push
test
lods
sbb
push
jae
pop
arpl
cmp
jmp
pop
cmpsl
push
lcall
les
and
aaa
inc
loop
push
xor
cmpsb
mov
sub
clc
arpl
jl
sbb
imul
ss
xor
add
mov
insl
push
mov
lret
inc
or
out
in
jb
and
imull
jne
lret
pop
dec
out
mov
mov
nop
mov
pop
pop
jge
lcall
add
scas
les
push
out
popf
mov
es
xchg
and
xchg
fwait
or
es
cmp
mov
sub
test
cmp
shll
cwtl
sti
xor
or
push
sbb
aaa
add
js
lcall
sbb
js
les
cmpsl
scas
dec
lret
mov
lea
sub
scas
dec
add
sub
sahf
insl
lock
aam
cmpsl
xor
popf
push
test
push
mov
in
fsubrs
adc
fcmovnu
adc
adc
fstpt
sub
insb
call
ficomps
mov
aam
call
dec
fistps
mov
pcmpgtd
daa
insl
je
mov
arpl
into
cld
push
and
loope
sbb
pop
out
mov
dec
mov
sub
jo
vunpcklps
sub
dec
pop
out
mov
push
call
outsb
movsb
dec
pop
mov
push
mov
in
bound
push
xorb
xchg
xchg
lds
mov
outsb
xor
fistpll
jb
cmp
lea
int3
mov
xchg
popa
xchg
stos
cld
in
inc
mov
call
out
pushf
jp
dec
jl
mov
mov
call
sub
stc
rclb
js
test
out
dec
mov
push
sbb
cmp
and
int
mov
jns
and
jnp
sub
xor
arpl
jecxz
mov
pop
stos
jg
daa
es
mov
imul
cmp
or
cmp
stos
fidivrl
jnp
out
xchg
les
xor
lcall
bound
out
pop
popa
push
sub
mov
dec
jnp
mov
lcall
daa
insb
xor
mov
add
pop
test
scas
jle
addr16
fcoml
stc
jecxz
cmp
int
mov
sub
pop
mov
out
inc
cli
dec
cli
or
stc
sbb
aaa
mov
in
mov
sti
scas
arpl
inc
xchg
lcall
xchg
dec
loop
out
dec
ret
lods
movsl
mov
divl
clc
sti
mov
adc
pop
std
imul
xor
dec
jg
push
push
add
xorb
scas
popf
out
ss
push
or
inc
jns
sbb
test
aam
mov
sbb
imul
bound
xor
rcl
arpl
mov
inc
inc
bound
rcrb
add
test
adc
add
mov
roll
pop
inc
ja
add
or
into
repz
sbb
js
push
mov
nop
adc
shl
insb
push
inc
and
std
sar
add
xchg
inc
dec
cmpb
dec
pop
data16
push
inc
loope
mov
mov
daa
mov
out
add
sub
mov
xchg
adc
adc
aam
add
add
fiaddl
cmp
inc
sub
push
and
sbb
cmpsl
jmp
sub
jle
push
mov
xor
jne
lahf
filds
mov
jp
test
pusha
inc
insb
inc
enter
push
push
in
xchg
sub
ljmp
pop
jnp
iret
test
and
mov
mov
test
sub
pop
lret
push
and
shrb
lahf
out
pop
cld
add
xchg
push
mov
repz
dec
mov
icebp
adc
adc
iret
or
icebp
cmp
jno
rcr
js
jnp
xor
gs
rclb
xor
pop
mov
push
fdivrs
fldl
sub
in
add
push
or
ds
jb
mov
sar
add
cmpsb
mov
cmpsl
lock
adc
cwtl
jno
add
ret
repnz
imul
lds
xchg
push
sbb
xchg
aad
cld
scas
jae
ret
adc
testl
lock
mov
or
mov
popf
jne
iret
aaa
push
push
and
pop
cli
aam
sub
inc
out
iret
xchg
mov
push
push
mov
call
adc
nop
clc
cmp
fcoms
sbb
into
bound
and
mov
cmp
push
hlt
lret
pop
mov
fstl
insb
jle
movsl
mov
push
pop
cwtl
jge
dec
fcmove
lret
mov
add
sti
test
rcll
pop
inc
fcomp
je
jmp
addr16
inc
mov
adc
arpl
in
pop
in
sbb
aad
sbb
sbb
push
jecxz
fiaddl
jno
lods
fwait
dec
lds
loopne
hlt
rolb
mov
mov
ja
pop
ja
or
xchg
xchg
ret
stc
mov
or
xor
int
insl
inc
mov
xor
add
test
les
cmp
rolb
push
mov
mov
cmp
and
sti
dec
xor
stos
lea
cmp
push
dec
and
aam
divb
xorl
shr
mull
pop
je
lcall
lds
jge
popf
push
xchg
js
dec
sbb
sarl
jge
lods
ss
or
ja
dec
loop
mov
sub
mov
subb
jns
popa
pop
outsb
mov
scas
aaa
sbb
add
stos
sti
jno
mov
cs
mov
hlt
cmpsl
fisubl
sub
fstps
mov
or
xchg
push
jmp
add
push
lret
out
cmpsl
sbb
mov
loope
sub
jecxz
jo
fldenv
hlt
cmp
push
pop
add
dec
idivb
stc
lods
hlt
push
in
dec
lock
movsl
push
stos
test
hlt
gs
ja
or
sub
or
test
test
sti
and
sbb
jg
enter
cmp
sahf
test
iret
fisttpl
jne
push
arpl
int
jnp
mov
into
rcrb
pusha
shl
push
sbb
cmp
test
or
add
dec
cltd
mov
in
in
mov
inc
pushf
sar
in
out
push
lods
mov
sarb
add
add
lret
gs
ja
add
leave
js
movsb
mov
jmp
cmp
sbb
rorl
inc
adc
mov
fnstsw
aad
sbb
negb
mov
repz
sti
pop
std
pop
dec
outsb
adc
or
je
push
sub
push
dec
mov
ja
cwtl
ret
sarl
add
pop
int
push
dec
pop
jne
mov
les
es
fnstsw
and
jno
sbb
cmc
mov
neg
movsl
movmskps
jb,pn
ficoml
add
outsb
nop
call
dec
sti
in
sbb
push
xchg
out
mov
outsl
push
sub
mov
test
mov
in
shlb
js
ljmp
and
pop
popa
sub
mov
pop
jl
in
xor
daa
push
adc
mov
mov
mov
scas
sub
adc
or
mov
stos
add
mov
dec
adc
cmpsb
sbb
push
sbb
inc
ljmp
xor
adc
mov
or
dec
push
jae
in
into
dec
or
lods
ja
mov
jb
dec
sbb
lcall
mov
and
xor
add
stc
out
cmp
push
fildl
arpl
xchg
add
jg
cmp
push
sub
mov
xchg
repnz
sbbl
jp
shrb
cmp
dec
pop
gs
mov
out
test
ss
xchg
dec
lock
test
push
add
xor
jbe
fstpl
xchg
mov
in
pop
sbb
aam
aad
jg
push
enter
cmp
pop
mov
adc
add
push
cmp
sti
scas
mov
xchg
aam
out
xor
add
cmp
fs
into
dec
shr
imul
pusha
jge
cld
push
and
mov
enter
push
das
ficoms
push
mov
pop
cmp
loopne
cmpsb
arpl
xchg
mov
test
push
push
adc
xor
outsb
loop
cmp
xor
jnp
sbb
dec
repnz
sbb
xchg
cmp
loopne
iret
mov
xor
mov
dec
fadd
sub
jg
sbb
fcom
fsin
leave
sub
fistpl
in
jnp
pop
les
insl
push
mov
add
inc
sub
or
mov
into
popf
fwait
loopne
in
test
shlb
inc
adc
rcrl
cltd
ret
jp
push
sbb
dec
lret
add
xlat
mov
or
xchg
mov
clc
add
fisttps
or
test
notl
adcl
jns
fidivs
lock
out
sbb
stc
cmp
sbb
adc
leave
inc
aam
mov
pop
mov
enter
std
add
into
pop
aas
aad
adc
movb
mov
mov
jmp
push
push
ljmp
push
xor
shlb
clc
lods
imul
in
pop
push
nop
mov
gs
push
jno
loop
cmp
jnp
xchg
fs
sbb
or
sbb
cmp
test
xchg
ljmp
sub
jae
jnp
out
fwait
dec
movsl
sbb
std
les
call
mov
lea
call
or
in
hlt
jg
and
mov
mov
jle
ljmp
outsb
ss
dec
ja
jp
cmpsb
cmp
cmp
sub
push
lods
mov
jp
sbb
in
sbbl
testb
mov
push
mov
jmp
jnp
fsubs
into
lock
ja
dec
ja
jecxz
dec
loope
fcompl
jo
dec
in
mov
shl
lock
and
hlt
inc
pop
scas
jb
movb
jecxz
in
ret
mov
push
test
pushf
push
push
imul
imul
femms
push
ret
cmpsl
insl
int3
jecxz
pop
cwtl
mov
out
mov
xor
sbb
aad
sbb
lods
xchg
add
int
push
and
dec
pop
mov
add
inc
subl
nop
incl
add
mov
or
jnp
dec
mov
in
repz
iret
insb
or
dec
mov
mov
clc
jae
mov
jns
aaa
cmpsb
or
in
stos
and
scas
mov
xchg
push
jno
push
lret
adc
jle
dec
cld
in
rclb
fistps
mov
iret
test
sbb
pusha
insl
pop
mov
loop
sti
pop
jecxz
xorl
xchg
sub
cmp
cmp
mov
xor
jns
into
or
sub
aad
fstpl
sub
sub
add
push
mov
jns
xor
loop
push
js
out
mov
inc
sti
mov
movsl
xchg
pop
pop
out
push
and
dec
out
and
pop
mov
pop
xlat
cld
scas
push
mov
jle
addr16
dec
ret
or
mov
nop
sbb
mov
decl
es
cltd
test
insl
out
fcomps
arpl
movsb
or
mov
pop
xchg
push
or
pop
xor
add
dec
jnp
pop
add
and
nop
adc
sbb
adc
pop
fildll
adc
pop
sbb
inc
shll
out
inc
inc
fisttpll
or
pop
mov
repnz
lods
nop
hlt
jnp
sub
push
daa
mov
mov
into
sahf
dec
out
in
sub
push
roll
lods
into
mov
leave
loopne
inc
mov
fwait
xor
pop
cmpxchg
popa
adc
hlt
jno
lea
rolb
fidivs
sub
aam
mov
aaa
cld
pusha
jne
repz
les
jno
push
ds
jnp
pusha
cmpsl
mov
fdiv
mov
dec
cmp
inc
fxch
cltd
imul
pop
xor
je
lods
sar
inc
stos
ss
jb
xor
fistpll
sbb
cmp
sbb
cmovp
mov
jmp
lds
test
sbb
and
dec
pop
jle
fnstcw
dec
cmp
test
ja
pop
stos
out
out
cs
xchg
sti
and
test
fwait
dec
pusha
aad
push
sbb
rcl
nop
inc
icebp
push
mov
aad
mov
gs
push
and
in
cli
mov
jne
sbbl
push
pop
jae
aas
test
pop
repnz
fsubs
repnz
jae
cmpsl
out
repnz
ja
jbe
iret
xor
rcrl
dec
shll
pop
xor
pop
popf
ljmp
insl
out
into
ljmp
add
aam
cmc
xor
inc
addr16
push
pop
sub
xor
lcall
sub
push
ja
or
js
roll
subl
andl
mov
sbb
les
call
sbb
adc
and
add
sarb
push
aaa
nop
inc
pop
data16
lods
push
js
pop
pushf
outsb
cs
push
mov
pusha
add
adcb
push
push
add
sbbl
cmp
out
aam
popa
and
sarl
jae
je
push
xchg
scas
cmpsl
aaa
sbbb
sahf
push
nop
sahf
ds
sub
xlat
aam
xor
mov
push
jl
inc
repnz
cwtl
out
cmp
mov
fstps
dec
adc
mov
enter
push
xorb
out
aas
dec
and
and
lods
mov
xor
out
cmpsl
icebp
sahf
pop
in
inc
xor
cltd
js
cmp
xor
mov
mov
mov
fiadds
push
jnp
xor
imul
or
ret
sub
add
fidivl
cld
sarb
inc
gs
je
rcll
mov
daa
dec
pushf
std
push
inc
movsb
mov
insb
dec
xchg
leave
add
inc
loope
bound
pop
or
push
popf
dec
and
rcrb
xchg
and
aaa
xlat
and
and
push
pop
cltd
cmpsl
pmaxsw
jge
out
push
or
ret
out
aaa
ljmp
fdivs
add
adc
aad
loop
inc
cmp
mov
pop
lods
and
imul
sbb
pop
outsb
or
addr16
sti
jns
repnz
icebp
in
fisubrs
rcl
sbb
push
jno
push
icebp
pop
cmp
loopne
jg
sti
mov
ret
aas
ret
adc
jno
cwtl
jmp
mov
inc
repnz
in
or
les
or
sahf
or
pushf
mov
mov
jmp
int
test
out
or
xor
sbbb
sbb
jbe
aas
insl
jns
fildll
out
and
jnp
mov
repnz
and
pop
fsub
in
push
fildl
enter
xchg
aam
inc
jo
dec
dec
dec
lahf
in
sbb
mov
lds
in
mov
sarb
fimuls
cmp
push
fisubrs
mov
push
mov
sbb
fstpl
add
mov
and
pop
push
mov
sarl
and
inc
shr
fcoml
add
and
sbb
or
dec
or
iret
sub
gs
cmc
dec
mov
push
cmpsb
div
push
lret
push
mov
inc
aad
inc
inc
xchg
dec
leave
lods
loopne
mov
xchg
inc
testl
ja
mov
ljmp
sub
fcmovb
das
inc
jge
les
pop
outsb
aam
into
dec
mov
test
push
popf
addr16
push
pop
out
xor
sbbl
push
mov
std
stc
mov
cmpsl
or
sub
fadd
xchg
stos
inc
mov
fnstcw
mov
lcall
sbbl
sub
and
fcomps
pop
sub
sti
mov
xchg
jp
push
pop
loop
out
jmp
sbb
rol
inc
ret
cmc
and
fwait
rorl
daa
ja
and
dec
jbe
outsb
pop
or
idivb
dec
fnstsw
and
pop
cmp
cmpsl
pop
inc
xor
or
mov
add
xchg
mov
imul
mov
add
loop
mov
dec
stc
inc
jp
rcrb
cmp
xor
pop
or
dec
inc
cwtl
js
fldcw
shl
add
inc
movhps
or
adc
psubq
cmp
jno
sbb
stos
leave
xor
or
inc
mov
shl
adc
mov
lea
shlb
mov
fcoms
inc
push
cwtl
testb
mov
mov
mov
dec
loope
movsb
rcl
out
es
fildll
pop
mov
cmp
test
std
popf
sub
sbb
jb
fwait
out
decb
fucomi
ds
mov
fs
mov
pop
sbb
dec
data16
data16
sbb
stos
push
in
push
jmp
jge
ds
xchg
pop
pop
mov
cmpsl
icebp
mov
mov
rclb
mov
xchg
repz
and
push
call
insl
sub
fidivrl
dec
loopne
mov
mov
sub
ja
pop
push
jb
xor
xlat
loope
mov
fists
push
jnp
xchg
dec
push
lds
pop
and
notb
pusha
fwait
pop
xchg
jno
cld
jo
mov
xlat
cwtl
inc
xor
enter
leave
inc
dec
test
add
cmpsl
or
ljmp
inc
popf
ds
ljmp
push
add
cld
cmpsl
pop
sbb
int3
pop
movsl
mov
dec
fwait
inc
xchg
mov
xchg
xchg
adc
ror
sub
scas
pop
cwtd
jp
sti
xchg
rclb
and
es
add
nop
cld
mov
ss
lea
movsl
push
cmp
pop
mov
cmpsl
add
rep
hlt
pop
aam
loop
inc
push
sbb
jae
add
mov
push
sbb
or
sbb
insb
pop
popa
cld
jne
jmp
jno
mov
lcall
ss
jg
adc
xchg
jp
mov
lret
shlb
jmp
sahf
mov
mov
lret
pop
arpl
cmpsl
sbb
mov
jp
push
push
and
xlat
ljmp
mov
jp
gs
jb
sub
mov
and
mov
sub
fldenv
xor
mov
add
and
lock
add
addr16
cwtl
xor
adc
push
aad
leave
test
and
or
mov
and
fldenv
cmc
std
test
cld
xchg
outsb
out
dec
or
int
pop
je
push
shll
mov
pop
push
jl
fstps
es
ret
sarb
pop
ret
cld
js
push
inc
imul
notl
adcb
enter
scas
insb
jp
lea
fcomps
and
lds
cmp
arpl
test
mov
and
add
add
ficompl
xlat
adc
cmp
pushf
pop
mov
push
std
jecxz
mov
cmp
mov
mov
bound
imul
or
in
fwait
fwait
dec
in
xchg
push
add
pop
jle
outsb
nop
add
fsubr
and
aam
clc
adc
add
add
xlat
cld
insb
enter
test
adc
movsb
pop
xlat
dec
dec
adc
notl
stos
scas
jae
cmp
add
or
jo
js
cs
imul
mov
fdivrs
loopne
xchg
out
daa
aad
mov
popa
inc
or
sbb
out
aaa
push
push
test
stos
movsb
pop
mov
and
pop
fisubrl
popf
xchg
mull
call
cmp
in
inc
xlat
iret
addl
in
nop
xor
xor
aaa
enter
imul
hlt
mov
iret
jmp
cmc
icebp
add
arpl
adcl
mov
dec
lds
pusha
popf
cmp
int3
xor
popf
das
sub
test
jo
icebp
cltd
or
cmp
inc
sbb
jge
pusha
cs
fnsave
xchg
loopne
icebp
cmp
pop
popa
pop
xchg
fadd
mov
lret
push
rolb
sbb
popf
sahf
sahf
adc
cmp
xchg
in
xorl
pop
shlb
ret
push
xorl
xlat
xchg
call
adc
mov
scas
jno
loope
out
add
sub
mov
push
std
movsl
out
xor
or
sbb
fwait
ror
push
xchg
mov
mov
sub
cmp
outsl
scas
mov
pushf
jle
cli
pop
jle
jmp
sar
scas
ljmp
cmpsl
je
cmp
adc
shlb
push
adc
test
pcmpgtb
loope
mov
push
lret
in
and
insb
jl
pop
test
inc
stos
popa
ds
outsb
mov
scas
mov
sbb
mov
or
in
leave
cs
test
mov
les
or
out
xchg
aaa
and
mov
rol
test
cmp
mov
fdiv
cmpsb
ds
xor
lds
jbe
nop
dec
pop
in
inc
cmp
fcompl
es
mov
pop
leave
xchg
loopne
imul
push
ljmp
sti
repnz
xlat
enter
dec
add
sbb
and
mov
popa
jmp
or
push
xor
fsubrs
popa
dec
add
in
sbb
pop
xchg
lahf
pusha
add
out
push
gs
and
rcrb
dec
inc
dec
or
shlb
hlt
les
in
sahf
add
jl
push
push
push
insb
js
jb
sbb
sti
push
mov
test
xchg
or
lret
mov
cmp
jmp
lds
pop
mov
mov
or
mov
mov
ljmp
dec
push
xchg
insl
idivl
enter
jle
xchg
xchg
test
push
out
mov
xchg
outsb
pop
rcr
rolb
stos
jmp
mov
mov
sbb
je
mov
lret
push
cmp
fwait
fs
test
push
scas
bound
jo
out
out
mov
sbb
adc
ret
or
jne
adc
jnp
adcb
jb
cs
loopne
jl
lret
jns
in
push
pop
out
adc
clc
inc
loope
mov
outsl
fmul
mov
and
sti
outsl
repz
sbb
cmp
scas
push
rorl
inc
aaa
gs
lret
push
mov
mov
sbb
jb
jo
scas
out
hlt
arpl
sub
sbb
mov
dec
adc
cmp
int3
sarb
push
jl
sbb
dec
fwait
cli
push
and
pop
jbe
mov
je
mov
inc
pop
in
cltd
call
xchg
js
fwait
jnp
sub
ja
xchg
sbb
mov
xchg
lds
dec
cmp
fstps
jae
shlb
adc
mov
outsb
stc
add
jecxz
std
cmpb
sarb
frstor
or
inc
jno
xchg
add
adc
mov
mov
dec
add
loope
push
jo
icebp
ss
push
jnp
fisttpl
enter
cltd
pop
lods
imul
mov
add
imul
xor
sub
mov
adc
idiv
cltd
sub
ficompl
push
into
std
push
sbb
roll
imul
dec
jg
icebp
jno
call
scas
popf
jo
push
and
lds
lea
hlt
mov
mov
mov
in
mov
imul
pop
xlat
rcll
testb
mov
std
cmpsb
sbbl
aam
cmp
lods
mov
out
into
fmuls
jp
imull
lock
jge
fldt
aas
stos
push
inc
xchg
fsubl
orb
aad
sbbb
adc
loop
and
push
dec
xor
repnz
nop
test
and
xor
xor
xor
pop
pop
lds
inc
xor
inc
sbb
fs
and
sub
xchg
roll
xor
fldcw
les
lret
rclb
movsl
cmp
sbb
imull
cmp
aaa
xchg
pop
outsb
mov
adc
mov
out
shl
enter
jno
mov
adc
je
jb
test
outsl
dec
shrb
int
cmp
call
add
pop
leave
popa
xchg
fsubr
je
outsl
loop
add
test
mov
es
xchg
pushf
add
ss
pop
das
fisttpl
gs
loop
rcl
addr16
fmuls
iret
dec
sahf
cmpsb
adc
int3
mov
xchg
add
sub
stc
loope
lret
arpl
inc
mov
push
jnp
aas
sbbl
inc
sbb
push
xchg
ljmp
xchg
call
lret
fwait
divl
js
sarb
mov
test
cmp
mov
inc
add
lods
jo
ljmp
lea
les
enter
jno
or
jo
stos
and
jle
idivb
cmp
pop
stos
pusha
cmp
lods
mov
add
cli
mov
push
jnp
mov
pop
or
test
bound
movsb
shll
sub
aas
xchg
fimuls
loop
sbb
push
ret
rolb
gs
loop
enter
jb
addr16
sbb
orl
gs
mov
imul
dec
inc
xor
push
adcl
inc
call
das
sbb
jg
pop
or
adc
shl
jbe,pn
dec
pusha
iret
sub
mov
insl
add
add
gs
in
adc
jp
inc
fists
and
pushf
enter
fstpt
repz
jge
xchg
out
bound
sbb
push
mov
and
sub
pop
xor
mov
and
sahf
dec
and
aad
mov
lcall
lret
cltd
fldenv
sbb
xor
mov
mov
lahf
mov
in
cmp
arpl
fwait
push
push
fs
sub
fidivl
jge
in
jne
mov
bound
dec
dec
push
jbe
cmp
jno
icebp
inc
pop
sub
aaa
add
aas
imul
jg
dec
rcrb
lcall
mov
cmp
dec
sub
push
pusha
inc
dec
xor
mov
shl
and
in
int
jnp
lods
dec
jo
test
call
mov
outsb
dec
call
cmp
cmpsb
and
leave
fildll
enter
mov
inc
push
inc
sahf
or
jl
jecxz
mov
out
and
std
xchg
sbb
jl
adc
fwait
jnp
daa
adc
repnz
xchg
xor
inc
mov
push
in
push
pop
jg
sub
jbe
sahf
cmp
mov
pop
jae
pop
inc
sti
push
or
xchg
push
pop
cmpb
test
stos
mov
or
bound
pop
xchg
add
shrl
fisubrl
pop
jae
fldl
loope
adc
xlat
ds
les
and
mov
insl
out
roll
std
pop
ljmp
aaa
mov
or
jbe
insb
test
mov
xor
pop
jbe
dec
adc
inc
mov
mov
stc
adc
sub
mov
xchg
pop
sbb
xlat
dec
lret
adc
movsl
bound
inc
and
or
jo
in
or
mov
mov
imul
ret
jne
push
test
ljmp
mov
xchg
out
pop
mov
cli
cli
mov
cld
xor
out
shrl
out
insl
or
lcall
in
cmp
fwait
push
nop
mov
inc
fdivrs
arpl
insl
aam
or
repz
mov
sbb
jle
adc
xor
shr
cmp
push
ret
xchg
outsb
cmp
test
push
addr16
inc
mov
push
lcall
outsl
iret
or
or
out
push
insb
dec
mov
cmp
ljmp
fcomps
mov
xor
sbb
test
out
xlat
push
cmp
sub
into
cs
lret
pusha
lahf
pop
sahf
cmp
out
jo
into
push
mov
mov
xchg
lret
mov
xor
int3
shrl
xchg
sbb
fildll
mov
call
test
lds
jns
push
cmp
sarb
sbb
mov
push
pop
movsl
and
insb
mov
cwtl
add
leave
stc
dec
mov
popf
sbb
repz
jmp
insb
test
lods
nop
insb
fisubs
cmp
sbb
addr16
scas
sub
push
jle
loopne
push
scas
push
pop
sbbl
mov
ljmp
sub
call
jbe
adc
jb
ficompl
adc
pop
sbb
fidivs
test
iretw
in
data16
in
adc
adc
test
mov
lret
mov
xor
push
mov
jecxz
mov
sbb
pushf
lcall
jecxz
cmpl
or
mov
dec
mov
fcompl
xchg
pop
shrb
xchg
aad
es
orl
add
lds
movsb
jmp
and
shrb
pop
std
mov
xchg
negb
jb
push
sarl
and
push
pop
xchg
add
dec
sub
fdivs
xchg
out
xchg
pop
and
push
or
mov
mov
adc
cli
or
add
out
sahf
gs
cld
push
sbb
pop
inc
mov
sub
ljmp
sbb
adc
dec
cs
adc
cli
fs
cmpsb
pop
mov
dec
xchg
mov
daa
nop
cmp
jge
popf
mov
sahf
je
push
fimull
cwtl
adc
in
cltd
xor
cmp
xor
ficoml
xchg
dec
lds
out
mov
lods
mov
addr16
adc
xchg
cli
push
inc
pop
dec
js
scas
xor
jne
mov
movsb
cmpsb
lcall
jmp
inc
mov
sahf
or
dec
add
test
pop
jmp
lret
hlt
add
inc
inc
push
cli
jecxz,pn
fxch
shlb
arpl
insb
xor
aaa
jp
dec
mov
and
jae
mov
pop
imul
data16
notl
cmpsb
int
lea
mov
ret
push
stos
testl
mov
aam
and
sarb
mov
add
push
adc
push
cld
std
jnp
mov
fistpl
and
leave
cmc
les
aad
adc
lret
scas
xchg
fldt
leave
sbb
daa
adc
ja
pop
ss
adc
stos
mov
mov
jl
and
in
es
xor
cltd
mov
bound
jecxz
andl
jbe
inc
into
sti
inc
jno
cs
xor
sarl
popa
sbb
add
xor
sbb
push
movsb
fwait
mov
cs
cmp
cmp
dec
das
jne
outsl
out
daa
mov
inc
fdiv
insl
dec
cmp
stc
frstor
cmp
ja
xor
xchg
cmpsb
cmp
paddb
test
mov
mov
jl
clc
xor
insb
mov
sahf
cmpsl
and
sti
add
jmp
and
pusha
dec
mov
mov
push
cltd
loop
inc
sub
fwait
loope
xor
jmp
aaa
repz
mov
fidivrs
xchg
sbbb
testb
push
pop
jecxz
dec
dec
bsf
je
repnz
jle
inc
mov
mov
mov
std
xchg
pop
stos
cmp
mov
mull
sbb
xchg
fldl
mov
cmp
push
xor
and
imul
xor
pop
cmpb
cmp
notl
jp
sbb
dec
add
inc
in
int
std
rcrb
sbb
adc
xchg
fbstp
dec
pop
xor
call
lret
call
shlb
int3
out
jg
mov
and
test
xchg
mov
addr16
in
jne
inc
mov
int
xor
cmp
std
repz
je
add
lcall
cltd
xchg
push
imul
test
jae
jae
mov
add
roll
lret
pop
jp
ret
into
or
mov
shrb
test
in
dec
add
adc
lods
pop
arpl
dec
dec
mov
fs
xlat
in
dec
inc
add
pop
adc
icebp
mov
push
sti
pop
xchg
adc
mov
cmp
push
or
sub
sti
xor
xchg
jmp
js
jl
add
test
mov
sub
mov
and
mov
adc
pop
scas
push
stos
out
dec
mov
je
xor
repz
xchg
push
mov
mov
mov
pop
pop
push
shl
push
dec
int3
sbb
sbb
jmp
sahf
adc
aas
aad
xor
mov
mov
and
push
add
loope
sub
js
arpl
loop
mulps
out
test
test
ret
aam
lret
std
mov
icebp
or
pop
push
cmpsl
inc
cmp
adc
das
int3
xchg
dec
scas
add
lods
sub
outsl
das
pop
cld
xchg
inc
into
lds
pop
xor
mov
jno
stc
lcall
pusha
xor
xchg
sub
push
xor
jnp
jb
mov
pop
sti
sbb
and
cmpsb
jnp
insl
xchg
mov
sub
push
or
imul
mov
dec
jge
jecxz
pop
loopne
and
push
pop
fimull
fwait
out
lret
test
pusha
outsb
outsb
cmp
xchg
xor
shrl
lahf
shrb
int3
imul
movsb
shlb
push
xor
pop
jmp
jb
cs
xchg
xlat
cmp
adc
xchg
iret
icebp
jecxz
cmp
cltd
dec
loopne
repz
jbe
dec
mov
js
leave
mov
outsb
sbb
and
jle
jne
cmpsb
inc
jmp
add
pop
pop
inc
imul
ror
lods
movsb
adc
pop
cli
pushf
cmc
mov
bound
jmp
movsb
mov
push
movsb
push
outsb
mov
mov
test
jecxz
scas
mov
lds
jmp
and
xlat
push
xlat
jg
xchg
int
inc
xlat
aas
outsl
ds
cmp
xor
xchg
popa
idivl
mov
gs
mov
cltd
mov
out
fwait
jnp
fistl
ret
cmp
push
or
jecxz
or
pop
out
aas
gs
cmpsb
jmp
dec
inc
ja
sbb
push
aam
push
cmp
push
and
dec
aaa
cld
pop
int
xor
xchg
or
fwait
jmp
pop
test
xchg
addr16
fidivs
jmp
and
adc
fcompl
enter
inc
data16
mov
ljmp
int3
push
xchg
cmpsb
mov
add
xlat
sbb
push
mov
dec
xor
add
cmc
pop
fists
mov
push
or
and
repz
inc
repnz
mov
aaa
cmp
data16
fstpl
leave
loope
push
in
push
imul
mull
insl
insl
sahf
pop
push
inc
cmc
jno
idiv
insl
cwtl
mov
or
imul
sbb
mov
xor
cltd
push
call
pop
mov
icebp
push
jge
lock
xchg
mov
inc
adc
cmp
jmp
cmpsl
cli
adc
fcmovbe
xor
or
inc
loopne
lret
mov
out
sahf
insl
and
mov
aad
gs
sub
ffreep
cmp
cmp
mov
add
xor
insb
arpl
push
loop
into
xchg
jo
out
stc
aam
sbb
sub
fidivrs
into
out
lahf
cli
cmp
push
dec
shlb
jg
cmc
xor
cmpsl
mov
fidivrs
ret
cld
mov
xor
inc
inc
imul
repnz
sub
sti
cwtl
iret
stos
std
popa
gs
add
xchg
xor
dec
mov
adc
movsb
std
stos
aas
jns
jl
xchg
add
adc
sub
xor
and
mov
mov
bound
int3
sub
lock
mov
and
or
cli
inc
mov
jp
gs
mov
pop
call
or
add
push
or
icebp
dec
inc
add
stc
xor
mov
mov
or
sub
cltd
shll
mov
dec
dec
faddp
cmp
and
iret
jmp
lea
pop
shll
and
lods
imul
in
test
aad
dec
fs
dec
or
mov
jp
cwtl
mov
and
and
add
pushf
and
xor
mov
call
cmpsb
sbb
dec
mov
mov
xchg
in
loope
xor
adc
insb
leave
icebp
or
out
fwait
inc
jecxz
iret
aam
mov
push
aam
icebp
cmc
cwtl
jecxz
sbbb
in
arpl
xchg
lds
cmpsl
daa
outsl
fsubrl
and
xlat
repnz
pop
sbb
testb
mov
mov
aam
out
dec
out
cmp
pop
cmp
inc
rcl
sbb
add
fnstsw
ds
dec
cmp
fimull
cmp
mov
neg
fiadds
inc
out
stos
or
xor
sbb
jmp
sub
rcrb
mov
ficompl
jle
add
xlat
sub
inc
push
sub
dec
popa
test
rorb
popf
aas
fwait
inc
int3
jmp
inc
mov
or
or
stos
fimull
pop
add
leave
in
adc
outsl
popf
cwtl
xor
mov
int3
dec
dec
popf
push
aas
add
dec
mov
inc
jl
add
adc
dec
add
idiv
pusha
mov
inc
das
sub
test
pop
in
insl
jo
pop
xchg
jo
fisttpl
mov
movsb
clc
mov
cmp
popl
or
dec
inc
fwait
mov
mov
inc
mov
jb
xchg
mov
dec
pop
ds
xchg
inc
mov
sbb
cmp
cmpsl
icebp
in
or
cmp
jbe
mov
and
fs
xchg
push
int3
pop
das
loopne
jle
ljmp
cld
cmpsl
xchg
pop
mov
sbb
jns
std
cmpsl
lods
pusha
sti
or
popa
lea
fnsave
mov
das
outsb
clc
js
mov
cmp
adc
scas
cmp
lahf
daa
call
scas
mov
mov
mov
push
lahf
ljmp
lods
lahf
push
cmpsl
cmp
push
inc
bound
popa
enter
popa
movsb
push
in
cmp
sbb
inc
in
out
fisubrl
scas
jg
addr16
ret
mov
icebp
mov
arpl
jne
sub
xor
mov
fisubl
sub
int3
adc
aaa
sar
cld
inc
stos
fidivrs
fs
test
push
xchg
pusha
xchg
adcl
mov
cmc
es
imul
les
std
in
xchg
jno
aaa
rcrb
mov
iret
add
mov
je
mov
fs
add
add
sti
jl
jg
sbb
out
cmc
out
mov
adc
pushf
ss
mov
inc
call
mov
ss
xor
pop
data16
jp
and
into
add
lret
mov
std
fmul
into
fwait
pop
scas
lahf
cmpsl
leave
sub
stc
sub
xlat
mov
adcb
jno
cmp
mov
leave
add
jecxz
inc
sbb
push
jns
dec
sbb
push
imul
jne
inc
lahf
sbb
movsb
pop
pop
mov
popf
cmp
xor
sahf
jg
cmp
in
mov
lahf
gs
xchg
shl
lret
or
es
test
mov
lcall
jg
movsl
divb
je
jle
stos
stos
jmp
add
sbb
std
sahf
jle
adc
icebp
rcrb
inc
scas
stc
shl
push
pop
push
sbb
xchg
jno
inc
mov
fnstenv
sbb
aam
pop
rorl
jl
fiadds
mov
ss
mov
jge
mov
xor
xorb
push
test
xchg
insl
push
in
mov
fwait
outsb
add
dec
pop
sbb
sbb
lcall
repnz
cmpl
add
in
mov
in
inc
or
cmpb
push
mov
push
pop
sahf
jle
fisttpl
mov
ja
adc
stos
xchg
aaa
or
xor
int
gs
xor
sub
movq
sub
addr16
in
stos
sbb
pushf
push
xchg
lock
pop
pop
out
mov
incb
into
clc
mov
xlat
mov
iret
jecxz
mov
mov
xchg
imul
adc
outsb
push
inc
mov
enter
mov
rcl
push
leave
test
lret
outsb
sahf
fnsave
aas
dec
lods
shll
fwait
or
in
sbb
add
icebp
pushf
repz
lea
pop
jecxz
xor
dec
or
or
imul
mov
mov
xabort
out
mov
mov
pop
dec
iret
jo
fisttpl
cld
dec
loop
pop
inc
fsubs
addr16
pushl
rclb
nop
add
loopne
mov
ret
inc
mov
jae
in
mov
rorb
jp
cld
jns
std
lods
in
mov
adc
sub
jb
js
xchg
jbe
adc
ds
add
push
cltd
or
push
jo
xor
mov
ss
push
stc
add
ret
mov
das
pop
xchg
adc
ds
test
add
sub
mov
dec
xor
fcmovb
dec
cmpsl
push
shll
in
cli
mov
movsl
loope
es
push
jae
out
mov
out
inc
ds
sbb
test
or
push
sbbb
pop
insl
mov
sub
stc
jno
outsl
xchg
in
lock
outsb
mov
or
and
mov
mov
lods
stos
aaa
or
test
inc
cmpsl
push
popf
jb
adc
mov
daa
movsb
jg
test
xchg
cltd
xor
mov
push
shrl
imul
mull
push
lret
popa
icebp
cmc
pop
dec
mov
andl
roll
cli
adc
loope
jb
lcall
mov
sub
jns
push
add
js
inc
sbb
dec
je
aaa
mov
add
pop
mov
pop
push
dec
and
out
repz
push
sbb
popf
lods
sbb
add
cli
mov
cli
sbbb
xchg
ret
dec
inc
out
leave
add
mov
and
mull
fmulp
in
inc
in
lret
sbb
push
dec
sbb
mov
mov
fcmovne
insb
stos
inc
and
xchg
xchg
adc
adc
xor
imul
jno
gs
fistps
lret
cmpsb
or
xor
cld
in
fsubrp
mov
push
aas
pop
pushf
sbb
sub
mov
mov
dec
mov
push
mov
dec
incl
movsb
push
push
push
jae
cmp
cmp
and
subl
negb
cmp
adc
push
jno
cmp
add
push
xor
or
into
insl
pop
rorb
inc
cmpsl
cmp
xor
fisttpl
xor
repz
add
push
outsb
xor
ss
clc
dec
in
xchg
imul
gs
mov
jge
pop
sti
sbb
cmp
or
fnstcw
icebp
jnp
cltd
push
push
ljmp
das
and
inc
jns
test
sub
test
test
mov
aaa
lret
loopne
jecxz
call
fcomp
mov
stos
rcl
dec
insl
sarl
test
sub
pop
jle
in
adc
pop
mov
add
adc
daa
cmp
push
cmc
mov
data16
hlt
subw
xchg
pop
imul
ficomps
inc
dec
dec
pop
in
adc
out
inc
lods
mov
inc
mov
cmp
adc
push
sbbl
jle
pop
mov
test
cmp
jle
jg
or
push
stos
xlat
imul
fs
push
in
mov
icebp
xor
in
mov
test
dec
cmp
dec
jb
or
cmpsl
negb
jg
add
int3
jmp
outsl
hlt
dec
push
mov
cld
negb
jp
or
gs
popl
mov
pop
movsl
adc
imul
mov
inc
jns
mov
test
mov
push
das
jbe
pop
xchg
insb
jno
out
arpl
sbb
dec
sbb
xlat
sarb
dec
insl
enter
add
cmp
pop
or
fdivrs
adc
pop
add
push
in
mov
xchg
scas
mov
mov
decb
cmpsb
sti
daa
insb
jnp
mov
enter
sub
cmp
dec
push
or
rclb
adc
out
jbe
std
adc
lods
lock
lret
sub
fdivs
lock
inc
fmuls
push
rorb
cmp
iret
xorl
mov
dec
mov
push
or
cwtl
jb
gs
and
adc
js
pushl
pop
mov
fldt
dec
pop
add
push
jno
shlb
decl
sbb
into
out
mov
out
into
ret
test
pop
negl
pop
adc
xor
in
dec
xchg
sbb
test
inc
scas
push
push
mov
jnp
outsb
jl
aaa
lahf
sbb
pop
loopne
test
sbb
push
aas
sbb
data16
lds
ret
iret
pop
sbb
pusha
fildl
les
test
sbb
test
inc
sub
sarb
lea
ffree
mov
add
pusha
test
arpl
lods
lods
pop
pusha
hlt
rorb
loopne
pop
les
pop
push
outsb
aam
xchg
inc
icebp
mov
arpl
mov
sub
js
adc
dec
mov
jnp
fidivs
mov
sub
push
out
test
fistps
repnz
pop
cwtl
cs
rcrb
pop
leave
in
add
jbe
and
cmp
adc
adc
xchg
dec
icebp
cwtl
fldt
test
sbb
sub
push
and
imull
mov
adc
in
call
mov
hlt
ljmp
fwait
xchg
lahf
test
cmp
out
hlt
daa
mov
jge
dec
nop
pop
cli
mov
or
dec
adc
in
sbb
mov
test
cld
jbe
fimuls
repz
into
or
push
pop
fbstp
mov
mov
mov
adc
sbb
xlat
icebp
cmpsb
sahf
add
movsb
int3
mov
mov
or
cmpsb
gs
mov
push
push
add
fwait
xor
sub
add
mov
loope
jl
mov
gs
icebp
roll
imul
xchg
jge
and
outsl
notb
jns
std
sarl
mov
cwtl
and
gs
lods
inc
mov
movsb
xchg
mov
mov
in
mov
arpl
pusha
jcxz
repnz
test
dec
rorb
mov
jbe
pop
sub
inc
sarb
outsl
add
mov
ret
sahf
dec
insb
and
fbstp
or
xlat
out
stos
std
add
add
cld
sub
mov
fidivrs
adc
scas
xchg
les
in
pop
adc
cmpsb
sbb
push
jo
sub
sbb
rcll
pop
rorb
sub
sbb
jo
or
or
mov
push
xor
push
out
repz
push
lock
add
lods
push
xor
addb
cmp
popf
data16
hlt
adc
into
jl
icebp
sbb
stos
jp
js
add
inc
popa
adc
in
mov
lds
mov
ret
xor
orb
insl
add
loop
data16
cmpsl
cmp
sbb
sahf
inc
cli
roll
mov
mov
pop
sub
xchg
sbb
scas
subl
pop
outsb
xchg
loopne
fstpt
mov
cmp
test
ficoms
pop
and
cltd
push
mov
loope
sub
mov
daa
jb
insl
push
cmp
jmp
cltd
clc
divb
push
cwtl
js
adc
hlt
imul
in
xchg
shl
pop
pop
arpl
lock
movsb
daa
push
mov
loope
scas
xlat
mov
dec
cmp
mov
pop
pop
push
mov
arpl
insb
inc
sbb
fs
ljmp
push
arpl
sub
mov
push
xor
push
into
fisttps
gs
and
rcl
outsl
imul
aad
sbb
jmp
in
loop
fstp
je
mov
loopne
pusha
mov
xchg
ds
cli
sub
add
sub
jmp
cmp
push
icebp
lods
adc
push
mov
add
inc
fisttps
inc
dec
mov
outsb
xchg
dec
aas
mov
dec
lea
inc
jbe
sahf
inc
mov
repnz
icebp
push
rcrl
sbb
cwtl
imul
jp
pop
push
fs
push
cmpsb
and
push
inc
out
mov
push
cwtl
dec
insb
adc
repnz
pop
jno
stos
xchg
ljmp
mull
mov
cld
loope
mov
subb
mov
hlt
add
mov
cmp
xor
mov
pusha
push
jle
mov
pushf
sub
jnp
or
cmc
lds
sub
adc
clc
es
xor
pop
sbb
mov
inc
and
sub
int3
mov
mov
lcall
inc
cmp
jo
lcall
cmpsl
aad
jp
fdiv
push
sbb
add
pop
adc
test
int3
dec
les
insl
or
rclb
pop
jno
mov
xchg
mov
test
jge
dec
test
or
sarl
mov
adc
or
fsubrs
gs
in
loop
sub
repz
mov
inc
pop
pop
cmp
fsubl
lds
int3
lahf
test
jne
cmpsb
sub
aas
iret
mov
cmp
xlat
loop
jns
jmp
mov
dec
push
push
stos
mov
dec
ficoml
int
aas
lods
pop
pop
lods
addr16
and
imul
mov
push
mov
or
loopne
dec
clc
in
jmp
lret
push
cmpsb
adcl
jb
or
cmp
lods
jo
sub
and
sbb
lret
data16
sbb
pop
mov
jge
sub
mov
push
daa
dec
jle
xchg
push
repz
ss
sbb
je
dec
xor
fcmovne
xor
adc
addr16
sub
decb
sbb
sti
std
popf
mov
popf
jns
jmp
pop
dec
cmp
test
jmp
xchg
push
movsb
enter
mov
xor
dec
stos
pop
out
xchg
rcrl
jb
xor
lahf
mov
rclb
inc
adc
lods
push
dec
xchg
sub
pop
dec
movsb
mov
rcrb
imul
clc
loopne
dec
push
in
daa
and
jns
mov
int
mov
jge
xchg
mov
mov
insl
mov
ret
inc
sbb
mov
pop
push
add
iret
stos
or
adc
je
jno
pop
and
inc
sar
sbb
mov
mov
dec
sbb
push
push
stos
fnsave
ja
xchg
xchg
mov
mov
leave
mov
and
pop
lds
mov
pusha
push
jp
fld
leave
into
jp
fistpl
out
or
sub
cli
sbbl
xlat
pushf
pushf
add
adc
pop
roll
add
imul
dec
scas
enter
inc
outsb
test
mov
fadd
cmpsl
hlt
and
add
je
pop
jb
inc
cmc
mov
inc
stos
mov
jns
xchg
cmp
or
or
es
fdivrl
loop
and
icebp
dec
dec
aaa
call
in
inc
dec
mov
xchg
pop
ds
or
mov
jmp
and
sbb
call
jmp
les
xchg
mov
fs
outsl
xor
jle
and
add
rcr
cwtl
mov
std
push
into
sbb
std
aad
jge
sbb
loop
test
imul
jae
sbb
add
cltd
repz
xchg
pop
cs
push
loop
push
push
xchg
and
nop
dec
push
int3
mov
pop
push
pop
fcmovnbe
nop
aas
xor
inc
lods
push
stc
fcmovnbe
or
aas
dec
dec
xor
fsubrs
xchg
cmp
js
push
addr16
xor
out
sub
mov
icebp
leave
sub
add
into
sti
data16
cmpb
dec
xor
jo
lock
mov
aam
scas
in
push
mov
int
popa
sub
adc
mov
std
inc
xchg
inc
jb
repnz
sub
ljmp
dec
mov
cli
push
pop
or
outsl
pop
mov
lahf
mov
into
cmp
dec
or
cmpsb
adc
lret
decl
repnz
inc
dec
enter
out
ss
scas
push
cmpsl
push
cmp
and
xor
pop
out
lret
aad
in
xchg
push
xchg
sub
mov
sub
gs
jge
push
std
mov
pop
pop
aas
mov
inc
push
call
cmp
adc
jmp
fwait
lret
rolb
push
add
jo
js
mov
push
lea
or
xchg
daa
push
aad
std
cmp
pop
xchg
je
pushf
lea
xor
loope
stos
dec
popa
dec
arpl
negb
in
mov
arpl
add
mov
ss
jb
js
xor
int3
bound
jo
ret
shl
popa
into
mov
popa
nop
fsubl
xor
adc
mov
cwtl
pop
mov
add
dec
sub
hlt
ret
mov
in
popa
cmpsl
stc
mov
sbb
mov
shlb
negb
fstpl
pop
jo
inc
int3
pop
sahf
jo
and
test
mov
shrb
imul
xchg
inc
jmp
xor
push
adc
ljmp
bound
xchg
jo
inc
pop
mov
lret
and
mov
cli
mov
xchg
imul
cmp
xchg
xor
and
enter
sub
andb
push
mov
test
out
pop
pop
pop
fbld
or
std
outsb
jmp
out
sub
push
pop
inc
pushf
inc
mov
add
and
add
lcall
out
push
dec
pop
mov
inc
je
repz
mov
ds
ss
imulb
bound
shll
mov
daa
or
mov
push
push
movb
push
sbb
aaa
and
mov
xchg
sbb
addr16
rclb
shrb
pusha
ja
les
push
cmp
pop
pop
lods
jecxz
out
iret
es
xor
arpl
daa
cmp
mov
adc
pop
cmp
mov
scas
xor
mov
jge
cmp
jnp
cmpsl
sti
inc
inc
fwait
cmpsb
rcr
dec
push
sub
sarb
xor
sbb
lahf
sub
test
pop
aad
sub
iret
and
xor
add
pop
idiv
jle
inc
stc
rorb
pop
lea
mov
cmpsl
sub
xor
mov
mov
mov
xchg
ficomps
int
rcr
sub
add
lret
fmuls
dec
es
and
cmpsl
jecxz
mov
leave
mov
cmp
pushf
fsub
sbb
pop
jge
insl
lock
cwtl
insb
data16
mov
mov
ljmp
ficoms
jnp
test
dec
fdiv
repnz
in
push
add
jo
mov
dec
sbb
pop
xchg
cmp
cmc
ds
or
pop
insb
ja
mov
int3
or
subl
pop
int
nop
test
mov
daa
sar
bnd
das
mov
lret
push
sbb
mov
sbb
sar
outsl
push
roll
fcomps
in
sbb
mov
ljmp
scas
rcr
daa
mov
jge
repnz
bound
mov
cmpsb
adc
sub
loopne,pt
lret
pop
push
into
rcrb
rcrl
movsl
std
cmpsb
or
and
mov
lahf
sbb
sbb
bound
movl
jecxz
jge
in
ds
ljmp
loop
push
mov
and
int
incb
add
cmc
cmp
call
sub
mov
aaa
out
pushf
in
nop
sub
cmp
push
dec
push
xchg
test
out
sarb
dec
fsub
pop
add
xorl
lds
repz
inc
jle
test
sbb
pop
and
mov
xchg
arpl
out
arpl
leave
mov
push
xlat
add
int
pop
imul
add
pop
fildl
mov
inc
mull
cwtl
shl
add
lcallw
fsubrs
pop
add
outsb
xchg
dec
cwtl
data16
inc
ja
and
sub
or
daa
xchg
leave
inc
jb
js
outsb
in
mov
jno
adc
dec
js
jp
scas
sub
lods
cltd
jle
mov
mov
xor
xor
cmp
xchg
inc
icebp
popf
lock
and
adc
sbb
rclb
xchg
and
stc
mov
pop
xor
xchg
pop
out
dec
cmpsl
jg
in
cs
sub
sub
movsb
aam
mov
jae
jo
jnp
pushf
ja
aas
jmp
mov
push
lods
scas
xor
dec
out
inc
cmp
xchg
mov
popa
test
enter
addr16
mov
push
test
icebp
push
stc
jmp
mov
lock
into
mov
mov
scas
pop
adc
mov
inc
inc
dec
sbb
sub
daa
pop
mov
dec
repz
push
andl
add
aam
xchg
lds
scas
inc
pop
xchg
or
shlb
mov
sub
ret
mov
mov
dec
xor
adc
adc
add
fcomps
pop
xor
sbb
fdivl
xor
mov
xchg
popf
add
pop
cmpsl
shrb
iret
mov
xchg
mov
bound
xor
mov
shll
push
popa
pop
outsl
add
je
jo
out
adc
xor
cli
popf
out
or
es
adc
mov
lods
mov
nop
sbb
daa
fmuls
jnp
cmp
daa
push
dec
xchg
enter
add
out
stc
push
mov
cld
int
rcr
push
mov
lods
sub
xor
into
repnz
mov
aas
adcl
cld
xchg
call
mov
adc
dec
mov
cmpsl
stc
sbb
or
fwait
jns
dec
add
and
mov
incb
xchg
lea
stos
adc
cmpsb
inc
test
lds
test
add
push
jmp
fwait
mov
dec
fdivrp
movsb
and
js
int3
push
dec
jmp
jae
adcl
cmp
popa
jo
push
dec
mov
gs
xchg
mov
test
imul
out
push
jno
mov
dec
test
stc
jp
jecxz
and
lds
jmp
xor
mov
cmpb
negb
test
fcmovnbe
es
pmaddwd
sub
es
mov
pop
jmp
push
iret
jle
out
mov
in
aaa
push
and
movb
nop
push
pop
adc
xchg
fidivrs
mov
jge
fwait
or
lds
mov
hlt
in
xor
mov
loop
fcompl
mov
jmp
push
xchg
jae
pop
lea
xchg
aad
insl
jle
cli
add
adc
mov
pop
dec
adc
stos
jo
cmpsb
xor
jnp
jle
je
jmp
mov
jnp
adc
test
and
mov
pop
mov
jnp
cmpsb
daa
scas
cmpsb
and
icebp
int
sbb
cmp
pop
and
sti
cwtl
lods
xchg
inc
lds
cmp
jl
frstor
das
dec
test
inc
pop
pop
imul
or
mov
sahf
jmp
fxch
pusha
push
dec
cmpsb
jnp
es
popf
push
lock
and
fdivrs
jno
dec
fidivrl
cmp
sub
imul
ret
push
popa
popf
dec
push
dec
dec
push
push
dec
inc
rcrb
mov
rcl
xor
ds
cmp
jp
mov
pop
dec
lret
cmp
pop
ja
xor
sbb
or
mov
das
lock
add
cmc
imul
fcmovu
fidivrs
int
int3
cli
jns
sahf
jno
lock
cwtl
jle
lock
lods
push
cmp
ljmp
sti
jo
jp
push
rorl
xchg
mov
push
es
cmp
jp
dec
push
dec
lcall
stos
bound
in
addr16
movb
test
call
xor
mov
in
loopne
xor
movl
xor
cli
sub
cmp
insl
jecxz
ja
gs
out
call
rcrb
bound
ljmp
popl
gs
into
leave
and
test
loopne,pt
jae
or
ds
jae
mov
sbb
inc
cmp
in
or
arpl
leave
ret
aaa
and
roll
jl
stos
int3
jnp
data16
mov
insb
shl
add
outsl
dec
cmp
and
std
mov
popa
lods
mov
rcrb
xor
push
mov
add
popf
adc
mov
xor
push
loopne
push
inc
or
mov
adc
jecxz
lret
dec
shll
cmpsl
sub
insl
sub
cmp
int
adc
jnp
aas
sbb
in
loopne
es
sti
cmpsl
sub
jo
and
inc
push
pop
lahf
cmp
cwtl
jecxz
sbb
xlat
dec
lds
js
arpl
mov
mov
and
cmp
popf
sarb
loopne
or
lret
mov
fidivrl
insl
bound
shlb
mov
daa
hlt
mov
inc
addr16
jo
jnp
fisttps
mov
push
in
mov
stos
test
jno
inc
push
dec
push
pop
mov
xor
lods
out
loopne
add
repnz
adc
outsb
pop
sub
jmp
pop
inc
sbb
or
int
rcrb
dec
push
mov
xchg
rcll
push
sarl
sti
dec
adc
xchg
jne
pop
test
or
shll
mov
lret
or
mov
jnp
mov
jmp
push
aad
mov
lods
leave
int3
shr
xchg
push
cmp
xchg
cmp
in
xor
mov
xchg
sub
lcall
iret
add
inc
jo
xchg
imul
dec
sti
cmp
pop
cmpsl
jle
stos
and
popf
sbb
mov
mov
out
pop
mov
jb
test
push
aam
cli
insl
sub
push
sti
int
imul
cmpsb
fcomip
xchg
adc
sbb
ljmp
and
sub
mov
imul
stos
mov
mov
icebp
dec
sub
aas
icebp
cmp
pusha
adc
mov
mov
mov
pop
add
mov
gs
mov
push
xchg
shrb
mov
fdivrl
pop
jp
dec
icebp
popf
jbe,pn
dec
adc
sub
xor
movsl
adc
sbb
cli
test
or
incl
xchg
pop
push
in
ret
out
add
jb
mov
and
jg
fsubs
add
cli
jbe
out
adc
or
sbb
daa
adc
aam
sbb
or
xchg
mov
inc
ljmp
mov
push
cmp
xor
dec
pop
xor
fs
or
adc
dec
sbb
mov
mov
fcoml
lods
gs
xor
mov
cmp
fwait
into
fwait
test
dec
or
ret
dec
xchg
test
sbb
int3
mov
pushf
arpl
inc
adc
sub
xor
in
ffreep
pop
adc
cmp
cwtl
test
int
lods
int
outsl
cmp
jle
dec
iret
popa
mov
test
or
pop
push
imul
mov
js
jmp
rclb
andb
adc
insl
loop
lds
mov
fildl
add
lods
int3
inc
fwait
test
ret
imul
sbb
push
and
xor
inc
ds
xchg
push
stc
mov
pop
adc
insb
int
js
in
mov
dec
mov
cltd
aaa
xchg
mov
jle
mov
cmp
mov
dec
push
call
mov
lea
notl
mov
cmp
jae
push
int
pop
pop
mov
fstps
push
cmp
and
cli
cmp
pop
mov
int
stc
dec
insl
jecxz
jbe
movsl
cs
sar
es
inc
adc
cmpl
pop
mov
xchg
icebp
lods
mov
mov
xor
mov
jge
jge
adc
loop
xchg
mov
xchg
mov
lahf
aaa
push
mov
pusha
dec
jge
ret
sar
sbbl
push
pop
test
sub
insl
mov
push
insb
pop
test
inc
gs
les
cmpsb
test
scas
mov
add
hlt
add
js
cwtl
cmpsb
push
dec
pop
rol
jl
push
arpl
dec
cs
flds
sbb
push
repz
test
mov
cltd
hlt
shl
dec
mov
pusha
adc
ljmp
call
scas
rcll
pushf
fstpt
xchg
imul
rcl
lret
stc
sti
pop
das
stc
cs
lahf
xor
or
enter
inc
clc
sub
xchg
and
push
and
and
loopne
jns
push
out
pop
sub
iret
mov
mov
iret
pop
inc
push
dec
stc
sbb
inc
mov
cmpsb
mov
icebp
mov
into
cmp
in
stos
xchg
push
js
mov
dec
sbb
inc
icebp
xchg
xor
sbb
push
sarb
cmp
mov
jne
cmpsb
rcll
rorb
xchg
inc
push
movsl
jnp
jmp
fistl
xchg
cmpsb
cs
jmp
mov
xchg
es
sub
out
push
jb
cld
imul
dec
daa
in
andb
push
jno
outsl
in
in
clc
mov
in
push
or
jo
sub
cld
mov
dec
cmpsl
dec
sti
push
idivb
adc
add
lret
jp
cmpsb
dec
fwait
sbb
test
movsl
data16
popa
pop
add
pop
movb
push
xor
mov
ja
les
int3
fbld
cmpsl
sbb
xchg
pusha
cmp
dec
sub
jne
and
and
rep
cmpsl
pop
add
mov
and
jbe
test
push
andnps
xchg
inc
sarl
mov
gs
ljmp
mov
mov
stos
cmpsl
mov
addr16
ret
cwtl
cmp
jo
pushl
inc
pop
mov
mov
push
sahf
add
xor
xor
mov
adc
cmp
push
stos
sbb
mov
mov
ffree
aaa
in
cmp
jns
push
cmp
and
popa
xchg
daa
mov
pushf
add
mov
sub
loopne
loopne
adc
icebp
sbb
sub
sahf
dec
in
xor
pop
fimull
test
mov
add
and
jle
and
mov
mov
xchg
sahf
ss
xor
dec
adc
jmp
and
mov
push
sbbb
jbe
push
inc
jo
scas
scas
aam
jne
ja
inc
mov
pushf
mov
aam
push
push
lcall
ror
daa
dec
icebp
dec
dec
mov
data16
sahf
hlt
divl
pop
cli
sbb
or
out
stos
subl
lcall
sbb
jecxz
fcompl
lods
bnd
or
pop
leave
lods
call
and
mov
out
mov
stc
xchg
jo
rorb
or
pop
push
add
mov
cld
jge
sub
add
mov
cmp
mov
movb
insl
jmp
sub
lahf
or
fsubrs
in
lods
iret
insb
mov
push
leave
inc
fcmovnu
dec
sub
or
mov
adcl
int3
jns
add
fstps
cmp
push
sub
xor
add
adc
ljmp
shrl
int
iret
add
sti
pop
cmp
ja
sbb
jb
pop
aaa
inc
xor
mov
fisubrl
and
dec
jbe
and
mov
push
cmpl
fldcw
xchg
push
test
adc
not
rcrl
dec
jge
adc
mov
repnz
dec
pop
dec
jl
jb
in
mov
jmp
nop
dec
mov
fldl2t
mov
pop
xchg
xor
pop
rcrb
roll
cmpsl
jae
pusha
dec
pop
loop
xchg
int3
mov
inc
pop
int
cmpsl
arpl
je
test
fcompl
imul
outsl
xor
dec
insl
ss
loop
cmc
gs
xchg
arpl
and
test
sbb
or
cmp
add
rclb
mov
aad
xchg
in
xor
and
push
xchg
repz
mov
and
xor
push
inc
lcall
fnstsw
cwtl
cmp
pop
jle
dec
mov
mov
sbb
inc
test
cmpsl
test
and
sbbl
in
in
dec
mov
or
push
scas
loop
mov
je
push
js
add
jge
iret
pop
cli
pop
jae
mov
ret
js
mov
cwtl
rcll
push
push
stos
sub
ret
in
mov
movsl
xchg
pop
les
jge
cmpsl
jmp
lret
cmc
xchg
int
xor
fisubl
add
mov
stos
pop
dec
xchg
mov
sbb
push
sbbb
ss
shl
adc
mull
adc
dec
push
pusha
dec
mov
inc
mov
orb
into
inc
movsl
xchg
push
add
mov
mov
cld
imul
push
pop
movsb
sub
aaa
cmpsl
pop
jne
mov
cmpsl
inc
ss
outsb
and
sub
fcmovb
movq
push
mov
xlat
outsb
mov
dec
scas
inc
mov
xor
cwtl
mov
xor
add
movsl
jl
or
and
sbbb
inc
push
clc
ja
out
jmp
jne
mov
cmp
pop
lods
or
add
int
adc
shl
mov
stos
or
in
xchg
fists
data16
fdivr
into
test
add
push
fs
mov
push
xchg
pop
jle
cmp
lds
cli
in
test
xchg
mov
call
std
fs
and
push
rcl
xor
sti
leave
lods
out
call
test
add
lods
out
sub
mov
or
pop
pop
mov
mov
cmp
lock
pop
mov
movsl
lcall
insb
pop
in
lcall
push
test
pop
shll
xor
enter
es
adc
inc
adc
mov
icebp
pop
jg
xor
cmp
or
inc
fldcw
cmpsl
lcall
push
lock
cmp
cmpsb
outsb
test
mov
cltd
xor
cmp
push
and
mov
sbb
je
push
cmp
lea
jne
or
loop
and
xor
aad
aas
in
pop
jnp
push
sub
xchg
addl
xor
cltd
ja
pop
and
movsl
mov
out
call
push
into
in
ret
testb
cwtl
cmpsl
cmp
fs
jge
js
test
rcll
test
fistpll
fdivrp
mov
fs
fstps
and
aaa
stos
stos
dec
popf
jae
pop
mov
mov
mov
outsl
push
dec
dec
dec
pop
inc
out
adcl
cmp
pop
xchg
mov
ds
inc
add
call
xchg
and
loopne
insb
mov
inc
shl
sbb
pop
mov
in
jge
mov
mov
pop
push
inc
add
dec
pop
push
lret
mov
mov
pop
sbb
xchg
outsb
stos
add
les
pop
lods
dec
xor
sbb
lret
and
hlt
lods
cltd
pop
aas
push
scas
push
rcrb
fwait
or
fldt
fmull
js
out
leave
icebp
xchg
dec
push
or
jmp
sbb
jecxz
inc
mov
dec
stos
xor
mov
and
mov
rorl
fbld
pop
pop
add
mov
ficomps
bound
inc
stos
adc
fadds
jl
push
sti
int
rorb
mov
fwait
lret
mov
fdivs
jbe
mul
sub
sub
mov
out
cmp
xchg
stc
push
jmp
and
sbb
sub
and
xor
daa
ret
mov
icebp
cmp
fistl
add
add
pop
dec
or
or
stos
cmp
lea
or
push
pop
push
ret
int
push
rol
imul
stc
dec
jns
mov
cmp
push
add
dec
mov
sub
sbb
pop
xor
in
or
dec
decb
shrb
arpl
mov
mov
cmpsb
and
out
jg
mov
pop
cs
pop
push
outsb
xor
add
push
imul
pop
xchg
or
int3
loop
mov
lret
sti
or
sub
test
xor
dec
push
pop
mov
jnp
add
je,pn
int
hlt
incb
adc
cld
xchg
pop
mov
jns
gs
fsubl
leave
test
cmp
stc
test
outsl
sbb
stc
cmpsb
ljmp
fsubp
adc
mov
loop
das
out
inc
inc
and
iret
adc
es
xchg
les
push
iret
jb
jecxz
cmp
inc
add
mov
push
lds
mov
out
inc
mov
not
outsl
test
orl
scas
push
out
mov
inc
add
or
adc
xor
lcall
outsl
dec
aaa
in
mov
int3
gs
cmp
dec
xor
imul
xor
sarl
push
or
idivb
shlb
push
dec
lret
ds
or
pop
fcoms
inc
dec
push
mov
insl
inc
jle
shrl
push
mov
in
sub
js
mov
pushf
mov
xchg
add
xor
nop
out
sbb
dec
xlat
cmp
or
hlt
mov
sub
insl
leave
or
lods
jb
jge
cmp
lods
fidivrs
dec
jl
call
xchg
lods
cltd
jecxz
inc
sub
aas
cmc
and
lahf
xchg
lea
push
mov
out
mov
addb
in
and
loope
outsl
ret
inc
push
push
bound
test
mov
imul
mov
std
cltd
pop
jns
mov
inc
out
in
mov
xchg
test
filds
xlat
std
cli
jp
gs
lds
shl
mov
insl
or
lahf
xchg
and
test
mov
mov
or
call
adc
mov
mov
push
mov
cli
jg
fnstcw
std
jno
mulps
mov
xor
cmpsl
xchg
arpl
push
insl
push
add
int3
lods
add
fstps
gs
mov
mov
cltd
gs
and
jp
lods
inc
pop
and
adc
aas
cld
pop
addl
dec
pop
adc
xchg
xor
cmc
mov
mov
sub
cmp
movsl
test
lcall
test
je
bound
adc
fwait
std
mov
jmpw
add
int3
mov
stos
test
inc
inc
jecxz
sbb
call
mov
push
insl
sbb
stos
sbb
jo
loopne
rclb
cs
pop
xor
in
or
push
dec
ss
cmp
add
stc
jecxz
mov
mov
push
andb
int3
mov
enter
xor
and
cmp
pop
ss
leave
js
push
shrb
aam
push
jbe
jp
add
jmp
pop
xor
sbb
pop
dec
cmpsb
out
sbb
fidivs
mov
push
push
xchg
nop
push
xchg
loope
push
jg
mov
loopne
jae
jmp
loopne
incb
lret
jmp
rsm
cmp
xor
idiv
adc
loop
dec
dec
fimuls
mov
adc
pop
jl
jge
xlat
in
pop
xor
mov
es
adc
and
cld
cmp
adc
mov
push
int3
push
jno
into
movsb
jno
lods
ja
mov
lods
loop
jl
imul
in
aam
cwtl
ret
jae
sbb
fdivrl
dec
push
loopne
scas
das
mov
scas
movsl
aaa
add
lds
repnz
aam
mov
jle
movsl
inc
cltd
mov
popf
iret
js
adc
dec
imul
push
out
das
loop
test
inc
in
and
cmpsb
js
clc
xor
push
lret
sub
fcoml
addr16
out
adc
aam
mov
xor
repnz
push
cmpsl
rorl
sub
jmp
popl
push
fidivl
fnsave
bound
icebp
jae
mov
inc
cmp
test
bnd
cmp
mov
fnsave
fdivr
sbb
aam
mov
cmc
cmp
cmpsl
cld
pop
sbb
rorb
fldenv
push
idivb
mov
push
cltd
fs
and
jmp
js
add
loope
loope
sbb
mov
pop
cli
fcomps
or
pusha
fucomi
stc
leave
cmp
fnstcw
pop
les
lahf
sbb
dec
adc
ss
lock
repnz
inc
ret
push
clc
fucomip
aam
dec
add
rorb
shll
dec
push
sbb
outsl
cmc
int3
iret
dec
cmpsl
lods
ss
jns
xchg
dec
or
mov
mov
cmp
daa
or
adc
mov
fldenv
mov
pop
mov
in
mov
in
popf
repnz
aam
push
jbe
and
pop
pop
ret
add
das
mov
fcmovne
and
jae
and
xor
inc
aas
or
mov
inc
mov
push
inc
gs
mov
movsl
cltd
inc
or
and
jbe
fcmovne
stos
sub
shll
das
adc
imul
pop
cli
pop
sub
lea
dec
lret
dec
scas
push
xor
loope
cwtl
out
mov
js
mov
shl
nop
sti
mov
and
push
stos
or
dec
jp
xchg
sub
repnz
mov
mov
loope
mov
xchg
mov
push
fisubs
xchg
aaa
cli
jmp
cmp
add
mov
mov
mov
sub
in
mov
xor
in
mov
pop
and
mov
pushf
dec
xchg
iret
aad
dec
fidivrl
jnp
imul
pop
push
sbb
rcll
decb
jo
stos
mov
mov
add
mov
xor
lods
jmp
ret
lock
pop
int
pop
popa
inc
push
imul
cwtl
sbb
jl
inc
xchg
filds
add
lea
imul
fstpt
jns
mov
icebp
sub
outsl
adc
cmp
sub
xchg
jns
xchg
cltd
push
shll
cmp
xor
insl
pop
sub
mov
jg
lcall
mov
cmc
outsb
cmp
loopne
mov
xor
sub
cmp
adc
sub
cmp
test
cmpl
rcll
xlat
mov
xchg
mov
das
pop
inc
push
add
pop
imul
add
cmpsb
call
popa
mov
lods
insb
hlt
testb
mov
jo
jno,pn
movsl
inc
inc
shl
sbb
sbbb
arpl
jae
cmp
cmp
jbe
insl
mov
adc
call
shrl
jg
adc
and
out
into
fisubl
cmp
imul
cwtl
int
fstp
adc
pop
mov
mov
idivb
mov
xor
flds
jne
push
mov
out
cmp
cmpsb
inc
pop
mov
aaa
push
xchg
adc
cmc
jl
ja
popa
imul
sub
pop
in
xor
popf
pop
lea
pop
out
lds
xor
hlt
or
outsl
lock
fisttpl
pop
ret
xor
add
mov
into
mov
push
and
fcompl
cmp
icebp
add
mov
dec
stos
pop
mov
or
xchg
xchg
sahf
cli
adc
mov
push
cmpsl
adc
xchg
and
jmp
adc
mov
mov
jge
sub
adc
pushf
cmpsb
or
aam
js
test
loopne,pn
mov
and
nop
rcl
cs
repnz
test
pop
mov
sti
and
cmc
inc
cmpsb
ret
fsubs
sub
rcll
ss
shll
repnz
cmpsl
pop
stos
dec
or
lret
lret
dec
das
mov
or
lret
sbb
adc
stos
lret
in
mov
mov
dec
and
mov
hlt
movsl
rcrl
mov
iret
das
xchg
and
dec
pop
jb
jb
xchg
ljmp
mov
dec
xchg
push
add
inc
pop
inc
mov
adc
push
loope
sub
and
mov
dec
cltd
jmp
ja
mov
cmp
cwtl
nop
out
push
or
jns
in
scas
test
xor
aas
xchg
out
pushf
pop
mov
pop
xchg
adc
sbb
dec
mov
mov
sbb
push
and
jae
mov
rcrl
inc
mov
lods
mov
rcr
inc
sub
jecxz
aas
adc
sub
in
loop
inc
or
sub
orl
iret
dec
inc
sbb
add
and
leave
scas
mov
inc
test
mov
call
clc
testl
lods
ret
inc
dec
xor
scas
cmp
test
pop
cld
mov
adc
sbb
xchg
test
sub
mov
mov
mov
add
mov
push
popa
jg
cltd
sub
inc
xor
mov
sbb
fs
je
pop
push
xor
pop
stos
repz
jge
les
js
dec
cli
push
xor
xchg
xchg
xor
dec
xor
sahf
es
sub
pop
repz
adc
mov
fwait
repnz
popf
cli
pusha
int
fwait
in
ficoml
adcl
cmp
insl
fbld
pop
pop
jns
xor
ret
adc
ficomps
orl
sbb
rclb
popf
jb
and
xchg
inc
dec
add
xor
shll
sub
mov
cmpl
ss
mov
fdivr
sbb
les
pop
xchg
push
adc
stos
shr
lds
scas
mov
test
mov
dec
faddp
std
mov
jae
xor
movsb
cmp
addr16
mov
xchg
jno
sub
adc
fcmovne
fidivrl
inc
int
mov
adc
or
jl
call
out
imul
or
fcoms
fldcw
aas
sub
and
pusha
fwait
pop
lods
xor
das
hlt
in
push
dec
daa
mov
fcoms
mov
bound
xchg
stos
xchg
sub
push
shll
fldl
lcall
gs
mov
pop
inc
xchg
ss
jne
in
dec
mov
arpl
mov
inc
stc
mov
fsubl
xor
xchg
push
jns
decl
xor
xor
decl
and
push
imulb
fnstenv
mov
xchg
sbb
mov
inc
leave
cmpsl
lods
pusha
sahf
mov
push
stos
or
mov
idivl
xchg
in
inc
insb
es
mov
das
das
in
data16
inc
mov
out
sahf
add
sti
mov
rol
insb
addr16
xor
cwtl
and
data16
mov
xor
pop
add
mov
mov
xchg
push
pop
pop
mov
test
sub
pop
and
jbe
lret
pop
sahf
int
sub
in
inc
cmovno
fisttpll
jns
add
outsb
sub
add
inc
push
push
mov
clc
in
test
sahf
jno
push
jecxz
movsb
jns
pop
mov
or
inc
lea
jnp
pusha
inc
jge
sub
movsb
test
sub
pop
fists
add
cs
xor
add
inc
shr
pop
fsubs
ret
jmp
and
push
cmp
adc
fdivrl
mov
add
xchg
xor
addr16
sar
mov
fstpt
pop
mov
fs
push
push
test
cmp
scas
ret
push
adc
mov
mov
or
xor
inc
fs
inc
jmp
xchg
mov
sbb
fnstcw
sbb
shrl
lret
xchg
aad
shrb
loopne
arpl
adc
push
cwtl
je
lcall
hlt
or
sahf
enter
adc
mov
jbe
pop
jl
dec
insl
lods
dec
xchg
xor
add
jge
inc
mov
lods
cmp
cmp
mov
xchg
outsl
mov
dec
sarl
inc
xchg
mov
dec
and
dec
repz
lea
xchg
jno,pt
sbb
add
pop
ja
and
leave
xor
inc
push
lret
push
sahf
stos
jp
icebp
and
inc
jecxz
jo
in
ja
jb
sub
xor
cmpsl
hlt
or
ficomps
leave
insb
dec
test
and
pop
test
lahf
invd
rol
clc
js
mov
sbb
adc
push
pushf
mov
faddl
ds
les
pop
lods
aas
cli
jne
jno
xor
xchg
lds
mov
out
mov
jne
lahf
arpl
push
jmp
inc
push
add
sub
test
das
or
mov
das
popf
imul
add
addl
imul
add
push
xchg
mov
push
test
push
pop
int
jmp
mov
lret
sub
cmp
andb
lahf
clc
jecxz
repz
mov
mov
adc
mov
xor
ja
out
mov
sub
cmp
push
sbb
adc
push
mov
jp
sbb
shlb
ret
loope
ret
repnz
inc
or
fists
pop
sub
sub
cmp
movsb
mov
rorl
xchg
mov
or
push
sti
movsl
cmp
add
push
pop
imul
dec
ror
fcmove
mov
in
push
and
inc
push
xchg
cld
sbb
mov
movsl
dec
push
adc
rcrb
or
popf
mov
jno
ret
inc
sbb
ficoms
imul
mov
xor
adc
in
dec
mov
shrl
mov
push
push
ror
push
out
mull
std
jg
mov
loopne
stos
inc
not
ja
or
mov
arpl
hlt
push
in
in
mov
mov
and
pusha
push
ja
jb
lds
lock
add
sbb
sahf
call
cmp
push
push
ficoms
mov
inc
push
jnp
test
pop
sub
xchg
sub
movsb
and
sbb
xor
cmp
jle
pop
push
in
mov
insl
dec
xchg
in
lahf
jg
dec
sub
xchg
daa
xor
jns
or
sub
arpl
lea
and
lods
loopne
sbb
push
inc
fwait
pop
outsl
cs
push
push
pop
fsts
ds
xchg
jmp
sbb
xor
jmp
jne
js
stos
dec
cmp
or
subl
test
pop
adc
xor
pop
cmpsl
push
popf
add
jns
pop
fwait
repnz
jo
sub
movb
lds
imul
imull
arpl
out
mov
jg
mov
adc
test
shll
push
mov
leave
mov
push
fdivs
loop
add
push
imul
insl
fwait
mov
push
lock
cmpl
fidivrl
scas
xchg
push
ficompl
mov
pop
pop
xchg
shll
mov
push
out
or
push
std
je
sbb
les
jmp
out
test
call
fstpt
add
sub
push
mov
sbb
push
aam
push
stos
dec
mov
mov
push
mov
insb
imul
mov
aad
xchg
popa
cmpl
sbb
dec
data16
mov
push
xor
inc
adc
arpl
test
pop
cld
mov
mov
sbb
adc
push
lret
jo
push
adc
icebp
mov
jno
and
xor
mov
movl
pop
sahf
bound
aaa
test
jo
mov
mov
test
push
xlat
push
or
push
xchg
lret
push
pop
add
jmp
push
aaa
mov
push
pop
jne
outsl
loopew
and
cmpsl
xchg
sbbl
mov
mov
fwait
aaa
bound
mov
sbb
sbb
ficoms
jle
insl
mov
daa
jl
dec
jg
loope
lret
lods
add
dec
jns
cmp
int
fwait
dec
fldt
das
sub
daa
adc
into
inc
xchg
mov
adc
or
test
loope
decl
cmovp
mov
jbe
imul
xlat
push
aas
sub
inc
sbb
stc
out
test
sub
mov
jne
sub
ret
sbb
movsb
les
test
jb
pop
push
mov
icebp
lea
gs
pop
pop
mov
xchg
xchg
fcmove
insb
fimuls
mov
cmc
pop
rol
jne
add
jmp
out
and
jbe
and
push
pushw
dec
sti
xor
or
mov
iret
int3
mov
mov
mov
outsl
icebp
mov
adc
repz
fcoms
cmp
ljmp
sbb
adc
or
repz
xchg
es
bound
aad
test
mov
inc
pop
sbb
cmc
mov
iret
or
bound
xor
imul
mov
pop
mov
sar
ret
lret
movsb
rorl
sbb
xor
cmpsb
sub
add
cmc
testl
mov
bound
arpl
add
mov
in
sti
cwtl
popf
xchg
mov
mov
inc
insb
sbb
pop
or
repz
xlat
icebp
and
ja
or
xchg
dec
xchg
mov
jnp
sbb
mov
popf
data16
int3
jmp
rcrl
je
outsb
lods
aam
cltd
out
jecxz
jb,pn
jnp
mov
clc
mov
sub
mov
jmp
ret
adc
pushf
pushf
dec
lock
add
rol
adc
or
test
test
mov
mov
push
aad
or
cwtl
adc
pop
loop
imul
ret
int3
hlt
sbb
jmp
data16
enter
dec
bound
cmpsl
jne
sbb
popa
js
mov
call
push
adc
mov
mov
popa
aam
xor
xlat
sub
xor
and
in
aam
xchg
das
adc
jge
sbbl
inc
or
mov
mov
aad
mov
mov
arpl
lcall
xchg
in
pop
sbb
inc
mov
pushf
or
clc
rcll
ret
pop
es
mov
inc
jne
cmpl
and
jg
sub
insb
or
pop
ljmp
data16
xor
adc
sbb
mov
push
gs
test
out
jle
cmp
inc
test
hlt
and
cld
scas
mov
cmp
repz
cwtl
ret
adc
xor
add
ljmp
pop
inc
outsb
imul
int
shrl
mov
mov
orb
outsb
push
add
mov
inc
lea
jno
test
inc
jl
test
imull
cmc
adc
adc
adc
outsb
mov
rorb
fnsave
fs
xor
cs
sbb
xor
dec
sub
pop
scas
inc
mov
push
or
stos
xor
xchg
rclb
mov
xor
jmp
pop
cmp
inc
fisttpll
std
mov
pusha
jnp
pop
outsb
sbb
dec
call
xchg
ss
xlat
insl
dec
stc
pop
xor
and
ret
lret
xor
mov
inc
pushf
pusha
aas
arpl
outsl
dec
cmc
mov
pop
sub
lea
and
adc
jb
cmp
add
popa
jmp
dec
pop
add
pop
imul
or
test
cmp
pop
mov
shr
adc
mov
xlat
mov
xor
and
sarb
call
clc
test
push
fstl
mov
sub
popf
mov
push
mov
lods
lret
and
test
push
cmpsb
xchg
mov
pop
test
je
stos
xor
cmp
mov
aas
push
imul
std
push
push
mov
in
xor
test
pop
jbe
add
mov
je
stos
sub
aam
mov
cli
leave
mov
sbb
lds
stos
mov
ljmp
push
pop
in
pop
or
push
cmp
push
dec
inc
loop
scas
dec
jg
pop
pop
inc
jmp
out
add
push
cmc
mov
ds
arpl
stos
inc
sbb
pop
ds
clc
inc
dec
mov
loopne
faddl
xlat
xchg
mov
mov
jge
movsb
fwait
and
fldt
scas
test
into
movsb
lahf
push
add
and
icebp
fwait
jge
stc
mov
sbb
xchg
insb
inc
jae
in
push
pop
push
scas
aam
xchg
int3
xchg
lea
in
push
xor
sbb
mov
test
mov
in
push
cmpsb
lds
add
cmp
mov
dec
jb
sbb
subl
movsl
data16
ret
dec
loop,pn
xor
lret
dec
dec
xor
fstp
adc
cmpl
mov
fwait
and
mov
ds
stos
mov
fnsave
aad
daa
mov
and
xchg
xchg
add
leave
mov
nop
jecxz
scas
mov
test
sub
sti
repz
push
xor
frstor
sub
aam
inc
dec
cmp
add
jle
repz
shl
pop
cmc
cmp
sub
push
cwtl
sub
ja
add
fnstsw
push
dec
dec
out
js
xchg
and
popf
aad
or
ret
pop
scas
movsl
and
pop
lcall
cmpsl
xor
dec
test
stc
dec
dec
bound
ss
lret
popa
in
lds
pavgb
mov
in
xchg
push
incb
sub
or
pop
jo
pop
jo
mov
and
or
int3
dec
cwtl
fldl
lahf
pop
insl
arpl
mov
lods
fimuls
sub
stos
or
xor
and
lods
popf
inc
lods
pop
mov
mov
sbb
leave
push
mov
dec
in
sti
xchg
cmp
mov
adc
mov
xchg
jns
dec
mov
jle
ffreep
sub
stc
mov
xor
inc
mov
imul
or
int
push
test
and
add
outsb
push
daa
mov
jns
dec
adc
ljmp
sahf
in
stos
sarl
sub
fwait
inc
mov
out
lahf
xchg
aaa
iret
push
lahf
push
pop
in
popa
imulb
fists
push
scas
cld
movsl
cmp
add
bound
ror
js
js
xor
cwtl
dec
fldcw
bound
fcoms
bound
push
jns
loop
aas
xor
mov
push
pop
cwtl
push
mov
mov
mov
sub
hlt
nop
sbb
mov
adc
add
lock
cmp
xchg
fcmovnb
dec
jecxz
cmp
and
addr16
mov
dec
out
cli
rorl
fdivs
loopne
insb
xchg
pusha
and
idivl
lahf
xor
es
cs
inc
in
iret
and
mov
fs
cltd
sbb
sbb
xor
int
xchg
push
and
test
push
fldt
or
inc
sub
ficoml
enter
dec
xor
sbb
xor
iret
cmp
cmpb
scas
add
sub
sarl
mov
inc
lret
imul
or
lock
mov
bound
inc
push
mov
cmp
sbb
jp
mov
cmp
push
iret
push
pusha
mov
aas
ljmp
inc
sarb
rol
cmp
push
js
out
in
cld
mov
aas
xchg
push
mov
leave
clc
adc
mov
mov
adcb
or
dec
repnz
mov
divb
xor
addr16
pusha
push
push
jmp
ljmp
out
xchg
mov
adc
push
stos
or
shrb
push
outsl
idivb
test
das
popf
mov
xor
out
push
cltd
and
pop
push
sbb
or
jae
gs
sbb
ret
push
push
movsl
aas
filds
add
jne
sbb
incl
jge
popa
ret
pushf
ljmp
ret
pop
cs
es
out
push
push
fistps
mov
cmp
lret
adc
cmp
lock
sub
lds
mov
add
sti
cmp
mov
fld
pop
lret
jp
xchg
fiaddl
stos
jl
sbb
push
xchg
mov
push
pop
into
in
lock
iret
ds
jl
xor
and
mov
ss
bound
pop
sti
hlt
cmp
imul
mov
cmpl
cltd
notl
jo
pop
and
cld
add
rorb
outsl
test
andb
push
xchg
dec
adc
cmp
mov
mov
daa
cs
push
jg
add
sub
adc
cmp
leave
nop
cld
mov
add
cmpsl
aad
jmp
outsl
sub
jne
loopne
aaa
jno
dec
mov
out
sti
pop
push
adc
dec
cli
mov
sti
lds
cmp
jne
mov
cmp
cli
in
xchg
or
ja
shrb
mov
pop
enter
inc
xor
lods
cmp
ds
pop
lods
mov
push
ss
xchg
xor
xor
dec
jne
xchg
mov
pusha
shl
inc
das
aam
mov
dec
mov
dec
dec
and
xchg
test
dec
mov
xchg
sub
jmp
ficompl
lock
push
mov
std
jo
daa
int
test
cwtl
lahf
int
xchg
subb
lods
sbb
add
mov
popa
jns
xor
fwait
adc
cmp
mov
xlat
fcomp
and
into
mov
mov
sbb
call
lea
and
jmp
fisubrl
mov
pop
jmp
pop
push
cmpsl
or
or
and
pop
dec
sbb
neg
imul
sarl
rclb
sbb
xchg
enter
pop
ret
push
lret
aam
stos
call
dec
xor
dec
cmc
mov
fdivs
enter
test
xor
mov
cmp
int
adc
popa
sbb
outsl
cwtl
xchg
pop
push
add
push
popa
dec
in
mov
pop
or
inc
dec
ja
add
addr16
aas
jb
sti
fcoms
sti
mov
dec
fisubl
icebp
sbb
sub
sbb
test
cld
and
data16
pop
ljmp
outsb
and
aaa
stc
pop
idivb
sti
xchg
lods
lahf
sub
cltd
in
xchg
inc
cmp
mov
xor
xor
xor
mov
jle
mov
fstpl
lret
or
pushf
addr16
and
shll
mov
add
xchg
in
sbb
cld
test
lods
or
imull
mov
divl
insl
shrl
dec
mov
xchg
add
movl
fsubr
nop
push
cmpsb
xchg
es
push
negl
gs
lret
and
xor
popf
and
adc
cmp
dec
jmp
arpl
loope
push
dec
sahf
out
fists
mov
mov
insl
out
sbb
xchg
xchg
pop
ds
in
repz
fmul
add
jmp
ret
and
cmpsl
mov
adc
push
rcll
jo
pop
les
das
scas
xlat
jnp
out
repnz
outsb
and
clc
push
into
pop
pop
sbb
lret
pop
test
movsb
push
aad
bound
cltd
push
arpl
or
sub
push
mov
inc
mov
ret
sbb
fwait
negl
push
stc
dec
push
and
pop
cwtl
lret
loope
xor
cmpsb
loope
fisubs
outsl
sub
sub
lock
sub
jbe
enter
ret
xchg
data16
je
jns
scas
and
inc
test
pop
mov
addr16
push
es
add
gs
or
mov
mov
dec
mov
xchg
movsb
sbb
mov
lcall
pop
cs
fsubrs
test
in
sbb
mov
adc
lods
hlt
mov
call
sbb
jg
mov
fidivrl
divb
and
cs
fdivrs
aaa
scas
push
xchg
xchg
in
push
mov
out
mov
mov
lock
dec
lods
jp
movb
fsts
fimuls
addb
xor
faddl
push
jge
cmp
insb
xchg
in
push
addr16
pusha
in
test
or
test
cs
mov
add
bound
pop
stos
inc
clc
jle
sbb
fiaddl
push
mov
push
sahf
fdivr
stos
jp
mov
cltd
out
pushw
and
add
enter
movsl
or
pop
loopne
addr16
test
test
int
sbb
xchg
mov
repz
lock
pop
mov
sub
xor
sti
cmc
jle
push
xor
pop
jne
cwtl
inc
sbb
push
xchg
or
pop
push
insb
test
dec
jno
lcall
fs
shr
and
adc
adc
xor
jge
jl
mov
jno
andl
ret
jle
js
loop
repz
mov
or
dec
mov
push
cmp
cld
push
cmc
mov
cmp
loop
dec
cmp
cmc
push
lods
or
jne
in
je
jp
pop
mov
or
notb
into
jne
sbb
lcall
pop
insb
mov
mov
sarl
or
hlt
pop
push
imul
cmpl
popf
xor
fsubrs
mov
inc
add
das
inc
or
not
adc
stc
inc
ja
sti
dec
loop
jno
out
rolb
pop
push
sbb
movsl
mov
xor
fs
inc
shll
xchg
sub
mov
inc
xchg
lods
test
adc
cmp
jge
arpl
je
out
pushf
add
cmp
push
pop
inc
pop
aam
popa
cld
popa
dec
sbb
sub
mov
outsb
push
cmp
loopne
add
add
push
add
call
adc
nop
jae
lahf
sbb
add
insb
mov
cli
adc
out
loop
and
popa
inc
mov
arpl
push
bound
test
pushf
dec
pop
ss
fcom
jmp
add
dec
call
scas
lcall
shl
pop
movsb
sbb
rol
mov
and
xor
pushl
pop
sub
push
cmp
std
call
push
xchg
cmpsb
sti
sbb
push
aaa
iret
ljmp
loopne
or
mov
ja
std
sbb
xorb
cmpsb
arpl
pmaddwd
dec
adc
mov
and
js
popa
mov
jp
pop
push
pop
push
mov
jmp
mov
cltd
xor
fcmove
inc
stc
jecxz
mov
or
stos
and
sbb
jmp
pop
mov
ret
daa
imul
dec
add
mov
push
data16
and
imul
popf
cmpsb
arpl
mov
push
push
cmp
pop
fstl
or
jo
stc
dec
mov
lods
sbb
aaa
jbe
sbb
dec
pop
or
jno
sub
mov
shl
int3
sbb
in
xchg
lea
mov
pop
sbb
out
push
push
or
into
bound
jecxz
test
aam
inc
add
sub
loop
js
xor
test
iret
aad
xor
cmp
je
mov
ret
mov
movsl
jecxz
aaa
in
sbb
stos
loop
lahf
jl
push
or
pop
loope
mov
xor
ljmp
in
imul
jns
rolb
push
leave
insb
sbbl
ret
into
fldcw
mov
jecxz
fwait
add
addr16
cmp
xor
mov
mov
mov
pop
ret
mov
mov
push
out
jno
inc
fucomip
dec
out
jecxz
cmpb
xchg
mov
stos
jbe
call
cmp
mov
subl
aaa
pop
mov
push
int
xchg
daa
cmp
fistpll
test
mov
push
icebp
mov
cmpsb
lret
mov
icebp
inc
stos
jns
imul
outsb
dec
pushl
xchg
and
aaa
repz
shrl
mov
mov
cmc
fstps
adc
pushaw
popa
out
pop
sub
jp
jle
mov
or
ret
inc
ret
mov
fwait
push
loopne
dec
and
js
icebp
test
imul
mov
das
es
lcall
mov
pop
icebp
xchg
lret
ret
mov
xadd
pop
movsl
das
push
dec
add
jmp
mov
sub
divb
xchg
faddp
push
idivb
sbb
data16
pop
cmc
pop
sub
add
scas
adc
pop
pop
pop
jl
arpl
dec
cmp
push
ss
loopne
sub
mov
jbe
cltd
add
das
mov
lock
push
scas
pop
mov
movsb
int3
mov
cmpsl
cmp
adc
sbb
cmc
xlat
cs
dec
sub
fpatan
cltd
dec
call
aam
cmp
gs
data16
pushf
sub
xchg
mov
adc
rcpps
push
xor
test
add
in
cmp
fisubl
jp
push
adc
js
pop
jl
jno
into
ftst
out
or
adc
inc
mov
mov
leave
in
or
mov
inc
dec
lret
cmp
xchg
mov
orl
mov
push
sbb
cmpsl
std
pop
clc
data16
or
lds
sbb
mov
mov
xor
fwait
xchg
pop
sarb
cmpsl
pop
ds
fstpl
repz
in
push
lods
xor
push
sub
rclb
sub
adc
sub
notl
lahf
rol
jne
shrl
mov
decb
ss
inc
dec
add
push
add
popa
mov
nop
push
gs
mov
xchg
stc
push
push
icebp
mov
or
pop
stos
mov
lods
add
push
mov
xor
sub
cwtl
test
push
int3
mov
xor
jo
sbb
dec
cmpsb
push
dec
sub
mov
inc
mov
sahf
jl
xchg
push
push
push
aad
jae
sub
sbb
jns
jp
imul
aad
cmp
cli
sbb
mov
sub
fnstcw
xor
shrl
adc
sub
jecxz
xchg
shll
jge
pop
add
cmp
xor
adc
pushf
test
adc
daa
lods
outsl
or
pop
addr16
adc
je
js
dec
add
dec
scas
cmp
and
mov
stos
jne
and
add
loopne
sub
adcb
rcr
cmpsb
cmp
in
push
nop
int
ficoml
dec
adcb
fmuls
or
jmp
mov
xchg
pop
or
test
cmpl
mov
inc
sbb
ljmp
out
jg
pop
and
xor
ljmp
jl
cmp
js
mov
cmp
in
call
dec
push
xchg
jb
clc
push
adc
loopne
add
push
dec
add
pop
test
insl
cwtl
add
iret
inc
and
pop
mov
cmp
mov
sbb
sub
ffreep
lods
or
sbb
test
mov
dec
add
imul
gs
call
push
pop
pushf
xchg
inc
xorb
cmp
or
stos
or
enter
das
mov
xlat
cmp
inc
std
pop
mov
push
dec
fists
push
sub
and
cmpl
fdivs
sbb
jle
imul
insb
fcoml
or
xor
mov
and
xchg
aas
dec
jns
inc
lret
jno
fidivrs
push
andl
std
divb
lods
pop
lods
cmpb
fcoml
add
pop
loop
mov
jo
sahf
je
xchg
loope
jo
push
into
in
add
icebp
stos
jecxz
and
mov
rcrl
cmp
xor
ss
mov
rclb
inc
jge
in
jae
mov
pop
and
or
loop
push
pop
cmpb
out
cmc
mov
into
mov
les
sub
cwtl
add
sub
leave
jo
mov
imul
movsb
ror
xchg
leave
mov
pop
clc
inc
cmp
out
or
aad
decb
fwait
pop
and
push
cmpsb
mov
int
sbb
sub
in
push
sbb
xor
xchg
test
sub
bound
ljmp
in
addr16
pop
adc
ss
not
aaa
or
push
dec
pusha
adcb
filds
out
std
dec
push
negb
insb
into
testb
adc
xchg
out
cli
dec
jb
jge
cmp
push
sbb
fimuls
popf
js
fmuls
mov
mov
mov
and
mov
mov
add
dec
push
or
xorb
xchg
pop
test
push
jne
cmpb
pop
rcrl
inc
lret
cli
mov
dec
mov
or
pop
idivb
imul
repnz
inc
insb
lods
add
movsb
and
aad
filds
sbb
fsub
cltd
call
mov
push
aad
sbb
sbb
roll
mov
popf
mov
out
xlat
and
dec
lods
mov
inc
in
mov
jecxz
ret
mov
addr16
push
shrl
aam
enter
cmpsl
shr
neg
int3
push
shlb
subb
aad
cmc
outsb
push
dec
outsb
pop
jb
mov
out
movl
adc
sbb
dec
jg
and
addsd
sub
mov
lret
cli
ficompl
jl
and
movsb
data16
or
sub
lret
pop
sub
push
cmc
gs
popf
lret
sbb
aam
add
xchg
ljmp
and
enter
add
jb
mov
mov
dec
jne
push
adc
aad
push
test
mov
pop
xlat
inc
pop
enter
test
sbb
aam
sahf
js
sbb
out
aad
scas
movsl
lcall
out
fadds
sub
push
push
add
mov
sti
xor
xchg
dec
ret
es
dec
in
pop
frstor
pop
mov
sbb
cmp
or
out
mov
and
pop
out
mov
fmul
mov
push
pop
loop
cmpsl
pop
push
insb
loopne
test
addr16
pop
shr
sar
jmp
leave
dec
in
xor
aam
pop
imul
push
push
fmulp
push
cwtl
adc
sub
sbb
mov
cs
jbe
mov
mov
xor
mov
arpl
mov
mov
outsb
rorb
iret
jg
std
fdivl
sbb
out
sub
push
fcompl
test
bswap
dec
xchg
mov
and
sbb
dec
std
out
sti
pushl
xor
sarl
nop
stos
cwtl
dec
adc
push
lcall
dec
dec
arpl
inc
ficompl
and
into
scas
int
jb
rolb
rorl
jb
nop
arpl
outsl
mov
xchg
or
scas
mov
stos
mov
jae
push
fwait
in
popf
xor
inc
es
je
xlat
mov
arpl
push
pop
or
ret
jo
hlt
imul
cs
sbb
pop
iret
cli
inc
mov
movb
and
mov
fildll
fs
dec
cmc
shlb
dec
adc
js
adc
lahf
jo
and
popa
lea
not
xchg
pop
pushf
mov
pcmpeqb
sbb
mov
and
dec
or
jb
test
push
sub
aaa
idiv
mov
mov
fs
mov
mov
jbe
jmp
or
cwtl
std
addb
pop
sub
sbb
jge
mov
movsb
ret
pop
stos
fistpl
mov
out
xchg
ficomps
push
pop
xor
add
dec
jns
wbinvd
fistl
or
jl
and
fidivs
out
pushf
aas
movsb
dec
adc
call
rcl
or
add
lods
add
pop
loopne
fs
sub
sub
mov
xchg
xchg
mov
test
xchg
aam
fwait
or
ret
add
cmp
adc
rcll
lcall
push
jbe
lods
cwtl
xor
adc
mov
roll
push
jbe
xchg
jmp
icebp
cmc
imul
push
pop
pop
lds
and
aaa
jbe,pn
pusha
jbe
add
push
adc
add
jb
push
dec
and
js
and
jmp
sarl
jmp
add
leave
repz
xor
scas
mov
cmp
mov
xor
xrstor
pop
cltd
incl
sub
adc
mov
push
fisubrl
popa
or
out
mov
sub
jl
mov
adc
cmpsl
into
sti
sbb
test
adc
and
inc
arpl
xor
dec
push
insb
or
sbb
cli
or
or
dec
test
mov
testl
xchg
outsb
bsf
fidivs
or
lea
cmpsl
and
fsts
jb
sbbb
jns
adc
cld
mov
xor
sub
jbe
mov
shll
mov
pushf
fstl
push
mov
dec
mov
enter
fistl
sti
or
in
cmp
pop
movsb
sbb
and
das
in
lcall
cmc
and
fimull
and
mov
sub
sbbb
addr16
or
mov
inc
std
xlat
or
sub
and
mov
movsb
es
cmp
inc
and
xchg
cmpsl
dec
sbb
or
or
out
js
adc
or
scas
cmp
les
cmc
jmp
pop
inc
or
adc
mov
mov
xchg
inc
icebp
decb
divl
add
ret
push
popl
aaa
add
push
repnz
stc
mov
ja
es
mov
pusha
lret
test
sub
iret
push
fcoml
inc
mov
sbb
sbbl
add
mov
xchg
lods
sti
pushf
in
jle
jno
addl
insb
adc
jno
jne
inc
ss
fs
gs
jge
les
pop
add
pop
pop
mov
jl
rcr
clc
mov
jo
pop
int3
xchg
lret
xor
ret
stos
rorb
out
adc
cmc
imul
inc
rcrl
mov
cwtl
push
sbb
shl
pop
xchg
sbb
call
add
scas
add
insl
inc
lock
jmp
push
fcompl
jl
or
add
imul
cmp
fcmovu
add
pop
jb
lods
dec
jnp
sub
pop
sbb
iret
aad
outsl
adc
or
and
sti
data16
cmp
cs
mov
sub
shrl
test
pop
out
mov
fidivrs
test
mov
ficoml
jp
in
push
lahf
mov
dec
fld
cmc
insb
les
popa
aam
mov
add
cmp
pop
rcl
adc
lcall
dec
std
and
jne
int3
aam
cmp
les
std
xchg
lock
xchg
insl
lock
and
fstps
dec
inc
jg
adc
mov
repnz
jge
dec
pop
arpl
ret
ljmp
adc
lret
mov
je
arpl
popa
jg
cmp
in
clc
aaa
jl
xchg
aaa
and
sub
in
movsb
imul
xor
sub
xor
pop
inc
inc
aas
test
or
out
test
dec
test
gs
xchg
jp
and
jno
push
leave
cmp
lds
rorl
scas
xlat
add
lcall
call
in
insb
and
add
shlb
fisttpll
clc
push
imul
cld
sub
sahf
int
cltd
dec
adc
test
xor
jp
mov
std
and
jmp
cmp
test
xor
ds
mov
mov
and
pop
xor
jecxz
adc
add
xchg
cmp
pop
push
lahf
pop
jns
cmpsl
mov
sub
adc
insl
sub
stos
lret
add
lods
or
sbb
divb
cmc
cmp
push
jae
and
inc
jne
aaa
mov
xor
jl
ss
jecxz
cmp
add
inc
scas
inc
pop
loope
cmp
into
sbb
loopne
fwait
stos
sbb
cmpsl
add
and
mov
cmp
fdivrs
and
xchg
inc
jp
adc
shrl
mov
loop
mov
mov
test
in
mov
inc
or
inc
xchg
in
jns
sub
jmp
or
cld
sbb
dec
mov
sbb
fsubl
repnz
pop
mov
fldcw
dec
clc
dec
bound
out
mov
int3
xlat
mov
and
mov
mov
push
sbbl
xchg
inc
mov
or
andb
in
mov
int
pusha
mov
inc
in
ret
fadds
push
mov
inc
dec
cltd
mov
xor
iret
rclb
bound
pop
and
mov
xor
imul
into
in
xor
out
es
or
mov
push
rorb
rorb
cmpsl
jge
cltd
flds
and
out
pop
pop
jmp
fldenv
loop
inc
aam
sbb
dec
mov
mov
push
sbb
mov
sbb
pop
sbb
fcmovnbe
sahf
mov
dec
lods
jmp
push
sti
je
test
test
repnz
cmp
out
pop
stc
jg
into
dec
mov
inc
notl
jle
xor
lds
jecxz
add
lds
sbb
pop
rol
adc
arpl
ret
cmp
sub
jne
insl
mov
inc
dec
sub
popf
jl
cmp
jne
addb
ss
push
jbe
fiaddl
rorb
ja
mov
sub
push
jecxz
sbb
mov
mov
mov
lret
add
inc
pop
hlt
enter
dec
scas
and
add
pop
dec
stos
xchg
pop
lahf
mov
add
xchg
sbb
sti
mov
ds
xchg
xchg
xor
aam
dec
vmovshdup
in
shlb
int
mov
bound
sbb
adcl
pop
pop
adcl
jmp
int
jl
adc
sub
mov
daa
sahf
cmpsb
sbb
int
adc
cmp
add
js
imul
dec
xchg
mov
sub
repnz
andl
aaa
out
lahf
dec
std
push
lods
fmuls
mov
sub
pop
ja
cmpsl
jmp
cs
push
in
out
addb
add
xor
pop
inc
inc
or
mov
fisubs
rclb
inc
sbb
mov
or
cltd
sahf
and
push
insl
testb
or
mov
dec
call
imul
in
fidivrl
and
adcb
cmc
cmp
mov
bound
int
nop
pop
mov
cmpsb
lret
sub
and
cmp
or
clc
lods
mov
push
dec
sbb
outsb
mov
call
mov
sub
adc
mov
lahf
dec
movsb
stc
in
shll
fcmovnu
je
outsl
popa
and
into
inc
popa
cld
pop
and
adc
cmp
into
xchg
adc
addr16
pop
sub
mov
xor
into
cmp
xor
sbb
in
or
inc
mov
or
mov
ss
xchg
mov
ljmp
xor
mov
cmp
and
jb
push
out
jnp
jnp
insb
fists
and
xor
fdivp
int3
or
mov
ret
sub
mov
pop
mov
mov
dec
mov
mov
mov
cld
icebp
mov
mov
cmp
pop
mov
jg
mov
cmp
fadd
insb
idivb
pushf
sub
or
in
ret
dec
xorl
enter
lahf
repnz
xor
xor
mov
xchg
dec
cmc
pop
lock
push
repnz
jno
or
sbb
mov
sbb
xchg
jecxz
inc
dec
sbb
arpl
mov
mov
scas
lds
inc
cmp
jp
mov
inc
cmp
adc
xor
cmp
jg
sbb
out
mov
fdivl
negb
dec
jnp
testb
clc
xchg
cmc
cmpsb
inc
fs
and
sbb
pushf
or
inc
xchg
test
enter
jo
xor
add
mov
mov
aaa
xchg
or
jle
jecxz
dec
sbb
push
cmp
into
inc
cmp
ja
sub
aam
mov
sbb
dec
arpl
push
test
cld
sub
inc
aam
not
jl
jne
ret
pop
scas
mov
xor
lret
mov
popa
stc
add
lret
mov
inc
enter
cmc
push
int3
mov
rep
xchg
mov
std
ret
fnstenv
jne
sbb
cmp
sbb
lahf
jbe
mov
add
scas
push
inc
xor
xchg
icebp
pop
mov
mov
andl
xor
loopew
lret
out
push
shrl
cmp
imul
lds
dec
inc
nop
loope
xchg
call
inc
pop
jmp
ja
push
adcb
sub
ret
jmp
mov
nop
jge
test
xor
ja
mov
arpl
jle
mulb
mov
cmp
mov
stos
ret
push
jnp
scas
push
imul
es
fsubl
mov
mov
lret
sar
mov
and
sti
in
aad
fnstsw
arpl
enter
inc
jle
imul
adcb
ljmp
pop
sbbl
jb
pop
xchg
rcrl
xchg
orb
dec
fidivl
dec
rcrl
mov
inc
and
sbb
lock
and
mov
pop
int3
mov
ret
lock
cmp
sub
mov
inc
cmpsl
sbb
scas
xor
jne
dec
or
int
cmp
hlt
pop
add
fdivrs
sahf
ret
add
inc
sub
mov
and
jnp
enter
xlat
dec
pop
shlb
stos
mov
xor
scas
xchg
jns
mov
push
data16
mov
sbb
mov
or
xlat
sub
sub
add
push
and
loop
adc
aas
ret
test
push
or
sbb
outsb
mov
pop
stos
cltd
and
stos
cmpsb
mov
loopne
sub
mov
adc
out
fs
and
cwtl
cmc
mov
popa
es
cmp
add
jo
lcall
repnz
add
shll
lds
xchg
ss
inc
js
stc
addr16
push
mov
xor
fidivl
mov
das
cmpsb
shrl
fstp
shl
dec
icebp
aas
xchg
enter
popf
inc
adc
daa
mov
and
cmp
data16
or
dec
push
insl
into
iret
test
mov
fwait
divl
mov
out
fadds
cmc
outsl
inc
inc
rolb
mov
or
xor
xchg
cmp
in
xchg
or
lahf
neg
push
ret
clc
out
loope
mulb
test
loopne
or
mov
enter
jae
xor
dec
inc
stc
dec
mov
int3
inc
cli
mov
outsb
mov
sbb
adcl
mov
daa
jae
xor
jmp
jge
das
iret
lods
adc
cmpsl
mov
fstp
dec
xchg
iret
lret
pop
loope
push
adcl
adc
icebp
inc
pop
out
jmp
xor
mov
mov
cmp
or
mov
mov
mov
shrl
push
dec
jb
lods
js
clc
roll
sub
adc
xchg
dec
cmp
mov
outsb
or
dec
pop
mov
insb
xlat
loopne
cmpsl
dec
test
scas
fistpll
daa
jae
lret
mov
inc
call
xor
ficoms
adc
orl
jecxz
push
cld
scas
cmpb
out
xchg
cmp
sbb
jb
jecxz
cmpsb
xchg
fwait
inc
or
add
lcall
xor
test
mov
xor
xor
stos
mov
loopne
loopne
mov
fisttpl
push
or
cmp
xlat
sub
adc
xchg
xor
mov
mov
or
hlt
mov
or
scas
es
push
cmp
cmp
clc
insl
push
or
stc
into
push
divps
sbb
xor
outsl
arpl
mov
and
jbe
sbb
pop
cltd
mov
loop
mov
mov
sub
test
pop
jge
jmp
stc
push
pushf
cltd
xor
popl
inc
lods
loopne
and
push
jl
je
stc
push
in
scas
inc
jle
mov
stc
mov
shrl
shlb
sbb
ljmp
inc
inc
jmp
popa
mov
fcomps
mov
dec
bswap
pop
sbb
push
add
or
mov
cs
adc
pop
add
nop
lds
je
push
xchg
cmpsl
jmp
mov
or
and
dec
push
dec
push
pop
mov
and
pop
ficoms
pop
pop
add
lahf
and
inc
fpatan
cmp
xor
dec
in
out
mov
push
jp
cmc
sbb
mov
xchg
or
add
std
scas
add
ljmp
sub
pop
sbb
jno
insl
ret
ficoms
push
xchg
daa
jl
lock
int3
les
mov
xchg
jne
fwait
addr16
mov
cmpsb
insb
push
dec
int3
fisttpll
inc
dec
mov
movsb
mov
xor
popa
ud2
lods
or
dec
adc
xor
xchg
cmc
inc
cmp
adc
sti
scas
adc
push
in
lods
add
adc
jno
mov
pop
inc
push
jge
mov
pop
mov
xor
mov
or
sahf
stos
push
dec
aaa
cmp
ret
xchg
inc
jns
inc
sbb
loop
mov
out
mov
ret
in
xor
jmp
divl
mov
hlt
adc
movsb
ja
push
xor
jo
push
mov
push
dec
push
sub
lea
fst
movsb
int
dec
mov
sbb
and
pop
je
cs
idivl
inc
push
scas
fwait
mov
rcr
add
int3
mov
mov
in
out
fs
out
ss
pop
sarb
mov
xor
pop
mov
stc
sub
sub
fsubs
outsb
ret
movd
dec
ja
pushf
roll
mov
out
loop
mov
cmp
mov
ret
cli
sbbb
push
je
into
out
aam
jmp
add
inc
mov
leave
inc
cld
outsl
xchg
mov
cs
sub
out
xchg
mov
fstl
sbb
lods
jp
push
add
aam
jmp
mov
ss
pop
cmp
mov
or
mov
dec
lea
inc
clc
dec
xchg
or
xchg
add
mov
loope
sub
push
push
test
data16
rolb
xchg
sbb
dec
sbb
int3
cli
mov
dec
fdivrs
sbb
in
outsl
adc
sbb
fwait
mov
jecxz
loop
push
jge
fwait
push
out
cli
pop
out
mov
jae
jnp
dec
in
test
ret
lcall
insl
std
push
nop
cwtl
pop
jnp
mov
xchg
jle
xchg
ret
in
loop
mov
jno
fbstp
xor
popf
ret
jae
scas
outsb
stos
out
iret
and
xchg
test
or
fs
xor
inc
xchg
fdivrs
or
ja
push
sub
mov
xor
mov
aad
call
and
out
mov
adc
ret
xchg
sub
insb
xorb
les
mov
cmp
jmp
or
xor
fistl
or
scas
mov
cmp
sahf
jno
jno
shlb
fs
jmp
sbb
ret
int3
add
dec
push
fdivrs
fwait
mov
push
adc
test
sbb
movsl
cmpsl
movsl
ljmp
addb
mov
testb
and
int
lods
sbb
mov
xchg
rcrl
push
imul
sbb
mov
jp
dec
mov
mov
std
push
mov
and
inc
cmp
scas
arpl
xchg
andb
and
push
das
sbb
js
mov
lcall
push
test
add
mov
fucom
pop
int3
mov
cmp
sti
push
fcoml
cmpsb
je
insb
mov
cmp
sbb
xchg
das
cmpsl
clc
xchg
in
inc
and
loop
jbe
gs
mov
data16
inc
adc
mov
cld
adc
add
xchg
popa
sub
inc
mov
mov
outsb
adc
pop
daa
sub
or
stos
and
das
sbb
mov
insb
aaa
sahf
sub
mov
or
stos
jo
mov
inc
push
xchg
mov
add
push
sub
mov
cld
and
out
les
lret
inc
out
add
fs
mov
cmpsl
movsl
xchg
shrl
inc
jle
test
mov
mov
or
dec
xchg
imul
add
push
pop
dec
xor
imul
xor
jne
and
fdivrp
push
cwtl
adc
lods
mov
clc
jae
add
jecxz
push
les
and
mov
cmp
and
bound
inc
and
nop
jnp
and
pop
jo
pop
xor
push
es
mov
jg
xchg
bound
jmp
int
jle
lret
pop
out
test
jnp
sbb
jno
sub
push
test
inc
xor
mov
cmpsl
mov
pushl
jnp
dec
adc
enter
xchg
sti
fsubrs
insl
loop
pop
add
cwtl
jae
add
mov
std
push
ret
in
movsl
and
outsl
addr16
jecxz
lahf
negl
and
sti
les
clc
xor
in
iret
loope
outsl
cmpsb
xor
and
insb
cmp
pop
dec
dec
in
jnp
insl
mov
sbb
test
add
cmp
mov
jle
push
outsb
repz
mov
scas
xor
stc
xor
sub
aaa
jo
pop
out
nop
adc
movsl
mov
test
xchg
push
shlb
fldl
call
cmpsb
and
mov
clc
ja
inc
adc
gs
cmpsl
jo
rcrl
pop
aas
fldcw
inc
movsb
inc
inc
xchg
inc
and
lret
xor
es
cltd
add
arpl
xor
mov
mov
dec
jae
dec
and
scas
pusha
cwtl
js
sub
popa
xchg
into
pop
fcomp
stos
push
in
mov
mov
mov
xlat
ja,pt
leave
jne
jbe
adc
inc
sbb
jl
and
out
pop
cld
xor
ss
cs
shll
jb
fbld
inc
ficompl
ret
mov
test
dec
mov
xchg
lea
adc
fdivs
fwait
sbb
sti
pusha
addb
cmp
mov
jne
sub
inc
or
mov
sub
xchg
adc
inc
dec
roll
or
mov
jmp
jae
decl
push
addr16
inc
js
cltd
in
mov
or
leave
cmp
ret
mov
pop
push
fildll
lods
rorb
outsb
nop
sub
xchg
xlat
les
cmp
aad
adc
mov
pop
jno
pushf
aas
xchg
pop
mov
sbb
sub
add
nop
dec
pop
jne
int
imul
mov
loop
mov
mov
inc
and
int3
ret
mov
test
pusha
sbb
mov
lret
testl
lds
sbb
xor
fcompl
es
adc
add
cltd
adc
cmc
and
loopne
roll
mov
jnp
dec
lds
fnstcw
mov
out
adc
fsubrl
subl
add
in
add
dec
mov
cmpsb
insb
mov
flds
add
stc
jb
mov
push
call
jae
jle
sbb
rcll
cs
aaa
fdivrs
lods
or
dec
cs
xor
xchg
and
sub
mov
sub
scas
mov
sbb
sahf
js
jae
inc
enter
sbbl
xchg
cltd
add
and
pusha
sahf
dec
out
inc
sbbl
ljmp
or
mov
mov
and
jl
js
adc
xchg
rcll
repz
cmpb
sub
mov
dec
jne
mov
push
jno
ss
aaa
inc
fnstcw
loope
repnz
xchg
mov
jl
leave
cmp
adc
adc
loop
pop
jns
xchg
add
out
or
push
into
fwait
adc
add
imul
cmp
repnz
shll
sub
dec
lret
pop
pop
ss
jl
in
and
inc
rcrl
andb
cs
fwait
and
in
push
je
les
inc
push
sbb
leave
pop
cmp
std
xchg
movsb
pop
jno
popf
test
xlat
lahf
mov
sbb
sti
fistl
and
dec
nop
addl
lcall
jl
push
sub
inc
pop
insl
push
pop
pop
cmc
sarl
sbb
clc
or
push
fwait
mov
movsl
mov
or
jo
push
int3
mov
and
jecxz
add
pop
mov
icebp
pushf
cmp
addl
movsb
pop
addr16
mov
jbe
dec
dec
cmp
jle
or
add
xlat
insb
xchg
testb
xor
rcrl
ljmp
andb
je
out
loope
inc
repnz
inc
sub
clc
push
shl
mov
push
pop
and
fwait
cmp
inc
scas
jb
xor
mov
inc
dec
xor
inc
imul
bound
push
outsl
xchg
xchg
into
movsl
push
sub
push
aas
or
fistpl
mov
daa
stos
jnp
sbb
pop
and
mov
sbb
das
push
js
popa
dec
out
andb
ret
adc
push
lcall
mov
mov
movsb
push
dec
movb
mov
sub
mov
add
jg
sub
dec
lods
sbbb
ja
movsl
int
and
insb
dec
insb
rorb
pop
lar
dec
pushf
mov
mov
push
add
clc
insl
rolb
mov
ja
mov
movsb
cmpsl
xor
mov
iret
push
or
xchg
lahf
aad
pop
and
ret
call
jns
mov
pop
push
rcrl
dec
cli
cmp
sbb
mov
insb
mov
fsubrl
andb
negl
dec
lods
xchg
adc
imul
out
int
icebp
mov
gs
push
push
test
les
adc
scas
inc
pop
fs
mov
arpl
shrb
stc
pop
ret
lcall
mov
add
xchg
stc
pop
cmp
push
lods
mov
lcall
ret
xchg
std
dec
cwtl
addr16
ja
shrl
xor
test
push
mov
fyl2xp1
shl
mov
push
push
and
lret
xchg
jge
popa
sub
xorb
into
push
xor
out
es
cld
add
loop
dec
adc
sbb
jg
add
sarb
call
push
jo
andl
fwait
loop
xchg
inc
pop
gs
test
gs
mov
xor
push
fmuls
sbb
aas
and
enter
ret
and
pop
sub
dec
in
lea
xor
cs
mov
sbb
jg
inc
push
sbb
adc
ljmp
pop
sahf
scas
pop
xlat
dec
mov
iret
inc
cs
push
pop
in
insb
cmp
outsl
sbb
je
or
fucomi
mov
jae
xor
int
shl
movsl
push
hlt
mov
push
cmp
popf
adc
add
and
inc
mov
dec
jl
rcrl
dec
lret
outsl
out
jbe
insb
test
ret
mov
inc
jb
adc
inc
mov
push
or
scas
lods
in
sub
xchg
sti
jge
or
je
out
xor
xadd
fidivs
mov
xor
push
lds
push
addr16
xchg
mov
in
mov
cmp
out
cmp
sti
mov
int
jle
adc
out
lods
inc
stc
ret
inc
add
cmp
mov
mov
enter
cmp
mov
mov
xchg
fcompl
movsl
loopne
insb
jle
std
xchg
sub
push
xchg
ljmp
loop
hlt
int3
adc
sbb
ud0
sub
and
cli
mov
adc
jno
push
lds
mov
mov
pushf
push
lahf
lods
inc
mov
out
cmp
add
mov
cmp
ret
dec
adc
mov
xor
pop
es
xor
fisubs
jmp
pusha
loope
dec
sbb
in
orl
leave
hlt
adc
pop
mov
or
shl
rcrb
pop
mov
das
outsl
add
cltd
dec
push
and
xchg
mov
xchg
in
mov
mov
sbb
popa
stos
lea
clc
pusha
popf
push
mov
mov
jae
stos
xor
sub
xorb
push
cli
je
cmc
xlat
jo
mov
hlt
xchg
mov
add
pop
das
mov
loop
or
mov
frstor
cmp
jecxz
cmp
mov
sbb
out
xchg
ljmp
negb
jle
and
fs
out
mov
stos
daa
cmpxchg
sub
sub
xor
imul
pop
mov
add
out
iret
mov
decl
and
andl
pop
mov
scas
incl
test
mov
and
jns
xchg
ficoml
push
les
in
int3
scas
lret
add
lods
movsl
cwtl
mov
inc
sbb
enter
aad
movsb
in
jns
sbb
sbb
and
pop
lahf
loopne
gs
mov
mov
mov
std
out
cmp
dec
fisttps
xor
push
enter
pop
and
ljmp
mov
mov
mov
popf
and
or
add
addl
aam
clc
dec
popf
sub
outsl
cwtl
leave
push
imul
mov
mov
fnstenv
sbb
faddl
lea
fists
sbb
faddl
aam
sbb
sub
out
sahf
jbe
cmp
imul
pop
and
mov
iret
jnp
xchg
arpl
jge
jle
jg
incb
in
push
jno
cld
cwtl
fildl
daa
jo
cld
cmp
jg
jle
xchg
lods
xor
inc
xchg
cmp
movsb
add
jge
ret
cmp
mov
test
mov
enter
lret
dec
mov
cmp
dec
or
lahf
and
add
call
jge
fmull
xor
dec
sar
stos
test
add
sub
xchg
in
dec
fisubl
add
enter
push
push
das
andb
jmp
and
xchg
xchg
out
cmp
int3
cltd
xchg
jecxz
andl
repnz
jnp
inc
xorb
pusha
pop
mov
adc
test
loopne
jg
sub
fildll
scas
inc
jnp
les
xor
sub
lods
mov
inc
test
das
cmp
pusha
jo
lahf
into
stos
mov
xor
jnp
sbb
inc
lock
lods
fs
xchg
xor
arpl
pop
jl
divl
movsb
xlat
inc
sub
mov
xorb
fwait
add
pop
int
cmp
jae
negb
and
sbb
push
mov
lds
cld
pop
imul
daa
insb
push
jg
inc
push
xor
push
fmul
push
pop
and
fnstsw
in
cld
ja,pn
cmp
fyl2xp1
sub
adc
inc
adc
ljmp
adc
lock
dec
ret
rcrl
inc
mov
pusha
gs
xorb
ret
aas
sbb
pop
lret
adc
fcompl
mov
cltd
cmpsl
push
cmpsb
test
lcall
xchg
jo
sub
mov
adc
es
cmc
cmpsb
pop
cli
or
push
das
repnz
ret
jecxz
jl
dec
jg
adc
pop
je
mov
lahf
push
jae
push
test
mov
push
aas
fisubrs
push
stos
xor
loope
fsubs
fsts
jl
loop
into
mov
pop
ror
cmp
leave
test
scas
and
shl
imul
and
nop
jo
cmpsl
pop
mov
jb
test
dec
push
aad
outsl
mov
cmp
or
xchg
push
repz
shll
or
xchg
hlt
shl
ret
bnd
popf
cwtl
mov
jbe
test
loopne
aas
sbb
jp
push
shlb
popa
xchg
jo
jns
inc
xor
mov
lcall
mov
adc
dec
mov
pop
cmc
rcll
mov
js
xor
xchg
pusha
inc
fildll
fsubrp
repnz
cmp
add
cltd
push
popf
sub
sub
push
sub
inc
pcmpgtb
jg
arpl
jmp
leave
pop
mov
or
or
fmull
aam
dec
stos
lea
outsb
and
sub
mov
mov
rcll
sub
xchg
jbe,pt
mov
jo
sbb
jnp
sub
xor
mov
addl
and
dec
sbb
pop
ljmp
mov
jp
inc
and
cmp
mov
es
dec
or
pop
xchg
imul
test
and
cltd
sub
sub
sub
mov
or
jno
inc
mov
lods
dec
xor
sub
adc
xor
mov
push
out
fstl
add
stc
push
mov
cmp
pop
mov
lret
pushf
jbe
clc
mov
jg
mov
inc
ror
movsb
repnz
xchg
js
adc
lret
and
fisubl
push
xchg
out
xor
arpl
mov
stos
loop
push
es
ret
test
dec
xor
add
pop
mov
and
sbb
daa
dec
mov
out
add
les
test
pushf
xchg
loop
lds
mov
dec
mov
push
cmpsb
cmpsl
ja
sub
ficoml
pop
and
xor
sarl
iret
dec
push
leave
adc
pop
push
pop
dec
loop
repz
xchg
fnstenv
cmp
iret
out
and
mov
insl
mov
cmc
rolb
inc
lea
push
push
ret
sar
cld
jge
adc
xchg
fidivl
mov
out
sub
sarb
jmp
adc
pop
mov
ds
das
xchg
mov
pop
std
xor
ljmp
clc
mov
iret
stos
inc
in
jnp
add
popf
cmc
xchg
psubusw
bound
icebp
push
xor
clc
cltd
or
jmp
sahf
ja
push
ss
mov
jnp
sub
pop
das
insb
je
sub
jl
xlat
inc
mov
and
das
cwtl
mov
mov
dec
hlt
inc
xorl
in
and
lret
hlt
lret
rorb
push
fsubr
das
push
cmp
jns
pop
lds
mov
pop
push
mov
mov
pop
pop
push
xchg
mov
adcb
fcom
jg
jg
jmp
jo
adc
stos
es
inc
std
xor
jnp
add
sub
jp
xchg
stos
or
stc
lods
pop
cmovp
pop
add
inc
and
mov
xchg
out
mov
nop
pop
pop
outsb
dec
into
test
pop
push
cmc
push
adc
arpl
and
jne
ret
outsb
cli
call
test
pushf
and
imul
or
sub
push
pop
ljmp
pop
mov
jl
loop
dec
daa
push
ljmp
std
pop
lds
cld
jnp
std
add
scas
test
enter
je
hlt
and
inc
int3
mov
out
aam
or
incb
mov
enter
test
push
out
push
cmp
xor
icebp
fidivl
or
pop
cmpsb
data16
cmp
sti
hlt
xor
jl
stos
pop
mov
cltd
sub
and
mov
sub
fimuls
dec
pop
into
mov
lea
pop
sahf
jp
lahf
into
add
adc
outsb
aas
rorl
add
adc
mov
mov
fisubrs
out
pusha
adc
add
pop
mov
bound
mov
loop
cli
cmp
dec
out
xor
or
mov
int3
stos
sub
mov
cmp
addr16
mov
not
push
in
cmp
sub
mov
je
stos
dec
int
push
fwait
xchg
mov
adc
imul
push
lret
insb
sbb
int
mov
pop
call
scas
pushf
rcrb
jbe
roll
cltd
hlt
xor
pop
push
clc
mov
add
mov
pop
add
add
xchg
cmp
test
and
test
bound
sbb
push
mov
jecxz
push
xlat
in
inc
sbb
enter
sub
loope
andb
adc
outsl
jg
cmp
pop
inc
xchg
notb
insl
cmc
cli
adc
mov
inc
add
inc
stos
add
xchg
push
repnz
jge
adc
cmc
inc
lock
pop
adc
sbb
je
out
aas
bound
pop
dec
dec
hlt
into
ja
popf
xchg
adc
sbb
or
sub
ds
push
mov
leave
popfw
adc
cld
bound
adc
pop
es
jnp
imulb
push
sbb
gs
push
in
cmpsb
push
lahf
test
jcxz
mov
sbb
scas
cwtl
loop
inc
sub
movsl
pop
insb
xor
jnp
inc
sbbb
call
sub
mov
addr16
shlb
fs
shrl
mov
mov
nop
xchg
and
sub
lret
loop
or
sub
adc
stos
pushl
jl
dec
push
sub
cmp
mov
pop
aad
in
movsbl
mov
insb
sti
sub
lret
das
cs
ljmp
insl
mov
xchg
cmp
repnz
outsl
pop
xchg
testl
inc
jae
xor
cs
bnd
xchg
jae
mov
popf
adc
dec
adc
cli
les
in
mov
or
and
pop
fidivs
mov
mov
pop
mov
call
add
mov
mov
jbe
out
xchg
icebp
inc
mov
jb
test
push
add
insl
xor
dec
mov
inc
xlat
dec
pop
cmp
push
xchg
in
rclb
pop
rcr
dec
leave
mov
iret
lret
cmp
test
jb
sarb
mov
mov
inc
les
insb
pop
ffreep
fld
sub
fstl
inc
pop
adc
sub
push
shrb
jmp
test
pop
lock
movsl
dec
jns
jg
or
ja
cmp
fisubrl
xchg
lock
cwtl
ret
lods
lahf
jo
es
jo
sub
lea
mov
daa
push
nop
xor
xor
and
ljmp
push
pop
adc
test
loope
add
or
adc
das
xlat
mov
out
dec
xchg
aam
movsl
or
jmp
dec
mov
sub
cmc
push
sub
cli
mov
test
cwtl
xlat
movsl
lea
inc
xor
lcall
out
push
add
pop
pop
aaa
xrelease
push
lahf
and
neg
adc
mov
xor
fbld
mov
jnp
outsl
xor
sub
sub
inc
jecxz
cmpsb
cli
loope
cmp
fdiv
xchg
inc
push
or
sbb
sub
xchg
pop
xorl
das
jnp
pop
ss
mov
rcr
in
cmp
adc
pop
add
adc
add
scas
movsl
mov
sub
movsl
insl
sbb
cmp
sub
adc
scas
cltd
jg
mov
mov
jg
repnz
mov
mov
push
mov
or
sarb
inc
fdivl
pop
jp
jno
lahf
dec
dec
inc
dec
push
or
test
lods
push
cmp
ss
out
push
sbb
mov
sub
jbe
idivl
shll
xchg
push
xchg
outsl
fimuls
shr
mov
adc
xchg
stc
jnp
and
daa
pushf
daa
sbb
loop
scas
sbb
testb
push
loopne
sub
aaa
stos
int3
mov
mov
sahf
arpl
dec
or
cwtl
lds
cmp
jae
cmpsb
sub
fdivrs
pop
jecxz
jnp
or
xchg
out
test
and
pushw
mov
fxch
sbb
lds
inc
xchg
mov
push
jbe
aam
mov
shll
jns
pop
gs
loop
cmpsl
out
fs
sub
xor
xchg
jmp
pop
and
sbb
fisubrs
out
pop
sbb
and
imul
data16
loope
ret
mov
mov
cli
jb
stc
cwtl
inc
divl
dec
push
fsubrp
sub
adc
clc
stc
sbb
popa
jbe
jb
add
mov
shr
addl
sub
pop
dec
sub
repz
xchg
out
xchg
sahf
xchg
mov
test
icebp
pop
rcrb
inc
mov
lock
mov
pusha
int3
jle
add
xchg
shll
loopne
inc
mov
inc
popf
fsubp
mov
jne
out
push
push
dec
fcmovbe
movsb
fdivr
push
fs
dec
rorb
mov
jl
mov
mov
mov
push
push
xchg
cmp
xor
jo
arpl
pop
sub
sbb
mov
mov
inc
mov
inc
popa
lret
push
xor
or
or
movsb
rclb
lret
pushf
in
pop
test
adc
fcom
incl
mov
lahf
fnsave
or
int3
hlt
movsl
cld
xchg
rcl
pop
inc
mov
mov
dec
xchg
xor
jge
mov
xor
jbe
cwtl
inc
hlt
fwait
hlt
lret
xchg
push
test
sti
cmp
mov
repz
mov
or
arpl
sbb
test
and
push
shrb
mov
mov
and
jmp
test
mov
mov
lock
outsl
push
xchg
ficomps
inc
cmp
and
cmp
fwait
xchg
in
mov
out
xor
ja
popf
and
rorl
pop
xchg
in
lcall
jnp
cld
cmp
push
mov
mov
dec
xchg
kmovb
out
xchg
scas
xor
stos
push
sbb
mov
pop
repz
adc
rcr
or
cmpsl
xor
cmc
subl
stos
js
inc
cmp
sbb
movsl
fisttpl
movsl
push
frstor
es
mov
dec
dec
push
jae
xor
or
mov
aas
in
mov
cmp
rolb
inc
hlt
or
or
repz
adc
scas
jl
mov
loopne
leave
xchg
cmp
xor
xor
push
or
cmp
xchg
sbb
scas
lret
dec
add
repz
sub
push
in
fmul
xchg
out
adcb
data16
cmpsb
aaa
xchg
fdiv
aaa
cmp
ds
xchg
mov
out
imul
mov
movsb
xor
mov
dec
insb
repz
inc
fucomp
cmp
test
dec
scas
or
lcall
inc
stos
mov
out
jne
ljmp
xchg
or
ja
vcvtsd2si
or
mov
or
mov
sbb
fldcw
sub
mov
jno
xchg
aad
in
pop
sbb
jg
shrl
call
in
and
adc
xor
bound
setne
mov
mov
and
lahf
jp
jmp
fdivrl
fsubl
xchg
mov
jmp
pop
mov
mov
sbb
les
add
jnp
out
add
add
fists
clc
sbb
data16
xchg
xchg
inc
ss
lea
mov
sub
pop
dec
mov
sub
pop
mov
xchg
xor
cmc
xlat
rcll
sbb
pop
js
aaa
jbe
cmpsl
mov
jb
push
xor
sub
jle
movsl
data16
cmp
and
pop
repz
lock
mov
or
xchg
sub
and
and
add
addb
adc
push
adc
loop,pn
clc
mov
push
cmp
roll
out
cmpsb
fwait
cli
mov
call
data16
adc
adc
pop
push
loop
xor
ret
cmp
rorb
mov
cld
mov
and
mov
aaa
pop
mov
pushf
sub
jne
outsl
rcll
es
imul
xor
in
jp
sti
cmp
sbb
aas
repnz
lret
add
or
cltd
jmp
stos
push
cmp
mov
push
mov
aaa
xor
jl
daa
call
dec
lea
jbe
mov
fldcw
and
or
stc
icebp
imul
adc
pop
cli
add
outsl
jns
dec
shl
jg
xor
sub
insb
mov
call
mov
mov
pop
cmp
mov
jmp
adc
cmp
gs
aaa
push
jbe
adc
push
push
clc
adcb
pop
ret
adc
in
xchg
jb
movsb
add
test
mov
mov
inc
rorb
jbe
pop
mov
rcrb
adc
emms
fcmovu
and
aam
inc
jne
mov
sbb
rcll
rorb
xor
mov
push
movsl
lcall
push
in
fdiv
addr16
pop
cmp
sub
in
dec
jmp
pusha
leave
sub
pop
xor
cld
loope
lret
loop
xchg
lods
inc
adcb
iret
jbe
aas
sbb
lods
push
push
imul
dec
cmp
adc
mov
add
dec
cmp
dec
or
cmp
jb
mov
test
lret
or
sub
mov
nop
ret
cmpsl
inc
xor
sbb
cmc
pop
push
push
out
xor
mov
movsb
lock
mov
xchg
lea
lods
push
ret
adc
jne
dec
movsl
out
inc
dec
fwait
adc
add
push
adcb
ja
je
shrl
sbb
xchg
test
out
fwait
stos
pop
xchg
out
fcmove
sub
ja
mov
sbb
lahf
pop
xchg
pop
push
mov
cmp
js
or
lret
jo
test
ret
add
aas
stos
addl
outsl
push
push
add
test
push
pop
mov
stos
rdpmc
jb
mov
idivl
dec
jno
das
clc
ja
xor
stc
mov
jne
xchg
aaa
addr16
dec
ja
inc
dec
gs
inc
push
lcall
dec
adc
mov
pop
stos
subb
mov
push
shlb
fwait
pop
sbb
and
xchg
addb
icebp
and
pop
jge
push
mov
mov
ss
push
sbb
mov
test
das
sub
or
lcall
mov
and
adc
cmpsb
push
pop
cmpl
mov
movsb
movsb
cwtl
adc
adc
xor
jb
popf
or
cmp
scas
adc
sbb
jl
inc
in
xchg
and
cmc
pop
adc
js
pop
dec
lods
xor
or
cmp
outsl
push
mov
lds
in
ljmp
xchg
fcmovne
inc
fstl
sbb
insb
push
div
inc
mov
jle
call
sti
and
stc
pop
and
add
sub
cmp
push
in
dec
sbb
cmpsb
scas
mov
shll
cli
nop
scas
aas
lcall
jae
push
daa
fucom
out
jg
inc
sub
add
hlt
fwait
mov
pop
lea
leave
pop
pop
outsl
jae
cwtl
jle
cmc
dec
js
sbbl
add
push
xlat
xchg
mov
loope
pop
and
mov
or
mov
adcl
and
cmp
inc
sub
movsb
shll
sbb
lds
mov
dec
aaa
ss
inc
rorl
aas
or
push
sbb
dec
mov
not
pushf
jns
inc
xor
pop
adc
mov
jg
xorl
leave
jns
jge
jb
pop
iret
shrb
or
movq
fisttpl
fnsave
repz
and
je
push
and
incb
mov
xchg
lcall
gs
fnsetpm(287
adc
xchg
imul
cmp
les
cmpsb
mov
push
cli
mov
cli
lods
add
sbb
mov
scas
push
out
jle
js
outsl
jo
inc
cmp
inc
jb
test
cwtl
ljmp
lret
and
pop
shlb
xor
inc
jnp
pushf
or
fbstp
cwtl
add
cmp
pushf
mov
sbb
call
out
sub
inc
cmc
pop
xchg
ds
mov
adc
adc
inc
pop
xor
push
lahf
loopne
push
xor
adc
cmpsl
inc
ja
jno
jbe
arpl
movsb
insb
mov
sub
push
in
pop
add
sbb
jmp
stos
pop
outsb
pop
mov
mov
lahf
mov
pop
inc
or
data16
ds
mov
mov
sbb
push
ljmp
add
cmp
add
loope
sub
sbb
mov
dec
or
inc
mov
fcompl
sbb
pop
stos
stos
clc
adc
dec
lds
xchg
cld
mov
add
pop
adc
mov
dec
cmp
xchg
sbb
lret
pop
xlat
xor
sub
test
mov
sbb
pop
aas
imul
test
xchg
cltd
scas
mov
call
into
js
int3
mov
push
fsts
les
loop
sub
clc
pusha
cltd
ds
adc
cli
aas
cmpsl
test
cwtl
push
cli
ficoml
mov
sahf
xor
repnz
into
push
mov
insl
mov
adc
imul
xchg
mov
sahf
loopne
jne
loopne
nop
fucomip
adc
xchg
mov
ret
sahf
mov
pop
imul
shl
fsts
and
and
fwait
icebp
mov
mov
and
or
or
pop
push
mov
mov
jne
imul
or
mov
cmp
out
pop
mov
adc
jno
sub
mov
loop
jb
daa
test
xor
jo
and
in
add
ret
push
adc
mov
mov
dec
mov
sbb
push
mov
pop
cmpsb
arpl
leave
and
std
cltd
test
stos
fsubrp
je
bound
jae
and
mov
out
test
scas
inc
lret
mov
mov
fstps
aaa
aam
out
push
xlat
les
stos
xlat
lods
jl
push
call
shll
enter
add
aas
xorl
je
ret
ja
mov
shll
sbb
pop
xor
hlt
data16
cmp
sub
fstl
dec
xchg
fwait
std
int3
mov
repz
mov
pusha
lods
inc
cmp
mov
xchg
in
xchg
dec
xorps
sub
push
push
mov
dec
addr16
jno
loop
and
dec
push
pop
stos
xchg
add
dec
push
xchg
loope
in
adc
add
test
movsl
mov
mov
imul
pop
and
mov
loop
mov
push
xor
dec
je
xor
push
lods
mov
hlt
mov
xor
xchg
mov
inc
dec
xlat
adc
adc
xor
inc
arpl
push
cmpsl
cmc
and
push
xchg
jmp
in
sarl
jae
nop
push
and
sbb
gs
jg
pop
jg
xchg
shrb
xchg
fildll
xchg
nop
loope
cltd
mov
mov
jle
xchg
mov
sbb
adc
jge
add
xorb
jb
push
xor
dec
inc
dec
fildll
adc
jge
push
es
test
cli
xor
notl
xchg
adc
sbb
movsb
pushf
popa
mov
mov
fwait
xorb
roll
leave
fwait
push
outsl
mov
pop
ljmp
push
mov
and
loope
das
insb
enter
lock
std
sub
cmp
sub
shlb
data16
inc
notl
movsl
add
mov
pop
test
fnsave
outsl
daa
outsb
push
push
adc
mov
dec
icebp
push
inc
jg
inc
pop
xlat
lods
stc
push
lds
jmp
and
cmp
in
and
lret
out
cltd
aaa
pop
fildll
fcomip
inc
cwtl
mov
ljmp
stc
lret
loop
sub
sahf
adc
xchg
stc
test
sahf
xor
popa
pop
adc
mov
push
scas
aam
mov
lahf
rorl
push
and
aaa
xchg
icebp
xor
stc
test
sbb
lret
das
push
ss
ret
sbb
fisubrl
add
flds
and
or
pop
xchg
gs
sub
ds
loopne
in
imulb
incb
mov
out
push
ja
sbb
mov
ss
sub
nop
jg
aam
or
sub
in
rcrl
leave
jne
out
ss
push
shlb
xor
mov
jp
inc
cmpsb
push
out
out
sbb
mul
mov
push
ret
jae
out
stos
mov
dec
cs
pop
jl
data16
popl
mov
jo
pop
mov
xchg
xor
lock
or
std
pop
and
lret
cmp
pop
sbbb
add
pop
sahf
xchg
mov
addr16
add
mov
push
outsl
inc
mov
push
xchg
sub
xor
lods
lods
jmp
mov
push
fnsave
gs
push
scas
xor
int
mov
dec
xchg
test
jne
jmp
fbld
lds
ror
inc
add
fnsave
scas
repnz
test
faddl
call
lods
or
outsl
jnp
cmp
jnp
negl
mov
rcrb
incl
push
iret
mov
aad
test
pop
mov
add
push
mov
sub
xor
sbb
xchg
inc
leave
ja
pop
mov
fsubp
adc
inc
mov
test
inc
mov
mov
push
inc
iret
fnstcw
adcl
xchg
out
das
mov
fisttpll
scas
cmc
clc
xchg
cwtl
fs
lods
ljmp
out
sub
push
lock
repz
fstpt
dec
push
outsl
js
outsl
fidivl
mov
mov
inc
xlat
and
xchg
adc
cmp
mov
inc
adc
in
lds
sbb
test
cltd
and
sub
nop
jp
cs
dec
pop
mov
mov
mov
lcall
dec
dec
addr16
jl
sub
inc
sbb
cmp
cmp
cmpsb
mov
mov
in
inc
xchg
and
nop
cltd
sub
les
scas
add
push
jo
test
and
jns
movsb
fsubrp
dec
ror
imulb
mov
jno
loopne
cmc
test
inc
aaa
sub
lret
add
pop
pop
shl
cmpl
push
insl
repz
push
mov
scas
rcrl
sub
cmpsb
sub
jmp
jno
in
data16
xchg
outsl
push
into
outsl
enter
cmp
jo
or
and
loope
xorb
ret
cltd
mov
insl
or
pop
fnsave
and
adc
enter
dec
fcmovb
mov
mov
mov
add
jno
xchg
mov
pop
dec
shl
xchg
and
test
imul
je
imul
ljmp
das
popf
stos
test
das
sbb
jmp
add
xor
test
dec
shr
push
lcall
cmp
push
icebp
sbb
push
adc
add
push
mov
add
pop
fwait
mov
test
xor
mov
xchg
lea
sub
scas
xor
push
clc
dec
lds
mov
inc
insl
stc
or
push
mov
test
inc
js
lock
mov
xor
cltd
xor
aaa
mov
data16
out
rorl
and
dec
repz
jl
jg
movsl
andb
out
jno
testb
pop
mov
inc
imul
mov
imul
adc
push
xor
adc
loopne
mov
pop
pop
in
in
sub
pop
bound
xchg
mov
mov
lods
push
push
orb
pop
jle
push
xchg
sarl
xor
cld
mov
loope
xor
leave
inc
jg
mov
push
xor
imul
loope
xor
ss
iret
pop
mov
es
enter
sub
xchg
mov
inc
loop
insl
mov
mov
xlat
mov
sub
lea
pop
test
pushf
pusha
mov
addb
stc
outsl
clc
jb
cmp
fsub
sub
push
add
xor
xchg
push
mov
std
jo
in
adc
fs
jmp
sub
pop
push
mov
fists
xor
add
shl
lcall
js
sbb
mov
les
push
sub
adc
negl
pop
pushf
aaa
ret
add
cmp
lret
and
push
mov
shlb
push
sbb
ss
and
add
mov
push
mov
ljmp
std
pop
add
fwait
pop
ror
cmp
outsb
fcmovnbe
popf
adc
loope
jo
stos
jno
sahf
insb
mov
ret
adc
movsb
mov
dec
xlat
lods
jp
je
push
and
xchg
lds
js
push
pop
or
jb
clc
pop
add
mov
mov
push
jp
je
outsl
inc
cmp
pop
lahf
add
lret
enter
xchg
pop
js
divl
cs
pop
aad
aad
add
pop
or
adc
dec
sarb
add
cwtl
pop
sbb
imul
mov
jmp
scas
jo
call
test
or
jmp
sbb
push
sub
mulb
cmp
dec
sub
push
pop
ljmp
rcr
call
lret
cwtl
add
inc
in
in
mov
mov
mov
sbb
rclb
pop
xchg
nop
xchg
mov
adc
stos
into
imul
xchg
xchg
insl
aaa
ret
push
push
imul
adc
lds
aas
cmp
xor
dec
jnp
pop
or
mov
mov
and
cmpsb
outsb
add
pop
and
popf
int3
scas
jge
jp
xor
lods
jno
dec
ficomps
and
out
sbbl
mov
push
out
pop
mov
adc
sbb
cltd
es
aaa
mov
adcl
loope
cwtl
xchg
sbb
xor
cmpsb
dec
add
rcrl
test
sbb
jb
push
jns
movsb
cmc
sub
or
sbb
lcall
push
or
cltd
mov
xchg
dec
sbb
mov
out
hlt
xor
push
push
sub
inc
mov
shlb
popa
lret
xchg
mov
ret
hlt
mov
je
orb
xor
mulb
pusha
inc
dec
push
mov
inc
roll
dec
in
js
adc
outsl
pop
enter
outsl
stos
mov
subb
xor
push
popa
jo
out
mov
jns
clc
leave
mov
push
lods
loop
aad
test
fstl
push
inc
sbb
dec
cli
outsl
mov
pop
add
out
add
sub
jge
scas
mov
push
sub
mov
or
paddb
pop
inc
in
js
mov
addb
xchg
cmpsb
push
lret
cmp
mov
insb
push
mov
xchg
sub
xchg
push
add
lret
adc
xchg
push
and
jg
sub
adc
mov
repz
xchg
repz
mov
add
std
jns
dec
pop
and
mov
cmpl
lea
push
add
mov
mov
scas
dec
and
arpl
mov
rdtsc
adc
add
sbb
and
xchg
add
stos
inc
dec
cmp
ret
xor
and
nop
insb
mov
and
xchg
leave
ret
das
orb
push
outsb
lret
pop
mov
inc
dec
je
add
cmp
push
sbb
sub
popf
int3
add
inc
xchg
pop
fisttpll
mov
lds
out
pop
repz
insb
or
add
loopne
je
xchg
in
pop
dec
push
dec
cmp
dec
jo
xchg
mov
icebp
loop
stos
into
dec
je
sbb
popf
ljmp
xor
mov
xchg
hlt
lds
push
or
cmc
push
add
mov
xchg
mov
pushf
rcll
sbb
enter
rclb
xor
jge
mov
push
pop
mov
push
xor
xchg
test
sbb
iret
sbb
inc
cmp
push
adc
int3
rcll
repnz
xor
lds
fistps
stc
out
xchg
and
lret
notb
sti
sub
cmp
movb
dec
out
push
loop
test
and
in
xor
fcmovbe
in
jg
outsb
int
sti
inc
sbbl
dec
movsb
int3
dec
adc
sahf
dec
fbld
lods
or
movsb
fists
push
and
iret
xchg
adc
imul
xchg
mov
stos
jg
rcrb
insl
fwait
popf
xchg
nop
sbb
js
cmpl
mov
cs
sub
cs
lahf
js
pop
fildl
xor
push
ljmp
jmp
adc
pushf
sahf
lret
subb
into
cmp
incb
xchg
push
rorl
in
jg
cld
jle
stos
pop
xor
lea
mov
decl
and
sti
xchg
test
push
inc
fisttpl
out
xchg
pop
or
push
nop
mov
jge
mov
adc
mov
arpl
mov
aaa
jno
int3
dec
cmp
jle
in
bound
fs
out
or
int3
stos
sbb
cmp
lret
dec
out
pop
mov
je
sub
adc
addr16
maxps
lock
fwait
movsb
xlat
xorl
jmp
test
test
fdivl
cmc
add
dec
push
std
jno
pop
jbe
imul
xor
mov
jp
push
popf
fidivrs
push
add
cwtl
lods
loopne
xchg
icebp
mov
mov
mov
or
sub
imul
into
mov
roll
mov
xchg
daa
insl
or
insl
or
fwait
lds
mov
scas
sbb
cs
in
dec
and
xchg
repnz
insl
pop
stos
scas
dec
nop
ret
gs
bound
fcmovu
pop
scas
xchg
shr
sub
andl
popf
movsl
push
cmpsl
fbstp
out
mov
cmp
aaa
or
fidivrl
inc
mov
fsubl
jne
loop
mov
lods
pop
popa
sub
sub
push
add
movsb
rcrb
cwtl
test
fwait
inc
or
jle
push
mov
xor
jp
enter
dec
mov
adc
push
aam
mov
jge
jns
xor
fmull
ret
sub
dec
sub
dec
les
iret
xor
call
gs
dec
sbb
or
mov
sti
out
lds
inc
jecxz
jb
xchg
xor
fistps
pop
or
adc
xchg
dec
cld
cmp
mov
stos
add
movsl
mov
inc
adc
inc
push
xchg
js
adcl
xchg
out
dec
dec
shrw
inc
cli
or
dec
mov
stc
aad
mov
imul
xchg
pop
inc
cmpsb
lret
cltd
or
data16
xchg
pop
sub
sahf
cli
imul
pushf
jnp
out
in
sub
roll
and
jle
sbb
and
enter
cmp
sbb
insb
pop
dec
sub
mov
out
bound
push
aad
out
add
and
loopne
fildl
push
mov
scas
sarl
mov
loope
xchg
lods
mov
gs
fistpl
nop
lcall
fidivrl
add
in
repnz
fisttpl
dec
adc
lock
xchg
cmp
sbb
int
jb
enter
movsl
sub
sub
mov
push
ljmp
add
pop
es
cmc
sub
and
lods
sub
add
dec
cltd
movsl
cwtl
sub
ja
and
mov
icebp
test
insb
adc
orb
cmp
or
add
fimull
lahf
insb
andl
jmp
or
stc
rcrb
mov
fdivrs
popl
xor
fildll
lret
fsubrl
cmp
push
mov
dec
into
cli
adc
iret
dec
in
xchg
testb
int
adc
mov
xchg
icebp
test
stos
stos
lret
pop
js
mov
loop
fsubs
jmp
shrb
test
aas
es
and
cmp
jbe
les
scas
mov
adc
add
add
jecxz
cltd
inc
add
inc
arpl
ja
flds
jns
insl
stos
shll
mov
rcrb
hlt
clc
pop
into
mov
lock
in
addl
pushf
mov
mov
in
loope
jnp
xchg
or
es
call
int
stos
fisubl
mov
add
mov
jecxz
ficoml
jl
rorl
sbb
out
pop
lcall
loope
stos
xor
lret
jmp
test
mov
xor
popa
sbb
mov
out
cmp
pop
outsb
insl
adc
mov
loop
jo
pop
jno
stos
scas
push
jb
mov
pop
add
test
mov
adc
push
pushl
adc
jmp
leave
fisubrs
pop
loop
dec
mov
test
fsubrs
dec
arpl
dec
xor
dec
repz
sbb
in
sub
add
popa
adc
sti
out
gs
cs
pop
fs
mul
call
jo,pn
and
sub
mov
mov
mov
leave
outsl
shrl
adc
add
push
test
std
push
lods
outsl
insl
hlt
cmc
push
add
inc
in
sub
dec
lods
mov
inc
pop
test
add
out
movsb
or
in
shrl
push
bound
aad
cltd
mov
jle
mov
xorb
call
xor
cmpsl
repz
push
sub
or
lods
mov
loope
adc
sbb
int
mov
add
jl
xchg
enter
mov
test
sub
es
dec
dec
shll
push
and
repz
mov
xor
adc
inc
or
rcrb
mov
pop
pop
pop
aam
es
pop
adc
jae
sbb
jge
test
fcompl
lahf
push
out
sub
push
scas
aam
divb
jmp
rcrb
cwtl
pusha
gs
outsl
fs
sbb
repnz
push
cmp
dec
loope
lret
cmp
sbb
mov
xor
pop
mov
aas
mov
pop
int
pop
push
jne
int3
pop
mov
mov
pop
jp
inc
push
fstps
push
mov
mov
lea
jb
xor
jae
daa
and
xor
xor
push
push
sbb
pushf
lods
adc
cmp
nop
cwtl
in
mov
adc
dec
jl
out
ret
inc
ss
ss
mov
test
out
test
sbb
mov
or
pop
idivb
fidivrs
mov
in
loop
pop
adc
in
inc
repz
cltd
adc
inc
jnp
add
xor
and
cmp
mov
dec
cmp
stc
stc
lea
and
sbb
rorb
popa
out
inc
dec
lret
data16
iret
inc
repnz
adc
lahf
cmpsb
xchg
push
xor
xor
push
leave
mov
sbb
push
sbb
inc
rcll
call
fisttpl
add
or
xchg
out
and
shld
jp
iret
lret
cli
ret
push
cmp
test
arpl
dec
mov
incb
iret
mov
es
in
and
jg
mov
mov
fldl2t
sub
cmc
arpl
lods
bswap
shl
sahf
mov
inc
dec
and
mov
mov
bound
fimull
ss
xchg
and
jmp
dec
or
mov
mov
mov
push
xchg
shll
aad
sub
push
sahf
aad
inc
push
mov
mov
cmp
xchg
outsb
shrb
movsb
xor
stos
ss
xor
fists
mov
jae
imul
xor
cwtl
js
mov
pop
cmp
jae
aam
xchg
icebp
mov
insl
ljmp
movsb
aaa
fld
xchg
jge
js
cli
add
jecxz
cmpsl
pusha
ror
adc
push
ret
mov
mov
inc
dec
test
frstor
cmpl
or
mov
repz
jl
push
enter
or
out
imul
rcrb
xchg
pop
shl
mov
xchg
mov
shll
cmp
lea
ss
mov
dec
in
cs
in
out
mov
adc
lock
stos
das
out
das
pushf
out
add
and
mov
int
mov
ss
pop
mov
dec
fldcw
jns
mov
or
leave
mov
icebp
cli
call
push
test
pop
sbb
out
in
push
cld
mov
lock
or
add
sbb
push
pop
adc
mov
mov
lahf
sub
notl
pop
lods
pop
scas
bound
bound
sbb
mov
pop
insl
xor
aad
pushf
adc
sub
mov
roll
mov
xchg
or
orb
push
out
lods
movzbl
xchg
push
into
adc
test
loope
lock
dec
dec
add
pushf
push
movsl
js
xor
xor
es
pop
ficoms
pop
mov
push
cmp
push
sub
das
push
leave
test
xchg
pop
mov
pop
cld
les
test
inc
mov
sbb
movsl
mov
insl
cmp
arpl
jg
fldt
arpl
xchg
inc
idivb
mov
add
mov
push
adc
clc
inc
jg
and
and
inc
rclb
aad
jbe
jnp
test
pop
mov
push
lcall
cmc
cltd
sarl
andb
adc
sub
or
add
mov
je
subb
or
jnp
test
rclb
and
mov
push
lret
mov
movsb
in
dec
add
aaa
enter
jge
cmp
add
push
js
mov
xchg
lahf
push
pop
push
lock
push
test
leave
and
enter
mov
mov
ja
and
xchg
add
fimuls
mov
out
jo
push
add
jae
jp
ret
in
sbb
adc
rol
mov
mov
xor
ss
jle
das
ds
sub
push
add
cli
out
into
scas
rcrl
pop
mov
movsb
sbb
pop
adc
and
stos
jnp
mov
fimuls
in
pop
jmp
hlt
out
test
and
xor
cmp
in
in
aad
fnsave
cmp
push
and
cmpsb
ja
adc
ror
mov
dec
arpl
inc
dec
loope
test
jle
sub
xchg
cmp
pop
add
mov
sbb
add
cmc
and
jle
jle
dec
aad
sbb
jb
sub
sub
fists
enter
addr16
adc
mov
adc
or
jno
xchg
mov
lahf
incl
cmp
add
and
adc
rcl
or
in
subb
popf
pushf
cmp
stos
dec
ja
inc
cltd
or
mov
inc
cmc
adc
loope
xlat
push
into
shl
xchg
ret
mov
subl
dec
or
out
ret
hlt
sti
out
jle
dec
inc
xchg
dec
pusha
hlt
xchg
inc
add
fdivrp
push
push
popa
xchg
or
outsb
stos
fsubrs
xor
add
mov
shrl
push
push
test
dec
adc
cmp
pop
data16
fildl
dec
cmpb
out
jne
out
sub
push
lea
mov
fmul
and
fwait
push
or
sub
aas
sbb
inc
repnz
sub
fstpt
add
pop
or
repnz
push
push
dec
icebp
pop
sub
cmp
pop
nop
addl
mov
and
mov
jae
xchg
ss
rcl
data16
cli
stos
jp
hlt
xchg
js
sbb
scas
gs
in
lcall
lret
ret
ret
cs
rol
sbb
test
in
gs
cmpsl
mov
pop
mov
in
xchg
ret
hlt
xchg
movsb
in
insb
add
adc
dec
pop
dec
test
sbb
mov
js
rclb
sub
pop
out
and
mov
pop
out
xchg
sub
call
loop
subb
nop
jne
bound
cmpl
jbe
push
mov
idivl
sbb
imul
rcll
in
aad
nop
cmp
xchg
lea
mov
mov
xor
pushf
cmpsb
scas
testb
push
ds
fdivrs
sub
mov
cmpsl
fmulp
int3
lods
js
inc
dec
xchg
out
sbb
jno
mov
sarl
pusha
scas
inc
pushf
ret
sub
mov
push
pushf
mov
xor
lock
jo
fsts
and
outsb
test
jae
pop
cmp
jp
je
adc
pop
xor
push
push
sbb
or
rorb
fisubs
pop
cmp
mov
push
test
movsl
adc
cmp
and
xchg
sahf
sbb
imul
mov
mov
adc
icebp
out
or
je
sub
mov
xchg
jnp
pop
add
jno
adc
or
imul
fxch
dec
push
lds
shr
popa
insb
cld
xor
fisttpll
push
cmp
and
inc
flds
sbb
dec
popa
push
push
ss
mov
mov
sub
ror
and
out
fnop
je
pop
jno
jmp
mov
mov
idivb
xchg
orl
or
lar
ret
xchg
data16
mov
scas
mov
cmp
testb
insb
push
xchg
jecxz
adc
xchg
test
insl
push
xchg
mov
mov
xchg
jb
jge
adc
int
inc
push
int3
fnstsw
stos
mov
pop
dec
inc
sti
fwait
inc
inc
xorb
sar
dec
lock
daa
icebp
std
sbb
cmp
push
les
push
mov
inc
neg
adc
jo
inc
and
sahf
adc
sbb
cmp
adc
nop
mov
insl
int
cmpsb
jge
arpl
nop
testl
pop
scas
sbb
notb
push
or
xchg
sbb
pushf
out
jo
call
lcall
scas
fstps
idiv
les
pop
outsl
fimuls
inc
inc
fidivrl
lahf
es
jo
pop
lods
xlat
push
mov
cli
enter
and
in
and
jmp
cmp
mov
cltd
daa
scas
shlb
sbb
push
or
emms
ja
lret
insl
bound
sub
pop
fistpll
push
mov
add
sbb
mov
ja
mov
outsl
test
in
movsb
mov
inc
insb
xchg
cmp
push
or
pop
loopne
sub
push
enter
clc
jne
rcrb
faddl
adc
fmull
adc
pop
sahf
fnsave
stc
xor
xor
outsb
xchg
jmp
loopne
xchg
stc
hlt
mov
adc
popa
push
popa
pop
jae
iret
les
xchg
sahf
iret
repnz
mov
sbb
hlt
inc
dec
xlat
push
test
mov
dec
add
xlat
test
pushf
xor
jmp
stc
xor
repnz
cld
in
lods
pop
cmp
leave
push
inc
mov
sub
and
adc
test
xchg
cltd
aas
test
pop
cmp
xorb
cmpsb
mov
xchg
lret
pusha
fidivs
loopne
sub
mov
cmpl
sub
pop
jmp
dec
iret
adc
jns
fucomp
fidivrl
std
or
xchg
inc
outsb
int3
fsts
push
push
repz
add
xchg
ds
repnz
adc
jae
sub
das
scas
sub
xchg
test
push
cmp
clc
outsl
push
mov
pop
cmpsl
jb
dec
in
xchg
hlt
insb
xchg
mov
pop
mov
mov
adc
jle
or
xor
and
cli
out
fisttpll
aam
mov
mov
cmp
xchg
mov
cmp
fwait
test
sarl
imull
push
fimuls
dec
mov
mov
xor
mov
jle
jns
jno
fildl
repnz
aam
xchg
inc
cmp
jmp
and
int
sub
rol
jl
in
jo
add
ret
bnd
test
cmp
inc
push
adc
ss
lcall
test
ds
mov
xor
shll
rorb
addr16
pop
mov
negl
jp
fwait
push
les
das
es
and
jae
lret
movsl
push
cmpsb
push
mov
lods
bound
rcl
adc
mov
repz
movl
jb
fmuls
cmp
mov
fyl2xp1
shlb
inc
push
add
or
inc
jae
mov
fiaddl
inc
cltd
mov
pop
out
pop
add
xchg
repz
stc
mov
vaddsubps
aam
and
fdiv
xchg
jmp
mov
aam
fstp
and
mov
lcall
add
insb
and
sub
cmp
cmp
jne
sti
movsl
daa
mov
xor
dec
lods
dec
mov
test
rol
std
add
cmp
xchg
pop
inc
xchg
mov
cmp
aas
adc
cmp
pop
das
adc
mov
inc
in
stos
mov
in
adc
cltd
inc
pop
negb
push
cmp
mov
cmp
mov
lods
ds
add
out
inc
jbe
pusha
jb
dec
arpl
ret
xchg
ds
mov
ret
xor
scas
push
xor
sbb
imul
and
jb
in
mov
fbld
sahf
scas
xchg
sub
xor
dec
mov
jae,pt
into
mov
xlat
xor
dec
stos
ret
movsb
mov
aas
jl
inc
hlt
mov
insb
sahf
cmpsl
sbbb
mov
inc
sahf
pop
mov
xchg
cltd
roll
dec
orl
cmp
pop
ss
mov
roll
jg
ret
sbb
out
rcl
jg
ss
pop
add
xchg
add
cmp
jno
xor
mov
inc
mov
scas
mov
test
xor
lret
pop
out
js
sahf
shrl
mov
or
xor
js
xlat
aas
inc
movsb
add
or
rcrb
cmc
push
cli
pusha
push
xor
mov
or
ret
add
jns
mov
add
cwtl
gs
mov
inc
rorb
sub
cmpsl
add
test
pop
mov
fwait
dec
cwtl
mov
stos
addr16
inc
mov
and
or
insb
loopne
mov
js
notl
shlb
push
ss
dec
fisttpl
xor
xor
dec
stos
sub
scas
cmp
cmp
call
add
pusha
adc
fistps
clc
out
xlat
hlt
push
bound
arpl
mov
sbb
push
dec
and
imul
call
mov
cmc
jno
stos
mov
mov
sub
jns
or
lret
adc
mov
ret
cmp
sahf
stc
sbb
lods
push
loop
nop
cmp
imul
rolb
mov
push
sbb
lretw
jle
scas
repnz
loopne
cmp
dec
lea
int3
and
add
mull
add
or
inc
jne
cmp
jg
stos
in
xchg
push
pop
lods
leave
lahf
add
cmpsb
daa
loope
stos
jp
dec
push
fwait
cmp
sub
ja
dec
clc
inc
xorb
imul
push
frstor
js
popw
mov
mov
or
jle
xchg
jno
push
add
into
xchg
or
mov
sub
stos
rolb
cmp
shlb
pop
cmpsl
mov
dec
test
test
sub
call
push
sarl
sbb
mov
pop
jmp
mov
das
in
sbb
mov
inc
jge
lret
mov
scas
dec
icebp
mov
cld
xchg
ret
mov
mov
cli
in
es
movsb
cltd
cmp
and
mov
subb
insb
je
fisubl
dec
lods
sub
imul
fisubl
mov
std
ret
inc
insl
xchg
push
movsl
push
cmp
js
mov
mov
mov
sahf
xor
jns,pt
js
or
sahf
addl
jl
xchg
loopne
cmp
or
testl
mov
fists
fisttpl
icebp
mov
xchg
mov
sbb
jo
std
scas
xor
push
cmc
inc
fwait
rcl
repz
push
cld
mov
and
cmp
push
fwait
dec
cmpsl
out
sub
mov
fwait
mov
xchg
pop
gs
lret
xchg
xor
stos
cs
lret
cmp
and
nop
or
lcall
xchg
movsb
adc
sub
cwtl
xadd
push
sahf
push
popf
jb
pandn
hlt
dec
mov
ss
sbb
test
imul
dec
pop
dec
mov
sbb
mov
add
push
daa
ljmp
xchg
push
push
push
test
popa
and
push
repz
aaa
mov
jp
or
adc
sbb
scas
add
sub
adc
inc
xchg
adc
jo
repz
adc
mov
sbb
ljmp
xlat
daa
scas
ja
inc
jge
pop
dec
sbb
push
xchg
jg
mov
adc
mov
inc
cld
jbe
hlt
in
mov
jmp
push
mov
adc
test
xchg
and
mov
cmp
mov
inc
mov
vandps
adc
stos
enter
jae
mov
xchg
push
xchg
mov
jae
cmpsb
das
cmp
pop
pop
dec
aas
pop
and
fmulp
lahf
or
or
les
subl
ret
push
mov
orb
ret
push
fs
push
outsb
cmc
push
sti
data16
mov
mov
rcll
je
decl
jo
lods
mov
in
andl
subl
fwait
addr16
cmp
pop
inc
dec
scas
dec
inc
insb
shl
es
fists
push
and
mov
push
fstps
stos
xchg
mov
push
adc
jl
cwtl
mov
ret
fistpll
leave
je
enter
sbb
in
ljmp
in
sbb
jns
in
pusha
addb
pop
stc
inc
push
popf
push
test
enter
xor
or
mov
lods
xchg
stos
aam
or
fcomip
in
adc
fwait
cmpsb
fabs
int3
cmpsl
add
pop
cmp
push
jno
arpl
adc
punpckldq
cli
iret
scas
xlat
imul
pop
leave
popf
mov
mov
adc
pop
cmp
stc
adc
lods
mov
push
xchg
sarl
cmpsb
std
mov
add
popl
pop
popl
daa
pop
xorl
out
mov
les
and
jbe
sbb
movnti
cmpsb
js
mov
daa
pop
ret
xchg
clc
or
loopne
push
aaa
shlb
lds
data16
or
mov
sub
mov
cwtl
popa
mov
pop
movsb
pushf
pop
jno
mov
invd
aam
xchg
mov
in
test
stos
dec
iret
sub
es
icebp
xor
cli
mov
xchg
rorl
push
cld
mov
jno
aad
insl
inc
mov
test
mov
xor
lds
out
xor
add
mov
imul
sub
shrl
cmp
push
ljmp
lcall
inc
or
repnz
and
cmp
cmp
jl
jg
test
pusha
cli
jo
arpl
dec
addr16
sarb
aam
xor
jo
xlat
fidivl
xchg
add
std
xchg
mov
inc
cmpsl
mov
shll
adc
mov
fstpl
cmp
or
push
jnp
pushf
push
or
xor
cmp
push
push
mov
or
rcll
sub
loope
aad
sti
test
adc
mov
pop
rcrl
dec
xlat
pop
pop
test
mov
sahf
inc
cmp
movswl
movl
insl
dec
ret
cmp
or
rclb
cmp
pushf
mov
mov
mov
inc
cmp
mov
and
push
push
dec
xchg
cld
sahf
sub
push
test
pop
mov
lret
aas
or
ljmp
in
or
cltd
xchg
ja
shr
pop
jno
or
lahf
ljmp
add
adc
into
dec
lahf
aam
mov
push
jle,pn
jb
sub
jb
add
mov
mov
mov
or
push
sti
nop
xor
mov
rclb
fstps
loope
mov
sbb
mov
loope
push
outsl
pop
leave
cltd
mov
push
mov
gs
cmpsl
neg
addr16
push
fsubr
icebp
adc
jle
mov
cmp
pop
xchg
xchg
mov
inc
hlt
inc
lock
inc
pop
jg
leave
xchg
das
xor
repnz
sub
loop
mov
dec
cltd
pop
lds
xchg
or
aaa
mov
iret
sbb
adc
xchg
sbbb
mov
into
add
fisttpl
gs
cmpxchg
inc
cmp
or
sbb
mov
jnp
cmp
xor
cmc
test
icebp
mov
icebp
pop
mov
mov
outsb
aas
roll
pushf
and
fs
in
aad
xchg
cmp
inc
mov
jae
shll
inc
test
jp
test
and
inc
mov
pop
push
ljmp
adc
sub
cwtl
mov
sti
scas
push
fldl
pop
test
call
xor
lret
ja
jg
push
sbb
adc
xor
int
ds
negl
jns
mov
push
push
mov
das
insb
adc
cmp
inc
cmp
decb
sbb
cmp
adc
test
fisttpll
xchg
test
ds
sub
push
mov
hlt
dec
js
shrb
pop
mov
jo
mov
mov
ds
jg
xchg
fldenv
push
xor
mov
std
sti
imul
jl
dec
rclb
pop
jmp
cmpsl
inc
inc
adc
sub
push
cmp
and
jg
mov
mov
cmp
imul
sbb
dec
dec
xlat
in
fists
out
lods
pushf
inc
mov
push
jo
adc
lahf
dec
xchg
frstor
dec
lds
mov
stc
pusha
push
inc
icebp
push
adc
call
lret
lods
cltd
inc
sub
inc
adc
inc
sbb
rorl
or
out
stc
inc
mov
ret
or
sti
icebp
lret
add
test
out
push
mov
jb
dec
insl
pop
pop
mov
push
or
jg
jns
mov
xor
mov
test
adc
lahf
cmpsb
inc
imul
ficompl
hlt
dec
ss
xchg
sbb
rol
sub
xor
pop
hlt
mov
and
fwait
jb
mov
push
insl
into
push
mov
in
outsl
mov
jae
sub
clc
fisubl
aam
enter
cld
pop
insb
bswap
or
pop
rol
enter
dec
xor
ret
mull
testb
mov
repz
pop
or
xor
push
and
pop
add
stos
es
inc
cmp
enter
push
fmuls
add
cmpsl
in
push
loope
jl
mov
in
and
jmp
in
xchg
iret
repz
xor
divl
inc
push
ljmp
pusha
jb
jae
nop
mov
mov
xor
test
sbb
adc
xchg
hlt
push
dec
popf
cmp
test
mov
inc
mov
lods
push
xchg
popf
sub
icebp
insb
lock
pop
leave
mov
xor
mov
or
jno
cs
call
jmp
jb
jl
push
push
sub
mov
mov
sub
scas
sub
mov
iret
popa
xchg
enter
fistpl
outsb
testb
dec
sbb
push
lahf
inc
mov
enter
les
jp
adc
in
aad
dec
mov
cmp
mov
loopne
aas
mov
adc
testl
bound
out
and
dec
inc
in
push
cs
push
cmp
pushf
imul
shll
or
cmp
jae
incl
sbb
imul
mov
dec
mov
loope
decb
pop
pusha
mov
jns
hlt
into
pop
jg
cmp
mov
xor
in
stos
sub
pop
push
and
test
pop
int
in
lock
loopne
jp
cmp
sub
hlt
or
sbb
jb
mov
sbb
cmp
fisttps
inc
add
lods
in
into
shlb
mov
mov
rcll
pop
jnp
cmp
inc
sub
inc
jg
stos
cmp
mov
into
xor
ror
shrl
das
xor
inc
mov
rcr
adc
dec
fdivrs
jge
imul
push
push
fisubrs
mov
or
popf
pop
movsb
or
mov
fidivl
sub
adc
cli
nop
mov
cmp
or
sub
xchg
out
test
push
ficomps
cli
push
jo
xor
xchg
cs
sbb
mov
inc
mulb
jmp
push
aas
jg
add
sbb
xchg
mov
and
push
pop
arpl
cmpl
push
mov
clc
fnstenv
flds
mov
mov
shl
icebp
sahf
inc
cmpsb
cmp
mov
xor
imul
imul
pop
outsl
cmp
ja
mov
ja
fs
mov
rcrl
fsubrl
lcall
fbstp
fdivl
cmpsl
pop
mov
frstor
and
jne
sbb
cmp
cmp
int3
mov
loope
add
jno
or
or
ficoms
in
lret
dec
add
enter
ds
or
fcoml
and
loope
aad
adc
hlt
cmpb
and
adc
je
dec
pop
aas
popf
mov
rcrl
sbb
call
mov
pop
cmpsl
adc
aam
mov
sbb
scas
iret
ja
sub
mov
jne
pop
imul
in
dec
movsl
inc
ljmp
sahf
cli
add
inc
mov
cmp
mov
xchg
test
fs
jl
outsb
dec
sub
jge
mov
into
mov
or
or
xchg
popf
jae
cmc
ljmp
dec
xchg
sbbb
in
jle
mov
clc
cmp
std
and
mov
out
sarb
pushl
mov
cmp
daa
ret
repnz
fcomip
mov
outsb
movsb
fs
inc
pop
loopne
dec
pmaxub
dec
fists
mov
fiaddl
xchg
xchg
mov
push
or
das
jp
dec
out
imul
leave
xchg
push
into
mov
xchg
insl
into
bound
fistpll
sbb
add
adc
cmp
popf
mov
adcl
ja
pop
sarb
fucom
fisubrs
out
push
stos
mov
in
jb
sbb
lret
pop
mov
cmpsl
jbe
lods
pop
out
ror
push
ja
sub
pop
xchg
cmpsl
sbb
and
push
ljmp
pop
push
stc
je
aad
pushf
test
scas
outsl
or
imul
and
push
addb
mov
or
inc
xchg
xor
xor
pop
cli
int
lds
adc
dec
pop
cwtl
and
je
cmp
xchg
arpl
pop
xor
sub
mov
repnz
aad
cmp
ret
pusha
jbe
inc
mov
icebp
jbe
dec
add
mov
mov
scas
pop
xchg
inc
out
popa
out
jg
dec
inc
movsl
enter
or
xor
and
test
ljmp
jb
mov
negb
cmpsl
add
jnp
sbb
pop
xlat
int
test
cmpsl
mov
popf
sbb
mov
test
xor
adc
sbb
jg
not
mov
pop
push
sarb
in
pusha
fwait
jl
ret
inc
frstor
mov
fisubl
gs
push
inc
aas
pop
into
push
jg
and
ja
jbe
stos
cmc
or
push
pop
xchg
cmp
inc
sti
jb
in
pop
rorb
outsl
fsubl
data16
sub
jb
sub
sbb
out
jp
mov
cmp
pop
inc
test
sbb
subl
and
xchg
aad
lret
mov
call
loopne
mov
movsl
mov
inc
dec
or
lret
out
or
shrb
adc
jmp
ja
in
call
cmpsl
inc
frstor
enter
aad
sub
sub
mov
mov
dec
dec
dec
mov
cs
sub
dec
push
out
and
xchg
shlb
repnz
inc
jge
into
and
jl
popa
mov
icebp
jle
jp
test
std
or
pop
fsubs
call
sub
lcall
adcb
cwtl
daa
sbb
std
les
dec
push
cmpsb
pop
imull
dec
sub
popf
pop
popa
jp
pop
dec
pop
dec
fiaddl
pushf
mov
mov
or
xchg
pop
fsubrs
call
mov
or
mov
sub
push
cmpsb
add
out
repnz
cmp
shl
decl
jge
jmp
push
push
mov
sub
mov
into
mov
inc
and
mov
dec
add
mov
repz
repz
iret
call
pop
jns
or
pusha
and
cld
andb
aad
es
cmc
lods
les
push
pop
fs
nop
leave
arpl
pop
xchg
sbb
pop
sbbl
mov
adc
pop
iret
adc
std
pop
sub
aas
inc
rol
imul
pop
fidivs
repnz
mov
ret
sar
iret
sub
push
sub
inc
add
mov
push
jbe
cli
add
pop
jae
faddl
adcl
mov
adc
pop
xor
xchg
push
rolb
pop
xchg
shrb
and
jns
pop
stos
xlat
add
mov
sub
mov
clc
jge
sub
xor
add
orb
and
jp
or
add
stos
or
push
jp
xchg
lret
jmp
xchg
pop
mov
aad
cli
push
cltd
shrl
push
push
in
aad
inc
add
dec
shll
or
jl
nop
lock
jnp
add
pop
cmpb
lret
mov
fistps
xor
ja
sub
daa
pop
sbb
cwtl
pop
mov
int
mov
mov
pop
adc
and
aaa
loopne
lret
call
lock
adc
sub
lret
inc
jp
pop
mov
and
bound
out
loopne
mov
mov
clc
xchg
sbbb
xor
fdivrs
dec
lods
inc
out
stos
shrb
adc
add
sub
adc
mov
dec
enter
rolb
mov
add
inc
sbb
fldl
sbb
mov
and
test
xlat
sbb
js
push
lahf
loopne
lret
xor
test
lcall
popf
cmpsb
pop
scas
fimuls
out
repnz
pop
hlt
and
cmc
push
mov
loope
stos
mov
push
mov
xchg
xlat
std
xchg
sbb
stc
or
ss
lods
loope
rol
loope
ljmp
sbb
out
out
lahf
inc
dec
mov
js
movq
push
jmp
loope
lret
pop
sub
or
shl
or
sbb
rol
repz
imul
in
les
xchg
mov
cld
mov
stos
aas
pop
cwtl
jp
mov
ds
add
mov
lods
adc
lds
push
lods
fxch
loope
add
adc
inc
xor
push
inc
mov
sub
xchg
adc
call
imul
mov
xchg
lcall
push
and
mov
jmp
mov
repz
pop
aam
faddp
fcmovnb
mov
out
lock
outsl
push
sbb
dec
sub
and
divb
movsb
xchg
jmp
shrl
negb
out
cmpsb
lock
shrl
cld
xchg
push
dec
sbb
loop
pop
jl
adc
lcall
js
add
mov
js
push
sub
mov
add
popa
adc
fs
icebp
add
dec
push
test
push
aad
jp
inc
dec
mov
push
movsb
dec
mov
cmp
pop
insb
and
push
sbb
insb
xor
and
jne
push
dec
and
mov
jmp
scas
hlt
shlb
and
aaa
xlat
pusha
and
mov
jne
and
inc
aaa
int
or
out
cmc
mov
or
pop
pmuludq
notb
xlat
mov
mov
xchg
out
jae
dec
mov
sub
sbb
rcll
mov
loope
sahf
and
jle
faddl
iret
daa
ret
das
gs
lods
jne
movsl
loopne
iret
inc
mov
ror
sub
ja
jnp
stc
pop
outsb
mov
inc
mov
aad
and
adc
mov
ss
or
pop
addr16
mov
add
sub
lret
lahf
or
outsb
in
jp
adc
stc
xchg
lahf
push
aam
sub
dec
lods
cltd
sti
aad
xchg
roll
xor
mov
xor
subb
jl
fs
jbe
pop
icebp
inc
out
out
jecxz
mov
or
scas
test
aad
insl
inc
cltd
xor
stos
cmpsl
shlb
and
sbb
ret
cwtl
jecxz
xorl
pop
and
jnp
aas
add
fwait
dec
icebp
leave
jae
and
or
test
sub
fwait
mov
inc
enter
xchg
xor
shll
loop
and
lock
mov
or
int3
inc
dec
jo
add
mov
in
or
and
mul
repz
and
sub
dec
mov
faddp
out
mov
xchg
cs
jg
test
stos
sahf
push
js
push
dec
add
int
xor
lahf
clc
les
call
xchg
push
fcmovb
rorl
popf
lcall
sub
lahf
decb
and
pop
mov
mov
push
les
xchg
lcall
mov
imul
arpl
inc
mov
in
and
pop
outsl
insl
lock
movsb
mov
icebp
mov
and
je
push
mul
jne
and
pop
fisubrl
inc
mov
negl
mov
xchg
rolb
addl
mov
adc
xor
mov
adc
mov
lea
imulb
jno
fisttpll
cwtl
icebp
sbb
or
xchg
pop
sbb
cmp
fists
stos
mov
cmp
and
xor
mov
xlat
nop
sbbb
aaa
sub
xlat
imul
jb
ret
pop
sub
jle
xchg
lds
push
movsb
fsubl
pop
out
xor
lcall
push
cmp
cld
fs
ret
incl
leave
or
sub
rcrl
jmp
sub
mov
add
lcall
test
push
fimull
adc
mov
stc
cmpsl
lods
stc
sub
and
in
pop
xor
sbb
dec
and
add
sbb
or
ret
addr16
stc
sarb
and
adc
sub
and
lcall
push
sar
and
rolb
lret
fstpt
inc
cmc
das
insl
aas
jnp
mov
push
fs
aad
xor
adc
lcall
fs
mov
repz
fdivl
lahf
ss
mov
cmp
or
ljmp
jecxz
sub
sub
mov
and
stos
ja
adc
xchg
push
movsl
sbb
sbb
lds
loope
das
lds
shr
adc
imul
pop
mov
sub
inc
sub
lock
cwtl
and
ja
sar
mov
pop
mov
pop
inc
sub
int
cmpsl
push
movsb
jg
clc
push
pop
repnz
adc
pop
repnz
dec
cmpb
shll
pop
gs
mov
jo
xorb
inc
repz
mov
pop
insb
and
xchg
mov
xor
xchg
into
leave
push
push
and
stc
out
sbb
xor
push
xor
cmpsb
push
push
scas
mov
ret
lods
push
cmc
arpl
mov
imul
adc
in
pop
std
lgdtl
pop
popf
sbb
call
shr
xchg
or
sub
gs
and
pusha
and
pusha
pushf
lods
in
movss
loope
pushf
fcompl
push
pop
jecxz
loope
mov
xor
lcall
and
dec
pop
ds
add
out
cmp
mov
xor
mov
push
xor
sbb
outsb
pushf
mov
mov
fstps
mov
and
push
cld
ds
xor
subl
push
push
mov
or
adc
lret
inc
push
jmp
mov
jbe
and
loopne,pn
fcomps
push
das
cmpsb
inc
pop
ret
cmpl
xchg
fistpll
inc
mov
or
jne
adc
lds
test
out
into
movsb
mov
clc
popa
inc
xor
pop
lcall
dec
cmp
cmp
shr
nop
add
not
mov
lods
jae
test
dec
aad
test
xlat
jmp
cltd
push
sbb
out
inc
out
mov
and
or
stos
lret
nop
add
dec
mov
outsb
pop
aam
or
add
mov
aam
sub
or
dec
inc
pop
in
mov
jne
mov
jno
add
scas
xchg
leave
lds
mov
inc
inc
inc
mov
sbb
jp
fs
jo
pop
sahf
mov
in
pushf
sub
cmp
jnp
and
sbb
stos
mov
inc
fnsave
rol
lock
pusha
ljmp
sbb
icebp
pushf
sub
xor
mov
repnz
aam
addr16
cmp
push
nop
push
movsb
paddusw
sbb
sarl
pop
mov
pop
sbb
mov
xchg
roll
sub
xchg
mov
call
stc
or
adc
out
adc
pop
rcr
xor
in
imul
cmp
out
pop
and
add
pop
insb
dec
inc
mov
aam
lods
mov
dec
mov
jae
lcall
push
flds
out
jne
gs
in
jo
dec
in
movsl
shrb
scas
push
lea
add
cmp
hlt
push
cmp
in
shlb
out
mov
fisttpl
or
mov
lea
and
mov
test
jb
mov
mov
repnz
outsl
in
pop
nop
push
sub
cmc
mov
jp
push
push
decb
add
scas
pushw
mov
cmp
adc
insb
in
mov
aas
fisubs
or
inc
daa
lret
lret
insl
stc
sub
adc
lret
fnstcw
xor
mov
push
mov
jno
xchg
inc
push
pop
add
pusha
inc
sub
and
cwtl
ss
int
jmp
inc
inc
lahf
lds
cmpsl
jo
add
adc
stos
inc
scas
push
add
dec
out
daa
mov
stos
push
xchg
adc
push
sub
push
stos
pop
hlt
stc
fwait
sub
push
mov
loope
inc
push
and
push
imul
sub
imul
pushf
stos
int3
daa
xor
sbb
adcb
loopne
xor
pop
mov
scas
inc
in
sub
add
sub
mov
test
push
dec
push
or
ljmp
lods
mov
jmp
push
mov
dec
lds
xor
into
mov
mov
push
adcb
loope
and
mov
subb
push
test
push
dec
sub
jg
push
imul
jg
lods
cmp
sub
aad
xor
inc
mov
jbe
daa
inc
fsubp
daa
cmpsb
mov
pop
push
out
fs
pop
add
fistps
push
outsb
dec
xor
cmp
ret
mov
jo
add
xchg
arpl
fsts
and
test
ret
pop
testb
and
and
inc
mov
cmp
xor
repz
enter
dec
lods
jl
ss
xor
inc
aad
adc
scas
std
icebp
lods
icebp
or
jp
std
mov
fsts
sbb
jbe
jmp
mov
xchg
sub
stos
pop
std
xor
sbbl
movsb
sub
jo
nop
ret
ffreep
inc
mov
stos
hlt
das
sub
bnd
repnz
xor
mov
add
jl
les
add
mov
sub
push
aad
out
sbb
mov
mov
and
leave
pop
stos
scas
xchg
push
jae
sub
or
mov
pop
mov
sbbb
pusha
mov
ret
into
push
cld
cmp
dec
adc
pop
mov
pop
cltd
add
test
mov
call
cmp
ss
xchg
ljmp
pop
jle
mov
or
scas
rorb
call
arpl
xor
insb
adc
inc
shl
xchg
bound
xor
rorl
loope
inc
lea
aas
out
pushf
sub
cmp
or
sarb
adc
fildll
xor
inc
add
xor
sbb
in
push
mov
inc
sar
arpl
sbbb
mov
and
lds
inc
xchg
out
or
repnz
ret
or
das
aaa
cmpsb
jae
and
xchg
xchg
push
xor
cmc
pusha
out
xor
popl
push
aad
add
out
stos
jmp
cltd
sub
jo
das
loopne
outsl
mov
cs
sarb
or
dec
ljmp
stos
popf
fsubl
mov
and
or
jge
cmp
xor
adc
sti
gs
out
bound
gs
fldenv
scas
iret
mov
out
pop
aaa
mov
mov
lahf
jae
mov
push
dec
and
outsl
repnz
jbe
mov
xchg
inc
bound
add
sahf
and
xchg
js
inc
cmp
xchg
xor
dec
mov
xchg
lds
loope
je
mov
xchg
pop
sub
push
jnp
xor
mov
pushf
cmpl
mulb
fnstenv
xor
mul
push
pop
subb
mov
inc
xchg
shll
stos
dec
push
arpl
jecxz
fld1
push
out
in
xchg
inc
les
fsubrs
filds
or
in
push
leave
adc
dec
pushf
jle
or
push
jp
es
push
xchg
xcrypt-cbc
cmpsl
push
int3
ds
push
cs
sarl
sub
popa
sub
mov
ja
rorb
add
jbe
enter
push
xor
call
jg
lahf
pop
jns
sbb
xor
xchg
stc
aaa
mov
push
add
rorl
mov
adc
es
mov
dec
fs
pop
inc
adc
push
or
sahf
ljmp
lahf
iret
les
mov
sub
mov
pop
jbe
pop
stc
ds
inc
cmp
or
pusha
dec
and
sub
aaa
jg
lods
push
fidivrs
or
push
push
and
push
repz
scas
inc
push
xor
mov
jle,pn
jo
pop
push
cmc
cmp
adc
push
out
hlt
das
aad
xorb
pop
mov
cmpsl
xchg
cmpsl
out
imul
xchg
iret
ja
clc
sub
rorb
imul
cmp
and
cli
lock
pop
out
adc
push
aad
lods
sahf
xchg
sbb
lret
mov
push
out
cmp
fs
test
sub
add
inc
push
or
sahf
add
jns
push
xor
mov
cmp
cmp
xchg
rcrb
out
insb
mov
imul
mov
lods
mov
jg
adcb
mov
loope
fwait
mov
jbe
pop
test
test
fnstenv
jp
sub
xchg
mov
aaa
decb
xchg
in
int3
in
jmp
mov
or
mov
push
ret
negl
mov
cmp
repnz
fmulp
adc
and
jae
int
mov
cmp
rcrb
fwait
adc
std
pushf
cmp
push
insb
dec
loope
and
pop
push
leave
mov
leave
sub
scas
and
sbb
cmpsl
mov
pusha
into
lret
sarl
sub
ret
cli
cltd
lea
mov
jmp
movl
xor
daa
push
inc
call
jle
jge
adc
xchg
aad
mov
stos
xor
fnstcw
std
inc
dec
iret
movsl
es
pop
jmp
jecxz
or
ficoml
ficompl
das
cmpsl
mov
jo
sbb
sub
movb
ret
or
divb
test
dec
cli
ljmp
pop
aas
enter
mov
jecxz
mov
aam
lret
inc
or
mov
adc
call
fists
subb
loopne
sub
mov
xor
dec
pop
mov
mov
adc
hlt
add
dec
arpl
movsl
and
outsl
xor
subl
gs
or
movsb
ss
movsl
aaa
loopne
fistpl
or
add
adc
outsl
adc
cli
xchg
pop
cmpsl
imul
cli
out
lea
int
imull
sahf
and
pop
inc
mov
ret
sbb
ret
cmp
lea
fwait
ja
sbb
inc
jns,pt
mov
push
or
mov
adcb
hlt
xchg
or
fidivrl
lret
decl
test
insl
push
fildl
sbb
je
loopne
addr16
shlb
rorl
es
mov
scas
mov
cmp
stos
xchg
and
outsl
mov
aam
push
fsubrs
xchg
xor
mov
out
loopne
inc
popa
lcall
aad
push
jne
xor
aad
leave
inc
or
xchg
fcomps
sub
mov
repz
cmp
xor
xchg
sub
lods
sub
lret
insl
out
xchg
pop
pop
in
or
and
stos
outsb
mov
inc
imulb
arpl
lock
pushf
inc
sub
cmp
add
cmp
cmpsl
ficoml
sub
das
or
or
loopne
dec
mov
es
cmpsb
mov
ljmp
inc
cmp
add
out
addb
lahf
xorb
lahf
jecxz
loop
xor
xchg
cmp
shlb
aam
mov
out
mov
or
push
mov
mov
in
and
ljmp
sahf
pop
dec
or
es
fwait
xchg
int3
lds
pop
jb
pushf
je
test
nop
mov
or
orb
jle
mov
ljmp
roll
in
dec
add
push
sahf
mov
rorb
mov
jmp
pop
mov
mov
pcmpeqw
cmpsl
mov
push
stc
pushf
jns
mov
xchg
mov
sub
pusha
sub
adc
mov
pop
add
mov
lret
roll
pop
gs
pop
mov
sbb
pop
into
loop
inc
push
cs
xchg
out
and
sbb
add
aam
sahf
dec
mov
mov
cwtl
cmpsb
cmp
jg
daa
pop
or
fbstp
rorb
mov
inc
cmpb
adc
je
icebp
jnp
cmpb
lret
test
stc
xor
inc
push
test
or
xchg
dec
sub
jmp
push
lock
rcrl
sub
dec
aam
dec
iret
dec
pop
arpl
into
cmp
mov
inc
sub
sub
push
cmpsl
lods
inc
mov
pop
daa
sbb
mov
jbe
adc
add
mov
pop
cmpsb
lea
inc
inc
xchg
jne
mov
jge
nop
jecxz
js
mov
xchg
adc
push
xchg
pop
mov
out
xchg
inc
adc
push
xor
adc
mov
fstps
std
push
add
in
arpl
loop
pop
mov
push
mov
lock
and
mov
pop
arpl
repnz
popa
sub
mov
popf
pop
mov
adc
aas
adc
sub
lock
out
xor
cwtl
cwtl
push
scas
pop
pop
fbld
lret
cmp
repnz
xchg
test
ss
jno
pop
aad
ret
in
or
jle
icebp
lahf
mov
repnz
add
flds
out
test
xor
pop
in
push
loope
stos
xchg
mov
add
jge
pop
push
adc
repz
das
push
out
insl
or
push
push
and
dec
adc
add
inc
cmpsb
jnp
jbe
scas
test
mov
pop
out
movsb
pop
cmp
mov
loope
push
cmpsl
push
xchg
inc
mov
std
cmpsl
mov
insb
repnz
je
pop
fildll
and
adc
sti
mov
and
in
mov
cltd
jns
inc
fmuls
aam
cltd
jl,pn
inc
mov
sbb
loop
mov
mov
pop
rcl
out
mov
xchg
fdivl
repz
or
test
ret
mov
mov
cltd
pop
mov
adc
call
inc
sub
rorb
int3
fiaddl
cld
push
lock
mov
popf
dec
sub
movsb
fwait
aas
mov
pop
adc
stos
mov
push
roll
cmp
pop
mov
mov
xor
push
iret
into
mov
gs
repnz
jmp
repz
inc
nop
lahf
ja
and
sub
into
push
ret
shrb
jae
out
inc
or
mov
and
xchg
es
out
cmp
adc
add
dec
pusha
loopne
cmp
leave
dec
jae
adc
fildll
mov
push
push
pop
and
fsts
outsl
mov
aad
adc
fimuls
pop
xchg
push
or
imull
mov
xor
adc
roll
int
adc
adc
popf
sub
xchg
aas
jmp
adc
test
dec
and
mov
insl
adc
mov
mov
mov
xor
scas
adc
test
xchg
mov
jb
fs
push
jno
enter
imul
adc
sub
cwtl
fs
or
int
in
pop
scas
stos
jg
dec
jo
data16
mov
loopne
pop
lret
push
jno
cs
add
ret
movsb
or
or
testl
call
cmc
jns
leave
xchg
filds
inc
mov
psrld
sbb
popa
cmp
adc
pop
cmp
outsl
mov
sub
idiv
xchg
stos
sub
jne
fldcw
rol
ret
dec
in
and
jle
shll
scas
pop
jnp
jno
flds
arpl
mov
xchg
repnz
gs
jp
sbb
jne
mov
push
aad
mov
mov
lds
dec
rcrb
jp
xchg
mov
or
int3
or
pop
adc
and
xchg
sbb
inc
sub
arpl
sub
sub
das
lds
and
and
out
mov
in
push
iret
and
mov
fisttps
ljmp
dec
add
mov
in
jecxz
adc
shlb
pop
xchg
or
push
push
or
jmp
fbld
xlat
push
in
mov
sbb
jle
and
pop
aad
jo
pop
xchg
movsb
test
mov
dec
pop
outsb
rcl
rorb
xchg
xor
shl
repnz
data16
out
inc
adcb
push
negb
inc
lock
int
aad
xchg
adc
cwtl
in
imull
dec
mov
loope
mov
in
xchg
mov
jecxz
lds
pushl
jb
push
mov
test
adc
jb
cmc
ret
xor
and
stos
icebp
ret
aad
dec
mov
cmpsl
cmp
inc
ret
sub
pop
mov
dec
popf
lret
xor
adc
push
hlt
mov
cmc
sub
cmp
mov
jb
cwtl
jae
push
adc
pop
or
sbb
in
mov
jns
stos
das
xor
std
cwtl
pop
cmc
dec
dec
ror
es
std
pusha
scas
fisubs
arpl
mov
mov
aam
pop
pop
push
nop
imul
mov
lcall
ret
int3
dec
or
mov
jb
pop
push
add
stos
arpl
pop
dec
mov
pop
xor
push
mov
sub
jo
xor
inc
mov
icebp
or
roll
shll
xchg
jns
sbb
addl
push
or
sub
xor
out
lock
sub
gs
std
mov
pop
fdivrl
arpl
mov
ja
adc
aam
adc
sarb
push
bound
les
scas
mov
and
iret
push
jmp
sahf
push
loop
jge
pop
jle
mov
lret
repnz
pop
mov
cmpsl
push
popf
mov
xor
xchg
cmc
mov
movsb
add
ljmp
push
lret
pusha
out
or
adcb
xor
pop
cltd
shrb
adc
mov
add
push
fildll
rolb
and
sub
push
lock
out
mov
outsb
add
jbe
test
mov
jmp
mov
adc
jg
fs
stc
xlat
sbb
inc
or
dec
daa
mov
dec
lods
dec
or
popf
push
and
cmp
mov
clc
cmp
push
xchg
std
call
mov
addl
sbb
pop
xchg
inc
sbb
je
pop
mov
ljmp
into
fbstp
mov
in
adc
out
sbb
xchg
dec
push
xor
pop
frstor
add
aam
je
mov
and
scas
adc
pop
pop
rorb
daa
jle
fdivr
fs
cld
xchg
jecxz
int3
fs
add
pushf
add
jg
les
test
aaa
cmp
push
add
adc
dec
lock
insb
dec
cs
lret
adc
out
ret
sbb
into
inc
mov
cmp
sti
test
iret
add
xorb
lret
cld
arpl
sbb
dec
outsl
cwtl
mov
fiaddl
loopne
cmpsl
aaa
cmpsb
scas
push
ja
pop
rorb
and
inc
out
add
repnz
data16
stos
pop
xor
leave
push
push
jle
adc
fsubl
aad
cmp
jg
mov
xchg
push
arpl
outsl
xchg
xchg
xor
and
insl
sti
jne
xor
fsubs
jnp
lea
jo
cmpsb
xor
pop
mov
pop
fwait
pop
mov
loope
jne
dec
xchg
lods
filds
add
loope
xlat
push
cmp
sti
movsl
sbb
push
mov
shrb
push
jbe
pop
fsub
push
inc
fcompl
sbb
dec
fsubl
int
jmp
or
repnz
sub
lahf
shlb
pop
shr
and
fisubl
and
sub
jecxz
xchg
fidivs
mov
icebp
test
adc
xor
daa
aas
xor
test
cli
scas
dec
loop
add
in
xor
dec
sub
add
add
ds
fst
cmpsl
xchg
mov
dec
push
iret
inc
cmc
mov
cmc
cmp
sbb
dec
mov
ficoml
pusha
mov
sbb
mov
push
or
jge
jl
ret
das
shll
sbb
sbb
pop
fcompl
pop
xchg
sub
mov
sbb
and
outsb
dec
dec
in
and
cmp
dec
mov
in
xor
insb
mov
inc
jg
dec
adc
addb
lret
pop
mov
pop
sbb
mov
stc
cwtl
and
mov
adc
arpl
xor
xor
out
popf
cmp
rcrb
adc
movsl
popa
mov
pushf
popa
cli
les
xchg
test
nop
inc
arpl
push
dec
sbb
lahf
sbb
hlt
xor
sbb
ja
mov
mov
inc
outsl
ret
mov
imul
and
jp
lods
icebp
pop
enter
xor
mov
adc
inc
addl
testl
fdivl
jl
fdiv
cmp
lods
lock
or
aaa
fiaddl
mov
rorl
ror
pop
into
pushf
add
dec
fldcw
out
adc
js
negb
insb
mov
and
rcrl
stos
mov
js
flds
mov
sarb
and
out
insb
mov
mov
xor
sub
push
fdivrp
adc
push
add
mov
aad
popa
decl
stos
cmpb
push
loope
cmp
cmp
sub
jno
cmpsb
add
push
push
adcl
cmp
jno
in
dec
int3
aam
mov
push
cmp
add
hlt
gs
add
addr16
fldenv
xchg
fwait
movsb
sub
cmc
jl
mov
int
dec
xor
inc
imul
std
dec
stos
push
pop
push
stos
dec
jo
cmp
pop
and
dec
jmp
stc
push
push
jno,pn
pop
fistl
or
jnp
cmpsb
and
pop
repnz
sbb
mov
lcall
movsl
pop
sub
inc
insb
xchg
addr16
aas
adc
cmp
test
mov
add
xchg
mov
mov
fcompl
dec
push
sarb
idivl
mov
test
lods
aas
inc
cmp
dec
dec
or
rorb
xchg
cmp
mov
or
inc
add
cmp
adc
pop
and
xchg
and
call
adc
frstor
push
decl
lcall
pop
xor
xor
call
xchg
xor
sub
mov
out
inc
fisubl
adc
pushf
xor
lock
lahf
cltd
into
inc
ret
int3
push
inc
lods
sbb
sbb
js
pop
cld
adc
int
pop
sub
cmp
popf
cmp
xchg
mov
mov
mov
mov
inc
jp
mov
mov
push
or
cltd
mov
gs
fidivs
fdivrp
in
push
pusha
je
fwait
pop
lret
jg
insl
aaa
or
rcll
sbbb
sar
pop
cmp
into
jecxz
mov
outsb
and
popf
push
add
fcmovb
popa
jae
cmc
mov
jo
aad
push
fisubs
into
mov
pop
scas
mull
mov
loopne
hlt
pop
jecxz
ss
shl
cmp
faddp
cmpsl
loope
xchg
mov
xchg
addl
shrb
jg
ret
mov
je
insb
inc
dec
aam
inc
mov
shrl
cmpsb
adc
ffree
in
leave
in
mov
sub
in
lods
pop
mov
enter
sbb
inc
sbb
mov
mov
imul
orb
lahf
outsb
mov
sub
lock
sbb
shr
xchg
aas
stos
testl
pop
ds
ror
mov
enter
es
mov
adc
rcll
mov
dec
repz
and
ret
or
push
sarb
sbb
jno
dec
and
sbb
cmp
lock
or
std
jne
inc
ljmp
leave
lahf
lea
pushf
and
into
mov
outsl
pop
je
leave
push
mov
imul
dec
cmovne
hlt
jp
cltd
scas
or
xor
ss
sub
and
mov
lods
sti
out
cld
xor
ret
adc
xchg
divb
test
fistps
push
shlb
pop
or
adc
cmpsl
stos
rcl
rorl
into
insl
mov
repnz
inc
outsl
push
sbb
push
xor
loopne
out
out
fidivl
adcb
clc
jo
mov
mov
xor
xor
test
sbb
popa
gs
cmp
idiv
ret
arpl
jl
xchg
jne
pop
or
inc
adc
dec
jle
in
in
rclb
aad
jle
push
xor
loop
sbb
in
and
or
cmova
sbb
pusha
loopne
gs
cmp
adc
roll
jecxz
int
rcr
dec
mov
movsl
iret
push
and
daa
xchg
and
xor
jne
mov
pop
mov
xor
push
lahf
out
mov
pop
ret
negl
ss
aam
and
push
jmp
or
mov
test
clc
int3
mov
xchg
shrb
sub
roll
ja
cli
pop
xchg
cmp
fwait
cltd
inc
push
loopne
xor
push
test
push
xchg
mov
std
stos
fwait
js
dec
cmp
fsqrt
mov
pop
iret
aam
scas
mov
arpl
shlb
jge
inc
mov
mov
ret
aaa
xchg
fs
pop
push
push
xchg
shlb
sbb
lock
lahf
jl
dec
sbb
xchg
cmp
xor
pop
xor
mov
xor
nop
test
bound
gs
mov
rcr
fs
out
hlt
mov
cmc
out
shll
test
jae
jl
cltd
or
iret
cmc
adcl
push
setl
jbe
adc
pop
popa
fisubl
in
out
insl
iret
inc
inc
cmp
push
icebp
lret
outsl
pop
das
lods
fisubrl
mov
mov
sahf
mov
inc
ljmp
mov
pop
cli
movsb
add
insl
mov
add
jno
ljmp
adc
push
movsl
xlat
sub
sbb
stos
jns
jns
out
pop
mov
sbb
inc
ret
add
mov
push
push
js
loop
pop
shll
dec
mov
enter
insb
adc
adc
loope
xchg
sub
stos
dec
or
and
inc
aad
sub
cltd
jns
push
imulb
hlt
add
inc
and
sub
cltd
sti
lods
lods
inc
lods
dec
sub
xchg
fnstsw
out
push
inc
jnp
std
mov
and
xchg
cld
or
insl
aaa
xor
scas
or
cltd
fsts
lret
lret
mov
inc
je
add
add
rclb
clc
out
add
xchg
dec
decb
xor
or
ret
jbe
mov
aas
cmp
pop
mul
fisttps
push
int3
xchg
mov
roll
sub
and
sbb
adc
jecxz
insb
dec
test
leave
out
push
lods
es
add
mov
iret
popf
lret
addr16
mov
cmc
inc
mov
mull
cmp
gs
push
xchg
movsl
cli
pusha
inc
jnp
shrb
aam
sbb
test
jl
loopne
pusha
xchg
mov
jl
jp
leave
sbbl
adc
setno
mov
xchg
lcall
mov
mov
ds
mov
xchg
arpl
or
inc
jecxz
and
inc
mov
push
jnp
rcrl
sbb
int3
xor
test
cwtl
shll
add
and
push
add
xchg
xchg
out
xchg
mov
sub
jmp
fwait
or
inc
leave
push
sbb
test
pop
std
sbb
jnp
inc
pop
stos
fbstp
and
mov
add
pop
rcl
popf
add
mov
mov
movb
adc
jle
xor
aam
and
mov
cs
arpl
stos
mov
push
in
jp
mov
bnd
xor
xor
add
mov
in
cmp
test
ja
dec
xor
nop
andb
addr16
pop
clc
and
xchg
pop
xor
jno
jbe
das
mov
push
mov
lock
cmp
cltd
cwtl
out
xor
add
jle
pop
stos
cwtl
enter
bound
fcoms
adc
rol
cmp
lcall
cmp
test
pusha
sbb
popa
or
and
jbe
outsb
or
mov
mov
into
cmp
lea
inc
movsl
ret
dec
les
jno
shr
insl
ljmp
test
push
lock
stos
inc
adc
push
out
jp
adc
mov
push
and
hlt
aad
mov
stos
inc
add
ja
and
push
mov
cmp
mov
adc
rcll
mov
shr
xchg
jno
dec
loope
scas
daa
fdivrl
mov
call
inc
xchg
fdivrs
push
imul
and
jae
cwtl
sbbb
sub
outsb
pusha
icebp
add
sbb
xor
inc
jmp
bound
or
leave
daa
enter
push
and
xchg
cmp
mov
cmp
or
and
ret
lret
push
lods
lret
into
adc
push
stc
mov
mov
fbld
push
pop
pop
sub
mov
push
test
out
bts
lret
aad
xchg
and
nop
clc
clc
test
dec
subb
arpl
sub
imull
hlt
adc
inc
gs
add
ret
cmp
jle
xchg
das
pop
mov
jp
roll
adc
rorb
jp
mov
rcrl
push
lret
jp
pop
mov
xchg
sarb
dec
cltd
xor
jle
pusha
mov
out
pop
and
xchg
push
add
xor
imul
popf
ds
scas
imul
mov
mov
jno
xchg
sbb
scas
inc
jns
stos
sub
pop
lcall
push
sub
adc
xchg
shl
cld
adc
xchg
mov
pop
addl
jae
jo
cmp
test
xchg
mov
sub
mov
jecxz
iret
cmp
xor
movsb
sbb
int3
icebp
sahf
outsl
and
adc
jg
inc
ficoms
lods
adc
xchg
pop
pop
push
rorl
pop
dec
or
lea
mov
cmp
and
xchg
mov
ds
loop
and
add
pop
div
pop
nop
les
mov
orl
sbb
xor
xor
push
xor
push
mov
or
xchg
lcall
xchg
mov
lret
or
add
push
sub
int3
nop
fstps
push
mov
test
sub
lret
jo
icebp
lods
repz
xchg
jb
mov
outsl
add
dec
adc
push
cmp
jge
loop
es
mov
mov
inc
lock
loope
jns
fists
adc
mov
stc
jg
cmpsb
ret
adc
cli
test
sbb
mov
mov
mov
mov
test
jge
cmpsl
sbb
sbb
and
pop
xor
sbbl
dec
inc
jl
outsl
cli
mov
hlt
dec
jbe
lock
xlat
aas
ja
sub
insb
mull
xor
pop
push
mov
xor
loop
mov
jmp
popa
aad
adc
pushf
iret
push
aaa
daa
mov
fcmovnu
in
sub
jb
push
dec
rcrl
movsb
mov
mov
outsl
jae
aam
and
jne
adc
sub
mov
lret
stc
xchg
outsb
cmp
xor
xchg
and
std
movsl
in
stos
jnp
push
je
add
jne
and
and
iret
repz
add
inc
mov
mov
pop
jb
mov
xchg
daa
adc
mov
xor
inc
les
xchg
cli
lcall
aam
pushl
cmp
pop
xchg
into
adc
hlt
adc
in
jp
test
inc
lahf
mov
clc
fcmovnu
inc
or
add
xchg
mov
xchg
cmp
cvtpi2pd
jnp
mov
mov
push
push
jle
mov
outsb
pop
inc
cwtl
dec
in
adc
gs
cltd
lea
cwtl
push
mov
dec
xchg
xlat
and
adc
jmp
andb
sbb
xchg
divl
je
jmp
imul
cmp
add
or
adc
aas
into
adc
dec
sarl
and
add
clc
lret
lds
jo
fwait
aaa
lcall
or
leave
and
add
or
and
pop
sbbl
mov
sbb
xchg
push
dec
mov
jbe
sarb
aaa
add
sbb
xchg
sbb
movsb
or
jg
fldenv
push
loop
bound
aaa
mov
daa
or
imulb
aam
and
mov
frstor
dec
out
in
mov
pop
scas
inc
lahf
xchg
pop
mov
xor
rcll
popa
mov
or
lods
into
dec
out
loop
daa
and
lea
scas
add
pop
jg
push
mov
dec
jb
clc
push
push
push
push
sub
jle
adc
dec
and
inc
add
mov
xchg
fwait
add
cmp
or
enter
inc
sbbb
pop
mov
mov
or
sbb
inc
adc
dec
mov
cmp
cmc
jae
fistl
cmpsb
sbb
fisttps
test
mov
sahf
dec
cmp
add
sbb
je
je
mov
dec
and
jae
xchg
push
popf
mov
pop
std
adc
lea
stc
dec
repnz
aaa
or
inc
xor
jecxz
push
out
mov
xlat
lret
stc
popf
cli
adc
inc
int
jl
push
or
cmp
pop
and
jg
cld
jecxz
cs
dec
hlt
pop
pop
popa
xor
inc
rcrb
lods
mov
or
inc
ret
out
push
lea
pop
sarl
xor
pop
mov
inc
inc
jae
cmpl
outsl
in
or
insb
into
cmp
fs
and
add
pusha
das
in
cmp
jecxz
js
pop
xor
mov
sbb
into
sbb
mov
popf
fsts
push
iret
adc
lret
int3
pop
sub
push
inc
ss
jne
popf
test
lock
cs
je
nop
aad
imul
imull
pop
or
xchg
sub
mov
and
clc
mov
xor
mov
push
jg
jno
pop
pop
push
loop
rcr
adc
push
lahf
xor
mov
ds
lret
xor
stos
push
std
cmpsb
mov
mov
repnz
cltd
out
loop
std
sbb
mov
into
leave
outsl
jl
dec
lock
mov
push
mov
insb
andl
inc
dec
stos
sbb
icebp
cmp
jns
xor
or
aaa
push
xchg
outsl
ljmp
jnp
mov
in
sti
jno
adc
lods
push
fldenv
mov
pop
mov
pop
fdivr
fsubrp
sti
call
gs
cmp
insl
push
cld
mov
lahf
sub
sub
sbb
rorl
jp
notb
repz
pop
das
daa
mov
imul
flds
insb
jnp
push
mov
inc
repnz
cmp
mov
mov
push
fistl
outsl
lahf
mov
dec
es
jle
pusha
test
adc
mov
jns
stc
fwait
adc
adc
in
xor
scas
adc
lahf
fnstcw
and
lcall
xchg
pop
jmp
cmpsb
push
xchg
cmp
fisubl
jne
cmc
push
notl
sbb
jno
js
rol
pop
push
or
add
test
mov
arpl
mov
mov
adc
cmp
aam
outsl
icebp
dec
jmp
mov
xor
add
sub
ficoms
jnp
movsb
lock
aad
dec
and
dec
sub
jle
xlat
and
je
jg
xor
mov
xchg
sarl
ja
push
ret
jecxz
lret
push
sbb
push
and
fldt
jbe
jle
mov
and
mov
mov
push
cmc
or
add
xorb
sbb
bound
inc
stos
mov
data16
jge
out
fs
cmp
lds
cmpb
inc
lea
pop
pop
lret
cmp
shll
std
xchg
cltd
mov
mov
out
push
int3
sbb
mov
pop
inc
stos
push
mov
cmp
int
xlat
mov
lods
adc
cmpl
dec
popl
ja
lahf
and
inc
gs
add
pop
addr16
test
push
mov
test
out
iret
pop
dec
imul
filds
dec
and
adc
mov
xor
push
int
fnstenv
inc
jo
fistpl
cli
int3
add
xchg
add
fnstsw
popf
push
inc
fistps
xchg
add
addr16
incl
and
sti
bound
sbb
inc
enter
inc
mov
scas
pop
out
movsl
aam
xchg
mov
and
into
inc
xchg
movsl
or
int3
mov
dec
les
push
nop
fistpl
xlat
bound
insl
xor
test
jae
jae
fsubrs
mov
sub
aaa
ja
outsb
pop
fnstsw
add
add
inc
cmpl
adc
out
daa
test
aaa
fiaddl
rcr
test
jecxz
fcmovnu
rorl
cmp
bound
fdiv
mov
stos
mov
divl
jecxz
pop
adc
cmpsl
das
mov
jae
jne
sbb
pop
fmull
inc
mov
jecxz
inc
lock
clc
jno,pn
mov
imul
pcmpgtd
push
cmp
dec
fcmovne
scas
sub
push
out
fdivp
test
inc
mov
mov
filds
xor
sarl
jmp
dec
sub
mov
shrb
pop
mov
inc
cli
push
xchg
rclb
dec
popf
sahf
dec
mov
neg
fisttpll
fildll
adc
mov
sub
pop
or
inc
les
lahf
xchg
ss
outsb
imul
jo
dec
dec
dec
imul
into
and
pop
mov
or
stc
outsl
lods
push
ret
ss
fsubs
sbb
lahf
imul
or
les
fsubr
iret
or
shrb
test
mov
mov
pop
lahf
fwait
mov
add
rorl
pop
xchg
ffree
scas
int
mov
jns
movsl
ret
adc
ret
push
rorb
mov
jg
mov
lods
nop
in
out
arpl
subb
add
ret
cld
and
popa
push
lods
sbb
rorl
test
out
xchg
pop
test
fwait
lea
leave
out
pop
jns
les
or
add
push
adc
push
jbe
or
sbb
adc
std
in
test
cmp
and
dec
sub
mov
or
nop
fwait
push
mov
xchg
fs
mov
jno
test
loopne
xlat
pusha
push
mov
aam
iret
pop
jmp
cli
dec
adc
pusha
arpl
das
xor
pop
test
hlt
xchg
popf
movsb
stos
add
jecxz
or
xor
test
lods
popa
scas
mov
fisubrl
jecxz
int3
xchg
mov
jne
xor
mov
ljmp
divb
cmp
xchg
inc
shlb
out
or
mov
stos
add
test
mov
shl
mov
jae
sub
mov
push
sahf
jl
xchg
mov
aam
lret
sbb
test
call
mov
cli
leave
into
cltd
decl
sahf
sub
test
xchg
mov
push
add
pop
das
jge
and
inc
inc
xor
stos
sbb
test
and
in
fsubrl
sub
rol
and
adc
push
leave
and
push
jo
sub
inc
push
stos
cld
jae
clc
cmp
pop
xorb
pop
push
push
in
enter
call
xlat
push
add
cmp
lahf
jg
frstor
aam
daa
adc
fwait
xorb
cmp
je
daa
xor
mov
or
push
in
push
lret
xor
test
cmp
push
sbb
cli
mov
xchg
aad
aaa
jp
insb
jns
cli
add
cwtl
cs
mov
add
xchg
lock
divb
adc
xor
outsb
insl
fiadds
lods
xchg
adcl
test
cmpsl
pop
cmc
push
push
push
js
cmp
nop
sub
jne
xor
inc
rclb
bound
add
or
xchg
sbb
xor
std
cmp
fcomps
les
loop
fs
push
jo
jno
int
dec
in
adc
mov
shl
sbb
xchg
xchg
mov
push
sbb
inc
movsl
rcrl
rcrb
dec
push
push
loope
imul
cld
and
cli
inc
jge
jnp
andl
in
shrl
stos
cmp
xor
cmp
push
dec
sub
pop
shll
jns
test
pop
dec
mov
dec
pop
sbb
adc
inc
xchg
pusha
lret
mov
and
or
fidivl
inc
xchg
jmp
dec
push
sub
scas
dec
insb
lea
mov
es
add
movsb
mov
std
div
hlt
or
mov
dec
stc
xor
mov
mov
icebp
and
xchg
push
sbb
repnz
jecxz
scas
dec
ret
adc
sub
or
test
dec
jae
sub
cmp
cmp
ja
mov
test
xor
sbb
sbb
and
xor
clc
mov
notb
cmp
sahf
lock
int3
push
in
or
pop
aas
cmc
out
in
outsl
cmc
add
outsb
pop
lret
insb
nop
rol
aam
push
dec
adc
lods
mov
mov
mov
add
xorl
xchg
jmp
mov
shll
vpmaxsq
xor
push
out
out
jp
mov
or
add
adc
mov
std
icebp
push
mov
test
aam
insl
or
add
aas
adc
push
jle
mov
mov
ja
andb
in
ds
popf
out
mov
lock
sub
mov
jbe
out
dec
rorl
or
lret
sub
lahf
push
lea
leave
out
rol
mov
imull
pop
lock
xchg
adc
les
or
test
daa
xchg
bound
shr
and
sub
jge
sbb
pop
mov
ror
push
sbb
aad
lds
lcall
and
xor
pop
pop
jle
loop
or
inc
mov
test
aas
add
pop
or
mov
je
mov
pusha
sbb
xor
out
mov
fbld
add
mov
push
int
loopne
inc
or
cmp
es
mov
inc
aas
mov
xorl
push
shlb
out
test
dec
je,pt
aas
jmp
fbld
in
fimuls
sub
or
arpl
stos
mov
fs
mov
int
cmpsb
dec
push
fyl2xp1
jp
mov
and
js
push
es
pop
and
mov
mov
int
std
into
insl
mov
mov
sbb
mov
add
mov
rolb
pop
shr
inc
jp
gs
stc
mov
xlat
xchg
popf
pop
fucomip
lods
outsb
jg
adc
decl
repz
sbb
inc
sarb
int3
popf
cmc
les
jecxz
push
cltd
orl
jbe
stc
std
mov
push
cmp
frstor
and
xor
nop
cmp
movsb
inc
mov
lods
clc
call
lret
cmp
cmp
ficomps
cmpsb
jp
mov
rol
mov
push
loope
inc
notb
fdivs
loopne
xor
enter
sahf
call
int
add
cmp
scas
std
in
and
jno
ror
test
sbb
jb
loope
or
inc
mov
rolb
outsl
cli
dec
int
dec
cmp
cltd
jo
insb
fmuls
sbb
push
mov
add
xlat
jmp
xor
mov
pop
clc
and
xor
jne
jne
in
mov
sub
ja
or
loope
daa
jge
and
push
das
repz
iret
fisubrl
inc
mov
dec
cmp
ja
inc
sahf
pop
add
and
aas
fdiv
cmc
ret
sub
cmp
arpl
jecxz
cltd
pop
iret
adc
movsb
arpl
jo
pop
aas
inc
std
push
jecxz
pop
js
shl
js
cwtl
popf
mov
outsb
jns
adc
test
test
es
jnp
xchg
jo
dec
jecxz
push
rorb
daa
sub
in
mov
stc
dec
jecxz
mov
popa
xchg
or
xchg
mov
das
jbe
sub
js
xor
int3
js
sbb
cmc
push
scas
rep
or
jp
mov
ret
pop
dec
dec
iret
cmp
pop
rclb
cmp
enter
fcomp
mov
cmp
or
js
or
mov
sahf
cltd
imul
pop
sbb
insb
cmp
iret
adc
scas
xor
xchg
mov
mov
cvtps2pi
pop
jp
cmp
pusha
jge
mov
mov
bound
push
cmp
push
xor
pusha
lea
and
xor
adc
insl
pop
int3
in
or
pop
dec
rorl
xchg
cmp
cmp
and
add
mov
jl
mov
mov
ljmp
sub
xor
ss
jmp
mov
adc
mov
mov
cmp
cmpsl
inc
call
push
inc
rolb
and
test
in
and
aam
mov
inc
je
aaa
and
cmp
lods
mov
cmpsl
divb
addr16
aad
cmp
andb
into
xchg
out
jp
hlt
rcl
pop
push
sub
es
stos
pop
xchg
jo
cli
das
jbe
mov
add
je
add
and
dec
sbb
xor
pop
inc
fwait
mov
ret
clc
ss
je
lret
fs
pop
add
iret
call
pop
sbb
inc
pop
xor
inc
movsl
dec
sub
cltd
dec
jno
icebp
xchg
add
das
fs
or
and
xchg
mov
push
repz
pushf
ljmp
outsl
inc
dec
enter
sti
adc
lds
cmp
xchg
mov
aaa
jg
ret
rcll
cmp
mov
mov
xor
push
enter
dec
fstps
andl
lods
add
add
sbb
rcr
mov
mov
fwait
push
shr
std
mov
mov
pop
movsl
mov
ret
pop
mov
jg
mov
and
dec
ja
sbb
sub
rcl
mov
stos
adc
sub
jmp
push
jg
jge
test
dec
dec
test
jne
jne
out
jle
jl
push
sti
adc
mov
push
mov
xor
inc
xor
xor
outsl
jge
xchg
loop
fldenv
adc
shl
add
rolb
or
pop
or
aas
stos
xlat
xchg
sub
add
popf
mov
out
es
shrl
pop
dec
in
addr16
jae
adc
les
jnp
es
mov
adc
pop
adc
aas
leave
jne
push
add
xchg
ljmp
xchg
test
and
xchg
ret
dec
les
scas
cmp
lret
ss
repnz
fwait
insb
push
sahf
xor
sbb
outsb
pop
gs
movsl
pop
mov
sbb
cld
lret
std
daa
xchg
int3
movsl
cmp
xor
testl
les
lods
mov
test
scas
or
js
cmp
psubusb
clc
cmp
lea
mov
dec
ret
mov
test
imul
leave
aaa
sarl
adc
sub
xchg
xchg
pop
popa
xchg
dec
push
xor
sub
out
mov
dec
jge
cmp
sub
stos
mov
fwait
movsb
mov
or
add
dec
sub
shlb
mov
cmp
es
cmc
pusha
sub
sbb
and
jmp
adc
mov
pop
movsb
mov
push
inc
or
std
enter
mov
inc
xchg
movsl
mov
sub
out
sahf
jbe
ljmp
mov
aad
imul
arpl
outsb
fsubr
std
mov
fstp
andl
xor
into
iretw
mov
cmp
mov
shlb
xor
js
or
pushl
xchg
adc
jae
xchg
outsb
mov
repz
repz
lret
add
sub
xor
mov
mov
mov
scas
call
or
scas
and
pop
fdivs
imul
out
push
adc
cmp
addr16
xchg
adc
fnstcw
dec
inc
lahf
loopne
adcl
in
and
mov
adc
inc
cli
sbb
pusha
push
pop
xor
arpl
in
sbb
sbb
and
dec
xor
pop
stos
scas
or
aad
jmp
mov
xchg
fbstp
je
adc
es
fdivs
leave
pop
push
jge
add
rcll
sahf
int
inc
subb
jnp
out
sti
lods
dec
ljmp
test
dec
movsb
mov
mov
sbb
jns
fisubl
loop
add
lods
and
ljmp
pop
add
adc
cltd
aad
adc
pop
push
inc
xchg
repz
adc
adc
cmp
ljmpw
jne
push
or
pop
mov
mull
sub
ret
jp
xor
popl
js
inc
imul
lea
push
pop
or
aad
fwait
aam
adc
pop
aas
mov
lock
ret
movsl
mov
or
adc
lea
stos
in
std
push
ljmp
dec
int
and
xchg
ret
push
pop
inc
fld
jno
sub
std
cmp
and
insl
sub
daa
mov
push
int
xor
idivb
aas
stos
dec
shl
mov
sub
repnz
cmpsl
shl
aaa
push
sti
hlt
adc
dec
rclb
pop
in
gs
idivb
push
idivl
cltd
or
xchg
jle
xchg
jo
lea
sysenter
insb
inc
xor
lcall
pop
dec
or
push
jbe
mov
scas
into
add
push
push
adc
lock
sbb
or
adc
push
out
int
cmpsb
xor
pop
pop
and
scas
dec
andb
insb
lret
push
in
mov
push
aad
mov
rclb
mov
pop
push
popa
test
jp
mov
xor
cmpsl
xor
pusha
je
mov
je
dec
loope
subl
add
fbld
hlt
ja
push
xor
in
mov
scas
push
add
mov
cs
pusha
push
test
sarb
push
cmc
push
ljmp
adcb
cmp
cmc
mov
pop
push
jns
insl
fsubs
dec
cwtl
cltd
cmp
mov
cmpsl
adc
fs
cmp
cwtl
imul
test
add
dec
jl
fnstsw
xchg
leave
leave
push
popf
adc
inc
into
cmp
adc
dec
ror
push
out
inc
xchg
xchg
adc
cmpsb
sbb
and
sti
mov
rorb
jg
mov
daa
out
sbb
pop
or
imul
ss
adc
shll
roll
pop
jnp
jno
sbb
push
cltd
movsl
jge
sbb
add
mov
test
clc
inc
xchg
out
into
ret
bound
jne
inc
in
scas
cwtl
jp
outsb
jmp
mov
mov
pop
pop
pop
mov
not
or
jno
lock
push
jo
fwait
xchg
stc
mov
and
repnz
and
lahf
xchg
rol
sbb
mov
aam
pop
fdivp
jle
jbe
mov
add
mov
ja
popf
xchg
pop
or
outsb
or
dec
adc
pusha
fidivl
pop
sub
loop
cmp
jnp
jne
sbb
popf
xchg
cmp
sub
inc
cmp
push
push
push
push
bound
mov
and
ss
mov
pop
push
xchg
jns
mov
pop
popa
fbld
das
aaa
pop
test
sub
imul
push
cli
imul
jae
inc
pop
pop
jno
cs
jecxz
cwtl
xor
adc
cmp
push
lods
and
add
in
icebp
jb
sbb
clc
sahf
leave
call
push
fnsave
jae
sahf
cmp
adc
inc
addb
movsl
out
aas
sbb
jb
xor
loop
rclb
xchg
and
sbb
pop
xchg
ret
jl
cli
not
jno
cltd
sub
inc
add
and
sbb
mov
imulb
shrl
scas
xlat
inc
lret
cmp
push
adc
int
repz
fisttpll
inc
inc
pop
or
sbb
outsb
xchg
stc
mov
add
sub
in
push
pusha
push
and
xor
jle
data16
or
dec
jg
mov
idivl
cmp
pushf
mov
push
mov
clc
outsb
jnp
shl
jne
xor
mov
popa
dec
cmp
dec
push
cmp
cltd
or
insl
jo
jmp
push
fimuls
ret
scas
xor
int
lea
cmp
adc
fld
fnstsw
nop
adc
inc
data16
in
inc
scas
test
or
out
inc
jmp
pop
push
inc
or
inc
outsl
pop
sbb
in
xor
jge
and
sub
dec
pop
pop
xchg
lea
cltd
in
xor
jno
jecxz
test
loope
fs
cmpsb
ficomps
mov
push
imul
pusha
mov
leave
icebp
pop
in
das
dec
pop
ljmp
push
push
inc
lods
pop
inc
mov
or
fld
repnz
xor
fisubrl
xchg
data16
fiaddl
jmp
jnp,pt
daa
sbb
xchg
pop
xor
xor
int
cmpsl
mov
inc
sub
test
clc
sub
popf
cli
sbb
jl
push
shl
mov
cmovg
lcall
shll
fidivrl
xlat
mov
movswl
xor
sbb
xchg
dec
sub
add
pop
cmp
cmp
xchg
test
aam
pop
cwtl
cmpsl
xor
inc
test
test
outsb
ja
lcall
mov
xchg
popa
jnp
test
mov
call
fbstp
stc
iret
pop
lcall
mov
mov
fcomps
sti
push
rclb
or
aas
call
cmp
das
popa
jae
loope
xchg
push
movsl
nop
lcall
pop
push
dec
adc
pop
jmpw
mov
push
enter
sub
jo
push
cmp
rclb
or
outsb
add
ljmp
add
sub
cmp
sbb
mov
push
popa
mov
lcall
out
mov
lea
rcll
es
jle
hlt
out
shlb
pop
jno
xchg
out
push
xchg
imul
lods
jecxz
dec
call
sbb
lcall
sbb
adc
bound
fs
rep
inc
cli
mov
push
push
jmp
push
into
mov
gs
mov
ss
and
test
in
mov
dec
aad
jecxz
mov
adcb
mov
lea
dec
ja
jecxz
mov
pop
push
out
mov
pop
out
shrb
pushf
jno
hlt
popa
in
mov
enter
inc
loope
aad
incb
jno
ret
jg
adc
cmpsb
scas
sti
movsb
fwait
loope
adc
cmp
jg
lock
or
dec
push
xor
jae
pop
mov
addr16
test
call
xchg
sub
or
add
sbb
pop
xchg
int3
ret
daa
jmp
mov
inc
xchg
les
and
lcall
pushf
xor
push
sarb
add
cmp
adc
jp
dec
enter
fsubrs
xor
jg
sbb
add
out
inc
mov
sub
out
lock
inc
movsl
jbe
into
inc
or
inc
in
aaa
enter
inc
shrl
loop
fxtract
jg
xchg
add
xchg
jbe
dec
push
jge
adc
cmpsl
mov
and
aam
xchg
cltd
cmp
or
loopne,pn
jg
inc
mov
inc
jecxz
negl
or
pop
fs
cmpsl
xor
pop
cmc
insl
and
mov
aas
push
pop
xor
mov
pop
jg
mov
sahf
jg
jg
and
out
xchg
inc
lods
iret
lea
sbb
ret
xor
les
pop
clc
int
xor
mov
shld
adc
mov
xorl
xchg
add
and
dec
fcompl
fistps
or
imul
stos
iret
push
dec
fwait
setnp
and
mov
sbb
xor
enter
cmp
test
sbb
loop
fwait
dec
lds
lock
xor
pop
insb
cmpsl
pop
leave
call
fisubs
push
sarl
out
popa
decl
mov
mov
mov
pop
enter
sbb
pop
mov
cmp
or
adc
sbb
dec
ja
pop
scas
jmp
add
inc
pop
push
sbbl
icebp
lds
xchg
in
lret
pop
inc
xchg
out
pop
xchg
data16
es
shlb
lds
fldenvs
pop
push
insl
lahf
lcall
pop
js
mov
fsub
xchg
xor
into
xor
icebp
sar
sbb
cmpsb
cmpl
imul
out
adc
std
rcrl
mov
adcb
lret
movsl
dec
sub
mov
ret
mov
xor
decl
xchg
add
add
mov
mov
mov
lods
fninit
mov
out
loop
mov
dec
dec
stos
pop
jmp
xor
dec
pop
rcrl
out
sub
int
push
cwtl
xchg
shr
in
icebp
sub
mov
int
cli
icebp
dec
push
sbb
out
xchg
fidivrl
inc
cld
fs
add
in
adc
shlb
push
outsl
jmp
cmpsl
les
mov
je
iret
mov
mov
lret
push
pop
pop
lahf
adc
mov
ds
xor
push
subl
subl
xor
cmpb
nop
xlat
sub
dec
sbbb
sbb
add
and
lods
loopne
std
inc
xchg
test
push
pop
or
xchg
lret
inc
repnz
imul
fwait
ds
and
jle
cwtl
mov
and
loop
cmpsl
sub
pusha
push
sbb
je
mov
sbb
jae
pop
test
ja
fisubrs
xchg
sbb
pushf
cltd
shrb
btsl
out
imul
pop
pushf
aas
cli
sarb
repz
arpl
addr16
aad
inc
fprem
and
inc
cmp
cmp
and
cmpsl
lock
push
movsb
and
jae
fdivl
sbb
lahf
push
push
jg
shlb
lcall
js
mov
out
orb
pop
push
xchg
mov
sub
inc
int
xlat
jb
mov
cmp
lahf
jg
popf
adc
dec
std
and
js
lock
mov
mov
scas
lods
xor
jge
rolb
add
cmpsl
sub
pop
addr16
fwait
std
cmc
lock
rorl
in
push
pushf
sahf
or
lods
sahf
cld
into
imul
mov
aam
stos
mov
mov
jp
push
aaa
sarl
ss
mov
stc
loopne
xchg
push
int3
xchg
push
xor
aaa
add
ret
lds
pop
pop
push
lcall
repnz
add
dec
mov
lods
push
pop
fistpll
test
push
mov
lods
xor
jmp
stos
or
js
and
sub
sbb
shll
xor
inc
inc
popa
xor
je
xor
lahf
pusha
int
int3
test
lcall
cmp
mov
cld
fidivs
dec
stos
mov
mulb
jmp
mov
mov
sahf
push
sbb
fcompl
pop
cmovp
dec
arpl
sbb
movsb
push
and
hlt
jge
leave
leave
jl
cmp
aas
cmp
xchg
add
outsb
insl
cltd
cwtl
insb
popf
jl
aad
xchg
pop
push
jle
adc
mov
call
aad
int3
xlat
or
jecxz
mov
sub
fs
pushf
mov
pop
add
test
inc
inc
mov
xor
mov
sbb
mov
add
lret
pop
jne
or
enter
jle
sbb
call
les
mov
add
ret
divl
or
push
nop
popf
mov
and
pop
lcall
push
rorb
sbb
pushf
rcr
jp
shlb
pop
popf
cmp
add
fildll
and
mov
clc
add
and
ror
sub
addr16
mov
add
aaa
jg
lret
dec
pusha
mov
je
xchg
loop
loope
leave
jns
sbb
pop
je
or
xor
daa
xlat
sarl
cmpl
inc
in
test
push
push
jns
stos
pop
pushf
es
cmp
inc
loope
mov
fstl
inc
mov
add
adc
xchg
pop
sub
iret
mov
adc
pop
filds
jnp
lret
ss
out
mov
cmp
and
jmp
cmp
push
out
ds
pushf
into
and
or
lods
push
and
gs
mov
mov
mov
std
es
xlat
out
xchg
xchg
push
add
inc
jmp
cmp
push
push
sub
pop
repz
std
pop
sub
pop
imul
fwait
xchg
xchg
add
enter
loope
mov
jge
imul
clc
cltd
lret
rcrb
outsb
stos
push
jmp
mov
adc
cltd
push
incl
popa
rolb
pushf
push
ret
push
push
jle
push
xchg
adc
aas
jno
push
cmpsl
pop
mov
arpl
popa
ja
xchg
sahf
inc
pop
popf
add
push
test
les
mov
ficoms
arpl
daa
jns
fadds
sbb
lods
push
mov
push
sub
or
inc
aad
xchg
cwtl
into
fs
mov
out
inc
popf
fndisi(8087
cmp
shrl
cld
notl
or
cmpsb
loope
icebp
cmp
lods
das
add
out
pop
mov
sbb
add
or
popf
cmc
add
lret
jge
pop
sub
push
pusha
inc
or
clc
mov
cs
mov
fdivp
cmp
scas
push
iret
push
in
and
sbb
mov
ret
shll
outsl
add
call
pmulhw
sub
in
mov
pop
lcall
es
pop
jp
push
subl
ret
add
scas
inc
out
sti
loop
jns
addb
sahf
lcall
cli
ret
xor
mov
ret
idivb
push
cwtl
sbb
jl
mov
test
push
daa
push
test
fcompl
or
cmp
repnz
push
mov
jmp
jl
cmc
sub
mov
jno
jns
call
int3
jne
outsb
cmp
cmpsb
push
test
cmp
push
sub
add
sbb
jl
cmp
pop
lahf
adc
int
ret
jno
mov
dec
inc
loopne
mov
fbstp
cli
movsl
or
into
nop
scas
xlat
out
xchg
push
inc
adc
push
addr16
cwtl
mov
and
jle
ret
icebp
jns
sahf
mov
mov
cltd
test
lret
inc
xor
notb
pushf
inc
inc
mov
fildl
dec
lret
fstl
subb
sbb
ret
lods
sub
mov
sbb
scas
and
enter
mov
jl
outsb
outsl
or
int3
xchg
inc
cmpsl
movsl
push
lock
cmp
or
stos
mov
imul
cmp
xchg
pop
jb
mov
add
sbb
xchg
in
lods
aam
mov
stos
dec
cmp
out
repz
repz
jle
arpl
bound
xchg
dec
int
shlb
jae
cmpsl
mov
jmp
add
ljmp
cmc
dec
popf
and
adc
xchg
dec
mov
out
jmp
insb
lods
mov
xchg
fsubrl
cmc
pop
imul
jmp
fidivrl
fisubs
sbb
nop
sbb
jecxz
pop
daa
mov
add
fcompl
inc
ljmp
lcall
sbb
loopne
mov
dec
mov
aaa
out
cmp
in
and
mov
icebp
add
mov
sahf
mov
loopne
ja
lret
fadd
sub
es
insb
rcl
loope
ret
mov
in
sub
test
fnstcw
jle
jns
pusha
sbb
pop
adc
and
cmpsl
cmp
push
out
aaa
lods
mov
jne
cmp
dec
and
out
push
test
pop
mov
outsb
cmp
push
xor
xchg
cmp
mov
mov
add
fcoml
cmp
push
mov
jbe
stc
test
jecxz
jge
scas
shll
ss
jns
lods
xor
adc
cmp
pop
hlt
repz
loope
shrl
movsb
aas
in
mov
lods
jg
jo
add
mov
fisubrs
cmc
push
or
mov
mov
pop
int
mov
enter
cli
xor
notl
cmpb
cmpb
test
pop
mov
adc
xchg
rcrl
sbb
scas
ss
mov
mov
lcall
inc
imull
mov
lret
mov
loopne
xor
stos
jmp
popf
outsb
dec
leave
or
jp
adc
aam
dec
push
sahf
pushl
lret
cli
pop
add
push
in
mov
ret
adc
sbb
out
inc
lods
movsl
mov
xchg
mov
adc
popa
mov
addr16
fcoms
inc
mov
fwait
scas
mov
add
cltd
dec
ficompl
jae
sbb
scas
mov
pop
sub
ljmp
mov
fstpl
repnz
mov
mov
sub
pop
mov
push
lock
popl
mov
leave
mov
sub
adc
hlt
mov
cmpl
cmp
in
loope
movsl
pop
in
sti
cmc
xchg
lcall
mov
sahf
scas
js
pop
lret
ja
pop
adc
cmp
pop
jbe
out
lea
movsb
pop
outsl
mov
in
into
lahf
pop
mov
divl
mov
hlt
cld
xchg
cmp
dec
cmpl
push
mov
fmul
adc
sub
mov
repz
in
lret
ljmp
icebp
es
xorl
outsl
sbb
mov
lahf
orl
aas
pop
add
jge
push
cmp
outsb
mov
lret
movsl
cli
cmp
ja
fadd
push
inc
adcb
mov
out
push
sub
jno
outsb
dec
jl
cmpsb
sbb
sub
inc
jecxz
das
sbb
das
push
and
jo
cmp
push
sub
sti
push
aad
lret
iret
jecxz
lock
mov
je
jb
sbb
out
pop
lahf
dec
inc
iret
sub
popa
xchg
data16
push
jecxz
arpl
mov
mov
jle
inc
call
pop
mov
icebp
aas
inc
add
or
dec
shrd
or
mov
pusha
inc
rcll
ja
fs
jle
xorl
in
pop
sub
dec
lods
push
push
sub
sub
outsl
add
push
bound
pushf
insl
orl
xor
mov
into
mov
cmpsl
clc
xchg
imul
push
popa
xchg
lds
jmp
adc
ljmp
push
sbb
ret
mov
dec
and
inc
jl
add
shll
push
mov
scas
aam
xchg
into
mov
xor
roll
not
mov
xor
pop
adc
pop
adc
xchg
mov
lea
xchg
mov
das
or
lods
fs
mov
repz
aam
in
or
rolb
mov
ficompl
sti
repz
dec
xchg
mov
mov
xchg
outsb
sbb
jae
sarl
lahf
movsl
dec
scas
testb
adc
sub
inc
mov
clc
movsb
mov
sbb
fidivl
sub
fadds
mov
pop
jnp
xchg
push
adc
sbb
and
jo
sbb
loope
les
insl
ret
mov
push
gs
scas
mov
movsb
xor
popf
dec
mov
or
dec
ss
jns
xchg
jp
xor
sbb
das
mov
rorl
jl
fmull
mov
sbb
dec
adc
lds
jecxz
pop
cmpsb
dec
int
add
stos
icebp
addl
push
pop
int3
pop
imul
sbb
sbbb
ret
clc
fldenv
xchg
popf
pop
cli
stc
mov
mov
les
int
sbbl
dec
jne
or
ret
ret
imul
push
mov
add
mov
pop
lods
hlt
mov
xchg
pop
xlat
xchg
orb
loope
adc
xchg
push
and
out
ja
pop
das
cmpsl
mov
dec
pop
lcall
cmpl
lds
aaa
push
adc
xor
and
mov
jns
mov
inc
shlb
adc
test
les
es
jno
insb
sbb
mov
ret
ljmp
push
xchg
decl
mov
sub
inc
inc
stos
nop
dec
cmc
or
cmp
adc
dec
sub
push
xchg
lret
dec
cli
xchg
int
adc
lcall
sbbl
inc
sub
loop
cmpsl
push
inc
and
sub
pop
dec
push
int3
cmp
mov
ficoms
push
lcall
xchg
add
test
repnz
push
sub
test
fsubs
push
pop
lods
pop
adc
push
push
dec
pop
push
jne
frstor
inc
in
and
jg
mov
xor
xchg
push
add
in
inc
enter
pop
adc
adc
or
dec
adc
loope
mov
mov
add
inc
adc
ss
dec
out
in
mov
add
subl
sbb
jge
fists
test
imul
jl
outsb
nop
imul
xlat
mov
fwait
clc
mov
scas
scas
popf
mov
fists
enter
test
fcompl
xor
std
es
pop
add
lret
push
sub
cwtl
orl
fstp
cli
add
sarb
pushf
pushf
pop
sub
insl
andb
int3
jo
sahf
ss
dec
push
loopne
sub
ret
lret
push
xlat
inc
xor
push
and
mov
jmp
movsb
sbb
cmp
movsl
movzwl
or
or
je
scas
test
aam
jmp
xlat
gs
popa
xchg
cmc
push
cltd
cltd
lret
mov
cmp
out
stos
out
pop
fs
dec
dec
jmp
mov
dec
popa
mov
mov
inc
mov
mov
cld
sti
pop
or
jnp
popa
fcomps
ret
aam
pop
adc
push
in
mov
int3
out
lods
call
xor
shll
and
mov
add
jbe
cli
inc
push
loopne
mov
mov
push
xchg
ja
cwtl
sti
pop
cld
cmpsb
mov
jno
push
int3
mov
adc
jg
mov
xchg
xor
add
mov
out
lods
xchg
imul
inc
popl
xor
out
push
mov
dec
xchg
popa
pop
adc
xlat
push
dec
jo
pop
ds
mull
mov
jns
push
mov
fsubl
lea
pushf
les
out
mov
ret
push
adc
jl
cmp
outsl
cmpsl
xchg
mov
jmp
idivl
or
jge
movb
inc
xor
sub
pop
dec
pop
cmp
cmp
out
dec
loopne
mov
push
mov
cmpsl
xchg
cwtl
lock
pusha
mov
push
xchg
mov
ret
daa
jp
inc
ljmp
xchg
inc
int
mov
pusha
cmp
ret
sbb
mov
ss
pop
and
pop
hlt
push
jnp
cmp
rcl
enter
in
mov
loopne
int3
mov
test
adc
loopne
fucomip
or
les
mov
dec
sub
sbb
aad
adc
pushf
enter
aas
sbb
clc
jb,pn
dec
addl
sarb
aad
xor
pusha
call
add
xchg
jl
push
sub
push
xchg
mov
lds
mov
addr16
mov
ja
enter
addl
data16
and
adc
loop
nop
xchg
mov
lods
jnp
xor
xor
mov
notl
outsl
aaa
fnstsw
ret
push
femms
sub
inc
cmp
add
ja
add
pop
jmp
mov
scas
jb
js
fstpl
rorb
cmp
adc
lods
cmpsb
inc
xor
pushf
rcrl
add
nop
nop
jp
ja
lret
nop
inc
addr16
imul
loope
xorb
dec
xchg
xlat
xchg
sbb
test
dec
hlt
fnstsw
xchg
mov
in
add
push
lods
rclb
push
repz
mov
cltd
fistl
cmp
std
xchg
adc
sub
fwait
xchg
jae
movsb
js
mov
lret
jecxz,pt
push
mov
jmp
mov
icebp
add
jge
icebp
cmp
jns
push
pop
daa
fsubl
and
iret
popf
push
cmpsb
popa
mov
mov
std
or
push
mov
sbb
xchg
inc
gs
fisttpl
sub
cli
repnz
sub
lcall
dec
inc
jg
scas
lahf
and
adc
push
sbb
push
push
push
cmp
dec
scas
call
add
and
push
cltd
je
icebp
testl
inc
aam
in
subb
pop
push
jae
mov
movsb
and
pop
rol
sbb
mov
inc
ret
sbb
shrb
shl
add
jne
dec
add
and
inc
push
sub
int3
push
xchg
pop
rolb
les
add
pop
icebp
dec
lds
shlb
mov
idivb
into
sbb
xchg
int
inc
cmc
stos
mov
not
push
flds
pushf
loope
fildll
ret
xchg
inc
fistpl
xorb
enter
mov
xor
lea
iret
cmp
mov
pop
sbb
or
jge
stos
mov
outsb
push
sbb
sbb
adc
insb
mov
mov
nop
mov
and
add
dec
lods
pushf
movsl
out
js
cmp
mov
in
mov
sbb
or
jns
dec
mov
sbb
lret
popl
cmp
enter
roll
and
pop
push
adc
and
mov
fs
xor
add
mov
pop
sbb
stos
cmp
adc
xor
mov
test
lret
jge
and
test
icebp
int
sub
cmpsb
dec
pop
pop
fsubrs
mov
notl
std
inc
gs
pop
ljmp
mov
sti
in
mov
aaa
out
or
rcrl
jl
adc
aad
pop
fldt
mov
cmpsl
in
dec
mov
out
mov
lods
xchg
or
insl
into
dec
pop
lahf
mov
cmc
sub
jge
pusha
xchg
rclb
mov
push
and
ds
and
jbe
stc
push
cmp
xchg
or
xor
add
push
sbb
cmp
xchg
sub
jo
or
insb
jmp
lret
fs
push
cmp
xor
or
fwait
dec
mov
push
inc
xchg
inc
icebp
mov
xchg
popa
out
add
insl
shll
mov
xlat
ljmp
inc
pop
scas
adc
jno
lahf
je
fwait
mov
je
mov
push
adc
test
std
sub
mov
testb
ret
or
and
ljmp
inc
imul
push
shl
mov
ficoml
inc
js
test
jne
inc
das
out
pop
xor
lea
mov
xchg
mov
jnp
dec
or
lcall
xchg
insl
in
jl
mulb
push
arpl
cs
or
mov
mov
fcmove
dec
lds
or
pop
mov
mov
repz
or
int
pop
mov
xlat
mov
sub
sub
and
lods
mov
push
xchg
addl
movsl
ret
pop
xor
sub
add
out
out
lahf
dec
out
rorb
loop
in
push
push
in
cmp
jmp
lods
fsub
mov
lods
inc
leave
push
dec
dec
idivb
rclb
dec
lret
into
jle
rcll
pop
cltd
dec
or
xchg
mov
arpl
pop
in
jg
cmp
ret
cmp
fcomip
xor
push
scas
push
mov
xchg
xchg
andb
subb
dec
dec
cld
outsl
cmc
loop
pop
xchg
rclb
xchg
jbe
mov
mov
inc
imul
pusha
lea
xchg
das
fsubs
out
int3
jmp
dec
push
mov
sub
mov
cmp
pop
mov
adc
dec
inc
fcmovu
orb
in
gs
stos
test
pop
les
iret
lods
ja
cmp
rcrl
rcr
sub
and
addl
push
mov
movsb
or
jecxz
test
mov
addr16
push
mov
mov
pop
xchg
jo
or
jmp
in
aad
add
daa
shrb
add
je
fisttpll
cmc
insb
jecxz
enter
addr16
testl
adc
fdivr
and
aam
ljmp
test
mov
repz
sbb
int3
adc
xor
inc
jb,pn
pushf
cltd
loope
jns
aaa
movsl
mov
sub
sbb
jns
xchg
add
mov
lahf
insl
dec
xchg
adc
test
pop
dec
or
insl
fiadds
mov
popa
cmp
xchg
lahf
push
jmp
aam
adc
inc
jp
and
fdivrl
rcrl
xor
pop
fwait
xchg
push
or
cmc
rorb
cmpsl
mov
repz
push
sbbb
imul
xchg
dec
imul
cwtl
dec
lods
jl
fcmove
mov
cmp
insb
mov
jp
popa
mov
bound
int
sub
pop
into
sub
jle
mov
fsubrl
xchg
jge
pushf
mov
xor
sub
fldcw
pop
or
lret
and
inc
in
xchg
jecxz
cltd
ljmp
push
shrl
and
cmp
in
je
xchg
sti
xor
sahf
mov
sub
mov
addb
and
jp
mov
jmp
jne
movsl
test
dec
xchg
fildll
aam
inc
divl
fwait
out
cwtl
bound
ret
adc
inc
mov
mov
mov
pop
in
mov
sub
ss
stc
dec
sub
icebp
adc
adc
pusha
dec
ficomps
mov
jmp
xor
int
cli
test
xor
sub
adc
dec
sbb
call
fidivrl
repz
sahf
mov
gs
dec
sub
popa
mov
jl
stos
outsb
aad
mov
int3
arpl
pushf
and
inc
lret
xchg
fs
sti
mov
mov
and
sbb
les
sarl
cltd
mov
test
jo
push
testl
push
xor
inc
jl
in
fwait
jge
out
fstl
rclb
adcl
push
jmp
push
jb
sbb
push
scas
mov
std
add
and
loopne
mov
fdiv
jg
or
add
repnz
mov
push
aam
sbb
mov
incb
xchg
cmpsl
and
mov
aas
ss
pop
sub
stos
mov
bound
mov
mov
popf
dec
mov
sub
xchg
jns
shl
ret
adc
fs
pushf
xchg
stos
or
imul
scas
mov
cmp
jmp
inc
mov
fiadds
sbb
mov
xchg
cld
jo
fxch
in
push
and
inc
icebp
push
loop
cli
push
shrb
aaa
mov
pop
fstp
fstp
leave
push
js
lret
xchg
ss
xchg
das
aas
sub
test
pop
push
sub
stc
subb
xchg
popl
pop
jns
lods
jnp
mov
lcall
cmpsb
pop
and
cmpsl
subl
mov
or
and
inc
sbbl
pop
divb
jecxz
add
ljmp
cmp
xor
add
pop
ds
mov
inc
mov
div
sahf
ljmp
or
or
sbb
int3
enter
xor
dec
sbb
sahf
jle
cmp
inc
adc
ljmp
cli
leave
addr16
xor
pop
dec
rcrl
mov
icebp
das
and
dec
pop
dec
rorl
push
sti
scas
fs
scas
roll
sub
mov
dec
sbbb
push
js
add
out
dec
lret
fistpll
mov
xchg
xchg
adc
and
out
add
mov
mov
mov
xlat
mov
fisubl
ret
iret
jo
lds
jmp
stos
inc
push
jmp
lcall
stc
mov
aas
mov
sub
clc
xor
dec
dec
aaa
popa
xchg
popa
lcall
repz
icebp
jge
push
cmpsb
movsb
insl
cmc
negb
push
or
add
mov
xchg
sub
xor
jo
adc
sahf
shll
push
lock
loopne
mov
sub
adc
in
out
xlat
outsl
dec
cmp
test
movsb
ds
fstpl
or
bswap
insb
fisttpll
nop
mov
ja
dec
in
sbb
push
test
rcl
daa
in
dec
into
xor
jg
aad
push
and
sarb
shr
stos
adc
int3
dec
adc
cmp
mov
cmpsl
mov
push
movsl
push
pop
mov
xchg
dec
out
xor
dec
xor
mov
out
daa
dec
dec
lcall
fisttpll
loope
js
pushf
mov
repz
dec
not
pusha
xchg
adc
enter
iret
add
loopne
mov
int
stc
ja
cmp
cmpl
sbb
out
popa
mov
adc
imul
loop
mov
sti
mov
and
lahf
std
dec
sub
mov
scas
or
xor
xchg
cmpsl
int3
push
pop
pop
lret
js
fidivrl
fmul
xor
push
popa
push
int3
ret
and
cltd
out
and
ret
mov
hlt
xlat
es
mov
fwait
icebp
lret
notl
loop
add
or
mov
jge
add
fcoml
sbbb
inc
stos
mov
cmp
shlb
lahf
xor
mov
maxps
imul
and
xor
jl
mov
sbb
sbb
in
dec
cmp
ja,pt
add
test
jb
ret
mov
mov
out
cmp
pop
mov
push
mov
fimuls
push
xor
or
mov
js
imul
lret
nop
or
popa
cmp
sub
das
mov
pop
addr16
lcall
bound
in
fcmovnu
jecxz
shlb
fs
leave
push
xchg
jp
dec
popf
gs
loopne
ljmp
sahf
in
inc
pushf
adc
push
repnz
push
sub
in
mov
push
cmp
and
pop
test
pop
jns
addb
pusha
jle
sbb
inc
xchg
js
xor
jecxz
pop
xchg
push
jnp
out
loopne
aas
out
repnz
in
pop
cmpsl
testl
fs
test
mov
cmp
subl
cmp
test
mov
sahf
dec
adc
pop
insb
pop
mov
cmpsl
leave
jl
sqrtps
dec
push
lds
dec
mov
popa
lods
push
mov
stos
mov
es
sub
mov
mov
lret
mov
mov
sbb
jo
or
orl
sbb
repz
andb
adc
dec
cmp
ror
pop
xchg
sbb
stos
push
out
xor
mov
stos
sti
jmp
imul
pop
sbb
or
or
mov
cmp
inc
aad
gs
iret
push
sbb
cli
fisttpl
out
inc
pop
jp
rcll
cmp
sbb
shlb
adc
mov
mov
inc
push
dec
popf
mov
and
or
test
push
fcomps
popf
inc
push
mov
shll
iret
push
ret
outsb
movsl
stc
jmp
popa
inc
sbb
push
data16
mov
add
dec
sub
bound
mov
scas
mov
inc
jle
roll
lahf
fs
xor
fdiv
xchg
jge
jns
movsl
mov
inc
jmp
les
aam
fcompl
out
ss
mov
mov
shl
test
cmc
dec
add
orb
or
push
xor
icebp
in
pop
ret
es
repz
mov
in
ljmp
pop
cmc
lahf
mov
and
and
shlb
and
mov
xchg
push
testl
jg
add
lcall
mov
fnstsw
and
dec
or
cmp
mov
inc
cmp
test
js
jge
aaa
pop
add
xchg
rcl
mov
xor
xlat
push
sbb
or
pop
inc
mov
loop
mov
ljmp
popf
adc
jo
shll
inc
push
and
sbb
pop
mov
push
push
loope
push
mov
mov
add
aaa
in
stos
jmp
add
fstpt
jae
daa
xchg
mov
lock
mov
dec
nop
mov
int3
pop
lods
cmc
imul
push
stos
inc
out
dec
daa
frstor
mov
fstps
cmp
or
mov
cmp
xchg
add
adc
cmp
inc
out
imul
cmp
lea
sub
jle
ds
je
sbb
mov
aaa
push
cmp
fwait
sub
pop
ja
dec
clc
mov
fiadds
test
call
dec
stos
push
push
mov
out
dec
mov
cmp
adc
mov
jmp
mov
adc
shll
inc
repz
addr16
push
push
sub
enter
sub
popa
lcall
mov
shlb
push
sbb
inc
inc
mov
xchg
fildl
lret
shll
ja
aad
pop
loope
imul
lret
ja
fcompl
test
ret
maxps
in
xorl
ljmp
std
sub
test
movl
js
lcall
push
dec
pop
aas
mov
pop
mov
jg
push
jno
lock
bound
sub
je
xchg
fsubrs
or
xchg
iret
and
and
dec
daa
nop
inc
cmp
jo
sub
lods
insb
hlt
inc
sbb
jno
mov
or
ficoml
lea
dec
pop
push
int
xchg
test
push
adcl
jge
jmp
push
jp
cmp
icebp
scas
push
shrb
mov
jb
and
cli
sbb
sbb
je
jge
clc
jae
sub
ficoms
xchg
repz
lcall
popf
test
add
or
in
push
and
pop
dec
lods
lods
pop
addb
cmp
or
sbb
sahf
mov
cltd
js
in
xor
push
mov
push
out
add
add
push
sub
out
push
les
xchg
mov
sub
int
leave
roll
scas
or
lcall
in
cld
loopne
out
addb
and
jb
dec
adc
jno
push
and
test
push
scas
mov
adc
das
add
out
stc
inc
add
sti
inc
stos
xchg
or
stos
into
mov
mov
or
adc
mov
pop
mov
jg
push
ljmp
jbe
or
xor
sub
sti
out
jmp
je
and
ds
pushf
aam
ljmp
push
or
addr16
test
mov
push
xchg
pop
dec
or
ret
and
xchg
sarl
jns
arpl
cli
sub
into
xchg
sbb
add
cmpsb
bound
and
jo
icebp
clc
mov
cmp
inc
mov
pop
sbb
test
jg
or
adc
jg
in
pop
movsb
cmp
nop
push
jo
repnz
pop
rorl
lcall
sub
pop
loopne
add
dec
insl
es
sub
push
cmp
jno
jae
lahf
pop
mov
mov
loop
movsl
dec
push
add
push
or
es
sarb
pop
add
test
mov
ret
pop
cwtl
push
inc
jecxz
adc
lods
sub
xchg
and
adc
inc
xchg
cld
and
push
or
jecxz
pop
mulb
pop
and
mov
icebp
mov
adc
aaa
and
test
pop
or
pop
cltd
xchg
sub
and
outsb
mov
mov
adc
sub
pop
test
cmp
mov
in
xchg
or
fsts
aaa
xchg
repz
insb
outsl
out
push
dec
stc
std
inc
cwtl
cmpsl
xchg
sub
sti
pushf
lods
pushf
pushf
fists
frstor
mov
cwtl
add
adc
sbb
insb
jne
jmp
test
push
repz
movsl
jne
mov
mov
inc
mov
cld
fs
sbb
xor
jmp
mov
or
add
dec
dec
iret
add
push
pop
mov
call
sbbb
cwtl
push
mov
fists
adc
out
xor
sahf
test
jl
pop
insb
gs
mov
or
cmp
push
sub
shll
and
xorl
push
jge
jns
scas
movsl
mov
pushf
in
fisubrl
pop
mov
jmp
popf
dec
jg
push
iret
rcrl
sub
in
es
dec
adc
jmp
pop
lcall
mov
or
outsb
dec
push
into
setae
cmpsb
pop
push
jle
jo
pusha
or
pop
xchg
push
and
daa
add
fistl
xchg
sbb
out
xchg
popa
cli
inc
and
mov
test
and
pop
or
fnstenv
xor
int3
daa
adc
xlat
push
shlb
mov
shrb
repnz
int3
and
jnp
add
jl
sahf
xchg
lds
mov
dec
dec
sbb
or
pusha
pop
dec
rorb
sahf
call
insb
push
ja
xor
mov
out
and
jle
sarl
push
fadds
dec
cmp
inc
push
mov
jbe
mov
mov
inc
mov
loope
movsb
rclb
dec
ss
rsqrtps
nop
sbb
sub
call
dec
daa
mov
mov
sbb
cli
xor
lods
clc
enter
cwtl
xchg
xchg
mov
fwait
out
xor
jmp
inc
je
aaa
dec
dec
adc
mov
pop
es
inc
fld
out
lea
push
adc
or
xor
dec
and
mov
xor
push
cltd
js
outsl
aaa
mov
lea
bound
and
xor
das
lods
fs
jmp
push
mov
sbb
sub
and
test
js
jmp
pop
je
lret
dec
xchg
sub
push
out
scas
lods
loop
push
mov
nop
fwait
adc
pop
push
or
ret
dec
fisubrs
andl
and
repz
push
mov
ja
push
dec
push
adc
add
test
aad
xchg
jmp
lret
pop
jne
lcall
ret
cmc
test
daa
cmp
mov
int3
add
imul
push
enter
lret
or
in
add
clc
sarl
imul
sbb
cmc
dec
outsb
out
adc
notb
mov
lcall
inc
repz
pop
getsec
outsb
and
loop
jns
lret
xor
lods
pop
adc
jp
cld
addr16
fimull
ret
mov
mov
sahf
add
scas
push
fxam
ss
push
ljmp
outsb
push
dec
jmp
je
ss
fstl
sub
dec
in
negb
outsl
test
lea
jb
scas
loopne
xlat
orb
xor
in
ret
add
in
cs
out
pop
into
or
in
adc
xor
xor
in
mov
lods
xor
jbe
mov
cmpsl
mov
pop
xchg
and
mov
ja
cmp
add
lea
daa
xor
in
aaa
or
es
sub
jno
ret
pusha
mov
xchg
clc
fdivrs
leave
arpl
sbb
mov
cmp
push
test
hlt
outsl
add
js
dec
adc
popa
xchg
inc
sbb
xchg
or
add
or
push
add
dec
inc
outsl
jge
xchg
test
and
jo
push
icebp
popf
mov
mov
sahf
aad
adc
push
stc
int3
arpl
scas
les
add
addr16
dec
or
xchg
mov
dec
outsb
mov
sub
sub
mov
pop
push
pop
roll
push
pop
sub
ja
xchg
jbe
fs
loopne
lods
mov
in
xor
jns
or
fidivrl
jecxz
inc
cmpsb
std
insb
shlb
out
cmp
jae
lret
cmp
sbb
xlat
out
inc
sbb
xorl
out
jge
cli
in
mov
and
loop
add
insl
jle
jb
lret
int
sbb
fldcw
xlat
pop
hlt
jae
gs
out
out
xlat
push
push
pop
ljmp
mov
icebp
mov
mov
cli
imul
in
add
in
pop
mov
sbb
adc
lea
mov
imul
jo
push
repnz
dec
sub
jge
roll
jge
sub
ret
bound
scas
mov
sub
test
pop
std
add
sub
ja
dec
inc
adc
jno
lea
xchg
fiaddl
xchg
inc
lock
mov
scas
push
rorl
aad
bound
and
dec
jl
int
mov
sahf
xchg
lea
dec
dec
cmp
movl
dec
cli
test
or
fnstcw
adc
mov
inc
lock
pop
mov
sbb
jns
sub
cwtl
icebp
pop
outsl
mov
icebp
vcvtpd2psx
enter
js
into
dec
arpl
pop
stos
add
sarb
and
aaa
mov
cwtl
push
stos
mov
cmp
mov
mulb
in
mov
pop
lods
sarl
sub
nop
mov
sbb
out
mov
rol
das
sub
mov
lds
dec
cmc
push
push
iret
inc
fstpt
lods
cmc
inc
inc
add
xchg
inc
fwait
dec
outsl
and
fiadds
icebp
mov
xchg
add
inc
add
loop
pop
push
jge
pop
mov
aam
cmp
inc
test
mov
lock
cmpsb
push
ret
push
out
pop
mov
inc
inc
jns
in
cmp
mov
jne
pop
pushf
mov
in
adc
subl
les
adc
mov
hlt
movsl
mov
lret
pop
mov
inc
pop
cmp
jae
xor
mov
aas
es
pop
sub
addr16
xchg
jecxz
dec
outsl
movsb
dec
cmp
jmp
ljmp
xor
mov
fisubl
cmp
sub
mov
cmpsb
andb
leave
or
std
ds
and
add
dec
mov
mov
test
daa
lods
and
xor
dec
in
push
and
daa
sbb
xchg
daa
xor
dec
dec
out
ljmp
push
test
shl
sbb
lds
mov
add
mov
xor
mov
push
les
sbb
test
cmpsl
cmp
subl
sbb
outsb
fmull
jne
push
enter
outsl
push
scas
and
jge
inc
in
je
pop
dec
mov
inc
jl
xchg
pop
inc
mov
sub
inc
sbb
das
scas
loopne
std
cwtl
sahf
jmp
ja
xchg
mov
pusha
jns
sbb
mov
mov
out
mov
std
es
jle
mov
mov
mov
add
pop
std
mov
movsl
mov
mov
ja
and
test
sub
dec
jns
sti
lock
pop
mov
int
push
mov
test
stos
rol
roll
mov
leave
repz
lods
mov
inc
out
push
cmpsl
pop
paddsb
dec
lret
stc
hlt
mov
into
decl
lret
xchg
and
pop
es
mov
movsb
pavgb
test
jae
js
adc
push
pop
push
cmp
inc
jmp
arpl
out
icebp
mov
sbb
sub
sbbl
push
hlt
pop
pop
es
arpl
jno
mov
loopne
pop
xchg
imul
in
mov
mov
cmp
sub
adc
jbe
out
imul
jo
pop
pop
jnp
sbb
push
imulb
xchg
inc
or
ljmp
and
cwtl
adc
and
dec
pop
and
xor
inc
nop
mov
and
xor
lahf
pop
cmpsl
popa
and
and
lock
xor
cmp
or
xchg
xor
lahf
adc
inc
lcall
out
stc
jo
cs
fucom
call
fcoms
adc
movsl
sbb
shlb
scas
imul
cmp
leave
aam
jg
imul
cli
adc
lods
ljmp
jne
jo
int
adc
xor
sub
into
lahf
mov
outsl
test
mov
add
into
inc
in
xor
mov
and
mov
mov
sub
pop
mov
mov
sbb
insl
aam
pop
rclb
mov
add
mov
push
pop
cmp
fucomi
ljmp
push
pop
and
xlat
out
lret
inc
inc
mov
jo
flds
imull
xlat
sti
je
sbb
sub
add
imul
pop
and
mov
mov
add
dec
pop
scas
mov
mov
incb
or
or
not
cmp
and
mov
daa
and
leave
fnstcw
sub
test
mov
xchg
sarl
pop
fwait
shll
sbb
sub
adc
mov
add
leave
lahf
popf
cld
and
outsl
ds
repnz
xchg
cmp
cltd
dec
testb
dec
jge
fldenv
and
add
mov
hlt
xchg
repz
inc
push
inc
xchg
push
xchg
dec
loope
xchg
add
jg
and
sub
lea
mov
xchg
cmp
dec
mov
or
dec
movsb
adc
cmp
fs
lock
mov
adc
int3
pop
popa
cmp
xor
iret
adc
xor
xor
stc
jns
add
enter
inc
pusha
std
cwtl
dec
mull
pusha
sub
out
inc
fsts
call
iret
adc
lods
das
mov
inc
jne
ja
push
cs
inc
sbb
inc
push
popa
inc
and
pop
fwait
xchg
ret
inc
pop
push
out
fs
and
lea
sarl
and
lea
dec
and
fidivs
sbb
ja
jmp
lahf
fimull
dec
sub
nop
push
cli
or
mov
adc
or
mov
jecxz
or
push
test
cli
lcall
jns
xchg
leave
xchg
imul
imul
mov
std
addr16
bnd
xor
cmp
js
leave
test
cmp
nop
adcl
push
lock
mov
xchg
sbb
insl
xor
jne
push
sub
adcl
dec
fucomip
test
mov
sub
push
pop
daa
std
push
pop
pusha
xor
jg
mov
mov
loopne
or
sub
scas
mov
cmp
movsb
test
dec
xchg
dec
cmp
sbb
leave
xchg
xchg
dec
ror
xor
out
movzbl
cmp
enter
ja
pop
mov
mov
ss
nop
xchg
mov
imul
mov
add
pop
filds
add
movsb
les
xor
mov
sub
push
and
cld
push
jne
mov
add
test
fisttpll
inc
scas
cmc
andl
fcmove
clc
into
fldenv
sub
les
scas
cmc
mov
adc
xorl
or
leave
mov
xchg
or
pop
mov
jo
jg
mov
out
mov
inc
or
aad
sbb
inc
and
adc
mov
pushf
sub
orb
loop
scas
mov
lds
jno
repnz
es
dec
dec
imul
testl
xchg
mov
rcll
aaa
xor
add
inc
sub
adc
adc
jecxz
sbb
cwtl
xchg
fadds
mov
ljmp
rcl
jbe
xchg
lahf
xor
or
push
cmpsl
mov
inc
imul
sbb
movsb
jecxz
rcr
and
iret
les
push
add
mov
inc
xor
rcrb
lret
scas
negb
rolb
sub
pop
loopne
dec
pop
addl
fs
cld
sub
int
or
mov
out
add
imul
xlat
push
push
pop
pop
test
sbb
out
xchg
ret
movsl
jne
dec
xor
jecxz
shlb
in
arpl
mov
mov
mov
sbb
test
push
jl
mov
outsb
movsb
and
jecxz
or
fimuls
push
adc
aam
sub
push
sarb
lcall
shl
push
daa
sub
push
or
mov
iret
mov
sbb
or
insl
shrl
mov
scas
or
movsb
aad
cmp
mov
and
cmp
lret
xor
clc
cmp
or
cs
fldenv
and
sub
xor
dec
sub
cmpsb
fsubl
fnop
add
test
mov
sub
stos
test
and
lahf
repnz
sub
fstl
in
cld
imul
es
outsl
rcrb
jle
daa
sub
and
out
jb
hlt
lods
pop
addr16
aam
bound
cmp
pop
fstps
and
fisubl
pusha
sbbb
aaa
stos
ret
cmp
or
pop
shrl
imul
sti
shlb
xchg
jmp
rcr
loopne
push
daa
add
xor
arpl
into
js
fildl
std
test
inc
adc
jne
fs
pop
jge
lcall
xor
xchg
mov
stc
inc
roll
push
mov
and
xchg
inc
or
fimull
or
ficoml
insb
je
das
jl
pop
lock
pop
cmc
cmp
addr16
jbe
loopne
mov
hlt
and
cmc
mov
test
mov
jmp
mov
adc
or
insl
ja
push
push
push
fistpll
rorl
sarl
iret
dec
mov
push
out
inc
push
lea
dec
mov
push
out
cmp
aad
mov
and
icebp
out
xchg
dec
sbb
mov
jmp
cmp
xchg
cli
cmpl
sbbb
xor
sub
leave
inc
jmp
sub
pop
push
mov
add
js
imul
mov
cmpsb
push
xor
stos
daa
lds
fldenv
cmpsb
mov
xlat
sub
test
or
jge
push
loope
mov
in
out
mov
sub
cwtl
jns
jge
ror
mov
pop
lea
in
xlat
or
faddp
insl
pop
es
mov
enter
cmpsb
cli
insb
pop
sbb
pop
mov
and
ljmp
and
test
mov
and
cld
sub
imul
or
xchg
les
pop
pop
inc
push
aad
jle
lods
aam
adc
iret
or
outsl
adc
dec
add
mov
mov
sbb
sbb
ljmp
cmpsl
sub
outsl
stos
mov
cmp
cltd
sarb
lods
in
pop
mov
and
cmc
cwtl
inc
jecxz
jno
cmpsl
loop
sbb
or
inc
inc
pop
and
pop
lods
sti
out
lcall
addl
in
in
cli
lahf
cmp
rcll
push
push
mov
mov
out
adc
out
pop
fs
add
out
mov
mov
pop
inc
dec
push
add
stos
imul
xorl
sub
sub
je
fstpl
cmpsb
mov
mov
pop
pop
lret
stos
dec
mov
dec
jle
stc
or
push
test
das
jle
xchg
fnstenv
xor
or
lret
add
pop
mov
xchg
test
pop
or
sub
test
xor
sub
sbb
lds
pusha
jb
mov
or
cli
retw
xorb
mov
dec
sub
xor
cs
movsb
or
lahf
push
push
lret
cwtl
out
dec
jno
lret
xchg
shlb
imul
jp
cltd
cmp
sub
jno
sub
in
mov
xor
push
icebp
and
sub
cwtl
push
push
rolb
xor
jb
sti
mov
fcmovnu
xchg
fimuls
movsb
lahf
ficoml
push
cli
jno
out
lahf
pop
sbb
rcl
les
mov
es
scas
pop
add
mov
sarb
mov
push
sbb
pop
stos
aas
je
clc
in
push
test
jle
mov
clc
fwait
icebp
dec
xchg
in
add
xor
ret
in
idivb
cmc
pop
leave
dec
mov
push
push
inc
mov
and
sbb
pop
xchg
shlb
cmpb
inc
shll
das
push
fstp
add
inc
add
int
xor
mov
insl
shlb
lret
insl
mov
xchg
fiaddl
loopne
inc
cltd
jbe
outsl
pop
test
je
aas
decb
cmp
imul
mov
xor
daa
push
sub
fwait
jnp
inc
cmp
dec
aaa
sbbb
push
push
cltd
jecxz
sbb
jmp
scas
or
das
dec
mov
push
jnp
jecxz
ffree
add
pop
adc
scas
adc
sub
xchg
cld
lods
xchg
in
adc
mov
push
lea
xchg
bound
mov
ret
js
push
or
or
sbb
in
repnz
fcmovnb
fidivs
in
jno
popa
jbe
mov
hlt
aam
or
mov
cli
scas
adc
add
mov
dec
jmp
add
sub
cwtl
ljmp
and
pop
int3
mov
arpl
mov
mov
jmp
and
add
jmp
into
or
jnp
adc
adc
test
rclb
lret
std
mov
fstps
mov
in
adc
xchg
xchg
mov
les
cmp
test
lret
sti
add
sbb
js
aaa
pop
faddl
dec
or
push
int
inc
adc
nop
pop
pop
push
add
lods
ret
outsl
shrb
push
xchg
and
or
add
mov
iret
insl
movsb
pop
ret
mov
mov
jb
arpl
arpl
and
jl
inc
jp
gs
inc
rorl
push
ret
jmp
lock
pop
lcall
push
sub
cmc
rorb
jl
ds
push
dec
push
jp
push
data16
jae
push
cmp
mov
inc
jl
mov
cmp
cmp
and
mov
xchg
push
dec
sub
shll
nop
sub
mov
mov
das
sbb
in
cmpsb
and
xchg
subl
leave
out
xchg
mov
pushf
sti
cmp
rdtsc
pop
test
rcrb
push
insl
push
xor
notl
cs
jbe
mov
jo
cmp
pop
stos
inc
add
ljmp
inc
in
popf
jo
sahf
mov
adc
xchg
xor
and
inc
movsl
les
jns
jo
sub
or
pop
or
ficoml
pop
pop
pop
add
xor
jmp
cmp
cmp
fucomi
negl
adc
or
or
sub
fs
jge
push
loop
add
pop
pop
inc
dec
sub
adc
loop
inc
pop
jg
in
daa
mov
add
std
pusha
mov
sub
daa
xor
adc
shrb
adc
push
cmp
int
xchg
inc
sub
jecxz
push
inc
aad
out
loope
in
adc
and
nop
cmp
jl
rcr
pop
push
mov
mov
push
in
dec
insb
stos
lods
hlt
mov
jb
or
sub
jmp
inc
aad
jae
push
nop
es
mov
xor
mov
iret
daa
movl
push
gs
lock
push
sub
push
pop
mov
inc
test
dec
adc
jecxz
and
mov
mov
scas
rcl
dec
sub
xor
mov
dec
mov
ja
pop
xchg
mov
bound
std
mov
loop
scas
xchg
push
fxch
sarl
push
arpl
push
fstpt
or
out
call
pop
jp
dec
fnsave
xchg
push
cltd
ljmp
hlt
mov
insb
mov
jno
or
jle
add
inc
dec
mull
data16
aad
or
loopne
fcmovnb
or
out
loop
rcrl
enter
stc
sti
inc
xchg
call
mov
adcb
push
mov
jge
movsb
ja
jmp
mov
cmp
pop
andl
add
mov
add
cmp
lods
push
push
inc
decb
inc
out
out
adc
sbb
xchg
shlb
or
dec
in
shrl
mov
fildl
shll
push
outsl
scas
sub
mov
push
lods
push
aam
lock
dec
in
lds
sub
pop
and
out
xchg
hlt
xor
sti
ror
ret
lahf
loopne
adc
inc
adc
nop
sbb
iret
mov
mov
push
mul
movsl
pop
cmp
mov
enter
movb
cmp
inc
mov
inc
adc
call
and
inc
jg
mov
fidivs
xchg
psubb
add
adc
xlat
sbb
stos
or
icebp
push
inc
cmc
rcrb
mov
sbb
jnp
stos
dec
dec
scas
outsb
add
ja
das
rcll
sbb
cmp
movsb
push
lret
mov
xchg
mul
sti
les
es
mov
repnz
mov
inc
and
sub
add
dec
lahf
mov
mov
xor
in
mov
push
add
test
pop
rolb
mov
repnz
jne
cltd
clc
xorl
xor
dec
ss
push
xchg
push
data16
or
and
popa
inc
mov
fnstcw
sbb
mov
dec
push
lea
lret
leave
int3
dec
rcrl
inc
subl
push
movsb
mov
mov
push
adc
sub
cmp
inc
mov
cmp
stc
or
shlb
push
pop
dec
ret
cmpsl
outsb
or
fs
cmp
std
and
push
lods
pusha
add
negl
cmp
sub
popf
jecxz
lods
xchg
pop
push
cltd
or
gs
clc
mov
jns
jge
je
std
in
jns
lds
loop
out
xor
xchg
insb
sbb
mov
sahf
xchg
xchg
add
push
pop
mov
lds
cld
adc
xor
sub
mov
mov
dec
test
stos
xchg
push
adc
jo
in
mov
add
leave
and
mov
ror
fdivrl
cmpsl
xchg
cld
pushf
pop
adc
std
adc
sub
jle
inc
cmc
sub
inc
rcl
xchg
mov
iret
sub
xchg
push
subb
and
hlt
fisttpll
jp
dec
and
mov
das
gs
mov
xlat
ss
jl
inc
lds
lret
mov
jecxz
push
pop
pop
hlt
sbb
fnsave
and
or
mov
out
jl
in
mov
insb
push
imul
lods
repz
scas
pop
fstpt
fdivl
sub
jp
int3
cmpsb
iret
shll
lds
adc
or
inc
or
xor
out
aam
arpl
or
jne
jp
pop
loop
scas
fcomps
lahf
push
mov
mov
xchg
cwtl
mov
andl
test
jecxz
sub
nop
push
orl
push
imul
loope
pop
sti
sti
aas
enter
inc
fists
repz
insl
lret
push
outsb
addr16
dec
mov
push
or
push
fucomi
loopne
xchg
dec
int
sub
rclb
adc
jg
mov
test
stos
daa
sub
mov
xchg
scas
dec
lods
test
enter
mov
inc
cmp
push
icebp
add
add
outsl
jecxz
js
dec
leave
imul
std
jb
add
ljmp
cmp
lea
in
and
stos
lret
nop
das
push
sbb
hlt
push
aaa
js
xchg
lds
cmp
call
inc
cli
in
and
testl
lea
stos
sub
bnd
inc
sbb
lock
sbb
rcrb
xor
mov
xchg
mov
mov
or
test
pop
cmp
dec
mov
push
and
cmp
add
jno
mov
cmp
cmovb
leave
and
mov
jle
lods
fcmove
aas
adc
pusha
test
mov
in
bound
gs
imul
imul
js
push
les
in
jo
mov
adc
andb
sahf
mov
cwtl
jg
sbb
add
inc
cmp
or
loope
and
lock
jnp
fldenv
cli
fidivl
xor
mov
in
inc
inc
and
minps
daa
stos
call
icebp
cmp
jne
cmpsl
jmp
sub
adc
popf
add
ljmp
sbb
in
adc
test
adc
mov
shrl
pop
clc
mov
cmp
xorl
aaa
lret
adc
movsl
mov
sub
aam
sbb
cs
dec
adc
out
testl
pushf
adc
mov
or
sub
decl
aas
pusha
decl
mov
lods
mov
aas
mov
push
cmp
out
fcmovnbe
jl
fcmovnbe
lods
xchg
das
adc
stos
sub
pop
inc
aaa
fsub
mov
cld
in
push
xor
pop
mov
inc
xor
call
daa
out
fwait
add
mov
or
jmp
sub
xchg
mov
shrl
mov
and
push
outsb
dec
fld
adc
lds
es
out
dec
fcomps
mov
iret
mov
mov
in
js
andb
and
in
inc
xchg
pop
xchg
iret
insl
mov
cmc
ret
jae
and
pop
jb
push
xchg
jnp
or
mov
inc
push
cmc
test
inc
sub
xchg
ret
int3
xchg
das
cmp
adc
int3
jl
adc
adc
iret
inc
dec
mov
adc
sub
cmp
jg
inc
adc
adc
popf
or
pop
test
loop
lds
addl
add
popf
stos
sub
out
pushf
call
fcoml
sbb
jo
imul
fucomp
sub
push
pcmpeqw
ret
call
inc
mov
mov
daa
icebp
mov
mov
aad
lods
rorl
cltd
pop
adc
add
inc
mov
mov
xchg
clc
fsubp
pop
pop
sub
out
mov
in
pushf
pop
pop
push
test
les
shll
push
and
xor
push
mov
gs
sbb
call
cmpsb
repz
insb
adcl
jae
popf
inc
nop
push
fcompl
orl
pushf
adc
and
push
and
or
outsl
xor
adc
or
in
push
and
sbb
mov
test
sub
addr16
cmp
cmp
lods
repz
imul
cmp
ficompl
scas
scas
int3
or
bound
pop
stc
ret
dec
out
lret
sbb
mov
fsubr
sbb
push
sbb
pop
mov
xor
mov
push
les
adc
sbb
xchg
lret
scas
stc
pop
int
imul
mov
mov
int
and
gs
fst
mov
test
dec
sbb
sbb
cmp
dec
std
mov
fistl
sub
in
push
fmull
sub
scas
push
notl
fnstenv
mov
enter
lret
jno
outsb
icebp
pop
out
out
jle
gs
cltd
lock
mov
xchg
sub
stos
or
adc
lods
mull
dec
leave
and
bound
popf
jp
push
fnstenv
repnz
insb
out
mov
mov
xor
xchg
ret
or
test
cmpsl
cmp
and
sti
bound
cmp
std
nop
fisttpl
div
mov
push
jns
push
fsubrs
imull
sub
cs
jge
sub
pop
xchg
mov
jbe
cmp
loope
scas
cmp
and
insb
add
gs
sarl
pusha
ja
xchg
inc
sub
popa
call
rdtsc
rcrb
push
sub
jo
adc
mov
ljmp
inc
mov
popf
adc
aaa
jmp
mov
sarb
xchg
push
mov
or
add
mov
push
mov
es
rol
js
or
xor
pop
popf
shlb
out
inc
xchg
jg
in
insl
adc
push
xor
mov
mov
outsl
ret
jg
and
push
je
call
jmp
xchg
push
sub
movsb
pop
jecxz
sbb
stc
mov
dec
rolb
push
sub
in
inc
imul
sub
xchg
aad
adc
jb
adc
lock
xor
dec
repnz
xchg
sbb
mov
out
sub
aas
or
cli
lds
je
push
mov
lahf
mov
jge
iret
scas
inc
in
shrl
stc
pop
cmp
mov
push
vpminsw
push
add
push
addl
xchg
lds
mov
rclb
push
popf
pop
das
xchg
ret
inc
rclb
xrelease
jge
mov
inc
aas
nop
add
push
jns
movsl
jecxz
aas
std
es
dec
lods
mov
pop
xchg
gs
xchg
loope
lea
dec
push
xor
jle
xchg
add
loope
fimuls
push
inc
cltd
in
and
xor
lahf
and
dec
cmc
sbb
or
add
pop
dec
or
leave
cltd
mov
je
inc
mov
pop
pop
inc
cmpsb
mov
xchg
aad
pop
loopne
and
inc
outsb
pop
mov
cmp
nop
sbb
inc
sbb
push
setg
loope
inc
out
popf
adc
push
fstpt
cmp
push
jo
mov
jmp
mov
inc
sub
fldl
out
mov
and
pop
and
jp
aam
add
cs
lret
cmp
pop
fidivrl
push
gs
mov
les
push
or
jne
gs
in
jecxz
dec
cltd
ret
iret
mov
push
popf
in
rclb
imul
push
popa
imul
out
cli
ja
or
add
cmp
sbb
or
shl
cmp
push
xor
adc
add
lahf
fimull
or
nop
int3
cmp
insl
add
fistpll
inc
hlt
adc
notb
add
lods
sarb
push
push
adc
pop
adc
sub
mov
cmp
sbb
or
hlt
inc
sti
mov
mov
mov
lds
in
inc
dec
cs
pop
inc
pop
repnz
pop
test
sarl
movsb
bound
or
imul
divl
pop
xor
adc
popf
xchg
mov
mov
mov
out
mov
in
sahf
jb
pop
pop
mov
hlt
pop
mov
cmp
rolb
push
dec
jle
testb
inc
mov
int3
jge
xchg
ud1
and
iret
out
jae
clc
or
or
inc
mov
sub
jbe
pop
sub
stos
jae
outsb
and
inc
cltd
xchg
and
lcall
imul
leave
mov
inc
push
cltd
mov
jg
idiv
push
aas
xor
and
pop
std
mov
js
outsb
jg
jae
lahf
push
inc
stc
aaa
push
lahf
sub
adc
push
pop
sub
into
or
or
sbb
cli
test
mov
dec
jge
cmp
mov
lret
psubsb
in
sub
mov
les
call
mov
cmp
fadd
call
rorl
rorl
insl
test
or
xor
mov
popa
cli
mov
sub
sti
aas
push
jnp
pop
and
adc
ss
cmp
outsl
or
int3
xchg
out
and
xchg
mov
mov
stos
inc
outsb
fmul
sub
shl
inc
cmp
push
repz
test
je
stc
mov
insb
adc
in
pop
push
pop
outsb
out
xor
stos
mov
adc
jge
lock
add
pushf
jb
adc
mov
inc
outsb
mov
pop
js
xchg
data16
ds
int
imul
mov
iret
xor
arpl
push
les
dec
jnp
xor
dec
fwait
aam
inc
push
sbb
aad
in
mov
test
jns
xor
sahf
sub
mov
shrl
stos
or
dec
daa
xor
std
pop
loopne
fsubs
pop
pop
sbb
aas
push
jne
xor
pop
cs
mov
cmp
arpl
jb
mov
daa
lret
sub
mov
xchg
mov
loope
call
push
jge
cltd
lock
sub
mov
cwtl
scas
je
scas
xor
in
and
testb
in
sub
out
cmp
inc
pop
adc
add
sahf
sbb
and
push
inc
mov
in
loop
and
movsb
sbb
fistps
ss
adc
mov
dec
test
cwtl
in
leave
enter
rcr
into
es
addl
rolb
pop
mov
or
jae
sbb
aas
jne
push
nop
out
pop
rcrl
mov
and
xchg
sti
pop
outsl
pusha
sbb
or
jb
test
or
lret
inc
popa
repnz
cmp
jl
pop
xchg
icebp
faddl
adc
test
jbe
mov
and
leave
jo
rcl
push
inc
sub
mov
data16
or
sbb
lods
sub
or
xor
outsl
lods
sbb
push
add
sbb
xor
lret
cwtl
xor
cs
xor
adc
scas
cmp
cmpsb
inc
in
and
cli
incb
fcompl
add
or
addl
adc
movsb
push
xor
in
inc
js
xchg
mov
fdivrs
out
fcoml
jns
test
sbbb
jne
mov
divl
mov
xchg
ret
arpl
addr16
fsubp
jge
xor
mov
adc
mov
mov
sub
lods
gs
outsb
xor
mov
loope
pop
jmp
mov
loope
push
lds
std
sbb
ficompl
mov
fildl
fidivrs
clc
ret
dec
mov
or
lods
pop
mov
xor
cs
add
jno
pop
mov
dec
xchg
in
sbb
adc
or
popa
mov
fadds
cmpsl
jl
inc
imul
test
pmullw
xchg
shlb
jbe
call
fstl
insl
bound
cs
cmpsb
and
mov
aaa
jno
jg
js
jo
cltd
fs
add
sahf
ljmp
jo
cmpsb
nop
loope
jge
lds
lret
outsb
ret
dec
out
pop
xorb
lds
in
cmp
inc
add
hlt
cld
das
sub
loope
sti
ficoml
adc
jp
shrb
cmpsl
push
jle
cmp
sub
and
shl
push
xchg
pop
add
outsl
xchg
or
cmp
loope
lods
xchg
xor
gs
mov
movsb
std
mov
inc
push
arpl
sub
testl
andl
ja
fimull
add
and
jge
adc
xchg
cltd
xchg
fwait
in
mov
jp
mov
bound
lods
push
push
mov
jecxz
mov
fistpl
imul
jo
mov
mov
pop
sbb
movsl
imul
cld
rcrl
sarl
lock
call
inc
xchg
pop
xchg
aam
xchg
sbb
mov
mov
aam
out
int
add
push
scas
outsb
jns
mov
mov
aas
bound
xchg
rorl
sarl
jp
inc
cmp
mov
das
pusha
jp
stc
sub
les
xor
mov
pop
add
jb
sub
adc
lds
sub
lock
or
lds
xor
jp
sub
lahf
aam
dec
call
rorl
sbb
xchg
push
leave
lcall
into
push
adc
rcrb
rorb
mov
mov
pusha
int3
arpl
iret
adc
mov
push
and
pop
and
pusha
inc
movsb
sti
ret
cmp
arpl
xchg
sbb
and
fyl2xp1
ret
jnp
lock
jl
jmp
ficomps
lea
ljmp
sub
inc
jle
add
jmp
mov
bound
cwtl
inc
sbb
and
dec
hlt
and
pop
jnp
fcoml
xchg
fs
push
pop
sbb
pusha
aaa
filds
movb
xchg
xor
fwait
xchg
es
int
lret
ficomps
jge
xor
xchg
push
dec
sbb
mov
or
pop
xlat
divl
ja
in
push
jmp
cmpsl
or
or
mov
fdiv
sbb
xor
xor
sti
jge
imul
daa
xor
outsl
adc
in
adc
inc
lea
or
call
rcl
addr16
int
loopne
mov
je
ds
mov
mov
loop
jbe
inc
outsl
rol
cmp
fbstp
inc
popa
or
jne
adc
push
mov
jg
mov
cmp
outsb
jg
out
test
repz
enter
inc
cmp
mov
cmp
fcomps
or
mov
jbe
or
clc
pop
pop
mov
jb
jge
dec
jg
dec
inc
cmp
ljmp
push
mull
inc
push
loope
aaa
pop
call
mov
insb
rolb
ja
stos
sub
rolb
aam
and
push
hlt
xor
xchg
cmpsb
mov
adc
inc
or
mov
mov
adc
jno
add
and
xor
push
js
rcrb
and
shrl
cmp
jbe
insb
arpl
lods
mov
mov
cmp
jecxz
rclb
cmp
imul
or
mov
mov
push
jno
test
xorl
cld
or
cs
push
into
fs
pushf
or
sbb
and
int3
cmp
cwtl
les
stos
stos
mov
xchg
push
int
ja
and
sarb
sbbl
dec
dec
jbe
sti
cltd
out
ja
or
adc
popa
or
ss
mov
jo
mov
mov
push
pop
mov
pushf
add
sbb
sbb
and
lahf
and
sub
jle
sarl
popf
pop
and
pop
out
fimull
hlt
pop
setno
pop
push
inc
sahf
loop
in
sbbb
aaa
mov
mov
mov
add
dec
inc
pop
inc
push
xchg
sbbb
aas
lret
jo
jns
mov
sbb
xlat
sbb
xlat
aas
daa
sbb
inc
call
pop
xchg
cmpsb
jge
in
xchg
xchg
cmp
scas
jo
scas
lea
xchg
push
mov
sub
jbe
mov
jg
cmp
adc
stos
mov
scas
cli
stos
scas
jmp
mov
inc
push
mov
testb
adc
push
sbb
push
stos
cld
dec
jae
std
rorb
inc
loop
popa
ljmp
or
in
mov
rcr
mov
dec
in
ja
pusha
rol
cltd
rclb
cmp
leave
dec
aaa
push
imul
call
inc
stos
outsb
pop
inc
adc
sti
cs
mov
cmp
cmp
mov
loopne
and
icebp
sub
iret
int3
fnstsw
loope
xlat
stc
jmp
scas
mov
mov
mov
adc
lods
outsl
mov
sub
flds
xor
shrl
mov
stc
push
lock
out
das
mov
jp
cmc
cwtl
aaa
rolb
lret
inc
fmull
cltd
dec
leave
mov
fisttps
lret
int
mov
xchg
mov
clc
rcrl
and
inc
mov
pushl
ret
pxor
adc
data16
jg
push
push
ret
push
cmp
ficoml
in
out
repz
dec
cld
popl
je
not
lcall
inc
bound
daa
xlat
mov
lods
or
ss
or
ret
pop
mov
lods
sar
dec
cmp
lods
pop
dec
mov
or
gs
xchg
mov
sbb
aas
add
in
xor
pop
mov
sbb
test
mov
jmp
push
shl
popf
dec
sub
int
fstps
xchg
xchg
xor
lea
push
cltd
test
jns
mov
rcll
rcll
and
lcallw
gs
adc
cmp
in
jp
sub
test
lods
jnp
ja
lahf
rcrl
adc
xor
mov
scas
jp
imull
cmp
rcr
shrl
xchg
mov
ficomps
inc
xlat
and
or
cld
icebp
lods
cmc
sub
mov
fwait
jmp
shlb
dec
mov
or
push
popa
fsubp
inc
fsub
jg
lock
or
push
jns
sbb
pop
pop
jg
sti
sbb
fiadds
sbb
sbb
cmp
inc
cltd
dec
pop
test
mov
arpl
int3
dec
enter
push
adc
mov
or
gs
or
and
xchg
xchg
mov
mov
jne
daa
pop
scas
pop
push
cmpsb
cwtl
dec
pushf
mov
and
aad
sbb
les
cmc
daa
pusha
cmp
mov
sub
sub
and
jmp
and
mov
fcmovbe
lret
sbb
mov
xchg
stc
ds
cmc
xchg
clc
icebp
loop
jge
cld
pop
mov
jns
adc
pop
mov
mov
frstor
push
cmp
imul
int3
lods
icebp
xor
outsl
sbb
imul
lods
adc
or
lods
mov
bound
fdivl
stc
test
arpl
push
rcrl
cmpsl
fwait
arpl
jl
ja
pop
push
jl
imul
jle
sbb
push
push
lock
in
mov
adc
fstpt
fwait
cld
test
popa
adc
and
push
fldl
sbb
dec
popf
xchg
xor
push
jge
test
frstor
cmp
out
hlt
adc
aam
sbb
repz
rolb
cmp
xor
insb
imul
mov
imul
jne
xor
or
inc
cmpsb
out
cs
cmp
cmp
jp
inc
addr16
loop
in
push
mov
push
call
pop
mov
popa
repnz
or
dec
inc
insl
int
daa
xor
fidivrs
in
das
test
jne
shlb
rclb
sar
mov
dec
leave
push
outsb
mov
cmp
sbb
fnsave
out
shll
adc
mov
stos
lock
mov
sub
and
int
aam
rcl
or
outsl
popa
mov
gs
dec
inc
sbbb
xchg
outsb
sbb
cmp
sub
mov
fisubl
lods
stc
jo
jno
dec
adc
aam
sub
hlt
pmuludq
push
jp
lret
out
cli
inc
fildll
and
xchg
xchg
push
ret
mov
xor
push
cmp
add
xchg
ds
aas
shr
push
adc
dec
and
out
add
push
loop
sub
sub
dec
nop
pop
mov
les
jmp
test
cmp
int
out
lds
xchg
stc
mov
push
xchg
adc
lds
jmp
and
mov
test
out
mov
pop
insl
or
stos
dec
ds
enter
mov
mov
cltd
cmpsb
pop
fxch
cmp
ret
cmp
into
mov
das
add
loope
xchg
mov
bound
xor
pushf
loopne
dec
rcll
mov
inc
sbb
dec
mov
out
xchg
cmp
push
add
xchg
inc
and
clc
dec
jno
mov
sub
push
dec
sbb
insl
xchg
cltd
cld
jns
jns
dec
orb
sti
xchg
push
add
addr16
jge
inc
stos
faddl
xor
xor
sbb
cmp
sarb
dec
sub
ljmp
enter
add
test
dec
adc
repnz
test
mov
lret
jecxz
and
aad
cmp
mov
mov
xchg
stc
adc
mov
lds
sub
jmp
fists
jp
cltd
fisubl
ficoml
jbe
push
mov
sub
lahf
or
cmc
mov
jbe
sbb
push
cli
imul
push
dec
pop
add
loope
lret
dec
es
bound
mov
lahf
test
icebp
dec
je
mov
rolb
mov
ja
aam
dec
push
jg
sbb
movsl
pushf
mov
mov
mov
call
mov
mov
sbb
jg
mov
add
mov
mov
push
jbe
test
dec
xchg
jne
lea
pop
sbb
and
fwait
mov
call
fwait
or
lea
push
dec
mov
xlat
xchg
out
cmc
push
sti
dec
lock
adc
loopne
inc
xchg
mov
ret
ljmp
aaa
fistps
xor
xor
ljmp
pop
xor
cmp
outsl
repnz
and
aaa
add
add
test
insb
popa
or
sbb
add
mov
cwtl
cmpsb
movsb
gs
dec
out
andb
adc
sarl
movsb
lds
mulb
xchg
insl
dec
jo
fs
in
scas
dec
mov
sti
jmp
aaa
lcall
cli
dec
loop
out
iret
inc
imul
into
adc
mov
test
inc
pop
and
call
cwtl
shlb
icebp
mov
mov
xchg
loopne
inc
inc
inc
jbe
sbb
xor
add
nop
push
es
mov
clc
fdivrs
mov
cmp
daa
repz
call
mov
pop
push
std
xchg
or
ficomps
mov
int3
add
in
add
fbld
sbb
movsb
xor
lcall
addr16
fld
inc
in
push
je
lcall
sub
scas
clc
xor
shll
dec
int3
popa
das
insb
cld
pushf
sub
mov
sbb
popf
xchg
rorl
xchg
pop
inc
scas
pushf
push
xchg
out
jge
push
mov
and
je
mov
hlt
stos
push
xor
mov
aam
sbb
inc
pop
jne
mov
inc
into
pop
jae
xor
cltd
sar
push
aad
gs
aaa
and
xlat
je
lock
arpl
fidivs
mov
push
or
xchg
xor
push
lock
mov
sbb
pop
in
inc
pop
mov
mov
jae
aas
movsb
dec
jbe
test
jg
gs
cmpsb
xchg
mov
inc
pop
xchg
jno
mov
adc
cli
cwtl
out
push
data16
cmpsb
out
subl
fs
mov
inc
push
fnstsw
arpl
push
lods
or
ficoms
enter
and
mov
setb
imulb
imul
add
jle
cmp
sub
insb
imul
int
stos
fisubrs
loopne
orl
dec
sub
mov
add
lret
cmp
mov
sbb
add
pop
idivl
jl
and
mov
push
sub
movsl
add
lods
or
pop
icebp
jge
dec
inc
inc
leave
pop
ja
in
das
in
or
imul
cmp
ret
dec
test
push
mov
in
xor
mov
adc
jns
cld
test
and
xor
inc
ljmp
or
jae
out
bound
outsl
add
cmp
and
add
in
test
xchg
pop
mov
sub
inc
push
jp
daa
xchg
cwtl
shrb
fimull
pop
mov
clc
or
inc
lock
mov
divb
in
mov
dec
mov
pusha
push
shr
cmpsl
adc
cli
push
aaa
mov
outsl
mov
pusha
xchg
add
push
cmp
paddusw
pop
lds
mov
xchg
lods
jecxz
mov
sub
std
fwait
inc
adc
xchg
push
push
cmpsb
xor
mov
repnz
pop
ljmp
push
push
test
ljmp
jbe
push
imul
mov
push
fsubs
and
out
fldt
xor
test
ja
rcrb
or
outsl
or
push
sbb
mov
mov
xchg
sbb
push
mov
sti
dec
cwtl
lock
dec
adc
adc
mov
pushf
xor
stc
adc
adc
mov
mov
sub
sub
das
test
mov
idiv
and
cmp
add
rcll
xor
or
cmp
fdivrs
xchg
inc
mov
add
negl
les
lahf
xchg
movsb
in
sbb
add
xchg
lods
xchg
jge
lods
rolb
jne
or
je
add
and
shlb
mov
adc
loopne
mov
push
push
lock
cmc
ret
cmc
ja
xchg
mov
mov
cmp
int
xlat
stc
je
mov
movsl
fsubrp
dec
mov
std
fs
and
mov
scas
cmp
adc
cmpsl
in
sbb
cmp
inc
add
out
pop
push
popa
dec
into
fcmovnb
push
mov
ja
test
shr
test
mov
push
das
jl
cmp
or
jmp
xchg
mov
and
sarb
arpl
push
adc
jmp
push
pop
dec
and
gs
adc
andl
stos
add
loop
or
ja
arpl
shr
cmc
std
js
push
sti
sahf
dec
jecxz
popa
aaa
outsl
lret
rol
cmp
jp
and
inc
or
cmp
stos
mov
hlt
sti
jge
cmp
lahf
push
dec
sub
pop
lcall
outsl
adc
or
xor
test
out
mov
flds
scas
cld
shlb
in
adc
nop
stc
lock
sub
adc
xor
and
push
inc
imul
mov
fwait
outsl
lods
inc
dec
inc
xchg
sar
mov
dec
xchg
cmp
push
jae
sbb
outsl
loop
inc
xor
jl
and
push
call
and
xchg
jbe
cs
or
push
test
add
cmp
jecxz
mov
sti
mov
in
push
outsl
es
lods
jg
dec
fs
pop
jge
xor
filds
sbb
iret
stc
mov
sbb
inc
jg
ljmp
pop
cltd
mov
rcl
or
out
out
and
and
ljmp
outsl
out
ds
mov
int
dec
out
repz
insl
sub
inc
or
cmpb
cwtl
pop
mov
mov
fsts
or
jmp
in
jo
popa
fwait
dec
push
clc
jle
movsl
jge
loopne
icebp
or
sub
nop
out
sub
popf
adc
rorb
lods
lods
mov
pushf
ret
or
cwtl
cwtl
jg
loope
xor
pop
xor
je
sub
sub
cs
add
xchg
xchg
push
add
outsb
adc
imul
jle
lcall
cld
pop
cmpl
jne
mov
sub
js
inc
inc
dec
jmp
enter
xor
inc
mov
enter
cmpb
data16
cltd
pop
int3
daa
out
insb
inc
pop
lahf
shrb
add
fsubrs
push
sahf
push
lods
sbb
push
or
out
sub
pop
imull
ret
mov
xor
lea
insl
lods
xchg
push
push
or
arpl
dec
or
mov
les
push
lods
mov
xchg
negb
lahf
pop
leave
xor
mov
jno
or
sub
add
mov
loopne
cli
cmpb
xchg
das
add
mov
xchg
dec
jns
int3
jne
lret
cwtl
pop
movsb
and
xchg
and
adc
xchg
sub
xchg
xlat
movsb
or
push
lret
loopne
cld
das
mov
mov
imul
jnp
or
pmaxub
cmp
jle
push
arpl
fbld
and
mov
pop
sub
add
xor
jno
xor
xor
mov
loope
sarl
xchg
pop
sbb
sbb
repnz
icebp
in
mov
jecxz
int3
out
int3
pop
inc
outsl
setb
adc
lods
call
in
inc
inc
adcb
out
aas
cmp
pusha
in
cmp
push
mov
cli
in
test
jmp
lds
outsb
push
pop
lcall
rclb
xchg
inc
and
xchg
in
iret
pushf
out
adc
movsb
cmpsl
push
or
inc
or
pop
out
push
mov
pop
sub
jmp
push
or
xchg
in
sbb
aam
out
je
sbb
xchg
in
mov
in
out
xor
popf
in
cwtl
cmc
push
imul
pop
cwtl
mov
sub
stos
movsl
addb
test
out
enter
adc
cmpsl
push
mov
shrl
nop
icebp
push
push
fcmovnbe
pop
jle
inc
jmp
sbb
xor
cmp
in
cmp
pop
xor
jg
pop
das
fcoml
and
lds
test
mov
clc
jge
ja
stos
cmc
and
or
jo
and
aad
ja
mov
or
sbb
sub
iret
sub
imull
xchg
clc
das
movsw
arpl
jmp
mov
add
test
inc
pop
add
sahf
or
add
and
jae
or
repnz
push
mov
lret
sub
cmp
std
outsb
push
jl
mov
pop
lret
add
mov
stos
mov
dec
push
or
sbb
dec
dec
or
xor
rcrl
push
sti
mov
mov
in
imul
outsl
xchg
push
ss
mov
int3
fisttpl
lcall
lds
mov
pushf
sbb
mov
jae
aam
int3
loop
sbb
pop
mov
pop
pushf
pop
movsl
in
adc
mov
jg
dec
add
scas
outsl
and
lcall
ds
stos
cmp
aam
sub
loopne
xchg
push
xchg
pop
shrl
fwait
stc
pop
inc
push
sub
addr16
xchg
dec
pop
addr16
xor
ds
and
mulb
int3
inc
mov
xlat
pop
inc
daa
jmp
fsubl
pop
mov
test
sbb
aaa
sahf
mov
lods
loope
jbe
jecxz
loope
int
fwait
sub
andb
dec
ds
and
loope
sub
xor
pop
arpl
mov
push
xor
dec
fwait
add
dec
push
xchg
gs
mov
mov
xor
and
jl
repnz
data16
dec
xor
add
test
mov
pop
fcmovnbe
add
mov
imul
push
or
scas
mov
movsb
or
mov
shlb
mov
lahf
and
insl
rolb
out
and
in
aad
icebp
cmp
mov
fidivrs
lret
xchg
xor
ja
gs
cwtl
mov
sbb
mov
jp
imul
dec
sbb
push
xchg
adc
dec
push
test
mov
adc
xchg
add
push
adcb
xchg
rcrl
xlat
cmc
inc
aad
enter
lods
stc
pop
pop
arpl
pop
mov
push
lret
lods
and
pop
insl
mov
add
les
jp
repz
icebp
xchg
cmp
ja
xlat
rorl
or
aad
loopne
cmp
fstp
sub
mov
scas
lret
aam
repnz
push
je
sti
rorl
adc
cmp
dec
shl
lahf
add
sub
cmp
lcall
push
pop
xchg
mov
add
jg
mov
stos
in
sub
add
mov
xor
dec
test
mov
cmpsb
push
sbb
je
inc
or
mov
rcrl
push
jl
call
rolb
call
std
icebp
stos
sub
bound
shll
dec
push
sarl
dec
sbb
dec
sub
push
or
mov
jg
mov
clc
and
mov
jb
push
or
xchg
icebp
jmp
xchg
adc
push
cmp
sbb
xchg
or
pop
sub
mov
mov
sub
insl
mov
aas
ficoml
xchg
cmpsb
fstps
jg
sub
jo
pop
sub
pop
xchg
mov
lock
std
mov
jbe
cmp
mov
pop
push
out
xchg
rcrb
xchg
jo
jae
or
insl
stos
loopne
insl
inc
dec
push
imul
fs
or
and
ficompl
dec
pop
outsl
add
inc
pop
or
cmc
dec
or
xor
sbb
cld
pop
sbb
dec
jb
mul
cmc
popa
scas
test
mov
inc
leave
mov
ds
ret
sbb
mov
out
xchg
mov
cmc
mov
hlt
lret
xchg
fnsave
or
test
adc
gs
fbld
sti
xchg
cwtl
adc
daa
call
inc
stos
dec
rcrl
and
mov
insl
insb
shrd
ljmp
jg
inc
inc
inc
sub
aad
mov
js
mov
push
and
pop
or
push
scas
fisubrl
xchg
orb
sarl
inc
inc
push
orb
out
sbb
push
sub
pusha
inc
test
sub
in
xchg
mov
push
repnz
push
jmp
movsb
sub
or
pop
push
adc
mov
cmpsl
mov
sub
xchg
stos
or
sahf
insl
push
xor
adc
repnz
mov
fmulp
adcb
test
push
inc
pop
into
or
js
pop
cmp
mov
sar
mov
mov
sub
int
mov
mov
lret
out
add
xor
xchg
cld
dec
repnz
or
clc
ja
pop
ret
inc
add
xchg
mov
cltd
les
stos
mov
call
cli
cs
adc
cmp
xchg
fwait
nop
sbb
and
pop
mov
mov
xchg
in
inc
jns
pop
pop
xchg
shlb
inc
push
out
mov
or
sub
negl
in
dec
shr
mov
dec
scas
js
je
xor
lock
scas
sub
out
push
nop
imul
call
les
shll
sbb
movsb
jne
jbe
pop
or
mov
mov
sti
ss
cmc
sti
xor
push
push
rclb
mov
gs
js
dec
cld
push
shrb
mov
popl
or
inc
subl
inc
pop
sub
pop
lahf
aad
iret
inc
js
aam
mov
xorb
clc
xchg
loope
push
xor
push
shll
and
jno
mov
mov
add
cmp
cli
sbb
icebp
mov
and
fimuls
cmp
shll
cmp
cmp
xchg
sahf
int3
sbb
adc
sbb
insl
pop
ds
pop
fdivrs
outsb
test
sub
movsb
pop
das
mov
dec
fdivrl
dec
fisttpl
mov
pop
push
ficoms
add
xchg
enter
xchg
fwait
sahf
in
xor
mov
sbb
push
and
je
in
pop
cmc
push
mov
roll
pusha
sbb
add
pop
std
movsl
pop
int
push
popf
or
imul
mov
or
xchg
cmp
dec
scas
lds
add
test
jne
push
shll
sub
ljmp
imul
and
push
test
push
xor
test
xchg
mov
iret
sub
neg
insb
js
jmp
cmpsb
cs
outsb
jge
xor
rclb
mov
mov
sbb
mov
xchg
pop
pop
cltd
add
repz
repz
test
out
leave
jns
testb
dec
out
add
sbb
aaa
cwtl
fimull
loopne
rorl
test
loope
adc
inc
push
arpl
shll
cld
adc
push
jg
addl
adc
push
sbb
repnz
cmp
xchg
xor
xchg
jl
xchg
icebp
xchg
xchg
test
add
stos
aas
mov
xlat
test
js
mov
mov
addr16
gs
mov
xor
jmp
xor
notb
lcall
out
jge
test
test
jecxz
daa
jmp
shlb
pop
loop
imul
call
lods
and
and
sub
mov
lods
pop
les
movsb
lea
push
lcall
and
rclb
sbb
mov
add
fwait
leave
ja
outsb
or
fildl
xor
jo
fwait
mov
mov
pop
adc
test
adc
ret
sti
cltd
mov
inc
mov
and
insl
pop
mov
inc
push
das
sub
les
cli
jae
js
xlat
mov
ss
das
xor
imull
pop
and
ret
popa
mov
out
jp
test
je
add
inc
stc
jp
mov
pop
rcl
pop
repnz
push
ret
xor
push
imul
and
mov
jp
push
add
cmp
repnz
fisttpll
fnstsw
lods
cmpsl
or
dec
mov
enter
sub
leave
sbb
pop
mov
lcall
out
rcll
loopne
pop
or
leave
and
sub
ret
or
mov
outsb
fisubl
loopne
andl
loope
pushf
out
and
and
push
add
jg
fnstsw
cli
lea
lea
inc
push
push
push
or
pop
imul
movsb
push
ds
push
add
out
sub
push
pop
jo
pop
mov
hlt
idiv
aas
inc
add
and
cwtl
test
in
jmp
adc
cmp
mov
ja
js
mov
dec
ds
cmp
or
sbb
sbb
lahf
mov
addb
and
addb
inc
adc
sbb
cmp
hlt
rolb
jb
push
inc
add
xor
jno
push
mov
in
cli
std
mov
lret
inc
pop
imul
imul
loopne
inc
mov
mov
dec
sub
shlb
mov
jo
jl
push
in
test
addl
jecxz
stos
popa
scas
loop
add
sub
dec
negb
test
jecxz
fiaddl
fdivr
imul
jo
rorl
sub
jne
mov
in
clc
sti
test
shl
test
fiadds
in
sbbb
pop
or
rorl
xor
stc
les
notl
xchg
lcall
andb
flds
pusha
sahf
pop
xchg
fcompl
or
jb
loope
jno
and
outsl
scas
inc
popf
loope
dec
pop
mov
xor
sti
test
pop
xlat
lds
sbb
xor
es
push
mov
es
rcrb
xchg
shll
sbb
addr16
fistpl
fmuls
je
sub
mov
sti
pop
out
sub
hlt
lahf
jmp
cli
push
dec
pop
jg
outsl
out
jo
mov
je
in
xchg
sbb
xchg
push
push
push
fbld
mov
cltd
xorb
jg
sbb
sbb
xchg
sahf
addr16
dec
fnstcw
dec
dec
push
push
cli
sub
mov
and
aas
xchg
xchg
mov
mov
lods
xlat
push
pushf
jbe
repz
mov
mov
in
sub
mov
cmpsl
mov
dec
nop
mov
pushf
sarl
shll
inc
call
add
cltd
pusha
test
outsl
dec
xor
aaa
fsubs
mov
xchg
mov
test
stc
inc
jnp
mov
popa
lods
push
inc
je
jg
fcoms
ret
sub
xor
test
pop
ljmp
icebp
pshufw
int3
xchg
shlb
mov
mov
push
mov
xchg
lea
pop
dec
mov
std
or
lea
inc
xor
test
ficompl
aam
xlat
push
daa
add
lcall
and
aad
inc
inc
popa
xor
sub
addb
sbb
sahf
mov
sub
lods
test
cmp
popf
mov
xchg
pop
mov
movsb
mov
clc
mov
dec
mov
aas
inc
mov
mov
negb
sub
add
push
cld
outsb
out
push
cwtl
lea
orb
ljmp
cmp
push
pop
aam
in
movsl
call
mov
jno
sub
fildl
jg
cmp
add
es
cmpsb
push
sbb
lea
mov
ret
out
sub
jne
add
ss
outsb
cld
and
adc
mov
fiadds
lret
xchg
stc
pop
adc
loop
cmc
outsl
pusha
dec
mov
sub
cld
xor
xchg
dec
adcl
mov
scas
jo
out
mov
push
shrb
xchg
cmp
mov
fstpl
jns
test
cmp
data16
mov
sub
ja
adc
inc
pop
or
xor
cmp
pop
inc
cmp
mov
repnz
adc
fldcw
lcall
dec
aaa
cmp
filds
insl
and
ror
and
scas
sbb
lods
mov
orb
pop
or
mov
fisttpl
mov
std
out
fwait
cmp
push
cmp
repnz
mov
negb
rcrb
data16
cmp
inc
adc
jne
mov
popf
fdivr
xchg
mov
xor
adc
pop
push
insl
int3
pop
xor
xor
mov
testb
icebp
movsl
inc
iret
stos
jle
and
je
loopne
clc
add
jns
adc
adc
mov
insb
lea
mov
jae
sbbb
iret
jl
sub
jns
ret
add
mov
dec
xchg
push
sub
sbb
loop
dec
push
add
add
rcrl
mov
stos
mov
cmp
push
jge
lret
or
xchg
call
mov
sub
push
ss
aam
pop
ret
push
pushf
aaa
in
repz
xlat
cmp
and
push
mov
jp
jg
jbe
xorps
nop
aam
mov
and
push
int
mov
cmp
inc
scas
lods
dec
mov
lahf
das
mov
sbb
mov
cmpsl
push
shl
or
out
jae
lods
je
int
sub
insb
clc
enter
hlt
dec
xorb
repz
xchg
mov
mov
cltd
push
arpl
pop
enter
cltd
out
inc
jge
popa
lock
fists
mov
fisttps
cmp
mov
push
lock
cmc
imul
lds
jae
jecxz
push
stos
or
mov
push
mov
enter
cmp
stos
test
std
movsl
mov
cmp
iret
gs
mov
dec
mov
bound
dec
mov
stc
xor
jo
notb
jae
cmp
cmp
mov
dec
mov
pop
push
adc
inc
outsl
pop
enter
lret
or
hlt
sub
rolb
stc
mov
or
jbe
add
xchg
pusha
inc
ficoms
sbb
mov
sub
inc
push
pop
and
aaa
sahf
adc
bound
daa
into
arpl
mov
push
sahf
mov
and
nop
ret
cmpsl
js
shrl
ljmp
add
fwait
inc
sbb
jnp
dec
subl
inc
test
cmc
pop
repz
stos
ljmp
int
movsb
ja
call
sub
loopne
lcall
lret
mov
cmovno
das
pop
mov
mov
jne
mov
out
cli
cmpsl
ds
and
xor
cs
pop
adc
pop
ss
inc
push
push
jbe
addr16
pop
xchg
pop
insl
lea
gs
inc
cmpb
jae
jl
fsubr
mov
pop
push
ret
dec
mov
iret
xrelease
clc
jecxz
dec
aad
add
fdiv
stc
cltd
jg
xchg
pop
mov
dec
inc
lcall
sub
or
adc
mov
dec
jmp
stos
mov
sub
cmc
loopne
sbb
xchg
fucompp
inc
ss
add
in
movb
fidivl
call
mov
pop
repnz
out
sbb
mov
rolb
cmp
add
or
jae
xchg
outsb
movsb
push
xchg
cmp
lahf
lret
das
adc
and
sbb
mov
push
adc
daa
int
dec
dec
pop
cmp
insb
inc
test
popf
pop
dec
push
pop
cmp
sahf
or
mov
inc
pop
and
es
aaa
pop
int3
push
dec
add
nop
or
outsb
in
and
inc
mov
cmpl
decl
mov
sbb
inc
cmpsl
mov
inc
mov
pusha
mov
in
sub
push
inc
outsl
mov
mov
push
xchg
push
mov
scas
push
xchg
idivb
cmp
sahf
xor
lock
cli
pop
loop
pop
fdivl
fldenv
xlat
mov
dec
jle
sbb
out
movsb
sarl
cltd
push
mov
insl
push
stc
mov
fidivs
stos
lods
push
cmp
xchg
add
pusha
or
mov
add
fldl
cli
ljmp
rorl
mov
sbb
inc
iret
mov
loopne
pop
pushf
addr16
lods
call
mov
pop
in
into
push
sarl
mov
lds
pop
xorb
xor
mov
lahf
and
jmp
sub
sub
mov
fnstenv
sub
xor
adc
and
and
xchg
pop
push
icebp
dec
cvtdq2ps
rol
test
mov
or
dec
sbb
mov
sbb
jmp
cmpsb
adc
sbbl
fadds
movsb
in
gs
div
or
iret
mov
fcomip
mov
add
mov
fstps
adc
xor
jl
cmp
fsubrl
jne
mov
cs
rcr
adcb
mov
push
or
push
icebp
dec
mov
fsubp
aam
addr16
lock
push
fnstenv
test
fstp
jnp
jle
mov
mov
inc
xchg
pop
insb
xor
cs
in
lods
jnp
jnp
out
stos
add
inc
fs
jae
sub
lcall
fmul
imul
ds
fistpll
push
xor
push
pop
sbb
dec
cmp
dec
xchg
out
or
fwait
push
movsl
mov
xchg
adc
and
adc
into
push
xchg
cmpsl
cmp
popf
mov
sub
mov
xchg
mov
aad
and
xchg
or
cmc
mov
stc
rcll
leave
outsl
xchg
xchg
and
pushf
xchg
sar
icebp
jp
out
dec
and
xchg
xor
test
movsl
dec
in
mov
push
sti
in
mov
stos
mov
inc
adc
and
arpl
xor
test
dec
lods
dec
inc
add
dec
sbb
add
shrb
fcomi
push
adc
lods
repnz
stos
cmc
mov
lret
push
lods
lcall
dec
or
fwait
push
fisubs
nop
adc
repz
cltd
enter
cmpsb
push
out
sub
push
dec
xchg
sti
adcl
pop
scas
jne
pusha
xchg
les
jmp
add
mov
lea
dec
ud1
inc
push
xchg
pop
test
sahf
les
xchg
movsl
and
push
jnp
arpl
in
lock
int3
sub
das
or
movsb
or
jge
scas
fildl
or
nop
in
sbb
xor
pushf
aaa
adc
dec
mov
mov
cltd
enter
push
fwait
push
xchg
add
mov
test
loopne
adc
imul
push
push
mov
jno
lods
lds
fistl
popf
sbb
mov
sbb
repnz
in
jb
in
pop
shl
mull
and
ret
mov
mov
push
cmp
push
push
xchg
cmc
lahf
out
jmp
inc
push
sbb
sbb
icebp
and
jle
subl
xchg
stos
or
pop
out
stos
xchg
aas
mov
data16
or
notl
and
cltd
adc
or
xor
xchg
test
aaa
in
pushf
gs
mov
jns
pushf
stc
xchg
inc
lea
das
sahf
ret
adcb
fcomps
testl
dec
int3
stos
sub
push
inc
out
cltd
pop
adc
les
out
cmp
sbb
inc
es
fidivrl
in
jg
push
lret
pop
cmovle
cwtl
sub
sub
fs
cmpsb
push
sub
xchg
xchg
xor
ds
adc
sbb
hlt
call
jb
fisubrs
adc
cmpsl
push
dec
pop
or
or
xor
scas
jp
pop
add
add
scas
dec
pop
dec
add
test
adc
ret
testl
scas
cmp
pushf
pop
mov
push
lcall
fcmovnb
ror
push
loop
jae
sbb
imul
jo
stos
or
or
mov
inc
mov
insb
add
push
test
pushf
cwtl
push
arpl
cmp
pop
jb
push
adc
mov
adc
jb
pop
pop
test
and
jl
adcb
scas
les
xor
fdivs
adc
fcompl
pop
arpl
pop
shll
fidivrs
sub
xchg
sbb
jbe
pop
fidivrs
loope
in
xor
add
int
outsb
sub
pushf
push
fists
inc
mov
mov
xchg
aas
dec
mov
xchg
faddp
sub
ja
mov
and
test
mov
push
or
stos
or
mov
inc
int
mov
movsl
lds
pop
aas
pop
and
rcrb
xor
xchg
lds
outsb
jge
pushf
pop
in
xchg
out
push
clc
inc
fcompl
mov
mov
inc
mov
xor
sti
dec
mov
sbb
jns
pop
leave
out
and
sti
xchg
inc
inc
or
dec
push
push
push
das
sub
push
and
xor
dec
es
mov
fwait
out
cld
mov
and
lds
mov
into
xchg
and
adc
pop
popf
loope
out
cmpsl
int3
dec
xor
xor
lahf
outsl
scas
ss
stos
scas
adc
in
or
dec
aas
imulb
adc
int3
mov
cltd
cwtl
andb
and
ret
icebp
sub
mov
je
sbb
fstps
mov
push
lods
mov
roll
aaa
outsl
jmp
rclb
push
outsl
or
lret
sbb
pop
clc
jo
mov
xchg
stos
mov
dec
xor
jl
fistps
lcall
mov
adc
inc
out
call
jno
mov
sti
sahf
mov
pop
cli
scas
shll
popa
mov
and
add
xlat
shl
push
inc
add
cmpsb
les
jo
push
in
out
mov
mul
leave
or
jns
roll
sub
mov
sahf
and
loop
xchg
pop
push
sub
lock
pusha
dec
cs
mov
imul
lahf
sahf
or
mov
lea
loope
dec
aaa
mov
std
stc
dec
mov
daa
dec
clc
iret
push
bound
enter
jns
ljmp
push
jl
pusha
pop
sbb
push
mov
push
jg
popa
sub
push
dec
lods
rcll
sub
mov
out
xchg
mov
mov
out
add
gs
rol
adc
dec
and
sub
mul
lahf
push
jbe
cltd
push
lods
mov
xor
and
inc
call
shrb
jbe
mov
pop
or
test
dec
sahf
lock
adc
in
rcrl
loopne
xchg
scas
sub
cmp
or
mov
sarl
xchg
push
out
xor
scas
push
nop
cwtl
sbb
pop
sbb
sub
addr16
inc
or
dec
dec
outsb
mov
adc
jmp
adc
or
sbb
mov
std
dec
mov
or
or
xchg
aad
repz
jae
dec
or
xchg
daa
mov
insb
int
imull
jecxz
inc
dec
aad
inc
mov
inc
mov
rep
je
sub
sub
arpl
orb
xchg
xlat
push
fistpll
xor
mov
fnstsw
fwait
mov
push
jl
in
repz
aam
jb
in
in
add
insb
or
add
xlat
mov
add
add
roll
jle
push
push
rcl
and
insb
sub
mov
lret
mov
mov
inc
int3
push
jo
loope
mov
xchg
mov
mov
jmp
pop
mov
les
and
popa
ss
and
add
add
out
clc
add
hlt
ja
adc
sti
lds
test
daa
cmp
cmp
lret
imull
add
lock
cmpsb
daa
call
dec
rclb
inc
rcl
lods
scas
pop
dec
add
mov
and
hlt
out
lret
cmp
push
outsb
mov
pop
in
lret
inc
and
icebp
or
bound
insb
imul
icebp
sbb
lahf
fisubrl
jnp
ds
lods
mov
rorl
leave
sahf
jg
lods
cmp
rol
or
fldl
add
push
mov
or
sub
jb
add
add
pop
xor
cltd
in
sahf
sub
jae
and
pop
jbe
test
jle
pop
lahf
pop
sbbb
push
call
jae
cmc
outsl
scas
cs
pop
jmp
or
or
and
mov
lock
pop
sbb
push
popf
xchg
sbb
inc
xchg
les
push
std
outsb
daa
mov
xlat
or
mov
inc
fdiv
ss
pop
pop
sub
aad
rcrb
pop
das
push
in
shrb
cmp
outsb
ds
bound
sub
adc
mov
insb
inc
stos
xor
ja
sahf
or
jbe
nop
xor
xchg
xor
rcl
js
jmp
lret
pop
or
cwtl
push
push
push
xchg
aaa
and
mov
popf
sub
leave
aad
loop
inc
jbe
andnps
es
push
movsl
out
out
rorl
or
sahf
xor
lods
sbb
and
dec
xchg
and
loop
outsl
icebp
les
or
inc
popf
xchg
pop
cmp
es
fildl
lcall
inc
jl
out
push
add
int
xlat
rclb
les
inc
pop
dec
ds
mov
mov
xchg
loopne
cmp
fistl
loopne
and
cwtl
pop
repz
jmp
int
xchg
lock
adc
push
push
mov
dec
xchg
fstpt
jmp
sbb
pop
scas
aad
clc
push
invd
movsl
cmp
pop
test
sti
and
add
push
fcomip
test
cmp
push
cmp
in
fwait
outsl
call
out
or
pop
lea
loop
mov
int3
xchg
ss
dec
lock
leave
std
inc
dec
xor
outsl
push
cmpb
jecxz
pop
fldlg2
scas
mov
xor
xchg
cs
icebp
popf
sbb
test
add
js
jmp
out
jmp
ss
lret
scas
nop
test
cmp
dec
jo
test
outsb
pop
movsl
xcrypt-cfb
cmpsl
in
mov
sbb
jb
adc
dec
adc
jae
push
sti
std
je
mov
iret
iret
xchg
xchg
das
lahf
push
bound
das
lds
add
sbb
fs
pop
xor
mov
daa
xlat
test
push
icebp
dec
xchg
sbb
push
fcom
and
jmp
es
imul
and
xchg
imul
xchg
sbb
add
and
loop
jecxz
mov
dec
pop
push
test
hlt
sub
mov
push
and
pusha
jb
and
jbe
or
mov
fidivs
nop
es
add
lock
scas
addr16
xlat
or
enter
xchg
rcrl
fwait
out
mov
leave
jmp
ljmp
lahf
mov
je
fildll
inc
inc
dec
xchg
sub
mov
mov
cmp
or
jmp
mov
dec
mov
adc
xor
xor
dec
sub
data16
push
in
dec
add
in
clc
outsl
or
jns
inc
xchg
shll
gs
pop
imul
xchg
mov
xor
es
imul
pop
fadd
mov
cmpsb
imul
jno
sub
inc
pop
insl
out
adc
nop
jo
pop
mov
filds
pop
push
push
fnsave
scas
lret
xchg
mov
mov
sub
rorb
insb
xchg
sub
rep
mov
mov
insb
sub
nop
inc
rep
fldenv
dec
out
loope
jp
xorb
ds
sub
outsl
jecxz
dec
cltd
xor
loop
and
gs
add
jb
jmp
push
sub
jmp
ljmp
stc
pop
and
into
xchg
aam
sbb
lahf
lret
int3
cli
dec
outsl
xor
push
push
mov
mov
mov
and
and
cmc
setle
rsm
out
stos
pop
movsl
xchg
dec
push
xor
icebp
xchg
hlt
fwait
and
pop
mov
and
jecxz
loopne
mov
mov
adc
rolb
mov
fistpl
mov
or
shrl
pushf
sbbb
fdivl
rcll
test
cmp
scas
mov
sbb
mov
nop
mov
push
mov
ret
sarl
mov
push
popf
sbb
mov
xor
icebp
mov
roll
adc
cs
dec
jnp
lahf
push
sub
aas
in
adc
push
mov
mov
std
mov
lods
mov
xor
arpl
sub
mov
pusha
push
pop
aaa
stos
int3
sub
xchg
addr16
daa
add
push
push
lahf
inc
scas
arpl
mov
jnp
mov
xor
add
inc
ljmp
xchg
push
mov
push
dec
lret
popf
outsl
inc
or
aaa
loopne
mov
sbb
jmp
call
test
xchg
jge
leave
jo
push
les
int3
push
pop
jne
push
cmpsb
mov
mov
inc
insb
outsb
dec
dec
xor
pushf
mov
push
hlt
pop
sahf
inc
popf
lcall
cs
cmpsl
es
movsb
xor
loope
dec
ficoml
scas
xchg
pop
and
jns
notl
scas
cmp
lea
rcrl
pop
mov
aas
shl
jp
movsb
and
and
pop
ret
stos
cmp
sub
ret
out
inc
cmp
les
call
jo
pop
mov
adc
int3
dec
sbb
cmp
inc
or
es
dec
rorb
jmp
push
rorb
test
pushf
xchg
test
arpl
cmp
test
and
testb
pushf
fldt
xchg
jne
xchg
out
cmp
je
shll
lods
mov
push
shlb
push
enter
cld
cmp
stc
and
ret
testb
pushf
lds
add
loopne
push
sbb
stos
rcl
sbb
jl
orl
inc
xchg
cmpsb
fimuls
jno
mov
bnd
jl
pop
mov
out
cmp
sub
xchg
mov
xor
pop
mov
cwtl
add
fsubrl
imul
ss
mov
bnd
xor
inc
jle
outsb
dec
sub
mov
sub
mov
or
jne
xchg
jno
sub
clc
and
repnz
inc
lods
fcmovu
cmp
sahf
xchg
jne
fwait
mov
or
imul
cmpsb
rorb
mov
movsb
imul
js
xchg
inc
aad
sti
or
dec
rep
sub
sbb
mov
mov
test
shr
cmpsl
cmp
aaa
loop
xchg
xchg
mov
sbb
mov
xorl
dec
lea
cmp
insb
xchg
iret
int
mov
xchg
ljmp
and
hlt
xchg
sbb
sarl
and
mov
mov
jp
pop
pop
in
lods
jae
mov
aas
testl
xchg
sub
xor
xlat
ja
mov
cltd
pop
lods
int3
rcll
adc
rorb
dec
push
enter
cmp
jb
in
cld
ret
pushf
sub
mov
sbb
cltd
lds
loopne
mov
pop
xor
test
mov
lret
notl
dec
lea
loop
adc
and
jle
repz
sti
or
jno
fs
mov
nop
in
ljmp
xor
fimuls
push
movsl
cmp
out
rcl
sub
mov
jle
stos
das
mov
rcrl
sbb
scas
cmc
sti
sbb
cmp
stc
imul
sub
daa
xchg
das
lods
jno
adc
dec
jnp
xchg
lret
xchg
das
push
out
cmpsl
sub
hlt
and
add
rcrl
andb
lds
inc
enter
mov
in
sub
outsb
fdivs
mov
cmpsb
sbb
jmp
inc
int3
into
push
movsb
jge
add
cmp
xchg
les
leave
fsts
mov
push
lods
mov
out
xchg
xchg
and
shlb
pop
pusha
std
in
cs
sbb
into
sub
mov
or
cmpsb
insl
mov
sub
mov
push
lock
pop
or
push
mov
orl
sar
mov
or
mov
imul
cmp
fsubr
jp
push
dec
outsb
adc
les
cmp
jmp
xchg
rcll
in
sbb
push
mov
je
dec
out
push
icebp
inc
divb
mov
dec
and
daa
cmp
cs
in
or
pop
jl
sub
daa
cmp
add
add
repnz
jmp
popf
or
stos
xchg
jae
mov
xor
pop
mov
pusha
out
dec
insb
test
ss
xor
ds
and
push
popa
bound
xchg
jge
pop
jmp
dec
out
sbb
clc
das
mov
rcll
stos
inc
js
add
fldcw
mov
mov
insl
negl
mov
jns
das
pusha
inc
cmp
jmp
push
js,pn
call
pop
jb
xlat
push
sbb
push
jl
mov
outsb
xchg
shlb
and
jne
push
scas
imul
and
dec
mov
mov
add
mov
pop
lret
shll
and
push
sub
mov
and
pop
sub
fdivs
sbb
out
push
fcompl
pop
lret
mov
mov
xchg
dec
xchg
mov
mov
push
push
push
xchg
ret
mov
sbb
in
popf
cmp
sti
pop
add
or
and
mov
inc
sbb
aad
cld
ljmp
nop
dec
xor
xchg
movhps
fs
lcall
dec
rolb
popa
add
leave
add
xlat
add
jl
jle
mov
mov
mov
subb
inc
inc
imul
shl
jae
out
fmul
push
fsubrs
lret
sub
xor
sub
sub
jno
mov
lahf
pop
movsb
mov
xor
jo
shl
jns
lods
mov
or
int
xor
lcall
push
mov
mov
mov
add
test
cli
hlt
and
mov
out
cltd
adc
jl
jo
cmp
out
pusha
iret
loop,pt
fcmovne
xchg
lret
jle
xor
dec
xchg
lods
xchg
jne
out
ret
lea
push
in
pop
popf
jg
dec
sub
mov
xor
icebp
xlat
inc
das
adc
aas
dec
inc
pop
rorl
or
sahf
dec
push
jmp
std
fcomi
or
stos
sbb
fcomps
adc
mul
stos
ret
hlt
dec
mov
or
sub
scas
push
lods
mov
pop
pushf
xchg
mov
js
xchg
pop
and
cmp
cmp
popa
xor
xchg
repnz
xchg
inc
es
xor
add
mov
lods
adc
lock
sbb
scas
out
ss
mov
cmp
push
add
sub
inc
stos
nop
fdivrl
in
punpckhbw
xchg
cmpsl
and
jno
sbb
xchg
test
jb
jno
ljmp
flds
mov
popa
jne
cltd
inc
sbb
pop
lock
movsl
mov
lock
mov
pop
test
sbb
or
or
lods
adc
dec
iret
daa
shrl
loop
sub
jae
cmp
mov
adc
push
xor
scas
add
jge
icebp
add
imul
xchg
cs
jecxz
mov
mov
mov
add
aaa
ja
pushf
dec
nop
lahf
pop
xchg
aas
and
cmp
sbb
mov
pop
cmp
addb
das
mov
ret
push
loope
sub
or
push
rcll
lods
cmp
enter
pusha
push
mov
sub
push
jns
jae
or
and
push
scas
lds
and
ss
ja
test
movsb
mov
cmp
jnp
frstor
mov
dec
mov
bound
add
js
dec
xor
pop
inc
xor
mov
cs
jp
int3
sbb
and
mov
push
mov
adc
mov
xor
js
fstpt
aam
fs
mov
jl
pop
adc
and
inc
dec
or
enter
jb
xchg
inc
jo
idivl
sahf
pop
dec
cwtl
movb
orl
test
pusha
or
movsl
mull
jnp
or
push
repz
cmp
arpl
popa
dec
nop
scas
mov
jnp
cmp
or
xor
loop
push
ds
into
mov
mov
loopne
gs
sub
jl
sub
cmc
dec
inc
inc
and
cli
xchg
cwtl
xor
fstps
cs
dec
xor
subl
xlat
cmp
add
bound
mov
cltd
or
int
mov
or
mov
dec
inc
cmp
hlt
mov
fisubl
push
mov
cmp
lcall
xor
xor
push
cld
into
repnz
int
mov
stos
mov
sahf
out
push
sub
push
out
roll
js
add
push
in
mov
insl
sti
xchg
jle
pop
and
add
dec
loope
cltd
inc
xchg
insl
sahf
loope,pt
xor
ja
test
mov
mov
xorl
cmp
jp
cld
mov
in
sub
add
add
xor
xor
push
mov
mov
addr16
adc
adcl
mov
lock
push
mov
and
push
roll
dec
push
aad
xchg
or
dec
mov
push
inc
push
inc
bound
pop
mov
cmpsl
and
pop
negb
add
inc
mov
push
js
jnp
enter
mov
imul
jmp
jns
lods
bound
mov
mov
imul
clc
and
rcll
int3
lods
je
xor
jnp
iret
and
mov
jecxz
inc
leave
or
lret
fimuls
mulb
push
jg
sahf
test
imul
cmp
stos
add
mov
mov
ljmp
mov
iret
cld
jmp
sub
jbe
sub
mov
rolb
jns
mov
xor
outsb
mov
push
fdivr
mov
jns
mov
std
mov
jg
adc
clc
mov
mov
jae
jae
mov
outsl
and
xor
sub
sbb
xchg
ret
inc
mov
xchg
pop
loopne
icebp
icebp
adc
aam
repnz
cmp
cltd
fdivs
sub
fwait
xor
cs
scas
popf
mov
inc
adc
decl
out
mov
sub
cmp
out
test
xchg
xchg
and
sbb
jmp
lock
adc
es
pop
outsl
jno
imul
pop
subl
and
and
test
movb
mov
push
ss
int3
xor
xor
xchg
lods
and
cmp
fsubr
push
andb
movsl
in
std
push
cmpsb
fdivs
sub
out
xorb
push
fs
adc
pushf
shrb
lea
shrb
pop
inc
xchg
pop
jno
push
stos
adc
psrlw
stos
cmp
outsl
adc
fdivl
ss
pop
lea
pop
and
mov
lock
xorl
inc
imul
mov
push
mov
enter
sti
in
and
and
ret
lea
mov
std
push
xchg
add
mov
das
dec
mov
dec
cmp
loop
jno
out
xchg
or
push
scas
mov
out
or
jae
and
add
in
in
xchg
mov
into
imul
push
xchg
icebp
cmp
rcll
mov
mov
dec
and
cli
push
pop
repz
push
out
ljmp
fldcw
jo
test
ds
sbb
push
icebp
and
icebp
gs
sub
sbbl
cli
adc
fwait
xchg
adc
aaa
mov
lea
xchg
sub
mov
jge
sbb
inc
jg
adc
push
push
pushf
jmp
xchg
cld
mov
lcall
push
jb
sub
inc
push
add
jo
cld
sub
xor
add
scas
in
jnp
lds
fistps
xchg
sub
cmp
and
test
ljmp
jae
adc
pusha
add
and
adc
and
cmp
push
adc
sub
jne
ss
mov
or
cmp
xor
sbb
xor
adc
sub
jg
adc
iret
mov
cmc
pop
xor
jae
push
mov
fisubl
out
cwtl
scas
cld
out
cmp
adc
xor
lret
shl
fmuls
loope
lret
inc
push
adc
je
gs
mov
mov
fists
in
pop
sti
pop
inc
arpl
sbb
xchg
ficoml
and
inc
dec
xchg
mov
cwtl
arpl
stos
jbe
fucomp
and
push
push
push
fwait
dec
mov
sbb
mov
mov
mov
aas
outsb
jns
adc
movsb
add
jae
std
xor
inc
jno
enter
xor
fsubs
out
daa
xor
sbbl
mov
sbb
out
inc
add
pop
jmp
sub
andb
testl
test
pop
jle
fstl
js
dec
pop
in
pushf
mov
mov
aas
loop
mov
pop
daa
push
cltd
andl
fwait
jp
lea
push
add
sbb
add
jecxz
insl
aad
adc
into
xchg
scas
xchg
fcmovbe
add
jbe
daa
cltd
cmpsl
rcll
imul
mov
or
shl
dec
sbb
gs
or
faddl
add
mov
ret
xchg
loop
mov
sub
sti
or
sub
adc
pop
outsl
sahf
push
xchg
add
sbb
or
mov
inc
arpl
jb
jmp
mov
pushf
jge
pop
ja
ret
jo
nop
sbb
rcrl
loop
jns
popf
cmp
cmpsb
stos
inc
leave
in
je,pt
sub
jae
jecxz
pushf
aas
shrb
lea
adc
insl
jo
enter
in
repz
rcrl
scas
icebp
fyl2x
int3
ss
mov
inc
lock
jp
xchg
jo
stos
inc
pop
arpl
popa
adc
out
dec
mov
fwait
test
xor
add
lea
loopne
inc
push
push
inc
insb
cmp
jge
jne
int3
xchg
in
test
aad
dec
push
cmp
lods
stc
int
add
lret
cwtl
lret
jb
xchg
pop
mov
loopne
sti
test
and
sub
gs
cmpsl
xchg
cs
les
mov
test
mov
rcr
es
rolb
ds
pop
lahf
jl
mov
jne
inc
fdiv
push
hlt
fcmovbe
adc
cmpsl
ss
xor
pop
bnd
add
sub
mov
pop
and
mov
mov
mov
and
movsb
jmp
lahf
addr16
ss
cld
cmp
aam
mov
and
scas
lret
xchg
lods
rorb
aad
ljmp
cwtl
out
sbb
dec
jmp
cmc
dec
jns
pop
mov
movsb
cs
pop
arpl
jno
sahf
jo
or
sbb
leave
test
fbld
jno
insb
fstps
ret
lds
repz
lods
adc
stos
fmulp
mov
popf
das
pop
xchg
jge
xor
dec
push
xor
or
cld
and
sbbl
mov
jno
xor
movb
bound
cmp
test
hlt
push
les
xorb
inc
fbstp
inc
xlat
inc
cmp
mov
dec
xchg
inc
cmc
js
sarl
pushf
jbe
xchg
das
dec
loop
pop
in
mov
nop
sbb
xor
or
xchg
push
mov
xorl
or
ds
loopne
sbb
push
aam
inc
icebp
mov
cmpb
ss
xchg
pop
jle
fwait
sahf
aas
mov
sub
cmp
push
inc
in
sti
sbb
mov
push
fs
mov
icebp
mov
mov
jle
ret
neg
mov
cmp
xor
mov
adc
pop
xchg
rclb
cmpsl
test
ja
mov
jne
mov
fisubs
loope
jp
cmpsb
repnz
push
pop
icebp
daa
mov
aam
fiaddl
mov
test
sub
push
loop
std
push
mov
xchg
push
jbe
in
add
mov
cmc
push
jnp
je
fildll
dec
repz
and
adc
rorl
aam
sbb
pop
in
in
cs
mov
stos
mov
push
push
mov
and
aad
mov
cwtl
lods
test
leave
push
add
inc
test
xchg
fistpll
jae
out
add
es
fisubrs
push
lods
xor
ja
icebp
adc
jo
arpl
scas
jmp
cmp
dec
rolb
repnz
pop
mov
sbbl
pop
xor
je
cld
or
pop
pop
adc
mov
mov
ja
rorb
and
mov
aam
mov
add
adc
xor
xlat
orl
xchg
pop
push
add
add
je
out
scas
pop
jns
daa
mov
pop
sahf
clts
sbb
jg
sub
dec
push
arpl
mov
mov
add
adc
xlat
sbb
test
pop
icebp
add
inc
adc
cltd
sbb
xchg
xchg
lods
xchg
jp
jae
rclb
dec
out
rolb
jno
stos
test
push
dec
inc
jne
sti
add
mov
cmp
jnp
sub
mov
lods
or
add
test
cmp
icebp
dec
iret
sub
das
shlb
enter
out
mov
cltd
movsl
push
sbb
data16
mov
inc
das
sbb
std
pop
jl
cwtl
add
aas
pop
mov
data16
jb
add
lea
dec
mov
cmp
xlat
xchg
repnz
xor
movsl
push
xchg
xchg
out
outsb
repz
jmp
aaa
mov
or
xchg
dec
and
adc
push
xchg
cmpsb
mov
sub
stos
cmpsl
mov
inc
stos
sarb
adc
rorl
dec
adc
out
push
pop
ret
sbb
lods
xor
mov
inc
cmpl
and
pushf
jl
sbb
push
lods
aaa
icebp
push
dec
sbb
jae
sbb
add
mov
jle
add
in
icebp
jns
dec
mov
xlat
mov
sbb
or
cmpsl
fwait
inc
jg
int3
insl
dec
jno
pop
inc
pop
push
or
jp
inc
cmp
jmp
pop
adcb
fucomi
mov
mov
movsl
mov
fcoml
lea
sbb
mov
cmp
sbb
test
sub
insl
rcrl
int3
and
xchg
test
sub
jo
ja
ds
push
outsb
dec
or
xor
adc
xor
daa
jle
movsb
sub
rcrb
xor
js
push
lock
imul
jno
ffreep
push
repz
adc
sbb
mov
flds
pusha
sbbb
adc
gs
mov
cmp
adc
repz
scas
xor
lods
pop
ds
add
mov
inc
add
insb
mov
jp
jl
or
ret
sti
ss
or
call
mov
lahf
jno
sub
xchg
jmp
mov
out
hlt
cli
and
outsl
in
fs
adc
cmc
leave
es
jbe
push
add
lahf
push
sbb
lds
jno
negb
inc
jecxz
ret
cmp
das
divl
test
jmp
movsl
cmp
push
insb
stos
sahf
fists
test
adc
jae
fistl
mov
addl
popf
outsb
adc
pop
sbb
mov
xor
dec
ret
icebp
xor
inc
sub
inc
in
int3
fdivrs
inc
test
scas
mov
xchg
jecxz
loop
pop
add
sahf
pop
data16
iret
stos
jmp
mov
and
add
or
adc
and
push
in
or
dec
jae
cltd
adc
shrb
push
pop
pop
ret
xor
mov
call
addr16
sbb
mov
lahf
add
repnz
movsb
pop
popl
idivl
stc
cltd
cwtl
jnp
int3
mov
xchg
sub
sahf
push
scas
cmpsl
sbb
adc
sti
in
mulb
das
insl
scas
push
sbb
stos
es
in
cmpl
and
cmp
sub
push
mov
add
sbb
int3
add
nop
mov
sbb
popa
ja
addr16
mov
repnz
sbb
out
inc
je
jnp
mov
stos
cmp
xchg
xchg
subl
mov
pop
pop
sub
imul
lods
push
jle
mov
mov
out
loope
test
imulb
xor
leave
add
push
cmpsb
sahf
imul
nop
mov
sub
shll
iret
sub
gs
divps
out
push
sti
push
adc
mov
adc
pusha
inc
inc
and
lret
sub
movsl
inc
rorl
xor
nop
loop
or
mov
cltd
mov
leave
addr16
jg
nop
inc
cld
sub
jl
mov
dec
pop
push
out
fstpt
mov
aad
and
pop
cld
mov
into
pop
ljmp
or
mov
test
movsl
outsb
push
and
push
push
das
and
enter
push
sub
inc
inc
inc
xor
lock
xchg
and
adc
call
push
adc
loope
jnp
lods
das
lcall
insb
mov
or
pop
push
pop
rcrl
or
mov
aaa
push
iret
dec
test
test
cmp
aad
push
inc
mov
sub
aam
ss
ljmp
popf
daa
sarl
adc
mov
hlt
inc
or
push
fnstenv
ret
sbb
shrb
and
jbe
push
rep
adc
push
ret
jb
sub
xor
pop
sti
loope
jno
test
lcall
xor
out
insb
cmc
add
pop
addr16
insb
test
mov
lret
sub
sub
xor
dec
in
or
int3
cmp
mov
addb
inc
xchg
imull
jl
aad
test
aas
or
popf
push
clc
and
je
cld
gs
adc
xlat
data16
cmp
and
repz
ficoms
repnz
dec
and
inc
loope
or
cltd
sahf
sub
jp
loope
sub
fcomp
xlat
mov
cmp
test
add
cltd
loopne
adc
cmp
test
dec
or
scas
in
sub
out
lock
xor
sbb
jns
cmp
cwtl
add
fdivl
dec
mov
imul
lods
popf
sub
cmp
shrb
mov
inc
jae
or
jo
cmpb
lret
sbb
xor
shll
xor
mov
test
rcr
add
mov
mov
or
sti
lods
xchg
icebp
fsts
pop
and
xor
pusha
orb
jmp
int3
sub
pop
mov
into
divb
inc
insl
cs
xchg
lds
sar
cmc
or
imul
mov
cltd
addb
jl
aas
lret
dec
sub
mov
push
imul
cmp
push
jo
test
jge
sub
in
in
jae
leave
fildll
cmc
push
and
pusha
inc
fwait
inc
lds
ret
mov
push
cmc
or
decb
sbb
inc
xchg
lret
cmp
int
sub
stc
imul
dec
add
pushf
adc
pop
jns
les
shll
pop
mov
sbb
dec
mov
mov
xchg
outsl
pop
xchg
mov
sub
dec
aas
test
mov
js
int3
and
sarl
mov
dec
xorb
fldcw
dec
repz
mov
cs
in
cmp
sbb
add
aam
daa
stos
sub
insb
mov
push
mov
xchg
mov
xchg
cmpl
stos
mov
imul
rorb
out
mov
mov
stc
sub
mov
xor
add
xlat
or
adc
xchg
dec
sub
adc
mov
sub
orb
dec
pop
sub
movsl
pop
dec
cli
push
inc
aad
jmp
mov
sbb
out
xchg
xchg
adc
push
sub
test
pop
sti
mov
pop
jl
bound
sbb
pusha
push
sub
ljmp
mov
daa
jo
dec
cmc
sub
mov
insl
mov
sub
addr16
xchg
pop
sub
add
xchg
push
sti
push
popa
test
adc
pop
cmp
out
jb
paddsw
out
adc
dec
cmp
out
sub
mov
jl
and
push
add
jge
jo
dec
imul
mov
mov
mov
pushf
repnz
bound
and
push
mov
xchg
negb
cmp
fninit
ret
xor
arpl
cli
inc
xchg
mov
add
pushf
pop
push
dec
insl
pusha
push
jecxz
push
sti
or
jg
jo
pop
cmp
addl
ret
outsb
adc
mov
xchg
aad
inc
push
add
or
loopne
cmp
pop
cltd
add
mov
ja
loop
or
sbbl
notb
lret
les
ljmp
negb
dec
fs
mov
and
mov
clc
pop
inc
mov
int
outsb
cmc
xchg
in
nop
pop
cmp
ret
jae
push
insb
push
mov
int3
sbbl
js
insb
jbe
sbb
test
cld
or
pop
cmp
sub
sub
lret
sbb
in
les
push
ss
mov
dec
mov
out
jbe
push
je
jmp
jle
sbb
xchg
xor
mov
xor
add
lcall
push
rcr
setne
gs
shlb
daa
aaa
push
mov
rolb
dec
push
inc
pop
addb
stos
cmpsb
mov
xchg
insl
in
inc
mov
xchg
mov
rcrb
out
xchg
push
push
cli
or
cmp
scas
dec
xchg
pop
faddl
push
push
orl
sub
daa
mov
mov
idivb
jecxz
mov
rcl
insl
fwait
in
out
and
ss
es
add
call
xchg
jns
test
pop
xchg
stos
pcmpgtw
mov
mov
rorl
mov
or
push
and
xor
and
cmp
ljmp
lea
jge
jns
mov
sub
test
imul
imul
sub
jecxz
xchg
pushf
popf
imul
or
or
fildl
mov
mov
lret
xchg
andl
pop
inc
imul
es
stos
xor
inc
cmpb
and
push
xor
xchg
push
scas
adc
mov
push
xchg
pop
loopne
out
les
cmc
popa
dec
push
jbe
push
push
sub
mov
mov
and
mov
shlb
icebp
and
mov
jae
pop
inc
iret
fnsave
sbb
jnp
divl
pop
xchg
adc
lds
int3
lea
call
jne
lods
sbb
pop
mov
mov
mov
dec
add
roll
movsl
sbb
adc
fsubs
fdiv
mov
dec
and
push
lahf
decb
enter
sbbb
jmp
addl
loop
les
lds
fldt
test
mov
cmp
sub
lret
int
movsl
in
jp
mov
xor
ret
mov
stos
loope
jp
push
push
ret
sub
or
addl
sbb
xor
lcall
dec
jle
mov
xchg
jo
fadds
mov
pop
pop
lret
and
mov
jle
add
int
fwait
gs
pop
loope
ret
cmp
call
mov
movsb
add
cltd
xor
call
mov
push
jae
lods
icebp
mov
sbb
xor
push
and
insl
push
lock
jge
divl
cmp
mov
in
mov
addr16
and
loop
jne
pop
sahf
jno
mov
pop
daa
imul
stos
aam
xor
mov
mov
pop
outsb
adc
out
cmp
cltd
cmpsb
mov
sbb
cld
add
pop
cmpsl
lret
pop
test
es
in
rcll
aaa
dec
xlat
push
push
sti
pop
int3
pushf
dec
gs
or
xchg
mov
popf
sti
mov
aam
lcall
scas
fbstp
js
push
jne
hlt
fisubrs
outsb
js
inc
psrad
sbb
and
ss
dec
jbe
ss
nop
aam
stc
cmpsb
push
mov
loope
jg
movsl
out
cli
loope
xchg
pop
repnz
sbb
frstor
movsb
and
mov
cmpsb
or
push
mov
mov
add
lock
fsubr
mov
cld
dec
pop
cld
xor
pop
fcmovb
nop
inc
test
pop
pop
push
xchg
jle
fnsave
sub
add
sub
sbb
jnp
push
sbb
aad
jo
and
pop
lock
fcmovne
ficompl
int3
mov
shll
lahf
fdivrl
pop
insb
mov
icebp
popf
fdivr
gs
sub
out
es
cmp
xchg
pusha
icebp
imul
int
sub
test
sub
push
test
xor
xlat
fwait
push
xor
xchg
xchg
jbe
out
cmp
sarb
cld
loope
ret
mov
stos
jae
or
push
adc
pop
add
mov
inc
test
sub
shlb
bnd
xchg
or
or
shll
mov
push
xchg
aaa
roll
pop
aaa
sub
je
xor
pop
pushf
push
movsl
dec
xlat
lods
jnp
push
popa
jp
cmpsl
xor
jb
add
and
lds
pop
mov
cmp
mov
int3
lods
pop
mov
fsubrl
mov
shrb
push
daa
sub
add
movsb
add
inc
push
mov
std
pop
cwtl
pop
adc
fidivrs
aaa
and
xchg
je
adc
stos
pop
daa
xchg
rcrl
and
mov
mov
out
iret
add
pop
mov
push
mov
lret
add
pop
inc
pop
and
rcll
repnz
mov
mov
or
pop
push
push
dec
sbb
adc
jecxz
add
push
mov
aaa
stos
shll
cmp
pop
jns
aam
outsb
lods
rorb
push
inc
jle
outsl
lcall
xor
sub
mov
mov
mov
or
les
mov
fdivrp
ss
mov
xchg
jle
insb
lret
jecxz
into
xor
fistpll
in
mov
pop
jns
fwait
mov
or
fidivl
or
fnsave
jecxz
and
insl
dec
and
jne
and
cmp
in
or
add
push
xchg
lahf
cli
xchg
add
sub
fwait
cld
xor
fwait
adcb
and
and
stos
int
adc
syscall
sub
fcmovu
add
or
mov
mov
mov
jmp
int
mov
xchg
enter
dec
lahf
xlat
mov
mov
in
add
ss
sbb
and
cmp
pop
mov
gs
xor
lds
adc
sbbl
fs
mov
inc
jecxz
or
movsb
cmpb
push
ret
sbb
stos
pop
jle
xchg
sub
pop
out
je
jg
push
negl
xor
cltd
adcl
jmp
adc
sti
pop
push
pusha
or
daa
cmp
add
and
inc
pushf
pop
or
in
mov
sub
sbb
pop
xchg
sbbl
in
inc
inc
popa
call
jl
cwtl
xchg
cmovl
mov
js
jmp
or
mov
jg
push
daa
inc
out
lods
outsl
stos
mov
xchg
sbb
cmpsb
xor
in
cld
mov
push
js
je
in
scas
aad
das
jne
int3
pop
ss
push
in
xchg
fistps
push
xchg
mov
push
addr16
mov
and
dec
mov
push
loope
pop
jp
pop
and
sbb
loop
push
sbb
pop
dec
push
call
cmpsl
cmc
cmp
mov
xor
jns
ljmp
mov
repz
and
inc
dec
cs
shr
mov
imul
mov
mov
mov
fstps
adc
aad
or
sbbb
and
cmp
xchg
icebp
add
pop
push
cwtl
xchg
push
mov
cmp
jne
dec
mov
imulw
enter
ret
pop
cmp
xor
mulb
mov
mov
mov
jp
xor
js
jb
mov
xchg
lock
addr16
or
sub
cltd
repnz
inc
dec
decb
outsl
dec
jae
cmp
push
idivl
sarl
mov
cmc
xor
in
sub
mov
int
gs
mov
fsubl
icebp
insb
push
push
cld
dec
xor
enter
scas
cmpsl
out
add
and
or
adc
ss
std
jno
jnp
inc
ss
or
shlb
das
repnz
in
in
and
sbb
dec
sub
std
fwait
dec
addl
repnz
sbb
fs
stc
in
sub
cmp
andb
shr
xchg
lods
stc
es
stos
icebp
ljmp
dec
cmp
and
mov
insb
jecxz
mov
ja
int
sub
gs
popa
adc
mov
pop
test
adc
sub
idiv
mov
nop
xchg
mov
mov
inc
notb
rcll
xchg
pop
sarl
mov
jp
inc
out
sbb
mov
cli
bound
mov
dec
sbb
movsb
xor
add
inc
mov
mov
inc
mov
fisubrl
inc
not
imul
inc
lods
sbbl
sub
lcall
cmp
sbb
or
outsb
sbb
or
test
xor
arpl
movsl
jp
repnz
sbb
pop
hlt
inc
pop
jo
or
iret
test
inc
loop
push
aad
lret
aad
fneni(8087
gs
call
sub
or
mov
inc
addr16
lret
xchg
cld
adc
mov
push
mov
fcompp
mov
inc
pop
push
sbb
mull
sub
jbe
mov
in
dec
gs
inc
mov
cltd
lods
jno
push
adc
inc
sahf
mov
in
push
jbe
mov
in
fistpl
lahf
inc
mov
jg
pop
inc
jnp
out
mov
push
sub
push
std
mov
iret
jle
call
outsb
mov
ds
shl
lret
iret
pop
jbe
mov
mov
fs
mov
das
adc
aas
jae
sbb
xchg
xchg
add
in
and
jmp
cwtl
in
sub
mov
mov
mov
xor
inc
div
xlat
ljmp
in
incb
test
cld
lods
sbb
jo
int3
divb
sahf
test
mov
mov
shll
test
push
adc
ret
jp
ret
sti
and
into
mov
xchg
sbb
in
pop
in
testl
pop
ret
sbbb
stos
mov
call
cmpsb
jg
mov
fstpt
jno
mov
cltd
lock
lea
xchg
pop
inc
inc
mov
cmp
js
jge
dec
insb
sub
lock
push
nop
fcmovne
and
jne
mov
mov
add
cmc
mov
push
pop
enter
sbb
aas
outsb
int
out
sbb
mov
in
cmp
mov
pop
mov
or
xor
repz
sbb
xchg
mov
adc
aas
rcrl
scas
daa
inc
mov
mov
cmp
les
jg
xor
pop
mov
xor
popa
add
rcrb
cmc
sbb
pop
mov
sbb
data16
add
push
cmp
and
daa
and
sub
scas
xchg
idiv
pop
fst
arpl
cld
notb
pop
adc
nop
popa
mov
xorl
in
mov
pop
sbb
xlat
shlb
lods
push
xchg
mov
dec
jle
insb
addr16
outsl
aaa
cli
scas
and
inc
or
push
xor
add
adc
jo
or
std
mov
std
or
div
push
mov
out
inc
cltd
mov
out
xlat
mov
cwtl
sub
push
push
mov
sub
nop
lahf
xor
mov
mov
mov
sti
push
mov
testl
inc
enter
shl
fiadds
add
pop
in
scas
jge
int
add
push
pop
pusha
xor
fld
mov
mov
pop
add
lea
and
sbb
cmpsl
add
add
add
push
or
lahf
roll
iret
outsb
cmp
xlat
push
loopne
fdivs
cmc
push
ljmp
jnp
mov
repnz
dec
sti
sbb
xor
ss
cli
dec
imul
test
push
popl
jnp
xchg
cmp
mov
jb
cmp
adc
int
inc
stos
shrb
cmc
es
lret
notb
ret
pop
inc
inc
das
mov
adc
lock
sbb
call
fsubr
and
leave
int
stos
pop
pop
adc
sub
imull
sub
aam
lock
in
inc
fucomi
inc
pushf
fisttpll
jae
push
scas
sub
idivl
cmpsl
lcall
inc
es
push
pop
mov
lods
idivb
fdiv
icebp
mov
int3
fldl
ss
adc
push
imul
fs
xchg
push
shll
xorb
add
sbb
sahf
test
cmp
pop
fcompl
cmp
dec
xor
out
nop
cld
imul
pop
adc
inc
or
pop
cmc
pop
sbb
ja
push
xor
out
mov
les
mov
cmc
sbb
jae
push
lods
nop
push
cld
shrb
adc
fldcw
fildll
or
movsb
negl
vpaddw
mov
in
ja
dec
test
add
dec
aam
xor
xor
pop
lret
sub
scas
jg
or
xchg
sbb
pop
or
mov
mov
sbb
lcall
sbb
jbe
mov
lds
and
pop
xchg
pusha
fbstp
test
daa
push
gs
dec
shlb
out
or
xchg
cmpsb
clc
and
push
cmc
pop
adc
mov
dec
or
aad
hlt
xor
sti
xor
jnp
enter
mov
or
cmp
mov
divl
dec
test
jbe
xor
lcall
call
test
or
addr16
or
inc
xor
add
or
mov
sarl
push
imul
sub
mov
mov
call
and
icebp
cmpsb
jmp
cwtl
js
pop
mov
clc
xchg
iret
aad
fs
push
mov
or
jmp
loop
push
pop
mov
xchg
inc
lods
sbb
outsb
cltd
js
jae
repnz
aam
sbb
pop
loopne
sub
or
xchg
jns
or
out
cs
lds
fxch
push
cmp
inc
fs
push
shl
inc
pop
sub
testl
rclb
pop
in
jae
ror
fcoms
and
add
sbbb
adc
out
in
roll
xchg
shlb
jmp
int
ljmp
jmp
push
enter
push
aad
into
rol
inc
lcall
inc
and
test
decb
xchg
enter
imul
shr
cld
mov
xchg
mov
cmp
and
fs
jbe
sti
shrb
mov
add
ss
and
xchg
fisttps
cmp
inc
xor
push
mov
test
out
jae
fcmovnu
shlb
in
xor
lock
push
aaa
adc
adcl
aas
cmpsl
sbb
out
test
lods
scas
cmp
push
jge
or
arpl
je
loop
aad
mov
jo
mov
and
sti
icebp
icebp
test
cmp
jg
das
mov
adc
jmp
paddq
xchg
adc
sub
test
test
stc
mov
push
stos
xchg
xchg
mov
mov
jge
pushf
icebp
mov
out
movsl
fists
test
inc
loopne
push
roll
dec
scas
cmp
daa
and
add
or
test
and
in
cwtl
popl
add
sub
stos
cmp
out
jne
scas
push
pop
xchg
dec
lock
mov
and
pusha
mov
fdivs
xor
dec
jb
push
mov
mov
lahf
sub
scas
rcrb
fxch
or
dec
or
fwait
sbb
fldt
lret
or
adc
stc
dec
jb
inc
mov
xchg
lock
mov
adc
cld
jo
xor
sub
mov
and
inc
mov
cmpsb
cmp
jnp
mov
loop
sbb
jge
sti
out
dec
sub
repnz
out
pop
and
loope
pop
jb
icebp
xor
push
in
push
xor
mov
scas
shl
sahf
dec
add
inc
mov
cmpl
jb
mov
mov
in
aam
xor
xchg
rcrb
movsb
addr16
inc
ljmp
mov
cmpsb
xchg
pop
adc
pop
pop
repz
mov
addr16
shll
cli
add
rcrb
call
pop
mov
jle
inc
and
aas
mov
gs
test
insl
and
js
and
sbb
mov
sub
dec
js
xchg
into
inc
xchg
push
icebp
pop
jge
pop
fldcw
mov
imul
push
cmc
das
sbb
lret
or
xor
adc
add
jmp
repnz
xchg
das
xchg
pop
push
mov
pop
cmp
retw
inc
and
scas
dec
dec
push
bound
cmp
subl
sahf
jo
rcll
jo
sti
add
subl
inc
dec
imul
fldl
cld
or
or
bound
repz
leave
inc
mov
push
je
mov
xor
in
iret
gs
jb
cmpsb
ds
ret
mov
push
test
push
xor
ffreep
int
xchg
sbb
mov
mov
fisubrs
fstpt
xchg
push
cmp
popf
sahf
gs
mov
inc
les
inc
jge
in
sbb
cmp
aaa
addr16
fwait
int3
lahf
mov
not
xchg
pop
ror
ja
push
dec
inc
in
xor
movsl
rep
mov
inc
xor
arpl
repnz
loope
push
loop
xor
scas
sub
and
ljmp
nop
inc
mov
mov
push
fwait
or
or
loope
mov
sbb
add
cld
mov
stc
int
into
inc
adc
adc
lods
lods
cli
push
fidivrl
cmp
mov
xor
jns
stos
sbb
es
int
mov
pop
push
cmp
pop
iret
jle
push
push
cmp
xchg
roll
cmpsb
lds
hlt
addr16
sub
mov
dec
into
shlb
mov
dec
jae
cli
xchg
jl
mov
lcall
sti
shl
jnp
mov
cmp
add
out
ss
out
sahf
mov
cmp
mov
inc
adc
es
repnz
jo
das
icebp
lret
addr16
orb
mov
inc
lock
out
or
push
test
dec
loop
sti
jge
rorb
aas
xor
cli
sti
pushf
sti
lock
fadds
mov
repz
cld
xlat
push
pop
sbb
jbe
xchg
test
popf
mov
push
fstpt
stc
mov
gs
outsb
stos
aam
lods
fidivrs
mov
fldl
hlt
pop
push
adc
shll
push
and
out
mov
cli
cli
cmp
sub
test
test
mov
pop
inc
mov
out
sbb
jo
dec
adc
sub
shrl
adc
sub
ljmp
cltd
sbb
pop
pop
sbb
xlat
inc
cltd
xor
jp
add
push
lret
adc
popf
mov
pushf
mov
and
cmp
cmpsb
inc
pop
fwait
outsb
cld
cmp
loop
test
mulb
sbb
push
test
cmc
in
in
ret
add
cwtl
dec
lret
cli
imul
insl
fists
shlb
jno
je
mov
mov
inc
lods
int
and
rclb
jle
lret
dec
out
dec
push
push
mov
or
mov
lret
xor
or
adc
mov
gs
in
sub
xchg
test
dec
push
xor
leave
xor
stos
into
imul
dec
pop
dec
xchg
or
rcrl
fwait
xchg
lods
sbbb
cli
out
dec
cmpsl
idivl
leave
loop
std
xor
clc
cltd
jb
mov
enter
pop
mov
fsubrp
aaa
and
and
pushf
mov
xor
insb
addr16
jb
fcmovbe
sub
pusha
jp
adc
imul
push
xlat
and
mov
mov
push
lcall
push
mov
cmpsl
inc
es
cltd
ss
lret
ret
out
xchg
cmpsb
lret
pop
or
sbb
inc
mov
push
jmp
cmp
xor
sub
insl
dec
cwtl
jmp
scas
push
fisubrl
adc
sub
mov
xchg
dec
push
lret
int3
insl
out
inc
add
arpl
repnz
xchg
lods
pop
inc
into
mov
cmpsb
shlb
mov
cs
push
cs
jl
out
notb
or
dec
lcall
iret
add
fwait
mov
gs
imul
aam
or
mov
test
lret
loopne
or
mov
iret
mov
out
adc
mov
fisttps
repz
jo
adc
stos
pop
fadds
or
mov
xchg
mov
repz
fimull
and
cmp
lcall
jmp
or
cmp
insl
fsubrs
shlb
mov
inc
std
pushf
jmp
aaa
popf
mov
or
or
pop
xchg
sub
sbb
in
push
or
fnstcw
push
addr16
jmp
popa
pop
xor
shr
pusha
inc
gs
cmp
cmp
mov
xchg
push
and
xlat
sbb
jmp
or
mov
je
lods
testb
imul
loope
jno
push
scas
add
sbb
sub
mov
std
mov
sbb
or
aam
xchg
xchg
and
xchg
mov
pop
adc
fistl
std
ja
push
mov
out
and
test
aas
cmc
hlt
test
add
pop
jae
push
ficoml
mov
pop
stos
or
sub
shl
jne
shll
pop
dec
loopne
jle
or
sar
lea
inc
out
idiv
xchg
dec
in
add
bound
or
mov
into
xor
testl
fists
fs
dec
jp
xor
xor
ret
imul
movsl
and
je
and
jecxz
fdivrs
aas
cwtl
jge
lret
mov
insb
ret
iret
arpl
jle
inc
mov
out
fucom
into
xchg
jne
xchg
xchg
mov
jg
out
jae
jne
mov
test
fstpl
test
rep
stos
popf
ficoml
sbb
negl
xlat
dec
xlat
sbbl
mulb
int3
in
add
lret
pop
ss
jp
call
xlat
ljmp
and
repz
loope
pushf
jp
insb
pop
xchg
and
daa
xor
jno
inc
ret
push
jbe
mov
or
ljmp
rclb
add
ss
and
mov
popa
mov
jle
popf
xchg
jnp
and
pop
push
fisttps
rclb
aad
arpl
xchg
outsb
mov
ljmp
test
xor
and
out
mov
jns
mov
add
icebp
fldt
pushf
stos
add
dec
add
add
add
mov
decl
mov
pop
shl
loopne
popf
ficomps
push
mov
rcl
scas
loopne
dec
ficoml
lods
xor
shl
cmpsb
test
sahf
jb
les
and
sbb
dec
shl
rcl
jbe
sub
and
ljmp
iret
mov
js
mov
lret
stc
lahf
lahf
xchg
movsb
daa
pop
mov
jns
jbe
roll
dec
in
stos
cmpsb
outsb
lea
out
popf
mov
fldl
xchg
stos
mov
lahf
dec
xor
cmp
push
rclb
inc
sahf
inc
ret
stc
adcl
cli
sub
dec
cli
or
into
sbb
add
inc
subl
add
js
push
sti
sub
jae
jl
cmpsb
hlt
inc
fcoml
into
adc
sti
repz
mov
xor
cmc
mov
mov
mov
cli
jae
shrb
pop
pop
dec
gs
add
jb
js
xchg
inc
inc
add
pop
xchg
pop
pop
mov
inc
adcl
mov
sbb
fsts
mov
add
or
test
mov
mov
gs
jae
lret
lcall
adc
push
iret
rclb
shr
mov
js
insb
adc
xor
inc
arpl
xchg
push
mov
xchg
iret
ficompl
popf
add
jmp
mov
cmc
and
xor
leave
inc
dec
and
addr16
pop
js
mov
xchg
or
or
pop
hlt
jp
pop
dec
pusha
sahf
mov
sub
xor
jnp
xchg
mov
loop
ljmp
adc
mov
push
mull
lahf
mov
pop
rcrl
sbb
mov
adc
inc
inc
mov
test
push
mov
into
fmul
jg
adc
ret
xchg
lds
dec
mov
mov
push
xchg
imul
cmpsb
jbe
push
nop
repz
inc
and
scas
cltd
sbb
jge
mov
insb
data16
fsts
dec
out
xor
movsb
cltd
cmp
aam
and
dec
or
mov
mov
test
cmp
cmp
pop
call
sub
adc
aaa
jb
xor
cmp
fiadds
mov
and
ss
decl
cmp
imul
mov
xor
mov
cmp
clc
sub
ret
mov
or
dec
aad
pop
adc
lods
mov
lods
test
pop
iret
mov
cmp
xchg
lods
push
mov
sbb
out
cmp
lahf
mov
inc
call
out
dec
dec
jb
xchg
sub
fcomi
cwtl
in
and
and
imul
sbb
mov
daa
or
push
sbb
mov
jns
jno
and
sbb
in
sub
jae
inc
into
dec
pop
outsb
jnp
fstpt
cmp
and
movsl
in
icebp
data16
fsubrs
fldenv
sbb
lcall
in
mov
lcall
adcl
std
dec
push
mov
in
and
sub
mov
and
test
and
dec
dec
push
cmp
mov
fiadds
mov
ds
push
pop
xchg
fwait
push
pop
ja
inc
sub
dec
xchg
cwtl
xchg
lea
pop
ret
jge
fisubrl
sub
xchg
pop
rorb
sbb
dec
lret
test
outsl
mov
mov
ret
insb
dec
mov
scas
and
push
xchg
bound
inc
or
pusha
popa
push
xlat
jl
test
xchg
adc
mov
test
add
mov
xlat
cmp
lcall
and
xor
paddd
mov
adc
imul
adc
adc
fidivrl
mov
push
xchg
daa
mov
jne
xchg
xchg
int
aad
mov
xor
push
sub
adc
xchg
pop
lret
xor
or
cmpsl
fdivrp
mov
fists
dec
daa
loope
je
mov
icebp
movl
cltd
mov
leave
hlt
lods
je
adc
pop
mov
push
mov
or
jne
pop
into
das
mov
out
mov
lds
xchg
jmp
mov
xor
imul
sub
ret
mov
fs
dec
push
mov
aas
dec
ret
stos
addl
cwtl
jae
lods
jmp
mov
cli
xchg
test
pop
or
lahf
hlt
sub
stos
xchg
das
jb
xchg
imul
dec
or
push
jns
cwtl
pop
mov
add
sub
lret
insl
aad
push
inc
and
mov
lret
cmc
das
outsl
cmpsb
cli
and
push
sub
in
xchg
arpl
jb
mov
xor
subb
cmp
xor
notl
jge
adc
jl
jns
shll
fsubrl
mov
jge
fwait
cwtl
mov
popa
xchg
sbb
lods
call
lods
ret
xor
sahf
in
mov
dec
out
pop
movsl
push
int
imul
xchg
test
or
fwait
ds
and
lock
fbstp
dec
push
vpmuludq
test
or
sub
xchg
dec
xchg
mov
stos
int
adc
push
mov
jb
roll
mov
dec
sub
int3
gs
pushf
ret
jmp
fs
mov
loopne
stos
xor
ret
arpl
sbb
int3
jo
sbb
pop
or
call
mov
jne
movsl
sbb
dec
lea
mov
pop
or
out
in
pop
inc
mov
pop
cs
mov
jmp
mov
push
icebp
stos
pop
out
xor
adc
pop
cmp
outsb
sub
mov
psrlq
mov
fdivrl
add
fwait
sub
push
inc
pop
dec
push
inc
lods
insl
ret
test
jo
xlat
cmpsb
loopne
inc
inc
jo
out
xor
xchg
hlt
es
loopne
neg
test
sub
testb
out
push
outsl
stc
mov
scas
xchg
ficoml
nop
dec
sub
pop
mov
jle
fwait
pop
jp
xor
mov
cmpb
clc
jecxz
push
pop
xor
xchg
sbb
std
inc
movb
outsl
aam
pop
jne
in
cli
ret
mov
outsl
pop
sarb
loope
cmp
fwait
call
repz
sar
es
push
lock
in
push
mov
and
adc
test
dec
in
cli
mov
pop
jl
xchg
adc
add
mov
xor
rol
mov
push
mov
push
jecxz
jnp
ss
aad
jnp
imul
pop
mov
xchg
push
pop
xor
dec
pop
and
orl
fcmovnu
int
or
and
in
sti
adc
cmp
sbb
adc
adc
lahf
cltd
or
in
lret
into
jle
add
test
orb
out
jbe
in
je
mov
mov
test
rcll
aaa
mov
xchg
sub
and
inc
jo
or
push
inc
addl
push
data16
pop
in
stos
in
inc
sbb
mov
into
cld
mov
rolb
inc
fnclex
push
fistl
push
adc
mov
sbbl
out
loop
jecxz
jge
xor
dec
bound
dec
int
pop
mov
mov
outsl
pop
icebp
cmp
mov
inc
add
in
mov
fs
hlt
add
js
dec
jbe
sbb
dec
xchg
enter
loop
out
ret
stos
adc
lret
sub
or
fs
push
rclb
adc
stc
testb
cld
sbb
dec
sbb
cld
sub
mov
in
test
outsb
and
sarb
out
add
jmp
jns
adc
cld
clc
xor
xchg
mov
les
dec
jbe
mull
fcompl
out
ljmp
nop
jae
mov
xor
push
iret
fiaddl
outsl
xchg
data16
inc
lds
cli
andl
sarb
xor
rcrl
cmp
lock
repnz
mov
in
stos
mov
out
and
sbb
xlat
mov
sahf
call
mov
mov
aaa
test
mov
lods
in
mov
pop
jge
push
jnp
js
cmp
adc
jl,pt
loope
int3
pop
and
and
pop
inc
adc
out
xor
mov
or
mov
les
mov
mov
sahf
aas
ret
sbb
push
andb
cld
dec
mov
aam
add
and
arpl
sahf
sub
mov
and
adc
and
sub
movsb
sbb
das
inc
pushf
scas
loope
cmpl
pop
jmp
cmp
mov
push
sbb
negl
pop
sbb
xchg
lds
lods
sbb
mov
in
aam
mov
add
call
std
push
mov
dec
inc
dec
fdivrl
call
shl
into
pop
sub
sub
icebp
xor
push
adc
rcr
shlb
mov
adc
dec
dec
lea
sub
iret
cmp
pop
inc
cmp
and
add
iret
scas
dec
into
popf
jle
cli
pusha
mov
js
divl
mov
and
ret
das
popa
dec
jge
pushf
xchg
pop
and
or
das
pop
pop
imul
mov
loope
leave
cmpsb
test
mov
dec
les
push
flds
push
or
nop
mov
daa
mov
out
shrb
pushf
sar
das
out
rcl
mov
loop
xchg
sbb
jne
mov
in
mov
mov
dec
cmpsb
dec
imul
jmp
roll
jbe
out
cli
roll
enter
pop
mov
pop
mov
inc
xchg
push
mov
push
fstp
jmp
add
jmp
or
ds
xchg
lret
daa
cmp
pop
incb
mov
dec
sub
jbe
in
adc
push
inc
xchg
pop
mov
clc
push
loop
push
and
xor
xchg
pcmpgtb
jb
insb
leave
mov
lcall
push
cmpsb
add
lds
aas
bnd
pop
mov
or
das
test
stos
insl
out
inc
arpl
pushf
or
xchg
push
rcr
sahf
mov
repnz
cwtl
mov
xchg
fsubrs
subb
je
sbb
ja
xchg
sbbl
push
jno
add
pop
sub
pop
mov
dec
in
xor
in
stos
rclb
cwtl
push
mov
cmpsb
add
out
jo
imul
and
daa
pusha
pop
stos
repz
dec
pop
push
stos
test
out
sbb
inc
and
ss
into
mov
sahf
and
lret
xchg
insb
xor
das
cmpl
cmc
add
insb
pop
mov
xor
iret
mov
cmp
shll
loop
sar
lea
loope
aas
inc
cmpsl
js
xor
out
dec
mov
mov
inc
loop
bound
xor
pop
filds
inc
dec
stc
dec
jmp
cmp
leave
in
outsl
scas
mov
push
adc
add
push
mov
jle
loop
or
pushf
decl
mov
push
iret
cmp
sub
sbb
fucomi
fimuls
stc
dec
adc
cmpb
jns
cli
dec
xchg
movsb
inc
mov
gs
icebp
or
sbb
out
and
push
pop
cmpsb
daa
sahf
mov
test
pop
movsb
mov
sahf
test
rolb
lret
int
sub
jns
sahf
push
dec
out
xor
in
xchg
imul
or
mov
pusha
ss
dec
push
into
sti
lahf
or
loopnew
cmp
pop
xchg
scas
and
xor
sahf
or
cmp
fstl
lret
pop
xlat
xchg
test
cld
popa
sub
and
dec
int3
lock
or
or
dec
insb
jbe
mov
ljmp
fnstcw
add
movsl
push
xchg
mov
lahf
insl
arpl
xor
divl
sub
jge
push
je
sti
push
sti
icebp
pusha
mov
dec
or
loop
inc
bound
pusha
mov
lahf
mov
pop
cmp
jbe
cmpsl
jns
imul
xchg
stos
jmp
dec
pop
pop
cmpsb
jg
cmpsl
push
jge
and
mov
insl
out
outsb
dec
push
cld
outsb
or
cld
daa
std
popl
jns
cmpsl
xlat
stos
mov
or
pop
jp
and
pushf
movsl
fisubs
sahf
aaa
lcall
into
repz
adc
add
lds
flds
or
cmpsb
imul
lcall
push
int3
or
test
aas
push
jb
js
cmp
mov
add
fwait
jmp
pusha
mov
sub
imul
jno
sub
pop
xchg
mov
add
or
mov
call
adc
test
adcb
es
fwait
jns
sarb
mov
xor
and
adc
sbb
push
xchg
repnz
lods
push
sub
aaa
enter
or
pop
mov
mov
jno
and
inc
pop
or
mov
das
mov
pop
jge
hlt
sarl
mov
fs
push
and
inc
scas
loope
push
add
dec
sbb
loop
cs
jmp
jmp
lods
mov
mov
mov
fldenv
stc
ds
mov
mov
xor
pop
mov
or
and
add
insb
or
stc
lea
pop
mov
or
push
sub
sbb
adc
push
cmp
xchg
inc
mov
clc
jmp
adc
push
mov
and
popa
aam
js
and
cli
stos
or
addb
rorb
out
adc
nop
cmpsl
ret
mov
mov
mov
mov
jb
xchg
jbe
xchg
ja
xchg
dec
testl
stos
sbb
mov
call
test
sbb
inc
out
jo
xchg
adc
jo
mov
cs
fadds
in
inc
shll
or
out
and
mov
push
pop
sbb
mov
rclb
jp
push
loop
test
mov
loope
inc
inc
iret
addr16
daa
dec
dec
fildl
mov
jp
inc
xchg
dec
shrl
lcall
outsl
dec
rclb
lret
push
aad
adc
inc
push
adc
call
shll
aad
in
sti
add
inc
cli
mov
in
jmp
orl
adc
test
dec
lret
das
sub
jno
inc
mov
mov
xor
shrb
sbb
dec
mov
inc
out
pop
lds
push
into
lds
stos
xlat
hlt
andl
cmpsl
cmp
aaa
lods
and
dec
inc
mov
or
dec
mov
cmc
ss
sar
mov
xor
lahf
or
pop
mov
int3
pop
xchg
pop
jecxz
mov
push
mov
inc
sub
cmp
int
jg
stos
fisubs
push
outsl
jns
mov
cmp
cmc
insb
lahf
push
inc
lret
and
add
test
inc
and
repnz
sbb
pop
inc
test
mov
jp
mov
mov
jns
mov
jge
cmc
xchg
mov
sub
and
mov
nop
lea
xchg
jmp
inc
mov
jb
icebp
je
jbe
shll
jl
pop
xor
inc
enter
push
mov
outsl
push
sbbl
insl
jae
dec
push
rol
jb
cmpsb
or
cltd
push
mov
adc
in
dec
fisubl
xchg
mov
rol
pop
add
fwait
in
mov
xchg
ret
lock
sbb
mov
movb
jecxz
data16
insl
or
neg
sarb
adc
insb
xor
mov
sahf
cmpb
inc
jns
test
incl
jno
ds
mov
lods
lret
mov
int
xchg
imul
inc
into
jno
adc
lcall
and
pop
mov
test
and
imul
mov
cmovl
inc
lret
fs
out
sub
xor
mov
js
leave
bound
hlt
loopne
cwtl
mov
insl
imul
add
sbb
test
fwait
cmp
jle
lret
mov
mov
or
cmpsl
add
mov
cmp
pushf
popf
xor
xchg
add
test
inc
mov
xor
sub
out
sub
loope
mov
dec
mov
mov
decl
xchg
xchg
sbb
je
push
mov
test
rolb
in
fnstsw
or
stos
and
dec
mov
popf
dec
clc
pushf
loopne
pop
jl
xlat
cld
inc
test
push
dec
in
fwait
jge
and
ss
je
pop
pushf
sbb
mov
mull
mov
js
in
or
daa
sbb
fwait
adc
adc
rcr
rcrl
sarl
imul
adc
dec
jbe
mov
inc
mov
sahf
push
xor
dec
sbb
popa
shrb
mov
cmp
ss
sbb
icebp
pop
xchg
xor
cmp
push
clc
cmp
xchg
xor
ret
stos
arpl
addr16
dec
or
xchg
les
xchg
mov
shl
std
mov
lods
out
mov
push
clc
lea
test
mov
dec
and
aaa
in
ss
add
pusha
mov
push
sbb
lahf
jmp
xor
aaa
sub
xor
subb
mov
cld
jp
or
repnz
aas
outsl
xor
add
push
adc
xchg
cs
push
sti
ret
jne
ds
and
je
popa
fistl
add
mov
sub
mov
cmp
push
enter
mov
in
adcb
pop
jnp
mov
dec
cltd
fistl
lds
inc
mov
mov
jnp
mov
jns
pop
mov
in
stc
adc
arpl
lahf
pop
adc
inc
movsb
sbb
scas
sahf
sbb
inc
test
pop
cmp
adc
or
cli
imul
out
or
addb
enter
sbb
mov
fisubrs
cwtl
cmpsb
add
call
neg
pop
test
rcrb
push
xor
and
mov
fsts
push
mov
das
and
orl
mov
sub
pop
sbb
sub
jo
pop
scas
lods
fstpt
mov
bound
mov
lret
xor
mov
rorb
inc
aas
pop
mov
xchg
bound
xor
fwait
add
loopne
mov
lock
lret
shrl
adc
pop
xchg
push
and
cli
fimuls
pop
inc
xor
dec
push
jecxz
arpl
imul
push
dec
hlt
lea
fiaddl
push
and
adc
push
into
test
push
or
nop
insl
or
pop
cltd
dec
jp
ss
mov
int3
dec
and
xchg
lods
test
rcll
insl
mov
ret
movsl
iret
mov
icebp
pop
jp
and
ljmp
push
sub
mov
and
mov
push
andb
xchg
loopne
or
les
lea
mov
or
loopne
mov
cld
loope
cmc
adc
in
outsl
mov
aam
repz
jb
mov
mov
push
pop
insb
pusha
ret
addr16
into
adc
js
mov
push
inc
push
sbb
xchg
sti
xchg
dec
arpl
test
xchg
push
sarl
pop
in
mov
pop
loopne
push
mov
cmc
xlat
mov
add
or
dec
mov
daa
xchg
xor
in
mov
jne
ror
ljmp
pop
jns
or
mov
arpl
sbb
lock
arpl
loopne
dec
cmp
inc
jnp
inc
sti
outsb
dec
mov
jmp
fxtract
cmp
repnz
das
or
lcall
mov
js
or
cmp
test
mov
fs
xor
lods
movsb
jb
xchg
mov
pop
je
mov
xchg
aam
das
mov
adc
leave
sbb
lcall
daa
arpl
popf
cmpsl
out
dec
insb
jns
cmp
sub
lods
jp
and
or
fwait
cmp
enter
xor
rclb
cltd
sbb
pop
addr16
sub
lret
jp
inc
mov
into
add
mov
cmp
xor
test
pushl
inc
xor
jge
stos
jne
jp
mov
jmp
cmpsb
cmc
arpl
dec
mov
into
les
imul
rcll
sub
fistl
sbb
xor
push
sub
push
or
or
mov
mov
cmp
dec
add
fisubl
jmp
hlt
das
in
xchg
repnz
fcmovbe
or
mov
mov
out
xchg
ljmp
adc
cli
pop
adc
push
stos
lret
pop
jg
push
lods
and
mov
je
lock
jae
xchg
xor
insb
cs
jnp
xor
lret
fnsave
jbe
pop
out
fcmovnb
repnz
adc
and
cmp
mov
scas
pop
test
mov
or
cmp
mov
test
outsb
test
inc
xchg
xchg
jb
popa
xlat
fnstcw
pop
ret
xchg
xlat
mov
mov
add
cmpl
adc
pop
fs
or
sub
push
xchg
and
aam
push
push
push
test
pop
sarl
inc
repnz
push
jg
push
out
rclb
inc
push
push
hlt
repnz
scas
pop
add
pop
fs
rcrb
into
fisubrs
jp
mov
aam
pop
pop
sbb
cs
divl
movb
imul
aaa
dec
inc
das
outsl
fucom
inc
les
arpl
cmp
jo
jno
fcmovne
jecxz
loop
pusha
inc
stos
push
stc
out
xorl
test
inc
mov
add
test
repz
and
lea
lods
iret
mov
xor
call
mov
shrl
mov
clc
cmpsl
mov
pop
ret
pop
loop
fidivs
imul
js
ret
and
rorl
jmp
push
push
lea
aam
sbb
push
sbb
jnp
push
sbb
das
es
fwait
jb,pn
outsb
pop
popf
mov
decl
dec
sbb
push
xchg
mov
push
sbb
jl
sub
outsl
pop
xchg
add
pop
test
jns
lea
out
je
mov
inc
xchg
std
psrld
rcrb
ret
adc
ds
out
imul
aam
packssdw
jge
bound
scas
push
pushf
out
loope
lret
mov
jns
in
cmp
movsb
and
ret
inc
add
add
pop
nop
dec
enter
mov
sbb
call
cltd
cmp
push
add
jmp
std
shl
sbb
popa
andb
jle
stc
loopne
mov
add
imul
lock
fsubs
fisttpll
dec
outsb
pop
popa
mov
cmpb
and
incl
sub
sub
mov
add
scas
cmp
xchg
xor
push
outsb
loop
call
cmpsl
jno
fadds
add
bswap
ja
adc
jnp
imul
inc
imul
mov
sub
jecxz
or
adc
pushl
xchg
mov
pop
add
enter
movswl
adc
inc
les
lahf
or
sub
lock
and
sub
push
jge
fwait
sub
mov
sbb
das
mov
jnp
dec
push
std
imul
fdivs
jmp
movnti
idivl
cmpsl
fcmove
outsl
jo
mov
and
gs
lcall
xchg
cwtl
pop
adcb
mov
fimuls
mov
inc
stos
in
add
add
leave
lds
and
in
bound
mov
mov
icebp
pop
xchg
mov
outsb
cmp
fdivrl
les
push
in
leave
out
dec
out
mov
sub
inc
mov
pop
scas
xadd
mov
stos
dec
cld
or
popf
xchg
bound
test
popa
lods
test
lods
fsts
inc
jecxz
loopne
jae
push
xlat
sbb
sub
ficoml
mov
rcll
pop
sbb
and
push
inc
mov
xchg
xor
in
add
mov
push
leave
mull
jns
cmp
xor
push
mov
mov
scas
aad
and
jp
repnz
shlb
js
fmulp
movsl
push
nop
imul
clc
inc
pop
loopne
mov
loope
jl
inc
cli
shl
mov
add
je
push
imul
push
imul
and
adc
jb
fadds
mov
data16
lods
mov
cli
mov
mov
sbb
pop
es
sbb
call
pop
push
fstpl
or
negb
adc
in
rcr
mov
sti
adc
sub
push
add
jne
inc
jge
xchg
inc
pop
aaa
push
sahf
rclb
push
mov
jno
test
cs
xchg
neg
sub
clc
cmp
adc
xchg
decb
jp
dec
add
push
loopne
sub
out
jb
ficompl
or
pop
fsubr
faddl
add
insl
lea
mov
scas
cmpsl
mov
rorb
sub
sbb
cmc
add
mov
nop
inc
mov
mov
mov
sub
mov
mov
cmpsb
inc
inc
add
js
cld
or
inc
mov
repnz
sub
ret
sti
lcall
jecxz
jnp
icebp
add
ficompl
aaa
testb
sub
xchg
add
cmpsl
mov
sahf
cmp
xchg
int3
enter
sub
add
xor
mov
push
mov
sub
aaa
push
test
sbb
je
dec
cwtl
jo
fmull
sub
outsl
js
sbb
lret
in
lret
movsb
loopne
xlat
hlt
dec
sbb
rcr
cmp
rcrb
sbb
test
inc
xchg
in
inc
add
and
mov
pop
out
dec
xchg
pop
dec
xchg
inc
movsb
sub
xchg
cmp
mov
pop
adcl
loopne
mov
inc
fldcw
das
leave
fcoms
and
sub
xor
cmpsl
subb
jmp
push
sub
std
sbb
das
push
repz
jmp
sbb
bound
xchg
or
fildl
cmpsb
fildll
jecxz
xchg
pop
dec
mov
mov
subl
push
loopne
sub
fs
jg
outsb
ja
xor
ds
pop
loopne
push
pop
jnp
jmp
xor
jo
or
clc
xchg
incb
lahf
or
xor
adcb
pop
xchg
adc
xlat
pop
out
dec
pusha
sub
mov
shlb
mov
cmp
ret
outsl
adc
scas
decl
in
std
xchg
mov
mov
int
dec
mov
dec
jb
fdivrs
push
cmp
push
jp
mov
and
insb
rcll
push
mov
fwait
xchg
push
jecxz
in
sti
or
into
inc
int
xlat
mov
clc
cmc
mov
mov
jnp
mov
loop
xlat
inc
adc
out
dec
dec
frstor
mov
fistl
iret
push
fsubp
adc
cmp
lcall
test
popa
sbb
or
mov
mov
int
sbb
pop
and
ficompl
mov
jns
xor
mov
push
mov
jmp
push
sahf
and
shrl
inc
fildl
dec
add
iret
daa
out
inc
in
cwtl
mov
std
out
test
ficoms
shlb
and
fcomps
xor
sub
inc
scas
gs
addr16
mov
lods
pop
xor
call
orl
mov
mov
mov
lea
imul
repnz
leave
addr16
sahf
jne
xchg
mov
fiadds
push
push
loopne
and
or
es
jno
test
aam
in
pop
mov
jae
sbb
sub
xchg
dec
ja
xchg
mov
add
jmp
outsl
test
xor
xor
add
clc
add
inc
pop
xchg
xchg
jnp
in
mov
stc
mov
add
pusha
popl
lea
pop
fmulp
testb
movsb
mov
loop
xchg
xchg
dec
shlb
jns
mov
xchg
out
test
aam
rcll
out
sub
mov
std
dec
xor
xchg
dec
or
adc
add
add
les
hlt
shlb
out
lods
in
pop
imul
dec
pop
adcl
lods
lcall
aaa
mov
jne
movsl
xchg
mov
mov
xor
mov
fdivs
fdivrl
adc
jno
pusha
in
xchg
jno
jb
xorl
jmp
je
enter
and
out
mov
adc
mov
mov
pushf
sbb
adc
sub
das
jnp
dec
xchg
lret
clc
stc
mov
lea
into
dec
push
addr16
jb
mov
cmp
pop
inc
cmpsb
xchg
dec
mov
mov
lcall
lahf
ss
adc
xchg
out
sbb
pop
mov
jns
lock
and
jb
sbb
mov
inc
xchg
mov
jno
pop
js
lods
or
scas
inc
es
lahf
cmpsb
lock
cli
cmp
cmc
or
inc
scas
and
cmc
test
xor
sbb
push
pushf
jp
cmp
jg
xchg
inc
cltd
push
popf
stc
lret
popf
fsubrs
xor
loop
addl
mov
jmp
and
and
xchg
cwtl
xchg
divb
dec
movsl
xlat
leave
lcall
sub
mov
arpl
arpl
push
das
and
adc
pop
clc
testl
jmp
fists
pop
xchg
pushf
and
inc
gs
inc
lret
repnz
dec
xchg
std
add
test
mov
mov
loop
test
mov
push
rorl
std
fldcw
fstl
push
ret
imull
popf
pop
aaa
pop
add
pop
cmp
cld
inc
sbb
inc
pop
push
je
mov
add
outsb
ret
movntps
push
cmpsl
sbb
cmp
fsubl
ja
imul
loopne
sbb
mov
pop
xchg
movb
gs
std
test
arpl
pop
sub
enter
jl
imul
jg
xchg
mov
out
pop
adc
test
xchg
fldenv
call
xlat
adc
bound
test
cmc
push
cli
lcall
mov
adc
pop
sahf
dec
mov
cmp
mov
sbb
jl
xchg
fs
mov
adcl
mull
shrl
into
test
popa
jg
test
mov
pop
out
jae
lods
cmc
mov
mov
xchg
jbe
mov
xchg
cwtl
cmp
pop
add
push
mov
cmp
loopne
xchg
mov
popa
jbe
jno
and
lret
test
popf
jo
in
inc
sub
mov
arpl
repnz
repnz
loope
shrb
addr16
sahf
js
mov
inc
stos
and
cmp
mov
jo
mov
bound
or
clc
mov
jmp
adc
jmp
xchg
fbld
int
and
dec
jp
pop
in
push
add
out
arpl
fs
xchg
shrl
push
mov
repz
out
mov
pusha
and
inc
lret
mov
push
jae
fwait
sub
sub
aaa
jo,pn
jle
mov
insb
js
mov
pop
fnstcw
jle
shll
lds
jp
out
sti
ja
leave
jp
fbld
ss
mov
add
push
subl
jg
add
push
insl
push
mov
dec
fcmovne
das
and
les
pop
xchg
decb
pop
lods
lds
stc
jecxz
sarb
mov
jo
fcomi
sahf
adcb
adc
mov
lods
adc
in
lcall
mov
cmc
fiaddl
enter
stos
rorl
rcll
jmp
mov
jecxz
mov
jge
mov
push
dec
scas
cmp
mov
into
inc
fadd
xor
sub
jne
jle
rcrl
mov
insb
mov
jne
aam
fdiv
clc
sbb
mov
mov
cmc
aad
mov
dec
mov
lock
std
nop
inc
push
pop
jecxz
outsb
sub
inc
subb
in
mov
mov
cmp
cs
cltd
mov
fdiv
pop
fldcw
lods
jbe
and
or
sqrtps
ret
mov
js
fcomp
daa
sbb
out
ror
mov
repnz
mov
arpl
xchg
sbb
sub
pop
or
out
sub
xchg
xchg
mov
aaa
mov
divl
sub
jge,pt
mov
and
addr16
je
jge
adc
adc
cmp
rorl
mov
ja
add
enter
adc
mov
movsb
inc
je
dec
sbb
pop
mov
inc
lds
xlat
fmul
sbb
ja
add
scas
in
mov
mov
jl
insl
cmp
cmp
sub
inc
push
pop
mov
jbe
jae
sti
cld
cmpsb
xchg
add
daa
mov
inc
ud1
test
dec
adc
leave
adc
dec
mov
jnp
repnz
cs
inc
lds
or
inc
mov
sbb
or
addr16
dec
push
out
fidivs
fistpll
int
hlt
stos
mov
cmc
push
nop
in
test
sub
lods
dec
mov
dec
mov
lock
add
mov
inc
add
in
mov
lret
jp
repz
push
cmpsl
rcl
leave
jmp
sub
jle
stos
mov
lods
push
pop
roll
imul
dec
sub
xchg
sbb
mov
sti
sti
into
lret
push
les
lea
out
and
add
push
push
push
cltd
xor
shll
mov
push
push
rol
test
int3
mov
insl
aas
push
jle,pt
jns
ljmp
lock
xor
rol
fucomip
adc
jns
mov
imul
jae
inc
in
movsl
mov
insb
mov
mov
dec
and
adc
mov
imul
sbb
insl
mov
das
push
xchg
push
jl
subl
gs
sbb
dec
fwait
sbb
xlat
push
aad
jl
filds
jae
jmp
jl
out
lcall
stos
cmp
cmc
jmp
dec
pop
mov
movsl
pop
pop
ss
mov
mov
jecxz
xchg
cld
inc
int
psllw
loopne
push
push
xchg
push
xchg
call
les
shrl
lahf
insl
or
fnstenv
add
cld
mov
fidivrs
cmc
out
int
xorb
lods
mov
aad
mov
loopne
dec
call
enter
cmpsl
sub
outsb
lea
inc
pop
jge
sub
sbb
fwait
andb
shlb
sub
mov
jp
jnp
push
inc
xor
std
pop
fdivrl
add
mov
dec
lea
or
cld
lret
out
aam
and
jge
pusha
mov
cmp
cmp
push
adc
enter
icebp
fcomps
inc
xor
lret
push
push
inc
scas
or
jns
repnz
xchg
sahf
adc
fidivrs
sahf
mov
push
push
out
and
aas
xchg
mov
sub
add
mov
inc
adc
dec
cmpb
fwait
lock
fcmovu
cmp
push
xchg
aam
push
inc
or
jbe
and
jp
xchg
sbbb
aad
mov
mov
popf
loopne
mov
xor
cmp
adc
iret
push
or
cld
inc
movsl
subl
fnstcw
push
xor
scas
pop
push
aad
outsb
pop
sahf
mov
mov
jecxz
xchg
fadd
adc
push
cmp
out
xchg
cmp
add
jge
xchg
mov
and
addb
add
clc
insl
aam
fmull
xchg
cmp
fwait
sbb
pop
and
es
jmp
in
mov
and
in
jns
clc
jnp
inc
sbb
xlat
inc
sarb
mov
ja
push
rcrl
sub
lock
or
mov
pop
ret
inc
aas
mov
repz
ja
cmp
in
pusha
add
add
and
dec
xchg
std
add
and
in
push
adc
cmp
into
addr16
inc
shrl
jno
dec
xchg
mov
gs
jb
or
les
test
out
xchg
into
dec
pop
lock
sar
gs
scas
loop
test
test
lcall
stos
mov
fcoml
inc
dec
sub
loopne
ficoms
and
pop
sti
mov
xor
xor
pop
je
aas
cmc
nop
fidivs
es
out
test
pop
aas
jle
mov
test
jnp
das
lret
insl
sub
and
or
sarl
cmp
aaa
stc
shl
mov
mov
movsb
int3
aam
in
push
fisttpll
cli
ljmp
in
jo
sbb
out
aaa
scas
inc
repz
jge
jle
cmc
push
imulb
or
mulb
inc
push
inc
scas
push
add
test
lret
cltd
jno
xchg
cmp
xchg
cs
push
xchg
scas
and
fldcw
or
add
adc
jne
sti
push
ja
je
or
cmp
test
ret
or
cmp
dec
sbb
in
gs
out
sbb
xor
rcr
mov
push
es
leave
pop
or
cmp
jg
jmp
and
mov
iret
into
scas
lea
jecxz
cmc
lret
ficomps
enter
xchg
repz
sub
sub
and
cmp
xor
mov
inc
lcall
into
add
adc
movsl
jae
jo
jmp
inc
jns
inc
cmp
filds
and
add
add
mov
dec
gs
bnd
cmpsb
push
stos
cli
rcrb
call
out
mov
popa
test
cmpsl
hlt
aas
sbb
test
les
inc
sub
int3
jmp
mov
test
inc
enter
pop
sbb
repz
pop
inc
adc
loope
mov
sbbb
daa
jge
dec
or
aad
mov
aaa
popl
xor
push
fcoml
les
jnp
dec
jbe
add
adc
jno
push
arpl
sub
ja
movsl
or
or
or
push
dec
icebp
cli
sub
ljmp
push
pop
or
xchg
inc
jp
cli
scas
dec
lods
xchg
inc
test
and
xor
lret
add
movsb
sbb
jo
jmp
fwait
leave
stos
lds
aad
sub
mov
test
jns
roll
pop
dec
pop
pop
cmp
mov
xor
mov
inc
fisubrs
push
dec
rorb
xchg
or
pop
ret
mov
loopne
fstl
fsubr
jmp
add
jns
push
int3
xchg
jp
sbb
sti
xor
arpl
mov
arpl
aad
push
ret
fwait
in
fistpl
add
stos
cmp
xchg
insb
push
negl
push
mov
xchg
pop
call
and
aad
les
aas
jne
fisttpll
fs
jae
fwait
lret
mov
mov
pop
inc
inc
add
mov
jo
jb
xor
inc
popa
mov
test
pop
or
mov
xor
loope
and
mov
pop
add
inc
hlt
pushf
pop
mov
pop
ret
pop
cmp
cmp
and
idiv
mov
enter
mov
ret
mov
mov
aad
push
aad
pop
cs
pusha
rcrl
fmul
daa
out
cld
adc
lods
push
inc
outsb
dec
loope
inc
sbb
out
les
adc
push
pop
sbb
movaps
mov
pop
fbstp
add
gs
test
or
mov
mov
into
pop
mov
std
pop
xor
js
test
setae
push
sarb
add
scas
inc
cwtl
and
sub
int
lea
lds
mov
pop
mov
jne
push
inc
or
inc
or
mov
into
movsb
iret
daa
pop
fwait
jmp
fiaddl
add
mov
cli
stc
rolb
pop
aad
es
cmc
out
loop
scas
shl
inc
popa
cwtl
test
dec
pop
out
leave
ret
or
out
jo
cmp
cmp
loopne
shl
mov
lock
xchg
and
pop
addr16
and
mov
inc
lock
and
out
jg
pushf
jb
dec
cmpsb
xchg
jp
nop
lods
mov
and
ja
bnd
popf
das
add
pop
int3
dec
sub
call
push
mov
xor
add
stos
cmp
mov
lods
movb
out
xchg
xchg
cs
bnd
imull
dec
je
xchg
inc
into
xchg
xchg
loop
jge
movsl
lahf
and
mov
push
xchg
pop
pop
gs
aaa
jb
imul
frstor
into
sti
xchg
push
cs
push
out
and
ret
rolb
stos
sbb
mov
int3
gs
mov
jae
mov
push
fdivl
mov
dec
dec
lcall
cmpsb
test
scas
fs
push
or
sarb
mov
call
repz
lret
push
xor
jae
cs
pop
push
xorb
test
cmp
jne
es
jg
das
jp
lret
fsubs
sub
nop
push
or
fdivs
or
clc
int
inc
sub
int
mov
psadbw
test
int3
lds
jns
lret
cld
inc
mov
loopne
inc
jnp
mov
icebp
push
dec
les
push
movsb
pop
cmp
outsb
or
mov
cwtl
adc
or
sbb
aas
rcl
mov
and
adc
xor
sub
sub
mov
xor
mov
test
aad
out
mov
adc
popa
test
xor
hlt
jo
dec
cmp
jne
adc
imul
mov
xchg
mov
cmp
sbb
pop
loopne
jmp
or
sahf
es
std
inc
insb
cld
xchg
notb
dec
addr16
and
bound
rcll
fiadds
and
push
fbld
jg
mov
and
movsl
notb
mov
dec
pop
inc
js
cmc
mov
in
popf
shrb
push
int
jb
push
dec
dec
int
adc
shl
shll
push
mov
cmp
xor
addl
stos
aas
sahf
into
jb
int3
pop
add
xor
pop
loop
sbb
mov
jbe
jo
ffreep
jae
ljmp
into
dec
outsb
xor
cmp
adc
adc
xchg
push
cli
gs
sub
jmp
pushf
pop
add
nop
pop
rcrl
mov
pop
pop
sbb
loope
mov
or
xor
dec
loop
shlb
pop
sub
sbb
lds
cmp
pop
or
ret
js
dec
js
scas
rol
mov
imulb
xlat
sbb
daa
xor
cmp
and
jl
xor
jb
test
dec
ret
dec
pop
bound
xchg
or
or
sbb
and
jne
xor
or
enter
psubw
gs
mov
pusha
notl
movsl
push
mov
dec
mov
incl
add
popa
out
imul
shlb
adc
loope
push
or
sti
insb
outsl
push
xor
or
in
test
gs
jecxz
lret
in
icebp
iret
or
ja
or
lcall
adc
rcl
lret
mov
mov
pop
mov
cmp
mov
lods
sub
pop
in
mov
pop
mov
cmp
dec
xor
nop
or
jmp
mov
enter
jbe
in
dec
in
cwtl
xchg
adc
sub
cs
push
add
in
mov
xchg
mov
shll
lock
sub
out
mull
xchg
repnz
daa
daa
stos
mul
test
pushf
cld
pop
js
lahf
std
mov
cld
xchg
sbb
mov
loope
out
addr16
lcall
dec
mov
dec
ja
and
imul
aad
jp
popf
xchg
lds
scas
aaa
push
add
mov
jns
push
xchg
pushf
jno
and
sub
sbb
pop
das
sub
lds
pop
inc
push
clc
mov
mov
cmpsb
adc
inc
cmp
aam
sub
cwtl
cs
cmp
mov
xor
aas
mov
sub
push
push
xor
cmpsl
test
mov
inc
or
and
jmp
add
push
adc
cmp
cmc
or
xor
idiv
addr16
shrl
bound
rorl
stos
cmp
jno
hlt
fcmovnu
push
subl
or
dec
jb
xchg
pop
aas
mov
sti
or
sahf
outsb
lret
loop
insl
xorl
testl
mov
adc
lahf
push
fldenv
div
shld
xchg
clc
pushf
push
sbb
stos
bound
xor
xorl
push
lods
out
mov
call
mov
jae
hlt
xor
dec
add
in
cmpsb
adc
jb
cmp
subb
in
std
xchg
outsb
and
and
mov
arpl
lahf
dec
and
sub
loop
mov
sub
icebp
or
push
cmp
xchg
jbe
pusha
mov
shr
adc
shll
loope
push
cmp
sub
mov
ficomps
xlat
push
adc
movsb
mov
loopne
dec
fisttpll
das
iret
pop
loopne
mov
ffreep
jnp
pusha
mov
mov
notl
xlat
jo
mov
mov
mov
and
mov
mov
enter
or
push
sbb
das
into
xchg
jne
rcll
sbb
cld
push
daa
mov
ljmp
cld
inc
outsb
mov
inc
out
inc
cmp
jbe
repz
cmp
xor
xchg
hlt
adc
adc
cmpb
and
inc
out
int
imul
fwait
cmp
out
push
mov
fdivl
pop
xor
shll
mov
adc
sub
inc
pop
imul
mov
mov
ds
add
es
stos
daa
jne
stos
and
mov
mov
cmp
inc
sub
sbbb
mov
xor
inc
mov
xor
cltd
in
xor
xchg
ficoms
lahf
test
or
rep
push
iret
adcb
shll
subb
pop
push
or
sahf
iret
jae
std
popf
cmpsl
mov
pop
push
pop
add
repz
rorb
aas
sub
jae
fstpl
xchg
mov
pop
mov
jg
pop
adc
int
mov
ja
hlt
lcall
add
jns
sarb
jge
ja
loopne
mov
push
shl
cmp
out
and
dec
adc
pop
std
mov
dec
adcb
ret
add
and
in
or
mov
test
imul
inc
xchg
addr16
inc
ret
hlt
or
test
into
int3
xchg
ret
xchg
in
cmpsb
fdivrs
sub
sub
rcl
aaa
inc
cmp
cli
sub
movsb
cmp
mov
pop
inc
fcompl
mov
mov
mov
test
cmpsl
fdivs
xor
ss
cmpsl
push
aaa
notb
test
lret
aad
outsb
mov
adc
inc
dec
iret
pop
shll
pop
adc
ss
or
dec
push
xor
iret
pop
cmp
push
dec
xlat
lods
sbb
push
imul
mov
pop
pop
xor
or
push
mov
mov
sbb
add
popf
movsb
pop
mov
jbe
jnp
ficoml
xchg
dec
pop
push
and
sub
out
xor
add
iret
rolb
fcmovne
xchg
scas
pushf
andb
scas
pop
pop
cmp
add
jp
pop
and
subl
sub
das
lret
dec
inc
sbb
and
ja
iret
sbb
mov
mov
dec
repz
imul
daa
dec
push
loop
jle
inc
fnstsw
aad
lds
xchg
sahf
dec
imul
repnz
es
pop
lods
adc
cltd
dec
jno
orb
lods
nop
lret
lret
mov
les
dec
sbb
jmp
into
mov
hlt
mov
xor
pop
fwait
aad
push
cmp
popf
push
jae
mov
or
scas
ret
or
rclb
ror
xchg
nop
in
xor
lret
jnp
add
jae
inc
insb
jmp
mov
dec
out
cs
int
scas
sub
aad
out
in
ffreep
pop
push
sub
fstl
push
outsl
loopne
push
insl
cmc
test
jl
inc
bt
aas
sti
inc
push
and
sbb
out
push
and
leave
sbb
insl
call
xor
fldcw
cmp
pop
aaa
mov
jmp
pop
and
xchg
jmp
add
arpl
ftst
movsl
in
fs
push
xorl
in
jle
lock
inc
jnp
push
xchg
and
jle
bound
mov
cmp
movsb
ds
and
mov
mov
add
mov
loopne
out
notl
cmpsb
icebp
cmp
sti
add
xchg
repnz
xor
push
pop
pop
cmc
push
decb
fsubs
xchg
cmp
bound
stos
sbb
orb
jbe
cmp
cmpl
and
xchg
fs
or
or
push
sbbb
outsl
push
xchg
in
mov
push
dec
mov
jo
pop
inc
dec
or
sbb
dec
int
xchg
rdmsr
push
movl
mov
mov
mov
mov
jmp
hlt
xchg
mov
inc
jge
jae
icebp
adc
jb
sarl
dec
fbstp
xchg
cmc
mov
mov
push
mov
icebp
xchg
dec
pop
add
movl
jo
test
fdivp
in
sub
setb
loop
cs
push
into
gs
and
mov
icebp
sbb
cmp
lret
nop
cmp
andb
jmp
xchg
push
and
cmp
popa
mov
jbe
movsl
fst
incb
bound
sbb
jge
add
adc
adc
test
lret
mov
iret
sub
rcrb
mov
push
sbb
mov
loopne
int
dec
mov
jle
rclb
lret
sbb
lcall
mov
mov
stc
mov
in
sbb
push
push
insl
xchg
test
dec
int
push
xor
jbe
and
repz
jbe
jmp
addr16
push
dec
sub
js
dec
loope
xor
inc
hlt
inc
cmp
or
mov
out
dec
mov
jg
sub
scas
imull
adc
jbe
iret
cmc
jnp
sub
imul
je
mov
xchg
push
or
icebp
ds
scas
dec
add
es
adc
jne
imull
push
in
mov
movsb
cwtl
pop
jnp
clc
sbb
inc
dec
xchg
clc
in
notb
mov
inc
pop
adc
ret
mov
push
jne
jbe
xor
cs
enter
jge
mov
jg
repnz
mov
fbld
pushf
out
fdivr
js
leave
fnsave
cmp
idivl
out
mov
jne
outsl
or
add
cmp
testl
in
push
and
add
xchg
mov
cli
jbe
jne
popa
adc
lods
xor
mov
lcall
or
push
jmp
bound
pop
xchg
xchg
add
add
add
mov
popa
dec
in
incl
sets
push
mov
mov
pop
xor
pop
ja
outsl
push
push
arpl
inc
mov
cltd
sub
inc
test
and
adc
outsb
push
mov
xchg
cmp
sub
adc
and
iret
sub
jo
cld
je
ret
adc
dec
out
call
or
lods
sub
imul
pop
js
pop
pop
sub
cltd
pusha
xchg
out
push
lahf
push
jl
shll
mov
mov
dec
mov
push
mov
push
push
insl
shlb
fimuls
ljmp
jge
pusha
jp
ds
imul
iret
or
test
pusha
out
outsl
dec
daa
fimull
cli
add
mov
fxch
adc
subl
inc
mov
fcompl
cmpsl
mov
ss
imul
pushl
stc
loop
inc
push
pop
fadd
repz
das
jae
lock
xchg
out
adc
inc
or
push
stos
imul
cmp
es
call
and
aam
cmp
dec
enter
jne
out
rcr
xor
test
popf
dec
cwtl
and
outsl
std
pop
dec
loopne
sub
testl
outsb
pop
push
jb
cmp
mov
lods
adc
and
movsl
gs
movsl
mov
cmpsb
pop
mov
mov
dec
xor
std
dec
and
rcl
sub
push
mov
sar
and
sub
sbb
dec
ret
adc
test
daa
or
lods
ret
stc
xchg
fnstcw
adc
pop
inc
cs
jl
inc
lahf
push
or
in
xchg
push
pop
sbb
out
into
xchg
mov
pushf
mov
in
lret
and
mov
cmpsb
ja
rcrl
mov
xchg
mov
popa
mov
inc
addr16
or
cwtl
push
dec
fwait
dec
dec
out
scas
mov
jo
sarb
dec
mov
scas
cmovns
xchg
lcall
movsl
je
sbb
xor
mov
rcrb
push
aam
cmpb
ljmp
mov
push
xchg
or
fwait
cmp
fcmovnu
das
loope
in
imul
and
push
lahf
jle
shlb
sahf
mov
jb
push
xor
movsb
mov
and
pop
inc
push
sbb
rcll
pop
push
fisttpll
sarb
pop
cmp
xor
mov
push
sbb
mov
lret
sbb
in
xchg
repz
jbe
add
mov
jle
inc
jle
xor
aaa
shrl
mov
xlat
add
iret
mov
sub
loopne
cmp
nop
lods
mov
rcrb
sbb
in
roll
xlat
dec
shll
inc
fwait
out
int3
adc
adc
dec
sbb
mov
pop
push
nop
cwtl
clc
jae
sysenter
outsl
dec
adc
daa
cld
xchg
dec
cmpsb
sbb
pop
adc
fistpll
sub
inc
je
shll
dec
movsl
add
sahf
cld
mov
push
dec
jnp
fwait
jp
jmpw
popa
inc
ljmp
mov
fucom
sarb
cmpsl
xor
leave
sbb
cmp
mov
jbe
jl
add
or
sarl
push
jns
sub
or
das
aad
sahf
movb
jnp
std
repz
shll
sbb
rorl
pusha
mov
call
fdivrl
movsl
cld
clc
mov
dec
aam
lods
js
fisubs
jne
icebp
lret
mov
cwtl
scas
mov
cmpl
pop
mov
lds
pop
lea
or
into
xchg
inc
pop
shlb
and
mov
lods
cltd
cmp
pop
lret
fwait
cmp
test
push
out
outsl
cmp
addl
dec
out
lahf
pop
push
int3
rolb
cmpsl
or
jbe
mov
jae
outsb
xor
lcall
lods
mov
xor
negl
sbb
fdivl
fisttpll
cmp
ss
repz
rorl
xchg
dec
daa
add
out
sub
add
out
xorl
int
add
enter
popf
out
fimull
imul
dec
cmc
out
jp
push
std
negl
pop
pop
mov
dec
fwait
outsb
fnstcw
das
jne
daa
mov
mov
shll
sub
jle
es
pop
in
and
les
hlt
aas
mov
sbb
mov
sbb
sbb
sbb
or
push
xchg
cs
icebp
dec
inc
popf
xor
fstpl
daa
xchg
test
insl
push
in
in
push
cmc
mov
push
xchg
int
loopne
sbb
mov
cmp
dec
leave
jmp
js
add
das
mov
cltd
js
push
adc
mov
inc
add
mov
or
mulb
push
daa
fwait
xor
ljmp
xor
push
cmpsl
mov
lods
sbb
stos
mov
xchg
in
mov
add
pop
xchg
add
inc
jmp
or
pop
shlb
push
mov
mov
cli
push
je,pt
xor
xor
stos
push
fsubrp
adc
dec
shll
pop
outsb
outsl
rcrb
stos
lret
cmp
out
mov
mov
nop
pop
cmp
fsubrs
lcall
sti
push
stc
and
dec
push
and
add
sbb
cmpsl
shl
dec
shlb
enter
scas
pushf
aad
nop
jl
stos
enter
push
mov
sbb
mov
les
adc
or
inc
sbb
sub
popa
inc
and
push
stos
and
mov
shrb
mov
push
cmp
scas
shll
xchg
xchg
bound
cwtl
jnp
insb
mov
mov
or
movsl
shl
jbe
add
inc
mov
adc
inc
push
mov
push
lea
add
pusha
xchg
pop
cmp
lcall
sar
fbstp
and
mov
inc
addr16
xor
mov
int
or
leave
imul
repz
sub
push
jo
xchg
add
aad
mov
fdivrl
xchg
mov
roll
sbb
mov
lea
imul
fwait
mov
iret
pop
insb
mov
mov
inc
ja
add
ret
add
fpatan
movsl
jb
leave
pop
mov
adc
mov
arpl
jl
lods
lds
cmp
test
call
and
inc
add
jg
mov
mov
adc
inc
xlat
push
iret
sarb
mov
inc
xor
dec
jno
cmpl
loopne
jne
int3
adc
testb
sub
mov
roll
inc
push
or
mov
pop
imul
adc
imul
jo
push
cmpl
fabs
xchg
data16
cmpsl
dec
jbe
inc
repz
dec
in
jge
out
lcall
popf
pusha
jae
push
cld
daa
xorb
pop
inc
jp
jno
enter
cmp
pop
inc
cmp
jns
fdivl
add
inc
mov
test
test
leave
je
idivl
pop
jecxz
sbb
and
add
insb
mov
lret
xchg
imul
mov
add
testb
out
test
fistps
inc
mov
fnstcw
add
cmp
mov
jo
cld
push
pop
hlt
repz
lcall
mov
enter
push
int
pop
push
lods
push
pop
add
imul
sub
stos
ds
shlb
jmp
out
dec
out
fwait
cwtl
clc
addl
in
fstpt
ret
clc
push
cmp
sub
sbb
shrb
ljmp
xchg
repz
adc
sub
shll
lods
mull
inc
pusha
mov
in
push
cmpsb
pop
mov
movb
cmp
pop
sbb
cltd
mov
add
inc
pop
push
and
data16
xchg
fldenv
inc
xor
inc
sahf
and
xor
pop
mov
and
push
ds
mov
aas
stos
push
add
mov
fdivs
jno
pop
jns
dec
xchg
xchg
mov
xor
adc
lods
or
add
jns
pop
lods
repz
rolb
mov
cmp
fcmovbe
lds
in
mov
les
mov
enter
stc
bound
lret
pop
xchg
jb
push
cmp
xchg
xor
sub
outsl
jo
jbe
mov
nop
xor
in
test
ds
push
test
mov
cli
xchg
xlat
pop
mov
xor
rcr
repnz
sahf
push
cmp
out
mov
fnstcw
inc
mov
xor
imul
xchg
xchg
mov
mov
frstor
jle
test
int3
daa
rclb
adc
mov
jg
jmp
cltd
outsl
pop
bound
rclb
stc
fwait
cld
shll
jno
sarb
xchg
test
and
add
stc
cmp
stos
ds
ljmp
cmc
jbe
sbb
pop
stc
je
push
pop
sbb
fcmove
mov
out
dec
es
hlt
jg
add
mov
and
xchg
pop
xor
jle
adc
ss
in
add
paddw
jb
jns
sub
cs
mov
jnp
push
or
ds
and
lret
test
lods
je
test
add
add
shlb
dec
pop
inc
inc
pop
pop
lret
xchg
jmp
xor
jmp
mov
mov
mov
stos
inc
mov
jge
dec
jno
leave
mov
jae
movsb
inc
or
es
pop
mov
mov
aas
jbe
nop
mov
scas
push
add
mov
inc
fsubrp
sahf
out
inc
mov
push
popf
pop
mov
push
imul
lock
adc
inc
dec
sbb
mov
movsb
rcr
inc
faddp
cmp
and
cltd
rcrb
cmpsb
jl
mov
repnz
imul
inc
inc
sub
insb
xor
imul
push
jmp
movsb
mov
repz
push
jne
mov
inc
dec
lret
mov
or
push
add
inc
pop
mov
and
sbb
push
aad
std
dec
dec
sbb
lock
mov
mov
cltd
shl
cmpsb
pop
sub
push
rep
push
rol
mov
add
aas
push
pop
push
or
movsb
into
push
add
mov
div
test
pop
adc
xor
ja
jne
loopne
sub
movsl
mov
outsl
loop
out
les
xor
mov
cmp
out
rcrl
test
in
and
loop
inc
popa
and
xor
inc
add
sbb
jns
jnp
scas
inc
dec
mov
out
repz
xchg
idivl
sahf
mov
hlt
push
pop
sahf
cli
lret
cmp
sbb
adc
adc
cmp
jecxz
loop
sbb
das
pop
fprem
jns
add
insl
jle
add
stc
push
iret
add
cmp
jecxz
cltd
fs
inc
mov
mov
jmp
insb
shll
jo
and
loop
cmc
call
pop
lret
mov
jnp
ficomps
inc
jg
je
or
mov
push
cwtl
inc
cmp
or
daa
das
xlat
xadd
push
iret
in
jns
ljmp
pop
and
imul
icebp
cmpsl
cmp
adc
aas
aas
out
xor
mov
adc
jle
xor
into
jp
lods
in
jo
fistps
or
sbb
xchg
pop
mov
adc
xchg
test
xor
adc
out
mov
leave
test
add
sub
pusha
call
xchg
sbb
mov
fidivs
test
mov
cs
mov
idivb
dec
mov
pop
cwtl
mov
cmp
mov
ljmp
leave
xchg
in
cmp
lea
push
imul
fsubrp
lods
ret
mov
movsl
mov
mov
xor
out
mov
and
pop
jp
mov
dec
loop
add
ss
hlt
hlt
or
inc
add
xor
out
mov
mov
mov
cmp
fcomip
push
out
or
sbb
fistpll
cltd
sub
sbb
jp
sub
dec
cltd
cli
pop
addr16
lret
out
xchg
pop
inc
adc
add
and
mov
std
xchg
hlt
pusha
cmp
xchg
jmp
ret
adc
dec
pop
pop
stos
dec
pmuludq
or
out
outsb
cmpsb
cmc
inc
loope
inc
movsb
fwait
cmc
arpl
fildll
xor
xchg
dec
adcl
jnp
xlat
jnp
adc
or
mov
daa
add
cmp
test
jno
add
xlat
cmp
pop
das
cs
inc
push
ljmp
or
scas
iret
fs
fidivrl
sbb
mov
pop
mov
mov
sbb
addb
fucom
cmp
iret
jmp
jbe
addl
push
dec
movsb
outsb
jmp
inc
movsb
iret
enterw
or
fs
push
pop
int
mov
jo
fstp
loopne
adc
mov
scas
sub
sbb
test
jmp
jns
lods
test
pop
into
cltd
mov
aaa
dec
jo
and
out
scas
cmp
clc
stc
ds
cli
imul
imul
sub
cmpsl
in
cmp
adc
mov
and
aam
fsts
xorb
push
add
cmpl
mov
ss
stos
jg
call
jae
repz
fcompl
cli
dec
fisttps
dec
orl
popa
sub
fs
pop
out
mov
sbb
test
iret
das
rcrb
stos
mov
xor
and
gs
sub
inc
repnz
cmpsb
fldenv
mov
cmp
cmpl
icebp
and
shll
mov
lahf
and
js
outsl
aas
rcll
pop
add
js
aad
mov
out
sbb
mov
sbb
mov
or
cwtl
xor
mov
add
repnz
sbb
stos
pop
loopne
es
stos
mov
stc
mov
push
addl
push
ds
or
dec
mov
mov
jae
add
jo
enter
or
cmp
push
xor
and
push
scas
and
jnp
inc
lock
test
xchg
cmp
dec
icebp
jno
dec
mov
xlat
sbb
pop
jns
out
push
int3
repz
or
or
pop
push
adc
int3
adc
or
out
in
mov
and
cmp
pop
xor
xchg
mov
or
sub
xor
stos
scas
jne
lret
or
sarl
lret
xor
xor
fistl
jecxz
sbb
adc
repnz
mov
xor
dec
test
lret
xor
mov
pop
mov
inc
out
sbb
cmpl
shll
sahf
add
sbb
rorl
add
lea
sub
pop
in
push
ja
push
mov
jnp
scas
mov
pop
aas
dec
or
stos
arpl
das
push
andb
mov
enter
repz
imul
mov
cmp
sub
xor
hlt
mov
cmp
or
xlat
pushf
push
dec
ljmp
data16
mov
andb
loop
mov
jnp
pop
out
loop
sbb
outsl
mov
mov
jp
bound
sbb
push
movb
rolb
lods
out
ja
js
call
lea
push
loop
cmp
dec
mov
xlat
mov
dec
mov
adc
cs
enter
les
and
jmp
cltd
fldl
roll
or
lock
add
fcompl
inc
outsb
and
js
sbbl
in
add
cmp
addr16
xchg
sbb
ret
arpl
aam
sbbb
mov
jl
dec
fwait
lods
mov
pop
out
xor
outsb
mov
bound
out
fadd
xor
into
push
dec
sub
xchg
fwait
mov
sbb
int3
repz
xor
mov
push
fbstp
andl
jbe
out
or
xchg
test
repnz
cmp
mov
popl
sbb
sbb
clc
mov
cltd
adc
push
inc
fwait
dec
clc
mov
idiv
xor
xchg
jecxz
mov
fcomps
es
pop
push
sbb
mov
pushf
push
sbb
push
fnstsw
gs
xchg
stos
or
ss
out
fimull
ds
insb
inc
mov
test
aaa
or
jl
mov
jae
and
xor
ror
jle
lret
and
loopne
in
sub
insb
pop
cli
ds
subl
shrl
loopne
push
cmp
scas
inc
in
flds
fdivrs
pop
testb
jge
push
mov
or
sbb
stos
jmp
cmp
mov
mov
cld
mov
mov
cmp
xchg
loope
imul
mov
inc
daa
dec
fmull
and
xchg
mov
mov
in
pop
pop
sub
sub
nop
and
cmp
adc
negb
shl
into
cwtl
subl
aad
xor
xchg
testb
mov
adc
lret
sbb
or
popa
cmpsb
aas
sub
push
xchg
orl
gs
clc
test
pushl
xchg
mov
aas
mov
in
test
mov
adc
and
aad
or
mov
lret
lret
or
jae
xor
test
xchg
scas
out
int
xchg
sbb
adc
js,pt
lret
popf
bound
out
loope
fistpll
movsb
call
mov
sub
out
add
or
or
jp
mov
inc
inc
sarl
addb
stos
jg
mov
xchg
push
test
push
add
inc
pop
push
or
data16
inc
loopne
sbb
repz
icebp
cmp
sub
add
outsb
cmpsb
loop
hlt
std
sub
adc
mov
andb
xchg
cmp
lret
test
jbe
iret
sbb
in
cltd
push
mov
loope
ficoms
cmpsb
rorb
pop
cmp
mov
xlat
xchg
jecxz
sub
pand
cmp
add
xchg
jne
fdivl
aam
nop
loope
scas
xor
rcll
mov
xchg
aam
or
inc
add
xchg
das
pop
enter
and
mov
mov
inc
clc
push
jp
jle
mov
int
adc
shrl
push
pop
lret
hlt
int3
mov
push
xor
xor
js
rorl
mov
hlt
ss
mov
fcoms
sub
cmp
push
cs
cmp
in
xchg
jne
inc
jns
mov
xchg
sbb
push
pop
ja
int
bound
push
repnz
int
cs
stos
clc
jp
fcoms
pop
jge
mov
sarb
jg
fsincos
fidivrs
adc
test
pop
pusha
repnz
cwtl
push
adc
ret
lahf
inc
and
int
int3
hlt
sti
pop
bound
cmpb
insl
inc
incb
mov
push
jo
push
push
cmp
ret
jo
fbld
add
jns
or
push
stc
arpl
push
loop
sbb
inc
adc
das
push
sarl
call
popf
mov
shl
jae
xchg
cs
jmp
sti
ss
inc
xchg
push
pop
push
mov
loop
iret
leave
push
in
cmp
ds
adc
test
cs
cmpsb
push
mov
cmp
add
imul
jnp
int3
rorl
adc
mov
inc
ret
stos
lahf
ret
aam
add
jl
les
dec
and
xor
dec
jl
and
mov
dec
and
jp
mov
and
dec
pop
jl
mov
in
fidivrs
rcrl
sub
sub
fucomi
pop
sbb
cmp
add
xchg
mov
js
adcb
loope
shl
out
push
sbb
jecxz
lcall
sub
gs
or
xor
sbbl
push
pop
pop
push
jg
dec
sub
jle
add
sub
sti
int
sub
push
adc
loope
sub
nop
addb
lret
push
cmp
mov
cmpsl
jmp
dec
jbe
dec
adc
ret
inc
add
jge
movsl
push
pop
pop
fs
in
jbe
inc
aam
cld
int3
xchg
or
cmp
sub
test
pop
sti
jno
mov
into
movsl
ss
cmp
addl
lds
cld
jecxz
and
in
subl
inc
js
pop
push
out
test
stc
int3
mov
or
in
jae
jl
xor
aam
jnp
mov
mov
cltd
sub
pop
mov
mov
sahf
cmpsb
loope
nop
mov
adcb
cmp
in
loop
cmp
mov
mov
hlt
jns
ret
ret
cmp
outsb
jne
or
xor
lds
jns
xor
shrl
push
pop
mov
insb
sahf
insb
loope
sbb
in
lcall
dec
jns
stos
lock
scas
mov
jmp
pop
testb
push
sahf
adc
popf
test
push
js
clc
cld
mov
adc
iret
mov
push
jbe
adc
loopne
lret
xor
dec
jp
mov
pop
imul
mov
lods
add
aam
sbb
add
clc
adc
push
push
sbbb
mov
mov
jp
scas
std
hlt
std
pop
push
lock
or
sub
sub
jns
test
mov
and
bound
rcrb
fidivrs
inc
movl
pop
dec
push
std
mov
std
fiadds
inc
mov
sbb
pop
mov
sbb
lret
adc
fildl
mov
sti
cmp
or
xor
clc
xlat
add
sub
adc
xchg
lock
and
adc
sub
sbb
push
outsl
inc
mov
mov
pop
sub
xor
adc
mov
lock
rcll
fsubs
sbb
adc
in
push
xchg
mov
mov
stc
or
xchg
aaa
in
jecxz
mov
and
inc
adc
jns
pop
in
pop
sub
rcrb
pop
mov
xchg
scas
jnp
aad
xor
test
outsl
flds
lea
sub
ret
inc
lcall
or
adc
push
sahf
mov
das
add
jp
out
ds
jle
sbb
jno
imul
jne
call
mov
jg
and
sti
xchg
push
stos
sbb
lods
xor
mov
fs
fsub
xor
inc
cmc
sub
outsb
and
mov
push
xchg
xorb
push
pop
adc
push
in
or
mov
push
test
pusha
and
xor
call
out
push
inc
and
pop
leave
outsl
lret
out
inc
mov
sub
std
dec
mov
enter
loop
mov
inc
in
dec
dec
pop
xchg
div
rolb
push
push
cmp
pop
adc
shlb
notl
mov
mov
sbb
mov
cld
mov
in
int3
mov
mov
inc
ds
xchg
loopne
and
fbstp
rorl
pop
imul
add
scas
les
cs
xor
lock
stos
imul
test
call
jge
push
mov
push
or
xchg
xchg
sub
fwait
popa
mov
gs
in
testl
leave
filds
cmpsb
fdiv
inc
notb
jns
cmp
lods
cmp
push
outsb
outsl
call
push
lahf
cmp
cmpsl
sahf
mov
fcomps
push
stos
mov
sub
push
mov
shll
bound
jbe
jl
add
xchg
fcompl
test
jmp
aam
push
inc
push
gs
mov
movsb
int3
jo
sti
pop
mov
insb
mov
adc
push
mov
cmp
cltd
pop
and
cmp
nop
ret
push
test
in
int
out
dec
loope
lea
out
mov
dec
iret
sub
xor
jno
mov
rcll
loope
clc
mov
mov
xchg
add
pop
sbb
inc
popa
sbb
xor
push
push
adc
add
pusha
jle
sub
mov
add
jmp
loopne
pop
js
out
loop
lcall
scas
push
out
and
and
sahf
jmp
mov
sub
sbb
outsb
mov
dec
out
gs
aad
adc
test
in
scas
adc
fs
ds
push
adc
push
out
stc
or
pop
sbb
mov
movsl
das
push
scas
cli
aaa
cli
and
jo
and
out
test
inc
or
or
pop
xor
xor
mov
enter
mov
and
inc
cmp
mov
inc
shll
add
push
es
lods
scas
sbb
mov
stc
inc
loop
cmpsl
push
enter
mov
ja
int3
mov
adc
inc
mov
das
lock
cmp
pop
icebp
push
jge
add
push
int
or
bound
into
dec
adc
sbb
movups
xchg
mov
dec
out
xor
inc
int3
sahf
mov
or
push
push
frstor
outsb
xchg
pop
and
aad
clc
or
lcall
dec
sbb
aam
push
adc
inc
testl
mov
pop
sbb
cmp
pusha
mov
adc
jo
enter
mov
arpl
out
cmpb
xor
aas
test
sbb
push
and
mov
imul
icebp
sub
mov
in
pushf
outsb
lea
mov
ret
das
jno
dec
incb
mov
insb
loop
pop
inc
in
out
js
bound
push
insl
jbe
xchg
arpl
in
loop
mov
mov
iret
add
push
dec
and
sub
sbb
xchg
das
xor
push
mov
test
inc
adc
cmpsb
out
inc
loop
jle
fdivrp
cmp
ja
push
aam
test
pushf
jmp
aad
sbb
adc
cmp
mov
and
pushf
xchg
push
gs
aad
fsts
jl
repnz
cs
jmp
cmp
scas
sbb
addr16
out
andl
fadd
adc
insb
xor
push
pushf
lret
xchg
arpl
je
dec
cmp
mov
mov
fucomp
cwtl
nop
sbb
loop
mov
imul
leave
mov
mov
push
and
and
add
out
js
stc
mov
mov
sti
movsl
rclb
and
cmc
adc
or
pop
fldl
xor
sub
fisttps
inc
inc
pop
movsb
cmc
sub
push
into
xor
repz
mov
cmp
mov
inc
pop
pop
cwtl
sbbb
nop
push
int
jecxz
sbb
das
and
orl
xchg
sub
ds
xor
psrad
or
out
pop
out
lods
pop
mov
pop
dec
mov
out
daa
insl
cwtl
addr16
in
cmp
add
mov
adcb
jb
jmp
cmp
jmp
out
push
lret
push
xor
or
xchg
shrl
mov
sub
out
xchg
out
dec
push
mov
movsl
pushf
xor
ja
xchg
push
shrb
sbb
inc
pop
rcrl
xor
mov
iret
subb
ljmp
enter
and
insb
in
insl
insl
add
mov
popf
inc
inc
mov
adc
inc
jge
ljmp
xchg
jbe
into
ja
sbb
mov
push
movsl
cld
jge
mov
mov
dec
pop
mov
adc
adc
jns
sbb
pushf
dec
addr16
adc
and
adc
mov
push
inc
jb
mov
inc
jb
xchg
iret
xor
roll
xlat
sub
xlat
int
add
lods
add
jmp
mov
gs
push
std
fisubs
cld
arpl
mov
inc
int3
inc
dec
inc
xchg
data16
push
xchg
fistl
repnz
inc
fwait
pop
aas
mov
inc
xor
movsl
inc
jo
cwtl
bnd
push
jno
div
ja
cltd
jne
ljmp
lods
scas
jbe
sub
mov
sub
fcmovu
mov
xor
jbe
test
jno
jle
mov
xor
lret
mov
add
call
pop
aaa
testb
inc
mov
lock
pop
cli
jl
pop
test
imul
mov
pop
mov
sbbl
dec
inc
scas
xchg
dec
popf
mov
xor
pushf
pop
out
mov
pop
pusha
mov
aad
sbb
sbb
outsl
xor
rcll
sbb
fcmovbe
add
pop
ss
daa
jo
insb
sarb
cwtl
mov
add
xor
hlt
mov
push
lret
std
jns
idivl
push
fwait
leave
pushf
jnp
psubsb
lret
xorb
hlt
sbb
adc
xor
jmp
cmp
pop
bound
inc
lret
add
inc
les
push
negb
loop
mov
outsb
mov
mov
fsubrl
mov
rcrb
push
jp
mov
cli
lock
filds
loope
je
in
out
movsb
xlat
scas
loopne
or
cmp
or
mov
addr16
xor
add
mov
push
mov
add
sahf
adc
add
fmull
xor
cwtl
in
ss
jg
in
sbbb
stos
scas
xchg
scas
loope
mov
in
imul
xchg
stc
cmpsb
inc
dec
call
sbb
cmp
add
jnp
cmp
inc
dec
aad
mov
add
test
aaa
inc
or
ret
test
and
jmp
insb
test
inc
pop
sbb
popa
xchg
xchg
adc
lahf
insl
test
mov
cmp
cmp
xchg
movsb
addb
xchg
cmp
shl
int3
andb
cmc
in
aad
adc
arpl
mov
sub
add
sahf
shl
stos
pop
int
adc
idivl
pop
sbb
pushf
adc
loope
aad
fst
mov
fdivrp
sub
es
shr
lahf
jns
lahf
mov
shr
jnp
sets
inc
out
test
fs
xchg
jecxz
inc
push
jns
mov
inc
in
jecxz
cmp
xchg
rcll
repnz
sbb
aam
test
sbb
daa
cmpb
pop
out
addr16
mov
and
pop
jp
jno
adc
cs
pusha
daa
push
sarl
lds
pop
lcall
or
pop
lds
clc
dec
pop
xchg
sub
fstpl
xchg
shl
or
cmpsl
push
xchg
jnp
test
xchg
cmp
popf
cmpsl
and
mov
mov
push
sbb
imul
clc
push
shr
cmp
fcos
loopne
imul
xor
pop
mov
rorl
mov
rcrl
xor
add
mov
push
outsl
les
and
test
sbb
mov
test
jge
dec
in
clc
mov
inc
orb
add
out
movsb
lock
push
and
ret
nop
das
cmpsl
pop
sub
mov
add
pop
pop
pushf
push
pop
sub
push
and
subb
dec
in
outsl
pop
adc
xchg
cmp
icebp
or
cmp
push
pushf
mov
pop
addr16
add
and
mov
pusha
aam
daa
mov
jmp
push
and
or
data16
mov
notl
shll
push
cltd
xchg
repnz
mov
addb
mov
clc
std
js
popa
dec
aaa
lods
loope
subl
pop
bound
inc
inc
jl
cmc
jb
mov
in
jp
out
mov
mov
stos
lahf
fildl
int3
lahf
jb
mov
outsb
andl
mov
addr16
xlat
lea
insb
lock
insb
stos
arpl
sbb
inc
or
jmp
xchg
and
xchg
push
dec
psadbw
sbb
push
cmp
mov
inc
push
rol
inc
test
add
xorl
xchg
ret
bound
mov
clc
inc
sbb
mov
inc
adc
mov
cs
aad
icebp
cmpsl
movsl
lea
pusha
jo
movsb
xchg
jl
insl
imulb
and
imul
mov
xchg
or
xchg
jno
jl
inc
and
jno
add
dec
fcmovnbe
jns
pop
or
and
pop
repnz
mov
repnz
adc
ret
jbe
jl
inc
push
fcompl
xchg
loop
cmp
push
imul
cwtl
sbb
into
incl
lahf
jle
mov
fisubrs
loope
mov
popa
and
int
jne
cmc
in
jle
stos
loope
enter
inc
aas
cwtl
mov
dec
inc
jne
push
sub
inc
fs
mov
sub
sub
cltd
push
icebp
xchg
loop
fnstenv
fisttps
cmpsb
jno
cmp
loope
dec
xchg
repz
jae
ljmp
ret
push
inc
hlt
push
jmp
lret
and
pop
movsb
popa
pop
pop
inc
jns
lea
mov
xchg
je
scas
pop
repnz
loopne
lcall
add
sarb
out
push
adc
push
movsl
mov
push
pop
and
hlt
dec
pusha
adc
sub
clc
daa
loope
cld
jne
rclb
test
pop
stos
imul
xchg
mov
xor
cmc
inc
and
popf
movsl
xchg
outsb
popa
and
mov
sti
xor
leave
adc
loop
addr16
popf
and
sbb
sub
test
inc
or
popa
cmp
push
in
push
pop
insl
mull
pop
jmp
pop
icebp
shlb
out
dec
ss
js
mov
movsl
decb
sbb
leave
xchg
icebp
xor
mov
mov
push
jl
xor
loop
jo
jnp
pop
aad
mov
inc
les
lea
add
sbb
inc
testb
mov
stos
mov
shrb
gs
adc
xchg
cmc
mov
repz
sbb
nop
pop
jmp
sbb
jo
inc
daa
pop
sbb
pop
call
or
outsl
jmp
cmpb
or
daa
lea
jb
scas
mov
cmp
fstpt
xchg
adc
mov
int3
das
sarb
rcrb
daa
sub
cmp
sarb
fsubl
loope
cmp
or
dec
xor
sub
aam
push
sahf
call
stos
sahf
ret
pop
sbb
pop
sbb
mov
add
in
push
push
shrl
movsl
cwtl
fmull
loop
aad
mov
add
pop
imulb
or
arpl
jle
mov
fisubrl
lcall
subl
pop
cmp
repz
mov
shl
call
fwait
ret
sub
lret
rcrb
lea
cmp
pop
or
ret
sbbb
xor
pop
fs
xlat
inc
ljmp
stc
xchg
inc
mull
negl
mov
adc
pop
imul
rcll
cli
dec
pop
mov
mov
pop
xlat
movsb
fdivs
jbe
sbb
lcall
popf
xchg
jne
sbb
mov
mov
aam
fcoms
test
add
push
push
push
out
sub
pushf
jecxz
movsb
mov
in
push
nop
xor
cmp
popf
movzbl
cmpsb
push
mov
dec
aaa
rorb
mov
xchg
fistpll
sub
mov
mov
sbb
mov
gs
fbstp
ds
std
adc
lahf
fld
rclb
mov
repz
jbe
pop
xor
dec
mov
mov
and
gs
add
sbb
shlb
xlat
xchg
adc
mov
pop
sti
xor
sbb
int3
pushf
jle
and
iret
push
jne
dec
push
stos
fldt
and
test
jmp
mov
cmpsl
nop
inc
push
test
scas
push
cli
setl
pop
movsb
pop
loope
dec
jae
or
cltd
fs
adc
sbb
push
loope
cli
popa
int3
repz
push
inc
hlt
cmp
pop
aad
out
cmp
pop
call
pop
or
aas
repz
xor
mov
jns
mov
aas
pop
inc
or
add
icebp
push
xchg
stos
dec
push
mov
push
cmpsb
push
imul
and
repnz
dec
dec
enter
cmc
mov
adc
inc
jl
add
cmp
mov
in
mov
pop
add
fdivl
mov
lds
mov
test
sub
sub
lahf
dec
arpl
push
mov
arpl
arpl
inc
loope
mov
and
cmp
rolb
inc
out
mov
nop
lahf
ret
xor
mov
shrb
addr16
ja
and
outsl
dec
daa
jbe
inc
sub
lods
xchg
sbb
xchg
scas
push
adc
inc
and
jb
or
sub
cwtl
stos
cmpsb
jno
sbb
sbbb
inc
popf
or
or
and
inc
pop
es
sub
lahf
sub
mov
pop
adc
arpl
iret
stos
pop
xchg
cs
mov
pop
jmp
fs
or
aas
loope
inc
push
into
jo
inc
or
inc
in
jmp
push
lods
lods
int
bound
and
mov
nop
cltd
add
or
lock
add
or
dec
cmp
in
and
fldcw
mov
jle
loop
and
mov
push
push
push
sub
fadd
push
cmp
aas
cmp
lret
jnp
ds
pop
test
repz
xchg
int3
lret
ds
and
js
pop
outsl
xchg
mov
add
addr16
call
loope
fnstcw
popf
sarl
je
xor
fidivl
mov
repz
lods
xor
dec
xor
xchg
test
ss
stos
test
stc
aaa
mov
test
sbb
cmpsb
xor
int
das
or
es
and
xor
mov
add
cld
in
repnz
sahf
addr16
push
mov
imul
aaa
cmpb
std
mov
push
adc
lods
bound
jo
cmp
inc
mov
or
fimuls
loope
movl
sub
push
jb
das
shlb
insl
add
iret
fisubrl
repnz
xor
call
clc
int
mov
imul
inc
dec
rclb
mov
fcomp
jg
mov
inc
xlat
jnp
add
inc
fmull
popa
in
enter
popf
inc
dec
insb
jp
push
jmp
arpl
inc
ret
sbb
sbb
addr16
push
in
xchg
pop
roll
xchg
dec
enter
scas
das
sub
dec
and
dec
std
lret
cmp
aas
outsl
jne
ss
shrb
test
jle
mov
movsl
sbb
fisttpll
sub
int3
out
and
sbb
pushf
dec
pop
out
mov
mov
loopne
mov
adc
sub
sub
sub
jnp
adc
leave
aam
decb
jno
xlat
ficoml
scas
fildll
cmp
gs
in
shlb
inc
xchg
out
ficoml
lcall
pusha
and
aas
pop
xchg
xchg
lock
jle
xchg
vcmppd
std
inc
jp
or
sub
into
inc
aaa
jb
xor
sub
sub
push
pop
or
cmp
fdivs
cli
test
ret
mov
dec
mov
pop
cmc
mov
bound
mov
repnz
cld
cld
in
pop
cmp
inc
pop
xchg
or
nop
cmp
xor
dec
sbb
fwait
or
dec
inc
jae
lahf
adc
outsb
pop
andl
mov
out
xchg
cmp
mov
mov
or
xor
sub
sahf
push
cmpsl
ds
inc
xchg
fcom
jbe
adc
popl
mov
cmp
loopne
sub
add
ja
pushf
jbe
cmp
addl
sar
arpl
push
clc
or
out
xchg
gs
test
sbb
mov
jne
outsl
and
rep
leave
das
pop
shll
lods
mov
lret
xchg
imul
je
test
int
scas
icebp
and
movsl
repz
cmp
enter
adc
popf
mov
bound
xchg
les
xchg
repnz
push
leave
push
dec
pop
push
pop
lret
aas
iret
call
add
or
jnp
adc
xchg
jecxz
dec
imul
and
sub
popf
inc
jb
mov
lcall
insl
pop
adc
jle
dec
jbe
xor
cmpsb
cmp
aam
push
jp
cmp
cmpsl
scas
shll
add
mov
mov
dec
clc
inc
in
lock
xchg
jnp
mov
jns
repnz
sub
fmull
jge
int
push
xrelease
lahf
pop
fisttps
sbb
mov
mov
mov
setl
inc
jl
addr16
js
push
stos
out
xchg
jno
inc
sbb
mov
mov
pop
into
mov
xchg
lret
pop
dec
mov
inc
ja
loopne
mov
push
das
or
mov
fistpl
mov
leave
push
ret
lcall
and
leave
in
dec
add
insb
mov
fdivrl
mov
and
dec
roll
popa
push
jecxz
xor
push
cwtl
test
nop
fwait
add
inc
ret
outsl
pop
ljmp
dec
adc
scas
inc
mov
mov
hlt
dec
xchg
jne
xchg
shl
push
addl
jecxz
xchg
in
add
hlt
bound
jae
movsl
andl
lock
inc
aam
add
movsl
iret
ret
fnstsw
test
push
out
add
cs
pushf
leave
inc
sbb
aas
mov
xor
adc
xor
xor
insb
gs
xlat
sbbl
aad
xchg
out
in
pusha
test
add
or
call
bnd
testl
add
shlb
cltd
daa
sahf
jge
in
aas
jae
sub
mov
aas
movsl
lret
adc
stos
in
scas
into
frstor
fadd
or
loope
scas
les
jle
movsb
imul
fisubrs
jg
add
pop
adc
lret
push
lds
data16
inc
push
ficomps
negl
cmp
in
ds
scas
lock
jbe
sub
mov
movsb
ja
xor
xor
inc
pushf
xor
push
inc
aas
xlat
sub
pop
pop
sbbl
mov
ja
xor
inc
push
jns
gs
xorl
push
or
pop
xor
push
cld
xchg
lods
je
cmpsl
test
dec
mov
test
test
jnp
loope
mov
and
ja
int3
xchg
jb
arpl
call
fnsave
cmpl
or
popf
enter
inc
jge
out
push
call
leave
fnstcw
insl
cmpsl
and
iret
mov
add
fwait
pop
test
out
add
inc
sahf
icebp
add
arpl
xor
xor
add
and
push
mov
pop
mov
xchg
jno
xor
cltd
rclb
mov
mov
lods
sbb
inc
repnz
mov
testl
inc
int
mov
pushf
adc
mov
jl
mov
lahf
test
jg
mov
repnz
mov
scas
jecxz
cmp
lock
leave
xor
and
fdivl
mov
inc
add
mov
and
lock
cltd
sbb
mov
in
jb
rcrl
cli
test
mov
mov
test
jge
ret
test
aam
jge
adc
jg
rol
mov
mov
test
lcall
adc
aaa
in
into
out
insb
js
push
mov
xchg
hlt
aad
mov
fdivs
aas
jmp
cmp
mov
loope
and
jmp
lods
fidivrl
xchg
xchg
fs
add
adc
lahf
mov
pop
stos
into
movsb
loopne
sbb
and
fdivs
cmp
lds
nop
lods
out
pop
mov
roll
dec
fsub
cmp
pop
call
mov
add
and
mov
mov
enter
nop
add
xlat
or
mov
lret
cmp
xchg
pop
jne
leave
mov
testb
adc
mov
jbe
fstpl
push
mov
std
sti
and
adc
stos
aaa
iret
das
mov
daa
dec
or
pop
dec
aad
xchg
ret
rorb
sbb
repz
xchg
lahf
cmp
xlat
push
ss
pop
arpl
sbb
jo
enter
mov
lock
push
notl
insl
ljmp
adc
cmpsl
or
dec
mov
mov
ss
icebp
test
inc
ret
lahf
movb
shrl
aam
gs
push
test
and
out
call
cmp
negl
xchg
jecxz
gs
add
fwait
push
repz
fwait
dec
mov
xor
lea
mov
jmp
fimull
mov
mov
pushf
dec
cmp
push
clc
adc
loope
jge
dec
mov
sub
clc
rcll
cli
fistps
fldcw
mov
and
mov
ljmp
into
loopne
stos
inc
jp
adc
sub
pusha
popf
lea
nop
cmpb
out
mov
xor
inc
cmp
and
mov
and
mov
inc
dec
dec
fnsave
popa
push
sub
out
pushl
std
stc
sub
movsb
and
xor
loopne
push
inc
shlb
cltd
std
out
outsl
dec
lcall
test
xor
inc
cmp
and
cmp
add
mov
stc
xorl
das
sbb
incb
pushf
sbb
mov
pop
and
lahf
pushf
xor
pop
pop
int
mov
add
out
out
or
sub
push
fnstcw
rolb
out
pushl
and
jge
addr16
call
mov
and
push
lods
or
cmp
cmp
xlat
subb
imul
sbb
insb
repnz
mov
adc
in
ljmp
popf
jns
mov
mov
or
test
iret
dec
and
sub
out
iret
ret
pop
cs
mov
push
inc
stc
call
mov
mov
out
fyl2x
lds
paddusb
orb
push
pop
and
jle
loopne
pop
test
sahf
inc
pop
jns
xchg
cmp
mov
and
and
and
lods
dec
dec
or
pop
addb
enter
repnz
mov
imul
jo
sbb
xchg
jp
ds
test
mov
sbb
pop
int
push
push
add
push
aas
call
stc
push
adc
ffree
push
cmpsl
jno
sub
pusha
jbe
push
stos
lods
push
aas
imul
ret
jg
ret
ds
sbb
xorl
aad
sbb
ljmp
les
mov
xchg
scas
jmp
sti
ret
ret
xlat
push
mov
movsb
xchg
cmpsl
out
inc
shll
arpl
std
fwait
popa
sbb
test
cli
pop
push
pusha
push
mov
int
aas
aam
mov
sti
in
push
mov
dec
ja
dec
push
filds
mov
dec
lcall
and
lock
fimuls
negb
roll
jae
lds
cli
out
adc
fnstenv
sahf
fimull
jb
dec
or
inc
scas
jl
lahf
and
add
mov
pop
and
dec
cltd
outsb
mov
pop
ljmp
ret
and
mov
add
mov
outsb
aam
fsubr
movsl
push
fisubs
scas
push
fcoml
out
mov
outsl
inc
stc
fucompp
fcmove
lock
adc
push
adc
jb
je
jno
push
xor
repnz
add
inc
xor
cmp
dec
sub
jg
daa
shll
mov
mov
adc
and
and
stc
cs
xorb
or
out
cmpsl
out
int3
mov
mov
aam
inc
lds
adc
dec
xchg
sti
aad
add
mov
in
mov
imul
fcoms
dec
adc
stc
scas
hlt
and
jmp
test
pop
push
pop
mov
mov
pop
sarl
inc
push
lahf
add
push
mov
or
sbb
dec
add
in
repz
and
fadd
push
imul
and
sub
lret
pop
sbb
pop
jo
pop
jg
std
cs
pop
cmp
mov
cmp
dec
sahf
sub
add
mov
insb
popa
movsb
ljmp
hlt
push
dec
std
testl
pop
push
rcll
add
ljmp
add
fsts
xchg
dec
sbb
insb
fcoml
mov
xchg
dec
cwtl
fcompl
jno
lea
ret
pop
xchg
sub
mov
mov
xor
sbb
stos
jns
xchg
lcall
dec
pop
lret
xchg
dec
xchg
adc
fisttpl
mov
mov
shll
sub
pop
ss
cltd
dec
arpl
stos
xchg
sbb
mov
test
movsb
sub
jae
fisubrl
stos
mov
push
cmp
ja
popf
xchg
mov
jg
cmpsb
mov
insb
mov
mov
push
or
xor
loopne
fisttps
scas
sub
xorb
scas
mov
jle
mov
into
incl
inc
test
inc
arpl
xor
ljmp
shl
dec
addr16
jmp
push
dec
mov
mov
mov
ds
ret
iret
cmp
scas
pushf
icebp
cli
test
inc
imul
lock
iret
adc
push
std
adc
cld
nop
gs
fidivrl
dec
call
jmp
or
add
jg
xchg
mov
pop
daa
std
insl
hlt
lcall
iret
adc
cmp
ffreep
and
pop
xchg
lcall
fisttpl
inc
stc
and
hlt
and
aad
push
adc
fildll
cmc
daa
mov
adc
hlt
repnz
mov
repnz
pop
or
aad
das
or
hlt
fcoml
cmp
loope
jmp
ljmp
cs
add
sbb
outsb
and
and
std
pop
sub
mov
jne
mov
bnd
xor
xor
pusha
cmpb
xchg
mov
dec
dec
mov
aas
test
shrl
dec
lds
sub
leave
mov
imul
xor
xchg
inc
sub
xchg
lret
in
in
cmpsl
xor
dec
inc
or
loope
mov
pop
outsl
xor
jl
fsub
nop
xchg
mov
call
testl
adc
outsl
inc
mov
clc
aam
leave
adc
dec
push
pop
cli
cmpsb
push
imulb
repz
mov
adc
and
fwait
jl
pop
jge
arpl
xchg
mov
cmc
lock
xor
sbbw
push
cwtl
or
sub
pusha
cmp
movsb
sbb
repnz
xor
dec
jnp
rol
addl
inc
or
push
xchg
cld
and
mov
inc
dec
push
in
in
pop
push
mov
imul
imul
mov
stos
ja
lods
cmp
mov
lret
insl
out
divl
push
push
or
aam
mov
adc
push
sbb
and
cwtl
xor
inc
sub
pusha
inc
arpl
xor
cmp
mov
out
pushw
aad
sbb
in
pop
sbb
add
dec
inc
jg
adc
sub
pop
ljmp
pop
das
insl
ret
xor
mov
xchg
fistl
rol
xchg
jmp
xchg
mov
or
mov
mov
mov
imul
sub
out
test
lret
push
add
jmp
and
pop
movsl
dec
mov
sub
jne
inc
sub
popf
scas
and
movsl
cmp
outsb
jmp
and
or
sbb
mov
ds
mov
loop
push
stc
test
sub
cmp
roll
xchg
mov
mov
cli
mov
in
scas
xor
scas
aad
in
push
or
jae
cwtl
push
jg
sub
leave
lret
pop
and
mov
icebp
xchg
push
xor
imul
xor
mov
stos
jg
push
xchg
sub
insb
cmp
aaa
jns
pop
inc
out
xchg
xlat
xor
push
or
testl
or
mov
push
fistps
push
inc
push
fcmovu
out
bswap
jg
int
mov
adc
cmpb
or
and
add
pop
insb
mov
bnd
or
pop
lock
add
lret
jge
imul
mov
dec
dec
xor
imul
sti
add
cmc
xor
mov
je
inc
roll
dec
ljmp
sub
push
call
jae
out
les
mov
dec
inc
push
cmp
shl
clc
jl
jne
mov
inc
cmp
and
test
push
hlt
test
xchg
loopne
test
push
dec
shl
rcll
rolb
fcmovnu
arpl
sub
inc
xor
jne
in
out
mov
pop
clc
arpl
cmpsl
cltd
jecxz
pop
or
inc
adc
dec
push
ds
cmpsl
xorb
nop
outsb
es
add
xchg
push
pop
cmp
test
jle
repz
xor
push
pop
enter
adc
fucom
pusha
fwait
xor
sub
mov
push
sub
inc
aad
rcrl
outsl
aad
push
and
aad
adc
xor
push
mov
call
jmp
loope
gs
inc
inc
pusha
xchg
cmpsb
inc
std
push
fistl
lret
outsl
outsb
test
inc
stos
mov
addl
andb
sti
or
stos
insl
frstor
cltd
push
out
sub
rol
mov
bound
lds
adc
mov
lds
sahf
fwait
lahf
mov
fwait
sbb
into
push
inc
dec
push
pop
xlat
into
mov
adc
aaa
cmpsl
xchg
sbb
push
jg
sub
xchg
test
stc
mov
jno
xor
incl
pop
movsb
mov
jno
cmpb
pop
add
add
test
pop
pop
leave
push
nop
sbb
lret
stos
fs
ljmp
imulb
out
sub
cmc
in
xchg
cs
mov
xor
push
lock
jo
cmp
and
outsl
addl
sub
xchg
jnp
or
jg
out
push
cli
xor
pop
not
mov
pusha
dec
decb
mov
outsb
xor
test
daa
mov
or
xchg
dec
lock
cmp
repz
push
mov
test
test
rcr
fbstp
in
mov
into
pop
pop
dec
mov
mov
inc
clc
popa
push
xor
xchg
xchg
jl
adc
push
adc
shlb
xchg
je
mov
ja
enter
sub
mov
adc
jle
loope
jle
add
mov
movsl
mov
in
jae
dec
mov
hlt
cltd
and
dec
mov
sahf
dec
faddl
pop
pop
aad
dec
outsl
mov
fucomi
fisttpl
test
mov
inc
stos
cmp
cmc
loop
dec
add
pop
out
mov
jge
repz
imul
jg
and
bound
int
mov
lds
inc
add
cli
xchg
inc
icebp
popf
mov
or
cmp
xor
mov
mov
testb
rcl
loop
rcll
lods
stos
sbb
dec
inc
outsl
fbstp
mov
sbb
xchg
fimull
pop
mov
out
sub
loop
fildl
mov
mov
dec
into
into
lock
enter
inc
lahf
pusha
popa
cmp
cmp
or
or
cmpl
mov
fwait
loopne
sbb
ljmp
sti
mov
cmp
push
pop
sbb
insb
aas
insl
into
es
push
mov
xchg
fs
frndint
dec
rolb
mov
test
arpl
mov
lret
aam
adc
mov
stc
cmp
mov
sarl
and
int
mov
push
xor
mov
rclb
insb
fistpl
sbb
cli
insl
insl
push
lea
sarl
xchg
xchg
movsl
mov
dec
lcall
outsl
fs
stc
repnz
xchg
aad
test
lods
les
lret
push
sbb
mov
repnz
cmp
inc
jae
or
cmp
xor
xor
pop
daa
sahf
xor
pop
test
cmp
les
ds
sti
add
mov
stos
xor
gs
xor
sahf
call
inc
nop
mov
mov
cmpsb
mov
cld
xchg
stc
xchg
mov
sbb
pushf
out
adc
imul
xor
mov
frstor
push
mov
fistl
xchg
mov
adc
out
ss
xor
jmp
stc
mov
add
icebp
adc
xor
fnstenv
add
addl
adc
pusha
dec
lods
mov
mov
push
shlb
rolb
out
xchg
stc
push
jg
dec
ror
cmp
stos
xchg
outsb
sub
inc
push
loope
jle
jns
cmp
mov
ja
mov
mov
out
and
inc
out
jle
test
mov
mov
fcom
dec
fildll
mov
jle
mov
imul
lock
in
mov
mov
lock
clc
sarl
sub
jmp
cmp
mov
les
mov
aaa
mov
cmp
mov
pusha
jbe
outsl
push
push
mov
psubusb
and
imul
fucomp
test
je
fwait
adc
mov
incl
adc
mov
movb
mov
or
incb
stos
lods
inc
cmp
push
sbb
cmpsl
cltd
pop
jl
dec
mov
in
push
jg
insl
in
jne
aas
out
xchg
js
or
dec
jmp
mov
aas
mov
jbe
adc
ljmp
sbb
icebp
dec
adc
dec
xlat
mov
jge
mov
jnp
push
pop
hlt
pop
stos
mov
add
pop
insb
sbb
add
out
ss
sub
je
adc
push
pop
scas
mov
ss
push
xlat
inc
and
mov
and
xchg
mov
popa
bound
test
pop
mov
dec
inc
cmp
jne
xor
shll
lcall
rol
lcall
popa
xor
popf
sub
filds
dec
cmp
pop
cmp
cmp
jb
sbb
mull
sub
push
daa
shlb
inc
orl
movsb
mov
aad
pusha
shrl
push
les
icebp
mov
jb
int
or
es
in
loop
in
mov
or
cmp
push
lahf
adc
test
imul
daa
add
inc
mov
cmp
or
jns
lods
ficoms
or
fwait
and
pop
jnp
dec
mov
icebp
push
adc
ja
xlat
adc
or
mov
dec
cmpsb
call
imul
cmp
rcrl
inc
bound
aam
adc
adc
outsl
pop
dec
addr16
mov
ja
daa
pop
jecxz
adc
out
insl
das
bound
stos
jmp
and
stc
out
and
rcrb
sbb
sub
sbb
jle
dec
insb
mov
sbb
dec
pop
rolb
adc
les
jbe
cs
adc
je
movsb
lahf
leave
mov
rclb
ret
mov
rclb
inc
out
dec
lcall
scas
mov
nop
push
mov
inc
popa
jmp
add
aad
fstpt
out
int3
movsb
pop
add
in
pop
in
mov
mov
cltd
test
dec
sbb
test
cmp
push
add
test
jb
cmp
and
jp
jge
xor
adc
sub
das
jp
pushf
and
mov
and
mov
mov
les
dec
push
push
push
aad
movsl
mov
mov
dec
jno
xor
std
xchg
repz
mov
imul
push
add
push
mov
xor
mov
je
cmpsl
jb
les
cwtl
cmp
lods
insl
divb
cltd
out
lret
adc
stc
fwait
in
jmp
daa
fisubrl
mov
mov
shr
or
and
lods
sbb
ss
cmc
sbb
pop
xor
mov
mov
int
lret
and
shll
stos
in
sbb
pop
in
ret
pop
dec
loop
movsl
and
or
fwait
dec
test
stos
sub
dec
and
aaa
in
dec
pop
push
dec
stos
fisubs
in
sbb
xchg
test
fs
std
lcall
inc
test
sti
mov
mov
rcrb
ficoml
in
add
scas
xchg
lods
shlb
pushl
inc
popf
dec
xchg
cmp
cmp
pop
and
sbb
scas
pop
mov
push
test
adc
rorl
dec
or
movsl
jp
adc
pop
cmp
test
xor
mov
outsb
jae
jl
pop
mov
test
cwtl
push
popa
cli
cwtl
lds
les
adc
mov
dec
fbld
or
fnstsw
ss
cmp
lahf
or
fbstp
sbb
jp
add
or
add
push
ret
pshufw
cmp
es
cmpl
cmp
ss
mov
add
rcr
scas
jecxz
inc
out
mov
aad
divl
scas
mov
mov
push
outsl
pop
je
ss
sbb
rorb
stos
push
imul
nop
cmp
pop
mov
mov
push
sti
in
lds
mov
sarb
sti
dec
data16
push
inc
lock
push
loope
lea
sbb
ret
push
repnz
cmp
push
rolb
push
mov
inc
inc
sbb
pop
mov
mov
aam
pop
call
inc
rcrb
fwait
cmp
ss
fstps
xchg
add
test
lods
pusha
inc
rcrb
rcll
adc
lret
push
adc
pop
nop
int3
ret
fs
cmp
in
jl
or
mov
add
negb
cmpsl
sbb
arpl
or
stos
inc
aam
clc
scas
ret
mov
nop
test
mov
cmp
cmp
mov
mov
decl
stc
aad
add
cs
mov
mov
cmc
mov
sub
sbb
cmpl
bound
cmpsl
fsts
ljmp
dec
pop
in
mov
ss
push
fs
push
lret
repnz
loop
adcl
jno
xchg
and
pop
loopne
clc
in
jp
ret
push
cmp
inc
fwait
add
inc
test
loope
mov
xor
mov
leave
dec
int3
pop
and
or
dec
push
int3
leave
add
in
and
dec
arpl
cmp
push
pop
xlat
cmpsl
pop
pop
or
imul
pop
add
aam
inc
inc
xchg
xchg
xor
and
in
xchg
dec
test
out
mov
mov
sub
sahf
cmp
loope
ljmp
cltd
ljmp
inc
xor
mov
test
cmpsl
out
and
cmp
int
xlat
adc
sbb
push
enter
aam
lea
mov
cmp
inc
mov
inc
or
dec
fnstsw
lea
sbb
dec
lret
addr16
in
push
lock
push
adc
repz
or
pop
scas
fcom
push
rorb
mov
push
cwtl
push
fcomps
push
mov
inc
dec
dec
jno
loope
push
dec
rcrb
xor
nop
sahf
iret
xlat
icebp
add
xor
sub
jo
cli
jnp
xor
sarb
shlb
sub
xchg
add
stc
mov
imul
sahf
les
mov
scas
add
jns
insb
push
jge
ds
push
jl
mov
stc
inc
ja
push
add
mov
mov
cmpl
lcall
jg
movsb
fs
jmp
xchg
pop
push
fnsave
mov
cmp
mov
loopne
adc
es
jne
xor
mov
inc
push
mov
inc
sub
aaa
pop
mov
jge
lea
in
mov
es
xchg
das
hlt
push
dec
imul
inc
cmp
inc
ljmp
fsin
stos
cmp
popf
inc
loopne
sub
bound
inc
sub
test
jne
mov
pop
push
lock
loope
sahf
int
stc
jbe
in
loop
dec
mov
outsb
inc
mov
fmuls
jecxz
out
cmp
push
mulb
test
cs
push
xor
jae
jmp
dec
lret
stos
scas
std
orb
and
lods
pop
inc
mov
leave
adc
dec
es
pop
fiaddl
data16
adc
leave
xchg
pop
cld
nop
mov
shrb
das
push
push
sbb
jae
ficoml
sub
insl
pop
out
jae
cli
add
lods
push
mov
repnz
dec
and
cmp
mov
arpl
hlt
push
push
mov
dec
pushf
push
imul
mov
cmp
pop
gs
lea
iret
jo
adc
inc
dec
xor
imul
dec
fadds
add
movsl
dec
jecxz
mov
inc
sti
out
ret
mov
testb
rcrl
aad
stc
and
cmp
fcoml
xchg
inc
js
popa
sbb
xor
cs
out
lods
jns
repz
repz
mov
mov
out
imul
ss
mov
sbb
sub
stos
cmpsl
xlat
pop
cmpsl
jo,pn
or
test
clc
dec
push
ret
adc
out
mov
mov
aaa
xchg
adc
sub
cli
aad
repnz
scas
push
in
xor
test
addb
fadd
ret
notb
popa
inc
jno
out
or
addr16
loop
int
mov
xchg
inc
test
or
aad
xor
hlt
sbb
sbbb
cmp
push
ret
mov
dec
push
rolb
loop
lret
add
lds
cld
cmp
inc
stos
jo
and
fsin
lea
add
loopne
mov
xchg
cmpb
push
dec
movsl
mov
fcmovbe
mov
test
and
push
int3
sbb
pop
xchg
insl
jecxz
cli
sub
xor
lcall
and
xor
pop
push
xchg
outsl
mov
imul
mov
push
jb
mov
mov
jne
dec
jle
xor
and
lret
or
icebp
xchg
lret
sub
filds
lock
add
stc
sbb
sarl
sub
cwtl
pop
mov
out
sbbb
stos
push
add
xchg
inc
and
in
shlb
mov
push
data16
in
mov
insb
inc
sbb
xchg
mov
xlat
out
les
ret
fdivp
or
loopne
aaa
shll
cmp
mov
mov
xchg
aad
in
inc
jecxz
fdivrs
mov
jns
and
lea
stos
ret
sub
sahf
xchg
lods
xor
lahf
mov
jbe
mov
jecxz
pop
sub
ficompl
lods
mov
xchg
lea
lods
call
inc
push
test
popf
and
cmpb
cmp
pushf
sbb
cld
repnz
repnz
push
xchg
mov
inc
lahf
fildll
int
mull
je
sbb
andl
pop
into
ds
mov
cld
cmp
mov
and
ds
mov
movsl
sti
push
xchg
xlat
decb
std
dec
int
bswap
inc
cwtl
inc
mov
jnp
mov
rcll
jno
cmp
adc
mov
ficompl
sar
loope
ret
sbb
outsb
mov
xor
jge
cmp
pop
cmp
push
add
mov
add
outsl
pop
sub
into
imul
dec
inc
sub
scas
dec
scas
cmpsb
jb
xor
andl
enter
push
out
mov
fistpl
mov
pop
sub
rcrb
dec
lea
iret
lcall
sbb
xor
and
mov
xlat
fs
jmp
push
xor
gs
fcoml
cmc
mov
xchg
jne
jl
push
ret
mov
cs
je
mov
fmulp
not
test
ljmp
mov
outsl
jae
pop
pop
xchg
cld
fistps
mov
sub
jne
lds
lea
mov
mull
arpl
push
mov
push
dec
sbb
push
out
aaa
add
cmpsl
stos
pop
mov
ljmp
out
stos
outsb
pmulhw
pop
push
stos
xchg
and
pop
or
jmp
cld
pop
fisubrs
test
cmp
and
cmpsl
scas
or
cmp
ds
scas
cmp
fs
orb
dec
leave
pushf
rolb
cmp
in
xchg
leave
xchg
dec
sti
sahf
fstps
loop
dec
pusha
movsl
jne
out
mov
cwtl
popa
sub
push
mov
add
popa
xchg
add
fdivrs
decl
cmpsl
mov
push
out
nop
adc
and
call
jae
popf
pop
push
sub
and
bndldx
mov
dec
aaa
inc
push
in
faddl
mov
insl
hlt
jo
ret
shrb
sub
ja
shl
push
adc
sbb
pop
add
shrb
fnstenv
pop
jge
or
repz
scas
dec
fs
mov
ss
insb
dec
icebp
dec
or
lret
dec
mov
push
ret
mov
sarl
inc
sarb
insb
dec
cmpsb
or
push
pop
lret
fneni(8087
pusha
mov
jns
push
test
mov
ja
mov
cmpl
push
cmp
xlat
sub
gs
jmp
lcall
mov
das
push
mov
sbb
out
imul
sbb
pop
nop
jp
stc
mov
add
add
loope
mov
scas
shll
cmp
mov
and
adc
push
roll
or
ja,pt
push
pop
cmp
mov
les
imul
js
addl
pop
inc
cmp
push
pop
add
mov
mov
nop
mov
mov
inc
xchg
xchg
mov
aaa
in
push
in
cmp
ljmp
pop
pop
adc
out
mov
xor
and
push
in
or
dec
jmp
cmpsl
inc
dec
imul
mov
and
clc
xchg
nop
dec
push
je
xor
clc
adc
jmp
mov
mov
in
jecxz
jp
xor
test
xchg
stos
pop
sub
rorl
popf
stc
pop
dec
aam
shll
pop
mov
pop
test
mov
loop
loopne
sbb
jns
int3
mov
xor
mov
std
sbb
fmul
test
icebp
std
mov
push
xchg
push
dec
rdpmc
jne
cmp
jo
jbe
movsl
int3
aad
jns
popf
dec
mov
dec
push
xchg
pop
pop
cmp
das
push
sub
lcall
cwtl
pop
les
outsb
out
dec
roll
sub
mov
idivl
lahf
jne
imul
pop
in
rolb
out
das
sub
mov
ljmp
mov
das
jecxz
jecxz
push
jecxz
adc
mov
jne
dec
dec
or
pop
xchg
or
pop
cli
loope
push
jno
ljmp
or
cli
aas
or
push
sbb
test
push
mov
xlat
cmpsl
mov
out
rorb
int3
mov
imul
addr16
add
xor
jg
sti
dec
orb
lds
xchg
push
cli
addr16
cmp
push
mov
fildl
shlb
arpl
popf
enter
add
jp
cmp
push
mov
mov
imul
adc
jae
sbb
out
sbb
cld
adc
outsb
jl
lods
paddw
mov
push
cmpsb
fimuls
and
mov
inc
lret
sarb
fdivs
pop
insb
push
inc
lods
jnp
pushf
cli
sub
push
jp
fwait
mov
jo
xchg
push
mov
dec
xchg
and
xchg
inc
inc
pop
lcall
push
imul
shlb
xlat
test
pop
or
or
subl
cld
add
into
adc
push
mov
lods
push
lds
or
dec
cmp
inc
xchg
dec
mov
mov
cmpsl
ja
inc
loop
rol
enter
cld
lahf
jp
adc
movsb
cmpsl
push
mov
xchg
sbb
inc
fldt
in
inc
dec
add
pop
icebp
subl
mov
sbb
leave
nop
mov
ds
push
loopne
xchg
pop
popa
inc
fnstenv
push
enter
loope
cmp
out
pop
pop
shr
rol
dec
mov
cmp
xor
sbb
pop
push
and
push
and
test
mov
mov
aam
hlt
adc
sub
in
inc
icebp
xchg
inc
and
cmp
ja
int
and
rol
and
adc
insl
dec
pop
ret
xchg
mov
loopne
ja
decb
mov
call
sub
mov
out
mov
adc
mov
push
inc
jnp
sub
adc
inc
jns
rolb
inc
cmpsl
push
test
test
or
mov
sub
test
shr
pop
gs
mov
fs
lods
dec
roll
xor
adc
mov
cmp
in
sub
dec
cmp
mov
lret
xchg
fs
dec
movsb
inc
int3
pop
push
pop
jns
push
inc
cmp
popf
cmp
aaa
lahf
mov
push
xchg
mov
dec
ret
push
pop
xchg
push
das
mov
pushf
xor
cmp
sub
movsl
pop
xor
loopne
sahf
mov
xchg
icebp
add
inc
out
stos
cmpb
push
cld
jo
cmpsb
rcll
scas
push
dec
fucomip
adc
lock
and
xchg
fldcw
popa
dec
xor
mov
movsb
hlt
sub
test
cmp
add
xchg
call
cmp
dec
jp
fdivl
jae
jmp
ss
lret
push
cld
in
sbb
dec
stos
mov
leave
pushf
hlt
out
out
mov
mov
decl
lea
cld
mov
addr16
xor
sub
cmpsb
ret
cmp
dec
lahf
out
ss
mov
cmpsb
sbb
pop
addr16
inc
arpl
hlt
xor
xor
outsl
sub
out
stos
daa
imul
in
dec
inc
js
jp
test
pop
movl
inc
add
xchg
lret
icebp
mov
mov
cmp
pop
cmp
cmp
arpl
mov
lahf
popf
or
cmp
jp
popa
sbb
xor
lods
cmp
cmpsl
adc
jl
adc
fs
adc
jo
mov
lds
mulb
jle
repz
pop
inc
xor
add
cmc
stc
out
jl
fs
pop
mov
jae
inc
movsb
xchg
rclb
ja
push
addl
mov
sub
adc
pusha
lret
imul
sbb
cmp
aas
sbb
scas
xor
stos
mov
adc
in
jmp
es
add
std
std
mov
adc
xchg
nop
std
std
ljmp
pop
sub
adc
iret
push
xchg
cmpsl
cmp
sbb
and
jge
leave
add
cli
test
popa
cli
test
sbb
mov
and
and
stos
xchg
sbb
negl
xchg
adc
imul
in
or
rolb
push
sub
std
ret
xor
mov
push
sub
push
dec
cltd
or
scas
insl
sbb
cltd
cmp
mov
cltd
sub
scas
jge
mov
repnz
sti
cmp
pop
xor
dec
xchg
mov
data16
sbb
data16
mov
add
nop
mov
or
fsts
fcoml
aaa
stos
jp
cmp
xor
inc
les
mov
mov
addb
cli
jmp
test
mov
sub
pop
mov
aam
outsl
hlt
push
inc
addr16
xlat
jns
mov
out
push
fidivl
sub
xor
or
ret
jnp
lods
daa
jecxz
popf
mov
pop
je
jmp
movsb
notb
adc
dec
jns
mov
cwtl
pop
xchg
sahf
cmp
xor
lods
pop
test
std
iret
and
mov
iret
dec
clc
mov
mov
mov
pop
jge
and
daa
leave
sub
jle
das
mov
lcall
push
fwait
push
mov
repz
sub
stos
stos
xor
and
sarl
xchg
mov
inc
cvtpi2ps
cmp
popa
pop
cltd
or
sub
xchg
mov
in
push
sbb
sahf
mov
stc
jns
loope
repz
push
repnz
jmp
aaa
pop
hlt
imul
std
jg
inc
and
test
je
xchg
jl
mov
xchg
sub
sbb
movsb
lods
add
push
fnstsw
fsubrs
pushf
jmp
out
das
jnp
inc
jp
cmc
mov
adc
mov
out
movsb
or
dec
jno
sti
cmp
inc
xor
xchg
dec
cld
aad
and
je
data16
jmp
push
xchg
cli
mov
add
leave
fdivs
sub
mov
push
sub
xchg
adc
add
push
les
xor
and
xadd
ret
xchg
icebp
sbb
mov
sbb
lcall
sub
movsl
xor
enter
push
lcall
dec
lods
xchg
dec
mov
cltd
cmp
xor
fbld
shl
sbb
repnz
fcompl
inc
pop
push
divl
pop
inc
sbb
in
insb
mov
stos
add
jnp
sub
ret
push
jge
decl
lcall
cmpsb
cmp
stos
mov
jbe
mov
push
sbb
in
fdivrp
ret
mov
test
in
int
insl
mov
out
lods
mov
jp
je
ljmp
jno
add
push
hlt
mov
fcmovnbe
or
test
push
jle
xor
sub
out
bound
add
popa
pop
xor
push
or
xchg
pop
xchg
mov
mov
sub
loope
inc
sub
adc
inc
sbb
push
sub
lods
dec
ret
jns
or
sbb
in
rorl
mov
sub
cmp
jge
sti
pop
sbb
data16
mov
scas
jne
call
adc
icebp
mov
pop
jno
fisttpl
mov
daa
xchg
and
pop
jg
dec
popa
mov
push
and
or
add
push
push
fstps
in
aaa
cmp
or
es
fisttpll
xchg
mov
out
int3
sbb
dec
je
fistpll
dec
mov
and
sub
cwtl
push
mov
jg
hlt
out
pop
das
jne
xchg
aas
pop
inc
hlt
jae
push
add
sbb
inc
jmp
loopne
hlt
inc
inc
adc
addb
jbe
rclb
or
insb
pop
daa
inc
xchg
add
lea
lods
std
jmp
dec
jnp
icebp
jae
fists
clc
and
out
sbb
sub
pop
adc
daa
mov
cs
mov
fwait
leave
and
xor
ss
daa
push
push
dec
xchg
jb
lcall
jge
mov
outsl
aaa
shlb
sub
ret
stc
test
popa
or
shll
stc
adc
jae
add
sahf
sub
mov
outsb
xor
sub
xchg
pop
movsb
pop
mov
mov
movsb
leave
xor
push
jle
or
sub
je
or
mov
mov
out
mov
xchg
ljmp
mov
mov
push
and
repnz
aad
in
push
jmp
xor
inc
sbb
scas
nop
jbe
mov
xor
call
pop
aam
jg
stos
movsb
inc
push
fadds
aam
in
out
push
ja
jb
js
clc
leave
sub
call
enter
int3
or
sbb
inc
imul
cli
ljmp
loopne
cmpb
mov
jge
arpl
test
inc
dec
fsubl
mov
popf
inc
int
mov
sti
stos
cltd
test
mov
inc
pop
and
dec
inc
outsb
push
jecxz
jo
adc
sub
fimuls
scas
mov
adc
leave
pop
ss
lds
in
sub
cs
jmp
out
sahf
cmp
cmc
aad
mov
aaa
inc
pop
mov
pop
into
pop
mov
mov
int
stos
or
mov
xchg
mov
stos
out
adc
adc
pusha
popa
dec
je
mov
ret
in
sbbb
scas
stos
and
mov
mov
pushf
jmp
aad
sbb
or
stos
test
nop
dec
mov
cli
push
xor
aad
in
repz
cmp
xor
add
cwtl
push
sbb
gs
push
div
lcall
cmpsb
sub
mov
adc
sub
js
dec
repz
mov
shll
jnp
mov
in
insl
jnp
mov
push
cli
fmull
jecxz
cmpsb
aam
push
or
jno
fstpl
mov
inc
scas
out
mov
popa
add
int3
dec
xor
adc
mov
jecxz
and
sbb
loop
dec
cmpsl
call
push
xor
jle
mov
push
mov
or
cli
mov
cmp
ret
aam
sahf
mov
inc
aaa
push
clc
sub
pusha
fwait
mov
mov
repnz
movsb
mov
leave
cmc
and
int
test
pop
dec
pop
push
sub
mov
mov
push
jge
fcompl
test
ret
sti
movsl
lret
bound
and
rdmsr
daa
lahf
repnz
mov
sub
cmp
add
loopne
cmp
cmovns
bound
push
stos
push
sub
ficompl
test
pop
insl
mov
dec
jae
push
outsb
in
pop
sbb
jbe
xchg
cmpsb
enter
cmpsb
icebp
push
push
sahf
lahf
imulb
fs
or
mov
lret
in
mov
pop
ds
xor
repz
push
aaa
or
jp
cmp
xor
sbb
leave
xchg
sarl
shll
jo
and
mov
push
test
mov
outsl
out
and
push
jge
push
addr16
mov
gs
xchg
repnz
out
adc
and
add
movsb
aam
push
push
jecxz
pop
leave
jmp
cmpsl
push
push
rcrb
imul
scas
gs
sub
and
mov
aaa
xlat
mov
cmp
cli
jbe
inc
sub
lods
lret
cmp
fxch
jl
and
mov
andl
dec
pop
inc
mov
mov
loope
cmpsl
dec
adc
or
inc
call
imull
push
pop
fcoms
jmp
insb
jne
inc
bound
jbe
popf
mov
fiadds
mov
xor
xchg
pop
push
sarb
testl
mov
lcall
into
data16
lahf
dec
aaa
lds
dec
sub
lock
add
push
xchg
loopne
pop
mov
in
aas
mov
pop
push
adc
dec
push
lods
test
imulb
imul
xchg
nop
jne
dec
int
inc
mov
jne
mov
out
dec
add
xor
mov
jno
in
adc
cmpsl
push
movb
pop
and
fdivrp
adc
loope
fisttps
mov
push
push
nop
subb
bound
in
stc
jmp
push
xor
jbe
cli
sar
xchg
sub
jg
xchg
xor
rorb
scas
xor
push
aad
push
pop
repz
arpl
jg
dec
pusha
push
mov
mov
inc
mov
dec
mov
lcallw
sbbl
fsubrl
dec
mov
adc
pop
mov
lahf
adc
push
pop
dec
pop
adc
mov
xchg
ja
cli
repnz
xchg
or
cwtl
pop
or
bound
xchg
popa
std
xchg
stos
les
shrl
push
mov
xchg
out
mov
adc
jle
fcmovb
subl
arpl
sbb
push
les
aam
cmp
loope
mov
inc
rol
insb
mov
push
sub
or
mov
push
push
pop
mov
loopne
mov
ss
mov
testl
push
xchg
fisubl
dec
jp
pop
scas
cli
mov
and
xor
es
out
xchg
ja
xor
incb
cmpsb
mov
bnd
daa
in
loopne
xchg
popa
mov
cmp
test
adc
adc
ret
xchg
sahf
int3
xor
popf
dec
and
and
and
repz
pop
aaa
pop
pop
scas
cmpl
insb
adc
push
xor
cltd
pop
add
pop
xchg
cld
pop
add
int3
test
aas
inc
loopne
nop
lock
les
stos
ds
fcmovnu
sub
jbe
jecxz
xchg
ret
iret
push
jg
adc
pop
or
add
adc
pop
sbb
inc
push
test
jle
push
inc
mov
mov
stos
lret
xor
dec
cmp
pop
dec
ror
addl
push
and
adc
stos
fstpl
movsl
lock
dec
lock
add
arpl
xchg
jg
mov
jbe
shrb
dec
pusha
dec
sub
cmp
pop
mov
adc
cld
fdivp
pop
mov
js
insl
inc
cmp
inc
stos
mov
jb
xor
xchg
xchg
inc
add
nop
movsl
nop
mov
mov
fisubs
mov
cmp
aad
inc
mov
sbb
das
mov
outsl
aam
nop
lods
adc
aad
ja
movsb
mov
add
mov
mov
mov
rcr
and
movb
in
les
in
xchg
or
cld
cmc
jno
into
bound
sub
rorl
aaa
in
jg
sub
shrd
scas
add
cmp
pop
js
ret
test
jns
xor
adc
cmpb
insb
movsl
fildll
lock
xchg
cmp
in
mov
or
lahf
arpl
testl
push
fiadds
adc
cs
lahf
mov
adc
clc
je
dec
je
and
movb
std
jge
adc
inc
mov
xchg
cmp
out
and
in
push
pop
sarl
xor
lcall
int3
mov
call
int
or
dec
mov
cmp
cmp
gs
push
adc
outsl
pusha
jne
push
or
nop
ljmp
jg
sbb
xchg
push
mov
movsb
mov
mov
hlt
inc
aam
and
push
cmp
pop
cltd
jno
inc
faddl
add
jne
lock
loopne
mov
xchg
lea
mov
enter
pop
mov
lock
lea
pusha
into
sahf
es
push
pop
mov
mov
push
bound
fists
in
push
xchg
repz
mov
cmpb
or
pushf
and
push
shr
popf
jle
loop
sbb
mov
mov
out
mov
stos
fstps
add
jbe
sub
pop
repz
cld
sbbb
test
aaa
in
and
loopne
cmpsb
sbb
mov
jbe
into
js
inc
cmpsl
ret
push
xchg
fcmovnb
xor
jl
pushf
cmp
les
fiaddl
dec
cmpsl
or
sahf
ret
push
fdiv
aad
xor
popa
cmp
ret
lret
in
pop
pop
loop
or
fisttps
xor
pop
fs
xchg
test
test
test
pop
leave
daa
mov
imul
or
shlb
sub
loop
das
jbe
dec
push
sti
xor
bnd
jo
aad
xchg
dec
shr
sbb
arpl
push
adc
arpl
rorb
and
data16
xor
jp
pop
lcall
in
aaa
data16
or
cwtl
movb
xchg
adcb
insb
das
mov
pusha
fldl
into
imul
xchg
enter
xchg
repnz
push
mov
pop
mov
add
ret
mov
js
xchg
push
mov
stos
push
loop
and
mov
cmp
rol
sbb
xor
stc
jl
mov
aaa
and
int
or
outsb
ret
jns
mov
mov
lock
xchg
ds
out
inc
xchg
mov
mov
scas
aas
jmp
push
shl
in
push
ds
fidivl
xor
lds
fs
pusha
sub
mov
mov
adc
push
xchg
mov
xor
daa
out
imul
pop
cmc
jbe
and
mov
inc
ds
in
or
mov
cmc
sbb
mov
mov
lods
mov
sbb
std
and
ljmp
insl
dec
cmp
fcompl
loope
mov
fiaddl
ss
mov
nop
test
lock
and
int3
jbe
xor
repz
cmp
in
mov
outsb
or
mov
jecxz
adc
lock
sarb
enter
mov
sbb
iret
jo
push
sarb
sbb
adc
or
insb
test
stos
adc
dec
push
add
das
jns
stc
cmpsl
repz
movsl
jmp
notl
es
xor
pop
sarl
inc
pop
sub
scas
fwait
arpl
add
push
sub
push
inc
adc
push
mov
add
clc
mov
jp
xchg
cwtl
jl
test
sub
call
mov
lcall
aaa
adc
int3
mov
cmc
dec
inc
mov
xor
mov
adc
std
sub
inc
jecxz
inc
cmp
or
sbbl
lea
dec
push
clc
hlt
cmp
cs
fisubs
xor
inc
cli
jl
cmp
sti
cli
loope
fists
sbb
fsubrl
aad
hlt
sub
mov
movsl
push
and
mov
sub
cmp
mov
arpl
mov
ja
aaa
je
pusha
loope
cltd
jecxz
dec
jg
add
shrl
fcomps
sbb
mov
divb
rcrb
lds
call
dec
xchg
ss
pop
push
jg
sbb
cmp
imul
out
dec
mov
and
scas
mov
jne
fisubrl
push
pop
cmpsl
sbb
aam
add
scas
or
cmp
jge
test
shlb
into
loope
cltd
subl
je
aaa
test
dec
and
xor
dec
pop
pop
jae
sbb
mov
int3
xor
fwait
xor
mov
pop
inc
in
sahf
fnsave
mull
push
nop
or
sub
out
imul
or
pop
in
push
in
dec
out
mov
mov
in
mov
sti
outsl
pusha
mov
cwtl
or
ficoms
mov
jae
mov
cmpsb
jmp
and
icebp
jo
lods
call
cld
xchg
hlt
pop
cmp
stos
in
cs
xchg
jmp
imull
jno
call
jnp
insl
inc
push
sbb
xchg
insl
jg
lock
push
mov
xchg
adc
sarb
and
sub
ror
and
push
enter
push
sub
cmp
enter
sub
dec
test
les
lea
mov
mov
mov
or
sbb
and
sbb
enter
cmp
push
outsl
inc
lret
in
test
ds
in
jmp
call
scas
aas
fadds
or
leave
lret
inc
stos
push
iret
xchg
jmp
ret
movsb
roll
mov
xorl
in
dec
xchg
push
mov
mov
and
dec
pop
and
mov
push
jge
cmp
lock
cmc
xor
pusha
mov
xor
lds
mov
sahf
repnz
leave
shl
push
clc
insb
pop
inc
daa
push
mov
adc
mov
mov
cmp
idivb
lret
faddl
mov
aad
inc
mov
or
shlb
ds
das
inc
xor
inc
aas
aad
xor
fld
jg
fmul
aam
jl
dec
fldcw
add
xor
xor
and
ds
lods
add
cmp
stc
jns
dec
js
outsb
push
cltd
jne
pop
inc
sub
push
push
imulb
xchg
and
les
arpl
mov
adc
stos
mov
sub
insb
orb
sub
fstpl
dec
mov
lods
mov
mov
jmp
cmpb
or
test
ljmp
pop
jg
push
sub
xchg
not
sbb
daa
mov
lock
lods
cs
insl
sarb
cmp
mov
loop
aaa
add
insb
test
or
jae
xor
pop
insb
cmp
mov
inc
sub
loop
subl
or
fadds
jge
cs
cmp
outsb
jmp
xchg
lret
ss
jmp
mov
pop
fmul
call
sbb
sbb
and
adc
push
sti
jo
stc
out
loopne
xlat
xchg
push
cmp
mov
mov
sub
bound
fwait
inc
int
mov
and
out
imul
call
es
sahf
push
and
xchg
imul
pop
mov
iret
imul
add
out
mov
mov
or
mov
bound
mov
in
push
inc
mov
push
dec
lods
shll
scas
in
stos
mov
outsl
lret
insb
aad
dec
push
cs
mov
pop
jecxz
mov
es
cmp
push
fwait
mov
inc
movsl
incl
daa
test
pop
fstps
or
loope
push
lock
in
xchg
and
jno
in
jp
cmp
lods
imull
loopne
xchg
ljmp
add
jns
in
dec
lret
jb
mov
ds
stc
mull
sbb
daa
mov
addr16
push
push
addr16
dec
nop
stos
sbb
nop
add
or
lea
loope
xchg
iret
jmp
cmpb
aas
pop
cmc
lea
out
add
rol
out
adc
push
popf
outsb
jl
sub
call
dec
mov
test
mov
xchg
mov
and
mov
and
lods
ljmp
fsubrl
lret
fs
cmpsl
xor
mov
push
pusha
mov
or
rclb
adc
lret
mov
dec
inc
sbbb
in
inc
fsubrs
stc
clc
js
push
pop
jl
sbb
daa
sub
mov
pop
cli
movsb
jecxz
adc
in
push
mov
lea
sub
ret
push
icebp
dec
sbbl
ret
fsubs
mov
js
sub
ficompl
shrl
jae
add
and
movsb
call
ljmp
cmpsl
adc
movsl
daa
in
adc
jnp
mov
lea
mov
pop
xor
mov
xchg
inc
dec
lret
lahf
insl
les
pop
gs
outsl
repz
and
and
jae
fdivs
sbb
insb
mov
fisubs
mov
into
jnp
nop
and
cmp
sti
xchg
gs
bound
cld
and
sbb
push
jo
mov
lock
lods
mov
test
push
in
mov
cld
sahf
fstl
jb
push
fidivrl
xor
movsb
jle
or
mov
nopl
dec
fistpll
push
lea
in
or
lret
sbb
cmp
pop
aas
push
jno
rol
jmp
je
mov
aam
push
jb
mov
add
inc
mov
adc
stc
mov
in
jbe
movsb
or
fwait
loop
and
bound
cwtl
sbb
inc
in
mov
pushl
push
xchg
pop
test
loopne
dec
rolb
pop
leave
dec
bswap
xorl
sarb
push
sub
xchg
stos
mov
mov
lods
mov
fistl
mov
dec
test
pop
and
cmpsl
gs
movsb
add
out
fdivrl
cmpb
add
int
ss
push
testb
mov
mov
cmp
fs
xorb
jno
fs
sbb
mov
andb
jge
scas
mov
movsb
lret
int
stos
jmp
stos
ret
or
sub
test
mov
jne
ret
mov
shlb
adc
hlt
imulb
cwtl
xchg
jno
arpl
pop
mov
lods
xor
in
bound
dec
mov
pop
push
repz
inc
jb
icebp
xor
xchg
mov
or
sub
in
in
fimull
shl
std
push
sub
shlb
jnp
fistpll
and
shll
mov
in
negl
add
mov
sbb
ss
js
in
pop
cli
jp
out
js
and
mov
movsb
std
mov
cwtl
dec
sbb
cld
xor
sub
cmp
ja
push
xor
sarl
rcl
xchg
int3
repz
and
adc
push
mov
pop
mov
pop
xchg
pushf
inc
xchg
pusha
popf
pop
jnp
mov
movsb
mov
enter
les
cmpsl
xor
sub
in
or
jl
xor
lods
xchg
mov
adc
mov
mov
cld
insb
decl
in
adc
jae
rdmsr
loope
mov
dec
jge
jp
std
test
ljmp
mov
push
push
pop
inc
xor
in
jns
push
mov
enter
mov
xchg
in
scas
mov
lret
sarl
mov
out
sahf
xchg
xchg
adc
ss
sub
test
sbb
leave
or
hlt
and
or
jmp
movl
fcompl
inc
xlat
test
mov
dec
pop
mov
dec
test
dec
cli
mov
insl
out
arpl
fcmovnb
xor
mull
pop
pop
jmp
cmp
loopne
push
mov
ss
xor
push
dec
outsl
nop
pushf
cmp
pop
aam
mov
sub
mov
dec
shrl
lods
mov
pusha
and
std
push
enter
sbb
or
jle
push
fs
pop
jl
pop
mov
ret
loope
outsl
ds
lods
and
xchg
incb
daa
mov
lods
fldl2e
in
xor
inc
push
sbbl
and
fdivrl
in
push
fs
in
add
push
int
mov
mov
pop
mov
outsl
sbbl
xlat
iret
or
xchg
lret
aas
or
scas
insl
sysenter
jl
dec
test
mov
mov
cwtl
adc
mov
xchg
fnstenv
outsl
iret
mov
and
int3
mov
dec
lods
shrl
dec
les
or
imul
pop
xor
popf
adc
cmp
fnstenv
addb
mov
sarl
mov
leave
je
aaa
sbb
cli
jle
inc
std
xor
and
mov
add
mov
mov
adc
subl
jg
mov
andl
rcll
xor
mov
pop
sbb
lods
leave
mov
push
outsl
xorb
jnp
mov
mov
add
call
push
fisubrs
mov
adc
std
in
es
popa
mov
lret
jge
jge
mov
popf
aas
jmp
lea
mov
dec
mov
xchg
out
jae
add
push
lahf
xor
frstor
lea
scas
push
dec
mov
xchg
inc
sbb
adc
scas
sbb
mov
mov
rcll
mov
xor
push
lret
daa
aaa
int3
mov
xor
outsl
mov
aad
mov
inc
in
test
dec
int
jno
xchg
mov
mov
xor
das
jmp
aaa
push
xchg
push
adc
jle
mov
clc
push
out
shl
dec
loopne
push
dec
add
or
cltd
cmc
stos
imull
jg
fsubl
cmp
lods
xor
adc
sub
je
mov
and
jmp
sbb
mov
cmp
jge
xchg
jecxz
sub
jno
pop
mov
mov
mov
int3
mov
mov
or
repz
jae
fbld
adc
mov
jp
fisttps
cld
pop
mov
ficompl
ss
jg
insl
pop
rcrb
pop
cltd
lahf
xchg
add
sub
fsubs
mov
outsl
fndisi(8087
dec
call
out
mov
jb
popa
mov
xchg
pop
leave
jmp
in
jbe
out
adc
mov
adc
lahf
pop
stos
cwtl
jp
add
imul
scas
in
rorl
sarl
cli
jg
adc
jne
xchg
aaa
push
stos
push
or
int3
test
out
int
mov
mov
dec
in
jns
into
movsl
shll
xchg
add
mov
pop
inc
cmp
xlat
xor
cmp
fcomps
ret
loopne
ljmp
mov
cmp
insl
inc
push
jl
ljmp
aad
xor
test
xchg
sub
mov
lret
loope
sub
sub
pop
shr
popf
jbe
leave
outsl
mov
cmc
and
insl
mov
addr16
or
into
fimull
sbbl
and
pushf
jo
cli
push
jne
in
mov
mov
clc
sbb
mov
stc
int3
icebp
test
add
push
and
sub
es
mov
rclb
mov
notl
xor
jno
arpl
sti
jne
out
sbbb
ljmp
xchg
repz
enter
add
lea
imul
incl
test
mov
adc
inc
test
jnp
add
sbb
loop
mov
popf
inc
adc
popa
xlat
out
sub
push
aam
inc
lahf
inc
loope
push
ja
push
jb
inc
test
pop
fdivrl
sub
mov
pop
dec
aas
in
movsb
nop
repnz
pop
or
or
stos
xor
pop
mov
and
pop
rorb
mov
cmp
js
pusha
push
jmp
push
add
sub
sahf
mov
into
addr16
adc
sbbb
stos
insb
lret
push
dec
inc
pop
aam
jae
push
lea
jp
mov
out
and
pop
cmpsl
pusha
data16
inc
cmpsl
xchg
hlt
push
sub
lods
mov
pop
sar
dec
mov
add
jle
mov
push
pop
fisttps
jmp
lock
push
or
jp
fldt
inc
dec
adc
lcall
push
push
push
xor
add
and
call
sub
and
adcb
inc
in
push
pop
das
mov
ret
jle,pn
out
push
dec
mov
add
add
jmp
cmp
add
test
sub
and
jecxz
lods
rol
dec
dec
adc
test
pop
mov
push
cltd
pop
xchg
test
popf
dec
insl
and
scas
sahf
pop
jae
xchg
xchg
xchg
pop
iret
cmpsb
sbb
std
cmc
ds
rorl
leave
inc
sbb
add
and
mov
fadds
xchg
rcrb
xorl
mov
mov
orb
adc
mov
out
cli
jle
push
or
adcb
jo
push
dec
mov
cltd
out
fists
pop
cmp
sbb
add
and
lea
xlat
pop
jg
push
rolb
orl
sub
push
sub
jnp
mov
pushf
sbb
push
dec
mov
sub
adc
xchg
andb
mov
loop
cmpsl
jge
enter
insl
jbe
lcall
or
insl
dec
jmp
or
mov
jo
iret
loope
pop
gs
mov
xchg
xchg
icebp
pop
adc
push
xchg
push
xchg
pop
ror
push
push
mov
jmp
loopne
ret
dec
popf
jo
jecxz
mov
jle
cmp
cmp
jecxz
add
fadd
sub
cli
mov
es
daa
jl
pop
movsb
pop
inc
xor
cmp
xchg
lea
push
pop
push
and
nop
test
jbe
mov
jns
ja
mov
sub
or
lea
and
loope
mov
xor
repz
mov
add
daa
sub
push
push
loopne
int3
and
addr16
xor
or
aad
arpl
sub
dec
psubd
ds
mov
pop
cmpsl
pop
jbe
mov
xor
ss
jle
xchg
js
imul
push
add
mov
movsl
int
mov
outsb
push
jle
sub
cmpsl
pop
inc
mov
xchg
addb
test
adc
jb
xor
outsb
mov
out
adc
nop
mov
mov
or
jnp
out
pop
mov
cmp
scas
or
aaa
push
inc
mov
xor
xchg
xor
add
imul
lock
xor
xor
subl
mov
adc
mov
lds
mov
mov
cs
out
fcmovnu
xchg
js
cs
nop
test
ret
dec
mov
adc
pop
cltd
or
ret
testb
xchg
mov
fucom
sbb
cmp
push
push
stc
cs
inc
ss
cld
andl
lret
pop
xchg
mov
mov
seto
xor
cmp
insl
stc
jnp
cmpsl
dec
mov
repnz
imul
enter
scas
add
sbb
ja
sub
pushw
dec
sub
inc
pop
sbb
pop
aam
rcrb
pop
enter
outsb
in
push
cltd
mov
loope
pop
loop
xor
fwait
rolb
out
and
dec
outsb
sti
cs
push
pop
es
xchg
dec
ds
fcomi
imul
xchg
jne
xchg
popa
sti
adc
or
mov
dec
loopne
or
std
fisubl
xchg
into
add
cld
fistpll
xchg
gs
outsb
and
insb
xor
leave
xchg
in
jl
jo
xchg
jp
bound
and
popa
mov
mov
mov
xlat
movsb
loope
bnd
lret
rcl
nop
or
daa
jnp
cmp
sub
mov
adc
adc
xchg
push
xor
jp
sub
lcall
sub
icebp
cmc
mov
sub
and
lea
shll
push
ss
adc
mov
pop
sbb
sahf
test
rolb
add
mov
adc
call
rorl
insb
ffree
scas
mov
sub
add
mov
xchg
rclb
add
nop
inc
dec
and
jp
and
cltd
sub
xor
lret
mov
dec
push
outsl
push
clc
test
ret
scas
xchg
sub
and
outsb
ja
push
jo
push
cmp
fwait
push
dec
pushf
sub
cmp
mov
add
stc
inc
pushf
mov
and
lahf
test
lahf
mov
mov
lock
or
lods
sub
sahf
ss
jb
adc
pop
jnp
lcall
push
inc
decl
jge
mov
inc
scas
and
adc
clc
ds
adc
in
out
jp
inc
rcrb
aaa
or
mov
sbb
inc
js
addb
lods
shll
mov
xchg
mov
fmull
jl
pop
aam
cmpsb
dec
cmc
scas
sbb
ret
les
aaa
sbbb
test
mov
push
sbb
mov
test
imul
add
xorl
push
enter
test
sub
inc
rep
dec
mov
pop
das
xchg
push
popa
icebp
popa
mov
adc
sbb
add
inc
jmp
scas
gs
mov
sbb
mov
pop
jne
lods
push
not
xor
pop
jmp
pusha
mov
inc
xchg
pop
lahf
dec
pop
or
jmp
and
pop
mov
mov
mov
dec
adc
and
roll
sti
js
lods
jle,pn
adc
test
rcl
dec
cmpsl
fisubs
inc
call
mov
addr16
ss
bound
xlat
or
iret
pop
mov
outsb
int
lcall
outsb
sbb
imul
jg
sbb
jbe
xchg
insl
int3
aad
out
dec
fisubl
or
sub
cs
dec
lods
dec
js
jge
ja
dec
fs
push
and
mov
or
test
loopne
mov
insb
dec
push
ss
in
popf
rdpkru
mov
popf
mov
mov
jmp
in
push
decb
stos
mulb
loop
inc
int
mov
cltd
popf
jge
arpl
or
mov
sbb
or
push
shr
xor
daa
repnz
adc
jmp
leave
enter
mov
and
shl
mov
out
push
xchg
ja
pop
fsubrl
movsb
xor
xor
negl
cs
sub
imul
mov
repnz
xchg
lods
pushf
mov
cltd
lahf
in
in
xchg
or
sbb
xor
adc
lock
cli
out
jns
lea
ret
roll
cmp
shlb
icebp
add
cmc
clc
pop
out
pop
outsb
xchg
add
hlt
lods
xor
jno
lret
mov
dec
insw
pop
in
xchg
loopne
lock
hlt
push
fsub
add
mov
xor
arpl
adc
push
daa
cli
pop
or
cmpb
cmc
icebp
out
fsubrl
mov
xchg
and
insl
inc
adc
or
lret
je
sub
sbb
mov
dec
icebp
movsb
adcl
daa
push
iret
out
in
jmp
add
cmpsl
inc
jae
sub
inc
or
sub
stc
jnp
ret
nop
xor
mov
scas
mov
jns
xor
cmp
mov
lahf
aad
ja
cmp
imulb
ljmp
lcall
loop
lcall
loop
adc
je
jno
cmp
test
and
lea
pop
cmc
adc
repz
push
ffreep
cli
or
ds
lock
daa
bound
push
pop
cmc
cld
scas
ret
cmp
ss
scas
sarl
cmc
sti
sti
rolb
ds
fwait
repnz
cs
cmp
and
dec
jle
push
in
mov
xchg
jp
mov
xchg
push
inc
cltd
ljmp
or
dec
cmpsl
shrl
cmc
stos
mov
or
clc
rcll
inc
js
push
and
jno
std
out
lea
jo
popa
testb
out
mov
imul
add
push
sarl
and
inc
test
aaa
push
lds
add
loop
das
lret
push
cld
adc
es
jp
adc
aam
jae
push
mov
sarl
jbe
xlat
and
or
push
nop
sti
movsb
jb
test
clc
hlt
rcrb
push
add
fcoms
mov
iret
cmp
sub
lret
or
push
push
and
dec
rorb
cmp
test
mov
stc
and
mov
loopne
imul
xchg
inc
xchg
xchg
and
dec
les
dec
push
jmp
pushf
mul
mov
outsl
add
ljmp
pop
adc
or
inc
imul
sbbl
shr
orb
pop
cli
push
popf
mov
scas
mov
jnp
aad
cmp
icebp
adc
xor
lods
arpl
sbb
adc
lret
mov
dec
stos
insb
xor
mov
pop
xchg
fbstp
xor
shrl
sbb
ljmp
xchg
adc
loopne
xchg
and
dec
mov
movsb
inc
adc
xchg
into
out
in
adc
adc
xor
cmp
jp
loopne
dec
inc
mov
loope
and
sbb
mov
mov
in
sbb
xchg
loop
jmp
sbb
rorl
mov
add
mov
or
mov
dec
ret
outsb
mov
daa
or
pop
out
cmp
fstps
stos
xchg
pushf
repnz
sarl
mov
in
sahf
cmp
mov
es
ret
mov
inc
cmp
jecxz
aam
xchg
in
dec
mov
sti
data16
add
mov
push
das
or
jmp
mov
pusha
mov
jmp
xchg
loope
movl
mov
fidivrl
mulb
adcl
dec
adc
fistps
fdiv
enter
pop
adcl
sahf
loop
cmp
rcrl
pop
push
fidivs
clc
jl
jle
cmp
dec
scas
and
xchg
adc
cmp
sub
into
sti
mov
insb
es
fs
mov
les
push
shll
mov
loopne
pop
mov
inc
test
mov
test
xor
iret
mov
mov
jno
mov
or
scas
push
sbb
imul
mov
mov
adc
dec
adc
sbb
insl
cmp
xor
loopne
das
imul
fsubrl
push
jl
push
sarl
ja
daa
loope
mov
mov
jno
movsb
ds
insb
movsl
int
cli
std
add
cwtl
mov
sarb
shll
pop
dec
nop
das
inc
xchg
lds
jnp
inc
xor
push
sbb
mov
mov
mov
les
shl
sbb
insb
mov
mov
add
xor
daa
outsl
das
int
pop
xlat
add
mov
mov
push
jge
test
test
lods
cmp
ret
or
lahf
outsb
hlt
jle
or
add
xor
cmp
sub
pop
imul
xor
lods
fldt
in
lods
sarl
and
out
aaa
fildll
and
jbe
cmpxchg
jmp
inc
jae
adc
mov
loope
jb
shlb
add
data16
inc
xor
pushf
nop
sahf
lods
data16
cld
icebp
popf
int3
daa
in
mov
adc
pop
pop
sbb
jb
push
and
dec
test
clc
adc
les
cmpsb
sahf
sub
sub
push
push
bound
dec
mov
xchg
loop
arpl
mov
jno
test
pop
pop
push
sub
jno
iret
dec
cmpsb
cmp
rcr
sbb
dec
fwait
xchg
xchg
cmp
add
push
cmpsl
int
add
addr16
pop
adc
push
data16
and
pop
or
aam
popa
add
jne
rorl
jne
jbe
and
and
scas
shlb
mov
sub
sarl
xor
mov
push
pop
mov
and
jle
das
cmc
cmpsb
repz
incb
mov
call
int
xor
sahf
hlt
and
stos
and
pop
adc
mov
mov
adc
imul
rcl
lcall
in
popf
outsl
mov
loope
test
xchg
mov
stc
lds
cmp
dec
inc
ret
insl
push
call
mov
mov
fisubrl
movsb
fs
and
mov
mov
sub
test
pop
lahf
lcall
adc
cmp
cld
mov
js
xchg
rclb
mov
xor
js
jp
into
cmp
jl
push
dec
xchg
out
jmp
lods
or
cmp
mov
adc
lock
lods
mov
test
rorb
mov
jnp
push
jno
lds
insb
jbe
sub
mov
jg
add
mov
popf
mov
push
gs
adc
or
aas
or
pop
insl
push
pop
in
lret
push
mov
cld
add
and
imul
mov
popa
arpl
inc
mov
mov
js
inc
rcrb
in
pop
jb
jle
and
stc
lock
fchs
mov
repz
lds
xlat
sub
and
cmp
pop
dec
lcall
pusha
sarb
ss
lea
pop
dec
mov
push
shlb
pop
negb
jns
lret
inc
mov
arpl
jno
mov
mov
sub
imul
sbbb
mov
sbb
ds
dec
add
clc
shll
jp
je
jns
std
lret
add
add
sub
es
outsl
add
jp
aas
xchg
cmp
hlt
mov
pop
xorb
sub
adc
int
sbb
cmp
or
adc
push
lods
xchg
and
mov
aam
std
scas
stc
mov
jnp
lods
cmp
push
sbb
add
or
movsl
call
mov
aam
mov
fdivrl
stos
push
mov
pop
nop
jl
mov
jns
int
jb
jb
pop
jge
into
ret
sub
add
in
xchg
stc
sahf
add
push
and
mov
les
dec
stc
inc
mov
or
mov
cmc
insl
pop
dec
lcall
push
call
xchg
addb
leave
jmp
mov
arpl
jo
sbb
mov
mov
fists
inc
ss
daa
mov
pop
in
mov
aas
test
pop
out
rcrl
lods
lock
fisubrs
mov
cld
das
add
es
mov
into
imul
lret
dec
shrl
shlb
pop
decl
mov
cmp
push
jecxz
pop
xchg
dec
leave
jmp
ljmp
loop
lods
xor
test
mov
outsl
stc
jge
sbb
fistps
push
cmpl
mov
aaa
testl
sahf
es
int
jge
pop
aaa
ret
and
in
dec
adc
out
and
cmpsb
lock
or
and
sub
ja
in
stos
nop
push
or
insb
fdivs
shll
test
ss
and
add
fwait
js
mov
xor
and
lods
xor
leave
mov
repnz
je
jle
pop
jbe
mov
mov
icebp
rcr
movsb
sti
pop
das
shlb
int
jl
je
mov
repnz
pop
movsl
sarb
mov
pop
stos
test
cmp
xchg
jbe
adc
fstl
shll
movsl
mov
mov
sub
mov
adc
leave
testb
fcomp
in
or
jg
pusha
rcrb
loope
jg
add
rorl
test
mov
push
es
pop
cs
xor
adc
mov
jne
ss
popw
inc
or
decl
xchg
lcall
mov
and
pop
dec
lahf
push
xor
lods
andl
dec
sub
jecxz
lds
lret
sar
sar
adc
jge
scas
inc
jmp
inc
sarl
test
das
ficompl
mov
jbe
xor
je
pop
repz
lret
or
xchg
aas
pop
pusha
daa
cmpsl
test
inc
out
addr16
add
in
mov
xchg
add
xor
int
imul
test
sbb
int
fldl
jnp
outsb
in
test
dec
push
or
arpl
push
imul
jo
mov
adc
repnz
das
jle
jmp
or
lret
push
mov
das
adc
fs
or
iret
hlt
mov
sbb
popf
xor
xor
push
sub
and
dec
pop
push
aam
xor
jnp
clc
decl
push
jle
dec
pop
insb
arpl
mov
nop
out
xchg
push
pusha
fadds
pop
fs
lret
cld
mov
jne
pop
loope
ljmp
outsl
leave
push
iret
ljmp
fstpt
push
cmp
int
xchg
jns
movsl
adc
add
xlat
ret
jno
push
leave
dec
xchg
pop
call
repz
jne
dec
mov
dec
fwait
arpl
cmp
jl
repz
test
loope
call
xchg
rep
push
or
mov
in
and
dec
repz
cli
out
out
ficomps
add
sbb
push
mov
mov
cs
sbb
mov
adc
insl
sbb
xchg
sub
test
ret
out
pop
mov
push
gs
mov
xchg
dec
stos
mov
pop
push
lds
xlat
dec
lods
xor
push
or
and
cmp
and
adc
imul
popf
inc
lret
es
sub
jns
in
bound
jno
cmp
fsubrl
rorb
hlt
dec
mov
lcall
and
das
mov
cld
pop
iret
pop
sbb
outsl
mov
or
pop
pop
rol
mov
mov
jb
add
test
bnd
push
aaa
sbb
inc
pop
lret
ret
mov
cmp
pusha
jb
adc
mov
in
lret
mov
mov
adc
and
pop
sbb
sbbl
orl
mov
sub
lcall
and
inc
cltd
in
cmpsb
or
cmp
push
xchg
mov
ljmp
inc
in
mov
mov
push
ret
mov
xchg
ljmp
adc
cwtl
cs
jno
push
jno
inc
sbb
inc
cmp
sbb
aaa
hlt
jle
enter
dec
sub
mov
sub
mov
mov
and
lahf
lahf
xor
test
sub
mov
in
push
push
loope
and
ret
cmp
ficompl
fs
cli
xchg
pop
aaa
aaa
ljmp
dec
testb
xor
mov
shlb
xor
addr16
inc
lret
push
pop
sub
xchg
sub
call
arpl
xchg
inc
push
cmpsb
sahf
dec
rorb
mov
and
dec
std
mov
cmpsl
mov
mov
lret
jb
mov
dec
and
aaa
cmpsb
pusha
gs
xchg
decl
mov
pop
pop
jb
xlat
inc
mov
orb
popa
jbe
movsb
popf
enter
mov
jle
popl
leave
inc
aas
mov
sub
jae
push
mov
xchg
xor
insl
aaa
jae
xchg
push
and
mov
sbb
cmc
in
andb
pop
fisubrl
decb
ljmp
lret
loop
inc
aas
or
mov
mov
dec
push
inc
loopne
cmc
inc
mov
jp
outsb
mov
push
push
and
xlat
jno
ficoms
test
mov
mov
shlb
aaa
addr16
mov
sbb
leave
mov
imulb
pop
dec
mov
dec
mov
and
mov
aas
and
in
xchg
mov
ds
mov
test
adc
sti
icebp
or
xor
cmpsb
outsl
aas
xor
int
aas
les
fdiv
pop
push
pop
daa
cmc
mov
mov
iret
push
je
xor
lds
mov
jmp
pop
data16
mov
shll
jg
pop
in
lcall
ss
mov
xor
push
out
stc
or
popf
std
popf
andb
fildl
test
outsl
fnstcw
imul
adc
lock
xor
sub
in
out
aas
lods
jbe
jle
jmp
pop
out
loopne
repnz
js
in
xchg
xchg
lods
jb
and
loop
pop
add
jl
lcall
adc
cs
pop
mov
mov
leave
ljmp
je,pn
fimuls
gs
loopne
lods
pop
dec
add
add
insl
scas
inc
sbb
sub
dec
jle
push
xor
add
aad
lock
aas
int
mov
arpl
push
push
cwtl
jne
xchg
or
xchg
cld
cmp
xor
add
stc
subl
mov
cltd
push
inc
cli
lods
sahf
dec
mov
mov
cmp
int3
not
jecxz
push
or
int
aas
push
enter
cli
pop
outsl
enter
ret
and
pop
int3
sbb
mov
daa
shlb
daa
aad
xor
mov
aad
cmp
mov
push
sahf
push
or
in
dec
mov
add
lods
add
nop
xor
mov
sub
pop
stos
jmp
push
push
or
test
push
xor
pop
in
and
push
lcall
mov
ja
add
fcmovu
sub
pusha
push
clc
adc
jnp
sbb
adc
imul
lods
mov
js
adc
aad
push
add
int3
nop
repnz
sahf
bnd
int
mov
lret
or
and
jbe
mov
in
jecxz
push
mov
fwait
lea
push
dec
es
pop
iret
in
popa
mov
popa
movsl
inc
cltd
scas
xchg
or
rolb
daa
mov
loopne
stos
fdiv
push
xchg
or
sar
sbb
xor
mov
or
sub
xchg
dec
xchg
sbb
loopne
xchg
hlt
cmp
lcall
mov
or
mov
jbe
jno
inc
out
jl
push
mov
incl
xchg
sub
mov
xor
cmp
pop
xchg
pop
sarb
xchg
fwait
cmp
mov
xchg
mov
inc
cli
add
jae
insb
lret
inc
mov
push
daa
ljmp
jg
out
out
cs
imul
pop
mov
push
mov
ficoms
hlt
adc
je
cmp
inc
xor
mov
dec
or
clc
lret
pop
insb
fwait
mov
and
ss
sti
jp
rcrb
adc
ja
push
or
aam
in
out
add
in
insb
sub
mov
mov
xor
into
xor
and
stc
sbb
dec
dec
sahf
pushf
imul
mov
ds
xorl
imulb
mov
mov
add
adc
pop
popa
add
adc
ret
lock
insl
xchg
loope
xor
rorl
dec
enter
jb
jle
xor
pop
insb
orl
bound
inc
sub
sbb
cmpsl
rolb
dec
cmc
scas
mov
out
popf
mov
in
jecxz
mov
outsb
jne
neg
fldcw
push
add
or
repz
add
dec
scas
jle
js
stc
inc
push
outsb
int3
icebp
adc
lock
xchg
add
clc
clc
mov
shl
xchg
dec
push
stos
push
sbb
bound
fxch
outsl
mov
xchg
lret
ja
jo
lock
mov
adc
mov
xor
push
testb
mov
jecxz
out
mov
mov
pop
popa
test
mov
roll
test
add
lcall
imul
leave
fldt
test
test
inc
cmc
test
xor
fwait
pop
leave
mov
ljmp
fucomp
push
or
shrl
fistps
jl
or
bnd
nop
je
adc
leave
int3
movsb
sub
lds
inc
rcrb
andl
xor
test
or
mov
mov
jbe
mov
das
xchg
or
xchg
adc
jb
std
ret
pop
das
stos
int3
out
aad
imul
adc
mov
mov
inc
push
loop
in
stc
jmp
jnp
add
into
mov
in
jae
or
dec
cmp
mov
jecxz
pop
hlt
imull
mov
lret
loop
lods
hlt
push
sub
xor
hlt
push
dec
or
mov
ret
add
ret
lods
rcr
dec
adc
lea
test
mov
cwtl
sti
mov
push
and
inc
jae
push
xchg
shl
call
lcall
icebp
sub
xor
test
jbe
sbb
jge
mov
and
aam
in
push
sahf
jle
sub
sti
inc
aad
popf
cmp
adc
divb
xchg
push
and
fmuls
in
nop
inc
sub
sahf
js
xor
rcl
or
xchg
push
cmp
xchg
leave
dec
xor
aam
add
jl
xor
ror
in
jo
adc
jg
outsl
and
xchg
dec
adc
out
lods
mov
js
in
in
xchg
outsb
repnz
push
fdiv
iret
nop
add
fisubrl
mov
testb
imul
cltd
dec
xchg
fildll
sub
xor
push
fisubl
repnz
sti
in
data16
mov
dec
or
and
adc
jp
cld
or
fst
fdivr
ret
rcrl
mov
pop
mov
mov
js
scas
lahf
mov
push
in
dec
pop
out
ret
jge
inc
or
push
cmp
and
js
je
imul
cli
ljmp
out
repnz
lret
xor
cs
xor
in
out
mov
push
pusha
daa
jecxz
dec
push
repnz
test
xlat
pusha
jns
pop
cmp
xor
inc
mov
cmc
cmp
pop
int
lcall
shll
stc
or
fists
lret
fnstenv
xchg
jns
pop
add
jmp
sbb
dec
in
clc
lea
mov
jecxz
lods
leave
addr16
cltd
sbb
xchg
adc
jecxz
mov
sar
inc
mov
xlat
mov
adc
xor
orb
jb
fucomp
jl
pop
lret
das
cmp
scas
pusha
mov
pop
insl
gs
jae
jb
or
pop
ret
and
outsb
dec
dec
xchg
mov
mov
jecxz
ja
dec
adc
xchg
cmc
stc
fldenv
clc
sbb
sub
and
push
loopne
jnp
subl
mov
subb
nop
add
les
push
pusha
lock
xchg
sbb
popa
add
loope
mov
and
out
rcrl
sbb
cmp
test
dec
shll
std
dec
dec
lret
sahf
icebp
rcrb
fwait
outsl
sbb
add
testb
cld
pop
jo
mov
xor
jo
sbb
or
mov
or
xor
dec
movsb
popf
xor
cmp
mov
outsl
jno
and
push
and
fcom
nop
jp
add
push
repz
out
mov
or
imul
adc
fmul
out
xchg
aas
push
mov
arpl
push
in
cmp
stos
push
ljmp
pop
nop
xchg
jg
jnp
mov
mov
in
push
ret
test
pop
adc
gs
pushf
jmp
rcrl
lock
sti
dec
dec
stos
push
and
addb
in
xchg
xorl
enter
ds
fs
shr
repz
rclb
arpl
sub
test
sub
lods
inc
lcall
sbb
repnz
push
shrb
add
fmuls
xchg
jno
in
mov
daa
fdivl
shr
insb
add
jecxz
dec
adc
pop
imul
mov
sub
add
jno
jecxz
jp
sub
xchg
xchg
iret
push
xchg
lahf
movl
test
out
inc
idivl
dec
cmpsb
push
xor
arpl
adc
and
test
or
xor
scas
lret
pop
mov
pop
and
and
scas
sbb
mov
or
aas
sbb
js
cld
sahf
or
xor
push
pop
pop
mov
mov
push
aad
and
hlt
jae
xor
lods
inc
movaps
pop
and
push
addr16
jo
cs
gs
daa
add
mov
fistps
dec
ja
ds
imul
movsb
pop
jl
jle
push
ja
push
mov
pop
std
dec
popa
inc
sbb
pushl
sub
out
lods
adc
aad
add
enter
sub
mov
mov
repz
pop
arpl
arpl
iret
out
push
mull
sub
pop
sbb
xor
sarb
or
adc
loopne
xchg
lds
push
aaa
mov
sbb
push
lods
jne
xorps
fwait
rcl
movsl
adc
xchg
jnp
mov
sub
mov
pop
or
icebp
jne
cmp
and
fstps
dec
mov
add
pop
stos
xchg
or
sbb
pop
pushf
es
xchg
shll
xor
out
fcoms
mov
sub
out
pusha
dec
sbb
sbb
sbb
in
or
dec
idivl
sbb
or
sub
adc
das
mov
arpl
mov
inc
stos
in
xchg
jecxz
add
xchg
das
cmp
jns
adc
jl
shll
mov
cmp
popa
cmp
sub
sbbb
xor
insb
mov
scas
stos
jbe
pop
add
dec
sub
mov
cli
shlb
nop
and
sub
xor
xchg
mov
cmpsb
test
jo
xchg
inc
lods
mov
sbb
push
xchg
inc
jo
pushf
ds
add
xor
out
mov
push
scas
and
xor
addr16
out
or
sub
sub
mov
jl
pop
pop
add
or
mov
xchg
aaa
scas
mov
push
in
xchg
dec
popa
dec
pop
into
ljmp
or
jle
jae
sti
cmpsl
fxch
sub
push
jno
lods
cmpsl
int
movsl
hlt
out
not
add
mov
movsb
xor
add
mov
or
or
mov
inc
add
test
adc
mov
jmp
popa
and
stos
mov
and
and
mov
xchg
inc
jno
scas
adc
push
scas
jl
jne
jl
in
mov
or
nop
jb
roll
xchg
dec
push
push
leave
xor
and
lret
neg
dec
arpl
xor
hlt
jmp
push
cmc
and
pop
sbb
rorl
adc
add
sub
cwtl
je
hlt
in
cwtl
mov
jp
aam
xchg
cmp
les
push
lock
or
adc
mov
mov
mov
xchg
jno
sub
sbb
daa
xor
jae
push
daa
cli
xchg
pop
xlat
lods
ret
cli
mov
loop
clc
pushf
pusha
out
pop
pop
in
cmp
mov
in
jnp
stos
xor
gs
fidivl
xchg
out
dec
jl
mov
pop
addb
movsb
test
dec
pop
enter
stc
cmp
call
clc
pusha
addb
adc
mov
inc
mov
dec
dec
or
imul
cmp
mov
inc
stc
leave
pusha
fwait
ret
and
dec
aad
scas
ss
pop
xchg
mov
das
mov
mov
xchg
jae
mov
test
adc
dec
ficomps
mov
xchg
pop
cmp
inc
sbb
xor
cld
sbb
iret
cmpsb
cmp
in
xor
cli
jecxz
data16
xchg
mov
jbe
jecxz
pop
xchg
sbb
and
mov
mov
subl
ret
aam
les
pop
imul
popa
loop
out
cmp
out
int3
aas
test
push
clc
mov
in
xor
add
aaa
in
xor
inc
pushf
cmc
stc
mov
jl
stos
sti
es
stc
xchg
push
and
jp
dec
mov
shl
mov
das
movsl
jno
arpl
jne
jbe
jg
mov
and
mov
xorl
xor
adc
je
jno
jmp
mov
fcomps
push
test
popf
test
outsl
cmpsl
cmp
cmpsl
test
popa
jl
cs
sarb
popa
mov
out
xor
dec
or
sub
dec
pop
or
jge
bound
in
push
outsl
gs
inc
add
mov
cmp
pop
pop
add
nop
mov
shrl
xchg
sahf
xor
fst
xor
clc
stos
in
out
xor
movsl
pushf
xbegin
adc
test
lods
xor
test
xlat
les
enter
xchg
mov
xchg
sahf
subl
rorb
ds
fcmovb
mov
repz
lods
call
and
sub
adc
loop
gs
out
push
and
scas
das
xchg
test
cmpl
push
cwtl
movsl
fadds
inc
ret
loopne
dec
add
mov
stos
sti
lds
das
mov
enter
sbb
hlt
pop
mov
jns
roll
pavgb
jecxz
hlt
mov
cs
mov
or
rcrb
nop
push
jne
mov
mov
add
rcrb
jno
jb
sub
cltd
movsb
aam
lahf
jle
data16
aad
pop
into
in
cmp
mov
add
jl
jecxz
sahf
mov
out
je
ljmp
dec
sbb
pop
out
incb
mov
stc
js
pop
sahf
enter
inc
mov
or
push
jb
shlb
cmp
icebp
rcrb
insl
shll
and
jbe
sub
into
testl
cmp
ror
jns
test
call
mov
dec
lods
adc
pop
js
mov
mov
pusha
fcoml
fcmovb
push
lods
in
fildl
inc
dec
jp
movhps
xchg
hlt
imul
ljmp
leave
movsb
mov
icebp
inc
jns
sbb
add
rcrl
cmpsl
dec
imul
scas
pop
sbb
leave
jmp
mov
push
movsl
xchg
mov
add
xchg
cmc
add
aas
sub
js
add
xor
pop
xor
dec
sbb
loope
js
flds
mov
xor
movsl
push
call
lcall
dec
jg
fdivrl
jae
and
aas
mov
adc
fucomi
jg
dec
adc
lret
dec
adc
inc
cmp
lds
loope
sbb
xor
add
adc
lcall
xor
dec
rcrb
xor
sahf
adc
inc
gs
into
shll
xor
in
sbb
mov
lret
pushf
pushf
add
add
test
mov
sub
aaa
inc
mov
jp
add
aad
cmc
das
jge
and
mov
nop
movsl
pop
out
and
lret
adc
inc
data16
mov
fs
sbb
xor
jmp
jmp
daa
sbb
lcall
filds
push
or
repnz
pushf
shlb
jno
out
sbb
loopw
shrb
das
fnstenv
add
dec
jecxz
add
sub
iret
test
jne
xor
addr16
xor
out
cmp
ret
outsl
lret
pop
bound
inc
jmp
push
test
ret
jo
dec
cmp
sbb
and
cmp
rorb
inc
gs
dec
cmp
dec
scas
lcall
push
jge
jbe
subl
sahf
ss
or
inc
mov
sub
test
adc
adc
cli
pop
pop
push
mov
fists
push
or
pusha
and
pop
push
pop
in
call
cmp
scas
stc
mov
popf
cmp
lahf
imul
popl
xlat
mov
push
lods
lock
xchg
mov
push
in
or
push
cli
push
cmpsb
pop
pop
and
jmp
and
stos
iret
cmp
push
jmp
inc
popa
notb
cmpsb
and
fsubrp
loope
xor
and
leave
pop
aas
fstp
cmp
add
loop
push
pop
jmp
les
pop
add
dec
lret
pop
push
lret
scas
pop
sbb
movsb
clc
pusha
sti
pop
xchg
cwtl
daa
sub
mov
cmp
mov
jg
xor
mov
repnz
negl
mov
je
pop
cmp
inc
test
ja
mov
inc
call
add
scas
cmpsb
cli
jle
movb
aad
and
lods
rorb
inc
dec
and
cmp
add
inc
mov
xor
pop
push
cmp
jne
loop
cmp
pop
pop
sbb
mov
insl
sbb
cmpsl
add
repnz
mov
adc
xchg
cld
inc
in
arpl
mov
mov
scas
data16
xor
cmpsb
inc
shlb
add
fnsave
sub
lock
mov
push
aam
imul
test
popf
xchg
mov
rol
or
jl
mov
adc
fistpll
dec
xor
mov
subb
xor
into
xor
lods
ret
mov
out
cld
hlt
sti
mov
mov
lret
cwtl
push
push
mov
xchg
icebp
ja
adc
cmpb
pop
push
sub
hlt
in
cmp
add
mov
fs
jns
mov
push
cs
xor
inc
jp
addb
lahf
sub
aas
sub
jmp
in
data16
push
push
out
lcall
mov
movsb
xchg
lods
ljmp
sbb
xchg
pop
jp
dec
hlt
int3
es
das
dec
push
fs
sti
add
xor
incb
mov
leave
rcl
enter
inc
mov
mov
nop
xor
fidivs
enter
and
lcall
mov
leave
fidivl
jg
xor
cmp
jecxz
inc
test
adc
pusha
jg
mov
addl
pop
std
call
dec
addr16
cmp
pop
mov
pusha
xor
aam
js
cmp
or
lock
seta
mov
jno
xor
inc
mov
inc
lret
aaa
daa
inc
ficoms
out
jns
scas
mov
jno
int3
mov
xor
pop
hlt
cltd
nop
fmuls
mov
call
lods
lret
lret
mov
adcl
push
cmp
and
cld
push
jge
dec
cld
cmp
pop
inc
adc
in
in
adc
das
stos
mov
sbb
push
xor
jns
mov
ret
pop
mov
push
loop
push
out
jae
add
xor
fstpl
push
inc
mov
fdivrs
fdivrl
mov
testb
xor
fwait
push
cli
fisttps
scas
inc
inc
jno
mov
pop
fistpl
fwait
push
popf
rorl
adc
mov
lcall
mov
movsl
in
pop
sub
cmp
mov
xchg
pop
or
out
lret
push
std
ja
pop
ss
push
mov
pop
dec
push
adc
pop
outsl
push
cmp
jp
cmp
fs
and
scas
mov
pop
sbbb
enter
lods
push
sub
lea
cmp
jae
out
jle
sub
sahf
out
shrl
and
cwtl
push
jne
out
push
jo
sub
clc
sbb
dec
jmp
into
lret
cwtl
mov
mov
fiadds
pop
mov
adc
lock
jg
clc
add
repnz
push
add
jbe
dec
pop
gs
lret
ja
inc
add
sub
out
hlt
sti
fcomip
aad
jg
sbb
sti
test
xchg
or
ss
insb
jmp
pop
ja
jge
push
or
dec
movsb
sbb
inc
mov
mov
push
push
bound
xchg
jp
push
test
pop
push
dec
cld
xchg
pop
inc
push
cmpsb
add
dec
sti
inc
cwtl
addr16
scas
dec
jmp
popl
mov
sarl
dec
sti
cli
mov
out
imull
ss
addl
pop
clc
adc
pop
and
cwtl
repnz
adc
scas
hlt
subb
or
inc
rcr
mov
subb
mov
cwtl
push
fsub
push
lds
outsb
les
test
inc
sbb
mov
cmp
or
enter
cltd
push
loope
loope
mov
ret
popa
pop
xor
in
rclb
xchg
jl
jnp
fadds
mov
push
stos
xor
notb
ror
ret
pop
push
scas
aaa
cltd
out
xchg
xchg
mov
fwait
xor
nop
sbb
insl
fwait
cmp
cmpl
ret
cmp
sbb
addl
lahf
jae
sbb
jo
jnp
jb
push
pop
mov
push
rorl
js
cltd
mov
inc
dec
mov
and
in
jg
push
aam
movsl
fadd
inc
hlt
leave
pusha
push
adc
orb
fs
hlt
mov
stos
and
loope
xchg
add
jb
jnp
in
sub
and
leavew
jmp
cmpsb
push
int3
pop
push
xchg
dec
add
aad
or
jne
add
lock
mov
cli
push
loopne
or
loop
fidivs
inc
lds
call
sbb
shlb
iret
je
insl
jmp
js
jle
adc
mov
lods
mov
insb
insl
xchg
cmpsb
inc
lcall
cmp
jbe
or
jl
add
mull
loop
inc
dec
jge
push
std
adc
mov
pushf
dec
orl
dec
mov
xchg
add
sub
adc
xor
add
mov
sbb
mov
sub
pusha
lods
pop
js
mov
inc
movsb
inc
or
mov
pop
adc
ret
test
aad
insl
pop
fnstsw
or
ret
xchg
sub
cmp
jbe
cli
push
mov
or
rol
mov
sub
sbb
xchg
hlt
movsl
fimull
pop
cmp
negl
mov
lods
fimuls
mov
jle
push
push
jno
and
push
jp
jno
xchg
cwtl
sub
or
mov
dec
scas
push
lret
push
mov
movsl
mov
sub
and
jecxz
in
inc
xor
inc
bnd
ret
cmp
arpl
movsl
lret
fldenv
ret
in
xor
jae
repnz
mov
jge
pop
add
and
andl
dec
or
clc
push
test
out
stos
mov
jmp
in
jno
outsb
jl
sbb
out
gs
and
test
adc
mov
rcll
lea
jle
in
xor
mov
ret
or
pop
pop
movsb
push
push
outsb
aaa
sbb
xchg
dec
mov
sbb
repnz
ljmp
test
sbb
lahf
pop
jne
ret
pop
aas
out
lret
insl
mov
fldt
mov
inc
inc
js
mov
cwtl
mull
push
mov
sbb
jno
pusha
imul
xchg
xchg
loop
mov
aas
arpl
sbb
xor
iret
mov
sti
and
xchg
and
mov
mov
daa
aas
shlb
fstl
jmp
xor
mov
jbe
mov
sbb
pop
cs
negb
mov
fisubl
ljmp
inc
mov
out
nop
jne
pop
ret
mov
push
in
mov
and
outsl
daa
lret
sti
cwtl
mov
sbb
push
push
sub
movsb
aam
das
and
fwait
adc
adc
arpl
dec
cmc
push
sbb
fdivr
add
cmp
add
dec
int3
insl
ret
push
aad
lds
lock
xchg
shr
pop
out
sbb
adc
xchg
adc
lret
pop
sbb
addb
inc
push
fnstsw
dec
enter
mov
popa
push
lods
adc
mov
test
popf
mov
cmp
jg
orl
and
sar
bound
clc
jno
movb
mov
cmp
push
mov
pop
xchg
inc
lahf
addb
jne
push
popa
insl
outsl
dec
in
mov
jne
lds
mov
xor
in
mov
fst
in
mov
jg
pop
add
test
dec
xor
in
jecxz
sub
cltd
jb
sub
cmp
or
push
in
cmpsl
lea
inc
inc
adc
or
sub
test
dec
popa
jae
mov
dec
jp
js
cmp
jo
dec
repz
xchg
and
xor
cwtl
outsb
aas
leave
aaa
cmp
js
xchg
rclb
sub
push
outsl
mov
pop
sbb
sbb
mov
add
sarl
jge
lcall
xchg
repz
loope
ljmp
mov
ficoms
lock
jecxz
xchg
arpl
mov
push
orb
int3
test
inc
sbbb
icebp
movsb
in
sbb
xchg
adc
addb
ficoms
sbb
fcmovb
push
insl
sbb
test
lcall
pushf
sbb
out
mov
call
lahf
cmp
mov
pop
mov
fmull
sbb
cli
dec
xor
jge
mov
pushf
cmpsb
or
movsb
test
sbb
push
sub
push
je
xchg
add
pop
jae
popf
cmp
xchg
xchg
cmp
dec
arpl
jecxz,pt
test
cltd
mov
in
insb
xchg
repnz
pop
mov
aam
mov
outsb
sbb
in
mov
mov
out
dec
dec
mov
dec
xor
int3
mov
pop
inc
mov
jmp
sbb
test
mov
jne
ret
stos
cmpsb
aad
lds
outsl
mov
sub
xchg
dec
les
in
xchg
mov
pop
push
or
jecxz
adc
loop
ds
xchg
daa
inc
in
outsb
subl
mov
push
adc
test
or
sub
xchg
in
out
sarb
sbb
and
inc
addl
xorl
ljmp
lret
jno
dec
mov
enter
ljmp
shll
movsl
popa
add
cs
shlb
xchg
inc
xchg
insl
aaa
xchg
imulb
test
aaa
adc
call
jae
sti
int
popa
movsl
inc
mov
cmpsl
jle
lahf
aaa
push
in
push
scas
rclb
pusha
out
pop
test
dec
push
filds
in
jecxz
sbb
mov
xchg
leave
jge
adc
in
sbb
outsb
mov
push
bound
xchg
or
fs
fsubrp
out
divl
sub
addr16
scas
sub
insl
push
xor
pop
aaa
mov
sub
cmp
dec
cmc
cmpsb
mov
data16
cmp
lahf
rorb
rcrl
or
xchg
pop
or
test
jo
in
dec
call
push
flds
mov
jns
add
andb
dec
cmpl
out
bound
mov
dec
adc
in
push
mov
jle
pop
lods
in
jp
das
gs
cmpl
xlat
rcr
inc
lret
mov
add
push
data16
inc
push
js
xchg
enter
divl
outsl
or
jo
cmp
adc
mov
or
and
xor
aaa
mov
dec
inc
xorb
loope
jno
jmp
xor
cmp
outsl
push
dec
lods
je
sbbl
das
xchg
mov
xchg
pushf
pushw
fistpll
dec
adc
sbb
cmp
xor
push
adc
int
icebp
xchg
push
mov
sarb
push
xchg
frstor
push
mov
js
inc
in
std
fdivrs
jecxz
push
add
shrb
test
jl
repz
pop
mov
mov
xchg
cmp
negb
adc
jecxz
jmp
lods
add
adc
mov
out
insb
xlat
mov
cld
ss
rcll
lods
add
mov
loop
xchg
dec
inc
hlt
dec
xor
inc
out
aad
push
clc
push
mov
ret
lods
std
jmp
pop
mov
in
inc
std
xchg
xorb
dec
dec
add
shl
xchg
and
imulb
pop
movl
shrb
push
adcb
xor
movsl
mov
in
sub
mov
roll
outsl
aam
adcb
in
in
mov
add
xor
inc
add
out
pop
sub
fwait
stc
stos
inc
gs
xor
or
ja
xchg
jge
sub
jae
cwtl
xor
int3
push
cmp
inc
pop
outsb
stos
ret
dec
daa
jo
sbb
jmp
push
loopne
outsb
mov
iret
imul
fdivr
jp
xchg
cwtl
adc
jge
stos
sub
dec
or
lret
adc
mov
jno
and
call
cld
xor
cmpl
xor
popf
orb
sub
push
adc
cld
xchg
add
loope
mov
push
pop
pop
lea
enter
and
ss
jo
call
adc
fucomi
mov
ret
sahf
xchg
inc
jg
and
loope
into
imul
jno
add
popf
mov
pushf
cmpsb
sub
sub
inc
es
add
jecxz
je
sub
xor
lret
jmp
pop
mov
scas
push
mov
xor
push
mov
out
lahf
push
fdiv
mov
ljmp
add
inc
fadds
arpl
inc
push
aam
test
lret
xor
shlb
rcl
sahf
pop
sbb
out
xlat
ja
push
mov
outsl
jle
iret
lret
int3
ret
idivb
aas
out
jecxz
arpl
mov
inc
icebp
lret
popa
and
jne
push
outsb
mov
lods
sbb
sub
and
jbe
addb
insl
and
enter
out
xor
test
aam
ficomps
lea
xchg
dec
orb
push
insb
js
call
rolb
inc
cltd
push
xchg
push
sti
dec
stos
pop
pop
out
xchg
mulb
dec
jge
loop
loop
xchg
dec
push
xor
xor
xchg
outsl
inc
mov
testb
into
out
test
pushf
pop
mov
test
push
stc
sbb
jns
cmpsl
push
lret
ss
pop
adc
pusha
cmpsb
adc
mov
mov
jmp
cs
xlat
dec
shll
add
push
pop
mov
xorb
popf
popa
and
mov
mov
dec
lahf
out
cmp
push
repz
in
add
xor
mov
pop
xchg
imul
dec
inc
dec
arpl
lds
mov
enter
push
test
and
pop
movsl
test
inc
inc
sub
push
xor
jno
and
rcrl
mov
cld
push
mov
fcoms
sbb
dec
fdivr
incl
cmp
cmpsb
pop
daa
cmp
mov
cmp
or
cmpsb
loope
pop
sahf
jbe
test
aas
out
fbld
out
iret
loop
ret
jecxz
aam
push
loopne
add
mov
push
jb
mov
icebp
adc
loope
mov
into
xlat
push
sbb
mov
pop
and
loope
push
les
nop
xchg
cmp
insb
cmpsl
test
mov
enter
into
aas
push
inc
cmp
mov
mov
das
add
adc
jge
insb
pop
repnz
pop
inc
stos
push
jno
jno
jns
cmp
xchg
scas
push
mov
push
pop
stos
mov
adc
cltd
mov
sbb
dec
mov
fucomi
pop
and
ljmp
sbb
cmpsl
jae
int
dec
je
add
jns
mov
push
cmp
shrb
into
dec
pop
inc
jg
scas
fs
xchg
xchg
cmpsl
dec
pop
add
or
int3
sbb
shll
cwtl
pop
aam
inc
jge
cld
loopne,pt
pop
sbb
or
mov
push
std
shlb
cmp
insl
jnp
adc
filds
xor
push
sbb
orl
cmp
mov
dec
inc
test
clc
insb
mov
mov
inc
into
xor
fnstcw
xchg
xchg
in
mov
test
mov
imull
sub
xor
adc
jmp
fldt
je
xchg
lcall
ret
push
xorl
xchg
inc
push
sub
fdivs
and
sbb
jle
stos
je
inc
inc
mov
lods
jl
out
clc
or
cs
jo
jmp
adc
mov
adc
adc
xchg
inc
sarb
xchg
mov
xchg
sbb
fs
aam
cmc
popf
and
fisubrs
popa
or
push
sbb
pop
cmpl
in
cmp
jecxz
push
inc
cltd
fdiv
fcoml
push
sub
idiv
push
je
popf
xchg
inc
cwtl
fldt
insl
lret
push
addr16
pop
bound
jbe
inc
jge
mov
js
add
mov
dec
ss
hlt
ret
outsb
push
xchg
divl
popa
dec
xor
xchg
jecxz
ja
mov
add
jbe
clc
out
arpl
adc
and
pop
sbb
push
fcomip
xchg
jno
mov
inc
unpcklps
add
inc
loopne
sub
test
addl
pop
dec
jmp
add
sahf
adc
dec
push
insw
lds
dec
xor
enter
pop
or
xchg
mov
addr16
pop
jmp
popf
mov
outsb
test
pop
ljmp
inc
lds
xchg
push
adc
pop
mov
aaa
fldenv
and
call
xor
negl
cld
lds
out
sub
xchg
add
aad
out
mov
js
es
xor
xchg
and
inc
bnd
add
cltd
dec
dec
rcrl
insl
enter
popa
pop
roll
mov
jg
cs
and
mov
cmp
in
fnstenv
mul
testl
inc
jo
sub
xor
pop
cmp
scas
mov
mov
pop
lods
adc
out
dec
loop
repnz
mov
stc
shlb
xchg
sub
pop
pusha
mov
fldenv
aaa
cmc
push
hlt
adc
test
push
push
mov
push
mov
aas
xor
bswap
nop
add
adc
and
dec
pop
cmp
fcoms
adc
pushf
dec
jb
addr16
jge
or
mov
test
jg
jnp
sub
pop
outsl
inc
dec
loope
sub
sub
outsl
nop
in
fsubr
aam
fwait
adc
jo
and
ret
ja
and
sub
outsb
mov
pop
loop
jge
push
push
mov
inc
mov
insb
testb
mov
stc
xchg
mov
xlat
adc
lods
mov
in
push
inc
push
mov
mov
enter
les
aaa
dec
imul
jecxz
fs
pop
push
imul
enter
nop
cld
mov
in
iret
pop
jns
mov
mov
test
pop
out
out
jno
test
dec
ds
mov
push
sarb
jmp
cwtl
frstor
sahf
cmp
push
in
cli
bound
xchg
xchg
dec
in
rorl
pop
ret
fldenv
arpl
xchg
jecxz
push
xor
fs
jecxz
mov
dec
shll
cmp
pop
cld
into
xor
mov
xchg
mov
imul
int
aad
popf
mov
push
movsb
push
mov
xchg
pop
cmp
rcrl
rcrb
icebp
sbb
fldcw
dec
out
dec
into
repnz
xchg
push
jae
addr16
jnp
inc
sbb
mov
fdivs
push
repnz
pop
aas
xchg
adc
inc
std
mov
in
inc
mov
mov
push
xor
bt
pop
arpl
or
add
orl
xchg
lret
pop
pushf
popf
add
mov
mov
lret
jnp
xchg
inc
push
add
mov
stos
and
ljmp
push
test
push
jp
sbb
daa
inc
push
cmpb
push
push
sbb
mov
add
iret
pop
lcall
pop
dec
push
jle
stc
daa
out
mov
fistl
mov
andl
sub
mov
ds
mov
push
cmp
push
hlt
repz
pop
repz
push
loope
cs
xor
jl
ret
push
mov
add
mov
xchg
fisttps
pop
dec
negl
ret
lock
fsubrl
fsubrs
aam
push
mov
daa
pop
jbe
lea
xchg
or
xor
pushf
in
in
push
insb
jo
xlat
mov
cmovne
inc
ss
fwait
stc
jbe
adc
call
roll
and
jp
loope
cmp
pop
xchg
cmpsb
lcall
dec
add
ffree
jge
jecxz
fnstsw
out
std
fwait
pop
mov
sbb
push
les
pop
xor
push
sub
scas
in
cltd
jo
repz
test
add
or
mov
repz
enter
je
pop
mov
mov
mov
in
ss
jne
pusha
outsl
inc
popf
ror
sbb
outsb
jo
inc
arpl
mov
mov
cltd
imul
xor
nop
pop
fisubs
or
ds
adc
nop
mov
adc
loope
mov
sbb
xchg
fs
dec
lret
cmpsb
popa
sarb
test
inc
xor
mov
arpl
push
xchg
xchg
sbb
xchg
mov
adc
push
mov
lret
xlat
dec
mov
fisubl
sbb
cmpsb
fs
popf
cs
dec
adc
push
fsubr
inc
outsb
pop
fcoml
out
stos
and
pop
pop
sub
movsb
xchg
movsl
fidivrl
mov
add
icebp
xchg
outsl
pushf
push
in
das
aaa
mov
push
mov
sbbl
jnp
dec
or
and
gs
insl
shrb
xlat
mov
dec
pusha
sahf
loop
xchg
cld
rclb
mov
push
addr16
loopne
sub
pusha
in
xchg
dec
sub
add
loope
pop
popa
and
mov
jne
or
fdivl
call
add
ss
dec
push
insb
jnp
into
in
rcll
loop
inc
popa
xor
sbb
fidivrl
mov
rcrl
scas
sub
mov
test
insb
stos
and
repnz
and
pop
sub
cmp
fimull
xlat
jge
xchg
mov
add
inc
insb
lcall
mov
inc
push
in
mov
inc
jl
inc
pop
mov
cmpsl
push
push
arpl
jmp
dec
cmc
or
push
test
js
sbb
mov
test
clc
arpl
mov
lret
scas
dec
inc
and
insl
or
icebp
dec
xor
mov
cltd
outsl
xor
fisttps
test
pop
and
and
cmpsl
in
xchg
out
xor
shll
push
ljmp
sbb
rorb
out
sub
cmp
xor
sar
adc
insb
xchg
push
push
js
inc
dec
inc
popa
pop
xor
mov
sbb
movsb
loop
xchg
adc
jecxz
les
xchg
mov
xor
sbb
mov
andl
imul
pushf
clc
icebp
out
push
hlt
in
int
dec
mov
in
movsb
mov
std
push
arpl
xor
mul
dec
dec
cmp
fdivs
scas
xor
jle
icebp
in
outsb
mov
sbb
insb
lcall
enter
sub
shlb
xchg
dec
popf
dec
push
mov
adc
sub
lret
sub
sbb
insl
pop
into
neg
adcl
ljmp
dec
fnstsw
adc
mov
daa
sub
or
mov
in
push
out
js
faddl
ret
xor
jno
add
adc
xchg
loope
ss
pushf
xor
mov
xor
mov
jge
addr16
lea
rcrl
inc
test
pop
and
inc
inc
cltd
mov
int3
cmp
dec
inc
cmc
mov
sbb
mov
or
push
lock
add
push
adc
std
cmovs
mov
and
int
fistpll
shll
in
xor
pop
aad
out
popf
dec
dec
mov
push
add
int3
ss
lods
jp
inc
cld
xchg
lret
mov
hlt
dec
adc
pop
nop
or
push
or
xor
mov
jle
cmp
sub
adc
xchg
add
inc
mov
or
movsb
stos
pushf
and
cld
in
mov
insb
cwtl
mov
imul
mov
inc
insb
push
outsb
add
mov
sub
insb
pop
pop
adc
sahf
mov
and
xor
je
inc
sbb
repnz
mov
int3
push
les
mov
stos
rcrb
and
mov
subl
popa
dec
js
pop
es
mov
xor
pop
pop
popa
push
push
add
adc
mov
mov
inc
movsb
push
inc
cmp
mov
sbb
xchg
stos
das
lcall
cltd
sub
hlt
pop
pushf
mov
dec
xor
pop
jnp
jae
loope
mov
push
mov
mov
icebp
xchg
add
sub
add
push
jne
movl
sbb
popl
xor
lods
xchg
mov
mov
pop
dec
popw
xor
sbb
arpl
movsl
inc
test
mov
jg
in
mov
xor
xor
xchg
dec
ljmp
mov
xchg
and
ss
pop
jle
in
js
dec
andl
lock
mov
mov
mov
push
imul
inc
jecxz
cmp
inc
adc
pop
cltd
movsb
dec
int3
or
sbb
mull
and
lds
movsl
push
pop
cwtl
shl
imul
cmp
jp
sbb
sbb
lock
outsb
mov
push
or
int3
xchg
stos
jnp
mov
xchg
jl
movsl
pop
xchg
aas
into
fisubrs
mov
rcrb
stos
sti
jmp
inc
leave
test
mov
add
stos
xorl
jmp
fildl
in
cltd
jb
ljmp
add
dec
in
dec
lods
mov
out
fwait
rclb
aas
shl
lahf
fwait
es
shrl
pop
call
push
rol
inc
cmp
jle
xchg
mov
aad
out
jbe
pop
loope
rclb
fimull
xchg
lret
push
sub
and
xor
mov
push
sbb
sbb
push
sbb
ffree
push
test
push
dec
ret
icebp
inc
insb
mov
inc
arpl
dec
mov
jae
dec
jl
push
sub
mov
mov
stc
add
dec
scas
jns
dec
pop
sub
xor
xchg
mov
inc
dec
push
insb
mov
in
pop
sub
mul
pop
mov
mov
ljmp
leave
aas
subl
or
add
cltd
orl
pop
mov
adc
lea
push
mov
xchg
xor
cli
mov
icebp
or
in
mov
xor
lret
into
adc
push
dec
xor
shrb
fbstp
test
jo
shrb
pop
mov
rorb
pop
push
fbstp
pop
cmpsb
cwtl
dec
hlt
orps
fcoml
out
and
nopl
xchg
xor
jl
out
jp
sbb
lea
rolb
into
add
sub
or
cmp
add
cmpb
push
shll
cld
jbe
or
xchg
push
popa
in
sarl
push
mov
jns
push
xlat
sub
pop
jp
lcall
pop
cmp
push
and
cmp
cmp
dec
xchg
jne
sbb
lret
add
std
movsb
push
xchg
xor
outsl
inc
mov
and
lods
inc
pop
lret
iret
mov
mov
push
imul
sbb
jle
add
jae
lret
push
subl
es
out
call
insb
sub
lock
int3
push
mov
loope
leave
ret
pusha
mov
jo
pop
jbe
adc
jns
mov
lret
int
loop
fadd
mov
mov
stos
sbb
dec
je
lea
ror
int3
push
sub
jne
push
xor
push
pop
in
dec
and
or
cwtl
and
aam
fsubr
mov
jl
imul
xchg
repnz
jecxz
mov
cmpsb
push
fidivs
fistpl
mov
add
roll
sub
xchg
ljmp
xlat
in
push
dec
xchg
stos
es
cmc
xchg
div
cmp
jl
adc
jp
cltd
jo
mov
sub
lret
stos
sbb
call
aad
stc
mov
ljmp
adc
pop
adc
idivl
jbe
xor
scas
ffree
mov
inc
xchg
and
mov
incl
outsb
in
cltd
jp
sub
mov
test
es
jmp
mov
loop
xchg
cmp
loop
das
fdivrl
lock
dec
push
and
mov
mov
imul
or
push
stos
pop
adc
xor
dec
cmpsb
xchg
shrb
pop
nop
dec
inc
jge
in
jo
imul
ds
adc
lods
xchg
mov
test
insl
icebp
xchg
mov
or
jns
push
inc
dec
sub
push
cmp
icebp
cmpsb
insb
adc
push
pop
push
ja
mov
inc
mov
ss
jae
add
js
sbb
aad
inc
ja
js
negb
pop
outsb
bound
add
notb
nop
lahf
or
pop
fst
imul
mov
sbb
mov
dec
out
cmp
lret
cmp
mov
jae
xor
push
aas
popa
sti
cwtl
and
and
or
ror
aas
or
cmpsb
jmp
adcl
xchg
les
ja
adc
push
lods
xor
sahf
xor
dec
xor
cmp
es
test
jne
cmc
call
cmp
insb
clc
jb
cmpsb
dec
stos
mov
lods
aad
pop
sahf
dec
inc
or
loop
push
stos
imul
and
add
cmpsl
add
mov
loopne
and
sub
sti
adc
mov
cmp
sarl
mov
sahf
pop
fsubp
and
addb
mov
mov
hlt
push
loopne
xor
cwtl
test
lods
pop
and
lahf
mov
jns
jo
inc
nop
jecxz
cmpsb
add
inc
pop
push
dec
nop
hlt
adc
or
add
dec
pop
inc
mov
mov
mov
jno
sarb
push
out
cld
cmp
cmp
in
negb
sbb
jb
add
and
xchg
in
jo
pop
jg
jne
aas
cmc
pop
sbb
stos
fnstenv
dec
mov
pop
sbb
add
jl
inc
pop
inc
sub
mov
sbb
add
mov
mov
cmpsb
mov
and
addr16
ss
mov
pop
sub
pop
sub
movsb
cltd
out
stc
xchg
sarl
cmc
cmpsl
popf
sub
sub
jle
and
lcall
mov
repz
pop
shlb
gs
lock
push
addr16
cmpsb
jmp
push
mov
lcall
mov
clc
loop
out
addl
xchg
or
sbb
lea
inc
mov
jae
rcrl
je
imul
gs
das
jge
adc
jmp
test
imul
jmp
filds
test
ljmp
xor
ljmp
enter
cwtl
loopne
jmp
call
out
lahf
lret
jle
cmp
jmp
cmp
out
inc
cwtl
jmp
insl
mov
sti
cmpsb
cmp
fisttps
test
jo
mov
lcall
pop
addr16
mov
loopne
push
ja
not
cwtl
test
push
cmp
push
fsubrl
not
mov
pop
ljmp
fmull
mov
push
mov
xchg
pop
outsb
pushf
fimull
je
pop
xchg
in
adc
test
mov
pop
or
xchg
test
loop
out
scas
mov
ljmp
mov
paddsb
add
fiadds
dec
ss
adc
stos
es
sarl
and
icebp
adc
adc
pop
cmpl
lock
xchg
scas
dec
cmp
cmp
mov
push
fsub
ds
cld
cmpsb
and
lret
mov
sub
cmp
add
pop
mov
aas
ljmp
jmp
jnp
je
insl
insl
test
xchg
add
int
mov
scas
xchg
or
out
pop
inc
lret
fmulp
repnz
sub
jg
cmpsb
cmc
es
in
adc
sub
addl
sahf
and
lcall
jmp
adc
sbb
test
sbbb
lods
xchg
lods
les
negl
cmp
ljmp
ffreep
adc
lea
sub
jle
cmp
aaa
cli
adc
pusha
jo
inc
inc
push
cmpsl
cmpsb
jmp
pop
jae
in
mov
not
aad
das
iret
in
fwait
pop
fwait
sub
and
push
mov
or
stos
mov
insb
aam
clc
mov
lret
sub
push
pop
int
jl
pop
xor
mov
mov
into
aad
adc
jge
push
push
repz
gs
mov
stc
addr16
out
adc
push
in
xor
xor
stos
fst
jnp
sbb
test
aas
pop
cs
lret
cmpsb
or
jp
aad
fwait
daa
repz
gs
mov
shll
jecxz
xor
push
stc
dec
mov
pop
jecxz
clc
cmp
addl
test
int3
aas
ja
inc
mov
stc
fldenv
pushf
xchg
aas
cmp
dec
clc
mov
je
jbe
xor
sub
push
into
pushf
loop
mov
cld
push
mov
dec
shl
jle
scas
fdivrl
hlt
pop
xor
gs
cmp
cmpsb
add
dec
lret
inc
cmp
lahf
push
push
and
cmp
sbb
movb
lds
xchg
div
into
mov
addr16
sahf
push
pop
dec
mov
addr16
jnp
inc
sbb
cmpsl
push
mov
adc
rcr
mov
adc
aad
js
sarb
lcall
arpl
mov
out
pop
mov
cltd
xchg
mov
fs
les
mov
shld
mov
outsb
into
loop
cmp
movsl
shlb
js
jge
test
fcoms
cmp
push
scas
fadds
fimuls
lock
pop
xor
rcrl
push
add
xchg
push
mov
test
sub
or
das
insl
loope
sti
adc
loop
ljmp
pop
or
addr16
fcomps
insb
dec
scas
xchg
fiadds
or
adc
in
adcb
sbb
ret
ret
fwait
sub
imulb
out
xor
and
push
push
mov
jle
ret
push
in
out
cmc
scas
ret
lds
and
mov
nop
pop
sub
test
out
imul
negl
pop
xchg
mov
push
ret
subb
xchg
hlt
sub
xlat
shlb
mov
int
imul
adc
insl
es
jbe
js
fcoml
dec
popa
das
pop
mov
cmpsb
out
cmp
and
mov
outsb
cld
adc
repnz
loopne
punpcklbw
in
roll
lds
scas
insb
xchg
adc
test
nop
imul
je
dec
or
adc
fsubrs
fs
call
mov
data16
jle
mov
adc
in
jl
jp
inc
xor
add
mov
pop
cmp
xor
fcoms
mov
jp
or
ficoms
push
push
rorb
imul
and
out
movsl
dec
cmpsb
mov
xor
adc
movsb
aas
adc
imull
hlt
sbb
jge
sahf
inc
insb
lahf
jl
pop
pop
mov
mov
out
add
jb
pop
sbb
incl
clc
fs
push
mov
mov
mov
adcl
add
mov
jmp
imul
shll
cmp
notb
imul
stc
cmpsb
sti
add
sub
xor
xchg
inc
xor
jo
lods
mov
dec
sub
sahf
clc
mov
enter
cmpsb
xchg
pop
push
lcall
xor
rorl
mov
fildll
adc
movsl
and
dec
dec
adc
lea
jle
int
sbb
imul
insb
data16
les
xor
lret
inc
pop
mov
add
xor
pop
dec
rdmsr
mov
stos
clc
jb
sbbb
ss
pop
or
mov
out
push
mov
sti
push
cmpsb
dec
fcoms
les
sarb
sarb
jp
jg
pop
fxch
sub
in
hlt
movl
repz
cmp
xor
mov
mov
enter
shl
inc
sub
scas
push
cmpsl
sub
dec
sbb
fistl
cmp
mov
mov
pop
outsb
popa
sbbl
js
dec
clc
pop
es
pop
jle
and
in
xchg
push
sbb
out
adc
jae
push
out
maskmovq
idivl
test
das
outsl
jmp
pusha
ljmp
jp
mov
cmp
jns
lock
jmp
sbb
das
cmp
cs
push
je
xor
mov
mov
cs
scas
lds
push
mov
mov
mov
or
shrw
je
aaa
pop
mov
jb
sbb
pop
lret
imul
push
sbbb
iret
lret
ljmp
jge
cld
jbe
xchg
loope,pt
xchg
jmp
clc
aaa
push
push
out
mov
cwtl
push
inc
add
mov
int
dec
cmp
lahf
mov
mov
imul
xrelease
mov
popf
jmp
or
inc
xor
sbb
cmp
jne
xor
addr16
js
sbb
push
mov
divl
xor
fidivrl
insl
mov
movsb
icebp
mov
push
sbb
incb
xchg
xlat
lret
ret
jmp
mov
std
dec
jns
lahf
cmc
std
popa
sbb
or
pop
or
sbb
mov
adc
push
and
cmpsl
or
leave
mov
movsl
lods
out
js
test
jecxz
inc
sbb
xchg
daa
test
ja
repnz
cmp
pop
sti
jno
jp
push
rcrb
out
leave
pop
sub
and
repz
pushl
pop
rcl
xor
sbb
inc
sub
dec
ret
cmpl
or
stc
ljmp
pusha
xchg
enter
aaa
out
or
out
dec
mulb
shr
pop
inc
push
mov
adc
enter
popf
jae
dec
push
insl
mov
mov
cmp
push
jns
dec
xchg
and
jg
testb
xchg
lds
push
gs
jecxz
xchg
jnp
jge
push
pop
js
push
jne
mov
mov
xchg
iret
outsb
cmp
push
jmp
insl
jb
pop
pop
sti
xorl
jg
push
dec
push
inc
push
adc
mov
xor
adc
int
mov
push
cmp
push
and
mov
jo,pn
imul
jle
daa
mov
lock
jp
inc
insb
sbb
push
bound
lock
or
lods
fnsave
test
nop
jnp
sbb
rcrb
pop
jecxz
cmp
or
dec
lea
movsb
fildll
inc
jns
xchg
in
push
rcll
xchg
dec
jbe
or
push
repz
mov
dec
inc
xchg
es
mov
dec
fwait
mov
orb
or
mov
xchg
push
xlat
mov
pop
dec
adc
jbe
repnz
mov
das
adc
jo
mov
add
adc
xchg
pop
cs
rcr
lds
clc
loop
popf
out
mov
jl
fdivrl
loope
dec
and
sub
dec
vorps
bound
sub
xchg
sarb
aaa
push
movsl
push
xchg
ds
mov
ja
ret
or
push
test
fisttps
jnp
sti
xor
mov
out
movsl
fistl
ror
addr16
push
stos
push
xchg
std
mov
aas
mov
cwtl
cmp
fisttpll
es
push
sub
rcrb
mov
mov
popf
mov
push
and
or
inc
xor
lahf
or
add
in
js
pop
test
push
popf
xlat
xchg
mov
jae
sub
push
dec
jp
pop
shlb
xchg
sbb
mov
xor
sarb
in
mov
divb
insb
loope
mov
popf
insb
bound
adc
mov
mov
mov
repnz
aad
xchg
es
jle
mov
jcxz
mov
mov
stos
movsb
adc
sub
cmp
xlat
cli
shrb
jb
xchg
mov
subb
mov
sub
mov
pop
cmpsb
fadds
in
add
cmp
imul
add
xchg
pusha
jp
inc
sbb
sti
jl
outsb
les
push
movsb
decb
push
sub
aad
pushf
dec
aas
scas
lds
or
lea
popf
imul
ja
fisttpl
sub
mov
stos
ret
and
test
lahf
mov
movsl
fdivs
mov
add
and
hlt
rorb
cmp
adc
mov
ret
lret
mov
sbbb
shrl
in
cmp
aam
addr16
notb
dec
mov
test
cmp
mov
out
mov
cmp
xor
aas
leave
lea
jmp
jo
dec
or
pop
adc
shlb
divl
sbb
inc
inc
stos
cmp
mov
sahf
lret
mov
loop
adc
cmpsl
inc
jno
cmc
inc
cwtl
jae
pushf
fimull
stos
fwait
sub
ja
jae
outsl
jge
dec
or
aaa
add
push
shll
dec
add
lahf
sub
fcompl
mov
xor
jnp
add
push
popa
jo
or
in
sub
pop
jg
mov
push
xor
loope
cmp
icebp
out
jp
add
arpl
xchg
mov
mov
cmpsl
jbe
bsf
lcall
sahf
lret
push
out
sbb
ret
pusha
cmp
mov
ja
add
into
push
data16
adc
rcll
fbstp
mov
and
xor
loop
adc
and
push
out
add
shlb
xor
std
addr16
push
clc
scas
or
pop
mov
inc
pushf
push
mov
and
ret
mov
jp
popa
arpl
sbb
cmpsl
inc
into
xchg
pop
movsb
mov
mov
fwait
aad
das
call
mov
push
xchg
out
in
in
and
inc
sti
mov
pop
cmp
mov
sbb
sub
xchg
lods
jns
mov
pop
mov
and
int
sub
mov
and
js
fld
aaa
addr16
movsl
test
push
out
mov
cmp
cs
or
xchg
push
clc
sbb
dec
std
out
mov
cltd
fmul
rolb
dec
stos
xchg
push
fs
xor
fs
out
xor
imul
fsts
movswl
push
and
repz
mov
loop
ds
lret
add
inc
xorl
hlt
lods
jno
lret
pop
mov
mov
jmp
aam
in
mov
addl
lock
pop
std
and
add
bsf
loop
jmp
sub
insb
jnp
mov
and
int3
xor
cmp
in
xchg
cld
mov
and
pop
leave
in
pop
sahf
xchg
std
out
mov
xlat
std
and
aad
xchg
xchg
jnp
and
mov
inc
pop
loop
mov
jbe
addb
push
sbb
mov
xchg
xor
jge
cmp
pop
adc
dec
mov
or
jge
pusha
imul
lret
push
or
movsb
add
inc
mov
rorb
fldt
outsb
lds
imul
nop
cmp
dec
mov
add
pop
add
in
cmp
mov
xlat
aam
mov
fsts
mov
mov
jecxz
in
fadds
and
jmp
dec
cmpsb
cld
jle
sbbl
and
scas
sub
les
cltd
push
idivb
sub
jae
xorl
roll
sbb
ds
aad
dec
mov
es
rol
cli
sbb
imul
xchg
ficompl
mov
int
and
sub
push
arpl
cmpsl
ljmp
popl
add
in
stc
lock
mov
and
cmc
ss
pop
mov
jne
xor
sub
pop
in
pusha
mov
add
shlb
push
xchg
test
pop
inc
inc
fldl
add
not
xor
daa
adc
imul
xchg
fld
aam
sub
and
sub
hlt
mov
aas
pop
xchg
dec
out
xchg
les
lods
notl
xchg
add
mov
add
clc
push
sbb
js
cmp
pushf
test
movl
jo
fdivp
leave
stos
pop
dec
pusha
xchg
push
pop
movsb
xor
mov
arpl
outsb
xor
mov
fcomps
mov
outsb
mov
mov
pop
xchg
push
inc
push
lcall
in
push
inc
dec
lods
rorl
mov
inc
jle
cld
mov
xor
pop
daa
repnz
enter
inc
cld
out
jne
mov
cltd
xchg
mov
push
sbbl
push
xchg
adc
lret
fdivrl
movb
dec
je
leave
sub
lcall
jmp
lock
xlat
lret
pushf
mov
bound
push
sub
cwtl
and
mov
stos
add
das
mov
xor
mov
mov
mov
jb
and
enter
ljmp
bound
cmpl
jp
sub
movsl
mov
dec
and
and
sub
fiaddl
inc
std
xchg
ja
mov
jge
mov
cwtl
outsb
xchg
mov
push
outsb
mov
mov
sbb
jle
jbe
fmul
jae
cmp
pop
sub
jns
sub
movsl
orb
out
dec
sahf
jg
pop
cmpsb
xor
inc
ljmp
cmpl
dec
imul
rorb
jmp
cmp
imul
inc
pushf
push
popf
lea
mov
dec
dec
in
into
ds
fcompl
xchg
cmp
push
in
daa
out
repz
mov
or
in
stos
push
loope
xor
shrl
jecxz
sbb
imul
cmp
roll
std
stos
hlt
mov
push
incl
jno
fisttps
push
sub
add
mov
jg
aas
push
push
add
ret
inc
adc
mov
inc
dec
inc
pushf
sub
cwtl
adc
push
cmp
aas
cmp
ret
dec
ja
mov
mov
xchg
pop
fsubl
mov
in
test
push
mov
repnz
pushf
popa
mov
outsb
sub
repz
or
xchg
js
daa
lret
and
add
lcall
xor
int
fadds
xorb
mov
xor
xchg
sti
jno
adcl
mov
sbb
aaa
int
push
fwait
mov
lds
mov
shr
cmp
jge
lea
mov
popa
xchg
sub
cli
mov
mov
jmp
mov
sar
push
add
movsb
pop
dec
insb
pop
les
ss
mov
sub
cmpsb
scas
rcl
mov
movsl
sti
fwait
or
cwtl
cmpsb
andl
cmp
das
add
mov
push
inc
imul
add
xchg
adc
cmpsl
mov
das
lret
iret
or
xchg
cmc
mov
jmp
inc
sub
jl
mov
stos
jno
imul
mov
call
out
mov
stc
push
sti
fisubrl
cmp
xchg
repnz
std
cmp
jo
popa
mov
roll
rorb
xchg
loop
leave
cs
mov
scas
fisubs
mov
push
arpl
imul
imul
adc
fs
inc
mov
in
pmulhuw
cli
sub
add
lahf
jge
push
sub
fwait
call
mov
dec
pop
outsl
js
imul
sub
punpckldq
xor
jns
iret
cld
lahf
nop
jae
mov
adcl
jmp
push
aam
adc
inc
sbb
or
sti
or
rcrb
and
fnstenv
push
push
subb
pusha
inc
test
lret
push
pop
fmul
push
fcmovb
push
callw
and
test
cmp
inc
xor
decl
lock
sub
sahf
cmp
xor
imul
inc
dec
ljmp
adc
and
das
fs
jb
mov
inc
push
inc
and
lcall
add
xchg
mov
loopne
cli
stc
stos
into
les
mov
imul
pusha
push
jmp
mov
cmp
ds
pop
or
mov
adc
repz
fiadds
xor
inc
dec
jae
into
push
sarb
mov
fdivrl
xchg
inc
daa
loop
or
jne
xchg
out
xor
sbb
mov
into
sub
ljmp
and
add
pop
add
mov
dec
rcr
xor
int
fs
stos
leave
aad
fidivrl
or
imul
nop
adc
cmp
push
fisubl
dec
mov
fs
inc
mov
mov
adc
add
aad
and
cwtl
xor
std
mov
mov
orb
xchg
mov
xchg
sbb
ret
fwait
aam
inc
ds
mov
mov
repz
pushf
in
mov
bound
sub
inc
jp
aad
sbb
xor
in
mov
sub
ret
cs
es
notl
test
jl
jo
rcrb
pop
xor
fildll
and
sahf
or
cmp
push
cmpsb
pop
sub
jle
cmpsl
lcall
pop
push
jl
or
dec
into
div
hlt
and
divl
pop
das
inc
in
jnp
add
inc
pop
imul
nop
imul
mov
sbb
adcl
jbe
add
dec
mov
mov
orl
pop
push
push
push
xchg
inc
frstor
jno
pop
aad
testb
xor
ljmp
pop
or
sub
arpl
in
adc
mov
push
push
repnz
cmp
add
lods
push
scas
mov
into
icebp
xor
jg
inc
addr16
stos
push
mov
jns
sub
pop
or
movsb
push
jecxz
and
je
push
xchg
lahf
sbb
iret
mov
stos
adc
cwtl
pop
jg
sub
mov
std
mov
pop
inc
jmp
mov
in
cmp
fidivl
and
sti
cmp
cmp
mov
ret
pop
popa
mov
add
sub
pop
jmp
aas
jae
xchg
pop
xor
loopne
and
into
shr
add
fnsave
cmc
add
adc
hlt
jno
mov
mov
popa
pop
cmpsb
sbb
inc
push
scas
or
xor
gs
or
push
call
fmul
xchg
pop
adc
int
xor
cmp
stc
das
sar
pop
ret
ljmp
adc
jae
enter
test
add
add
xchg
imulb
stc
mov
pusha
fsubs
repz
xor
inc
lahf
xchg
loopne
inc
mov
sub
movsb
push
or
sub
nop
push
add
jl
iret
pop
sub
inc
lcall
sub
jns
mov
mov
dec
shl
lahf
jge
in
iret
inc
mov
rolb
cmpsl
addr16
mov
pop
inc
call
insb
xchg
movsl
sbb
jg
fnclex
mov
ja
js
jns
xor
sbb
aad
mov
das
xchg
cwtl
out
and
add
aad
cltd
sbb
xchg
pop
or
icebp
inc
mov
xchg
mov
aas
lahf
rcll
fbld
cmpsb
xor
mov
mov
xchg
push
ficompl
lds
popf
loop
int
jmp
pusha
sub
lahf
push
adc
sub
fiaddl
lret
rorl
sub
and
push
adc
lcall
adc
outsb
jae,pt
addr16
jae
add
es
jb
push
js
mov
clc
lea
adc
repz
adc
jne
imul
aam
mov
js
cmp
roll
push
sub
push
xchg
jg
sbb
push
cld
mov
ror
sbb
jmp
xchg
or
mov
sarb
leave
add
stos
adc
and
inc
lret
or
xor
cld
rcll
add
inc
imul
out
les
test
xor
inc
popa
sbb
add
jg
mov
adc
lret
xlat
imul
scas
ljmp
imul
shll
inc
lock
in
dec
sahf
loopne
in
mov
mov
in
add
icebp
add
jecxz
inc
shl
insl
dec
dec
adc
movsl
fiadds
cmc
outsb
mov
out
adc
inc
insb
repnz
inc
call
pusha
jmp
nop
jnp
mov
mov
dec
pop
xor
rolb
xchg
lea
pop
adc
out
jg
jmp
mov
push
sub
pop
enter
sub
out
mov
stc
cltd
popf
lock
dec
pop
push
dec
mov
fcmovnbe
enter
xchg
test
lret
jp
or
push
pop
mov
shrd
adc
sbb
sbb
and
shrl
loope
pop
fbld
inc
push
aad
or
pusha
sahf
test
insb
mov
aam
and
repnz
jg
iret
xor
fsubrs
lret
sbb
inc
pop
cmc
fcomi
push
sbb
mov
sub
fdivrl
sbb
xchg
lock
push
iret
jnp
lds
xchg
rolb
mov
loop
pop
subb
xor
scas
lock
dec
negb
aas
mov
mov
sub
dec
int
ficoms
and
ja
xor
stos
add
jge
in
add
pushf
fs
fisubs
and
push
cmpsl
movsl
jnp
cmp
rep
push
cmovno
les
pop
adc
aad
sbb
and
mov
nop
mov
cltd
cmp
mov
js
shrb
add
pop
rolb
stos
shl
pop
enter
xchg
pop
dec
jmp
pop
test
imul
xor
push
lret
pop
push
xchg
inc
cmpsb
in
push
fadd
mov
test
jp
inc
into
pop
and
ja
adc
sbb
aam
jmp
mov
push
push
lds
sbb
test
cmpsl
loopne
mov
ficoml
jns
pop
scas
stos
sarl
or
adc
sbb
stos
mov
jb
mov
test
jle
aas
ds
sub
scas
shll
push
mov
add
dec
push
mov
mov
in
enter
jo
stos
or
in
xchg
pop
cli
rcr
push
sub
dec
gs
mov
pop
aaa
lods
pop
or
imul
lea
and
cld
mov
jp
jb
and
fmull
scas
repz
push
mov
add
jae
es
loope
jns
clc
pop
jne
push
inc
xchg
aaa
dec
sbb
in
add
divl
scas
nop
ss
sbb
inc
sbb
mov
jle
cld
fcmovne
or
mov
mov
dec
sbb
dec
and
sbb
dec
sub
cmpl
pop
cld
ja
jnp
shll
call
gs
pop
lret
adc
imul
leave
adc
add
lcall
xorb
jp
xlat
or
mov
call
stos
mov
cld
push
sbb
pop
subps
add
daa
in
or
and
dec
iret
pop
jne
loope
jle
idivb
jmp
in
push
fcoml
cmpsl
pop
mov
and
ret
movsl
outsb
xchg
inc
xor
aam
cmp
insl
cmp
dec
andb
jbe
and
push
pop
xor
ds
das
push
das
adc
cmp
mov
imul
daa
dec
push
je
and
ds
dec
inc
adc
pusha
daa
jmp
push
les
xchg
je
fninit
scas
aam
lret
push
pop
pop
rcr
arpl
insl
jp
sbb
add
repnz
pop
lcall
ds
lods
daa
push
and
adc
push
push
mov
cwtl
pop
inc
jnp
sub
stos
dec
aad
movsb
add
lcall
sbb
stos
xlat
and
xchg
inc
popl
inc
mov
xchg
lock
lcall
jmp
adc
mulb
mov
push
out
push
sbb
mov
add
mov
call
add
lds
les
cld
outsb
nop
or
pop
inc
lods
inc
mov
cmp
dec
lcall
mov
mov
jbe
fnstcw
arpl
movsl
jg
pop
fildl
xchg
push
clc
jmp
pop
fs
push
sub
mov
fstpt
sahf
jb
repz
stc
mov
jae
mov
icebp
and
push
sahf
bound
sbb
mov
aad
xor
pop
cmp
jae
pop
fwait
jle
mov
les
mov
outsb
lds
xchg
xchg
pop
or
ljmp
push
mulb
aad
fcmovb
es
xor
jl
out
cld
mov
pop
lret
imul
test
loope
ss
or
mov
add
in
mov
sbb
mov
ljmp
jns
xchg
arpl
js
xchg
xlat
outsl
pop
out
add
in
sbb
scas
sub
xor
pop
inc
rolb
mov
into
into
jge
push
mov
xchg
lods
sbb
pop
cmp
sbb
sbb
mov
mov
cmp
cld
stos
stos
push
cmpsl
leave
or
cs
std
pop
data16
orl
push
jg
pop
mov
push
inc
out
cmpsl
cltd
lcall
mov
nop
in
pop
loope
mov
in
js
mov
fadds
stos
push
sbb
jecxz
sub
ret
imulb
inc
adc
hlt
neg
inc
out
pop
push
push
in
aaa
xor
sub
jae
icebp
je
pop
dec
cld
inc
in
int3
mov
xchg
lahf
lods
inc
mov
cmp
push
fs
dec
sub
lcall
mov
inc
fstpt
outsb
mov
hlt
push
in
enter
xor
jmp
insb
stos
xchg
add
mov
sub
sbb
xor
mov
push
scas
insl
lret
das
inc
pop
out
cs
xchg
sub
pusha
test
dec
popf
ja
and
in
cmp
inc
add
out
xchg
loop
mov
ljmp
arpl
mov
arpl
fdivl
sbb
cmpb
dec
inc
ljmp
jmp
in
pop
cmp
pusha
out
clc
rcrl
insb
enter
xchg
ljmp
dec
shrl
mov
sub
xchg
icebp
or
pop
test
xchg
push
scas
imul
movsb
lahf
inc
popa
cmpsl
push
jnp
push
leave
dec
pop
mov
leave
lds
dec
call
sbb
sub
sti
inc
test
mov
imul
cwtl
cmp
stos
add
dec
fldl
pmaxsw
insb
rcl
and
add
dec
sbb
mov
jne
or
inc
mov
and
loopne
sti
push
scas
dec
jg
or
mov
out
and
mov
mov
push
cmp
loopne
cmpsl
pop
mulb
mov
and
das
mov
jmp
jbe
std
fisttpll
notb
mov
pop
xchg
cmp
pop
and
push
lods
out
mov
out
pop
pop
sub
cmpsl
mov
mov
pop
and
sbb
dec
xchg
jp
ja
rolb
repz
sub
sub
aaa
and
mov
cli
pop
ljmp
int
push
sub
repz
rol
jecxz
out
cmp
dec
mov
outsl
repnz
sti
mov
jnp
rclb
cmpsl
lock
in
lds
repz
sbb
mov
inc
sbb
lods
jb
xor
cmp
sbb
cmp
frndint
andl
sub
lea
push
out
adc
xchg
add
arpl
cwtl
daa
clc
lea
lret
dec
sti
mov
in
cmpsb
movsl
pop
mov
jmp
les
imul
icebp
jecxz
inc
aaa
addr16
testb
dec
stc
sub
inc
mov
clc
shrl
insl
or
push
mov
cmp
leave
and
inc
fnsave
xor
push
sti
incb
mov
rcll
push
icebp
jo
clc
nop
lea
jp
add
dec
push
xchg
push
gs
and
shll
insb
filds
into
jge
mov
cmp
flds
clts
rcll
lahf
cmp
fisttps
lahf
mov
mov
push
fisubrs
rclb
dec
mov
enter
es
adc
test
sub
mov
xchg
mov
mov
fsts
jle
jl
loopne
cld
cmp
sti
jbe
sub
je
jg
and
cli
std
fwait
xor
push
or
add
je
mov
push
and
lea
add
sub
inc
jbe
out
xor
or
pop
dec
arpl
adc
insb
pop
mov
jne
or
cli
vpsubsb
insl
or
pop
inc
and
or
pop
stc
arpl
push
fldenv
insl
adc
outsl
jp
hlt
mov
repz
lahf
and
rcr
in
in
out
stos
lcall
mov
test
mov
pop
adc
dec
adc
dec
cwtl
cs
dec
adc
jp
jo
push
sbbb
test
xchg
mov
fmull
mov
pop
loop
mov
das
pop
fdivl
sbb
popf
sahf
adc
mov
sub
mov
add
test
les
repnz
mov
enter
cmp
dec
inc
adcb
rclb
mov
jno
lret
push
inc
movsl
mov
aam
sbb
and
icebp
sub
es
xchg
in
nop
cmp
add
cs
scas
mov
ljmp
das
and
arpl
pop
adc
data16
sbb
jae
sub
pop
mov
test
mov
cmpl
movb
mov
pushf
sahf
hlt
mov
sub
ret
das
nop
mov
in
test
jnp
nop
and
hlt
lods
fsubp
mov
repz
mov
push
and
dec
adc
and
sub
xchg
stos
shll
mov
cmp
out
cmpb
popf
or
sbb
cmp
mov
jg
xchg
mov
xchg
jmp
mov
std
lock
iret
push
cmp
mov
test
sub
push
adc
cmovne
jge
loop
cld
add
sbb
outsb
mov
in
cmp
jns
test
cmp
into
xor
adcb
dec
rcrb
mov
imul
out
mov
mov
lock
mov
inc
pop
iret
das
xlat
es
adc
mov
mov
lods
lret
mov
loopne
popl
mov
fiaddl
ds
mov
pusha
in
push
push
stos
pop
mov
push
push
loope
sarl
add
push
sar
sub
into
pop
fistl
cmp
mov
sub
imulb
inc
mov
roll
dec
data16
mov
int3
je
jbe
in
mov
cltd
stc
pop
enter
and
fwait
pop
sbb
fidivs
inc
pop
fistpl
jno
out
dec
lea
xor
sub
pop
fs
lods
out
cmp
nop
hlt
push
sbb
jge
popa
cmp
inc
fpatan
sub
mov
pop
adc
sahf
add
sahf
adc
jb
cmpsb
sbb
pushf
mov
cmp
jbe
sbb
xchg
mov
jb
jmp
pop
lods
mov
jnp
orl
out
and
push
leave
push
inc
dec
enter
cld
xchg
movsl
bndcu
mov
adc
stos
scas
inc
shr
gs
mov
in
outsb
mov
cld
and
fdivrp
or
loop
sti
pop
arpl
push
xor
fs
testb
xchg
sub
out
mov
sub
insb
xor
and
enter
cwtl
rcrb
and
fisttpll
jl
lea
push
sbb
adc
lods
cwtl
push
dec
aad
inc
and
xchg
and
cwtl
push
aad
fsubrl
sub
je
mov
stc
xchg
gs
pop
cs
ret
jle
push
xor
pop
mov
jbe
xchg
pusha
shlb
cmp
mov
add
inc
mov
sub
dec
add
fstpt
xchg
lret
in
push
jb
mov
xor
or
fadd
aad
xchg
xchg
pop
mov
xchg
add
jnp
or
or
mov
dec
aam
repz
mov
push
and
dec
adc
dec
in
push
int3
push
adc
mov
dec
mov
fdivrs
test
call
mov
nop
jecxz
mov
and
cmp
aad
bound
faddl
fnsave
cld
stos
clc
sub
imul
repz
push
lods
divb
lahf
dec
fistl
sti
and
sbb
movsl
and
addb
sbb
imul
orb
call
pop
mov
inc
jnp
into
test
repz
nop
jo
dec
jp
cmpsl
inc
push
out
cmp
rorl
mov
push
push
dec
mov
push
pop
inc
gs
fld
jecxz
push
push
loop
xorb
dec
sub
adc
outsl
adc
test
sub
xchg
in
mov
inc
xor
lods
rorl
cli
adc
sub
xchg
inc
sti
inc
jbe
mov
arpl
popa
jp
dec
fisubs
je
inc
or
shrl
add
je
jnp
in
jmp
push
les
pop
lods
fstpt
jb
fcomps
loop
mov
js
add
fisubrl
stos
xor
fisttpll
jns
pushf
movsb
int
mov
inc
dec
iret
sbb
mov
shr
fdivs
rcr
bnd
cmp
int
aad
pop
in
sbb
lret
or
mov
cmp
roll
divl
inc
lahf
scas
adc
in
sub
and
repz
xchg
pop
int3
inc
xchg
jge
call
or
inc
data16
push
sbb
pop
fs
sub
xchg
in
push
dec
aaa
sbb
sbb
or
test
mov
and
mov
push
popf
outsb
xchg
sti
mov
nopl
mov
scas
push
mov
sub
addr16
xchg
movl
rolb
mull
jp
insl
jae
aas
push
test
dec
push
dec
cmpsb
fdivs
test
scas
movsb
or
adc
mov
and
mov
push
in
stos
xchg
fisttps
movsl
and
sbb
rcll
jmp
pusha
into
sub
dec
xor
jecxz
bound
jmp
jle
add
and
mov
and
fnstcw
jno
scas
fyl2xp1
sti
dec
push
aam
jb
outsl
adc
out
lret
das
repnz
add
ljmp
xchg
cmp
loope
sub
mov
enter
adc
inc
pop
enter
popf
cmp
mov
xor
xlat
and
jb
test
cmp
xor
dec
mov
xchg
add
mov
adc
arpl
out
cs
test
repnz
testb
push
cli
je
or
inc
xor
inc
stos
mov
cmp
push
mov
dec
shrb
aam
test
jl
jno
int3
adc
aas
imul
and
outsb
mov
adc
ss
out
mov
cmp
xchg
inc
jno
in
in
pop
or
lret
mov
loope
inc
push
cmpsb
cmc
cmp
int3
out
ror
cmp
pop
fnstcw
sbb
addl
int
add
mov
test
ljmp
mov
scas
xchg
roll
xchg
in
inc
iret
cmp
sbb
sbbl
pop
jle
lret
ljmp
dec
fadd
cli
je
cwtl
or
adc
inc
and
call
mov
sarl
sbb
and
inc
cmp
imulb
inc
cs
push
sbb
inc
lods
movsb
mov
std
out
mov
repnz
mov
dec
push
and
aam
push
dec
data16
arpl
pop
lret
int
cmp
xor
jl
std
jae
sub
hlt
fs
ret
popf
pop
cmpsb
dec
aad
in
add
mov
adc
inc
rcll
inc
insb
fcomp
sub
fisubs
pusha
and
cld
rcrl
lret
sbb
cs
xchg
outsl
in
inc
or
jo
out
xorl
lret
fsubrl
mov
test
sub
fsubrl
xchg
xchg
getsec
jno
push
pop
mov
mov
cs
adc
sub
mov
sar
inc
hlt
xor
arpl
adc
sub
into
inc
pop
xchg
testl
xor
push
add
jle
jno
shll
jg
pop
cmp
andb
cmp
mov
fistl
sub
push
fldcw
mov
push
jmp
fwait
push
xchg
sarl
or
jmp
lret
aas
gs
orb
cmpsl
xor
and
xor
sahf
div
scas
dec
pop
cwtl
push
xor
loope
adc
dec
pop
add
fdivrs
xchg
jo
mov
push
lcall
jae
add
pop
xchg
and
mov
pop
and
addr16
fcmovu
loope
shlb
imul
xor
dec
mov
stos
nop
je
je
mov
jg
out
jno
fsubrl
pop
mov
enter
loop
add
test
add
std
and
lret
in
gs
cli
cmp
mov
cmp
and
add
mov
hlt
in
sub
jo
push
iret
push
adc
out
int
es
ficompl
sub
mov
popa
cmp
sub
fadds
mov
imul
add
je
xchg
test
xchg
cmp
mov
inc
lea
cmp
insl
test
popf
out
lret
dec
dec
stos
arpl
adc
push
sbb
les
mov
ds
dec
sub
mull
mov
and
inc
int3
popa
jno
stc
scas
xchg
orl
and
sub
stos
iret
xor
pop
pop
das
js
jo
mov
lock
dec
pop
add
mov
xlat
test
aad
enter
dec
jb
cwtl
in
icebp
mov
fdivl
movsb
test
pop
mov
and
xchg
scas
popa
jo
dec
popf
loope
sub
sbb
ds
fcoms
andl
bound
scas
jle
mov
test
scas
xchg
mov
stos
pop
popa
pop
ljmp
dec
push
mov
scas
add
cmc
sbb
or
jg
int3
cmpsl
fistl
aam
mov
add
ret
adc
repz
push
cs
sbb
or
lock
inc
insl
dec
dec
dec
mov
lret
dec
sete
rolb
or
push
sub
push
pop
std
inc
pop
dec
push
decb
jg
jle
repnz
ja
mov
pop
sbb
adc
mov
cmpsb
jmp
outsb
mov
fbld
cltd
in
dec
push
lods
cmp
arpl
xchg
je
xchg
shl
rcrl
stos
push
jbe
mov
repnz
dec
popf
inc
les
jbe
mulb
aam
or
enter
mov
jo
sbb
cld
inc
cwtl
ja
ret
adc
mov
lods
push
mov
cltd
fcoms
add
xlat
push
push
push
cmp
loope
xlat
cltd
sti
arpl
mov
pop
loope
lahf
shl
nop
or
in
test
mov
mov
popf
mov
insl
mov
and
ret
fisubrs
dec
cmp
xchg
xlat
cli
mov
xor
push
sub
mov
test
ljmp
out
mov
lods
cwtl
scas
rcrb
add
fcoml
jb
add
push
xchg
mov
jb
inc
push
out
out
enter
repnz
jbe
pop
aaa
aad
pushf
ret
mov
jecxz
lret
call
mov
call
ljmp
mov
addr16
mov
cs
xchg
push
cmp
sahf
pop
shlb
push
pop
push
test
mov
add
lods
arpl
rcrb
fcom
dec
jae
mov
pop
adc
enter
test
cwtl
cmp
cmp
sbbl
movsl
int
mov
jl
push
into
adc
jnp
inc
sub
or
push
in
addr16
pop
je
mov
rolb
and
dec
inc
push
insl
iret
add
jl
js
cmp
mov
sbb
lea
sub
pop
xor
mov
or
in
add
cmpb
jecxz
lds
testb
push
inc
rol
mov
dec
sti
fcmovu
adc
fucom
adc
repnz
loop
dec
pop
in
xor
sti
loop
in
and
xor
cltd
pop
inc
add
mov
mov
inc
nop
jp
adc
push
mov
xchg
dec
loop
cmp
mov
add
mov
jns
fadd
mov
jle
lahf
adc
mov
and
jb
shrl
add
mov
mov
cmp
cmp
repnz
fadds
or
leave
pop
das
cmpsl
stos
scas
inc
orb
xor
inc
rolb
stos
cmp
mov
and
cmp
outsl
push
imul
pusha
je
inc
mov
pop
adc
nop
je
mov
jb
or
sub
dec
dec
mov
mov
pop
and
lret
mov
pop
les
push
movsl
mov
mov
out
mov
mov
mov
push
arpl
adc
sbb
mov
ret
movsb
or
inc
out
sbb
mov
sbb
jno
cmpsl
lods
mov
and
sub
push
std
pop
pop
lcall
push
mov
pop
lods
and
or
jg
inc
imul
push
push
add
xor
pop
push
in
sbb
out
add
cmp
mov
mov
push
jo
add
fdivl
adc
ficomps
mov
jne
bound
push
or
mov
jge
int
mov
xor
dec
sub
mov
lcall
pop
cmc
cmp
mov
or
lods
adc
aad
data16
jl
push
repz
cld
fldenv
pop
loope
mov
mov
push
sbb
add
cmpsl
sub
aad
into
dec
popa
cld
inc
and
es
sub
xor
pop
dec
fidivl
mov
lahf
mov
in
pop
aam
loopne
pushf
mov
dec
push
stos
jnp
pop
ds
fucomi
pop
dec
push
lods
sbb
mov
not
imul
jne
jle
sub
inc
or
fiaddl
cmpsb
push
cmc
stc
fistpl
adc
mov
rcl
push
lcall
mov
pop
dec
in
dec
iret
jae
hlt
inc
jecxz
push
pop
pop
inc
test
data16
dec
pusha
xchg
loop
mov
loopne
lcall
or
pop
fmuls
test
mov
leave
pop
xor
loop
bound
lods
loop
pusha
movsl
add
add
xor
fisttpll
mov
ja
call
test
testl
push
aaa
fwait
sbb
sub
pop
and
js
movsb
mov
cmp
jmp
mov
xor
rclb
xlat
add
ljmp
xchg
mov
push
push
data16
scas
rcr
dec
fbld
push
sbb
push
insl
das
loopne
xlat
mov
inc
mov
sbb
test
jp
xor
push
or
mull
dec
and
adc
rcl
mov
jle
sarb
fimuls
jmp
lret
push
popf
mov
shll
jmp
xor
cmp
aam
jmp
cli
shlb
gs
pushl
pop
inc
and
adc
mov
cs
mov
add
pop
inc
cmc
or
adc
into
xchg
push
mov
loope
outsl
xor
sbb
mov
mov
stc
loope
jnp
jecxz
pop
or
test
cs
and
mov
and
iret
pop
ss
xchg
xor
aaa
fistps
xchg
sbb
push
mov
sbb
movsl
sub
fmuls
insl
add
push
jle
int
adc
mov
jb
loope
mov
mov
pop
aad
push
xor
sbb
sub
adc
fwait
push
repnz
jnp
xor
and
ds
inc
mov
or
in
in
aaa
mov
scas
sbb
dec
aam
test
lcall
loopne
and
jne
fs
call
and
stos
push
fcmove
mov
jno
and
idivl
adc
out
dec
hlt
sub
jge
sbb
outsl
push
xor
or
dec
add
mov
mov
aam
sbb
inc
push
adc
imul
sbb
push
jecxz
mov
in
insl
push
cli
mov
dec
sub
cmpl
aas
adc
pop
mov
adc
cli
stos
xor
inc
addr16
cmpsl
inc
pop
pushf
jl
test
cwtl
push
push
sbb
gs
lret
push
sbb
in
aad
icebp
shrl
xor
cmp
aad
test
inc
mov
mov
test
sbb
or
and
sti
add
sub
inc
jmp
and
or
flds
jnp
clc
arpl
and
lea
xchg
cmp
stc
sub
sbb
mov
aam
mov
push
xor
dec
lock
clc
jne
das
mov
and
pop
fiadds
cltd
and
ret
dec
jbe
addb
mov
fstpt
negb
jg
arpl
lcall
and
fucomp
mov
push
mov
cmp
xchg
loope
pop
xor
ljmp
xchg
mov
pop
add
adc
enter
hlt
ret
leave
add
nop
or
test
mov
dec
inc
xlat
jecxz
addb
pop
iret
stos
mov
pop
cmp
adc
dec
arpl
pop
jne
hlt
inc
in
or
jne
push
xchg
jae
xchg
mov
cs
stos
pop
xor
into
or
mov
in
push
sbb
jno
mov
movsl
mov
jp
mov
data16
ja
pop
mov
mulb
lods
shrb
sub
or
or
jo
xor
es
jo
sti
pop
dec
dec
mov
dec
das
fisttpl
sahf
inc
insb
inc
xchg
xchg
push
cmp
or
xlat
add
loop
pusha
mov
add
and
pusha
sub
mov
aas
or
xor
adc
outsb
jbe
js
stc
jge
push
lahf
pushf
fsts
push
cltd
rcr
cwtl
lahf
cmpsl
mov
shlb
xor
into
stos
ljmp
into
inc
scas
popf
mov
pushf
cmc
rcll
mov
imul
movsb
jo
fisubl
sbb
imul
mov
or
fisttpl
fwait
movsb
cld
outsl
test
mov
pop
subb
cwtl
xor
inc
shr
clc
push
into
rorb
dec
dec
dec
jp
cmc
cmp
jo
jle
cmp
or
lret
mov
mov
mov
sbb
popa
push
hlt
in
cld
lret
test
dec
mov
pushl
pushf
xchg
js
sbb
cmp
push
pushf
sub
cmpsl
inc
adc
mov
cmp
xchg
adc
scas
xor
pop
out
lock
in
xor
cmp
fnstcw
mov
test
xchg
icebp
aas
add
mov
mov
ds
daa
mov
addr16
scas
mov
bound
cmp
and
cmp
call
mov
mov
jns
push
aam
inc
fidivrl
daa
arpl
sbb
jp
test
stos
push
divl
jne
or
mov
cmp
lahf
sbb
test
mov
mov
ja
addr16
mov
adc
ja
loop
lods
fldenv
jmp
jecxz
aam
dec
shl
or
or
jg
mov
dec
sbb
mov
jnp
pop
cmc
xchg
mov
mov
movsb
hlt
outsb
sahf
mov
movsl
adc
fidivl
xor
repnz
test
jae
mov
mov
popf
or
inc
add
lcall
sbb
movsb
stc
pop
lahf
mov
sahf
cmp
popa
adc
fcomps
cwtl
and
push
push
mov
push
cmpsl
inc
push
std
sbb
das
cs
aam
in
push
lds
mov
jne
cwtl
mov
or
mov
mov
cwtl
adcb
add
sub
sub
movsb
push
ret
outsl
jnp
push
flds
cmp
popf
sbb
rclb
call
jae
out
lods
sbb
cmp
jg
dec
xor
mov
sbb
jecxz
mov
sbb
jecxz,pt
sbb
aad
sahf
mov
adc
ret
cmc
aas
or
sbb
ret
fcomps
push
dec
call
loopne
ds
iret
pusha
loopne
or
pop
stos
sbb
jbe
mov
jl
lds
jno
xlat
xor
jmp
xchg
sbb
mov
cmp
ss
cs
jge
cmp
push
and
nop
adc
or
lock
and
jb
aaa
fscale
sub
ja
out
cwtl
or
test
popf
mov
dec
lcall
inc
ficoml
jp
out
mov
cmp
pop
mov
dec
dec
outsb
lahf
or
sub
insl
aaa
cmp
inc
iret
xor
add
pop
stc
fnstsw
int3
cmpsl
addr16
mov
lret
sbb
jge
andb
ret
xor
test
shlb
out
lcall
sub
shrl
insl
xor
push
mov
push
fs
lcall
and
cli
stos
data16
movsl
xchg
xchg
adc
test
imul
cmp
add
aam
fisubs
sub
add
test
into
inc
cmp
fucomp
xlat
outsb
mov
mov
mov
insl
cli
dec
adc
fisubl
call
shrl
dec
imul
hlt
ja
scas
fisttps
mov
inc
adc
movsl
lret
inc
jae
sub
stos
jae
mov
xchg
stc
jb
stos
out
adc
mov
aas
push
mov
aam
rcrl
inc
mov
jecxz
gs
cmp
push
xor
insl
aad
dec
add
icebp
jecxz
jne
stc
inc
lret
push
stos
xor
adc
mov
push
pop
movsl
test
pop
mov
and
loope
inc
cs
sub
cmp
jle
rol
lock
xlat
xchg
push
jp
lcall
test
push
popw
push
adc
sti
mov
cwtl
push
pop
fwait
push
lods
repz
sbb
imul
cmp
cwtl
hlt
arpl
jb
mov
dec
sbb
and
stos
test
fisubl
cmc
shrb
jecxz
push
cmc
ja
test
xor
cmp
aam
in
cmp
push
push
lret
es
add
jmp
pop
or
mov
stos
xchg
int
pop
lahf
aas
inc
or
xchg
loopne
add
pop
dec
cltd
jnp
stc
or
inc
loope
cmp
clc
and
sub
sub
notl
incb
sbb
push
test
inc
pop
into
testl
test
jnp
lret
dec
ja
sti
cmc
divb
jb
test
addl
or
mov
cmp
out
arpl
push
mov
inc
dec
add
inc
aaa
or
jg
dec
and
outsl
shlb
mov
insb
cli
jg
rorl
mov
aas
xor
push
ret
fdivrp
xlat
inc
add
rcrb
ljmp
popf
js
mov
jle
mov
and
pop
das
insb
mov
inc
ss
jecxz
adc
mov
movsb
out
and
xchg
dec
or
mov
mov
push
inc
mov
pop
icebp
fs
leave
xlat
push
adc
and
pop
movsl
cmp
lahf
pop
xchg
dec
and
jge
jg
push
js
and
jp
push
stos
xchg
cmp
adc
cld
insb
pop
xor
aaa
movsl
aad
cmp
imul
or
xchg
mov
or
inc
imul
js
cmp
add
xchg
push
pop
and
jo
aas
pop
xchg
add
je
adc
cmp
push
test
xchg
cmpsb
mov
xchg
gs
xlat
pop
mov
and
adc
out
push
int3
daa
pop
mov
gs
dec
mov
pusha
xchg
mov
adc
push
arpl
std
add
and
mov
ud2
ret
sbb
js
or
mov
scas
xchg
mov
popf
adc
dec
lcall
xchg
out
mov
mov
fildl
pop
repnz
std
xor
outsb
sbb
push
xor
hlt
or
fcomp
or
lock
fucomi
cmp
dec
out
ret
test
mov
push
xchg
fdivrl
lahf
sbb
xor
inc
add
into
sbb
nop
test
push
in
adc
mov
xchg
in
je
push
and
mov
xchg
mov
insb
cmpb
add
and
ffree
lret
xchg
mov
stos
cwtl
insb
in
jo
loop
enter
mov
mov
into
insb
outsb
add
jge
dec
loop
fidivs
js
sub
pop
sub
mov
and
mov
stos
pop
mov
mov
in
mov
or
mov
icebp
mov
les
aas
push
mov
loop
imul
xchg
adc
fstps
dec
push
adc
xlat
mov
cmp
xchg
mov
ds
pushf
in
sbb
adc
pop
subb
lret
or
pop
cs
js
push
and
outsl
ljmp
das
mov
loopne
xor
pushf
cmp
lods
inc
cltd
jp
mov
pop
div
push
push
dec
dec
fldl
mov
std
or
and
adc
mov
or
mov
in
push
sbb
lds
mov
sbb
rclb
fwait
pusha
mov
push
lret
call
outsl
dec
xchg
jg
enter
sub
leave
push
and
scas
cmp
dec
jns
mov
pop
lods
xchg
or
lods
pop
lea
cmp
repnz
fnstcw
cmc
out
cmp
add
nop
jle
call
jno
fldcw
ja
movups
decb
lea
fisubs
inc
fwait
mov
ja
fnstenv
xor
loope
imul
aad
sub
sub
out
test
add
addl
push
dec
fdivrl
ja
push
pop
lret
lahf
notb
outsl
jge
fwait
outsb
movsb
pop
adc
fldl
xor
xlat
call
sbb
pop
xor
jnp
js
sbb
and
cmp
daa
ds
mov
mov
and
popf
mov
out
sub
sbb
mov
dec
and
mov
int
push
sub
add
test
call
jnp
enter
jmp
adc
out
mov
jmp
push
scas
mov
icebp
mov
scas
mov
pop
lret
aaa
and
pop
or
arpl
std
pop
sbb
lea
dec
scas
add
aas
xchg
push
lods
add
stos
std
jnp
adc
hlt
pop
cmc
bound
lahf
sbb
cwtl
xchg
sbb
mov
popa
cmp
mov
cmp
adc
pusha
mov
dec
jmp
push
sti
jmp
stos
andl
or
arpl
adc
imul
insl
jnp
fs
mov
fxtract
mov
mov
test
loopne
sub
arpl
mov
sbb
adc
xchg
xchg
and
mov
addr16
rcl
lahf
imul
ret
stc
inc
lahf
push
sahf
push
pusha
movlpd
mov
pushf
mov
call
in
inc
cmp
fsubrs
and
imul
popf
pop
stos
sbb
arpl
gs
cmpsl
jmp
sub
add
and
mov
nop
outsl
popa
dec
mov
mov
add
inc
lds
xchg
pshufw
cs
mov
lds
scas
pop
jmp
movsb
inc
ret
inc
mov
add
and
out
xor
fsubrs
mov
in
xor
test
cmc
flds
in
mov
imulb
icebp
push
pop
mov
mov
dec
pop
and
cli
cld
jecxz
adc
int
les
stc
push
pop
push
cmp
mov
outsl
dec
cld
sub
push
sti
outsb
jg
jno
fs
iret
push
xchg
js
and
push
jb
xor
shll
xchg
xchg
mov
stc
bound
nop
orl
sbb
jae
das
adc
fs
push
pop
es
into
and
mov
lods
adc
fldl
jno
mov
add
xor
mov
inc
xchg
add
std
sbb
adc
popf
cld
xor
lret
aaa
fs
push
or
fidivrs
or
sub
mov
sub
test
call
repnz
and
out
pop
ret
mov
xor
cmpsl
in
ror
movsb
jb
push
aas
pop
dec
xor
popf
test
add
jns
xchg
ret
jnp
cs
adc
inc
dec
jbe
dec
cmp
inc
xchg
or
adc
addr16
add
adc
repz
sbb
mov
mov
lret
in
xchg
stos
add
inc
aaa
push
shrb
loop
movsb
xor
dec
imul
pop
pop
movsb
mov
cmp
mov
hlt
ret
insb
outsl
inc
roll
lret
fmulp
pop
pop
fldl
push
je
sbb
les
sbb
sub
or
repnz
pop
xchg
fisttpll
ffreep
stc
push
xor
aas
mov
mov
pop
mov
mov
ja
out
lds
loopne
arpl
dec
pusha
scas
adc
inc
in
mov
cmc
test
ffree
fstpl
ljmp
xchg
test
lret
push
clc
push
mov
sbb
roll
push
mov
outsb
push
lods
andl
scas
daa
cmp
ror
mov
push
movsl
mov
mov
movsl
pop
cmp
daa
add
xor
divl
sbb
pop
shlb
cmp
jl
mov
push
mull
mov
je
xchg
push
sbb
icebp
jp
addl
mov
push
inc
jp
fidivrs
test
scas
mov
rclb
std
cld
out
inc
inc
add
xchg
mov
lcall
faddl
fs
loop
ljmp
add
jl
es
aad
adc
jae
jmp
ret
cmc
clc
cmp
jne
pusha
outsb
xchg
popf
xchg
adc
sub
xchg
cmc
fcmovnu
adc
pop
cli
mov
mov
push
sbb
scas
out
mov
in
cmp
out
pushf
mov
adc
loopne
sub
pushf
xchg
push
dec
jle,pt
jnp
mov
out
into
out
movsl
dec
fsubrl
mov
frstor
test
lock
out
out
adc
out
mov
fidivl
repz
or
call
aad
xchg
mov
push
mov
adc
push
fmul
jl
push
sarb
fldenv
in
pushf
mov
rcrb
mov
pop
jb
or
mov
std
enter
ss
push
clc
inc
popa
jl
mov
dec
les
out
insb
in
push
sbb
in
pushf
inc
test
fcmovbe
dec
cmc
sbb
popf
push
inc
mov
fwait
loope
push
int3
and
jno
and
mov
pop
fs
inc
in
rol
cmp
test
cmp
and
adc
out
xchg
add
scas
adc
lock
xchg
adcb
jl
call
pop
or
loope
push
test
push
movsb
andb
aas
mov
jg
push
cmp
cmp
gs
frstor
mov
aam
fcomp
or
dec
xchg
pop
cli
ja
xchg
push
loop
push
leave
dec
xchg
hlt
sbb
test
cmp
pop
mov
shll
insb
arpl
add
cld
fidivrs
jl
adc
dec
ret
xlat
sbb
cmp
xlat
insb
mov
pop
mov
mov
arpl
fldcw
sldt
lea
jp
push
xchg
jno
and
icebp
xchg
mov
mov
inc
aaa
loop
and
sbb
inc
pusha
lock
adc
je
rcrl
jmp
push
call
xor
jb
ljmp
jb
push
fsubl
fdivs
test
bound
sbb
or
pop
sbb
fimuls
pop
cli
inc
loope
maskmovq
imull
add
jb
dec
ret
sbb
sub
xchg
jb
push
fisttps
ljmp
roll
inc
in
xor
out
cmp
push
mov
xchg
out
fsub
jg
fsub
xorl
outsl
pushf
imul
out
adc
push
or
mov
mov
insb
sbb
mov
clc
jl
and
int3
pop
ret
xor
test
lahf
aad
fidivs
xchg
movnti
mov
in
xchg
push
pop
add
or
scas
jne
test
pusha
cmp
jb
sbb
mov
mov
jbe
mov
jnp
xor
inc
or
xchg
fst
sbb
inc
lcall
xlat
xchg
arpl
mov
popa
mov
mov
aad
negb
popa
dec
fnstcw
out
orl
out
sbb
jns
jnp
inc
fldt
lods
lahf
and
gs
cli
mov
dec
movsb
loop
push
out
test
je
push
push
xor
mov
push
mov
orb
lods
add
or
or
xor
fisttpll
enter
adc
dec
daa
out
dec
fiadds
cwtl
push
sub
jb
outsl
or
mov
rdpmc
fnstcw
in
dec
pop
sub
out
mov
mov
xor
mov
clc
xchg
std
mov
mov
dec
es
fisttps
and
rcl
add
stc
loop
sti
idiv
jl
mulb
aam
test
lea
cld
fnstcw
or
sub
pop
pop
pop
lods
adc
push
add
js
leave
js
out
mov
jp
mov
jmp
push
jle
sub
stos
sahf
cwtl
pop
les
mov
xchg
mov
jle
mov
int
pushf
mov
loop
aad
sahf
inc
cmp
push
out
add
jo
push
rcrb
xchg
cs
outsb
lock
inc
xor
loop
pop
jecxz
mov
lret
dec
mov
mov
xchg
pop
xorl
aad
shrb
mov
rdtsc
xor
mov
insl
lcall
jae
lock
push
iret
xchg
inc
sahf
addb
adc
das
movsl
popa
pushf
or
inc
stc
aaa
fistpl
fcmovnbe
pop
inc
shl
insb
cmp
add
lds
lret
push
lods
mov
xor
insl
insl
das
dec
and
pop
jg
movsl
adc
jg
xor
and
and
fnstenv
ret
mov
lahf
add
rol
sbb
popa
pusha
aad
or
jmp
jle
adc
push
mov
push
cs
stc
jle
dec
sbb
std
adc
add
inc
leave
rol
cmp
push
sbb
in
movsb
into
loopne
stos
pop
fwait
mov
pop
fildl
pop
mov
push
lods
pop
pop
lock
dec
cmp
ljmp
or
jbe
into
stos
dec
hlt
inc
out
adc
mov
loop
sti
loop
pop
cmp
add
sub
sub
sbb
pop
mov
das
jnp
jb
jle
loop
fwait
inc
push
hlt
sub
push
xor
sbb
bound
add
sub
cmp
push
adc
fs
icebp
fwait
test
cmc
dec
and
dec
mov
mull
popa
push
shrb
scas
nop
add
adc
mov
iret
adc
mov
dec
or
cmpsb
push
xlat
dec
push
shlb
and
lcall
mov
mov
stc
mov
lcall
lret
ss
adc
mov
out
lcall
aaa
sbb
inc
ret
mov
dec
sub
clc
scas
lods
cld
in
loopne
enter
adc
fsubrs
push
cmpsb
dec
sub
test
in
jecxz
popf
std
jne
cmp
add
rorl
sti
das
repz
ror
jo
mov
adc
push
lds
fcomip
incl
pop
adcl
pop
push
xchg
imul
faddl
imul
das
fistpll
push
and
mov
mov
arpl
scas
outsl
add
add
jmp
std
dec
iret
test
or
push
dec
mov
popf
fs
movntps
push
pop
add
inc
jnp
repnz
imul
imul
jo
mov
iret
xchg
and
ds
xor
repz
clc
adc
pop
aad
ret
call
outsl
scas
stc
xchg
in
sahf
outsl
or
jle
ljmp
scas
mov
jno
push
dec
imul
fstpt
sbb
loop
outsl
sub
ljmp
ss
dec
shrl
fbld
hlt
mov
andl
bound
iret
adc
das
mov
std
test
mov
xor
push
fwait
sbb
stc
lret
fwait
shrl
ret
aad
mov
pop
jl
mov
in
out
mov
outsb
jp
into
cmpsb
insl
out
add
imulb
pusha
or
adc
lock
enter
push
mov
pop
lret
dec
xchg
add
enter
arpl
decl
rorb
lds
js
fisubrs
sbb
mov
jbe
mov
push
and
stc
xlat
imul
mov
xchg
data16
add
cmpsb
aam
lds
add
mov
add
mov
lea
outsb
arpl
and
and
mov
push
imul
inc
dec
je
jl
cs
aam
mulb
cld
inc
into
push
call
mov
cmp
scas
lahf
out
jl
scas
int3
lahf
sahf
lret
mov
mov
mull
int3
icebp
dec
imul
adc
and
fs
stos
and
js
cmp
addr16
xchg
mov
dec
loop
or
js
pop
xlat
sub
push
out
repnz
adc
imulb
out
push
pop
xchg
rcl
pushf
dec
dec
adc
or
xchg
jle
outsb
pminub
mov
sti
lret
add
jnp
into
xchg
fstl
pop
jbe
xor
xor
test
leave
pop
call
pop
sbb
jbe
or
sub
adc
fimull
data16
xor
int3
mov
fs
cmp
push
sarb
cmp
ja
xchg
ja
mov
or
xchg
pusha
mov
dec
lahf
inc
jmp
ret
pop
mov
fwait
cmp
testb
xorb
out
idivb
aaa
dec
mov
pop
push
mov
dec
cld
cmp
stos
inc
sub
in
jae
mov
sbb
pop
push
in
xorb
xor
push
lahf
vfrczsd
mov
mov
sub
jecxz
cmp
icebp
mov
xchg
jge
xchg
push
dec
xlat
popa
inc
dec
cmp
rol
mov
sbb
repnz
add
faddl
clc
push
inc
mov
or
mov
stos
cltd
fldenv
shlb
imul
sarb
data16
lea
fsts
mov
pusha
lahf
jmp
popa
rcll
xchg
stos
iret
andb
test
negb
das
inc
movl
data16
add
fildl
nop
les
fldcw
pop
mov
sti
idivb
xchg
push
add
rol
mov
sbb
mov
cltd
repnz
das
sub
ret
iret
lds
stos
and
test
push
sbb
mov
mov
incb
push
mov
add
test
cmpsb
inc
and
pop
jo
cli
sti
imul
xchg
shlb
lds
sbb
mov
clc
and
punpckhwd
repnz
jecxz
shll
bound
pop
add
les
repnz
es
mov
add
rorb
sub
aas
xor
repz
mov
adc
inc
dec
fcomps
movsl
loope
jno
mov
sbb
call
fs
repz
push
pop
pop
test
aaa
out
adc
mov
jg
test
adc
in
xor
out
out
mov
daa
movsb
shr
in
add
push
cmp
jl
rorb
cmp
ret
aam
in
mov
push
xchg
iret
push
sub
pop
or
fiadds
sbb
mov
xchg
test
flds
gs
mull
hlt
les
pop
jno
sbbb
inc
mov
dec
jnp
xchg
add
stos
sub
stos
movsb
mov
add
push
fidivrs
mov
testb
in
in
mov
dec
outsb
test
imul
loopne
sub
or
pop
sbb
xchg
cs
addr16
cmp
mov
mov
jb
pushf
jle
shrb
cmp
pushl
dec
cmp
push
rclb
and
dec
sti
jmp
popf
inc
repnz
or
jnp
push
inc
fcompl
dec
scas
lock
dec
scas
in
sub
pop
push
iret
jp
push
ljmp
cmp
test
adc
xchg
mov
xchg
dec
repz
mov
mov
dec
xlat
xor
cmp
adc
or
repz
pusha
push
mov
cmpsl
cmc
or
mov
jecxz
cltd
mov
add
imul
pop
mov
jg
dec
addl
divl
lcall
mov
movsb
adc
cltd
inc
add
xor
outsl
jp
and
inc
or
ljmp
mov
jmp
loope
pusha
pop
pop
mov
xchg
sbb
imul
sbb
lahf
mov
out
add
jg
out
loope
or
cltd
lods
sub
push
mov
mov
xchg
aam
insl
es
aaa
dec
cmp
mov
in
stos
lahf
sbb
leave
mov
cli
jle
jp
aam
add
ljmp
jecxz
dec
mov
and
pop
xor
gs
sbbb
pop
cld
cltd
push
in
cmp
xchg
lds
add
in
ss
adc
cmp
outsb
mov
out
push
jl
sahf
cwtl
mov
pop
scas
cld
cmpsl
shlb
loope
sti
aas
cmc
clc
jb
in
jbe
mov
pop
sbb
dec
mov
sti
negl
insb
or
imul
das
arpl
mov
cld
add
pop
and
xchg
fidivrl
clc
mov
dec
cmp
imul
daa
mov
cmp
test
scas
cmp
cmpsb
and
xor
arpl
pop
les
mov
jge
inc
je
fld1
jp
out
and
mov
lahf
aaa
jnp
mov
nop
call
mov
jne
ds
das
gs
sub
xor
je
loopne
pop
in
pop
pop
das
inc
mov
call
cwtl
movsl
mov
sub
cmpsl
or
rorl
push
mov
mov
jle
jb
lods
sub
jne
sbb
test
mov
pop
lea
pusha
decl
mov
popf
pmaxsw
and
push
push
sub
mov
hlt
clc
shl
xchg
push
push
xchg
cmp
dec
daa
sahf
cld
imul
inc
out
addl
push
jne
mov
inc
mov
cmc
push
push
mov
das
and
outsl
test
popa
aaa
outsl
call
mov
test
dec
outsl
add
outsl
ss
cmp
ret
sub
cwtl
outsl
fidivrs
xor
out
cltd
mov
outsl
and
xchg
aam
aaa
fdivrs
or
data16
jae
js
add
add
andl
cmpsb
sbb
shl
or
xchg
push
mov
pop
cmpsl
ret
pop
push
dec
pushf
rcrb
ret
jne
adc
and
lahf
and
not
outsb
in
add
xor
xchg
lods
push
aaa
das
xchg
bound
mov
ja
bound
jl
loopne
push
push
adc
cmp
sbb
push
loopne
mov
or
sahf
mov
out
loope
sub
cltd
ret
imulb
outsl
clc
pop
push
stos
jns
insb
xor
sbb
jae
loope
fsubs
fsubs
pop
push
push
js
fidivrl
mov
and
ds
sbb
jle
sbb
xchg
divl
xlat
or
sarb
std
xchg
lahf
shrb
mov
mov
test
jbe
ljmp
add
mov
enter
clc
out
cmp
mov
mov
push
cmpsl
adc
cmp
push
xchg
xlat
add
jo
xor
sub
dec
and
mov
addr16
xlat
mov
pop
fs
sbb
or
into
cmp
mov
xor
or
sbb
int
cmpsl
test
push
pop
or
xchg
mov
mov
mov
cmp
lret
jnp
xchg
adc
icebp
mov
cltd
lods
push
lock
aaa
movsl
push
sub
std
decb
push
addr16
jo
scas
mov
dec
bound
jmp
cmpsl
iret
dec
push
sahf
insb
sub
xchg
in
pop
stc
and
aas
movsl
stc
push
icebp
cmp
loopne
clc
mov
push
adc
les
fs
pusha
mov
rorb
cmpsb
dec
or
or
mov
xchg
jle
movsl
aad
lcall
jl
sub
inc
ja
mov
arpl
cli
push
cs
adc
xor
pushf
std
pusha
xchg
dec
jae
or
mov
outsl
push
mov
fcmovbe
adc
mov
clc
mov
jbe
adc
dec
fsubr
add
mov
addr16
mov
mov
xlat
add
pusha
ljmp
add
mov
adc
shll
mov
out
cmp
xchg
mov
push
es
mov
hlt
mov
negb
fwait
popa
or
adc
divl
enter
mov
cmp
and
mov
mov
test
or
mov
pop
int3
insb
cmp
dec
adc
stc
add
jo
or
cmc
into
jno
xchg
inc
lods
mov
xchg
push
dec
in
cmp
daa
inc
data16
add
sub
out
pop
adc
mov
cmp
xchg
dec
xchg
arpl
das
cmp
ljmp
push
std
cmc
cmp
xchg
mov
mov
adc
or
mov
dec
insl
mov
xchg
add
pop
xchg
insb
rorb
pusha
xchg
sbb
jb
sbb
mov
mov
sahf
loop
sbb
fistpl
fs
mov
mov
pop
add
loopne
lret
ficompl
fcoms
aad
inc
pop
dec
add
das
jecxz
jge
mov
divb
ss
push
lock
data16
mov
int
ret
xor
mov
mov
sti
test
popf
sahf
pop
rorb
sbb
xchg
and
popa
nop
inc
pop
stos
into
cmpsl
iret
adc
cltd
scas
adc
rcll
test
jns
sbb
rcl
mov
je
daa
sub
sbb
jb
cmp
dec
cmpsb
fdiv
hlt
jmp
adc
inc
mov
imul
and
test
or
outsl
mov
ret
fldt
out
lahf
mov
sti
push
insb
out
fwait
push
and
int3
orb
sbb
push
lret
add
mov
cmp
cmp
mov
lods
rcrb
insl
loope
mov
icebp
push
test
stos
inc
or
fsubl
push
popf
cmp
push
sar
jne
xor
mov
test
ljmp
hlt
mov
cli
xlat
das
jne
cli
ret
adc
rcll
in
mov
and
loopne
push
push
testb
push
cs
mov
xchg
pusha
xor
loop
fcom
jne
nop
add
lea
cmpsl
clc
repz
daa
xchg
roll
shll
repnz
fs
mov
jnp
sets
push
mov
scas
je
ja
lret
out
push
xchg
inc
cmp
popf
fucom
mov
fldl
icebp
xchg
mov
into
ss
sub
loope
and
mov
mov
inc
addb
and
cmp
into
pop
xchg
mov
cmp
or
sbb
lock
xor
shll
sbb
lods
xchg
mov
mov
mov
pop
push
repnz
out
lea
sbb
stos
sub
fstpt
ror
xchg
mov
xchg
and
imul
gs
sub
dec
ret
sbb
add
imul
data16
cmp
loop
xchg
xchg
add
push
movsl
in
loop
dec
adc
sbb
push
xchg
jmp
nop
sbbl
xchg
shlb
fidivrl
sahf
cmp
loop
inc
jmp
mov
icebp
push
pop
xor
leave
pop
jbe
aad
adc
xchg
xchg
lcall
xchg
push
add
pop
addr16
fwait
ret
stos
xchg
or
xor
xchg
sbb
outsl
sbb
push
test
call
aam
xchg
push
mov
and
add
jns
popa
push
mov
aas
push
loop
ret
shll
xchg
inc
gs
divl
xchg
shlb
cmp
jecxz
lods
mov
mov
mov
pusha
mov
mov
mov
fimull
ljmp
pop
ret
incb
sahf
fsubp
enter
xor
loop
cmp
push
int3
pop
mov
sub
outsb
in
mov
inc
popa
xchg
sub
jo
dec
adc
sti
xchg
ss
stc
test
repz
decb
pop
jecxz
push
mov
shlb
fcompl
test
lea
movsb
dec
or
xchg
and
sbb
jp
sub
cmc
ljmp
push
daa
in
imul
mov
cmpl
mov
jae
mov
pop
jmp
lods
imul
xlat
push
imulb
aad
mov
xor
es
mov
leave
inc
std
inc
pusha
mov
arpl
xchg
pop
jl
adc
adc
sub
cmp
lahf
jg
out
sub
scas
pusha
stc
dec
rorb
mov
sbb
icebp
push
pop
and
sub
jp
cmp
inc
jmp
pop
jp
setno
cld
loop
pop
push
push
pop
test
sarb
movsb
fwait
mov
add
push
into
aas
mov
popf
add
add
xor
imul
lods
dec
cmpsl
inc
pusha
sbb
bound
pusha
mov
or
fcompl
cwtl
pop
or
push
dec
cmp
incb
mov
and
cmp
and
fistpll
test
out
jle
jge
pop
mov
pop
jno
lock
sbbl
orl
mov
add
sub
xor
fs
arpl
sbb
push
imul
icebp
xchg
mov
in
jnp
stc
arpl
daa
imul
imul
mov
mov
jo
addl
add
mov
mov
push
sub
mov
outsb
sbb
nop
jle
fs
jp
ss
mov
aad
mov
insl
sub
jle
sbb
jns
sti
in
nop
jmp
pushw
repnz
jae
test
mov
jmp
pushf
imul
flds
imul
mov
push
out
inc
dec
shlb
push
aad
adc
ficoml
mov
sbb
imul
insb
data16
xor
insb
arpl
push
jecxz
aaa
out
or
push
fadd
add
add
fsts
and
outsl
push
xlat
mov
pop
repz
out
fists
lods
pop
pop
jne
mov
sbb
jmp
mov
ret
sbb
ret
iret
push
sbb
imul
inc
dec
push
push
scas
in
add
xchg
test
js
mov
sbb
orb
and
or
mov
lcall
push
cmp
push
adc
ds
bound
xor
xor
test
mov
mov
and
pop
into
sbbb
negb
rcrb
sbb
cs
imul
xlat
stc
ja
cmc
inc
add
ds
mov
icebp
xor
add
andl
pop
sbb
das
adc
push
div
and
repnz
lahf
cmp
jmp
enter
in
xchg
and
subl
jge
push
cmp
or
das
pop
loop
in
into
and
test
lock
mov
sbb
mov
ja
fwait
inc
fistpll
inc
adc
insb
mov
pop
fisttpll
test
sti
addr16
test
decl
aas
sub
arpl
stc
sahf
movsb
pop
in
lahf
mov
loop
add
cmpl
adc
mov
int
xchg
cmp
es
jb
shl
fs
faddl
dec
lods
add
lods
xchg
pusha
aam
inc
xor
inc
xchg
xor
cmp
jge
push
popf
jne
pushf
dec
pusha
lods
xchg
or
mov
aad
test
movsl
push
mov
cmpsb
mov
fstpl
arpl
pop
cmp
push
ss
scas
shrb
lret
in
loopne
jae
test
push
sub
push
mov
xor
sub
test
mov
add
sbb
mov
inc
loop
adc
push
pushf
cwtl
lds
inc
cwtl
fninit
aaa
sbb
push
jl
std
mov
xchg
inc
mov
mov
and
xchg
gs
cmpsb
xchg
push
je
es
fildl
sbb
pushl
in
dec
divl
outsb
lods
adc
scas
mov
mov
nop
or
rclb
mov
mov
cmpsb
or
mov
repz
test
inc
mov
jno
mulb
fsubp
xor
and
mov
jns
daa
dec
jle
cmp
lret
cmpsb
or
add
rorl
daa
fdivl
or
add
jl
icebp
sti
call
notl
xchg
std
push
lahf
imull
cmp
push
pop
mov
pop
out
xlat
and
mov
rcl
jno
psubsb
or
push
mov
daa
fdivr
leave
and
mov
ss
or
mov
faddl
insl
push
popa
fsubl
cmpsl
test
lret
adc
call
insl
add
pop
xchg
daa
je
and
test
aad
pop
inc
or
sahf
lret
js
loopne
ret
ljmp
in
xchg
icebp
xor
bound
cmp
test
fisubrl
out
andb
outsl
dec
cmp
psubsw
sti
jne
fs
fnsave
mov
jbe
out
shrl
pusha
jl
inc
xchg
cmpsb
jnp
inc
movsl
mov
mov
adc
inc
mov
or
sahf
in
pop
sti
leave
dec
loop
jp
loop
mov
cmp
lret
in
cmc
lock
mov
shlb
push
pop
seto
jmp
pop
and
movsl
rolb
sahf
ja
cmpsl
addb
lods
push
es
sub
ret
dec
mov
adc
popa
cmp
aas
jae
xchg
and
mov
jne
lock
pop
jno
sub
dec
adc
mov
inc
push
mov
mov
mov
inc
popf
cmp
or
and
mov
ret
aas
rorb
out
push
test
mov
adc
loop
shl
andb
lret
xchg
cld
sub
sahf
fidivrl
ds
call
repnz
jecxz
xor
popf
mov
and
mov
fistpll
mov
cli
inc
bound
mov
enter
jecxz
dec
sbb
les
fistpl
mov
divb
jle
out
jge
sbb
cmc
cmpb
cmp
outsl
popf
out
and
repnz
mov
test
icebp
push
push
inc
dec
jg
aam
andl
jbe
inc
push
out
push
jb
pushf
dec
mov
add
adc
outsl
js
mov
and
rcll
icebp
jnp
push
add
xor
fldenv
mov
scas
addl
je
pop
in
dec
xchg
push
mov
adc
movsl
movl
daa
loope,pn
hlt
cmp
xor
das
xor
lea
dec
xlat
cmp
dec
xor
fdivrl
push
out
sbb
cwtl
mov
out
dec
mov
jns
jae
sub
fstpl
dec
loopne
es
loope
pop
std
in
movsl
movsl
mov
and
sub
out
cld
imul
adc
lret
test
test
lret
push
or
cmp
push
mov
dec
bound
out
mov
ja
xchg
xchg
dec
cld
adc
int
sbbb
mov
sbb
lds
mov
inc
ss
pusha
push
mov
sarb
mov
icebp
or
push
dec
loop
xor
push
push
sbbb
cmpsb
rcl
je
movsl
mov
cltd
outsl
push
push
mov
or
clc
add
pop
adc
fsubs
xchg
rcll
push
push
scas
idivb
fidivrs
mov
add
incl
mov
lea
push
push
or
push
movsb
or
push
adcb
sti
lret
xorl
fistl
jbe
pop
dec
xchg
jbe
jae
stos
jg
data16
fdivrs
icebp
xlat
call
loope
lea
in
cmc
mov
and
mov
imul
cwtl
push
mov
clc
mov
push
xchg
cltd
test
xor
jno
ds
adc
push
loop
cmp
mov
test
sti
lea
ja
push
xor
ret
push
push
mov
dec
pop
je
dec
mov
fcompl
dec
arpl
xor
mov
scas
inc
stc
mov
les
test
xchg
jbe
xchg
cmpsl
enter
imul
fnstenv
iret
cmpsl
out
fcoms
xchg
les
clc
cmp
xor
xor
add
cmpsl
sub
cmpsl
fldl
mov
lods
or
or
aas
xchg
aas
mov
add
push
or
std
movsl
sbb
dec
mov
shrd
xchg
fs
mov
dec
mov
or
mov
push
fiaddl
ror
xor
aam
cwtl
mov
cltd
fcompl
cwtl
add
pop
rcl
mov
sub
test
imul
movl
es
inc
outsb
adc
jae
pop
or
xor
test
repz
jmp
fidivrl
pop
inc
bound
mov
sbbb
aad
loopne
mov
adc
inc
lods
std
pop
cmp
jmp
mov
xchg
push
aas
leave
or
movsl
and
ds
or
mov
popa
fsubrs
xchg
into
mov
pop
in
jno
shll
incb
jns,pt
mov
add
int3
fbld
push
pop
push
mov
stos
pop
jmp
pop
fs
aaa
shrl
dec
mov
cmp
dec
pop
fildll
pop
mov
arpl
mov
je
and
mov
lcall
and
sbb
in
push
add
cwtl
insl
jmp
out
or
push
inc
mov
dec
or
fmul
ja
add
scas
js
cmp
sbb
push
mov
iret
and
add
xchg
mov
or
cld
mov
test
sbb
mov
and
xor
sbb
jo
fwait
add
mov
popa
loop
out
nop
pop
call
or
cmp
push
jle
cmp
sub
xor
rclb
call
hlt
xor
movsl
in
inc
cmpsb
in
outsl
lock
lods
movsl
xchg
ja
sub
xor
cwtl
xchg
lahf
cmpsb
xor
into
jecxz
in
pop
idivb
lahf
insb
dec
outsb
scas
or
fsts
push
cmpsb
pop
cmpl
repz
lock
sbb
icebp
mov
jns
pop
mov
decb
gs
add
mov
jne
sahf
mov
adc
fdivrl
popa
mov
bound
lock
xchg
fnsave
aas
push
fnstcw
inc
scas
lods
out
imul
popf
lock
add
out
ret
xchg
push
lea
mov
push
mov
or
ret
mov
or
das
pop
testl
std
out
pop
xor
mov
pop
lods
mov
in
icebp
repz
or
xor
or
pop
stos
push
insl
loopne
movl
lcall
jge
bound
lods
jns
das
sti
xor
mov
test
sub
rorl
mov
sbb
sbb
jnp,pn
push
xor
movsb
mov
push
xchg
pop
sarl
cmp
int3
xchg
cs
clc
or
sbb
xchg
cmpsl
adcl
sbb
dec
sbb
mov
lds
sub
xchg
out
icebp
insl
imul
hlt
or
clc
leave
aaa
cmpsl
xlat
xor
lods
aas
xchg
loopne
add
push
push
xchg
sbb
call
loope
mov
mov
or
es
in
push
pop
jp
pop
not
in
xchg
rorl
test
das
jne
ret
sub
mov
lret
mov
xor
mov
gs
js
sub
cmp
mov
mov
cmpsb
cwtl
push
xlat
imul
stos
cltd
push
int3
add
imul
add
in
repnz
and
insl
cmpsb
repz
jb
shl
jo
bound
push
cmpsb
rcrl
test
dec
aas
pop
xchg
fildll
cltd
out
xchg
ss
int
xchg
in
mov
icebp
pop
mov
jns
and
pop
pop
es
les
cmpsb
fwait
jg
inc
popa
jae
sahf
cltd
call
xor
mov
in
in
in
fdiv
jnp
subb
dec
inc
pusha
jae
sub
call
pop
add
dec
cmpsb
popf
lds
data16
scas
adc
adc
push
push
cmp
andb
add
insb
rcl
sub
test
add
shl
lcall
or
xor
lahf
sarl
mov
out
xchg
adc
lret
and
out
incl
sub
test
jno
mov
cmpb
add
or
cmp
and
stos
in
decb
mov
cmpsb
cli
cld
loope
lds
mov
add
mov
shll
xor
fisubs
jg
mov
fwait
pop
pop
push
xchg
sti
cld
inc
test
lret
mov
addl
sub
adc
faddl
xchg
pop
movsl
inc
mov
ljmp
enter
adc
mov
cmpb
int3
and
push
scas
sub
cmp
mov
adc
xor
pop
fcomps
fcoms
and
scas
cld
movhps
dec
push
sahf
shlb
call
jecxz
mov
sbb
dec
pop
pop
ljmp
push
adc
aad
in
aad
push
inc
dec
xor
dec
repz
xchg
xchg
lcall
sub
push
cmpsl
fsubs
in
push
stc
repnz
icebp
sub
call
pop
imul
pop
scas
mov
int
adc
push
in
add
ss
mov
xor
sbb
idivl
jl
inc
les
mov
stos
imul
pop
iret
repnz
mov
mov
sub
test
mov
mov
sub
add
fiaddl
cmpsl
je
dec
das
cmpsb
cmpsb
shlb
cld
test
subl
cli
pop
scas
add
push
jge
and
adc
and
int
insl
mov
fidivs
push
cmp
push
pop
out
mov
cli
rclb
shlb
js
pusha
cwtl
les
push
or
ficompl
inc
and
cli
pop
lcall
out
leave
inc
cmp
lcall
inc
xchg
call
rol
jge
push
lea
icebp
mov
push
in
inc
add
stos
add
icebp
add
cmp
cmpsl
cwtl
cwtl
pop
jp
jecxz
dec
xor
add
pop
push
lea
xchg
cmpsl
das
les
cmpsl
or
jae
scas
inc
mov
aad
push
test
jl
xor
jge
inc
push
mov
insl
jmp
add
xor
push
or
cmp
xor
and
das
hlt
jg
fsubp
lahf
jmp
ds
shll
outsl
dec
ja
pop
movsl
push
adc
cmpsl
sarl
push
roll
sbb
pop
cwtl
js
push
mov
lret
mov
inc
xchg
sbb
push
addr16
popf
jle
in
popa
dec
int
mov
lret
in
subb
jecxz
mov
and
sub
sbb
sbb
xchg
jns
sahf
arpl
daa
add
shll
jae
fisubs
aas
xor
dec
or
pop
aad
fwait
int3
cmc
int3
dec
xchg
mov
mov
in
mov
adc
xchg
mov
sbb
pop
pop
jle
mov
add
cmp
pop
arpl
cmp
pop
fs
cmpsl
sbb
pusha
ds
loopne
fldenv
adc
rclb
dec
insb
out
in
push
mov
xor
imul
insb
lea
mov
out
in
out
cmpsb
pop
ret
xchg
push
cmp
outsb
jg
daa
lcall
test
mov
dec
sub
xor
add
and
cmp
loop
fbld
cmp
scas
cmpsb
xchg
sarb
ljmp
in
leave
hlt
psllw
push
sbb
nop
push
add
in
add
mov
xorl
add
xchg
jp
sbb
hlt
fdivrs
pop
int
cmp
in
cltd
cli
cltd
ja
inc
mov
enter
emms
les
push
daa
jnp
aas
lods
lret
imul
stos
jg
cltd
test
pop
mov
icebp
mov
inc
mov
or
jns
mov
adc
push
inc
xor
and
jne
repz
cmp
es
push
xchg
dec
aas
jp
filds
std
scas
xchg
rcl
pop
xchg
cmp
jno
pop
mov
mov
rorl
add
mov
fsubs
test
mov
jno
push
cmp
fstp
cmpl
cld
pop
in
jae
out
mov
ret
in
scas
pop
jb
cwtl
mov
mov
faddl
hlt
es
adc
dec
or
pop
jg
je
jb
out
in
clc
mov
pusha
jae
icebp
xor
pop
sar
push
sbb
xchg
pushf
ret
scas
push
lret
int3
mov
dec
xchg
inc
dec
bound
enter
cltd
mov
jno
orl
andb
sub
popa
pop
ficoms
mov
or
push
out
int3
jmp
cli
jo
adcl
sbb
push
stos
aaa
cmp
add
push
insl
mov
pop
and
gs
pop
jno
mov
xchg
cmp
ss
add
popf
fxch
inc
adc
testl
and
in
sub
sub
in
or
test
rclb
adc
popf
test
mov
inc
or
jmp
xor
dec
jmp
lock
pop
sbb
or
ficompl
cltd
or
adc
mov
out
sti
adc
ja
clc
testb
scas
test
lea
hlt
sbb
sbb
pop
sti
push
and
js
jmp
filds
aas
sub
in
adc
loopne
mov
enter
nop
and
mov
test
mov
adc
push
loopne
sbb
aam
mov
xchg
push
iret
cmp
subb
inc
sbb
js
xchg
cwtl
jo
mov
std
mov
je
push
add
cmc
mov
jno
mov
xchg
pop
push
sub
xchg
dec
jp
std
jecxz
cltd
dec
dec
cs
and
sub
inc
lock
cmp
or
sub
sti
daa
insl
push
dec
push
test
ss
or
pop
or
cmpsb
loope
loope
arpl
imul
mov
push
cmpsb
es
add
mov
xchg
roll
sbb
mov
pop
repz
lret
insl
and
insb
into
shr
mov
sbb
daa
in
inc
xchg
push
movsl
push
icebp
push
xor
imul
mov
mov
xor
movsl
nop
jo
js
repnz
push
cmpsb
sub
lahf
jo
and
mov
sti
mov
sti
or
sub
test
xor
or
dec
mov
inc
stos
orl
sub
jns
stos
or
sbb
dec
pop
dec
out
add
push
add
jae
lea
stc
roll
dec
cltd
cmp
sbbb
pop
adc
daa
and
xor
jae
jae
add
faddl
xchg
jae
and
xchg
xchg
cmp
outsl
mov
pop
addb
mov
pushf
dec
inc
outsb
das
fistps
stos
clc
fs
mov
scas
and
pusha
in
shrl
mov
sti
ss
sub
or
jp
imul
or
lahf
cmpsl
and
adc
xchg
mov
mov
jg
shlb
icebp
inc
sahf
imull
shlb
xor
adcb
jl
sub
mov
add
and
dec
inc
xchg
mov
push
inc
inc
scas
hlt
ljmp
ja
aad
push
clc
sub
sarl
test
cmpsl
jbe
push
cld
cmp
movsb
jnp
dec
mov
or
outsb
and
rcr
outsl
ficomps
insl
jg
lahf
std
inc
arpl
gs
js,pt
in
jbe
pop
push
mov
sub
mov
pop
push
lahf
rcl
mov
stos
in
in
clc
pop
jecxz
mov
daa
xchg
repnz
fdivrl
fnstcw
push
call
fwait
int3
jecxz
add
inc
add
or
or
jp
jnp
lcall
lcall
jns
xchg
pop
call
push
iret
adc
inc
inc
xorb
icebp
cmp
jecxz
out
call
addr16
pop
movsb
push
jge
cwtl
mov
mov
cmpsb
add
imul
push
cltd
mov
xchg
addr16
stc
lea
add
jbe
outsl
sbb
xchg
mov
outsb
push
pushf
inc
cld
xchg
and
push
sub
gs
dec
mov
add
mov
jecxz
inc
cmp
ja
inc
mov
lods
cmp
xor
jl
mov
jb
or
xchg
lods
mov
mov
ficoms
inc
add
jle
push
shlb
jecxz
mov
enter
fiadds
and
add
and
imulb
sbb
xchg
cmp
xchg
loop
es
scas
push
mov
push
std
imul
rcr
mov
lods
out
lret
xor
scas
and
xor
mov
cltd
jp
pop
push
mov
inc
sbb
scas
mov
xchg
sahf
jbe
je
call
test
cmpsl
or
or
int
jg
imul
bound
mov
popa
and
stos
aad
rcll
cmp
lcall
cmp
add
push
inc
loop
cs
jecxz
jecxz
dec
add
mov
inc
fcoml
daa
mov
rcll
inc
outsb
loop
shll
addb
lea
pop
hlt
aam
shll
stc
insb
dec
lock
mov
adc
xor
rcrb
ret
sbb
cmp
fmull
jbe
and
sub
push
cmp
test
out
ss
fwait
decb
mov
mov
loop
sbb
bound
ds
xor
dec
cld
mov
adc
stos
fists
inc
dec
inc
outsl
xor
xchg
push
sarb
adc
js
es
adcb
filds
insb
sar
mov
stc
test
xchg
out
les
hlt
inc
insb
pop
sbb
leave
jne
lret
scas
shl
repz
repnz
pop
mov
jge
mov
fcoml
cmp
loopne
mov
shlb
sub
inc
mov
sbb
hlt
inc
and
push
xor
outsl
xchg
dec
jne
lds
jmp
inc
fimuls
nop
jecxz
test
sbb
fisttpll
dec
jl
rep
out
mov
mov
fstp
into
pop
ljmp
dec
cltd
xor
or
imul
insl
or
out
push
das
test
dec
xor
and
cltd
rcrb
pop
testb
sub
mov
or
jle
loope
pop
out
dec
xlat
mov
scas
daa
lahf
into
xor
fidivl
add
ret
pop
add
mov
and
pop
sets
sbb
call
cs
dec
int3
pop
pop
and
inc
leave
add
inc
mov
push
nop
out
push
or
or
cmp
add
dec
hlt
mov
add
xchg
rcl
mov
in
jge
xchg
roll
dec
push
pop
outsb
cmpb
mov
out
xchg
adc
add
das
jbe
lahf
loopne
rcr
in
xlat
dec
sbb
neg
mov
jge
fcomip
jns
fnsave
stos
xor
outsb
sarl
mov
pop
cmp
and
and
leave
loope
lahf
ficomps
outsl
pop
addr16
add
pop
mov
push
jb
mov
pop
inc
jb
xorl
jp
mov
sbb
ret
cli
dec
and
pushf
jne
aad
aad
or
add
inc
mov
and
sahf
cmpb
add
mov
jns
int
mov
fimull
xor
pop
nop
aam
dec
mov
icebp
imul
lahf
push
dec
inc
sbb
add
and
fists
mov
mov
fidivs
inc
inc
jl
shrl
xor
es
cmpsb
imul
out
and
xor
sti
adc
push
ljmp
ret
or
jbe
imul
loop
inc
ss
adc
sub
aas
push
jp
mov
std
push
pop
repnz
ss
add
xlat
rorl
mov
orb
mov
inc
xchg
jmp
aad
pop
mov
sarb
cs
punpckhwd
xor
addl
mov
dec
add
push
or
das
fs
push
loop
inc
and
scas
add
push
ds
mov
gs
shll
inc
sbb
ror
mov
andl
lret
mov
mov
xlat
or
fsubrs
mov
sub
ljmp
int3
pop
pop
mov
int3
mov
mov
dec
cmp
jecxz
dec
das
sarl
adc
jo
not
adc
shrb
inc
and
or
cwtl
int3
movsb
or
cmp
es
and
data16
fidivs
imul
les
push
jl
push
xchg
xor
test
arpl
xor
push
stos
adc
jp
in
sbb
inc
adc
lcall
xchg
push
inc
out
jae
sbb
iret
out
imul
add
adc
les
scas
mov
lahf
cli
adc
jne
jle
fsubrl
and
or
in
lret
mov
cltd
jecxz
mov
adc
scas
int
adc
mov
mov
aaa
mov
sbb
sub
cmova
repz
pop
mov
testb
lds
popf
jl
ret
push
sbb
imul
in
mov
iret
outsl
sbb
lods
daa
jmp
mov
mov
cli
xor
call
mov
and
mov
imul
push
enter
dec
sub
in
jmp
dec
jnp
dec
pop
push
xlat
xchg
add
pusha
jns
out
adc
fdivs
out
adc
push
cmpsl
notl
sub
push
sbb
scas
mov
rcrb
mov
adc
ffree
out
leave
fcomp
imul
sbb
xchg
outsl
popa
mov
add
mov
repnz
cli
dec
or
loope
enter
leave
xchg
add
adc
pusha
pusha
cmp
push
mov
inc
mov
and
negl
inc
jns
sbb
pop
out
jp
fnstcw
dec
adc
enter
or
pop
popa
and
pushf
mov
mov
dec
sarl
inc
rcrb
inc
lock
ret
dec
out
into
insl
mov
insb
mov
pop
andl
shr
push
pop
inc
shrb
cmc
and
add
xchg
xchg
arpl
out
dec
xor
cltd
es
xchg
and
dec
in
scas
incb
dec
js
out
fs
xchg
dec
pusha
addl
stos
lods
pushf
xchg
cwtl
mov
sub
ret
jmp
adc
pushf
mov
ret
jo
push
shll
or
arpl
ja
dec
xchg
leave
mov
inc
shrl
in
xor
jbe
or
lea
jg
push
add
aad
shll
xor
mov
xor
ror
loopne
pop
cmp
repnz
popf
xlat
mov
pop
sbb
dec
push
xchg
out
xchg
sub
mov
test
stos
nop
cmp
int3
cmp
pop
jo
sub
sbb
inc
nop
mull
ja
inc
push
push
inc
scas
lcall
arpl
fldt
jnp
jecxz
pop
and
mov
mov
clc
movsb
xor
xchg
inc
es
inc
sub
jnp
stos
ds
lret
sub
jg
shrb
icebp
xor
mov
arpl
in
jb
cli
addr16
repz
pusha
mov
clc
lea
gs
or
add
aaa
push
cmp
lods
enter
xlat
cld
cmpb
insb
mov
lods
xchg
and
inc
and
testb
bound
add
mov
xor
add
dec
xchg
in
add
outsl
aas
mov
inc
shll
inc
pop
fs
pop
adc
inc
sub
sub
and
repnz
cmp
or
adc
aam
mov
and
xor
lods
jo
push
mov
jmp
out
mov
mov
cmpsl
jnp
or
cmp
pop
movsl
insb
ss
mov
mov
pop
sub
repz
jbe
lds
mov
push
and
mov
sub
xor
popa
push
adc
add
sahf
mov
cmp
out
mov
div
mov
mov
pop
dec
loope
addr16
std
add
sub
addr16
insl
lret
in
add
mov
loop
dec
push
nop
je
inc
icebp
loope
bound
call
jecxz
lea
pop
adc
leave
push
inc
pop
lea
adc
jge
lldt
out
add
fisttpll
sub
repz
xchg
fisubrs
jle
sub
into
xor
in
lcall
dec
daa
loopne
cmp
clc
mov
cmpsl
add
pop
movsb
mov
inc
out
pop
mov
add
mov
push
outsl
and
push
adc
dec
popf
add
and
ds
nop
jle
movq
stos
pushl
lods
adc
cmp
xchg
int
inc
les
inc
mov
ret
popf
push
in
arpl
out
and
mov
pop
add
xlat
loope
leave
push
mov
in
daa
sub
cmp
fistpl
int
push
fadd
shll
pop
push
stos
fcoml
arpl
iret
popa
dec
popa
push
iret
cmp
xorl
es
movsl
push
xor
lds
das
gs
push
pop
gs
mov
cmp
insb
cs
sti
dec
push
scas
cs
mov
imul
call
sub
mov
cmp
sbb
mov
xchg
xchg
es
mov
ret
cld
pop
mov
cwtl
mov
aaa
outsb
imul
push
add
arpl
into
std
fstpt
mov
inc
fsubrs
out
xchg
xor
cwtl
xchg
and
cwtl
push
pushf
mov
mov
pushf
add
in
cmp
les
dec
cs
aad
ss
aad
mov
loopne
lock
push
icebp
les
push
mov
and
xor
ja
pusha
xchg
dec
js
pop
insl
push
dec
loop
jp
cmpsl
mov
les
mov
int
bound
ret
dec
in
mov
rolb
jne
das
aaa
imulb
pop
mov
cmp
std
jbe
dec
add
add
ss
dec
and
mov
in
dec
enter
mov
or
std
push
mov
jb
xchg
fildl
insl
pop
outsb
fs
or
xchg
popf
jmp
dec
add
mov
xor
bound
sbb
cmpsb
mov
ljmp
nop
orb
in
test
test
jp
insb
js
jne
aam
insl
popa
enter
jecxz
mov
or
push
dec
js
or
addr16
int3
push
ljmp
cwtl
mov
push
jo
pop
mov
mov
sub
outsl
dec
paddusw
shl
in
push
lcall
pusha
enter
dec
pop
pextrw
cmp
mov
ja
sub
imul
jno
xlat
dec
xor
fwait
dec
or
mov
ret
clc
shr
jo
mov
mov
pop
push
enter
push
cmp
loopne
or
addr16
movsl
aas
adc
insb
pop
aas
outsl
aaa
mov
or
push
jecxz
leave
loopne
xor
dec
out
into
and
or
loopne
mov
hlt
cli
mov
ret
aad
or
mov
jecxz
insl
mov
push
fmuls
movsl
add
adc
mov
add
sub
out
and
push
divb
lcall
fwait
xchg
pushf
bound
cld
xchg
sti
cltd
cmpsb
sti
outsl
leave
adc
mov
xor
mov
scas
cli
dec
dec
sahf
je
sbb
sub
cmp
add
leave
insl
out
pop
push
push
lds
shrb
xchg
dec
mov
dec
es
or
outsb
addr16
xchg
jne
xchg
testb
jbe
jae
mov
cltd
mov
sub
pop
mov
pop
and
call
inc
inc
lods
negl
call
and
leave
fwait
pop
cmp
mov
gs
shl
jo
dec
jg
inc
lods
xchg
jo
xchg
pop
adc
out
dec
dec
lea
fidivrs
dec
stc
jl
mov
cmp
das
in
xchg
push
loop
pop
pop
add
lea
jp
cmpsb
mov
iret
pop
inc
pop
push
jo
pusha
js
xchg
adc
aaa
cmpsl
add
mov
mov
inc
lods
mov
sbb
inc
mov
pop
and
fs
mov
dec
fmull
jl
sbb
push
push
imul
push
adc
imul
cmp
and
shl
and
cmp
pop
dec
sub
stos
fmuls
push
call
rcrb
lods
fs
or
sub
ljmp
insl
sub
push
mov
jmp
out
inc
into
add
fxch
mov
loop
jne
adc
fistps
fimull
nop
inc
dec
pop
repz
xchg
add
nop
cld
mov
sub
add
decb
ja
xor
scas
into
scas
sbb
addr16
ljmp
adc
adc
icebp
mov
into
lock
push
es
jecxz
push
rorb
inc
daa
hlt
iret
add
ret
xor
pusha
and
push
mov
jno
popf
jmp
or
pop
xor
adc
or
and
aas
xor
in
jb
pop
fwait
repz
outsl
out
pop
jns
fs
ret
rcr
scas
aam
ret
test
fistps
pop
clc
xchg
pusha
jmp
aad
mov
sbb
mov
mov
ds
aam
adc
fsubp
lcall
lret
mov
imul
je
add
mov
inc
shl
clc
or
jb
out
pusha
repnz
inc
rolb
aaa
sub
shrl
sub
aas
cmp
mov
jecxz
pop
stc
or
or
pop
jae
adc
mov
add
out
in
add
frstor
mov
pop
daa
push
cmp
inc
mov
aam
mov
fwait
in
ret
cmp
enter
jne
fs
jl
inc
xorl
sbb
sub
mov
mov
mov
adc
sbb
jl
insb
ja
cmp
push
mov
loope
cmp
add
int3
jbe
lret
or
jg
fdivs
outsl
pop
cmp
mov
push
pushf
mov
pop
lds
ret
jns
sbb
inc
sahf
testl
nop
fs
ret
push
mov
mov
mov
notb
or
xchg
push
lock
xchg
mov
sbb
or
mov
cmp
jmp
out
cmc
roll
push
xchg
mov
and
xor
and
ss
sub
inc
xor
incb
es
ljmp
jb
gs
mov
stos
mov
or
xchg
add
jle
fsubrs
arpl
mov
fldln2
outsb
in
rcrl
bound
jno
sub
das
mov
int
sar
push
dec
bound
add
jns
push
mov
jno
xlat
sbb
sub
sarb
jns
dec
jno
cmp
shll
icebp
aas
leave
pop
movsl
xchg
popf
mov
mov
lods
and
hlt
cmp
lret
in
xor
stos
mov
lds
into
sbb
push
push
mov
ljmp
arpl
es
lret
outsb
and
in
push
adc
ljmp
inc
test
jecxz
fistps
into
xchg
add
and
fldcw
xor
in
aad
xor
xchg
ret
add
loop
int3
inc
ljmp
pop
inc
loopne
cli
movsb
pop
xor
in
or
out
inc
cmp
lds
mov
cmp
nop
movsb
sub
or
sbb
imul
stos
ret
pop
ljmpw
rcrl
in
mov
sub
or
pop
daa
out
fadds
pop
int
push
dec
je
adc
ljmp
popf
hlt
lock
or
aam
pusha
jno
std
sbb
loope
sub
add
sub
call
xor
inc
aas
jg
cltd
test
and
test
rclb
cmp
cmp
mov
mov
fincstp
out
xor
sub
enter
ret
loopne
inc
cli
ret
test
jne
cmpsl
mov
call
fisttpl
popf
sbb
ret
push
mov
mov
sub
test
mov
lds
sub
xchg
stos
and
mov
pop
cmc
divl
xchg
aas
pop
xor
jl
addb
loop
roll
xor
pop
mov
orl
push
mov
and
jl
decb
popf
addr16
rcll
shrb
aaa
cwtl
pop
xlat
sub
add
jnp
jp
fcoms
cmp
std
pcmpgtb
outsl
or
xchg
repnz
fnstsw
pop
loopne
fcomp
std
pop
iret
mov
adc
push
fsub
mov
pop
mov
popf
mov
cli
jbe
push
xchg
sub
adc
sub
outsl
xchg
adc
repnz
js
das
cmpb
iret
in
mov
inc
cmp
xchg
jecxz
stos
imul
lods
push
push
fstp
cmc
or
jle
fimuls
clc
jnp
cwtl
stc
xchg
loopne,pn
cmpb
push
inc
lret
sti
sbb
loope
cmp
test
xchg
sbbl
scas
nop
fcom
cltd
rcrl
mov
scas
ds
xor
and
lcall
pop
xchg
dec
fnstenv
fmull
jo
jmp
cmovs
pusha
jl
jno
sub
push
js
mov
sub
push
dec
push
ss
popf
loope
movsl
sbb
push
cmp
push
dec
push
out
cmp
sbb
dec
fidivrl
fcmovbe
iret
mov
inc
daa
xchg
sub
pop
popa
mov
je
mov
push
scas
cwtl
int3
outsl
jns
cmpsb
cmc
cwtl
xchg
and
jne,pt
fsub
fstpt
jbe
insl
cmp
mov
repz
jno
pop
sbb
adc
insl
xlat
cmp
xchg
int3
add
xor
divb
cmp
das
jp
sbb
popa
xchg
stos
cmp
sbb
cwtl
ja
mov
and
add
in
or
lcall
xchg
push
xor
cmp
mov
dec
nop
jno
out
ja
popa
es
inc
adc
mov
sahf
mov
insb
adcl
lcall
mov
push
outsl
insl
cmp
cli
andl
xor
push
add
xchg
hlt
and
jp
mov
dec
sub
mov
mov
push
sub
sbb
push
jns
movsb
and
xor
iret
adc
jecxz
stos
mov
js
int3
xor
rcrl
xchg
sbb
jmp
ljmp
or
arpl
shl
aam
out
lods
pop
sbb
scas
enter
adc
enter
mov
pushf
sti
es
ja
mov
add
and
mov
lods
in
fistl
test
dec
cmpsl
aad
outsl
bound
xchg
das
mov
add
mov
xchg
test
nop
jae
mov
lods
iret
and
sbb
xchg
and
pop
rclb
test
dec
mov
shll
pop
pop
sub
jb
mov
stos
inc
sub
or
in
jecxz
xchg
adc
pop
dec
mov
movsb
lcall
sub
shrl
stos
mov
mov
xchg
lea
ja
jbe
push
and
fistl
les
lret
int
rcrl
fucomi
outsb
push
movsb
scas
mov
pop
pop
int
and
jl
mov
add
cmp
adc
adc
mov
mov
popf
mov
cld
jbe
xchg
jmp
lahf
jp
imul
adc
fistl
push
in
mov
jp
mov
ljmp
mulb
sub
mov
enter
push
and
dec
mov
sti
push
sub
xorl
arpl
mov
fisttpl
test
dec
add
and
imul
pop
jecxz
mov
mov
sub
mov
adc
imul
lods
mov
loopne,pn
xor
loop
sbb
xchg
in
xor
call
jno
sbb
sbb
aas
pop
dec
and
int3
iret
jp
in
outsl
insb
add
dec
inc
jbe
or
xchg
ret
leave
mov
jmp
pop
jp
xchg
xchg
arpl
stc
mov
andl
xchg
sbb
scas
mov
fidivrs
mov
outsb
scas
and
cmc
push
pop
and
push
addr16
loope
xchg
mov
icebp
inc
outsb
cmc
mov
mov
test
movl
push
mov
rcrb
bnd
sub
xchg
sub
and
bound
pusha
dec
pop
jbe
jbe
ret
sahf
clc
pop
jecxz
aas
and
xchg
es
stc
and
jb
pop
mov
movsl
std
push
aad
or
adc
mov
mov
sbb
mov
mov
cmp
inc
dec
mov
lret
add
scas
hlt
fs
xorl
xor
dec
mov
fst
push
mov
xor
and
jns
nop
jns
in
mov
iret
xorb
mov
xchg
mov
test
lea
loope
add
xor
xchg
imul
sub
roll
xchg
in
push
movsl
rcl
test
jl
fisubrl
mov
jo
insl
xchg
stc
fimuls
adc
ffree
test
call
mov
test
outsl
mov
mov
and
jo
dec
rolb
cs
push
mov
insb
sbb
cwtl
mov
lret
das
push
loop
or
dec
dec
sub
dec
je
mov
push
cmpsl
movsb
mov
int3
fmuls
movsl
jmp
sbb
pop
rcr
mov
lds
std
xor
sarb
add
ds
icebp
pand
sahf
das
sub
je
loope
outsl
popf
jecxz
inc
rcll
cld
and
push
int
or
cmp
sbb
cmc
test
mov
js
sbb
mov
pop
and
push
push
int3
jo
pop
cwtl
and
add
test
lds
jle
jb
push
popf
pop
aas
sbb
inc
es
and
xor
xchg
add
cmp
inc
repnz
gs
xchg
in
and
aaa
aas
mov
imul
cmc
cmovle
dec
pusha
aam
or
loope
cmp
cmp
fcomip
out
cld
mov
mov
and
and
cmc
adc
cmpsl
dec
jne
test
jge
out
or
mov
and
call
push
out
stos
push
dec
add
mov
inc
leave
insb
adc
in
mov
push
ljmp
insb
push
popa
outsb
add
in
mov
pop
jns
jl
stos
or
test
xchg
mov
pop
ljmp
xchg
ss
mov
loopne
push
outsl
xchg
cmp
inc
ds
popf
loop
faddp
or
sarl
cs
lahf
jne
or
ret
out
mov
xchg
adc
xor
pop
ret
mov
sbb
xor
lea
cmp
je
nop
lahf
je
sbb
sub
or
push
pop
add
lods
mov
imul
fmuls
popf
xlat
cmpsl
lahf
mov
lods
mov
xchg
fnsave
or
jmp
inc
andl
xchg
clc
cmp
out
adc
and
sti
cmp
mov
mov
in
stos
cs
outsb
pop
loop
les
mov
pop
gs
nop
pop
fdivp
mov
add
sbb
and
dec
test
mov
pushf
pop
sbb
xchg
or
out
mov
push
in
insl
or
jnp
add
cmp
xchg
jp
pop
cmp
adc
stos
xlat
aam
xchg
rorb
imul
aas
add
inc
aas
aas
pushf
cmp
aad
and
pop
jge
add
arpl
mov
and
data16
js
pop
or
in
add
or
pop
hlt
leave
test
addr16
mov
fstp
jmp
in
mov
sbb
pop
xor
in
in
inc
rorl
out
repz
loop
fwait
inc
test
or
ljmp
shrb
fisubs
jb
cmp
in
mov
sbb
jnp
mov
sarb
movsl
or
sub
je
cmc
sbb
mov
add
pop
and
push
lahf
cmpsl
jnp
lea
ss
mov
jg
jnp
add
dec
inc
fstl
cmc
jecxz
lds
shr
cmp
adc
nop
mov
cltd
clc
outsb
jg
repnz
jle
fdivrl
dec
pandn
jns
cmp
mov
lods
xor
xchg
xchg
js
mov
mov
cmp
jmp
mov
cmpsb
fcoml
repz
or
ss
gs
dec
lahf
les
mov
popf
sbb
mov
cmp
sbb
loop
fistpl
shrl
sbb
sub
adc
sahf
neg
ljmp
movsb
imul
lret
test
pop
lret
mov
adc
adc
bound
cmp
fcomps
dec
mov
sub
lods
ret
jbe
push
xor
es
dec
leave
adc
ja
xor
mov
daa
jecxz
mov
insb
pop
dec
fists
daa
dec
sbb
inc
loop
imul
inc
outsl
jne
jecxz
mov
mov
mov
dec
aam
lods
and
mov
fcmovnbe
mov
das
jae
iret
imul
cmp
add
ds
in
fldenv
sbb
addr16
mov
pop
outsb
mov
les
xor
mov
and
icebp
test
cmp
adc
decb
sbb
xchg
outsl
shrl
in
cmpsl
mov
inc
adc
cmp
dec
pop
shlb
bound
pop
and
fcoms
jnp
mov
mov
pop
jbe
dec
je
divl
or
call
mov
cli
loop
jae
nop
jg
dec
mov
xor
test
mov
test
mov
add
sbb
pop
insl
cltd
inc
mov
into
or
je
sbb
clc
inc
movsl
lock
aad
sti
les
ret
out
bound
jge
into
rorl
sbb
inc
push
aam
adc
adc
mov
ss
xor
lret
xor
fnsave
sbb
cltd
mov
movswl
pop
ja
jns
mov
or
stc
or
cmpl
push
jle
sbb
pop
sub
fs
inc
inc
fidivrl
repz
mov
push
aad
cltd
lret
xor
dec
lods
test
xorb
cs
inc
inc
mov
dec
mov
mov
inc
inc
es
xor
push
into
loope
and
les
inc
dec
rcl
inc
aad
fisubs
mov
int
lock
pop
or
xchg
jp
shlb
aad
mov
out
xor
ret
int3
cmp
into
push
sbb
call
inc
add
mov
fsubl
sti
fsubrs
sbb
jae
or
loopne
pop
inc
rcll
mov
adc
loope
cmc
outsl
shrl
sbb
data16
js
push
test
jns
jp
sbb
lcall
add
mov
les
shll
mov
sbb
mov
add
xchg
clc
pop
fcmove
popa
pop
or
or
sub
sub
jl
xchg
push
ret
pushf
mov
dec
jecxz
loope
cmp
popf
test
outsb
sub
xlat
stos
push
fisttps
and
cmpsl
in
mov
adc
adc
movb
pop
aad
sbb
pop
fucomp
fmull
push
loopne
mov
sub
imul
sub
or
ljmp
cmp
rolb
ret
cmpsl
iret
inc
negl
and
push
rorl
inc
ja
pop
lock
dec
sub
push
sti
dec
dec
outsb
xor
jmp
shll
pop
inc
out
movsb
mov
pusha
dec
pop
sbb
xor
and
mov
ror
mov
inc
xchg
pop
or
mov
jb
sti
lods
shr
cmp
dec
je
inc
dec
lea
les
loopne
mov
xlat
jb
cltd
mov
lret
xchg
in
sbb
jg
cli
xchg
lcall
jb
sbb
insl
xor
pop
lock
jbe
shrl
or
rclb
jnp
sbb
sbb
cmp
mov
and
mov
lret
jle
inc
jne
dec
xchg
out
ja
pop
xchg
xor
push
or
jbe
lahf
cld
cmp
pop
in
daa
jecxz
outsl
lock
mov
lds
dec
mov
pusha
fs
test
dec
stos
ja
rclb
repnz
add
dec
lock
lods
cmp
add
sahf
xor
cmpsl
sub
xchg
add
dec
push
jbe
nop
sbb
add
dec
gs
push
mov
inc
lds
push
cmp
cmp
push
out
popf
aas
sub
xchg
in
lock
out
or
mov
lds
dec
dec
pop
mov
in
jb
leave
mov
inc
sbb
mov
inc
in
mov
sbb
cmp
enter
aas
shr
jae
sahf
and
xchg
cmc
out
shlb
and
imul
push
mov
jge
push
aaa
cmp
xchg
mov
add
ljmp
dec
push
stos
xchg
cmpsb
imul
call
repnz
mov
mov
sbb
xchg
mov
sarb
inc
mov
dec
pushf
in
addr16
fdivrs
xchg
push
in
inc
stos
mov
in
fnstenv
stos
sbb
rorb
repnz
ds
and
jo
cmp
into
fdivrs
repz
cmp
fdiv
mov
cmpsl
push
leave
xor
lret
pop
add
xor
test
dec
push
xchg
dec
add
lods
inc
cltd
inc
ds
stc
ja
rcrb
inc
sub
out
jmp
lahf
inc
imul
fdivs
mov
jmp
fcmove
leave
out
xchg
mov
pop
pop
add
jo
jno
popa
orl
enter
mov
push
mov
push
je
jb
rolb
pop
fs
and
jp
out
xor
xor
enter
clc
cmp
daa
inc
loope
jecxz
push
push
cmp
adc
jno
mov
insb
pop
adc
notl
in
loop
je
pop
sbb
xor
pop
lcall
lea
jne
int
mov
inc
mov
cmc
pop
pop
sub
pop
xor
dec
in
stos
cmpb
mov
cmp
pop
repz
fs
cs
stos
mov
call
jle
iret
sbb
cmp
inc
repnz
push
inc
pop
ja
and
sbb
jmp
stos
jg
pop
xchg
stos
push
stos
mov
ljmp
sbb
add
imul
push
popf
in
icebp
shrl
in
bound
jmp
jecxz
xchg
fmull
cmp
js
loop
dec
push
aad
cmpsl
jge
lock
decl
push
mov
xchg
ds
popf
aaa
or
push
cmp
adc
call
pushl
lock
outsb
imul
fwait
xor
ja
ficompl
cmp
insl
stc
leave
imul
cmp
mov
iret
test
hlt
fnstenv
fcmovbe
inc
imul
stos
push
inc
add
leave
xor
sbb
jno
fldenv
test
sub
lahf
mov
int
outsl
pusha
andb
pop
cltd
addb
jae
cld
arpl
and
push
int3
pop
lret
loopne
cmp
pop
xchg
xor
scas
loope
js
mov
cltd
in
shrb
mov
int3
sbb
gs
push
loopne
lret
inc
sbbb
div
cmp
jns
sub
shl
pop
pop
lcall
inc
test
xlat
sub
inc
test
aad
xchg
das
sahf
jecxz
cwtl
mov
mov
js
dec
mov
pusha
jp
pop
rorb
dec
xchg
and
adc
mov
mov
xor
cmp
jnp
fidivl
mov
and
push
and
in
mov
in
out
loop
adc
loop
test
mov
leave
nop
in
sbb
rolb
pop
and
loop
jg
and
imul
jne
push
lret
mov
pushf
dec
cltd
jle
insl
pop
xchg
out
movsl
cwtl
inc
les
loopne
cmc
dec
popa
dec
xchg
fidivl
int
or
mov
loopne
shr
pop
je
fists
jnp
outsl
push
ds
mov
imul
mov
mov
mov
dec
sbb
inc
subb
add
and
fisttpll
out
mov
andb
pushf
mov
cmpl
insl
lds
rcl
nop
pushf
sbb
sti
pop
pop
mov
popa
inc
xchg
jg
sahf
adc
mov
pop
and
stc
jns
out
test
daa
clc
or
sbb
mov
jl
xlat
adc
push
xchg
adc
sub
test
addr16
add
mov
out
jmp
and
mov
repz
test
inc
lret
add
lret
dec
mov
fwait
xor
lret
jp
sub
mov
inc
rol
nop
and
jo
test
stos
inc
pop
or
inc
push
stos
shrb
adc
mov
imul
mov
mov
jmp
sbb
dec
aam
fimull
mov
sub
xchg
adc
push
push
sbb
add
fbstp
push
sbb
mov
mov
ds
sub
lret
pop
das
inc
cltd
dec
xchg
stos
ret
mov
jg
or
push
xlat
inc
jns
icebp
cmp
xchg
mov
dec
and
les
cmp
and
jmp
test
js
insl
cld
loope
div
push
cwtl
movsb
je
xor
test
repz
jp
mov
sub
into
stos
xchg
jg
jo
je
lods
sbb
add
mov
or
mov
xchg
cmp
xchg
mov
enter
das
rcrl
sbb
jmp
ljmp
push
insl
enter
and
std
negb
dec
dec
inc
or
jg
mov
es
bnd
cmp
jg
lods
mov
nop
mov
xchg
xor
push
call
fimull
jecxz
push
je
dec
cs
test
loope
dec
xor
inc
adc
or
decb
shlb
mov
out
cli
mov
dec
in
pusha
orl
cwtl
ja
push
fdivr
cmpsb
fcmovnb
push
aam
mov
icebp
pop
scas
sub
jns
sbb
enter
jne
out
dec
out
push
les
fisubrs
jge
mov
sub
sub
lock
lods
negl
and
fnstsw
popa
adc
or
xchg
inc
and
push
jns
jbe
xchg
dec
addl
movsl
gs
mov
lods
sub
scas
dec
mov
cmc
mov
leave
out
inc
ret
cli
ficompl
mov
mov
cwtl
loope
pop
cmp
shll
push
xchg
add
sar
icebp
lcall
div
nop
cmp
sub
aaa
lret
mov
mov
dec
adc
enter
jns
mov
leave
idivl
test
in
mov
pop
test
in
fs
jns
cmp
movsb
or
adc
les
sar
cmpsb
jnp
xchg
mov
add
insl
sahf
pop
mov
test
dec
mov
and
daa
dec
mov
leave
sbb
fcoms
adc
push
divl
push
jle
jg
scas
insl
sub
and
jmp
fwait
sbb
cltd
addl
test
in
nop
dec
sti
fnstcw
sub
aam
add
scas
jbe
js
fwait
adc
insb
cmc
and
adc
sub
and
ret
jg
push
shlb
jl
fstps
or
outsl
dec
mov
xlat
jge
sbb
insb
bound
je
ss
into
insl
ficoms
inc
or
mov
out
out
popf
mov
out
jnp
sbb
pop
mov
sub
pop
pop
dec
aam
clc
push
sub
cwtl
jns
add
jg
fisttpl
fcomps
or
aam
test
shlb
sbb
sbb
cld
pop
add
cmpsb
ds
mov
lcall
or
inc
adc
adc
xchg
pusha
sarb
add
cmp
fdivl
dec
fsubr
cltd
rolb
mov
sub
lcall
xchg
and
inc
push
jp
cmpsb
mov
out
loopne
rol
loope
mov
inc
lods
fidivs
cwtl
sbb
movsl
daa
pop
push
mov
pop
js
ret
outsb
jg
pusha
add
xchg
or
xor
ds
jno
mov
std
push
jbe
test
mov
sbb
pusha
lahf
mov
mov
in
mov
js
dec
fisubl
add
outsl
jecxz
std
adc
fsubs
ss
dec
cmp
xor
xchg
jnp
clc
in
push
stos
pop
mov
clc
jnp
push
xchg
inc
cmp
movsl
jno
cmpsw
or
outsb
cmp
ja
scas
icebp
sub
xor
cs
aaa
cli
or
push
shlb
clc
sbb
into
aad
mov
dec
sti
ret
fimuls
sub
push
dec
into
fnstenv
fistps
jnp
mov
fmul
ds
shlb
or
outsl
lret
add
jns
sbb
mov
jbe
and
jae
lods
adc
data16
jo
jno
lds
hlt
pop
or
ror
push
cmp
pop
movsl
fdivrs
mov
push
jmp
dec
xor
add
mov
lret
pop
xchg
into
js
lret
add
cltd
xchg
push
jo
push
xchg
lret
sub
divb
mov
adc
into
mov
lahf
inc
icebp
in
je
sub
xchg
mov
cmp
push
in
cld
fmulp
repz
xchg
ret
push
cs
push
adc
or
fimull
add
sti
fistps
jo
dec
adcl
lahf
or
xchg
testb
shrl
ljmp
sbb
pop
imul
and
rcll
sahf
jnp
cmp
repz
outsb
lret
sub
shlb
or
jecxz
leave
insb
push
mov
in
add
mov
mov
mov
xor
jp
fsub
andl
in
imul
inc
push
repnz
aam
or
push
in
jl
jge
iret
inc
in
mov
fs
addr16
push
out
dec
shll
or
push
lea
sbb
insb
jae
jnp
cmp
insl
push
and
test
fstp
mov
mov
repnz
mov
testl
outsl
mov
mov
mov
mov
push
ja
fldl
in
lret
hlt
test
test
jge
lds
mov
inc
aas
test
movsb
outsl
mov
dec
out
push
add
mov
iret
mov
inc
jl
inc
pop
sbb
xchg
lock
jmp
aad
cmp
dec
ds
pop
and
mov
pop
sti
xor
cmp
cmp
pop
syscall
and
mov
push
aaa
stos
leave
test
mov
enter
mov
cmp
addl
std
xchg
or
cld
mov
sahf
cmc
inc
fcmovne
cmc
cmpsb
cmp
xchg
std
add
repnz
in
cmpsl
lods
lock
cmpsl
and
aam
jge
lds
sbb
in
insb
inc
mov
sub
rcl
lea
adc
sahf
outsl
jo
stos
sbb
fstp
push
shl
push
loope
std
nop
enter
and
push
test
mov
fst
cmpsb
mov
cmp
call
ret
adc
inc
sub
adc
xchg
lock
add
mov
adc
cmpsl
mov
in
mov
fisttps
cmpsl
pop
pop
fistpll
adc
push
mov
mov
pop
and
sub
dec
pushf
mov
adc
adc
mov
lea
mov
dec
in
mov
adc
shl
push
dec
ja
inc
std
mov
scas
push
into
jmp
pusha
cmc
push
xor
int
and
cmp
lcall
mov
xor
in
outsb
idivb
stos
aas
xchg
lret
sub
xor
add
mov
xchg
cmpb
sub
xor
and
or
les
ds
add
or
pop
shrb
mull
sub
push
pop
mov
jno
dec
aas
mov
fcomps
sbb
out
imul
inc
bound
sub
or
js
or
ret
and
mov
pop
add
push
push
sbb
aam
xor
rol
orl
sti
aad
mov
inc
adc
mov
popl
push
push
pop
cld
xor
jecxz
dec
jno
mov
cmp
mov
ljmp
rol
cld
xchg
cmp
jno
xor
je
aas
imul
mov
mov
mov
xor
inc
sar
push
jmp
xchg
fs
add
and
movsb
inc
xlat
pop
sub
ficomps
or
or
sbb
loope
in
stos
inc
jae
sbb
sub
lock
in
jecxz
dec
xchg
outsl
mov
test
jne
int
add
inc
adc
pop
xor
faddp
shrl
add
dec
cmc
out
aaa
in
sbb
test
scas
ja
clc
shlb
aam
add
dec
xor
mov
shrb
outsb
cli
icebp
adc
mov
loope
mov
test
or
shlb
xchg
jo
or
xor
or
xor
insb
adc
xchg
add
aad
jbe
dec
out
mov
sub
fcos
jg
aam
outsl
insb
jno
lods
mov
pop
repnz
push
cmp
popa
loope
shll
int
sbb
incb
xchg
sbb
sub
cmp
fbld
xor
cmpsb
mov
lods
mov
pop
test
scas
mov
test
and
ret
jge
sarb
push
sub
sbb
inc
add
inc
xor
mov
in
bound
add
push
loop
adc
xor
negb
addb
push
dec
xchg
mov
loopne
push
mov
add
out
sbb
push
scas
rcrb
ret
push
push
scas
xchg
jmp
popa
add
das
adc
enter
fdivs
xor
cmp
popf
stc
xor
or
ss
popf
outsb
das
ja
je
cmp
rolb
sub
subb
in
add
ljmp
stos
ja
jbe
cmc
loope
mov
jno
add
inc
sbb
add
test
insl
aad
fildl
inc
int3
or
push
xchg
and
in
es
pop
jne
popf
xor
mov
pusha
dec
call
pop
loop
mov
adc
sbb
mov
xchg
hlt
jg
dec
sti
clc
idivb
xchg
cs
jae
mov
lahf
cmpl
loopne
adc
sbb
mov
pushf
sar
fldl
xchg
out
repz
repnz
int
mov
movsb
shrl
push
pop
push
cmp
mov
lahf
int3
std
pop
dec
xchg
arpl
cmp
pushl
xchg
enter
enter
testl
js
xchg
pop
jb
in
cmp
ja
mov
push
hlt
inc
mov
ret
mov
rol
in
imul
sahf
adc
add
scas
outsl
lahf
add
inc
inc
jmp
adc
cmpsb
imul
xchg
mov
subb
push
push
mov
pop
les
popa
jle
add
push
enter
and
pop
mov
gs
repnz
xor
cli
lock
ja
mov
jbe
inc
lods
and
push
pushl
xchg
push
push
iret
cwtl
adc
pop
fisubrs
or
aad
int
leave
jge
leave
xchg
sbb
jl
jae
jl
inc
stc
data16
mov
mov
stos
push
movsl
divb
insb
mov
xor
test
sbb
pop
cmp
lods
icebp
inc
dec
add
xor
dec
inc
ss
fcom
xor
fistpll
outsb
popa
andb
or
cmc
imul
call
adc
mov
fimuls
or
cs
enter
pop
dec
add
xchg
or
stos
aad
mov
mov
mov
fs
dec
sub
outsl
push
dec
jg
loopne
xchg
in
icebp
out
mov
adc
add
ret
sbb
mov
mov
insb
jb
dec
xchg
insl
ljmp
and
jne
leave
jl
in
out
push
push
xor
mov
mov
xchg
into
aam
sub
push
pop
iret
jns
jo
cmpsb
shl
out
mov
mov
add
imul
ss
movsl
leave
sub
std
iret
jo
mov
in
in
xchg
cmp
add
loop
rcr
imul
mov
imul
loopne
xchg
mov
mov
mov
popa
add
push
push
cmp
xchg
and
pop
mov
xchg
inc
mov
xor
dec
add
enter
fs
fdivrp
fmull
clc
mov
loope
daa
out
jmp
outsb
fdivr
sbb
inc
lea
pop
enter
adc
mov
push
inc
and
mov
push
out
iret
stc
out
int3
adcb
cwtl
pop
sub
jle
dec
lret
mov
out
cltd
pushf
sbb
inc
pop
sahf
xchg
sub
push
push
sub
jnp
mov
inc
and
jp
movsb
popa
sbb
mov
mov
adc
jne
jg
add
or
pop
pop
cmpsl
cmp
idivl
xor
jecxz
inc
inc
push
or
mov
lahf
jecxz
neg
add
mov
dec
dec
test
dec
or
xchg
mov
je
mov
clc
outsb
hlt
lcall
inc
aaa
test
xchg
or
scas
xor
add
cmc
mov
adc
cs
mov
sbb
in
cmp
xchg
xchg
mov
jle
mov
in
cmp
sbb
cmp
mov
sbb
cmpsl
mov
jno
mov
dec
xlat
rol
push
cmpsl
jge
sub
xor
js
mov
popf
test
push
inc
repz
adc
inc
or
push
daa
push
xor
pop
push
and
out
jmp
add
jb
cmp
movb
scas
in
fwait
push
jmp
stos
mov
pop
es
adc
or
dec
ss
xchg
jae
movsb
jecxz
sbb
mov
mov
popf
sti
and
pop
dec
cmp
aad
orb
xchg
jp
pop
jnp
jle
sahf
insl
adc
ljmp
int
hlt
cltd
shr
push
aam
outsb
mov
add
out
test
popf
sbb
mov
in
test
pop
ror
testb
mov
and
das
lret
jge
iret
xchg
and
in
das
or
lock
ss
adc
mov
pop
dec
call
negl
sub
push
xchg
or
pop
inc
push
in
shlb
lock
fimull
mov
orb
fyl2xp1
mov
int
je
mov
arpl
xchg
sbb
roll
sbb
dec
add
mov
mov
mov
je
sub
pop
jbe
data16
push
imul
pop
pop
sbb
fistps
mov
push
in
shll
adc
decb
negb
and
push
pop
push
ret
dec
add
stos
nop
mov
je
scas
add
jmp
shl
pop
pop
in
cmp
cmpsl
mov
cs
push
inc
push
incl
mov
ds
jno
or
xor
pop
cmp
mov
ret
outsl
jp
rcr
stc
inc
add
sub
and
pop
rcll
iret
sbb
push
and
xor
mov
mov
mov
pop
pop
lods
pop
lcall
adc
stos
jl
fwait
call
mov
mov
jb
lock
cli
push
mov
pop
push
xchg
xor
enter
and
jl
loop
sbb
sbb
test
outsb
pop
stos
jno
aad
lds
jg
pop
ret
and
adc
push
mov
inc
gs
iretw
sti
inc
aaa
mov
jl
mov
test
dec
mov
mov
les
push
mov
mov
or
cmovbe
data16
push
fnstsw
bnd
and
and
arpl
push
cld
imul
xor
push
mov
sub
sbb
push
fldl
in
xchg
xchg
sbb
jmp
rol
jg
mov
sbb
xchg
mov
mov
xchg
bound
jo
push
cli
lahf
fsubrs
rclb
imul
sub
mov
sbb
xchg
scas
add
dec
sub
lods
lods
cmc
dec
cwtl
test
jo
inc
xchg
inc
imul
cmp
bound
inc
loopne
popa
ret
stos
sahf
adc
xor
xchg
cmc
mov
stos
mov
mov
ljmp
jno
mov
stc
mov
xchg
inc
pop
and
pop
and
and
add
andb
hlt
xchg
fcmovne
inc
mov
jl
dec
jnp
fisttpll
call
cmpsb
add
jo
add
out
cmp
xchg
mov
lret
push
jge
sbb
and
pop
xor
std
and
jnp
mov
int3
repnz
mov
divl
and
xor
fiadds
clc
pop
sarb
push
rcrb
lahf
mov
out
cmp
xchg
adc
ljmp
popa
dec
xchg
imul
sbb
call
pop
bound
sub
jmp
and
fldt
sub
repnz
cld
out
or
jg
repz
aaa
test
inc
shrb
adc
clc
cmp
push
sarb
or
in
push
dec
and
test
inc
jb
and
loop
push
jnp
jne
testb
pusha
xor
inc
adc
jno
mov
test
inc
mov
stc
outsl
sbb
xorl
lcall
dec
mov
cmp
mov
xchg
xor
inc
mov
xchg
sti
inc
out
popf
cmp
add
sub
mov
es
push
orb
sbb
jmp
xlat
cmp
loop
jne
dec
scas
add
into
cld
ret
sbb
std
inc
sub
popf
sub
sbb
fs
cmp
mov
outsb
insl
in
xchg
das
xlat
jecxz
push
repz
jecxz
aam
mov
fwait
movsl
test
dec
scas
inc
outsl
lret
mov
sub
push
loope
mov
xchg
clc
dec
repnz
cmp
repz
cmp
xchg
iret
jbe
sbb
or
jmp
dec
stos
das
stos
mov
aam
pop
test
movsl
jb
insl
mov
inc
dec
rcll
mov
mov
xor
sub
jecxz
daa
dec
lret
sub
pop
jo
fisttps
bnd
jp
xor
dec
mov
adcl
mov
mov
lahf
loopne
sbb
popf
mov
pop
and
inc
mov
scas
push
loop
shlb
repnz
movsb
nop
fnstenv
jb
jp
sahf
mov
mov
cwtl
sbb
lahf
cld
pusha
out
nop
pop
xchg
je
es
addr16
andl
sbb
into
add
inc
stos
repz
or
push
pmuludq
in
les
or
pop
sub
or
mov
pop
out
jle
mov
sbb
int
or
loopne
sub
das
mov
sbb
out
fidivs
inc
sbb
roll
enter
sti
dec
adc
sbb
loop
or
mov
fs
cmp
push
movsl
pop
mov
adc
das
enter
pop
js
xchg
push
mov
mov
sbb
enter
data16
mov
fwait
jle
inc
pop
sub
add
rcl
push
or
clc
cmp
pop
clc
lods
sbb
sbb
into
push
jge
mov
loop
insb
add
lea
gs
sbb
lret
sar
into
pop
and
jo
mov
jp
push
xchg
std
lret
dec
gs
das
shrb
or
inc
enter
sub
mov
mov
push
dec
cmpsb
sub
inc
xlat
sbb
dec
test
in
into
sahf
cmp
pop
xchg
out
fisttpl
sti
push
add
dec
jb
xchg
push
pop
pop
or
mov
lods
xor
mov
jne
xor
dec
daa
or
sub
or
adc
jns
inc
xchg
xchg
outsb
jnp
outsl
mov
sbb
push
jmp
out
mov
cli
inc
push
add
jg
mov
cmp
aas
pop
imul
scas
mov
test
dec
mov
push
imul
jnp
ss
imul
push
rcrl
cli
mov
ret
mov
jp
xchg
mov
push
dec
sbb
cmpsl
adc
decl
andb
stos
jae
and
repnz
add
mov
stos
mul
ja
loop
xor
jno
stos
ret
stc
adc
test
dec
es
push
xchg
cmp
sarl
push
sbb
subb
push
mov
or
xchg
add
cmp
into
sbb
or
mov
rcr
cmpsb
xor
and
and
sbb
inc
sbb
sub
test
push
xchg
inc
mov
loope
xchg
jle
sub
or
push
sbb
inc
pop
out
jl
frstor
dec
js
dec
in
mov
pop
arpl
lcall
or
xchg
in
xchg
mov
xchg
push
xor
scas
fbld
mov
and
push
cmp
sbb
loopne
repz
sub
pop
push
push
in
les
sarb
sub
stos
clc
pop
cmp
aam
push
push
cmp
in
sbb
push
in
sti
mov
cld
and
push
loope
jbe
xchg
xlat
ss
mov
popa
cmp
insb
data16
xchg
adc
jnp
or
push
lods
sub
inc
icebp
bound
fsubl
cmovo
stos
testb
fistl
aad
xor
jns
inc
leave
test
outsl
sbb
lods
out
in
dec
add
mov
add
push
pop
loope
adcl
sbb
fbld
lcall
aas
xor
pop
cmp
xchg
mov
sbb
mov
xor
aam
pop
pop
xchg
repz
and
setno
push
addr16
cltd
out
enter
aaa
pop
outsb
jg
fstpl
insb
out
fwait
and
cmp
stos
jge
fxch
add
cmp
mov
adc
fisubl
jl
mov
fmull
je
and
in
jmp
sar
mov
in
inc
fiaddl
sub
cmp
scas
insl
xchg
jg
lods
dec
pop
xor
test
fucomp
jnp
cwtl
cmp
shlb
fstps
xchg
push
ret
aad
mov
sahf
rcrl
clc
sbb
int
outsb
pop
rcl
rorb
pop
or
leave
out
ds
jecxz
inc
push
sahf
jo
add
adc
cli
push
push
fcomip
inc
mov
cmp
xchg
leave
scas
icebp
testl
mov
xchg
es
aad
jb
dec
inc
adc
push
repnz
push
in
push
scas
xchg
ficoml
pop
pop
push
mov
adc
mov
aam
xor
adc
mov
loopne
mov
pop
or
jecxz
sub
push
fnstsw
pop
repnz
test
mov
ror
cmpsl
mov
std
mov
push
addr16
scas
xor
sbb
stos
jge
mov
scas
pusha
xchg
sbb
xor
pop
push
mov
push
add
pushf
mov
dec
mov
jge
rcll
iret
inc
fiadds
fsubl
ds
inc
adc
test
in
jnp
push
add
sub
dec
xchg
fsubp
dec
lds
popf
or
xorb
adc
popa
push
scas
adc
jp
or
loope
leave
mull
cmp
jmp
inc
or
sbb
cmc
dec
inc
push
das
pop
sbb
movsb
daa
data16
adc
jb
cmpl
xor
xchg
pop
cli
je
out
and
dec
lock
scas
adc
jmp
cwtl
dec
cltd
scas
popf
and
mov
mov
mov
sub
std
jmp
or
fwait
jno
aam
fistpll
xor
imul
loop
cmp
mov
dec
cmpsl
arpl
aas
inc
jno
mov
in
adc
dec
aaa
xor
sub
fnstenv
sbb
jle
lods
repz
mov
xlat
inc
fmull
test
insb
sti
pop
test
cmp
sbb
jl
xor
push
dec
add
jecxz
pop
pop
ja
xor
pop
out
fistps
sbb
out
mov
pushf
out
inc
int
add
out
nop
adc
jbe
out
daa
cmpsb
push
xor
adc
xor
lcall
test
int
jge
data16
rorb
push
daa
repz
sbb
inc
data16
outsl
add
enter
xor
leave
inc
push
and
dec
fsubs
and
dec
icebp
std
mov
pop
mull
dec
dec
fisttpll
pop
imul
imul
in
inc
mov
mov
cmp
mov
std
and
and
mov
sbb
and
in
jno
stc
add
daa
push
jmp
pop
into
mov
inc
enter
movsl
push
or
inc
sub
popa
or
sbb
jnp
lods
pop
add
call
push
lods
fisttpll
scas
repnz
into
and
bound
aaa
out
push
test
loop
xchg
inc
rorl
mov
int3
sub
cmp
int
pop
pushf
ret
ret
repnz
out
dec
xor
fabs
add
test
pop
in
mov
inc
jl
push
loop
iret
pop
js
xor
in
and
addr16
sub
dec
aas
xchg
ja
scas
sarl
ss
out
xor
fnstcw
xor
and
sbb
enter
dec
lcall
mov
mov
imul
sbb
out
aad
shlb
push
inc
shrl
lods
cmp
lds
and
jbe
movsb
fstps
jbe
data16
inc
std
icebp
adc
aaa
inc
xchg
push
iret
mov
cmpsl
test
pop
push
dec
bound
imul
or
push
roll
ret
sub
inc
repnz
stc
cld
sbb
fidivrl
andl
pusha
inc
cmc
add
popa
xchg
dec
mov
xchg
dec
mov
ljmp
dec
pop
push
out
jmp
push
dec
jle
jle
pop
cmp
xor
mov
and
scas
test
sbb
inc
add
into
cmp
mov
cmp
pop
lods
mov
sub
clc
neg
sbb
pop
add
dec
nop
jmp
dec
sub
inc
cmp
xchg
popf
cmp
sub
aas
inc
xor
jmp
jl
inc
and
jae
jecxz
loope
or
xor
jge
mov
xchg
inc
es
dec
aaa
xchg
sub
cld
pushf
jns
adc
and
sbb
bound
outsb
sbb
aam
fwait
jg
cmp
push
mov
js
enter
stos
mov
ret
mov
pop
dec
mov
jno,pn
sbb
and
cmc
sbb
pop
fldenv
jle
not
insl
adc
mov
push
pop
fidivrl
data16
js
ror
mov
xchg
fldl
lea
into
pop
lock
in
cmp
dec
jno
out
or
enter
ja
fnstsw
push
pop
lcall
push
adc
pop
stc
popa
ljmp
cli
pop
mov
mov
or
sbb
cmp
fmull
xchg
aaa
fldenv
mov
cld
pop
xor
lock
or
push
dec
and
data16
jb
adc
sti
jp
mov
icebp
sahf
cwtl
cmp
out
pop
mov
dec
in
jmp
xor
int
repz
je
pusha
sub
cmpsl
mov
das
orl
mov
hlt
js
negl
push
popa
ret
jmp
fwait
cmpsb
or
and
push
rcr
cs
fisttpl
fmuls
xor
repnz
add
int
call
out
loop
xchg
rclb
jo
shll
mov
lock
mov
test
sub
test
push
popf
movhlps
jnp
mov
rcl
mov
pop
inc
enter
sub
loopne
sbb
or
fnstcw
add
adc
mov
inc
jb
add
mov
cwtl
sti
les
cmpsb
dec
fs
repnz
jne
mov
lock
add
xor
outsb
pop
cwtl
jmp
cmp
mov
or
mov
insl
fsubrs
xor
ret
test
push
movsb
insl
xor
inc
je
js
add
leave
sub
iret
pop
push
mov
cwtl
jp
popf
lahf
aam
jle
popa
loopne
xor
ss
out
clc
jbe
in
aaa
dec
es
test
in
cmp
inc
and
inc
in
pop
testl
es
icebp
ljmp
jmp
shll
push
ret
push
push
adc
js
xchg
pop
sbb
shll
adc
pop
adc
stos
pop
mov
fisubs
pop
push
inc
xchg
jae
pop
les
mov
cmp
or
inc
cmp
and
mov
lods
aas
roll
cld
in
and
lods
scas
lret
lret
dec
xor
sbb
mov
bound
mov
pop
cmp
sub
pop
out
mov
mov
mov
jo
inc
imul
jp
cs
imul
addl
test
mov
dec
xchg
add
in
push
mov
movsl
int3
mov
sahf
or
je
stos
je
xchg
jecxz
xchg
lcall
rcr
cld
lea
mov
inc
cmp
std
movb
mov
mov
jmp
int
lods
aad
cmpsb
sub
xor
pusha
push
pusha
jg
ret
roll
push
scas
movd
fldenv
ret
dec
mov
enter
mov
push
inc
or
movsb
out
addr16
mov
pop
adc
push
adc
js
mov
ljmp
xor
push
cmpsb
mov
and
cs
scas
jge
fdivs
sarb
pusha
push
fnsave
imul
daa
imul
cwtl
mov
lret
mov
push
test
jmp
sbb
pop
mov
and
sarb
xor
push
fnstsw
sub
jge
cmp
ret
inc
je
out
xchg
rcrb
cmp
std
dec
mov
rep
mov
pop
mov
stc
imul
movsl
pop
mull
in
adc
dec
dec
int3
movsb
push
ret
cmp
pop
mov
pop
les
shll
cmpsl
in
icebp
and
jne
mov
sub
and
jmp
push
dec
cmpsl
add
fistpll
sbb
fnsave
lods
orb
jle
pop
out
push
out
adc
inc
pushf
and
cli
pop
mov
pop
cmp
ja
lods
cmpsl
lret
xchg
aas
les
cmp
jb
push
loope
shlb
aam
mov
jb
je
out
pop
push
xchg
fsubrs
xor
adc
sahf
sti
ds
aad
lea
push
test
ljmp
mov
sarb
cmc
cmp
xchg
sarl
insl
jb
jle
mov
xchg
fsubrp
daa
push
jecxz
in
lcall
mov
xchg
std
jl
insb
hlt
leave
scas
mov
lret
jb
aad
pop
or
test
sbb
scas
push
mov
orl
data16
xor
mov
xchg
vpunpckhdq
inc
adc
mov
std
dec
aam
test
dec
imul
add
inc
mov
cltd
jecxz
cmpsb
loopne
pop
ja
mov
lret
mov
jbe
push
enter
js
sbbb
lods
adc
xor
push
fidivrs
inc
adc
test
popaw
and
fisubrs
adc
lret
sub
mov
repnz
push
ljmp
or
sub
inc
es
adc
fisttpll
jne
jecxz
mov
xor
adc
das
mov
push
cs
add
dec
mov
mov
jg
inc
out
jnp
icebp
stos
mov
sbb
jle
cmc
sub
pop
sahf
jmp
cltd
push
jns
mov
inc
fisubl
das
dec
or
add
fisttpll
insl
sub
xor
loopne
jmp
aam
popf
in
or
or
fdivl
cmp
mov
pop
lcall
add
ja
sti
std
cwtl
fwait
ret
loopne
push
push
lret
adc
scas
mov
ljmp
xor
sub
fadds
rorb
cld
pop
out
mov
cmpsb
cli
jno
push
adc
sbb
sbb
sti
out
cwtl
popl
movsb
or
mov
jbe
xchg
cmc
movsl
adcb
mov
jns
add
aad
outsb
cwtl
stos
iret
movsb
sbb
sbb
inc
xchg
mov
call
sub
mov
or
cmp
push
loop
and
in
aad
add
lods
ss
outsl
sub
push
dec
std
inc
cmp
mov
cmpb
sti
inc
xchg
sbb
xor
sbb
mov
cmp
rcll
cli
leave
sbb
je
or
pop
ja
out
push
outsb
inc
in
cmp
ja
add
xchg
and
jge
cmp
nop
add
push
loopne
cs
sti
es
aaa
add
push
dec
mov
mov
fucom
not
fwait
lds
pop
cmc
clc
test
ds
lret
out
add
jo
pushf
cmp
fistps
out
xchg
cltd
xor
and
xchg
inc
sub
sbb
cmp
push
mov
xor
dec
cmp
es
xchg
iret
sbb
cmp
xor
xor
inc
mov
lock
cld
dec
ds
pop
xchg
mov
mov
leave
rorb
jmp
stos
adc
push
and
out
xor
jmp
je,pt
push
mov
out
cmp
mov
pusha
mov
and
insl
lea
stc
add
sub
dec
out
inc
arpl
into
push
jae
push
adc
mov
out
mov
and
ret
int3
xor
ss
rcl
mov
inc
pushf
int3
sub
cmpsb
nop
push
or
jge
fsubrl
fldenv
mov
shrl
cli
mov
test
cwtl
mov
out
rcr
repz
cmp
cli
mov
lea
push
sti
ror
shrl
ds
daa
negl
pop
fadd
mov
or
clc
mov
aam
xlat
sbbb
movsb
dec
xorl
mov
mov
xchg
sbb
and
je
xchg
xchg
adc
and
outsb
int3
inc
adc
leave
je
ljmp
stc
pop
or
lods
mov
xor
out
mov
pop
push
jae
push
mov
push
aam
jne
xchg
jno
sar
cmc
scas
leave
outsl
pop
adc
lret
or
ss
sub
test
add
xorb
sub
mov
mov
inc
jbe
nop
push
jae
test
pop
cmp
ljmp
sub
movsl
xor
jp
fucomp
pop
dec
stc
rclb
mov
mov
popf
outsl
pop
pushf
sahf
sbb
sbb
pushf
pop
ja
fsubs
in
and
lock
jl
cmp
push
fisttpll
jns
sub
pop
or
cmp
mov
dec
pop
les
movsb
push
add
das
mov
push
test
pushf
dec
stc
or
xchg
and
std
mov
outsb
inc
and
rolb
iret
sbb
cli
jecxz
cld
pop
cmp
pop
adcb
cmp
arpl
pop
jge
add
mov
inc
out
lea
fsub
cmp
fildll
loopne
stc
mov
pop
in
lahf
insb
pop
push
addr16
popf
stos
xchg
adc
add
lret
inc
sbb
jb
lds
jb
add
pop
arpl
mov
mov
jecxz
mov
fldcw
jnp
movsl
mov
jbe
cmp
stos
movsl
xlat
mov
push
out
mov
iret
dec
xlat
je
es
pushl
pop
popa
popl
sbb
xor
add
fisubl
fldcw
dec
jmp
cmp
xor
jmp
xchg
jo
push
movsl
jns
cmp
xchg
rol
int
inc
or
mov
adc
pusha
in
or
lds
inc
testl
push
fildll
out
fildl
es
fisubl
dec
rorb
add
aad
jb
std
rcrb
fucomi
sbb
enter
and
stos
cmpl
lock
out
lods
pusha
cmp
mov
jbe
sbb
clc
es
shll
xchg
xchg
inc
cmp
scas
pop
xchg
stos
pop
insb
popf
dec
emms
faddl
xor
daa
insb
lret
movl
add
jge
cmp
dec
push
mov
jnp
pushf
shlb
sbb
xchg
das
sahf
inc
push
jle
dec
xchg
inc
lret
aaa
inc
mov
xor
enter
cwtl
shl
cmc
jns
test
cld
push
mov
jp
push
inc
rolb
mov
mov
cmp
int
xchg
or
ljmp
and
out
mov
sarb
imul
inc
movsb
inc
lcall
dec
push
lea
ret
jl
rol
cwtl
sub
fsts
add
xchg
out
pop
xchg
and
cmp
add
cs
inc
add
xchg
xor
xor
fnstenv
movsl
pusha
mov
mov
add
adc
das
lahf
rcrl
sub
clc
repz
pop
or
addr16
xchg
shr
loope
jecxz
std
insb
cwtl
cmpb
jae
hlt
cld
pop
cmc
mov
cli
and
call
fldl
scas
mov
bound
imul
dec
int3
repz
xor
sub
mov
inc
add
mov
ss
cmp
lock
push
or
inc
push
lods
mov
shl
insl
stc
ret
or
inc
cmp
enter
stos
or
sub
jmp
jp
push
inc
arpl
mov
sahf
add
clc
dec
in
inc
pop
out
fldcw
mov
loopne
cmc
and
fistpl
lcall
outsb
call
mov
repnz
push
inc
cmp
dec
xchg
outsb
cmp
push
fs
push
aam
fiaddl
inc
sub
stc
cmc
cmpl
mov
add
sub
and
jge
mov
cmp
inc
pushf
xchg
addr16
out
pop
adc
sbb
push
inc
mov
sbb
pushf
popf
add
icebp
stos
repnz
xchg
mov
vmwrite
and
cs
scas
push
bound
mov
ret
imul
iret
xor
adc
movsb
aaa
or
push
push
push
mov
pop
and
mov
cmpsl
test
and
mov
mov
xchg
sbb
xor
add
jns
dec
insb
fwait
aad
hlt
jg
enter
enter
dec
int
sub
jae
enter
test
stos
ljmp
lret
rolb
add
cmpb
xchg
cmpsl
cs
inc
fwait
arpl
cli
iret
xchg
pop
fisubrs
bound
inc
and
or
mov
sbb
xchg
mov
jg
lea
lods
sub
loope
test
clc
stos
xorl
push
fsub
loop
lods
and
push
movsl
aam
in
fidivrl
out
leave
fsts
jle
mov
enter
xchg
push
ss
and
push
mov
sub
jle
or
dec
pop
push
xlat
push
xor
push
shlb
das
fsubl
push
int
ror
xorl
and
nop
hlt
pop
call
cmpsl
xchg
out
cli
add
stos
and
sbb
cmpsb
out
jne
scas
add
push
and
mov
in
push
xchg
mov
or
jge
clc
mov
leave
mov
in
loopne
adc
lea
push
dec
xlat
into
jmp
lds
dec
outsl
mov
ljmp
out
xor
sub
mov
xchg
mov
pop
dec
aaa
in
stos
pop
inc
out
add
push
rolb
push
mov
lea
add
inc
aaa
mov
sbb
data16
mov
test
add
mov
sub
cmpsb
mov
sbb
les
rorl
xchg
cmpsb
shlb
jge
push
outsl
aas
fst
sbb
mov
rcl
mov
sub
loopne
push
popf
iret
or
lret
jno
adc
stos
lods
pop
add
fistpll
movsb
push
pop
inc
inc
call
push
enter
scas
dec
notl
test
xchg
lods
leave
stos
std
mov
ret
es
nop
sbb
and
pop
fdivr
cmc
mov
sti
add
stc
dec
loop
outsb
sbb
ja
repz
orl
adc
pop
sbb
loope
je
sbb
inc
dec
lcall
cmp
xor
cwtl
jge
jecxz
adc
stos
jnp
mov
inc
and
mov
push
sub
add
stos
xchg
addr16
adc
mov
pop
adc
test
lock
xor
or
mov
ds
int3
pushf
sbb
add
addr16
jne
inc
stos
push
data16
pushf
cmp
aad
jns
insl
mov
dec
or
sti
dec
jl
popf
cmc
out
sahf
test
xor
mov
out
jo
cmpxchg
cmp
sar
aam
ja
push
pop
outsb
jp
pop
dec
sbb
vmovhlps
jecxz
cs
sbb
dec
lods
in
fidivl
xlat
adc
lahf
or
dec
rcrl
dec
test
inc
call
ja
add
cmp
movups
sbb
xchg
adc
clc
mov
push
insb
outsl
loope
sarl
mov
popa
xor
and
fstl
and
lret
imul
fsubl
inc
mov
lret
mov
mov
xchg
inc
loopne
movsb
or
pop
cmp
nop
xor
inc
cli
add
fnstenv
mov
push
shll
fdivl
jmp
fnsave
mov
sub
sub
mov
sti
ficoms
sub
je
lret
and
pop
jmp
jnp
out
in
in
push
test
popa
xor
mov
pop
pop
dec
cmpb
xlat
std
loopne
test
mov
mov
pop
adc
sbb
addl
cmc
test
int
jae
cmp
push
clc
or
dec
sbbb
in
sub
xor
jb
cltd
sbb
dec
mov
sti
mov
jle
rorl
sub
nop
outsb
hlt
cmpsb
sti
add
out
repnz
xor
jp
out
and
stc
push
mov
pop
in
mov
adc
xor
daa
xor
xchg
mov
popa
push
std
push
mov
lea
std
mov
mov
xchg
jns
xor
mov
jbe
stc
shlb
test
sahf
insb
sbb
cmp
cmp
popa
inc
push
pop
rcrl
out
pop
xchg
and
jnp
in
scas
jecxz
mov
movsb
cmp
out
sti
ret
arpl
add
popf
jns
outsl
das
mov
push
sub
scas
xor
xchg
xor
sbb
mov
js
cmp
mov
lods
xchg
sub
cli
mov
fs
inc
ds
dec
inc
push
sub
mov
push
popa
sahf
cmp
dec
cs
sub
cmpsl
movsl
xor
sub
xchg
or
ja
mov
fldcw
sub
out
mov
mov
lcall
xchg
div
test
lret
xor
xlat
mov
xor
rcrl
and
adc
negl
add
cmp
sub
and
add
loope
push
xor
push
imul
or
mov
lods
mov
btc
aam
insb
add
andl
and
cmp
ss
enter
mov
scas
sub
je
shlb
dec
push
inc
mov
push
int
jecxz
xchg
cld
repnz
jbe
fneni(8087
jnp
sub
pop
push
cmp
scas
push
pop
imul
and
cld
mov
dec
mov
imul
push
or
fnstsw
call
shll
sub
fs
out
cmp
in
jp
dec
mov
xchg
imul
lret
push
mov
push
daa
xchg
in
insb
hlt
jmp
fbld
add
test
pop
xchg
push
pusha
mov
cmp
cmp
cmp
data16
cmp
pushf
ret
sbb
mov
stc
hlt
ljmp
pop
mov
sbb
dec
rcr
jmp
xor
jge
xchg
mov
arpl
sti
aam
xchg
jl
into
pop
stos
adc
daa
scas
xchg
clc
imul
xchg
mov
sti
jb
mov
cltd
jae
test
push
cld
jne
push
outsl
in
fnstenv
pop
dec
jno
mov
mov
aas
sub
mov
pop
call
pop
out
test
js
bound
mov
loop
lcall
cltd
push
addl
aad
or
push
sbb
aaa
push
popf
inc
sbbb
loopne
ja
xchg
mov
sub
mov
jmp
aam
cmp
test
cmpl
and
xor
mulb
xchg
add
adc
daa
fstl
sbb
mov
shrl
je
xlat
adc
insb
movsl
and
lret
das
in
or
insl
mov
ret
shll
roll
cmp
sub
mov
pop
xchg
fiaddl
outsl
pop
sub
out
mov
mov
das
test
sub
lods
mov
mov
es
jnp
iret
inc
cld
andl
push
mov
in
lret
pop
es
ret
sbb
fbld
push
inc
or
add
bound
add
pop
push
dec
sbb
insb
mov
adc
xor
pusha
imul
xchg
loope
aam
sbb
out
in
xchg
mov
mov
aam
cmp
test
push
or
inc
fstl
fdivl
cltd
movsl
cmc
sbb
leave
in
jmp
pop
fcomps
in
lcall
jb
push
adc
mov
pop
test
addr16
lahf
mov
cmpsb
sbb
pop
push
mov
insl
cs
or
fisubrs
mov
lahf
std
adcl
lds
lret
add
imul
jmp
cmp
sub
jns
test
imul
jns
adc
and
loop
pop
mov
dec
lds
mov
xchg
sbb
jle
cmp
xor
inc
frstor
pop
dec
iret
loopne
adc
stos
jp
test
enter
loop
pop
or
push
stos
test
loope
xor
push
and
mov
mulb
das
jmp
stc
mov
fidivl
mov
addl
sub
gs
xor
inc
insb
lret
cs
jno
jp
cwtl
xor
js
mov
jne
jecxz
jnp
in
ss
movb
fsts
cmp
mov
test
dec
je
inc
jo
mov
or
out
mov
cmp
ror
mov
add
in
adc
test
stos
cld
fnstenv
push
jns
popf
push
xor
sub
sub
rcrl
mov
sbb
lret
fisubrl
mov
lahf
mov
adc
push
cmpsl
push
cmpsb
subl
jae
addl
pop
out
adc
rcrb
in
ljmp
adc
push
push
in
push
push
and
mov
rclb
mov
sbb
lcall
sbb
cmp
int3
mov
mov
jge
sub
xlat
call
inc
add
call
pop
mov
idivl
pop
add
leave
push
push
cmp
xchg
pop
lcall
add
pop
ss
cmp
lea
mov
jne
cmp
ret
xchg
in
fstpl
mov
dec
leave
faddl
ss
leave
cmp
lds
inc
inc
xor
out
jp
dec
decl
and
ljmp
jle
rcll
cmp
enter
repnz
lock
xchg
xchg
mov
inc
rcrb
leave
push
jmp
sub
dec
dec
mov
insb
xor
mov
mov
cmpsb
inc
inc
mov
fsub
shr
pop
push
xchg
int3
xor
mov
lea
aaa
and
cmpsb
push
test
repz
or
mov
repz
adc
cltd
jb
xchg
addr16
pop
fstpl
or
adc
jo
inc
add
aaa
push
pop
clc
xor
ds
test
add
lret
mov
cmp
push
and
push
rorl
imul
dec
xor
and
out
aas
mov
cmp
inc
mov
or
mov
jecxz
jbe
enter
repnz
fs
fsts
les
sbb
mov
jbe
pop
push
xchg
push
dec
inc
movsl
outsl
fsubs
xor
sahf
lock
movsl
into
andl
dec
scas
aas
adc
mov
jle
rclb
fisubl
shlb
jae
dec
jecxz
loop
lea
sbb
and
loope
insl
repz
jbe
sahf
pop
inc
jne
mov
sub
push
mov
mov
fidivrs
cmp
in
lea
scas
xchg
sahf
dec
mov
xchg
in
and
pushf
test
fxch
mov
outsl
mov
repnz
loopne
dec
mov
mov
repnz
mov
sub
or
inc
js
addr16
pop
mov
sbb
push
clc
iret
cwtl
clc
sub
xlat
gs
or
icebp
imul
int3
clc
xchg
lcall
ljmp
cmc
jge
or
daa
lahf
fwait
pushf
cmp
pushf
push
bound
mov
mov
lods
pushf
fidivs
push
cli
sbb
outsb
iret
pop
imulb
or
jg
xor
xor
mov
aaa
add
leave
rcll
sahf
loope
and
in
dec
push
dec
addb
fs
pop
inc
cs
lods
mov
inc
jne
fnstenv
mov
mov
push
dec
xchg
ret
aad
push
dec
insb
aam
sub
lds
andb
adc
add
popl
lahf
xchg
cmp
enter
add
out
push
lock
dec
fsubs
scas
pop
mov
jge
xchg
in
pop
data16
cmpsl
fnstenv
insb
adcb
push
xchg
or
adc
insl
out
fadd
pop
xchg
fcomi
lea
inc
je
imul
je
pop
xchg
js
or
mov
pop
outsl
jnp
fbstp
jl
aas
ja
mov
adc
shlb
cltd
call
xlat
xchg
jmp
inc
imul
adc
dec
ss
enter
jecxz
pop
push
adc
cmc
sub
pop
insb
push
and
push
adc
stc
xchg
inc
push
mov
test
cs
les
in
add
lock
sbb
orl
das
adc
inc
mov
out
cs
scas
insb
mov
sahf
mov
push
mov
imul
cld
fs
jns
sahf
test
sbb
les
sub
jo
dec
faddp
repz
jo
add
or
movsb
sbbl
push
lea
mov
pop
mov
idiv
fmul
jbe
test
push
dec
ja
insb
insl
mov
adc
popa
bound
pop
mov
loope
pop
xlat
xor
jl
js
mov
inc
out
ja
loop
mov
lret
xchg
rol
push
loopne
jp
mov
shrl
sub
lock
cmp
adc
enter
push
sub
repnz
rclb
movsb
in
rcrb
repz
adc
push
sti
in
mov
out
mov
mov
shlb
je
pop
loope
loop
sarb
outsl
sub
dec
xorb
sub
shr
jecxz
jns
or
movsl
lods
frstor
fdivl
mov
mov
mov
dec
cs
aaa
dec
jmp
push
mov
comiss
add
dec
repz
inc
xchg
adc
ds
mov
ret
rcl
pop
sbb
loop
ljmp
jno
push
mov
and
jle
or
inc
add
leave
cli
ds
jne
in
aas
add
jecxz
sarw
cmpsb
cmpsl
in
mov
push
lret
xchg
shll
xor
fdivp
cld
mov
iret
bswap
pop
push
sub
mov
test
xlat
sbb
clc
das
in
ja
xlat
lods
addr16
fdivs
outsl
and
ja
xchg
fdiv
adc
mov
jno
mov
jge
jne
mov
xchg
jne
and
adc
inc
jae
dec
js
ud2
in
scas
sub
inc
insl
pop
scas
mov
lea
push
fs
mov
js
mov
pushf
aam
enter
jg
and
inc
xchg
sub
das
jo
mov
dec
je
scas
dec
stos
sbb
nop
testl
mov
ret
adc
adc
xor
inc
mov
test
dec
ss
mov
mov
xor
loop
ss
push
mov
mov
xchg
dec
jo
adc
test
or
imul
and
push
mov
je
xchg
push
cmp
xor
jmp
sarb
adc
or
fsincos
out
and
dec
inc
dec
xor
xlat
jb
cmp
inc
das
mov
mov
cli
ss
dec
sbb
movsl
push
movsl
or
sub
test
mov
int
mov
imul
sar
notl
inc
in
je
push
sub
xorb
mov
and
xlat
sub
int3
adc
mov
inc
xor
jmp
cmpsl
cmp
into
or
call
adcb
add
push
cmp
add
sti
stos
js
mov
fs
push
nop
sbb
lea
add
stc
mov
repnz
push
mov
jo
jl
xlat
xchg
mov
mov
adc
es
and
jbe
insb
adc
insb
mov
lret
es
mov
fnsave
xchg
call
pop
xchg
inc
movsl
sahf
add
push
cltd
bound
outsl
cwtl
pushf
mov
ja
out
popa
cmpsl
rcrl
xchg
mov
movsb
xchg
mov
jmp
stc
sbb
in
cmp
mov
repnz
sub
xchg
mov
push
dec
xor
pop
test
sbb
or
xchg
stc
mov
scas
insb
ret
les
lcall
and
dec
popf
enter
jecxz
cltd
out
cmc
adc
or
mov
or
and
cmpsl
nop
cmpsb
sub
gs
or
xchg
or
mov
jbe
shrb
fistpll
mov
xchg
ss
xor
bound
inc
fisubl
popf
sbb
add
aam
or
and
cmp
repnz
bnd
jmp
jg
scas
push
and
adc
or
int3
adc
lods
movsb
jnp
mov
roll
icebp
jb
cmp
shll
sbb
jge
lret
insl
outsb
push
sbb
das
jno
pop
shlb
and
push
hlt
imul
lahf
daa
cmp
pop
lret
mov
push
stc
js
xlat
fdivs
adc
xchg
sub
lds
fisubs
and
test
adc
mov
jns
sub
stos
movsb
dec
cli
insl
xor
adc
pop
or
mov
dec
fistps
mov
nop
inc
stos
jl
inc
in
mov
mov
or
cmp
inc
outsb
sub
and
popf
jns
sub
cltd
gs
shll
out
or
int3
je
enter
loopne
xchg
cmpsl
fwait
lods
adc
lock
aas
popf
bound
imul
push
xor
fidivs
mov
fidivs
inc
addr16
pop
pop
repz
shlb
in
mov
dec
sub
dec
shr
stc
push
mov
push
mov
inc
movsb
sbbl
in
mov
test
mov
xchg
dec
test
ds
adc
sahf
enter
and
dec
add
mov
rep
sbb
loope
outsl
imull
decl
test
pop
fcompl
dec
lcall
loop
test
test
jo
bound
mov
ret
sub
mov
lds
mov
dec
or
repnz
outsb
test
sub
outsb
ss
xor
sbb
dec
insl
add
pop
leave
lret
inc
xor
icebp
sub
add
pop
push
mov
int
negb
sub
dec
arpl
xchg
sbb
xchg
sbb
jmp
outsb
add
sbb
aam
push
adc
adc
adc
dec
push
lret
stc
ret
idivl
shll
or
push
sbb
push
loope
ljmp
mov
xchg
mov
pop
fidivl
not
pop
fcmovb
sbb
and
add
pop
inc
dec
clc
mov
sub
xor
repz
xlat
pop
or
adc
into
pop
jge
fnsave
test
fsubl
pop
ds
cmp
jo
fstpl
mov
outsb
data16
sarl
ss
jecxz
adc
xchg
push
lock
stc
inc
insl
punpcklwd
xor
sahf
ficoml
sbb
call
and
hlt
lahf
or
pop
xchg
jg
jae
cltd
sub
jae
bound
test
ficoms
lcall
mov
testb
mov
jle
into
fdivrl
outsl
pop
mov
nop
push
out
div
jnp
ljmp
xchg
push
cld
or
iret
pushl
lcall
cmp
cmpsl
stos
aaa
xchg
xchg
popf
mov
mov
icebp
ss
jmp
xchg
xchg
jb
stos
xchg
xchg
push
push
and
rcrb
cmpsb
xchg
sbb
mov
pop
inc
aad
ds
arpl
rcrl
gs
out
fs
subb
sbb
cmp
lret
cld
cmp
jg
aas
cmp
jno
into
jmp
out
cwtl
pop
gs
dec
mov
imul
out
mov
adc
cmc
jl
inc
cwtl
mov
pop
push
jae
and
fsubrp
and
sahf
and
adc
inc
out
inc
clc
add
mov
push
cltd
jle
loop
cld
aam
adc
push
jno
in
ja
cwtl
pop
stos
push
jl
fidivl
adc
adc
cmp
mov
pop
and
cmp
or
mov
adcl
lret
push
fwait
pop
sbb
mov
fistpl
sbb
pop
push
xor
jle
sti
nop
lret
cmp
jmp
adc
lods
sahf
mov
mov
pop
imul
xor
mov
fcoml
dec
insb
xor
push
shll
mov
movsb
and
into
out
jae
pushf
test
fstl
jecxz
adc
add
cwtl
inc
je
adc
xlat
pop
rcrb
pop
pop
dec
or
mov
jl
test
cmp
repnz
fnsave
loop
pusha
add
dec
mov
sub
pop
jmp
in
aaa
aaa
clc
lea
mov
inc
cld
inc
xlat
sub
stos
mov
jecxz
adc
xlat
nop
js
push
mov
roll
sub
in
and
mov
dec
sub
sub
roll
or
adc
push
lock
pop
sub
inc
orb
mov
xchg
cmc
jge
and
mov
cmp
inc
cmp
nop
sahf
insl
inc
sti
iret
stc
sub
adc
xor
mov
pusha
adc
repnz
js
scas
insl
mov
incl
add
cmp
aam
sub
inc
sbb
jae
ljmp
cmp
fsts
jno
sbb
and
cmpsl
cli
iret
mov
and
push
fptan
push
pusha
in
dec
xor
test
xchg
pop
cs
push
jge
dec
int3
xchg
or
lahf
mov
int3
testb
sub
subb
pop
dec
sbb
cmp
into
stc
imul
cmc
pop
mov
mov
out
idivl
icebp
out
push
gs
xchg
sub
push
lods
in
dec
push
aad
insb
ss
mov
xchg
sbb
cli
or
push
jl
aad
ljmp
cwtl
cmpsl
dec
lea
inc
jbe
lods
cmp
fwait
rcll
xchg
cltd
imulb
jnp
sub
dec
ret
in
mov
add
roll
adc
cmp
cld
test
add
popf
out
enter
mov
lock
push
out
inc
xchg
jno
fwait
daa
repz
inc
or
lea
add
cmp
clc
cmpsl
int3
neg
test
mov
gs
pop
or
cltd
sub
lea
ss
adc
xchg
rcll
sub
insl
jb
dec
sbb
sub
js
test
jno
lock
jo
cmpsb
jl
jp
sahf
call
mov
or
push
shlb
pop
xor
xchg
xchg
push
pop
js
dec
ret
inc
jae
stos
mov
mov
xor
jb,pt
mov
call
add
xor
push
and
pop
ret
out
push
mov
mov
mov
outsl
int3
xchg
sub
and
mov
test
iret
push
push
xor
adc
je
sti
daa
test
fadds
call
jbe
jmp
fwait
lret
and
mov
push
enter
mov
insl
mov
lcall
int3
adcl
add
dec
dec
inc
add
jb
push
sbb
adc
push
lds
ret
jp
mov
sahf
aas
lret
pop
xchg
fcompl
push
xchg
notl
test
scas
loope
push
pusha
dec
or
xor
call
pop
scas
pop
and
mov
or
push
jbe
test
leave
loopne
das
bswap
pop
dec
mov
jo
andb
out
inc
clc
lret
mov
and
daa
xor
add
jbe
call
stos
in
sub
jecxz
ret
mov
jne
mov
cmp
gs
add
dec
and
sarb
pop
xor
push
ret
or
sub
add
xchg
fmuls
daa
cs
mov
and
fsubrs
mov
jge
xor
push
hlt
std
push
and
xchg
sbb
out
lods
sbb
cld
mov
rorb
aad
int3
mov
fdivs
xchg
cs
mov
cltd
in
push
xlat
lock
or
popa
aam
dec
jne
pop
xor
dec
xor
push
clc
mov
mov
bound
loopne
cmpl
popa
mov
sub
mov
aaa
insl
xchg
mov
pop
jle
dec
pop
stc
lock
jle
xor
daa
inc
adc
mov
test
sahf
mov
in
ljmp
imul
mov
rcll
ss
jb
cmpsb
xor
outsb
mov
mov
icebp
xor
xor
pop
dec
dec
lret
test
jo
push
mov
xchg
repnz
add
cwtl
jle
mov
int3
push
adc
sub
imul
insl
rol
sub
pusha
sbb
mov
mov
into
mov
in
mov
cmp
jp
pop
out
cmp
cmc
rcll
arpl
mov
rolb
xchg
and
daa
push
aas
pop
lcall
sti
rorb
xchg
ss
sbb
xchg
xor
cs
mov
iret
fmull
pop
out
mov
xchg
adc
cs
cmpsl
repnz
mov
sbb
cmp
push
sbb
mov
mov
in
dec
sub
push
pop
fimuls
fcmovu
aas
test
incl
out
aaa
cmc
adc
mov
dec
or
push
ret
outsl
sub
leave
lret
test
int
sarl
sub
jo
fucom
enter
jns
dec
xor
mov
pop
nop
push
xlat
out
mov
test
fsubs
imul
jns
out
pop
cmpsl
mov
rdmsr
outsb
adc
cwtd
push
adc
inc
adc
mov
imul
mov
iret
mov
out
or
inc
mov
mov
in
gs
sub
push
js
sub
popa
cmp
push
push
jmp
dec
jns
lea
dec
adc
mov
mov
xchg
icebp
addr16
js
faddl
cmp
pop
push
mov
mov
je
sub
pop
shlb
fcoms
scas
lret
xchg
jp
ja
mov
icebp
ljmp
int
xor
call
jl
and
mov
mov
jne
push
repz
cmpsb
sub
pop
sub
inc
pop
sub
push
int3
cmpsl
cli
hlt
pop
lods
js
push
push
or
lods
jo
or
push
roll
xchg
jg
sub
inc
das
fmull
mov
repz
fbld
fnstsw
adc
jb
jo
push
pop
fst
fmull
lea
jge
mov
jns
adc
mov
sub
lock
sti
leave
rolb
jb
clc
nop
mov
aam
adc
xchg
rcl
add
stc
add
mov
incl
stos
test
cmpsl
bound
mov
push
mov
je
mov
enter
inc
subps
test
das
push
int3
push
dec
adc
out
push
sarl
pushf
sub
sarl
adc
sub
imul
xchg
and
out
mov
jl
mov
pop
andl
xchg
mov
inc
movsl
sbb
push
xor
or
xchg
adc
adc
push
daa
rcr
sbb
popa
pop
cltd
mov
mov
fwait
test
inc
pop
mov
jb
jno
mov
cmpsl
mov
lods
in
data16
jo
sbb
push
dec
sbbb
das
cmp
or
iret
mov
add
adc
xchg
fisubs
jg
stc
arpl
popf
insb
loopne
push
jbe
les
into
add
ljmp
repnz
psubsw
push
or
lcall
mov
xor
je
stos
dec
dec
adc
fisubs
and
pop
scas
pop
adc
inc
ret
cmp
or
mov
cmc
fwait
fwait
xlat
lock
and
icebp
sub
push
mov
frstor
mov
jb
pop
add
into
xor
ja
mov
in
and
lds
add
lcall
mov
xchg
cmp
sub
pop
jno
or
xchg
adc
in
les
fidivrs
lds
adc
jns
mov
sbb
into
pop
movsb
dec
out
mov
dec
jmp
adc
mov
stc
dec
mov
xor
mov
dec
test
ss
in
movsb
and
insb
inc
cmp
adc
and
mov
adc
sbb
mov
pop
loope
ud2
mov
rclb
pop
in
in
rolb
bound
jbe
addr16
inc
mov
in
insl
repz
gs
lock
les
cmpsl
ficompl
imul
xchg
mov
push
pop
cli
out
adc
add
and
and
xchg
jecxz
loop
sub
xor
mov
push
add
popa
mov
mov
cmc
mov
rorb
pushl
lret
xchg
dec
test
add
mov
or
sub
xor
mov
fs
cmpb
ss
mov
imul
out
pop
and
test
mov
add
jmp
mov
repz
sub
jp
rorl
stc
shlb
jo
test
lock
scas
push
inc
ljmp
test
call
and
clc
jecxz
inc
loope
lea
mov
test
xor
mov
push
adc
dec
inc
xor
ficompl
push
lds
add
bound
or
daa
pop
dec
xor
das
pop
pusha
scas
add
sub
std
cmpsl
test
pop
dec
sbb
mov
les
jmp
jge
cli
adc
cmp
rcrl
cli
clc
neg
in
andl
repnz
das
sub
cli
push
les
fcomi
mov
clc
jg
sub
stos
loopne
ret
pop
jecxz
pop
or
stc
add
int3
xchg
sbb
gs
lahf
shrl
movsl
jmp
popf
add
ret
in
mov
mov
movsb
jae
and
inc
in
lcall
rcrl
add
cld
popa
aaa
push
inc
mov
cld
test
mov
cmp
lret
cltd
mov
inc
xchg
pop
inc
or
jge
mov
push
sbb
cs
jnp
loope
repnz
flds
inc
repz
roll
mov
and
inc
jae
sub
and
jnp
add
adc
xor
mov
sub
scas
dec
popa
push
or
or
daa
pusha
push
shl
out
shl
shll
mov
pavgw
or
mov
xor
push
pop
mov
iret
je
dec
cmp
in
push
xchg
push
sub
jns
jmp
or
dec
les
dec
lret
add
mov
mov
subl
xchg
icebp
nop
mov
jge
cmpsb
jl
pushl
pop
stos
xor
fdivs
outsl
jo
in
jmp
bound
iret
jp
scas
dec
adc
fmuls
sbb
xor
cmp
jb
mov
repnz
lea
inc
push
fwait
mov
in
and
repnz
dec
clc
js
ljmp
std
push
inc
sub
in
into
xor
mov
inc
mov
call
aam
loopne
dec
dec
movsb
push
sbb
mov
pusha
adc
test
sbb
mov
jl
icebp
test
ret
sub
add
sub
outsb
and
jmp
dec
out
cmp
scas
fisubrs
test
xor
daa
aad
in
cld
pop
aaa
adc
in
lret
inc
add
aaa
ror
adcb
pop
imul
notl
cmp
mov
orb
adc
daa
mov
and
fs
out
mov
and
or
sbb
loop
sti
ret
scas
xor
lret
stc
inc
and
fisubs
pop
sub
cmp
and
shll
cli
aam
cmp
out
mov
in
aad
add
pop
adc
js
arpl
jnp
lahf
out
jmp
xor
adc
leave
nop
and
aam
jns
les
imul
xchg
or
outsl
cmpsb
xor
pop
push
pop
push
js
mov
ds
pop
mov
stc
dec
adc
out
mov
pusha
popa
test
aam
frstor
and
adc
jo
inc
add
js
repnz
lea
in
out
rorl
cwtl
jg
pop
in
fistpll
cmp
mov
loope
dec
xchg
sarb
and
or
push
inc
imul
sarb
xor
sbb
stos
jae
adc
inc
jne
cmpl
dec
insl
mov
scas
mov
out
mov
adc
shl
cld
dec
add
sbb
les
aad
jbe
pop
lods
sub
stos
xor
mov
xor
mov
mov
mov
mov
stc
ds
cmp
jns
sub
pop
inc
xor
scas
lcall
loopne
pop
cltd
xor
sub
shrb
lret
lds
mov
mov
lret
adc
sbb
add
in
push
add
or
ss
call
cmpl
subl
hlt
es
stc
add
jecxz
dec
insl
dec
int3
shrl
rcr
jg
fstps
push
sbb
stos
jmp
gs
pop
popf
mov
cmp
dec
xlat
inc
mov
adc
jmp
rclb
dec
add
sbb
xor
movsl
cmpsb
test
sub
sarl
ficoms
sbb
mov
cld
jmp
jbe
xor
add
cld
loopne
das
insl
lahf
and
lahf
out
cli
lahf
cltd
es
in
int
fdivrs
js
xchg
repz
fstpt
pop
cs
dec
adc
or
mov
jecxz
xchg
mov
pop
add
push
imul
xchg
rolb
push
fcompl
push
mov
test
fs
sti
push
mov
mov
fwait
mov
mov
xchg
and
mov
cmp
inc
in
dec
aam
outsl
and
add
les
jg
cmp
les
cmpb
loope
mov
inc
adc
cltd
push
inc
fisttps
pop
pop
mov
xor
push
cltd
pop
xor
mov
rcrl
ljmp
fidivrs
cmp
add
xor
mov
lock
dec
cmpsb
jmp
in
icebp
popf
fucomp
adcl
fildl
ficomps
cmp
push
xchg
cli
inc
repz
xchg
into
into
inc
insl
icebp
dec
push
ret
xor
mov
repz
int3
stc
adc
adc
mov
rcrl
ljmp
push
sahf
xchg
dec
add
mov
shlb
int
xor
fcmove
pushf
mov
fcoms
or
xchg
cs
mov
cmp
and
shrl
int
data16
scas
mov
data16
aaa
in
lret
adc
jno
sbb
push
jb
out
xchg
xchg
adc
sub
mov
sbb
clc
stos
adcl
xchg
mov
insl
cmp
movsl
sbb
and
xor
daa
or
xor
mov
pop
aad
int3
repnz
pop
sub
mov
adc
icebp
jo
xchg
or
ficoml
lret
inc
hlt
mov
sarb
inc
ljmp
jne
pop
mov
imul
test
aad
loopne
dec
xorl
loopne
test
out
push
mov
repz
adc
ljmp
loope
jg
pop
cmpsl
mov
ret
in
jg
dec
xchg
adc
outsb
fcomps
scas
push
mov
test
or
ss
xchg
sub
mov
adcb
sbb
dec
sbb
pusha
pop
sbb
in
mov
jecxz
mov
movsl
push
dec
popf
xor
iret
sub
popf
ret
cmpsb
sbb
mov
pop
shrb
add
pop
ficoml
iret
sahf
xor
test
arpl
roll
test
out
xor
xor
cwtl
mov
rcll
xchg
leave
out
xchg
data16
adc
sbb
aam
mov
xor
mov
loop
push
add
cmp
push
enter
fpatan
pop
popf
pop
mov
and
xlat
sub
mov
loopne,pt
fisttpll
stos
es
inc
in
xchg
mov
repz
leave
aaa
jecxz
xor
push
sbb
popf
xor
maxps
aam
and
jae
jo
das
data16
lahf
rolb
adc
shll
lock
or
dec
notl
stc
inc
push
mov
aaa
loope
xchg
pop
add
or
mov
and
dec
inc
or
pop
imul
out
test
ja
push
sbb
ret
cld
pop
sub
jmp
mov
hlt
xchg
and
lahf
fisttps
push
rclb
mov
mov
jmp
jbe
mov
mov
adc
dec
loop
fnsave
mov
lds
mov
push
xchg
ss
pop
jp
xor
leave
adc
xor
ficomps
sub
pop
jle
add
adc
mov
mov
les
fcos
push
test
fidivl
cli
adc
push
rorl
or
test
and
push
adc
cmp
popa
jp
insl
movsl
or
mov
or
fbstp
pop
push
loop
xchg
cmp
loop
adc
jmp
push
pop
mov
push
out
push
outsl
ret
pop
pop
pop
pop
in
mov
xchg
in
out
clc
xor
adc
xor
loopne
mov
and
scas
aaa
push
adc
jae
mov
push
add
cmpsb
mov
pop
stc
xchg
mov
adc
jno
ljmp
inc
cmpsl
sub
mov
out
sub
and
sahf
stos
pop
sub
sbb
notl
mov
inc
enter
dec
add
les
shl
jmp
jl
mov
pushf
test
insl
cld
dec
ss
xor
cmpsb
insl
jl
std
ficoml
testb
jns
pushf
xchg
sbb
outsb
xchg
mov
fwait
adc
movl
mov
les
jbe
roll
cli
notl
stc
and
jo
or
mov
jl
push
fimull
fildll
test
add
shrl
das
stos
push
and
or
xchg
sbb
push
add
xor
push
add
call
test
pop
clc
scas
inc
jge
push
sbb
cmp
inc
loop
mov
fwait
ud2
gs
aaa
arpl
sub
mov
insb
fimull
xor
mov
shlb
inc
bound
and
or
xchg
iret
sub
pop
cmp
add
fsts
sarb
xchg
sarl
mov
sub
push
push
popf
push
mov
aaa
imul
push
cld
sahf
les
iret
arpl
aas
and
jg
lock
jno
mov
mov
insb
cmp
lret
aas
lret
movsb
pop
popf
rcl
jae
pop
adc
jo
push
mov
adc
and
out
sarb
cltd
out
les
and
cmpsl
popa
iret
add
mov
jbe,pn
jmp
popa
cmp
add
stos
push
lea
stc
adc
jne
out
dec
jo
mov
cmpsb
jo
mov
or
stc
leave
jp
xchg
sbb
push
mov
and
inc
adcl
pop
popa
imul
mov
jnp
mull
rolb
mov
mov
pushf
xchg
push
ret
sti
iret
xor
imul
fxch
cmp
fldcw
push
and
hlt
mov
mov
loop
das
pop
testb
out
mov
pop
adc
icebp
outsl
pop
dec
sub
and
or
out
cld
dec
xchg
out
dec
fists
lret
push
xchg
xchg
mov
out
push
xor
ljmp
mov
pop
mov
cmp
pop
test
in
inc
dec
jo
xor
dec
add
cmpsb
fdiv
ficomps
into
dec
xchg
mov
das
outsb
xchg
sbb
mov
xor
leave
xchg
cmp
out
aam
xchg
icebp
fimuls
mov
dec
daa
adc
mov
mov
es
call
add
sbb
lahf
nop
out
bound
fdivl
ljmp
cmp
push
stos
sub
fistpll
mov
std
sbb
xor
ret
fldcw
push
adc
jecxz
jno
mov
and
or
out
xchg
push
push
cmp
cwtl
adc
cmp
cmpsb
bound
pop
icebp
jno
dec
scas
push
out
int3
dec
dec
sbb
enter
inc
ret
pushf
rcl
rcrb
sbb
sahf
mov
outsb
mov
xchg
mov
add
pop
es
jbe
add
out
pop
ds
aas
sbb
xor
inc
jns
outsb
mov
imul
jo
aas
arpl
xchg
sarl
sub
lcall
add
xchg
mov
mov
pop
push
xor
push
pop
mov
aad
js
jle
repz
ja
xchg
jmp
add
js
jp
movsl
cli
mov
test
push
test
adc
cwtl
xchg
push
dec
push
jecxz
add
rorl
add
dec
add
aas
dec
xchg
inc
inc
loopne
inc
icebp
mov
pop
and
pop
ja
sbb
insb
mov
lock
inc
push
jns
fs
jnp
lcall
or
in
dec
lcall
and
xchg
movsl
mov
pusha
andb
mov
push
dec
dec
inc
xor
sub
fisttpl
add
sub
lods
xor
or
dec
jl
dec
mov
mov
jle
cmp
inc
jns
rclb
add
add
and
stos
xchg
and
mov
pop
sbb
in
pushf
outsl
int
clc
aad
sub
arpl
aad
dec
lret
jae
in
out
std
cld
ds
sti
int
jne
dec
andb
add
pop
add
pusha
jne
push
or
push
mov
dec
notb
arpl
and
fcmove
or
sbb
scas
push
inc
pop
fisubrl
xchg
sahf
aas
ficompl
ljmp
or
mov
int
push
xchg
pop
ret
push
sbb
ljmp
jp
push
jg
add
inc
cmc
adc
lods
pop
sub
sbb
scas
lahf
stos
sub
icebp
in
scas
xchg
push
adc
les
inc
or
lods
jp
jmp
add
jmp
dec
inc
jl
or
orb
or
or
es
push
pop
xchg
push
pushf
pop
sub
lock
mov
cmp
push
sub
xchg
and
lahf
fldenv
sbb
sub
or
xor
fimull
ss
sbb
jg
push
or
movsb
push
add
icebp
and
mov
lret
fdivrl
pop
mov
jl
xor
ss
mov
cli
popa
flds
lahf
push
pop
or
pop
lahf
sahf
bound
push
cmp
inc
mov
test
xchg
in
mov
pop
jns
cs
cli
and
enter
mov
test
mov
xchg
push
sbb
pushf
cmpsb
int3
jno
mov
pop
dec
lods
xchg
add
push
inc
aam
push
ljmp
lcall
aaa
dec
xchg
mov
inc
rol
or
pushf
mov
mov
lods
bound
or
les
sub
iret
hlt
fadds
cmpsl
ret
idivl
lds
jp
cmp
out
inc
push
pop
or
dec
pop
cmp
mov
ret
stos
push
repz
in
xchg
pop
mov
js
stos
sub
movsb
std
and
cltd
mov
jnp
idivl
test
xor
push
xor
xchg
dec
mov
xchg
call
xor
in
call
imul
mov
inc
out
stc
scas
sbb
std
push
je
adc
mov
lret
sbbl
pop
js
test
sub
mov
fists
dec
add
lods
subb
pusha
out
xor
push
and
inc
ss
gs
sbb
fisubrs
cld
mov
cli
ficoml
sub
and
in
mov
aam
lods
lods
mov
cmp
sbb
cmc
jg
sbb
sub
ja
out
mov
lret
in
mul
aas
push
div
pop
cmp
cmpsl
mov
neg
faddl
xor
cmpsl
in
mov
shlb
pop
lds
jmp
adc
loop
jae
inc
popa
or
xchg
mov
jo
pop
lcall
aas
out
daa
push
jo
mov
ja
or
sbb
es
cli
dec
std
in
ja
add
daa
ja
aaa
loopne
loope
filds
cmp
repnz
jne
cmpsl
jp
dec
jns
movsl
xor
inc
jnp
mov
xorl
mov
push
dec
movsb
push
adcb
lret
andl
xchg
addr16
sarl
jecxz
push
sarb
insb
repnz
sbb
pop
xor
sub
lea
fisttps
cmp
test
out
lock
shll
out
shll
cmp
lock
popa
dec
xor
add
cld
add
rorl
dec
inc
push
xchg
into
mov
dec
jb
hlt
xor
jo
sbb
lret
mov
sub
and
out
js
pop
dec
popf
test
jns
or
push
jae
mov
adc
sbb
inc
mov
repz
add
hlt
mov
cmc
imul
dec
jns
xor
fcoml
in
call
sbb
idivb
mov
xor
test
adc
xor
test
ja
xor
and
out
imul
xor
push
xor
dec
jle
std
loopne
imul
cmp
loope
ja
ljmp
addr16
adc
mov
call
data16
xchg
popf
out
cmpsb
repz
sbb
addl
out
push
and
mov
data16
xor
jo
and
cmp
or
mov
repnz
inc
fcomp
and
mov
cmp
jne
imul
jmp
mov
xor
and
cli
push
cld
icebp
mov
repnz
cwtl
xor
sub
xchg
scas
adc
hlt
mov
mov
sti
xchg
mov
mov
lods
fdivrs
in
xor
aas
adc
or
sahf
leave
cwtl
jb
adc
inc
repnz
fwait
lock
ja
mull
test
sbb
int
aam
test
jns
lahf
or
mov
mov
jb
jecxz
orl
jne
inc
mov
ljmp
movsb
imull
pop
xchg
jecxz
cld
push
arpl
rcll
shll
ss
xchg
jl
dec
in
add
iret
dec
or
pop
int
sub
cmp
sub
test
rcl
scas
fnsave
lock
push
in
push
out
cmp
rclb
or
xchg
sbb
ljmp
les
and
sbb
movsb
imulb
lahf
pop
sub
sub
imul
push
xchg
mov
jne
cmp
adc
jmp
adc
mov
stc
stos
gs
push
std
jg
add
xchg
and
xchg
push
loop
push
out
pop
sbb
sbb
add
pop
shrb
jle
addr16
pusha
push
imul
dec
cmp
add
push
repz
ret
lock
jle
les
hlt
mov
shlb
xor
cmp
dec
ja
adc
pop
jmp
es
cmpsb
icebp
in
push
fisubrl
jbe
mov
mov
repnz
cmp
sbb
mov
dec
fadds
jnp
in
lods
cmc
mov
movlps
mov
jo
outsl
xor
xor
out
in
push
add
lods
pop
pop
es
pop
and
in
cmc
aas
xchg
ss
xor
cmc
mov
xchg
std
loopne
sti
insb
lods
test
daa
add
fsub
int3
or
repz
push
in
jg
sbb
mov
popf
int
in
push
pop
mov
enter
mov
rsqrtps
push
andb
lcall
mov
leave
out
shll
pop
rcrl
pop
enter
ja
inc
xchg
lods
and
ret
sub
testb
lret
mov
mov
push
mov
inc
jl
fwait
je
cld
scas
sub
xor
push
dec
adc
dec
roll
std
shlb
sub
rcr
movsl
cmpb
sub
repz
faddl
outsl
loop
daa
imul
test
push
push
ja
call
xor
mov
sbb
daa
xchg
loop
loop
fsubrp
movsb
ficoml
sub
mov
and
shrb
lea
shlb
aad
js
mov
scas
mov
mov
daa
cld
in
adc
jle
aam
xor
xchg
inc
inc
jp
fldt
jno,pn
mov
sbb
test
bound
push
sub
mov
fsubrl
js
and
inc
daa
pushf
dec
adcb
sub
icebp
xor
test
lret
inc
decl
cmc
adc
cmpl
ja
sbb
mov
push
mov
aad
loope
aaa
test
pop
xchg
xchg
push
aas
gs
add
popa
mov
jp
mov
lock
or
out
or
adc
jo
mov
sbb
ret
mov
movsl
ror
ret
cmp
test
cs
mov
pop
icebp
push
sbb
popa
ja
pop
xchg
push
sbb
loopne
aam
repnz
loopne
mov
mov
popf
popf
xlat
dec
mov
sbb
shl
mov
scas
sub
mov
mov
dec
mov
sbb
scas
les
cmc
fildl
aaa
adcl
dec
xchg
insb
pop
lret
cltd
fmulp
pop
push
xchg
scas
mov
testb
xor
inc
mov
inc
lret
xchg
mov
les
fmull
inc
cmpsl
data16
int
imul
mov
das
addr16
add
xor
arpl
dec
int3
cmc
pop
ret
xchg
ja
xchg
mov
rorl
ds
frstpm(287
and
jmp
das
or
mov
cmp
nop
loopne
repz
arpl
scas
and
enter
add
mov
setno
and
out
outsb
ljmp
movsl
inc
stc
mov
stos
adc
rcrb
cltd
and
inc
scas
rep
rcll
push
sbb
adc
setne
test
xor
jge
mov
jecxz
pop
dec
aas
jle
mul
push
sahf
pop
loop
mov
es
mov
xchg
movsl
xchg
sub
mov
push
ja
sub
sahf
js
daa
add
add
and
jbe
mov
clc
mov
cli
daa
mov
rclb
fstps
lahf
test
pop
shl
push
inc
xlat
inc
nop
dec
jg
and
cli
mov
popl
push
scas
pop
addr16
inc
hlt
pop
pop
mov
jl
sub
xor
xchg
pop
fnstcw
insb
jae
aaa
sbbw
scas
or
loopne
in
call
dec
in
mov
outsl
mov
and
adc
xor
cli
jle
sti
sbb
addl
popf
hlt
push
or
push
out
ss
ret
test
hlt
lcall
xor
rol
push
mov
push
xor
jl
outsb
mov
fisubl
cmp
lret
es
enter
rorl
pop
sbb
leave
fsubrl
xchg
int3
push
push
es
push
test
stos
jmp
out
fmulp
and
dec
xchg
roll
shrl
aas
and
mov
xchg
or
jge
push
shlb
mov
lret
cmpsb
mov
jb
out
hlt
and
fstps
mov
dec
push
or
mov
int3
shrl
mov
jne
sbb
addr16
dec
adc
mov
imul
inc
sti
aad
inc
or
jb
xor
in
iret
mov
adc
mov
movsb
add
std
mov
push
jmp
cmovs
mov
cld
ljmpw
mov
dec
pop
jo
cmp
cmp
ja
aam
test
mov
scas
sahf
frstor
scas
adc
imul
add
inc
into
mov
jb
adc
orl
mov
xlat
and
repz
cs
pop
add
xchg
iret
pop
xor
test
stos
xor
push
xchg
outsb
mov
push
or
test
ror
sub
cltd
and
idivl
rcrb
scas
inc
inc
rorl
lcall
test
dec
mov
sbb
iret
shr
cld
add
sbb
mov
dec
shll
je
sbb
inc
inc
mov
cmpsl
movsb
xchg
lods
mov
and
testb
cmp
flds
add
cmc
and
add
mov
jnp
xchg
in
mov
outsb
add
ror
adc
mov
xchg
les
dec
stos
in
shr
mov
das
push
jo
lods
dec
arpl
adc
jne
pop
and
or
inc
data16
or
jns
dec
push
sub
or
add
or
ret
je
mov
mov
pushf
mov
add
cld
fsin
mov
int
lahf
dec
mov
popf
xor
xchg
inc
jno
lret
lods
in
outsl
mov
mov
mov
dec
xor
mov
dec
pop
gs
scas
movsl
add
scas
bound
mov
fstpl
inc
xchg
xlat
push
dec
pop
dec
pop
mov
test
push
dec
ss
lcall
inc
bnd
les
in
fnstcw
or
fistps
push
mov
mov
add
insb
mov
jo
pop
fisttpl
xchg
jbe
jbe
sub
outsl
mov
in
mov
repnz
dec
jns
mov
cmc
repnz
sbbb
xchg
xchg
add
jge
pop
mov
das
xor
repz
jbe,pn
js
loop
mov
and
cltd
xchg
inc
jb
mov
push
ljmp
sbb
and
and
and
ret
daa
mov
fbstp
stos
in
arpl
test
jb
push
aam
sub
rclb
rcrb
mov
outsl
not
push
loop
scas
lods
xor
es
mov
xchg
adc
sahf
mov
inc
push
testb
add
enter
pop
cmp
push
push
mov
mov
pop
inc
sub
fbld
movsb
dec
sub
or
lret
mov
push
jno
test
jp
out
dec
inc
les
pop
loope
iret
aam
mov
mov
sbb
repz
add
repnz
pop
and
les
xchg
jp
loop
sub
or
lahf
xor
out
fdecstp
add
bound
les
in
aam
fwait
and
and
cli
adc
leave
cwtl
mov
cmpl
cs
jle
inc
lcall
lods
or
and
sbb
push
dec
cltd
push
jbe
in
sub
push
push
aam
mov
jmp
inc
push
cltd
addr16
xchg
add
test
fwait
pop
adc
ljmp
adc
mov
sar
testl
inc
cmp
dec
xchg
xchg
add
pop
loop
inc
std
mov
into
or
dec
movsb
fmul
add
mov
fwait
push
mov
cmpsl
cmpsb
lds
cld
and
mov
push
jmp
inc
and
mov
inc
cmp
pop
lods
dec
in
rcrb
cmp
add
jl
mov
loopne
lret
sar
or
popa
in
pushf
jbe
cmp
imul
out
and
jo
sbb
sbb
dec
sub
pop
test
popa
jmp
add
jmp
cltd
inc
or
rolb
dec
imul
mov
mov
sahf
cwtl
cwtl
add
fldt
xchg
repz
fstl
mov
fcmovu
add
pop
or
scas
and
in
into
sub
ret
dec
js
cmp
rcr
add
scas
cmp
adc
adc
push
adc
push
sbb
loop
jno
loop
out
call
test
icebp
mov
daa
sahf
and
inc
push
in
pop
dec
inc
lret
mov
dec
sar
cmc
push
sahf
pop
dec
stos
cmp
ja
loopne
outsb
push
dec
mov
stos
jb
mov
xorl
int
push
lret
pop
cmp
divl
push
and
pop
arpl
fs
or
xchg
test
das
xor
lods
lret
mov
push
mov
mov
xor
mov
push
fstps
lcall
outsb
xor
mov
add
jae
cwtl
dec
cmpsl
jb
lret
lods
add
mov
test
cli
add
xor
loopne
sub
push
jbe
mov
rclb
mov
lds
sahf
inc
into
add
inc
pushf
int3
push
mov
lods
addr16
cmp
roll
les
pop
scas
daa
sub
mov
mov
leave
test
lret
dec
pop
daa
or
jne
jae
mov
rsqrtps
xchg
outsb
rcl
into
and
push
fcoml
jae,pn
mov
xlat
inc
dec
popf
dec
cmpsb
fucom
cmp
adc
and
mov
cmp
cltd
lock
ds
xlat
flds
push
ror
push
rcrl
xchg
mov
dec
into
aas
inc
sub
add
jne
in
jmp
loope
ret
adc
add
fwait
mov
data16
push
cmp
sub
bound
push
repnz
cld
scas
sub
or
mov
stc
push
jo
stc
push
mov
in
lret
push
repz
add
pop
xor
xor
mov
inc
clc
fisttps
mov
arpl
outsb
xchg
sti
cmc
mov
ret
ret
xchg
in
jno
mov
lcall
adc
movsb
sbb
xchg
adc
and
sub
leave
lea
jg
inc
cltd
mov
pop
mov
daa
ss
iret
mov
mov
inc
jns
adc
inc
mov
aas
cmpb
dec
rcrl
mov
out
push
ffree
xlat
adc
xor
cmp
xchg
mov
xchg
pusha
xchg
sub
hlt
or
push
data16
pop
into
lahf
add
vunpcklpd
and
cmp
aam
add
jae
xor
jl
dec
fadds
mov
fwait
stos
sbb
lock
cmp
add
lods
jge
push
sbb
fadds
test
ds
outsl
or
and
repz
add
jno
movsl
fsubp
mov
filds
inc
movsl
mov
lcall
stos
test
jmp
add
dec
int3
incl
adc
mov
ds
cs
adc
and
scas
mov
enter
lret
loop
mov
dec
mov
lea
xor
push
loope
mov
test
mov
inc
jns
ljmp
mov
negb
pop
addl
and
cmpsl
dec
dec
or
pop
inc
mov
pusha
jo
inc
fcoml
dec
lods
out
jb
fimull
or
clc
addr16
jnp
push
mov
pop
xchg
cmpsl
pop
lds
mov
ljmp
insl
add
mov
pop
and
and
icebp
push
mov
inc
es
les
lods
dec
adc
loope
xchg
rcr
push
sub
ret
sbb
fwait
inc
jg
inc
xorps
jb
popa
inc
push
xchg
in
scas
scas
outsb
in
daa
fdivr
pop
jns
jge
ds
cmc
cmpsb
mov
cmp
cmp
dec
cmc
aas
psubusw
jmp
testb
xchg
les
adcl
mov
push
adc
sub
push
sbb
out
jb
loope
jne
adc
stc
sbb
push
pusha
les
mov
aas
icebp
lock
sbbl
xchg
loop
mov
jmp
mov
dec
testl
add
imul
ret
xor
out
adc
mov
jnp
add
adc
xchg
inc
xor
and
sub
mov
push
dec
cmp
daa
cmp
mov
cmp
or
sub
or
cmp
pop
in
imul
add
xor
jle
fildl
and
and
orb
push
push
mov
cmpsl
insl
or
jo
mov
aad
dec
mov
pop
push
sub
fstpl
mov
and
jl
leave
mov
ja
loopne
pop
or
stc
sub
xchg
push
shrl
pop
int
jne
nop
jns
test
repz
stc
arpl
insl
fistl
fidivrl
ret
inc
xchg
jg
out
loop
mov
ss
mov
sub
es
inc
dec
sub
inc
sub
mov
pop
ljmpw
cli
mov
stos
pop
mov
mov
xchg
sbb
sar
test
faddl
mov
arpl
inc
fsub
lea
sbb
mov
pop
push
cmp
clc
mov
cld
push
pop
mov
xchg
sub
jns
iret
imul
jg
cmp
adc
sbb
out
popf
adc
insb
push
dec
hlt
xchg
test
enter
jmp
dec
ret
push
lock
fwait
add
aas
push
lahf
xor
mov
pop
in
loope
mov
mov
mov
fsub
outsl
inc
jne
test
call
and
flds
sub
sub
cmp
push
rcrl
sbbb
test
daa
add
xor
sbb
add
test
cmc
add
pop
cmp
icebp
pop
rcll
enter
insb
shll
popa
sbb
dec
add
jl
cli
mov
adc
cmc
xor
ja
mov
iret
cmp
lock
add
sub
dec
stos
sub
in
xor
rcrl
or
and
cmp
sahf
xchg
add
mov
shrb
clc
pop
fs
sbb
mov
mov
pop
out
push
adc
mov
js
adc
nop
push
notb
sub
iret
pusha
jo
imul
jp
xchg
and
or
imul
insb
pop
dec
loop
inc
mov
lods
add
data16
daa
mov
sbb
jbe
mov
and
out
jmp
dec
pop
nop
fwait
push
divb
fwait
lret
add
pop
fisubs
into
xchg
inc
lock
mov
or
and
cli
push
xor
cli
adc
push
js
loope
data16
or
inc
jb
shll
jg
jb
jno
inc
adc
xchg
mov
ror
jb
mov
pushf
rorl
scas
or
adc
mov
jle
test
roll
fdivrp
mov
pop
hlt
arpl
sub
xchg
xor
les
addb
inc
jns
or
fldl
sbb
aaa
mov
mov
scas
lods
lods
rolb
pushf
aas
cmpb
jo
call
insb
or
xorl
push
mov
data16
mov
ficoms
repz
movl
mov
cmc
decb
fsubr
std
jle
nop
inc
loopne
movsb
ss
int
pop
mov
daa
popf
test
orb
mov
loope
push
dec
cmpsl
jno
rcl
in
lahf
shrb
ljmp
pop
shll
sbb
mov
push
add
test
push
push
and
sbb
arpl
pxor
shll
push
push
shrb
jecxz
shll
test
stos
push
xchg
jnp
or
mov
jmp
add
test
jbe
mov
iret
scas
jecxz
das
stos
leave
and
jns
mov
cmpsl
and
or
inc
xchg
mov
data16
ret
js
loopne
jns
fdivrs
les
xchg
adc
dec
or
sub
xchg
mov
jl
add
and
add
mov
jo
ljmp
aas
je
repz
mov
addl
sbb
pop
push
add
lock
mov
xorl
mov
orb
adc
ds
fdivrs
stos
inc
cltd
movsb
add
call
xchg
xor
je
mov
dec
push
cmpsl
sti
lock
mov
jnp
lcall
mov
push
ja
repnz
xchg
rep
int
popa
int
mov
out
pop
xchg
in
cmpsb
nop
xchg
pop
out
pop
pop
subb
loope
sbb
mov
push
push
lret
pop
lods
dec
mov
nop
test
or
flds
inc
xchg
imul
mov
lods
fsub
adc
inc
push
and
mov
lcall
fnstsw
cli
lods
mov
mov
jbe
sbb
ljmp
fimuls
mov
icebp
dec
mov
sub
fucomip
adc
jl
aad
test
xchg
imul
lret
sahf
mov
mov
icebp
mov
dec
icebp
xor
inc
or
adc
pop
push
addb
cmp
and
sbb
cmc
mov
mov
mov
ja
ljmp
dec
add
addr16
filds
sbb
leave
push
notl
sub
lods
loopne
cwtl
xchg
fcomps
out
dec
xchg
push
push
xor
es
or
adc
push
pop
cwtl
mov
push
ror
push
jecxz
cmp
sbb
lods
stos
bound
test
and
pop
mov
addb
inc
sbb
or
cmc
fsubrl
mov
sbb
jecxz
adc
les
orb
pop
int
scas
mov
pop
pop
add
xorl
test
add
js
lahf
and
shrb
in
stos
mov
push
xlat
js
and
repnz
pop
inc
shrb
pop
pop
push
test
mov
and
aaa
cmp
ret
shll
ja
xor
dec
and
ljmp
mov
xchg
xor
add
js
adc
cltd
test
inc
inc
add
in
into
inc
jbe
mov
adc
shlb
imul
adc
add
inc
sti
leave
loopne
pop
int3
idivb
fld
jle
sub
aas
xchg
adcl
sbb
push
pusha
decb
adcl
mov
mov
stos
mov
test
mov
mov
test
sub
and
and
or
stc
mov
and
add
sbb
cmp
cli
lds
loopne
andl
daa
ror
inc
rol
adc
mov
cmpsl
mov
sbb
xchg
dec
mov
sbb
xchg
lret
jnp
push
adc
cli
lret
cmp
clc
push
pop
add
pop
sti
jl
pop
clc
cmp
stos
out
cld
out
test
sahf
pop
adc
lea
push
add
sarb
arpl
aaa
test
cltd
push
xchg
xor
ljmp
mov
std
enter
sub
mov
lods
rcll
ret
repnz
mov
addr16
add
das
inc
pop
pop
or
sub
fldt
sub
jns
cmp
in
mov
inc
fiadds
jns
stc
pop
xor
add
or
xchg
adc
adc
jp
nop
leave
cld
in
dec
bound
adc
nop
mov
cmp
jno
pop
pop
test
jnp
rorb
xor
pop
lds
in
dec
scas
pop
dec
pop
cmp
mov
les
cmc
inc
out
cld
xor
aas
imul
adc
mov
aad
lret
jge
add
mov
repz
dec
or
inc
insb
adc
adc
or
imul
sti
sbb
push
sub
xchg
dec
fsubs
jg
push
xor
cmpsl
dec
push
mov
mov
cmpsl
insl
cld
sbb
push
cmp
test
rcrl
test
add
xor
or
roll
leave
dec
std
add
xor
adc
das
lds
xchg
sub
scas
fcoms
sti
imul
jae
push
xchg
popf
dec
movl
adc
das
dec
in
in
jne
je
dec
cmp
pop
inc
xchg
jns
add
mov
and
and
or
cmpsl
dec
xbegin
gs
sbbb
shlb
shrb
adc
pop
sbb
mov
std
push
cmpsb
sbb
rcl
rclb
sahf
pusha
dec
lods
or
mov
or
fs
imul
jb
jp
fstps
movsb
out
movsl
das
je
mov
mov
push
sbb
popa
or
inc
jmp
int3
lods
mov
test
pushf
pop
push
lret
cmc
xchg
sbb
mov
dec
hlt
xchg
or
mov
inc
test
dec
xor
adc
pop
mov
sbb
jg
pushf
dec
repnz
dec
daa
jno
outsb
push
mov
and
sarl
adc
lret
and
adc
mov
sarl
daa
sub
test
sub
push
test
cli
shll
insb
push
jbe
in
adc
test
or
ja
and
xor
stos
out
sti
stc
inc
lock
js
inc
xchg
test
mov
xchg
std
dec
scas
cmp
vpsubq
push
mov
gs
add
pop
stos
clc
dec
ret
xchg
orl
jbe
mov
add
xor
mov
xorl
test
jle
test
cmpsb
sti
sti
xchg
mov
je
in
xchg
mov
fmul
sub
repz
jo
push
cld
fildl
inc
push
cld
ja
aam
sub
dec
mov
test
mov
cwtl
cmp
inc
or
xor
xlat
scas
mov
subl
mov
shrb
clc
pushf
push
cmp
mov
leave
fdivrs
mov
adc
fsubrs
jno
jb
xchg
sbb
insb
cmp
inc
or
jae
pop
lock
cmp
sbb
mov
fsubrl
insb
adc
xchg
aaa
jb
mov
xlat
and
xchg
movsl
dec
pop
and
std
sbb
add
jne
jmp
jecxz
dec
test
lsl
and
adc
cmp
dec
repnz
mov
xchg
inc
pusha
mov
cli
ret
pop
orb
out
mov
sbb
out
cltd
sbbl
xchg
push
push
sbb
in
xchg
aad
in
push
pop
mov
sub
out
cmp
jns
add
out
lock
pop
xchg
ljmp
cmc
push
xor
lods
lock
test
pop
push
inc
dec
jl
fdivl
test
xor
lret
nop
cmpsb
push
aaa
cltd
mov
inc
lcall
xchg
jp
les
xchg
xor
int3
inc
sub
adc
es
cmp
dec
insb
or
xchg
cmp
popf
pop
xchg
push
or
stc
add
ljmp
mov
dec
jmp
ss
add
outsl
sub
cmpb
add
inc
pushw
es
push
pop
cli
push
orl
mov
adc
arpl
ret
mov
push
js
out
repnz
jbe
hlt
mov
movsl
dec
cmp
repnz
outsb
cmpl
mov
mov
pop
xchg
xor
fcomp
jno
cmpb
add
mov
testb
out
jge
insb
xchg
out
lret
in
mov
cmpl
mov
aad
mov
mov
mov
out
xor
dec
cmpsb
adc
int3
fsubrs
shrl
insb
movb
es
or
and
pop
adc
cmp
shll
mov
cltd
dec
inc
test
jo
push
jl
xchg
mov
icebp
sub
insl
and
subb
inc
dec
ds
inc
mov
outsb
cld
mov
pop
das
and
mov
fwait
dec
or
lds
mov
clc
scas
lods
clc
imul
xor
shrb
popa
xchg
ss
data16
xchg
fs
stos
push
sbb
mov
sub
cmp
sbb
sub
push
pushf
mov
aam
xor
mov
push
ficomps
adc
cwtl
jecxz
jns
xchg
jno
dec
inc
andb
les
adc
push
xchg
shlb
mov
lods
mov
in
stc
ret
rcll
sub
test
inc
outsl
lock
aam
cmpsb
mov
cmp
cmc
xor
icebp
test
and
mov
nop
int
xchg
jmp
out
cmp
inc
insl
pusha
push
cmp
arpl
xchg
cwtl
scas
jg
cmc
lret
xor
sub
lds
mov
push
andb
push
mov
leave
movsb
mov
out
jno
daa
out
cs
sub
pop
mov
dec
xchg
dec
and
adc
aam
scas
mov
aas
js
sbb
insl
cmp
and
xchg
mov
rclb
pop
pop
call
popa
enter
cmp
insl
int
mov
pop
xor
push
push
push
sub
les
repz
pushf
cmpsb
fdivs
mov
mov
sub
test
movsb
in
push
movsl
add
mov
div
in
cmpsb
aad
shll
push
lret
lret
sub
scas
lahf
aaa
or
mov
loopne
insl
pop
ret
repnz
jo
xor
dec
sub
outsl
push
xor
and
fistpl
mov
les
cmpsl
arpl
fdiv
push
popf
fdivs
push
jno
repnz
push
scas
and
in
cmpsb
ss
add
sbb
and
lcall
inc
adc
jmp
hlt
hlt
rclb
xchg
je
mov
xchg
cmp
jl
subl
sbb
inc
jle
scas
test
jb
add
data16
lods
sub
je
rcl
sub
xor
test
ficompl
jno
pop
or
out
movsl
xchg
pushf
add
lcall
cld
leave
movsb
cwtl
stos
flds
ds
mov
into
bound
aad
xor
jno
mov
mov
cmp
in
daa
dec
mov
cmp
mov
mov
cmp
sub
cmp
cmp
bound
mov
call
add
repz
adc
push
mov
add
les
ss
ret
popf
inc
cs
mov
xor
insl
pop
out
mov
xchg
cmp
flds
ret
mov
loopne
movsl
test
fsubrp
int
inc
dec
stc
mov
push
aaa
sarl
mov
imul
jo
mov
inc
mov
pop
jmp
mov
push
sarl
pop
imul
pop
int3
mov
fisttpl
out
fwait
test
push
pop
lahf
aad
fwait
jmp
movsb
and
cmc
and
xchg
enter
lock
pop
dec
cs
and
dec
push
xchg
ror
pop
push
loope
jo
test
sbb
mov
cmpsb
xor
iret
lock
sub
push
subl
mov
outsb
out
aas
xchg
out
and
les
scas
xchg
outsl
int
xchg
in
rcrl
adc
sbb
push
imul
mov
iret
inc
xchg
loop
clc
je
stc
imulb
cmp
inc
imul
rep
popa
stc
cmp
in
push
sbb
push
xor
dec
pop
adc
pop
push
in
cmp
push
sub
test
sbb
fdivrl
loope
pop
pop
mov
push
inc
mov
pushf
jmp
faddl
mov
jno
scas
es
inc
adc
mov
imul
cmp
lea
cmp
sub
mov
jno
das
inc
mov
sbb
loopne
add
leave
pop
cwtl
push
aaa
push
dec
jl
mov
mov
outsl
andl
push
cs
pushf
insl
add
jp
cmpsl
lea
add
or
xchg
outsl
rolb
pushf
adc
stos
xchg
mov
iret
xor
jb
popa
outsb
idivb
scas
daa
rcr
sub
inc
xchg
outsl
mov
rcrb
lret
popa
pop
inc
dec
inc
cmp
mov
mov
decb
loope
or
pop
xchg
pop
ja
mov
xchg
adc
icebp
mov
push
mov
mov
mov
int3
jl
ficoms
rorb
dec
cmp
sbb
mov
mov
add
in
jge
mov
jmp
fsubrl
cmp
stos
int
pop
cmpb
test
push
pop
ja
loop
das
lea
sub
loopne
inc
pusha
pop
imul
testb
mov
stos
push
pop
rcrb
fcomp
sbb
pop
jns
fnstenv
mov
call
adc
or
movsb
xor
clc
js
add
xor
cmc
sub
xchg
xor
cmp
std
xor
mov
and
mov
inc
out
jle
aam
nop
inc
or
popf
pop
and
add
dec
das
add
in
aam
pop
add
xchg
sub
addl
jmp
push
adc
mov
sbb
xor
adc
out
adc
jge
push
addr16
lcall
fcomip
xor
and
sbb
and
mov
pop
ljmp
dec
jge
jge
lods
notb
test
div
shll
adc
jg
adc
lret
int3
jno
aad
push
dec
push
popf
nop
push
mov
sbb
incl
into
jo
fsub
fisttpl
adc
cli
push
xor
fwait
or
and
cmp
inc
lds
fisttpll
mov
stos
mov
mov
imul
mov
xchg
mov
xor
jnp
push
loop
into
and
fs
xchg
subl
jecxz
sbb
inc
aaa
lds
cmp
push
les
xlat
loopne
push
inc
push
sbb
clc
xor
enter
pop
nop
lcall
mov
pop
mov
adc
in
add
jb
mov
pushf
cmpsb
loopne
stos
arpl
shl
mov
mov
cmp
loopne
dec
testl
mov
xor
stos
mov
mov
inc
and
sub
push
jge
sbb
jg
add
aad
jo
pop
push
lcall
stos
cmp
push
xor
fidivrs
mov
pop
adc
ret
xor
in
push
xchg
ss
sbb
call
lahf
add
xchg
add
dec
pop
orl
inc
xchg
pop
xchg
sbb
addb
loope
and
mov
lret
adc
pop
xor
xorb
sahf
mov
push
xchg
imul
repnz
or
cmp
dec
inc
std
push
push
rclb
lahf
jo
and
push
enter
in
fwait
jmp
icebp
stc
test
sarb
xchg
add
pop
xor
outsb
mov
mov
push
je
into
aaa
je
insl
mov
out
sub
jmp
lea
sti
pop
test
mov
fmul
imul
cs
xchg
jl
jbe
xchg
cmp
scas
call
ja
pop
scas
vcmpngtpd
mov
leave
cmp
int
push
mov
cmp
pop
mov
push
fistl
cmp
xor
into
lret
cmp
sbb
jno
pop
pop
stos
int3
adc
mov
mov
cmc
sub
loopne
jns
fcmovbe
jle
and
jecxz
mov
pop
xchg
xorl
mov
mov
xor
xchg
cli
jp
push
adc
xlat
sarl
and
ljmp
xor
insl
iret
cli
hlt
aaa
xchg
ja
das
mov
push
addr16
ja
lret
push
and
dec
cmp
mov
fistpll
inc
pop
int3
cmpb
lds
nop
fadd
pop
inc
mov
add
imulb
cmpsl
ficoms
xlat
or
push
fsubs
scas
mov
and
and
mov
mov
adc
adc
test
ljmp
or
sbb
pop
out
test
ja
push
std
jmp
vmulsd
mov
repz
sbb
stos
inc
call
adc
sbb
add
ss
adcl
and
inc
push
mov
repz
adc
pop
or
int
jmp
outsb
inc
fcmovnu
mov
mov
sub
xor
and
inc
call
repz
iret
add
in
mov
sbb
cld
cltd
loope
push
shlb
out
shlb
scas
adc
jmp
inc
mov
cmc
mov
aas
inc
xchg
add
icebp
mov
add
std
int3
xor
repz
bound
loop
iret
sub
xchg
mov
jl
push
daa
or
dec
in
adc
mov
push
test
loopne
pop
pop
lret
dec
mov
les
jle
mov
mov
or
jmp
shll
cli
aad
jo
arpl
out
jo
fdivrl
mov
pop
or
push
out
xchg
cmp
je
adc
jl
cs
decb
js,pn
out
jns
add
pop
testb
jle
lret
xorb
push
fdivrl
call
and
mov
mov
inc
inc
inc
inc
es
lahf
jo
and
and
mov
push
lret
mov
ja
fistpl
into
push
leave
repnz
mov
or
jle
jmp
and
push
cltd
cs
or
ret
jg
cmp
dec
sbb
fs
aas
and
adc
dec
in
outsb
testb
scas
in
sbb
mov
dec
fsubl
and
int3
test
lods
xor
jae
mov
sahf
insb
lret
dec
mov
cltd
mov
xchg
cmp
shll
shll
lcall
dec
cmp
test
push
cmp
negb
add
sub
mov
push
lock
iret
jecxz
out
pop
insl
mov
and
sbb
or
test
dec
outsb
mov
mov
adc
jp
pop
jo
popf
inc
xor
or
inc
sti
shlb
iret
inc
cmp
sar
adcb
and
loopne
pop
adc
pop
jne
aas
mov
add
xchg
lcall
jp
mov
int3
cli
adc
cmp
jno
sahf
aas
das
jo
ffreep
cmovno
jne
sti
imul
loopne
sbb
xchg
aad
mov
lret
or
cmp
dec
dec
loop
cmp
inc
rorb
inc
push
push
loop
lods
mov
and
inc
jecxz
xchg
shlb
xlat
rcrl
jnp
ss
inc
out
jbe
movsl
inc
ss
jb
in
out
mov
jno
jp
imul
inc
std
dec
test
xchg
test
mov
sti
fcom
or
jg
in
add
and
call
cmp
adc
push
push
inc
idivl
mov
ret
pop
ret
cmpsb
outsl
or
fisubrl
sti
inc
jno
daa
aad
jmp
popa
xchg
mov
pop
loope
lock
gs
xchg
mov
adc
data16
insl
fucomp
mov
push
imul
lahf
sahf
lods
cmp
xchg
sub
out
les
ja
dec
and
and
lcall
xor
sub
mov
cmp
jle
pop
adc
sahf
idiv
aas
popa
fists
add
subl
stc
shll
mov
inc
fneni(8087
sbb
arpl
dec
insb
insl
rcr
add
mul
test
sub
cmpsb
lods
push
dec
mov
clc
int
movsb
lret
xlat
mov
popa
add
jns
cld
inc
lcall
pop
sub
insb
iret
inc
mov
mov
test
test
fsub
mov
js
in
scas
cmp
mov
lods
jmp
mov
push
test
fstps
adc
adc
mov
pop
stos
xchg
jbe
pop
mul
enter
fdiv
aad
jp
jle
mov
addr16
subb
add
fistpll
in
pop
aaa
cld
xor
aad
sub
sub
mov
addr16
cmp
sbb
in
out
fsubl
sub
sub
jecxz
ds
mov
or
ja
xor
add
cmp
insb
mov
in
xor
or
rorl
add
mov
mov
mov
xlat
adc
loope
addr16
ss
lret
pop
test
pushl
pushf
loope
loop
jno
popf
jg
jl
pop
cld
and
xchg
xchg
out
xorb
xchg
adc
or
sub
lock
dec
addr16
aaa
daa
ja
stos
xor
fstp
sahf
mov
cmp
cmpsb
xor
mov
xchg
lods
pop
push
and
or
in
pop
rclb
sub
std
clc
lods
cmp
mov
clc
jne
shl
push
ja
mov
push
in
inc
out
inc
mov
popl
cwtl
inc
cmp
mov
inc
push
xchg
mov
dec
jge
out
xchg
or
xor
xchg
loop
shr
jae
out
mov
pop
adcb
or
xor
pop
pop
jl
rorb
lods
mov
xchg
lds
sbb
ljmp
pop
mov
push
sbb
or
mov
int
mov
sub
push
and
out
jns
or
jo
add
ds
pop
sahf
bound
or
pop
sahf
xor
cmp
adcl
jno
shl
jno
repnz
hlt
inc
mov
bound
into
and
mov
add
bound
xor
movsl
out
data16
insb
mov
insl
jb
fwait
test
add
popf
arpl
cmc
mov
je
iret
out
jb
subl
loop
mov
rclb
cltd
cmp
xchg
cmpsb
pop
add
mov
xchg
mov
lea
mov
adc
push
jecxz
lret
cmp
pop
sbb
sti
and
rcrl
xor
mov
inc
and
fbstp
mov
daa
cmp
push
push
add
cs
sbb
test
inc
xor
jns
ja
test
clc
push
notrack
insl
mov
hlt
jnp
and
adc
xchg
xor
jb
or
or
out
or
adc
mov
repz
xor
xor
sbb
cmp
lods
push
outsb
mov
out
lock
mov
adc
neg
mov
mov
adc
sbb
pop
std
cmp
hlt
xlat
xor
lods
cmp
or
ret
pop
popa
popf
inc
mov
shlb
pop
ss
aas
jne
fistps
sbb
sbb
stos
stos
or
fldcw
jns
jae
cmpsb
enter
mov
fstps
enter
xor
shll
add
test
cmp
imulb
test
sbb
lods
push
add
rcrl
loope
jp
in
or
push
sbb
cmp
inc
pop
movsl
leave
mov
adc
push
jg
push
mov
outsb
mov
lea
rorb
push
sti
into
jg
ss
push
lret
lods
out
cmpb
iret
mov
mov
ljmp
imul
insl
fs
into
mov
mov
xor
jo
jns
or
es
cmpb
push
mov
xor
shrl
shlb
dec
add
pop
adc
sub
mov
pop
adc
mov
fcomp
or
pop
inc
pop
or
dec
push
leave
stc
push
fcomps
gs
mov
sub
aaa
sub
pop
or
cld
or
adc
inc
popa
or
outsl
inc
adc
adc
inc
pop
add
lock
xchg
push
shrl
sub
add
sti
sbb
out
out
adc
jb
lds
mov
into
stos
dec
or
pop
inc
cwtl
pop
ficoml
xchg
jns
les
mov
icebp
insb
lods
out
inc
inc
push
mov
mov
out
mov
sub
dec
leave
pop
adc
rcrb
sbb
dec
das
movsb
mov
adc
js
push
out
lcall
cltd
xor
jle
or
leave
in
dec
jg
jo
cmc
ja
cmp
hlt
jle
leave
pop
pop
imul
adc
push
cmp
jp
shrb
push
das
xchg
les
cmp
and
ficomps
daa
dec
shll
ds
push
rol
aam
out
mov
xchg
aas
add
sti
sub
mov
push
cmp
ja
loop
xchg
hlt
mov
or
outsl
cltd
sub
into
mov
in
xor
lcall
sub
fwait
xchg
pusha
push
xor
orb
clc
imul
add
pusha
leave
mov
jae
mov
inc
mov
add
and
mov
mov
mov
pcmpeqd
and
cmp
and
dec
jmp
mov
aaa
xchg
pop
ss
push
and
les
cmpsl
mov
mov
repz
imul
adc
adc
pop
cld
add
mov
sbb
movsl
inc
addl
repnz
pop
inc
stos
push
out
fwait
lods
xchg
mov
stc
mov
mov
insl
adc
xchg
cmp
lock
xchg
pop
retw
mov
xor
fildl
cltd
jg
and
sbb
rorl
xchg
subb
sbb
shlb
int
xchg
mov
pop
xor
inc
test
int
mov
les
jg
mov
jmp
divb
sub
gs
in
or
arpl
jnp
icebp
xlat
or
in
negl
fcoms
notl
pop
bound
mov
mov
in
and
inc
add
pop
in
leave
adcb
jae
addr16
pop
mov
les
xor
sbb
insl
outsl
mov
in
pop
xchg
lret
mov
mov
jge
insb
pop
gs
ss
mov
enter
addr16
je
cmp
adc
shll
pushw
jne
outsb
dec
or
xlat
xchg
lock
addr16
rclb
shr
je
lret
or
call
push
mov
and
outsb
loope
and
pop
test
js
push
inc
movsb
dec
int3
sti
lea
adc
push
xor
sti
addb
sub
les
push
inc
inc
sti
rcr
push
icebp
xchg
enter
or
lods
pop
out
pop
or
mov
loopne
daa
lret
push
subl
inc
outsb
outsl
pop
add
xchg
or
es
int
jno
jge
inc
inc
insl
fst
cltd
jae
and
mov
fbld
pop
xor
jno
inc
fwait
ljmp
je
stos
xchg
pop
xchg
stos
or
mov
mov
movsb
in
xor
stc
mov
or
cmc
jp
mov
sbb
fldcw
push
aaa
clc
jp
pop
xchg
pusha
addr16
loopne
subb
xchg
std
lds
shrl
jmp
divb
xchg
or
and
fcomip
lods
mov
cmpsl
test
xlat
gs
pop
inc
jo
lea
enter
push
and
scas
enter
cmp
call
pop
sbb
fdivrs
xchg
mov
push
and
push
in
ds
pop
push
icebp
lret
mov
shlb
sbb
add
mov
dec
mov
pop
sbb
xchg
out
pop
mov
xor
jmp
mov
stos
ffreep
ja
lcall
mov
test
inc
or
in
orw
gs
sbb
mov
mov
imul
stos
arpl
or
or
inc
daa
pop
sahf
movl
fisubl
lahf
and
icebp
sub
cld
sahf
loop
mov
test
fisubrl
xor
loope
call
call
cmp
pop
jbe
mov
nop
mov
mov
jbe
sub
lods
dec
adc
aas
jne
pop
or
jbe
mov
add
cmp
test
sbb
loopne
cmpsl
add
test
mov
movsl
ret
popf
mov
and
pusha
shr
xchg
push
mov
faddp
jne
mov
ret
xchg
faddp
add
das
mov
mov
int
push
cmp
stos
into
mov
or
call
outsl
imul
inc
js
mov
xchg
out
mov
or
jno
add
xchg
cmpsl
js
outsl
aaa
outsb
ljmp
xchg
stos
ja
pop
dec
mov
or
fists
pusha
cltd
mov
stos
xor
mov
and
sub
sbb
mov
lret
xor
int3
aad
fcoms
cmp
mov
mov
dec
lea
jp
push
jge
cmpsb
bound
pop
sub
dec
out
out
jae
mov
movsb
pop
xor
xchg
jp
les
push
imul
and
mov
imul
jae
cmp
es
pop
inc
mov
das
aam
outsb
fcomps
ret
leave
das
or
add
stc
in
loope
cmpsb
add
movsl
nop
or
cwtl
push
clc
cld
mov
cmp
mov
jo
stos
dec
mov
dec
stos
sub
mov
add
jb
pop
add
sahf
inc
adc
shlb
repnz
cli
and
mov
imul
mov
mov
add
push
cmp
aaa
pop
push
sbb
push
iret
dec
popa
push
xor
or
es
lock
nop
cli
cmp
daa
filds
pop
pusha
ss
ljmp
cmp
test
inc
daa
loopne
pushf
and
mov
in
or
inc
pushf
jl
les
mov
jg
and
mov
adc
fdivrl
mov
mov
push
pop
sarb
xchg
int3
dec
test
ss
cmc
mov
popf
fwait
pop
xchg
rcrb
popa
push
inc
int3
jmp
push
mov
inc
aam
pop
sbb
out
xor
xchg
mov
test
xchg
test
stos
cmp
push
inc
fmulp
inc
out
push
notb
nop
add
mov
inc
ljmp
sub
aas
cmp
lock
in
pop
mov
dec
ja
mov
lods
cmovp
sbb
mov
sub
sub
jne
lock
loopne
int
testb
jno
or
icebp
cwtl
pop
inc
stc
fldl
loopne
pop
lret
ljmp
or
jmp
test
outsl
std
jbe
ds
push
ja
out
push
or
shr
lahf
xchg
fxch
outsl
movb
push
and
or
jae
lds
cmp
push
push
mov
loope
cltd
insl
inc
and
jns
dec
dec
push
jl
mov
test
outsl
out
jns
or
sub
nop
outsb
dec
popa
icebp
ljmp
mov
jbe
pop
mov
addr16
sub
push
outsl
lret
and
or
stos
imul
cmpsb
and
iret
push
sbb
mov
loop
call
sub
xchg
sub
pop
shl
xchg
call
fistps
leave
loop
pop
dec
push
test
lds
insb
ss
shlb
cmp
sub
lret
movsl
setp
jno
lods
cmp
test
cs
xor
push
hlt
aad
xchg
cmp
mov
pop
stc
add
add
jge
pop
inc
imulb
pop
jae
mov
mov
mov
jns
xor
push
je
mov
into
push
push
clc
in
andb
add
and
cmpsb
xor
xor
pop
lods
imul
iret
in
test
mov
mov
dec
push
inc
pop
mov
jb
sahf
fisubl
mov
fistps
dec
insb
push
incl
inc
dec
pop
mov
cmp
popf
cmp
and
cmp
add
cmp
mov
jnp
add
shl
imul
jp
pop
jecxz
das
es
mov
cmp
ljmpw
cli
push
add
mov
jno
out
mov
shlb
mov
mov
loop
and
data16
hlt
xchg
daa
mov
mov
or
push
roll
addr16
das
mov
adc
add
mov
cwtl
add
mov
ficomps
scas
das
inc
jnp
add
xchg
clc
mov
pop
inc
testb
jb
pop
xor
sbb
jne
mov
lahf
lods
jg
xor
ret
mov
ja
inc
push
adc
push
push
imul
xchg
leave
jne
and
xchg
mov
out
mov
add
test
mov
lea
jb
jmp
in
nop
test
repnz
imul
addr16
pusha
loop
out
ds
mov
es
call
movsl
ds
push
pop
call
fxam
jbe
out
push
cmp
in
dec
gs
mov
loopne
dec
mov
cmp
mov
insl
fwait
sahf
dec
mov
push
mov
and
out
out
enter
movsb
out
and
ret
nop
lds
dec
sub
iret
inc
mov
stos
jecxz
jbe
cmc
jnp
cli
xor
inc
mov
mov
cli
adc
repz
xchg
dec
cwtl
xchg
lcall
adc
icebp
add
fidivs
imul
inc
add
jmp
enter
clc
lea
aam
jb
or
jge
loop
decb
dec
outsb
xchg
push
loop
mov
imul
sahf
xlat
fbstp
push
in
fadds
inc
insl
out
dec
stos
jg
or
iret
mov
stos
addl
movb
fstpl
xchg
xchg
adc
jmp
push
and
xor
mov
in
out
lea
sub
mov
or
sahf
and
mov
gs
cltd
add
pop
push
popf
out
or
int3
xchg
push
xchg
dec
test
jecxz
jp
jmp
and
ljmp
adc
xor
lret
sbb
xchg
outsl
ret
addb
xchg
es
inc
cs
leave
lea
mov
cmp
jb
std
sbb
adc
xor
outsb
adc
inc
cmp
movsb
xchg
xor
mov
fstp
pop
int
cmp
dec
daa
js
jg
cmpb
movsb
es
mov
and
outsl
xchg
mov
mov
in
pop
cwtl
loope
xlat
pop
cmpsb
movsb
mov
jb
push
xchg
push
xchg
add
sbb
xchg
sbb
and
lcall
imul
cmp
lods
mov
dec
cmc
cmpsb
call
pop
dec
xchg
jnp
lret
sub
jecxz
sahf
mov
xchg
test
pop
pop
icebp
repnz
ficomps
dec
shl
lock
insl
pushf
sub
add
sbbl
mov
pop
xor
xchg
xchg
bound
xor
adc
jnp
icebp
aaa
cmp
outsl
push
in
jno
sbb
cmc
icebp
fldcw
fisttpll
adc
dec
jmp
loop
mov
shll
jmp
pop
out
xchg
and
xchg
lcall
and
xchg
imul
lret
ss
cmpsl
mov
sub
nop
popa
mov
cmpsb
stc
fwait
sbb
dec
add
jns
rcrb
inc
ret
jno
gs
bound
popa
mov
mov
outsb
jbe
jge
clc
push
roll
test
sub
or
addr16
sub
push
inc
xchg
push
cmp
cmp
pusha
jle
cmpl
sbb
push
or
pop
nop
shrl
inc
lahf
sub
pop
dec
in
sbb
cld
sub
sbb
mov
dec
sub
mov
std
ret
fisubs
inc
nop
shlb
outsb
pop
call
jecxz
dec
add
xor
int
fistps
insl
mov
dec
movsl
das
fstl
pop
inc
add
and
cs
adc
aad
data16
push
bound
cmp
cwtl
add
mov
and
lahf
add
mov
js
or
stos
xchg
xor
pop
xchg
sbb
or
ds
subps
lcall
fwait
pop
gs
mov
popa
jmp
push
scas
adc
adc
mov
mov
adc
imul
mov
sar
lods
loopne
jo
cmp
jg
mov
lock
sbb
ljmp
ret
pop
clc
cmpb
push
out
add
mov
int
pop
mov
in
add
call
jle
sbb
cltd
xor
bnd
mov
pop
jmp
cmp
imul
adc
out
daa
lret
push
rolb
adc
movw
add
cmp
iret
les
xor
repnz
lret
dec
jg
ds
lcall
mov
out
sbb
cld
into
subb
push
lahf
aam
adc
dec
sbb
mov
popf
xor
fimuls
outsb
cld
das
or
mov
icebp
into
or
out
add
mov
jle
inc
pop
js
fwait
pop
jno
adc
loope
les
ljmp
rcl
cmp
or
out
icebp
or
dec
mov
mov
jb
fs
and
cmp
addr16
sti
je
cmpb
and
gs
jp
call
insl
repnz
lds
lds
in
add
and
or
aad
ja
in
daa
rcr
jnp
das
cmp
pop
push
cs
pusha
cmp
lds
scas
out
xchg
jb
cmp
mov
xchg
mov
mov
mov
cmp
hlt
int3
popa
or
sbb
sahf
sub
dec
fidivs
pushf
int
sbb
call
jbe
add
and
push
pop
push
loop
gs
push
pushf
aad
xchg
cwtl
jle
aas
cld
pop
push
testl
mov
mov
sub
adc
sti
jno
cmp
adc
test
aas
xchg
int3
cld
mov
rcll
xchg
daa
repz
inc
icebp
pushf
xchg
ret
es
cli
or
fstps
jecxz
lds
popf
fs
mov
jle
pop
lea
jge
jns
ret
outsl
or
cmp
push
xchg
roll
add
sub
insb
arpl
out
in
lods
add
xchg
int
mov
hlt
mov
loope
mov
sub
movsl
or
in
xor
xchg
inc
ja
aaa
xchg
add
outsb
push
dec
ret
in
rorb
jg
inc
jmp
das
sbb
mull
imul
push
pusha
scas
pop
or
cmp
or
fisubrs
xchg
out
hlt
add
or
out
sub
lock
or
in
divl
pop
sub
ljmp
mov
cmp
imul
dec
or
xchg
ficomps
inc
cmpl
push
std
jmp
je
mov
and
xchg
ja
mov
jmp
jmp
mov
dec
ljmp
lret
fmull
xor
cmp
push
loop
lea
stos
add
push
and
inc
icebp
pushf
out
ds
add
mov
mov
les
sbb
rcrb
xchg
mov
or
dec
pusha
int
sub
shll
pusha
out
xor
stos
scas
gs
dec
mov
inc
aas
fbstp
adc
mov
bound
loope
sub
lcall
and
shr
out
out
xor
add
andl
lret
push
xchg
inc
stc
stos
int
jnp
fisttpl
xchg
jge
arpl
cmp
lds
shlb
fisttpl
pop
pop
ret
cltd
aad
out
add
out
daa
ficomps
ret
dec
xor
cmp
mov
jae
inc
xadd
std
sub
addl
and
sub
fcompl
sub
pushf
aas
push
insl
popf
push
mov
repz
jmp
sub
jbe
std
mov
cmpsl
pushf
loope
roll
cwtl
fsubr
in
inc
inc
js
jnp
fstl
sbb
ror
ret
sbb
in
sbb
jb
test
data16
movsb
aad
sbb
cs
mov
adc
mov
jno
fnstsw
xchg
insb
out
call
stos
icebp
pop
fmul
mov
push
movsl
call
cmp
or
add
stc
or
xor
loope
sub
movsb
in
jne
mov
push
cmp
aas
cld
fisttps
xor
les
scas
cs
jmp
rolb
cmc
fwait
nop
and
mov
xchg
cmp
popf
push
out
sbb
scas
adc
mov
aam
lahf
aas
lahf
dec
or
outsl
fdivrp
xor
in
and
mov
add
dec
adc
sub
fdiv
mov
arpl
xchg
adc
sbb
lds
out
jl
out
mov
pusha
movsb
inc
roll
push
in
pop
jns
inc
inc
cmpb
cmp
loopne
push
je
loopne
cmp
pop
pop
outsb
aas
jge
insl
out
ret
push
jo
push
xor
pop
outsl
push
sbb
xor
sti
movl
lods
in
xchg
ficoml
lock
outsl
xchg
rclb
add
pop
shr
push
xor
aam
in
push
inc
mov
inc
inc
cwtl
scas
stc
in
aad
into
addr16
and
xlat
das
jecxz
fucomp
push
lock
insb
jo
loope
mov
das
ret
xor
add
cmp
sbb
scas
xlat
pop
and
jecxz
push
mov
mov
cmp
mov
mov
add
popa
movsl
push
daa
int
ljmp
insb
bound
mov
add
out
test
mov
enter
and
jp
fwait
mov
mov
pop
int3
int
xchg
loopne
fbstp
mov
shrl
mov
xchg
cli
into
imul
add
jl
shlb
sbbb
std
in
into
pushf
pop
jae
jle
mov
imul
inc
push
repnz
mov
das
pop
jp
xchg
lahf
cmp
sbb
xchg
out
lahf
lea
das
aaa
dec
das
xchg
insl
stos
popa
iret
xor
subb
rolb
in
add
cld
frstor
insb
mov
cltd
sub
decl
mov
lock
cmp
pop
in
sub
push
lods
or
repnz
mulb
cli
clc
push
hlt
mov
xchg
jecxz
sbb
out
test
icebp
insl
faddl
int3
fsubrs
clc
add
pop
rcll
xchg
repz
sbb
ret
fnstsw
aad
pusha
xchg
or
nop
mov
pop
dec
sarb
cmp
cmpsb
xchg
sbb
dec
repz
pop
adc
xor
neg
pusha
mov
jle
cmpb
mov
enter
lds
lock
xor
gs
movsb
fmulp
lahf
nop
data16
xor
in
stos
lods
xor
jle
loope
xchg
mov
das
fwait
rol
jge
jl
int
das
cld
in
mov
add
xchg
pop
scas
out
sbb
dec
cmpsb
aam
xor
or
sbb
push
fdivl
cmpsl
clc
sub
ss
mov
fimuls
std
jle
and
and
es
or
inc
ficomps
mov
cmpsl
xor
cmp
sahf
negl
and
mov
in
lock
jg
rorl
test
enter
mov
adc
jnp
fs
push
pop
js
mov
push
cmp
and
pop
hlt
add
add
mov
mov
out
movsl
popf
nop
int3
mov
mov
or
les
inc
movsl
cmp
xor
sbb
or
mov
paddusw
or
out
mov
sbb
inc
mov
test
xchg
or
jg
inc
dec
cmpb
push
adc
orb
dec
outsl
mov
scas
sbb
clc
stos
in
clc
pop
je
hlt
out
insl
andl
int3
fmul
cmpsl
inc
js
sbb
aaa
mov
loop
out
and
and
xchg
inc
stos
cs
mov
aaa
sub
xor
mov
ljmp
xor
stos
das
push
pop
and
repnz
push
les
jge
ja
xchg
jg
jg
inc
sub
cmp
pop
and
mov
mov
push
or
dec
or
negb
int3
sbb
lret
lods
pop
push
sbb
shl
adc
inc
loopne
test
leave
pop
mov
dec
sbb
sbb
addb
ja,pn
pop
scas
push
ss
ja
addr16
pop
add
in
xor
xor
popf
dec
insb
test
rclb
je
xor
mov
inc
cmp
push
mov
popf
aad
vmwrite
data16
add
push
movsb
scas
xchg
xchg
mov
jmp
frstpm(287
mov
rorb
pushf
dec
jne
repnz
mov
xor
dec
clc
xor
xchg
xchg
xchg
mov
xor
dec
sbb
jle
scas
mov
jo
pop
test
jb
rcrl
enter
pop
jnp
push
fimuls
jns,pn
mov
test
loopne
daa
jge
ljmp
mov
adc
cmp
aas
push
cld
adc
add
in
rorl
add
sbb
pop
sub
fwait
outsb
jae
mov
movsb
repnz
fnstcw
imul
in
inc
mov
out
in
xchg
pop
jecxz
out
add
or
xor
sbb
stos
pop
test
cmp
xor
incl
enter
jge
push
test
mov
jmp
mov
stc
xlat
mov
in
lcall
sub
cwtl
adc
mov
jge
das
movsb
mov
test
add
vmovq
adc
sti
dec
push
add
cld
lahf
and
test
ds
and
outsl
dec
stc
dec
mov
test
jg
mov
mov
xchg
add
push
inc
fs
xchg
jecxz
mov
lock
pop
mov
mov
pop
stos
sub
xchg
sti
cltd
sub
push
imul
mov
dec
pop
cmp
leave
xchg
sbb
rclb
test
cmp
pop
pop
ss
mov
in
subb
xchg
inc
test
mov
dec
mov
ret
jge
xor
push
lret
mov
mov
cmp
mov
mov
fists
push
push
into
gs
jno
add
cmp
xor
push
test
lea
xlat
inc
mov
cmp
or
mov
jne
ds
inc
push
xchg
iret
cmp
push
shr
sbb
dec
es
jne
aad
sub
mov
int
stos
fwait
jbe
mov
jle
xchg
pop
adc
out
out
gs
xchg
incl
gs
xchg
mov
aas
xchg
add
ja
sbb
dec
push
push
imul
xor
sahf
add
mov
fstpt
ret
les
add
fdivs
push
inc
adc
dec
xor
in
movsl
mov
and
mov
pop
ljmp
adc
mov
fs
out
add
sbb
popf
ss
js
adc
mov
inc
add
add
test
mov
push
sub
loope
cli
out
push
jbe
sub
xor
and
test
shl
out
popf
sub
lods
cld
adc
nop
dec
dec
adc
mov
fiadds
xchg
loopne
mov
push
xor
mov
jbe
inc
jmp
and
andl
push
inc
test
mov
mov
cmp
fistpll
xchg
pusha
in
mov
push
xchg
sbb
fcompl
test
mov
push
out
sbb
stc
inc
int
aaa
nop
add
sub
clc
scas
adc
add
jb
sub
jno
es
daa
push
mov
ja
inc
xlat
cmc
pop
jge
shlb
cli
mov
scas
xor
leave
pop
in
and
fstl
hlt
push
negl
push
sbb
add
and
and
out
daa
notl
in
notb
push
sbb
out
ret
insl
fdivp
inc
xchg
mov
inc
push
and
push
xchg
lret
enter
imul
inc
mov
push
rcr
jp
jg
jne
vcvtss2sd
icebp
arpl
xchg
leave
mov
hlt
pop
fisttps
stc
int
sbb
inc
into
fbstp
fdivrl
call
mov
xchg
int3
mov
inc
push
sub
repnz
adc
jecxz
or
addr16
adc
jb
jb
cmp
cmp
leave
push
xchg
mov
or
mov
pushf
rorl
add
insl
popa
sahf
jp
mov
adc
jp
inc
mov
push
mov
pop
xchg
data16
sarb
lods
push
xchg
cli
cmpsl
loope
fsubrs
mov
mov
insb
icebp
mov
xor
mov
insl
pop
int
push
add
mov
int
inc
notb
out
sub
mov
xor
fldl
arpl
dec
mov
repnz
insb
inc
xor
lods
fistpll
stc
hlt
sarl
adc
movsl
test
test
cmp
sbb
push
test
or
pushf
sti
adc
push
inc
inc
fwait
cmpsb
popa
or
pop
inc
addl
out
jb
sub
sbb
scas
xor
divl
pop
andb
push
sbb
push
mov
ret
mov
lds
inc
pop
xchg
inc
pop
cmp
in
test
or
shlb
je
in
pop
sahf
lret
sub
xchg
mov
int3
sahf
jne
sub
push
fisttpll
dec
idivb
dec
gs
add
inc
push
scas
les
xor
aam
movsb
or
sub
pusha
fmuls
jl
cmp
sbb
cmp
cmp
outsb
arpl
inc
movsl
jge
adc
adc
lret
cmpl
xchg
gs
movb
mov
icebp
fidivrs
insb
call
fdivl
mov
inc
out
push
cmp
adc
fdivl
and
out
add
movsb
mov
or
sbb
cmp
add
jecxz
lea
and
adc
push
mov
fisttpl
inc
mov
add
and
fistl
mov
jnp
push
loope
push
cmpneqps
mov
mov
enter
jmp
je
ret
int
outsl
xor
inc
fsts
adc
lods
ret
pop
lahf
jle
das
int
jb
dec
ja
pop
dec
add
test
dec
faddp
insl
push
lods
mov
ret
movsl
lcall
enter
or
xlat
cmp
imull
push
cltd
loope
mov
cli
mov
aaa
pop
fdivs
fsubrs
fdivs
jae
jg
xor
sar
push
lods
sub
sti
adc
cwtl
aaa
push
test
sbb
cmpsl
pop
xchg
mov
xchg
lret
pushf
xchg
or
push
pop
mov
push
push
and
pop
or
or
sub
mov
icebp
inc
stos
or
jo
adc
cmp
rcll
sub
fimull
mov
mov
push
or
mov
fdivr
sbb
inc
cmpsb
mov
iret
rcr
in
jg
out
push
xchg
aad
das
cmp
or
bnd
out
mov
dec
jnp
stos
es
sub
xchg
sub
adc
mov
dec
dec
ficomps
mov
imul
fucomp
jge
loopne
and
mov
push
mov
dec
or
or
shl
add
stos
lock
pusha
push
cld
inc
pop
pop
loopne
data16
and
mov
lahf
mov
sub
icebp
jb
sub
and
jno
mov
mov
xchg
aam
add
sbb
cmp
addl
jno
pop
bound
in
btr
enter
mov
push
ficompl
push
mov
iret
mov
jbe
leave
push
xchg
jle
mov
pop
shrb
int
inc
sahf
hlt
mov
lret
movsl
xchg
stos
scas
dec
jno
mov
mov
data16
xchg
scas
mov
addl
pop
xor
xchg
filds
fdivp
scas
outsb
repnz
es
mov
xchg
mov
rclb
stc
sahf
jb
xor
xchg
fdivl
into
stc
imul
pop
lock
les
mov
int3
dec
add
jne
and
sub
dec
pop
jne
ja
fcoml
or
push
add
inc
sub
xor
das
loope
mov
jno
mov
in
lods
inc
sbb
cmp
sahf
ret
lret
movsl
add
add
lcall
add
adc
std
inc
mulb
jmp
rcrb
daa
push
inc
cmp
jno
out
cmp
sub
mov
cmp
es
push
loope
rcll
ja
fcoms
sub
dec
dec
shrl
mov
stos
mov
push
out
test
fimuls
sbb
sbb
scas
jae
test
inc
mov
sbb
ds
loopne
jae
andb
decl
and
add
sub
mov
mov
fs
lret
into
mov
scas
sbb
and
filds
mov
inc
hlt
inc
movsl
xchg
leave
loope
stos
cs
push
dec
jb
icebp
jle
cli
sbb
lret
mov
loope
test
stos
jne
mov
or
or
xchg
adc
push
add
lcall
int3
sub
loopne
mov
xor
pop
call
or
cmp
mov
or
cltd
push
aaa
cmp
jo
loopne
or
fcoml
mov
inc
loop
xchg
es
ret
and
dec
push
jo
jns
or
fistl
shrb
mov
fidivrs
jo
jle
mov
xchg
shrl
and
lods
iret
and
les
cmp
add
shl
sbb
mov
cmp
stc
xchg
sbb
call
test
pop
xlat
mov
mov
cmp
jae
or
cld
es
mov
lret
sub
xchg
add
adc
sti
push
sub
cmp
push
add
mov
add
stos
or
out
pop
outsb
aad
inc
outsb
iret
lahf
jne
pop
mov
push
imul
sbbb
testb
add
call
add
lahf
test
push
je
fimuls
sub
js
inc
inc
data16
into
and
insl
test
bnd
cld
add
sub
rolb
and
in
jp
and
cmpsb
push
or
xchg
mov
sbb
mov
pop
sub
enter
arpl
into
das
inc
cmp
pop
mov
dec
xchg
xor
and
pop
in
pop
add
mov
pop
push
dec
sub
lcall
push
xchg
dec
call
mov
ljmp
push
mov
push
push
dec
inc
loopne
and
stos
shlb
or
stc
sbb
lods
mov
mov
mov
mov
jmp
jmp
cltd
test
clc
jo
inc
shll
xchg
and
fiaddl
mov
hlt
and
add
add
dec
jmp
mov
xor
icebp
xchg
cld
adc
xor
sbb
aad
hlt
outsb
xchg
push
cmc
je
orl
fidivl
addr16
push
mov
add
mov
dec
dec
fmull
out
lcall
jmp
movd
jg
scas
out
out
cmp
notb
xorl
insl
mov
mov
push
setge
push
xchg
fdivl
pop
mov
dec
out
pop
ljmp
outsb
inc
sub
push
or
inc
bound
xor
ljmp
jno
mov
imul
jle
aas
mov
lods
shlb
xchg
mov
mov
sti
and
repnz
cmp
pop
outsl
gs
filds
jne
add
ljmp
xchg
sbb
sub
xor
sti
inc
mov
mov
dec
movsl
sbb
push
pushf
loopne
scas
ficoms
fnstsw
mov
jns
shll
pop
scas
pop
js
push
mov
sbb
xor
xchg
ret
xor
jnp
lods
push
leave
imul
leave
adc
add
lock
cltd
aaa
ret
mov
pop
bound
fwait
inc
xor
stos
popa
pop
shll
jns
mov
xor
rcrl
add
in
push
mov
lds
mov
hlt
cwtl
add
je
and
outsl
sbb
mov
xchg
ds
cmp
cmpsl
fldl
call
jno
imul
dec
mulb
std
adc
xchg
in
imul
fwait
out
stos
sahf
loop
mov
mov
gs
je
add
mov
jb
fs
test
pop
push
xchg
push
arpl
mov
xchg
sti
mov
in
dec
jle
jge
sbb
sahf
movsb
or
test
imul
imulb
inc
sub
cmp
cltd
xchg
xor
shlb
cmp
sub
mov
cmp
push
mov
dec
lea
fcompl
pop
push
pushf
xchg
inc
xor
call
mov
jge
cmp
pop
mov
xor
mov
loopne
or
dec
icebp
or
ficoml
xchg
lds
xchg
lods
in
fsubp
add
push
popa
fnsave
adcb
cwtl
pop
jmp
inc
cli
out
lods
xor
inc
push
push
repnz
rolb
cmp
push
pushf
mov
jno
xchg
xchg
jmp
add
aaa
rcl
pop
ret
push
fbstp
and
dec
int3
sbb
add
add
xchg
push
mov
pusha
mov
pop
out
sbb
dec
xor
adc
mov
inc
mov
mov
ficoms
int3
mov
mov
xchg
push
popa
push
les
push
cmpsb
and
mov
mov
test
popf
sbb
in
mov
cld
and
int3
outsb
sbb
dec
inc
pop
loope
fsts
out
cwtl
cmp
dec
loopne
adc
mov
aad
in
adc
jl
xchg
outsl
loope
xchg
cmpsl
push
xor
inc
fs
in
inc
nop
outsl
cltd
xchg
add
insb
jb
inc
ja
pop
test
scas
sub
mov
loopne
std
xor
mov
mov
sub
cmp
sbb
sbb
and
cmp
test
ret
mov
mull
test
push
pop
mov
popf
xlat
jns
popa
nop
sbb
pop
sahf
lock
mov
mov
xor
stos
or
sub
xchg
dec
add
mov
mov
jbe
dec
add
jmp
xor
lock
inc
and
inc
adc
mov
leave
es
xor
arpl
in
mov
and
push
mov
push
and
push
and
aad
mov
enter
jge
xor
push
xlat
xor
movsb
test
orl
jecxz
ret
xchg
lods
sbb
or
leave
dec
pop
outsl
or
mov
in
jl
mov
push
test
pop
or
mov
and
push
xchg
popa
jg
scas
inc
popf
sub
sub
xor
or
or
adc
lcall
imul
cmp
mov
repnz
cmp
jbe
out
jns
sbb
jecxz
dec
xor
stos
fdiv
xchg
test
jecxz
in
in
mov
add
add
adcb
sbb
test
xor
cmp
adc
or
clc
add
or
out
bound
xor
adc
and
add
les
sbb
lcall
flds
mov
stos
rolb
jno
iret
iret
pop
add
jl
inc
ret
jl
fisttps
mov
mov
scas
pop
or
dec
sti
inc
cmp
mov
and
mov
xchg
or
icebp
imulb
in
gs
clc
and
pop
cwtl
pop
std
roll
cmp
and
mov
jbe
mov
clc
rorl
push
adc
int
rcrl
scas
lret
pushf
movsl
mov
add
fisubrl
ss
test
mov
aas
mov
cmp
pop
push
nop
test
cmp
stos
adc
mov
repnz
mov
mov
ljmp
clc
push
cmpl
push
cmp
sbb
adc
lahf
ja
movsl
jmp
mov
test
call
or
adc
jl
mov
xorl
or
cltd
jae
out
inc
add
xchg
xchg
mov
mov
pop
mov
in
xchg
push
and
mov
fcmovnu
push
jmp
jne
test
mov
add
sbb
cmp
cmpsl
scas
lods
mov
add
xor
mov
xor
sub
and
jle
cmpsb
cmp
jmp
mov
imul
sub
faddl
pop
dec
aas
pop
fsubrs
dec
dec
pusha
xor
add
popa
das
mov
cmp
lea
stc
outsl
mov
aaa
pop
repz
mov
mull
sbb
fcompl
xor
mov
arpl
and
xchg
push
dec
mov
jl
sti
inc
fists
pop
cli
addl
dec
fiadds
gs
outsb
test
dec
xor
stos
rcll
cmc
jae
inc
pop
aad
pop
mov
movsl
out
popa
cmpsl
mov
jnp
ret
mov
pop
out
andps
xchg
sbb
mov
or
xchg
addr16
sbb
clc
cmp
jge
jb
pusha
repz
icebp
xchg
push
jecxz
jmp
hlt
test
scas
popf
jmp
mov
jl
pop
rcr
mov
into
jae
hlt
mov
ja
js
punpckhwd
iret
shl
pop
out
call
nop
outsb
xchg
sub
clc
and
out
stc
xchg
mov
aam
shl
rcrl
je
bound
cmp
cmp
jb
inc
aaa
cli
mov
cmp
dec
jmp
test
rcrl
xchg
mov
jg
adc
arpl
sbb
sub
das
add
dec
mov
sbb
or
addr16
cmp
lret
or
aaa
mov
jecxz
cli
repnz
or
sbb
sub
or
mov
aad
mov
ja
pushf
aas
out
js
arpl
sub
les
lods
aam
xor
pop
fistpll
push
mov
ret
cld
sub
int
and
lcall
pop
call
jns
push
loopne
arpl
pop
jb
sahf
int
int
repz
jns
repz
jo
cmp
in
mov
lret
jl
push
jnp
xchg
mov
xor
imul
add
jp
sar
dec
or
mov
pop
push
xor
cmp
mov
ret
mov
roll
test
cld
jae
test
jg
in
add
sub
or
stos
push
lret
mov
test
mov
push
or
xchg
mov
mov
lahf
jmp
cmc
inc
xor
pop
sbb
out
mov
fsts
push
leave
je
xor
cmp
les
ror
inc
pop
sub
mov
or
cli
add
cmp
sbbb
out
mov
cs
xchg
sbb
mov
mov
xchg
dec
inc
inc
testl
sbb
ds
push
aad
cld
xchg
pop
pushf
inc
mov
mov
pop
bound
rolb
in
pop
cmpsb
mov
lcall
jmp
into
lds
xchg
inc
cmp
sub
push
cld
lahf
adc
or
sub
dec
in
xchg
xor
xchg
mov
mov
stos
jg
ficompl
fisubrs
aam
jle
xor
stc
movl
pusha
mov
jecxz
cld
dec
vmovdqa
add
mov
cmpsb
inc
mov
fstl
test
sti
loop
push
or
js
sbb
pop
jmp
sbb
imul
xchg
xchg
mov
mov
inc
mov
scas
xlat
and
lahf
mov
std
add
pop
sub
jae
fcomip
aas
ja
cmp
jo
mov
push
inc
imul
cmpsb
push
xchg
leave
sti
aam
lods
mov
inc
and
loop
push
xchg
adc
cmp
add
dec
dec
cmp
mov
jno
cmpsl
adc
daa
test
out
pop
and
mov
jno
into
repnz
and
add
pushf
xor
pop
shlb
js
dec
inc
std
cmp
mov
push
or
sti
xor
xor
scas
jae
or
jns
sbb
push
mov
mov
or
ficoms
outsb
outsl
xor
mov
and
lret
aad
repz
pop
fucom
lds
mov
bound
dec
stc
gs
dec
in
xor
mov
add
insb
lea
loop
aas
adc
je
adcb
mov
lock
push
das
ljmp
stc
pop
pushf
stos
cwtl
pop
test
in
fwait
mov
scas
xchg
jecxz
jmp
test
cmp
lods
and
incl
inc
icebp
mov
les
fucomp
sub
out
sub
jae
cmp
xchg
ss
pop
xchg
push
xor
push
xchg
ja
inc
in
inc
cltd
mov
push
and
rolb
cmc
aaa
pop
add
lock
sbb
lahf
test
sub
inc
or
inc
add
adc
adc
mov
cli
adc
fdivs
fs
pop
dec
pop
ret
cmp
or
pop
aaa
sub
cmpsb
or
dec
mov
push
test
in
xchg
cli
fidivs
xor
jp
xor
pop
add
xor
adc
and
mov
shlb
inc
scas
xchg
in
leave
adc
push
jns
aad
cmp
fs
mov
xor
or
add
jb
fsts
imul
jno
data16
mov
int3
jns
pop
jmp
xor
mov
std
push
sub
push
push
add
jns
gs
cmp
adc
dec
sbb
jle
jecxz
ffreep
push
nop
fcmovnb
pop
hlt
xor
sbb
cwtl
fnsave
cmp
mov
mov
stos
js
movsb
js
inc
clc
xchg
in
adc
mov
inc
int
movsb
pop
push
mov
mov
cmp
or
fsubr
jle
mov
push
movsb
dec
fisttpl
frstor
dec
outsl
insb
cmp
push
mov
jb
push
aam
inc
adc
fiadds
add
out
mov
mov
lea
add
xor
out
orl
add
push
cld
or
mov
mov
push
js
inc
out
pop
filds
shl
pop
pop
cmpsl
add
insl
sarb
andb
xchg
repz
imul
mov
out
pushf
mov
fnstcw
lret
mov
add
lea
dec
bound
int
push
les
stos
inc
push
add
frstor
mov
sti
sbb
cltd
dec
jmp
xchg
pop
movsb
jmp
pop
mov
jle
and
mov
or
fcoml
pop
nop
out
mov
aaa
mov
gs
pop
aam
loop
shll
popa
xchg
dec
insl
mov
aad
ret
or
add
addl
fisttps
jo
rol
push
mull
mov
int
mov
lds
jl
or
pop
jmp
aaa
add
outsb
sahf
sub
jo
mov
add
push
dec
jbe
push
cmp
jecxz
es
bound
mov
icebp
sub
pop
push
cmpsb
cmp
xchg
scas
dec
xor
pop
pop
movsb
jb
xor
je
mov
fs
aad
adc
or
add
aam
mov
add
das
push
pop
loopne
mov
add
into
cmp
inc
repnz
mov
and
bnd
repz
xor
lahf
repz
or
push
bound
xor
mov
jae
sbb
and
jns
push
jle
and
sbb
add
pop
out
prefetch
test
roll
rolb
pop
popa
js
lcall
mov
lea
or
mov
cmp
push
scas
les
into
cld
xor
data16
mov
mov
adc
ljmp
inc
add
jae
inc
add
mov
inc
mov
inc
cmp
xchg
jp
sbb
lret
sub
pop
mov
cmc
and
std
sub
aad
pop
mov
fisttpll
lea
add
add
sbb
fcomps
push
mov
cmp
push
or
mov
push
fisubs
pop
jl
vpaddsw
xchg
mov
filds
stos
mov
je
sub
mov
popl
in
mov
push
sbbb
stc
es
ret
xchg
pusha
pop
repz
and
popf
repnz
pop
push
sub
sti
ret
inc
pop
lret
lds
pop
sub
pop
sbb
das
add
das
and
stos
jo
stos
out
inc
adc
mov
sti
xlat
nop
pusha
daa
pop
dec
pop
push
push
frstor
cltd
jae
lahf
fistpl
insl
xabort
daa
pop
dec
jle
add
leave
or
push
loope
mov
push
xor
dec
lds
fs
ret
cwtl
orl
es
iret
mov
jae
pop
inc
xchg
or
sti
nop
addr16
call
in
mov
out
add
mov
lods
jle
int
dec
fidivrl
dec
push
push
xchg
test
cmp
push
cld
mov
and
dec
es
leave
andl
ret
xchg
shl
retw
insl
push
pop
addr16
shrb
mov
jo
mov
mov
test
subb
inc
sbb
or
jmp
xchg
scas
fcoms
movsl
add
cmc
xchg
pop
mov
out
lret
mov
es
mov
and
stc
clc
fstpt
mov
and
idivb
cmp
out
jecxz
bound
lahf
mov
pop
or
ljmp
add
xchg
fnstsw
cmp
std
js
and
mov
stos
ficomps
dec
lods
add
or
cli
and
mov
sub
mov
pop
pop
dec
mov
xor
nop
push
andb
xor
sub
sarb
push
ds
xor
mov
xchg
push
and
push
cltd
addr16
aas
xor
sbb
clc
leave
cltd
fld
imul
sbb
lock
fbld
cltd
or
xor
pop
pop
in
lcall
cltd
and
inc
icebp
push
lret
dec
je
andl
push
enter
sub
pop
gs
pop
das
and
add
or
mov
jmp
or
lcall
jecxz
scas
std
mov
sub
lahf
andps
leave
push
daa
jnp
fimuls
or
nop
div
push
xor
ret
test
faddl
int
ret
dec
cmp
push
jnp
mov
fwait
jp
fadds
mov
cltd
pop
push
cwtl
lea
fists
repz
inc
dec
jg
sub
mov
movsb
dec
fsubs
add
push
sub
in
jo
lcall
lds
sbb
pop
popa
clc
ds
cwtl
or
stc
loope
fmull
nop
lret
xor
pop
xchg
aam
neg
sahf
cltd
jle
jg
ficompl
pop
popa
stc
mov
fadds
shl
add
cmp
inc
mov
cmpsb
dec
lods
out
mov
xlat
fcom
mov
mov
lret
int
push
sub
dec
pop
int3
xchg
addr16
xchg
xchg
sub
sahf
sbb
cmpsb
and
cmpsl
insl
jae
into
pop
or
and
cmpsb
push
xchg
call
adc
push
adc
pop
int3
loope
popa
xor
add
mov
int
push
sub
mov
dec
test
jl
push
cmc
and
jge
sub
sbb
stc
xor
sarl
in
pushf
cmp
cld
ja
cwtl
leave
cmc
lea
fldenv
popa
mov
icebp
xchg
xchg
sarl
mov
sbb
je
test
push
xchg
mov
push
pop
jbe
mov
loop
mov
lods
mov
test
aad
fldenv
je
nop
pop
dec
outsb
pop
add
xchg
inc
fs
mov
pop
xor
add
jl
sarb
xchg
inc
in
mov
adc
xor
or
lret
in
push
push
dec
push
and
js
fdivs
sarb
lods
mov
xor
mov
pop
iret
push
repz
inc
add
inc
leave
out
add
cwtl
push
je
int
mov
leave
cmp
pop
add
pop
cmp
loope
jmp
mov
jno
xchg
inc
mov
pop
fmul
out
bound
lds
popa
dec
pop
clc
xchg
inc
jno
inc
inc
pushf
andl
sub
cmp
out
fidivl
cmp
sahf
cmp
sub
xchg
sub
cmpsl
push
pushf
or
xchg
xor
jbe
fildl
adc
push
daa
in
add
mov
lods
push
orl
sbb
iret
lcallw
lock
pop
xchg
mov
jnp
adcb
push
ret
sub
subl
xchg
inc
lock
repnz
pop
pop
or
push
mov
add
push
sar
cmp
push
cmp
jecxz
mov
xchg
fimuls
xchg
pop
int3
pop
add
jne
sbb
xchg
and
sbb
pop
daa
add
mov
pop
pop
cmp
popf
jbe
mov
mov
mov
loopne
jno
rcrl
mov
fs
xor
imul
out
jno
cmpsl
ja
insl
mov
jns
push
pop
addl
daa
hlt
int
add
jbe
rcl
add
pop
sbb
je
or
and
ljmp
aas
jno
inc
stos
jae
lcall
pop
and
rclb
fists
adc
in
fimuls
lcall
adc
mov
push
mov
nop
inc
shl
mov
dec
cld
sarl
cmp
out
shl
cld
dec
jnp
daa
mov
test
xchg
push
mov
pop
fnstcw
mov
gs
jns
testb
add
roll
xor
movsb
xor
cmp
jae
rol
mov
adcb
inc
gs
arpl
mov
std
loop
ds
scas
or
pushf
mov
imul
mov
fs
add
mov
enter
ds
pop
iret
cmp
pop
mov
testl
pop
mov
lds
repz
sbb
jae
jl
lods
fldl
push
data16
outsl
jae
add
jge
sahf
dec
das
pop
cmpsl
arpl
xchg
lret
lods
cli
push
loopne
xchg
clc
jae
shll
dec
xlat
mov
cmp
cld
cwtl
ror
ja
mov
and
mov
push
sub
mov
lret
in
fdivrl
adc
leave
inc
cmp
add
mov
sbb
xchg
adc
xor
pop
pop
adc
std
push
xor
leave
imul
mov
ret
mov
sub
fisttpl
orb
test
push
std
jmp
sbb
adc
repnz
loopne
addr16
mov
in
push
in
mov
hlt
mov
jne
pop
mov
repz
xor
jl
gs
inc
subl
or
xor
push
sub
lods
mulb
imul
mov
dec
xchg
jae
hlt
movsl
or
stc
cmp
es
aad
inc
pop
mov
lret
adc
lds
xchg
sbb
mov
cli
push
xor
clc
lea
stos
sub
outsl
jo
cvtps2pd
in
sub
scas
adc
adc
nop
add
jbe
jae
shrb
ja
adc
arpl
mov
xlat
sbb
pop
fdivs
pop
cld
inc
inc
fnsave
movb
xor
xor
loope
inc
test
fldt
outsb
fbstp
das
lock
push
js
cmpl
or
ss
idivl
inc
pop
je
adcl
push
add
pop
das
pop
dec
imul
jl
imul
inc
loope
rcl
mov
popa
push
sahf
add
jl
mov
out
ja
inc
mov
cmp
pop
pushl
icebp
shrl
pop
lods
mov
push
dec
inc
inc
dec
loopne
cmp
pavgw
xor
sarl
inc
mov
or
xchg
xchg
mov
pop
mov
in
pop
movsl
xchg
fs
ljmp
pop
pop
xchg
nop
sbb
inc
jne
xlat
xor
cmc
sbb
cmp
ret
jno
lods
sub
add
scas
push
mov
and
bound
inc
pop
dec
out
and
mov
fiadds
addr16
loope
cmp
leave
xchg
adc
rcrl
lods
imul
subl
ss
andl
xor
loop
inc
xor
dec
in
js
and
mov
cltd
sub
or
cmpsb
inc
cmc
je
add
cs
mov
stos
faddl
xor
pop
ja
lea
push
lock
in
xchg
mov
fadd
adc
xor
icebp
mov
pop
clc
xorl
jg
ret
and
testl
fs
repnz
cmpsl
mull
adc
push
subl
ret
roll
rclb
and
mov
add
lea
sub
fists
dec
shlb
stos
nop
icebp
or
lret
gs
inc
aad
xor
sub
scas
mov
pop
and
jne
cmp
or
fwait
outsl
adcb
fcomps
stos
fcompl
mov
xor
push
pushw
das
stos
pop
fdivr
out
adcl
int3
mov
xchg
xchg
movsl
inc
adc
stos
clc
sbb
jno
sub
loope
call
sti
and
out
pop
ret
fwait
cmp
mov
cltd
aam
pop
scas
xor
outsb
hlt
xor
mov
das
jno
mov
mov
mov
pop
cs
jecxz
jnp
adc
in
decl
cmp
aaa
lret
popl
mov
dec
cmpsl
loop
jbe
out
enter
dec
dec
js
pop
bswap
add
mov
sub
es
dec
adc
or
out
mov
movsb
xorl
mov
addr16
pop
ret
push
xor
mov
mov
sbb
stc
dec
dec
jg
sub
mov
pop
enter
push
sbb
inc
lahf
mov
add
iret
jg
push
add
xlat
leave
shrb
cmp
jnp
clc
je
aam
imulb
lds
mov
jo
inc
push
xor
jmp
sub
sub
out
ror
stc
and
mov
pop
insl
and
jmp
call
jge
insb
scas
inc
inc
movsl
and
push
out
mov
push
test
jp
add
mov
mov
in
jge
ss
sbb
adc
fidivrs
push
cld
cmp
std
xor
cmpsl
hlt
insl
scas
stos
adc
gs
out
scas
out
pop
lods
or
shll
call
lock
or
push
pusha
sub
mov
jl
xor
out
and
xor
int
mov
or
sbb
pop
hlt
and
mov
addr16
test
call
push
lret
jecxz
data16
jl
sub
loop
inc
lods
sbb
loopne
or
dec
mov
push
stc
fwait
andb
scas
xor
push
icebp
inc
test
mov
int
mov
or
mov
pop
aaa
into
mov
aam
cli
mov
inc
push
sub
push
mov
mov
cmp
repnz
dec
rcll
cli
fmuls
inc
in
jp
xlat
sbb
or
jo
jo
ret
imul
mov
in
pop
jns
ret
fnstenv
xor
mov
movsl
sbb
inc
fwait
test
les
mov
lea
js
cmp
fiaddl
xchg
jg
std
mul
cmpsb
les
sarb
mov
push
sbb
shlb
movsl
mov
sbb
push
xor
jl
ljmp
xchg
xor
cmp
or
xlat
loop
cmp
aad
out
enter
imul
xchg
sbb
or
imul
insl
jb
or
mov
loope
fdivrs
ja
stc
ret
cmp
imul
lods
hlt
add
pusha
mov
lret
sub
jmp
insb
jge
bound
push
dec
sahf
xor
pushf
dec
add
popf
cmp
hlt
ds
push
mov
inc
adc
lock
lcall
int
jne
cmp
notl
xor
in
dec
scas
icebp
dec
mov
or
inc
push
mov
cmc
push
mov
ror
cmp
ss
adc
jo
push
arpl
popa
dec
pusha
cmp
xor
js
icebp
and
fisubrl
cld
mov
mov
fstpt
dec
dec
mov
por
stos
inc
clc
mov
mov
xor
movsl
loopne
xchg
jmp
dec
lret
lret
lahf
fistpll
mov
outsl
fidivrl
out
cmp
popa
cli
jmp
jo
fsubl
fistl
sahf
je
jne
in
cltd
mov
adc
int3
sbb
push
gs
stos
loopne
or
mov
cmp
push
leave
mov
jae
sbb
jns
push
push
fcompl
lret
push
das
sbb
cmp
push
push
and
iret
mov
ljmp
dec
js
jno
in
pushf
inc
sub
sub
pop
and
pop
inc
lock
mov
repnz
shll
inc
bound
lret
sarl
lock
jecxz
lea
sbb
xchg
fisttpll
mov
inc
mov
imul
cmc
sbb
test
pop
ret
aam
in
inc
addr16
pop
sbb
shrb
sbb
mov
xlat
faddl
faddl
pop
stc
sahf
mov
dec
pop
jmp
dec
call
adc
push
push
mov
pushf
dec
or
bound
mov
sbb
xor
dec
mov
fldl2e
inc
stos
push
in
pop
adc
andb
fldcw
push
cmp
clc
push
xchg
arpl
mov
rorb
aad
pushf
mov
imul
xchg
or
stos
stc
cmp
add
shll
xchg
adc
test
or
pop
movsb
pushf
test
sub
xchg
mov
jb
dec
lret
jae
leave
or
and
jecxz
pop
push
dec
push
mov
adc
aam
out
outsl
ficoms
mov
cmpsl
mov
adc
daa
mov
lods
les
fnstsw
dec
jbe
cmc
mov
push
mov
sub
jge
adc
cltd
jg
fwait
push
insb
push
xor
pushf
fiaddl
test
sub
jb
or
das
mov
or
inc
sub
mov
dec
data16
cld
push
push
fiaddl
out
mov
inc
adc
std
cmp
loopne
popf
dec
sub
scas
in
pop
jge
jbe
and
dec
sbb
jmp
inc
jmp
sbb
mov
mov
xchg
lahf
cld
aad
dec
ja
je
rcrb
fdivrp
popf
xchg
xor
jmp
imul
out
ds
int3
test
test
xlat
mov
pop
ret
push
add
ret
fbstp
bound
sbb
ja
sub
xor
mov
xor
jmp
loop
scas
outsl
iret
ret
shll
push
lret
inc
divl
lahf
push
xchg
js
mov
push
sbb
bnd
push
mov
daa
fistpl
inc
sbb
or
dec
cmp
je
push
or
mov
pop
mov
iret
mov
xchg
in
cmp
and
test
and
lods
in
popf
and
sbb
dec
fisubrs
xor
pop
aaa
mov
fiadds
incl
xchg
ret
cltd
xor
clc
fcompl
test
push
pop
xchg
pop
fcmove
movsb
je
movsl
sbb
out
rorl
jl
test
cmc
jns
xchg
and
jno
decb
aas
shl
pop
xlat
and
test
xor
inc
divb
sub
xor
dec
outsb
es
adc
imul
jne
ret
mov
pop
daa
sbb
hlt
sbb
push
jae
xchg
stc
push
xor
or
jecxz
inc
test
inc
out
cs
jmp
int3
lret
in
sbb
outsb
repz
fcomps
cmp
movsb
addr16
mov
mov
mov
push
xchg
or
loope
mov
jmp
cmp
mov
aad
repnz
jmp
sbb
cmp
rcpps
mov
out
loopne
xchg
sahf
pop
adc
xchg
fwait
mov
dec
sbb
dec
stos
add
xor
pop
mov
cmp
inc
mov
jle
lret
jle
mov
mov
pop
std
jo
cltd
bndstx
imul
inc
xchg
xchg
inc
fistpll
push
dec
jae
nop
je
jmp
xor
xchg
scas
pop
pop
fidivs
lahf
xorl
cmpb
pop
ss
xor
add
lret
pop
dec
cld
mov
xor
sbb
pop
mov
orl
call
outsl
test
sub
test
cwtl
xor
cmp
add
stos
push
xor
add
mov
jae
and
sbb
mov
daa
and
jl
aad
out
mov
out
out
push
flds
mov
popf
aaa
and
sub
popa
mov
mov
subb
shll
fsubl
sbb
push
mov
mov
push
jnp
cmp
dec
out
ficomps
jo
push
add
jne
xchg
cmpsb
adc
rcl
scas
nop
jno
and
inc
pop
xchg
ljmp
ret
jne
clc
and
jno
add
nop
lret
fmull
sub
pop
inc
xchg
mov
jae
cmp
sbbl
xor
pop
gs
sub
loopne
mov
lods
cwtl
stc
add
push
movsb
dec
push
sbb
cmpsl
arpl
jnp
out
mov
and
mov
mov
xor
cli
lods
loope
pop
lcall
hlt
xor
pushf
les
mov
arpl
ja
loop
in
loop
daa
pop
insl
inc
es
dec
jmp
out
nop
xor
cmp
mov
decl
ror
mov
pop
cwtl
and
ret
ljmp
in
ss
jecxz
rcll
inc
add
mov
addb
das
xchg
test
inc
xchg
out
es
outsl
es
repnz
shll
push
xchg
fnstsw
int
sbb
jmp
test
orb
lock
mov
addr16
rclb
in
jo
pop
sbb
or
mov
jge
sbb
xchg
out
mov
aam
sbb
shrb
or
aas
push
pop
mov
jmp
shl
jmp
push
stos
mov
add
nop
mov
std
push
jg
fst
fwait
xchg
popa
lods
or
mov
dec
jae
inc
fdivs
je
cld
xor
inc
xor
ljmp
scas
cmp
aam
mov
jne
nop
xor
push
fists
mov
mov
cmp
add
stc
sub
shl
emms
add
sub
xchg
lea
xchg
icebp
scas
nop
popf
inc
ja
pop
mov
lret
push
das
sbb
push
fwait
add
stos
pusha
int3
int3
jmp
mov
loopne
adc
xor
cmp
inc
repz
scas
fistpl
daa
add
xchg
add
or
mov
add
fnstcw
fbstp
or
scas
loope
pusha
popa
ret
jno
jmp
or
out
andb
add
dec
cmp
push
mov
cwtl
push
out
stos
aad
lret
mov
xchg
stos
enter
fsubrl
xchg
or
add
test
mov
out
push
sbb
jle
jle
sbb
lods
mov
in
jno
out
jle
lods
sbb
out
test
pop
xchg
out
or
sub
dec
mov
roll
mov
pop
cwtd
shl
and
shl
dec
stos
add
and
aad
icebp
outsb
rclb
mov
sub
movsb
mov
fistps
or
mov
lret
loopne
sub
jbe
cmp
sub
cwtl
cmpsl
sbb
lods
js
sbb
in
out
and
sbb
dec
adc
test
xchg
pushf
pop
jb
cld
loop
inc
in
hlt
sub
sarl
inc
scas
add
enter
outsl
push
loopne
push
fidivl
es
ret
push
popa
xchg
clc
out
int3
loop
lea
and
mov
push
pop
sbb
xchg
adc
sub
inc
ja
xchg
in
movsl
mov
insb
cmp
sub
ds
icebp
sbb
and
les
fimuls
xchg
in
loope
mov
test
jmp
push
xchg
in
mov
dec
mov
inc
rep
arpl
aaa
or
push
jno
jl
out
xchg
cmc
ficompl
test
div
cmpsl
testb
mov
stos
loope
movsb
jnp
mov
in
rcrl
imul
xor
mov
mov
sbb
pop
mov
adc
mov
test
sarb
adc
std
fwait
jne
and
xchg
push
sbb
inc
out
mov
dec
aas
cmp
add
pop
xor
add
xor
xchg
mov
adc
mov
test
mov
push
and
into
inc
jbe
pop
sub
aad
divl
mov
sub
test
mov
lods
pop
jb
pop
cmp
pushl
or
into
jg
push
outsl
add
les
mov
mov
das
jbe
std
add
inc
jecxz
mov
xor
ret
xchg
aaa
jne
or
ss
mov
and
idivb
jne
rorl
xchg
pop
and
jb
popa
ss
ss
fwait
xchg
lock
cld
dec
cmp
add
fcomps
mov
pop
call
fisubrl
xor
sahf
loop
sub
push
lret
mov
dec
inc
cmp
cmp
mov
mov
icebp
mov
outsl
mov
rorl
sub
or
fchs
mov
rcrb
push
and
push
jb
and
inc
push
or
pop
seto
jb
or
notb
jp
or
leave
cmc
testl
add
in
pop
mov
fnsave
mov
push
push
shrl
jnp
cwtl
jno
out
cmpsb
and
loop
mov
stc
testl
mov
dec
insb
nop
lahf
sub
mov
popa
orl
insb
mov
adc
insl
jp
and
mov
inc
xor
cs
push
repnz
inc
cmpsb
mov
nop
mov
aas
xor
or
das
mov
inc
mov
push
inc
mov
and
mov
mov
gs
out
mov
fninit
cmpsl
fwait
cmpsb
loop
dec
repnz
dec
push
movsl
jb
stc
sbb
sahf
stos
fwait
mov
iret
test
xor
iret
sub
mov
std
repnz
cmc
xor
jle
or
mov
lods
ds
stos
fidivl
dec
xor
loop
lods
test
dec
dec
mov
cmp
pop
out
int
call
sbb
popa
xor
outsl
mov
xchg
adc
sbb
loopne
fistpll
cmpsl
inc
adcb
push
or
push
xchg
mov
ljmp
sub
mov
mov
in
int
sub
mov
loopne
adc
shr
mov
loop
ja
jmp
or
std
mov
inc
cmpsl
xor
xor
jns
ret
in
outsl
pusha
addr16
pop
add
xchg
cmp
gs
xor
sbb
jecxz
aad
mov
jne
adc
mov
lcall
mov
or
xchg
lock
jp
mov
mov
sbb
das
scas
imul
mov
jmp
ror
clc
leave
xchg
rclb
add
adc
xchg
mov
xlat
pusha
pop
loop
sahf
aad
int3
maxps
mov
mov
lahf
bound
andl
popa
fsubrl
aad
dec
and
and
mov
jae
pop
pop
mov
xchg
je
rol
aam
cwtl
imul
pop
push
loop
dec
sub
pushf
sub
and
ret
xor
leave
in
in
das
ret
test
outsb
pop
inc
mov
divl
pop
out
mov
pop
fisttpl
lret
push
xor
arpl
test
dec
inc
mov
mov
fwait
cld
push
push
in
mov
mov
mov
add
or
inc
adc
scas
loop
sahf
jae
pop
ja
int3
jo
fiadds
lret
iret
xlat
into
hlt
test
inc
add
add
fisubrl
iret
jecxz
mov
lock
ja
push
xor
dec
filds
inc
jmp
push
test
push
rclb
cmp
es
jno
cmpsb
adc
xor
sbb
sub
mov
adcl
dec
lahf
or
ror
movsl
fbld
or
adc
add
sub
mov
shrl
mov
int3
add
pop
and
mov
testb
push
mov
add
mov
lcall
bsr
adc
pop
pop
je
addr16
cmpsb
push
mov
pop
cmp
xlat
gs
jno
popf
sahf
jmp
repz
out
test
pop
adc
and
jmp
loope
pop
mov
adc
jne
in
scas
loopne
ret
jg
stos
test
out
je
mov
cmp
push
cmp
sbb
ljmp
push
jecxz
mov
aam
jbe
bnd
pop
cmp
out
stos
and
push
into
stos
lock
cmp
add
sbb
push
mov
les
or
sahf
inc
dec
in
dec
xor
loope
ret
mov
sbb
iret
and
dec
push
jmp
xchg
inc
cli
cli
and
mov
roll
inc
jle
xchg
or
add
jne
add
jb
mov
inc
inc
pop
insb
sbb
dec
and
sub
mov
and
inc
dec
push
sub
psubsw
push
popf
int3
xchg
sahf
cltd
dec
mov
les
cmc
mov
shrb
sti
cld
loopne
mov
je
popa
cltd
add
mov
or
or
push
adc
test
and
lcall
test
test
sub
pushf
leave
mov
mov
cmp
cmp
fsubs
lret
repz
push
pop
mov
adc
bound
sub
mov
cs
imul
clc
scas
outsb
out
icebp
cwtl
mov
pop
cmpb
je
out
sbb
push
ljmp
fs
mov
es
mov
ljmp
mov
mov
orl
or
lock
sar
jae
aaa
inc
shrb
add
inc
dec
xchg
pusha
push
pop
lret
stc
mov
dec
call
mov
jmp
fcmovnbe
stos
shl
loopne
lds
rcrl
xchg
mov
cli
dec
leave
sbbl
mov
pusha
mov
data16
stc
mov
xor
mov
cwtl
sahf
mov
in
insl
lds
push
and
jg
out
lret
push
ja
jle
jne
xor
dec
out
or
mov
imul
cmc
outsl
mov
les
pop
fstpl
xchg
scas
jae
test
mov
or
enter
sub
mov
lcall
pop
lods
pslld
pop
in
mov
je
mov
ret
shl
iret
inc
lock
add
jnp
in
xor
mov
jecxz
sbb
mov
push
addr16
clc
lods
stos
adc
das
and
lock
cmc
dec
xchg
sbb
gs
inc
shl
sysexit
mov
fs
sbb
sub
mov
mov
add
cmc
or
mov
mov
xchg
pop
mov
xor
jns
mov
cmp
mov
je
sbb
cmp
mov
xor
mov
rorb
mov
pushf
cmp
int
sbb
loopne
aam
add
push
hlt
es
das
xor
adc
jge
std
lds
jp
adc
cli
loop
movsl
bound
lcall
push
loop
xchg
mov
in
or
aam
xor
mov
dec
daa
push
mov
movsb
repz
popa
iret
sub
mov
add
pop
pop
inc
nop
sbb
gs
inc
pop
rorb
push
push
add
ss
sti
sbb
bound
cmpsb
mov
repnz
lret
mov
mov
outsl
aas
or
push
movsl
cmp
push
dec
mov
inc
sar
scas
test
inc
xor
mov
pusha
pop
mov
test
pop
xchg
out
pusha
aaa
mov
std
or
dec
testb
and
lds
xchg
sub
or
out
sub
mov
adc
fsubl
or
addr16
cld
pop
xchg
mov
repnz
enter
cmpl
mov
clc
jne
lahf
jecxz
adc
xchg
mov
and
mov
clc
andb
loopne
sarl
lahf
pushf
movsl
pop
ret
stos
jno
adc
pop
or
xor
pop
dec
mov
pop
ljmp
cmp
adc
mov
outsl
cmp
int
jae
outsl
adc
push
adc
push
pop
or
push
sahf
pop
in
jg
fidivs
idiv
mov
mov
push
cmc
mov
dec
ss
daa
test
mov
pushf
test
sub
sbb
xchg
dec
test
adc
cli
cmp
outsl
les
int
imul
test
sti
in
lock
push
xor
mov
mov
xor
add
mov
cmp
cld
pop
xor
scas
xchg
mov
mov
mov
xor
jg
mov
push
pop
adc
jae
cli
adc
inc
ljmp
iret
rcr
jg
je
fmull
leave
loope
cmc
sub
dec
popa
xchg
insl
mov
xchg
stos
jnp
movsb
or
jns
sub
xchg
mov
mov
cld
imul
push
sbb
push
cmp
cmp
popf
sarb
ret
ljmp
pop
shll
push
or
pop
push
push
cmp
lea
aaa
cmp
shll
fidivrl
xchg
jmp
push
scas
pop
mov
sti
test
popa
mov
lods
int3
icebp
sarb
mov
sub
cli
frstor
cwtl
andl
arpl
jo
into
add
insb
push
push
pop
or
shll
in
add
pop
mov
mov
sbb
mov
pop
push
or
daa
rcl
jle
inc
pop
cs
fsts
mov
daa
iret
xchg
insb
cmpb
mov
lret
repnz
les
pushf
les
pop
inc
push
roll
clc
cli
mov
aad
je
push
sbb
test
leave
int3
pusha
movsb
push
pushf
adc
out
popa
dec
popa
adc
nop
jecxz
out
sbb
pop
popa
jge
enter
mov
pop
xchg
lods
cld
inc
jbe
xchg
sti
cmp
imul
out
popa
cmp
dec
cmpsl
repnz
clc
xchg
pop
and
shrl
mov
push
das
movsl
adc
pop
pop
js
sahf
call
loop
dec
xchg
xor
mov
mov
lret
push
dec
fldt
aam
xchg
cmpsl
add
bound
push
inc
rcrl
pop
daa
push
push
hlt
fdivrs
lret
xchg
loop
pop
lods
push
inc
data16
jne
ja
jmp
pop
mov
repz
jae
loop
cs
jl
push
adc
repz
cmc
ffree
outsl
adc
xor
pop
add
lods
loopne
pop
test
jecxz
test
rorl
add
nop
pop
lcall
or
xchg
and
pop
mov
popf
mov
jmp
stc
pop
pop
jae
dec
and
cmp
sahf
xor
cmpsl
mov
mov
xor
pop
pop
iret
insb
xor
cs
jno
jge
pop
add
sbb
fimuls
mov
lahf
pop
cmp
mov
push
mov
clc
mov
faddp
sub
decl
mov
nop
xor
iret
mov
jp
inc
scas
aad
jae
xor
mov
adc
mov
sbb
adc
je
sub
aaa
add
pop
dec
ljmp
jmp
adc
fnstenv
xchg
xchg
mov
adc
pop
nop
loope
movsb
ja
pop
inc
es
sbb
fwait
out
sarl
lods
xor
leave
pop
test
ds
in
mov
daa
lea
fsubl
fnstcw
xor
pop
shrb
in
push
stos
sbbl
sbb
mov
rolb
xchg
call
inc
push
xchg
xor
lret
mov
movsb
mov
or
mov
fisttpl
lds
inc
enter
push
pop
xlat
fdivrs
push
loop
or
sub
incb
nop
call
sub
add
sbb
sbb
into
call
and
add
test
aaa
sub
mov
mov
addr16
sub
xor
addl
inc
shlb
adc
loope
mov
sub
fsubrp
out
jmp
mov
jne
insb
pusha
xchg
lods
xchg
inc
aaa
inc
xchg
mul
out
ss
stc
fcmovne
call
iret
pop
cmpsb
mov
out
adc
push
movsb
mov
fwait
push
push
add
mov
sub
lods
mov
add
pusha
clc
insb
xchg
and
jae
jnp
jp
rcrb
or
mov
push
enter
xchg
inc
mov
xchg
test
aam
xor
shll
mov
mov
sub
notl
inc
pop
mov
jbe
mov
or
fwait
repnz
jo
shll
and
adc
cmp
xchg
movl
out
cli
sub
jl
lods
jecxz
xor
and
jge
push
mov
movsb
pop
or
adc
gs
and
test
push
ljmp
aad
nop
mov
cmc
test
mov
test
pop
lods
sbb
stos
scas
adc
jecxz
mov
out
arpl
sub
hlt
fsts
leave
and
icebp
cmpsl
adc
or
popa
jb
cmpsl
cmp
xlat
xchg
mov
dec
mov
sbb
loopne
push
insl
scas
cwtl
rclb
adc
popa
inc
icebp
mov
fistpl
xorl
mov
sub
mov
sbb
lret
fdivrl
outsl
and
or
mov
pop
xor
int
push
xchg
jg
sbb
ljmp
pop
or
mov
inc
adc
sub
loop
faddp
xchg
movsl
jg
jmp
into
cs
jbe
pusha
daa
adc
shrb
xchg
rclb
xor
data16
into
sbb
jae
fcom
sbb
inc
inc
mov
lock
mov
loope
cmp
mov
mov
xor
fcoms
out
fsubr
push
mov
push
popf
sbb
jbe
out
cmp
cmp
imul
mov
test
add
sti
push
add
int3
and
pushf
andl
push
scas
fisubrl
mov
decl
push
in
cmpsl
dec
ds
movsl
ret
dec
adc
stos
into
xor
dec
mov
push
or
icebp
out
mov
xor
mov
xchg
lret
cmpsl
adc
dec
push
fcomps
movsl
push
aaa
fcomip
inc
push
pop
dec
les
fcompl
jecxz
mov
mov
pop
cmp
adc
jb
aad
out
dec
sub
test
imul
pop
sbb
out
test
jno
mov
rcrb
sarb
loope
xor
sbb
cs
sbb
add
dec
int
shlb
add
fstps
lock
ret
shll
insl
sbb
sbb
inc
pop
ss
lods
movsl
mov
adc
sbb
hlt
xchg
inc
test
pop
clc
arpl
in
iret
xor
daa
xchg
rolb
mov
add
or
pop
add
or
sub
rorb
fcmovnu
push
adc
loope
in
sbb
rolb
imul
mov
rcrb
movsb
bound
sub
add
je
xchg
out
push
xor
outsl
lods
jl
hlt
mov
insl
pushf
mov
ror
aad
mov
pop
or
pop
cmp
in
xchg
and
shlb
rcrb
jp
mov
pop
cmp
pop
dec
and
out
nop
and
stc
aam
adc
shr
sarl
rcl
out
pop
nop
test
lds
mov
out
adc
xlat
clc
in
xchg
inc
xchg
dec
jbe
clc
inc
cmp
rcrl
into
pop
pop
pop
pop
in
push
xchg
iret
fcoml
mov
lea
xchg
push
test
pop
pusha
aas
mov
mov
xchg
mov
cld
dec
xchg
outsb
mov
pushf
sahf
adc
mov
repz
movsl
cmp
push
subb
xchg
sbb
pop
outsl
adc
lock
test
pushf
add
sbb
and
mov
xchg
sarl
stos
pop
jne
out
sub
push
ds
out
push
shr
inc
pushf
add
aas
jns
imul
jg
outsb
and
add
shl
mov
insl
mov
and
jae
cmpsl
or
out
cmp
xlat
xchg
div
jl
mov
cmpsb
hlt
mov
dec
ljmp
inc
sub
paddq
jbe
in
inc
add
mov
lahf
xchg
repz
mov
xchg
xor
xchg
and
mov
xor
push
div
push
les
xor
ljmp
pop
dec
pop
jbe
sbb
xor
add
or
cs
xchg
cmpsb
mov
cmp
or
mov
adc
and
mov
das
adc
jno
cmp
and
pop
sub
cmp
ljmp
xor
scas
xchg
sbb
lret
cs
loopne
sbb
xor
jnp
dec
and
fs
aaa
xchg
cmp
adc
ficompl
xor
adc
movsb
outsl
dec
sbb
fiadds
lcall
and
insb
not
testl
cmp
arpl
fisttpll
xorb
inc
icebp
sbbb
inc
adc
addb
jne
dec
adc
imul
mov
mov
es
out
sbb
jo
aad
xchg
cs
mov
push
cwtl
adc
jne
fs
jo
out
mov
cmpsl
stos
insl
xchg
adc
inc
xchg
dec
inc
jecxz
lea
jge
xor
cmp
aas
jle
leave
cmpsb
lcall
andl
ficoms
pop
insb
shl
in
cmp
push
cmc
repz
loop
aaa
insb
add
out
pop
addr16
je
mov
adc
loopne
xor
or
xchg
mov
or
inc
jno
pop
bound
addr16
adc
out
push
into
stc
mov
test
test
mov
rcl
test
mov
movsl
movsl
pop
adc
loop
xchg
andl
ljmp
mov
testb
push
lods
nop
rcrl
mov
lret
xorl
mov
pop
test
sbb
jno
xchg
or
sbb
xor
sub
insb
loop
xchg
xchg
shll
shlb
jae
sbb
add
int3
sbb
push
in
xchg
inc
stos
cmpsb
fwait
or
push
cmp
stc
add
movsl
dec
push
neg
out
mov
test
inc
mov
ja
cli
xchg
loope
xchg
jno
mov
fiaddl
mov
jb
or
mov
out
mov
xor
cmp
repz
jne
mov
test
lret
mov
jge
cmpsb
inc
pusha
imul
inc
jg
punpckhbw
ret
js
shrl
push
iret
scas
and
jbe
fucomip
cmpsb
cmp
movsl
cld
push
fidivl
aas
decl
mov
xor
fstpl
xchg
mov
cmp
imull
test
mov
cmp
push
out
mov
pop
notl
test
mov
mov
push
in
adc
jne
xchg
push
adc
loopne
clc
pop
push
cli
or
aad
call
ljmp
iret
pop
xchg
out
add
sbb
jb
mov
cld
xchg
in
cltd
fdivrl
sub
push
scas
jbe
dec
out
mov
push
aam
mov
xchg
jl
jg
leave
cmc
out
xor
sbb
mov
lea
push
test
add
fisttpll
leave
cmp
mov
adc
repnz
out
int
add
stc
sub
or
jmp
cmp
int3
mov
in
icebp
xor
mov
pushf
mov
sub
hlt
ret
fisubrs
and
dec
fnsave
ud0
mov
mov
fbstp
push
inc
test
xor
aad
pusha
adc
mov
dec
pop
and
shlb
fadds
movsb
popa
pop
mov
push
mov
adc
cmp
call
ja
lcall
clc
mov
outsl
pop
xor
addb
xor
fs
lock
mov
enter
pop
push
aas
xlat
stc
popa
int3
sub
pop
inc
jle
jnp
jns
data16
mov
int
xor
cmp
fsubp
xchg
push
das
push
xor
scas
pop
cmpsb
mov
lods
mov
mov
xor
sti
js
cli
fwait
call
or
inc
mov
out
push
fstl
popl
and
loope
lea
mov
inc
cs
daa
sbb
stc
cmp
inc
cmpsb
stos
mov
xor
mov
sub
sub
inc
lahf
sbb
push
jne
aad
or
popa
lcall
mov
push
push
adc
mov
add
mov
pop
sbb
loope
es
pusha
jns,pn
cwtl
inc
cmpsb
pop
sbb
out
inc
xlat
sbb
rcrb
lods
sub
pop
push
in
lock
sti
and
ret
fsubs
xor
ss
les
gs
pop
rorb
sarl
and
dec
shll
pop
fidivl
and
aad
popa
dec
cltd
pop
push
jns
outsb
dec
sub
in
jb
cmp
pop
push
mov
xchg
cmp
jp
insb
stos
not
xchg
or
rcr
jne
popf
int
adc
out
sbb
imul
jmp
mov
clc
shll
or
adc
adc
movsb
stc
cmp
mov
in
pop
cmp
jns
push
int3
inc
xchg
int
stos
inc
int3
cmp
or
or
lcall
addr16
or
jg
adc
lock
rcl
push
xor
int3
aam
cmc
xorl
and
stc
xorb
outsl
pushf
idiv
imul
fildl
cli
test
roll
ss
mov
test
mov
inc
out
into
xchg
arpl
stos
dec
sbb
fldl
jmp
mov
sub
push
dec
sub
nop
or
pop
iret
mov
lods
and
insl
mov
lahf
xor
fwait
scas
jo
loopne
xor
push
dec
push
daa
outsl
popa
xor
pop
test
push
cmpsl
outsl
xor
leave
add
xchg
rcrb
pusha
test
cmp
xchg
jle
insb
add
fwait
or
adc
sahf
push
push
dec
lods
push
imul
jo
scas
adc
mov
gs
fwait
mov
mov
ljmp
xchg
pop
pop
in
addb
pop
insl
nop
xor
inc
or
iret
dec
pop
fcoms
pop
mov
adc
in
mov
mov
push
and
rol
jno
imul
xchg
push
ljmp
xchg
bound
mov
mov
enter
data16
mov
dec
pop
fwait
neg
pop
adc
xorl
jns
push
adc
xor
xchg
add
lcall
mov
les
pop
aas
test
pop
out
push
and
imul
dec
shlb
stos
in
stc
gs
dec
mov
mov
push
iret
je
scas
cwtl
loop
pop
push
push
aam
pop
pop
fbld
iret
dec
and
movsl
mov
test
add
xchg
mov
sub
leave
test
sbb
sub
fsubrl
roll
sub
js
int3
stos
mov
call
pusha
sbb
dec
out
or
jge
push
mov
pop
jecxz
subl
add
xor
jb
ret
mov
roll
mov
and
sti
push
out
mov
mov
stos
or
aas
cmp
popa
movsl
xlat
aaa
imul
or
dec
xor
and
popaw
gs
mov
ret
das
inc
pop
xchg
scas
cwtl
cmpsb
xchg
push
jb
jge
push
scas
ss
sub
icebp
js
movsl
repnz
sbb
push
bound
scas
gs
and
frstor
dec
or
repnz
int3
fcmovne
push
add
outsb
addr16
loope
aam
mov
movsl
jp
cmc
cli
loope
pop
ljmp
ss
pop
pop
ret
hlt
pushf
lods
fnsave
dec
lret
int
mov
jns
ret
lds
mov
enter
add
mov
mov
jmp
ret
cmp
mov
pop
cli
icebp
lret
pop
lods
stos
shl
insl
dec
sbb
subl
inc
adc
mov
or
lea
in
sbb
sbb
xor
aad
jg
sbb
xor
mov
adc
shll
push
es
pop
mov
jns
mov
pop
add
rcll
jmp
ret
mov
popf
insl
xchg
inc
ficomps
test
cmp
inc
lea
adc
pop
inc
adc
pop
out
cmp
iret
sub
push
xchg
inc
sbb
fsubr
daa
xchg
ja
nop
cltd
mov
ss
rcrb
dec
inc
sub
mov
pop
mov
out
mov
icebp
dec
cmp
push
adc
adc
hlt
popa
repz
sarb
lds
insb
movb
imul
pushf
add
dec
decb
mov
sub
mov
inc
pop
xchg
add
mov
jp
loopne
cmpsb
cmpsb
lods
outsb
jnp
lea
divl
mov
dec
cwtl
inc
fcomip
bound
jle
xchg
cld
icebp
iret
adc
arpl
in
mov
and
adc
hlt
lods
icebp
jbe
hlt
sbb
mov
rcrb
aaa
jb
adc
adc
xor
push
movsb
push
andl
sub
subb
xor
addb
std
sbb
dec
int
adc
addb
mov
push
push
sbb
inc
ret
hlt
out
mov
ret
mov
pop
aad
js
xchg
sub
mov
or
into
inc
pop
push
es
shll
shlb
decl
adc
nop
dec
sub
mov
repnz
pusha
mov
addr16
cmpsb
mov
es
fisubl
les
and
mov
adc
mov
or
neg
lcall
addr16
jb
jmp
push
mov
sub
mov
xor
sub
mov
jecxz
cmp
repnz
and
and
fsubp
xor
xor
bound
sbb
scas
inc
loop
js
pop
loope
ret
xchg
pop
adc
sub
and
dec
orps
cmp
push
jge
movsb
stos
mov
je
mov
or
js
insl
imul
jecxz
mov
push
dec
jl
jle
enter
out
cltd
jmp
mov
sbb
cmpsb
xor
call
jae
push
sbb
push
lahf
mov
sbb
sbb
sahf
sbb
fsubrs
movhps
xor
xchg
sub
jno
ja
adc
mov
sub
inc
dec
jmp
xchg
vpavgb
and
aaa
sahf
pop
neg
mov
add
cmp
pop
lds
cvttps2pi
out
in
jge
jns
sbb
fcoml
lea
outsl
adc
into
xor
xchg
sub
cld
or
inc
mov
mov
add
aam
fwait
leave
jo
nop
fld
mov
push
inc
xorb
and
jb
push
pop
xor
icebp
popa
add
mov
neg
out
xchg
cmpsl
insl
inc
adc
mov
insb
lods
jnp
cld
imul
repnz
fs
cmp
in
jg
sbb
mov
push
lods
xchg
mov
mov
ror
movsb
pop
scas
jo
repz
int
pop
test
push
push
xchg
cs
or
dec
loope
test
std
cmp
jno
cld
jl
pop
js
and
xchg
test
xchg
xchg
sub
mov
sbb
mov
enter
add
inc
pop
lock
aaa
or
lcall
pop
pushf
lock
dec
mov
dec
mov
xchg
push
sub
sbb
in
cmpb
pushf
mov
cmp
and
mov
cmp
fs
fbld
fidivs
cld
outsb
js
cmp
jmp
dec
rorb
dec
lds
std
mov
cmovbe
imul
jb
dec
lock
mov
inc
jmp
mov
sub
add
test
into
repz
std
adc
cmp
xchg
insb
cld
jns
fprem
icebp
mov
or
dec
push
mov
push
push
pop
fldcw
fists
xchg
iret
jae
mov
push
add
push
inc
sahf
xchg
mov
rcll
sahf
jmp
scas
shlb
pop
int
jb
cmpsl
jl
jle
test
push
sub
cltd
int
js
add
movsb
cmc
cmp
loopne
push
std
mov
sub
mov
cmp
sub
scas
cmove
mov
adc
push
pop
vmovd
or
pushf
stos
daa
into
mov
sahf
imul
mov
sbb
aam
call
sub
fcmovnb
bound
sbb
mov
jp
lods
and
pop
or
sbb
adc
aad
inc
pop
sub
ja
jle
xlat
movsb
and
inc
std
mov
test
je
mov
pop
xchg
jnp
je
push
jb
ss
push
and
inc
jp
and
insl
ss
das
mov
stos
stos
insb
dec
mov
adc
jmp
push
lea
shll
mov
pop
dec
mov
push
sub
lcall
lcall
pop
mov
out
mov
jecxz
push
hlt
mov
mov
fcoms
mov
sub
inc
rclb
imul
shlb
in
pop
push
mov
fsubrl
pop
jbe
jge
addr16
fisubrl
movsb
dec
in
sahf
mov
jp
scas
stc
jg
push
xchg
lods
mov
stc
mov
pop
xlat
cmp
cmovl
fldcw
int
not
inc
pop
jl
out
push
jecxz
pushf
dec
push
aad
cmpsl
js
mov
roll
mov
int
in
mov
popl
jno
xlat
dec
nop
sub
inc
add
mov
and
inc
jno
sti
movsl
mov
lret
inc
xor
test
rcll
out
dec
and
lock
je,pn
dec
aaa
adc
cli
jnp
cmc
cld
adc
xor
ja
loop
push
je
pusha
add
aam
std
arpl
pop
aam
testl
pop
pop
mov
mov
dec
fstpl
imul
lret
mov
ja
call
adcl
pop
int
mov
ja
insl
inc
ss
jge
test
hlt
cmp
mov
push
mov
mov
pop
inc
sarb
push
pop
stos
shll
or
aas
dec
mov
ss
pop
add
jle
xor
cs
or
jp
or
cmp
inc
jecxz
outsl
cltd
in
mov
push
adc
mov
inc
mov
mov
adc
or
add
sub
les
pop
popa
loopne
out
ljmp
mov
mov
xchg
addr16
and
daa
ja
lods
arpl
repnz
inc
jnp
push
xor
cwtl
pop
push
sub
xorl
shrb
insl
cmp
std
and
popf
xchg
and
add
mov
and
sarl
dec
xchg
push
pop
mov
lcall
xlat
movsb
inc
mov
push
call
rcll
and
negl
ss
sahf
mov
jbe
lret
mov
cmpsl
adc
addb
lds
fldl
lock
sbb
push
mov
xchg
mov
movsb
jp
test
add
mov
cmpsb
imul
rolb
int3
dec
mov
push
adc
dec
or
xchg
out
ja
pop
imul
dec
add
fidivrl
test
sub
jae
mov
enter
cld
adc
and
enter
sbb
inc
shr
mov
enter
sbb
popf
mul
test
sub
ret
gs
lods
jo
xchg
int3
pop
outsb
das
sub
ja
cmp
bound
add
lock
addb
pop
movsl
push
dec
cltd
sub
or
rol
sbb
out
xchg
cmp
pop
pop
cld
mulb
push
dec
cmp
cs
dec
dec
mov
jl
mov
dec
out
jg
or
push
mov
inc
into
add
ja
out
cmc
test
test
or
repz
in
cwtl
push
xlat
shlb
ja
rcrl
jl
dec
dec
dec
mov
popa
or
stos
std
pop
jp
scas
nop
adcl
pusha
dec
arpl
gs
xlat
lret
sbb
push
jbe
fldcw
test
aam
xlat
jns
imulb
sbb
es
test
push
pop
push
nop
dec
std
call
mov
and
inc
push
iret
stos
test
pop
int3
dec
push
xor
imul
push
rcll
in
in
push
in
pop
pop
sub
stos
mov
xsha1
cmpsb
dec
fcmovnb
dec
cwtl
jbe
in
movsb
mov
cmpsl
xor
pop
inc
cld
pop
insl
dec
xor
subb
cmp
pop
mov
cmp
cmp
mov
shll
inc
sub
dec
jae
insb
dec
or
inc
into
pushf
push
pop
dec
mov
pusha
mov
xchg
sub
pop
jecxz
cmp
jle
jno
mov
jnp
daa
sbb
bound
lret
mov
mov
mov
xchg
push
mov
add
scas
pop
xor
xchg
cmc
divb
mov
int
mov
add
jecxz
lret
dec
arpl
or
push
pop
dec
ret
iret
cmp
cmpsb
jnp
mov
jmp
and
call
push
test
loope
jae
adc
outsl
pushf
sbbb
cmp
mov
scas
and
add
cmp
popf
mov
movsb
cs
or
sahf
lcall
push
jmp
xchg
jb
push
flds
in
add
hlt
sahf
dec
icebp
mov
addr16
adc
cmpsb
xchg
add
mov
shll
push
dec
mov
gs
add
cld
xchg
or
or
pop
jne
ss
scas
xor
sarb
movsb
cld
loop
adc
cmpsl
pop
inc
mov
lahf
or
popa
mov
frstor
mov
fdivl
jne
sti
stos
dec
nop
sub
sti
scas
adc
xchg
pop
es
jge
adc
mov
adc
jae
mov
cmpsb
sbb
dec
mov
xor
cmpsl
mov
jl
lods
sti
mov
xchg
sti
dec
insb
lock
cmp
cmpsb
jnp
inc
add
movsl
aad
and
push
fdivrl
cmp
negw
mov
add
and
clc
out
cmp
cli
cmc
sbb
movsl
xchg
fdivl
addr16
mov
xchg
out
lahf
popa
cs
or
lret
orl
sub
add
mov
pop
xchg
jge
out
push
cmc
push
icebp
gs
mov
pop
push
cmp
lock
mov
gs
fwait
je
or
mov
cli
push
repz
push
mov
mov
push
pop
push
in
mov
imul
lret
jns
pop
and
lret
dec
and
pusha
mov
sbb
jg
paddq
inc
into
xchg
mov
outsl
cmp
sub
pusha
aas
xchg
jecxz
add
lret
pop
sarl
pop
cmp
rorl
sub
mov
pop
loopne
ja
inc
cld
inc
inc
push
xchg
jnp
cmp
mov
adc
or
sub
cmc
or
inc
arpl
push
push
xor
stc
stc
push
lods
repnz
jmp
mov
je
outsl
dec
icebp
test
out
adc
dec
xlat
movsl
lods
jnp
fcmovu
pusha
sbb
dec
popf
testl
adc
pop
pop
dec
xlat
aam
add
in
mov
mov
fidivrs
dec
aaa
pushf
pushf
pop
pop
inc
addb
push
mov
push
or
dec
or
lock
out
xchg
dec
insl
fwait
and
scas
push
int
movsb
cmp
dec
adc
fwait
add
xchg
aas
cmp
xor
icebp
push
jo
clc
test
xor
pop
and
inc
gs
orb
fisttps
call
out
sahf
hlt
add
jmp
jb
inc
push
out
aaa
cmp
xor
mov
icebp
inc
mov
jmp
ss
sbb
test
aaa
mov
js
push
mov
clc
rcll
jge
pusha
mov
hlt
pop
sub
and
mov
js
mov
dec
int3
mov
mov
in
xlat
daa
mov
lds
sub
pop
arpl
ds
dec
add
cmp
lds
sti
xor
xchg
lcall
in
pop
mov
add
test
jno
pop
ja
pop
cmp
and
inc
jecxz
fs
ret
inc
jmp
sub
lret
lock
xchg
mov
push
test
push
lahf
outsl
adc
xchg
ds
jmp
imul
mov
cmp
sbb
ret
stos
fisubrl
daa
pop
imul
adc
mov
sub
ss
shll
cmp
in
scas
lock
inc
outsb
cmp
mov
movsl
mov
mov
adc
sahf
std
pop
lock
nop
fwait
mov
or
jns
int
jbe
pushf
xchg
popa
mov
xorl
shrb
enter
sub
or
dec
and
xchg
popa
or
not
aas
add
mov
jns
outsb
shlb
sub
push
fnsave
hlt
mov
push
lahf
cmp
imull
jecxz
jp
xor
cmpsl
or
int
xchg
fwait
outsl
jle
fldt
mov
test
addr16
xchg
subl
daa
add
jne
dec
xchg
inc
das
arpl
pop
dec
jns
lods
or
sub
mov
sub
pop
inc
mov
negb
test
insb
and
mov
jle
repz
fildll
or
pop
pop
or
jp
loop
mov
stos
mov
adc
clc
sti
cltd
jne
addr16
inc
gs
imul
inc
adc
testl
jns
push
or
fisubs
loop
jns
lret
jg
imul
test
mov
hlt
dec
dec
into
xchg
mov
xor
and
dec
mov
cwtl
clc
cmpl
pop
enter
outsb
fbstp
add
testl
add
lahf
pop
cmc
rcrb
sbb
pop
test
fistpll
push
jnp
lock
loopne
stos
ret
jmp
jo
je
xchg
xorb
imul
loop
mov
into
cltd
ss
icebp
repz
out
fiaddl
xchg
dec
pushf
popf
aas
xor
push
inc
es
xchg
insl
inc
pop
cmp
xor
enter
inc
mov
iret
xchg
aad
out
int3
jl
clc
std
mov
inc
ss
cmp
push
dec
std
test
call
insb
mov
cmpsl
sti
vmovdqa
outsb
movsb
out
rclb
idiv
pop
std
scas
insb
je
dec
and
mov
fildl
int
lods
mov
rolb
test
mov
inc
in
ret
pop
fxch
mov
roll
ja
stc
jle
xchg
aad
addr16
cmp
in
adc
enter
sti
xor
and
jmp
int3
repz
imul
js
xchg
loopne
sahf
inc
and
out
clc
and
add
loopne
push
iret
pop
sub
lock
dec
ds
xor
nop
mov
mov
bound
stos
mov
xchg
push
js
cs
xchg
lret
cltd
pop
and
xor
fcoml
adc
std
add
add
in
je
movsl
dec
mov
ss
xchg
frstor
sbb
pop
jno
jbe
sub
subb
pop
sbb
mov
enter
fsubs
xchg
and
mov
mov
mov
mov
int
xchg
or
idivl
loop
pop
cwtl
jp
cmpb
or
push
repnz
xor
out
hlt
sbb
sub
in
ret
in
dec
jle
mov
loope
stos
shlb
mov
call
inc
cmc
cmc
jmp
leave
lcall
fs
je
pop
adc
shrl
or
mov
cmp
loop
pop
jo
out
adc
stos
negl
inc
pop
pop
sub
inc
mov
sbb
mov
push
fidivs
jne
inc
or
idivl
jg
insb
outsl
sub
push
xchg
pop
add
test
in
pop
sbb
jmp
sysenter
ret
push
xor
mov
cmovbe
add
push
cltd
int3
mov
sub
mov
dec
xor
wrmsr
cmp
mov
inc
add
dec
out
pop
in
dec
push
adc
mov
scas
push
addb
mov
or
mov
adc
adc
fbstp
mov
nopl
les
mov
cmp
sbb
inc
fsubl
cmp
ret
push
push
lahf
call
in
sub
add
mov
mov
and
popf
mov
sbb
call
sbb
fcoml
nop
push
cmp
in
popa
push
mov
jo
daa
jle
fisubs
pop
mov
iret
push
push
fwait
mov
cli
jmp
push
xor
push
push
pop
popf
fmuls
cmc
inc
mov
xchg
dec
test
testl
adc
mov
sub
and
mov
pop
hlt
adc
lods
js
mov
pop
mov
shr
jmp
jno
enter
cmp
jns
fisttpll
add
stos
push
dec
push
mov
mov
mov
add
and
es
imul
mov
and
cmp
push
mov
xchg
jnp
adc
push
jnp
jl
hlt
and
xchg
sub
cmp
push
and
loope
push
mov
push
sahf
sub
loopne
or
add
loope
jmp
sbb
push
les
jge
jmp
popf
das
xchg
fisubl
aas
stos
ret
jae
lcall
lods
xor
mov
popf
rcl
out
je
or
xchg
je
and
push
jae
sarl
jmp
adc
mov
stos
jmp
inc
aas
xlat
push
jecxz
mov
lods
mov
stos
jp
lods
arpl
xchg
cmc
push
scas
aas
loop
mov
cmc
cld
popa
into
xor
xor
sbb
fnstenv
leave
jle
pop
sub
rolb
call
sbb
adc
fisttpll
pop
xchg
loopne
ja
adc
and
jno
into
repnz
scas
add
jnp
push
aad
cs
cmpsl
jecxz
in
test
sub
scas
lock
add
xor
leave
cmpsb
and
jb
xor
fldenv
cmp
xor
ja
or
sub
mov
mov
mov
pop
nop
xchg
add
mov
sub
mov
mov
imul
imul
push
pushf
sti
je
xor
pop
push
pop
add
push
insl
or
mov
fldenv
mull
rclb
pop
mov
pop
add
mov
fwait
xchg
pop
cmp
jns
sub
lahf
inc
jae
cmp
and
mov
jp
in
lods
ret
dec
ror
xlat
test
mov
repz
push
hlt
shl
shlb
fndisi(8087
xor
inc
sarl
mov
jae
or
aas
xchg
enter
mov
push
in
fs
movsl
adc
lcall
push
cmp
scas
inc
add
test
xor
fisubs
dec
jmp
dec
sbb
fldt
in
push
push
ss
call
hlt
mov
mov
je
ret
mov
jns
xchg
sub
mul
xchg
rcrl
test
fxch
cmp
ds
pop
mov
ret
push
xchg
xchg
sbb
push
lret
mov
ret
xchg
sub
cmp
out
rcrb
dec
mov
or
dec
mov
leave
gs
sub
jge,pt
mov
jmp
xchg
jge
loop
add
iret
mov
int
adc
sub
dec
adcb
and
ds
mov
or
call
leave
and
cmp
rcrl
mov
jno
lds
xchg
inc
jecxz
icebp
cmpsb
cli
scas
cltd
sbb
mov
or
movsb
dec
aas
cld
hlt
sbb
mov
outsb
inc
push
add
aaa
push
mov
add
stos
dec
test
cli
dec
into
mov
mov
repz
cmp
mov
stos
les
push
rorl
loope
cpuid
push
mov
ret
lret
pop
or
lods
hlt
rcrb
shlb
nop
and
and
scas
mov
sub
mov
push
xor
cmp
jbe
and
addb
vandpd
test
int3
mov
pop
movsl
test
and
mov
sub
mov
or
xor
xchg
inc
stos
mov
inc
lock
aaa
pop
inc
sub
mov
push
add
call
pop
mov
sub
or
mov
mov
push
in
lret
test
leave
xchg
addr16
xchg
je
std
mov
shlb
and
inc
jge
mov
pop
lret
pop
xlat
add
imul
test
icebp
dec
push
mov
out
ds
dec
mov
fcomip
mov
sub
sbb
inc
repnz
jbe
loopne
bnd
xchg
sahf
lret
mov
lock
das
lret
fwait
push
daa
pop
pusha
lds
and
sub
fcomps
lret
fstpl
dec
pop
dec
outsb
sti
jnp
pop
inc
inc
js
push
int3
xchg
popf
dec
shrl
aaa
js
push
dec
mov
dec
fistl
inc
xchg
dec
fs
popa
cld
cmp
rclb
and
xlat
fwait
jp
mov
or
cs
jo
inc
dec
xchg
aad
dec
lcall
dec
xchg
dec
pop
push
mov
xorb
sub
jns
cs
dec
data16
adc
push
inc
filds
lcall
ret
ds
xor
pop
into
js
outsl
into
mov
cmp
stc
stc
lahf
subb
fsubrl
fisubs
push
inc
mov
test
cltd
sub
das
divb
ret
xor
xchg
stos
jns
jg
add
xorb
adc
ret
pop
fistl
nop
bt
mov
and
out
addr16
aam
sbb
mov
dec
iret
jmp
addb
stc
out
sub
pop
push
arpl
jp
adc
popa
rcrl
dec
adc
call
dec
add
loop
jg
inc
lds
testb
fmuls
sbb
lods
div
lods
int
dec
loope
push
aas
repnz
cmpsl
insl
or
pushf
jmp
fcomi
cld
sti
xor
push
push
cmp
xor
repnz
jge
or
cltd
ficoms
xor
or
subl
lea
mov
lcall
push
iret
cmpl
sbb
dec
mov
std
mov
movsb
xlat
lods
mov
sahf
sub
pop
fimull
mov
mov
cmpb
and
jnp
inc
pop
adc
pushf
push
cs
nop
roll
xor
lahf
pop
adc
sbbb
rcll
mov
and
repz
lock
xchg
popf
mov
sarl
pop
xor
in
dec
aaa
leave
lret
into
lods
mov
or
into
data16
stos
and
mov
dec
test
sub
or
sub
cltd
pushl
sti
idivb
call
ljmp
loopne
rorb
dec
lods
sbb
ret
lret
adc
push
sbb
pushf
inc
ds
jns
pop
mov
mov
pop
pop
fs
mov
pop
xor
js
jmp
pop
and
or
in
push
ljmp
dec
aaa
adc
mov
outsl
imul
leave
out
inc
ret
call
inc
out
imul
jb
push
imul
test
sub
fcoml
sbb
scas
cmpl
push
adc
xchg
adc
pop
dec
lret
lea
or
pop
or
cld
movsl
int3
imul
jmp
lcall
adc
cmp
lods
cmp
je
mov
loope
inc
xchg
mov
test
xchg
xchg
xlat
insb
out
and
test
jae
ror
fmulp
sub
dec
mov
cmpl
push
fisttps
loope
cmp
js
sub
sbb
xchg
lock
icebp
stc
pop
mov
dec
pop
jle
pusha
inc
jb
popa
and
push
inc
cltd
je
test
mov
call
jecxz
or
dec
in
imul
xchg
adc
aam
mov
outsb
inc
sbb
adc
frstor
neg
push
ja
xchg
mov
mov
lahf
xlat
inc
xor
cmpsl
jno
jno
dec
jnp
jmp
pop
xor
mov
mov
xrelease
mov
inc
sarl
jge
int
vmread
addb
mov
mov
dec
push
sbb
out
cmp
cmp
cs
rep
mov
adc
push
loope
add
test
outsb
ljmp
sti
sbb
pop
out
aas
fnstsw
bound
mov
jb
and
fcompl
mov
lock
lret
sbb
ds
arpl
push
mov
or
mov
xor
ss
imul
push
cmp
inc
pusha
add
xchg
mov
sub
aaa
sub
fs
inc
iret
icebp
jge
je
mull
push
enter
lret
stos
pusha
repz
jae
mov
mov
fs
mov
lcall
dec
test
push
repz
pop
adc
das
xor
addl
roll
in
inc
pop
add
subl
lea
xchg
test
in
push
leave
jg
dec
pop
sbb
cmp
pushf
xchg
sbb
dec
add
fcompl
into
sbb
jp
push
loope
pop
sbb
out
dec
mov
test
xchg
and
pop
push
adc
out
sub
rclb
mov
cmp
mov
lahf
jecxz
xchg
add
fldcw
mov
jg
cmpsb
arpl
sbb
xchg
into
adcb
or
pusha
adc
shll
rclb
out
mov
cld
sbb
lds
aaa
mov
cwtl
jnp
xor
sahf
addb
scas
add
sbb
add
fcmovbe
lock
xchg
pusha
inc
dec
mov
pop
and
in
sub
int3
xor
xor
push
mov
std
movsb
sub
dec
out
out
push
ret
hlt
lret
pop
jae
syscall
hlt
push
adc
or
movsb
test
daa
push
faddl
in
pop
sbb
mov
push
shrb
das
mov
stos
lods
shl
icebp
xchg
pushaw
sub
mov
cmp
push
pop
push
rolb
lcall
cmpsb
add
and
inc
loop
fdivr
pop
mov
sbb
sub
xchg
mov
push
xchg
jno
int
enter
jmp
subl
insb
add
or
inc
out
mov
lahf
sar
loope
movsl
xchg
arpl
insl
pusha
fists
pop
insb
or
test
cltd
imull
testl
ja
pop
jb
or
jbe
scas
imul
push
ds
pushf
lret
inc
jo
dec
inc
cmpl
movsb
or
cli
push
mov
dec
cmpsl
subl
mul
ljmp
icebp
stc
imul
jg
sub
and
sbb
push
fisubs
or
int3
cs
sbb
push
lret
or
mov
inc
mov
jae
adc
lret
decb
jg
mov
cmp
cltd
mov
in
pop
xchg
inc
les
out
add
dec
xlat
adc
mov
mov
add
fimuls
cmp
inc
pop
jge
je
vdivpd
imul
fsts
and
inc
jmp
lahf
cltd
xchg
lds
inc
pop
adc
icebp
and
cmp
repz
pop
adc
inc
xor
push
fdiv
mov
add
mov
fcmovu
mov
mov
pop
mov
fildl
enter
and
add
push
xchg
jo
and
imul
je
fsubl
je
lcall
sub
push
ja
jle
add
in
push
sarl
mov
mov
insb
or
movsl
jge
add
divl
cmp
xchg
fadd
mov
jb
test
push
in
repnz
dec
pusha
push
mov
push
mov
icebp
lods
pop
gs
outsb
int3
leave
cmpsb
sbbl
ret
rol
pushf
jno
adc
push
outsl
imul
lcall
and
and
or
push
pushf
or
inc
pop
arpl
and
jl
dec
aas
xchg
rolb
fmull
mov
jb
sub
out
das
in
loop
xchg
xor
add
stos
adc
pop
dec
or
fucomi
add
jne
dec
dec
ror
shlb
stos
mov
imul
outsl
fsubrp
in
sbb
jle
or
cmpsl
xchg
jg
movsl
test
fwait
lret
jmp
mov
enter
or
jae
das
test
mov
sub
push
pop
jb
mov
out
jecxz
imul
loopne
inc
cmp
jmp
mov
sub
add
aad
push
mov
xchg
je
mov
icebp
clc
fmull
sub
cwtl
aaa
sbb
in
test
outsb
test
mov
adc
test
adc
mov
add
loope
mov
aad
repz
ret
popf
xchg
cwtl
mov
push
les
fwait
jl
xchg
dec
test
dec
pushf
sti
cmpsb
std
pop
ret
inc
out
cmpsl
lret
sbb
pop
pop
sub
inc
inc
inc
cmp
cwtl
mov
int3
or
popa
clc
rcll
add
xor
pop
loopne
bound
xchg
ret
mov
push
jo
push
std
aam
cmp
iret
dec
push
int3
mov
loope
mov
push
call
jmp
pusha
in
cmp
frstor
call
jl
stc
or
add
cmp
mov
in
inc
pop
mov
inc
out
js
test
push
sub
jp
jbe
mov
jo
leave
ret
push
enter
insb
jne
cmp
divl
ret
cmp
ja
jns
nop
fwait
pusha
xchg
scas
jno
into
pop
fs
iret
xchg
testl
jo
push
jge
fiaddl
cmpb
adc
or
movsl
ja
adcb
mov
sub
cs
add
add
xlat
xchg
mov
call
popa
outsl
push
inc
sub
push
std
out
xor
xchg
xor
adc
rolb
test
pop
mov
jno
imul
xchg
add
aad
push
cmp
out
xor
mov
call
in
addl
mov
rclb
outsb
push
insb
push
fcoml
or
sbb
popf
in
loopne
jno
das
jo
fisttpll
shlb
inc
push
jg
cltd
fwait
lret
and
sub
mov
xchg
jmp
add
cli
xor
and
xor
pop
and
out
and
aaa
mov
mov
or
ljmp
orl
inc
inc
jb
inc
jns
lcall
cmp
dec
or
sti
test
dec
lcall
and
in
add
int
aad
ljmp
and
pop
adc
pop
lcall
xor
mov
iret
mov
jno
and
mov
xor
dec
repnz
jecxz
pop
mov
rorl
fistpl
cmp
stos
and
es
xorb
push
pop
adc
and
mov
sub
push
loop
outsb
push
or
andb
mov
push
sar
in
mov
ret
enter
ror
movsb
int
xor
dec
test
add
xor
les
inc
rcll
hlt
leave
xor
jmp
dec
or
jne
pop
jg
call
push
ret
lea
and
ljmp
sbb
mov
dec
push
lds
dec
inc
adc
vpsrlq
ja
mov
jo
xor
clc
jnp
dec
mov
sub
push
sbb
mov
imul
mov
lret
pop
pop
orb
dec
and
loop
lock
test
dec
out
sub
orb
scas
mov
out
adc
adc
lret
cmp
push
xchg
xor
and
sub
ja
sbb
cli
inc
das
outsb
in
stc
in
jno
fcoms
clc
cld
add
and
inc
fcomp
jb
push
xchg
shrb
push
ss
mov
divl
xchg
mov
adc
cltd
ja
jnp
mov
inc
fs
and
pop
ret
mov
lahf
sarb
das
or
lods
lock
in
xchg
mov
imul
std
outsl
cmp
mov
daa
es
mov
cmp
mov
pop
test
cwtl
in
mov
arpl
cs
add
xlat
mov
cmc
mov
loopne
addr16
jle
and
aad
and
jg
sti
mov
imul
jg
cli
popa
add
insl
clc
mul
lds
push
jno
mov
iret
mov
int3
pop
daa
pop
shrb
sub
fldcw
jge
cs
rorl
push
and
das
sbbb
lcall
pusha
jbe
cli
adc
xor
jnp
add
sahf
jmp
push
aam
dec
fisttpll
outsb
xchg
stc
lret
pop
push
hlt
xchg
adc
bt
or
bound
xchg
int
pop
mov
adc
inc
sbb
fwait
mov
gs
cs
pop
and
scas
jo
or
pop
inc
push
and
movsb
daa
xlat
cmpsb
mov
rcrb
push
dec
xor
sbb
in
jne
es
lock
rcll
jno
mov
adc
fs
inc
jno
call
test
cwtl
dec
and
pop
xor
aam
mull
fmul
movsb
das
test
add
mov
jmp
aaa
adc
mov
xlat
push
addl
hlt
mov
rcr
scas
arpl
cmp
lock
jl
push
mov
test
inc
pop
loopne
inc
lcall
ret
add
adc
imul
push
inc
loope
mov
les
ljmp
ret
jge
rcrb
jmp
xchg
sbb
scas
inc
xchg
mov
jns
mov
inc
pushw
and
mov
cs
sbb
mov
movsl
jb
fldenv
out
add
sarb
mov
loop
popa
push
enter
mov
sbb
mov
cmpsb
dec
incb
sahf
jge
jecxz
enter
sub
dec
pop
lcall
jp
jb
lahf
addr16
sbb
daa
cs
shrb
mov
shlb
mov
icebp
dec
out
jo
and
pop
and
jg
push
stos
fidivrs
xchg
pushf
mov
jle
jns
dec
das
sbb
das
daa
and
sbb
sub
jp
inc
mov
popf
lock
in
fidivrl
mov
dec
aas
adc
or
sets
lret
push
fsubl
or
mov
jecxz
popf
pop
mov
fwait
out
mov
xchg
cmp
insl
inc
dec
loop
pop
or
mov
fcom
mov
fcmovu
add
xchg
aaa
shll
es
ljmp
adc
sarl
mov
stos
aad
pop
in
and
insb
or
dec
imul
cmp
outsl
inc
inc
dec
insb
and
data16
stos
arpl
cmpsb
jbe
xchg
xlat
jo
inc
pusha
enter
icebp
add
std
fnstenv
pop
mov
jge
aam
adc
in
and
enter
jne
pop
sub
mov
xchg
test
pop
call
shl
pop
jg
decl
add
mov
jbe
les
mov
cmp
shll
sbb
shl
inc
push
ficoms
into
dec
insl
adc
push
outsb
xchg
and
mov
cmpl
jns
enter
push
les
mov
jp
xor
push
push
and
sub
fcomps
or
in
mov
mov
iret
imul
pushf
loopne
outsl
xor
or
or
dec
bound
inc
mov
dec
test
int
inc
loop
jae
sbb
idivb
and
ret
out
shlb
dec
fisttps
out
and
mov
adcb
pusha
data16
cmc
mov
lret
leave
xor
lahf
das
mov
inc
sbb
mov
add
dec
push
jmp
test
mov
push
pop
jno
rcrl
jl
fsubr
adc
dec
sub
inc
xor
jb
xchg
dec
xor
lock
les
adc
arpl
gs
inc
loop
mov
popf
movq
sbb
sub
out
insl
sbb
cmpsb
add
std
cmp
enter
stc
stos
repz
push
ss
negb
push
xchg
ja
mov
xor
add
loope
leave
push
xor
es
pop
test
cltd
pop
push
lcall
push
jge
sahf
das
lea
rcll
mov
sbb
push
in
inc
mov
sar
mulb
ja
cwtl
leave
call
dec
pop
cmpsb
and
pop
mov
or
stos
mov
loope
add
cltd
imul
xor
sbb
lock
pushf
xchg
push
arpl
xchg
xchg
mov
adc
inc
xchg
xchg
aad
outsb
call
dec
jle
sbb
cmpsl
inc
dec
xchg
mov
repnz
fwait
icebp
push
adc
fisttps
xchg
stc
addr16
stos
push
add
pop
jmp
pop
pop
push
dec
bound
hlt
mov
xor
xor
mov
push
int3
or
add
les
inc
pop
repnz
pushf
pop
sbb
and
sbb
loop
dec
mov
ret
cli
hlt
push
icebp
sub
sbb
mov
mov
jg
mov
mov
sub
sub
mov
rclb
and
push
mov
jne
xlat
mov
push
shlb
mov
mov
cld
iret
rolb
inc
mov
lock
imul
mov
mov
aaa
pop
add
xchg
fstpl
and
cwtl
and
jb
add
cmpsb
dec
add
fsubrl
loope
inc
ret
mov
data16
mov
test
pop
addb
int3
cmpsb
sti
shll
push
mov
les
inc
push
ds
pop
mov
mov
and
mov
in
inc
out
mov
lds
pop
ds
bound
jne
mov
dec
test
pop
iret
add
mov
jg
lds
xchg
mov
cmp
cltd
mov
sbb
sbb
jne
dec
lahf
xor
sarl
fldenv
int
je
fldl
data16
stc
dec
jecxz
lret
in
int3
lods
xchg
iret
mov
out
sbb
or
in
sbb
sti
sbb
xchg
loopne
or
xor
imulb
mov
xchg
xchg
inc
sub
pcmpeqb
xor
inc
or
mov
fsts
push
mov
pop
cmp
fdivr
mov
sub
mov
mov
xchg
lea
dec
xor
mov
mov
je
mov
jle
pop
sub
add
and
movsb
ret
xor
shlb
xchg
push
sub
into
and
adc
in
movsl
data16
scas
ss
mov
gs
adc
xchg
cmpsb
out
push
jo
stos
cmc
ljmp
in
jl
sbb
xchg
push
xor
inc
lret
cmpsl
es
add
ret
pop
mov
testb
pop
addb
push
or
js
mov
push
push
pop
jle
lods
xchg
inc
rolb
mov
jae
mov
jns
ret
xor
lcall
sti
nop
jp
aad
out
jno
inc
rolb
pop
int3
sub
xor
inc
mov
push
adc
mov
inc
pop
pop
sub
cmp
aam
cltd
imul
daa
mov
addr16
cmp
pop
jmp
add
xchg
add
movsl
push
sbb
leave
fwait
and
push
out
push
hlt
xchg
sub
xchg
cmpsb
rorl
imul
sub
lahf
mov
sahf
shr
push
lahf
popa
sbb
jg
pushf
jbe
mov
push
imul
pop
rcrb
add
pop
or
shrb
xchg
pop
pop
rcrl
xchg
xor
cmc
jb
loope
pushf
repnz
xchg
add
divb
jge
shl
dec
stc
cmp
mov
xor
xchg
xchg
push
inc
and
jge
popf
test
clc
fst
cmp
add
imul
dec
jno
cltd
pop
imul
loopne
xchg
and
sbb
scas
sbb
cmp
cmpsb
inc
sbb
insl
sbbb
jbe
enter
dec
push
call
loop
shrb
rolb
sub
xor
and
shlb
pusha
pop
and
sbb
jo
std
hlt
add
sub
popf
iret
jnp
sbb
sub
in
movsb
fimuls
lret
dec
mov
hlt
enter
out
dec
rol
scas
add
ss
repz
sbb
insb
pop
cmp
enter
xchg
mov
bsf
adc
xor
bound
push
lcall
xchg
nop
cmp
push
jnp
and
jnp
fsubrp
and
dec
sub
pop
inc
scas
loope
adc
xchg
test
and
sbb
outsl
mov
xchg
insl
sbb
jae
push
push
in
clc
jmp
in
adc
lret
ja
pop
pandn
sub
arpl
pop
das
mov
push
ja
cmp
cmp
icebp
xchg
cmp
mov
push
in
xchg
add
icebp
mov
pop
xor
loop
arpl
rorb
loopne
push
inc
les
stos
pop
in
inc
hlt
pusha
movsl
push
mov
xchg
nop
shl
cmp
outsl
xor
inc
xchg
mov
mov
out
sysexit
mov
out
nop
lahf
and
mov
cli
or
lret
imul
mov
pop
jl
cmpsl
add
add
out
inc
cmpsb
adc
lea
add
out
xor
xchg
jl
and
fisttpl
subl
cmp
mov
xor
mov
mov
jo
pop
aam
xlat
imul
xchg
sti
cld
dec
mov
pop
mov
jp
addr16
inc
add
in
xchg
test
pop
rep
mov
add
sbb
andl
adc
fwait
lds
pop
and
std
or
test
sbb
inc
icebp
jo
es
aad
or
adc
sub
ret
push
test
testb
mov
adc
rcrl
pop
sbb
lret
push
or
jmp
jo
dec
bound
test
rep
sbb
cmp
inc
dec
mov
xor
lods
inc
pop
in
push
cli
push
out
scas
hlt
xor
scas
jnp
cs
cld
and
mov
sub
fimuls
mov
ljmp
mov
mov
leave
add
inc
xchg
lahf
sti
fwait
shrb
cmp
mov
int
das
jno
pop
cmc
mov
mov
scas
lock
sub
pop
sbb
cmp
jno
dec
pop
lcall
xchg
and
lds
bnd
hlt
das
add
mov
test
xor
jb
frstor
sahf
imul
lea
sub
pop
in
iret
cmp
outsb
sub
add
leave
outsb
mov
rcll
pop
jmp
push
mov
inc
jb
adc
pop
data16
and
dec
mov
or
jecxz
mov
rcrl
mov
dec
bnd
enter
lret
cmp
xchg
xor
mov
dec
cmp
xlat
cmp
stos
jg
in
xor
sbb
dec
jno
stos
jg
cwtl
mov
inc
or
out
jecxz
xor
js
add
inc
outsl
cmp
sarb
jge
das
in
loope
aad
xor
roll
mov
adc
add
jbe
cwtl
pop
out
and
add
pop
inc
dec
out
int
lock
mov
jne
dec
out
in
in
xor
cwtl
and
je
xor
aam
lods
pusha
jecxz
push
mov
std
sarb
sbb
add
in
sbb
cmc
mov
mov
cli
call
xor
and
test
sbb
or
jnp
dec
pop
mov
movsl
lcall
inc
xchg
in
push
cmp
stc
fstpt
pop
mov
push
adc
pop
xchg
out
jge
dec
pushf
mov
imul
movsl
or
xchg
lea
mov
dec
add
sub
adc
aam
mov
pop
leave
insl
sbb
push
xorb
xchg
add
addr16
and
roll
dec
mov
js
ret
clc
nop
into
cmc
arpl
add
test
or
mov
mov
sbb
fistpll
psrad
lods
popf
jge
loop
test
cmp
pop
adc
stos
pop
test
sbb
and
out
or
cmpsl
pop
pushf
pop
ja
dec
pop
fadd
xchg
lcall
iret
jne
pop
ljmp
sub
pop
cmc
aas
movsb
cmpsl
repz
pop
mov
adc
pop
add
inc
pop
cmpsl
mov
mov
adc
mov
and
popa
lods
arpl
inc
xor
or
jmp
fbstp
add
jg
lret
inc
or
push
adc
nop
insl
and
xchg
icebp
mov
fildll
enter
dec
pop
jmp
cmp
fwait
and
xchg
cmp
out
movsl
xlat
ret
adc
lea
stos
push
and
fs
pop
psadbw
outsl
and
ret
ret
mov
add
xor
hlt
repnz
mov
xchg
pop
pop
jnp
pop
fistps
inc
or
cld
scas
out
bound
sub
mov
sarl
fisubrl
es
lea
out
sub
not
adc
add
jnp
cmpsb
arpl
pop
ret
data16
outsb
js
div
fisttpll
adc
cs
in
jecxz
adc
gs
cmc
or
push
push
sbb
nop
inc
add
cli
hlt
fidivl
add
add
addr16
cmp
dec
pop
pop
mov
imul
sbb
jge
fxch
cmove
inc
fs
push
add
cmp
cmp
mov
or
add
cltd
push
pop
insl
xor
lods
and
sub
les
lcall
jl
scas
into
mov
xor
inc
pop
push
xchg
mov
shlb
adc
or
add
mov
fstp
xchg
mov
test
aas
add
mov
popf
iret
mov
faddl
adc
push
sbb
iret
insl
sub
pop
sbb
push
xchg
dec
stos
inc
pusha
inc
mov
and
or
inc
mov
mov
dec
loopne
popa
test
call
inc
sbb
out
mov
hlt
les
repnz
inc
jns
xchg
cmpl
add
inc
cwtl
push
rcrb
notb
es
mov
fildl
mov
fcoml
mov
jbe
fisttps
outsl
insb
push
scas
mov
mov
test
js
cmp
add
or
xlat
test
rorb
dec
sub
ljmp
xchg
ret
push
cmp
pop
dec
sarl
inc
fld
leave
or
int3
je
cmpsl
sbbb
mov
rcrl
mov
add
cmpl
clc
inc
sbb
push
outsb
adc
mov
movsb
aad
lahf
jmp
xchg
pushf
inc
and
iret
push
dec
pushf
and
stos
movsl
cmp
cmpsb
arpl
not
lods
popa
enter
mov
clc
pop
jp
jle
push
insl
std
dec
add
jmp
pop
in
or
ja
mov
mov
mov
icebp
adc
arpl
push
movsb
or
pop
inc
push
lds
ja
mov
jge,pn
push
fsubrs
imul
das
adc
jo
adc
add
stc
fcompl
ljmp
mov
or
mov
in
test
sub
pusha
pop
xchg
icebp
cmp
das
or
pop
mov
repnz
dec
add
push
dec
scas
dec
push
shrb
sbbb
push
leave
xor
pop
in
jge
sub
mov
push
sti
or
ljmp
in
outsb
inc
mov
dec
int3
push
add
adc
pop
mov
mov
cmp
dec
mov
pop
push
fnsave
xchg
push
cmp
push
int3
jb
ja
push
xor
and
repz
xchg
es
sub
xchg
sbb
sbb
sbb
jo
sahf
filds
je
in
sub
jns
mov
stos
mov
push
dec
push
adc
es
cs
and
pop
cmpsl
shll
rol
and
leave
aaa
ljmp
test
mov
mov
or
xor
xchg
ljmp
push
lds
add
add
jnp
sbb
test
jge
arpl
push
mov
sbb
mov
dec
stc
xchg
mov
and
xor
and
lea
xor
lds
inc
andl
fstpl
adc
adc
out
and
jae
xchg
push
fwait
cld
add
sub
ss
fidivs
mov
sub
out
sub
add
and
out
ret
sar
xlat
jne
pop
sub
sub
xchg
pop
mov
lea
mov
mov
push
or
jl
in
jge
dec
dec
sbb
or
jns
xchg
or
negb
js
mov
das
and
push
inc
or
xchg
mov
imul
mov
lahf
and
int3
jno
push
lcall
and
jns
pop
jns
imul
pop
xchg
xchg
xchg
sti
inc
mov
test
dec
lea
pop
push
fbld
mov
rclb
inc
into
push
or
pushf
fiadds
test
out
dec
lret
xor
jnp
ljmp
aam
pop
pop
js
and
test
sbb
sub
addr16
out
andb
loopne
add
jnp
ficomps
testb
and
sbbl
mov
mov
pop
cltd
cli
addr16
mov
ret
mov
loopne
in
std
inc
mov
pop
add
ret
lds
dec
icebp
push
jge
mov
sbb
dec
pop
adc
jb
xchg
mov
test
cmp
aam
and
lods
push
lods
ret
nop
push
fwait
or
mov
and
insb
push
xchg
leave
mov
int3
movsb
fnstsw
dec
rorl
imul
cmp
mov
rorl
xlat
xchg
leave
outsb
jae
scas
mov
sub
sahf
inc
mov
outsb
je
gs
ja
stos
sahf
mov
aaa
jo
mov
aam
xchg
fmull
in
pop
loopne
ljmp
cltd
pop
lds
mov
jnp
sbb
test
rdtsc
ljmp
lret
xchg
cmpsb
sbb
loope
and
and
jo
cli
cmpsl
mov
mov
in
sbb
and
fcmovnu
out
lods
push
jb
test
inc
sub
rcrb
in
std
or
lret
or
mov
and
lods
push
fsubs
dec
loope
push
insb
out
add
pop
pop
popa
or
shlb
cmpsl
subb
sbb
mov
xor
fadd
sbb
mov
lcall
addb
dec
test
leave
push
and
xor
pop
adc
xchg
into
xchg
dec
push
mov
mov
movsb
pop
scas
test
pop
inc
les
cmp
jbe
jge
sub
iret
subl
lods
les
sbb
xor
sarl
xchg
aad
jmp
mov
sub
dec
out
movb
ljmp
sub
xchg
adc
bnd
mov
test
mov
jno
jecxz
ror
cmpl
in
push
pop
in
popf
push
outsl
xchg
lret
mov
cmp
or
nop
sarl
jne
mov
xchg
dec
repz
mov
push
inc
sbb
add
ret
inc
push
fwait
pop
dec
or
inc
mov
or
or
xlat
xchg
inc
push
es
leave
sti
sbb
int
mov
test
clc
inc
mov
xlat
and
aad
pop
xor
pusha
mov
insl
iret
cmp
mov
adc
popf
inc
xchg
rcll
cmp
decb
loopne
sub
push
mov
insb
add
mov
bound
pop
mov
shlb
test
pushf
cmpsl
pop
xor
cmpsl
cmp
or
lcall
jg
mov
add
and
adc
pop
fadd
adc
imul
xor
add
pop
fidivrl
jge
or
in
pop
dec
push
mov
jae
jg
mov
or
mov
cmc
dec
pop
pushf
stos
shrb
xchg
jo
mov
mov
add
lret
imul
daa
sbb
or
sbb
aam
movsl
and
jl
jnp
add
add
test
repnz
sti
outsb
mov
jge
sbb
xchg
scas
cmp
out
dec
stos
push
adc
lret
insl
or
cmp
push
mov
lock
popf
arpl
jne
imul
popf
popf
in
jnp
xor
nop
mov
cmp
push
lea
jns
je
cli
jl
cmp
mov
mov
outsb
xlat
cs
jns
je
xor
push
push
shlb
les
add
pop
push
jae
fidivrs
mov
pop
mov
xchg
movsl
push
inc
rep
xchg
pop
sub
adc
mov
or
aas
mov
stc
cmp
add
addl
rcrl
sarl
push
xchg
cmp
ljmp
jl
mov
dec
inc
mov
adc
sbb
adc
inc
xchg
sbb
xor
pop
mov
dec
enter
mov
sbb
and
mov
jp
call
sbb
je
inc
pop
test
jp
mov
or
sub
pop
fiaddl
arpl
movl
inc
outsb
or
xor
sub
cmp
fstpt
xchg
mov
pushl
icebp
xchg
cmp
outsb
movsl
cmp
insb
iret
movsl
add
les
add
movsb
xorb
sub
sub
jae
es
sbb
fidivl
call
in
cs
div
out
popa
sub
sub
movsb
pop
inc
adc
push
movsb
or
insb
mov
js
repz
scas
cmp
ljmp
add
and
xchg
jmp
mov
movsb
fwait
push
dec
shl
jg
mov
loopne
push
cmp
sub
fiaddl
mov
add
push
or
sub
into
mov
pop
add
xchg
int3
rorl
mov
rcl
in
or
loopne
xor
fdivrl
or
inc
jle
test
je
pusha
push
push
jb
enter
or
imul
dec
cmp
out
dec
in
mov
cmp
lods
push
test
emms
push
popa
jo
xor
jbe,pn
mov
cwtl
in
cltd
rcll
pop
push
mov
push
popf
inc
adc
pop
shl
push
das
jge
xorb
dec
aad
cmp
mov
push
adc
inc
add
pop
out
std
pop
pop
push
test
pop
or
sub
pop
stos
jns
outsb
mov
negl
sbb
icebp
je
xchg
pop
push
add
aam
mov
jae
or
ds
mov
popf
test
jno
sbbl
test
shrl
or
add
push
sub
push
cmc
or
iret
and
xchg
push
and
add
mov
mov
and
push
xchg
imulb
sahf
rcrl
xchg
je
movsb
adc
loop
mov
fsubrl
ret
or
loopne
pushf
jle
inc
leave
into
pop
je
repz
or
das
xchg
mov
mov
sbb
cmc
lahf
test
xor
jno
test
mov
or
mov
loope
push
gs
adc
mov
xor
push
in
or
jno
loopne
fcmove
sarl
cmp
sbb
fs
xlat
flds
cmpsl
add
into
mov
lret
xchg
sbb
stos
xchg
mov
add
rcrb
std
jne
xchg
ss
scas
lahf
xchg
and
xor
sub
int
rcl
pop
cli
cltd
jp
outsl
xor
test
jge
imul
lahf
mov
sub
adc
or
and
sahf
mov
add
loopne
int
xchg
push
cwtd
xor
cmp
out
std
pop
shl
push
loopne
add
xor
pop
jle
cwtl
rorl
pop
cld
mov
mov
xor
pop
dec
mov
cld
lods
test
movsl
lock
testl
insb
orl
mov
dec
in
push
cli
or
rol
sub
cmp
or
jmp
icebp
clc
cmp
daa
pushf
mov
test
cld
push
xor
inc
sbb
cmp
hlt
xor
incl
inc
clc
outsb
rol
mov
loope
sub
bound
into
loope
jle
mov
jae
jge
mov
and
inc
mov
out
push
std
sbb
inc
ljmp
sub
jp
loopne
imul
in
cmpsb
mov
call
sbb
pop
sub
jo
jb
fsubl
sbb
int3
mov
pop
lahf
and
lcall
outsb
fisubl
loop
les
int
rol
loope
outsb
xor
inc
inc
push
hlt
push
popa
out
add
cld
pop
push
mov
pop
xchg
ret
scas
insl
mov
pop
or
pop
aam
jge
scas
rclb
xchg
fbld
cmp
mov
fcoms
mov
subl
inc
cmp
add
xor
mov
js
icebp
popf
test
jecxz
out
push
imul
shrl
mov
stos
sbb
ffreep
loopne
dec
xchg
shrl
mov
push
pop
jno
dec
stos
sbb
or
stos
pop
sub
xchg
stc
testb
popf
push
inc
jno
push
in
inc
and
lods
mov
aas
add
adc
repz
out
inc
scas
addr16
jb
cmc
add
push
mov
adc
repz
scas
test
or
into
mov
sbb
aas
orb
and
es
xchg
ds
cmp
aas
scas
into
mov
pop
icebp
push
in
mov
mov
mov
cmpsl
mov
icebp
nop
aaa
adc
iret
xchg
sbb
dec
mov
imul
mov
pop
fmull
shrl
clc
pmulhuw
dec
mov
xchg
cmpsb
repnz
xchg
push
dec
jae
int
cmp
in
mov
repz
pushf
pop
js
sbb
jno
add
lods
mov
inc
add
les
sub
js
js
lock
mov
fisubs
cmc
sub
push
adc
movsl
lahf
push
mov
mov
xchg
rorl
push
xor
leave
xor
arpl
fbstp
jns
fiaddl
pop
pop
test
movsl
mov
inc
or
xchg
outsb
jecxz
fs
cld
cmp
shll
sub
inc
jns
lea
cwtl
sahf
xchg
xchg
outsl
mov
xchg
scas
pop
and
adc
push
aas
push
pusha
jb
add
push
and
addb
push
push
dec
jno
inc
mov
jge
sbb
loop
inc
or
jb
add
stos
es
fsub
jge
in
loope
or
push
pop
xchg
mov
pop
adc
push
jge
cmpb
jge
dec
dec
lds
inc
fdivrs
mov
icebp
ffreep
pushf
int3
mov
inc
leave
pop
jp
jl
lock
mov
test
dec
fstpl
iret
inc
sub
mov
out
insl
in
popl
in
sbb
cmc
lods
cmp
xchg
rcrl
test
mov
inc
push
dec
iret
and
fcmovnu
inc
dec
nop
mov
dec
mov
ret
enter
and
in
imul
jmp
push
or
fucomi
sub
scas
dec
mov
andl
fdivrl
xor
cmp
lds
inc
sub
mov
mov
dec
stc
outsl
out
sbb
shll
add
xor
pop
es
addr16
rolb
loopne
mov
inc
mov
mov
push
lcall
stc
push
ret
in
dec
test
ss
cmp
fcmovu
add
mov
lea
mov
mov
addr16
ds
sbb
sub
idivl
imul
cwtl
ret
xor
sti
cmp
pop
xchg
out
int3
push
vmptrld
inc
jo
sbb
fistpl
and
iret
adc
xchg
or
inc
and
cli
jp
push
jge
push
push
scas
aaa
pop
jge
jns
or
and
cmp
hlt
lea
icebp
push
in
xchg
lss
inc
test
push
or
cmp
bound
inc
mov
cli
or
movsb
mov
or
mov
movl
or
sbb
xor
hlt
pop
hlt
jne
or
sbb
iret
jbe
mov
push
jge
int
lret
sub
addr16
fsubl
repz
mov
xchg
incl
ja
cmp
xchg
xorb
xor
scas
pop
insb
sub
or
repz
mov
ds
fidivrs
fs
mov
test
dec
ret
aaa
jp
imul
jp
and
jg
xchg
popa
aaa
data16
or
dec
iret
jle
mov
mov
gs
js
xchg
ss
mov
sub
sub
daa
mov
subb
in
xor
dec
call
pop
push
push
punpckhwd
std
adc
jecxz
xchg
iret
cmp
pop
outsb
xor
jae
cmpl
dec
addr16
sbb
dec
inc
loopne
xchg
sub
jp
xchg
test
inc
push
fildll
stc
pop
sbb
jecxz
ror
mov
xchg
push
push
sub
fsubs
ret
lods
xor
jp
fnsave
lret
fdivl
into
jmp
fdiv
rorb
subl
out
inc
push
fcompl
xchg
dec
inc
dec
je
or
and
cmc
clc
repz
pmullw
xor
push
cs
lds
sub
cmpsb
cmp
adc
je
jbe
pop
push
and
js
xchg
push
push
movsb
data16
mov
or
nop
data16
out
cmp
scas
jae
cmp
xchg
xchg
push
aad
dec
aam
xchg
mov
push
xor
lret
or
loopne
leave
xor
shlb
xchg
sbb
jnp
jle
xor
shrb
popa
sbb
mov
js
jl
fdivrl
lcall
inc
in
or
dec
jl
inc
xchg
mov
clc
out
les
mov
push
jge
mov
push
jge
std
leave
ret
mov
push
push
std
lds
incl
fs
movsb
mov
shll
int3
lods
sub
inc
pop
and
and
test
push
imul
xor
sub
inc
inc
in
das
ds
add
mov
add
popa
imul
stos
test
xchg
arpl
xorl
cs
sbbb
mov
push
gs
push
add
inc
decb
in
addl
sbb
jge
lea
addl
lods
or
mov
mov
or
jecxz
pop
mov
mov
sarb
mov
lods
int
enter
jmp
test
imul
ficompl
loop
decb
inc
jne
jnp
push
xor
in
aas
mov
shlb
xchg
xchg
and
das
call
or
sbb
jle
cmp
mov
cs
repnz
push
dec
into
pusha
pop
in
in
xchg
imul
addr16
adc
movsb
xor
push
bound
xchg
lea
movsb
rcrl
and
dec
lcall
pop
popa
mov
stos
fidivrl
sub
jmp
in
pushf
dec
adc
icebp
inc
into
and
addr16
in
in
xchg
jecxz
pusha
imul
push
call
ss
dec
pop
testl
mov
clc
out
pushf
das
mov
jno
mov
pop
xor
addr16
testl
std
cmp
add
loop
scas
xchg
fldcw
sbb
mov
dec
pop
sbb
mov
cltd
stos
out
inc
test
out
test
inc
push
xchg
jge
add
daa
push
pop
sub
xlat
push
xchg
add
cmp
ja
xchg
fs
sub
adc
jmp
push
jp
sbb
mov
mov
aas
sahf
fpatan
mov
fstpl
xchg
sbb
mov
rol
jo
jecxz
xor
cs
insb
and
xor
xchg
test
push
mov
inc
pop
xor
shll
xor
cmpsb
add
insb
call
xchg
xchg
cmpsl
mov
mov
inc
nop
xchg
xchg
pop
in
in
fcmovnbe
or
shll
and
mov
or
jbe
mov
cs
push
lods
mov
scas
pop
aas
push
in
pop
ja
ret
mov
icebp
out
cmp
test
movsl
push
flds
mov
xchg
ret
xchg
stc
jecxz
sub
je
lods
sub
sbbb
mov
mov
push
or
iret
add
mov
aam
cmp
mov
mov
cli
push
sbb
addb
sbbb
add
add
jle
inc
mov
sahf
das
adc
mov
or
fwait
mov
shll
lcall
pop
cltd
push
ret
mov
dec
lcall
insb
movsb
cli
jge
jno
xor
adc
decl
fxtract
gs
inc
sbb
sbb
jnp
fsubrl
mov
out
out
jp
or
hlt
sub
xor
jb
add
stos
mov
adc
ret
and
jp
jno
and
add
out
roll
and
xchg
pop
fildl
ds
xchg
imul
dec
and
fs
iret
test
pop
cld
jo
cmp
hlt
dec
dec
or
or
or
dec
clc
inc
mov
jnp
ret
cwtl
adc
loop
sub
pmovmskb
lods
daa
std
xchg
mov
aam
aam
les
in
shrb
je
push
shl
pop
mov
sub
sub
pop
jp
and
adc
imul
or
dec
jo
push
sub
ss
ret
mov
fisubs
js
mov
outsb
imul
dec
sub
or
mov
xchg
in
and
dec
push
fwait
jnp
pop
inc
in
xchg
inc
roll
scas
sub
les
push
dec
sbb
mov
inc
es
xchg
fnsave
adc
in
xchg
dec
in
dec
and
mov
stos
sub
mov
add
pushf
or
jge
lock
add
sub
dec
jne
mov
and
in
pop
inc
mov
incl
sarl
jle
pushf
mov
insb
cmp
jno
movsl
inc
pop
jl
mov
mov
ja
pop
inc
xor
add
fs
call
inc
cmp
inc
popa
test
pop
test
js
ret
or
sbbb
dec
mov
sbb
inc
lds
push
mov
incb
mov
cmpl
gs
ret
out
add
sub
fimuls
pop
roll
outsb
inc
mov
loop
repz
sub
inc
jno
enter
xchg
pop
mov
imul
imul
cs
push
jae
push
and
and
test
xor
and
cmpsl
enter
int
mov
and
cmp
fwait
test
cmovns
ret
pop
rdtsc
or
inc
add
ljmp
inc
jmp
icebp
inc
pop
and
inc
lret
dec
test
movsb
mov
xchg
push
clc
push
sub
jge
push
pop
ds
mov
mov
inc
jo
push
sbb
pop
jb
mov
inc
xor
mov
and
ljmp
cmpsl
sbb
les
test
int
jmp
rol
sbb
mov
xor
subl
add
inc
push
loope
push
add
lods
push
cltd
ret
xchg
into
sahf
loop
out
in
sti
pop
imul
fildll
mov
js
jl
adc
jecxz
adc
mov
push
sub
add
push
push
fldt
pop
in
imul
cwtl
call
sub
mov
push
stos
fcomps
xor
xchg
inc
dec
mov
dec
jnp
lret
call
add
pop
cld
lods
sbb
and
or
xchg
xchg
cld
jge
cmpxchg
mov
roll
cmp
fwait
cwtl
ficoml
mov
inc
sub
shll
int3
sti
or
sub
push
sbb
inc
mov
sub
jl
or
jmp
das
cmp
scas
jnp
repnz
jnp
pushf
or
shll
mov
adc
iret
cmp
jbe
cltd
push
push
dec
mov
outsl
pushf
or
popa
outsb
fnstsw
ficompl
mov
mov
outsb
mov
es
add
call
mov
rorl
mov
and
icebp
push
and
aam
mov
cmp
pop
inc
jle
sbb
icebp
scas
dec
inc
xorb
jne
out
divl
mov
pop
scas
int
xlat
in
jle
jecxz
xor
loop
pop
adc
inc
lret
pop
adc
mov
call
adcb
jl
fdivrl
out
inc
sbb
pop
inc
cmpsl
lcall
aad
lock
dec
push
or
xor
aas
scas
popf
jb
cmp
mov
mov
mov
fsubs
mov
push
adc
daa
jne
and
imul
sub
dec
or
fwait
lods
loope
mov
pop
mov
and
ljmp
fstl
repz
mov
jo
cmpsb
sarb
aaa
mov
ret
pop
outsl
jmp
shrl
incb
js
xor
addl
inc
stc
rcr
inc
cmp
or
push
push
xor
neg
stos
cli
in
sarl
sub
pop
sbb
flds
mov
jge
arpl
das
into
lods
dec
mov
sarb
push
js
ret
pop
jmp
adc
adc
test
repz
jp
xchg
in
sbb
push
push
icebp
dec
xchg
dec
or
shl
add
push
fidivrl
pop
repnz
into
adc
xlat
leave
dec
cmpxchg
cli
jmp
stos
ret
cmpsl
je
jp
bound
cmp
mov
add
repz
out
jne
pop
dec
add
sub
int
aad
dec
and
lahf
popa
in
add
xchg
mov
subb
scas
stos
fsubrs
pop
mov
jnp
cli
repz
dec
adc
add
das
xor
xor
pop
push
aad
push
adcl
sbb
es
pushf
xor
xchg
sub
popf
call
or
sbb
and
push
cmp
fwait
les
pop
bound
arpl
xor
dec
dec
push
and
scas
adc
fcoml
or
xchg
mov
adc
sahf
jae
pop
rcrl
fmull
push
add
inc
ret
cmp
jo
pop
jbe
or
decl
inc
mull
cmpsb
imul
xchg
dec
and
jmp
sub
add
cltd
xor
shlb
mov
jb
lods
xor
and
push
add
xlat
ljmp
es
stos
xchg
mov
cmp
cmc
ret
pop
push
mov
pop
decl
repz
jmp
fdivs
sbbb
aas
mov
adc
pop
sub
into
mov
into
jmp
jle
or
test
shlb
add
push
mov
jmp
jecxz
iret
jno
addr16
cmp
dec
mov
pop
cmp
lods
mov
fs
xor
pop
sub
outsl
je
cmp
fdivrs
add
and
sub
ja
fsts
sbb
dec
je
outsb
es
mov
mov
add
jae
je
add
inc
mov
pop
xlat
jae
insb
lods
imull
mov
sbb
jmp
fs
scas
mov
sub
mov
mov
call
in
jae
lods
ss
fidivrl
inc
fcoml
cmp
imul
jnp
sbb
dec
pop
aas
jbe
outsl
mov
lea
ljmp
jo
jp
test
sbb
iret
scas
sahf
or
xchg
cmp
push
fs
dec
jmp
pop
cmpl
pop
fs
sub
push
xchg
xor
adc
xchg
hlt
sti
sbb
mov
sub
bound
adc
aaa
inc
nop
inc
cmp
adc
inc
xchg
daa
and
ror
test
inc
fwait
mov
cmp
or
loopne
sbb
jo
leave
pop
push
or
insl
pop
pop
cld
inc
and
lock
insl
ljmp
jl
mov
fs
and
sub
insl
shrb
cmp
dec
inc
push
push
and
jnp
jge
sub
fs
and
xor
cli
adc
xor
movsl
cld
pop
mov
repz
cmp
pop
push
mov
pop
xchg
or
cmc
inc
bound
dec
imul
mov
aad
sbb
or
mov
push
dec
mov
sub
movsb
pop
push
stos
outsl
jge
aam
es
and
mov
mov
sub
push
xchg
jg
shr
push
mov
add
ret
inc
inc
test
aas
pop
lahf
xchg
or
jno
and
je,pn
jg
lock
mov
lret
call
sub
pop
xchg
cmpl
fwait
dec
rcrl
lock
das
inc
cmpsb
and
ret
out
inc
sub
in
iret
leave
jo
fbld
adc
cltd
je
mov
mov
jae
test
push
popa
xchg
insb
pop
pop
mov
movsl
lock
lret
cmp
insb
fisubrl
fstl
mov
dec
cld
push
leave
sub
cmp
add
adc
mov
jle
jecxz
push
dec
xor
ret
mov
mov
cmp
pop
and
roll
enter
scas
mov
inc
mov
jecxz
xlat
push
icebp
and
mov
and
push
test
jg
jl
and
jmp
sti
fistpll
pop
xor
ja
negl
dec
sub
fisttpll
inc
hlt
in
sbbb
ret
xor
fstp
xchg
cs
push
sub
jle
xchg
aas
fucomi
and
sub
fwait
enter
std
add
ret
popf
sbb
int
sub
fldt
lret
fstps
nop
mov
sti
push
stc
std
cmp
pop
jo
jno
arpl
mov
and
adc
test
jae
mull
icebp
addl
and
sbb
push
std
pop
mov
sbb
mov
mov
mov
lea
pop
mov
lea
lea
subl
shll
pop
mov
movsb
clc
rorb
rclb
cmovle
addr16
pushf
xchg
push
xchg
xor
sub
cmpsl
aam
xchg
jne
cmpsl
cmpl
cmp
into
sub
add
ret
loopne
pop
je
push
adc
lahf
test
pop
std
add
repnz
loop
jo
and
aas
jmp
sub
xor
es
in
data16
xor
dec
stc
cli
or
dec
pop
and
pusha
lret
jbe
jno
or
sub
ret
jne
xor
mov
out
jns
stc
cmc
ljmp
mov
cmp
fucom
gs
jno
or
sub
dec
or
int
dec
or
imul
ret
aas
sahf
clc
in
call
pop
xor
mov
sbb
dec
popa
mov
push
adc
adc
pop
xor
jg
pop
orb
add
fwait
mov
inc
shlb
xlat
cli
mov
sbb
movsl
addr16
add
mov
imul
mov
icebp
xchg
lea
dec
jnp
popf
cmp
push
and
pop
jmp
mov
in
ja
dec
inc
pusha
mov
lret
cmp
mov
push
push
int3
fadds
add
addr16
in
xchg
pop
stos
inc
and
mov
jg
in
xor
sbb
loop
enter
add
ds
outsl
mov
sbb
outsl
rcrl
scas
jmp
mov
xchg
pop
scas
push
pop
xor
dec
inc
test
pop
popf
call
cmc
loop
jo
xor
das
testl
cmp
ret
push
push
sub
popa
lock
mov
mov
adc
inc
js
sub
data16
and
mov
test
dec
mov
aad
ss
out
add
and
jg
xchg
fcompl
leave
jbe
jne
sub
xchg
mov
jo
out
dec
jbe
les
xor
out
insl
dec
mov
ficompl
sub
imulb
shll
lods
std
fdivl
sub
xchg
ret
jb
push
fwait
adc
mov
out
movsb
push
ds
and
data16
mov
xlat
mov
cmpsb
imul
sub
cmc
mov
call
pop
xchg
lea
mov
cmpsb
sub
je
cmp
push
movsl
xchg
mov
cmp
push
test
xchg
xchg
mov
cmp
cmp
xchg
mov
push
dec
dec
in
mov
xor
movsb
dec
xchg
stc
pushf
adc
shlb
aam
cmp
subl
adc
mov
lds
aam
aam
mov
lock
mov
mov
xor
sub
es
pop
lret
mov
sbb
stos
fs
ret
inc
mov
in
cmc
dec
push
icebp
ja
jle
fs
push
or
stos
loop
mov
sbb
jae
push
jne
xor
test
xchg
inc
ja
fstps
sub
movsb
sbb
and
adc
xor
loop
call
lea
clc
inc
inc
xchg
xchg
not
fdivr
sbb
jl
mov
movsb
dec
adc
mov
xchg
cmpl
inc
cmp
mov
mov
cmpsl
daa
jmp
jmp
jbe
sub
jecxz
and
loop
test
lds
or
sbb
fbstp
push
aam
push
cs
cmp
or
pushf
or
sahf
push
mov
dec
sbb
add
push
jbe
mov
dec
and
flds
dec
dec
sbb
cmpsb
je
rcll
in
decl
gs
push
pop
shlb
popaw
or
jmp
mov
push
dec
in
adc
cmpsl
in
sbb
fildll
scas
jb
push
pop
ficomps
lea
vsqrtps
xchg
xchg
int
push
cli
push
mov
lods
out
mov
repnz
mov
mov
adc
xor
mov
rcrl
loope
inc
shlb
ss
pop
push
dec
jne
addr16
mov
push
xchg
sub
sub
xchg
jl
adc
pop
into
test
lahf
adc
mov
pop
sub
popa
insb
dec
dec
ss
xchg
sbb
imul
push
jp
and
rcll
add
gs
inc
iret
jns
mov
xchg
dec
movsl
xor
add
inc
pusha
add
mov
add
repz
xchg
sbb
add
icebp
cmp
shl
aad
cmp
jns
lcall
mov
pop
or
sarl
sarl
jbe
push
jg
xchg
movsb
xchg
insl
inc
mov
cld
movsb
cmp
add
call
pop
insl
out
and
dec
in
lods
pop
fcmovnbe
mov
je
sbbl
das
push
lea
int3
scas
mov
dec
cmp
fs
pop
xchg
adc
sbb
pop
inc
stos
mov
mov
adc
inc
cmp
fisttps
inc
mov
mov
adc
inc
lret
cmp
sub
dec
sbb
outsb
jge
pop
pop
push
inc
mov
dec
mov
mov
in
adc
stc
add
xor
fwait
dec
dec
pop
sbbl
jo
fwait
pop
lods
adc
sbb
mov
test
xchg
jne
or
cmp
lahf
shlb
add
in
dec
push
mov
adc
jbe
iret
fsubp
bound
fs
pop
push
imul
sub
mov
inc
pusha
cld
dec
mov
sbb
in
mov
jns
dec
movsb
dec
movsb
jp
jno
and
incl
jg
je
js,pn
loop
mov
dec
loop
sbb
lahf
or
filds
xor
pop
cmp
icebp
jns
mov
iret
and
xor
hlt
fnstenv
mov
out
fisubl
xor
dec
push
pop
jns
sahf
xchg
mov
or
inc
pop
mov
enter
jge
ja
push
aad
out
sbb
sbb
pop
lock
movsl
jl
icebp
ds
mov
dec
fwait
rcr
xchg
ficoml
ret
add
daa
xchg
xor
ds
push
lahf
pushf
imul
mov
sti
add
adc
mov
je
jge
fstps
push
pop
mov
and
int3
mov
inc
fs
pusha
xchg
ret
inc
pop
shl
pusha
aaa
lret
mov
add
sbb
leave
movsl
jne
xchg
xchg
movsb
or
shl
in
inc
gs
sbb
repz
or
inc
sub
sub
fnstcw
pop
arpl
popf
fdiv
mov
ds
xor
fwait
popa
jg
inc
mov
dec
cwtl
inc
push
js
mov
call
sbb
inc
sub
bound
imul
mov
adc
mov
xchg
mov
sbb
stc
ds
es
mov
dec
in
adc
mov
fbld
or
sbbl
jne
jge
or
mov
dec
shll
jecxz
mov
mov
stos
jmp
outsb
pop
mov
sbb
test
xchg
imul
xchg
data16
xlat
sbb
ficoms
fbstp
pop
cmp
ret
ljmp
rorl
pushf
loope
icebp
push
pop
aas
push
dec
out
dec
inc
cmpxchg
std
or
and
push
jle
push
out
mov
dec
dec
pop
xor
int
fs
add
outsl
out
pushf
sbb
push
mov
xor
sub
mov
into
daa
repnz
dec
xchg
jne
in
adc
pop
int
add
or
sbb
shl
jmp
or
hlt
mov
mov
test
and
cmp
cmp
aam
out
sub
mov
jb
adc
scas
inc
xchg
jmp
push
cmp
fisubs
sub
xchg
xchg
mov
add
stos
repnz
and
push
pop
les
shrl
in
xlat
inc
pop
mov
nop
pushf
mov
loopne
les
mov
pop
lods
psrad
sub
lods
cmp
repz
pop
mov
xchg
int
loop
or
adcb
xor
adc
dec
call
popf
jecxz
insb
enter
inc
or
mov
adc
mov
ja
cmpsb
movb
cwtl
xorl
and
and
movsl
dec
mov
adc
test
enter
jmp
mov
mov
sarl
jl
mov
fs
xor
ret
push
bound
sub
pop
mov
xchg
movsb
test
push
mov
in
int
enter
xchg
sub
clc
jge
cmpsl
sbb
mov
or
inc
je
pop
outsb
pop
add
sub
std
addr16
mov
xchg
idivb
push
popf
push
mov
add
scas
push
sub
push
pop
jnp
mov
sbb
out
jo
lea
insb
xchg
lret
cmpsl
mov
scas
sbb
add
jne
push
mov
div
aaa
repz
and
jp
aam
stos
and
shrb
faddp
mov
sahf
adc
mov
mov
pop
imul
fs
ljmp
inc
mov
jne
call
xor
stos
mov
pop
fstpt
inc
cmpsl
jo
add
test
xchg
lahf
leave
inc
aad
inc
inc
adc
in
int3
inc
aam
lds
ss
fildll
ss
cmpsb
adc
lret
dec
lock
std
xlat
aas
repz
adc
mov
xor
jo
xchg
inc
mov
rorb
xchg
sahf
or
scas
pop
adc
lods
in
dec
iret
out
loope
aad
nop
cmp
pop
nop
lahf
pop
mov
imul
sub
imul
push
icebp
and
mov
lcall
movsl
push
pop
mov
popw
inc
in
sub
push
push
imul
jmp
pop
mov
add
sbb
jb
mov
sahf
aas
xchg
jo
outsl
mov
lock
inc
mov
adc
jb
xchg
jne
xor
jmp
lds
sahf
xchg
fdiv
sbb
jecxz
sbb
xchg
in
sub
movsb
add
add
mov
inc
pop
inc
xor
setno
shl
outsb
int3
cmp
add
jp
xchg
les
add
pop
adc
dec
inc
aaa
int3
pop
sti
sbb
dec
pop
icebp
test
push
push
cmpsl
cmp
add
inc
lret
xchg
sub
daa
mov
das
fldt
mov
inc
pop
int
mov
inc
rclb
push
popf
inc
pop
dec
pop
les
sub
sub
or
movsl
pop
scas
fs
push
cmp
out
rol
imul
push
or
mov
mov
dec
jmp
lahf
loope
xchg
fstpt
arpl
outsb
cli
mov
mov
sub
inc
xchg
in
test
mov
pop
mov
pop
mov
popa
dec
fstps
adc
and
ficoml
mov
stos
jae
mov
push
bound
test
sub
je
jp
and
mov
icebp
lcall
inc
jl
std
lret
clc
mov
fdiv
jno
or
mov
test
pop
mov
mov
jo
orb
popa
arpl
lea
fsub
mov
xchg
mov
cs
or
lock
jg
aaa
movsb
clc
movsb
xchg
xchg
add
sbb
mov
fcomip
outsb
xchg
jno
mov
pusha
mov
adc
out
repz
and
sbb
into
fwait
jecxz
dec
mov
pop
add
leave
and
inc
inc
ret
fistpll
jo
or
scas
scas
test
jb
movl
mov
repnz
roll
shrb
pop
addl
stc
dec
sbbb
mov
pop
adc
mov
mov
mov
mov
adc
cmp
sub
xchg
mov
adc
lret
adc
mov
sub
int3
es
ficoms
fwait
mov
imul
enter
pushf
aaa
shlb
sahf
popa
xchg
pop
pop
jmp
push
shlb
xlat
add
inc
loop
in
notl
pushf
add
int
icebp
cmpsl
bound
test
mov
mov
scas
lea
repz
pop
lret
xor
xchg
pop
jae
inc
fs
popl
mov
cli
sub
mov
dec
imul
movsl
cli
clc
mov
stc
xor
sbb
test
lret
imul
adc
add
popa
pop
mov
sbb
fldlg2
popl
js
std
xchg
add
and
arpl
in
xorb
sub
mov
fcmovnb
gs
pop
sub
dec
xchg
repnz
sbb
inc
mov
or
clc
sub
outsb
test
jmp
mov
or
cmp
inc
xlat
out
jbe
mov
shrl
sarb
repnz
sub
daa
dec
stos
movsl
insb
in
adc
les
pop
inc
loope
out
pop
cmp
cmp
test
movsl
lcall
push
add
jl
inc
testl
sub
add
adc
cmpsl
mov
and
ja
sbb
in
icebp
adc
loope
out
out
insl
popf
and
sbb
push
arpl
and
repnz
arpl
sbb
cmp
xchg
or
jne
sbb
ja
xor
das
dec
ficoms
cmpsl
dec
cmp
mov
push
out
aas
imul
inc
cmp
inc
adc
sbb
sbb
loop
int3
mov
push
fldl
mov
orl
stos
sbb
xchg
mov
lret
ss
jg
xor
icebp
popf
pop
jne
jle
sbb
scas
ret
fimuls
cmp
dec
jp
std
stos
lahf
bound
int3
insb
push
xchg
inc
sub
jno
push
xchg
push
bound
cmc
loopne
loopne
adc
ficoms
mov
sahf
push
in
mov
jne
xor
dec
sub
clc
cwtl
shll
add
cli
cmp
stc
xlat
popa
pop
mov
push
xor
imul
mov
cmc
inc
int
xchg
shlb
je
test
adc
xchg
test
and
std
push
icebp
sbb
cwtl
negl
push
inc
cltd
adc
jg
xor
addb
daa
inc
scas
add
inc
aas
lret
fisttpll
out
sbb
jne
cmpsb
and
loop
or
adc
inc
movsb
and
out
fst
inc
or
popf
mov
add
mov
cli
fnstsw
icebp
lock
gs
inc
rcrl
sbb
xchg
call
sbb
sbb
push
ret
imul
sub
daa
pop
jno
push
or
mov
lret
pop
dec
fildll
scas
mov
and
push
ret
test
jle
incb
data16
test
sti
sub
mov
insb
adc
xor
hlt
clc
mov
cmp
mov
sub
and
push
cmp
test
push
loope
hlt
dec
pop
pop
addr16
mov
inc
aam
jge
push
in
jno
inc
test
pop
sbb
je
cwtl
push
out
incl
rol
jnp
mov
loop
adc
mov
dec
rclb
inc
xor
adc
out
add
lock
mulb
dec
cmp
nop
fmuls
xor
xlat
outsb
jle
jge
xor
mov
hlt
xor
xor
mov
cmp
aam
test
pop
in
add
movsb
test
pop
ret
mul
mov
mov
jl
sbb
sbb
mov
leave
mov
add
iret
jne
sub
mov
xor
stos
popa
sbb
sub
adc
jmp
mov
and
push
out
lods
sub
and
inc
fdiv
inc
push
pop
xorl
and
pop
sti
insb
mov
cmp
jne
lcall
add
dec
jnp
push
push
push
fstps
imul
mov
ja
adc
mov
js
pushl
es
mov
outsb
mov
test
in
data16
mov
lock
ds
push
and
out
cwtl
popa
loope
jge
mov
xor
mov
dec
aaa
mov
fstl
sbb
cmpsl
cltd
scas
clc
jns
mov
into
mov
dec
mov
je
and
movsl
ror
dec
lock
pop
scas
sub
scas
outsb
jle
and
stos
sub
xchg
lcall
or
and
push
leave
pop
lds
notl
testl
mov
insl
mov
lods
mov
dec
cltd
push
int
outsb
lea
sbb
rorl
cmp
mov
push
cmp
xor
xchg
jmp
xor
adc
mov
xchg
repnz
push
sub
in
out
stc
faddp
mov
mov
testl
add
cmp
std
cltd
or
or
out
xchg
jecxz
pop
xor
js
dec
fstpt
or
jmp
lds
pop
sbb
fimuls
sub
xchg
inc
lahf
add
lods
rorb
pavgb
or
loopne
sub
ret
inc
fmul
hlt
les
lcall
loopne
dec
ss
or
pop
sub
xchg
mov
popa
xor
cmp
fstl
adc
and
or
out
adc
repnz
bound
sub
insl
add
loop
pop
scas
test
cs
out
addr16
imul
pushf
clc
and
xor
sbb
int3
jbe
lods
push
imul
ret
inc
mov
arpl
decl
xchg
and
or
scas
push
leave
push
mov
mov
mov
rcll
fwait
pop
mov
xchg
xchg
mov
pop
ret
mov
ja
out
lods
xchg
lcall
sub
or
loop
xor
inc
lret
hlt
mov
fcmove
out
and
inc
scas
push
pop
dec
clc
js
adc
in
inc
stc
and
pusha
xorb
lcall
sbb
adc
push
test
mov
adcl
add
jnp
sub
dec
pop
test
jl
gs
pop
pop
xor
pop
inc
lds
insb
pusha
push
stos
push
fidivrs
sub
adc
insl
sti
mov
outsb
jl
lcall
and
cmp
pop
lods
in
std
mov
and
xor
pushf
loop
mov
shlb
je,pt
jae
loope
pop
xchg
imul
mov
enter
jbe
mov
ljmp
add
add
xchg
cld
in
rolb
fildll
xchg
in
sub
cmp
popf
push
and
push
or
mov
sarl
aam
sub
add
jbe
push
adcb
pop
mov
fistpll
push
mov
or
arpl
fnstcw
aaa
nop
shrl
inc
jnp
add
je
dec
or
lcall
lods
loopne
stos
fimull
insl
cmpsl
out
mov
mov
push
inc
xchg
inc
pop
out
inc
sbb
daa
popf
mov
cmpsl
pusha
cmp
pop
ds
out
das
sbb
push
mov
mov
enter
xchg
sbb
mov
jne
lret
xchg
pop
jo
or
inc
lds
sbb
sub
ds
pop
popl
pop
lea
jl
aas
out
lcall
mov
aas
iret
and
lds
xor
pop
mov
mov
fisttps
inc
dec
mov
pop
dec
jae
pop
sbb
stc
cld
imul
xchg
jg
xchg
jo
jmp
and
shrb
pop
pop
insb
es
jne
dec
sbb
jmp
test
and
mov
lret
sub
push
cltd
shll
cmc
and
sub
shrb
arpl
imul
xlat
or
ljmp
jmp
aas
roll
dec
mov
outsb
jp
popa
cltd
cmp
push
insl
cltd
int
mov
je
fistps
je
xchg
movsl
push
stc
mov
fcomps
test
jmp
insb
mov
cld
pop
lret
pop
fwait
add
fnstsw
mov
mov
or
sahf
dec
xchg
ds
sub
push
pop
into
out
cmp
cmp
mov
addr16
xor
fiadds
nop
pop
rcl
mov
push
out
jb
cld
lds
dec
popl
sar
leave
pusha
dec
mov
xchg
mov
ljmp
nop
lcall
sbb
mov
xor
leave
xchg
ret
iret
and
jge
out
mov
or
cmp
pop
xchg
mull
and
in
ret
push
rolb
or
into
call
mov
xchg
pusha
dec
scas
mov
pop
insl
sub
jbe
pushf
mov
icebp
xorb
das
jg
les
jno
push
stos
jo
jp
lods
scas
push
xor
and
ret
fwait
pop
cmp
lea
outsb
xor
mov
jbe
pop
xlat
dec
mov
les
lds
dec
or
jns
dec
jo
fcom
mov
sbb
inc
outsb
cmpsl
xchg
mov
push
out
jno
xor
mov
gs
push
int
icebp
nop
pushf
add
insl
insl
cmovns
frstor
popa
jns
cmp
std
popf
lds
sub
or
cmp
stc
shr
iret
imul
pop
mov
or
in
xlat
int3
adc
jle
mov
mov
frstor
cmp
dec
movsl
je
loope
fbstp
arpl
adc
jne
mov
icebp
testb
lock
inc
jp
dec
pop
inc
dec
pop
daa
cld
sub
xchg
sub
bound
mov
testl
add
mov
jb
ficoml
add
adcb
dec
lret
mov
lods
movsb
mov
pop
movsb
mov
jbe
cltd
aad
aad
xor
xlat
inc
fisubrs
flds
sbb
push
fsubl
push
nop
xchg
nop
mov
sbb
cmp
test
push
fwait
xor
xor
addr16
aas
add
mov
lcall
dec
mov
push
jp
leave
test
or
cmpsl
xchg
add
stc
aam
scas
adc
xchg
adc
jb
pop
jge
inc
jmp
sahf
test
sbb
out
lret
in
adc
adc
pop
mov
setno
pop
cli
cmpb
push
mov
pop
sub
cmpsb
shll
fstps
inc
lock
xor
or
push
addr16
mov
mov
cmp
lods
mov
jmp
pop
ret
adc
mov
fildll
and
sbb
shll
call
das
cmp
sub
cmp
push
in
pop
mov
jne
sbb
popf
lods
fsubr
xor
lret
push
test
xor
ret
xor
dec
push
std
or
mov
pop
jle
inc
data16
cmp
ftst
push
mov
pop
pusha
mov
pop
out
ljmp
stc
aaa
xor
scas
inc
testl
stos
pop
sbb
imul
inc
test
fwait
mov
inc
sub
nop
leave
fwait
jg
stos
lret
inc
daa
mov
mov
xor
xchg
cli
fistpll
push
or
mov
cmp
leave
movb
lret
andl
cmp
aad
in
shlb
insb
xchg
jle
mov
stos
lret
sbb
pusha
scas
mov
add
xchg
cmpl
rcrl
out
out
add
stos
aaa
ds
lret
sub
push
popa
je
sub
sbb
lods
test
ljmp
xchg
lock
sbb
hlt
or
arpl
adc
loope
jl
inc
clc
and
test
jmp
adcb
mov
sub
and
sbb
daa
pusha
push
sbb
movb
das
jne
lock
push
out
retw
push
push
loopne
div
sahf
adc
push
mov
lods
negl
les
cmc
nop
mov
outsb
mov
shrb
adc
push
sub
mov
std
inc
test
dec
mov
popa
fs
mov
lret
loope
aas
out
ficoml
leave
fstpl
mov
push
mov
sub
push
sbb
adc
mov
xchg
in
or
or
jl
push
stc
cld
jne
push
xchg
xchg
xor
imul
sub
out
mov
dec
ret
push
imul
sti
mov
loope
es
clc
lods
jb
add
scas
xchg
jge
arpl
pop
adc
hlt
outsl
inc
adc
mov
negb
mov
cltd
jbe
outsb
xor
jge
pop
leave
jge
push
les
push
sub
ljmp
popf
mov
pop
sub
adc
mov
xchg
fiaddl
push
int
adc
dec
cmp
mov
hlt
xor
scas
scas
out
dec
or
lret
std
mov
cli
jb
mov
dec
je
sahf
sahf
fidivs
cs
sub
pushf
pop
gs
xor
cmp
inc
jnp
inc
sbb
mov
cmp
pop
jecxz
mov
sub
aas
cld
imul
pop
sbb
mov
add
leave
mov
imul
aam
or
into
popl
test
mov
jns
pop
loop
leave
dec
test
lods
push
dec
xchg
cmc
lock
xor
mov
movsb
lret
dec
push
dec
hlt
pop
sbb
jno
jno
mulb
inc
insb
cmpsl
aas
xor
lret
add
xchg
ret
ret
pop
cmp
push
dec
or
cmpsb
cmp
inc
jp
shl
add
int3
lcall
scas
push
push
das
dec
inc
cmpsl
mov
cmp
repnz
lcall
test
in
mov
mov
insl
add
dec
popf
rcr
ljmp
and
or
pop
cltd
mov
jl
mov
ljmp
fcompl
scas
les
icebp
mov
sub
inc
dec
jecxz
repz
daa
dec
aas
jo
adc
fcmovnbe
insb
sbb
in
add
jbe
cmp
jecxz
ss
add
xor
and
out
cmpsl
aam
mov
jge
xor
lcall
dec
jmp
push
fisubrl
lahf
push
xchg
push
iret
icebp
sahf
pop
xor
jmp
dec
sbb
or
out
rcr
data16
fnstenv
sub
cmp
insl
xor
mov
sbb
and
stos
push
test
adc
mov
sarl
cmp
mov
out
inc
push
gs
pop
movsl
pop
push
rclb
dec
into
mov
mov
or
rclb
mov
dec
mov
inc
fs
inc
cmp
and
es
sbb
in
pop
cwtl
icebp
iret
sub
xchg
orb
jmp
and
fs
js
mov
es
jl
mov
lea
jle
pop
fs
inc
adc
repnz
lods
and
push
jns
bound
and
push
cli
jmp
cmp
inc
sub
pop
cmpsb
mov
cltd
mov
dec
add
movsl
test
rcrb
mov
ss
push
stos
adc
fcmovnb
cmp
gs
push
sub
leave
pop
push
je
mov
aas
push
mov
dec
test
sahf
pop
or
xchg
pop
xchg
orb
inc
dec
sbb
xlat
jo
or
ss
add
inc
cmc
push
lods
in
cmp
adc
push
popf
sub
daa
and
xor
mov
nop
jp
ljmp
hlt
ror
or
in
aaa
and
push
testl
js
push
xor
cmp
cmp
mov
or
iret
inc
out
jecxz
out
xor
mov
cwtl
inc
mov
mov
orl
sub
sarb
jg
mov
mov
test
js
jl
or
inc
mov
or
in
mov
mov
sub
xchg
xchg
loope
push
push
dec
mov
xchg
stos
cmp
xchg
sub
in
add
jecxz
cwtl
push
scas
sbb
sbb
out
sbb
jecxz
mov
push
and
mov
lahf
jno
inc
arpl
pop
pop
cld
js
xor
push
lcall
sti
mov
mov
popa
leave
xchg
ficoms
and
hlt
jecxz
in
aam
xlat
rorl
inc
mov
jne
push
mov
add
dec
repnz
pop
insl
push
aaa
push
and
ljmp
pop
jns
xor
mov
cmp
sarb
ror
cmpsb
ret
push
push
xor
push
rclb
push
jno
faddl
xchg
push
pusha
mov
cmp
test
sub
into
out
push
jo
mov
clc
fidivs
jo
ret
ret
and
ds
xchg
adc
stos
pop
jbe
js
jno
leave
push
in
push
xor
gs
and
out
cmpsb
inc
xlat
rcl
cmp
push
fldl
nop
scas
std
or
fdivs
sti
ss
mov
pop
cmp
dec
xchg
pop
mov
add
cmp
pop
lcall
clc
and
pop
arpl
push
xor
sbb
pushf
mov
or
mov
xor
xchg
iret
xchg
xor
xchg
push
test
adc
cltd
adc
push
dec
jno
movsl
aaa
rcr
mov
cmc
in
push
jne
cmp
fsub
mov
mov
fdivl
dec
mov
mov
testl
inc
xchg
inc
loope
lock
adc
mov
aas
adc
pop
cmc
dec
pop
inc
daa
mov
fsubs
test
jp
xor
int
pop
mov
pushf
cmc
jo
xor
sbb
loope
push
out
je
fs
in
adc
pop
pop
rcll
jmp
lods
lcall
icebp
xor
jns
frstor
aas
lods
cli
sahf
xor
loope
sub
cmp
and
xor
imul
push
dec
rcl
loope
data16
pop
lret
dec
push
inc
inc
mov
int
sbb
nop
adc
push
ja
cmp
in
sub
xor
jb
or
xor
int
hlt
fstl
gs
stc
jo
inc
inc
cmpsb
pop
cmp
xor
cmc
std
fwait
and
les
push
test
cmp
lea
outsl
inc
stc
xchg
out
jno
jb
cmpsb
test
push
xchg
lods
sub
into
add
cmp
int
pusha
cli
icebp
xchg
sbb
mov
movsb
sub
push
hlt
mov
inc
in
jg
adc
popf
ret
test
ja
cmp
inc
mov
sbb
popa
stos
loopne
xor
jne
insl
cmpsl
repnz
sub
jge
and
add
and
gs
lods
sbb
pop
sbb
cmpsl
aad
lods
int
push
rolb
dec
in
xor
pop
cmp
sarb
sub
sti
pop
cs
inc
jae
adcl
cmp
adc
jbe
sbb
rorl
dec
int3
and
dec
sub
or
mull
xchg
xlat
xor
loope
adc
xor
insb
push
pop
fcoms
jp
jae
rorb
lods
fwait
stos
popa
movsl
ljmp
lods
cld
insl
mov
pop
mov
xor
pushf
popf
test
pop
adc
pop
add
or
jmp
xor
inc
cltd
lret
icebp
push
out
fs
pop
das
in
xorb
orb
push
mov
aam
xchg
and
push
push
sub
out
or
mov
pop
in
cltd
or
mov
insl
sbb
push
decb
dec
pop
shlb
cmp
inc
loop
jle
adc
cmp
xor
jns
lret
mov
or
xor
jne
cmp
xor
jbe
hlt
js
push
add
push
mov
pushf
pop
ss
add
mov
in
out
pop
int
sbb
mov
pop
test
pop
sub
test
jle
ljmp
inc
shl
xchg
jmp
jmp
xchg
popf
cs
outsb
cwtl
das
sbb
aad
add
loopne
cs
cmpsb
jl
mov
lcall
ficompl
dec
xlat
mov
xor
fsubl
add
mov
sbb
xor
push
jbe
in
jp
mov
xlat
enter
cli
lds
ret
movsb
ds
add
adc
pushf
mov
popf
push
jb
add
aad
stos
lcall
jl
pop
iret
mov
iret
aas
and
jbe
jnp
aam
xor
sub
jmp
pushf
xor
jae
pop
mov
and
mov
test
leave
jne
les
adc
cwtl
pop
sti
mov
adc
xorl
test
xchg
das
je
mov
jb
pop
pusha
pop
xor
xchg
into
cmp
fdivrl
mov
pop
cmp
dec
cmp
inc
loope
mov
lahf
xor
pop
push
leave
mov
lret
sbb
push
xor
sub
or
xchg
pop
int
inc
pushf
test
sbbb
xor
test
jbe
mov
das
lret
mov
xchg
hlt
add
adc
cmp
fdivrl
mov
pop
jbe
inc
xchg
iret
mov
inc
adc
dec
sahf
cmp
fwait
mov
add
add
cmpsb
pop
pusha
pusha
adc
adc
sub
test
out
sbb
or
sbb
jae
mov
out
push
push
xchg
xchg
and
sbb
xor
rorl
add
push
mov
sahf
gs
xchg
iret
call
clc
scas
sahf
dec
shl
add
xor
fdiv
adc
jg
mov
inc
inc
das
inc
imul
and
sbb
outsl
mov
pushl
cld
sahf
les
adcb
pop
sub
jl
loop
int3
fidivs
or
test
push
mov
push
mov
jno
mov
fsubs
jb
cltd
xor
jo
mov
push
push
jl
xchg
mov
daa
adc
xor
daa
nop
mov
lcall
cmp
ja
sbbl
jno
pop
movsl
and
inc
lock
jge
ret
mov
popa
mov
and
movsl
addr16
mov
imul
lahf
dec
mov
or
sub
addr16
add
xchg
cmp
xor
mov
cmpsl
in
hlt
fadds
iret
sbb
dec
xor
push
xchg
in
mov
inc
fnsave
xor
repz
mov
shl
xchg
mov
ja
mov
xchg
data16
es
test
roll
lods
dec
and
add
fwait
das
jno
pusha
mov
xchg
sub
push
sbb
sbb
adc
lret
pop
ret
in
xchg
gs
add
mov
pop
aad
dec
sbbb
das
mul
xchg
rolb
iret
movsl
fwait
sbb
out
xchg
mov
mov
sub
sbb
jp
pop
aam
fwait
adc
pop
insl
or
sub
fstl
iret
mov
mov
jmp
out
push
xchg
cmp
ds
test
mov
cmpsl
push
mov
fistpll
xchg
adc
xchg
addl
or
add
stc
cmp
in
xchg
insb
dec
iret
add
xchg
and
xchg
ja
hlt
stos
cmpsb
mov
sbb
mov
xor
gs
xor
roll
cmpsb
imul
pusha
adc
in
mov
xchg
stc
sub
adc
add
sub
in
xchg
or
cli
stos
push
mov
cli
in
stc
mov
mov
and
call
subl
jl
add
lret
mov
or
or
ds
sub
aam
fs
dec
xlat
or
pop
ja
rclb
mov
test
jbe
or
jb
xor
cmp
addr16
js
fwait
ljmp
mov
add
xchg
sbb
push
les
sbb
mov
sub
sbb
xor
mov
outsl
adc
fwait
xchg
enter
add
inc
xchg
dec
addr16
lock
dec
int3
sub
dec
mov
inc
fmuls
xlat
int
shll
xchg
mov
adc
xchg
mov
xor
inc
shl
xchg
push
inc
add
mov
loope
sti
mov
lcall
adc
jne
jmp
mov
popf
sub
jns
pop
imul
mov
xchg
fdivrp
imul
jg
sbb
and
or
xchg
jo
movsb
jmp
das
imul
jmp
ljmp
dec
mov
cmp
push
stc
test
in
mov
mov
or
or
mov
stc
cwtl
out
into
cld
inc
decl
cmp
faddp
jb
movl
xchg
out
xor
sbb
xor
or
mov
outsb
mov
mov
or
incb
sub
jae
add
es
pop
xchg
and
pop
and
mov
and
divl
xrelease
sbb
mov
rolb
clc
xchg
or
jle
lea
xchg
sahf
fnstcw
dec
mov
mov
sbb
test
xchg
clc
gs
popf
adc
fs
xor
mov
imul
push
sti
sub
inc
pushf
inc
ja
sbb
icebp
push
stc
xchg
or
faddl
fldt
int
lcall
mov
stos
stos
jo
dec
pop
dec
scas
pop
mov
daa
out
sub
push
mov
cltd
ffree
or
loope
lcall
cmp
mov
sahf
push
inc
stc
pop
gs
fwait
push
ret
push
shll
int
insb
mov
sub
or
xlat
xor
jmp
out
add
rcll
lret
adc
xor
leave
dec
adc
dec
adc
mov
xchg
nop
lods
in
mov
push
mov
test
push
pop
xor
xchg
stc
pushf
xchg
sbb
int
sti
lods
mov
into
insb
js
adc
push
stos
mov
inc
outsl
loope
dec
in
arpl
mov
arpl
mov
add
mov
and
lods
call
or
shr
imul
mov
or
add
cmpsb
bound
fsubrl
sbbb
xor
xchg
mov
fldcw
push
add
dec
imul
xchg
divl
sub
std
pop
loop
mov
mov
sbb
ficomps
pushf
inc
and
das
add
scas
gs
push
sub
lahf
ret
test
fwait
cld
and
pop
repnz
mov
ror
arpl
lds
cmp
lock
inc
test
dec
cmpsl
mov
jns
add
xchg
mov
jle
dec
mov
jp
jbe
rolb
mov
xchg
jb
nop
jbe
out
addr16
mov
out
js
pop
push
xor
sub
ja
push
inc
mov
aam
xchg
xor
dec
push
inc
into
cmp
mov
ret
lret
in
mov
mov
pop
ret
cmp
jns
mulps
repnz
clc
fmulp
sbb
daa
mov
cwtl
test
pop
dec
out
jbe
popa
pop
data16
sahf
mov
fimuls
ret
jge
fwait
out
cmp
push
cmpb
jle
out
je
gs
xchg
test
mov
scas
ficompl
jbe
in
and
jmp
mov
in
push
in
inc
add
push
push
mov
jl
cmp
jnp
inc
inc
mov
call
xchg
inc
movsb
cli
fbstp
sti
inc
fistps
xor
mov
stos
jge
sahf
out
loopne
xor
mov
aam
inc
cmova
sahf
jecxz
mov
mov
into
add
push
out
cltd
adc
xchg
jp
dec
shrb
shr
aaa
shl
iret
push
shlb
and
add
sbb
jle
stc
lock
lock
dec
sbb
bound
inc
and
mov
rcr
lret
inc
jg
mov
pop
mov
mov
loop
adc
adc
mov
int
mov
jns
or
aaa
cli
in
add
popf
jns
int3
xchg
cmp
inc
hlt
repnz
xchg
cmp
xchg
lret
iret
jno
test
or
pop
cli
xor
pop
cmpsb
xchg
cli
dec
data16
popf
jns
mov
and
ja
sbb
daa
fistps
dec
mov
loop
sub
adc
jge
fiadds
mov
inc
and
adc
fnstcw
in
out
inc
add
push
aaa
mov
shlb
rcl
imul
loop
cs
cwtl
adc
lcall
inc
adc
jbe
pusha
jp
xor
or
cs
pop
test
popf
jmp
mov
mov
outsl
cmp
std
pop
enter
mov
loopne
addr16
add
mov
sbb
daa
lret
and
inc
adc
insb
pop
xor
pop
or
mov
test
mov
dec
xchg
xor
fwait
mov
test
int
jmp
mov
mov
stc
mov
arpl
pop
push
leave
xchg
xor
pop
jbe
lret
inc
xchg
mov
mov
into
cmp
mov
mov
test
or
and
sbb
and
jbe
push
inc
xor
push
and
push
xorb
mov
jbe
jp
and
rcll
jb
add
inc
cmp
ljmp
std
or
fiaddl
push
bound
sahf
out
scas
stos
jo
jmp
pusha
mov
call
incb
bound
jne
pop
lret
es
add
or
decb
aaa
out
jle
std
popa
ss
ljmp
add
add
and
fst
cmpl
pop
add
lcall
in
push
xor
and
pushf
push
fnstsw
jg
int
out
dec
shrb
xchg
dec
dec
rcll
dec
jno
int3
pushf
pop
das
out
adc
xor
sub
test
sbb
fdivrl
popa
mov
test
shrl
stos
sti
test
push
dec
frstor
push
sti
sub
dec
adcl
js
adc
ret
ret
aaa
enter
push
mov
fcmovb
stos
movsb
repnz
dec
dec
popa
fcmovne
call
adc
add
insl
idivl
pushf
xor
dec
lods
pop
mov
cwtl
dec
ficoml
aam
push
mov
dec
ffree
mov
and
and
popa
insl
xchg
and
fnsave
test
inc
aad
xor
mov
jnp
mov
imul
test
lahf
dec
cs
inc
hlt
inc
mov
mov
cmp
mov
pop
fistl
int
push
sbb
rorb
pop
jo
into
mov
ljmp
sub
out
xsave
stc
adc
push
je
sbb
jns
test
jae
mov
daa
sbb
fstl
aam
scas
xchg
cmp
push
lcall
stos
xor
out
cwtl
cs
sbb
lcall
dec
ret
sbb
cmc
outsb
mov
mov
add
test
pop
inc
divl
or
inc
fcomi
pop
mov
dec
and
movsl
dec
mov
es
fwait
xchg
nop
test
or
gs
inc
je
sub
adc
cwtl
lock
sbbb
ja
imul
pop
fmulp
xchg
mov
fcomip
xchg
xchg
adc
ss
sub
xchg
cmp
cmpsb
mov
mov
cwtl
mov
inc
add
les
into
bswap
pop
push
mov
rolb
or
mov
repz
scas
push
cmp
das
adc
pop
out
repz
adc
pop
pop
mov
out
xor
ss
std
push
jg
xor
fdivl
push
push
and
xor
sahf
mov
and
insb
mov
lock
pop
ror
iret
jno
jae
dec
scas
movsl
jge
adc
pushf
and
and
sub
sti
lds
jae
mov
nop
mov
das
xchg
push
les
repnz
add
in
shlb
aam
mov
mov
sbb
mov
cmpl
popf
push
cmp
out
stc
out
mov
xlat
aas
fidivl
mov
jge
push
lods
pop
sar
ss
lret
shrb
scas
mov
ret
sahf
ljmp
mov
cmp
test
mov
ja
aaa
and
movsl
aam
adc
mov
ljmp
stos
jp
cmp
adc
pop
add
out
cmp
jecxz
push
popf
test
test
sahf
dec
mov
lcall
fcmovu
divl
test
push
ds
das
mov
pop
stc
pop
bound
insl
jmp
cltd
add
mov
shlb
lds
inc
fisttpll
inc
stc
jmp
daa
ds
test
mov
rcrb
js
js
std
sub
lods
imul
aam
mov
push
enter
jmp
xor
and
imul
mov
xor
aaa
mov
icebp
ret
cmc
and
sbbb
xchg
xchg
ret
pop
movsb
loope
cmp
cmc
pop
dec
pop
in
fisubl
mov
cld
test
std
pusha
pop
test
inc
ret
or
pop
push
mov
andb
sub
js
cmp
in
mov
dec
notw
idivb
or
pop
mov
adc
test
or
mov
jmp
add
and
pop
imul
arpl
push
adc
unpcklps
leave
cmpsb
inc
fisubl
jb
imul
add
bound
inc
loope
aad
pop
testl
sub
out
and
out
and
push
mov
clc
sbb
mov
cld
fneni(8087
cmp
aas
loope
mov
arpl
add
inc
shlb
jo
dec
shll
adc
insb
push
jb
jg
xchg
dec
add
xor
push
jmp
pop
adc
pusha
outsb
aaa
adc
ja
in
minps
js
and
fnstsw
ljmp
mulb
cld
xchg
xor
sub
and
or
cmc
mov
mov
scas
cli
insb
sub
mov
sbb
int3
adc
mov
mov
in
and
pop
mov
lods
add
sub
pusha
cltd
icebp
rcrl
mov
mov
sub
ret
jge
sti
ds
xchg
int3
sbb
adcl
sbb
lea
ret
xchg
lds
pop
iret
adcb
lret
mov
and
stc
ret
cmpsl
xchg
sbb
gs
adc
mov
mov
mov
roll
xchg
outsl
xor
adc
loope
mov
jno
sub
inc
sahf
jbe
mov
adc
push
fidivl
stos
test
in
ljmp
movsb
push
cmp
into
xlat
stc
fs
mov
pusha
jge
in
push
sub
gs
inc
test
cmc
stc
popf
subb
lcall
outsl
xor
sti
aas
out
jns
aas
lds
add
arpl
outsl
inc
sahf
aam
lret
movsl
cmp
lcall
xchg
xchg
aam
lret
out
repz
sub
lea
mov
fsubr
xor
lods
cmpl
fbld
cmp
pop
push
out
adc
cs
mov
cmp
movsb
jns
out
sub
movl
sub
shll
jmp
sub
sahf
lock
out
mov
xchg
pushf
jo
fisubl
push
jg
in
mov
divb
add
inc
js
pop
or
fdivs
ret
bound
outsb
cmpsl
lret
cmp
loop
lds
pop
sub
sti
orb
insb
andl
cmpsl
rolb
jne
push
in
ljmp
pop
mov
inc
lret
std
mov
mov
jmp
push
les
repnz
xlat
fs
xor
cmp
xchg
add
rcr
in
push
mov
sahf
sub
loopne
mov
mov
dec
pop
sub
shll
mov
inc
rcll
and
shl
dec
xor
push
mov
push
mov
lods
adc
push
cli
lar
xor
repnz
scas
mov
xor
std
mov
in
dec
out
mov
jmp
lret
fldcw
fistpll
aam
test
std
pop
jge
push
sahf
lods
ret
or
sarl
mov
iret
clc
leave
pop
xchg
and
js
jmp
push
lea
push
ljmp
jge
push
xchg
xchg
xchg
aas
dec
and
test
and
jmp
call
push
xchg
jg
sub
and
pop
mov
add
int
mov
scas
sbb
out
mov
push
in
inc
icebp
rorb
pop
xlat
and
imul
cmp
fs
ret
mov
mov
jo
stos
fwait
xchg
inc
or
pop
popf
pop
dec
and
lods
sbb
xchg
aaa
or
pop
gs
in
push
lock
inc
dec
or
pop
mov
sbb
dec
push
dec
mov
ror
pop
jno
add
fld
dec
cmpsb
or
cmp
mov
cmpb
inc
cmp
daa
int3
fwait
test
test
push
ja
jp
movlhps
jl
ja
stos
pop
mov
xor
jl
sub
xchg
stos
test
jb
lds
jnp
xor
mov
lret
jg
pop
sbb
daa
lds
push
lcall
mov
loope
js
jmp
stc
js
mov
lods
mov
cmpsb
sar
jge
jb
sbb
push
and
popf
pop
stc
leave
inc
push
dec
lods
xchg
and
mov
sub
jle
adc
mov
sub
mov
cld
lock
call
sub
cmp
les
xchg
adcb
movsb
loop
bswap
stos
mov
pop
lret
push
cmp
xlat
and
out
dec
imul
into
mov
outsl
out
nop
add
sbb
loope
outsl
repz
sub
aas
xor
fwait
mov
jmp
aas
scas
aam
fcmovnbe
lret
dec
idivl
jb
cmp
clc
arpl
dec
dec
and
push
cmpsl
iret
repz
jns
mov
jmp
pop
fs
sub
adc
dec
xchg
xchg
test
rcl
inc
je
loop
push
cmp
sub
pop
jp
outsb
clc
sub
fsubs
push
data16
out
dec
xor
int
fcoml
sub
int3
aas
mov
loopne
fldl2t
adc
push
xchg
pop
rcll
nop
adc
into
sub
fmuls
jbe
imull
test
and
ret
lock
cld
test
add
sub
inc
lods
add
xlat
jo
loopne
push
xchg
sub
pop
jle
mov
mov
pop
sarb
sub
dec
testl
aaa
in
insl
jp
scas
icebp
push
mov
iret
sbb
pop
in
and
xchg
lret
dec
jns
shl
xor
gs
enter
scas
and
inc
hlt
cld
jmp
int3
fsubrl
cmp
jb
loop
xchg
out
insl
xor
mov
sbb
dec
push
arpl
outsl
sub
sbb
repnz
int
dec
lods
sbb
sbb
sub
mov
lahf
arpl
in
adc
mov
fwait
jbe
icebp
push
sbb
das
adc
xor
imul
mov
js
push
dec
lret
pop
sarb
jmp
mov
clc
stos
sub
ja
inc
push
mov
lds
mov
test
pop
movsb
dec
inc
or
pop
mov
mov
cs
and
pop
pop
mov
ret
sbb
fiadds
jno
adc
push
and
inc
cmpsl
rcll
adc
sahf
sarl
cmpsb
jp
arpl
mov
push
adc
mov
in
pop
mov
ret
push
xor
pop
inc
xlat
jne
xchg
cltd
jne
cmp
adc
outsl
repz
int3
scas
mov
or
movsb
fbld
repz
clc
or
lods
popf
xlat
and
js
pop
cwtl
xchg
es
jnp
cmp
push
push
lcall
mov
in
sbb
and
es
or
pusha
imul
and
adc
rorb
hlt
push
mov
mov
jae
pusha
or
push
pop
sub
and
ss
jle
iret
js
mov
xchg
xor
addr16
stos
std
inc
push
jle
mov
push
aas
pop
sbb
hlt
iret
mov
lret
pop
cmpl
push
adc
fcoml
add
pop
ficompl
pop
xor
and
jecxz
push
sahf
xchg
nop
mov
mov
xor
fldt
adc
in
mov
or
in
sbb
hlt
movsl
pop
aad
rcll
cmpsb
repnz
mov
inc
mov
add
lret
jle
in
iret
and
rorb
inc
xchg
nop
xchg
aas
sub
and
xchg
adc
into
ret
aam
mov
aad
mov
pop
dec
ret
cwtl
sub
inc
mov
daa
push
jnp
cmp
mov
outsb
pop
jp
fldcw
mov
and
sbb
push
fiadds
adc
mov
cmp
insb
js
and
xchg
cmc
jo
push
sub
sahf
jle
dec
pop
xorb
pop
ss
ret
xor
xchg
cmp
mov
mov
sbb
shll
xlat
sub
adc
cli
daa
pop
imul
jns
imul
push
jnp
test
in
inc
out
lahf
adc
roll
clc
imul
mov
inc
movl
and
and
adc
stos
mov
xorb
jo
pop
mov
jge
dec
ret
call
cmpsb
xor
fisubl
je
lods
cli
jg
lods
test
je
jo
insl
xchg
ljmp
dec
xor
xor
xor
adc
mov
sbb
jb
stos
xchg
stos
inc
outsb
stos
dec
jge
cmp
lret
aas
mov
xchg
pop
cwtl
adc
xorl
mov
inc
mov
adc
cwtl
push
popa
inc
add
rcll
aaa
into
xchg
rorb
jge
push
pop
adc
je
and
pop
xchg
mov
ror
add
xchg
mov
cmp
push
mov
jae
push
push
popa
cmpsb
mov
fdiv
sub
pop
pushf
call
or
or
pusha
in
add
xchg
jns
mov
or
jl
push
sub
inc
out
nop
cmpsb
sub
adc
add
xor
aas
sarl
pop
sub
xlat
in
dec
orb
pop
mov
out
xchg
add
cmp
mov
test
js
cmc
xchg
test
movsb
mov
fmul
mov
std
add
jae
xchg
stos
pushf
push
jne
subl
inc
in
jno
arpl
lret
add
loop
pop
and
push
cmpsl
addb
xor
and
adcb
iret
aad
ret
xor
ljmp
sbb
mov
js
scas
sbb
sbb
cld
arpl
or
push
and
dec
cmp
sbb
inc
stc
or
and
lret
jo
sbb
loop
fwait
mov
inc
ret
pop
iret
movsl
popf
lret
lea
lds
in
out
dec
mov
inc
sbb
test
cmp
sub
insl
cli
or
arpl
cmp
sarb
lahf
xchg
jl
out
movsl
jae
xchg
mov
mov
dec
lds
pop
adc
xchg
mov
mov
ret
cmpsb
sub
daa
mov
in
in
mov
stos
aam
iret
jno
fs
mov
nop
mov
mov
je
mov
jnp
rclb
pop
dec
and
ds
enter
adc
and
mov
adc
mov
out
xchg
sub
mov
cmp
test
add
xor
lcall
mov
inc
inc
lds
in
rorb
cld
dec
in
jmp
je
or
cmpsb
mov
lods
in
fsubrp
scas
push
jns
cmpsb
push
mul
add
loope
mov
mov
mov
popa
sbb
push
pop
sbb
lcall
rorb
push
loop
adc
mov
push
cmp
std
cmpsb
push
fldpi
pop
mov
or
imul
popf
out
in
test
add
les
push
loopne
addb
jb
mov
mov
jle
outsb
mov
pop
jae
mov
and
xchg
cmp
outsb
stc
mov
cmpsb
ljmp
bound
in
jle
add
rclb
mov
in
cld
cmp
out
cmp
pop
aaa
dec
add
popf
ss
jle
fldcw
xchg
mov
cmp
add
lret
popf
jle
lods
outsl
xor
fidivl
shlb
dec
fdiv
clc
sub
cli
inc
aaa
dec
xor
aad
and
fsts
ljmp
outsl
pusha
xchg
mov
addr16
fs
jmp
cltd
test
outsb
fists
adc
push
ret
push
lahf
sub
fwait
ret
jmp
push
sar
ret
addb
jno
pop
stos
les
dec
mulb
lcall
scas
and
cltd
ljmp
xor
xor
xchg
xor
aas
clc
enter
adc
jle
fcmovnbe
imul
out
push
jl
or
pushf
xor
nop
arpl
mov
in
cmp
inc
bound
data16
add
icebp
mov
cmp
scas
mov
sbb
insb
xchg
addr16
mov
pop
inc
inc
rclb
cmpsb
pop
fldl
xchg
dec
sub
dec
pop
cmc
jmp
and
sub
in
shrb
ds
jge
push
mov
xchg
pop
add
and
mov
xchg
mov
fidivrl
pop
push
xchg
push
push
mov
cmp
jne
fnsave
les
mov
rcrl
push
lret
test
lds
xchg
data16
xchg
inc
mov
or
cmpl
cmp
aaa
sbb
xchg
or
sbb
ret
and
iret
stc
sbb
out
jge
mov
xor
sbb
mov
inc
lock
inc
adc
cmp
cmpsl
aad
mov
cltd
aam
push
fldcw
fcoms
movsb
or
gs
in
iret
jb
leave
inc
dec
fistl
decb
imul
pop
mov
push
subl
inc
into
addr16
es
adc
mov
fstl
pop
stos
inc
jl
xchg
roll
ror
cmp
push
push
xchg
adc
mov
pop
cmpsb
xor
fisubl
hlt
push
dec
pop
mov
mov
ror
in
sbb
jecxz
pop
mov
push
in
insl
sub
adc
pop
sub
or
cmp
in
sbbb
fcoml
or
jno
in
in
push
ja
lods
mov
mov
stos
mov
sbb
scas
stc
cmp
repz
inc
idivl
push
cld
adcl
mov
mov
adc
aam
dec
mov
aas
xor
cmovl
jnp
sbb
cmp
rcll
sub
pop
das
call
lret
mov
adc
ficoms
int3
jecxz
shlb
add
jae
adc
leave
aam
dec
push
inc
dec
int
inc
fstps
adc
sbb
test
mov
xor
adcb
repz
adcb
pop
mov
mov
aaa
inc
les
jbe
hlt
add
fcoml
shr
movsl
push
jp
jnp
inc
pop
out
push
jne
lods
pushf
xor
fistps
clc
fsubs
lahf
stos
call
idiv
cltd
mov
and
in
sub
mov
xchg
sub
mov
sub
rcll
jb
je
mov
jmp
loop
xchg
mov
cmpsb
fcomip
dec
xchg
imul
fstpl
mov
fcmovne
and
mov
inc
dec
cli
inc
push
test
outsb
cmp
outsb
push
adc
pop
in
adc
adc
sub
clc
leave
lods
xchg
sarl
mov
in
std
cli
dec
mov
or
dec
xor
gs
test
cmpsb
sub
xchg
mov
in
push
inc
and
xchg
les
mov
push
adc
cmp
jb
lahf
pop
xlat
push
xor
mov
in
out
not
repnz
sub
movsl
inc
push
idiv
jb
adc
fwait
aam
pop
cmp
sbbl
lea
xchg
int3
in
iret
je
mov
xor
stos
rol
dec
inc
cmp
sub
adc
jnp
adc
jp
stc
xchg
xor
adc
je
inc
dec
mov
lods
lods
insl
ja
mov
jecxz
xor
sbb
out
add
add
fs
mov
subb
mov
dec
outsb
cmp
inc
loopne
mov
jg
cmpsb
bound
mov
in
push
sub
mov
mov
jecxz
ds
movsl
adcb
sbb
or
mov
xor
lea
in
mov
jl
es
addr16
pop
xchg
jge,pn
adc
xor
stos
dec
mov
inc
addl
leave
fmull
jns
push
and
cld
js
mov
aad
pop
sub
sub
dec
pop
shlb
xor
mov
aad
xchg
cli
scas
inc
addr16
push
sbb
add
inc
out
stc
lods
outsb
dec
sub
lea
mov
hlt
adc
lcall
cmpsb
adcb
es
cs
cld
insl
repz
in
orl
and
jo
xor
mov
insl
stc
in
xchg
jmp
mov
sbb
addr16
add
enter
jge
clc
sbb
pop
jbe
outsb
dec
jne
mov
insl
pop
int3
and
add
adc
icebp
add
inc
add
mov
stos
jne
adc
fs
or
clc
pop
lret
int
dec
test
pop
mov
xchg
mov
jo
mov
cmovne
dec
scas
addl
sub
cmp
xor
and
insb
sub
pop
cs
inc
shll
xor
lock
dec
test
dec
movsl
fwait
add
lahf
in
jnp
xchg
das
shrb
mov
lds
enter
inc
idiv
pop
xchg
gs
iret
lock
les
xchg
int3
lcall
icebp
mov
mov
test
stos
enter
mov
int3
out
in
cmp
es
dec
xchg
adc
jo
sbb
xchg
fwait
sbb
and
rclb
sbb
push
adc
jge,pt
push
pop
movsl
out
xchg
or
xchg
mov
lcall
popf
dec
call
dec
xchg
outsb
lret
dec
aaa
or
mov
mov
jnp
sub
fdivr
push
test
xor
inc
add
mov
ret
jno
xor
sub
pop
testl
pop
popf
pop
lods
test
xorl
lods
movsb
je
inc
clc
xsha256
cmpsb
aam
pusha
stos
jmp
xchg
jg,pt
das
outsl
clc
push
cwtl
add
push
mov
insb
mov
jb
cmp
dec
popf
jmp
xchg
pop
or
movsb
inc
mov
mov
dec
dec
push
push
fsubrp
jmp
outsl
shll
push
gs
dec
sub
mov
into
xor
out
call
dec
cld
cmp
push
dec
scas
push
inc
call
addr16
iret
out
sbb
xor
out
in
ljmp
and
stos
dec
int3
mov
shlb
insb
cmp
adc
mov
arpl
out
mov
inc
inc
orl
push
mov
imul
mov
mov
mov
movsb
int
into
aad
sbb
fsubrs
xchg
dec
scas
adc
jmp
ja
test
mov
sbb
cmpsl
sub
push
adc
lods
shll
sbb
add
adc
adc
mov
dec
jne
mov
adc
push
mov
stos
popa
insl
inc
adc
ret
mov
add
loop
xchg
fs
mov
fmuls
mov
rep
cwtl
xchg
pop
arpl
pusha
xor
jns
clc
mov
mov
inc
jne
outsl
dec
push
lods
fs
rcr
test
and
dec
xchg
jp
arpl
sahf
fsts
aam
stc
sbb
stc
into
push
mov
jns
arpl
inc
cmc
loopne
iret
jbe
popf
movsb
pop
adc
mov
rorl
xchg
in
xor
lret
xor
je
lock
in
mov
add
mov
sbb
movl
jecxz
dec
add
lea
inc
cmp
mov
fisttpll
ret
cltd
dec
ds
sbb
push
add
std
fiaddl
addr16
cmp
mov
mov
mov
or
fidivs
movsb
cld
ficoms
je
mov
push
adc
cmp
mov
cli
mov
int
cwtl
cmp
sarb
scas
cmp
push
mov
jae
cmpsb
fs
das
into
gs
mov
dec
sbb
sbb
les
repnz
add
loope
movsl
sahf
dec
daa
add
fdivr
cwtl
sbb
out
test
mov
sbb
js
adc
rcrb
iret
jle
sbbb
jle
ja
das
stos
xchg
inc
call
inc
aam
mov
je
jmp
fdivrl
push
imul
lods
in
adc
mov
int
cs
xchg
idiv
push
mov
lretw
xchg
aaa
ret
shll
in
insl
mov
fdivrl
in
daa
adc
or
lahf
dec
lret
call
rcll
popa
add
push
mov
test
bnd
negb
popa
lea
dec
fwait
cmc
insl
cmp
add
hlt
insl
mov
cmpsl
xor
in
cmpsl
cmp
cmp
rcrb
fdivp
test
fwait
xchg
and
sbb
outsb
iret
push
add
leave
inc
out
mov
cmp
dec
xchg
repz
sbb
imul
test
xchg
cmp
fsub
add
mov
std
mov
xchg
pushf
gs
mov
leave
pop
jecxz
popf
xchg
push
sub
jo
pop
push
shlb
add
mov
sub
in
sbb
push
or
hlt
out
push
xchg
cld
fcompl
sahf
aam
cmp
cmp
mov
pop
icebp
sub
pop
imul
pop
mov
addr16
add
fcoml
lahf
cli
movsb
xchg
inc
cwtl
je
add
or
push
loop
pop
push
pop
cmp
or
pop
in
mov
jne
jnp
aad
test
adcb
pusha
sti
int
pop
rcr
sub
mov
cmpsb
insl
sub
dec
test
cld
aam
test
lds
mov
or
xor
or
adc
out
xchg
mov
imul
jo
sbb
stos
dec
sti
add
dec
mov
xchg
iret
test
adc
mov
test
xor
test
sarb
adc
adc
add
adcb
bnd
cmp
add
outsl
sub
in
mov
enter
daa
flds
test
addr16
adc
out
cmp
pop
ds
lret
xlat
and
sbb
add
ja
pusha
enter
ljmp
and
xchg
fsubr
ljmp
in
aad
out
inc
cmp
mov
sbb
lods
jbe
mov
push
lret
sub
sub
inc
fnsave
cmc
inc
xchg
in
fsub
je
push
xor
arpl
test
and
mov
xchg
sbb
lock
jne
ror
sub
fisubl
pop
out
add
jae
ret
add
int3
pop
xlat
mov
xor
loope
jo
inc
xchg
dec
out
fsubl
jle
inc
xchg
in
mov
mov
jl
movb
pushf
pop
lods
sub
je
or
push
jg
pop
iret
cmc
into
test
jge
lcall
out
je
jb
and
and
cwtl
ljmp
testb
int
mov
push
xchg
dec
adc
subl
lods
add
push
insb
mov
je
mov
jle
pop
xchg
and
ds
call
dec
call
sub
pop
add
adc
push
sbb
shlb
cli
xor
cmp
iret
lret
in
repnz
pop
xchg
and
imul
pop
jno
in
inc
mov
jb
dec
xchg
jle
popa
cmp
outsl
cmp
sub
jmp
mov
sub
shll
in
mov
mov
jnp
dec
pop
mov
insb
add
ret
mov
repnz
out
jae
out
xorb
xor
add
mov
ret
into
shlb
cltd
lods
pushf
gs
sub
cmp
cmp
push
out
or
or
mov
mov
or
mov
fdivrs
shlb
roll
sbb
push
jns
stos
test
mov
ljmp
out
lret
lahf
jnp
ret
or
ret
aad
shlb
arpl
jle
lahf
fnstcw
int
sub
or
lcall
xchg
push
xchg
push
imul
js
in
mov
push
mov
pop
out
xor
cmp
and
sub
cltd
cs
negb
dec
xlat
add
roll
icebp
inc
push
test
inc
xchg
mov
sbb
lahf
nop
sbb
mov
jl
sub
test
orl
jg
mov
inc
fcompl
mov
fimull
and
shl
pusha
or
dec
adcl
push
mov
insl
rcr
inc
out
dec
or
sarl
les
scas
movsb
aam
or
push
test
mov
in
mov
jmp
lds
sub
fs
inc
enter
cld
mov
hlt
and
je
mov
push
sub
int
fcoms
sub
popa
sbb
ret
push
aam
scas
mov
pop
sub
test
leave
fnsave
mov
xchg
xchg
mov
cmp
aam
cmp
xchg
ret
inc
insb
and
add
aam
inc
mov
imul
jae
aad
outsl
int3
hlt
addr16
mov
jmp
outsl
sbb
cmp
fstps
add
ret
push
lea
cmpsb
mov
nop
test
repnz
jmp
stos
sub
leave
mov
roll
mov
addl
xor
pushf
subps
jecxz
lret
cltd
mov
add
adc
mov
enter
mov
mov
mov
xchg
pop
cmp
lods
test
pop
into
in
xchg
shl
inc
mov
mov
xor
aas
push
mov
loope
ret
jnp
mov
pop
push
jns
int
jp
pushf
sti
mov
repnz
mov
fisubl
xor
dec
and
mov
clc
cmpsl
sbb
mov
into
out
mov
ljmp
xor
lea
out
imul
nop
jmp
ret
xchg
int3
daa
adc
fs
aaa
lock
hlt
push
xorl
jle
shr
mov
dec
je
jp
mov
loop
outsb
dec
mov
and
idivl
mov
repnz
sub
aaa
xchg
inc
jnp
push
je
in
sub
xchg
xor
mov
frstor
jge
jns
adc
out
push
ja
sub
movsl
or
xor
xor
sub
or
sbbl
rcrl
ds
es
imul
xchg
cmp
ret
das
xchg
pusha
sbb
mov
jb
push
xchg
ret
cmp
pop
xchg
mov
and
iret
dec
jo
mov
pop
in
movsl
xor
cmp
fsubs
inc
jbe
cmp
adc
and
or
fisubrs
push
fiaddl
cmp
add
es
xchg
push
lret
ja
test
sub
or
adc
jmp
push
mov
xchg
push
and
xor
or
daa
sub
push
xor
pop
loopne
mov
adc
jg
out
sub
lea
push
xor
xchg
cmp
outsl
adc
ljmp
mov
push
dec
push
adc
shll
in
pop
stc
aad
sbb
aaa
push
or
mov
inc
mov
into
lret
sbb
xchg
fcompl
mov
sbb
sahf
mov
scas
sbb
addr16
cwtl
dec
push
sub
jno
mov
xor
filds
mov
imul
js
fdivs
sub
icebp
aam
push
sub
add
popa
in
dec
enter
call
xor
push
imul
dec
and
xchg
xor
mov
inc
mov
in
cli
cmp
xlat
mov
mov
cmc
xchg
push
xor
adc
imull
mov
clc
xor
push
pop
pop
in
pusha
add
jns
aas
fisubrl
sub
fwait
cmc
xchg
ljmp
dec
pop
daa
shrl
imul
xchg
sub
cld
loop
fstpt
cmpsb
aas
sti
cwtl
pop
or
sbb
pop
mov
cltd
fs
fdivs
movaps
sub
enter
pop
and
lods
lock
lret
cmc
cmp
lcall
test
jmp
jle
inc
mov
sbb
sub
pop
jns
xlat
test
inc
push
testb
arpl
rcr
aas
and
and
jne
cli
sahf
clc
sarb
clc
xor
divb
aas
xchg
cli
std
sbb
outsl
bound
sub
push
sbb
add
dec
adc
mov
and
pop
pop
mov
imul
adc
js
loop
jne
jo
enter
into
jns
mov
jl
lahf
dec
xor
push
adc
icebp
add
mov
jb
dec
outsl
xor
ljmp
out
jle
stos
cmp
in
mov
lds
cmc
inc
pusha
push
pop
imul
sahf
add
dec
mov
stc
scas
rcrl
dec
cld
movhps
inc
jle
lods
das
insl
cmp
lret
iret
mov
cwtl
mov
or
incb
lods
mov
les
arpl
xchg
and
sub
mov
sbb
popf
cmc
int3
mov
out
push
pusha
mov
dec
and
popa
ror
out
lods
jmp
dec
fstps
faddl
aas
add
ljmp
pusha
cmpsb
daa
loopne
mov
loop
add
dec
iret
mov
inc
mov
mov
add
fs
and
scas
sbb
mov
pop
icebp
sbb
mov
adc
inc
cltd
add
repz
pop
mov
mov
add
pop
testl
xchg
ljmp
xchg
jns
push
add
sbb
js
aad
pop
sbbl
push
int
or
xchg
add
cmpsl
mov
and
add
lock
dec
mov
mov
rcr
push
mov
insb
jle
xchg
cld
xlat
loope
das
popf
dec
sahf
rclb
adc
inc
repnz
adc
push
dec
or
dec
dec
cwtl
out
loope
sbb
mov
or
les
or
mov
sub
mov
das
movsl
jecxz
sbb
stos
jl
ds
mov
je
cvtpi2ps
and
add
stos
loop
pop
fcmovnu
and
jecxz
jle
mov
mov
iret
mov
loop
data16
add
or
loopne
or
pop
fstp
add
loope
mov
pop
jae
iret
push
pusha
and
add
shr
addr16
cmp
cmc
or
cmp
mov
in
out
xor
mov
or
out
das
pop
iret
or
cs
sub
add
cmp
mov
mov
mov
push
pop
jle
clc
scas
in
aad
iret
xor
and
test
add
cmp
mov
iret
movsl
dec
and
mov
imul
push
inc
fldl
adc
sub
pop
and
push
sub
stc
int3
xor
xor
addr16
stos
or
adc
inc
pop
cwtl
lea
xor
mov
inc
je
mov
jmp
loop
sbb
mov
lahf
cmp
fnstsw
pop
fisttpll
mov
push
jbe
pop
push
mov
js
hlt
sbb
mov
mov
xchg
sub
xchg
dec
shll
std
imul
xchg
repz
ds
pop
arpl
popf
stc
bound
xchg
in
lds
cmp
enter
mov
or
sbb
outsl
xchg
adc
push
bound
jo
out
jnp
mov
jmp
mov
minps
or
xchg
ret
filds
out
lcall
inc
mov
aaa
stos
sub
mov
cmpsb
mov
outsl
lret
shrl
jecxz
faddl
shr
jo
jnp
or
bound
or
add
xchg
dec
hlt
fnstcw
pop
hlt
adc
adc
xor
mov
in
cmp
fs
repnz
mov
jl
adc
rcl
adc
mov
cmc
pop
andl
jmp
pusha
jae
dec
cld
push
mov
cli
dec
add
mov
sbb
push
ljmp
jb
arpl
jp
push
out
and
dec
inc
outsb
fbstp
js
ds
mov
cmp
outsb
repz
gs
mov
test
das
pop
int
mov
jmp
push
icebp
and
mov
adc
or
fstpt
rcll
shrb
xchg
sbb
push
cmp
and
mov
in
push
and
cmp
dec
xchg
fiadds
xor
out
dec
pop
mov
pop
xor
adc
push
add
popa
fs
push
jae
add
rcrb
add
cmpsl
push
aam
stos
xchg
jb,pn
dec
notb
mov
mov
lcall
scas
in
movsb
xor
je
mov
cli
cmp
loopne
nop
test
mov
mov
lock
mov
cmp
or
arpl
push
xchg
rorl
jbe
jecxz
pop
add
cmp
test
sbb
jo
arpl
mov
add
xorb
xchg
xor
jno
popf
push
mov
mov
cs
sub
dec
cmpsb
jnp,pt
xor
xor
pushf
test
jge
gs
mov
ss
push
dec
lahf
fdivl
pop
lret
idiv
sarl
sbb
adc
xor
dec
sbb
outsb
cmp
inc
inc
xor
fisubl
icebp
rclb
aam
jnp
xchg
or
test
xchg
mov
fwait
jae
push
je
bound
rcrb
sub
and
jb
out
xchg
pop
adc
sub
sbb
pop
sti
lea
fcom
insl
sbb
enter
lods
hlt
in
out
jl
test
scas
mov
pop
adc
or
mov
or
stos
sbb
loope
stc
lods
or
bnd
adcb
push
in
rolb
inc
fwait
inc
std
mov
push
enter
in
pusha
push
int
out
fmull
aaa
in
inc
bound
movsl
aam
jg
pop
outsl
sbb
in
xchg
loopne
cmp
and
in
dec
sub
jo
mov
std
inc
xlat
call
ds
inc
or
aaa
inc
cmp
addr16
fldt
scas
push
outsb
cmp
sarl
inc
pminsw
iret
mov
xor
out
xchg
xor
mov
sub
jle
loope
mov
not
jecxz
adc
push
pop
mov
lahf
imul
cmp
mov
lods
out
and
xorl
inc
clc
repnz
cmp
outsb
lcall
and
pop
fwait
aam
pop
call
aad
pop
loop
mov
mov
inc
mov
scas
lock
mov
mov
mov
arpl
fidivl
pop
popf
sub
sbb
adc
xor
mov
ljmp
int3
xchg
stc
repz
test
pop
jp
jecxz
icebp
cmpsb
mov
gs
es
enter
add
fs
cmp
test
dec
cmp
adc
sbb
insl
xchg
mov
or
les
mov
outsl
and
xchg
jecxz
faddl
in
lods
push
jae
add
dec
jg
push
jno
mov
sahf
xchg
pop
outsb
repnz
rol
clc
lods
outsb
mov
cwtl
xor
xchg
dec
ret
je
in
xlat
adc
in
pop
cmpsb
pusha
stos
cmp
bound
mov
dec
test
ja
inc
lock
ret
adc
dec
or
mov
je
cmpsl
and
lea
mov
ret
jge
call
push
cld
inc
adc
dec
pop
ficompl
mov
cmp
xchg
or
xchg
pop
in
jns,pt
xlat
mov
sbb
inc
testb
scas
jg
sbb
mov
js
pop
pop
gs
ret
xchg
sbb
push
in
test
cmc
fsts
push
stc
or
adc
je
sbb
aam
aad
in
shrl
repz
xbegin
and
popa
push
inc
jbe
fstl
add
add
popa
subl
iret
mov
xchg
push
jmp
push
push
fildll
lds
sahf
repz
mov
rcr
int3
push
sub
sub
lret
and
test
fidivl
inc
in
test
xlat
or
and
dec
dec
inc
in
inc
push
in
cmc
pop
rcl
ficompl
xorb
test
adc
and
jle
pop
subb
fwait
push
inc
cmp
cmp
push
xor
inc
es
or
push
std
addr16
lds
add
push
in
mov
sarb
rolb
arpl
add
adc
outsb
repz
iret
adc
mov
push
aaa
and
sub
inc
adc
mov
xchg
sti
aam
pop
mov
insb
shlb
mov
repz
cmp
dec
rcll
push
xchg
cmp
stos
subb
jbe
xor
inc
pop
popl
aaa
ja
xor
dec
and
cmp
test
outsl
insb
pop
lods
flds
cmp
shl
fists
mov
sbb
mov
xchg
add
xchg
jo
ffreep
add
fcmovbe
movsb
cmp
inc
fisubs
nop
and
and
and
push
shl
inc
xchg
sarb
icebp
cmp
scas
mov
adc
ret
inc
add
jmp
pop
outsb
cmc
xlat
mov
je
loopne
inc
in
mov
xlat
hlt
pusha
int3
mov
sbb
add
enter
mov
cmp
sub
fstps
jmp
loope
cli
jae
jmp
gs
stos
test
aas
mov
decb
cmp
insl
adc
mov
ret
cmp
mov
test
out
sbb
cmpl
dec
hlt
in
xchg
popa
fdivr
add
xchg
push
loope
or
repz
call
pop
dec
shlb
push
out
push
repnz
sahf
std
fimull
or
adc
lock
dec
shll
ja
fdivrs
mov
sti
mov
fcoml
scas
xchg
daa
ljmp
sbb
into
repnz
loop
pop
inc
test
xchg
insb
or
xor
adc
gs
xchg
test
clc
das
mov
push
cmp
mov
or
iret
aas
sub
push
sub
adc
add
mov
je
xor
repz
sti
pushf
jmp
mov
add
pushf
push
mov
in
pushf
cs
push
jno
xor
ja
pushf
mov
adc
pushf
das
fwait
push
call
enter
adc
ds
xchg
push
xor
mov
and
mov
int
imul
adc
ror
insl
loope
and
cwtl
mov
jp
jge
loopne
jg
xor
xchg
sarb
insb
sar
fiaddl
out
in
add
es
subl
loopne
add
jne
mov
lock
inc
divl
adc
add
push
jecxz
ret
cmc
ret
jbe
fistl
xchg
cmp
leave
inc
pop
mov
xchg
or
aam
addr16
pop
inc
scas
imul
push
js
mov
mov
xlat
add
push
cltd
mov
mov
fnstsw
sbb
inc
repz
lds
mov
rorl
mov
aam
aas
jnp
dec
loopne
stc
inc
inc
adc
loop
add
js
jmp
cmp
cli
jae
adc
orb
xor
sbb
jge
lahf
mov
ja
push
repnz
clc
mov
fnstsw
push
test
jnp
xchg
push
les
mov
sbb
and
mov
movsl
adc
or
cmpsl
dec
xor
jge
xchg
add
pop
jbe
sub
cltd
push
sarb
jp
inc
fisttpl
scas
cmc
cmpl
xlat
pop
incb
mov
cmpsb
jecxz
popa
jns
jae
mov
mov
jne
push
add
xchg
jne
pop
mov
lret
mov
sbb
fimull
dec
cmp
sub
outsb
push
es
das
cmpsl
idivl
xor
in
push
xor
sbb
mov
scas
jecxz
cmp
mov
daa
sbb
stos
xchg
pusha
pop
test
cld
loopne
jns
cmp
push
imul
fldenv
xchg
mov
pushf
orb
push
xchg
sbb
or
mov
adc
lds
push
xchg
inc
mov
xchg
imul
outsb
out
xchg
cld
sbb
sub
pop
or
jae
jle
jo
arpl
shrb
rcrb
dec
xor
mov
iret
or
pop
xor
inc
xor
mov
ja
pop
cmp
arpl
xchg
adc
stos
pop
scas
test
push
ret
pop
jbe
inc
gs
xchg
jo
push
mov
cmpsl
mov
rorl
ljmp
mov
dec
rolb
fcom
pop
xorl
popf
mov
mov
out
rorb
loope
mov
sbb
sub
roll
xchg
ret
sbb
subb
stos
enter
addr16
sbb
fst
mov
hlt
stos
scas
gs
cmp
or
push
mov
aam
pop
jl
xchg
call
xor
ret
sub
mov
push
loopne
stos
mov
call
clc
mov
xor
mov
xchg
arpl
adc
cmp
cmp
inc
sahf
or
cld
sti
inc
imul
mov
pop
imul
sbbl
cs
data16
fcmove
fildll
xor
ja
pop
testb
movsb
movsl
out
cmpsb
aas
inc
xchg
lahf
call
jg
clc
adc
and
movl
xchg
xchg
sbb
out
daa
inc
xchg
lahf
mov
xchg
cwtl
pop
sahf
enter
daa
jbe
mov
xor
add
and
lds
cmp
call
in
pop
fimull
fisubl
pusha
movsl
arpl
jnp
lds
add
or
push
push
jae
ja
in
pop
outsl
out
xchg
jmp
out
test
and
enter
cld
fdivrl
or
xchg
cltd
adc
jecxz
sub
jnp
adc
lea
jle
pop
mov
jmp
push
hlt
lahf
push
pop
inc
shl
jno
xor
dec
inc
xchg
pop
pop
jp
add
xor
fs
aad
mov
lcall
mov
or
and
inc
pop
adc
jns
mov
pop
add
bnd
push
mov
dec
adc
lods
jns
ds
and
push
push
clc
into
mov
push
jns
xchg
psubsw
mov
push
mov
pop
gs
and
mov
mov
mov
sub
jmp
cltd
push
cmpsl
repnz
push
rcll
xchg
jae
int3
loop
xorb
mov
and
mov
jo
shll
push
das
xor
jg
sahf
aas
insb
lahf
loope
in
imul
and
mov
shlb
xchg
bnd
xor
fcmovnb
sbb
insl
add
popa
sbb
out
fldenv
push
jne
mov
xor
out
loopne
mov
mov
subb
mov
lds
xlat
sbb
lea
out
sbb
sbb
mov
mov
cmp
mov
mov
add
imul
pop
and
xchg
cld
mov
lahf
ss
xchg
out
daa
mov
cld
mov
mov
nop
rcrl
pop
outsb
inc
xchg
imul
hlt
rclb
test
mov
arpl
xlat
add
mov
sub
lcall
xchg
or
mov
mov
loopne
sahf
test
imul
add
lock
fldenv
pop
jl
lret
stos
push
sahf
pop
aad
in
outsb
jo
loope
leave
mov
in
dec
fsqrt
mov
or
enter
loopne
and
loop
cld
xchg
fisubs
pop
scas
int3
ja
add
mov
push
dec
ljmp
imul
ret
enter
neg
sbb
fsubl
test
scas
shll
mov
or
lret
sbbb
add
movsb
divl
lods
pop
icebp
ret
lds
jnp
push
pop
sti
int3
add
call
loope
mov
adc
add
dec
and
fcmovnb
stos
push
push
mov
adc
mov
in
scas
cltd
adc
push
cmc
sbb
mov
mov
sahf
cmp
adc
sub
mov
sub
sbb
mov
std
mov
sti
lret
out
dec
push
ret
mov
cltd
or
add
push
push
mov
push
push
imul
je
test
or
in
aad
cmp
cmp
jne
or
mul
push
inc
adc
cmp
or
mov
ljmp
sbb
pop
xor
sbb
pop
pop
push
sub
dec
and
jne
xchg
pop
fiadds
das
sti
dec
xchg
icebp
lods
pop
pop
scas
mov
push
lahf
xchg
lahf
push
jecxz
jo
lods
xchg
sbb
lods
sti
orb
xchg
cs
int
cmp
ss
push
aaa
cmp
sti
dec
gs
out
lods
stos
pop
int3
inc
add
loope
aam
lods
xorb
cmp
pop
adc
mov
jnp
inc
dec
jl
xchg
pop
sbb
mov
cwtl
sbb
jle
mov
subl
cwtl
loope
loop
xchg
cmpsl
push
or
xor
iret
aaa
pop
pop
outsl
cmp
mov
repnz
sub
push
insb
hlt
cs
push
nopl
aaa
ja
int3
je
or
jmp
pushf
pop
sysenter
rcl
out
bnd
outsb
xlat
xor
lahf
loopne
adc
cld
or
jb
and
jl
js
cmp
jmp
push
out
cmpxchg
cmp
inc
cmp
inc
push
mov
cmp
cmp
adc
das
sbb
movsb
xchg
inc
xor
repz
roll
insl
pop
cli
ret
nop
jae
cmp
outsb
aas
mov
xchg
xchg
subb
xchg
mov
push
xor
out
jb
push
mov
scas
cmp
scas
in
stc
gs
xor
jg
gs
xchg
jno
iret
mov
dec
adc
sbb
xchg
or
xchg
add
outsl
xchg
out
shll
xchg
and
scas
aas
ret
cs
add
pop
int3
out
adc
inc
enter
mov
nop
push
enter
addl
sub
push
imul
xchg
pusha
sub
push
mov
fwait
cld
add
inc
clc
sti
push
dec
mov
sbbl
mov
in
out
iret
inc
mov
stos
add
test
pop
leave
mov
inc
and
fsts
in
xchg
movsb
push
sub
fs
icebp
adc
pop
lods
mov
sbb
pop
mov
cmpsb
pop
jmp
loopne
f2xm1
rcrb
das
rclb
daa
mov
data16
add
subb
and
lea
mov
add
push
imulb
bound
xchg
add
mov
fldl
test
add
xchg
push
lds
in
jno
xchg
mov
test
rol
mov
imul
and
mov
aam
int
negb
and
bswap
sbb
shl
cmc
xor
psubusw
jbe
lods
fimuls
out
inc
sub
stc
jb
pop
fimull
leave
insb
cmp
inc
or
mov
les
imul
mov
mov
int3
xchg
push
ret
scas
inc
cld
clc
lods
rol
fsubs
xchg
lahf
xchg
xorl
daa
fsubrl
push
cmc
fcomi
sti
jno
fwait
cmp
or
xor
or
cwtl
jge
ja
add
in
push
pop
mov
push
xchg
adc
jnp
into
jbe
sub
mov
inc
xlat
subl
mov
cmp
into
xor
or
push
sub
jmp
xchg
pop
test
shll
dec
mov
cmpsb
mov
xchg
adc
imulb
stos
neg
adc
or
mov
mov
std
dec
push
push
jne
pusha
loope
pop
push
mov
stc
xchg
push
and
aaa
mov
repz
out
popa
fiadds
or
adc
cmpsb
add
test
out
jle
push
out
cld
sub
push
pop
sub
leave
repnz
jl
bound
testb
addr16
sub
sbb
in
dec
outsl
in
rorb
mov
int3
call
cmp
leave
cmpsl
xchg
rcll
xor
push
jecxz
inc
sarl
push
adc
outsl
fildll
lret
push
cmp
pusha
lret
lods
mov
jecxz
add
stos
mov
or
xor
stos
incl
hlt
mov
sbb
jae
les
sbb
mov
ret
mov
rol
pop
inc
sarl
int
insb
inc
mov
mov
add
mov
sub
repz
fmuls
ret
mov
dec
in
aad
or
pop
inc
sbb
xor
lds
inc
and
sub
fdivrl
out
lock
pop
cmp
scas
mov
ja
cmc
jge
mov
jb
and
xchg
ror
icebp
int3
mov
add
adc
jno
std
or
jmp
xchg
mov
adc
cmpsb
cli
jb
loopne
pop
dec
mov
sbb
xchg
push
or
outsl
stc
rolb
imul
jb
imul
push
jne
mov
aad
lock
jp
lods
data16
fldl
mov
push
ds
int
pop
ja
jge
in
lea
dec
add
and
cli
jns
lock
out
jl
outsb
ljmp
or
inc
enter
jbe
sbb
push
js
push
mov
out
adc
push
xchg
sbb
mov
movsl
imul
add
lods
sahf
cli
jno
aas
xor
stos
ja
xlat
cmpsb
mov
push
lret
div
add
loopne
sub
fcmovbe
int
inc
je
andl
rorl
inc
sub
jno
mov
jns
mov
leave
or
jg
out
mov
or
sbb
mov
and
and
stc
and
and
inc
mov
mov
jmp
cmc
sarl
in
mov
insb
arpl
test
inc
mov
mulb
aaa
lcall
jb
jns
sbb
push
cmp
dec
jmp
rcll
inc
mov
adc
sub
mov
or
or
scas
testl
mov
mov
out
jecxz
dec
or
push
cmpsl
sahf
sub
aas
popf
fbstp
dec
bswap
sub
faddl
insl
rol
inc
lds
push
xor
sbbl
xor
bound
pop
cmc
fucomp
inc
mov
inc
jno
pusha
mov
mov
sarb
rolb
fdivp
dec
arpl
dec
pop
xchg
orb
mov
sub
jne
xchg
mov
fldcw
add
outsb
add
pusha
sbb
cmp
enter
scas
in
add
sub
movsb
or
jl
pop
push
inc
mov
ja
lds
aaa
fcoml
xchg
loop
out
inc
mov
shrl
out
cli
inc
cld
test
mov
jge
mov
lahf
push
outsb
mov
outsl
cltd
xor
and
int
adc
ljmp
mov
inc
jo
out
mov
inc
test
fidivrs
dec
pop
adc
adc
leave
sub
cwtl
std
fwait
xlat
mov
and
popl
mov
iret
mov
jae
mov
cwtl
jb
xor
sub
push
mov
sbb
sbb
ja
mov
daa
dec
xor
arpl
int3
adc
sbbb
clc
jb
dec
stc
pop
ret
loop
mov
int
adc
inc
lods
sub
test
fwait
jmp
mov
ss
unpckhps
int3
pop
pop
push
pop
mov
fidivl
mov
mov
leave
mov
adc
ror
adc
lea
insb
gs
mov
clc
cmp
test
cs
mov
subb
ror
sti
jnp
sti
push
jne
out
push
test
jp
mov
fisttpl
fsubl
xchg
rcrb
stos
ret
mov
cmp
dec
or
rcrl
mov
in
adc
fninit
fadd
push
movsl
xor
or
cs
push
movsl
pop
stc
sub
and
in
add
mov
mov
stc
xor
je
add
mov
inc
div
or
jno
or
cli
movsl
mov
jae
jo
repnz
mov
dec
jmp
mov
ficoms
pop
test
mov
adc
std
jp,pt
gs
or
test
mov
pop
mov
aaa
cmp
js
add
in
pushf
sub
insl
pusha
jbe
mov
je
pop
pop
pushl
dec
lret
lret
out
xchg
mov
lods
sub
pushf
mov
enter
insb
add
sti
mov
mov
rorb
imul
rcll
mov
ss
or
xchg
and
out
mov
rcrb
mov
sbb
scas
adc
popf
movsl
iret
getsec
fsubs
insl
cmp
add
clc
xor
movsb
mov
xor
scas
jmp
mov
popa
dec
mov
xor
icebp
dec
into
mov
cmc
lods
and
rcll
packsswb
adcb
mov
andb
inc
dec
test
mov
sbb
cmp
ljmp
xchg
stc
mov
cli
mov
jno
cs
or
mov
push
or
mov
adc
fnsave
mov
push
push
mov
inc
movsb
repz
sub
sub
lock
inc
lods
and
inc
jecxz
adc
stc
outsb
sub
cld
insb
jmp
pusha
rcll
cmp
mov
shll
jge
dec
test
sbb
pop
sbb
dec
ja
hlt
cmp
sub
xor
jl
push
addr16
addr16
movsb
inc
das
or
sbb
inc
adc
daa
inc
ss
xchg
je
pop
xorl
cmp
sti
in
jmp
push
pop
add
jbe
in
sahf
mov
xchg
sbb
test
adcb
jo
icebp
out
push
push
gs
and
scas
jns
mov
andb
mov
stos
icebp
jae
pop
repnz
xor
cltd
mov
mov
lret
test
xchg
pop
es
cltd
adc
mov
jmp
mov
es
jns
inc
setbe
pop
mov
cmp
cld
hlt
xlat
mov
jp
cmp
les
sub
test
jecxz
mov
xchg
mov
jmp
or
pop
pop
in
mov
jne
pusha
lods
inc
adc
pop
ja
pop
leave
mov
aad
dec
inc
sbb
cmovae
inc
or
xchg
adc
loope
faddl
jae
daa
imul
jmp
mov
cli
dec
out
xor
movsl
jg
xchg
flds
cmp
outsb
mov
cmp
test
enter
cmc
jmp
mov
add
loopne
pop
add
mov
adc
rcrb
mov
movsl
cli
sub
mov
stc
mov
cmp
sbb
repnz
or
cmovs
jl
outsb
and
pop
push
add
inc
fcoml
fldenv
or
mov
lds
pop
daa
jmp
and
daa
daa
jne
cmp
xor
lods
sbb
or
popf
lods
test
test
loop
inc
and
cmp
jge
outsl
js
sbb
mov
test
mov
pop
fwait
insb
xor
jge
in
jno
pop
fcompl
jae
xor
cwtl
scas
ret
cmpl
shlb
push
sbb
xor
push
fisubrs
lret
lock
xor
push
sahf
push
xor
bound
iret
fisttpl
repnz
es
jne
inc
pop
insl
loopne
push
aad
in
jmp
xchg
pop
fiadds
dec
int
scas
xchg
xlat
jp
bound
leave
cmp
push
rorl
dec
enter
rolb
fcoml
mov
sub
xor
arpl
mov
inc
sbb
in
xlat
in
pop
push
ljmp
sbb
aas
fildl
pushf
xor
popa
test
mov
inc
fnstenv
stos
add
cmp
ficoml
jmp
ret
mov
mov
clc
std
rorb
cmp
das
sbb
adc
js
lods
sbb
shr
dec
mov
or
xchg
jne
mov
sbb
dec
cld
xor
icebp
push
mov
call
xor
xchg
pop
in
add
pop
test
ljmp
sbb
inc
inc
je
mov
jge
cmp
jb
sbb
movsb
and
jne
jecxz
daa
cmp
mov
push
in
jo
mov
stc
mov
fcmove
leave
sub
lock
push
add
xchg
bound
int3
lock
pushf
sbb
pop
mov
jbe
push
aas
lds
test
sahf
outsl
mov
lea
push
gs
cli
mov
mov
cs
push
push
or
add
or
adc
cld
mov
jp
iret
mov
stos
jne
jo
dec
mov
sbb
mov
leave
push
mov
sbbb
and
adc
lods
xor
lret
dec
or
test
cwtl
arpl
data16
cmp
or
jmp
xchg
addl
loop
mov
jmp
push
adc
and
sub
sbb
cld
popa
ret
xor
inc
xchg
jae
push
imul
addr16
movsb
jl
mov
flds
pop
ljmp
iret
xchg
sub
sahf
mov
mov
loope
xchg
loopne
xchg
push
mov
in
nop
xchg
push
int
ret
inc
aaa
test
scas
pop
xchg
xchg
stos
pop
hlt
jbe
dec
mov
sub
sbb
ret
xor
fisubrl
adc
add
ret
cld
push
and
or
mov
iret
js
pop
xlat
test
in
cmp
loop
aaa
jbe
push
loope
fmull
jne
mov
xchg
sub
xchg
int3
sbb
push
movsl
inc
aaa
pop
rcl
inc
pop
ljmp
test
mov
leave
lods
das
sub
fisubrs
push
mov
jge
sbb
call
and
test
pop
and
adc
stos
inc
jae
mov
lret
jnp
adc
in
jne
stos
inc
sbb
or
js
cmp
cwtl
fcomip
repz
sti
sub
xlat
in
icebp
imul
cwtd
mov
xor
mov
inc
and
pop
mov
jmp
jno
cltd
scas
or
sbb
sub
lock
dec
daa
xlat
dec
jae
adc
xchg
cs
out
lods
je
and
or
cmpsl
stos
mov
sub
sahf
shl
cmp
xlat
push
lea
or
sub
insb
out
or
mov
jp
fsub
push
mov
push
push
add
leave
ljmp
pop
or
mov
or
and
fnsave
inc
aam
cmpsb
bound
dec
movsl
fiaddl
int3
xlat
mov
sarb
add
lret
nop
xor
jge
dec
sbb
aas
lods
sbb
je
in
ficoms
dec
jecxz
pushf
add
mov
mov
out
mov
fwait
inc
xor
add
sbb
mov
sbb
and
xor
adc
sub
lea
imul
inc
int
mov
or
cmp
add
movsb
jne
xor
xchg
lods
testb
jno
push
mov
test
aam
jns
in
js
inc
and
jle
pop
int3
insb
daa
and
sbb
and
mov
and
pop
xor
pop
repnz
mov
fwait
sbb
ficoms
add
stos
add
clc
js
or
mov
dec
rcll
pop
cmpb
stos
movsl
and
inc
clc
push
sub
xor
inc
cmp
out
lret
scas
mov
test
xor
loopne
out
out
inc
push
sbb
adc
fcoml
xor
cmp
test
push
psubd
mov
addl
fdivl
insb
push
lahf
ret
call
outsb
in
loopne
loop
cwtl
sub
mov
add
pop
add
jo
push
sbb
push
pop
mov
ret
stos
scas
push
test
lret
and
jne
cmp
mov
xchg
out
aad
lds
pop
add
sbb
shlb
enter
sbb
jnp
aas
xchg
int
cltd
or
mov
out
xchg
add
mov
hlt
inc
sub
hlt
pop
lock
shlb
ss
mov
sti
jns
fst
fsubp
pop
and
push
and
clc
pop
pop
mov
and
sbb
pop
push
bnd
mov
mov
inc
push
shlb
insb
rclb
or
pop
insb
les
sbb
sbb
dec
fsubrl
cs
in
push
dec
mov
clc
fists
andl
lds
push
loope
cmp
mov
bound
sub
or
mov
cmp
daa
adc
test
mov
loopne
shl
cmp
rcr
stc
sub
inc
aas
and
xchg
sub
sbb
mov
ja
mov
xchg
outsb
cmp
xor
sbb
scas
clc
pop
les
add
mov
cld
push
pop
xlat
sbbb
adc
xchg
aaa
mov
sbb
push
stc
jle
fnstsw
pop
mov
rcl
aas
and
mov
add
movsb
jecxz
clc
and
aas
aaa
sub
lcall
je
add
push
lahf
subl
enter
jle
adcb
push
fidivrl
push
mov
mov
xchg
and
orb
call
out
fiadds
or
push
mov
out
push
cmpl
mov
out
clc
mov
sub
fnstcw
loope
cmpsl
and
std
pop
stos
dec
push
imul
cltd
jno
jg
mov
ret
ret
popf
pushf
cwtl
mov
lds
iret
cltd
sbb
dec
add
or
stos
mov
mov
rclb
sbb
and
sub
and
jp
test
add
pop
icebp
xor
ljmp
or
cmp
arpl
mov
xor
sbb
push
mov
arpl
xor
and
xor
jmp
js
leave
jno
jecxz
movsb
sbb
xchg
dec
push
mov
mov
aaa
push
or
int
orb
mov
test
xchg
inc
or
sub
push
lret
xor
mov
loopne
inc
adc
dec
movsb
out
xor
jmp
mov
xchg
push
in
mov
insl
lods
dec
hlt
dec
aas
in
or
stos
cltd
mov
push
and
dec
in
aad
ficomps
repz
and
cld
dec
sub
pop
fs
xchg
pop
sub
and
test
mov
xor
mov
pop
test
push
ss
adc
jge
pop
movsl
push
aaa
mov
lods
loop
lcall
jecxz
and
subb
shlb
xchg
push
leave
mov
cmc
pop
cmpsb
jns
aam
xorl
cmp
stos
push
imul
dec
lret
fstl
add
jo
mov
xchg
sar
jnp
lahf
rcrb
daa
loopne
enter
stos
mov
adc
jb
fs
repz
pop
lahf
cld
stos
push
es
inc
stos
xchg
sarl
rcrl
mov
bound
push
in
out
push
inc
or
inc
xchg
xor
int
adc
or
stos
xor
int3
push
push
mov
sbbb
jmp
and
lods
sahf
jne
and
mov
jmp
or
jge
in
idivb
jbe
pop
iret
push
scas
push
es
add
sub
jo
mov
cs
xor
in
into
jns
aam
jg
jbe
fisttps
pop
je
push
addr16
jb
mov
nop
cmp
mov
push
nop
sbb
sub
cmc
sub
pop
add
xchg
sbb
xor
test
mov
les
pop
add
cmpsl
arpl
sub
insb
movsb
stc
aad
data16
sub
fimull
sub
mov
pop
shr
xchg
aad
push
rorb
ftst
aam
fsubrs
mov
aad
js
popa
and
hlt
sub
sbb
sub
sbb
or
leave
pop
dec
inc
or
add
insb
popf
mov
jecxz
inc
sti
addr16
jge
pop
popa
test
bound
vshufps
or
mov
decb
gs
lcall
movsb
inc
mov
push
jge
in
icebp
lock
sbb
lahf
mov
pop
jg
bound
and
ljmp
cmp
push
jg
push
mov
shrb
mov
nop
cs
dec
inc
mov
les
mov
test
movsl
sti
xchg
push
mov
loop
shrb
orb
sbb
mov
cmp
cli
fs
testl
inc
adc
or
jne
out
data16
sub
xchg
xchg
lahf
jle
movsb
inc
fmuls
mov
int3
gs
jo
sub
lret
xchg
fsubrs
xor
mov
andl
shrb
fs
out
fbld
xchg
push
inc
mov
xor
mov
das
push
cli
call
or
mov
test
pushf
add
fldt
xor
out
cmpsb
or
fldcw
mov
data16
daa
add
les
sub
arpl
das
push
xchg
xor
stos
sbbl
dec
sarl
sub
test
jecxz
shll
rcll
fld
jo
cmc
jae
xorl
jl
movsb
inc
pop
hlt
mov
out
xor
out
sub
loopne
xor
sbbl
rol
cli
aas
lds
and
icebp
mov
xor
add
bound
or
lock
test
mov
or
cmp
jne
cmpsb
push
pop
dec
push
movsb
clc
ror
in
cmpl
xchg
loopne
movsb
insl
sarb
sti
sbb
push
sahf
xchg
dec
mov
lahf
dec
dec
mov
arpl
add
clc
aam
pushf
dec
inc
mov
mov
shll
jno
jae
dec
mov
adc
dec
sbb
test
jle
adc
jns
mov
adc
mov
or
cmp
dec
xlat
sti
test
fmull
pop
dec
pop
out
sbb
aad
adc
push
jp
or
hlt
xor
xchg
pop
clc
add
adc
jg
cmp
jl
aaa
shll
jg
sub
mov
movsb
dec
pop
or
inc
cmp
out
sub
imul
cwtl
test
aam
popf
sub
clc
mov
xchg
mov
loop
jae
mov
out
mov
or
cs
mov
in
sub
pop
enter
insb
pushf
xor
mov
push
push
sbb
loopne
dec
loopne
xlat
movsl
mov
xchg
jmp
or
test
mov
or
inc
jecxz
mov
into
les
xor
out
jnp
cmp
mov
mov
es
and
jnp
mov
lret
push
imul
or
daa
push
push
xor
out
xchg
addb
je
dec
in
xlat
jae
or
and
fucompp
aad
clts
cmp
test
clc
ja
mov
or
aaa
mov
in
test
dec
pop
mov
repnz
mov
lods
cmp
mov
mov
lock
in
fldcw
sub
mov
test
and
xchg
aas
xchg
repz
sbb
xchg
lea
sbb
arpl
cmp
daa
adc
adc
or
push
jg
shlb
div
push
ficoms
loopne
mov
lods
outsb
iret
ret
push
dec
es
mov
aad
in
out
mov
testl
push
arpl
mov
mov
mov
jg
mov
push
or
pop
push
cmp
arpl
repnz
push
xchg
pop
icebp
mov
test
mov
je
leave
xchg
xchg
dec
push
sub
insb
aas
push
mov
xchg
sahf
jp
lahf
and
cmp
add
and
dec
push
cmp
les
test
roll
loopne
mov
inc
scas
rcr
cmp
mov
lock
cli
xor
mov
int3
push
jne
jo
mov
push
mov
inc
clc
aas
inc
sub
popa
jno
xchg
sbb
mov
sub
mov
fdivrs
addl
pop
cli
pop
stos
dec
push
sub
jecxz
imul
movsl
aam
jmp
or
sub
mov
movsb
pop
imull
sub
in
cltd
hlt
sbb
cmp
jle
addr16
cmpsb
lock
cmp
bound
lcall
push
and
shlb
push
adcb
xlat
sub
iret
mov
in
cltd
aam
lods
jg
mov
push
mulb
xor
rorb
subl
popf
fidivrs
rcrl
xchg
jae
inc
sti
push
cmp
push
pushf
cmpsl
jae
adc
cli
insb
xchg
sbb
jmp
adc
and
jle
movsb
inc
mov
mov
and
mov
mov
inc
es
iret
cmp
or
mov
and
ss
xchg
xchg
jns
movsb
jne
xor
jge
xchg
arpl
dec
xor
repnz
and
cmp
out
xchg
add
rorl
jl
daa
jl
mov
jnp
stos
imul
hlt
jno
sbb
jg
subb
sbb
or
sahf
mov
cmp
in
cmp
fistpll
cs
mov
jmp
lret
sbbb
add
cmp
adc
clc
loope
stos
mov
mov
mov
lods
fnstsw
push
stc
imul
push
xchg
test
mov
in
bound
sbbl
adc
xor
fstpt
psrld
pinsrw
mov
scas
fsubs
mov
xor
or
bound
xchg
xor
icebp
mov
or
and
xor
jecxz
push
xor
mov
sahf
jg
dec
jmp
add
je
push
adc
fcmovne
jo
int
xor
clc
mov
cld
add
lods
cs
neg
rclb
jnp
mov
mov
mov
jbe
push
xor
mov
sub
adc
sbb
leave
sub
inc
pusha
sbb
inc
fucomi
scas
popa
mov
pop
xor
pusha
addl
add
out
mov
and
insl
mov
sub
sub
cli
xor
fcomi
inc
mov
and
cltd
jl
cltd
push
push
mov
xchg
pop
mov
aad
mov
pop
xchg
mov
pop
mov
int3
cmp
lahf
fldl
push
aaa
pop
cmp
xchg
lret
adc
xor
sbb
pop
add
out
jns
clc
test
adc
mov
xchg
jl
dec
add
aam
and
adc
sahf
mov
fisttpl
decb
outsb
or
or
imul
push
insl
push
ljmp
clc
cld
push
into
pop
xchg
ljmp
fs
xchg
repnz
mov
js
cltd
imull
and
in
or
lret
jo
cltd
sub
hlt
add
xorb
in
cmpsl
loopne
jg
sbb
xor
add
cmp
pop
pop
ret
test
cmp
cwtl
in
dec
movsb
xchg
adc
enter
call
mov
inc
adc
jbe
iret
shll
mov
push
out
loope
dec
xchg
addl
mov
mov
jmp
and
pop
popf
jno
adc
cmpsl
push
push
push
addr16
pop
loopne
inc
loopne
cld
repnz
lds
cmp
cmpsl
pop
cmpsb
popa
mov
movsl
adc
movsl
sti
lahf
int3
hlt
ret
popa
mov
subb
dec
add
aad
push
dec
rorl
cmp
in
xor
or
insl
mov
testb
lea
adc
xchg
test
clc
loopne
xor
mov
and
sar
test
jne
or
push
mov
lret
sbb
imul
sub
and
test
hlt
clc
enter
fcmovu
dec
sub
add
dec
test
cwtl
or
or
aas
scas
adc
daa
subb
popa
nop
jno
jmp
sub
push
xor
lea
inc
sub
out
xchg
sbb
xlat
adc
rol
or
sub
ficoml
lds
inc
mov
cli
sbb
pop
xor
outsl
and
mov
fidivl
mov
arpl
adc
or
stos
sbb
aam
jae
fmuls
mov
and
out
sbb
inc
outsl
inc
cld
and
jmp
addr16
jbe
pop
inc
imul
jo
lock
gs
push
shl
sub
cwtl
or
xchg
fmul
add
push
out
dec
shl
fstl
xchg
lods
pop
add
sbb
pop
adc
lcall
mov
push
pop
sub
movsb
xor
shlb
pop
ret
jg
icebp
xor
rolb
mov
fdivl
test
mov
icebp
enter
push
mov
gs
dec
and
xor
pop
les
add
lcall
in
dec
ret
je
xchg
sbb
lds
fnsave
lea
outsb
cmpsb
ret
mov
ss
loopne
mov
insb
fistl
adc
fnstenv
inc
cmpsl
stos
pop
out
aad
js
into
push
int3
mov
mov
sbb
outsb
ds
loope
lods
adc
adc
push
sbb
je
sub
pop
fmul
into
in
lods
mov
push
fbstp
mov
sub
mov
fistps
pop
and
pandn
add
aam
movsl
stc
and
mov
or
das
in
jo
je
in
mov
fidivrs
icebp
ret
addr16
clc
aaa
arpl
in
adc
jno
rcrb
in
ja
jae
mov
mov
sub
sub
test
in
out
add
mov
ds
xor
fisubrl
add
mov
mov
sbb
sti
mov
mov
lcall
jecxz
cmc
rcl
inc
dec
sub
mov
bound
lret
jae
mov
stos
packssdw
movsb
adc
xor
shl
mov
jg
lods
cmp
pop
aam
pusha
xchg
inc
into
fiadds
in
nop
jmp
fs
js
out
jo
sub
mov
fldenv
adc
mov
stos
mov
lret
jge
adc
addr16
or
sbb
popa
lock
into
cmp
out
fcomp
vcvtss2sd
lds
and
iret
aad
pop
xor
jp
sub
push
rorl
xor
sub
inc
test
fstl
xlat
rcr
leave
scas
dec
push
jno
enter
in
hlt
inc
mov
mov
test
popa
fcmovne
xor
sub
fdivrp
pushf
insl
or
fsts
mov
sub
or
push
jns
pop
pop
jg
in
inc
mov
inc
lock
jmp
movsl
xchg
shll
inc
imul
xor
adc
add
cwtl
sub
or
lret
subl
cmc
inc
and
mov
dec
imul
xor
in
and
inc
arpl
add
icebp
mov
push
arpl
cmpsb
jbe
insl
mov
xchg
add
xor
dec
and
call
push
mov
push
add
jle
sahf
hlt
inc
push
xchg
dec
fwait
and
mov
jge
stos
dec
cmp
fsubrl
lock
insb
or
movsb
ss
xchg
and
rcll
push
imul
inc
lods
dec
or
insl
push
and
jp
mov
mov
imul
cmp
adc
add
clc
jecxz
ret
push
xchg
and
test
pop
les
push
add
lea
lea
cwtl
es
xchg
aas
sbb
dec
cmc
in
and
xor
mov
cli
mov
push
xor
mov
scas
jmp
jbe
fwait
and
pmullw
mov
dec
xor
pushf
dec
push
or
mov
mov
icebp
inc
ljmp
mov
sbb
mov
sbb
mov
aam
sbb
outsb
pop
and
cs
fcoml
out
jne
repz
xor
mov
push
cmpsb
mov
mov
push
sub
mov
mov
adc
pop
push
jno
and
fbld
pop
cltd
pop
dec
rcl
xor
xor
adc
sbb
fidivl
mov
lcall
xchg
int
xchg
ficomps
out
repz
xor
je
cs
and
insl
mov
mov
sti
cmpsl
jmp
xchg
das
mov
insb
outsl
ret
jecxz
dec
stc
lea
pop
jb
pop
xor
pop
mov
cmpsb
cwtl
sub
out
test
push
mov
gs
adc
shll
mov
dec
fnsave
dec
pop
roll
mov
and
push
mov
idiv
lcall
sbb
xchg
lahf
inc
push
std
pushf
push
insb
subb
cmp
into
jle
pop
lcall
xor
int3
test
pop
loop
cmp
fs
cmpsb
push
push
sbb
or
inc
pop
xorb
add
les
stc
in
jo
bound
cmp
sub
mov
femms
mov
leave
jp
push
mov
push
frstor
test
repnz
dec
adc
addr16
jecxz
js
das
test
loop
repnz
or
dec
push
idivb
hlt
add
cld
adc
pop
cwtl
jl
ja
jle
sub
clc
jno
cmp
insb
mov
std
jno
std
jbe
push
add
jg
jmp
test
jle
aaa
test
cwtl
jbe
rcrb
mov
push
inc
jge
dec
imul
loop
add
jb
sub
movsl
les
mov
fsubl
cwtl
pop
xor
or
pop
testl
inc
xchg
rcl
adc
jnp
loope
push
aam
je
jns
jmp
dec
mov
pop
cwtl
mov
test
pop
cltd
jecxz
push
mov
das
aam
add
push
or
js
fcmovb
xchg
mov
or
xlat
repnz
pusha
sarb
adc
adc
pop
mov
mov
shrb
jecxz
jp
jns
mov
mov
roll
push
or
or
dec
push
mov
das
push
test
xchg
icebp
dec
or
popl
inc
repz
into
loope
out
push
push
cmp
dec
jo
lahf
push
xor
cli
mov
or
popf
mov
adc
clc
sbb
arpl
push
sub
push
in
and
insl
lcall
xlat
out
subb
sbb
push
sub
mov
ljmp
mov
ss
jo
and
rcrl
adc
and
cmpsb
and
sarl
cwtl
cli
ljmp
daa
testl
mov
jbe
in
cltd
cmc
nop
or
mov
shll
jae
in
fisubs
pop
push
or
mov
frstor
pop
sub
adc
sub
pop
and
mov
mov
jl
aaa
rcrl
cmc
stos
aam
popa
xor
fcoml
mov
mov
or
jno,pn
push
cmp
and
sbb
negl
movsb
sti
push
mov
pop
or
mov
mov
movsl
push
out
xchg
dec
xlat
jp
jbe
fwait
mov
sti
inc
sbb
adc
pop
repz
push
int3
jns
mov
jae
xor
xlat
cmp
inc
lret
sar
dec
sub
std
cltd
adcl
movsl
movsl
int
in
sub
cmp
mov
pmaddwd
mov
mov
dec
inc
imulb
dec
xchg
dec
mov
xor
push
int3
ret
sti
inc
mov
imul
mov
test
cld
roll
mov
ret
jb
ds
jle
pop
loop
mov
pop
aaa
test
mov
in
ss
in
push
lret
jecxz
and
add
clc
pop
cmp
push
test
and
scas
scas
adc
adc
lea
sbb
mov
and
mov
cs
adc
push
das
mov
xchg
cmp
dec
cmp
cs
les
aad
sarb
stc
popa
test
ret
add
lahf
loop
jns
and
sbb
pop
mov
fisubl
and
aam
mov
mov
cli
dec
jne
addr16
orl
push
or
inc
jecxz
arpl
out
push
xor
xchg
imul
lret
pop
jl
mov
and
lods
push
insl
push
bound
sub
push
cmp
and
mov
ljmp
jecxz
fsubrs
mov
jmp
mov
inc
setns
and
cmp
punpckhbw
jae
lret
cmpsb
mov
pop
add
pop
pop
hlt
dec
hlt
adc
xor
fisubrs
adc
out
dec
mov
pop
rcrl
addr16
add
cmp
xor
mov
push
jnp
jge
lea
es
aaa
dec
lret
or
cmp
lods
or
outsb
imul
sbb
adc
je
pop
inc
push
ss
cltd
cltd
push
inc
lret
mov
cli
jp
in
mov
push
icebp
cltd
adc
xlat
popf
cli
lds
cli
shufps
mov
sahf
imul
inc
test
je
lea
pop
mov
xchg
sahf
push
jb
stc
jp
shlb
adc
ret
leave
pop
pop
mov
mov
dec
xchg
ljmp
stos
stc
xor
clc
cmp
outsl
push
adc
xor
fsubl
loop
shlb
cmp
inc
sub
lds
mov
test
mov
xchg
push
std
lds
mov
mov
dec
in
loop
stos
sub
cmp
loop
inc
negb
dec
clc
nop
mov
repz
pop
inc
and
neg
ljmp
js
add
push
fmul
lea
add
mov
sbb
sbb
hlt
adc
pop
mov
mov
vpshaw
pop
mov
jecxz
mov
mov
ljmp
push
pop
jo
or
sahf
lret
and
mov
add
rorl
jae
imul
lret
shl
outsb
push
fisttpl
shlb
test
mov
std
pop
bound
fists
mov
aam
push
and
inc
cwtl
clc
fadds
shl
sahf
push
je
pop
jnp
xchg
push
mov
jl
rclb
sub
pop
punpckhdq
repz
cmp
cmp
arpl
cmp
leave
dec
mov
cs
stc
lods
mov
add
push
lods
aas
cmp
into
xlat
mov
mov
repz
fbld
ss
dec
add
imul
sbb
rorl
and
rolb
add
test
dec
push
sbb
pop
sbb
mov
subl
push
or
push
xchg
fwait
lock
adc
divb
push
sub
sarl
jo
add
frstor
test
loopne
ljmp
mov
mov
nop
flds
sbb
ljmp
inc
or
jb
aaa
icebp
jo
fwait
cmp
mov
nop
fimuls
orl
das
repz
xor
in
lea
inc
cmp
ja
rclb
mov
mov
add
xchg
fldl
mov
cld
dec
pop
ja
into
pop
mov
decl
mov
dec
fistps
out
mov
mov
dec
xor
adc
je
test
stos
cmp
jg
or
loop
lds
push
int3
mov
add
data16
pusha
push
loopne
fucomi
jp
jno
cmp
push
xchg
and
repz
bound
jecxz
push
lods
and
inc
cmp
fisubrl
out
and
test
xchg
mov
jbe
cmp
iret
adc
loope
inc
pop
add
or
xor
daa
leave
sbb
mov
inc
adc
xchg
mov
sbb
xor
aam
dec
sub
sbb
shlb
mov
xchg
mov
test
stos
hlt
idivl
pop
mov
jns
jp
lahf
pusha
jle,pn
clc
dec
bound
pop
pusha
call
cli
mov
mov
and
mov
mov
mov
test
xchg
xchg
mov
cltd
add
xchg
push
mov
sbb
in
scas
push
hlt
ss
sub
incb
inc
and
mov
lret
push
cmpsl
movsb
add
cmp
or
cmc
lds
scas
xchg
sbb
adc
pusha
jo
inc
jne
cmp
sub
mov
jecxz
or
lea
xor
or
push
fsubp
lea
or
std
push
xor
scas
popa
xchg
cmc
cmc
jnp
xor
insl
pop
cmpsl
das
js
lahf
mov
bound
lret
add
adc
repz
xchg
xchg
leave
movsl
dec
lods
mov
flds
sub
inc
jbe
mov
sahf
mov
leave
sahf
mov
loope
pop
mov
mov
inc
mov
pop
lea
and
imul
jbe
nop
scas
cmc
mov
push
sahf
aas
dec
sbb
xchg
push
pop
scas
push
sub
and
fimull
mov
pop
repnz
adc
push
add
das
adc
pop
in
dec
bts
pop
popw
pop
push
mov
sbb
lock
add
adc
xchg
push
out
repnz
pop
push
inc
sbb
mov
inc
inc
fdivl
xchg
inc
mov
testb
mov
in
push
mov
test
sub
inc
enter
insl
jbe
insl
jbe
and
dec
mov
and
add
mov
scas
jecxz
jmp
or
jb
jno
mov
divl
add
out
and
ds
cmc
mov
sub
xchg
cld
adc
lea
jmp
adc
imul
in
movsl
out
aas
sbb
imul
js
and
lea
fwait
ja
cmp
dec
ret
into
and
cmpsb
mov
in
jl
lret
pop
sbb
aad
lcall
mov
testb
in
hlt
mov
out
stc
mov
push
add
push
insl
cwtl
test
scas
lds
imul
and
sub
ret
pusha
loopne
and
scas
xor
dec
cs
adc
popa
xchg
movsb
lea
movsl
idivl
pop
stos
mov
lds
inc
arpl
mov
jg
fsub
fsubrl
fsubl
add
lea
xchg
push
xor
out
jbe
rcrl
sub
jb
jl
lock
ss
clc
mov
pop
pop
xor
inc
adc
pop
xchg
mov
shl
cmp
decl
ss
jns
loopne
mov
into
mov
lea
out
mov
sbb
mov
aaa
repz
inc
xchg
addr16
push
mov
xchg
dec
jae
mov
jae
sbb
aaa
and
mov
ja
push
lock
leave
mov
ds
dec
lcall
loope
add
into
cwtl
ret
fwait
push
adc
fisubs
inc
mov
shrl
pop
fists
inc
push
das
adc
aad
test
or
dec
out
call
cmp
push
std
fsubrl
pop
mov
addl
gs
shlb
in
in
call
sub
incl
gs
adc
sti
daa
lods
gs
pop
cmpsb
fiaddl
jae
lret
cwtl
pop
fs
cmpb
imul
jb
push
cmp
sub
dec
roll
mov
out
dec
sub
push
cmp
add
int
enter
daa
sbb
pusha
andb
inc
xchg
mov
icebp
jmp
test
pop
sbb
xor
lcall
push
adc
aad
mov
mov
mov
lret
ds
fnstsw
push
movsb
loope
lods
add
out
xor
sbb
dec
fs
jns
sbb
out
call
xchg
or
jno
push
clc
stc
mov
fildll
cmp
ds
mov
push
mov
mov
sub
sbb
lahf
adc
fwait
testl
xor
xchg
xchg
cs
push
push
test
mov
add
cmpsb
sub
add
inc
mov
es
loop
test
sbb
addr16
sbb
sub
pop
mov
pop
sti
adc
sub
pop
in
or
sarb
test
inc
add
icebp
inc
mov
inc
gs
jge
pop
nop
mov
shrb
xor
cmp
cmp
fnstcw
icebp
bound
iret
jmp
adc
popa
jecxz
inc
cmpsb
aad
fisubl
cmpsb
dec
cmp
iret
dec
sub
hlt
inc
and
inc
fs
lret
add
cwtl
call
adc
mov
jge
mov
or
and
cmpsb
in
adc
outsb
sub
pop
scas
int3
push
lods
shlb
sbb
test
nop
daa
xchg
push
rolb
push
or
sbb
dec
and
aad
sbb
jge
mov
es
clc
jecxz
jecxz
push
xchg
xchg
and
mov
aas
xchg
lock
mov
out
jne
push
cmpsb
and
mov
or
ror
cmp
and
loope
jne
movsw
addr16
mov
mull
rcrb
lcall
cmp
xchg
mov
les
mov
ret
cmpl
in
sub
mov
sub
aas
push
push
push
movsl
fadds
xchg
mov
outsl
pop
rorl
clc
ss
xchg
or
cmp
pushf
cmp
xor
gs
mov
mov
jne
push
add
and
sub
pop
inc
sbb
cmc
jge
xchg
add
scas
push
repnz
scas
or
fldenv
jecxz
pop
jae
lods
dec
sub
stc
and
fcoml
mov
ficompl
jne
sbb
cmc
xchg
add
repz
sbb
call
adc
pop
pushf
test
xor
xchg
push
nop
mov
xchg
std
add
inc
push
jb
js
and
test
xchg
aam
jae
stos
and
icebp
adc
xchg
fchs
dec
aam
shl
ret
xchg
push
jle
mov
add
gs
popf
lods
mov
enter
jae
ret
and
outsl
fs
xor
jno
mov
jne
lds
cmp
outsb
adc
arpl
cmpsb
cmpsb
mov
add
adc
pop
cmp
mov
add
daa
std
mov
lret
sbb
inc
dec
fwait
or
lock
iret
jp
cmpsl
cmp
nop
sahf
jmp
hlt
xchg
xchg
outsb
inc
daa
inc
pop
push
loop
ds
test
jl
add
xchg
mov
xor
iret
loope
not
jge
out
mov
cmp
das
push
fadd
in
mov
mov
jmp
sub
iret
dec
addr16
fisubrs
data16
fisubrs
cltd
and
sub
adc
aam
lret
cmpsb
fstpt
xor
cltd
in
je
roll
mov
jge
movsl
in
dec
jp
testb
mov
jle
in
mov
imul
out
shlb
mov
sbb
test
cli
xor
xchg
ds
pop
das
cmpsl
addb
push
rsqrtps
fists
fnstsw
jns
jmp
sub
adc
fsubl
adc
in
mov
inc
jae,pn
sti
data16
es
inc
fldenv
incl
outsb
jecxz
mov
mov
push
adc
or
sub
mov
pop
push
lock
xchg
mull
fisubrs
dec
bound
cmc
sub
jge
sbb
and
jns
mov
push
scas
add
sub
cmp
jp
rcrl
xchg
adc
pushl
sbb
divl
add
js
shl
fs
add
adc
sarb
out
and
adc
lcall
mov
xor
mov
dec
sbb
ja
xchg
mov
pop
outsb
inc
xchg
mov
out
cltd
mov
js
in
xor
cltd
add
pop
sub
test
push
lret
aaa
xchg
jns
or
lods
cmc
pop
stos
loope
mov
xchg
shrl
adc
int3
or
mov
dec
adc
movsl
pop
test
xchg
pushl
addl
mov
xchg
in
mov
int3
lahf
shlb
inc
mov
fwait
aam
pusha
fists
in
dec
fnstsw
pop
sbb
lds
lahf
out
xorl
dec
icebp
jg
mov
pop
xchg
jno
adc
cli
ret
cltd
pop
and
push
push
adc
or
cmpsb
mov
cli
lret
rep
adc
jg
and
cmc
nop
mov
mov
loop
and
shlb
push
and
lret
push
lcall
cs
add
and
in
adc
js
cmp
shl
test
pop
lcall
ret
push
xor
add
jmp
sbb
sub
or
add
fnsave
jnp
mov
jae
in
xchg
inc
push
and
inc
xor
lods
mov
add
and
mov
xor
xchg
aaa
dec
xor
in
jl
bound
imul
popf
jbe
fs
add
pop
add
push
fiadds
daa
xor
dec
and
daa
adc
xchg
movsl
or
rorl
aam
or
jo
lret
ret
mov
add
sub
push
fistpl
push
or
and
pop
faddl
aaa
outsl
jnp
pop
push
daa
jne
and
mul
push
test
fmuls
adc
cltd
ret
push
xor
test
test
rcrb
push
mov
jge
aaa
cs
leave
stos
popf
aaa
lret
mov
jo
in
fbstp
cmp
and
xor
cwtl
mov
pusha
cltd
mov
inc
xchg
xor
xor
or
movb
ret
mov
icebp
xchg
mov
inc
inc
icebp
adc
sbb
ja
mov
je
mov
jo
popf
jp
mov
or
sbb
adc
sub
mov
mov
outsb
adc
jbe
sub
ljmp
push
je
mov
jge
in
pop
mov
es
aam
stos
and
icebp
mov
fcompl
add
pop
cmp
repnz
and
out
xchg
outsl
hlt
inc
imul
jne
in
add
mov
cs
cltd
gs
pop
movsb
push
adc
or
xor
imul
mov
dec
hlt
or
outsl
jmp
push
fistl
push
push
xor
xor
test
inc
and
adc
xchg
imul
jo
addl
sti
or
xor
shll
pop
mov
xchg
shrb
and
mov
divb
sahf
jl
adc
jl
push
sbb
sbb
lea
jecxz
in
flds
ret
sub
xchg
fidivrs
or
xchg
in
mov
sbb
stc
push
call
bound
lret
pop
mov
cmpsl
pop
push
jb
push
cmp
push
adc
mov
push
cmp
aad
test
push
test
cmp
fst
outsb
add
jle,pt
mov
test
pop
or
popf
cmc
filds
imul
xchg
sub
fmulp
stos
sbb
jg
jns
popa
aaa
lahf
arpl
inc
ret
adc
leave
int
xor
sub
mov
cmp
fdivl
adc
nop
pushf
cltd
loope
mov
addr16
xchg
mov
xchg
lds
fcmovu
sarl
inc
jg
xlat
push
enter
cli
xlat
xchg
adc
xor
pop
mov
es
inc
sbbb
pop
ja
lods
inc
xchg
andl
mov
xor
scas
mov
inc
mov
xchg
xchg
or
fsubrs
nop
jg
xor
jecxz
jg
dec
and
mov
add
icebp
and
lods
das
cltd
mov
bound
pop
call
mov
fsubl
test
ja
insl
out
aaa
jno
sub
pop
pushf
mov
jge
sbb
out
daa
nop
add
popa
cmp
lods
scas
mov
dec
inc
jb
insl
add
ret
pop
mov
jns
scas
xor
push
mov
jge
aaa
stos
out
sbb
pop
sub
or
mov
insb
mov
cld
loop
push
fdivrs
xchg
repz
fs
push
or
jbe
jnp
cld
add
fnsave
in
xlat
sub
adc
pop
or
insl
out
and
mov
jne
pop
movsb
sub
shll
out
xlat
xchg
adc
mov
jmp
nop
pop
and
stos
pop
and
and
add
push
jns
fwait
mov
pushf
sub
jno
jnp
push
mov
pop
sub
andl
div
and
aaa
add
and
movsb
cmp
cwtl
add
jg
inc
xor
ret
and
fst
or
out
insl
flds
or
inc
incl
pop
cmpsl
pop
mov
mov
cltd
insb
mov
lods
dec
pop
outsl
je
call
sbb
pop
out
cmp
and
icebp
aaa
jne
js
jge
rcrb
ljmp
mov
out
mov
xchg
inc
dec
test
push
pop
or
xchg
mov
pop
hlt
out
mov
jns
dec
and
mov
lods
pop
cmp
ss
adc
dec
repnz
adc
out
insb
jmp
into
sbb
jno
cltd
ret
mov
lods
movsl
mov
iret
mov
rcll
jmp
das
fcompl
in
inc
mov
outsb
mov
sub
lods
mov
cmpsb
dec
iret
mov
sahf
mov
push
xor
lods
data16
repnz
cmc
mov
test
out
jns
adcl
push
ds
or
and
bound
xor
popf
xchg
xlat
fisubrs
int3
cli
je
xor
xor
push
hlt
xor
bound
or
mov
and
mov
pop
test
adc
cs
fidivl
addr16
dec
arpl
xlat
je
add
repnz
sbb
sub
loope
inc
imul
mov
pop
fnstcw
or
or
push
imul
adc
pushf
dec
xchg
gs
and
mov
inc
xor
mov
sub
mov
adc
push
sti
cmp
push
add
cltd
lock
popf
pop
sti
xor
pusha
gs
daa
lock
adc
dec
push
movsb
jp
add
add
imul
jns
adc
repnz
xchg
push
out
inc
jno
or
mov
icebp
sub
sub
inc
and
add
jecxz
test
shr
mov
aaa
cld
sbb
push
pusha
xchg
ficoml
ljmp
js
mov
mov
std
lods
in
fistpll
sub
xchg
push
jp
mov
jge
lock
jnp
fdivs
cmp
daa
or
stos
dec
xor
jo
fs
and
aaa
inc
adc
dec
push
fwait
xor
in
lock
fs
xchg
adc
sub
int3
mov
cld
sub
xchg
push
std
lahf
sub
jae
enter
dec
fildll
inc
pop
and
fsubrl
shll
fists
inc
mov
or
mov
lea
jns
insb
in
popa
enter
sub
ds
sub
stc
cltd
dec
loope
fsubs
js
jns
mov
lahf
aad
ret
popf
mov
mov
dec
ss
mov
movsb
push
fcompl
sahf
in
jmp
lahf
xchg
lock
mov
xchg
push
pop
cwtl
mov
xchg
in
mov
xlat
mulb
js
lock
popf
mov
lods
int3
sub
xchg
push
sbb
fwait
push
into
push
xchg
mov
xchg
xor
push
mov
add
cs
xchg
push
imul
add
jmp
sbb
sbb
or
dec
lcall
fsubs
xchg
push
daa
jg
ret
xchg
push
jns
test
sbb
cmp
dec
outsl
subl
jns
mov
jge
pop
push
cmpsl
inc
loope
push
jmp
cwtl
or
outsl
mov
jno
out
add
or
jecxz
and
vpcomb
mov
push
mov
adc
dec
or
insb
mov
ret
dec
lds
dec
sub
mov
mov
or
ds
and
lret
arpl
shlb
pop
jle
xor
sarl
push
sarl
or
aaa
jmp
clc
xor
pop
mov
frstor
push
outsl
mov
ret
xchg
pop
adc
push
cmp
push
jmp
sbb
fidivl
int3
int
mov
adc
xchg
std
or
stos
dec
jg
xor
scas
aaa
dec
in
bound
jb
sub
lret
loopne
sub
aaa
mull
scas
xchg
stos
xchg
adcl
ret
cmp
rorl
pop
cs
jle
add
or
cltd
xor
push
push
push
mov
and
nop
mov
lods
daa
adc
push
dec
or
call
jae
imul
push
mov
call
xchg
repnz
sbb
rclb
push
mov
fbld
sub
mov
popa
aaa
and
mov
jo
xor
jns
int
or
movsb
mov
lock
dec
cmpsl
mov
stos
or
mov
adcl
sub
bound
out
test
mov
aas
pop
mov
fldenv
push
lretw
hlt
xlat
xor
sub
in
and
jnp
aam
enter
lret
gs
inc
aas
sarl
mov
ret
andb
pop
and
lods
xchg
pop
in
jnp
adc
sub
pop
adc
ljmp
jno
jl
inc
push
pop
jmp
pop
adc
inc
push
mov
mov
sbb
jno
mov
mov
cmovp
or
cmovo
pushf
rcrb
jnp
mov
in
mov
rclb
inc
dec
xchg
sbb
cmovle
or
test
arpl
sarb
xor
fmull
or
dec
cmpsl
mov
xchg
lods
and
movsb
fisttps
repnz
cmp
xor
jg
mov
gs
pop
and
push
sub
ds
push
xchg
movsb
jle
fdivs
mov
mov
lcall
inc
lea
mov
cmpsl
or
stos
jmp
adc
push
xchg
repnz
jae
shll
mov
sbb
ss
mov
dec
push
jae
xor
add
inc
jle
mov
jecxz
xchg
jne
push
mov
movsl
insb
js
lret
fisubs
dec
icebp
jle
cs
das
and
mov
movhps
pop
stos
adc
inc
pusha
cs
sbb
xor
hlt
cmp
xchg
cmc
inc
adc
or
sbb
mov
loopne
xor
push
test
inc
sub
xchg
mov
fildll
iret
xchg
gs
je
jns
push
movsl
inc
mov
mov
jl
sub
gs
in
jg
shr
stos
daa
call
mov
mov
pop
aad
hlt
mov
pop
mulb
cwtl
jnp
jmp
jge
cwtl
adc
mov
cwtl
insl
xchg
dec
push
gs
imul
xchg
test
mov
cmp
loop
xchg
sbb
add
push
fwait
push
test
adc
or
or
xor
inc
jbe
das
mov
les
add
in
ret
movsl
fimuls
repz
lret
test
cmc
xchg
push
cmp
insb
adc
jle
or
jb
push
sub
mov
ret
jp
cmc
call
dec
pop
out
xchg
lret
aaa
cmpsb
nop
inc
enter
movsb
inc
out
and
ljmp
inc
sbb
cmc
les
daa
jo
cltd
mov
lret
into
je
outsl
out
cltd
popw
loope
cmpsl
decl
xor
xor
leave
mov
mov
in
add
and
stc
xor
pop
lods
and
push
or
add
bound
jb
adc
jp
test
rol
jge
shrb
into
sbb
push
adc
loopne
xchg
imul
negl
out
adc
adc
and
add
out
pop
js
xor
popf
mov
shll
push
lcall
push
mov
loope
cld
arpl
sbb
popa
lret
mov
jge
inc
xchg
xchg
adc
jmp
push
nop
rcrb
dec
lods
lret
aam
leave
adc
pop
ss
push
dec
ret
cmp
rcl
mov
cmp
cli
push
icebp
jnp
or
push
rorl
push
bnd
jge
xchg
xchg
test
pop
cltd
hlt
dec
in
cli
push
xchg
popa
mov
add
mov
cmpsb
fstps
in
in
xchg
imul
mov
insb
xor
push
mov
mov
sub
jb
fpatan
mov
jb
xlat
mov
pop
flds
in
ret
inc
mov
push
or
dec
xor
dec
dec
push
and
ror
mov
std
call
sub
fcmovu
test
in
and
ds
movsl
sub
outsb
fisttpl
adc
int3
jns
jp
rcl
mov
xor
and
push
xchg
js
dec
fwait
adc
adc
sarb
test
push
xor
jae
outsl
xor
loope
add
mov
out
mov
test
sbb
into
xor
xor
cld
dec
jb
or
and
xorl
nop
icebp
xchg
scas
push
xchg
std
pushf
xor
shrb
xor
mov
mov
das
mov
dec
xor
jbe
add
mov
addr16
pop
xchg
sub
cltd
imul
lret
dec
idivl
push
lock
mov
test
lods
lret
scas
cmp
lods
mov
scas
jp
xlat
cwtl
fadd
mov
sub
xchg
cmp
insb
push
jecxz
jge
imul
jge
jmp
cmpsb
gs
dec
lret
jge
call
hlt
cmp
popf
lret
scas
mov
jns
ljmp
cltd
jbe
popa
andb
fsubl
push
icebp
adc
sbb
sbbb
aas
adc
push
xlat
jns
mov
jnp
mov
sbb
and
fimuls
fildll
inc
ja
cmp
adc
mov
add
decl
or
lcall
jo
sub
lea
int3
test
movsb
imul
pop
mov
push
xor
fimuls
mov
fwait
or
jge
and
jno
out
inc
jp
adc
clc
push
mov
lock
jne
mov
mov
imul
fdivr
out
in
xor
ret
push
adc
jp
jl
pop
mov
pop
pop
and
scas
mov
xor
mov
push
xlat
push
mov
xor
pop
lds
xchg
xchg
xchg
fidivl
inc
xchg
push
mov
cmp
ja
pop
xor
push
adc
jge
adc
fistpl
adc
roll
aad
push
jle
push
mov
js
stos
into
repz
fiaddl
mov
jp
cld
push
xor
xchg
subb
inc
scas
add
mov
jmp
adc
adc
jno
xchg
fs
leave
lretw
xor
dec
daa
rcll
jecxz
lahf
lret
aam
fnstsw
js
in
stos
push
lods
jl
call
inc
jge
cmp
jno
cmpb
mov
jg
or
in
adc
sbb
add
xchg
insl
or
sahf
or
iret
pop
push
mov
xchg
xchg
xchg
pop
pop
mov
cld
or
or
xor
ljmp
icebp
or
andl
xlat
testl
enter
icebp
xchg
ret
leave
imul
mov
lea
mov
rorl
push
inc
add
cvtps2pi
sahf
mov
fdivp
sbb
add
cmpsb
and
lahf
xchg
adc
stc
shll
cmp
jo
insb
int3
dec
out
mov
out
test
aas
cmp
imul
arpl
and
mov
ss
xchg
push
mov
ror
mov
scas
push
test
cmp
jae
test
scas
int3
adc
sub
aas
push
mov
ljmp
dec
aam
orb
xchg
cmp
push
inc
xor
dec
mov
inc
dec
mov
int3
jmp
jae
dec
pop
or
and
cmc
mov
sub
mov
out
inc
mov
imulb
es
jl
js
adc
les
in
repz
pusha
jmp
xchg
popf
sbb
mov
mov
or
xor
stc
out
pop
dec
cmpsb
add
cmc
fnstenv
sub
lock
push
push
test
lret
test
add
popf
stos
xchg
mov
fs
mov
add
sub
adc
push
ret
lret
mov
xchg
aam
inc
dec
jne
jle
je
xor
xor
adc
iret
jo
movsb
rolb
push
es
push
inc
jne
scas
xlat
hlt
xor
into
sbb
xchg
or
popf
inc
lahf
cld
pop
push
mov
jmp
js
rdtsc
jp
xor
lret
mov
and
inc
sti
sbb
and
ret
jp
clc
xchg
stc
add
lds
andb
xchg
xchg
and
pushf
mov
pop
test
add
mov
or
jbe
mov
getsec
cmp
mov
ffree
jns
rorb
adc
and
decb
xor
and
mov
cmp
ret
rcll
out
pop
and
mov
mov
das
and
xor
xchg
aaa
stos
xchg
mov
mov
stc
add
push
add
mov
iret
and
mov
mov
pushf
push
nop
jns
mov
into
mov
jmp
fldt
sbb
mov
jo
xchg
xlat
mov
inc
pushf
inc
rcll
cltd
xor
mov
call
lret
and
push
push
mov
push
popf
adc
pop
jne
int
cltd
pop
clc
jge
out
sub
sbb
adc
sbb
sbb
xchg
mov
sbb
out
xchg
fiadds
insb
bnd
xchg
and
or
inc
jns
push
lcall
lods
mov
cmp
pop
or
in
lahf
dec
and
scas
jns
addb
dec
jmp
dec
sbb
lock
in
jno
movsb
cmp
negl
clc
iret
push
cmpl
sub
prefetchnta
cmp
pushf
movsl
test
idivl
or
jecxz
push
lods
ret
pop
jne
mov
sub
mov
jl
push
or
loop
mov
dec
in
repnz
lds
imul
push
mov
test
sar
jns
inc
jmp
fnstcw
std
push
push
push
cld
stos
cwtl
shr
sti
aaa
in
gs
stc
shlb
xor
lds
mov
adc
push
daa
jp
shll
out
sbb
sbb
insl
bound
mov
scas
sbb
stos
xorb
lock
mov
xor
sub
mov
xor
popa
loop
fucom
mov
test
pusha
adc
pop
inc
test
sbbb
push
idivl
jle
add
xor
mov
repz
ss
sub
fildll
ret
in
sbb
mov
push
fcoms
das
pop
shrb
les
mov
cmpsb
scas
test
fwait
fwait
mov
pop
repz
fildl
xchg
xor
mov
lock
int
and
fdivl
repnz
bnd
in
out
xchg
fwait
dec
adc
cwtl
jg
fstpl
mov
mov
call
aad
fstpl
pop
cmp
pop
inc
dec
push
mov
out
stos
faddl
push
xchg
inc
inc
sub
pop
jno
insb
xor
mov
fistps
insb
leave
cmpsb
cmp
cmp
outsb
pop
test
les
sub
clc
mov
xchg
add
cmp
stc
js
mov
push
mov
cmp
les
fisubrs
sbb
xchg
mov
data16
lods
sti
or
mov
mov
int3
cmpsl
lret
scas
fmull
pop
sti
xchg
push
jns
dec
ds
adc
cmp
and
adc
mov
cmovs
fdivrl
mov
iret
add
mov
pop
jb
ret
fdiv
jmp
lcall
les
mov
add
fdivrl
or
test
jno
push
xor
and
lret
imul
sbb
dec
or
daa
and
stos
or
push
cmp
mov
add
mov
sub
xchg
std
or
cs
xlat
xchg
fildl
test
jns
out
mov
arpl
mov
dec
push
push
leave
fbstp
jae
mov
mov
das
ss
pop
adcl
push
lds
cmpsb
ljmp
lds
sarb
or
cmp
cmpsl
dec
pushl
cmpsb
sub
movsl
add
add
dec
rcll
mov
out
test
movsb
sbb
movsb
movsl
jecxz
test
loop
repnz
in
les
and
fnstsw
mov
popa
xlat
insb
andb
mov
shr
cld
subb
sbb
jle
es
mov
add
or
jbe
jns
push
sbb
pop
insl
xchg
mov
mov
daa
mov
cmp
dec
push
jb
fstps
test
repz
in
push
or
mov
mov
rclb
out
xchg
sbb
xchg
cmovl
or
mov
js
jmp
sbb
in
xchg
cmp
pop
xchg
fldcw
push
pop
in
movl
xlat
jp
cwtl
dec
les
sub
mov
outsb
shlb
shll
lea
je
pop
and
mov
sub
mov
xchg
and
mov
daa
cmpsl
daa
aas
mov
outsb
sbb
popf
push
xor
or
inc
dec
mov
sub
xor
sbbl
cmp
fidivrs
jo
xlat
shr
add
subb
pop
push
leave
idiv
jno
pop
sub
jmp
mov
lret
inc
mov
sub
sub
movswl
pop
xchg
iret
fcmovne
stos
daa
in
hlt
test
pop
mov
jge
in
popf
cmpsb
and
aam
push
jg
push
pop
bound
and
cmc
cmp
bsf
shr
mov
and
ds
pop
jne
std
cli
sub
subl
insl
subb
mov
ja
mov
xor
xchg
or
cmpsl
jb
adc
pop
jb
gs
cwtl
outsl
fisubrs
js
xchg
out
adc
mov
mov
jg
push
push
jmp
and
test
sbb
jns
addr16
fdiv
push
cltd
negl
mov
outsl
ss
outsl
or
sbb
dec
xlat
cld
inc
es
dec
lcall
adc
scas
mov
decl
xor
sbb
jno
ret
aam
insl
mov
outsl
cltd
insb
fmull
mov
fwait
daa
xlat
out
dec
push
fisttpl
xor
xchg
mov
xchg
popa
lret
mov
add
das
cwtl
add
pop
js
inc
cli
pop
pop
pusha
add
add
and
push
dec
jo
adc
inc
jmp
call
test
xor
add
inc
jle
das
insb
aad
sub
ss
mov
sarl
jns
add
adc
jle
movsb
sub
xor
pop
jb
ret
sbb
sbb
jmp
mov
mov
aas
pop
rol
fnstenv
das
or
out
xchg
jbe
int
pop
shlb
lahf
gs
nop
push
pop
iret
stc
push
mov
or
loopne
insl
sub
clc
sbb
cmp
add
push
subl
jbe
jne
adc
add
fistl
push
add
xchg
fnsave
out
dec
pop
lock
out
lock
mov
shrb
mov
ljmp
jns,pn
data16
in
clc
xor
aad
pop
add
fdivrl
aad
out
jmp
mov
pop
fcmovne
je
xchg
lahf
push
cmc
add
mov
and
fadd
cld
mov
nop
lret
je
pop
cmp
out
lahf
sbb
mov
in
es
addl
cwtl
movsl
testb
in
cli
adc
int
pop
or
sbb
scas
movsl
scas
sub
nop
pushf
xchg
dec
cmp
sahf
push
rcrb
ret
scas
scas
push
rolb
ljmp
scas
pop
nop
jmp
jg
push
or
and
out
xlat
xchg
sbb
pop
cltd
aam
or
pop
push
cwtl
cmp
test
jne
push
adc
aas
test
mov
mov
ror
addr16
push
mov
ja
imul
orl
mov
mov
push
xlat
jmp
jge
lret
or
xor
lret
adc
fucomip
outsl
into
sub
fdivl
test
bound
andb
nop
sub
fsubr
ljmp
ret
adc
and
filds
call
pop
imul
xchg
or
cs
ds
pop
mov
movsl
call
jo
mov
ja
jns
jecxz
insb
cmpsw
and
repz
pop
add
and
xchg
repz
dec
call
int3
dec
ret
sbb
mov
stc
ljmp
cmp
sub
pinsrw
and
mov
out
subb
ss
xor
sub
dec
int
dec
xor
mov
inc
xorb
push
cli
xchg
jns
dec
push
dec
not
scas
fs
mov
lds
mull
jns
cmp
sub
xchg
lods
ficompl
push
int
mov
mov
xchg
in
sub
push
xchg
push
aaa
addr16
sarb
or
xor
test
pop
adc
test
pop
fnstsw
cmp
clc
ss
mov
and
push
jecxz
xchg
or
jo
int
icebp
dec
xchg
jnp
push
sbb
filds
rol
dec
dec
orps
or
add
ud0
and
out
dec
cli
movsl
mov
fisttpll
dec
loope
and
lret
inc
mov
sbb
add
jmp
xchg
dec
fsubr
lret
push
mov
cmp
shr
call
adc
idivl
jle
inc
mov
lcall
mov
jecxz
pop
push
aas
push
or
jnp
icebp
stos
in
sub
lea
push
push
sbb
int
iret
adc
int3
jg
xorl
or
pushf
sub
jmp
push
call
jecxz
push
cmpl
adc
push
push
test
jle
ret
sahf
adc
outsb
jecxz
scas
dec
addb
ja
les
pop
mov
das
shrb
mov
mov
push
shrl
in
rcll
inc
push
mov
call
mov
leave
stos
sti
add
inc
call
push
cmp
mov
add
popf
mov
cmp
dec
dec
les
stos
inc
test
cmp
test
xor
pusha
lret
jb
and
lret
test
iret
movsb
push
in
ret
or
fcom
iret
sub
mov
xchg
and
inc
lea
loop
add
sbb
pop
aad
xchg
fsts
and
or
and
movsl
pop
push
out
and
inc
sbb
in
div
dec
jmp
mov
lret
jb
dec
sub
movsb
daa
sar
cwtl
adc
jl
xchg
adc
fimuls
push
hlt
mov
or
mov
jmp
jmpw
sbb
sbb
fistl
popa
xor
xchg
roll
test
pop
push
mov
push
adc
adc
jle
jmp
int3
negb
stc
dec
pop
cmp
pop
loope
in
mov
pusha
mov
sahf
cmp
inc
fdivrs
and
cs
js
pop
rcll
inc
lods
jo
xlat
loopne
aaa
insb
aas
inc
daa
mov
pop
call
jmp
sub
mov
push
std
leave
inc
pop
cmpb
and
test
xor
inc
mov
icebp
inc
mov
stos
mov
cmp
std
mov
leave
icebp
leave
jb
int3
pop
mov
call
jg
lods
enter
pushf
or
je
cli
pushf
lahf
int
mov
jmp
xor
scas
mov
and
sahf
mull
add
xchg
or
mov
repnz
aas
jge
ss
pusha
js
mov
shll
push
loop
div
call
ret
in
repz
stos
jb
shr
daa
arpl
sahf
fidivrs
les
ljmp
sbb
cld
cmp
mov
loopne
sub
xor
mov
xchg
iret
push
fisubs
ret
pop
pop
adc
movsb
fidivs
fsubrp
dec
nop
loop
mov
ljmp
mov
sub
dec
pop
sbb
sbb
daa
or
push
jp
daa
inc
rclb
in
xor
cltd
ret
mov
stc
mov
dec
push
hlt
sub
inc
xchg
mov
enter
shrl
xor
out
xor
jge
lcall
cmp
adc
adc
dec
incl
lea
or
dec
add
or
lods
or
scas
in
dec
xor
mov
push
ret
sub
iret
nopl
out
int3
cmpsl
test
dec
fucomip
push
aaa
pusha
push
cmpsl
mov
push
cltd
jmp
stos
mov
lods
jnp
xchg
mov
xchg
ret
ss
and
cmpsb
stos
jb
insl
sbb
xchg
jmp
inc
imul
pop
inc
push
imul
jno
ja
sbb
adc
jp
jmp
inc
push
and
or
pop
insl
jg
fucomip
cmpsl
lahf
jae
sti
xor
push
jo
fucom
add
push
jo
mov
lea
cmpsl
sbb
mov
cmp
inc
pop
push
mov
lods
imul
imul
sub
mov
jo
hlt
stos
push
out
cmp
add
xchg
push
repz
in
pushf
mov
insb
sub
and
cmp
imul
mov
test
or
in
sahf
push
sbb
cld
jno
jns
xchg
insb
orb
aaa
int
add
cld
xchg
lahf
inc
outsb
cli
sti
ret
inc
xor
rorb
xor
add
inc
aas
jbe
xor
out
popaw
adc
fists
test
sti
movl
aad
inc
fdivs
gs
dec
mov
popa
imul
pop
mov
dec
in
ljmp
xor
xor
push
jl
in
push
mov
xlat
sbb
out
leave
inc
shlb
lock
clc
inc
mov
dec
out
stos
cmp
dec
mov
out
scas
cmp
mov
data16
jle,pt
mov
movsb
cli
imul
mov
add
sbb
mov
pop
je
cmp
jp
imul
dec
bound
sbb
sub
sbb
cs
test
pop
xor
add
ss
nop
push
mov
adc
gs
xor
adc
dec
jge
lds
out
mov
pop
mov
mov
inc
test
add
dec
inc
in
loop
xchg
xorb
int3
add
aas
xchg
jo
cld
stos
adc
das
lock
mov
mov
sbb
arpl
or
leave
pop
rcrb
in
xchg
cmc
fimull
lods
imul
fs
das
pop
out
mov
mov
adc
xchg
pushf
js
mov
dec
cmpsl
mov
mov
scas
daa
lds
jg
or
rcl
mov
xlat
loopne
adc
and
outsl
data16
lea
cmovp
cmpsl
cld
inc
jl
popf
into
aaa
es
add
push
movsb
rclb
lret
mov
dec
out
loopne
ljmp
jg
sub
es
ljmp
std
xchg
fcomip
or
mov
mov
sbb
stos
sub
mov
inc
sub
mov
push
pop
fisubl
arpl
js
sti
or
test
mov
cmp
jno
jmp
push
jecxz
sbb
xchg
pop
xchg
fistps
data16
call
ror
lds
ljmp
add
repz
shrl
ficompl
movsb
cmpsb
fistps
mov
pop
addr16
aad
inc
jle
lcall
fdivrl
fcomip
ror
sub
push
push
xchg
int3
dec
sub
call
cltd
test
cs
push
push
outsb
jge
or
aad
push
out
jp
idivb
push
std
jns
xlat
xchg
stos
leave
sub
setne
mov
push
fisubl
pushf
movsl
pushf
int
in
dec
jmp
jno
dec
add
and
lret
addl
mov
push
xor
jo
lds
jge
call
jno
pushl
lods
sub
test
mov
shl
add
les
iret
es
sub
mov
cld
xchg
aas
xchg
mov
sarb
out
sbbb
lret
imul
xor
dec
mov
movsl
or
fbstp
fs
jl
ljmp
cmp
stos
dec
sub
inc
decb
mov
xchg
mov
sbb
and
mov
mov
sub
and
mov
movsb
add
data16
pop
jbe
mov
jbe
fwait
mov
cmp
mov
fstl
mov
iret
ret
lret
cwtl
ss
push
fisubrl
rcll
ja
xchg
pop
jle
fidivs
in
stc
outsl
push
stos
scas
mov
sbb
push
xchg
repz
stos
adc
add
mov
movsl
adc
iret
push
fwait
push
inc
adc
cltd
push
movsb
lahf
cmp
pop
and
cmp
daa
pop
mov
dec
adc
and
test
jb
jo
ds
sbb
add
pop
enter
pop
sbb
cmp
stos
add
add
hlt
jae
movsl
mov
add
es
int3
fiaddl
pop
cmp
and
lods
sbbb
fs
sbb
gs
jp
mov
test
aas
out
push
icebp
test
xchg
scas
adc
pop
fidivrl
insb
je
mov
stos
sbb
mov
cmp
cmc
xchg
inc
and
lahf
dec
jb
clc
sti
jp
dec
sbb
mov
rol
mov
enter
in
stos
ds
pop
or
insb
jecxz
sub
test
cli
xor
hlt
xor
fmull
movsl
and
sub
add
pop
add
shll
jae
xor
sbb
out
fbld
and
aam
sar
aas
mov
cmpsb
in
shrb
pop
shl
cmp
jnp
into
jp
sub
mov
xor
cld
push
fs
rorl
jp
cmp
xlat
sub
ret
addr16
sarb
orl
dec
inc
imul
pop
repz
dec
xor
out
arpl
mov
sbb
lds
out
add
sarl
je
imul
into
rol
xor
push
stos
inc
nop
roll
push
cltd
test
fidivs
ljmp
jbe
push
cwtl
sub
push
jbe
repnz
loopne
jbe
movsb
dec
dec
inc
sbb
cmp
in
jl
cli
in
sbb
cli
push
outsl
sbb
mov
cmp
mov
in
jbe
out
bound
dec
xor
pop
test
dec
out
add
mov
inc
xor
xchg
out
insl
sbb
pusha
imul
dec
sbb
push
xchg
mov
dec
push
push
out
inc
dec
shlb
daa
push
xchg
sbb
push
cmc
mov
xchg
call
mov
xchg
ja
movsl
pop
cmp
jae
dec
fstpl
in
stos
and
les
imul
or
data16
jp
inc
fisubs
and
or
insb
pop
hlt
addr16
xor
repnz
mov
mov
sub
lock
and
mulb
xor
jge
insl
and
inc
adc
mov
test
jbe
mov
push
mov
pop
clc
inc
icebp
lea
insb
movsl
xchg
shrb
mov
mov
push
pop
shlb
inc
testl
cmp
or
xchg
int3
jnp
jns
xchg
pop
and
pushf
mov
xchg
mov
pop
add
sti
adc
sbb
jno
es
xor
test
sahf
sub
jns
sbb
div
or
mov
or
xor
movsl
cmpsb
incl
in
jb
pop
inc
xchg
ljmp
orl
mov
mov
pop
jg
cli
pop
ss
test
dec
sub
lahf
iret
pop
faddl
data16
cwtl
jno
push
push
mov
aaa
dec
push
fbstp
sub
mov
jb
das
arpl
fisubrl
ret
insb
adc
pop
fisubrs
mov
and
jne
je
fldt
rorb
mov
push
mov
xchg
stos
scas
jns
fst
mov
jge
ja
adc
lea
imul
cli
sbb
push
mov
inc
mov
nop
inc
dec
and
ror
push
sbb
jne
call
inc
xchg
add
jbe
pusha
cmp
jno
int
mov
icebp
leave
ret
xchg
dec
repz
mov
insl
jo
mov
sbb
mov
push
pop
mov
xor
xchg
adc
stos
daa
jb
in
and
cwtl
inc
push
cmpsl
imul
mov
sbb
dec
nop
or
jg
push
shlb
out
insb
les
nop
jbe
ret
lea
mov
and
out
cmpsl
fsubs
add
pop
cltd
cmp
xor
lock
jg
mov
mov
out
mull
push
test
xchg
mov
dec
lods
sti
push
aam
jcxz
jae
mov
insb
movsl
jge
fs
loop
mov
cmp
inc
fiaddl
iret
xchg
ret
fldcw
sub
ret
in
adc
dec
fwait
and
fsubl
into
hlt
mov
daa
cmp
xchg
addr16
cld
lahf
outsl
and
lods
movsb
aad
out
lret
mov
pop
int3
push
in
test
movsb
mov
dec
adc
add
sub
fidivrl
mov
push
adc
pop
jne
pop
add
jp
ja
ds
xchg
insb
dec
pop
mov
and
xchg
cmp
aad
mov
inc
push
andb
roll
or
mov
sbb
in
or
repz
dec
inc
and
popa
add
push
inc
iret
fxch
inc
pop
mov
movsl
cmc
add
in
jns
pop
test
xor
pop
movl
and
add
dec
ss
push
jmp
xor
jecxz
inc
gs
cmp
test
xchg
cltd
push
add
rol
pop
xlat
enter
mov
push
xor
lds
inc
sub
test
sti
data16
ljmp
dec
lahf
mov
sub
adc
add
mov
xor
insb
push
pop
pop
fstl
mov
cmp
aaa
mov
packssdw
mov
mov
sub
sbb
dec
int3
cs
addr16
push
xor
ja
pop
icebp
jg
mov
jb
push
cmp
ret
mov
in
adc
pushf
fisubrs
in
cmpsl
sti
mov
ja
sub
or
mov
xor
mov
jmp
sub
cmp
sub
loop
js
or
dec
add
mov
mov
jmp
dec
test
xchg
inc
sti
lods
push
mov
jnp
nop
leave
sbb
or
mov
iret
cmovp
cs
loopne
repz
lods
add
dec
daa
rolb
bound
in
out
and
and
movsb
mov
sbb
test
test
xchg
mov
lock
out
mov
iret
incl
ja
ds
iret
ror
or
adc
ss
cwtl
mov
mov
inc
or
push
repz
fs
and
xchg
mov
imul
cmp
dec
mov
out
jl
imul
xlat
stos
test
or
clc
lret
and
push
pop
test
sbb
xchg
inc
cmp
xchg
jnp
mov
test
enter
mov
xchg
pop
ret
das
call
push
xor
arpl
fbstp
movd
stos
pop
jmp
dec
mov
loop
mov
add
and
mov
notl
int
xor
dec
je
fdivrl
mov
test
cmpsl
mov
incl
aas
add
adc
aas
dec
xchg
loop
loope
pop
cmp
or
push
adc
mov
imul
je
into
ficomps
sarb
arpl
xchg
xor
cmpsl
or
mov
js
cmp
pop
and
or
pop
loope
repz
rcrl
dec
dec
in
out
mov
cli
push
sbb
sub
pop
pop
jmp
xchg
pusha
jle
popf
cmp
push
fnsave
xor
push
xchg
push
sahf
decl
mov
out
in
into
mov
xchg
xor
xorl
enter
inc
dec
ljmp
cmp
xchg
pop
cld
lcall
lock
mov
xor
arpl
push
sub
and
sub
add
fs
sub
cmc
jle
pop
push
mov
das
ds
stos
aad
into
inc
aas
ljmp
out
repnz
dec
and
cli
sbb
cmp
push
rcll
pop
test
shl
push
adc
mov
mov
mov
dec
mov
push
xlat
ror
sbb
jle
jecxz
cmpsb
in
push
ret
loopne
flds
test
dec
loopne
push
push
out
add
push
mov
mov
popa
ret
inc
and
jbe
jmp
lahf
jae
imul
cld
or
andl
mov
aas
ja
stos
add
mov
sub
xchg
mull
fsubrl
add
loopne
bound
mov
sti
inc
sub
push
dec
mov
pop
aad
cmpsb
add
push
es
cli
cmp
clc
cmp
flds
je
lret
aam
cltd
mov
loop
andl
inc
es
push
push
dec
repz
fs
xor
insb
data16
das
dec
in
lcall
pop
out
in
jb
and
sbb
sub
mov
lock
sbbb
pop
aam
js
incb
pop
test
sbb
fwait
loope
mov
jns
or
loop
jno
push
cwtl
lds
int
push
and
xchg
dec
adc
mov
push
ret
enter
lds
js
data16
data16
in
ljmp
mov
sbb
out
push
xchg
cmp
xchg
mov
in
mov
popf
mov
lds
mov
mov
mov
jb
inc
stc
sbb
bnd
rclb
adc
add
sbb
fisubs
out
inc
cmp
adc
stc
adc
mov
add
aam
dec
xchg
imul
xchg
ret
fildl
xorl
sbb
and
cmpsl
pop
lock
ss
mov
loopne
add
jl
cmc
nop
hlt
or
in
loopne
inc
ds
mov
mov
rcrl
xchg
mov
xchg
mov
lea
adc
out
adc
movsb
jp
orl
sahf
scas
xchg
fs
sar
lea
adc
add
ds
loopne
lods
xchg
data16
cmp
push
sbb
sbb
in
lds
fidivrs
jge
cmp
int3
xor
fnstenv
sbb
popa
aas
stos
scas
aad
sub
insb
movb
mov
sbb
scas
pop
out
push
jge
pop
mov
jl
xor
push
and
and
lcall
push
nop
ret
imulb
rclb
pop
push
adc
push
testb
movb
je
and
stc
pop
sub
mov
sub
mov
xor
pop
xchg
push
faddl
sahf
and
jg
iret
cmpsb
xchg
repz
std
sarb
in
mov
nop
pop
ss
cmp
inc
fucom
stc
iret
lods
lock
arpl
add
xor
int3
int
mov
in
mov
testl
in
movsb
mov
jl
subb
dec
movsl
mov
test
adc
mov
call
cmp
inc
mov
fisubrl
into
mov
sbb
jl
je
test
add
lret
mov
dec
shr
pop
jp
fisubrl
sbb
test
jmp
lea
test
aas
inc
scas
int3
jbe
sahf
and
ficoml
ret
rolb
mov
fmull
xchg
in
xor
out
mov
adc
push
mov
lea
pop
jne
stos
data16
les
mov
cmpb
loopne
mov
mov
aam
mov
out
dec
cmp
sti
jnp
lods
mov
dec
mov
in
imul
sbb
leave
jmp
addb
pop
push
jno
fs
adc
pushf
inc
rolb
xchg
imul
jnp
pop
imul
pop
daa
sar
or
cmp
dec
test
stos
je
and
andl
scas
lods
cld
xchg
mov
ljmp
mov
aam
sbb
mov
sbb
enter
out
call
mov
add
add
ljmp
adc
cmp
cmp
mov
arpl
in
lods
bound
sub
pop
imul
lods
bound
inc
sub
fwait
sbb
sub
test
adc
cwtl
mov
xor
dec
pop
scas
inc
inc
outsl
mov
call
add
test
adc
int
inc
mov
hlt
push
les
sub
push
sar
fdivl
sbb
dec
out
pop
scas
fst
insl
ds
mov
mov
xlat
jnp
push
jl
xor
push
mov
xchg
fnstsw
popa
icebp
hlt
imul
fnstsw
mul
xor
imul
ret
push
xchg
in
out
scas
mov
rolb
adc
fsubs
insl
in
cld
data16
and
pop
pop
lock
addr16
in
call
repnz
adc
adcb
loop
add
mov
fs
cltd
dec
loope
std
adc
cmp
sbb
sbbb
in
je
sub
enter
std
xor
add
mov
pop
daa
xor
or
mov
and
dec
sbb
ja
xchg
push
nop
popa
and
mov
jns
jl
or
cltd
inc
jecxz
pop
pop
sub
stc
lahf
loopne
in
popa
push
jmp
std
rorl
lret
push
mov
mov
and
aas
test
inc
scas
jnp
nop
out
mov
sbb
sbb
and
fistps
add
xor
mov
in
or
push
aam
data16
cmp
xor
cmp
sbb
jmp
std
inc
scas
cld
xor
lahf
rcrl
xor
out
ret
in
sbb
push
popl
cmp
dec
add
mov
pop
or
stos
jmp
xchg
pop
scas
and
mov
or
jge
leave
cmp
es
and
mov
inc
int
add
test
mov
into
xor
sub
push
mov
in
subb
mov
mov
cmp
cld
lods
push
push
test
daa
sub
and
lret
adc
mov
push
sub
sahf
ja
into
out
ljmp
jle
pusha
addr16
xchg
jmp
aaa
daa
in
rcrl
ret
test
cmp
push
div
mov
outsl
test
sub
in
scas
pop
and
push
sbb
sub
scas
jo
hlt
or
mov
imul
mov
lcall
and
jmp
mov
cld
out
in
mov
int3
jno
ja
orl
cmc
mov
cmp
int
push
rorb
das
into
sti
clc
cwtl
in
inc
push
and
pmulhw
mov
sub
test
mov
sbb
sub
push
shlb
push
mov
rcrb
pop
loop
je
fbstp
mov
jbe
ljmp
test
inc
mov
orps
arpl
jge
lea
and
test
dec
test
add
mov
roll
stos
ja
ljmp
inc
fldcw
dec
xchg
test
push
in
jae
das
leave
pop
push
outsb
sub
dec
sbb
fimuls
fdivrl
rcr
pop
movl
test
mov
sbb
cmp
push
pop
subb
cld
jecxz
pop
pop
push
xchg
in
push
xor
inc
jp
shlb
xor
inc
add
imulb
je
fisubrs
test
jmp
sub
pop
jo
xchg
mov
pusha
jge
jecxz
or
aas
stc
add
es
and
dec
movsl
xchg
jbe
fisubrl
cmp
mov
push
add
lret
jmp
insl
cmp
lea
xor
and
mov
in
push
pop
lds
lods
inc
shll
ret
adc
dec
lahf
pushf
and
sub
mov
push
sub
lret
std
mov
inc
insl
ret
sbb
ficomps
out
adc
lahf
aaa
or
adc
fildl
or
mov
or
or
and
fldt
cltd
sbb
cmpsb
outsb
pandn
imul
push
dec
cmp
xchg
enter
dec
out
ja
popf
out
mov
cmp
xor
es
or
and
xor
sbb
sbb
jecxz
aam
mov
out
outsb
pop
xchg
test
stos
cld
cltd
loopne
mov
push
fs
int3
and
jp
aam
push
jne
nop
pop
popa
je
mov
add
clc
jnp
mov
call
imull
fwait
mov
int
sub
insb
xor
inc
mov
repnz
testl
cmp
clc
add
insl
or
xchg
outsl
pop
arpl
popf
pop
mov
and
jge
add
testl
mov
pop
test
sbb
xchg
int3
insb
mov
int3
mov
mov
aaa
lahf
lods
jecxz
push
leave
xchg
jnp
cmpsb
jnp
pop
loopne
cld
inc
xorl
inc
xchg
cmc
mov
loopne
in
shlb
sahf
faddl
aam
lods
inc
cld
inc
mov
xchg
out
sub
cli
pop
popf
frstor
mov
xor
mov
in
sbb
test
lods
jb
xor
mov
pop
ret
lret
mov
cld
dec
push
jecxz
lock
notl
shlb
scas
addr16
inc
add
mov
sub
ds
dec
mov
mov
enter
xchg
imul
imul
andl
or
in
jns
movsb
mov
dec
or
mov
outsl
cmpsl
flds
mov
test
icebp
rcrl
dec
jbe
jo
stos
mov
js
dec
sbb
add
add
pop
fidivrl
fdivrs
cld
adc
dec
dec
or
jmp
mov
push
adc
je
pop
mov
fnstsw
scas
lret
fidivrl
imulb
sbb
int
jbe
and
insl
inc
in
hlt
fs
dec
xlat
cli
pusha
andl
enter
xor
jl
push
cmp
sbb
jg
sbb
imul
and
test
xchg
mov
pop
icebp
dec
and
lods
cmpsl
test
pop
xor
stc
mov
or
adc
loopne
mov
mov
jp
mov
or
add
xchg
daa
in
add
js
daa
pop
lods
int
fwait
adc
pop
jbe
xchg
adc
xor
test
lods
fwait
mov
sub
sbb
mov
sti
jl
mov
inc
das
and
mov
aad
cld
add
shll
mov
fstpt
test
in
fcomps
hlt
jge
hlt
je
push
mov
push
addb
add
insl
mov
out
test
adc
fisttpll
or
xor
sbb
push
cmp
in
aaa
add
repz
repz
cmp
imul
mov
call
pop
mov
gs
test
test
clc
mov
adc
aas
test
adc
xchg
xchg
cld
dec
andb
rolb
out
lcall
sub
js
xor
push
test
jb
mov
fcmovbe
sub
aad
push
xchg
xor
jb
lods
data16
call
bswap
xchg
mov
jb
cs
sbb
cs
repz
imul
and
in
testb
mov
das
jle
stc
shl
mov
or
sbb
out
inc
daa
dec
mov
int
cmp
filds
repz
addl
mov
rclb
push
pop
adc
aas
adc
sub
inc
mov
inc
lret
push
sahf
pop
pop
add
xor
into
iret
add
add
cmp
adc
scas
call
xor
imul
fs
pusha
sti
lret
mov
xchg
sbb
mov
sub
ret
jge
mov
lock
xor
loopnew
into
xlat
jns
xchg
pusha
and
jne
inc
push
pop
and
dec
nop
loopne
mov
inc
subl
jnp
adc
xor
mov
add
std
cltd
adc
jb
jns
popf
inc
sbb
repz
fidivs
mov
das
push
mov
dec
popf
imul
dec
add
decb
dec
fnstcw
or
lods
cmpsl
aaa
int
or
jmp
jbe
mov
push
mov
lock
jle
mov
stc
and
inc
ret
add
add
test
rolb
mov
mov
cmp
jae
sbb
sbb
jno
fldt
aam
cmp
add
lret
xchg
stc
sbb
or
jbe
cmp
or
insb
call
jg
cmp
mov
pop
push
gs
lea
xchg
stos
pop
fistps
dec
push
ficoms
lods
lods
xor
pop
scas
pop
orb
push
in
mov
fsubrs
mov
daa
cmp
adc
add
inc
adc
xor
insl
test
arpl
je
vmovupd
push
scas
ret
je
loop
outsb
daa
jle
lahf
mov
push
test
lret
push
sti
cld
dec
test
movsl
stos
pop
dec
dec
push
jl
imul
cmpsl
sub
lret
add
mov
leave
mov
jne
mov
ret
mov
jbe
andb
or
in
popf
aas
iret
pop
xchg
push
out
mov
or
aam
loope
loopne
mov
dec
in
pop
lods
cmp
or
daa
mov
scas
jno
hlt
mov
xchg
jo
arpl
inc
dec
lea
cmp
roll
jge
jae
sbb
xchg
ja
cmp
sbb
adc
jne
popa
in
shrb
test
arpl
loop
cmp
fwait
imul
gs
ljmp
cwtl
xor
inc
adc
test
inc
leave
cmp
stc
adcb
aad
or
inc
sti
mov
fidivl
repnz
cmp
or
adc
cld
dec
or
orl
notl
int
pop
push
stos
scas
inc
rcll
xchg
icebp
push
push
bound
filds
clc
and
addr16
cmpsb
adcb
adc
loopne
test
lcall
fsubr
movsb
push
imul
mov
inc
xor
and
mov
push
sahf
filds
jle
xchg
inc
add
scas
outsb
shll
cli
xor
and
out
outsl
ficompl
aad
add
push
in
cmp
das
test
insl
adc
lods
pushf
dec
repnz
mov
xchg
mov
sbb
jmp
push
lock
sarl
lcall
add
stc
lea
cmp
arpl
in
jbe
loopne
and
cmpsb
nop
test
or
ljmp
popf
cmp
aas
push
mov
jb
sbb
out
add
loopne
dec
ja
orl
and
inc
outsl
out
test
mov
mov
add
xchg
sahf
aas
jp
subb
and
or
add
jae
cltd
loope
dec
cmp
xchg
rcrb
dec
cmp
in
shlb
sbbb
test
inc
jns
shlb
sub
push
ret
jo
mov
pop
and
xchg
and
and
je
out
xor
lock
imul
mov
xor
pop
hlt
pop
lret
cltd
fstpt
jno
mov
in
std
js
mov
pop
or
fs
and
shlb
dec
lea
jo
sub
aad
sbb
addb
xor
jo
mov
or
xlat
inc
jb
adc
outsl
ja
lods
in
dec
into
inc
jno
mov
lret
sbb
mov
sub
lea
lods
push
mov
pop
xor
jne
dec
js
addl
inc
rol
push
lea
testl
arpl
push
adc
adc
push
sbb
inc
int
sub
addr16
ds
cli
or
lret
xor
test
daa
lods
lds
fs
enter
les
mov
add
aaa
xchg
call
mov
mov
sar
push
fadds
jmp
sbb
cmp
sbb
inc
lret
or
push
pop
push
stos
inc
call
push
dec
stos
and
cmpsb
and
adc
cmpsl
sub
std
pop
cli
sti
hlt
out
ficoms
push
mov
out
in
into
pop
push
sbb
adcl
aad
fdivs
or
dec
jae
mov
subb
scas
fidivrl
shrl
rcrl
push
aaa
mov
push
xor
push
lahf
mov
or
xor
loope
pop
mov
movsb
in
pushf
xor
imul
cmp
jmp
cmp
loop
and
cmp
xchg
xchg
repnz
in
xchg
cmp
mov
pop
or
push
pop
je
pop
mov
mov
jns
inc
icebp
and
addr16
fnstenv
inc
inc
xchg
add
lahf
fcompl
jb
daa
pop
cmp
push
repnz
mov
imul
jge
js
cli
loope
xor
mov
aas
sbb
loop
dec
out
lock
or
xor
inc
xchg
push
insl
mov
sub
repnz
mov
in
jae
add
dec
push
xor
fs
xchg
fisubl
subl
incb
cmpsl
jno
gs
jne
movsb
cmp
cmp
mov
sbb
xchg
adc
or
aas
pop
pop
cmp
mov
imul
push
shlb
dec
out
dec
mull
add
pop
jmp
xchg
inc
les
int3
xchg
xor
push
fiaddl
fs
aam
add
imulb
lcall
fwait
add
minps
inc
cmp
pop
pop
sbb
arpl
mov
mov
aam
subl
cs
pop
fsubr
dec
adc
rorl
pushf
mov
es
dec
inc
lock
rolb
je
hlt
clc
jae
cmc
test
jge
xor
cmp
ret
in
lock
divb
push
sti
adc
lahf
mov
dec
fsubs
movsb
aad
mov
sbb
adc
jmp
ja
or
cli
imul
jmp
lea
mov
ret
add
jo
mov
xchg
out
mov
adc
fldl
adc
clc
fisubl
stos
cmp
mov
jb
inc
fsubrl
orb
push
nop
not
mov
xchg
add
xchg
movsl
aad
or
lods
fdiv
xor
push
xor
adc
cli
xor
sbb
test
dec
cmp
aad
cs
movsb
and
insb
into
xor
fstp
xor
loope
aas
outsl
push
push
xchg
sarl
lahf
cmpsl
je
mov
mov
fidivl
pop
ja
fs
inc
popf
popa
js
das
push
int
inc
cmp
outsl
leave
inc
out
int
pop
lods
mov
jp
add
test
inc
inc
adc
xor
and
mov
iret
pusha
in
arpl
andb
push
popf
aam
into
outsl
sub
xchg
stc
xchg
mov
and
lods
insb
ss
or
inc
xchg
das
fcmovnbe
dec
rcr
cld
sub
jecxz
es
fidivrs
mov
adc
or
inc
cmpl
pop
mov
sbb
es
adc
cltd
sahf
clc
inc
sbb
sub
cld
jl
sub
mov
std
pop
sub
or
mov
jb
inc
jns
mov
imul
inc
jae
out
out
cmp
add
repnz
cmp
mov
lea
popa
enter
in
scas
mov
mov
push
mov
pusha
mov
mov
or
pop
mov
iret
and
inc
loop
mov
mov
loope
sub
inc
add
pushf
cmp
hlt
fsub
mov
mov
lea
sbbb
loopne
and
push
jae
mov
pop
cmpsb
mov
insb
push
adc
push
pusha
xchg
outsb
ret
dec
hlt
mov
test
mov
sti
aas
hlt
inc
es
xchg
push
jmp
ds
pop
inc
arpl
ficomps
inc
std
lea
nop
mov
dec
xlat
inc
cmp
push
pusha
std
jae
mov
mov
popf
int3
jo
xchg
inc
rclb
pop
dec
jge
repz
idivl
call
roll
data16
rcll
aas
mov
jl
cmc
sarb
xchg
out
imul
or
push
mov
ja
popa
add
pop
negl
inc
lock
push
fldcw
add
das
xor
sub
jl
pop
aaa
lret
push
push
mov
mov
mov
idiv
rcrl
fsubl
mov
xor
xor
cs
dec
mov
mov
dec
cmp
out
cwtl
or
mov
pop
sub
out
ret
mov
pop
inc
sbb
pop
jns
lods
stc
push
mov
loopne
xlat
shl
or
test
sti
adc
hlt
mov
jbe
xchg
test
cltd
jecxz
cmp
jns
imulb
xchg
shll
cld
mov
mov
sarb
dec
dec
fisubrl
bnd
shr
jae
or
and
pusha
iret
aam
push
lds
in
es
and
inc
push
add
and
pop
scas
outsb
inc
xchg
test
js
cmpsb
push
int
cmp
into
sbb
mov
mov
jl
in
inc
xchg
mov
jle
fmuls
call
inc
dec
fcoms
loop
ret
sub
popa
mov
fs
out
out
add
testb
xchg
push
push
mov
nop
pop
mov
xchg
jbe
cld
mov
or
in
push
dec
sbb
out
gs
lahf
adc
sub
pop
jmp
fs
inc
sbb
jmp
mov
mov
sahf
in
scas
adc
xchg
stc
jno
sub
insl
cs
call
test
and
mov
pop
das
fwait
push
je
sbb
cmp
nop
int
outsl
cs
cli
adcb
cmpsb
sbb
cmp
jge
push
xor
mov
das
stos
or
xchg
daa
dec
pop
out
inc
inc
inc
xchg
inc
out
xlat
cmp
xchg
xchg
or
cmp
xchg
movsl
or
and
mov
mov
std
movsl
insb
inc
mov
arpl
ret
js
rcrb
jg
imull
js
in
in
fwait
inc
jns
rol
sub
pop
addr16
jbe
lea
pop
mov
outsb
pop
rcll
js
inc
testb
imul
sub
sbbl
push
andl
bound
push
mov
xor
in
xchg
add
out
call
or
fildl
adcl
mov
daa
out
jns
sub
inc
insb
enter
adc
fnstsw
push
rep
push
insb
les
stos
add
cmp
dec
add
jns
cmp
push
loop
daa
mov
in
lret
dec
test
adc
mov
push
dec
sbb
push
push
popf
mov
cmpsb
xlat
mov
test
jmp
out
daa
cs
and
in
adc
orb
or
fcmovnu
cltd
pushf
inc
xchg
sbb
ja
mov
xor
sarl
into
jle
xor
fmulp
xor
lcall
and
mov
mov
push
adc
or
and
loope
inc
mov
imul
clc
outsb
int3
and
loop
jmp
push
inc
arpl
lret
sub
add
mov
in
cmc
pushf
aaa
push
lock
lods
push
add
and
pop
mov
add
pushf
adc
jp
jmp
mov
in
andl
cli
jno
jg
dec
add
loop
push
push
sbb
mov
xor
cmpsb
adc
clc
repz
jne
aam
cli
movb
imul
mov
xor
je
sbb
sub
and
jmp
sub
xchg
adc
ret
pop
xlat
in
ss
adc
out
adc
pop
daa
xor
in
adc
popf
jno
jae
push
call
mov
dec
jae
sbb
add
das
repnz
cli
inc
nop
out
and
ljmp
jno
ja
inc
outsb
movsl
rcr
shlb
pusha
fldt
push
leave
xchg
jge
xchg
in
sbb
sbb
jae
mov
pop
mov
mov
mov
inc
or
push
or
cmp
dec
aam
lcall
mov
icebp
jge
cmp
pop
shll
sti
lods
mov
sub
jno
sahf
mov
xchg
jecxz
add
jb
pop
test
xor
xlat
cs
jl
jo
mov
sahf
fbstp
sti
mov
enter
leave
movsb
xor
test
add
loopne
and
fidivl
adc
insb
pop
sti
das
push
popa
or
jl
fwait
pop
adc
cwtl
ds
lods
pop
mov
mov
xor
sub
xlat
imul
mov
data16
xchg
push
les
mov
dec
mov
sbb
outsb
jmp
leave
lods
out
daa
call
in
sbb
cmpsl
loope
mov
adc
cmp
jge
idivb
mov
inc
pop
repz
mov
stos
inc
sub
or
mov
mov
stos
or
sub
rclb
mov
cmc
lret
es
push
inc
jge
aas
inc
jne
test
pop
mov
mov
jbe
pusha
pop
add
pop
cmp
hlt
mov
ss
mov
pop
jae
or
sbb
shrb
dec
push
mov
sti
icebp
nop
adc
imul
mov
add
mov
push
es
popf
or
testb
add
loope
dec
lock
xchg
pop
aad
mov
push
stos
test
adc
adc
xlat
les
ds
mov
mov
sbb
pusha
sahf
sbb
ret
jbe
mov
cmp
cld
push
pusha
insl
adc
adc
sub
jle
push
cld
pop
push
je
fcoml
enter
jle
add
stos
xchg
sub
jnp
mov
lods
push
daa
popa
mov
push
loopne
push
ds
or
jns
jmp
gs
jno
je
in
les
cmp
insb
jl
mov
notl
xchg
lahf
dec
fbld
mov
mov
mov
ret
push
jg
mov
pop
inc
push
sbb
and
fisubs
jno
mov
and
clc
jecxz
notb
int
pop
mov
pop
mov
jo
pushf
rolb
mov
push
lea
pop
or
sbb
mov
fdivr
sbb
dec
mov
mov
sbb
das
cmp
mov
cld
imul
fwait
cmpsb
mov
sbb
lahf
and
ds
xchg
addb
cwtl
pop
jmp
inc
fisubl
mov
rcll
lods
jp
cmpsb
out
shll
add
stos
mov
sub
das
stc
sub
pop
mov
imul
ljmp
adc
outsl
scas
fs
dec
push
inc
add
in
popa
mov
mov
int
jb
aas
rcll
add
enter
lret
shll
xchg
adc
out
cltd
xchg
movsl
jbe
leave
or
adc
push
aad
xchg
sub
les
adc
lock
popf
push
mov
imul
sbb
mov
mov
insl
dec
xor
imul
cmp
ficomps
add
daa
movsl
xchg
push
inc
adc
in
and
mov
cmp
repz
mov
js
into
lret
pop
enter
inc
in
repnz
pop
scas
and
stos
push
rcrl
add
adc
insl
fbstp
push
setns
test
vmwrite
ficompl
xor
add
xor
dec
mov
lods
cmp
cld
in
push
into
sub
xchg
add
in
xchg
xor
clc
aas
arpl
pop
shr
insl
movaps
notb
jg
sub
or
cmpsb
jo
sbbl
int3
stc
and
push
dec
xlat
in
sbb
sbb
push
pop
jno
and
clc
cwtl
lods
xor
adcb
nop
push
aaa
or
cmp
iret
dec
inc
leave
jmp
mov
lcall
int3
imul
lret
jb
sbb
ret
mov
pop
mov
mov
aaa
scas
lods
imul
fsubs
test
rcrl
jge
shlb
cltd
mov
sub
fstpl
icebp
ret
inc
jle
fxtract
aam
jp
add
mov
pop
mov
test
sbbl
push
lds
add
mov
pop
fs
xchg
push
dec
xchg
ss
sbb
or
in
roll
dec
lock
je
rcrl
push
int
subb
or
xchg
jge
and
addr16
movsl
lods
ss
subl
xor
hlt
iret
lods
xchg
and
adc
fdivl
fst
mov
jns
lret
std
sbb
cmp
xchg
lahf
leave
imul
add
dec
lods
push
or
push
adc
jge
fimull
and
xchg
bnd
pusha
daa
lea
cmpsb
dec
aam
pop
leave
pusha
inc
jb
enter
xor
mov
dec
je
adc
pop
jl
push
or
adc
mov
mov
jle
fistl
ret
add
fimuls
addl
fists
xor
test
imul
mov
xchg
roll
shlb
add
out
std
push
xchg
int
inc
jne
pop
ljmp
cld
stc
lods
cmpb
mov
ret
out
pusha
insb
sbb
dec
inc
aad
sbb
fnsave
push
xor
pop
jno
ffreep
movsl
mov
adc
divl
inc
cmp
ljmp
mov
xchg
adc
into
jo
push
xchg
dec
mov
je
stos
cltd
sahf
mov
mov
rorl
mov
add
and
adcb
imul
xor
push
add
sbbl
repz
push
sbb
lcall
fsubrs
aas
xchg
imul
mov
aaa
add
in
rorb
and
and
arpl
inc
and
mov
ret
inc
mov
int
ljmp
subb
into
inc
mov
add
push
dec
repz
xor
mov
push
fbld
inc
pop
cmpsb
dec
sti
hlt
ljmp
cs
inc
adc
cmp
xchg
xchg
mov
cmp
movsb
mov
or
clc
jecxz
mov
icebp
popf
stos
les
inc
lods
setp
mov
mov
pop
push
fidivrl
pop
cltd
push
cmp
test
dec
fdivrs
pop
in
push
mov
dec
mov
cmp
dec
jns
xor
push
pop
unpckhps
mov
push
outsl
mov
imul
sbb
addr16
mov
aaa
pop
dec
out
gs
icebp
je
xchg
mov
mov
loop
push
jl
lods
push
sbb
fadd
mov
mov
lds
jge
lods
mov
stos
out
sar
lcall
push
jnp
fcmovnu
add
imul
jb
sahf
adc
and
lcall
arpl
mov
mov
arpl
or
pop
arpl
mov
mov
outsb
ret
jne
sub
dec
les
bound
mov
push
in
mov
das
movsl
dec
mov
push
xor
lret
lahf
mov
sub
xchg
shrl
xchg
loope
mov
cld
mov
jno
xor
dec
pop
xor
pusha
sbb
mov
xor
or
pop
ja
test
out
jne
add
jb
xor
inc
cli
loopne
sub
lock
mov
sbb
mov
lods
test
out
sahf
das
sbb
loope
inc
add
xchg
add
inc
mov
mov
pop
mov
sbb
push
ljmp
sub
insb
out
int
imul
or
push
mov
fistpll
mull
sbbb
loope
sbb
dec
jo
xchg
lcall
decl
xlat
mov
jp
notb
lock
test
adc
orb
push
sahf
push
mov
insl
mov
icebp
sbb
fistps
sub
rolb
cmp
aaa
inc
mov
pop
mov
pop
push
pop
xchg
stc
leave
lods
jp
das
mov
cmp
or
pop
xchg
ljmp
movsl
ret
and
test
and
push
lcall
js
mov
adc
mov
mov
cwtl
mov
push
clc
into
sarb
sub
adc
push
addr16
mov
push
lret
sub
movsb
dec
pop
sub
dec
cmpsb
push
rorl
out
lret
repz
cmp
repnz
dec
movsb
xchg
stos
movb
cmpsl
data16
push
and
xchg
or
ret
iret
sub
dec
mov
cmp
adc
adc
push
cmpsb
xchg
jmp
xor
std
sbb
mov
popf
and
add
push
pushf
jmp
inc
jl
ret
in
fisubs
xchg
sbb
xchg
xor
or
xor
mov
aad
mov
or
nop
jmp
push
pop
sbb
sbb
inc
mov
pop
mov
cwtl
subb
lcall
sbb
imul
push
movsb
fsubl
dec
mov
inc
push
je
fidivrl
jb
pushf
sbb
enter
and
scas
mov
push
adc
push
std
bound
pusha
mov
pop
popa
mov
out
add
ficoml
sarb
xor
jae
mov
mov
sbb
jp
sahf
in
loop
insl
ljmp
jb
push
in
adc
lret
dec
imulb
fucomi
fwait
adc
leave
cmp
mov
fs
ljmp
or
cmp
sbb
hlt
jne
rcrl
adc
add
lods
rorb
xchg
out
jl
sub
cmp
push
push
sti
fsubrs
xlat
xchg
imul
fisubrs
sti
sbb
rcr
mov
add
mov
mov
cltd
fldl
jecxz
push
loopne
ds
xor
lcall
stc
jl
push
sub
movl
mov
shll
int
negl
adcl
jecxz
int3
mov
lcall
mov
adc
aam
sbb
das
dec
dec
push
lea
xor
mov
cwtl
or
push
and
inc
mov
lock
insl
shrb
pop
lods
stos
cmp
add
xchg
sbb
enter
and
add
jno
mov
mov
cmpsl
sbb
call
xor
lret
dec
and
arpl
xor
lret
rorb
mov
ss
jge
mov
xor
je
lea
sti
add
cmc
repnz
cmp
mov
das
popf
xchg
push
mov
aaa
jo
orb
xchg
clc
add
in
int3
in
popf
dec
inc
dec
inc
pop
sbb
xor
insb
jno
ret
pop
dec
cmp
testl
mov
mov
outsl
push
cmp
shrl
inc
xor
cmc
and
xlat
xchg
hlt
sub
loope
rcrb
jl
roll
mov
xorl
pop
into
aaa
js,pt
cmp
shrb
fdiv
dec
push
mov
jbe
adc
ljmp
mov
and
ficompl
sarb
xor
lret
out
jl
aaa
pop
cltd
and
xor
and
aas
cmp
aam
mov
cmp
push
ss
leave
and
push
inc
testb
jo
lods
adcb
inc
in
cmp
jno
sub
xchg
and
dec
pushl
or
push
xor
mov
popf
cmc
mov
insb
cwtl
fstpl
pop
push
xor
mov
mov
mov
mov
push
mov
dec
lret
dec
push
fmuls
and
jnp,pt
movsl
mov
jge
es
dec
testl
insb
jbe
std
mov
hlt
das
js
lret
push
das
push
aam
mov
mov
and
sbbb
xlat
mov
rcrl
sbb
jmp
incl
xor
pop
adc
jbe
xchg
mov
addr16
xchg
cmpsl
add
iret
cmp
movsb
ja
sub
xchg
jb
mov
pop
repz
movsb
notl
xor
cmc
mov
stc
fsub
mov
jmp
sub
fwait
pop
pop
sub
scas
inc
jge
ds
dec
scas
cmpsb
in
jbe
or
call
call
sub
jns
add
mov
mov
push
add
jmp
mov
lcall
gs
pop
jne
pop
jp
dec
xchg
mov
push
jle
xor
in
in
out
and
lcall
dec
test
rorl
fdivrp
add
jge
hlt
mov
inc
inc
xchg
in
xor
push
push
lock
imul
jp
adc
repz
lret
int3
jae
sub
in
mov
inc
cmp
xchg
xor
push
pop
add
int
xlat
mov
nop
pcmpeqb
adc
aas
sti
add
mov
insb
jae
sub
jmp
ret
lds
sbb
and
fdivrl
shll
mov
orb
les
loopne,pn
fidivl
fwait
outsb
jp
jl
jns
ret
pop
inc
fistl
push
pop
pop
fiadds
push
scas
std
push
test
fsubs
fnstenv
scas
dec
inc
mov
xchg
call
sub
sub
divl
sub
fidivrs
pushf
xor
xchg
or
pop
add
faddp
fstpl
stos
pop
fdivr
sbb
mov
lock
lock
adc
jne
or
les
pop
ret
filds
pusha
sub
cmc
inc
out
xor
imul
sbb
or
sar
add
popa
icebp
insb
pop
lret
out
xor
jb
in
jnp
data16
pop
mov
hlt
loop
jns
jns
mov
fnsave
scas
sti
sbb
sub
cmp
sbb
or
faddl
outsl
or
stos
jl
sti
shr
int3
jp
loope
fs
ja
clc
out
insl
push
inc
out
sub
mov
out
popf
mov
and
stc
ja
sbb
mov
push
push
and
sbb
fsubl
jnp
mov
mov
lret
rcll
and
lea
repz
dec
add
test
test
mov
dec
add
add
and
lret
or
fiaddl
bound
jae
cli
add
push
daa
push
pushf
push
xor
pusha
mov
test
pop
cmp
add
mov
mov
iret
into
outsb
xor
cmc
xchg
or
addr16
push
fmull
add
stos
cmp
dec
icebp
aam
xor
xor
enter
and
inc
mov
or
faddp
enter
fcmovb
dec
lret
push
fdivrs
jge
insl
jbe
push
popa
out
jmp
lea
jmp
out
pop
xchg
insb
xor
shll
popa
sub
push
fwait
test
shrb
aam
popa
adc
mov
loope
sub
cld
inc
sub
inc
jns
lods
sbb
loop
xchg
ss
fldt
xor
adc
out
xor
sub
pop
ja
stc
dec
out
mov
cmc
inc
sbb
addl
sti
xorb
lds
and
mov
cmc
xor
movsb
loop
mov
cwtl
leave
ss
bound
fisttpll
sahf
xchg
jecxz
aam
es
call
les
xchg
test
scas
cld
cltd
cld
movsb
in
inc
sbb
je
jnp
leave
in
out
rorb
es
scas
fcoml
xor
mov
in
leave
sub
dec
sub
inc
shlb
je
test
pop
movsl
mov
adc
xchg
add
push
inc
push
jnp
ja
test
das
xor
xchg
cwtl
iret
dec
scas
cld
loopne
std
add
and
fcmovne
out
in
cmpb
enter
repnz
pop
pop
repz
push
daa
stc
adc
cmpl
ja
mov
push
outsl
mov
loop
dec
or
mov
mov
fsubp
ss
mov
dec
clc
and
int3
xchg
inc
out
sbb
cltd
mov
dec
mov
inc
xor
mov
add
and
lahf
inc
cmp
out
lret
and
repnz
lods
int
mov
dec
pop
les
sub
aaa
lret
xchg
sbb
mov
dec
push
adc
out
fcmovb
sahf
scas
mov
add
out
sbb
shll
fcompl
scas
mov
cmp
cld
sarl
hlt
ja
test
push
adc
jge
xchg
arpl
ja
dec
cltd
scas
sti
enter
lret
inc
stos
inc
add
ja
xor
int
cs
mov
mov
pop
test
dec
inc
adcl
aaa
inc
push
inc
xlat
pushf
xor
push
in
add
pop
xchg
and
lds
out
mov
loopne
shlb
push
fimuls
ljmp
mov
test
dec
sub
xchg
mov
or
push
adc
jp
push
fldt
ljmp
call
shlb
and
int3
pop
pop
sbb
or
jmp
fs
cli
mov
inc
inc
jno
xchg
adc
nop
sub
inc
sub
in
cld
xor
test
cmc
shrl
in
pusha
repz
add
and
cwtl
xchg
out
popf
leave
jl
jl
mov
push
push
scas
ja
adc
jo
out
jg
and
ss
mov
xchg
cwtl
and
mov
sahf
int
daa
int
outsb
insl
add
dec
mov
movsb
iret
cmpsb
ret
movsb
pop
mov
cmc
cmp
das
stos
jnp
pop
push
cmpsl
popf
and
sbb
push
lock
ret
or
mov
cmpsb
pusha
dec
outsl
and
shlb
lret
xchg
fwait
jnp
jecxz
sub
into
adc
lret
sbb
js
mov
in
orl
cs
dec
jl
hlt
clc
pop
or
cli
int3
push
pop
add
aaa
out
xchg
out
fisttps
xlat
and
in
xchg
std
cmpb
loop
xchg
push
rclb
dec
adc
repz
test
mov
lds
test
shl
test
pop
cmp
scas
xchg
and
dec
pusha
sbb
push
pop
xchg
mov
xlat
ret
xchg
repnz
aad
sbb
lret
fcmovnbe
fyl2xp1
mov
jp
xlat
inc
mov
ljmp
psubq
adc
mov
dec
bound
cld
std
sar
and
ljmp
sti
loop
iret
jecxz
iret
xor
out
inc
call
frstor
xchg
outsb
int3
jl
or
in
pop
mov
gs
in
jnp
clc
jno
pop
sti
mov
imul
out
mov
mov
scas
out
addr16
ficoms
or
imull
mov
sbb
sbb
notl
and
fnstcw
pop
fnsave
clc
xor
mov
pop
pop
pop
mov
add
imul
add
sub
out
ss
sbb
mov
push
fs
loope
inc
dec
mov
icebp
adc
mov
lahf
jbe
mov
imul
xchg
jmp
ficompl
or
pop
popf
dec
or
orb
js
adc
xor
call
or
or
cmp
inc
ss
lahf
scas
or
sbb
sbb
stos
jae
jae
out
fs
pop
jbe
inc
cld
sub
daa
insl
xchg
daa
aaa
les
sub
ss
test
addr16
and
test
and
fmuls
loope
push
and
add
mov
rcr
sub
addr16
mov
dec
mov
pop
sbb
xlat
cmc
sub
fwait
das
jnp
push
rcrb
stos
or
lods
dec
push
dec
arpl
insl
jnp
push
popf
xchg
sbb
xorl
jns
sbb
push
addb
cltd
test
dec
mov
inc
imul
aas
push
xor
pop
test
sub
xor
bound
dec
mov
cmpsl
pop
aas
repnz
inc
mov
popf
scas
int3
pop
lock
xchg
and
mov
repz
ss
pop
pop
mov
fmuls
and
and
or
adc
jmp
int3
cmp
fstps
out
sahf
jmp
inc
lcall
clc
adc
cltd
push
rclb
add
rclb
sbb
cmp
inc
mov
testl
iret
push
inc
imul
movsb
xchg
mov
push
pusha
mov
xlat
roll
adc
cmp
shr
cmp
aas
mov
pop
jg
int
jmp
jl
cmp
mov
fistps
in
cld
mov
int
ret
dec
fsts
cmc
shl
scas
cwtl
add
loope
or
jmp
add
lods
xchg
pop
popf
adc
mov
push
popf
sub
daa
imul
icebp
ss
lcall
leave
loopne
test
xor
cmp
adc
xor
pop
adc
ret
jo
jo
pop
push
stc
dec
shlb
fwait
push
in
adc
aam
lods
aad
lret
sbb
adc
rcrb
add
call
fwait
xor
inc
and
movsl
scas
push
mov
mov
mov
lock
jne
std
mov
jb
rcll
mov
hlt
mov
or
scas
mov
push
cmp
cmpsl
add
xchg
or
jecxz
hlt
and
push
xor
sbb
stc
or
fsubl
pop
xor
xor
pop
sbb
jle
bound
xchg
imul
lods
mov
mov
je
xchg
adc
nop
jb
push
mov
sub
dec
push
or
out
and
push
fnstcw
loop
imul
inc
popf
jmp
lods
jge
outsl
lahf
outsb
clc
outsb
aaa
and
out
int3
and
adc
clc
jb
dec
sbb
fs
push
pop
movb
mov
movsbl
enter
xor
movl
rorb
hlt
int
push
push
js
in
test
lret
fs
pusha
pop
stos
mov
sarl
inc
or
jb
xor
daa
aaa
dec
jae
pop
nop
mov
gs
push
adcb
mov
pop
ja
pop
xchg
mov
lahf
dec
mov
in
cwtl
mov
mov
xchg
lds
sbb
pop
jge
sub
imull
sbbb
mov
out
sbb
xchg
cmpsb
aas
xchg
cltd
cwtl
cwtl
mov
test
dec
loop
out
lock
xchg
ja
inc
clc
nop
outsb
cld
repnz
lods
loop
lea
clc
sahf
js
aas
sbb
or
fs
dec
addr16
ja
popa
or
mov
push
loopne
cmp
mov
dec
push
mov
outsl
mov
imul
sub
mov
and
mov
jg
repz
inc
pushf
rcrb
test
mov
cmp
scas
test
movsb
bound
mov
jmp
fstp
mov
dec
or
cwtl
jp
hlt
sbb
lods
push
es
mov
in
add
mov
mov
add
or
inc
sub
and
mov
mov
imul
adc
out
mov
sub
pop
push
dec
lret
test
repz
mov
idivb
and
pushf
xchg
fcmovnbe
cmpsb
lcall
movsb
sti
jno
imul
arpl
sbb
xchg
push
xchg
aaa
cmpsl
mov
movsl
xchg
pop
fs
cmp
fiaddl
test
mov
mov
add
inc
enter
out
xchg
sbb
cvtpi2ps
fdivr
ss
lcall
lcall
lods
test
or
scas
stos
sub
int
inc
inc
pop
mov
pop
cmpsl
cmpsl
movsb
sub
jge
rclb
fwait
mov
loope
push
loop
adc
repz
enter
into
pop
stc
bswap
dec
insl
push
orb
int
sbb
ja
pop
mov
fnstsw
dec
inc
addl
lea
pop
fldt
jmp
mov
sbb
cmc
jmp
jbe
and
and
mov
dec
fisttpll
lahf
fcmovb
xor
cmp
push
jo
lret
mov
cltd
shr
ja
das
jmp
xchg
and
mov
insl
mov
cmp
dec
pop
into
das
sub
in
mov
pop
mov
pop
fs
push
pushf
xor
mov
sahf
mov
in
xchg
sti
mov
fwait
ret
mov
out
cmp
mov
push
jl
lods
xlat
in
push
imul
add
int3
mov
mov
adc
addl
in
xor
sbb
enter
adc
adc
out
mov
and
inc
cmpsl
out
push
push
jnp
sahf
lret
xchg
push
mov
sbb
enter
rorl
pop
inc
shrb
xchg
repnz
es
jmp
adc
addb
fsts
sahf
xor
out
iret
xchg
pusha
icebp
test
jge
mov
call
loope
cmc
inc
repz
lds
outsb
fwait
xchg
test
mov
lods
fiadds
sahf
iret
stos
ss
pop
mov
xor
daa
xor
dec
and
ljmp
push
xlat
cmp
mov
cwtl
pop
fildll
cmc
adc
insb
lock
stos
icebp
into
mov
hlt
mov
aad
mov
or
xchg
test
sub
ret
push
fmulp
mov
loopne
and
in
mov
sbb
int
sti
cld
fsubrs
inc
int
outsl
pushl
push
mov
aam
jnp
cmpsb
xchg
add
dec
vmovsldup
std
jb
inc
xorl
sahf
int3
or
mov
adc
push
sub
cmp
mov
fistps
mov
add
inc
jmp
xor
mov
pop
incb
icebp
icebp
adc
and
sub
lods
push
mov
ret
aam
add
outsl
push
push
jnp
and
movsl
cmp
leave
push
sub
and
jecxz
lods
dec
iret
mov
or
add
xlat
test
add
fisubs
sub
daa
xor
mov
dec
fstpt
loopne
dec
sbb
mov
xor
jae
sub
dec
push
loope
adc
in
andb
adcl
sarb
inc
or
out
xchg
sub
or
dec
scas
xchg
loopne
cltd
xchg
xor
mov
mov
push
sti
pop
movsb
gs
lcall
iret
dec
push
scas
jno
sbb
push
mov
push
dec
mov
pop
mov
sub
add
mov
repz
scas
data16
clc
ret
xchg
mov
cmp
pusha
cmpsl
jnp,pt
push
xlat
or
pop
in
jp
into
cmp
repz
push
xor
repnz
cmp
pop
addb
add
and
sub
outsl
lcall
and
bound
stos
mov
and
dec
mov
mov
cwtl
or
cmove
movsb
lcall
stc
rcr
les
jg
mov
sbb
lods
into
sbb
insb
jge
aad
sbb
pop
xchg
mov
lret
in
jl
mov
xchg
out
dec
fidivrs
xchg
les
pop
ss
xchg
pop
xor
mov
aam
rorb
cmpsb
mov
inc
mov
leave
and
div
int
popf
xchg
pop
les
filds
cmpsl
sarl
mov
pop
lea
and
lret
out
jecxz
sarl
mov
dec
or
addr16
sbb
movsb
push
lcall
inc
jl
sbb
jb
sbb
dec
mov
jb
sti
dec
cmpsb
pause
or
subl
hlt
pop
outsl
lcall
push
repz
jp
sbb
inc
cmp
sub
jo
dec
fisttpl
mov
inc
aam
pusha
mov
sub
fwait
andl
insb
orb
and
fwait
outsl
sub
aam
or
lea
gs
ja
inc
sub
push
push
int
jmp
dec
mov
shll
xor
and
push
js
and
test
mov
insl
loope
xlat
pop
push
hlt
xor
jbe
ret
sbb
pop
pop
ss
mov
pop
addl
xor
push
hlt
loopne
leave
push
push
cs
sahf
mov
jo
pop
and
cmp
ss
or
xchg
pop
xor
pushf
sub
inc
mov
mov
adc
jbe
inc
arpl
inc
mov
jno
jp
xchg
imul
xchg
jmp
subb
inc
or
clc
xor
xchg
adc
mov
add
or
and
inc
add
aas
hlt
dec
mov
jo
add
jbe
fiaddl
dec
pop
outsl
mov
sbb
pop
das
int
jmp
andb
mov
shr
mov
pop
push
or
and
icebp
jno
fdiv
add
icebp
sbb
cld
sbb
xchg
shl
fstpl
mov
cmp
iret
sbb
push
mov
push
sbb
push
xchg
cmpsl
cmp
into
test
adc
fdivr
dec
or
into
lret
mov
or
repz
xchg
jl
cs
pop
jno
fcmove
adc
push
jnp
dec
mov
adc
aas
movsl
fwait
mov
or
add
ret
aaa
popf
mov
mov
push
cmpsb
cmp
jno
std
sbb
inc
mov
mov
imull
cmp
inc
and
daa
and
test
mov
outsl
adc
xor
cli
xor
or
push
add
xchg
mov
pushf
or
pusha
fucomip
shrl
fisubrs
sub
fistpl
mov
mov
mov
adc
jo
ljmp
in
xor
loope
data16
jb
cmpsl
mov
jmp
iret
std
push
nop
push
xchg
xchg
ret
ljmp
rcr
cmp
sbb
and
or
cmp
daa
inc
shlb
or
mov
les
in
xchg
add
dec
sahf
lea
xlat
lea
ds
lods
test
pop
xor
dec
push
pop
dec
bnd
insl
xchg
adc
orl
pop
mov
scas
xchg
pushf
add
add
in
lods
mov
adc
adc
lods
sbb
fcompl
rcr
mov
xlat
insb
lods
test
ja
adc
fldl
fmulp
mov
dec
xor
sbb
xor
dec
int
adc
xchg
adc
stc
push
roll
mov
shlb
jb
or
mov
dec
inc
and
sbb
sbb
mov
mov
aam
dec
lods
movsb
outsb
cmp
fnstcw
add
xchg
lds
je
data16
sub
mov
test
xor
test
lods
mov
nop
jo
enter
stc
xchg
cmpsl
and
xor
xchg
xor
ljmp
jge
xchg
mov
pop
push
fs
movb
roll
test
sahf
mov
call
dec
add
sub
mov
rcrl
xchg
fisubs
aaa
add
sub
hlt
jg
adc
mov
in
inc
pop
or
xor
push
loop
arpl
or
adc
mov
mov
push
ss
leave
cli
mov
pop
gs
cmpsl
or
fistpl
fimuls
jp
stos
call
lods
int3
addl
or
cmp
and
mov
shrl
call
xor
mov
leave
sub
push
mov
or
push
test
popl
dec
int3
pop
xchg
mov
xchg
sbb
push
in
or
iret
and
mov
jns
sub
ret
int
push
xchg
adc
pop
idivl
stos
lods
arpl
xchg
dec
cld
dec
stos
push
daa
neg
out
arpl
imul
xchg
lds
scas
cltd
test
dec
jns
add
xchg
neg
lret
inc
mov
jne
lret
lret
push
push
push
sub
xchg
test
or
sbb
mov
in
mov
dec
iret
cmp
loope
enter
xlat
xor
ret
push
mov
push
dec
rolb
and
je
add
fwait
pop
pop
cmp
ja
sarl
orb
or
mov
pushf
push
imul
xlat
inc
decb
mov
fldcw
jo
ret
fisubrl
mov
sarl
sbb
lahf
and
jnp
lret
mov
pusha
push
sahf
les
lock
insb
mov
mov
pop
ljmp
mov
inc
cmc
push
mov
roll
pop
mov
dec
nop
jmp
or
xlat
pusha
shll
mov
js
fistpl
xchg
ret
mov
lret
shlb
mov
xor
ss
lahf
mov
cwtl
and
mov
mov
jne
or
dec
mov
sti
rcrl
fbstp
xchg
jns
xlat
jne
and
sbb
cmp
lret
sbb
xchg
pushf
mov
xor
fcmovnbe
xchg
pop
adc
sti
lea
adc
pop
stc
pop
test
add
in
stos
fs
push
xchg
lahf
cltd
cwtl
cmp
pushf
xchg
mov
fcmove
sub
xchg
push
sub
sbb
xor
outsb
flds
inc
push
into
popa
pop
inc
cmp
cs
jb,pn
push
rol
rolb
test
ja
adc
dec
fs
fs
icebp
pusha
adc
mov
aad
mov
popf
cltd
lret
rorl
or
sbb
shll
mov
lods
mov
jl
cli
jge
or
popf
mov
xchg
clc
sbb
data16
daa
stos
arpl
jl
in
cmpsb
sbb
mov
inc
rol
mov
xchg
out
xor
mov
or
notl
mov
jo
daa
mov
insl
mov
jge
xchg
out
cmp
sbb
rdtsc
repz
inc
fs
loopne
subb
mov
push
mov
xchg
fdivs
fistl
pop
inc
push
test
js
subl
int3
push
bsf
pushf
push
mov
mov
adc
loop
cmp
inc
scas
mov
outsl
int
sti
and
popa
jbe
xchg
test
decl
lret
mov
adc
aas
es
in
cmp
ds
mov
pusha
or
jb
in
lcall
ret
mov
divb
lret
jg
test
adc
loope
jne
or
test
cltd
and
adc
cmpsl
rorb
cmp
mov
fnsave
cmp
into
leave
ss
negl
mov
lea
cmp
adc
xchg
dec
adc
daa
cmp
sub
xor
daa
ja
sub
xchg
int3
mov
or
mov
or
lods
cwtl
cld
jmp
lahf
cmp
xchg
jae
xchg
pop
js
test
stos
xor
lahf
fwait
scas
dec
mov
cwtl
cld
repnz
jge
in
pop
out
add
push
sub
and
sahf
ss
mov
aam
lock
js
loope
cmpb
rcl
test
insb
fs
adc
cmp
out
jl
repnz
out
shl
sarl
mov
xchg
lret
xchg
push
xchg
jl
outsl
pushl
lret
cmpsb
sub
jmp
je
hlt
pop
inc
mov
mov
push
mov
xorl
xchg
mov
xor
xchg
int
scas
imul
ja
mov
add
lret
aaa
sahf
push
frstor
ljmp
cmp
icebp
inc
push
fs
jg
mov
pop
jns,pt
mov
jb
xor
and
push
mov
push
push
das
sub
mov
add
mov
popf
addr16
xchg
in
add
lcall
jns
sub
add
cld
lds
mov
cwtl
mov
in
insl
adc
sbb
loope
lds
in
ret
sub
mov
ljmp
mov
sub
sub
clc
push
adc
fstpl
dec
fneni(8087
clc
mov
stc
stc
sub
dec
xor
cwtl
cmp
xor
pop
add
imul
mov
mov
inc
call
ficoml
mov
inc
sub
jg
cmp
mov
inc
sub
pop
mov
ljmp
pop
movsb
push
mov
fildl
stos
xchg
cmp
cmp
movsb
out
aas
mov
and
lahf
fistps
mov
add
pop
je
pop
push
outsb
inc
xor
add
jmp
push
push
ss
jle
popa
lds
dec
pushf
add
or
and
lea
scas
loope
loope
mov
stc
push
push
adc
jo
outsb
test
dec
xor
push
or
dec
int
xchg
jns
and
jmp
mov
jg
xchg
mov
fisttpl
mov
insb
cwtl
push
lret
push
jbe
cmp
mov
mov
data16
addb
test
xchg
pop
addl
lods
arpl
aam
stos
hlt
movsb
imul
xchg
cmpsl
aaa
fldl
lods
or
loope
dec
adc
cmp
jne
xor
stc
stos
hlt
xchg
cmp
divl
in
loop
lahf
mov
popf
push
mov
addl
add
dec
loop
dec
mov
and
xlat
ljmp
jno
repz
inc
lahf
xchg
cld
loope
filds
loope
jmp
movsb
push
mov
out
xchg
dec
push
push
pop
in
sub
pop
push
iret
loopne
and
scas
fdivs
rol
fstl
sbb
mov
out
xchg
std
xchg
cmp
and
inc
sti
push
add
out
add
lock
mov
repz
aam
rcrl
les
fdivl
pop
and
out
imul
iret
cmp
cmp
aas
test
test
sub
sbb
scas
arpl
pop
repz
jg
push
sbb
mov
dec
adc
mov
je
sub
sbb
jne
test
xchg
ja
arpl
iret
xchg
sub
mov
test
lods
scas
test
push
rolb
xchg
cmp
in
mov
arpl
or
mov
add
jmp
add
mov
insl
xorb
inc
imul
push
or
cld
and
or
das
adc
sub
sbb
ds
insl
fsubr
xor
or
inc
sahf
movsb
xor
arpl
dec
mov
pushf
jl
movsb
xchg
add
imul
lds
icebp
inc
movsb
push
add
stc
sub
xor
mov
mov
aam
mov
pushf
jmp
fnstsw
mov
scas
and
and
int
test
push
mov
sub
mov
adc
pushf
xchg
popa
cmp
loop
fucomi
jo
int3
jge
out
dec
jns
divb
and
ds
movsb
icebp
and
enter
dec
xchg
xor
mov
icebp
gs
cmp
pop
cmc
lcall
sub
shrl
out
je
push
loop
mov
aas
dec
and
fwait
xor
test
repnz
jmp
outsl
rorl
push
fisubs
or
mov
iret
icebp
add
jmp
dec
insb
pop
enter
shr
cmp
lcall
pushl
enter
inc
pop
loopne
not
fmul
pop
adc
call
inc
pushf
xchg
cmp
xorl
xchg
xor
and
jo
cmc
add
push
pop
sub
loop
std
call
orb
jg
pushf
jge
mov
mov
xchg
xlat
push
mov
xchg
fcoms
test
cli
push
jmp
dec
xchg
sti
fsubp
mov
push
decl
imul
mov
lret
pop
popf
jo
inc
mov
push
sbb
ljmp
std
or
mov
cmpsb
in
cmc
push
add
pop
imul
cwtl
cwtl
inc
test
jle
and
add
inc
jb
and
mov
xchg
or
dec
dec
cmpsb
dec
outsb
and
pop
lea
or
cmp
jmp
lcall
xor
pop
pop
or
mov
nop
sbb
mov
fs
loopne
jne
arpl
pop
or
pop
decl
push
dec
inc
iret
mov
inc
scas
pop
into
imul
ss
jle
cs
pop
mov
repnz
leave
rcrl
adc
out
int3
and
xchg
jmp
insl
andl
mov
stc
fstenv
lock
pop
mov
rcll
and
add
jno
and
add
clc
out
ds
ds
dec
push
cmp
mov
jg
pop
pop
mov
cmp
cmp
sbb
fdivr
es
ror
test
std
xlat
gs
out
push
adc
xor
pusha
cmp
xor
fidivrl
loope
add
xor
notb
iret
xor
test
inc
aam
sbb
pop
push
aas
inc
dec
or
call
xchg
insb
mov
mov
inc
and
mov
mov
cmpsb
cltd
divl
adc
and
cmp
xor
xchg
jp
add
shr
fnstcw
jbe
lods
jmp
mov
lods
divb
sbb
orb
adc
mov
mov
adc
mov
xchg
idivb
lock
jg
lock
xor
dec
addl
cmpsl
add
xorl
cmp
popf
mov
mov
sbb
ds
add
sahf
jnp
int3
xor
mov
push
subb
push
cs
aas
or
adc
imull
icebp
pop
lds
xchg
sbb
xchg
das
and
imul
cmp
out
addl
out
jo
aad
jge
cli
sub
mov
inc
fcmovnb
dec
adc
nop
mov
in
jne
cli
cmp
test
in
pop
add
clc
push
rorl
xor
sbb
mov
pop
push
int
ljmp
push
nop
rcll
negl
aaa
stos
jge
ds
xchg
xchg
push
adc
sbb
stos
movsl
mov
mov
mov
cmc
lret
clc
das
daa
mov
mulb
jle
jmp
add
popa
pop
push
popf
add
xor
xchg
out
insb
jg
hlt
xor
push
ljmp
idivl
enter
xchg
sar
push
sub
pop
sub
sbb
ds
std
lds
loope
sbb
xchg
inc
ret
pop
adc
jle
data16
sbb
jnp
bound
adc
scas
push
mov
jle
sub
cmpsl
outsb
adc
mov
and
pop
push
into
jle
xchg
roll
insb
iret
add
loope
adc
call
hlt
aad
bound
bound
adc
mov
jge
cs
mov
adc
stc
mov
xchg
xchg
rorb
fstps
rclb
cs
mov
cmovne
stos
inc
sbb
sub
out
jbe
test
push
mov
sub
xor
cmpsl
push
push
sub
cmp
stos
sbbb
jb
inc
test
adc
hlt
sarb
jge
push
mov
xlat
cld
mov
push
sub
push
and
mov
dec
jno
jne
mov
out
pop
flds
imul
mov
adc
xor
add
out
jne
mov
cld
aaa
cmp
adc
push
into
xchg
sub
fsubrl
insb
jae
dec
fdecstp
xchg
inc
out
sub
jmp
add
shrl
stos
push
sbb
imulb
test
and
movsl
pop
sbb
cmc
mov
lea
cmp
and
push
add
lret
xchg
sti
mov
jno
dec
icebp
cmp
leave
js
push
cs
and
cmc
push
lock
and
or
push
outsb
add
fnstsw
adc
test
arpl
gs
xchg
mov
rorl
das
jbe
fwait
add
sub
arpl
xchg
add
sbb
lds
add
repnz
and
cmc
das
dec
push
sub
cwtl
js
xorl
and
xchg
lahf
and
dec
inc
jmp
imul
dec
sub
lret
and
sbb
pop
mov
scas
sub
std
add
and
push
shll
ds
or
mov
or
das
jo
arpl
pop
xchg
lcall
push
movsl
push
adc
jl
sub
scas
jle
orl
jl
imul
test
std
lret
and
icebp
xchg
adc
lret
out
jecxz
aas
jmp
jp
pop
cmp
aaa
shll
and
sbb
das
fisttps
sbb
iret
mov
fcmovne
mov
mov
push
int3
mov
jmp
lret
imul
add
sarb
cmc
push
mov
and
je
add
gs
jno
fsubs
mov
xchg
icebp
sahf
fiaddl
aam
aas
jbe
mov
ss
dec
cmp
add
mov
lds
and
inc
sbb
pop
and
and
fs
sti
dec
in
dec
xchg
lods
popf
inc
fisttpll
xchg
push
mov
xchg
outsl
int3
aaa
add
inc
dec
test
lcall
push
out
jo
sub
sbb
shrl
cmc
adc
push
push
mov
cmpsb
push
gs
push
add
das
add
push
mov
scas
jg
idivb
or
sub
jb
out
fdivs
cs
push
or
jge
test
sti
fucomp
out
shlb
mov
in
pop
push
sub
jae
imul
add
mov
inc
daa
jns
fsubl
mov
pushf
into
mov
scas
xchg
mov
jno
sbb
inc
lcall
cmp
sbb
loopne
cwtl
leave
arpl
cli
mov
jecxz
add
fidivl
scas
mov
insb
cld
mov
mov
stc
test
jne
xchg
flds
sub
movlps
fwait
scas
add
cmpb
pop
cmp
cmp
mov
push
adc
inc
fwait
and
imul
les
xor
lods
addr16
push
or
hlt
js
cs
rcrl
sahf
push
cmovs
nop
or
mov
or
inc
cltd
aas
notb
mov
imul
fnsave
inc
mov
inc
cmp
pop
mov
negb
adcb
xchg
mov
leave
or
jmp
xchg
enter
adc
xchg
pushf
cmp
inc
aam
or
ds
mov
inc
inc
sarl
add
ficompl
mov
xor
dec
mov
int
dec
sbb
add
lahf
inc
movsl
dec
add
imul
std
and
mov
hlt
scas
xor
sbb
rclb
lea
dec
pop
out
fs
xchg
stos
sar
xchg
mov
jnp
mov
jp
mov
test
dec
lahf
sub
scas
lahf
cmp
fistpl
ss
dec
mov
pop
sbb
shrb
sbb
loop
das
and
xlat
rolb
shrb
inc
bswap
loop
or
mov
dec
loopne
aam
enter
cmp
sbb
cmpb
lds
jns
out
sub
fs
jbe
add
int
loope
cmp
add
xchg
add
mov
mov
or
push
clc
pop
jecxz
dec
mov
ljmp
push
and
and
clc
xor
sub
shrb
mov
incb
notb
adc
insb
aam
dec
lds
sbb
ret
mov
or
repz
test
or
mov
xchg
movsb
jne
fists
test
shll
dec
inc
sub
jle
xchg
mov
test
mov
xor
fsts
insl
call
cltd
aad
mov
xor
outsb
cmp
cmpsl
aam
inc
xchg
shll
xchg
xchg
out
icebp
lret
inc
cmp
int3
cmp
push
jns
or
cwtl
out
dec
cmpl
jge
xor
call
sahf
mov
mov
cwtl
push
and
adcb
jb
cld
lcall
jp
push
std
das
fldenv
jl
xchg
negl
jecxz
sbb
lds
cmp
lret
mov
addr16
lock
aad
add
test
out
movb
inc
push
addr16
add
adc
pop
dec
pusha
pop
mov
push
xor
jne
mov
lock
mov
mov
shrb
push
and
mov
pusha
mov
or
popa
fcomps
cmp
loop
or
jb
pop
cld
xor
or
shlb
xor
sahf
lret
lods
mov
cmpsb
and
negb
fstl
mov
and
cmp
gs
push
dec
inc
mov
dec
sbb
icebp
repnz
and
add
sbb
ror
xor
cli
and
jle
or
fiadds
inc
xchg
and
int3
and
clc
mov
out
iret
push
jnp
ret
jnp
jnp
adc
gs
js
test
jb
out
ja
out
loop
xor
dec
scas
clc
addr16
push
shrl
lock
sbbl
les
arpl
push
movsb
push
cwtl
mov
jp
add
dec
mov
aam
stc
sub
ror
jo
mov
xor
fs
xchg
mov
fprem
inc
sbbb
insb
pop
shl
clc
add
mov
sbb
cmp
scas
inc
jb
inc
jecxz
lock
gs
out
aam
mov
addr16
cli
shr
push
jne
xor
popa
int
push
and
sub
inc
sub
push
sub
or
mov
movsb
xor
cmp
rclb
inc
imul
push
dec
sub
mov
movsb
mov
cmpsb
cmp
out
pop
pop
inc
out
sub
jb
dec
decb
int
mov
mov
push
mov
or
pop
pop
jo
and
xor
or
iret
aaa
xor
mov
and
pop
in
imul
dec
fdivl
stc
xchg
andb
insb
lods
fsubrs
push
ret
cld
stos
dec
mov
mov
adc
loope
cmp
fldenv
xchg
arpl
mov
sub
lret
outsb
rcl
cltd
scas
rorb
cmp
mov
aam
push
inc
pop
in
lods
lock
add
dec
push
dec
and
test
int3
jo
test
cltd
and
pop
std
and
jns
inc
cs
test
lahf
push
lods
mov
loope
sbb
lods
repnz
aam
pop
dec
dec
roll
repnz
mov
scas
mov
cmpsb
push
test
dec
stos
lret
clc
cltd
jge
popf
adc
lock
or
adc
fs
fmul
inc
xor
scas
dec
call
push
sbb
mov
rol
dec
lods
mov
stc
jbe
js
cmp
add
add
dec
inc
mov
push
push
daa
and
push
pop
enter
add
mov
jmp
mov
repz
xor
pop
fidivs
sti
xor
lret
or
sbb
cmpsl
test
daa
xorl
mov
mov
js
mov
imul
push
jo
icebp
loop
cmp
outsl
mov
clc
and
xor
xchg
push
out
add
or
stos
movntq
out
test
xor
test
dec
repnz
pop
lret
dec
pop
loope
hlt
mov
nop
xchg
pop
jmp
ds
imul
rolb
xor
repz
sbb
gs
adc
mov
aas
ss
mulb
xchg
gs
xor
xchg
cmp
mov
cmp
dec
andb
fs
negb
cmp
test
sarb
mov
sbb
fnstenv
leave
push
mov
push
fs
pusha
bound
data16
aad
sub
ret
lcall
push
aam
dec
xchg
mov
sub
mov
fadds
je
mov
cs
jg
xchg
cmp
sbb
mov
sub
and
inc
lock
mov
pop
jmp
cld
leave
dec
or
cmpl
mov
imul
push
cld
loopne
jmp
data16
cwtl
mov
sbb
mov
out
xor
cmpl
mov
lea
stos
and
mov
rclb
iret
fmuls
iret
insb
test
in
mov
out
sti
mov
sub
fsts
pop
pop
cmpsb
mov
addb
add
outsb
in
dec
loop
mov
std
push
xchg
out
hlt
jns
lahf
and
into
test
out
popf
ja
rcr
lock
scas
sub
cmp
cli
in
cmp
add
sbb
sub
jmp
rcll
mov
cmp
bound
sub
lret
ret
repnz
push
sbb
stos
xlat
xchg
aas
mov
mov
or
out
movsl
jp
incb
xchg
lcall
mov
arpl
inc
push
pop
pop
mov
push
dec
or
cmpsl
in
jl
fstp
dec
lods
fdivrl
enter
push
lea
push
loope,pt
mov
icebp
sub
in
icebp
nop
lock
dec
aaa
out
xchg
mov
lahf
scas
jecxz
not
movsl
ret
push
mov
mov
xorb
mov
xor
clc
dec
daa
aas
mov
dec
cs
add
scas
sub
cld
add
call
test
dec
loop
jmp
and
mov
dec
test
arpl
iret
push
leave
arpl
cmp
inc
sbb
jl
mov
dec
jmp
dec
mov
mov
in
lret
fistpl
aam
mov
sti
dec
std
mov
nop
das
dec
insb
subb
in
addr16
incb
lret
xor
sbb
mov
xchg
scas
mov
addr16
or
xchg
mov
leave
iret
mov
pop
jno
fiaddl
xchg
mov
mov
sbb
cmpsl
mov
imul
add
mov
popf
jp
jno
mov
test
test
mov
jbe
les
and
rorl
inc
jae
sub
insl
inc
cmpsb
xor
call
inc
mov
jno
add
add
push
and
scas
mov
int3
adc
aam
inc
test
popa
cwtl
mov
lcall
sbb
addr16
add
or
jbe
stos
jl
bsf
jmp
pop
addr16
mov
lahf
cmp
jmp
jo
fwait
push
lods
in
xor
jecxz
testb
cmpsb
xchg
xchg
cmpsb
repnz
and
jae
stos
push
in
aaa
inc
and
add
and
mov
cmp
push
mov
sub
inc
jbe
divl
adc
xor
adc
lea
adc
lods
lds
or
mov
sbb
and
cmp
hlt
je
clc
inc
cwtl
sbbl
pop
xchg
cwtl
xchg
push
jmp
ss
imul
xchg
imul
dec
dec
sub
jne
imul
xor
leave
imul
jne
and
fisttpll
ds
int3
inc
mov
data16
jge
leave
xor
xchg
dec
inc
fdivl
lahf
inc
cmpsl
lock
and
and
das
xchg
fcomps
jne
jae
inc
adc
pop
and
shll
xchg
cmp
testb
clc
fidivs
pop
adc
scas
push
jbe
test
add
movsb
sarl
jae
adc
pop
idivl
daa
lods
shlb
sahf
adc
dec
mov
fs
push
mov
cwtl
push
pop
je
sbb
fmuls
pop
lahf
cmp
or
scas
aaa
out
push
push
push
inc
cmp
xchg
pusha
dec
push
sub
mov
aaa
cli
cwtl
push
lock
outsl
jg
adc
test
cmpsb
repz
dec
xlat
out
mov
xchg
jp
mov
pop
clc
andb
mov
subb
lock
pop
mov
fwait
aas
pushw
enter
dec
and
cltd
invd
test
imul
les
repz
pushf
pop
ljmp
or
push
into
scas
sbb
mov
push
push
sub
lret
mov
add
fmull
and
out
mov
sarb
popa
and
pop
mov
out
jecxz
lods
sbb
data16
cmp
out
push
mov
aad
xchg
into
adcl
in
pusha
insb
and
outsb
inc
mov
test
je
and
jp
push
jle
out
daa
and
mov
cmp
jne
js
pop
movsb
jl
pushf
mov
mov
sub
mov
pop
jecxz
outsb
cltd
or
xor
jns
cmpb
stos
sub
loopne
ljmp
adc
out
lds
pop
inc
je
das
lcall
enter
push
adc
ss
inc
and
stos
shrb
ret
push
xchg
aam
dec
cmp
or
lds
pop
insl
push
jp
out
mov
lods
rcrb
xchg
lds
xor
adc
fwait
aam
outsl
mov
aam
add
icebp
fistpll
and
arpl
insl
imul
pop
adc
ja
in
push
clc
shl
push
pop
fdivrs
je
stos
and
xchg
mov
adc
lret
adc
mov
aaa
decb
and
imul
gs
adc
jo
mov
lock
or
into
shlb
arpl
jmp
xchg
xor
ds
pop
imul
mov
sbb
ds
xchg
adc
ret
jge
sub
ljmp
push
js
es
into
lods
sbb
insl
insb
notl
jmp
mov
push
fcoml
sub
dec
cwtl
pusha
aam
add
daa
test
iret
cmpsl
xchg
outsb
pop
sbb
mov
push
movd
aad
addb
cmp
cmp
insl
lret
xor
xchg
jge
std
jb
jge
dec
repz
mov
cmpb
push
in
mov
xchg
sbb
outsl
cmp
add
rcrl
jp
or
pop
mov
jb
aas
mov
fstpl
loop
ret
or
sub
jecxz
icebp
lods
push
jne
cld
or
add
add
pop
cli
mov
int3
cmp
in
sbb
ret
xor
sbb
adc
imulb
loope
movsl
test
ficoml
adc
sub
pop
lret
into
and
lock
nop
into
or
xor
cmp
subl
mov
cmp
push
les
cmp
jp
insl
jb
xor
aas
loop
push
xor
sbb
cmc
jne
in
flds
dec
xchg
mov
xchg
ret
push
popf
xor
ds
lret
lds
fists
add
ja
cmp
lahf
insl
xchg
pop
mov
add
pop
fiaddl
dec
sub
cmpsl
jns
xchg
mov
pop
mov
lcall
cmovg
movsl
in
test
es
push
icebp
lahf
fldenv
pop
mov
aad
in
mov
cmpb
cmp
push
fistpll
dec
ja
jo
or
out
dec
jl
or
out
sti
inc
scas
push
pop
cmc
aaa
fdivrl
and
xlat
shlb
ss
sub
pushf
popa
in
mov
xor
sub
enter
dec
jg
mov
xlat
dec
les
push
shl
outsb
add
mov
mov
xlat
inc
dec
xchg
pop
xor
ljmp
mov
lods
repnz
out
jae
dec
pop
inc
mov
data16
das
push
mov
repz
dec
xor
testl
jb
jo
inc
testl
mov
sbb
sub
jg
xchg
clc
jns
xchg
cli
jp
mov
pop
or
ljmp
lret
mov
in
push
int3
push
push
les
cmp
pop
jl
jbe
jge
inc
mov
xor
int
sbb
jg
jg
mov
fiaddl
dec
aas
lods
mov
push
out
stc
pop
cli
fstpl
mov
in
and
push
popf
cld
je
dec
adc
ss
sub
mov
cmp
stos
mov
jmp
lret
andb
or
not
dec
or
hlt
push
test
loopne
std
pop
mov
or
xchg
pop
lea
inc
icebp
shl
xor
fs
xchg
ljmp
lahf
push
xor
push
mov
or
or
div
adc
sub
pop
pop
push
dec
mov
imul
inc
push
loope
das
scas
aaa
inc
cmc
out
mov
outsl
lret
nop
jae
or
sbb
cs
add
sbb
sbb
add
movsb
xor
mov
cmp
push
add
jo
fwait
jge
cmp
and
fstpt
cmpl
mov
mov
push
sahf
xchg
in
add
mov
cmp
enter
repz
into
jne
xor
movsl
mov
insl
fucomip
inc
xchg
cmp
inc
mov
adc
add
mov
mov
loop
sbb
addr16
mov
js
lret
mov
shrl
cmpl
jmp
data16
jg
jge
ss
cmp
mov
adc
repnz
in
stos
sarl
aad
mov
mov
cmp
pop
pop
xchg
in
pusha
out
mov
pushf
cmp
and
or
dec
aaa
mov
push
inc
jg
push
dec
stos
arpl
jae
arpl
popf
je
adc
mov
mov
popa
js
nop
loop
and
and
push
cli
mov
loop
pop
and
repz
xlat
insl
add
mov
mov
push
and
jmp
xchg
and
aad
and
outsl
ret
jg
fisttpl
mov
mov
inc
mov
jg
or
outsl
stc
test
jmp
imul
call
add
sbb
fs
lcall
pop
std
xor
int3
mov
daa
nop
push
shlb
mov
pusha
outsb
fbstp
ja
mov
andl
xor
add
mov
pop
adc
mov
sar
icebp
fwait
add
into
inc
mov
inc
and
xchg
and
arpl
ljmp
inc
jbe
inc
popf
xchg
inc
jg
fs
jo
mov
imul
out
jle
mov
cmp
nop
movsb
andl
aaa
dec
fnstcw
dec
cmp
out
mov
pextrw
add
mov
outsb
mov
cs
adc
pop
sub
mov
les
aas
out
nop
inc
push
pop
daa
sti
lock
pop
popa
inc
pop
xchg
fidivl
enter
cltd
icebp
and
xor
lea
in
mov
test
aaa
add
into
sbb
add
call
jnp
data16
les
add
aaa
iret
stos
into
rorl
lods
cld
dec
insl
lods
mov
ss
jmp
mov
clc
mov
mov
scas
and
mov
or
out
adc
inc
push
ret
or
dec
lds
adc
popf
cs
push
or
es
mov
adc
mov
mov
scas
mov
jmp
push
sub
sbb
lea
ljmp
pusha
push
and
cmp
test
dec
in
sub
xor
adc
inc
scas
rcrl
mov
cs
jne
pushf
inc
je
mov
mov
mov
cmp
mov
cmp
add
repnz
jo
dec
aad
call
pop
xchg
pop
pop
push
jl
rorb
jne
cmp
fadds
sub
repnz
xor
sub
xchg
ficoml
loopne
lahf
push
jne
xor
mov
hlt
das
push
inc
mov
rol
dec
ret
clc
test
lahf
sub
out
jmp
clc
sbb
dec
and
lods
jmp
int3
push
jne
pushl
ds
xchg
insb
loopne
lret
xchg
stos
outsb
push
and
mov
cmpsl
hlt
popf
adcl
mov
aam
lahf
out
mov
enter
shl
or
cltd
dec
imul
inc
gs
mov
push
adc
cmc
xor
mov
aad
rolb
add
pop
and
fldt
jnp
out
out
outsb
in
add
es
inc
xor
pop
pop
push
lcall
push
stos
test
push
lret
jp
cmpsb
es
push
xor
ja
jns
lods
cwtl
adc
cmp
aam
sub
fnstsw
xchg
jnp
mov
and
pop
in
xlat
cmp
fdiv
ja
out
or
add
js
fldt
enter
or
adc
in
or
inc
enter
and
scas
nop
aas
inc
repz
mov
sbb
je
adc
jge
cmpsb
clc
push
jl
mov
into
mov
mov
adc
inc
pop
jp
clc
mov
addr16
push
loop
outsb
lea
mov
lock
and
sbb
aad
ds
mov
pop
and
sti
gs
lret
xchg
mov
dec
filds
lcall
pop
cs
sbb
xor
imul
ljmp
lcall
icebp
or
dec
xor
or
test
jp
mov
sti
or
iret
sbb
mov
cmpsb
lret
xor
add
jb
jmp
andb
inc
xchg
fsubrl
sub
lret
movsb
cltd
add
test
cwtl
hlt
mov
in
pop
push
mov
cmpsb
mov
xor
add
fisubs
pushf
xor
sbb
push
cmp
or
mov
les
mov
mov
jle
movsb
leave
dec
cmp
insl
dec
lcall
out
mov
pop
out
fs
jecxz
jne
in
mov
cld
push
add
and
jno
out
adc
push
and
xor
in
cmpb
call
fwait
lret
xchg
jmp
mov
push
mov
or
mov
aad
mov
xlat
inc
jno
xchg
mov
push
insb
xor
dec
xorb
jg
jnp
mov
loop
pop
icebp
loopne
mov
aad
pop
aam
pop
and
icebp
xchg
sahf
mov
cmpsl
fdivs
in
sbb
int3
push
clc
loop
cmp
nop
pop
and
xor
add
mov
stos
cmp
and
in
out
xor
mov
inc
insl
aas
adc
repnz
and
xchg
dec
inc
pop
filds
or
push
aaa
xchg
xchg
rcr
fmulp
mov
adc
inc
subl
sti
aad
push
cmpsl
shrb
xchg
mov
jl
fisubs
lods
hlt
sub
insb
out
mov
mov
mov
lods
xchg
dec
dec
lods
adc
out
xchg
test
stos
pusha
push
inc
sub
pop
jbe
cmpsl
cmpsb
add
data16
jbe
mov
inc
je
dec
daa
mov
xlat
inc
inc
stos
ja
data16
mov
push
outsl
ret
inc
xchg
nop
mov
cmpsb
int
xor
test
mov
pop
inc
sub
jno
jle
bound
arpl
cs
mov
sbb
or
filds
repz
ret
aam
sbb
adc
add
jl
add
or
pop
sub
rcr
jne
insb
jno
repz
mov
jecxz
insb
cmp
mov
or
xchg
jb
jbe
mov
in
out
out
cmp
sub
xor
std
mov
mov
cs
jmp
push
ret
imul
cmpb
adc
sti
add
subl
rorb
in
mov
sub
movsl
loop
pop
add
adc
xchg
loope
xor
scas
fstl
fs
out
rcr
cli
jno
repz
jmp
icebp
leave
popf
push
cmpsl
and
ret
aad
mov
mov
test
rcrb
rolb
jl
xchg
adc
mov
dec
test
push
lea
cs
int3
iret
loope
decb
and
sbb
sbb
cwtl
xor
xchg
lods
sti
adcb
or
mov
jns
or
add
in
and
in
jnp
inc
clc
mov
ss
mov
dec
add
insb
std
das
adc
sub
addr16
inc
jecxz
xchg
push
jae
arpl
lret
fisttpl
repz
cltd
loop
out
mov
scas
loope
lret
std
mov
and
cmp
sarl
ds
add
adc
adc
iret
mov
imul
out
xchg
ja
decl
push
jp
insb
adc
mov
idiv
jbe
cmpl
in
lret
nop
xchg
rorl
pop
fwait
ret
xchg
mov
mov
push
inc
or
cmpsb
insl
pop
adc
aas
xor
stos
decb
ljmp
add
sbb
adc
pop
push
adcl
in
insb
stc
mov
dec
lds
adc
jp
xor
pop
movsb
divl
dec
cmp
cmpl
sub
fisubrl
ja
inc
out
dec
mov
dec
push
pop
inc
sub
outsb
pop
js
jecxz
hlt
std
pop
push
jb
mov
mov
aas
mov
std
or
sub
in
add
fldt
into
sub
or
pushf
mov
in
addr16
mov
loope
test
lods
sbb
xor
pop
out
mov
mov
adc
dec
loope
jp
or
sub
push
xchg
push
aam
jle
sub
mov
fcompl
cmp
pop
sbb
xlat
add
in
test
imulb
push
inc
test
loope
cmc
aaa
lds
ret
je
rol
cmp
pop
sub
fsubs
cmp
out
insl
mov
repnz
sub
or
sub
into
or
lea
mov
imul
aam
into
jle
pop
pop
mov
lahf
repnz
mov
fbld
xor
push
mov
andb
inc
add
lret
adc
lock
leave
or
mov
mov
ret
or
lock
scas
in
dec
mov
pop
out
pop
insb
lahf
pop
dec
movsb
adc
push
jmp
pop
push
sbb
je
inc
cmp
dec
loopne
push
es
mov
adc
xchg
imul
push
sub
jp
inc
fldl
flds
in
and
jge
inc
movsl
sub
pop
cwtl
decb
fsubp
mov
adc
repnz
popa
mov
push
add
mov
je
xor
stos
gs
loop
pop
scas
xchg
xor
pop
mov
sbb
inc
mov
mov
mov
pop
aad
lods
dec
int
into
test
pop
fbld
xchg
add
mov
ret
lret
push
out
jmp
mov
lcall
push
scas
and
stc
aam
pop
cmpsl
xor
popf
inc
sbb
sub
add
xchg
or
lods
mov
fnstenv
andb
xchg
dec
mov
dec
out
or
mov
or
aam
mov
and
insb
jmp
enter
cmpsb
mov
xor
lock
sub
xchg
fwait
pushf
mov
and
push
js
xor
das
rorb
iret
add
insl
test
add
shrb
or
aad
fldenv
fcoms
dec
lret
and
inc
push
or
jge
sbb
add
dec
cmpsb
add
pop
sbb
xchg
pop
dec
fildl
shll
in
arpl
or
mov
shll
add
inc
push
ljmp
stos
or
icebp
sbb
insl
xchg
int
loopne
punpckhwd
popa
lods
dec
mov
push
jmp
mov
rclb
int
out
iret
clc
mov
data16
inc
sarl
scas
sbb
subb
push
imulb
xchg
call
icebp
sar
pop
aaa
cwtl
jg
jb
mov
push
pop
cli
lods
mov
and
adc
loope
jb
fstpl
sti
fs
adc
sub
loope
push
cmp
nop
xchg
mov
sti
ret
lea
loopne
stc
sub
pop
out
cmp
fistpl
xchg
sub
fdivrp
test
jb
sbb
sub
inc
mov
mov
dec
sbb
push
pop
mov
call
mov
cmc
push
cmp
cmc
mov
cmpsb
cmp
mov
lret
xor
inc
int
mov
mov
mov
fwait
das
stc
mov
test
dec
in
pop
jmp
xchg
repnz
xor
scas
or
dec
in
sub
jmp
mov
sub
call
mov
jge
lret
pop
shl
adc
mov
pop
mov
and
cmp
into
fidivrl
mov
or
xchg
push
adcb
stc
orb
std
xorb
push
les
jns
les
ret
mov
arpl
xor
test
mov
xchg
sahf
inc
jb
jo
adc
test
es
mov
test
in
dec
jae
sbb
dec
mov
fucompp
int3
icebp
sbb
pop
lods
icebp
pop
pop
lret
sub
stc
adc
pop
loope
enter
add
dec
ret
out
insb
pop
lods
dec
fimull
repz
sti
outsb
dec
mov
shl
inc
xor
das
ss
sub
mov
sbb
cmp
ficoml
sti
xor
pop
cmc
sbb
call
orb
pop
mov
fwait
inc
xchg
int3
test
inc
call
mov
pop
ss
adc
fs
inc
std
movsl
aam
xchg
dec
xchg
inc
fdivrl
sbb
mov
lds
mov
inc
loopne
xchg
xchg
dec
movsb
inc
aaa
dec
rcrb
sub
insb
sbb
mov
ja
mov
dec
pop
cmpsb
daa
daa
mov
test
fiadds
inc
roll
jle
jne,pn
jbe
pop
jmp
jo
lea
pop
adc
cld
mov
fs
inc
inc
int
xchg
out
and
push
lock
fs
test
out
sub
inc
popa
mov
pusha
mov
xchg
movsb
insl
imul
xlat
push
addr16
and
sub
movl
les
inc
jnp
adc
cltd
mov
sub
adc
sbb
ljmp
fs
xor
sbb
aam
push
xchg
lcall
push
loopne
inc
sbbb
arpl
les
and
loop
lahf
cmp
jno
add
mov
inc
mov
cmp
jbe
xorl
add
mov
push
jle
sbb
push
or
ljmp
push
out
lock
sbb
add
inc
sbb
js
and
leave
sbb
or
pop
jo
aam
mov
test
scas
push
xchg
movsl
aam
mov
sarb
mov
cwtl
dec
mov
lods
aaa
adc
xchg
pop
pushf
stc
pop
dec
outsl
and
and
dec
pusha
imul
divl
pop
nop
xor
inc
xchg
push
and
aas
scas
add
pop
sub
cli
fsubr
pop
mov
sti
daa
decb
andb
xchg
inc
push
mov
cmp
cmp
popa
and
int
loopne
int
xor
imulb
scas
mov
mov
mov
test
je
cli
push
loope,pt
inc
sub
das
popf
mov
std
dec
cmp
inc
test
mov
push
jae
sbb
sbb
mov
cmp
adc
cmp
in
xor
xchg
mov
xor
xor
das
pop
sbb
inc
icebp
inc
loop
popa
fidivl
xchg
xor
addr16
mov
ffreep
mov
sbb
popf
lret
test
js
xchg
inc
arpl
or
fs
fdiv
mov
cmp
pop
outsl
push
sub
pusha
push
inc
insl
insb
xchg
adc
cmp
push
and
cmp
cmpsl
dec
lock
mov
imul
inc
lcall
cmpsb
dec
adc
lods
jne
push
shrb
clc
mov
notb
stc
stc
scas
insb
push
adc
mov
adc
lahf
pop
or
std
call
mov
out
mov
sti
jnp
adc
sbb
lock
lods
pop
add
rorl
fildl
and
xor
jge
xchg
popf
or
push
call
jmp
aaa
xor
mov
outsb
pop
xchg
mov
nop
sub
cmp
jne
dec
fcoms
xor
push
les
xchg
xchg
shll
ja
fndisi(8087
stc
push
pop
jns
push
pop
popf
sub
cmp
add
add
cmp
mov
sub
nop
fstl
jmp
pop
lods
cmp
cltd
add
cmc
notl
xor
and
xchg
cmp
xor
dec
jmp
popf
xlat
push
pop
fs
mov
cmp
xor
or
jne
test
in
dec
push
jg
or
mov
xor
es
pop
pop
imul
xlat
adc
push
cmc
sti
adc
add
rorb
mov
add
xchg
ljmp
std
mov
add
dec
dec
sub
ret
push
adc
dec
xor
sbb
mov
or
lock
mov
aam
sahf
mov
add
stos
jbe
ja
mov
inc
fmull
int
mov
shlb
decb
pop
lahf
imul
pop
std
push
mov
dec
xchg
iret
xor
pop
mov
dec
dec
pop
xchg
dec
mov
xchg
pop
lock
or
add
mov
mov
fwait
mov
inc
sbb
push
roll
add
sub
lods
lret
out
negb
test
mov
fsin
test
adc
imul
in
sti
or
lea
cmp
lret
ds
repz
ljmp
jne
cmpsl
pop
sbb
pop
aas
pop
pop
andl
xchg
movl
test
ja
or
add
test
mov
inc
and
in
loopne
lea
mov
loope
or
and
mov
pop
test
sub
adc
imul
test
jge
cmp
cmp
pop
push
fnstcw
sarl
cli
and
std
cmp
cs
mov
and
lret
std
mov
sub
dec
xchg
mov
mov
sarb
enter
test
loope
pop
cs
cmp
dec
xor
lcall
mov
aas
jno
inc
or
lahf
insb
jecxz
sub
sti
aad
ljmp
adc
mov
push
cmp
mov
arpl
ss
and
rcrl
or
js
xchg
sub
repnz
mov
push
inc
jns
cmp
cmp
mov
pop
push
jae
mov
mull
pop
mov
imul
fmul
adc
lcall
adc
arpl
cltd
xchg
xor
or
cli
cmp
mov
pushf
push
add
push
mov
popl
mov
add
xchg
xlat
das
jl
dec
xchg
outsl
lods
fwait
push
jmp
xchg
push
shl
sldt
inc
sub
or
sbb
in
jmp
mov
test
jb
xchg
cmp
lret
sbb
shrb
mov
mov
mov
sub
mov
xor
cmp
dec
mov
mov
subl
mov
jns
movsl
cmp
ret
daa
clc
adc
pop
scas
mov
pop
in
push
gs
xchg
out
mov
notrack
mov
sbb
cltd
add
scas
mov
mov
sbb
mov
mov
push
sahf
push
cmp
fsubrl
stc
sbb
ss
icebp
cs
xchg
and
sbb
pop
push
lcall
xchg
fucomi
mov
cltd
push
jae
inc
ds
outsl
push
pop
pop
fwait
pop
jne
shll
xor
mov
jnp
xchg
adc
fiadds
out
icebp
xor
push
imul
fimuls
jnp
lock
divl
iret
mov
lds
sbbl
shll
cmp
negb
cmp
scas
imul
lret
fidivrs
mov
icebp
push
loop
inc
jge
bound
sti
mov
jle
cmpl
jne
out
push
sahf
sarb
pop
shll
notb
mov
insl
fwait
das
xor
sahf
or
push
mov
movsl
push
insb
lods
std
call
mov
hlt
adc
jne
add
fstl
xor
stc
pop
or
jmp
iret
xor
in
insl
adc
jnp
push
inc
xor
repz
xchg
out
mov
lret
dec
adc
ja
mov
mov
or
pop
jmp
out
add
fstpl
sub
or
outsl
out
popf
icebp
dec
ss
fnsave
in
rsqrtps
faddl
imul
mov
jmp
dec
pusha
es
test
stos
fcmovne
ror
ja
xchg
jne
mov
out
sub
adc
xchg
pop
fmuls
pandn
shl
jle
or
jbe
fwait
repz
add
cs
push
and
cmp
dec
fidivrl
sahf
push
xor
insb
cli
add
ss
call
jmp
leave
mov
out
or
push
lret
pop
jnp
xorl
push
or
lds
xlat
clc
mov
dec
std
or
jno
fcoml
aad
gs
fucomip
xor
shlb
repnz
addr16
xchg
mov
pop
push
mov
cmp
iret
inc
ret
fwait
ret
inc
jecxz
test
fisubl
cmp
ja
aam
int
or
jo
xchg
daa
cmp
sbb
sahf
sub
iret
and
or
scas
data16
push
fwait
hlt
or
sbb
hlt
jle
jno
xchg
nop
out
cmp
aas
fidivl
dec
fwait
sti
sub
arpl
fcompl
push
sbb
stc
lea
push
mov
mov
aad
add
aas
andl
dec
loop
jl
sbb
imul
aad
mov
loopne
lods
mov
sbb
jne
dec
mov
add
dec
scas
xchg
shrb
mov
push
mov
addb
cmpsl
jnp
or
clc
movsl
bound
jl
xchg
add
mov
push
adc
jp
or
das
icebp
mulb
scas
rorl
lods
or
cmpsl
test
fsubl
daa
mov
mov
aad
cmp
loopne
and
xor
xchg
jnp
scas
test
pop
and
test
sbb
mov
adc
fldl2t
xchg
sub
xchg
mov
add
pushf
push
sti
xchg
push
xchg
cs
mov
inc
in
add
sub
xor
pop
jmp
cmp
lahf
sbb
in
sub
and
insl
loope
mov
inc
int
mov
fistpl
and
fiaddl
fwait
les
popa
mov
push
sub
jnp
mov
mov
sub
jle
sti
mov
das
fwait
loop
sahf
or
mov
clc
push
add
jg
push
and
or
pushf
fcmovbe
pushf
pop
mov
or
ja
out
ficomps
lea
add
lock
int
mov
jge
test
or
repnz
sbb
movsb
ljmp
and
xchg
add
loop
jnp
ret
sub
mov
js
insb
lock
cwtl
andb
daa
jecxz
pop
xchg
inc
and
ljmp
jne
inc
dec
sub
mov
ja
mov
loop
xchg
mov
push
inc
arpl
loope
or
loopne
xchg
fbld
or
mov
xchg
enter
js
sarb
or
jb
mov
rorb
popf
insb
xchg
jp
push
testl
adc
lret
push
jmp
je
in
push
movsl
pusha
test
jle
add
sub
xor
ljmp
pusha
jl
xor
out
pusha
nop
xchg
gs
int
jecxz
dec
aas
mov
mov
mov
fdivrp
push
into
icebp
fs
jl
sub
pop
shlb
frstor
add
sbb
divb
aas
loop
sub
nop
iret
push
add
sub
loopne
mov
xchg
mov
adc
adc
xor
cs
sub
inc
jne
lret
fcomp
stc
je
xchg
xchg
add
lods
mull
pop
js
es
jmp
leave
iret
xor
out
mov
inc
add
pop
mov
pop
icebp
add
jnp
mov
mov
pusha
xchg
dec
adc
les
or
and
push
ds
insl
jnp
fwait
cmp
cmp
stc
jb
fwait
lock
out
inc
les
or
cmp
adc
ja
adc
sub
lods
jnp
cltd
add
pop
xchg
dec
adc
mov
loop
mov
jmp
scas
jnp
fwait
js
sti
call
xlat
mov
push
xor
out
cmpl
xchg
in
aaa
out
inc
pop
fwait
lock
mov
sti
xchg
jle
mov
jl
scas
jne
fmull
clc
test
push
mov
jp
or
insb
lret
dec
outsb
sbb
cmp
dec
jmp
ret
add
dec
pop
jle
push
cld
pop
inc
or
mov
pop
mov
sub
lret
aad
pop
inc
mov
sub
sbb
or
aam
imul
jnp
sub
rep
lods
cs
pop
cwtl
push
jge
mov
or
js
mov
lcall
cmp
mov
testb
dec
fnstsw
rcll
loopne
mov
xor
leavew
scas
icebp
xor
lods
test
mov
stos
xchg
mov
mov
stos
sub
adc
pop
sub
lret
push
popa
adcb
into
pop
and
sub
cmp
test
sbb
push
test
mov
add
mov
insl
cmpsb
inc
push
es
cmpsl
es
fists
dec
leave
fwait
outsl
push
sub
es
adc
xchg
test
fisttpll
adc
push
cltd
fisubl
aaa
js
push
push
cmp
js
pop
sbb
bound
stc
xchg
push
xor
adc
in
loop
push
ja
fmul
and
jl
cmp
cli
jb
pop
pop
addr16
stos
cld
jne
mov
outsb
andl
cmpsb
push
cmp
sub
test
xchg
movsl
sbb
ljmp
xchg
aad
dec
adcl
pop
mov
pop
data16
stos
arpl
cmp
add
adc
push
or
shlb
cltd
sub
fimuls
jl
push
fisttpll
insb
bound
and
hlt
sbb
dec
cld
test
jb
xor
push
adc
aad
sub
xchg
sbb
fs
rorl
xor
pusha
add
movsl
mov
sbb
clc
xorl
dec
mov
push
insb
scas
lcall
dec
mov
push
mov
jg
loopne
imul
mov
popf
movsl
xchg
icebp
pop
insl
and
enter
cmp
sbb
pop
insb
movsb
mov
in
jo
adc
and
push
push
iret
fisubrl
int3
cmpsl
aas
push
fsubl
jle
mov
movsb
inc
add
into
lods
in
mov
imul
xchg
dec
test
gs
cwtl
in
jns
test
mov
out
pop
add
jns
xchg
sub
outsl
mov
ja
inc
sar
popa
jb
sbb
out
cmpsb
mov
sbb
ret
or
bswap
sbb
xor
sub
xor
cmp
aam
pop
or
jge
outsb
outsl
adc
inc
daa
mov
mov
js
mov
adc
xor
into
shlb
push
xchg
pop
outsl
data16
leave
addr16
in
insl
hlt
hlt
or
and
stos
cmp
mov
cmp
adc
daa
mov
lret
loope
repnz
push
xor
jecxz
push
nop
adc
pop
xchg
rcrl
lcall
pop
movsb
mov
insb
call
fdivs
mov
ja
call
enter
fmuls
mov
stos
and
loopne
aam
bound
mov
dec
sbb
int
adcl
mov
pop
inc
sbb
pop
mov
cmpsl
dec
jl
push
scas
mov
jge
sub
and
loop
sarl
scas
or
pushf
stos
mulb
lods
rorl
ret
cmp
or
sahf
cwtl
dec
cwtl
mov
sbb
jmp
fldl
cmc
mov
and
pop
sub
inc
pop
daa
fwait
inc
or
stos
in
shld
sahf
bound
or
xchg
iret
mov
sbb
inc
ret
in
push
jbe
orl
xlat
inc
mov
adc
mov
repz
mov
fcomp
les
ljmp
jbe
adc
arpl
ja
cmc
xor
inc
scas
stos
data16
fcomps
lds
aam
fadds
mov
shl
pop
jp
mov
clc
sub
mov
mov
sub
dec
fdivrl
xorb
gs
fwait
pop
ss
pop
sbb
mov
cmpsl
test
adc
pop
pop
xorb
hlt
icebp
into
push
hlt
rclb
add
mov
aad
lcall
rorb
inc
xor
pop
xchg
sbb
mov
dec
pop
pushl
ds
mov
jg
sub
xchg
fisttpl
gs
mov
mov
push
icebp
mov
cld
stos
repnz
push
cmc
xor
lcall
mov
mov
adc
push
aas
dec
mov
jnp
hlt
cltd
push
jne
icebp
fisubl
data16
add
and
mov
loop
jne
push
jmp
imul
insl
and
pop
sti
jp
pop
fcomps
sarb
lcall
addr16
mov
stos
outsl
mov
adc
and
jge
jmp
jae
movsl
or
lock
into
dec
fsubp
xor
sub
jge
and
nop
inc
fildl
xchg
pop
mov
ficomps
cmpsl
out
repz
mov
insl
andb
adc
xor
jmp
adc
and
sub
xchg
jo
dec
lods
leave
fbld
pop
sbb
mov
insl
and
and
fcos
and
rcrb
repz
mov
out
add
pop
nop
mov
mov
sbb
cmp
dec
push
leave
loop
pop
mov
sbb
sub
add
cmp
inc
mov
xor
push
and
mov
xor
jns
out
test
es
jg
xchg
jns
lahf
fisttpl
push
sarl
cmpsl
mov
jnp
loope
inc
gs
pop
push
mov
lea
dec
push
push
dec
xchg
fwait
inc
or
push
fwait
ds
insl
orb
fbstp
push
cli
int
jne
imul
sbb
fbld
jge
adc
mov
int
insb
imul
sbb
xor
jle
xchg
popf
push
push
and
sahf
call
add
stos
cs
and
jb
mov
iret
inc
sbb
inc
mov
or
in
pop
cmp
js
sbbb
mov
mov
xchg
lret
dec
push
sub
xchg
xorb
sub
pop
enter
add
pop
cs
enter
inc
mov
js
mov
jle
push
xlat
sub
movl
rcll
dec
inc
mov
inc
out
mov
loop
or
mov
or
out
push
mov
pop
std
mov
cmpsb
cmp
and
add
icebp
test
jb
mov
jmp
xlat
sub
jl
sbb
adc
insl
shll
and
mov
fistl
mov
repnz
or
sahf
jns
sbb
fimuls
cld
push
inc
push
ret
adc
sub
fldl
dec
imul
xchg
out
add
push
jae
js
jg
ret
dec
daa
mov
call
add
inc
cmp
xor
adc
sbb
xchg
outsl
mov
push
add
dec
les
in
jmp
cmp
pop
xor
std
leave
outsl
jnp
xor
in
ss
jmp
jae
mov
add
inc
and
loope
adc
and
jecxz
notb
jb
pop
pop
mov
sbb
iret
out
inc
sahf
leave
clc
push
cltd
lahf
mov
sbb
shl
aaa
push
xor
cltd
jle
inc
adc
sti
movsb
mov
je
out
mov
in
rorl
repnz
jp
imul
mov
push
adcb
scas
aad
frstor
movsl
lret
push
jmp
push
adcl
or
insb
lock
sub
inc
push
cmpsl
mov
mov
push
jg
sub
pop
fstpt
test
mov
fisttpl
daa
into
addb
inc
jge,pt
sti
fimull
lcall
stc
shll
cld
stos
pop
pushf
xchg
sub
call
shrl
daa
fwait
arpl
je
add
rorl
pop
pop
push
add
jg
sbb
inc
mov
xchg
add
pop
ljmp
inc
sarl
or
stc
lock
rclb
sbb
adc
pop
xlat
ljmp
outsl
popf
inc
xchg
add
in
fidivs
push
xchg
sbb
std
mov
mov
pop
dec
dec
add
adc
and
int3
out
lods
pushf
xor
addl
push
loopne
loopne
fisubrs
test
mov
cmpsb
int
pop
xchg
mov
ljmp
xchg
pop
mov
mov
xchg
lcall
ja
fs
es
fnsave
lds
xchg
mov
lret
jp
iret
popf
cmp
xchg
std
mov
lods
xorl
adcb
lcall
dec
dec
loop
ja
movsb
sub
scas
bound
popa
push
test
push
das
ror
imul
mov
xchg
xor
das
icebp
push
pop
test
outsb
fmull
mov
loope
stos
dec
int
push
mov
fiadds
mov
fisttps
nop
setg
adc
jae
mov
cmpsb
in
and
insb
test
lret
and
test
mov
cmc
and
dec
xlat
icebp
inc
sub
fstpl
rclb
into
mov
mov
and
loope
ror
hlt
into
and
ja
and
and
loop
mov
imul
in
fnsave
or
fadds
nop
jnp
jo
inc
fcmovnbe
in
xor
test
adc
fcoml
sbb
mov
test
in
jle
add
xor
lds
in
lea
fists
sbb
push
sbbb
cmp
mov
fcomp
les
push
cmp
into
stos
stc
add
push
inc
ljmp
or
lea
cmp
loop
mov
clc
sbb
cwtl
in
lcall
sub
shl
dec
mov
imulb
enter
sbb
das
mov
mov
aam
sub
ret
xchg
pop
hlt
and
lea
out
jnp
mov
add
mov
pusha
adc
cltd
ds
lea
int
xor
sbb
decb
cli
mov
xchg
outsl
mov
pop
mov
xchg
jmp
fisttpll
jns
inc
in
pop
jne
inc
enter
dec
call
adc
dec
xchg
sahf
push
sub
xchg
push
mov
mov
call
mov
adc
dec
add
xchg
pusha
shll
loop
xchg
cbtw
inc
mov
mov
add
sbb
ljmp
dec
or
repnz
push
jecxz
imul
sbb
outsb
xor
dec
or
push
movsl
adc
jae
dec
fwait
rcll
scas
lret
push
nop
adc
fwait
lock
adc
cmp
jmp
pop
xchg
mov
inc
mov
out
push
sbb
mov
sub
test
adcl
fldcw
aam
pop
inc
lock
outsl
mov
mov
cmp
iret
fwait
sub
iret
lock
rcl
push
fs
jecxz
outsl
ja
dec
pop
adc
jg
add
or
jle
in
sub
bound
pop
push
push
xchg
and
ret
sbb
lret
scas
sahf
pop
dec
fdecstp
inc
xchg
or
pop
sbb
addr16
insb
outsb
fucomi
scas
inc
jmp
ret
xchg
pushf
jb
lret
mov
das
orl
xlat
imul
mov
pop
hlt
mov
cmp
sub
hlt
pmaddwd
sub
and
fists
add
es
shll
loop
and
in
gs
das
or
mov
jg
sbb
adc
lock
aam
insb
mov
movsb
and
jne
mov
xchg
adc
lods
xchg
or
mov
imul
jge
xchg
jnp
in
int3
and
cmpsb
imul
test
xchg
push
fcomi
sub
fiadds
sub
cmpsl
sub
push
clc
jge
ds
or
add
dec
mov
push
insb
pop
fiaddl
mov
and
add
dec
sub
inc
xchg
mov
inc
adc
inc
out
adc
and
adc
imul
testl
mov
inc
subl
daa
adc
lock
or
jae
sub
test
pop
dec
jae
int3
bound
lock
js
jae
hlt
loopne
push
pop
xor
pusha
mov
iret
or
xchg
scas
dec
adc
dec
mov
lahf
pop
enter
push
mov
cli
and
cwtl
dec
sbb
ror
jbe
cmp
nop
data16
fs
pop
data16
jmp
xlat
jne
inc
ret
ficoms
push
ret
mov
int3
imulb
iret
leave
xor
sbb
cmpb
into
pop
aaa
popf
ds
aas
or
ret
add
lods
adc
jmp
and
ljmp
adc
cmp
inc
fs
imul
inc
push
mov
dec
xchg
and
leave
aam
mov
inc
cwtl
inc
mov
daa
in
jno
aaa
cwtl
or
pusha
jecxz
stos
jno
jp
daa
dec
gs
or
imul
pop
or
fdivs
stos
fprem
sbb
rcl
sbb
mov
popa
jae
pop
mov
pop
ss
xchg
pop
out
rcll
push
test
push
dec
je
hlt
adc
or
xor
cwtl
mov
ljmp
xchg
ja
pop
ret
ja
in
mov
hlt
push
mov
gs
xor
mov
sbb
sub
xor
stc
mov
imul
mov
jmp
add
add
or
in
xchg
jle
mov
jge
fistpl
in
and
lds
jl
in
test
and
xlat
jg
lahf
and
cmpsl
mov
jmp
push
hlt
and
lret
test
jae
or
das
cmpb
lods
stos
sbb
dec
xchg
mov
lods
lret
movsl
or
sahf
orl
mov
call
dec
cmp
clc
call
popf
ljmp
dec
cmp
sub
mov
jo
push
jbe
jbe
lret
mov
xchg
mov
jl
dec
dec
fwait
enter
stc
sub
fistps
mov
mov
test
xrelease
jmp
js
subb
out
pop
in
xchg
leave
call
pop
je
scas
mov
out
aas
stc
inc
push
jg
aad
xchg
outsb
mov
lret
loopne
or
clc
loop
mov
repz
sarb
dec
push
cld
and
push
or
mov
repz
imul
mov
xchg
es
jmp
mov
pusha
push
fsubrl
sbb
test
sub
inc
and
stos
cmp
xchg
xchg
mov
cltd
mov
and
es
jp
mov
cmp
loope
sub
call
push
mov
cmp
lret
mov
shlb
inc
lods
sbb
fcmovnb
jp
push
or
mov
pop
movsl
push
dec
cmpb
shlb
or
test
stos
fs
jp
cmp
inc
movsb
out
adc
jle
test
aaa
push
decb
cmp
pop
das
pusha
xor
sub
ss
jmp
loopne
int
movsl
imul
lcall
test
lock
rcrb
mov
mov
stos
shl
fsts
lret
mov
push
mov
adc
shlb
cmp
pop
cmpl
addr16
and
push
dec
loope
dec
in
fwait
cmpsl
stos
xchg
mov
add
mov
sub
sbbb
movsl
xor
sbb
ret
ds
aas
aad
adc
movsb
inc
or
inc
xor
shl
testb
repz
divb
mov
cmp
bound
xchg
int
dec
outsl
aad
and
arpl
nop
imul
lea
xchg
popa
and
pop
mov
out
shr
mov
or
jp
mov
imul
jb
and
stos
gs
scas
test
pop
inc
out
mov
pop
dec
sbb
sub
push
dec
incl
xchg
outsl
clc
mov
into
pop
das
and
rcr
xor
push
xor
xorl
test
inc
mov
xor
int3
dec
cmp
call
jp
cli
dec
push
lcall
dec
jl
idivl
cwtl
jecxz
push
mov
addb
or
cmc
or
sarl
stc
dec
add
mov
jl
shrl
fwait
out
dec
enter
mov
lret
mov
sbb
loop
cmp
push
mov
jae
fsubrs
sub
mov
fwait
les
jb
mov
hlt
addr16
cmp
sbb
lcall
sub
movsl
xor
mov
orl
inc
mov
xchg
sbb
lahf
imul
lret
sub
es
outsl
or
xor
inc
cmp
xchg
mov
and
mov
add
add
imul
dec
xchg
addb
insl
daa
stos
into
das
ret
sub
bnd
cld
xchg
cmp
or
insb
and
out
nop
add
in
leave
or
divl
mov
pop
test
dec
call
aam
push
mov
clc
push
dec
mov
pop
adc
lds
mov
xor
in
xorb
sbb
lods
mov
std
jnp
and
push
sbb
push
lahf
sub
mul
aas
push
les
pop
cmp
dec
mov
aad
push
mov
in
insb
sbb
cmp
popf
mov
push
jle
sbb
cmp
inc
mov
imul
cmpsb
in
insb
jecxz
add
cmp
mov
cmpsb
pop
push
mov
in
pop
or
jle
daa
roll
std
mov
or
fsub
rcr
mov
adc
pop
sub
jg
xchg
inc
and
mov
ret
inc
adc
push
fcmove
je
add
inc
pop
rclb
les
stc
inc
cmp
les
sahf
xor
push
subb
aam
pop
flds
inc
lds
ds
stc
fwait
pop
mov
hlt
sbb
sbb
icebp
stos
lods
and
out
filds
pop
pop
mov
dec
scas
jp
fisubs
pop
out
dec
jg
sbb
pop
mov
and
cmc
incb
imul
out
enter
fwait
sub
pusha
inc
cmp
loop
push
pop
fldl
xchg
or
arpl
push
adc
sub
add
pop
pop
cmpsl
js
add
jecxz
divl
pushf
inc
push
mov
scas
jg
in
rcrl
dec
mov
repnz
xchg
fwait
cltd
outsb
adcl
mov
dec
cmp
ret
xlat
in
mov
and
push
movb
jo
mov
xchg
aam
cmp
xor
std
or
popl
sub
in
fldcw
stos
lods
movsb
push
jge
gs
movsl
push
fdiv
adc
leave
test
aad
scas
xor
stos
jge
inc
js
cltd
sbbb
je
xchg
js
sub
lret
lret
mov
test
clc
mov
or
loop
movsb
push
lods
arpl
pop
jnp
rcr
fnsave
mov
jle
arpl
push
or
arpl
dec
sub
faddl
movsl
fdivrl
mov
inc
push
lods
loopne
int3
jns
mov
mov
shll
pop
cmp
sbb
xchg
subb
in
std
fs
lods
xor
sub
inc
ret
jo
jno
adc
xchg
ret
cmc
ret
dec
xorb
out
jbe
movsl
jecxz
sbbl
mov
dec
insl
mov
inc
mov
lock
xor
loopne
push
xchg
mov
or
lret
outsl
jmp
dec
jns
cmp
or
push
jge
sbb
pop
fsubl
push
mov
sub
jmp
jns
out
add
sahf
sbb
mov
fmul
sub
ret
xor
lea
arpl
mov
aam
xor
xchg
mov
mov
sub
ljmp
pusha
jmp
mov
mov
adc
sbb
ret
popf
add
js
inc
mov
fdiv
pop
push
mov
inc
ret
add
push
pushf
pop
jne
not
les
xor
outsb
clc
xchg
shrb
and
mov
or
sbb
cmp
xchg
cmpl
movsb
test
fisttps
pusha
push
adc
aam
fnsave
cmp
sub
jg
xchg
pop
sbb
add
scas
xor
lods
mov
dec
sub
aaa
xor
sahf
mov
in
test
fmull
lret
stos
jmp
aad
fdiv
cli
mov
out
cli
sbb
imul
gs
add
jnp
mov
xchg
lahf
mov
push
cli
popf
fisttps
jns
pop
and
fdivrl
xchg
mov
fcmove
dec
adc
in
imul
cmp
push
icebp
add
adc
mov
lret
sub
clc
roll
or
mov
cmp
ljmp
add
hlt
stos
mov
mov
push
decb
aaa
cs
mov
lods
daa
daa
mov
data16
mov
cs
jecxz
add
and
cmp
mov
mov
push
fmuls
dec
stos
aad
in
push
dec
lock
push
cmc
popa
lock
jmp
fsub
add
dec
dec
jo
nop
push
or
pop
xor
pushf
jbe
mov
dec
stc
shrl
xor
push
sbb
testl
mov
mov
cld
imul
cmp
push
xor
jle
lods
scas
fcomps
iret
mov
adc
sahf
insb
xor
and
sub
jl
sbb
pop
imul
sbb
sahf
mov
lea
mov
cmp
out
setno
dec
aam
aad
sub
adc
sub
fmul
ss
pushf
loopne
mov
mov
mov
jl
mov
lods
mov
cli
xor
mov
jns
jns
mov
push
imul
cmp
cwtl
test
sub
enter
sub
and
les
outsl
add
pusha
cltd
and
mov
cmp
push
adc
xor
sbb
push
loop
or
lods
jno
sahf
outsb
test
and
mov
inc
or
dec
sub
fwait
stos
mov
xchg
jno
dec
fsubr
xchg
sbb
lds
popa
and
pop
mov
shl
jb
mov
add
xchg
adc
into
imul
addl
xor
aaa
xor
sub
nop
popl
mov
jmp
push
sti
and
fnstcw
mov
mov
sub
std
cvtpi2ps
inc
ficomps
pop
orl
in
fistl
clc
xchg
lock
lret
ffree
fnstsw
xchg
push
ljmp
hlt
mov
sarl
aam
cmpsb
addr16
rcr
adcl
mov
jmp
outsl
repz
enter
lock
xchg
shlb
mov
data16
out
or
test
pop
mov
add
dec
mov
mov
adc
in
push
and
pop
in
xor
and
inc
adc
xchg
test
and
out
xchg
or
out
push
mov
xor
rcll
insl
adc
nop
ljmp
outsb
testl
add
sub
dec
pop
loope
outsl
out
or
jle
mov
pop
adc
jb
add
and
sub
into
jmp
outsl
rcrb
sbb
gs
repz
push
dec
rolb
xchg
xor
out
dec
cmp
fdivrp
mov
aaa
test
xor
dec
decl
xor
add
in
pop
mov
add
ds
insb
loop
adc
jge
ljmp
cwtl
jno
cld
mov
gs
es
dec
cmp
out
stos
shll
add
stos
mov
pop
les
out
sbb
les
add
outsb
out
mov
jne
ja
ficoml
in
cmp
xor
push
test
dec
cmp
es
nop
pop
pushf
int3
xchg
lods
xchg
out
lcall
imul
hlt
xchg
sub
paddw
push
rcl
jmp
push
insl
loopne
das
call
leave
push
sub
add
aaa
mov
rclb
xlat
fisttpl
xchg
pop
int3
cmp
pop
mov
jb
imul
add
and
push
mov
das
movsb
xchg
mov
mov
jecxz
sub
lahf
xor
sbb
pop
das
add
mov
pop
cmp
ret
add
mov
and
pop
test
mull
out
push
adc
cwtl
cltd
sbb
outsl
mov
fadds
jle
jo
in
and
or
adc
xchg
das
add
jne
cmp
cmpsl
leave
ljmp
adc
xchg
mov
jmp
ret
popf
int
xchg
decb
jae
test
pushf
jns
xchg
jae
dec
or
sbb
fcompl
xor
dec
rcrl
jb
sbb
scas
cmp
jb
stos
in
sbb
scas
test
ror
and
xchg
push
fcomp
mov
movsl
les
xchg
int
fbld
xchg
mov
push
dec
and
nop
enter
cmpsb
sbb
or
loop
jae
pop
mov
leave
push
fildll
addr16
loope
into
xchg
test
or
or
int
test
sbbb
cmp
test
adc
mov
scas
fcmovnbe
pushf
add
mov
push
mulb
test
jo
stc
jecxz
dec
add
jg
cli
outsb
loope
cs
or
fs
call
insl
xchg
pusha
daa
push
in
das
jno
pop
cmp
xor
cwtl
jp
sbb
or
fidivrs
add
sbb
insb
enter
push
xor
mov
sbb
mov
js
mov
mov
frstor
cwtl
imul
shll
push
data16
ret
ret
adc
sub
imul
mov
xor
iret
lahf
dec
insb
std
jl
subb
cmp
or
hlt
push
insb
xor
jmp
mov
insb
jne
pop
fldcw
loope
pusha
xchg
lods
in
dec
cmp
cmp
icebp
add
out
add
cltd
scas
popa
fsubs
inc
ficoms
or
dec
insb
sbb
mov
jne
mov
imul
dec
adcb
inc
inc
or
ret
mov
mov
jmp
data16
adc
repnz
push
mov
addr16
out
rcrb
lahf
test
les
pop
das
stos
adc
xchg
call
lret
jl
push
xor
pop
divb
add
popf
pop
movsb
pop
addr16
adc
cmp
js
fsubp
enter
adc
lock
rclb
mov
or
mov
lods
dec
lea
jp
add
push
popf
mov
and
xor
mov
jno
imul
adc
scas
aam
sarl
test
lods
jl
bound
or
mov
divl
dec
inc
fsubs
jns
int3
cmc
xchg
adc
pop
sbb
daa
mov
cmpsb
xchg
cmp
aam
mov
cld
adc
pop
popf
enter
xlat
mov
fcomi
mov
mov
mov
pop
bound
or
mov
jns
push
and
movsb
jae
mov
adc
popa
xchg
cmp
test
push
pop
adc
push
jne
sbb
lds
inc
inc
xlat
inc
ret
int
int3
jb
in
push
rep
andl
ds
xchg
insl
push
mov
sub
mov
mov
std
sub
inc
jno
inc
fsubrs
jg
inc
cmp
cmp
sbbb
mov
dec
xchg
sbb
test
or
mov
push
aaa
sbb
add
jge
xchg
sar
ret
in
scas
jno
movsb
jbe
push
add
jg
scas
sahf
push
xor
xor
jl
sbb
push
inc
shl
aam
pop
jecxz
xchg
inc
pusha
pusha
fsubl
fldenv
popf
mov
loope
sub
adc
je
cmp
lea
sub
push
jne
stos
jb
sub
mov
xor
daa
int
push
clc
fnstsw
mov
jnp
sbb
daa
inc
dec
pop
or
and
out
jecxz
add
fbstp
shlb
adc
sub
or
cmp
andb
xor
sub
cltd
div
sbb
jae
push
lods
push
lea
repz
out
cmp
push
mov
pop
mov
std
jae
push
repz
shll
add
out
mov
std
rorb
jne
sbb
aad
dec
out
sbb
aaa
sbb
or
push
lds
inc
popf
sub
push
out
cld
cmp
mov
inc
push
sti
jecxz
mov
jg
inc
je
or
rcll
mov
int3
pop
imul
mov
dec
mov
outsl
dec
mov
mov
lret
mov
push
sub
and
and
xchg
or
out
rcrl
xlat
addr16
movsl
fidivrs
pop
xor
cmpsb
sbb
and
fisttpl
arpl
inc
dec
mov
fs
mov
cmp
sbb
mov
jmp
push
fucomip
jb
repnz
mov
ret
push
out
sarl
jne
mov
mov
or
jp
into
in
add
sub
testl
pop
lret
adc
imul
mov
mov
jl
je
sbb
mov
cli
test
vpunpckhwd
jmp
adcl
push
lock
sub
push
xor
push
jp
pop
dec
push
testl
xchg
clc
cmp
xor
sbb
arpl
pusha
cmp
xchg
aad
and
pop
or
adc
int3
imul
testb
jmp
ljmp
lods
stc
mov
pop
pop
sub
jbe
je
std
mov
insb
data16
xchg
xchg
iret
ret
faddl
jb
lahf
shll
je
add
icebp
fidivrl
mov
inc
jno
pop
jl
in
jae
sub
adc
add
cmp
xor
das
xor
dec
ds
adc
adc
dec
enter
mov
in
and
or
loop
and
rcll
sub
andb
sbb
pop
insb
inc
popl
xor
pop
mov
sarb
adc
orl
stos
sub
ret
xchg
push
cwtl
movsb
gs
fcoms
mov
xlat
lret
imull
adc
shrl
sbb
sbb
sbb
shll
jl
jbe
or
in
and
adc
xor
fiaddl
jno
mov
movsl
xlat
jb
add
xchg
pusha
push
or
or
jnp
adc
cmp
std
clc
add
fs
fstpl
pop
mov
or
pop
testl
repz
and
cltd
test
add
sub
jmp
sub
lds
aam
or
outsl
sbb
movsl
jmp
xchg
cmpsb
dec
shlb
dec
dec
div
je
and
jno
sbb
xor
ficompl
movsl
xchg
lods
aaa
dec
out
jg
cmpsl
aad
inc
adc
ja
inc
movsb
xchg
lret
and
xchg
push
out
mov
mov
enter
or
xor
movups
add
insl
scas
fisttps
mov
xor
xlat
movsl
sub
idivb
pop
mov
sub
ss
mov
add
pop
loop
test
cmp
lahf
lret
mov
adc
fdivrs
push
sbb
xor
pop
sub
jle
pop
pusha
or
mov
cmp
insl
arpl
in
sbb
lret
lds
out
push
lock
mul
sub
mov
xchg
inc
inc
stos
subb
out
sti
lds
inc
and
jno
test
jge
inc
cmp
pop
and
hlt
or
sbbl
mov
idivb
jae
adc
dec
push
aaa
roll
xor
outsl
sbb
stos
mov
lea
inc
pop
add
in
add
inc
xchg
test
add
adc
pop
stc
loopew
je
xchg
pop
pop
lahf
test
cmp
insl
enter
sub
xchg
cmp
pop
xchg
mov
sub
xor
rolb
ljmp
adcl
xor
ljmp
sbb
test
inc
rcrb
and
shrb
out
mov
or
sub
xchg
repz
inc
cmp
lea
mov
fnstsw
mov
pop
xor
cmpsl
fnstcw
jp
sub
pushf
hlt
stos
jle
shrb
xchg
pop
mov
in
jl
imull
repnz
jns
nop
loop
cmc
jecxz
lock
push
bound
clc
mov
and
add
loopne
into
bnd
push
jmp
aas
push
dec
xchg
dec
pop
int3
loope
jle
cld
push
outsb
out
sub
mov
add
cmp
xchg
fistpl
xchg
movsb
adc
cmpsl
xor
fdivrp
stos
push
clc
mov
cld
xchg
xlat
inc
and
sti
mov
mov
dec
pusha
hlt
push
sarb
or
js
push
pop
std
mov
push
fwait
xchg
push
xor
push
cli
dec
sbb
add
mov
ss
mov
lods
dec
mov
mov
pop
cmp
dec
fsubr
xchg
fcmovu
shll
sbb
iret
dec
add
xorl
fcoml
lods
mov
mov
in
xchg
add
repz
aad
movzbl
aam
js
mov
pusha
jnp
sub
cmp
mov
xchg
stc
mov
inc
dec
ljmp
sub
add
or
mov
pop
imul
out
xorb
push
test
pusha
in
inc
pop
repz
out
rcrl
adc
mov
aaa
fistps
imul
jae
xchg
insb
pop
sbb
mov
fs
sub
mov
dec
cmpsl
pushf
fwait
lock
ds
cmp
lret
insl
out
scas
xor
addb
iret
notb
dec
orb
sbb
push
inc
cmpsb
or
movsl
xlat
shlw
cmp
mov
cmc
jae
pop
inc
sub
inc
pop
jg
cmp
popa
push
fistl
clc
mov
xchg
cmc
xlat
inc
and
xlat
sbb
push
sub
or
inc
xor
aaa
jb
adc
fdiv
gs
out
mov
jmp
fwait
jp
cltd
xchg
in
xchg
dec
leave
add
mov
ret
rclb
add
sub
xchg
jbe
mov
sbb
iret
xchg
out
movsb
adc
cmp
lahf
sub
mov
daa
je
sahf
dec
and
sub
ret
xchg
cmp
call
fbstp
sbb
rolb
dec
add
mov
inc
movsb
stc
cmp
cmpl
ja
test
sbb
incl
jmp
push
jb
dec
sbb
pop
lods
insl
in
sub
jnp
in
aad
adc
xchg
rorl
sbb
add
fsubrs
ljmp
ja
stos
mov
cmp
insb
fdivr
xor
xor
push
mov
out
inc
cmpsl
pop
mov
jp
es
mov
pop
mov
sahf
orl
add
xor
test
ds
daa
jg
adc
dec
xchg
mov
loop
xchg
pop
adc
fsubrl
nop
sub
hlt
int3
xor
dec
jp
scas
outsb
es
cmpsb
mov
push
test
mov
xchg
test
and
mov
enter
jns
jae
fcompp
test
cltd
mov
lock
add
incb
inc
push
pop
into
jns
rcrl
imul
fsubrs
or
dec
mov
xchg
outsb
cmp
sbb
mov
fwait
idiv
mov
data16
fwait
mov
inc
jnp
rep
push
and
push
lcall
cli
mov
stos
jg
push
inc
mov
mov
outsl
mov
xchg
or
add
mov
fistpll
sub
and
scas
mov
iretw
pop
cmp
iret
xor
jne
add
fwait
stos
stos
rcrl
xchg
les
fbld
dec
iret
cmp
sti
faddp
ljmp
aas
loop
add
lods
lea
aaa
pop
loop
mov
jns
add
data16
dec
lret
xor
mov
sub
shll
shl
dec
fs
fs
mov
popa
idivl
or
es
daa
cmp
sub
rcl
dec
addr16
lods
mov
pop
jns
adc
fadds
push
dec
and
je
jae
pop
fcoml
sbb
jne
xchg
inc
xor
data16
and
leave
fwait
xchg
rcl
sbb
pop
dec
pop
xchg
mov
pop
loope
mov
push
mov
scas
negl
rcrb
fidivl
cmp
mov
outsb
in
xor
fidivrl
jge
xor
loop
adcl
outsl
sub
adc
sub
sub
push
sub
push
inc
outsb
push
sub
testl
pop
xor
push
pop
int
jbe
mov
sub
push
lds
loop
decb
jl
xor
fcomps
lds
push
jecxz
fwait
jmp
xchg
inc
push
mov
pop
arpl
mov
mov
cmpsb
sbb
jns
nop
sub
xchg
cmp
inc
pushf
daa
gs
daa
add
arpl
sub
sub
dec
std
sub
sti
in
push
ret
jne
mov
pop
or
mov
call
dec
or
push
es
xlat
dec
lret
dec
add
cmp
repnz
into
jo
inc
enter
xchg
shl
pcmpeqb
ljmp
ficoms
inc
scas
shrb
idivb
repnz
pop
call
imul
cwtl
test
cwtl
inc
cmp
es
xchg
xchg
mov
stos
jbe
not
arpl
pusha
leave
fisubl
jno
mov
pop
repz
inc
xchg
daa
outsb
sub
pusha
add
mov
xchg
and
dec
stos
insl
adc
daa
iret
imul
fisttpll
insl
out
xchg
and
xchg
in
fisubrl
std
and
das
lods
mov
mov
stc
ja
movsb
or
jg
enter
inc
add
mov
scas
aad
mov
nop
fs
arpl
sub
into
cmpsl
push
sti
mov
adc
repnz
or
mov
push
inc
jnp
aaa
movsl
xchg
cmp
les
pop
push
xchg
mov
ret
dec
cltd
dec
adc
loopne
pop
leave
push
add
dec
add
rclb
sbb
sub
push
div
jo
and
test
fidivl
cmp
dec
push
pop
movsl
repnz
mov
or
roll
cmpsl
cmp
stos
rcrb
in
repnz
mov
outsb
and
popf
pop
mov
add
pop
xor
out
mov
into
ja
mov
add
inc
sub
mov
std
mov
mov
mov
xor
and
add
and
sub
sbb
test
adc
jmp
mov
xor
clc
xchg
cwtl
test
inc
ljmp
inc
push
and
int
xchg
out
mov
adc
and
sbb
out
mov
cmp
fs
cmp
jb
sub
lret
scas
mov
cmpsl
loop
lods
xor
negl
ret
mov
shl
adc
mov
into
lahf
icebp
mov
pop
push
loop
test
jns
loop
mov
push
dec
mov
jecxz
scas
inc
mov
adc
imul
sbb
test
jmp
mov
sub
cli
mov
arpl
outsb
adc
sarl
xchg
push
mov
add
mull
test
ret
and
inc
mov
pop
dec
mov
pop
repnz
int
lret
std
sub
cvtps2pd
pop
mov
cld
addr16
repnz
je
test
insl
lds
in
jg
mov
mov
and
out
xor
push
jp
shlb
mov
in
mov
push
enter
adc
pop
testl
cwtl
loop
sub
addr16
inc
push
divl
xchg
ljmp
repz
cmpl
fdiv
jns
cmpsl
dec
mov
jmp
pusha
dec
rcll
push
loop
mov
push
push
add
test
push
cld
adc
aad
sbb
test
xor
lret
mov
fisubrl
hlt
hlt
icebp
adc
pop
and
fildl
mov
or
mov
and
dec
inc
sub
cmp
mov
and
es
sbb
gs
push
jno
cmp
sbb
cwtl
aas
std
jmp
mov
xlat
jle
mov
adc
stos
inc
jne
sarb
jbe
fistpl
andl
pop
mov
daa
fwait
dec
jnp
sarb
cli
ret
lock
js
or
mov
inc
iret
add
into
pop
adc
dec
scas
inc
push
pop
leave
adc
cmp
or
ds
jo
xor
arpl
shll
and
and
scas
jb
mov
mov
adc
stos
jge
xchg
xchg
mov
fs
mov
ret
out
adc
jecxz
fnsave
sbb
das
out
repnz
das
cld
fnsave
sbb
xchg
dec
mov
adc
fdivrp
mov
xor
sub
test
jl
je
jae
int3
pop
sub
aam
movsl
stos
dec
xchg
sbb
leave
stos
inc
xchg
jp
mov
jp
fs
xchg
push
dec
outsb
fcoml
add
mov
into
mov
inc
mov
jno
pop
or
test
div
iret
xchg
mov
mov
rcrl
mov
mov
dec
push
or
stc
pop
xchg
stos
mov
xor
xchg
adcl
push
push
lods
int
mov
pop
jp
add
fcomp
pop
push
cmp
mov
stos
pop
insb
mov
incb
xchg
sbb
xchg
jecxz
adc
pop
cmp
adc
cmp
test
mov
orl
lds
cvtps2pi
pop
xor
sub
pop
mov
subb
movsb
mov
dec
xor
cmp
int3
ljmp
clc
inc
lods
mov
jmp
sub
int3
push
js
jmp
jbe
pop
mov
xchg
xlat
scas
xchg
lret
test
in
and
out
dec
or
mov
loop
pop
enter
nop
push
sub
xchg
add
push
adc
mov
sarl
xor
jecxz
jp
out
xchg
fs
pop
mov
push
sbb
lds
enter
iret
clc
pusha
push
lcall
shlb
sub
add
dec
pop
notl
push
mov
inc
test
loope
mov
out
test
mov
jae
shlb
xchg
push
cmc
in
cli
cmc
xchg
cld
cmp
ds
repz
int
jp
jl
mov
jno
mov
fcmovne
or
jnp
xchg
bound
xchg
jmp
jno
mov
push
inc
pop
fcompl
dec
gs
cmpsl
sbb
xor
dec
dec
stos
mov
int3
out
sbb
push
or
stos
add
and
dec
push
sub
inc
sub
jge
push
jns
fmuls
or
out
lret
popf
mov
xor
pop
mov
xchg
lock
inc
add
fldt
rcll
loop
ds
popa
fsubrp
push
imul
test
add
xor
fcmovnu
jnp
into
xchg
jo
enter
and
jne
fidivrs
jbe
sbb
imul
jne
fisubl
insb
adc
xchg
cmc
mov
inc
xchg
sbb
xor
inc
mov
test
pop
imul
mov
xchg
add
ret
mov
loope
insb
into
push
in
mov
jecxz
mov
cmc
xchg
lods
push
and
dec
in
cmp
fists
stos
mov
stos
lds
adc
sbb
xchg
sub
add
inc
pop
call
push
gs
mov
jno
pop
cmpsl
fdivrl
js
cmc
rcpps
push
or
fs
lds
cmp
setge
push
aam
xchg
sbb
push
data16
or
mov
cltd
cmp
sub
cmp
adc
jmp
stos
loop
xor
mov
or
fistpl
test
lock
in
inc
mov
sub
aad
mov
call
adc
mov
sti
addr16
outsl
jecxz
sarl
mov
cmp
popf
fsts
jns
insb
sub
addb
jnp
aaa
inc
cmpsb
mov
loope
stc
fimuls
lods
imul
jecxz
outsb
ret
jbe
pop
adc
xchg
mov
push
lds
andb
test
xor
pop
sbb
addr16
sub
andl
aam
dec
sbb
push
sub
sub
pop
ds
jecxz
insb
cld
lret
inc
push
jno
push
mov
pop
mov
pop
sub
push
out
stos
mov
jl
pop
lret
mov
push
ret
insl
xor
and
or
leave
cmp
or
adc
popa
mov
or
xchg
and
arpl
adc
jno
nop
push
xchg
jmp
orb
jmp
ds
frstor
sub
jns
shr
and
fidivrl
cmpsb
es
aaa
and
mov
or
clc
push
je
mov
loope
jns
cmpl
fistps
lods
push
jle
adc
fisttpl
mov
insb
cmp
ret
cmpsl
sbb
sarl
sti
jns
xor
xor
pop
mov
xchg
sbb
push
stc
shlb
mov
and
shrb
iret
dec
push
sub
unpcklps
insb
and
ret
cmp
fcomps
and
cwtl
out
aad
nop
xchg
or
hlt
in
lods
test
xchg
sbb
xor
imul
loop
mov
mov
fidivrl
and
xchg
xor
jno
xchg
sbb
fnstsw
sbb
test
sahf
xchg
pop
xlat
outsb
insl
out
in
fidivrs
sub
push
xchg
shrl
rorb
jl
xor
pop
and
push
std
push
out
and
pop
sub
dec
jg
in
int
pop
enter
fisttpll
mov
cmp
inc
loopne
pop
lods
mov
aam
adc
jbe
cwtl
add
mov
adc
mov
cmpsl
dec
xchg
pusha
xchg
int
push
cli
stc
roll
lods
inc
fbstp
cmp
and
cwtl
mov
clc
sub
xor
jae
pop
mov
inc
popf
lods
int3
enter
pop
aad
scas
xorb
ss
ljmp
and
xchg
xor
jle
dec
std
fcoms
adc
repnz
test
aaa
mov
adc
mov
pop
inc
dec
xchg
stos
xor
dec
clc
adc
push
pop
push
xchg
adc
lea
dec
push
insb
or
ljmp
or
out
pop
inc
fxch
aad
insl
call
ljmp
pop
xor
setp
loopne
lock
jmp
mov
jg
sahf
sbb
lods
pop
or
out
lret
int3
push
inc
xor
pop
or
rorl
cli
shl
mov
outsb
push
rolb
ds
mov
aad
sub
outsl
jmp
inc
mov
popf
sub
into
adc
mov
sub
sbb
mov
int
mov
lock
and
sbb
jns
mov
dec
gs
push
add
ds
aad
js
bndldx
mov
icebp
dec
gs
sbb
inc
mov
scas
push
xor
jne
xchg
sahf
out
std
std
mov
pop
dec
adc
lret
ds
loopne
and
call
test
ret
pop
cmpsb
stos
xlat
push
mov
pop
mov
ds
shrb
jmp
sbb
jmp
in
bound
pop
xchg
adc
incb
orb
sbb
ds
xchg
das
bound
insl
jbe
rcl
pop
mov
in
cmp
xchg
cld
outsb
adc
hlt
loopne
adc
xchg
loop
jnp
repnz
jno
in
in
dec
std
cs
repz
nop
cmpsl
cmpsb
push
outsb
aam
pop
add
fmuls
dec
jae
push
mov
lcall
xor
and
enter
mov
into
out
xchg
or
mov
pop
or
and
test
repz
lret
jl
out
and
push
insl
sbb
mov
lods
out
imul
faddl
lret
lret
movsb
dec
imul
insb
or
xchg
and
loopne
mov
aaa
bound
mov
fists
lahf
sahf
xchg
mov
sbb
xchg
test
lcall
in
xor
mov
sbb
fisubrl
mov
leave
loop
or
scas
cmp
movsb
fs
or
mov
sahf
sub
jo
int
int3
mov
sbb
cs
inc
sbb
mov
scas
bound
ds
outsb
cmc
aaa
insl
outsl
cmpl
add
rcrb
ss
pop
or
pop
push
and
lahf
jl
mov
and
repnz
hlt
xchg
cmp
cmp
lahf
dec
shlb
ret
sar
je
lahf
cmp
push
dec
in
xchg
xchg
iret
popf
loope
or
rclb
scas
add
and
and
arpl
int3
aaa
movsl
jns
cmpsb
mov
pop
xchg
cmpl
shll
outsb
cmp
xchg
pushf
mov
and
jecxz
push
out
out
sub
testl
fldl
xlat
dec
or
pop
imul
repz
cmp
fstpl
lret
cmp
mov
mov
femms
dec
aad
jl
pop
cmpsb
push
lret
mov
dec
cmpsb
loop,pt
sbbb
xchg
aaa
xchg
loopne
cmp
stc
mov
rol
in
ret
fwait
add
and
jnp
jns
hlt
cmp
call
pusha
arpl
or
imul
mov
push
aaa
xchg
sub
ss
mov
xchg
add
jmp
out
push
bound
xlat
mov
pop
test
vunpckhps
cmp
jne
fistl
loop
out
fmulp
loop
mov
out
into
insl
into
mov
mov
out
iret
adc
sti
mov
imul
push
lcall
int
stc
lret
jge
lods
scas
rclb
adc
stos
adc
pop
pop
mov
jmp
or
inc
in
mov
fidivrl
lea
mov
in
mov
js
push
ficoml
cltd
sub
push
pusha
jb,pn
jp
rorb
jge
adcb
sti
mov
mov
sbb
in
cli
mov
cwtl
dec
mov
sbb
mov
popf
adc
xchg
pop
jbe
int3
icebp
add
cmpsl
or
and
pop
mov
dec
mov
or
pushf
push
sbb
or
cld
and
pushf
mov
clc
mov
push
ficoml
jnp
in
jecxz
test
push
push
in
cmpl
dec
out
push
lods
arpl
mov
bound
in
sub
dec
shufps
clc
lock
mov
test
fnsave
fisubrs
cmp
aad
pop
adc
or
and
ret
mov
mov
sub
pop
push
jne
or
nop
mov
in
add
adc
pusha
lcall
addr16
cmp
imul
imul
pop
xor
inc
imul
sub
push
dec
iret
xor
jle
daa
sbb
mov
ret
mov
btc
add
sbb
push
jp
ja
out
xchg
cld
lahf
std
loopne
inc
sbb
xchg
xchg
std
arpl
cmpsb
sbb
bound
aam
push
test
sub
sahf
and
mov
sub
push
sbb
inc
bnd
jg
shl
cmp
sarb
sahf
push
jb
push
mov
adc
rcrl
scas
pop
outsl
mov
xchg
popa
xchg
mul
movsl
loope
loope
in
cmp
sbb
scas
push
insl
jno
js
mov
xor
sti
mov
aaa
ljmp
mov
addr16
xchg
xchg
pop
loop
cmp
mov
jmp
jg
lock
xor
jb
lods
dec
pop
pop
push
sub
rcr
push
dec
mov
arpl
scas
push
movsl
pop
inc
xor
shlb
loop
sub
mov
shll
xchg
iret
dec
in
and
dec
xor
jp
xor
cmp
lds
mov
in
jecxz
cmpb
add
sbb
lds
rorb
pusha
mov
fwait
aas
adc
push
mov
pop
aas
pop
fnstsw
xor
test
xchg
movsl
mov
sarl
iret
jno
mov
mov
jae
subl
add
or
and
sbb
add
sub
clc
test
or
and
loope
addl
stos
fadd
mov
or
movsb
rcll
pop
mov
sub
pusha
js
sbb
xchg
push
test
ds
cld
xchg
pop
outsl
push
inc
mov
in
mov
clc
xlat
dec
xchg
xlat
add
mov
inc
ret
mov
xchg
mov
dec
repnz
pop
imul
jbe
xor
in
mov
pop
push
and
push
jo
jns
mov
cmp
add
repnz
inc
push
sahf
sub
sub
or
mov
test
mov
and
cmp
xchg
cmp
pop
test
cmp
cltd
mov
loope
dec
push
fisubs
jb
int3
cmc
dec
sbbl
loopne
mov
and
add
cmpsb
and
or
into
push
lods
adc
cld
jp
push
shrl
and
xchg
mov
addr16
cwtl
xchg
sbb
push
imul
imul
jbe
subb
inc
push
repz
sbb
les
mov
dec
mov
cs
pop
adc
ljmp
jmp
pop
je
js
xchg
pusha
aad
movsb
test
hlt
aad
push
mov
mov
in
mov
mov
sub
dec
loop
sub
test
ret
jnp
mov
pushf
imul
jp
pop
xor
imul
bound
insl
fimull
stc
pop
mov
mov
mov
rol
push
and
cmp
xor
in
fucomp
bound
sub
ror
cwtl
add
in
addr16
pop
iret
pusha
cs
outsl
cwtl
aas
enter
adcl
idivl
pop
icebp
in
int3
xlat
call
fwait
iret
xor
add
aam
lods
mov
imul
xchg
push
aad
pop
sbb
push
mov
mov
push
jo
push
or
dec
xchg
xchg
andb
int
inc
das
xchg
scas
push
sub
jl
outsl
xor
push
faddl
ljmp
add
or
inc
xor
cltd
add
mov
mov
mov
int3
mov
pop
sub
and
push
add
mov
mov
fadds
push
xchg
clc
rcll
lret
stos
add
and
xor
jbe
icebp
pop
or
lcall
cmp
aam
mov
mov
ret
inc
aad
bound
leave
cmp
adc
jo
cmc
adc
or
sub
or
rcr
pusha
sbb
cmp
jp
xchg
sub
xchg
test
mov
xchg
mov
push
sub
in
in
push
mov
cmp
xchg
repz
xor
adc
push
int
ret
mov
jmp
mov
sub
in
mov
adc
mov
test
jecxz
aam
nop
test
inc
fwait
scas
aas
test
push
inc
pop
sub
xchg
xor
aad
pop
mov
xor
lret
into
push
lahf
push
dec
lret
and
shrb
push
mov
mov
mov
push
or
mov
arpl
adc
push
or
stos
push
mov
xchg
adc
ficompl
lret
pop
pop
test
rclb
scas
scas
rcll
xor
mov
pop
pop
iret
leave
aas
push
sahf
pop
and
adc
push
gs
push
mov
pop
xchg
cmp
mov
push
and
sbb
pop
stos
popf
incb
pop
test
sbb
fdivr
mov
shll
daa
leave
xchg
pushf
inc
clc
shll
addr16
xor
shl
lods
mov
sbb
push
insl
push
jne
mov
add
push
data16
loope
push
sbb
imul
jne
jns
and
popf
fimull
xchg
stos
test
mov
mov
mov
jmp
inc
stos
cmpsl
mov
in
mov
repnz
ss
and
push
fdivp
popf
movsb
push
sbb
adc
adc
add
sbb
std
or
mov
add
lea
adc
add
pop
or
dec
push
jo
movsb
sbb
bound
ja
rorl
or
rorl
add
jg
mov
add
mov
cli
pusha
sub
fs
sub
adc
or
mov
xchg
mov
mov
mov
clc
cmpsb
fwait
stc
into
mov
sti
out
sbb
lea
ds
push
aaa
movsb
or
push
sbb
pushf
add
xor
and
sbb
flds
and
pop
js
push
popf
lods
popf
mov
xchg
cmp
ficoml
sarl
inc
stos
push
xlat
mov
fdiv
mov
ret
xor
or
inc
mov
lcall
lret
jns
sbbl
aad
in
xchg
aaa
xchg
out
or
in
int3
xlat
pop
into
lods
push
cli
das
and
cmp
enter
iret
xchg
imul
or
mov
in
inc
nop
mov
adc
pop
aas
fists
mov
icebp
outsl
imul
lahf
out
jns
aam
push
loopne
mov
pop
mov
sahf
orb
test
jbe
cmc
pusha
mov
cmc
xlat
adc
icebp
out
mov
pop
cli
add
mov
notl
fidivrs
jae
scas
repz
insb
sub
xlat
mov
inc
mov
insb
mov
inc
sub
pop
xchg
insl
fs
popf
push
lret
lahf
pusha
adc
inc
cmc
inc
xchg
stos
aaa
ficompl
test
sub
inc
loope
imul
lods
cwtl
xor
jle
mov
sub
jg
fimuls
movsl
lret
jae
addr16
adc
into
xchg
xor
xchg
sbb
push
xchg
testb
adc
imul
xchg
or
in
adc
jae
add
inc
popa
pusha
icebp
xor
ret
loop
jnp
cmp
xor
push
xorl
popf
setae
imul
or
scas
sbbl
lret
decb
push
cli
test
xor
lret
push
insb
dec
sub
aas
ret
out
ljmp
bound
imul
mov
cmp
lret
dec
call
ret
and
dec
into
imul
rorl
cmp
insl
fstpl
dec
jmp
mov
nop
cltd
lret
popf
lods
xchg
les
lods
mov
adc
std
ret
das
adc
icebp
mov
push
shrl
jmp
iret
std
push
clc
cmp
jb
sub
scas
in
aam
rcr
fisttpll
cmp
out
cli
stc
jo
scas
pop
sub
mov
jl
cmp
push
ja
add
cmp
in
jmp
movsl
out
popf
loopne
or
adcb
out
inc
outsb
cld
ret
xchg
xchg
mov
fisttps
sbb
jl
jnp
mov
imul
pop
inc
leave
sub
cmpsl
mov
sbb
and
sarb
adc
xchg
and
out
out
mov
add
stc
lret
pop
in
int
or
push
out
sub
mov
sti
les
fwait
adc
enter
pop
enter
movsb
lret
cmp
sbb
leave
sub
and
shll
cld
adc
outsl
lcall
lock
jp
inc
gs
sarl
push
incb
scas
lret
outsb
adc
dec
pop
leave
testl
pop
das
jno
fbstp
jle
and
xchg
adc
push
lret
lcall
ficomps
setno
sbb
cmp
dec
test
cmp
fadd
pop
shll
lds
cmp
pushf
add
push
and
dec
div
in
and
cld
out
dec
pop
push
cmp
wrmsr
jae
add
fnstsw
int3
mov
mov
pop
popf
shrb
dec
cmp
xor
addr16
mov
push
les
xchg
lea
sbb
and
jns
cmp
fsub
lods
xchg
fstpt
jle
call
pop
mov
inc
test
in
mov
push
adcl
popa
daa
push
ja
pop
cmp
cmp
sub
xchg
or
fcmovnbe
iret
in
fdivl
or
jne
xchg
mov
jle
dec
sti
movsb
stos
test
into
or
or
js
mov
xchg
xor
push
xchg
cli
sbb
xlat
push
loope
add
jl
or
dec
cmp
mov
xchg
mov
inc
and
add
loope
fisttpll
add
ja
sub
sahf
movsl
dec
repz
sarl
inc
dec
or
sarl
rcl
push
or
loope
cltd
jbe
icebp
test
addl
pop
mov
aaa
ror
sarl
lret
pop
lds
jae
mov
in
add
nop
mov
rcrb
add
sub
xor
movsl
jns
inc
mov
jge
mov
cmp
mov
in
ja
sarl
sysenter
sub
movsb
pop
or
hlt
pop
mov
enter
pop
mov
push
pop
xor
popf
pop
mov
inc
dec
and
sbb
xchg
aad
jmp
aaa
pop
testl
leave
jae
aad
or
stc
das
cmp
xchg
mov
and
cmc
in
inc
shll
pop
push
cli
xchg
loopne
inc
jle
add
jmp
cmp
push
enter
out
push
and
xchg
dec
and
xor
enter
xchg
fdivrs
int3
mov
dec
cmpl
scas
cs
mov
adc
gs
dec
inc
mov
pop
mov
nop
pop
xor
xchg
pusha
jne
sbb
scas
sbb
mov
xlat
out
fwait
pop
shl
aad
jno
jne
xor
add
iret
mov
mov
imul
mov
sbb
jmp
mov
filds
je
popf
push
cmp
stos
outsl
or
mov
mov
sti
and
adc
in
movsb
inc
or
mov
dec
sub
mov
decb
div
cmp
push
lods
in
lcall
aam
fs
rcrb
mov
icebp
aam
movsl
or
mov
dec
fsubrl
ja
jae
test
pop
gs
xchg
mov
pop
mov
aad
mov
ret
cmpsl
cld
std
push
adc
adc
dec
popa
imul
sub
and
jo
add
scas
or
fimuls
mov
mov
mov
lcall
mov
jmp
add
xchg
add
cmp
sbb
out
adc
imul
shrb
inc
cmpsl
cltd
mov
xorl
adc
mov
adc
jmp
xchg
mov
cmpsl
mov
orl
mov
sbbb
bnd
fisubl
dec
jo
pop
mov
lret
insb
fnstenv
cmp
xchg
xchg
xor
add
stos
stc
mov
mov
and
ffreep
movsb
or
pop
cmc
out
pop
and
xchg
mov
je
jns
in
jnp
or
or
aas
push
xchg
ror
mov
sbb
pop
push
xor
push
and
stos
xor
dec
mov
sub
jecxz
rcrb
ret
inc
rcll
fwait
mov
call
cmpsb
notb
mov
lret
sub
ret
or
loop
cltd
mov
xchg
xchg
sbb
jg
add
nop
mov
stc
push
and
lahf
sti
orb
xchg
cwtl
movsb
aad
mov
ljmp
imul
dec
in
jle
cmp
cmc
mov
ret
lods
fmull
pop
mov
ret
ret
ja
dec
addb
and
daa
int3
insl
xor
xchg
clc
lahf
mov
cmpsl
mov
bnd
test
enter
aad
lds
lret
cmc
hlt
aad
mov
adc
cmp
ljmp
xchg
enter
fidivl
mov
pop
aaa
stos
jno
or
xor
sub
mov
xor
sub
stos
popa
lret
ds
leave
js
push
xchg
outsl
idiv
out
mov
stos
jmp
xlat
xchg
xor
cli
shl
out
test
xor
jecxz
ror
enter
lock
cmpb
pop
adc
inc
inc
dec
mov
loopne
fdivl
test
push
sbb
jg
mov
mov
lea
mov
push
mov
scas
and
cltd
and
orb
push
add
sub
xor
data16
sbb
out
mov
pop
cli
dec
dec
push
sti
and
xchg
divl
mov
mov
ja
cwtl
xor
out
pop
mov
pushf
mov
add
loope
xchg
repnz
xor
nop
lea
mov
adcl
lock
mov
cmpsl
push
cmp
xor
test
sbbl
addr16
or
inc
pushf
xlat
aas
lea
loopne
mov
mov
or
insl
jnp
and
enter
dec
mov
and
lock
aam
xchg
scas
push
adc
mov
fbstp
adc
jno
in
inc
dec
or
imul
int
xor
pop
leave
or
sbb
jp
rcl
orb
shl
in
xlat
or
fisttpll
pop
and
mov
loope,pt
push
insb
fidivrl
jns
pop
push
xchg
lea
imul
icebp
or
stc
add
lret
leave
ret
dec
cmpsl
popf
sub
pop
in
push
xchg
jne
stc
jae
sarb
mov
pop
add
fs
fildll
arpl
lahf
adc
sbb
pop
push
push
mov
add
insb
xlat
jns
mov
sarb
fcmovu
call
mov
roll
mov
stos
neg
and
daa
lock
pop
cltd
neg
outsb
sub
sbb
jno
lahf
dec
lods
pop
cltd
ja
pop
mov
lret
mov
frstor
dec
addr16
push
stos
push
and
xor
clc
mov
and
fisttps
adc
xchg
sbb
push
cmp
lea
test
mov
fs
xlat
mov
mov
xor
inc
sbb
push
outsb
jp
xchg
jnp
data16
mov
push
fidivrl
aaa
test
pushf
inc
jno
mov
fwait
cld
rorl
or
negb
cmp
push
idivb
lds
flds
mov
repnz
cwtl
cmpsl
jl
push
cmp
xchg
jle
and
cmp
loop
lret
iret
push
idiv
fwait
mov
ret
loop
jns
sbb
sahf
xchg
sub
cwtl
inc
int
jg
mov
arpl
cltd
mov
fdivr
fwait
ljmp
dec
std
movsl
in
sbbb
scas
lret
outsl
jge
mov
push
push
mov
dec
imul
push
cmpl
jp
pop
mov
lds
stc
mov
mov
jno
jmp
iret
dec
cmc
push
ja
clc
push
jns
inc
out
std
mov
loop
cmpsb
adc
mov
movsl
jno
mov
and
cltd
add
leave
and
lcall
insb
add
xor
sarb
js
data16
sti
pop
gs
out
mov
out
out
adc
lock
ljmp
into
mov
push
testl
mov
mov
push
mov
sub
push
in
lcall
mov
mov
or
push
pop
hlt
pop
popf
jo
sub
inc
xchg
cmp
jbe
adc
jae
or
cld
pop
outsb
inc
jo
nop
aas
fsubrs
jg
fs
push
bound
in
cmpsl
lods
jno
push
dec
mov
or
lea
test
outsb
pop
fiadds
rclb
push
cmp
sbb
adc
jne
cli
sub
inc
scas
fsubs
jp
ret
mov
les
cwtl
cmp
pop
sub
xchg
add
add
mov
outsb
xor
dec
jmp
fwait
jge
pop
negb
daa
popf
lods
push
rcrb
add
cld
into
imul
xor
in
mov
dec
les
cmc
pop
repz
xchg
cmpsl
std
jne
lret
jbe
sbb
mov
push
or
inc
mov
lret
and
push
mov
les
cwtl
jmp
or
popa
jle
pop
mov
test
and
std
cmp
push
into
loopne
int3
mov
mov
cs
dec
mov
in
cmp
dec
leave
pop
sbb
sub
out
loope
cwtl
mov
adc
mov
xor
popa
pusha
cltd
scas
pop
loop
outsl
sbb
mov
cmpsl
les
add
sbb
inc
lret
ljmp
mov
cmp
xchg
cmp
pop
idivl
jae
dec
mov
push
sub
jbe
lds
loope
jge
push
mov
in
sarb
cmp
push
sub
fcomps
movsl
jg
mov
mov
xchg
jns
call
or
push
jo
jo
bound
mov
out
sbb
push
ljmp
icebp
add
inc
dec
adc
hlt
mov
fs
mov
inc
dec
scas
enter
lea
aam
in
mov
mov
mov
xchg
rcl
mov
xchg
xor
out
addb
sub
push
cmpsl
xor
std
iret
xchg
pusha
lahf
popa
ja
push
outsb
repz
aad
jge
jmp
lods
cmp
movsl
lcall
enter
xor
sub
sti
xchg
mov
inc
dec
mov
jge
or
mov
mov
in
jne
sbb
cmp
mov
pop
sbb
insb
outsl
test
lcall
jecxz
or
out
sbb
imull
xchg
jno
scas
xor
int
fcoms
shlb
lahf
or
xor
fisubrs
mov
lods
scas
pop
outsl
stos
sbb
or
loop
sub
add
nop
push
and
xor
movsl
nop
fldenv
mov
cmp
add
imul
xor
lret
cmc
mov
jl
xlat
pop
in
and
pop
leave
xchg
in
mov
sahf
ret
shll
push
sub
popf
push
or
push
and
iret
sub
push
mov
mov
shlb
sub
out
jecxz
mov
push
outsl
test
adcl
mov
test
cltd
mov
jo
or
gs
fldenv
jno
dec
iret
xchg
sub
pop
sub
and
and
sarb
ds
js
mov
push
bound
and
push
sub
mov
cmp
mov
mov
cmpl
mov
jmp
sbb
lahf
pop
fsts
imul
lods
arpl
dec
pop
fcomi
jno
fstpt
inc
outsl
rcl
push
fs
test
or
pusha
add
fistpll
test
or
jns
push
jmp
add
lcall
cmp
ljmp
jle
mov
out
fsubl
xchg
xor
insb
ja
test
xchg
inc
stos
or
pop
xchg
push
adc
mov
pop
rolb
jne
mov
adc
mov
fs
loop
cld
mov
dec
dec
scas
cs
fwait
aas
inc
jo
adc
mov
fs
and
lock
pop
add
nop
fstpt
ret
xor
mov
inc
xchg
stos
cmpsb
add
test
js
inc
test
jbe
insl
cmp
pop
test
cmpsb
xor
xchg
icebp
sub
lds
lret
pushf
bound
xchg
in
fistps
call
cmp
sarl
jge
or
ret
cmpb
pusha
aas
or
nop
cltd
jbe
lods
cmp
dec
sub
cmp
pop
jp
scas
fisubrl
mov
fs
rcrl
pop
push
jb
mov
popf
stos
fcomps
in
stos
jle
leave
dec
fisttps
repz
mov
arpl
mov
add
es
popf
imul
sbb
in
fnsave
jae
cmp
fildl
inc
xor
fadds
push
int
xlat
jo
cli
ja
push
rol
mov
inc
push
in
fadds
fs
scas
mov
scas
jae
nop
repnz
adc
sti
and
pop
add
mov
xor
jp
rol
cwtl
jecxz
push
mov
cmp
mov
fsubr
lods
inc
ret
stos
testl
in
mov
test
dec
les
popa
and
rolb
addl
inc
test
pushf
pop
sahf
sti
jbe
xchg
test
sub
dec
mov
inc
sahf
js
inc
jge
incb
xchg
int
push
outsb
aas
bound
mov
jo
mov
cmp
stc
cmpsb
test
les
mov
fwait
sbb
mov
in
or
cmp
out
jae
mov
push
mov
pushw
mov
xchg
enter
arpl
nop
lea
inc
or
in
pop
push
cs
push
mov
mov
cli
jbe
les
dec
pop
fsubrl
fwait
sti
mov
dec
lods
stos
ret
rcll
mov
or
cwtl
sbb
sbb
push
xor
in
sbb
pop
lods
insb
loope
inc
xor
std
xchg
jle
repnz
mov
nop
sti
or
insb
xor
daa
int
cmp
mov
in
pop
movsl
aaa
loopne
add
mov
sbb
lods
adc
fs
sub
jge
or
sti
outsl
cli
ds
fs
mov
out
sub
mov
cmp
jmp
push
push
inc
into
call
movsb
addr16
mov
scas
xorb
cmp
push
shll
sbb
das
or
or
push
add
aas
outsl
xchg
xlat
sbb
lret
or
dec
iret
pand
jno
ljmp
cmp
adc
shlb
cli
jmp
push
jge
pop
jbe
jne
std
das
daa
jae
xor
push
loope
sub
inc
divb
push
int3
imull
and
jge
and
shlb
lcall
mov
and
decb
pop
and
sbb
pop
in
sbb
cmp
add
out
mov
lods
mov
fstpt
decl
mov
test
mov
cmp
lahf
mov
mov
pop
lods
sbbl
ds
out
pushf
pop
addr16
and
fwait
mov
add
bswap
adc
adc
add
push
movsl
hlt
aad
xchg
ds
shll
add
sub
xor
sbb
sub
shrb
adc
rclb
jecxz
orl
xchg
jbe
fucomip
arpl
addb
mov
hlt
movl
cmpsb
adc
mov
cmp
cmp
scas
push
aam
dec
lods
adc
stos
cli
push
test
cmp
mov
push
inc
scas
dec
inc
sahf
loope
lds
out
je
xor
or
sub
test
and
int
mov
test
test
cmpsl
xor
dec
clc
dec
cmpsb
movb
cmpb
or
bound
mov
mov
clc
jo
pushf
jl
or
enter
mov
or
xchg
shlb
xor
dec
add
xlat
not
push
pusha
in
loopne
jnp
dec
bound
shlb
jge
and
outsl
sub
add
inc
loopne
or
sbb
mov
push
cld
and
shl
mov
andb
subps
add
movsb
sub
std
adc
or
data16
into
adc
mov
push
mov
sahf
decl
push
int3
repz
push
jne
mov
or
lret
hlt
scas
mov
in
imul
adc
sarb
add
cmp
cs
faddl
sbb
insb
imul
push
mov
xchg
sti
xor
push
add
call
xchg
outsb
adc
xchg
leave
inc
xlat
inc
sbb
push
mov
push
pushf
lods
adc
pushf
sub
aad
enter
add
cli
push
lahf
imul
xchg
test
je
cmp
sbb
sbb
add
xor
add
ss
gs
aam
scas
push
mov
bound
jl
jo
clc
into
insl
mov
aas
xorl
cmp
inc
sahf
add
out
mov
jns
das
pop
sub
pop
xchg
scas
gs
lods
adc
mov
and
mov
aaa
push
insb
dec
filds
loopne
mov
arpl
and
shrb
sahf
inc
xor
inc
ss
test
dec
dec
enter
imul
dec
in
enter
ds
cmpsl
jns
pusha
shrl
aam
sbb
mov
jne
sbb
mov
push
push
iret
lock
xchg
pushf
lock
ds
push
ds
push
pop
push
dec
xor
into
inc
sbb
inc
mov
cmc
dec
icebp
mov
aaa
fistl
pushf
sbb
push
adc
mov
shl
sub
dec
in
mov
in
nop
push
jbe
mov
push
adc
andl
or
in
xlat
scas
inc
xchg
inc
repnz
cltd
xor
fpatan
je
stos
xchg
es
sti
in
rcl
jns
push
in
movb
cmp
rcrb
out
shlb
lock
sahf
pop
scas
push
push
inc
xchg
cli
pop
dec
clc
addr16
xor
jbe
ret
dec
not
cmp
sbb
mov
aaa
scas
cltd
shll
lock
in
jns
add
cmpsl
test
mov
jns
push
pop
aad
cmp
cltd
adc
xor
add
fisttpl
mov
sbb
das
xchg
push
pop
jl
push
sub
or
std
cmpsl
pop
mov
dec
arpl
or
mov
shll
es
out
xchg
or
dec
ja
mov
cld
push
push
shr
movsl
jmp
fwait
inc
call
hlt
push
mov
push
insb
pop
bound
repnz
iret
lock
push
out
adcl
sbb
xlat
ljmp
out
or
fsts
xorb
xor
mov
sbb
sbb
out
pop
cs
mov
xor
mov
xchg
push
xchg
andl
or
out
or
pop
and
aaa
loop
dec
in
xchg
jnp
mov
inc
in
mov
aam
cmpsl
sub
scas
add
or
je
xor
fstps
sbbl
or
inc
pop
sbb
popa
sbb
imulb
and
aas
mov
mov
cmpsb
addr16
jl
pop
mov
ret
addr16
es
movsl
mov
movsb
pop
sub
sub
push
test
mov
jne
inc
mov
loopne
xchg
imul
decl
adc
stc
pop
shll
ret
pop
jo
adc
insb
jl
jmp
and
and
ja
push
mov
jnp
outsb
xchg
fdivrs
test
or
mov
adc
mov
loopne
scas
lahf
imul
inc
jns
add
lds
sub
dec
xchg
ret
dec
mov
aaa
fmuls
es
dec
stos
push
out
imul
mov
aam
pop
sbb
push
loop
jle
cmp
push
pusha
jb
cltd
fimull
xchg
mov
daa
cmpsl
sti
or
jbe
mov
adc
negl
mov
or
js,pn
test
lret
es
push
inc
test
dec
outsb
jno
push
push
adc
mov
or
mov
ret
lahf
add
lea
insb
lds
aam
jge
fildll
jg
xchg
or
xchg
jmp
sub
repnz
sbb
jmp
imul
or
les
loop
mov
adc
xor
jae
xchg
push
dec
xchg
jns
lea
mov
cmp
sub
push
test
stc
fistps
stos
in
xchg
mov
cmp
cmp
push
clc
ds
insb
jnp
mov
lods
push
sub
out
push
add
cmp
sbb
mov
out
addb
pop
imul
out
inc
xlat
jnp
and
adc
popf
mov
popf
mov
in
nop
mov
in
sbb
je
xor
je
pop
repz
test
int
loopne
lretw
aam
xor
nop
push
xor
pop
lods
xlat
pop
pop
mov
jle
mov
stc
push
dec
loope
cli
add
mov
rcll
cmp
lea
add
and
jl
popl
cmpsl
das
adc
dec
and
xchg
imul
stc
cwtl
test
jnp
shll
test
and
xchg
sarl
enter
or
sub
sub
push
mov
cmpsl
sbb
dec
dec
clc
imul
push
or
into
testl
dec
lods
lock
sbb
int
insb
test
aad
fisubrs
repnz
loope
pop
pop
push
adc
jmp
xor
mov
scas
js
test
mov
rcl
cwtl
cmp
push
xlat
adc
cmpsb
adc
push
push
mov
out
inc
mov
aam
std
push
dec
frstor
jb
outsb
stos
data16
scas
fisubl
rcr
xor
shrl
test
jb
outsl
pop
dec
mov
jmp
and
mov
mov
cwtl
xor
lods
mov
push
and
add
push
ret
repnz
outsl
xor
ljmp
mov
mov
mov
dec
pop
adc
xchg
mov
lods
rorb
dec
popf
mov
or
popf
jo,pt
jg
xchg
loope
in
icebp
das
pop
ret
jae
fdivs
or
mov
in
pop
jecxz
scas
jo
xor
adc
lock
iret
or
dec
mov
dec
push
add
push
mov
push
cltd
sbb
cmp
add
xchg
or
repnz
push
pop
arpl
or
and
cmp
cmp
push
push
xchg
hlt
mov
pop
jg
push
dec
mov
adc
pop
mov
fstpl
idiv
adc
dec
outsb
sbb
cwtd
mov
sbb
out
xchg
mov
mov
or
scas
mov
xchg
or
out
pusha
and
pop
scas
inc
dec
fmul
add
in
jmp
out
push
adc
andb
and
lahf
xchg
loope
xor
or
mov
dec
dec
insb
call
adc
xor
outsb
lods
inc
fists
fstpt
pop
rorb
adc
mov
and
repnz
loop
sbbb
rorl
sub
dec
jo
lahf
dec
in
cmp
sbb
cmp
xchg
push
dec
jge
dec
sub
rol
sbb
sub
aaa
sti
pop
and
pop
inc
and
xor
xor
jbe
test
mov
sub
pop
insb
dec
xor
cmp
jle
xchg
cmpsl
test
into
adcb
les
ret
push
loop
jno
mov
fabs
push
mul
and
jnp
pop
sub
rcr
es
in
xor
xchg
dec
sbbl
and
subb
dec
mov
addl
bound
sub
lock
in
jmp
iret
jmp
pop
in
mov
mov
orl
lock
jmp
sahf
mov
ror
jne
jmp
and
not
add
testl
push
xchg
push
add
in
jg
dec
in
or
mov
and
mov
pusha
cmp
repz
push
shl
xchg
mov
rcrb
call
mov
dec
cmpsb
pop
pop
cmp
je
cmc
adc
fisttpl
push
push
or
mov
xor
into
popf
scas
mov
dec
loopne
fs
jno
mov
cmp
nop
ret
mov
and
test
push
xor
mov
or
mov
xchg
in
data16
jmp
pusha
scas
or
mov
cmp
int
jno
mov
jb
push
mov
gs
mov
lea
das
adc
add
jne
mov
scas
jecxz
lcall
sbb
into
fsubl
fisttpll
test
xor
mov
adc
jbe
cs
movsl
lds
xchg
sub
and
stos
popf
std
sub
add
jo
pushf
out
adc
jle
mov
xor
cmp
rorl
bound
ja
cmp
push
sahf
shlb
or
shlb
push
lds
add
push
loopne
daa
jp
mov
jne
fldcw
mov
push
sbb
sbb
cli
cwtl
out
call
insl
push
mov
imul
es
imul
pushaw
jecxz
xor
sub
adc
popf
cmpsl
das
imul
out
adc
icebp
rorb
lods
mulb
mov
mov
loope
jge
addr16
mov
popa
addr16
mov
sti
mov
shrl
or
cmpsb
cltd
dec
mov
lahf
mov
leave
mov
mov
or
sbb
xor
mov
ret
xchg
mov
dec
call
push
dec
sub
fstps
mov
scas
out
js
mov
pop
xor
int
adc
cmp
lods
nop
mov
sub
enter
sbb
call
test
add
fidivs
cld
xchg
mov
test
into
cmp
pop
les
data16
and
xor
cwtl
xor
aaa
jmp
inc
fwait
in
add
jmp
fcompl
and
gs
xchg
add
iret
data16
adc
mov
sti
adc
ficompl
xchg
cmpsl
push
xor
dec
jge
cwtl
jne
jmp
xor
push
jg
cmp
mov
fcoml
lret
pop
jl
mov
mov
cmp
or
xchg
jnp
mov
adc
and
insl
outsb
int
divl
adc
mov
ja
jno
into
add
xchg
mov
or
mov
test
lret
push
in
dec
mov
outsb
push
fstl
cmp
fs
inc
cwtl
sti
adc
idivb
ror
loop
adc
repnz
xchg
push
jp
xchg
cwtl
fs
loopne
bound
mov
decl
je
mov
popf
mov
adc
in
fs
roll
push
cltd
sarl
push
out
in
cmp
jp
cmpsb
and
fistl
mov
sub
mov
ret
adc
test
insb
or
lret
add
mulb
aaa
push
nop
enter
in
sub
cmpsl
xor
stc
mov
dec
lahf
test
inc
sub
adc
mov
nop
out
fstl
out
mov
mov
enter
lret
sub
xchg
sub
cld
jge
sahf
mov
xchg
lods
sbb
sbb
icebp
test
xor
aam
xchg
cmc
cmp
mov
lock
in
fdiv
mov
stos
lods
jecxz
mov
fmul
cli
ret
push
ljmp
test
push
lock
pop
mov
pop
ja
inc
mov
mov
or
sti
mov
inc
arpl
insb
fadd
sub
in
test
dec
xor
pushf
outsb
inc
lods
movzbl
push
mov
testl
adc
hlt
scas
push
jmp
dec
into
and
es
mov
bound
cmpsl
pop
fsubrl
fmul
mov
xchg
mov
lock
jl
or
and
mov
sarb
ror
out
cmp
out
aam
outsl
pop
mov
outsl
movsl
in
cmp
ret
pop
addr16
int
das
inc
jecxz
add
xor
pop
adc
adc
les
push
adc
jmp
xchg
xchg
js
ret
fmul
gs
xchg
cmp
test
lahf
les
and
je
ret
in
pusha
fsub
andl
pop
mov
dec
int
adc
lret
lds
inc
xchg
ja
fnstsw
xlat
mov
mov
cmp
fcoml
mov
call
cli
jmp
adc
mov
cmp
loope
inc
xchg
nop
pop
sub
sub
sub
mov
push
xchg
mov
xor
ljmp
push
mov
push
xchg
mov
xor
push
xchg
dec
outsb
cmp
std
fsts
inc
sbb
xor
adc
xor
imul
fldenv
mov
mov
outsl
mov
cmp
inc
dec
jge
lock
div
jb
stos
repz
jg
mov
aam
pushf
cmpsl
mov
xchg
add
hlt
mov
xlat
clc
or
jmp
sbb
sub
sbb
lock
popa
mov
push
mov
js
loop
jp
dec
pushf
int
ret
mov
fadds
add
lods
or
ss
leave
and
pop
and
addb
sbb
outsb
inc
jl
call
dec
rcrb
int3
out
andl
test
sub
cli
ss
sub
dec
inc
repz
sbb
pop
push
xchg
or
insl
flds
mov
and
ret
jl
outsb
pop
mov
dec
push
sbb
sbb
adc
jl
ret
lcall
insb
test
pop
sbbl
fsubs
aam
lret
popa
inc
lcall
jbe
fists
lcall
sbb
pusha
stos
pop
mov
loop
loope
insl
jbe
pop
jle
repnz
inc
sbb
bound
mov
outsl
insb
mov
mov
subl
clc
lods
mov
fnsaves
jl
sti
in
es
xor
aam
shrl
push
fiaddl
and
add
inc
es
dec
insb
popa
int3
mov
mov
pop
mov
scas
cmp
xchg
ret
faddl
inc
in
mov
xchg
arpl
cmp
push
xchg
pop
xchg
movsl
addr16
mov
and
sub
lahf
gs
scas
je
fcoms
mov
mov
cmp
rcl
mov
dec
mov
sbb
mov
stos
lock
push
xchg
test
ljmp
lret
aas
push
sbb
loopne
call
shrl
sbb
test
cmp
or
xor
loop
jns
int
push
cmp
add
cmp
cwtl
inc
mov
push
xchg
ror
repnz
xchg
mov
jo
xchg
push
dec
mov
push
inc
aad
popa
pushf
mov
out
je
jmp
es
and
ret
mov
pop
lds
inc
xchg
mov
movsb
call
loope
cld
push
jmp
mov
mov
daa
and
push
scas
test
xchg
je
add
cmc
and
mov
xor
mov
adc
add
and
xor
cld
imul
clc
fisttps
std
in
sarl
cmp
stos
push
lret
inc
loop
jmp
pop
jnp
pop
lea
rol
popf
add
test
cmp
sbb
sbb
push
dec
dec
jnp
push
ds
out
mov
cmp
imul
add
cld
mov
les
arpl
pop
dec
xor
cmpsl
mov
std
ficoms
cwtl
inc
jb
or
out
fisubl
add
fisttpl
inc
jno
leave
fisubs
mov
das
cmp
add
push
mov
lods
and
hlt
es
lea
stos
scas
pop
dec
mov
cmp
mov
cmp
mov
test
add
adc
inc
mov
sub
jge
test
subb
mov
flds
out
xor
dec
fprem1
xchg
lret
loop
xchg
mov
lods
out
ficompl
outsb
sub
mov
cwtl
shlb
arpl
mov
shll
lcall
or
jns
sbb
xor
imul
in
daa
mov
inc
insb
or
pop
in
shrb
xor
popa
or
inc
bound
fidivrl
rorl
sub
xchg
dec
movsb
jmp
sbb
add
aam
mov
das
cli
jbe
xchg
sti
mov
data16
mov
adc
vcvtsi2ss
das
ljmp
mov
push
lods
and
fs
sti
lods
add
insb
pop
stos
jl
fwait
jne
outsb
mov
enter
cmp
sahf
addr16
das
fldl
or
rep
cmp
xor
data16
xchg
fs
dec
ja
insb
fidivs
cmova
mov
rcl
lcall
sub
in
lea
sub
lds
jmp
les
push
jno
jns
xor
sbb
andb
add
sbb
jl
inc
sbb
pop
insb
sbb
cmpsb
test
aam
sbb
decb
data16
cltd
dec
or
and
and
sarl
es
mov
sub
and
jno
inc
cmpsl
mov
addr16
cmp
or
push
das
adcl
jno
push
int3
sub
inc
je
rorl
clc
xchg
movsl
gs
std
repz
sub
and
push
iret
mov
or
push
and
mov
mov
push
cs
aam
mov
adc
jno
cmp
mov
je
cmpsl
jns
adc
adc
orl
push
push
and
enter
jge
push
mov
inc
and
gs
jae
fcoms
xor
add
lcall
scas
repz
push
lcall
out
cmp
adc
movsl
addr16
movsb
mov
out
leave
pop
popf
scas
sbb
inc
sbb
fwait
test
mov
mov
mov
sti
loopne
int
sbb
mov
movb
movsb
rcll
sbb
mov
adc
fnstcw
mov
add
adc
hlt
adc
ljmp
or
scas
or
pop
mov
das
mov
aad
icebp
or
ror
cmpsb
jecxz
lret
lcall
imul
lea
fldenv
imul
mov
jecxz
fs
fsubl
push
cmc
pop
ret
mov
xchg
sbb
inc
and
push
loopne
mov
fisubl
jno
inc
ror
pop
xor
mov
testb
mov
cld
xchg
push
fnstsw
out
fsubrs
jno
jl
sbb
add
and
jg
rorl
ror
add
mov
aaa
inc
hlt
scas
lea
ja
das
rcrb
dec
push
and
and
sub
jmp
sub
popa
cld
ds
and
xor
cli
frstor
mov
insl
in
sub
mov
cmp
mov
mov
lods
jbe
push
test
xor
add
push
push
shlb
mov
pop
icebp
nop
cwtl
fcoml
hlt
rcrl
push
push
outsb
adc
lret
inc
sarl
mov
in
pop
mov
add
and
into
mov
xchg
jae
mov
fstpt
mov
inc
mov
jno
popf
inc
pop
pop
stc
cmp
cmp
xor
js
insl
decb
imul
stos
sub
xor
in
fstl
mov
sbb
cmc
pop
xchg
mov
xchg
cs
jg
cltd
dec
xchg
repz
lods
and
jno
sub
xor
cs
xor
lret
mov
jmp
pop
roll
pop
adc
mov
xchg
sbb
or
or
insl
sarb
mov
out
ss
cmp
cmp
mov
jg
stc
mov
lods
mov
mov
rcll
nop
inc
mov
push
decb
pop
orb
daa
cmpsl
enter
mov
pop
test
arpl
xchg
lcall
enter
mov
add
out
adc
icebp
mov
pop
rcl
push
xlat
out
sub
aad
push
pop
xchg
mov
std
mov
mov
adc
add
pop
fldcw
and
sub
loopne
or
push
sub
xchg
aam
aad
lods
data16
cmc
pop
inc
in
movb
pop
adc
stc
ret
inc
out
mov
jmp
cmpsl
inc
inc
cmp
aaa
push
popf
pop
icebp
cmp
sub
sahf
sub
mov
xchg
cli
loope
fwait
ret
mov
faddl
push
add
jg
and
das
mov
dec
inc
cmp
fsubl
out
mov
sbbl
ljmp
ljmp
add
xlat
mov
cmp
adc
popf
sub
jne
mov
call
aaa
aaa
mov
pop
shlb
arpl
xor
shrl
sti
and
add
lcall
cmpsl
dec
and
jb
inc
mov
ss
cmpsb
jne
and
lcall
push
xchg
mov
aaa
cmc
shll
mov
in
jnp
mov
dec
mov
lods
jl
insb
mov
pop
mov
into
sahf
imul
mov
mov
add
mov
js
and
movsl
dec
lret
or
dec
movsl
into
push
inc
cmp
adc
xchg
push
jns
into
gs
xchg
out
lods
mov
cwtl
scas
fwait
je
repnz
clc
jle
into
pop
xchg
bound
mov
dec
cmp
repnz
sub
jle
mov
mov
adc
fwait
in
pop
fcomp
daa
ret
adc
mulb
pushf
pop
ljmp
sbb
cmovle
cmp
push
inc
jmp
fidivs
rolb
pop
ss
push
cmp
add
iret
xor
and
in
std
mov
add
ficomps
in
push
daa
dec
dec
mov
inc
cmp
adc
xor
out
sti
js
mov
setge
mov
mov
mov
xor
xor
xchg
inc
cltd
mov
cwtl
ljmp
aaa
insb
mov
mov
xchg
mov
sbb
jne
daa
mov
fidivl
xchg
sub
inc
adc
dec
cmc
out
fisttpl
idivl
jne
pop
jns
cld
test
shr
mov
mov
jnp
sub
mov
push
ds
movsb
bound
xor
push
loop
stc
push
push
push
cwtl
jmp
rep
xchg
mov
std
dec
dec
fwait
sbb
xchg
jnp
cmp
fstpt
addr16
dec
out
mov
adc
cmp
jge
adc
and
mov
or
add
jp
lcall
movsl
out
adc
imul
roll
test
ljmp
mov
jg
push
push
int
mov
sbb
jo
insb
imul
xchg
shrd
cmp
xor
xchg
dec
sbb
or
pop
xchg
stc
dec
cmpsb
dec
cs
and
daa
xchg
out
mov
ljmp
cltd
sti
mov
push
sub
xchg
sbb
and
cli
insl
sub
cmp
into
aad
xchg
jmp
pop
dec
and
or
jge
popf
mov
push
mov
fisttps
addr16
mov
pusha
sbb
js
jno
xchg
dec
mov
sbb
shr
lock
lahf
cli
mov
push
mov
sub
orl
xor
insb
inc
movsl
out
fwait
insl
testl
jecxz
lcall
test
gs
lret
rorl
mov
lret
and
iret
or
pop
incb
xchg
getsec
pop
maskmovq
testl
sbb
decl
inc
sbb
sbb
jle
out
daa
push
fbld
mov
or
pop
data16
inc
std
or
sbb
push
xor
cmp
decb
mov
in
mov
inc
pop
icebp
adc
mov
inc
mov
inc
inc
sbb
push
jne
jae
enter
mov
call
pop
mov
adc
cmp
xchg
lea
stos
fidivl
in
lret
xor
pop
inc
sbb
and
lcall
inc
xor
les
idivl
stos
dec
inc
inc
stos
ss
jecxz
sub
and
xchg
xchg
add
ret
pop
dec
mov
daa
out
loop
sub
fdivp
stos
test
mov
clc
popa
push
inc
xor
and
mov
and
jmp
out
pusha
sahf
test
in
jl
pop
mov
test
cmp
std
push
push
bound
sub
jb
pop
sub
fiaddl
repnz
jge
inc
mov
mov
out
outsb
movsb
fisubrs
push
jmp
inc
jmp
and
movsb
test
sbb
decl
sahf
je
pop
imul
mov
jne
lods
pop
push
fists
cmp
cltd
lds
stos
out
mov
enter
scas
sahf
cld
sahf
jmp
sahf
add
cld
fimull
int3
mov
daa
mov
push
lret
sbb
pop
mov
push
push
les
outsl
stos
cmpsl
mov
xchg
in
insl
jae
mov
push
mov
int3
push
cmp
aaa
push
push
into
cmp
inc
scas
jmp
loop
popa
ret
in
arpl
roll
in
inc
es
in
mov
ret
lretw
xor
insl
popa
in
rorb
adc
cwtl
mov
out
or
imul
pop
call
jae
and
inc
out
add
adc
or
in
or
xor
push
js
pop
fucom
imul
in
arpl
and
add
rcl
and
cmp
stos
mov
inc
sub
sub
dec
repnz
adcl
rcl
push
jb
dec
fs
mov
pushf
pusha
rorb
jb
int
or
mov
inc
xchg
stos
pop
out
data16
fwait
mov
sbb
jmp
rcrl
repnz
rcrl
lock
cmp
loopne
aaa
imul
fwait
cmp
sub
insl
bnd
sbb
adc
jns
test
push
arpl
cmp
or
insl
cld
sbb
push
movsb
jnp
das
lock
inc
mov
cld
mov
pop
aam
pop
jbe
pop
sti
int
aas
into
sub
pop
out
scas
push
int
in
jne
ljmp
mov
insb
rclb
adc
or
cmc
mov
mov
sub
xchg
dec
jae
adcb
cmp
pop
dec
adc
sbb
shlb
sbb
jmp
pop
pop
addr16
aas
xchg
popf
push
jmp
ret
sub
rcrb
and
and
inc
cmp
outsl
scas
and
xchg
or
mov
scas
pop
faddp
mov
jge
fistps
icebp
add
mov
xchg
jb
or
adc
mov
imul
scas
jae
lock
js
js
cmp
aad
cwtl
push
mov
addr16
js
jno
push
cmp
jne
xlat
nop
push
push
lret
aaa
rcl
adc
pop
sbb
pop
or
popl
jbe
ds
loopne
push
lea
xor
mov
dec
test
inc
and
lcall
fsts
out
std
lods
sbb
sub
adc
test
dec
xor
cmpsl
push
pushf
or
xor
inc
int3
hlt
and
shll
xchg
test
push
push
cmc
flds
dec
or
mov
or
add
or
addr16
clc
loop
bt
cmp
ja
sub
fsts
clc
jnp
jno
cs
sbb
rdtsc
adc
mov
aas
scas
push
adc
pop
push
mov
mov
push
push
loope
mov
js
sbb
mov
pop
xchg
xchg
jg
ljmp
stos
inc
sbb
jo
xchg
mov
aas
lock
pusha
into
xor
mov
sbb
fimull
imul
sti
pop
ret
mov
imul
add
dec
pop
icebp
push
ret
ja
lahf
outsl
jle
inc
pop
test
ja
inc
jp
aam
jge
jmp
int3
dec
outsl
call
pusha
inc
pushf
inc
dec
ret
icebp
jmp
sub
lds
jns
popa
fists
or
in
adc
jbe
pop
stos
pop
call
inc
mov
mov
mov
push
mov
sarb
adc
pop
mov
aam
sub
or
cmc
inc
push
dec
int3
repnz
cmp
jne
xor
xchg
pop
sarb
in
dec
call
icebp
push
mov
dec
bound
in
inc
mov
mov
mov
rcrl
dec
push
stos
pop
aaa
cltd
sbb
mov
jmp
sbb
rclb
inc
call
fnsave
push
lret
ja
ss
mov
jns
popa
cmp
orb
push
fisttpll
mov
idivl
ljmp
fcmovb
leave
jbe
jl
or
cmpsl
repnz
mov
sbb
jg
mov
bound
adc
add
xor
out
in
loope
pop
cmc
sbb
add
sbb
xor
mov
lods
cmp
mov
pop
adc
cmp
xchg
mov
pop
pop
popf
mov
sub
cmpsl
mov
push
xor
mov
decl
xor
adc
stc
push
mov
push
pushf
popf
dec
fwait
in
repz
add
or
pop
push
decb
nop
or
push
lock
fsubl
push
daa
enter
mov
scas
out
insb
test
pop
dec
mov
roll
xchg
repnz
mull
fisttpll
sub
clc
mov
das
aad
movsb
data16
push
or
mov
and
cmp
inc
pop
fisubs
shlb
cld
arpl
dec
jge
add
mov
mov
arpl
push
out
xchg
iret
ds
adc
lcall
loope
mov
dec
cmpsl
xor
mov
call
inc
inc
repnz
push
push
push
test
inc
or
in
ds
test
aam
jbe
mov
mov
je
xor
je
lods
sahf
movsb
add
scas
fdivrl
addr16
in
scas
fimuls
andl
xchg
inc
scas
xchg
xchg
sub
cs
outsb
sbbl
sub
pop
dec
notl
inc
mov
push
mov
in
sahf
sub
jne
shll
dec
pop
arpl
sbb
in
test
scas
out
loope
fwait
xor
pushf
or
std
mov
lret
mov
scas
mov
inc
paddusw
xor
mov
fbld
sti
mov
push
shlb
add
cmp
jnp
popa
and
mov
cmp
sbb
rcl
or
sub
outsl
push
sbb
repnz
rol
jl
jns
cmp
popa
mov
and
cltd
cli
call
jg
mov
jae
xor
or
mov
popl
fs
rcrl
dec
xor
sbb
adc
test
shrb
sbb
jnp
mov
mov
sti
xchg
mov
push
mov
in
fbstp
mov
and
inc
mov
lahf
xchg
mov
cmpl
pop
add
push
push
mov
pop
push
inc
fcomi
lcall
pushf
loope
negl
push
stc
pop
cmp
roll
jne
pop
addr16
repz
add
out
or
shll
mov
call
mov
andl
push
nop
movb
movsl
push
imul
stos
mov
scas
adc
mov
lret
mov
mov
std
push
push
and
lods
div
or
xor
cmpsl
subb
outsb
xor
and
jge
add
mov
mov
fistpll
fwait
shrl
enter
sbb
add
add
xacquire
int3
jl
scas
mov
in
mov
ret
es
mov
mov
or
loopne
rcrl
and
jp,pt
push
add
sbb
cmp
in
push
and
adc
push
mov
stos
shlb
int3
fdiv
xlat
and
mov
out
inc
stos
inc
loopne
mov
sahf
xchg
adc
test
loope
xchg
out
or
xchg
lds
xchg
add
push
outsb
pop
pusha
mov
inc
adc
or
dec
in
rorb
jno,pn
inc
mov
pop
mov
adc
jns
push
jno
cli
fucomp
call
sti
into
mov
jmp
jg
mov
jp
mov
das
aam
out
test
ljmp
add
push
or
and
push
xor
xchg
pop
test
popa
xchg
mov
inc
push
jmp
hlt
prefetchw
add
fwait
push
jbe
dec
push
ja
adc
repz
mov
mov
out
rorb
loope
mov
push
fiadds
clc
stc
xchg
in
fs
push
mov
es
sbb
xchg
add
jge
or
ss
movups
leave
fwait
adc
adc
sbb
push
stc
mov
ret
jne
lret
dec
mov
or
sbb
mov
dec
aaa
insb
dec
and
mov
pop
xchg
cmp
and
jecxz
lret
rcrb
jns
inc
add
in
pop
in
lock
cli
add
aam
or
in
mov
cli
add
out
dec
pop
adc
inc
fisubs
in
cmpsb
push
sub
aam
stc
lods
arpl
sbb
mov
inc
push
ds
inc
cmp
sbb
inc
shlb
pop
adc
lret
insb
xchg
push
dec
lock
ljmp
push
push
mov
pop
cmpl
aas
xlat
push
pop
outsb
mov
pop
or
mov
sbb
jl
sbbl
insb
into
push
mov
sub
add
sub
mov
xchg
adcl
sub
clc
xchg
addr16
xlat
aaa
jge
push
pop
sbb
mov
or
out
mov
mov
add
dec
mov
fimull
inc
push
push
test
popl
shr
je
loope
test
sbb
push
js
popf
jecxz
iret
test
outsl
incl
dec
mulps
shll
push
xor
adc
cmp
mov
mov
movsl
es
sub
test
mov
mov
and
lods
shl
pop
ljmp
outsb
les
and
cmp
repz
mov
sbb
xlat
mov
mov
adc
in
fstpl
fnstenv
jo
mov
xor
adc
pop
or
cmp
push
adc
jecxz
aas
jno
mov
sbb
fcompl
mov
adc
fistl
cwtl
sbb
in
and
outsb
les
inc
xor
rcr
inc
pusha
sbb
pop
adc
add
cmp
nop
scas
mov
and
popf
pop
sbb
inc
push
cmpsl
scas
jae
scas
shrb
out
lret
pop
bsf
fwait
jae
fwait
xchg
pop
sbb
jg
je
js
hlt
cmp
mov
inc
out
std
gs
aas
jne
imul
push
shlb
push
flds
or
mov
push
rcll
mov
das
dec
je
and
sbb
pop
mov
test
aas
sub
xchg
pop
cltd
shlb
xorb
xchg
sahf
gs
mov
adc
cli
xchg
dec
adcb
dec
mov
lds
sbb
int3
mov
andb
jne
or
mov
and
stc
test
push
shlb
out
xor
addr16
stos
xor
jecxz
or
add
subl
inc
in
sbb
push
shlb
and
test
repnz
push
sub
out
je
int3
out
mov
push
mov
jp
mov
clc
push
test
jecxz
fisubl
and
xor
or
fwait
sahf
sub
inc
or
dec
stos
jb
leave
jno
or
mov
popa
cmc
cmp
xor
out
push
adc
and
iret
test
rolw
jmp
lods
outsb
jb
test
shrb
iret
mov
xchg
rcll
adc
cmpsl
dec
lret
jmp
popf
pop
mov
push
test
lret
dec
cli
imul
ds
adc
jb
cld
jge
or
xchg
imul
jne
mov
xchg
or
xchg
cmp
testl
stc
push
out
sub
repnz
cmp
movsl
cwtl
and
jecxz
inc
jp,pt
cmc
cmp
jae
mov
dec
lds
or
sub
jnp
dec
or
pop
in
addr16
mov
insb
dec
rolb
inc
jno
add
ss
xchg
push
jb
frstor
inc
xchg
test
adc
shl
pop
push
mov
mov
cmp
sbbb
and
mov
fidivrs
scas
push
sbb
sub
fldl
pop
les
outsl
test
cld
inc
int3
dec
bound
or
out
popf
jne
pop
push
cmpsb
push
stc
cld
xchg
mov
imul
pop
scas
aas
inc
pop
outsb
or
fdivrp
jae
jecxz
mov
push
or
mov
sub
arpl
aad
mov
or
add
push
and
data16
cmpb
subl
mov
inc
ret
je
test
push
popf
pop
cmp
xor
daa
test
jle
mov
push
aad
loope
add
repz
ret
call
xlat
fs
jo
mov
leave
fimull
in
mov
in
mov
test
inc
dec
mov
sbb
ss
les
sti
ret
sti
repnz
bound
xor
out
add
mov
cld
cmp
jg
daa
imul
sti
jae
stc
loope
xchg
dec
sarb
jmp
imul
cltd
mov
inc
adc
xchg
rclb
xor
xchg
push
inc
inc
adc
dec
dec
or
inc
pop
je
mov
out
sbb
cmp
inc
hlt
mov
push
int3
pop
jmp
aad
shr
in
dec
in
mov
cvtps2pi
int
sub
outsl
sub
scas
out
cwtl
test
dec
hlt
pusha
mov
dec
scas
enter
sbb
add
cmc
inc
insl
xor
mov
push
lock
cmp
sub
data16
pop
xchg
fwait
mov
pop
and
sub
push
jb
sbb
loop
sahf
dec
fcompl
rorb
lret
enter
out
sub
inc
aas
push
or
loop
into
xor
lods
shll
dec
iret
jmp
std
fdivrl
push
sahf
cmp
dec
and
mov
and
adc
and
ja
jle
dec
stos
stc
enter
mov
int3
mov
fwait
mov
lcall
testl
fcmovb
and
call
push
sub
push
sahf
lcall
lods
jns
shrb
test
pcmpeqb
repz
cmp
push
sbb
inc
inc
sub
call
test
inc
mov
mov
mov
inc
leave
in
mov
stos
push
xchg
cs
lcall
scas
imul
gs
fnstsw
js
int
cmpsb
test
pop
jl
ljmp
mov
inc
dec
out
fwait
ret
clc
in
hlt
test
push
in
iret
sbb
push
cmpsl
push
leave
test
das
jp
pop
adc
scas
loopne
xchg
ficomps
mov
aam
or
jno
ss
jl
or
call
sbb
mov
insl
out
cmp
pop
xchg
pop
imul
inc
dec
or
mov
xchg
inc
xchg
pop
add
dec
push
jmp
bound
pop
subps
or
insl
stc
cmp
push
jno
cmp
mov
fldenv
test
mov
inc
dec
repnz
imul
and
repnz
pop
jge
pop
xor
xchg
ds
int
lods
lcall
cmp
call
jb
push
mov
cmp
in
imul
cwtl
pushf
or
ret
cld
out
jne
iret
sbb
push
push
lods
loopne
stos
sbb
add
fdivp
sahf
push
adc
fs
insb
jno
and
out
adc
iret
js
daa
lock
mov
pop
gs
dec
fxch
sub
jo
repnz
pop
xor
and
lods
or
popf
jbe
jp
sbb
and
outsl
popa
cli
subb
nop
mov
push
insb
popa
cmpsb
addr16
mov
push
stos
outsl
dec
pop
jecxz
and
movsl
je
add
cmp
cli
mov
popl
mov
cmp
out
dec
or
scas
inc
pop
inc
pop
and
sti
and
adc
inc
imul
jne
mov
add
xor
cmpsl
call
clc
stc
inc
cs
je
addr16
add
fcmovne
mov
mov
rolb
push
push
test
pushw
fistps
insl
cmp
sub
cmc
mov
mov
ljmp
pop
idivb
cs
icebp
loop
ret
pushf
pop
xor
enter
add
dec
mov
mov
mov
lret
ljmp
ds
cmp
jno
repz
mov
dec
lds
mov
pop
jge
or
sub
pop
inc
add
push
seto
call
insb
cmp
stos
xor
stc
lcall
in
outsb
repnz
mov
dec
nop
xor
xchg
lds
scas
push
scas
jmp
push
mov
cmpb
repz
rcll
js
arpl
lret
cmp
lcall
dec
data16
cld
sbb
xchg
shrb
adc
push
cmc
mov
ljmp
sub
and
pop
ja
push
loopne
repz
adc
lods
mov
jb
lds
dec
push
xchg
sarb
aam
push
sub
or
ljmp
scas
xchg
pop
sbb
jle
or
lods
fsubrp
pop
jecxz
rcr
lea
in
pop
outsb
je
fsubr
repnz
stos
out
sbb
inc
jecxz
pop
outsl
mov
outsb
out
adc
adc
rol
lock
cmc
sub
inc
cmpsb
mov
and
mov
sub
adc
punpckldq
push
jge
jb
imul
idiv
in
pop
cmp
xchg
mov
movsl
lods
dec
sub
cwtl
andl
in
outsl
mov
sbb
popf
int3
and
and
movsl
ret
stos
pop
lea
ja
in
pop
inc
stc
jbe
mov
ljmp
es
inc
pop
insb
lret
cmp
cmp
xchg
aam
shlb
call
xchg
movsl
xchg
add
mov
pop
fimuls
dec
cwtl
loope
aad
hlt
mov
ja
add
cltd
ds
imul
lret
and
repnz
bnd
mov
adc
cmp
cltd
mov
push
clc
mov
jecxz
aad
fmull
or
dec
pop
jge
scas
bnd
in
jns
and
test
stc
stos
pushf
inc
jp
mov
lds
pop
lahf
jne
sti
lock
call
test
movsl
scas
mov
pop
out
inc
jecxz
jbe
testb
pop
mov
dec
cmp
or
dec
enter
and
lods
icebp
and
and
or
xchg
cmp
fbld
xchg
rorl
pushl
xor
cmp
in
dec
inc
movsl
jno
pushf
push
pop
xchg
mov
xor
rclb
xchg
pusha
test
sub
dec
or
sbb
sbb
and
adc
adc
incb
push
pop
aas
daa
popl
mov
in
jp
out
ljmp
sti
mov
filds
lret
xor
rorw
cmp
rolb
and
sarl
in
push
adc
in
pop
clc
add
pop
push
jg
pop
push
xchg
add
pop
fwait
sar
lcall
in
loopne
repz
jl
les
enter
rolb
aad
nop
out
sub
lea
jmp
test
mov
ds
sbb
pop
fcompl
in
ljmp
stc
adc
out
cwtl
stc
fnstenv
pop
add
cmpsl
gs
in
mov
sub
adc
divb
pop
adc
in
testl
push
cld
js
js
push
push
and
imul
jne
or
mov
and
add
aam
adc
xlat
lahf
popa
fwait
xchg
lods
mov
xor
dec
jge
test
jle
sub
shlb
pop
xchg
int3
adc
fldenv
lock
in
mov
sahf
pop
dec
inc
dec
rolb
add
shll
jbe,pt
adc
nop
push
fdivrs
mov
or
mov
insb
or
daa
sbb
cmp
jno
push
shll
js
rol
sbb
sub
push
jg
aam
mov
xor
ret
fsubp
mov
sub
mov
cmp
inc
adc
sbb
adc
sub
push
sbb
xchg
sbbb
outsb
mov
jl
xor
or
push
fnsave
scas
jb
or
out
lret
ret
mov
dec
pop
cs
adc
and
dec
cmp
pop
sub
add
leave
mov
pop
enter
daa
mov
fcomps
dec
lret
and
movsb
clc
inc
pop
cli
and
cwtl
inc
cmp
mov
test
jbe
xor
xchg
int3
fs
sbb
cmpb
mov
xchg
loopne
into
push
insl
jmp
lock
jne
jb
xchg
movsl
jae
clc
mov
dec
shrl
arpl
add
push
push
popa
pop
jb
andl
loope
mov
xlat
xchg
mov
cmpsb
aas
mov
fwait
push
hlt
lcall
lret
daa
lods
jle
add
cmp
aam
pop
mov
in
xor
scas
and
and
shl
fyl2x
xchg
call
fsubrl
xchg
pop
xchg
addl
push
sub
int
test
push
gs
cmp
add
call
nop
pop
mov
push
push
ss
mov
sub
leave
xor
xor
leave
or
xchg
imul
xor
pop
sub
sbb
xor
fistpll
ja
mov
cmp
je
pop
gs
es
test
sbb
pop
fnstcw
mov
lret
fildl
sub
mov
aam
sahf
lds
lcall
cmpsl
mov
es
popf
loopne
push
gs
mov
add
sahf
dec
lock
mov
cltd
aam
jmp
scas
dec
mov
sbb
sub
stc
aaa
stos
xchg
jp
into
push
mov
xor
clc
pop
adc
leave
out
aam
sbb
push
adc
sub
mov
cmp
popf
rclb
out
pop
or
pop
shll
cmp
dec
adc
sub
mov
xchg
cmpsl
lcall
fidivrs
add
js
out
xchg
mov
dec
jg
das
xchg
sahf
dec
in
cmpl
js
inc
fdivrs
addr16
test
sub
mov
int3
pop
inc
ds
push
sbb
xchg
inc
lret
add
inc
adc
adc
outsl
jae
sbb
pop
mov
or
jo
xchg
cmp
mov
aaa
popa
or
xor
jns
jnp
and
fcoms
lret
jge
cmp
and
mov
mov
scas
push
inc
or
test
adc
dec
dec
push
mov
jo
or
xlat
or
fisttpll
lret
stos
pop
jmp
mov
ret
out
pop
mov
jp
jmp
and
adc
rcrl
push
mov
xor
adc
cs
sub
pop
insl
sbb
les
in
loopne
jle
stos
out
pop
fcmovnbe
jl
xchg
sub
mov
sbb
js
scas
xor
sub
push
sbb
and
les
pop
popa
and
mov
dec
sbb
inc
das
adc
imul
bound
test
in
ja
mov
lret
push
lea
push
jnp
jb
hlt
ret
es
ja
mov
mov
loop
push
es
js
xchg
and
and
jge
call
data16
dec
fnstsw
out
sbb
inc
outsb
mov
sbb
mov
pop
and
xchg
adcl
dec
xchg
pop
cmp
xor
out
xor
in
mov
aas
xchg
mov
imul
sti
loope
in
negb
ja
lahf
xchg
inc
cmp
sbb
sub
ds
cld
adc
mulb
rcrl
dec
lods
add
push
lret
jbe
pop
inc
adc
mov
jg
push
add
pop
in
mov
or
pop
mov
fcoms
aaa
adc
and
xchg
xor
and
dec
xchg
push
pop
ss
jl,pt
inc
and
data16
cmp
call
xorb
aas
fsubrs
out
subl
mov
mov
mov
jo
cmpsl
addr16
loop
push
in
ficomps
push
xor
pop
mov
push
scas
out
iret
out
adc
cmp
inc
jno
shr
into
shrl
aad
imul
mov
push
cmp
dec
scas
mov
pop
ss
rep
xor
ja
xchg
adc
stos
lcall
ss
inc
pop
push
loopne
and
mov
test
push
iret
mov
sub
push
cmp
pop
cmpsl
or
adc
pop
in
cli
imul
push
or
jb
je
cmp
sbb
mulb
ds
mov
push
in
inc
mov
repnz
inc
push
jl
leave
mov
or
cmpsl
into
mov
sub
cmpsb
bound
ret
pop
testb
dec
inc
mov
aad
push
psubw
test
nop
adc
xor
in
ss
out
aas
enter
add
sbb
fstl
add
mov
testb
jmp
neg
aam
jo
fiadds
push
add
push
jl
mov
adc
xor
push
arpl
cli
xor
aas
ret
cmpsb
imul
fwait
sub
ljmp
and
push
jg
cltd
xchg
js
sti
sbb
cmp
pop
and
adc
rorl
sub
push
lds
loopne,pt
mov
jno
pop
popf
ficoms
jno
sbb
or
cmpsl
sbb
dec
sbb
in
ds
cwtl
mov
and
push
or
mov
ljmp
jbe
xor
into
rorl
lret
pop
movsb
icebp
sahf
push
xor
sbb
xor
lea
xchg
lahf
int3
mov
lret
cmpsl
fcomps
out
iret
pop
addb
into
filds
lret
pop
lahf
jge
fsubp
clc
adc
lods
stos
adc
adc
sbb
arpl
xor
loopne
sbb
and
cli
ficomps
fcomp
inc
jge
xchg
xchg
std
roll
ljmp
in
fnstsw
xor
mov
movl
xor
xchg
push
xchg
repz
push
mov
sarl
loop
test
pop
scas
mov
nop
adc
cmp
fsubs
popa
inc
lret
scas
test
into
pop
imul
and
sub
jnp
and
xor
lcall
lea
lds
or
sbb
out
rcll
insl
loop
std
mov
jg
scas
sbb
stos
jo
shll
aas
dec
add
js
lret
mov
jne
test
inc
orb
push
imulb
insl
scas
shll
std
scas
mov
cmp
mov
jns
les
out
fldcw
test
cmc
xor
in
in
jmp
or
std
out
imul
fimull
adc
popf
sub
fbstp
loop
int
xchg
xchg
mov
xchg
jno
std
inc
ror
stos
loopne
insb
jne
xor
jne
or
jne
fsubr
jmp
or
adc
jmp
into
pop
in
mov
test
dec
dec
les
cld
test
jmp
out
test
add
mov
aaa
mov
jmp
cmp
add
pop
dec
les
push
dec
scas
add
cli
fcom
popa
ret
cmpsl
sbb
leave
adc
sub
mov
movsb
enter
mov
out
stos
les
jg
cmp
sub
pop
xchg
and
jae
test
rcll
subb
hlt
js
push
lods
mov
sbb
push
adc
mov
jle
enter
popf
or
fcom
insl
push
adc
inc
inc
test
pop
add
dec
sub
je
pop
mov
and
adc
dec
shlb
pop
setnp
movsb
or
mov
push
mov
aaa
pop
into
stos
pop
add
lcall
popa
mov
jecxz
mov
ret
adc
inc
sub
and
cltd
lds
sbb
shlb
fucom
inc
test
lock
scas
stc
testb
xlat
and
leave
add
imul
xchg
lret
pop
popf
cmp
movsl
pop
cwtl
pusha
call
dec
cli
pop
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
push
pop
add
add
add
sbb
add
bound
add
jb
add
sub
in
sub
add
jns
add
inc
add
add
enter
cli
or
or
add
sub
add
push
add
and
add
add
sub
add
and
add
add
in
add
cmp
or
in
add
fwait
pop
push
add
repz
push
adc
add
dec
add
daa
and
add
add
pop
daa
add
rcrb
add
add
inc
add
js
add
sub
add
and
add
dec
daa
add
dec
daa
add
push
daa
add
xchg
sub
push
push
daa
add
add
dec
daa
add
stos
daa
add
stos
or
and
add
bound
add
add
stos
or
and
or
xchg
add
orb
test
popa
sbb
mov
or
mov
add
add
mov
add
add
mov
add
add
imul
add
adc
add
xlat
or
cmp
add
pop
or
std
movl
add
adc
add
or
push
adc
add
lods
jae
add
adc
add
push
add
add
or
add
or
jecxz
add
cmpsb
je
add
add
sbb
or
fwait
push
add
adc
or
pop
and
jbe
sbb
or
adc
inc
adc
add
add
adc
hlt
adc
inc
adc
or
push
pop
or
sub
add
add
sbb
add
xor
add
pop
or
nop
sbb
add
jns
add
add
add
sbb
add
daa
or
jmp
int3
or
add
add
popf
xor
add
adc
push
add
add
push
or
push
xor
add
popa
sbb
cwtl
jns
add
jp
add
or
ret
jp
add
ja
add
or
mov
or
mov
cmc
adc
mov
xor
add
add
stos
push
or
pop
xor
add
fstps
add
inc
sbb
add
jno
add
sbb
test
add
adcl
add
test
add
xor
push
add
movl
add
add
add
sbb
and
add
lea
add
lret
add
sbb
add
cmp
or
push
cmp
add
or
insl
sub
add
pushf
jge
add
orl
mov
add
mov
cmc
adc
lea
add
je
adc
push
cmpsl
or
xchg
int3
or
mov
or
icebp
fmuls
add
sbb
cmp
add
or
add
mov
sbb
or
mov
adc
imull
add
ret
or
push
inc
add
addr16
add
int3
inc
add
leave
push
add
sbb
fistps
or
or
or
ja
sbb
pop
adc
add
sbb
add
and
jmp
sbb
mov
add
and
pop
mov
or
jmp
jle
add
daa
add
ret
insb
add
sbbl
add
or
out
or
mov
pop
or
cltd
sbb
or
mov
add
add
pop
or
cmp
add
add
jb
add
insb
sbb
ret
insb
add
or
add
insb
add
xchg
ja
add
push
adc
sbb
cmp
add
sbb
sbb
add
out
or
add
sbb
add
push
push
add
add
sbb
add
add
daa
add
xor
pop
jb
add
mov
add
dec
xor
and
fimuls
add
push
or
xor
add
test
xor
or
add
jno
add
and
add
pop
adc
add
push
or
xor
add
mov
or
cltd
pop
or
aas
and
add
and
add
and
or
ret
insb
add
iret
xchg
es
or
fimull
add
dec
sldt
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
add
cmp
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
pop
add
add
pop
add
popa
add
arpl
add
data16
push
add
insb
add
outsb
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
addb
add
add
add
add
add
add
add
xchg
add
add
add
add
add
cmpsl
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
xor
or
and
or
cmpsl
or
add
or
add
or
pop
add
or
pop
add
or
pop
add
push
pop
add
push
pop
add
pop
add
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
mulps
xor
pop
add
pop
add
pop
add
mulps
mov
mulps
mulsd
sbb
pop
add
pop
add
pop
add
pop
add
pop
add
adc
stos
adc
out
pop
add
pop
add
pop
add
pop
add
adc
mov
adc
adc
pop
add
pop
add
pop
add
pop
add
adc
or
add
adc
add
pop
add
pop
add
pop
add
adc
add
adc
pop
add
push
pop
add
pop
pop
add
pop
pop
add
sbb
sbbl
add
sbb
adc
sbb
lret
sbb
xor
pop
add
sbb
push
sbb
dec
sbb
jno
pop
add
sbb
out
pop
add
sbb
add
sbb
add
sbb
pop
add
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
add
pop
pop
add
and
dec
and
adc
pop
add
and
sbb
add
and
add
es
add
es
add
sub
jns
pop
add
sub
repnz
mov
pop
add
sub
push
sub
xchg
pop
add
sub
imulb
pop
add
sub
cmpsb
sub
push
sub
add
pop
add
sub
add
pop
add
sub
pop
add
pop
add
cs
add
add
xor
out
xor
into
xor
cld
xor
inc
xor
pop
xor
cmpsb
xor
lret
xor
and
pop
add
pop
add
pop
add
xor
inc
xor
add
xor
pop
add
xor
pop
add
pop
add
ss
add
pop
add
cmp
xchg
pop
add
pop
add
pop
add
cmp
sbb
pop
add
cmp
pop
cmp
add
cmp
add
pop
add
pop
add
ds
add
pop
add
pop
add
ds
add
aas
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
inc
pop
add
inc
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
pop
add
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
pop
add
dec
pop
add
dec
pop
add
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
dec
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
add
pop
pop
add
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
pop
add
pop
pop
add
pusha
pop
add
pop
add
add
pop
add
pusha
pop
add
pusha
pop
add
pusha
pop
add
pusha
pop
add
aas
xor
and
inc
outsl
insl
dec
bound
arpl
outsl
je
js
push
inc
inc
outsl
insl
push
imul
jb
popa
fs
outsl
fs
inc
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
inc
inc
inc
push
xor
inc
inc
pop
add
aas
xor
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
aas
xor
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
aas
xor
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
outsl
insb
dec
outsb
jo
je
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
aas
xor
outsl
insb
dec
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
popa
push
gs
fs
inc
push
inc
inc
inc
inc
inc
push
aas
and
arpl
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
aas
xor
bound
outsb
jo
je
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
aas
xor
bound
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
jb
gs
imul
inc
push
inc
inc
inc
pop
pop
add
aas
xor
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
je
outsb
jo
je
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
aas
xor
je
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
je
jb
jb
arpl
jae
gs
outsl
jb
push
arpl
jbe
jb
inc
push
inc
inc
inc
pop
pop
add
aas
xor
je
jb
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
inc
pop
pop
add
aas
xor
jb
jo
dec
outsl
jae
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
aas
xor
jb
jo
dec
outsl
jae
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
jb
outsb
addr16
outsb
jo
je
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
aas
xor
jb
outsb
addr16
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
gs
fs
outsl
outsl
insb
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
jb
gs
push
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
outsl
insb
dec
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
bound
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
je
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
je
jb
jb
arpl
jae
gs
outsl
jb
push
arpl
jbe
jb
inc
push
inc
inc
inc
pop
pop
add
aas
xor
je
jb
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
inc
pop
pop
add
aas
xor
jb
jo
dec
outsl
jae
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
jb
outsb
addr16
outsb
jo
je
inc
push
inc
inc
inc
pop
pop
add
aas
xor
gs
fs
outsl
outsl
insb
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
jb
gs
push
inc
inc
push
inc
inc
inc
pop
pop
add
aas
xor
and
inc
outsl
insl
dec
bound
arpl
outsl
je
js
push
inc
inc
outsl
insl
push
imul
jb
popa
fs
outsl
fs
inc
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
push
xor
inc
inc
pop
add
aas
xor
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
push
xor
inc
inc
pop
add
aas
xor
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
xor
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
xor
outsl
outsl
insb
dec
outsb
jo
je
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
xor
outsl
jne
insb
gs
outsb
jo
je
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
xor
outsl
jb
gs
imul
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
xor
outsb
je
outsb
jo
je
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
xor
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
xor
je
imul
je
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
aas
pop
aaa
aas
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
ss
inc
add
aas
pop
aaa
aas
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
ss
inc
add
aas
pop
aaa
inc
outsl
outsl
insb
dec
outsb
jo
je
inc
ss
inc
add
aas
pop
aaa
inc
outsl
jne
insb
gs
outsb
jo
je
inc
ss
inc
add
aas
pop
aaa
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
ss
aas
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
inc
add
aas
pop
aaa
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
ss
aas
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
inc
add
aas
pop
aaa
dec
outsb
je
outsb
jo
je
inc
ss
inc
add
aas
pop
aaa
push
arpl
jo
dec
outsl
jae
inc
inc
ss
inc
add
aas
pop
aaa
push
je
imul
je
inc
ss
inc
add
aas
pop
aaa
push
push
push
outsl
outsl
insb
inc
inc
ss
inc
add
aas
pop
aaa
push
outsl
jb
gs
push
inc
inc
ss
inc
add
inc
fs
outsl
outsb
outsb
arpl
outsb
inc
aas
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
push
inc
inc
dec
dec
dec
inc
pop
add
inc
fs
jb
popa
je
fs
bound
arpl
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
dec
dec
outsl
imul
push
arpl
inc
pop
add
inc
fs
jb
popa
je
fs
bound
arpl
outsl
inc
popa
je
bound
gs
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
fs
popa
je
inc
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
pop
push
inc
inc
dec
inc
pop
add
inc
fs
fs
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
pop
inc
push
dec
inc
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
pop
inc
push
dec
inc
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
fs
bound
arpl
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
xor
inc
pop
add
inc
fs
jb
imul
arpl
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
dec
dec
outsl
imul
push
arpl
inc
pop
add
inc
fs
je
imul
gs
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
pop
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
inc
fs
jb
outsb
jae
outsl
jb
push
jb
js
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
inc
push
gs
inc
inc
inc
push
aas
and
popa
jae
dec
popa
je
imul
pop
dec
inc
pop
add
inc
fs
jb
outsb
jae
outsl
jb
push
jb
js
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
inc
jne
jbe
inc
inc
inc
inc
push
aas
and
popa
jae
dec
popa
je
imul
dec
inc
pop
add
inc
fs
dec
dec
bound
arpl
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
dec
dec
outsl
imul
push
arpl
pop
dec
inc
pop
add
inc
je
popa
arpl
outsl
je
data16
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
dec
inc
outsl
insl
gs
jns
popa
arpl
jns
outsl
je
data16
inc
inc
pop
add
inc
je
gs
jo
push
jne
arpl
push
ja
inc
push
push
push
outsl
outsl
insb
inc
inc
push
inc
inc
pop
pop
pop
add
inc
je
gs
jo
push
jne
arpl
push
ja
inc
push
outsl
jb
gs
push
inc
inc
push
inc
inc
pop
pop
pop
add
inc
imul
jb
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
pop
dec
dec
push
inc
push
dec
push
dec
inc
pop
pop
inc
inc
dec
inc
pop
add
inc
imul
push
jo
popa
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
pop
dec
inc
pop
add
inc
jne
insb
fs
jbe
outsb
je
popa
insl
gs
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
dec
inc
pop
add
inc
jne
insb
fs
outsl
outsb
imul
gs
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
dec
inc
pop
add
inc
jne
insb
fs
push
dec
gs
outsl
jb
inc
jne
data16
popa
insl
gs
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
dec
inc
pop
add
inc
jne
insb
fs
push
dec
gs
outsl
jb
dec
jne
gs
popa
insl
gs
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
dec
inc
pop
add
inc
popa
insb
arpl
popa
je
inc
jae
outsb
arpl
arpl
jns
inc
pop
inc
pop
inc
inc
push
aas
and
arpl
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
jae
fs
inc
inc
jae
fs
inc
dec
push
inc
push
dec
push
dec
inc
pop
pop
inc
inc
dec
inc
pop
add
inc
popa
insb
arpl
popa
je
outsb
addr16
dec
push
imul
arpl
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
popa
outsb
arpl
inc
jae
outsb
arpl
fs
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
push
jbe
jb
insb
outsl
ja
inc
popa
je
push
gs
fs
inc
push
inc
inc
pop
dec
dec
inc
pop
add
inc
insb
gs
jb
popa
insb
arpl
popa
je
outsb
addr16
dec
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
insb
gs
jb
gs
popa
jns
fs
jo
popa
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
insb
gs
jb
insb
jae
popa
je
inc
inc
pop
inc
pop
pop
pop
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
push
outsl
jb
gs
push
inc
inc
push
inc
inc
pop
pop
pop
add
inc
outsl
insl
insl
imul
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
outsl
insl
jo
gs
inc
jae
outsb
arpl
fs
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
outsl
insl
jo
gs
dec
imul
jb
arpl
jae
outsb
addr16
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
jb
popa
je
inc
popa
arpl
jns
inc
pop
inc
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
push
inc
push
aas
and
imul
inc
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
xor
inc
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
pop
add
inc
jb
popa
je
dec
outsb
jo
je
inc
pop
inc
dec
push
xor
popa
arpl
jns
outsb
jo
je
push
jns
gs
inc
push
inc
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
pop
add
inc
arpl
gs
jne
arpl
inc
outsl
jb
gs
imul
inc
push
inc
inc
pop
pop
pop
add
inc
gs
popa
jns
fs
jo
popa
je
push
imul
arpl
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
gs
jb
jns
insb
insb
push
imul
inc
pop
inc
pop
pop
pop
add
inc
gs
jb
jns
imul
outsb
jae
push
imul
outsb
dec
bound
arpl
imul
push
inc
pop
pop
pop
add
inc
gs
arpl
outsl
je
data16
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
dec
inc
outsl
insl
gs
jns
popa
arpl
jns
outsl
je
data16
inc
inc
pop
add
inc
imul
jae
inc
pop
inc
pop
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
inc
imul
jae
inc
pop
inc
pop
dec
push
inc
pop
push
inc
pop
add
inc
outsl
inc
fs
jb
popa
je
fs
bound
arpl
outsl
inc
popa
je
bound
gs
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
gs
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
gs
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
xor
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
inc
fs
jb
popa
je
fs
bound
arpl
outsl
inc
popa
je
bound
gs
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
inc
jae
gs
inc
inc
pop
inc
pop
dec
push
inc
inc
xor
dec
pop
dec
inc
pop
add
inc
outsl
inc
outsl
insl
insl
imul
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
gs
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
gs
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
xor
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
inc
outsl
insl
insl
imul
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
inc
jb
jae
inc
jb
popa
je
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
gs
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
gs
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
xor
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
inc
jb
jae
inc
jb
popa
je
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
inc
jb
jae
dec
jb
imul
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
gs
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
gs
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
xor
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
inc
jb
jae
dec
jb
imul
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
dec
imul
outsb
popa
insb
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
gs
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
gs
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
xor
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
dec
imul
outsb
popa
insb
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
push
gs
outsl
jb
dec
jb
imul
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
gs
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
gs
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
xor
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsl
push
gs
outsl
jb
dec
jb
imul
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
inc
outsb
popa
bound
push
push
dec
outsl
ja
jb
insl
outsb
je
je
outsl
outsb
dec
gs
jo
inc
pop
inc
pop
dec
pop
pop
add
inc
outsb
popa
bound
push
push
push
insl
popa
insb
insb
inc
insb
outsl
arpl
gs
jo
inc
pop
inc
pop
dec
pop
pop
add
inc
outsb
fs
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
pop
pop
pop
add
inc
outsb
jae
jb
push
arpl
jo
inc
outsb
imul
imul
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
pop
pop
add
inc
jb
jae
inc
jb
popa
je
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
jb
jae
dec
jb
imul
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
jb
jae
push
dec
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
js
arpl
jb
jo
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
pop
push
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
pop
dec
inc
pop
add
inc
imul
jae
inc
pop
inc
pop
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
inc
imul
jae
inc
pop
inc
pop
dec
push
inc
pop
push
inc
pop
add
inc
imul
jns
arpl
imul
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
inc
insb
popa
je
outsb
inc
popa
je
inc
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
arpl
jbe
jb
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
insb
jne
push
gs
jb
arpl
jae
gs
outsl
jb
push
outsb
fs
inc
push
inc
inc
pop
pop
dec
inc
pop
add
inc
gs
insb
insb
push
jae
jb
inc
jo
inc
popa
je
inc
imul
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
pop
pop
add
inc
gs
jo
inc
popa
je
inc
imul
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
pop
pop
add
inc
gs
outsl
outsl
insb
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
pop
dec
inc
pop
add
inc
gs
outsl
outsl
insb
dec
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
arpl
inc
pop
dec
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
dec
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
pop
pop
add
inc
gs
outsl
insl
jo
arpl
je
inc
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
dec
inc
pop
add
inc
gs
outsl
outsl
jb
imul
popa
insl
gs
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
popa
jae
push
popa
jb
insl
push
insb
popa
outsb
gs
dec
inc
inc
inc
pop
add
inc
gs
jne
jbe
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
jne
jbe
inc
inc
inc
inc
inc
pop
add
inc
gs
outsl
arpl
jb
imul
outsb
addr16
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
push
inc
pop
push
inc
pop
add
inc
gs
outsl
jne
insb
gs
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
dec
inc
pop
add
inc
gs
imul
je
jb
inc
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
inc
pop
add
inc
gs
imul
inc
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
inc
pop
add
inc
gs
imul
jae
outsl
outsb
inc
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
pop
dec
inc
pop
add
inc
gs
imul
popa
insl
gs
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
inc
pop
add
inc
gs
imul
push
outsb
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
inc
inc
push
aas
and
gs
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
push
aas
and
gs
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
inc
jae
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
inc
xor
jae
fs
inc
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
pop
add
inc
gs
inc
jae
dec
popa
insl
gs
aas
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
dec
inc
inc
push
pop
inc
push
dec
inc
inc
inc
push
inc
push
inc
pop
push
dec
dec
push
inc
dec
inc
pop
add
inc
gs
outsb
je
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
dec
inc
pop
add
inc
gs
je
insl
dec
outsb
outsw
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
pop
push
dec
push
inc
push
inc
push
dec
push
outsb
imul
outsb
inc
inc
push
inc
push
inc
push
dec
push
jns
gs
outsb
outsw
inc
inc
inc
pop
add
inc
gs
inc
dec
inc
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
dec
inc
pop
add
inc
gs
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
dec
imul
inc
pop
add
inc
gs
popa
imul
ja
inc
pop
inc
inc
inc
push
inc
dec
popa
imul
ja
inc
pop
pop
add
inc
gs
outsl
imul
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
pop
pop
add
inc
gs
outsl
imul
outsl
inc
inc
pop
inc
dec
push
inc
push
inc
push
dec
push
jns
gs
outsb
outsw
inc
inc
inc
pop
add
inc
gs
jne
dec
jae
popa
jo
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
dec
inc
pop
add
inc
gs
jne
push
jne
outsb
imul
gs
push
jae
inc
pop
inc
dec
pop
pop
add
inc
gs
bound
arpl
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
pop
add
inc
gs
bound
arpl
jae
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
dec
bound
arpl
jae
inc
inc
inc
inc
inc
pop
add
inc
gs
outsb
inc
jne
jbe
dec
jae
popa
jo
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
inc
dec
inc
pop
add
inc
gs
jb
outsb
je
je
outsl
outsb
dec
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
arpl
inc
push
inc
jne
jbe
dec
jb
outsb
je
je
outsl
outsb
inc
popa
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
inc
jne
jbe
dec
jb
outsb
je
je
outsl
outsb
inc
popa
je
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
gs
jae
popa
jo
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
dec
push
inc
push
inc
push
dec
dec
outsl
imul
inc
inc
pop
add
inc
gs
imul
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
push
imul
imul
inc
pop
add
inc
gs
outsl
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
popa
jae
push
outsl
imul
inc
inc
inc
pop
add
inc
gs
jb
arpl
jae
imul
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
pop
pop
add
inc
gs
arpl
jo
inc
imul
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
push
inc
push
dec
inc
imul
inc
inc
inc
pop
add
inc
gs
arpl
jo
inc
outsb
imul
inc
js
outsb
jae
outsl
outsb
inc
inc
pop
inc
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
pop
inc
push
dec
inc
inc
inc
inc
pop
add
inc
gs
je
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
inc
gs
dec
inc
aas
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
dec
inc
dec
dec
push
inc
push
inc
push
dec
push
jns
gs
outsb
outsw
inc
inc
inc
pop
add
inc
gs
gs
jo
imul
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
pop
pop
add
inc
gs
jb
outsb
jae
arpl
outsb
dec
fs
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
arpl
jbe
jb
inc
push
inc
inc
dec
pop
pop
add
inc
gs
jns
gs
outsb
outsw
inc
aas
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
dec
dec
dec
push
inc
push
inc
push
dec
push
jns
gs
outsb
outsw
inc
inc
inc
pop
add
inc
gs
jns
gs
outsb
outsw
inc
outsl
jne
je
aas
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
dec
push
inc
dec
inc
pop
add
inc
gs
dec
inc
imul
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
pop
pop
add
inc
gs
outsb
imul
outsb
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
push
inc
push
dec
push
outsb
imul
outsb
inc
inc
pop
pop
add
inc
gs
outsb
imul
outsb
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
push
inc
push
dec
push
outsb
imul
outsb
inc
inc
pop
pop
add
inc
gs
outsl
jb
gs
push
inc
jbe
outsb
je
inc
push
push
push
outsl
outsl
insb
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
push
pop
jo
jb
push
inc
inc
jbe
outsb
je
inc
push
dec
inc
inc
inc
bound
jae
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
push
pop
jo
jb
push
inc
inc
jbe
outsb
je
inc
push
dec
inc
inc
inc
bound
jae
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
inc
gs
outsl
jb
gs
push
dec
fs
push
push
push
outsl
outsl
insb
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
dec
push
aas
and
insb
insb
outsl
arpl
outsl
jb
dec
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
dec
popa
jbe
push
jb
je
inc
arpl
jae
push
outsl
inc
imul
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
dec
imul
outsb
popa
insb
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
dec
outsb
dec
outsb
jbe
imul
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
push
inc
inc
pop
dec
pop
pop
add
dec
outsb
imul
inc
pop
pop
pop
add
dec
outsb
imul
inc
inc
dec
popa
imul
ja
inc
push
inc
inc
pop
dec
pop
pop
add
dec
outsb
imul
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
aas
and
imul
inc
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
dec
outsb
imul
dec
imul
jb
arpl
jae
outsb
addr16
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
dec
outsb
jae
popa
insb
insb
push
imul
gs
imul
insb
gs
inc
pop
inc
pop
pop
pop
add
dec
outsb
jae
popa
insb
insb
push
outsb
push
gs
js
gs
imul
insb
gs
inc
pop
inc
pop
pop
pop
add
dec
outsb
je
jb
popa
insb
inc
fs
gs
aas
and
inc
outsl
insl
dec
bound
arpl
outsl
je
js
push
inc
inc
outsl
insl
push
imul
jb
popa
fs
outsl
fs
inc
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
dec
pop
pop
add
dec
outsb
je
jb
popa
insb
push
gs
gs
jae
inc
aas
and
inc
outsl
insl
dec
bound
arpl
outsl
je
js
push
inc
inc
outsl
insl
push
imul
jb
popa
fs
outsl
fs
inc
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
dec
pop
pop
add
dec
outsb
jbe
insb
imul
push
gs
dec
popa
jo
inc
pop
inc
pop
pop
pop
add
dec
outsb
jbe
insb
imul
ja
outsl
jb
jae
inc
pop
inc
pop
pop
pop
add
dec
outsb
jbe
insb
imul
ja
outsl
jb
jae
inc
outsl
insl
gs
jns
push
fs
inc
pop
inc
pop
pop
pop
add
dec
outsb
jbe
imul
and
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
dec
dec
inc
inc
push
pop
inc
push
dec
inc
inc
inc
dec
inc
push
inc
push
je
addr16
dec
push
push
push
inc
push
inc
dec
push
inc
inc
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
push
inc
push
je
addr16
pop
inc
inc
push
dec
dec
inc
dec
inc
inc
push
inc
dec
inc
pop
add
dec
outsb
jbe
imul
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
push
inc
inc
dec
dec
inc
inc
push
pop
inc
push
dec
inc
inc
inc
dec
inc
push
inc
push
je
addr16
dec
push
push
push
inc
push
inc
dec
push
inc
inc
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
push
inc
push
je
addr16
pop
inc
inc
push
dec
dec
inc
dec
inc
inc
push
inc
dec
inc
pop
add
dec
outsb
jbe
imul
insl
push
jb
jo
gs
aas
and
outsl
imul
je
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
inc
inc
push
inc
inc
dec
dec
inc
inc
push
pop
inc
push
dec
inc
inc
inc
dec
inc
push
inc
push
je
addr16
dec
push
push
push
inc
push
inc
dec
push
inc
inc
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
push
inc
push
je
addr16
pop
inc
inc
push
dec
dec
inc
dec
inc
inc
push
inc
dec
inc
pop
add
dec
jae
imul
push
arpl
jbe
outsb
addr16
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
arpl
jbe
jb
inc
push
inc
inc
pop
dec
pop
pop
add
dec
jae
gs
outsl
jb
inc
imul
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
dec
jae
je
jb
gs
push
push
push
outsl
outsl
insb
inc
inc
push
inc
inc
pop
dec
pop
pop
add
dec
outsl
popa
fs
gs
inc
imul
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
inc
pop
add
dec
outsl
popa
fs
gs
inc
imul
fs
inc
pop
inc
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
pop
dec
inc
inc
push
aas
and
popa
jae
pop
insl
popa
jo
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
push
xor
inc
push
aas
and
popa
jae
pop
arpl
jo
jb
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
push
aas
and
gs
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
xor
jae
fs
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
popa
imul
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
push
xor
inc
inc
jae
fs
inc
inc
xor
jae
fs
inc
inc
inc
pop
add
dec
outsl
popa
fs
gs
inc
imul
gs
outsl
jb
inc
inc
pop
inc
dec
push
inc
inc
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
dec
outsl
popa
fs
dec
dec
inc
inc
pop
inc
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
push
inc
push
inc
push
dec
pop
dec
dec
inc
dec
dec
inc
outsl
arpl
outsb
je
inc
inc
pop
add
dec
outsl
arpl
aas
and
inc
outsl
insl
dec
bound
arpl
outsl
je
js
push
inc
inc
outsl
insl
push
imul
jb
popa
fs
outsl
fs
inc
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
pop
pop
pop
add
dec
outsl
imul
insl
insl
popa
outsb
fs
jb
arpl
jae
jb
inc
pop
inc
pop
dec
pop
pop
add
dec
outsl
imul
pop
inc
dec
push
inc
push
dec
dec
dec
push
push
inc
dec
inc
inc
pop
pop
inc
inc
push
inc
inc
dec
inc
pop
add
dec
outsb
inc
outsl
insl
insl
popa
outsb
fs
jb
arpl
jae
jb
jb
jae
gs
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
dec
outsb
inc
outsb
je
jb
arpl
jo
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
pop
pop
add
dec
outsb
dec
gs
jbe
push
arpl
jo
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
pop
pop
add
dec
outsb
push
arpl
jo
inc
jb
outsl
jb
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
push
dec
inc
arpl
gs
arpl
jo
inc
jb
outsl
jb
inc
inc
pop
add
dec
outsb
push
arpl
jo
push
gs
imul
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
push
inc
push
je
addr16
pop
inc
inc
push
dec
dec
inc
dec
inc
inc
inc
pop
add
dec
outsb
push
je
jb
gs
push
outsl
jb
gs
push
inc
inc
push
inc
inc
pop
pop
pop
add
dec
outsb
push
je
je
inc
push
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
xor
popa
addr16
inc
push
dec
push
push
push
push
inc
push
inc
inc
inc
inc
pop
add
push
outsl
jo
insb
popa
je
dec
outsb
jo
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
imul
inc
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
push
outsl
jae
push
jb
arpl
jae
imul
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
xor
inc
pop
add
push
jb
jo
jb
dec
outsb
jo
je
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
push
jb
jae
jb
gs
popa
arpl
fs
outsl
insl
gs
jns
popa
insb
arpl
popa
je
outsl
outsb
jae
inc
pop
inc
pop
pop
dec
inc
pop
add
push
jb
jae
jb
gs
imul
jo
inc
pop
inc
pop
pop
dec
inc
pop
add
push
jb
arpl
jae
imul
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
inc
pop
add
push
jb
arpl
jae
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
xor
add
push
gs
fs
fs
inc
popa
je
push
gs
fs
inc
push
inc
inc
pop
dec
inc
inc
push
aas
and
arpl
inc
push
pop
inc
push
dec
inc
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
pop
inc
push
dec
inc
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
push
gs
fs
outsl
addr16
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
pop
pop
add
push
gs
fs
bound
arpl
inc
popa
je
push
gs
fs
inc
push
inc
inc
pop
dec
inc
inc
push
aas
and
imul
inc
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
push
gs
fs
je
imul
popa
push
gs
fs
inc
push
inc
inc
pop
dec
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
pop
add
push
arpl
jbe
inc
popa
je
inc
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
arpl
jbe
jb
inc
push
inc
inc
pop
dec
inc
pop
add
push
gs
ja
imul
jae
inc
pop
inc
pop
push
inc
push
push
imul
inc
inc
inc
pop
add
push
imul
je
jb
popa
arpl
jb
js
gs
inc
pop
inc
dec
pop
pop
add
push
imul
push
arpl
imul
outsb
dec
bound
arpl
imul
push
inc
pop
push
ss
pop
pop
pop
inc
pop
add
push
imul
outsl
je
arpl
dec
popa
outsb
fs
gs
inc
pop
inc
pop
pop
pop
add
push
imul
jae
je
inc
inc
pop
inc
pop
dec
push
ss
pop
push
inc
pop
inc
pop
pop
dec
inc
pop
add
push
gs
popa
je
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
xor
push
gs
popa
je
outsl
outsb
pop
push
jns
gs
inc
inc
pop
add
push
gs
popa
je
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
push
xor
gs
popa
je
outsl
outsb
pop
push
jns
gs
inc
inc
pop
add
push
gs
popa
je
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
xor
push
gs
popa
je
outsl
outsb
pop
push
jns
gs
inc
inc
pop
add
push
gs
popa
je
dec
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
inc
push
aas
and
arpl
inc
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
inc
push
inc
outsl
insl
dec
bound
arpl
jae
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
push
xor
gs
popa
je
outsl
outsb
pop
push
jns
gs
inc
inc
pop
add
push
gs
gs
jae
inc
outsl
outsb
outsb
arpl
outsb
inc
aas
and
popa
jb
push
outsb
imul
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
inc
inc
push
inc
inc
dec
dec
dec
dec
inc
pop
add
push
gs
outsl
jbe
inc
insb
insb
push
popa
addr16
inc
pop
inc
pop
pop
pop
add
push
gs
popa
arpl
imul
jae
outsl
outsb
inc
inc
pop
inc
aas
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
inc
inc
push
xor
inc
xor
add
push
gs
je
dec
outsb
je
jb
jb
arpl
jae
gs
outsl
jb
push
arpl
jbe
jb
inc
push
inc
inc
pop
pop
pop
add
push
gs
je
imul
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
push
gs
je
imul
jae
inc
pop
inc
pop
push
xor
gs
je
outsl
fs
push
jns
gs
inc
inc
pop
add
push
gs
outsl
jb
dec
jb
imul
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
push
jne
outsb
imul
inc
jne
insb
fs
jb
jo
inc
pop
inc
pop
dec
pop
pop
add
push
jne
outsb
imul
jae
popa
dec
jb
imul
pop
inc
pop
dec
pop
pop
add
push
jne
outsb
imul
imul
jb
imul
pop
inc
pop
dec
pop
pop
add
push
jne
outsb
imul
outsb
cmp
inc
pop
inc
pop
dec
pop
pop
add
push
jne
outsb
imul
dec
jb
imul
pop
inc
pop
dec
pop
pop
add
push
popa
jbe
dec
imul
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
push
popa
jbe
dec
jb
imul
arpl
gs
arpl
outsb
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
inc
inc
push
aas
and
arpl
inc
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
aas
and
inc
outsl
insl
push
je
inc
push
dec
dec
outsl
imul
push
arpl
inc
inc
push
dec
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
pop
dec
inc
pop
add
push
gs
arpl
gs
je
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
dec
inc
pop
add
push
outsb
fs
outsl
jo
inc
popa
je
dec
gs
popa
addr16
inc
pop
inc
pop
push
inc
push
dec
push
dec
inc
pop
pop
inc
inc
xor
inc
inc
dec
inc
pop
add
push
outsb
fs
popa
imul
inc
inc
push
aas
and
popa
jae
arpl
je
imul
aas
and
push
jb
imul
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
pop
push
inc
xor
jae
fs
inc
xor
xor
inc
pop
add
push
gs
outsl
outsl
insb
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
pop
dec
inc
pop
add
push
gs
push
push
inc
bound
inc
insb
popa
addr16
inc
pop
inc
pop
pop
pop
add
push
gs
outsl
outsl
jb
imul
popa
insl
gs
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
inc
inc
push
aas
and
popa
jae
push
popa
jb
insl
push
insb
popa
outsb
gs
dec
inc
inc
inc
pop
add
push
gs
outsl
jne
insb
gs
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
pop
add
push
gs
imul
gs
je
fs
bound
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
dec
inc
pop
add
push
gs
outsb
jo
je
jo
popa
je
push
gs
jae
outsl
outsb
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
pop
pop
add
push
gs
outsb
je
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
dec
inc
pop
add
push
gs
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
push
inc
push
dec
imul
add
push
gs
bound
arpl
jae
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
inc
inc
push
aas
and
inc
outsl
insl
inc
insb
popa
jae
push
je
inc
push
dec
bound
arpl
jae
inc
inc
inc
inc
inc
pop
add
push
gs
bound
arpl
jae
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
push
inc
push
dec
bound
arpl
jae
inc
inc
inc
pop
add
push
gs
bound
arpl
fs
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
push
inc
push
dec
dec
outsl
imul
push
jns
gs
outsb
outsw
inc
inc
inc
pop
add
push
gs
jb
outsb
je
je
outsl
outsb
dec
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
inc
inc
push
aas
and
arpl
inc
push
inc
jne
jbe
dec
jb
outsb
je
je
outsl
outsb
inc
popa
je
inc
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
push
inc
jne
jbe
dec
jb
outsb
je
je
outsl
outsb
inc
popa
je
inc
inc
inc
jae
fs
inc
inc
jae
fs
inc
inc
pop
add
push
gs
outsl
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
inc
inc
push
aas
and
popa
jae
push
outsl
imul
inc
inc
inc
pop
add
push
gs
arpl
jo
inc
outsb
imul
imul
inc
inc
push
inc
inc
dec
push
pop
inc
push
dec
inc
inc
inc
inc
pop
add
push
push
ja
push
arpl
jo
inc
outsb
imul
imul
inc
inc
push
inc
inc
dec
pop
pop
add
push
je
jb
inc
push
push
push
outsl
outsl
insb
inc
inc
push
inc
inc
pop
pop
pop
add
push
je
jb
inc
push
outsl
jb
gs
push
inc
inc
push
inc
inc
pop
dec
pop
pop
add
push
jne
jo
gs
inc
push
push
dec
gs
imul
arpl
inc
pop
inc
pop
pop
pop
add
push
jne
jo
gs
inc
push
push
dec
gs
imul
arpl
push
outsl
jb
gs
push
jae
jne
outsb
imul
pop
pop
pop
add
push
outsb
insb
outsl
arpl
aas
and
inc
outsl
insl
dec
bound
arpl
outsl
je
js
push
inc
inc
outsl
insl
push
imul
jb
popa
fs
outsl
fs
inc
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
push
inc
inc
pop
pop
pop
add
push
outsb
jb
imul
je
jb
popa
arpl
jb
js
gs
inc
pop
inc
dec
pop
pop
add
push
outsb
jb
imul
outsl
je
arpl
dec
popa
outsb
fs
gs
inc
pop
inc
pop
pop
pop
add
push
jo
popa
je
push
imul
jae
inc
pop
inc
pop
pop
pop
add
push
dec
pop
dec
dec
dec
pop
inc
dec
dec
dec
inc
dec
inc
push
push
dec
inc
inc
push
push
dec
push
inc
inc
xor
add
push
popa
imul
outsb
arpl
fs
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
pop
dec
pop
pop
add
push
popa
imul
inc
push
push
push
outsl
outsl
insb
inc
inc
push
inc
inc
pop
pop
pop
add
push
popa
imul
inc
push
outsl
jb
gs
push
inc
inc
push
inc
inc
pop
pop
pop
add
push
jb
je
dec
outsl
addr16
inc
pop
inc
pop
inc
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
inc
pop
add
pop
inc
popa
arpl
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
dec
push
inc
pop
inc
inc
push
pop
inc
push
dec
inc
inc
inc
push
inc
push
inc
pop
dec
inc
pop
add
pop
inc
popa
arpl
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
dec
push
inc
pop
inc
inc
push
pop
inc
push
dec
inc
inc
inc
push
inc
push
inc
pop
dec
inc
pop
add
pop
inc
gs
outsb
je
imul
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
push
inc
push
pop
inc
push
dec
pop
dec
dec
push
dec
inc
push
pop
inc
dec
push
push
pop
inc
inc
push
dec
inc
inc
pop
pop
add
pop
inc
gs
outsb
je
imul
imul
inc
inc
push
inc
push
inc
push
pop
inc
push
dec
pop
dec
dec
push
dec
inc
push
pop
inc
dec
push
push
pop
inc
inc
push
dec
inc
inc
pop
pop
add
pop
inc
gs
popa
ja
outsb
imul
outsb
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
push
inc
push
dec
push
outsb
imul
outsb
inc
inc
pop
pop
add
pop
inc
gs
popa
ja
outsb
imul
outsb
inc
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
push
inc
push
dec
push
outsb
imul
outsb
inc
inc
pop
pop
add
pop
dec
outsb
je
jb
popa
insb
push
jne
jb
dec
outsb
je
jb
popa
arpl
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
inc
inc
push
pop
inc
push
dec
inc
inc
inc
push
inc
push
inc
pop
inc
pop
add
pop
dec
outsb
je
jb
popa
insb
push
jne
jb
dec
outsb
je
jb
popa
arpl
push
arpl
jo
dec
outsl
jae
inc
inc
push
inc
inc
dec
inc
inc
push
pop
inc
push
dec
inc
inc
inc
push
inc
push
inc
pop
inc
pop
add
pop
outsb
je
imul
aas
pop
inc
gs
outsb
je
imul
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
push
inc
push
pop
inc
push
dec
pop
dec
dec
push
dec
inc
push
pop
inc
dec
push
push
pop
inc
inc
push
dec
inc
inc
pop
pop
inc
xor
inc
push
xor
inc
add
pop
outsb
je
imul
aas
pop
inc
gs
outsb
je
imul
imul
inc
inc
push
inc
push
inc
push
pop
inc
push
dec
pop
dec
dec
push
dec
inc
push
pop
inc
dec
push
push
pop
inc
inc
push
dec
inc
inc
pop
pop
inc
xor
inc
push
xor
inc
add
pop
je
push
inc
imul
dec
insl
jo
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
inc
and
aas
pop
inc
push
dec
inc
pop
xor
xor
xor
arpl
xor
xor
pop
popa
arpl
pop
xor
xor
xor
cmp
xor
pop
jae
inc
push
dec
inc
inc
inc
inc
and
aas
insl
pop
insb
imul
je
dec
outsl
fs
gs
inc
push
dec
inc
inc
xor
inc
push
dec
inc
inc
inc
inc
and
push
push
push
push
inc
and
push
push
push
push
inc
push
inc
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
inc
push
dec
inc
inc
inc
inc
push
dec
inc
inc
xor
inc
outsl
insl
push
jns
gs
outsb
outsw
dec
outsl
insb
fs
xor
add
popa
fs
outsl
dec
imul
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
dec
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
arpl
arpl
popa
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
push
inc
push
inc
push
dec
dec
outsl
imul
dec
imul
add
arpl
arpl
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
pop
pop
add
arpl
inc
inc
xor
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
inc
add
arpl
jb
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
dec
inc
pop
add
arpl
insl
imul
je
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
pop
pop
add
arpl
popa
je
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
push
inc
pop
push
inc
pop
add
arpl
popa
je
dec
outsb
jo
je
jns
gs
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
push
xor
popa
arpl
jns
outsb
jo
je
push
jns
gs
inc
inc
pop
add
imul
dec
inc
outsl
insl
gs
jns
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
pop
pop
add
imul
jo
popa
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
inc
inc
pop
add
addr16
push
push
outsb
addr16
outsl
ja
inc
inc
xor
inc
add
addr16
push
popa
imul
ja
inc
xor
push
dec
push
dec
inc
pop
pop
inc
inc
inc
add
addr16
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
dec
push
inc
push
inc
push
dec
dec
outsl
imul
jb
inc
popa
arpl
jns
outsb
jo
je
inc
inc
pop
add
addr16
popa
insb
jne
inc
inc
outsl
outsl
insb
dec
outsb
jo
je
inc
push
inc
inc
dec
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
addr16
popa
insb
jne
inc
inc
outsl
jne
insb
gs
outsb
jo
je
inc
push
inc
inc
dec
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
addr16
popa
insb
jne
inc
dec
outsb
je
outsb
jo
je
inc
push
inc
inc
dec
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
addr16
popa
insb
jne
inc
push
je
imul
je
inc
push
inc
inc
dec
push
inc
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
addr16
outsb
popa
insl
gs
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
push
inc
push
inc
pop
push
inc
pop
add
addr16
outsb
jne
dec
outsb
jo
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
push
inc
dec
inc
pop
add
jb
insl
outsl
jbe
dec
popa
jae
dec
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
pop
pop
add
jb
jae
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
pop
pop
add
jae
je
outsb
jo
je
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
dec
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
jae
je
popa
insb
jne
inc
inc
outsl
outsl
insb
dec
outsb
jo
je
inc
push
inc
inc
dec
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
jae
je
popa
insb
jne
inc
inc
outsl
jne
insb
gs
outsb
jo
je
inc
push
inc
inc
dec
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
jae
je
popa
insb
jne
inc
dec
outsb
je
outsb
jo
je
inc
push
inc
inc
dec
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
jae
je
popa
insb
jne
inc
push
je
imul
je
inc
push
inc
inc
dec
push
je
addr16
inc
push
dec
inc
dec
push
inc
inc
inc
pop
add
jne
fs
je
inc
inc
outsl
insl
gs
jns
popa
arpl
jns
popa
jae
inc
inc
push
inc
inc
dec
pop
pop
add
ja
jae
gs
inc
xor
pop
dec
outsl
addr16
push
data16
xor
pop
dec
outsl
addr16
imul
jne
data16
xor
pop
outsb
insb
imul
arpl
add
insb
imul
inc
xor
