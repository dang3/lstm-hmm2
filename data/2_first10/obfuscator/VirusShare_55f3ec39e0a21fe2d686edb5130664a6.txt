pusha
push
inc
pop
add
adc
adc
add
sbb
or
xchg
movw
sbb
jmp
cld
or
inc
add
rcrl
add
hlt
push
adc
or
movl
push
inc
pop
sub
or
paddd
jmp
sub
pop
and
xor
xor
dec
movw
add
jmp
pop
movsl
mov
iret
sbb
sub
inc
movw
jmp
cltd
and
mov
shl
in
in
enter
fadd
xlat
or
roll
or
or
and
sbb
inc
movw
movq
sbb
add
xor
or
andps
or
or
packuswb
or
movl
punpckhdq
sub
add
jbe
movups
or
push
inc
pop
sbb
jmp
push
iret
jae
add
shr
and
or
adc
jmp
mov
les
add
movlhps
jno
movaps
adc
jle
push
xchg
pop
sub
psubusw
jne
xchg
movb
jbe
xor
jmp
mov
mov
in
imul
add
jle
jo
push
in
push
cmc
pop
adc
jns
jmp
push
repnz
movb
xor
jo
pmaxub
sub
and
add
jge
xor
punpckhdq
adc
push
lahf
pop
sub
movw
shl
jb
push
dec
pop
jmp
pop
and
paddb
xchg
movw
sub
push
xchg
pop
xor
push
clc
pop
jns
or
add
punpcklbw
jmp
ja
jecxz
outsl
sub
cmpl
jne
sub
mov
jmp
add
add
mov
mov
sbb
inc
mov
jmp
dec
imul
data16
dec
aaa
data16
dec
aaa
movsb
sbb
jb
add
fstps
jmp
mov
enter
int3
cltd
pop
fcmovu
sbbl
cld
pop
loop
or
movsb
filds
pop
mov
dec
pop
rcr
fstps
or
mov
fstps
aaa
data16
fidivrl
mov
mov
jns
mov
icebp
jg
mov
pop
mov
fildl
enter
mov
pop
fmul
lret
aaa
test
sbb
dec
add
enter
mov
pop
or
imul
fistps
mov
into
sbb
cmp
mov
inc
lock
jmp
mov
pop
fiaddl
mov
mov
jno
mov
cltd
xor
mov
icebp
jne
leave
cltd
xor
sbb
mov
mov
into
loop
or
sbb
and
cmpsl
mov
push
xor
mov
pop
mov
push
push
notb
daa
xchg
les
pop
fadds
lcall
movsb
dec
aaa
data16
mov
cltd
add
and
dec
cmp
icebp
pop
mov
cltd
xor
dec
shlb
pop
addr16
lcall
cld
adc
sbb
cltd
loop
mov
jno
pop
pop
cmp
repz
enter
lcall
adc
cltd
pop
mov
fldcw
adcb
mov
fldcw
mov
pop
cmp
pop
jae
ficompl
pop
mov
adc
mov
cwtl
test
loopne
pop
or
cli
or
pop
cmp
adc
xchg
pop
or
and
lret
and
lret
and
lret
and
lret
and
add
dec
pop
rcll
cmp
iret
test
insb
cmpsl
ror
in
popf
push
mov
pop
mov
in
adc
les
adc
out
cmp
pop
mov
jg
enter
or
cmp
ror
in
lea
mov
sbb
ja
sbb
enter
xor
pop
mov
push
shr
les
and
xchg
xchg
pop
outsl
cltd
lret
xchg
sbb
mov
mov
stos
adc
mov
icebp
lcall
cltd
lret
fmuls
lret
mov
sbb
mov
enter
lret
pop
fdivs
leave
mov
inc
sahf
fdivs
xor
enter
in
data16
mov
leave
mov
lret
pop
fdivs
leave
or
ret
add
or
dec
cmp
sbb
xor
fmul
les
xchg
xor
movsl
shlb
loopne
pop
mov
sbb
mov
pop
fdivs
adc
or
mov
inc
sbb
mov
adc
mov
std
cli
stos
enter
or
jnp
loopne
sub
mulb
xchg
adc
push
mov
jg
js
sbb
enter
jne
sbb
enter
dec
pop
pop
fiaddl
mov
mov
jno
mov
cltd
shlb
mov
mov
jno
mov
cltd
shlb
jp
repnz
enter
into
sbb
movsl
mov
pop
cmp
icebp
cmpsl
movsl
mov
pop
mov
lahf
fdivs
cwtl
fldcw
stos
imul
clc
aaa
hlt
mov
lock
mov
cmc
xor
enter
lods
aad
sarb
cltd
sbb
mov
fdivrs
mov
imull
movsb
cmc
jne
movsb
cmc
pop
cld
mov
jmp
adc
fwait
cld
cmp
mov
in
das
ret
pop
xlat
stos
in
cmp
mov
fcomps
mov
loopne
fsubrl
in
xor
cmpsb
leave
sub
stos
cld
sub
enter
enter
enter
enter
enter
in
cltd
mov
mov
fcomps
enter
add
add
lods
addb
add
add
add
jns
add
push
add
add
add
add
add
add
add
add
insb
nop
mov
xchg
gs
loope
add
mov
fwait
cs
sahf
mov
jbe
dec
or
or
jmp
das
test
ss
mov
jmp
out
jns
add
add
add
ds
mov
cmp
pop
lds
sub
jp
cmc
clc
pop
jae
xchg
pop
or
test
and
jae
popf
pop
sub
loope
mov
stos
dec
popa
gs
pop
ja
loop
mov
out
jno
sbb
add
add
push
scas
add
mov
scas
push
mov
fs
jbe
dec
add
sub
add
add
add
add
add
add
add
and
add
roll
imul
add
add
add
add
add
add
add
add
push
add
push
add
add
add
push
add
mov
add
lods
add
add
push
add
add
add
arpl
add
fwait
and
xchg
add
mov
lea
add
add
add
mov
add
lds
add
je
add
les
add
add
inc
cli
ds
add
mov
insb
fadds
add
add
add
addl
add
add
add
scas
mov
pusha
jecxz
add
jb
add
and
add
imul
add
add
add
add
fcoml
add
inc
sbb
and
push
add
add
jae
pop
mov
add
push
or
sbb
arpl
cld
jno
mov
inc
jae
pop
jecxz
dec
dec
pop
daa
jbe
cmpb
aad
cmc
cmp
into
mov
adc
dec
sbb
sub
adc
cmpsl
sub
add
insl
mov
mov
nop
pop
mov
aad
mov
pop
push
pop
cmp
leave
icebp
cmp
xor
and
pop
stos
lock
push
xor
insb
jb
mov
pop
push
xorb
mov
and
lock
pop
js
lock
in
loopne
sti
xchg
imul
mov
dec
icebp
sbb
jl
adc
adc
mov
out
aad
addr16
dec
jp
mov
adc
or
jbe
sbb
pop
pop
test
inc
lahf
or
repnz
or
pop
mov
sbb
and
xor
push
lods
mov
test
ss
sub
ds
into
popa
movsb
dec
out
inc
push
add
bound
lret
pushw
leave
jo
and
jnp
shlb
imul
movsb
adc
cs
pop
roll
mov
mov
int3
dec
test
cmp
insb
mov
mov
jb
sbb
mov
ja
mov
mov
xor
jmp
aad
push
dec
xor
ficoms
mov
dec
adc
arpl
cmp
or
shll
daa
jge
mov
push
add
push
into
dec
adc
lods
cltd
into
xchg
ss
mov
mov
mov
scas
orb
push
mov
insl
or
jns
sub
loopne
push
stos
fiadds
cmp
cmpsl
loop
jg
push
xchg
mov
int
mov
aam
inc
rcrb
divb
jmp
lods
push
fiadds
jge
and
lods
jle
xchg
lods
popf
dec
mov
adc
test
mov
imul
ds
cltd
out
dec
adc
push
add
mov
test
push
sbb
loop
aas
sub
mov
mov
ret
leave
mov
add
test
and
loop
sbb
lods
std
fidivl
push
mov
dec
or
fiaddl
xchg
lock
cmpsl
pop
mov
add
lods
xlat
mov
cwtl
lds
lods
xchg
fadd
cltd
enter
jle
cld
sbb
mov
mov
jle
pop
in
icebp
testb
dec
and
std
mov
dec
hlt
push
lods
mov
jne
ja
xchg
or
cmovbe
jno
lret
decb
cmp
pop
add
xchg
ret
test
fst
fmull
dec
fstpt
xchg
add
lret
loope
mov
aaa
mov
jb
scas
sub
subl
rol
aaa
push
mov
xor
rorl
mov
or
hlt
mov
mov
mov
mov
cs
push
xchg
outsb
cmp
dec
inc
inc
add
sub
sti
adc
in
cmp
int
mov
in
add
push
or
jbe
loopne
and
or
inc
mov
mov
push
lods
mov
das
push
dec
mov
ror
in
mov
jne
add
dec
inc
lret
fldl
xchg
push
mov
xlat
push
cmp
stos
push
jmp
pop
dec
and
std
and
push
pop
add
pop
mov
inc
lea
mov
cmpsb
or
lahf
cmp
fwait
jle
jnp
movsb
mov
sbb
push
lods
les
clc
add
repnz
fdivr
mov
mov
push
fistpl
cwtl
mov
and
mov
or
push
push
out
mov
mov
adc
bound
pop
xor
pop
or
mov
adc
std
mov
jns
arpl
lahf
cmpl
insb
jp
es
mov
test
data16
xchg
pop
testl
cmpsl
sti
mov
sbb
jno
xchg
jecxz
jge
and
push
cmp
push
push
jecxz
inc
push
lret
jmp
dec
xor
add
xchg
insl
and
rclb
call
popf
pop
mov
sub
mov
push
inc
adc
test
dec
cmpsl
fs
jno
mov
mov
push
inc
ss
xchg
mov
sub
push
fs
jb
and
inc
into
mov
add
push
dec
daa
orb
lock
pop
adc
or
adc
ror
xchg
add
negb
sub
add
xlat
cmpsb
leave
sub
ljmp
push
sub
int
shrl
into
cmp
ficoms
mov
jge
jno
lock
cld
push
shrl
pusha
xchg
mov
es
fistl
adc
mov
scas
dec
fldt
movsl
pop
cmp
mov
enter
pop
jns
jecxz
sbbl
jbe
incl
cmpb
cli
and
pop
mov
bnd
loope
test
jne
hlt
loopne
orb
mov
dec
xor
add
aas
or
mov
outsl
xor
sbb
dec
daa
cs
imul
cmpsb
push
xor
push
adc
leave
arpl
inc
out
pusha
sub
test
mov
test
cs
xchg
iret
or
mov
xchg
lea
pop
lds
cmp
insb
adc
mov
lods
mov
mov
jecxz
push
out
insl
les
xor
xor
out
imul
lahf
adc
add
cmp
cmc
adc
testl
imul
ja
mov
push
test
pop
inc
cmp
lahf
or
dec
mov
jnp
rclb
and
das
adc
mov
out
mov
imul
sbb
outsl
and
jns
lahf
rorb
xchg
sahf
mov
add
mov
xor
imul
andb
mov
pusha
or
push
pop
mov
dec
les
inc
adc
je
enter
inc
push
push
jbe
pop
mov
mov
xchg
testl
jns
sbb
stc
out
movsl
orl
fcmovne
dec
stos
cmp
push
je
cwtl
sbb
out
or
and
in
adc
rclb
mov
sbb
add
cmp
repz
push
popf
or
jge
int
sbb
call
data16
addb
sbb
push
mov
mov
xchg
xchg
addl
mov
gs
shll
and
jecxz
or
dec
jl
mov
and
jp
mov
aas
mov
sub
rcrb
xchg
in
jo
pusha
mull
dec
inc
fnstsw
cltd
data16
sahf
mov
insl
enter
stc
gs
repnz
out
jbe
jmp
test
jmp
fnstsw
inc
ret
repz
mov
dec
ljmp
pop
jne
dec
sub
mov
adc
in
push
push
in
lds
mov
ret
xor
nop
pop
pusha
dec
jae
add
dec
adc
and
mov
or
and
pop
sub
push
sbbl
xor
sbb
divb
cmp
ss
and
xchg
dec
jb
mov
scas
jns
pop
mov
inc
daa
or
sti
lcall
inc
sub
push
ds
mov
aaa
lret
outsl
je
call
testb
ret
addr16
ror
adc
in
incl
pop
fistl
push
xor
mov
leave
ffreep
add
aam
jl,pn
xor
aad
insl
xchg
shlb
push
mov
push
fsubs
outsb
adc
pop
fimull
les
mov
xchg
pop
cltd
dec
in
lahf
int
icebp
cmpsl
call
sub
xor
dec
fsubrs
lock
xor
pop
mov
out
cmpsl
or
pop
push
sarl
test
push
das
jecxz
and
test
inc
jge
lods
sub
fucomi
mov
aad
push
aaa
stos
mov
push
or
aad
das
aad
xchg
ret
cmc
int3
sbb
cmp
jg
psrad
pop
pop
das
pop
loopne
movsl
dec
sarb
lret
scas
push
jo
cmp
and
jae
cmp
loop
jae
test
popa
dec
dec
aas
dec
sarb
pop
call
popa
in
lcall
stos
sub
dec
pop
rclb
sub
bound
dec
aas
jnp
popf
xlat
dec
inc
sub
mov
sarl
scas
or
xchg
ret
lea
xor
fidivs
mov
xchg
jb
je
clc
test
into
cli
movsb
fiadds
js
std
out
mov
inc
testb
imul
cld
out
dec
xchg
sbb
popf
dec
jnp
sub
movsb
leavew
pop
or
mov
push
mov
iret
mov
divb
xor
sbb
popf
xor
and
xchg
push
repnz
jnp
insl
shrl
jns
incb
adc
sub
stos
jnp
mov
out
mov
adc
lea
leave
mov
adc
aaa
push
repz
or
and
mov
jns
daa
mov
test
ffree
mov
in
out
enter
sarl
jne
jns
out
cmc
cmp
inc
or
shrl
jg
das
sbb
jge
test
push
xlat
ffree
adc
mov
insl
push
data16
cli
dec
bound
adc
std
lock
gs
xchg
outsb
mov
adc
lfs
xchg
pusha
pop
mov
add
ret
imul
cld
out
dec
xchg
pop
test
dec
and
jnp
sub
movsb
leavew
pop
mov
inc
lds
flds
jae
and
xor
mov
pop
sarl
addr16
fstpt
fimull
mov
fstp
jl
pop
loope
adc
arpl
xchg
lahf
ss
xchg
pminub
mov
pop
test
insl
push
or
dec
jae
mov
hlt
cwtl
lods
lods
fldt
add
fdiv
mov
dec
dec
cmp
add
pop
movsb
add
mov
in
loop
out
outsl
sbb
xor
incw
lret
xchg
les
fs
neg
lahf
imul
xor
add
pusha
xlat
das
and
sti
jmp
inc
loopne
andl
xor
jb
jge
push
or
dec
xchg
inc
jp
pop
mov
adc
or
movsb
scas
outsb
and
sub
pop
sbb
or
xchg
dec
fcom
mull
cmp
adc
push
push
fdivrs
cltd
mov
test
addr16
insb
loope
pop
or
pop
hlt
cmp
shlb
or
and
mov
push
pop
in
loopne
outsb
cmp
test
mov
push
and
xchg
cmp
mov
add
shlb
ffreep
lahf
jae
mov
lock
mov
ljmp
sbb
sub
lcall
mov
pop
push
xchg
ficoms
lock
movsl
lock
pop
mov
leave
xchg
out
roll
xor
int3
push
aas
mov
repnz
cmp
in
pop
leave
out
push
loop
or
inc
or
adc
bound
addr16
int3
sti
ds
xchg
cld
pop
jbe
jae
lret
and
mov
pop
out
add
sub
lods
and
push
pusha
test
mov
jno
xchg
outsl
addr16
out
ficomps
lret
mov
or
xchg
jecxz
arpl
rolb
cmp
mov
test
mov
or
cmp
inc
jg
mov
mov
adc
int
outsl
cwtl
pop
mov
movsb
cmpsl
mov
aad
and
cmp
xor
dec
jb
jmp
dec
jecxz
mov
sbb
inc
jl
test
test
xor
dec
fnsave
inc
mov
arpl
outsb
icebp
das
sar
stc
push
leave
fistpl
jne
call
stos
icebp
sbb
mov
popa
xlat
mov
adc
stc
inc
jmp
loopne
mov
xchg
insb
movsl
lcall
das
jecxz
pop
push
or
jp
xchg
lret
jge
or
or
daa
fdivrs
scas
dec
add
ja
fcomi
push
xchg
lcall
mov
jo
pop
inc
mov
cmpsb
mov
adc
jmp
popa
mov
fnstcw
sahf
mov
test
push
nop
xchg
lret
mov
fidivrs
lods
arpl
inc
lock
cltd
into
pop
sub
xchg
jmp
pop
jmp
mov
pusha
mov
sbb
add
jp
pop
daa
jle
mov
mov
mov
ret
lcall
push
push
aaa
fisttpll
inc
rolb
lahf
out
int3
and
les
xchg
pop
test
jnp
mov
push
pop
fistps
jecxz
mov
or
jl
push
jo
ja
cmp
lret
lea
cmpsl
outsb
mov
jge
fsubrp
bound
aam
pop
or
push
or
nop
add
xchg
push
in
xchg
fnstenv
mov
cmpsb
test
ss
push
push
or
xchg
int3
cmp
xlat
cmp
lods
loop
in
sbb
scas
jp
divb
cltd
aaa
adc
add
adc
out
outsl
add
jne
rcrb
popf
add
mov
push
ss
cmp
sbb
andb
pop
subb
enter
enter
mov
pushf
fldt
ds
lds
xlat
insl
lahf
mov
popf
dec
das
ss
imul
pusha
mov
pop
outsb
push
jbe
inc
add
data16
imul
mov
pop
sar
test
add
push
pop
in
mov
sub
dec
aad
aad
mov
or
stc
sub
mov
test
or
js
fisubl
push
pushf
cli
lea
dec
fs
mov
mov
cmp
psubsw
fcoml
mov
scas
cmp
arpl
xor
mov
jmp
inc
in
add
sub
fistl
mov
jns
cmp
movsb
push
daa
mov
inc
xchg
push
loope
mov
rclb
outsl
fs
sbb
push
cld
ljmp
cmc
pop
sub
xor
cmc
imul
sbb
push
mov
jne
xchg
icebp
repnz
and
sbb
test
sub
fdivrs
addr16
icebp
adc
dec
mov
fs
in
sbb
or
lea
iret
out
aam
xchg
outsb
mov
sub
add
xor
xchg
sub
inc
movsl
loopne
pop
xchg
arpl
cmp
xchg
jns
mov
xor
imul
stc
loop
add
dec
in
nop
ljmp
out
jno
in
aas
jle
mov
sahf
smsw
push
mov
aas
push
mov
mov
int
push
data16
cmp
fwait
inc
inc
fistps
sti
jno
sbb
jns
sbb
lahf
sub
inc
lds
and
jae
cmpsb
ret
jo
adc
push
cmp
push
inc
and
xchg
sahf
inc
ds
xchg
sahf
inc
dec
xchg
in
aam
jl
push
or
mov
dec
mov
mov
cli
pop
ds
loopne
xchg
movsb
scas
xchg
out
add
es
push
sub
xchg
cmp
mov
jge
daa
adc
pop
mov
int3
int3
arpl
pushf
mov
dec
lahf
sbb
mull
movsl
push
jns
mov
pusha
adc
xlat
pop
out
outsb
jno
jae
pop
rcl
xor
fxch
mov
sahf
stos
das
lret
rorb
stos
jl
mov
pop
mov
sbb
ret
mov
enter
add
mov
into
push
fbstp
jp
leave
mov
lret
mov
adc
test
sldt
lret
imulb
sbb
or
loop
outsl
sub
ss
lahf
mov
adc
cld
adc
pop
stos
test
mov
leave
push
stc
loop
pop
popa
pop
bound
lock
mov
pop
xor
dec
xchg
inc
push
std
push
mov
jp
pop
add
fprem1
aas
and
pop
add
jae
rolb
or
mov
xchg
xabort
sbb
inc
adc
mov
inc
adc
push
popf
scas
mov
dec
aam
inc
jo
jl
push
rcll
test
mov
fmulp
inc
ljmp
mov
dec
fimuls
lret
mov
or
pop
pop
aaa
jno
xchg
jbe
and
enter
cwtl
ja
pop
xchg
inc
popa
xor
push
loopne
pop
pop
xchg
dec
sbb
add
pop
insb
fmuls
outsl
cmpsw
push
clc
xchg
addr16
nop
lds
pusha
sub
stos
mov
les
iret
roll
add
push
push
pop
repz
test
lock
mov
test
jg
lret
add
push
sti
and
xor
movsl
shll
add
and
aad
mov
mov
pop
call
cmpsb
add
lret
add
fst
out
ss
pop
sub
jns
aaa
ret
jg
arpl
leave
das
shlb
into
icebp
lahf
imul
notb
inc
shl
add
add
stos
adc
pop
or
fucomip
pop
dec
adc
mov
in
push
cmp
add
hlt
push
xchg
jno
lods
push
bound
call
jno
je
mov
pusha
fstpt
ja
outsl
orl
jns
fwait
in
pop
sbb
test
aas
pop
flds
jge
xor
add
xchg
mov
into
xchg
fisubs
dec
das
cmpsl
push
inc
test
pop
jno
repz
addr16
test
or
lahf
mov
sub
test
cmp
mov
push
stc
cmpsl
test
pop
lret
jne
jl
mov
ffree
xor
and
ret
mov
mov
insl
pop
push
negl
pusha
adcl
mov
aaa
inc
xchg
mull
ds
dec
aaa
int3
mov
jp
out
mov
les
aam
xor
sub
leave
push
jl
add
mov
out
pop
sbb
js
outsb
or
ljmp
test
mov
inc
pop
popf
jge
popa
js
sub
mov
adc
int3
jo
shll
clc
adc
fs
xchg
sbb
sbb
lret
in
xorl
cli
test
inc
movsl
xchg
repz
fwait
iret
xor
add
inc
mov
xor
arpl
pusha
fdivs
mov
or
mov
jae
ljmp
dec
jg
imul
adc
jae
icebp
test
push
inc
les
fwait
pop
sbb
popf
mov
sbb
outsl
xchg
sub
ja
sbb
push
cmp
fldl
add
loope
sub
pop
test
sahf
adc
imul
jp
in
sbb
hlt
xor
xchg
test
push
scas
push
ret
add
sub
outsl
jmp
and
lret
leave
jae
int3
popf
add
loop
shrl
dec
bswap
daa
ljmp
out
flds
jbe
rol
rcll
push
shrb
sarl
sahf
loope
push
sbb
add
push
and
ret
call
sbb
sub
pop
jp
adc
mov
and
cld
mov
mov
imul
push
and
gs
push
cmc
push
mov
das
inc
es
neg
popa
sub
xchg
inc
mov
dec
negb
int
mov
mov
cmpl
sbb
or
add
or
mov
dec
sub
xchg
lret
inc
pop
lcall
or
rcrl
out
jle
repnz
push
mov
mov
and
jae
push
push
fdivl
lret
addr16
jne
inc
dec
push
xor
cmp
add
imul
lea
mov
mov
icebp
rol
dec
ja
pop
lock
push
jb
aad
sub
xor
add
test
pop
push
lret
inc
imul
mov
clc
mov
mov
in
in
sub
outsl
int3
push
mov
jecxz
cmpb
dec
lret
mov
sbb
add
popf
mov
sbbl
push
repnz
loopne
pusha
cmp
ret
push
xchg
mov
push
aad
lock
adc
mov
sub
xor
dec
or
outsl
ret
cwtl
fldt
xchg
inc
jns
testl
lahf
sbb
inc
decl
into
lods
je
fsubrp
xlat
sub
repz
mov
les
mov
lret
or
sub
je
test
xchg
inc
push
cli
data16
test
lret
sbb
xchg
add
daa
push
cmpsb
adc
or
imulb
mov
mov
aaa
mov
cmpb
dec
shll
push
xlat
lock
xor
inc
add
dec
push
aad
sarb
xchg
enter
orl
aad
mov
jnp
xchg
jmp
cld
das
adc
arpl
dec
lds
insl
inc
mov
mov
or
jl
sub
mov
xchg
outsl
mov
push
enter
mov
and
nop
push
jb
xlat
mov
sub
pop
sub
add
sub
mov
testl
jle
and
push
hlt
push
repz
std
or
sti
outsw
dec
adc
pop
add
add
cs
ret
inc
add
sbb
mov
subb
das
popf
add
jns
test
icebp
lds
sarb
jb
push
or
add
inc
mov
mov
mov
mov
xorl
lock
or
inc
mov
dec
movsl
test
cmpsl
xor
test
cld
enter
dec
arpl
xor
adc
add
shrl
and
fsubl
fidivl
xchg
std
lods
int
ds
pop
icebp
push
aad
cmpl
out
test
jp
push
ficoms
mov
repnz
imul
lahf
adc
ja
outsb
jbe
ficompl
mov
lret
cmp
and
repz
adc
dec
push
outsl
aad
sub
and
call
not
dec
sbb
dec
sbb
int
popf
pop
cmp
into
shll
jae
sbb
jno
cmc
or
mov
icebp
pop
ljmp
pop
pop
mov
or
add
pop
pop
jp
mov
sub
je
cld
test
nop
loop
pop
andb
xchg
mov
js
mov
dec
pop
pushf
pop
loop
stos
dec
in
add
shlb
das
scas
push
sub
aas
jl
jo
sub
rcr
xlat
ljmp
cmc
data16
jb
gs
jne
sahf
lcall
xchg
mov
rcrl
shrb
or
push
sub
aaa
cld
jno
in
hlt
push
mov
xchg
add
jno
push
mov
cli
mov
push
mov
push
mov
loope
fucom
and
or
leave
jns
into
dec
scas
daa
scas
mov
sbb
ds
dec
sti
int3
outsl
push
pop
test
sarl
insl
fsubrp
lret
push
cmovg
lds
outsl
int3
rorl
cltd
cmc
mov
sti
push
and
loopne
and
test
hlt
add
cmc
iret
gs
out
xchg
insl
or
rcrl
jno
repz
dec
rcrl
hlt
and
lea
imul
or
mov
leave
xchg
sti
jo
mov
dec
sbb
fidivl
shrb
xlat
jge
lret
dec
leave
hlt
add
jle
mov
hlt
ja
loope
xor
call
je
sub
mov
int3
jl
cs
mov
mov
and
movsl
in
mov
cmp
pop
rolb
fs
mov
sar
or
mov
aam
push
pop
fnsave
in
push
pop
jg
into
inc
push
jnp
sub
in
xchg
cmpsl
push
push
shlb
xor
orb
jno
sub
rcrl
outsb
jl
lret
insb
movsb
fdivl
scas
or
and
nop
test
adc
mov
cmp
fsub
xor
xor
enter
add
xchg
or
mov
inc
gs
mov
dec
repz
cmp
dec
mov
cmp
push
push
cld
in
mov
xor
rorl
mov
and
lea
jns
ss
es
imul
jno
mov
fwait
sub
repnz
mov
enter
movsl
cmc
mov
fs
jbe
xchg
fwait
inc
aam
aas
adc
movhps
and
mov
fsubr
pop
aas
dec
mov
mov
in
pop
mov
sub
jnp
lret
mov
cmp
push
xchg
enter
sbbb
sbb
shrb
iret
push
ds
iret
lods
fidivs
loope
and
mov
imul
ud0
lock
mov
clc
lret
adc
hlt
fbld
sbb
xlat
pop
in
outsl
xor
mov
mov
mov
mov
in
lcall
rolb
sbb
fidivs
xchg
aad
aam
repnz
push
sub
mov
inc
test
jg
xchg
cmp
sub
andb
popf
flds
mov
pop
push
rcrl
add
dec
adc
fisttpl
and
ljmp
xor
aam
mov
inc
jge
lahf
frstpm(287
rorl
arpl
out
mov
sbb
inc
pusha
cmpsl
sbb
lock
fstpt
cmp
mov
push
mov
outsb
mov
xor
lret
in
hlt
in
xchg
lret
stos
cmp
lods
mov
orb
fistpll
inc
push
push
ret
or
outsb
aam
insb
xchg
mov
xchg
in
inc
imul
hlt
mov
pop
seta
fdivrs
mov
cmpsb
and
mov
mov
out
xchg
cltd
or
test
sbbl
jge
or
xchg
cmp
xor
or
jp
cltd
out
int
xchg
incb
cmpsl
jge
icebp
and
push
mov
es
mov
pop
in
or
adc
xor
ret
pop
push
cltd
outsb
pop
jns
movl
aad
mov
gs
iret
adc
cltd
cmp
push
test
push
aaa
mov
inc
sti
pop
pusha
inc
or
dec
pop
cmp
add
icebp
rorb
repnz
ljmp
mov
enter
outsb
pusha
dec
ret
pop
cmp
xchg
ret
jo
aaa
and
add
fisttpll
jecxz
xor
cmp
push
gs
and
cmc
cmp
std
int3
ror
lcall
jle
jne
xchg
arpl
inc
stc
xacquire
movsl
sarl
xorl
cwtl
xchg
out
repz
mov
mov
xchg
popa
imul
scas
or
dec
test
add
xor
and
mov
imul
popa
mov
or
adc
and
mov
sbb
adc
pop
mov
mov
sbb
and
add
inc
scas
sub
xor
out
mov
iret
sahf
enter
outsb
out
cmp
pop
adc
fdivr
xchg
mov
pop
bound
mov
fdivl
movsl
stos
popa
pop
pop
pusha
xchg
push
mov
in
rcrb
or
jno
xchg
dec
insl
pop
loope
pop
mov
mov
push
lods
lods
inc
inc
pop
xor
sub
stc
loopne
xor
add
fs
push
xchg
and
std
aaa
jb
notb
xchg
lock
xchg
icebp
icebp
pop
sti
setbe
adc
cwtl
pop
sub
add
xor
mov
or
jb
cmp
aaa
xchg
mov
sbb
cmp
add
push
cwtl
add
cltd
add
clc
in
add
mov
mov
or
jnp
inc
pop
fwait
loope
add
add
test
mov
js
adc
test
dec
mov
das
arpl
pop
or
popf
xor
pop
sbb
aas
test
lret
insb
fwait
enter
mov
test
push
fwait
xor
int3
pop
mov
pop
arpl
jo
xchg
cmp
jb
loope
xchg
or
push
xorl
xor
test
mov
loop
lret
sbb
push
lods
xor
sbb
into
or
adc
into
mov
fwait
push
filds
das
or
inc
test
mov
inc
push
xchg
jle
fsts
cmp
adc
daa
and
scas
stos
or
xchg
mov
jnp
je
shr
sbb
jae
or
nop
movsb
mov
dec
test
mov
addr16
in
int3
add
dec
ja
cs
ljmp
lea
dec
pop
fwait
loope
jnp
pop
and
mov
js
adc
xor
push
insl
lods
cld
adc
sbb
or
cli
scas
sub
fs
shlb
push
and
adc
addb
xor
inc
orl
scas
dec
push
cmp
sub
mov
cmpsb
pop
lock
pusha
jle
enter
cmp
jge
sbb
dec
cld
aad
gs
pop
cmp
lods
je
cltd
jne
lods
cltd
lcall
fildll
cmp
cwtl
push
arpl
out
xor
and
lret
inc
xchg
or
stc
setbe
fnstsw
sbb
add
das
add
adc
mov
adc
cs
lret
jg
sbbb
mov
pop
jmp
lods
ljmp
push
sub
test
cwtl
jmp
jbe
gs
xlat
sub
cmp
imul
xor
movsl
lea
push
pop
dec
or
scas
or
xchg
push
xor
xor
add
popa
ret
lret
add
iret
inc
lods
sub
mov
xor
mov
sbbb
clc
jp
lods
jns
lcall
push
mov
pop
lretw
into
cmp
das
sub
inc
sbb
push
sbb
mov
add
into
shr
xchg
cmc
out
rdmsr
push
mov
outsl
stos
lds
jb
sub
pop
add
cmp
xchg
and
sbb
hlt
popa
inc
loopne
js
and
xor
push
mov
popa
and
mov
adc
cmpsb
aaa
test
dec
jo
sub
cli
inc
mov
or
icebp
test
ror
sbb
push
repnz
add
test
mov
ds
aad
add
lahf
cmpl
dec
sub
cld
or
sbb
and
ret
mov
jle
inc
xchg
mov
aad
ljmp
inc
loopne,pt
sub
pushf
adc
mov
int
nopl
mov
add
cld
xchg
mov
cld
js
imul
adc
scas
divb
adc
mov
ret
sbb
mov
and
jnp
push
sbb
enter
mov
push
outsl
inc
xchg
add
and
scas
push
lret
jp
mov
test
into
pop
lret
add
xor
hlt
adc
add
push
insl
pop
aaa
jns
jp
xchg
mov
or
and
mov
fnstsw
xor
adc
sarl
pop
rcr
inc
jbe
stos
mov
sarl
sbb
in
push
movsl
fidivs
scas
test
scas
clc
or
and
mov
into
push
popf
scas
mov
mov
jb
divl
aas
jo
push
mov
push
leave
sbb
sbb
popf
cmpsl
mov
cmp
and
andb
cmp
xchg
mov
mov
mov
inc
mov
mov
mov
out
dec
jge
pop
jmp
mov
cli
rcrl
cmp
mov
das
imul
push
mov
std
imul
popw
mov
pop
pop
sarl
inc
out
dec
sbb
xchg
faddl
jbe
jbe
adc
xor
push
add
add
push
sbb
xchg
push
or
adc
out
mov
or
les
mov
cmp
dec
mov
cmp
dec
lea
xchg
aad
mov
mov
gs
test
push
push
xor
das
cmp
sbb
notl
iret
or
or
outsb
push
sub
xchg
sbb
xor
outsb
push
call
adc
in
hlt
jp
mov
mov
aad
lods
sbb
adc
lahf
scas
mov
outsb
push
xchg
outsb
outsl
xor
fisubs
arpl
lahf
add
pop
lcall
movsb
stos
addr16
das
outsl
pop
aad
mov
push
inc
dec
repnz
mov
xchg
mov
imul
insb
mov
inc
sbb
out
gs
jb
insb
mov
stos
cs
mov
out
inc
in
mov
mov
sarl
mov
and
jl
and
pop
and
dec
lock
sbb
test
pop
pop
jl
sti
adc
and
mov
jge
mov
inc
mov
xchg
jl
push
sbb
lcall
jbe
lret
or
aas
dec
jmp
mov
cmp
clc
aam
mov
fistpl
out
test
xor
push
sbb
lcall
addb
ja
or
xorl
test
out
cltd
xor
es
stos
jnp
repz
in
add
aas
cwtl
leave
inc
fdivr
rcll
mov
mov
and
int3
icebp
test
movsl
loope
mov
into
jbe
fs
int
xchg
inc
cld
lea
push
imul
mov
ljmp
or
or
aas
inc
sbb
sbb
xchg
adc
sub
adc
sbb
arpl
adc
mov
push
inc
sub
or
lods
inc
insl
jno
bound
in
dec
out
xor
imul
gs
or
pop
inc
mov
dec
cltd
mov
cmc
cmp
cmpl
add
sub
gs
push
pop
mov
aas
push
adc
sbb
dec
rclb
stos
scas
fildll
lods
push
push
mov
sti
fcomp
popa
repz
mov
or
sub
cmpsb
stos
jo
sbb
nop
lds
loop
or
rep
loopne
push
dec
inc
xchg
cmpsl
sub
sbb
and
inc
fsub
lret
loope
jbe
insl
prefetcht2
call
bound
push
cmpl
leave
iret
in
cmp
push
sub
push
fldl2e
add
in
int3
cmp
adc
mov
mov
aad
out
out
sbb
pop
stos
or
loope
ss
mov
and
int
orb
adc
int3
mov
fcomps
movsl
cmpsb
sub
loopne
pop
xor
dec
sub
repz
mov
loop
into
mov
ret
mov
rcll
fcoml
idivb
fidivrl
mov
mov
cltd
ja
rclb
loopne
ja
pop
dec
jmp
adc
loop
pop
adc
fistpl
fisubs
and
xchg
mov
fs
enter
or
es
iret
data16
push
in
les
mov
mov
cmc
outsl
push
jne
fs
nop
cmpsb
std
mov
imul
pop
mov
pusha
dec
push
out
lods
pop
popf
loopne
jmp
mov
int3
hlt
icebp
test
add
mov
ret
lret
cmp
cmc
dec
mov
mov
loope
scas
pop
jle
add
das
dec
sti
jb
sub
sahf
adc
pop
fs
inc
cltd
pusha
aas
mov
fimull
or
jns
scas
sub
es
mov
out
mov
pushf
sbb
mov
les
xchg
pop
sub
sbb
dec
in
jbe
mov
cmp
orb
clc
clc
cmp
cmp
lea
pop
je
jecxz
mov
mov
mov
sti
lock
fstps
push
sbb
dec
fisttpl
dec
inc
je
sub
lahf
pop
mov
in
js
les
out
scas
ds
push
pop
and
je
jecxz
jle
shll
es
loope
mov
push
push
or
jge
adc
enter
test
jne
add
shl
jl
int
jecxz
stc
or
cwtl
ret
out
addr16
loopne
sarl
andl
inc
daa
mov
cwtl
or
fimull
mov
sti
stos
cltd
pop
sbb
sar
push
icebp
lret
arpl
daa
lea
ljmp
cmp
mov
adc
daa
mov
insb
repz
mov
je
or
xchg
out
in
ljmp
dec
cmp
xor
dec
decl
int3
insl
ljmp
lds
lock
dec
mov
mov
pop
sub
jo
popf
xor
cmp
loope
imul
pop
sbb
test
shll
push
and
stos
xchg
mov
scas
pop
stos
lods
push
call
jns
out
xor
dec
or
test
xor
ja
in
dec
inc
jmp
or
scas
mov
outsb
clc
gs
mov
mov
into
jns
stc
sbb
andb
jns
push
and
jle
pusha
loop
rcrb
mov
xchg
or
roll
sbb
cmpsb
cmp
push
push
fisubrl
cld
or
sub
lret
push
dec
fistl
into
or
inc
stos
xor
pop
mov
pop
ud2
cwtl
rcrl
mov
notl
ret
push
sti
jns
gs
stos
push
xor
shrb
sub
cmpsb
xor
xchg
in
xor
out
jo
sub
push
cmp
mov
packssdw
xlat
rcrb
mov
cli
aas
stos
pop
outsl
stc
inc
cltd
mov
pop
adc
mov
popa
pop
dec
lods
sbb
fwait
shrb
fsub
pop
leave
add
leave
pop
push
nop
or
stc
movsb
test
sbb
mov
aad
xlat
jp
pop
mov
or
in
pop
mov
gs
xchg
mov
or
or
adc
and
and
movsb
mov
mov
js
jne
xor
pop
pop
icebp
stos
mov
lods
imul
dec
test
mov
mov
sub
mov
rcll
mov
jns
repz
mov
jne
lret
and
ja
jnp
jmp
mov
mov
xchg
xor
pop
mov
mov
inc
sub
sbb
sahf
push
dec
push
lcall
loope
ficompl
in
cwtl
pop
xchg
jmp
xor
jno
stc
popf
out
mov
test
xchg
jne
js
loop
jg
repz
fmuls
pop
sbb
xchg
pop
nop
mulb
dec
cwtl
push
xchg
test
and
outsb
cld
sbb
repz
ret
clc
adc
mov
jecxz
stc
pop
dec
ds
cltd
popa
xlat
out
stc
repz
call
into
out
stc
shll
adc
sub
jg
or
xchg
push
outsl
movsl
mov
cltd
enter
mov
hlt
dec
xor
ja
pop
rorl
repnz
loope
xchg
xor
jno
cmp
ror
leave
xorb
mov
adc
adc
in
scas
xchg
mov
jnp
add
jmp
leave
jne
push
pop
icebp
fcoml
xor
add
mov
dec
sub
in
mov
ss
sub
lret
dec
fwait
adc
inc
inc
mov
mov
je
orb
fcompl
inc
mov
inc
sti
cltd
adc
jmp
mov
test
sbb
daa
out
fcompl
rolb
cs
enter
mov
ja
add
pop
mov
icebp
dec
pop
dec
inc
lret
cs
cmc
xor
in
push
les
pop
mov
mov
jle,pt
shrl
mov
pusha
sub
addl
push
je
out
xchg
inc
out
fcomps
add
mov
scas
test
adc
cmpsb
push
cmp
aam
or
out
xlat
vmovhps
cwtl
adc
std
rcr
pusha
mov
or
cwtl
mov
shlb
je
add
mov
lret
and
fwait
loop
jnp
add
daa
aaa
inc
popa
pop
fcoml
xchg
pop
cli
or
and
jbe
sub
jge
fyl2x
jecxz
stos
aad
and
jg
testl
and
je
aaa
jg
mov
jl
mov
call
enter
push
inc
inc
in
inc
je
adc
jne
test
inc
mov
mov
repz
mov
je
out
fs
sub
movl
jle
add
push
xorl
and
cmp
xlat
test
adc
xchg
xchg
loop
jo
jl
je
pushf
pop
cmp
xchg
daa
push
setle
daa
ljmp
adc
popa
mov
nop
mov
mov
mov
iret
loop
lahf
add
or
jmp
pop
and
push
add
jae
add
rcr
movsl
push
mov
and
lret
sub
cwtl
fs
outsb
mov
test
xchg
adc
subl
jge
imul
lea
jl
mov
cli
inc
mov
sarl
pop
or
add
enter
pop
orl
aaa
imul
jg
or
nop
mov
int3
and
sbb
scas
dec
iret
fcomi
pop
divb
cs
cs
mov
push
xor
in
push
push
fisubl
sarb
sbb
fbstp
js
daa
int
lea
adc
mov
xor
sbb
mov
cmp
loopne
add
lahf
insl
pop
or
xchg
mulb
sbb
mov
xor
mov
leave
mov
mov
iret
cld
ret
adc
xor
lcall
pop
xchg
packssdw
andb
add
cs
xchg
mov
xchg
scas
orl
je
das
sahf
int3
mov
popf
dec
int3
gs
int
arpl
inc
mov
mov
sbb
mov
sarb
pushf
js
fiadds
in
fdivs
xchg
jmp
movsl
call
fstps
je
jecxz
add
mov
pop
add
test
xchg
jno
test
mov
mov
icebp
shrb
mov
or
jbe
sbb
fs
dec
test
iret
sbb
fdivrs
pop
xor
loopne
movsl
lcall
or
test
and
mov
fcmovnu
sub
dec
jg
lods
add
in
shr
mov
std
mov
fistpll
xchg
dec
in
scas
xlat
or
lret
dec
push
shll
cmp
cmp
xor
rorl
mov
mov
in
loopne
sub
adc
movsl
sbb
jmp
lea
inc
sub
aam
sbb
out
div
add
fnstenv
push
rep
pop
insb
cmc
fdiv
and
shl
dec
sub
mov
pushf
cmpsb
push
xor
fwait
sub
mov
icebp
cmp
mov
and
iret
in
mov
add
xor
mov
aad
jne
xchg
push
pop
loope
icebp
shlb
pop
lods
inc
fnsave
fsubrl
or
hlt
lret
mov
call
loopne
push
popa
dec
repz
xor
xor
or
in
sub
adc
sahf
mov
push
das
jecxz
lds
test
push
lds
sbb
test
sub
pop
dec
addr16
out
push
cs
push
mov
dec
adc
insb
fimull
les
or
aas
push
scas
ficoms
outsl
clc
fsts
sbb
int3
add
pop
add
inc
mul
add
sub
dec
mov
icebp
mov
mov
aas
int
stos
mov
nop
mov
sbb
xchg
pop
leave
sub
fisubl
jae
pop
add
inc
push
rcll
aaa
insl
dec
test
cltd
mov
dec
rcr
sbb
jle
or
mov
lcall
push
cwtl
mov
in
push
leave
pop
xor
jnp
mov
adc
sbb
xor
pop
push
jo
mov
daa
ja
shlb
or
mov
push
movsb
pop
lods
pop
outsb
and
into
lahf
test
mov
in
movsl
pop
push
jl
and
hlt
imul
mov
and
je
lahf
orb
leave
outsl
pop
aas
xor
hlt
decl
into
frstor
lahf
popf
aas
add
adc
movsl
out
sub
iret
mov
aam
adc
sub
arpl
icebp
mov
std
and
jecxz
pop
daa
xchg
aas
std
lret
lds
jmp
into
lock
loop
data16
popa
jbe
mov
xchg
mov
and
rclb
rcrl
xchg
inc
xchg
push
adc
dec
test
and
fiaddl
push
ss
lcall
pop
cwtl
mov
inc
jno
rol
in
xchg
je
decb
xchg
aam
inc
int3
out
push
arpl
and
sbb
mov
std
dec
dec
out
xchg
mov
bt
push
mov
test
jge
arpl
test
dec
loop
mov
jle
shrb
push
mov
cmp
mov
push
mov
out
leave
outsl
pop
aas
ss
rorl
mov
cmp
test
inc
fidivrs
adc
sub
outsb
push
mov
daa
hlt
loop
dec
nop
adc
sti
pop
cmp
jmp
push
and
jae
add
jg
dec
sub
jbe
sub
aas
lcall
in
mov
and
mov
xor
xchg
jnp
jne
loope
into
inc
loope
push
mov
xchg
sub
rorl
int
flds
addr16
or
sub
sub
pop
lods
shll
push
pop
rcl
shll
mov
shlb
icebp
push
nop
frstor
lock
mov
mov
scas
data16
adc
xchg
and
out
movsb
pop
fstl
std
pop
jmp
test
aaa
subl
outsl
pop
cmp
mov
dec
rcrb
mov
pushf
js
xor
jg
dec
sbb
xchg
fdivrl
aam
jns
mov
setne
add
inc
mov
sbb
es
sbb
and
mov
daa
sub
sub
sarl
fs
in
gs
and
push
aas
jnp
and
lret
enter
dec
xor
andb
cli
popa
icebp
daa
ret
pushf
push
xchg
cmp
out
popa
cmp
int
out
in
aad
or
icebp
fld
mov
or
arpl
inc
fwait
inc
inc
cmp
sbb
lret
cli
fst
xchg
imul
mov
add
xchg
pop
push
or
mul
xchg
xlat
scas
xchg
call
mov
andl
arpl
addr16
iret
test
xchg
xchg
decl
mov
inc
stc
cwtl
dec
xor
inc
mov
sbb
jb
inc
xchg
in
mov
cmp
add
jecxz
dec
pushf
sbb
scas
iret
sbb
xchg
div
mov
mov
push
jge
rcr
pusha
cs
or
dec
lods
jno
sub
sbb
mov
inc
adc
shrb
vdivsd
jp
mov
push
sub
pop
popf
negb
out
adc
xor
test
ja
out
sbb
jb
int
cmp
inc
shl
mov
jo
out
mov
lods
sub
jb
inc
mov
cmp
sub
jp
aas
fmull
xchg
bound
pop
sub
clc
mov
sar
or
sti
arpl
or
pop
adc
fs
inc
cmpb
std
mov
sub
pop
dec
out
mov
dec
push
and
loope
mov
mov
rclb
xor
inc
inc
add
sbb
ss
out
mov
in
std
icebp
fst
loope
adc
insl
cmp
xchg
sub
sbb
pusha
push
decb
scas
repz
or
mov
outsl
sahf
adc
addb
out
imul
push
cmpsl
add
cmc
loope
jne
mov
ja
pop
push
sbb
stc
mov
mov
scas
and
pop
dec
je
out
cmpsl
adc
cmpsb
jle
mov
cld
mov
cmp
adc
aad
jle
push
mov
cmp
sbb
xchg
push
ret
test
mov
pop
test
jg
pop
fsubrl
in
in
add
scas
je
pop
and
nop
xor
rorb
sub
movl
shrl
sbb
aam
in
fdivp
xchg
jecxz
imul
adc
add
cmp
adc
push
rcl
add
and
test
cmpsl
xchg
out
mov
stos
sub
jmp
and
mov
mov
int3
cmp
sbb
out
ret
pop
aad
daa
jne
sub
mov
imul
sbb
cmp
arpl
mov
xor
lcall
add
into
in
dec
loop
jo
push
adc
std
adcl
test
in
push
out
push
sub
xor
jge
and
insl
aas
jb
jb
pusha
mov
arpl
sbb
fwait
ja
cmp
loope
pop
xchg
lods
decb
mov
shrl
xchg
jg
test
leave
repnz
xchg
jns
sbb
and
jo
aas
dec
xchg
adc
sub
and
xchg
adc
xchg
mul
jae
xor
je
mov
mov
or
push
push
mov
outsb
mov
filds
leave
scas
je
imul
inc
or
dec
addr16
xor
in
cwtl
subl
jae
lcall
imul
andb
cmp
or
or
out
push
jl
xor
adc
xchg
pop
cs
stos
mov
or
stc
shl
pushf
data16
pop
mov
aad
push
jge
in
jge
insl
imul
sub
out
fs
shlb
std
aas
cltd
jns
divb
mov
out
aam
int
mov
insb
adcl
rcll
in
lret
lret
cmp
test
out
icebp
sahf
add
or
and
mov
and
add
add
sub
pop
sbbl
sub
or
inc
mov
mov
adc
mov
mov
mov
repnz
scas
icebp
outsl
or
pushf
cmp
jecxz
sub
adc
cwtl
dec
bound
push
repz
insb
out
aam
jmp
inc
movsl
lahf
orb
fdivs
mov
adc
adcb
fiadds
or
xlat
mov
inc
shll
pushf
cli
fwait
mov
and
jg
sar
xchg
aad
inc
testb
mov
cmp
mov
out
or
imul
int
jle
and
outsl
mov
movsb
jns
xor
psubsb
lcall
adc
sub
sbb
dec
lds
repnz
mov
xchg
xchg
dec
fisubl
enter
in
mov
out
push
inc
lds
daa
pop
pop
jmp
dec
int3
repz
xchg
fidivs
std
or
push
test
insb
fstl
outsb
mov
inc
push
das
sbb
fcmove
adc
mov
mov
or
loopne
cmp
ret
inc
xchg
cmpsb
sub
in
pop
mov
sub
dec
xlat
and
movsb
pop
add
loop
lods
stos
mov
cwtl
icebp
stc
in
adc
fdiv
mov
inc
sbb
into
roll
ljmp
fiadds
imul
pop
movb
insl
fimull
shrl
jns
leave
inc
jg
jge
adc
pop
push
jnp
test
aad
sbb
fistpll
gs
insl
mov
stos
arpl
rcrl
xor
decl
mov
push
int3
lds
fs
mov
or
mov
inc
mov
repz
and
jecxz
data16
pop
ret
mov
sub
pop
xor
jl
inc
stos
fwait
and
sub
or
lahf
dec
mov
push
adc
lret
push
mov
xchg
ret
add
nop
out
outsb
scas
test
fisubrs
out
sub
mov
incl
push
add
jmp
out
fsubrs
xchg
or
mov
cli
pop
imul
test
adc
lret
shlb
adcl
in
adc
hlt
rcrb
add
aaa
outsl
or
ret
int3
pop
sbb
mov
jns
dec
test
dec
popa
cmp
jne
loope
pop
mov
mov
mov
repnz
pop
icebp
std
repnz
cmp
rorl
jno
mov
imul
outsl
mov
mov
jle
andb
aam
arpl
shrb
push
dec
ss
dec
inc
jno
pop
xor
or
pop
cltd
in
je
inc
dec
cwtl
int3
xrelease
inc
sub
xchg
sub
scas
push
inc
add
xor
xchg
xor
test
pushf
int
rcll
add
jmp
ret
outsl
xor
in
sub
jne
aas
jb
data16
dec
mov
mov
fs
scas
inc
rcr
in
subl
rcr
inc
lcall
inc
mov
fucom
cmp
int
xlat
mov
dec
jmp
punpckhwd
stos
cmp
push
mov
sbb
ljmp
or
rolb
int3
or
in
shr
pop
sbb
sbb
rorl
imul
pop
cli
iret
cmc
mov
push
xchg
and
jb
pop
loopnew
push
sub
cld
cmp
or
mov
mov
mov
out
ljmp
insl
push
push
sub
push
pushl
and
sbb
mov
push
pusha
in
movnti
add
jp
jns
mov
out
scas
xchg
mov
pop
cmpsb
lahf
jno
arpl
adc
mov
clc
arpl
test
cli
mov
push
lds
push
popa
das
js
jo
lods
add
xor
ljmp
add
lds
out
add
mov
push
int3
lds
inc
cmp
dec
jno
pop
shll
les
pop
mov
mov
ja
test
jmp
mov
sub
imul
out
outsb
lahf
int
sar
jb
idivl
mov
dec
stos
mov
sub
cs
leave
sbb
sbb
mov
pop
andb
add
cmp
push
int3
mov
movsb
out
xchg
add
imul
cld
inc
mov
dec
lret
xor
pop
nop
hlt
push
push
jbe
jbe
bndldx
fidivl
movsb
fsubl
inc
cmpsl
sbb
push
ret
lret
movsl
pop
repz
mov
jl
movsb
mov
inc
lds
aaa
dec
inc
lock
xchg
cwtl
arpl
divl
push
dec
push
push
jge
stc
jle
inc
jae
test
adc
pop
scas
lock
cwtl
aaa
mov
fdivs
in
nop
xchg
mov
jl
mov
movsb
movnti
loop
mov
mov
aaa
in
mov
jo
call
pop
gs
clc
fxch
ds
loope
jle
ja
mov
mov
add
sbb
into
rorb
cltd
call
pop
dec
int3
push
cmp
lds
mov
pop
iret
and
call
jb
jnp
jne
ds
test
push
fs
out
addr16
dec
cld
inc
mov
mov
xchg
subb
mov
xchg
insb
dec
push
movsb
shl
cmp
cld
xchg
and
inc
or
mov
push
or
mov
sbb
dec
jle
mov
fsubs
outsl
or
out
ret
cmp
movsl
inc
push
hlt
fwait
ss
daa
xchg
add
pop
mov
push
mov
aam
int
enter
dec
insb
sbb
ljmp
ret
in
dec
popa
mov
mov
add
insl
dec
sahf
mov
inc
fndisi(8087
dec
lret
xorb
push
in
sub
addl
xchg
lret
add
and
fsubl
mov
dec
sbb
adc
xchg
rcrb
mov
sub
mov
push
out
sbb
or
es
push
fsubr
int3
out
adc
jmp
neg
dec
fcoms
jl
movlhps
popf
arpl
sbb
dec
xchg
andb
jns
lret
loopne
jge
cltd
enter
cmp
aaa
stc
loope
jbe
pop
in
subb
inc
dec
dec
jl
repnz
mov
and
imul
in
push
mov
fwait
xchg
sub
push
jle
pop
cmc
data16
xchg
push
push
xchg
sbb
lahf
test
test
dec
out
xchg
add
shl
shl
add
insb
popa
insb
scas
stos
adc
lods
push
les
sbb
movsl
insb
jmp
jbe
push
lcall
shll
or
rorl
inc
lods
xchg
in
xchg
or
and
cmp
rorl
frndint
fiaddl
fidivrl
nop
mov
das
lds
negl
jp
mov
xchg
mov
movsl
xlat
ret
int3
add
out
inc
aad
lret
jnp
inc
rorl
subb
xchg
mov
fwait
push
or
xchg
mov
nop
adc
xchg
dec
lahf
addr16
jg
push
fldl
arpl
pusha
dec
push
jge
repnz
dec
rclb
pusha
je
jp
sub
fs
frndint
or
pop
arpl
xchg
sub
jl
sahf
inc
and
xchg
xor
xorb
xchg
call
mov
in
test
cmp
jmp
xchg
int3
cmp
idivb
sbb
jecxz
pusha
mulb
out
or
jno
push
loope
inc
push
ret
or
inc
hlt
jp
repnz
in
test
pop
aas
loope
xor
fstpl
dec
adc
ficomps
movsl
cmp
push
sbb
call
lds
sbb
mov
repz
pushf
cmpsl
in
ljmp
pop
call
stos
adc
dec
mov
and
movsb
mov
lahf
loop
fidivrl
gs
int
jno
out
bound
stc
test
roll
xchg
not
mov
mov
ljmp
ret
loopne
push
xchg
xor
ret
test
dec
or
sbb
sbb
sbb
push
mov
in
dec
jp
inc
subb
xor
jo
loop
mov
aaa
iret
adc
mov
jo
ja
ds
inc
add
pusha
fs
insb
pop
and
mov
inc
out
mov
jno
and
fisubl
roll
pushl
lret
lahf
call
push
test
fisttps
add
inc
mov
pop
adc
and
and
xor
ror
int
mov
loop
mov
cs
pushf
xlat
or
jmp
xchg
cltd
add
jns
mov
dec
repnz
fists
loopne,pt
sahf
sbb
data16
imul
dec
lea
xlat
sbb
adc
pushf
sub
xchg
jo
ja
add
mov
xor
mov
insb
push
shlb
pushf
add
icebp
push
ret
inc
sbb
add
int3
nop
inc
inc
ret
pop
aas
pusha
cs
cmp
sbb
jmp
adc
sub
loopne
jo
fwait
in
fsubrl
fdivs
loope
mov
add
jae
insb
ficoms
jecxz
jle
sti
mov
stc
aam
xchg
dec
insb
pop
pop
rorl
data16
testl
and
mov
push
push
orb
ficomps
lods
xor
and
inc
sub
xchg
add
jne,pn
jle,pn
pop
cmp
dec
jmp
stos
notb
cmp
repz
hlt
ds
ds
nop
cmp
and
fcmovb
fists
mov
cmp
xchg
pop
adc
pop
sub
and
jmp
lock
or
or
add
cmpsl
jmp
and
popf
daa
pusha
jno
push
mov
dec
cmp
fcmovbe
dec
aad
xor
sbb
jns
test
dec
cmpsb
stc
xchg
lds
mov
punpckhbw
outsb
test
jns
jmp
push
xchg
mov
aas
pop
out
jl
mov
push
mov
pop
outsl
shll
out
repz
jnp
jbe
mov
dec
popa
pop
subb
addb
arpl
fcmove
push
xor
mov
adc
sbb
pop
mov
sbb
dec
pop
jmp
dec
dec
stos
aam
out
mov
cmp
insl
mov
or
xchg
adcb
fucomp
dec
sbb
lahf
into
pop
push
xor
and
ljmp
adc
xchg
xor
scas
jmp
std
fs
dec
cld
test
mov
movsl
andl
jns
jp
stc
fistpll
movsb
mov
pop
mov
jae
std
push
pop
imul
leave
sbb
inc
lods
mov
xor
fcomps
mov
stc
push
popf
push
xchg
shr
mov
fcmovu
shrl
outsb
mov
into
roll
inc
pop
pusha
cs
aad
xor
jmp
repz
jae
fiaddl
inc
adc
push
jbe
arpl
sbb
test
xor
leave
push
mov
idivl
cmp
mov
fisubl
test
and
sbb
jnp
les
adc
int3
add
xchg
addr16
fstps
daa
cmc
aas
lret
cmp
int3
add
mov
mov
arpl
fsubs
aaa
jp
repnz
das
mov
xchg
sahf
xor
shrb
add
aad
push
dec
je
daa
movsl
jbe
dec
sahf
mov
ljmp
xor
data16
lret
fstpt
pop
ret
iret
enter
scas
and
enter
jnp
arpl
sbb
dec
mov
popf
loopne
or
lods
lods
aaa
test
or
mov
insb
clc
xchg
mov
xchg
jno
xchg
cmpsb
mov
dec
or
xchg
push
xchg
or
pop
pusha
call
lcall
push
mov
insl
lds
push
dec
shrb
scas
or
imul
adc
and
adc
clc
stos
ljmp
sbb
ja
pop
in
push
xor
test
lahf
dec
int3
sub
lods
jge
push
jo
push
jno
mov
aaa
sbb
mov
mov
inc
out
hlt
pop
dec
into
insb
xlat
mov
int
inc
or
out
add
arpl
or
and
fidivrs
aas
inc
pop
shll
int
in
jno
imul
xor
in
enter
pop
inc
fmul
cli
mov
and
leave
shll
icebp
push
add
add
cld
idiv
ja
aad
scas
shl
and
das
icebp
mov
lds
xchg
icebp
gs
ficoms
in
fs
rclb
push
sti
fnstcw
frstor
pop
hlt
out
loope
aam
xor
rol
or
jmp
pop
stos
xor
ds
jnp
cs
lds
imul
rolb
fidivs
push
in
xor
test
test
call
xchg
fucomp
addl
jecxz
rorb
les
pop
push
repnz
shrl
lods
and
das
imul
pop
aad
cmp
mov
imul
xor
stos
das
int
sub
jnp
cld
push
cmp
jge
and
cmp
int3
aaa
orb
push
loope
mov
push
pop
inc
pop
jg
or
pop
cmp
cltd
mov
push
sbb
out
pop
pop
add
cwtl
inc
mov
cmc
lret
jecxz
push
in
or
stos
scas
fdivs
in
repz
xchg
icebp
add
cwtl
mov
cmpsl
push
cli
insl
sar
ljmp
sbb
fldcw
movsl
jl
gs
addb
push
or
pop
in
sub
or
stc
mov
repz
inc
jbe
adc
mov
loope
into
dec
and
mov
dec
mov
mov
push
inc
xchg
out
add
je
xchg
cmp
jecxz
inc
cmp
adc
jge
push
lods
in
cmpsb
mov
out
adc
jge
adc
mov
mov
jnp
push
jne
fidivrl
jbe
dec
cs
add
psrlw
jns
mov
jg
or
cmc
jo
cmpsl
repnz
add
enter
into
xor
hlt
int
out
int
inc
ret
mov
cmp
sub
push
xor
les
mov
sub
jge
std
cwtl
rep
jmp
aad
scas
mov
fisttpl
mov
cld
mov
push
mov
push
call
ret
repz
scas
push
cmpsb
into
jle
lret
cli
mov
push
sub
xchg
or
fld
les
seto
xchg
lsl
xlat
mov
pop
sbb
and
mov
aaa
push
jl
adc
xchg
shlb
aas
mov
sbb
popf
lret
cmp
mov
es
rolb
or
pop
adcb
pusha
out
mov
mov
xchg
sub
mov
dec
mov
cmp
js
loope
sti
or
outsl
aaa
and
lds
repz
sub
aas
bound
pop
ret
mov
adc
pop
sbb
ja
inc
pop
add
push
scas
mov
jno
mov
addb
mov
adc
ss
les
lahf
xrelease
add
sub
arpl
std
call
ja
or
push
lods
push
adc
cmp
push
xchg
adc
fisubrl
push
xchg
addb
inc
adc
movb
push
cmp
sbb
sub
inc
dec
add
xchg
pop
dec
fxch
jae
mov
fwait
pusha
jmp
pop
stos
mov
mov
add
push
cli
pusha
mov
ja
stos
test
rolb
aaa
mov
es
mov
lret
insb
loope
lods
bound
test
fnstenv
inc
or
and
outsb
add
cmp
jns
cli
xchg
call
fsubrs
and
std
xor
aad
push
sahf
cli
gs
inc
mov
pop
adc
pop
pop
lret
mov
incl
inc
adc
adc
out
cwtl
ljmp
push
push
push
test
mov
or
or
int3
lock
jmp
dec
clc
push
and
cmpsb
stos
jno
popf
or
sbb
mov
push
cmp
push
daa
ud2
or
cwtl
pop
pop
fcomps
popf
mov
sbb
fbstp
call
outsb
shll
push
or
or
jge
push
jne
pop
mov
je
cwtl
cmp
add
mov
int3
and
outsl
out
cmpl
lret
push
xchg
push
in
push
pusha
fdiv
inc
inc
out
xor
dec
cs
push
mov
imul
frstor
mov
aas
sub
inc
adc
cmc
push
jp
push
adc
xor
jle
shll
into
dec
push
lret
into
and
mov
scas
aad
add
push
push
std
cmp
pop
jno
add
pop
es
cmp
iret
mov
test
add
inc
mov
fcomp
lret
mov
inc
in
or
hlt
push
insb
jp
and
outsl
stc
xchg
mov
and
shll
push
es
paddb
sbb
dec
iret
dec
scas
int3
or
into
test
into
adc
xor
add
shl
mov
cmp
add
call
aas
lea
fidivrs
push
fldcw
outsb
push
cwtl
mov
cmp
xchg
sbb
jbe
inc
push
rcrb
jae
or
xor
mov
push
and
movsl
in
lahf
sub
pop
imul
insl
and
arpl
xlat
xor
arpl
adc
jmp
popa
mov
dec
push
xchg
imul
jns
push
mov
push
adc
shrb
sub
jns
dec
push
packsswb
xor
sarb
jp
push
mov
out
adc
xchg
xchg
mov
shll
test
pushf
stc
cli
or
insb
mov
repnz
mov
jge
fldcw
xor
xchg
push
stos
sbb
scas
loop
cmp
mov
xchg
lock
add
xlat
mov
int
add
out
xor
ja
and
mov
push
cmp
aaa
shll
bound
sbb
insb
cli
mov
mov
mov
repz
sub
sub
in
mov
clc
sbb
xor
iret
mov
or
dec
add
pop
dec
cmp
dec
fdivr
fisubrl
cmc
push
fcoms
mov
lret
cld
in
lods
stos
popa
or
into
lock
fs
push
data16
adc
inc
dec
ja
adc
add
push
imul
dec
cs
dec
or
add
mov
out
data16
daa
jg
pop
loope
fcmove
cmpsl
ljmp
sub
add
lret
or
sbb
in
lea
repnz
and
or
cmp
sub
xor
lcall
mulps
enter
mov
push
stos
in
sbb
les
call
in
fidivs
shll
inc
icebp
and
mov
rorl
xchg
mov
mov
imul
arpl
fdivl
push
popl
add
addb
and
cs
sub
dec
pop
in
sbb
leave
repnz
pop
shl
sub
bound
ds
bound
std
xor
ljmp
scas
clc
rolb
mov
lea
adc
push
jns
aad
in
pop
scas
leave
lds
jecxz
lcall
call
xor
ret
xchg
jp
cltd
mov
addr16
loope
nop
iret
pop
pop
cmp
insl
enter
mov
adc
adc
hlt
pushf
dec
xor
mov
idivb
jmp
test
shl
inc
scas
jne
and
lret
dec
sbb
xchg
pop
and
lret
sub
data16
das
jp
scas
adc
ljmp
mov
mov
or
and
sub
test
mov
push
mov
mov
jne
bound
movsb
pushl
or
mov
lret
and
jle
xchg
aad
call
loopne
aaa
add
push
xchg
push
pusha
xchg
ljmp
adc
xchg
xchg
bound
mov
mov
sahf
imul
sbb
inc
push
lret
dec
das
push
mov
std
jecxz
or
push
xor
data16
sub
jecxz
gs
fbld
push
pop
loop
push
dec
into
call
dec
leave
aad
ror
lods
jb
ss
lret
daa
pop
jbe
fst
mov
cmp
std
ret
sub
jmp
loopne
adc
dec
fistl
add
cmc
repnz
cli
cmp
js
xchg
mov
shlb
inc
sarl
adc
dec
adc
push
add
mov
jp
pop
outsl
mov
cwtl
negb
ljmp
pop
adc
and
icebp
lret
xchg
lcall
push
mov
pop
inc
xlat
rep
in
test
xchg
sti
rcrl
es
lock
ja
mov
xchg
scas
xchg
fisubrs
movsl
dec
fyl2xp1
lods
add
std
sbb
push
sbbb
sar
test
ljmp
test
out
divb
and
jmp
xor
sbb
call
push
fimuls
addl
std
sbb
addr16
jb
dec
out
dec
mov
dec
push
adc
mov
dec
inc
scas
mov
outsb
push
jno
cmp
push
mov
or
mov
dec
enter
out
inc
subl
outsb
pop
imul
push
movsl
and
sub
sahf
pop
insl
mov
or
add
adc
cmpsl
aam
repnz
jnp
mov
xor
aad
lret
mov
mov
or
ffree
cmp
pop
or
jge
imul
inc
ficomps
push
fwait
das
pop
sbb
fcomi
fucomip
push
int
mov
das
jmp
cmp
add
xor
gs
add
ljmp
outsb
adc
pop
repnz
xchg
scas
mov
stc
leave
inc
mov
insb
loope
rol
xor
xchg
int
adc
adc
leave
lods
jo
adc
ror
sub
add
sbb
or
das
pop
inc
or
xor
mov
scas
in
testl
and
push
pushf
mov
push
cmpsb
data16
nop
pop
add
push
shll
lea
call
dec
arpl
mov
push
out
outsl
int
movsl
xor
sbb
pop
jns
cwtl
mov
imul
mov
ss
scas
shl
pop
push
sarb
out
dec
insl
psubsb
in
repnz
jno
xlat
and
in
je
mov
faddl
shrb
dec
jbe
mov
xchg
sbb
fmull
pop
pop
fsubp
mov
mov
or
jecxz
cmp
fstpl
fidivrs
lods
inc
pop
fs
push
inc
aam
or
xchg
inc
jg
mov
inc
mov
pop
xchg
pop
call
push
ret
mov
inc
test
push
jb
data16
mov
add
push
dec
cmp
rcrb
insb
aas
cmp
adc
xor
push
jecxz
lret
inc
mov
or
int
jecxz
out
aas
push
fucomip
out
jno
sbbl
lret
lock
jns
imul
fs
xlat
jbe
sub
pop
sbb
stos
test
pop
and
add
stos
enter
jnp
sbb
inc
lret
push
clc
shl
xchg
jg
loope
data16
push
cwtl
sbb
shll
inc
or
fcomps
adc
popf
add
adc
jbe
inc
and
cmpsl
mulb
fildl
sahf
jno
and
jmp
sub
jns
and
cmpsl
imul
push
xchg
jp
xor
cmp
mov
popf
outsl
or
or
js
cmp
cmp
mov
or
shlb
cmp
sbb
fmull
ss
rcrl
add
jne
cmp
mov
xchg
movsl
cmp
push
mov
sti
sbb
sti
pop
lcall
in
mov
lahf
and
pop
push
pushf
mov
mov
sti
loop
lret
aam
xor
sbb
mov
xchg
cld
dec
push
push
sbb
cmc
cmp
add
repz
jecxz
shll
loop
push
xchg
ljmp
scas
add
mov
leave
xor
rcr
out
inc
sti
jbe
xchg
sbb
loope
stos
xor
fisubrl
bound
sub
ljmp
dec
fimuls
test
mov
or
mov
cmp
cli
es
xchg
xor
orl
mov
dec
lods
cwtl
mov
mov
cmc
jge
sbb
ret
mov
xchg
fwait
mov
pop
daa
and
adc
mov
mov
mov
push
cmp
movsb
fs
mov
dec
cmpsl
ds
push
sbb
popa
idivl
ss
movsb
mov
mov
and
adc
movsl
hlt
dec
enter
out
adcb
cmpl
mulb
inc
outsl
pop
push
ret
sarl
shll
rorb
mov
out
data16
jg
aad
jecxz
int
mov
or
jae
sahf
lods
xor
outsl
dec
sahf
dec
pusha
jns
cmp
das
shll
fidivrs
fldl
inc
int3
ds
xchg
ljmp
data16
cmp
out
popa
in
insb
jb
xchg
dec
push
dec
stos
adc
dec
mov
shlb
test
push
push
inc
ja
clc
xchg
out
push
sbb
jo
std
iret
sbb
sbb
adc
push
inc
xchg
scas
lods
jne
xlat
addl
jecxz
or
nop
mov
lods
ret
jae
daa
movsb
jg
dec
mov
cmp
and
loopne
imulb
mov
dec
or
xchg
jecxz
cmp
movsl
add
repz
mov
lret
adc
xchg
add
push
add
loop
idivb
ret
enter
push
jne
ret
inc
mov
cmpsl
xchg
scas
pop
xchg
repnz
jnp
les
test
imul
sub
fs
adc
test
and
mov
nop
jmp
mov
movsl
dec
xor
jb
xchg
test
mov
mov
sub
push
dec
jecxz
stc
push
push
dec
pusha
ret
sbb
mov
inc
test
xor
cmp
dec
xor
adc
xchg
std
cmp
out
jnp
in
jecxz
mov
sahf
mov
js
ret
pop
adc
les
stos
push
adc
popa
gs
mov
sub
into
shlb
jnp
jp
js
pop
xchg
mov
xchg
lea
sarl
mov
lret
sub
mov
or
inc
inc
adc
in
push
jp
or
insb
cmp
inc
clc
mov
pop
das
sub
and
pop
adc
bound
pop
ret
out
idivl
inc
adc
lods
inc
push
fisubl
inc
leave
jne
lock
jecxz
push
fistpll
mov
mov
subl
sub
sbb
inc
and
es
cs
out
mov
mov
mov
js
cmc
push
dec
rorb
pop
or
cld
xchg
add
inc
lea
ret
adc
insl
dec
sti
popfw
inc
insl
mov
jno
sbb
and
jp
pop
add
xchg
lods
addr16
mov
or
or
stos
sbb
in
negl
int
mov
cltd
adc
aad
ljmp
mov
rorw
cmpsl
cmp
arpl
push
or
xchg
pop
mov
popf
xchg
mov
mov
dec
xchg
and
pop
xor
push
cltd
fcompl
jo
mov
dec
outsl
adc
mov
pop
pop
addb
data16
rcl
divb
pusha
into
xchg
push
popa
push
cwtl
sub
outsl
inc
sahf
xchg
dec
loop
pushf
out
xorb
push
lret
fildl
hlt
sbb
mov
and
imul
mov
call
cli
ret
adc
pop
sti
leave
loop
insb
push
xchg
cmp
test
movsb
push
or
insb
mov
ss
and
jns
push
les
dec
loopne
adc
adc
aaa
pop
sti
inc
sbb
idivb
test
push
ds
adc
sub
aaa
out
jns
push
sbb
leave
out
add
sbb
ret
mov
xlat
pop
mov
sub
xchg
xchg
out
add
mov
jmp
js
mov
jg
sbb
je
mov
or
pop
pop
repnz
iret
loopne
sub
or
aas
leave
lcall
inc
dec
sub
push
fildll
add
jo
xor
inc
dec
int3
fisttps
adc
or
push
popa
pop
sub
hlt
fdivrp
cltd
mov
sarb
stc
sub
dec
jno
int3
std
in
fs
lcall
and
stos
cmpb
aad
js
cs
cli
mov
xchg
ret
out
mov
cmp
setg
inc
aam
xor
push
mov
lds
aaa
outsb
nop
psrad
and
dec
test
nop
in
inc
push
xchg
xchg
mov
mov
jb
loope
mov
jno
xorb
clc
pop
dec
sub
in
loop
lock
movb
je
dec
jae
movsb
mov
push
mov
pushf
scas
mov
push
sub
in
or
xor
dec
aam
inc
cmc
lret
pop
ljmp
mov
cmp
mov
cmpsl
inc
into
mov
cmpsb
xchg
add
mov
adc
movl
ficomps
aaa
push
mov
cmpsb
adc
mov
loope
xchg
xchg
cltd
pop
sbb
cli
push
sub
lcall
test
data16
test
xor
pop
imul
repnz
repnz
xchg
lods
cmpb
enter
cs
cli
mov
mov
sbb
daa
ljmp
stos
cld
out
rcrb
pop
insb
ja
cwtl
ljmp
push
add
add
sbb
sahf
sahf
add
loopne
test
daa
aam
je
divl
push
mov
lods
jo
cmp
mov
outsl
jge
inc
ljmp
dec
and
xor
adcl
xchg
dec
hlt
inc
xor
inc
jns
loope
sbb
test
inc
popf
dec
jg
ret
call
and
xchg
stc
daa
shll
outsb
aad
pop
xchg
xchg
cmp
jno
loop
mov
fisttps
int
lock
popf
jmp
loop
iret
adc
mov
mov
xor
shl
hlt
pop
ja
cmc
subl
iret
mov
shll
cli
mov
sub
gs
stos
inc
inc
cmp
mov
inc
mov
lods
sbb
insb
jne
jno
dec
lahf
xchg
test
push
dec
nop
xor
fwait
scas
xchg
es
sbb
iret
add
mov
pop
mov
cmp
xor
les
sub
out
xor
cmp
jp
push
and
or
adc
subl
add
clc
scas
ds
push
movsb
pop
adc
sti
int3
dec
pop
push
inc
sti
push
inc
jnp
cmp
cmp
js
aad
pop
loop
push
loope
ret
stos
pop
or
pop
inc
sub
sub
ret
add
mov
inc
or
loopne,pn
xchg
std
fdiv
movl
notb
pop
ficoms
xchg
sub
insl
rclb
ds
inc
andl
mov
sbb
cs
pop
pop
push
fs
cmp
mov
jns
cmp
xor
xlat
mov
dec
leave
push
in
loope
repz
push
or
in
xor
xchg
pushf
call
mov
lahf
das
outsb
pop
mov
mov
dec
cmp
mov
xor
ljmp
add
ret
into
mov
or
inc
scas
and
out
cmpsl
inc
push
rclb
jl
pop
and
cld
out
pshufw
mov
mov
jl
xchg
addr16
pop
mov
test
test
mov
mov
sbbl
sahf
jg
cmpsl
out
imul
add
push
into
mov
popf
jo
sub
sbb
push
stc
add
fidivl
mov
aam
xor
mov
push
gs
dec
icebp
mov
mov
loop
inc
int3
icebp
cmp
out
mov
repz
sub
or
inc
pop
and
lret
sub
xchg
jge
mov
mov
add
out
idiv
aas
out
dec
or
sbb
andb
mov
dec
add
gs
jae
jno
jle
lret
mov
mov
movsl
dec
xlat
ret
nop
jne
pushf
xchg
lods
bound
pop
test
sub
dec
jecxz
mov
jge
cltd
jb
push
out
sbb
ljmp
and
cld
fbld
out
push
adc
add
pop
push
mov
dec
rclb
popa
lea
xlat
or
mov
lods
push
in
or
sub
lret
add
ljmp
cli
sbb
mov
sub
scas
aaa
mov
ss
test
testl
push
lret
fcmovnb
sub
bound
dec
fmull
mov
xchg
icebp
popf
inc
inc
adc
push
lods
push
test
pop
add
sbbl
adc
push
aas
mov
sub
lret
sbb
mov
fists
lea
mov
lock
add
ljmp
rol
in
xchg
jnp
aad
inc
push
pop
xlat
cmp
ds
jecxz
je
mov
mov
mov
jl
enter
or
test
cltd
fisubs
cwtl
mov
js
dec
outsl
arpl
jl
lcall
faddl
mov
shll
aaa
out
dec
push
xor
push
sahf
imul
cmp
add
roll
inc
jmp
hlt
pop
push
aam
jl
dec
and
push
mov
fldt
xchg
or
fwait
mov
es
jp
cmc
aas
push
push
sbb
mov
inc
leave
int3
adc
rorb
and
les
lcall
mov
xor
dec
xchg
mov
mov
cmc
xchg
sub
cld
mov
icebp
loop
mov
and
fidivs
sub
test
mov
mull
gs
pop
sub
sub
or
xchg
cmpl
mov
cmp
xor
cmp
int3
js
in
out
push
mov
or
scas
jl
inc
pop
cmp
dec
out
xchg
ret
pop
sar
lods
rcrb
stos
fcmovbe
test
mov
icebp
lds
cltd
jl
mov
push
push
fisubrl
outsl
sbb
push
fwait
sbb
inc
push
add
lea
roll
ljmp
mov
out
pop
enter
jae
shld
push
bound
cwtl
mov
mov
mov
pop
popa
jns
lret
xor
mov
or
push
jg
test
pop
sti
dec
lret
outsl
push
add
in
repz
icebp
add
inc
push
mov
insl
and
scas
sarb
pop
push
ds
inc
xchg
sbb
das
dec
scas
mov
cmpl
sub
insb
jle
cwtl
subl
ds
clc
imul
mov
jb
pop
je
out
pop
out
or
inc
fadd
ljmp
in
cmpsb
mov
jge
xor
xor
jnp
push
jmp
push
mov
xlat
dec
test
jmp
push
push
testl
dec
xchg
lock
stos
icebp
ret
test
xchg
and
pop
daa
sbb
mov
push
lcall
scas
dec
bound
mov
fxrstor
pop
pusha
mov
in
mov
loopne
test
movsl
mov
ret
lcall
ret
aas
push
or
mov
push
or
cmpsb
mov
mov
mov
mov
pop
adc
cs
ss
add
testl
sbb
mov
lods
loopne
xorb
addl
pop
in
cmp
sbb
xchg
imul
test
inc
lock
out
ja
scas
subl
stos
mov
or
pop
movsl
scas
inc
mov
out
push
push
rolb
dec
add
pop
stc
ficoms
pop
xchg
jge
pop
or
mov
xchg
xchg
jmp
leave
pop
icebp
mov
insl
or
repz
mov
pop
lods
lea
repz
addb
movsb
sti
test
aam
pop
or
aaa
xorb
jbe
das
subl
icebp
xchg
push
cmpsl
cmp
fiadds
xor
in
stos
in
outsb
icebp
sarb
or
jg
nop
xchg
push
clc
loope
pusha
std
test
mov
push
fdivl
fsts
enter
inc
mov
jno
inc
fnstsw
fsub
leave
and
push
subb
dec
mov
lds
cwtl
push
dec
sub
cmp
sbb
jmp
ja
lods
mov
dec
arpl
cwtl
stos
mov
lea
movsb
dec
repz
lds
jb
fcoms
aam
adc
adc
jb
loopne
pop
leave
jge
pop
pop
fistps
pop
in
jmp
outsl
add
add
lds
push
psubb
fdivl
pop
imul
aas
adc
test
rolb
push
sbb
push
mov
pop
outsl
xor
jge
lods
pop
bound
hlt
jno
xchg
bound
lods
fcoms
sub
or
out
add
rolb
insl
jmp
fisttps
pop
jp
into
test
jp
sub
out
sub
mov
pop
and
xor
inc
scas
sub
repnz
lock
mov
pop
xor
xchg
xor
jg
adc
sbb
aad
ljmp
sub
cli
cwtl
push
xchg
test
aas
inc
leave
sbb
out
xor
xor
adc
insl
sbb
ljmp
insl
dec
adc
mov
in
cmp
mov
push
jae
and
sbb
push
dec
repz
jg
sub
ja
fistps
cmp
leave
into
testl
push
rcr
call
int3
sub
xchg
xor
test
dec
aas
jne
jmp
mov
in
jne
fisubl
fistpll
push
testl
cmp
jns
xor
iret
sbb
or
in
dec
cld
mov
test
repz
popf
call
repnz
push
sbb
mov
sbb
insl
jle
lock
pop
les
mov
fistpll
out
inc
sbb
daa
xor
ss
cltd
xchg
adc
test
sbb
xchg
push
test
pop
mov
dec
sbb
in
cmp
mov
out
stos
mov
cmpsl
push
icebp
jg
insl
ds
jg
js
sti
inc
shll
es
and
xor
xchg
dec
mov
jl
sar
ret
adc
ret
xchg
lret
sarl
adc
sarl
xlat
cltd
inc
inc
jae
or
add
das
mov
cmp
shrb
ds
pop
in
xor
out
mov
iret
inc
push
mov
test
jmp
mov
cmp
and
mov
in
inc
repz
mov
aam
pop
push
ljmp
mov
shl
inc
xor
cmc
xchg
push
xchg
mov
leave
imul
cltd
dec
bnd
icebp
jne
sbb
popf
push
jmp
add
mov
adc
lods
jp
cmp
arpl
pusha
popa
pop
xchg
sub
imul
lods
inc
adc
pop
roll
dec
push
je
pop
out
flds
push
pop
ss
jo
sbb
loope
xlat
loope
jg
xchg
les
mov
xchg
jge
pusha
xchg
inc
mov
mov
xchg
xchg
das
mov
mov
xchg
shll
out
push
out
push
mov
ret
mov
mov
cli
lret
dec
ror
pop
rcl
gs
or
sbb
jle
aas
dec
out
test
push
jne
inc
jg
adc
push
fists
and
fwait
mov
or
roll
mov
roll
jnp
scas
shrl
mov
sub
mov
pop
sbb
stos
hlt
fcomip
loop
stos
and
cld
pop
jno
adc
dec
sbb
hlt
std
movsb
call
xchg
adcl
push
mov
mov
clc
fstp
cmp
call
dec
in
sti
lret
mov
jge
hlt
mov
pop
gs
lcall
push
test
mov
push
dec
push
lock
mov
aad
loopne
int3
lahf
and
into
mov
adcl
dec
xor
loope
inc
fdivrl
inc
ja
inc
or
int3
jl
out
pusha
push
or
fxam
jle
lret
popa
sahf
leave
xor
adc
inc
inc
sbb
ja
jns
adc
push
push
call
dec
aas
jg
inc
ja
sbb
div
fdivl
jp
adc
xorl
xchg
push
leave
das
xor
ret
cld
rcll
sub
add
push
mov
fwait
repnz
mov
arpl
mov
mov
shll
jb
sahf
push
ss
dec
xor
jb
es
shll
jle
test
fs
dec
jp
inc
mov
cmpsb
in
aaa
adc
xchg
sbb
mov
xchg
sbb
xor
cwtl
dec
dec
sbb
data16
mov
xor
cmp
xchg
loope
jae
sbb
sarb
jbe
fsubp
or
cmp
push
inc
pop
push
out
lret
add
add
cmpl
pushl
sub
jae
movsb
mov
xchg
test
adc
push
subl
mov
or
cmpsl
xlat
mov
fstl
inc
mov
push
notb
xchg
mov
or
inc
xchg
sti
or
or
add
adc
push
jne
shlb
subl
dec
stos
scas
test
mov
inc
fucom
lret
ljmp
jmp
cmc
insl
fisttpll
sahf
xchg
sbb
push
xor
repz
leave
rolb
int
adc
mov
and
and
adc
mov
push
ss
sub
xor
dec
or
addr16
jo
popa
sti
mov
and
push
mov
insl
mov
xchg
pop
aad
hlt
ss
lahf
fbstp
imul
pop
pushf
fwait
cmpb
cmc
out
movsb
jae
popa
inc
sysenter
push
mov
test
dec
ss
mov
xchg
mov
sub
cwtl
jge
icebp
mov
xorl
mov
fcmovne
repnz
dec
inc
cmp
and
inc
cmp
mov
shll
pop
aam
mov
adc
xor
or
dec
jl
aas
pop
movsl
and
loopne
inc
xor
adc
pop
sahf
testb
and
xor
mov
mov
pop
cmp
pusha
lret
jns
pop
xchg
scas
in
add
adc
push
xchg
mov
mov
sahf
hlt
fst
add
mov
shr
fcoms
xor
adc
shlb
sbb
or
inc
int
and
push
fs
in
mov
bound
push
or
idivl
push
xchg
scas
icebp
xor
stos
loop
ja
fwait
sub
sub
movsb
icebp
scas
add
jb
add
pop
js
call
pushf
in
push
insl
test
es
je
inc
fs
scas
adc
mov
cmc
sbb
ss
lods
data16
adc
movsb
gs
add
addr16
or
pop
pop
cmpsl
sbb
call
sbb
mov
xor
aaa
lea
jg
icebp
push
push
ds
je
imul
inc
or
cmp
pushf
cmp
adc
jp
or
sahf
push
mov
dec
xorl
jbe
div
stos
mov
psubsb
sbb
inc
xorl
sarl
inc
pop
sbb
xchg
imul
clc
mov
call
mov
push
xor
in
fprem
dec
cli
cmp
and
lock
or
push
gs
pop
fldt
call
push
subb
xlat
jne
in
jns
push
fs
arpl
cwtl
cmp
das
dec
sarl
jg
jns
and
add
mov
jmp
in
cmc
cmc
inc
add
sahf
mov
mov
ljmp
mov
fwait
out
imul
dec
pop
out
and
and
mov
mov
repnz
jge
inc
dec
bound
imul
les
test
xchg
je
out
xor
lock
cmp
enter
sbb
sahf
jg
inc
test
out
pop
jo
out
sub
cmpsl
mov
dec
add
inc
cmp
cs
sbb
cmp
out
adc
mov
aaa
out
pop
sahf
adc
aas
mov
cltd
inc
push
pop
sti
inc
lret
test
fisubl
dec
dec
or
lds
cmp
or
sbb
decb
fildl
jno
sarl
sbb
pop
xchg
push
inc
mov
jp
cmp
fwait
aad
gs
jp
loope
out
and
daa
out
and
jl
dec
cmpsl
and
mov
fiadds
cmp
cmpsl
out
mov
test
mov
jo
xchg
popa
test
into
lock
mov
aad
js
test
sbb
or
adc
out
fcompl
jne
cmp
insl
or
and
push
cs
in
sub
xor
and
pop
jp
mov
iret
imul
sub
mov
pop
pop
aad
lahf
sub
out
sahf
mov
and
loope
lods
xor
inc
dec
repnz
out
xlat
sahf
adc
pop
aad
dec
and
push
je
lret
fcomps
es
jle
add
pop
int
shl
popa
test
pushf
bound
push
in
sub
loope
out
faddl
shl
mov
sarb
jo
pop
mov
pop
cmp
cld
andb
popa
sar
adc
out
loop
and
dec
jge
adc
stos
pop
push
pop
sub
add
cmp
cmpsb
pop
mov
mov
mov
popf
ss
cmpsb
je
sub
inc
cmp
sub
test
dec
mov
jbe
clc
cmpsl
jnp
xor
xchg
mov
pop
int3
fimuls
xchg
push
sarb
pop
xlat
jns
mov
icebp
and
das
lods
dec
xchg
sbb
out
in
je
and
subl
jmp
dec
mov
or
and
nop
orb
les
inc
xchg
icebp
xlat
push
adc
sbb
pop
add
pop
movsl
enter
rcll
dec
cmpsl
sbb
cmpsb
jecxz
xor
pop
sub
stos
ret
xor
call
fxch
and
sbb
xlat
jp
push
pop
inc
and
cli
aad
std
sub
testb
js
pop
inc
dec
mov
nop
sbb
ja
into
scas
fidivrs
loopne
xchg
mov
cmp
mull
roll
out
mov
adc
pusha
sub
xchg
not
dec
call
fimuls
stc
sahf
pop
cld
mov
xchg
mov
mov
or
xchg
ficoml
and
js
push
mov
sarl
adc
mov
jge
dec
lock
cmp
stos
jmp
and
jmp
mov
and
insb
or
gs
leave
cmp
add
ss
xchg
sbb
int
int3
fldl
lahf
or
clc
ret
aad
xchg
pop
nop
push
mov
pop
pop
iret
gs
mov
push
jns
push
fsubs
out
daa
daa
daa
jae
out
jmp
jl
mov
addr16
lods
sbb
rcll
icebp
aaa
mov
sbb
xchg
stc
xor
jge
lret
sub
fs
adc
cmp
int3
or
loop
lret
fmull
cmp
into
je
int3
rclb
jns
or
dec
cltd
mov
xchg
and
push
ja
js
notb
push
sbb
repnz
fisubrs
ss
sbb
jmp
jle
mov
inc
fisttps
or
adc
jo
pop
mov
in
cmp
cmpsb
loop
xchg
arpl
lds
inc
int3
mov
dec
into
test
jno
int3
lret
pop
fwait
cwtl
dec
or
loop
popf
lock
sbb
push
lds
xchg
es
mov
xchg
mov
and
loope
aad
cmpsl
negl
mov
pop
pusha
inc
mov
aam
mov
sbb
mov
pop
ds
cmpsb
push
jae
cld
cmpsl
fildll
bound
mov
adc
and
test
leave
jns
sbb
sbb
ret
mov
xor
xlat
insl
imul
and
sti
or
xor
out
adc
and
or
xchg
push
ljmp
sub
and
scas
imul
outsl
mov
stos
mov
stos
pop
mov
imul
push
push
ds
out
push
cs
jge
ret
arpl
enter
cmpsl
push
loopne
dec
outsb
lods
imul
sbb
orb
sahf
lahf
popf
push
ljmp
or
andb
adc
xchg
cli
cld
gs
test
adc
jmp
in
adc
shll
adc
add
dec
fisubl
rclb
sub
cmc
pop
mov
mov
ret
mull
sub
sti
pop
leave
aaa
mov
test
adc
imul
xor
hlt
leave
sqrtps
xor
cmc
call
mov
push
clc
lock
addr16
or
int
gs
mov
outsl
in
push
add
out
or
dec
repz
cmp
icebp
out
negb
xchg
pop
push
ret
inc
inc
cmp
clc
popa
lods
mov
pop
mov
pop
and
mov
xor
mov
out
mov
testl
loop
sub
lock
gs
inc
mov
dec
leave
orl
push
out
jl
cmpsl
popa
cmp
lds
mov
sbb
or
adcl
pop
add
inc
sub
adc
sub
test
fnstsw
cmp
mov
mov
mov
push
inc
push
or
aaa
mov
std
inc
push
sbb
fnstsw
push
or
and
xor
cld
push
sub
cwtl
add
das
cmp
push
cmp
sbb
mov
neg
ljmp
add
in
sub
sbb
pop
lock
lods
adc
xchg
jmp
xor
imul
xor
outsb
into
std
or
out
addl
or
add
push
mov
push
icebp
shr
adc
inc
lods
push
jno
loope
mov
sbb
sub
dec
dec
jge
sub
xchg
adc
scas
pop
sbb
loope
hlt
das
data16
cwtl
daa
addr16
xchg
out
mov
dec
stos
inc
or
sbb
and
negl
pop
repz
push
cld
xchg
leave
add
rclb
adc
inc
insb
cmp
dec
arpl
mov
scas
mov
lods
mov
fcoms
jl
push
in
mov
sbb
arpl
scas
add
jnp
shlb
clc
inc
push
enter
xchg
mov
cmp
cmp
xchg
jae
push
push
orb
cld
leave
outsl
mov
push
cmp
aaa
dec
xor
filds
test
sbb
lods
fstp
inc
and
pop
popf
xchg
push
ret
mov
xchg
cmp
pop
cmp
inc
mov
mov
out
arpl
mov
pop
mov
push
push
insl
push
push
addr16
mov
call
or
out
xor
lret
fdivr
jge
adc
add
fcoml
test
pop
pushf
xchg
sbb
lahf
scas
cmc
ret
cwtl
out
mov
pop
ret
popa
sti
movb
pop
clc
adc
sahf
popf
data16
loope
push
pop
add
adc
mov
push
xor
and
push
cmpl
cmp
xchg
pop
jmp
pop
test
mov
push
add
stos
xchg
loopne
add
add
stos
shlb
push
in
mov
cwtl
jmp
mov
fisubrl
add
cmpsl
mov
gs
xchg
inc
out
mov
enter
sbbb
les
or
mov
inc
pop
push
leave
lcall
js
cmpb
xchg
xor
adc
push
jg
out
jl
jecxz
jle
mov
dec
mov
xchg
push
into
bound
test
jmp
sbb
ret
xlat
inc
lea
repnz
ja
std
addr16
inc
adc
fnstcw
push
mov
fwait
mov
leave
xor
mov
repz
xchg
ror
mov
xchg
fistl
mov
push
lock
stos
and
adc
mov
jae
xchg
push
jle
sub
cld
psubw
sub
mov
pop
popf
negb
sahf
cli
push
and
xor
lahf
mov
inc
std
inc
sbb
cmp
mov
mov
xchg
hlt
lahf
sbb
sub
stos
fwait
push
lods
stos
arpl
and
dec
push
cli
xchg
fidivrl
jmp
cmp
sahf
ret
gs
fistl
inc
and
pop
fwait
ret
sbb
xor
test
cmpsl
sbb
sbb
jg
dec
int
aam
lods
aaa
push
push
fdivrs
add
cmpsl
sub
adc
aas
ret
inc
cmpsl
out
cmp
push
jns
lahf
jge
push
bound
hlt
mov
mov
push
pushf
xor
xor
ret
std
and
outsl
dec
loopne
cwtl
cmc
leave
int
mov
fstl
aad
ja
pop
rorb
push
es
xchg
movsb
test
inc
in
mov
sub
xor
cs
stos
pop
in
push
cmpsl
into
push
mov
pop
pop
pop
sbb
enter
and
fstps
in
sub
adc
in
and
lcall
mov
movsl
push
repnz
lea
lds
fistl
cmpl
pop
pop
sarl
lret
cmp
xor
push
sub
cli
jmp
dec
js
fldenv
test
loop,pn
clc
fstps
ret
scas
jecxz
or
sub
inc
fsubrp
dec
mov
fs
loope
jns
push
mov
rclb
std
cmp
mov
and
sub
pcmpgtd
sarb
notb
or
or
leave
mov
lret
mov
pusha
dec
jg
mov
lret
inc
or
push
fwait
jbe
push
mov
rcrl
sbb
xor
push
andl
out
nop
mov
into
xchg
test
cmpb
cmc
movsl
sbb
mov
pop
xchg
stos
mov
mov
lret
dec
jmp
mov
cmpsl
jo
mov
pushf
arpl
mov
inc
cmp
fwait
xchg
xchg
pop
pop
and
jle
pop
push
mov
addr16
mov
dec
push
jno
call
dec
je
push
fldt
xchg
fdivrp
clc
ss
out
je
lcall
mov
mov
sub
dec
iret
fs
and
mov
push
lret
adc
adc
popf
xor
cmp
insb
test
stos
jnp
mov
xchg
stos
sbb
mov
ja
fildl
enter
push
icebp
imul
mov
mov
sbb
out
imul
mov
leave
fidivs
ror
aam
sub
pop
mov
aam
daa
xor
xor
lcall
loop
fwait
pop
data16
xchg
cmp
in
inc
add
in
adc
push
mov
dec
xchg
insl
mov
ds
icebp
pop
clc
test
pop
out
fists
xor
call
push
inc
loop
pop
cmp
js
adc
out
leave
sahf
xlat
pop
ja
mov
popa
call
adc
dec
in
lret
and
jge
jnp
push
add
mov
mov
bnd
int3
cmc
mov
jo
sbb
inc
mov
mov
stos
pop
rorl
out
mov
mov
push
fildll
pop
jne
lret
sub
pop
add
mov
xchg
lahf
nop
fnstenv
dec
sub
mull
bound
mov
pop
cld
sarb
movsl
cmpsl
xchg
mov
fldenv
fcomps
arpl
inc
pop
add
cmp
mov
in
push
movsl
xchg
mov
dec
addr16
in
mov
cmp
mov
or
adc
cmp
shlb
cltd
push
cmp
shll
pop
xchg
mov
mov
cmp
cmc
test
inc
das
imul
push
push
sbb
pop
mov
jp
loope
jp
mov
lcall
aas
cmp
test
ljmp
mov
mov
jo
aas
cld
cli
lods
adc
out
add
scas
xor
dec
in
add
fdivrs
push
push
jns
mov
sbb
cmp
cmp
dec
sbb
ret
in
and
lret
mov
mov
jp
pop
cli
mov
jne
sub
inc
mov
fmull
loopne
pop
push
es
push
stos
xor
hlt
fldpi
movsl
pop
pushf
pop
push
sbb
roll
movsb
out
xor
sub
shr
outsb
loop
cmp
push
outsl
and
cltd
je
das
movsl
dec
fists
xchg
mov
in
dec
leave
mov
shrl
dec
and
pop
mov
sbb
clc
inc
js
inc
movsb
fldcw
inc
cmpsb
push
iret
bound
mov
add
add
adc
mov
mov
or
inc
and
mov
loopne
lea
clc
loopne
dec
test
jo
mov
mov
xor
sahf
mov
jecxz
xchg
mov
pop
add
out
aaa
int3
inc
adc
ret
dec
arpl
loop
call
fisubrl
fcmovbe
push
add
jb
lcall
je
sbbb
icebp
ljmp
and
icebp
gs
movsb
xchg
adc
mov
lds
scas
push
jb
call
pop
cmp
andb
xchg
push
dec
jne
fidivrs
stos
movsb
sub
cmc
adc
pop
out
add
pop
mov
sbb
xchg
outsb
mov
sahf
outsb
pop
push
dec
aas
xchg
fcomip
faddl
aam
and
lret
push
adc
or
pop
in
and
xchg
stc
cltd
jns
data16
xchg
in
test
mov
xchg
mov
mov
or
inc
fwait
pushf
fs
cli
sub
cmovns
jg
mull
or
popa
imul
lds
mov
ss
dec
fwait
xchg
dec
dec
stc
add
je
adc
movsb
fists
outsb
lock
inc
cli
sbb
pop
fcmovb
mov
pop
out
and
and
test
imul
push
mov
inc
or
adc
lods
xchg
arpl
jg
add
cmp
sarb
mov
cmp
pop
and
xor
xlat
out
xor
insl
imul
xchg
stos
rcrb
add
mov
cmp
mov
mov
xchg
pop
pop
add
dec
jle
inc
push
and
pop
popf
mov
add
and
pushf
xchg
cli
jnp
pop
movsb
addr16
mov
pusha
pusha
sub
fs
lahf
jmp
xor
xor
bound
xorl
xor
sti
mov
mov
and
and
in
test
pop
mov
jns
negb
jno
outsl
fimuls
addr16
mov
fmulp
lds
stos
mov
cld
cmp
sbb
jbe
mov
mov
in
arpl
sbb
in
inc
jb
xlat
sbb
sbb
loopne
fistpl
jmp
or
fmul
cmp
ss
inc
push
rorl
out
test
aaa
js
add
sahf
add
mov
or
push
jmp
xchg
stos
rclb
mov
out
filds
xor
adc
add
mov
xchg
jge
lret
mov
arpl
gs
mov
xchg
push
and
aas
cmc
jge
mov
jo
stc
inc
jg
xlat
mov
shlb
add
movsb
in
and
cmp
mov
insb
dec
and
clc
inc
or
rolb
inc
adc
lcall
push
ljmp
mov
movsl
jl
jo
out
fidivrl
jp
aam
cwtl
push
add
inc
jg
lds
adc
cld
in
sub
jnp
cmp
sbb
pop
stc
lret
push
stos
out
fsubl
rorb
ficomps
mov
pop
and
stc
loope
mov
sbb
gs
pop
sbb
std
aaa
xor
mov
add
lock
fdivrl
cmp
cmpsb
pop
data16
dec
cmpsb
mull
and
fsubr
lock
jmp
call
leave
lahf
fidivs
push
sti
test
push
lods
aaa
mov
ret
cmp
stc
lea
push
mov
ret
push
inc
xchg
or
mov
inc
das
or
mov
fstpt
sbb
insl
jb
aaa
das
mov
inc
xchg
jge
std
mov
lcall
mov
sub
and
jp
les
add
mov
jae
jno
jne
mov
into
in
inc
mov
and
or
cmp
xor
icebp
sub
mov
dec
sub
inc
adc
insb
nop
mov
mov
dec
pop
test
rolb
sbb
sub
mov
out
dec
dec
mov
xchg
dec
adc
nop
enter
movsl
call
add
jmp
lret
adc
test
xor
jge
fiaddl
and
adc
inc
and
lret
add
jnp
push
fcomps
arpl
mov
xchg
add
ret
imul
iret
jl
push
int3
cmp
fidivs
and
fidivl
mov
out
and
mov
mov
mov
out
xchg
mov
repz
mov
mov
flds
jecxz
jmp
test
mov
dec
pushl
pop
loopne
lock
cmp
jp
jbe
daa
inc
mov
sti
add
xor
aad
jl
ret
fadd
or
and
lahf
testb
xorl
xor
out
push
xlat
pop
adc
adc
cmc
mov
stc
jno
sbbl
cmp
pop
fstp
xchg
stos
mov
jno
jae
jnp
jne
lahf
dec
clc
stos
pop
pop
fwait
mov
push
sti
into
xor
call
lahf
cmp
push
lods
ret
mov
sbb
ret
decb
add
inc
andb
mov
scas
xchg
cmpsl
inc
lods
mov
les
lods
fsts
cmp
sar
mov
je
push
mov
or
std
aam
sub
mov
pop
cmpsl
xor
xchg
aaa
cs
mov
mov
loopne
jle
cmp
rcrb
test
lret
fwait
pop
out
cmp
in
outsb
adc
add
push
adc
mov
sub
in
sub
mov
test
scas
push
insb
sbb
cmovns
aad
sub
inc
addr16
push
movsb
xor
cmp
xorl
mov
vpshaw
mov
jp
jns
sbbl
rorb
jns
std
int3
mov
enter
xlat
shll
push
test
fiadds
or
adcb
popl
push
dec
daa
and
stos
iret
xchg
ja
mov
jg
stos
mov
sub
imul
cs
adc
pusha
or
insb
jns
inc
mov
mov
xchg
cmp
in
and
mov
js
inc
ja
jp
popf
mov
sbb
add
or
out
scas
out
pushf
dec
and
inc
xor
cmp
clc
movsl
mov
cmp
imul
or
add
xor
ret
push
ss
sub
inc
and
imul
sbb
push
dec
aam
in
mov
inc
and
mov
cmpsl
test
mov
pop
clc
mov
pushf
mov
lcallw
rcrb
mov
lea
stc
ret
cli
ds
out
inc
faddl
xchg
pop
ljmp
dec
push
out
js
push
sub
test
fwait
pop
fld1
pop
adc
shl
pop
jp
xchg
or
dec
xor
das
lea
decl
les
stos
mov
jmp
pop
arpl
popf
cmpb
loope
jecxz
fistpll
adc
jl
xchg
dec
xchg
imul
xchg
test
xor
jae
jl
mov
push
pop
push
adc
test
sub
xor
in
jb
adc
jbe
scas
xchg
jle
cld
dec
jno
test
mov
loop
pop
shll
imul
jmp
fistps
mov
ss
mov
lret
lods
lods
mov
mov
sbb
sbb
outsb
dec
pop
call
and
mov
xor
es
jecxz
mov
cmc
sbb
sbb
repz
leave
sti
pop
stos
sbb
rcrl
or
lds
cmp
test
insb
xor
jp
addb
int3
popf
subl
es
mov
add
imul
popa
pop
adc
or
mov
jno
stos
rclb
out
je
popa
jecxz
mov
inc
xor
daa
cs
push
or
repnz
jg
pop
inc
aaa
sarb
fcomip
jg
testl
push
scas
mov
out
jg
mov
sub
push
mov
inc
xor
pop
jns
xchg
pop
and
jp
enter
or
xchg
jo
daa
adc
je
movsb
or
sbb
ljmp
test
js
lods
jns
dec
add
test
mov
adc
adc
mov
pop
out
rol
and
push
cmpsb
mov
insl
cli
aam
add
loope
or
dec
repnz
fnstenv
pusha
adc
or
in
dec
adc
mov
pop
pop
pop
mov
loop
das
cmp
jp
ret
and
retw
repz
popf
mov
seto
push
cmp
inc
jp
shll
push
popa
insl
mov
rcr
pop
lcall
push
mov
hlt
rclb
insl
imul
inc
mov
ss
push
xor
iret
mov
push
push
adc
xchg
js
outsl
jle
inc
mov
pop
add
gs
in
cltd
testl
sti
xchg
jbe
cwtl
addr16
cmpl
adc
lods
fsub
dec
adc
out
cmp
jle
mov
push
inc
xchg
cltd
add
xlat
xchg
mov
cmp
cmp
push
adc
in
sti
outsb
incl
push
insl
xchg
push
mov
fdivr
mov
enter
sub
mov
push
aaa
adc
mov
push
cmpsl
adc
stos
lea
popa
out
jb
movsl
or
inc
rolb
mov
hlt
or
cmp
mov
pop
dec
mov
lcall
pop
sbb
mov
xchg
fs
jg
sub
xor
dec
sub
cmpsb
ljmp
add
data16
pop
sbb
jmp
jnp
stc
mov
push
bnd
and
ret
push
mov
out
jb
cltd
add
mov
push
inc
or
or
or
jmp
cmp
mov
in
cmpsb
adc
lock
lret
dec
insl
sbb
or
das
sub
xchg
adc
xor
nop
mov
jp
jp
fcompl
xchg
xchg
std
mov
cmpsb
or
lahf
push
xor
jns
xchg
mov
lea
arpl
out
ret
dec
mov
cmpl
jae
add
lock
jnp
shrl
xor
jecxz
lock
orl
orl
lock
and
xchg
mov
stc
dec
push
aas
ss
cmpsl
ret
bound
mov
mov
adc
loope
mov
inc
negb
es
ss
dec
rolb
rcll
adc
imul
pushf
xchg
mov
pop
popf
movb
jp
inc
mov
push
add
insl
or
js
and
mov
mov
mov
lcall
dec
jecxz
insb
mov
sub
je
inc
cmp
add
mov
mov
js
call
pop
and
pop
gs
sub
mov
sub
aam
cli
pop
popf
jle
mov
lods
push
xor
lret
iret
xor
test
fnstsw
nop
cmpsb
stos
aad
jge
inc
fistpll
push
xchg
xchg
clc
mov
dec
stos
mov
sbb
adcl
adc
pop
add
jns
cmp
mov
fchs
loop
mov
inc
inc
lods
pop
shll
insl
insb
adc
cmpsl
add
aaa
pusha
out
pop
mov
lcall
stos
cmpsb
xchg
push
fcmovnb
dec
push
out
pushf
lea
lahf
aas
push
into
inc
and
cltd
fcomps
fsubs
dec
sbb
dec
and
mov
jns
outsl
inc
fucom
mov
cmc
sub
rolb
xor
and
pop
jle
leave
mov
shr
or
push
jecxz
mov
adc
fcoml
mov
or
xlat
scas
sbb
pop
xchg
xchg
mov
fstpt
lret
push
cs
sub
jge
jecxz
cmp
fcompl
dec
inc
add
pop
jnp
into
push
pop
jns
and
xor
push
mov
shl
cmp
xor
pop
mov
xchg
jmp
shl
cld
ror
push
xor
mov
xchg
push
rcll
mov
aaa
cwtl
pop
mov
testb
aas
popa
call
ds
cld
jp
stos
loope
and
icebp
push
ss
dec
scas
enter
sti
mov
push
shld
lcall
notb
call
data16
fwait
pop
cmp
and
lret
insb
out
std
incl
or
loop
push
mov
loope
dec
cmp
ret
add
sbb
test
mov
push
add
mov
dec
dec
inc
mov
fldl
gs
add
jb,pt
jp
sub
xchg
adc
cmp
lahf
cmp
out
xor
xor
xor
daa
in
ja
shlb
dec
and
fs
cmp
pop
mov
jo
sub
ja
hlt
out
pop
inc
sub
imul
inc
cmc
adc
scas
repnz
jno
fildl
jge
pop
pop
sahf
adc
rclb
jp
ljmp
into
or
cli
bt
and
movl
sub
sahf
fcoml
lret
rorl
enter
leave
xchg
cmp
inc
les
sahf
test
jo
jmp
xor
enter
aaa
mov
sub
xor
dec
adc
mov
lret
outsb
popa
sub
push
roll
and
adc
xorb
push
inc
xor
push
mov
adc
lahf
inc
and
pop
jmp
mov
or
daa
ss
xlat
cmp
xor
cli
je
sub
cmpsl
rorl
enter
jns
push
lods
js
push
je
mov
inc
pop
je
add
jne
push
call
pop
aad
lret
inc
mov
fidivrl
or
and
adc
lcall
mov
cld
scas
clc
shll
jmp
pop
and
cwtl
mov
push
push
and
cltd
or
inc
insb
rol
add
or
xchg
nop
stc
lods
aad
aaa
and
stos
dec
xor
pop
cmp
outsb
stos
andl
dec
out
mov
mov
jmp
daa
push
loopne
into
cmp
jge
enter
or
mov
shlb
mov
sahf
push
mov
fcoms
adc
mov
mov
stc
cmpsl
cmc
sbb
testb
repnz
jg
je
adc
stos
cli
mov
mov
rorl
xor
fcoms
dec
push
push
cmpsl
or
dec
mov
int
adc
movsl
mov
jo
add
cld
rolb
fidivrl
xchg
cmp
ss
xchg
mov
pop
xlat
cli
sub
sub
pop
jno
call
mov
iret
cmpsb
inc
shr
pop
cmpsl
stos
xchg
or
pop
push
aam
fdivrl
gs
jl
into
loop
or
insb
ds
iret
fildll
adc
cld
and
cld
inc
andl
aaa
push
fdivrl
in
xchg
jp
jbe
cmp
fisubrs
out
test
pop
push
fimuls
rorl
sahf
test
or
orl
xchg
mov
mov
sti
jo
jnp
mov
mov
add
cmpsl
xchg
fstl
xchg
sbb
pop
xor
scas
ss
icebp
xchg
mov
fbld
mov
jne
insb
jp
add
and
inc
ret
or
mov
pushf
jp
dec
dec
fs
mov
test
stos
or
test
and
rcrb
gs
clc
inc
fwait
sub
int
xchg
in
pop
xorb
pop
add
inc
cmpsb
pop
inc
imulb
lock
sahf
dec
dec
add
pop
xchg
mov
pop
xchg
js
incb
adc
test
fadds
jae
scas
fs
mov
cmp
pop
test
stos
divl
test
insl
pop
pop
xlat
sub
mov
rclb
decl
sbb
roll
stc
push
mov
jne
jns
mov
lods
sbb
inc
jmp
sub
rorl
sub
cmp
cmc
sbb
scas
sahf
sbb
popf
mov
sub
add
xchg
pop
add
jb
cmp
ds
out
inc
mov
push
mov
cmp
push
sub
mov
mov
pushf
dec
dec
push
xor
lea
and
xor
pop
in
xchg
es
adc
dec
je
dec
pop
arpl
imul
jmp
sub
add
aaa
jecxz
pop
xlat
lods
aam
add
in
mov
cmp
lcall
stos
pop
subb
out
cs
fidivs
inc
inc
lcall
lret
mov
fstpl
pop
les
sub
lods
icebp
xchg
hlt
pop
mulb
lcall
push
xchg
mov
pop
add
nop
add
jo
and
pop
cli
cmp
xlat
inc
loopne
lea
movsl
xchg
repnz
je
das
jmp
or
sub
lea
add
repnz
dec
testl
les
lods
sarb
movsl
mov
jno
or
push
pop
push
or
jmp
lea
inc
shl
sbb
mov
push
cmp
xor
std
mov
cmpsl
jmp
es
and
aad
rorb
jg
cmc
mov
xchg
call
and
fsts
fwait
testb
mov
dec
ret
ljmp
xorl
pusha
xchg
push
arpl
lea
cwtl
or
into
sub
push
popa
loope
dec
mov
push
hlt
push
into
leave
loope
xlat
cli
add
insl
cmpsl
lret
cmpsl
lcall
push
stos
mov
sbb
icebp
and
call
jmp
lahf
test
das
mov
daa
inc
jecxz
in
pop
lds
push
maskmovq
idivl
rcrl
jecxz
cmpsl
push
fstpt
scas
add
or
test
push
jne
xor
jbe
dec
fsubr
jns
in
aam
jo
or
flds
mov
shl
mov
jne
cmp
push
lds
stc
ljmp
pop
xchg
pop
pop
subl
fwait
xchg
xchg
mov
xchg
pop
mov
cmpb
pop
push
mov
push
xchg
or
jge
pusha
pop
lret
adc
adc
inc
and
sarb
ret
xchg
xchg
inc
add
into
push
and
add
mov
fisubrl
pop
mov
pop
loope
ss
sub
out
mov
fcoms
add
xchg
sbb
lock
cmp
ljmp
dec
xor
mov
enter
mov
insb
test
fisttpl
xor
xchg
xchg
mov
mov
cltd
lods
mov
push
mov
cmp
scas
outsl
inc
daa
ja
enter
inc
and
insb
cmp
out
or
push
out
mov
sarl
mov
lahf
push
xchg
lret
in
inc
sbb
aad
repz
loope
dec
scas
jg
jbe
outsl
sbb
xchg
sub
cmc
movsb
popa
cmp
scas
lret
insl
or
aam
fs
mov
out
sub
jg
mov
lret
out
push
pop
dec
or
imul
imul
xchg
push
push
out
sahf
inc
xlat
sti
sub
mov
mov
fldt
pop
mov
xorl
lods
adc
dec
in
xchg
mov
pop
fldenv
in
js
popa
mov
inc
les
es
arpl
pop
sub
jns
and
or
popa
int
in
test
mov
js
jle
test
movb
add
xor
sarb
sti
sub
add
in
xlat
cltd
imul
enter
mov
inc
dec
shl
fstpt
stos
test
pop
mov
insl
lea
xchg
aaa
psrad
push
loopne
jmp
test
fdiv
cli
mov
loop
es
inc
adcl
jb
inc
mov
pop
pop
outsl
jae
jge
bound
mov
add
addr16
sub
es
xor
pop
add
lea
pop
adc
mov
pop
inc
dec
add
mov
cltd
addr16
int
ja
repnz
iret
mov
je
xchg
popa
ds
jle
cmp
dec
pushf
jl
fstps
adc
out
fsubrl
aad
data16
lds
lahf
mov
mov
jno
and
jl
cmp
addr16
jo
iret
push
jmp
cmp
sahf
mov
sbbl
out
push
sti
loope
clc
lea
mov
repnz
mov
mov
mov
rcrb
or
jo
add
cmpb
aad
nop
xlat
xchg
lea
mov
sub
in
dec
push
out
cltd
push
cli
cmp
in
jae
out
pop
push
dec
and
cmp
dec
mov
mov
add
adc
mov
gs
jge
mov
push
into
icebp
xchg
sbb
cmp
and
cld
je
mov
and
loop
mov
dec
fbstp
xchg
add
out
insb
mov
mov
cmp
sbb
mov
jp
push
add
addr16
and
and
sub
dec
loopne
sahf
cmpsl
or
or
mov
xchg
add
cmp
repz
mov
add
cld
aam
jns
mov
push
and
dec
mov
jae
movsl
movsl
in
cmp
mov
repz
jl
xchg
dec
out
cmpsb
subl
mov
in
insl
pusha
scas
sub
push
sarb
or
jmp
repz
loope
dec
cmp
lea
jo
and
xor
out
inc
lahf
cmp
xchg
lcall
loop
jmp
xchg
sub
pop
aam
repz
mov
lds
mov
sub
loopne
out
dec
sub
pop
sbb
mov
jg
jmp
jle
into
movsb
pop
pop
jae
scas
lea
dec
nop
aad
out
mov
lock
mov
and
pop
mov
and
pop
push
cmpsb
sarl
push
push
push
or
clc
cltd
pop
mov
lods
mov
jl
dec
je
xor
hlt
dec
cmpsb
popa
dec
push
mov
orb
imul
jmp
and
xor
mov
mov
mov
shr
mov
notb
xlat
imul
push
aad
jnp
cld
mov
ljmp
test
xor
aad
faddp
inc
shl
adc
cmpsl
mov
cmpb
enter
adcl
imul
int3
push
dec
test
or
jmp
lea
mov
lods
adc
inc
push
and
cltd
loop
out
push
sub
jecxz
leave
arpl
fdivr
add
sbb
adc
push
jbe
test
or
pop
dec
dec
adc
push
aaa
adc
ja
push
mov
or
cmp
mov
jl
push
mov
movsb
pop
sahf
daa
adc
pop
scas
gs
adc
mov
pop
shl
hlt
mov
xchg
xchg
lds
movsl
orb
sarb
cmp
xchg
cmp
and
stos
out
jle
aad
inc
jmp
leave
pop
test
mov
xchg
jecxz
bound
jo
faddl
cmp
popa
dec
shr
fsubl
insl
mov
jp
push
aaa
test
lds
mov
jmp
mov
cmp
ss
mov
das
lods
add
inc
stos
scas
xlat
lods
cmp
add
out
imul
dec
and
adc
aaa
mov
xor
mov
xchg
je
cltd
in
pop
jno
ljmp
loope
add
push
in
testb
fstps
stos
adc
jno
imul
cmpsb
arpl
push
xchg
jl
inc
popa
outsb
fistps
mov
rclb
dec
outsl
into
xchg
jmp
push
gs
in
cld
inc
mov
sbb
rcr
jle
ljmp
lcall
stos
lea
mov
dec
fs
es
clc
xchg
jae
stc
pop
mov
mov
dec
dec
xor
lods
pop
in
mov
out
dec
and
jge
jge
push
cs
push
loope
mov
mov
push
enter
fists
ljmp
push
pop
inc
cmpsl
sbbb
jo
mov
sub
rorl
adc
call
das
jno
cmpsl
les
out
pop
push
pop
pop
push
stos
push
dec
js
mov
dec
mov
push
lcall
out
pop
cli
sub
stos
ss
inc
iret
adcl
cmp
push
push
nop
push
push
lods
sbbb
push
sbb
shl
test
ror
mov
inc
das
enter
je
mov
jae
shrl
fldenv
outsb
std
divl
sahf
xchg
push
test
push
sahf
pop
fisubs
popf
xchg
bound
mov
or
loopne
aaa
fs
jle
mov
lods
jecxz
inc
or
pop
xor
mov
add
js
call
sub
fdivrp
push
mov
mov
and
call
xchg
mov
cmpsb
stc
xlat
lahf
add
adc
call
cmpsl
sub
sub
cmp
mov
add
cmp
incl
arpl
jg
mov
aad
adc
test
out
dec
add
cmp
dec
aam
dec
push
xor
xchg
out
pop
jbe
cmpsb
aad
mov
push
ss
cmpsl
sub
fmul
or
in
lea
mov
add
aas
inc
sbbl
cmpl
mov
jo
pushf
sbb
es
pop
xlat
mov
out
push
mov
movl
jb
inc
jmp
orb
sub
lea
pop
lods
into
xchg
mov
and
pop
sub
adc
test
and
sub
xor
in
add
adc
cmpl
adc
das
adc
or
jb
mov
negb
cmp
pushf
rorl
push
mov
push
iret
lods
stc
mov
clc
push
mov
incb
jp
jmp
sbb
mov
mov
inc
mov
mov
cltd
lret
dec
xchg
jmp
push
or
adc
push
in
hlt
test
xlat
mov
pop
or
xor
mov
dec
stos
ds
orl
add
pushl
pop
idivl
sub
insl
fcompl
insb
push
xor
inc
out
fidivs
stos
test
or
mov
add
mov
dec
cmpsl
scas
pop
shrl
mov
lock
das
into
cmpb
lcall
jno
sub
inc
mov
jne
out
adc
dec
std
push
sub
jnp
stos
xchg
push
sarl
insl
lret
rcrb
mov
loop
push
stos
mov
push
push
push
mov
cltd
outsb
jns
jb
xchg
leave
fistpll
stc
rcrb
cli
hlt
xchg
fimull
dec
dec
insb
pop
arpl
sbb
push
push
popa
mov
repz
pop
data16
gs
cmp
and
stos
repnz
jp
xor
dec
aas
imul
pop
and
mov
mov
or
daa
jecxz
fdivrp
push
pop
sub
inc
int3
and
jmp
rol
or
lret
sbb
scas
aam
test
int3
call
push
adc
lock
jnp
and
add
int
cmp
loope
xchg
test
dec
aas
sti
lcall
inc
mov
lahf
and
cmp
dec
jae
les
out
arpl
adc
aad
dec
jle
data16
lods
mov
add
pop
sub
xchg
insl
stos
and
dec
imul
sub
push
mov
outsl
and
mov
sub
sahf
stc
push
test
lea
loop
ds
pop
bound
cmpsl
or
insb
mov
loop
cmovb
inc
test
mov
shr
dec
lds
jno
loope
jne
cs
xchg
sbb
mov
addr16
imul
jbe
adc
fstps
mov
xchg
mov
daa
inc
stc
popa
test
push
pop
pop
sub
sbb
mov
xlat
add
idivl
les
jnp
sbb
or
int3
or
dec
jl
mov
xchg
push
movsl
out
xor
sar
jae
cli
cltd
jmp
and
fwait
and
orb
inc
aas
aam
mov
fucomp
ss
mov
jae
sti
pop
loopne
or
mov
cmpsl
dec
jecxz
push
clc
sub
shl
int
int
mov
movsl
ljmp
fildl
cmp
divb
fs
xor
push
fs
fiaddl
or
push
or
addb
mov
xchg
xchg
adc
test
or
push
mov
js
pop
mov
push
mov
loopew
ret
dec
mov
mulb
fisttps
mov
leave
inc
aas
cmpsl
addl
imul
mov
idivb
popl
incb
mov
scas
mov
adc
mov
ds
stc
rorb
aaa
out
stos
dec
xchg
jmp
pop
jmp
test
in
jo
sbb
xchg
lcall
inc
mov
daa
in
add
xchg
mov
cli
outsb
mov
je
mov
adc
flds
jae
cmp
xor
ja
inc
mov
aad
mov
mov
addr16
jno
lcall
lret
xlat
and
test
xor
mov
mov
ljmp
pop
mov
push
sub
jne
lret
popa
insl
sbb
adc
std
outsl
shll
test
or
or
and
test
sbb
ss
push
adc
inc
stc
popf
leave
cmpsl
out
imul
test
adc
aaa
sbb
jle
aas
push
fbld
sub
test
loop
adc
push
xchg
push
repz
xchg
push
cmp
scas
addb
adc
dec
and
push
dec
xor
std
sbb
or
pop
das
negl
movsb
sarl
lds
lea
pusha
xchg
cs
mov
arpl
dec
imul
fchs
adc
cltd
lahf
sarb
mov
xchg
scas
scas
lea
xor
ficompl
sub
push
xchg
jl
push
and
test
movsl
imul
shrl
call
nop
dec
push
and
pop
xchg
mov
mov
js
adc
adc
lds
sbb
add
cwtl
mov
xor
fsubp
adc
cmp
scas
scas
lret
ret
pop
insl
pop
and
push
mov
pop
data16
pop
stc
push
jne
insl
dec
les
pop
mov
fbstp
inc
push
xchg
int
test
pop
jp
pop
and
test
ret
xor
jo
or
sar
adc
jo
fcoms
das
jb
push
sbb
aas
jl
das
mov
imul
idivl
imull
pop
das
fcoms
jbe
sahf
fimuls
into
idiv
xchg
in
pushf
popa
flds
loop
sub
adc
xchg
cltd
jg
mov
add
fistl
pop
movsb
les
scas
fcoms
mov
sub
inc
jae
jno
push
test
mov
pop
add
xlat
std
jns
shlb
aad
inc
sub
dec
sub
imul
mov
ret
ds
mov
mov
xor
movsb
movsb
repz
xor
lds
adc
cmc
ret
xchg
jge
xor
dec
pop
xlat
fldl2t
dec
into
mov
test
mov
dec
xor
pop
sub
mov
adc
outsb
pop
fisubl
out
push
or
rcrl
adc
push
xchg
shl
addr16
cmpsb
ret
mov
out
xlat
jno,pn
negl
sbb
outsl
mov
loop
sub
enter
or
push
mov
jne
ret
dec
jno
mov
cmp
aaa
jne
inc
pop
movsl
negl
aaa
xor
sbb
push
test
cmp
aad
xlat
repz
mov
iret
sbb
mov
and
gs
int
fcoms
std
and
jmp
out
dec
pushf
ret
or
lcall
lds
push
mov
movsl
mov
jecxz
cmp
adc
cmp
and
mov
fldt
inc
mov
pusha
shlb
cmpsl
push
jo
repnz
xor
lods
iret
push
cmp
loop
sub
mov
or
ds
ret
iret
jnp
fiaddl
scas
lahf
and
adc
dec
adc
or
adc
stc
stc
imul
popf
mov
sub
popf
cmc
pop
xor
pop
add
out
jge
jne
jp
adc
lods
cld
repnz
add
inc
inc
mov
pop
xchg
jo
cvtsd2ss
in
in
jnp
push
and
xlat
shrl
cmpsb
cmp
inc
fiadds
jle
mov
loopne
pop
imul
push
mov
push
push
mov
pop
dec
jae
xchg
push
pop
cltd
gs
loopne
push
adc
add
pop
bound
test
adc
enter
push
inc
cmc
mov
add
das
cwtl
out
or
dec
iret
cmpsb
mov
add
pop
sub
and
cmp
push
pushf
mov
sbb
cli
test
xchg
rorb
daa
notl
xchg
adc
adc
ja
outsb
stos
jns
push
push
xor
sti
rep
adc
and
xor
pop
cmp
fstpl
xlat
rdtsc
es
adc
push
sub
cmpsb
out
inc
or
dec
cmp
pop
loope
cmpsl
movsl
ret
and
stc
xorb
pop
je
cltd
lret
fs
fdivrl
xchg
and
pusha
push
or
out
outsl
or
sub
aaa
inc
pop
inc
cmc
pop
mov
jno
xchg
or
inc
stc
sub
cmp
call
int3
push
add
push
cltd
or
mov
clc
lret
or
mov
mov
adc
aaa
xchg
test
dec
cmp
mov
add
lcall
jmp
cmc
fstps
mov
xchg
mov
lock
scas
fisttpll
inc
sbb
lea
inc
js
test
ljmp
xor
aad
mov
jo
fwait
push
dec
gs
xor
inc
or
shrb
cmp
inc
pop
out
btrl
and
push
in
aad
mov
repnz
outsl
fiaddl
in
sbb
xchg
sahf
movsb
insl
lcall
pop
jge
xor
cmc
xchg
jmp
andl
mov
dec
push
pushf
jg
insl
out
std
frstor
pop
or
icebp
into
mov
loopne
repnz
and
jg
negl
lcall
push
mov
loope
mov
ljmp
jecxz
mov
inc
cmpsb
dec
fs
dec
les
sbb
push
je
repnz
mov
inc
lods
jmp
shll
mov
cmp
sbb
fdiv
jns
inc
rcrl
hlt
outsl
cmp
mov
xchg
int3
mov
pop
fidivrl
xor
cltd
cli
aaa
fwait
mov
mov
aam
mov
xor
push
sub
jl
jmp
pop
out
sbb
xchg
jle
movb
jle
mov
les
test
mov
movsb
pop
movsl
jnp
icebp
mov
jmp
cmp
mov
dec
dec
add
enter
adcb
test
xchg
jmp
gs
fnstsw
and
xlat
clc
cmpsl
ja
pop
adc
int3
lds
out
fdivr
flds
and
inc
sti
lret
movsb
or
sbb
out
jbe
cmp
orl
int
fldl
xchg
dec
jg
and
add
sub
mov
jbe
push
lea
pop
cmp
pop
bound
insl
sbb
dec
sub
test
psrlw
or
movsl
sbb
shlb
mov
pop
test
jle
dec
jle
faddp
stc
sub
and
jns
jmp
or
cmc
add
jne
pop
addb
mov
inc
or
pop
adc
cmp
and
js
jmp
shlb
sbb
sbb
push
lret
jle
addb
lods
lcall
mov
sub
scas
jo
cmpsl
shlb
fistpl
sub
stc
rcll
adc
push
rorb
add
mov
inc
push
int
sahf
push
jno
cmp
push
lcall
jno
and
lahf
ss
cmp
add
dec
jp
cmp
pop
test
ds
jnp
mov
je
sbb
push
test
inc
xor
mov
pop
sub
mov
push
fs
or
and
sbb
pop
dec
enter
inc
scas
scas
fists
add
in
xchg
jnp
stc
inc
in
dec
and
mov
mov
cwtl
rsqrtps
xor
dec
push
stos
aad
aad
std
stos
mov
or
lods
push
sub
push
push
cld
mov
push
fcmovnb
std
push
push
ficomps
scas
lahf
sbb
les
fsub
pushf
mov
mov
mov
sub
movsb
or
test
cli
mov
inc
test
xchg
or
sbb
aad
pop
lcall
popf
jl
ja
and
jg
test
mov
lds
xchg
cmp
orb
mov
xchg
and
inc
lods
add
js
ljmp
outsl
cld
in
das
es
inc
adc
push
imul
push
leave
mov
mov
mov
add
addr16
dec
inc
add
mov
test
sub
icebp
lds
lcall
add
cwtl
fisubs
sahf
add
dec
jno
xorl
xchg
inc
movsb
loope
fs
fbld
cmpsl
inc
lock
je
dec
cs
lahf
sub
in
fnstenv
or
fdivl
or
adc
mov
xor
dec
incb
add
inc
push
xor
or
dec
rol
cvtdq2ps
shll
insb
or
push
ret
pop
inc
test
cs
mov
shl
enter
push
pusha
mov
loope
add
clc
xorb
lcall
xchg
mov
fdivrs
mov
adc
sub
mov
addr16
cli
xlat
aaa
outsb
sub
daa
stos
inc
mov
aaa
xchg
xchg
sbb
cli
inc
insb
aaa
enter
inc
mov
mov
add
adc
cmp
mov
sub
fcomp
inc
cmp
mov
mov
ret
push
out
sub
std
inc
pop
into
rcl
pop
int3
push
pop
mov
or
or
jp
inc
add
mov
lcall
loope
gs
sub
js
fidivrs
sub
and
fxtract
jmp
roll
mov
fcoms
xor
sti
sti
sub
adc
mov
out
adc
stos
push
nop
in
cmp
lahf
mov
aas
jge
cmp
cs
inc
arpl
out
add
inc
in
ret
fists
mov
addl
std
jecxz
in
ljmp
cmp
dec
dec
repz
cmp
mov
mov
push
int
gs
cmp
je
lock
push
mov
mov
loopne
dec
inc
ss
cmp
aad
int
add
test
inc
imul
cld
pop
sub
subb
mov
lds
outsl
leave
ror
data16
mov
sub
addr16
pop
orl
leave
ljmp
mov
std
imul
mov
xchg
outsb
data16
fimuls
out
es
mov
aas
or
and
pop
sbb
iret
out
insl
xchg
xchg
mov
cmp
lods
mov
sub
xor
testl
bound
mov
fisubs
mov
pop
inc
pop
sahf
push
pop
mov
mov
out
outsl
fisubrl
ljmp
outsb
or
and
fdivs
lcall
test
push
sub
je
mov
mov
repz
in
daa
aad
adc
mov
pop
test
cmp
push
push
mov
pop
lret
adc
daa
lods
fstps
ret
inc
sbbb
rcll
out
in
loope
in
int3
leave
push
xor
dec
and
dec
jmp
push
aam
scas
and
or
gs
sub
pop
loope
push
mov
push
out
pop
cmp
jnp
add
arpl
outsl
rclb
jl
popa
aam
loopne
popa
cmp
sbb
sbb
mov
or
sbb
xor
int
mov
test
inc
sub
shll
lahf
dec
scas
addb
mov
xorl
push
pop
add
sub
and
je
loop
dec
sbb
xchg
xor
loopne
sub
in
andb
cld
das
dec
icebp
push
xlat
sbb
cmp
dec
jge
shl
repnz
push
and
mov
pop
inc
sbb
dec
dec
pop
jb
xchg
out
push
cld
das
pop
cs
inc
aad
out
push
cmp
mov
out
sub
xor
xor
add
lea
dec
fdivr
jmp
adcb
fistpll
loopne
jns
fsubl
jbe
mov
push
or
or
stc
addb
xor
iret
push
movq
std
cli
xchg
imulb
add
jle
je
movsb
add
rcl
call
adc
jae
push
sub
cmc
pop
in
and
mov
fistl
push
pop
and
or
xchg
mulb
xor
mov
dec
outsl
xor
xchg
pop
pop
ret
and
sarl
mov
inc
mov
fidivs
xchg
mov
test
sbb
inc
jle
popf
mov
outsb
outsl
xor
sub
push
test
xor
movsb
loopne
incb
mov
fcmove
mov
pop
jp
cli
jb
test
push
pminsw
dec
pushf
pop
shl
repz
cwtl
mov
dec
xor
and
bt
loope
mov
fdiv
mov
adc
pop
seto
inc
repnz
pop
push
dec
sub
pop
cwtd
jne
in
or
rcrl
pop
addl
mov
xchg
leave
repz
xchg
cltd
shrb
clc
test
dec
outsl
or
sbb
nop
and
icebp
in
mov
push
jg
mov
lds
test
push
fwait
sbb
inc
dec
sbb
mov
sahf
jnp
pop
mov
push
sbb
and
sub
inc
jmp
push
mov
out
mov
and
cmp
xchg
xor
push
jg
clc
shl
aas
jae
pop
aas
pushf
mov
lret
mov
xchg
out
mov
mov
imul
jbe
rdtsc
outsl
xchg
cmp
inc
jecxz
xchg
repz
decl
mov
mov
and
xor
lea
sub
and
je
xchg
push
inc
mov
inc
add
xor
xor
jmp
sarb
std
stos
push
inc
int3
lds
jae
mov
in
dec
sbb
cmp
leave
popa
cmp
insl
sbb
popf
pop
and
cmp
adc
dec
and
mov
cmp
rorb
sbb
xor
mov
add
sub
inc
insl
mov
cmp
ficomps
cltd
addr16
jmp
sbb
mov
xor
mov
xor
mov
es
xchg
cmp
jb
fnstsw
xchg
xor
push
mov
xchg
or
es
insl
fs
cmp
xor
cmc
repnz
mov
loopne
xor
rcll
push
mov
add
add
dec
add
jecxz
xor
scas
cs
jae
lea
inc
mov
sub
inc
jecxz
xor
add
test
shl
std
add
sbbb
je
cmp
stos
or
shlb
add
pop
out
cmp
fimull
lock
out
push
imul
xlat
sub
cmc
aaa
call
push
jl
and
lcall
ljmp
test
push
mov
pop
pop
and
sub
push
enter
adc
jne
scas
fstl
add
std
sbb
das
fs
mov
mov
pop
pop
cmpsb
outsb
xor
ss
out
mov
nop
jae
ret
push
outsl
cld
inc
mov
das
movsl
or
mov
push
pop
mov
jle
repnz
aam
lock
ja
xchg
cs
pop
jne
add
dec
scas
xchg
pop
xchg
out
inc
push
sbb
xor
xor
xor
push
xchg
fs
test
push
pushf
or
test
out
cmp
mov
push
in
nop
adcb
cwtl
jg
rol
or
lahf
sbb
dec
push
pushf
pop
sti
repnz
add
test
lods
mov
sub
shlb
mov
sbb
bound
arpl
xor
stc
pop
clc
sbb
adc
xchg
jae
or
push
test
mov
push
pushf
jmp
push
mov
sub
lahf
pop
add
mov
adc
inc
stos
fcmovb
adc
out
mov
or
xchg
push
jns
aad
mov
jo
adc
ljmp
inc
add
sbb
aad
jecxz
divb
mov
inc
cmpsl
leave
arpl
loope
or
shr
mov
push
repnz
dec
shl
add
lahf
jo
adc
cmc
js
cmp
stos
adc
dec
push
test
loope
sbb
dec
daa
aas
dec
cmp
aaa
mov
test
andb
push
out
dec
repnz
mov
jmp
xchg
leave
mov
dec
pop
sahf
nop
xor
jg
pop
sbb
adc
add
js
mov
dec
scas
stos
lahf
sub
or
mov
aas
mov
cpuid
jno
xchg
push
rclb
push
enter
jbe
das
sbb
fbstp
sub
pushf
lds
loop
mov
add
dec
dec
push
rorl
test
daa
dec
pop
inc
adc
into
dec
jl
scas
lock
xor
stc
push
sub
lret
sub
push
push
add
dec
push
or
push
adc
clc
fldt
fiadds
mov
lcall
jb
in
add
sahf
ljmp
movsb
ret
ret
or
scas
jmp
sbb
add
out
ret
mov
push
ja
aaa
dec
cmp
xor
fnstenv
sbb
mov
xor
push
es
js
or
cltd
xor
xchg
xchg
dec
sbb
lret
adc
out
imul
cmp
sub
or
push
div
xor
jno
mov
scas
jge
xor
mov
xor
adc
cwtl
mov
js
and
ljmp
inc
mov
inc
pop
imul
xchg
sbb
and
and
or
call
scas
lock
mov
mov
adc
inc
cmpsl
mov
xchg
dec
lret
mov
inc
jmp
bound
mov
in
add
subl
push
insl
xchg
bound
and
or
lret
loop
dec
js
sbb
add
fs
out
inc
addr16
nop
adc
cmp
popf
push
mov
pushf
fsub
jecxz
add
rorb
cltd
lods
push
das
xchg
cs
xor
adc
push
push
and
clc
insl
and
pop
inc
pop
fldl
xchg
push
sahf
les
lods
movsl
pop
pusha
sarb
mov
and
or
clc
and
xchg
loop
pop
ror
add
cmp
cltd
xchg
xchg
jmp
inc
and
cmp
in
nopl
out
in
dec
cmp
dec
iret
fimuls
and
adc
rorl
jb
xor
dec
mov
mov
fisubrs
arpl
test
xor
inc
in
fcoml
lods
xchg
mov
pop
insl
pop
aam
jbe
or
add
pop
pop
mov
mov
outsb
mov
push
divl
sbb
add
mov
xor
push
js
cmp
add
pop
and
lock
out
add
dec
xchg
xchg
mov
or
and
ljmp
enter
mov
inc
jbe
daa
scas
repz
mov
pop
mov
scas
ljmp
outsb
cmp
jnp
ja
fcompl
sub
rcll
sub
outsl
outsl
jge
mov
ficomps
jge
aas
mov
test
imul
sbb
mov
icebp
mov
xor
jmp
xchg
sub
dec
into
lahf
pop
pop
sbb
rclb
pop
inc
popf
lds
stos
daa
dec
rolb
xor
and
xor
lahf
sbb
outsl
inc
setns
mov
scas
movsb
clc
mov
shll
add
dec
insb
pop
dec
dec
push
jmp
in
add
xchg
jno
mov
ficomps
ds
pop
pusha
out
scas
cs
test
mov
pop
or
out
pop
jae
inc
or
iret
mov
xor
mov
aas
mov
cltd
arpl
in
sbb
lods
sbb
and
mov
cmpsl
push
lods
or
into
adc
fstpt
out
pop
inc
pop
sbb
movsl
mov
jnp
mov
lea
mov
xor
jmp
or
outsb
ja
inc
into
lods
lods
movsl
pop
mov
out
ret
adc
icebp
lods
lahf
xchg
inc
mov
mov
push
push
cmpsb
popa
in
adc
inc
jle
pop
jg
lock
mov
sbb
movl
pop
movsb
fistps
cmp
clc
and
arpl
xchg
inc
js
xchg
xchg
xor
in
outsb
nop
mov
push
pop
or
sub
add
das
sbb
stos
pushf
stc
es
pop
jp
lret
loope
int
push
out
test
int3
stc
sbb
imulb
popf
cmpsl
add
xorl
add
enter
ds
std
les
jle
insl
push
dec
mov
sub
inc
lods
cwtl
mov
xor
mov
mov
mov
pop
inc
jle
insl
push
adc
adc
or
sbbl
sbb
imul
aad
call
push
pop
int
test
aad
cmp
iret
xchg
scas
add
xor
xor
in
hlt
xchg
shr
inc
push
ss
ficompl
inc
xchg
push
ja
jecxz
fimull
cmc
shlb
push
imul
jl
mov
fidivl
or
adc
test
int3
and
shlb
sbb
loope
xor
int3
ret
cmc
cltd
loop
sub
js
inc
add
sub
pop
sub
outsb
int
jne
inc
fildll
orb
sub
and
push
push
stos
dec
push
bound
ljmp
mov
fsubrl
push
push
rcrl
shll
mov
cli
jecxz
int3
les
lock
add
pusha
fmul
cld
xchg
aaa
int3
cmp
fidivrs
arpl
sbb
stos
call
pop
sahf
cmp
jp
and
sbb
negb
push
mov
push
repnz
hlt
push
mov
out
shll
hlt
pushf
in
mov
sbb
ret
cltd
mov
dec
lea
fldenv
mov
ror
fmuls
aaa
pop
int3
xlat
xrelease
bound
out
pop
xchg
loopne
push
lds
or
imul
loop
jns
add
dec
sti
pop
jno
mov
scas
loope
jo
mov
das
or
ret
shl
imul
mov
and
test
or
jecxz
jge
pushf
mov
pop
call
xor
push
mov
sub
xchg
push
dec
stc
inc
lea
pop
push
testl
cli
jecxz
int3
les
lock
add
stc
stos
sub
andl
test
dec
movsb
mov
jnp
imul
loop
out
iret
push
ret
push
or
mov
mov
testl
ds
lods
adc
addr16
pop
rcll
mov
mov
into
dec
push
mov
inc
inc
fistpl
xchg
mov
push
push
insl
stc
pop
xchg
add
lahf
adc
loopne,pn
add
lods
test
sub
mov
scas
xchg
xlat
int3
imul
pusha
inc
adc
popf
push
pop
sub
mov
ror
shl
imul
clc
popa
mov
dec
sub
add
mov
jno
imul
inc
cwtl
popa
dec
jge
cmp
test
cmp
and
xchg
dec
addb
xchg
or
test
fbstp
call
adc
xchg
shlb
or
xchg
lea
fists
dec
mov
xchg
jb
xor
xor
sub
xchg
or
test
add
imul
sbb
pop
push
push
bsr
jae
sbb
push
insb
jne
or
ret
enter
daa
enter
filds
mov
xor
pop
test
sti
icebp
mov
icebp
adc
mov
subb
adc
sub
inc
xchg
stos
aam
jp
add
sbb
stc
jg
inc
jnp
dec
fisttps
jbe
or
and
cmp
rcl
call
jp
test
loopne
push
jmp
repz
jnp
movsb
ja
cmc
xor
inc
pop
xchg
data16
js
add
mov
dec
inc
mov
cs
sbb
jno
sub
sub
arpl
shll
push
push
push
xchg
cmp
jg
dec
imulb
push
aad
adc
jmp
enter
xchg
loopw
mov
fmull
push
cmp
scas
fcomps
pop
test
call
bound
notb
in
out
xor
push
mov
lea
pop
xchg
cmp
adc
xchg
sbb
movsb
pop
mov
js
mov
pushf
mov
fiaddl
test
lcall
add
and
rorb
jmp
dec
sahf
jp
mov
lds
jl
std
lods
iret
ljmp
mov
cwtl
xlat
pop
loop
mov
fldt
repz
mov
inc
popa
cmp
movsl
shll
lret
scas
mov
ss
loope
xchg
and
dec
xchg
mov
and
test
cmp
lret
push
aam
pop
arpl
sub
out
cmc
andl
popa
push
ljmp
cmp
sbb
jecxz
fsubs
sub
dec
call
enter
int
aaa
add
scas
sbb
mov
dec
sub
and
lods
sbb
ljmp
push
push
fs
adc
push
cmp
jb
sbb
sub
aas
jne
pushw
test
lahf
xor
incb
jb
in
fwait
ja
mov
cmp
push
in
movsl
xchg
pusha
inc
xor
stos
jae
or
sub
je
das
aad
gs
test
sbb
sub
mov
jmp
adc
stos
in
lret
jns
nop
mov
movsb
adc
cmpb
push
loop
movsb
mov
cmp
mov
sti
add
cmp
fistps
pop
sbb
rcll
cmp
popa
movl
adcb
out
xchg
mov
cmpsb
repz
pop
push
push
mov
or
jbe
lret
ja
or
or
push
into
xor
inc
mov
ljmp
push
sub
ljmp
stos
fistl
or
xchg
lret
lret
scas
mov
sbb
imul
test
cwtl
sbb
xchg
sbb
jge
cmp
xchg
sbb
scas
cmpsl
dec
pop
push
aam
enter
mov
jns
icebp
sbb
pop
jg
scas
add
dec
rorl
pop
ljmp
push
fucomip
out
xchg
idivl
test
test
loop
test
repz
add
in
mov
mov
ds
cmp
les
test
sbb
pop
xor
pop
or
lds
xor
jmp
cmp
pusha
cwtl
mov
mov
imul
fistpll
lahf
dec
xchg
or
cmp
and
js
dec
icebp
or
mov
insl
push
pop
cmp
cmp
jg
cwtl
jmp
jle
add
xchg
outsb
xor
dec
fwait
ss
nop
iret
push
and
jbe
adc
mov
pop
mov
incl
add
out
push
subb
ds
mov
sbb
das
push
xor
stos
mov
jge
jecxz
push
cs
mov
xor
sbb
and
jl
test
dec
sar
cltd
push
mov
cmp
popf
imul
lea
push
fnsave
into
mov
cwtl
ja
inc
mov
in
pop
das
mov
mov
mov
inc
notb
in
push
hlt
xchg
jmp
mov
xor
repz
pop
rcrb
jo
sbb
lea
mov
push
inc
in
mov
into
mov
sbb
xor
add
sarl
xor
pop
adc
movsb
add
mov
pop
rcll
orb
push
jmp
dec
data16
aad
loopne
ljmp
cmpsb
mov
xor
cmp
mov
es
ret
dec
data16
and
leave
sbb
pop
pop
jne
jge
je
xchg
push
mov
or
dec
mov
repnz
jne
lods
cld
dec
xchg
shll
jge
into
mov
cmp
pop
adc
test
mov
fdivp
ret
insb
jp
stos
mov
ja
add
xchg
aad
cmp
icebp
sbb
and
xor
sbb
jge
adc
xchg
or
mov
push
movsb
aam
push
xor
or
lahf
loope
aaa
push
xchg
mov
mov
xchg
xchg
pop
and
add
pop
sub
and
mov
push
shlb
cli
mov
push
pushf
int3
ss
jb
dec
cmp
jecxz
xlat
cld
js
dec
popl
aam
mov
jb
rcrl
sub
sub
jge
arpl
insl
lahf
cli
and
adc
shrb
and
jg
dec
andl
aas
add
fs
fwait
mov
mov
test
cmp
fisubs
jb
shrl
jno
mov
mov
jecxz
mov
dec
adc
nop
pop
fadds
repz
cmpsb
inc
cmp
cs
data16
dec
adc
rol
cmc
mov
pop
rcrl
iret
and
xchg
jle
sub
daa
jmp
fnstsw
mov
push
mov
cmpsl
adc
loop
sub
jnp
push
movsb
test
adc
cmp
and
inc
inc
adc
xlat
loopne
test
inc
fwait
xchg
cmp
mov
sbbb
jl
xor
jns
mov
mov
lret
inc
adc
ret
add
push
pop
jbe
test
fistpll
rclb
scas
cmpsb
mov
adcl
dec
arpl
jbe
ret
pop
icebp
jge
cld
daa
dec
jne
call
push
xor
out
sub
iret
repz
icebp
daa
or
scas
scas
addr16
out
jb
sub
mov
in
cmp
scas
mov
cmp
jle
stos
hlt
adc
movsl
aas
inc
or
fdivs
in
dec
jge
shrl
or
iret
inc
and
and
sbb
rorl
lds
das
xor
and
int3
inc
dec
sbb
sub
mov
xchg
aas
jne
mov
sahf
test
mov
mov
mov
call
mov
and
push
mov
and
mov
loopne
dec
fwait
cmpsb
dec
clc
hlt
imul
enter
lock
and
fdivl
fidivrs
pop
imul
dec
mov
in
inc
stos
pop
loop
cmc
fstpt
loope
adc
lods
shlb
mull
int3
es
lahf
jne
pop
sub
hlt
xor
dec
ja
orb
nop
aas
std
lret
sbb
pop
je
mov
mov
data16
sub
test
xchg
testl
and
add
mov
pop
or
stos
fxtract
or
call
cwtl
das
loop
daa
ds
xchg
inc
fcom
shrb
push
sub
sbb
xchg
dec
inc
mov
xchg
adc
mov
pushl
test
cwtl
push
adc
sub
fstp
cs
adc
xchg
inc
loopne
adc
ljmp
rcrb
sbb
jno
jno
lahf
sbb
int3
gs
inc
repz
lahf
cli
dec
or
xchg
push
pop
cmpsb
jp
scas
sbb
push
testl
sub
cld
pop
inc
movb
rcll
add
xchg
cwtl
fsubs
gs
lret
or
and
call
fidivl
inc
inc
ret
cmp
jne
mov
out
adc
mov
mov
cmpsb
sbb
icebp
cmp
movsl
jmp
rcll
xchg
fistl
or
movsb
mov
lods
inc
adcl
xchg
pop
sti
cmp
ljmp
add
js
jne
lret
sbb
or
adc
sub
repnz
or
xchg
test
jge
ds
loopne
daa
mull
rorl
js
inc
and
sub
ucomiss
loopne
mov
jmp
arpl
stc
out
push
js
xchg
push
cmp
xor
xchg
int
adc
push
mov
aad
push
in
sub
inc
fidivrs
adcb
mov
add
ret
mov
clc
add
pop
sub
dec
mov
mov
andb
pop
xchg
outsl
movsl
mov
fucomi
mov
ja
ja
xchg
xchg
cmpsl
jbe
jne
inc
popf
pop
sbb
lds
xor
and
cmp
into
or
mov
or
loop
or
push
sti
popa
xor
fs
dec
ja
orl
lock
adc
clc
fcomps
sbb
pop
cwtl
mov
push
adc
adc
hlt
in
cltd
rolb
in
ljmp
les
pop
or
in
daa
lods
cwtl
sbb
jle
and
mov
mov
push
call
cs
mov
add
push
in
mov
aad
mov
addb
stos
cmp
out
sub
icebp
push
gs
add
xchg
jp
rcr
mov
sbb
repz
mov
stos
lock
dec
cltd
je
mov
pushl
and
jne
call
sub
cs
inc
arpl
mov
cmp
icebp
pusha
mov
dec
int
fistl
jmp
or
and
adc
inc
xchg
sub
cmp
je
lret
aad
icebp
adc
pop
or
in
mov
nop
out
int3
or
or
je
loopne
les
jb
sub
pop
lahf
call
inc
mov
lcall
adc
pop
mov
push
in
xchg
mov
es
arpl
add
mov
push
dec
sahf
inc
je
stos
loopne
xchg
in
bnd
xchg
jns
jl
sbb
bound
push
hlt
cmp
pop
mov
lret
into
int3
ljmp
mov
aaa
cmp
adc
or
test
ljmp
and
lret
inc
mov
test
fcmovnb
pop
ljmp
mov
sub
pusha
mov
push
dec
loop
and
mov
aam
aad
sub
add
xchg
mov
jmp
mov
dec
leave
test
inc
jmp
jno
dec
enter
add
dec
jne
test
hlt
fildl
hlt
popf
xchg
repz
push
leave
mov
dec
jle
sbb
popf
fwait
addl
ljmp
cli
and
pushf
jmp
sub
push
inc
mov
test
stos
loope
rclb
pop
mov
mov
dec
push
cmpsl
cs
outsl
sub
cmc
lods
sbb
xor
das
out
adc
and
hlt
sbbb
xchg
push
ljmp
aad
pushf
sbb
dec
pop
pop
out
add
test
cli
daa
test
lcall
pop
pop
mov
cmp
in
jp
bound
aaa
jle
daa
cmp
dec
mov
xor
out
test
mov
push
push
in
leave
add
dec
imul
push
sub
sti
pop
pop
mov
pop
arpl
cmp
jnp
and
dec
xchg
sbb
sbb
inc
pop
and
into
mov
dec
aam
je
aad
jne
and
into
mov
jmp
jae
psrlw
loop
mov
mov
xor
out
sbb
xchg
stos
pop
cmp
pop
fistl
mov
ss
sahf
loop
lds
bnd
inc
sti
xchg
push
push
scas
shr
iret
sub
in
jns
outsb
inc
mov
sub
jne
mov
sahf
iret
mov
lret
sbbb
icebp
xor
sbb
jmp
jmp
and
movsb
leave
cld
outsl
xorb
jae
push
test
in
dec
jb
lahf
and
lds
pop
sub
jmp
mov
and
jmp
lods
sti
in
pop
push
mov
mov
sbb
sti
outsb
repz
cmp
mov
sarb
xchg
adc
mov
mov
sub
sbb
sbb
push
ret
js
cli
shll
adc
movsl
mov
js
ret
inc
cmp
scas
inc
lret
mov
pop
aam
mov
jge
lret
icebp
sahf
out
jl
stos
and
inc
pusha
mov
fmul
add
mov
stos
pop
push
in
xchg
dec
lods
divl
jae
push
jne
push
icebp
aam
add
in
jl
jmp
orl
mov
mov
outsl
dec
lods
mov
pop
imul
mov
data16
inc
pusha
int
dec
in
cmpsb
jns
add
out
mov
ds
rclb
insl
pop
fisubs
pop
push
sub
push
ret
cld
das
aaa
ret
js
in
sahf
mov
sub
sub
call
lock
orl
pop
rcrb
xor
dec
adc
inc
sub
push
sub
push
fs
mov
xchg
sbb
jb
loopne
popa
xor
pop
pop
das
adc
dec
std
addl
sbb
movsl
das
js
xchg
aaa
adc
cltd
pop
mov
push
je
fiadds
popf
outsl
and
sub
mov
mov
add
cltd
jnp
movsl
xchg
or
mov
lret
sbb
imul
inc
xchg
or
inc
aad
mov
out
mov
mov
mov
enter
mov
mov
popf
in
xchg
repnz
add
outsb
push
dec
das
dec
in
sub
lahf
lods
adc
fisubrl
out
popf
popf
ss
pop
xchg
rcrb
leave
mov
aaa
int
push
cmp
lret
inc
dec
outsb
fs
push
bound
xchg
imul
mov
jbe
ss
out
pushf
inc
lahf
lds
repz
fidivrl
fndisi(8087
sarl
das
xchg
mov
mov
xchg
sbb
lahf
inc
sbb
sbb
adc
xor
jbe
scas
into
aas
stc
fisubs
cld
gs
aad
sbb
ss
cwtl
pop
iret
push
fxch
jge
inc
ret
sub
push
adc
jne
or
jnp
stos
rcr
pop
outsb
xchg
jae
cmp
mov
push
sub
mov
je
out
add
push
or
roll
ret
mov
mov
mov
inc
cltd
ja
adc
xchg
add
lahf
iret
sbb
ja
mov
shl
je
mov
aaa
xor
pop
stos
sub
add
ja
jg
dec
mov
sarb
or
mov
mov
mov
lods
in
xor
and
repnz
in
or
or
fwait
cmc
add
dec
xor
mov
sbb
das
mov
inc
or
int3
into
or
and
clc
icebp
mov
fisubrs
xchg
pop
push
rcll
stc
inc
int
add
xchg
push
movsb
sub
add
lods
fisttpl
hlt
xor
pop
xchg
add
xchg
mov
ret
xor
lcall
rolb
cli
fisubrl
pushf
sbb
inc
jnp
cltd
sarb
inc
shr
jne
loopne
out
movzwl
push
dec
sbb
scas
push
leave
loopne
jmp
jno
fwait
loop
adc
fcmovne
adc
addl
shlb
xor
test
imulb
push
fildll
mov
out
jmp
dec
rcrb
in
push
xlat
mov
or
mov
adc
jb
mov
fstpt
sbb
repz
cmp
fwait
adc
dec
mov
pop
adc
daa
popa
lahf
pop
adc
fs
clc
nop
and
aam
arpl
daa
inc
ss
lods
or
sbb
or
out
es
inc
sub
cmp
pop
test
xchg
mov
pop
daa
or
pop
and
cltd
aam
dec
pop
pop
loope
xor
cmpsb
out
pop
sbb
and
sbb
in
dec
jecxz
sahf
icebp
stos
in
andb
cmp
daa
mov
mov
leave
xor
ret
inc
popf
lods
inc
or
sub
jnp
outsl
inc
jno
pop
stc
cmp
sub
sbb
inc
jo
sbb
out
xchg
or
loopne
xlat
jae
loope
xchg
add
movsb
loop
xor
jg
and
daa
fisttpl
inc
mov
bound
imul
mov
xorb
cld
jmp
xor
rcl
add
or
mov
shll
sti
and
aas
cwtl
aas
mov
dec
mov
mov
or
jae
das
pushf
into
add
push
pushf
inc
ja
scas
xchg
test
dec
mov
fildll
cmp
xor
lock
mov
push
leave
cmp
imul
mov
int3
aas
test
cmp
adc
lret
mov
jecxz
xor
ds
push
popf
jg
jns
pusha
pop
jl
jge
mov
fimull
outsb
inc
mov
jp
loop
xor
int3
adc
mov
or
sub
lods
stc
sbb
std
xor
mov
mov
push
or
cmp
into
jae
xchg
cmpsb
adc
rcrl
ret
jl
loop
xchg
aaa
outsl
xchg
inc
std
mov
mov
sbb
mov
ja
and
push
sarl
xchg
xchg
mov
fisubl
mov
dec
stc
push
sbb
and
push
push
or
sbb
in
das
and
mov
push
xchg
push
jmp
inc
or
push
test
and
repz
inc
shlb
cmp
push
data16
and
mov
icebp
mov
pop
mov
mov
repz
ja
push
jb
ja
cld
and
cmc
fidivl
sub
sarl
mov
add
push
outsl
movsl
test
in
sbb
icebp
push
inc
fcmovbe
cmp
lret
mov
mov
pop
mov
leavew
dec
imul
jmp
xor
push
lret
fildll
stc
sub
rclb
andb
imul
and
test
dec
cwtl
aas
dec
fwait
jecxz
inc
outsl
push
adc
repz
sahf
push
push
ret
jecxz
lea
push
das
stc
xchg
add
cmc
in
bound
sub
inc
ja
int
sub
fiadds
shrb
sbb
inc
add
sbb
insl
fsubl
pushf
adc
add
out
loop
sarb
jb
push
imul
and
jnp
mov
sbb
dec
mov
sub
inc
dec
scas
dec
pop
dec
or
mov
fimull
mov
adc
fs
insb
jns,pn
cli
das
add
in
icebp
mov
push
xchg
stos
cmpsl
xor
push
xchg
mov
inc
mov
ret
jae
sbb
mov
pop
mov
add
ja
push
push
push
mov
hlt
ret
sbb
fdivl
lcall
or
cmc
sti
cmp
xchg
loope
stos
cwtl
sbb
dec
xchg
outsl
mov
stc
adc
inc
outsb
xlat
push
and
idivl
push
frstor
jns
mov
fcomp
add
push
jns
jle
inc
aam
push
mov
and
push
and
mov
out
mov
cmp
xor
repz
sti
push
lret
sub
and
repz
enter
jp
add
clc
pop
out
mov
ss
in
cmc
out
cmp
mov
ljmp
mov
ss
int
lds
jb
mov
mov
pushw
dec
enter
divps
cmp
neg
dec
fs
xchg
jo
imul
movsl
mov
dec
int3
gs
jno
pop
cltd
ljmp
xchg
mov
jbe
push
loop
mov
or
mov
xor
ljmp
adc
outsb
or
into
out
mov
imul
sbb
mov
sbb
pushf
sbb
add
aad
pop
lea
ficoml
insl
push
push
imul
arpl
xor
push
push
ret
fdiv
test
aas
pop
fstps
mov
cwtl
sbbl
movsb
fwait
test
cmp
xor
or
ja
pop
add
mov
addr16
leave
inc
mov
or
callw
mov
mov
pop
imul
scas
or
cmp
lock
and
imul
cwtl
cmpsl
lret
bound
insl
push
push
jl
mov
insb
sbb
jl
or
mov
and
rcrb
pop
sbb
jne
lods
pop
mov
push
adc
dec
sbb
adc
ret
stc
cmp
push
idivb
sub
mov
rcll
add
cmpsb
cli
inc
das
adc
or
jge
aad
insb
sbb
and
adc
sbb
xchg
sarb
sahf
adc
daa
pop
pushf
jb
cmc
sbb
insb
ja
jl
mov
xchg
mov
into
js
inc
cs
orl
and
adc
sbb
add
sbb
fcoms
mov
testl
xchg
push
dec
movsl
cmpl
das
jne
imul
push
push
fisubs
jmp
ret
sbb
mov
xchg
in
push
and
pop
sbb
dec
sbb
mov
dec
or
and
cmp
add
or
sub
outsb
imul
add
imulb
jne
clts
pop
pop
mov
and
hlt
mov
cmc
and
pop
cmp
in
cwtl
insb
mov
fyl2xp1
jo
or
je
roll
push
shrl
fcomi
push
push
popf
dec
xchg
sti
mov
push
mov
pop
enter
inc
scas
fcoms
sbb
mov
sbb
push
scas
add
dec
jae
not
jle
aas
test
imul
lcall
pop
loop
int3
mov
fcoms
stos
mov
aas
or
sbbb
in
mov
sub
sub
mov
repz
push
sbb
or
mov
adc
enter
jmp
fidivl
ds
xor
cmp
rcr
adc
dec
jg
loopne
aas
bound
pop
mov
and
jae
push
pop
cwtl
mov
dec
pop
mov
add
cs
and
test
outsl
jmp
push
lret
jg
cwtl
insb
xor
add
dec
aaa
sub
and
loope
in
data16
call
mov
rcll
jp
pop
and
dec
movsb
sbb
sub
mov
cs
pop
and
xor
lock
or
xchg
ficompl
sub
out
jno
xchg
lea
xor
cmpsl
lcall
jp
pop
or
repz
xchg
adc
enter
mov
sbb
mov
in
cli
sbb
sbb
sub
mov
lock
inc
sti
sbb
or
sarl
sbb
cltd
fwait
shlb
popa
ret
cmp
jne
stos
insb
popa
inc
jle
xchg
clc
mov
adc
dec
jmp
filds
das
fsubp
sbb
mov
mov
xchg
nop
lods
push
inc
adc
dec
jmp
or
and
sub
or
loop
std
decb
ret
cmc
int3
call
hlt
out
lods
cmp
jbe
dec
mov
scas
leave
mov
mov
or
data16
or
mov
das
scas
rcl
sbb
push
scas
aad
stos
ret
pop
stos
mov
xchg
out
mov
sahf
lcall
addb
add
cld
adcl
loopne
test
inc
push
cmp
pop
or
test
call
out
sbb
aam
sub
fnstcw
cld
xlat
mov
hlt
dec
pop
pop
cmc
pusha
cs
inc
push
inc
negb
jae
lods
jg
push
mov
xor
xlat
nop
insl
cltd
ss
sti
mov
js
lea
int3
push
xlat
xor
mov
das
ficompl
out
inc
xlat
ficoms
arpl
movsb
add
jmp
jmp
es
bnd
fmulp
cmpsb
push
jmp
cmp
jbe
pop
xchg
imul
cmpsb
pop
repnz
dec
xor
mov
jp
cwtl
add
stos
push
lods
inc
cmp
pushf
adc
fwait
jmp
add
pop
rcrb
inc
lcall
add
lods
push
mov
ret
xchg
cmpsb
and
and
inc
xor
std
std
rorb
imul
pushf
jnp
mov
sbbl
popf
sub
fisttpl
mov
and
out
xorb
sbb
adc
test
in
das
out
daa
das
movsl
gs
mov
sub
stc
in
rolb
add
and
idiv
jo
and
mov
cmp
jg
sub
es
mov
dec
fldt
mov
out
arpl
lret
pop
mov
jmp
dec
jge
dec
push
inc
and
mov
out
jnp
mov
ror
push
or
imul
mov
mov
incb
xor
pop
das
iret
aad
adc
cmp
sub
dec
or
stos
push
sbb
andl
popf
orb
shrl
xchg
adc
leave
into
adc
xorl
xor
jns
sub
cmp
aaa
shll
movsb
add
jbe,pn
fs
push
rorl
cwtl
push
dec
xor
adc
call
into
shrb
mov
mov
scas
test
imul
sub
mov
sub
push
sub
stc
in
mov
fcomip
fisubl
jne
and
icebp
in
push
fs
mov
xor
jg
sub
sub
stc
xor
push
pop
popf
rol
xchg
js
adc
imul
dec
and
mov
mov
mov
fidivl
push
packsswb
sub
fstl
outsl
cmc
std
repz
fcmovne
cmpsl
jmp
mov
subb
repz
popf
cltd
sti
in
lods
mov
cmc
dec
arpl
xchg
fdiv
jge
and
xor
movsl
push
pop
lods
je
lahf
jecxz
or
mov
fcoml
push
pop
lods
inc
mov
add
dec
sub
xchg
sub
xchg
xor
mov
or
pop
das
fcomp
mov
xchg
test
sbb
xchg
pop
adc
loop
mov
jbe
sbb
lret
cmp
loop
sub
cs
and
ljmp
shll
push
insl
aaa
je
sti
or
and
gs
mov
jns
push
std
js
js
aas
in
sti
or
dec
fistpl
scas
mov
jp
test
out
fs
leave
in
mov
pop
fmull
xor
sbb
stos
jo
or
cmc
std
repz
fcompp
sahf
sub
sbb
sbb
lcall
cmc
adc
dec
jge
mov
insl
lock
mov
or
stos
pop
lods
je
sub
xchg
push
inc
int
in
dec
ds
inc
aad
mulb
int3
xchg
icebp
xchg
push
sbb
push
bound
mov
add
inc
dec
out
je
jge
push
jle
arpl
call
jle
fsts
inc
mov
test
test
test
mov
cmp
int
stos
fdivp
push
rorl
push
cld
or
push
std
push
hlt
sub
jmp
sti
cmp
xor
xor
shlb
add
sbb
lret
add
out
imul
mov
jle
fmuls
xor
inc
fcomps
adc
jle
in
dec
pusha
pusha
xor
sub
xor
or
xor
mov
sahf
mov
jl
insl
outsb
roll
push
scas
aas
aam
xchg
mov
push
adc
cld
subb
inc
aas
notb
sbb
jno
sub
pop
stos
inc
add
stos
add
adc
mov
adcl
sbb
mov
out
popf
add
scas
in
xor
call
mov
inc
mov
push
sbb
das
sub
push
dec
jecxz
xchg
or
xor
adc
mov
sbb
inc
push
and
xchg
pop
cmp
or
clc
leave
das
and
aad
in
out
or
inc
loopne
cltd
pop
test
shrl
pop
cmp
jecxz
push
stc
inc
pop
jns
push
mov
repz
or
aad
test
js
cltd
xor
fldcw
mulb
adc
ret
nop
outsb
mov
rcl
lret
xchg
lret
push
ja
mov
ja
mov
pusha
aaa
fdivrs
insb
repz
sub
cmp
mov
xor
inc
cmp
nop
xchg
fnstenv
jbe
rorb
xor
adc
cmp
and
or
dec
mov
imul
mov
popf
sti
adc
sahf
add
shll
jle
cmp
test
mov
cmp
icebp
dec
pusha
or
outsb
aad
mov
mov
mov
pop
outsb
cmp
cld
and
mov
jne
jb
std
sbb
bound
arpl
rolb
stos
jnp
jp
add
push
lds
mov
aad
stos
loope
or
xlat
imul
push
jno
add
push
or
add
mov
cwtl
scas
pop
call
mov
scas
add
cld
push
cli
fmuls
mov
insb
push
add
mov
cmp
lahf
sti
call
cmp
push
leave
and
pushf
scas
mov
cwtl
xchg
xor
inc
inc
nop
adc
adc
jns
ds
mov
mov
movsl
sub
add
out
mov
mov
add
sub
add
aas
xor
inc
xor
mov
pop
xor
xchg
push
mov
fdivrp
stos
xor
test
push
and
cmp
dec
mov
xor
fnsave
mov
or
bound
addr16
mov
add
xlat
adc
or
xor
cwtl
dec
sub
push
xor
ret
mov
push
mov
inc
pop
adcb
leave
add
clc
arpl
cmp
sar
movsb
outsl
clc
shl
inc
dec
ljmp
mov
fwait
xor
lcall
stc
fsubrl
fisubl
xchg
push
inc
sub
hlt
cmpsb
mov
xor
push
stos
or
or
cmp
leave
ret
adc
cwtl
lcall
addb
out
out
mov
cmpsb
inc
push
mov
in
orb
cwtl
jle
add
addb
je
xchg
mov
leave
jle
ja
iret
test
push
or
or
hlt
popa
fiadds
stos
mov
rcrb
add
mov
pop
adc
call
cmc
test
jb
lret
inc
and
or
push
sti
or
inc
dec
popa
rclb
or
pop
and
jae
sub
lcall
xor
cmp
inc
push
xor
mov
dec
shrl
out
pop
leave
xchg
sar
or
jecxz
jnp
sub
pushf
mov
push
std
add
addr16
push
outsb
jnp
popf
adc
inc
sbb
push
test
and
leave
adc
jbe
aam
mov
add
add
cwtl
lcall
push
and
add
repnz
cs
xchg
addr16
mov
in
or
int
bound
mov
jp
sbb
inc
orb
lcall
aam
cmc
sbb
mul
mov
fnop
xchg
pop
add
je
mov
mov
push
jns
icebp
lods
in
pop
icebp
inc
repz
jae
test
adc
fwait
es
mov
push
pop
mov
inc
and
sub
sbb
bound
or
mov
xchg
scas
xor
xchg
jb
sbb
cmc
jmp
iret
push
test
lods
mov
push
xor
mov
mov
jne
jnp
test
lods
dec
in
add
lahf
outsl
mov
stos
cmp
or
bound
test
addr16
cmc
jno
hlt
hlt
xchg
or
jle
cltd
jl
data16
cmc
fildll
jnp
pop
popaw
test
xchg
out
sub
fists
xlat
sbb
cmp
ret
je
dec
jns
adc
pop
xor
popf
lea
shll
shll
inc
mov
xchg
cs
sbbb
in
inc
movsb
dec
or
movsb
jmp
dec
loopne
dec
aaa
jno
mov
mov
push
movsb
inc
cmp
clc
or
call
adc
and
jecxz
lahf
pop
js
dec
sbb
outsl
jge
adc
inc
or
int
test
cmp
iret
pop
xor
xchg
ljmp
mov
lods
jge
xor
mov
aaa
cmp
movsb
sbb
and
mov
lahf
inc
es
pusha
lret
pop
into
adc
das
jecxz
jnp
and
pop
sarl
add
cli
lods
into
and
mov
enter
add
vpsubd
mov
adc
lods
cltd
clc
mov
xor
in
adc
cli
out
adc
out
xchg
lods
or
inc
or
fwait
stos
clc
sbb
xor
dec
orb
adc
push
xor
pop
xchg
xchg
sysenter
mov
mov
xchg
xor
clc
jge
inc
or
fcompl
and
and
data16
xlat
xlat
xorb
sub
icebp
pop
in
or
lods
or
faddl
and
pop
push
xchg
movsl
dec
mov
outsl
enter
out
pop
fnstsw
das
ljmp
and
push
add
adc
jg
push
fcomp
hlt
sahf
testl
xor
js
sti
in
push
xchg
jl
pop
jl
mov
aam
and
in
cmp
xchg
or
xor
pop
lret
xchg
loopne
adc
mov
jmp
add
stos
add
bound
insl
ja
jae
cmc
sbb
adc
fdivs
dec
fdivrl
pop
dec
mov
shl
push
jb
xchg
loope
lods
dec
ljmp
popa
adc
dec
mov
adcb
mov
pop
loopne
adc
lcall
roll
ss
outsb
imul
lods
mov
test
xor
cmc
pop
pop
sub
mov
cwtl
lds
pop
mov
mov
xchg
out
push
in
mov
adc
jns
test
test
add
lds
cmc
push
dec
mov
pop
lret
jno
push
jns
das
fwait
push
test
or
add
dec
neg
sub
adcl
lds
popf
pop
xlat
imul
xor
xchg
popf
stc
fwait
mov
addl
xchg
leave
test
dec
jo
add
loopne
adc
daa
inc
movsl
cmp
and
jl
mov
jne
sub
cwtl
dec
push
add
fdivr
hlt
pop
jl
pop
ret
xlat
das
cmc
xor
bound
adc
inc
punpckhwd
adc
nop
nop
in
loope
ror
dec
test
sub
movsb
leave
ret
pop
gs
mov
sbb
icebp
jb
xor
and
mov
sub
imul
pop
jle
jo
inc
lea
dec
or
jns
cmp
fwait
rorl
stos
xchg
popf
pop
jmp
in
mov
cmp
inc
popf
fwait
jg
sbb
lds
sbb
sahf
add
mov
jecxz
pop
ret
adc
add
ret
loopne
fld
sbbb
jns
sarb
ja
fcompl
pop
or
pop
pop
sub
loope
pop
call
and
add
cmpsb
sub
cmp
mov
ds
out
popl
idivl
out
pop
clc
int3
icebp
mov
sub
mov
sbbl
and
inc
mov
enter
into
pushf
int
insb
js
lock
in
mov
inc
imul
pop
mov
xor
mov
outsb
sbb
icebp
xor
mov
cwtl
pop
sub
movsl
das
ret
xchg
mov
or
icebp
inc
lock
sarl
jmp
out
jmp
mov
fwait
dec
jl
inc
mov
cld
ljmp
sbb
fildl
xor
push
mov
inc
jle
or
nop
pop
lock
or
mov
ret
xchg
aas
jl
xor
in
pop
cli
cmpsb
sar
aas
dec
js
sbb
pop
jg
ljmp
add
aas
adc
cmc
jbe
inc
sahf
jnp
mov
outsb
cmc
push
mov
mov
jo
inc
lret
hlt
sub
call
dec
in
ds
xchg
imul
mov
lods
xlat
mov
js
add
nop
mov
pop
sub
cltd
mov
outsl
cwtl
lret
sbb
mov
cli
icebp
push
xor
fcomi
dec
in
roll
movsl
je
mov
in
inc
std
cmp
mov
addr16
in
jo
in
xchg
push
mov
rcl
xchg
and
cmpsl
comiss
inc
jmp
pop
out
scas
pop
jae
mov
leave
popf
mov
repnz
test
dec
xor
pop
stos
ss
mov
push
cs
pop
cmp
or
in
rcl
and
sub
mov
jge
jno
ja
push
pop
add
xor
jp
push
cli
test
xchg
test
or
daa
test
mov
lods
jbe
inc
call
lret
push
jb
inc
aad
inc
xchg
lods
ss
lret
outsb
or
data16
push
push
and
test
sarl
shll
nop
xchg
adc
test
dec
mov
xchg
out
scas
xor
push
in
mov
popf
popa
add
lock
stos
ret
cmc
lds
lcall
add
out
cmp
rcrb
xor
or
add
xchg
nop
mov
jo
mov
pop
or
pop
jge
jle
push
push
std
test
xchg
popa
jl
jmp
pusha
sti
in
out
aad
inc
movl
fcmovnbe
in
push
cwtl
movsl
addr16
lahf
and
sbb
sarb
stc
dec
add
ja
dec
inc
jbe
cltd
mov
pop
jnp
cmc
mov
repz
lcall
adc
and
pop
test
xchg
pop
ret
xor
xorl
sbb
cmp
cmp
push
push
icebp
add
sub
pusha
cmp
lcall
and
mov
inc
fsts
sub
repz
mov
mov
and
lds
xor
stos
mov
add
fiadds
mov
inc
push
mov
jg
dec
js
push
lcall
fistpll
fwait
popa
daa
pushf
loope
rorl
sbb
rclb
push
mov
cmp
sarl
fdivrs
xchg
cs
xchg
ffreep
jmp
cld
jnp
dec
xchg
and
lret
int
sub
test
xchg
mov
jmp
jl
sbb
inc
inc
dec
out
les
shll
sub
ds
mov
add
mov
xchg
mov
xorl
push
add
in
sti
pop
icebp
and
and
sub
into
sub
xchg
add
data16
sbb
mov
mov
cmp
loope
subb
std
pushf
lcall
mov
cli
ret
dec
mov
cwtl
popa
dec
add
lret
xor
imul
inc
and
dec
aam
xor
sub
test
cmp
inc
add
xchg
pop
outsb
rclb
mov
mov
mov
cli
mov
push
popf
scas
insl
ds
inc
add
stos
add
pop
adc
mov
call
jno
jge
and
jb
mov
lahf
xor
fcompl
adc
xchg
sarb
ljmp
sbb
push
imul
and
jno
adc
pop
outsb
cmp
mov
cmpl
dec
je
push
popf
mov
cmpsl
nop
test
int
ror
in
xchg
inc
insb
mov
xchg
xchg
int3
shlb
jnp
ds
sbb
cli
jne
movsb
inc
sub
in
shll
rol
jnp
adcl
cs
aas
pop
pop
add
out
xlat
hlt
sbbl
in
dec
sub
sbb
pop
mov
inc
xor
ret
popa
dec
push
xchg
test
aad
sbb
pop
popa
mov
sub
cmp
fstpl
adc
push
mov
data16
orl
xchg
pushl
jb
push
ja
repnz
loopne
add
aad
jl
pop
xchg
mov
cmc
pop
xchg
jb
mov
pop
pop
push
sbb
lea
pop
insb
push
sbb
jns
mov
jne
roll
cmp
data16
sarb
mov
fwait
mov
mov
sbb
inc
adc
clc
mov
lcall
jne
dec
aam
pop
dec
loopne
pop
std
cs
xor
mov
pop
jg
jmp
clc
cli
out
mul
cmc
push
test
insb
out
fs
das
adc
sbb
cmp
movsb
filds
sub
into
clc
add
mov
pop
es
bound
out
push
fiaddl
jno
sbb
mov
inc
das
sbb
clc
push
ljmp
jne
push
test
pop
cmp
xor
or
cmp
pop
lcall
adc
popa
push
scas
roll
pop
push
sbb
and
or
jle
jle
out
out
dec
fdivrl
inc
je
jb
sub
vpmovzxbq
sahf
js
cltd
sbb
mov
leave
rcrl
and
test
jp
test
mov
mov
bound
int3
xor
mov
jp
int
jnp
xor
adc
inc
sub
push
sub
test
sbbb
das
inc
notl
movsl
mov
std
pop
jno
nop
and
xor
sub
add
pop
cwtl
out
aas
fwait
gs
lods
mov
pop
xor
fists
and
mov
fidivl
cmp
sbbl
data16
xor
stc
mov
xchg
loope
mov
sub
mov
pop
nop
popa
fsubp
cmpsl
cmp
in
into
lea
out
scas
push
lahf
dec
insl
das
scas
shl
lret
and
inc
mov
clc
in
inc
jge
arpl
dec
loopne
fwait
mov
jns
xchg
add
sub
aad
jb
stc
lret
std
push
cs
testb
mov
jb
mov
pushf
and
push
scas
and
lods
in
popf
dec
mov
and
jg
cmp
xchg
push
out
std
test
popf
popf
in
cmp
mov
notb
rolb
inc
stc
adc
mov
loop
repz
cmp
inc
in
xor
mov
pop
mov
lcall
cmp
mov
or
adc
jno
outsl
lcall
xchg
jo
mov
movsb
push
push
stc
add
popaw
dec
rolb
dec
xchg
es
add
and
or
int
ret
por
bound
fistl
and
inc
pop
repnz
xor
mov
jo
add
mov
ljmp
cltd
pushf
shlb
sub
pop
push
adc
inc
jns
rcpps
mov
aad
jne
fstpt
adc
sbb
iret
ljmp
div
lret
push
inc
outsl
in
cld
mov
js
lods
mov
lea
jg
scas
idivb
scas
dec
in
mov
inc
push
add
xor
aaa
push
cld
sub
inc
mov
das
jns
mov
js
inc
or
xchg
notl
jl
sub
adc
jo
pop
adc
scas
dec
mov
mov
mov
int3
push
and
xor
cmp
fisubs
stc
cmp
push
mov
cmp
sbb
dec
imul
sub
out
cmp
xchg
pop
jmp
outsb
mov
mov
test
xchg
push
pop
jb
stos
aad
ja
jecxz
and
dec
imul
popa
inc
fdivrs
lods
lds
popa
mov
outsl
js
jl
lea
roll
push
mov
loope
int
mov
mov
add
divb
outsb
ds
push
jns
clc
mov
adc
push
idiv
pop
pop
ret
adc
mov
ss
sbb
jae
clc
jmp
fcoml
fyl2xp1
or
jmp
movsb
scas
sahf
mov
mov
dec
mov
sub
mov
je
jns
sbb
or
pusha
or
cs
shll
cmpsl
xchg
inc
jbe
xchg
jnp
push
test
in
pusha
cmpb
dec
mov
xchg
fld
xlat
pop
sbb
fsubrl
mov
gs
loop
and
icebp
xchg
xor
jp
cli
cmp
arpl
sti
xchg
cmc
loop
mov
mov
push
cmp
push
and
sub
pop
jg
ljmp
lahf
and
push
pop
lds
adc
mov
cwtl
iret
rcll
and
out
or
mov
xor
sbb
sbb
repz
jg
leave
cmp
sub
dec
dec
xor
fimull
sbb
push
sbb
inc
roll
add
outsl
and
outsl
and
mov
xchg
sub
out
std
ds
pop
mov
out
sbb
dec
lcall
cmp
mov
fcompl
xchg
imul
xor
mov
lock
cwtl
loop
aad
dec
push
add
ja
pop
cmc
mov
ljmp
and
dec
xchg
out
jmp
loopne
sbb
and
jg
push
aad
pop
inc
test
push
je
pop
lret
or
loop
pop
mov
test
in
jae
aad
jmp
ljmp
fidivs
ja
daa
test
or
movsl
xchg
lock
add
dec
mov
fnstenv
xchg
sbb
mov
xchg
lret
jae
mov
lods
fldt
stos
jp
xor
and
xchg
cmp
in
adc
jnp
popf
int
sbb
imul
sub
in
cmpsl
daa
jnp
fldl
in
loope
aaa
push
or
outsl
mov
xor
mov
sub
mov
cli
popf
mov
and
xchg
dec
mov
mov
in
cltd
xor
add
sub
pusha
pop
xorb
xchg
add
adc
mov
out
jmp
xchg
fidivrs
jmp
sub
stc
dec
adc
subb
pop
nop
ds
in
es
out
daa
sbb
movhlps
test
pop
mov
inc
fildl
sub
lcall
test
aaa
pop
push
dec
test
jge
in
pop
out
mov
xchg
mov
hlt
add
out
and
push
stc
inc
enter
sub
jg
xor
mov
inc
or
push
nop
mov
fcompl
lock
push
test
adc
push
cs
in
sub
lods
dec
xchg
sub
fcomip
loope
pop
clc
pop
cmpsb
icebp
jae
bnd
mov
gs
push
add
xchg
xchg
mov
fwait
sahf
push
push
and
add
push
sbb
xor
mov
pop
mov
fimuls
mov
into
test
jbe
mov
dec
fwait
out
or
pop
pop
lock
pop
sbb
shr
fisttpll
cmp
cmp
cmp
hlt
pop
jnp
jbe
test
xor
sarl
addr16
jnp
int3
jnp
sub
scas
xchg
loopne
add
ja
cmp
mov
sahf
clc
mov
hlt
add
fmul
js
xchg
mov
lret
adc
push
je
mov
cwtl
sub
adcl
mov
and
mov
or
sub
mov
repz
inc
push
dec
out
nop
or
mov
xchg
rcrb
sar
mov
loopne
jmp
jl
mov
js
rcll
ja
push
dec
lea
imul
daa
packssdw
enter
or
fdivrl
add
jp
movb
xchg
push
xlat
fwait
cmp
mov
xchg
rclb
mov
jno
into
stc
shrb
outsb
push
dec
adc
inc
test
sub
shr
fistpll
cmp
into
add
jl
push
loopne
cld
cld
or
sbb
push
dec
in
pop
jl
pop
cmc
lods
xchg
loop
push
inc
pushl
mov
sub
add
out
cmp
mov
xlat
mov
out
or
xchg
andl
stc
add
icebp
inc
iret
cmpsb
test
data16
cmp
mov
popf
cmpsl
scas
push
arpl
jne
or
or
adcl
call
xchg
loope
mov
nop
mov
cld
in
call
bound
cwtl
mov
sub
adc
cmpb
mov
xor
xchg
addr16
mov
cwtl
xchg
in
push
pop
cmp
and
and
rclb
mov
fbld
mov
repz
sti
cmpsb
iret
in
hlt
popa
inc
imul
cwtl
inc
sbb
shr
xor
push
loop
cli
inc
inc
mov
addr16
dec
loope
lret
sbb
dec
repnz
push
cmpsb
ds
pop
addr16
dec
test
fdivrs
lahf
mov
nop
cmp
mov
dec
mov
or
mov
jle
imul
xchg
stos
cs
and
pop
mov
mov
pop
or
je
in
sbb
cmc
ja
mov
adc
and
gs
push
stos
rolb
mov
xchg
jmp
stc
fwait
inc
shll
xor
adc
fistl
mov
mov
daa
imul
loop
xchg
popa
mov
lret
add
cmpb
add
cs
xchg
pop
stc
mov
and
or
pop
adc
ljmp
out
pop
movsb
ljmp
mov
pop
repnz
jle
and
xchg
js
pop
repnz
xchg
inc
push
jo
push
scas
repz
ljmp
inc
je
gs
repz
bound
scas
out
imul
outsl
xor
pop
lock
sbb
scas
rclb
test
sbbl
roll
xchg
mov
ljmp
mov
push
push
inc
push
push
mov
lods
inc
outsl
sti
and
popf
mov
clc
andb
and
fs
dec
or
mov
insb
pop
sbb
popa
or
push
aas
mov
xor
test
popf
lea
mov
and
cwtl
and
adc
pop
cwtl
pop
xorl
hlt
and
lock
xchg
push
repnz
xchg
nop
push
ret
sub
push
inc
pop
add
in
push
mov
rcr
fcmovne
leave
and
mov
lds
cmpsb
mov
loop
inc
push
jb
lods
xor
insb
nop
pushf
arpl
cmp
sub
sub
and
mov
cwtl
adc
sbb
iret
test
daa
add
das
sub
test
mov
adc
scas
cmpsl
jbe
in
inc
adc
mov
push
add
push
bound
mov
bnd
jle
inc
mov
inc
mov
fistpll
mov
sbb
push
jb
stos
aam
lods
jg
je
test
int3
in
sbb
mov
sub
mov
movsl
idivl
cmp
mov
ds
ljmp
fistpll
inc
mov
mul
mov
push
rol
add
push
and
push
notl
sti
push
std
xchg
inc
mov
sub
jb
adc
sub
cs
insl
rcll
js
iret
bound
rolb
sub
mov
jnp
xchg
fnstcw
jo
add
and
insl
in
cmpsl
sub
popf
das
or
cmp
mov
push
push
sbb
lods
loop
cwtl
pop
ret
mov
jge
aas
mov
sahf
cmp
pop
dec
adc
xchg
fstpl
cltd
shll
test
add
cwtl
jae
scas
push
mov
mov
or
dec
and
cmp
push
add
into
lock
shlb
cmpsb
inc
pushf
mov
stos
sbb
dec
sub
fcomps
inc
test
push
push
cmp
xor
jge
sarl
mov
mov
cli
pop
lods
cwtl
imul
int
mov
adc
adc
scas
aaa
or
icebp
inc
lock
les
enter
jl
call
ret
icebp
sar
lcall
push
ret
fs
fiaddl
ret
push
loop
fs
dec
mov
lods
dec
arpl
mov
neg
pop
inc
push
ja
cmp
mov
cli
cmp
mov
mov
sub
xor
loopne,pt
push
leave
mov
add
mov
mov
sub
adc
pusha
insb
scas
cmp
lcall
and
mov
push
repz
push
jb
mov
xchg
mov
jb
cvtps2pi
inc
cld
cmpsl
mov
movsb
sub
sub
adc
shl
xchg
mov
jne
int
movsl
movsl
shl
icebp
jo
test
and
ficompl
cmp
leave
lods
icebp
mov
mov
pop
and
fadds
adc
dec
fcoml
movsb
mov
outsl
in
shl
pop
and
adc
shrb
push
pop
syscall
out
mov
ds
stos
subl
decb
icebp
leave
fs
repnz
shr
in
xor
mov
jge
and
pop
repz
mov
sub
sti
cmp
sub
cmp
mov
aad
mov
lcall
loope
mov
dec
sub
imul
arpl
sbb
jmp
and
mov
fstl
out
std
sbb
scas
out
sub
adc
test
lods
xchg
dec
movsl
cld
xchg
inc
and
call
outsb
pop
rorw
or
pusha
loop
cmp
movsl
xor
pop
mov
aas
cs
outsb
add
roll
push
pop
shll
adc
and
adc
ret
and
xor
cmpsb
xchg
cmc
ljmp
mov
xchg
push
outsl
xchg
sbb
adcl
pop
add
es
test
ret
les
test
dec
and
sub
stos
xchg
js
mov
jg
cltd
dec
sbb
into
out
cmc
xchg
mov
ret
popf
pusha
jmp
xchg
outsb
frstor
add
mov
sbb
pusha
cmpsl
xchg
mov
or
adc
ljmp
adc
fwait
sarb
xor
cs
nop
jge
sbb
out
pop
test
sub
rorl
movsb
cld
push
push
aam
mov
iret
mov
fisubrl
mov
imul
xchg
push
mov
stos
pop
pop
test
fistpll
adc
test
gs
mov
add
aas
fadds
pop
clc
dec
loop
or
sahf
hlt
ljmp
into
sub
xchg
negl
sbb
sub
pop
pop
shr
jmp
push
mov
shr
cmp
push
stos
xchg
cmc
mov
test
imul
jo
and
pushl
jbe
or
stos
cmp
lret
jmp
imul
mov
sub
jbe
inc
pop
mov
fcmovnbe
imul
ja
cmpsl
and
mov
sbb
lods
pop
mov
adc
and
jns
popf
fistl
das
push
sbb
pop
es
or
lock
push
dec
lods
int
loop
mov
pushf
in
sub
popf
jg
add
jno
xor
xchg
inc
addb
mov
scas
out
mov
xor
sbb
dec
cmc
stc
aad
cli
in
pusha
popf
out
sub
mov
xchg
dec
or
dec
enter
xor
shr
and
mov
inc
insl
aas
pusha
mov
testl
inc
loopne
mov
nop
mov
stos
notb
xchg
das
sbb
push
cmp
outsl
test
lds
cmpsl
jmp
das
cmp
fwait
mov
loopne
xchg
dec
cld
imul
cwtl
imul
add
aad
mov
in
jmp
add
push
pop
les
or
cmp
and
clc
jge
mov
fldt
xchg
jns
or
adc
dec
daa
rcrl
xchg
lods
adc
mov
jg
add
inc
loop
push
cmpsl
sbb
cmp
mov
push
push
out
and
pop
mov
cmpsb
cmp
sbb
stos
jp
out
jg
sub
jo
mov
jb
pop
in
push
popa
cmp
sbb
int
add
cmp
mov
call
cli
out
movsb
pop
inc
ret
sub
jle
jl
jno
jb
pushf
stc
sbb
or
push
mov
adc
shrl
sahf
jl
jmp
ss
mov
pop
and
mov
test
pop
imul
outsb
int3
sub
insb
ljmp
out
fiadds
jge
das
lret
int
cltd
lahf
mov
cmpsl
fcomps
mov
lret
les
insl
scas
pop
sbb
lds
cwtl
hlt
mov
mov
fistl
daa
nop
jecxz
repnz
mov
daa
jl
add
sti
jnp
inc
sub
aaa
lret
int
dec
leave
xor
adc
insl
xchg
inc
adc
ret
lcall
mov
push
rol
outsb
push
xchg
or
cmp
mov
cmp
shll
aad
push
xchg
cld
aaa
jnp
call
mull
sbb
addr16
or
sbb
inc
fs
fisubrs
movsl
adc
fistl
cmp
rcl
cmpsl
test
dec
pushf
rclb
fsts
and
xchg
dec
adc
and
dec
push
xchg
xor
lods
imul
jo
pop
test
es
mov
fwait
sub
aad
mov
sub
and
xor
ja,pt
add
leave
and
aas
sub
loop
ljmp
pop
sahf
mov
jnp
in
xor
add
xor
and
or
fstp
inc
and
pop
pushf
xchg
push
mov
or
in
mov
lods
rcl
movb
cli
aad
loope
je
push
jbe
shlb
or
bound
test
adc
rclb
jae
aaa
fs
jle
cltd
pusha
push
mov
mov
fwait
and
mov
pushf
xchg
lahf
scas
hlt
ret
cwtl
mov
fisttpll
inc
cld
insb
dec
jp
mov
push
pushf
and
sbb
int
shl
pop
dec
mov
adc
mov
imul
aaa
int
jle
jmp
js
push
jb
jmp
add
pop
jp
stos
push
sub
push
xor
xchg
ret
stos
xchg
inc
sbb
sbb
stos
insl
xchg
mov
push
sbb
cmp
or
jp
mov
gs
cmpsb
cmp
movsb
das
hlt
mull
test
push
js
mov
fdivrs
aam
sbb
jmp
push
iret
repnz
mov
aad
shll
mov
ret
pop
ljmp
mov
rorl
int3
scas
es
cmpsb
int3
out
xchg
std
jns
inc
enter
in
xorb
out
test
add
xchg
aad
pop
out
lret
xchg
push
add
sub
lods
dec
jecxz
mov
and
xchg
sub
jle,pt
rorb
mov
push
dec
popa
std
loop
push
xor
xor
xchg
add
leave
iret
fnstcw
adc
test
push
mov
hlt
stc
rorl
or
pop
xchg
loop
cmp
sub
inc
and
pop
and
fdiv
arpl
sbb
push
daa
adc
mov
xchg
mov
mov
mov
sub
daa
push
mov
mov
repnz
cld
or
ds
nop
sbb
sub
pmuludq
add
mov
fistpl
pop
arpl
pop
cwtl
inc
test
cmp
dec
adcb
fdivs
orb
jo
enter
jb
mov
adc
pop
jns
sarl
movb
sbb
ds
out
clc
jp
jl
or
movl
sub
sbb
jp
mov
mov
mov
mov
jno
test
sti
cmp
fisttpl
jne
dec
mov
pop
inc
fistpl
xor
shl
push
inc
arpl
dec
mov
fnsave
xor
rol
addr16
add
out
addr16
js
cmpsb
push
cmpl
pop
pushf
pop
outsb
xor
cmp
daa
cmp
jmp
pop
sbb
mov
push
mov
jae
xchg
sub
arpl
mov
repnz
outsl
or
scas
mov
mov
or
xchg
jp
sub
adc
mov
movsl
and
jp
xchg
xchg
adc
ss
and
lret
icebp
clc
std
push
stos
cmpsb
pop
xor
lret
ss
sbb
sti
loopne
inc
das
leave
out
sub
adc
add
outsb
je
test
mov
fstpt
cmp
out
xchg
icebp
ficoml
movsb
mov
mov
and
sbb
fstpl
jns
xchg
fistl
iret
inc
cs
mov
les
pushf
xor
pushf
leave
push
xor
insb
mov
mov
sub
dec
ja
sahf
xchg
push
or
cld
add
movsb
lock
xor
sub
pop
imul
insl
out
and
inc
inc
imull
out
pushf
aas
pop
mov
and
fwait
rcr
outsb
in
icebp
cmp
push
outsl
adc
dec
test
mov
and
fdivrl
mov
mov
imul
rcrb
int
mov
inc
sub
pop
cmp
incl
je
inc
pop
das
adc
push
sub
pop
in
inc
leave
jno
mov
xchg
rcl
test
xor
sub
jg
mov
or
or
inc
pop
es
push
and
xchg
or
ljmp
leave
popf
jecxz
xor
mov
mov
loop
es
test
iret
leave
mov
adc
hlt
push
pop
xchg
cmp
xchg
mov
sub
mov
sbb
mov
mov
inc
and
fistps
movsb
imul
cld
pusha
mov
jae
jmp
sbb
add
xor
movsb
aas
mov
stos
push
add
loopne
cld
arpl
sarb
les
inc
stc
fs
orl
mov
out
sbb
aas
dec
imulb
loopne
loop,pn
jl
lds
jb
cmp
inc
xchg
adc
in
les
xchg
sub
push
ret
or
hlt
lcall
stc
dec
pop
sub
lods
inc
adc
push
arpl
cmpsb
cli
dec
scas
or
loop
xchg
mov
xchg
repz
daa
callw
mov
loop
int
adc
pop
and
add
jnp
xor
int
mov
icebp
ljmp
test
imul
cli
data16
hlt
cmp
sub
mov
ficoml
sbb
test
jmp
frstor
movsl
mov
push
or
lods
das
mov
pop
das
sbb
call
xor
mov
mov
sbb
mov
or
and
lea
fwait
xor
into
hlt
cmp
push
in
push
cwtl
and
cmp
sub
fistpll
dec
in
mov
testb
mov
lods
mov
push
xor
int
bound
cmp
sub
jb
idivb
mov
sub
mov
dec
js
fcomps
popa
jmp
jns
mov
jne
sarb
cmp
mov
ja
scas
mov
test
fistl
mov
or
outsb
pop
ficoml
inc
int
inc
cmpxchg
cmp
mov
test
test
pop
ss
sub
mov
sbb
pop
pushf
fstpl
mov
movb
cld
shl
push
cmpsl
pushf
add
leave
mov
sbb
push
lcall
pop
insb
sbb
mov
repnz
ficoms
mov
push
and
fs
addr16
add
xor
aaa
scas
or
addr16
adc
rcrb
fsts
inc
push
push
inc
mov
sbb
xchg
xchg
fcoml
xchg
and
xor
jp
sbb
push
or
jbe
enter
sahf
inc
push
xchg
dec
roll
call
jge
loop
js
pop
in
xor
jno
insb
sub
gs
out
out
and
dec
mov
mov
sub
popa
xor
cmpsb
jmp
pop
pop
xchg
push
pop
pushf
add
les
mov
pushf
loop
dec
cwtl
in
jge
pop
popa
pushf
jne
sti
test
int
fimull
xor
movl
xchg
or
add
and
push
stos
push
jns
adc
mov
xchg
repz
cmc
bound
lods
push
repnz
sub
mov
mulb
jns
push
lock
leave
inc
ljmp
call
xchg
movsl
xchg
jns
push
push
mov
mov
fmull
mov
in
dec
test
push
lock
dec
inc
push
cld
data16
xchg
lahf
add
mov
adc
loope
add
cmovae
pop
test
shrl
and
inc
fwait
pusha
std
js
pop
in
movsl
add
jno
adc
pop
cmp
loop
xor
lea
lret
cmp
fiaddl
and
add
jecxz
jecxz
add
fdivrp
or
int
pusha
mov
cmc
addl
test
inc
xor
adc
cmp
rol
adc
fcoml
mov
mov
cld
add
mov
inc
fcoml
cmpsb
fisttps
nop
mov
mov
inc
movsl
icebp
pushl
jl
pop
pop
int3
xchg
subl
repnz
pop
int3
cld
and
mov
mov
xor
pop
dec
in
or
popa
cmp
push
inc
cmp
lret
popa
mov
mov
mov
push
mov
push
call
sbb
stc
sbb
ret
jmp
pop
mov
hlt
cmp
fdivr
ret
out
xchg
shl
into
leave
pop
dec
mov
cltd
fstpt
inc
cmp
clc
sub
and
daa
imul
add
push
jecxz
or
dec
or
test
popf
mov
pop
cwtl
les
mov
xchg
add
clc
ret
or
xchg
mov
cmp
pop
pop
mov
in
mov
sahf
rclb
xchg
push
push
fs
dec
mov
pushf
push
ljmp
pop
or
xchg
pop
pusha
mov
mov
push
dec
out
mov
icebp
xchg
adc
test
cmp
sbb
je
pushl
fsts
lock
les
dec
or
movsb
scas
xor
enter
fistl
cli
inc
fadds
sahf
add
or
mov
and
mov
pop
sub
adc
into
in
orl
adc
cld
push
adc
rep
jnp
dec
xchg
mov
xchg
cmp
rcl
jne
lock
cmpsb
mov
or
dec
mov
or
insb
or
xchg
jo
lods
in
cltd
dec
je,pt
and
leave
xor
test
sti
mov
xor
shr
inc
gs
in
sbb
push
adc
push
xor
mov
in
xchg
or
aad
pop
add
sbb
jno
add
add
xor
cmp
leave
fsubp
cmp
push
push
sahf
push
pop
lock
sub
xchg
fwait
xor
dec
shlb
loope
pop
test
pop
or
jecxz
les
fstp
push
jne
inc
stos
mov
loop
out
pop
mov
or
push
enter
mov
outsb
shl
andl
popf
mov
mov
orl
push
in
popf
repnz
mov
cwtl
push
mov
stc
sub
cmp
push
push
insl
inc
rolb
dec
push
rcll
js
xchg
jo
mov
jmp
icebp
sub
jmp
test
or
out
cs
mov
cmp
jo
cltd
loope
jg
scas
int3
pusha
adc
jo
and
mov
into
clc
mov
in
hlt
lds
addr16
sbb
push
dec
outsb
jae
stos
jns
outsb
dec
in
sub
clc
iret
pop
sub
sahf
call
dec
dec
and
mov
xor
mov
jne
mov
jae
das
or
dec
xchg
inc
mov
lea
lods
mov
cmp
push
popa
lods
ficompl
ficoml
sbb
out
mov
mov
iret
and
xor
es
xchg
arpl
mov
clc
cmc
pushf
cld
add
inc
push
cmp
pop
xor
leave
cmpsb
bound
mov
and
out
push
sahf
sbb
stc
jg
jecxz
ss
cmc
scas
insb
inc
flds
dec
pop
sub
jmp
pop
stos
push
les
mov
sbb
pushl
mov
inc
lret
dec
push
jmp
dec
or
lret
loope
adc
and
sar
movsl
test
popa
dec
out
call
fiadds
pop
pop
shr
rorl
add
mov
cld
lods
dec
mulb
jbe
jne
addb
or
repnz
mov
cmpsl
test
and
aaa
clc
test
arpl
or
inc
adc
mov
xor
ret
loopne
test
js
mov
xchg
add
outsl
outsb
sbb
mov
inc
mov
jo
aas
gs
ret
push
pop
sbb
or
aam
xchg
pop
or
cmpl
push
mov
test
es
es
inc
fdivl
inc
call
pop
ljmp
xor
out
xchg
jns
xchg
mov
lods
lds
ret
sbb
or
imul
pop
nop
sti
add
xchg
jge
mov
test
jae
shlb
out
jecxz
xor
adc
xor
jmp
lahf
and
aas
cmovo
ljmp
lahf
sub
push
add
jg
aad
imul
dec
rcl
loop
mov
inc
xchg
in
sti
add
lcall
push
xor
mov
imul
xchg
xchg
mov
pop
stos
sbb
out
jbe
xchg
cli
mov
nop
cltd
inc
fcoml
inc
fildll
push
outsb
arpl
loope
cwtl
and
dec
repz
jle
test
enter
and
lret
adc
cli
adcb
mov
std
push
add
xor
lea
rcll
inc
addr16
cmpb
jno
push
into
xor
popa
insb
sar
enter
xchg
rcrb
call
cli
mov
ds
aaa
adc
lea
ret
daa
add
xchg
adc
mov
gs
test
xor
in
out
adcb
mov
ljmp
in
inc
pop
or
mov
add
pop
and
cmpsb
dec
mov
push
mov
push
mov
pop
jge
and
push
stos
adc
xchg
push
loope
pop
push
xchg
enter
xchg
mov
gs
and
repnz
mov
mov
dec
add
outsb
in
mov
mov
int3
daa
aas
push
pop
ret
and
lcall
cmpl
add
cmp
push
jne
pusha
jo
and
mov
xlat
sar
cwtl
inc
xor
inc
push
inc
enter
sbb
dec
mov
cmpl
jno
and
mov
fsub
cld
lret
push
or
push
pusha
push
mov
hlt
pop
lahf
enter
cltd
mov
es
lods
push
ds
cmpsb
adc
daa
push
sub
dec
push
gs
xchg
mov
mov
mov
mov
notb
inc
mov
cmpsb
cld
inc
idiv
xchg
inc
adc
fsubrs
mov
insl
lock
hlt
mov
cs
pop
cmpsl
lcall
movsl
arpl
cli
std
push
outsl
mov
icebp
cmp
add
sti
xor
push
dec
in
xor
fcoms
in
int
fs
sbb
push
push
jno
xor
xor
mov
mul
sub
inc
aaa
or
mov
cmc
fwait
push
mov
loope
xor
or
call
das
mov
jmp
add
lret
in
jg
mov
push
lea
push
fiadds
mov
inc
jge
push
inc
sarb
jmp
sbb
popf
js
sub
mov
cmc
test
pop
jns
push
or
mov
xchg
inc
fsub
fwait
call
aaa
movsb
stos
out
jg
into
push
and
cs
pop
das
lock
lea
in
or
mov
dec
mov
stc
popf
xchg
and
test
out
outsb
ret
jmp
lahf
cmc
mov
mov
gs
mov
cmp
pop
sahf
and
popa
jae
shrb
jne
push
lret
out
jl
lret
leave
dec
ja
add
dec
pusha
mov
sub
pop
mov
out
dec
pop
jns
add
pop
outsb
jg
cltd
out
lret
std
sub
xor
jle,pn
dec
cmp
repnz
out
mov
adc
cmp
loopne
xchg
dec
lock
push
mov
enter
push
mov
repnz
sbb
lds
mov
lcall
test
push
or
adc
xlat
mov
inc
stos
hlt
sub
subl
sbb
cs
inc
fisubrs
xchg
jp
mov
jecxz
add
cltd
jo
and
add
insl
fwait
push
in
push
popa
pop
divl
in
push
decl
cs
mov
fpatan
sub
sub
cmp
xor
push
sub
jno
int3
push
lea
mov
popa
sti
fs
inc
push
cmpsl
mov
pop
push
inc
clc
icebp
pop
es
insb
fimull
mov
insb
leave
js
clc
xchg
adc
scas
mov
outsl
hlt
je
rcrb
mov
jmp
sub
repz
aaa
mov
les
std
std
ljmp
sbb
jmp
stc
jl
cwtl
mov
popf
aad
call
aaa
dec
jecxz
iret
mov
in
orb
xchg
push
mov
shrl
mov
repnz
jg
sub
xchg
add
sbb
dec
in
xchg
cli
int
add
sub
pop
in
hlt
ret
cmp
leave
push
pop
test
fwait
arpl
ds
sbb
shll
sti
add
push
mov
cmpsl
pop
movl
sub
push
pop
xor
popf
negl
scas
mov
jecxz
mov
xor
mov
arpl
cmp
push
sti
inc
mov
pop
xorl
int3
in
jno
subb
or
mov
adc
imul
imul
mov
fdivrl
adc
je
mov
mov
pop
cmpsl
fs
cmp
or
in
push
sbbb
cmpb
hlt
into
push
fistps
cs
sbbb
shlb
mov
je
dec
enter
and
inc
scas
lock
and
mov
jmp
dec
int3
push
sbb
jp
pop
out
mov
adc
mov
or
jmp
jmp
test
popf
fcmove
fsubr
push
xor
xchg
dec
mov
adc
int3
add
scas
imul
in
mov
ss
push
push
outsb
fdivrp
jp
jmp
sbb
addr16
xor
mov
jle
adc
sbb
movsl
jo
adc
jge
loope
cmp
sbb
xchg
dec
sbb
jmp
jne
mov
mov
pop
cmpsl
fs
push
test
dec
ljmp
add
fsts
push
mov
push
fistps
mov
mov
fwait
add
xchg
pop
or
insb
xor
aad
stc
and
lret
aam
scas
icebp
imul
mov
xchg
ret
xchg
into
sbb
adc
sti
xchg
push
mov
in
mov
or
sbb
add
out
insb
adc
out
push
enter
xor
inc
aam
adc
fwait
nop
cltd
shl
mov
add
into
and
inc
mov
mov
imul
gs
mov
inc
in
pusha
xor
pop
fmuls
js
sub
adc
sbb
dec
jnp
das
xlat
xor
pop
in
push
xlat
out
push
push
inc
mov
fbstp
dec
cmc
cmp
inc
test
test
mov
mov
out
xor
clc
mov
jl
inc
adc
mov
xor
stos
shrb
push
shll
rcrb
jnp,pt
rclb
leave
push
std
mov
xor
or
jle
xor
iret
dec
in
test
cmpsb
int3
es
test
adc
add
add
mov
add
jecxz
cmp
adc
fs
push
lret
mov
mov
test
rcr
fnsave
mov
out
sti
pop
movsl
call
sbb
xorl
not
enter
shl
pop
cmp
out
mov
mov
push
out
ljmp
cwtl
mov
aam
cld
pop
sbb
cs
addl
lret
lock
xor
lock
loopne
xor
arpl
sti
adc
cs
mov
cmp
and
xchg
int
daa
cmpsl
xchg
sub
push
jns
sub
add
popa
add
sub
xchg
xor
xchg
inc
fistl
roll
test
lods
inc
inc
popf
xchg
pop
jge
mov
pop
mov
popf
aam
enter
iret
fldl
jge
xor
sahf
in
cmp
adc
xor
sub
jecxz
call
and
fwait
lcall
cltd
dec
popf
jmp
push
or
jge,pt
and
testb
and
push
in
jb
arpl
cli
lret
or
and
rcrl
negb
mov
inc
mov
xchg
or
icebp
insb
xlat
pop
imul
insb
dec
mov
inc
inc
fiaddl
dec
cmp
mov
adc
pop
dec
rolb
mov
xchg
dec
cld
xchg
push
jmp
sub
cmp
fisttpl
push
das
das
cmp
pop
mov
je
push
or
repnz
and
jge
sub
lret
in
addl
call
mov
xchg
fistl
lcall
fnsave
push
mov
insb
adc
cmpsb
int
dec
cltd
mov
xchg
mov
mov
es
repz
jmp
jae
xchg
scas
lahf
dec
imul
cld
loope
and
mov
fidivrs
cmp
popa
hlt
pusha
daa
fs
xchg
stos
test
dec
and
pop
fdivrl
and
and
sti
ja
stos
mov
rorb
pop
int3
inc
or
iret
pop
jge
pop
pop
lea
push
in
mov
arpl
mov
ret
xor
sahf
sbb
mov
int
aad
adc
jecxz
enter
xchg
flds
rcrb
sbb
and
xchg
xlat
or
mov
lret
add
loopne
cwtl
push
jge
mov
and
movsb
cmp
dec
add
inc
icebp
lods
and
test
aam
push
jge
cmp
inc
push
shlb
dec
call
sub
push
sbb
mov
xchg
xchg
mov
sbb
movsb
sti
add
inc
test
add
xor
dec
push
mov
add
sub
add
push
jb
add
sbb
cvttps2pi
and
xchg
in
add
cmpsb
jae
dec
pop
adc
insl
push
ja
jmp
lret
outsb
addl
add
inc
add
lcall
add
xchg
scas
int3
add
cmp
add
stos
add
cmp
add
into
les
add
push
out
jmp
orl
add
test
mov
add
rorb
fdivl
add
pop
sub
or
dec
adc
pop
bound
add
fwait
mov
xor
data16
scas
mov
and
mov
add
jne
add
push
sub
mov
add
xlat
clc
aaa
cmp
and
add
xchg
je
add
in
dec
pop
sub
jge
add
and
fs
add
imul
cmpsb
aas
les
pop
repnz
xchg
inc
stos
faddl
add
push
adc
sub
hlt
push
test
dec
iret
xchg
add
cltd
add
push
ljmp
cmpsl
jae
add
test
jae
jb
out
cmp
icebp
icebp
xchg
iret
push
stos
sbb
add
fists
adc
call
icebp
jne
adc
add
mov
push
sub
daa
or
dec
rcr
rcrb
cmp
incl
add
add
jnp
pop
add
sub
adc
mov
dec
stc
ja
xchg
sbb
jecxz
inc
dec
adc
xchg
xchg
sbb
test
cmp
imul
mov
sub
lods
wbinvd
lock
mov
push
jmp
jl
add
ljmp
and
inc
daa
shll
rorb
imul
outsl
add
sbb
push
mov
add
push
iret
add
idivb
scas
adc
push
cli
imull
add
roll
loop
dec
inc
lea
inc
jecxz
add
mov
mov
subb
dec
int3
lret
aam
pushl
or
adc
nop
sarl
xchg
add
lods
add
js
jo
dec
shlb
jne
fadds
jle
shlb
mov
call
add
das
add
clc
pop
pop
sbb
sub
jno,pt
jecxz
es
adc
cmp
leave
push
and
mov
push
pop
mov
jno
inc
xchg
mov
jnp
jge
cmp
mov
pop
mov
xor
xchg
sarb
out
mov
or
ss
out
jne
xchg
mov
enter
jns
cwtl
arpl
add
enter
outsb
mov
and
jns
mov
cwtl
xorl
inc
xchg
push
push
add
in
add
or
push
mov
jbe
add
popf
inc
add
outsb
mov
pop
jge
mov
sbb
add
and
push
push
cmpsb
cs
add
add
push
mov
add
add
movsl
pop
mov
push
sub
and
jg
mov
pop
add
add
adc
insb
sbb
sti
adc
add
mov
shlb
jbe
push
add
inc
leave
jle
xchg
or
out
lcall
or
add
push
rcrl
and
je
adc
push
dec
jge
dec
and
icebp
or
ret
mov
jle
add
pop
mov
scas
out
add
mov
jae
adc
xor
ja
add
jae
add
mov
cmp
mov
sti
mov
mov
xor
push
mov
push
xchg
dec
jecxz
leave
pop
popf
pusha
add
and
incl
enter
daa
lar
ljmp
add
leave
pop
mov
adc
xchg
add
sbb
add
mov
dec
inc
pushf
je
pop
movsl
and
xor
add
test
mov
stos
stos
adc
cmp
add
jmp
add
lcall
mov
mov
cli
add
add
imul
int3
popa
fcompl
fwait
inc
pop
ja
mov
outsb
add
xor
adc
mov
inc
or
sub
rcrl
xor
mov
push
pushf
jecxz
jns
sub
and
insb
lahf
lea
outsb
add
shrl
mov
shl
add
les
aas
int3
loope
add
add
add
sub
add
leave
cmc
add
cs
aad
add
push
imul
rorl
dec
sahf
imul
scas
xchg
mov
jo
mov
decb
roll
subl
decb
movsl
and
inc
sldt
pop
jle
push
repz
iret
mov
pop
mov
mov
pop
or
sbb
addr16
add
jbe
mov
dec
ret
xchg
add
imul
add
subl
out
pop
add
xor
std
dec
push
add
add
cmc
jbe
cmp
repz
mov
addl
inc
jb
add
pushf
out
add
add
add
or
lea
add
inc
xchg
cmc
loop
and
xor
add
mov
mov
add
xor
fwait
je
add
adc
in
add
dec
or
jnp
lcall
aam
xchg
add
cmc
stos
mov
inc
mov
xor
add
inc
xchg
mov
sbb
adc
jmp
jmp
push
loop
add
icebp
idiv
add
lds
repz
push
sbb
sbb
adc
add
add
es
jo
pop
lea
cmp
sub
add
jo
add
add
in
add
xchg
ss
in
mov
add
jae
adc
add
popa
out
add
mov
loopne
cmp
push
lods
sbb
imull
cmp
int3
cltd
jmp
fs
add
mov
dec
daa
jo
clc
fldl
and
rol
aas
cwtl
jmp
or
lret
xchg
lahf
add
and
xchg
popa
shll
ds
leave
xorb
mov
and
dec
mov
jg
add
add
in
or
xchg
add
add
inc
mov
lock
enter
dec
mov
add
push
js
add
pop
xchg
into
lods
cmp
mov
adc
fwait
mov
cs
add
hlt
mov
push
repnz
or
lods
lock
pop
test
movsl
and
js
mov
clc
add
add
gs
add
dec
or
cld
add
add
and
add
popa
pop
cmp
jmp
mov
xchg
movsb
xchg
inc
cltd
jmp
add
add
add
push
inc
out
scas
pop
ja
into
in
mov
out
push
out
mov
or
sub
dec
add
mov
and
push
push
movsb
mov
jbe
out
add
add
dec
push
ja
push
lret
add
xchg
stos
and
jne
outsl
test
cmp
add
add
xchg
cld
add
mov
inc
push
add
add
incb
add
icebp
inc
imul
movl
xor
add
adc
add
cli
aad
add
and
jg
hlt
prefetcht0
jo
clc
int3
fdivl
sbb
sub
fwait
jo
sbb
or
cmp
test
push
jg
add
stos
in
jbe
add
pop
rolb
dec
xchg
or
adc
cmpsl
mov
test
subl
shll
shlb
xor
push
das
movsl
xchg
add
adc
xchg
or
sub
xor
in
jno
and
js
in
ja
popl
ficoms
add
into
cmp
fadds
jo
in
jbe
cwtl
adc
popl
add
or
cmp
mov
add
aad
or
lret
lret
mov
add
pushf
outsb
in
cmpsb
cmc
test
add
push
aam
cmp
adc
xor
lahf
adc
stc
add
rclb
cmp
mov
loope
adc
pop
mov
add
sub
imul
cmpsl
mov
add
lds
insl
add
mov
inc
add
xchg
mov
fwait
add
add
add
ficomps
pop
mov
add
dec
je
add
jno
filds
add
loop
fsts
test
ret
outsl
outsb
push
rorl
aas
sub
inc
loope
inc
jb
add
xchg
in
fistps
repz
mov
cmpsl
mov
mov
mov
hlt
aas
mov
fisubs
xorl
mov
jge
je,pt
cmp
adc
jo
test
data16
xchg
scas
add
lret
jb
push
pushf
mov
jbe
xchg
add
rcr
cmpsb
mov
cmp
or
in
inc
mov
adc
xor
faddl
addr16
dec
and
cs
lahf
shlb
aad
add
add
movl
pop
fmull
lcall
pop
xchg
movsb
jmp
add
add
dec
pop
add
sub
ljmp
mov
pop
and
sbb
out
mov
fbstp
in
js,pt
outsb
aaa
repnz
sub
adc
add
mov
into
push
fcomip
push
aas
sub
and
cwtl
xchg
push
cmpl
outsb
pop
pop
hlt
dec
pop
mov
adc
mov
jns
popf
loope
add
cmp
cmpsb
fcoml
repnz
pop
and
or
test
dec
dec
stc
add
cs
addl
std
inc
jecxz
mov
xchg
cmp
add
iret
push
sbb
je
xor
mov
jb
mov
jo
in
imul
mov
sbb
loop
idivl
pop
add
cmp
jae
and
lahf
test
pop
lods
and
aad
sahf
shll
and
add
jnp
add
psubb
and
mov
sbb
mov
add
jmp
add
mov
add
add
mov
push
mov
sahf
cmp
push
movsb
xchg
shlb
lret
push
push
mov
push
shl
sbb
aad
mov
adc
cmp
sub
sub
pop
xchg
lahf
pop
or
add
fistps
pop
and
add
sub
leave
xchg
sub
xchg
add
iret
pop
arpl
mov
pusha
rolb
mov
or
add
aas
inc
xchg
lods
popa
and
jb
add
into
out
nop
insb
icebp
in
lods
xchg
mov
lds
loop
flds
mov
add
jns
pop
xor
stc
loope
sarb
jmp
dec
add
js
jnp
xlat
add
mov
rol
mov
les
jecxz
pop
sub
movsb
fidivrs
add
movsb
movsbl
inc
aam
pushf
addb
xchg
push
jg
adc
add
jecxz
jbe
sub
aaa
mulb
aad
jns
add
les
addl
maskmovq
imull
cli
mov
outsl
adc
pushf
mov
or
fucomi
lock
add
dec
inc
add
mov
cs
insl
sbb
loopne
add
out
or
inc
pop
cmpsb
hlt
jne
movsl
test
nop
mov
sub
dec
add
adc
pop
orb
loopne
cmp
aam
sbb
lods
ret
push
inc
pop
dec
add
jno
in
sub
aas
sub
sbb
jne
dec
mov
add
leave
lods
adc
add
stc
sub
xor
icebp
ljmp
or
std
mov
push
cmpsl
pop
xor
inc
gs
and
fsts
push
bound
mov
xor
sbb
add
jmp
incl
test
add
loop
and
add
add
jns
add
in
test
shlb
mov
cmp
or
add
inc
fwait
ljmp
add
add
add
and
adc
js
and
fildll
in
sti
mov
add
dec
pushf
aam
push
pop
jns
add
add
xchg
ret
sti
and
add
les
movsb
int3
mov
add
lods
cmpsl
jg
addl
fisubl
mov
add
call
sahf
dec
jns
scas
aam
cmp
roll
pop
inc
fstl
mov
sbb
jl
mov
pushf
add
enter
in
push
push
shrb
adc
stc
les
lcall
negb
adc
xchg
jl
cmpsl
data16
and
sbb
push
aas
rclb
dec
inc
xchg
jecxz
loop
mov
add
xor
fldt
call
out
mov
add
cmp
fdivrl
lret
add
and
in
fcmovne
add
fbstp
and
add
adc
loope
add
mov
and
jns
cmp
cmp
scas
and
mov
mov
lock
cs
fs
sub
push
testl
data16
dec
call
sub
sbb
dec
jmpw
inc
add
jp
ljmp
in
xchg
insl
sbb
jmp
rolb
add
and
mov
and
mov
jne
push
aaa
adc
aad
shlb
movb
call
clc
xchg
add
popa
clc
sbb
fisubrl
jnp
mov
jb
sub
out
jl
clc
daa
es
jp
mov
arpl
jmp
add
cmp
adc
popf
mov
mov
add
fs
insb
movsb
cmpsb
mov
xadd
add
mov
adc
pop
adc
add
xchg
add
jnp
cmp
aad
in
aaa
out
xor
in
int
xlat
push
iret
stos
cwtl
jge
jbe
push
add
jp
add
and
add
xor
nop
rolb
movsb
ja
lret
int3
mov
test
add
imul
in
inc
jne
xor
out
add
mov
push
loopne
cli
addb
shll
push
push
popa
fnsave
filds
rolb
pop
add
lods
xlat
pop
push
in
xor
push
dec
lret
fwait
mov
and
enter
add
add
daa
pop
mov
mov
cmpsb
xchg
add
adc
pop
jecxz
inc
lcall
sub
faddl
mov
add
loop
dec
xchg
add
pop
dec
cmp
test
add
nop
cmp
or
push
push
xchg
adc
dec
add
fstl
mov
stos
loop
add
out
mov
iret
ds
ret
pop
sub
xor
shr
and
cmp
mov
push
notl
jecxz
add
stc
jl
add
add
push
jo
jmp
add
mov
xchg
movsl
pop
cmp
add
add
push
xor
and
cs
pop
enter
jl
int3
fwait
xor
pop
mov
mov
sahf
sbb
lea
push
push
iret
push
sub
xor
mov
imul
add
movaps
test
add
repz
xchg
add
loopne
add
jl
fwait
mov
es
and
add
sub
daa
daa
xor
test
xor
sbb
add
pop
js
add
inc
aam
sbb
popf
loope
out
mov
lcall
jnp
in
add
add
dec
inc
lea
out
fcmovnbe
shrb
add
add
add
add
in
push
xchg
add
nop
lea
add
add
sub
enter
push
push
das
add
ja
enter
pop
lods
add
add
add
test
lahf
pop
hlt
inc
idivb
fsub
bound
pop
and
leave
dec
or
add
jns
out
adc
daa
test
add
jbe
aaa
lahf
or
out
adc
add
int
adc
push
push
add
aas
mulb
add
in
add
pop
xor
xchg
mov
stos
stos
ficoms
mov
test
add
or
xchg
or
add
add
push
fwait
mov
loop
mov
lahf
inc
push
add
out
add
popa
or
inc
sub
mov
add
sub
loopne
pop
dec
add
lods
fistl
add
sub
lea
lcall
xchg
pop
add
icebp
pop
lods
movsb
sbb
mov
xlat
enter
scas
pop
xor
add
je
push
andl
lcall
and
loop
add
ret
adc
mov
imul
mov
aaa
shlb
fistps
adc
lcall
sti
sub
popf
test
enter
in
jle
add
clc
push
push
xor
add
cmp
rclb
test
xor
add
int
je
mov
add
xor
adc
inc
cs
aaa
jnp
adc
add
scas
adc
xchg
ret
jnp
fwait
fs
add
adc
pushf
mov
loop
mov
cmpsb
movsl
pop
mov
add
xor
add
add
frstor
int3
ljmp
add
dec
add
dec
mov
cmpsb
into
adc
add
add
or
mov
sub
add
add
sbb
fwait
jbe
adc
add
inc
add
push
test
add
cmp
out
sub
cwtl
add
push
and
cmp
sub
lods
mov
add
int3
out
mov
inc
cmpsb
dec
sbb
add
out
push
mov
mov
into
cmpsb
movsl
mov
dec
data16
jae
push
xchg
ljmp
data16
add
push
pop
fcmovnu
add
cmc
repnz
mov
add
dec
dec
add
mov
xor
mov
das
inc
pop
cltd
add
and
mov
pop
cltd
add
nop
pop
jnp
add
fstpl
add
xor
out
jne
push
fnstsw
mov
add
mov
iret
stos
pop
movsl
dec
add
add
jmp
mov
push
mov
add
ljmp
xor
out
inc
mov
add
hlt
fwait
inc
push
add
rcr
adc
daa
mov
adc
add
xchg
add
popa
testb
adc
cltd
adc
sub
popf
outsb
add
dec
cmp
mov
mov
cli
insb
inc
add
add
stos
mov
lcall
mov
out
cmp
add
das
xchg
mov
fucomp
aam
add
add
mov
jo
pushf
jae
jb
dec
cltd
std
arpl
jmp
add
mov
push
sub
push
xchg
rcll
ja
sarl
sbb
xchg
in
lahf
negl
arpl
in
jno
mov
call
lret
add
loope
add
add
jecxz
xor
jnp
mov
add
movsb
inc
mov
or
inc
test
add
data16
add
add
neg
arpl
adc
movsb
dec
xor
aaa
add
in
adc
dec
test
jbe
mov
xchg
rorb
and
sub
sti
mov
mov
pusha
ret
mov
cli
roll
add
add
inc
mov
pop
filds
xchg
sbb
jo
dec
insl
pop
jp
outsb
xor
pop
fcom
enter
movl
pop
mov
add
pop
jb
add
add
lock
adc
adc
movsl
fsts
jg
out
fildll
jo
lds
mov
jp
cmc
fs
out
add
mov
add
lret
outsl
pop
adc
jae
stc
aam
outsb
js
pop
push
insl
jo
add
mov
and
mov
mov
cmp
mov
sti
pusha
jnp
jmp
sbb
adc
stos
jae
dec
dec
cmp
push
pop
lods
jns
out
dec
add
add
jmp
and
xor
add
add
mov
loope
mov
push
add
adc
outsb
mov
les
inc
cmpsb
jmp
aas
aad
inc
lock
pop
jl
loop
xchg
add
adc
stos
mov
or
sbb
scas
add
je
in
push
adc
shlb
je
pop
add
cmp
push
or
out
cmp
add
fadds
in
mov
fs
lods
add
sub
push
add
sub
jl
and
jne
jecxz
mov
mov
lds
or
add
lret
mov
ficomps
add
pop
cs
std
cmc
pop
sbb
into
push
add
nop
std
fcmovnbe
les
ljmp
jle
sub
add
add
pop
stc
int
xchg
jg
iret
mov
das
add
cli
add
in
mov
add
cmp
xlat
aad
es
out
enter
xor
repz
mov
out
fidivrs
jmp
add
test
jbe
into
adc
mov
imul
cwtl
jmp
fnstcw
push
jno
sti
sahf
push
jbe
lods
shrl
inc
ja
mov
inc
clc
cmp
mov
in
or
add
and
daa
pop
sub
mov
cmp
out
add
mov
push
mov
adc
stos
push
cmpsl
outsb
add
and
nop
add
scas
call
fsubrs
add
adc
out
adc
nop
add
fs
inc
mov
lret
data16
sub
sub
sahf
fdivp
hlt
add
mov
or
jno
jmp
jl
push
lret
add
lret
add
sbb
xchg
mov
mov
rorb
xlat
add
pop
push
fpatan
mov
fisubl
add
push
inc
mov
push
adc
scas
lahf
mov
inc
jo
and
shl
mov
add
sub
js
in
mov
mov
movsb
mov
or
and
dec
sbb
loopne
jmp
les
stos
in
cltd
mov
mov
adc
mov
or
mov
in
add
xchg
daa
in
inc
add
xchg
mov
push
jbe
add
shlb
jle
add
repnz
fistl
mov
push
aaa
mov
add
sti
shll
dec
out
jl
sbb
cwtl
dec
add
mov
movsb
gs
test
mov
je
data16
push
add
push
add
add
add
outsl
mov
add
add
pcmpgtw
das
fs
jl
add
inc
int
add
mov
fisttpl
push
add
pop
int3
das
cmp
add
add
sbb
adc
lds
add
mov
jge
inc
dec
jnp
add
mov
outsl
fcoms
sbb
leave
mov
mov
clc
mov
loope
add
adc
and
and
iret
lea
pop
data16
dec
adc
daa
inc
out
cmp
cmp
movsb
aaa
lea
movsb
sti
xor
add
mov
mov
add
repz
add
push
fidivs
lahf
pop
add
lods
push
jae
mov
mov
in
into
sbb
call
or
loope
push
inc
mov
mov
in
jns
and
mov
aas
insl
repz
cmp
repz
adc
rcrb
or
fisubrl
or
loop
or
add
inc
cmc
inc
clc
mov
mov
gs
into
out
mov
loope
push
push
sub
add
push
xchg
es
xlat
cld
inc
movl
add
add
push
mov
rclb
jg
inc
sub
jg
insb
fsubrs
int
xor
xor
outsb
outsb
or
add
add
icebp
adc
xchg
iret
int3
jnp
add
cmp
icebp
and
lcall
lods
pop
fidivs
and
add
lea
and
data16
mov
in
add
lods
add
push
insb
mov
cld
iret
mov
scas
cmp
add
xor
push
popf
in
jle
mov
frstor
mov
stos
xlat
mov
dec
mov
push
push
cmp
mov
cli
aaa
push
pop
outsb
add
mov
lcall
das
lret
fsubrl
data16
dec
loope
add
dec
cmp
in
pop
aad
sahf
orb
insb
ss
adc
sub
push
icebp
sbb
sbb
cmp
pop
add
fdivrp
fcmovnbe
push
frstor
int
jbe
mov
dec
out
insb
sub
xor
in
addb
add
jo
lea
inc
xchg
push
sbb
add
rorl
xchg
add
xchg
adc
pop
mov
loop
std
add
iret
push
test
inc
andl
inc
adc
add
and
sbb
adc
fwait
addr16
xchg
lea
lea
add
or
lret
dec
test
xlat
xchg
negb
rol
and
dec
sub
jns
mov
adc
ficomps
sti
or
addl
mov
fwait
shlb
js
add
mov
data16
xor
inc
mov
aas
xor
cs
fs
sub
add
sub
cmpsl
bound
or
stos
jle
adc
mov
cmp
shrb
je
add
imul
pop
mov
dec
sub
aad
sub
mov
jp
mov
in
mov
adc
cmp
dec
or
add
inc
insb
movsb
test
mov
push
xor
in
push
cmp
inc
decl
mov
pop
push
pushl
add
cmovo
sbb
push
int
pop
jnp
add
lret
iret
and
je
push
add
or
xor
in
inc
sbb
sub
and
mov
loop
xchg
xor
adc
or
gs
fldenv
std
pusha
xlat
aam
xchg
jmp
pop
testb
push
and
adc
add
mov
lahf
int3
dec
and
mov
or
xor
fcmovnb
mov
ret
pop
xchg
sbb
jo
push
pop
xchg
and
cmp
push
add
repz
add
pop
jbe
and
in
movl
jg
inc
and
add
sbb
outsb
jmp
popa
add
add
pop
add
push
add
sub
outsl
jg
shrl
add
jp
add
fs
imul
sbb
add
or
push
sub
sub
add
int
repnz
arpl
inc
add
add
iret
xor
repnz
jle
scas
scas
mov
enter
pop
popa
dec
xchg
pusha
jo
cmp
repz
and
popa
flds
add
add
jg
mov
cmp
xor
std
cltd
add
aaa
cmc
movsl
pop
add
mov
mov
mov
jmp
push
xor
call
testl
cmp
jbe
inc
lock
pop
mov
mov
add
sub
jns
aaa
fcompl
fs
inc
adc
sbb
jb
dec
dec
leave
pop
sbb
hlt
dec
ss
les
xchg
mov
or
sbb
loopne
outsb
xor
into
lcall
mov
adc
int
add
mov
repnz
xor
jmp
inc
cmp
lcall
lcall
push
inc
add
jb
insl
dec
mov
add
adcl
sbb
cli
xchg
pop
xchg
lcall
or
fcoml
pop
lods
add
cmp
jg
repnz
lods
int
cltd
add
dec
idivl
add
add
cwtl
xor
inc
or
mulb
and
add
inc
fmull
xchg
fidivrl
cmc
fbstp
jl
dec
cmp
fstl
inc
out
cmp
dec
push
repz
cli
out
add
or
gs
test
push
xchg
xchg
inc
dec
jno
add
add
fmull
pop
iret
push
mov
add
add
cmp
testl
pusha
push
fistl
mov
mov
rcrl
xchg
enter
pop
sub
mov
sub
add
rorb
shl
aam
jns
jno
iret
je
xchg
mov
add
mov
xchg
imul
lret
xchg
inc
loop
inc
leave
push
inc
push
mov
cmpsl
je
test
mov
mov
out
pop
popa
sti
lret
or
adc
subl
add
dec
div
add
jecxz
adc
jae
add
add
sbb
mov
pop
add
push
ja
push
cmp
add
lods
xchg
add
hlt
ja
sbb
and
les
or
cwtl
stos
pop
je
cmpsb
and
push
and
fidivs
add
or
arpl
push
push
out
fldt
add
repz
mov
in
pushf
dec
popf
add
out
add
push
aaa
mov
xchg
cmp
fimull
movsb
out
adc
test
cmpsb
cmp
ja
mov
insb
ss
movsl
sub
dec
push
inc
outsl
call
call
sub
test
dec
insl
push
test
jl
mov
mov
add
rcrl
add
inc
mov
mov
cmp
pusha
xchg
add
in
es
ja
sub
flds
in
and
in
lock
add
push
jno
xor
adc
sub
sub
notl
mov
je
add
jne
add
add
es
jns
inc
mov
lahf
stos
add
add
and
pop
nop
popa
mov
jne
sub
sbb
jmp
aaa
pop
loope
mov
sbb
mov
or
setns
pop
lret
sub
mov
hlt
arpl
add
repz
fildl
clc
mov
fidivl
les
mov
es
or
add
lock
mov
daa
out
lods
stos
add
mov
and
adc
xchg
int
lock
adc
imulb
repnz
sub
lock
insb
mov
add
clc
insl
xchg
mov
add
jbe
jnp
aam
jle
mov
scas
jae
adc
jle
mov
jle
inc
adc
aaa
cmp
rcr
jo
sbb
xor
test
and
dec
arpl
mov
imul
mov
jmp
xchg
aam
push
and
cmpsb
clc
mov
mov
adc
imul
movsl
xor
jl
dec
dec
mov
cmc
mov
ljmp
testb
or
push
adc
mov
jae
mov
imulb
inc
sub
cli
ror
outsl
mov
movsb
fcmovnb
mov
icebp
inc
cwtl
daa
or
mov
dec
pop
enter
cmp
mov
scas
mov
stos
out
add
sti
pop
aam
xchg
mov
lcall
into
bound
jp
test
push
scas
out
enter
cmc
inc
mov
mov
ret
shl
jge
mov
adc
fs
push
xor
ss
icebp
out
test
fs
cmp
js
in
mov
ret
sbb
les
push
arpl
mov
imul
mov
add
pop
in
adc
push
dec
xor
fwait
enter
push
mov
jl
lret
daa
and
mov
loop
mov
inc
movsl
stc
dec
add
add
daa
leave
in
in
ljmp
cs
notb
add
and
xchg
add
add
fsubs
add
add
pop
mov
shrl
adc
jo
push
les
bound
inc
loop
mov
sbb
sub
add
jge
jp
mov
sub
aad
pop
subl
push
jmp
into
cmp
arpl
fidivl
cmp
orl
sahf
xchg
loop
mov
push
in
xchg
bound
les
dec
fs
loopne
dec
mov
mov
aad
dec
aas
gs
mov
adc
mov
in
push
mov
jno
cli
insl
imul
ss
jo
sbb
in
push
insb
test
ss
popa
int3
pop
push
lahf
cld
jmp
and
mov
cmp
mov
push
fsubs
repz
cmp
sub
jecxz
push
xor
and
test
add
mov
add
das
sub
jne
mov
sti
sahf
cmp
mov
add
xlat
in
sub
mov
push
sub
dec
pop
pop
push
js
outsl
mov
add
pop
push
adc
pop
mov
jne
aam
sti
xchg
xchg
ja
mov
int3
or
xchg
add
lret
pop
popa
jl
mov
and
add
leave
cmp
mov
addl
loopne
pop
dec
or
add
fstpt
xchg
add
or
cmp
fstpt
out
loop
push
mov
test
icebp
xlat
daa
adc
aaa
mov
nop
ret
loop
add
popf
in
pop
cmpsb
inc
push
cli
out
sub
movzbl
adc
add
xchg
or
sub
pop
in
xchg
sub
lods
adc
mov
add
add
out
repz
es
dec
lret
loop
mov
adc
xor
test
mov
ds
mov
xor
adc
cli
cmpb
scas
dec
pop
jle
add
gs
dec
inc
and
and
lea
fildll
hlt
in
push
and
outsb
inc
add
mov
addb
insl
insl
jno
add
ret
dec
loop
pop
js
shl
add
rclb
xor
fiaddl
add
repz
call
sbb
aas
mov
les
cmpsl
pop
fistl
dec
add
dec
enter
in
jge
push
add
jg
sub
mov
aam
rolb
add
mov
insl
divl
fcomi
jno
lcall
out
mov
mov
add
lret
hlt
add
adc
pop
insb
jge
mov
mov
mov
jbe
mov
rolb
add
add
add
outsb
and
jg
pop
mov
add
jns
shl
iret
js
cmp
les
mov
push
mov
xchg
aad
and
inc
imul
lods
movb
cwtl
inc
xchg
in
enter
add
pop
sub
pop
adc
sbb
cmovb
loope
cld
add
and
fst
mov
add
mov
jle
scas
loop
pop
lret
jbe
clc
icebp
les
sbbb
in
add
dec
insl
mov
push
sbb
mov
arpl
rcrb
in
add
add
sbb
std
lret
add
mov
add
test
shl
lods
jns
inc
pop
lods
dec
cli
les
inc
jg
sub
arpl
in
notb
xchg
in
movsl
cmc
cmp
iret
js
out
rcll
adc
add
scas
jnp
sub
jbe
add
add
mov
movsb
jb
cmc
mov
push
and
std
jg
mov
int3
inc
cmpsl
repnz
sub
push
push
adc
mov
cmpsl
add
jno
jo
mov
inc
push
and
das
adc
clc
and
jne
xchg
jae
fidivrl
xor
xchg
mov
add
lcall
lock
out
push
pop
add
mov
add
and
aaa
daa
outsb
test
push
test
add
imul
mov
pop
mov
mov
movzbl
leave
in
cmpl
and
mov
sahf
jb
add
sarl
push
movsl
insb
push
pop
add
xchg
int
inc
test
and
pop
sbb
lea
add
xchg
add
push
push
js
pushf
add
dec
xchg
jecxz
inc
ret
es
loopne
mov
out
jecxz
jns
pop
aam
add
or
mov
mov
jns
clc
pop
mov
lock
mov
cmp
rcl
cmp
pop
add
sbb
jbe
pop
add
pop
jne
stos
add
pop
mov
pop
icebp
push
lock
adc
xchg
aas
test
add
add
into
lea
add
mov
adc
sub
fldt
shlb
jl
add
loope
aam
hlt
icebp
cmpsb
in
ret
inc
stos
aam
add
fstl
pop
punpckhwd
aas
test
jbe
mov
mov
adc
sbb
lods
mov
push
ret
pushw
jg
movsl
in
dec
subb
fdivl
add
scas
popf
adc
push
add
pop
add
add
aas
bound
add
and
xchg
fldt
adc
add
sbb
inc
addl
int3
hlt
mov
dec
mov
or
add
pop
jno
sub
add
lahf
pop
pop
rolb
pop
xchg
clc
add
mov
out
imul
lods
movsb
fs
loop
mov
rolb
fsubr
xor
rclb
ret
xor
sub
cs
add
add
dec
and
add
sub
popa
pop
mov
outsl
inc
mov
mov
das
add
jecxz
sub
mov
mov
ret
adc
sub
fisubrl
xchg
repnz
dec
punpcklbw
mov
sbb
cmc
clc
mov
push
and
jae
dec
movsl
in
int3
loop
jne
push
pusha
add
mov
data16
add
gs
ja
inc
sub
xlat
and
call
gs
in
dec
inc
add
mov
mov
cmp
call
or
outsl
lea
jge
aad
xchg
and
add
and
rcll
in
add
add
fdivrl
cmpsl
cmp
dec
cmc
cwtl
jmp
repz
enter
and
dec
push
pop
jl
jne
jge
fsubl
fwait
stos
cmp
xchg
int
mov
scas
sbb
adc
mov
movsl
sbb
insl
mov
add
jmp
mov
sub
lods
and
dec
add
orl
stc
insl
xchg
xchg
mov
push
xchg
mov
out
cmp
jne
ds
xchg
add
lahf
xchg
add
addr16
add
lods
mov
add
hlt
add
or
inc
adc
mov
sub
dec
mov
popf
mov
jmp
loope
add
add
pop
adc
lock
push
xchg
add
inc
add
bound
add
xchg
push
jbe
inc
idiv
and
pop
loopne
adc
mov
add
add
outsl
into
push
add
add
mov
andb
add
std
inc
rol
addb
fstl
inc
fadds
ja
shl
out
rclb
or
xchg
fidivrl
sub
out
sbb
sti
mov
addl
pop
sub
jl
leave
lcall
adc
lret
pop
push
mov
shlb
mov
fwait
popa
mov
add
daa
and
fdivrl
sub
adc
jle
aad
dec
mov
xchg
push
divw
or
rolb
cmpsl
dec
xchg
adc
aam
mov
add
in
dec
addr16
insb
fcoms
add
sbb
addr16
lret
xor
add
jo
jecxz
add
sub
fidivs
add
add
loopne
adc
add
push
popl
mov
add
daa
xchg
jmp
add
sarb
push
pop
or
add
add
sbb
adc
rcr
push
inc
sbb
jecxz
fwait
mov
add
imul
push
inc
fwait
cmp
jecxz
aas
add
xor
mov
lods
in
call
add
cwtl
push
sbb
imul
add
add
ljmp
aad
mov
adc
icebp
repz
jecxz
xor
jo
pop
aam
mov
loop
or
sub
add
push
andb
fldz
adc
mov
and
cmp
mov
add
mov
insb
mov
enter
inc
in
ret
fiaddl
add
flds
add
jle
fs
jecxz
dec
cmc
pop
push
jl
jb
inc
push
lahf
add
in
bound
scas
add
mov
pop
adc
das
mov
add
xor
inc
xor
push
rolb
popa
inc
imul
mov
adc
sub
xorl
lret
int3
mov
push
mov
inc
adc
add
iret
or
push
js
rep
xchg
rclb
xchg
addb
or
or
mov
ljmp
adc
add
sbb
sbb
test
dec
xchg
pushf
xorl
int
jno
add
int3
mov
pop
into
inc
and
testl
inc
add
hlt
dec
insb
in
push
mov
jb
add
dec
mov
dec
sub
in
add
mov
test
adc
int3
mov
fistpl
je
add
add
add
adc
mov
mov
dec
movl
int
add
fcomip
gs
and
add
cmp
cmp
mov
xchg
leave
insb
mov
in
mov
out
outsb
xor
and
fcomp
fwait
adc
sub
add
mov
scas
js
cmc
in
std
pop
inc
sar
dec
mov
movsl
mov
cli
fs
les
or
test
ret
inc
addl
xor
add
sub
pop
sbb
push
add
pop
add
cwtl
add
ret
add
inc
push
add
or
add
adcb
pop
add
imul
jl
mov
in
lret
ret
pop
movsb
xor
inc
and
xchg
rorl
jle
in
leave
lcall
sub
dec
add
add
mov
aad
out
stos
cs
add
add
mov
add
dec
rolb
pop
bswap
movsb
mov
sahf
jb
std
xor
les
mov
dec
push
imul
negl
stc
mov
imul
mov
fldenv
or
push
sbb
pop
sub
cmp
push
add
add
lea
jg
aaa
lcall
in
out
mov
out
or
je
mov
lahf
addb
add
push
imul
mov
push
or
pop
xlat
test
pop
rcrb
lea
pushl
add
addr16
xchg
jmp
dec
inc
fstpl
jbe
pop
and
loopne
mov
xchg
roll
cmpl
int
mov
adc
aas
ret
rcrb
and
adc
outsl
ss
ljmp
jle
mov
into
xor
jo
mov
aas
into
nop
in
test
sbb
pop
dec
enter
fucomp
out
jbe
cmp
jg
or
out
icebp
xor
outsb
stos
dec
add
jmp
or
loop
xchg
dec
push
ja
data16
and
pusha
add
mov
test
sahf
fdivp
cmp
test
push
push
test
sbb
in
sbb
and
inc
pushf
fldenv
aas
ljmp
lods
lret
xchg
mov
in
hlt
add
add
inc
fdivp
xchg
cwtl
fsubr
adc
add
add
add
ljmp
adc
mov
mov
jmp
lret
inc
dec
xorl
popf
loop
xlat
addr16
inc
jmp
dec
dec
jbe
add
lahf
lds
xchg
cmp
xchg
ret
sbb
sti
test
ja
lcall
in
lods
and
aaa
stos
jle
add
lods
sub
cmp
add
mov
add
push
icebp
fadds
mov
sub
add
jg
fstpt
in
cmp
out
rcrb
and
add
insl
shlb
add
dec
cmp
sbb
sbb
add
insl
add
imul
jnp
xchg
mov
xchg
jo
add
add
pushf
mov
jl
in
add
mov
test
fldt
add
add
dec
add
add
mov
adc
add
add
and
add
jns
jno
pop
dec
inc
fistps
add
xchg
cmp
adc
sbb
add
outsb
mov
push
sbb
add
add
sub
dec
fnstsw
lret
add
aas
cmp
jae
add
mov
popf
xchg
lahf
pop
outsb
or
cmp
add
add
mov
insb
and
aas
rclb
mov
rorb
insb
bound
into
sbb
popf
sbb
adc
mov
movl
mov
addr16
mov
pushf
jl
ss
rclb
leave
mov
jg
add
xorb
add
clc
aad
popa
out
cmp
ret
lret
add
add
push
arpl
js
add
popf
arpl
push
mov
inc
add
add
mov
fnstenv
adc
int
add
add
movsl
ljmp
xor
out
mov
in
xchg
add
mov
xchg
cmpsl
pop
repnz
loopne
dec
xchg
sbb
insb
data16
add
pop
add
add
loop
push
xorb
loopne
in
push
mov
dec
add
add
jmp
add
stc
inc
pop
add
add
xor
cmp
outsb
roll
add
out
subl
stos
adc
add
aaa
mov
add
cs
adc
stos
subb
add
add
or
mov
pushf
dec
jbe
mov
mov
xor
or
mov
sub
in
jg
int3
mov
inc
fcom
add
add
mov
add
in
sub
mov
sub
lods
sti
repz
cld
loopne
pop
insb
add
add
fdivrl
into
mov
push
mov
mov
std
sub
aas
xor
mov
inc
pusha
or
rorb
mov
cmpsl
add
lret
insb
sub
xor
add
mov
test
dec
xchg
add
push
jg
xchg
mov
push
stos
mov
inc
dec
pop
mov
fcmovnbe
pushl
sbb
xchg
cmpl
adc
sbb
sub
cwtl
es
fiaddl
in
mov
das
xlat
test
add
add
inc
orl
jecxz
adc
bound
in
jl
xor
adc
add
in
xchg
js
test
bound
xchg
add
add
pop
mov
xlat
adc
push
or
or
or
gs
xlat
mov
aam
aam
push
jne
rolb
pop
xor
in
add
push
fs
fadds
cmp
sub
es
add
push
lret
shll
xor
sub
cli
mov
xchg
push
lock
xchg
mov
jbe
enter
pop
inc
lahf
add
add
pop
dec
xor
sbb
push
push
mov
jmp
adc
out
xor
mov
ss
in
lods
and
add
insb
shll
add
clc
aam
popf
in
pop
pusha
loope
cmp
mov
bound
sub
jb
fs
rcr
daa
xlat
lock
dec
sub
xchg
pop
cmp
movsl
das
jle
xchg
repz
adc
add
insb
daa
rol
int3
insb
xor
mov
sti
or
and
or
or
je
mov
ret
sub
test
and
loopne
sbb
out
repz
call
xchg
sub
sub
add
fwait
sbb
stc
scas
push
or
std
cmp
cmc
dec
add
cmp
pmaddwd
jb
das
pop
mov
rolb
add
add
adc
aaa
sbb
fld
lret
xchg
inc
sub
sub
push
iret
cmp
shll
add
or
repz
push
iret
add
pushf
enter
add
outsl
out
lahf
add
pushf
arpl
imul
xor
jbe
mov
adc
fwait
lods
and
and
inc
bound
clc
pop
in
cmp
icebp
andb
jne
iret
and
cmp
add
lea
add
lods
push
push
mov
dec
addl
sarb
xchg
push
add
add
inc
fimull
lret
fs
add
add
das
xchg
adc
ljmp
mov
or
fwait
xchg
jmp
stos
pop
cs
pop
add
add
fldcw
mov
add
into
mov
stc
fldenv
add
push
test
add
add
mov
sbb
add
pop
dec
add
sbb
pop
dec
dec
add
std
push
and
mov
add
cmpsl
data16
add
outsb
cs
data16
mov
rorl
add
or
stc
add
shl
popa
mov
add
in
out
cwtl
notl
sbb
push
fcomp
xchg
sub
sub
push
ss
repz
out
xchg
xchg
je
fadd
push
add
scas
xor
lcall
outsb
jle
loope
xor
xor
sbb
fldl
add
xchg
dec
lahf
addr16
add
out
push
cmp
dec
add
rorl
stos
sbb
sbb
lret
repnz
jg
and
jns
mov
sub
mov
mov
jle
inc
xor
test
pop
repz
add
mov
add
mov
mov
fsubrl
and
dec
cmp
adc
out
add
stos
addb
loope
lock
cmp
test
add
push
mov
push
pop
xchg
addb
mov
dec
add
xor
add
add
aaa
add
les
imul
js
loope
out
jns
jo
push
js
cli
add
data16
add
xchg
push
dec
jns
rcrl
mov
and
rcll
testl
and
cmp
lea
lock
pop
mov
xchg
push
mov
add
insl
cmpsb
addl
xchg
test
aaa
lret
push
data16
pop
inc
mov
add
ss
sub
add
into
xchg
iret
in
jnp
add
mov
xor
add
sbb
sub
lock
cmp
or
pop
out
imul
push
add
mov
add
sbb
mov
add
mov
xor
sub
aad
add
jle
mov
outsb
mov
push
jns
jb
add
inc
daa
popf
fs
lcall
mov
cli
add
in
jge
pop
add
add
lcall
orl
sbb
cmp
add
add
fidivs
int3
int3
in
std
xchg
in
or
fmull
jmp
push
xchg
jle
in
sbb
push
push
adc
xchg
mov
cli
push
scas
jl
bound
add
jno
mov
add
sub
mov
mov
ss
jne
popf
add
cmpsl
push
push
shll
js
jge
mov
addr16
popa
lds
jg
idivl
fnsave
shl
test
in
sub
mov
add
pop
outsl
outsl
sub
mov
sarl
repnz
sbb
stc
or
outsl
test
xchg
movsb
test
cmpsl
lock
mov
bound
mov
scas
mov
add
mov
inc
stos
inc
and
das
lods
mov
stos
testl
daa
lods
push
xchg
adcl
push
roll
add
int
popa
pop
xchg
sbb
cld
jg
jecxz
andl
mov
jp
jmp
rcl
into
jbe
inc
std
lods
push
icebp
xor
push
sbb
mov
fwait
pushf
sbb
bound
adc
pusha
add
cmpsb
pop
movsb
inc
add
add
pushw
pop
adcl
mov
mov
outsb
mov
in
add
pop
scas
pop
cli
sub
add
push
cltd
jno,pn
sbb
jbe
ss
add
mov
add
ds
int
pop
sbb
lret
stos
dec
sbb
das
push
mov
bound
ljmp
test
out
add
movsl
enter
add
add
jecxz
cmp
mov
sbb
push
repz
test
dec
bound
lods
or
call
mov
xor
sub
add
in
jge
push
imul
leave
imul
jmp
sti
mov
lock
add
jmp
cmp
or
in
mov
push
ja
push
test
clc
lds
sbb
inc
sub
add
and
jns
add
dec
push
sti
lret
cmp
mov
mov
jg
sbb
icebp
pop
fs
in
loop
out
or
loopne
cmovge
adc
push
movsb
enter
shr
inc
mov
mov
subl
stos
dec
adc
cwtl
dec
mov
or
std
mov
int3
adc
xchg
and
mov
sbb
add
aas
adc
add
ja
lret
add
clc
cld
cmp
dec
adc
jl
xchg
mov
cmp
or
push
mov
add
outsl
and
mov
add
add
mov
mov
mov
pusha
inc
push
jne
pop
ficoms
sbb
scas
in
add
adc
xchg
movsb
dec
mov
in
mov
imul
mov
inc
mov
leave
mov
mov
aam
pop
das
xchg
inc
mov
int3
mov
mov
or
ss
push
push
mov
cmp
sbb
sti
jl
jo
iret
nop
pop
test
jne
scas
or
xchg
mov
int
push
xor
ss
data16
jle
pop
xchg
out
out
xchg
cmc
fists
xor
ud1
xor
xor
divl
dec
cmpsb
jnp
out
icebp
sbb
or
pop
cmp
aaa
into
das
push
xchg
in
std
jmp
and
jl
lods
sarb
je
pop
sbb
jl
or
lret
adcb
xchg
mov
test
add
sub
lock
loopne
dec
and
push
sbb
xchg
das
add
add
jns
arpl
dec
cltd
divl
mov
mov
add
popa
or
cmp
push
lea
mov
add
pop
mov
loope
sbbb
push
insl
insl
aam
add
aaa
or
lods
mov
ja
dec
test
add
mov
pop
mov
cmp
jno
sti
mov
mov
add
aas
cmp
repnz
cmp
jg
in
test
rorb
fs
add
pop
xchg
mov
mov
int
add
add
push
mov
sbb
pop
mov
cmpsl
enter
lds
inc
or
int
sub
cmpsb
dec
cmpsl
loop
push
or
fnstenv
xor
scas
stos
add
add
ljmp
iret
xchg
cmp
sbb
das
add
clc
jle
jne
xchg
push
jmp
cmp
mov
int3
add
inc
shll
or
fcoms
imul
mov
imul
pop
fildl
add
loope
movsb
mov
bt
dec
add
nop
bound
inc
cmpsl
cmpsb
fs
mov
movsl
or
js
int3
out
mov
mov
mov
cmp
add
add
pop
scas
cwtl
sub
sub
cmp
sub
push
insb
insl
ret
dec
popa
inc
dec
xchg
add
rcrl
push
jns
add
add
scas
mov
cwtl
xchg
add
add
in
dec
add
add
xor
cmp
ret
out
les
enter
inc
mov
mov
push
ds
scas
mov
push
mov
scas
adc
lods
sarl
lahf
hlt
add
add
cmpsl
les
dec
push
push
ret
ficomps
mov
ficomps
lcall
add
out
pop
xor
into
jb
test
add
mov
mov
fcoml
cmp
mov
mov
sbb
add
add
into
mov
add
push
test
or
add
add
push
mov
leave
loope
dec
loope
ja
leave
dec
pop
repz
ror
jno
lret
stc
lahf
jmp
mov
into
mov
pop
mov
cmp
jmp
add
and
add
and
dec
fwait
das
pushf
add
mov
add
add
inc
pop
lods
xchg
push
xchg
lds
and
add
mov
repnz
push
xchg
iret
adc
jge
ljmp
fidivrs
fs
or
enter
jmp
dec
jae
in
das
jp
add
add
pop
fs
pop
lret
ss
lcall
bound
ja
cli
incb
cmp
or
xor
ljmp
arpl
rcrl
fsubp
add
outsb
cmp
int
jmp
xor
cld
add
scas
adc
fldcw
add
int
std
jns
and
and
lahf
xchg
cmp
lock
orb
add
lods
pop
stos
mov
add
gs
mov
add
popf
dec
std
cmp
xor
imul
scas
lods
sub
dec
cmp
mov
aaa
roll
outsl
and
add
add
rol
jle
or
and
push
pop
cmc
xchg
loop,pt
shrl
or
flds
inc
mov
int3
popa
cmp
jecxz
add
mov
in
xor
pop
mov
push
cmc
sub
repz
pop
xor
dec
mov
or
pop
adc
loopne
jns
lcall
mov
or
adc
in
add
icebp
fwait
push
push
sub
mov
dec
cld
pop
rcl
mov
mov
push
das
mov
leave
cli
ljmp
outsl
cmp
xchg
int
add
dec
fistl
cs
xchg
lret
adc
mov
popa
clc
gs
add
repnz
adc
jg
and
fadds
lret
sahf
popl
lret
repnz
jge
fisubs
add
cmpsb
out
test
jns
add
ror
dec
sbb
and
push
out
jge
inc
hlt
stc
pop
xor
add
add
dec
push
lods
popa
cmp
add
push
pop
and
add
cmpl
jo
es
stos
lods
mov
adc
xor
sub
ficoml
imul
int3
xchg
ficoml
ss
ds
inc
out
addr16
jg
outsb
cmpsb
enter
mov
pop
ret
or
or
jae
jg
shl
ds
add
sarl
xchg
insl
dec
lcall
pop
inc
or
pop
pushf
mov
add
add
add
fwait
rcrb
xor
vrcpss
add
arpl
stc
xlat
mov
add
incl
call
bnd
push
loop
dec
inc
mov
cmp
jbe
movsl
scas
cli
nop
aaa
mov
addr16
and
add
push
into
jnp
cs
and
and
les
pop
inc
les
xor
daa
test
push
movsb
mov
xor
clc
adc
push
cmpl
dec
xchg
cwtl
movsl
mov
cmpsb
mov
push
xchg
clc
inc
loopew
ljmp
inc
or
mov
cmpsb
das
sahf
sti
pop
push
xor
mov
call
in
adc
pop
dec
ret
inc
dec
pop
add
les
inc
jnp
xchg
add
mov
xchg
popa
xor
push
mov
fwait
outsb
add
dec
xlat
pop
mov
aas
aad
jmp
aad
ficomps
add
add
add
mov
xor
rclb
xchg
jno
es
lock
pop
cs
push
or
ds
popa
cmp
add
aas
std
xchg
mov
add
and
into
popa
sti
add
imul
mov
lret
mov
rcl
dec
ja
mov
add
daa
mov
dec
nop
adc
aas
ds
xor
cmc
scas
int3
imul
jecxz,pn
mov
add
arpl
decb
push
popf
fdivr
pushf
xor
mov
add
inc
adc
lods
addb
bound
mov
add
add
insl
xor
add
or
sub
add
mov
lret
and
sub
popa
add
sbb
push
push
or
insl
outsl
adc
into
mov
add
add
jmp
scas
mov
data16
mov
dec
pop
test
xchg
add
add
dec
add
add
out
lahf
cmp
or
add
push
popl
add
mov
clc
in
insb
mov
push
mov
ja
mov
es
add
dec
fwait
add
add
jnp
or
add
insl
addr16
add
dec
or
xchg
pop
xchg
add
loop
inc
mov
sahf
mov
icebp
mov
add
add
movsb
scas
inc
sbb
sarb
rep
sbbb
mov
and
imul
stc
mov
daa
or
shlb
shrb
rorb
int
jns
add
je
mov
mov
adc
arpl
insl
inc
xchg
outsl
add
lods
fmull
push
and
or
roll
inc
ds
xchg
adc
mov
and
mov
sub
test
clc
fldl
add
sbb
or
mov
xchg
insl
jns
and
test
in
lcall
mov
in
and
sbb
push
mov
inc
dec
mov
xchg
mov
mov
sarb
sti
aam
add
add
add
add
dec
sub
aaa
sbb
shlb
add
add
outsl
mov
inc
pop
add
scas
aad
shrb
inc
or
add
or
jnp
dec
add
pushf
shrl
push
and
add
data16
add
sbb
and
stos
andl
je
sub
or
and
leave
jnp
sbb
test
push
aas
xlat
mov
dec
lret
cmp
test
daa
and
sub
inc
xchg
sarb
add
sbb
mov
mov
in
lcall
les
xchg
push
popf
test
ja
shlb
stos
and
jl
jo
push
idivl
jle
and
shlb
dec
mov
das
or
out
cli
lock
mov
addr16
ljmp
lea
adc
mov
sub
jecxz
lret
aam
lods
shlb
stos
data16
adc
pop
iret
mov
sub
call
mov
jnp
ss
pop
mov
movl
aas
jl
cmp
sbb
dec
push
mov
mov
ja
lods
cmp
add
dec
cmp
cmp
aaa
or
ror
and
cmp
add
idivb
hlt
aas
jnp
xlat
add
mov
inc
xor
add
xchg
xor
idivl
add
cltd
add
enter
shrb
fwait
insl
mov
mulb
adc
add
hlt
ret
mov
cmp
iret
in
test
out
ja
nop
jecxz
adc
and
lods
jnp
mov
push
test
add
cmpsl
and
je
mov
mov
cwtl
add
add
arpl
jmp
add
sub
testb
add
mov
add
sbb
lret
shr
rcrb
leave
into
add
out
stc
in
cld
jnp
lock
add
sbb
add
lods
cltd
verw
mov
adc
push
mov
movsb
mov
add
push
or
mov
pop
pop
je
les
push
daa
outsl
enter
out
dec
jnp
mov
add
imul
xchg
lods
cs
pop
sub
or
aaa
cmp
mov
mov
lods
lret
sbbb
or
rol
xor
test
add
lret
sub
adc
add
lock
mov
aaa
repz
xor
sahf
stc
imul
hlt
sub
lods
sub
xor
cmc
jl
xchg
stos
inc
and
lods
sub
ffreep
jecxz
push
xchg
fwait
loope
or
push
and
out
out
push
pushf
inc
dec
jle
mov
dec
in
add
data16
mov
insl
jns
cwtl
int
jns
sarb
dec
jb
cmpsl
sub
add
sub
push
xchg
jl
jnp
sub
in
sarb
and
xchg
jge
push
add
inc
sbb
cmpsl
fcoml
add
stos
ljmp
pop
add
sbb
out
mov
or
call
int3
add
add
cmc
mov
dec
add
sbb
adc
jle
shrl
ficoms
cmp
dec
jb
and
and
mov
insl
pop
push
cs
shl
xchg
repz
cwtl
add
add
fadds
fucomip
mov
jns
mov
clc
pushf
shlb
cs
into
push
fiaddl
sub
lods
movq
imull
jbe
lods
mov
mov
mov
stos
sub
arpl
xlat
mov
aad
add
add
sbb
and
xchg
nop
repnz
ds
xor
xchg
int3
popa
push
pop
push
outsl
xchg
ja
aam
stc
icebp
ljmp
pop
bnd
and
fmuls
cmp
daa
adc
test
push
sbb
add
add
add
or
adc
add
mov
xchg
add
pop
xor
dec
pop
sub
arpl
sbb
aad
out
and
dec
add
add
sahf
inc
sub
inc
ds
and
add
adc
jle
or
out
mov
rcrb
dec
movsl
cwtl
addb
mov
jb
iret
cmpsl
mov
adc
xchg
in
leave
inc
mov
rcl
xchg
nop
gs
and
popa
jo
in
mov
movsl
stos
xchg
pop
jae
addb
shrd
imul
sbb
add
movsl
stos
mov
mov
fsubl
mov
push
add
sub
fwait
xor
ljmp
jo
push
adc
add
mov
mov
mov
mov
in
loop
dec
push
pop
ljmp
add
xlat
stc
sub
sti
cwtl
roll
mov
sti
or
sbb
cmp
fiaddl
dec
add
add
inc
insb
or
outsl
or
outsb
fldcw
into
lcall
sub
imulb
xchg
icebp
outsl
add
mov
insb
mov
mov
ljmp
ja
sbb
adc
add
mov
dec
sbb
in
add
cld
push
in
iret
leave
mov
movsb
dec
ret
mov
lods
mov
mov
xchg
in
mov
add
mov
xchg
aam
add
mov
mov
mov
inc
test
scas
inc
shlb
orl
jae
data16
adc
outsb
in
cmp
mov
cmp
nop
jmp
leave
ds
cmpl
xor
dec
sarb
jle
in
out
push
imul
gs
mov
add
int3
fs
add
mov
fidivl
aaa
add
push
out
pop
push
lods
cli
and
xchg
fsubs
adc
or
adc
pop
inc
insb
and
add
cld
sbb
into
aam
ja
sub
mov
add
jecxz
ret
sarb
mov
add
mov
add
sub
ret
xchg
add
data16
test
add
xor
rolb
push
inc
sbb
jl
int
outsl
icebp
xchg
aaa
inc
or
addr16
or
mov
cmp
dec
and
movsb
cmp
pop
xor
pop
idivl
fisttpl
lret
dec
mov
xchg
add
add
adc
test
call
add
imull
xor
mov
repnz
mov
xchg
jb
in
filds
int3
stos
mov
int
cli
rolb
lahf
cmp
js
outsl
or
add
orl
sbb
or
add
add
mov
pop
mov
fistl
in
es
jge
add
lret
shll
cmp
add
jo
inc
jbe
or
jb
sbb
ror
mov
xchg
aaa
jle
lcall
outsl
movsb
mov
outsb
xorb
sti
jle,pt
hlt
dec
sbb
mov
xchg
fldenv
jl
dec
xor
lret
enter
inc
sbb
jecxz
lret
push
cmp
in
xchg
jmp
jge
mov
mov
pop
push
sub
adc
pop
enter
roll
fcomps
add
fstl
add
data16
xchg
test
andl
in
scas
aaa
pop
out
mov
lock
ds
push
push
dec
bound
movsb
sti
sub
outsb
jne
dec
mov
dec
fs
test
lods
cmp
push
jecxz
scas
push
jo
sbb
cs
inc
fucomip
andl
or
les
mov
dec
ljmp
xor
pop
in
out
insb
xor
mov
adc
xchg
decl
notl
adc
loope
dec
out
jp
sbb
sub
daa
dec
pushf
lea
scas
add
repz
lods
call
fucomi
adc
enter
jbe
ss
adc
adc
mov
xor
lahf
insl
xor
je
inc
test
mov
sbb
push
mov
outsl
lods
sbb
out
sbbl
add
shll
xchg
add
rorb
add
add
pop
sbbl
add
push
sbb
add
jmp
mov
sbb
test
ror
add
popf
jp
mov
or
mov
test
and
addr16
xchg
lods
les
stos
or
jmp
add
out
movsl
scas
fcmove
xor
lock
ljmp
in
mov
or
add
xchg
pop
or
push
pop
popa
cmpsl
cs
mov
jp
sti
xchg
mov
mov
aas
xor
push
fistps
int3
or
scas
mov
xor
scas
mov
add
inc
xchg
scas
rcr
lcall
jle
add
in
into
addr16
scas
scas
push
push
sub
sub
out
das
ret
out
repnz
adc
jbe
frstor
jnp
xchg
cmp
pop
add
pop
add
adc
fcomps
outsb
jle
sbb
std
leave
xor
jo
dec
or
stc
pop
sbb
xchg
and
outsl
leave
icebp
lret
or
xor
idivl
and
leave
jmp
dec
inc
fbld
pop
mov
pop
push
adc
jns
adc
in
xchg
xchg
mov
add
push
jno
xchg
aaa
inc
ss
jno
mov
shlb
cmp
dec
mov
and
xor
bound
fldt
out
cwtl
xor
popf
jge
ljmp
sub
imul
ljmp
repz
xor
push
mov
popa
subb
pop
lods
adc
xchg
jnp
mov
lds
and
add
jne
lret
mov
add
mov
mov
add
and
js
aad
xchg
movsl
add
add
rcrl
mov
add
movsb
popf
int
insb
sub
push
add
add
pop
lret
jge
and
add
dec
fucomi
add
or
add
add
lock
imul
ljmp
add
int3
pop
scas
das
movb
add
sub
repnz
leave
push
adc
subl
jns
loop
mov
in
sub
pop
jl
fucomip
hlt
aaa
daa
fbld
xchg
or
xorps
add
mov
add
fisttpll
jae
dec
jo
lahf
cld
imul
imull
sub
adc
dec
pop
sbb
and
mov
scas
out
js
gs
and
add
sti
mov
pop
icebp
ljmp
es
add
and
dec
add
cltd
lret
data16
repnz
lds
or
inc
leave
rorb
sbb
sti
add
into
xor
jp
mov
mov
roll
xor
insl
mov
mov
and
push
cs
icebp
sub
xlat
adc
fimull
aas
sbb
cmp
stos
jmp
stc
addr16
adc
xor
sub
add
or
inc
sbb
jge
add
loope
pop
mov
test
push
pusha
ror
add
loop
jb
fisubs
add
cmpsb
out
out
arpl
loope
push
xor
add
jb
xchg
sarl
cs
sbb
sbb
xor
scas
inc
sub
pop
sarb
push
inc
inc
outsb
inc
sbb
ret
pop
mov
xchg
call
in
sbb
mov
movsb
mov
add
add
push
sbb
inc
nop
mov
add
add
repz
fists
or
pop
fs
xlat
ret
push
xchg
lcall
jg
aaa
adc
lret
and
xor
mov
cmpsb
inc
push
mov
and
dec
jne
fisttps
mov
iret
fdivs
dec
stc
orl
data16
bound
push
insb
xor
into
xor
jecxz
dec
jg
mov
sbb
movsl
loop
mov
pop
hlt
ljmp
add
inc
adc
add
loop
shl
shr
cs
mov
mov
xchg
ljmp
add
add
seta
dec
pop
fstpl
push
sub
fidivrl
add
in
int3
test
cmpsl
in
andb
xchg
inc
add
out
add
outsl
dec
mov
or
arpl
shll
add
push
incl
gs
dec
dec
xor
sbb
pop
pop
cwtl
jbe
fiadds
leave
fcoml
cmp
cmc
stc
add
cs
ja
sarb
add
xchg
xchg
adc
test
rcll
loop
push
lret
out
insl
das
xor
movl
and
test
ds
ljmp
or
adc
xchg
add
imul
clc
mov
add
xchg
rolb
out
adc
add
jb
aad
negb
das
pusha
pushl
adc
push
mov
mov
lahf
bound
shrl
xchg
sarl
cli
scas
ljmp
hlt
cwtl
mov
add
lret
sub
adc
pop
cmp
es
push
filds
or
jns
shll
xchg
cmpsl
out
icebp
lods
out
jb,pn
or
insb
in
lret
jne
add
aam
or
xchg
push
inc
lods
xchg
pusha
xor
test
out
in
mov
xchg
adc
ficomps
pop
fwait
ja
aam
ffree
addl
ret
sti
outsb
sti
ss
add
cwtl
stc
call
inc
lods
pop
mov
inc
shl
or
pop
add
jns
ss
repz
add
sub
push
aas
test
add
mov
outsb
jb
pop
addr16
repz
dec
cmp
add
repnz
test
jle
mov
shll
add
cmp
add
xchg
aam
leave
sub
sub
pop
popa
insl
cli
cmp
inc
dec
lock
fbld
adc
mov
sbb
xor
adc
fcom
add
int
js
adc
jns
jbe
xchg
sbb
and
adc
sbb
adc
cmp
inc
sahf
xchg
lods
xchg
mov
ljmp
repz
mov
xchg
push
aaa
dec
mov
pop
ljmp
adc
add
jl
add
clc
or
and
pop
add
in
jns
push
add
mov
aam
sbb
adc
addb
clc
pop
into
sbb
jl
cltd
cmpsl
add
lret
dec
dec
movsb
out
mov
arpl
icebp
xor
dec
add
add
popf
push
adc
mov
mov
sbb
add
cli
jns
dec
loope
add
imul
inc
cmp
stos
popa
jne
out
jb
xchg
ret
in
cmp
or
sahf
pop
xchg
pop
bswap
movsb
mov
sahf
jb
mov
ja
cltd
ss
in
xchg
out
xor
jnp
jl
jno
cwtl
jno
sub
lea
jmp
add
add
adc
test
div
add
sbb
mov
and
je
movl
fisubrl
in
fwait
outsl
add
filds
and
adc
xor
in
cmp
and
add
adc
adc
or
pushf
xor
jb
inc
or
dec
cwtl
divl
push
mov
add
push
fwait
and
mov
hlt
fwait
neg
popf
add
fdivl
ret
add
add
add
mov
lods
or
lods
shrb
ds
testl
add
sub
push
sbb
loop
in
add
add
aad
add
add
add
cwtl
lcall
add
add
mov
mov
mov
xor
into
inc
dec
les
xchg
into
outsl
sbb
sbb
jnp
add
push
shlb
dec
ret
xor
add
mov
add
or
leave
jno
cmp
test
push
mov
add
add
enter
negl
enter
js
add
cmpsl
fs
inc
pushf
mov
stc
add
test
sbb
add
push
xchg
fidivrs
fistpll
push
push
add
add
inc
sub
test
aad
xlat
stos
fdivp
xchg
cmp
test
adc
out
imul
mov
and
xor
aaa
add
dec
mov
sbb
add
mov
add
add
mov
add
aad
pop
mov
add
add
pop
in
adc
rcrl
cmp
add
addl
out
dec
dec
or
call
add
add
jns
dec
xchg
bound
mov
xor
and
repz
mov
enter
je
bound
test
add
das
dec
sbb
ret
mov
imul
push
repnz
push
fwait
stos
lret
add
add
or
dec
add
mov
scas
adc
mov
or
das
lods
repnz
mov
add
mov
adc
add
add
lret
lock
nop
xor
aaa
call
ret
fcoms
adc
pusha
adc
lods
adc
push
push
fs
jbe
jns
inc
mov
cmp
dec
sub
jae
jl
inc
and
jmp
stos
mov
lret
and
mov
shrl
hlt
xor
mov
rolb
inc
and
xchg
mov
neg
mov
or
cmpsl
add
or
loop
inc
pop
fs
call
lcall
dec
push
fisttpll
mov
in
sub
dec
add
adc
jl
add
xchg
rorb
inc
aaa
add
add
out
pop
int
xchg
sbb
adc
sub
add
add
push
xor
add
aaa
adc
scas
mov
mov
pop
lcall
mov
ltr
fs
jne
testl
xchg
jl
ljmp
xor
adc
pop
mov
daa
jns
xorl
sub
jg
out
mov
cmp
lea
adc
roll
mov
sbb
aas
int3
int3
int3
int3
popf
and
jmp
dec
pusha
bound
cmp
xor
enter
dec
test
pop
adc
lret
in
jb
add
jl
mov
pop
jbe
add
loop
mov
inc
les
mov
dec
sub
movsb
call
lcall
inc
repz
out
add
add
mov
add
fcomp
aad
in
ljmp
adc
add
popa
push
dec
imul
mov
mul
add
sub
mov
addr16
cmp
pop
outsl
std
lea
cmp
aad
mov
add
movsb
xchg
inc
xor
dec
fdivs
lret
nop
and
mov
pop
les
push
insb
test
jp
xchg
add
pop
sub
add
sbb
lret
and
jle
and
sub
push
mov
and
sbb
add
sbb
push
or
test
mov
outsl
test
add
push
leave
or
loop
mov
mov
jge
sbb
add
int3
sbb
xor
popf
jl
jno
pop
cli
add
aam
mov
xchg
adc
xchg
bound
int
das
xor
inc
into
xchg
sub
sub
es
out
aaa
aad
mov
mov
push
jne
in
iret
sbb
sbb
inc
mov
lret
xor
cmpsb
add
or
out
icebp
jae
and
and
cmp
xor
xchg
repz
mov
cltd
out
add
sub
aaa
lods
mov
xchg
lods
divb
adc
or
jne,pt
popf
jne
roll
lret
inc
and
or
sbb
fisubl
mov
lock
push
aas
fisubl
adc
out
xor
ds
xchg
rclb
and
dec
sbb
mov
add
add
jne
dec
aam
lock
insl
mov
add
mov
or
fmull
jmp
js
loop
mov
arpl
xchg
cmpsb
mov
xchg
pop
dec
dec
hlt
insl
push
pusha
pushf
mov
mov
pushf
sub
jbe
jmp
adc
push
and
add
lods
sldt
add
lahf
add
sarl
popa
std
fimuls
xchg
lods
in
pop
pop
cmp
ja
or
sub
mov
mov
adc
addl
scas
mov
leave
add
add
add
mov
shlb
add
sub
sti
aam
lea
mov
enter
add
into
push
test
arpl
cmp
adc
add
add
xchg
imul
xorl
adcl
je
cmpsb
sub
xchg
xchg
jp
clc
insb
in
adc
dec
sub
mov
pop
loopne
mov
pop
or
or
push
dec
movsb
decl
pop
fst
xchg
sbb
lods
dec
hlt
ret
add
movsb
scas
shll
add
push
movsl
jmp
add
add
dec
lods
mov
add
add
add
lods
mov
add
fmull
mov
cmp
psraw
mov
aam
push
xorb
add
add
sbb
mov
or
flds
cwtl
pop
ss
dec
push
xor
dec
aas
js
repz
add
jne
in
rolb
shrl
mov
fsubrs
sub
pusha
fwait
aaa
insb
jae
stos
cmp
popf
stos
sbb
pusha
or
pop
jmp
adc
pop
add
or
jge
add
inc
flds
mov
push
add
xor
sarb
jg
arpl
cwtl
je
mov
sub
jecxz
push
xchg
je
jecxz
cltd
in
mov
aam
inc
repz
in
out
fidivl
scas
std
jge
jecxz
rcrl
add
add
enter
lock
fwait
loop
insb
adc
in
pushf
dec
mov
bound
pop
adcb
jp
pop
not
xchg
mov
sbb
jge
push
push
popa
adc
add
ljmp
and
add
mov
ss
dec
pop
jge
rcll
mov
jno
and
pop
pop
add
xchg
jecxz
scas
ret
add
or
or
in
ret
push
pushf
daa
jle
jg
ret
xorl
in
inc
pop
call
sub
fnstenv
inc
mov
shlb
inc
jecxz
or
mov
pop
sbb
cwtl
jge
dec
dec
aaa
rclb
mov
or
push
or
fcmovu
fnstenv
cmp
sbb
mov
push
xchg
adc
push
xor
xor
rcrb
addb
sti
mov
xchg
inc
xor
mov
inc
movsl
mov
lock
lods
leave
mov
cmp
mov
adc
in
push
int3
mov
or
fistpl
loope
jno
fsubp
push
nop
sar
jp
hlt
inc
mov
mov
jne
mov
cmc
jmp
and
sti
push
js
jae
add
xor
out
lock
imulb
pop
and
dec
insl
sahf
shr
mov
mov
mov
es
pushf
mov
pop
add
int
shll
pop
mov
push
adc
sub
fidivrl
imul
arpl
mov
push
in
out
out
add
add
or
mov
jmp
cmpsb
imul
in
imul
pop
push
inc
mov
xchg
mov
add
add
out
test
push
ljmp
sub
or
in
dec
imul
stos
insb
and
cmp
push
mov
fwait
push
inc
cmpb
cwtl
mov
jb
sub
mov
mov
add
mov
pusha
sub
int
add
push
cmpsl
movsl
lcall
sahf
flds
negb
dec
bound
jns,pt
cmp
mov
jne
shlb
in
int
in
aam
jge
inc
xor
in
imul
leave
push
inc
pop
ja
mov
add
mov
add
push
add
lea
scas
xchg
mov
std
outsb
flds
bound
add
push
add
fiadds
or
add
jl
enter
dec
in
xor
mov
leave
add
addb
mov
repz
imul
add
loop
add
enter
mov
add
int
jmp
fiaddl
mov
push
inc
add
fwait
lahf
add
je
add
je
add
adc
loope
pop
add
xchg
mov
add
pop
jno
cmpsl
je
add
mov
mov
data16
jo
push
add
sub
or
testl
pusha
sti
out
add
dec
mov
add
pop
add
or
fsubr
jb
iret
add
add
push
inc
add
push
xlat
add
loop
cmp
add
pop
jp
in
cmpsl
add
dec
bound
mov
add
jl
add
add
add
add
add
add
lret
std
push
pop
daa
repz
mov
adc
add
mov
xchg
xchg
sbb
pop
add
add
imul
test
add
dec
lret
inc
outsl
inc
dec
ror
pusha
loopne
add
add
add
mov
sbb
cmp
negb
lahf
test
xchg
dec
test
sbb
xor
push
inc
fldcw
fildll
or
push
xor
lret
push
icebp
and
mov
jle
subl
xor
sarb
jle
mov
popa
jb
sub
dec
aam
loop
jl
sbb
mov
stos
pusha
pop
cmpb
or
cmp
mov
or
add
out
out
enter
loopne
add
add
add
push
inc
lahf
fwait
in
lock
xchg
mov
dec
pop
and
sbb
data16
jle
repz
xchg
xchg
sub
add
pusha
stc
shr
pop
or
in
test
and
inc
icebp
not
lds
adc
pushf
outsl
lock
rolb
pop
adc
pop
mov
in
in
iret
ss
push
pop
int
inc
xor
inc
pop
sbb
mov
push
data16
test
xchg
orl
pop
repz
dec
push
pop
lods
add
ret
or
push
daa
and
adc
push
pushf
in
ret
sub
jl
push
testb
push
push
scas
mov
mov
xor
mov
cld
insl
test
fwait
mov
mov
pop
xlat
lods
ret
ja
into
or
cmp
mov
aam
les
add
mov
mov
and
fidivl
lds
pop
and
pop
js
andl
out
and
jnp
mov
add
add
add
inc
imul
lret
pop
adc
sbb
add
pop
insb
pop
ss
stc
fdivrp
ret
add
sbb
aad
lret
cmp
cmp
inc
push
adc
mov
cmc
insl
stos
stos
push
fs
adc
fcmovbe
inc
jnp
lods
lods
xor
or
inc
push
rorb
call
jne
mov
cltd
adc
push
xchg
adc
push
add
or
lret
pop
and
or
adc
insl
inc
add
xchg
sub
jp
shll
push
shlb
inc
xlat
daa
loope
lock
jp
xchg
mov
je
push
add
add
xchg
mov
cmc
lahf
push
fcoml
mov
sub
loope
xor
out
lds
dec
lods
in
jle
xor
mov
out
add
or
hlt
icebp
out
push
iret
nop
cmp
add
add
mov
cli
dec
xchg
sub
fnsave
inc
and
pop
jp
and
jb
cld
repz
mov
sbb
or
add
mov
inc
out
ja
daa
adc
fneni(8087
adc
jecxz
xchg
subb
mov
test
cmp
add
pop
in
fsubl
dec
or
fisttpl
cwtl
stos
mov
sbb
pop
push
xchg
dec
cmpsl
stos
cmpsb
mov
stc
push
jg
cltd
mov
sahf
sbb
sbb
sub
xor
add
popf
stc
push
sub
les
xor
test
ljmp
jno
push
mov
add
add
mov
fwait
inc
lret
push
mov
jmp
out
jge
stos
das
hlt
pop
into
mov
add
add
and
in
sbb
pop
test
addr16
int3
stos
into
mov
xor
repz
repnz
movsl
or
jge
div
push
rcll
add
mov
cli
dec
xchg
sub
fnsave
inc
and
pop
jp
and
fs
mov
mov
call
into
sbb
insb
jmp
decl
sub
pop
test
inc
mov
inc
cld
je
xchg
aad
icebp
or
add
imul
sti
cwtl
repz
enter
add
fcmove
and
int
mov
pop
inc
push
pop
inc
aam
call
popf
popa
imul
inc
cltd
sbb
lahf
or
push
inc
frstor
outsl
add
pop
daa
and
rorb
push
mov
sub
cmc
push
and
cmp
mov
or
xor
int3
es
ds
add
add
icebp
shl
popa
in
popa
popa
xor
mov
adc
scas
mov
fldcw
enter
and
icebp
mov
out
or
adc
std
movsl
cmc
dec
sar
xor
fidivl
mov
add
or
xor
and
xor
subb
sahf
std
and
mov
bound
xchg
repnz
leave
rclb
xchg
jns
sar
inc
or
repnz
add
add
jg
push
xor
addl
insl
mov
loopne
fldl
pop
sbb
xchg
test
jp
shrl
add
add
push
sub
add
popf
add
stos
aaa
pop
or
mov
loopne
cmp
add
sub
sub
pop
xor
inc
pop
lret
dec
mov
add
add
scas
add
scas
imul
add
add
add
add
add
add
add
add
loope
add
add
add
add
add
mov
add
add
std
add
aas
mov
add
add
add
lds
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
popa
add
or
add
add
add
add
sbb
add
add
incb
shll
push
repz
test
ljmp
add
lret
add
add
mov
and
push
add
xchg
add
add
sbb
ret
push
cltd
mov
dec
aas
cld
xorb
mov
xor
xchg
add
shll
xchg
and
push
sbb
jmp
add
out
inc
inc
lahf
std
daa
push
addb
daa
fimull
push
inc
insl
add
dec
dec
testb
inc
bound
mov
mov
mov
in
mov
ret
push
jle
jle
push
push
pop
cmp
ds
add
or
ljmp
add
aam
dec
pop
add
rcrl
xchg
jl
insl
sub
add
add
add
mov
and
jmp
rcrb
and
cmp
std
push
andl
cmc
fs
xor
dec
inc
fistps
popa
jne
arpl
pop
and
cltd
pop
push
nop
add
sbb
rol
in
xchg
and
test
add
scas
cmp
ss
adc
cmc
pop
cltd
push
add
lret
pushf
mov
jae
mov
mov
add
idivl
enter
add
add
add
aad
pushf
add
add
add
add
add
movl
lcall
add
inc
add
mov
movsl
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
nop
add
add
add
add
add
lcall
add
dec
add
add
add
add
add
and
mov
mov
add
cmpsb
add
add
add
add
add
jmp
add
add
add
or
flds
out
add
mov
inc
add
add
add
inc
add
add
add
add
add
add
add
cmp
lds
in
lock
dec
add
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
push
add
sub
pop
add
add
add
add
add
add
add
add
add
inc
repnz
dec
inc
sbb
dec
repnz
neg
loopne
xchg
gs
shlb
pop
fstl
fldl
unpcklps
lret
aas
mov
add
add
std
add
add
add
cs
xor
movsl
push
idivl
adc
xchg
shl
mov
fs
xchg
xchg
adc
nop
inc
jno
stos
imul
movb
add
add
add
add
or
sbb
cmp
movsl
add
add
out
filds
test
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
pop
add
add
add
add
add
and
mov
mov
add
add
add
add
add
add
sti
add
xor
xchg
or
sub
int3
fsts
sub
ss
leave
flds
push
ljmp
das
imulb
std
jl
inc
push
cmp
xor
cmpl
bound
scas
jle
jno
xchg
aam
dec
rcrl
fchs
outsb
xchg
mov
mov
pop
int3
add
fldl
or
adc
pop
aad
mov
add
adc
scas
mov
push
dec
int3
mov
mov
data16
xchg
sbb
jno
inc
sbb
push
fcmovb
cli
cmp
xor
rcrb
popa
faddl
cmovbe
cmpsb
sbb
jmp
out
filds
or
fxch
inc
add
test
pop
and
lods
in
sbb
ret
jle
sub
out
fldt
push
sarl
or
bound
mov
mov
or
jp
shl
popf
add
scas
pop
sbb
jne
cmpsl
stos
ss
jbe
gs
xchg
or
bound
mov
lds
leave
dec
test
or
xchg
imull
inc
jecxz
iret
or
ret
ds
out
ret
add
push
cmp
fs
adc
orb
fs
and
lret
pop
repz
lods
test
imul
jne
imul
flds
lret
pop
daa
push
mov
pusha
sub
sbb
inc
sbb
insb
ret
fmul
hlt
aas
sub
pop
and
sbb
outsl
rolb
or
jae
std
jmp
rorl
or
inc
xor
enter
adc
pop
es
rcrl
out
jg
jne
xchg
in
fnstenv
add
ja
or
std
fs
and
aaa
mov
mov
adcl
test
cs
hlt
mov
je
inc
lret
in
xchg
pop
mov
dec
in
ds
lods
inc
inc
cmp
negl
es
call
adc
scas
out
mov
sahf
lahf
in
dec
popa
mov
mov
add
xchg
adc
cmp
je
pop
mov
fbstp
xor
imul
sub
xor
rol
xchg
or
jbe
aad
push
pop
or
and
inc
jecxz
xor
sbb
int
les
dec
jbe
test
pop
xchg
lods
add
fldenv
in
push
jle
ret
pop
loopne
outsl
inc
arpl
push
into
stos
or
inc
dec
movb
add
xor
dec
fldt
add
and
int3
out
mov
mov
shrb
stos
xor
adcl
rcrb
mov
enter
xchg
adc
out
cmp
stos
inc
inc
and
lret
cmc
lcall
cld
out
test
mov
insb
or
cmpsl
test
out
dec
jg
xchg
mov
or
lret
sub
adc
adcl
dec
movsb
sub
jno
sub
das
sub
mov
scas
pushl
addb
add
add
scas
mov
out
out
shlb
push
mov
jns
test
add
subl
push
sbb
aas
lock
push
xlat
clc
pop
jae
loopne
add
add
adc
mov
mov
adc
lea
pop
add
add
dec
dec
push
add
lods
xor
add
cmp
add
add
mov
add
add
add
sahf
pop
push
je
add
add
push
add
mov
xor
jle
movb
xchg
add
adc
mov
sbb
outsb
ret
inc
add
str
add
imul
push
adc
add
add
test
ds
push
push
inc
rorl
add
add
jecxz
sub
inc
arpl
rcrb
sub
add
imul
push
int3
mov
add
flds
add
inc
add
ficompl
add
xchg
add
aas
rolb
mov
pop
add
add
movl
push
mov
int
test
add
fnstsw
mov
jl
arpl
cmpsl
lods
fdivrs
xor
shlb
cmpsl
inc
pop
add
add
cmp
add
add
add
mov
add
les
add
lcall
aad
jp
add
add
pop
into
mov
roll
fcoms
push
sub
movsb
jmp
add
aad
add
add
in
out
add
add
mov
add
add
add
add
jmp
add
pop
mov
add
adc
mov
add
jae
add
add
add
fs
add
add
inc
fcoms
add
cmp
add
add
and
addr16
insl
add
add
rcrl
or
add
add
xchg
and
scas
adc
rolb
add
add
dec
add
xor
add
add
sbb
lods
repz
add
stc
cwtl
aam
add
add
inc
fucomip
adc
adc
add
lcall
add
jns
add
add
mov
add
add
aad
add
add
pop
xchg
add
xchg
cwtl
add
add
add
add
add
or
add
add
push
aaa
xchg
add
add
std
jle
push
add
add
xchg
lahf
pop
enter
add
jmp
add
add
add
add
add
jnp
push
add
add
sub
add
jo
or
add
add
or
add
add
push
xchg
outsl
add
add
lcall
add
fstps
add
add
add
push
add
sub
and
jl
ljmp
adc
add
inc
sub
add
push
popl
add
add
and
repz
add
lahf
fldl
add
add
add
fsubrs
or
cmp
out
push
add
add
add
mov
add
cmp
pop
inc
add
add
insl
ss
push
aam
add
add
jnp
pop
add
add
dec
into
out
adc
add
add
push
add
add
aam
sub
add
add
add
dec
add
add
add
xor
pop
add
add
rcl
fildl
add
add
push
pop
add
add
add
mov
add
jbe
fldl
add
add
in
sub
add
add
mov
add
add
add
mov
add
inc
pop
add
add
mov
add
add
add
mov
rolb
add
add
fsts
add
mov
add
add
mov
mov
aaa
push
into
add
push
hlt
add
dec
push
add
nop
verw
xchg
add
and
add
xchg
add
imul
pop
int
add
add
and
add
dec
in
add
dec
js
testb
add
lahf
dec
add
xchg
lods
add
and
xchg
shrl
add
sub
add
jge
add
imul
loopne
add
testb
dec
insl
add
mov
add
xor
mov
mov
add
sub
add
lret
jge
add
jnp
add
faddl
std
movsl
push
add
inc
add
or
add
mov
add
mov
push
add
cmp
add
aas
test
add
add
jmp
push
cmp
adc
int3
fwait
add
mov
insb
pop
bound
dec
imul
add
mov
jge
xchg
sbb
add
cmc
clc
cli
dec
sbb
in
xchg
jne
inc
divps
xchg
out
inc
loope
pushf
nop
push
add
mov
xlat
pop
add
pop
test
lds
imul
sti
pop
jnp
popf
stos
cmp
dec
or
add
repnz
pop
bound
shr
rorl
push
xchg
sbb
and
add
loopne
or
push
in
push
or
jns
cmp
add
jge
add
or
lods
jae
sub
test
incl
stc
in
mov
lock
mov
addr16
cmp
mov
imul
pop
icebp
mov
xchg
add
leave
lahf
jbe
add
xor
movsl
adc
daa
and
loopne
pusha
cmp
clc
inc
pop
mov
xor
fstp
mov
inc
repnz
mov
pop
insb
dec
inc
pop
ja
mov
mov
out
push
inc
add
repnz
subb
mov
jg
mov
mov
add
sub
popa
pop
repz
add
push
hlt
xlat
out
in
out
sbb
or
add
dec
mov
aam
add
and
dec
jle
scas
add
in
push
ds
or
push
sarl
repz
jbe
imul
xchg
add
cltd
pslld
xor
push
jge
stos
sbb
in
push
lds
add
mov
loop
or
jmp
add
add
daa
cs
bound
subl
sysret
add
pop
dec
mov
cmp
mov
addr16
cmp
rorb
lahf
mov
add
rclb
sarb
xchg
dec
add
mov
and
mov
push
xor
dec
int3
cld
pop
jb
shrl
push
rcr
sbb
pushf
inc
repnz
mov
imul
test
ds
jae
out
cmp
stos
out
mov
loope
inc
scas
je
lret
cmp
sti
or
push
int3
xchg
add
ret
adc
mov
adc
fbld
push
or
addb
dec
add
aad
jle
adc
jae
sahf
mov
or
add
mov
lods
stos
jmp
sub
inc
bound
xor
insl
and
dec
das
pop
inc
std
mov
fadds
push
fs
cmp
dec
out
sbb
fisubs
jle
xchg
fldcw
xor
sub
scas
bnd
add
push
jp
sub
add
ja
inc
lahf
sbb
cmc
mov
fbld
dec
mov
cltd
jl
sub
add
mov
pop
shl
bnd
aam
ja
add
inc
xor
fcoml
push
mov
mov
push
out
imul
push
xchg
scas
fwait
lret
jae
repnz
add
mov
xchg
xlat
leave
adc
data16
pop
repnz
out
mov
add
xchg
inc
jns
shl
movsl
ret
gs
lahf
xchg
add
mov
push
xchg
jg
mov
add
in
and
repnz
jno
mov
adc
add
mov
mov
inc
outsb
test
jp
pop
fwait
sbb
mov
push
sbb
push
inc
repz
push
and
push
icebp
adc
and
add
xchg
mov
jns
cmpsl
mov
xchg
lcall
lret
shll
scas
push
lret
repnz
add
sarb
cmp
mov
cmp
add
jge
addl
add
add
add
add
add
add
add
add
add
pop
testl
jae
mov
lods
add
add
push
filds
in
add
add
add
push
scas
add
add
add
add
add
add
jmp
add
add
test
add
add
add
add
add
add
cmp
add
add
add
pop
pop
add
mov
add
mov
add
add
add
add
frstor
insb
add
add
xchg
add
imul
sbb
add
add
add
js
add
int
repnz
add
fcoms
int
add
add
add
add
add
xor
add
cltd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
or
add
sbb
add
sub
add
jno
add
and
add
mov
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
jmp
add
push
add
add
add
cli
add
add
add
push
add
add
add
roll
add
xor
add
enter
cmp
add
mov
add
mov
add
add
add
mov
add
test
add
in
add
cmpsb
add
add
add
add
add
add
add
cmp
add
repz
add
add
xchg
add
add
add
add
add
xchg
add
add
add
out
add
inc
add
add
add
add
and
add
call
add
stc
and
add
and
add
pop
add
int3
push
xchg
push
add
lods
ret
sbb
pusha
std
int
sbb
lahf
aam
aas
add
add
add
sub
loop
ja
pushf
or
cmp
icebp
rcrb
add
cmp
out
pop
cli
pop
js
stc
sub
rol
sbb
mov
add
add
add
insl
jle
ret
lea
ret
xchg
scas
mov
add
jmp
mov
and
sbb
jle
xchg
and
es
and
add
add
add
add
push
rcl
and
xchg
setae
cs
sub
int3
mov
movsl
xorl
insl
inc
add
fadds
test
adc
inc
pop
mov
out
dec
add
add
add
inc
test
add
es
xor
or
imul
cmp
and
dec
fsubl
add
add
iret
cmp
fiadds
add
add
add
and
add
pshufw
add
add
loope
and
add
add
push
ss
add
add
add
add
sbb
xor
add
mov
add
and
add
add
add
ret
repnz
add
lcall
add
add
add
add
dec
lods
icebp
mov
add
add
add
add
add
dec
rcll
add
add
mov
add
rcrl
add
movsl
insb
lock
add
add
cmp
add
add
add
add
add
add
rolb
add
call
add
add
fdivrl
add
aam
lea
jns
test
add
add
add
add
add
add
xor
inc
xor
add
xchg
add
mov
inc
add
sbbb
push
pop
add
shld
rolb
add
mov
add
add
cli
add
add
add
scas
fiaddl
scas
xor
call
jae
push
xchg
add
add
mov
push
test
add
das
add
icebp
stos
add
repnz
stos
lcall
mov
pusha
add
mov
add
adcl
lret
add
lds
and
test
leave
ss
orl
in
dec
cmp
ss
mov
add
mov
add
cltd
or
insl
xchg
in
add
add
in
pop
cmc
adc
add
add
and
and
mov
pop
add
call
add
testb
add
add
add
pop
sub
add
jg
add
filds
sti
fcompl
add
popf
add
pop
dec
add
or
sbb
addl
jae
setb
test
inc
add
add
add
add
mov
add
add
xlat
test
add
xor
add
add
inc
dec
push
add
push
mov
add
jb
add
add
add
add
add
pop
into
out
adc
add
sub
add
xlat
add
add
add
add
add
mov
add
add
add
int
add
sbbb
add
add
aad
fcmovnbe
and
add
add
add
add
add
add
add
sub
add
jnp
add
pop
and
add
sbb
add
rolb
add
les
add
sti
shrl
cmc
add
lret
add
add
testl
xor
and
aas
icebp
mov
imul
mov
adc
ds
sahf
stos
roll
jmp
inc
insb
sub
jb
mov
jb
aas
imul
int3
daa
push
mov
sar
mov
cld
popa
popa
and
xchg
data16
mov
adc
dec
fwait
jae
jecxz
inc
jne
clc
rolb
push
loopne
push
test
inc
jl
xor
insb
shr
fdivl
sub
cmp
adc
lret
mov
inc
bound
adc
mov
push
mov
inc
xor
jns
out
add
psubsw
dec
and
lret
mov
test
popa
rorb
in
add
sbbb
sahf
or
dec
add
aaa
in
rcl
add
sub
sbb
loope
into
cmc
addb
adc
out
incl
dec
cli
fwait
loope
mov
mov
insb
mov
out
sbb
sbb
mov
mov
inc
int
mov
lea
je
jo
dec
pushf
movsb
filds
in
pop
inc
outsb
aaa
jp
in
je
mov
jo
cmp
dec
test
icebp
push
outsl
addb
xchg
xor
shll
sub
in
mov
fsubrl
std
jo
fstpt
hlt
ficoms
shrl
xor
xor
sbb
imul
outsb
repnz
outsb
test
xor
fwait
inc
push
mov
outsl
add
testb
cs
cltd
pop
xor
loopne
pop
jo
sbbb
aam
jae
loope
pusha
mov
pop
pop
and
sub
out
mov
das
cmp
mov
dec
lret
xacquire
pop
or
repnz
sahf
out
mov
mov
inc
pusha
mov
push
jae
stos
xchg
dec
lret
leave
cmp
push
lcall
dec
jl
inc
nop
mov
add
xor
jmp
test
xor
xor
cmpsb
shlb
push
pop
out
jmp
and
sub
sub
das
inc
cli
jnp
or
in
jmp
stos
xor
add
outsl
sbb
out
mov
loope
fs
push
jle
iret
xor
or
aam
mov
lock
sub
sbb
testl
add
stos
xor
inc
imul
call
js
xchg
push
mov
stos
sub
out
aaa
lcall
cmpb
je
sbb
outsl
dec
jl
mov
mov
mov
mov
cmp
andl
gs
lret
fsubs
insl
xlat
mov
lea
movsl
add
data16
shrb
adcb
fdivl
movsb
mov
or
push
push
sbb
mov
leave
cmp
or
into
push
arpl
push
add
dec
leave
push
mov
cli
push
outsb
outsb
adc
int
jp
in
jo
bswap
lods
fbld
mov
roll
hlt
icebp
test
aad
fcoms
in
jns
stc
jo
mov
dec
insb
pop
shrl
sbb
add
pop
xchg
adc
pop
adc
push
mov
ljmp
scas
or
imul
dec
and
sbb
xor
out
mov
stos
push
sub
inc
insl
xor
add
pop
xchg
addb
loopne
dec
bound
push
mov
add
and
and
shrl
scas
fs
xor
fbld
outsb
mov
shufps
cld
shlb
psrlw
jnp
jp
jg
loop
movsl
cmc
je
and
xchg
iret
loop
insl
rcrb
in
mov
dec
punpckldq
dec
shr
addr16
lcall
leave
ljmp
xchg
mov
xchg
out
gs
dec
mov
jmp
shrl
mov
les
xchg
sarl
add
in
fstl
sti
pushf
push
jne
das
loope
ja
pop
in
lods
and
xchg
nop
sub
lods
or
xchg
lret
inc
les
xchg
mov
in
adc
xchg
addr16
pop
or
fldenv
call
jge
adc
pop
add
lret
jecxz
popf
mov
jge
push
cmpb
scas
out
roll
pop
lea
mov
hlt
movsl
popa
mov
sub
pop
push
fstpt
loopne
mov
cmp
std
xlat
bound
or
into
jnp
jle
jecxz
repnz
pop
inc
sub
mov
insb
push
and
test
imul
xor
dec
push
inc
ror
cmpb
adc
push
dec
mov
mov
test
push
scas
fsubs
test
loope
lret
lds
nop
repnz
shr
fcoml
clc
sbb
movsl
mov
dec
insb
pop
lods
sub
addb
pop
xchg
adc
dec
sub
rol
adc
sbb
or
not
mov
dec
and
enter
fisubrs
testb
out
jnp
adc
loope
push
pop
xchg
xchg
add
cwtl
push
popa
mov
pop
cmpsb
loope
fimull
mov
pop
nopl
lods
les
aam
imul
sub
fsubl
sarl
cltd
xor
lods
sbb
add
and
or
lret
mov
mov
test
or
int
push
push
pop
cli
gs
add
push
xchg
pop
inc
enter
mov
or
push
add
mov
lods
lods
fldl
cmp
arpl
arpl
icebp
jmp
xchg
enter
stos
or
fimuls
fmuls
dec
xor
arpl
bnd
mov
dec
repnz
imul
insb
inc
leave
lret
or
cmp
dec
pop
orb
pop
mov
jo
xchg
xchg
or
test
inc
xor
mov
fs
mov
shll
push
iret
jecxz
in
push
lahf
mov
add
push
cmp
jno
pop
test
dec
add
add
add
adc
scas
ljmp
and
cmpsb
in
fldl
stos
popa
pop
mov
icebp
stc
fucomi
and
pop
and
bound
adc
in
iret
jle
dec
sub
mov
aam
outsl
pop
push
popa
mov
stc
js
shll
jg
adc
sbb
mov
cmp
mov
test
into
sbb
dec
bound
mov
add
xchg
xchg
or
faddl
into
or
fwait
stc
cli
mov
push
repnz
sbb
js
stos
divl
jne
xor
and
push
lods
ja
test
test
push
xchg
or
iret
dec
sub
add
sbb
into
adc
xor
ja
push
xchg
add
ret
arpl
mov
adc
das
shll
add
jmp
es
outsb
pop
cltd
mov
add
test
mov
jle
pop
stos
in
out
cmp
rcll
mov
mov
movsb
jmp
aas
rcl
mov
in
ja
dec
fdiv
cltd
insb
and
fsubs
xchg
arpl
push
jl
in
cmpsb
jg
sub
mov
xor
hlt
dec
fwait
pop
outsl
push
daa
xchg
and
xlat
ret
push
addr16
adc
lds
mov
xlat
or
and
std
gs
mov
xor
and
fxch
cwtl
jmp
cmpsl
or
and
or
cltd
sti
and
xor
hlt
in
cmp
adc
fdivl
pop
mov
leave
push
xor
jne
out
or
mov
int
fs
lcallw
imul
inc
in
mov
mov
jne
fcoml
inc
and
sarl
inc
or
rcrl
inc
inc
push
or
call
jb
mov
jne
movl
mov
sub
xchg
fidivs
sub
test
add
aas
add
ja
int3
jge
adc
and
popa
cmp
aam
add
mov
mov
daa
shl
fisubrs
pop
xchg
push
ss
sub
stc
mov
xchg
xchg
fmull
xor
pusha
pop
adc
jge
aam
push
pop
sbb
out
les
mov
cld
in
mov
or
aad
mov
jl
aas
mov
loop
out
cltd
mov
or
vunpckhpd
sbb
cmp
mov
aam
or
sub
stos
adc
or
dec
daa
or
hlt
int
adcl
pop
cmp
js
adc
std
mov
push
aaa
outsl
xor
stos
or
add
pushf
cmc
push
sbb
add
push
popf
insl
mov
cltd
nop
nop
sub
stc
outsl
pop
outsb
mov
cmc
dec
fisubs
fdiv
lds
mov
daa
sub
add
sub
mov
sbb
cs
jne
mov
les
inc
aad
ret
jbe
sbb
cmp
les
fstl
movsb
nop
incb
shr
in
pop
jle
pop
cmp
fsubrs
ja
sbb
ds
nop
outsb
dec
pop
and
leave
cmpsb
inc
push
push
fs
sbb
jecxz
mov
repnz
pop
loopne
and
popf
fcoml
mov
int
inc
loopne
xchg
hlt
pop
leave
jmp
push
cmp
mov
pop
fcom
cmp
rcrb
mov
test
push
mov
dec
movl
in
icebp
repnz
cmp
jg
pop
sbbb
clc
mov
pop
je
cmp
test
mov
adc
dec
jmp
jge
dec
addb
sbb
mov
push
aad
out
adc
adc
sbb
mov
mov
sbb
daa
lods
sub
clc
enter
movsb
in
jns
mov
xchg
inc
jne
push
cmp
jge
cld
std
stos
repz
sbb
xor
lods
ret
pop
xchg
dec
fwait
repnz
pop
xor
arpl
push
xor
pop
arpl
fsubrp
lods
push
sbb
or
mov
je
enter
mov
out
aad
xchg
xor
into
xorl
pop
xchg
cld
cltd
das
jae
sbb
repnz
push
xlat
scas
andb
cmp
pop
subl
or
pop
mov
inc
lds
pushf
sub
icebp
adc
xor
in
out
aaa
into
stc
cmpsl
jl
lods
aad
rorb
fcoml
movsl
aam
lahf
repz
dec
jge
in
aad
sahf
sbb
push
jno
popf
sahf
nop
and
xchg
mov
cltd
orl
pop
adc
ret
test
pusha
push
gs
mov
ffreep
sti
jmp
or
shll
add
in
push
loop
mov
jne
pusha
lock
mov
xchg
sti
cmp
inc
lock
xchg
fs
mov
push
adc
rcrb
jno
jecxz
pop
call
insl
jno
enter
pop
jo
jne
fldt
mov
mov
inc
xlat
aaa
fnstsw
lahf
out
cltd
pop
sbb
std
push
sub
mov
mov
jae
cmp
push
sbb
stos
inc
push
push
mov
test
add
pushf
test
ret
int
adc
aad
frstor
jne
add
sbb
fsub
movsb
xchg
lcall
and
cmc
fucomip
adc
jp
icebp
aad
mov
fldt
and
mov
push
imul
std
fcmovne
rolb
xor
and
sbb
fsubs
movsb
test
mov
fidivrl
mov
shl
fidivl
or
adc
push
ljmp
xchg
cltd
imul
push
mov
pop
fndisi(8087
bound
arpl
iret
cmp
mov
push
fs
inc
pop
sub
sbb
mov
out
mov
inc
loopne
mov
int
pop
loop
out
lret
test
sbb
fstps
iret
mov
pushf
sub
sti
ret
mov
cmp
lds
sub
jne
or
mov
dec
sti
dec
sub
repz
lret
loop
xor
ja
cmpsl
je
cmp
lods
ret
dec
ss
push
add
call
loope
xchg
xchg
or
lea
add
xchg
es
jae
pop
xchg
sar
sarl
popf
femms
daa
or
pop
sbb
jg
shll
shl
jg
push
mov
mov
shl
ss
pop
sar
lock
sbb
xor
outsb
leave
lret
lret
jp
lock
xchg
push
add
retw
inc
imul
xchg
cmp
mov
push
lret
daa
test
cld
adc
mov
dec
sbb
lea
js
xlat
push
clc
mov
sti
xchg
cltd
lock
outsl
ficoms
mov
xchg
aas
adc
xchg
mov
inc
mov
fisttpl
add
addl
mov
xchg
or
and
lcall
cmp
dec
aaa
and
loope
hlt
test
rcl
inc
push
cld
inc
sub
add
mov
clc
divl
imul
xchg
orb
ljmp
iret
out
aas
mov
push
and
mov
and
lret
push
xlat
xchg
jge
roll
fsubp
and
pop
shr
enter
frstor
xchg
insb
push
push
xor
sti
nop
push
out
stos
xchg
insb
out
mov
xor
pop
or
addr16
jns
rcl
ja
jecxz
iret
les
mov
fistl
xor
aad
test
in
loope
mov
mov
in
xchg
loope
xchg
sbb
into
or
call
xchg
mov
xor
push
frstor
aaa
xor
jns
sbb
dec
leave
jp
xchg
fsubs
adc
xchg
clc
add
and
jns
mov
lret
incb
mov
repz
lret
out
mov
push
fwait
xchg
cmpsb
and
mov
pop
mov
testl
cs
or
cwtl
adc
push
or
shrb
ret
pop
push
es
je
mov
mov
mov
int3
hlt
fdivrl
push
fsubrs
push
addr16
lahf
cld
jmp
sbb
scas
jo
jns
adc
out
jg
jmp
mov
pop
ss
outsl
addr16
pop
xlat
loop
lock
mov
enter
jb
xor
fidivrl
aad
in
nop
pop
xchg
xchg
imul
stos
sbb
push
test
jno
push
dec
stos
test
imul
xor
jmp
fwait
imul
dec
std
inc
add
mov
sub
into
jle
add
sub
outsl
dec
js
inc
fstps
inc
jmp
test
mov
rcrl
test
mov
ret
inc
inc
stos
cltd
pushf
sbb
pop
mov
negl
imul
icebp
adc
cmp
sbb
aaa
in
jno
mov
jle
jmp
push
aas
mov
mov
inc
js
cmc
ret
dec
xor
negb
adc
xchg
cli
dec
out
adc
mov
xchg
fisubrl
setle
fldenv
mov
mov
outsb
insb
dec
fdivrp
out
in
mov
movsl
inc
jo
or
rorb
cmpsb
js
xor
dec
xchg
push
mov
mov
call
in
mov
ficompl
xchg
sbb
sbb
icebp
adc
lcall
pop
ds
sahf
inc
mov
or
add
repnz
push
xor
lods
pop
out
inc
adc
scas
fst
dec
aas
shrl
jmp
int
or
movsb
jge
mov
cmp
xor
mov
jmp
dec
xchg
mov
push
add
mov
aas
mov
and
loope
sub
or
repnz
push
scas
jl
mov
cmpsl
pop
adc
or
movsl
dec
aam
shll
mulb
movsb
cli
popa
push
sbb
in
lds
jle
mov
add
insb
inc
jg
or
insb
insl
stc
mov
jbe
pop
mov
insl
pop
inc
lods
std
in
lret
pop
mov
inc
adc
aam
aam
dec
bound
jl
notb
int3
xor
cmpsb
in
cltd
sahf
add
fcoml
dec
xchg
out
dec
insb
les
fs
push
pushf
add
jl
or
mov
mov
xchg
sub
mov
sar
std
jmp
scas
cmp
push
aas
das
jbe
scas
mov
ss
movsl
mov
das
mov
fldt
popa
icebp
in
or
stos
pop
in
mov
inc
ss
shr
sbb
mov
enter
sbb
mov
out
das
loop
addr16
adc
jb
fldl
sti
mov
jg
jbe
repnz
jl
mov
mov
lods
pop
in
mov
pop
imull
fildll
cmc
xchg
je
push
repz
xchg
imul
flds
pusha
dec
std
mov
xchg
jmp
loope
sti
mov
mov
vpsllw
jecxz
and
push
rclb
sub
dec
fsubr
test
jge
pop
int3
aaa
repnz
adc
dec
test
into
mov
xchg
outsl
cmpsl
std
pop
andb
mov
add
jle
cmp
pop
outsl
xchg
dec
mov
and
sbb
mov
stos
sub
sub
rcll
jmp
arpl
fcompl
repz
imul
rolb
inc
sbbb
xor
mov
push
fabs
xchg
push
lods
gs
out
std
xor
add
xor
push
add
cmpsl
jnp
ror
pusha
cmpsl
inc
rcll
jbe
mov
test
insl
fwait
cli
in
out
aaa
adc
negb
popa
push
xchg
push
clc
icebp
push
movmskps
sbb
pushf
insl
jmp
mov
inc
pop
scas
lret
dec
pop
jp
xchg
out
mov
arpl
mov
mov
cltd
lock
pop
or
fmuls
cmp
into
adc
int
gs
mov
jbe
mov
cmp
loopne
lahf
lcall
inc
mov
stos
lahf
add
push
jae
adc
mov
test
addb
ret
aaa
je
imul
sti
dec
or
mov
enter
cmp
mov
ljmp
inc
sub
push
out
daa
shl
pop
adc
dec
stc
iret
icebp
in
mov
jp
pop
ja
lods
xlat
adc
int3
add
inc
mov
add
ljmp
adc
xchg
inc
fdivrl
xchg
jo
lock
xchg
mov
sarl
lret
mov
adc
sub
test
mov
aad
das
das
stos
and
loop
push
daa
sahf
ret
leave
and
mov
in
inc
arpl
mov
cwtl
mov
popf
mov
lock
adc
jno
or
jbe
jecxz
inc
fmuls
lahf
repz
fwait
adc
fsub
inc
enter
sbb
dec
sahf
jno
mov
mov
lods
lahf
xor
int
cmp
mov
test
popf
mov
jb
cmp
or
cmp
and
loop
pop
inc
and
pusha
push
out
mov
sub
repz
test
shrb
clc
lods
sub
jecxz
add
push
lahf
inc
hlt
sar
jmp
and
lret
inc
mov
in
inc
fsubr
sar
ljmp
jl
xor
jo
cmpsb
jge
mov
xchg
fs
lods
fwait
lss
cli
fwait
hlt
std
mov
test
dec
aaa
das
sbb
xor
push
sti
and
xchg
xor
mov
sbb
repnz
fcoml
nop
mov
jbe
fwait
aas
cltd
add
sbb
je
push
lret
in
cmc
xchg
cmp
lea
stos
movsb
push
pop
xor
xchg
cmp
rcrl
and
call
pop
jle
popf
inc
into
gs
ficomps
jmp
xchg
cld
mov
dec
lea
cmpb
push
push
and
cmp
mov
int3
jno
jne
add
jmp
ds
rolb
lret
dec
add
lahf
testb
ljmp
inc
push
add
xchg
add
scas
int
sub
js
enter
movsl
pop
push
jle
mov
enter
mov
out
jnp
test
jnp
dec
jnp
mov
int
push
mov
dec
lcall
mov
fwait
cmp
daa
cli
mov
out
dec
xor
jecxz
test
popa
mov
inc
inc
in
ficoms
jo
loop
sbb
lcall
divl
jp
xchg
xor
fwait
lods
popf
cmpl
stos
lcall
fdivp
xchg
sbb
dec
jmp
popf
mov
pop
sub
pop
rcr
sbbl
in
aaa
mov
mov
test
dec
jbe
xchg
int
pop
xchg
pop
sbb
popf
and
and
pop
mov
mov
mov
mov
sub
jge
loop
test
sub
fs
push
xchg
popf
fimuls
push
std
repz
pop
mov
test
fadds
add
repz
test
dec
push
mov
adc
psrad
add
jnp
pop
arpl
pop
mov
xlat
add
push
rcrb
pop
add
es
cmpsl
push
hlt
leave
int3
inc
lret
pop
mov
push
cmc
sub
dec
jecxz
mov
and
cmp
xchg
jo
repz
outsl
adc
sub
movb
mov
cs
sbb
fsubrp
mov
ja
es
std
xor
inc
lret
xchg
shrl
idiv
sbb
mov
mov
jle
xchg
scas
stos
or
mov
cmp
adc
pop
fistps
fidivrs
mov
dec
addr16
jbe
sbb
and
pusha
or
aaa
jg
in
out
test
cmp
add
mov
lods
cmp
lods
add
fidivrs
stos
es
in
add
lret
xlat
sbb
into
aad
rorb
pop
cmp
xchg
iret
push
enter
lds
pop
cmp
mov
xorb
faddl
xchg
sub
cli
pop
jecxz
adc
adc
dec
or
cwtl
mov
clc
mov
repnz
pop
fsts
jo
lock
pusha
lods
adc
stos
out
mov
out
jl
repz
in
repnz
sub
ljmp
dec
test
popf
push
lcall
addl
xlat
mov
pop
pop
inc
xchg
mov
xchg
cmc
je
sub
dec
aam
mov
cmp
inc
mov
add
xchg
mull
jno
mov
btc
dec
pop
push
jmp
adc
xchg
dec
mov
clc
cmc
not
lea
not
ret
push
add
add
add
add
not
not
call
add
nop
ret
jb
insb
push
add
ret
les
and
cmp
lea
lea
lea
lea
sub
dec
sahf
sub
nop
mov
not
mov
xor
sub
push
mov
jmp
push
outsb
dec
call
cmp
test
or
nop
cmp
je
jmp
sbb
lea
nop
not
nop
not
mul
add
lea
jmp
add
sbb
and
add
push
clc
call
xchg
push
call
jmp
or
add
dec
.byte
xchg
.byte
