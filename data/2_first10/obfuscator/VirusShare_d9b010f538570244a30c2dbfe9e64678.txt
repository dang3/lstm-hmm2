add
cld
movb
jmp
repnz
or
add
jmp
test
andl
int
shr
jmp
movsl
xchg
sbb
add
psubd
sub
inc
movl
shr
psubd
jmp
cmp
ljmp
jmp
sub
mov
cmp
sbb
and
adc
push
dec
pop
movw
adc
ja
sub
pslld
sbb
sbb
jne
adc
or
xor
lahf
movl
pminsw
adc
andps
push
dec
pop
imul
push
xchg
pop
jae
pxor
imul
sbb
dec
movb
or
xor
jmp
call
add
popf
push
cwtl
pop
psubusw
adc
adc
xor
jmp
das
cld
movw
rsqrtps
and
movlhps
or
and
sub
push
inc
pop
movhlps
jmp
and
std
lods
inc
and
movb
push
cmc
pop
sbb
psrlq
xor
unpcklps
sbb
sub
jno
push
xchg
pop
xor
sbb
add
push
cltd
pop
jle
add
rol
or
movw
jne
sbb
packsswb
push
inc
pop
xor
xor
aaa
movl
jbe
or
jmp
and
andps
jmp
push
mov
jg
pminsw
shr
add
sbb
movb
jl
and
js
psubd
sub
xorps
sub
and
sbb
rcr
je
rcr
jns
and
movb
adc
jns
push
inc
pop
je
push
dec
pop
add
add
jns
adc
xor
sbb
push
dec
pop
jne
or
cmpl
jne
and
push
ret
add
add
mov
push
int
out
sahf
sbb
pop
jmp
out
popf
out
sahf
jne
xor
sahf
popa
xchg
adc
xchg
adc
sub
mov
imul
lcall
sahf
into
cmp
sahf
imul
dec
outsb
mov
pop
push
sti
clc
mov
xor
sahf
lahf
imul
dec
outsb
mov
pop
outsb
rolb
popa
xchg
xchg
out
jbe
push
neg
sahf
cmp
push
popf
imul
fdivl
sahf
es
neg
sahf
cmp
hlt
imul
xchg
sti
faddl
stos
loope
push
push
hlt
ficomps
imul
out
push
cmpsb
imul
fildll
cwtl
pop
sub
test
jae
fisubs
ficomps
imul
jbe
in
sahf
sahf
add
sahf
imulb
lahf
sahf
add
sahf
xchg
adc
jnp
sahf
leave
shr
pop
lahf
imul
sub
insl
mov
imul
ficomps
arpl
mov
imul
mov
popa
mov
sahf
xchg
popa
xchg
adc
xchg
rcr
jbe
out
sahf
sahf
xor
test
jnp
sahf
imulb
ficomps
loopne
sbb
popf
movsb
mov
stos
adc
test
sub
sahf
hlt
sub
int3
iret
xchg
ds
sahf
imul
ficomps
xchg
cmovg
ficomps
ficoms
imul
xor
popf
mov
out
sahf
adc
addr16
xorb
sbb
cli
lret
sahf
imul
loopne
xchg
pop
cmp
push
push
sti
jle
push
sti
jle
push
sti
jle
push
sti
jle
push
sti
jle
pop
xor
xchg
adc
cwtl
enter
xchg
mov
adc
xchg
out
sahf
sahf
xor
gs
push
popf
in
jg
mov
mov
dec
ljmp
push
mov
mov
loopne
mov
mov
stos
rclb
push
imul
adc
fs
sahf
imul
push
loopne
xchg
sbb
adc
xchg
push
cmp
sbb
insl
out
imul
dec
cmp
cmpsl
popf
xchg
insl
movsb
sahf
pop
movsb
iret
int3
call
gs
aaa
imul
push
pop
out
popa
xchg
out
sahf
into
or
pop
call
hlt
adc
aaa
imul
push
pop
out
popa
xchg
out
sahf
into
sub
pop
call
adc
xor
ljmp
jne
xor
pop
mov
xchg
xchg
sahf
push
imul
mov
call
in
pop
sbb
scas
ljmp
imul
adc
imul
xchg
adc
inc
adc
loopne
xchg
cli
lret
sahf
imul
loopne
sbb
pop
sbb
pop
out
mov
pop
rclb
mov
out
jbe
push
sahf
adc
sub
leave
jbe
out
sahf
sahf
loop
sbb
mov
out
leave
jbe
out
sahf
sahf
loop
sbb
mov
out
leave
jbe
out
sahf
sahf
loop
sbb
jge
scas
sahf
leave
subl
sahf
imul
lods
ljmp
adcl
data16
push
cmp
call
test
in
add
sar
pop
out
enter
jmp
pop
test
sti
push
out
enter
jmp
pop
scas
repnz
sahf
rolb
cli
rolb
mov
lcall
xchg
fistps
sbb
in
sti
sbb
repnz
mov
repnz
out
cmp
mov
sti
or
shr
pop
sahf
jmp
das
mov
jmp
mov
stc
fildll
ljmp
cmp
sbb
lock
sbb
sahf
sahf
imul
sahf
imul
sahf
imul
sahf
jnp
sahf
sahf
cmpsl
adc
popa
dec
out
jle
imul
sahf
imul
add
dec
pop
dec
add
add
add
add
xchg
jb
add
add
add
add
add
jno
icebp
add
int
lea
jno
push
aam
sub
or
repnz
or
push
dec
xlat
cmovb
push
mov
addl
add
add
add
imul
push
pop
mov
xchg
bound
rcrl
aam
sbb
or
inc
std
lahf
inc
inc
arpl
dec
jne
fbstp
in
push
pushf
in
repnz
or
dec
xor
lods
inc
les
cmp
and
sbb
mov
repnz
movsl
sbb
add
add
test
aam
cs
test
add
add
mov
sbb
or
add
pop
fiadds
add
add
mov
dec
add
add
cltd
add
add
add
add
add
add
out
add
add
add
add
add
add
int
add
popa
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
add
add
sub
rolb
add
sub
faddl
dec
push
test
testb
add
cmp
lret
dec
add
add
add
jb
add
fwait
pop
add
fiadds
add
add
pop
addl
add
and
add
add
into
lret
add
add
add
in
mov
ficoms
add
add
add
sub
add
push
add
add
add
add
pop
cltd
jbe
add
loop
add
sbb
add
add
sbb
pop
popa
je
outsl
add
in
bound
sbb
mov
mov
aam
mov
xchg
cmc
test
fiadds
push
add
mov
divl
xor
pop
scas
push
mov
das
jnp
push
fimuls
xor
es
sub
pop
negl
mov
cli
mov
sub
and
inc
mov
and
sbb
daa
add
mov
loop
or
insl
lea
int3
mov
mov
sub
xchg
js
cwtl
bound
or
aaa
rorb
jns
adc
lret
aam
or
shll
add
dec
scas
adc
xor
pushl
mov
xlat
imul
pusha
fsts
fucomip
sub
subb
out
jmp
jbe
daa
std
test
jmp
repz
mov
outsb
bound
fdivl
sub
imul
dec
mov
mov
sbb
std
mov
push
sbb
xchg
lds
movsb
test
mov
xchg
pop
mov
cmp
repnz
imulb
mov
or
cmp
outsl
mov
adc
inc
sbb
es
sbb
add
jae
xchg
dec
movsl
je
and
adc
mov
out
test
push
sbb
and
das
mov
cmp
enter
cld
dec
cld
mov
lods
rorl
cmp
out
in
and
je
movsb
mov
enter
or
jb
cltd
cmpsb
call
cmp
jp
je
orl
sti
je
or
mov
jnp
mov
sbb
mov
sub
inc
sbb
pop
out
jp
dec
je
pop
mov
nop
lcall
jnp
mov
push
mov
inc
add
mov
fldcw
pop
jo
mov
scas
xchg
lods
xor
add
test
push
adc
aad
and
fdivrs
mov
inc
mov
adc
add
xchg
std
dec
fwait
lret
rcr
stos
leave
cmc
insl
bound
push
adc
je
fwait
mov
push
and
mov
cmp
push
popa
cmpsl
or
adc
ss
mov
adc
stos
mov
and
or
xor
aam
adc
xchg
add
mov
pop
pop
cmp
jbe
mov
add
fsub
push
inc
adc
aaa
rol
test
mov
in
in
jmp
out
push
cmp
imul
fdivrs
ljmp
fdivs
inc
add
push
loopne
pop
popa
pusha
leave
int3
int
push
out
sbbb
jno
pushf
js
shrb
xchg
lock
test
test
fs
cmp
cmc
add
aam
mov
xchg
daa
mov
je
lds
clc
loope
dec
cltd
sti
adcl
add
scas
stos
aad
roll
and
ss
and
mov
xchg
pop
dec
push
mov
push
arpl
mov
neg
sbb
mov
daa
mov
cmovne
mov
jmp
jbe
movsl
sub
cwtl
and
ret
stc
lea
stos
xor
sub
mov
and
je
fst
shlb
mov
xchg
mov
add
jg
ljmp
daa
jbe
xchg
mov
xchg
pop
jmp
les
loopne
ret
cmpl
pop
orb
mov
in
mov
jo
pop
cmp
cmpsb
push
mov
mov
fcmovu
mov
xchg
push
test
cmp
adc
lahf
mov
repz
cmp
mov
mov
push
or
es
out
sbb
xchg
cld
adcb
xlat
jl
xchg
ja
jns
mov
sub
stc
adc
inc
loope
into
mov
or
jmp
imul
sti
stos
add
loopne
loope
fsts
incb
pop
cmp
dec
andb
dec
insb
psubb
cmp
sub
mov
pushf
pusha
cmp
fnstcw
aas
jo
cmp
jns
mov
cltd
scas
dec
aam
pop
mov
mov
iret
or
test
jb
adc
int
loope
cmp
stos
cwtl
mov
popf
add
icebp
rcrb
sbb
cmp
test
xor
xchg
into
jge
daa
xchg
cmpb
lds
loopne
jns
add
leave
pop
mov
icebp
in
lahf
mov
ja
add
ror
sub
insl
outsl
add
mov
adc
psubq
add
mov
nop
repz
mov
in
cmc
incb
sub
popf
jb
je
mov
inc
loop
ret
pop
dec
add
test
add
sub
lret
std
mov
fcompl
enter
rcr
test
dec
testb
orb
mov
andl
push
mov
dec
mov
dec
add
daa
mov
adc
jl
repnz
rclb
mov
cmp
pop
or
mov
add
outsb
andl
xchg
ss
dec
fs
mov
xchg
stos
pushf
and
repnz
mov
pusha
lret
loope
mov
xchg
fs
mov
xlat
pop
cmp
int3
fdivs
jg
sub
pop
adc
mov
jl
push
lahf
arpl
pop
orb
sbb
xchg
movsb
jmp
iret
sbb
lcall
lahf
ret
mov
test
inc
inc
inc
pop
lds
sub
or
repnz
cltd
xchg
dec
imul
loope,pn
test
test
jbe
adc
add
or
xchg
adc
testb
add
int
shlb
mulb
add
mov
mov
insb
push
ds
cmpsl
pop
cmpb
std
cltd
lret
jg
sub
fdivrs
mov
inc
sbb
pop
adc
clc
pop
adc
mov
and
xor
pop
lea
cmc
jno
push
loop
lods
adc
into
mov
in
bnd
push
inc
stc
arpl
add
imulb
jnp
pop
shlb
mov
cld
jo
aam
lods
icebp
mov
movsl
in
jmp
jns
call
test
stc
enter
stc
inc
mov
xchg
dec
adc
lret
and
dec
adc
adc
push
pop
push
stos
push
ret
ds
cmp
xorb
lea
push
mov
cltd
mov
mov
out
pop
sbb
cli
xchg
add
jle
arpl
stos
jb
mov
andl
mov
add
push
insl
xchg
dec
cmp
mov
pusha
add
cld
rcl
out
dec
or
inc
in
push
loope
adc
cmpsl
das
xor
jg
sub
mov
loopne
jecxz
sbb
pusha
or
imul
cmp
jl
mov
ljmp
ja
lea
addr16
hlt
cmc
sbb
clc
in
mov
pop
xchg
iret
xchg
call
aas
or
jno
mov
and
popf
out
mov
pop
out
adc
or
jmp
adc
sbb
push
adc
jmp
mov
mov
xor
mov
or
or
movsb
repz
pop
pop
push
xchg
pop
xchg
push
mov
and
sub
mov
push
add
xor
jmp
push
mov
daa
or
adc
xchg
test
cltd
pop
arpl
outsb
mov
and
lea
scas
arpl
xor
fsubrs
in
popf
or
push
cli
fstpl
rcl
ja
cmp
fstl
add
and
jp
lds
or
xor
inc
dec
movsb
push
cmp
sbb
pop
pop
popf
and
nop
xor
loopne
loop
pop
sbb
je
outsl
loop
addr16
mov
xor
into
repnz
or
sub
pop
arpl
jae
xchg
pop
jmp
push
jns
or
sbb
loope
mov
ljmp
es
sbb
sahf
pop
sti
add
or
fcompl
push
and
inc
mov
or
notb
adc
mov
mov
mov
negb
cltd
insb
sbb
andb
popf
mov
xor
outsb
rclb
inc
add
int3
ret
jne
stc
jns
jg
ret
es
aam
mov
test
jmp
add
xor
sbb
xor
fcompl
xchg
cmp
xchg
outsl
and
xor
adcl
push
pop
outsl
push
stos
icebp
mov
std
dec
cmp
sahf
stos
xchg
or
cmp
imull
mov
call
loopne
jle
lods
cmp
sti
jne
mov
dec
inc
mov
int3
enter
and
into
imull
out
out
dec
cltd
movsb
jp
push
push
scas
ds
jno
cmp
and
push
mov
stos
pop
into
cltd
nop
mov
imul
fmull
ja
mov
aaa
nop
cmp
or
mov
test
pop
pop
clc
clc
movsl
and
mov
mov
dec
dec
mov
cmp
mov
mov
aas
or
dec
je
xlat
std
ficompl
mov
xchg
mov
jg
or
fdivrl
cwtl
mov
pop
jns
in
or
sub
scas
adc
jle
jae
nop
or
push
ret
adc
xchg
popa
push
loopne
jecxz
int
sbb
mov
ss
pop
stos
xor
stos
popa
stc
jp
std
decl
out
cmc
push
push
xchg
dec
ljmp
jl
scas
cmp
mov
mov
aaa
lcall
in
int
cwtl
es
imul
jnp
push
enter
jp
pop
movsl
data16
ja
inc
ds
int3
lods
inc
mov
aaa
and
sbb
imul
into
add
sub
pop
jns
outsb
jecxz
sub
dec
xor
push
push
cwtl
or
mov
lods
bound
in
pop
nop
cmp
and
inc
sbb
sub
mov
pop
bound
inc
add
xor
cmp
orl
mov
push
jl
movsb
jno
sbb
xchg
fldl
ds
ss
adc
inc
es
mov
xchg
and
pop
test
pop
nop
sub
add
sahf
inc
iret
jle
sbb
mov
or
imull
sub
lret
cli
cwtl
lds
enter
cmp
out
inc
jae
rolb
nop
mov
cmp
arpl
out
push
push
clc
cmp
jb
dec
mov
and
mov
imul
test
mov
mov
sbb
popa
fcmovu
adc
test
js
imul
jno
add
int3
sbb
ret
test
repz
xor
jecxz
jl
mov
lret
or
sbb
ss
add
xchg
xor
or
outsl
cmp
cmp
jae
ret
lret
ljmp
pushf
mov
push
xchg
loopne
int3
int
jnp
shl
popf
pop
fcmovnu
sar
push
mov
mov
xchg
or
out
push
arpl
shrl
mov
cmp
fidivs
inc
fldenv
nop
or
popa
imull
mov
inc
push
sarb
dec
mov
sbb
mov
pop
sub
add
inc
mov
mov
xchg
int
rcrb
add
mov
sbb
mov
push
pushf
adc
sbb
sbb
xor
xchg
cmp
mov
xor
mov
les
push
push
push
sub
and
jne
jp
or
mov
outsl
pop
daa
shrl
fs
mov
out
adc
mov
mov
jmp
sbb
ja
jle
mov
mov
dec
dec
xchg
repnz
inc
dec
jg
xor
sbb
data16
xchg
mov
xchg
sbb
cmc
pop
xlat
rcrl
sub
mov
nop
push
ficompl
rcll
adcl
push
add
ja
or
ret
fidivl
jmp
push
int3
lcall
push
aad
inc
mov
out
jns
sar
mov
inc
mov
or
sub
js
ds
dec
sub
add
loop
loope
insl
mov
mov
imul
je
and
daa
push
jge
enter
pop
inc
mov
aaa
xor
push
cmpsl
sbb
xchg
sbb
rolb
push
jg
push
xor
nop
rdtsc
icebp
xchg
pop
aad
outsl
fcomp
add
into
mov
daa
in
out
lret
fwait
pop
push
test
jnp
sbb
mov
xchg
insb
mov
lock
das
shrl
xchg
shll
loop
cmpl
adc
and
loopne
sbb
xchg
dec
mov
pop
fsubl
aas
inc
enter
jle
ss
insb
popf
cmp
or
out
aad
jbe
jns
into
rcll
lret
cld
jp
inc
int
fcompl
or
inc
xor
andl
lods
jbe
push
add
add
lcall
xchg
pop
and
movsb
mov
stos
xor
sti
or
call
cli
out
mov
sbb
addr16
mov
mov
inc
cmp
inc
mov
cmp
sbb
push
dec
adc
mov
add
stos
leave
xchg
imul
dec
adc
lcall
mov
sbb
fs
jne
add
lds
lea
loop
sub
in
jbe
mov
and
mov
add
aaa
xchg
shl
dec
leave
je
ret
icebp
dec
dec
dec
int3
roll
pop
mov
repnz
pop
scas
dec
xchg
fisubl
out
neg
and
int3
mov
and
addb
push
xor
outsl
mov
dec
sahf
into
dec
ficoml
pop
cmp
scas
in
divl
addb
call
hlt
leave
loope
enter
stos
lods
cli
jne
gs
es
and
dec
nop
mov
cmp
xor
push
push
push
fdivr
push
data16
cmpsl
jno
ret
dec
call
xlat
fldenv
and
fists
push
iret
daa
push
adc
inc
ficompl
roll
pop
inc
les
test
scas
mov
lahf
jecxz
mov
iret
adc
daa
and
mov
adc
jns
sub
jmp
mov
or
inc
mov
or
stc
cmpsb
cwtl
fld
int3
aam
ss
gs
test
push
xchg
out
fs
jle
xchg
mov
insl
nop
pop
jecxz
cmp
cli
rorb
push
sbb
sub
adc
jmp
insb
push
adc
add
inc
cltd
int
loopne
mov
push
inc
mov
andl
lahf
sarl
add
dec
or
push
pop
jo
fs
lods
dec
sub
pop
ds
mov
and
sahf
ror
add
push
adc
mov
jge
fnstenv
and
pusha
cmpsb
jae
out
xchg
cmc
cwtl
inc
xchg
call
aam
xor
cmpsb
repz
dec
pop
cmp
jo
arpl
cs
es
pop
fucomip
jns
dec
aas
stos
sahf
mov
xchg
or
ja
mov
xchg
sub
push
xchg
xchg
xchg
and
pop
out
cmp
andl
int
in
inc
orl
pop
cmp
push
push
adc
mov
push
out
mov
xor
es
pop
jne
mov
jb
add
jecxz
fldl
out
push
lods
int
cmp
je
dec
add
dec
loop
or
jecxz
fildl
dec
mov
rorl
lods
les
xlat
out
jp
fiaddl
ret
scas
mov
jp
mov
mov
mov
or
pusha
ret
pushf
add
rclb
sub
rolb
test
dec
cmp
xor
arpl
jnp
pop
push
mov
sub
mov
ljmp
mov
ja
jb
sbb
mov
daa
cmpsl
ss
jle
jne
fisttpll
jns
fbld
cld
push
in
push
mov
fs
mov
outsb
fidivrl
push
std
inc
add
rclb
stos
adc
jg
inc
push
mov
mov
pop
pop
lahf
and
push
push
pop
sbb
mov
xchg
lcall
dec
outsl
test
sub
cld
adc
scas
mov
ljmp
out
ficompl
mov
mov
add
pop
aam
divl
sbb
lods
jmp
adcl
xchg
fisttpll
ficoms
aam
jno
dec
inc
test
mov
xchg
fnsave
mov
xchg
fisubs
cld
mov
lods
adc
loope
jge
adc
xor
popf
sub
imul
fs
xor
outsl
shrl
fs
dec
notb
and
mov
test
bound
jle
mov
sti
scas
out
ds
push
mov
sbb
popf
repz
add
aaa
fcompl
jmp
push
xchg
lret
mov
mulb
or
adc
fs
into
out
test
add
sub
pop
cltd
mov
lods
cli
mov
test
pop
add
das
lods
adcl
pop
inc
dec
lret
mov
push
rorb
mov
ljmp
ds
sbb
test
stos
push
fmull
addr16
inc
push
pop
pushf
loopne
xor
hlt
pusha
sbb
sbb
adc
add
out
aam
dec
test
dec
imul
pop
mov
mov
push
mov
mov
mov
out
xlat
popf
scas
ja
jl
adc
daa
mov
dec
mov
out
in
mov
scas
add
mov
flds
repnz
or
out
adc
jne,pt
dec
cmp
dec
lock
movsl
dec
push
int3
shll
dec
cmp
dec
inc
push
pop
sbb
jae
dec
popl
scas
fwait
xchg
dec
lods
sbb
mov
sarb
adc
lret
xchg
mov
ds
pop
pop
pop
fsts
sbb
data16
push
and
sub
in
add
adc
sbb
into
xchg
push
aas
cmp
pop
jo
std
clc
or
sbb
push
out
lcall
repz
xor
movsb
pop
jbe
mov
lea
push
mov
shlb
pop
dec
stc
idivb
filds
test
shll
movsl
cmp
test
movsb
dec
es
cmp
dec
pop
ja
jbe
repz
out
cmpsl
adc
mov
mov
and
add
clc
lds
sbb
mov
pop
std
fbstp
fnstenv
test
test
pop
cwtl
jno
nop
inc
jp
mov
and
dec
inc
inc
adc
sahf
daa
or
jecxz
xchg
or
enter
jge
sub
lret
cld
mov
enter
adc
push
jecxz
push
idiv
movsb
imul
jns
xchg
add
ljmp
test
lds
dec
mov
push
dec
add
pop
mov
test
xchg
fsts
adc
add
mov
nop
mov
fnstcw
dec
fmuls
mov
or
mov
addl
repnz
pop
dec
lods
cltd
xor
pushw
and
cmpps
pop
and
fstpt
add
or
push
jnp
int3
ficompl
pop
inc
dec
cmp
scas
fistl
mov
sub
pusha
test
jnp
subb
xor
push
or
cld
lods
inc
sbb
jbe
clc
dec
test
lcall
aam
and
cld
xchg
sub
aad
pop
fs
pop
mov
xchg
outsl
jae
pushf
data16
cs
xlat
xor
dec
mov
icebp
fisubrl
std
lods
jecxz
pusha
fcomp
adc
popa
xlat
loope
sbb
test
push
orb
pop
adc
out
jno
xchg
add
mov
cmpsl
xor
loopne
lret
dec
scas
mov
dec
cs
pop
inc
jnp
pop
pop
mov
std
push
jo
xor
inc
popa
add
adc
pop
adc
loope
sub
xchg
int
pop
dec
inc
das
sub
out
add
insb
adc
cmp
mov
jnp
out
cld
ret
lods
ljmp
xor
arpl
lock
stc
dec
mov
adc
dec
aas
int
add
sub
xchg
cmpsb
or
ret
push
push
sbb
fs
sbb
loope
xlat
or
stos
push
add
sahf
in
iret
pusha
insb
ss
je
xor
and
inc
lods
popa
cmp
insb
fidivrs
pop
sbb
and
pushf
ror
inc
inc
lds
pop
xchg
out
push
cmp
mov
lret
xchg
mov
cmpsl
push
xchg
sub
inc
jp
push
mov
sbb
inc
outsl
xchg
aam
je
xor
jne
inc
mov
loop
shl
xchg
int3
les
mov
rcl
jne
in
lock
nop
cmpsl
gs
out
jmp
iret
xchg
adc
addr16
add
fstl
roll
pop
icebp
mov
jne
stos
dec
mov
stc
or
int
int
adc
cli
sahf
sbb
mov
rorb
dec
mov
inc
movsl
dec
cli
push
arpl
ror
push
imul
add
outsb
mov
cli
mov
xchg
insb
or
mov
cmc
fcompl
xor
sbb
push
inc
add
out
inc
mov
std
arpl
stc
adc
mov
xlat
fcomps
ljmp
fists
lods
inc
mov
pusha
pushf
in
add
or
negb
cmp
or
jbe
mov
lock
repnz
sahf
jo
sbb
lahf
jmp
cmp
xlat
pop
movsl
mov
add
fucompp
imul
add
popa
push
sub
sbb
xlat
xor
and
cmp
popf
mov
jnp
xor
push
inc
push
jb
mov
fld
ljmp
xchg
or
icebp
cmp
lret
clc
insl
jl
mov
or
jp
pmuludq
loop
inc
push
mov
insl
loop
ret
loopne
xchg
ss
mov
xor
push
sarb
test
imul
rcrl
and
popa
adc
dec
dec
sbb
fwait
cltd
cmpsl
xchg
loop
flds
sub
inc
mov
mov
or
sbb
push
insb
stos
xchg
test
loop
insb
xchg
dec
mov
lahf
xor
outsl
arpl
xor
jge
xchg
xor
loopne
stos
mov
xchg
mov
stos
ds
sub
iret
push
mov
push
push
xlat
push
es
faddp
pop
jp
pushf
mov
pop
add
pop
out
jb
incb
sbb
out
mov
jno
cltd
pop
lea
fdivrl
iret
shrb
into
add
ljmp
jne,pt
adc
out
adc
or
and
icebp
lcall
jno
xor
cli
xchg
mov
pop
lret
push
sbb
adc
xor
and
je
negl
sub
inc
xchg
cmpsb
lret
out
adc
add
sbbb
mov
push
dec
out
xchg
repnz
xor
aaa
push
fistps
pop
out
adc
out
test
out
scas
aam
bswap
enter
xchg
outsb
pop
push
nop
in
outsl
inc
push
jle
lcall
daa
sahf
cli
movsl
jmp
pop
addr16
shll
jge
mov
mov
fldenv
jg
sub
rcrb
or
sbb
push
jle
aam
data16
push
daa
and
push
push
add
gs
mov
repnz
out
addr16
cwtl
sbb
cwtl
loope
mov
mov
fcoms
dec
lods
dec
mov
insl
cs
rorl
je
pop
push
inc
fistpl
adc
repnz
cmp
mov
sub
mov
cs
mov
aaa
mov
pop
push
push
sbb
adc
lahf
imulb
inc
and
outsb
mov
add
or
add
iret
rcrb
loope
shl
mov
cmp
shlb
mov
xor
fidivs
in
rcl
adcb
sub
scas
add
sbb
add
and
popa
data16
add
and
sbb
das
cmpsl
pop
sbb
jo
pop
inc
pop
and
insb
loop
in
mov
dec
jae
js
or
sub
cmp
mov
imul
ss
sub
mov
dec
lods
je
and
fdiv
iret
xchg
xchg
int3
xor
xlat
mov
mov
jnp
call
add
add
adc
aas
clc
mov
sbb
dec
jno
push
je
ja
jmp
test
mov
mov
cmpsl
dec
push
sbb
inc
or
lahf
inc
mov
scas
sahf
sbb
xchg
inc
cwtl
stos
sbb
jl
cld
adc
jmp
call
jmp
cmp
stc
and
data16
xchg
xor
lret
xor
push
adc
or
adc
push
dec
insb
outsb
sub
xchg
cmp
inc
pop
cld
mov
jae
mov
inc
imul
lcallw
and
mov
pop
int3
mov
ljmp
pop
mov
mov
test
outsl
xor
test
adc
lret
pop
add
push
push
mov
es
jmp
stc
out
sub
add
mov
frstor
xor
es
in
mov
mov
jmp
mov
push
inc
ret
int3
pop
enter
push
sbb
out
jbe
pop
jae
addr16
cli
push
cmpsb
cld
xor
xchg
or
fstps
inc
cmp
sahf
xor
test
pop
dec
mov
dec
pushf
jp
pop
or
vpor
adc
pop
pop
popa
xor
js
cmp
stos
aam
aaa
sbb
adcb
inc
loop
lods
scas
mov
arpl
out
pop
mov
cmp
sti
add
cmp
mov
mov
cmpsb
adc
xlat
push
mov
xor
jmp
jg
jnp
es
jnp
sarb
sbb
push
movsb
lret
or
xchg
sub
dec
sahf
fmull
add
lea
sbb
test
push
add
push
push
pop
add
mov
sbb
sbb
add
int
or
lahf
test
mov
enter
and
mov
aaa
loop
clc
int3
pop
jge
scas
dec
imul
jmp
jno
dec
rolb
pop
jns
imul
add
in
add
pop
jg
xchg
popf
outsl
fiadds
push
out
push
pop
ds
dec
sahf
scas
leave
out
jge
add
mov
push
lcall
out
push
roll
imul
mov
inc
arpl
inc
insl
out
lcall
pop
lea
xchg
hlt
cmpb
lea
mov
je
cmpsb
push
mov
out
lock
sti
in
insb
xor
dec
and
pop
sti
jmp
movsl
lock
xchg
sub
sbb
neg
or
decb
push
and
xchg
add
outsl
dec
dec
mov
ljmp
scas
shlb
cmp
je
in
pushl
and
mov
into
fcmove
int3
stos
mov
jno
add
and
add
mov
cs
pop
push
roll
idivb
loopne
ret
xor
inc
adc
outsb
fldl
jg
movsb
or
cmp
dec
sahf
scas
xor
mov
xchg
pusha
rorb
cli
movsb
fildll
addr16
call
fstpl
outsb
mov
in
mov
sbb
jno
int3
fucom
pop
test
test
imul
pop
ficomps
cmc
sbbl
in
mov
dec
pop
lcall
inc
out
lock
lock
push
pop
dec
lahf
mov
out
jb
cmpsb
je
dec
xor
pushl
sub
lock
cmpsl
pushl
incb
es
jno
dec
mov
pop
cmpl
mov
push
insl
or
mov
ret
shrb
js
fscale
jb
loopne
cmp
jl
rolb
shrl
push
rcrl
movsl
push
ret
jl
lds
add
cld
cmp
jle
mov
sub
in
cmp
popf
movsl
lcall
movsl
jg
xchg
cwtl
call
lcall
push
push
negb
stc
adc
dec
jmp
jne
aad
ret
or
sub
fs
imul
out
sarl
enter
orb
sbb
inc
cld
mov
jno
xchg
mov
inc
add
jo
lock
pop
pop
dec
lahf
cwtl
push
jb
dec
fmull
repz
sub
icebp
mov
aas
jle
cmpsb
addl
mov
std
rorl
sbb
lret
jns
and
push
dec
punpckldq
sbb
mov
dec
and
sarb
sbb
out
add
int3
inc
out
mov
dec
push
int3
or
stos
sbb
push
adc
imul
test
mov
mov
cmc
mov
fadds
in
push
sbb
sti
jecxz
rolb
jmp
or
xchg
cwtl
mov
add
push
mov
push
addr16
arpl
cwtl
push
or
cmc
aas
fcmovnu
push
out
jb
sub
cltd
lret
fsub
push
add
fistps
dec
adc
cmp
add
in
cmp
pop
sub
mov
cmpsb
je
aaa
lret
add
je
xchg
dec
mov
inc
stos
or
ljmp
xor
cmp
adc
lods
sub
add
xor
js
stos
ret
add
aas
cmp
sbb
test
add
xchg
and
xor
cmp
fidivrl
xor
ficoms
arpl
mov
sbb
lds
push
sbb
rcrb
gs
mov
loopne
sahf
jmp
sti
add
orl
movsl
xchg
scas
sbb
daa
imul
out
femms
cmp
push
dec
lret
inc
test
idivl
sub
inc
inc
ret
repz
bound
orl
jecxz
dec
hlt
aam
mov
aaa
mov
fldenv
or
scas
or
stos
inc
lcall
mov
rorb
mov
dec
dec
xor
jmp
cmp
imul
cmp
push
insb
cmpsb
fsubrs
mov
push
and
xchg
test
cmp
jl
out
push
pop
inc
adc
lret
lock
call
mov
jl
insl
imul
cmp
cmp
aam
inc
out
adc
popa
dec
or
sub
dec
xor
mov
add
ss
push
jno
lahf
jmp
inc
lods
rclb
hlt
xor
push
and
or
popf
out
sbb
mov
jg
add
call
dec
sbb
pop
pop
cmp
adc
ljmp
xchg
movsb
jp
sbb
hlt
clc
andb
push
push
cmp
cmpsb
shrb
sub
lods
adc
shl
xchg
or
push
icebp
loop
cli
xor
scas
out
xor
push
xor
lds
stos
push
scas
sbb
lock
ds
cmp
inc
inc
mov
mov
mov
lock
ret
sti
cmp
popa
insl
sub
out
add
push
jno
daa
jo
push
or
stos
xorl
mov
sbb
ss
dec
lock
sub
adc
fwait
scas
xor
pop
jp
rcll
sub
dec
test
mov
fcomi
mov
pushf
cmp
cmpl
loope,pn
cmp
pop
loop
mov
add
adc
pop
leave
pop
mov
inc
pop
lock
push
sub
inc
and
fdivr
outsl
clc
lret
jmp
sahf
dec
cmp
fsubs
lahf
add
pop
xchg
pop
mov
jecxz
push
sti
repz
xorl
sub
cli
xor
push
add
add
pop
lahf
je
lcall
movsl
push
pusha
dec
les
mov
mov
std
into
jbe
push
cmpsl
sbb
cmp
dec
mov
imul
rclb
pop
sub
sub
and
xor
jecxz
cmp
cmc
je
adc
sbb
popf
bound
lods
fstpt
pop
sub
pusha
cmp
bound
adc
cmp
sub
inc
xchg
inc
std
dec
sub
and
mov
inc
ret
dec
inc
and
xor
add
fwait
loope
nop
int
fbstp
cwtl
scas
jge
push
jecxz
outsl
add
xchg
and
adc
cmp
bnd
shll
xor
pop
push
dec
push
ja
pop
cli
cmp
push
into
sub
icebp
mov
sub
mov
shlb
test
cld
push
push
dec
sub
test
vmwrite
mov
pop
mov
push
xor
loop
add
sbb
inc
cld
addr16
xor
add
loope
fstps
ret
scas
ss
sub
ds
adc
xor
pop
inc
inc
push
sub
mov
mov
xchg
daa
pop
cmpsl
sub
fisttps
dec
out
sub
sub
stos
fstpl
xchg
and
sub
in
xchg
fimuls
sub
sahf
js
stos
or
pop
sbb
aad
inc
icebp
inc
sbb
xlat
dec
cmp
pop
jl
aad
in
frstor
mov
add
fadds
jb
movsb
mov
pop
insb
sahf
testl
aad
pop
inc
sbb
loopne
or
lods
sti
inc
hlt
fs
sti
lret
lds
jae
push
subl
xchg
mov
addr16
pushw
push
std
mov
and
inc
pop
stos
xchg
sub
out
jge
fdivp
cltd
mov
jge
add
in
fnstenv
das
mov
or
push
lret
cmp
lret
jecxz
jecxz
jae
iret
sbb
sbb
arpl
outsl
adc
lret
dec
cmpsl
add
cs
jns
pop
pop
sub
sub
pop
cmp
mov
inc
js
es
mov
adc
push
out
popa
mov
cmpsl
loopne
xor
xor
push
pushf
dec
inc
pop
stos
and
idivl
leave
mov
std
andl
insl
into
sbb
xor
pop
or
or
movsb
mov
jb
lods
shrl
push
lock
loop
cmp
inc
pushf
pop
jmp
fdivs
insb
test
xor
xchg
shl
stc
ja
clc
roll
sub
aad
jge
pop
fadds
inc
push
jl
clc
xchg
enter
jae
jnp
daa
xor
adc
mov
xchg
jnp
dec
add
jmp
push
test
xchg
sti
xor
ret
push
add
mov
jae
les
adc
cmpsl
je
jae
popf
into
hlt
xchg
inc
ret
nop
jmp
sahf
mov
jp
movsl
loope
sbb
divb
mov
dec
xor
scas
out
inc
nop
add
jnp
push
xchg
aad
out
mov
insl
iret
fidivrl
out
fstpt
cld
push
loopne
mov
dec
add
add
clc
mov
sub
loope
cmp
aam
xor
arpl
cltd
outsb
aas
jno
dec
aam
sbb
in
rorl
loope
arpl
lock
into
or
fisubl
add
inc
jecxz
imul
adc
sbb
aad
int
vcvttps2dq
xchg
jbe
rol
lahf
test
adc
testl
pop
pop
sysret
inc
cmp
lahf
and
stos
ret
cltd
js
adc
xchg
mov
jmp
mov
loop
ret
sub
sbb
lret
push
mov
mov
stc
xchg
sub
pop
adc
nop
pop
jae
inc
lock
push
hlt
in
pop
cltd
xchg
ljmp
and
cli
lahf
mov
loop
jno
dec
lds
pop
mov
and
cmp
das
xor
and
jp
sbb
in
mov
sar
loop
insl
adc
jbe
in
xchg
cmp
aaa
push
out
xor
rcl
roll
mov
cs
xlat
call
sbb
decl
sub
clc
mov
ret
ss
jecxz
pop
loopne
decb
push
ss
pop
ret
dec
cmpsl
jns
inc
jns
into
mov
inc
xchg
cli
xor
xchg
xor
mov
sbb
jecxz
mov
cld
jmp
into
mov
inc
notb
adc
imul
adc
or
xlat
jl
das
std
pushf
lcall
adcb
jo
push
push
in
xchg
les
cmpl
adc
inc
mov
push
push
sub
cmp
pusha
mov
loopne
lods
int
cmp
jg
sarb
mov
mov
dec
pop
ss
fildll
in
dec
pop
cmpsl
xor
and
cmp
fwait
insb
test
dec
lcall
andb
mov
jae
lods
xor
movl
push
add
xchg
out
xor
mov
mov
add
std
push
push
jo
xchg
jo
jne
gs
pop
mov
jnp
jecxz
int3
jb
ror
iret
ds
pcmpgtb
stos
lods
je
imul
popf
lods
pop
lds
mov
mov
lret
out
or
inc
fldenv
dec
aad
in
cmc
fidivs
mov
sahf
cmpsb
js
cmp
mov
insb
sub
cmp
push
cwtl
mov
vpaddsb
or
cs
jecxz
sarl
imul
lcall
test
xor
adc
daa
mov
pop
arpl
movsb
int
jg
nop
adc
cmpsl
xor
jle
push
or
jecxz
mov
insb
push
lds
mov
push
mov
cmp
loope
mov
mov
xlat
insb
cmp
ss
pusha
mov
pop
movsl
subl
or
fcoms
mov
xchg
insb
repz
out
out
cld
jns
lret
daa
sub
out
daa
and
jae
cmc
jo
pushw
leave
xor
pop
ja
dec
mov
xor
sbb
hlt
pop
insl
dec
std
push
lahf
cmp
shll
imul
add
lcall
dec
js
outsb
inc
mov
adcb
or
dec
inc
push
xor
mov
jecxz
xor
out
xchg
out
sbb
sub
or
sub
mov
xchg
push
lcall
lahf
ret
pop
fcoml
push
cltd
cmp
scas
dec
daa
arpl
rolb
pop
lret
enter
fsubl
jno
mov
jb
push
mov
int3
sbb
aaa
inc
dec
push
sub
sbb
daa
pop
inc
mov
pop
idiv
test
dec
dec
popf
jno
pushf
mov
test
mov
mov
mov
fwait
int3
dec
roll
scas
in
xchg
xchg
jl
ficoms
cmp
ret
cmp
adc
in
adc
stos
mov
fsubrp
sub
imul
fmull
jnp
je
jp
inc
in
jmp
inc
ss
push
inc
dec
and
and
mov
enter
mov
adc
jge
inc
in
adc
mov
sub
sub
pushf
cltd
xor
scas
test
int3
mov
iret
push
pop
ljmp
daa
sbb
pop
lcall
xchg
pop
popa
outsl
cmp
fldenv
pop
filds
in
push
ljmp
in
aam
and
nop
mov
bound
or
xor
aaa
sub
dec
xchg
dec
stos
mov
mov
bound
mov
bound
push
out
lea
jbe
mov
cltd
xchg
jmp
adc
out
push
andl
add
cmpsb
xchg
push
out
lea
test
or
mov
hlt
and
hlt
push
inc
dec
cs
dec
push
add
dec
fidivrl
dec
inc
add
add
aaa
xchg
test
adc
and
or
arpl
cmp
mov
clc
dec
loop
rcrl
adcl
in
xchg
sub
xchg
popa
pushf
xchg
cmp
cmc
mov
inc
pop
xor
jno
fisubrs
add
mov
in
aas
test
lahf
or
ds
adc
out
pushw
clc
mov
imul
pushf
lods
inc
push
mov
and
sahf
out
or
adc
add
mov
xchg
sub
push
addl
xlat
insb
test
mov
mov
sub
ja
repnz
push
imul
mov
mov
int
icebp
sbb
call
outsl
or
and
add
dec
mov
aad
int
inc
inc
or
xor
lock
and
mov
scas
mov
xor
add
jl
subl
out
cwtl
scas
or
xchg
and
enter
dec
mov
iret
push
mov
clc
cmp
xlat
out
mov
orb
cmp
mov
xchg
jmp
call
rcl
sub
add
repnz
lret
mov
call
ds
pop
fdivr
jne
enter
insl
push
cmp
sbb
scas
out
movsb
xchg
mov
hlt
fisubs
imul
ljmp
repnz
lcall
movsl
int3
stos
mov
jp
notl
addr16
cmpxchg
pushf
push
pop
nop
dec
movsl
push
jge
push
cli
loop
loop
mov
icebp
fisubrl
mov
pushf
les
xchg
js
cwtl
xchg
xchg
in
xchg
into
shr
mull
lahf
pop
movsl
add
insb
out
out
push
jae
pop
sbb
lods
in
pop
rorb
pop
lods
int
xor
jp
mov
xchg
push
and
in
movsb
push
in
pop
sahf
loopne
xchg
and
ss
test
ret
or
mov
js
ja
out
mov
fisubl
addl
add
dec
ja,pn
fs
pop
adc
icebp
cltd
push
dec
mov
call
lret
arpl
inc
pop
js
push
sbb
out
mov
icebp
mov
aaa
loopne
lea
cmp
shl
cmp
sub
les
popf
or
ror
dec
addr16
and
pushl
jl
or
mov
mov
adc
add
call
sub
das
call
ljmp
es
into
dec
pop
fsubrs
dec
mov
enter
push
out
push
mov
mov
fs
dec
or
and
xor
mov
outsl
movsl
mov
sub
and
stos
mov
pop
xchg
jp
xchg
sarb
movsl
sub
ret
aam
jnp
sub
mov
add
jg
add
cmp
stc
outsl
stos
test
dec
ret
aam
xlat
mov
arpl
mov
das
popf
roll
inc
sub
xchg
mov
lock
jg
cmp
sbb
mov
lret
ss
addr16
in
nop
pusha
loope
fnstsw
dec
fstpt
mov
cmpsl
adc
int
sub
in
dec
xor
lret
mov
push
out
mov
pop
je
out
stos
and
add
mov
inc
mov
xchg
ret
inc
mov
mov
inc
xchg
call
je
rorl
mov
int
mov
inc
bound
ljmp
adc
mov
fisttps
out
out
jb
mov
dec
jecxz
sarl
fcoml
popa
iret
lret
jle
das
into
xor
jp
and
mov
mov
adc
test
aam
loopne
shlb
out
sbb
mov
or
cwtl
mov
data16
aam
push
inc
or
push
test
xor
and
cmp
nop
insl
dec
cmp
mov
les
out
push
add
pop
xchg
push
call
sub
pop
dec
cld
cld
push
mov
mov
enter
mov
stos
lds
test
pushf
pusha
scas
fiaddl
mov
lods
mov
in
adc
add
and
add
inc
aas
pop
insl
jb
xchg
and
jb
sbb
inc
rcrb
int3
ss
sbb
daa
in
jecxz
je
pop
fwait
cwtl
in
or
movsb
shl
cmp
push
xchg
shl
adcb
ss
pop
sbb
in
loopne
dec
add
ret
daa
in
loope
or
mov
aam
xor
mov
pop
popf
fcoml
mov
scas
mov
mov
jae
shr
mov
outsl
adc
jo,pt
loopne
xchg
das
enter
orb
push
loope
inc
mov
mov
sbb
jno
stos
mov
jno
jle
fcmovnu
lea
sbb
ds
push
adc
shll
jns
clc
pop
sbb
outsl
mov
loope
jle
mov
jge
addr16
pusha
push
jbe
mov
fwait
cli
fldl
test
mov
out
and
pop
push
fsub
pop
or
sbb
pop
outsb
cli
data16
xchg
and
bound
mov
sub
movsb
jecxz
and
in
pop
pop
xchg
lods
aas
jp
jecxz
testb
mov
stos
lods
xchg
xor
mov
cld
fst
int3
sbb
fisubrs
ficoms
xor
fst
cmp
mov
lods
xor
and
mov
lea
push
and
lcall
inc
mov
xor
jmp
push
or
mov
push
push
and
loop
dec
pushf
fiaddl
movsb
frstor
sbb
push
jbe
mov
mov
fimull
enter
push
fidivrs
sbb
xor
faddl
pusha
mov
jecxz
lcall
cmp
add
push
inc
pushf
or
fidivs
scas
jmp
push
cwtl
fiaddl
pop
and
mov
xchg
inc
mov
movsb
imul
imul
je
stos
out
inc
sbb
inc
into
popf
out
out
aad
popa
push
xchg
shl
ss
dec
cwtl
aad
xor
xchg
ljmp
xchg
inc
jecxz
ds
mov
test
dec
xor
mov
sbb
cmp
mov
lods
adc
and
or
and
arpl
enter
pop
fsubs
mov
outsb
push
sbb
pusha
into
or
loopne
sbb
aam
dec
out
out
cmpsl
push
xchg
mov
je
xor
jbe
jl
mov
ror
enter
push
sub
mov
mov
xchg
ljmp
xchg
aam
xor
sbb
add
mov
dec
in
xor
lret
ret
or
mov
mov
xor
stc
sub
out
add
and
jae
stos
push
jno
das
js
cli
xor
pop
add
movsb
or
sub
hlt
repz
fs
pusha
mov
test
mov
adc
sub
xchg
pop
outsb
cmp
and
icebp
pusha
mov
stos
mov
movsb
test
into
push
cli
orl
mov
jecxz
push
jns
dec
lret
enter
xchg
fdivr
add
sbb
and
pop
fisubs
gs
ret
and
ret
push
mov
in
and
push
jnp
sub
movsl
aaa
out
sub
rcl
jp
std
leave
pop
int3
stos
mov
cmpsb
incb
cmp
dec
ss
out
or
adc
stos
ja
jecxz
mov
std
fs
popa
popf
xchg
decb
dec
push
sbb
mov
lret
popf
pop
jge
mov
xchg
loope
fnstcw
xchg
mov
inc
inc
dec
xor
mov
cmc
imul
cs
pop
add
movsl
lcall
xlat
stc
sahf
sub
adc
push
iret
repz
push
pop
xchg
in
out
adc
repnz
sbb
icebp
call
clc
and
cld
cmp
push
das
jns
pop
rol
rorb
mov
lea
loopne
add
push
jne
shlb
ss
sbb
jmp
add
adc
xchg
aam
mov
jno
sbb
fwait
or
dec
dec
shr
pop
or
add
int
and
in
test
add
xlat
xor
pop
loop
or
mov
sub
pop
and
mov
sar
cmp
add
repz
sbb
pop
jle
adc
xlat
test
les
adc
push
dec
enter
dec
push
outsl
in
mov
sbb
int3
fistpl
sti
data16
sti
lcall
jge
and
lcall
add
lock
popf
cli
iret
cmpsl
xor
xor
cmpsb
dec
mov
adc
pop
push
jl
mov
mov
outsb
dec
minps
pop
dec
sahf
pop
out
push
mov
aad
jno
pushf
cld
loope
mov
lcall
pop
scas
pop
cmp
nopl
pop
xchg
lret
and
pop
lea
popa
cltd
scas
mov
jge
ja
mov
pop
stc
push
mov
sub
adc
add
jmp
or
gs
mov
addr16
mov
cld
sbb
ljmp
push
pop
add
or
inc
clc
jge
es
sub
pop
nop
inc
cltd
shl
bound
cwtl
icebp
push
sbb
test
les
ffreep
sbb
fsubrp
ret
and
jp
push
inc
dec
fldenv
mov
fwait
inc
movsb
or
pop
adc
in
mov
sbb
lret
mov
pop
jg
or
mov
mov
and
rep
dec
jns
repnz
loopne
xlat
dec
xchg
xchg
addr16
lret
cld
inc
or
aaa
jne
sbb
dec
sahf
dec
repz
push
xchg
cmp
aam
xor
inc
or
xor
insl
sub
mov
insl
pop
and
mov
adc
loop
xchg
sbb
push
rcrb
mov
daa
fst
cld
and
cmp
xchg
or
xor
xor
xor
mov
popf
mov
outsb
pop
push
ss
mov
push
clc
push
jmp
cltd
pop
divb
fistpl
pop
and
icebp
scas
dec
cltd
adc
add
mov
ss
bound
cmpsl
shr
or
jmp
popa
push
imul
das
jecxz
jl
push
fadds
rorb
xchg
in
cltd
adc
testb
dec
push
jo
cli
mov
jp
js
push
adc
mov
mov
int3
outsl
mov
lcall
jae
ss
in
dec
pop
sar
push
cmp
ret
insb
dec
pushf
mov
test
xlat
pop
adc
mov
or
or
rcrb
push
pushf
cmp
lahf
shl
pop
mov
loope
xor
push
push
inc
xchg
fsubl
and
andl
or
pusha
stos
cmp
xor
scas
adc
and
add
iret
pop
jge
pusha
out
mov
jae
xchg
add
out
pop
add
jnp
push
aas
xor
out
lods
insb
inc
push
sbb
loop
pop
add
mov
pop
sbb
push
fstl
mov
push
daa
sbb
aas
stos
hlt
push
aas
arpl
mov
movsb
les
cmp
cmp
cmp
and
cmp
fwait
sbb
movsl
ja
testb
es
adc
shll
int
shlb
dec
pop
mov
cwtl
ds
clc
jge
mov
jl
dec
sub
pop
in
sub
jge
cld
xorl
shll
shlb
cmp
sbb
daa
out
jle
lds
pop
xchg
test
jno
push
push
mov
testb
jge
ss
and
aam
cmp
clc
out
and
sbbl
scas
ror
es
sbbl
xchg
push
push
adc
jl
cltd
push
mov
mov
xchg
lds
mov
pop
cmp
loopew
pop
mov
imulb
pop
mov
pop
aad
xchg
sahf
repnz
xchg
imul
adc
iret
gs
cmp
cmc
mov
pushf
out
mov
cmp
push
or
es
sub
arpl
jo
adc
loop
mov
xchg
cmpsl
movsb
in
leave
push
stos
inc
dec
dec
in
and
test
ret
dec
sub
pop
rcll
stc
mov
es
add
movsl
sub
mov
xor
cs
inc
xchg
das
cmp
and
bound
mov
gs
sub
xchg
sahf
mov
mov
aad
fs
dec
push
jnp
lods
pushf
arpl
xor
mov
push
scas
xlat
lret
and
cmpsl
adc
jge
in
push
pop
mov
adc
cli
stc
xor
jno
or
and
int
adc
inc
jge
and
mov
and
xchg
enter
adc
mov
mov
outsl
jp
adcl
js
fst
clc
pop
inc
fnstcw
pop
scas
aam
mul
jb
pop
arpl
gs
cmp
hlt
push
mov
movsb
arpl
xchg
push
add
dec
adc
mov
mov
js
nop
pop
pop
lock
and
in
iret
fstpl
or
insb
xchg
adc
das
sahf
andb
xchg
dec
or
ret
movsb
pusha
lret
jno
lahf
scas
loope
psubsw
xchg
sub
call
ret
imul
data16
xor
cmpsb
pop
popa
jg
jmp
dec
movsl
push
shl
push
mov
ret
aaa
cmp
mov
cmp
sbb
sbb
popf
out
mov
out
movsb
xor
mov
addl
sub
pop
xchg
jo
movsb
fwait
into
divl
pop
mov
test
fists
mov
shll
xchg
add
xchg
push
test
sbb
xor
fidivs
mov
xchg
cmc
mov
jnp
cmc
imul
dec
dec
sub
aaa
sub
jmp
in
js
lcall
sbb
xor
and
xchg
jle
and
pop
add
sbb
push
stos
testb
fisubrl
dec
nop
cmpsb
fistpl
shll
xchg
add
pop
mov
push
xor
in
mov
xor
je
cmpl
sbb
cwtl
outsb
mov
xor
pop
loope
cmp
sub
push
fisubrs
mov
insb
dec
mov
mov
jns
pop
sarb
stos
cmc
jp
xor
jle
aaa
push
lods
dec
fs
orl
jp
adc
lock
xchg
pusha
movsb
xor
jno
pop
pop
arpl
cmc
pop
cmp
inc
sti
js
mov
test
jl
sbb
test
shll
mov
out
sub
jae
jae
pushf
movsb
cltd
inc
dec
push
ficomps
sub
cltd
mov
pop
add
xor
lds
mov
outsl
addl
pop
arpl
mov
scas
sub
fcoms
nop
cli
scas
loope
push
adc
xor
flds
or
pop
pop
add
in
aad
cmp
push
jo
int
push
add
les
inc
cld
and
loopne
and
repnz
bound
cmpsb
sub
cmp
data16
aam
ljmp
loope
std
push
arpl
stc
mov
out
and
mov
sti
or
mov
gs
stos
jecxz
xchg
data16
mov
push
jecxz
popa
adc
cmc
in
imul
jl
lcall
xor
std
push
lret
add
test
imul
push
mov
or
and
cmc
cmp
add
adc
int
repnz
jmp
dec
push
mov
pop
ljmp
stos
or
jnp
jl
jp
test
cmp
mov
and
mov
outsb
movsl
std
sub
outsl
push
sub
cmp
jo
fucompp
leave
test
sbb
fistpl
lock
xor
pop
push
stc
rcrb
add
inc
pop
push
scas
test
adc
cld
repnz
mov
xor
mov
mov
adc
sub
loope
sub
popa
inc
test
inc
pusha
pusha
sbb
jns
push
mov
and
nop
cmpsb
retw
jge
cli
or
pop
sub
lcall
mov
sub
je
add
xchg
adc
jae
lea
daa
ss
fidivs
xor
inc
push
ret
pop
out
int
ljmp
rcrl
test
sti
dec
int3
sbb
ret
dec
in
dec
shrb
stos
das
jp
dec
lret
lret
inc
xlat
mov
push
push
cs
nop
loopne,pn
sub
mov
lods
call
lods
cs
fdivl
movsb
push
xchg
in
lods
loope
loopne
loope
push
outsb
leave
outsb
arpl
push
enter
push
push
inc
lret
ret
jbe
xchg
jo
push
push
xchg
jae
addr16
arpl
push
aad
mov
push
xchg
dec
sub
aad
in
jmp
mov
pop
out
bound
inc
and
mov
sbb
jno
or
sarl
stc
ja
lcall
fsubs
sub
outsb
sbb
add
pop
leave
aas
aaa
add
mull
xor
pop
sahf
pop
dec
mov
cmp
jge
test
xchg
push
lds
and
outsb
xchg
ljmp
ret
jecxz
outsb
mov
sti
addl
sbb
jp
pop
mov
adcb
or
fmuls
xlat
add
mov
cmpl
outsb
xor
and
jp
bswap
xor
sbb
daa
and
cli
dec
fstl
push
popa
push
mov
and
and
xchg
sbb
mov
push
pop
xor
je
mov
or
flds
mov
cli
rcrb
lea
ret
cli
outsl
xor
xchg
roll
insb
jno
push
fadds
std
jl
sub
int3
repnz
in
fwait
jns
pop
pop
pop
add
loope
push
xchg
mov
jge
fs
sbbb
xchg
add
add
sahf
leave
mov
les
xor
lcall
jl
add
xor
xchg
push
xchg
cmpb
inc
inc
mov
rcll
nop
xchg
fcoms
mov
mov
sub
lret
cmp
dec
std
and
scas
and
add
dec
and
nop
xchg
cmpsl
or
add
insl
hlt
lcall
fidivrs
rep
adcl
lods
and
aas
scas
push
push
cmp
push
icebp
ja
dec
imul
lret
das
xchg
mov
repnz
clc
or
filds
and
or
pop
or
enter
dec
data16
and
xor
test
shrb
cmpsl
and
and
mov
pop
stos
lods
jns
data16
xchg
or
inc
cmpsl
outsl
cmc
pushf
mov
pop
xchg
jne
ss
sbb
add
add
icebp
or
out
mov
add
andl
jge
jle
adc
xor
out
sbb
testb
divb
mov
push
xchg
xor
jecxz
jg
rcrb
mov
lock
sub
js
std
push
enter
cltd
cmp
lods
mov
xchg
jg
test
ds
pop
jge
repnz
pop
pushf
les
mov
xchg
mov
stc
inc
cmp
ss
ss
aad
cmp
cwtl
lods
xchg
aas
pop
lds
jae
shll
bound
cmp
sahf
aaa
loope
dec
adc
add
xchg
dec
xchg
lcall
mov
rcl
mov
ljmp
into
loopne
mov
pop
or
stc
push
dec
jo
cli
jns
mov
push
jae,pn
mov
pop
push
and
push
pushf
mov
xor
in
das
xchg
std
popf
cmpsl
repz
mov
ljmp
bound
pop
mov
push
dec
fsubrs
cmp
mov
imul
and
movsw
outsb
inc
sbb
or
add
sahf
lret
push
xchg
popa
xor
jno
mov
out
cs
rolb
push
xchg
cmpsl
add
dec
sub
jno
cs
or
into
andb
insb
int
adcb
inc
and
std
inc
dec
movsl
cmp
inc
cmp
call
or
sub
fisttpl
mov
mov
sub
dec
push
sahf
jns
movsb
call
ds
cs
jae
imul
cli
fisubrl
mov
jno
lret
mov
jae
rolb
sbb
dec
mov
mov
int
ljmp
add
imul
rcrb
add
jecxz
arpl
jmp
xor
and
sub
aaa
pop
repz
popf
mov
jo
jle
mov
pop
ficomps
xchg
rcr
scas
out
cmpps
mov
enter
inc
adc
push
pop
mov
xchg
sub
sub
js
enter
jne
cwtl
call
lods
sbb
or
adc
pushf
dec
nop
push
imul
or
sbb
scas
mov
cmp
mov
test
xchg
push
ret
xchg
fistpll
ret
sbb
cmp
mov
sub
rcll
mov
sub
and
testl
cli
push
imul
into
adcl
test
in
imul
mov
xor
mov
cld
test
jecxz
cwtl
push
add
fisttpll
enter
ret
imul
mov
push
push
push
pop
movsl
insb
loopne
pop
and
clc
jg
outsl
mov
ljmp
ljmp
adc
mov
inc
or
add
or
pop
testl
fimuls
adcb
sahf
xor
mov
fldt
sbb
mov
jg
dec
daa
aaa
fwait
out
stos
jg
subb
push
setnp
jp
xor
sub
mov
mov
fdivrl
insb
inc
adc
dec
gs
roll
aaa
cmp
jmp
les
or
xchg
xchg
call
adc
mov
jo
pop
jp
pushf
mov
adc
mov
cmpsb
pop
hlt
movsl
sub
inc
and
das
sub
enter
sarl
pop
xchg
jo
cld
rcll
add
dec
or
push
aaa
xchg
ret
xchg
clc
cmc
sbbb
pushf
ds
xor
jno
and
pusha
sbb
lret
in
jae
pop
lret
test
sub
call
add
adc
adc
cs
xor
inc
repz
test
aad
mov
ffree
ret
pop
mov
add
clc
mov
rclb
or
xor
inc
mov
test
dec
adc
icebp
jmp
daa
and
mov
fdivrl
aas
mov
jmp
pop
sub
sarb
push
out
push
adc
jb
pop
mov
popa
ret
das
test
in
std
pop
jnp
pushf
test
xor
cmpsl
inc
and
enter
test
data16
aad
mov
insl
mov
xor
or
push
dec
out
push
add
cs
mov
inc
xor
cmp
push
push
mov
dec
sahf
cmp
mov
sub
jnp
iret
or
aaa
jmp
repnz
rorb
cmp
mov
insb
mov
adc
jmp
pop
xor
out
xor
in
mov
lock
xor
mov
push
int3
jbe
leave
clc
fsub
inc
cmpsl
pusha
repnz
scas
sub
mov
mov
fdivrl
insb
scas
push
test
sub
xor
scas
out
jmp
enter
adc
ret
lahf
mov
cmp
push
out
gs
mov
sbb
cmp
cld
mov
je
or
mov
mov
das
cmp
gs
dec
add
jle
repnz
add
ds
call
ja
mov
aas
cmc
shll
jno
subb
outsb
sub
repz
xchg
into
sub
icebp
scas
pop
stc
dec
jge
mov
cmp
cmp
and
imul
mov
mov
xchg
jae
lahf
inc
add
movsl
imul
add
int
in
std
mov
imul
leave
adc
xchg
outsb
adc
in
test
fcoms
fisttpll
scas
lods
add
dec
shlb
dec
sahf
pop
scas
data16
testl
lret
ds
xchg
mov
pop
aad
test
subb
jns
lods
push
sbbb
add
adc
icebp
dec
mov
xorl
jmp
es
xor
in
rcrb
xor
inc
in
add
arpl
adc
xchg
jnp
adc
addb
pushf
into
mov
jae
cmp
das
lret
jb
xor
or
cmp
outsl
jb
push
mov
cmc
lods
addr16
fsub
xor
test
fisubl
push
and
fimull
and
jno
and
inc
sbb
mov
push
pop
mov
out
cmp
int3
lea
mov
adcl
xchg
notb
test
pop
adcl
pop
adc
ljmp
aaa
insb
scas
push
out
jo
outsb
mov
mov
jp
and
add
aad
inc
ds
xchg
mov
aaa
outsl
mov
dec
ret
subl
aaa
jecxz
dec
sbbl
rorb
sbb
repnz
xor
add
in
hlt
mov
mov
inc
fsubs
sub
ret
std
js
fdiv
dec
jmp
fsubl
add
outsl
lcall
xchg
mov
lds
mov
test
jae
xor
outsb
adcl
cmp
pushf
loope
into
das
bound
xor
cmp
jmp
test
je
stos
xchg
subb
icebp
cmp
sbb
jmp
std
inc
imul
cmp
and
sbb
fwait
mov
ljmp
add
repz
sub
stos
aam
push
jns
out
pop
movsb
xor
ficoms
test
jns
mov
outsl
lods
scas
push
or
mov
push
andb
sub
stos
pop
imul
je
sbb
xorl
pop
out
arpl
sahf
insb
loopne
mov
into
cmpsl
mov
or
insb
fs
jecxz
mov
mov
jle
cs
push
lea
and
and
iret
popf
sti
mov
pop
call
inc
push
fs
jb
ljmp
xchg
add
mov
add
fsubs
mov
shrb
hlt
arpl
les
popa
outsb
std
xor
xchg
negb
dec
dec
pop
mov
mov
pop
fdivl
insl
cmp
addr16
xchg
mov
pop
insl
and
jp
outsl
push
in
js
in
mov
dec
inc
scas
xlat
mov
data16
fs
sub
mov
cs
js
xchg
xchg
xchg
push
add
mov
shll
or
movsl
push
cltd
popa
lods
int3
mov
outsl
cmp
xor
loope
ror
pop
sbb
mov
in
push
mov
pop
jbe
cmpsb
inc
test
and
inc
lds
mov
cmp
cmp
xor
aad
or
lods
test
inc
mov
ss
and
dec
jl
mov
mov
push
xchg
imul
arpl
push
ficoms
call
insb
out
fcompl
mov
pushf
test
push
daa
mov
jge
push
jne
adc
sub
outsb
fcoml
inc
push
jns
dec
dec
lods
mov
sub
inc
inc
xor
dec
dec
sub
jne
inc
xchg
fucomip
cltd
jbe
xor
add
popf
mov
pop
jns
gs
hlt
in
pop
in
lahf
dec
xchg
sub
das
and
lock
sub
icebp
test
inc
mov
inc
subb
adc
fsub
das
jle
cmc
mov
in
setns
or
xor
aam
dec
cltd
lods
cld
xor
mov
mov
scas
jecxz
aaa
push
sub
sbb
fdivrl
xchg
aaa
cmpsl
mov
movb
in
and
fsubl
pop
out
cmp
jle
push
cmpsb
push
cli
sbb
mov
xchg
testb
fwait
sub
adc
int3
sub
iret
cmp
jne
mov
and
pop
adc
data16
jbe
mov
movsl
cltd
outsb
adc
fidivl
dec
dec
adc
xchg
cli
sarl
fwait
xlat
dec
dec
cmp
xchg
xor
ds
dec
fldt
sub
ja
xchg
pusha
jmp
and
dec
or
xor
lret
sbb
xchg
subb
sar
je
and
xchg
int3
pop
push
sbb
jge
fcoml
out
fcmovne
sbb
pop
mov
mov
mov
cmpsl
or
or
js
fcomps
pop
sti
pop
mov
cmpsb
pop
xor
fidivrs
stos
daa
mov
lea
pop
add
dec
mov
in
pushf
syscall
pop
ss
btr
je
sbb
dec
loopne
mov
cmp
pop
shlb
xchg
jg
jl
add
mov
sbb
cld
xchg
call
or
popf
pop
lahf
pushf
sub
sbb
and
xor
repz
jg
jbe
xorps
int3
stc
movsl
out
or
test
jmp
dec
and
loop
jge
int3
adc
mov
sbb
imul
mov
popa
incb
pushf
ficompl
push
lods
sub
pop
hlt
hlt
push
sbb
out
dec
sub
call
push
xchg
dec
mov
outsb
ljmp
adc
aas
movsl
mov
push
lcall
cmp
cmp
pop
loopne
sbb
addl
and
sbb
or
push
cltd
repnz
push
adc
pop
fstpt
xor
lret
dec
or
repz
sti
adc
out
sbb
mov
loop
xchg
cmc
push
test
jp
sub
pop
jge
repz
insl
iret
dec
rorl
mov
cltd
add
cmc
xchg
into
xchg
mov
mull
rol
mov
pop
loopne
mov
mov
jbe
dec
push
mov
inc
call
inc
sbb
loop
stc
mov
loopne
rorb
mov
inc
inc
pop
pop
lods
sahf
mov
test
ret
test
fistpl
xor
mov
lea
incl
mov
jge
xchg
repz
inc
pop
xchg
out
scas
mov
pop
sub
psraw
arpl
add
xchg
dec
inc
in
cpuid
sub
mov
sbb
xor
sbb
or
dec
fwait
cmpb
pop
and
inc
push
xor
fsub
adc
dec
repz
les
enter
inc
int3
push
inc
cld
ja
and
lahf
inc
mov
mov
xchg
adc
xor
sbbb
rorb
call
sub
push
jge
int3
inc
jno
call
mov
mov
sub
lods
in
adc
jmp
scas
pop
add
scas
dec
jae
inc
faddl
movsb
outsb
dec
inc
xchg
xor
rcr
data16
push
and
out
sub
inc
xor
mov
lret
movsb
mov
dec
repnz
jle
jmp
cmp
sbb
and
sbb
pop
aad
jns
aad
cmpsl
data16
mov
lods
arpl
and
mov
aas
stos
loope
jmp
or
cmp
insb
mov
ja
jnp
inc
in
nop
leave
in
repnz
or
stos
mov
sti
jmp
mov
out
mov
cwtl
adc
sbb
jecxz
pop
lock
add
aaa
jns
shrb
out
push
push
xchg
jg
sahf
repnz
sbb
mov
inc
cmpb
hlt
aam
inc
mov
xor
pop
fsubrs
jns
pop
jns
iret
shrb
sub
mov
inc
nop
mov
addr16
dec
clc
inc
mov
add
push
sbb
scas
jge
fcompp
adc
lods
pusha
fucomp
aas
int3
adc
mov
or
outsl
cltd
loop
ss
mov
mov
subl
dec
sbb
mov
int
sbb
ret
das
gs
mov
mov
pop
mov
xchg
cmc
dec
data16
leave
aam
pop
pop
call
fwait
pushf
test
mov
subl
pop
fs
or
lds
mov
iret
inc
iret
cwtl
test
xchg
lret
mov
jl
xlat
and
lods
mov
pop
jae
test
pop
icebp
xchg
shr
sub
dec
cwtl
out
adc
xchg
adc
arpl
mov
jg
cmp
sbb
das
mov
sub
loope
jl
push
cmp
outsl
cmpsb
faddl
push
das
fstpt
rcrl
jbe
repnz
je
popw
mov
add
outsl
cmp
adc
cmp
inc
lock
out
push
cmp
push
sub
das
pop
scas
lods
push
sub
ss
jecxz
fistpll
xlat
pop
mov
loopne
push
cs
rorb
fsubl
mov
xchg
pop
or
inc
or
sub
icebp
aad
je
gs
xchg
jno
push
xchg
movnti
and
push
aaa
adcl
xchg
jae
testl
inc
add
fsubrs
lret
pop
imul
xlat
mov
movl
mov
aaa
das
pop
jge
rclb
mov
adc
test
lea
dec
aad
cmpsl
icebp
mov
mov
in
xor
xor
ja
fsubrl
inc
push
dec
sub
rcrb
jp
inc
insl
add
cli
and
mov
push
xor
sbb
jecxz
pop
jns
xchg
bound
out
jmp
sbb
cmc
fcomps
jmp
pop
std
pushf
out
adc
repz
mov
mov
jge
in
popa
ja
pop
push
cmp
cltd
and
bound
sub
std
lahf
adc
int3
mov
loop
mov
sbb
fs
adc
ds
push
pop
in
inc
cmp
mov
fs
mov
sbb
and
ret
icebp
xor
mov
inc
dec
or
add
leave
test
mov
fisttpll
les
jg
icebp
outsl
sub
in
ja
std
repnz
shrl
push
sahf
outsl
sub
mov
pop
add
imul
cmpb
sub
outsb
repz
adc
sahf
lcall
push
jnp
bound
inc
lea
insl
les
mov
int3
push
lret
sub
adc
mov
pop
push
js
inc
push
out
push
scas
add
not
push
xchg
push
sub
push
or
mov
and
imul
sahf
sbb
rcrb
out
das
sub
sub
jmp
cmp
push
call
lea
cs
ss
sbb
icebp
sbb
ret
ja
xor
or
icebp
in
dec
mov
scas
mov
inc
mov
inc
add
into
lea
test
cs
pop
cld
ret
sti
movsb
sarl
aad
lea
add
adc
mov
mov
movsb
es
jecxz
push
lds
inc
lahf
jg
movsb
aaa
test
mov
dec
loope
outsb
or
pushf
push
xchg
add
mov
jo
lcall
mov
sbb
fcoml
mov
dec
data16
mov
lahf
sub
leave
rcr
xor
iret
mov
push
xchg
jb
push
or
fadd
cmp
dec
arpl
mov
cltd
aam
fisubs
cli
or
and
and
push
mov
xlat
loop
sbb
jmp
mov
mov
test
add
mov
testl
incl
cli
sbb
subb
rep
jb
mov
cmp
add
ljmp
mov
mov
sub
mov
push
cwtl
sti
das
fwait
out
xchg
dec
push
ss
pop
fwait
dec
dec
shll
popf
jns
stos
cmp
movsl
add
sbb
inc
out
insl
fwait
mov
ret
inc
cmp
stc
pop
out
aad
cmp
push
movsl
mov
fs
xlat
out
in
popf
fwait
xor
adc
jg
sahf
xchg
mov
imulb
movsl
and
out
rcrb
je
mov
lret
xor
mov
pop
push
sub
loop
out
lahf
sbb
pop
push
repnz
aam
and
dec
dec
add
cs
sarl
shrb
int3
rorl
or
notb
imul
xor
adc
lea
xchg
iret
xchg
lock
mov
pop
dec
hlt
mov
dec
mov
sub
inc
pop
mov
mov
stos
in
dec
push
aam
bound
pushf
rcll
cli
nop
sahf
xchg
xlat
xor
adcb
sbb
sub
add
push
loop
shrl
mov
aad
mov
dec
shrb
push
sbb
sbb
pushf
push
and
mov
test
inc
adc
jmp
add
fidivrl
arpl
fwait
push
int
decb
ficompl
and
in
scas
pop
jmp
shll
sub
adc
rolb
movsl
jnp
rorb
repz
pop
popa
fnstcw
sbb
push
pop
loope
and
test
cmpsl
cmp
imul
sub
add
imull
mov
mov
pop
mov
push
mov
lahf
js
movsb
xor
clc
out
outsb
mov
pusha
inc
mov
xor
loop
mov
pop
sbb
mov
push
xor
add
hlt
arpl
push
dec
movsl
out
inc
dec
lods
fsts
or
pusha
idivb
cmpsl
jl
aam
pop
pop
dec
lahf
mov
or
push
push
push
bound
int
js
mov
add
push
scas
cmc
push
das
inc
rolb
aaa
push
divl
xor
cwtl
gs
pop
leave
movsb
xchg
mov
jp
scas
popa
shrl
lret
orl
inc
loop
shrl
cmp
lcall
int3
xchg
mov
dec
stos
insb
inc
loope
sub
mov
and
or
pusha
sahf
mov
and
push
notb
jl
pusha
xchg
cltd
mov
sbb
dec
inc
cmp
sbb
test
in
std
insb
xorl
out
std
cltd
mov
int3
sbb
add
and
xchg
out
inc
inc
xchg
hlt
push
xorl
int
fmull
out
inc
jno
lret
dec
jecxz,pt
xchg
call
jb
xor
xchg
pop
scas
inc
inc
in
out
xchg
enter
std
push
cmpsb
jnp
push
adc
and
xor
aas
clc
push
int
int
sub
cmp
jmp
inc
mov
hlt
add
jne
pop
pop
aas
fcoml
lea
or
ficoms
pop
jmp
sub
mov
mov
int
jbe
test
jnp
jg
sbb
inc
ja
in
jle
test
dec
or
test
in
mov
cltd
adc
std
push
xchg
pop
imul
add
movsl
lahf
loope
xchg
adc
andl
nop
sbb
push
mov
cmp
add
leave
or
push
push
jno
movsl
xchg
addr16
pop
lret
in
lock
mov
in
inc
xchg
xchg
mov
mov
std
sbb
and
in
sbb
loope
arpl
xor
cmpsl
imul
subl
div
js
cmp
in
outsl
pop
popa
lret
pop
dec
adc
pop
shr
loop
mov
push
sti
push
push
sub
lea
cli
jge
jmp
pop
or
or
pop
lret
cltd
lcall
lret
jne
dec
mov
fcmovne
sub
ja
out
sub
mulb
pushl
shlb
sub
mov
adc
mulb
clc
push
adc
aaa
es
mov
lock
scas
jle
rol
int
push
sbb
or
dec
and
movb
es
xchg
adc
adc
imul
clc
popf
int
jmp
sti
std
nop
orps
leave
popa
sti
pop
adc
push
or
bound
jo,pt
subb
cmpsl
mov
popa
mov
add
inc
mov
xchg
or
lods
sub
cli
xlat
in
std
sbb
imul
mov
or
lret
pop
stc
fstp
dec
dec
dec
jne
mov
pop
popa
dec
dec
popf
je
adc
shr
pop
stc
cmp
mov
mov
jg
add
je
test
lods
das
inc
cld
push
or
pop
ret
mov
gs
jmp
vandnpd
adc
aaa
aam
xchg
movsb
flds
jae
mov
jno
push
mov
mov
mov
lods
push
les
mov
jg
lods
mov
int3
cmpsb
lods
lret
rorb
pop
mov
repnz
pop
mov
cmp
imul
cmp
mov
cltd
sub
pop
pop
out
adc
adc
mov
sbb
es
es
popf
leave
jl
cmp
in
sub
test
add
loop
jmp
push
xor
ljmp
dec
mov
sbb
xchg
testb
adc
insl
sbb
or
mov
scas
loop
outsb
adc
movsb
notb
mov
pop
mov
dec
xchg
outsl
adc
notl
jmp
push
and
pop
call
ss
push
cmp
or
mov
shrb
pop
adc
mull
mov
cld
loopne
mov
mov
stc
gs
mov
dec
adc
ss
sbb
mov
fldl
lock
pop
out
and
push
jmp
sub
adc
iret
xchg
pop
cld
sarb
add
mov
sub
sarb
mov
pop
incl
or
push
mov
loopne
into
push
mov
or
ds
clc
cs
mov
pop
mov
loope
popa
sbb
cmp
sahf
gs
lret
xchg
cld
cmp
and
sbb
mov
mov
inc
lahf
inc
sbb
shufps
lcall
cwtl
add
adc
ret
mov
fcmovu
idivl
sbb
push
cmp
jb
ds
lret
out
repnz
test
mov
jecxz
cmpsl
rol
and
pop
repz
pop
lcall
mov
pushf
cmp
jmp
jmp
arpl
mov
mov
inc
sub
ljmp
adc
into
mov
and
aam
ds
lcall
add
pop
outsb
pop
adc
hlt
mov
lret
jg
xchg
je
clc
sub
lret
std
pop
adc
sbb
stos
es
repz
ja
lret
pop
or
cwtl
dec
outsl
test
dec
xchg
cmpsl
std
fldenv
cmp
cmp
stc
fldcw
aam
bound
jmp
push
imul
lcall
push
scas
xchg
in
fwait
jne
xchg
inc
xchg
and
push
sub
aam
add
sahf
fucomip
lock
fisubl
fs
mov
cmc
out
dec
xor
push
xchg
int3
movsl
jp
daa
andb
mov
pop
nop
leave
push
dec
push
test
inc
jnp
out
xlat
mov
lods
inc
inc
xchg
out
pop
xor
andl
and
mov
fwait
jmp
std
cmp
pushf
adc
pop
sub
ljmp
je
dec
ret
adc
ss
ficompl
repz
push
mov
clc
jmp
jno
pop
insl
arpl
lods
int
jg
lea
aas
call
push
push
fs
push
pop
push
dec
jne
repz
sbbl
scas
cmpsl
pop
pusha
cli
add
or
xor
int
jbe
in
int
xor
mov
xchg
add
sbb
imul
mov
bound
rcl
or
mov
cmp
movsl
dec
jo
movzwl
pushf
ffree
repnz
out
inc
dec
sbb
xor
pop
jo
leave
scas
hlt
std
scas
cmpsl
out
packsswb
pop
mov
dec
dec
and
mov
or
std
lock
mov
fisttpll
sbb
adc
xor
mov
or
dec
in
mov
es
cmp
insl
mov
ficompl
pusha
out
mov
js
cmp
lahf
inc
sti
aad
call
adc
cltd
jl
sbb
cwtl
adc
adc
int3
sbb
xchg
push
mov
adc
sbb
popw
xlat
and
out
mov
outsb
addr16
out
loopne
and
or
fbld
cltd
pop
lret
fimuls
cmp
imul
iret
ss
jne
xchg
stc
or
mov
gs
stc
cli
lock
in
sub
ljmp
cmp
cmpsb
orl
aam
sbb
jno
mov
aad
dec
jmp
clc
out
cli
fidivrs
jg
pop
and
test
xor
andl
lods
insl
stc
imul
inc
out
dec
xchg
mov
adc
mov
xchg
xchg
out
sbb
and
ret
insb
lock
divl
in
push
loope
faddl
je
mov
fwait
popa
mov
mov
or
test
mov
and
inc
push
and
negl
scas
mov
add
jae
sbb
out
mov
arpl
lods
lcall
push
jge
les
cs
pop
and
jecxz
mov
test
fnstenv
setp
mov
imul
jmp
mov
cmc
push
nop
out
fbstp
mov
repz
arpl
push
pop
and
mov
inc
lods
mov
in
cmp
add
cli
lods
xchg
aaa
ficompl
ret
xchg
call
mov
test
jecxz
test
out
push
mov
push
add
dec
roll
dec
and
fsubrs
ficoml
fadd
or
cmp
inc
adc
inc
xchg
aad
das
jmp
jl
insl
js
jmp
xor
sahf
mov
add
mov
rolb
sbb
test
mov
pop
cld
jbe
and
cmp
in
ficoml
xor
mov
lds
jne
in
adc
mov
pop
out
pushf
xchg
std
popa
mov
dec
push
cmp
in
popf
mov
jae
lods
mov
into
xor
and
pop
xacquire
sub
push
xor
arpl
call
xchg
pushf
mov
and
mov
mov
add
ret
mov
and
push
mov
fs
pushf
mov
scas
mov
rcl
cwtl
add
jo
arpl
push
data16
dec
lock
mov
cmp
xchg
pop
mov
insb
cmc
mull
adc
lret
orb
mov
cmp
aad
aaa
cmp
pop
imul
repz
mov
testl
and
nop
mov
sub
sbb
add
sub
ljmp
fcoms
scas
fnsave
shlb
mov
push
movsb
ja
sti
lahf
adc
movsb
mov
push
pusha
push
ja
sti
fisubl
in
int3
mov
adc
push
xchg
cld
test
pushf
int3
jle
bound
dec
adc
scas
sub
xchg
ljmp
pop
pop
js
dec
pop
and
mov
scas
mov
stc
and
cmovns
and
test
ja
fnsave
gs
out
aaa
pop
call
lods
inc
mov
mov
sub
mov
loope
in
fsubs
lea
das
daa
adc
dec
xor
orb
dec
movsl
rcl
fiaddl
mov
fisubs
push
cmp
or
in
xor
mov
adc
lods
add
mov
mov
repnz
subb
faddl
mov
lock
fldenv
add
xor
jp
in
andb
rol
popa
and
popa
push
das
rcll
pushf
add
push
adc
popa
jbe
mov
sub
mov
adc
or
in
push
leave
in
jns
inc
mov
aam
fists
xchg
addr16
cmp
insb
cli
jbe
out
push
repz
mov
cmp
or
or
insl
fstpl
aam
xchg
lret
rcrb
imul
jns
sbb
fwait
test
icebp
xchg
out
mulb
ret
xchg
sub
inc
arpl
adc
nop
int
mov
inc
out
dec
and
xchg
dec
pop
adc
jl
ss
mov
fucom
jnp
mov
push
add
test
int3
and
and
icebp
jbe
sbb
mov
mov
dec
mov
imul
ficoml
and
push
pop
xor
int
mulb
cs
pop
test
ret
in
sub
arpl
cmp
dec
sahf
insb
mov
jl
rclb
pop
imul
push
adc
xchg
in
adc
ljmp
adc
add
mov
adc
scas
sti
loope
out
mov
fxch
jne
adc
insl
dec
mov
sub
nop
xor
outsb
out
jg
faddl
xor
scas
pop
mov
adc
lods
mov
mov
repnz
sub
add
add
sbb
mov
cltd
das
fdivr
xor
push
sub
enter
dec
outsl
inc
loope
cmpsl
pop
movntps
dec
lret
dec
rol
adc
fidivs
xor
inc
push
and
inc
add
aas
data16
dec
imul
fbld
sahf
push
out
mov
and
mov
sti
not
popa
call
arpl
jmp
cmp
sbb
into
lret
and
fstl
mov
test
pop
add
mov
aam
xchg
out
cltd
mov
pop
dec
notl
sbb
push
aas
call
xchg
cwtl
xchg
sbb
inc
leave
std
mov
dec
mov
aaa
movsl
stc
and
loope
ds
mov
push
repnz
arpl
xor
cmp
mov
push
sbb
push
jbe
out
jo
push
inc
iret
push
lahf
inc
int3
xchg
dec
cs
call
loope
out
inc
xorl
cmp
fsts
jmp
das
adc
cli
jecxz
mov
and
cld
stc
xchg
icebp
in
jb
adcl
outsb
mov
add
cs
add
ja
aad
inc
data16
add
outsb
dec
out
pop
sbb
mov
in
outsl
in
lea
notb
data16
inc
and
divb
xchg
movsl
xchg
fcoml
mov
and
adc
lds
fnsave
and
jbe
mov
jge
sahf
mov
int
sbb
xor
mov
jne
sbb
clc
push
add
pop
cmp
stc
mov
jp
cmp
cmpsl
and
shll
fwait
lcall
adc
sub
ret
lret
popf
les
jecxz
push
rcll
lods
mov
inc
scas
push
shl
mov
inc
pop
inc
xchg
pop
iret
jns
aaa
out
cmp
roll
mov
mov
cld
and
aam
shl
xor
or
mov
sahf
xchg
cs
pop
pop
stos
mov
lea
pushf
mov
sarb
adc
outsl
inc
pusha
push
sub
dec
jl
inc
ss
in
loop
push
pop
dec
jl
cmpsl
mov
data16
scas
cs
mov
mov
cmpsl
pop
sar
or
outsl
jno
es
mov
movsl
lcall
push
mov
fstpt
jne
ja
xchg
mov
adc
or
or
dec
push
movsb
and
lds
add
mov
xor
dec
dec
test
loopne
loopne
daa
int3
int3
cltd
adc
int3
push
jge
pop
out
jge
mov
cmpl
sub
pop
pop
popa
call
hlt
mov
cld
jge
lods
adc
xor
nop
mov
sub
scas
int3
shl
mov
dec
adc
or
out
cmp
adc
outsb
sarb
iret
sub
shll
mov
sbb
test
push
repz
ss
add
insb
out
cltd
outsl
stos
jl
or
dec
mov
scas
sti
shrl
leave
loop
loopne
mov
and
es
into
imul
ss
mov
roll
dec
push
xchg
mov
or
ret
xchg
rcrb
mov
fistpl
ret
outsl
pop
insl
xchg
orb
ja
in
popa
dec
loop
mov
dec
sbb
aad
mov
pop
pop
cmpsl
pop
push
dec
adc
lock
add
cwtl
ss
pushf
test
cld
in
lret
push
dec
ds
int
cmpsb
stos
lahf
in
mov
jmp
enter
jle
inc
pop
mov
and
lea
addb
jbe
push
adc
sub
bound
insb
xor
lock
mov
addr16
out
shrb
mov
icebp
and
jecxz
lds
cli
idiv
jbe
test
pop
lret
out
shrb
ja
push
iret
ljmp
sahf
push
jle
push
cmp
repnz
mov
jns
rorl
cmp
pop
ljmp
dec
push
imul
scas
xchg
or
mov
or
mov
sub
adc
sbb
pop
mov
repz
mov
xchg
loop
or
mov
ss
out
pop
stos
fldenv
repz
mov
and
ror
push
mov
idivb
mov
mov
add
js
rep
jno
mov
loop
cli
inc
pop
mov
shll
mov
int
xchg
into
icebp
popa
mov
ljmp
shrb
pop
pop
imul
outsb
cmp
add
mov
or
xor
mov
sub
popa
mov
out
loop
push
enter
arpl
out
insl
jne
add
ja
adc
in
jne
mov
push
add
or
fiadds
inc
movsl
and
mov
cmp
insb
sbbl
xchg
or
in
mov
imul
sbb
imul
out
pop
xorl
xor
pop
int
mov
mov
mov
sbb
nop
xor
cmpsb
jae
fiaddl
std
mov
mov
mull
sar
or
adc
loope
pop
jle
hlt
dec
sub
enter
dec
lcall
inc
outsl
jo
inc
dec
jl
ljmp
inc
push
lock
xchg
out
scas
mov
stc
test
add
lcall
xchg
push
shrl
fldl
ret
mov
push
fstp
les
rcrl
ljmp
ljmp
xor
fnstcw
inc
arpl
xchg
jmp
xlat
xchg
xor
scas
pop
sahf
loop
pop
insl
xlat
popf
mov
mov
or
adc
push
jge
cmp
movsb
jnp
inc
push
loopne
mov
je
loop
push
mov
rolb
mov
inc
addr16
xor
mov
dec
lret
xlat
lret
push
int3
iret
or
and
aas
mov
insb
outsb
adc
lods
scas
mov
fdivrs
adc
ss
imul
shl
lea
xchg
mov
xorl
stos
mov
pop
and
xchg
push
inc
push
es
push
push
jae
mov
scas
lds
adc
ret
aaa
push
xor
push
dec
or
imul
lods
shlb
or
and
testl
adc
or
popf
dec
imul
mov
inc
mov
pop
pop
jg
out
pop
jne
dec
or
addr16
lcall
dec
pop
cmp
int3
push
xchg
or
popa
rcl
cmpsb
cmpsl
idivb
mov
out
cmp
push
outsl
rcl
mov
je
cmpl
fistpl
dec
or
fcompl
sbb
and
mov
call
sarl
add
xor
daa
pop
dec
ret
mov
sub
sahf
xor
test
fnstcw
cld
sub
xchg
mov
mov
jmp
test
cmpb
cmp
jge
cltd
data16
adc
loopne
pop
push
ds
mov
shrb
sbb
pop
jno
arpl
dec
and
cmp
negl
xchg
in
push
rcrl
inc
ljmp
sub
or
ret
stos
xchg
pop
subl
lcall
lock
out
test
cli
xchg
sub
iret
adc
cld
mov
ja
lds
push
loop
xor
mov
sbb
xor
ljmp
mov
out
repz
mov
cmpl
dec
leave
mov
fadds
das
ja
ds
stos
inc
aas
cmp
inc
inc
mov
dec
orb
jmp
mov
mov
or
clc
cmp
mov
fisubs
sbb
lock
mov
mov
in
push
loop
inc
ss
add
stos
mov
adc
mov
push
mov
cmpsl
sbb
fcompl
dec
add
jle
adc
mov
pop
jne
pop
outsl
sub
push
int3
inc
dec
lea
pop
sbb
clc
mov
sub
dec
xorb
fs
test
les
mov
mov
add
dec
adc
test
arpl
push
out
out
ljmp
and
sbbb
xor
adc
jl
shll
mov
lret
mov
mov
xor
scas
ja
pusha
lods
test
in
mov
push
and
sub
jbe
js
out
inc
or
fmuls
mov
mov
out
jno
cmpsl
jb
add
insb
out
out
incb
fiadds
xor
ss
clc
aas
aas
push
loop
sbb
push
or
cmp
push
add
cld
popf
mov
cmp
in
adc
mov
fisubl
mov
mov
dec
stos
in
xadd
mov
ficomps
and
les
mov
bound
jae
push
gs
stos
lret
pop
shlb
xchg
xchg
lcall
or
push
subb
and
jle
jl
jbe
cmp
jae
in
fldcw
lds
adc
mov
loop
fwait
sub
into
fmull
lods
fldt
push
fs
push
xchg
ret
jo
adc
xchg
movsb
stos
sub
or
mov
fdivrs
loope
pop
ret
lret
cmc
xor
push
mov
mov
nop
sub
add
fs
pop
loope
mov
push
or
cmpsl
roll
cmp
fdivrp
sti
sbb
push
pop
in
jl
cld
stos
iret
scas
mov
gs
xor
pop
in
push
cmpl
lret
fidivrs
mov
loop
adc
pop
shll
test
cmp
add
jb
push
in
mov
push
inc
enter
es
repz
mov
sbbb
inc
flds
mov
sahf
inc
push
add
arpl
adc
movsl
ja
pop
xlat
dec
js
sbb
idivb
daa
mov
pop
cltd
jg
sbb
repz
icebp
or
xchg
call
cld
stos
inc
sti
lock
sbb
xor
pop
nop
shr
cmpsb
sub
inc
pop
lret
xchg
push
mov
adc
dec
mov
pop
inc
es
rclb
xchg
push
fs
fxtract
icebp
xor
aam
and
pop
or
mov
test
aam
inc
sti
adc
decl
fmull
sbb
xor
arpl
or
push
fnsave
out
fldcw
cwtl
adc
jae
pop
in
xchg
add
ljmp
mov
or
pop
mov
lret
call
inc
xchg
lahf
add
outsl
cld
lret
fdiv
cmpb
das
cmp
or
and
stos
cmc
and
pushf
addr16
jo
mulb
repz
mov
sub
nop
fldenv
data16
xor
xor
shlb
ret
pop
lods
ljmp
popa
mov
sbb
push
and
pop
ds
push
mull
jle
repz
popa
adc
push
push
lock
cmp
jecxz
dec
test
or
movsl
push
fcmovu
xor
inc
xor
sbb
jnp
loope
fdivs
inc
mov
inc
adc
imul
movsl
int
mov
push
or
and
rolb
mov
fildl
popa
sub
mov
setae
pop
mov
out
push
mov
mov
imul
mov
push
sub
mov
xor
push
jle
mov
mov
mov
mov
mov
cmovns
or
xor
arpl
cs
add
test
mov
adc
ljmp
shlb
push
xchg
inc
loopne
out
call
std
in
push
or
jmp
fs
dec
stos
pop
and
push
repz
inc
dec
in
dec
bound
mov
int3
ret
sub
fstpt
xor
dec
inc
daa
aam
cmpsl
cmpsb
jns
jle
pop
aad
sahf
add
cmpsb
mov
fs
je
vmovddup
es
ret
das
pop
dec
mov
ljmp
gs
repnz
loope
or
into
ret
push
sub
mov
jns
ss
rorl
dec
int3
das
dec
cmp
jbe
aaa
xchg
ja
stc
mov
daa
js
sub
sub
and
and
lds
add
dec
inc
int3
clc
or
mov
sub
repz
imul
js
cwtl
rcr
lret
mov
mov
ljmp
or
fiaddl
xor
and
sahf
popa
shl
dec
push
test
aam
mov
fisubs
xor
inc
and
mov
lret
lahf
shlb
adc
inc
jb
xchg
imull
dec
icebp
js
loope
add
cmpsl
push
pop
push
xor
mov
dec
aam
jle
sub
test
mov
jo
xlat
sub
into
int3
sbb
xchg
dec
lods
pop
fcmovu
or
js
roll
mov
test
jp
mov
imull
and
push
aad
mov
mov
xchg
jbe
aas
lods
pop
push
das
daa
addr16
movsb
cs
int3
in
jno
jae
adc
aad
test
xchg
in
jb
test
rcrb
call
cmpsb
inc
jle
sahf
pop
nop
or
push
mov
push
loopne
jle
stc
imul
ret
xchg
sub
inc
xchg
out
cmp
dec
pop
mov
push
loope
adc
jl
push
mov
xchg
adc
in
fdiv
jge
shrb
aad
xor
enter
jmp
jb
stc
pop
mov
in
into
jl
pop
sub
daa
sarl
jle
into
pop
cmp
js
inc
orl
clc
sbb
xlat
xlat
pushf
sbb
xchg
xor
cmpsb
pop
test
dec
push
in
xchg
dec
xor
fsts
push
jp
xor
rcl
in
fistl
push
cltd
nop
out
dec
lret
jnp
xchg
out
lcall
aas
out
mov
adc
repnz
movsl
int3
inc
sbb
jne
mov
imul
xchg
pop
fidivrs
jecxz
xchg
sub
xor
and
and
or
lcall
pop
iret
add
outsl
add
movsb
jg
mov
push
pop
adc
test
pop
jne
pop
clc
cpuid
xchg
adc
jb
mov
js
or
add
xor
arpl
insb
sub
lret
scas
mov
xor
cmc
cmc
mov
jp
inc
dec
loope
in
push
push
dec
mov
sbb
mov
outsb
inc
or
lret
repnz
mov
push
jmp
inc
sub
lret
jae
aaa
outsl
cltd
int3
push
movsb
ljmp
sbbl
bound
cwtl
adc
sub
aad
jecxz
rcr
cmp
add
clc
inc
mov
sbb
inc
inc
int3
mov
and
je
xchg
out
xchg
mov
stos
cmp
and
leave
xor
in
repnz
outsb
fwait
dec
sbb
xchg
or
fdivrl
sbb
cltd
xor
inc
xor
pop
gs
or
push
xor
stc
sarl
jge
cmpsl
rorl
pop
dec
fisubrs
lea
mov
pop
xchg
repnz
scas
cmpsl
call
push
inc
loope
lret
shrl
std
lds
clc
jo
xlat
clc
dec
lret
and
mov
lock
inc
fmulp
out
push
pop
scas
adc
rorl
or
cmpsb
add
mov
ret
mov
andb
js
pop
cmp
push
xchg
in
cmc
mov
test
imul
cmp
movsl
inc
pop
dec
stos
cwtl
dec
mov
add
fildll
lret
xor
mov
mov
or
and
jbe
xchg
mov
pop
mov
sbbl
jmp
adc
mov
outsb
in
mov
jecxz
mov
call
bound
and
add
lea
mov
push
xlat
in
cmpsb
rorl
sbb
cwtl
mov
cmp
or
scas
sub
pusha
aad
bound
push
cmp
mov
adc
dec
pop
fstpt
lret
popa
loopne
jb
dec
jbe
sub
rclb
mov
jecxz
stos
lret
xor
in
fdiv
leave
mov
aaa
insb
rcll
mov
jb
jae
and
jmp
lods
icebp
sarl
jge
push
push
jecxz
pop
push
and
push
leave
ss
push
test
lods
pop
push
xchg
les
popf
shrb
lcall
push
xchg
fisttpl
cli
lcall
inc
js
scas
sbb
adc
repnz
xchg
cmp
mov
inc
sbb
repnz
jl
add
sbbb
dec
sbb
and
inc
popa
mov
call
sub
cmpsb
lahf
leave
inc
lcall
data16
pop
dec
seta
sub
ja
cmpsb
in
arpl
jg
mov
add
iret
pusha
mov
cli
mov
iret
ret
push
jecxz
je
dec
mov
push
push
mov
rolb
sbb
mov
lock
sub
test
cmp
dec
jecxz
in
dec
lret
jmp
in
cmpsl
inc
pop
mov
mov
shll
les
inc
add
xchg
out
aad
ljmp
and
sbb
adc
je
mov
xchg
pop
mov
cmp
xlat
mov
dec
sbb
pop
popf
nop
add
sub
mov
iret
mov
sub
stos
or
in
mov
inc
xorl
arpl
fldl
jns
repz
jg
and
imul
cmp
jg
loop
mov
or
aam
pop
fnstcw
shlb
inc
pop
scas
je
enter
cmp
leave
enter
dec
hlt
push
pop
sub
outsb
jp
inc
scas
addr16
pop
aaa
inc
pop
fstp
fcoml
lret
insl
and
jmp
push
out
in
je
jp
lods
test
xchg
insl
push
int3
mov
mov
dec
movsl
adcl
je
adc
sbbb
test
mov
ret
adc
add
loop
ret
in
jae
jnp
sbb
in
leave
jle
jg
xor
adc
cltd
call
xchg
rolb
insl
insb
add
lock
insb
mov
ret
sbb
mov
es
sub
and
mov
mov
push
cmpsl
icebp
dec
mov
insb
insb
xchg
les
andb
xor
cmp
roll
fiadds
les
ljmp
cmpsb
call
mov
hlt
fldenv
dec
mull
adc
popa
add
stos
insl
fmuls
cmp
inc
loope
scas
scas
inc
loopne
pop
cmp
sbb
mov
adc
in
cmpsl
imul
scas
pop
stc
iret
push
pop
lret
out
jle
ljmp
imul
call
lea
push
mov
fstpl
push
fsubl
sbb
pusha
inc
shrl
sbbb
ds
cmp
test
mov
int3
and
ret
mov
dec
mov
cs
xor
cmc
push
xor
cmp
and
push
fiaddl
test
setns
push
insb
mov
inc
mov
pop
xchg
or
sub
pop
jge
mov
add
repnz
push
add
jnp
enter
sahf
push
sbb
fimull
push
in
inc
sbb
in
ss
xchg
sbb
add
out
loope
aam
xor
push
push
jns
mov
insl
cmp
mov
frstor
cmpsb
lahf
inc
sbb
icebp
out
inc
cwtl
inc
ds
mov
test
rorb
cmp
pop
cmpsl
pop
xchg
sub
pop
imul
jmp
arpl
fnstsw
shrl
mov
jno
nop
xor
push
mov
sub
fdivrp
pop
cmc
push
testb
add
xlat
lods
add
dec
outsb
mov
pop
mov
dec
sbbb
rorb
movsb
test
mov
hlt
push
fsubrs
mov
cwtl
mov
xchg
enter
xchg
pop
jns
std
mov
cmp
aam
icebp
push
add
daa
xchg
push
setae
sti
cmp
dec
pop
lds
das
push
cltd
aad
stc
iret
shl
lea
sbb
fadds
pushf
nop
cmp
lea
out
fnsave
adc
andb
pop
jle
sbb
es
pop
dec
or
call
sbb
out
push
lret
rcr
sahf
pop
or
or
jle
dec
imul
jae
sahf
mov
push
and
cltd
movsb
jmp
sbb
sbb
mov
mov
fldl
push
lock
test
sub
push
mov
push
rcll
dec
fstpl
jl
mov
mov
ret
cmp
lea
mov
mov
pop
int3
sahf
push
mov
int3
int
or
push
pop
ja
adc
adc
sarl
scas
aas
sub
std
popf
push
push
shlb
xchg
int
adc
out
es
adc
jg
adcl
pushl
mov
fstpl
jle
push
ds
aam
push
push
in
popa
out
sbb
inc
inc
fistpl
call
sub
or
dec
dec
loop
mov
mov
push
stos
cmp
fcmovu
inc
xor
cmpb
mov
push
adc
push
inc
rcrb
aad
aam
pusha
push
jecxz
sbb
mov
imul
lods
and
dec
xor
in
imul
test
dec
sub
movsl
xchg
int
insb
std
push
xor
out
shll
popa
sarb
lock
int
ja
popf
xor
pop
pop
repz
subl
aas
jecxz
lods
jno
enter
add
add
mov
or
xor
cmp
leave
cli
nop
cmp
pop
dec
xchg
shrb
mov
jmp
notl
sub
stos
shlb
sbb
dec
rcrl
notb
or
mov
test
cmp
enter
pusha
inc
mov
adc
cmp
test
adc
xor
jbe
xchg
xor
loopne
sbb
stc
xor
lret
jmp
repnz
xor
jecxz
jb
ss
sti
mov
rclb
pop
mov
fnsave
push
fstpl
and
scas
pop
jg
call
mov
lods
or
movsb
sub
cmp
push
pop
decb
pusha
xchg
aam
add
xchg
pop
fildll
das
add
cmpsb
stos
xchg
cmp
pushf
cmpsb
add
mov
inc
mov
outsb
fistpl
jnp,pt
adc
mov
inc
xchg
pop
pop
into
pop
es
cmp
divl
adc
pop
cmp
shr
push
xchg
jns
test
sub
ds
pop
cmpsb
dec
xor
lret
out
fbld
push
fwait
stos
arpl
lods
ss
aaa
dec
repnz
xchg
push
insb
subl
mov
or
inc
js
mov
stos
mov
push
push
pop
icebp
js
mov
cltd
xchg
iret
dec
aas
call
nop
pop
dec
out
jbe
testb
xchg
andb
iret
pushf
stos
mov
xor
xchg
sti
xor
shrl
mov
push
dec
into
and
rcl
pop
jl
fldl
shlb
jge
jnp
stc
add
mov
sbbl
lods
imul
movb
into
test
dec
rep
lret
ret
pushw
inc
xchg
cltd
cmc
test
fisubrs
in
movsb
add
inc
sbb
dec
push
push
iret
push
ja
pushf
cmp
shll
mov
fdivrp
xchg
push
push
mov
test
jbe
add
inc
fs
pop
or
adc
movsl
jge
add
inc
xchg
mov
or
add
mov
popf
or
push
xchg
stos
out
nop
hlt
xchg
out
sub
sbb
movsb
pushf
and
push
mov
in
sbbl
pop
cwtl
sub
adc
lcall
fdivl
fmulp
and
insb
jno
xorb
xchg
push
rcr
icebp
fwait
cld
add
adc
inc
xor
jne
push
rorb
insl
outsb
inc
xor
xchg
and
inc
xchg
clc
in
int3
inc
pop
dec
lock
mov
mov
cmp
scas
or
imul
adc
imul
jnp
das
dec
push
ds
adc
add
sub
mov
jmp
push
aam
mov
ret
adcb
addb
ja
or
decb
and
je
mov
adc
cltd
pop
sahf
js
mov
jb
dec
int3
pop
dec
popa
sarb
shrl
inc
outsb
and
add
cs
inc
mov
mov
frstor
jmp
mov
ficoml
loopne
xor
xor
mov
ds
lret
inc
jnp
pop
mov
clc
or
mov
cmc
sub
repz
loop
scas
subl
or
inc
pop
cmpl
decb
sbb
daa
inc
and
sbb
or
loop
push
test
ja
test
ljmp
mov
sbb
scas
mov
loope
pop
bound
ret
mov
dec
mov
sub
enter
lods
lods
push
inc
std
push
cmp
mov
inc
mov
leave
sbb
lock
pop
pop
jmp
ss
push
mov
or
mov
aas
xor
pop
repnz
push
dec
cmp
sti
push
in
nop
lahf
rorl
movsl
loopne
sbb
lock
pusha
push
pop
shrb
in
pushf
xchg
xor
push
mov
or
testl
enter
push
es
out
sbb
pop
xor
pop
mov
mov
jmp
shr
mov
insl
jo
rcrb
fbld
gs
adc
lahf
aas
rclb
lcall
push
adc
xchg
mov
xchg
les
cmpb
mov
daa
test
add
das
aam
enter
lahf
xlat
scas
iret
cld
xor
add
icebp
and
xor
jns
gs
repnz
inc
push
mov
inc
movd
test
sbb
sub
sub
aam
ffreep
sub
or
inc
lea
jb
mov
pop
xchg
xchg
sarl
sub
bound
jl
in
push
jge
push
jecxz
pop
mov
lods
sahf
nop
icebp
jno
fbld
mov
clc
pop
mov
adc
int3
imul
xchg
cmp
pop
ja
addb
ds
sahf
loop
mov
xor
incl
repz
test
add
push
orb
mov
aas
pop
loopne
xlat
inc
test
outsl
loope
inc
orl
xchg
repz
insl
aad
ret
mov
dec
mov
lods
andl
pop
mov
xchg
xor
add
jl
in
pushf
and
cmp
sub
mov
stos
data16
or
push
popa
xor
popa
leave
xor
pop
sti
dec
xchg
lahf
out
leave
stos
mov
push
nop
jnp
nop
mov
xor
jmp
mov
pusha
mov
adc
cltd
popf
mov
movsb
cmp
xchg
es
inc
and
loope
xchg
pop
faddl
fiadds
mov
out
mov
mov
dec
imul
js
adc
add
dec
sbbb
lcall
cmc
and
xlat
aam
jmp
dec
xlat
cwtl
in
out
andl
push
adcl
dec
inc
and
jns
mov
mov
call
sub
rorl
into
test
stos
lret
add
push
pushf
xchg
dec
into
adc
xor
xor
mov
dec
test
loope
sub
xor
shlb
ja
scas
cmpb
test
out
int
imul
out
adc
sahf
push
jae
nop
scas
mov
mov
cmp
push
adc
lods
das
imul
shll
jo
inc
push
jg
xchg
cmpsl
jg
xor
loop
sbb
decl
mov
mov
out
add
shll
fsubs
push
xor
mov
loop
jecxz
mov
cmp
imul
out
fisttpll
pop
pop
mov
or
or
sbb
jg
ret
in
jno
mov
lret
adc
sbb
in
into
xchg
rolb
in
pop
std
pop
dec
inc
mov
fs
add
mov
sub
popf
les
inc
add
es
sbb
pop
cwtl
fnstcw
lret
ljmp
out
mov
push
inc
hlt
aaa
xor
pop
xchg
push
insl
aaa
orps
jae
gs
fs
inc
lret
mov
mov
das
das
in
pop
sti
pop
xchg
push
lret
cmp
cltd
mov
mov
mov
call
adc
stos
sub
movsb
mov
mov
cmp
fildl
loope
inc
and
push
jecxz
enter
add
mulb
xor
pop
xor
outsb
test
dec
mov
dec
push
push
jb
mov
lahf
adc
mov
shrl
push
adc
cwtl
xchg
xchg
out
mov
add
lcall
xchg
xchg
les
in
xchg
or
in
fadd
outsl
cmpsl
div
or
jmp
add
pop
lea
negl
jp
sahf
pushf
clc
sub
ficomps
xor
push
xor
mov
pop
jg
imul
cli
xor
insl
stos
mov
out
sub
sarl
fwait
lock
inc
test
xchg
shrl
cld
sbb
cs
inc
int
dec
movsb
fsubr
mov
in
push
push
sbb
jecxz
and
popf
pop
and
mov
jle
lea
cmpsl
dec
repnz
cwtl
shll
stos
xchg
aam
test
jl
cmpl
pop
jnp
push
mov
stos
imul
js
mov
popa
hlt
aas
push
jle
dec
mov
dec
outsb
sbb
jbe
ljmp
pop
xchg
fs
cltd
cmpsb
test
dec
sar
ss
ds
mov
sbb
mov
mov
cli
jecxz
mov
cmp
sbb
jge
call
inc
pop
fidivs
scas
jl
aad
sub
jae
ljmp
out
mov
jl
shlb
int
sub
pop
adc
out
testl
cli
out
and
aad
out
std
or
das
dec
lret
inc
pop
jmp
fbstp
fnsave
out
push
in
cmp
in
add
push
shrb
pushf
jae
fistps
sub
xchg
adc
xor
mov
cmp
mov
lods
and
push
push
and
fadds
lcall
inc
dec
sub
dec
outsl
or
jg
in
mov
clc
hlt
add
repnz
xchg
jae
mov
sub
jb
sarb
push
cmp
pusha
sahf
jle
sahf
fwait
ss
xchg
jmp
add
and
mov
push
xchg
pop
cmp
cltd
jle
ret
sub
repz
rolb
or
mov
xlat
into
pop
cmc
fisttpll
push
push
stos
leave
mov
inc
cmc
lock
sahf
adcb
jg
ret
ja
test
iret
stc
sub
int3
sbb
adc
xchg
sub
lahf
rolb
lods
jge
cmp
sub
dec
inc
jmp
iret
rorb
sti
push
adcl
aas
js
shl
pushf
dec
jno
roll
mov
xor
lods
into
cmpsl
dec
sub
ss
and
jne
fucomi
sbb
xor
jo
and
xchg
cmp
inc
aad
and
loope
jp
mov
clc
mov
cmpsl
incb
lds
sar
mov
cld
push
shrl
push
icebp
and
xor
rorb
sahf
stc
push
scas
ss
fs
repnz
nop
outsl
jno
add
dec
mov
sbb
lods
adc
pop
xchg
push
lods
out
clc
lahf
orb
mov
jmp
icebp
fcmovb
loopne
mov
lea
mov
push
out
repz
xchg
call
lahf
fnsave
xchg
dec
dec
mov
mov
fwait
add
mov
add
mov
arpl
sub
cmp
jo
push
iret
jae
jg
and
inc
out
loope
xor
std
loope
outsb
insl
stos
sub
in
lahf
aaa
repnz
pop
dec
sub
adc
pop
cltd
fsubr
pusha
mov
cmp
mov
mov
mov
add
sbb
push
sbb
xchg
mov
lahf
out
in
sbb
lret
ret
jo
mov
in
xlat
mov
testb
inc
js
cmp
sub
inc
and
cmp
in
and
sbb
movsl
out
jmp
mov
add
add
jge
dec
dec
jl
or
dec
push
xchg
push
xor
mov
xchg
jo,pn
xchg
jno
jecxz
lea
cli
dec
scas
imul
xor
out
sbb
xchg
pop
jns
inc
popa
and
or
mov
mov
in
dec
loop
cs
xchg
dec
jno
stos
cmp
push
cmp
dec
leave
inc
scas
pop
xchg
ds
xchg
mov
test
insl
cmc
imul
in
pop
push
sahf
daa
jmp
mov
scas
push
repz
mov
dec
das
mov
xor
subb
mov
xor
test
test
sub
fldt
insb
js
sbb
or
clc
ficoml
mov
lds
mov
int
pop
pop
push
push
jge
sbb
mov
push
mov
sub
inc
mov
cltd
adc
or
cmc
xchg
arpl
push
cltd
sahf
and
push
push
sub
aas
pop
in
test
scas
mov
in
dec
xchg
insb
mov
int3
arpl
pop
lods
mov
cmc
test
fdivl
in
mov
imul
lcall
imul
test
ljmp
pop
jbe
adc
ljmp
shlb
push
outsl
subl
inc
jno
mov
into
stos
inc
repz
pop
sbb
sbbb
lds
pushf
dec
and
orb
mov
sub
pop
mov
outsl
pop
lret
stos
stc
sub
and
xchg
mov
add
mov
jle
nop
dec
sub
push
mov
inc
dec
sub
mov
pop
cld
std
mov
rolb
dec
in
aas
jb
sub
cld
jecxz
test
mov
mull
jo
push
and
sub
xchg
nop
and
jmp
push
lods
and
and
pop
daa
cmc
data16
jbe
fs
cli
das
pop
repz
or
xchg
mov
mov
insb
js
mov
mov
mov
imul
insb
stos
adc
mov
sbb
add
push
in
mov
or
dec
adc
inc
dec
popa
ljmp
stos
xchg
push
lret
outsl
pop
cmp
or
enter
imul
divb
mov
cmp
dec
xor
jae
outsl
jbe
inc
shlb
mov
insb
cmpl
jnp
or
js
stos
xor
jg
arpl
fstpl
jmp
stos
test
jge
lea
xchg
in
mov
jg
dec
jns
or
lret
mov
sub
icebp
pop
lret
jnp
mov
fdivp
loopne
sub
cli
cmc
and
push
ror
add
xchg
hlt
mov
int
orb
repz
leave
inc
mov
mov
inc
dec
imul
jecxz
mov
pusha
mov
dec
add
fwait
movsl
xor
mov
dec
insb
push
mov
loope
lods
jmp
mov
xchg
inc
dec
adc
mov
inc
jge
sbb
cld
idivb
xlat
push
mov
jge
popa
ljmp
xor
mov
outsb
cmp
xor
stos
std
inc
loop
jbe
repz
loopne
xchg
sahf
push
push
jns
test
or
stc
inc
cmp
sbb
pop
daa
sub
adc
or
subb
popa
out
cwtl
mov
push
cwtl
adc
mov
outsl
test
pop
and
dec
enter
dec
add
adc
insb
jmp
icebp
push
cld
movsl
pop
mov
sarb
mov
or
ret
enter
push
inc
lods
push
lods
xor
loopne
ret
push
jae
cmc
lret
inc
adc
inc
xor
loopne
add
clc
and
cli
movsb
cmp
mov
push
cmp
decb
xor
jb
std
fdivs
or
mov
mov
fadds
mov
add
ds
xor
daa
stc
test
push
push
lret
dec
inc
lods
test
add
cmp
movsb
js
mov
dec
mov
stc
cmp
fildll
pop
cmpsb
fdivrs
fwait
dec
ja
jbe
xchg
or
push
pop
sti
rcrl
sbb
scas
pop
test
movsb
mov
out
mov
mov
mov
int
sub
shr
sub
adc
nop
sbb
dec
add
dec
mov
popa
pop
ret
and
out
dec
mov
fldpi
sarl
pop
dec
mov
mov
sub
add
ja
repnz
addr16
rclb
jns
stos
sbb
outsl
in
ja
leave
in
sbb
dec
loop
loope
and
mov
stos
and
push
aas
xchg
mov
daa
faddl
cvttps2pi
stc
ss
data16
pop
jp
sbb
xchg
mov
fiaddl
stos
popl
outsl
mov
bound
or
lret
adc
push
cmp
fmuls
sti
jg
or
mov
add
xlat
aam
xchg
jmp
pushf
inc
cmpsb
push
sub
pop
popa
gs
mov
and
cmpsb
fwait
clc
mov
lods
orl
xor
rorl
aam
cmp
ja
fsubr
fldt
lahf
dec
sahf
xchg
ss
and
stc
mov
fndisi(8087
pop
pop
sub
lea
mulb
inc
mov
sahf
cmpsl
in
inc
popf
ja
xor
inc
stos
jb
jne
or
lret
sub
mov
xchg
push
pop
lret
in
cmp
lahf
add
add
cltd
mov
es
lahf
jl
mov
sub
mov
test
sub
mov
jmp
mov
gs
jp
lods
cmpsb
pop
sbb
pop
push
fwait
cmp
mov
cmp
cs
pushf
scas
aas
test
pop
mov
jae
stc
dec
pop
pop
inc
push
or
fbstp
mov
push
fcompl
mov
or
push
jno
sahf
test
push
mov
lret
decb
pop
sbb
mov
fimull
stos
adc
dec
mov
push
lea
jecxz
push
out
inc
mov
test
enter
mov
mov
movsb
ljmp
neg
push
cs
inc
jle
mov
cmpsl
xor
std
jmp
xchg
mov
xchg
shrb
xchg
movsb
repnz
mov
nop
pop
ljmp
pop
je
adc
jmp
add
mov
je
ljmp
dec
jp
cmc
clc
push
xchg
pop
popf
xorb
in
aas
add
insl
sub
sahf
push
outsl
mov
mulb
rolb
ja
fcmovb
test
rcl
xor
pop
jae
push
mov
frstor
adc
call
outsl
lea
aas
roll
mov
fdivp
and
mov
addr16
adc
or
cltd
sbb
jae
fdiv
dec
push
pop
aaa
mov
mov
mov
out
pushf
push
faddp
stc
sub
lcall
pop
std
cmp
dec
dec
mov
adc
mov
stos
push
dec
cmpsl
and
repnz
out
dec
clc
xor
clc
adcb
aaa
mov
mov
inc
aam
repz
outsb
insb
adc
cmp
add
out
inc
or
das
mov
imul
cmp
lret
adc
lds
cmc
cmpsl
cwtl
je
cs
sbb
pop
out
push
nop
xor
xor
stos
fwait
stos
stos
fs
data16
ret
mov
jle
jbe
out
push
sar
jne
hlt
imul
pushf
je
push
mov
rcrl
jmp
mov
xor
push
sbb
jnp
xorl
push
jnp
in
xor
sbb
shrl
repz
dec
mov
push
sub
filds
loop
das
pop
pop
into
mov
jp
cltd
jno
sub
and
and
inc
xchg
cmp
rolb
cli
mov
xchg
inc
rcll
test
in
stos
lds
push
mov
xchg
out
aad
adc
ds
repz
cmpsb
aad
fdivs
adc
fnop
loope
cmp
xchg
jo
testb
std
or
inc
sbb
inc
mov
out
add
stos
xlat
sbb
add
pop
lea
xchg
jg,pt
xchg
sahf
mov
jno
xor
ret
iret
mov
push
inc
mov
pusha
in
mov
jbe
sbb
lcall
add
hlt
mov
mov
adc
xchg
sub
xchg
les
push
mov
rolb
sbb
mov
pop
cwtl
iret
xor
and
icebp
add
add
cs
jns
xchg
loope
add
dec
add
sbb
mov
pop
or
mov
cmpsb
faddl
pushf
in
leave
mov
pop
xchg
jmp
ja,pt
cmp
cltd
inc
inc
add
test
adc
rclb
xor
inc
or
adc
loop
bound
nop
mov
inc
adc
jb
push
aam
fidivl
inc
sbb
xor
dec
bnd
xchg
negb
adc
or
imul
dec
test
xchg
decb
sahf
mov
jo
xor
test
mov
repnz
lret
mov
aaa
into
testb
adc
call
mov
inc
add
ds
xchg
cmpsl
mov
mov
mov
mov
mul
xchg
ja
mov
pop
jg
outsl
xchg
movb
push
fisttpl
xchg
fcmovnu
mov
lods
or
mov
jb
jl
dec
icebp
lcall
xor
xor
stos
push
pushf
in
or
stc
addr16
sbb
cmp
xchg
call
out
aad
stos
mov
jle
cwtl
lods
pop
cmpsl
jmp
mov
shlb
ffreep
sub
xlat
mov
jno
addb
idivb
pop
int
adc
mov
dec
btc
and
adc
mov
dec
test
pushf
fsubrl
push
add
bound
jo
jl
mov
adc
jo
jae
in
shrl
cmc
xor
fs
jae
cld
call
mov
cmp
in
gs
sbb
sbb
int3
mov
xchg
dec
sbb
jne
pop
jno
add
repz
inc
ds
sub
fisttpl
pop
shl
jmp
sbb
sub
cmp
sbbl
inc
aam
jg
adc
cmp
aad
and
xchg
adc
and
in
mov
inc
sub
stos
xor
inc
add
sti
fadds
add
and
in
stc
notb
jg
dec
xor
adc
jp
inc
jge
adc
add
pushf
pop
sbb
mov
xchg
mov
add
rcrb
ss
outsl
push
dec
stos
jp
pop
jg
sti
jg
jp
cmc
xchg
pushf
mov
xchg
sarl
sub
and
sub
insb
or
sbb
int3
insl
add
popa
stos
out
inc
add
cs
cmp
sub
sub
cmc
in
pushf
sub
roll
add
cmpsb
inc
push
gs
popa
mov
cld
cltd
loope
jmp
fisubs
mov
imul
lods
pop
add
or
cmp
movsl
cmpsb
filds
xchg
insl
or
dec
je
ret
mov
pop
add
ss
jecxz
test
loop
out
loop
cmp
rolb
icebp
add
jmp
cli
sub
jnp
out
ret
out
push
lea
frstor
adc
repz
out
mov
les
test
xchg
sub
cmp
mov
mov
jns
jmp
mov
mov
push
lock
pop
xchg
inc
lods
mov
je
loop
push
ljmp
ja
add
das
sub
mov
imul
push
lahf
cmp
jns
xor
cltd
les
movsb
or
lock
sub
inc
pop
cmp
push
adc
and
lcall
push
aam
mov
add
jmp
or
gs
sti
orl
lret
mov
cmp
push
notl
xchg
nop
sbb
xchg
in
mov
dec
dec
test
xlat
jmp
cmp
sub
jnp
fucom
fldz
lcall
shlb
sub
dec
repnz
in
push
pop
divl
adcb
das
push
pop
aas
mov
and
xor
cmp
pop
das
scas
cwtl
sbb
mov
addl
test
sbb
or
xor
leave
mov
les
mov
mov
pop
pop
xchg
jg
adc
notb
jg
cmp
pop
sbb
sub
add
cltd
or
xchg
sbb
es
loopne
or
cmc
cltd
inc
cmpsb
stos
gs
push
cmpl
shlb
pop
icebp
sarl
and
out
mov
lret
repz
pushf
mov
or
or
test
push
sbb
popa
nop
inc
fistps
mov
xor
clc
hlt
lds
mov
push
push
out
inc
or
mov
pop
fidivrs
fisubl
add
add
fcmovu
dec
fcmovnb
gs
pushf
sub
add
dec
data16
adc
pushf
dec
pop
mov
xlat
jmp
xchg
sub
addr16
insb
scas
and
pop
sub
daa
shrb
mov
cmp
xchg
jp
sub
push
mov
and
jbe
cs
in
in
popa
xor
pop
jmp
enter
outsl
jns
cmp
pop
aad
push
int3
sub
fsubrp
stos
jnp
arpl
adc
push
cmp
mov
lcall
out
pop
mov
mov
enter
cmp
aaa
dec
or
js
int
lcall
sub
imul
dec
popa
dec
loop
cmp
repnz
add
pop
cmc
xor
test
cmc
or
in
mov
mov
orb
inc
mov
xlat
imul
sahf
mov
cmpl
add
jp
xor
in
push
test
gs
xchg
inc
cwtl
es
pop
push
dec
daa
mov
iret
xchg
mov
mov
in
mov
clc
std
inc
inc
je
mov
cmp
mov
aad
jg
mov
mov
mov
cmpl
fwait
inc
xlat
add
cmp
scas
in
ret
inc
dec
ficoml
in
jmp
jg
dec
in
cmp
mov
xor
fsubr
test
and
fidivrl
mov
mov
lret
mov
adc
fbld
push
aad
dec
and
ret
or
loop
lcall
mov
mov
add
pop
jno
jl
adc
sbb
dec
mov
mov
dec
icebp
shrl
pop
loopne
mov
outsl
rolb
leave
dec
lcall
cmp
mov
loope
insl
push
inc
lds
or
leave
fdivrl
or
fists
ss
adc
xchg
adc
sbb
adc
pop
lcall
adc
jecxz
jl
sub
xlat
hlt
pop
aad
pushl
sbb
cli
in
ffree
cltd
xchg
les
cmp
sbb
inc
mov
inc
pop
and
cld
or
adc
sbb
jns
add
jmp
ret
mov
dec
xchg
stos
call
dec
in
push
mov
pop
scas
mov
add
popf
iret
data16
push
clc
push
inc
xlat
lret
jno
cltd
aaa
adc
cmpsb
int
xchg
enter
cmovnp
pop
fcompl
dec
sbb
icebp
les
jo
jecxz
das
daa
mov
xor
rol
adc
ret
add
jl
inc
mov
or
xor
lret
addr16
cmp
int
jp
aad
xchg
in
lcall
ja
jae
mov
jnp
push
dec
leave
enter
jmp
iret
in
ret
or
or
fsub
outsl
imul
push
jnp
sub
mov
mov
outsb
mov
push
lods
loop
adc
loop
ret
and
pop
addr16
fcom
inc
mov
hlt
sub
pop
lea
sti
sbb
dec
push
roll
mov
inc
pop
mov
pop
add
arpl
add
or
test
add
aad
xchg
cwtl
lcall
mov
pop
mov
fldenv
movsb
fisubrl
fcompl
sbb
and
andb
xchg
fcoms
and
xor
pop
test
xchg
fwait
mov
mov
aaa
iret
fcmovnb
adc
jno
cs
xor
xchg
xor
lds
in
sub
mov
lea
dec
leave
mov
push
inc
xor
ja
dec
xchg
add
xchg
jb
add
inc
imulb
adc
mov
scas
sub
testl
and
xor
push
sbb
cmp
mov
dec
inc
dec
push
lods
sbb
inc
fbld
add
mov
fiaddl
push
sbb
cmpsb
into
insb
lahf
int
xchg
fnsave
call
push
and
mov
adc
fcomps
xchg
icebp
cmp
jb
fcomi
clc
sbb
movsl
gs
mov
fcompl
cmpsl
xchg
loope
dec
ljmp
bound
test
xchg
jp
xchg
jecxz
jno
jb
cmp
dec
pusha
xchg
rcl
jge
sub
xor
aaa
cmpsb
cmp
or
inc
int
adc
test
fcompl
add
pop
stos
inc
push
add
pop
add
loop
mov
jl
mov
fcompl
mov
enter
mov
leave
nop
push
cmp
and
daa
es
popa
pushf
jmp
push
mov
adc
enter
cmp
sub
cmp
arpl
lock
dec
lret
rcl
dec
mov
cmp
ret
ds
push
mov
add
mov
jb
loopne
inc
and
sti
mov
test
jecxz
push
add
xchg
dec
sahf
add
addr16
xchg
mov
rorb
mov
mov
lcall
sub
sti
adc
cltd
mov
mov
mov
fsubrs
outsb
addr16
aam
lret
push
jle
cmp
in
mov
sarb
cmp
in
mov
lret
out
adc
cs
xlat
insl
sub
leave
aad
call
arpl
loop
test
push
push
addr16
jbe
mov
xor
ljmp
sahf
sub
xchg
push
xchg
dec
shl
inc
pusha
dec
cmp
arpl
mov
das
mov
sbb
pop
sub
cmp
mov
fsubs
int3
xchg
and
jno
bound
scas
and
scas
pop
and
jns
into
mov
mov
je
mov
dec
jno
lods
mov
push
xchg
scas
cmpsb
je
ja
aad
add
pop
pusha
mov
in
insb
ret
mov
inc
adc
ret
or
notb
sbb
jl
aam
sub
push
jb
int3
cmc
mov
sub
pop
push
fisubrs
lods
repz
outsb
add
jmp
repz
or
sahf
pop
and
push
xor
outsb
cltd
jmp
push
inc
push
adc
xor
add
pop
adc
out
dec
outsb
daa
call
cmp
out
aas
or
mov
jb
pop
pop
les
lret
fldenv
dec
jl
adcl
dec
ja
cmpsb
sarl
lret
shl
movsb
push
jnp
fmuls
outsb
flds
jp
push
xlat
nop
ret
xchg
and
jns
mov
mov
lahf
push
les
xchg
imul
push
lds
aam
mov
jp
stos
fiaddl
mov
ja
push
or
or
inc
in
inc
repnz
xchg
mov
sub
gs
cmc
and
out
iret
arpl
and
into
sbb
stc
mov
insb
xor
cmp
bound
lds
pop
push
cmp
xor
xor
bound
mov
inc
xor
adc
idivb
mov
jl
sbb
imul
mov
pop
test
mov
or
jle
push
gs
punpckldq
adc
ret
xchg
pop
mov
mov
cmpb
mov
pop
dec
dec
pusha
das
push
clc
dec
sbb
xor
lret
jmp
adcl
mov
cmp
scas
sub
xchg
jmp
push
dec
mov
pushf
jl
in
lahf
mov
dec
and
sbb
icebp
dec
les
insl
xchg
fisttpll
mov
pop
xchg
xchg
xchg
push
xchg
fimull
pop
pop
mov
and
xlat
aam
repz
aas
cmpsb
int
in
xlat
push
mov
lock
cltd
pop
xor
in
xchg
cmp
imul
bound
mov
ds
fiaddl
shl
imul
cmp
pop
mov
mov
rol
mov
dec
lahf
push
lea
sbb
popf
clc
daa
dec
xor
mov
pop
and
mov
jge
psadbw
nop
aad
jp
fdivs
mov
pusha
and
popa
cltd
jae
push
lea
bound
gs
les
xchg
movsb
jl
jmp
data16
fiadds
and
out
ret
push
mov
adc
sub
xchg
mov
mov
shlb
sbb
out
jns
add
pop
or
lahf
add
mov
xchg
mov
inc
push
pop
xor
mov
lret
sub
sub
mov
enter
mov
jge
sbb
unpcklps
pminsw
jecxz
rcll
imul
pop
pop
and
dec
mov
in
out
mov
sub
inc
popf
fdivr
mov
xchg
push
add
mov
sti
test
inc
scas
mov
test
mov
fucomp
lcall
mov
jg
bound
mov
xchg
stc
pop
addr16
popa
dec
push
inc
inc
xor
pop
inc
repnz
jno
xor
xor
sbb
or
fmulp
and
hlt
fstl
add
call
pop
or
sub
sarl
loope
scas
and
subb
bnd
xor
test
mov
pop
orb
jmp
jge
pop
push
fistpll
pop
mov
data16
and
ret
nop
cmc
test
loopne
add
ret
int
pop
mov
push
inc
sub
jmp
adcl
mov
xchg
inc
pusha
test
adc
push
aaa
cmpsl
adc
sbb
push
jecxz
loop
sahf
xor
xor
xchg
pushw
mov
add
pop
es
in
dec
and
sbb
sub
xchg
cmp
daa
movsb
adc
cmp
jnp
repnz
pop
shl
insl
xor
stc
mov
outsb
pusha
fists
outsb
inc
in
push
test
test
insb
mov
addr16
inc
inc
sub
adc
adc
cmp
mov
mov
mov
movsb
sub
sbb
pop
addr16
jl
js
or
out
les
sub
fs
insl
in
jl
sub
push
xchg
gs
jl
pop
xchg
dec
jo
adc
int
mov
das
cmp
pop
push
add
sbb
pop
mov
adc
push
aaa
cmp
xlat
jns
lret
and
rclb
imul
loop
ljmp
aaa
add
out
inc
inc
pop
leave
pop
cmp
push
dec
ficoml
push
std
scas
sbb
cmp
arpl
ficoms
and
push
movsl
mov
or
adc
push
mov
inc
or
mov
push
jb
cmp
pop
pushf
or
fwait
iret
shl
ljmp
je
iret
mov
out
fnstenv
push
fcompl
or
dec
insb
pop
sbb
xchg
jae
shlb
test
jno
fcom
loop
pop
fisttps
sahf
add
cmpsl
sub
loop
movsl
jmp
shrb
lea
jae
sbb
ficoml
adc
push
sahf
icebp
adc
xor
sbb
aad
xchg
xchg
pop
aam
into
mov
push
cmp
push
push
das
sub
lcall
lds
iret
xor
rcrl
jnp
dec
shll
pop
sub
fsubr
leave
shlb
cmp
lret
jo
xchg
jl
inc
cltd
adc
sub
inc
in
pop
sbb
xchg
or
test
fdivrs
testl
and
rclb
jo
cmp
cmp
or
fisttps
out
cmc
adc
mov
sbb
push
shl
data16
and
mov
xor
int3
scas
or
loope
mov
insb
call
xor
jg
rol
ljmp
frstor
pop
push
lock
clc
es
add
sub
pop
gs
xorl
xchg
jecxz
outsb
or
mov
sbb
jns
xchg
mov
dec
inc
pop
xchg
fstpt
lock
rolb
stc
adc
and
xchg
ljmp
mov
mov
mov
or
leave
cmp
mov
dec
into
or
cmp
cld
mov
pop
sub
ja
cltd
dec
sub
lods
sbb
sbb
arpl
fldt
stos
or
iret
lods
fcoml
sbb
xor
mulb
stc
mov
dec
cwtl
test
test
ror
fs
fs
cmpsl
jp
insl
xorb
xor
in
in
out
push
ja
adc
jecxz
cmpsb
outsl
ficompl
inc
leave
test
lds
mov
and
imul
leavew
sbb
xor
mov
mov
jno
leave
and
mov
insb
in
jnp
xor
jo
dec
lods
mov
dec
mov
sti
dec
subl
pop
add
mov
pushf
or
push
add
mov
xor
sub
popf
dec
mov
adc
cmc
dec
push
sbb
das
movsl
stc
int3
pop
add
adc
jns
jae
jge
cmpsb
sbb
inc
xor
or
adc
loope
inc
pop
cltd
mov
call
lahf
lods
cli
xchg
adc
jle
add
cmpsl
inc
lcall
jmp
mov
lcall
xchg
std
aad
adc
vpunpckhdq
xor
cwtl
push
xlat
ljmp
bound
rol
lret
cmpl
xchg
cwtl
es
push
imul
mov
or
lret
mov
addl
add
jb
pusha
lods
aad
xor
inc
dec
clc
sbb
xchg
mov
jae
icebp
es
xor
andl
loop
push
in
mov
jnp
pop
cs
movl
add
ljmp
sbb
add
cmpsb
fistl
stc
mov
jmp
push
stos
lcall
cmp
ror
ret
movsl
lret
pop
or
int3
adc
je
fcmovbe
mov
jmp
inc
push
rolb
fsubl
cmpsb
dec
dec
lret
outsl
add
subb
or
push
push
xor
add
test
mov
int
dec
push
or
sub
cmp
shrd
insl
call
ffree
inc
repz
jmp
imul
gs
push
inc
adc
mov
pop
cmpxchg
cld
push
imul
push
push
cmc
or
cmc
mov
jae
push
loopne
pop
test
jne
sbb
and
das
cli
inc
stos
aaa
xchg
push
popa
bound
es
and
ret
mov
push
sahf
mov
loope
rorl
dec
push
adc
test
test
sbb
das
imul
daa
cmp
jbe
add
xlat
out
jbe
sarb
lret
test
lahf
inc
mov
daa
jns
xor
dec
enter
mov
push
pop
fistps
movsl
in
or
push
std
push
jne
xorb
or
lahf
or
fucomip
and
adcb
mov
test
dec
sarb
jae
and
adc
sti
fcoml
jb
gs
cwtl
add
adc
aad
sub
jns
sub
xchg
push
or
fcomps
rcrl
enter
mov
push
xchg
pop
incb
lret
lret
add
xchg
jecxz
stc
cli
and
icebp
adc
jmp
pop
xor
imul
add
jg
xor
rorl
syscall
subl
or
sbb
sbb
shlb
push
mov
aam
sbb
pop
out
aas
mov
xchg
push
out
ffreep
cvtps2pd
insl
jnp
cwtl
jp
je
movsb
insl
repz
and
popf
je
xor
mov
mov
ds
jg
loope
sub
sbb
pmuludq
jmp
xchg
movsb
sbb
pop
ds
pop
and
mov
bound
inc
into
ljmp
xorb
or
pop
and
add
pop
cmp
rolb
fldt
mov
push
push
mov
cltd
cwtl
mov
pop
popa
movsb
bnd
inc
cmpsb
movsb
lea
outsb
xchg
or
int
push
es
cmpb
test
jno
stc
insb
xor
mov
scas
mov
scas
add
mov
adc
and
sub
negb
and
sbb
fbstp
and
insl
adc
fdivs
movsl
xor
jne
mov
mov
pop
aaa
dec
push
mov
push
popa
mov
jl
rcr
mov
divb
and
aad
pop
push
pop
xchg
or
jbe
divl
aas
rorl
xchg
xlat
mov
pop
xchg
pop
sbb
sub
in
mov
sbb
aaa
jnp
adc
imul
jp
repz
pop
push
js
push
ja,pn
outsb
shll
cmpl
pop
push
dec
call
and
mov
and
shr
push
fsubrs
add
or
mov
es
test
inc
pop
movsb
lods
lcall
je
mov
hlt
cmpsb
inc
divb
sbb
popa
jmp
ret
mov
aaa
insb
imul
sub
inc
xlat
jmp
stos
lock
sbb
or
cmp
jno
pushf
fimuls
shlb
loop
movsl
adc
movsb
and
sub
xchg
sti
xor
in
ja
inc
dec
xor
fmulp
inc
jmp
cmp
outsb
mov
sbb
enter
shlb
popf
out
es
bnd
popa
push
push
js
jmp
jge
mov
ret
add
adc
cmp
push
or
loop
fs
dec
lcall
cmp
js
repnz
push
das
jo
imulb
push
and
mov
jmp
adc
and
mov
push
pop
lahf
push
push
and
xor
adc
jo
pop
push
das
faddl
cmp
push
or
fidivrs
into
icebp
inc
inc
jp
sub
popa
insl
icebp
jo
sbb
add
sbb
fisubs
jb
xchg
repnz
sbb
xor
lock
sub
push
rolb
shll
loope
test
repz
cmpsl
and
ret
repz
sub
cmp
cmp
scas
sahf
ds
loop
mov
mov
out
cmp
jp
xor
arpl
jnp
pop
dec
loop
sub
cmp
mov
cmpsl
jg
xor
push
jge
mov
jmp
or
inc
or
inc
movb
loope
xchg
or
ja
xor
std
imull
pop
ret
lock
cmpl
in
jecxz
into
stos
cmpsb
cwtl
jecxz
mov
sub
and
mov
loope
mov
movsb
cmp
push
lods
gs
in
adc
test
in
mov
jmp
leave
repz
clc
cmpb
cmp
ja
aam
add
lahf
xor
add
mov
pop
or
ja
test
dec
loope
xor
loopne
cmp
jmp
adc
cld
sbb
popa
in
leave
test
xor
bound
jne
sub
insb
imul
cmpsl
shll
movb
divl
das
inc
ss
xchg
cmp
fsubs
mov
cmp
jno
test
xchg
push
jg
leave
in
add
pop
in
adc
xchg
fisttpl
aas
sbb
and
pop
mov
ret
rolb
xchg
lahf
adc
rolb
add
xchg
repnz
repnz
outsl
push
andl
push
inc
sub
add
icebp
pop
add
mov
jge
jmp
and
pop
insb
inc
sbb
icebp
or
rcrl
xor
cmp
pop
pop
add
or
pop
mov
cld
xorl
xchg
xor
stos
pushf
in
je
cwtl
xor
pusha
xchg
loope
stos
fwait
js
push
repz
int3
sbb
xor
movsb
test
xor
xor
jmp
push
pusha
repz
pop
arpl
fidivrs
out
cmc
popa
paddsb
xor
stos
sbb
dec
stos
movb
push
inc
outsl
jns
push
in
xor
pop
clc
or
xchg
fidivl
xchg
divb
daa
jle
mov
cli
dec
sbbb
in
cld
push
lret
or
fbld
int3
sbb
cmp
inc
mov
xchg
orb
repz
ret
jmp
ret
push
xor
xor
mov
shlb
inc
push
jno
or
push
add
pop
fwait
sub
jmp
jmp
icebp
imul
add
ja
push
jl
sbb
daa
es
aad
xor
in
or
xor
test
dec
les
pop
mov
adc
ljmp
jne
stos
cmp
loope
mov
mov
je
mov
inc
jp
sub
out
int3
popa
out
adc
lock
fs
or
pop
lds
adc
int
fisubl
cltd
aaa
pop
rclb
pop
icebp
mov
es
sbb
dec
movsl
pop
cltd
pop
repnz
or
mov
insl
lea
decl
orb
push
cld
ret
lret
jb
and
jecxz
inc
outsb
ja
call
cmpsl
iret
mov
iret
insb
push
jno
pop
sub
inc
sbb
add
inc
pop
imul
jno
mov
cmp
scas
inc
clc
jmp
andl
push
jnp
pop
mov
mov
ficoml
clc
sub
dec
inc
push
shll
xchg
inc
mov
loop
rol
lret
in
dec
imul
xchg
xchg
out
inc
pop
add
loopne
inc
pop
mov
pop
pop
aas
leave
cmp
inc
sub
lret
adc
mov
and
bound
push
cs
imul
jmp
mov
cmp
inc
xchg
decl
leave
sub
js
push
sub
fcmovu
mov
sbb
inc
inc
movsl
pop
cwtl
imul
push
cltd
pop
cmpsl
sbb
xor
rcrl
popf
dec
jp
fisubl
sbbl
ret
mov
sub
xlat
idiv
divb
xlat
enter
ret
push
les
sub
aas
lret
push
js
mov
jne
inc
add
mov
and
xchg
orb
mov
jne
add
testl
nop
pushf
ds
fistpll
sbb
shll
dec
rcr
loopne
cltd
add
inc
jns
popf
into
hlt
mov
sahf
mov
daa
jns
scas
insl
push
xchg
imul
lret
std
decb
loopne
mov
lods
mov
mov
mulb
repz
fisttps
jg,pt
test
jecxz
cmp
gs
sarl
pop
push
ret
jno
jp
xchg
insb
adc
or
xor
jae
aad
sarl
mov
mov
push
aad
filds
ja
test
mov
sbb
add
add
fldenv
or
cwtl
dec
sub
inc
mov
or
dec
adc
shlb
jl
sbb
ffreep
imul
sbb
stc
or
push
lea
cld
sti
cmp
mov
ficoml
mov
mov
ficoml
sti
xchg
mov
or
rorb
pop
out
cwtl
into
push
xor
cmpsb
cld
outsb
bound
leave
lret
xchg
cltd
lahf
loopne
pop
jo
scas
or
push
test
pop
add
adc
test
push
pop
mov
lahf
push
leave
mov
js
jle
mov
mov
shll
pusha
popf
mov
popaw
scas
and
mov
add
mov
repz
std
imul
cli
movsl
cmpsb
test
enter
sbb
mov
cmc
mov
fldl
sub
inc
rcrl
pushf
pushf
mov
scas
insl
cmp
mov
jp
sbb
mov
jecxz
sti
ja
pop
stc
in
fisubrs
push
ss
pop
cld
sti
je
jp
lret
js
gs
inc
pop
adc
inc
leave
test
sbb
xor
mov
hlt
inc
iret
add
mov
es
xchg
sar
insb
fsubs
fadds
inc
jl,pn
nop
clc
mov
push
fadds
or
mov
mov
adc
xchg
arpl
divb
es
and
mov
addr16
xor
pop
mulb
jp
jno
add
sarl
mov
push
ds
fildll
out
and
mov
pop
sbb
ljmp
mov
outsb
adc
out
loop
jo
or
call
jecxz
xor
and
orb
dec
mov
sub
test
xor
hlt
add
arpl
aas
pop
int
in
xchg
jo
js
movsl
ja
imul
lret
ja
popa
gs
ret
fstpl
xchg
movsb
adc
jecxz
ss
mov
lock
and
lock
dec
enter
cs
fld1
js
xor
lcall
aas
jno
sub
mov
lods
xchg
xor
sub
mov
xchg
aas
inc
pop
adc
xchg
out
les
and
mulb
gs
xor
adc
ror
repz
push
push
lock
mov
or
sub
das
hlt
sbb
inc
imul
inc
push
in
inc
mov
mov
cmp
pusha
std
inc
inc
mov
insl
cmp
out
mov
cmp
push
add
cmpb
cld
dec
inc
leave
xchg
dec
lds
orb
push
adc
imul
sub
into
inc
loop
mov
add
dec
in
psadbw
les
fiadds
mov
dec
and
xor
sahf
repnz
test
sahf
les
push
adc
mov
xor
xor
pop
ja
push
cli
mov
mov
repz
sbb
lret
js
out
daa
sbb
xchg
xchg
iret
imul
mov
push
push
test
clc
test
in
sbb
cwtl
pushf
in
pop
push
or
push
movsb
mov
lods
hlt
daa
adc
mov
rcrl
mov
pop
inc
jle
jns
scas
pop
push
and
jnp
mov
mov
out
jne
scas
lods
test
mov
fidivl
pop
or
sbb
push
clc
mov
subb
lea
sti
mov
mov
test
jno
cmp
xchg
nop
loopne
mov
jg
repnz
push
cmc
repnz
pop
inc
xchg
in
push
les
lcall
clc
orl
je
push
jl
mov
sahf
repnz
test
sahf
les
inc
adc
mov
flds
sub
int
sti
inc
adc
inc
adc
mov
cmp
jp
pop
pop
leave
jbe
or
xchg
xor
add
jns
leave
rcr
std
pop
push
lods
mov
pop
out
pop
push
test
pop
clc
mov
sub
jl
dec
jno
adc
dec
outsl
sti
pusha
out
cmp
fadds
daa
pop
ds
mov
loop
adc
test
xchg
imul
mov
jo
out
clc
cltd
adc
push
mov
cmp
loop
flds
mov
sbb
cs
shl
mov
cmp
xor
test
mov
push
push
loopne
nop
sub
add
movsb
lcall
push
lret
aam
pop
inc
cmpsb
les
insb
test
adc
and
sub
call
mov
fisttpll
jge
mov
lahf
scas
lahf
mov
mov
cmpb
xchg
inc
push
ret
movsl
popf
cmp
popf
movsl
jp
shl
ljmp
dec
add
jae
jns
lcall
or
mov
push
fistps
xchg
inc
lods
lea
add
sbb
stc
cmp
in
lret
daa
cmpsl
cmpsb
push
lods
repz
in
incb
mov
pop
daa
stc
call
lret
cmpsl
add
or
inc
jo
cmp
cmp
dec
mov
in
mov
mov
xchg
dec
mov
icebp
mov
cmp
lods
shll
mov
sub
xchg
aam
cmp
imul
dec
mov
add
inc
sbb
loope
push
inc
imul
loope
stc
cmp
or
int
fucomi
inc
lahf
in
push
adcb
fsubp
pop
adc
jmp
jne
cltd
sbb
into
js
mov
test
mov
pop
jae
mov
pop
xchg
les
sti
inc
lock
jmp
hlt
fucomi
ljmp
into
jl
fstpl
xor
js
hlt
cmp
movl
bound
push
push
test
aas
outsl
mov
test
mov
mov
in
int3
jae
mov
popa
cltd
jp
filds
imul
or
sub
push
bound
xchg
stos
fldt
mov
adc
dec
mov
dec
push
adc
pop
push
mov
mov
sbb
mov
sbb
adc
in
cmp
cmp
mov
jb
mov
lea
jb
fstpl
and
lret
mov
aas
fs
jg
rcrb
cmc
ret
jp
mov
lea
in
mov
cmp
js
les
dec
outsb
movb
outsb
push
or
dec
daa
xchg
in
mov
bsf
inc
xchg
mov
das
in
insl
mov
jmp
lds
xchg
popa
pushf
xchg
ss
aam
imul
dec
test
push
cmp
sub
cmp
mov
in
and
aas
add
andb
sar
les
pusha
adc
into
sub
popa
push
insl
cmp
mov
mov
repnz
or
jecxz
mov
xchg
imul
in
mov
and
cmp
aas
mov
sbb
cmp
adc
xchg
popa
js
cmp
outsl
pushl
jmp
shlb
mov
stos
aas
in
add
dec
pop
push
adc
jl
jnp
dec
in
lods
or
enter
inc
mov
in
push
mov
cmpsb
push
xchg
rorb
loopne
adc
stos
int
dec
lret
aam
cmp
mov
cmp
lahf
mov
das
jns
sahf
hlt
fadd
or
push
std
xor
push
jne
mov
insb
jg
adc
cmp
xchg
fnsave
mov
addb
bound
jbe,pt
pop
push
cmpsl
inc
js
jno
push
test
push
push
and
pop
lea
rcl
push
mov
loopne
cs
xor
scas
inc
add
push
inc
aad
xchg
jb
or
fwait
add
into
loope
dec
iret
or
leave
jb
movsbl
sub
adc
push
mov
fcompl
ds
cmpsl
idivb
xchg
repz
and
push
jo
xchg
dec
push
or
lods
push
imulb
popf
jb
cwtl
in
or
loopne
imul
inc
pusha
mov
sub
std
sbb
lods
in
mov
hlt
or
pop
push
or
in
sbb
xor
adc
dec
into
roll
jl
movsl
punpckhdq
fadd
mov
sbb
mov
insb
ret
in
fsubr
mov
sarl
pop
movsb
jp
mov
js
mov
xchg
loope
sbb
sbb
and
cmpsl
dec
not
ror
add
sahf
test
inc
in
push
and
dec
popf
pop
sub
fwait
fwait
mov
nop
lds
adc
stc
inc
inc
mov
inc
sahf
icebp
test
das
add
in
inc
repnz
lret
jns
add
orb
xchg
mov
xorb
mov
clc
loop
out
pop
sub
cmp
xor
or
cmpsl
push
add
pop
ret
insl
jp
stos
pop
dec
mov
cmp
inc
and
in
pop
sub
and
push
xchg
push
dec
call
hlt
push
jge
out
xchg
mov
mov
shrl
aaa
ror
ja
dec
pop
or
rcrl
pop
jge
stos
sub
mov
jo
les
cltd
or
mov
inc
pop
scas
stc
out
fxch
repnz
test
mov
adc
jp
xchg
mov
jae
incl
mov
push
sub
test
and
in
mov
scas
call
shrb
xchg
or
mov
pop
js
lods
dec
xchg
sub
sub
pop
inc
jg
push
sub
pop
arpl
push
cs
jle
shll
jp
xchg
cltd
shll
add
mov
push
pop
jle
inc
and
jge
aaa
sub
or
rorl
sub
pop
sub
in
cltd
loope
sbb
les
push
pop
out
sub
xchg
add
pop
shld
fst
stos
push
idivl
mulb
jbe
cwtl
jbe
mov
xor
and
and
inc
push
cmp
test
mov
fs
hlt
sbb
js
xor
into
stos
cli
mov
pop
push
pop
or
clc
mov
jp
repz
in
fcmovu
test
and
loope
sub
mov
add
inc
inc
lcall
mov
cmpsl
sahf
inc
or
fwait
adc
sub
pop
add
stc
jns
insl
mov
es
cmpsl
mov
mov
in
stc
sbb
fisttpl
push
cmp
pushf
jg
mov
add
popa
jnp
fcomip
pop
add
sbb
push
mov
push
pop
inc
popf
outsl
mov
push
adc
cmp
arpl
push
xchg
sbb
mov
mov
insb
mov
push
cld
gs
popf
fimuls
idivb
xor
adc
pop
loop
jmp
dec
jp
fsubl
cmpsl
or
ffreep
jbe
pop
inc
cmp
xlat
pop
pusha
xor
hlt
cmp
xor
test
pop
pop
imul
mov
or
shl
sbb
mov
and
dec
xchg
xchg
loopne
in
mov
pop
loopne
mov
push
mov
mov
jp
jp
and
lahf
jl
lahf
mov
lods
push
or
sahf
sbb
push
popa
jge
sub
pusha
fstl
fisttpl
cmpsl
and
test
mov
jns
push
cmpsl
inc
mov
sbb
mov
adc
sub
xchg
pop
mov
imulb
push
sbb
push
out
pop
es
mov
lcall
xchg
cmpsl
jns
loopne
dec
jge
movsb
jl
outsb
mov
sbbl
xor
test
aad
insb
dec
repz
pop
push
ret
daa
sub
mov
mov
ljmp
add
loopne
push
dec
in
rcll
jno
adcl
aam
pop
pop
fisttps
jp
shl
and
cmp
movsl
xchg
jle
push
test
jmp
inc
xchg
es
and
sbb
push
dec
jae
mov
or
shr
das
sub
mov
inc
dec
int3
cmp
or
mov
pop
or
js
adc
into
lods
push
dec
inc
pop
push
movsb
popa
sub
jbe
ret
adc
outsb
rolb
dec
mov
pop
jb
jecxz
mov
pop
rol
push
pushf
cwtl
pop
fistps
into
mov
jmp
dec
fwait
sti
lahf
jecxz
in
inc
stos
inc
add
int
jb
imul
xor
fdivrp
jecxz
dec
scas
ds
push
xlat
addl
mov
pop
fmulp
aad
imul
cli
int
mov
dec
push
jp
pop
cmp
inc
xchg
or
or
sbbb
xlat
sbb
repz
jo
lock
sbb
rclb
mov
pop
pop
call
incl
cs
in
sub
lahf
xchg
push
push
jg
cs
cld
mov
push
sbb
jne
out
das
mov
mov
jo
sahf
or
or
xchg
mov
push
push
push
pop
sbb
mov
cltd
sbb
adc
mov
mov
pop
hlt
nop
sbb
push
pop
inc
lcall
test
sub
sub
or
in
xchg
xchg
daa
inc
ja
addr16
pop
es
arpl
add
lret
lret
lods
mov
es
lret
push
outsl
and
out
flds
repz
jne
sbb
push
xor
outsl
dec
cwtl
sarl
adc
rcll
fisubl
mov
sbb
push
cmp
test
and
xchg
inc
and
xchg
adc
repnz
pop
popl
sub
pop
adc
movsb
cmp
xchg
xchg
rorb
inc
add
out
sbb
add
push
shll
pop
sub
xchg
pop
jae
nop
fwait
movsl
loop
mov
inc
mov
and
sahf
jge
fwait
mov
sahf
fidivl
lret
mov
sarl
stos
dec
bound
outsb
addr16
jb
add
and
push
add
cmp
xor
or
imul
arpl
ljmp
inc
mov
adc
into
sub
and
das
bound
mov
outsb
xor
call
mov
mov
std
clc
cmp
das
jle
mov
dec
cmp
adc
xorb
in
scas
mov
int
int
inc
hlt
mov
dec
bound
jle
jge
leave
movsb
mov
aas
loope
dec
xor
bound
mov
or
push
inc
repnz
popf
xor
push
xor
mov
cld
test
enter
cmpsb
cmp
dec
mov
or
bnd
add
sub
lret
sub
stos
loopne
cmpsb
gs
dec
adc
or
scas
enter
jmp
xchg
iret
popf
mov
adc
inc
sbb
dec
ficomps
inc
jno
pop
repnz
sbb
div
adc
lds
ret
clc
gs
push
cltd
fdivl
popa
testb
pop
sub
xlat
add
jns
imul
jb
inc
into
ja
dec
inc
adc
cmp
xor
sub
push
std
inc
clc
in
lock
cmpsl
jg
jmp
mov
fnstenv
scas
sbb
or
cmp
fidivl
inc
push
pop
insb
call
inc
pop
in
and
pop
mov
lcall
call
add
aas
xor
add
test
push
jae
out
sub
test
push
scas
add
loope
and
jns
pop
mov
fwait
adc
and
xchg
pop
rsm
fsubrl
sbb
mov
rcl
sub
push
pop
dec
jo
repnz
fcmovu
mov
jle
leave
neg
enter
loopnew
clc
pop
outsl
xchg
pusha
mov
mov
inc
or
js
in
xchg
mov
mov
fs
cmpsl
adc
jl
outsb
sti
push
xchg
cli
lods
sub
repnz
pop
mov
jae
fistpll
xchg
xchg
xor
rclb
mov
arpl
jns
sbb
pop
sbb
das
movsl
sub
pop
mov
xchg
inc
in
sub
push
or
or
repnz
mov
outsb
xchg
lret
add
popa
shlb
xchg
xchg
ds
or
fidivrs
cmpsb
inc
inc
fwait
es
aam
xchg
pushf
out
fwait
lea
jge
mov
xchg
shll
mov
ds
data16
cmpsl
cli
iret
jge
inc
lods
rol
idivb
xor
and
clc
mov
mov
pop
das
sbb
adc
cld
jb
sbb
inc
scas
enter
cwtl
or
daa
sbb
push
sahf
shlb
ret
rcrb
jge
loop
adc
xchg
inc
add
and
xor
pop
or
aaa
pop
adc
decb
pop
mov
clc
dec
dec
pop
mov
jg
incb
adc
xchg
sbb
xor
lods
cmp
scas
inc
and
gs
mov
test
mov
aas
loop
cmp
xchg
jge
sbb
jge
pop
lcall
mov
sbb
mov
sbb
xor
xor
popa
push
fdecstp
and
xchg
mov
icebp
xchg
out
and
sbb
punpckhdq
adc
mov
les
fidivl
arpl
cmp
pop
or
pop
jg
xor
jns
ss
adc
mov
fsubs
inc
xchg
xchg
fidivs
pushf
out
and
mov
xchg
add
lret
or
xchg
push
lcall
repz
imul
std
test
add
out
and
sbb
dec
mov
outsb
pusha
mov
mov
add
jl
pushf
stos
lods
sbb
fistps
mov
ljmp
cli
sub
cltd
and
hlt
xor
pop
xchg
loop
inc
stc
and
mov
sub
xor
ret
xchg
xchg
push
adcl
out
sahf
insl
or
fisubrl
cld
sbb
lods
push
popf
scas
pop
dec
lcall
lds
cmp
push
xchg
sub
pop
pop
jp
int3
push
call
sbb
push
pop
aad
mov
add
dec
adc
loope
pop
jg
or
aaa
adc
xchg
in
xchg
lods
dec
hlt
fmulp
aas
mov
jmp
inc
nop
es
add
pop
inc
mov
cmpsl
xchg
sbb
mov
inc
xchg
inc
pcmpeqw
xchg
cmp
jecxz
sti
enter
and
mov
mov
inc
dec
lea
mov
mov
popf
xchg
mulb
jbe
xchg
out
es
mov
fs
enter
inc
or
and
sbbb
cmp
in
pop
jbe
mov
loop
mov
out
mov
or
test
adc
inc
sti
pop
pop
add
xor
dec
rep
les
test
insb
scas
aas
rcrl
cwtl
shll
lods
add
rorb
or
lret
push
jl
das
mov
sub
add
sbb
into
pop
fiaddl
pop
dec
cmp
inc
dec
cmp
mov
adc
jo
int
dec
xchg
jae
dec
add
imulb
dec
mov
mov
sbb
cmc
mov
out
fcomps
xchg
int3
mov
jns
or
mov
mov
cmp
sbb
test
repz
sbb
sub
xchg
jecxz
aam
lret
stos
fsub
pop
ds
or
mov
mov
sub
fdivs
mov
stc
xor
sub
dec
fwait
jae
sbb
add
xor
insb
push
fiadds
shl
sub
adc
sub
nop
jbe
sbb
dec
ljmp
clc
ss
sarl
pop
stc
adc
je
lock
fsts
shll
mov
dec
mov
jecxz
sahf
or
test
stos
push
and
dec
push
cmp
es
rcl
test
test
jle
inc
push
jg
inc
movsb
in
pushf
mov
jmp
das
jge,pn
sbb
add
sbb
out
mov
movsb
bound
out
aas
mov
jne
out
dec
or
push
jecxz
mov
sbb
ret
xchg
and
sbb
jbe
push
jle
and
add
bound
inc
lea
inc
xor
lea
jmp
cmp
inc
cwtl
scas
mov
sbb
or
les
mov
jbe
shrl
jg
xchg
add
loope
jbe
inc
mov
test
ss
jge
shll
or
cmp
in
cmpsb
lds
js
jns
dec
scas
push
je
cs
mov
pop
call
push
mov
sbb
imul
loopne
mov
int
xor
sub
lods
adc
hlt
cmpsb
sbb
popa
cmp
sub
les
out
incb
sbb
pop
xlat
sub
repnz
push
mov
aas
dec
mov
aad
cld
adcl
jp
pop
lea
push
mov
pusha
scas
xor
mov
lock
in
jnp
movsb
call
fcmovnb
mov
mov
xchg
ds
call
fiadds
pop
cmc
out
das
in
mov
or
cld
mov
lcall
fcompl
mov
in
dec
sub
sub
in
sti
jns
push
je
sarl
stos
xchg
dec
clc
sbb
decl
sarb
js
lods
jne
daa
je
outsb
in
sbb
movq
jp
inc
jg
jno
sub
jg
mov
fsubrp
iret
jno
cmp
popf
mov
mov
pop
outsl
or
mulb
in
inc
xchg
ret
pushf
stos
orb
cld
sbb
push
jmp
pop
sub
xchg
lock
stos
stos
inc
scas
xchg
in
push
setne
mov
inc
es
inc
nop
and
stos
fs
inc
clc
test
add
addl
cmp
outsl
jns
cmp
xchg
mov
or
daa
movsb
adc
sub
shlb
xchg
mov
vpsubd
adc
jae
pop
insb
hlt
test
popa
lods
ss
xlat
mov
cltd
pop
cs
cld
push
lcall
pop
mov
repz
aam
pop
xor
and
cltd
cli
mov
leave
push
cmp
cmp
jb
cmp
push
int
xchg
push
push
scas
stos
nop
add
mov
adc
inc
inc
xchg
ja
mov
addb
push
inc
in
imul
mov
dec
stos
jge
stos
andb
rolb
nop
cmp
scas
cmpsl
and
sarl
or
scas
mov
fldt
or
lods
cwtl
adc
cmp
xor
aas
xchg
pusha
push
leave
pop
dec
sti
xor
aaa
iret
or
sbb
imul
push
add
out
jno
cmpsl
inc
inc
test
inc
mov
push
ljmp
push
inc
xchg
push
jmp
cmp
pop
in
rcrl
and
xor
cs
and
mov
push
xor
inc
pop
shll
jnp
clc
pusha
in
xchg
mul
gs
icebp
adc
leave
jle
xchg
mov
push
ficoml
mull
test
pop
lahf
or
fdivrs
adc
or
imul
xlat
mov
xchg
push
xchg
xchg
lds
xor
hlt
or
xchg
xchg
adc
dec
in
and
int
adc
fiadds
cmp
push
mov
bound
dec
mov
mov
adc
mov
mov
lods
adc
shll
stos
scas
inc
adc
sub
je
orl
aaa
cmovp
leave
xor
pushf
enter
cltd
pusha
adc
push
incb
cmp
cwtl
add
lds
dec
inc
ss
mov
addl
fsubl
rolb
mov
gs
insb
xor
and
icebp
imull
xchg
push
daa
smsw
mov
bound
mov
andl
dec
pop
cs
lcall
fadds
pusha
mov
inc
popf
call
xor
js
mov
mov
call
into
cwtl
or
shrl
push
out
clc
test
lret
int
cmpsb
cmpsl
sbbb
sbb
ljmp
lret
and
das
hlt
sub
rolb
xchg
outsb
lods
hlt
jmp
cmp
xchg
adc
xor
test
cmp
cmpsb
ret
insl
stos
xor
and
fimull
mov
jo
jo
xor
add
ljmp
or
cmp
leavew
rcl
ljmp
lods
pusha
jbe
inc
add
mov
cmp
and
or
ja
dec
pop
lock
in
adc
xor
dec
in
scas
lods
fcompl
loop
mov
loopne
shll
jp
mov
add
addr16
test
rcll
mov
push
sahf
pop
pop
sub
jl
rclb
sbb
adc
inc
insb
gs
mov
jbe
mov
clc
inc
fldt
les
cmp
mov
ja
pop
sbb
imul
stos
inc
scas
js
movsl
cmpsl
rclb
rolb
ja
not
push
pop
xchg
sbb
andb
jnp
mov
mov
adc
imul
push
rorb
shlb
xchg
es
push
xor
pop
inc
xchg
gs
inc
in
cmp
jne
mov
daa
sar
nop
popa
adc
test
into
push
cmp
int3
sub
and
lahf
fiadds
mov
sti
pop
xlat
sub
and
jae
cli
imul
mov
xor
mov
mov
and
cmp
jge
es
dec
iret
push
xor
mov
hlt
jecxz
mov
insl
ja
jb
fiaddl
outsb
hlt
aam
sub
xchg
aaa
jmp
scas
jge
and
xor
sub
or
dec
lock
stc
lret
dec
push
mov
lret
rcl
scas
test
push
roll
jle
movsl
mov
inc
insb
fcoml
dec
lock
outsl
and
ret
dec
int3
push
mov
fistpll
jo
and
xchg
mov
xchg
and
les
mov
mov
and
adc
pusha
adc
frstor
loop
jno
adc
out
loop
cmp
add
cmp
fimull
cmpsl
inc
fs
arpl
stos
fldcw
sbb
sub
hlt
push
testl
repz
in
scas
movsl
cmp
push
cmp
jle
xchg
mov
xor
pop
add
mov
dec
pcmpeqd
cwtl
push
cmc
int3
push
jmp
lcall
push
sarb
ja
and
pusha
les
sub
and
cld
andl
clc
inc
stos
xchg
xchg
ret
push
sbb
jo
lods
in
push
or
lock
ds
xor
pop
sahf
push
outsb
movsb
adc
in
push
in
mov
movlhps
je
in
jg
lret
cmc
dec
test
fwait
fwait
mov
cs
add
mov
cwtl
and
lods
in
repz
aad
mov
in
cltd
xchg
inc
ss
jo
das
jno
or
lods
xor
cmp
cmp
ret
test
and
lret
xchg
insl
arpl
aad
lods
daa
mov
jo
and
mov
pop
test
aas
mov
sub
or
or
das
sub
lcall
insb
loope
popa
mov
sbb
xor
mov
push
add
mov
ret
and
xchg
sub
ja
fcomp
pop
pop
jno
loop
xchg
sbb
fs
out
cmp
int3
xchg
jl
sub
das
dec
xchg
fwait
test
sbb
icebp
add
mov
in
adc
mov
lods
outsb
int
pop
es
scas
push
mov
std
mov
das
add
mov
fstl
sub
push
xor
mov
cmpsb
pop
or
fbstp
hlt
add
sub
stos
mov
scas
inc
xor
jno
jp
sub
loopne
les
mov
sub
mov
ret
jbe
mov
cmpsb
cld
dec
mov
dec
jo
mov
aas
or
repz
fwait
dec
mov
stos
jo
jl
rolb
fcmovnu
icebp
roll
leave
les
iret
mov
pop
movsb
call
cmpsl
xchg
mov
inc
test
cmp
mov
or
cld
inc
ss
fstps
imul
add
fistpll
sbb
mov
pop
nop
cs
lcall
lcall
xchg
adc
mov
pop
cmp
mov
lcall
ret
push
dec
mov
cmpsb
mov
inc
xchg
pop
daa
imul
push
icebp
popf
aas
dec
xchg
ds
data16
add
mov
push
movsl
in
scas
push
mov
or
aaa
cmp
add
sub
push
pop
into
shll
adc
shrb
pop
sbb
std
es
icebp
mov
repz
xchg
jbe
xchg
cwtl
push
stos
xor
hlt
lret
or
pop
dec
cmpsb
fcmovnu
adc
movsl
insb
insb
into
add
push
jg
js
in
lret
int
adc
mov
jg
push
and
xchg
cmpsb
add
and
mov
pop
into
dec
mov
dec
add
push
and
arpl
jo
mov
lods
fwait
test
jae
mov
inc
add
add
dec
xlat
push
das
sbb
ret
xchg
cmpsl
mov
or
mov
xor
or
mov
xlat
xchg
xchg
mov
loope
jle
repnz
mov
aad
sbb
pshufw
lret
je
sahf
or
sub
push
sbb
mov
jp
popa
pop
out
add
mov
and
lret
adc
cmpsl
xchg
push
mov
pop
stc
jecxz
jne
push
add
jp
or
add
cmpsb
jmp
jne
jns
xor
xchg
fcomps
idivb
or
test
pop
xchg
cmc
push
orb
insl
orl
mov
aas
imul
dec
stos
hlt
jo
adc
test
jg
into
xchg
test
adc
adc
lea
jb
xchg
cmpsb
dec
mov
test
adc
mov
rcll
cld
add
mov
mov
imul
and
push
mov
cs
sbb
adc
jb
xor
mov
lret
lea
xor
push
nop
sub
sub
xchg
push
fdivl
add
mov
or
mov
fsubr
out
pop
mov
adc
mov
fisubl
push
out
mov
icebp
push
pop
ds
rcll
or
mov
pop
js
xchg
add
jmp
loope
cmp
pop
lret
ret
cmp
and
and
call
loopne
insb
push
inc
stos
push
arpl
lods
pop
test
mov
stc
sbb
dec
cmp
jns
xchg
mov
call
test
addr16
repz
sti
in
add
test
jge
cwtl
push
mov
add
inc
mov
or
mov
xor
imul
imul
cltd
cltd
cmc
movsb
pop
mov
out
push
mov
sbb
mov
mov
out
jne
adc
add
xchg
shr
popf
lahf
fimuls
mov
dec
xor
int
or
pop
push
repz
mov
pop
jo
inc
clc
jle
imul
ljmp
dec
sub
inc
or
sbb
xor
lret
inc
fisubl
je
mov
mov
fstpl
jmp
and
sub
pushf
and
jl
and
cmc
xor
push
aaa
dec
mov
lods
xchg
dec
mov
inc
inc
and
jns
cld
icebp
fisubrs
push
pop
lea
repz
and
dec
add
stos
aam
push
bound
mov
cltd
cmc
jns
cmp
xchg
rcrl
sbb
subl
mov
push
test
gs
add
or
xchg
cmpsl
sub
xor
test
int3
pop
loope
or
mov
cmp
lcall
dec
jnp
rorl
mov
inc
mov
ror
jp
pusha
pop
loope
mov
mov
cmc
shrl
jo
pop
cli
sub
rorl
jl
lods
sub
pop
adc
std
xchg
outsb
inc
or
pop
xor
sbb
out
movsb
popf
sbb
cmpsl
mov
stc
std
pop
into
lahf
je
mov
pop
sub
cmpsl
mov
xchg
push
imul
push
jp
lret
rcrl
xchg
arpl
jecxz
sbb
cwtl
xlat
dec
insb
mov
xor
imul
add
add
cld
mov
or
push
mov
fisttpll
add
mov
inc
mov
fwait
mov
in
dec
mov
push
add
push
fsubp
shl
jl
in
inc
or
fninit
and
jle
jno
add
sub
and
push
or
xor
cwtl
lods
mov
xor
mov
mov
mov
sbb
xchg
idivb
dec
push
pop
xor
pop
or
mov
mov
mov
je
fwait
out
inc
adc
and
aaa
sarl
lds
je,pt
push
ljmp
fwait
dec
xchg
xchg
das
inc
ficomps
sub
iret
xchg
scas
sti
jmp
push
inc
mov
cmp
mov
fistps
stos
imul
sub
ror
aas
sarb
repnz
mov
xor
pop
mov
or
aam
outsb
outsl
jo,pt
push
jle
and
pop
dec
imul
bound
fmull
sub
cwtl
lock
cmp
sahf
cmp
pop
cld
sarl
xor
xchg
addl
fstpl
pop
and
pop
mov
xchg
cld
mov
sbb
fs
push
sbb
sbb
int
iret
bound
and
dec
out
out
mov
or
add
inc
push
xor
mov
push
inc
dec
repnz
fwait
mov
and
xorb
cmp
xor
cmp
and
pop
int
and
cmp
clc
sbb
or
cltd
cmp
call
das
in
dec
outsb
inc
cmp
push
lret
cltd
mov
mov
xchg
cltd
cmpsl
and
fadds
and
scas
daa
frstor
out
repz
mov
mov
push
xchg
dec
and
jge
cli
jnp
inc
shll
cmpsb
fs
jo
add
add
pusha
int
lods
inc
inc
arpl
push
inc
jl
insl
lcall
out
aad
sahf
mov
fnstenv
dec
and
fsubl
add
pop
in
fstl
xor
mov
fmulp
scas
push
ret
sahf
cmp
xchg
push
arpl
int
add
test
in
and
pop
and
mov
aam
push
mov
stos
iret
inc
dec
les
in
mov
jle
ror
loope
test
mov
adc
sub
adc
pushf
fcomps
inc
sti
pop
arpl
dec
out
pop
mov
mov
sbb
data16
push
out
call
in
and
sbbb
inc
mov
mov
push
ret
and
jo
fdivrl
jle
sub
mov
mov
xlat
loope
cmp
fildll
fdivrs
fiaddl
loop
enter
mov
imul
xchg
int
stos
and
cltd
jmp
jno
lods
mov
les
loope
xor
adc
sahf
test
pushf
stos
push
jne
movsb
xchg
jecxz
daa
xor
sbb
cmp
add
mov
mov
jecxz
orl
pop
std
dec
push
cmp
pop
pop
out
cmp
scas
lret
inc
inc
out
push
add
pop
mov
or
gs
sub
sub
adc
filds
jo
cmpsl
addr16
lock
dec
jmp
js
pop
mov
jns
fsubrs
mov
jmp
dec
dec
into
mov
xchg
ret
leave
cli
xchg
mov
div
imul
imul
imull
jns
adc
xlat
sub
add
aas
and
lcall
xchg
jge
ljmp
rcl
repz
loope
pop
add
popf
loopne
ret
jmp
mov
push
xor
out
loope
jl
push
sahf
ret
in
int
jnp
in
mov
fs
scas
movsl
jbe
xorb
hlt
mov
mov
mov
pop
and
arpl
mov
pop
mov
cmp
sbb
or
insb
mov
push
popf
push
scas
iret
push
popa
pop
movsl
sti
inc
dec
mov
dec
out
mov
mov
dec
dec
push
out
or
push
xorb
test
pop
popa
jbe
dec
movsb
jp
sbb
test
jns
insl
fcmovbe
xchg
inc
or
dec
push
cwtl
mov
or
cmp
and
hlt
int
mov
addr16
cli
or
cmpb
test
pop
xchg
jmp
mov
andb
shrb
push
sub
pop
jge
bound
cmp
pop
lret
dec
stc
addr16
es
inc
shl
negl
jp
aaa
sbb
xchg
stos
int
fisttpll
push
mov
mov
mov
push
lcall
icebp
pop
stos
lahf
call
sbb
jge
lods
fs
shrl
inc
sbb
pop
cmp
mov
push
in
call
mov
inc
xchg
sbbl
mov
dec
adc
loop
xor
aad
ljmp
xchg
rcrl
mov
sbb
add
lret
push
mov
stc
cmp
movsb
jnp
cmc
fmuls
dec
in
sub
sbb
mov
ljmp
aaa
add
sbb
cwtl
mov
or
or
cmc
pusha
pop
ret
jg
insl
inc
loop
jg
push
loopne
loope
add
mov
gs
xor
pop
adc
fwait
add
cmpsl
sbb
sahf
mov
aam
jae
cs
adc
enter
adc
aam
sub
lods
lods
inc
mov
xchg
ljmp
xchg
outsb
inc
fwait
dec
jbe
jno
pop
sbb
insl
push
xor
pop
int3
repz
jb
xchg
push
push
and
pop
in
push
pop
mov
add
mov
xchg
sbb
dec
mov
pop
sbb
shll
pop
cmpsb
adc
dec
imul
inc
pop
ds
lahf
sbb
mov
xor
xor
add
ror
stc
jns
scas
inc
and
xor
sti
bound
or
push
jae
adc
sti
outsl
jle
or
push
in
or
mov
inc
stc
add
cmp
arpl
sbb
idivl
repnz
adc
cmp
leave
or
cltd
jne
and
ja
mov
loop
lahf
inc
sbb
xchg
or
mov
adc
in
lret
jbe
cltd
or
imul
stos
cmp
popa
aad
push
lcall
sub
sarl
gs
in
jo
and
out
in
imul
push
movsl
jo
adc
mov
cltd
mov
into
fisttps
pop
ds
xorb
pop
pop
mov
lcall
sub
rcll
inc
cld
testl
test
and
push
adc
outsb
inc
xchg
jecxz
jno
iret
dec
push
andb
call
test
leave
push
push
jmp
xor
out
or
adc
xchg
push
outsb
push
in
push
das
loopne
xchg
hlt
pop
jg
xchg
test
xorl
cmp
and
inc
rcrb
hlt
push
mov
inc
xchg
cmp
sbb
sub
sub
jns
movsb
inc
mov
dec
ja
jb
pop
or
gs
out
fstpt
cmp
jecxz
aad
inc
xchg
shlb
mov
faddl
xor
pop
adcl
fisttpll
jge
xchg
stc
lods
lods
arpl
lret
cwtl
les
xlat
test
and
mov
jmp
ja
push
jl
or
jnp
flds
or
in
in
dec
pop
mov
clc
lahf
mov
loope
loopne
arpl
mov
sar
mov
lahf
push
jge,pt
addr16
push
call
push
pop
push
lods
adc
mov
ja
adc
or
adc
jge
pop
mov
pop
mov
or
inc
mov
aas
mov
pop
xchg
sti
test
jb
arpl
cmpsb
mov
jno
inc
negb
cmp
into
int3
clts
mov
sbb
or
mov
pop
clc
sahf
fbld
hlt
std
scas
stos
jecxz
bound
jae,pt
call
orb
xchg
xor
pop
cmpsb
dec
test
or
pusha
stc
add
mov
dec
ret
shrb
icebp
xor
xchg
aas
or
lods
lods
scas
mov
sbb
push
push
mov
stos
jl
pusha
out
mov
in
jbe
mov
int
xor
push
xchg
cmpsl
ss
push
mov
or
ret
fnstsw
out
in
sbb
mov
jne
std
insl
pop
fstpl
dec
sub
cmc
jbe
ss
jnp
sub
loope
ljmp
sub
inc
testl
cmp
ficomps
sti
push
mov
enter
add
xchg
push
popf
pop
loope
jge
outsb
jne
test
xchg
imul
insl
cmp
stc
mov
inc
push
ljmp
fs
sub
cmpsb
sbb
insb
push
push
fimuls
fdivrs
xor
int3
dec
adc
dec
add
xchg
fiadds
jne
scas
push
add
int
out
dec
xchg
and
loopne
insb
fsubrl
int3
pop
fsubl
push
insb
jl
or
out
loope
aad
jl
lods
and
xor
xor
mov
ret
inc
stc
fildll
and
lods
lds
inc
test
and
or
jl
add
sub
out
test
gs
mov
push
das
xchg
xor
rolb
popa
rclb
add
pop
xchg
and
push
inc
jns
dec
je
cltd
xchg
dec
push
lea
aam
sbb
cmpsl
sarl
nop
pushf
pop
cmp
push
sbb
or
outsl
mov
shl
lcall
pop
push
ror
mov
mov
mov
add
lahf
insb
leave
or
cmpsb
mov
mov
sbb
jge
fcomip
mov
cmp
add
rorl
mov
inc
push
nop
add
push
sub
insl
mov
dec
mov
inc
xchg
pop
mov
mov
ficoml
push
jns
pop
mov
jb
dec
mov
movsb
arpl
orb
pop
out
int
sub
mov
rorb
lret
mov
inc
or
xor
adc
sub
push
or
lcall
push
fnstsw
shll
mov
sub
inc
jg
or
xchg
or
ret
mov
dec
cwtl
aam
int
cmp
cmc
pop
orb
cmpsl
cmp
arpl
jae
outsb
test
daa
adc
add
add
adc
in
out
mov
sahf
in
pop
mov
test
sub
rcl
lock
sbb
push
and
or
adc
shll
sti
cli
mov
inc
push
iret
push
jmp
lea
je
push
cmp
xchg
hlt
adc
sbb
xchg
mov
jns
xchg
cltd
jp
hlt
jnp
gs
out
in
rcll
push
insb
aaa
js
outsb
pop
popf
lods
mov
nop
mov
movsl
push
mov
inc
mov
sti
out
jge
rol
mov
popa
pop
jge
out
arpl
push
call
shr
fwait
cli
and
call
xor
repnz
in
lret
repz
fldt
fcompl
test
xchg
ret
cmp
test
xor
mov
inc
add
das
clc
shl
jno
mov
mov
aas
in
popl
test
lret
cld
mov
xchg
pop
add
int
lret
in
dec
push
pop
ret
add
popf
mov
cld
cmc
rcrl
mov
in
out
jb
test
inc
fisubl
pop
xor
mov
cmc
inc
movsb
scas
mov
fdivs
lahf
sub
mov
flds
jg
lock
pushf
int
lods
test
mov
sub
test
in
inc
xchg
ss
add
xor
cwtl
pop
pushf
fnstsw
stc
mov
push
orb
pop
lea
add
out
hlt
fisubrs
out
lret
sbb
addr16
pop
gs
mov
sub
jg
jmp
and
data16
xchg
fwait
push
jg
sbb
in
mov
dec
sub
dec
or
insl
cmc
pop
icebp
inc
adc
cmpsb
and
loop
push
cmp
xchg
icebp
movsb
add
jne
gs
xchg
jl
decb
xchg
daa
lods
fildll
add
push
push
xchg
sbb
xor
jne
xchg
xor
cli
jecxz
pop
mov
pop
aas
into
cltd
mov
arpl
jnp
sub
loop
mov
stos
stc
loop
movsb
test
fsts
jb
scas
sarl
dec
inc
mov
pop
lcall
or
daa
test
dec
int3
sbb
leave
mov
xor
fwait
iret
inc
cmpb
into
cmp
push
jle
repz
xor
inc
dec
je
ficoms
aad
scas
scas
ljmp
jns
sub
mov
mov
xchg
hlt
dec
fs
bound
addr16
into
imul
aad
ret
std
imul
arpl
xlat
jle
sbb
addr16
sub
stos
xchg
cwtl
iret
roll
pop
pop
mov
mov
mov
jb
ss
dec
mov
hlt
xchg
stc
jo
dec
test
mov
jg
sbb
rcpps
repnz
popa
cs
push
cwtl
sub
aaa
stos
or
push
flds
jge
push
adcb
repnz
das
sbb
and
mov
in
mov
inc
mov
inc
stc
lret
add
dec
arpl
dec
dec
jp
adc
inc
cmpsb
lret
roll
cld
popa
out
jl
addr16
sub
iret
shlb
clc
pop
stos
popf
aaa
lock
mov
sbb
fwait
stos
xchg
pop
xchg
cmp
insl
mov
push
xor
dec
fsub
inc
incl
cmc
add
movsb
dec
inc
add
jb
jno
out
push
fdivrl
fsubrs
out
pushf
mov
daa
daa
xlat
mov
sbb
das
push
cli
ds
bound
shll
sbb
cmp
jbe
xlat
test
fnsave
pushf
out
adc
dec
enter
dec
cmpb
mov
inc
jo
sub
push
xor
lahf
mov
jae
xchg
sbb
jae
cmp
jno
and
and
and
into
push
push
jno
in
inc
xor
gs
push
sub
inc
mov
dec
imul
jl
lcall
shl
aas
jmp
clc
add
mov
jl
mov
inc
lcall
jb
pop
adc
mov
int
mov
push
jbe
pop
movsb
xchg
mov
aaa
xchg
cmp
add
pop
lret
cwtl
lods
inc
testb
rorb
sub
sub
jp
xchg
arpl
push
movsl
mulb
dec
mov
mov
shl
cmpsl
rolb
sbb
gs
shrb
repz
cmp
or
mov
jae
cmp
aaa
mov
sub
loop
xor
add
out
jne
pop
movlps
jecxz
imul
push
loopne
fwait
pushf
sahf
stos
xchg
xlat
scas
testb
mov
add
xor
xchg
in
int3
iret
lret
push
xor
aaa
sahf
popf
out
jp
sbb
lods
inc
in
hlt
aaa
xchg
pop
jmp
pop
sub
dec
mov
test
out
rcrb
shlb
xorb
xchg
cmc
inc
xchg
cmp
mov
mov
outsl
jmp
jno
ret
insl
sbb
repz
int
mov
mov
stc
rcll
sbb
dec
shlb
int
roll
popa
enter
addb
test
cs
repz
aam
jo
or
fdivrp
sbb
aaa
jno
rolb
stc
fisubl
in
push
mov
test
lds
push
dec
dec
dec
cmpsl
jb
test
dec
inc
cli
cltd
jns
mov
mov
movsb
ds
and
inc
pop
mov
iret
mulb
mov
adc
bound
mov
adc
fucomp
enter
negl
sbb
sar
into
push
pop
std
outsb
or
mov
sub
les
outsl
or
jle
push
or
dec
pop
adc
lods
mov
mov
jns
jp
cmp
mov
push
wrmsr
push
sahf
pushf
xchg
clc
and
jnp
loop
rol
les
jle
mov
jge
imul
push
jmp
jnp
cmp
add
cmp
shl
and
lret
mov
es
pushf
out
and
push
mov
or
fs
shl
out
xchg
xor
mov
xchg
mov
mov
lods
push
cmpl
dec
test
frstor
stc
adc
pop
jne
xor
mov
ja
bound
sbb
mov
inc
mov
fimuls
sbb
adc
xchg
test
notb
jge
inc
jb
fistpl
outsl
dec
out
push
pop
and
mov
popf
repz
add
lods
mov
and
les
out
sub
enter
pop
js
mov
leave
sbb
inc
push
stos
idivb
in
int
outsb
test
dec
or
push
jb
inc
inc
test
jmp
outsb
mov
popa
mov
or
xchg
xor
out
jg
std
into
loopne
sarb
adc
lock
in
js
ja
jo
adc
fildll
pop
and
adc
xchg
outsl
popa
push
cmp
sbb
or
inc
push
aas
cmp
sub
sarb
pop
adc
mov
aam
imul
push
sbb
scas
test
mov
or
out
pop
mov
sbb
lods
dec
das
sub
pop
out
test
mov
imul
idivb
mov
pop
sub
mov
lds
inc
popf
repz
ljmp
pushf
mov
xor
jle
jmp
test
sub
jp
push
repz
xchg
sbb
scas
mov
lahf
out
dec
scas
jge
fnsave
inc
mov
jle
lods
ret
or
xlat
xor
sbb
mov
push
inc
add
in
lret
sub
roll
cs
push
bt
jmp
jge
fidivs
dec
adc
lds
shl
hlt
xor
ret
jns
lret
jnp
jnp
jecxz
inc
lods
sbbb
adc
and
ja
test
sub
neg
fucomp
ja
int
jne
xorb
xor
sbb
shrb
inc
mov
xor
icebp
jno
sbbb
or
inc
pop
popf
adc
jb
movsb
xchg
dec
lock
pop
fdivr
inc
add
mulb
fsts
icebp
mov
mov
and
in
ret
dec
aaa
adc
aad
mov
xchg
push
hlt
sbbl
and
fcoms
jle
mov
bndstx
jo
test
movsl
arpl
mov
dec
sahf
pop
inc
cmp
mov
or
cld
push
sbb
mov
mov
sarl
addl
and
out
adc
add
fists
in
cwtl
xchg
fidivs
int
arpl
fstpt
jge
or
push
jns
jae
push
icebp
and
xchg
into
loopne
push
lret
mov
cs
pop
dec
adc
fwait
clc
mov
scas
test
jns
popf
mov
cmc
inc
stos
pop
pop
pop
cmp
xor
adc
rorl
fidivs
mov
pop
in
jg
fmuls
mov
mov
sbb
data16
adc
and
stc
cmp
mov
mov
sti
das
cld
cmp
mov
pusha
jno
cli
adc
bound
insb
inc
ljmp
lods
pop
xchg
test
or
fnstcw
mov
movsl
push
adc
mov
and
mov
xorb
dec
jge
mov
mov
test
aad
mov
sub
sbb
sub
adc
pushf
cmp
pop
in
push
and
out
cmp
pop
lea
cwtl
aas
push
lret
cld
mov
fistpl
fstpt
xchg
jg
adc
imul
lret
inc
ja
inc
or
mov
mov
lcall
cld
call
adc
pusha
dec
jne
sbb
test
mov
fstps
enter
ret
and
xchg
cmpsl
lcall
ret
and
xor
or
in
mov
aad
mov
xchg
push
ds
xor
arpl
cmpsl
mov
out
jecxz
ss
adc
or
pop
arpl
cmp
jb
and
les
lcall
out
mov
sub
jmp
mov
jge
adc
sbb
mov
sbb
daa
push
cmp
dec
cmovnp
or
xchg
lret
bound
fistps
mov
push
out
sbb
imul
fs
jns
sub
add
aas
es
cmp
fdivl
je
add
jnp
and
jp
inc
pop
data16
adc
pop
fisubrl
sub
push
aas
jnp
shr
nop
daa
jecxz
xchg
sti
mov
scas
scas
fldz
inc
lcall
inc
iret
aam
pop
or
sbb
sub
psraw
pop
clc
cmp
jge
jl
pushf
mov
xor
jno
sub
add
adc
shl
xor
fwait
xchg
aaa
outsb
movsl
pop
lret
mov
imul
call
and
cld
sti
pop
wbinvd
mov
decb
push
sub
mov
insl
jae
push
mov
lcall
push
mov
jae
adc
lea
daa
sbb
push
mov
cs
mov
push
fistl
fwait
lahf
leave
and
xchg
nop
dec
cmp
aaa
stos
sbb
mov
test
dec
mov
pop
pushf
fwait
sub
pop
out
shr
add
inc
jle
mov
test
jg
movsb
gs
inc
je
ja
ret
frstor
subb
jae
daa
bound
insl
jae
stc
sti
ret
xor
lods
fcomi
shld
arpl
cltd
jp
lods
xchg
enter
shrb
aam
lods
pop
pushf
jnp
ficoml
add
push
cmp
mov
inc
and
push
js
sarb
inc
pop
adc
pop
movb
lods
into
push
in
aas
movsb
add
xchg
mov
jmp
push
lods
stos
daa
inc
cmpsb
es
push
pop
pop
push
xchg
push
insb
and
mov
sbb
pusha
sub
cmpsl
mov
xor
test
adc
shlb
scas
inc
cmp
push
ret
sbb
sub
pop
imul
xor
pop
cmp
dec
mov
xorl
shrl
sbb
loope
jp
jns
dec
mov
pop
popf
dec
adc
test
loopne
push
fisubs
js
int3
and
test
outsb
dec
inc
jmp
dec
insl
fpatan
pop
fstp
lea
sbb
jne
cmp
cmc
jo
ja
rolb
sar
pop
and
mov
pop
xor
mov
inc
lea
daa
aam
repnz
mov
fisubl
xchg
stc
pop
insb
mov
adc
bound
pop
sub
repnz
aam
inc
pop
adc
pop
out
xor
push
push
out
xor
faddl
jno
insw
mov
lods
and
repz
and
or
mov
mov
mov
or
adc
sub
inc
sar
pop
sarl
pop
shll
les
pop
cmp
test
int
jbe
cmpsl
test
fidivl
les
aad
jns
mov
sbb
jne
pusha
fpatan
in
and
xlat
or
rorb
rcll
push
jnp
sbb
mov
call
sub
scas
and
bound
sahf
fs
enter
add
stc
test
imull
adc
rorb
jo
xchg
jb
adc
adcl
xchg
insb
lds
or
mov
cmp
mov
fimuls
mov
mov
pop
mov
je
jg
sbb
push
leave
jg
dec
hlt
out
mov
xchg
adc
jl
test
lock
jmp
cli
pusha
nop
pushf
std
js
jbe
or
mov
cmpsb
aaa
pop
nop
pop
clc
add
jbe
ljmp
dec
sub
sub
mov
jg
mov
es
lods
ret
mov
fmull
cmp
add
movsl
xchg
iret
adc
push
shlb
sbb
jp
mov
push
jo
bound
inc
pusha
lcall
bnd
adc
scas
fs
push
jb
hlt
lcall
inc
out
js
shl
pop
add
addr16
or
mov
repz
mov
jp
movl
ret
loopne
movsl
into
testl
mov
mov
call
jmp
pop
or
mov
dec
inc
inc
insb
cmpsb
test
xchg
sub
sbb
add
push
jb
movsl
cmp
mov
mov
sbb
cmpl
jae
cld
stos
and
mov
je
cli
pop
js
mov
jl
loope
mov
inc
push
or
loopne
pop
mov
jecxz
mov
ljmp
adcb
mov
fbld
fldcw
leave
jo
out
jne
sbb
inc
push
xchg
fidivrl
sbb
mov
sbbb
pop
outsb
bound
arpl
mov
fucom
cwtl
in
inc
out
in
jl
inc
push
jns
shl
pop
dec
mov
pushf
sub
in
fnstcw
pop
jge
pop
test
push
movsb
mov
mov
bound
mov
rcll
stc
add
call
jge
loope
add
dec
nop
fdivl
jo
fcmovnbe
bound
popa
roll
mov
stc
cmc
adc
lret
xchg
dec
xchg
pop
xchg
sbb
hlt
sub
lret
cmp
cmpb
mov
pop
push
xorl
mov
xchg
jns
stc
out
sub
pop
sub
mov
cmp
push
cmp
rcr
iret
mov
mov
inc
dec
cs
fistpl
call
popa
rcl
pop
add
jns
pusha
mov
push
call
int
outsb
in
outsb
scas
push
dec
sbbl
leave
add
and
inc
js
fcmovnb
mov
ret
lahf
or
dec
push
fidivrs
inc
repz
cli
pop
mov
out
roll
rcrb
adc
ficoms
ja
push
mov
mov
stc
add
mov
push
arpl
icebp
loope
popf
pusha
mov
mov
jno
or
adc
mov
sub
icebp
push
ficoml
shll
inc
dec
inc
and
sub
push
dec
jo
inc
adc
push
repz
pop
pop
cmpsb
push
or
ss
or
ds
clc
pusha
cmp
lods
fdivr
mov
jb
sarl
aaa
loop
dec
sub
mov
xchg
enter
push
xchg
in
in
xchg
push
cs
adc
pushf
cmp
mov
aam
arpl
fwait
pusha
or
das
or
mov
adc
jge
movsb
and
bound
sbb
std
fstpl
or
int
neg
hlt
daa
dec
pop
cmp
dec
dec
push
dec
rorb
sahf
out
dec
inc
sti
jb
mov
jp
ret
stos
inc
add
nop
hlt
jp
int3
pop
mov
push
test
push
xor
sbb
jne
ret
imul
dec
jo
aad
mov
test
aam
mov
mov
xchg
fldcw
mov
js
fsubrl
and
xchg
sbb
dec
shufps
sbb
pop
subl
in
jb
leave
popf
jne
cmp
push
cmp
pop
icebp
pop
jae
adc
arpl
or
repnz
imul
sub
inc
shll
scas
pop
or
mov
xchg
push
mov
hlt
fsubrl
inc
rorl
mov
add
aad
js
pop
shrb
cmp
xchg
adc
ljmp
push
ja
fs
shl
test
repnz
mov
enter
jl
bound
les
push
jg
jnp
adc
inc
lcall
sti
push
icebp
jns
inc
jl
mov
xor
lcall
ret
push
add
and
dec
int
mov
cmp
cmp
mov
mov
mov
and
pop
mov
xchg
out
imul
pop
add
mov
push
pop
in
in
pop
mov
mov
cmpsb
fwait
andb
lcall
mov
imul
jle
adc
stc
mov
cmpsb
das
xor
pop
mov
lods
pop
mov
inc
repz
shll
add
out
xor
adc
dec
pop
jnp
pop
xchg
adc
adc
dec
hlt
pop
jo
mov
out
jns
int3
mov
jne
mov
xchg
and
mov
mov
inc
cli
vpsubusw
cltd
ret
xchg
sbb
mov
cmp
xchg
lock
cmpsl
pop
dec
lock
sti
sbb
cmp
daa
daa
sbb
cs
push
movsw
in
movsl
push
nop
outsl
or
add
xor
in
fwait
mov
or
xchg
dec
lods
or
add
test
xchg
xor
push
dec
inc
sub
mov
mov
xchg
mov
jl
fs
mov
sbb
jmp
lock
fcompl
mov
ror
aad
mov
dec
stos
push
pop
fisttpl
in
xchg
loopne
push
gs
add
stc
insb
addr16
xchg
aas
sub
dec
enter
pop
inc
in
xchg
scas
loope
pop
adc
inc
popa
mov
lea
rcrl
rol
test
arpl
lea
roll
or
popf
clc
pusha
insb
aad
je
and
jb
jmp
xor
pop
sub
imul
and
loop
mov
cmpsb
add
lea
rolb
test
push
mov
js
xchg
bound
std
imul
sbb
cmpsl
iret
xor
inc
jb
add
adc
int3
jne
insl
je
add
adc
mov
mov
aam
xchg
sub
adc
shrb
jg
and
mov
xor
lcall
cmc
inc
xchg
mull
js
inc
cmp
mov
enter
jmp
int3
rorl
imul
int
xchg
ljmp
push
push
lods
xor
jecxz
dec
push
adc
lret
insl
lock
lcall
adc
inc
movsb
icebp
enter
dec
aam
inc
jp
aad
loope
jbe
ret
ficomps
insl
lcall
inc
jecxz
pop
add
push
jb
lret
mov
je
ja
test
lods
or
stc
addb
add
fucomi
mov
jnp
mov
aam
sbb
adc
in
add
in
test
cld
test
and
sarb
stos
mov
ds
ret
lock
jo
xchg
add
je
inc
popf
jae
mov
xor
xchg
xchg
pop
mov
add
mov
mov
mov
adc
js
adc
xor
shlb
outsl
ret
lea
mov
dec
ret
fwait
pusha
mov
into
lea
or
sbb
imul
cmpsl
repz
inc
sub
hlt
rorl
test
xchg
pop
rcrb
jp
or
cmp
mov
inc
dec
sbb
adc
push
stc
sub
mov
cltd
sub
movsl
dec
test
or
mov
rclb
into
addr16
clc
lds
movsb
shlb
test
mov
test
inc
add
pop
sub
cmc
imull
fsubrp
pushl
stos
push
cwtl
stos
movq
and
ret
or
in
dec
sbb
dec
cltd
iret
cmpsl
sub
daa
and
jbe
std
aas
leave
lar
addr16
cmp
je
inc
imul
cmp
addl
push
lcall
fwait
xchg
xchg
jbe
mov
pop
jmp
xchg
imul
mov
mov
sar
and
insl
mov
les
xchg
nop
ds
dec
cmp
xor
imul
mov
fcoms
imul
and
jp
xchg
jbe
mov
dec
adc
jp
push
push
mov
es
out
test
push
mov
insb
daa
mov
insl
out
inc
inc
push
sti
jne
or
push
fucomi
xor
js
cwtl
xlat
sub
sbb
subl
into
ss
jmp
or
clc
lods
std
mov
arpl
dec
aaa
and
pop
sub
jbe
das
push
nop
xchg
push
mov
mov
repz
xor
lods
scas
enter
xor
adc
cmp
or
push
call
adc
push
stos
sub
and
add
xchg
fisubrl
push
scas
and
lcall
aaa
push
in
outsb
test
cmp
lcall
cmp
xchg
add
xchg
xor
push
push
lahf
adc
and
xchg
ficompl
fidivl
xor
cwtl
outsl
push
mov
pop
clc
fisubrl
in
or
cmpsl
pop
aaa
daa
jno
jns
shl
sbbb
xor
push
xor
in
jge
loopne
in
aaa
add
cmc
xor
out
adc
inc
imul
jl
int3
ja
aam
clc
mov
pop
jae
fimull
push
call
push
movsb
cmpl
packssdw
or
lcall
mov
or
dec
aas
lock
push
aas
mov
cmc
xchg
test
shrl
or
shl
adc
cmp
aas
fisubs
es
lahf
in
icebp
test
int
add
stc
push
outsl
cmp
cmp
rorb
mov
imul
xlat
gs
sub
push
shr
cmpb
dec
int
icebp
adc
cmp
fstpl
lea
mov
and
sbb
insb
push
mov
push
ficompl
out
test
sbb
fstl
xlat
fdivr
fwait
sbb
out
mov
mov
and
enter
jbe
test
mov
inc
adc
xchg
inc
or
pop
bound
shrl
sub
in
popf
push
iret
xchg
sub
push
shlb
sbb
rorl
cmp
sti
scas
xchg
lahf
xchg
add
pop
aad
shlb
xchg
test
inc
push
rorl
nop
imul
pop
jge
pop
das
pop
cltd
sub
adc
fldenv
xlat
push
loop
sbb
and
sub
xchg
xor
cmp
leave
or
inc
xlat
or
mov
movb
aad
clc
int
inc
in
mov
mov
inc
cltd
test
add
xchg
int3
mov
and
xchg
mov
divb
xchg
cs
cwtl
cmp
mov
push
mov
xor
repz
mov
mov
mov
addr16
mov
rclb
rolb
imul
sub
add
adc
sub
mov
or
in
sub
inc
bound
push
sub
pusha
jb
inc
scas
pop
sub
test
insl
cmpsl
xchg
js
cltd
adc
pop
mov
test
subb
and
and
mov
stc
xlat
ljmp
fs
rclb
out
pop
sub
movsl
push
dec
add
add
sbb
mov
jb
pop
mov
clc
repnz
or
pushf
lret
jbe
loope
rcll
cmp
scas
dec
out
lret
insb
and
mov
js
inc
in
or
push
inc
lds
pushf
rolb
cmpsb
push
imul
addr16
adc
bound
push
dec
bound
inc
imull
mov
and
cmp
rcl
out
add
jl
fnstcw
jbe
push
or
stc
inc
and
xchg
fst
mov
mov
loop
punpcklwd
out
loopne
mulb
cltd
inc
mov
push
imul
xor
jno,pn
dec
movsb
mov
xor
jecxz
mov
lret
push
cmp
xlat
pop
jecxz
or
mov
sbb
push
adc
in
loopne
dec
loope
add
gs
ret
mov
jne
sub
sti
out
mov
cmc
insb
xchg
fldt
loopne
mov
jnp
ja
jmp
int
aad
xor
xchg
cld
mov
mov
fwait
jle
pop
fcompl
mov
aas
add
mov
mov
mov
getsec
fildll
leave
xor
inc
repnz
insl
cmp
jg
das
mov
mov
fsubrs
or
cli
lcall
out
push
insb
sbb
or
lret
xchg
xchg
fdivs
dec
adc
ret
jecxz
iret
mov
movsb
jl
test
mov
push
ficompl
jno
popf
pop
movsb
loopne
mov
jge
and
lds
jae
jne
adc
or
inc
sub
sbb
mov
sbb
mov
cmp
add
outsb
xor
cmp
mov
jle
xchg
and
pop
mov
pop
fsubrp
aam
or
or
loop
pop
inc
popf
inc
inc
jp
lret
inc
jae
mov
mov
fdivrl
xor
xlat
fs
int
xchg
nop
jmp
in
aad
jl
xchg
fstpl
xchg
or
and
sub
or
mov
pusha
test
movsl
repnz
jmp
mov
or
loopne
lods
add
movsb
movsl
test
fists
mov
js
mov
enter
adc
out
lods
cli
mov
add
pop
cmc
xor
pop
adc
nop
cmp
pushf
out
pushf
xchg
loope
mov
sbb
ds
push
js
roll
cmpsl
push
cmp
ret
jecxz
inc
and
fbld
mov
fistl
sarb
pop
xchg
mov
outsl
cmp
xchg
test
stos
movsl
ss
sub
je,pt
inc
stos
and
mov
pop
jle
xchg
nop
jge
pop
ret
lods
xor
mov
mov
cs
push
fistl
arpl
jecxz
adc
fcomip
jns
in
push
ror
jae
mov
inc
stos
or
das
stc
rorl
mov
in
cmp
mov
icebp
pop
repnz
mov
lahf
sub
dec
ds
fmul
lret
sub
mov
int3
dec
repz
push
mul
cmp
add
inc
or
sbb
ja
rcll
lahf
inc
mov
pop
lods
test
fcmovnb
dec
xor
inc
pop
cli
pop
add
xchg
mov
mov
enter
repnz
xchg
inc
xchg
xlat
enter
sti
into
fisttpl
or
jp
xor
cli
ret
lret
test
push
mov
arpl
jae
ja
and
push
jae
adc
rcrb
shl
push
sarb
fmulp
push
std
aaa
or
sub
or
push
sahf
and
jmp
addr16
mov
into
sub
ret
or
adc
adc
dec
js
mov
cwtl
ret
ror
loope
pusha
les
or
stc
movsb
jnp
sbb
jmp
xor
pushf
or
pop
mov
pop
mov
insb
incb
add
cmpsb
mul
or
loopne
mov
mov
sbb
in
sub
xor
jl
fistl
fsubrp
inc
lret
clc
dec
rorl
jg
adc
sbb
lea
mov
lea
cmc
cmp
in
adc
insb
repz
dec
fbld
out
aad
shl
sub
mov
cmp
repz
inc
lcall
popf
mov
mov
jns
test
dec
in
adc
xchg
xchg
pop
xor
push
cmp
sbb
cmp
rclb
loopne
imul
pushf
dec
mov
inc
test
push
enter
push
test
test
in
lods
in
adc
add
fisubs
loop
cmp
sbb
lock
xchg
jnp
or
sbb
mov
add
in
insl
pop
dec
test
negb
jbe
add
int3
jns
cmc
fiaddl
xchg
in
pop
or
and
and
xor
int
xchg
jle
jne
inc
adc
fmull
jbe
jmp
mov
sbb
cmp
comiss
cmp
out
xchg
lods
dec
sub
fwait
mov
and
mov
xor
stc
fwait
jge
sbb
in
mov
mov
mov
mov
jbe
fdivr
or
sub
and
test
dec
push
inc
cmpsl
sub
pop
push
fwait
adc
sti
jns
or
push
mov
shl
mov
out
push
jecxz
mov
sbb
in
pop
js
mov
push
pop
ffreep
in
pop
iret
ss
jmp
pop
adc
or
in
testl
xchg
js
lahf
mov
imul
divl
jg
outsb
push
dec
jg
loopne
popa
sbb
popf
inc
jnp
jl
lods
inc
hlt
out
dec
int3
test
repz
xor
lcall
jae
jp
and
fisubs
fisttps
fnstcw
sarl
mov
xlat
popf
or
sub
mov
cmp
mov
mov
and
xchg
imul
jb
inc
int3
in
mov
pushl
in
lods
fs
mov
sub
gs
pop
ror
mov
int
xor
push
or
pusha
push
jnp
sbb
sub
scas
jno
and
mov
nop
xchg
pop
frstor
mov
bound
push
data16
inc
test
scas
shll
iret
mov
add
xchg
jb
out
cs
push
dec
aam
lods
lret
in
nop
add
adc
pop
mov
lcall
fmulp
test
mov
sub
push
in
mov
sbb
push
out
mov
mov
inc
lock
mov
adc
pop
gs
or
cld
fs
jns
cmp
repnz
push
or
sub
jecxz
movb
nop
test
jmp
test
lret
sub
xor
cmp
cwtl
leave
scas
and
fisubl
mov
cwtl
pushf
jmp
mov
ret
mov
je
out
ret
dec
add
cmp
pusha
xor
lds
cmp
cmp
jnp
inc
xchg
mov
sbb
push
aam
jnp
add
divl
jno
leave
in
dec
movsl
xchg
xchg
dec
fstl
in
jns
jmp
cmpsb
enter
mov
cmp
ss
push
pop
mov
add
or
dec
xchg
ja
sub
adc
cmp
cmc
mov
or
test
mov
cmp
aas
out
movsl
adc
orl
scas
clc
je
cmp
sbb
dec
add
sub
adc
xlat
add
fs
push
jmp
pop
mov
xor
fisubs
stos
fbstp
cmp
or
scas
and
or
movsl
and
insl
scas
fnstenv
es
push
xchg
rorl
std
dec
iret
lret
aas
jge
cmp
aam
mov
jge
adc
inc
sub
aaa
or
cmpsb
lahf
add
arpl
add
lods
and
orb
mov
shll
inc
cld
iret
aas
sbb
inc
add
leave
or
movsl
cli
adc
pop
cmpsl
lods
mov
fst
adc
loop
dec
mov
jnp
loope
xchg
sti
jecxz
fnstenv
in
mov
roll
push
inc
xor
sbb
inc
sti
adc
lcall
sub
push
inc
xor
aas
loope
mov
or
bound
std
push
cmp
dec
mov
lcall
lods
insb
inc
dec
push
lahf
ds
idivb
sbb
int
and
add
lahf
mov
jmp
mov
push
outsb
inc
in
adc
test
insb
mov
sbbb
fadd
sbb
dec
mov
js
xchg
xchg
jmp
lret
pop
cmp
xor
popf
mov
xchg
pop
or
sub
icebp
insb
jp
mov
jns
mov
pop
insb
xor
cmp
push
stc
xor
sti
je
imul
out
and
sub
mov
in
lock
cmp
mov
stos
and
dec
aas
xchg
mov
daa
faddl
mov
int3
mov
icebp
out
test
imul
mov
fstpt
mov
out
icebp
push
xchg
inc
aam
adc
add
test
test
and
outsb
xchg
adc
fldenv
shr
es
inc
test
mov
ja
mov
inc
cmp
hlt
mov
pop
inc
add
jecxz
mov
add
xchg
cmp
jmp
scas
pop
in
jge
jecxz
mov
sahf
xchg
mov
clc
js
cltd
es
pop
dec
add
mov
loop
mov
xor
imul
push
jae
out
out
cmp
int3
jno
sbb
popf
or
or
iret
in
pop
aad
lea
cwtl
cs
pop
push
int
lods
insl
pop
push
cmpsl
sahf
dec
int3
ljmp
leave
jbe
sub
fdivl
ds
mov
pop
inc
sub
cmp
popa
in
daa
jp
push
lods
jl
lahf
push
jmp
adc
mov
mov
inc
je
sti
xorb
fdiv
or
jbe
inc
repz
cmp
in
gs
mov
mov
or
sub
push
cmp
cmc
inc
ljmp
lret
push
sub
mov
fstps
ss
cmp
sbb
xor
dec
add
mov
mov
cmp
out
push
xchg
ss
mov
sub
add
out
pop
mov
pushf
je
int
pop
mov
xchg
cmp
shlb
mov
cmp
incb
js
out
pop
cmp
jo
out
cmpsl
and
dec
fucomi
jbe
sub
fucomip
addr16
mov
popa
stos
or
pop
mov
push
and
movntps
ja
std
loop
lods
std
adc
movsl
xor
pushf
iret
movsb
and
movsb
xor
xor
call
movl
cwtl
push
je
inc
and
shll
mov
fstpt
mov
stos
push
mov
inc
loopne
clc
pop
sti
dec
add
js
xchg
into
arpl
and
sub
cltd
xor
push
mov
pop
sarb
xor
xor
or
mov
cltd
dec
inc
inc
bound
xor
ss
mov
mov
xor
fisubrs
add
outsb
adc
cmp
sar
fistps
hlt
pop
loopne
push
ja
ljmp
push
mov
sub
cmp
jl
pop
fsubr
and
cmp
dec
mov
sarb
and
jg
mov
push
mov
jb
ja
mov
scas
mov
add
dec
iret
xor
dec
xlat
aad
sbbb
fdivrs
cmpsl
orb
inc
dec
push
lret
inc
mov
jecxz
in
mov
pop
cli
mov
outsl
dec
jle
shl
pop
jmp
jo
mov
dec
ret
and
dec
jns
sbb
push
fimull
xor
xchg
movsl
mov
popf
dec
ja
ds
adc
cmp
addl
mov
jno
mov
mov
mov
add
xchg
adc
outsb
ljmp
es
in
outsb
inc
or
xlat
pop
jnp
out
in
loop
pop
sub
mov
jl
jge
inc
xchg
ret
add
mov
jo
cmpsl
daa
ret
and
jne
add
push
cmpsb
into
mov
push
mov
call
cmc
lock
lods
xor
push
cmpsb
lock
cmp
and
insb
jmp
rcrb
pop
sub
add
ret
and
mov
insl
mov
jmp
inc
or
xor
dec
cmp
inc
and
fadds
mov
dec
push
add
xor
mov
lss
mov
jb
push
loope
mov
fistpl
ljmp
aas
shlb
xor
int3
iret
pop
pushf
push
sbb
mov
mov
aaa
mov
mov
scas
xlat
mov
lcall
push
or
dec
fnstcw
out
pop
xor
jmp
imul
xchg
lret
adc
or
out
in
dec
inc
and
data16
into
jo
dec
adc
ret
cmc
xlat
iretw
ja
cmp
jae
jge
push
es
popf
pop
jp,pn
imul
out
cmpsb
push
jb,pt
das
in
lcall
sub
mov
dec
cmp
test
cmp
mov
rcrl
mov
dec
lods
dec
nop
push
lock
out
mov
outsb
or
xor
pop
adc
lahf
stos
jbe
xchg
and
push
lahf
push
stc
dec
into
add
add
fdiv
in
call
xchg
pop
dec
inc
insb
push
loope
sub
lahf
neg
sub
push
gs
lds
mov
jmp
test
mov
lods
push
dec
fsubs
shlb
test
xchg
cmp
movsb
cmp
in
stc
pushf
lods
sub
and
flds
inc
add
jno
sbbl
mov
and
data16
into
jo
dec
and
mov
in
in
mov
push
out
jge
push
cmp
mov
and
cmp
sub
pushf
push
mov
mov
mov
dec
cmp
or
sbb
shll
inc
add
call
fists
repnz
xor
xor
shlb
dec
push
sbb
jp
sbb
ja
mov
test
div
data16
data16
fcoms
fcomp
jmp
stos
jns
int
cld
mov
aad
lret
das
sub
fcoms
scas
or
mov
stos
cmp
cmp
ss
jg
stos
sar
sbb
cmp
push
dec
xchg
and
or
fdivl
ljmp
add
jge
and
pop
cmpsl
inc
std
fmuls
jb
adc
fidivrs
sarl
mov
xor
inc
sbb
xlat
cli
and
jo
ds
add
in
push
and
sahf
push
enter
sbb
pop
mov
js
pop
mov
pop
cmp
shll
call
and
lock
shll
adc
push
cmpb
sub
add
scas
jnp
cmpsl
out
push
mov
stos
mov
jb
sahf
ret
rorl
fwait
je
mov
cs
push
rcl
mov
pushl
xchg
ror
mov
lods
ficoms
cld
inc
mov
cmpsl
loopne
push
mov
cmp
mov
adc
js
imul
ss
cmp
push
insb
popa
push
sbb
cmp
pop
mov
mov
imul
movsb
or
cmp
and
lds
test
xor
cld
fcoms
mov
cmpsl
inc
fimull
sbb
ds
stc
adc
aaa
xor
mov
pop
pop
das
faddl
mov
pop
js
jle
mov
mov
jge
cmpsb
dec
mov
outsl
jge
int
pop
ret
mov
pop
sti
mov
sub
sub
sbb
jp
xchg
je
js
jno
xor
sub
mov
cmp
push
rolb
jg
cmp
in
cwtl
adc
loope
add
movsb
fs
inc
pop
stc
and
repnz
cmp
mov
ret
xor
xchg
push
mov
dec
fdivl
int
nop
iret
mov
add
lds
push
hlt
pop
arpl
add
dec
mov
cmp
push
idiv
shll
mov
mov
ds
dec
cmp
push
cmpsl
inc
or
xchg
jno
cmp
jb
push
mov
sbb
adc
scas
outsb
push
sub
or
rol
pop
mov
adc
mov
fnstcw
icebp
lret
scas
aam
stos
xchg
fadds
lods
rclb
push
push
and
ud1
add
cltd
and
cwtl
aaa
push
aad
or
lcall
push
jl
movsb
out
scas
int3
and
lret
fnstsw
push
jl
enter
movsl
repz
fcoms
leave
insb
mov
push
mov
aad
lods
int
insb
ljmp
jns
pop
jno
or
adc
nop
xchg
popa
daa
movsl
jb
push
dec
loop
mov
inc
insl
or
andb
pop
mov
stos
std
lea
pop
sbb
xor
dec
ret
mov
mov
movl
sub
cmpsl
jnp
fimuls
daa
das
sahf
mov
sar
pop
orb
ljmp
dec
and
hlt
push
add
mov
icebp
cmp
cmp
inc
outsb
test
cmc
scas
inc
aam
fadds
cmp
sbb
dec
cmp
add
mov
add
adc
movl
add
add
fidivrs
pop
inc
icebp
out
pop
or
add
pop
add
jmp
out
jno
fcomi
sub
add
nop
add
mov
or
add
or
add
mov
add
add
add
mov
add
push
push
sub
push
xor
rolb
add
push
cld
pop
cmpsl
ss
mov
jbe
jbe
adc
loop
push
cmp
ret
mov
add
into
cmpsl
push
outsl
std
adc
test
add
pusha
stos
repz
push
sbb
add
shrl
add
out
js
and
fisubl
cs
pushf
je
add
lea
sub
push
loop
add
mov
lods
add
or
fbld
mov
add
aas
or
mov
jne
add
roll
ljmp
mov
add
jge
or
cmpsl
xchg
fisttpl
mov
and
ljmp
and
or
xor
and
insl
cwtl
xlat
cmpsb
push
out
sub
loope
add
mov
popf
xor
cmpsb
adc
and
pop
mov
ret
push
out
jne
fisubrl
movsl
cmp
sbb
insl
movsb
push
add
cmp
jae
stc
and
testb
cmp
cwtl
fwait
outsb
jle
add
clc
add
adcl
mov
mov
jecxz
test
test
pusha
insb
cmc
out
push
mov
jbe
icebp
sub
cli
push
pop
xor
pusha
aas
jb
inc
push
mov
iret
sub
cwtl
loop
add
js
pushf
push
xor
hlt
xor
push
inc
add
bound
xor
inc
mov
dec
addr16
and
add
adc
add
mov
je
dec
add
xor
pop
mov
gs
andb
je
xchg
movb
adc
xor
add
add
jge
add
add
add
imul
push
dec
insb
js
sub
stc
mov
pop
mov
pop
fiadds
and
fwait
stos
push
xor
or
out
call
jne
int
inc
xor
xchg
fidivl
daa
shlb
xor
add
aam
hlt
popa
xchg
sbb
add
cmpsb
sub
or
xor
out
ss
decb
lods
sub
push
pop
je
movsb
jno
or
icebp
shl
lds
fdivl
sub
push
adc
ljmp
mov
rcr
jg
xor
sub
in
mov
jb
add
lahf
clc
rorb
add
mov
push
rcll
repz
aad
add
xchg
pop
jmp
fildl
add
imul
pusha
xor
mov
ret
add
es
add
aam
mov
jb
test
mov
cltd
pop
xor
mov
add
out
and
sbb
pop
out
dec
add
addr16
sub
xor
add
std
arpl
mov
and
add
xlat
pop
add
pop
mov
add
test
xchg
ljmp
cmp
add
aas
aas
add
add
jl
add
add
add
sbb
mov
add
inc
cmpsb
mov
inc
cmp
dec
lods
cltd
add
loopne
add
aam
outsb
loopne
mov
orb
or
bound
mov
fimuls
pop
adc
mov
jb
nop
jae
sub
add
add
sub
mov
lods
add
push
imul
add
jg
mov
sbb
or
fmuls
pmullw
data16
xor
pop
or
pop
dec
test
pop
inc
movsl
sub
or
pop
iret
mov
stc
add
cmp
addb
ds
cmp
mov
mov
add
add
jp
imul
repnz
add
or
fbld
add
sub
add
ss
dec
mov
add
cmp
mov
aas
add
ljmp
add
add
pop
outsb
inc
loopne
mov
ja
sbb
ss
add
or
test
dec
mov
iret
add
push
shrb
pop
rcrb
add
xor
mov
out
mov
sub
add
jbe
popa
add
cmp
pop
add
fidivl
push
or
pop
subl
bound
cmp
add
roll
insl
add
lea
mov
xchg
xor
cmp
push
jmp
test
jbe
or
std
sarb
popf
add
cltd
and
cli
mov
rorl
jne
add
inc
lds
xor
out
call
fcoml
fbstp
add
and
add
stc
add
leave
fcmove
add
lock
cmp
add
test
scas
rolb
cmp
ljmp
push
mov
inc
xor
or
xor
call
ljmp
cmpsl
adc
add
push
add
pusha
and
cmp
mov
add
mov
fsubrl
insl
dec
dec
add
jg
add
mov
out
lods
add
mov
xchg
push
jmp
dec
jne
add
jle
ss
aas
addb
in
insb
push
xchg
add
xor
add
out
adc
jp
jbe
sub
add
int
fiaddl
xchg
movsb
sahf
stc
mov
into
sbb
jmp
stc
xchg
lods
lahf
sub
fwait
test
add
dec
dec
dec
push
shll
aad
lcall
popf
add
sbb
imul
arpl
dec
stos
aas
add
and
and
sub
dec
add
add
xor
cmp
add
mov
add
mov
push
add
adc
add
in
faddl
add
jmp
push
inc
sti
jns
add
in
push
pushf
or
mov
roll
mov
cmc
xor
test
je
cmpsb
xchg
add
pop
adc
mov
push
jo
pop
add
cld
inc
jle
aam
mov
xlat
loop
xchg
pop
mov
add
scas
jnp
lds
stos
add
add
add
sti
scas
add
add
test
inc
xchg
sbb
adc
push
sub
mov
add
adc
pop
jp
cmp
out
loop
mov
push
push
outsl
mov
shrb
xor
push
pop
ficompl
mov
fcoml
test
sbb
je
add
leave
les
and
add
aaa
loope
add
cmpsl
inc
lea
add
add
push
dec
mov
add
add
xor
sub
dec
stc
adc
loope
or
sahf
lcall
cmp
movsb
dec
sbb
inc
cmp
movsb
int
ss
fsubrs
add
cmpsl
sti
or
fwait
and
fdivs
gs
cmp
add
add
adc
dec
movsb
add
lea
add
add
adc
push
add
xchg
or
lea
add
xchg
mov
test
mov
add
add
inc
movl
int
inc
pop
add
add
es
jae
add
cmpsb
imul
loope
add
jg
movsl
jmp
add
mov
add
loopne
add
add
mov
cmp
sti
mov
pop
jno
pop
add
dec
push
pop
pop
mov
arpl
je
fdivs
fwait
adc
jo
aam
add
inc
imul
fiaddl
cmp
push
or
push
fcoms
cli
lea
test
mov
adc
cmp
jno
sti
cmc
xor
outsb
test
add
push
loop
adc
push
mov
jge
sub
mov
jmp
lods
mov
cwtl
ja
add
xchg
mov
and
add
xchg
push
xor
popf
add
push
xchg
stos
andl
dec
mov
add
add
inc
repnz
inc
mov
add
jge
xlat
sbb
xchg
xchg
xlat
add
cli
sti
inc
jecxz
sub
or
inc
xor
cwtl
lea
repz
pop
mov
pushf
pop
mov
stc
mov
sbb
pop
add
or
or
stos
pop
cmpsb
push
outsb
stos
add
sbb
xor
movsl
out
paddb
int3
pop
inc
add
lock
out
sarl
jne
and
xchg
testl
add
fdivrp
mov
je
add
cmp
add
mov
rclb
mulb
mov
add
xchg
stc
sbb
mov
pop
xor
or
fs
ffreep
fists
in
mov
jnp
add
push
mov
pushf
add
mov
mov
xor
lock
mov
xor
std
xlat
hlt
mov
xchg
adc
cmpsl
rclb
fs
sbb
in
add
mov
call
pop
sbb
fsts
pop
fimuls
cmp
aad
gs
loopne
icebp
jae
daa
jmp
inc
jp
je
pop
xchg
pop
daa
icebp
clc
cmp
or
lcall
repnz
add
push
loope
dec
std
cmp
xor
lret
add
popf
add
mov
mov
test
icebp
xor
push
adc
scas
pop
js
test
fwait
sub
xchg
add
mov
xor
fnstcw
clc
mov
sbb
xchg
bound
repz
or
loopne
ds
das
cmp
lret
adc
jmp
and
jbe
scas
mov
xchg
xor
lret
and
stos
push
lods
icebp
aad
jae
mov
jle
jecxz
dec
push
cmp
jbe
push
push
pop
add
addr16
outsb
mov
sub
push
add
outsb
cs
and
dec
dec
xor
subb
add
icebp
clc
iret
repnz
mov
xor
push
xchg
popl
icebp
jmp
sbb
adc
loopne
jmp
popf
in
adc
xchg
inc
mov
js
push
sub
jmp
sbb
rorl
add
add
ljmp
mov
add
das
nop
and
add
add
inc
pop
mov
dec
add
cmp
ret
sarl
push
adc
stc
shlb
movsl
xchg
jnp
cmpsl
mov
ja
jge
out
popf
fisubrs
nop
ja
pop
je
pop
roll
out
push
and
mov
movsb
fs
incl
fiadds
add
aas
xchg
arpl
xlat
jmp
out
iret
mov
cwtl
daa
pusha
stos
pusha
jbe
popf
es
stos
or
add
fdivl
fisttps
addr16
aas
or
mov
hlt
push
cmpb
ds
mov
lea
iret
xor
sub
dec
ja
repz
loope
xor
and
jno
hlt
add
add
ret
out
pop
add
push
aas
adc
mov
xchg
xorl
aaa
insl
add
in
ljmp
or
pop
and
insl
mov
xchg
aaa
jns
xor
sub
or
imul
mov
pop
leave
push
mov
jg
ja
jae
out
sub
dec
jp
mov
bound
or
xchg
sub
xchg
and
xor
mov
shl
lret
jle
jge
push
imul
fsubrl
add
mov
mov
pusha
add
dec
cwtl
aas
sbb
mov
sub
js
iret
movsb
data16
push
mov
push
jg
xchg
sbb
sbb
cmp
mov
imul
dec
add
icebp
xchg
xchg
les
jg
mov
addb
mov
or
jecxz
iret
sub
add
lds
jle
js
je
loop
and
pop
loopne
lds
pop
add
shrb
mov
sub
lahf
add
pop
ss
out
mov
xchg
ds
fildl
cmpsb
add
leave
pop
jmp
dec
clc
out
add
inc
add
or
add
test
add
jno
les
add
imul
push
bound
or
add
jge
xchg
add
je
leave
add
inc
xchg
push
in
sarb
testl
mov
add
add
add
test
mov
jnp
add
add
mov
jecxz
add
movsl
fnstcw
xor
mov
add
add
jns
fldenv
adc
ret
cmp
sbb
mov
out
add
add
xor
lods
push
inc
pop
xor
push
add
mov
leave
imul
push
push
add
stos
add
mov
fmull
cs
cmp
or
loop
sarl
mov
addb
add
sub
and
and
cwtl
cmp
or
push
loop
dec
mov
hlt
imul
add
mov
repnz
popa
inc
jbe
out
sbb
or
add
ret
add
push
ljmp
add
xlat
mov
push
dec
mov
add
sub
mov
addl
add
xchg
xchg
xor
stc
das
repnz
dec
pop
mov
jl
and
add
sbb
sbb
mov
cmp
pushf
xlat
aad
sub
sub
pop
clc
jmp
mov
iret
add
pusha
xchg
test
loope
mov
xorl
testl
push
fwait
adc
add
sub
testl
movsb
mov
mov
add
push
stc
pusha
lahf
inc
sub
pop
push
sbb
ret
xchg
xorb
sti
test
aaa
adc
jae
incl
out
cld
imul
push
sub
cwtl
adc
inc
rolb
nop
scas
and
gs
sub
pop
mov
loopne
fstl
xchg
in
push
mov
and
test
add
dec
inc
adc
fwait
test
pusha
mov
adc
jmp
mov
mov
add
cld
into
add
sub
or
aam
loope
icebp
ljmp
or
rorl
mov
sbb
push
int3
add
xchg
test
stos
ficoml
or
sub
add
and
mov
add
pushf
add
xchg
adc
add
jae
dec
inc
stc
test
mov
es
add
mov
sbb
out
ljmp
push
pushf
xchg
jg
add
pop
ret
ljmp
cld
cltd
add
and
ljmp
subb
aam
sbb
cmpb
add
jle
mov
sub
cli
mov
shll
xor
test
mov
stos
iret
adc
ret
out
inc
push
mov
enter
insb
shrb
incb
fdivs
or
add
movl
lods
lea
rcrl
sub
arpl
add
outsl
aad
imul
iret
mov
add
in
pop
xchg
add
add
jecxz
jbe
add
add
lods
in
negb
pop
outsl
es
add
lds
adc
sub
mov
imul
test
idiv
xor
dec
sarb
adc
add
mov
mov
add
xor
add
dec
pop
rolb
inc
cmp
pushf
imul
add
xchg
push
jg
jmp
rorl
enter
ret
jp
int3
add
loopne
xchg
int3
add
xchg
pop
popf
jo
adc
test
mov
dec
mov
add
inc
sbb
add
inc
mov
add
dec
and
add
int
mov
dec
push
decb
adc
sbb
call
push
add
add
add
xchg
bound
jg
daa
loop
adc
roll
mov
or
mov
push
sbb
add
xor
loopne
pop
mov
daa
movsl
cmp
add
sub
lret
xlat
test
std
aam
push
push
cli
pop
add
xorb
mov
in
imul
aam
mov
loop
add
aaa
mov
std
fs
xchg
lret
gs
rcrl
and
add
xor
mov
xor
jnp
xor
cwtl
and
hlt
scas
jb
rcrb
jle
test
int
lods
push
pop
aad
add
lods
int3
mov
add
outsb
add
aaa
pop
sub
xor
jns
inc
out
sub
ljmp
xchg
jb
adc
testl
add
mov
pusha
dec
jg
movb
add
call
or
add
fcomps
sarl
dec
push
stos
add
sub
pop
jmp
pop
or
add
int3
push
mov
jg
ffree
add
inc
inc
scas
push
fdivs
or
dec
add
push
rcl
sub
add
add
push
mov
push
fdivl
shll
sub
int3
jae
movsl
or
add
sub
enter
add
xchg
or
cld
nop
insb
sub
mov
ss
cmp
inc
xorb
lret
add
push
xor
shrl
add
add
xor
mov
imul
add
add
cs
lods
add
lcall
popf
or
xor
xchg
out
jb
sbb
scas
lock
testb
add
movsb
jno
xchg
pusha
pop
jmp
add
add
inc
mov
add
xorl
cmpsb
adc
movsb
sub
add
xchg
popf
mov
xchg
aad
daa
xchg
add
dec
daa
mov
rcrb
adc
add
test
outsl
test
enter
cs
sbb
sti
hlt
mov
addb
adc
jae
and
adc
adc
mov
add
adc
outsb
pop
add
hlt
test
idivl
dec
mov
xor
shlb
pop
add
mov
xchg
jb
fnsave
dec
inc
add
aas
sub
add
in
je
incl
test
add
pop
sti
mov
xor
fldl
pop
lret
js
add
jae
fadd
add
or
and
add
jo
add
add
add
push
xor
add
add
ret
gs
add
fldt
andb
add
jns
movl
mov
into
push
add
dec
xchg
or
xchg
repnz
add
jl
cld
adc
in
push
adc
pushf
enter
xchg
add
imul
xor
test
jbe
jnp
fildll
add
jge
sbb
add
orb
inc
xlat
add
pop
scas
in
xchg
leave
inc
pop
rorl
cmc
add
cmpsb
mov
jp
scas
sbb
pop
mov
push
out
fnsave
xlat
add
lods
mov
jbe
movb
jecxz
push
and
dec
xor
test
leave
pop
sub
add
add
push
loop
ret
lcall
jmp
mov
addr16
adc
imul
add
mov
add
xor
int
pusha
adc
xchg
int
loope
cmp
sahf
inc
fsubrp
in
mov
addb
adc
push
and
add
jne
dec
pop
adc
cmp
pop
ret
inc
shr
fimuls
add
add
push
fstpt
fcomps
add
test
fiaddl
stos
sub
cli
mov
xabort
popa
and
dec
jbe
cs
mov
push
jmp
mov
sti
add
add
xor
mov
mov
ja
add
push
nop
in
lea
pop
popf
and
add
mov
jno
add
pop
or
imul
pop
push
or
ljmp
add
mov
push
outsb
push
jecxz
addr16
pop
rclb
cmp
jbe
or
push
or
inc
add
sbb
js
cmpsl
iret
and
je
ret
push
xor
add
push
mov
popa
leave
xor
mov
mov
add
inc
daa
insl
movb
data16
add
mov
or
mov
loope
je
pusha
enter
add
pop
push
ret
insl
jns
ljmp
mov
lock
fiadds
add
pop
mov
es
pop
sbb
test
test
out
movl
cmp
add
lock
mov
add
xchg
push
add
adc
pcmpgtb
push
jl
aam
mov
aaa
lahf
jno
jno
shlb
mov
add
ret
and
xchg
mov
shrb
mov
test
arpl
flds
mov
out
jl
mov
jmp
push
out
sbb
add
cmpsl
pop
sbb
cltd
aaa
lock
adc
das
add
pop
add
test
mov
add
and
and
or
lods
mov
add
push
pusha
imul
push
mov
call
in
sarb
add
mov
ret
or
add
pop
xor
push
xor
jno
cmp
ret
add
es
das
in
sbb
jp
mov
push
push
add
jg
test
cmc
lods
cmp
sbb
mov
cltd
push
push
add
jno
in
push
cmp
jb
cld
add
or
dec
lret
push
imul
pop
push
add
pop
dec
movsl
jno
mov
or
pop
std
adc
sbb
xor
fwait
call
xor
int
dec
xor
sub
leave
fidivrs
popa
scas
mov
add
mov
add
popf
adc
call
add
lea
push
cld
imul
add
test
adc
adc
mov
cmp
add
add
pop
iret
or
loop
test
mov
push
outsl
popf
add
xlat
xchg
mov
mov
and
push
add
dec
lret
call
adc
add
aas
add
out
arpl
or
dec
mov
and
dec
jo
testb
push
mov
scas
loope
jl
dec
push
clc
mov
into
adc
lcall
sahf
push
icebp
add
ret
xchg
ret
ret
cmc
adc
daa
mov
add
stos
xor
push
divb
add
add
or
mov
decl
pop
add
test
jle
or
lret
imul
add
adc
pusha
mov
jns
add
push
jle
popf
xor
outsb
ret
add
in
push
outsb
cmp
add
cmp
cltd
add
xor
jmp
mov
pop
fnstcw
mov
roll
lds
jmp
sub
jmp
xchg
loop
adc
add
mov
add
add
dec
jecxz
loope
pusha
xchg
push
stos
imul
mov
and
pop
push
add
enter
aaa
pop
inc
scas
int3
sbb
lods
faddl
cmpl
push
gs
push
jne
xor
mov
dec
adc
mov
cmp
out
cmp
mov
inc
add
mov
loope
jecxz
aad
add
dec
sub
sbb
repnz
cwtl
pop
cmc
mov
das
add
jnp
test
mov
ret
pop
ret
cmp
rcl
cmpsl
push
pop
cli
lods
mov
fs
mov
ds
jmp
jmp
test
add
and
pop
pop
pop
mov
test
and
adc
jns
and
sti
add
mov
and
jns
xor
or
out
sarl
xchg
jb
adc
xchg
xor
arpl
rcll
jae
stc
mov
adcb
add
cld
fwait
sub
popf
movsb
mov
shrb
ret
push
mov
sbb
notb
push
push
imul
or
add
add
xchg
and
out
cld
mov
mov
adc
sarb
add
adc
popf
adc
repz
mov
xlat
insb
cmp
xchg
push
aam
add
imul
mov
mov
sbb
lds
push
int
add
scas
loope
jl
dec
jb
mov
sub
lret
addb
pushf
cld
mov
mov
sub
ret
inc
or
ret
fwait
arpl
outsl
dec
add
xchg
pop
popa
mov
ror
pop
cld
loope
dec
lods
repnz
mov
inc
sarb
jae
fistpl
adc
movsb
lods
les
ret
movsl
xchg
out
push
loope
popf
inc
dec
inc
xor
shl
pop
les
xchg
sbb
inc
sbb
cmp
imul
lret
jo
add
js
inc
cmp
and
xchg
not
sub
cmc
cwtl
mov
mov
add
add
movsb
pop
jl
repz
in
push
fwait
cmp
add
outsb
sbb
mov
xchg
add
add
and
enter
xor
adc
subb
add
mov
inc
or
icebp
int3
and
test
stos
hlt
ret
shrl
shl
cltd
adc
je
pop
outsl
inc
cmpsl
add
add
mov
dec
mov
orb
inc
xlat
movsl
jecxz
int
out
or
add
imul
cmp
add
or
daa
add
add
ja
add
xchg
out
in
ret
outsb
je
add
mov
add
sti
adc
dec
sbb
es
cwtl
add
pop
push
push
sub
sbb
inc
fiadds
xor
ja
add
add
popf
cmp
stos
xchg
repz
cmp
cmc
and
mov
mov
inc
sti
out
outsb
and
push
movsb
mov
leave
sbb
cmp
rcll
jecxz
in
xor
or
mov
repz
sub
xchg
bound
dec
xor
add
add
inc
int
insw
cli
into
sub
add
addb
or
dec
add
push
push
or
addr16
gs
test
or
inc
cld
lds
fcmovne
test
lock
add
cltd
out
in
inc
dec
xchg
movsb
add
cmpsl
sub
cmp
pop
add
test
xchg
shll
push
out
iret
inc
mov
mov
cmc
es
sub
loope
pop
cmpl
in
addr16
add
add
ljmp
sbb
mov
outsb
add
sub
out
xor
add
add
fiaddl
add
testl
repnz
in
mov
add
add
push
add
sbb
enter
mov
cmpsb
jmp
mov
repnz
test
pop
mov
cmp
das
add
add
mov
xor
lret
push
push
dec
loopne
mov
fadd
jge
xor
rolb
cmpsl
adc
cmpb
fsubrp
dec
sbbb
mov
add
add
or
lea
js
or
mov
add
xor
mov
xchg
lea
roll
add
and
pop
int3
add
mov
movsl
jno
in
or
int
das
pop
repz
xor
cmpsb
lods
arpl
movsb
int3
pop
xchg
jle
push
xchg
arpl
rcl
add
mov
ljmp
sbb
xor
push
or
je
cli
icebp
in
ret
sbb
or
sbb
pop
jle
adc
sub
sub
sti
test
pop
test
add
jb
mov
mov
and
jmp
xor
addb
test
push
mov
inc
mov
pusha
adcl
stos
es
and
jb
popf
mov
imulb
jbe
push
sbb
cmc
add
add
jg
cmp
out
push
dec
sbb
and
lock
mov
push
xor
mov
dec
std
mov
add
std
push
jae
test
inc
outsb
call
mov
and
or
xchg
inc
std
outsl
lods
cwtl
std
mov
mov
push
add
add
loop
incl
dec
sahf
enter
sbb
test
inc
and
decb
dec
push
xor
int3
cmpsl
lock
adc
test
loopne
scas
sahf
mov
pop
int3
add
add
push
icebp
stc
sbb
jle
adc
push
arpl
icebp
movsl
or
in
add
loop
mov
push
xchg
push
outsl
lods
sbb
mov
mov
pushf
xor
cltd
dec
or
xchg
xchg
jb
mov
add
ljmp
push
mov
sub
outsb
loopne
xchg
sub
xchg
pusha
add
dec
xchg
pop
lret
and
aaa
out
push
jmp
inc
sbb
push
jbe
jmp
enter
outsb
ss
sbb
dec
lahf
xchg
mov
imul
cmp
add
and
push
add
jbe
sbb
scas
mov
pop
iret
loope
ljmp
imulb
pop
pop
movsb
cmpsb
loop
add
pop
or
sub
shrb
adc
add
pop
orb
inc
xor
addl
mov
sub
add
in
cld
push
movsb
jl
leave
test
jae
add
mov
repnz
pop
add
xchg
add
ljmp
shll
jb
popa
leave
loopne
cmp
cmp
fildll
ljmp
pop
lret
outsb
add
cmp
push
jns
mov
pop
lock
dec
jmp
xor
pop
xor
in
stos
arpl
mov
clc
pushf
fimull
push
and
sbb
imul
push
shrb
ljmp
adc
mov
add
xor
faddl
add
add
mov
sub
jb
add
out
lcall
aaa
bnd
movl
shll
adc
lods
add
jno
add
xchg
xchg
cs
sbb
dec
mov
bound
pop
pusha
cmpsb
daa
arpl
xor
push
cld
add
sub
in
mov
add
sub
sbb
fistpll
and
mov
rcl
insb
gs
mov
sub
loope
pop
decb
mov
cmp
add
sub
stc
mov
fsubrl
idiv
daa
into
iret
add
lods
fistpll
nop
push
pop
push
cmp
add
sbb
movl
stc
mov
xchg
scas
stc
mov
xor
jle
dec
xchg
add
push
mov
roll
cmc
adc
fwait
push
or
mov
add
sub
fsubrl
lock
pop
imul
or
addl
rcl
or
mov
and
push
out
mov
addr16
addr16
cmp
sbb
push
and
leave
adc
aad
inc
or
add
lds
xchg
cmp
rorl
mov
or
dec
mov
adc
or
and
dec
repz
cmpsl
and
inc
xor
sbb
loop
push
fildl
sbb
push
lahf
fs
xchg
popf
lcall
cpuid
clc
pop
cli
pop
mov
imul
jns
sub
sub
inc
cmpsb
dec
pop
bts
aas
pushf
cli
add
push
stos
cltd
push
pop
subb
mov
jmp
je
and
andl
push
outsb
push
xor
cmp
lods
xchg
xlat
stos
in
sub
sub
sahf
ficoml
subb
jb
stos
ficoms
jge
ss
adc
cli
push
gs
xor
popa
dec
xor
adc
sar
cli
repnz
sbb
or
inc
mov
test
add
add
fsubl
out
stos
sbb
dec
jb
add
add
les
add
add
lock
add
jmp
add
inc
and
testb
pop
pusha
sbb
cld
fmul
add
scas
shrb
cmp
sub
xchg
pop
faddl
add
dec
dec
inc
fsubr
mov
test
add
jbe
push
jle
or
adc
sar
repz
jmp
adc
xor
or
pushf
lcall
imul
or
cmc
into
xchg
rcl
mov
in
mov
aaa
inc
mov
hlt
adc
mov
xchg
imulb
lahf
cmp
push
lahf
fs
test
gs
sbb
out
mov
mov
mov
xchg
pusha
sbb
pop
xchg
mov
punpckhbw
inc
sbb
mov
in
cmp
das
lds
dec
dec
pusha
roll
dec
sub
push
pop
mov
push
movsl
xlat
data16
std
jge
mov
add
add
add
jnp
dec
push
lea
cmp
xorl
imul
in
mov
shll
inc
jae
ss
addr16
sbb
dec
mov
gs
push
lret
add
mov
or
add
aas
and
test
mov
fsubp
je
roll
je
outsb
add
hlt
mov
mov
add
fsts
popf
into
nop
scas
insb
test
mov
jbe
xorl
add
add
aaa
insl
cmc
adc
jmp
mov
imul
imul
xlat
jmp
add
dec
push
jl
fcomps
lods
adc
pop
lds
incb
cltd
sub
adc
or
sbb
sub
and
insl
mov
subl
cmp
out
pop
pushf
or
add
adc
and
xor
push
popf
fisubs
pop
sbb
xor
adc
cmpsl
lds
add
and
sbb
mull
push
aas
add
icebp
adc
jnp
xor
mov
xor
pushf
out
mov
xchg
mov
sub
pushf
sbb
divb
orb
add
dec
xchg
mov
lret
add
pop
out
daa
mov
add
xchg
add
add
lds
scas
incl
jl
xor
fdivl
mov
iret
xchg
xor
add
lods
mov
jae
in
cmp
loope
movsb
scas
add
add
add
xor
mov
pop
add
xchg
in
jmp
mov
and
sub
xchg
icebp
push
stos
mov
and
sarl
mov
push
lds
ds
pop
dec
jb
add
adc
lods
in
mov
add
in
push
ljmp
add
xchg
inc
mov
cmp
sahf
es
xor
sub
push
add
loope
cmp
pop
mov
or
sub
lahf
cwtl
push
cmc
xor
cli
lods
mov
xchg
add
cli
xchg
cmp
ret
pop
lods
push
mov
add
inc
es
fwait
pop
add
xchg
aad
rcrb
or
pop
mov
cld
ret
cld
int
mov
arpl
adc
das
dec
push
adc
scas
adc
mov
adc
push
test
add
outsl
add
add
mov
in
xlat
xchg
cmp
cmc
or
add
imul
std
sbb
lds
cli
dec
das
dec
jle
lahf
cmp
sub
pop
pop
xor
add
divl
int
insb
ret
adc
loop
jle
xor
push
mov
mov
out
scas
aas
rol
cmp
nop
mov
icebp
pop
mov
or
rcrb
cld
testb
sub
xlat
subl
cltd
inc
dec
gs
xor
hlt
and
loop
xor
cmc
nop
insb
and
bound
pop
add
mov
jae
sbb
lret
testl
add
dec
stos
push
mov
in
add
mov
add
add
inc
imul
mov
add
pusha
push
xor
adc
add
movsl
cwtl
movsl
dec
int3
add
in
xchg
enter
add
mov
repz
sti
fwait
call
add
push
pop
aad
mov
jbe
inc
xor
add
mov
sahf
and
gs
cmp
inc
cld
sbb
outsb
lret
cmp
jb
add
mov
mov
adc
sbb
mov
dec
loope
xor
outsl
cmp
mov
add
dec
daa
mov
pop
roll
int3
push
pop
cmp
pop
xor
repnz
add
mov
jbe
cmpsl
xorl
xor
sbb
push
mov
xor
push
dec
xchg
jge
dec
cmp
and
mov
lret
pop
pop
adc
xlat
shrb
dec
ds
xchg
repz
loope
add
xor
in
add
add
push
subb
test
jnp
add
jl
mov
add
out
add
mov
jp
adc
add
jno
add
sub
out
dec
stos
dec
aaa
shlb
mov
sbb
imul
add
push
int3
sbb
inc
sbb
cmp
adcb
pusha
idiv
mov
add
pop
mov
dec
add
add
sbb
in
jnp
add
add
cmp
inc
int3
mov
push
add
add
add
and
add
add
pop
das
cld
pop
sub
int3
call
test
pop
inc
in
loopne
push
loope
mov
and
popa
push
cltd
clc
inc
imul
jne
shrl
in
sub
cmp
scas
or
test
mov
lret
mov
jne
xchg
cmpsb
stos
jne
mov
fsubp
sub
cmp
xor
ret
sbb
sub
sub
sti
push
sub
cmp
pop
mov
in
adc
xor
mov
cmp
loope
or
add
rcrb
test
and
test
mov
sub
out
push
dec
adc
lds
stos
mov
mov
arpl
popa
jbe
pop
push
xchg
in
jns
aaa
dec
mov
add
clc
das
movsl
cwtl
ss
inc
add
cld
jecxz
dec
imul
lods
jmp
cld
cmp
pop
imul
pop
ficoml
xchg
lcall
aad
add
or
jno
add
pop
fnstenv
out
add
add
pop
cmp
into
add
mov
push
or
lret
hlt
arpl
addb
add
xchg
lods
sbb
or
inc
push
add
dec
int
jae
cmp
rclb
rcl
add
sub
loope
xchg
add
sbb
loopne
add
cmp
iret
inc
dec
add
icebp
fsubrs
add
repnz
and
pop
ret
fisubl
xchg
mov
add
rol
add
pop
out
in
sbb
add
cwtl
daa
add
mov
push
jns
mov
add
dec
jmp
outsl
and
add
jns
popf
arpl
std
add
mov
inc
adc
mov
add
add
rol
add
out
lea
sub
cmp
mov
add
into
std
add
nop
scas
roll
add
jmp
aaa
jmp
cld
je
cmp
jmp
mov
mov
xor
pop
pop
add
or
jp
sbb
cmp
rolb
rolb
pop
jecxz
pop
push
add
icebp
sub
ljmp
add
add
push
sub
or
outsb
cs
jmp
fildl
aaa
insb
xor
cltd
push
pop
gs
loope
das
andl
add
push
add
push
loop
add
adc
push
sub
inc
sar
mov
hlt
add
or
jo
or
frstor
movsl
mov
push
push
add
addr16
scas
inc
mov
cld
mov
add
lret
insl
push
mov
popl
add
popf
lahf
stos
add
dec
dec
dec
lcall
or
mov
pop
push
scas
dec
test
insb
arpl
test
xchg
fidivrl
xchg
call
add
mov
cmp
push
test
add
fidivl
and
or
fwait
cli
pop
xchg
popa
xor
jp
sub
movsb
adc
add
add
test
add
mov
sub
pop
test
and
imul
xor
and
add
or
inc
pop
mov
add
xchg
jno
add
ljmp
add
or
mov
inc
mov
dec
or
cmp
add
push
push
cmpsl
pusha
xchg
imul
add
dec
mov
xor
or
and
jle
sbb
mov
mov
mov
addr16
cs
stos
add
mov
test
repnz
mov
and
and
adc
scas
lock
out
fsubrl
and
pop
mov
add
add
xchg
adc
pop
nop
add
add
jmp
add
testl
addl
pop
push
add
or
ljmp
into
jmp
cltd
cmp
out
add
inc
and
in
pusha
movsb
lea
pop
pop
test
mov
add
xchg
sub
aam
jae
stos
jno
mov
es
add
leave
inc
out
cwtl
pop
jl
dec
out
hlt
popa
inc
jns
mov
data16
test
loope
pop
sbb
adc
inc
sub
add
add
jbe
insb
xor
or
sets
int3
xor
or
lock
je
iret
jecxz
and
hlt
cwtl
aas
notl
mov
pop
cmp
jne
push
ret
fwait
cmp
and
xor
add
push
add
call
lds
mov
add
inc
push
add
movsl
sarl
jne
and
push
in
stos
xchg
mov
inc
jae
inc
pusha
inc
and
mov
xor
stc
pandn
xchg
inc
in
fldenv
int
and
push
add
add
mov
xchg
test
sti
mov
fcmovnu
pop
add
jmp
add
push
mov
xchg
out
rorb
pop
fildl
cmp
xor
mov
mov
fwait
and
test
jb
add
imul
call
or
cmp
push
xchg
pusha
pop
divl
popa
cltd
push
jp
xor
add
add
ljmp
cmovl
sti
add
pop
imul
popa
cltd
xor
out
cmp
call
add
mov
bound
add
ds
aam
jge
pop
sarl
out
scas
jg
dec
add
or
add
jg
add
filds
xlat
jmp
stos
lret
lcall
mov
lods
pop
mov
xorl
scas
aam
sub
inc
xchg
mov
inc
fsubs
sbb
pop
and
stc
inc
cs
mov
call
rcrb
adc
insb
in
test
js
mov
imul
outsl
and
addr16
repz
lahf
push
and
inc
pop
add
add
jnp
add
out
add
dec
pushf
add
sub
ljmp
add
jno
jl
outsb
xor
lcall
mov
pop
out
imul
inc
mov
test
imul
js
fcomps
jecxz
cmc
push
jge
mov
adc
add
add
dec
xor
mov
lea
add
add
xchg
add
out
push
clc
mov
out
ficomps
dec
leave
test
aaa
sahf
cmp
shll
push
and
popa
fwait
push
sub
cmp
aaa
fwait
or
ret
sbb
jle
sahf
push
arpl
movsl
test
loopne
cmp
ljmp
add
sti
imul
sbb
mov
test
sub
or
inc
das
out
add
add
sbb
xchg
xor
dec
push
add
add
xor
add
add
add
es
addr16
pop
dec
gs
cwtl
shrb
add
imul
xchg
adc
add
add
push
mov
mov
popa
add
add
inc
nop
xchg
lock
add
add
pop
xor
faddl
add
out
add
add
jg
mov
cmp
popf
add
add
push
push
add
outsb
in
push
add
add
xor
mov
fiaddl
pop
or
xor
add
repz
filds
cmp
add
xor
push
hlt
add
sub
dec
pop
aam
ds
push
add
add
arpl
stos
in
xor
sahf
les
hlt
aad
lahf
inc
mov
out
clc
outsl
jns
test
in
popf
dec
sarb
and
fisttpl
mov
and
xchg
pop
cs
mov
push
in
rcll
mov
mov
xor
add
shl
out
xchg
sbb
shlb
add
add
pop
push
sbb
add
add
scas
mov
addr16
dec
add
add
jl
add
das
imul
or
xchg
add
sbb
inc
mov
sarl
pop
cwtl
xor
dec
add
test
xchg
push
push
xor
and
mov
pop
movsl
push
pop
int3
add
add
pop
add
add
and
adc
int3
sub
into
dec
adc
out
add
mov
cmpsl
add
lret
mov
add
jbe
ja
lret
ljmp
inc
push
add
lds
add
add
test
test
add
in
faddl
add
lods
jne
mov
dec
add
ljmp
add
popa
jno
sub
add
pop
xor
adc
mov
push
daa
insl
sub
js
xchg
ds
pop
jns
push
xchg
cwtl
xor
add
add
add
add
aaa
add
dec
and
sub
push
dec
out
scas
sahf
hlt
fwait
xchg
jl
xor
jno
fwait
dec
stos
stos
enter
sti
inc
xor
lret
push
inc
es
mov
xor
test
repnz
in
sbb
repz
jl
sub
outsl
stos
ja
and
and
mov
leave
add
xor
insl
mov
lods
dec
imul
cmpsb
mov
mov
pop
jb
add
mov
pushf
add
jne
or
add
movsb
adc
xchg
shld
push
daa
pop
sbb
add
xchg
fwait
cltd
jge
mov
mov
lcall
outsb
pop
add
xchg
bound
imul
mov
xchg
cmp
add
es
and
icebp
jecxz
pop
cmp
mov
mov
push
mov
in
jg,pt
out
and
add
rorl
jl
mov
adc
add
insl
pop
sahf
std
add
mov
pop
push
scas
jmp
push
add
jnp
dec
dec
cmpsl
add
push
bound
mov
xor
cmpsb
or
shll
loop
test
xchg
lret
lods
xor
jb
fldl
xlat
push
aad
inc
and
add
add
movsl
dec
enter
inc
cmp
pop
push
xchg
frstor
dec
cltd
or
cmc
or
gs
mov
pop
clc
clc
push
aas
dec
repnz
add
add
mov
aam
in
rclb
ret
pop
jge
mov
xchg
fsubrs
or
ret
in
loop
jmp
cmp
mov
roll
loope
mov
xchg
lret
add
add
jbe
sbb
inc
add
mov
stc
mov
vcmppd
lods
xchg
mov
lock
push
sub
mov
addl
test
pop
sub
imul
add
test
mov
dec
int
mov
push
out
loop,pn
scas
fnsave
dec
pop
xchg
mov
icebp
xchg
inc
sbb
add
add
idiv
lods
filds
insb
ss
pop
aaa
pushf
jns
iret
mov
pop
add
andb
out
test
jmp
xchg
insl
inc
mov
add
xchg
add
ss
pop
in
test
inc
outsl
mov
rorb
popa
push
iret
jnp
sub
and
dec
dec
mov
mov
push
push
xor
aas
rcrl
pop
add
add
add
cwtl
mov
sub
add
add
mov
ljmp
stc
sbb
shll
mov
add
fisubl
lcall
cmpsl
pop
and
add
mov
push
mov
or
add
xchg
inc
jle
out
pop
sub
mov
mov
add
mov
out
mov
add
add
add
rorb
add
addb
sub
fildll
add
jge
fildl
jle
sbb
add
add
add
xor
mov
and
push
lret
or
int3
add
push
lret
add
add
cmp
cmp
push
xor
mov
test
aas
mov
fistpl
daa
adc
add
stos
cli
cmp
daa
or
notb
add
push
add
lret
jo
adc
clc
into
std
add
jne
xor
lods
cmpsb
mov
xchg
adc
repz
add
dec
popf
sbb
fnstcw
sub
cmp
push
pop
jne
add
aas
pop
aad
sub
add
xlat
add
add
lret
sub
cmp
shlb
ret
leave
out
aas
add
lods
cmpsb
or
mov
test
inc
pop
test
add
jne
cmp
popa
add
and
jp
mov
sbb
test
fmul
jnp
push
pop
add
add
stos
pop
sbb
jne
cmc
ds
test
popa
mov
sahf
add
and
push
add
stos
add
into
xor
in
add
cmp
add
add
outsb
ljmp
jbe
ret
add
gs
push
test
and
push
fsub
jb
mov
loopne
add
cmp
dec
fsubrp
xor
sub
lea
adc
pop
sub
xor
scas
clc
scas
dec
push
decb
and
in
test
fbld
cmp
clc
pop
add
and
pop
jl
xchg
push
outsb
shll
cmp
add
add
pop
call
sub
sub
mov
es
push
add
add
and
xchg
add
hlt
xchg
jecxz
add
mov
nop
add
add
and
adc
add
data16
out
and
mov
adc
push
mov
in
jno
add
add
adc
in
mov
cmp
add
pushf
mov
add
out
add
add
and
bnd
imulb
dec
dec
rolb
repnz
in
test
inc
arpl
jno
cli
ja
mov
cmp
out
lcall
add
scas
aad
stc
loopne
cmpl
test
mov
mov
add
xchg
jmp
jmp
cmpsl
test
popa
sbb
icebp
dec
sahf
adc
addb
and
push
xor
sub
add
cmpsb
fcoml
test
faddl
add
loop
rcrl
inc
mov
mov
sbb
mov
xor
test
daa
mov
adc
add
mull
inc
add
ss
mov
sub
mov
add
stc
loopne
fucomi
and
inc
sbb
outsl
stos
xchg
mov
shrd
sbb
push
dec
add
add
enter
dec
loopne
or
leave
sbb
dec
fidivl
pop
pop
scas
iret
insl
add
mov
je
loope
mov
mov
pop
mov
xor
lock
push
and
clc
mov
rol
cli
vmovntps
in
cltd
add
iret
xlat
divl
add
dec
dec
add
add
inc
and
repnz
insl
shrl
aam
mov
mov
ds
push
fidivs
test
sbb
je
es
jmp
imulb
fmuls
icebp
ret
ss
pop
cmpb
jo
aam
add
xchg
pop
add
add
mov
jae
inc
mov
and
faddp
rolb
ja
xor
in
test
add
jge
aas
int3
xchg
add
add
add
add
or
roll
add
and
cmp
mov
cs
repz
dec
adc
jle
in
mov
ss
push
outsl
push
nop
ja
add
andb
mov
cmpsl
fwait
rol
jnp
scas
mulb
daa
fs
outsb
fwait
or
xor
into
aas
icebp
pop
scas
mov
mov
xchg
add
add
lods
xchg
sbb
pop
mov
mov
jbe
dec
xor
sub
jg
cltd
add
add
not
lea
test
dec
lahf
mov
add
xlat
sub
jae
repnz
xor
jecxz
inc
jge
push
add
add
xor
icebp
push
in
stos
arpl
cmp
xchg
je,pn
es
je
roll
pusha
sahf
pop
push
aaa
movsb
gs
inc
inc
sub
inc
gs
jmp
in
jns
xchg
cwtl
icebp
pop
leave
jbe
add
mov
sub
mov
pop
in
dec
or
mov
sub
mov
push
test
mov
in
pop
add
add
inc
jp
cli
idivl
int3
dec
movsl
mov
ljmp
sub
add
add
loopne
or
ret
jne
add
add
scas
pop
push
add
add
or
out
pop
mov
jp
sbb
stos
clc
sub
or
addr16
fsubrs
movsb
inc
add
mov
mov
and
add
jb
lret
negb
ljmp
add
mov
add
push
push
das
out
leave
cmpsl
pop
scas
inc
fisubrs
test
mov
or
add
push
push
lahf
inc
pushw
stc
test
jbe
dec
pushf
mov
inc
xlat
jmp
ja
mov
outsl
inc
add
pop
dec
push
jmp
out
mov
out
or
faddp
xorl
lock
add
inc
rcll
sbb
xchg
inc
push
rolb
add
jp
add
mov
sarl
xor
test
popf
data16
mov
movb
lea
xor
out
add
xor
mov
adc
std
mov
fistl
movsb
add
vhaddpd
fimull
sbb
arpl
fisttpl
cs
cmp
outsb
aas
lds
mov
inc
push
addb
add
dec
jae
icebp
cmp
clc
mov
xchg
mov
push
sti
add
add
in
inc
ja
ja
lahf
aaa
pop
mov
add
add
sub
iret
call
and
jns
add
incb
out
ds
pop
xchg
fcomps
sbb
xchg
or
test
push
or
iret
shll
std
shlb
out
sbb
loopne
fdivrs
outsl
mov
ficompl
inc
dec
je
add
sub
mov
in
jno
loop
jle
push
jbe
out
mov
enter
inc
sbb
inc
pop
jmp
sub
mov
mulb
int3
dec
mov
push
add
xchg
popa
xchg
idivl
ja
fists
push
add
add
sbb
pop
sbbb
jmp
pushf
arpl
add
das
fs
sti
clc
jns
adc
mov
lahf
jns
or
sti
sbb
dec
test
popa
lahf
addr16
mov
xor
inc
add
outsl
outsl
pop
add
add
add
jne
sldt
add
test
dec
cmpsb
pop
xor
in
sti
mov
scas
push
das
add
pop
data16
add
add
sbb
mov
test
rolb
add
pushf
sub
jecxz
add
pop
das
xlat
movsb
rolb
pop
mov
mov
in
and
or
aad
pop
cs
pop
cmp
inc
xor
stos
mov
xchg
rclb
push
jecxz
divb
loop
xchg
div
dec
ljmp
and
inc
add
outsb
lock
jmp
imul
inc
stos
dec
bound
add
outsl
cmpb
push
jbe
jp
dec
lds
fld
scas
stos
bound
mov
faddl
add
add
js
cmp
add
add
mov
in
loopne
dec
push
cltd
ljmp
cmpsl
push
aaa
and
xchg
int3
jo
mov
mov
insb
std
faddl
jnp
add
cmpsb
je
mov
add
mov
imul
add
hlt
pop
adc
xchg
mov
add
jne
inc
out
or
dec
cmpsl
cmpb
and
pop
add
add
add
add
sbb
and
mov
outsb
mov
cmp
jmp
outsb
push
sub
pop
mov
pop
mov
icebp
hlt
out
xchg
cs
lret
mov
add
add
fimull
xchg
cs
inc
into
aam
jo
jae
xchg
xor
pop
test
sbb
add
cmp
adc
and
fadds
sbb
jae
insl
cwtl
pop
mov
hlt
pop
pop
jne
sahf
loop
sbb
add
mov
arpl
roll
cmp
add
mov
ret
add
call
mov
pop
cli
aam
fwait
push
fs
xchg
lcall
jb
push
or
rclw
inc
test
add
push
adc
call
lcall
daa
ja
lock
push
scas
jmp
out
je
lret
or
dec
cs
jge
sub
add
out
mov
sbb
xor
subb
frstor
jne
add
aas
adc
mov
mov
mov
outsb
scas
mov
xlat
inc
and
jns
xchg
outsl
mov
cwtl
mov
mov
xor
pop
and
pop
jbe
test
adc
mov
jo
sub
fwait
pushf
pop
pop
xor
mov
xchg
xor
add
and
jns
cmp
jmp
add
cmc
mov
inc
test
add
add
mov
adcl
inc
xchg
and
cltd
sub
aad
enter
add
es
dec
mov
add
popf
stos
pop
mov
mov
ljmp
pop
and
out
push
add
and
xchg
int3
orl
add
push
and
cmpsl
dec
sub
and
leave
sub
cli
dec
sbbl
lea
push
insl
inc
dec
inc
pop
dec
je
inc
add
ss
lds
sub
rorb
add
ss
push
mov
mov
mov
mov
icebp
jge
mov
mov
cmc
sbb
movsl
loope
jae
jo
jno
ds
or
insl
sbb
dec
xchg
mov
out
sbb
clc
push
sub
cmp
jmp
fwait
imul
push
mov
sti
fwait
and
xlat
loope
inc
fiaddl
mov
data16
pusha
jbe
add
add
add
jbe
mov
push
mov
xor
aas
scas
add
push
adc
pusha
cmc
mov
sub
clc
lea
imul
scas
fisubrs
xchg
xchg
push
cmp
rorb
add
xchg
lock
sub
xchg
mov
adcl
or
sub
bound
adc
sbb
pop
xor
sub
pushf
dec
mov
iret
inc
mov
cmpsb
jle
hlt
and
push
pusha
add
rcrb
pop
mov
stos
in
mov
ja
jne
dec
adc
jg
icebp
cs
insb
ja
mov
hlt
mov
pop
mov
pop
mov
xchg
sub
sub
adc
hlt
test
add
faddp
mov
movsl
repz
add
cmp
inc
push
inc
add
add
jb,pn
ret
push
dec
mov
xchg
pushf
ljmp
cltd
scas
pop
and
flds
fldt
sbbl
push
mov
add
stc
flds
push
add
int
xchg
pushf
daa
or
inc
cmp
pop
fldcw
xor
and
push
pop
rorl
xor
xor
add
sbb
cmc
jle
stc
loop
dec
int3
add
xchg
cmpsb
add
and
push
dec
inc
pop
iret
cmp
dec
add
add
rorb
add
jns
add
add
movsl
fstp
scas
arpl
add
fcmovnb
sub
hlt
add
test
mulb
mov
and
adc
dec
sbb
add
stos
testl
movsl
ret
inc
mov
out
mov
fildl
push
add
mov
icebp
ljmp
jmp
jmp
add
or
add
push
pop
adc
stc
add
ret
in
xlat
nop
and
loop
cli
jo
add
add
cli
sbb
movsb
sbb
or
push
cld
add
add
bound
lods
jmp
ss
jl
imul
inc
mov
call
mov
add
mov
xchg
sbb
add
pop
add
add
or
sbb
jle
add
jo
aas
in
ss
pushf
push
cld
xchg
adc
test
xorb
pop
jg
test
int
add
mov
xchg
xor
or
lcall
adc
push
and
mov
add
int3
xlat
mov
xchg
mov
xor
mov
jno
add
fistl
mov
add
in
call
loopne
mov
adc
in
movsl
add
jg
mov
xor
sbb
cmp
jo
add
jmp
and
pushf
faddl
add
movsb
adc
add
add
loopne
or
icebp
or
aad
add
and
xchg
mov
pop
adc
sarl
add
cmpsb
decl
push
pop
cld
pusha
inc
test
sub
mov
push
fildl
add
mov
aam
imul
mov
addl
add
adc
lret
dec
pop
jo
add
andl
xchg
loope
add
in
mov
add
rcrb
int
cmpsl
dec
rcrl
imul
push
out
dec
mov
mov
stos
sub
mov
xchg
lock
cmp
push
xor
mov
xchg
outsb
lret
sbb
add
repz
lcall
xchg
jae
cmpsb
inc
jb
mov
cmpsl
jo
imul
mov
ror
and
fwait
cmc
ficompl
add
stos
or
mov
sbb
and
sbb
push
lahf
imul
xor
mov
mov
adc
iret
hlt
inc
jb
pop
pop
mov
jbe
ja
pop
dec
jae
cld
lcall
push
sti
fwait
call
test
lret
fwait
xor
and
mov
ljmp
subl
cmp
mov
mov
addl
into
pop
stc
fstl
add
enter
add
sbb
sbb
pop
push
andb
pop
adc
mov
cmp
mov
insb
shrb
lock
outsl
and
mov
xchg
lods
add
add
add
jecxz
xchg
mov
add
mov
add
add
add
add
cmp
jle
sub
insl
mov
rcrl
or
jmp
push
xchg
pop
sub
mov
sbb
mov
add
jae
jne
add
add
shll
test
add
rorl
cmp
shlb
jae
jno
add
sub
jmp
and
add
dec
mov
notl
inc
jae
xchg
bound
fidivs
add
sub
std
je
pop
add
insl
jmp
add
xor
lds
mov
fldenv
sbb
push
sbb
cld
pop
bound
mov
xchg
movsb
add
das
dec
jle
dec
lahf
pop
mov
sub
movsb
cld
icebp
sbb
cmpb
in
push
xchg
sbb
scas
decl
add
jbe
and
fcmovbe
mov
inc
push
jg
jle
pusha
repz
adcb
lret
nop
jae
lods
in
add
pop
sub
sahf
imull
decl
test
pop
inc
ds
iret
pop
adc
pop
add
cli
mov
add
dec
pop
aam
je
sub
sahf
and
xchg
sub
pop
lret
testl
add
and
mov
loope
rol
scas
mov
data16
sbb
pop
jmp
jbe
sub
add
fwait
pop
pop
mov
pop
dec
add
sub
test
adc
in
or
mov
fiaddl
test
xchg
test
dec
push
add
stos
daa
fdivl
and
jb
ljmp
stc
into
adc
inc
sbb
repz
icebp
gs
stos
fwait
adc
cli
xchg
pop
and
sub
push
push
in
nop
out
out
shll
add
add
mov
ret
test
bound
movl
xchg
jns
dec
ljmp
add
xchg
sub
mov
push
ficompl
cmc
pushf
sbb
fidivrl
push
push
jp
sub
xlat
ret
test
jge
cmpsl
insl
sub
out
mov
mov
movsl
adc
rorb
stos
shlb
mov
jg
mov
pop
dec
aam
jno
push
shll
push
and
mov
lock
imulb
jo
push
mov
mov
xor
dec
mov
negl
fldl
cld
adc
cmpsb
add
add
aas
xchg
stc
std
add
mov
inc
inc
inc
adc
mov
test
sarl
sub
test
adc
into
adc
add
jmp
push
mov
hlt
fadd
subb
mov
add
push
lret
fwait
lea
sahf
lea
jge
xor
jmp
adc
add
orb
call
mov
jo
sub
in
xchg
ljmp
push
jp
and
insb
sbb
mov
in
lcall
xchg
push
sub
add
mov
adc
je
inc
push
pusha
push
ret
pop
aam
out
dec
loop
outsl
addb
inc
mov
adc
fildll
xor
in
fs
and
lahf
mov
scas
clc
insl
ljmp
loope
mov
jns
add
pop
jl
jmp
push
push
scas
lock
test
mov
bsr
mov
sub
lods
xor
repz
add
addr16
scas
call
sbb
and
enter
xor
sub
ljmp
jo
popa
xor
je
push
mov
mov
jecxz
inc
sub
mov
add
add
push
add
ljmp
add
pop
mov
add
adc
lds
pop
jmp
call
add
and
jno
sbb
xorl
cwtl
fiadds
test
bound
ret
inc
sbb
mov
in
lcall
xchg
lock
in
aas
ret
inc
mov
xchg
je
stos
and
movsb
mov
cmp
hlt
fstl
aas
mov
inc
mov
jg
sbb
mov
lds
sbb
in
pop
mov
sub
lret
jns
adc
mov
add
out
cli
sub
pusha
and
jp
pop
sub
decb
clc
inc
dec
std
incb
dec
jno
lds
ja
jmp
push
sub
jmp
pushf
jae
fwait
call
add
push
or
add
mov
je
fnstsw
shrb
outsl
mov
inc
mov
xor
test
outsl
test
fldl
sub
je
cs
sub
inc
adc
addl
add
stc
mov
add
sub
dec
pop
mov
pop
loop
out
mov
push
sub
adc
and
and
add
enter
ljmp
or
add
mov
pushf
pop
popf
cmp
in
add
or
jg
movsl
and
pop
scas
fisubs
add
pop
add
add
cmp
mov
mov
ret
add
dec
decb
jge
enter
or
xor
cmp
mov
add
fs
sub
push
push
scas
mov
jg
enter
dec
loope
lds
push
add
or
pop
add
and
aam
gs
stc
pop
ret
push
fdivr
data16
mov
push
repnz
pop
aas
popf
push
sahf
and
and
add
add
mov
cmpl
shll
stos
lock
inc
and
movsl
or
xor
enter
lock
imul
dec
pop
pop
aad
and
sub
adc
adc
xor
xchg
add
dec
pop
scas
add
add
stos
jg
mov
repnz
cmp
fcmovu
std
push
mov
insb
ss
stos
in
sbb
xchg
fdivrs
jb
loopne
dec
ss
lahf
out
jno
test
clc
or
loop
sbb
xchg
pop
movsl
sub
ds
test
clc
sub
ja
sti
pushf
jno
adc
or
mov
xchg
das
jo
loopne
sub
movsl
je
sbb
insb
push
pop
push
leave
xchg
cld
out
leave
lret
popa
std
jmp
rcrl
push
in
test
dec
inc
adc
adc
dec
jle
aam
repnz
pop
lret
scas
sbb
sub
push
mov
inc
mov
test
sarl
stc
stos
shll
testb
mov
xchg
mov
adc
in
addr16
mov
pop
aas
stc
and
pushw
inc
inc
adc
dec
jl
or
mov
cltd
cld
lret
add
add
xor
mov
rolb
add
inc
je
lea
add
cltd
das
cmc
or
and
pop
mov
add
movsl
or
inc
inc
jb
jle
aad
dec
xor
sub
fcoml
dec
adc
lods
es
in
sub
push
jne
add
testl
jg
adc
pop
push
adc
rep
jg
test
xchg
pop
sub
add
add
cmpsl
jl
sbb
inc
add
add
jnp
insb
inc
sbb
xor
and
stc
idivb
dec
dec
cmp
lcall
adc
and
test
xchg
sbb
add
push
dec
adc
test
aam
lea
push
push
and
cmc
into
lcall
sbb
push
sub
ja
mov
xor
test
cmpsb
add
dec
jecxz
push
les
imul
or
push
pop
inc
ss
les
xchg
fistpll
bound
ficoms
sarl
mov
push
or
and
lret
xchg
sarl
jmp
inc
mov
cmp
je
cmp
pop
lahf
sahf
test
rcl
pop
sti
in
pop
xchg
dec
mov
mov
mov
dec
sahf
add
sub
sbb
insb
scas
mov
stos
xchg
add
jns
push
mov
inc
push
add
push
cmp
add
push
pop
ret
cld
adc
rcrb
sti
adc
movsl
mov
xor
addl
fs
xor
sbb
add
popa
lods
add
xchg
xchg
cmp
mov
dec
add
add
sti
aaa
xor
or
add
ljmp
cmp
add
cmp
cmc
rcrl
jg
out
scas
mov
add
negl
ret
adc
add
hlt
dec
stc
adc
add
mov
decl
add
add
pop
sbb
mov
or
mov
jmp
cmp
jo
aaa
data16
enter
add
out
add
mov
jnp
dec
xor
ja
lret
scas
aad
cwtl
inc
pop
insl
mov
cli
inc
adc
mov
push
sub
ds
fdivs
pop
add
outsb
sbb
sbb
adc
loopne
inc
in
adc
mov
jne
pop
pop
xchg
push
mov
in
dec
xchg
mov
add
ds
loope
push
mov
int3
mov
add
imul
lret
xor
cld
mov
bound
jmp
xchg
sub
clc
lahf
negl
mov
cmp
adc
test
push
mov
push
imul
jg
push
outsb
push
es
das
incb
aaa
mov
fimull
add
inc
aas
test
dec
mov
shll
data16
stos
sbb
add
mov
jp
sbb
lds
jns
xchg
shlb
inc
pop
into
and
or
and
cmpsl
dec
push
int
push
movsl
ret
scas
inc
add
add
data16
cmp
pop
imul
jo
loopne
aam
rorl
push
cmp
cli
pushf
lret
data16
push
enter
mov
mov
fadds
in
cmp
in
popa
js
inc
sub
fldl
add
adc
and
jns
mov
jmp
add
pop
pop
lret
push
xchg
mov
mull
and
mov
sahf
les
add
cmp
adc
inc
enter
mov
loop
jne
out
pushf
push
push
lret
xor
ret
and
add
addr16
dec
test
push
arpl
xor
add
ds
xor
stos
icebp
jo
dec
cwtl
andb
mov
inc
cmp
movsb
xchg
mov
fsubp
xchg
lods
imul
inc
add
repnz
add
add
push
push
aad
cmp
add
jno
ss
jno
jbe
rcrb
fnstcw
adc
sbb
mov
repnz
sbb
call
mov
or
jmp
mov
push
mov
loope
orl
leave
xchg
add
pop
add
pop
cs
mov
test
aam
push
add
in
push
arpl
pop
es
stc
outsb
clc
adcl
xchg
cmp
in
sbb
sub
cmp
mul
add
or
cmp
cmp
repnz
fldenv
pop
pop
lea
mov
rcl
sbb
lret
adc
dec
push
and
mov
push
fildll
push
pusha
stc
xchg
adc
sbb
addb
lods
add
add
rolb
jo
add
push
xchg
add
adc
xchg
dec
sub
insl
jp
add
lock
cmp
movsl
fstpt
cmpsl
cmp
mov
aaa
push
sub
mov
mov
mov
mov
test
imul
fbld
add
in
aaa
xchg
mov
inc
add
push
addb
or
mov
jno
lds
inc
push
xchg
insb
mov
inc
ret
mov
js
pop
gs
hlt
push
test
add
cmp
jnp,pn
in
clc
pop
es
clc
insl
repnz
adc
push
or
mov
iret
cmp
mov
adc
add
pop
lds
push
pop
stos
xor
std
push
adc
test
fs
pop
sub
fistl
repz
add
pop
add
add
fdivrl
test
jecxz
enter
push
ficoms
int3
add
xchg
jo
mov
out
sahf
or
pop
sbbb
jae
sub
lods
mov
insl
add
pop
add
xor
imul
xchg
imul
mov
shlb
adc
test
add
or
add
std
dec
mov
outsl
sub
fstps
in
jg
sbb
jmp
xchg
xor
mov
stos
shl
jle
add
add
push
hlt
add
icebp
cld
add
stos
or
xor
and
add
mov
inc
cmp
fsubs
dec
scas
sub
daa
push
xor
adc
cmp
push
xor
xchg
or
imul
fwait
sbb
jne
and
push
in
inc
xchg
mov
inc
add
add
pushf
push
add
adc
add
les
push
add
and
add
or
ret
lea
aad
mov
loopne
or
fstp
mov
lahf
fucom
sub
jecxz
add
or
mov
xor
push
and
out
inc
addr16
adc
add
jecxz
jnp
in
cmp
mov
loope
pop
push
pop
jns
mov
add
test
push
add
add
out
mov
xchg
mov
jno
xchg
stos
pusha
lock
gs
addr16
add
mov
add
sub
fdivrp
paddusw
add
jmp
add
inc
test
ret
add
add
mov
add
outsb
xchg
add
lock
fcoml
add
repz
sbb
mov
cltd
add
xchg
stos
add
mov
popf
add
add
and
push
xchg
jbe
add
mov
idivl
lds
xchg
addr16
mov
call
fadds
cld
add
push
loop
xor
add
out
testl
jne
cld
mov
add
testl
push
add
dec
and
xor
cmpsb
addl
add
je
icebp
mov
pusha
shlb
xchg
cwtl
adc
sub
sub
add
das
add
aad
nop
push
mov
sbb
data16
rclb
popf
or
add
mov
dec
or
add
add
fsubp
sub
cmc
imul
cmp
jp
mov
xchg
lcall
cmpsl
add
add
xchg
cmp
or
xchg
jmp
loop
add
xor
add
and
adc
fwait
pop
jge
add
xchg
lea
add
add
shl
addb
mov
dec
iret
adc
test
add
add
int
pusha
sub
mov
lahf
xlat
dec
shll
dec
mov
outsl
outsb
inc
int3
jl
scas
jmp
cmp
aam
mov
daa
inc
outsl
popa
add
dec
les
sub
add
mov
add
leave
stc
outsb
pop
outsb
fildl
add
cmc
push
lds
xchg
cmp
add
add
and
outsb
les
sub
add
add
icebp
add
and
stc
mov
cli
add
push
add
add
paddsw
sahf
incl
push
or
sub
xchg
mov
inc
push
popf
push
out
lret
cmp
ss
mov
add
pop
popf
jmp
je
inc
andl
cmpsb
call
nop
scas
cmp
add
add
adc
jo
je
lcall
cmpsb
outsl
adc
pop
and
daa
and
add
ja
cmpsl
mov
test
push
push
lret
pusha
fwait
mov
sub
rorl
inc
stc
mov
pop
jnp
mov
xor
lcall
xchg
loopne
jno
es
mov
fsubr
pop
movsb
mov
ds
nop
adc
movsl
add
sub
cmpb
dec
scas
pop
push
sbb
ret
arpl
xlat
cmp
and
insb
dec
add
inc
jae
cmp
scas
jo
jl
jl
test
jle
stos
loop
add
dec
jge
push
push
jbe
aam
lret
push
xlat
pop
mov
mov
push
in
xchg
mov
movsl
leave
adc
xchg
in
outsl
lock
add
lahf
add
fidivs
add
mov
in
jns
and
xchg
jmp
jne
add
add
add
add
lret
jo
cmpsb
xchg
cwtl
sub
fmul
insb
and
push
iret
shl
sti
andl
adc
push
mov
and
adc
push
sbbb
test
pop
adcl
inc
mov
jp
mov
mov
das
dec
je
mov
adc
fadds
mov
add
ds
or
push
out
adc
les
xor
mov
lods
push
adc
pop
push
scas
out
xor
cwtl
xchg
sub
nop
inc
add
in
push
inc
mov
xchg
mov
orl
xor
or
sub
repz
pop
fcmovb
icebp
add
pop
sub
adc
lods
js
sub
out
adc
add
sub
mov
jb
lea
fcmovnb
repz
cmp
xor
adc
mov
add
aam
rcll
or
into
and
dec
out
push
inc
lods
mov
add
jno
in
inc
je
int3
or
add
loop
outsb
jg
or
add
xchg
cwtl
addr16
pop
shrb
adc
mov
rcrl
push
ljmp
or
add
cwtl
mov
pushf
or
push
push
lret
sbb
mov
ja
sbb
push
jne
or
lods
mov
add
int
jno
dec
std
mull
add
movsb
xchg
jecxz
inc
dec
xchg
xor
stos
in
xchg
pop
inc
jmpw
add
add
mov
jl
sarl
xchg
add
or
pop
mov
mov
jnp
ljmp
mov
add
add
pop
pusha
pop
pop
sbb
ret
add
add
sbb
or
dec
push
cld
push
movsb
imul
aad
jne
inc
mov
inc
xchg
dec
insl
pop
leave
jbe
cmp
sbb
jnp
mov
sub
repz
cmp
insl
pop
imul
fwait
mov
movsl
sub
and
xchg
pop
inc
push
aas
fdivr
das
add
pushf
and
mov
test
mov
and
lods
int
aas
pop
in
push
fistl
outsl
std
mov
dec
mov
lods
repnz
add
sarb
mov
cmp
fs
add
movsl
clc
push
mov
daa
test
cmp
jge
in
pop
and
imul
hlt
adc
jmp
test
or
nop
pop
pop
mov
cmp
xor
das
ret
out
or
mov
leave
lret
popf
flds
add
insl
push
pop
flds
mov
jno
aad
leave
push
add
add
mov
mov
es
or
jg
add
fistpll
sub
jb
int3
int3
int3
int3
int3
int3
int3
popf
rorl
lahf
xchg
movsb
aam
mov
sbb
sahf
jb
movsl
mov
mov
mov
popf
xchg
add
add
xchg
push
push
sti
repz
push
pop
xchg
leave
pop
cwtl
je
pop
int3
cld
mov
icebp
imul
push
jecxz
or
js
mov
add
add
add
jb
mov
xor
or
mov
fbld
add
xchg
inc
scas
in
xor
outsb
ds
mov
fcomps
cmc
cwtl
jns
filds
cltd
dec
cmc
xor
jne
add
add
adc
arpl
filds
mull
dec
sub
fisubrs
sbb
pop
add
add
mov
fcmovbe
fmulp
outsb
fs
mov
fistpll
pop
mov
xor
jle
push
add
mov
add
jl,pn
add
pushf
add
lret
sbb
lds
push
lds
outsb
add
add
sbb
mov
adcl
add
add
nop
ficompl
xor
in
xchg
popf
lock
jmp
bound
in
push
mov
into
data16
add
jle
cmc
push
rcll
cmp
test
les
mov
test
xchg
xchg
xchg
add
xchg
xchg
jne
subb
sahf
adc
pop
pop
enter
sbb
or
and
mov
xchg
dec
repz
and
xor
aas
outsb
add
sar
inc
mov
or
mov
dec
idivb
pop
mov
add
jge
jle
lock
jno
lods
nop
mov
in
dec
push
mov
lret
jge
mov
pop
mov
add
aad
jg
xchg
pop
fsub
jbe
pop
inc
mov
test
add
add
add
jae
je
jmp
insl
pop
sbb
push
add
clc
sbb
test
mov
xchg
pop
mov
fisubrl
scas
and
jb
sti
dec
dec
jno,pt
adc
nop
and
cltd
enter
out
add
imul
xor
sub
sti
repz
out
shll
ja
adc
jle
pop
jge
sbb
movsb
es
int3
cmc
add
fdivl
rcll
mov
or
aam
mov
sbb
jo
cli
or
sbb
cmpsl
mov
fcoml
sbb
push
iret
in
stos
mov
xor
cmp
ja
es
xor
xorl
shrb
es
shrb
or
outsb
insl
pop
cmc
xor
add
jno
or
sub
adc
in
pop
pushf
mov
cltd
sub
lcall
in
outsb
or
enter
in
dec
call
jae
sti
adcl
or
push
add
or
inc
xchg
or
cmpsl
clc
jno
lcall
mov
lods
xor
out
add
add
mov
add
negl
push
outsl
jno
mov
js
pop
subl
ds
add
mov
pusha
insl
add
push
push
clc
push
push
ficoms
cmp
popf
pushl
cmpsl
mov
cld
out
mov
shlb
push
fwait
mov
xchg
sub
loope
push
and
sbb
cmp
xchg
pop
inc
call
cmpsb
shl
jns
inc
jno
sbb
idivl
and
xchg
rol
add
add
cmp
mov
push
jecxz
jmp
jecxz
imul
add
add
scas
cltd
shll
adc
mov
add
rorb
inc
jmp
outsl
cmpsb
das
push
stos
sbb
test
outsb
add
in
push
sub
jl
es
sahf
mov
mov
add
mov
push
sahf
mov
rcrb
add
add
clc
inc
shlb
pop
or
or
push
xchg
mov
pop
ret
add
mov
jl
inc
cmp
inc
subb
push
push
mov
sub
dec
push
xor
and
and
and
add
in
add
int
add
push
call
add
xor
add
add
cmpsl
cmpsb
add
dec
add
bound
add
loope
add
and
insl
add
cmpsl
cmpsb
add
loope
add
xlat
push
add
int3
loope
dec
bound
add
push
pop
add
xor
mov
ljmp
pop
pop
add
sub
cld
cmp
addl
test
sub
add
sbb
add
mov
pop
add
cmp
pop
pop
mov
pop
or
xlat
push
mov
not
mov
sub
inc
scas
add
jae
add
into
push
add
idivb
add
adc
xchg
jmp
insl
add
push
add
lret
or
fisttpll
les
arpl
add
pop
cwtl
lahf
xor
cmpsb
jno
add
rolb
add
outsl
add
or
add
add
add
adc
jge
fs
sbb
adc
inc
mov
push
mov
nopl
es
lahf
add
add
mov
rcll
add
add
mov
imul
adc
inc
jae
add
add
add
ret
pop
repnz
add
aas
mov
xchg
pop
add
xor
push
fstl
loope
add
cmp
cli
sub
cltd
repnz
jns
testb
fsubs
imul
xchg
das
ret
dec
scas
xchg
mov
mov
fidivrl
fisttps
inc
cld
ds
dec
cltd
ss
test
xchg
ds
pop
and
or
dec
fadds
aas
mov
inc
pop
nop
lods
lock
and
mov
jmp
sub
mov
add
add
add
sahf
push
data16
push
jmp
sub
ljmp
mov
jecxz
fs
rcrb
cmpsb
xchg
loopne
jns
insb
push
mov
inc
imul
cmp
add
cmp
dec
mov
dec
data16
cmp
xchg
dec
xchg
mov
inc
sbb
lcall
rclb
inc
pop
out
pusha
cwtl
dec
out
add
jmp
stos
cltd
mov
push
or
pop
and
out
dec
roll
or
scas
mov
pop
sub
out
fwait
mov
pop
jo
xchg
enter
mov
fldcw
mov
xchg
mov
xchg
xchg
xor
icebp
cmp
lret
mov
mov
dec
pop
dec
lock
inc
xchg
fldt
ret
push
ss
add
fcoms
xchg
inc
or
cmpsb
mov
lret
pushf
xchg
not
test
add
daa
sbb
mov
pop
add
fs
mov
call
add
movsl
repnz
sbb
mov
mov
imul
add
add
insb
dec
sahf
out
mov
mov
adc
int
les
dec
sbb
je
mov
xchg
pop
xchg
mov
movsl
xchg
fdivs
pminub
jno
adc
stc
popa
mov
mov
xchg
nop
leave
cmp
push
bound
sub
push
rcrl
inc
arpl
les
add
push
cmc
mov
scas
add
xchg
ror
rcr
lods
sub
int3
jne
add
sub
shlb
sub
fdivrl
lahf
aas
fdivr
ja
lods
lret
int
mov
rolb
mov
push
dec
mov
add
add
cmp
pop
xchg
push
das
pusha
xor
xor
std
rol
aas
fsts
fsubl
les
push
jbe
xor
add
add
in
mov
insb
aaa
mov
and
or
lods
imul
or
or
cltd
xchg
lahf
mov
imul
scas
aad
mulb
or
add
add
test
arpl
aad
ret
push
cltd
or
das
xchg
clc
notb
cmpsb
addb
add
add
fldenv
imul
adc
call
out
pushf
test
jecxz
xchg
xchg
sti
mov
and
sub
jne
add
cwtl
je
dec
and
add
repz
imul
mov
xchg
enter
imull
fisubrl
shrb
mov
insl
sti
hlt
add
add
jbe
loope
sbb
fmull
push
divb
inc
lahf
and
std
push
divb
inc
jg
add
add
pshufw
mov
std
cltd
xchg
dec
paddusb
lret
fbstp
pop
shll
add
in
mov
outsl
aaa
mov
and
or
lods
imul
or
or
cltd
xchg
cwtl
cmpsl
cmp
cmpsl
and
jne
mov
jns
pusha
adc
in
jns
and
pop
inc
ret
pop
shrl
inc
lahf
push
or
and
lock
in
pop
subl
xor
inc
cmp
out
and
sbb
sbbb
inc
fs
or
or
leave
out
or
je
pop
and
mov
pop
sub
insb
movsl
mov
mov
shrl
xchg
cmpsl
adc
cmp
js
add
xor
in
ds
lods
lds
mov
outsl
xchg
and
or
daa
shll
xchg
ds
pop
pusha
jb
adc
cmp
int3
sub
lock
sti
cmpsl
test
ret
lcall
jo
jl
mov
stos
xor
cli
int
mov
ds
add
add
mov
inc
in
cltd
test
cwtl
cmpsb
loop
pushf
mov
mov
add
dec
or
movsl
fcomi
jmp
or
imul
jg
and
test
add
add
popa
lret
sbb
jae
push
int3
cmp
jl
xor
aam
cmpsl
mov
pop
sbb
jb
xchg
or
add
add
insl
mov
sbb
insl
mov
mov
test
pushf
cmp
pop
push
add
adc
xor
sbb
mov
aas
loopne
jnp
mov
push
cmp
jecxz
add
add
add
add
add
inc
repz
add
add
add
add
adc
add
add
add
cld
add
fsubrl
add
add
add
test
add
add
add
xor
add
add
add
add
add
add
jne
add
add
add
add
add
xchg
adc
add
add
add
cmc
add
and
add
add
add
add
add
xlat
add
add
add
add
add
incb
add
mov
pop
xchg
test
push
test
pop
add
add
add
add
add
insb
add
mov
add
add
add
add
add
mov
mov
sbb
dec
and
push
push
xchg
sbb
fwait
repnz
ss
pushf
ficoml
add
cmpsl
in
loop
fwait
stc
lret
cltd
mov
and
add
add
xchg
adc
int
cmp
add
fidivrl
mov
add
sti
sbb
cmpsl
push
pop
shlb
js
adc
xchg
add
add
in
inc
push
jb
xchg
loop
cmp
push
cmp
or
add
or
add
jg
dec
lcall
loop
scas
rorb
sbb
popf
add
lods
inc
outsb
les
sub
add
add
add
popa
push
xor
xchg
add
loopne
gs
out
inc
iret
cld
lock
sub
pop
gs
out
outsl
sbb
mov
imul
pop
dec
out
cmpsl
sbb
jbe
mov
push
push
adc
xchg
or
test
adc
test
mov
cmpsb
scas
pavgw
add
mov
xchg
loop
repz
dec
inc
lock
dec
popf
sub
mov
ljmp
dec
xor
addr16
inc
rorb
add
addl
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
ljmp
add
add
add
add
jnp
insb
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
je
movb
add
add
add
add
add
add
add
mov
push
add
add
add
add
insb
add
add
mov
out
add
add
add
add
add
add
add
incb
cld
add
add
add
add
add
sahf
add
arpl
dec
add
add
add
cmpsb
add
add
out
in
add
add
add
cmpsb
add
add
add
add
add
add
add
add
and
jl
push
add
dec
add
add
adc
mov
mov
jp
cmp
lock
add
cmc
add
add
verr
add
faddl
sahf
add
push
add
add
stc
push
sub
or
mov
dec
mov
jle
sbb
or
and
std
or
lcall
push
aas
ret
ljmp
lods
das
sub
sti
push
add
add
jecxz
je
cmp
adc
fdivr
cmp
push
pushl
popf
movsb
add
lods
stos
idiv
fcmovu
lea
mov
mov
xchg
add
add
add
add
add
add
dec
add
add
pop
add
in
add
add
add
add
add
add
add
jecxz
and
lds
popf
add
sub
jbe
outsl
add
add
add
adc
je
movb
add
add
add
add
add
add
inc
add
add
mov
push
cmp
mov
pop
add
add
fsubl
in
imul
push
xchg
xchg
loop
xor
loopne
jb
fstpl
lret
call
dec
data16
push
xor
xchg
add
sub
push
icebp
add
call
dec
xor
bnd
cmpsb
cwtl
imul
jae
mov
dec
into
popl
add
imul
mov
mov
ret
jle
sbb
or
and
in
add
idiv
pop
mov
push
aas
shr
cmp
fs
add
add
lods
jl
xor
xchg
insb
shl
stos
roll
inc
data16
add
mov
pop
arpl
push
inc
add
dec
imul
in
imul
add
jae
rolb
or
push
inc
xchg
mov
mov
xor
jmp
adc
arpl
jecxz
pop
xchg
jmp
pop
push
out
out
xchg
daa
jae
movsb
mov
sahf
pop
adc
mov
mov
sbb
push
sahf
out
mov
repz
lret
lret
lock
fs
js
inc
jae
pop
mov
in
out
enter
jns
push
js
data16
dec
cmp
sti
or
adc
cmpsb
cmpsb
sbb
scas
out
and
testb
jb
cli
shl
shll
xor
mov
dec
mov
xchg
in
and
xchg
fldl
sbb
and
scas
test
adc
imulb
test
or
stos
aam
xchg
jns
inc
movsl
xor
add
loopne
pop
adc
scas
inc
add
cmp
push
push
cwtl
mov
ret
jns
pop
pusha
popf
push
inc
adcb
mov
mov
xor
in
xor
push
mov
pop
xchg
jmp
xchg
inc
ds
insb
jno
xchg
lock
and
int
pop
adc
xor
in
jmp
sbb
jo
fs
jb
out
dec
adcb
shrl
adc
repnz
aaa
stos
inc
xchg
inc
dec
les
push
inc
pop
out
pop
push
testb
into
ret
pop
test
or
mov
sbbl
cs
jns
pop
push
xor
mov
lea
loope
iret
xor
clc
pop
or
inc
insl
mov
and
sub
and
dec
mov
add
cmpsw
sub
add
jnp
inc
loope
mov
lods
addl
push
lcall
fwait
int3
in
in
mov
addr16
sbb
decb
clc
and
jecxz
rol
add
ror
aas
sub
push
insb
mov
in
pop
incb
inc
ja
in
stc
iret
rcrb
push
aaa
adc
pop
sbb
xor
push
push
fnsave
xor
ss
pop
cmpsl
push
out
imul
sbb
outsl
mov
in
inc
adcl
jmp
adc
cmc
xchg
fsubs
cmp
inc
dec
push
inc
pop
out
pop
pop
testl
pop
scas
jge
in
test
add
test
sbb
push
das
xor
mov
shl
js
pop
push
xor
push
daa
cwtl
mov
daa
int3
xor
add
test
cmp
pop
shll
inc
pop
in
inc
dec
test
add
pop
dec
sahf
es
std
inc
lret
leave
push
ret
lahf
sbb
insl
push
cmc
cwtl
pop
orb
icebp
out
add
add
add
test
add
dec
sbb
cwtl
popf
mov
add
adc
cmp
add
mov
add
fcmove
or
aad
and
xchg
sbb
add
add
int3
cmc
in
imul
add
add
mov
add
add
dec
test
add
ljmp
add
bound
add
xor
and
push
add
and
std
adc
add
push
add
test
add
hlt
lea
in
inc
xorb
add
cwtl
scas
jno
mov
add
sahf
or
adc
add
add
add
fs
addr16
dec
cmpsl
mov
add
mov
xchg
nop
add
mov
subb
add
aas
aaa
adc
xchg
or
add
out
add
sbb
add
push
add
mov
insb
add
and
add
cvtps2pi
cmp
clc
enter
mov
shlb
xchg
arpl
add
rcl
ss
sbbl
sub
fs
dec
shlb
repnz
cmpsb
sub
sti
add
add
stc
push
add
add
add
sarb
sub
faddl
loope
dec
fldl
add
add
dec
xor
add
add
pop
cld
adc
sarb
add
fwait
call
add
add
add
mov
add
inc
xchg
add
add
xor
pusha
add
add
sbb
add
add
add
xchg
xchg
jb
add
add
popa
xchg
test
add
add
fisttpll
mov
add
add
inc
cmp
add
add
sbb
add
add
repnz
repnz
add
cwtl
incb
add
add
rolb
scas
mov
add
add
add
dec
mov
add
add
pushf
add
adc
add
fcoms
dec
add
add
daa
iret
or
add
add
pop
rorb
cs
add
add
or
add
addr16
scas
int3
add
add
cmpb
add
add
adc
xchg
add
add
xor
sbb
push
or
add
add
lods
and
sbb
add
add
sub
add
add
test
add
add
popl
push
and
jne
mov
add
add
dec
mov
add
jl
push
sub
add
add
dec
pop
jb
add
add
sub
dec
subb
lea
add
add
and
testl
sub
add
test
add
add
popf
add
add
add
add
add
fldt
add
scas
mov
add
mov
pushf
add
add
add
jns
loope
add
add
mov
dec
add
add
mov
add
sbb
add
and
push
add
add
and
pop
add
add
mov
add
add
icebp
add
add
add
add
add
push
push
or
add
add
daa
es
add
add
push
add
add
add
mov
add
mov
add
add
mov
add
jns
sub
add
push
test
add
add
pop
mov
and
add
add
add
add
sbb
add
add
add
add
add
pop
cmc
into
add
add
adc
jae
add
add
lods
mov
add
add
add
inc
repz
add
ljmp
add
pusha
cmc
adc
inc
hlt
push
add
loope
add
add
mov
add
cmp
je
xor
imul
test
xchg
add
adc
add
push
les
adc
sbb
les
add
js
jne
mov
divb
add
and
add
in
add
xchg
and
add
jmp
jg
pop
pop
jo
adc
fwait
add
jne
sbb
rolb
fldenv
and
add
popl
cmp
add
push
push
call
add
and
dec
add
jle
pop
mov
add
mov
std
add
incl
cmp
cltd
add
or
mov
add
lea
add
mov
add
fbstp
add
enter
jo
add
testb
or
add
jnp
add
add
fadd
ja
rol
sahf
mov
ret
insl
or
add
xchg
adc
lret
lods
sub
repz
add
lea
mov
in
jmp
add
mov
cwtl
cmpsb
jecxz
cli
stos
outsb
xchg
fadds
add
aas
cmp
mov
or
out
je
and
add
sub
sub
add
pop
mov
insb
mov
les
cltd
inc
pop
mov
add
sbb
ficoml
jne
ljmp
mov
sbbb
sbb
movups
xchg
fnstsw
dec
and
cmp
sub
in
xchg
test
into
jecxz
rclb
and
xchg
arpl
cwtl
mov
ljmp
cmp
pop
fidivrl
jmp
aas
sbb
mov
in
jo
cmp
pop
jge
pop
mov
ret
int
sub
ret
pushf
mov
cli
rorl
mov
stos
mov
add
lds
dec
sub
mov
mov
in
sbb
sbb
add
fnstsw
pop
push
add
cwtl
add
sbb
mov
adc
add
lock
outsl
adc
call
add
daa
fistps
add
sub
cli
loopne
add
mov
add
sub
movsl
sbb
xor
or
push
add
les
push
test
add
mov
mov
test
cmp
push
add
push
ja
sub
into
inc
cmp
cld
add
jmp
inc
out
stos
cmpsl
push
sbb
shl
iret
mov
cld
movsl
add
ret
push
push
or
arpl
and
dec
add
inc
idivl
int
push
divb
pop
dec
add
lods
inc
jmp
jge
icebp
jg
or
pop
add
push
pop
pop
subb
add
insl
test
inc
or
movsb
in
enter
iret
mov
lods
mov
popa
push
add
sbb
movsl
and
xor
add
adc
fdivr
aas
stos
mov
ljmp
add
fbld
iret
mov
mov
sbb
fstl
push
insb
add
cmp
or
or
daa
rcll
dec
mov
popa
add
cmp
adc
loope
lds
adc
jns
cwtl
add
push
dec
xor
adc
adc
in
mov
xchg
sbb
add
loopne
mov
cwtl
pushf
xchg
cmp
add
sub
push
mov
mov
jne
scas
jmp
xor
xchg
scas
mov
add
clc
mov
stc
mov
shlb
test
dec
stos
add
aam
ds
mov
inc
popf
add
sarb
dec
repnz
push
lahf
add
mov
out
out
mov
jnp
and
ret
mov
aam
add
inc
push
repz
lret
addb
stos
mov
lods
cwtl
int3
push
add
ja
push
push
pop
pop
dec
cmc
int
insb
add
in
sbb
repz
int
or
das
mov
gs
mov
mov
sbb
push
sbb
add
xlat
cld
in
jp
fs
add
ss
push
jns
cmp
sbb
add
push
pop
mov
repz
jge
lock
mov
push
add
mov
rclb
add
out
lods
add
lds
mov
xchg
push
cmp
fldenv
flds
cmp
add
mov
or
jmp
mov
add
cmc
movsl
lret
test
dec
sbb
add
scas
inc
mov
outsb
xorb
add
jmp
pop
popf
add
add
iret
leave
in
add
add
add
rolb
pop
add
add
mov
add
add
add
mov
add
js
push
add
add
adcl
xor
add
add
add
add
add
add
and
popa
add
add
add
fistpll
mov
add
dec
insb
cltd
add
add
add
xchg
and
add
iret
std
add
add
add
incl
popf
add
add
add
add
add
cs
add
fiadds
repz
add
dec
lahf
add
sbb
add
add
sub
das
add
add
add
add
add
add
add
into
adc
or
add
inc
cmp
sbb
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
aam
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
js
add
add
add
testl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
enter
mov
add
add
add
add
add
add
add
add
add
xor
add
movsl
add
add
add
add
add
pop
add
add
add
jmp
add
mov
add
jb
add
icebp
add
add
add
iret
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
loopne
add
rolb
add
int
add
insl
add
add
add
add
add
add
add
add
add
filds
add
pop
add
add
add
jp
add
movsb
add
add
add
add
add
jbe
add
jbe
add
std
add
add
add
fxch
add
jge
add
imul
add
push
pop
sldt
pop
add
imul
jne
xchg
add
add
movsb
fsub
add
mov
ds
jae
add
add
sbb
xor
in
sbb
out
dec
mov
sti
mov
int3
jne
dec
mov
add
add
add
bound
ds
xchg
sbb
xor
jge
fcompl
add
int3
xchg
out
js
fisttps
fsubl
fstp
orl
add
add
pop
clc
xchg
xor
testb
cmp
sti
add
fcompl
popl
popf
xchg
mov
jle
out
clc
sbb
cld
fistps
lods
pusha
sbb
outsl
mov
add
add
inc
mulb
dec
test
subl
xchg
cmp
add
add
or
test
lock
xchg
pop
cltd
test
inc
add
data16
add
add
or
cmp
pusha
mov
mov
mov
adc
aam
add
jg
idivl
movsb
add
cli
call
add
add
add
jmp
add
add
add
outsl
aam
add
add
add
pop
imul
add
add
mov
mov
in
add
add
xor
add
add
loop
add
add
add
add
add
add
adc
or
add
add
add
add
adc
add
add
jecxz
add
push
in
push
push
jmp
sbb
add
jle
dec
pop
add
add
insb
flds
add
jbe
stc
mov
test
testb
mov
lahf
sbb
add
add
add
add
add
add
add
inc
add
add
and
jmp
add
add
sub
pushl
add
add
add
add
add
add
add
shl
and
in
jae
out
add
mov
add
add
dec
add
incl
icebp
sub
mov
outsl
add
add
push
test
popa
aam
add
add
xchg
daa
filds
jge
das
add
pop
test
add
cs
add
inc
cld
add
sete
pop
and
add
movb
ja
add
icebp
add
add
loop
cli
adc
add
pushf
add
scas
mov
add
mov
add
xor
dec
jge
add
push
add
push
cmp
iret
repnz
lock
push
daa
roll
push
insl
add
lods
add
push
test
add
add
jecxz
add
xor
daa
push
fildl
dec
sbb
add
shlb
cmp
jno
mov
inc
add
add
add
add
add
mov
add
add
imul
add
hlt
add
adc
add
and
push
and
adc
push
add
xchg
fildl
sbb
mov
add
add
add
add
jbe
jecxz
add
add
int
add
add
add
ja
loope
add
add
add
add
jge
add
add
fwait
add
push
or
add
add
add
add
pop
mov
add
add
loopne
dec
frstor
add
add
add
add
add
add
add
add
add
add
flds
add
add
call
add
add
add
jl
add
leave
add
add
add
add
add
lea
add
repz
add
insl
add
subb
add
mov
int
add
es
add
add
fs
add
add
add
movsb
lds
dec
js
jmp
iret
xchg
pop
and
push
sahf
in
mov
aas
push
ss
out
mov
movsl
imul
push
scas
add
mov
stos
data16
addb
add
push
xchg
jmp
push
ret
mov
imull
jle
sbb
and
or
inc
in
sbb
bound
inc
stc
daa
inc
je
inc
mov
xor
sub
mov
out
rclb
push
mov
popa
imul
loope
pop
fwait
mov
or
push
push
lret
xor
lods
push
fwait
enter
mov
adc
dec
stos
cmc
push
pop
iret
xchg
pop
cmp
lock
add
and
je
cltd
jmp
shlb
mov
lea
inc
lea
jbe
lahf
test
jo
sub
enter
xchg
ljmp
dec
lahf
out
mov
cmp
cmp
mov
sub
cmp
or
xor
push
xchg
imul
loop
lods
pushf
mov
inc
stos
mov
xchg
sbb
pminub
cmp
call
mov
cltd
xchg
sbb
cwtl
lea
into
mov
sar
jne
mov
adc
xor
movsb
ret
jecxz
push
push
cmpsb
fsts
fistps
int
mov
adc
insb
sar
stos
aad
mov
mov
inc
out
and
data16
sbb
jecxz
pop
popf
mov
push
fistl
leave
cmp
lret
loope
mov
pop
fs
dec
scas
repnz
mov
imul
push
push
and
jno
add
sub
mov
mov
push
or
xchg
scas
jge
mov
rol
jne
cwtl
xorb
out
fmul
das
pop
lret
out
je
out
das
lret
xchg
inc
cmp
xorb
jmp
das
adc
push
push
stc
aas
call
insb
mov
push
add
ret
movsl
imul
xchg
pushf
outsb
sbb
sbb
jle
fprem
jae
scas
dec
cltd
mov
add
mov
bound
push
sbb
cld
shll
xlat
jecxz
xor
mov
push
push
ror
imul
in
stos
and
enter
adc
jle
adc
or
lret
fisubs
sarl
mov
aaa
mov
cmp
mov
jle
adc
xchg
mov
iret
jmp
loope
imul
mov
int
fstps
mov
movsb
inc
pop
adc
sub
lds
mov
cwtl
push
jg
xor
jno
pop
popf
pop
jmp
xchg
inc
roll
in
pop
pop
mov
push
test
mov
lods
lea
lods
hlt
cmp
jb
loopne
in
int
xor
push
imul
rcll
sarl
dec
test
push
arpl
popl
cltd
push
or
insb
fdivl
jecxz
jecxz
mov
arpl
call
je
jno
inc
jle
shrl
push
shll
fldl
leave
jne
cmp
cmp
cld
mov
rcl
fsubr
ja
dec
js
adc
jl
mov
ficompl
lock
inc
mov
pop
ss
cmp
pusha
mov
jp
cwtl
les
scas
push
xor
ja
ljmp
out
jmp
add
cmp
stos
dec
sbb
mov
lea
loope
ror
sbb
xor
push
add
mov
cltd
data16
cmpsb
jge
call
movsl
push
inc
push
test
dec
jb
mov
sbb
mov
icebp
cmp
xchg
ror
pop
xor
mov
dec
or
or
sub
pop
jne
imul
andb
loope
shrl
push
and
pop
cmpl
lret
mov
jl
push
pop
imul
iret
push
idivl
movsl
into
rcr
push
imulb
push
mov
adc
test
jno
inc
icebp
ds
hlt
daa
cld
mov
dec
jne
sbb
sti
dec
mov
fstps
aas
movsb
out
inc
mov
and
inc
mov
testl
mov
bnd
inc
mov
arpl
stc
mov
dec
into
loop
pop
mov
mov
clc
aaa
mov
in
les
sti
les
or
add
stos
xor
inc
sub
xchg
mov
cld
mov
mov
call
pop
outsl
lods
popf
xor
fstpt
or
dec
pop
sbb
sbb
sub
sbb
jg
dec
mov
and
jecxz
rorl
add
mov
and
in
fidivrl
mov
jnp
cld
adc
insl
je
inc
dec
inc
aam
enter
push
mov
fildl
imul
jle
cld
mov
scas
test
out
jb
dec
ja
sbb
test
scas
xor
add
or
inc
mov
sbb
inc
fadds
mov
ret
leave
jge
add
mov
loope,pn
jb
adc
ljmp
stos
lock
sbb
cmpsb
xor
mov
jecxz
iret
cwtl
sbb
or
lahf
notl
xchg
popf
out
je
mov
andb
jp
jmp
test
cmp
les
lds
ds
insb
xor
and
pop
xor
dec
adc
dec
inc
push
fstps
pop
jo
dec
add
lahf
jge
and
xchg
iret
push
dec
cltd
pushf
push
or
pop
lcall
inc
in
mov
push
add
sti
jge
sbb
imul
inc
dec
inc
in
xchg
call
pop
test
pop
lcall
cmp
mov
scas
scas
repnz
sbb
push
iret
test
aaa
push
pop
sbb
movsl
shrb
pop
and
inc
pop
cmp
in
jge
sbb
mov
sub
jno
out
mov
into
aas
hlt
adc
pop
pop
cli
mov
scas
dec
adc
inc
mov
and
mov
outsb
jecxz
adc
movsl
inc
mov
jns
negl
xchg
xchg
shlb
stos
push
pop
std
mov
popa
in
push
xor
push
fldt
adc
push
dec
sub
and
sub
jecxz
push
mov
dec
xor
push
or
push
dec
lret
das
fcomps
fbstp
dec
pushf
add
xchg
and
loop
into
lds
mov
push
or
sahf
fwait
dec
xchg
xchg
fidivl
ret
in
cmp
pop
mov
jns
xchg
pop
jnp
icebp
sbb
jnp
inc
in
nop
icebp
and
repnz
sbb
fistpl
adc
xorl
mov
scas
scas
lcall
sbb
jp
mov
leave
mov
ficomps
sub
mov
and
inc
cltd
cmp
enter
lcall
jge
sbb
adc
cmp
xchg
xor
fisttpll
mov
and
xchg
in
xor
jp
stc
pop
int
xchg
jmp
pop
sti
pushf
popa
test
jl
in
push
jno
mov
mov
vmovddup
lea
in
and
xor
push
cmp
jp
loope
adc
push
dec
jecxz
add
and
pop
cltd
push
mov
fnstsw
or
lods
test
sahf
outsl
repnz
xchg
aad
repz
ds
mov
js
push
push
jne
loopne
jl
jbe
jp
jne
push
lret
repz
outsl
or
mov
out
jge
mov
jo
fsubr
ret
sub
test
insl
inc
xor
jns
and
icebp
fstl
gs
aam
inc
adcb
xchg
in
es
inc
ljmp
shl
and
pop
idivb
pop
nop
mov
jb
inc
rclb
out
rcll
ret
sbbl
in
testl
pop
cmp
lods
loopne
adc
je
sti
outsb
or
shrl
mov
dec
pop
stc
sahf
outsl
xchg
data16
push
push
add
lods
sub
mov
ret
shlb
mov
and
lcall
and
es
or
sbb
iret
and
sbb
insl
scas
push
sbbb
jp
or
test
movsb
lahf
lods
idivl
lcall
icebp
ret
mov
jne
push
push
js
cmc
sbb
ja
inc
insb
inc
jmp
in
aad
pop
fldt
sarb
jl
lods
lock
out
sarl
das
pop
lods
mov
inc
jb
data16
fs
cmp
adc
bound
xlat
push
pop
adcl
fsubs
adcl
bound
sub
jp
loopne
add
push
push
add
push
adc
mov
dec
or
mov
mov
repnz
xlat
fdivrp
cld
lods
and
ja
fcompl
xchg
scas
insl
xor
notb
out
das
sub
mov
in
mov
fmull
repnz
dec
mov
daa
pop
addr16
sbbb
pop
and
aaa
sub
add
rolb
mov
jbe
das
ljmp
inc
gs
add
bound
test
xor
aad
call
ja
push
jb
lret
sbb
dec
testb
out
pop
hlt
pop
shrl
ret
je
lret
and
test
sbb
sub
jno
lea
call
adc
inc
sub
adc
mov
daa
xor
xor
lcall
mov
jnp
jecxz
mov
cmp
rcrl
imul
cmc
out
mov
mov
xchg
mov
xlat
sbb
clc
cltd
jecxz
xor
or
mov
dec
inc
testb
out
push
pop
into
mov
das
cmp
ss
ror
out
rclb
jmp
push
addr16
lock
xor
mov
outsb
add
and
and
fsubrl
mov
push
repz
stc
in
leave
jle
mov
sahf
mov
popf
faddl
lret
jmp
notb
or
jb
andl
lods
loop
jmp
addr16
adc
fistl
fcoml
lret
popf
stos
jmp
icebp
or
scas
cmpsl
fists
inc
add
repnz
aam
out
lcall
inc
mov
pop
out
int3
cmp
stos
or
mov
pop
inc
xor
test
mov
dec
sbb
gs
test
cmpsb
mov
dec
add
scas
sbb
rorb
mov
fcmovb
shlb
xchg
testl
fldl
call
stos
leave
jnp
lea
pop
enter
inc
xorb
into
sbb
mov
push
aad
in
enter
add
jno
lds
enter
sub
add
insl
movsb
dec
nop
push
or
stc
inc
leave
xorl
mov
int
mov
ljmp
or
jo
je
dec
inc
test
xchg
jb
sub
xchg
ret
movb
movaps
mov
jecxz
les
decb
mov
cmp
iret
push
pop
insl
pop
arpl
test
ds
les
daa
fisubrs
daa
adc
or
enter
scas
inc
fnstenv
ds
inc
mov
sbb
mov
push
aam
xor
lods
pop
adc
scas
xor
decb
mov
movsb
nop
call
jg
in
add
mov
xchg
pusha
leave
mov
push
and
fcoms
push
lahf
mov
inc
jp
cltd
stc
sbb
mov
daa
stc
xchg
hlt
std
push
or
mov
dec
xor
lds
leave
or
ret
test
ja
mov
jecxz
into
jbe
mov
stos
or
pop
mov
movsb
push
jecxz
out
or
fistps
dec
xchg
pusha
push
dec
dec
repz
push
jecxz
inc
and
xchg
fsubp
cmpsb
inc
sub
mov
into
fwait
repnz
dec
xchg
iret
mov
and
mov
jno
je
sub
jp
lahf
test
mov
or
or
and
and
dec
scas
push
xor
enter
or
cli
data16
inc
pop
mov
dec
repz
cld
std
xor
dec
add
cmpsb
xor
mov
notl
scas
cmp
jae
std
out
jl
xchg
jb
aam
mov
mov
lahf
out
das
mov
fisubrs
lods
imul
cwtl
andb
das
pop
inc
daa
lret
out
popw
push
or
popf
and
mov
ret
into
and
adc
std
inc
pop
pushf
sti
out
jne
int
loop
sbb
lcall
dec
mov
ljmp
cmc
jecxz
jmp
xor
and
pop
sub
mov
sub
mov
es
mov
test
jle
sbb
rclb
cmp
bound
test
mov
pushf
aaa
shll
lds
addb
xor
inc
xor
mov
mov
dec
add
and
mov
cmp
mov
outsb
hlt
dec
imul
aaa
mov
mov
mov
cmp
lea
aam
mov
int
mov
jnp
xchg
xchg
pusha
inc
enter
out
pusha
mov
push
push
loopne,pt
cmp
or
mov
push
test
das
pop
pop
push
leave
sbb
call
sbb
in
jmp
and
lods
push
imul
in
loope
and
test
push
pop
xchg
push
outsb
adc
rcl
call
out
xor
jae
outsb
insb
dec
ljmp
outsb
dec
push
addb
mov
or
shrl
movsl
in
test
popa
addl
decl
pop
popa
jge
cmpsl
push
sbb
in
adc
add
xlat
repnz
inc
lea
lret
inc
lds
xorl
lret
jnp
cmovns
xor
jne
xchg
push
data16
push
aaa
mov
lds
add
mov
mov
sub
orb
lahf
push
ds
push
jno
in
adc
mov
xchg
sbb
mov
setle
xor
xchg
stos
mov
repnz
out
or
fcompl
push
icebp
push
ret
in
push
out
lea
dec
add
cmp
movsb
xchg
jecxz
xchg
sbb
bound
ja
jle
sbb
push
fs
imul
int
jecxz
xor
inc
lock
xor
push
repz
insb
inc
dec
decb
mov
jo
pop
mov
jb
mov
inc
cld
xchg
mov
loop
jle
lret
pop
push
outsb
push
xlat
or
clc
je
or
sub
cmp
cld
adc
mov
push
sub
fimuls
rcll
int
xchg
repz
dec
arpl
jle
inc
in
and
gs
pushf
ds
stc
scas
popl
xor
lods
div
mov
push
sub
cmp
out
addr16
mov
orb
or
cmp
and
mov
lea
mov
cmp
push
push
pop
lret
mov
or
sbb
pop
into
sub
xor
lods
fcmovnu
xor
jnp
jb
xlat
aaa
add
jl
jbe
stc
jbe
push
sbbl
out
stc
sub
jmp
aam
xor
insb
dec
push
mov
dec
inc
push
loope
add
mov
mov
pop
mov
or
into
movsb
adc
ja
inc
xchg
pushf
lock
es
jae
outsl
ds
pop
sub
or
rcl
adc
push
cmpb
cs
inc
mov
lcall
cli
cmp
sahf
adc
ds
mov
mov
imul
aad
mov
xchg
fistpl
idiv
cmp
mov
test
xor
sbb
les
fstp
es
mov
pop
out
aas
in
gs
adc
mulb
lods
adc
dec
sbb
int
int3
int
sti
xor
pop
data16
cltd
outsl
aam
jns,pt
jge
push
mov
inc
dec
mov
push
not
repnz
in
scas
aam
xor
dec
dec
shrl
pop
push
ljmp
test
xchg
cmp
inc
mov
hlt
repz
mov
adcl
add
sarl
mov
addr16
imul
mov
and
xor
loopne
adc
sub
pop
lret
fldenv
cmpsb
lods
roll
and
sub
dec
inc
xchg
std
xor
dec
popa
mov
pop
mov
mov
int
addr16
lcall
aas
sahf
add
imul
xchg
pusha
ds
out
cli
and
fildl
popf
inc
aad
aad
and
ds
mov
stos
fimuls
and
fidivrs
jmp
fnstcw
dec
jmp
xor
jl
dec
mov
add
jo
and
mov
pop
jle
mov
adc
clc
cwtl
xchg
xchg
xor
pop
test
dec
cld
aad
ss
ss
cld
mov
mov
pop
add
or
subb
pop
mov
and
mov
mov
in
ja
inc
leave
sub
or
shrb
loope
jp
test
xchg
or
push
mov
fiadds
mov
cld
inc
hlt
rolb
pushl
int3
jbe
lcall
jns
out
mov
xchg
xchg
lcall
movb
or
xor
lock
orl
add
xor
mov
shlb
ljmp
mov
adc
mov
push
inc
arpl
jae
mov
dec
adc
push
rol
lret
stos
pop
scas
push
lcall
cmp
ljmp
jne
loope
jl
sbb
mov
push
sti
lock
fisubl
mov
xchg
or
xor
xchg
add
pop
mov
mov
jnp
rorb
add
int3
push
push
xchg
mov
pop
xor
stc
notb
push
bound
mov
in
mov
push
decb
add
cmpsl
inc
outsl
adc
ret
fwait
dec
pop
test
cmp
mov
dec
mov
push
clc
push
arpl
jge
popa
lock
cld
fsubl
fsubl
gs
xchg
stc
sarl
les
call
sbb
loope
das
push
std
test
loopne
fdivl
clc
adc
roll
lahf
scas
pop
cli
pop
or
jg
pop
push
mov
loop
cmp
outsl
out
and
incl
addr16
jmp
hlt
popa
mov
test
sbb
test
rcrl
cmp
mov
jnp
xor
imul
lea
mov
outsl
roll
xchg
fnsave
and
pop
subb
shlb
dec
or
sbb
xchg
xor
jns
leave
mov
push
mov
xchg
add
dec
mov
push
and
ret
into
scas
mov
sbb
enter
sub
lods
dec
pushf
movsl
cmp
adc
xlat
lcall
and
push
mov
xor
sub
or
mov
mov
data16
xchg
adc
movsb
mov
jo
test
int3
call
push
pop
sbb
out
xor
sub
hlt
filds
enter
cmpsb
push
and
inc
sbb
xor
cwtl
jge
push
push
mov
pusha
mov
sbb
jne
adcb
and
inc
iret
and
push
fsubl
out
adc
jp
jb
dec
push
ja
rclb
adc
mov
push
jecxz
faddl
into
subl
arpl
pop
scas
push
pop
aaa
pop
in
push
and
cli
mov
xchg
dec
mov
sbb
test
sbb
xchg
sbb
mov
aas
fwait
mov
data16
mull
inc
push
or
imul
dec
cltd
pop
les
in
mov
push
mov
pop
or
and
lock
add
cmp
addr16
test
mov
aad
adc
loop
xchg
xor
call
mov
push
icebp
pushf
lret
jno
xlat
ljmp
pop
lea
lret
mov
mov
sbb
iret
mov
jns
ljmp
test
fdivrs
stc
and
cmpsb
faddp
fnstcw
fwait
dec
cmpsl
jnp
xchg
cmpsl
insb
ret
sbb
jl
bound
shlb
mov
push
mov
push
or
cmp
push
xchg
adc
fdivrs
and
mov
pop
and
ret
mov
jle
mov
xor
adc
in
sub
xchg
or
pop
sbb
neg
mov
fldenv
jmp
sti
std
and
loopne
scas
inc
subb
fsts
mov
shll
sub
dec
cmpsl
rolb
xchg
adc
sub
or
ja
loopne
andl
xchg
rcrl
cmpsl
add
fistl
popf
rcrl
adc
xchg
cmp
out
adcl
or
loopne
rcl
sbb
fcmovb
xor
mov
popf
test
daa
int
popa
mov
lret
orb
push
int3
out
sub
mov
dec
loop
push
movsb
and
inc
fnstcw
push
scas
jge
sti
mov
fsts
and
icebp
xor
frstor
mov
pop
into
or
rclb
scas
inc
pushf
jbe
into
cmp
xor
out
lea
sub
imul
xchg
mov
shrb
cmp
add
addb
cs
icebp
xchg
adc
cmp
mov
push
add
pop
add
fsubs
adc
and
pop
test
and
or
imul
push
adc
mov
lea
inc
clc
adc
cmpsb
xchg
cmp
in
lds
test
daa
testl
es
ljmp
add
pop
push
add
pop
mov
bound
fidivrs
data16
sahf
cmp
pop
fldt
stc
outsl
xchg
push
mov
std
std
xchg
loop
xor
jp
imul
ja
ret
lret
add
sub
push
sub
lret
out
push
inc
dec
or
xor
aam
lcall
jb
pop
dec
or
lea
push
fldt
insb
sbb
adc
orb
notl
cmpsb
dec
dec
aas
mov
add
